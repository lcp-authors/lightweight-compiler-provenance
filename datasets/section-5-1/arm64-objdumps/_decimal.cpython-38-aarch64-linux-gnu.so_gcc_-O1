
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006438 <.init>:
    6438:	stp	x29, x30, [sp, #-16]!
    643c:	mov	x29, sp
    6440:	bl	6aa0 <PyFloat_FromString@plt+0x10>
    6444:	ldp	x29, x30, [sp], #16
    6448:	ret

Disassembly of section .plt:

0000000000006450 <memcpy@plt-0x20>:
    6450:	stp	x16, x30, [sp, #-16]!
    6454:	adrp	x16, 5b000 <PyInit__decimal@@Base+0x40e60>
    6458:	ldr	x17, [x16, #4088]
    645c:	add	x16, x16, #0xff8
    6460:	br	x17
    6464:	nop
    6468:	nop
    646c:	nop

0000000000006470 <memcpy@plt>:
    6470:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16]
    6478:	add	x16, x16, #0x0
    647c:	br	x17

0000000000006480 <PyUnicode_FromFormat@plt>:
    6480:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #8]
    6488:	add	x16, x16, #0x8
    648c:	br	x17

0000000000006490 <memmove@plt>:
    6490:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #16]
    6498:	add	x16, x16, #0x10
    649c:	br	x17

00000000000064a0 <PyList_New@plt>:
    64a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #24]
    64a8:	add	x16, x16, #0x18
    64ac:	br	x17

00000000000064b0 <_PyUnicode_Ready@plt>:
    64b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #32]
    64b8:	add	x16, x16, #0x20
    64bc:	br	x17

00000000000064c0 <PyDict_SetItemString@plt>:
    64c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #40]
    64c8:	add	x16, x16, #0x28
    64cc:	br	x17

00000000000064d0 <strlen@plt>:
    64d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #48]
    64d8:	add	x16, x16, #0x30
    64dc:	br	x17

00000000000064e0 <PyDict_Size@plt>:
    64e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #56]
    64e8:	add	x16, x16, #0x38
    64ec:	br	x17

00000000000064f0 <mbstowcs@plt>:
    64f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #64]
    64f8:	add	x16, x16, #0x40
    64fc:	br	x17

0000000000006500 <PyModule_AddIntConstant@plt>:
    6500:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #72]
    6508:	add	x16, x16, #0x48
    650c:	br	x17

0000000000006510 <raise@plt>:
    6510:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #80]
    6518:	add	x16, x16, #0x50
    651c:	br	x17

0000000000006520 <PyArg_ParseTupleAndKeywords@plt>:
    6520:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #88]
    6528:	add	x16, x16, #0x58
    652c:	br	x17

0000000000006530 <PyList_AsTuple@plt>:
    6530:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #96]
    6538:	add	x16, x16, #0x60
    653c:	br	x17

0000000000006540 <strtoll@plt>:
    6540:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #104]
    6548:	add	x16, x16, #0x68
    654c:	br	x17

0000000000006550 <PyObject_CallMethod@plt>:
    6550:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #112]
    6558:	add	x16, x16, #0x70
    655c:	br	x17

0000000000006560 <PyMem_Free@plt>:
    6560:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #120]
    6568:	add	x16, x16, #0x78
    656c:	br	x17

0000000000006570 <PyUnicode_FromWideChar@plt>:
    6570:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #128]
    6578:	add	x16, x16, #0x80
    657c:	br	x17

0000000000006580 <PyObject_GetAttrString@plt>:
    6580:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #136]
    6588:	add	x16, x16, #0x88
    658c:	br	x17

0000000000006590 <__cxa_finalize@plt>:
    6590:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #144]
    6598:	add	x16, x16, #0x90
    659c:	br	x17

00000000000065a0 <_PyLong_New@plt>:
    65a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #152]
    65a8:	add	x16, x16, #0x98
    65ac:	br	x17

00000000000065b0 <fputc@plt>:
    65b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #160]
    65b8:	add	x16, x16, #0xa0
    65bc:	br	x17

00000000000065c0 <PyUnicode_AsUTF8String@plt>:
    65c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #168]
    65c8:	add	x16, x16, #0xa8
    65cc:	br	x17

00000000000065d0 <_Py_Dealloc@plt>:
    65d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #176]
    65d8:	add	x16, x16, #0xb0
    65dc:	br	x17

00000000000065e0 <PyErr_NoMemory@plt>:
    65e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #184]
    65e8:	add	x16, x16, #0xb8
    65ec:	br	x17

00000000000065f0 <PyErr_SetObject@plt>:
    65f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #192]
    65f8:	add	x16, x16, #0xc0
    65fc:	br	x17

0000000000006600 <__ctype_tolower_loc@plt>:
    6600:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #200]
    6608:	add	x16, x16, #0xc8
    660c:	br	x17

0000000000006610 <snprintf@plt>:
    6610:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #208]
    6618:	add	x16, x16, #0xd0
    661c:	br	x17

0000000000006620 <log10@plt>:
    6620:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #216]
    6628:	add	x16, x16, #0xd8
    662c:	br	x17

0000000000006630 <localeconv@plt>:
    6630:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #224]
    6638:	add	x16, x16, #0xe0
    663c:	br	x17

0000000000006640 <malloc@plt>:
    6640:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #232]
    6648:	add	x16, x16, #0xe8
    664c:	br	x17

0000000000006650 <PyErr_SetString@plt>:
    6650:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #240]
    6658:	add	x16, x16, #0xf0
    665c:	br	x17

0000000000006660 <PyObject_IsInstance@plt>:
    6660:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #248]
    6668:	add	x16, x16, #0xf8
    666c:	br	x17

0000000000006670 <memset@plt>:
    6670:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #256]
    6678:	add	x16, x16, #0x100
    667c:	br	x17

0000000000006680 <PyContextVar_Set@plt>:
    6680:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #264]
    6688:	add	x16, x16, #0x108
    668c:	br	x17

0000000000006690 <PyObject_Free@plt>:
    6690:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #272]
    6698:	add	x16, x16, #0x110
    669c:	br	x17

00000000000066a0 <PyLong_FromSsize_t@plt>:
    66a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #280]
    66a8:	add	x16, x16, #0x118
    66ac:	br	x17

00000000000066b0 <PyFloat_FromDouble@plt>:
    66b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #288]
    66b8:	add	x16, x16, #0x120
    66bc:	br	x17

00000000000066c0 <PyType_Ready@plt>:
    66c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #296]
    66c8:	add	x16, x16, #0x128
    66cc:	br	x17

00000000000066d0 <calloc@plt>:
    66d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #304]
    66d8:	add	x16, x16, #0x130
    66dc:	br	x17

00000000000066e0 <PyLong_FromLong@plt>:
    66e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #312]
    66e8:	add	x16, x16, #0x138
    66ec:	br	x17

00000000000066f0 <PyLong_AsSsize_t@plt>:
    66f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #320]
    66f8:	add	x16, x16, #0x140
    66fc:	br	x17

0000000000006700 <_PyLong_GCD@plt>:
    6700:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #328]
    6708:	add	x16, x16, #0x148
    670c:	br	x17

0000000000006710 <PyErr_NewException@plt>:
    6710:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #336]
    6718:	add	x16, x16, #0x150
    671c:	br	x17

0000000000006720 <realloc@plt>:
    6720:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #344]
    6728:	add	x16, x16, #0x158
    672c:	br	x17

0000000000006730 <PyErr_Clear@plt>:
    6730:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #352]
    6738:	add	x16, x16, #0x160
    673c:	br	x17

0000000000006740 <PyContextVar_Get@plt>:
    6740:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #360]
    6748:	add	x16, x16, #0x168
    674c:	br	x17

0000000000006750 <PyBool_FromLong@plt>:
    6750:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #368]
    6758:	add	x16, x16, #0x170
    675c:	br	x17

0000000000006760 <PyContextVar_New@plt>:
    6760:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #376]
    6768:	add	x16, x16, #0x178
    676c:	br	x17

0000000000006770 <PyList_Append@plt>:
    6770:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #384]
    6778:	add	x16, x16, #0x180
    677c:	br	x17

0000000000006780 <__gmon_start__@plt>:
    6780:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #392]
    6788:	add	x16, x16, #0x188
    678c:	br	x17

0000000000006790 <PyObject_CallFunction@plt>:
    6790:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #400]
    6798:	add	x16, x16, #0x190
    679c:	br	x17

00000000000067a0 <PyTuple_New@plt>:
    67a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #408]
    67a8:	add	x16, x16, #0x198
    67ac:	br	x17

00000000000067b0 <PyObject_GenericGetAttr@plt>:
    67b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #416]
    67b8:	add	x16, x16, #0x1a0
    67bc:	br	x17

00000000000067c0 <abort@plt>:
    67c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #424]
    67c8:	add	x16, x16, #0x1a8
    67cc:	br	x17

00000000000067d0 <Py_BuildValue@plt>:
    67d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #432]
    67d8:	add	x16, x16, #0x1b0
    67dc:	br	x17

00000000000067e0 <PyErr_Occurred@plt>:
    67e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #440]
    67e8:	add	x16, x16, #0x1b8
    67ec:	br	x17

00000000000067f0 <PyModule_Create2@plt>:
    67f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #448]
    67f8:	add	x16, x16, #0x1c0
    67fc:	br	x17

0000000000006800 <_PyUnicode_IsWhitespace@plt>:
    6800:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #456]
    6808:	add	x16, x16, #0x1c8
    680c:	br	x17

0000000000006810 <puts@plt>:
    6810:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #464]
    6818:	add	x16, x16, #0x1d0
    681c:	br	x17

0000000000006820 <PyLong_AsLong@plt>:
    6820:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #472]
    6828:	add	x16, x16, #0x1d8
    682c:	br	x17

0000000000006830 <PyImport_ImportModule@plt>:
    6830:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #480]
    6838:	add	x16, x16, #0x1e0
    683c:	br	x17

0000000000006840 <PyObject_CallObject@plt>:
    6840:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #488]
    6848:	add	x16, x16, #0x1e8
    684c:	br	x17

0000000000006850 <PyObject_CallFunctionObjArgs@plt>:
    6850:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #496]
    6858:	add	x16, x16, #0x1f0
    685c:	br	x17

0000000000006860 <strcmp@plt>:
    6860:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #504]
    6868:	add	x16, x16, #0x1f8
    686c:	br	x17

0000000000006870 <PyDict_GetItemString@plt>:
    6870:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #512]
    6878:	add	x16, x16, #0x200
    687c:	br	x17

0000000000006880 <__ctype_b_loc@plt>:
    6880:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #520]
    6888:	add	x16, x16, #0x208
    688c:	br	x17

0000000000006890 <PyUnicode_CompareWithASCIIString@plt>:
    6890:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #528]
    6898:	add	x16, x16, #0x210
    689c:	br	x17

00000000000068a0 <PyUnicode_DecodeUTF8@plt>:
    68a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #536]
    68a8:	add	x16, x16, #0x218
    68ac:	br	x17

00000000000068b0 <_PyUnicode_ToDecimalDigit@plt>:
    68b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #544]
    68b8:	add	x16, x16, #0x220
    68bc:	br	x17

00000000000068c0 <PyFloat_AsDouble@plt>:
    68c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #552]
    68c8:	add	x16, x16, #0x228
    68cc:	br	x17

00000000000068d0 <PyObject_IsTrue@plt>:
    68d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #560]
    68d8:	add	x16, x16, #0x230
    68dc:	br	x17

00000000000068e0 <PyArg_ParseTuple@plt>:
    68e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #568]
    68e8:	add	x16, x16, #0x238
    68ec:	br	x17

00000000000068f0 <free@plt>:
    68f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #576]
    68f8:	add	x16, x16, #0x240
    68fc:	br	x17

0000000000006900 <PyUnicode_Compare@plt>:
    6900:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #584]
    6908:	add	x16, x16, #0x248
    690c:	br	x17

0000000000006910 <PyList_Size@plt>:
    6910:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #592]
    6918:	add	x16, x16, #0x250
    691c:	br	x17

0000000000006920 <PyDict_New@plt>:
    6920:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #600]
    6928:	add	x16, x16, #0x258
    692c:	br	x17

0000000000006930 <fwrite@plt>:
    6930:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #608]
    6938:	add	x16, x16, #0x260
    693c:	br	x17

0000000000006940 <PyLong_FromUnsignedLong@plt>:
    6940:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #616]
    6948:	add	x16, x16, #0x268
    694c:	br	x17

0000000000006950 <_PyObject_New@plt>:
    6950:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #624]
    6958:	add	x16, x16, #0x270
    695c:	br	x17

0000000000006960 <PyUnicode_FromString@plt>:
    6960:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #632]
    6968:	add	x16, x16, #0x278
    696c:	br	x17

0000000000006970 <PyModule_AddStringConstant@plt>:
    6970:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #640]
    6978:	add	x16, x16, #0x280
    697c:	br	x17

0000000000006980 <PyUnicode_InternFromString@plt>:
    6980:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #648]
    6988:	add	x16, x16, #0x288
    698c:	br	x17

0000000000006990 <PyModule_AddObject@plt>:
    6990:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #656]
    6998:	add	x16, x16, #0x290
    699c:	br	x17

00000000000069a0 <PyDict_SetItem@plt>:
    69a0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #664]
    69a8:	add	x16, x16, #0x298
    69ac:	br	x17

00000000000069b0 <PyObject_GenericSetAttr@plt>:
    69b0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #672]
    69b8:	add	x16, x16, #0x2a0
    69bc:	br	x17

00000000000069c0 <PyType_IsSubtype@plt>:
    69c0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #680]
    69c8:	add	x16, x16, #0x2a8
    69cc:	br	x17

00000000000069d0 <PyUnicode_AsUTF8AndSize@plt>:
    69d0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #688]
    69d8:	add	x16, x16, #0x2b0
    69dc:	br	x17

00000000000069e0 <PyTuple_Size@plt>:
    69e0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #696]
    69e8:	add	x16, x16, #0x2b8
    69ec:	br	x17

00000000000069f0 <PyComplex_AsCComplex@plt>:
    69f0:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #704]
    69f8:	add	x16, x16, #0x2c0
    69fc:	br	x17

0000000000006a00 <PyComplex_FromDoubles@plt>:
    6a00:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #712]
    6a08:	add	x16, x16, #0x2c8
    6a0c:	br	x17

0000000000006a10 <PyErr_Format@plt>:
    6a10:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #720]
    6a18:	add	x16, x16, #0x2d0
    6a1c:	br	x17

0000000000006a20 <__errno_location@plt>:
    6a20:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #728]
    6a28:	add	x16, x16, #0x2d8
    6a2c:	br	x17

0000000000006a30 <PyList_GetItem@plt>:
    6a30:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #736]
    6a38:	add	x16, x16, #0x2e0
    6a3c:	br	x17

0000000000006a40 <PyMem_Malloc@plt>:
    6a40:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #744]
    6a48:	add	x16, x16, #0x2e8
    6a4c:	br	x17

0000000000006a50 <PyUnicode_New@plt>:
    6a50:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #752]
    6a58:	add	x16, x16, #0x2f0
    6a5c:	br	x17

0000000000006a60 <PyTuple_Pack@plt>:
    6a60:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #760]
    6a68:	add	x16, x16, #0x2f8
    6a6c:	br	x17

0000000000006a70 <fprintf@plt>:
    6a70:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #768]
    6a78:	add	x16, x16, #0x300
    6a7c:	br	x17

0000000000006a80 <PyDict_GetItemWithError@plt>:
    6a80:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #776]
    6a88:	add	x16, x16, #0x308
    6a8c:	br	x17

0000000000006a90 <PyFloat_FromString@plt>:
    6a90:	adrp	x16, 5c000 <memcpy@GLIBC_2.17>
    6a94:	ldr	x17, [x16, #784]
    6a98:	add	x16, x16, #0x310
    6a9c:	br	x17

Disassembly of section .text:

0000000000006aa0 <PyInit__decimal@@Base-0x13700>:
    6aa0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6aa4:	ldr	x0, [x0, #3984]
    6aa8:	cbz	x0, 6ab0 <PyFloat_FromString@plt+0x20>
    6aac:	b	6780 <__gmon_start__@plt>
    6ab0:	ret
    6ab4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6ab8:	add	x0, x0, #0x6b8
    6abc:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
    6ac0:	add	x1, x1, #0x6b8
    6ac4:	cmp	x0, x1
    6ac8:	b.eq	6af4 <PyFloat_FromString@plt+0x64>  // b.none
    6acc:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    6ad0:	ldr	x1, [x1, #3856]
    6ad4:	cbz	x1, 6af4 <PyFloat_FromString@plt+0x64>
    6ad8:	stp	x29, x30, [sp, #-16]!
    6adc:	mov	x29, sp
    6ae0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6ae4:	add	x0, x0, #0x6b8
    6ae8:	blr	x1
    6aec:	ldp	x29, x30, [sp], #16
    6af0:	ret
    6af4:	ret
    6af8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6afc:	add	x0, x0, #0x6b8
    6b00:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
    6b04:	add	x1, x1, #0x6b8
    6b08:	sub	x0, x0, x1
    6b0c:	lsr	x1, x0, #63
    6b10:	add	x0, x1, x0, asr #3
    6b14:	cmp	xzr, x0, asr #1
    6b18:	b.eq	6b48 <PyFloat_FromString@plt+0xb8>  // b.none
    6b1c:	asr	x1, x0, #1
    6b20:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
    6b24:	ldr	x2, [x2, #4056]
    6b28:	cbz	x2, 6b48 <PyFloat_FromString@plt+0xb8>
    6b2c:	stp	x29, x30, [sp, #-16]!
    6b30:	mov	x29, sp
    6b34:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6b38:	add	x0, x0, #0x6b8
    6b3c:	blr	x2
    6b40:	ldp	x29, x30, [sp], #16
    6b44:	ret
    6b48:	ret
    6b4c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6b50:	ldrb	w0, [x0, #1720]
    6b54:	cbnz	w0, 6b90 <PyFloat_FromString@plt+0x100>
    6b58:	stp	x29, x30, [sp, #-16]!
    6b5c:	mov	x29, sp
    6b60:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6b64:	ldr	x0, [x0, #3896]
    6b68:	cbz	x0, 6b78 <PyFloat_FromString@plt+0xe8>
    6b6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    6b70:	ldr	x0, [x0, #792]
    6b74:	bl	6590 <__cxa_finalize@plt>
    6b78:	bl	6ab4 <PyFloat_FromString@plt+0x24>
    6b7c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6b80:	mov	w1, #0x1                   	// #1
    6b84:	strb	w1, [x0, #1720]
    6b88:	ldp	x29, x30, [sp], #16
    6b8c:	ret
    6b90:	ret
    6b94:	stp	x29, x30, [sp, #-16]!
    6b98:	mov	x29, sp
    6b9c:	bl	6af8 <PyFloat_FromString@plt+0x68>
    6ba0:	ldp	x29, x30, [sp], #16
    6ba4:	ret
    6ba8:	ret
    6bac:	str	xzr, [x0, #16]
    6bb0:	mov	w0, #0x0                   	// #0
    6bb4:	ret
    6bb8:	mov	x0, #0x9                   	// #9
    6bbc:	ret
    6bc0:	stp	x29, x30, [sp, #-16]!
    6bc4:	mov	x29, sp
    6bc8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6bcc:	ldr	x0, [x0, #3872]
    6bd0:	ldr	x1, [x0, #216]
    6bd4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    6bd8:	ldr	x0, [x0, #1728]
    6bdc:	blr	x1
    6be0:	ldp	x29, x30, [sp], #16
    6be4:	ret
    6be8:	str	wzr, [x0, #40]
    6bec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6bf0:	ldr	x0, [x0, #4008]
    6bf4:	ldr	x1, [x0]
    6bf8:	add	x1, x1, #0x1
    6bfc:	str	x1, [x0]
    6c00:	ret
    6c04:	str	wzr, [x0, #44]
    6c08:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6c0c:	ldr	x0, [x0, #4008]
    6c10:	ldr	x1, [x0]
    6c14:	add	x1, x1, #0x1
    6c18:	str	x1, [x0]
    6c1c:	ret
    6c20:	ldr	x2, [x0]
    6c24:	add	x2, x2, #0x1
    6c28:	str	x2, [x0]
    6c2c:	ret
    6c30:	ldr	x2, [x0]
    6c34:	add	x2, x2, #0x1
    6c38:	str	x2, [x0]
    6c3c:	ret
    6c40:	ldr	x2, [x0]
    6c44:	add	x2, x2, #0x1
    6c48:	str	x2, [x0]
    6c4c:	ret
    6c50:	ldr	x2, [x0]
    6c54:	add	x2, x2, #0x1
    6c58:	str	x2, [x0]
    6c5c:	ret
    6c60:	stp	x29, x30, [sp, #-32]!
    6c64:	mov	x29, sp
    6c68:	str	x19, [sp, #16]
    6c6c:	mov	x19, x0
    6c70:	mov	x1, #0x0                   	// #0
    6c74:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    6c78:	add	x0, x0, #0x320
    6c7c:	bl	6840 <PyObject_CallObject@plt>
    6c80:	cbz	x0, 6ca8 <PyFloat_FromString@plt+0x218>
    6c84:	ldp	x4, x5, [x19, #16]
    6c88:	stp	x4, x5, [x0, #16]
    6c8c:	ldp	x4, x5, [x19, #32]
    6c90:	stp	x4, x5, [x0, #32]
    6c94:	ldp	x2, x3, [x19, #48]
    6c98:	stp	x2, x3, [x0, #48]
    6c9c:	str	wzr, [x0, #48]
    6ca0:	ldr	w1, [x19, #80]
    6ca4:	str	w1, [x0, #80]
    6ca8:	ldr	x19, [sp, #16]
    6cac:	ldp	x29, x30, [sp], #32
    6cb0:	ret
    6cb4:	stp	x29, x30, [sp, #-32]!
    6cb8:	mov	x29, sp
    6cbc:	str	x19, [sp, #16]
    6cc0:	mov	x19, x1
    6cc4:	ldr	x0, [x1, #8]
    6cc8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    6ccc:	add	x1, x1, #0x320
    6cd0:	add	x1, x1, #0x1a0
    6cd4:	cmp	x0, x1
    6cd8:	b.eq	6cf0 <PyFloat_FromString@plt+0x260>  // b.none
    6cdc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    6ce0:	add	x1, x1, #0x320
    6ce4:	add	x1, x1, #0x1a0
    6ce8:	bl	69c0 <PyType_IsSubtype@plt>
    6cec:	cbz	w0, 6d0c <PyFloat_FromString@plt+0x27c>
    6cf0:	ldr	x0, [x19]
    6cf4:	add	x0, x0, #0x1
    6cf8:	str	x0, [x19]
    6cfc:	mov	x0, x19
    6d00:	ldr	x19, [sp, #16]
    6d04:	ldp	x29, x30, [sp], #32
    6d08:	ret
    6d0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    6d10:	add	x1, x1, #0x350
    6d14:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6d18:	ldr	x0, [x0, #3936]
    6d1c:	ldr	x0, [x0]
    6d20:	bl	6650 <PyErr_SetString@plt>
    6d24:	mov	x0, #0x0                   	// #0
    6d28:	b	6d00 <PyFloat_FromString@plt+0x270>
    6d2c:	stp	x29, x30, [sp, #-16]!
    6d30:	mov	x29, sp
    6d34:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    6d38:	add	x1, x1, #0x320
    6d3c:	add	x1, x1, #0x1a0
    6d40:	cmp	x0, x1
    6d44:	b.eq	6d8c <PyFloat_FromString@plt+0x2fc>  // b.none
    6d48:	ldr	x2, [x0, #304]
    6d4c:	mov	x1, #0x0                   	// #0
    6d50:	blr	x2
    6d54:	cbz	x0, 6d84 <PyFloat_FromString@plt+0x2f4>
    6d58:	mov	x1, #0xffffffffffffffff    	// #-1
    6d5c:	str	x1, [x0, #16]
    6d60:	mov	w1, #0x30                  	// #48
    6d64:	strb	w1, [x0, #24]
    6d68:	str	xzr, [x0, #32]
    6d6c:	str	xzr, [x0, #40]
    6d70:	str	xzr, [x0, #48]
    6d74:	mov	x1, #0x4                   	// #4
    6d78:	str	x1, [x0, #56]
    6d7c:	add	x1, x0, #0x48
    6d80:	str	x1, [x0, #64]
    6d84:	ldp	x29, x30, [sp], #16
    6d88:	ret
    6d8c:	mov	x0, x1
    6d90:	bl	6950 <_PyObject_New@plt>
    6d94:	b	6d54 <PyFloat_FromString@plt+0x2c4>
    6d98:	stp	x29, x30, [sp, #-48]!
    6d9c:	mov	x29, sp
    6da0:	stp	x19, x20, [sp, #16]
    6da4:	str	x21, [sp, #32]
    6da8:	mov	x20, x0
    6dac:	ldr	x0, [x0, #8]
    6db0:	ldr	x0, [x0, #168]
    6db4:	tbz	w0, #29, 6de4 <PyFloat_FromString@plt+0x354>
    6db8:	mov	x0, x20
    6dbc:	bl	64e0 <PyDict_Size@plt>
    6dc0:	cmp	x0, #0x9
    6dc4:	b.ne	6e14 <PyFloat_FromString@plt+0x384>  // b.any
    6dc8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    6dcc:	ldr	x0, [x0, #2464]
    6dd0:	mov	w21, #0x0                   	// #0
    6dd4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41e60>
    6dd8:	add	x19, x19, #0x9a0
    6ddc:	cbnz	x0, 6e68 <PyFloat_FromString@plt+0x3d8>
    6de0:	b	6e00 <PyFloat_FromString@plt+0x370>
    6de4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    6de8:	add	x1, x1, #0x370
    6dec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6df0:	ldr	x0, [x0, #3936]
    6df4:	ldr	x0, [x0]
    6df8:	bl	6650 <PyErr_SetString@plt>
    6dfc:	mov	w21, #0x8000                	// #32768
    6e00:	mov	w0, w21
    6e04:	ldp	x19, x20, [sp, #16]
    6e08:	ldr	x21, [sp, #32]
    6e0c:	ldp	x29, x30, [sp], #48
    6e10:	ret
    6e14:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    6e18:	add	x1, x1, #0x390
    6e1c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6e20:	ldr	x0, [x0, #3968]
    6e24:	ldr	x0, [x0]
    6e28:	bl	6650 <PyErr_SetString@plt>
    6e2c:	mov	w21, #0x8000                	// #32768
    6e30:	b	6e00 <PyFloat_FromString@plt+0x370>
    6e34:	bl	67e0 <PyErr_Occurred@plt>
    6e38:	mov	w21, #0x10000               	// #65536
    6e3c:	cbnz	x0, 6e00 <PyFloat_FromString@plt+0x370>
    6e40:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    6e44:	add	x1, x1, #0x390
    6e48:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6e4c:	ldr	x0, [x0, #3968]
    6e50:	ldr	x0, [x0]
    6e54:	bl	6650 <PyErr_SetString@plt>
    6e58:	mov	w21, #0x8000                	// #32768
    6e5c:	b	6e00 <PyFloat_FromString@plt+0x370>
    6e60:	ldr	x1, [x19, #32]!
    6e64:	cbz	x1, 6e00 <PyFloat_FromString@plt+0x370>
    6e68:	ldr	x1, [x19, #24]
    6e6c:	mov	x0, x20
    6e70:	bl	6a80 <PyDict_GetItemWithError@plt>
    6e74:	cbz	x0, 6e34 <PyFloat_FromString@plt+0x3a4>
    6e78:	bl	68d0 <PyObject_IsTrue@plt>
    6e7c:	tbnz	w0, #31, 6e94 <PyFloat_FromString@plt+0x404>
    6e80:	cmp	w0, #0x1
    6e84:	b.ne	6e60 <PyFloat_FromString@plt+0x3d0>  // b.any
    6e88:	ldr	w0, [x19, #16]
    6e8c:	orr	w21, w21, w0
    6e90:	b	6e60 <PyFloat_FromString@plt+0x3d0>
    6e94:	mov	w21, #0x10000               	// #65536
    6e98:	b	6e00 <PyFloat_FromString@plt+0x370>
    6e9c:	stp	x29, x30, [sp, #-32]!
    6ea0:	mov	x29, sp
    6ea4:	stp	x19, x20, [sp, #16]
    6ea8:	mov	x20, x0
    6eac:	mov	w19, w2
    6eb0:	sub	w2, w2, #0x2
    6eb4:	adrp	x3, 5b000 <PyInit__decimal@@Base+0x40e60>
    6eb8:	ldr	x0, [x3, #3912]
    6ebc:	cmp	w2, #0x1
    6ec0:	b.ls	6edc <PyFloat_FromString@plt+0x44c>  // b.plast
    6ec4:	ldr	x1, [x0]
    6ec8:	add	x1, x1, #0x1
    6ecc:	str	x1, [x0]
    6ed0:	ldp	x19, x20, [sp, #16]
    6ed4:	ldp	x29, x30, [sp], #32
    6ed8:	ret
    6edc:	ldr	x0, [x1, #8]
    6ee0:	adrp	x2, 5e000 <PyInit__decimal@@Base+0x43e60>
    6ee4:	ldr	x2, [x2, #1736]
    6ee8:	cmp	x0, x2
    6eec:	b.eq	6f2c <PyFloat_FromString@plt+0x49c>  // b.none
    6ef0:	ldr	x2, [x0, #168]
    6ef4:	adrp	x3, 5b000 <PyInit__decimal@@Base+0x40e60>
    6ef8:	ldr	x0, [x3, #3912]
    6efc:	tbz	w2, #29, 6ec4 <PyFloat_FromString@plt+0x434>
    6f00:	mov	x0, x1
    6f04:	bl	6d98 <PyFloat_FromString@plt+0x308>
    6f08:	mov	w1, w0
    6f0c:	tst	w0, #0x18000
    6f10:	b.eq	6f68 <PyFloat_FromString@plt+0x4d8>  // b.none
    6f14:	mov	x0, #0x0                   	// #0
    6f18:	tbz	w1, #15, 6ed0 <PyFloat_FromString@plt+0x440>
    6f1c:	bl	6730 <PyErr_Clear@plt>
    6f20:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6f24:	ldr	x0, [x0, #3912]
    6f28:	b	6ec4 <PyFloat_FromString@plt+0x434>
    6f2c:	ldr	x2, [x20, #16]
    6f30:	ldr	x0, [x1, #16]
    6f34:	ldr	w1, [x2]
    6f38:	ldr	w0, [x0]
    6f3c:	cmp	w1, w0
    6f40:	cset	w3, eq  // eq = none
    6f44:	cmp	w19, #0x3
    6f48:	cset	w2, eq  // eq = none
    6f4c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6f50:	ldr	x1, [x0, #3976]
    6f54:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6f58:	ldr	x0, [x0, #4024]
    6f5c:	cmp	w2, w3, uxtb
    6f60:	csel	x0, x0, x1, ne  // ne = any
    6f64:	b	6ec4 <PyFloat_FromString@plt+0x434>
    6f68:	ldr	x0, [x20, #16]
    6f6c:	ldr	w0, [x0]
    6f70:	cmp	w0, w1
    6f74:	cset	w3, eq  // eq = none
    6f78:	cmp	w19, #0x3
    6f7c:	cset	w2, eq  // eq = none
    6f80:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6f84:	ldr	x1, [x0, #3976]
    6f88:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6f8c:	ldr	x0, [x0, #4024]
    6f90:	cmp	w2, w3, uxtb
    6f94:	csel	x0, x0, x1, ne  // ne = any
    6f98:	b	6ec4 <PyFloat_FromString@plt+0x434>
    6f9c:	stp	x29, x30, [sp, #-32]!
    6fa0:	mov	x29, sp
    6fa4:	cbz	x2, 7000 <PyFloat_FromString@plt+0x570>
    6fa8:	stp	x19, x20, [sp, #16]
    6fac:	mov	x20, x0
    6fb0:	mov	x0, x2
    6fb4:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
    6fb8:	ldr	x2, [x2, #2464]
    6fbc:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
    6fc0:	add	x3, x3, #0x9a0
    6fc4:	cbz	x2, 6fdc <PyFloat_FromString@plt+0x54c>
    6fc8:	ldr	x2, [x3, #24]
    6fcc:	cmp	x1, x2
    6fd0:	b.eq	7020 <PyFloat_FromString@plt+0x590>  // b.none
    6fd4:	ldr	x2, [x3, #32]!
    6fd8:	cbnz	x2, 6fc8 <PyFloat_FromString@plt+0x538>
    6fdc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    6fe0:	add	x1, x1, #0x3c8
    6fe4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    6fe8:	ldr	x0, [x0, #3968]
    6fec:	ldr	x0, [x0]
    6ff0:	bl	6650 <PyErr_SetString@plt>
    6ff4:	mov	w0, #0xffffffff            	// #-1
    6ff8:	ldp	x19, x20, [sp, #16]
    6ffc:	b	7054 <PyFloat_FromString@plt+0x5c4>
    7000:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7004:	add	x1, x1, #0x3a8
    7008:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    700c:	ldr	x0, [x0, #3928]
    7010:	ldr	x0, [x0]
    7014:	bl	6650 <PyErr_SetString@plt>
    7018:	mov	w0, #0xffffffff            	// #-1
    701c:	b	7054 <PyFloat_FromString@plt+0x5c4>
    7020:	ldr	w19, [x3, #16]
    7024:	tst	w19, #0x18000
    7028:	b.ne	7078 <PyFloat_FromString@plt+0x5e8>  // b.any
    702c:	bl	68d0 <PyObject_IsTrue@plt>
    7030:	tbnz	w0, #31, 7084 <PyFloat_FromString@plt+0x5f4>
    7034:	cmp	w0, #0x1
    7038:	b.eq	705c <PyFloat_FromString@plt+0x5cc>  // b.none
    703c:	ldr	x0, [x20, #16]
    7040:	ldr	w1, [x0]
    7044:	bic	w19, w1, w19
    7048:	str	w19, [x0]
    704c:	mov	w0, #0x0                   	// #0
    7050:	ldp	x19, x20, [sp, #16]
    7054:	ldp	x29, x30, [sp], #32
    7058:	ret
    705c:	ldr	x1, [x20, #16]
    7060:	ldr	w0, [x1]
    7064:	orr	w19, w0, w19
    7068:	str	w19, [x1]
    706c:	mov	w0, #0x0                   	// #0
    7070:	ldp	x19, x20, [sp, #16]
    7074:	b	7054 <PyFloat_FromString@plt+0x5c4>
    7078:	mov	w0, #0xffffffff            	// #-1
    707c:	ldp	x19, x20, [sp, #16]
    7080:	b	7054 <PyFloat_FromString@plt+0x5c4>
    7084:	mov	w0, #0xffffffff            	// #-1
    7088:	ldp	x19, x20, [sp, #16]
    708c:	b	7054 <PyFloat_FromString@plt+0x5c4>
    7090:	sub	sp, sp, #0x100
    7094:	stp	x29, x30, [sp, #96]
    7098:	add	x29, sp, #0x60
    709c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    70a0:	ldr	x1, [x1, #2464]
    70a4:	cbz	x1, 7100 <PyFloat_FromString@plt+0x670>
    70a8:	ldr	x0, [x0, #16]
    70ac:	ldr	w8, [x0]
    70b0:	mov	x1, #0x1                   	// #1
    70b4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    70b8:	add	x0, x0, #0x9a0
    70bc:	add	x7, sp, #0xb8
    70c0:	adrp	x5, 3c000 <PyInit__decimal@@Base+0x21e60>
    70c4:	add	x5, x5, #0x468
    70c8:	adrp	x4, 3c000 <PyInit__decimal@@Base+0x21e60>
    70cc:	add	x4, x4, #0x460
    70d0:	add	x6, sp, #0x70
    70d4:	add	x2, x7, x1, lsl #3
    70d8:	ldr	x3, [x0, #8]
    70dc:	stur	x3, [x2, #-8]
    70e0:	ldr	w2, [x0, #16]
    70e4:	tst	w8, w2
    70e8:	csel	x3, x4, x5, ne  // ne = any
    70ec:	add	x2, x6, x1, lsl #3
    70f0:	stur	x3, [x2, #-8]
    70f4:	add	x1, x1, #0x1
    70f8:	ldr	x2, [x0, #32]!
    70fc:	cbnz	x2, 70d4 <PyFloat_FromString@plt+0x644>
    7100:	ldr	x0, [sp, #176]
    7104:	str	x0, [sp, #80]
    7108:	ldr	x0, [sp, #248]
    710c:	str	x0, [sp, #72]
    7110:	ldr	x0, [sp, #168]
    7114:	str	x0, [sp, #64]
    7118:	ldr	x0, [sp, #240]
    711c:	str	x0, [sp, #56]
    7120:	ldr	x0, [sp, #160]
    7124:	str	x0, [sp, #48]
    7128:	ldr	x0, [sp, #232]
    712c:	str	x0, [sp, #40]
    7130:	ldr	x0, [sp, #152]
    7134:	str	x0, [sp, #32]
    7138:	ldr	x0, [sp, #224]
    713c:	str	x0, [sp, #24]
    7140:	ldr	x0, [sp, #144]
    7144:	str	x0, [sp, #16]
    7148:	ldr	x0, [sp, #216]
    714c:	str	x0, [sp, #8]
    7150:	ldr	x0, [sp, #136]
    7154:	str	x0, [sp]
    7158:	ldr	x7, [sp, #208]
    715c:	ldr	x6, [sp, #128]
    7160:	ldr	x5, [sp, #200]
    7164:	ldr	x4, [sp, #120]
    7168:	ldr	x3, [sp, #192]
    716c:	ldr	x2, [sp, #112]
    7170:	ldr	x1, [sp, #184]
    7174:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    7178:	add	x0, x0, #0x470
    717c:	bl	6480 <PyUnicode_FromFormat@plt>
    7180:	ldp	x29, x30, [sp, #96]
    7184:	add	sp, sp, #0x100
    7188:	ret
    718c:	stp	x29, x30, [sp, #-48]!
    7190:	mov	x29, sp
    7194:	stp	x19, x20, [sp, #16]
    7198:	stp	x21, x22, [sp, #32]
    719c:	mov	x20, x0
    71a0:	ldr	x0, [x0, #8]
    71a4:	ldr	x0, [x0, #168]
    71a8:	tbz	w0, #28, 7208 <PyFloat_FromString@plt+0x778>
    71ac:	mov	x1, #0x0                   	// #0
    71b0:	adrp	x2, 5e000 <PyInit__decimal@@Base+0x43e60>
    71b4:	add	x2, x2, #0x6c0
    71b8:	add	x2, x2, #0x10
    71bc:	mov	w21, w1
    71c0:	ldr	x0, [x2, x1, lsl #3]
    71c4:	cmp	x0, x20
    71c8:	b.eq	7224 <PyFloat_FromString@plt+0x794>  // b.none
    71cc:	add	x1, x1, #0x1
    71d0:	cmp	x1, #0x8
    71d4:	b.ne	71bc <PyFloat_FromString@plt+0x72c>  // b.any
    71d8:	mov	x19, #0x0                   	// #0
    71dc:	adrp	x22, 5e000 <PyInit__decimal@@Base+0x43e60>
    71e0:	add	x22, x22, #0x6c0
    71e4:	add	x22, x22, #0x10
    71e8:	mov	w21, w19
    71ec:	ldr	x1, [x22, x19, lsl #3]
    71f0:	mov	x0, x20
    71f4:	bl	6900 <PyUnicode_Compare@plt>
    71f8:	cbz	w0, 7224 <PyFloat_FromString@plt+0x794>
    71fc:	add	x19, x19, #0x1
    7200:	cmp	x19, #0x8
    7204:	b.ne	71e8 <PyFloat_FromString@plt+0x758>  // b.any
    7208:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    720c:	add	x1, x1, #0x510
    7210:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7214:	ldr	x0, [x0, #3936]
    7218:	ldr	x0, [x0]
    721c:	bl	6650 <PyErr_SetString@plt>
    7220:	mov	w21, #0xffffffff            	// #-1
    7224:	mov	w0, w21
    7228:	ldp	x19, x20, [sp, #16]
    722c:	ldp	x21, x22, [sp, #32]
    7230:	ldp	x29, x30, [sp], #48
    7234:	ret
    7238:	stp	x29, x30, [sp, #-32]!
    723c:	mov	x29, sp
    7240:	str	x19, [sp, #16]
    7244:	mov	x19, x0
    7248:	mov	x0, x1
    724c:	bl	718c <PyFloat_FromString@plt+0x6fc>
    7250:	mov	w1, w0
    7254:	cmn	w0, #0x1
    7258:	b.eq	726c <PyFloat_FromString@plt+0x7dc>  // b.none
    725c:	add	x0, x19, #0x10
    7260:	bl	1d5dc <PyInit__decimal@@Base+0x343c>
    7264:	mov	w1, #0x0                   	// #0
    7268:	cbz	w0, 727c <PyFloat_FromString@plt+0x7ec>
    726c:	mov	w0, w1
    7270:	ldr	x19, [sp, #16]
    7274:	ldp	x29, x30, [sp], #32
    7278:	ret
    727c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7280:	add	x1, x1, #0x5a8
    7284:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7288:	ldr	x0, [x0, #3920]
    728c:	ldr	x0, [x0]
    7290:	bl	6650 <PyErr_SetString@plt>
    7294:	mov	w1, #0xffffffff            	// #-1
    7298:	b	726c <PyFloat_FromString@plt+0x7dc>
    729c:	stp	x29, x30, [sp, #-16]!
    72a0:	mov	x29, sp
    72a4:	add	x0, x0, #0x10
    72a8:	bl	1d54c <PyInit__decimal@@Base+0x33ac>
    72ac:	sxtw	x0, w0
    72b0:	bl	66a0 <PyLong_FromSsize_t@plt>
    72b4:	ldp	x29, x30, [sp], #16
    72b8:	ret
    72bc:	stp	x29, x30, [sp, #-16]!
    72c0:	mov	x29, sp
    72c4:	ldrsw	x0, [x0, #80]
    72c8:	bl	66e0 <PyLong_FromLong@plt>
    72cc:	ldp	x29, x30, [sp], #16
    72d0:	ret
    72d4:	stp	x29, x30, [sp, #-16]!
    72d8:	mov	x29, sp
    72dc:	add	x0, x0, #0x10
    72e0:	bl	1d534 <PyInit__decimal@@Base+0x3394>
    72e4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
    72e8:	add	x1, x1, #0x6c0
    72ec:	add	x1, x1, #0x10
    72f0:	sxtw	x0, w0
    72f4:	ldr	x3, [x1, x0, lsl #3]
    72f8:	ldr	x2, [x3]
    72fc:	add	x2, x2, #0x1
    7300:	str	x2, [x3]
    7304:	ldr	x0, [x1, x0, lsl #3]
    7308:	ldp	x29, x30, [sp], #16
    730c:	ret
    7310:	stp	x29, x30, [sp, #-16]!
    7314:	mov	x29, sp
    7318:	add	x0, x0, #0x10
    731c:	bl	1d52c <PyInit__decimal@@Base+0x338c>
    7320:	bl	66a0 <PyLong_FromSsize_t@plt>
    7324:	ldp	x29, x30, [sp], #16
    7328:	ret
    732c:	stp	x29, x30, [sp, #-16]!
    7330:	mov	x29, sp
    7334:	add	x0, x0, #0x10
    7338:	bl	1d524 <PyInit__decimal@@Base+0x3384>
    733c:	bl	66a0 <PyLong_FromSsize_t@plt>
    7340:	ldp	x29, x30, [sp], #16
    7344:	ret
    7348:	stp	x29, x30, [sp, #-16]!
    734c:	mov	x29, sp
    7350:	add	x0, x0, #0x10
    7354:	bl	1d51c <PyInit__decimal@@Base+0x337c>
    7358:	bl	66a0 <PyLong_FromSsize_t@plt>
    735c:	ldp	x29, x30, [sp], #16
    7360:	ret
    7364:	stp	x29, x30, [sp, #-32]!
    7368:	mov	x29, sp
    736c:	str	x19, [sp, #16]
    7370:	mov	x19, x0
    7374:	add	x0, x0, #0x18
    7378:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    737c:	ldr	x0, [x19, #8]
    7380:	ldr	x1, [x0, #320]
    7384:	mov	x0, x19
    7388:	blr	x1
    738c:	ldr	x19, [sp, #16]
    7390:	ldp	x29, x30, [sp], #32
    7394:	ret
    7398:	stp	x29, x30, [sp, #-48]!
    739c:	mov	x29, sp
    73a0:	stp	x19, x20, [sp, #16]
    73a4:	stp	x21, x22, [sp, #32]
    73a8:	mov	x20, x1
    73ac:	mov	x21, x2
    73b0:	mov	x22, x3
    73b4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    73b8:	mov	x19, x0
    73bc:	cbz	x0, 73f4 <PyFloat_FromString@plt+0x964>
    73c0:	ldr	x0, [x20, #16]
    73c4:	cbz	x0, 7408 <PyFloat_FromString@plt+0x978>
    73c8:	mov	x2, x0
    73cc:	mov	w3, #0x0                   	// #0
    73d0:	tbnz	x0, #63, 7438 <PyFloat_FromString@plt+0x9a8>
    73d4:	cmp	x2, #0x1
    73d8:	b.eq	7444 <PyFloat_FromString@plt+0x9b4>  // b.none
    73dc:	mov	x6, x22
    73e0:	mov	x5, x21
    73e4:	mov	w4, #0x40000000            	// #1073741824
    73e8:	add	x1, x20, #0x18
    73ec:	add	x0, x19, #0x18
    73f0:	bl	3925c <PyInit__decimal@@Base+0x1f0bc>
    73f4:	mov	x0, x19
    73f8:	ldp	x19, x20, [sp, #16]
    73fc:	ldp	x21, x22, [sp, #32]
    7400:	ldp	x29, x30, [sp], #48
    7404:	ret
    7408:	ldr	x0, [x19, #64]
    740c:	str	xzr, [x0]
    7410:	mov	x0, #0x1                   	// #1
    7414:	str	x0, [x19, #48]
    7418:	add	x20, x19, #0x18
    741c:	mov	w1, #0x0                   	// #0
    7420:	mov	x0, x20
    7424:	bl	28864 <PyInit__decimal@@Base+0xe6c4>
    7428:	str	xzr, [x19, #32]
    742c:	mov	x0, x20
    7430:	bl	285bc <PyInit__decimal@@Base+0xe41c>
    7434:	b	73f4 <PyFloat_FromString@plt+0x964>
    7438:	neg	x2, x0
    743c:	mov	w3, #0x1                   	// #1
    7440:	b	73d4 <PyFloat_FromString@plt+0x944>
    7444:	ldr	x0, [x19, #64]
    7448:	ldr	w1, [x20, #24]
    744c:	str	x1, [x0]
    7450:	mov	x0, #0x1                   	// #1
    7454:	str	x0, [x19, #48]
    7458:	add	x20, x19, #0x18
    745c:	mov	w1, w3
    7460:	mov	x0, x20
    7464:	bl	28864 <PyInit__decimal@@Base+0xe6c4>
    7468:	str	xzr, [x19, #32]
    746c:	mov	x0, x20
    7470:	bl	285bc <PyInit__decimal@@Base+0xe41c>
    7474:	mov	x2, x22
    7478:	mov	x1, x21
    747c:	mov	x0, x20
    7480:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
    7484:	b	73f4 <PyFloat_FromString@plt+0x964>
    7488:	stp	x29, x30, [sp, #-32]!
    748c:	mov	x29, sp
    7490:	stp	x19, x20, [sp, #16]
    7494:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    7498:	add	x0, x0, #0x320
    749c:	add	x0, x0, #0x1a0
    74a0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    74a4:	mov	x19, x0
    74a8:	cbz	x0, 74dc <PyFloat_FromString@plt+0xa4c>
    74ac:	ldr	x0, [x0, #64]
    74b0:	mov	x1, #0xa                   	// #10
    74b4:	str	x1, [x0]
    74b8:	mov	x0, #0x1                   	// #1
    74bc:	str	x0, [x19, #48]
    74c0:	add	x20, x19, #0x18
    74c4:	mov	w1, #0x0                   	// #0
    74c8:	mov	x0, x20
    74cc:	bl	28864 <PyInit__decimal@@Base+0xe6c4>
    74d0:	str	xzr, [x19, #32]
    74d4:	mov	x0, x20
    74d8:	bl	285bc <PyInit__decimal@@Base+0xe41c>
    74dc:	mov	x0, x19
    74e0:	ldp	x19, x20, [sp, #16]
    74e4:	ldp	x29, x30, [sp], #32
    74e8:	ret
    74ec:	stp	x29, x30, [sp, #-16]!
    74f0:	mov	x29, sp
    74f4:	bl	7488 <PyFloat_FromString@plt+0x9f8>
    74f8:	ldp	x29, x30, [sp], #16
    74fc:	ret
    7500:	stp	x29, x30, [sp, #-32]!
    7504:	mov	x29, sp
    7508:	stp	x19, x20, [sp, #16]
    750c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    7510:	add	x0, x0, #0x320
    7514:	add	x0, x0, #0x1a0
    7518:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    751c:	mov	x19, x0
    7520:	cbz	x0, 7550 <PyFloat_FromString@plt+0xac0>
    7524:	ldr	x0, [x0, #64]
    7528:	str	xzr, [x0]
    752c:	mov	x0, #0x1                   	// #1
    7530:	str	x0, [x19, #48]
    7534:	add	x20, x19, #0x18
    7538:	mov	w1, #0x0                   	// #0
    753c:	mov	x0, x20
    7540:	bl	28864 <PyInit__decimal@@Base+0xe6c4>
    7544:	str	xzr, [x19, #32]
    7548:	mov	x0, x20
    754c:	bl	285bc <PyInit__decimal@@Base+0xe41c>
    7550:	mov	x0, x19
    7554:	ldp	x19, x20, [sp, #16]
    7558:	ldp	x29, x30, [sp], #32
    755c:	ret
    7560:	stp	x29, x30, [sp, #-16]!
    7564:	mov	x29, sp
    7568:	add	x0, x0, #0x18
    756c:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    7570:	cbz	w0, 7590 <PyFloat_FromString@plt+0xb00>
    7574:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7578:	ldr	x0, [x0, #4024]
    757c:	ldr	x1, [x0]
    7580:	add	x1, x1, #0x1
    7584:	str	x1, [x0]
    7588:	ldp	x29, x30, [sp], #16
    758c:	ret
    7590:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7594:	ldr	x0, [x0, #3976]
    7598:	ldr	x1, [x0]
    759c:	add	x1, x1, #0x1
    75a0:	str	x1, [x0]
    75a4:	b	7588 <PyFloat_FromString@plt+0xaf8>
    75a8:	mov	x3, x1
    75ac:	ldr	x1, [x0, #8]
    75b0:	ldr	x1, [x1, #168]
    75b4:	tbnz	w1, #26, 75d0 <PyFloat_FromString@plt+0xb40>
    75b8:	stp	x29, x30, [sp, #-16]!
    75bc:	mov	x29, sp
    75c0:	tbz	w1, #25, 75e0 <PyFloat_FromString@plt+0xb50>
    75c4:	bl	6530 <PyList_AsTuple@plt>
    75c8:	ldp	x29, x30, [sp], #16
    75cc:	ret
    75d0:	ldr	x1, [x0]
    75d4:	add	x1, x1, #0x1
    75d8:	str	x1, [x0]
    75dc:	ret
    75e0:	mov	x1, x2
    75e4:	mov	x0, x3
    75e8:	bl	6650 <PyErr_SetString@plt>
    75ec:	mov	x0, #0x0                   	// #0
    75f0:	b	75c8 <PyFloat_FromString@plt+0xb38>
    75f4:	stp	x29, x30, [sp, #-32]!
    75f8:	mov	x29, sp
    75fc:	stp	x19, x20, [sp, #16]
    7600:	mov	x20, x0
    7604:	mov	x19, x1
    7608:	ldr	x0, [x1, #8]
    760c:	ldr	x0, [x0, #168]
    7610:	tbz	w0, #28, 7650 <PyFloat_FromString@plt+0xbc0>
    7614:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7618:	add	x1, x1, #0x5d0
    761c:	mov	x0, x19
    7620:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    7624:	cbnz	w0, 763c <PyFloat_FromString@plt+0xbac>
    7628:	ldr	x0, [x20, #64]
    762c:	ldr	x1, [x0]
    7630:	add	x1, x1, #0x1
    7634:	str	x1, [x0]
    7638:	b	765c <PyFloat_FromString@plt+0xbcc>
    763c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7640:	add	x1, x1, #0x5d8
    7644:	mov	x0, x19
    7648:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    764c:	cbz	w0, 7668 <PyFloat_FromString@plt+0xbd8>
    7650:	mov	x1, x19
    7654:	mov	x0, x20
    7658:	bl	67b0 <PyObject_GenericGetAttr@plt>
    765c:	ldp	x19, x20, [sp, #16]
    7660:	ldp	x29, x30, [sp], #32
    7664:	ret
    7668:	ldr	x0, [x20, #72]
    766c:	ldr	x1, [x0]
    7670:	add	x1, x1, #0x1
    7674:	str	x1, [x0]
    7678:	b	765c <PyFloat_FromString@plt+0xbcc>
    767c:	stp	x29, x30, [sp, #-48]!
    7680:	mov	x29, sp
    7684:	stp	x19, x20, [sp, #16]
    7688:	str	x21, [sp, #32]
    768c:	mov	x21, x0
    7690:	mov	x20, x1
    7694:	mov	w1, #0x7f                  	// #127
    7698:	mov	x0, x20
    769c:	bl	6a50 <PyUnicode_New@plt>
    76a0:	mov	x19, x0
    76a4:	cbz	x0, 76cc <PyFloat_FromString@plt+0xc3c>
    76a8:	ldrb	w2, [x0, #32]
    76ac:	tbz	w2, #5, 76e0 <PyFloat_FromString@plt+0xc50>
    76b0:	add	x0, x0, #0x30
    76b4:	add	x1, x19, #0x48
    76b8:	tst	x2, #0x40
    76bc:	csel	x0, x1, x0, eq  // eq = none
    76c0:	mov	x2, x20
    76c4:	mov	x1, x21
    76c8:	bl	6470 <memcpy@plt>
    76cc:	mov	x0, x19
    76d0:	ldp	x19, x20, [sp, #16]
    76d4:	ldr	x21, [sp, #32]
    76d8:	ldp	x29, x30, [sp], #48
    76dc:	ret
    76e0:	ldr	x0, [x0, #72]
    76e4:	b	76c0 <PyFloat_FromString@plt+0xc30>
    76e8:	stp	x29, x30, [sp, #-16]!
    76ec:	mov	x29, sp
    76f0:	add	x0, x0, #0x18
    76f4:	bl	28118 <PyInit__decimal@@Base+0xdf78>
    76f8:	cbz	w0, 7718 <PyFloat_FromString@plt+0xc88>
    76fc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7700:	ldr	x0, [x0, #4024]
    7704:	ldr	x1, [x0]
    7708:	add	x1, x1, #0x1
    770c:	str	x1, [x0]
    7710:	ldp	x29, x30, [sp], #16
    7714:	ret
    7718:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    771c:	ldr	x0, [x0, #3976]
    7720:	ldr	x1, [x0]
    7724:	add	x1, x1, #0x1
    7728:	str	x1, [x0]
    772c:	b	7710 <PyFloat_FromString@plt+0xc80>
    7730:	stp	x29, x30, [sp, #-16]!
    7734:	mov	x29, sp
    7738:	add	x0, x0, #0x18
    773c:	bl	28118 <PyInit__decimal@@Base+0xdf78>
    7740:	cmp	w0, #0x0
    7744:	cset	w0, eq  // eq = none
    7748:	ldp	x29, x30, [sp], #16
    774c:	ret
    7750:	stp	x29, x30, [sp, #-16]!
    7754:	mov	x29, sp
    7758:	add	x0, x0, #0x18
    775c:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    7760:	cbz	w0, 7780 <PyFloat_FromString@plt+0xcf0>
    7764:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7768:	ldr	x0, [x0, #4024]
    776c:	ldr	x1, [x0]
    7770:	add	x1, x1, #0x1
    7774:	str	x1, [x0]
    7778:	ldp	x29, x30, [sp], #16
    777c:	ret
    7780:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7784:	ldr	x0, [x0, #3976]
    7788:	ldr	x1, [x0]
    778c:	add	x1, x1, #0x1
    7790:	str	x1, [x0]
    7794:	b	7778 <PyFloat_FromString@plt+0xce8>
    7798:	stp	x29, x30, [sp, #-16]!
    779c:	mov	x29, sp
    77a0:	add	x0, x0, #0x18
    77a4:	bl	280f4 <PyInit__decimal@@Base+0xdf54>
    77a8:	cbz	w0, 77c8 <PyFloat_FromString@plt+0xd38>
    77ac:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    77b0:	ldr	x0, [x0, #4024]
    77b4:	ldr	x1, [x0]
    77b8:	add	x1, x1, #0x1
    77bc:	str	x1, [x0]
    77c0:	ldp	x29, x30, [sp], #16
    77c4:	ret
    77c8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    77cc:	ldr	x0, [x0, #3976]
    77d0:	ldr	x1, [x0]
    77d4:	add	x1, x1, #0x1
    77d8:	str	x1, [x0]
    77dc:	b	77c0 <PyFloat_FromString@plt+0xd30>
    77e0:	stp	x29, x30, [sp, #-16]!
    77e4:	mov	x29, sp
    77e8:	add	x0, x0, #0x18
    77ec:	bl	280e8 <PyInit__decimal@@Base+0xdf48>
    77f0:	cbz	w0, 7810 <PyFloat_FromString@plt+0xd80>
    77f4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    77f8:	ldr	x0, [x0, #4024]
    77fc:	ldr	x1, [x0]
    7800:	add	x1, x1, #0x1
    7804:	str	x1, [x0]
    7808:	ldp	x29, x30, [sp], #16
    780c:	ret
    7810:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7814:	ldr	x0, [x0, #3976]
    7818:	ldr	x1, [x0]
    781c:	add	x1, x1, #0x1
    7820:	str	x1, [x0]
    7824:	b	7808 <PyFloat_FromString@plt+0xd78>
    7828:	stp	x29, x30, [sp, #-16]!
    782c:	mov	x29, sp
    7830:	add	x0, x0, #0x18
    7834:	bl	280b4 <PyInit__decimal@@Base+0xdf14>
    7838:	cbz	w0, 7858 <PyFloat_FromString@plt+0xdc8>
    783c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7840:	ldr	x0, [x0, #4024]
    7844:	ldr	x1, [x0]
    7848:	add	x1, x1, #0x1
    784c:	str	x1, [x0]
    7850:	ldp	x29, x30, [sp], #16
    7854:	ret
    7858:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    785c:	ldr	x0, [x0, #3976]
    7860:	ldr	x1, [x0]
    7864:	add	x1, x1, #0x1
    7868:	str	x1, [x0]
    786c:	b	7850 <PyFloat_FromString@plt+0xdc0>
    7870:	stp	x29, x30, [sp, #-16]!
    7874:	mov	x29, sp
    7878:	add	x0, x0, #0x18
    787c:	bl	280a4 <PyInit__decimal@@Base+0xdf04>
    7880:	cbz	w0, 78a0 <PyFloat_FromString@plt+0xe10>
    7884:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7888:	ldr	x0, [x0, #4024]
    788c:	ldr	x1, [x0]
    7890:	add	x1, x1, #0x1
    7894:	str	x1, [x0]
    7898:	ldp	x29, x30, [sp], #16
    789c:	ret
    78a0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    78a4:	ldr	x0, [x0, #3976]
    78a8:	ldr	x1, [x0]
    78ac:	add	x1, x1, #0x1
    78b0:	str	x1, [x0]
    78b4:	b	7898 <PyFloat_FromString@plt+0xe08>
    78b8:	stp	x29, x30, [sp, #-32]!
    78bc:	mov	x29, sp
    78c0:	str	x19, [sp, #16]
    78c4:	mov	x19, x1
    78c8:	ldr	x0, [x1, #8]
    78cc:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
    78d0:	add	x2, x2, #0x320
    78d4:	add	x2, x2, #0x1a0
    78d8:	cmp	x0, x2
    78dc:	b.eq	78ec <PyFloat_FromString@plt+0xe5c>  // b.none
    78e0:	mov	x1, x2
    78e4:	bl	69c0 <PyType_IsSubtype@plt>
    78e8:	cbz	w0, 7918 <PyFloat_FromString@plt+0xe88>
    78ec:	add	x0, x19, #0x18
    78f0:	bl	2809c <PyInit__decimal@@Base+0xdefc>
    78f4:	cbz	w0, 7938 <PyFloat_FromString@plt+0xea8>
    78f8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    78fc:	ldr	x0, [x0, #4024]
    7900:	ldr	x1, [x0]
    7904:	add	x1, x1, #0x1
    7908:	str	x1, [x0]
    790c:	ldr	x19, [sp, #16]
    7910:	ldp	x29, x30, [sp], #32
    7914:	ret
    7918:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    791c:	add	x1, x1, #0x350
    7920:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7924:	ldr	x0, [x0, #3936]
    7928:	ldr	x0, [x0]
    792c:	bl	6650 <PyErr_SetString@plt>
    7930:	mov	x0, #0x0                   	// #0
    7934:	b	790c <PyFloat_FromString@plt+0xe7c>
    7938:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    793c:	ldr	x0, [x0, #3976]
    7940:	ldr	x1, [x0]
    7944:	add	x1, x1, #0x1
    7948:	str	x1, [x0]
    794c:	b	790c <PyFloat_FromString@plt+0xe7c>
    7950:	stp	x29, x30, [sp, #-16]!
    7954:	mov	x29, sp
    7958:	add	x0, x0, #0x18
    795c:	bl	2809c <PyInit__decimal@@Base+0xdefc>
    7960:	cbz	w0, 7980 <PyFloat_FromString@plt+0xef0>
    7964:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7968:	ldr	x0, [x0, #4024]
    796c:	ldr	x1, [x0]
    7970:	add	x1, x1, #0x1
    7974:	str	x1, [x0]
    7978:	ldp	x29, x30, [sp], #16
    797c:	ret
    7980:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7984:	ldr	x0, [x0, #3976]
    7988:	ldr	x1, [x0]
    798c:	add	x1, x1, #0x1
    7990:	str	x1, [x0]
    7994:	b	7978 <PyFloat_FromString@plt+0xee8>
    7998:	stp	x29, x30, [sp, #-16]!
    799c:	mov	x29, sp
    79a0:	add	x0, x0, #0x10
    79a4:	bl	27d0c <PyInit__decimal@@Base+0xdb6c>
    79a8:	bl	66a0 <PyLong_FromSsize_t@plt>
    79ac:	ldp	x29, x30, [sp], #16
    79b0:	ret
    79b4:	stp	x29, x30, [sp, #-16]!
    79b8:	mov	x29, sp
    79bc:	add	x0, x0, #0x10
    79c0:	bl	27cf8 <PyInit__decimal@@Base+0xdb58>
    79c4:	bl	66a0 <PyLong_FromSsize_t@plt>
    79c8:	ldp	x29, x30, [sp], #16
    79cc:	ret
    79d0:	stp	x29, x30, [sp, #-32]!
    79d4:	mov	x29, sp
    79d8:	stp	x19, x20, [sp, #16]
    79dc:	mov	x19, x0
    79e0:	ldr	x0, [x0, #8]
    79e4:	ldr	x20, [x0, #32]
    79e8:	add	x0, x19, #0x18
    79ec:	bl	28260 <PyInit__decimal@@Base+0xe0c0>
    79f0:	cbz	w0, 79fc <PyFloat_FromString@plt+0xf6c>
    79f4:	ldr	x0, [x19, #56]
    79f8:	add	x20, x20, x0, lsl #3
    79fc:	mov	x0, x20
    7a00:	bl	66a0 <PyLong_FromSsize_t@plt>
    7a04:	ldp	x19, x20, [sp, #16]
    7a08:	ldp	x29, x30, [sp], #32
    7a0c:	ret
    7a10:	stp	x29, x30, [sp, #-32]!
    7a14:	mov	x29, sp
    7a18:	str	x19, [sp, #16]
    7a1c:	add	x19, x0, #0x18
    7a20:	mov	x0, x19
    7a24:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
    7a28:	cbz	w0, 7a40 <PyFloat_FromString@plt+0xfb0>
    7a2c:	mov	x0, #0x0                   	// #0
    7a30:	bl	66a0 <PyLong_FromSsize_t@plt>
    7a34:	ldr	x19, [sp, #16]
    7a38:	ldp	x29, x30, [sp], #32
    7a3c:	ret
    7a40:	mov	x0, x19
    7a44:	bl	27ce4 <PyInit__decimal@@Base+0xdb44>
    7a48:	b	7a30 <PyFloat_FromString@plt+0xfa0>
    7a4c:	stp	x29, x30, [sp, #-32]!
    7a50:	mov	x29, sp
    7a54:	stp	x19, x20, [sp, #16]
    7a58:	mov	x20, x1
    7a5c:	ldr	x19, [x0, #232]
    7a60:	cbz	x19, 7a80 <PyFloat_FromString@plt+0xff0>
    7a64:	ldr	x1, [x19]
    7a68:	cbz	x1, 7a80 <PyFloat_FromString@plt+0xff0>
    7a6c:	mov	x0, x20
    7a70:	bl	6860 <strcmp@plt>
    7a74:	cbz	w0, 7aac <PyFloat_FromString@plt+0x101c>
    7a78:	ldr	x1, [x19, #32]!
    7a7c:	cbnz	x1, 7a6c <PyFloat_FromString@plt+0xfdc>
    7a80:	mov	x2, x20
    7a84:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7a88:	add	x1, x1, #0x5e0
    7a8c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7a90:	ldr	x0, [x0, #3920]
    7a94:	ldr	x0, [x0]
    7a98:	bl	6a10 <PyErr_Format@plt>
    7a9c:	mov	x0, #0x0                   	// #0
    7aa0:	ldp	x19, x20, [sp, #16]
    7aa4:	ldp	x29, x30, [sp], #32
    7aa8:	ret
    7aac:	ldr	w0, [x19, #16]
    7ab0:	tbz	w0, #2, 7a80 <PyFloat_FromString@plt+0xff0>
    7ab4:	ldr	x0, [x19, #8]
    7ab8:	b	7aa0 <PyFloat_FromString@plt+0x1010>
    7abc:	stp	x29, x30, [sp, #-32]!
    7ac0:	mov	x29, sp
    7ac4:	stp	x19, x20, [sp, #16]
    7ac8:	mov	x1, #0x0                   	// #0
    7acc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7ad0:	ldr	x0, [x0, #1808]
    7ad4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    7ad8:	mov	x19, x0
    7adc:	cbz	x0, 7b0c <PyFloat_FromString@plt+0x107c>
    7ae0:	str	wzr, [x0, #44]
    7ae4:	mov	x1, x0
    7ae8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7aec:	ldr	x0, [x0, #1816]
    7af0:	bl	6680 <PyContextVar_Set@plt>
    7af4:	mov	x20, x0
    7af8:	cbz	x0, 7b1c <PyFloat_FromString@plt+0x108c>
    7afc:	ldr	x0, [x0]
    7b00:	sub	x0, x0, #0x1
    7b04:	str	x0, [x20]
    7b08:	cbz	x0, 7b44 <PyFloat_FromString@plt+0x10b4>
    7b0c:	mov	x0, x19
    7b10:	ldp	x19, x20, [sp, #16]
    7b14:	ldp	x29, x30, [sp], #32
    7b18:	ret
    7b1c:	ldr	x0, [x19]
    7b20:	sub	x0, x0, #0x1
    7b24:	str	x0, [x19]
    7b28:	cbz	x0, 7b34 <PyFloat_FromString@plt+0x10a4>
    7b2c:	mov	x19, x20
    7b30:	b	7b0c <PyFloat_FromString@plt+0x107c>
    7b34:	mov	x0, x19
    7b38:	bl	65d0 <_Py_Dealloc@plt>
    7b3c:	mov	x19, x20
    7b40:	b	7b0c <PyFloat_FromString@plt+0x107c>
    7b44:	mov	x0, x20
    7b48:	bl	65d0 <_Py_Dealloc@plt>
    7b4c:	b	7b0c <PyFloat_FromString@plt+0x107c>
    7b50:	stp	x29, x30, [sp, #-32]!
    7b54:	mov	x29, sp
    7b58:	stp	x19, x20, [sp, #16]
    7b5c:	mov	x19, x1
    7b60:	ldr	x0, [x1, #8]
    7b64:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    7b68:	add	x1, x1, #0x320
    7b6c:	cmp	x0, x1
    7b70:	b.eq	7b84 <PyFloat_FromString@plt+0x10f4>  // b.none
    7b74:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    7b78:	add	x1, x1, #0x320
    7b7c:	bl	69c0 <PyType_IsSubtype@plt>
    7b80:	cbz	w0, 7bc4 <PyFloat_FromString@plt+0x1134>
    7b84:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7b88:	ldr	x0, [x0, #1808]
    7b8c:	cmp	x0, x19
    7b90:	b.eq	7be4 <PyFloat_FromString@plt+0x1154>  // b.none
    7b94:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7b98:	ldr	x0, [x0, #1824]
    7b9c:	cmp	x0, x19
    7ba0:	b.eq	7be4 <PyFloat_FromString@plt+0x1154>  // b.none
    7ba4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7ba8:	ldr	x0, [x0, #1832]
    7bac:	cmp	x0, x19
    7bb0:	b.eq	7be4 <PyFloat_FromString@plt+0x1154>  // b.none
    7bb4:	ldr	x0, [x19]
    7bb8:	add	x0, x0, #0x1
    7bbc:	str	x0, [x19]
    7bc0:	b	7bfc <PyFloat_FromString@plt+0x116c>
    7bc4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7bc8:	add	x1, x1, #0x610
    7bcc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7bd0:	ldr	x0, [x0, #3936]
    7bd4:	ldr	x0, [x0]
    7bd8:	bl	6650 <PyErr_SetString@plt>
    7bdc:	mov	x20, #0x0                   	// #0
    7be0:	b	7c48 <PyFloat_FromString@plt+0x11b8>
    7be4:	mov	x1, #0x0                   	// #0
    7be8:	mov	x0, x19
    7bec:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    7bf0:	mov	x19, x0
    7bf4:	cbz	x0, 7c70 <PyFloat_FromString@plt+0x11e0>
    7bf8:	str	wzr, [x0, #44]
    7bfc:	mov	x1, x19
    7c00:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    7c04:	ldr	x0, [x0, #1816]
    7c08:	bl	6680 <PyContextVar_Set@plt>
    7c0c:	mov	x20, x0
    7c10:	ldr	x0, [x19]
    7c14:	sub	x0, x0, #0x1
    7c18:	str	x0, [x19]
    7c1c:	cbz	x0, 7c58 <PyFloat_FromString@plt+0x11c8>
    7c20:	cbz	x20, 7c48 <PyFloat_FromString@plt+0x11b8>
    7c24:	ldr	x0, [x20]
    7c28:	sub	x0, x0, #0x1
    7c2c:	str	x0, [x20]
    7c30:	cbz	x0, 7c64 <PyFloat_FromString@plt+0x11d4>
    7c34:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    7c38:	ldr	x20, [x20, #4008]
    7c3c:	ldr	x0, [x20]
    7c40:	add	x0, x0, #0x1
    7c44:	str	x0, [x20]
    7c48:	mov	x0, x20
    7c4c:	ldp	x19, x20, [sp, #16]
    7c50:	ldp	x29, x30, [sp], #32
    7c54:	ret
    7c58:	mov	x0, x19
    7c5c:	bl	65d0 <_Py_Dealloc@plt>
    7c60:	b	7c20 <PyFloat_FromString@plt+0x1190>
    7c64:	mov	x0, x20
    7c68:	bl	65d0 <_Py_Dealloc@plt>
    7c6c:	b	7c34 <PyFloat_FromString@plt+0x11a4>
    7c70:	mov	x20, x0
    7c74:	b	7c48 <PyFloat_FromString@plt+0x11b8>
    7c78:	stp	x29, x30, [sp, #-64]!
    7c7c:	mov	x29, sp
    7c80:	stp	x19, x20, [sp, #16]
    7c84:	str	x23, [sp, #48]
    7c88:	ldr	x0, [x0, #16]
    7c8c:	ldr	w23, [x0]
    7c90:	bl	6920 <PyDict_New@plt>
    7c94:	mov	x19, x0
    7c98:	cbz	x0, 7cec <PyFloat_FromString@plt+0x125c>
    7c9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    7ca0:	ldr	x0, [x0, #2464]
    7ca4:	cbz	x0, 7cec <PyFloat_FromString@plt+0x125c>
    7ca8:	stp	x21, x22, [sp, #32]
    7cac:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41e60>
    7cb0:	add	x20, x20, #0x9a0
    7cb4:	adrp	x22, 5b000 <PyInit__decimal@@Base+0x40e60>
    7cb8:	ldr	x22, [x22, #3976]
    7cbc:	adrp	x21, 5b000 <PyInit__decimal@@Base+0x40e60>
    7cc0:	ldr	x21, [x21, #4024]
    7cc4:	ldr	w0, [x20, #16]
    7cc8:	tst	w23, w0
    7ccc:	csel	x2, x21, x22, ne  // ne = any
    7cd0:	ldr	x1, [x20, #24]
    7cd4:	mov	x0, x19
    7cd8:	bl	69a0 <PyDict_SetItem@plt>
    7cdc:	tbnz	w0, #31, 7d00 <PyFloat_FromString@plt+0x1270>
    7ce0:	ldr	x0, [x20, #32]!
    7ce4:	cbnz	x0, 7cc4 <PyFloat_FromString@plt+0x1234>
    7ce8:	ldp	x21, x22, [sp, #32]
    7cec:	mov	x0, x19
    7cf0:	ldp	x19, x20, [sp, #16]
    7cf4:	ldr	x23, [sp, #48]
    7cf8:	ldp	x29, x30, [sp], #64
    7cfc:	ret
    7d00:	ldr	x0, [x19]
    7d04:	sub	x0, x0, #0x1
    7d08:	str	x0, [x19]
    7d0c:	cbz	x0, 7d1c <PyFloat_FromString@plt+0x128c>
    7d10:	mov	x19, #0x0                   	// #0
    7d14:	ldp	x21, x22, [sp, #32]
    7d18:	b	7cec <PyFloat_FromString@plt+0x125c>
    7d1c:	mov	x0, x19
    7d20:	bl	65d0 <_Py_Dealloc@plt>
    7d24:	mov	x19, #0x0                   	// #0
    7d28:	ldp	x21, x22, [sp, #32]
    7d2c:	b	7cec <PyFloat_FromString@plt+0x125c>
    7d30:	stp	x29, x30, [sp, #-16]!
    7d34:	mov	x29, sp
    7d38:	ldr	x1, [x0, #24]
    7d3c:	mov	x0, #0x0                   	// #0
    7d40:	bl	7b50 <PyFloat_FromString@plt+0x10c0>
    7d44:	cbz	x0, 7d6c <PyFloat_FromString@plt+0x12dc>
    7d48:	ldr	x1, [x0]
    7d4c:	sub	x1, x1, #0x1
    7d50:	str	x1, [x0]
    7d54:	cbz	x1, 7d74 <PyFloat_FromString@plt+0x12e4>
    7d58:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7d5c:	ldr	x0, [x0, #4008]
    7d60:	ldr	x1, [x0]
    7d64:	add	x1, x1, #0x1
    7d68:	str	x1, [x0]
    7d6c:	ldp	x29, x30, [sp], #16
    7d70:	ret
    7d74:	bl	65d0 <_Py_Dealloc@plt>
    7d78:	b	7d58 <PyFloat_FromString@plt+0x12c8>
    7d7c:	stp	x29, x30, [sp, #-32]!
    7d80:	mov	x29, sp
    7d84:	str	x19, [sp, #16]
    7d88:	mov	x19, x0
    7d8c:	ldr	x1, [x0, #16]
    7d90:	mov	x0, #0x0                   	// #0
    7d94:	bl	7b50 <PyFloat_FromString@plt+0x10c0>
    7d98:	cbz	x0, 7dc0 <PyFloat_FromString@plt+0x1330>
    7d9c:	ldr	x1, [x0]
    7da0:	sub	x1, x1, #0x1
    7da4:	str	x1, [x0]
    7da8:	cbz	x1, 7dcc <PyFloat_FromString@plt+0x133c>
    7dac:	ldr	x1, [x19, #16]
    7db0:	ldr	x0, [x1]
    7db4:	add	x0, x0, #0x1
    7db8:	str	x0, [x1]
    7dbc:	ldr	x0, [x19, #16]
    7dc0:	ldr	x19, [sp, #16]
    7dc4:	ldp	x29, x30, [sp], #32
    7dc8:	ret
    7dcc:	bl	65d0 <_Py_Dealloc@plt>
    7dd0:	b	7dac <PyFloat_FromString@plt+0x131c>
    7dd4:	stp	x29, x30, [sp, #-32]!
    7dd8:	mov	x29, sp
    7ddc:	str	x19, [sp, #16]
    7de0:	mov	x19, x0
    7de4:	ldr	x0, [x0, #16]
    7de8:	cbz	x0, 7dfc <PyFloat_FromString@plt+0x136c>
    7dec:	ldr	x1, [x0]
    7df0:	sub	x1, x1, #0x1
    7df4:	str	x1, [x0]
    7df8:	cbz	x1, 7e28 <PyFloat_FromString@plt+0x1398>
    7dfc:	ldr	x0, [x19, #24]
    7e00:	cbz	x0, 7e14 <PyFloat_FromString@plt+0x1384>
    7e04:	ldr	x1, [x0]
    7e08:	sub	x1, x1, #0x1
    7e0c:	str	x1, [x0]
    7e10:	cbz	x1, 7e30 <PyFloat_FromString@plt+0x13a0>
    7e14:	mov	x0, x19
    7e18:	bl	6690 <PyObject_Free@plt>
    7e1c:	ldr	x19, [sp, #16]
    7e20:	ldp	x29, x30, [sp], #32
    7e24:	ret
    7e28:	bl	65d0 <_Py_Dealloc@plt>
    7e2c:	b	7dfc <PyFloat_FromString@plt+0x136c>
    7e30:	bl	65d0 <_Py_Dealloc@plt>
    7e34:	b	7e14 <PyFloat_FromString@plt+0x1384>
    7e38:	stp	x29, x30, [sp, #-96]!
    7e3c:	mov	x29, sp
    7e40:	stp	x19, x20, [sp, #16]
    7e44:	mov	x19, x0
    7e48:	bl	69e0 <PyTuple_Size@plt>
    7e4c:	cmp	x0, #0x3
    7e50:	b.ne	7f74 <PyFloat_FromString@plt+0x14e4>  // b.any
    7e54:	ldr	x0, [x19, #24]
    7e58:	ldr	x1, [x0, #8]
    7e5c:	ldr	x1, [x1, #168]
    7e60:	tbz	w1, #24, 7f94 <PyFloat_FromString@plt+0x1504>
    7e64:	bl	6820 <PyLong_AsLong@plt>
    7e68:	cmn	x0, #0x1
    7e6c:	b.eq	7fb0 <PyFloat_FromString@plt+0x1520>  // b.none
    7e70:	cmp	x0, #0x1
    7e74:	b.hi	7fb8 <PyFloat_FromString@plt+0x1528>  // b.pmore
    7e78:	stp	x23, x24, [sp, #48]
    7e7c:	cmp	x0, #0x0
    7e80:	mov	w0, #0x2d                  	// #45
    7e84:	mov	w1, #0x2b                  	// #43
    7e88:	csel	w0, w0, w1, ne  // ne = any
    7e8c:	strb	w0, [sp, #88]
    7e90:	strb	wzr, [sp, #89]
    7e94:	ldr	x20, [x19, #40]
    7e98:	ldr	x0, [x20, #8]
    7e9c:	ldr	x0, [x0, #168]
    7ea0:	tbnz	w0, #28, 7fd4 <PyFloat_FromString@plt+0x1544>
    7ea4:	tbz	w0, #24, 80ac <PyFloat_FromString@plt+0x161c>
    7ea8:	mov	x0, x20
    7eac:	bl	66f0 <PyLong_AsSsize_t@plt>
    7eb0:	mov	x24, x0
    7eb4:	mov	w23, #0x0                   	// #0
    7eb8:	cmn	x0, #0x1
    7ebc:	b.eq	80cc <PyFloat_FromString@plt+0x163c>  // b.none
    7ec0:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
    7ec4:	add	x2, x2, #0x700
    7ec8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7ecc:	ldr	x0, [x0, #3928]
    7ed0:	ldr	x1, [x0]
    7ed4:	ldr	x0, [x19, #32]
    7ed8:	bl	75a8 <PyFloat_FromString@plt+0xb18>
    7edc:	mov	x19, x0
    7ee0:	cbz	x0, 8250 <PyFloat_FromString@plt+0x17c0>
    7ee4:	stp	x21, x22, [sp, #32]
    7ee8:	bl	69e0 <PyTuple_Size@plt>
    7eec:	mov	x22, x0
    7ef0:	add	x20, x0, #0x19
    7ef4:	mov	x0, x20
    7ef8:	bl	6a40 <PyMem_Malloc@plt>
    7efc:	mov	x21, x0
    7f00:	cbz	x0, 80dc <PyFloat_FromString@plt+0x164c>
    7f04:	add	x3, sp, #0x58
    7f08:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
    7f0c:	add	x2, x2, #0x728
    7f10:	mov	x1, x20
    7f14:	bl	6610 <snprintf@plt>
    7f18:	tbnz	w0, #31, 8120 <PyFloat_FromString@plt+0x1690>
    7f1c:	cmp	x20, w0, sxtw
    7f20:	b.le	8120 <PyFloat_FromString@plt+0x1690>
    7f24:	stp	x25, x26, [sp, #64]
    7f28:	add	x26, x21, w0, sxtw
    7f2c:	cbnz	x22, 814c <PyFloat_FromString@plt+0x16bc>
    7f30:	ldrb	w1, [sp, #89]
    7f34:	cbnz	w1, 7f44 <PyFloat_FromString@plt+0x14b4>
    7f38:	mov	w1, #0x30                  	// #48
    7f3c:	strb	w1, [x21, w0, sxtw]
    7f40:	add	x26, x26, #0x1
    7f44:	strb	wzr, [x26]
    7f48:	ldrb	w0, [sp, #89]
    7f4c:	cbz	w0, 81f0 <PyFloat_FromString@plt+0x1760>
    7f50:	ldr	x0, [x19]
    7f54:	sub	x0, x0, #0x1
    7f58:	str	x0, [x19]
    7f5c:	cbz	x0, 8214 <PyFloat_FromString@plt+0x1784>
    7f60:	mov	x19, x21
    7f64:	ldp	x21, x22, [sp, #32]
    7f68:	ldp	x23, x24, [sp, #48]
    7f6c:	ldp	x25, x26, [sp, #64]
    7f70:	b	8110 <PyFloat_FromString@plt+0x1680>
    7f74:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7f78:	add	x1, x1, #0x630
    7f7c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7f80:	ldr	x0, [x0, #3928]
    7f84:	ldr	x0, [x0]
    7f88:	bl	6650 <PyErr_SetString@plt>
    7f8c:	mov	x19, #0x0                   	// #0
    7f90:	b	8110 <PyFloat_FromString@plt+0x1680>
    7f94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7f98:	add	x1, x1, #0x658
    7f9c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7fa0:	ldr	x0, [x0, #3928]
    7fa4:	ldr	x0, [x0]
    7fa8:	bl	6650 <PyErr_SetString@plt>
    7fac:	b	7f8c <PyFloat_FromString@plt+0x14fc>
    7fb0:	bl	67e0 <PyErr_Occurred@plt>
    7fb4:	cbnz	x0, 7f8c <PyFloat_FromString@plt+0x14fc>
    7fb8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7fbc:	add	x1, x1, #0x658
    7fc0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    7fc4:	ldr	x0, [x0, #3928]
    7fc8:	ldr	x0, [x0]
    7fcc:	bl	6650 <PyErr_SetString@plt>
    7fd0:	b	7f8c <PyFloat_FromString@plt+0x14fc>
    7fd4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    7fd8:	add	x1, x1, #0x688
    7fdc:	mov	x0, x20
    7fe0:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    7fe4:	cbnz	w0, 800c <PyFloat_FromString@plt+0x157c>
    7fe8:	add	x20, sp, #0x58
    7fec:	mov	x0, x20
    7ff0:	bl	64d0 <strlen@plt>
    7ff4:	mov	w1, #0x6e49                	// #28233
    7ff8:	movk	w1, #0x66, lsl #16
    7ffc:	str	w1, [x20, x0]
    8000:	mov	w23, #0x1                   	// #1
    8004:	mov	x24, #0x0                   	// #0
    8008:	b	7ec0 <PyFloat_FromString@plt+0x1430>
    800c:	adrp	x1, 3d000 <PyInit__decimal@@Base+0x22e60>
    8010:	add	x1, x1, #0x378
    8014:	mov	x0, x20
    8018:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    801c:	mov	w23, w0
    8020:	cbnz	w0, 8044 <PyFloat_FromString@plt+0x15b4>
    8024:	add	x20, sp, #0x58
    8028:	mov	x0, x20
    802c:	bl	64d0 <strlen@plt>
    8030:	mov	w1, #0x614e                	// #24910
    8034:	movk	w1, #0x4e, lsl #16
    8038:	str	w1, [x20, x0]
    803c:	mov	x24, #0x0                   	// #0
    8040:	b	7ec0 <PyFloat_FromString@plt+0x1430>
    8044:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8048:	add	x1, x1, #0x690
    804c:	mov	x0, x20
    8050:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    8054:	mov	w23, w0
    8058:	cbnz	w0, 808c <PyFloat_FromString@plt+0x15fc>
    805c:	add	x20, sp, #0x58
    8060:	mov	x0, x20
    8064:	bl	64d0 <strlen@plt>
    8068:	add	x2, x20, x0
    806c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8070:	add	x1, x1, #0x698
    8074:	ldr	w3, [x1]
    8078:	str	w3, [x20, x0]
    807c:	ldrb	w0, [x1, #4]
    8080:	strb	w0, [x2, #4]
    8084:	mov	x24, #0x0                   	// #0
    8088:	b	7ec0 <PyFloat_FromString@plt+0x1430>
    808c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8090:	add	x1, x1, #0x6a0
    8094:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8098:	ldr	x0, [x0, #3928]
    809c:	ldr	x0, [x0]
    80a0:	bl	6650 <PyErr_SetString@plt>
    80a4:	ldp	x23, x24, [sp, #48]
    80a8:	b	7f8c <PyFloat_FromString@plt+0x14fc>
    80ac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    80b0:	add	x1, x1, #0x6e0
    80b4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    80b8:	ldr	x0, [x0, #3928]
    80bc:	ldr	x0, [x0]
    80c0:	bl	6650 <PyErr_SetString@plt>
    80c4:	ldp	x23, x24, [sp, #48]
    80c8:	b	7f8c <PyFloat_FromString@plt+0x14fc>
    80cc:	bl	67e0 <PyErr_Occurred@plt>
    80d0:	cbz	x0, 7ec0 <PyFloat_FromString@plt+0x1430>
    80d4:	ldp	x23, x24, [sp, #48]
    80d8:	b	7f8c <PyFloat_FromString@plt+0x14fc>
    80dc:	bl	65e0 <PyErr_NoMemory@plt>
    80e0:	ldr	x0, [x19]
    80e4:	sub	x0, x0, #0x1
    80e8:	str	x0, [x19]
    80ec:	cbnz	x0, 8230 <PyFloat_FromString@plt+0x17a0>
    80f0:	mov	x0, x19
    80f4:	bl	65d0 <_Py_Dealloc@plt>
    80f8:	cbz	x21, 8240 <PyFloat_FromString@plt+0x17b0>
    80fc:	mov	x0, x21
    8100:	bl	6560 <PyMem_Free@plt>
    8104:	mov	x19, #0x0                   	// #0
    8108:	ldp	x21, x22, [sp, #32]
    810c:	ldp	x23, x24, [sp, #48]
    8110:	mov	x0, x19
    8114:	ldp	x19, x20, [sp, #16]
    8118:	ldp	x29, x30, [sp], #96
    811c:	ret
    8120:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8124:	add	x1, x1, #0x730
    8128:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    812c:	ldr	x0, [x0, #3920]
    8130:	ldr	x0, [x0]
    8134:	bl	6650 <PyErr_SetString@plt>
    8138:	ldr	x0, [x19]
    813c:	sub	x0, x0, #0x1
    8140:	str	x0, [x19]
    8144:	cbnz	x0, 80fc <PyFloat_FromString@plt+0x166c>
    8148:	b	80f0 <PyFloat_FromString@plt+0x1660>
    814c:	cmp	x22, #0x0
    8150:	b.le	7f44 <PyFloat_FromString@plt+0x14b4>
    8154:	mov	x20, #0x0                   	// #0
    8158:	add	x25, x19, #0x18
    815c:	b	81bc <PyFloat_FromString@plt+0x172c>
    8160:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8164:	add	x1, x1, #0x700
    8168:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    816c:	ldr	x0, [x0, #3928]
    8170:	ldr	x0, [x0]
    8174:	bl	6650 <PyErr_SetString@plt>
    8178:	ldp	x25, x26, [sp, #64]
    817c:	b	8138 <PyFloat_FromString@plt+0x16a8>
    8180:	bl	67e0 <PyErr_Occurred@plt>
    8184:	cbnz	x0, 81a8 <PyFloat_FromString@plt+0x1718>
    8188:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    818c:	add	x1, x1, #0x700
    8190:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8194:	ldr	x0, [x0, #3928]
    8198:	ldr	x0, [x0]
    819c:	bl	6650 <PyErr_SetString@plt>
    81a0:	ldp	x25, x26, [sp, #64]
    81a4:	b	8138 <PyFloat_FromString@plt+0x16a8>
    81a8:	ldp	x25, x26, [sp, #64]
    81ac:	b	8138 <PyFloat_FromString@plt+0x16a8>
    81b0:	add	x20, x20, #0x1
    81b4:	cmp	x22, x20
    81b8:	b.eq	7f44 <PyFloat_FromString@plt+0x14b4>  // b.none
    81bc:	ldr	x0, [x25, x20, lsl #3]
    81c0:	ldr	x1, [x0, #8]
    81c4:	ldr	x1, [x1, #168]
    81c8:	tbz	w1, #24, 8160 <PyFloat_FromString@plt+0x16d0>
    81cc:	bl	6820 <PyLong_AsLong@plt>
    81d0:	cmn	x0, #0x1
    81d4:	b.eq	8180 <PyFloat_FromString@plt+0x16f0>  // b.none
    81d8:	cmp	x0, #0x9
    81dc:	b.hi	8188 <PyFloat_FromString@plt+0x16f8>  // b.pmore
    81e0:	cbnz	w23, 81b0 <PyFloat_FromString@plt+0x1720>
    81e4:	add	w1, w0, #0x30
    81e8:	strb	w1, [x26], #1
    81ec:	b	81b0 <PyFloat_FromString@plt+0x1720>
    81f0:	mov	x0, x26
    81f4:	mov	w1, #0x45                  	// #69
    81f8:	strb	w1, [x0], #1
    81fc:	mov	x3, x24
    8200:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
    8204:	add	x2, x2, #0x758
    8208:	mov	x1, #0x15                  	// #21
    820c:	bl	6610 <snprintf@plt>
    8210:	b	7f50 <PyFloat_FromString@plt+0x14c0>
    8214:	mov	x0, x19
    8218:	bl	65d0 <_Py_Dealloc@plt>
    821c:	mov	x19, x21
    8220:	ldp	x21, x22, [sp, #32]
    8224:	ldp	x23, x24, [sp, #48]
    8228:	ldp	x25, x26, [sp, #64]
    822c:	b	8110 <PyFloat_FromString@plt+0x1680>
    8230:	mov	x19, x21
    8234:	ldp	x21, x22, [sp, #32]
    8238:	ldp	x23, x24, [sp, #48]
    823c:	b	8110 <PyFloat_FromString@plt+0x1680>
    8240:	mov	x19, x21
    8244:	ldp	x21, x22, [sp, #32]
    8248:	ldp	x23, x24, [sp, #48]
    824c:	b	8110 <PyFloat_FromString@plt+0x1680>
    8250:	ldp	x23, x24, [sp, #48]
    8254:	b	8110 <PyFloat_FromString@plt+0x1680>
    8258:	stp	x29, x30, [sp, #-32]!
    825c:	mov	x29, sp
    8260:	str	x19, [sp, #16]
    8264:	mov	x19, x0
    8268:	ldr	x0, [x0, #64]
    826c:	cbz	x0, 8280 <PyFloat_FromString@plt+0x17f0>
    8270:	ldr	x1, [x0]
    8274:	sub	x1, x1, #0x1
    8278:	str	x1, [x0]
    827c:	cbz	x1, 82b4 <PyFloat_FromString@plt+0x1824>
    8280:	ldr	x0, [x19, #72]
    8284:	cbz	x0, 8298 <PyFloat_FromString@plt+0x1808>
    8288:	ldr	x1, [x0]
    828c:	sub	x1, x1, #0x1
    8290:	str	x1, [x0]
    8294:	cbz	x1, 82bc <PyFloat_FromString@plt+0x182c>
    8298:	ldr	x0, [x19, #8]
    829c:	ldr	x1, [x0, #320]
    82a0:	mov	x0, x19
    82a4:	blr	x1
    82a8:	ldr	x19, [sp, #16]
    82ac:	ldp	x29, x30, [sp], #32
    82b0:	ret
    82b4:	bl	65d0 <_Py_Dealloc@plt>
    82b8:	b	8280 <PyFloat_FromString@plt+0x17f0>
    82bc:	bl	65d0 <_Py_Dealloc@plt>
    82c0:	b	8298 <PyFloat_FromString@plt+0x1808>
    82c4:	stp	x29, x30, [sp, #-96]!
    82c8:	mov	x29, sp
    82cc:	stp	x19, x20, [sp, #16]
    82d0:	stp	x21, x22, [sp, #32]
    82d4:	stp	x23, x24, [sp, #48]
    82d8:	mov	x19, x0
    82dc:	add	x20, x0, #0x18
    82e0:	mov	x0, x20
    82e4:	bl	2a720 <PyInit__decimal@@Base+0x10580>
    82e8:	mov	x21, x0
    82ec:	cbz	x0, 83dc <PyFloat_FromString@plt+0x194c>
    82f0:	stp	x25, x26, [sp, #64]
    82f4:	mov	x0, x20
    82f8:	bl	2821c <PyInit__decimal@@Base+0xe07c>
    82fc:	and	x0, x0, #0xff
    8300:	bl	6940 <PyLong_FromUnsignedLong@plt>
    8304:	mov	x22, x0
    8308:	cbz	x0, 8510 <PyFloat_FromString@plt+0x1a80>
    830c:	mov	x0, x21
    8310:	bl	280b4 <PyInit__decimal@@Base+0xdf14>
    8314:	cbz	w0, 83f4 <PyFloat_FromString@plt+0x1964>
    8318:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    831c:	add	x0, x0, #0x688
    8320:	bl	6960 <PyUnicode_FromString@plt>
    8324:	mov	x23, x0
    8328:	cbz	x0, 8524 <PyFloat_FromString@plt+0x1a94>
    832c:	mov	w1, #0x0                   	// #0
    8330:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    8334:	add	x0, x0, #0x760
    8338:	bl	67d0 <Py_BuildValue@plt>
    833c:	mov	x24, x0
    8340:	cbz	x0, 8534 <PyFloat_FromString@plt+0x1aa4>
    8344:	mov	x25, #0x0                   	// #0
    8348:	mov	x4, #0x0                   	// #0
    834c:	mov	x3, x23
    8350:	mov	x2, x24
    8354:	mov	x1, x22
    8358:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    835c:	ldr	x0, [x0, #1840]
    8360:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    8364:	mov	x19, x0
    8368:	mov	x0, x21
    836c:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8370:	cbz	x25, 856c <PyFloat_FromString@plt+0x1adc>
    8374:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    8378:	ldr	x1, [x0, #1704]
    837c:	mov	x0, x25
    8380:	blr	x1
    8384:	ldp	x25, x26, [sp, #64]
    8388:	cbz	x22, 839c <PyFloat_FromString@plt+0x190c>
    838c:	ldr	x0, [x22]
    8390:	sub	x0, x0, #0x1
    8394:	str	x0, [x22]
    8398:	cbz	x0, 84ec <PyFloat_FromString@plt+0x1a5c>
    839c:	cbz	x24, 83b0 <PyFloat_FromString@plt+0x1920>
    83a0:	ldr	x0, [x24]
    83a4:	sub	x0, x0, #0x1
    83a8:	str	x0, [x24]
    83ac:	cbz	x0, 84f8 <PyFloat_FromString@plt+0x1a68>
    83b0:	cbz	x23, 83c4 <PyFloat_FromString@plt+0x1934>
    83b4:	ldr	x0, [x23]
    83b8:	sub	x0, x0, #0x1
    83bc:	str	x0, [x23]
    83c0:	cbz	x0, 8504 <PyFloat_FromString@plt+0x1a74>
    83c4:	mov	x0, x19
    83c8:	ldp	x19, x20, [sp, #16]
    83cc:	ldp	x21, x22, [sp, #32]
    83d0:	ldp	x23, x24, [sp, #48]
    83d4:	ldp	x29, x30, [sp], #96
    83d8:	ret
    83dc:	bl	65e0 <PyErr_NoMemory@plt>
    83e0:	mov	x23, x21
    83e4:	mov	x24, x21
    83e8:	mov	x22, x21
    83ec:	mov	x19, x21
    83f0:	b	8388 <PyFloat_FromString@plt+0x18f8>
    83f4:	mov	x0, x21
    83f8:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    83fc:	cbz	w0, 84b4 <PyFloat_FromString@plt+0x1a24>
    8400:	mov	x0, x21
    8404:	bl	280e8 <PyInit__decimal@@Base+0xdf48>
    8408:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    840c:	add	x1, x1, #0x690
    8410:	adrp	x2, 3d000 <PyInit__decimal@@Base+0x22e60>
    8414:	add	x2, x2, #0x378
    8418:	cmp	w0, #0x0
    841c:	csel	x0, x2, x1, ne  // ne = any
    8420:	bl	6960 <PyUnicode_FromString@plt>
    8424:	mov	x23, x0
    8428:	cbz	x23, 8540 <PyFloat_FromString@plt+0x1ab0>
    842c:	ldr	x0, [x21, #24]
    8430:	cmp	x0, #0x0
    8434:	b.le	84d4 <PyFloat_FromString@plt+0x1a44>
    8438:	str	xzr, [x21, #8]
    843c:	mov	x0, x21
    8440:	bl	28854 <PyInit__decimal@@Base+0xe6b4>
    8444:	mov	w1, #0x1                   	// #1
    8448:	mov	x0, x21
    844c:	bl	23f2c <PyInit__decimal@@Base+0x9d8c>
    8450:	mov	x25, x0
    8454:	cbz	x0, 84c4 <PyFloat_FromString@plt+0x1a34>
    8458:	bl	64d0 <strlen@plt>
    845c:	mov	x19, x0
    8460:	mov	x26, x0
    8464:	bl	67a0 <PyTuple_New@plt>
    8468:	mov	x24, x0
    846c:	cbz	x0, 8550 <PyFloat_FromString@plt+0x1ac0>
    8470:	cmp	x19, #0x0
    8474:	b.le	8348 <PyFloat_FromString@plt+0x18b8>
    8478:	str	x27, [sp, #80]
    847c:	mov	x20, #0x0                   	// #0
    8480:	add	x27, x0, #0x18
    8484:	ldrb	w0, [x25, x20]
    8488:	sub	w0, w0, #0x30
    848c:	sxtw	x0, w0
    8490:	bl	66e0 <PyLong_FromLong@plt>
    8494:	mov	x19, x0
    8498:	cbz	x0, 8564 <PyFloat_FromString@plt+0x1ad4>
    849c:	str	x0, [x27, x20, lsl #3]
    84a0:	add	x20, x20, #0x1
    84a4:	cmp	x26, x20
    84a8:	b.ne	8484 <PyFloat_FromString@plt+0x19f4>  // b.any
    84ac:	ldr	x27, [sp, #80]
    84b0:	b	8348 <PyFloat_FromString@plt+0x18b8>
    84b4:	ldr	x0, [x19, #32]
    84b8:	bl	66a0 <PyLong_FromSsize_t@plt>
    84bc:	mov	x23, x0
    84c0:	b	8428 <PyFloat_FromString@plt+0x1998>
    84c4:	bl	65e0 <PyErr_NoMemory@plt>
    84c8:	mov	x24, x25
    84cc:	mov	x19, x25
    84d0:	b	8368 <PyFloat_FromString@plt+0x18d8>
    84d4:	mov	x0, #0x0                   	// #0
    84d8:	bl	67a0 <PyTuple_New@plt>
    84dc:	mov	x24, x0
    84e0:	cbz	x0, 8558 <PyFloat_FromString@plt+0x1ac8>
    84e4:	mov	x25, #0x0                   	// #0
    84e8:	b	8348 <PyFloat_FromString@plt+0x18b8>
    84ec:	mov	x0, x22
    84f0:	bl	65d0 <_Py_Dealloc@plt>
    84f4:	b	839c <PyFloat_FromString@plt+0x190c>
    84f8:	mov	x0, x24
    84fc:	bl	65d0 <_Py_Dealloc@plt>
    8500:	b	83b0 <PyFloat_FromString@plt+0x1920>
    8504:	mov	x0, x23
    8508:	bl	65d0 <_Py_Dealloc@plt>
    850c:	b	83c4 <PyFloat_FromString@plt+0x1934>
    8510:	mov	x25, x0
    8514:	mov	x23, x0
    8518:	mov	x24, x0
    851c:	mov	x19, x0
    8520:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8524:	mov	x25, x0
    8528:	mov	x24, x0
    852c:	mov	x19, x0
    8530:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8534:	mov	x25, x0
    8538:	mov	x19, x0
    853c:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8540:	mov	x25, x23
    8544:	mov	x24, x23
    8548:	mov	x19, x23
    854c:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8550:	mov	x19, x0
    8554:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8558:	mov	x25, x0
    855c:	mov	x19, x0
    8560:	b	8368 <PyFloat_FromString@plt+0x18d8>
    8564:	ldr	x27, [sp, #80]
    8568:	b	8368 <PyFloat_FromString@plt+0x18d8>
    856c:	ldp	x25, x26, [sp, #64]
    8570:	b	8388 <PyFloat_FromString@plt+0x18f8>
    8574:	stp	x29, x30, [sp, #-32]!
    8578:	mov	x29, sp
    857c:	stp	x19, x20, [sp, #16]
    8580:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    8584:	add	x1, x1, #0x320
    8588:	cmp	x0, x1
    858c:	b.eq	8634 <PyFloat_FromString@plt+0x1ba4>  // b.none
    8590:	ldr	x2, [x0, #304]
    8594:	mov	x1, #0x0                   	// #0
    8598:	blr	x2
    859c:	mov	x19, x0
    85a0:	cbz	x19, 8624 <PyFloat_FromString@plt+0x1b94>
    85a4:	mov	x1, #0x0                   	// #0
    85a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    85ac:	ldr	x0, [x0, #1736]
    85b0:	bl	6840 <PyObject_CallObject@plt>
    85b4:	mov	x20, x0
    85b8:	str	x0, [x19, #64]
    85bc:	cbz	x0, 8644 <PyFloat_FromString@plt+0x1bb4>
    85c0:	mov	x1, #0x0                   	// #0
    85c4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    85c8:	ldr	x0, [x0, #1736]
    85cc:	bl	6840 <PyObject_CallObject@plt>
    85d0:	mov	x20, x0
    85d4:	str	x0, [x19, #72]
    85d8:	cbz	x0, 8670 <PyFloat_FromString@plt+0x1be0>
    85dc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    85e0:	ldr	x0, [x0, #1808]
    85e4:	cbz	x0, 8698 <PyFloat_FromString@plt+0x1c08>
    85e8:	ldp	x4, x5, [x0, #16]
    85ec:	stp	x4, x5, [x19, #16]
    85f0:	ldp	x4, x5, [x0, #32]
    85f4:	stp	x4, x5, [x19, #32]
    85f8:	ldp	x2, x3, [x0, #48]
    85fc:	stp	x2, x3, [x19, #48]
    8600:	ldr	x0, [x19, #64]
    8604:	add	x1, x19, #0x28
    8608:	str	x1, [x0, #16]
    860c:	ldr	x0, [x19, #72]
    8610:	add	x1, x19, #0x2c
    8614:	str	x1, [x0, #16]
    8618:	mov	w0, #0x1                   	// #1
    861c:	str	w0, [x19, #80]
    8620:	str	xzr, [x19, #88]
    8624:	mov	x0, x19
    8628:	ldp	x19, x20, [sp, #16]
    862c:	ldp	x29, x30, [sp], #32
    8630:	ret
    8634:	mov	x0, x1
    8638:	bl	6950 <_PyObject_New@plt>
    863c:	mov	x19, x0
    8640:	b	85a0 <PyFloat_FromString@plt+0x1b10>
    8644:	str	xzr, [x19, #72]
    8648:	ldr	x0, [x19]
    864c:	sub	x0, x0, #0x1
    8650:	str	x0, [x19]
    8654:	cbz	x0, 8660 <PyFloat_FromString@plt+0x1bd0>
    8658:	mov	x19, x20
    865c:	b	8624 <PyFloat_FromString@plt+0x1b94>
    8660:	mov	x0, x19
    8664:	bl	65d0 <_Py_Dealloc@plt>
    8668:	mov	x19, x20
    866c:	b	8624 <PyFloat_FromString@plt+0x1b94>
    8670:	ldr	x0, [x19]
    8674:	sub	x0, x0, #0x1
    8678:	str	x0, [x19]
    867c:	cbz	x0, 8688 <PyFloat_FromString@plt+0x1bf8>
    8680:	mov	x19, x20
    8684:	b	8624 <PyFloat_FromString@plt+0x1b94>
    8688:	mov	x0, x19
    868c:	bl	65d0 <_Py_Dealloc@plt>
    8690:	mov	x19, x20
    8694:	b	8624 <PyFloat_FromString@plt+0x1b94>
    8698:	adrp	x0, 3d000 <PyInit__decimal@@Base+0x22e60>
    869c:	add	x0, x0, #0x6d0
    86a0:	ldp	x2, x3, [x0]
    86a4:	stp	x2, x3, [x19, #16]
    86a8:	ldp	x2, x3, [x0, #16]
    86ac:	stp	x2, x3, [x19, #32]
    86b0:	ldp	x2, x3, [x0, #32]
    86b4:	stp	x2, x3, [x19, #48]
    86b8:	b	8600 <PyFloat_FromString@plt+0x1b70>
    86bc:	stp	x29, x30, [sp, #-48]!
    86c0:	mov	x29, sp
    86c4:	stp	x19, x20, [sp, #16]
    86c8:	ldr	w2, [x0, #44]
    86cc:	orr	w2, w2, w1
    86d0:	str	w2, [x0, #44]
    86d4:	ldr	w19, [x0, #40]
    86d8:	orr	w0, w19, #0x200
    86dc:	tst	w0, w1
    86e0:	b.eq	8820 <PyFloat_FromString@plt+0x1d90>  // b.none
    86e4:	tbnz	w1, #9, 873c <PyFloat_FromString@plt+0x1cac>
    86e8:	and	w19, w19, w1
    86ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    86f0:	ldr	x0, [x0, #2464]
    86f4:	cbz	x0, 871c <PyFloat_FromString@plt+0x1c8c>
    86f8:	stp	x21, x22, [sp, #32]
    86fc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    8700:	add	x0, x0, #0x9a0
    8704:	ldr	w1, [x0, #16]
    8708:	tst	w19, w1
    870c:	b.ne	8748 <PyFloat_FromString@plt+0x1cb8>  // b.any
    8710:	ldr	x1, [x0, #32]!
    8714:	cbnz	x1, 8704 <PyFloat_FromString@plt+0x1c74>
    8718:	ldp	x21, x22, [sp, #32]
    871c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8720:	add	x1, x1, #0x768
    8724:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8728:	ldr	x0, [x0, #3920]
    872c:	ldr	x0, [x0]
    8730:	bl	6650 <PyErr_SetString@plt>
    8734:	mov	w0, #0x1                   	// #1
    8738:	b	8824 <PyFloat_FromString@plt+0x1d94>
    873c:	bl	65e0 <PyErr_NoMemory@plt>
    8740:	mov	w0, #0x1                   	// #1
    8744:	b	8824 <PyFloat_FromString@plt+0x1d94>
    8748:	ldr	x22, [x0, #24]
    874c:	cbz	x22, 8830 <PyFloat_FromString@plt+0x1da0>
    8750:	mov	x0, #0x0                   	// #0
    8754:	bl	64a0 <PyList_New@plt>
    8758:	mov	x21, x0
    875c:	cbz	x0, 87b0 <PyFloat_FromString@plt+0x1d20>
    8760:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    8764:	ldr	x0, [x0, #2784]
    8768:	cbz	x0, 87bc <PyFloat_FromString@plt+0x1d2c>
    876c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41e60>
    8770:	add	x20, x20, #0x9a0
    8774:	add	x20, x20, #0x140
    8778:	b	8784 <PyFloat_FromString@plt+0x1cf4>
    877c:	ldr	x0, [x20, #32]!
    8780:	cbz	x0, 87bc <PyFloat_FromString@plt+0x1d2c>
    8784:	ldr	w0, [x20, #16]
    8788:	tst	w19, w0
    878c:	b.eq	877c <PyFloat_FromString@plt+0x1cec>  // b.none
    8790:	ldr	x1, [x20, #24]
    8794:	mov	x0, x21
    8798:	bl	6770 <PyList_Append@plt>
    879c:	tbz	w0, #31, 877c <PyFloat_FromString@plt+0x1cec>
    87a0:	ldr	x0, [x21]
    87a4:	sub	x0, x0, #0x1
    87a8:	str	x0, [x21]
    87ac:	cbz	x0, 8800 <PyFloat_FromString@plt+0x1d70>
    87b0:	mov	w0, #0x1                   	// #1
    87b4:	ldp	x21, x22, [sp, #32]
    87b8:	b	8824 <PyFloat_FromString@plt+0x1d94>
    87bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    87c0:	ldr	x0, [x0, #2496]
    87c4:	cbz	x0, 883c <PyFloat_FromString@plt+0x1dac>
    87c8:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41e60>
    87cc:	add	x20, x20, #0x9a0
    87d0:	add	x20, x20, #0x20
    87d4:	b	87e0 <PyFloat_FromString@plt+0x1d50>
    87d8:	ldr	x0, [x20, #32]!
    87dc:	cbz	x0, 883c <PyFloat_FromString@plt+0x1dac>
    87e0:	ldr	w0, [x20, #16]
    87e4:	tst	w19, w0
    87e8:	b.eq	87d8 <PyFloat_FromString@plt+0x1d48>  // b.none
    87ec:	ldr	x1, [x20, #24]
    87f0:	mov	x0, x21
    87f4:	bl	6770 <PyList_Append@plt>
    87f8:	tbz	w0, #31, 87d8 <PyFloat_FromString@plt+0x1d48>
    87fc:	b	87a0 <PyFloat_FromString@plt+0x1d10>
    8800:	mov	x0, x21
    8804:	bl	65d0 <_Py_Dealloc@plt>
    8808:	b	87b0 <PyFloat_FromString@plt+0x1d20>
    880c:	mov	x0, x21
    8810:	bl	65d0 <_Py_Dealloc@plt>
    8814:	mov	w0, #0x1                   	// #1
    8818:	ldp	x21, x22, [sp, #32]
    881c:	b	8824 <PyFloat_FromString@plt+0x1d94>
    8820:	mov	w0, #0x0                   	// #0
    8824:	ldp	x19, x20, [sp, #16]
    8828:	ldp	x29, x30, [sp], #48
    882c:	ret
    8830:	mov	w0, #0x1                   	// #1
    8834:	ldp	x21, x22, [sp, #32]
    8838:	b	8824 <PyFloat_FromString@plt+0x1d94>
    883c:	mov	x1, x21
    8840:	mov	x0, x22
    8844:	bl	65f0 <PyErr_SetObject@plt>
    8848:	ldr	x1, [x21]
    884c:	sub	x1, x1, #0x1
    8850:	str	x1, [x21]
    8854:	mov	w0, #0x1                   	// #1
    8858:	cbz	x1, 880c <PyFloat_FromString@plt+0x1d7c>
    885c:	ldp	x21, x22, [sp, #32]
    8860:	b	8824 <PyFloat_FromString@plt+0x1d94>
    8864:	stp	x29, x30, [sp, #-128]!
    8868:	mov	x29, sp
    886c:	stp	x19, x20, [sp, #16]
    8870:	stp	x21, x22, [sp, #32]
    8874:	mov	x19, x1
    8878:	mov	w22, w2
    887c:	str	wzr, [sp, #68]
    8880:	add	x21, x0, #0x18
    8884:	mov	x0, x21
    8888:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
    888c:	cbnz	w0, 8948 <PyFloat_FromString@plt+0x1eb8>
    8890:	bl	252e0 <PyInit__decimal@@Base+0xb140>
    8894:	mov	x20, x0
    8898:	cbz	x0, 8994 <PyFloat_FromString@plt+0x1f04>
    889c:	ldp	x2, x3, [x19, #16]
    88a0:	stp	x2, x3, [sp, #72]
    88a4:	ldp	x2, x3, [x19, #32]
    88a8:	stp	x2, x3, [sp, #88]
    88ac:	ldp	x0, x1, [x19, #48]
    88b0:	stp	x0, x1, [sp, #104]
    88b4:	str	w22, [sp, #108]
    88b8:	add	x3, sp, #0x44
    88bc:	add	x2, sp, #0x48
    88c0:	mov	x1, x21
    88c4:	mov	x0, x20
    88c8:	bl	31f08 <PyInit__decimal@@Base+0x17d68>
    88cc:	ldr	w1, [sp, #68]
    88d0:	mov	x0, x19
    88d4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    88d8:	cbnz	w0, 89a0 <PyFloat_FromString@plt+0x1f10>
    88dc:	str	wzr, [sp, #68]
    88e0:	str	xzr, [sp, #120]
    88e4:	add	x4, sp, #0x44
    88e8:	mov	x3, x20
    88ec:	mov	w2, #0x40000000            	// #1073741824
    88f0:	mov	x1, #0x0                   	// #0
    88f4:	add	x0, sp, #0x78
    88f8:	bl	38af8 <PyInit__decimal@@Base+0x1e958>
    88fc:	mov	x22, x0
    8900:	cmn	x0, #0x1
    8904:	b.eq	89b0 <PyFloat_FromString@plt+0x1f20>  // b.none
    8908:	mov	x19, x0
    890c:	bl	65a0 <_PyLong_New@plt>
    8910:	mov	x21, x0
    8914:	cbz	x0, 89c4 <PyFloat_FromString@plt+0x1f34>
    8918:	str	x23, [sp, #48]
    891c:	ldr	x23, [sp, #120]
    8920:	lsl	x2, x22, #2
    8924:	mov	x1, x23
    8928:	add	x0, x0, #0x18
    892c:	bl	6470 <memcpy@plt>
    8930:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    8934:	ldr	x1, [x0, #1704]
    8938:	mov	x0, x23
    893c:	blr	x1
    8940:	add	x0, x21, #0x18
    8944:	b	89e4 <PyFloat_FromString@plt+0x1f54>
    8948:	mov	x0, x21
    894c:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    8950:	cbz	w0, 8974 <PyFloat_FromString@plt+0x1ee4>
    8954:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8958:	add	x1, x1, #0x790
    895c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8960:	ldr	x0, [x0, #3928]
    8964:	ldr	x0, [x0]
    8968:	bl	6650 <PyErr_SetString@plt>
    896c:	mov	x21, #0x0                   	// #0
    8970:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    8974:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8978:	add	x1, x1, #0x7b0
    897c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8980:	ldr	x0, [x0, #3992]
    8984:	ldr	x0, [x0]
    8988:	bl	6650 <PyErr_SetString@plt>
    898c:	mov	x21, #0x0                   	// #0
    8990:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    8994:	bl	65e0 <PyErr_NoMemory@plt>
    8998:	mov	x21, x20
    899c:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    89a0:	mov	x0, x20
    89a4:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    89a8:	mov	x21, #0x0                   	// #0
    89ac:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    89b0:	bl	65e0 <PyErr_NoMemory@plt>
    89b4:	mov	x0, x20
    89b8:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    89bc:	mov	x21, #0x0                   	// #0
    89c0:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    89c4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    89c8:	ldr	x1, [x0, #1704]
    89cc:	ldr	x0, [sp, #120]
    89d0:	blr	x1
    89d4:	mov	x0, x20
    89d8:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    89dc:	b	8a14 <PyFloat_FromString@plt+0x1f84>
    89e0:	mov	x19, x1
    89e4:	cmp	x19, #0x0
    89e8:	b.le	89f8 <PyFloat_FromString@plt+0x1f68>
    89ec:	sub	x1, x19, #0x1
    89f0:	ldr	w2, [x0, x1, lsl #2]
    89f4:	cbz	w2, 89e0 <PyFloat_FromString@plt+0x1f50>
    89f8:	str	x19, [x21, #16]
    89fc:	mov	x0, x20
    8a00:	bl	280cc <PyInit__decimal@@Base+0xdf2c>
    8a04:	cbnz	w0, 8a28 <PyFloat_FromString@plt+0x1f98>
    8a08:	mov	x0, x20
    8a0c:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8a10:	ldr	x23, [sp, #48]
    8a14:	mov	x0, x21
    8a18:	ldp	x19, x20, [sp, #16]
    8a1c:	ldp	x21, x22, [sp, #32]
    8a20:	ldp	x29, x30, [sp], #128
    8a24:	ret
    8a28:	mov	x0, x20
    8a2c:	bl	28118 <PyInit__decimal@@Base+0xdf78>
    8a30:	cbnz	w0, 8a08 <PyFloat_FromString@plt+0x1f78>
    8a34:	neg	x19, x19
    8a38:	str	x19, [x21, #16]
    8a3c:	b	8a08 <PyFloat_FromString@plt+0x1f78>
    8a40:	stp	x29, x30, [sp, #-112]!
    8a44:	mov	x29, sp
    8a48:	stp	x19, x20, [sp, #16]
    8a4c:	mov	x20, x0
    8a50:	str	wzr, [sp, #108]
    8a54:	ldr	x0, [x1, #8]
    8a58:	ldr	x0, [x0, #168]
    8a5c:	tbz	w0, #24, 8ad4 <PyFloat_FromString@plt+0x2044>
    8a60:	stp	x21, x22, [sp, #32]
    8a64:	mov	x19, x1
    8a68:	mov	x22, x2
    8a6c:	add	x21, sp, #0x38
    8a70:	mov	x0, x21
    8a74:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
    8a78:	add	x3, sp, #0x6c
    8a7c:	mov	x2, x21
    8a80:	mov	x1, x19
    8a84:	mov	x0, x20
    8a88:	bl	7398 <PyFloat_FromString@plt+0x908>
    8a8c:	mov	x19, x0
    8a90:	cbz	x0, 8b38 <PyFloat_FromString@plt+0x20a8>
    8a94:	ldr	w1, [sp, #108]
    8a98:	mov	w0, #0x1041                	// #4161
    8a9c:	tst	w1, w0
    8aa0:	b.ne	8af4 <PyFloat_FromString@plt+0x2064>  // b.any
    8aa4:	ldr	w1, [sp, #108]
    8aa8:	mov	w0, #0x3be                 	// #958
    8aac:	and	w1, w1, w0
    8ab0:	str	w1, [sp, #108]
    8ab4:	mov	x0, x22
    8ab8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    8abc:	cbnz	w0, 8b08 <PyFloat_FromString@plt+0x2078>
    8ac0:	ldp	x21, x22, [sp, #32]
    8ac4:	mov	x0, x19
    8ac8:	ldp	x19, x20, [sp, #16]
    8acc:	ldp	x29, x30, [sp], #112
    8ad0:	ret
    8ad4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8ad8:	add	x1, x1, #0x7d8
    8adc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8ae0:	ldr	x0, [x0, #3936]
    8ae4:	ldr	x0, [x0]
    8ae8:	bl	6650 <PyErr_SetString@plt>
    8aec:	mov	x19, #0x0                   	// #0
    8af0:	b	8ac4 <PyFloat_FromString@plt+0x2034>
    8af4:	add	x2, sp, #0x6c
    8af8:	mov	w1, #0x100                 	// #256
    8afc:	add	x0, x19, #0x18
    8b00:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
    8b04:	b	8aa4 <PyFloat_FromString@plt+0x2014>
    8b08:	ldr	x0, [x19]
    8b0c:	sub	x0, x0, #0x1
    8b10:	str	x0, [x19]
    8b14:	cbz	x0, 8b24 <PyFloat_FromString@plt+0x2094>
    8b18:	mov	x19, #0x0                   	// #0
    8b1c:	ldp	x21, x22, [sp, #32]
    8b20:	b	8ac4 <PyFloat_FromString@plt+0x2034>
    8b24:	mov	x0, x19
    8b28:	bl	65d0 <_Py_Dealloc@plt>
    8b2c:	mov	x19, #0x0                   	// #0
    8b30:	ldp	x21, x22, [sp, #32]
    8b34:	b	8ac4 <PyFloat_FromString@plt+0x2034>
    8b38:	ldp	x21, x22, [sp, #32]
    8b3c:	b	8ac4 <PyFloat_FromString@plt+0x2034>
    8b40:	stp	x29, x30, [sp, #-144]!
    8b44:	mov	x29, sp
    8b48:	stp	x19, x20, [sp, #16]
    8b4c:	stp	x21, x22, [sp, #32]
    8b50:	mov	x21, x0
    8b54:	mov	x20, x1
    8b58:	mov	x22, x2
    8b5c:	str	wzr, [sp, #140]
    8b60:	ldr	x0, [x1, #8]
    8b64:	ldr	x1, [x0, #168]
    8b68:	tbnz	w1, #24, 8c10 <PyFloat_FromString@plt+0x2180>
    8b6c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    8b70:	ldr	x1, [x1, #3864]
    8b74:	cmp	x0, x1
    8b78:	b.eq	8b8c <PyFloat_FromString@plt+0x20fc>  // b.none
    8b7c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    8b80:	ldr	x1, [x1, #3864]
    8b84:	bl	69c0 <PyType_IsSubtype@plt>
    8b88:	cbz	w0, 8c24 <PyFloat_FromString@plt+0x2194>
    8b8c:	stp	x23, x24, [sp, #48]
    8b90:	mov	x0, x20
    8b94:	bl	68c0 <PyFloat_AsDouble@plt>
    8b98:	fmov	d1, #-1.000000000000000000e+00
    8b9c:	fcmp	d0, d1
    8ba0:	b.eq	8c44 <PyFloat_FromString@plt+0x21b4>  // b.none
    8ba4:	fmov	d2, #1.000000000000000000e+00
    8ba8:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    8bac:	fmov	d1, x0
    8bb0:	bsl	v1.8b, v0.8b, v2.8b
    8bb4:	fcmp	d1, d2
    8bb8:	cset	w23, ne  // ne = any
    8bbc:	fcmp	d0, d0
    8bc0:	b.vs	8f68 <PyFloat_FromString@plt+0x24d8>
    8bc4:	fabs	d0, d0
    8bc8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    8bcc:	fmov	d1, x0
    8bd0:	fcmp	d0, d1
    8bd4:	b.le	8c54 <PyFloat_FromString@plt+0x21c4>
    8bd8:	mov	x0, x21
    8bdc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    8be0:	mov	x19, x0
    8be4:	cbz	x0, 8f60 <PyFloat_FromString@plt+0x24d0>
    8be8:	mov	w2, #0x2                   	// #2
    8bec:	mov	w1, w23
    8bf0:	add	x0, x19, #0x18
    8bf4:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
    8bf8:	ldp	x23, x24, [sp, #48]
    8bfc:	mov	x0, x19
    8c00:	ldp	x19, x20, [sp, #16]
    8c04:	ldp	x21, x22, [sp, #32]
    8c08:	ldp	x29, x30, [sp], #144
    8c0c:	ret
    8c10:	mov	x1, x20
    8c14:	mov	x0, x21
    8c18:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    8c1c:	mov	x19, x0
    8c20:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8c24:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    8c28:	add	x1, x1, #0x7f8
    8c2c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    8c30:	ldr	x0, [x0, #3936]
    8c34:	ldr	x0, [x0]
    8c38:	bl	6650 <PyErr_SetString@plt>
    8c3c:	mov	x19, #0x0                   	// #0
    8c40:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8c44:	bl	67e0 <PyErr_Occurred@plt>
    8c48:	mov	x19, #0x0                   	// #0
    8c4c:	mov	w23, #0x1                   	// #1
    8c50:	cbnz	x0, 8f98 <PyFloat_FromString@plt+0x2508>
    8c54:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    8c58:	ldr	x1, [x0, #1848]
    8c5c:	mov	x0, x20
    8c60:	blr	x1
    8c64:	mov	x19, x0
    8c68:	cbz	x0, 8fa0 <PyFloat_FromString@plt+0x2510>
    8c6c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    8c70:	ldr	x2, [x0, #1856]
    8c74:	mov	x1, #0x0                   	// #0
    8c78:	mov	x0, x19
    8c7c:	blr	x2
    8c80:	mov	x20, x0
    8c84:	ldr	x0, [x19]
    8c88:	sub	x0, x0, #0x1
    8c8c:	str	x0, [x19]
    8c90:	cbz	x0, 8ddc <PyFloat_FromString@plt+0x234c>
    8c94:	cbz	x20, 8f54 <PyFloat_FromString@plt+0x24c4>
    8c98:	stp	x25, x26, [sp, #64]
    8c9c:	ldr	x25, [x20, #24]
    8ca0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    8ca4:	ldr	x2, [x0, #1864]
    8ca8:	mov	x1, #0x0                   	// #0
    8cac:	ldr	x0, [x20, #32]
    8cb0:	blr	x2
    8cb4:	mov	x19, x0
    8cb8:	cbz	x0, 8de8 <PyFloat_FromString@plt+0x2358>
    8cbc:	bl	66f0 <PyLong_AsSsize_t@plt>
    8cc0:	mov	x24, x0
    8cc4:	ldr	x1, [x19]
    8cc8:	sub	x1, x1, #0x1
    8ccc:	str	x1, [x19]
    8cd0:	cbz	x1, 8e18 <PyFloat_FromString@plt+0x2388>
    8cd4:	cmn	x24, #0x1
    8cd8:	b.eq	8e24 <PyFloat_FromString@plt+0x2394>  // b.none
    8cdc:	mov	x2, x22
    8ce0:	mov	x1, x25
    8ce4:	mov	x0, x21
    8ce8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    8cec:	mov	x19, x0
    8cf0:	ldr	x0, [x20]
    8cf4:	sub	x0, x0, #0x1
    8cf8:	str	x0, [x20]
    8cfc:	cbz	x0, 8e60 <PyFloat_FromString@plt+0x23d0>
    8d00:	cbz	x19, 8fa8 <PyFloat_FromString@plt+0x2518>
    8d04:	bl	252e0 <PyInit__decimal@@Base+0xb140>
    8d08:	mov	x20, x0
    8d0c:	cbz	x0, 8e6c <PyFloat_FromString@plt+0x23dc>
    8d10:	bl	252e0 <PyInit__decimal@@Base+0xb140>
    8d14:	mov	x21, x0
    8d18:	cbz	x0, 8e9c <PyFloat_FromString@plt+0x240c>
    8d1c:	add	x25, sp, #0x58
    8d20:	mov	x0, x25
    8d24:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
    8d28:	add	x26, sp, #0x8c
    8d2c:	mov	x3, x26
    8d30:	mov	x2, x25
    8d34:	mov	x1, #0x5                   	// #5
    8d38:	mov	x0, x20
    8d3c:	bl	2c670 <PyInit__decimal@@Base+0x124d0>
    8d40:	mov	x3, x26
    8d44:	mov	x2, x25
    8d48:	sub	x1, x24, #0x1
    8d4c:	mov	x0, x21
    8d50:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
    8d54:	mov	x4, x26
    8d58:	mov	x3, x25
    8d5c:	mov	x2, x21
    8d60:	mov	x1, x20
    8d64:	mov	x0, x20
    8d68:	bl	36960 <PyInit__decimal@@Base+0x1c7c0>
    8d6c:	ldr	w1, [sp, #140]
    8d70:	mov	x0, x22
    8d74:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    8d78:	cbnz	w0, 8ed4 <PyFloat_FromString@plt+0x2444>
    8d7c:	add	x25, x19, #0x18
    8d80:	add	x4, sp, #0x8c
    8d84:	add	x3, sp, #0x58
    8d88:	mov	x2, x20
    8d8c:	mov	x1, x25
    8d90:	mov	x0, x25
    8d94:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
    8d98:	mov	x0, x20
    8d9c:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8da0:	mov	x0, x21
    8da4:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8da8:	ldr	w1, [sp, #140]
    8dac:	mov	x0, x22
    8db0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    8db4:	cbnz	w0, 8f1c <PyFloat_FromString@plt+0x248c>
    8db8:	mov	w1, w23
    8dbc:	mov	x0, x25
    8dc0:	bl	28764 <PyInit__decimal@@Base+0xe5c4>
    8dc4:	mov	x0, #0x1                   	// #1
    8dc8:	sub	x24, x0, x24
    8dcc:	str	x24, [x19, #32]
    8dd0:	ldp	x23, x24, [sp, #48]
    8dd4:	ldp	x25, x26, [sp, #64]
    8dd8:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8ddc:	mov	x0, x19
    8de0:	bl	65d0 <_Py_Dealloc@plt>
    8de4:	b	8c94 <PyFloat_FromString@plt+0x2204>
    8de8:	ldr	x0, [x20]
    8dec:	sub	x0, x0, #0x1
    8df0:	str	x0, [x20]
    8df4:	cbz	x0, 8e04 <PyFloat_FromString@plt+0x2374>
    8df8:	ldp	x23, x24, [sp, #48]
    8dfc:	ldp	x25, x26, [sp, #64]
    8e00:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8e04:	mov	x0, x20
    8e08:	bl	65d0 <_Py_Dealloc@plt>
    8e0c:	ldp	x23, x24, [sp, #48]
    8e10:	ldp	x25, x26, [sp, #64]
    8e14:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8e18:	mov	x0, x19
    8e1c:	bl	65d0 <_Py_Dealloc@plt>
    8e20:	b	8cd4 <PyFloat_FromString@plt+0x2244>
    8e24:	bl	67e0 <PyErr_Occurred@plt>
    8e28:	cbz	x0, 8cdc <PyFloat_FromString@plt+0x224c>
    8e2c:	ldr	x0, [x20]
    8e30:	sub	x0, x0, #0x1
    8e34:	str	x0, [x20]
    8e38:	mov	x19, #0x0                   	// #0
    8e3c:	cbz	x0, 8e4c <PyFloat_FromString@plt+0x23bc>
    8e40:	ldp	x23, x24, [sp, #48]
    8e44:	ldp	x25, x26, [sp, #64]
    8e48:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8e4c:	mov	x0, x20
    8e50:	bl	65d0 <_Py_Dealloc@plt>
    8e54:	ldp	x23, x24, [sp, #48]
    8e58:	ldp	x25, x26, [sp, #64]
    8e5c:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8e60:	mov	x0, x20
    8e64:	bl	65d0 <_Py_Dealloc@plt>
    8e68:	b	8d00 <PyFloat_FromString@plt+0x2270>
    8e6c:	ldr	x0, [x19]
    8e70:	sub	x0, x0, #0x1
    8e74:	str	x0, [x19]
    8e78:	cbz	x0, 8e90 <PyFloat_FromString@plt+0x2400>
    8e7c:	bl	65e0 <PyErr_NoMemory@plt>
    8e80:	mov	x19, x20
    8e84:	ldp	x23, x24, [sp, #48]
    8e88:	ldp	x25, x26, [sp, #64]
    8e8c:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8e90:	mov	x0, x19
    8e94:	bl	65d0 <_Py_Dealloc@plt>
    8e98:	b	8e7c <PyFloat_FromString@plt+0x23ec>
    8e9c:	mov	x0, x20
    8ea0:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8ea4:	ldr	x0, [x19]
    8ea8:	sub	x0, x0, #0x1
    8eac:	str	x0, [x19]
    8eb0:	cbz	x0, 8ec8 <PyFloat_FromString@plt+0x2438>
    8eb4:	bl	65e0 <PyErr_NoMemory@plt>
    8eb8:	mov	x19, x21
    8ebc:	ldp	x23, x24, [sp, #48]
    8ec0:	ldp	x25, x26, [sp, #64]
    8ec4:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8ec8:	mov	x0, x19
    8ecc:	bl	65d0 <_Py_Dealloc@plt>
    8ed0:	b	8eb4 <PyFloat_FromString@plt+0x2424>
    8ed4:	mov	x0, x20
    8ed8:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8edc:	mov	x0, x21
    8ee0:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    8ee4:	ldr	x0, [x19]
    8ee8:	sub	x0, x0, #0x1
    8eec:	str	x0, [x19]
    8ef0:	cbz	x0, 8f04 <PyFloat_FromString@plt+0x2474>
    8ef4:	mov	x19, #0x0                   	// #0
    8ef8:	ldp	x23, x24, [sp, #48]
    8efc:	ldp	x25, x26, [sp, #64]
    8f00:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f04:	mov	x0, x19
    8f08:	bl	65d0 <_Py_Dealloc@plt>
    8f0c:	mov	x19, #0x0                   	// #0
    8f10:	ldp	x23, x24, [sp, #48]
    8f14:	ldp	x25, x26, [sp, #64]
    8f18:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f1c:	ldr	x0, [x19]
    8f20:	sub	x0, x0, #0x1
    8f24:	str	x0, [x19]
    8f28:	cbz	x0, 8f3c <PyFloat_FromString@plt+0x24ac>
    8f2c:	mov	x19, #0x0                   	// #0
    8f30:	ldp	x23, x24, [sp, #48]
    8f34:	ldp	x25, x26, [sp, #64]
    8f38:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f3c:	mov	x0, x19
    8f40:	bl	65d0 <_Py_Dealloc@plt>
    8f44:	mov	x19, #0x0                   	// #0
    8f48:	ldp	x23, x24, [sp, #48]
    8f4c:	ldp	x25, x26, [sp, #64]
    8f50:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f54:	mov	x19, x20
    8f58:	ldp	x23, x24, [sp, #48]
    8f5c:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f60:	ldp	x23, x24, [sp, #48]
    8f64:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f68:	mov	x0, x21
    8f6c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    8f70:	mov	x19, x0
    8f74:	cbz	x0, 8f90 <PyFloat_FromString@plt+0x2500>
    8f78:	mov	w2, #0x4                   	// #4
    8f7c:	mov	w1, #0x0                   	// #0
    8f80:	add	x0, x19, #0x18
    8f84:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
    8f88:	ldp	x23, x24, [sp, #48]
    8f8c:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f90:	ldp	x23, x24, [sp, #48]
    8f94:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8f98:	ldp	x23, x24, [sp, #48]
    8f9c:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8fa0:	ldp	x23, x24, [sp, #48]
    8fa4:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8fa8:	ldp	x23, x24, [sp, #48]
    8fac:	ldp	x25, x26, [sp, #64]
    8fb0:	b	8bfc <PyFloat_FromString@plt+0x216c>
    8fb4:	stp	x29, x30, [sp, #-48]!
    8fb8:	mov	x29, sp
    8fbc:	stp	x19, x20, [sp, #16]
    8fc0:	mov	x20, x2
    8fc4:	str	wzr, [sp, #44]
    8fc8:	bl	8b40 <PyFloat_FromString@plt+0x20b0>
    8fcc:	mov	x19, x0
    8fd0:	cbz	x0, 8ff4 <PyFloat_FromString@plt+0x2564>
    8fd4:	add	x2, sp, #0x2c
    8fd8:	add	x1, x20, #0x10
    8fdc:	add	x0, x0, #0x18
    8fe0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
    8fe4:	ldr	w1, [sp, #44]
    8fe8:	mov	x0, x20
    8fec:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    8ff0:	cbnz	w0, 9004 <PyFloat_FromString@plt+0x2574>
    8ff4:	mov	x0, x19
    8ff8:	ldp	x19, x20, [sp, #16]
    8ffc:	ldp	x29, x30, [sp], #48
    9000:	ret
    9004:	ldr	x0, [x19]
    9008:	sub	x0, x0, #0x1
    900c:	str	x0, [x19]
    9010:	cbz	x0, 901c <PyFloat_FromString@plt+0x258c>
    9014:	mov	x19, #0x0                   	// #0
    9018:	b	8ff4 <PyFloat_FromString@plt+0x2564>
    901c:	mov	x0, x19
    9020:	bl	65d0 <_Py_Dealloc@plt>
    9024:	mov	x19, #0x0                   	// #0
    9028:	b	8ff4 <PyFloat_FromString@plt+0x2564>
    902c:	stp	x29, x30, [sp, #-16]!
    9030:	mov	x29, sp
    9034:	mov	x2, x0
    9038:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    903c:	add	x0, x0, #0x320
    9040:	add	x0, x0, #0x1a0
    9044:	bl	8fb4 <PyFloat_FromString@plt+0x2524>
    9048:	ldp	x29, x30, [sp], #16
    904c:	ret
    9050:	stp	x29, x30, [sp, #-64]!
    9054:	mov	x29, sp
    9058:	stp	x19, x20, [sp, #16]
    905c:	stp	x21, x22, [sp, #32]
    9060:	mov	x21, x0
    9064:	mov	x20, x1
    9068:	str	wzr, [sp, #60]
    906c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    9070:	add	x1, x1, #0x320
    9074:	add	x0, x1, #0x1a0
    9078:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    907c:	mov	x19, x0
    9080:	cbz	x0, 90c8 <PyFloat_FromString@plt+0x2638>
    9084:	add	x22, x0, #0x18
    9088:	add	x2, sp, #0x3c
    908c:	add	x1, x21, #0x18
    9090:	mov	x0, x22
    9094:	bl	291bc <PyInit__decimal@@Base+0xf01c>
    9098:	ldr	w1, [sp, #60]
    909c:	mov	x0, x20
    90a0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    90a4:	cbnz	w0, 90dc <PyFloat_FromString@plt+0x264c>
    90a8:	add	x2, sp, #0x3c
    90ac:	add	x1, x20, #0x10
    90b0:	mov	x0, x22
    90b4:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
    90b8:	ldr	w1, [sp, #60]
    90bc:	mov	x0, x20
    90c0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    90c4:	cbnz	w0, 9104 <PyFloat_FromString@plt+0x2674>
    90c8:	mov	x0, x19
    90cc:	ldp	x19, x20, [sp, #16]
    90d0:	ldp	x21, x22, [sp, #32]
    90d4:	ldp	x29, x30, [sp], #64
    90d8:	ret
    90dc:	ldr	x0, [x19]
    90e0:	sub	x0, x0, #0x1
    90e4:	str	x0, [x19]
    90e8:	cbz	x0, 90f4 <PyFloat_FromString@plt+0x2664>
    90ec:	mov	x19, #0x0                   	// #0
    90f0:	b	90c8 <PyFloat_FromString@plt+0x2638>
    90f4:	mov	x0, x19
    90f8:	bl	65d0 <_Py_Dealloc@plt>
    90fc:	mov	x19, #0x0                   	// #0
    9100:	b	90c8 <PyFloat_FromString@plt+0x2638>
    9104:	ldr	x0, [x19]
    9108:	sub	x0, x0, #0x1
    910c:	str	x0, [x19]
    9110:	cbz	x0, 911c <PyFloat_FromString@plt+0x268c>
    9114:	mov	x19, #0x0                   	// #0
    9118:	b	90c8 <PyFloat_FromString@plt+0x2638>
    911c:	mov	x0, x19
    9120:	bl	65d0 <_Py_Dealloc@plt>
    9124:	mov	x19, #0x0                   	// #0
    9128:	b	90c8 <PyFloat_FromString@plt+0x2638>
    912c:	stp	x29, x30, [sp, #-64]!
    9130:	mov	x29, sp
    9134:	stp	x19, x20, [sp, #16]
    9138:	str	x21, [sp, #32]
    913c:	mov	x21, x1
    9140:	mov	x20, x2
    9144:	str	wzr, [sp, #60]
    9148:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    914c:	mov	x19, x0
    9150:	cbz	x0, 9178 <PyFloat_FromString@plt+0x26e8>
    9154:	add	x3, sp, #0x3c
    9158:	add	x2, x20, #0x10
    915c:	mov	x1, x21
    9160:	add	x0, x0, #0x18
    9164:	bl	2394c <PyInit__decimal@@Base+0x97ac>
    9168:	ldr	w1, [sp, #60]
    916c:	mov	x0, x20
    9170:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    9174:	cbnz	w0, 918c <PyFloat_FromString@plt+0x26fc>
    9178:	mov	x0, x19
    917c:	ldp	x19, x20, [sp, #16]
    9180:	ldr	x21, [sp, #32]
    9184:	ldp	x29, x30, [sp], #64
    9188:	ret
    918c:	ldr	x0, [x19]
    9190:	sub	x0, x0, #0x1
    9194:	str	x0, [x19]
    9198:	cbz	x0, 91a4 <PyFloat_FromString@plt+0x2714>
    919c:	mov	x19, #0x0                   	// #0
    91a0:	b	9178 <PyFloat_FromString@plt+0x26e8>
    91a4:	mov	x0, x19
    91a8:	bl	65d0 <_Py_Dealloc@plt>
    91ac:	mov	x19, #0x0                   	// #0
    91b0:	b	9178 <PyFloat_FromString@plt+0x26e8>
    91b4:	stp	x29, x30, [sp, #-48]!
    91b8:	mov	x29, sp
    91bc:	stp	x19, x20, [sp, #16]
    91c0:	str	x21, [sp, #32]
    91c4:	mov	w20, w0
    91c8:	mov	x0, #0x0                   	// #0
    91cc:	bl	64a0 <PyList_New@plt>
    91d0:	mov	x21, x0
    91d4:	cbz	x0, 9238 <PyFloat_FromString@plt+0x27a8>
    91d8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    91dc:	ldr	x0, [x0, #2464]
    91e0:	cbz	x0, 9238 <PyFloat_FromString@plt+0x27a8>
    91e4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41e60>
    91e8:	add	x19, x19, #0x9a0
    91ec:	b	9208 <PyFloat_FromString@plt+0x2778>
    91f0:	mov	x0, x21
    91f4:	bl	65d0 <_Py_Dealloc@plt>
    91f8:	mov	x21, #0x0                   	// #0
    91fc:	b	9238 <PyFloat_FromString@plt+0x27a8>
    9200:	ldr	x1, [x19, #32]!
    9204:	cbz	x1, 9238 <PyFloat_FromString@plt+0x27a8>
    9208:	ldr	w1, [x19, #16]
    920c:	tst	w20, w1
    9210:	b.eq	9200 <PyFloat_FromString@plt+0x2770>  // b.none
    9214:	ldr	x1, [x19, #24]
    9218:	mov	x0, x21
    921c:	bl	6770 <PyList_Append@plt>
    9220:	tbz	w0, #31, 9200 <PyFloat_FromString@plt+0x2770>
    9224:	ldr	x0, [x21]
    9228:	sub	x0, x0, #0x1
    922c:	str	x0, [x21]
    9230:	cbz	x0, 91f0 <PyFloat_FromString@plt+0x2760>
    9234:	mov	x21, #0x0                   	// #0
    9238:	mov	x0, x21
    923c:	ldp	x19, x20, [sp, #16]
    9240:	ldr	x21, [sp, #32]
    9244:	ldp	x29, x30, [sp], #48
    9248:	ret
    924c:	sub	sp, sp, #0x40
    9250:	stp	x29, x30, [sp, #16]
    9254:	add	x29, sp, #0x10
    9258:	stp	x19, x20, [sp, #32]
    925c:	mov	x19, x0
    9260:	ldr	w0, [x0, #44]
    9264:	bl	91b4 <PyFloat_FromString@plt+0x2724>
    9268:	mov	x20, x0
    926c:	cbz	x0, 9344 <PyFloat_FromString@plt+0x28b4>
    9270:	str	x21, [sp, #48]
    9274:	ldr	w0, [x19, #40]
    9278:	bl	91b4 <PyFloat_FromString@plt+0x2724>
    927c:	mov	x21, x0
    9280:	cbz	x0, 92fc <PyFloat_FromString@plt+0x286c>
    9284:	ldrsw	x1, [x19, #52]
    9288:	str	x0, [sp, #8]
    928c:	str	x20, [sp]
    9290:	ldr	w7, [x19, #56]
    9294:	ldr	w6, [x19, #80]
    9298:	ldr	x5, [x19, #24]
    929c:	ldr	x4, [x19, #32]
    92a0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    92a4:	add	x0, x0, #0x548
    92a8:	ldr	x3, [x0, x1, lsl #3]
    92ac:	ldr	x2, [x19, #16]
    92b0:	ldr	x1, [x19, #8]
    92b4:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    92b8:	add	x0, x0, #0x818
    92bc:	bl	67d0 <Py_BuildValue@plt>
    92c0:	mov	x19, x0
    92c4:	ldr	x1, [x20]
    92c8:	sub	x1, x1, #0x1
    92cc:	str	x1, [x20]
    92d0:	cbz	x1, 9328 <PyFloat_FromString@plt+0x2898>
    92d4:	ldr	x1, [x21]
    92d8:	sub	x1, x1, #0x1
    92dc:	str	x1, [x21]
    92e0:	cbz	x1, 9334 <PyFloat_FromString@plt+0x28a4>
    92e4:	ldr	x21, [sp, #48]
    92e8:	mov	x0, x19
    92ec:	ldp	x19, x20, [sp, #32]
    92f0:	ldp	x29, x30, [sp, #16]
    92f4:	add	sp, sp, #0x40
    92f8:	ret
    92fc:	ldr	x0, [x20]
    9300:	sub	x0, x0, #0x1
    9304:	str	x0, [x20]
    9308:	mov	x19, x21
    930c:	cbz	x0, 9318 <PyFloat_FromString@plt+0x2888>
    9310:	ldr	x21, [sp, #48]
    9314:	b	92e8 <PyFloat_FromString@plt+0x2858>
    9318:	mov	x0, x20
    931c:	bl	65d0 <_Py_Dealloc@plt>
    9320:	ldr	x21, [sp, #48]
    9324:	b	92e8 <PyFloat_FromString@plt+0x2858>
    9328:	mov	x0, x20
    932c:	bl	65d0 <_Py_Dealloc@plt>
    9330:	b	92d4 <PyFloat_FromString@plt+0x2844>
    9334:	mov	x0, x21
    9338:	bl	65d0 <_Py_Dealloc@plt>
    933c:	ldr	x21, [sp, #48]
    9340:	b	92e8 <PyFloat_FromString@plt+0x2858>
    9344:	mov	x19, x0
    9348:	b	92e8 <PyFloat_FromString@plt+0x2858>
    934c:	stp	x29, x30, [sp, #-128]!
    9350:	mov	x29, sp
    9354:	stp	x19, x20, [sp, #16]
    9358:	stp	x21, x22, [sp, #32]
    935c:	mov	x20, x1
    9360:	mov	x22, x2
    9364:	str	wzr, [sp, #124]
    9368:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    936c:	mov	x19, x0
    9370:	cbz	x0, 93cc <PyFloat_FromString@plt+0x293c>
    9374:	str	x23, [sp, #48]
    9378:	add	x21, sp, #0x48
    937c:	mov	x0, x21
    9380:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
    9384:	add	x23, x19, #0x18
    9388:	add	x3, sp, #0x7c
    938c:	mov	x2, x21
    9390:	mov	x1, x20
    9394:	mov	x0, x23
    9398:	bl	2394c <PyInit__decimal@@Base+0x97ac>
    939c:	ldr	w1, [sp, #124]
    93a0:	mov	w0, #0x1041                	// #4161
    93a4:	tst	w1, w0
    93a8:	b.ne	93e0 <PyFloat_FromString@plt+0x2950>  // b.any
    93ac:	ldr	w1, [sp, #124]
    93b0:	mov	w0, #0x3be                 	// #958
    93b4:	and	w1, w1, w0
    93b8:	str	w1, [sp, #124]
    93bc:	mov	x0, x22
    93c0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    93c4:	cbnz	w0, 93f4 <PyFloat_FromString@plt+0x2964>
    93c8:	ldr	x23, [sp, #48]
    93cc:	mov	x0, x19
    93d0:	ldp	x19, x20, [sp, #16]
    93d4:	ldp	x21, x22, [sp, #32]
    93d8:	ldp	x29, x30, [sp], #128
    93dc:	ret
    93e0:	add	x2, sp, #0x7c
    93e4:	mov	w1, #0x100                 	// #256
    93e8:	mov	x0, x23
    93ec:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
    93f0:	b	93ac <PyFloat_FromString@plt+0x291c>
    93f4:	ldr	x0, [x19]
    93f8:	sub	x0, x0, #0x1
    93fc:	str	x0, [x19]
    9400:	cbz	x0, 9410 <PyFloat_FromString@plt+0x2980>
    9404:	mov	x19, #0x0                   	// #0
    9408:	ldr	x23, [sp, #48]
    940c:	b	93cc <PyFloat_FromString@plt+0x293c>
    9410:	mov	x0, x19
    9414:	bl	65d0 <_Py_Dealloc@plt>
    9418:	mov	x19, #0x0                   	// #0
    941c:	ldr	x23, [sp, #48]
    9420:	b	93cc <PyFloat_FromString@plt+0x293c>
    9424:	stp	x29, x30, [sp, #-48]!
    9428:	mov	x29, sp
    942c:	stp	x19, x20, [sp, #16]
    9430:	mov	x2, #0x2                   	// #2
    9434:	mov	x1, x0
    9438:	add	x0, sp, #0x28
    943c:	bl	64f0 <mbstowcs@plt>
    9440:	cmp	x0, #0x1
    9444:	b.ne	9484 <PyFloat_FromString@plt+0x29f4>  // b.any
    9448:	mov	x1, #0x1                   	// #1
    944c:	add	x0, sp, #0x28
    9450:	bl	6570 <PyUnicode_FromWideChar@plt>
    9454:	mov	x19, x0
    9458:	cbz	x0, 94b0 <PyFloat_FromString@plt+0x2a20>
    945c:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    9460:	mov	x20, x0
    9464:	ldr	x0, [x19]
    9468:	sub	x0, x0, #0x1
    946c:	str	x0, [x19]
    9470:	cbz	x0, 94a4 <PyFloat_FromString@plt+0x2a14>
    9474:	mov	x0, x20
    9478:	ldp	x19, x20, [sp, #16]
    947c:	ldp	x29, x30, [sp], #48
    9480:	ret
    9484:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    9488:	add	x1, x1, #0x828
    948c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9490:	ldr	x0, [x0, #3928]
    9494:	ldr	x0, [x0]
    9498:	bl	6650 <PyErr_SetString@plt>
    949c:	mov	x20, #0x0                   	// #0
    94a0:	b	9474 <PyFloat_FromString@plt+0x29e4>
    94a4:	mov	x0, x19
    94a8:	bl	65d0 <_Py_Dealloc@plt>
    94ac:	b	9474 <PyFloat_FromString@plt+0x29e4>
    94b0:	mov	x20, x0
    94b4:	b	9474 <PyFloat_FromString@plt+0x29e4>
    94b8:	stp	x29, x30, [sp, #-48]!
    94bc:	mov	x29, sp
    94c0:	stp	x19, x20, [sp, #16]
    94c4:	mov	x20, x0
    94c8:	str	wzr, [sp, #44]
    94cc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    94d0:	add	x1, x1, #0x320
    94d4:	add	x0, x1, #0x1a0
    94d8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    94dc:	mov	x19, x0
    94e0:	cbz	x0, 94fc <PyFloat_FromString@plt+0x2a6c>
    94e4:	add	x2, sp, #0x2c
    94e8:	add	x1, x20, #0x18
    94ec:	add	x0, x0, #0x18
    94f0:	bl	2a7c0 <PyInit__decimal@@Base+0x10620>
    94f4:	ldr	w0, [sp, #44]
    94f8:	tbnz	w0, #9, 950c <PyFloat_FromString@plt+0x2a7c>
    94fc:	mov	x0, x19
    9500:	ldp	x19, x20, [sp, #16]
    9504:	ldp	x29, x30, [sp], #48
    9508:	ret
    950c:	ldr	x0, [x19]
    9510:	sub	x0, x0, #0x1
    9514:	str	x0, [x19]
    9518:	cbz	x0, 9528 <PyFloat_FromString@plt+0x2a98>
    951c:	bl	65e0 <PyErr_NoMemory@plt>
    9520:	mov	x19, #0x0                   	// #0
    9524:	b	94fc <PyFloat_FromString@plt+0x2a6c>
    9528:	mov	x0, x19
    952c:	bl	65d0 <_Py_Dealloc@plt>
    9530:	b	951c <PyFloat_FromString@plt+0x2a8c>
    9534:	stp	x29, x30, [sp, #-48]!
    9538:	mov	x29, sp
    953c:	stp	x19, x20, [sp, #16]
    9540:	mov	x20, x0
    9544:	str	wzr, [sp, #44]
    9548:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    954c:	add	x1, x1, #0x320
    9550:	add	x0, x1, #0x1a0
    9554:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    9558:	mov	x19, x0
    955c:	cbz	x0, 9578 <PyFloat_FromString@plt+0x2ae8>
    9560:	add	x2, sp, #0x2c
    9564:	add	x1, x20, #0x18
    9568:	add	x0, x0, #0x18
    956c:	bl	2a78c <PyInit__decimal@@Base+0x105ec>
    9570:	ldr	w0, [sp, #44]
    9574:	tbnz	w0, #9, 9588 <PyFloat_FromString@plt+0x2af8>
    9578:	mov	x0, x19
    957c:	ldp	x19, x20, [sp, #16]
    9580:	ldp	x29, x30, [sp], #48
    9584:	ret
    9588:	ldr	x0, [x19]
    958c:	sub	x0, x0, #0x1
    9590:	str	x0, [x19]
    9594:	cbz	x0, 95a4 <PyFloat_FromString@plt+0x2b14>
    9598:	bl	65e0 <PyErr_NoMemory@plt>
    959c:	mov	x19, #0x0                   	// #0
    95a0:	b	9578 <PyFloat_FromString@plt+0x2ae8>
    95a4:	mov	x0, x19
    95a8:	bl	65d0 <_Py_Dealloc@plt>
    95ac:	b	9598 <PyFloat_FromString@plt+0x2b08>
    95b0:	stp	x29, x30, [sp, #-64]!
    95b4:	mov	x29, sp
    95b8:	stp	x19, x20, [sp, #16]
    95bc:	str	x23, [sp, #48]
    95c0:	mov	x23, x0
    95c4:	bl	6910 <PyList_Size@plt>
    95c8:	cmp	x0, #0x0
    95cc:	b.le	966c <PyFloat_FromString@plt+0x2bdc>
    95d0:	stp	x21, x22, [sp, #32]
    95d4:	mov	x22, x0
    95d8:	mov	x19, #0x0                   	// #0
    95dc:	mov	w20, #0x0                   	// #0
    95e0:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41e60>
    95e4:	b	9604 <PyFloat_FromString@plt+0x2b74>
    95e8:	ldr	w1, [x1, #16]
    95ec:	tst	w1, #0x18000
    95f0:	b.ne	9674 <PyFloat_FromString@plt+0x2be4>  // b.any
    95f4:	orr	w20, w20, w1
    95f8:	add	x19, x19, #0x1
    95fc:	cmp	x22, x19
    9600:	b.eq	9664 <PyFloat_FromString@plt+0x2bd4>  // b.none
    9604:	mov	x1, x19
    9608:	mov	x0, x23
    960c:	bl	6a30 <PyList_GetItem@plt>
    9610:	ldr	x1, [x21, #2464]
    9614:	cbz	x1, 9630 <PyFloat_FromString@plt+0x2ba0>
    9618:	add	x1, x21, #0x9a0
    961c:	ldr	x2, [x1, #24]
    9620:	cmp	x0, x2
    9624:	b.eq	95e8 <PyFloat_FromString@plt+0x2b58>  // b.none
    9628:	ldr	x2, [x1, #32]!
    962c:	cbnz	x2, 961c <PyFloat_FromString@plt+0x2b8c>
    9630:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    9634:	add	x1, x1, #0x3c8
    9638:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    963c:	ldr	x0, [x0, #3968]
    9640:	ldr	x0, [x0]
    9644:	bl	6650 <PyErr_SetString@plt>
    9648:	mov	w20, #0x8000                	// #32768
    964c:	ldp	x21, x22, [sp, #32]
    9650:	mov	w0, w20
    9654:	ldp	x19, x20, [sp, #16]
    9658:	ldr	x23, [sp, #48]
    965c:	ldp	x29, x30, [sp], #64
    9660:	ret
    9664:	ldp	x21, x22, [sp, #32]
    9668:	b	9650 <PyFloat_FromString@plt+0x2bc0>
    966c:	mov	w20, #0x0                   	// #0
    9670:	b	9650 <PyFloat_FromString@plt+0x2bc0>
    9674:	mov	w20, w1
    9678:	ldp	x21, x22, [sp, #32]
    967c:	b	9650 <PyFloat_FromString@plt+0x2bc0>
    9680:	stp	x29, x30, [sp, #-96]!
    9684:	mov	x29, sp
    9688:	stp	x19, x20, [sp, #16]
    968c:	stp	x25, x26, [sp, #64]
    9690:	stp	x27, x28, [sp, #80]
    9694:	mov	x19, x0
    9698:	mov	w20, w1
    969c:	mov	w25, w2
    96a0:	ldrsb	w0, [x0, #32]
    96a4:	tbz	w0, #31, 96f4 <PyFloat_FromString@plt+0x2c64>
    96a8:	stp	x21, x22, [sp, #32]
    96ac:	stp	x23, x24, [sp, #48]
    96b0:	ldrb	w22, [x19, #32]
    96b4:	ubfx	x22, x22, #2, #3
    96b8:	ldrb	w0, [x19, #32]
    96bc:	tbz	w0, #5, 970c <PyFloat_FromString@plt+0x2c7c>
    96c0:	add	x24, x19, #0x30
    96c4:	add	x1, x19, #0x48
    96c8:	tst	x0, #0x40
    96cc:	csel	x24, x1, x24, eq  // eq = none
    96d0:	ldr	x23, [x19, #16]
    96d4:	add	x0, x23, #0x1
    96d8:	bl	6a40 <PyMem_Malloc@plt>
    96dc:	mov	x27, x0
    96e0:	cbz	x0, 9714 <PyFloat_FromString@plt+0x2c84>
    96e4:	cbz	w20, 9780 <PyFloat_FromString@plt+0x2cf0>
    96e8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    96ec:	ldr	x20, [x20, #3880]
    96f0:	b	9744 <PyFloat_FromString@plt+0x2cb4>
    96f4:	mov	x0, x19
    96f8:	bl	64b0 <_PyUnicode_Ready@plt>
    96fc:	cmn	w0, #0x1
    9700:	b.ne	96a8 <PyFloat_FromString@plt+0x2c18>  // b.any
    9704:	mov	x27, #0x0                   	// #0
    9708:	b	98a0 <PyFloat_FromString@plt+0x2e10>
    970c:	ldr	x24, [x19, #72]
    9710:	b	96d0 <PyFloat_FromString@plt+0x2c40>
    9714:	bl	65e0 <PyErr_NoMemory@plt>
    9718:	ldp	x21, x22, [sp, #32]
    971c:	ldp	x23, x24, [sp, #48]
    9720:	b	98a0 <PyFloat_FromString@plt+0x2e10>
    9724:	ldrb	w0, [x24, x19]
    9728:	b	9730 <PyFloat_FromString@plt+0x2ca0>
    972c:	ldr	w0, [x24, x19, lsl #2]
    9730:	cmp	w0, #0x7f
    9734:	b.hi	9768 <PyFloat_FromString@plt+0x2cd8>  // b.pmore
    9738:	ldrb	w0, [x20, w0, uxtw]
    973c:	cbz	w0, 9770 <PyFloat_FromString@plt+0x2ce0>
    9740:	mov	x23, x19
    9744:	cmp	x23, #0x0
    9748:	b.le	9890 <PyFloat_FromString@plt+0x2e00>
    974c:	sub	x19, x23, #0x1
    9750:	cmp	w22, #0x1
    9754:	b.eq	9724 <PyFloat_FromString@plt+0x2c94>  // b.none
    9758:	cmp	w22, #0x2
    975c:	b.ne	972c <PyFloat_FromString@plt+0x2c9c>  // b.any
    9760:	ldrh	w0, [x24, x19, lsl #1]
    9764:	b	9730 <PyFloat_FromString@plt+0x2ca0>
    9768:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    976c:	b	973c <PyFloat_FromString@plt+0x2cac>
    9770:	mov	x19, #0x0                   	// #0
    9774:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    9778:	ldr	x20, [x20, #3880]
    977c:	b	97c0 <PyFloat_FromString@plt+0x2d30>
    9780:	mov	x19, #0x0                   	// #0
    9784:	mov	x20, x27
    9788:	cmp	x23, x19
    978c:	b.le	9894 <PyFloat_FromString@plt+0x2e04>
    9790:	mov	w28, #0x20                  	// #32
    9794:	adrp	x26, 5b000 <PyInit__decimal@@Base+0x40e60>
    9798:	ldr	x26, [x26, #3880]
    979c:	b	9808 <PyFloat_FromString@plt+0x2d78>
    97a0:	ldrb	w0, [x24, x19]
    97a4:	cmp	w0, #0x7f
    97a8:	b.hi	97e0 <PyFloat_FromString@plt+0x2d50>  // b.pmore
    97ac:	ldrb	w0, [x20, w0, uxtw]
    97b0:	cbz	w0, 9784 <PyFloat_FromString@plt+0x2cf4>
    97b4:	add	x19, x19, #0x1
    97b8:	cmp	x23, x19
    97bc:	b.le	9890 <PyFloat_FromString@plt+0x2e00>
    97c0:	cmp	w22, #0x1
    97c4:	b.eq	97a0 <PyFloat_FromString@plt+0x2d10>  // b.none
    97c8:	cmp	w22, #0x2
    97cc:	b.eq	97d8 <PyFloat_FromString@plt+0x2d48>  // b.none
    97d0:	ldr	w0, [x24, x19, lsl #2]
    97d4:	b	97a4 <PyFloat_FromString@plt+0x2d14>
    97d8:	ldrh	w0, [x24, x19, lsl #1]
    97dc:	b	97a4 <PyFloat_FromString@plt+0x2d14>
    97e0:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    97e4:	b	97b0 <PyFloat_FromString@plt+0x2d20>
    97e8:	ldrb	w21, [x24, x19]
    97ec:	b	981c <PyFloat_FromString@plt+0x2d8c>
    97f0:	ldrh	w21, [x24, x19, lsl #1]
    97f4:	b	981c <PyFloat_FromString@plt+0x2d8c>
    97f8:	strb	w21, [x20], #1
    97fc:	add	x19, x19, #0x1
    9800:	cmp	x19, x23
    9804:	b.eq	9894 <PyFloat_FromString@plt+0x2e04>  // b.none
    9808:	cmp	w22, #0x1
    980c:	b.eq	97e8 <PyFloat_FromString@plt+0x2d58>  // b.none
    9810:	cmp	w22, #0x2
    9814:	b.eq	97f0 <PyFloat_FromString@plt+0x2d60>  // b.none
    9818:	ldr	w21, [x24, x19, lsl #2]
    981c:	cmp	w21, #0x5f
    9820:	ccmp	w25, #0x0, #0x4, eq  // eq = none
    9824:	b.ne	97fc <PyFloat_FromString@plt+0x2d6c>  // b.any
    9828:	sub	w0, w21, #0x1
    982c:	cmp	w0, #0x7e
    9830:	b.ls	97f8 <PyFloat_FromString@plt+0x2d68>  // b.plast
    9834:	cmp	w21, #0x7f
    9838:	b.hi	9854 <PyFloat_FromString@plt+0x2dc4>  // b.pmore
    983c:	ldrb	w0, [x26]
    9840:	cmp	w0, #0x0
    9844:	cset	w0, ne  // ne = any
    9848:	cbz	w0, 9868 <PyFloat_FromString@plt+0x2dd8>
    984c:	strb	w28, [x20], #1
    9850:	b	97fc <PyFloat_FromString@plt+0x2d6c>
    9854:	mov	w0, w21
    9858:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    985c:	cmp	w0, #0x0
    9860:	cset	w0, ne  // ne = any
    9864:	b	9848 <PyFloat_FromString@plt+0x2db8>
    9868:	mov	w0, w21
    986c:	bl	68b0 <_PyUnicode_ToDecimalDigit@plt>
    9870:	tbnz	w0, #31, 9880 <PyFloat_FromString@plt+0x2df0>
    9874:	add	w0, w0, #0x30
    9878:	strb	w0, [x20], #1
    987c:	b	97fc <PyFloat_FromString@plt+0x2d6c>
    9880:	strb	wzr, [x27]
    9884:	ldp	x21, x22, [sp, #32]
    9888:	ldp	x23, x24, [sp, #48]
    988c:	b	98a0 <PyFloat_FromString@plt+0x2e10>
    9890:	mov	x20, x27
    9894:	strb	wzr, [x20]
    9898:	ldp	x21, x22, [sp, #32]
    989c:	ldp	x23, x24, [sp, #48]
    98a0:	mov	x0, x27
    98a4:	ldp	x19, x20, [sp, #16]
    98a8:	ldp	x25, x26, [sp, #64]
    98ac:	ldp	x27, x28, [sp, #80]
    98b0:	ldp	x29, x30, [sp], #96
    98b4:	ret
    98b8:	stp	x29, x30, [sp, #-64]!
    98bc:	mov	x29, sp
    98c0:	stp	x19, x20, [sp, #16]
    98c4:	mov	x19, x0
    98c8:	mov	x0, x1
    98cc:	str	xzr, [sp, #56]
    98d0:	add	x2, sp, #0x38
    98d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    98d8:	add	x1, x1, #0x878
    98dc:	bl	68e0 <PyArg_ParseTuple@plt>
    98e0:	mov	x20, #0x0                   	// #0
    98e4:	cbz	w0, 9958 <PyFloat_FromString@plt+0x2ec8>
    98e8:	str	x21, [sp, #32]
    98ec:	ldr	x21, [sp, #56]
    98f0:	cbz	x21, 9968 <PyFloat_FromString@plt+0x2ed8>
    98f4:	ldr	x0, [x21, #8]
    98f8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    98fc:	add	x1, x1, #0x320
    9900:	add	x1, x1, #0x1a0
    9904:	cmp	x0, x1
    9908:	b.eq	9920 <PyFloat_FromString@plt+0x2e90>  // b.none
    990c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    9910:	add	x1, x1, #0x320
    9914:	add	x1, x1, #0x1a0
    9918:	bl	69c0 <PyType_IsSubtype@plt>
    991c:	cbz	w0, 9a24 <PyFloat_FromString@plt+0x2f94>
    9920:	add	x0, x21, #0x18
    9924:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    9928:	cbz	w0, 9944 <PyFloat_FromString@plt+0x2eb4>
    992c:	ldrsw	x1, [x19, #56]
    9930:	ldr	x0, [x19, #16]
    9934:	sub	x0, x0, x1
    9938:	ldr	x1, [x21, #40]
    993c:	cmp	x1, x0
    9940:	b.gt	99e0 <PyFloat_FromString@plt+0x2f50>
    9944:	mov	x1, x19
    9948:	mov	x0, x21
    994c:	bl	9050 <PyFloat_FromString@plt+0x25c0>
    9950:	mov	x20, x0
    9954:	ldr	x21, [sp, #32]
    9958:	mov	x0, x20
    995c:	ldp	x19, x20, [sp, #16]
    9960:	ldp	x29, x30, [sp], #64
    9964:	ret
    9968:	str	wzr, [sp, #52]
    996c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    9970:	add	x0, x0, #0x320
    9974:	add	x0, x0, #0x1a0
    9978:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    997c:	mov	x20, x0
    9980:	cbz	x0, 9c04 <PyFloat_FromString@plt+0x3174>
    9984:	add	x3, sp, #0x34
    9988:	add	x2, x19, #0x10
    998c:	mov	x1, #0x0                   	// #0
    9990:	add	x0, x0, #0x18
    9994:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
    9998:	ldr	w1, [sp, #52]
    999c:	mov	x0, x19
    99a0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    99a4:	cbnz	w0, 99b0 <PyFloat_FromString@plt+0x2f20>
    99a8:	ldr	x21, [sp, #32]
    99ac:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    99b0:	ldr	x0, [x20]
    99b4:	sub	x0, x0, #0x1
    99b8:	str	x0, [x20]
    99bc:	cbz	x0, 99cc <PyFloat_FromString@plt+0x2f3c>
    99c0:	mov	x20, x21
    99c4:	ldr	x21, [sp, #32]
    99c8:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    99cc:	mov	x0, x20
    99d0:	bl	65d0 <_Py_Dealloc@plt>
    99d4:	mov	x20, x21
    99d8:	ldr	x21, [sp, #32]
    99dc:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    99e0:	mov	w1, #0x2                   	// #2
    99e4:	mov	x0, x19
    99e8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    99ec:	mov	x20, #0x0                   	// #0
    99f0:	cbnz	w0, 9c0c <PyFloat_FromString@plt+0x317c>
    99f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    99f8:	add	x0, x0, #0x320
    99fc:	add	x0, x0, #0x1a0
    9a00:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    9a04:	mov	x20, x0
    9a08:	cbz	x0, 9c14 <PyFloat_FromString@plt+0x3184>
    9a0c:	mov	w2, #0x4                   	// #4
    9a10:	mov	w1, #0x0                   	// #0
    9a14:	add	x0, x0, #0x18
    9a18:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
    9a1c:	ldr	x21, [sp, #32]
    9a20:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9a24:	ldr	x0, [x21, #8]
    9a28:	ldr	x1, [x0, #168]
    9a2c:	tbnz	w1, #28, 9a94 <PyFloat_FromString@plt+0x3004>
    9a30:	tbnz	w1, #24, 9ad8 <PyFloat_FromString@plt+0x3048>
    9a34:	tst	x1, #0x6000000
    9a38:	b.ne	9b48 <PyFloat_FromString@plt+0x30b8>  // b.any
    9a3c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    9a40:	ldr	x1, [x1, #3864]
    9a44:	cmp	x0, x1
    9a48:	b.eq	9a5c <PyFloat_FromString@plt+0x2fcc>  // b.none
    9a4c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    9a50:	ldr	x1, [x1, #3864]
    9a54:	bl	69c0 <PyType_IsSubtype@plt>
    9a58:	cbz	w0, 9bc0 <PyFloat_FromString@plt+0x3130>
    9a5c:	mov	w1, #0x400                 	// #1024
    9a60:	mov	x0, x19
    9a64:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    9a68:	mov	x20, #0x0                   	// #0
    9a6c:	cbnz	w0, 9c2c <PyFloat_FromString@plt+0x319c>
    9a70:	mov	x2, x19
    9a74:	mov	x1, x21
    9a78:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    9a7c:	add	x0, x0, #0x320
    9a80:	add	x0, x0, #0x1a0
    9a84:	bl	8fb4 <PyFloat_FromString@plt+0x2524>
    9a88:	mov	x20, x0
    9a8c:	ldr	x21, [sp, #32]
    9a90:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9a94:	mov	w2, #0x0                   	// #0
    9a98:	mov	w1, #0x0                   	// #0
    9a9c:	mov	x0, x21
    9aa0:	bl	9680 <PyFloat_FromString@plt+0x2bf0>
    9aa4:	mov	x21, x0
    9aa8:	cbz	x0, 9bec <PyFloat_FromString@plt+0x315c>
    9aac:	mov	x2, x19
    9ab0:	mov	x1, x0
    9ab4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    9ab8:	add	x0, x0, #0x320
    9abc:	add	x0, x0, #0x1a0
    9ac0:	bl	912c <PyFloat_FromString@plt+0x269c>
    9ac4:	mov	x20, x0
    9ac8:	mov	x0, x21
    9acc:	bl	6560 <PyMem_Free@plt>
    9ad0:	ldr	x21, [sp, #32]
    9ad4:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9ad8:	str	wzr, [sp, #52]
    9adc:	add	x3, sp, #0x34
    9ae0:	add	x2, x19, #0x10
    9ae4:	mov	x1, x21
    9ae8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    9aec:	add	x0, x0, #0x320
    9af0:	add	x0, x0, #0x1a0
    9af4:	bl	7398 <PyFloat_FromString@plt+0x908>
    9af8:	mov	x20, x0
    9afc:	cbz	x0, 9c1c <PyFloat_FromString@plt+0x318c>
    9b00:	ldr	w1, [sp, #52]
    9b04:	mov	x0, x19
    9b08:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    9b0c:	cbnz	w0, 9b18 <PyFloat_FromString@plt+0x3088>
    9b10:	ldr	x21, [sp, #32]
    9b14:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9b18:	ldr	x0, [x20]
    9b1c:	sub	x0, x0, #0x1
    9b20:	str	x0, [x20]
    9b24:	cbz	x0, 9b34 <PyFloat_FromString@plt+0x30a4>
    9b28:	mov	x20, #0x0                   	// #0
    9b2c:	ldr	x21, [sp, #32]
    9b30:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9b34:	mov	x0, x20
    9b38:	bl	65d0 <_Py_Dealloc@plt>
    9b3c:	mov	x20, #0x0                   	// #0
    9b40:	ldr	x21, [sp, #32]
    9b44:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9b48:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
    9b4c:	add	x2, x2, #0x880
    9b50:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9b54:	ldr	x0, [x0, #3936]
    9b58:	ldr	x1, [x0]
    9b5c:	mov	x0, x21
    9b60:	bl	75a8 <PyFloat_FromString@plt+0xb18>
    9b64:	mov	x20, x0
    9b68:	cbz	x0, 9c24 <PyFloat_FromString@plt+0x3194>
    9b6c:	bl	7e38 <PyFloat_FromString@plt+0x13a8>
    9b70:	mov	x21, x0
    9b74:	ldr	x0, [x20]
    9b78:	sub	x0, x0, #0x1
    9b7c:	str	x0, [x20]
    9b80:	cbz	x0, 9bb4 <PyFloat_FromString@plt+0x3124>
    9b84:	cbz	x21, 9bf8 <PyFloat_FromString@plt+0x3168>
    9b88:	mov	x2, x19
    9b8c:	mov	x1, x21
    9b90:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    9b94:	add	x0, x0, #0x320
    9b98:	add	x0, x0, #0x1a0
    9b9c:	bl	912c <PyFloat_FromString@plt+0x269c>
    9ba0:	mov	x20, x0
    9ba4:	mov	x0, x21
    9ba8:	bl	6560 <PyMem_Free@plt>
    9bac:	ldr	x21, [sp, #32]
    9bb0:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9bb4:	mov	x0, x20
    9bb8:	bl	65d0 <_Py_Dealloc@plt>
    9bbc:	b	9b84 <PyFloat_FromString@plt+0x30f4>
    9bc0:	ldr	x0, [x21, #8]
    9bc4:	ldr	x2, [x0, #24]
    9bc8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    9bcc:	add	x1, x1, #0x8a8
    9bd0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9bd4:	ldr	x0, [x0, #3936]
    9bd8:	ldr	x0, [x0]
    9bdc:	bl	6a10 <PyErr_Format@plt>
    9be0:	mov	x20, #0x0                   	// #0
    9be4:	ldr	x21, [sp, #32]
    9be8:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9bec:	mov	x20, x0
    9bf0:	ldr	x21, [sp, #32]
    9bf4:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9bf8:	mov	x20, x21
    9bfc:	ldr	x21, [sp, #32]
    9c00:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c04:	ldr	x21, [sp, #32]
    9c08:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c0c:	ldr	x21, [sp, #32]
    9c10:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c14:	ldr	x21, [sp, #32]
    9c18:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c1c:	ldr	x21, [sp, #32]
    9c20:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c24:	ldr	x21, [sp, #32]
    9c28:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c2c:	ldr	x21, [sp, #32]
    9c30:	b	9958 <PyFloat_FromString@plt+0x2ec8>
    9c34:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
    9c38:	ldr	x2, [x2, #2464]
    9c3c:	cbz	x2, 9c5c <PyFloat_FromString@plt+0x31cc>
    9c40:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
    9c44:	add	x2, x2, #0x9a0
    9c48:	ldr	x3, [x2, #24]
    9c4c:	cmp	x1, x3
    9c50:	b.eq	9c88 <PyFloat_FromString@plt+0x31f8>  // b.none
    9c54:	ldr	x3, [x2, #32]!
    9c58:	cbnz	x3, 9c48 <PyFloat_FromString@plt+0x31b8>
    9c5c:	stp	x29, x30, [sp, #-16]!
    9c60:	mov	x29, sp
    9c64:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    9c68:	add	x1, x1, #0x3c8
    9c6c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9c70:	ldr	x0, [x0, #3968]
    9c74:	ldr	x0, [x0]
    9c78:	bl	6650 <PyErr_SetString@plt>
    9c7c:	mov	x0, #0x0                   	// #0
    9c80:	ldp	x29, x30, [sp], #16
    9c84:	ret
    9c88:	ldr	w1, [x2, #16]
    9c8c:	tst	w1, #0x18000
    9c90:	b.ne	9cd4 <PyFloat_FromString@plt+0x3244>  // b.any
    9c94:	ldr	x0, [x0, #16]
    9c98:	ldr	w0, [x0]
    9c9c:	tst	w1, w0
    9ca0:	b.eq	9cbc <PyFloat_FromString@plt+0x322c>  // b.none
    9ca4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9ca8:	ldr	x0, [x0, #4024]
    9cac:	ldr	x1, [x0]
    9cb0:	add	x1, x1, #0x1
    9cb4:	str	x1, [x0]
    9cb8:	ret
    9cbc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    9cc0:	ldr	x0, [x0, #3976]
    9cc4:	ldr	x1, [x0]
    9cc8:	add	x1, x1, #0x1
    9ccc:	str	x1, [x0]
    9cd0:	ret
    9cd4:	mov	x0, #0x0                   	// #0
    9cd8:	ret
    9cdc:	stp	x29, x30, [sp, #-32]!
    9ce0:	mov	x29, sp
    9ce4:	add	x2, sp, #0x18
    9ce8:	mov	x1, #0x0                   	// #0
    9cec:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9cf0:	ldr	x0, [x0, #1816]
    9cf4:	bl	6740 <PyContextVar_Get@plt>
    9cf8:	tbnz	w0, #31, 9d14 <PyFloat_FromString@plt+0x3284>
    9cfc:	ldr	x0, [sp, #24]
    9d00:	cbz	x0, 9d0c <PyFloat_FromString@plt+0x327c>
    9d04:	ldp	x29, x30, [sp], #32
    9d08:	ret
    9d0c:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9d10:	b	9d04 <PyFloat_FromString@plt+0x3274>
    9d14:	mov	x0, #0x0                   	// #0
    9d18:	b	9d04 <PyFloat_FromString@plt+0x3274>
    9d1c:	stp	x29, x30, [sp, #-48]!
    9d20:	mov	x29, sp
    9d24:	stp	x19, x20, [sp, #16]
    9d28:	mov	x20, x0
    9d2c:	add	x2, sp, #0x28
    9d30:	mov	x1, #0x0                   	// #0
    9d34:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9d38:	ldr	x0, [x0, #1816]
    9d3c:	bl	6740 <PyContextVar_Get@plt>
    9d40:	tbnz	w0, #31, 9d9c <PyFloat_FromString@plt+0x330c>
    9d44:	ldr	x19, [sp, #40]
    9d48:	cbz	x19, 9d80 <PyFloat_FromString@plt+0x32f0>
    9d4c:	ldr	x1, [x19]
    9d50:	sub	x1, x1, #0x1
    9d54:	str	x1, [x19]
    9d58:	cbz	x1, 9d90 <PyFloat_FromString@plt+0x3300>
    9d5c:	mov	w2, #0x1                   	// #1
    9d60:	mov	x1, x19
    9d64:	mov	x0, x20
    9d68:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    9d6c:	mov	x19, x0
    9d70:	mov	x0, x19
    9d74:	ldp	x19, x20, [sp, #16]
    9d78:	ldp	x29, x30, [sp], #48
    9d7c:	ret
    9d80:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9d84:	mov	x19, x0
    9d88:	cbnz	x0, 9d4c <PyFloat_FromString@plt+0x32bc>
    9d8c:	b	9d70 <PyFloat_FromString@plt+0x32e0>
    9d90:	mov	x0, x19
    9d94:	bl	65d0 <_Py_Dealloc@plt>
    9d98:	b	9d5c <PyFloat_FromString@plt+0x32cc>
    9d9c:	mov	x19, #0x0                   	// #0
    9da0:	b	9d70 <PyFloat_FromString@plt+0x32e0>
    9da4:	stp	x29, x30, [sp, #-48]!
    9da8:	mov	x29, sp
    9dac:	stp	x19, x20, [sp, #16]
    9db0:	mov	x20, x0
    9db4:	add	x2, sp, #0x28
    9db8:	mov	x1, #0x0                   	// #0
    9dbc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9dc0:	ldr	x0, [x0, #1816]
    9dc4:	bl	6740 <PyContextVar_Get@plt>
    9dc8:	tbnz	w0, #31, 9e24 <PyFloat_FromString@plt+0x3394>
    9dcc:	ldr	x19, [sp, #40]
    9dd0:	cbz	x19, 9e08 <PyFloat_FromString@plt+0x3378>
    9dd4:	ldr	x1, [x19]
    9dd8:	sub	x1, x1, #0x1
    9ddc:	str	x1, [x19]
    9de0:	cbz	x1, 9e18 <PyFloat_FromString@plt+0x3388>
    9de4:	mov	w2, #0x2                   	// #2
    9de8:	mov	x1, x19
    9dec:	mov	x0, x20
    9df0:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    9df4:	mov	x19, x0
    9df8:	mov	x0, x19
    9dfc:	ldp	x19, x20, [sp, #16]
    9e00:	ldp	x29, x30, [sp], #48
    9e04:	ret
    9e08:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9e0c:	mov	x19, x0
    9e10:	cbnz	x0, 9dd4 <PyFloat_FromString@plt+0x3344>
    9e14:	b	9df8 <PyFloat_FromString@plt+0x3368>
    9e18:	mov	x0, x19
    9e1c:	bl	65d0 <_Py_Dealloc@plt>
    9e20:	b	9de4 <PyFloat_FromString@plt+0x3354>
    9e24:	mov	x19, #0x0                   	// #0
    9e28:	b	9df8 <PyFloat_FromString@plt+0x3368>
    9e2c:	stp	x29, x30, [sp, #-48]!
    9e30:	mov	x29, sp
    9e34:	stp	x19, x20, [sp, #16]
    9e38:	mov	x20, x0
    9e3c:	add	x2, sp, #0x28
    9e40:	mov	x1, #0x0                   	// #0
    9e44:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9e48:	ldr	x0, [x0, #1816]
    9e4c:	bl	6740 <PyContextVar_Get@plt>
    9e50:	tbnz	w0, #31, 9eac <PyFloat_FromString@plt+0x341c>
    9e54:	ldr	x19, [sp, #40]
    9e58:	cbz	x19, 9e90 <PyFloat_FromString@plt+0x3400>
    9e5c:	ldr	x1, [x19]
    9e60:	sub	x1, x1, #0x1
    9e64:	str	x1, [x19]
    9e68:	cbz	x1, 9ea0 <PyFloat_FromString@plt+0x3410>
    9e6c:	mov	w2, #0x3                   	// #3
    9e70:	mov	x1, x19
    9e74:	mov	x0, x20
    9e78:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    9e7c:	mov	x19, x0
    9e80:	mov	x0, x19
    9e84:	ldp	x19, x20, [sp, #16]
    9e88:	ldp	x29, x30, [sp], #48
    9e8c:	ret
    9e90:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9e94:	mov	x19, x0
    9e98:	cbnz	x0, 9e5c <PyFloat_FromString@plt+0x33cc>
    9e9c:	b	9e80 <PyFloat_FromString@plt+0x33f0>
    9ea0:	mov	x0, x19
    9ea4:	bl	65d0 <_Py_Dealloc@plt>
    9ea8:	b	9e6c <PyFloat_FromString@plt+0x33dc>
    9eac:	mov	x19, #0x0                   	// #0
    9eb0:	b	9e80 <PyFloat_FromString@plt+0x33f0>
    9eb4:	stp	x29, x30, [sp, #-48]!
    9eb8:	mov	x29, sp
    9ebc:	stp	x19, x20, [sp, #16]
    9ec0:	mov	x20, x0
    9ec4:	add	x2, sp, #0x28
    9ec8:	mov	x1, #0x0                   	// #0
    9ecc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9ed0:	ldr	x0, [x0, #1816]
    9ed4:	bl	6740 <PyContextVar_Get@plt>
    9ed8:	tbnz	w0, #31, 9f34 <PyFloat_FromString@plt+0x34a4>
    9edc:	ldr	x19, [sp, #40]
    9ee0:	cbz	x19, 9f18 <PyFloat_FromString@plt+0x3488>
    9ee4:	ldr	x1, [x19]
    9ee8:	sub	x1, x1, #0x1
    9eec:	str	x1, [x19]
    9ef0:	cbz	x1, 9f28 <PyFloat_FromString@plt+0x3498>
    9ef4:	mov	w2, #0x1                   	// #1
    9ef8:	mov	x1, x19
    9efc:	mov	x0, x20
    9f00:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    9f04:	mov	x19, x0
    9f08:	mov	x0, x19
    9f0c:	ldp	x19, x20, [sp, #16]
    9f10:	ldp	x29, x30, [sp], #48
    9f14:	ret
    9f18:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9f1c:	mov	x19, x0
    9f20:	cbnz	x0, 9ee4 <PyFloat_FromString@plt+0x3454>
    9f24:	b	9f08 <PyFloat_FromString@plt+0x3478>
    9f28:	mov	x0, x19
    9f2c:	bl	65d0 <_Py_Dealloc@plt>
    9f30:	b	9ef4 <PyFloat_FromString@plt+0x3464>
    9f34:	mov	x19, #0x0                   	// #0
    9f38:	b	9f08 <PyFloat_FromString@plt+0x3478>
    9f3c:	stp	x29, x30, [sp, #-48]!
    9f40:	mov	x29, sp
    9f44:	stp	x19, x20, [sp, #16]
    9f48:	mov	x20, x0
    9f4c:	add	x2, sp, #0x28
    9f50:	mov	x1, #0x0                   	// #0
    9f54:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9f58:	ldr	x0, [x0, #1816]
    9f5c:	bl	6740 <PyContextVar_Get@plt>
    9f60:	tbnz	w0, #31, 9fec <PyFloat_FromString@plt+0x355c>
    9f64:	ldr	x19, [sp, #40]
    9f68:	cbz	x19, 9fc4 <PyFloat_FromString@plt+0x3534>
    9f6c:	ldr	x1, [x19]
    9f70:	sub	x1, x1, #0x1
    9f74:	str	x1, [x19]
    9f78:	cbz	x1, 9fd4 <PyFloat_FromString@plt+0x3544>
    9f7c:	ldr	w1, [x19, #80]
    9f80:	add	x0, x20, #0x18
    9f84:	bl	23f2c <PyInit__decimal@@Base+0x9d8c>
    9f88:	mov	x20, x0
    9f8c:	cbz	x0, 9fe0 <PyFloat_FromString@plt+0x3550>
    9f90:	mov	x1, x0
    9f94:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    9f98:	add	x0, x0, #0x8d8
    9f9c:	bl	6480 <PyUnicode_FromFormat@plt>
    9fa0:	mov	x19, x0
    9fa4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    9fa8:	ldr	x1, [x0, #1704]
    9fac:	mov	x0, x20
    9fb0:	blr	x1
    9fb4:	mov	x0, x19
    9fb8:	ldp	x19, x20, [sp, #16]
    9fbc:	ldp	x29, x30, [sp], #48
    9fc0:	ret
    9fc4:	bl	7abc <PyFloat_FromString@plt+0x102c>
    9fc8:	mov	x19, x0
    9fcc:	cbnz	x0, 9f6c <PyFloat_FromString@plt+0x34dc>
    9fd0:	b	9fb4 <PyFloat_FromString@plt+0x3524>
    9fd4:	mov	x0, x19
    9fd8:	bl	65d0 <_Py_Dealloc@plt>
    9fdc:	b	9f7c <PyFloat_FromString@plt+0x34ec>
    9fe0:	bl	65e0 <PyErr_NoMemory@plt>
    9fe4:	mov	x19, x20
    9fe8:	b	9fb4 <PyFloat_FromString@plt+0x3524>
    9fec:	mov	x19, #0x0                   	// #0
    9ff0:	b	9fb4 <PyFloat_FromString@plt+0x3524>
    9ff4:	stp	x29, x30, [sp, #-48]!
    9ff8:	mov	x29, sp
    9ffc:	stp	x19, x20, [sp, #16]
    a000:	mov	x20, x0
    a004:	add	x2, sp, #0x20
    a008:	mov	x1, #0x0                   	// #0
    a00c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a010:	ldr	x0, [x0, #1816]
    a014:	bl	6740 <PyContextVar_Get@plt>
    a018:	tbnz	w0, #31, a0a0 <PyFloat_FromString@plt+0x3610>
    a01c:	ldr	x19, [sp, #32]
    a020:	cbz	x19, a078 <PyFloat_FromString@plt+0x35e8>
    a024:	ldr	x1, [x19]
    a028:	sub	x1, x1, #0x1
    a02c:	str	x1, [x19]
    a030:	cbz	x1, a088 <PyFloat_FromString@plt+0x35f8>
    a034:	ldr	w2, [x19, #80]
    a038:	add	x1, x20, #0x18
    a03c:	add	x0, sp, #0x28
    a040:	bl	23f8c <PyInit__decimal@@Base+0x9dec>
    a044:	mov	x1, x0
    a048:	tbnz	x0, #63, a094 <PyFloat_FromString@plt+0x3604>
    a04c:	ldr	x0, [sp, #40]
    a050:	bl	767c <PyFloat_FromString@plt+0xbec>
    a054:	mov	x19, x0
    a058:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a05c:	ldr	x1, [x0, #1704]
    a060:	ldr	x0, [sp, #40]
    a064:	blr	x1
    a068:	mov	x0, x19
    a06c:	ldp	x19, x20, [sp, #16]
    a070:	ldp	x29, x30, [sp], #48
    a074:	ret
    a078:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a07c:	mov	x19, x0
    a080:	cbnz	x0, a024 <PyFloat_FromString@plt+0x3594>
    a084:	b	a068 <PyFloat_FromString@plt+0x35d8>
    a088:	mov	x0, x19
    a08c:	bl	65d0 <_Py_Dealloc@plt>
    a090:	b	a034 <PyFloat_FromString@plt+0x35a4>
    a094:	bl	65e0 <PyErr_NoMemory@plt>
    a098:	mov	x19, #0x0                   	// #0
    a09c:	b	a068 <PyFloat_FromString@plt+0x35d8>
    a0a0:	mov	x19, #0x0                   	// #0
    a0a4:	b	a068 <PyFloat_FromString@plt+0x35d8>
    a0a8:	stp	x29, x30, [sp, #-32]!
    a0ac:	mov	x29, sp
    a0b0:	stp	x19, x20, [sp, #16]
    a0b4:	mov	x19, x0
    a0b8:	add	x20, x0, #0x18
    a0bc:	mov	x0, x20
    a0c0:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    a0c4:	cbz	w0, a128 <PyFloat_FromString@plt+0x3698>
    a0c8:	mov	x0, x20
    a0cc:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    a0d0:	cbnz	w0, a0f4 <PyFloat_FromString@plt+0x3664>
    a0d4:	mov	x0, x20
    a0d8:	bl	280cc <PyInit__decimal@@Base+0xdf2c>
    a0dc:	cbz	w0, a114 <PyFloat_FromString@plt+0x3684>
    a0e0:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    a0e4:	add	x0, x0, #0x910
    a0e8:	bl	6960 <PyUnicode_FromString@plt>
    a0ec:	mov	x19, x0
    a0f0:	b	a134 <PyFloat_FromString@plt+0x36a4>
    a0f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    a0f8:	add	x1, x1, #0x8e8
    a0fc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a100:	ldr	x0, [x0, #3928]
    a104:	ldr	x0, [x0]
    a108:	bl	6650 <PyErr_SetString@plt>
    a10c:	mov	x20, #0x0                   	// #0
    a110:	b	a154 <PyFloat_FromString@plt+0x36c4>
    a114:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    a118:	add	x0, x0, #0x918
    a11c:	bl	6960 <PyUnicode_FromString@plt>
    a120:	mov	x19, x0
    a124:	b	a134 <PyFloat_FromString@plt+0x36a4>
    a128:	mov	x0, x19
    a12c:	bl	9ff4 <PyFloat_FromString@plt+0x3564>
    a130:	mov	x19, x0
    a134:	cbz	x19, a170 <PyFloat_FromString@plt+0x36e0>
    a138:	mov	x0, x19
    a13c:	bl	6a90 <PyFloat_FromString@plt>
    a140:	mov	x20, x0
    a144:	ldr	x1, [x19]
    a148:	sub	x1, x1, #0x1
    a14c:	str	x1, [x19]
    a150:	cbz	x1, a164 <PyFloat_FromString@plt+0x36d4>
    a154:	mov	x0, x20
    a158:	ldp	x19, x20, [sp, #16]
    a15c:	ldp	x29, x30, [sp], #32
    a160:	ret
    a164:	mov	x0, x19
    a168:	bl	65d0 <_Py_Dealloc@plt>
    a16c:	b	a154 <PyFloat_FromString@plt+0x36c4>
    a170:	mov	x20, x19
    a174:	b	a154 <PyFloat_FromString@plt+0x36c4>
    a178:	stp	x29, x30, [sp, #-32]!
    a17c:	mov	x29, sp
    a180:	str	x19, [sp, #16]
    a184:	bl	a0a8 <PyFloat_FromString@plt+0x3618>
    a188:	mov	x19, x0
    a18c:	cbz	x0, a1d8 <PyFloat_FromString@plt+0x3748>
    a190:	str	d8, [sp, #24]
    a194:	bl	68c0 <PyFloat_AsDouble@plt>
    a198:	fmov	d8, d0
    a19c:	ldr	x0, [x19]
    a1a0:	sub	x0, x0, #0x1
    a1a4:	str	x0, [x19]
    a1a8:	cbz	x0, a1e8 <PyFloat_FromString@plt+0x3758>
    a1ac:	fmov	d0, #-1.000000000000000000e+00
    a1b0:	fcmp	d8, d0
    a1b4:	b.ne	a1c4 <PyFloat_FromString@plt+0x3734>  // b.any
    a1b8:	bl	67e0 <PyErr_Occurred@plt>
    a1bc:	mov	x19, #0x0                   	// #0
    a1c0:	cbnz	x0, a1f4 <PyFloat_FromString@plt+0x3764>
    a1c4:	movi	d1, #0x0
    a1c8:	fmov	d0, d8
    a1cc:	bl	6a00 <PyComplex_FromDoubles@plt>
    a1d0:	mov	x19, x0
    a1d4:	ldr	d8, [sp, #24]
    a1d8:	mov	x0, x19
    a1dc:	ldr	x19, [sp, #16]
    a1e0:	ldp	x29, x30, [sp], #32
    a1e4:	ret
    a1e8:	mov	x0, x19
    a1ec:	bl	65d0 <_Py_Dealloc@plt>
    a1f0:	b	a1ac <PyFloat_FromString@plt+0x371c>
    a1f4:	ldr	d8, [sp, #24]
    a1f8:	b	a1d8 <PyFloat_FromString@plt+0x3748>
    a1fc:	stp	x29, x30, [sp, #-32]!
    a200:	mov	x29, sp
    a204:	stp	x19, x20, [sp, #16]
    a208:	mov	x20, x0
    a20c:	bl	9ff4 <PyFloat_FromString@plt+0x3564>
    a210:	mov	x19, x0
    a214:	cbz	x0, a25c <PyFloat_FromString@plt+0x37cc>
    a218:	mov	x2, x0
    a21c:	ldr	x1, [x20, #8]
    a220:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
    a224:	add	x0, x0, #0x920
    a228:	bl	67d0 <Py_BuildValue@plt>
    a22c:	mov	x20, x0
    a230:	ldr	x1, [x19]
    a234:	sub	x1, x1, #0x1
    a238:	str	x1, [x19]
    a23c:	cbz	x1, a250 <PyFloat_FromString@plt+0x37c0>
    a240:	mov	x0, x20
    a244:	ldp	x19, x20, [sp, #16]
    a248:	ldp	x29, x30, [sp], #32
    a24c:	ret
    a250:	mov	x0, x19
    a254:	bl	65d0 <_Py_Dealloc@plt>
    a258:	b	a240 <PyFloat_FromString@plt+0x37b0>
    a25c:	mov	x20, x0
    a260:	b	a240 <PyFloat_FromString@plt+0x37b0>
    a264:	stp	x29, x30, [sp, #-64]!
    a268:	mov	x29, sp
    a26c:	stp	x19, x20, [sp, #16]
    a270:	stp	x21, x22, [sp, #32]
    a274:	mov	x21, x0
    a278:	mov	x22, x1
    a27c:	add	x2, sp, #0x38
    a280:	mov	x1, #0x0                   	// #0
    a284:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a288:	ldr	x0, [x0, #1816]
    a28c:	bl	6740 <PyContextVar_Get@plt>
    a290:	tbnz	w0, #31, a344 <PyFloat_FromString@plt+0x38b4>
    a294:	ldr	x19, [sp, #56]
    a298:	cbz	x19, a2ec <PyFloat_FromString@plt+0x385c>
    a29c:	ldr	x2, [x19]
    a2a0:	sub	x2, x2, #0x1
    a2a4:	str	x2, [x19]
    a2a8:	cbz	x2, a2fc <PyFloat_FromString@plt+0x386c>
    a2ac:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41e60>
    a2b0:	add	x20, x20, #0x320
    a2b4:	add	x20, x20, #0x1a0
    a2b8:	mov	x2, x19
    a2bc:	mov	x1, x22
    a2c0:	mov	x0, x20
    a2c4:	bl	8b40 <PyFloat_FromString@plt+0x20b0>
    a2c8:	mov	x19, x0
    a2cc:	cmp	x0, #0x0
    a2d0:	ccmp	x21, x20, #0x4, ne  // ne = any
    a2d4:	b.ne	a308 <PyFloat_FromString@plt+0x3878>  // b.any
    a2d8:	mov	x0, x19
    a2dc:	ldp	x19, x20, [sp, #16]
    a2e0:	ldp	x21, x22, [sp, #32]
    a2e4:	ldp	x29, x30, [sp], #64
    a2e8:	ret
    a2ec:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a2f0:	mov	x19, x0
    a2f4:	cbnz	x0, a29c <PyFloat_FromString@plt+0x380c>
    a2f8:	b	a2d8 <PyFloat_FromString@plt+0x3848>
    a2fc:	mov	x0, x19
    a300:	bl	65d0 <_Py_Dealloc@plt>
    a304:	b	a2ac <PyFloat_FromString@plt+0x381c>
    a308:	mov	x2, #0x0                   	// #0
    a30c:	mov	x1, x0
    a310:	mov	x0, x21
    a314:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    a318:	mov	x20, x0
    a31c:	ldr	x1, [x19]
    a320:	sub	x1, x1, #0x1
    a324:	str	x1, [x19]
    a328:	cbz	x1, a334 <PyFloat_FromString@plt+0x38a4>
    a32c:	mov	x19, x0
    a330:	b	a2d8 <PyFloat_FromString@plt+0x3848>
    a334:	mov	x0, x19
    a338:	bl	65d0 <_Py_Dealloc@plt>
    a33c:	mov	x19, x20
    a340:	b	a2d8 <PyFloat_FromString@plt+0x3848>
    a344:	mov	x19, #0x0                   	// #0
    a348:	b	a2d8 <PyFloat_FromString@plt+0x3848>
    a34c:	stp	x29, x30, [sp, #-64]!
    a350:	mov	x29, sp
    a354:	stp	x19, x20, [sp, #16]
    a358:	str	x21, [sp, #32]
    a35c:	mov	x21, x0
    a360:	str	wzr, [sp, #60]
    a364:	add	x2, sp, #0x30
    a368:	mov	x1, #0x0                   	// #0
    a36c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a370:	ldr	x0, [x0, #1816]
    a374:	bl	6740 <PyContextVar_Get@plt>
    a378:	tbnz	w0, #31, a42c <PyFloat_FromString@plt+0x399c>
    a37c:	ldr	x19, [sp, #48]
    a380:	cbz	x19, a3e4 <PyFloat_FromString@plt+0x3954>
    a384:	ldr	x1, [x19]
    a388:	sub	x1, x1, #0x1
    a38c:	str	x1, [x19]
    a390:	cbz	x1, a3f8 <PyFloat_FromString@plt+0x3968>
    a394:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a398:	add	x0, x0, #0x320
    a39c:	add	x0, x0, #0x1a0
    a3a0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    a3a4:	mov	x20, x0
    a3a8:	cbz	x0, a3d0 <PyFloat_FromString@plt+0x3940>
    a3ac:	add	x3, sp, #0x3c
    a3b0:	add	x2, x19, #0x10
    a3b4:	add	x1, x21, #0x18
    a3b8:	add	x0, x0, #0x18
    a3bc:	bl	311d0 <PyInit__decimal@@Base+0x17030>
    a3c0:	ldr	w1, [sp, #60]
    a3c4:	mov	x0, x19
    a3c8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    a3cc:	cbnz	w0, a404 <PyFloat_FromString@plt+0x3974>
    a3d0:	mov	x0, x20
    a3d4:	ldp	x19, x20, [sp, #16]
    a3d8:	ldr	x21, [sp, #32]
    a3dc:	ldp	x29, x30, [sp], #64
    a3e0:	ret
    a3e4:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a3e8:	mov	x19, x0
    a3ec:	cbnz	x0, a384 <PyFloat_FromString@plt+0x38f4>
    a3f0:	mov	x20, x0
    a3f4:	b	a3d0 <PyFloat_FromString@plt+0x3940>
    a3f8:	mov	x0, x19
    a3fc:	bl	65d0 <_Py_Dealloc@plt>
    a400:	b	a394 <PyFloat_FromString@plt+0x3904>
    a404:	ldr	x0, [x20]
    a408:	sub	x0, x0, #0x1
    a40c:	str	x0, [x20]
    a410:	cbz	x0, a41c <PyFloat_FromString@plt+0x398c>
    a414:	mov	x20, #0x0                   	// #0
    a418:	b	a3d0 <PyFloat_FromString@plt+0x3940>
    a41c:	mov	x0, x20
    a420:	bl	65d0 <_Py_Dealloc@plt>
    a424:	mov	x20, #0x0                   	// #0
    a428:	b	a3d0 <PyFloat_FromString@plt+0x3940>
    a42c:	mov	x20, #0x0                   	// #0
    a430:	b	a3d0 <PyFloat_FromString@plt+0x3940>
    a434:	stp	x29, x30, [sp, #-64]!
    a438:	mov	x29, sp
    a43c:	stp	x19, x20, [sp, #16]
    a440:	str	x21, [sp, #32]
    a444:	mov	x21, x0
    a448:	str	wzr, [sp, #60]
    a44c:	add	x2, sp, #0x30
    a450:	mov	x1, #0x0                   	// #0
    a454:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a458:	ldr	x0, [x0, #1816]
    a45c:	bl	6740 <PyContextVar_Get@plt>
    a460:	tbnz	w0, #31, a514 <PyFloat_FromString@plt+0x3a84>
    a464:	ldr	x19, [sp, #48]
    a468:	cbz	x19, a4cc <PyFloat_FromString@plt+0x3a3c>
    a46c:	ldr	x1, [x19]
    a470:	sub	x1, x1, #0x1
    a474:	str	x1, [x19]
    a478:	cbz	x1, a4e0 <PyFloat_FromString@plt+0x3a50>
    a47c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a480:	add	x0, x0, #0x320
    a484:	add	x0, x0, #0x1a0
    a488:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    a48c:	mov	x20, x0
    a490:	cbz	x0, a4b8 <PyFloat_FromString@plt+0x3a28>
    a494:	add	x3, sp, #0x3c
    a498:	add	x2, x19, #0x10
    a49c:	add	x1, x21, #0x18
    a4a0:	add	x0, x0, #0x18
    a4a4:	bl	31278 <PyInit__decimal@@Base+0x170d8>
    a4a8:	ldr	w1, [sp, #60]
    a4ac:	mov	x0, x19
    a4b0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    a4b4:	cbnz	w0, a4ec <PyFloat_FromString@plt+0x3a5c>
    a4b8:	mov	x0, x20
    a4bc:	ldp	x19, x20, [sp, #16]
    a4c0:	ldr	x21, [sp, #32]
    a4c4:	ldp	x29, x30, [sp], #64
    a4c8:	ret
    a4cc:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a4d0:	mov	x19, x0
    a4d4:	cbnz	x0, a46c <PyFloat_FromString@plt+0x39dc>
    a4d8:	mov	x20, x0
    a4dc:	b	a4b8 <PyFloat_FromString@plt+0x3a28>
    a4e0:	mov	x0, x19
    a4e4:	bl	65d0 <_Py_Dealloc@plt>
    a4e8:	b	a47c <PyFloat_FromString@plt+0x39ec>
    a4ec:	ldr	x0, [x20]
    a4f0:	sub	x0, x0, #0x1
    a4f4:	str	x0, [x20]
    a4f8:	cbz	x0, a504 <PyFloat_FromString@plt+0x3a74>
    a4fc:	mov	x20, #0x0                   	// #0
    a500:	b	a4b8 <PyFloat_FromString@plt+0x3a28>
    a504:	mov	x0, x20
    a508:	bl	65d0 <_Py_Dealloc@plt>
    a50c:	mov	x20, #0x0                   	// #0
    a510:	b	a4b8 <PyFloat_FromString@plt+0x3a28>
    a514:	mov	x20, #0x0                   	// #0
    a518:	b	a4b8 <PyFloat_FromString@plt+0x3a28>
    a51c:	stp	x29, x30, [sp, #-64]!
    a520:	mov	x29, sp
    a524:	stp	x19, x20, [sp, #16]
    a528:	str	x21, [sp, #32]
    a52c:	mov	x21, x0
    a530:	str	wzr, [sp, #60]
    a534:	add	x2, sp, #0x30
    a538:	mov	x1, #0x0                   	// #0
    a53c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a540:	ldr	x0, [x0, #1816]
    a544:	bl	6740 <PyContextVar_Get@plt>
    a548:	tbnz	w0, #31, a5fc <PyFloat_FromString@plt+0x3b6c>
    a54c:	ldr	x19, [sp, #48]
    a550:	cbz	x19, a5b4 <PyFloat_FromString@plt+0x3b24>
    a554:	ldr	x1, [x19]
    a558:	sub	x1, x1, #0x1
    a55c:	str	x1, [x19]
    a560:	cbz	x1, a5c8 <PyFloat_FromString@plt+0x3b38>
    a564:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a568:	add	x0, x0, #0x320
    a56c:	add	x0, x0, #0x1a0
    a570:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    a574:	mov	x20, x0
    a578:	cbz	x0, a5a0 <PyFloat_FromString@plt+0x3b10>
    a57c:	add	x3, sp, #0x3c
    a580:	add	x2, x19, #0x10
    a584:	add	x1, x21, #0x18
    a588:	add	x0, x0, #0x18
    a58c:	bl	31320 <PyInit__decimal@@Base+0x17180>
    a590:	ldr	w1, [sp, #60]
    a594:	mov	x0, x19
    a598:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    a59c:	cbnz	w0, a5d4 <PyFloat_FromString@plt+0x3b44>
    a5a0:	mov	x0, x20
    a5a4:	ldp	x19, x20, [sp, #16]
    a5a8:	ldr	x21, [sp, #32]
    a5ac:	ldp	x29, x30, [sp], #64
    a5b0:	ret
    a5b4:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a5b8:	mov	x19, x0
    a5bc:	cbnz	x0, a554 <PyFloat_FromString@plt+0x3ac4>
    a5c0:	mov	x20, x0
    a5c4:	b	a5a0 <PyFloat_FromString@plt+0x3b10>
    a5c8:	mov	x0, x19
    a5cc:	bl	65d0 <_Py_Dealloc@plt>
    a5d0:	b	a564 <PyFloat_FromString@plt+0x3ad4>
    a5d4:	ldr	x0, [x20]
    a5d8:	sub	x0, x0, #0x1
    a5dc:	str	x0, [x20]
    a5e0:	cbz	x0, a5ec <PyFloat_FromString@plt+0x3b5c>
    a5e4:	mov	x20, #0x0                   	// #0
    a5e8:	b	a5a0 <PyFloat_FromString@plt+0x3b10>
    a5ec:	mov	x0, x20
    a5f0:	bl	65d0 <_Py_Dealloc@plt>
    a5f4:	mov	x20, #0x0                   	// #0
    a5f8:	b	a5a0 <PyFloat_FromString@plt+0x3b10>
    a5fc:	mov	x20, #0x0                   	// #0
    a600:	b	a5a0 <PyFloat_FromString@plt+0x3b10>
    a604:	stp	x29, x30, [sp, #-32]!
    a608:	mov	x29, sp
    a60c:	stp	x19, x20, [sp, #16]
    a610:	mov	x20, x0
    a614:	mov	x19, x1
    a618:	ldr	x0, [x1, #8]
    a61c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a620:	add	x1, x1, #0x320
    a624:	add	x1, x1, #0x1a0
    a628:	cmp	x0, x1
    a62c:	b.eq	a674 <PyFloat_FromString@plt+0x3be4>  // b.none
    a630:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a634:	add	x1, x1, #0x320
    a638:	add	x1, x1, #0x1a0
    a63c:	bl	69c0 <PyType_IsSubtype@plt>
    a640:	cbnz	w0, a674 <PyFloat_FromString@plt+0x3be4>
    a644:	ldr	x0, [x19, #8]
    a648:	ldr	x1, [x0, #168]
    a64c:	tbnz	w1, #24, a690 <PyFloat_FromString@plt+0x3c00>
    a650:	ldr	x2, [x0, #24]
    a654:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    a658:	add	x1, x1, #0x8a8
    a65c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a660:	ldr	x0, [x0, #3936]
    a664:	ldr	x0, [x0]
    a668:	bl	6a10 <PyErr_Format@plt>
    a66c:	mov	x0, #0x0                   	// #0
    a670:	b	a684 <PyFloat_FromString@plt+0x3bf4>
    a674:	ldr	x0, [x19]
    a678:	add	x0, x0, #0x1
    a67c:	str	x0, [x19]
    a680:	mov	x0, x19
    a684:	ldp	x19, x20, [sp, #16]
    a688:	ldp	x29, x30, [sp], #32
    a68c:	ret
    a690:	mov	x2, x20
    a694:	mov	x1, x19
    a698:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a69c:	add	x0, x0, #0x320
    a6a0:	add	x0, x0, #0x1a0
    a6a4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    a6a8:	b	a684 <PyFloat_FromString@plt+0x3bf4>
    a6ac:	stp	x29, x30, [sp, #-32]!
    a6b0:	mov	x29, sp
    a6b4:	stp	x19, x20, [sp, #16]
    a6b8:	mov	x20, x0
    a6bc:	mov	x19, x1
    a6c0:	ldr	x0, [x1, #8]
    a6c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a6c8:	add	x1, x1, #0x320
    a6cc:	add	x1, x1, #0x1a0
    a6d0:	cmp	x0, x1
    a6d4:	b.eq	a71c <PyFloat_FromString@plt+0x3c8c>  // b.none
    a6d8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a6dc:	add	x1, x1, #0x320
    a6e0:	add	x1, x1, #0x1a0
    a6e4:	bl	69c0 <PyType_IsSubtype@plt>
    a6e8:	cbnz	w0, a71c <PyFloat_FromString@plt+0x3c8c>
    a6ec:	ldr	x0, [x19, #8]
    a6f0:	ldr	x1, [x0, #168]
    a6f4:	tbnz	w1, #24, a758 <PyFloat_FromString@plt+0x3cc8>
    a6f8:	ldr	x2, [x0, #24]
    a6fc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    a700:	add	x1, x1, #0x8a8
    a704:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a708:	ldr	x0, [x0, #3936]
    a70c:	ldr	x0, [x0]
    a710:	bl	6a10 <PyErr_Format@plt>
    a714:	mov	x20, #0x0                   	// #0
    a718:	b	a748 <PyFloat_FromString@plt+0x3cb8>
    a71c:	ldr	x0, [x19]
    a720:	add	x0, x0, #0x1
    a724:	str	x0, [x19]
    a728:	mov	x1, x20
    a72c:	mov	x0, x19
    a730:	bl	9050 <PyFloat_FromString@plt+0x25c0>
    a734:	mov	x20, x0
    a738:	ldr	x1, [x19]
    a73c:	sub	x1, x1, #0x1
    a740:	str	x1, [x19]
    a744:	cbz	x1, a780 <PyFloat_FromString@plt+0x3cf0>
    a748:	mov	x0, x20
    a74c:	ldp	x19, x20, [sp, #16]
    a750:	ldp	x29, x30, [sp], #32
    a754:	ret
    a758:	mov	x2, x20
    a75c:	mov	x1, x19
    a760:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a764:	add	x0, x0, #0x320
    a768:	add	x0, x0, #0x1a0
    a76c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    a770:	mov	x19, x0
    a774:	cbnz	x0, a728 <PyFloat_FromString@plt+0x3c98>
    a778:	mov	x20, x0
    a77c:	b	a748 <PyFloat_FromString@plt+0x3cb8>
    a780:	mov	x0, x19
    a784:	bl	65d0 <_Py_Dealloc@plt>
    a788:	b	a748 <PyFloat_FromString@plt+0x3cb8>
    a78c:	stp	x29, x30, [sp, #-32]!
    a790:	mov	x29, sp
    a794:	stp	x19, x20, [sp, #16]
    a798:	mov	x20, x0
    a79c:	mov	x19, x1
    a7a0:	ldr	x0, [x1, #8]
    a7a4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a7a8:	add	x1, x1, #0x320
    a7ac:	add	x1, x1, #0x1a0
    a7b0:	cmp	x0, x1
    a7b4:	b.eq	a7fc <PyFloat_FromString@plt+0x3d6c>  // b.none
    a7b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a7bc:	add	x1, x1, #0x320
    a7c0:	add	x1, x1, #0x1a0
    a7c4:	bl	69c0 <PyType_IsSubtype@plt>
    a7c8:	cbnz	w0, a7fc <PyFloat_FromString@plt+0x3d6c>
    a7cc:	ldr	x0, [x19, #8]
    a7d0:	ldr	x1, [x0, #168]
    a7d4:	tbnz	w1, #24, a83c <PyFloat_FromString@plt+0x3dac>
    a7d8:	ldr	x2, [x0, #24]
    a7dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    a7e0:	add	x1, x1, #0x8a8
    a7e4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a7e8:	ldr	x0, [x0, #3936]
    a7ec:	ldr	x0, [x0]
    a7f0:	bl	6a10 <PyErr_Format@plt>
    a7f4:	mov	x0, #0x0                   	// #0
    a7f8:	b	a830 <PyFloat_FromString@plt+0x3da0>
    a7fc:	ldr	x0, [x19]
    a800:	add	x0, x0, #0x1
    a804:	str	x0, [x19]
    a808:	add	x1, x20, #0x10
    a80c:	add	x0, x19, #0x18
    a810:	bl	2d734 <PyInit__decimal@@Base+0x13594>
    a814:	mov	x20, x0
    a818:	ldr	x1, [x19]
    a81c:	sub	x1, x1, #0x1
    a820:	str	x1, [x19]
    a824:	cbz	x1, a860 <PyFloat_FromString@plt+0x3dd0>
    a828:	mov	x0, x20
    a82c:	bl	6960 <PyUnicode_FromString@plt>
    a830:	ldp	x19, x20, [sp, #16]
    a834:	ldp	x29, x30, [sp], #32
    a838:	ret
    a83c:	mov	x2, x20
    a840:	mov	x1, x19
    a844:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a848:	add	x0, x0, #0x320
    a84c:	add	x0, x0, #0x1a0
    a850:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    a854:	mov	x19, x0
    a858:	cbnz	x0, a808 <PyFloat_FromString@plt+0x3d78>
    a85c:	b	a830 <PyFloat_FromString@plt+0x3da0>
    a860:	mov	x0, x19
    a864:	bl	65d0 <_Py_Dealloc@plt>
    a868:	b	a828 <PyFloat_FromString@plt+0x3d98>
    a86c:	stp	x29, x30, [sp, #-64]!
    a870:	mov	x29, sp
    a874:	stp	x19, x20, [sp, #16]
    a878:	str	x21, [sp, #32]
    a87c:	mov	x20, x1
    a880:	mov	x21, x2
    a884:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a888:	ldr	x0, [x0, #4008]
    a88c:	str	x0, [sp, #56]
    a890:	add	x2, sp, #0x30
    a894:	mov	x1, #0x0                   	// #0
    a898:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    a89c:	ldr	x0, [x0, #1816]
    a8a0:	bl	6740 <PyContextVar_Get@plt>
    a8a4:	tbnz	w0, #31, a9f0 <PyFloat_FromString@plt+0x3f60>
    a8a8:	ldr	x19, [sp, #48]
    a8ac:	cbz	x19, a974 <PyFloat_FromString@plt+0x3ee4>
    a8b0:	ldr	x0, [x19]
    a8b4:	sub	x0, x0, #0x1
    a8b8:	str	x0, [x19]
    a8bc:	cbz	x0, a988 <PyFloat_FromString@plt+0x3ef8>
    a8c0:	add	x4, sp, #0x38
    a8c4:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
    a8c8:	add	x3, x3, #0x9a0
    a8cc:	add	x3, x3, #0x200
    a8d0:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
    a8d4:	add	x2, x2, #0x878
    a8d8:	mov	x1, x21
    a8dc:	mov	x0, x20
    a8e0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    a8e4:	cbz	w0, a9e8 <PyFloat_FromString@plt+0x3f58>
    a8e8:	ldr	x1, [sp, #56]
    a8ec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a8f0:	ldr	x0, [x0, #4008]
    a8f4:	cmp	x1, x0
    a8f8:	b.eq	a994 <PyFloat_FromString@plt+0x3f04>  // b.none
    a8fc:	ldr	x0, [x1, #8]
    a900:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a904:	add	x1, x1, #0x320
    a908:	cmp	x0, x1
    a90c:	b.eq	a920 <PyFloat_FromString@plt+0x3e90>  // b.none
    a910:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    a914:	add	x1, x1, #0x320
    a918:	bl	69c0 <PyType_IsSubtype@plt>
    a91c:	cbz	w0, a99c <PyFloat_FromString@plt+0x3f0c>
    a920:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    a924:	add	x0, x0, #0x320
    a928:	add	x0, x0, #0x340
    a92c:	bl	6950 <_PyObject_New@plt>
    a930:	mov	x20, x0
    a934:	cbz	x0, a960 <PyFloat_FromString@plt+0x3ed0>
    a938:	mov	x1, #0x0                   	// #0
    a93c:	ldr	x0, [sp, #56]
    a940:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    a944:	mov	x21, x0
    a948:	str	x0, [x20, #16]
    a94c:	cbz	x0, a9bc <PyFloat_FromString@plt+0x3f2c>
    a950:	str	x19, [x20, #24]
    a954:	ldr	x0, [x19]
    a958:	add	x0, x0, #0x1
    a95c:	str	x0, [x19]
    a960:	mov	x0, x20
    a964:	ldp	x19, x20, [sp, #16]
    a968:	ldr	x21, [sp, #32]
    a96c:	ldp	x29, x30, [sp], #64
    a970:	ret
    a974:	bl	7abc <PyFloat_FromString@plt+0x102c>
    a978:	mov	x19, x0
    a97c:	cbnz	x0, a8b0 <PyFloat_FromString@plt+0x3e20>
    a980:	mov	x20, x0
    a984:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a988:	mov	x0, x19
    a98c:	bl	65d0 <_Py_Dealloc@plt>
    a990:	b	a8c0 <PyFloat_FromString@plt+0x3e30>
    a994:	str	x19, [sp, #56]
    a998:	b	a920 <PyFloat_FromString@plt+0x3e90>
    a99c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    a9a0:	add	x1, x1, #0x928
    a9a4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    a9a8:	ldr	x0, [x0, #3936]
    a9ac:	ldr	x0, [x0]
    a9b0:	bl	6650 <PyErr_SetString@plt>
    a9b4:	mov	x20, #0x0                   	// #0
    a9b8:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a9bc:	str	xzr, [x20, #24]
    a9c0:	ldr	x0, [x20]
    a9c4:	sub	x0, x0, #0x1
    a9c8:	str	x0, [x20]
    a9cc:	cbz	x0, a9d8 <PyFloat_FromString@plt+0x3f48>
    a9d0:	mov	x20, x21
    a9d4:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a9d8:	mov	x0, x20
    a9dc:	bl	65d0 <_Py_Dealloc@plt>
    a9e0:	mov	x20, x21
    a9e4:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a9e8:	mov	x20, #0x0                   	// #0
    a9ec:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a9f0:	mov	x20, #0x0                   	// #0
    a9f4:	b	a960 <PyFloat_FromString@plt+0x3ed0>
    a9f8:	stp	x29, x30, [sp, #-32]!
    a9fc:	mov	x29, sp
    aa00:	stp	x19, x20, [sp, #16]
    aa04:	mov	x20, x0
    aa08:	mov	x19, x1
    aa0c:	ldr	x0, [x1, #8]
    aa10:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    aa14:	add	x1, x1, #0x320
    aa18:	add	x1, x1, #0x1a0
    aa1c:	cmp	x0, x1
    aa20:	b.eq	aa68 <PyFloat_FromString@plt+0x3fd8>  // b.none
    aa24:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    aa28:	add	x1, x1, #0x320
    aa2c:	add	x1, x1, #0x1a0
    aa30:	bl	69c0 <PyType_IsSubtype@plt>
    aa34:	cbnz	w0, aa68 <PyFloat_FromString@plt+0x3fd8>
    aa38:	ldr	x0, [x19, #8]
    aa3c:	ldr	x1, [x0, #168]
    aa40:	tbnz	w1, #24, aab4 <PyFloat_FromString@plt+0x4024>
    aa44:	ldr	x2, [x0, #24]
    aa48:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    aa4c:	add	x1, x1, #0x8a8
    aa50:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    aa54:	ldr	x0, [x0, #3936]
    aa58:	ldr	x0, [x0]
    aa5c:	bl	6a10 <PyErr_Format@plt>
    aa60:	mov	x20, #0x0                   	// #0
    aa64:	b	aaa4 <PyFloat_FromString@plt+0x4014>
    aa68:	ldr	x0, [x19]
    aa6c:	add	x0, x0, #0x1
    aa70:	str	x0, [x19]
    aa74:	add	x0, x19, #0x18
    aa78:	bl	28118 <PyInit__decimal@@Base+0xdf78>
    aa7c:	cbz	w0, aadc <PyFloat_FromString@plt+0x404c>
    aa80:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    aa84:	ldr	x20, [x20, #4024]
    aa88:	ldr	x0, [x20]
    aa8c:	add	x0, x0, #0x1
    aa90:	str	x0, [x20]
    aa94:	ldr	x0, [x19]
    aa98:	sub	x0, x0, #0x1
    aa9c:	str	x0, [x19]
    aaa0:	cbz	x0, aaf4 <PyFloat_FromString@plt+0x4064>
    aaa4:	mov	x0, x20
    aaa8:	ldp	x19, x20, [sp, #16]
    aaac:	ldp	x29, x30, [sp], #32
    aab0:	ret
    aab4:	mov	x2, x20
    aab8:	mov	x1, x19
    aabc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    aac0:	add	x0, x0, #0x320
    aac4:	add	x0, x0, #0x1a0
    aac8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    aacc:	mov	x19, x0
    aad0:	cbnz	x0, aa74 <PyFloat_FromString@plt+0x3fe4>
    aad4:	mov	x20, x0
    aad8:	b	aaa4 <PyFloat_FromString@plt+0x4014>
    aadc:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    aae0:	ldr	x20, [x20, #3976]
    aae4:	ldr	x0, [x20]
    aae8:	add	x0, x0, #0x1
    aaec:	str	x0, [x20]
    aaf0:	b	aa94 <PyFloat_FromString@plt+0x4004>
    aaf4:	mov	x0, x19
    aaf8:	bl	65d0 <_Py_Dealloc@plt>
    aafc:	b	aaa4 <PyFloat_FromString@plt+0x4014>
    ab00:	stp	x29, x30, [sp, #-32]!
    ab04:	mov	x29, sp
    ab08:	stp	x19, x20, [sp, #16]
    ab0c:	mov	x20, x0
    ab10:	mov	x19, x1
    ab14:	ldr	x0, [x1, #8]
    ab18:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ab1c:	add	x1, x1, #0x320
    ab20:	add	x1, x1, #0x1a0
    ab24:	cmp	x0, x1
    ab28:	b.eq	ab70 <PyFloat_FromString@plt+0x40e0>  // b.none
    ab2c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ab30:	add	x1, x1, #0x320
    ab34:	add	x1, x1, #0x1a0
    ab38:	bl	69c0 <PyType_IsSubtype@plt>
    ab3c:	cbnz	w0, ab70 <PyFloat_FromString@plt+0x40e0>
    ab40:	ldr	x0, [x19, #8]
    ab44:	ldr	x1, [x0, #168]
    ab48:	tbnz	w1, #24, abbc <PyFloat_FromString@plt+0x412c>
    ab4c:	ldr	x2, [x0, #24]
    ab50:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ab54:	add	x1, x1, #0x8a8
    ab58:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ab5c:	ldr	x0, [x0, #3936]
    ab60:	ldr	x0, [x0]
    ab64:	bl	6a10 <PyErr_Format@plt>
    ab68:	mov	x20, #0x0                   	// #0
    ab6c:	b	abac <PyFloat_FromString@plt+0x411c>
    ab70:	ldr	x0, [x19]
    ab74:	add	x0, x0, #0x1
    ab78:	str	x0, [x19]
    ab7c:	add	x0, x19, #0x18
    ab80:	bl	280f4 <PyInit__decimal@@Base+0xdf54>
    ab84:	cbz	w0, abe4 <PyFloat_FromString@plt+0x4154>
    ab88:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    ab8c:	ldr	x20, [x20, #4024]
    ab90:	ldr	x0, [x20]
    ab94:	add	x0, x0, #0x1
    ab98:	str	x0, [x20]
    ab9c:	ldr	x0, [x19]
    aba0:	sub	x0, x0, #0x1
    aba4:	str	x0, [x19]
    aba8:	cbz	x0, abfc <PyFloat_FromString@plt+0x416c>
    abac:	mov	x0, x20
    abb0:	ldp	x19, x20, [sp, #16]
    abb4:	ldp	x29, x30, [sp], #32
    abb8:	ret
    abbc:	mov	x2, x20
    abc0:	mov	x1, x19
    abc4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    abc8:	add	x0, x0, #0x320
    abcc:	add	x0, x0, #0x1a0
    abd0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    abd4:	mov	x19, x0
    abd8:	cbnz	x0, ab7c <PyFloat_FromString@plt+0x40ec>
    abdc:	mov	x20, x0
    abe0:	b	abac <PyFloat_FromString@plt+0x411c>
    abe4:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    abe8:	ldr	x20, [x20, #3976]
    abec:	ldr	x0, [x20]
    abf0:	add	x0, x0, #0x1
    abf4:	str	x0, [x20]
    abf8:	b	ab9c <PyFloat_FromString@plt+0x410c>
    abfc:	mov	x0, x19
    ac00:	bl	65d0 <_Py_Dealloc@plt>
    ac04:	b	abac <PyFloat_FromString@plt+0x411c>
    ac08:	stp	x29, x30, [sp, #-32]!
    ac0c:	mov	x29, sp
    ac10:	stp	x19, x20, [sp, #16]
    ac14:	mov	x20, x0
    ac18:	mov	x19, x1
    ac1c:	ldr	x0, [x1, #8]
    ac20:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ac24:	add	x1, x1, #0x320
    ac28:	add	x1, x1, #0x1a0
    ac2c:	cmp	x0, x1
    ac30:	b.eq	ac78 <PyFloat_FromString@plt+0x41e8>  // b.none
    ac34:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ac38:	add	x1, x1, #0x320
    ac3c:	add	x1, x1, #0x1a0
    ac40:	bl	69c0 <PyType_IsSubtype@plt>
    ac44:	cbnz	w0, ac78 <PyFloat_FromString@plt+0x41e8>
    ac48:	ldr	x0, [x19, #8]
    ac4c:	ldr	x1, [x0, #168]
    ac50:	tbnz	w1, #24, acc4 <PyFloat_FromString@plt+0x4234>
    ac54:	ldr	x2, [x0, #24]
    ac58:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ac5c:	add	x1, x1, #0x8a8
    ac60:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ac64:	ldr	x0, [x0, #3936]
    ac68:	ldr	x0, [x0]
    ac6c:	bl	6a10 <PyErr_Format@plt>
    ac70:	mov	x20, #0x0                   	// #0
    ac74:	b	acb4 <PyFloat_FromString@plt+0x4224>
    ac78:	ldr	x0, [x19]
    ac7c:	add	x0, x0, #0x1
    ac80:	str	x0, [x19]
    ac84:	add	x0, x19, #0x18
    ac88:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    ac8c:	cbz	w0, acec <PyFloat_FromString@plt+0x425c>
    ac90:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    ac94:	ldr	x20, [x20, #4024]
    ac98:	ldr	x0, [x20]
    ac9c:	add	x0, x0, #0x1
    aca0:	str	x0, [x20]
    aca4:	ldr	x0, [x19]
    aca8:	sub	x0, x0, #0x1
    acac:	str	x0, [x19]
    acb0:	cbz	x0, ad04 <PyFloat_FromString@plt+0x4274>
    acb4:	mov	x0, x20
    acb8:	ldp	x19, x20, [sp, #16]
    acbc:	ldp	x29, x30, [sp], #32
    acc0:	ret
    acc4:	mov	x2, x20
    acc8:	mov	x1, x19
    accc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    acd0:	add	x0, x0, #0x320
    acd4:	add	x0, x0, #0x1a0
    acd8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    acdc:	mov	x19, x0
    ace0:	cbnz	x0, ac84 <PyFloat_FromString@plt+0x41f4>
    ace4:	mov	x20, x0
    ace8:	b	acb4 <PyFloat_FromString@plt+0x4224>
    acec:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    acf0:	ldr	x20, [x20, #3976]
    acf4:	ldr	x0, [x20]
    acf8:	add	x0, x0, #0x1
    acfc:	str	x0, [x20]
    ad00:	b	aca4 <PyFloat_FromString@plt+0x4214>
    ad04:	mov	x0, x19
    ad08:	bl	65d0 <_Py_Dealloc@plt>
    ad0c:	b	acb4 <PyFloat_FromString@plt+0x4224>
    ad10:	stp	x29, x30, [sp, #-32]!
    ad14:	mov	x29, sp
    ad18:	stp	x19, x20, [sp, #16]
    ad1c:	mov	x20, x0
    ad20:	mov	x19, x1
    ad24:	ldr	x0, [x1, #8]
    ad28:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ad2c:	add	x1, x1, #0x320
    ad30:	add	x1, x1, #0x1a0
    ad34:	cmp	x0, x1
    ad38:	b.eq	ad80 <PyFloat_FromString@plt+0x42f0>  // b.none
    ad3c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ad40:	add	x1, x1, #0x320
    ad44:	add	x1, x1, #0x1a0
    ad48:	bl	69c0 <PyType_IsSubtype@plt>
    ad4c:	cbnz	w0, ad80 <PyFloat_FromString@plt+0x42f0>
    ad50:	ldr	x0, [x19, #8]
    ad54:	ldr	x1, [x0, #168]
    ad58:	tbnz	w1, #24, adcc <PyFloat_FromString@plt+0x433c>
    ad5c:	ldr	x2, [x0, #24]
    ad60:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ad64:	add	x1, x1, #0x8a8
    ad68:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ad6c:	ldr	x0, [x0, #3936]
    ad70:	ldr	x0, [x0]
    ad74:	bl	6a10 <PyErr_Format@plt>
    ad78:	mov	x20, #0x0                   	// #0
    ad7c:	b	adbc <PyFloat_FromString@plt+0x432c>
    ad80:	ldr	x0, [x19]
    ad84:	add	x0, x0, #0x1
    ad88:	str	x0, [x19]
    ad8c:	add	x0, x19, #0x18
    ad90:	bl	280a4 <PyInit__decimal@@Base+0xdf04>
    ad94:	cbz	w0, adf4 <PyFloat_FromString@plt+0x4364>
    ad98:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    ad9c:	ldr	x20, [x20, #4024]
    ada0:	ldr	x0, [x20]
    ada4:	add	x0, x0, #0x1
    ada8:	str	x0, [x20]
    adac:	ldr	x0, [x19]
    adb0:	sub	x0, x0, #0x1
    adb4:	str	x0, [x19]
    adb8:	cbz	x0, ae0c <PyFloat_FromString@plt+0x437c>
    adbc:	mov	x0, x20
    adc0:	ldp	x19, x20, [sp, #16]
    adc4:	ldp	x29, x30, [sp], #32
    adc8:	ret
    adcc:	mov	x2, x20
    add0:	mov	x1, x19
    add4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    add8:	add	x0, x0, #0x320
    addc:	add	x0, x0, #0x1a0
    ade0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ade4:	mov	x19, x0
    ade8:	cbnz	x0, ad8c <PyFloat_FromString@plt+0x42fc>
    adec:	mov	x20, x0
    adf0:	b	adbc <PyFloat_FromString@plt+0x432c>
    adf4:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    adf8:	ldr	x20, [x20, #3976]
    adfc:	ldr	x0, [x20]
    ae00:	add	x0, x0, #0x1
    ae04:	str	x0, [x20]
    ae08:	b	adac <PyFloat_FromString@plt+0x431c>
    ae0c:	mov	x0, x19
    ae10:	bl	65d0 <_Py_Dealloc@plt>
    ae14:	b	adbc <PyFloat_FromString@plt+0x432c>
    ae18:	stp	x29, x30, [sp, #-32]!
    ae1c:	mov	x29, sp
    ae20:	stp	x19, x20, [sp, #16]
    ae24:	mov	x20, x0
    ae28:	mov	x19, x1
    ae2c:	ldr	x0, [x1, #8]
    ae30:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ae34:	add	x1, x1, #0x320
    ae38:	add	x1, x1, #0x1a0
    ae3c:	cmp	x0, x1
    ae40:	b.eq	ae88 <PyFloat_FromString@plt+0x43f8>  // b.none
    ae44:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ae48:	add	x1, x1, #0x320
    ae4c:	add	x1, x1, #0x1a0
    ae50:	bl	69c0 <PyType_IsSubtype@plt>
    ae54:	cbnz	w0, ae88 <PyFloat_FromString@plt+0x43f8>
    ae58:	ldr	x0, [x19, #8]
    ae5c:	ldr	x1, [x0, #168]
    ae60:	tbnz	w1, #24, aed4 <PyFloat_FromString@plt+0x4444>
    ae64:	ldr	x2, [x0, #24]
    ae68:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ae6c:	add	x1, x1, #0x8a8
    ae70:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ae74:	ldr	x0, [x0, #3936]
    ae78:	ldr	x0, [x0]
    ae7c:	bl	6a10 <PyErr_Format@plt>
    ae80:	mov	x20, #0x0                   	// #0
    ae84:	b	aec4 <PyFloat_FromString@plt+0x4434>
    ae88:	ldr	x0, [x19]
    ae8c:	add	x0, x0, #0x1
    ae90:	str	x0, [x19]
    ae94:	add	x0, x19, #0x18
    ae98:	bl	280b4 <PyInit__decimal@@Base+0xdf14>
    ae9c:	cbz	w0, aefc <PyFloat_FromString@plt+0x446c>
    aea0:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    aea4:	ldr	x20, [x20, #4024]
    aea8:	ldr	x0, [x20]
    aeac:	add	x0, x0, #0x1
    aeb0:	str	x0, [x20]
    aeb4:	ldr	x0, [x19]
    aeb8:	sub	x0, x0, #0x1
    aebc:	str	x0, [x19]
    aec0:	cbz	x0, af14 <PyFloat_FromString@plt+0x4484>
    aec4:	mov	x0, x20
    aec8:	ldp	x19, x20, [sp, #16]
    aecc:	ldp	x29, x30, [sp], #32
    aed0:	ret
    aed4:	mov	x2, x20
    aed8:	mov	x1, x19
    aedc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    aee0:	add	x0, x0, #0x320
    aee4:	add	x0, x0, #0x1a0
    aee8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    aeec:	mov	x19, x0
    aef0:	cbnz	x0, ae94 <PyFloat_FromString@plt+0x4404>
    aef4:	mov	x20, x0
    aef8:	b	aec4 <PyFloat_FromString@plt+0x4434>
    aefc:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    af00:	ldr	x20, [x20, #3976]
    af04:	ldr	x0, [x20]
    af08:	add	x0, x0, #0x1
    af0c:	str	x0, [x20]
    af10:	b	aeb4 <PyFloat_FromString@plt+0x4424>
    af14:	mov	x0, x19
    af18:	bl	65d0 <_Py_Dealloc@plt>
    af1c:	b	aec4 <PyFloat_FromString@plt+0x4434>
    af20:	stp	x29, x30, [sp, #-32]!
    af24:	mov	x29, sp
    af28:	stp	x19, x20, [sp, #16]
    af2c:	mov	x20, x0
    af30:	mov	x19, x1
    af34:	ldr	x0, [x1, #8]
    af38:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    af3c:	add	x1, x1, #0x320
    af40:	add	x1, x1, #0x1a0
    af44:	cmp	x0, x1
    af48:	b.eq	af90 <PyFloat_FromString@plt+0x4500>  // b.none
    af4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    af50:	add	x1, x1, #0x320
    af54:	add	x1, x1, #0x1a0
    af58:	bl	69c0 <PyType_IsSubtype@plt>
    af5c:	cbnz	w0, af90 <PyFloat_FromString@plt+0x4500>
    af60:	ldr	x0, [x19, #8]
    af64:	ldr	x1, [x0, #168]
    af68:	tbnz	w1, #24, afdc <PyFloat_FromString@plt+0x454c>
    af6c:	ldr	x2, [x0, #24]
    af70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    af74:	add	x1, x1, #0x8a8
    af78:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    af7c:	ldr	x0, [x0, #3936]
    af80:	ldr	x0, [x0]
    af84:	bl	6a10 <PyErr_Format@plt>
    af88:	mov	x20, #0x0                   	// #0
    af8c:	b	afcc <PyFloat_FromString@plt+0x453c>
    af90:	ldr	x0, [x19]
    af94:	add	x0, x0, #0x1
    af98:	str	x0, [x19]
    af9c:	add	x0, x19, #0x18
    afa0:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    afa4:	cbz	w0, b004 <PyFloat_FromString@plt+0x4574>
    afa8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    afac:	ldr	x20, [x20, #4024]
    afb0:	ldr	x0, [x20]
    afb4:	add	x0, x0, #0x1
    afb8:	str	x0, [x20]
    afbc:	ldr	x0, [x19]
    afc0:	sub	x0, x0, #0x1
    afc4:	str	x0, [x19]
    afc8:	cbz	x0, b01c <PyFloat_FromString@plt+0x458c>
    afcc:	mov	x0, x20
    afd0:	ldp	x19, x20, [sp, #16]
    afd4:	ldp	x29, x30, [sp], #32
    afd8:	ret
    afdc:	mov	x2, x20
    afe0:	mov	x1, x19
    afe4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    afe8:	add	x0, x0, #0x320
    afec:	add	x0, x0, #0x1a0
    aff0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    aff4:	mov	x19, x0
    aff8:	cbnz	x0, af9c <PyFloat_FromString@plt+0x450c>
    affc:	mov	x20, x0
    b000:	b	afcc <PyFloat_FromString@plt+0x453c>
    b004:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b008:	ldr	x20, [x20, #3976]
    b00c:	ldr	x0, [x20]
    b010:	add	x0, x0, #0x1
    b014:	str	x0, [x20]
    b018:	b	afbc <PyFloat_FromString@plt+0x452c>
    b01c:	mov	x0, x19
    b020:	bl	65d0 <_Py_Dealloc@plt>
    b024:	b	afcc <PyFloat_FromString@plt+0x453c>
    b028:	stp	x29, x30, [sp, #-32]!
    b02c:	mov	x29, sp
    b030:	stp	x19, x20, [sp, #16]
    b034:	mov	x20, x0
    b038:	mov	x19, x1
    b03c:	ldr	x0, [x1, #8]
    b040:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b044:	add	x1, x1, #0x320
    b048:	add	x1, x1, #0x1a0
    b04c:	cmp	x0, x1
    b050:	b.eq	b098 <PyFloat_FromString@plt+0x4608>  // b.none
    b054:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b058:	add	x1, x1, #0x320
    b05c:	add	x1, x1, #0x1a0
    b060:	bl	69c0 <PyType_IsSubtype@plt>
    b064:	cbnz	w0, b098 <PyFloat_FromString@plt+0x4608>
    b068:	ldr	x0, [x19, #8]
    b06c:	ldr	x1, [x0, #168]
    b070:	tbnz	w1, #24, b0e4 <PyFloat_FromString@plt+0x4654>
    b074:	ldr	x2, [x0, #24]
    b078:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b07c:	add	x1, x1, #0x8a8
    b080:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b084:	ldr	x0, [x0, #3936]
    b088:	ldr	x0, [x0]
    b08c:	bl	6a10 <PyErr_Format@plt>
    b090:	mov	x20, #0x0                   	// #0
    b094:	b	b0d4 <PyFloat_FromString@plt+0x4644>
    b098:	ldr	x0, [x19]
    b09c:	add	x0, x0, #0x1
    b0a0:	str	x0, [x19]
    b0a4:	add	x0, x19, #0x18
    b0a8:	bl	280e8 <PyInit__decimal@@Base+0xdf48>
    b0ac:	cbz	w0, b10c <PyFloat_FromString@plt+0x467c>
    b0b0:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b0b4:	ldr	x20, [x20, #4024]
    b0b8:	ldr	x0, [x20]
    b0bc:	add	x0, x0, #0x1
    b0c0:	str	x0, [x20]
    b0c4:	ldr	x0, [x19]
    b0c8:	sub	x0, x0, #0x1
    b0cc:	str	x0, [x19]
    b0d0:	cbz	x0, b124 <PyFloat_FromString@plt+0x4694>
    b0d4:	mov	x0, x20
    b0d8:	ldp	x19, x20, [sp, #16]
    b0dc:	ldp	x29, x30, [sp], #32
    b0e0:	ret
    b0e4:	mov	x2, x20
    b0e8:	mov	x1, x19
    b0ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b0f0:	add	x0, x0, #0x320
    b0f4:	add	x0, x0, #0x1a0
    b0f8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b0fc:	mov	x19, x0
    b100:	cbnz	x0, b0a4 <PyFloat_FromString@plt+0x4614>
    b104:	mov	x20, x0
    b108:	b	b0d4 <PyFloat_FromString@plt+0x4644>
    b10c:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b110:	ldr	x20, [x20, #3976]
    b114:	ldr	x0, [x20]
    b118:	add	x0, x0, #0x1
    b11c:	str	x0, [x20]
    b120:	b	b0c4 <PyFloat_FromString@plt+0x4634>
    b124:	mov	x0, x19
    b128:	bl	65d0 <_Py_Dealloc@plt>
    b12c:	b	b0d4 <PyFloat_FromString@plt+0x4644>
    b130:	stp	x29, x30, [sp, #-32]!
    b134:	mov	x29, sp
    b138:	stp	x19, x20, [sp, #16]
    b13c:	mov	x20, x0
    b140:	mov	x19, x1
    b144:	ldr	x0, [x1, #8]
    b148:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b14c:	add	x1, x1, #0x320
    b150:	add	x1, x1, #0x1a0
    b154:	cmp	x0, x1
    b158:	b.eq	b1a0 <PyFloat_FromString@plt+0x4710>  // b.none
    b15c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b160:	add	x1, x1, #0x320
    b164:	add	x1, x1, #0x1a0
    b168:	bl	69c0 <PyType_IsSubtype@plt>
    b16c:	cbnz	w0, b1a0 <PyFloat_FromString@plt+0x4710>
    b170:	ldr	x0, [x19, #8]
    b174:	ldr	x1, [x0, #168]
    b178:	tbnz	w1, #24, b1f0 <PyFloat_FromString@plt+0x4760>
    b17c:	ldr	x2, [x0, #24]
    b180:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b184:	add	x1, x1, #0x8a8
    b188:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b18c:	ldr	x0, [x0, #3936]
    b190:	ldr	x0, [x0]
    b194:	bl	6a10 <PyErr_Format@plt>
    b198:	mov	x20, #0x0                   	// #0
    b19c:	b	b1e0 <PyFloat_FromString@plt+0x4750>
    b1a0:	ldr	x0, [x19]
    b1a4:	add	x0, x0, #0x1
    b1a8:	str	x0, [x19]
    b1ac:	add	x1, x20, #0x10
    b1b0:	add	x0, x19, #0x18
    b1b4:	bl	28164 <PyInit__decimal@@Base+0xdfc4>
    b1b8:	cbz	w0, b218 <PyFloat_FromString@plt+0x4788>
    b1bc:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b1c0:	ldr	x20, [x20, #4024]
    b1c4:	ldr	x0, [x20]
    b1c8:	add	x0, x0, #0x1
    b1cc:	str	x0, [x20]
    b1d0:	ldr	x0, [x19]
    b1d4:	sub	x0, x0, #0x1
    b1d8:	str	x0, [x19]
    b1dc:	cbz	x0, b230 <PyFloat_FromString@plt+0x47a0>
    b1e0:	mov	x0, x20
    b1e4:	ldp	x19, x20, [sp, #16]
    b1e8:	ldp	x29, x30, [sp], #32
    b1ec:	ret
    b1f0:	mov	x2, x20
    b1f4:	mov	x1, x19
    b1f8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b1fc:	add	x0, x0, #0x320
    b200:	add	x0, x0, #0x1a0
    b204:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b208:	mov	x19, x0
    b20c:	cbnz	x0, b1ac <PyFloat_FromString@plt+0x471c>
    b210:	mov	x20, x0
    b214:	b	b1e0 <PyFloat_FromString@plt+0x4750>
    b218:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b21c:	ldr	x20, [x20, #3976]
    b220:	ldr	x0, [x20]
    b224:	add	x0, x0, #0x1
    b228:	str	x0, [x20]
    b22c:	b	b1d0 <PyFloat_FromString@plt+0x4740>
    b230:	mov	x0, x19
    b234:	bl	65d0 <_Py_Dealloc@plt>
    b238:	b	b1e0 <PyFloat_FromString@plt+0x4750>
    b23c:	stp	x29, x30, [sp, #-32]!
    b240:	mov	x29, sp
    b244:	stp	x19, x20, [sp, #16]
    b248:	mov	x20, x0
    b24c:	mov	x19, x1
    b250:	ldr	x0, [x1, #8]
    b254:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b258:	add	x1, x1, #0x320
    b25c:	add	x1, x1, #0x1a0
    b260:	cmp	x0, x1
    b264:	b.eq	b2ac <PyFloat_FromString@plt+0x481c>  // b.none
    b268:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b26c:	add	x1, x1, #0x320
    b270:	add	x1, x1, #0x1a0
    b274:	bl	69c0 <PyType_IsSubtype@plt>
    b278:	cbnz	w0, b2ac <PyFloat_FromString@plt+0x481c>
    b27c:	ldr	x0, [x19, #8]
    b280:	ldr	x1, [x0, #168]
    b284:	tbnz	w1, #24, b2fc <PyFloat_FromString@plt+0x486c>
    b288:	ldr	x2, [x0, #24]
    b28c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b290:	add	x1, x1, #0x8a8
    b294:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b298:	ldr	x0, [x0, #3936]
    b29c:	ldr	x0, [x0]
    b2a0:	bl	6a10 <PyErr_Format@plt>
    b2a4:	mov	x20, #0x0                   	// #0
    b2a8:	b	b2ec <PyFloat_FromString@plt+0x485c>
    b2ac:	ldr	x0, [x19]
    b2b0:	add	x0, x0, #0x1
    b2b4:	str	x0, [x19]
    b2b8:	add	x1, x20, #0x10
    b2bc:	add	x0, x19, #0x18
    b2c0:	bl	281b4 <PyInit__decimal@@Base+0xe014>
    b2c4:	cbz	w0, b324 <PyFloat_FromString@plt+0x4894>
    b2c8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b2cc:	ldr	x20, [x20, #4024]
    b2d0:	ldr	x0, [x20]
    b2d4:	add	x0, x0, #0x1
    b2d8:	str	x0, [x20]
    b2dc:	ldr	x0, [x19]
    b2e0:	sub	x0, x0, #0x1
    b2e4:	str	x0, [x19]
    b2e8:	cbz	x0, b33c <PyFloat_FromString@plt+0x48ac>
    b2ec:	mov	x0, x20
    b2f0:	ldp	x19, x20, [sp, #16]
    b2f4:	ldp	x29, x30, [sp], #32
    b2f8:	ret
    b2fc:	mov	x2, x20
    b300:	mov	x1, x19
    b304:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b308:	add	x0, x0, #0x320
    b30c:	add	x0, x0, #0x1a0
    b310:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b314:	mov	x19, x0
    b318:	cbnz	x0, b2b8 <PyFloat_FromString@plt+0x4828>
    b31c:	mov	x20, x0
    b320:	b	b2ec <PyFloat_FromString@plt+0x485c>
    b324:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    b328:	ldr	x20, [x20, #3976]
    b32c:	ldr	x0, [x20]
    b330:	add	x0, x0, #0x1
    b334:	str	x0, [x20]
    b338:	b	b2dc <PyFloat_FromString@plt+0x484c>
    b33c:	mov	x0, x19
    b340:	bl	65d0 <_Py_Dealloc@plt>
    b344:	b	b2ec <PyFloat_FromString@plt+0x485c>
    b348:	stp	x29, x30, [sp, #-48]!
    b34c:	mov	x29, sp
    b350:	stp	x19, x20, [sp, #16]
    b354:	mov	x20, x0
    b358:	mov	x19, x1
    b35c:	ldr	x0, [x1, #8]
    b360:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b364:	add	x1, x1, #0x320
    b368:	add	x1, x1, #0x1a0
    b36c:	cmp	x0, x1
    b370:	b.eq	b3b8 <PyFloat_FromString@plt+0x4928>  // b.none
    b374:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b378:	add	x1, x1, #0x320
    b37c:	add	x1, x1, #0x1a0
    b380:	bl	69c0 <PyType_IsSubtype@plt>
    b384:	cbnz	w0, b3b8 <PyFloat_FromString@plt+0x4928>
    b388:	ldr	x0, [x19, #8]
    b38c:	ldr	x1, [x0, #168]
    b390:	tbnz	w1, #24, b41c <PyFloat_FromString@plt+0x498c>
    b394:	ldr	x2, [x0, #24]
    b398:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b39c:	add	x1, x1, #0x8a8
    b3a0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b3a4:	ldr	x0, [x0, #3936]
    b3a8:	ldr	x0, [x0]
    b3ac:	bl	6a10 <PyErr_Format@plt>
    b3b0:	mov	x19, #0x0                   	// #0
    b3b4:	b	b40c <PyFloat_FromString@plt+0x497c>
    b3b8:	ldr	x0, [x19]
    b3bc:	add	x0, x0, #0x1
    b3c0:	str	x0, [x19]
    b3c4:	ldr	w2, [x20, #80]
    b3c8:	add	x1, x19, #0x18
    b3cc:	add	x0, sp, #0x28
    b3d0:	bl	23f8c <PyInit__decimal@@Base+0x9dec>
    b3d4:	mov	x20, x0
    b3d8:	ldr	x1, [x19]
    b3dc:	sub	x1, x1, #0x1
    b3e0:	str	x1, [x19]
    b3e4:	cbz	x1, b440 <PyFloat_FromString@plt+0x49b0>
    b3e8:	tbnz	x20, #63, b44c <PyFloat_FromString@plt+0x49bc>
    b3ec:	mov	x1, x20
    b3f0:	ldr	x0, [sp, #40]
    b3f4:	bl	767c <PyFloat_FromString@plt+0xbec>
    b3f8:	mov	x19, x0
    b3fc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    b400:	ldr	x1, [x0, #1704]
    b404:	ldr	x0, [sp, #40]
    b408:	blr	x1
    b40c:	mov	x0, x19
    b410:	ldp	x19, x20, [sp, #16]
    b414:	ldp	x29, x30, [sp], #48
    b418:	ret
    b41c:	mov	x2, x20
    b420:	mov	x1, x19
    b424:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b428:	add	x0, x0, #0x320
    b42c:	add	x0, x0, #0x1a0
    b430:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b434:	mov	x19, x0
    b438:	cbnz	x0, b3c4 <PyFloat_FromString@plt+0x4934>
    b43c:	b	b40c <PyFloat_FromString@plt+0x497c>
    b440:	mov	x0, x19
    b444:	bl	65d0 <_Py_Dealloc@plt>
    b448:	b	b3e8 <PyFloat_FromString@plt+0x4958>
    b44c:	bl	65e0 <PyErr_NoMemory@plt>
    b450:	mov	x19, #0x0                   	// #0
    b454:	b	b40c <PyFloat_FromString@plt+0x497c>
    b458:	stp	x29, x30, [sp, #-48]!
    b45c:	mov	x29, sp
    b460:	stp	x19, x20, [sp, #16]
    b464:	mov	x20, x0
    b468:	mov	x19, x1
    b46c:	ldr	x0, [x1, #8]
    b470:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b474:	add	x1, x1, #0x320
    b478:	add	x1, x1, #0x1a0
    b47c:	cmp	x0, x1
    b480:	b.eq	b4c8 <PyFloat_FromString@plt+0x4a38>  // b.none
    b484:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b488:	add	x1, x1, #0x320
    b48c:	add	x1, x1, #0x1a0
    b490:	bl	69c0 <PyType_IsSubtype@plt>
    b494:	cbnz	w0, b4c8 <PyFloat_FromString@plt+0x4a38>
    b498:	ldr	x0, [x19, #8]
    b49c:	ldr	x1, [x0, #168]
    b4a0:	tbnz	w1, #24, b52c <PyFloat_FromString@plt+0x4a9c>
    b4a4:	ldr	x2, [x0, #24]
    b4a8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b4ac:	add	x1, x1, #0x8a8
    b4b0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b4b4:	ldr	x0, [x0, #3936]
    b4b8:	ldr	x0, [x0]
    b4bc:	bl	6a10 <PyErr_Format@plt>
    b4c0:	mov	x19, #0x0                   	// #0
    b4c4:	b	b51c <PyFloat_FromString@plt+0x4a8c>
    b4c8:	ldr	x0, [x19]
    b4cc:	add	x0, x0, #0x1
    b4d0:	str	x0, [x19]
    b4d4:	ldr	w2, [x20, #80]
    b4d8:	add	x1, x19, #0x18
    b4dc:	add	x0, sp, #0x28
    b4e0:	bl	23fb0 <PyInit__decimal@@Base+0x9e10>
    b4e4:	mov	x20, x0
    b4e8:	ldr	x1, [x19]
    b4ec:	sub	x1, x1, #0x1
    b4f0:	str	x1, [x19]
    b4f4:	cbz	x1, b550 <PyFloat_FromString@plt+0x4ac0>
    b4f8:	tbnz	x20, #63, b55c <PyFloat_FromString@plt+0x4acc>
    b4fc:	mov	x1, x20
    b500:	ldr	x0, [sp, #40]
    b504:	bl	767c <PyFloat_FromString@plt+0xbec>
    b508:	mov	x19, x0
    b50c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    b510:	ldr	x1, [x0, #1704]
    b514:	ldr	x0, [sp, #40]
    b518:	blr	x1
    b51c:	mov	x0, x19
    b520:	ldp	x19, x20, [sp, #16]
    b524:	ldp	x29, x30, [sp], #48
    b528:	ret
    b52c:	mov	x2, x20
    b530:	mov	x1, x19
    b534:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b538:	add	x0, x0, #0x320
    b53c:	add	x0, x0, #0x1a0
    b540:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b544:	mov	x19, x0
    b548:	cbnz	x0, b4d4 <PyFloat_FromString@plt+0x4a44>
    b54c:	b	b51c <PyFloat_FromString@plt+0x4a8c>
    b550:	mov	x0, x19
    b554:	bl	65d0 <_Py_Dealloc@plt>
    b558:	b	b4f8 <PyFloat_FromString@plt+0x4a68>
    b55c:	bl	65e0 <PyErr_NoMemory@plt>
    b560:	mov	x19, #0x0                   	// #0
    b564:	b	b51c <PyFloat_FromString@plt+0x4a8c>
    b568:	stp	x29, x30, [sp, #-128]!
    b56c:	mov	x29, sp
    b570:	stp	x19, x20, [sp, #16]
    b574:	stp	x21, x22, [sp, #32]
    b578:	mov	x21, x0
    b57c:	mov	x20, x1
    b580:	str	xzr, [sp, #120]
    b584:	str	wzr, [sp, #116]
    b588:	add	x2, sp, #0x40
    b58c:	mov	x1, #0x0                   	// #0
    b590:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    b594:	ldr	x0, [x0, #1816]
    b598:	bl	6740 <PyContextVar_Get@plt>
    b59c:	tbnz	w0, #31, b734 <PyFloat_FromString@plt+0x4ca4>
    b5a0:	ldr	x19, [sp, #64]
    b5a4:	cbz	x19, b68c <PyFloat_FromString@plt+0x4bfc>
    b5a8:	ldr	x2, [x19]
    b5ac:	sub	x2, x2, #0x1
    b5b0:	str	x2, [x19]
    b5b4:	cbz	x2, b6a0 <PyFloat_FromString@plt+0x4c10>
    b5b8:	add	x2, sp, #0x78
    b5bc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b5c0:	add	x1, x1, #0x878
    b5c4:	mov	x0, x20
    b5c8:	bl	68e0 <PyArg_ParseTuple@plt>
    b5cc:	cbz	w0, b72c <PyFloat_FromString@plt+0x4c9c>
    b5d0:	ldr	x0, [sp, #120]
    b5d4:	cbz	x0, b714 <PyFloat_FromString@plt+0x4c84>
    b5d8:	mov	x1, #0x1                   	// #1
    b5dc:	str	x1, [sp, #56]
    b5e0:	mov	w2, #0xffffff90            	// #-112
    b5e4:	strb	w2, [sp, #64]
    b5e8:	str	xzr, [sp, #72]
    b5ec:	str	x1, [sp, #80]
    b5f0:	str	x1, [sp, #88]
    b5f4:	str	x1, [sp, #96]
    b5f8:	add	x1, sp, #0x38
    b5fc:	str	x1, [sp, #104]
    b600:	ldr	x1, [x0, #8]
    b604:	ldr	x1, [x1, #168]
    b608:	tbz	w1, #24, b6ac <PyFloat_FromString@plt+0x4c1c>
    b60c:	bl	66f0 <PyLong_AsSsize_t@plt>
    b610:	mov	x22, x0
    b614:	cmn	x0, #0x1
    b618:	b.eq	b6dc <PyFloat_FromString@plt+0x4c4c>  // b.none
    b61c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b620:	add	x0, x0, #0x320
    b624:	add	x0, x0, #0x1a0
    b628:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    b62c:	mov	x20, x0
    b630:	cbz	x0, b6c8 <PyFloat_FromString@plt+0x4c38>
    b634:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    b638:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    b63c:	cmp	x22, x1
    b640:	b.eq	b648 <PyFloat_FromString@plt+0x4bb8>  // b.none
    b644:	neg	x0, x22
    b648:	str	x0, [sp, #72]
    b64c:	add	x4, sp, #0x74
    b650:	add	x3, x19, #0x10
    b654:	add	x2, sp, #0x40
    b658:	add	x1, x21, #0x18
    b65c:	add	x0, x20, #0x18
    b660:	bl	317f0 <PyInit__decimal@@Base+0x17650>
    b664:	ldr	w1, [sp, #116]
    b668:	mov	x0, x19
    b66c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    b670:	cbz	w0, b6c8 <PyFloat_FromString@plt+0x4c38>
    b674:	ldr	x0, [x20]
    b678:	sub	x0, x0, #0x1
    b67c:	str	x0, [x20]
    b680:	cbz	x0, b704 <PyFloat_FromString@plt+0x4c74>
    b684:	mov	x20, #0x0                   	// #0
    b688:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b68c:	bl	7abc <PyFloat_FromString@plt+0x102c>
    b690:	mov	x19, x0
    b694:	cbnz	x0, b5a8 <PyFloat_FromString@plt+0x4b18>
    b698:	mov	x20, x0
    b69c:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b6a0:	mov	x0, x19
    b6a4:	bl	65d0 <_Py_Dealloc@plt>
    b6a8:	b	b5b8 <PyFloat_FromString@plt+0x4b28>
    b6ac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b6b0:	add	x1, x1, #0x950
    b6b4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b6b8:	ldr	x0, [x0, #3936]
    b6bc:	ldr	x0, [x0]
    b6c0:	bl	6650 <PyErr_SetString@plt>
    b6c4:	mov	x20, #0x0                   	// #0
    b6c8:	mov	x0, x20
    b6cc:	ldp	x19, x20, [sp, #16]
    b6d0:	ldp	x21, x22, [sp, #32]
    b6d4:	ldp	x29, x30, [sp], #128
    b6d8:	ret
    b6dc:	bl	67e0 <PyErr_Occurred@plt>
    b6e0:	mov	x20, #0x0                   	// #0
    b6e4:	cbnz	x0, b6c8 <PyFloat_FromString@plt+0x4c38>
    b6e8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b6ec:	add	x0, x0, #0x320
    b6f0:	add	x0, x0, #0x1a0
    b6f4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    b6f8:	mov	x20, x0
    b6fc:	cbnz	x0, b644 <PyFloat_FromString@plt+0x4bb4>
    b700:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b704:	mov	x0, x20
    b708:	bl	65d0 <_Py_Dealloc@plt>
    b70c:	mov	x20, #0x0                   	// #0
    b710:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b714:	mov	w2, #0x6                   	// #6
    b718:	mov	x1, x19
    b71c:	mov	x0, x21
    b720:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    b724:	mov	x20, x0
    b728:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b72c:	mov	x20, #0x0                   	// #0
    b730:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b734:	mov	x20, #0x0                   	// #0
    b738:	b	b6c8 <PyFloat_FromString@plt+0x4c38>
    b73c:	stp	x29, x30, [sp, #-64]!
    b740:	mov	x29, sp
    b744:	stp	x19, x20, [sp, #16]
    b748:	str	x21, [sp, #32]
    b74c:	mov	x21, x0
    b750:	mov	x19, x1
    b754:	str	wzr, [sp, #60]
    b758:	ldr	x0, [x1, #8]
    b75c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b760:	add	x1, x1, #0x320
    b764:	add	x1, x1, #0x1a0
    b768:	cmp	x0, x1
    b76c:	b.eq	b7b4 <PyFloat_FromString@plt+0x4d24>  // b.none
    b770:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b774:	add	x1, x1, #0x320
    b778:	add	x1, x1, #0x1a0
    b77c:	bl	69c0 <PyType_IsSubtype@plt>
    b780:	cbnz	w0, b7b4 <PyFloat_FromString@plt+0x4d24>
    b784:	ldr	x0, [x19, #8]
    b788:	ldr	x1, [x0, #168]
    b78c:	tbnz	w1, #24, b81c <PyFloat_FromString@plt+0x4d8c>
    b790:	ldr	x2, [x0, #24]
    b794:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b798:	add	x1, x1, #0x8a8
    b79c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b7a0:	ldr	x0, [x0, #3936]
    b7a4:	ldr	x0, [x0]
    b7a8:	bl	6a10 <PyErr_Format@plt>
    b7ac:	mov	x20, #0x0                   	// #0
    b7b0:	b	b808 <PyFloat_FromString@plt+0x4d78>
    b7b4:	ldr	x0, [x19]
    b7b8:	add	x0, x0, #0x1
    b7bc:	str	x0, [x19]
    b7c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b7c4:	add	x0, x0, #0x320
    b7c8:	add	x0, x0, #0x1a0
    b7cc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    b7d0:	mov	x20, x0
    b7d4:	cbz	x0, b844 <PyFloat_FromString@plt+0x4db4>
    b7d8:	add	x2, sp, #0x3c
    b7dc:	add	x1, x19, #0x18
    b7e0:	add	x0, x0, #0x18
    b7e4:	bl	2a7c0 <PyInit__decimal@@Base+0x10620>
    b7e8:	ldr	x0, [x19]
    b7ec:	sub	x0, x0, #0x1
    b7f0:	str	x0, [x19]
    b7f4:	cbz	x0, b860 <PyFloat_FromString@plt+0x4dd0>
    b7f8:	ldr	w1, [sp, #60]
    b7fc:	mov	x0, x21
    b800:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    b804:	cbnz	w0, b86c <PyFloat_FromString@plt+0x4ddc>
    b808:	mov	x0, x20
    b80c:	ldp	x19, x20, [sp, #16]
    b810:	ldr	x21, [sp, #32]
    b814:	ldp	x29, x30, [sp], #64
    b818:	ret
    b81c:	mov	x2, x21
    b820:	mov	x1, x19
    b824:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b828:	add	x0, x0, #0x320
    b82c:	add	x0, x0, #0x1a0
    b830:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b834:	mov	x19, x0
    b838:	cbnz	x0, b7c0 <PyFloat_FromString@plt+0x4d30>
    b83c:	mov	x20, x0
    b840:	b	b808 <PyFloat_FromString@plt+0x4d78>
    b844:	ldr	x0, [x19]
    b848:	sub	x0, x0, #0x1
    b84c:	str	x0, [x19]
    b850:	cbnz	x0, b808 <PyFloat_FromString@plt+0x4d78>
    b854:	mov	x0, x19
    b858:	bl	65d0 <_Py_Dealloc@plt>
    b85c:	b	b808 <PyFloat_FromString@plt+0x4d78>
    b860:	mov	x0, x19
    b864:	bl	65d0 <_Py_Dealloc@plt>
    b868:	b	b7f8 <PyFloat_FromString@plt+0x4d68>
    b86c:	ldr	x0, [x20]
    b870:	sub	x0, x0, #0x1
    b874:	str	x0, [x20]
    b878:	cbz	x0, b884 <PyFloat_FromString@plt+0x4df4>
    b87c:	mov	x20, #0x0                   	// #0
    b880:	b	b808 <PyFloat_FromString@plt+0x4d78>
    b884:	mov	x0, x20
    b888:	bl	65d0 <_Py_Dealloc@plt>
    b88c:	mov	x20, #0x0                   	// #0
    b890:	b	b808 <PyFloat_FromString@plt+0x4d78>
    b894:	stp	x29, x30, [sp, #-64]!
    b898:	mov	x29, sp
    b89c:	stp	x19, x20, [sp, #16]
    b8a0:	str	x21, [sp, #32]
    b8a4:	mov	x21, x0
    b8a8:	mov	x19, x1
    b8ac:	str	wzr, [sp, #60]
    b8b0:	ldr	x0, [x1, #8]
    b8b4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b8b8:	add	x1, x1, #0x320
    b8bc:	add	x1, x1, #0x1a0
    b8c0:	cmp	x0, x1
    b8c4:	b.eq	b90c <PyFloat_FromString@plt+0x4e7c>  // b.none
    b8c8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    b8cc:	add	x1, x1, #0x320
    b8d0:	add	x1, x1, #0x1a0
    b8d4:	bl	69c0 <PyType_IsSubtype@plt>
    b8d8:	cbnz	w0, b90c <PyFloat_FromString@plt+0x4e7c>
    b8dc:	ldr	x0, [x19, #8]
    b8e0:	ldr	x1, [x0, #168]
    b8e4:	tbnz	w1, #24, b974 <PyFloat_FromString@plt+0x4ee4>
    b8e8:	ldr	x2, [x0, #24]
    b8ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    b8f0:	add	x1, x1, #0x8a8
    b8f4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    b8f8:	ldr	x0, [x0, #3936]
    b8fc:	ldr	x0, [x0]
    b900:	bl	6a10 <PyErr_Format@plt>
    b904:	mov	x20, #0x0                   	// #0
    b908:	b	b960 <PyFloat_FromString@plt+0x4ed0>
    b90c:	ldr	x0, [x19]
    b910:	add	x0, x0, #0x1
    b914:	str	x0, [x19]
    b918:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b91c:	add	x0, x0, #0x320
    b920:	add	x0, x0, #0x1a0
    b924:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    b928:	mov	x20, x0
    b92c:	cbz	x0, b99c <PyFloat_FromString@plt+0x4f0c>
    b930:	add	x2, sp, #0x3c
    b934:	add	x1, x19, #0x18
    b938:	add	x0, x0, #0x18
    b93c:	bl	2a78c <PyInit__decimal@@Base+0x105ec>
    b940:	ldr	x0, [x19]
    b944:	sub	x0, x0, #0x1
    b948:	str	x0, [x19]
    b94c:	cbz	x0, b9b8 <PyFloat_FromString@plt+0x4f28>
    b950:	ldr	w1, [sp, #60]
    b954:	mov	x0, x21
    b958:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    b95c:	cbnz	w0, b9c4 <PyFloat_FromString@plt+0x4f34>
    b960:	mov	x0, x20
    b964:	ldp	x19, x20, [sp, #16]
    b968:	ldr	x21, [sp, #32]
    b96c:	ldp	x29, x30, [sp], #64
    b970:	ret
    b974:	mov	x2, x21
    b978:	mov	x1, x19
    b97c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    b980:	add	x0, x0, #0x320
    b984:	add	x0, x0, #0x1a0
    b988:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    b98c:	mov	x19, x0
    b990:	cbnz	x0, b918 <PyFloat_FromString@plt+0x4e88>
    b994:	mov	x20, x0
    b998:	b	b960 <PyFloat_FromString@plt+0x4ed0>
    b99c:	ldr	x0, [x19]
    b9a0:	sub	x0, x0, #0x1
    b9a4:	str	x0, [x19]
    b9a8:	cbnz	x0, b960 <PyFloat_FromString@plt+0x4ed0>
    b9ac:	mov	x0, x19
    b9b0:	bl	65d0 <_Py_Dealloc@plt>
    b9b4:	b	b960 <PyFloat_FromString@plt+0x4ed0>
    b9b8:	mov	x0, x19
    b9bc:	bl	65d0 <_Py_Dealloc@plt>
    b9c0:	b	b950 <PyFloat_FromString@plt+0x4ec0>
    b9c4:	ldr	x0, [x20]
    b9c8:	sub	x0, x0, #0x1
    b9cc:	str	x0, [x20]
    b9d0:	cbz	x0, b9dc <PyFloat_FromString@plt+0x4f4c>
    b9d4:	mov	x20, #0x0                   	// #0
    b9d8:	b	b960 <PyFloat_FromString@plt+0x4ed0>
    b9dc:	mov	x0, x20
    b9e0:	bl	65d0 <_Py_Dealloc@plt>
    b9e4:	mov	x20, #0x0                   	// #0
    b9e8:	b	b960 <PyFloat_FromString@plt+0x4ed0>
    b9ec:	stp	x29, x30, [sp, #-64]!
    b9f0:	mov	x29, sp
    b9f4:	stp	x19, x20, [sp, #16]
    b9f8:	str	x21, [sp, #32]
    b9fc:	mov	x21, x0
    ba00:	mov	x19, x1
    ba04:	str	wzr, [sp, #60]
    ba08:	ldr	x0, [x1, #8]
    ba0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ba10:	add	x1, x1, #0x320
    ba14:	add	x1, x1, #0x1a0
    ba18:	cmp	x0, x1
    ba1c:	b.eq	ba64 <PyFloat_FromString@plt+0x4fd4>  // b.none
    ba20:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ba24:	add	x1, x1, #0x320
    ba28:	add	x1, x1, #0x1a0
    ba2c:	bl	69c0 <PyType_IsSubtype@plt>
    ba30:	cbnz	w0, ba64 <PyFloat_FromString@plt+0x4fd4>
    ba34:	ldr	x0, [x19, #8]
    ba38:	ldr	x1, [x0, #168]
    ba3c:	tbnz	w1, #24, bad0 <PyFloat_FromString@plt+0x5040>
    ba40:	ldr	x2, [x0, #24]
    ba44:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ba48:	add	x1, x1, #0x8a8
    ba4c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ba50:	ldr	x0, [x0, #3936]
    ba54:	ldr	x0, [x0]
    ba58:	bl	6a10 <PyErr_Format@plt>
    ba5c:	mov	x20, #0x0                   	// #0
    ba60:	b	babc <PyFloat_FromString@plt+0x502c>
    ba64:	ldr	x0, [x19]
    ba68:	add	x0, x0, #0x1
    ba6c:	str	x0, [x19]
    ba70:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ba74:	add	x0, x0, #0x320
    ba78:	add	x0, x0, #0x1a0
    ba7c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    ba80:	mov	x20, x0
    ba84:	cbz	x0, baf8 <PyFloat_FromString@plt+0x5068>
    ba88:	add	x3, sp, #0x3c
    ba8c:	add	x2, x21, #0x10
    ba90:	add	x1, x19, #0x18
    ba94:	add	x0, x0, #0x18
    ba98:	bl	2d848 <PyInit__decimal@@Base+0x136a8>
    ba9c:	ldr	x0, [x19]
    baa0:	sub	x0, x0, #0x1
    baa4:	str	x0, [x19]
    baa8:	cbz	x0, bb14 <PyFloat_FromString@plt+0x5084>
    baac:	ldr	w1, [sp, #60]
    bab0:	mov	x0, x21
    bab4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    bab8:	cbnz	w0, bb20 <PyFloat_FromString@plt+0x5090>
    babc:	mov	x0, x20
    bac0:	ldp	x19, x20, [sp, #16]
    bac4:	ldr	x21, [sp, #32]
    bac8:	ldp	x29, x30, [sp], #64
    bacc:	ret
    bad0:	mov	x2, x21
    bad4:	mov	x1, x19
    bad8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    badc:	add	x0, x0, #0x320
    bae0:	add	x0, x0, #0x1a0
    bae4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    bae8:	mov	x19, x0
    baec:	cbnz	x0, ba70 <PyFloat_FromString@plt+0x4fe0>
    baf0:	mov	x20, x0
    baf4:	b	babc <PyFloat_FromString@plt+0x502c>
    baf8:	ldr	x0, [x19]
    bafc:	sub	x0, x0, #0x1
    bb00:	str	x0, [x19]
    bb04:	cbnz	x0, babc <PyFloat_FromString@plt+0x502c>
    bb08:	mov	x0, x19
    bb0c:	bl	65d0 <_Py_Dealloc@plt>
    bb10:	b	babc <PyFloat_FromString@plt+0x502c>
    bb14:	mov	x0, x19
    bb18:	bl	65d0 <_Py_Dealloc@plt>
    bb1c:	b	baac <PyFloat_FromString@plt+0x501c>
    bb20:	ldr	x0, [x20]
    bb24:	sub	x0, x0, #0x1
    bb28:	str	x0, [x20]
    bb2c:	cbz	x0, bb38 <PyFloat_FromString@plt+0x50a8>
    bb30:	mov	x20, #0x0                   	// #0
    bb34:	b	babc <PyFloat_FromString@plt+0x502c>
    bb38:	mov	x0, x20
    bb3c:	bl	65d0 <_Py_Dealloc@plt>
    bb40:	mov	x20, #0x0                   	// #0
    bb44:	b	babc <PyFloat_FromString@plt+0x502c>
    bb48:	stp	x29, x30, [sp, #-64]!
    bb4c:	mov	x29, sp
    bb50:	stp	x19, x20, [sp, #16]
    bb54:	str	x21, [sp, #32]
    bb58:	mov	x21, x0
    bb5c:	mov	x19, x1
    bb60:	str	wzr, [sp, #60]
    bb64:	ldr	x0, [x1, #8]
    bb68:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bb6c:	add	x1, x1, #0x320
    bb70:	add	x1, x1, #0x1a0
    bb74:	cmp	x0, x1
    bb78:	b.eq	bbc0 <PyFloat_FromString@plt+0x5130>  // b.none
    bb7c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bb80:	add	x1, x1, #0x320
    bb84:	add	x1, x1, #0x1a0
    bb88:	bl	69c0 <PyType_IsSubtype@plt>
    bb8c:	cbnz	w0, bbc0 <PyFloat_FromString@plt+0x5130>
    bb90:	ldr	x0, [x19, #8]
    bb94:	ldr	x1, [x0, #168]
    bb98:	tbnz	w1, #24, bc2c <PyFloat_FromString@plt+0x519c>
    bb9c:	ldr	x2, [x0, #24]
    bba0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    bba4:	add	x1, x1, #0x8a8
    bba8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    bbac:	ldr	x0, [x0, #3936]
    bbb0:	ldr	x0, [x0]
    bbb4:	bl	6a10 <PyErr_Format@plt>
    bbb8:	mov	x20, #0x0                   	// #0
    bbbc:	b	bc18 <PyFloat_FromString@plt+0x5188>
    bbc0:	ldr	x0, [x19]
    bbc4:	add	x0, x0, #0x1
    bbc8:	str	x0, [x19]
    bbcc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bbd0:	add	x0, x0, #0x320
    bbd4:	add	x0, x0, #0x1a0
    bbd8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    bbdc:	mov	x20, x0
    bbe0:	cbz	x0, bc54 <PyFloat_FromString@plt+0x51c4>
    bbe4:	add	x3, sp, #0x3c
    bbe8:	add	x2, x21, #0x10
    bbec:	add	x1, x19, #0x18
    bbf0:	add	x0, x0, #0x18
    bbf4:	bl	2dc44 <PyInit__decimal@@Base+0x13aa4>
    bbf8:	ldr	x0, [x19]
    bbfc:	sub	x0, x0, #0x1
    bc00:	str	x0, [x19]
    bc04:	cbz	x0, bc70 <PyFloat_FromString@plt+0x51e0>
    bc08:	ldr	w1, [sp, #60]
    bc0c:	mov	x0, x21
    bc10:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    bc14:	cbnz	w0, bc7c <PyFloat_FromString@plt+0x51ec>
    bc18:	mov	x0, x20
    bc1c:	ldp	x19, x20, [sp, #16]
    bc20:	ldr	x21, [sp, #32]
    bc24:	ldp	x29, x30, [sp], #64
    bc28:	ret
    bc2c:	mov	x2, x21
    bc30:	mov	x1, x19
    bc34:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bc38:	add	x0, x0, #0x320
    bc3c:	add	x0, x0, #0x1a0
    bc40:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    bc44:	mov	x19, x0
    bc48:	cbnz	x0, bbcc <PyFloat_FromString@plt+0x513c>
    bc4c:	mov	x20, x0
    bc50:	b	bc18 <PyFloat_FromString@plt+0x5188>
    bc54:	ldr	x0, [x19]
    bc58:	sub	x0, x0, #0x1
    bc5c:	str	x0, [x19]
    bc60:	cbnz	x0, bc18 <PyFloat_FromString@plt+0x5188>
    bc64:	mov	x0, x19
    bc68:	bl	65d0 <_Py_Dealloc@plt>
    bc6c:	b	bc18 <PyFloat_FromString@plt+0x5188>
    bc70:	mov	x0, x19
    bc74:	bl	65d0 <_Py_Dealloc@plt>
    bc78:	b	bc08 <PyFloat_FromString@plt+0x5178>
    bc7c:	ldr	x0, [x20]
    bc80:	sub	x0, x0, #0x1
    bc84:	str	x0, [x20]
    bc88:	cbz	x0, bc94 <PyFloat_FromString@plt+0x5204>
    bc8c:	mov	x20, #0x0                   	// #0
    bc90:	b	bc18 <PyFloat_FromString@plt+0x5188>
    bc94:	mov	x0, x20
    bc98:	bl	65d0 <_Py_Dealloc@plt>
    bc9c:	mov	x20, #0x0                   	// #0
    bca0:	b	bc18 <PyFloat_FromString@plt+0x5188>
    bca4:	stp	x29, x30, [sp, #-64]!
    bca8:	mov	x29, sp
    bcac:	stp	x19, x20, [sp, #16]
    bcb0:	str	x21, [sp, #32]
    bcb4:	mov	x21, x0
    bcb8:	mov	x19, x1
    bcbc:	str	wzr, [sp, #60]
    bcc0:	ldr	x0, [x1, #8]
    bcc4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bcc8:	add	x1, x1, #0x320
    bccc:	add	x1, x1, #0x1a0
    bcd0:	cmp	x0, x1
    bcd4:	b.eq	bd1c <PyFloat_FromString@plt+0x528c>  // b.none
    bcd8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bcdc:	add	x1, x1, #0x320
    bce0:	add	x1, x1, #0x1a0
    bce4:	bl	69c0 <PyType_IsSubtype@plt>
    bce8:	cbnz	w0, bd1c <PyFloat_FromString@plt+0x528c>
    bcec:	ldr	x0, [x19, #8]
    bcf0:	ldr	x1, [x0, #168]
    bcf4:	tbnz	w1, #24, bd88 <PyFloat_FromString@plt+0x52f8>
    bcf8:	ldr	x2, [x0, #24]
    bcfc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    bd00:	add	x1, x1, #0x8a8
    bd04:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    bd08:	ldr	x0, [x0, #3936]
    bd0c:	ldr	x0, [x0]
    bd10:	bl	6a10 <PyErr_Format@plt>
    bd14:	mov	x20, #0x0                   	// #0
    bd18:	b	bd74 <PyFloat_FromString@plt+0x52e4>
    bd1c:	ldr	x0, [x19]
    bd20:	add	x0, x0, #0x1
    bd24:	str	x0, [x19]
    bd28:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bd2c:	add	x0, x0, #0x320
    bd30:	add	x0, x0, #0x1a0
    bd34:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    bd38:	mov	x20, x0
    bd3c:	cbz	x0, bdb0 <PyFloat_FromString@plt+0x5320>
    bd40:	add	x3, sp, #0x3c
    bd44:	add	x2, x21, #0x10
    bd48:	add	x1, x19, #0x18
    bd4c:	add	x0, x0, #0x18
    bd50:	bl	31320 <PyInit__decimal@@Base+0x17180>
    bd54:	ldr	x0, [x19]
    bd58:	sub	x0, x0, #0x1
    bd5c:	str	x0, [x19]
    bd60:	cbz	x0, bdcc <PyFloat_FromString@plt+0x533c>
    bd64:	ldr	w1, [sp, #60]
    bd68:	mov	x0, x21
    bd6c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    bd70:	cbnz	w0, bdd8 <PyFloat_FromString@plt+0x5348>
    bd74:	mov	x0, x20
    bd78:	ldp	x19, x20, [sp, #16]
    bd7c:	ldr	x21, [sp, #32]
    bd80:	ldp	x29, x30, [sp], #64
    bd84:	ret
    bd88:	mov	x2, x21
    bd8c:	mov	x1, x19
    bd90:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bd94:	add	x0, x0, #0x320
    bd98:	add	x0, x0, #0x1a0
    bd9c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    bda0:	mov	x19, x0
    bda4:	cbnz	x0, bd28 <PyFloat_FromString@plt+0x5298>
    bda8:	mov	x20, x0
    bdac:	b	bd74 <PyFloat_FromString@plt+0x52e4>
    bdb0:	ldr	x0, [x19]
    bdb4:	sub	x0, x0, #0x1
    bdb8:	str	x0, [x19]
    bdbc:	cbnz	x0, bd74 <PyFloat_FromString@plt+0x52e4>
    bdc0:	mov	x0, x19
    bdc4:	bl	65d0 <_Py_Dealloc@plt>
    bdc8:	b	bd74 <PyFloat_FromString@plt+0x52e4>
    bdcc:	mov	x0, x19
    bdd0:	bl	65d0 <_Py_Dealloc@plt>
    bdd4:	b	bd64 <PyFloat_FromString@plt+0x52d4>
    bdd8:	ldr	x0, [x20]
    bddc:	sub	x0, x0, #0x1
    bde0:	str	x0, [x20]
    bde4:	cbz	x0, bdf0 <PyFloat_FromString@plt+0x5360>
    bde8:	mov	x20, #0x0                   	// #0
    bdec:	b	bd74 <PyFloat_FromString@plt+0x52e4>
    bdf0:	mov	x0, x20
    bdf4:	bl	65d0 <_Py_Dealloc@plt>
    bdf8:	mov	x20, #0x0                   	// #0
    bdfc:	b	bd74 <PyFloat_FromString@plt+0x52e4>
    be00:	stp	x29, x30, [sp, #-64]!
    be04:	mov	x29, sp
    be08:	stp	x19, x20, [sp, #16]
    be0c:	str	x21, [sp, #32]
    be10:	mov	x21, x0
    be14:	mov	x19, x1
    be18:	str	wzr, [sp, #60]
    be1c:	ldr	x0, [x1, #8]
    be20:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    be24:	add	x1, x1, #0x320
    be28:	add	x1, x1, #0x1a0
    be2c:	cmp	x0, x1
    be30:	b.eq	be78 <PyFloat_FromString@plt+0x53e8>  // b.none
    be34:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    be38:	add	x1, x1, #0x320
    be3c:	add	x1, x1, #0x1a0
    be40:	bl	69c0 <PyType_IsSubtype@plt>
    be44:	cbnz	w0, be78 <PyFloat_FromString@plt+0x53e8>
    be48:	ldr	x0, [x19, #8]
    be4c:	ldr	x1, [x0, #168]
    be50:	tbnz	w1, #24, bee4 <PyFloat_FromString@plt+0x5454>
    be54:	ldr	x2, [x0, #24]
    be58:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    be5c:	add	x1, x1, #0x8a8
    be60:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    be64:	ldr	x0, [x0, #3936]
    be68:	ldr	x0, [x0]
    be6c:	bl	6a10 <PyErr_Format@plt>
    be70:	mov	x20, #0x0                   	// #0
    be74:	b	bed0 <PyFloat_FromString@plt+0x5440>
    be78:	ldr	x0, [x19]
    be7c:	add	x0, x0, #0x1
    be80:	str	x0, [x19]
    be84:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    be88:	add	x0, x0, #0x320
    be8c:	add	x0, x0, #0x1a0
    be90:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    be94:	mov	x20, x0
    be98:	cbz	x0, bf0c <PyFloat_FromString@plt+0x547c>
    be9c:	add	x3, sp, #0x3c
    bea0:	add	x2, x21, #0x10
    bea4:	add	x1, x19, #0x18
    bea8:	add	x0, x0, #0x18
    beac:	bl	335f0 <PyInit__decimal@@Base+0x19450>
    beb0:	ldr	x0, [x19]
    beb4:	sub	x0, x0, #0x1
    beb8:	str	x0, [x19]
    bebc:	cbz	x0, bf28 <PyFloat_FromString@plt+0x5498>
    bec0:	ldr	w1, [sp, #60]
    bec4:	mov	x0, x21
    bec8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    becc:	cbnz	w0, bf34 <PyFloat_FromString@plt+0x54a4>
    bed0:	mov	x0, x20
    bed4:	ldp	x19, x20, [sp, #16]
    bed8:	ldr	x21, [sp, #32]
    bedc:	ldp	x29, x30, [sp], #64
    bee0:	ret
    bee4:	mov	x2, x21
    bee8:	mov	x1, x19
    beec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bef0:	add	x0, x0, #0x320
    bef4:	add	x0, x0, #0x1a0
    bef8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    befc:	mov	x19, x0
    bf00:	cbnz	x0, be84 <PyFloat_FromString@plt+0x53f4>
    bf04:	mov	x20, x0
    bf08:	b	bed0 <PyFloat_FromString@plt+0x5440>
    bf0c:	ldr	x0, [x19]
    bf10:	sub	x0, x0, #0x1
    bf14:	str	x0, [x19]
    bf18:	cbnz	x0, bed0 <PyFloat_FromString@plt+0x5440>
    bf1c:	mov	x0, x19
    bf20:	bl	65d0 <_Py_Dealloc@plt>
    bf24:	b	bed0 <PyFloat_FromString@plt+0x5440>
    bf28:	mov	x0, x19
    bf2c:	bl	65d0 <_Py_Dealloc@plt>
    bf30:	b	bec0 <PyFloat_FromString@plt+0x5430>
    bf34:	ldr	x0, [x20]
    bf38:	sub	x0, x0, #0x1
    bf3c:	str	x0, [x20]
    bf40:	cbz	x0, bf4c <PyFloat_FromString@plt+0x54bc>
    bf44:	mov	x20, #0x0                   	// #0
    bf48:	b	bed0 <PyFloat_FromString@plt+0x5440>
    bf4c:	mov	x0, x20
    bf50:	bl	65d0 <_Py_Dealloc@plt>
    bf54:	mov	x20, #0x0                   	// #0
    bf58:	b	bed0 <PyFloat_FromString@plt+0x5440>
    bf5c:	stp	x29, x30, [sp, #-64]!
    bf60:	mov	x29, sp
    bf64:	stp	x19, x20, [sp, #16]
    bf68:	str	x21, [sp, #32]
    bf6c:	mov	x21, x0
    bf70:	mov	x19, x1
    bf74:	str	wzr, [sp, #60]
    bf78:	ldr	x0, [x1, #8]
    bf7c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bf80:	add	x1, x1, #0x320
    bf84:	add	x1, x1, #0x1a0
    bf88:	cmp	x0, x1
    bf8c:	b.eq	bfd4 <PyFloat_FromString@plt+0x5544>  // b.none
    bf90:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    bf94:	add	x1, x1, #0x320
    bf98:	add	x1, x1, #0x1a0
    bf9c:	bl	69c0 <PyType_IsSubtype@plt>
    bfa0:	cbnz	w0, bfd4 <PyFloat_FromString@plt+0x5544>
    bfa4:	ldr	x0, [x19, #8]
    bfa8:	ldr	x1, [x0, #168]
    bfac:	tbnz	w1, #24, c040 <PyFloat_FromString@plt+0x55b0>
    bfb0:	ldr	x2, [x0, #24]
    bfb4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    bfb8:	add	x1, x1, #0x8a8
    bfbc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    bfc0:	ldr	x0, [x0, #3936]
    bfc4:	ldr	x0, [x0]
    bfc8:	bl	6a10 <PyErr_Format@plt>
    bfcc:	mov	x20, #0x0                   	// #0
    bfd0:	b	c02c <PyFloat_FromString@plt+0x559c>
    bfd4:	ldr	x0, [x19]
    bfd8:	add	x0, x0, #0x1
    bfdc:	str	x0, [x19]
    bfe0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    bfe4:	add	x0, x0, #0x320
    bfe8:	add	x0, x0, #0x1a0
    bfec:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    bff0:	mov	x20, x0
    bff4:	cbz	x0, c068 <PyFloat_FromString@plt+0x55d8>
    bff8:	add	x3, sp, #0x3c
    bffc:	add	x2, x21, #0x10
    c000:	add	x1, x19, #0x18
    c004:	add	x0, x0, #0x18
    c008:	bl	34744 <PyInit__decimal@@Base+0x1a5a4>
    c00c:	ldr	x0, [x19]
    c010:	sub	x0, x0, #0x1
    c014:	str	x0, [x19]
    c018:	cbz	x0, c084 <PyFloat_FromString@plt+0x55f4>
    c01c:	ldr	w1, [sp, #60]
    c020:	mov	x0, x21
    c024:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c028:	cbnz	w0, c090 <PyFloat_FromString@plt+0x5600>
    c02c:	mov	x0, x20
    c030:	ldp	x19, x20, [sp, #16]
    c034:	ldr	x21, [sp, #32]
    c038:	ldp	x29, x30, [sp], #64
    c03c:	ret
    c040:	mov	x2, x21
    c044:	mov	x1, x19
    c048:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c04c:	add	x0, x0, #0x320
    c050:	add	x0, x0, #0x1a0
    c054:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c058:	mov	x19, x0
    c05c:	cbnz	x0, bfe0 <PyFloat_FromString@plt+0x5550>
    c060:	mov	x20, x0
    c064:	b	c02c <PyFloat_FromString@plt+0x559c>
    c068:	ldr	x0, [x19]
    c06c:	sub	x0, x0, #0x1
    c070:	str	x0, [x19]
    c074:	cbnz	x0, c02c <PyFloat_FromString@plt+0x559c>
    c078:	mov	x0, x19
    c07c:	bl	65d0 <_Py_Dealloc@plt>
    c080:	b	c02c <PyFloat_FromString@plt+0x559c>
    c084:	mov	x0, x19
    c088:	bl	65d0 <_Py_Dealloc@plt>
    c08c:	b	c01c <PyFloat_FromString@plt+0x558c>
    c090:	ldr	x0, [x20]
    c094:	sub	x0, x0, #0x1
    c098:	str	x0, [x20]
    c09c:	cbz	x0, c0a8 <PyFloat_FromString@plt+0x5618>
    c0a0:	mov	x20, #0x0                   	// #0
    c0a4:	b	c02c <PyFloat_FromString@plt+0x559c>
    c0a8:	mov	x0, x20
    c0ac:	bl	65d0 <_Py_Dealloc@plt>
    c0b0:	mov	x20, #0x0                   	// #0
    c0b4:	b	c02c <PyFloat_FromString@plt+0x559c>
    c0b8:	stp	x29, x30, [sp, #-64]!
    c0bc:	mov	x29, sp
    c0c0:	stp	x19, x20, [sp, #16]
    c0c4:	str	x21, [sp, #32]
    c0c8:	mov	x21, x0
    c0cc:	mov	x19, x1
    c0d0:	str	wzr, [sp, #60]
    c0d4:	ldr	x0, [x1, #8]
    c0d8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c0dc:	add	x1, x1, #0x320
    c0e0:	add	x1, x1, #0x1a0
    c0e4:	cmp	x0, x1
    c0e8:	b.eq	c130 <PyFloat_FromString@plt+0x56a0>  // b.none
    c0ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c0f0:	add	x1, x1, #0x320
    c0f4:	add	x1, x1, #0x1a0
    c0f8:	bl	69c0 <PyType_IsSubtype@plt>
    c0fc:	cbnz	w0, c130 <PyFloat_FromString@plt+0x56a0>
    c100:	ldr	x0, [x19, #8]
    c104:	ldr	x1, [x0, #168]
    c108:	tbnz	w1, #24, c19c <PyFloat_FromString@plt+0x570c>
    c10c:	ldr	x2, [x0, #24]
    c110:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c114:	add	x1, x1, #0x8a8
    c118:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c11c:	ldr	x0, [x0, #3936]
    c120:	ldr	x0, [x0]
    c124:	bl	6a10 <PyErr_Format@plt>
    c128:	mov	x20, #0x0                   	// #0
    c12c:	b	c188 <PyFloat_FromString@plt+0x56f8>
    c130:	ldr	x0, [x19]
    c134:	add	x0, x0, #0x1
    c138:	str	x0, [x19]
    c13c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c140:	add	x0, x0, #0x320
    c144:	add	x0, x0, #0x1a0
    c148:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c14c:	mov	x20, x0
    c150:	cbz	x0, c1c4 <PyFloat_FromString@plt+0x5734>
    c154:	add	x3, sp, #0x3c
    c158:	add	x2, x21, #0x10
    c15c:	add	x1, x19, #0x18
    c160:	add	x0, x0, #0x18
    c164:	bl	35014 <PyInit__decimal@@Base+0x1ae74>
    c168:	ldr	x0, [x19]
    c16c:	sub	x0, x0, #0x1
    c170:	str	x0, [x19]
    c174:	cbz	x0, c1e0 <PyFloat_FromString@plt+0x5750>
    c178:	ldr	w1, [sp, #60]
    c17c:	mov	x0, x21
    c180:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c184:	cbnz	w0, c1ec <PyFloat_FromString@plt+0x575c>
    c188:	mov	x0, x20
    c18c:	ldp	x19, x20, [sp, #16]
    c190:	ldr	x21, [sp, #32]
    c194:	ldp	x29, x30, [sp], #64
    c198:	ret
    c19c:	mov	x2, x21
    c1a0:	mov	x1, x19
    c1a4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c1a8:	add	x0, x0, #0x320
    c1ac:	add	x0, x0, #0x1a0
    c1b0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c1b4:	mov	x19, x0
    c1b8:	cbnz	x0, c13c <PyFloat_FromString@plt+0x56ac>
    c1bc:	mov	x20, x0
    c1c0:	b	c188 <PyFloat_FromString@plt+0x56f8>
    c1c4:	ldr	x0, [x19]
    c1c8:	sub	x0, x0, #0x1
    c1cc:	str	x0, [x19]
    c1d0:	cbnz	x0, c188 <PyFloat_FromString@plt+0x56f8>
    c1d4:	mov	x0, x19
    c1d8:	bl	65d0 <_Py_Dealloc@plt>
    c1dc:	b	c188 <PyFloat_FromString@plt+0x56f8>
    c1e0:	mov	x0, x19
    c1e4:	bl	65d0 <_Py_Dealloc@plt>
    c1e8:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c1ec:	ldr	x0, [x20]
    c1f0:	sub	x0, x0, #0x1
    c1f4:	str	x0, [x20]
    c1f8:	cbz	x0, c204 <PyFloat_FromString@plt+0x5774>
    c1fc:	mov	x20, #0x0                   	// #0
    c200:	b	c188 <PyFloat_FromString@plt+0x56f8>
    c204:	mov	x0, x20
    c208:	bl	65d0 <_Py_Dealloc@plt>
    c20c:	mov	x20, #0x0                   	// #0
    c210:	b	c188 <PyFloat_FromString@plt+0x56f8>
    c214:	stp	x29, x30, [sp, #-64]!
    c218:	mov	x29, sp
    c21c:	stp	x19, x20, [sp, #16]
    c220:	str	x21, [sp, #32]
    c224:	mov	x21, x0
    c228:	mov	x19, x1
    c22c:	str	wzr, [sp, #60]
    c230:	ldr	x0, [x1, #8]
    c234:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c238:	add	x1, x1, #0x320
    c23c:	add	x1, x1, #0x1a0
    c240:	cmp	x0, x1
    c244:	b.eq	c28c <PyFloat_FromString@plt+0x57fc>  // b.none
    c248:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c24c:	add	x1, x1, #0x320
    c250:	add	x1, x1, #0x1a0
    c254:	bl	69c0 <PyType_IsSubtype@plt>
    c258:	cbnz	w0, c28c <PyFloat_FromString@plt+0x57fc>
    c25c:	ldr	x0, [x19, #8]
    c260:	ldr	x1, [x0, #168]
    c264:	tbnz	w1, #24, c2f8 <PyFloat_FromString@plt+0x5868>
    c268:	ldr	x2, [x0, #24]
    c26c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c270:	add	x1, x1, #0x8a8
    c274:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c278:	ldr	x0, [x0, #3936]
    c27c:	ldr	x0, [x0]
    c280:	bl	6a10 <PyErr_Format@plt>
    c284:	mov	x20, #0x0                   	// #0
    c288:	b	c2e4 <PyFloat_FromString@plt+0x5854>
    c28c:	ldr	x0, [x19]
    c290:	add	x0, x0, #0x1
    c294:	str	x0, [x19]
    c298:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c29c:	add	x0, x0, #0x320
    c2a0:	add	x0, x0, #0x1a0
    c2a4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c2a8:	mov	x20, x0
    c2ac:	cbz	x0, c320 <PyFloat_FromString@plt+0x5890>
    c2b0:	add	x3, sp, #0x3c
    c2b4:	add	x2, x21, #0x10
    c2b8:	add	x1, x19, #0x18
    c2bc:	add	x0, x0, #0x18
    c2c0:	bl	311d0 <PyInit__decimal@@Base+0x17030>
    c2c4:	ldr	x0, [x19]
    c2c8:	sub	x0, x0, #0x1
    c2cc:	str	x0, [x19]
    c2d0:	cbz	x0, c33c <PyFloat_FromString@plt+0x58ac>
    c2d4:	ldr	w1, [sp, #60]
    c2d8:	mov	x0, x21
    c2dc:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c2e0:	cbnz	w0, c348 <PyFloat_FromString@plt+0x58b8>
    c2e4:	mov	x0, x20
    c2e8:	ldp	x19, x20, [sp, #16]
    c2ec:	ldr	x21, [sp, #32]
    c2f0:	ldp	x29, x30, [sp], #64
    c2f4:	ret
    c2f8:	mov	x2, x21
    c2fc:	mov	x1, x19
    c300:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c304:	add	x0, x0, #0x320
    c308:	add	x0, x0, #0x1a0
    c30c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c310:	mov	x19, x0
    c314:	cbnz	x0, c298 <PyFloat_FromString@plt+0x5808>
    c318:	mov	x20, x0
    c31c:	b	c2e4 <PyFloat_FromString@plt+0x5854>
    c320:	ldr	x0, [x19]
    c324:	sub	x0, x0, #0x1
    c328:	str	x0, [x19]
    c32c:	cbnz	x0, c2e4 <PyFloat_FromString@plt+0x5854>
    c330:	mov	x0, x19
    c334:	bl	65d0 <_Py_Dealloc@plt>
    c338:	b	c2e4 <PyFloat_FromString@plt+0x5854>
    c33c:	mov	x0, x19
    c340:	bl	65d0 <_Py_Dealloc@plt>
    c344:	b	c2d4 <PyFloat_FromString@plt+0x5844>
    c348:	ldr	x0, [x20]
    c34c:	sub	x0, x0, #0x1
    c350:	str	x0, [x20]
    c354:	cbz	x0, c360 <PyFloat_FromString@plt+0x58d0>
    c358:	mov	x20, #0x0                   	// #0
    c35c:	b	c2e4 <PyFloat_FromString@plt+0x5854>
    c360:	mov	x0, x20
    c364:	bl	65d0 <_Py_Dealloc@plt>
    c368:	mov	x20, #0x0                   	// #0
    c36c:	b	c2e4 <PyFloat_FromString@plt+0x5854>
    c370:	stp	x29, x30, [sp, #-64]!
    c374:	mov	x29, sp
    c378:	stp	x19, x20, [sp, #16]
    c37c:	str	x21, [sp, #32]
    c380:	mov	x21, x0
    c384:	mov	x19, x1
    c388:	str	wzr, [sp, #60]
    c38c:	ldr	x0, [x1, #8]
    c390:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c394:	add	x1, x1, #0x320
    c398:	add	x1, x1, #0x1a0
    c39c:	cmp	x0, x1
    c3a0:	b.eq	c3e8 <PyFloat_FromString@plt+0x5958>  // b.none
    c3a4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c3a8:	add	x1, x1, #0x320
    c3ac:	add	x1, x1, #0x1a0
    c3b0:	bl	69c0 <PyType_IsSubtype@plt>
    c3b4:	cbnz	w0, c3e8 <PyFloat_FromString@plt+0x5958>
    c3b8:	ldr	x0, [x19, #8]
    c3bc:	ldr	x1, [x0, #168]
    c3c0:	tbnz	w1, #24, c454 <PyFloat_FromString@plt+0x59c4>
    c3c4:	ldr	x2, [x0, #24]
    c3c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c3cc:	add	x1, x1, #0x8a8
    c3d0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c3d4:	ldr	x0, [x0, #3936]
    c3d8:	ldr	x0, [x0]
    c3dc:	bl	6a10 <PyErr_Format@plt>
    c3e0:	mov	x20, #0x0                   	// #0
    c3e4:	b	c440 <PyFloat_FromString@plt+0x59b0>
    c3e8:	ldr	x0, [x19]
    c3ec:	add	x0, x0, #0x1
    c3f0:	str	x0, [x19]
    c3f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c3f8:	add	x0, x0, #0x320
    c3fc:	add	x0, x0, #0x1a0
    c400:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c404:	mov	x20, x0
    c408:	cbz	x0, c47c <PyFloat_FromString@plt+0x59ec>
    c40c:	add	x3, sp, #0x3c
    c410:	add	x2, x21, #0x10
    c414:	add	x1, x19, #0x18
    c418:	add	x0, x0, #0x18
    c41c:	bl	313a0 <PyInit__decimal@@Base+0x17200>
    c420:	ldr	x0, [x19]
    c424:	sub	x0, x0, #0x1
    c428:	str	x0, [x19]
    c42c:	cbz	x0, c498 <PyFloat_FromString@plt+0x5a08>
    c430:	ldr	w1, [sp, #60]
    c434:	mov	x0, x21
    c438:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c43c:	cbnz	w0, c4a4 <PyFloat_FromString@plt+0x5a14>
    c440:	mov	x0, x20
    c444:	ldp	x19, x20, [sp, #16]
    c448:	ldr	x21, [sp, #32]
    c44c:	ldp	x29, x30, [sp], #64
    c450:	ret
    c454:	mov	x2, x21
    c458:	mov	x1, x19
    c45c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c460:	add	x0, x0, #0x320
    c464:	add	x0, x0, #0x1a0
    c468:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c46c:	mov	x19, x0
    c470:	cbnz	x0, c3f4 <PyFloat_FromString@plt+0x5964>
    c474:	mov	x20, x0
    c478:	b	c440 <PyFloat_FromString@plt+0x59b0>
    c47c:	ldr	x0, [x19]
    c480:	sub	x0, x0, #0x1
    c484:	str	x0, [x19]
    c488:	cbnz	x0, c440 <PyFloat_FromString@plt+0x59b0>
    c48c:	mov	x0, x19
    c490:	bl	65d0 <_Py_Dealloc@plt>
    c494:	b	c440 <PyFloat_FromString@plt+0x59b0>
    c498:	mov	x0, x19
    c49c:	bl	65d0 <_Py_Dealloc@plt>
    c4a0:	b	c430 <PyFloat_FromString@plt+0x59a0>
    c4a4:	ldr	x0, [x20]
    c4a8:	sub	x0, x0, #0x1
    c4ac:	str	x0, [x20]
    c4b0:	cbz	x0, c4bc <PyFloat_FromString@plt+0x5a2c>
    c4b4:	mov	x20, #0x0                   	// #0
    c4b8:	b	c440 <PyFloat_FromString@plt+0x59b0>
    c4bc:	mov	x0, x20
    c4c0:	bl	65d0 <_Py_Dealloc@plt>
    c4c4:	mov	x20, #0x0                   	// #0
    c4c8:	b	c440 <PyFloat_FromString@plt+0x59b0>
    c4cc:	stp	x29, x30, [sp, #-64]!
    c4d0:	mov	x29, sp
    c4d4:	stp	x19, x20, [sp, #16]
    c4d8:	str	x21, [sp, #32]
    c4dc:	mov	x21, x0
    c4e0:	mov	x19, x1
    c4e4:	str	wzr, [sp, #60]
    c4e8:	ldr	x0, [x1, #8]
    c4ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c4f0:	add	x1, x1, #0x320
    c4f4:	add	x1, x1, #0x1a0
    c4f8:	cmp	x0, x1
    c4fc:	b.eq	c544 <PyFloat_FromString@plt+0x5ab4>  // b.none
    c500:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c504:	add	x1, x1, #0x320
    c508:	add	x1, x1, #0x1a0
    c50c:	bl	69c0 <PyType_IsSubtype@plt>
    c510:	cbnz	w0, c544 <PyFloat_FromString@plt+0x5ab4>
    c514:	ldr	x0, [x19, #8]
    c518:	ldr	x1, [x0, #168]
    c51c:	tbnz	w1, #24, c5b0 <PyFloat_FromString@plt+0x5b20>
    c520:	ldr	x2, [x0, #24]
    c524:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c528:	add	x1, x1, #0x8a8
    c52c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c530:	ldr	x0, [x0, #3936]
    c534:	ldr	x0, [x0]
    c538:	bl	6a10 <PyErr_Format@plt>
    c53c:	mov	x20, #0x0                   	// #0
    c540:	b	c59c <PyFloat_FromString@plt+0x5b0c>
    c544:	ldr	x0, [x19]
    c548:	add	x0, x0, #0x1
    c54c:	str	x0, [x19]
    c550:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c554:	add	x0, x0, #0x320
    c558:	add	x0, x0, #0x1a0
    c55c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c560:	mov	x20, x0
    c564:	cbz	x0, c5d8 <PyFloat_FromString@plt+0x5b48>
    c568:	add	x3, sp, #0x3c
    c56c:	add	x2, x21, #0x10
    c570:	add	x1, x19, #0x18
    c574:	add	x0, x0, #0x18
    c578:	bl	31538 <PyInit__decimal@@Base+0x17398>
    c57c:	ldr	x0, [x19]
    c580:	sub	x0, x0, #0x1
    c584:	str	x0, [x19]
    c588:	cbz	x0, c5f4 <PyFloat_FromString@plt+0x5b64>
    c58c:	ldr	w1, [sp, #60]
    c590:	mov	x0, x21
    c594:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c598:	cbnz	w0, c600 <PyFloat_FromString@plt+0x5b70>
    c59c:	mov	x0, x20
    c5a0:	ldp	x19, x20, [sp, #16]
    c5a4:	ldr	x21, [sp, #32]
    c5a8:	ldp	x29, x30, [sp], #64
    c5ac:	ret
    c5b0:	mov	x2, x21
    c5b4:	mov	x1, x19
    c5b8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c5bc:	add	x0, x0, #0x320
    c5c0:	add	x0, x0, #0x1a0
    c5c4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c5c8:	mov	x19, x0
    c5cc:	cbnz	x0, c550 <PyFloat_FromString@plt+0x5ac0>
    c5d0:	mov	x20, x0
    c5d4:	b	c59c <PyFloat_FromString@plt+0x5b0c>
    c5d8:	ldr	x0, [x19]
    c5dc:	sub	x0, x0, #0x1
    c5e0:	str	x0, [x19]
    c5e4:	cbnz	x0, c59c <PyFloat_FromString@plt+0x5b0c>
    c5e8:	mov	x0, x19
    c5ec:	bl	65d0 <_Py_Dealloc@plt>
    c5f0:	b	c59c <PyFloat_FromString@plt+0x5b0c>
    c5f4:	mov	x0, x19
    c5f8:	bl	65d0 <_Py_Dealloc@plt>
    c5fc:	b	c58c <PyFloat_FromString@plt+0x5afc>
    c600:	ldr	x0, [x20]
    c604:	sub	x0, x0, #0x1
    c608:	str	x0, [x20]
    c60c:	cbz	x0, c618 <PyFloat_FromString@plt+0x5b88>
    c610:	mov	x20, #0x0                   	// #0
    c614:	b	c59c <PyFloat_FromString@plt+0x5b0c>
    c618:	mov	x0, x20
    c61c:	bl	65d0 <_Py_Dealloc@plt>
    c620:	mov	x20, #0x0                   	// #0
    c624:	b	c59c <PyFloat_FromString@plt+0x5b0c>
    c628:	stp	x29, x30, [sp, #-64]!
    c62c:	mov	x29, sp
    c630:	stp	x19, x20, [sp, #16]
    c634:	str	x21, [sp, #32]
    c638:	mov	x21, x0
    c63c:	mov	x19, x1
    c640:	str	wzr, [sp, #60]
    c644:	ldr	x0, [x1, #8]
    c648:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c64c:	add	x1, x1, #0x320
    c650:	add	x1, x1, #0x1a0
    c654:	cmp	x0, x1
    c658:	b.eq	c6a0 <PyFloat_FromString@plt+0x5c10>  // b.none
    c65c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c660:	add	x1, x1, #0x320
    c664:	add	x1, x1, #0x1a0
    c668:	bl	69c0 <PyType_IsSubtype@plt>
    c66c:	cbnz	w0, c6a0 <PyFloat_FromString@plt+0x5c10>
    c670:	ldr	x0, [x19, #8]
    c674:	ldr	x1, [x0, #168]
    c678:	tbnz	w1, #24, c70c <PyFloat_FromString@plt+0x5c7c>
    c67c:	ldr	x2, [x0, #24]
    c680:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c684:	add	x1, x1, #0x8a8
    c688:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c68c:	ldr	x0, [x0, #3936]
    c690:	ldr	x0, [x0]
    c694:	bl	6a10 <PyErr_Format@plt>
    c698:	mov	x20, #0x0                   	// #0
    c69c:	b	c6f8 <PyFloat_FromString@plt+0x5c68>
    c6a0:	ldr	x0, [x19]
    c6a4:	add	x0, x0, #0x1
    c6a8:	str	x0, [x19]
    c6ac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c6b0:	add	x0, x0, #0x320
    c6b4:	add	x0, x0, #0x1a0
    c6b8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c6bc:	mov	x20, x0
    c6c0:	cbz	x0, c734 <PyFloat_FromString@plt+0x5ca4>
    c6c4:	add	x3, sp, #0x3c
    c6c8:	add	x2, x21, #0x10
    c6cc:	add	x1, x19, #0x18
    c6d0:	add	x0, x0, #0x18
    c6d4:	bl	31278 <PyInit__decimal@@Base+0x170d8>
    c6d8:	ldr	x0, [x19]
    c6dc:	sub	x0, x0, #0x1
    c6e0:	str	x0, [x19]
    c6e4:	cbz	x0, c750 <PyFloat_FromString@plt+0x5cc0>
    c6e8:	ldr	w1, [sp, #60]
    c6ec:	mov	x0, x21
    c6f0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c6f4:	cbnz	w0, c75c <PyFloat_FromString@plt+0x5ccc>
    c6f8:	mov	x0, x20
    c6fc:	ldp	x19, x20, [sp, #16]
    c700:	ldr	x21, [sp, #32]
    c704:	ldp	x29, x30, [sp], #64
    c708:	ret
    c70c:	mov	x2, x21
    c710:	mov	x1, x19
    c714:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c718:	add	x0, x0, #0x320
    c71c:	add	x0, x0, #0x1a0
    c720:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c724:	mov	x19, x0
    c728:	cbnz	x0, c6ac <PyFloat_FromString@plt+0x5c1c>
    c72c:	mov	x20, x0
    c730:	b	c6f8 <PyFloat_FromString@plt+0x5c68>
    c734:	ldr	x0, [x19]
    c738:	sub	x0, x0, #0x1
    c73c:	str	x0, [x19]
    c740:	cbnz	x0, c6f8 <PyFloat_FromString@plt+0x5c68>
    c744:	mov	x0, x19
    c748:	bl	65d0 <_Py_Dealloc@plt>
    c74c:	b	c6f8 <PyFloat_FromString@plt+0x5c68>
    c750:	mov	x0, x19
    c754:	bl	65d0 <_Py_Dealloc@plt>
    c758:	b	c6e8 <PyFloat_FromString@plt+0x5c58>
    c75c:	ldr	x0, [x20]
    c760:	sub	x0, x0, #0x1
    c764:	str	x0, [x20]
    c768:	cbz	x0, c774 <PyFloat_FromString@plt+0x5ce4>
    c76c:	mov	x20, #0x0                   	// #0
    c770:	b	c6f8 <PyFloat_FromString@plt+0x5c68>
    c774:	mov	x0, x20
    c778:	bl	65d0 <_Py_Dealloc@plt>
    c77c:	mov	x20, #0x0                   	// #0
    c780:	b	c6f8 <PyFloat_FromString@plt+0x5c68>
    c784:	stp	x29, x30, [sp, #-64]!
    c788:	mov	x29, sp
    c78c:	stp	x19, x20, [sp, #16]
    c790:	str	x21, [sp, #32]
    c794:	mov	x21, x0
    c798:	mov	x19, x1
    c79c:	str	wzr, [sp, #60]
    c7a0:	ldr	x0, [x1, #8]
    c7a4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c7a8:	add	x1, x1, #0x320
    c7ac:	add	x1, x1, #0x1a0
    c7b0:	cmp	x0, x1
    c7b4:	b.eq	c7fc <PyFloat_FromString@plt+0x5d6c>  // b.none
    c7b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c7bc:	add	x1, x1, #0x320
    c7c0:	add	x1, x1, #0x1a0
    c7c4:	bl	69c0 <PyType_IsSubtype@plt>
    c7c8:	cbnz	w0, c7fc <PyFloat_FromString@plt+0x5d6c>
    c7cc:	ldr	x0, [x19, #8]
    c7d0:	ldr	x1, [x0, #168]
    c7d4:	tbnz	w1, #24, c868 <PyFloat_FromString@plt+0x5dd8>
    c7d8:	ldr	x2, [x0, #24]
    c7dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c7e0:	add	x1, x1, #0x8a8
    c7e4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c7e8:	ldr	x0, [x0, #3936]
    c7ec:	ldr	x0, [x0]
    c7f0:	bl	6a10 <PyErr_Format@plt>
    c7f4:	mov	x20, #0x0                   	// #0
    c7f8:	b	c854 <PyFloat_FromString@plt+0x5dc4>
    c7fc:	ldr	x0, [x19]
    c800:	add	x0, x0, #0x1
    c804:	str	x0, [x19]
    c808:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c80c:	add	x0, x0, #0x320
    c810:	add	x0, x0, #0x1a0
    c814:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c818:	mov	x20, x0
    c81c:	cbz	x0, c890 <PyFloat_FromString@plt+0x5e00>
    c820:	add	x3, sp, #0x3c
    c824:	add	x2, x21, #0x10
    c828:	add	x1, x19, #0x18
    c82c:	add	x0, x0, #0x18
    c830:	bl	31d38 <PyInit__decimal@@Base+0x17b98>
    c834:	ldr	x0, [x19]
    c838:	sub	x0, x0, #0x1
    c83c:	str	x0, [x19]
    c840:	cbz	x0, c8ac <PyFloat_FromString@plt+0x5e1c>
    c844:	ldr	w1, [sp, #60]
    c848:	mov	x0, x21
    c84c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c850:	cbnz	w0, c8b8 <PyFloat_FromString@plt+0x5e28>
    c854:	mov	x0, x20
    c858:	ldp	x19, x20, [sp, #16]
    c85c:	ldr	x21, [sp, #32]
    c860:	ldp	x29, x30, [sp], #64
    c864:	ret
    c868:	mov	x2, x21
    c86c:	mov	x1, x19
    c870:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c874:	add	x0, x0, #0x320
    c878:	add	x0, x0, #0x1a0
    c87c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c880:	mov	x19, x0
    c884:	cbnz	x0, c808 <PyFloat_FromString@plt+0x5d78>
    c888:	mov	x20, x0
    c88c:	b	c854 <PyFloat_FromString@plt+0x5dc4>
    c890:	ldr	x0, [x19]
    c894:	sub	x0, x0, #0x1
    c898:	str	x0, [x19]
    c89c:	cbnz	x0, c854 <PyFloat_FromString@plt+0x5dc4>
    c8a0:	mov	x0, x19
    c8a4:	bl	65d0 <_Py_Dealloc@plt>
    c8a8:	b	c854 <PyFloat_FromString@plt+0x5dc4>
    c8ac:	mov	x0, x19
    c8b0:	bl	65d0 <_Py_Dealloc@plt>
    c8b4:	b	c844 <PyFloat_FromString@plt+0x5db4>
    c8b8:	ldr	x0, [x20]
    c8bc:	sub	x0, x0, #0x1
    c8c0:	str	x0, [x20]
    c8c4:	cbz	x0, c8d0 <PyFloat_FromString@plt+0x5e40>
    c8c8:	mov	x20, #0x0                   	// #0
    c8cc:	b	c854 <PyFloat_FromString@plt+0x5dc4>
    c8d0:	mov	x0, x20
    c8d4:	bl	65d0 <_Py_Dealloc@plt>
    c8d8:	mov	x20, #0x0                   	// #0
    c8dc:	b	c854 <PyFloat_FromString@plt+0x5dc4>
    c8e0:	stp	x29, x30, [sp, #-64]!
    c8e4:	mov	x29, sp
    c8e8:	stp	x19, x20, [sp, #16]
    c8ec:	str	x21, [sp, #32]
    c8f0:	mov	x21, x0
    c8f4:	mov	x19, x1
    c8f8:	str	wzr, [sp, #60]
    c8fc:	ldr	x0, [x1, #8]
    c900:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c904:	add	x1, x1, #0x320
    c908:	add	x1, x1, #0x1a0
    c90c:	cmp	x0, x1
    c910:	b.eq	c958 <PyFloat_FromString@plt+0x5ec8>  // b.none
    c914:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    c918:	add	x1, x1, #0x320
    c91c:	add	x1, x1, #0x1a0
    c920:	bl	69c0 <PyType_IsSubtype@plt>
    c924:	cbnz	w0, c958 <PyFloat_FromString@plt+0x5ec8>
    c928:	ldr	x0, [x19, #8]
    c92c:	ldr	x1, [x0, #168]
    c930:	tbnz	w1, #24, c9c4 <PyFloat_FromString@plt+0x5f34>
    c934:	ldr	x2, [x0, #24]
    c938:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    c93c:	add	x1, x1, #0x8a8
    c940:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    c944:	ldr	x0, [x0, #3936]
    c948:	ldr	x0, [x0]
    c94c:	bl	6a10 <PyErr_Format@plt>
    c950:	mov	x20, #0x0                   	// #0
    c954:	b	c9b0 <PyFloat_FromString@plt+0x5f20>
    c958:	ldr	x0, [x19]
    c95c:	add	x0, x0, #0x1
    c960:	str	x0, [x19]
    c964:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c968:	add	x0, x0, #0x320
    c96c:	add	x0, x0, #0x1a0
    c970:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    c974:	mov	x20, x0
    c978:	cbz	x0, c9ec <PyFloat_FromString@plt+0x5f5c>
    c97c:	add	x3, sp, #0x3c
    c980:	add	x2, x21, #0x10
    c984:	add	x1, x19, #0x18
    c988:	add	x0, x0, #0x18
    c98c:	bl	31f08 <PyInit__decimal@@Base+0x17d68>
    c990:	ldr	x0, [x19]
    c994:	sub	x0, x0, #0x1
    c998:	str	x0, [x19]
    c99c:	cbz	x0, ca08 <PyFloat_FromString@plt+0x5f78>
    c9a0:	ldr	w1, [sp, #60]
    c9a4:	mov	x0, x21
    c9a8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    c9ac:	cbnz	w0, ca14 <PyFloat_FromString@plt+0x5f84>
    c9b0:	mov	x0, x20
    c9b4:	ldp	x19, x20, [sp, #16]
    c9b8:	ldr	x21, [sp, #32]
    c9bc:	ldp	x29, x30, [sp], #64
    c9c0:	ret
    c9c4:	mov	x2, x21
    c9c8:	mov	x1, x19
    c9cc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    c9d0:	add	x0, x0, #0x320
    c9d4:	add	x0, x0, #0x1a0
    c9d8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    c9dc:	mov	x19, x0
    c9e0:	cbnz	x0, c964 <PyFloat_FromString@plt+0x5ed4>
    c9e4:	mov	x20, x0
    c9e8:	b	c9b0 <PyFloat_FromString@plt+0x5f20>
    c9ec:	ldr	x0, [x19]
    c9f0:	sub	x0, x0, #0x1
    c9f4:	str	x0, [x19]
    c9f8:	cbnz	x0, c9b0 <PyFloat_FromString@plt+0x5f20>
    c9fc:	mov	x0, x19
    ca00:	bl	65d0 <_Py_Dealloc@plt>
    ca04:	b	c9b0 <PyFloat_FromString@plt+0x5f20>
    ca08:	mov	x0, x19
    ca0c:	bl	65d0 <_Py_Dealloc@plt>
    ca10:	b	c9a0 <PyFloat_FromString@plt+0x5f10>
    ca14:	ldr	x0, [x20]
    ca18:	sub	x0, x0, #0x1
    ca1c:	str	x0, [x20]
    ca20:	cbz	x0, ca2c <PyFloat_FromString@plt+0x5f9c>
    ca24:	mov	x20, #0x0                   	// #0
    ca28:	b	c9b0 <PyFloat_FromString@plt+0x5f20>
    ca2c:	mov	x0, x20
    ca30:	bl	65d0 <_Py_Dealloc@plt>
    ca34:	mov	x20, #0x0                   	// #0
    ca38:	b	c9b0 <PyFloat_FromString@plt+0x5f20>
    ca3c:	stp	x29, x30, [sp, #-64]!
    ca40:	mov	x29, sp
    ca44:	stp	x19, x20, [sp, #16]
    ca48:	str	x21, [sp, #32]
    ca4c:	mov	x21, x0
    ca50:	mov	x19, x1
    ca54:	str	wzr, [sp, #60]
    ca58:	ldr	x0, [x1, #8]
    ca5c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ca60:	add	x1, x1, #0x320
    ca64:	add	x1, x1, #0x1a0
    ca68:	cmp	x0, x1
    ca6c:	b.eq	cab4 <PyFloat_FromString@plt+0x6024>  // b.none
    ca70:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ca74:	add	x1, x1, #0x320
    ca78:	add	x1, x1, #0x1a0
    ca7c:	bl	69c0 <PyType_IsSubtype@plt>
    ca80:	cbnz	w0, cab4 <PyFloat_FromString@plt+0x6024>
    ca84:	ldr	x0, [x19, #8]
    ca88:	ldr	x1, [x0, #168]
    ca8c:	tbnz	w1, #24, cb20 <PyFloat_FromString@plt+0x6090>
    ca90:	ldr	x2, [x0, #24]
    ca94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ca98:	add	x1, x1, #0x8a8
    ca9c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    caa0:	ldr	x0, [x0, #3936]
    caa4:	ldr	x0, [x0]
    caa8:	bl	6a10 <PyErr_Format@plt>
    caac:	mov	x20, #0x0                   	// #0
    cab0:	b	cb0c <PyFloat_FromString@plt+0x607c>
    cab4:	ldr	x0, [x19]
    cab8:	add	x0, x0, #0x1
    cabc:	str	x0, [x19]
    cac0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cac4:	add	x0, x0, #0x320
    cac8:	add	x0, x0, #0x1a0
    cacc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    cad0:	mov	x20, x0
    cad4:	cbz	x0, cb48 <PyFloat_FromString@plt+0x60b8>
    cad8:	add	x3, sp, #0x3c
    cadc:	add	x2, x21, #0x10
    cae0:	add	x1, x19, #0x18
    cae4:	add	x0, x0, #0x18
    cae8:	bl	31ee0 <PyInit__decimal@@Base+0x17d40>
    caec:	ldr	x0, [x19]
    caf0:	sub	x0, x0, #0x1
    caf4:	str	x0, [x19]
    caf8:	cbz	x0, cb64 <PyFloat_FromString@plt+0x60d4>
    cafc:	ldr	w1, [sp, #60]
    cb00:	mov	x0, x21
    cb04:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    cb08:	cbnz	w0, cb70 <PyFloat_FromString@plt+0x60e0>
    cb0c:	mov	x0, x20
    cb10:	ldp	x19, x20, [sp, #16]
    cb14:	ldr	x21, [sp, #32]
    cb18:	ldp	x29, x30, [sp], #64
    cb1c:	ret
    cb20:	mov	x2, x21
    cb24:	mov	x1, x19
    cb28:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cb2c:	add	x0, x0, #0x320
    cb30:	add	x0, x0, #0x1a0
    cb34:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    cb38:	mov	x19, x0
    cb3c:	cbnz	x0, cac0 <PyFloat_FromString@plt+0x6030>
    cb40:	mov	x20, x0
    cb44:	b	cb0c <PyFloat_FromString@plt+0x607c>
    cb48:	ldr	x0, [x19]
    cb4c:	sub	x0, x0, #0x1
    cb50:	str	x0, [x19]
    cb54:	cbnz	x0, cb0c <PyFloat_FromString@plt+0x607c>
    cb58:	mov	x0, x19
    cb5c:	bl	65d0 <_Py_Dealloc@plt>
    cb60:	b	cb0c <PyFloat_FromString@plt+0x607c>
    cb64:	mov	x0, x19
    cb68:	bl	65d0 <_Py_Dealloc@plt>
    cb6c:	b	cafc <PyFloat_FromString@plt+0x606c>
    cb70:	ldr	x0, [x20]
    cb74:	sub	x0, x0, #0x1
    cb78:	str	x0, [x20]
    cb7c:	cbz	x0, cb88 <PyFloat_FromString@plt+0x60f8>
    cb80:	mov	x20, #0x0                   	// #0
    cb84:	b	cb0c <PyFloat_FromString@plt+0x607c>
    cb88:	mov	x0, x20
    cb8c:	bl	65d0 <_Py_Dealloc@plt>
    cb90:	mov	x20, #0x0                   	// #0
    cb94:	b	cb0c <PyFloat_FromString@plt+0x607c>
    cb98:	stp	x29, x30, [sp, #-64]!
    cb9c:	mov	x29, sp
    cba0:	stp	x19, x20, [sp, #16]
    cba4:	str	x21, [sp, #32]
    cba8:	mov	x21, x0
    cbac:	mov	x19, x1
    cbb0:	str	wzr, [sp, #60]
    cbb4:	ldr	x0, [x1, #8]
    cbb8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    cbbc:	add	x1, x1, #0x320
    cbc0:	add	x1, x1, #0x1a0
    cbc4:	cmp	x0, x1
    cbc8:	b.eq	cc10 <PyFloat_FromString@plt+0x6180>  // b.none
    cbcc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    cbd0:	add	x1, x1, #0x320
    cbd4:	add	x1, x1, #0x1a0
    cbd8:	bl	69c0 <PyType_IsSubtype@plt>
    cbdc:	cbnz	w0, cc10 <PyFloat_FromString@plt+0x6180>
    cbe0:	ldr	x0, [x19, #8]
    cbe4:	ldr	x1, [x0, #168]
    cbe8:	tbnz	w1, #24, cc7c <PyFloat_FromString@plt+0x61ec>
    cbec:	ldr	x2, [x0, #24]
    cbf0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    cbf4:	add	x1, x1, #0x8a8
    cbf8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    cbfc:	ldr	x0, [x0, #3936]
    cc00:	ldr	x0, [x0]
    cc04:	bl	6a10 <PyErr_Format@plt>
    cc08:	mov	x20, #0x0                   	// #0
    cc0c:	b	cc68 <PyFloat_FromString@plt+0x61d8>
    cc10:	ldr	x0, [x19]
    cc14:	add	x0, x0, #0x1
    cc18:	str	x0, [x19]
    cc1c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cc20:	add	x0, x0, #0x320
    cc24:	add	x0, x0, #0x1a0
    cc28:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    cc2c:	mov	x20, x0
    cc30:	cbz	x0, cca4 <PyFloat_FromString@plt+0x6214>
    cc34:	add	x3, sp, #0x3c
    cc38:	add	x2, x21, #0x10
    cc3c:	add	x1, x19, #0x18
    cc40:	add	x0, x0, #0x18
    cc44:	bl	382d8 <PyInit__decimal@@Base+0x1e138>
    cc48:	ldr	x0, [x19]
    cc4c:	sub	x0, x0, #0x1
    cc50:	str	x0, [x19]
    cc54:	cbz	x0, ccc0 <PyFloat_FromString@plt+0x6230>
    cc58:	ldr	w1, [sp, #60]
    cc5c:	mov	x0, x21
    cc60:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    cc64:	cbnz	w0, cccc <PyFloat_FromString@plt+0x623c>
    cc68:	mov	x0, x20
    cc6c:	ldp	x19, x20, [sp, #16]
    cc70:	ldr	x21, [sp, #32]
    cc74:	ldp	x29, x30, [sp], #64
    cc78:	ret
    cc7c:	mov	x2, x21
    cc80:	mov	x1, x19
    cc84:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cc88:	add	x0, x0, #0x320
    cc8c:	add	x0, x0, #0x1a0
    cc90:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    cc94:	mov	x19, x0
    cc98:	cbnz	x0, cc1c <PyFloat_FromString@plt+0x618c>
    cc9c:	mov	x20, x0
    cca0:	b	cc68 <PyFloat_FromString@plt+0x61d8>
    cca4:	ldr	x0, [x19]
    cca8:	sub	x0, x0, #0x1
    ccac:	str	x0, [x19]
    ccb0:	cbnz	x0, cc68 <PyFloat_FromString@plt+0x61d8>
    ccb4:	mov	x0, x19
    ccb8:	bl	65d0 <_Py_Dealloc@plt>
    ccbc:	b	cc68 <PyFloat_FromString@plt+0x61d8>
    ccc0:	mov	x0, x19
    ccc4:	bl	65d0 <_Py_Dealloc@plt>
    ccc8:	b	cc58 <PyFloat_FromString@plt+0x61c8>
    cccc:	ldr	x0, [x20]
    ccd0:	sub	x0, x0, #0x1
    ccd4:	str	x0, [x20]
    ccd8:	cbz	x0, cce4 <PyFloat_FromString@plt+0x6254>
    ccdc:	mov	x20, #0x0                   	// #0
    cce0:	b	cc68 <PyFloat_FromString@plt+0x61d8>
    cce4:	mov	x0, x20
    cce8:	bl	65d0 <_Py_Dealloc@plt>
    ccec:	mov	x20, #0x0                   	// #0
    ccf0:	b	cc68 <PyFloat_FromString@plt+0x61d8>
    ccf4:	stp	x29, x30, [sp, #-176]!
    ccf8:	mov	x29, sp
    ccfc:	stp	x19, x20, [sp, #16]
    cd00:	stp	x21, x22, [sp, #32]
    cd04:	mov	x22, x0
    cd08:	mov	x20, x1
    cd0c:	mov	w21, w2
    cd10:	str	wzr, [sp, #172]
    cd14:	add	x2, sp, #0x78
    cd18:	mov	x1, #0x0                   	// #0
    cd1c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    cd20:	ldr	x0, [x0, #1816]
    cd24:	bl	6740 <PyContextVar_Get@plt>
    cd28:	tbnz	w0, #31, d378 <PyFloat_FromString@plt+0x68e8>
    cd2c:	ldr	x19, [sp, #120]
    cd30:	cbz	x19, cda8 <PyFloat_FromString@plt+0x6318>
    cd34:	ldr	x1, [x19]
    cd38:	sub	x1, x1, #0x1
    cd3c:	str	x1, [x19]
    cd40:	cbz	x1, cdb8 <PyFloat_FromString@plt+0x6328>
    cd44:	ldr	x0, [x20, #8]
    cd48:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    cd4c:	add	x1, x1, #0x320
    cd50:	add	x1, x1, #0x1a0
    cd54:	cmp	x0, x1
    cd58:	b.eq	cd70 <PyFloat_FromString@plt+0x62e0>  // b.none
    cd5c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    cd60:	add	x1, x1, #0x320
    cd64:	add	x1, x1, #0x1a0
    cd68:	bl	69c0 <PyType_IsSubtype@plt>
    cd6c:	cbz	w0, cdc4 <PyFloat_FromString@plt+0x6334>
    cd70:	ldr	x0, [x20]
    cd74:	add	x0, x0, #0x1
    cd78:	str	x0, [x20]
    cd7c:	cmp	x20, #0x0
    cd80:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    cd84:	ldr	x0, [x0, #3912]
    cd88:	ccmp	x20, x0, #0x4, ne  // ne = any
    cd8c:	b.ne	d38c <PyFloat_FromString@plt+0x68fc>  // b.any
    cd90:	mov	x19, x20
    cd94:	mov	x0, x19
    cd98:	ldp	x19, x20, [sp, #16]
    cd9c:	ldp	x21, x22, [sp, #32]
    cda0:	ldp	x29, x30, [sp], #176
    cda4:	ret
    cda8:	bl	7abc <PyFloat_FromString@plt+0x102c>
    cdac:	mov	x19, x0
    cdb0:	cbnz	x0, cd34 <PyFloat_FromString@plt+0x62a4>
    cdb4:	b	cd94 <PyFloat_FromString@plt+0x6304>
    cdb8:	mov	x0, x19
    cdbc:	bl	65d0 <_Py_Dealloc@plt>
    cdc0:	b	cd44 <PyFloat_FromString@plt+0x62b4>
    cdc4:	ldr	x0, [x20, #8]
    cdc8:	ldr	x1, [x0, #168]
    cdcc:	tbnz	w1, #24, ce38 <PyFloat_FromString@plt+0x63a8>
    cdd0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    cdd4:	ldr	x1, [x1, #3864]
    cdd8:	cmp	x0, x1
    cddc:	b.eq	cdf0 <PyFloat_FromString@plt+0x6360>  // b.none
    cde0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    cde4:	ldr	x1, [x1, #3864]
    cde8:	bl	69c0 <PyType_IsSubtype@plt>
    cdec:	cbz	w0, ce58 <PyFloat_FromString@plt+0x63c8>
    cdf0:	sub	w0, w21, #0x2
    cdf4:	cmp	w0, #0x1
    cdf8:	b.ls	ce0c <PyFloat_FromString@plt+0x637c>  // b.plast
    cdfc:	mov	w1, #0x400                 	// #1024
    ce00:	mov	x0, x19
    ce04:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    ce08:	cbnz	w0, d350 <PyFloat_FromString@plt+0x68c0>
    ce0c:	ldr	w0, [x19, #44]
    ce10:	orr	w0, w0, #0x400
    ce14:	str	w0, [x19, #44]
    ce18:	mov	x2, x19
    ce1c:	mov	x1, x20
    ce20:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ce24:	add	x0, x0, #0x320
    ce28:	add	x0, x0, #0x1a0
    ce2c:	bl	8b40 <PyFloat_FromString@plt+0x20b0>
    ce30:	mov	x20, x0
    ce34:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    ce38:	mov	x2, x19
    ce3c:	mov	x1, x20
    ce40:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ce44:	add	x0, x0, #0x320
    ce48:	add	x0, x0, #0x1a0
    ce4c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ce50:	mov	x20, x0
    ce54:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    ce58:	ldr	x0, [x20, #8]
    ce5c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    ce60:	ldr	x1, [x1, #3952]
    ce64:	cmp	x0, x1
    ce68:	b.eq	ce7c <PyFloat_FromString@plt+0x63ec>  // b.none
    ce6c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
    ce70:	ldr	x1, [x1, #3952]
    ce74:	bl	69c0 <PyType_IsSubtype@plt>
    ce78:	cbz	w0, ce88 <PyFloat_FromString@plt+0x63f8>
    ce7c:	sub	w0, w21, #0x2
    ce80:	cmp	w0, #0x1
    ce84:	b.ls	cebc <PyFloat_FromString@plt+0x642c>  // b.plast
    ce88:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    ce8c:	ldr	x1, [x0, #1872]
    ce90:	mov	x0, x20
    ce94:	bl	6660 <PyObject_IsInstance@plt>
    ce98:	tbnz	w0, #31, d358 <PyFloat_FromString@plt+0x68c8>
    ce9c:	cmp	w0, #0x0
    cea0:	b.gt	cf84 <PyFloat_FromString@plt+0x64f4>
    cea4:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    cea8:	ldr	x20, [x20, #3912]
    ceac:	ldr	x0, [x20]
    ceb0:	add	x0, x0, #0x1
    ceb4:	str	x0, [x20]
    ceb8:	b	cd90 <PyFloat_FromString@plt+0x6300>
    cebc:	stp	d8, d9, [sp, #96]
    cec0:	mov	x0, x20
    cec4:	bl	69f0 <PyComplex_AsCComplex@plt>
    cec8:	fmov	d8, d0
    cecc:	fmov	d9, d1
    ced0:	fmov	d0, #-1.000000000000000000e+00
    ced4:	fcmp	d8, d0
    ced8:	b.eq	cf00 <PyFloat_FromString@plt+0x6470>  // b.none
    cedc:	fcmp	d9, #0.0
    cee0:	b.eq	cf14 <PyFloat_FromString@plt+0x6484>  // b.none
    cee4:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    cee8:	ldr	x20, [x20, #3912]
    ceec:	ldr	x0, [x20]
    cef0:	add	x0, x0, #0x1
    cef4:	str	x0, [x20]
    cef8:	ldp	d8, d9, [sp, #96]
    cefc:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    cf00:	bl	67e0 <PyErr_Occurred@plt>
    cf04:	mov	x20, #0x0                   	// #0
    cf08:	cbz	x0, cedc <PyFloat_FromString@plt+0x644c>
    cf0c:	ldp	d8, d9, [sp, #96]
    cf10:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    cf14:	stp	x23, x24, [sp, #48]
    cf18:	fmov	d0, d8
    cf1c:	bl	66b0 <PyFloat_FromDouble@plt>
    cf20:	mov	x23, x0
    cf24:	mov	x20, x0
    cf28:	cbz	x0, d380 <PyFloat_FromString@plt+0x68f0>
    cf2c:	ldr	w0, [x19, #44]
    cf30:	orr	w0, w0, #0x400
    cf34:	str	w0, [x19, #44]
    cf38:	mov	x2, x19
    cf3c:	mov	x1, x23
    cf40:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cf44:	add	x0, x0, #0x320
    cf48:	add	x0, x0, #0x1a0
    cf4c:	bl	8b40 <PyFloat_FromString@plt+0x20b0>
    cf50:	mov	x20, x0
    cf54:	ldr	x0, [x23]
    cf58:	sub	x0, x0, #0x1
    cf5c:	str	x0, [x23]
    cf60:	cbz	x0, cf70 <PyFloat_FromString@plt+0x64e0>
    cf64:	ldp	x23, x24, [sp, #48]
    cf68:	ldp	d8, d9, [sp, #96]
    cf6c:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    cf70:	mov	x0, x23
    cf74:	bl	65d0 <_Py_Dealloc@plt>
    cf78:	ldp	x23, x24, [sp, #48]
    cf7c:	ldp	d8, d9, [sp, #96]
    cf80:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    cf84:	stp	x23, x24, [sp, #48]
    cf88:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    cf8c:	add	x1, x1, #0x970
    cf90:	mov	x0, x20
    cf94:	bl	6580 <PyObject_GetAttrString@plt>
    cf98:	mov	x23, x0
    cf9c:	cbz	x0, d360 <PyFloat_FromString@plt+0x68d0>
    cfa0:	mov	x2, x19
    cfa4:	mov	x1, x0
    cfa8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    cfac:	add	x0, x0, #0x320
    cfb0:	add	x0, x0, #0x1a0
    cfb4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    cfb8:	mov	x24, x0
    cfbc:	ldr	x0, [x23]
    cfc0:	sub	x0, x0, #0x1
    cfc4:	str	x0, [x23]
    cfc8:	cbz	x0, cfec <PyFloat_FromString@plt+0x655c>
    cfcc:	cbz	x24, d36c <PyFloat_FromString@plt+0x68dc>
    cfd0:	add	x23, x22, #0x18
    cfd4:	mov	x0, x23
    cfd8:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
    cfdc:	cbz	w0, cff8 <PyFloat_FromString@plt+0x6568>
    cfe0:	mov	x20, x24
    cfe4:	ldp	x23, x24, [sp, #48]
    cfe8:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    cfec:	mov	x0, x23
    cff0:	bl	65d0 <_Py_Dealloc@plt>
    cff4:	b	cfcc <PyFloat_FromString@plt+0x653c>
    cff8:	stp	x25, x26, [sp, #64]
    cffc:	str	wzr, [sp, #116]
    d000:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d004:	add	x1, x1, #0x980
    d008:	mov	x0, x20
    d00c:	bl	6580 <PyObject_GetAttrString@plt>
    d010:	mov	x25, x0
    d014:	cbz	x0, d1a0 <PyFloat_FromString@plt+0x6710>
    d018:	mov	x2, x19
    d01c:	mov	x1, x0
    d020:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    d024:	add	x0, x0, #0x320
    d028:	add	x0, x0, #0x1a0
    d02c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    d030:	mov	x20, x0
    d034:	ldr	x0, [x25]
    d038:	sub	x0, x0, #0x1
    d03c:	str	x0, [x25]
    d040:	cbz	x0, d180 <PyFloat_FromString@plt+0x66f0>
    d044:	cbz	x20, d1a0 <PyFloat_FromString@plt+0x6710>
    d048:	mov	x0, x23
    d04c:	bl	2a720 <PyInit__decimal@@Base+0x10580>
    d050:	mov	x25, x0
    d054:	cbz	x0, d18c <PyFloat_FromString@plt+0x66fc>
    d058:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    d05c:	add	x0, x0, #0x320
    d060:	add	x0, x0, #0x1a0
    d064:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    d068:	mov	x23, x0
    d06c:	cbz	x0, d1cc <PyFloat_FromString@plt+0x673c>
    d070:	str	x27, [sp, #80]
    d074:	add	x26, sp, #0x78
    d078:	mov	x0, x26
    d07c:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
    d080:	ldr	x27, [x25, #8]
    d084:	str	xzr, [x25, #8]
    d088:	add	x4, sp, #0x74
    d08c:	mov	x3, x26
    d090:	add	x2, x20, #0x18
    d094:	mov	x1, x25
    d098:	add	x0, x23, #0x18
    d09c:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
    d0a0:	str	x27, [x23, #32]
    d0a4:	ldr	x0, [x20]
    d0a8:	sub	x0, x0, #0x1
    d0ac:	str	x0, [x20]
    d0b0:	cbz	x0, d1f4 <PyFloat_FromString@plt+0x6764>
    d0b4:	mov	x0, x25
    d0b8:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    d0bc:	ldr	w0, [sp, #116]
    d0c0:	cbnz	w0, d200 <PyFloat_FromString@plt+0x6770>
    d0c4:	cmp	x24, #0x0
    d0c8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d0cc:	ldr	x0, [x0, #3912]
    d0d0:	ccmp	x24, x0, #0x4, ne  // ne = any
    d0d4:	b.eq	d33c <PyFloat_FromString@plt+0x68ac>  // b.none
    d0d8:	cmp	x22, x23
    d0dc:	b.eq	d258 <PyFloat_FromString@plt+0x67c8>  // b.none
    d0e0:	ldr	x27, [sp, #80]
    d0e4:	add	x20, x23, #0x18
    d0e8:	mov	x0, x20
    d0ec:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    d0f0:	mov	w25, w0
    d0f4:	add	x26, x24, #0x18
    d0f8:	mov	x0, x26
    d0fc:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    d100:	mov	w22, w0
    d104:	add	x2, sp, #0xac
    d108:	mov	x1, x26
    d10c:	mov	x0, x20
    d110:	bl	2a830 <PyInit__decimal@@Base+0x10690>
    d114:	mov	w20, w0
    d118:	ldr	x1, [x23]
    d11c:	sub	x1, x1, #0x1
    d120:	str	x1, [x23]
    d124:	cbz	x1, d264 <PyFloat_FromString@plt+0x67d4>
    d128:	ldr	x1, [x24]
    d12c:	sub	x1, x1, #0x1
    d130:	str	x1, [x24]
    d134:	cbz	x1, d270 <PyFloat_FromString@plt+0x67e0>
    d138:	mov	w0, #0x7fffffff            	// #2147483647
    d13c:	cmp	w20, w0
    d140:	b.eq	d27c <PyFloat_FromString@plt+0x67ec>  // b.none
    d144:	cmp	w21, #0x3
    d148:	b.eq	d318 <PyFloat_FromString@plt+0x6888>  // b.none
    d14c:	b.gt	d2fc <PyFloat_FromString@plt+0x686c>
    d150:	cmp	w21, #0x1
    d154:	b.eq	d324 <PyFloat_FromString@plt+0x6894>  // b.none
    d158:	cmp	w21, #0x2
    d15c:	b.ne	d2ec <PyFloat_FromString@plt+0x685c>  // b.any
    d160:	cmp	w20, #0x0
    d164:	cset	w20, eq  // eq = none
    d168:	sxtw	x0, w20
    d16c:	bl	6750 <PyBool_FromLong@plt>
    d170:	mov	x19, x0
    d174:	ldp	x23, x24, [sp, #48]
    d178:	ldp	x25, x26, [sp, #64]
    d17c:	b	cd94 <PyFloat_FromString@plt+0x6304>
    d180:	mov	x0, x25
    d184:	bl	65d0 <_Py_Dealloc@plt>
    d188:	b	d044 <PyFloat_FromString@plt+0x65b4>
    d18c:	ldr	x0, [x20]
    d190:	sub	x0, x0, #0x1
    d194:	str	x0, [x20]
    d198:	cbz	x0, d1c0 <PyFloat_FromString@plt+0x6730>
    d19c:	bl	65e0 <PyErr_NoMemory@plt>
    d1a0:	ldr	x0, [x24]
    d1a4:	sub	x0, x0, #0x1
    d1a8:	str	x0, [x24]
    d1ac:	cbz	x0, d240 <PyFloat_FromString@plt+0x67b0>
    d1b0:	mov	x20, #0x0                   	// #0
    d1b4:	ldp	x23, x24, [sp, #48]
    d1b8:	ldp	x25, x26, [sp, #64]
    d1bc:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d1c0:	mov	x0, x20
    d1c4:	bl	65d0 <_Py_Dealloc@plt>
    d1c8:	b	d19c <PyFloat_FromString@plt+0x670c>
    d1cc:	ldr	x0, [x20]
    d1d0:	sub	x0, x0, #0x1
    d1d4:	str	x0, [x20]
    d1d8:	cbz	x0, d1e8 <PyFloat_FromString@plt+0x6758>
    d1dc:	mov	x0, x25
    d1e0:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    d1e4:	b	d1a0 <PyFloat_FromString@plt+0x6710>
    d1e8:	mov	x0, x20
    d1ec:	bl	65d0 <_Py_Dealloc@plt>
    d1f0:	b	d1dc <PyFloat_FromString@plt+0x674c>
    d1f4:	mov	x0, x20
    d1f8:	bl	65d0 <_Py_Dealloc@plt>
    d1fc:	b	d0b4 <PyFloat_FromString@plt+0x6624>
    d200:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d204:	add	x1, x1, #0x990
    d208:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d20c:	ldr	x0, [x0, #3928]
    d210:	ldr	x0, [x0]
    d214:	bl	6650 <PyErr_SetString@plt>
    d218:	ldr	x0, [x23]
    d21c:	sub	x0, x0, #0x1
    d220:	str	x0, [x23]
    d224:	cbz	x0, d230 <PyFloat_FromString@plt+0x67a0>
    d228:	ldr	x27, [sp, #80]
    d22c:	b	d1a0 <PyFloat_FromString@plt+0x6710>
    d230:	mov	x0, x23
    d234:	bl	65d0 <_Py_Dealloc@plt>
    d238:	ldr	x27, [sp, #80]
    d23c:	b	d1a0 <PyFloat_FromString@plt+0x6710>
    d240:	mov	x0, x24
    d244:	bl	65d0 <_Py_Dealloc@plt>
    d248:	mov	x20, #0x0                   	// #0
    d24c:	ldp	x23, x24, [sp, #48]
    d250:	ldp	x25, x26, [sp, #64]
    d254:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d258:	mov	x20, x24
    d25c:	ldr	x27, [sp, #80]
    d260:	b	d398 <PyFloat_FromString@plt+0x6908>
    d264:	mov	x0, x23
    d268:	bl	65d0 <_Py_Dealloc@plt>
    d26c:	b	d128 <PyFloat_FromString@plt+0x6698>
    d270:	mov	x0, x24
    d274:	bl	65d0 <_Py_Dealloc@plt>
    d278:	b	d138 <PyFloat_FromString@plt+0x66a8>
    d27c:	orr	w22, w25, w22
    d280:	cbnz	w22, d290 <PyFloat_FromString@plt+0x6800>
    d284:	sub	w0, w21, #0x2
    d288:	cmp	w0, #0x1
    d28c:	b.ls	d2a4 <PyFloat_FromString@plt+0x6814>  // b.plast
    d290:	ldr	w1, [sp, #172]
    d294:	mov	x0, x19
    d298:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    d29c:	mov	x19, #0x0                   	// #0
    d2a0:	cbnz	w0, d3ac <PyFloat_FromString@plt+0x691c>
    d2a4:	cmp	w21, #0x3
    d2a8:	b.eq	d2cc <PyFloat_FromString@plt+0x683c>  // b.none
    d2ac:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
    d2b0:	ldr	x19, [x19, #3976]
    d2b4:	ldr	x0, [x19]
    d2b8:	add	x0, x0, #0x1
    d2bc:	str	x0, [x19]
    d2c0:	ldp	x23, x24, [sp, #48]
    d2c4:	ldp	x25, x26, [sp, #64]
    d2c8:	b	cd94 <PyFloat_FromString@plt+0x6304>
    d2cc:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
    d2d0:	ldr	x19, [x19, #4024]
    d2d4:	ldr	x0, [x19]
    d2d8:	add	x0, x0, #0x1
    d2dc:	str	x0, [x19]
    d2e0:	ldp	x23, x24, [sp, #48]
    d2e4:	ldp	x25, x26, [sp, #64]
    d2e8:	b	cd94 <PyFloat_FromString@plt+0x6304>
    d2ec:	cbnz	w21, d168 <PyFloat_FromString@plt+0x66d8>
    d2f0:	cmn	w20, #0x1
    d2f4:	cset	w20, eq  // eq = none
    d2f8:	b	d168 <PyFloat_FromString@plt+0x66d8>
    d2fc:	cmp	w21, #0x4
    d300:	b.eq	d330 <PyFloat_FromString@plt+0x68a0>  // b.none
    d304:	cmp	w21, #0x5
    d308:	b.ne	d168 <PyFloat_FromString@plt+0x66d8>  // b.any
    d30c:	mvn	w20, w20
    d310:	lsr	w20, w20, #31
    d314:	b	d168 <PyFloat_FromString@plt+0x66d8>
    d318:	cmp	w20, #0x0
    d31c:	cset	w20, ne  // ne = any
    d320:	b	d168 <PyFloat_FromString@plt+0x66d8>
    d324:	cmp	w20, #0x0
    d328:	cset	w20, le
    d32c:	b	d168 <PyFloat_FromString@plt+0x66d8>
    d330:	cmp	w20, #0x1
    d334:	cset	w20, eq  // eq = none
    d338:	b	d168 <PyFloat_FromString@plt+0x66d8>
    d33c:	mov	x20, x24
    d340:	ldp	x23, x24, [sp, #48]
    d344:	ldp	x25, x26, [sp, #64]
    d348:	ldr	x27, [sp, #80]
    d34c:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d350:	mov	x20, #0x0                   	// #0
    d354:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d358:	mov	x20, #0x0                   	// #0
    d35c:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d360:	mov	x20, x0
    d364:	ldp	x23, x24, [sp, #48]
    d368:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d36c:	mov	x20, x24
    d370:	ldp	x23, x24, [sp, #48]
    d374:	b	cd90 <PyFloat_FromString@plt+0x6300>
    d378:	mov	x19, #0x0                   	// #0
    d37c:	b	cd94 <PyFloat_FromString@plt+0x6304>
    d380:	ldp	x23, x24, [sp, #48]
    d384:	ldp	d8, d9, [sp, #96]
    d388:	b	cd7c <PyFloat_FromString@plt+0x62ec>
    d38c:	stp	x23, x24, [sp, #48]
    d390:	stp	x25, x26, [sp, #64]
    d394:	mov	x23, x22
    d398:	ldr	x0, [x22]
    d39c:	add	x0, x0, #0x1
    d3a0:	str	x0, [x22]
    d3a4:	mov	x24, x20
    d3a8:	b	d0e4 <PyFloat_FromString@plt+0x6654>
    d3ac:	ldp	x23, x24, [sp, #48]
    d3b0:	ldp	x25, x26, [sp, #64]
    d3b4:	b	cd94 <PyFloat_FromString@plt+0x6304>
    d3b8:	stp	x29, x30, [sp, #-304]!
    d3bc:	mov	x29, sp
    d3c0:	stp	x19, x20, [sp, #16]
    d3c4:	mov	x19, x0
    d3c8:	ldr	x20, [x0, #16]
    d3cc:	cmn	x20, #0x1
    d3d0:	b.eq	d3e4 <PyFloat_FromString@plt+0x6954>  // b.none
    d3d4:	ldr	x0, [x19, #16]
    d3d8:	ldp	x19, x20, [sp, #16]
    d3dc:	ldp	x29, x30, [sp], #304
    d3e0:	ret
    d3e4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    d3e8:	str	x0, [sp, #88]
    d3ec:	mov	w1, #0xffffff90            	// #-112
    d3f0:	strb	w1, [sp, #112]
    d3f4:	str	xzr, [sp, #120]
    d3f8:	mov	x2, #0x13                  	// #19
    d3fc:	str	x2, [sp, #128]
    d400:	mov	x0, #0x1                   	// #1
    d404:	str	x0, [sp, #136]
    d408:	str	x0, [sp, #144]
    d40c:	add	x3, sp, #0x58
    d410:	str	x3, [sp, #152]
    d414:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    d418:	movk	x3, #0x1ccc, lsl #48
    d41c:	str	x3, [sp, #96]
    d420:	strb	w1, [sp, #160]
    d424:	str	xzr, [sp, #168]
    d428:	str	x2, [sp, #176]
    d42c:	str	x0, [sp, #184]
    d430:	str	x0, [sp, #192]
    d434:	add	x2, sp, #0x60
    d438:	str	x2, [sp, #200]
    d43c:	mov	x2, #0xa                   	// #10
    d440:	str	x2, [sp, #104]
    d444:	strb	w1, [sp, #208]
    d448:	str	xzr, [sp, #216]
    d44c:	mov	x1, #0x2                   	// #2
    d450:	str	x1, [sp, #224]
    d454:	str	x0, [sp, #232]
    d458:	str	x0, [sp, #240]
    d45c:	add	x0, sp, #0x68
    d460:	str	x0, [sp, #248]
    d464:	str	wzr, [sp, #84]
    d468:	add	x2, sp, #0x100
    d46c:	mov	x1, #0x0                   	// #0
    d470:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    d474:	ldr	x0, [x0, #1816]
    d478:	bl	6740 <PyContextVar_Get@plt>
    d47c:	tbnz	w0, #31, d4cc <PyFloat_FromString@plt+0x6a3c>
    d480:	stp	x21, x22, [sp, #32]
    d484:	ldr	x0, [sp, #256]
    d488:	cbz	x0, d4d4 <PyFloat_FromString@plt+0x6a44>
    d48c:	ldr	x1, [x0]
    d490:	sub	x1, x1, #0x1
    d494:	str	x1, [x0]
    d498:	cbz	x1, d4e4 <PyFloat_FromString@plt+0x6a54>
    d49c:	add	x22, x19, #0x18
    d4a0:	mov	x0, x22
    d4a4:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
    d4a8:	cbz	w0, d52c <PyFloat_FromString@plt+0x6a9c>
    d4ac:	mov	x0, x22
    d4b0:	bl	28100 <PyInit__decimal@@Base+0xdf60>
    d4b4:	cbnz	w0, d4ec <PyFloat_FromString@plt+0x6a5c>
    d4b8:	mov	x0, x22
    d4bc:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    d4c0:	mov	x20, #0x0                   	// #0
    d4c4:	cbz	w0, d50c <PyFloat_FromString@plt+0x6a7c>
    d4c8:	ldp	x21, x22, [sp, #32]
    d4cc:	str	x20, [x19, #16]
    d4d0:	b	d3d4 <PyFloat_FromString@plt+0x6944>
    d4d4:	bl	7abc <PyFloat_FromString@plt+0x102c>
    d4d8:	cbnz	x0, d48c <PyFloat_FromString@plt+0x69fc>
    d4dc:	ldp	x21, x22, [sp, #32]
    d4e0:	b	d4cc <PyFloat_FromString@plt+0x6a3c>
    d4e4:	bl	65d0 <_Py_Dealloc@plt>
    d4e8:	b	d49c <PyFloat_FromString@plt+0x6a0c>
    d4ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d4f0:	add	x1, x1, #0x9b8
    d4f4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d4f8:	ldr	x0, [x0, #3936]
    d4fc:	ldr	x0, [x0]
    d500:	bl	6650 <PyErr_SetString@plt>
    d504:	ldp	x21, x22, [sp, #32]
    d508:	b	d4cc <PyFloat_FromString@plt+0x6a3c>
    d50c:	mov	x0, x22
    d510:	bl	28228 <PyInit__decimal@@Base+0xe088>
    d514:	sxtw	x20, w0
    d518:	mov	x0, #0xcb2f                	// #52015
    d51c:	movk	x0, #0x4, lsl #16
    d520:	mul	x20, x20, x0
    d524:	ldp	x21, x22, [sp, #32]
    d528:	b	d4cc <PyFloat_FromString@plt+0x6a3c>
    d52c:	stp	x23, x24, [sp, #48]
    d530:	add	x0, sp, #0x100
    d534:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
    d538:	bl	252e0 <PyInit__decimal@@Base+0xb140>
    d53c:	mov	x23, x0
    d540:	cbz	x0, d6e4 <PyFloat_FromString@plt+0x6c54>
    d544:	bl	252e0 <PyInit__decimal@@Base+0xb140>
    d548:	mov	x21, x0
    d54c:	cbz	x0, d5a4 <PyFloat_FromString@plt+0x6b14>
    d550:	str	x25, [sp, #64]
    d554:	ldr	x1, [x19, #32]
    d558:	tbnz	x1, #63, d5c8 <PyFloat_FromString@plt+0x6b38>
    d55c:	add	x25, sp, #0x54
    d560:	add	x24, sp, #0x100
    d564:	mov	x3, x25
    d568:	mov	x2, x24
    d56c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
    d570:	mov	x5, x25
    d574:	mov	x4, x24
    d578:	add	x3, sp, #0x70
    d57c:	mov	x2, x21
    d580:	add	x1, sp, #0xd0
    d584:	mov	x0, x23
    d588:	bl	37404 <PyInit__decimal@@Base+0x1d264>
    d58c:	add	x2, sp, #0x54
    d590:	mov	x1, x22
    d594:	mov	x0, x21
    d598:	bl	291bc <PyInit__decimal@@Base+0xf01c>
    d59c:	cbnz	w0, d600 <PyFloat_FromString@plt+0x6b70>
    d5a0:	ldr	x25, [sp, #64]
    d5a4:	bl	65e0 <PyErr_NoMemory@plt>
    d5a8:	mov	x0, x23
    d5ac:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    d5b0:	cbz	x21, d6d8 <PyFloat_FromString@plt+0x6c48>
    d5b4:	mov	x0, x21
    d5b8:	bl	282b0 <PyInit__decimal@@Base+0xe110>
    d5bc:	ldp	x21, x22, [sp, #32]
    d5c0:	ldp	x23, x24, [sp, #48]
    d5c4:	b	d4cc <PyFloat_FromString@plt+0x6a3c>
    d5c8:	add	x25, sp, #0x54
    d5cc:	add	x24, sp, #0x100
    d5d0:	mov	x3, x25
    d5d4:	mov	x2, x24
    d5d8:	neg	x1, x1
    d5dc:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
    d5e0:	mov	x5, x25
    d5e4:	mov	x4, x24
    d5e8:	add	x3, sp, #0x70
    d5ec:	mov	x2, x21
    d5f0:	add	x1, sp, #0xa0
    d5f4:	mov	x0, x23
    d5f8:	bl	37404 <PyInit__decimal@@Base+0x1d264>
    d5fc:	b	d58c <PyFloat_FromString@plt+0x6afc>
    d600:	str	xzr, [x21, #8]
    d604:	mov	x0, x21
    d608:	bl	287d8 <PyInit__decimal@@Base+0xe638>
    d60c:	mov	x0, #0x14                  	// #20
    d610:	movk	x0, #0xa764, lsl #16
    d614:	movk	x0, #0xb6b3, lsl #32
    d618:	movk	x0, #0xde0, lsl #48
    d61c:	str	x0, [sp, #256]
    d620:	str	x0, [sp, #264]
    d624:	mov	x0, #0xffec                	// #65516
    d628:	movk	x0, #0x589b, lsl #16
    d62c:	movk	x0, #0x494c, lsl #32
    d630:	movk	x0, #0xf21f, lsl #48
    d634:	str	x0, [sp, #272]
    d638:	add	x24, sp, #0x54
    d63c:	add	x25, sp, #0x100
    d640:	mov	x4, x24
    d644:	mov	x3, x25
    d648:	mov	x2, x23
    d64c:	mov	x1, x21
    d650:	mov	x0, x21
    d654:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
    d658:	mov	x4, x24
    d65c:	mov	x3, x25
    d660:	add	x2, sp, #0x70
    d664:	mov	x1, x21
    d668:	mov	x0, x21
    d66c:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
    d670:	mov	x1, x24
    d674:	mov	x0, x21
    d678:	bl	29084 <PyInit__decimal@@Base+0xeee4>
    d67c:	mov	x24, x0
    d680:	mov	x0, x22
    d684:	bl	280d8 <PyInit__decimal@@Base+0xdf38>
    d688:	cmp	w0, #0x0
    d68c:	cneg	x24, x24, eq  // eq = none
    d690:	cmn	x24, #0x1
    d694:	mov	x0, #0xfffffffffffffffe    	// #-2
    d698:	csel	x24, x24, x0, ne  // ne = any
    d69c:	ldr	w0, [sp, #84]
    d6a0:	cbz	w0, d6cc <PyFloat_FromString@plt+0x6c3c>
    d6a4:	tbz	w0, #9, d6b0 <PyFloat_FromString@plt+0x6c20>
    d6a8:	ldr	x25, [sp, #64]
    d6ac:	b	d5a4 <PyFloat_FromString@plt+0x6b14>
    d6b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d6b4:	add	x1, x1, #0x9e0
    d6b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d6bc:	ldr	x0, [x0, #3920]
    d6c0:	ldr	x0, [x0]
    d6c4:	bl	6650 <PyErr_SetString@plt>
    d6c8:	mov	x24, x20
    d6cc:	mov	x20, x24
    d6d0:	ldr	x25, [sp, #64]
    d6d4:	b	d5a8 <PyFloat_FromString@plt+0x6b18>
    d6d8:	ldp	x21, x22, [sp, #32]
    d6dc:	ldp	x23, x24, [sp, #48]
    d6e0:	b	d4cc <PyFloat_FromString@plt+0x6a3c>
    d6e4:	bl	65e0 <PyErr_NoMemory@plt>
    d6e8:	mov	x21, x23
    d6ec:	b	d5b0 <PyFloat_FromString@plt+0x6b20>
    d6f0:	stp	x29, x30, [sp, #-176]!
    d6f4:	mov	x29, sp
    d6f8:	stp	x19, x20, [sp, #16]
    d6fc:	stp	x23, x24, [sp, #48]
    d700:	mov	x24, x0
    d704:	mov	x20, x1
    d708:	str	xzr, [sp, #168]
    d70c:	str	wzr, [sp, #108]
    d710:	add	x2, sp, #0x58
    d714:	mov	x1, #0x0                   	// #0
    d718:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    d71c:	ldr	x0, [x0, #1816]
    d720:	bl	6740 <PyContextVar_Get@plt>
    d724:	tbnz	w0, #31, db4c <PyFloat_FromString@plt+0x70bc>
    d728:	ldr	x19, [sp, #88]
    d72c:	cbz	x19, d7b8 <PyFloat_FromString@plt+0x6d28>
    d730:	ldr	x2, [x19]
    d734:	sub	x2, x2, #0x1
    d738:	str	x2, [x19]
    d73c:	cbz	x2, d7cc <PyFloat_FromString@plt+0x6d3c>
    d740:	add	x3, sp, #0xa8
    d744:	add	x2, sp, #0xa0
    d748:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d74c:	add	x1, x1, #0xa08
    d750:	mov	x0, x20
    d754:	bl	68e0 <PyArg_ParseTuple@plt>
    d758:	cbz	w0, db38 <PyFloat_FromString@plt+0x70a8>
    d75c:	ldr	x0, [sp, #160]
    d760:	ldr	x1, [x0, #8]
    d764:	ldr	x1, [x1, #168]
    d768:	tbz	w1, #28, d988 <PyFloat_FromString@plt+0x6ef8>
    d76c:	stp	x21, x22, [sp, #32]
    d770:	add	x1, sp, #0x60
    d774:	bl	69d0 <PyUnicode_AsUTF8AndSize@plt>
    d778:	mov	x21, x0
    d77c:	cbz	x0, db40 <PyFloat_FromString@plt+0x70b0>
    d780:	stp	x25, x26, [sp, #64]
    d784:	ldr	x20, [sp, #96]
    d788:	cmp	x20, #0x0
    d78c:	b.le	d798 <PyFloat_FromString@plt+0x6d08>
    d790:	ldrb	w0, [x0]
    d794:	cbz	w0, d7d8 <PyFloat_FromString@plt+0x6d48>
    d798:	ldr	w2, [x19, #80]
    d79c:	mov	x1, x21
    d7a0:	add	x0, sp, #0x70
    d7a4:	bl	2401c <PyInit__decimal@@Base+0x9e7c>
    d7a8:	mov	w26, w0
    d7ac:	cbz	w0, d9b0 <PyFloat_FromString@plt+0x6f20>
    d7b0:	mov	w26, #0x0                   	// #0
    d7b4:	b	d828 <PyFloat_FromString@plt+0x6d98>
    d7b8:	bl	7abc <PyFloat_FromString@plt+0x102c>
    d7bc:	mov	x19, x0
    d7c0:	cbnz	x0, d730 <PyFloat_FromString@plt+0x6ca0>
    d7c4:	mov	x23, x0
    d7c8:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    d7cc:	mov	x0, x19
    d7d0:	bl	65d0 <_Py_Dealloc@plt>
    d7d4:	b	d740 <PyFloat_FromString@plt+0x6cb0>
    d7d8:	add	x0, x20, #0x1
    d7dc:	bl	6a40 <PyMem_Malloc@plt>
    d7e0:	mov	x23, x0
    d7e4:	cbz	x0, d978 <PyFloat_FromString@plt+0x6ee8>
    d7e8:	mov	x2, x20
    d7ec:	mov	x1, x21
    d7f0:	bl	6470 <memcpy@plt>
    d7f4:	strb	wzr, [x23, x20]
    d7f8:	mov	w0, #0x5f                  	// #95
    d7fc:	strb	w0, [x23]
    d800:	ldr	w2, [x19, #80]
    d804:	mov	x1, x23
    d808:	add	x0, sp, #0x70
    d80c:	bl	2401c <PyInit__decimal@@Base+0x9e7c>
    d810:	cbz	w0, d9a8 <PyFloat_FromString@plt+0x6f18>
    d814:	mov	w0, #0xffffffff            	// #-1
    d818:	strb	w0, [sp, #131]
    d81c:	strb	wzr, [sp, #132]
    d820:	mov	x21, x23
    d824:	mov	w26, #0x1                   	// #1
    d828:	ldr	x20, [sp, #168]
    d82c:	cbz	x20, da1c <PyFloat_FromString@plt+0x6f8c>
    d830:	ldr	x0, [x20, #8]
    d834:	ldr	x0, [x0, #168]
    d838:	tbz	w0, #29, d9d8 <PyFloat_FromString@plt+0x6f48>
    d83c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d840:	add	x1, x1, #0xa68
    d844:	mov	x0, x20
    d848:	bl	6870 <PyDict_GetItemString@plt>
    d84c:	mov	x22, x0
    d850:	cbz	x0, d868 <PyFloat_FromString@plt+0x6dd8>
    d854:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    d858:	mov	x22, x0
    d85c:	cbz	x0, d9cc <PyFloat_FromString@plt+0x6f3c>
    d860:	add	x0, x0, #0x20
    d864:	str	x0, [sp, #136]
    d868:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d86c:	add	x1, x1, #0xa78
    d870:	ldr	x0, [sp, #168]
    d874:	bl	6870 <PyDict_GetItemString@plt>
    d878:	mov	x25, x0
    d87c:	cbz	x0, d894 <PyFloat_FromString@plt+0x6e04>
    d880:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    d884:	mov	x25, x0
    d888:	cbz	x0, d9cc <PyFloat_FromString@plt+0x6f3c>
    d88c:	add	x0, x0, #0x20
    d890:	str	x0, [sp, #144]
    d894:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d898:	add	x1, x1, #0xa88
    d89c:	ldr	x0, [sp, #168]
    d8a0:	bl	6870 <PyDict_GetItemString@plt>
    d8a4:	mov	x20, x0
    d8a8:	cbz	x0, d8c0 <PyFloat_FromString@plt+0x6e30>
    d8ac:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    d8b0:	mov	x20, x0
    d8b4:	cbz	x0, db08 <PyFloat_FromString@plt+0x7078>
    d8b8:	add	x0, x0, #0x20
    d8bc:	str	x0, [sp, #152]
    d8c0:	add	x0, sp, #0x70
    d8c4:	bl	23fd4 <PyInit__decimal@@Base+0x9e34>
    d8c8:	tbnz	w0, #31, d9f8 <PyFloat_FromString@plt+0x6f68>
    d8cc:	add	x3, sp, #0x6c
    d8d0:	add	x2, x19, #0x10
    d8d4:	add	x1, sp, #0x70
    d8d8:	add	x0, x24, #0x18
    d8dc:	bl	244dc <PyInit__decimal@@Base+0xa33c>
    d8e0:	mov	x19, x0
    d8e4:	cbz	x0, daa0 <PyFloat_FromString@plt+0x7010>
    d8e8:	bl	64d0 <strlen@plt>
    d8ec:	str	x0, [sp, #96]
    d8f0:	cbnz	w26, dad4 <PyFloat_FromString@plt+0x7044>
    d8f4:	mov	x2, #0x0                   	// #0
    d8f8:	ldr	x1, [sp, #96]
    d8fc:	mov	x0, x19
    d900:	bl	68a0 <PyUnicode_DecodeUTF8@plt>
    d904:	mov	x23, x0
    d908:	cbz	x20, d91c <PyFloat_FromString@plt+0x6e8c>
    d90c:	ldr	x0, [x20]
    d910:	sub	x0, x0, #0x1
    d914:	str	x0, [x20]
    d918:	cbz	x0, dafc <PyFloat_FromString@plt+0x706c>
    d91c:	cbz	x25, d930 <PyFloat_FromString@plt+0x6ea0>
    d920:	ldr	x0, [x25]
    d924:	sub	x0, x0, #0x1
    d928:	str	x0, [x25]
    d92c:	cbz	x0, db14 <PyFloat_FromString@plt+0x7084>
    d930:	cbz	x22, d944 <PyFloat_FromString@plt+0x6eb4>
    d934:	ldr	x0, [x22]
    d938:	sub	x0, x0, #0x1
    d93c:	str	x0, [x22]
    d940:	cbz	x0, db20 <PyFloat_FromString@plt+0x7090>
    d944:	cbnz	w26, db2c <PyFloat_FromString@plt+0x709c>
    d948:	cbz	x19, db54 <PyFloat_FromString@plt+0x70c4>
    d94c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    d950:	ldr	x1, [x0, #1704]
    d954:	mov	x0, x19
    d958:	blr	x1
    d95c:	ldp	x21, x22, [sp, #32]
    d960:	ldp	x25, x26, [sp, #64]
    d964:	mov	x0, x23
    d968:	ldp	x19, x20, [sp, #16]
    d96c:	ldp	x23, x24, [sp, #48]
    d970:	ldp	x29, x30, [sp], #176
    d974:	ret
    d978:	bl	65e0 <PyErr_NoMemory@plt>
    d97c:	ldp	x21, x22, [sp, #32]
    d980:	ldp	x25, x26, [sp, #64]
    d984:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    d988:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d98c:	add	x1, x1, #0xa10
    d990:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d994:	ldr	x0, [x0, #3936]
    d998:	ldr	x0, [x0]
    d99c:	bl	6650 <PyErr_SetString@plt>
    d9a0:	mov	x23, #0x0                   	// #0
    d9a4:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    d9a8:	mov	x21, x23
    d9ac:	mov	w26, #0x1                   	// #1
    d9b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d9b4:	add	x1, x1, #0xa28
    d9b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d9bc:	ldr	x0, [x0, #3928]
    d9c0:	ldr	x0, [x0]
    d9c4:	bl	6650 <PyErr_SetString@plt>
    d9c8:	mov	x22, #0x0                   	// #0
    d9cc:	mov	x19, #0x0                   	// #0
    d9d0:	mov	x23, #0x0                   	// #0
    d9d4:	b	d930 <PyFloat_FromString@plt+0x6ea0>
    d9d8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d9dc:	add	x1, x1, #0xa40
    d9e0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    d9e4:	ldr	x0, [x0, #3936]
    d9e8:	ldr	x0, [x0]
    d9ec:	bl	6650 <PyErr_SetString@plt>
    d9f0:	mov	x22, #0x0                   	// #0
    d9f4:	b	d9cc <PyFloat_FromString@plt+0x6f3c>
    d9f8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    d9fc:	add	x1, x1, #0xa98
    da00:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    da04:	ldr	x0, [x0, #3928]
    da08:	ldr	x0, [x0]
    da0c:	bl	6650 <PyErr_SetString@plt>
    da10:	mov	x19, #0x0                   	// #0
    da14:	mov	x23, #0x0                   	// #0
    da18:	b	d908 <PyFloat_FromString@plt+0x6e78>
    da1c:	ldr	x23, [sp, #136]
    da20:	mov	x0, x23
    da24:	bl	64d0 <strlen@plt>
    da28:	cmp	x0, #0x1
    da2c:	b.hi	da44 <PyFloat_FromString@plt+0x6fb4>  // b.pmore
    da30:	mov	x22, x20
    da34:	b.ne	da5c <PyFloat_FromString@plt+0x6fcc>  // b.any
    da38:	ldrb	w0, [x23]
    da3c:	tst	w0, #0xffffff80
    da40:	b.eq	da5c <PyFloat_FromString@plt+0x6fcc>  // b.none
    da44:	mov	x0, x23
    da48:	bl	9424 <PyFloat_FromString@plt+0x2994>
    da4c:	mov	x22, x0
    da50:	cbz	x0, d9cc <PyFloat_FromString@plt+0x6f3c>
    da54:	add	x0, x0, #0x20
    da58:	str	x0, [sp, #136]
    da5c:	ldr	x23, [sp, #144]
    da60:	mov	x0, x23
    da64:	bl	64d0 <strlen@plt>
    da68:	cmp	x0, #0x1
    da6c:	b.hi	da84 <PyFloat_FromString@plt+0x6ff4>  // b.pmore
    da70:	mov	x25, x20
    da74:	b.ne	d8cc <PyFloat_FromString@plt+0x6e3c>  // b.any
    da78:	ldrb	w0, [x23]
    da7c:	tst	w0, #0xffffff80
    da80:	b.eq	d8cc <PyFloat_FromString@plt+0x6e3c>  // b.none
    da84:	mov	x0, x23
    da88:	bl	9424 <PyFloat_FromString@plt+0x2994>
    da8c:	mov	x25, x0
    da90:	cbz	x0, d9cc <PyFloat_FromString@plt+0x6f3c>
    da94:	add	x0, x0, #0x20
    da98:	str	x0, [sp, #144]
    da9c:	b	d8cc <PyFloat_FromString@plt+0x6e3c>
    daa0:	ldr	w0, [sp, #108]
    daa4:	tbz	w0, #9, dab4 <PyFloat_FromString@plt+0x7024>
    daa8:	bl	65e0 <PyErr_NoMemory@plt>
    daac:	mov	x23, x19
    dab0:	b	d908 <PyFloat_FromString@plt+0x6e78>
    dab4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    dab8:	add	x1, x1, #0xab0
    dabc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    dac0:	ldr	x0, [x0, #3928]
    dac4:	ldr	x0, [x0]
    dac8:	bl	6650 <PyErr_SetString@plt>
    dacc:	mov	x23, x19
    dad0:	b	d908 <PyFloat_FromString@plt+0x6e78>
    dad4:	ldrb	w0, [x19]
    dad8:	cbz	w0, d8f4 <PyFloat_FromString@plt+0x6e64>
    dadc:	mov	x1, x19
    dae0:	b	daec <PyFloat_FromString@plt+0x705c>
    dae4:	ldrb	w0, [x1, #1]!
    dae8:	cbz	w0, d8f4 <PyFloat_FromString@plt+0x6e64>
    daec:	cmp	w0, #0xff
    daf0:	b.ne	dae4 <PyFloat_FromString@plt+0x7054>  // b.any
    daf4:	strb	wzr, [x1]
    daf8:	b	dae4 <PyFloat_FromString@plt+0x7054>
    dafc:	mov	x0, x20
    db00:	bl	65d0 <_Py_Dealloc@plt>
    db04:	b	d91c <PyFloat_FromString@plt+0x6e8c>
    db08:	mov	x19, x0
    db0c:	mov	x23, x0
    db10:	b	d91c <PyFloat_FromString@plt+0x6e8c>
    db14:	mov	x0, x25
    db18:	bl	65d0 <_Py_Dealloc@plt>
    db1c:	b	d930 <PyFloat_FromString@plt+0x6ea0>
    db20:	mov	x0, x22
    db24:	bl	65d0 <_Py_Dealloc@plt>
    db28:	b	d944 <PyFloat_FromString@plt+0x6eb4>
    db2c:	mov	x0, x21
    db30:	bl	6560 <PyMem_Free@plt>
    db34:	b	d948 <PyFloat_FromString@plt+0x6eb8>
    db38:	mov	x23, #0x0                   	// #0
    db3c:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    db40:	mov	x23, x0
    db44:	ldp	x21, x22, [sp, #32]
    db48:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    db4c:	mov	x23, #0x0                   	// #0
    db50:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    db54:	ldp	x21, x22, [sp, #32]
    db58:	ldp	x25, x26, [sp, #64]
    db5c:	b	d964 <PyFloat_FromString@plt+0x6ed4>
    db60:	stp	x29, x30, [sp, #-80]!
    db64:	mov	x29, sp
    db68:	stp	x19, x20, [sp, #16]
    db6c:	str	wzr, [sp, #76]
    db70:	add	x20, x0, #0x18
    db74:	mov	x0, x20
    db78:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
    db7c:	cbnz	w0, dd34 <PyFloat_FromString@plt+0x72a4>
    db80:	add	x2, sp, #0x40
    db84:	mov	x1, #0x0                   	// #0
    db88:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    db8c:	ldr	x0, [x0, #1816]
    db90:	bl	6740 <PyContextVar_Get@plt>
    db94:	tbnz	w0, #31, df2c <PyFloat_FromString@plt+0x749c>
    db98:	stp	x21, x22, [sp, #32]
    db9c:	ldr	x21, [sp, #64]
    dba0:	cbz	x21, dd80 <PyFloat_FromString@plt+0x72f0>
    dba4:	ldr	x0, [x21]
    dba8:	sub	x0, x0, #0x1
    dbac:	str	x0, [x21]
    dbb0:	cbz	x0, dd98 <PyFloat_FromString@plt+0x7308>
    dbb4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    dbb8:	add	x0, x0, #0x320
    dbbc:	add	x0, x0, #0x1a0
    dbc0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    dbc4:	mov	x19, x0
    dbc8:	cbz	x0, df44 <PyFloat_FromString@plt+0x74b4>
    dbcc:	add	x22, x0, #0x18
    dbd0:	add	x2, sp, #0x4c
    dbd4:	mov	x1, x20
    dbd8:	mov	x0, x22
    dbdc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
    dbe0:	cbz	w0, dda4 <PyFloat_FromString@plt+0x7314>
    dbe4:	mov	x0, x22
    dbe8:	bl	28118 <PyInit__decimal@@Base+0xdf78>
    dbec:	mov	x22, #0x0                   	// #0
    dbf0:	cbnz	w0, dbf8 <PyFloat_FromString@plt+0x7168>
    dbf4:	ldr	x22, [x19, #32]
    dbf8:	str	xzr, [x19, #32]
    dbfc:	mov	w2, #0x3                   	// #3
    dc00:	mov	x1, x21
    dc04:	mov	x0, x19
    dc08:	bl	8864 <PyFloat_FromString@plt+0x1dd4>
    dc0c:	mov	x20, x0
    dc10:	ldr	x0, [x19]
    dc14:	sub	x0, x0, #0x1
    dc18:	str	x0, [x19]
    dc1c:	cbz	x0, ddd0 <PyFloat_FromString@plt+0x7340>
    dc20:	cbz	x20, df38 <PyFloat_FromString@plt+0x74a8>
    dc24:	cmp	x22, #0x0
    dc28:	cneg	x0, x22, lt  // lt = tstop
    dc2c:	bl	66a0 <PyLong_FromSsize_t@plt>
    dc30:	mov	x19, x0
    dc34:	cbz	x0, df38 <PyFloat_FromString@plt+0x74a8>
    dc38:	str	x23, [sp, #48]
    dc3c:	mov	x0, #0xa                   	// #10
    dc40:	bl	66e0 <PyLong_FromLong@plt>
    dc44:	mov	x21, x0
    dc48:	cbz	x0, df00 <PyFloat_FromString@plt+0x7470>
    dc4c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    dc50:	ldr	x3, [x0, #1880]
    dc54:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
    dc58:	ldr	x2, [x2, #4008]
    dc5c:	mov	x1, x19
    dc60:	mov	x0, x21
    dc64:	blr	x3
    dc68:	mov	x23, x0
    dc6c:	ldr	x1, [x19]
    dc70:	sub	x1, x1, #0x1
    dc74:	str	x1, [x19]
    dc78:	cbz	x1, dddc <PyFloat_FromString@plt+0x734c>
    dc7c:	ldr	x1, [x21]
    dc80:	sub	x1, x1, #0x1
    dc84:	str	x1, [x21]
    dc88:	cbz	x1, dde8 <PyFloat_FromString@plt+0x7358>
    dc8c:	cbz	x23, df34 <PyFloat_FromString@plt+0x74a4>
    dc90:	tbnz	x22, #63, de00 <PyFloat_FromString@plt+0x7370>
    dc94:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    dc98:	ldr	x2, [x0, #1888]
    dc9c:	mov	x1, x23
    dca0:	mov	x0, x20
    dca4:	blr	x2
    dca8:	mov	x22, x0
    dcac:	ldr	x0, [x20]
    dcb0:	sub	x0, x0, #0x1
    dcb4:	str	x0, [x20]
    dcb8:	cbz	x0, ddf4 <PyFloat_FromString@plt+0x7364>
    dcbc:	cbz	x22, df08 <PyFloat_FromString@plt+0x7478>
    dcc0:	mov	x0, #0x1                   	// #1
    dcc4:	bl	66e0 <PyLong_FromLong@plt>
    dcc8:	mov	x21, x0
    dccc:	cbz	x0, df08 <PyFloat_FromString@plt+0x7478>
    dcd0:	mov	x2, x0
    dcd4:	mov	x1, x22
    dcd8:	mov	x0, #0x2                   	// #2
    dcdc:	bl	6a60 <PyTuple_Pack@plt>
    dce0:	mov	x19, x0
    dce4:	ldr	x1, [x23]
    dce8:	sub	x1, x1, #0x1
    dcec:	str	x1, [x23]
    dcf0:	cbz	x1, df20 <PyFloat_FromString@plt+0x7490>
    dcf4:	cbz	x21, dec0 <PyFloat_FromString@plt+0x7430>
    dcf8:	ldr	x1, [x21]
    dcfc:	sub	x1, x1, #0x1
    dd00:	str	x1, [x21]
    dd04:	cbz	x1, ded4 <PyFloat_FromString@plt+0x7444>
    dd08:	ldr	x23, [sp, #48]
    dd0c:	cbz	x22, df4c <PyFloat_FromString@plt+0x74bc>
    dd10:	ldr	x1, [x22]
    dd14:	sub	x1, x1, #0x1
    dd18:	str	x1, [x22]
    dd1c:	cbz	x1, def0 <PyFloat_FromString@plt+0x7460>
    dd20:	ldp	x21, x22, [sp, #32]
    dd24:	mov	x0, x19
    dd28:	ldp	x19, x20, [sp, #16]
    dd2c:	ldp	x29, x30, [sp], #80
    dd30:	ret
    dd34:	mov	x0, x20
    dd38:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
    dd3c:	cbz	w0, dd60 <PyFloat_FromString@plt+0x72d0>
    dd40:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    dd44:	add	x1, x1, #0xaf0
    dd48:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    dd4c:	ldr	x0, [x0, #3928]
    dd50:	ldr	x0, [x0]
    dd54:	bl	6650 <PyErr_SetString@plt>
    dd58:	mov	x19, #0x0                   	// #0
    dd5c:	b	dd24 <PyFloat_FromString@plt+0x7294>
    dd60:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    dd64:	add	x1, x1, #0xb18
    dd68:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    dd6c:	ldr	x0, [x0, #3992]
    dd70:	ldr	x0, [x0]
    dd74:	bl	6650 <PyErr_SetString@plt>
    dd78:	mov	x19, #0x0                   	// #0
    dd7c:	b	dd24 <PyFloat_FromString@plt+0x7294>
    dd80:	bl	7abc <PyFloat_FromString@plt+0x102c>
    dd84:	mov	x21, x0
    dd88:	cbnz	x0, dba4 <PyFloat_FromString@plt+0x7114>
    dd8c:	mov	x19, x0
    dd90:	ldp	x21, x22, [sp, #32]
    dd94:	b	dd24 <PyFloat_FromString@plt+0x7294>
    dd98:	mov	x0, x21
    dd9c:	bl	65d0 <_Py_Dealloc@plt>
    dda0:	b	dbb4 <PyFloat_FromString@plt+0x7124>
    dda4:	ldr	x0, [x19]
    dda8:	sub	x0, x0, #0x1
    ddac:	str	x0, [x19]
    ddb0:	cbz	x0, ddc4 <PyFloat_FromString@plt+0x7334>
    ddb4:	bl	65e0 <PyErr_NoMemory@plt>
    ddb8:	mov	x19, #0x0                   	// #0
    ddbc:	ldp	x21, x22, [sp, #32]
    ddc0:	b	dd24 <PyFloat_FromString@plt+0x7294>
    ddc4:	mov	x0, x19
    ddc8:	bl	65d0 <_Py_Dealloc@plt>
    ddcc:	b	ddb4 <PyFloat_FromString@plt+0x7324>
    ddd0:	mov	x0, x19
    ddd4:	bl	65d0 <_Py_Dealloc@plt>
    ddd8:	b	dc20 <PyFloat_FromString@plt+0x7190>
    dddc:	mov	x0, x19
    dde0:	bl	65d0 <_Py_Dealloc@plt>
    dde4:	b	dc7c <PyFloat_FromString@plt+0x71ec>
    dde8:	mov	x0, x21
    ddec:	bl	65d0 <_Py_Dealloc@plt>
    ddf0:	b	dc8c <PyFloat_FromString@plt+0x71fc>
    ddf4:	mov	x0, x20
    ddf8:	bl	65d0 <_Py_Dealloc@plt>
    ddfc:	b	dcbc <PyFloat_FromString@plt+0x722c>
    de00:	mov	x1, x23
    de04:	mov	x0, x20
    de08:	bl	6700 <_PyLong_GCD@plt>
    de0c:	mov	x19, x0
    de10:	cbz	x0, dec8 <PyFloat_FromString@plt+0x7438>
    de14:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    de18:	ldr	x2, [x0, #1896]
    de1c:	mov	x1, x19
    de20:	mov	x0, x20
    de24:	blr	x2
    de28:	mov	x22, x0
    de2c:	ldr	x0, [x20]
    de30:	sub	x0, x0, #0x1
    de34:	str	x0, [x20]
    de38:	cbz	x0, de9c <PyFloat_FromString@plt+0x740c>
    de3c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
    de40:	ldr	x2, [x0, #1896]
    de44:	mov	x1, x19
    de48:	mov	x0, x23
    de4c:	blr	x2
    de50:	mov	x21, x0
    de54:	ldr	x0, [x23]
    de58:	sub	x0, x0, #0x1
    de5c:	str	x0, [x23]
    de60:	cbz	x0, dea8 <PyFloat_FromString@plt+0x7418>
    de64:	ldr	x0, [x19]
    de68:	sub	x0, x0, #0x1
    de6c:	str	x0, [x19]
    de70:	cbz	x0, deb4 <PyFloat_FromString@plt+0x7424>
    de74:	cmp	x22, #0x0
    de78:	mov	x19, #0x0                   	// #0
    de7c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    de80:	b.eq	dcf4 <PyFloat_FromString@plt+0x7264>  // b.none
    de84:	mov	x2, x21
    de88:	mov	x1, x22
    de8c:	mov	x0, #0x2                   	// #2
    de90:	bl	6a60 <PyTuple_Pack@plt>
    de94:	mov	x19, x0
    de98:	b	dcf4 <PyFloat_FromString@plt+0x7264>
    de9c:	mov	x0, x20
    dea0:	bl	65d0 <_Py_Dealloc@plt>
    dea4:	b	de3c <PyFloat_FromString@plt+0x73ac>
    dea8:	mov	x0, x23
    deac:	bl	65d0 <_Py_Dealloc@plt>
    deb0:	b	de64 <PyFloat_FromString@plt+0x73d4>
    deb4:	mov	x0, x19
    deb8:	bl	65d0 <_Py_Dealloc@plt>
    debc:	b	de74 <PyFloat_FromString@plt+0x73e4>
    dec0:	ldr	x23, [sp, #48]
    dec4:	b	dd0c <PyFloat_FromString@plt+0x727c>
    dec8:	mov	x21, x23
    decc:	mov	x22, x20
    ded0:	b	dcf8 <PyFloat_FromString@plt+0x7268>
    ded4:	mov	x0, x21
    ded8:	bl	65d0 <_Py_Dealloc@plt>
    dedc:	ldr	x23, [sp, #48]
    dee0:	b	dd0c <PyFloat_FromString@plt+0x727c>
    dee4:	mov	x19, #0x0                   	// #0
    dee8:	ldr	x23, [sp, #48]
    deec:	b	dd0c <PyFloat_FromString@plt+0x727c>
    def0:	mov	x0, x22
    def4:	bl	65d0 <_Py_Dealloc@plt>
    def8:	ldp	x21, x22, [sp, #32]
    defc:	b	dd24 <PyFloat_FromString@plt+0x7294>
    df00:	mov	x23, x19
    df04:	mov	x22, x20
    df08:	ldr	x0, [x23]
    df0c:	sub	x0, x0, #0x1
    df10:	str	x0, [x23]
    df14:	cbnz	x0, dee4 <PyFloat_FromString@plt+0x7454>
    df18:	mov	x19, #0x0                   	// #0
    df1c:	mov	x21, #0x0                   	// #0
    df20:	mov	x0, x23
    df24:	bl	65d0 <_Py_Dealloc@plt>
    df28:	b	dcf4 <PyFloat_FromString@plt+0x7264>
    df2c:	mov	x19, #0x0                   	// #0
    df30:	b	dd24 <PyFloat_FromString@plt+0x7294>
    df34:	ldr	x23, [sp, #48]
    df38:	mov	x22, x20
    df3c:	mov	x19, #0x0                   	// #0
    df40:	b	dd0c <PyFloat_FromString@plt+0x727c>
    df44:	ldp	x21, x22, [sp, #32]
    df48:	b	dd24 <PyFloat_FromString@plt+0x7294>
    df4c:	ldp	x21, x22, [sp, #32]
    df50:	b	dd24 <PyFloat_FromString@plt+0x7294>
    df54:	stp	x29, x30, [sp, #-64]!
    df58:	mov	x29, sp
    df5c:	stp	x19, x20, [sp, #16]
    df60:	mov	x20, x0
    df64:	mov	x0, x1
    df68:	add	x3, sp, #0x30
    df6c:	add	x2, sp, #0x38
    df70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    df74:	add	x1, x1, #0xb48
    df78:	bl	68e0 <PyArg_ParseTuple@plt>
    df7c:	cbz	w0, e14c <PyFloat_FromString@plt+0x76bc>
    df80:	ldr	x19, [sp, #56]
    df84:	ldr	x0, [x19, #8]
    df88:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    df8c:	add	x1, x1, #0x320
    df90:	add	x1, x1, #0x1a0
    df94:	cmp	x0, x1
    df98:	b.eq	dfe0 <PyFloat_FromString@plt+0x7550>  // b.none
    df9c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    dfa0:	add	x1, x1, #0x320
    dfa4:	add	x1, x1, #0x1a0
    dfa8:	bl	69c0 <PyType_IsSubtype@plt>
    dfac:	cbnz	w0, dfe0 <PyFloat_FromString@plt+0x7550>
    dfb0:	ldr	x0, [x19, #8]
    dfb4:	ldr	x1, [x0, #168]
    dfb8:	tbnz	w1, #24, e064 <PyFloat_FromString@plt+0x75d4>
    dfbc:	ldr	x2, [x0, #24]
    dfc0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    dfc4:	add	x1, x1, #0x8a8
    dfc8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    dfcc:	ldr	x0, [x0, #3936]
    dfd0:	ldr	x0, [x0]
    dfd4:	bl	6a10 <PyErr_Format@plt>
    dfd8:	mov	x20, #0x0                   	// #0
    dfdc:	b	e150 <PyFloat_FromString@plt+0x76c0>
    dfe0:	str	x21, [sp, #32]
    dfe4:	ldr	x0, [x19]
    dfe8:	add	x0, x0, #0x1
    dfec:	str	x0, [x19]
    dff0:	ldr	x21, [sp, #48]
    dff4:	ldr	x0, [x21, #8]
    dff8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    dffc:	add	x1, x1, #0x320
    e000:	add	x1, x1, #0x1a0
    e004:	cmp	x0, x1
    e008:	b.eq	e08c <PyFloat_FromString@plt+0x75fc>  // b.none
    e00c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e010:	add	x1, x1, #0x320
    e014:	add	x1, x1, #0x1a0
    e018:	bl	69c0 <PyType_IsSubtype@plt>
    e01c:	cbnz	w0, e08c <PyFloat_FromString@plt+0x75fc>
    e020:	ldr	x0, [x21, #8]
    e024:	ldr	x1, [x0, #168]
    e028:	tbnz	w1, #24, e0e4 <PyFloat_FromString@plt+0x7654>
    e02c:	ldr	x2, [x0, #24]
    e030:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e034:	add	x1, x1, #0x8a8
    e038:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e03c:	ldr	x0, [x0, #3936]
    e040:	ldr	x0, [x0]
    e044:	bl	6a10 <PyErr_Format@plt>
    e048:	ldr	x0, [x19]
    e04c:	sub	x0, x0, #0x1
    e050:	str	x0, [x19]
    e054:	mov	x20, #0x0                   	// #0
    e058:	cbz	x0, e108 <PyFloat_FromString@plt+0x7678>
    e05c:	ldr	x21, [sp, #32]
    e060:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e064:	mov	x2, x20
    e068:	mov	x1, x19
    e06c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e070:	add	x0, x0, #0x320
    e074:	add	x0, x0, #0x1a0
    e078:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e07c:	mov	x19, x0
    e080:	cbz	x0, e160 <PyFloat_FromString@plt+0x76d0>
    e084:	str	x21, [sp, #32]
    e088:	b	dff0 <PyFloat_FromString@plt+0x7560>
    e08c:	ldr	x0, [x21]
    e090:	add	x0, x0, #0x1
    e094:	str	x0, [x21]
    e098:	add	x1, x21, #0x18
    e09c:	add	x0, x19, #0x18
    e0a0:	bl	38150 <PyInit__decimal@@Base+0x1dfb0>
    e0a4:	cbz	w0, e118 <PyFloat_FromString@plt+0x7688>
    e0a8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    e0ac:	ldr	x20, [x20, #4024]
    e0b0:	ldr	x0, [x20]
    e0b4:	add	x0, x0, #0x1
    e0b8:	str	x0, [x20]
    e0bc:	ldr	x0, [x19]
    e0c0:	sub	x0, x0, #0x1
    e0c4:	str	x0, [x19]
    e0c8:	cbz	x0, e130 <PyFloat_FromString@plt+0x76a0>
    e0cc:	ldr	x0, [x21]
    e0d0:	sub	x0, x0, #0x1
    e0d4:	str	x0, [x21]
    e0d8:	cbz	x0, e13c <PyFloat_FromString@plt+0x76ac>
    e0dc:	ldr	x21, [sp, #32]
    e0e0:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e0e4:	mov	x2, x20
    e0e8:	mov	x1, x21
    e0ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e0f0:	add	x0, x0, #0x320
    e0f4:	add	x0, x0, #0x1a0
    e0f8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e0fc:	mov	x21, x0
    e100:	cbnz	x0, e098 <PyFloat_FromString@plt+0x7608>
    e104:	b	e048 <PyFloat_FromString@plt+0x75b8>
    e108:	mov	x0, x19
    e10c:	bl	65d0 <_Py_Dealloc@plt>
    e110:	ldr	x21, [sp, #32]
    e114:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e118:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
    e11c:	ldr	x20, [x20, #3976]
    e120:	ldr	x0, [x20]
    e124:	add	x0, x0, #0x1
    e128:	str	x0, [x20]
    e12c:	b	e0bc <PyFloat_FromString@plt+0x762c>
    e130:	mov	x0, x19
    e134:	bl	65d0 <_Py_Dealloc@plt>
    e138:	b	e0cc <PyFloat_FromString@plt+0x763c>
    e13c:	mov	x0, x21
    e140:	bl	65d0 <_Py_Dealloc@plt>
    e144:	ldr	x21, [sp, #32]
    e148:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e14c:	mov	x20, #0x0                   	// #0
    e150:	mov	x0, x20
    e154:	ldp	x19, x20, [sp, #16]
    e158:	ldp	x29, x30, [sp], #64
    e15c:	ret
    e160:	mov	x20, x0
    e164:	b	e150 <PyFloat_FromString@plt+0x76c0>
    e168:	stp	x29, x30, [sp, #-64]!
    e16c:	mov	x29, sp
    e170:	stp	x19, x20, [sp, #16]
    e174:	mov	x20, x0
    e178:	mov	x0, x1
    e17c:	add	x3, sp, #0x30
    e180:	add	x2, sp, #0x38
    e184:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e188:	add	x1, x1, #0xb48
    e18c:	bl	68e0 <PyArg_ParseTuple@plt>
    e190:	cbz	w0, e390 <PyFloat_FromString@plt+0x7900>
    e194:	ldr	x19, [sp, #56]
    e198:	ldr	x0, [x19, #8]
    e19c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e1a0:	add	x1, x1, #0x320
    e1a4:	add	x1, x1, #0x1a0
    e1a8:	cmp	x0, x1
    e1ac:	b.eq	e1f4 <PyFloat_FromString@plt+0x7764>  // b.none
    e1b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e1b4:	add	x1, x1, #0x320
    e1b8:	add	x1, x1, #0x1a0
    e1bc:	bl	69c0 <PyType_IsSubtype@plt>
    e1c0:	cbnz	w0, e1f4 <PyFloat_FromString@plt+0x7764>
    e1c4:	ldr	x0, [x19, #8]
    e1c8:	ldr	x1, [x0, #168]
    e1cc:	tbnz	w1, #24, e278 <PyFloat_FromString@plt+0x77e8>
    e1d0:	ldr	x2, [x0, #24]
    e1d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e1d8:	add	x1, x1, #0x8a8
    e1dc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e1e0:	ldr	x0, [x0, #3936]
    e1e4:	ldr	x0, [x0]
    e1e8:	bl	6a10 <PyErr_Format@plt>
    e1ec:	mov	x20, #0x0                   	// #0
    e1f0:	b	e394 <PyFloat_FromString@plt+0x7904>
    e1f4:	str	x21, [sp, #32]
    e1f8:	ldr	x0, [x19]
    e1fc:	add	x0, x0, #0x1
    e200:	str	x0, [x19]
    e204:	ldr	x21, [sp, #48]
    e208:	ldr	x0, [x21, #8]
    e20c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e210:	add	x1, x1, #0x320
    e214:	add	x1, x1, #0x1a0
    e218:	cmp	x0, x1
    e21c:	b.eq	e2a0 <PyFloat_FromString@plt+0x7810>  // b.none
    e220:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e224:	add	x1, x1, #0x320
    e228:	add	x1, x1, #0x1a0
    e22c:	bl	69c0 <PyType_IsSubtype@plt>
    e230:	cbnz	w0, e2a0 <PyFloat_FromString@plt+0x7810>
    e234:	ldr	x0, [x21, #8]
    e238:	ldr	x1, [x0, #168]
    e23c:	tbnz	w1, #24, e2fc <PyFloat_FromString@plt+0x786c>
    e240:	ldr	x2, [x0, #24]
    e244:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e248:	add	x1, x1, #0x8a8
    e24c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e250:	ldr	x0, [x0, #3936]
    e254:	ldr	x0, [x0]
    e258:	bl	6a10 <PyErr_Format@plt>
    e25c:	ldr	x0, [x19]
    e260:	sub	x0, x0, #0x1
    e264:	str	x0, [x19]
    e268:	mov	x20, #0x0                   	// #0
    e26c:	cbz	x0, e320 <PyFloat_FromString@plt+0x7890>
    e270:	ldr	x21, [sp, #32]
    e274:	b	e394 <PyFloat_FromString@plt+0x7904>
    e278:	mov	x2, x20
    e27c:	mov	x1, x19
    e280:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e284:	add	x0, x0, #0x320
    e288:	add	x0, x0, #0x1a0
    e28c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e290:	mov	x19, x0
    e294:	cbz	x0, e3a4 <PyFloat_FromString@plt+0x7914>
    e298:	str	x21, [sp, #32]
    e29c:	b	e204 <PyFloat_FromString@plt+0x7774>
    e2a0:	ldr	x0, [x21]
    e2a4:	add	x0, x0, #0x1
    e2a8:	str	x0, [x21]
    e2ac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e2b0:	add	x0, x0, #0x320
    e2b4:	add	x0, x0, #0x1a0
    e2b8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    e2bc:	mov	x20, x0
    e2c0:	cbz	x0, e330 <PyFloat_FromString@plt+0x78a0>
    e2c4:	add	x2, x21, #0x18
    e2c8:	add	x1, x19, #0x18
    e2cc:	add	x0, x0, #0x18
    e2d0:	bl	2abd8 <PyInit__decimal@@Base+0x10a38>
    e2d4:	ldr	x0, [x19]
    e2d8:	sub	x0, x0, #0x1
    e2dc:	str	x0, [x19]
    e2e0:	cbz	x0, e374 <PyFloat_FromString@plt+0x78e4>
    e2e4:	ldr	x0, [x21]
    e2e8:	sub	x0, x0, #0x1
    e2ec:	str	x0, [x21]
    e2f0:	cbz	x0, e380 <PyFloat_FromString@plt+0x78f0>
    e2f4:	ldr	x21, [sp, #32]
    e2f8:	b	e394 <PyFloat_FromString@plt+0x7904>
    e2fc:	mov	x2, x20
    e300:	mov	x1, x21
    e304:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e308:	add	x0, x0, #0x320
    e30c:	add	x0, x0, #0x1a0
    e310:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e314:	mov	x21, x0
    e318:	cbnz	x0, e2ac <PyFloat_FromString@plt+0x781c>
    e31c:	b	e25c <PyFloat_FromString@plt+0x77cc>
    e320:	mov	x0, x19
    e324:	bl	65d0 <_Py_Dealloc@plt>
    e328:	ldr	x21, [sp, #32]
    e32c:	b	e394 <PyFloat_FromString@plt+0x7904>
    e330:	ldr	x0, [x19]
    e334:	sub	x0, x0, #0x1
    e338:	str	x0, [x19]
    e33c:	cbz	x0, e358 <PyFloat_FromString@plt+0x78c8>
    e340:	ldr	x0, [x21]
    e344:	sub	x0, x0, #0x1
    e348:	str	x0, [x21]
    e34c:	cbz	x0, e364 <PyFloat_FromString@plt+0x78d4>
    e350:	ldr	x21, [sp, #32]
    e354:	b	e394 <PyFloat_FromString@plt+0x7904>
    e358:	mov	x0, x19
    e35c:	bl	65d0 <_Py_Dealloc@plt>
    e360:	b	e340 <PyFloat_FromString@plt+0x78b0>
    e364:	mov	x0, x21
    e368:	bl	65d0 <_Py_Dealloc@plt>
    e36c:	ldr	x21, [sp, #32]
    e370:	b	e394 <PyFloat_FromString@plt+0x7904>
    e374:	mov	x0, x19
    e378:	bl	65d0 <_Py_Dealloc@plt>
    e37c:	b	e2e4 <PyFloat_FromString@plt+0x7854>
    e380:	mov	x0, x21
    e384:	bl	65d0 <_Py_Dealloc@plt>
    e388:	ldr	x21, [sp, #32]
    e38c:	b	e394 <PyFloat_FromString@plt+0x7904>
    e390:	mov	x20, #0x0                   	// #0
    e394:	mov	x0, x20
    e398:	ldp	x19, x20, [sp, #16]
    e39c:	ldp	x29, x30, [sp], #64
    e3a0:	ret
    e3a4:	mov	x20, x0
    e3a8:	b	e394 <PyFloat_FromString@plt+0x7904>
    e3ac:	stp	x29, x30, [sp, #-64]!
    e3b0:	mov	x29, sp
    e3b4:	stp	x19, x20, [sp, #16]
    e3b8:	mov	x20, x0
    e3bc:	mov	x0, x1
    e3c0:	add	x3, sp, #0x30
    e3c4:	add	x2, sp, #0x38
    e3c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e3cc:	add	x1, x1, #0xb48
    e3d0:	bl	68e0 <PyArg_ParseTuple@plt>
    e3d4:	cbz	w0, e5d4 <PyFloat_FromString@plt+0x7b44>
    e3d8:	ldr	x19, [sp, #56]
    e3dc:	ldr	x0, [x19, #8]
    e3e0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e3e4:	add	x1, x1, #0x320
    e3e8:	add	x1, x1, #0x1a0
    e3ec:	cmp	x0, x1
    e3f0:	b.eq	e438 <PyFloat_FromString@plt+0x79a8>  // b.none
    e3f4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e3f8:	add	x1, x1, #0x320
    e3fc:	add	x1, x1, #0x1a0
    e400:	bl	69c0 <PyType_IsSubtype@plt>
    e404:	cbnz	w0, e438 <PyFloat_FromString@plt+0x79a8>
    e408:	ldr	x0, [x19, #8]
    e40c:	ldr	x1, [x0, #168]
    e410:	tbnz	w1, #24, e4bc <PyFloat_FromString@plt+0x7a2c>
    e414:	ldr	x2, [x0, #24]
    e418:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e41c:	add	x1, x1, #0x8a8
    e420:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e424:	ldr	x0, [x0, #3936]
    e428:	ldr	x0, [x0]
    e42c:	bl	6a10 <PyErr_Format@plt>
    e430:	mov	x20, #0x0                   	// #0
    e434:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e438:	str	x21, [sp, #32]
    e43c:	ldr	x0, [x19]
    e440:	add	x0, x0, #0x1
    e444:	str	x0, [x19]
    e448:	ldr	x21, [sp, #48]
    e44c:	ldr	x0, [x21, #8]
    e450:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e454:	add	x1, x1, #0x320
    e458:	add	x1, x1, #0x1a0
    e45c:	cmp	x0, x1
    e460:	b.eq	e4e4 <PyFloat_FromString@plt+0x7a54>  // b.none
    e464:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e468:	add	x1, x1, #0x320
    e46c:	add	x1, x1, #0x1a0
    e470:	bl	69c0 <PyType_IsSubtype@plt>
    e474:	cbnz	w0, e4e4 <PyFloat_FromString@plt+0x7a54>
    e478:	ldr	x0, [x21, #8]
    e47c:	ldr	x1, [x0, #168]
    e480:	tbnz	w1, #24, e540 <PyFloat_FromString@plt+0x7ab0>
    e484:	ldr	x2, [x0, #24]
    e488:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e48c:	add	x1, x1, #0x8a8
    e490:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e494:	ldr	x0, [x0, #3936]
    e498:	ldr	x0, [x0]
    e49c:	bl	6a10 <PyErr_Format@plt>
    e4a0:	ldr	x0, [x19]
    e4a4:	sub	x0, x0, #0x1
    e4a8:	str	x0, [x19]
    e4ac:	mov	x20, #0x0                   	// #0
    e4b0:	cbz	x0, e564 <PyFloat_FromString@plt+0x7ad4>
    e4b4:	ldr	x21, [sp, #32]
    e4b8:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e4bc:	mov	x2, x20
    e4c0:	mov	x1, x19
    e4c4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e4c8:	add	x0, x0, #0x320
    e4cc:	add	x0, x0, #0x1a0
    e4d0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e4d4:	mov	x19, x0
    e4d8:	cbz	x0, e5e8 <PyFloat_FromString@plt+0x7b58>
    e4dc:	str	x21, [sp, #32]
    e4e0:	b	e448 <PyFloat_FromString@plt+0x79b8>
    e4e4:	ldr	x0, [x21]
    e4e8:	add	x0, x0, #0x1
    e4ec:	str	x0, [x21]
    e4f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e4f4:	add	x0, x0, #0x320
    e4f8:	add	x0, x0, #0x1a0
    e4fc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    e500:	mov	x20, x0
    e504:	cbz	x0, e574 <PyFloat_FromString@plt+0x7ae4>
    e508:	add	x2, x21, #0x18
    e50c:	add	x1, x19, #0x18
    e510:	add	x0, x0, #0x18
    e514:	bl	2ab04 <PyInit__decimal@@Base+0x10964>
    e518:	ldr	x0, [x19]
    e51c:	sub	x0, x0, #0x1
    e520:	str	x0, [x19]
    e524:	cbz	x0, e5b8 <PyFloat_FromString@plt+0x7b28>
    e528:	ldr	x0, [x21]
    e52c:	sub	x0, x0, #0x1
    e530:	str	x0, [x21]
    e534:	cbz	x0, e5c4 <PyFloat_FromString@plt+0x7b34>
    e538:	ldr	x21, [sp, #32]
    e53c:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e540:	mov	x2, x20
    e544:	mov	x1, x21
    e548:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e54c:	add	x0, x0, #0x320
    e550:	add	x0, x0, #0x1a0
    e554:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e558:	mov	x21, x0
    e55c:	cbnz	x0, e4f0 <PyFloat_FromString@plt+0x7a60>
    e560:	b	e4a0 <PyFloat_FromString@plt+0x7a10>
    e564:	mov	x0, x19
    e568:	bl	65d0 <_Py_Dealloc@plt>
    e56c:	ldr	x21, [sp, #32]
    e570:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e574:	ldr	x0, [x19]
    e578:	sub	x0, x0, #0x1
    e57c:	str	x0, [x19]
    e580:	cbz	x0, e59c <PyFloat_FromString@plt+0x7b0c>
    e584:	ldr	x0, [x21]
    e588:	sub	x0, x0, #0x1
    e58c:	str	x0, [x21]
    e590:	cbz	x0, e5a8 <PyFloat_FromString@plt+0x7b18>
    e594:	ldr	x21, [sp, #32]
    e598:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e59c:	mov	x0, x19
    e5a0:	bl	65d0 <_Py_Dealloc@plt>
    e5a4:	b	e584 <PyFloat_FromString@plt+0x7af4>
    e5a8:	mov	x0, x21
    e5ac:	bl	65d0 <_Py_Dealloc@plt>
    e5b0:	ldr	x21, [sp, #32]
    e5b4:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e5b8:	mov	x0, x19
    e5bc:	bl	65d0 <_Py_Dealloc@plt>
    e5c0:	b	e528 <PyFloat_FromString@plt+0x7a98>
    e5c4:	mov	x0, x21
    e5c8:	bl	65d0 <_Py_Dealloc@plt>
    e5cc:	ldr	x21, [sp, #32]
    e5d0:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e5d4:	mov	x20, #0x0                   	// #0
    e5d8:	mov	x0, x20
    e5dc:	ldp	x19, x20, [sp, #16]
    e5e0:	ldp	x29, x30, [sp], #64
    e5e4:	ret
    e5e8:	mov	x20, x0
    e5ec:	b	e5d8 <PyFloat_FromString@plt+0x7b48>
    e5f0:	stp	x29, x30, [sp, #-80]!
    e5f4:	mov	x29, sp
    e5f8:	stp	x19, x20, [sp, #16]
    e5fc:	stp	x21, x22, [sp, #32]
    e600:	mov	x21, x0
    e604:	mov	x0, x1
    e608:	str	wzr, [sp, #60]
    e60c:	add	x3, sp, #0x40
    e610:	add	x2, sp, #0x48
    e614:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e618:	add	x1, x1, #0xb48
    e61c:	bl	68e0 <PyArg_ParseTuple@plt>
    e620:	mov	x20, #0x0                   	// #0
    e624:	cbz	w0, e79c <PyFloat_FromString@plt+0x7d0c>
    e628:	ldr	x19, [sp, #72]
    e62c:	ldr	x0, [x19, #8]
    e630:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e634:	add	x1, x1, #0x320
    e638:	add	x1, x1, #0x1a0
    e63c:	cmp	x0, x1
    e640:	b.eq	e688 <PyFloat_FromString@plt+0x7bf8>  // b.none
    e644:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e648:	add	x1, x1, #0x320
    e64c:	add	x1, x1, #0x1a0
    e650:	bl	69c0 <PyType_IsSubtype@plt>
    e654:	cbnz	w0, e688 <PyFloat_FromString@plt+0x7bf8>
    e658:	ldr	x0, [x19, #8]
    e65c:	ldr	x1, [x0, #168]
    e660:	tbnz	w1, #24, e70c <PyFloat_FromString@plt+0x7c7c>
    e664:	ldr	x2, [x0, #24]
    e668:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e66c:	add	x1, x1, #0x8a8
    e670:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e674:	ldr	x0, [x0, #3936]
    e678:	ldr	x0, [x0]
    e67c:	bl	6a10 <PyErr_Format@plt>
    e680:	mov	x20, #0x0                   	// #0
    e684:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e688:	ldr	x0, [x19]
    e68c:	add	x0, x0, #0x1
    e690:	str	x0, [x19]
    e694:	ldr	x22, [sp, #64]
    e698:	ldr	x0, [x22, #8]
    e69c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e6a0:	add	x1, x1, #0x320
    e6a4:	add	x1, x1, #0x1a0
    e6a8:	cmp	x0, x1
    e6ac:	b.eq	e734 <PyFloat_FromString@plt+0x7ca4>  // b.none
    e6b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e6b4:	add	x1, x1, #0x320
    e6b8:	add	x1, x1, #0x1a0
    e6bc:	bl	69c0 <PyType_IsSubtype@plt>
    e6c0:	cbnz	w0, e734 <PyFloat_FromString@plt+0x7ca4>
    e6c4:	ldr	x0, [x22, #8]
    e6c8:	ldr	x1, [x0, #168]
    e6cc:	tbnz	w1, #24, e7b0 <PyFloat_FromString@plt+0x7d20>
    e6d0:	ldr	x2, [x0, #24]
    e6d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e6d8:	add	x1, x1, #0x8a8
    e6dc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e6e0:	ldr	x0, [x0, #3936]
    e6e4:	ldr	x0, [x0]
    e6e8:	bl	6a10 <PyErr_Format@plt>
    e6ec:	ldr	x0, [x19]
    e6f0:	sub	x0, x0, #0x1
    e6f4:	str	x0, [x19]
    e6f8:	mov	x20, #0x0                   	// #0
    e6fc:	cbnz	x0, e79c <PyFloat_FromString@plt+0x7d0c>
    e700:	mov	x0, x19
    e704:	bl	65d0 <_Py_Dealloc@plt>
    e708:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e70c:	mov	x2, x21
    e710:	mov	x1, x19
    e714:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e718:	add	x0, x0, #0x320
    e71c:	add	x0, x0, #0x1a0
    e720:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e724:	mov	x19, x0
    e728:	cbnz	x0, e694 <PyFloat_FromString@plt+0x7c04>
    e72c:	mov	x20, x0
    e730:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e734:	ldr	x0, [x22]
    e738:	add	x0, x0, #0x1
    e73c:	str	x0, [x22]
    e740:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e744:	add	x0, x0, #0x320
    e748:	add	x0, x0, #0x1a0
    e74c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    e750:	mov	x20, x0
    e754:	cbz	x0, e7d4 <PyFloat_FromString@plt+0x7d44>
    e758:	add	x3, sp, #0x3c
    e75c:	add	x2, x22, #0x18
    e760:	add	x1, x19, #0x18
    e764:	add	x0, x0, #0x18
    e768:	bl	2a7f4 <PyInit__decimal@@Base+0x10654>
    e76c:	ldr	x0, [x19]
    e770:	sub	x0, x0, #0x1
    e774:	str	x0, [x19]
    e778:	cbz	x0, e80c <PyFloat_FromString@plt+0x7d7c>
    e77c:	ldr	x0, [x22]
    e780:	sub	x0, x0, #0x1
    e784:	str	x0, [x22]
    e788:	cbz	x0, e818 <PyFloat_FromString@plt+0x7d88>
    e78c:	ldr	w1, [sp, #60]
    e790:	mov	x0, x21
    e794:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    e798:	cbnz	w0, e824 <PyFloat_FromString@plt+0x7d94>
    e79c:	mov	x0, x20
    e7a0:	ldp	x19, x20, [sp, #16]
    e7a4:	ldp	x21, x22, [sp, #32]
    e7a8:	ldp	x29, x30, [sp], #80
    e7ac:	ret
    e7b0:	mov	x2, x21
    e7b4:	mov	x1, x22
    e7b8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e7bc:	add	x0, x0, #0x320
    e7c0:	add	x0, x0, #0x1a0
    e7c4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e7c8:	mov	x22, x0
    e7cc:	cbnz	x0, e740 <PyFloat_FromString@plt+0x7cb0>
    e7d0:	b	e6ec <PyFloat_FromString@plt+0x7c5c>
    e7d4:	ldr	x0, [x19]
    e7d8:	sub	x0, x0, #0x1
    e7dc:	str	x0, [x19]
    e7e0:	cbz	x0, e800 <PyFloat_FromString@plt+0x7d70>
    e7e4:	ldr	x0, [x22]
    e7e8:	sub	x0, x0, #0x1
    e7ec:	str	x0, [x22]
    e7f0:	cbnz	x0, e79c <PyFloat_FromString@plt+0x7d0c>
    e7f4:	mov	x0, x22
    e7f8:	bl	65d0 <_Py_Dealloc@plt>
    e7fc:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e800:	mov	x0, x19
    e804:	bl	65d0 <_Py_Dealloc@plt>
    e808:	b	e7e4 <PyFloat_FromString@plt+0x7d54>
    e80c:	mov	x0, x19
    e810:	bl	65d0 <_Py_Dealloc@plt>
    e814:	b	e77c <PyFloat_FromString@plt+0x7cec>
    e818:	mov	x0, x22
    e81c:	bl	65d0 <_Py_Dealloc@plt>
    e820:	b	e78c <PyFloat_FromString@plt+0x7cfc>
    e824:	ldr	x0, [x20]
    e828:	sub	x0, x0, #0x1
    e82c:	str	x0, [x20]
    e830:	cbz	x0, e83c <PyFloat_FromString@plt+0x7dac>
    e834:	mov	x20, #0x0                   	// #0
    e838:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e83c:	mov	x0, x20
    e840:	bl	65d0 <_Py_Dealloc@plt>
    e844:	mov	x20, #0x0                   	// #0
    e848:	b	e79c <PyFloat_FromString@plt+0x7d0c>
    e84c:	stp	x29, x30, [sp, #-80]!
    e850:	mov	x29, sp
    e854:	stp	x19, x20, [sp, #16]
    e858:	stp	x21, x22, [sp, #32]
    e85c:	mov	x20, x0
    e860:	mov	x0, x1
    e864:	str	wzr, [sp, #60]
    e868:	add	x3, sp, #0x40
    e86c:	add	x2, sp, #0x48
    e870:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e874:	add	x1, x1, #0xb48
    e878:	bl	68e0 <PyArg_ParseTuple@plt>
    e87c:	mov	x21, #0x0                   	// #0
    e880:	cbz	w0, e9fc <PyFloat_FromString@plt+0x7f6c>
    e884:	ldr	x19, [sp, #72]
    e888:	ldr	x0, [x19, #8]
    e88c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e890:	add	x1, x1, #0x320
    e894:	add	x1, x1, #0x1a0
    e898:	cmp	x0, x1
    e89c:	b.eq	e8e4 <PyFloat_FromString@plt+0x7e54>  // b.none
    e8a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e8a4:	add	x1, x1, #0x320
    e8a8:	add	x1, x1, #0x1a0
    e8ac:	bl	69c0 <PyType_IsSubtype@plt>
    e8b0:	cbnz	w0, e8e4 <PyFloat_FromString@plt+0x7e54>
    e8b4:	ldr	x0, [x19, #8]
    e8b8:	ldr	x1, [x0, #168]
    e8bc:	tbnz	w1, #24, e968 <PyFloat_FromString@plt+0x7ed8>
    e8c0:	ldr	x2, [x0, #24]
    e8c4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e8c8:	add	x1, x1, #0x8a8
    e8cc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e8d0:	ldr	x0, [x0, #3936]
    e8d4:	ldr	x0, [x0]
    e8d8:	bl	6a10 <PyErr_Format@plt>
    e8dc:	mov	x21, #0x0                   	// #0
    e8e0:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    e8e4:	ldr	x0, [x19]
    e8e8:	add	x0, x0, #0x1
    e8ec:	str	x0, [x19]
    e8f0:	ldr	x22, [sp, #64]
    e8f4:	ldr	x0, [x22, #8]
    e8f8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e8fc:	add	x1, x1, #0x320
    e900:	add	x1, x1, #0x1a0
    e904:	cmp	x0, x1
    e908:	b.eq	e990 <PyFloat_FromString@plt+0x7f00>  // b.none
    e90c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    e910:	add	x1, x1, #0x320
    e914:	add	x1, x1, #0x1a0
    e918:	bl	69c0 <PyType_IsSubtype@plt>
    e91c:	cbnz	w0, e990 <PyFloat_FromString@plt+0x7f00>
    e920:	ldr	x0, [x22, #8]
    e924:	ldr	x1, [x0, #168]
    e928:	tbnz	w1, #24, ea10 <PyFloat_FromString@plt+0x7f80>
    e92c:	ldr	x2, [x0, #24]
    e930:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    e934:	add	x1, x1, #0x8a8
    e938:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    e93c:	ldr	x0, [x0, #3936]
    e940:	ldr	x0, [x0]
    e944:	bl	6a10 <PyErr_Format@plt>
    e948:	ldr	x0, [x19]
    e94c:	sub	x0, x0, #0x1
    e950:	str	x0, [x19]
    e954:	mov	x21, #0x0                   	// #0
    e958:	cbnz	x0, e9fc <PyFloat_FromString@plt+0x7f6c>
    e95c:	mov	x0, x19
    e960:	bl	65d0 <_Py_Dealloc@plt>
    e964:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    e968:	mov	x2, x20
    e96c:	mov	x1, x19
    e970:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e974:	add	x0, x0, #0x320
    e978:	add	x0, x0, #0x1a0
    e97c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    e980:	mov	x19, x0
    e984:	cbnz	x0, e8f0 <PyFloat_FromString@plt+0x7e60>
    e988:	mov	x21, x0
    e98c:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    e990:	ldr	x0, [x22]
    e994:	add	x0, x0, #0x1
    e998:	str	x0, [x22]
    e99c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    e9a0:	add	x0, x0, #0x320
    e9a4:	add	x0, x0, #0x1a0
    e9a8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    e9ac:	mov	x21, x0
    e9b0:	cbz	x0, ea34 <PyFloat_FromString@plt+0x7fa4>
    e9b4:	add	x4, sp, #0x3c
    e9b8:	add	x3, x20, #0x10
    e9bc:	add	x2, x22, #0x18
    e9c0:	add	x1, x19, #0x18
    e9c4:	add	x0, x0, #0x18
    e9c8:	bl	2d178 <PyInit__decimal@@Base+0x12fd8>
    e9cc:	ldr	x0, [x19]
    e9d0:	sub	x0, x0, #0x1
    e9d4:	str	x0, [x19]
    e9d8:	cbz	x0, ea6c <PyFloat_FromString@plt+0x7fdc>
    e9dc:	ldr	x0, [x22]
    e9e0:	sub	x0, x0, #0x1
    e9e4:	str	x0, [x22]
    e9e8:	cbz	x0, ea78 <PyFloat_FromString@plt+0x7fe8>
    e9ec:	ldr	w1, [sp, #60]
    e9f0:	mov	x0, x20
    e9f4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    e9f8:	cbnz	w0, ea84 <PyFloat_FromString@plt+0x7ff4>
    e9fc:	mov	x0, x21
    ea00:	ldp	x19, x20, [sp, #16]
    ea04:	ldp	x21, x22, [sp, #32]
    ea08:	ldp	x29, x30, [sp], #80
    ea0c:	ret
    ea10:	mov	x2, x20
    ea14:	mov	x1, x22
    ea18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ea1c:	add	x0, x0, #0x320
    ea20:	add	x0, x0, #0x1a0
    ea24:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ea28:	mov	x22, x0
    ea2c:	cbnz	x0, e99c <PyFloat_FromString@plt+0x7f0c>
    ea30:	b	e948 <PyFloat_FromString@plt+0x7eb8>
    ea34:	ldr	x0, [x19]
    ea38:	sub	x0, x0, #0x1
    ea3c:	str	x0, [x19]
    ea40:	cbz	x0, ea60 <PyFloat_FromString@plt+0x7fd0>
    ea44:	ldr	x0, [x22]
    ea48:	sub	x0, x0, #0x1
    ea4c:	str	x0, [x22]
    ea50:	cbnz	x0, e9fc <PyFloat_FromString@plt+0x7f6c>
    ea54:	mov	x0, x22
    ea58:	bl	65d0 <_Py_Dealloc@plt>
    ea5c:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    ea60:	mov	x0, x19
    ea64:	bl	65d0 <_Py_Dealloc@plt>
    ea68:	b	ea44 <PyFloat_FromString@plt+0x7fb4>
    ea6c:	mov	x0, x19
    ea70:	bl	65d0 <_Py_Dealloc@plt>
    ea74:	b	e9dc <PyFloat_FromString@plt+0x7f4c>
    ea78:	mov	x0, x22
    ea7c:	bl	65d0 <_Py_Dealloc@plt>
    ea80:	b	e9ec <PyFloat_FromString@plt+0x7f5c>
    ea84:	ldr	x0, [x21]
    ea88:	sub	x0, x0, #0x1
    ea8c:	str	x0, [x21]
    ea90:	cbz	x0, ea9c <PyFloat_FromString@plt+0x800c>
    ea94:	mov	x21, #0x0                   	// #0
    ea98:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    ea9c:	mov	x0, x21
    eaa0:	bl	65d0 <_Py_Dealloc@plt>
    eaa4:	mov	x21, #0x0                   	// #0
    eaa8:	b	e9fc <PyFloat_FromString@plt+0x7f6c>
    eaac:	stp	x29, x30, [sp, #-80]!
    eab0:	mov	x29, sp
    eab4:	stp	x19, x20, [sp, #16]
    eab8:	stp	x21, x22, [sp, #32]
    eabc:	mov	x20, x0
    eac0:	mov	x0, x1
    eac4:	str	wzr, [sp, #60]
    eac8:	add	x3, sp, #0x40
    eacc:	add	x2, sp, #0x48
    ead0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ead4:	add	x1, x1, #0xb48
    ead8:	bl	68e0 <PyArg_ParseTuple@plt>
    eadc:	mov	x21, #0x0                   	// #0
    eae0:	cbz	w0, ec5c <PyFloat_FromString@plt+0x81cc>
    eae4:	ldr	x19, [sp, #72]
    eae8:	ldr	x0, [x19, #8]
    eaec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    eaf0:	add	x1, x1, #0x320
    eaf4:	add	x1, x1, #0x1a0
    eaf8:	cmp	x0, x1
    eafc:	b.eq	eb44 <PyFloat_FromString@plt+0x80b4>  // b.none
    eb00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    eb04:	add	x1, x1, #0x320
    eb08:	add	x1, x1, #0x1a0
    eb0c:	bl	69c0 <PyType_IsSubtype@plt>
    eb10:	cbnz	w0, eb44 <PyFloat_FromString@plt+0x80b4>
    eb14:	ldr	x0, [x19, #8]
    eb18:	ldr	x1, [x0, #168]
    eb1c:	tbnz	w1, #24, ebc8 <PyFloat_FromString@plt+0x8138>
    eb20:	ldr	x2, [x0, #24]
    eb24:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    eb28:	add	x1, x1, #0x8a8
    eb2c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    eb30:	ldr	x0, [x0, #3936]
    eb34:	ldr	x0, [x0]
    eb38:	bl	6a10 <PyErr_Format@plt>
    eb3c:	mov	x21, #0x0                   	// #0
    eb40:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    eb44:	ldr	x0, [x19]
    eb48:	add	x0, x0, #0x1
    eb4c:	str	x0, [x19]
    eb50:	ldr	x22, [sp, #64]
    eb54:	ldr	x0, [x22, #8]
    eb58:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    eb5c:	add	x1, x1, #0x320
    eb60:	add	x1, x1, #0x1a0
    eb64:	cmp	x0, x1
    eb68:	b.eq	ebf0 <PyFloat_FromString@plt+0x8160>  // b.none
    eb6c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    eb70:	add	x1, x1, #0x320
    eb74:	add	x1, x1, #0x1a0
    eb78:	bl	69c0 <PyType_IsSubtype@plt>
    eb7c:	cbnz	w0, ebf0 <PyFloat_FromString@plt+0x8160>
    eb80:	ldr	x0, [x22, #8]
    eb84:	ldr	x1, [x0, #168]
    eb88:	tbnz	w1, #24, ec70 <PyFloat_FromString@plt+0x81e0>
    eb8c:	ldr	x2, [x0, #24]
    eb90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    eb94:	add	x1, x1, #0x8a8
    eb98:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    eb9c:	ldr	x0, [x0, #3936]
    eba0:	ldr	x0, [x0]
    eba4:	bl	6a10 <PyErr_Format@plt>
    eba8:	ldr	x0, [x19]
    ebac:	sub	x0, x0, #0x1
    ebb0:	str	x0, [x19]
    ebb4:	mov	x21, #0x0                   	// #0
    ebb8:	cbnz	x0, ec5c <PyFloat_FromString@plt+0x81cc>
    ebbc:	mov	x0, x19
    ebc0:	bl	65d0 <_Py_Dealloc@plt>
    ebc4:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    ebc8:	mov	x2, x20
    ebcc:	mov	x1, x19
    ebd0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ebd4:	add	x0, x0, #0x320
    ebd8:	add	x0, x0, #0x1a0
    ebdc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ebe0:	mov	x19, x0
    ebe4:	cbnz	x0, eb50 <PyFloat_FromString@plt+0x80c0>
    ebe8:	mov	x21, x0
    ebec:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    ebf0:	ldr	x0, [x22]
    ebf4:	add	x0, x0, #0x1
    ebf8:	str	x0, [x22]
    ebfc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ec00:	add	x0, x0, #0x320
    ec04:	add	x0, x0, #0x1a0
    ec08:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    ec0c:	mov	x21, x0
    ec10:	cbz	x0, ec94 <PyFloat_FromString@plt+0x8204>
    ec14:	add	x4, sp, #0x3c
    ec18:	add	x3, x20, #0x10
    ec1c:	add	x2, x22, #0x18
    ec20:	add	x1, x19, #0x18
    ec24:	add	x0, x0, #0x18
    ec28:	bl	2dce0 <PyInit__decimal@@Base+0x13b40>
    ec2c:	ldr	x0, [x19]
    ec30:	sub	x0, x0, #0x1
    ec34:	str	x0, [x19]
    ec38:	cbz	x0, eccc <PyFloat_FromString@plt+0x823c>
    ec3c:	ldr	x0, [x22]
    ec40:	sub	x0, x0, #0x1
    ec44:	str	x0, [x22]
    ec48:	cbz	x0, ecd8 <PyFloat_FromString@plt+0x8248>
    ec4c:	ldr	w1, [sp, #60]
    ec50:	mov	x0, x20
    ec54:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    ec58:	cbnz	w0, ece4 <PyFloat_FromString@plt+0x8254>
    ec5c:	mov	x0, x21
    ec60:	ldp	x19, x20, [sp, #16]
    ec64:	ldp	x21, x22, [sp, #32]
    ec68:	ldp	x29, x30, [sp], #80
    ec6c:	ret
    ec70:	mov	x2, x20
    ec74:	mov	x1, x22
    ec78:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ec7c:	add	x0, x0, #0x320
    ec80:	add	x0, x0, #0x1a0
    ec84:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ec88:	mov	x22, x0
    ec8c:	cbnz	x0, ebfc <PyFloat_FromString@plt+0x816c>
    ec90:	b	eba8 <PyFloat_FromString@plt+0x8118>
    ec94:	ldr	x0, [x19]
    ec98:	sub	x0, x0, #0x1
    ec9c:	str	x0, [x19]
    eca0:	cbz	x0, ecc0 <PyFloat_FromString@plt+0x8230>
    eca4:	ldr	x0, [x22]
    eca8:	sub	x0, x0, #0x1
    ecac:	str	x0, [x22]
    ecb0:	cbnz	x0, ec5c <PyFloat_FromString@plt+0x81cc>
    ecb4:	mov	x0, x22
    ecb8:	bl	65d0 <_Py_Dealloc@plt>
    ecbc:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    ecc0:	mov	x0, x19
    ecc4:	bl	65d0 <_Py_Dealloc@plt>
    ecc8:	b	eca4 <PyFloat_FromString@plt+0x8214>
    eccc:	mov	x0, x19
    ecd0:	bl	65d0 <_Py_Dealloc@plt>
    ecd4:	b	ec3c <PyFloat_FromString@plt+0x81ac>
    ecd8:	mov	x0, x22
    ecdc:	bl	65d0 <_Py_Dealloc@plt>
    ece0:	b	ec4c <PyFloat_FromString@plt+0x81bc>
    ece4:	ldr	x0, [x21]
    ece8:	sub	x0, x0, #0x1
    ecec:	str	x0, [x21]
    ecf0:	cbz	x0, ecfc <PyFloat_FromString@plt+0x826c>
    ecf4:	mov	x21, #0x0                   	// #0
    ecf8:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    ecfc:	mov	x0, x21
    ed00:	bl	65d0 <_Py_Dealloc@plt>
    ed04:	mov	x21, #0x0                   	// #0
    ed08:	b	ec5c <PyFloat_FromString@plt+0x81cc>
    ed0c:	stp	x29, x30, [sp, #-80]!
    ed10:	mov	x29, sp
    ed14:	stp	x19, x20, [sp, #16]
    ed18:	stp	x21, x22, [sp, #32]
    ed1c:	mov	x20, x0
    ed20:	mov	x0, x1
    ed24:	str	wzr, [sp, #60]
    ed28:	add	x3, sp, #0x40
    ed2c:	add	x2, sp, #0x48
    ed30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ed34:	add	x1, x1, #0xb48
    ed38:	bl	68e0 <PyArg_ParseTuple@plt>
    ed3c:	mov	x21, #0x0                   	// #0
    ed40:	cbz	w0, eebc <PyFloat_FromString@plt+0x842c>
    ed44:	ldr	x19, [sp, #72]
    ed48:	ldr	x0, [x19, #8]
    ed4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ed50:	add	x1, x1, #0x320
    ed54:	add	x1, x1, #0x1a0
    ed58:	cmp	x0, x1
    ed5c:	b.eq	eda4 <PyFloat_FromString@plt+0x8314>  // b.none
    ed60:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    ed64:	add	x1, x1, #0x320
    ed68:	add	x1, x1, #0x1a0
    ed6c:	bl	69c0 <PyType_IsSubtype@plt>
    ed70:	cbnz	w0, eda4 <PyFloat_FromString@plt+0x8314>
    ed74:	ldr	x0, [x19, #8]
    ed78:	ldr	x1, [x0, #168]
    ed7c:	tbnz	w1, #24, ee28 <PyFloat_FromString@plt+0x8398>
    ed80:	ldr	x2, [x0, #24]
    ed84:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ed88:	add	x1, x1, #0x8a8
    ed8c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    ed90:	ldr	x0, [x0, #3936]
    ed94:	ldr	x0, [x0]
    ed98:	bl	6a10 <PyErr_Format@plt>
    ed9c:	mov	x21, #0x0                   	// #0
    eda0:	b	eebc <PyFloat_FromString@plt+0x842c>
    eda4:	ldr	x0, [x19]
    eda8:	add	x0, x0, #0x1
    edac:	str	x0, [x19]
    edb0:	ldr	x22, [sp, #64]
    edb4:	ldr	x0, [x22, #8]
    edb8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    edbc:	add	x1, x1, #0x320
    edc0:	add	x1, x1, #0x1a0
    edc4:	cmp	x0, x1
    edc8:	b.eq	ee50 <PyFloat_FromString@plt+0x83c0>  // b.none
    edcc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    edd0:	add	x1, x1, #0x320
    edd4:	add	x1, x1, #0x1a0
    edd8:	bl	69c0 <PyType_IsSubtype@plt>
    eddc:	cbnz	w0, ee50 <PyFloat_FromString@plt+0x83c0>
    ede0:	ldr	x0, [x22, #8]
    ede4:	ldr	x1, [x0, #168]
    ede8:	tbnz	w1, #24, eed0 <PyFloat_FromString@plt+0x8440>
    edec:	ldr	x2, [x0, #24]
    edf0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    edf4:	add	x1, x1, #0x8a8
    edf8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    edfc:	ldr	x0, [x0, #3936]
    ee00:	ldr	x0, [x0]
    ee04:	bl	6a10 <PyErr_Format@plt>
    ee08:	ldr	x0, [x19]
    ee0c:	sub	x0, x0, #0x1
    ee10:	str	x0, [x19]
    ee14:	mov	x21, #0x0                   	// #0
    ee18:	cbnz	x0, eebc <PyFloat_FromString@plt+0x842c>
    ee1c:	mov	x0, x19
    ee20:	bl	65d0 <_Py_Dealloc@plt>
    ee24:	b	eebc <PyFloat_FromString@plt+0x842c>
    ee28:	mov	x2, x20
    ee2c:	mov	x1, x19
    ee30:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ee34:	add	x0, x0, #0x320
    ee38:	add	x0, x0, #0x1a0
    ee3c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ee40:	mov	x19, x0
    ee44:	cbnz	x0, edb0 <PyFloat_FromString@plt+0x8320>
    ee48:	mov	x21, x0
    ee4c:	b	eebc <PyFloat_FromString@plt+0x842c>
    ee50:	ldr	x0, [x22]
    ee54:	add	x0, x0, #0x1
    ee58:	str	x0, [x22]
    ee5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ee60:	add	x0, x0, #0x320
    ee64:	add	x0, x0, #0x1a0
    ee68:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    ee6c:	mov	x21, x0
    ee70:	cbz	x0, eef4 <PyFloat_FromString@plt+0x8464>
    ee74:	add	x4, sp, #0x3c
    ee78:	add	x3, x20, #0x10
    ee7c:	add	x2, x22, #0x18
    ee80:	add	x1, x19, #0x18
    ee84:	add	x0, x0, #0x18
    ee88:	bl	3628c <PyInit__decimal@@Base+0x1c0ec>
    ee8c:	ldr	x0, [x19]
    ee90:	sub	x0, x0, #0x1
    ee94:	str	x0, [x19]
    ee98:	cbz	x0, ef2c <PyFloat_FromString@plt+0x849c>
    ee9c:	ldr	x0, [x22]
    eea0:	sub	x0, x0, #0x1
    eea4:	str	x0, [x22]
    eea8:	cbz	x0, ef38 <PyFloat_FromString@plt+0x84a8>
    eeac:	ldr	w1, [sp, #60]
    eeb0:	mov	x0, x20
    eeb4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    eeb8:	cbnz	w0, ef44 <PyFloat_FromString@plt+0x84b4>
    eebc:	mov	x0, x21
    eec0:	ldp	x19, x20, [sp, #16]
    eec4:	ldp	x21, x22, [sp, #32]
    eec8:	ldp	x29, x30, [sp], #80
    eecc:	ret
    eed0:	mov	x2, x20
    eed4:	mov	x1, x22
    eed8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    eedc:	add	x0, x0, #0x320
    eee0:	add	x0, x0, #0x1a0
    eee4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    eee8:	mov	x22, x0
    eeec:	cbnz	x0, ee5c <PyFloat_FromString@plt+0x83cc>
    eef0:	b	ee08 <PyFloat_FromString@plt+0x8378>
    eef4:	ldr	x0, [x19]
    eef8:	sub	x0, x0, #0x1
    eefc:	str	x0, [x19]
    ef00:	cbz	x0, ef20 <PyFloat_FromString@plt+0x8490>
    ef04:	ldr	x0, [x22]
    ef08:	sub	x0, x0, #0x1
    ef0c:	str	x0, [x22]
    ef10:	cbnz	x0, eebc <PyFloat_FromString@plt+0x842c>
    ef14:	mov	x0, x22
    ef18:	bl	65d0 <_Py_Dealloc@plt>
    ef1c:	b	eebc <PyFloat_FromString@plt+0x842c>
    ef20:	mov	x0, x19
    ef24:	bl	65d0 <_Py_Dealloc@plt>
    ef28:	b	ef04 <PyFloat_FromString@plt+0x8474>
    ef2c:	mov	x0, x19
    ef30:	bl	65d0 <_Py_Dealloc@plt>
    ef34:	b	ee9c <PyFloat_FromString@plt+0x840c>
    ef38:	mov	x0, x22
    ef3c:	bl	65d0 <_Py_Dealloc@plt>
    ef40:	b	eeac <PyFloat_FromString@plt+0x841c>
    ef44:	ldr	x0, [x21]
    ef48:	sub	x0, x0, #0x1
    ef4c:	str	x0, [x21]
    ef50:	cbz	x0, ef5c <PyFloat_FromString@plt+0x84cc>
    ef54:	mov	x21, #0x0                   	// #0
    ef58:	b	eebc <PyFloat_FromString@plt+0x842c>
    ef5c:	mov	x0, x21
    ef60:	bl	65d0 <_Py_Dealloc@plt>
    ef64:	mov	x21, #0x0                   	// #0
    ef68:	b	eebc <PyFloat_FromString@plt+0x842c>
    ef6c:	stp	x29, x30, [sp, #-80]!
    ef70:	mov	x29, sp
    ef74:	stp	x19, x20, [sp, #16]
    ef78:	stp	x21, x22, [sp, #32]
    ef7c:	mov	x20, x0
    ef80:	mov	x0, x1
    ef84:	str	wzr, [sp, #60]
    ef88:	add	x3, sp, #0x40
    ef8c:	add	x2, sp, #0x48
    ef90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    ef94:	add	x1, x1, #0xb48
    ef98:	bl	68e0 <PyArg_ParseTuple@plt>
    ef9c:	mov	x21, #0x0                   	// #0
    efa0:	cbz	w0, f11c <PyFloat_FromString@plt+0x868c>
    efa4:	ldr	x19, [sp, #72]
    efa8:	ldr	x0, [x19, #8]
    efac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    efb0:	add	x1, x1, #0x320
    efb4:	add	x1, x1, #0x1a0
    efb8:	cmp	x0, x1
    efbc:	b.eq	f004 <PyFloat_FromString@plt+0x8574>  // b.none
    efc0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    efc4:	add	x1, x1, #0x320
    efc8:	add	x1, x1, #0x1a0
    efcc:	bl	69c0 <PyType_IsSubtype@plt>
    efd0:	cbnz	w0, f004 <PyFloat_FromString@plt+0x8574>
    efd4:	ldr	x0, [x19, #8]
    efd8:	ldr	x1, [x0, #168]
    efdc:	tbnz	w1, #24, f088 <PyFloat_FromString@plt+0x85f8>
    efe0:	ldr	x2, [x0, #24]
    efe4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    efe8:	add	x1, x1, #0x8a8
    efec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    eff0:	ldr	x0, [x0, #3936]
    eff4:	ldr	x0, [x0]
    eff8:	bl	6a10 <PyErr_Format@plt>
    effc:	mov	x21, #0x0                   	// #0
    f000:	b	f11c <PyFloat_FromString@plt+0x868c>
    f004:	ldr	x0, [x19]
    f008:	add	x0, x0, #0x1
    f00c:	str	x0, [x19]
    f010:	ldr	x22, [sp, #64]
    f014:	ldr	x0, [x22, #8]
    f018:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f01c:	add	x1, x1, #0x320
    f020:	add	x1, x1, #0x1a0
    f024:	cmp	x0, x1
    f028:	b.eq	f0b0 <PyFloat_FromString@plt+0x8620>  // b.none
    f02c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f030:	add	x1, x1, #0x320
    f034:	add	x1, x1, #0x1a0
    f038:	bl	69c0 <PyType_IsSubtype@plt>
    f03c:	cbnz	w0, f0b0 <PyFloat_FromString@plt+0x8620>
    f040:	ldr	x0, [x22, #8]
    f044:	ldr	x1, [x0, #168]
    f048:	tbnz	w1, #24, f130 <PyFloat_FromString@plt+0x86a0>
    f04c:	ldr	x2, [x0, #24]
    f050:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f054:	add	x1, x1, #0x8a8
    f058:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f05c:	ldr	x0, [x0, #3936]
    f060:	ldr	x0, [x0]
    f064:	bl	6a10 <PyErr_Format@plt>
    f068:	ldr	x0, [x19]
    f06c:	sub	x0, x0, #0x1
    f070:	str	x0, [x19]
    f074:	mov	x21, #0x0                   	// #0
    f078:	cbnz	x0, f11c <PyFloat_FromString@plt+0x868c>
    f07c:	mov	x0, x19
    f080:	bl	65d0 <_Py_Dealloc@plt>
    f084:	b	f11c <PyFloat_FromString@plt+0x868c>
    f088:	mov	x2, x20
    f08c:	mov	x1, x19
    f090:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f094:	add	x0, x0, #0x320
    f098:	add	x0, x0, #0x1a0
    f09c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f0a0:	mov	x19, x0
    f0a4:	cbnz	x0, f010 <PyFloat_FromString@plt+0x8580>
    f0a8:	mov	x21, x0
    f0ac:	b	f11c <PyFloat_FromString@plt+0x868c>
    f0b0:	ldr	x0, [x22]
    f0b4:	add	x0, x0, #0x1
    f0b8:	str	x0, [x22]
    f0bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f0c0:	add	x0, x0, #0x320
    f0c4:	add	x0, x0, #0x1a0
    f0c8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    f0cc:	mov	x21, x0
    f0d0:	cbz	x0, f154 <PyFloat_FromString@plt+0x86c4>
    f0d4:	add	x4, sp, #0x3c
    f0d8:	add	x3, x20, #0x10
    f0dc:	add	x2, x22, #0x18
    f0e0:	add	x1, x19, #0x18
    f0e4:	add	x0, x0, #0x18
    f0e8:	bl	2fb28 <PyInit__decimal@@Base+0x15988>
    f0ec:	ldr	x0, [x19]
    f0f0:	sub	x0, x0, #0x1
    f0f4:	str	x0, [x19]
    f0f8:	cbz	x0, f18c <PyFloat_FromString@plt+0x86fc>
    f0fc:	ldr	x0, [x22]
    f100:	sub	x0, x0, #0x1
    f104:	str	x0, [x22]
    f108:	cbz	x0, f198 <PyFloat_FromString@plt+0x8708>
    f10c:	ldr	w1, [sp, #60]
    f110:	mov	x0, x20
    f114:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    f118:	cbnz	w0, f1a4 <PyFloat_FromString@plt+0x8714>
    f11c:	mov	x0, x21
    f120:	ldp	x19, x20, [sp, #16]
    f124:	ldp	x21, x22, [sp, #32]
    f128:	ldp	x29, x30, [sp], #80
    f12c:	ret
    f130:	mov	x2, x20
    f134:	mov	x1, x22
    f138:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f13c:	add	x0, x0, #0x320
    f140:	add	x0, x0, #0x1a0
    f144:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f148:	mov	x22, x0
    f14c:	cbnz	x0, f0bc <PyFloat_FromString@plt+0x862c>
    f150:	b	f068 <PyFloat_FromString@plt+0x85d8>
    f154:	ldr	x0, [x19]
    f158:	sub	x0, x0, #0x1
    f15c:	str	x0, [x19]
    f160:	cbz	x0, f180 <PyFloat_FromString@plt+0x86f0>
    f164:	ldr	x0, [x22]
    f168:	sub	x0, x0, #0x1
    f16c:	str	x0, [x22]
    f170:	cbnz	x0, f11c <PyFloat_FromString@plt+0x868c>
    f174:	mov	x0, x22
    f178:	bl	65d0 <_Py_Dealloc@plt>
    f17c:	b	f11c <PyFloat_FromString@plt+0x868c>
    f180:	mov	x0, x19
    f184:	bl	65d0 <_Py_Dealloc@plt>
    f188:	b	f164 <PyFloat_FromString@plt+0x86d4>
    f18c:	mov	x0, x19
    f190:	bl	65d0 <_Py_Dealloc@plt>
    f194:	b	f0fc <PyFloat_FromString@plt+0x866c>
    f198:	mov	x0, x22
    f19c:	bl	65d0 <_Py_Dealloc@plt>
    f1a0:	b	f10c <PyFloat_FromString@plt+0x867c>
    f1a4:	ldr	x0, [x21]
    f1a8:	sub	x0, x0, #0x1
    f1ac:	str	x0, [x21]
    f1b0:	cbz	x0, f1bc <PyFloat_FromString@plt+0x872c>
    f1b4:	mov	x21, #0x0                   	// #0
    f1b8:	b	f11c <PyFloat_FromString@plt+0x868c>
    f1bc:	mov	x0, x21
    f1c0:	bl	65d0 <_Py_Dealloc@plt>
    f1c4:	mov	x21, #0x0                   	// #0
    f1c8:	b	f11c <PyFloat_FromString@plt+0x868c>
    f1cc:	stp	x29, x30, [sp, #-80]!
    f1d0:	mov	x29, sp
    f1d4:	stp	x19, x20, [sp, #16]
    f1d8:	stp	x21, x22, [sp, #32]
    f1dc:	mov	x20, x0
    f1e0:	mov	x0, x1
    f1e4:	str	wzr, [sp, #60]
    f1e8:	add	x3, sp, #0x40
    f1ec:	add	x2, sp, #0x48
    f1f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f1f4:	add	x1, x1, #0xb48
    f1f8:	bl	68e0 <PyArg_ParseTuple@plt>
    f1fc:	mov	x21, #0x0                   	// #0
    f200:	cbz	w0, f37c <PyFloat_FromString@plt+0x88ec>
    f204:	ldr	x19, [sp, #72]
    f208:	ldr	x0, [x19, #8]
    f20c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f210:	add	x1, x1, #0x320
    f214:	add	x1, x1, #0x1a0
    f218:	cmp	x0, x1
    f21c:	b.eq	f264 <PyFloat_FromString@plt+0x87d4>  // b.none
    f220:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f224:	add	x1, x1, #0x320
    f228:	add	x1, x1, #0x1a0
    f22c:	bl	69c0 <PyType_IsSubtype@plt>
    f230:	cbnz	w0, f264 <PyFloat_FromString@plt+0x87d4>
    f234:	ldr	x0, [x19, #8]
    f238:	ldr	x1, [x0, #168]
    f23c:	tbnz	w1, #24, f2e8 <PyFloat_FromString@plt+0x8858>
    f240:	ldr	x2, [x0, #24]
    f244:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f248:	add	x1, x1, #0x8a8
    f24c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f250:	ldr	x0, [x0, #3936]
    f254:	ldr	x0, [x0]
    f258:	bl	6a10 <PyErr_Format@plt>
    f25c:	mov	x21, #0x0                   	// #0
    f260:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f264:	ldr	x0, [x19]
    f268:	add	x0, x0, #0x1
    f26c:	str	x0, [x19]
    f270:	ldr	x22, [sp, #64]
    f274:	ldr	x0, [x22, #8]
    f278:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f27c:	add	x1, x1, #0x320
    f280:	add	x1, x1, #0x1a0
    f284:	cmp	x0, x1
    f288:	b.eq	f310 <PyFloat_FromString@plt+0x8880>  // b.none
    f28c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f290:	add	x1, x1, #0x320
    f294:	add	x1, x1, #0x1a0
    f298:	bl	69c0 <PyType_IsSubtype@plt>
    f29c:	cbnz	w0, f310 <PyFloat_FromString@plt+0x8880>
    f2a0:	ldr	x0, [x22, #8]
    f2a4:	ldr	x1, [x0, #168]
    f2a8:	tbnz	w1, #24, f390 <PyFloat_FromString@plt+0x8900>
    f2ac:	ldr	x2, [x0, #24]
    f2b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f2b4:	add	x1, x1, #0x8a8
    f2b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f2bc:	ldr	x0, [x0, #3936]
    f2c0:	ldr	x0, [x0]
    f2c4:	bl	6a10 <PyErr_Format@plt>
    f2c8:	ldr	x0, [x19]
    f2cc:	sub	x0, x0, #0x1
    f2d0:	str	x0, [x19]
    f2d4:	mov	x21, #0x0                   	// #0
    f2d8:	cbnz	x0, f37c <PyFloat_FromString@plt+0x88ec>
    f2dc:	mov	x0, x19
    f2e0:	bl	65d0 <_Py_Dealloc@plt>
    f2e4:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f2e8:	mov	x2, x20
    f2ec:	mov	x1, x19
    f2f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f2f4:	add	x0, x0, #0x320
    f2f8:	add	x0, x0, #0x1a0
    f2fc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f300:	mov	x19, x0
    f304:	cbnz	x0, f270 <PyFloat_FromString@plt+0x87e0>
    f308:	mov	x21, x0
    f30c:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f310:	ldr	x0, [x22]
    f314:	add	x0, x0, #0x1
    f318:	str	x0, [x22]
    f31c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f320:	add	x0, x0, #0x320
    f324:	add	x0, x0, #0x1a0
    f328:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    f32c:	mov	x21, x0
    f330:	cbz	x0, f3b4 <PyFloat_FromString@plt+0x8924>
    f334:	add	x4, sp, #0x3c
    f338:	add	x3, x20, #0x10
    f33c:	add	x2, x22, #0x18
    f340:	add	x1, x19, #0x18
    f344:	add	x0, x0, #0x18
    f348:	bl	2a90c <PyInit__decimal@@Base+0x1076c>
    f34c:	ldr	x0, [x19]
    f350:	sub	x0, x0, #0x1
    f354:	str	x0, [x19]
    f358:	cbz	x0, f3ec <PyFloat_FromString@plt+0x895c>
    f35c:	ldr	x0, [x22]
    f360:	sub	x0, x0, #0x1
    f364:	str	x0, [x22]
    f368:	cbz	x0, f3f8 <PyFloat_FromString@plt+0x8968>
    f36c:	ldr	w1, [sp, #60]
    f370:	mov	x0, x20
    f374:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    f378:	cbnz	w0, f404 <PyFloat_FromString@plt+0x8974>
    f37c:	mov	x0, x21
    f380:	ldp	x19, x20, [sp, #16]
    f384:	ldp	x21, x22, [sp, #32]
    f388:	ldp	x29, x30, [sp], #80
    f38c:	ret
    f390:	mov	x2, x20
    f394:	mov	x1, x22
    f398:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f39c:	add	x0, x0, #0x320
    f3a0:	add	x0, x0, #0x1a0
    f3a4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f3a8:	mov	x22, x0
    f3ac:	cbnz	x0, f31c <PyFloat_FromString@plt+0x888c>
    f3b0:	b	f2c8 <PyFloat_FromString@plt+0x8838>
    f3b4:	ldr	x0, [x19]
    f3b8:	sub	x0, x0, #0x1
    f3bc:	str	x0, [x19]
    f3c0:	cbz	x0, f3e0 <PyFloat_FromString@plt+0x8950>
    f3c4:	ldr	x0, [x22]
    f3c8:	sub	x0, x0, #0x1
    f3cc:	str	x0, [x22]
    f3d0:	cbnz	x0, f37c <PyFloat_FromString@plt+0x88ec>
    f3d4:	mov	x0, x22
    f3d8:	bl	65d0 <_Py_Dealloc@plt>
    f3dc:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f3e0:	mov	x0, x19
    f3e4:	bl	65d0 <_Py_Dealloc@plt>
    f3e8:	b	f3c4 <PyFloat_FromString@plt+0x8934>
    f3ec:	mov	x0, x19
    f3f0:	bl	65d0 <_Py_Dealloc@plt>
    f3f4:	b	f35c <PyFloat_FromString@plt+0x88cc>
    f3f8:	mov	x0, x22
    f3fc:	bl	65d0 <_Py_Dealloc@plt>
    f400:	b	f36c <PyFloat_FromString@plt+0x88dc>
    f404:	ldr	x0, [x21]
    f408:	sub	x0, x0, #0x1
    f40c:	str	x0, [x21]
    f410:	cbz	x0, f41c <PyFloat_FromString@plt+0x898c>
    f414:	mov	x21, #0x0                   	// #0
    f418:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f41c:	mov	x0, x21
    f420:	bl	65d0 <_Py_Dealloc@plt>
    f424:	mov	x21, #0x0                   	// #0
    f428:	b	f37c <PyFloat_FromString@plt+0x88ec>
    f42c:	stp	x29, x30, [sp, #-80]!
    f430:	mov	x29, sp
    f434:	stp	x19, x20, [sp, #16]
    f438:	stp	x21, x22, [sp, #32]
    f43c:	mov	x20, x0
    f440:	mov	x0, x1
    f444:	str	wzr, [sp, #60]
    f448:	add	x3, sp, #0x40
    f44c:	add	x2, sp, #0x48
    f450:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f454:	add	x1, x1, #0xb48
    f458:	bl	68e0 <PyArg_ParseTuple@plt>
    f45c:	mov	x21, #0x0                   	// #0
    f460:	cbz	w0, f5dc <PyFloat_FromString@plt+0x8b4c>
    f464:	ldr	x19, [sp, #72]
    f468:	ldr	x0, [x19, #8]
    f46c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f470:	add	x1, x1, #0x320
    f474:	add	x1, x1, #0x1a0
    f478:	cmp	x0, x1
    f47c:	b.eq	f4c4 <PyFloat_FromString@plt+0x8a34>  // b.none
    f480:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f484:	add	x1, x1, #0x320
    f488:	add	x1, x1, #0x1a0
    f48c:	bl	69c0 <PyType_IsSubtype@plt>
    f490:	cbnz	w0, f4c4 <PyFloat_FromString@plt+0x8a34>
    f494:	ldr	x0, [x19, #8]
    f498:	ldr	x1, [x0, #168]
    f49c:	tbnz	w1, #24, f548 <PyFloat_FromString@plt+0x8ab8>
    f4a0:	ldr	x2, [x0, #24]
    f4a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f4a8:	add	x1, x1, #0x8a8
    f4ac:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f4b0:	ldr	x0, [x0, #3936]
    f4b4:	ldr	x0, [x0]
    f4b8:	bl	6a10 <PyErr_Format@plt>
    f4bc:	mov	x21, #0x0                   	// #0
    f4c0:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f4c4:	ldr	x0, [x19]
    f4c8:	add	x0, x0, #0x1
    f4cc:	str	x0, [x19]
    f4d0:	ldr	x22, [sp, #64]
    f4d4:	ldr	x0, [x22, #8]
    f4d8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f4dc:	add	x1, x1, #0x320
    f4e0:	add	x1, x1, #0x1a0
    f4e4:	cmp	x0, x1
    f4e8:	b.eq	f570 <PyFloat_FromString@plt+0x8ae0>  // b.none
    f4ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f4f0:	add	x1, x1, #0x320
    f4f4:	add	x1, x1, #0x1a0
    f4f8:	bl	69c0 <PyType_IsSubtype@plt>
    f4fc:	cbnz	w0, f570 <PyFloat_FromString@plt+0x8ae0>
    f500:	ldr	x0, [x22, #8]
    f504:	ldr	x1, [x0, #168]
    f508:	tbnz	w1, #24, f5f0 <PyFloat_FromString@plt+0x8b60>
    f50c:	ldr	x2, [x0, #24]
    f510:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f514:	add	x1, x1, #0x8a8
    f518:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f51c:	ldr	x0, [x0, #3936]
    f520:	ldr	x0, [x0]
    f524:	bl	6a10 <PyErr_Format@plt>
    f528:	ldr	x0, [x19]
    f52c:	sub	x0, x0, #0x1
    f530:	str	x0, [x19]
    f534:	mov	x21, #0x0                   	// #0
    f538:	cbnz	x0, f5dc <PyFloat_FromString@plt+0x8b4c>
    f53c:	mov	x0, x19
    f540:	bl	65d0 <_Py_Dealloc@plt>
    f544:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f548:	mov	x2, x20
    f54c:	mov	x1, x19
    f550:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f554:	add	x0, x0, #0x320
    f558:	add	x0, x0, #0x1a0
    f55c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f560:	mov	x19, x0
    f564:	cbnz	x0, f4d0 <PyFloat_FromString@plt+0x8a40>
    f568:	mov	x21, x0
    f56c:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f570:	ldr	x0, [x22]
    f574:	add	x0, x0, #0x1
    f578:	str	x0, [x22]
    f57c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f580:	add	x0, x0, #0x320
    f584:	add	x0, x0, #0x1a0
    f588:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    f58c:	mov	x21, x0
    f590:	cbz	x0, f614 <PyFloat_FromString@plt+0x8b84>
    f594:	add	x4, sp, #0x3c
    f598:	add	x3, x20, #0x10
    f59c:	add	x2, x22, #0x18
    f5a0:	add	x1, x19, #0x18
    f5a4:	add	x0, x0, #0x18
    f5a8:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
    f5ac:	ldr	x0, [x19]
    f5b0:	sub	x0, x0, #0x1
    f5b4:	str	x0, [x19]
    f5b8:	cbz	x0, f64c <PyFloat_FromString@plt+0x8bbc>
    f5bc:	ldr	x0, [x22]
    f5c0:	sub	x0, x0, #0x1
    f5c4:	str	x0, [x22]
    f5c8:	cbz	x0, f658 <PyFloat_FromString@plt+0x8bc8>
    f5cc:	ldr	w1, [sp, #60]
    f5d0:	mov	x0, x20
    f5d4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    f5d8:	cbnz	w0, f664 <PyFloat_FromString@plt+0x8bd4>
    f5dc:	mov	x0, x21
    f5e0:	ldp	x19, x20, [sp, #16]
    f5e4:	ldp	x21, x22, [sp, #32]
    f5e8:	ldp	x29, x30, [sp], #80
    f5ec:	ret
    f5f0:	mov	x2, x20
    f5f4:	mov	x1, x22
    f5f8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f5fc:	add	x0, x0, #0x320
    f600:	add	x0, x0, #0x1a0
    f604:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f608:	mov	x22, x0
    f60c:	cbnz	x0, f57c <PyFloat_FromString@plt+0x8aec>
    f610:	b	f528 <PyFloat_FromString@plt+0x8a98>
    f614:	ldr	x0, [x19]
    f618:	sub	x0, x0, #0x1
    f61c:	str	x0, [x19]
    f620:	cbz	x0, f640 <PyFloat_FromString@plt+0x8bb0>
    f624:	ldr	x0, [x22]
    f628:	sub	x0, x0, #0x1
    f62c:	str	x0, [x22]
    f630:	cbnz	x0, f5dc <PyFloat_FromString@plt+0x8b4c>
    f634:	mov	x0, x22
    f638:	bl	65d0 <_Py_Dealloc@plt>
    f63c:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f640:	mov	x0, x19
    f644:	bl	65d0 <_Py_Dealloc@plt>
    f648:	b	f624 <PyFloat_FromString@plt+0x8b94>
    f64c:	mov	x0, x19
    f650:	bl	65d0 <_Py_Dealloc@plt>
    f654:	b	f5bc <PyFloat_FromString@plt+0x8b2c>
    f658:	mov	x0, x22
    f65c:	bl	65d0 <_Py_Dealloc@plt>
    f660:	b	f5cc <PyFloat_FromString@plt+0x8b3c>
    f664:	ldr	x0, [x21]
    f668:	sub	x0, x0, #0x1
    f66c:	str	x0, [x21]
    f670:	cbz	x0, f67c <PyFloat_FromString@plt+0x8bec>
    f674:	mov	x21, #0x0                   	// #0
    f678:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f67c:	mov	x0, x21
    f680:	bl	65d0 <_Py_Dealloc@plt>
    f684:	mov	x21, #0x0                   	// #0
    f688:	b	f5dc <PyFloat_FromString@plt+0x8b4c>
    f68c:	stp	x29, x30, [sp, #-80]!
    f690:	mov	x29, sp
    f694:	stp	x19, x20, [sp, #16]
    f698:	stp	x21, x22, [sp, #32]
    f69c:	mov	x20, x0
    f6a0:	mov	x0, x1
    f6a4:	str	wzr, [sp, #60]
    f6a8:	add	x3, sp, #0x40
    f6ac:	add	x2, sp, #0x48
    f6b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f6b4:	add	x1, x1, #0xb48
    f6b8:	bl	68e0 <PyArg_ParseTuple@plt>
    f6bc:	mov	x21, #0x0                   	// #0
    f6c0:	cbz	w0, f83c <PyFloat_FromString@plt+0x8dac>
    f6c4:	ldr	x19, [sp, #72]
    f6c8:	ldr	x0, [x19, #8]
    f6cc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f6d0:	add	x1, x1, #0x320
    f6d4:	add	x1, x1, #0x1a0
    f6d8:	cmp	x0, x1
    f6dc:	b.eq	f724 <PyFloat_FromString@plt+0x8c94>  // b.none
    f6e0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f6e4:	add	x1, x1, #0x320
    f6e8:	add	x1, x1, #0x1a0
    f6ec:	bl	69c0 <PyType_IsSubtype@plt>
    f6f0:	cbnz	w0, f724 <PyFloat_FromString@plt+0x8c94>
    f6f4:	ldr	x0, [x19, #8]
    f6f8:	ldr	x1, [x0, #168]
    f6fc:	tbnz	w1, #24, f7a8 <PyFloat_FromString@plt+0x8d18>
    f700:	ldr	x2, [x0, #24]
    f704:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f708:	add	x1, x1, #0x8a8
    f70c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f710:	ldr	x0, [x0, #3936]
    f714:	ldr	x0, [x0]
    f718:	bl	6a10 <PyErr_Format@plt>
    f71c:	mov	x21, #0x0                   	// #0
    f720:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f724:	ldr	x0, [x19]
    f728:	add	x0, x0, #0x1
    f72c:	str	x0, [x19]
    f730:	ldr	x22, [sp, #64]
    f734:	ldr	x0, [x22, #8]
    f738:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f73c:	add	x1, x1, #0x320
    f740:	add	x1, x1, #0x1a0
    f744:	cmp	x0, x1
    f748:	b.eq	f7d0 <PyFloat_FromString@plt+0x8d40>  // b.none
    f74c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f750:	add	x1, x1, #0x320
    f754:	add	x1, x1, #0x1a0
    f758:	bl	69c0 <PyType_IsSubtype@plt>
    f75c:	cbnz	w0, f7d0 <PyFloat_FromString@plt+0x8d40>
    f760:	ldr	x0, [x22, #8]
    f764:	ldr	x1, [x0, #168]
    f768:	tbnz	w1, #24, f850 <PyFloat_FromString@plt+0x8dc0>
    f76c:	ldr	x2, [x0, #24]
    f770:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f774:	add	x1, x1, #0x8a8
    f778:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f77c:	ldr	x0, [x0, #3936]
    f780:	ldr	x0, [x0]
    f784:	bl	6a10 <PyErr_Format@plt>
    f788:	ldr	x0, [x19]
    f78c:	sub	x0, x0, #0x1
    f790:	str	x0, [x19]
    f794:	mov	x21, #0x0                   	// #0
    f798:	cbnz	x0, f83c <PyFloat_FromString@plt+0x8dac>
    f79c:	mov	x0, x19
    f7a0:	bl	65d0 <_Py_Dealloc@plt>
    f7a4:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f7a8:	mov	x2, x20
    f7ac:	mov	x1, x19
    f7b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f7b4:	add	x0, x0, #0x320
    f7b8:	add	x0, x0, #0x1a0
    f7bc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f7c0:	mov	x19, x0
    f7c4:	cbnz	x0, f730 <PyFloat_FromString@plt+0x8ca0>
    f7c8:	mov	x21, x0
    f7cc:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f7d0:	ldr	x0, [x22]
    f7d4:	add	x0, x0, #0x1
    f7d8:	str	x0, [x22]
    f7dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f7e0:	add	x0, x0, #0x320
    f7e4:	add	x0, x0, #0x1a0
    f7e8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    f7ec:	mov	x21, x0
    f7f0:	cbz	x0, f874 <PyFloat_FromString@plt+0x8de4>
    f7f4:	add	x4, sp, #0x3c
    f7f8:	add	x3, x20, #0x10
    f7fc:	add	x2, x22, #0x18
    f800:	add	x1, x19, #0x18
    f804:	add	x0, x0, #0x18
    f808:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
    f80c:	ldr	x0, [x19]
    f810:	sub	x0, x0, #0x1
    f814:	str	x0, [x19]
    f818:	cbz	x0, f8ac <PyFloat_FromString@plt+0x8e1c>
    f81c:	ldr	x0, [x22]
    f820:	sub	x0, x0, #0x1
    f824:	str	x0, [x22]
    f828:	cbz	x0, f8b8 <PyFloat_FromString@plt+0x8e28>
    f82c:	ldr	w1, [sp, #60]
    f830:	mov	x0, x20
    f834:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    f838:	cbnz	w0, f8c4 <PyFloat_FromString@plt+0x8e34>
    f83c:	mov	x0, x21
    f840:	ldp	x19, x20, [sp, #16]
    f844:	ldp	x21, x22, [sp, #32]
    f848:	ldp	x29, x30, [sp], #80
    f84c:	ret
    f850:	mov	x2, x20
    f854:	mov	x1, x22
    f858:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    f85c:	add	x0, x0, #0x320
    f860:	add	x0, x0, #0x1a0
    f864:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    f868:	mov	x22, x0
    f86c:	cbnz	x0, f7dc <PyFloat_FromString@plt+0x8d4c>
    f870:	b	f788 <PyFloat_FromString@plt+0x8cf8>
    f874:	ldr	x0, [x19]
    f878:	sub	x0, x0, #0x1
    f87c:	str	x0, [x19]
    f880:	cbz	x0, f8a0 <PyFloat_FromString@plt+0x8e10>
    f884:	ldr	x0, [x22]
    f888:	sub	x0, x0, #0x1
    f88c:	str	x0, [x22]
    f890:	cbnz	x0, f83c <PyFloat_FromString@plt+0x8dac>
    f894:	mov	x0, x22
    f898:	bl	65d0 <_Py_Dealloc@plt>
    f89c:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f8a0:	mov	x0, x19
    f8a4:	bl	65d0 <_Py_Dealloc@plt>
    f8a8:	b	f884 <PyFloat_FromString@plt+0x8df4>
    f8ac:	mov	x0, x19
    f8b0:	bl	65d0 <_Py_Dealloc@plt>
    f8b4:	b	f81c <PyFloat_FromString@plt+0x8d8c>
    f8b8:	mov	x0, x22
    f8bc:	bl	65d0 <_Py_Dealloc@plt>
    f8c0:	b	f82c <PyFloat_FromString@plt+0x8d9c>
    f8c4:	ldr	x0, [x21]
    f8c8:	sub	x0, x0, #0x1
    f8cc:	str	x0, [x21]
    f8d0:	cbz	x0, f8dc <PyFloat_FromString@plt+0x8e4c>
    f8d4:	mov	x21, #0x0                   	// #0
    f8d8:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f8dc:	mov	x0, x21
    f8e0:	bl	65d0 <_Py_Dealloc@plt>
    f8e4:	mov	x21, #0x0                   	// #0
    f8e8:	b	f83c <PyFloat_FromString@plt+0x8dac>
    f8ec:	stp	x29, x30, [sp, #-80]!
    f8f0:	mov	x29, sp
    f8f4:	stp	x19, x20, [sp, #16]
    f8f8:	stp	x21, x22, [sp, #32]
    f8fc:	mov	x20, x0
    f900:	mov	x0, x1
    f904:	str	wzr, [sp, #60]
    f908:	add	x3, sp, #0x40
    f90c:	add	x2, sp, #0x48
    f910:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f914:	add	x1, x1, #0xb48
    f918:	bl	68e0 <PyArg_ParseTuple@plt>
    f91c:	mov	x21, #0x0                   	// #0
    f920:	cbz	w0, fa9c <PyFloat_FromString@plt+0x900c>
    f924:	ldr	x19, [sp, #72]
    f928:	ldr	x0, [x19, #8]
    f92c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f930:	add	x1, x1, #0x320
    f934:	add	x1, x1, #0x1a0
    f938:	cmp	x0, x1
    f93c:	b.eq	f984 <PyFloat_FromString@plt+0x8ef4>  // b.none
    f940:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f944:	add	x1, x1, #0x320
    f948:	add	x1, x1, #0x1a0
    f94c:	bl	69c0 <PyType_IsSubtype@plt>
    f950:	cbnz	w0, f984 <PyFloat_FromString@plt+0x8ef4>
    f954:	ldr	x0, [x19, #8]
    f958:	ldr	x1, [x0, #168]
    f95c:	tbnz	w1, #24, fa08 <PyFloat_FromString@plt+0x8f78>
    f960:	ldr	x2, [x0, #24]
    f964:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f968:	add	x1, x1, #0x8a8
    f96c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f970:	ldr	x0, [x0, #3936]
    f974:	ldr	x0, [x0]
    f978:	bl	6a10 <PyErr_Format@plt>
    f97c:	mov	x21, #0x0                   	// #0
    f980:	b	fa9c <PyFloat_FromString@plt+0x900c>
    f984:	ldr	x0, [x19]
    f988:	add	x0, x0, #0x1
    f98c:	str	x0, [x19]
    f990:	ldr	x22, [sp, #64]
    f994:	ldr	x0, [x22, #8]
    f998:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f99c:	add	x1, x1, #0x320
    f9a0:	add	x1, x1, #0x1a0
    f9a4:	cmp	x0, x1
    f9a8:	b.eq	fa30 <PyFloat_FromString@plt+0x8fa0>  // b.none
    f9ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    f9b0:	add	x1, x1, #0x320
    f9b4:	add	x1, x1, #0x1a0
    f9b8:	bl	69c0 <PyType_IsSubtype@plt>
    f9bc:	cbnz	w0, fa30 <PyFloat_FromString@plt+0x8fa0>
    f9c0:	ldr	x0, [x22, #8]
    f9c4:	ldr	x1, [x0, #168]
    f9c8:	tbnz	w1, #24, fab0 <PyFloat_FromString@plt+0x9020>
    f9cc:	ldr	x2, [x0, #24]
    f9d0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    f9d4:	add	x1, x1, #0x8a8
    f9d8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    f9dc:	ldr	x0, [x0, #3936]
    f9e0:	ldr	x0, [x0]
    f9e4:	bl	6a10 <PyErr_Format@plt>
    f9e8:	ldr	x0, [x19]
    f9ec:	sub	x0, x0, #0x1
    f9f0:	str	x0, [x19]
    f9f4:	mov	x21, #0x0                   	// #0
    f9f8:	cbnz	x0, fa9c <PyFloat_FromString@plt+0x900c>
    f9fc:	mov	x0, x19
    fa00:	bl	65d0 <_Py_Dealloc@plt>
    fa04:	b	fa9c <PyFloat_FromString@plt+0x900c>
    fa08:	mov	x2, x20
    fa0c:	mov	x1, x19
    fa10:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fa14:	add	x0, x0, #0x320
    fa18:	add	x0, x0, #0x1a0
    fa1c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    fa20:	mov	x19, x0
    fa24:	cbnz	x0, f990 <PyFloat_FromString@plt+0x8f00>
    fa28:	mov	x21, x0
    fa2c:	b	fa9c <PyFloat_FromString@plt+0x900c>
    fa30:	ldr	x0, [x22]
    fa34:	add	x0, x0, #0x1
    fa38:	str	x0, [x22]
    fa3c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fa40:	add	x0, x0, #0x320
    fa44:	add	x0, x0, #0x1a0
    fa48:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    fa4c:	mov	x21, x0
    fa50:	cbz	x0, fad4 <PyFloat_FromString@plt+0x9044>
    fa54:	add	x4, sp, #0x3c
    fa58:	add	x3, x20, #0x10
    fa5c:	add	x2, x22, #0x18
    fa60:	add	x1, x19, #0x18
    fa64:	add	x0, x0, #0x18
    fa68:	bl	2a884 <PyInit__decimal@@Base+0x106e4>
    fa6c:	ldr	x0, [x19]
    fa70:	sub	x0, x0, #0x1
    fa74:	str	x0, [x19]
    fa78:	cbz	x0, fb0c <PyFloat_FromString@plt+0x907c>
    fa7c:	ldr	x0, [x22]
    fa80:	sub	x0, x0, #0x1
    fa84:	str	x0, [x22]
    fa88:	cbz	x0, fb18 <PyFloat_FromString@plt+0x9088>
    fa8c:	ldr	w1, [sp, #60]
    fa90:	mov	x0, x20
    fa94:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    fa98:	cbnz	w0, fb24 <PyFloat_FromString@plt+0x9094>
    fa9c:	mov	x0, x21
    faa0:	ldp	x19, x20, [sp, #16]
    faa4:	ldp	x21, x22, [sp, #32]
    faa8:	ldp	x29, x30, [sp], #80
    faac:	ret
    fab0:	mov	x2, x20
    fab4:	mov	x1, x22
    fab8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fabc:	add	x0, x0, #0x320
    fac0:	add	x0, x0, #0x1a0
    fac4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    fac8:	mov	x22, x0
    facc:	cbnz	x0, fa3c <PyFloat_FromString@plt+0x8fac>
    fad0:	b	f9e8 <PyFloat_FromString@plt+0x8f58>
    fad4:	ldr	x0, [x19]
    fad8:	sub	x0, x0, #0x1
    fadc:	str	x0, [x19]
    fae0:	cbz	x0, fb00 <PyFloat_FromString@plt+0x9070>
    fae4:	ldr	x0, [x22]
    fae8:	sub	x0, x0, #0x1
    faec:	str	x0, [x22]
    faf0:	cbnz	x0, fa9c <PyFloat_FromString@plt+0x900c>
    faf4:	mov	x0, x22
    faf8:	bl	65d0 <_Py_Dealloc@plt>
    fafc:	b	fa9c <PyFloat_FromString@plt+0x900c>
    fb00:	mov	x0, x19
    fb04:	bl	65d0 <_Py_Dealloc@plt>
    fb08:	b	fae4 <PyFloat_FromString@plt+0x9054>
    fb0c:	mov	x0, x19
    fb10:	bl	65d0 <_Py_Dealloc@plt>
    fb14:	b	fa7c <PyFloat_FromString@plt+0x8fec>
    fb18:	mov	x0, x22
    fb1c:	bl	65d0 <_Py_Dealloc@plt>
    fb20:	b	fa8c <PyFloat_FromString@plt+0x8ffc>
    fb24:	ldr	x0, [x21]
    fb28:	sub	x0, x0, #0x1
    fb2c:	str	x0, [x21]
    fb30:	cbz	x0, fb3c <PyFloat_FromString@plt+0x90ac>
    fb34:	mov	x21, #0x0                   	// #0
    fb38:	b	fa9c <PyFloat_FromString@plt+0x900c>
    fb3c:	mov	x0, x21
    fb40:	bl	65d0 <_Py_Dealloc@plt>
    fb44:	mov	x21, #0x0                   	// #0
    fb48:	b	fa9c <PyFloat_FromString@plt+0x900c>
    fb4c:	stp	x29, x30, [sp, #-80]!
    fb50:	mov	x29, sp
    fb54:	stp	x19, x20, [sp, #16]
    fb58:	stp	x21, x22, [sp, #32]
    fb5c:	mov	x20, x0
    fb60:	mov	x0, x1
    fb64:	str	wzr, [sp, #60]
    fb68:	add	x3, sp, #0x40
    fb6c:	add	x2, sp, #0x48
    fb70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fb74:	add	x1, x1, #0xb48
    fb78:	bl	68e0 <PyArg_ParseTuple@plt>
    fb7c:	mov	x21, #0x0                   	// #0
    fb80:	cbz	w0, fcfc <PyFloat_FromString@plt+0x926c>
    fb84:	ldr	x19, [sp, #72]
    fb88:	ldr	x0, [x19, #8]
    fb8c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fb90:	add	x1, x1, #0x320
    fb94:	add	x1, x1, #0x1a0
    fb98:	cmp	x0, x1
    fb9c:	b.eq	fbe4 <PyFloat_FromString@plt+0x9154>  // b.none
    fba0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fba4:	add	x1, x1, #0x320
    fba8:	add	x1, x1, #0x1a0
    fbac:	bl	69c0 <PyType_IsSubtype@plt>
    fbb0:	cbnz	w0, fbe4 <PyFloat_FromString@plt+0x9154>
    fbb4:	ldr	x0, [x19, #8]
    fbb8:	ldr	x1, [x0, #168]
    fbbc:	tbnz	w1, #24, fc68 <PyFloat_FromString@plt+0x91d8>
    fbc0:	ldr	x2, [x0, #24]
    fbc4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fbc8:	add	x1, x1, #0x8a8
    fbcc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    fbd0:	ldr	x0, [x0, #3936]
    fbd4:	ldr	x0, [x0]
    fbd8:	bl	6a10 <PyErr_Format@plt>
    fbdc:	mov	x21, #0x0                   	// #0
    fbe0:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fbe4:	ldr	x0, [x19]
    fbe8:	add	x0, x0, #0x1
    fbec:	str	x0, [x19]
    fbf0:	ldr	x22, [sp, #64]
    fbf4:	ldr	x0, [x22, #8]
    fbf8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fbfc:	add	x1, x1, #0x320
    fc00:	add	x1, x1, #0x1a0
    fc04:	cmp	x0, x1
    fc08:	b.eq	fc90 <PyFloat_FromString@plt+0x9200>  // b.none
    fc0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fc10:	add	x1, x1, #0x320
    fc14:	add	x1, x1, #0x1a0
    fc18:	bl	69c0 <PyType_IsSubtype@plt>
    fc1c:	cbnz	w0, fc90 <PyFloat_FromString@plt+0x9200>
    fc20:	ldr	x0, [x22, #8]
    fc24:	ldr	x1, [x0, #168]
    fc28:	tbnz	w1, #24, fd10 <PyFloat_FromString@plt+0x9280>
    fc2c:	ldr	x2, [x0, #24]
    fc30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fc34:	add	x1, x1, #0x8a8
    fc38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    fc3c:	ldr	x0, [x0, #3936]
    fc40:	ldr	x0, [x0]
    fc44:	bl	6a10 <PyErr_Format@plt>
    fc48:	ldr	x0, [x19]
    fc4c:	sub	x0, x0, #0x1
    fc50:	str	x0, [x19]
    fc54:	mov	x21, #0x0                   	// #0
    fc58:	cbnz	x0, fcfc <PyFloat_FromString@plt+0x926c>
    fc5c:	mov	x0, x19
    fc60:	bl	65d0 <_Py_Dealloc@plt>
    fc64:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fc68:	mov	x2, x20
    fc6c:	mov	x1, x19
    fc70:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fc74:	add	x0, x0, #0x320
    fc78:	add	x0, x0, #0x1a0
    fc7c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    fc80:	mov	x19, x0
    fc84:	cbnz	x0, fbf0 <PyFloat_FromString@plt+0x9160>
    fc88:	mov	x21, x0
    fc8c:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fc90:	ldr	x0, [x22]
    fc94:	add	x0, x0, #0x1
    fc98:	str	x0, [x22]
    fc9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fca0:	add	x0, x0, #0x320
    fca4:	add	x0, x0, #0x1a0
    fca8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    fcac:	mov	x21, x0
    fcb0:	cbz	x0, fd34 <PyFloat_FromString@plt+0x92a4>
    fcb4:	add	x4, sp, #0x3c
    fcb8:	add	x3, x20, #0x10
    fcbc:	add	x2, x22, #0x18
    fcc0:	add	x1, x19, #0x18
    fcc4:	add	x0, x0, #0x18
    fcc8:	bl	2e964 <PyInit__decimal@@Base+0x147c4>
    fccc:	ldr	x0, [x19]
    fcd0:	sub	x0, x0, #0x1
    fcd4:	str	x0, [x19]
    fcd8:	cbz	x0, fd6c <PyFloat_FromString@plt+0x92dc>
    fcdc:	ldr	x0, [x22]
    fce0:	sub	x0, x0, #0x1
    fce4:	str	x0, [x22]
    fce8:	cbz	x0, fd78 <PyFloat_FromString@plt+0x92e8>
    fcec:	ldr	w1, [sp, #60]
    fcf0:	mov	x0, x20
    fcf4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    fcf8:	cbnz	w0, fd84 <PyFloat_FromString@plt+0x92f4>
    fcfc:	mov	x0, x21
    fd00:	ldp	x19, x20, [sp, #16]
    fd04:	ldp	x21, x22, [sp, #32]
    fd08:	ldp	x29, x30, [sp], #80
    fd0c:	ret
    fd10:	mov	x2, x20
    fd14:	mov	x1, x22
    fd18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fd1c:	add	x0, x0, #0x320
    fd20:	add	x0, x0, #0x1a0
    fd24:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    fd28:	mov	x22, x0
    fd2c:	cbnz	x0, fc9c <PyFloat_FromString@plt+0x920c>
    fd30:	b	fc48 <PyFloat_FromString@plt+0x91b8>
    fd34:	ldr	x0, [x19]
    fd38:	sub	x0, x0, #0x1
    fd3c:	str	x0, [x19]
    fd40:	cbz	x0, fd60 <PyFloat_FromString@plt+0x92d0>
    fd44:	ldr	x0, [x22]
    fd48:	sub	x0, x0, #0x1
    fd4c:	str	x0, [x22]
    fd50:	cbnz	x0, fcfc <PyFloat_FromString@plt+0x926c>
    fd54:	mov	x0, x22
    fd58:	bl	65d0 <_Py_Dealloc@plt>
    fd5c:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fd60:	mov	x0, x19
    fd64:	bl	65d0 <_Py_Dealloc@plt>
    fd68:	b	fd44 <PyFloat_FromString@plt+0x92b4>
    fd6c:	mov	x0, x19
    fd70:	bl	65d0 <_Py_Dealloc@plt>
    fd74:	b	fcdc <PyFloat_FromString@plt+0x924c>
    fd78:	mov	x0, x22
    fd7c:	bl	65d0 <_Py_Dealloc@plt>
    fd80:	b	fcec <PyFloat_FromString@plt+0x925c>
    fd84:	ldr	x0, [x21]
    fd88:	sub	x0, x0, #0x1
    fd8c:	str	x0, [x21]
    fd90:	cbz	x0, fd9c <PyFloat_FromString@plt+0x930c>
    fd94:	mov	x21, #0x0                   	// #0
    fd98:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fd9c:	mov	x0, x21
    fda0:	bl	65d0 <_Py_Dealloc@plt>
    fda4:	mov	x21, #0x0                   	// #0
    fda8:	b	fcfc <PyFloat_FromString@plt+0x926c>
    fdac:	stp	x29, x30, [sp, #-80]!
    fdb0:	mov	x29, sp
    fdb4:	stp	x19, x20, [sp, #16]
    fdb8:	stp	x21, x22, [sp, #32]
    fdbc:	mov	x20, x0
    fdc0:	mov	x0, x1
    fdc4:	str	wzr, [sp, #60]
    fdc8:	add	x3, sp, #0x40
    fdcc:	add	x2, sp, #0x48
    fdd0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fdd4:	add	x1, x1, #0xb48
    fdd8:	bl	68e0 <PyArg_ParseTuple@plt>
    fddc:	mov	x21, #0x0                   	// #0
    fde0:	cbz	w0, ff5c <PyFloat_FromString@plt+0x94cc>
    fde4:	ldr	x19, [sp, #72]
    fde8:	ldr	x0, [x19, #8]
    fdec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fdf0:	add	x1, x1, #0x320
    fdf4:	add	x1, x1, #0x1a0
    fdf8:	cmp	x0, x1
    fdfc:	b.eq	fe44 <PyFloat_FromString@plt+0x93b4>  // b.none
    fe00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fe04:	add	x1, x1, #0x320
    fe08:	add	x1, x1, #0x1a0
    fe0c:	bl	69c0 <PyType_IsSubtype@plt>
    fe10:	cbnz	w0, fe44 <PyFloat_FromString@plt+0x93b4>
    fe14:	ldr	x0, [x19, #8]
    fe18:	ldr	x1, [x0, #168]
    fe1c:	tbnz	w1, #24, fec8 <PyFloat_FromString@plt+0x9438>
    fe20:	ldr	x2, [x0, #24]
    fe24:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fe28:	add	x1, x1, #0x8a8
    fe2c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    fe30:	ldr	x0, [x0, #3936]
    fe34:	ldr	x0, [x0]
    fe38:	bl	6a10 <PyErr_Format@plt>
    fe3c:	mov	x21, #0x0                   	// #0
    fe40:	b	ff5c <PyFloat_FromString@plt+0x94cc>
    fe44:	ldr	x0, [x19]
    fe48:	add	x0, x0, #0x1
    fe4c:	str	x0, [x19]
    fe50:	ldr	x22, [sp, #64]
    fe54:	ldr	x0, [x22, #8]
    fe58:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fe5c:	add	x1, x1, #0x320
    fe60:	add	x1, x1, #0x1a0
    fe64:	cmp	x0, x1
    fe68:	b.eq	fef0 <PyFloat_FromString@plt+0x9460>  // b.none
    fe6c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
    fe70:	add	x1, x1, #0x320
    fe74:	add	x1, x1, #0x1a0
    fe78:	bl	69c0 <PyType_IsSubtype@plt>
    fe7c:	cbnz	w0, fef0 <PyFloat_FromString@plt+0x9460>
    fe80:	ldr	x0, [x22, #8]
    fe84:	ldr	x1, [x0, #168]
    fe88:	tbnz	w1, #24, ff70 <PyFloat_FromString@plt+0x94e0>
    fe8c:	ldr	x2, [x0, #24]
    fe90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
    fe94:	add	x1, x1, #0x8a8
    fe98:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
    fe9c:	ldr	x0, [x0, #3936]
    fea0:	ldr	x0, [x0]
    fea4:	bl	6a10 <PyErr_Format@plt>
    fea8:	ldr	x0, [x19]
    feac:	sub	x0, x0, #0x1
    feb0:	str	x0, [x19]
    feb4:	mov	x21, #0x0                   	// #0
    feb8:	cbnz	x0, ff5c <PyFloat_FromString@plt+0x94cc>
    febc:	mov	x0, x19
    fec0:	bl	65d0 <_Py_Dealloc@plt>
    fec4:	b	ff5c <PyFloat_FromString@plt+0x94cc>
    fec8:	mov	x2, x20
    fecc:	mov	x1, x19
    fed0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    fed4:	add	x0, x0, #0x320
    fed8:	add	x0, x0, #0x1a0
    fedc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    fee0:	mov	x19, x0
    fee4:	cbnz	x0, fe50 <PyFloat_FromString@plt+0x93c0>
    fee8:	mov	x21, x0
    feec:	b	ff5c <PyFloat_FromString@plt+0x94cc>
    fef0:	ldr	x0, [x22]
    fef4:	add	x0, x0, #0x1
    fef8:	str	x0, [x22]
    fefc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ff00:	add	x0, x0, #0x320
    ff04:	add	x0, x0, #0x1a0
    ff08:	bl	6d2c <PyFloat_FromString@plt+0x29c>
    ff0c:	mov	x21, x0
    ff10:	cbz	x0, ff94 <PyFloat_FromString@plt+0x9504>
    ff14:	add	x4, sp, #0x3c
    ff18:	add	x3, x20, #0x10
    ff1c:	add	x2, x22, #0x18
    ff20:	add	x1, x19, #0x18
    ff24:	add	x0, x0, #0x18
    ff28:	bl	2e2cc <PyInit__decimal@@Base+0x1412c>
    ff2c:	ldr	x0, [x19]
    ff30:	sub	x0, x0, #0x1
    ff34:	str	x0, [x19]
    ff38:	cbz	x0, ffcc <PyFloat_FromString@plt+0x953c>
    ff3c:	ldr	x0, [x22]
    ff40:	sub	x0, x0, #0x1
    ff44:	str	x0, [x22]
    ff48:	cbz	x0, ffd8 <PyFloat_FromString@plt+0x9548>
    ff4c:	ldr	w1, [sp, #60]
    ff50:	mov	x0, x20
    ff54:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
    ff58:	cbnz	w0, ffe4 <PyFloat_FromString@plt+0x9554>
    ff5c:	mov	x0, x21
    ff60:	ldp	x19, x20, [sp, #16]
    ff64:	ldp	x21, x22, [sp, #32]
    ff68:	ldp	x29, x30, [sp], #80
    ff6c:	ret
    ff70:	mov	x2, x20
    ff74:	mov	x1, x22
    ff78:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
    ff7c:	add	x0, x0, #0x320
    ff80:	add	x0, x0, #0x1a0
    ff84:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
    ff88:	mov	x22, x0
    ff8c:	cbnz	x0, fefc <PyFloat_FromString@plt+0x946c>
    ff90:	b	fea8 <PyFloat_FromString@plt+0x9418>
    ff94:	ldr	x0, [x19]
    ff98:	sub	x0, x0, #0x1
    ff9c:	str	x0, [x19]
    ffa0:	cbz	x0, ffc0 <PyFloat_FromString@plt+0x9530>
    ffa4:	ldr	x0, [x22]
    ffa8:	sub	x0, x0, #0x1
    ffac:	str	x0, [x22]
    ffb0:	cbnz	x0, ff5c <PyFloat_FromString@plt+0x94cc>
    ffb4:	mov	x0, x22
    ffb8:	bl	65d0 <_Py_Dealloc@plt>
    ffbc:	b	ff5c <PyFloat_FromString@plt+0x94cc>
    ffc0:	mov	x0, x19
    ffc4:	bl	65d0 <_Py_Dealloc@plt>
    ffc8:	b	ffa4 <PyFloat_FromString@plt+0x9514>
    ffcc:	mov	x0, x19
    ffd0:	bl	65d0 <_Py_Dealloc@plt>
    ffd4:	b	ff3c <PyFloat_FromString@plt+0x94ac>
    ffd8:	mov	x0, x22
    ffdc:	bl	65d0 <_Py_Dealloc@plt>
    ffe0:	b	ff4c <PyFloat_FromString@plt+0x94bc>
    ffe4:	ldr	x0, [x21]
    ffe8:	sub	x0, x0, #0x1
    ffec:	str	x0, [x21]
    fff0:	cbz	x0, fffc <PyFloat_FromString@plt+0x956c>
    fff4:	mov	x21, #0x0                   	// #0
    fff8:	b	ff5c <PyFloat_FromString@plt+0x94cc>
    fffc:	mov	x0, x21
   10000:	bl	65d0 <_Py_Dealloc@plt>
   10004:	mov	x21, #0x0                   	// #0
   10008:	b	ff5c <PyFloat_FromString@plt+0x94cc>
   1000c:	stp	x29, x30, [sp, #-80]!
   10010:	mov	x29, sp
   10014:	stp	x19, x20, [sp, #16]
   10018:	stp	x21, x22, [sp, #32]
   1001c:	mov	x20, x0
   10020:	mov	x0, x1
   10024:	str	wzr, [sp, #60]
   10028:	add	x3, sp, #0x40
   1002c:	add	x2, sp, #0x48
   10030:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10034:	add	x1, x1, #0xb48
   10038:	bl	68e0 <PyArg_ParseTuple@plt>
   1003c:	mov	x21, #0x0                   	// #0
   10040:	cbz	w0, 101bc <PyFloat_FromString@plt+0x972c>
   10044:	ldr	x19, [sp, #72]
   10048:	ldr	x0, [x19, #8]
   1004c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10050:	add	x1, x1, #0x320
   10054:	add	x1, x1, #0x1a0
   10058:	cmp	x0, x1
   1005c:	b.eq	100a4 <PyFloat_FromString@plt+0x9614>  // b.none
   10060:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10064:	add	x1, x1, #0x320
   10068:	add	x1, x1, #0x1a0
   1006c:	bl	69c0 <PyType_IsSubtype@plt>
   10070:	cbnz	w0, 100a4 <PyFloat_FromString@plt+0x9614>
   10074:	ldr	x0, [x19, #8]
   10078:	ldr	x1, [x0, #168]
   1007c:	tbnz	w1, #24, 10128 <PyFloat_FromString@plt+0x9698>
   10080:	ldr	x2, [x0, #24]
   10084:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10088:	add	x1, x1, #0x8a8
   1008c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10090:	ldr	x0, [x0, #3936]
   10094:	ldr	x0, [x0]
   10098:	bl	6a10 <PyErr_Format@plt>
   1009c:	mov	x21, #0x0                   	// #0
   100a0:	b	101bc <PyFloat_FromString@plt+0x972c>
   100a4:	ldr	x0, [x19]
   100a8:	add	x0, x0, #0x1
   100ac:	str	x0, [x19]
   100b0:	ldr	x22, [sp, #64]
   100b4:	ldr	x0, [x22, #8]
   100b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   100bc:	add	x1, x1, #0x320
   100c0:	add	x1, x1, #0x1a0
   100c4:	cmp	x0, x1
   100c8:	b.eq	10150 <PyFloat_FromString@plt+0x96c0>  // b.none
   100cc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   100d0:	add	x1, x1, #0x320
   100d4:	add	x1, x1, #0x1a0
   100d8:	bl	69c0 <PyType_IsSubtype@plt>
   100dc:	cbnz	w0, 10150 <PyFloat_FromString@plt+0x96c0>
   100e0:	ldr	x0, [x22, #8]
   100e4:	ldr	x1, [x0, #168]
   100e8:	tbnz	w1, #24, 101d0 <PyFloat_FromString@plt+0x9740>
   100ec:	ldr	x2, [x0, #24]
   100f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   100f4:	add	x1, x1, #0x8a8
   100f8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   100fc:	ldr	x0, [x0, #3936]
   10100:	ldr	x0, [x0]
   10104:	bl	6a10 <PyErr_Format@plt>
   10108:	ldr	x0, [x19]
   1010c:	sub	x0, x0, #0x1
   10110:	str	x0, [x19]
   10114:	mov	x21, #0x0                   	// #0
   10118:	cbnz	x0, 101bc <PyFloat_FromString@plt+0x972c>
   1011c:	mov	x0, x19
   10120:	bl	65d0 <_Py_Dealloc@plt>
   10124:	b	101bc <PyFloat_FromString@plt+0x972c>
   10128:	mov	x2, x20
   1012c:	mov	x1, x19
   10130:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10134:	add	x0, x0, #0x320
   10138:	add	x0, x0, #0x1a0
   1013c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10140:	mov	x19, x0
   10144:	cbnz	x0, 100b0 <PyFloat_FromString@plt+0x9620>
   10148:	mov	x21, x0
   1014c:	b	101bc <PyFloat_FromString@plt+0x972c>
   10150:	ldr	x0, [x22]
   10154:	add	x0, x0, #0x1
   10158:	str	x0, [x22]
   1015c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10160:	add	x0, x0, #0x320
   10164:	add	x0, x0, #0x1a0
   10168:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1016c:	mov	x21, x0
   10170:	cbz	x0, 101f4 <PyFloat_FromString@plt+0x9764>
   10174:	add	x4, sp, #0x3c
   10178:	add	x3, x20, #0x10
   1017c:	add	x2, x22, #0x18
   10180:	add	x1, x19, #0x18
   10184:	add	x0, x0, #0x18
   10188:	bl	37b80 <PyInit__decimal@@Base+0x1d9e0>
   1018c:	ldr	x0, [x19]
   10190:	sub	x0, x0, #0x1
   10194:	str	x0, [x19]
   10198:	cbz	x0, 1022c <PyFloat_FromString@plt+0x979c>
   1019c:	ldr	x0, [x22]
   101a0:	sub	x0, x0, #0x1
   101a4:	str	x0, [x22]
   101a8:	cbz	x0, 10238 <PyFloat_FromString@plt+0x97a8>
   101ac:	ldr	w1, [sp, #60]
   101b0:	mov	x0, x20
   101b4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   101b8:	cbnz	w0, 10244 <PyFloat_FromString@plt+0x97b4>
   101bc:	mov	x0, x21
   101c0:	ldp	x19, x20, [sp, #16]
   101c4:	ldp	x21, x22, [sp, #32]
   101c8:	ldp	x29, x30, [sp], #80
   101cc:	ret
   101d0:	mov	x2, x20
   101d4:	mov	x1, x22
   101d8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   101dc:	add	x0, x0, #0x320
   101e0:	add	x0, x0, #0x1a0
   101e4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   101e8:	mov	x22, x0
   101ec:	cbnz	x0, 1015c <PyFloat_FromString@plt+0x96cc>
   101f0:	b	10108 <PyFloat_FromString@plt+0x9678>
   101f4:	ldr	x0, [x19]
   101f8:	sub	x0, x0, #0x1
   101fc:	str	x0, [x19]
   10200:	cbz	x0, 10220 <PyFloat_FromString@plt+0x9790>
   10204:	ldr	x0, [x22]
   10208:	sub	x0, x0, #0x1
   1020c:	str	x0, [x22]
   10210:	cbnz	x0, 101bc <PyFloat_FromString@plt+0x972c>
   10214:	mov	x0, x22
   10218:	bl	65d0 <_Py_Dealloc@plt>
   1021c:	b	101bc <PyFloat_FromString@plt+0x972c>
   10220:	mov	x0, x19
   10224:	bl	65d0 <_Py_Dealloc@plt>
   10228:	b	10204 <PyFloat_FromString@plt+0x9774>
   1022c:	mov	x0, x19
   10230:	bl	65d0 <_Py_Dealloc@plt>
   10234:	b	1019c <PyFloat_FromString@plt+0x970c>
   10238:	mov	x0, x22
   1023c:	bl	65d0 <_Py_Dealloc@plt>
   10240:	b	101ac <PyFloat_FromString@plt+0x971c>
   10244:	ldr	x0, [x21]
   10248:	sub	x0, x0, #0x1
   1024c:	str	x0, [x21]
   10250:	cbz	x0, 1025c <PyFloat_FromString@plt+0x97cc>
   10254:	mov	x21, #0x0                   	// #0
   10258:	b	101bc <PyFloat_FromString@plt+0x972c>
   1025c:	mov	x0, x21
   10260:	bl	65d0 <_Py_Dealloc@plt>
   10264:	mov	x21, #0x0                   	// #0
   10268:	b	101bc <PyFloat_FromString@plt+0x972c>
   1026c:	stp	x29, x30, [sp, #-80]!
   10270:	mov	x29, sp
   10274:	stp	x19, x20, [sp, #16]
   10278:	stp	x21, x22, [sp, #32]
   1027c:	mov	x20, x0
   10280:	mov	x0, x1
   10284:	str	wzr, [sp, #60]
   10288:	add	x3, sp, #0x40
   1028c:	add	x2, sp, #0x48
   10290:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10294:	add	x1, x1, #0xb48
   10298:	bl	68e0 <PyArg_ParseTuple@plt>
   1029c:	mov	x21, #0x0                   	// #0
   102a0:	cbz	w0, 1041c <PyFloat_FromString@plt+0x998c>
   102a4:	ldr	x19, [sp, #72]
   102a8:	ldr	x0, [x19, #8]
   102ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   102b0:	add	x1, x1, #0x320
   102b4:	add	x1, x1, #0x1a0
   102b8:	cmp	x0, x1
   102bc:	b.eq	10304 <PyFloat_FromString@plt+0x9874>  // b.none
   102c0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   102c4:	add	x1, x1, #0x320
   102c8:	add	x1, x1, #0x1a0
   102cc:	bl	69c0 <PyType_IsSubtype@plt>
   102d0:	cbnz	w0, 10304 <PyFloat_FromString@plt+0x9874>
   102d4:	ldr	x0, [x19, #8]
   102d8:	ldr	x1, [x0, #168]
   102dc:	tbnz	w1, #24, 10388 <PyFloat_FromString@plt+0x98f8>
   102e0:	ldr	x2, [x0, #24]
   102e4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   102e8:	add	x1, x1, #0x8a8
   102ec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   102f0:	ldr	x0, [x0, #3936]
   102f4:	ldr	x0, [x0]
   102f8:	bl	6a10 <PyErr_Format@plt>
   102fc:	mov	x21, #0x0                   	// #0
   10300:	b	1041c <PyFloat_FromString@plt+0x998c>
   10304:	ldr	x0, [x19]
   10308:	add	x0, x0, #0x1
   1030c:	str	x0, [x19]
   10310:	ldr	x22, [sp, #64]
   10314:	ldr	x0, [x22, #8]
   10318:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1031c:	add	x1, x1, #0x320
   10320:	add	x1, x1, #0x1a0
   10324:	cmp	x0, x1
   10328:	b.eq	103b0 <PyFloat_FromString@plt+0x9920>  // b.none
   1032c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10330:	add	x1, x1, #0x320
   10334:	add	x1, x1, #0x1a0
   10338:	bl	69c0 <PyType_IsSubtype@plt>
   1033c:	cbnz	w0, 103b0 <PyFloat_FromString@plt+0x9920>
   10340:	ldr	x0, [x22, #8]
   10344:	ldr	x1, [x0, #168]
   10348:	tbnz	w1, #24, 10430 <PyFloat_FromString@plt+0x99a0>
   1034c:	ldr	x2, [x0, #24]
   10350:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10354:	add	x1, x1, #0x8a8
   10358:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1035c:	ldr	x0, [x0, #3936]
   10360:	ldr	x0, [x0]
   10364:	bl	6a10 <PyErr_Format@plt>
   10368:	ldr	x0, [x19]
   1036c:	sub	x0, x0, #0x1
   10370:	str	x0, [x19]
   10374:	mov	x21, #0x0                   	// #0
   10378:	cbnz	x0, 1041c <PyFloat_FromString@plt+0x998c>
   1037c:	mov	x0, x19
   10380:	bl	65d0 <_Py_Dealloc@plt>
   10384:	b	1041c <PyFloat_FromString@plt+0x998c>
   10388:	mov	x2, x20
   1038c:	mov	x1, x19
   10390:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10394:	add	x0, x0, #0x320
   10398:	add	x0, x0, #0x1a0
   1039c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   103a0:	mov	x19, x0
   103a4:	cbnz	x0, 10310 <PyFloat_FromString@plt+0x9880>
   103a8:	mov	x21, x0
   103ac:	b	1041c <PyFloat_FromString@plt+0x998c>
   103b0:	ldr	x0, [x22]
   103b4:	add	x0, x0, #0x1
   103b8:	str	x0, [x22]
   103bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   103c0:	add	x0, x0, #0x320
   103c4:	add	x0, x0, #0x1a0
   103c8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   103cc:	mov	x21, x0
   103d0:	cbz	x0, 10454 <PyFloat_FromString@plt+0x99c4>
   103d4:	add	x4, sp, #0x3c
   103d8:	add	x3, x20, #0x10
   103dc:	add	x2, x22, #0x18
   103e0:	add	x1, x19, #0x18
   103e4:	add	x0, x0, #0x18
   103e8:	bl	2e5b8 <PyInit__decimal@@Base+0x14418>
   103ec:	ldr	x0, [x19]
   103f0:	sub	x0, x0, #0x1
   103f4:	str	x0, [x19]
   103f8:	cbz	x0, 1048c <PyFloat_FromString@plt+0x99fc>
   103fc:	ldr	x0, [x22]
   10400:	sub	x0, x0, #0x1
   10404:	str	x0, [x22]
   10408:	cbz	x0, 10498 <PyFloat_FromString@plt+0x9a08>
   1040c:	ldr	w1, [sp, #60]
   10410:	mov	x0, x20
   10414:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   10418:	cbnz	w0, 104a4 <PyFloat_FromString@plt+0x9a14>
   1041c:	mov	x0, x21
   10420:	ldp	x19, x20, [sp, #16]
   10424:	ldp	x21, x22, [sp, #32]
   10428:	ldp	x29, x30, [sp], #80
   1042c:	ret
   10430:	mov	x2, x20
   10434:	mov	x1, x22
   10438:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1043c:	add	x0, x0, #0x320
   10440:	add	x0, x0, #0x1a0
   10444:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10448:	mov	x22, x0
   1044c:	cbnz	x0, 103bc <PyFloat_FromString@plt+0x992c>
   10450:	b	10368 <PyFloat_FromString@plt+0x98d8>
   10454:	ldr	x0, [x19]
   10458:	sub	x0, x0, #0x1
   1045c:	str	x0, [x19]
   10460:	cbz	x0, 10480 <PyFloat_FromString@plt+0x99f0>
   10464:	ldr	x0, [x22]
   10468:	sub	x0, x0, #0x1
   1046c:	str	x0, [x22]
   10470:	cbnz	x0, 1041c <PyFloat_FromString@plt+0x998c>
   10474:	mov	x0, x22
   10478:	bl	65d0 <_Py_Dealloc@plt>
   1047c:	b	1041c <PyFloat_FromString@plt+0x998c>
   10480:	mov	x0, x19
   10484:	bl	65d0 <_Py_Dealloc@plt>
   10488:	b	10464 <PyFloat_FromString@plt+0x99d4>
   1048c:	mov	x0, x19
   10490:	bl	65d0 <_Py_Dealloc@plt>
   10494:	b	103fc <PyFloat_FromString@plt+0x996c>
   10498:	mov	x0, x22
   1049c:	bl	65d0 <_Py_Dealloc@plt>
   104a0:	b	1040c <PyFloat_FromString@plt+0x997c>
   104a4:	ldr	x0, [x21]
   104a8:	sub	x0, x0, #0x1
   104ac:	str	x0, [x21]
   104b0:	cbz	x0, 104bc <PyFloat_FromString@plt+0x9a2c>
   104b4:	mov	x21, #0x0                   	// #0
   104b8:	b	1041c <PyFloat_FromString@plt+0x998c>
   104bc:	mov	x0, x21
   104c0:	bl	65d0 <_Py_Dealloc@plt>
   104c4:	mov	x21, #0x0                   	// #0
   104c8:	b	1041c <PyFloat_FromString@plt+0x998c>
   104cc:	stp	x29, x30, [sp, #-80]!
   104d0:	mov	x29, sp
   104d4:	stp	x19, x20, [sp, #16]
   104d8:	stp	x21, x22, [sp, #32]
   104dc:	mov	x20, x0
   104e0:	mov	x0, x1
   104e4:	str	wzr, [sp, #60]
   104e8:	add	x3, sp, #0x40
   104ec:	add	x2, sp, #0x48
   104f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   104f4:	add	x1, x1, #0xb48
   104f8:	bl	68e0 <PyArg_ParseTuple@plt>
   104fc:	mov	x21, #0x0                   	// #0
   10500:	cbz	w0, 1067c <PyFloat_FromString@plt+0x9bec>
   10504:	ldr	x19, [sp, #72]
   10508:	ldr	x0, [x19, #8]
   1050c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10510:	add	x1, x1, #0x320
   10514:	add	x1, x1, #0x1a0
   10518:	cmp	x0, x1
   1051c:	b.eq	10564 <PyFloat_FromString@plt+0x9ad4>  // b.none
   10520:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10524:	add	x1, x1, #0x320
   10528:	add	x1, x1, #0x1a0
   1052c:	bl	69c0 <PyType_IsSubtype@plt>
   10530:	cbnz	w0, 10564 <PyFloat_FromString@plt+0x9ad4>
   10534:	ldr	x0, [x19, #8]
   10538:	ldr	x1, [x0, #168]
   1053c:	tbnz	w1, #24, 105e8 <PyFloat_FromString@plt+0x9b58>
   10540:	ldr	x2, [x0, #24]
   10544:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10548:	add	x1, x1, #0x8a8
   1054c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10550:	ldr	x0, [x0, #3936]
   10554:	ldr	x0, [x0]
   10558:	bl	6a10 <PyErr_Format@plt>
   1055c:	mov	x21, #0x0                   	// #0
   10560:	b	1067c <PyFloat_FromString@plt+0x9bec>
   10564:	ldr	x0, [x19]
   10568:	add	x0, x0, #0x1
   1056c:	str	x0, [x19]
   10570:	ldr	x22, [sp, #64]
   10574:	ldr	x0, [x22, #8]
   10578:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1057c:	add	x1, x1, #0x320
   10580:	add	x1, x1, #0x1a0
   10584:	cmp	x0, x1
   10588:	b.eq	10610 <PyFloat_FromString@plt+0x9b80>  // b.none
   1058c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10590:	add	x1, x1, #0x320
   10594:	add	x1, x1, #0x1a0
   10598:	bl	69c0 <PyType_IsSubtype@plt>
   1059c:	cbnz	w0, 10610 <PyFloat_FromString@plt+0x9b80>
   105a0:	ldr	x0, [x22, #8]
   105a4:	ldr	x1, [x0, #168]
   105a8:	tbnz	w1, #24, 10690 <PyFloat_FromString@plt+0x9c00>
   105ac:	ldr	x2, [x0, #24]
   105b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   105b4:	add	x1, x1, #0x8a8
   105b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   105bc:	ldr	x0, [x0, #3936]
   105c0:	ldr	x0, [x0]
   105c4:	bl	6a10 <PyErr_Format@plt>
   105c8:	ldr	x0, [x19]
   105cc:	sub	x0, x0, #0x1
   105d0:	str	x0, [x19]
   105d4:	mov	x21, #0x0                   	// #0
   105d8:	cbnz	x0, 1067c <PyFloat_FromString@plt+0x9bec>
   105dc:	mov	x0, x19
   105e0:	bl	65d0 <_Py_Dealloc@plt>
   105e4:	b	1067c <PyFloat_FromString@plt+0x9bec>
   105e8:	mov	x2, x20
   105ec:	mov	x1, x19
   105f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   105f4:	add	x0, x0, #0x320
   105f8:	add	x0, x0, #0x1a0
   105fc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10600:	mov	x19, x0
   10604:	cbnz	x0, 10570 <PyFloat_FromString@plt+0x9ae0>
   10608:	mov	x21, x0
   1060c:	b	1067c <PyFloat_FromString@plt+0x9bec>
   10610:	ldr	x0, [x22]
   10614:	add	x0, x0, #0x1
   10618:	str	x0, [x22]
   1061c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10620:	add	x0, x0, #0x320
   10624:	add	x0, x0, #0x1a0
   10628:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1062c:	mov	x21, x0
   10630:	cbz	x0, 106b4 <PyFloat_FromString@plt+0x9c24>
   10634:	add	x4, sp, #0x3c
   10638:	add	x3, x20, #0x10
   1063c:	add	x2, x22, #0x18
   10640:	add	x1, x19, #0x18
   10644:	add	x0, x0, #0x18
   10648:	bl	2e804 <PyInit__decimal@@Base+0x14664>
   1064c:	ldr	x0, [x19]
   10650:	sub	x0, x0, #0x1
   10654:	str	x0, [x19]
   10658:	cbz	x0, 106ec <PyFloat_FromString@plt+0x9c5c>
   1065c:	ldr	x0, [x22]
   10660:	sub	x0, x0, #0x1
   10664:	str	x0, [x22]
   10668:	cbz	x0, 106f8 <PyFloat_FromString@plt+0x9c68>
   1066c:	ldr	w1, [sp, #60]
   10670:	mov	x0, x20
   10674:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   10678:	cbnz	w0, 10704 <PyFloat_FromString@plt+0x9c74>
   1067c:	mov	x0, x21
   10680:	ldp	x19, x20, [sp, #16]
   10684:	ldp	x21, x22, [sp, #32]
   10688:	ldp	x29, x30, [sp], #80
   1068c:	ret
   10690:	mov	x2, x20
   10694:	mov	x1, x22
   10698:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1069c:	add	x0, x0, #0x320
   106a0:	add	x0, x0, #0x1a0
   106a4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   106a8:	mov	x22, x0
   106ac:	cbnz	x0, 1061c <PyFloat_FromString@plt+0x9b8c>
   106b0:	b	105c8 <PyFloat_FromString@plt+0x9b38>
   106b4:	ldr	x0, [x19]
   106b8:	sub	x0, x0, #0x1
   106bc:	str	x0, [x19]
   106c0:	cbz	x0, 106e0 <PyFloat_FromString@plt+0x9c50>
   106c4:	ldr	x0, [x22]
   106c8:	sub	x0, x0, #0x1
   106cc:	str	x0, [x22]
   106d0:	cbnz	x0, 1067c <PyFloat_FromString@plt+0x9bec>
   106d4:	mov	x0, x22
   106d8:	bl	65d0 <_Py_Dealloc@plt>
   106dc:	b	1067c <PyFloat_FromString@plt+0x9bec>
   106e0:	mov	x0, x19
   106e4:	bl	65d0 <_Py_Dealloc@plt>
   106e8:	b	106c4 <PyFloat_FromString@plt+0x9c34>
   106ec:	mov	x0, x19
   106f0:	bl	65d0 <_Py_Dealloc@plt>
   106f4:	b	1065c <PyFloat_FromString@plt+0x9bcc>
   106f8:	mov	x0, x22
   106fc:	bl	65d0 <_Py_Dealloc@plt>
   10700:	b	1066c <PyFloat_FromString@plt+0x9bdc>
   10704:	ldr	x0, [x21]
   10708:	sub	x0, x0, #0x1
   1070c:	str	x0, [x21]
   10710:	cbz	x0, 1071c <PyFloat_FromString@plt+0x9c8c>
   10714:	mov	x21, #0x0                   	// #0
   10718:	b	1067c <PyFloat_FromString@plt+0x9bec>
   1071c:	mov	x0, x21
   10720:	bl	65d0 <_Py_Dealloc@plt>
   10724:	mov	x21, #0x0                   	// #0
   10728:	b	1067c <PyFloat_FromString@plt+0x9bec>
   1072c:	stp	x29, x30, [sp, #-80]!
   10730:	mov	x29, sp
   10734:	stp	x19, x20, [sp, #16]
   10738:	stp	x21, x22, [sp, #32]
   1073c:	mov	x20, x0
   10740:	mov	x0, x1
   10744:	str	wzr, [sp, #60]
   10748:	add	x3, sp, #0x40
   1074c:	add	x2, sp, #0x48
   10750:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10754:	add	x1, x1, #0xb48
   10758:	bl	68e0 <PyArg_ParseTuple@plt>
   1075c:	mov	x21, #0x0                   	// #0
   10760:	cbz	w0, 108dc <PyFloat_FromString@plt+0x9e4c>
   10764:	ldr	x19, [sp, #72]
   10768:	ldr	x0, [x19, #8]
   1076c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10770:	add	x1, x1, #0x320
   10774:	add	x1, x1, #0x1a0
   10778:	cmp	x0, x1
   1077c:	b.eq	107c4 <PyFloat_FromString@plt+0x9d34>  // b.none
   10780:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10784:	add	x1, x1, #0x320
   10788:	add	x1, x1, #0x1a0
   1078c:	bl	69c0 <PyType_IsSubtype@plt>
   10790:	cbnz	w0, 107c4 <PyFloat_FromString@plt+0x9d34>
   10794:	ldr	x0, [x19, #8]
   10798:	ldr	x1, [x0, #168]
   1079c:	tbnz	w1, #24, 10848 <PyFloat_FromString@plt+0x9db8>
   107a0:	ldr	x2, [x0, #24]
   107a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   107a8:	add	x1, x1, #0x8a8
   107ac:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   107b0:	ldr	x0, [x0, #3936]
   107b4:	ldr	x0, [x0]
   107b8:	bl	6a10 <PyErr_Format@plt>
   107bc:	mov	x21, #0x0                   	// #0
   107c0:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   107c4:	ldr	x0, [x19]
   107c8:	add	x0, x0, #0x1
   107cc:	str	x0, [x19]
   107d0:	ldr	x22, [sp, #64]
   107d4:	ldr	x0, [x22, #8]
   107d8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   107dc:	add	x1, x1, #0x320
   107e0:	add	x1, x1, #0x1a0
   107e4:	cmp	x0, x1
   107e8:	b.eq	10870 <PyFloat_FromString@plt+0x9de0>  // b.none
   107ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   107f0:	add	x1, x1, #0x320
   107f4:	add	x1, x1, #0x1a0
   107f8:	bl	69c0 <PyType_IsSubtype@plt>
   107fc:	cbnz	w0, 10870 <PyFloat_FromString@plt+0x9de0>
   10800:	ldr	x0, [x22, #8]
   10804:	ldr	x1, [x0, #168]
   10808:	tbnz	w1, #24, 108f0 <PyFloat_FromString@plt+0x9e60>
   1080c:	ldr	x2, [x0, #24]
   10810:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10814:	add	x1, x1, #0x8a8
   10818:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1081c:	ldr	x0, [x0, #3936]
   10820:	ldr	x0, [x0]
   10824:	bl	6a10 <PyErr_Format@plt>
   10828:	ldr	x0, [x19]
   1082c:	sub	x0, x0, #0x1
   10830:	str	x0, [x19]
   10834:	mov	x21, #0x0                   	// #0
   10838:	cbnz	x0, 108dc <PyFloat_FromString@plt+0x9e4c>
   1083c:	mov	x0, x19
   10840:	bl	65d0 <_Py_Dealloc@plt>
   10844:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   10848:	mov	x2, x20
   1084c:	mov	x1, x19
   10850:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10854:	add	x0, x0, #0x320
   10858:	add	x0, x0, #0x1a0
   1085c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10860:	mov	x19, x0
   10864:	cbnz	x0, 107d0 <PyFloat_FromString@plt+0x9d40>
   10868:	mov	x21, x0
   1086c:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   10870:	ldr	x0, [x22]
   10874:	add	x0, x0, #0x1
   10878:	str	x0, [x22]
   1087c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10880:	add	x0, x0, #0x320
   10884:	add	x0, x0, #0x1a0
   10888:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1088c:	mov	x21, x0
   10890:	cbz	x0, 10914 <PyFloat_FromString@plt+0x9e84>
   10894:	add	x4, sp, #0x3c
   10898:	add	x3, x20, #0x10
   1089c:	add	x2, x22, #0x18
   108a0:	add	x1, x19, #0x18
   108a4:	add	x0, x0, #0x18
   108a8:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   108ac:	ldr	x0, [x19]
   108b0:	sub	x0, x0, #0x1
   108b4:	str	x0, [x19]
   108b8:	cbz	x0, 1094c <PyFloat_FromString@plt+0x9ebc>
   108bc:	ldr	x0, [x22]
   108c0:	sub	x0, x0, #0x1
   108c4:	str	x0, [x22]
   108c8:	cbz	x0, 10958 <PyFloat_FromString@plt+0x9ec8>
   108cc:	ldr	w1, [sp, #60]
   108d0:	mov	x0, x20
   108d4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   108d8:	cbnz	w0, 10964 <PyFloat_FromString@plt+0x9ed4>
   108dc:	mov	x0, x21
   108e0:	ldp	x19, x20, [sp, #16]
   108e4:	ldp	x21, x22, [sp, #32]
   108e8:	ldp	x29, x30, [sp], #80
   108ec:	ret
   108f0:	mov	x2, x20
   108f4:	mov	x1, x22
   108f8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   108fc:	add	x0, x0, #0x320
   10900:	add	x0, x0, #0x1a0
   10904:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10908:	mov	x22, x0
   1090c:	cbnz	x0, 1087c <PyFloat_FromString@plt+0x9dec>
   10910:	b	10828 <PyFloat_FromString@plt+0x9d98>
   10914:	ldr	x0, [x19]
   10918:	sub	x0, x0, #0x1
   1091c:	str	x0, [x19]
   10920:	cbz	x0, 10940 <PyFloat_FromString@plt+0x9eb0>
   10924:	ldr	x0, [x22]
   10928:	sub	x0, x0, #0x1
   1092c:	str	x0, [x22]
   10930:	cbnz	x0, 108dc <PyFloat_FromString@plt+0x9e4c>
   10934:	mov	x0, x22
   10938:	bl	65d0 <_Py_Dealloc@plt>
   1093c:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   10940:	mov	x0, x19
   10944:	bl	65d0 <_Py_Dealloc@plt>
   10948:	b	10924 <PyFloat_FromString@plt+0x9e94>
   1094c:	mov	x0, x19
   10950:	bl	65d0 <_Py_Dealloc@plt>
   10954:	b	108bc <PyFloat_FromString@plt+0x9e2c>
   10958:	mov	x0, x22
   1095c:	bl	65d0 <_Py_Dealloc@plt>
   10960:	b	108cc <PyFloat_FromString@plt+0x9e3c>
   10964:	ldr	x0, [x21]
   10968:	sub	x0, x0, #0x1
   1096c:	str	x0, [x21]
   10970:	cbz	x0, 1097c <PyFloat_FromString@plt+0x9eec>
   10974:	mov	x21, #0x0                   	// #0
   10978:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   1097c:	mov	x0, x21
   10980:	bl	65d0 <_Py_Dealloc@plt>
   10984:	mov	x21, #0x0                   	// #0
   10988:	b	108dc <PyFloat_FromString@plt+0x9e4c>
   1098c:	stp	x29, x30, [sp, #-80]!
   10990:	mov	x29, sp
   10994:	stp	x19, x20, [sp, #16]
   10998:	stp	x21, x22, [sp, #32]
   1099c:	mov	x20, x0
   109a0:	mov	x0, x1
   109a4:	str	wzr, [sp, #60]
   109a8:	add	x3, sp, #0x40
   109ac:	add	x2, sp, #0x48
   109b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   109b4:	add	x1, x1, #0xb48
   109b8:	bl	68e0 <PyArg_ParseTuple@plt>
   109bc:	mov	x21, #0x0                   	// #0
   109c0:	cbz	w0, 10b3c <PyFloat_FromString@plt+0xa0ac>
   109c4:	ldr	x19, [sp, #72]
   109c8:	ldr	x0, [x19, #8]
   109cc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   109d0:	add	x1, x1, #0x320
   109d4:	add	x1, x1, #0x1a0
   109d8:	cmp	x0, x1
   109dc:	b.eq	10a24 <PyFloat_FromString@plt+0x9f94>  // b.none
   109e0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   109e4:	add	x1, x1, #0x320
   109e8:	add	x1, x1, #0x1a0
   109ec:	bl	69c0 <PyType_IsSubtype@plt>
   109f0:	cbnz	w0, 10a24 <PyFloat_FromString@plt+0x9f94>
   109f4:	ldr	x0, [x19, #8]
   109f8:	ldr	x1, [x0, #168]
   109fc:	tbnz	w1, #24, 10aa8 <PyFloat_FromString@plt+0xa018>
   10a00:	ldr	x2, [x0, #24]
   10a04:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10a08:	add	x1, x1, #0x8a8
   10a0c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10a10:	ldr	x0, [x0, #3936]
   10a14:	ldr	x0, [x0]
   10a18:	bl	6a10 <PyErr_Format@plt>
   10a1c:	mov	x21, #0x0                   	// #0
   10a20:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10a24:	ldr	x0, [x19]
   10a28:	add	x0, x0, #0x1
   10a2c:	str	x0, [x19]
   10a30:	ldr	x22, [sp, #64]
   10a34:	ldr	x0, [x22, #8]
   10a38:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10a3c:	add	x1, x1, #0x320
   10a40:	add	x1, x1, #0x1a0
   10a44:	cmp	x0, x1
   10a48:	b.eq	10ad0 <PyFloat_FromString@plt+0xa040>  // b.none
   10a4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10a50:	add	x1, x1, #0x320
   10a54:	add	x1, x1, #0x1a0
   10a58:	bl	69c0 <PyType_IsSubtype@plt>
   10a5c:	cbnz	w0, 10ad0 <PyFloat_FromString@plt+0xa040>
   10a60:	ldr	x0, [x22, #8]
   10a64:	ldr	x1, [x0, #168]
   10a68:	tbnz	w1, #24, 10b50 <PyFloat_FromString@plt+0xa0c0>
   10a6c:	ldr	x2, [x0, #24]
   10a70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10a74:	add	x1, x1, #0x8a8
   10a78:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10a7c:	ldr	x0, [x0, #3936]
   10a80:	ldr	x0, [x0]
   10a84:	bl	6a10 <PyErr_Format@plt>
   10a88:	ldr	x0, [x19]
   10a8c:	sub	x0, x0, #0x1
   10a90:	str	x0, [x19]
   10a94:	mov	x21, #0x0                   	// #0
   10a98:	cbnz	x0, 10b3c <PyFloat_FromString@plt+0xa0ac>
   10a9c:	mov	x0, x19
   10aa0:	bl	65d0 <_Py_Dealloc@plt>
   10aa4:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10aa8:	mov	x2, x20
   10aac:	mov	x1, x19
   10ab0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10ab4:	add	x0, x0, #0x320
   10ab8:	add	x0, x0, #0x1a0
   10abc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10ac0:	mov	x19, x0
   10ac4:	cbnz	x0, 10a30 <PyFloat_FromString@plt+0x9fa0>
   10ac8:	mov	x21, x0
   10acc:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10ad0:	ldr	x0, [x22]
   10ad4:	add	x0, x0, #0x1
   10ad8:	str	x0, [x22]
   10adc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10ae0:	add	x0, x0, #0x320
   10ae4:	add	x0, x0, #0x1a0
   10ae8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   10aec:	mov	x21, x0
   10af0:	cbz	x0, 10b74 <PyFloat_FromString@plt+0xa0e4>
   10af4:	add	x4, sp, #0x3c
   10af8:	add	x3, x20, #0x10
   10afc:	add	x2, x22, #0x18
   10b00:	add	x1, x19, #0x18
   10b04:	add	x0, x0, #0x18
   10b08:	bl	316dc <PyInit__decimal@@Base+0x1753c>
   10b0c:	ldr	x0, [x19]
   10b10:	sub	x0, x0, #0x1
   10b14:	str	x0, [x19]
   10b18:	cbz	x0, 10bac <PyFloat_FromString@plt+0xa11c>
   10b1c:	ldr	x0, [x22]
   10b20:	sub	x0, x0, #0x1
   10b24:	str	x0, [x22]
   10b28:	cbz	x0, 10bb8 <PyFloat_FromString@plt+0xa128>
   10b2c:	ldr	w1, [sp, #60]
   10b30:	mov	x0, x20
   10b34:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   10b38:	cbnz	w0, 10bc4 <PyFloat_FromString@plt+0xa134>
   10b3c:	mov	x0, x21
   10b40:	ldp	x19, x20, [sp, #16]
   10b44:	ldp	x21, x22, [sp, #32]
   10b48:	ldp	x29, x30, [sp], #80
   10b4c:	ret
   10b50:	mov	x2, x20
   10b54:	mov	x1, x22
   10b58:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10b5c:	add	x0, x0, #0x320
   10b60:	add	x0, x0, #0x1a0
   10b64:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10b68:	mov	x22, x0
   10b6c:	cbnz	x0, 10adc <PyFloat_FromString@plt+0xa04c>
   10b70:	b	10a88 <PyFloat_FromString@plt+0x9ff8>
   10b74:	ldr	x0, [x19]
   10b78:	sub	x0, x0, #0x1
   10b7c:	str	x0, [x19]
   10b80:	cbz	x0, 10ba0 <PyFloat_FromString@plt+0xa110>
   10b84:	ldr	x0, [x22]
   10b88:	sub	x0, x0, #0x1
   10b8c:	str	x0, [x22]
   10b90:	cbnz	x0, 10b3c <PyFloat_FromString@plt+0xa0ac>
   10b94:	mov	x0, x22
   10b98:	bl	65d0 <_Py_Dealloc@plt>
   10b9c:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10ba0:	mov	x0, x19
   10ba4:	bl	65d0 <_Py_Dealloc@plt>
   10ba8:	b	10b84 <PyFloat_FromString@plt+0xa0f4>
   10bac:	mov	x0, x19
   10bb0:	bl	65d0 <_Py_Dealloc@plt>
   10bb4:	b	10b1c <PyFloat_FromString@plt+0xa08c>
   10bb8:	mov	x0, x22
   10bbc:	bl	65d0 <_Py_Dealloc@plt>
   10bc0:	b	10b2c <PyFloat_FromString@plt+0xa09c>
   10bc4:	ldr	x0, [x21]
   10bc8:	sub	x0, x0, #0x1
   10bcc:	str	x0, [x21]
   10bd0:	cbz	x0, 10bdc <PyFloat_FromString@plt+0xa14c>
   10bd4:	mov	x21, #0x0                   	// #0
   10bd8:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10bdc:	mov	x0, x21
   10be0:	bl	65d0 <_Py_Dealloc@plt>
   10be4:	mov	x21, #0x0                   	// #0
   10be8:	b	10b3c <PyFloat_FromString@plt+0xa0ac>
   10bec:	stp	x29, x30, [sp, #-80]!
   10bf0:	mov	x29, sp
   10bf4:	stp	x19, x20, [sp, #16]
   10bf8:	stp	x21, x22, [sp, #32]
   10bfc:	mov	x20, x0
   10c00:	mov	x0, x1
   10c04:	str	wzr, [sp, #60]
   10c08:	add	x3, sp, #0x40
   10c0c:	add	x2, sp, #0x48
   10c10:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10c14:	add	x1, x1, #0xb48
   10c18:	bl	68e0 <PyArg_ParseTuple@plt>
   10c1c:	mov	x21, #0x0                   	// #0
   10c20:	cbz	w0, 10d9c <PyFloat_FromString@plt+0xa30c>
   10c24:	ldr	x19, [sp, #72]
   10c28:	ldr	x0, [x19, #8]
   10c2c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10c30:	add	x1, x1, #0x320
   10c34:	add	x1, x1, #0x1a0
   10c38:	cmp	x0, x1
   10c3c:	b.eq	10c84 <PyFloat_FromString@plt+0xa1f4>  // b.none
   10c40:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10c44:	add	x1, x1, #0x320
   10c48:	add	x1, x1, #0x1a0
   10c4c:	bl	69c0 <PyType_IsSubtype@plt>
   10c50:	cbnz	w0, 10c84 <PyFloat_FromString@plt+0xa1f4>
   10c54:	ldr	x0, [x19, #8]
   10c58:	ldr	x1, [x0, #168]
   10c5c:	tbnz	w1, #24, 10d08 <PyFloat_FromString@plt+0xa278>
   10c60:	ldr	x2, [x0, #24]
   10c64:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10c68:	add	x1, x1, #0x8a8
   10c6c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10c70:	ldr	x0, [x0, #3936]
   10c74:	ldr	x0, [x0]
   10c78:	bl	6a10 <PyErr_Format@plt>
   10c7c:	mov	x21, #0x0                   	// #0
   10c80:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10c84:	ldr	x0, [x19]
   10c88:	add	x0, x0, #0x1
   10c8c:	str	x0, [x19]
   10c90:	ldr	x22, [sp, #64]
   10c94:	ldr	x0, [x22, #8]
   10c98:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10c9c:	add	x1, x1, #0x320
   10ca0:	add	x1, x1, #0x1a0
   10ca4:	cmp	x0, x1
   10ca8:	b.eq	10d30 <PyFloat_FromString@plt+0xa2a0>  // b.none
   10cac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10cb0:	add	x1, x1, #0x320
   10cb4:	add	x1, x1, #0x1a0
   10cb8:	bl	69c0 <PyType_IsSubtype@plt>
   10cbc:	cbnz	w0, 10d30 <PyFloat_FromString@plt+0xa2a0>
   10cc0:	ldr	x0, [x22, #8]
   10cc4:	ldr	x1, [x0, #168]
   10cc8:	tbnz	w1, #24, 10db0 <PyFloat_FromString@plt+0xa320>
   10ccc:	ldr	x2, [x0, #24]
   10cd0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10cd4:	add	x1, x1, #0x8a8
   10cd8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10cdc:	ldr	x0, [x0, #3936]
   10ce0:	ldr	x0, [x0]
   10ce4:	bl	6a10 <PyErr_Format@plt>
   10ce8:	ldr	x0, [x19]
   10cec:	sub	x0, x0, #0x1
   10cf0:	str	x0, [x19]
   10cf4:	mov	x21, #0x0                   	// #0
   10cf8:	cbnz	x0, 10d9c <PyFloat_FromString@plt+0xa30c>
   10cfc:	mov	x0, x19
   10d00:	bl	65d0 <_Py_Dealloc@plt>
   10d04:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10d08:	mov	x2, x20
   10d0c:	mov	x1, x19
   10d10:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10d14:	add	x0, x0, #0x320
   10d18:	add	x0, x0, #0x1a0
   10d1c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10d20:	mov	x19, x0
   10d24:	cbnz	x0, 10c90 <PyFloat_FromString@plt+0xa200>
   10d28:	mov	x21, x0
   10d2c:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10d30:	ldr	x0, [x22]
   10d34:	add	x0, x0, #0x1
   10d38:	str	x0, [x22]
   10d3c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10d40:	add	x0, x0, #0x320
   10d44:	add	x0, x0, #0x1a0
   10d48:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   10d4c:	mov	x21, x0
   10d50:	cbz	x0, 10dd4 <PyFloat_FromString@plt+0xa344>
   10d54:	add	x4, sp, #0x3c
   10d58:	add	x3, x20, #0x10
   10d5c:	add	x2, x22, #0x18
   10d60:	add	x1, x19, #0x18
   10d64:	add	x0, x0, #0x18
   10d68:	bl	317f0 <PyInit__decimal@@Base+0x17650>
   10d6c:	ldr	x0, [x19]
   10d70:	sub	x0, x0, #0x1
   10d74:	str	x0, [x19]
   10d78:	cbz	x0, 10e0c <PyFloat_FromString@plt+0xa37c>
   10d7c:	ldr	x0, [x22]
   10d80:	sub	x0, x0, #0x1
   10d84:	str	x0, [x22]
   10d88:	cbz	x0, 10e18 <PyFloat_FromString@plt+0xa388>
   10d8c:	ldr	w1, [sp, #60]
   10d90:	mov	x0, x20
   10d94:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   10d98:	cbnz	w0, 10e24 <PyFloat_FromString@plt+0xa394>
   10d9c:	mov	x0, x21
   10da0:	ldp	x19, x20, [sp, #16]
   10da4:	ldp	x21, x22, [sp, #32]
   10da8:	ldp	x29, x30, [sp], #80
   10dac:	ret
   10db0:	mov	x2, x20
   10db4:	mov	x1, x22
   10db8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10dbc:	add	x0, x0, #0x320
   10dc0:	add	x0, x0, #0x1a0
   10dc4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10dc8:	mov	x22, x0
   10dcc:	cbnz	x0, 10d3c <PyFloat_FromString@plt+0xa2ac>
   10dd0:	b	10ce8 <PyFloat_FromString@plt+0xa258>
   10dd4:	ldr	x0, [x19]
   10dd8:	sub	x0, x0, #0x1
   10ddc:	str	x0, [x19]
   10de0:	cbz	x0, 10e00 <PyFloat_FromString@plt+0xa370>
   10de4:	ldr	x0, [x22]
   10de8:	sub	x0, x0, #0x1
   10dec:	str	x0, [x22]
   10df0:	cbnz	x0, 10d9c <PyFloat_FromString@plt+0xa30c>
   10df4:	mov	x0, x22
   10df8:	bl	65d0 <_Py_Dealloc@plt>
   10dfc:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10e00:	mov	x0, x19
   10e04:	bl	65d0 <_Py_Dealloc@plt>
   10e08:	b	10de4 <PyFloat_FromString@plt+0xa354>
   10e0c:	mov	x0, x19
   10e10:	bl	65d0 <_Py_Dealloc@plt>
   10e14:	b	10d7c <PyFloat_FromString@plt+0xa2ec>
   10e18:	mov	x0, x22
   10e1c:	bl	65d0 <_Py_Dealloc@plt>
   10e20:	b	10d8c <PyFloat_FromString@plt+0xa2fc>
   10e24:	ldr	x0, [x21]
   10e28:	sub	x0, x0, #0x1
   10e2c:	str	x0, [x21]
   10e30:	cbz	x0, 10e3c <PyFloat_FromString@plt+0xa3ac>
   10e34:	mov	x21, #0x0                   	// #0
   10e38:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10e3c:	mov	x0, x21
   10e40:	bl	65d0 <_Py_Dealloc@plt>
   10e44:	mov	x21, #0x0                   	// #0
   10e48:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10e4c:	stp	x29, x30, [sp, #-80]!
   10e50:	mov	x29, sp
   10e54:	stp	x19, x20, [sp, #16]
   10e58:	stp	x21, x22, [sp, #32]
   10e5c:	mov	x20, x0
   10e60:	mov	x0, x1
   10e64:	str	wzr, [sp, #60]
   10e68:	add	x3, sp, #0x40
   10e6c:	add	x2, sp, #0x48
   10e70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10e74:	add	x1, x1, #0xb48
   10e78:	bl	68e0 <PyArg_ParseTuple@plt>
   10e7c:	mov	x21, #0x0                   	// #0
   10e80:	cbz	w0, 10ffc <PyFloat_FromString@plt+0xa56c>
   10e84:	ldr	x19, [sp, #72]
   10e88:	ldr	x0, [x19, #8]
   10e8c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10e90:	add	x1, x1, #0x320
   10e94:	add	x1, x1, #0x1a0
   10e98:	cmp	x0, x1
   10e9c:	b.eq	10ee4 <PyFloat_FromString@plt+0xa454>  // b.none
   10ea0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10ea4:	add	x1, x1, #0x320
   10ea8:	add	x1, x1, #0x1a0
   10eac:	bl	69c0 <PyType_IsSubtype@plt>
   10eb0:	cbnz	w0, 10ee4 <PyFloat_FromString@plt+0xa454>
   10eb4:	ldr	x0, [x19, #8]
   10eb8:	ldr	x1, [x0, #168]
   10ebc:	tbnz	w1, #24, 10f68 <PyFloat_FromString@plt+0xa4d8>
   10ec0:	ldr	x2, [x0, #24]
   10ec4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10ec8:	add	x1, x1, #0x8a8
   10ecc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10ed0:	ldr	x0, [x0, #3936]
   10ed4:	ldr	x0, [x0]
   10ed8:	bl	6a10 <PyErr_Format@plt>
   10edc:	mov	x21, #0x0                   	// #0
   10ee0:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   10ee4:	ldr	x0, [x19]
   10ee8:	add	x0, x0, #0x1
   10eec:	str	x0, [x19]
   10ef0:	ldr	x22, [sp, #64]
   10ef4:	ldr	x0, [x22, #8]
   10ef8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10efc:	add	x1, x1, #0x320
   10f00:	add	x1, x1, #0x1a0
   10f04:	cmp	x0, x1
   10f08:	b.eq	10f90 <PyFloat_FromString@plt+0xa500>  // b.none
   10f0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   10f10:	add	x1, x1, #0x320
   10f14:	add	x1, x1, #0x1a0
   10f18:	bl	69c0 <PyType_IsSubtype@plt>
   10f1c:	cbnz	w0, 10f90 <PyFloat_FromString@plt+0xa500>
   10f20:	ldr	x0, [x22, #8]
   10f24:	ldr	x1, [x0, #168]
   10f28:	tbnz	w1, #24, 11010 <PyFloat_FromString@plt+0xa580>
   10f2c:	ldr	x2, [x0, #24]
   10f30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   10f34:	add	x1, x1, #0x8a8
   10f38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   10f3c:	ldr	x0, [x0, #3936]
   10f40:	ldr	x0, [x0]
   10f44:	bl	6a10 <PyErr_Format@plt>
   10f48:	ldr	x0, [x19]
   10f4c:	sub	x0, x0, #0x1
   10f50:	str	x0, [x19]
   10f54:	mov	x21, #0x0                   	// #0
   10f58:	cbnz	x0, 10ffc <PyFloat_FromString@plt+0xa56c>
   10f5c:	mov	x0, x19
   10f60:	bl	65d0 <_Py_Dealloc@plt>
   10f64:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   10f68:	mov	x2, x20
   10f6c:	mov	x1, x19
   10f70:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10f74:	add	x0, x0, #0x320
   10f78:	add	x0, x0, #0x1a0
   10f7c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   10f80:	mov	x19, x0
   10f84:	cbnz	x0, 10ef0 <PyFloat_FromString@plt+0xa460>
   10f88:	mov	x21, x0
   10f8c:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   10f90:	ldr	x0, [x22]
   10f94:	add	x0, x0, #0x1
   10f98:	str	x0, [x22]
   10f9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   10fa0:	add	x0, x0, #0x320
   10fa4:	add	x0, x0, #0x1a0
   10fa8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   10fac:	mov	x21, x0
   10fb0:	cbz	x0, 11034 <PyFloat_FromString@plt+0xa5a4>
   10fb4:	add	x4, sp, #0x3c
   10fb8:	add	x3, x20, #0x10
   10fbc:	add	x2, x22, #0x18
   10fc0:	add	x1, x19, #0x18
   10fc4:	add	x0, x0, #0x18
   10fc8:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   10fcc:	ldr	x0, [x19]
   10fd0:	sub	x0, x0, #0x1
   10fd4:	str	x0, [x19]
   10fd8:	cbz	x0, 1106c <PyFloat_FromString@plt+0xa5dc>
   10fdc:	ldr	x0, [x22]
   10fe0:	sub	x0, x0, #0x1
   10fe4:	str	x0, [x22]
   10fe8:	cbz	x0, 11078 <PyFloat_FromString@plt+0xa5e8>
   10fec:	ldr	w1, [sp, #60]
   10ff0:	mov	x0, x20
   10ff4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   10ff8:	cbnz	w0, 11084 <PyFloat_FromString@plt+0xa5f4>
   10ffc:	mov	x0, x21
   11000:	ldp	x19, x20, [sp, #16]
   11004:	ldp	x21, x22, [sp, #32]
   11008:	ldp	x29, x30, [sp], #80
   1100c:	ret
   11010:	mov	x2, x20
   11014:	mov	x1, x22
   11018:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1101c:	add	x0, x0, #0x320
   11020:	add	x0, x0, #0x1a0
   11024:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11028:	mov	x22, x0
   1102c:	cbnz	x0, 10f9c <PyFloat_FromString@plt+0xa50c>
   11030:	b	10f48 <PyFloat_FromString@plt+0xa4b8>
   11034:	ldr	x0, [x19]
   11038:	sub	x0, x0, #0x1
   1103c:	str	x0, [x19]
   11040:	cbz	x0, 11060 <PyFloat_FromString@plt+0xa5d0>
   11044:	ldr	x0, [x22]
   11048:	sub	x0, x0, #0x1
   1104c:	str	x0, [x22]
   11050:	cbnz	x0, 10ffc <PyFloat_FromString@plt+0xa56c>
   11054:	mov	x0, x22
   11058:	bl	65d0 <_Py_Dealloc@plt>
   1105c:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   11060:	mov	x0, x19
   11064:	bl	65d0 <_Py_Dealloc@plt>
   11068:	b	11044 <PyFloat_FromString@plt+0xa5b4>
   1106c:	mov	x0, x19
   11070:	bl	65d0 <_Py_Dealloc@plt>
   11074:	b	10fdc <PyFloat_FromString@plt+0xa54c>
   11078:	mov	x0, x22
   1107c:	bl	65d0 <_Py_Dealloc@plt>
   11080:	b	10fec <PyFloat_FromString@plt+0xa55c>
   11084:	ldr	x0, [x21]
   11088:	sub	x0, x0, #0x1
   1108c:	str	x0, [x21]
   11090:	cbz	x0, 1109c <PyFloat_FromString@plt+0xa60c>
   11094:	mov	x21, #0x0                   	// #0
   11098:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   1109c:	mov	x0, x21
   110a0:	bl	65d0 <_Py_Dealloc@plt>
   110a4:	mov	x21, #0x0                   	// #0
   110a8:	b	10ffc <PyFloat_FromString@plt+0xa56c>
   110ac:	stp	x29, x30, [sp, #-80]!
   110b0:	mov	x29, sp
   110b4:	stp	x19, x20, [sp, #16]
   110b8:	stp	x21, x22, [sp, #32]
   110bc:	mov	x20, x0
   110c0:	mov	x0, x1
   110c4:	str	wzr, [sp, #60]
   110c8:	add	x3, sp, #0x40
   110cc:	add	x2, sp, #0x48
   110d0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   110d4:	add	x1, x1, #0xb48
   110d8:	bl	68e0 <PyArg_ParseTuple@plt>
   110dc:	mov	x21, #0x0                   	// #0
   110e0:	cbz	w0, 1125c <PyFloat_FromString@plt+0xa7cc>
   110e4:	ldr	x19, [sp, #72]
   110e8:	ldr	x0, [x19, #8]
   110ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   110f0:	add	x1, x1, #0x320
   110f4:	add	x1, x1, #0x1a0
   110f8:	cmp	x0, x1
   110fc:	b.eq	11144 <PyFloat_FromString@plt+0xa6b4>  // b.none
   11100:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11104:	add	x1, x1, #0x320
   11108:	add	x1, x1, #0x1a0
   1110c:	bl	69c0 <PyType_IsSubtype@plt>
   11110:	cbnz	w0, 11144 <PyFloat_FromString@plt+0xa6b4>
   11114:	ldr	x0, [x19, #8]
   11118:	ldr	x1, [x0, #168]
   1111c:	tbnz	w1, #24, 111c8 <PyFloat_FromString@plt+0xa738>
   11120:	ldr	x2, [x0, #24]
   11124:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11128:	add	x1, x1, #0x8a8
   1112c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   11130:	ldr	x0, [x0, #3936]
   11134:	ldr	x0, [x0]
   11138:	bl	6a10 <PyErr_Format@plt>
   1113c:	mov	x21, #0x0                   	// #0
   11140:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   11144:	ldr	x0, [x19]
   11148:	add	x0, x0, #0x1
   1114c:	str	x0, [x19]
   11150:	ldr	x22, [sp, #64]
   11154:	ldr	x0, [x22, #8]
   11158:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1115c:	add	x1, x1, #0x320
   11160:	add	x1, x1, #0x1a0
   11164:	cmp	x0, x1
   11168:	b.eq	111f0 <PyFloat_FromString@plt+0xa760>  // b.none
   1116c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11170:	add	x1, x1, #0x320
   11174:	add	x1, x1, #0x1a0
   11178:	bl	69c0 <PyType_IsSubtype@plt>
   1117c:	cbnz	w0, 111f0 <PyFloat_FromString@plt+0xa760>
   11180:	ldr	x0, [x22, #8]
   11184:	ldr	x1, [x0, #168]
   11188:	tbnz	w1, #24, 11270 <PyFloat_FromString@plt+0xa7e0>
   1118c:	ldr	x2, [x0, #24]
   11190:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11194:	add	x1, x1, #0x8a8
   11198:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1119c:	ldr	x0, [x0, #3936]
   111a0:	ldr	x0, [x0]
   111a4:	bl	6a10 <PyErr_Format@plt>
   111a8:	ldr	x0, [x19]
   111ac:	sub	x0, x0, #0x1
   111b0:	str	x0, [x19]
   111b4:	mov	x21, #0x0                   	// #0
   111b8:	cbnz	x0, 1125c <PyFloat_FromString@plt+0xa7cc>
   111bc:	mov	x0, x19
   111c0:	bl	65d0 <_Py_Dealloc@plt>
   111c4:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   111c8:	mov	x2, x20
   111cc:	mov	x1, x19
   111d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   111d4:	add	x0, x0, #0x320
   111d8:	add	x0, x0, #0x1a0
   111dc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   111e0:	mov	x19, x0
   111e4:	cbnz	x0, 11150 <PyFloat_FromString@plt+0xa6c0>
   111e8:	mov	x21, x0
   111ec:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   111f0:	ldr	x0, [x22]
   111f4:	add	x0, x0, #0x1
   111f8:	str	x0, [x22]
   111fc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11200:	add	x0, x0, #0x320
   11204:	add	x0, x0, #0x1a0
   11208:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1120c:	mov	x21, x0
   11210:	cbz	x0, 11294 <PyFloat_FromString@plt+0xa804>
   11214:	add	x4, sp, #0x3c
   11218:	add	x3, x20, #0x10
   1121c:	add	x2, x22, #0x18
   11220:	add	x1, x19, #0x18
   11224:	add	x0, x0, #0x18
   11228:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   1122c:	ldr	x0, [x19]
   11230:	sub	x0, x0, #0x1
   11234:	str	x0, [x19]
   11238:	cbz	x0, 112cc <PyFloat_FromString@plt+0xa83c>
   1123c:	ldr	x0, [x22]
   11240:	sub	x0, x0, #0x1
   11244:	str	x0, [x22]
   11248:	cbz	x0, 112d8 <PyFloat_FromString@plt+0xa848>
   1124c:	ldr	w1, [sp, #60]
   11250:	mov	x0, x20
   11254:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   11258:	cbnz	w0, 112e4 <PyFloat_FromString@plt+0xa854>
   1125c:	mov	x0, x21
   11260:	ldp	x19, x20, [sp, #16]
   11264:	ldp	x21, x22, [sp, #32]
   11268:	ldp	x29, x30, [sp], #80
   1126c:	ret
   11270:	mov	x2, x20
   11274:	mov	x1, x22
   11278:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1127c:	add	x0, x0, #0x320
   11280:	add	x0, x0, #0x1a0
   11284:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11288:	mov	x22, x0
   1128c:	cbnz	x0, 111fc <PyFloat_FromString@plt+0xa76c>
   11290:	b	111a8 <PyFloat_FromString@plt+0xa718>
   11294:	ldr	x0, [x19]
   11298:	sub	x0, x0, #0x1
   1129c:	str	x0, [x19]
   112a0:	cbz	x0, 112c0 <PyFloat_FromString@plt+0xa830>
   112a4:	ldr	x0, [x22]
   112a8:	sub	x0, x0, #0x1
   112ac:	str	x0, [x22]
   112b0:	cbnz	x0, 1125c <PyFloat_FromString@plt+0xa7cc>
   112b4:	mov	x0, x22
   112b8:	bl	65d0 <_Py_Dealloc@plt>
   112bc:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   112c0:	mov	x0, x19
   112c4:	bl	65d0 <_Py_Dealloc@plt>
   112c8:	b	112a4 <PyFloat_FromString@plt+0xa814>
   112cc:	mov	x0, x19
   112d0:	bl	65d0 <_Py_Dealloc@plt>
   112d4:	b	1123c <PyFloat_FromString@plt+0xa7ac>
   112d8:	mov	x0, x22
   112dc:	bl	65d0 <_Py_Dealloc@plt>
   112e0:	b	1124c <PyFloat_FromString@plt+0xa7bc>
   112e4:	ldr	x0, [x21]
   112e8:	sub	x0, x0, #0x1
   112ec:	str	x0, [x21]
   112f0:	cbz	x0, 112fc <PyFloat_FromString@plt+0xa86c>
   112f4:	mov	x21, #0x0                   	// #0
   112f8:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   112fc:	mov	x0, x21
   11300:	bl	65d0 <_Py_Dealloc@plt>
   11304:	mov	x21, #0x0                   	// #0
   11308:	b	1125c <PyFloat_FromString@plt+0xa7cc>
   1130c:	stp	x29, x30, [sp, #-80]!
   11310:	mov	x29, sp
   11314:	stp	x19, x20, [sp, #16]
   11318:	stp	x21, x22, [sp, #32]
   1131c:	mov	x20, x0
   11320:	mov	x0, x1
   11324:	str	wzr, [sp, #60]
   11328:	add	x3, sp, #0x40
   1132c:	add	x2, sp, #0x48
   11330:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11334:	add	x1, x1, #0xb48
   11338:	bl	68e0 <PyArg_ParseTuple@plt>
   1133c:	mov	x21, #0x0                   	// #0
   11340:	cbz	w0, 114bc <PyFloat_FromString@plt+0xaa2c>
   11344:	ldr	x19, [sp, #72]
   11348:	ldr	x0, [x19, #8]
   1134c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11350:	add	x1, x1, #0x320
   11354:	add	x1, x1, #0x1a0
   11358:	cmp	x0, x1
   1135c:	b.eq	113a4 <PyFloat_FromString@plt+0xa914>  // b.none
   11360:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11364:	add	x1, x1, #0x320
   11368:	add	x1, x1, #0x1a0
   1136c:	bl	69c0 <PyType_IsSubtype@plt>
   11370:	cbnz	w0, 113a4 <PyFloat_FromString@plt+0xa914>
   11374:	ldr	x0, [x19, #8]
   11378:	ldr	x1, [x0, #168]
   1137c:	tbnz	w1, #24, 11428 <PyFloat_FromString@plt+0xa998>
   11380:	ldr	x2, [x0, #24]
   11384:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11388:	add	x1, x1, #0x8a8
   1138c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   11390:	ldr	x0, [x0, #3936]
   11394:	ldr	x0, [x0]
   11398:	bl	6a10 <PyErr_Format@plt>
   1139c:	mov	x21, #0x0                   	// #0
   113a0:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   113a4:	ldr	x0, [x19]
   113a8:	add	x0, x0, #0x1
   113ac:	str	x0, [x19]
   113b0:	ldr	x22, [sp, #64]
   113b4:	ldr	x0, [x22, #8]
   113b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   113bc:	add	x1, x1, #0x320
   113c0:	add	x1, x1, #0x1a0
   113c4:	cmp	x0, x1
   113c8:	b.eq	11450 <PyFloat_FromString@plt+0xa9c0>  // b.none
   113cc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   113d0:	add	x1, x1, #0x320
   113d4:	add	x1, x1, #0x1a0
   113d8:	bl	69c0 <PyType_IsSubtype@plt>
   113dc:	cbnz	w0, 11450 <PyFloat_FromString@plt+0xa9c0>
   113e0:	ldr	x0, [x22, #8]
   113e4:	ldr	x1, [x0, #168]
   113e8:	tbnz	w1, #24, 114d0 <PyFloat_FromString@plt+0xaa40>
   113ec:	ldr	x2, [x0, #24]
   113f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   113f4:	add	x1, x1, #0x8a8
   113f8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   113fc:	ldr	x0, [x0, #3936]
   11400:	ldr	x0, [x0]
   11404:	bl	6a10 <PyErr_Format@plt>
   11408:	ldr	x0, [x19]
   1140c:	sub	x0, x0, #0x1
   11410:	str	x0, [x19]
   11414:	mov	x21, #0x0                   	// #0
   11418:	cbnz	x0, 114bc <PyFloat_FromString@plt+0xaa2c>
   1141c:	mov	x0, x19
   11420:	bl	65d0 <_Py_Dealloc@plt>
   11424:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   11428:	mov	x2, x20
   1142c:	mov	x1, x19
   11430:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11434:	add	x0, x0, #0x320
   11438:	add	x0, x0, #0x1a0
   1143c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11440:	mov	x19, x0
   11444:	cbnz	x0, 113b0 <PyFloat_FromString@plt+0xa920>
   11448:	mov	x21, x0
   1144c:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   11450:	ldr	x0, [x22]
   11454:	add	x0, x0, #0x1
   11458:	str	x0, [x22]
   1145c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11460:	add	x0, x0, #0x320
   11464:	add	x0, x0, #0x1a0
   11468:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1146c:	mov	x21, x0
   11470:	cbz	x0, 114f4 <PyFloat_FromString@plt+0xaa64>
   11474:	add	x4, sp, #0x3c
   11478:	add	x3, x20, #0x10
   1147c:	add	x2, x22, #0x18
   11480:	add	x1, x19, #0x18
   11484:	add	x0, x0, #0x18
   11488:	bl	2fc54 <PyInit__decimal@@Base+0x15ab4>
   1148c:	ldr	x0, [x19]
   11490:	sub	x0, x0, #0x1
   11494:	str	x0, [x19]
   11498:	cbz	x0, 1152c <PyFloat_FromString@plt+0xaa9c>
   1149c:	ldr	x0, [x22]
   114a0:	sub	x0, x0, #0x1
   114a4:	str	x0, [x22]
   114a8:	cbz	x0, 11538 <PyFloat_FromString@plt+0xaaa8>
   114ac:	ldr	w1, [sp, #60]
   114b0:	mov	x0, x20
   114b4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   114b8:	cbnz	w0, 11544 <PyFloat_FromString@plt+0xaab4>
   114bc:	mov	x0, x21
   114c0:	ldp	x19, x20, [sp, #16]
   114c4:	ldp	x21, x22, [sp, #32]
   114c8:	ldp	x29, x30, [sp], #80
   114cc:	ret
   114d0:	mov	x2, x20
   114d4:	mov	x1, x22
   114d8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   114dc:	add	x0, x0, #0x320
   114e0:	add	x0, x0, #0x1a0
   114e4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   114e8:	mov	x22, x0
   114ec:	cbnz	x0, 1145c <PyFloat_FromString@plt+0xa9cc>
   114f0:	b	11408 <PyFloat_FromString@plt+0xa978>
   114f4:	ldr	x0, [x19]
   114f8:	sub	x0, x0, #0x1
   114fc:	str	x0, [x19]
   11500:	cbz	x0, 11520 <PyFloat_FromString@plt+0xaa90>
   11504:	ldr	x0, [x22]
   11508:	sub	x0, x0, #0x1
   1150c:	str	x0, [x22]
   11510:	cbnz	x0, 114bc <PyFloat_FromString@plt+0xaa2c>
   11514:	mov	x0, x22
   11518:	bl	65d0 <_Py_Dealloc@plt>
   1151c:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   11520:	mov	x0, x19
   11524:	bl	65d0 <_Py_Dealloc@plt>
   11528:	b	11504 <PyFloat_FromString@plt+0xaa74>
   1152c:	mov	x0, x19
   11530:	bl	65d0 <_Py_Dealloc@plt>
   11534:	b	1149c <PyFloat_FromString@plt+0xaa0c>
   11538:	mov	x0, x22
   1153c:	bl	65d0 <_Py_Dealloc@plt>
   11540:	b	114ac <PyFloat_FromString@plt+0xaa1c>
   11544:	ldr	x0, [x21]
   11548:	sub	x0, x0, #0x1
   1154c:	str	x0, [x21]
   11550:	cbz	x0, 1155c <PyFloat_FromString@plt+0xaacc>
   11554:	mov	x21, #0x0                   	// #0
   11558:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   1155c:	mov	x0, x21
   11560:	bl	65d0 <_Py_Dealloc@plt>
   11564:	mov	x21, #0x0                   	// #0
   11568:	b	114bc <PyFloat_FromString@plt+0xaa2c>
   1156c:	stp	x29, x30, [sp, #-80]!
   11570:	mov	x29, sp
   11574:	stp	x19, x20, [sp, #16]
   11578:	stp	x21, x22, [sp, #32]
   1157c:	mov	x20, x0
   11580:	mov	x0, x1
   11584:	str	wzr, [sp, #60]
   11588:	add	x3, sp, #0x40
   1158c:	add	x2, sp, #0x48
   11590:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11594:	add	x1, x1, #0xb48
   11598:	bl	68e0 <PyArg_ParseTuple@plt>
   1159c:	mov	x21, #0x0                   	// #0
   115a0:	cbz	w0, 1171c <PyFloat_FromString@plt+0xac8c>
   115a4:	ldr	x19, [sp, #72]
   115a8:	ldr	x0, [x19, #8]
   115ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   115b0:	add	x1, x1, #0x320
   115b4:	add	x1, x1, #0x1a0
   115b8:	cmp	x0, x1
   115bc:	b.eq	11604 <PyFloat_FromString@plt+0xab74>  // b.none
   115c0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   115c4:	add	x1, x1, #0x320
   115c8:	add	x1, x1, #0x1a0
   115cc:	bl	69c0 <PyType_IsSubtype@plt>
   115d0:	cbnz	w0, 11604 <PyFloat_FromString@plt+0xab74>
   115d4:	ldr	x0, [x19, #8]
   115d8:	ldr	x1, [x0, #168]
   115dc:	tbnz	w1, #24, 11688 <PyFloat_FromString@plt+0xabf8>
   115e0:	ldr	x2, [x0, #24]
   115e4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   115e8:	add	x1, x1, #0x8a8
   115ec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   115f0:	ldr	x0, [x0, #3936]
   115f4:	ldr	x0, [x0]
   115f8:	bl	6a10 <PyErr_Format@plt>
   115fc:	mov	x21, #0x0                   	// #0
   11600:	b	1171c <PyFloat_FromString@plt+0xac8c>
   11604:	ldr	x0, [x19]
   11608:	add	x0, x0, #0x1
   1160c:	str	x0, [x19]
   11610:	ldr	x22, [sp, #64]
   11614:	ldr	x0, [x22, #8]
   11618:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1161c:	add	x1, x1, #0x320
   11620:	add	x1, x1, #0x1a0
   11624:	cmp	x0, x1
   11628:	b.eq	116b0 <PyFloat_FromString@plt+0xac20>  // b.none
   1162c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11630:	add	x1, x1, #0x320
   11634:	add	x1, x1, #0x1a0
   11638:	bl	69c0 <PyType_IsSubtype@plt>
   1163c:	cbnz	w0, 116b0 <PyFloat_FromString@plt+0xac20>
   11640:	ldr	x0, [x22, #8]
   11644:	ldr	x1, [x0, #168]
   11648:	tbnz	w1, #24, 11730 <PyFloat_FromString@plt+0xaca0>
   1164c:	ldr	x2, [x0, #24]
   11650:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11654:	add	x1, x1, #0x8a8
   11658:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1165c:	ldr	x0, [x0, #3936]
   11660:	ldr	x0, [x0]
   11664:	bl	6a10 <PyErr_Format@plt>
   11668:	ldr	x0, [x19]
   1166c:	sub	x0, x0, #0x1
   11670:	str	x0, [x19]
   11674:	mov	x21, #0x0                   	// #0
   11678:	cbnz	x0, 1171c <PyFloat_FromString@plt+0xac8c>
   1167c:	mov	x0, x19
   11680:	bl	65d0 <_Py_Dealloc@plt>
   11684:	b	1171c <PyFloat_FromString@plt+0xac8c>
   11688:	mov	x2, x20
   1168c:	mov	x1, x19
   11690:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11694:	add	x0, x0, #0x320
   11698:	add	x0, x0, #0x1a0
   1169c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   116a0:	mov	x19, x0
   116a4:	cbnz	x0, 11610 <PyFloat_FromString@plt+0xab80>
   116a8:	mov	x21, x0
   116ac:	b	1171c <PyFloat_FromString@plt+0xac8c>
   116b0:	ldr	x0, [x22]
   116b4:	add	x0, x0, #0x1
   116b8:	str	x0, [x22]
   116bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   116c0:	add	x0, x0, #0x320
   116c4:	add	x0, x0, #0x1a0
   116c8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   116cc:	mov	x21, x0
   116d0:	cbz	x0, 11754 <PyFloat_FromString@plt+0xacc4>
   116d4:	add	x4, sp, #0x3c
   116d8:	add	x3, x20, #0x10
   116dc:	add	x2, x22, #0x18
   116e0:	add	x1, x19, #0x18
   116e4:	add	x0, x0, #0x18
   116e8:	bl	2fd80 <PyInit__decimal@@Base+0x15be0>
   116ec:	ldr	x0, [x19]
   116f0:	sub	x0, x0, #0x1
   116f4:	str	x0, [x19]
   116f8:	cbz	x0, 1178c <PyFloat_FromString@plt+0xacfc>
   116fc:	ldr	x0, [x22]
   11700:	sub	x0, x0, #0x1
   11704:	str	x0, [x22]
   11708:	cbz	x0, 11798 <PyFloat_FromString@plt+0xad08>
   1170c:	ldr	w1, [sp, #60]
   11710:	mov	x0, x20
   11714:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   11718:	cbnz	w0, 117a4 <PyFloat_FromString@plt+0xad14>
   1171c:	mov	x0, x21
   11720:	ldp	x19, x20, [sp, #16]
   11724:	ldp	x21, x22, [sp, #32]
   11728:	ldp	x29, x30, [sp], #80
   1172c:	ret
   11730:	mov	x2, x20
   11734:	mov	x1, x22
   11738:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1173c:	add	x0, x0, #0x320
   11740:	add	x0, x0, #0x1a0
   11744:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11748:	mov	x22, x0
   1174c:	cbnz	x0, 116bc <PyFloat_FromString@plt+0xac2c>
   11750:	b	11668 <PyFloat_FromString@plt+0xabd8>
   11754:	ldr	x0, [x19]
   11758:	sub	x0, x0, #0x1
   1175c:	str	x0, [x19]
   11760:	cbz	x0, 11780 <PyFloat_FromString@plt+0xacf0>
   11764:	ldr	x0, [x22]
   11768:	sub	x0, x0, #0x1
   1176c:	str	x0, [x22]
   11770:	cbnz	x0, 1171c <PyFloat_FromString@plt+0xac8c>
   11774:	mov	x0, x22
   11778:	bl	65d0 <_Py_Dealloc@plt>
   1177c:	b	1171c <PyFloat_FromString@plt+0xac8c>
   11780:	mov	x0, x19
   11784:	bl	65d0 <_Py_Dealloc@plt>
   11788:	b	11764 <PyFloat_FromString@plt+0xacd4>
   1178c:	mov	x0, x19
   11790:	bl	65d0 <_Py_Dealloc@plt>
   11794:	b	116fc <PyFloat_FromString@plt+0xac6c>
   11798:	mov	x0, x22
   1179c:	bl	65d0 <_Py_Dealloc@plt>
   117a0:	b	1170c <PyFloat_FromString@plt+0xac7c>
   117a4:	ldr	x0, [x21]
   117a8:	sub	x0, x0, #0x1
   117ac:	str	x0, [x21]
   117b0:	cbz	x0, 117bc <PyFloat_FromString@plt+0xad2c>
   117b4:	mov	x21, #0x0                   	// #0
   117b8:	b	1171c <PyFloat_FromString@plt+0xac8c>
   117bc:	mov	x0, x21
   117c0:	bl	65d0 <_Py_Dealloc@plt>
   117c4:	mov	x21, #0x0                   	// #0
   117c8:	b	1171c <PyFloat_FromString@plt+0xac8c>
   117cc:	stp	x29, x30, [sp, #-80]!
   117d0:	mov	x29, sp
   117d4:	stp	x19, x20, [sp, #16]
   117d8:	stp	x21, x22, [sp, #32]
   117dc:	mov	x20, x0
   117e0:	mov	x0, x1
   117e4:	str	wzr, [sp, #60]
   117e8:	add	x3, sp, #0x40
   117ec:	add	x2, sp, #0x48
   117f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   117f4:	add	x1, x1, #0xb48
   117f8:	bl	68e0 <PyArg_ParseTuple@plt>
   117fc:	mov	x21, #0x0                   	// #0
   11800:	cbz	w0, 1197c <PyFloat_FromString@plt+0xaeec>
   11804:	ldr	x19, [sp, #72]
   11808:	ldr	x0, [x19, #8]
   1180c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11810:	add	x1, x1, #0x320
   11814:	add	x1, x1, #0x1a0
   11818:	cmp	x0, x1
   1181c:	b.eq	11864 <PyFloat_FromString@plt+0xadd4>  // b.none
   11820:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11824:	add	x1, x1, #0x320
   11828:	add	x1, x1, #0x1a0
   1182c:	bl	69c0 <PyType_IsSubtype@plt>
   11830:	cbnz	w0, 11864 <PyFloat_FromString@plt+0xadd4>
   11834:	ldr	x0, [x19, #8]
   11838:	ldr	x1, [x0, #168]
   1183c:	tbnz	w1, #24, 118e8 <PyFloat_FromString@plt+0xae58>
   11840:	ldr	x2, [x0, #24]
   11844:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   11848:	add	x1, x1, #0x8a8
   1184c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   11850:	ldr	x0, [x0, #3936]
   11854:	ldr	x0, [x0]
   11858:	bl	6a10 <PyErr_Format@plt>
   1185c:	mov	x21, #0x0                   	// #0
   11860:	b	1197c <PyFloat_FromString@plt+0xaeec>
   11864:	ldr	x0, [x19]
   11868:	add	x0, x0, #0x1
   1186c:	str	x0, [x19]
   11870:	ldr	x22, [sp, #64]
   11874:	ldr	x0, [x22, #8]
   11878:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1187c:	add	x1, x1, #0x320
   11880:	add	x1, x1, #0x1a0
   11884:	cmp	x0, x1
   11888:	b.eq	11910 <PyFloat_FromString@plt+0xae80>  // b.none
   1188c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11890:	add	x1, x1, #0x320
   11894:	add	x1, x1, #0x1a0
   11898:	bl	69c0 <PyType_IsSubtype@plt>
   1189c:	cbnz	w0, 11910 <PyFloat_FromString@plt+0xae80>
   118a0:	ldr	x0, [x22, #8]
   118a4:	ldr	x1, [x0, #168]
   118a8:	tbnz	w1, #24, 11990 <PyFloat_FromString@plt+0xaf00>
   118ac:	ldr	x2, [x0, #24]
   118b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   118b4:	add	x1, x1, #0x8a8
   118b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   118bc:	ldr	x0, [x0, #3936]
   118c0:	ldr	x0, [x0]
   118c4:	bl	6a10 <PyErr_Format@plt>
   118c8:	ldr	x0, [x19]
   118cc:	sub	x0, x0, #0x1
   118d0:	str	x0, [x19]
   118d4:	mov	x21, #0x0                   	// #0
   118d8:	cbnz	x0, 1197c <PyFloat_FromString@plt+0xaeec>
   118dc:	mov	x0, x19
   118e0:	bl	65d0 <_Py_Dealloc@plt>
   118e4:	b	1197c <PyFloat_FromString@plt+0xaeec>
   118e8:	mov	x2, x20
   118ec:	mov	x1, x19
   118f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   118f4:	add	x0, x0, #0x320
   118f8:	add	x0, x0, #0x1a0
   118fc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11900:	mov	x19, x0
   11904:	cbnz	x0, 11870 <PyFloat_FromString@plt+0xade0>
   11908:	mov	x21, x0
   1190c:	b	1197c <PyFloat_FromString@plt+0xaeec>
   11910:	ldr	x0, [x22]
   11914:	add	x0, x0, #0x1
   11918:	str	x0, [x22]
   1191c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11920:	add	x0, x0, #0x320
   11924:	add	x0, x0, #0x1a0
   11928:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1192c:	mov	x21, x0
   11930:	cbz	x0, 119b4 <PyFloat_FromString@plt+0xaf24>
   11934:	add	x4, sp, #0x3c
   11938:	add	x3, x20, #0x10
   1193c:	add	x2, x22, #0x18
   11940:	add	x1, x19, #0x18
   11944:	add	x0, x0, #0x18
   11948:	bl	2feac <PyInit__decimal@@Base+0x15d0c>
   1194c:	ldr	x0, [x19]
   11950:	sub	x0, x0, #0x1
   11954:	str	x0, [x19]
   11958:	cbz	x0, 119ec <PyFloat_FromString@plt+0xaf5c>
   1195c:	ldr	x0, [x22]
   11960:	sub	x0, x0, #0x1
   11964:	str	x0, [x22]
   11968:	cbz	x0, 119f8 <PyFloat_FromString@plt+0xaf68>
   1196c:	ldr	w1, [sp, #60]
   11970:	mov	x0, x20
   11974:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   11978:	cbnz	w0, 11a04 <PyFloat_FromString@plt+0xaf74>
   1197c:	mov	x0, x21
   11980:	ldp	x19, x20, [sp, #16]
   11984:	ldp	x21, x22, [sp, #32]
   11988:	ldp	x29, x30, [sp], #80
   1198c:	ret
   11990:	mov	x2, x20
   11994:	mov	x1, x22
   11998:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1199c:	add	x0, x0, #0x320
   119a0:	add	x0, x0, #0x1a0
   119a4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   119a8:	mov	x22, x0
   119ac:	cbnz	x0, 1191c <PyFloat_FromString@plt+0xae8c>
   119b0:	b	118c8 <PyFloat_FromString@plt+0xae38>
   119b4:	ldr	x0, [x19]
   119b8:	sub	x0, x0, #0x1
   119bc:	str	x0, [x19]
   119c0:	cbz	x0, 119e0 <PyFloat_FromString@plt+0xaf50>
   119c4:	ldr	x0, [x22]
   119c8:	sub	x0, x0, #0x1
   119cc:	str	x0, [x22]
   119d0:	cbnz	x0, 1197c <PyFloat_FromString@plt+0xaeec>
   119d4:	mov	x0, x22
   119d8:	bl	65d0 <_Py_Dealloc@plt>
   119dc:	b	1197c <PyFloat_FromString@plt+0xaeec>
   119e0:	mov	x0, x19
   119e4:	bl	65d0 <_Py_Dealloc@plt>
   119e8:	b	119c4 <PyFloat_FromString@plt+0xaf34>
   119ec:	mov	x0, x19
   119f0:	bl	65d0 <_Py_Dealloc@plt>
   119f4:	b	1195c <PyFloat_FromString@plt+0xaecc>
   119f8:	mov	x0, x22
   119fc:	bl	65d0 <_Py_Dealloc@plt>
   11a00:	b	1196c <PyFloat_FromString@plt+0xaedc>
   11a04:	ldr	x0, [x21]
   11a08:	sub	x0, x0, #0x1
   11a0c:	str	x0, [x21]
   11a10:	cbz	x0, 11a1c <PyFloat_FromString@plt+0xaf8c>
   11a14:	mov	x21, #0x0                   	// #0
   11a18:	b	1197c <PyFloat_FromString@plt+0xaeec>
   11a1c:	mov	x0, x21
   11a20:	bl	65d0 <_Py_Dealloc@plt>
   11a24:	mov	x21, #0x0                   	// #0
   11a28:	b	1197c <PyFloat_FromString@plt+0xaeec>
   11a2c:	stp	x29, x30, [sp, #-64]!
   11a30:	mov	x29, sp
   11a34:	stp	x19, x20, [sp, #16]
   11a38:	stp	x21, x22, [sp, #32]
   11a3c:	mov	x19, x0
   11a40:	mov	x22, x1
   11a44:	str	wzr, [sp, #60]
   11a48:	add	x2, sp, #0x30
   11a4c:	mov	x1, #0x0                   	// #0
   11a50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   11a54:	ldr	x0, [x0, #1816]
   11a58:	bl	6740 <PyContextVar_Get@plt>
   11a5c:	tbnz	w0, #31, 11c98 <PyFloat_FromString@plt+0xb208>
   11a60:	ldr	x21, [sp, #48]
   11a64:	cbz	x21, 11ad0 <PyFloat_FromString@plt+0xb040>
   11a68:	ldr	x0, [x21]
   11a6c:	sub	x0, x0, #0x1
   11a70:	str	x0, [x21]
   11a74:	cbz	x0, 11ae4 <PyFloat_FromString@plt+0xb054>
   11a78:	ldr	x0, [x19, #8]
   11a7c:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   11a80:	add	x2, x2, #0x320
   11a84:	add	x2, x2, #0x1a0
   11a88:	cmp	x0, x2
   11a8c:	b.eq	11af0 <PyFloat_FromString@plt+0xb060>  // b.none
   11a90:	mov	x1, x2
   11a94:	bl	69c0 <PyType_IsSubtype@plt>
   11a98:	cbnz	w0, 11af0 <PyFloat_FromString@plt+0xb060>
   11a9c:	ldr	x0, [x19, #8]
   11aa0:	ldr	x0, [x0, #168]
   11aa4:	tbnz	w0, #24, 11b64 <PyFloat_FromString@plt+0xb0d4>
   11aa8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   11aac:	ldr	x20, [x20, #3912]
   11ab0:	ldr	x0, [x20]
   11ab4:	add	x0, x0, #0x1
   11ab8:	str	x0, [x20]
   11abc:	mov	x0, x20
   11ac0:	ldp	x19, x20, [sp, #16]
   11ac4:	ldp	x21, x22, [sp, #32]
   11ac8:	ldp	x29, x30, [sp], #64
   11acc:	ret
   11ad0:	bl	7abc <PyFloat_FromString@plt+0x102c>
   11ad4:	mov	x21, x0
   11ad8:	cbnz	x0, 11a68 <PyFloat_FromString@plt+0xafd8>
   11adc:	mov	x20, x0
   11ae0:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11ae4:	mov	x0, x21
   11ae8:	bl	65d0 <_Py_Dealloc@plt>
   11aec:	b	11a78 <PyFloat_FromString@plt+0xafe8>
   11af0:	ldr	x0, [x19]
   11af4:	add	x0, x0, #0x1
   11af8:	str	x0, [x19]
   11afc:	ldr	x0, [x22, #8]
   11b00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11b04:	add	x1, x1, #0x320
   11b08:	add	x1, x1, #0x1a0
   11b0c:	cmp	x0, x1
   11b10:	b.eq	11b8c <PyFloat_FromString@plt+0xb0fc>  // b.none
   11b14:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11b18:	add	x1, x1, #0x320
   11b1c:	add	x1, x1, #0x1a0
   11b20:	bl	69c0 <PyType_IsSubtype@plt>
   11b24:	cbnz	w0, 11b8c <PyFloat_FromString@plt+0xb0fc>
   11b28:	ldr	x0, [x22, #8]
   11b2c:	ldr	x0, [x0, #168]
   11b30:	tbnz	w0, #24, 11c10 <PyFloat_FromString@plt+0xb180>
   11b34:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   11b38:	ldr	x20, [x20, #3912]
   11b3c:	ldr	x0, [x20]
   11b40:	add	x0, x0, #0x1
   11b44:	str	x0, [x20]
   11b48:	ldr	x0, [x19]
   11b4c:	sub	x0, x0, #0x1
   11b50:	str	x0, [x19]
   11b54:	cbnz	x0, 11abc <PyFloat_FromString@plt+0xb02c>
   11b58:	mov	x0, x19
   11b5c:	bl	65d0 <_Py_Dealloc@plt>
   11b60:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11b64:	mov	x2, x21
   11b68:	mov	x1, x19
   11b6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11b70:	add	x0, x0, #0x320
   11b74:	add	x0, x0, #0x1a0
   11b78:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11b7c:	mov	x20, x0
   11b80:	mov	x19, x0
   11b84:	cbz	x0, 11abc <PyFloat_FromString@plt+0xb02c>
   11b88:	b	11afc <PyFloat_FromString@plt+0xb06c>
   11b8c:	ldr	x0, [x22]
   11b90:	add	x0, x0, #0x1
   11b94:	str	x0, [x22]
   11b98:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11b9c:	add	x0, x0, #0x320
   11ba0:	add	x0, x0, #0x1a0
   11ba4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   11ba8:	mov	x20, x0
   11bac:	cbz	x0, 11c38 <PyFloat_FromString@plt+0xb1a8>
   11bb0:	add	x4, sp, #0x3c
   11bb4:	add	x3, x21, #0x10
   11bb8:	add	x2, x22, #0x18
   11bbc:	add	x1, x19, #0x18
   11bc0:	add	x0, x0, #0x18
   11bc4:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   11bc8:	ldr	x0, [x19]
   11bcc:	sub	x0, x0, #0x1
   11bd0:	str	x0, [x19]
   11bd4:	cbz	x0, 11c70 <PyFloat_FromString@plt+0xb1e0>
   11bd8:	ldr	x0, [x22]
   11bdc:	sub	x0, x0, #0x1
   11be0:	str	x0, [x22]
   11be4:	cbz	x0, 11c7c <PyFloat_FromString@plt+0xb1ec>
   11be8:	ldr	w1, [sp, #60]
   11bec:	mov	x0, x21
   11bf0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   11bf4:	cbz	w0, 11abc <PyFloat_FromString@plt+0xb02c>
   11bf8:	ldr	x0, [x20]
   11bfc:	sub	x0, x0, #0x1
   11c00:	str	x0, [x20]
   11c04:	cbz	x0, 11c88 <PyFloat_FromString@plt+0xb1f8>
   11c08:	mov	x20, #0x0                   	// #0
   11c0c:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11c10:	mov	x2, x21
   11c14:	mov	x1, x22
   11c18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11c1c:	add	x0, x0, #0x320
   11c20:	add	x0, x0, #0x1a0
   11c24:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11c28:	mov	x20, x0
   11c2c:	mov	x22, x0
   11c30:	cbz	x0, 11b48 <PyFloat_FromString@plt+0xb0b8>
   11c34:	b	11b98 <PyFloat_FromString@plt+0xb108>
   11c38:	ldr	x0, [x19]
   11c3c:	sub	x0, x0, #0x1
   11c40:	str	x0, [x19]
   11c44:	cbz	x0, 11c64 <PyFloat_FromString@plt+0xb1d4>
   11c48:	ldr	x0, [x22]
   11c4c:	sub	x0, x0, #0x1
   11c50:	str	x0, [x22]
   11c54:	cbnz	x0, 11abc <PyFloat_FromString@plt+0xb02c>
   11c58:	mov	x0, x22
   11c5c:	bl	65d0 <_Py_Dealloc@plt>
   11c60:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11c64:	mov	x0, x19
   11c68:	bl	65d0 <_Py_Dealloc@plt>
   11c6c:	b	11c48 <PyFloat_FromString@plt+0xb1b8>
   11c70:	mov	x0, x19
   11c74:	bl	65d0 <_Py_Dealloc@plt>
   11c78:	b	11bd8 <PyFloat_FromString@plt+0xb148>
   11c7c:	mov	x0, x22
   11c80:	bl	65d0 <_Py_Dealloc@plt>
   11c84:	b	11be8 <PyFloat_FromString@plt+0xb158>
   11c88:	mov	x0, x20
   11c8c:	bl	65d0 <_Py_Dealloc@plt>
   11c90:	mov	x20, #0x0                   	// #0
   11c94:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11c98:	mov	x20, #0x0                   	// #0
   11c9c:	b	11abc <PyFloat_FromString@plt+0xb02c>
   11ca0:	stp	x29, x30, [sp, #-64]!
   11ca4:	mov	x29, sp
   11ca8:	stp	x19, x20, [sp, #16]
   11cac:	stp	x21, x22, [sp, #32]
   11cb0:	mov	x19, x0
   11cb4:	mov	x22, x1
   11cb8:	str	wzr, [sp, #60]
   11cbc:	add	x2, sp, #0x30
   11cc0:	mov	x1, #0x0                   	// #0
   11cc4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   11cc8:	ldr	x0, [x0, #1816]
   11ccc:	bl	6740 <PyContextVar_Get@plt>
   11cd0:	tbnz	w0, #31, 11f0c <PyFloat_FromString@plt+0xb47c>
   11cd4:	ldr	x21, [sp, #48]
   11cd8:	cbz	x21, 11d44 <PyFloat_FromString@plt+0xb2b4>
   11cdc:	ldr	x0, [x21]
   11ce0:	sub	x0, x0, #0x1
   11ce4:	str	x0, [x21]
   11ce8:	cbz	x0, 11d58 <PyFloat_FromString@plt+0xb2c8>
   11cec:	ldr	x0, [x19, #8]
   11cf0:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   11cf4:	add	x2, x2, #0x320
   11cf8:	add	x2, x2, #0x1a0
   11cfc:	cmp	x0, x2
   11d00:	b.eq	11d64 <PyFloat_FromString@plt+0xb2d4>  // b.none
   11d04:	mov	x1, x2
   11d08:	bl	69c0 <PyType_IsSubtype@plt>
   11d0c:	cbnz	w0, 11d64 <PyFloat_FromString@plt+0xb2d4>
   11d10:	ldr	x0, [x19, #8]
   11d14:	ldr	x0, [x0, #168]
   11d18:	tbnz	w0, #24, 11dd8 <PyFloat_FromString@plt+0xb348>
   11d1c:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   11d20:	ldr	x20, [x20, #3912]
   11d24:	ldr	x0, [x20]
   11d28:	add	x0, x0, #0x1
   11d2c:	str	x0, [x20]
   11d30:	mov	x0, x20
   11d34:	ldp	x19, x20, [sp, #16]
   11d38:	ldp	x21, x22, [sp, #32]
   11d3c:	ldp	x29, x30, [sp], #64
   11d40:	ret
   11d44:	bl	7abc <PyFloat_FromString@plt+0x102c>
   11d48:	mov	x21, x0
   11d4c:	cbnz	x0, 11cdc <PyFloat_FromString@plt+0xb24c>
   11d50:	mov	x20, x0
   11d54:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11d58:	mov	x0, x21
   11d5c:	bl	65d0 <_Py_Dealloc@plt>
   11d60:	b	11cec <PyFloat_FromString@plt+0xb25c>
   11d64:	ldr	x0, [x19]
   11d68:	add	x0, x0, #0x1
   11d6c:	str	x0, [x19]
   11d70:	ldr	x0, [x22, #8]
   11d74:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11d78:	add	x1, x1, #0x320
   11d7c:	add	x1, x1, #0x1a0
   11d80:	cmp	x0, x1
   11d84:	b.eq	11e00 <PyFloat_FromString@plt+0xb370>  // b.none
   11d88:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11d8c:	add	x1, x1, #0x320
   11d90:	add	x1, x1, #0x1a0
   11d94:	bl	69c0 <PyType_IsSubtype@plt>
   11d98:	cbnz	w0, 11e00 <PyFloat_FromString@plt+0xb370>
   11d9c:	ldr	x0, [x22, #8]
   11da0:	ldr	x0, [x0, #168]
   11da4:	tbnz	w0, #24, 11e84 <PyFloat_FromString@plt+0xb3f4>
   11da8:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   11dac:	ldr	x20, [x20, #3912]
   11db0:	ldr	x0, [x20]
   11db4:	add	x0, x0, #0x1
   11db8:	str	x0, [x20]
   11dbc:	ldr	x0, [x19]
   11dc0:	sub	x0, x0, #0x1
   11dc4:	str	x0, [x19]
   11dc8:	cbnz	x0, 11d30 <PyFloat_FromString@plt+0xb2a0>
   11dcc:	mov	x0, x19
   11dd0:	bl	65d0 <_Py_Dealloc@plt>
   11dd4:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11dd8:	mov	x2, x21
   11ddc:	mov	x1, x19
   11de0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11de4:	add	x0, x0, #0x320
   11de8:	add	x0, x0, #0x1a0
   11dec:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11df0:	mov	x20, x0
   11df4:	mov	x19, x0
   11df8:	cbz	x0, 11d30 <PyFloat_FromString@plt+0xb2a0>
   11dfc:	b	11d70 <PyFloat_FromString@plt+0xb2e0>
   11e00:	ldr	x0, [x22]
   11e04:	add	x0, x0, #0x1
   11e08:	str	x0, [x22]
   11e0c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11e10:	add	x0, x0, #0x320
   11e14:	add	x0, x0, #0x1a0
   11e18:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   11e1c:	mov	x20, x0
   11e20:	cbz	x0, 11eac <PyFloat_FromString@plt+0xb41c>
   11e24:	add	x4, sp, #0x3c
   11e28:	add	x3, x21, #0x10
   11e2c:	add	x2, x22, #0x18
   11e30:	add	x1, x19, #0x18
   11e34:	add	x0, x0, #0x18
   11e38:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
   11e3c:	ldr	x0, [x19]
   11e40:	sub	x0, x0, #0x1
   11e44:	str	x0, [x19]
   11e48:	cbz	x0, 11ee4 <PyFloat_FromString@plt+0xb454>
   11e4c:	ldr	x0, [x22]
   11e50:	sub	x0, x0, #0x1
   11e54:	str	x0, [x22]
   11e58:	cbz	x0, 11ef0 <PyFloat_FromString@plt+0xb460>
   11e5c:	ldr	w1, [sp, #60]
   11e60:	mov	x0, x21
   11e64:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   11e68:	cbz	w0, 11d30 <PyFloat_FromString@plt+0xb2a0>
   11e6c:	ldr	x0, [x20]
   11e70:	sub	x0, x0, #0x1
   11e74:	str	x0, [x20]
   11e78:	cbz	x0, 11efc <PyFloat_FromString@plt+0xb46c>
   11e7c:	mov	x20, #0x0                   	// #0
   11e80:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11e84:	mov	x2, x21
   11e88:	mov	x1, x22
   11e8c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   11e90:	add	x0, x0, #0x320
   11e94:	add	x0, x0, #0x1a0
   11e98:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   11e9c:	mov	x20, x0
   11ea0:	mov	x22, x0
   11ea4:	cbz	x0, 11dbc <PyFloat_FromString@plt+0xb32c>
   11ea8:	b	11e0c <PyFloat_FromString@plt+0xb37c>
   11eac:	ldr	x0, [x19]
   11eb0:	sub	x0, x0, #0x1
   11eb4:	str	x0, [x19]
   11eb8:	cbz	x0, 11ed8 <PyFloat_FromString@plt+0xb448>
   11ebc:	ldr	x0, [x22]
   11ec0:	sub	x0, x0, #0x1
   11ec4:	str	x0, [x22]
   11ec8:	cbnz	x0, 11d30 <PyFloat_FromString@plt+0xb2a0>
   11ecc:	mov	x0, x22
   11ed0:	bl	65d0 <_Py_Dealloc@plt>
   11ed4:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11ed8:	mov	x0, x19
   11edc:	bl	65d0 <_Py_Dealloc@plt>
   11ee0:	b	11ebc <PyFloat_FromString@plt+0xb42c>
   11ee4:	mov	x0, x19
   11ee8:	bl	65d0 <_Py_Dealloc@plt>
   11eec:	b	11e4c <PyFloat_FromString@plt+0xb3bc>
   11ef0:	mov	x0, x22
   11ef4:	bl	65d0 <_Py_Dealloc@plt>
   11ef8:	b	11e5c <PyFloat_FromString@plt+0xb3cc>
   11efc:	mov	x0, x20
   11f00:	bl	65d0 <_Py_Dealloc@plt>
   11f04:	mov	x20, #0x0                   	// #0
   11f08:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11f0c:	mov	x20, #0x0                   	// #0
   11f10:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11f14:	stp	x29, x30, [sp, #-64]!
   11f18:	mov	x29, sp
   11f1c:	stp	x19, x20, [sp, #16]
   11f20:	stp	x21, x22, [sp, #32]
   11f24:	mov	x19, x0
   11f28:	mov	x22, x1
   11f2c:	str	wzr, [sp, #60]
   11f30:	add	x2, sp, #0x30
   11f34:	mov	x1, #0x0                   	// #0
   11f38:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   11f3c:	ldr	x0, [x0, #1816]
   11f40:	bl	6740 <PyContextVar_Get@plt>
   11f44:	tbnz	w0, #31, 12180 <PyFloat_FromString@plt+0xb6f0>
   11f48:	ldr	x21, [sp, #48]
   11f4c:	cbz	x21, 11fb8 <PyFloat_FromString@plt+0xb528>
   11f50:	ldr	x0, [x21]
   11f54:	sub	x0, x0, #0x1
   11f58:	str	x0, [x21]
   11f5c:	cbz	x0, 11fcc <PyFloat_FromString@plt+0xb53c>
   11f60:	ldr	x0, [x19, #8]
   11f64:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   11f68:	add	x2, x2, #0x320
   11f6c:	add	x2, x2, #0x1a0
   11f70:	cmp	x0, x2
   11f74:	b.eq	11fd8 <PyFloat_FromString@plt+0xb548>  // b.none
   11f78:	mov	x1, x2
   11f7c:	bl	69c0 <PyType_IsSubtype@plt>
   11f80:	cbnz	w0, 11fd8 <PyFloat_FromString@plt+0xb548>
   11f84:	ldr	x0, [x19, #8]
   11f88:	ldr	x0, [x0, #168]
   11f8c:	tbnz	w0, #24, 1204c <PyFloat_FromString@plt+0xb5bc>
   11f90:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   11f94:	ldr	x20, [x20, #3912]
   11f98:	ldr	x0, [x20]
   11f9c:	add	x0, x0, #0x1
   11fa0:	str	x0, [x20]
   11fa4:	mov	x0, x20
   11fa8:	ldp	x19, x20, [sp, #16]
   11fac:	ldp	x21, x22, [sp, #32]
   11fb0:	ldp	x29, x30, [sp], #64
   11fb4:	ret
   11fb8:	bl	7abc <PyFloat_FromString@plt+0x102c>
   11fbc:	mov	x21, x0
   11fc0:	cbnz	x0, 11f50 <PyFloat_FromString@plt+0xb4c0>
   11fc4:	mov	x20, x0
   11fc8:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   11fcc:	mov	x0, x21
   11fd0:	bl	65d0 <_Py_Dealloc@plt>
   11fd4:	b	11f60 <PyFloat_FromString@plt+0xb4d0>
   11fd8:	ldr	x0, [x19]
   11fdc:	add	x0, x0, #0x1
   11fe0:	str	x0, [x19]
   11fe4:	ldr	x0, [x22, #8]
   11fe8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   11fec:	add	x1, x1, #0x320
   11ff0:	add	x1, x1, #0x1a0
   11ff4:	cmp	x0, x1
   11ff8:	b.eq	12074 <PyFloat_FromString@plt+0xb5e4>  // b.none
   11ffc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12000:	add	x1, x1, #0x320
   12004:	add	x1, x1, #0x1a0
   12008:	bl	69c0 <PyType_IsSubtype@plt>
   1200c:	cbnz	w0, 12074 <PyFloat_FromString@plt+0xb5e4>
   12010:	ldr	x0, [x22, #8]
   12014:	ldr	x0, [x0, #168]
   12018:	tbnz	w0, #24, 120f8 <PyFloat_FromString@plt+0xb668>
   1201c:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   12020:	ldr	x20, [x20, #3912]
   12024:	ldr	x0, [x20]
   12028:	add	x0, x0, #0x1
   1202c:	str	x0, [x20]
   12030:	ldr	x0, [x19]
   12034:	sub	x0, x0, #0x1
   12038:	str	x0, [x19]
   1203c:	cbnz	x0, 11fa4 <PyFloat_FromString@plt+0xb514>
   12040:	mov	x0, x19
   12044:	bl	65d0 <_Py_Dealloc@plt>
   12048:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   1204c:	mov	x2, x21
   12050:	mov	x1, x19
   12054:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12058:	add	x0, x0, #0x320
   1205c:	add	x0, x0, #0x1a0
   12060:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   12064:	mov	x20, x0
   12068:	mov	x19, x0
   1206c:	cbz	x0, 11fa4 <PyFloat_FromString@plt+0xb514>
   12070:	b	11fe4 <PyFloat_FromString@plt+0xb554>
   12074:	ldr	x0, [x22]
   12078:	add	x0, x0, #0x1
   1207c:	str	x0, [x22]
   12080:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12084:	add	x0, x0, #0x320
   12088:	add	x0, x0, #0x1a0
   1208c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   12090:	mov	x20, x0
   12094:	cbz	x0, 12120 <PyFloat_FromString@plt+0xb690>
   12098:	add	x4, sp, #0x3c
   1209c:	add	x3, x21, #0x10
   120a0:	add	x2, x22, #0x18
   120a4:	add	x1, x19, #0x18
   120a8:	add	x0, x0, #0x18
   120ac:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   120b0:	ldr	x0, [x19]
   120b4:	sub	x0, x0, #0x1
   120b8:	str	x0, [x19]
   120bc:	cbz	x0, 12158 <PyFloat_FromString@plt+0xb6c8>
   120c0:	ldr	x0, [x22]
   120c4:	sub	x0, x0, #0x1
   120c8:	str	x0, [x22]
   120cc:	cbz	x0, 12164 <PyFloat_FromString@plt+0xb6d4>
   120d0:	ldr	w1, [sp, #60]
   120d4:	mov	x0, x21
   120d8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   120dc:	cbz	w0, 11fa4 <PyFloat_FromString@plt+0xb514>
   120e0:	ldr	x0, [x20]
   120e4:	sub	x0, x0, #0x1
   120e8:	str	x0, [x20]
   120ec:	cbz	x0, 12170 <PyFloat_FromString@plt+0xb6e0>
   120f0:	mov	x20, #0x0                   	// #0
   120f4:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   120f8:	mov	x2, x21
   120fc:	mov	x1, x22
   12100:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12104:	add	x0, x0, #0x320
   12108:	add	x0, x0, #0x1a0
   1210c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   12110:	mov	x20, x0
   12114:	mov	x22, x0
   12118:	cbz	x0, 12030 <PyFloat_FromString@plt+0xb5a0>
   1211c:	b	12080 <PyFloat_FromString@plt+0xb5f0>
   12120:	ldr	x0, [x19]
   12124:	sub	x0, x0, #0x1
   12128:	str	x0, [x19]
   1212c:	cbz	x0, 1214c <PyFloat_FromString@plt+0xb6bc>
   12130:	ldr	x0, [x22]
   12134:	sub	x0, x0, #0x1
   12138:	str	x0, [x22]
   1213c:	cbnz	x0, 11fa4 <PyFloat_FromString@plt+0xb514>
   12140:	mov	x0, x22
   12144:	bl	65d0 <_Py_Dealloc@plt>
   12148:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   1214c:	mov	x0, x19
   12150:	bl	65d0 <_Py_Dealloc@plt>
   12154:	b	12130 <PyFloat_FromString@plt+0xb6a0>
   12158:	mov	x0, x19
   1215c:	bl	65d0 <_Py_Dealloc@plt>
   12160:	b	120c0 <PyFloat_FromString@plt+0xb630>
   12164:	mov	x0, x22
   12168:	bl	65d0 <_Py_Dealloc@plt>
   1216c:	b	120d0 <PyFloat_FromString@plt+0xb640>
   12170:	mov	x0, x20
   12174:	bl	65d0 <_Py_Dealloc@plt>
   12178:	mov	x20, #0x0                   	// #0
   1217c:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   12180:	mov	x20, #0x0                   	// #0
   12184:	b	11fa4 <PyFloat_FromString@plt+0xb514>
   12188:	stp	x29, x30, [sp, #-64]!
   1218c:	mov	x29, sp
   12190:	stp	x19, x20, [sp, #16]
   12194:	stp	x21, x22, [sp, #32]
   12198:	mov	x19, x0
   1219c:	mov	x22, x1
   121a0:	str	wzr, [sp, #60]
   121a4:	add	x2, sp, #0x30
   121a8:	mov	x1, #0x0                   	// #0
   121ac:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   121b0:	ldr	x0, [x0, #1816]
   121b4:	bl	6740 <PyContextVar_Get@plt>
   121b8:	tbnz	w0, #31, 123f4 <PyFloat_FromString@plt+0xb964>
   121bc:	ldr	x21, [sp, #48]
   121c0:	cbz	x21, 1222c <PyFloat_FromString@plt+0xb79c>
   121c4:	ldr	x0, [x21]
   121c8:	sub	x0, x0, #0x1
   121cc:	str	x0, [x21]
   121d0:	cbz	x0, 12240 <PyFloat_FromString@plt+0xb7b0>
   121d4:	ldr	x0, [x19, #8]
   121d8:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   121dc:	add	x2, x2, #0x320
   121e0:	add	x2, x2, #0x1a0
   121e4:	cmp	x0, x2
   121e8:	b.eq	1224c <PyFloat_FromString@plt+0xb7bc>  // b.none
   121ec:	mov	x1, x2
   121f0:	bl	69c0 <PyType_IsSubtype@plt>
   121f4:	cbnz	w0, 1224c <PyFloat_FromString@plt+0xb7bc>
   121f8:	ldr	x0, [x19, #8]
   121fc:	ldr	x0, [x0, #168]
   12200:	tbnz	w0, #24, 122c0 <PyFloat_FromString@plt+0xb830>
   12204:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   12208:	ldr	x20, [x20, #3912]
   1220c:	ldr	x0, [x20]
   12210:	add	x0, x0, #0x1
   12214:	str	x0, [x20]
   12218:	mov	x0, x20
   1221c:	ldp	x19, x20, [sp, #16]
   12220:	ldp	x21, x22, [sp, #32]
   12224:	ldp	x29, x30, [sp], #64
   12228:	ret
   1222c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   12230:	mov	x21, x0
   12234:	cbnz	x0, 121c4 <PyFloat_FromString@plt+0xb734>
   12238:	mov	x20, x0
   1223c:	b	12218 <PyFloat_FromString@plt+0xb788>
   12240:	mov	x0, x21
   12244:	bl	65d0 <_Py_Dealloc@plt>
   12248:	b	121d4 <PyFloat_FromString@plt+0xb744>
   1224c:	ldr	x0, [x19]
   12250:	add	x0, x0, #0x1
   12254:	str	x0, [x19]
   12258:	ldr	x0, [x22, #8]
   1225c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12260:	add	x1, x1, #0x320
   12264:	add	x1, x1, #0x1a0
   12268:	cmp	x0, x1
   1226c:	b.eq	122e8 <PyFloat_FromString@plt+0xb858>  // b.none
   12270:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12274:	add	x1, x1, #0x320
   12278:	add	x1, x1, #0x1a0
   1227c:	bl	69c0 <PyType_IsSubtype@plt>
   12280:	cbnz	w0, 122e8 <PyFloat_FromString@plt+0xb858>
   12284:	ldr	x0, [x22, #8]
   12288:	ldr	x0, [x0, #168]
   1228c:	tbnz	w0, #24, 1236c <PyFloat_FromString@plt+0xb8dc>
   12290:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   12294:	ldr	x20, [x20, #3912]
   12298:	ldr	x0, [x20]
   1229c:	add	x0, x0, #0x1
   122a0:	str	x0, [x20]
   122a4:	ldr	x0, [x19]
   122a8:	sub	x0, x0, #0x1
   122ac:	str	x0, [x19]
   122b0:	cbnz	x0, 12218 <PyFloat_FromString@plt+0xb788>
   122b4:	mov	x0, x19
   122b8:	bl	65d0 <_Py_Dealloc@plt>
   122bc:	b	12218 <PyFloat_FromString@plt+0xb788>
   122c0:	mov	x2, x21
   122c4:	mov	x1, x19
   122c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   122cc:	add	x0, x0, #0x320
   122d0:	add	x0, x0, #0x1a0
   122d4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   122d8:	mov	x20, x0
   122dc:	mov	x19, x0
   122e0:	cbz	x0, 12218 <PyFloat_FromString@plt+0xb788>
   122e4:	b	12258 <PyFloat_FromString@plt+0xb7c8>
   122e8:	ldr	x0, [x22]
   122ec:	add	x0, x0, #0x1
   122f0:	str	x0, [x22]
   122f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   122f8:	add	x0, x0, #0x320
   122fc:	add	x0, x0, #0x1a0
   12300:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   12304:	mov	x20, x0
   12308:	cbz	x0, 12394 <PyFloat_FromString@plt+0xb904>
   1230c:	add	x4, sp, #0x3c
   12310:	add	x3, x21, #0x10
   12314:	add	x2, x22, #0x18
   12318:	add	x1, x19, #0x18
   1231c:	add	x0, x0, #0x18
   12320:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   12324:	ldr	x0, [x19]
   12328:	sub	x0, x0, #0x1
   1232c:	str	x0, [x19]
   12330:	cbz	x0, 123cc <PyFloat_FromString@plt+0xb93c>
   12334:	ldr	x0, [x22]
   12338:	sub	x0, x0, #0x1
   1233c:	str	x0, [x22]
   12340:	cbz	x0, 123d8 <PyFloat_FromString@plt+0xb948>
   12344:	ldr	w1, [sp, #60]
   12348:	mov	x0, x21
   1234c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   12350:	cbz	w0, 12218 <PyFloat_FromString@plt+0xb788>
   12354:	ldr	x0, [x20]
   12358:	sub	x0, x0, #0x1
   1235c:	str	x0, [x20]
   12360:	cbz	x0, 123e4 <PyFloat_FromString@plt+0xb954>
   12364:	mov	x20, #0x0                   	// #0
   12368:	b	12218 <PyFloat_FromString@plt+0xb788>
   1236c:	mov	x2, x21
   12370:	mov	x1, x22
   12374:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12378:	add	x0, x0, #0x320
   1237c:	add	x0, x0, #0x1a0
   12380:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   12384:	mov	x20, x0
   12388:	mov	x22, x0
   1238c:	cbz	x0, 122a4 <PyFloat_FromString@plt+0xb814>
   12390:	b	122f4 <PyFloat_FromString@plt+0xb864>
   12394:	ldr	x0, [x19]
   12398:	sub	x0, x0, #0x1
   1239c:	str	x0, [x19]
   123a0:	cbz	x0, 123c0 <PyFloat_FromString@plt+0xb930>
   123a4:	ldr	x0, [x22]
   123a8:	sub	x0, x0, #0x1
   123ac:	str	x0, [x22]
   123b0:	cbnz	x0, 12218 <PyFloat_FromString@plt+0xb788>
   123b4:	mov	x0, x22
   123b8:	bl	65d0 <_Py_Dealloc@plt>
   123bc:	b	12218 <PyFloat_FromString@plt+0xb788>
   123c0:	mov	x0, x19
   123c4:	bl	65d0 <_Py_Dealloc@plt>
   123c8:	b	123a4 <PyFloat_FromString@plt+0xb914>
   123cc:	mov	x0, x19
   123d0:	bl	65d0 <_Py_Dealloc@plt>
   123d4:	b	12334 <PyFloat_FromString@plt+0xb8a4>
   123d8:	mov	x0, x22
   123dc:	bl	65d0 <_Py_Dealloc@plt>
   123e0:	b	12344 <PyFloat_FromString@plt+0xb8b4>
   123e4:	mov	x0, x20
   123e8:	bl	65d0 <_Py_Dealloc@plt>
   123ec:	mov	x20, #0x0                   	// #0
   123f0:	b	12218 <PyFloat_FromString@plt+0xb788>
   123f4:	mov	x20, #0x0                   	// #0
   123f8:	b	12218 <PyFloat_FromString@plt+0xb788>
   123fc:	stp	x29, x30, [sp, #-64]!
   12400:	mov	x29, sp
   12404:	stp	x19, x20, [sp, #16]
   12408:	stp	x21, x22, [sp, #32]
   1240c:	mov	x19, x0
   12410:	mov	x22, x1
   12414:	str	wzr, [sp, #60]
   12418:	add	x2, sp, #0x30
   1241c:	mov	x1, #0x0                   	// #0
   12420:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   12424:	ldr	x0, [x0, #1816]
   12428:	bl	6740 <PyContextVar_Get@plt>
   1242c:	tbnz	w0, #31, 12668 <PyFloat_FromString@plt+0xbbd8>
   12430:	ldr	x21, [sp, #48]
   12434:	cbz	x21, 124a0 <PyFloat_FromString@plt+0xba10>
   12438:	ldr	x0, [x21]
   1243c:	sub	x0, x0, #0x1
   12440:	str	x0, [x21]
   12444:	cbz	x0, 124b4 <PyFloat_FromString@plt+0xba24>
   12448:	ldr	x0, [x19, #8]
   1244c:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   12450:	add	x2, x2, #0x320
   12454:	add	x2, x2, #0x1a0
   12458:	cmp	x0, x2
   1245c:	b.eq	124c0 <PyFloat_FromString@plt+0xba30>  // b.none
   12460:	mov	x1, x2
   12464:	bl	69c0 <PyType_IsSubtype@plt>
   12468:	cbnz	w0, 124c0 <PyFloat_FromString@plt+0xba30>
   1246c:	ldr	x0, [x19, #8]
   12470:	ldr	x0, [x0, #168]
   12474:	tbnz	w0, #24, 12534 <PyFloat_FromString@plt+0xbaa4>
   12478:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   1247c:	ldr	x20, [x20, #3912]
   12480:	ldr	x0, [x20]
   12484:	add	x0, x0, #0x1
   12488:	str	x0, [x20]
   1248c:	mov	x0, x20
   12490:	ldp	x19, x20, [sp, #16]
   12494:	ldp	x21, x22, [sp, #32]
   12498:	ldp	x29, x30, [sp], #64
   1249c:	ret
   124a0:	bl	7abc <PyFloat_FromString@plt+0x102c>
   124a4:	mov	x21, x0
   124a8:	cbnz	x0, 12438 <PyFloat_FromString@plt+0xb9a8>
   124ac:	mov	x20, x0
   124b0:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   124b4:	mov	x0, x21
   124b8:	bl	65d0 <_Py_Dealloc@plt>
   124bc:	b	12448 <PyFloat_FromString@plt+0xb9b8>
   124c0:	ldr	x0, [x19]
   124c4:	add	x0, x0, #0x1
   124c8:	str	x0, [x19]
   124cc:	ldr	x0, [x22, #8]
   124d0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   124d4:	add	x1, x1, #0x320
   124d8:	add	x1, x1, #0x1a0
   124dc:	cmp	x0, x1
   124e0:	b.eq	1255c <PyFloat_FromString@plt+0xbacc>  // b.none
   124e4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   124e8:	add	x1, x1, #0x320
   124ec:	add	x1, x1, #0x1a0
   124f0:	bl	69c0 <PyType_IsSubtype@plt>
   124f4:	cbnz	w0, 1255c <PyFloat_FromString@plt+0xbacc>
   124f8:	ldr	x0, [x22, #8]
   124fc:	ldr	x0, [x0, #168]
   12500:	tbnz	w0, #24, 125e0 <PyFloat_FromString@plt+0xbb50>
   12504:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   12508:	ldr	x20, [x20, #3912]
   1250c:	ldr	x0, [x20]
   12510:	add	x0, x0, #0x1
   12514:	str	x0, [x20]
   12518:	ldr	x0, [x19]
   1251c:	sub	x0, x0, #0x1
   12520:	str	x0, [x19]
   12524:	cbnz	x0, 1248c <PyFloat_FromString@plt+0xb9fc>
   12528:	mov	x0, x19
   1252c:	bl	65d0 <_Py_Dealloc@plt>
   12530:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   12534:	mov	x2, x21
   12538:	mov	x1, x19
   1253c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12540:	add	x0, x0, #0x320
   12544:	add	x0, x0, #0x1a0
   12548:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1254c:	mov	x20, x0
   12550:	mov	x19, x0
   12554:	cbz	x0, 1248c <PyFloat_FromString@plt+0xb9fc>
   12558:	b	124cc <PyFloat_FromString@plt+0xba3c>
   1255c:	ldr	x0, [x22]
   12560:	add	x0, x0, #0x1
   12564:	str	x0, [x22]
   12568:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1256c:	add	x0, x0, #0x320
   12570:	add	x0, x0, #0x1a0
   12574:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   12578:	mov	x20, x0
   1257c:	cbz	x0, 12608 <PyFloat_FromString@plt+0xbb78>
   12580:	add	x4, sp, #0x3c
   12584:	add	x3, x21, #0x10
   12588:	add	x2, x22, #0x18
   1258c:	add	x1, x19, #0x18
   12590:	add	x0, x0, #0x18
   12594:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   12598:	ldr	x0, [x19]
   1259c:	sub	x0, x0, #0x1
   125a0:	str	x0, [x19]
   125a4:	cbz	x0, 12640 <PyFloat_FromString@plt+0xbbb0>
   125a8:	ldr	x0, [x22]
   125ac:	sub	x0, x0, #0x1
   125b0:	str	x0, [x22]
   125b4:	cbz	x0, 1264c <PyFloat_FromString@plt+0xbbbc>
   125b8:	ldr	w1, [sp, #60]
   125bc:	mov	x0, x21
   125c0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   125c4:	cbz	w0, 1248c <PyFloat_FromString@plt+0xb9fc>
   125c8:	ldr	x0, [x20]
   125cc:	sub	x0, x0, #0x1
   125d0:	str	x0, [x20]
   125d4:	cbz	x0, 12658 <PyFloat_FromString@plt+0xbbc8>
   125d8:	mov	x20, #0x0                   	// #0
   125dc:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   125e0:	mov	x2, x21
   125e4:	mov	x1, x22
   125e8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   125ec:	add	x0, x0, #0x320
   125f0:	add	x0, x0, #0x1a0
   125f4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   125f8:	mov	x20, x0
   125fc:	mov	x22, x0
   12600:	cbz	x0, 12518 <PyFloat_FromString@plt+0xba88>
   12604:	b	12568 <PyFloat_FromString@plt+0xbad8>
   12608:	ldr	x0, [x19]
   1260c:	sub	x0, x0, #0x1
   12610:	str	x0, [x19]
   12614:	cbz	x0, 12634 <PyFloat_FromString@plt+0xbba4>
   12618:	ldr	x0, [x22]
   1261c:	sub	x0, x0, #0x1
   12620:	str	x0, [x22]
   12624:	cbnz	x0, 1248c <PyFloat_FromString@plt+0xb9fc>
   12628:	mov	x0, x22
   1262c:	bl	65d0 <_Py_Dealloc@plt>
   12630:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   12634:	mov	x0, x19
   12638:	bl	65d0 <_Py_Dealloc@plt>
   1263c:	b	12618 <PyFloat_FromString@plt+0xbb88>
   12640:	mov	x0, x19
   12644:	bl	65d0 <_Py_Dealloc@plt>
   12648:	b	125a8 <PyFloat_FromString@plt+0xbb18>
   1264c:	mov	x0, x22
   12650:	bl	65d0 <_Py_Dealloc@plt>
   12654:	b	125b8 <PyFloat_FromString@plt+0xbb28>
   12658:	mov	x0, x20
   1265c:	bl	65d0 <_Py_Dealloc@plt>
   12660:	mov	x20, #0x0                   	// #0
   12664:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   12668:	mov	x20, #0x0                   	// #0
   1266c:	b	1248c <PyFloat_FromString@plt+0xb9fc>
   12670:	stp	x29, x30, [sp, #-64]!
   12674:	mov	x29, sp
   12678:	stp	x19, x20, [sp, #16]
   1267c:	stp	x21, x22, [sp, #32]
   12680:	mov	x19, x0
   12684:	mov	x22, x1
   12688:	str	wzr, [sp, #60]
   1268c:	add	x2, sp, #0x30
   12690:	mov	x1, #0x0                   	// #0
   12694:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   12698:	ldr	x0, [x0, #1816]
   1269c:	bl	6740 <PyContextVar_Get@plt>
   126a0:	tbnz	w0, #31, 128dc <PyFloat_FromString@plt+0xbe4c>
   126a4:	ldr	x21, [sp, #48]
   126a8:	cbz	x21, 12714 <PyFloat_FromString@plt+0xbc84>
   126ac:	ldr	x0, [x21]
   126b0:	sub	x0, x0, #0x1
   126b4:	str	x0, [x21]
   126b8:	cbz	x0, 12728 <PyFloat_FromString@plt+0xbc98>
   126bc:	ldr	x0, [x19, #8]
   126c0:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   126c4:	add	x2, x2, #0x320
   126c8:	add	x2, x2, #0x1a0
   126cc:	cmp	x0, x2
   126d0:	b.eq	12734 <PyFloat_FromString@plt+0xbca4>  // b.none
   126d4:	mov	x1, x2
   126d8:	bl	69c0 <PyType_IsSubtype@plt>
   126dc:	cbnz	w0, 12734 <PyFloat_FromString@plt+0xbca4>
   126e0:	ldr	x0, [x19, #8]
   126e4:	ldr	x0, [x0, #168]
   126e8:	tbnz	w0, #24, 127a8 <PyFloat_FromString@plt+0xbd18>
   126ec:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   126f0:	ldr	x20, [x20, #3912]
   126f4:	ldr	x0, [x20]
   126f8:	add	x0, x0, #0x1
   126fc:	str	x0, [x20]
   12700:	mov	x0, x20
   12704:	ldp	x19, x20, [sp, #16]
   12708:	ldp	x21, x22, [sp, #32]
   1270c:	ldp	x29, x30, [sp], #64
   12710:	ret
   12714:	bl	7abc <PyFloat_FromString@plt+0x102c>
   12718:	mov	x21, x0
   1271c:	cbnz	x0, 126ac <PyFloat_FromString@plt+0xbc1c>
   12720:	mov	x20, x0
   12724:	b	12700 <PyFloat_FromString@plt+0xbc70>
   12728:	mov	x0, x21
   1272c:	bl	65d0 <_Py_Dealloc@plt>
   12730:	b	126bc <PyFloat_FromString@plt+0xbc2c>
   12734:	ldr	x0, [x19]
   12738:	add	x0, x0, #0x1
   1273c:	str	x0, [x19]
   12740:	ldr	x0, [x22, #8]
   12744:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12748:	add	x1, x1, #0x320
   1274c:	add	x1, x1, #0x1a0
   12750:	cmp	x0, x1
   12754:	b.eq	127d0 <PyFloat_FromString@plt+0xbd40>  // b.none
   12758:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1275c:	add	x1, x1, #0x320
   12760:	add	x1, x1, #0x1a0
   12764:	bl	69c0 <PyType_IsSubtype@plt>
   12768:	cbnz	w0, 127d0 <PyFloat_FromString@plt+0xbd40>
   1276c:	ldr	x0, [x22, #8]
   12770:	ldr	x0, [x0, #168]
   12774:	tbnz	w0, #24, 12854 <PyFloat_FromString@plt+0xbdc4>
   12778:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   1277c:	ldr	x20, [x20, #3912]
   12780:	ldr	x0, [x20]
   12784:	add	x0, x0, #0x1
   12788:	str	x0, [x20]
   1278c:	ldr	x0, [x19]
   12790:	sub	x0, x0, #0x1
   12794:	str	x0, [x19]
   12798:	cbnz	x0, 12700 <PyFloat_FromString@plt+0xbc70>
   1279c:	mov	x0, x19
   127a0:	bl	65d0 <_Py_Dealloc@plt>
   127a4:	b	12700 <PyFloat_FromString@plt+0xbc70>
   127a8:	mov	x2, x21
   127ac:	mov	x1, x19
   127b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   127b4:	add	x0, x0, #0x320
   127b8:	add	x0, x0, #0x1a0
   127bc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   127c0:	mov	x20, x0
   127c4:	mov	x19, x0
   127c8:	cbz	x0, 12700 <PyFloat_FromString@plt+0xbc70>
   127cc:	b	12740 <PyFloat_FromString@plt+0xbcb0>
   127d0:	ldr	x0, [x22]
   127d4:	add	x0, x0, #0x1
   127d8:	str	x0, [x22]
   127dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   127e0:	add	x0, x0, #0x320
   127e4:	add	x0, x0, #0x1a0
   127e8:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   127ec:	mov	x20, x0
   127f0:	cbz	x0, 1287c <PyFloat_FromString@plt+0xbdec>
   127f4:	add	x4, sp, #0x3c
   127f8:	add	x3, x21, #0x10
   127fc:	add	x2, x22, #0x18
   12800:	add	x1, x19, #0x18
   12804:	add	x0, x0, #0x18
   12808:	bl	3628c <PyInit__decimal@@Base+0x1c0ec>
   1280c:	ldr	x0, [x19]
   12810:	sub	x0, x0, #0x1
   12814:	str	x0, [x19]
   12818:	cbz	x0, 128b4 <PyFloat_FromString@plt+0xbe24>
   1281c:	ldr	x0, [x22]
   12820:	sub	x0, x0, #0x1
   12824:	str	x0, [x22]
   12828:	cbz	x0, 128c0 <PyFloat_FromString@plt+0xbe30>
   1282c:	ldr	w1, [sp, #60]
   12830:	mov	x0, x21
   12834:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   12838:	cbz	w0, 12700 <PyFloat_FromString@plt+0xbc70>
   1283c:	ldr	x0, [x20]
   12840:	sub	x0, x0, #0x1
   12844:	str	x0, [x20]
   12848:	cbz	x0, 128cc <PyFloat_FromString@plt+0xbe3c>
   1284c:	mov	x20, #0x0                   	// #0
   12850:	b	12700 <PyFloat_FromString@plt+0xbc70>
   12854:	mov	x2, x21
   12858:	mov	x1, x22
   1285c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12860:	add	x0, x0, #0x320
   12864:	add	x0, x0, #0x1a0
   12868:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1286c:	mov	x20, x0
   12870:	mov	x22, x0
   12874:	cbz	x0, 1278c <PyFloat_FromString@plt+0xbcfc>
   12878:	b	127dc <PyFloat_FromString@plt+0xbd4c>
   1287c:	ldr	x0, [x19]
   12880:	sub	x0, x0, #0x1
   12884:	str	x0, [x19]
   12888:	cbz	x0, 128a8 <PyFloat_FromString@plt+0xbe18>
   1288c:	ldr	x0, [x22]
   12890:	sub	x0, x0, #0x1
   12894:	str	x0, [x22]
   12898:	cbnz	x0, 12700 <PyFloat_FromString@plt+0xbc70>
   1289c:	mov	x0, x22
   128a0:	bl	65d0 <_Py_Dealloc@plt>
   128a4:	b	12700 <PyFloat_FromString@plt+0xbc70>
   128a8:	mov	x0, x19
   128ac:	bl	65d0 <_Py_Dealloc@plt>
   128b0:	b	1288c <PyFloat_FromString@plt+0xbdfc>
   128b4:	mov	x0, x19
   128b8:	bl	65d0 <_Py_Dealloc@plt>
   128bc:	b	1281c <PyFloat_FromString@plt+0xbd8c>
   128c0:	mov	x0, x22
   128c4:	bl	65d0 <_Py_Dealloc@plt>
   128c8:	b	1282c <PyFloat_FromString@plt+0xbd9c>
   128cc:	mov	x0, x20
   128d0:	bl	65d0 <_Py_Dealloc@plt>
   128d4:	mov	x20, #0x0                   	// #0
   128d8:	b	12700 <PyFloat_FromString@plt+0xbc70>
   128dc:	mov	x20, #0x0                   	// #0
   128e0:	b	12700 <PyFloat_FromString@plt+0xbc70>
   128e4:	stp	x29, x30, [sp, #-48]!
   128e8:	mov	x29, sp
   128ec:	str	x19, [sp, #16]
   128f0:	mov	x19, x0
   128f4:	mov	x0, x1
   128f8:	mov	x1, x2
   128fc:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   12900:	ldr	x2, [x2, #4008]
   12904:	str	x2, [sp, #40]
   12908:	add	x4, sp, #0x28
   1290c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   12910:	add	x3, x3, #0x9a0
   12914:	add	x3, x3, #0x210
   12918:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1291c:	add	x2, x2, #0x878
   12920:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   12924:	cbz	w0, 129ec <PyFloat_FromString@plt+0xbf5c>
   12928:	ldr	x1, [sp, #40]
   1292c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12930:	ldr	x0, [x0, #4008]
   12934:	cmp	x1, x0
   12938:	b.eq	12980 <PyFloat_FromString@plt+0xbef0>  // b.none
   1293c:	ldr	x0, [x1, #8]
   12940:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12944:	add	x1, x1, #0x320
   12948:	cmp	x0, x1
   1294c:	b.eq	12960 <PyFloat_FromString@plt+0xbed0>  // b.none
   12950:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12954:	add	x1, x1, #0x320
   12958:	bl	69c0 <PyType_IsSubtype@plt>
   1295c:	cbz	w0, 129cc <PyFloat_FromString@plt+0xbf3c>
   12960:	ldr	x1, [sp, #40]
   12964:	add	x1, x1, #0x10
   12968:	add	x0, x19, #0x18
   1296c:	bl	2d734 <PyInit__decimal@@Base+0x13594>
   12970:	bl	6960 <PyUnicode_FromString@plt>
   12974:	ldr	x19, [sp, #16]
   12978:	ldp	x29, x30, [sp], #48
   1297c:	ret
   12980:	add	x2, sp, #0x20
   12984:	mov	x1, #0x0                   	// #0
   12988:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1298c:	ldr	x0, [x0, #1816]
   12990:	bl	6740 <PyContextVar_Get@plt>
   12994:	tbnz	w0, #31, 129f4 <PyFloat_FromString@plt+0xbf64>
   12998:	ldr	x0, [sp, #32]
   1299c:	cbz	x0, 129bc <PyFloat_FromString@plt+0xbf2c>
   129a0:	str	x0, [sp, #40]
   129a4:	ldr	x1, [x0]
   129a8:	sub	x1, x1, #0x1
   129ac:	str	x1, [x0]
   129b0:	cbnz	x1, 12960 <PyFloat_FromString@plt+0xbed0>
   129b4:	bl	65d0 <_Py_Dealloc@plt>
   129b8:	b	12960 <PyFloat_FromString@plt+0xbed0>
   129bc:	bl	7abc <PyFloat_FromString@plt+0x102c>
   129c0:	str	x0, [sp, #40]
   129c4:	cbnz	x0, 129a4 <PyFloat_FromString@plt+0xbf14>
   129c8:	b	12974 <PyFloat_FromString@plt+0xbee4>
   129cc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   129d0:	add	x1, x1, #0x928
   129d4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   129d8:	ldr	x0, [x0, #3936]
   129dc:	ldr	x0, [x0]
   129e0:	bl	6650 <PyErr_SetString@plt>
   129e4:	mov	x0, #0x0                   	// #0
   129e8:	b	12974 <PyFloat_FromString@plt+0xbee4>
   129ec:	mov	x0, #0x0                   	// #0
   129f0:	b	12974 <PyFloat_FromString@plt+0xbee4>
   129f4:	mov	x0, #0x0                   	// #0
   129f8:	b	12974 <PyFloat_FromString@plt+0xbee4>
   129fc:	stp	x29, x30, [sp, #-128]!
   12a00:	mov	x29, sp
   12a04:	stp	x19, x20, [sp, #16]
   12a08:	mov	x20, x0
   12a0c:	mov	x0, x1
   12a10:	mov	x1, x2
   12a14:	str	xzr, [sp, #120]
   12a18:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   12a1c:	ldr	x2, [x2, #4008]
   12a20:	str	x2, [sp, #112]
   12a24:	add	x5, sp, #0x70
   12a28:	add	x4, sp, #0x78
   12a2c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   12a30:	add	x3, x3, #0x9a0
   12a34:	add	x3, x3, #0x220
   12a38:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   12a3c:	add	x2, x2, #0xb50
   12a40:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   12a44:	cbz	w0, 12dd4 <PyFloat_FromString@plt+0xc344>
   12a48:	ldr	x1, [sp, #112]
   12a4c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12a50:	ldr	x0, [x0, #4008]
   12a54:	cmp	x1, x0
   12a58:	b.eq	12b24 <PyFloat_FromString@plt+0xc094>  // b.none
   12a5c:	ldr	x0, [x1, #8]
   12a60:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12a64:	add	x1, x1, #0x320
   12a68:	cmp	x0, x1
   12a6c:	b.eq	12ba0 <PyFloat_FromString@plt+0xc110>  // b.none
   12a70:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12a74:	add	x1, x1, #0x320
   12a78:	bl	69c0 <PyType_IsSubtype@plt>
   12a7c:	cbz	w0, 12b80 <PyFloat_FromString@plt+0xc0f0>
   12a80:	stp	x21, x22, [sp, #32]
   12a84:	ldr	x21, [sp, #120]
   12a88:	ldr	x22, [sp, #112]
   12a8c:	cbz	x21, 12ba8 <PyFloat_FromString@plt+0xc118>
   12a90:	ldr	x0, [x21, #8]
   12a94:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12a98:	add	x1, x1, #0x320
   12a9c:	add	x1, x1, #0x1a0
   12aa0:	cmp	x0, x1
   12aa4:	b.eq	12c24 <PyFloat_FromString@plt+0xc194>  // b.none
   12aa8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12aac:	add	x1, x1, #0x320
   12ab0:	add	x1, x1, #0x1a0
   12ab4:	bl	69c0 <PyType_IsSubtype@plt>
   12ab8:	cbnz	w0, 12c24 <PyFloat_FromString@plt+0xc194>
   12abc:	ldr	x0, [x21, #8]
   12ac0:	ldr	x1, [x0, #168]
   12ac4:	tbnz	w1, #28, 12ce0 <PyFloat_FromString@plt+0xc250>
   12ac8:	tbnz	w1, #24, 12d1c <PyFloat_FromString@plt+0xc28c>
   12acc:	tst	x1, #0x6000000
   12ad0:	b.ne	12d38 <PyFloat_FromString@plt+0xc2a8>  // b.any
   12ad4:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   12ad8:	ldr	x1, [x1, #3864]
   12adc:	cmp	x0, x1
   12ae0:	b.eq	12af4 <PyFloat_FromString@plt+0xc064>  // b.none
   12ae4:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   12ae8:	ldr	x1, [x1, #3864]
   12aec:	bl	69c0 <PyType_IsSubtype@plt>
   12af0:	cbz	w0, 12da8 <PyFloat_FromString@plt+0xc318>
   12af4:	mov	w1, #0x400                 	// #1024
   12af8:	mov	x0, x22
   12afc:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   12b00:	mov	x19, #0x0                   	// #0
   12b04:	cbnz	w0, 12e14 <PyFloat_FromString@plt+0xc384>
   12b08:	mov	x2, x22
   12b0c:	mov	x1, x21
   12b10:	mov	x0, x20
   12b14:	bl	8b40 <PyFloat_FromString@plt+0x20b0>
   12b18:	mov	x19, x0
   12b1c:	ldp	x21, x22, [sp, #32]
   12b20:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12b24:	add	x2, sp, #0x40
   12b28:	mov	x1, #0x0                   	// #0
   12b2c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   12b30:	ldr	x0, [x0, #1816]
   12b34:	bl	6740 <PyContextVar_Get@plt>
   12b38:	tbnz	w0, #31, 12df4 <PyFloat_FromString@plt+0xc364>
   12b3c:	ldr	x19, [sp, #64]
   12b40:	cbz	x19, 12b68 <PyFloat_FromString@plt+0xc0d8>
   12b44:	stp	x21, x22, [sp, #32]
   12b48:	str	x19, [sp, #112]
   12b4c:	ldr	x0, [x19]
   12b50:	sub	x0, x0, #0x1
   12b54:	str	x0, [x19]
   12b58:	cbnz	x0, 12a84 <PyFloat_FromString@plt+0xbff4>
   12b5c:	mov	x0, x19
   12b60:	bl	65d0 <_Py_Dealloc@plt>
   12b64:	b	12a84 <PyFloat_FromString@plt+0xbff4>
   12b68:	bl	7abc <PyFloat_FromString@plt+0x102c>
   12b6c:	mov	x19, x0
   12b70:	str	x0, [sp, #112]
   12b74:	cbz	x0, 12c70 <PyFloat_FromString@plt+0xc1e0>
   12b78:	stp	x21, x22, [sp, #32]
   12b7c:	b	12b4c <PyFloat_FromString@plt+0xc0bc>
   12b80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   12b84:	add	x1, x1, #0x928
   12b88:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12b8c:	ldr	x0, [x0, #3936]
   12b90:	ldr	x0, [x0]
   12b94:	bl	6650 <PyErr_SetString@plt>
   12b98:	mov	x19, #0x0                   	// #0
   12b9c:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12ba0:	stp	x21, x22, [sp, #32]
   12ba4:	b	12a84 <PyFloat_FromString@plt+0xbff4>
   12ba8:	str	wzr, [sp, #60]
   12bac:	mov	x0, x20
   12bb0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   12bb4:	mov	x19, x0
   12bb8:	cbz	x0, 12dfc <PyFloat_FromString@plt+0xc36c>
   12bbc:	add	x20, sp, #0x40
   12bc0:	mov	x0, x20
   12bc4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   12bc8:	add	x3, sp, #0x3c
   12bcc:	mov	x2, x20
   12bd0:	mov	x1, #0x0                   	// #0
   12bd4:	add	x0, x19, #0x18
   12bd8:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
   12bdc:	ldr	w1, [sp, #60]
   12be0:	mov	x0, x22
   12be4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   12be8:	cbnz	w0, 12bf4 <PyFloat_FromString@plt+0xc164>
   12bec:	ldp	x21, x22, [sp, #32]
   12bf0:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12bf4:	ldr	x0, [x19]
   12bf8:	sub	x0, x0, #0x1
   12bfc:	str	x0, [x19]
   12c00:	cbz	x0, 12c10 <PyFloat_FromString@plt+0xc180>
   12c04:	mov	x19, x21
   12c08:	ldp	x21, x22, [sp, #32]
   12c0c:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12c10:	mov	x0, x19
   12c14:	bl	65d0 <_Py_Dealloc@plt>
   12c18:	mov	x19, x21
   12c1c:	ldp	x21, x22, [sp, #32]
   12c20:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12c24:	str	wzr, [sp, #64]
   12c28:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12c2c:	add	x0, x0, #0x320
   12c30:	add	x0, x0, #0x1a0
   12c34:	cmp	x20, x0
   12c38:	b.eq	12c80 <PyFloat_FromString@plt+0xc1f0>  // b.none
   12c3c:	mov	x0, x20
   12c40:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   12c44:	mov	x19, x0
   12c48:	cbz	x0, 12e04 <PyFloat_FromString@plt+0xc374>
   12c4c:	add	x2, sp, #0x40
   12c50:	add	x1, x21, #0x18
   12c54:	add	x0, x0, #0x18
   12c58:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   12c5c:	ldr	w1, [sp, #64]
   12c60:	mov	x0, x22
   12c64:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   12c68:	cbnz	w0, 12cb0 <PyFloat_FromString@plt+0xc220>
   12c6c:	ldp	x21, x22, [sp, #32]
   12c70:	mov	x0, x19
   12c74:	ldp	x19, x20, [sp, #16]
   12c78:	ldp	x29, x30, [sp], #128
   12c7c:	ret
   12c80:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   12c84:	add	x0, x0, #0x320
   12c88:	ldr	x1, [x21, #8]
   12c8c:	add	x0, x0, #0x1a0
   12c90:	cmp	x1, x0
   12c94:	b.ne	12c3c <PyFloat_FromString@plt+0xc1ac>  // b.any
   12c98:	ldr	x0, [x21]
   12c9c:	add	x0, x0, #0x1
   12ca0:	str	x0, [x21]
   12ca4:	mov	x19, x21
   12ca8:	ldp	x21, x22, [sp, #32]
   12cac:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12cb0:	ldr	x0, [x19]
   12cb4:	sub	x0, x0, #0x1
   12cb8:	str	x0, [x19]
   12cbc:	cbz	x0, 12ccc <PyFloat_FromString@plt+0xc23c>
   12cc0:	mov	x19, #0x0                   	// #0
   12cc4:	ldp	x21, x22, [sp, #32]
   12cc8:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12ccc:	mov	x0, x19
   12cd0:	bl	65d0 <_Py_Dealloc@plt>
   12cd4:	mov	x19, #0x0                   	// #0
   12cd8:	ldp	x21, x22, [sp, #32]
   12cdc:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12ce0:	mov	w2, #0x1                   	// #1
   12ce4:	mov	w1, w2
   12ce8:	mov	x0, x21
   12cec:	bl	9680 <PyFloat_FromString@plt+0x2bf0>
   12cf0:	mov	x21, x0
   12cf4:	cbz	x0, 12ddc <PyFloat_FromString@plt+0xc34c>
   12cf8:	mov	x2, x22
   12cfc:	mov	x1, x0
   12d00:	mov	x0, x20
   12d04:	bl	934c <PyFloat_FromString@plt+0x28bc>
   12d08:	mov	x19, x0
   12d0c:	mov	x0, x21
   12d10:	bl	6560 <PyMem_Free@plt>
   12d14:	ldp	x21, x22, [sp, #32]
   12d18:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12d1c:	mov	x2, x22
   12d20:	mov	x1, x21
   12d24:	mov	x0, x20
   12d28:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   12d2c:	mov	x19, x0
   12d30:	ldp	x21, x22, [sp, #32]
   12d34:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12d38:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   12d3c:	add	x2, x2, #0x880
   12d40:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12d44:	ldr	x0, [x0, #3936]
   12d48:	ldr	x1, [x0]
   12d4c:	mov	x0, x21
   12d50:	bl	75a8 <PyFloat_FromString@plt+0xb18>
   12d54:	mov	x19, x0
   12d58:	cbz	x0, 12e0c <PyFloat_FromString@plt+0xc37c>
   12d5c:	bl	7e38 <PyFloat_FromString@plt+0x13a8>
   12d60:	mov	x21, x0
   12d64:	ldr	x0, [x19]
   12d68:	sub	x0, x0, #0x1
   12d6c:	str	x0, [x19]
   12d70:	cbz	x0, 12d9c <PyFloat_FromString@plt+0xc30c>
   12d74:	cbz	x21, 12de8 <PyFloat_FromString@plt+0xc358>
   12d78:	mov	x2, x22
   12d7c:	mov	x1, x21
   12d80:	mov	x0, x20
   12d84:	bl	934c <PyFloat_FromString@plt+0x28bc>
   12d88:	mov	x19, x0
   12d8c:	mov	x0, x21
   12d90:	bl	6560 <PyMem_Free@plt>
   12d94:	ldp	x21, x22, [sp, #32]
   12d98:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12d9c:	mov	x0, x19
   12da0:	bl	65d0 <_Py_Dealloc@plt>
   12da4:	b	12d74 <PyFloat_FromString@plt+0xc2e4>
   12da8:	ldr	x0, [x21, #8]
   12dac:	ldr	x2, [x0, #24]
   12db0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   12db4:	add	x1, x1, #0x8a8
   12db8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12dbc:	ldr	x0, [x0, #3936]
   12dc0:	ldr	x0, [x0]
   12dc4:	bl	6a10 <PyErr_Format@plt>
   12dc8:	mov	x19, #0x0                   	// #0
   12dcc:	ldp	x21, x22, [sp, #32]
   12dd0:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12dd4:	mov	x19, #0x0                   	// #0
   12dd8:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12ddc:	mov	x19, x0
   12de0:	ldp	x21, x22, [sp, #32]
   12de4:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12de8:	mov	x19, x21
   12dec:	ldp	x21, x22, [sp, #32]
   12df0:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12df4:	mov	x19, #0x0                   	// #0
   12df8:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12dfc:	ldp	x21, x22, [sp, #32]
   12e00:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12e04:	ldp	x21, x22, [sp, #32]
   12e08:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12e0c:	ldp	x21, x22, [sp, #32]
   12e10:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12e14:	ldp	x21, x22, [sp, #32]
   12e18:	b	12c70 <PyFloat_FromString@plt+0xc1e0>
   12e1c:	stp	x29, x30, [sp, #-48]!
   12e20:	mov	x29, sp
   12e24:	str	x19, [sp, #16]
   12e28:	mov	x19, x0
   12e2c:	mov	x0, x1
   12e30:	mov	x1, x2
   12e34:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   12e38:	ldr	x2, [x2, #4008]
   12e3c:	str	x2, [sp, #40]
   12e40:	add	x4, sp, #0x28
   12e44:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   12e48:	add	x3, x3, #0x9a0
   12e4c:	add	x3, x3, #0x238
   12e50:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   12e54:	add	x2, x2, #0x878
   12e58:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   12e5c:	cbz	w0, 12f50 <PyFloat_FromString@plt+0xc4c0>
   12e60:	ldr	x1, [sp, #40]
   12e64:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12e68:	ldr	x0, [x0, #4008]
   12e6c:	cmp	x1, x0
   12e70:	b.eq	12ecc <PyFloat_FromString@plt+0xc43c>  // b.none
   12e74:	ldr	x0, [x1, #8]
   12e78:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12e7c:	add	x1, x1, #0x320
   12e80:	cmp	x0, x1
   12e84:	b.eq	12e98 <PyFloat_FromString@plt+0xc408>  // b.none
   12e88:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12e8c:	add	x1, x1, #0x320
   12e90:	bl	69c0 <PyType_IsSubtype@plt>
   12e94:	cbz	w0, 12f18 <PyFloat_FromString@plt+0xc488>
   12e98:	ldr	x1, [sp, #40]
   12e9c:	add	x1, x1, #0x10
   12ea0:	add	x0, x19, #0x18
   12ea4:	bl	28164 <PyInit__decimal@@Base+0xdfc4>
   12ea8:	cbz	w0, 12f38 <PyFloat_FromString@plt+0xc4a8>
   12eac:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12eb0:	ldr	x0, [x0, #4024]
   12eb4:	ldr	x1, [x0]
   12eb8:	add	x1, x1, #0x1
   12ebc:	str	x1, [x0]
   12ec0:	ldr	x19, [sp, #16]
   12ec4:	ldp	x29, x30, [sp], #48
   12ec8:	ret
   12ecc:	add	x2, sp, #0x20
   12ed0:	mov	x1, #0x0                   	// #0
   12ed4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   12ed8:	ldr	x0, [x0, #1816]
   12edc:	bl	6740 <PyContextVar_Get@plt>
   12ee0:	tbnz	w0, #31, 12f58 <PyFloat_FromString@plt+0xc4c8>
   12ee4:	ldr	x0, [sp, #32]
   12ee8:	cbz	x0, 12f08 <PyFloat_FromString@plt+0xc478>
   12eec:	str	x0, [sp, #40]
   12ef0:	ldr	x1, [x0]
   12ef4:	sub	x1, x1, #0x1
   12ef8:	str	x1, [x0]
   12efc:	cbnz	x1, 12e98 <PyFloat_FromString@plt+0xc408>
   12f00:	bl	65d0 <_Py_Dealloc@plt>
   12f04:	b	12e98 <PyFloat_FromString@plt+0xc408>
   12f08:	bl	7abc <PyFloat_FromString@plt+0x102c>
   12f0c:	str	x0, [sp, #40]
   12f10:	cbnz	x0, 12ef0 <PyFloat_FromString@plt+0xc460>
   12f14:	b	12ec0 <PyFloat_FromString@plt+0xc430>
   12f18:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   12f1c:	add	x1, x1, #0x928
   12f20:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12f24:	ldr	x0, [x0, #3936]
   12f28:	ldr	x0, [x0]
   12f2c:	bl	6650 <PyErr_SetString@plt>
   12f30:	mov	x0, #0x0                   	// #0
   12f34:	b	12ec0 <PyFloat_FromString@plt+0xc430>
   12f38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12f3c:	ldr	x0, [x0, #3976]
   12f40:	ldr	x1, [x0]
   12f44:	add	x1, x1, #0x1
   12f48:	str	x1, [x0]
   12f4c:	b	12ec0 <PyFloat_FromString@plt+0xc430>
   12f50:	mov	x0, #0x0                   	// #0
   12f54:	b	12ec0 <PyFloat_FromString@plt+0xc430>
   12f58:	mov	x0, #0x0                   	// #0
   12f5c:	b	12ec0 <PyFloat_FromString@plt+0xc430>
   12f60:	stp	x29, x30, [sp, #-48]!
   12f64:	mov	x29, sp
   12f68:	str	x19, [sp, #16]
   12f6c:	mov	x19, x0
   12f70:	mov	x0, x1
   12f74:	mov	x1, x2
   12f78:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   12f7c:	ldr	x2, [x2, #4008]
   12f80:	str	x2, [sp, #40]
   12f84:	add	x4, sp, #0x28
   12f88:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   12f8c:	add	x3, x3, #0x9a0
   12f90:	add	x3, x3, #0x248
   12f94:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   12f98:	add	x2, x2, #0x878
   12f9c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   12fa0:	cbz	w0, 13094 <PyFloat_FromString@plt+0xc604>
   12fa4:	ldr	x1, [sp, #40]
   12fa8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12fac:	ldr	x0, [x0, #4008]
   12fb0:	cmp	x1, x0
   12fb4:	b.eq	13010 <PyFloat_FromString@plt+0xc580>  // b.none
   12fb8:	ldr	x0, [x1, #8]
   12fbc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12fc0:	add	x1, x1, #0x320
   12fc4:	cmp	x0, x1
   12fc8:	b.eq	12fdc <PyFloat_FromString@plt+0xc54c>  // b.none
   12fcc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   12fd0:	add	x1, x1, #0x320
   12fd4:	bl	69c0 <PyType_IsSubtype@plt>
   12fd8:	cbz	w0, 1305c <PyFloat_FromString@plt+0xc5cc>
   12fdc:	ldr	x1, [sp, #40]
   12fe0:	add	x1, x1, #0x10
   12fe4:	add	x0, x19, #0x18
   12fe8:	bl	281b4 <PyInit__decimal@@Base+0xe014>
   12fec:	cbz	w0, 1307c <PyFloat_FromString@plt+0xc5ec>
   12ff0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   12ff4:	ldr	x0, [x0, #4024]
   12ff8:	ldr	x1, [x0]
   12ffc:	add	x1, x1, #0x1
   13000:	str	x1, [x0]
   13004:	ldr	x19, [sp, #16]
   13008:	ldp	x29, x30, [sp], #48
   1300c:	ret
   13010:	add	x2, sp, #0x20
   13014:	mov	x1, #0x0                   	// #0
   13018:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1301c:	ldr	x0, [x0, #1816]
   13020:	bl	6740 <PyContextVar_Get@plt>
   13024:	tbnz	w0, #31, 1309c <PyFloat_FromString@plt+0xc60c>
   13028:	ldr	x0, [sp, #32]
   1302c:	cbz	x0, 1304c <PyFloat_FromString@plt+0xc5bc>
   13030:	str	x0, [sp, #40]
   13034:	ldr	x1, [x0]
   13038:	sub	x1, x1, #0x1
   1303c:	str	x1, [x0]
   13040:	cbnz	x1, 12fdc <PyFloat_FromString@plt+0xc54c>
   13044:	bl	65d0 <_Py_Dealloc@plt>
   13048:	b	12fdc <PyFloat_FromString@plt+0xc54c>
   1304c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   13050:	str	x0, [sp, #40]
   13054:	cbnz	x0, 13034 <PyFloat_FromString@plt+0xc5a4>
   13058:	b	13004 <PyFloat_FromString@plt+0xc574>
   1305c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   13060:	add	x1, x1, #0x928
   13064:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13068:	ldr	x0, [x0, #3936]
   1306c:	ldr	x0, [x0]
   13070:	bl	6650 <PyErr_SetString@plt>
   13074:	mov	x0, #0x0                   	// #0
   13078:	b	13004 <PyFloat_FromString@plt+0xc574>
   1307c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13080:	ldr	x0, [x0, #3976]
   13084:	ldr	x1, [x0]
   13088:	add	x1, x1, #0x1
   1308c:	str	x1, [x0]
   13090:	b	13004 <PyFloat_FromString@plt+0xc574>
   13094:	mov	x0, #0x0                   	// #0
   13098:	b	13004 <PyFloat_FromString@plt+0xc574>
   1309c:	mov	x0, #0x0                   	// #0
   130a0:	b	13004 <PyFloat_FromString@plt+0xc574>
   130a4:	stp	x29, x30, [sp, #-64]!
   130a8:	mov	x29, sp
   130ac:	stp	x19, x20, [sp, #16]
   130b0:	mov	x20, x0
   130b4:	mov	x0, x1
   130b8:	mov	x1, x2
   130bc:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   130c0:	ldr	x2, [x2, #4008]
   130c4:	str	x2, [sp, #56]
   130c8:	add	x4, sp, #0x38
   130cc:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   130d0:	add	x3, x3, #0x9a0
   130d4:	add	x3, x3, #0x258
   130d8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   130dc:	add	x2, x2, #0x878
   130e0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   130e4:	cbz	w0, 131e8 <PyFloat_FromString@plt+0xc758>
   130e8:	ldr	x1, [sp, #56]
   130ec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   130f0:	ldr	x0, [x0, #4008]
   130f4:	cmp	x1, x0
   130f8:	b.eq	13168 <PyFloat_FromString@plt+0xc6d8>  // b.none
   130fc:	ldr	x0, [x1, #8]
   13100:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13104:	add	x1, x1, #0x320
   13108:	cmp	x0, x1
   1310c:	b.eq	13120 <PyFloat_FromString@plt+0xc690>  // b.none
   13110:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13114:	add	x1, x1, #0x320
   13118:	bl	69c0 <PyType_IsSubtype@plt>
   1311c:	cbz	w0, 131bc <PyFloat_FromString@plt+0xc72c>
   13120:	ldr	x0, [sp, #56]
   13124:	ldr	w2, [x0, #80]
   13128:	add	x1, x20, #0x18
   1312c:	add	x0, sp, #0x30
   13130:	bl	23fb0 <PyInit__decimal@@Base+0x9e10>
   13134:	mov	x1, x0
   13138:	tbnz	x0, #63, 131dc <PyFloat_FromString@plt+0xc74c>
   1313c:	ldr	x0, [sp, #48]
   13140:	bl	767c <PyFloat_FromString@plt+0xbec>
   13144:	mov	x19, x0
   13148:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1314c:	ldr	x1, [x0, #1704]
   13150:	ldr	x0, [sp, #48]
   13154:	blr	x1
   13158:	mov	x0, x19
   1315c:	ldp	x19, x20, [sp, #16]
   13160:	ldp	x29, x30, [sp], #64
   13164:	ret
   13168:	add	x2, sp, #0x28
   1316c:	mov	x1, #0x0                   	// #0
   13170:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   13174:	ldr	x0, [x0, #1816]
   13178:	bl	6740 <PyContextVar_Get@plt>
   1317c:	tbnz	w0, #31, 131f0 <PyFloat_FromString@plt+0xc760>
   13180:	ldr	x19, [sp, #40]
   13184:	cbz	x19, 131a8 <PyFloat_FromString@plt+0xc718>
   13188:	str	x19, [sp, #56]
   1318c:	ldr	x0, [x19]
   13190:	sub	x0, x0, #0x1
   13194:	str	x0, [x19]
   13198:	cbnz	x0, 13120 <PyFloat_FromString@plt+0xc690>
   1319c:	mov	x0, x19
   131a0:	bl	65d0 <_Py_Dealloc@plt>
   131a4:	b	13120 <PyFloat_FromString@plt+0xc690>
   131a8:	bl	7abc <PyFloat_FromString@plt+0x102c>
   131ac:	mov	x19, x0
   131b0:	str	x0, [sp, #56]
   131b4:	cbnz	x0, 1318c <PyFloat_FromString@plt+0xc6fc>
   131b8:	b	13158 <PyFloat_FromString@plt+0xc6c8>
   131bc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   131c0:	add	x1, x1, #0x928
   131c4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   131c8:	ldr	x0, [x0, #3936]
   131cc:	ldr	x0, [x0]
   131d0:	bl	6650 <PyErr_SetString@plt>
   131d4:	mov	x19, #0x0                   	// #0
   131d8:	b	13158 <PyFloat_FromString@plt+0xc6c8>
   131dc:	bl	65e0 <PyErr_NoMemory@plt>
   131e0:	mov	x19, #0x0                   	// #0
   131e4:	b	13158 <PyFloat_FromString@plt+0xc6c8>
   131e8:	mov	x19, #0x0                   	// #0
   131ec:	b	13158 <PyFloat_FromString@plt+0xc6c8>
   131f0:	mov	x19, #0x0                   	// #0
   131f4:	b	13158 <PyFloat_FromString@plt+0xc6c8>
   131f8:	stp	x29, x30, [sp, #-96]!
   131fc:	mov	x29, sp
   13200:	stp	x19, x20, [sp, #16]
   13204:	mov	x20, x0
   13208:	mov	x0, x1
   1320c:	str	wzr, [sp, #76]
   13210:	add	x3, sp, #0x50
   13214:	add	x2, sp, #0x58
   13218:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1321c:	add	x1, x1, #0xb48
   13220:	bl	68e0 <PyArg_ParseTuple@plt>
   13224:	mov	x19, #0x0                   	// #0
   13228:	cbz	w0, 13288 <PyFloat_FromString@plt+0xc7f8>
   1322c:	ldr	x19, [sp, #88]
   13230:	ldr	x0, [x19, #8]
   13234:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13238:	add	x1, x1, #0x320
   1323c:	add	x1, x1, #0x1a0
   13240:	cmp	x0, x1
   13244:	b.eq	13298 <PyFloat_FromString@plt+0xc808>  // b.none
   13248:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1324c:	add	x1, x1, #0x320
   13250:	add	x1, x1, #0x1a0
   13254:	bl	69c0 <PyType_IsSubtype@plt>
   13258:	cbnz	w0, 13298 <PyFloat_FromString@plt+0xc808>
   1325c:	ldr	x0, [x19, #8]
   13260:	ldr	x1, [x0, #168]
   13264:	tbnz	w1, #24, 1331c <PyFloat_FromString@plt+0xc88c>
   13268:	ldr	x2, [x0, #24]
   1326c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   13270:	add	x1, x1, #0x8a8
   13274:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13278:	ldr	x0, [x0, #3936]
   1327c:	ldr	x0, [x0]
   13280:	bl	6a10 <PyErr_Format@plt>
   13284:	mov	x19, #0x0                   	// #0
   13288:	mov	x0, x19
   1328c:	ldp	x19, x20, [sp, #16]
   13290:	ldp	x29, x30, [sp], #96
   13294:	ret
   13298:	stp	x21, x22, [sp, #32]
   1329c:	ldr	x0, [x19]
   132a0:	add	x0, x0, #0x1
   132a4:	str	x0, [x19]
   132a8:	ldr	x21, [sp, #80]
   132ac:	ldr	x0, [x21, #8]
   132b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   132b4:	add	x1, x1, #0x320
   132b8:	add	x1, x1, #0x1a0
   132bc:	cmp	x0, x1
   132c0:	b.eq	13344 <PyFloat_FromString@plt+0xc8b4>  // b.none
   132c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   132c8:	add	x1, x1, #0x320
   132cc:	add	x1, x1, #0x1a0
   132d0:	bl	69c0 <PyType_IsSubtype@plt>
   132d4:	cbnz	w0, 13344 <PyFloat_FromString@plt+0xc8b4>
   132d8:	ldr	x0, [x21, #8]
   132dc:	ldr	x1, [x0, #168]
   132e0:	tbnz	w1, #24, 13414 <PyFloat_FromString@plt+0xc984>
   132e4:	ldr	x2, [x0, #24]
   132e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   132ec:	add	x1, x1, #0x8a8
   132f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   132f4:	ldr	x0, [x0, #3936]
   132f8:	ldr	x0, [x0]
   132fc:	bl	6a10 <PyErr_Format@plt>
   13300:	ldr	x0, [x19]
   13304:	sub	x0, x0, #0x1
   13308:	str	x0, [x19]
   1330c:	cbz	x0, 13438 <PyFloat_FromString@plt+0xc9a8>
   13310:	mov	x19, #0x0                   	// #0
   13314:	ldp	x21, x22, [sp, #32]
   13318:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   1331c:	mov	x2, x20
   13320:	mov	x1, x19
   13324:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13328:	add	x0, x0, #0x320
   1332c:	add	x0, x0, #0x1a0
   13330:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   13334:	mov	x19, x0
   13338:	cbz	x0, 13288 <PyFloat_FromString@plt+0xc7f8>
   1333c:	stp	x21, x22, [sp, #32]
   13340:	b	132a8 <PyFloat_FromString@plt+0xc818>
   13344:	ldr	x0, [x21]
   13348:	add	x0, x0, #0x1
   1334c:	str	x0, [x21]
   13350:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13354:	add	x0, x0, #0x320
   13358:	add	x0, x0, #0x1a0
   1335c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13360:	mov	x22, x0
   13364:	cbz	x0, 1344c <PyFloat_FromString@plt+0xc9bc>
   13368:	str	x23, [sp, #48]
   1336c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13370:	add	x0, x0, #0x320
   13374:	add	x0, x0, #0x1a0
   13378:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1337c:	mov	x23, x0
   13380:	cbz	x0, 13494 <PyFloat_FromString@plt+0xca04>
   13384:	add	x5, sp, #0x4c
   13388:	add	x4, x20, #0x10
   1338c:	add	x3, x21, #0x18
   13390:	add	x2, x19, #0x18
   13394:	add	x1, x0, #0x18
   13398:	add	x0, x22, #0x18
   1339c:	bl	3608c <PyInit__decimal@@Base+0x1beec>
   133a0:	ldr	x0, [x19]
   133a4:	sub	x0, x0, #0x1
   133a8:	str	x0, [x19]
   133ac:	cbz	x0, 13500 <PyFloat_FromString@plt+0xca70>
   133b0:	ldr	x0, [x21]
   133b4:	sub	x0, x0, #0x1
   133b8:	str	x0, [x21]
   133bc:	cbz	x0, 1350c <PyFloat_FromString@plt+0xca7c>
   133c0:	ldr	w1, [sp, #76]
   133c4:	mov	x0, x20
   133c8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   133cc:	cbnz	w0, 13518 <PyFloat_FromString@plt+0xca88>
   133d0:	mov	x2, x23
   133d4:	mov	x1, x22
   133d8:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   133dc:	add	x0, x0, #0xb58
   133e0:	bl	67d0 <Py_BuildValue@plt>
   133e4:	mov	x19, x0
   133e8:	ldr	x0, [x23]
   133ec:	sub	x0, x0, #0x1
   133f0:	str	x0, [x23]
   133f4:	cbz	x0, 13568 <PyFloat_FromString@plt+0xcad8>
   133f8:	ldr	x0, [x22]
   133fc:	sub	x0, x0, #0x1
   13400:	str	x0, [x22]
   13404:	cbz	x0, 13574 <PyFloat_FromString@plt+0xcae4>
   13408:	ldp	x21, x22, [sp, #32]
   1340c:	ldr	x23, [sp, #48]
   13410:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13414:	mov	x2, x20
   13418:	mov	x1, x21
   1341c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13420:	add	x0, x0, #0x320
   13424:	add	x0, x0, #0x1a0
   13428:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1342c:	mov	x21, x0
   13430:	cbnz	x0, 13350 <PyFloat_FromString@plt+0xc8c0>
   13434:	b	13300 <PyFloat_FromString@plt+0xc870>
   13438:	mov	x0, x19
   1343c:	bl	65d0 <_Py_Dealloc@plt>
   13440:	mov	x19, #0x0                   	// #0
   13444:	ldp	x21, x22, [sp, #32]
   13448:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   1344c:	ldr	x0, [x19]
   13450:	sub	x0, x0, #0x1
   13454:	str	x0, [x19]
   13458:	cbz	x0, 13478 <PyFloat_FromString@plt+0xc9e8>
   1345c:	ldr	x0, [x21]
   13460:	sub	x0, x0, #0x1
   13464:	str	x0, [x21]
   13468:	mov	x19, x22
   1346c:	cbz	x0, 13484 <PyFloat_FromString@plt+0xc9f4>
   13470:	ldp	x21, x22, [sp, #32]
   13474:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13478:	mov	x0, x19
   1347c:	bl	65d0 <_Py_Dealloc@plt>
   13480:	b	1345c <PyFloat_FromString@plt+0xc9cc>
   13484:	mov	x0, x21
   13488:	bl	65d0 <_Py_Dealloc@plt>
   1348c:	ldp	x21, x22, [sp, #32]
   13490:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13494:	ldr	x0, [x19]
   13498:	sub	x0, x0, #0x1
   1349c:	str	x0, [x19]
   134a0:	cbz	x0, 134d4 <PyFloat_FromString@plt+0xca44>
   134a4:	ldr	x0, [x21]
   134a8:	sub	x0, x0, #0x1
   134ac:	str	x0, [x21]
   134b0:	cbz	x0, 134e0 <PyFloat_FromString@plt+0xca50>
   134b4:	ldr	x0, [x22]
   134b8:	sub	x0, x0, #0x1
   134bc:	str	x0, [x22]
   134c0:	mov	x19, x23
   134c4:	cbz	x0, 134ec <PyFloat_FromString@plt+0xca5c>
   134c8:	ldp	x21, x22, [sp, #32]
   134cc:	ldr	x23, [sp, #48]
   134d0:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   134d4:	mov	x0, x19
   134d8:	bl	65d0 <_Py_Dealloc@plt>
   134dc:	b	134a4 <PyFloat_FromString@plt+0xca14>
   134e0:	mov	x0, x21
   134e4:	bl	65d0 <_Py_Dealloc@plt>
   134e8:	b	134b4 <PyFloat_FromString@plt+0xca24>
   134ec:	mov	x0, x22
   134f0:	bl	65d0 <_Py_Dealloc@plt>
   134f4:	ldp	x21, x22, [sp, #32]
   134f8:	ldr	x23, [sp, #48]
   134fc:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13500:	mov	x0, x19
   13504:	bl	65d0 <_Py_Dealloc@plt>
   13508:	b	133b0 <PyFloat_FromString@plt+0xc920>
   1350c:	mov	x0, x21
   13510:	bl	65d0 <_Py_Dealloc@plt>
   13514:	b	133c0 <PyFloat_FromString@plt+0xc930>
   13518:	ldr	x0, [x23]
   1351c:	sub	x0, x0, #0x1
   13520:	str	x0, [x23]
   13524:	cbz	x0, 13548 <PyFloat_FromString@plt+0xcab8>
   13528:	ldr	x0, [x22]
   1352c:	sub	x0, x0, #0x1
   13530:	str	x0, [x22]
   13534:	mov	x19, #0x0                   	// #0
   13538:	cbz	x0, 13554 <PyFloat_FromString@plt+0xcac4>
   1353c:	ldp	x21, x22, [sp, #32]
   13540:	ldr	x23, [sp, #48]
   13544:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13548:	mov	x0, x23
   1354c:	bl	65d0 <_Py_Dealloc@plt>
   13550:	b	13528 <PyFloat_FromString@plt+0xca98>
   13554:	mov	x0, x22
   13558:	bl	65d0 <_Py_Dealloc@plt>
   1355c:	ldp	x21, x22, [sp, #32]
   13560:	ldr	x23, [sp, #48]
   13564:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13568:	mov	x0, x23
   1356c:	bl	65d0 <_Py_Dealloc@plt>
   13570:	b	133f8 <PyFloat_FromString@plt+0xc968>
   13574:	mov	x0, x22
   13578:	bl	65d0 <_Py_Dealloc@plt>
   1357c:	ldp	x21, x22, [sp, #32]
   13580:	ldr	x23, [sp, #48]
   13584:	b	13288 <PyFloat_FromString@plt+0xc7f8>
   13588:	stp	x29, x30, [sp, #-80]!
   1358c:	mov	x29, sp
   13590:	stp	x19, x20, [sp, #16]
   13594:	stp	x21, x22, [sp, #32]
   13598:	mov	x19, x0
   1359c:	mov	x22, x1
   135a0:	str	wzr, [sp, #76]
   135a4:	add	x2, sp, #0x40
   135a8:	mov	x1, #0x0                   	// #0
   135ac:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   135b0:	ldr	x0, [x0, #1816]
   135b4:	bl	6740 <PyContextVar_Get@plt>
   135b8:	tbnz	w0, #31, 13908 <PyFloat_FromString@plt+0xce78>
   135bc:	ldr	x20, [sp, #64]
   135c0:	cbz	x20, 1362c <PyFloat_FromString@plt+0xcb9c>
   135c4:	ldr	x0, [x20]
   135c8:	sub	x0, x0, #0x1
   135cc:	str	x0, [x20]
   135d0:	cbz	x0, 13640 <PyFloat_FromString@plt+0xcbb0>
   135d4:	ldr	x0, [x19, #8]
   135d8:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   135dc:	add	x2, x2, #0x320
   135e0:	add	x2, x2, #0x1a0
   135e4:	cmp	x0, x2
   135e8:	b.eq	1364c <PyFloat_FromString@plt+0xcbbc>  // b.none
   135ec:	mov	x1, x2
   135f0:	bl	69c0 <PyType_IsSubtype@plt>
   135f4:	cbnz	w0, 1364c <PyFloat_FromString@plt+0xcbbc>
   135f8:	ldr	x0, [x19, #8]
   135fc:	ldr	x0, [x0, #168]
   13600:	tbnz	w0, #24, 136c0 <PyFloat_FromString@plt+0xcc30>
   13604:	adrp	x21, 5b000 <PyInit__decimal@@Base+0x40e60>
   13608:	ldr	x21, [x21, #3912]
   1360c:	ldr	x0, [x21]
   13610:	add	x0, x0, #0x1
   13614:	str	x0, [x21]
   13618:	mov	x0, x21
   1361c:	ldp	x19, x20, [sp, #16]
   13620:	ldp	x21, x22, [sp, #32]
   13624:	ldp	x29, x30, [sp], #80
   13628:	ret
   1362c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   13630:	mov	x20, x0
   13634:	cbnz	x0, 135c4 <PyFloat_FromString@plt+0xcb34>
   13638:	mov	x21, x0
   1363c:	b	13618 <PyFloat_FromString@plt+0xcb88>
   13640:	mov	x0, x20
   13644:	bl	65d0 <_Py_Dealloc@plt>
   13648:	b	135d4 <PyFloat_FromString@plt+0xcb44>
   1364c:	ldr	x0, [x19]
   13650:	add	x0, x0, #0x1
   13654:	str	x0, [x19]
   13658:	ldr	x0, [x22, #8]
   1365c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13660:	add	x1, x1, #0x320
   13664:	add	x1, x1, #0x1a0
   13668:	cmp	x0, x1
   1366c:	b.eq	136e8 <PyFloat_FromString@plt+0xcc58>  // b.none
   13670:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13674:	add	x1, x1, #0x320
   13678:	add	x1, x1, #0x1a0
   1367c:	bl	69c0 <PyType_IsSubtype@plt>
   13680:	cbnz	w0, 136e8 <PyFloat_FromString@plt+0xcc58>
   13684:	ldr	x0, [x22, #8]
   13688:	ldr	x0, [x0, #168]
   1368c:	tbnz	w0, #24, 137b4 <PyFloat_FromString@plt+0xcd24>
   13690:	adrp	x21, 5b000 <PyInit__decimal@@Base+0x40e60>
   13694:	ldr	x21, [x21, #3912]
   13698:	ldr	x0, [x21]
   1369c:	add	x0, x0, #0x1
   136a0:	str	x0, [x21]
   136a4:	ldr	x0, [x19]
   136a8:	sub	x0, x0, #0x1
   136ac:	str	x0, [x19]
   136b0:	cbnz	x0, 13618 <PyFloat_FromString@plt+0xcb88>
   136b4:	mov	x0, x19
   136b8:	bl	65d0 <_Py_Dealloc@plt>
   136bc:	b	13618 <PyFloat_FromString@plt+0xcb88>
   136c0:	mov	x2, x20
   136c4:	mov	x1, x19
   136c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   136cc:	add	x0, x0, #0x320
   136d0:	add	x0, x0, #0x1a0
   136d4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   136d8:	mov	x21, x0
   136dc:	mov	x19, x0
   136e0:	cbz	x0, 13618 <PyFloat_FromString@plt+0xcb88>
   136e4:	b	13658 <PyFloat_FromString@plt+0xcbc8>
   136e8:	stp	x23, x24, [sp, #48]
   136ec:	ldr	x0, [x22]
   136f0:	add	x0, x0, #0x1
   136f4:	str	x0, [x22]
   136f8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   136fc:	add	x0, x0, #0x320
   13700:	add	x0, x0, #0x1a0
   13704:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13708:	mov	x23, x0
   1370c:	cbz	x0, 137e0 <PyFloat_FromString@plt+0xcd50>
   13710:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13714:	add	x0, x0, #0x320
   13718:	add	x0, x0, #0x1a0
   1371c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13720:	mov	x24, x0
   13724:	cbz	x0, 13828 <PyFloat_FromString@plt+0xcd98>
   13728:	add	x5, sp, #0x4c
   1372c:	add	x4, x20, #0x10
   13730:	add	x3, x22, #0x18
   13734:	add	x2, x19, #0x18
   13738:	add	x1, x0, #0x18
   1373c:	add	x0, x23, #0x18
   13740:	bl	3608c <PyInit__decimal@@Base+0x1beec>
   13744:	ldr	x0, [x19]
   13748:	sub	x0, x0, #0x1
   1374c:	str	x0, [x19]
   13750:	cbz	x0, 1388c <PyFloat_FromString@plt+0xcdfc>
   13754:	ldr	x0, [x22]
   13758:	sub	x0, x0, #0x1
   1375c:	str	x0, [x22]
   13760:	cbz	x0, 13898 <PyFloat_FromString@plt+0xce08>
   13764:	ldr	w1, [sp, #76]
   13768:	mov	x0, x20
   1376c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   13770:	cbnz	w0, 138a4 <PyFloat_FromString@plt+0xce14>
   13774:	mov	x2, x24
   13778:	mov	x1, x23
   1377c:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   13780:	add	x0, x0, #0xb58
   13784:	bl	67d0 <Py_BuildValue@plt>
   13788:	mov	x21, x0
   1378c:	ldr	x0, [x24]
   13790:	sub	x0, x0, #0x1
   13794:	str	x0, [x24]
   13798:	cbz	x0, 138ec <PyFloat_FromString@plt+0xce5c>
   1379c:	ldr	x0, [x23]
   137a0:	sub	x0, x0, #0x1
   137a4:	str	x0, [x23]
   137a8:	cbz	x0, 138f8 <PyFloat_FromString@plt+0xce68>
   137ac:	ldp	x23, x24, [sp, #48]
   137b0:	b	13618 <PyFloat_FromString@plt+0xcb88>
   137b4:	mov	x2, x20
   137b8:	mov	x1, x22
   137bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   137c0:	add	x0, x0, #0x320
   137c4:	add	x0, x0, #0x1a0
   137c8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   137cc:	mov	x21, x0
   137d0:	cbz	x0, 136a4 <PyFloat_FromString@plt+0xcc14>
   137d4:	stp	x23, x24, [sp, #48]
   137d8:	mov	x22, x0
   137dc:	b	136f8 <PyFloat_FromString@plt+0xcc68>
   137e0:	ldr	x0, [x19]
   137e4:	sub	x0, x0, #0x1
   137e8:	str	x0, [x19]
   137ec:	cbz	x0, 1380c <PyFloat_FromString@plt+0xcd7c>
   137f0:	ldr	x0, [x22]
   137f4:	sub	x0, x0, #0x1
   137f8:	str	x0, [x22]
   137fc:	mov	x21, x23
   13800:	cbz	x0, 13818 <PyFloat_FromString@plt+0xcd88>
   13804:	ldp	x23, x24, [sp, #48]
   13808:	b	13618 <PyFloat_FromString@plt+0xcb88>
   1380c:	mov	x0, x19
   13810:	bl	65d0 <_Py_Dealloc@plt>
   13814:	b	137f0 <PyFloat_FromString@plt+0xcd60>
   13818:	mov	x0, x22
   1381c:	bl	65d0 <_Py_Dealloc@plt>
   13820:	ldp	x23, x24, [sp, #48]
   13824:	b	13618 <PyFloat_FromString@plt+0xcb88>
   13828:	ldr	x0, [x19]
   1382c:	sub	x0, x0, #0x1
   13830:	str	x0, [x19]
   13834:	cbz	x0, 13864 <PyFloat_FromString@plt+0xcdd4>
   13838:	ldr	x0, [x22]
   1383c:	sub	x0, x0, #0x1
   13840:	str	x0, [x22]
   13844:	cbz	x0, 13870 <PyFloat_FromString@plt+0xcde0>
   13848:	ldr	x0, [x23]
   1384c:	sub	x0, x0, #0x1
   13850:	str	x0, [x23]
   13854:	mov	x21, x24
   13858:	cbz	x0, 1387c <PyFloat_FromString@plt+0xcdec>
   1385c:	ldp	x23, x24, [sp, #48]
   13860:	b	13618 <PyFloat_FromString@plt+0xcb88>
   13864:	mov	x0, x19
   13868:	bl	65d0 <_Py_Dealloc@plt>
   1386c:	b	13838 <PyFloat_FromString@plt+0xcda8>
   13870:	mov	x0, x22
   13874:	bl	65d0 <_Py_Dealloc@plt>
   13878:	b	13848 <PyFloat_FromString@plt+0xcdb8>
   1387c:	mov	x0, x23
   13880:	bl	65d0 <_Py_Dealloc@plt>
   13884:	ldp	x23, x24, [sp, #48]
   13888:	b	13618 <PyFloat_FromString@plt+0xcb88>
   1388c:	mov	x0, x19
   13890:	bl	65d0 <_Py_Dealloc@plt>
   13894:	b	13754 <PyFloat_FromString@plt+0xccc4>
   13898:	mov	x0, x22
   1389c:	bl	65d0 <_Py_Dealloc@plt>
   138a0:	b	13764 <PyFloat_FromString@plt+0xccd4>
   138a4:	ldr	x0, [x24]
   138a8:	sub	x0, x0, #0x1
   138ac:	str	x0, [x24]
   138b0:	cbz	x0, 138d0 <PyFloat_FromString@plt+0xce40>
   138b4:	ldr	x0, [x23]
   138b8:	sub	x0, x0, #0x1
   138bc:	str	x0, [x23]
   138c0:	mov	x21, #0x0                   	// #0
   138c4:	cbz	x0, 138dc <PyFloat_FromString@plt+0xce4c>
   138c8:	ldp	x23, x24, [sp, #48]
   138cc:	b	13618 <PyFloat_FromString@plt+0xcb88>
   138d0:	mov	x0, x24
   138d4:	bl	65d0 <_Py_Dealloc@plt>
   138d8:	b	138b4 <PyFloat_FromString@plt+0xce24>
   138dc:	mov	x0, x23
   138e0:	bl	65d0 <_Py_Dealloc@plt>
   138e4:	ldp	x23, x24, [sp, #48]
   138e8:	b	13618 <PyFloat_FromString@plt+0xcb88>
   138ec:	mov	x0, x24
   138f0:	bl	65d0 <_Py_Dealloc@plt>
   138f4:	b	1379c <PyFloat_FromString@plt+0xcd0c>
   138f8:	mov	x0, x23
   138fc:	bl	65d0 <_Py_Dealloc@plt>
   13900:	ldp	x23, x24, [sp, #48]
   13904:	b	13618 <PyFloat_FromString@plt+0xcb88>
   13908:	mov	x21, #0x0                   	// #0
   1390c:	b	13618 <PyFloat_FromString@plt+0xcb88>
   13910:	stp	x29, x30, [sp, #-80]!
   13914:	mov	x29, sp
   13918:	stp	x19, x20, [sp, #16]
   1391c:	stp	x21, x22, [sp, #32]
   13920:	str	x23, [sp, #48]
   13924:	mov	x19, x0
   13928:	mov	x22, x1
   1392c:	mov	x23, x2
   13930:	str	wzr, [sp, #76]
   13934:	add	x2, sp, #0x40
   13938:	mov	x1, #0x0                   	// #0
   1393c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   13940:	ldr	x0, [x0, #1816]
   13944:	bl	6740 <PyContextVar_Get@plt>
   13948:	tbnz	w0, #31, 13cd4 <PyFloat_FromString@plt+0xd244>
   1394c:	ldr	x21, [sp, #64]
   13950:	cbz	x21, 139c0 <PyFloat_FromString@plt+0xcf30>
   13954:	ldr	x1, [x21]
   13958:	sub	x1, x1, #0x1
   1395c:	str	x1, [x21]
   13960:	cbz	x1, 139d4 <PyFloat_FromString@plt+0xcf44>
   13964:	ldr	x0, [x19, #8]
   13968:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   1396c:	add	x3, x3, #0x320
   13970:	add	x3, x3, #0x1a0
   13974:	cmp	x0, x3
   13978:	b.eq	139e0 <PyFloat_FromString@plt+0xcf50>  // b.none
   1397c:	mov	x1, x3
   13980:	bl	69c0 <PyType_IsSubtype@plt>
   13984:	cbnz	w0, 139e0 <PyFloat_FromString@plt+0xcf50>
   13988:	ldr	x0, [x19, #8]
   1398c:	ldr	x0, [x0, #168]
   13990:	tbnz	w0, #24, 13a54 <PyFloat_FromString@plt+0xcfc4>
   13994:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   13998:	ldr	x20, [x20, #3912]
   1399c:	ldr	x0, [x20]
   139a0:	add	x0, x0, #0x1
   139a4:	str	x0, [x20]
   139a8:	mov	x0, x20
   139ac:	ldp	x19, x20, [sp, #16]
   139b0:	ldp	x21, x22, [sp, #32]
   139b4:	ldr	x23, [sp, #48]
   139b8:	ldp	x29, x30, [sp], #80
   139bc:	ret
   139c0:	bl	7abc <PyFloat_FromString@plt+0x102c>
   139c4:	mov	x21, x0
   139c8:	cbnz	x0, 13954 <PyFloat_FromString@plt+0xcec4>
   139cc:	mov	x20, x0
   139d0:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   139d4:	mov	x0, x21
   139d8:	bl	65d0 <_Py_Dealloc@plt>
   139dc:	b	13964 <PyFloat_FromString@plt+0xced4>
   139e0:	ldr	x0, [x19]
   139e4:	add	x0, x0, #0x1
   139e8:	str	x0, [x19]
   139ec:	ldr	x0, [x22, #8]
   139f0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   139f4:	add	x1, x1, #0x320
   139f8:	add	x1, x1, #0x1a0
   139fc:	cmp	x0, x1
   13a00:	b.eq	13a7c <PyFloat_FromString@plt+0xcfec>  // b.none
   13a04:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13a08:	add	x1, x1, #0x320
   13a0c:	add	x1, x1, #0x1a0
   13a10:	bl	69c0 <PyType_IsSubtype@plt>
   13a14:	cbnz	w0, 13a7c <PyFloat_FromString@plt+0xcfec>
   13a18:	ldr	x0, [x22, #8]
   13a1c:	ldr	x0, [x0, #168]
   13a20:	tbnz	w0, #24, 13b10 <PyFloat_FromString@plt+0xd080>
   13a24:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   13a28:	ldr	x20, [x20, #3912]
   13a2c:	ldr	x0, [x20]
   13a30:	add	x0, x0, #0x1
   13a34:	str	x0, [x20]
   13a38:	ldr	x0, [x19]
   13a3c:	sub	x0, x0, #0x1
   13a40:	str	x0, [x19]
   13a44:	cbnz	x0, 139a8 <PyFloat_FromString@plt+0xcf18>
   13a48:	mov	x0, x19
   13a4c:	bl	65d0 <_Py_Dealloc@plt>
   13a50:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13a54:	mov	x2, x21
   13a58:	mov	x1, x19
   13a5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13a60:	add	x0, x0, #0x320
   13a64:	add	x0, x0, #0x1a0
   13a68:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   13a6c:	mov	x20, x0
   13a70:	mov	x19, x0
   13a74:	cbz	x0, 139a8 <PyFloat_FromString@plt+0xcf18>
   13a78:	b	139ec <PyFloat_FromString@plt+0xcf5c>
   13a7c:	ldr	x0, [x22]
   13a80:	add	x0, x0, #0x1
   13a84:	str	x0, [x22]
   13a88:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13a8c:	ldr	x0, [x0, #4008]
   13a90:	cmp	x23, x0
   13a94:	b.eq	13ca0 <PyFloat_FromString@plt+0xd210>  // b.none
   13a98:	ldr	x0, [x23, #8]
   13a9c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13aa0:	add	x1, x1, #0x320
   13aa4:	add	x1, x1, #0x1a0
   13aa8:	cmp	x0, x1
   13aac:	b.eq	13b38 <PyFloat_FromString@plt+0xd0a8>  // b.none
   13ab0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13ab4:	add	x1, x1, #0x320
   13ab8:	add	x1, x1, #0x1a0
   13abc:	bl	69c0 <PyType_IsSubtype@plt>
   13ac0:	cbnz	w0, 13b38 <PyFloat_FromString@plt+0xd0a8>
   13ac4:	ldr	x0, [x23, #8]
   13ac8:	ldr	x0, [x0, #168]
   13acc:	tbnz	w0, #24, 13bd0 <PyFloat_FromString@plt+0xd140>
   13ad0:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   13ad4:	ldr	x20, [x20, #3912]
   13ad8:	ldr	x0, [x20]
   13adc:	add	x0, x0, #0x1
   13ae0:	str	x0, [x20]
   13ae4:	ldr	x0, [x19]
   13ae8:	sub	x0, x0, #0x1
   13aec:	str	x0, [x19]
   13af0:	cbz	x0, 13bf8 <PyFloat_FromString@plt+0xd168>
   13af4:	ldr	x0, [x22]
   13af8:	sub	x0, x0, #0x1
   13afc:	str	x0, [x22]
   13b00:	cbnz	x0, 139a8 <PyFloat_FromString@plt+0xcf18>
   13b04:	mov	x0, x22
   13b08:	bl	65d0 <_Py_Dealloc@plt>
   13b0c:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13b10:	mov	x2, x21
   13b14:	mov	x1, x22
   13b18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13b1c:	add	x0, x0, #0x320
   13b20:	add	x0, x0, #0x1a0
   13b24:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   13b28:	mov	x22, x0
   13b2c:	cbnz	x0, 13a88 <PyFloat_FromString@plt+0xcff8>
   13b30:	mov	x20, x0
   13b34:	b	13a38 <PyFloat_FromString@plt+0xcfa8>
   13b38:	ldr	x0, [x23]
   13b3c:	add	x0, x0, #0x1
   13b40:	str	x0, [x23]
   13b44:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13b48:	add	x0, x0, #0x320
   13b4c:	add	x0, x0, #0x1a0
   13b50:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13b54:	mov	x20, x0
   13b58:	cbz	x0, 13c04 <PyFloat_FromString@plt+0xd174>
   13b5c:	add	x5, sp, #0x4c
   13b60:	add	x4, x21, #0x10
   13b64:	add	x3, x23, #0x18
   13b68:	add	x2, x22, #0x18
   13b6c:	add	x1, x19, #0x18
   13b70:	add	x0, x20, #0x18
   13b74:	bl	37404 <PyInit__decimal@@Base+0x1d264>
   13b78:	ldr	x0, [x23]
   13b7c:	sub	x0, x0, #0x1
   13b80:	str	x0, [x23]
   13b84:	cbz	x0, 13c6c <PyFloat_FromString@plt+0xd1dc>
   13b88:	ldr	x0, [x19]
   13b8c:	sub	x0, x0, #0x1
   13b90:	str	x0, [x19]
   13b94:	cbz	x0, 13c78 <PyFloat_FromString@plt+0xd1e8>
   13b98:	ldr	x0, [x22]
   13b9c:	sub	x0, x0, #0x1
   13ba0:	str	x0, [x22]
   13ba4:	cbz	x0, 13c84 <PyFloat_FromString@plt+0xd1f4>
   13ba8:	ldr	w1, [sp, #76]
   13bac:	mov	x0, x21
   13bb0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   13bb4:	cbz	w0, 139a8 <PyFloat_FromString@plt+0xcf18>
   13bb8:	ldr	x0, [x20]
   13bbc:	sub	x0, x0, #0x1
   13bc0:	str	x0, [x20]
   13bc4:	cbz	x0, 13c90 <PyFloat_FromString@plt+0xd200>
   13bc8:	mov	x20, #0x0                   	// #0
   13bcc:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13bd0:	mov	x2, x21
   13bd4:	mov	x1, x23
   13bd8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13bdc:	add	x0, x0, #0x320
   13be0:	add	x0, x0, #0x1a0
   13be4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   13be8:	mov	x23, x0
   13bec:	cbnz	x0, 13b44 <PyFloat_FromString@plt+0xd0b4>
   13bf0:	mov	x20, x0
   13bf4:	b	13ae4 <PyFloat_FromString@plt+0xd054>
   13bf8:	mov	x0, x19
   13bfc:	bl	65d0 <_Py_Dealloc@plt>
   13c00:	b	13af4 <PyFloat_FromString@plt+0xd064>
   13c04:	mov	x20, x23
   13c08:	ldr	x0, [x19]
   13c0c:	sub	x0, x0, #0x1
   13c10:	str	x0, [x19]
   13c14:	cbz	x0, 13c44 <PyFloat_FromString@plt+0xd1b4>
   13c18:	ldr	x0, [x22]
   13c1c:	sub	x0, x0, #0x1
   13c20:	str	x0, [x22]
   13c24:	cbz	x0, 13c50 <PyFloat_FromString@plt+0xd1c0>
   13c28:	cbz	x20, 139a8 <PyFloat_FromString@plt+0xcf18>
   13c2c:	ldr	x0, [x20]
   13c30:	sub	x0, x0, #0x1
   13c34:	str	x0, [x20]
   13c38:	cbz	x0, 13c5c <PyFloat_FromString@plt+0xd1cc>
   13c3c:	mov	x20, #0x0                   	// #0
   13c40:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13c44:	mov	x0, x19
   13c48:	bl	65d0 <_Py_Dealloc@plt>
   13c4c:	b	13c18 <PyFloat_FromString@plt+0xd188>
   13c50:	mov	x0, x22
   13c54:	bl	65d0 <_Py_Dealloc@plt>
   13c58:	b	13c28 <PyFloat_FromString@plt+0xd198>
   13c5c:	mov	x0, x20
   13c60:	bl	65d0 <_Py_Dealloc@plt>
   13c64:	mov	x20, #0x0                   	// #0
   13c68:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13c6c:	mov	x0, x23
   13c70:	bl	65d0 <_Py_Dealloc@plt>
   13c74:	b	13b88 <PyFloat_FromString@plt+0xd0f8>
   13c78:	mov	x0, x19
   13c7c:	bl	65d0 <_Py_Dealloc@plt>
   13c80:	b	13b98 <PyFloat_FromString@plt+0xd108>
   13c84:	mov	x0, x22
   13c88:	bl	65d0 <_Py_Dealloc@plt>
   13c8c:	b	13ba8 <PyFloat_FromString@plt+0xd118>
   13c90:	mov	x0, x20
   13c94:	bl	65d0 <_Py_Dealloc@plt>
   13c98:	mov	x20, #0x0                   	// #0
   13c9c:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13ca0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13ca4:	add	x0, x0, #0x320
   13ca8:	add	x0, x0, #0x1a0
   13cac:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13cb0:	mov	x20, x0
   13cb4:	cbz	x0, 13c08 <PyFloat_FromString@plt+0xd178>
   13cb8:	add	x4, sp, #0x4c
   13cbc:	add	x3, x21, #0x10
   13cc0:	add	x2, x22, #0x18
   13cc4:	add	x1, x19, #0x18
   13cc8:	add	x0, x20, #0x18
   13ccc:	bl	36960 <PyInit__decimal@@Base+0x1c7c0>
   13cd0:	b	13b88 <PyFloat_FromString@plt+0xd0f8>
   13cd4:	mov	x20, #0x0                   	// #0
   13cd8:	b	139a8 <PyFloat_FromString@plt+0xcf18>
   13cdc:	stp	x29, x30, [sp, #-64]!
   13ce0:	mov	x29, sp
   13ce4:	stp	x19, x20, [sp, #16]
   13ce8:	mov	x20, x0
   13cec:	mov	x0, x1
   13cf0:	mov	x1, x2
   13cf4:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   13cf8:	ldr	x2, [x2, #4008]
   13cfc:	str	x2, [sp, #56]
   13d00:	str	wzr, [sp, #52]
   13d04:	add	x4, sp, #0x38
   13d08:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   13d0c:	add	x3, x3, #0x9a0
   13d10:	add	x3, x3, #0x268
   13d14:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   13d18:	add	x2, x2, #0x878
   13d1c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13d20:	cbz	w0, 13e48 <PyFloat_FromString@plt+0xd3b8>
   13d24:	ldr	x1, [sp, #56]
   13d28:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13d2c:	ldr	x0, [x0, #4008]
   13d30:	cmp	x1, x0
   13d34:	b.eq	13dac <PyFloat_FromString@plt+0xd31c>  // b.none
   13d38:	ldr	x0, [x1, #8]
   13d3c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13d40:	add	x1, x1, #0x320
   13d44:	cmp	x0, x1
   13d48:	b.eq	13d5c <PyFloat_FromString@plt+0xd2cc>  // b.none
   13d4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13d50:	add	x1, x1, #0x320
   13d54:	bl	69c0 <PyType_IsSubtype@plt>
   13d58:	cbz	w0, 13e00 <PyFloat_FromString@plt+0xd370>
   13d5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13d60:	add	x0, x0, #0x320
   13d64:	add	x0, x0, #0x1a0
   13d68:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13d6c:	mov	x19, x0
   13d70:	cbz	x0, 13d9c <PyFloat_FromString@plt+0xd30c>
   13d74:	add	x3, sp, #0x34
   13d78:	ldr	x2, [sp, #56]
   13d7c:	add	x2, x2, #0x10
   13d80:	add	x1, x20, #0x18
   13d84:	add	x0, x0, #0x18
   13d88:	bl	335f0 <PyInit__decimal@@Base+0x19450>
   13d8c:	ldr	w1, [sp, #52]
   13d90:	ldr	x0, [sp, #56]
   13d94:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   13d98:	cbnz	w0, 13e20 <PyFloat_FromString@plt+0xd390>
   13d9c:	mov	x0, x19
   13da0:	ldp	x19, x20, [sp, #16]
   13da4:	ldp	x29, x30, [sp], #64
   13da8:	ret
   13dac:	add	x2, sp, #0x28
   13db0:	mov	x1, #0x0                   	// #0
   13db4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   13db8:	ldr	x0, [x0, #1816]
   13dbc:	bl	6740 <PyContextVar_Get@plt>
   13dc0:	tbnz	w0, #31, 13e50 <PyFloat_FromString@plt+0xd3c0>
   13dc4:	ldr	x19, [sp, #40]
   13dc8:	cbz	x19, 13dec <PyFloat_FromString@plt+0xd35c>
   13dcc:	str	x19, [sp, #56]
   13dd0:	ldr	x0, [x19]
   13dd4:	sub	x0, x0, #0x1
   13dd8:	str	x0, [x19]
   13ddc:	cbnz	x0, 13d5c <PyFloat_FromString@plt+0xd2cc>
   13de0:	mov	x0, x19
   13de4:	bl	65d0 <_Py_Dealloc@plt>
   13de8:	b	13d5c <PyFloat_FromString@plt+0xd2cc>
   13dec:	bl	7abc <PyFloat_FromString@plt+0x102c>
   13df0:	mov	x19, x0
   13df4:	str	x0, [sp, #56]
   13df8:	cbnz	x0, 13dd0 <PyFloat_FromString@plt+0xd340>
   13dfc:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   13e04:	add	x1, x1, #0x928
   13e08:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13e0c:	ldr	x0, [x0, #3936]
   13e10:	ldr	x0, [x0]
   13e14:	bl	6650 <PyErr_SetString@plt>
   13e18:	mov	x19, #0x0                   	// #0
   13e1c:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e20:	ldr	x0, [x19]
   13e24:	sub	x0, x0, #0x1
   13e28:	str	x0, [x19]
   13e2c:	cbz	x0, 13e38 <PyFloat_FromString@plt+0xd3a8>
   13e30:	mov	x19, #0x0                   	// #0
   13e34:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e38:	mov	x0, x19
   13e3c:	bl	65d0 <_Py_Dealloc@plt>
   13e40:	mov	x19, #0x0                   	// #0
   13e44:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e48:	mov	x19, #0x0                   	// #0
   13e4c:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e50:	mov	x19, #0x0                   	// #0
   13e54:	b	13d9c <PyFloat_FromString@plt+0xd30c>
   13e58:	stp	x29, x30, [sp, #-64]!
   13e5c:	mov	x29, sp
   13e60:	stp	x19, x20, [sp, #16]
   13e64:	mov	x20, x0
   13e68:	mov	x0, x1
   13e6c:	mov	x1, x2
   13e70:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   13e74:	ldr	x2, [x2, #4008]
   13e78:	str	x2, [sp, #56]
   13e7c:	str	wzr, [sp, #52]
   13e80:	add	x4, sp, #0x38
   13e84:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   13e88:	add	x3, x3, #0x9a0
   13e8c:	add	x3, x3, #0x278
   13e90:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   13e94:	add	x2, x2, #0x878
   13e98:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13e9c:	cbz	w0, 13fc4 <PyFloat_FromString@plt+0xd534>
   13ea0:	ldr	x1, [sp, #56]
   13ea4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13ea8:	ldr	x0, [x0, #4008]
   13eac:	cmp	x1, x0
   13eb0:	b.eq	13f28 <PyFloat_FromString@plt+0xd498>  // b.none
   13eb4:	ldr	x0, [x1, #8]
   13eb8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13ebc:	add	x1, x1, #0x320
   13ec0:	cmp	x0, x1
   13ec4:	b.eq	13ed8 <PyFloat_FromString@plt+0xd448>  // b.none
   13ec8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   13ecc:	add	x1, x1, #0x320
   13ed0:	bl	69c0 <PyType_IsSubtype@plt>
   13ed4:	cbz	w0, 13f7c <PyFloat_FromString@plt+0xd4ec>
   13ed8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   13edc:	add	x0, x0, #0x320
   13ee0:	add	x0, x0, #0x1a0
   13ee4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   13ee8:	mov	x19, x0
   13eec:	cbz	x0, 13f18 <PyFloat_FromString@plt+0xd488>
   13ef0:	add	x3, sp, #0x34
   13ef4:	ldr	x2, [sp, #56]
   13ef8:	add	x2, x2, #0x10
   13efc:	add	x1, x20, #0x18
   13f00:	add	x0, x0, #0x18
   13f04:	bl	34744 <PyInit__decimal@@Base+0x1a5a4>
   13f08:	ldr	w1, [sp, #52]
   13f0c:	ldr	x0, [sp, #56]
   13f10:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   13f14:	cbnz	w0, 13f9c <PyFloat_FromString@plt+0xd50c>
   13f18:	mov	x0, x19
   13f1c:	ldp	x19, x20, [sp, #16]
   13f20:	ldp	x29, x30, [sp], #64
   13f24:	ret
   13f28:	add	x2, sp, #0x28
   13f2c:	mov	x1, #0x0                   	// #0
   13f30:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   13f34:	ldr	x0, [x0, #1816]
   13f38:	bl	6740 <PyContextVar_Get@plt>
   13f3c:	tbnz	w0, #31, 13fcc <PyFloat_FromString@plt+0xd53c>
   13f40:	ldr	x19, [sp, #40]
   13f44:	cbz	x19, 13f68 <PyFloat_FromString@plt+0xd4d8>
   13f48:	str	x19, [sp, #56]
   13f4c:	ldr	x0, [x19]
   13f50:	sub	x0, x0, #0x1
   13f54:	str	x0, [x19]
   13f58:	cbnz	x0, 13ed8 <PyFloat_FromString@plt+0xd448>
   13f5c:	mov	x0, x19
   13f60:	bl	65d0 <_Py_Dealloc@plt>
   13f64:	b	13ed8 <PyFloat_FromString@plt+0xd448>
   13f68:	bl	7abc <PyFloat_FromString@plt+0x102c>
   13f6c:	mov	x19, x0
   13f70:	str	x0, [sp, #56]
   13f74:	cbnz	x0, 13f4c <PyFloat_FromString@plt+0xd4bc>
   13f78:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13f7c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   13f80:	add	x1, x1, #0x928
   13f84:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   13f88:	ldr	x0, [x0, #3936]
   13f8c:	ldr	x0, [x0]
   13f90:	bl	6650 <PyErr_SetString@plt>
   13f94:	mov	x19, #0x0                   	// #0
   13f98:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13f9c:	ldr	x0, [x19]
   13fa0:	sub	x0, x0, #0x1
   13fa4:	str	x0, [x19]
   13fa8:	cbz	x0, 13fb4 <PyFloat_FromString@plt+0xd524>
   13fac:	mov	x19, #0x0                   	// #0
   13fb0:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13fb4:	mov	x0, x19
   13fb8:	bl	65d0 <_Py_Dealloc@plt>
   13fbc:	mov	x19, #0x0                   	// #0
   13fc0:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13fc4:	mov	x19, #0x0                   	// #0
   13fc8:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13fcc:	mov	x19, #0x0                   	// #0
   13fd0:	b	13f18 <PyFloat_FromString@plt+0xd488>
   13fd4:	stp	x29, x30, [sp, #-64]!
   13fd8:	mov	x29, sp
   13fdc:	stp	x19, x20, [sp, #16]
   13fe0:	mov	x20, x0
   13fe4:	mov	x0, x1
   13fe8:	mov	x1, x2
   13fec:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   13ff0:	ldr	x2, [x2, #4008]
   13ff4:	str	x2, [sp, #56]
   13ff8:	str	wzr, [sp, #52]
   13ffc:	add	x4, sp, #0x38
   14000:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   14004:	add	x3, x3, #0x9a0
   14008:	add	x3, x3, #0x288
   1400c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   14010:	add	x2, x2, #0x878
   14014:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14018:	cbz	w0, 14140 <PyFloat_FromString@plt+0xd6b0>
   1401c:	ldr	x1, [sp, #56]
   14020:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14024:	ldr	x0, [x0, #4008]
   14028:	cmp	x1, x0
   1402c:	b.eq	140a4 <PyFloat_FromString@plt+0xd614>  // b.none
   14030:	ldr	x0, [x1, #8]
   14034:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14038:	add	x1, x1, #0x320
   1403c:	cmp	x0, x1
   14040:	b.eq	14054 <PyFloat_FromString@plt+0xd5c4>  // b.none
   14044:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14048:	add	x1, x1, #0x320
   1404c:	bl	69c0 <PyType_IsSubtype@plt>
   14050:	cbz	w0, 140f8 <PyFloat_FromString@plt+0xd668>
   14054:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14058:	add	x0, x0, #0x320
   1405c:	add	x0, x0, #0x1a0
   14060:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   14064:	mov	x19, x0
   14068:	cbz	x0, 14094 <PyFloat_FromString@plt+0xd604>
   1406c:	add	x3, sp, #0x34
   14070:	ldr	x2, [sp, #56]
   14074:	add	x2, x2, #0x10
   14078:	add	x1, x20, #0x18
   1407c:	add	x0, x0, #0x18
   14080:	bl	35014 <PyInit__decimal@@Base+0x1ae74>
   14084:	ldr	w1, [sp, #52]
   14088:	ldr	x0, [sp, #56]
   1408c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14090:	cbnz	w0, 14118 <PyFloat_FromString@plt+0xd688>
   14094:	mov	x0, x19
   14098:	ldp	x19, x20, [sp, #16]
   1409c:	ldp	x29, x30, [sp], #64
   140a0:	ret
   140a4:	add	x2, sp, #0x28
   140a8:	mov	x1, #0x0                   	// #0
   140ac:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   140b0:	ldr	x0, [x0, #1816]
   140b4:	bl	6740 <PyContextVar_Get@plt>
   140b8:	tbnz	w0, #31, 14148 <PyFloat_FromString@plt+0xd6b8>
   140bc:	ldr	x19, [sp, #40]
   140c0:	cbz	x19, 140e4 <PyFloat_FromString@plt+0xd654>
   140c4:	str	x19, [sp, #56]
   140c8:	ldr	x0, [x19]
   140cc:	sub	x0, x0, #0x1
   140d0:	str	x0, [x19]
   140d4:	cbnz	x0, 14054 <PyFloat_FromString@plt+0xd5c4>
   140d8:	mov	x0, x19
   140dc:	bl	65d0 <_Py_Dealloc@plt>
   140e0:	b	14054 <PyFloat_FromString@plt+0xd5c4>
   140e4:	bl	7abc <PyFloat_FromString@plt+0x102c>
   140e8:	mov	x19, x0
   140ec:	str	x0, [sp, #56]
   140f0:	cbnz	x0, 140c8 <PyFloat_FromString@plt+0xd638>
   140f4:	b	14094 <PyFloat_FromString@plt+0xd604>
   140f8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   140fc:	add	x1, x1, #0x928
   14100:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14104:	ldr	x0, [x0, #3936]
   14108:	ldr	x0, [x0]
   1410c:	bl	6650 <PyErr_SetString@plt>
   14110:	mov	x19, #0x0                   	// #0
   14114:	b	14094 <PyFloat_FromString@plt+0xd604>
   14118:	ldr	x0, [x19]
   1411c:	sub	x0, x0, #0x1
   14120:	str	x0, [x19]
   14124:	cbz	x0, 14130 <PyFloat_FromString@plt+0xd6a0>
   14128:	mov	x19, #0x0                   	// #0
   1412c:	b	14094 <PyFloat_FromString@plt+0xd604>
   14130:	mov	x0, x19
   14134:	bl	65d0 <_Py_Dealloc@plt>
   14138:	mov	x19, #0x0                   	// #0
   1413c:	b	14094 <PyFloat_FromString@plt+0xd604>
   14140:	mov	x19, #0x0                   	// #0
   14144:	b	14094 <PyFloat_FromString@plt+0xd604>
   14148:	mov	x19, #0x0                   	// #0
   1414c:	b	14094 <PyFloat_FromString@plt+0xd604>
   14150:	stp	x29, x30, [sp, #-64]!
   14154:	mov	x29, sp
   14158:	stp	x19, x20, [sp, #16]
   1415c:	mov	x20, x0
   14160:	mov	x0, x1
   14164:	mov	x1, x2
   14168:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1416c:	ldr	x2, [x2, #4008]
   14170:	str	x2, [sp, #56]
   14174:	str	wzr, [sp, #52]
   14178:	add	x4, sp, #0x38
   1417c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   14180:	add	x3, x3, #0x9a0
   14184:	add	x3, x3, #0x298
   14188:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1418c:	add	x2, x2, #0x878
   14190:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14194:	cbz	w0, 142bc <PyFloat_FromString@plt+0xd82c>
   14198:	ldr	x1, [sp, #56]
   1419c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   141a0:	ldr	x0, [x0, #4008]
   141a4:	cmp	x1, x0
   141a8:	b.eq	14220 <PyFloat_FromString@plt+0xd790>  // b.none
   141ac:	ldr	x0, [x1, #8]
   141b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   141b4:	add	x1, x1, #0x320
   141b8:	cmp	x0, x1
   141bc:	b.eq	141d0 <PyFloat_FromString@plt+0xd740>  // b.none
   141c0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   141c4:	add	x1, x1, #0x320
   141c8:	bl	69c0 <PyType_IsSubtype@plt>
   141cc:	cbz	w0, 14274 <PyFloat_FromString@plt+0xd7e4>
   141d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   141d4:	add	x0, x0, #0x320
   141d8:	add	x0, x0, #0x1a0
   141dc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   141e0:	mov	x19, x0
   141e4:	cbz	x0, 14210 <PyFloat_FromString@plt+0xd780>
   141e8:	add	x3, sp, #0x34
   141ec:	ldr	x2, [sp, #56]
   141f0:	add	x2, x2, #0x10
   141f4:	add	x1, x20, #0x18
   141f8:	add	x0, x0, #0x18
   141fc:	bl	313a0 <PyInit__decimal@@Base+0x17200>
   14200:	ldr	w1, [sp, #52]
   14204:	ldr	x0, [sp, #56]
   14208:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   1420c:	cbnz	w0, 14294 <PyFloat_FromString@plt+0xd804>
   14210:	mov	x0, x19
   14214:	ldp	x19, x20, [sp, #16]
   14218:	ldp	x29, x30, [sp], #64
   1421c:	ret
   14220:	add	x2, sp, #0x28
   14224:	mov	x1, #0x0                   	// #0
   14228:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1422c:	ldr	x0, [x0, #1816]
   14230:	bl	6740 <PyContextVar_Get@plt>
   14234:	tbnz	w0, #31, 142c4 <PyFloat_FromString@plt+0xd834>
   14238:	ldr	x19, [sp, #40]
   1423c:	cbz	x19, 14260 <PyFloat_FromString@plt+0xd7d0>
   14240:	str	x19, [sp, #56]
   14244:	ldr	x0, [x19]
   14248:	sub	x0, x0, #0x1
   1424c:	str	x0, [x19]
   14250:	cbnz	x0, 141d0 <PyFloat_FromString@plt+0xd740>
   14254:	mov	x0, x19
   14258:	bl	65d0 <_Py_Dealloc@plt>
   1425c:	b	141d0 <PyFloat_FromString@plt+0xd740>
   14260:	bl	7abc <PyFloat_FromString@plt+0x102c>
   14264:	mov	x19, x0
   14268:	str	x0, [sp, #56]
   1426c:	cbnz	x0, 14244 <PyFloat_FromString@plt+0xd7b4>
   14270:	b	14210 <PyFloat_FromString@plt+0xd780>
   14274:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14278:	add	x1, x1, #0x928
   1427c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14280:	ldr	x0, [x0, #3936]
   14284:	ldr	x0, [x0]
   14288:	bl	6650 <PyErr_SetString@plt>
   1428c:	mov	x19, #0x0                   	// #0
   14290:	b	14210 <PyFloat_FromString@plt+0xd780>
   14294:	ldr	x0, [x19]
   14298:	sub	x0, x0, #0x1
   1429c:	str	x0, [x19]
   142a0:	cbz	x0, 142ac <PyFloat_FromString@plt+0xd81c>
   142a4:	mov	x19, #0x0                   	// #0
   142a8:	b	14210 <PyFloat_FromString@plt+0xd780>
   142ac:	mov	x0, x19
   142b0:	bl	65d0 <_Py_Dealloc@plt>
   142b4:	mov	x19, #0x0                   	// #0
   142b8:	b	14210 <PyFloat_FromString@plt+0xd780>
   142bc:	mov	x19, #0x0                   	// #0
   142c0:	b	14210 <PyFloat_FromString@plt+0xd780>
   142c4:	mov	x19, #0x0                   	// #0
   142c8:	b	14210 <PyFloat_FromString@plt+0xd780>
   142cc:	stp	x29, x30, [sp, #-64]!
   142d0:	mov	x29, sp
   142d4:	stp	x19, x20, [sp, #16]
   142d8:	mov	x20, x0
   142dc:	mov	x0, x1
   142e0:	mov	x1, x2
   142e4:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   142e8:	ldr	x2, [x2, #4008]
   142ec:	str	x2, [sp, #56]
   142f0:	str	wzr, [sp, #52]
   142f4:	add	x4, sp, #0x38
   142f8:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   142fc:	add	x3, x3, #0x9a0
   14300:	add	x3, x3, #0x2a8
   14304:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   14308:	add	x2, x2, #0x878
   1430c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14310:	cbz	w0, 14438 <PyFloat_FromString@plt+0xd9a8>
   14314:	ldr	x1, [sp, #56]
   14318:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1431c:	ldr	x0, [x0, #4008]
   14320:	cmp	x1, x0
   14324:	b.eq	1439c <PyFloat_FromString@plt+0xd90c>  // b.none
   14328:	ldr	x0, [x1, #8]
   1432c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14330:	add	x1, x1, #0x320
   14334:	cmp	x0, x1
   14338:	b.eq	1434c <PyFloat_FromString@plt+0xd8bc>  // b.none
   1433c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14340:	add	x1, x1, #0x320
   14344:	bl	69c0 <PyType_IsSubtype@plt>
   14348:	cbz	w0, 143f0 <PyFloat_FromString@plt+0xd960>
   1434c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14350:	add	x0, x0, #0x320
   14354:	add	x0, x0, #0x1a0
   14358:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1435c:	mov	x19, x0
   14360:	cbz	x0, 1438c <PyFloat_FromString@plt+0xd8fc>
   14364:	add	x3, sp, #0x34
   14368:	ldr	x2, [sp, #56]
   1436c:	add	x2, x2, #0x10
   14370:	add	x1, x20, #0x18
   14374:	add	x0, x0, #0x18
   14378:	bl	31538 <PyInit__decimal@@Base+0x17398>
   1437c:	ldr	w1, [sp, #52]
   14380:	ldr	x0, [sp, #56]
   14384:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14388:	cbnz	w0, 14410 <PyFloat_FromString@plt+0xd980>
   1438c:	mov	x0, x19
   14390:	ldp	x19, x20, [sp, #16]
   14394:	ldp	x29, x30, [sp], #64
   14398:	ret
   1439c:	add	x2, sp, #0x28
   143a0:	mov	x1, #0x0                   	// #0
   143a4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   143a8:	ldr	x0, [x0, #1816]
   143ac:	bl	6740 <PyContextVar_Get@plt>
   143b0:	tbnz	w0, #31, 14440 <PyFloat_FromString@plt+0xd9b0>
   143b4:	ldr	x19, [sp, #40]
   143b8:	cbz	x19, 143dc <PyFloat_FromString@plt+0xd94c>
   143bc:	str	x19, [sp, #56]
   143c0:	ldr	x0, [x19]
   143c4:	sub	x0, x0, #0x1
   143c8:	str	x0, [x19]
   143cc:	cbnz	x0, 1434c <PyFloat_FromString@plt+0xd8bc>
   143d0:	mov	x0, x19
   143d4:	bl	65d0 <_Py_Dealloc@plt>
   143d8:	b	1434c <PyFloat_FromString@plt+0xd8bc>
   143dc:	bl	7abc <PyFloat_FromString@plt+0x102c>
   143e0:	mov	x19, x0
   143e4:	str	x0, [sp, #56]
   143e8:	cbnz	x0, 143c0 <PyFloat_FromString@plt+0xd930>
   143ec:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   143f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   143f4:	add	x1, x1, #0x928
   143f8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   143fc:	ldr	x0, [x0, #3936]
   14400:	ldr	x0, [x0]
   14404:	bl	6650 <PyErr_SetString@plt>
   14408:	mov	x19, #0x0                   	// #0
   1440c:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   14410:	ldr	x0, [x19]
   14414:	sub	x0, x0, #0x1
   14418:	str	x0, [x19]
   1441c:	cbz	x0, 14428 <PyFloat_FromString@plt+0xd998>
   14420:	mov	x19, #0x0                   	// #0
   14424:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   14428:	mov	x0, x19
   1442c:	bl	65d0 <_Py_Dealloc@plt>
   14430:	mov	x19, #0x0                   	// #0
   14434:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   14438:	mov	x19, #0x0                   	// #0
   1443c:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   14440:	mov	x19, #0x0                   	// #0
   14444:	b	1438c <PyFloat_FromString@plt+0xd8fc>
   14448:	stp	x29, x30, [sp, #-64]!
   1444c:	mov	x29, sp
   14450:	stp	x19, x20, [sp, #16]
   14454:	mov	x20, x0
   14458:	mov	x0, x1
   1445c:	mov	x1, x2
   14460:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   14464:	ldr	x2, [x2, #4008]
   14468:	str	x2, [sp, #56]
   1446c:	str	wzr, [sp, #52]
   14470:	add	x4, sp, #0x38
   14474:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   14478:	add	x3, x3, #0x9a0
   1447c:	add	x3, x3, #0x2b8
   14480:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   14484:	add	x2, x2, #0x878
   14488:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1448c:	cbz	w0, 145b4 <PyFloat_FromString@plt+0xdb24>
   14490:	ldr	x1, [sp, #56]
   14494:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14498:	ldr	x0, [x0, #4008]
   1449c:	cmp	x1, x0
   144a0:	b.eq	14518 <PyFloat_FromString@plt+0xda88>  // b.none
   144a4:	ldr	x0, [x1, #8]
   144a8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   144ac:	add	x1, x1, #0x320
   144b0:	cmp	x0, x1
   144b4:	b.eq	144c8 <PyFloat_FromString@plt+0xda38>  // b.none
   144b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   144bc:	add	x1, x1, #0x320
   144c0:	bl	69c0 <PyType_IsSubtype@plt>
   144c4:	cbz	w0, 1456c <PyFloat_FromString@plt+0xdadc>
   144c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   144cc:	add	x0, x0, #0x320
   144d0:	add	x0, x0, #0x1a0
   144d4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   144d8:	mov	x19, x0
   144dc:	cbz	x0, 14508 <PyFloat_FromString@plt+0xda78>
   144e0:	add	x3, sp, #0x34
   144e4:	ldr	x2, [sp, #56]
   144e8:	add	x2, x2, #0x10
   144ec:	add	x1, x20, #0x18
   144f0:	add	x0, x0, #0x18
   144f4:	bl	31d38 <PyInit__decimal@@Base+0x17b98>
   144f8:	ldr	w1, [sp, #52]
   144fc:	ldr	x0, [sp, #56]
   14500:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14504:	cbnz	w0, 1458c <PyFloat_FromString@plt+0xdafc>
   14508:	mov	x0, x19
   1450c:	ldp	x19, x20, [sp, #16]
   14510:	ldp	x29, x30, [sp], #64
   14514:	ret
   14518:	add	x2, sp, #0x28
   1451c:	mov	x1, #0x0                   	// #0
   14520:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   14524:	ldr	x0, [x0, #1816]
   14528:	bl	6740 <PyContextVar_Get@plt>
   1452c:	tbnz	w0, #31, 145bc <PyFloat_FromString@plt+0xdb2c>
   14530:	ldr	x19, [sp, #40]
   14534:	cbz	x19, 14558 <PyFloat_FromString@plt+0xdac8>
   14538:	str	x19, [sp, #56]
   1453c:	ldr	x0, [x19]
   14540:	sub	x0, x0, #0x1
   14544:	str	x0, [x19]
   14548:	cbnz	x0, 144c8 <PyFloat_FromString@plt+0xda38>
   1454c:	mov	x0, x19
   14550:	bl	65d0 <_Py_Dealloc@plt>
   14554:	b	144c8 <PyFloat_FromString@plt+0xda38>
   14558:	bl	7abc <PyFloat_FromString@plt+0x102c>
   1455c:	mov	x19, x0
   14560:	str	x0, [sp, #56]
   14564:	cbnz	x0, 1453c <PyFloat_FromString@plt+0xdaac>
   14568:	b	14508 <PyFloat_FromString@plt+0xda78>
   1456c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14570:	add	x1, x1, #0x928
   14574:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14578:	ldr	x0, [x0, #3936]
   1457c:	ldr	x0, [x0]
   14580:	bl	6650 <PyErr_SetString@plt>
   14584:	mov	x19, #0x0                   	// #0
   14588:	b	14508 <PyFloat_FromString@plt+0xda78>
   1458c:	ldr	x0, [x19]
   14590:	sub	x0, x0, #0x1
   14594:	str	x0, [x19]
   14598:	cbz	x0, 145a4 <PyFloat_FromString@plt+0xdb14>
   1459c:	mov	x19, #0x0                   	// #0
   145a0:	b	14508 <PyFloat_FromString@plt+0xda78>
   145a4:	mov	x0, x19
   145a8:	bl	65d0 <_Py_Dealloc@plt>
   145ac:	mov	x19, #0x0                   	// #0
   145b0:	b	14508 <PyFloat_FromString@plt+0xda78>
   145b4:	mov	x19, #0x0                   	// #0
   145b8:	b	14508 <PyFloat_FromString@plt+0xda78>
   145bc:	mov	x19, #0x0                   	// #0
   145c0:	b	14508 <PyFloat_FromString@plt+0xda78>
   145c4:	stp	x29, x30, [sp, #-64]!
   145c8:	mov	x29, sp
   145cc:	stp	x19, x20, [sp, #16]
   145d0:	mov	x20, x0
   145d4:	mov	x0, x1
   145d8:	mov	x1, x2
   145dc:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   145e0:	ldr	x2, [x2, #4008]
   145e4:	str	x2, [sp, #56]
   145e8:	str	wzr, [sp, #52]
   145ec:	add	x4, sp, #0x38
   145f0:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   145f4:	add	x3, x3, #0x9a0
   145f8:	add	x3, x3, #0x2c8
   145fc:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   14600:	add	x2, x2, #0x878
   14604:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14608:	cbz	w0, 14730 <PyFloat_FromString@plt+0xdca0>
   1460c:	ldr	x1, [sp, #56]
   14610:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14614:	ldr	x0, [x0, #4008]
   14618:	cmp	x1, x0
   1461c:	b.eq	14694 <PyFloat_FromString@plt+0xdc04>  // b.none
   14620:	ldr	x0, [x1, #8]
   14624:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14628:	add	x1, x1, #0x320
   1462c:	cmp	x0, x1
   14630:	b.eq	14644 <PyFloat_FromString@plt+0xdbb4>  // b.none
   14634:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14638:	add	x1, x1, #0x320
   1463c:	bl	69c0 <PyType_IsSubtype@plt>
   14640:	cbz	w0, 146e8 <PyFloat_FromString@plt+0xdc58>
   14644:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14648:	add	x0, x0, #0x320
   1464c:	add	x0, x0, #0x1a0
   14650:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   14654:	mov	x19, x0
   14658:	cbz	x0, 14684 <PyFloat_FromString@plt+0xdbf4>
   1465c:	add	x3, sp, #0x34
   14660:	ldr	x2, [sp, #56]
   14664:	add	x2, x2, #0x10
   14668:	add	x1, x20, #0x18
   1466c:	add	x0, x0, #0x18
   14670:	bl	382d8 <PyInit__decimal@@Base+0x1e138>
   14674:	ldr	w1, [sp, #52]
   14678:	ldr	x0, [sp, #56]
   1467c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14680:	cbnz	w0, 14708 <PyFloat_FromString@plt+0xdc78>
   14684:	mov	x0, x19
   14688:	ldp	x19, x20, [sp, #16]
   1468c:	ldp	x29, x30, [sp], #64
   14690:	ret
   14694:	add	x2, sp, #0x28
   14698:	mov	x1, #0x0                   	// #0
   1469c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   146a0:	ldr	x0, [x0, #1816]
   146a4:	bl	6740 <PyContextVar_Get@plt>
   146a8:	tbnz	w0, #31, 14738 <PyFloat_FromString@plt+0xdca8>
   146ac:	ldr	x19, [sp, #40]
   146b0:	cbz	x19, 146d4 <PyFloat_FromString@plt+0xdc44>
   146b4:	str	x19, [sp, #56]
   146b8:	ldr	x0, [x19]
   146bc:	sub	x0, x0, #0x1
   146c0:	str	x0, [x19]
   146c4:	cbnz	x0, 14644 <PyFloat_FromString@plt+0xdbb4>
   146c8:	mov	x0, x19
   146cc:	bl	65d0 <_Py_Dealloc@plt>
   146d0:	b	14644 <PyFloat_FromString@plt+0xdbb4>
   146d4:	bl	7abc <PyFloat_FromString@plt+0x102c>
   146d8:	mov	x19, x0
   146dc:	str	x0, [sp, #56]
   146e0:	cbnz	x0, 146b8 <PyFloat_FromString@plt+0xdc28>
   146e4:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   146e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   146ec:	add	x1, x1, #0x928
   146f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   146f4:	ldr	x0, [x0, #3936]
   146f8:	ldr	x0, [x0]
   146fc:	bl	6650 <PyErr_SetString@plt>
   14700:	mov	x19, #0x0                   	// #0
   14704:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   14708:	ldr	x0, [x19]
   1470c:	sub	x0, x0, #0x1
   14710:	str	x0, [x19]
   14714:	cbz	x0, 14720 <PyFloat_FromString@plt+0xdc90>
   14718:	mov	x19, #0x0                   	// #0
   1471c:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   14720:	mov	x0, x19
   14724:	bl	65d0 <_Py_Dealloc@plt>
   14728:	mov	x19, #0x0                   	// #0
   1472c:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   14730:	mov	x19, #0x0                   	// #0
   14734:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   14738:	mov	x19, #0x0                   	// #0
   1473c:	b	14684 <PyFloat_FromString@plt+0xdbf4>
   14740:	stp	x29, x30, [sp, #-64]!
   14744:	mov	x29, sp
   14748:	stp	x19, x20, [sp, #16]
   1474c:	mov	x20, x0
   14750:	mov	x0, x1
   14754:	mov	x1, x2
   14758:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1475c:	ldr	x2, [x2, #4008]
   14760:	str	x2, [sp, #56]
   14764:	str	wzr, [sp, #52]
   14768:	add	x4, sp, #0x38
   1476c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   14770:	add	x3, x3, #0x9a0
   14774:	add	x3, x3, #0x2d8
   14778:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1477c:	add	x2, x2, #0x878
   14780:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14784:	cbz	w0, 148ac <PyFloat_FromString@plt+0xde1c>
   14788:	ldr	x1, [sp, #56]
   1478c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14790:	ldr	x0, [x0, #4008]
   14794:	cmp	x1, x0
   14798:	b.eq	14810 <PyFloat_FromString@plt+0xdd80>  // b.none
   1479c:	ldr	x0, [x1, #8]
   147a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   147a4:	add	x1, x1, #0x320
   147a8:	cmp	x0, x1
   147ac:	b.eq	147c0 <PyFloat_FromString@plt+0xdd30>  // b.none
   147b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   147b4:	add	x1, x1, #0x320
   147b8:	bl	69c0 <PyType_IsSubtype@plt>
   147bc:	cbz	w0, 14864 <PyFloat_FromString@plt+0xddd4>
   147c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   147c4:	add	x0, x0, #0x320
   147c8:	add	x0, x0, #0x1a0
   147cc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   147d0:	mov	x19, x0
   147d4:	cbz	x0, 14800 <PyFloat_FromString@plt+0xdd70>
   147d8:	add	x3, sp, #0x34
   147dc:	ldr	x2, [sp, #56]
   147e0:	add	x2, x2, #0x10
   147e4:	add	x1, x20, #0x18
   147e8:	add	x0, x0, #0x18
   147ec:	bl	2d848 <PyInit__decimal@@Base+0x136a8>
   147f0:	ldr	w1, [sp, #52]
   147f4:	ldr	x0, [sp, #56]
   147f8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   147fc:	cbnz	w0, 14884 <PyFloat_FromString@plt+0xddf4>
   14800:	mov	x0, x19
   14804:	ldp	x19, x20, [sp, #16]
   14808:	ldp	x29, x30, [sp], #64
   1480c:	ret
   14810:	add	x2, sp, #0x28
   14814:	mov	x1, #0x0                   	// #0
   14818:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1481c:	ldr	x0, [x0, #1816]
   14820:	bl	6740 <PyContextVar_Get@plt>
   14824:	tbnz	w0, #31, 148b4 <PyFloat_FromString@plt+0xde24>
   14828:	ldr	x19, [sp, #40]
   1482c:	cbz	x19, 14850 <PyFloat_FromString@plt+0xddc0>
   14830:	str	x19, [sp, #56]
   14834:	ldr	x0, [x19]
   14838:	sub	x0, x0, #0x1
   1483c:	str	x0, [x19]
   14840:	cbnz	x0, 147c0 <PyFloat_FromString@plt+0xdd30>
   14844:	mov	x0, x19
   14848:	bl	65d0 <_Py_Dealloc@plt>
   1484c:	b	147c0 <PyFloat_FromString@plt+0xdd30>
   14850:	bl	7abc <PyFloat_FromString@plt+0x102c>
   14854:	mov	x19, x0
   14858:	str	x0, [sp, #56]
   1485c:	cbnz	x0, 14834 <PyFloat_FromString@plt+0xdda4>
   14860:	b	14800 <PyFloat_FromString@plt+0xdd70>
   14864:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14868:	add	x1, x1, #0x928
   1486c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14870:	ldr	x0, [x0, #3936]
   14874:	ldr	x0, [x0]
   14878:	bl	6650 <PyErr_SetString@plt>
   1487c:	mov	x19, #0x0                   	// #0
   14880:	b	14800 <PyFloat_FromString@plt+0xdd70>
   14884:	ldr	x0, [x19]
   14888:	sub	x0, x0, #0x1
   1488c:	str	x0, [x19]
   14890:	cbz	x0, 1489c <PyFloat_FromString@plt+0xde0c>
   14894:	mov	x19, #0x0                   	// #0
   14898:	b	14800 <PyFloat_FromString@plt+0xdd70>
   1489c:	mov	x0, x19
   148a0:	bl	65d0 <_Py_Dealloc@plt>
   148a4:	mov	x19, #0x0                   	// #0
   148a8:	b	14800 <PyFloat_FromString@plt+0xdd70>
   148ac:	mov	x19, #0x0                   	// #0
   148b0:	b	14800 <PyFloat_FromString@plt+0xdd70>
   148b4:	mov	x19, #0x0                   	// #0
   148b8:	b	14800 <PyFloat_FromString@plt+0xdd70>
   148bc:	stp	x29, x30, [sp, #-64]!
   148c0:	mov	x29, sp
   148c4:	stp	x19, x20, [sp, #16]
   148c8:	mov	x20, x0
   148cc:	mov	x0, x1
   148d0:	mov	x1, x2
   148d4:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   148d8:	ldr	x2, [x2, #4008]
   148dc:	str	x2, [sp, #56]
   148e0:	str	wzr, [sp, #52]
   148e4:	add	x4, sp, #0x38
   148e8:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   148ec:	add	x3, x3, #0x9a0
   148f0:	add	x3, x3, #0x2e8
   148f4:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   148f8:	add	x2, x2, #0x878
   148fc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14900:	cbz	w0, 14a28 <PyFloat_FromString@plt+0xdf98>
   14904:	ldr	x1, [sp, #56]
   14908:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1490c:	ldr	x0, [x0, #4008]
   14910:	cmp	x1, x0
   14914:	b.eq	1498c <PyFloat_FromString@plt+0xdefc>  // b.none
   14918:	ldr	x0, [x1, #8]
   1491c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14920:	add	x1, x1, #0x320
   14924:	cmp	x0, x1
   14928:	b.eq	1493c <PyFloat_FromString@plt+0xdeac>  // b.none
   1492c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14930:	add	x1, x1, #0x320
   14934:	bl	69c0 <PyType_IsSubtype@plt>
   14938:	cbz	w0, 149e0 <PyFloat_FromString@plt+0xdf50>
   1493c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14940:	add	x0, x0, #0x320
   14944:	add	x0, x0, #0x1a0
   14948:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   1494c:	mov	x19, x0
   14950:	cbz	x0, 1497c <PyFloat_FromString@plt+0xdeec>
   14954:	add	x3, sp, #0x34
   14958:	ldr	x2, [sp, #56]
   1495c:	add	x2, x2, #0x10
   14960:	add	x1, x20, #0x18
   14964:	add	x0, x0, #0x18
   14968:	bl	2dc44 <PyInit__decimal@@Base+0x13aa4>
   1496c:	ldr	w1, [sp, #52]
   14970:	ldr	x0, [sp, #56]
   14974:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14978:	cbnz	w0, 14a00 <PyFloat_FromString@plt+0xdf70>
   1497c:	mov	x0, x19
   14980:	ldp	x19, x20, [sp, #16]
   14984:	ldp	x29, x30, [sp], #64
   14988:	ret
   1498c:	add	x2, sp, #0x28
   14990:	mov	x1, #0x0                   	// #0
   14994:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   14998:	ldr	x0, [x0, #1816]
   1499c:	bl	6740 <PyContextVar_Get@plt>
   149a0:	tbnz	w0, #31, 14a30 <PyFloat_FromString@plt+0xdfa0>
   149a4:	ldr	x19, [sp, #40]
   149a8:	cbz	x19, 149cc <PyFloat_FromString@plt+0xdf3c>
   149ac:	str	x19, [sp, #56]
   149b0:	ldr	x0, [x19]
   149b4:	sub	x0, x0, #0x1
   149b8:	str	x0, [x19]
   149bc:	cbnz	x0, 1493c <PyFloat_FromString@plt+0xdeac>
   149c0:	mov	x0, x19
   149c4:	bl	65d0 <_Py_Dealloc@plt>
   149c8:	b	1493c <PyFloat_FromString@plt+0xdeac>
   149cc:	bl	7abc <PyFloat_FromString@plt+0x102c>
   149d0:	mov	x19, x0
   149d4:	str	x0, [sp, #56]
   149d8:	cbnz	x0, 149b0 <PyFloat_FromString@plt+0xdf20>
   149dc:	b	1497c <PyFloat_FromString@plt+0xdeec>
   149e0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   149e4:	add	x1, x1, #0x928
   149e8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   149ec:	ldr	x0, [x0, #3936]
   149f0:	ldr	x0, [x0]
   149f4:	bl	6650 <PyErr_SetString@plt>
   149f8:	mov	x19, #0x0                   	// #0
   149fc:	b	1497c <PyFloat_FromString@plt+0xdeec>
   14a00:	ldr	x0, [x19]
   14a04:	sub	x0, x0, #0x1
   14a08:	str	x0, [x19]
   14a0c:	cbz	x0, 14a18 <PyFloat_FromString@plt+0xdf88>
   14a10:	mov	x19, #0x0                   	// #0
   14a14:	b	1497c <PyFloat_FromString@plt+0xdeec>
   14a18:	mov	x0, x19
   14a1c:	bl	65d0 <_Py_Dealloc@plt>
   14a20:	mov	x19, #0x0                   	// #0
   14a24:	b	1497c <PyFloat_FromString@plt+0xdeec>
   14a28:	mov	x19, #0x0                   	// #0
   14a2c:	b	1497c <PyFloat_FromString@plt+0xdeec>
   14a30:	mov	x19, #0x0                   	// #0
   14a34:	b	1497c <PyFloat_FromString@plt+0xdeec>
   14a38:	stp	x29, x30, [sp, #-96]!
   14a3c:	mov	x29, sp
   14a40:	stp	x19, x20, [sp, #16]
   14a44:	stp	x21, x22, [sp, #32]
   14a48:	mov	x20, x0
   14a4c:	mov	x0, x1
   14a50:	str	wzr, [sp, #68]
   14a54:	add	x4, sp, #0x48
   14a58:	add	x3, sp, #0x50
   14a5c:	add	x2, sp, #0x58
   14a60:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14a64:	add	x1, x1, #0xb60
   14a68:	bl	68e0 <PyArg_ParseTuple@plt>
   14a6c:	mov	x21, #0x0                   	// #0
   14a70:	cbz	w0, 14ad0 <PyFloat_FromString@plt+0xe040>
   14a74:	ldr	x19, [sp, #88]
   14a78:	ldr	x0, [x19, #8]
   14a7c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14a80:	add	x1, x1, #0x320
   14a84:	add	x1, x1, #0x1a0
   14a88:	cmp	x0, x1
   14a8c:	b.eq	14ae4 <PyFloat_FromString@plt+0xe054>  // b.none
   14a90:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14a94:	add	x1, x1, #0x320
   14a98:	add	x1, x1, #0x1a0
   14a9c:	bl	69c0 <PyType_IsSubtype@plt>
   14aa0:	cbnz	w0, 14ae4 <PyFloat_FromString@plt+0xe054>
   14aa4:	ldr	x0, [x19, #8]
   14aa8:	ldr	x1, [x0, #168]
   14aac:	tbnz	w1, #24, 14b68 <PyFloat_FromString@plt+0xe0d8>
   14ab0:	ldr	x2, [x0, #24]
   14ab4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14ab8:	add	x1, x1, #0x8a8
   14abc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14ac0:	ldr	x0, [x0, #3936]
   14ac4:	ldr	x0, [x0]
   14ac8:	bl	6a10 <PyErr_Format@plt>
   14acc:	mov	x21, #0x0                   	// #0
   14ad0:	mov	x0, x21
   14ad4:	ldp	x19, x20, [sp, #16]
   14ad8:	ldp	x21, x22, [sp, #32]
   14adc:	ldp	x29, x30, [sp], #96
   14ae0:	ret
   14ae4:	ldr	x0, [x19]
   14ae8:	add	x0, x0, #0x1
   14aec:	str	x0, [x19]
   14af0:	ldr	x22, [sp, #80]
   14af4:	ldr	x0, [x22, #8]
   14af8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14afc:	add	x1, x1, #0x320
   14b00:	add	x1, x1, #0x1a0
   14b04:	cmp	x0, x1
   14b08:	b.eq	14b90 <PyFloat_FromString@plt+0xe100>  // b.none
   14b0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14b10:	add	x1, x1, #0x320
   14b14:	add	x1, x1, #0x1a0
   14b18:	bl	69c0 <PyType_IsSubtype@plt>
   14b1c:	cbnz	w0, 14b90 <PyFloat_FromString@plt+0xe100>
   14b20:	ldr	x0, [x22, #8]
   14b24:	ldr	x1, [x0, #168]
   14b28:	tbnz	w1, #24, 14c24 <PyFloat_FromString@plt+0xe194>
   14b2c:	ldr	x2, [x0, #24]
   14b30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14b34:	add	x1, x1, #0x8a8
   14b38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14b3c:	ldr	x0, [x0, #3936]
   14b40:	ldr	x0, [x0]
   14b44:	bl	6a10 <PyErr_Format@plt>
   14b48:	ldr	x0, [x19]
   14b4c:	sub	x0, x0, #0x1
   14b50:	str	x0, [x19]
   14b54:	mov	x21, #0x0                   	// #0
   14b58:	cbnz	x0, 14ad0 <PyFloat_FromString@plt+0xe040>
   14b5c:	mov	x0, x19
   14b60:	bl	65d0 <_Py_Dealloc@plt>
   14b64:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14b68:	mov	x2, x20
   14b6c:	mov	x1, x19
   14b70:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14b74:	add	x0, x0, #0x320
   14b78:	add	x0, x0, #0x1a0
   14b7c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   14b80:	mov	x19, x0
   14b84:	cbnz	x0, 14af0 <PyFloat_FromString@plt+0xe060>
   14b88:	mov	x21, x0
   14b8c:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14b90:	str	x23, [sp, #48]
   14b94:	ldr	x0, [x22]
   14b98:	add	x0, x0, #0x1
   14b9c:	str	x0, [x22]
   14ba0:	ldr	x23, [sp, #72]
   14ba4:	ldr	x0, [x23, #8]
   14ba8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14bac:	add	x1, x1, #0x320
   14bb0:	add	x1, x1, #0x1a0
   14bb4:	cmp	x0, x1
   14bb8:	b.eq	14c4c <PyFloat_FromString@plt+0xe1bc>  // b.none
   14bbc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14bc0:	add	x1, x1, #0x320
   14bc4:	add	x1, x1, #0x1a0
   14bc8:	bl	69c0 <PyType_IsSubtype@plt>
   14bcc:	cbnz	w0, 14c4c <PyFloat_FromString@plt+0xe1bc>
   14bd0:	ldr	x0, [x23, #8]
   14bd4:	ldr	x1, [x0, #168]
   14bd8:	tbnz	w1, #24, 14cd4 <PyFloat_FromString@plt+0xe244>
   14bdc:	ldr	x2, [x0, #24]
   14be0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14be4:	add	x1, x1, #0x8a8
   14be8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14bec:	ldr	x0, [x0, #3936]
   14bf0:	ldr	x0, [x0]
   14bf4:	bl	6a10 <PyErr_Format@plt>
   14bf8:	ldr	x0, [x19]
   14bfc:	sub	x0, x0, #0x1
   14c00:	str	x0, [x19]
   14c04:	cbz	x0, 14cf8 <PyFloat_FromString@plt+0xe268>
   14c08:	ldr	x0, [x22]
   14c0c:	sub	x0, x0, #0x1
   14c10:	str	x0, [x22]
   14c14:	mov	x21, #0x0                   	// #0
   14c18:	cbz	x0, 14d04 <PyFloat_FromString@plt+0xe274>
   14c1c:	ldr	x23, [sp, #48]
   14c20:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14c24:	mov	x2, x20
   14c28:	mov	x1, x22
   14c2c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14c30:	add	x0, x0, #0x320
   14c34:	add	x0, x0, #0x1a0
   14c38:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   14c3c:	mov	x22, x0
   14c40:	cbz	x0, 14b48 <PyFloat_FromString@plt+0xe0b8>
   14c44:	str	x23, [sp, #48]
   14c48:	b	14ba0 <PyFloat_FromString@plt+0xe110>
   14c4c:	ldr	x0, [x23]
   14c50:	add	x0, x0, #0x1
   14c54:	str	x0, [x23]
   14c58:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14c5c:	add	x0, x0, #0x320
   14c60:	add	x0, x0, #0x1a0
   14c64:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   14c68:	mov	x21, x0
   14c6c:	cbz	x0, 14d14 <PyFloat_FromString@plt+0xe284>
   14c70:	add	x5, sp, #0x44
   14c74:	add	x4, x20, #0x10
   14c78:	add	x3, x23, #0x18
   14c7c:	add	x2, x22, #0x18
   14c80:	add	x1, x19, #0x18
   14c84:	add	x0, x0, #0x18
   14c88:	bl	2fa08 <PyInit__decimal@@Base+0x15868>
   14c8c:	ldr	x0, [x19]
   14c90:	sub	x0, x0, #0x1
   14c94:	str	x0, [x19]
   14c98:	cbz	x0, 14d74 <PyFloat_FromString@plt+0xe2e4>
   14c9c:	ldr	x0, [x22]
   14ca0:	sub	x0, x0, #0x1
   14ca4:	str	x0, [x22]
   14ca8:	cbz	x0, 14d80 <PyFloat_FromString@plt+0xe2f0>
   14cac:	ldr	x0, [x23]
   14cb0:	sub	x0, x0, #0x1
   14cb4:	str	x0, [x23]
   14cb8:	cbz	x0, 14d8c <PyFloat_FromString@plt+0xe2fc>
   14cbc:	ldr	w1, [sp, #68]
   14cc0:	mov	x0, x20
   14cc4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   14cc8:	cbnz	w0, 14d98 <PyFloat_FromString@plt+0xe308>
   14ccc:	ldr	x23, [sp, #48]
   14cd0:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14cd4:	mov	x2, x20
   14cd8:	mov	x1, x23
   14cdc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14ce0:	add	x0, x0, #0x320
   14ce4:	add	x0, x0, #0x1a0
   14ce8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   14cec:	mov	x23, x0
   14cf0:	cbnz	x0, 14c58 <PyFloat_FromString@plt+0xe1c8>
   14cf4:	b	14bf8 <PyFloat_FromString@plt+0xe168>
   14cf8:	mov	x0, x19
   14cfc:	bl	65d0 <_Py_Dealloc@plt>
   14d00:	b	14c08 <PyFloat_FromString@plt+0xe178>
   14d04:	mov	x0, x22
   14d08:	bl	65d0 <_Py_Dealloc@plt>
   14d0c:	ldr	x23, [sp, #48]
   14d10:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14d14:	ldr	x0, [x19]
   14d18:	sub	x0, x0, #0x1
   14d1c:	str	x0, [x19]
   14d20:	cbz	x0, 14d4c <PyFloat_FromString@plt+0xe2bc>
   14d24:	ldr	x0, [x22]
   14d28:	sub	x0, x0, #0x1
   14d2c:	str	x0, [x22]
   14d30:	cbz	x0, 14d58 <PyFloat_FromString@plt+0xe2c8>
   14d34:	ldr	x0, [x23]
   14d38:	sub	x0, x0, #0x1
   14d3c:	str	x0, [x23]
   14d40:	cbz	x0, 14d64 <PyFloat_FromString@plt+0xe2d4>
   14d44:	ldr	x23, [sp, #48]
   14d48:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14d4c:	mov	x0, x19
   14d50:	bl	65d0 <_Py_Dealloc@plt>
   14d54:	b	14d24 <PyFloat_FromString@plt+0xe294>
   14d58:	mov	x0, x22
   14d5c:	bl	65d0 <_Py_Dealloc@plt>
   14d60:	b	14d34 <PyFloat_FromString@plt+0xe2a4>
   14d64:	mov	x0, x23
   14d68:	bl	65d0 <_Py_Dealloc@plt>
   14d6c:	ldr	x23, [sp, #48]
   14d70:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14d74:	mov	x0, x19
   14d78:	bl	65d0 <_Py_Dealloc@plt>
   14d7c:	b	14c9c <PyFloat_FromString@plt+0xe20c>
   14d80:	mov	x0, x22
   14d84:	bl	65d0 <_Py_Dealloc@plt>
   14d88:	b	14cac <PyFloat_FromString@plt+0xe21c>
   14d8c:	mov	x0, x23
   14d90:	bl	65d0 <_Py_Dealloc@plt>
   14d94:	b	14cbc <PyFloat_FromString@plt+0xe22c>
   14d98:	ldr	x0, [x21]
   14d9c:	sub	x0, x0, #0x1
   14da0:	str	x0, [x21]
   14da4:	cbz	x0, 14db4 <PyFloat_FromString@plt+0xe324>
   14da8:	mov	x21, #0x0                   	// #0
   14dac:	ldr	x23, [sp, #48]
   14db0:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14db4:	mov	x0, x21
   14db8:	bl	65d0 <_Py_Dealloc@plt>
   14dbc:	mov	x21, #0x0                   	// #0
   14dc0:	ldr	x23, [sp, #48]
   14dc4:	b	14ad0 <PyFloat_FromString@plt+0xe040>
   14dc8:	stp	x29, x30, [sp, #-96]!
   14dcc:	mov	x29, sp
   14dd0:	stp	x19, x20, [sp, #16]
   14dd4:	mov	x19, x0
   14dd8:	mov	x0, x1
   14ddc:	mov	x1, x2
   14de0:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   14de4:	ldr	x2, [x2, #4008]
   14de8:	str	x2, [sp, #72]
   14dec:	str	wzr, [sp, #68]
   14df0:	add	x6, sp, #0x48
   14df4:	add	x5, sp, #0x50
   14df8:	add	x4, sp, #0x58
   14dfc:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   14e00:	add	x3, x3, #0x9a0
   14e04:	add	x3, x3, #0x2f8
   14e08:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   14e0c:	add	x2, x2, #0xb68
   14e10:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14e14:	cbz	w0, 15228 <PyFloat_FromString@plt+0xe798>
   14e18:	ldr	x1, [sp, #72]
   14e1c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14e20:	ldr	x0, [x0, #4008]
   14e24:	cmp	x1, x0
   14e28:	b.eq	14ebc <PyFloat_FromString@plt+0xe42c>  // b.none
   14e2c:	ldr	x0, [x1, #8]
   14e30:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14e34:	add	x1, x1, #0x320
   14e38:	cmp	x0, x1
   14e3c:	b.eq	14e50 <PyFloat_FromString@plt+0xe3c0>  // b.none
   14e40:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14e44:	add	x1, x1, #0x320
   14e48:	bl	69c0 <PyType_IsSubtype@plt>
   14e4c:	cbz	w0, 14f10 <PyFloat_FromString@plt+0xe480>
   14e50:	ldr	x0, [x19, #8]
   14e54:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14e58:	add	x1, x1, #0x320
   14e5c:	add	x1, x1, #0x1a0
   14e60:	cmp	x0, x1
   14e64:	b.eq	14f30 <PyFloat_FromString@plt+0xe4a0>  // b.none
   14e68:	ldr	x20, [sp, #72]
   14e6c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14e70:	add	x1, x1, #0x320
   14e74:	add	x1, x1, #0x1a0
   14e78:	bl	69c0 <PyType_IsSubtype@plt>
   14e7c:	cbnz	w0, 14f30 <PyFloat_FromString@plt+0xe4a0>
   14e80:	ldr	x0, [x19, #8]
   14e84:	ldr	x1, [x0, #168]
   14e88:	tbnz	w1, #24, 14fb8 <PyFloat_FromString@plt+0xe528>
   14e8c:	ldr	x2, [x0, #24]
   14e90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14e94:	add	x1, x1, #0x8a8
   14e98:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14e9c:	ldr	x0, [x0, #3936]
   14ea0:	ldr	x0, [x0]
   14ea4:	bl	6a10 <PyErr_Format@plt>
   14ea8:	mov	x20, #0x0                   	// #0
   14eac:	mov	x0, x20
   14eb0:	ldp	x19, x20, [sp, #16]
   14eb4:	ldp	x29, x30, [sp], #96
   14eb8:	ret
   14ebc:	add	x2, sp, #0x38
   14ec0:	mov	x1, #0x0                   	// #0
   14ec4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   14ec8:	ldr	x0, [x0, #1816]
   14ecc:	bl	6740 <PyContextVar_Get@plt>
   14ed0:	tbnz	w0, #31, 15238 <PyFloat_FromString@plt+0xe7a8>
   14ed4:	ldr	x20, [sp, #56]
   14ed8:	cbz	x20, 14efc <PyFloat_FromString@plt+0xe46c>
   14edc:	str	x20, [sp, #72]
   14ee0:	ldr	x0, [x20]
   14ee4:	sub	x0, x0, #0x1
   14ee8:	str	x0, [x20]
   14eec:	cbnz	x0, 14e50 <PyFloat_FromString@plt+0xe3c0>
   14ef0:	mov	x0, x20
   14ef4:	bl	65d0 <_Py_Dealloc@plt>
   14ef8:	b	14e50 <PyFloat_FromString@plt+0xe3c0>
   14efc:	bl	7abc <PyFloat_FromString@plt+0x102c>
   14f00:	mov	x20, x0
   14f04:	str	x0, [sp, #72]
   14f08:	cbnz	x0, 14ee0 <PyFloat_FromString@plt+0xe450>
   14f0c:	b	14eac <PyFloat_FromString@plt+0xe41c>
   14f10:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14f14:	add	x1, x1, #0x928
   14f18:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14f1c:	ldr	x0, [x0, #3936]
   14f20:	ldr	x0, [x0]
   14f24:	bl	6650 <PyErr_SetString@plt>
   14f28:	mov	x20, #0x0                   	// #0
   14f2c:	b	14eac <PyFloat_FromString@plt+0xe41c>
   14f30:	stp	x21, x22, [sp, #32]
   14f34:	ldr	x0, [x19]
   14f38:	add	x0, x0, #0x1
   14f3c:	str	x0, [x19]
   14f40:	ldr	x21, [sp, #88]
   14f44:	ldr	x0, [x21, #8]
   14f48:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14f4c:	add	x1, x1, #0x320
   14f50:	add	x1, x1, #0x1a0
   14f54:	cmp	x0, x1
   14f58:	b.eq	14fe0 <PyFloat_FromString@plt+0xe550>  // b.none
   14f5c:	ldr	x20, [sp, #72]
   14f60:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14f64:	add	x1, x1, #0x320
   14f68:	add	x1, x1, #0x1a0
   14f6c:	bl	69c0 <PyType_IsSubtype@plt>
   14f70:	cbnz	w0, 14fe0 <PyFloat_FromString@plt+0xe550>
   14f74:	ldr	x0, [x21, #8]
   14f78:	ldr	x1, [x0, #168]
   14f7c:	tbnz	w1, #24, 15074 <PyFloat_FromString@plt+0xe5e4>
   14f80:	ldr	x2, [x0, #24]
   14f84:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   14f88:	add	x1, x1, #0x8a8
   14f8c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   14f90:	ldr	x0, [x0, #3936]
   14f94:	ldr	x0, [x0]
   14f98:	bl	6a10 <PyErr_Format@plt>
   14f9c:	ldr	x0, [x19]
   14fa0:	sub	x0, x0, #0x1
   14fa4:	str	x0, [x19]
   14fa8:	mov	x20, #0x0                   	// #0
   14fac:	cbz	x0, 15098 <PyFloat_FromString@plt+0xe608>
   14fb0:	ldp	x21, x22, [sp, #32]
   14fb4:	b	14eac <PyFloat_FromString@plt+0xe41c>
   14fb8:	mov	x2, x20
   14fbc:	mov	x1, x19
   14fc0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   14fc4:	add	x0, x0, #0x320
   14fc8:	add	x0, x0, #0x1a0
   14fcc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   14fd0:	mov	x19, x0
   14fd4:	cbz	x0, 15230 <PyFloat_FromString@plt+0xe7a0>
   14fd8:	stp	x21, x22, [sp, #32]
   14fdc:	b	14f40 <PyFloat_FromString@plt+0xe4b0>
   14fe0:	ldr	x0, [x21]
   14fe4:	add	x0, x0, #0x1
   14fe8:	str	x0, [x21]
   14fec:	ldr	x22, [sp, #80]
   14ff0:	ldr	x0, [x22, #8]
   14ff4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   14ff8:	add	x1, x1, #0x320
   14ffc:	add	x1, x1, #0x1a0
   15000:	cmp	x0, x1
   15004:	b.eq	150a8 <PyFloat_FromString@plt+0xe618>  // b.none
   15008:	ldr	x20, [sp, #72]
   1500c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15010:	add	x1, x1, #0x320
   15014:	add	x1, x1, #0x1a0
   15018:	bl	69c0 <PyType_IsSubtype@plt>
   1501c:	cbnz	w0, 150a8 <PyFloat_FromString@plt+0xe618>
   15020:	ldr	x0, [x22, #8]
   15024:	ldr	x1, [x0, #168]
   15028:	tbnz	w1, #24, 15134 <PyFloat_FromString@plt+0xe6a4>
   1502c:	ldr	x2, [x0, #24]
   15030:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15034:	add	x1, x1, #0x8a8
   15038:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1503c:	ldr	x0, [x0, #3936]
   15040:	ldr	x0, [x0]
   15044:	bl	6a10 <PyErr_Format@plt>
   15048:	ldr	x0, [x19]
   1504c:	sub	x0, x0, #0x1
   15050:	str	x0, [x19]
   15054:	cbz	x0, 15158 <PyFloat_FromString@plt+0xe6c8>
   15058:	ldr	x0, [x21]
   1505c:	sub	x0, x0, #0x1
   15060:	str	x0, [x21]
   15064:	mov	x20, #0x0                   	// #0
   15068:	cbz	x0, 15164 <PyFloat_FromString@plt+0xe6d4>
   1506c:	ldp	x21, x22, [sp, #32]
   15070:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15074:	mov	x2, x20
   15078:	mov	x1, x21
   1507c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15080:	add	x0, x0, #0x320
   15084:	add	x0, x0, #0x1a0
   15088:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1508c:	mov	x21, x0
   15090:	cbnz	x0, 14fec <PyFloat_FromString@plt+0xe55c>
   15094:	b	14f9c <PyFloat_FromString@plt+0xe50c>
   15098:	mov	x0, x19
   1509c:	bl	65d0 <_Py_Dealloc@plt>
   150a0:	ldp	x21, x22, [sp, #32]
   150a4:	b	14eac <PyFloat_FromString@plt+0xe41c>
   150a8:	ldr	x0, [x22]
   150ac:	add	x0, x0, #0x1
   150b0:	str	x0, [x22]
   150b4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   150b8:	add	x0, x0, #0x320
   150bc:	add	x0, x0, #0x1a0
   150c0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   150c4:	mov	x20, x0
   150c8:	cbz	x0, 15174 <PyFloat_FromString@plt+0xe6e4>
   150cc:	add	x5, sp, #0x44
   150d0:	ldr	x4, [sp, #72]
   150d4:	add	x4, x4, #0x10
   150d8:	add	x3, x22, #0x18
   150dc:	add	x2, x21, #0x18
   150e0:	add	x1, x19, #0x18
   150e4:	add	x0, x0, #0x18
   150e8:	bl	2fa08 <PyInit__decimal@@Base+0x15868>
   150ec:	ldr	x0, [x19]
   150f0:	sub	x0, x0, #0x1
   150f4:	str	x0, [x19]
   150f8:	cbz	x0, 151d4 <PyFloat_FromString@plt+0xe744>
   150fc:	ldr	x0, [x21]
   15100:	sub	x0, x0, #0x1
   15104:	str	x0, [x21]
   15108:	cbz	x0, 151e0 <PyFloat_FromString@plt+0xe750>
   1510c:	ldr	x0, [x22]
   15110:	sub	x0, x0, #0x1
   15114:	str	x0, [x22]
   15118:	cbz	x0, 151ec <PyFloat_FromString@plt+0xe75c>
   1511c:	ldr	w1, [sp, #68]
   15120:	ldr	x0, [sp, #72]
   15124:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   15128:	cbnz	w0, 151f8 <PyFloat_FromString@plt+0xe768>
   1512c:	ldp	x21, x22, [sp, #32]
   15130:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15134:	mov	x2, x20
   15138:	mov	x1, x22
   1513c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15140:	add	x0, x0, #0x320
   15144:	add	x0, x0, #0x1a0
   15148:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1514c:	mov	x22, x0
   15150:	cbnz	x0, 150b4 <PyFloat_FromString@plt+0xe624>
   15154:	b	15048 <PyFloat_FromString@plt+0xe5b8>
   15158:	mov	x0, x19
   1515c:	bl	65d0 <_Py_Dealloc@plt>
   15160:	b	15058 <PyFloat_FromString@plt+0xe5c8>
   15164:	mov	x0, x21
   15168:	bl	65d0 <_Py_Dealloc@plt>
   1516c:	ldp	x21, x22, [sp, #32]
   15170:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15174:	ldr	x0, [x19]
   15178:	sub	x0, x0, #0x1
   1517c:	str	x0, [x19]
   15180:	cbz	x0, 151ac <PyFloat_FromString@plt+0xe71c>
   15184:	ldr	x0, [x21]
   15188:	sub	x0, x0, #0x1
   1518c:	str	x0, [x21]
   15190:	cbz	x0, 151b8 <PyFloat_FromString@plt+0xe728>
   15194:	ldr	x0, [x22]
   15198:	sub	x0, x0, #0x1
   1519c:	str	x0, [x22]
   151a0:	cbz	x0, 151c4 <PyFloat_FromString@plt+0xe734>
   151a4:	ldp	x21, x22, [sp, #32]
   151a8:	b	14eac <PyFloat_FromString@plt+0xe41c>
   151ac:	mov	x0, x19
   151b0:	bl	65d0 <_Py_Dealloc@plt>
   151b4:	b	15184 <PyFloat_FromString@plt+0xe6f4>
   151b8:	mov	x0, x21
   151bc:	bl	65d0 <_Py_Dealloc@plt>
   151c0:	b	15194 <PyFloat_FromString@plt+0xe704>
   151c4:	mov	x0, x22
   151c8:	bl	65d0 <_Py_Dealloc@plt>
   151cc:	ldp	x21, x22, [sp, #32]
   151d0:	b	14eac <PyFloat_FromString@plt+0xe41c>
   151d4:	mov	x0, x19
   151d8:	bl	65d0 <_Py_Dealloc@plt>
   151dc:	b	150fc <PyFloat_FromString@plt+0xe66c>
   151e0:	mov	x0, x21
   151e4:	bl	65d0 <_Py_Dealloc@plt>
   151e8:	b	1510c <PyFloat_FromString@plt+0xe67c>
   151ec:	mov	x0, x22
   151f0:	bl	65d0 <_Py_Dealloc@plt>
   151f4:	b	1511c <PyFloat_FromString@plt+0xe68c>
   151f8:	ldr	x0, [x20]
   151fc:	sub	x0, x0, #0x1
   15200:	str	x0, [x20]
   15204:	cbz	x0, 15214 <PyFloat_FromString@plt+0xe784>
   15208:	mov	x20, #0x0                   	// #0
   1520c:	ldp	x21, x22, [sp, #32]
   15210:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15214:	mov	x0, x20
   15218:	bl	65d0 <_Py_Dealloc@plt>
   1521c:	mov	x20, #0x0                   	// #0
   15220:	ldp	x21, x22, [sp, #32]
   15224:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15228:	mov	x20, #0x0                   	// #0
   1522c:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15230:	mov	x20, x0
   15234:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15238:	mov	x20, #0x0                   	// #0
   1523c:	b	14eac <PyFloat_FromString@plt+0xe41c>
   15240:	stp	x29, x30, [sp, #-80]!
   15244:	mov	x29, sp
   15248:	stp	x19, x20, [sp, #16]
   1524c:	mov	x19, x0
   15250:	mov	x0, x1
   15254:	mov	x1, x2
   15258:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1525c:	ldr	x2, [x2, #4008]
   15260:	str	x2, [sp, #64]
   15264:	add	x5, sp, #0x40
   15268:	add	x4, sp, #0x48
   1526c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   15270:	add	x3, x3, #0x9a0
   15274:	add	x3, x3, #0x318
   15278:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1527c:	add	x2, x2, #0xa08
   15280:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15284:	cbz	w0, 15510 <PyFloat_FromString@plt+0xea80>
   15288:	ldr	x1, [sp, #64]
   1528c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15290:	ldr	x0, [x0, #4008]
   15294:	cmp	x1, x0
   15298:	b.eq	15320 <PyFloat_FromString@plt+0xe890>  // b.none
   1529c:	ldr	x0, [x1, #8]
   152a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   152a4:	add	x1, x1, #0x320
   152a8:	cmp	x0, x1
   152ac:	b.eq	152c0 <PyFloat_FromString@plt+0xe830>  // b.none
   152b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   152b4:	add	x1, x1, #0x320
   152b8:	bl	69c0 <PyType_IsSubtype@plt>
   152bc:	cbz	w0, 15374 <PyFloat_FromString@plt+0xe8e4>
   152c0:	ldr	x0, [x19, #8]
   152c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   152c8:	add	x1, x1, #0x320
   152cc:	add	x1, x1, #0x1a0
   152d0:	cmp	x0, x1
   152d4:	b.eq	15394 <PyFloat_FromString@plt+0xe904>  // b.none
   152d8:	ldr	x20, [sp, #64]
   152dc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   152e0:	add	x1, x1, #0x320
   152e4:	add	x1, x1, #0x1a0
   152e8:	bl	69c0 <PyType_IsSubtype@plt>
   152ec:	cbnz	w0, 15394 <PyFloat_FromString@plt+0xe904>
   152f0:	ldr	x0, [x19, #8]
   152f4:	ldr	x1, [x0, #168]
   152f8:	tbnz	w1, #24, 1541c <PyFloat_FromString@plt+0xe98c>
   152fc:	ldr	x2, [x0, #24]
   15300:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15304:	add	x1, x1, #0x8a8
   15308:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1530c:	ldr	x0, [x0, #3936]
   15310:	ldr	x0, [x0]
   15314:	bl	6a10 <PyErr_Format@plt>
   15318:	mov	x20, #0x0                   	// #0
   1531c:	b	15498 <PyFloat_FromString@plt+0xea08>
   15320:	add	x2, sp, #0x38
   15324:	mov	x1, #0x0                   	// #0
   15328:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1532c:	ldr	x0, [x0, #1816]
   15330:	bl	6740 <PyContextVar_Get@plt>
   15334:	tbnz	w0, #31, 15520 <PyFloat_FromString@plt+0xea90>
   15338:	ldr	x20, [sp, #56]
   1533c:	cbz	x20, 15360 <PyFloat_FromString@plt+0xe8d0>
   15340:	str	x20, [sp, #64]
   15344:	ldr	x0, [x20]
   15348:	sub	x0, x0, #0x1
   1534c:	str	x0, [x20]
   15350:	cbnz	x0, 152c0 <PyFloat_FromString@plt+0xe830>
   15354:	mov	x0, x20
   15358:	bl	65d0 <_Py_Dealloc@plt>
   1535c:	b	152c0 <PyFloat_FromString@plt+0xe830>
   15360:	bl	7abc <PyFloat_FromString@plt+0x102c>
   15364:	mov	x20, x0
   15368:	str	x0, [sp, #64]
   1536c:	cbnz	x0, 15344 <PyFloat_FromString@plt+0xe8b4>
   15370:	b	15498 <PyFloat_FromString@plt+0xea08>
   15374:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15378:	add	x1, x1, #0x928
   1537c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15380:	ldr	x0, [x0, #3936]
   15384:	ldr	x0, [x0]
   15388:	bl	6650 <PyErr_SetString@plt>
   1538c:	mov	x20, #0x0                   	// #0
   15390:	b	15498 <PyFloat_FromString@plt+0xea08>
   15394:	str	x21, [sp, #32]
   15398:	ldr	x0, [x19]
   1539c:	add	x0, x0, #0x1
   153a0:	str	x0, [x19]
   153a4:	ldr	x21, [sp, #72]
   153a8:	ldr	x0, [x21, #8]
   153ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   153b0:	add	x1, x1, #0x320
   153b4:	add	x1, x1, #0x1a0
   153b8:	cmp	x0, x1
   153bc:	b.eq	15444 <PyFloat_FromString@plt+0xe9b4>  // b.none
   153c0:	ldr	x20, [sp, #64]
   153c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   153c8:	add	x1, x1, #0x320
   153cc:	add	x1, x1, #0x1a0
   153d0:	bl	69c0 <PyType_IsSubtype@plt>
   153d4:	cbnz	w0, 15444 <PyFloat_FromString@plt+0xe9b4>
   153d8:	ldr	x0, [x21, #8]
   153dc:	ldr	x1, [x0, #168]
   153e0:	tbnz	w1, #24, 154a8 <PyFloat_FromString@plt+0xea18>
   153e4:	ldr	x2, [x0, #24]
   153e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   153ec:	add	x1, x1, #0x8a8
   153f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   153f4:	ldr	x0, [x0, #3936]
   153f8:	ldr	x0, [x0]
   153fc:	bl	6a10 <PyErr_Format@plt>
   15400:	ldr	x0, [x19]
   15404:	sub	x0, x0, #0x1
   15408:	str	x0, [x19]
   1540c:	mov	x20, #0x0                   	// #0
   15410:	cbz	x0, 154cc <PyFloat_FromString@plt+0xea3c>
   15414:	ldr	x21, [sp, #32]
   15418:	b	15498 <PyFloat_FromString@plt+0xea08>
   1541c:	mov	x2, x20
   15420:	mov	x1, x19
   15424:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15428:	add	x0, x0, #0x320
   1542c:	add	x0, x0, #0x1a0
   15430:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15434:	mov	x19, x0
   15438:	cbz	x0, 15518 <PyFloat_FromString@plt+0xea88>
   1543c:	str	x21, [sp, #32]
   15440:	b	153a4 <PyFloat_FromString@plt+0xe914>
   15444:	ldr	x0, [x21]
   15448:	add	x0, x0, #0x1
   1544c:	str	x0, [x21]
   15450:	add	x1, x21, #0x18
   15454:	add	x0, x19, #0x18
   15458:	bl	38150 <PyInit__decimal@@Base+0x1dfb0>
   1545c:	cbz	w0, 154dc <PyFloat_FromString@plt+0xea4c>
   15460:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   15464:	ldr	x20, [x20, #4024]
   15468:	ldr	x0, [x20]
   1546c:	add	x0, x0, #0x1
   15470:	str	x0, [x20]
   15474:	ldr	x0, [x19]
   15478:	sub	x0, x0, #0x1
   1547c:	str	x0, [x19]
   15480:	cbz	x0, 154f4 <PyFloat_FromString@plt+0xea64>
   15484:	ldr	x0, [x21]
   15488:	sub	x0, x0, #0x1
   1548c:	str	x0, [x21]
   15490:	cbz	x0, 15500 <PyFloat_FromString@plt+0xea70>
   15494:	ldr	x21, [sp, #32]
   15498:	mov	x0, x20
   1549c:	ldp	x19, x20, [sp, #16]
   154a0:	ldp	x29, x30, [sp], #80
   154a4:	ret
   154a8:	mov	x2, x20
   154ac:	mov	x1, x21
   154b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   154b4:	add	x0, x0, #0x320
   154b8:	add	x0, x0, #0x1a0
   154bc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   154c0:	mov	x21, x0
   154c4:	cbnz	x0, 15450 <PyFloat_FromString@plt+0xe9c0>
   154c8:	b	15400 <PyFloat_FromString@plt+0xe970>
   154cc:	mov	x0, x19
   154d0:	bl	65d0 <_Py_Dealloc@plt>
   154d4:	ldr	x21, [sp, #32]
   154d8:	b	15498 <PyFloat_FromString@plt+0xea08>
   154dc:	adrp	x20, 5b000 <PyInit__decimal@@Base+0x40e60>
   154e0:	ldr	x20, [x20, #3976]
   154e4:	ldr	x0, [x20]
   154e8:	add	x0, x0, #0x1
   154ec:	str	x0, [x20]
   154f0:	b	15474 <PyFloat_FromString@plt+0xe9e4>
   154f4:	mov	x0, x19
   154f8:	bl	65d0 <_Py_Dealloc@plt>
   154fc:	b	15484 <PyFloat_FromString@plt+0xe9f4>
   15500:	mov	x0, x21
   15504:	bl	65d0 <_Py_Dealloc@plt>
   15508:	ldr	x21, [sp, #32]
   1550c:	b	15498 <PyFloat_FromString@plt+0xea08>
   15510:	mov	x20, #0x0                   	// #0
   15514:	b	15498 <PyFloat_FromString@plt+0xea08>
   15518:	mov	x20, x0
   1551c:	b	15498 <PyFloat_FromString@plt+0xea08>
   15520:	mov	x20, #0x0                   	// #0
   15524:	b	15498 <PyFloat_FromString@plt+0xea08>
   15528:	stp	x29, x30, [sp, #-80]!
   1552c:	mov	x29, sp
   15530:	stp	x19, x20, [sp, #16]
   15534:	mov	x19, x0
   15538:	mov	x0, x1
   1553c:	mov	x1, x2
   15540:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   15544:	ldr	x2, [x2, #4008]
   15548:	str	x2, [sp, #72]
   1554c:	add	x5, sp, #0x48
   15550:	add	x4, sp, #0x40
   15554:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   15558:	add	x3, x3, #0x9a0
   1555c:	add	x3, x3, #0x330
   15560:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   15564:	add	x2, x2, #0xa08
   15568:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1556c:	cbz	w0, 15828 <PyFloat_FromString@plt+0xed98>
   15570:	ldr	x1, [sp, #72]
   15574:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15578:	ldr	x0, [x0, #4008]
   1557c:	cmp	x1, x0
   15580:	b.eq	15614 <PyFloat_FromString@plt+0xeb84>  // b.none
   15584:	ldr	x0, [x1, #8]
   15588:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1558c:	add	x1, x1, #0x320
   15590:	cmp	x0, x1
   15594:	b.eq	155a8 <PyFloat_FromString@plt+0xeb18>  // b.none
   15598:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1559c:	add	x1, x1, #0x320
   155a0:	bl	69c0 <PyType_IsSubtype@plt>
   155a4:	cbz	w0, 15668 <PyFloat_FromString@plt+0xebd8>
   155a8:	ldr	x0, [x19, #8]
   155ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   155b0:	add	x1, x1, #0x320
   155b4:	add	x1, x1, #0x1a0
   155b8:	cmp	x0, x1
   155bc:	b.eq	15688 <PyFloat_FromString@plt+0xebf8>  // b.none
   155c0:	ldr	x20, [sp, #72]
   155c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   155c8:	add	x1, x1, #0x320
   155cc:	add	x1, x1, #0x1a0
   155d0:	bl	69c0 <PyType_IsSubtype@plt>
   155d4:	cbnz	w0, 15688 <PyFloat_FromString@plt+0xebf8>
   155d8:	ldr	x0, [x19, #8]
   155dc:	ldr	x1, [x0, #168]
   155e0:	tbnz	w1, #24, 15710 <PyFloat_FromString@plt+0xec80>
   155e4:	ldr	x2, [x0, #24]
   155e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   155ec:	add	x1, x1, #0x8a8
   155f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   155f4:	ldr	x0, [x0, #3936]
   155f8:	ldr	x0, [x0]
   155fc:	bl	6a10 <PyErr_Format@plt>
   15600:	mov	x20, #0x0                   	// #0
   15604:	mov	x0, x20
   15608:	ldp	x19, x20, [sp, #16]
   1560c:	ldp	x29, x30, [sp], #80
   15610:	ret
   15614:	add	x2, sp, #0x38
   15618:	mov	x1, #0x0                   	// #0
   1561c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   15620:	ldr	x0, [x0, #1816]
   15624:	bl	6740 <PyContextVar_Get@plt>
   15628:	tbnz	w0, #31, 15838 <PyFloat_FromString@plt+0xeda8>
   1562c:	ldr	x20, [sp, #56]
   15630:	cbz	x20, 15654 <PyFloat_FromString@plt+0xebc4>
   15634:	str	x20, [sp, #72]
   15638:	ldr	x0, [x20]
   1563c:	sub	x0, x0, #0x1
   15640:	str	x0, [x20]
   15644:	cbnz	x0, 155a8 <PyFloat_FromString@plt+0xeb18>
   15648:	mov	x0, x20
   1564c:	bl	65d0 <_Py_Dealloc@plt>
   15650:	b	155a8 <PyFloat_FromString@plt+0xeb18>
   15654:	bl	7abc <PyFloat_FromString@plt+0x102c>
   15658:	mov	x20, x0
   1565c:	str	x0, [sp, #72]
   15660:	cbnz	x0, 15638 <PyFloat_FromString@plt+0xeba8>
   15664:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15668:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1566c:	add	x1, x1, #0x928
   15670:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15674:	ldr	x0, [x0, #3936]
   15678:	ldr	x0, [x0]
   1567c:	bl	6650 <PyErr_SetString@plt>
   15680:	mov	x20, #0x0                   	// #0
   15684:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15688:	str	x21, [sp, #32]
   1568c:	ldr	x0, [x19]
   15690:	add	x0, x0, #0x1
   15694:	str	x0, [x19]
   15698:	ldr	x21, [sp, #64]
   1569c:	ldr	x0, [x21, #8]
   156a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   156a4:	add	x1, x1, #0x320
   156a8:	add	x1, x1, #0x1a0
   156ac:	cmp	x0, x1
   156b0:	b.eq	15738 <PyFloat_FromString@plt+0xeca8>  // b.none
   156b4:	ldr	x20, [sp, #72]
   156b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   156bc:	add	x1, x1, #0x320
   156c0:	add	x1, x1, #0x1a0
   156c4:	bl	69c0 <PyType_IsSubtype@plt>
   156c8:	cbnz	w0, 15738 <PyFloat_FromString@plt+0xeca8>
   156cc:	ldr	x0, [x21, #8]
   156d0:	ldr	x1, [x0, #168]
   156d4:	tbnz	w1, #24, 15794 <PyFloat_FromString@plt+0xed04>
   156d8:	ldr	x2, [x0, #24]
   156dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   156e0:	add	x1, x1, #0x8a8
   156e4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   156e8:	ldr	x0, [x0, #3936]
   156ec:	ldr	x0, [x0]
   156f0:	bl	6a10 <PyErr_Format@plt>
   156f4:	ldr	x0, [x19]
   156f8:	sub	x0, x0, #0x1
   156fc:	str	x0, [x19]
   15700:	mov	x20, #0x0                   	// #0
   15704:	cbz	x0, 157b8 <PyFloat_FromString@plt+0xed28>
   15708:	ldr	x21, [sp, #32]
   1570c:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15710:	mov	x2, x20
   15714:	mov	x1, x19
   15718:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1571c:	add	x0, x0, #0x320
   15720:	add	x0, x0, #0x1a0
   15724:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15728:	mov	x19, x0
   1572c:	cbz	x0, 15830 <PyFloat_FromString@plt+0xeda0>
   15730:	str	x21, [sp, #32]
   15734:	b	15698 <PyFloat_FromString@plt+0xec08>
   15738:	ldr	x0, [x21]
   1573c:	add	x0, x0, #0x1
   15740:	str	x0, [x21]
   15744:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15748:	add	x0, x0, #0x320
   1574c:	add	x0, x0, #0x1a0
   15750:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   15754:	mov	x20, x0
   15758:	cbz	x0, 157c8 <PyFloat_FromString@plt+0xed38>
   1575c:	add	x2, x21, #0x18
   15760:	add	x1, x19, #0x18
   15764:	add	x0, x0, #0x18
   15768:	bl	2ab04 <PyInit__decimal@@Base+0x10964>
   1576c:	ldr	x0, [x19]
   15770:	sub	x0, x0, #0x1
   15774:	str	x0, [x19]
   15778:	cbz	x0, 1580c <PyFloat_FromString@plt+0xed7c>
   1577c:	ldr	x0, [x21]
   15780:	sub	x0, x0, #0x1
   15784:	str	x0, [x21]
   15788:	cbz	x0, 15818 <PyFloat_FromString@plt+0xed88>
   1578c:	ldr	x21, [sp, #32]
   15790:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15794:	mov	x2, x20
   15798:	mov	x1, x21
   1579c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   157a0:	add	x0, x0, #0x320
   157a4:	add	x0, x0, #0x1a0
   157a8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   157ac:	mov	x21, x0
   157b0:	cbnz	x0, 15744 <PyFloat_FromString@plt+0xecb4>
   157b4:	b	156f4 <PyFloat_FromString@plt+0xec64>
   157b8:	mov	x0, x19
   157bc:	bl	65d0 <_Py_Dealloc@plt>
   157c0:	ldr	x21, [sp, #32]
   157c4:	b	15604 <PyFloat_FromString@plt+0xeb74>
   157c8:	ldr	x0, [x19]
   157cc:	sub	x0, x0, #0x1
   157d0:	str	x0, [x19]
   157d4:	cbz	x0, 157f0 <PyFloat_FromString@plt+0xed60>
   157d8:	ldr	x0, [x21]
   157dc:	sub	x0, x0, #0x1
   157e0:	str	x0, [x21]
   157e4:	cbz	x0, 157fc <PyFloat_FromString@plt+0xed6c>
   157e8:	ldr	x21, [sp, #32]
   157ec:	b	15604 <PyFloat_FromString@plt+0xeb74>
   157f0:	mov	x0, x19
   157f4:	bl	65d0 <_Py_Dealloc@plt>
   157f8:	b	157d8 <PyFloat_FromString@plt+0xed48>
   157fc:	mov	x0, x21
   15800:	bl	65d0 <_Py_Dealloc@plt>
   15804:	ldr	x21, [sp, #32]
   15808:	b	15604 <PyFloat_FromString@plt+0xeb74>
   1580c:	mov	x0, x19
   15810:	bl	65d0 <_Py_Dealloc@plt>
   15814:	b	1577c <PyFloat_FromString@plt+0xecec>
   15818:	mov	x0, x21
   1581c:	bl	65d0 <_Py_Dealloc@plt>
   15820:	ldr	x21, [sp, #32]
   15824:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15828:	mov	x20, #0x0                   	// #0
   1582c:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15830:	mov	x20, x0
   15834:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15838:	mov	x20, #0x0                   	// #0
   1583c:	b	15604 <PyFloat_FromString@plt+0xeb74>
   15840:	stp	x29, x30, [sp, #-80]!
   15844:	mov	x29, sp
   15848:	stp	x19, x20, [sp, #16]
   1584c:	mov	x19, x0
   15850:	mov	x0, x1
   15854:	mov	x1, x2
   15858:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1585c:	ldr	x2, [x2, #4008]
   15860:	str	x2, [sp, #72]
   15864:	add	x5, sp, #0x48
   15868:	add	x4, sp, #0x40
   1586c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   15870:	add	x3, x3, #0x9a0
   15874:	add	x3, x3, #0x348
   15878:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1587c:	add	x2, x2, #0xa08
   15880:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15884:	cbz	w0, 15b40 <PyFloat_FromString@plt+0xf0b0>
   15888:	ldr	x1, [sp, #72]
   1588c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15890:	ldr	x0, [x0, #4008]
   15894:	cmp	x1, x0
   15898:	b.eq	1592c <PyFloat_FromString@plt+0xee9c>  // b.none
   1589c:	ldr	x0, [x1, #8]
   158a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   158a4:	add	x1, x1, #0x320
   158a8:	cmp	x0, x1
   158ac:	b.eq	158c0 <PyFloat_FromString@plt+0xee30>  // b.none
   158b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   158b4:	add	x1, x1, #0x320
   158b8:	bl	69c0 <PyType_IsSubtype@plt>
   158bc:	cbz	w0, 15980 <PyFloat_FromString@plt+0xeef0>
   158c0:	ldr	x0, [x19, #8]
   158c4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   158c8:	add	x1, x1, #0x320
   158cc:	add	x1, x1, #0x1a0
   158d0:	cmp	x0, x1
   158d4:	b.eq	159a0 <PyFloat_FromString@plt+0xef10>  // b.none
   158d8:	ldr	x20, [sp, #72]
   158dc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   158e0:	add	x1, x1, #0x320
   158e4:	add	x1, x1, #0x1a0
   158e8:	bl	69c0 <PyType_IsSubtype@plt>
   158ec:	cbnz	w0, 159a0 <PyFloat_FromString@plt+0xef10>
   158f0:	ldr	x0, [x19, #8]
   158f4:	ldr	x1, [x0, #168]
   158f8:	tbnz	w1, #24, 15a28 <PyFloat_FromString@plt+0xef98>
   158fc:	ldr	x2, [x0, #24]
   15900:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15904:	add	x1, x1, #0x8a8
   15908:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1590c:	ldr	x0, [x0, #3936]
   15910:	ldr	x0, [x0]
   15914:	bl	6a10 <PyErr_Format@plt>
   15918:	mov	x20, #0x0                   	// #0
   1591c:	mov	x0, x20
   15920:	ldp	x19, x20, [sp, #16]
   15924:	ldp	x29, x30, [sp], #80
   15928:	ret
   1592c:	add	x2, sp, #0x38
   15930:	mov	x1, #0x0                   	// #0
   15934:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   15938:	ldr	x0, [x0, #1816]
   1593c:	bl	6740 <PyContextVar_Get@plt>
   15940:	tbnz	w0, #31, 15b50 <PyFloat_FromString@plt+0xf0c0>
   15944:	ldr	x20, [sp, #56]
   15948:	cbz	x20, 1596c <PyFloat_FromString@plt+0xeedc>
   1594c:	str	x20, [sp, #72]
   15950:	ldr	x0, [x20]
   15954:	sub	x0, x0, #0x1
   15958:	str	x0, [x20]
   1595c:	cbnz	x0, 158c0 <PyFloat_FromString@plt+0xee30>
   15960:	mov	x0, x20
   15964:	bl	65d0 <_Py_Dealloc@plt>
   15968:	b	158c0 <PyFloat_FromString@plt+0xee30>
   1596c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   15970:	mov	x20, x0
   15974:	str	x0, [sp, #72]
   15978:	cbnz	x0, 15950 <PyFloat_FromString@plt+0xeec0>
   1597c:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15980:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15984:	add	x1, x1, #0x928
   15988:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1598c:	ldr	x0, [x0, #3936]
   15990:	ldr	x0, [x0]
   15994:	bl	6650 <PyErr_SetString@plt>
   15998:	mov	x20, #0x0                   	// #0
   1599c:	b	1591c <PyFloat_FromString@plt+0xee8c>
   159a0:	str	x21, [sp, #32]
   159a4:	ldr	x0, [x19]
   159a8:	add	x0, x0, #0x1
   159ac:	str	x0, [x19]
   159b0:	ldr	x21, [sp, #64]
   159b4:	ldr	x0, [x21, #8]
   159b8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   159bc:	add	x1, x1, #0x320
   159c0:	add	x1, x1, #0x1a0
   159c4:	cmp	x0, x1
   159c8:	b.eq	15a50 <PyFloat_FromString@plt+0xefc0>  // b.none
   159cc:	ldr	x20, [sp, #72]
   159d0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   159d4:	add	x1, x1, #0x320
   159d8:	add	x1, x1, #0x1a0
   159dc:	bl	69c0 <PyType_IsSubtype@plt>
   159e0:	cbnz	w0, 15a50 <PyFloat_FromString@plt+0xefc0>
   159e4:	ldr	x0, [x21, #8]
   159e8:	ldr	x1, [x0, #168]
   159ec:	tbnz	w1, #24, 15aac <PyFloat_FromString@plt+0xf01c>
   159f0:	ldr	x2, [x0, #24]
   159f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   159f8:	add	x1, x1, #0x8a8
   159fc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15a00:	ldr	x0, [x0, #3936]
   15a04:	ldr	x0, [x0]
   15a08:	bl	6a10 <PyErr_Format@plt>
   15a0c:	ldr	x0, [x19]
   15a10:	sub	x0, x0, #0x1
   15a14:	str	x0, [x19]
   15a18:	mov	x20, #0x0                   	// #0
   15a1c:	cbz	x0, 15ad0 <PyFloat_FromString@plt+0xf040>
   15a20:	ldr	x21, [sp, #32]
   15a24:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15a28:	mov	x2, x20
   15a2c:	mov	x1, x19
   15a30:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15a34:	add	x0, x0, #0x320
   15a38:	add	x0, x0, #0x1a0
   15a3c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15a40:	mov	x19, x0
   15a44:	cbz	x0, 15b48 <PyFloat_FromString@plt+0xf0b8>
   15a48:	str	x21, [sp, #32]
   15a4c:	b	159b0 <PyFloat_FromString@plt+0xef20>
   15a50:	ldr	x0, [x21]
   15a54:	add	x0, x0, #0x1
   15a58:	str	x0, [x21]
   15a5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15a60:	add	x0, x0, #0x320
   15a64:	add	x0, x0, #0x1a0
   15a68:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   15a6c:	mov	x20, x0
   15a70:	cbz	x0, 15ae0 <PyFloat_FromString@plt+0xf050>
   15a74:	add	x2, x21, #0x18
   15a78:	add	x1, x19, #0x18
   15a7c:	add	x0, x0, #0x18
   15a80:	bl	2abd8 <PyInit__decimal@@Base+0x10a38>
   15a84:	ldr	x0, [x19]
   15a88:	sub	x0, x0, #0x1
   15a8c:	str	x0, [x19]
   15a90:	cbz	x0, 15b24 <PyFloat_FromString@plt+0xf094>
   15a94:	ldr	x0, [x21]
   15a98:	sub	x0, x0, #0x1
   15a9c:	str	x0, [x21]
   15aa0:	cbz	x0, 15b30 <PyFloat_FromString@plt+0xf0a0>
   15aa4:	ldr	x21, [sp, #32]
   15aa8:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15aac:	mov	x2, x20
   15ab0:	mov	x1, x21
   15ab4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15ab8:	add	x0, x0, #0x320
   15abc:	add	x0, x0, #0x1a0
   15ac0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15ac4:	mov	x21, x0
   15ac8:	cbnz	x0, 15a5c <PyFloat_FromString@plt+0xefcc>
   15acc:	b	15a0c <PyFloat_FromString@plt+0xef7c>
   15ad0:	mov	x0, x19
   15ad4:	bl	65d0 <_Py_Dealloc@plt>
   15ad8:	ldr	x21, [sp, #32]
   15adc:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15ae0:	ldr	x0, [x19]
   15ae4:	sub	x0, x0, #0x1
   15ae8:	str	x0, [x19]
   15aec:	cbz	x0, 15b08 <PyFloat_FromString@plt+0xf078>
   15af0:	ldr	x0, [x21]
   15af4:	sub	x0, x0, #0x1
   15af8:	str	x0, [x21]
   15afc:	cbz	x0, 15b14 <PyFloat_FromString@plt+0xf084>
   15b00:	ldr	x21, [sp, #32]
   15b04:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b08:	mov	x0, x19
   15b0c:	bl	65d0 <_Py_Dealloc@plt>
   15b10:	b	15af0 <PyFloat_FromString@plt+0xf060>
   15b14:	mov	x0, x21
   15b18:	bl	65d0 <_Py_Dealloc@plt>
   15b1c:	ldr	x21, [sp, #32]
   15b20:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b24:	mov	x0, x19
   15b28:	bl	65d0 <_Py_Dealloc@plt>
   15b2c:	b	15a94 <PyFloat_FromString@plt+0xf004>
   15b30:	mov	x0, x21
   15b34:	bl	65d0 <_Py_Dealloc@plt>
   15b38:	ldr	x21, [sp, #32]
   15b3c:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b40:	mov	x20, #0x0                   	// #0
   15b44:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b48:	mov	x20, x0
   15b4c:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b50:	mov	x20, #0x0                   	// #0
   15b54:	b	1591c <PyFloat_FromString@plt+0xee8c>
   15b58:	stp	x29, x30, [sp, #-96]!
   15b5c:	mov	x29, sp
   15b60:	stp	x19, x20, [sp, #16]
   15b64:	stp	x21, x22, [sp, #32]
   15b68:	mov	x20, x0
   15b6c:	mov	x0, x1
   15b70:	mov	x1, x2
   15b74:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   15b78:	ldr	x2, [x2, #4008]
   15b7c:	str	x2, [sp, #72]
   15b80:	str	wzr, [sp, #68]
   15b84:	add	x6, sp, #0x48
   15b88:	add	x5, sp, #0x50
   15b8c:	add	x4, sp, #0x58
   15b90:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   15b94:	add	x3, x3, #0x9a0
   15b98:	add	x3, x3, #0x360
   15b9c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   15ba0:	add	x2, x2, #0xb68
   15ba4:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15ba8:	mov	x22, #0x0                   	// #0
   15bac:	cbz	w0, 15e0c <PyFloat_FromString@plt+0xf37c>
   15bb0:	ldr	x19, [sp, #88]
   15bb4:	ldr	x0, [x19, #8]
   15bb8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15bbc:	add	x1, x1, #0x320
   15bc0:	add	x1, x1, #0x1a0
   15bc4:	cmp	x0, x1
   15bc8:	b.eq	15c10 <PyFloat_FromString@plt+0xf180>  // b.none
   15bcc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15bd0:	add	x1, x1, #0x320
   15bd4:	add	x1, x1, #0x1a0
   15bd8:	bl	69c0 <PyType_IsSubtype@plt>
   15bdc:	cbnz	w0, 15c10 <PyFloat_FromString@plt+0xf180>
   15be0:	ldr	x0, [x19, #8]
   15be4:	ldr	x1, [x0, #168]
   15be8:	tbnz	w1, #24, 15c94 <PyFloat_FromString@plt+0xf204>
   15bec:	ldr	x2, [x0, #24]
   15bf0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15bf4:	add	x1, x1, #0x8a8
   15bf8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15bfc:	ldr	x0, [x0, #3936]
   15c00:	ldr	x0, [x0]
   15c04:	bl	6a10 <PyErr_Format@plt>
   15c08:	mov	x22, #0x0                   	// #0
   15c0c:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15c10:	ldr	x0, [x19]
   15c14:	add	x0, x0, #0x1
   15c18:	str	x0, [x19]
   15c1c:	ldr	x21, [sp, #80]
   15c20:	ldr	x0, [x21, #8]
   15c24:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15c28:	add	x1, x1, #0x320
   15c2c:	add	x1, x1, #0x1a0
   15c30:	cmp	x0, x1
   15c34:	b.eq	15cbc <PyFloat_FromString@plt+0xf22c>  // b.none
   15c38:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15c3c:	add	x1, x1, #0x320
   15c40:	add	x1, x1, #0x1a0
   15c44:	bl	69c0 <PyType_IsSubtype@plt>
   15c48:	cbnz	w0, 15cbc <PyFloat_FromString@plt+0xf22c>
   15c4c:	ldr	x0, [x21, #8]
   15c50:	ldr	x1, [x0, #168]
   15c54:	tbnz	w1, #24, 15d60 <PyFloat_FromString@plt+0xf2d0>
   15c58:	ldr	x2, [x0, #24]
   15c5c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15c60:	add	x1, x1, #0x8a8
   15c64:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15c68:	ldr	x0, [x0, #3936]
   15c6c:	ldr	x0, [x0]
   15c70:	bl	6a10 <PyErr_Format@plt>
   15c74:	ldr	x0, [x19]
   15c78:	sub	x0, x0, #0x1
   15c7c:	str	x0, [x19]
   15c80:	mov	x22, #0x0                   	// #0
   15c84:	cbnz	x0, 15e0c <PyFloat_FromString@plt+0xf37c>
   15c88:	mov	x0, x19
   15c8c:	bl	65d0 <_Py_Dealloc@plt>
   15c90:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15c94:	mov	x2, x20
   15c98:	mov	x1, x19
   15c9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15ca0:	add	x0, x0, #0x320
   15ca4:	add	x0, x0, #0x1a0
   15ca8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15cac:	mov	x19, x0
   15cb0:	cbnz	x0, 15c1c <PyFloat_FromString@plt+0xf18c>
   15cb4:	mov	x22, x0
   15cb8:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15cbc:	str	x23, [sp, #48]
   15cc0:	ldr	x0, [x21]
   15cc4:	add	x0, x0, #0x1
   15cc8:	str	x0, [x21]
   15ccc:	ldr	x23, [sp, #72]
   15cd0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15cd4:	ldr	x0, [x0, #4008]
   15cd8:	cmp	x23, x0
   15cdc:	b.eq	15f24 <PyFloat_FromString@plt+0xf494>  // b.none
   15ce0:	ldr	x0, [x23, #8]
   15ce4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15ce8:	add	x1, x1, #0x320
   15cec:	add	x1, x1, #0x1a0
   15cf0:	cmp	x0, x1
   15cf4:	b.eq	15d88 <PyFloat_FromString@plt+0xf2f8>  // b.none
   15cf8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15cfc:	add	x1, x1, #0x320
   15d00:	add	x1, x1, #0x1a0
   15d04:	bl	69c0 <PyType_IsSubtype@plt>
   15d08:	cbnz	w0, 15d88 <PyFloat_FromString@plt+0xf2f8>
   15d0c:	ldr	x0, [x23, #8]
   15d10:	ldr	x1, [x0, #168]
   15d14:	tbnz	w1, #24, 15e20 <PyFloat_FromString@plt+0xf390>
   15d18:	ldr	x2, [x0, #24]
   15d1c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   15d20:	add	x1, x1, #0x8a8
   15d24:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15d28:	ldr	x0, [x0, #3936]
   15d2c:	ldr	x0, [x0]
   15d30:	bl	6a10 <PyErr_Format@plt>
   15d34:	ldr	x0, [x19]
   15d38:	sub	x0, x0, #0x1
   15d3c:	str	x0, [x19]
   15d40:	cbz	x0, 15e44 <PyFloat_FromString@plt+0xf3b4>
   15d44:	ldr	x0, [x21]
   15d48:	sub	x0, x0, #0x1
   15d4c:	str	x0, [x21]
   15d50:	mov	x22, #0x0                   	// #0
   15d54:	cbz	x0, 15e50 <PyFloat_FromString@plt+0xf3c0>
   15d58:	ldr	x23, [sp, #48]
   15d5c:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15d60:	mov	x2, x20
   15d64:	mov	x1, x21
   15d68:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15d6c:	add	x0, x0, #0x320
   15d70:	add	x0, x0, #0x1a0
   15d74:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15d78:	mov	x21, x0
   15d7c:	cbz	x0, 15c74 <PyFloat_FromString@plt+0xf1e4>
   15d80:	str	x23, [sp, #48]
   15d84:	b	15ccc <PyFloat_FromString@plt+0xf23c>
   15d88:	ldr	x0, [x23]
   15d8c:	add	x0, x0, #0x1
   15d90:	str	x0, [x23]
   15d94:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15d98:	add	x0, x0, #0x320
   15d9c:	add	x0, x0, #0x1a0
   15da0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   15da4:	mov	x22, x0
   15da8:	cbz	x0, 15e60 <PyFloat_FromString@plt+0xf3d0>
   15dac:	add	x5, sp, #0x44
   15db0:	add	x4, x20, #0x10
   15db4:	add	x3, x23, #0x18
   15db8:	add	x2, x21, #0x18
   15dbc:	add	x1, x19, #0x18
   15dc0:	add	x0, x22, #0x18
   15dc4:	bl	37404 <PyInit__decimal@@Base+0x1d264>
   15dc8:	ldr	x0, [x23]
   15dcc:	sub	x0, x0, #0x1
   15dd0:	str	x0, [x23]
   15dd4:	cbz	x0, 15ed0 <PyFloat_FromString@plt+0xf440>
   15dd8:	ldr	x0, [x19]
   15ddc:	sub	x0, x0, #0x1
   15de0:	str	x0, [x19]
   15de4:	cbz	x0, 15edc <PyFloat_FromString@plt+0xf44c>
   15de8:	ldr	x0, [x21]
   15dec:	sub	x0, x0, #0x1
   15df0:	str	x0, [x21]
   15df4:	cbz	x0, 15ee8 <PyFloat_FromString@plt+0xf458>
   15df8:	ldr	w1, [sp, #68]
   15dfc:	mov	x0, x20
   15e00:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   15e04:	cbnz	w0, 15ef4 <PyFloat_FromString@plt+0xf464>
   15e08:	ldr	x23, [sp, #48]
   15e0c:	mov	x0, x22
   15e10:	ldp	x19, x20, [sp, #16]
   15e14:	ldp	x21, x22, [sp, #32]
   15e18:	ldp	x29, x30, [sp], #96
   15e1c:	ret
   15e20:	mov	x2, x20
   15e24:	mov	x1, x23
   15e28:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15e2c:	add	x0, x0, #0x320
   15e30:	add	x0, x0, #0x1a0
   15e34:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   15e38:	mov	x23, x0
   15e3c:	cbnz	x0, 15d94 <PyFloat_FromString@plt+0xf304>
   15e40:	b	15d34 <PyFloat_FromString@plt+0xf2a4>
   15e44:	mov	x0, x19
   15e48:	bl	65d0 <_Py_Dealloc@plt>
   15e4c:	b	15d44 <PyFloat_FromString@plt+0xf2b4>
   15e50:	mov	x0, x21
   15e54:	bl	65d0 <_Py_Dealloc@plt>
   15e58:	ldr	x23, [sp, #48]
   15e5c:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15e60:	mov	x22, x23
   15e64:	ldr	x0, [x19]
   15e68:	sub	x0, x0, #0x1
   15e6c:	str	x0, [x19]
   15e70:	cbz	x0, 15ea4 <PyFloat_FromString@plt+0xf414>
   15e74:	ldr	x0, [x21]
   15e78:	sub	x0, x0, #0x1
   15e7c:	str	x0, [x21]
   15e80:	cbz	x0, 15eb0 <PyFloat_FromString@plt+0xf420>
   15e84:	cbz	x22, 15f58 <PyFloat_FromString@plt+0xf4c8>
   15e88:	ldr	x0, [x22]
   15e8c:	sub	x0, x0, #0x1
   15e90:	str	x0, [x22]
   15e94:	cbz	x0, 15ebc <PyFloat_FromString@plt+0xf42c>
   15e98:	mov	x22, #0x0                   	// #0
   15e9c:	ldr	x23, [sp, #48]
   15ea0:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15ea4:	mov	x0, x19
   15ea8:	bl	65d0 <_Py_Dealloc@plt>
   15eac:	b	15e74 <PyFloat_FromString@plt+0xf3e4>
   15eb0:	mov	x0, x21
   15eb4:	bl	65d0 <_Py_Dealloc@plt>
   15eb8:	b	15e84 <PyFloat_FromString@plt+0xf3f4>
   15ebc:	mov	x0, x22
   15ec0:	bl	65d0 <_Py_Dealloc@plt>
   15ec4:	mov	x22, #0x0                   	// #0
   15ec8:	ldr	x23, [sp, #48]
   15ecc:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15ed0:	mov	x0, x23
   15ed4:	bl	65d0 <_Py_Dealloc@plt>
   15ed8:	b	15dd8 <PyFloat_FromString@plt+0xf348>
   15edc:	mov	x0, x19
   15ee0:	bl	65d0 <_Py_Dealloc@plt>
   15ee4:	b	15de8 <PyFloat_FromString@plt+0xf358>
   15ee8:	mov	x0, x21
   15eec:	bl	65d0 <_Py_Dealloc@plt>
   15ef0:	b	15df8 <PyFloat_FromString@plt+0xf368>
   15ef4:	ldr	x0, [x22]
   15ef8:	sub	x0, x0, #0x1
   15efc:	str	x0, [x22]
   15f00:	cbz	x0, 15f10 <PyFloat_FromString@plt+0xf480>
   15f04:	mov	x22, #0x0                   	// #0
   15f08:	ldr	x23, [sp, #48]
   15f0c:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15f10:	mov	x0, x22
   15f14:	bl	65d0 <_Py_Dealloc@plt>
   15f18:	mov	x22, #0x0                   	// #0
   15f1c:	ldr	x23, [sp, #48]
   15f20:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15f24:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   15f28:	add	x0, x0, #0x320
   15f2c:	add	x0, x0, #0x1a0
   15f30:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   15f34:	mov	x22, x0
   15f38:	cbz	x0, 15e64 <PyFloat_FromString@plt+0xf3d4>
   15f3c:	add	x4, sp, #0x44
   15f40:	add	x3, x20, #0x10
   15f44:	add	x2, x21, #0x18
   15f48:	add	x1, x19, #0x18
   15f4c:	add	x0, x22, #0x18
   15f50:	bl	36960 <PyInit__decimal@@Base+0x1c7c0>
   15f54:	b	15dd8 <PyFloat_FromString@plt+0xf348>
   15f58:	ldr	x23, [sp, #48]
   15f5c:	b	15e0c <PyFloat_FromString@plt+0xf37c>
   15f60:	stp	x29, x30, [sp, #-80]!
   15f64:	mov	x29, sp
   15f68:	stp	x19, x20, [sp, #16]
   15f6c:	mov	x19, x0
   15f70:	mov	x0, x1
   15f74:	mov	x1, x2
   15f78:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   15f7c:	ldr	x2, [x2, #4008]
   15f80:	str	x2, [sp, #64]
   15f84:	str	wzr, [sp, #60]
   15f88:	add	x5, sp, #0x40
   15f8c:	add	x4, sp, #0x48
   15f90:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   15f94:	add	x3, x3, #0x9a0
   15f98:	add	x3, x3, #0x380
   15f9c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   15fa0:	add	x2, x2, #0xa08
   15fa4:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15fa8:	cbz	w0, 162a4 <PyFloat_FromString@plt+0xf814>
   15fac:	ldr	x1, [sp, #64]
   15fb0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   15fb4:	ldr	x0, [x0, #4008]
   15fb8:	cmp	x1, x0
   15fbc:	b.eq	16044 <PyFloat_FromString@plt+0xf5b4>  // b.none
   15fc0:	ldr	x0, [x1, #8]
   15fc4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15fc8:	add	x1, x1, #0x320
   15fcc:	cmp	x0, x1
   15fd0:	b.eq	15fe4 <PyFloat_FromString@plt+0xf554>  // b.none
   15fd4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15fd8:	add	x1, x1, #0x320
   15fdc:	bl	69c0 <PyType_IsSubtype@plt>
   15fe0:	cbz	w0, 16098 <PyFloat_FromString@plt+0xf608>
   15fe4:	ldr	x0, [x19, #8]
   15fe8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   15fec:	add	x1, x1, #0x320
   15ff0:	add	x1, x1, #0x1a0
   15ff4:	cmp	x0, x1
   15ff8:	b.eq	160b8 <PyFloat_FromString@plt+0xf628>  // b.none
   15ffc:	ldr	x20, [sp, #64]
   16000:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16004:	add	x1, x1, #0x320
   16008:	add	x1, x1, #0x1a0
   1600c:	bl	69c0 <PyType_IsSubtype@plt>
   16010:	cbnz	w0, 160b8 <PyFloat_FromString@plt+0xf628>
   16014:	ldr	x0, [x19, #8]
   16018:	ldr	x1, [x0, #168]
   1601c:	tbnz	w1, #24, 16140 <PyFloat_FromString@plt+0xf6b0>
   16020:	ldr	x2, [x0, #24]
   16024:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16028:	add	x1, x1, #0x8a8
   1602c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16030:	ldr	x0, [x0, #3936]
   16034:	ldr	x0, [x0]
   16038:	bl	6a10 <PyErr_Format@plt>
   1603c:	mov	x20, #0x0                   	// #0
   16040:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16044:	add	x2, sp, #0x30
   16048:	mov	x1, #0x0                   	// #0
   1604c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   16050:	ldr	x0, [x0, #1816]
   16054:	bl	6740 <PyContextVar_Get@plt>
   16058:	tbnz	w0, #31, 162b4 <PyFloat_FromString@plt+0xf824>
   1605c:	ldr	x20, [sp, #48]
   16060:	cbz	x20, 16084 <PyFloat_FromString@plt+0xf5f4>
   16064:	str	x20, [sp, #64]
   16068:	ldr	x0, [x20]
   1606c:	sub	x0, x0, #0x1
   16070:	str	x0, [x20]
   16074:	cbnz	x0, 15fe4 <PyFloat_FromString@plt+0xf554>
   16078:	mov	x0, x20
   1607c:	bl	65d0 <_Py_Dealloc@plt>
   16080:	b	15fe4 <PyFloat_FromString@plt+0xf554>
   16084:	bl	7abc <PyFloat_FromString@plt+0x102c>
   16088:	mov	x20, x0
   1608c:	str	x0, [sp, #64]
   16090:	cbnz	x0, 16068 <PyFloat_FromString@plt+0xf5d8>
   16094:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16098:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1609c:	add	x1, x1, #0x928
   160a0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   160a4:	ldr	x0, [x0, #3936]
   160a8:	ldr	x0, [x0]
   160ac:	bl	6650 <PyErr_SetString@plt>
   160b0:	mov	x20, #0x0                   	// #0
   160b4:	b	161d4 <PyFloat_FromString@plt+0xf744>
   160b8:	str	x21, [sp, #32]
   160bc:	ldr	x0, [x19]
   160c0:	add	x0, x0, #0x1
   160c4:	str	x0, [x19]
   160c8:	ldr	x21, [sp, #72]
   160cc:	ldr	x0, [x21, #8]
   160d0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   160d4:	add	x1, x1, #0x320
   160d8:	add	x1, x1, #0x1a0
   160dc:	cmp	x0, x1
   160e0:	b.eq	16168 <PyFloat_FromString@plt+0xf6d8>  // b.none
   160e4:	ldr	x20, [sp, #64]
   160e8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   160ec:	add	x1, x1, #0x320
   160f0:	add	x1, x1, #0x1a0
   160f4:	bl	69c0 <PyType_IsSubtype@plt>
   160f8:	cbnz	w0, 16168 <PyFloat_FromString@plt+0xf6d8>
   160fc:	ldr	x0, [x21, #8]
   16100:	ldr	x1, [x0, #168]
   16104:	tbnz	w1, #24, 161e4 <PyFloat_FromString@plt+0xf754>
   16108:	ldr	x2, [x0, #24]
   1610c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16110:	add	x1, x1, #0x8a8
   16114:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16118:	ldr	x0, [x0, #3936]
   1611c:	ldr	x0, [x0]
   16120:	bl	6a10 <PyErr_Format@plt>
   16124:	ldr	x0, [x19]
   16128:	sub	x0, x0, #0x1
   1612c:	str	x0, [x19]
   16130:	mov	x20, #0x0                   	// #0
   16134:	cbz	x0, 16208 <PyFloat_FromString@plt+0xf778>
   16138:	ldr	x21, [sp, #32]
   1613c:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16140:	mov	x2, x20
   16144:	mov	x1, x19
   16148:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1614c:	add	x0, x0, #0x320
   16150:	add	x0, x0, #0x1a0
   16154:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16158:	mov	x19, x0
   1615c:	cbz	x0, 162ac <PyFloat_FromString@plt+0xf81c>
   16160:	str	x21, [sp, #32]
   16164:	b	160c8 <PyFloat_FromString@plt+0xf638>
   16168:	ldr	x0, [x21]
   1616c:	add	x0, x0, #0x1
   16170:	str	x0, [x21]
   16174:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16178:	add	x0, x0, #0x320
   1617c:	add	x0, x0, #0x1a0
   16180:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   16184:	mov	x20, x0
   16188:	cbz	x0, 16218 <PyFloat_FromString@plt+0xf788>
   1618c:	add	x3, sp, #0x3c
   16190:	add	x2, x21, #0x18
   16194:	add	x1, x19, #0x18
   16198:	add	x0, x0, #0x18
   1619c:	bl	2a7f4 <PyInit__decimal@@Base+0x10654>
   161a0:	ldr	x0, [x19]
   161a4:	sub	x0, x0, #0x1
   161a8:	str	x0, [x19]
   161ac:	cbz	x0, 1625c <PyFloat_FromString@plt+0xf7cc>
   161b0:	ldr	x0, [x21]
   161b4:	sub	x0, x0, #0x1
   161b8:	str	x0, [x21]
   161bc:	cbz	x0, 16268 <PyFloat_FromString@plt+0xf7d8>
   161c0:	ldr	w1, [sp, #60]
   161c4:	ldr	x0, [sp, #64]
   161c8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   161cc:	cbnz	w0, 16274 <PyFloat_FromString@plt+0xf7e4>
   161d0:	ldr	x21, [sp, #32]
   161d4:	mov	x0, x20
   161d8:	ldp	x19, x20, [sp, #16]
   161dc:	ldp	x29, x30, [sp], #80
   161e0:	ret
   161e4:	mov	x2, x20
   161e8:	mov	x1, x21
   161ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   161f0:	add	x0, x0, #0x320
   161f4:	add	x0, x0, #0x1a0
   161f8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   161fc:	mov	x21, x0
   16200:	cbnz	x0, 16174 <PyFloat_FromString@plt+0xf6e4>
   16204:	b	16124 <PyFloat_FromString@plt+0xf694>
   16208:	mov	x0, x19
   1620c:	bl	65d0 <_Py_Dealloc@plt>
   16210:	ldr	x21, [sp, #32]
   16214:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16218:	ldr	x0, [x19]
   1621c:	sub	x0, x0, #0x1
   16220:	str	x0, [x19]
   16224:	cbz	x0, 16240 <PyFloat_FromString@plt+0xf7b0>
   16228:	ldr	x0, [x21]
   1622c:	sub	x0, x0, #0x1
   16230:	str	x0, [x21]
   16234:	cbz	x0, 1624c <PyFloat_FromString@plt+0xf7bc>
   16238:	ldr	x21, [sp, #32]
   1623c:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16240:	mov	x0, x19
   16244:	bl	65d0 <_Py_Dealloc@plt>
   16248:	b	16228 <PyFloat_FromString@plt+0xf798>
   1624c:	mov	x0, x21
   16250:	bl	65d0 <_Py_Dealloc@plt>
   16254:	ldr	x21, [sp, #32]
   16258:	b	161d4 <PyFloat_FromString@plt+0xf744>
   1625c:	mov	x0, x19
   16260:	bl	65d0 <_Py_Dealloc@plt>
   16264:	b	161b0 <PyFloat_FromString@plt+0xf720>
   16268:	mov	x0, x21
   1626c:	bl	65d0 <_Py_Dealloc@plt>
   16270:	b	161c0 <PyFloat_FromString@plt+0xf730>
   16274:	ldr	x0, [x20]
   16278:	sub	x0, x0, #0x1
   1627c:	str	x0, [x20]
   16280:	cbz	x0, 16290 <PyFloat_FromString@plt+0xf800>
   16284:	mov	x20, #0x0                   	// #0
   16288:	ldr	x21, [sp, #32]
   1628c:	b	161d4 <PyFloat_FromString@plt+0xf744>
   16290:	mov	x0, x20
   16294:	bl	65d0 <_Py_Dealloc@plt>
   16298:	mov	x20, #0x0                   	// #0
   1629c:	ldr	x21, [sp, #32]
   162a0:	b	161d4 <PyFloat_FromString@plt+0xf744>
   162a4:	mov	x20, #0x0                   	// #0
   162a8:	b	161d4 <PyFloat_FromString@plt+0xf744>
   162ac:	mov	x20, x0
   162b0:	b	161d4 <PyFloat_FromString@plt+0xf744>
   162b4:	mov	x20, #0x0                   	// #0
   162b8:	b	161d4 <PyFloat_FromString@plt+0xf744>
   162bc:	stp	x29, x30, [sp, #-80]!
   162c0:	mov	x29, sp
   162c4:	stp	x19, x20, [sp, #16]
   162c8:	mov	x19, x0
   162cc:	mov	x0, x1
   162d0:	mov	x1, x2
   162d4:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   162d8:	ldr	x2, [x2, #4008]
   162dc:	str	x2, [sp, #64]
   162e0:	str	wzr, [sp, #60]
   162e4:	add	x5, sp, #0x40
   162e8:	add	x4, sp, #0x48
   162ec:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   162f0:	add	x3, x3, #0x9a0
   162f4:	add	x3, x3, #0x398
   162f8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   162fc:	add	x2, x2, #0xa08
   16300:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16304:	cbz	w0, 16608 <PyFloat_FromString@plt+0xfb78>
   16308:	ldr	x1, [sp, #64]
   1630c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16310:	ldr	x0, [x0, #4008]
   16314:	cmp	x1, x0
   16318:	b.eq	163a0 <PyFloat_FromString@plt+0xf910>  // b.none
   1631c:	ldr	x0, [x1, #8]
   16320:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16324:	add	x1, x1, #0x320
   16328:	cmp	x0, x1
   1632c:	b.eq	16340 <PyFloat_FromString@plt+0xf8b0>  // b.none
   16330:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16334:	add	x1, x1, #0x320
   16338:	bl	69c0 <PyType_IsSubtype@plt>
   1633c:	cbz	w0, 163f4 <PyFloat_FromString@plt+0xf964>
   16340:	ldr	x0, [x19, #8]
   16344:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16348:	add	x1, x1, #0x320
   1634c:	add	x1, x1, #0x1a0
   16350:	cmp	x0, x1
   16354:	b.eq	16414 <PyFloat_FromString@plt+0xf984>  // b.none
   16358:	ldr	x20, [sp, #64]
   1635c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16360:	add	x1, x1, #0x320
   16364:	add	x1, x1, #0x1a0
   16368:	bl	69c0 <PyType_IsSubtype@plt>
   1636c:	cbnz	w0, 16414 <PyFloat_FromString@plt+0xf984>
   16370:	ldr	x0, [x19, #8]
   16374:	ldr	x1, [x0, #168]
   16378:	tbnz	w1, #24, 1649c <PyFloat_FromString@plt+0xfa0c>
   1637c:	ldr	x2, [x0, #24]
   16380:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16384:	add	x1, x1, #0x8a8
   16388:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1638c:	ldr	x0, [x0, #3936]
   16390:	ldr	x0, [x0]
   16394:	bl	6a10 <PyErr_Format@plt>
   16398:	mov	x20, #0x0                   	// #0
   1639c:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   163a0:	add	x2, sp, #0x30
   163a4:	mov	x1, #0x0                   	// #0
   163a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   163ac:	ldr	x0, [x0, #1816]
   163b0:	bl	6740 <PyContextVar_Get@plt>
   163b4:	tbnz	w0, #31, 16618 <PyFloat_FromString@plt+0xfb88>
   163b8:	ldr	x20, [sp, #48]
   163bc:	cbz	x20, 163e0 <PyFloat_FromString@plt+0xf950>
   163c0:	str	x20, [sp, #64]
   163c4:	ldr	x0, [x20]
   163c8:	sub	x0, x0, #0x1
   163cc:	str	x0, [x20]
   163d0:	cbnz	x0, 16340 <PyFloat_FromString@plt+0xf8b0>
   163d4:	mov	x0, x20
   163d8:	bl	65d0 <_Py_Dealloc@plt>
   163dc:	b	16340 <PyFloat_FromString@plt+0xf8b0>
   163e0:	bl	7abc <PyFloat_FromString@plt+0x102c>
   163e4:	mov	x20, x0
   163e8:	str	x0, [sp, #64]
   163ec:	cbnz	x0, 163c4 <PyFloat_FromString@plt+0xf934>
   163f0:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   163f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   163f8:	add	x1, x1, #0x928
   163fc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16400:	ldr	x0, [x0, #3936]
   16404:	ldr	x0, [x0]
   16408:	bl	6650 <PyErr_SetString@plt>
   1640c:	mov	x20, #0x0                   	// #0
   16410:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   16414:	str	x21, [sp, #32]
   16418:	ldr	x0, [x19]
   1641c:	add	x0, x0, #0x1
   16420:	str	x0, [x19]
   16424:	ldr	x21, [sp, #72]
   16428:	ldr	x0, [x21, #8]
   1642c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16430:	add	x1, x1, #0x320
   16434:	add	x1, x1, #0x1a0
   16438:	cmp	x0, x1
   1643c:	b.eq	164c4 <PyFloat_FromString@plt+0xfa34>  // b.none
   16440:	ldr	x20, [sp, #64]
   16444:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16448:	add	x1, x1, #0x320
   1644c:	add	x1, x1, #0x1a0
   16450:	bl	69c0 <PyType_IsSubtype@plt>
   16454:	cbnz	w0, 164c4 <PyFloat_FromString@plt+0xfa34>
   16458:	ldr	x0, [x21, #8]
   1645c:	ldr	x1, [x0, #168]
   16460:	tbnz	w1, #24, 16548 <PyFloat_FromString@plt+0xfab8>
   16464:	ldr	x2, [x0, #24]
   16468:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1646c:	add	x1, x1, #0x8a8
   16470:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16474:	ldr	x0, [x0, #3936]
   16478:	ldr	x0, [x0]
   1647c:	bl	6a10 <PyErr_Format@plt>
   16480:	ldr	x0, [x19]
   16484:	sub	x0, x0, #0x1
   16488:	str	x0, [x19]
   1648c:	mov	x20, #0x0                   	// #0
   16490:	cbz	x0, 1656c <PyFloat_FromString@plt+0xfadc>
   16494:	ldr	x21, [sp, #32]
   16498:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   1649c:	mov	x2, x20
   164a0:	mov	x1, x19
   164a4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   164a8:	add	x0, x0, #0x320
   164ac:	add	x0, x0, #0x1a0
   164b0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   164b4:	mov	x19, x0
   164b8:	cbz	x0, 16610 <PyFloat_FromString@plt+0xfb80>
   164bc:	str	x21, [sp, #32]
   164c0:	b	16424 <PyFloat_FromString@plt+0xf994>
   164c4:	ldr	x0, [x21]
   164c8:	add	x0, x0, #0x1
   164cc:	str	x0, [x21]
   164d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   164d4:	add	x0, x0, #0x320
   164d8:	add	x0, x0, #0x1a0
   164dc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   164e0:	mov	x20, x0
   164e4:	cbz	x0, 1657c <PyFloat_FromString@plt+0xfaec>
   164e8:	add	x4, sp, #0x3c
   164ec:	ldr	x3, [sp, #64]
   164f0:	add	x3, x3, #0x10
   164f4:	add	x2, x21, #0x18
   164f8:	add	x1, x19, #0x18
   164fc:	add	x0, x0, #0x18
   16500:	bl	2fb28 <PyInit__decimal@@Base+0x15988>
   16504:	ldr	x0, [x19]
   16508:	sub	x0, x0, #0x1
   1650c:	str	x0, [x19]
   16510:	cbz	x0, 165c0 <PyFloat_FromString@plt+0xfb30>
   16514:	ldr	x0, [x21]
   16518:	sub	x0, x0, #0x1
   1651c:	str	x0, [x21]
   16520:	cbz	x0, 165cc <PyFloat_FromString@plt+0xfb3c>
   16524:	ldr	w1, [sp, #60]
   16528:	ldr	x0, [sp, #64]
   1652c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   16530:	cbnz	w0, 165d8 <PyFloat_FromString@plt+0xfb48>
   16534:	ldr	x21, [sp, #32]
   16538:	mov	x0, x20
   1653c:	ldp	x19, x20, [sp, #16]
   16540:	ldp	x29, x30, [sp], #80
   16544:	ret
   16548:	mov	x2, x20
   1654c:	mov	x1, x21
   16550:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16554:	add	x0, x0, #0x320
   16558:	add	x0, x0, #0x1a0
   1655c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16560:	mov	x21, x0
   16564:	cbnz	x0, 164d0 <PyFloat_FromString@plt+0xfa40>
   16568:	b	16480 <PyFloat_FromString@plt+0xf9f0>
   1656c:	mov	x0, x19
   16570:	bl	65d0 <_Py_Dealloc@plt>
   16574:	ldr	x21, [sp, #32]
   16578:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   1657c:	ldr	x0, [x19]
   16580:	sub	x0, x0, #0x1
   16584:	str	x0, [x19]
   16588:	cbz	x0, 165a4 <PyFloat_FromString@plt+0xfb14>
   1658c:	ldr	x0, [x21]
   16590:	sub	x0, x0, #0x1
   16594:	str	x0, [x21]
   16598:	cbz	x0, 165b0 <PyFloat_FromString@plt+0xfb20>
   1659c:	ldr	x21, [sp, #32]
   165a0:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   165a4:	mov	x0, x19
   165a8:	bl	65d0 <_Py_Dealloc@plt>
   165ac:	b	1658c <PyFloat_FromString@plt+0xfafc>
   165b0:	mov	x0, x21
   165b4:	bl	65d0 <_Py_Dealloc@plt>
   165b8:	ldr	x21, [sp, #32]
   165bc:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   165c0:	mov	x0, x19
   165c4:	bl	65d0 <_Py_Dealloc@plt>
   165c8:	b	16514 <PyFloat_FromString@plt+0xfa84>
   165cc:	mov	x0, x21
   165d0:	bl	65d0 <_Py_Dealloc@plt>
   165d4:	b	16524 <PyFloat_FromString@plt+0xfa94>
   165d8:	ldr	x0, [x20]
   165dc:	sub	x0, x0, #0x1
   165e0:	str	x0, [x20]
   165e4:	cbz	x0, 165f4 <PyFloat_FromString@plt+0xfb64>
   165e8:	mov	x20, #0x0                   	// #0
   165ec:	ldr	x21, [sp, #32]
   165f0:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   165f4:	mov	x0, x20
   165f8:	bl	65d0 <_Py_Dealloc@plt>
   165fc:	mov	x20, #0x0                   	// #0
   16600:	ldr	x21, [sp, #32]
   16604:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   16608:	mov	x20, #0x0                   	// #0
   1660c:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   16610:	mov	x20, x0
   16614:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   16618:	mov	x20, #0x0                   	// #0
   1661c:	b	16538 <PyFloat_FromString@plt+0xfaa8>
   16620:	stp	x29, x30, [sp, #-80]!
   16624:	mov	x29, sp
   16628:	stp	x19, x20, [sp, #16]
   1662c:	mov	x19, x0
   16630:	mov	x0, x1
   16634:	mov	x1, x2
   16638:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1663c:	ldr	x2, [x2, #4008]
   16640:	str	x2, [sp, #64]
   16644:	str	wzr, [sp, #60]
   16648:	add	x5, sp, #0x40
   1664c:	add	x4, sp, #0x48
   16650:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   16654:	add	x3, x3, #0x9a0
   16658:	add	x3, x3, #0x3b0
   1665c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   16660:	add	x2, x2, #0xa08
   16664:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16668:	cbz	w0, 1696c <PyFloat_FromString@plt+0xfedc>
   1666c:	ldr	x1, [sp, #64]
   16670:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16674:	ldr	x0, [x0, #4008]
   16678:	cmp	x1, x0
   1667c:	b.eq	16704 <PyFloat_FromString@plt+0xfc74>  // b.none
   16680:	ldr	x0, [x1, #8]
   16684:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16688:	add	x1, x1, #0x320
   1668c:	cmp	x0, x1
   16690:	b.eq	166a4 <PyFloat_FromString@plt+0xfc14>  // b.none
   16694:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16698:	add	x1, x1, #0x320
   1669c:	bl	69c0 <PyType_IsSubtype@plt>
   166a0:	cbz	w0, 16758 <PyFloat_FromString@plt+0xfcc8>
   166a4:	ldr	x0, [x19, #8]
   166a8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   166ac:	add	x1, x1, #0x320
   166b0:	add	x1, x1, #0x1a0
   166b4:	cmp	x0, x1
   166b8:	b.eq	16778 <PyFloat_FromString@plt+0xfce8>  // b.none
   166bc:	ldr	x20, [sp, #64]
   166c0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   166c4:	add	x1, x1, #0x320
   166c8:	add	x1, x1, #0x1a0
   166cc:	bl	69c0 <PyType_IsSubtype@plt>
   166d0:	cbnz	w0, 16778 <PyFloat_FromString@plt+0xfce8>
   166d4:	ldr	x0, [x19, #8]
   166d8:	ldr	x1, [x0, #168]
   166dc:	tbnz	w1, #24, 16800 <PyFloat_FromString@plt+0xfd70>
   166e0:	ldr	x2, [x0, #24]
   166e4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   166e8:	add	x1, x1, #0x8a8
   166ec:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   166f0:	ldr	x0, [x0, #3936]
   166f4:	ldr	x0, [x0]
   166f8:	bl	6a10 <PyErr_Format@plt>
   166fc:	mov	x20, #0x0                   	// #0
   16700:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16704:	add	x2, sp, #0x30
   16708:	mov	x1, #0x0                   	// #0
   1670c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   16710:	ldr	x0, [x0, #1816]
   16714:	bl	6740 <PyContextVar_Get@plt>
   16718:	tbnz	w0, #31, 1697c <PyFloat_FromString@plt+0xfeec>
   1671c:	ldr	x20, [sp, #48]
   16720:	cbz	x20, 16744 <PyFloat_FromString@plt+0xfcb4>
   16724:	str	x20, [sp, #64]
   16728:	ldr	x0, [x20]
   1672c:	sub	x0, x0, #0x1
   16730:	str	x0, [x20]
   16734:	cbnz	x0, 166a4 <PyFloat_FromString@plt+0xfc14>
   16738:	mov	x0, x20
   1673c:	bl	65d0 <_Py_Dealloc@plt>
   16740:	b	166a4 <PyFloat_FromString@plt+0xfc14>
   16744:	bl	7abc <PyFloat_FromString@plt+0x102c>
   16748:	mov	x20, x0
   1674c:	str	x0, [sp, #64]
   16750:	cbnz	x0, 16728 <PyFloat_FromString@plt+0xfc98>
   16754:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16758:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1675c:	add	x1, x1, #0x928
   16760:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16764:	ldr	x0, [x0, #3936]
   16768:	ldr	x0, [x0]
   1676c:	bl	6650 <PyErr_SetString@plt>
   16770:	mov	x20, #0x0                   	// #0
   16774:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16778:	str	x21, [sp, #32]
   1677c:	ldr	x0, [x19]
   16780:	add	x0, x0, #0x1
   16784:	str	x0, [x19]
   16788:	ldr	x21, [sp, #72]
   1678c:	ldr	x0, [x21, #8]
   16790:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16794:	add	x1, x1, #0x320
   16798:	add	x1, x1, #0x1a0
   1679c:	cmp	x0, x1
   167a0:	b.eq	16828 <PyFloat_FromString@plt+0xfd98>  // b.none
   167a4:	ldr	x20, [sp, #64]
   167a8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   167ac:	add	x1, x1, #0x320
   167b0:	add	x1, x1, #0x1a0
   167b4:	bl	69c0 <PyType_IsSubtype@plt>
   167b8:	cbnz	w0, 16828 <PyFloat_FromString@plt+0xfd98>
   167bc:	ldr	x0, [x21, #8]
   167c0:	ldr	x1, [x0, #168]
   167c4:	tbnz	w1, #24, 168ac <PyFloat_FromString@plt+0xfe1c>
   167c8:	ldr	x2, [x0, #24]
   167cc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   167d0:	add	x1, x1, #0x8a8
   167d4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   167d8:	ldr	x0, [x0, #3936]
   167dc:	ldr	x0, [x0]
   167e0:	bl	6a10 <PyErr_Format@plt>
   167e4:	ldr	x0, [x19]
   167e8:	sub	x0, x0, #0x1
   167ec:	str	x0, [x19]
   167f0:	mov	x20, #0x0                   	// #0
   167f4:	cbz	x0, 168d0 <PyFloat_FromString@plt+0xfe40>
   167f8:	ldr	x21, [sp, #32]
   167fc:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16800:	mov	x2, x20
   16804:	mov	x1, x19
   16808:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1680c:	add	x0, x0, #0x320
   16810:	add	x0, x0, #0x1a0
   16814:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16818:	mov	x19, x0
   1681c:	cbz	x0, 16974 <PyFloat_FromString@plt+0xfee4>
   16820:	str	x21, [sp, #32]
   16824:	b	16788 <PyFloat_FromString@plt+0xfcf8>
   16828:	ldr	x0, [x21]
   1682c:	add	x0, x0, #0x1
   16830:	str	x0, [x21]
   16834:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16838:	add	x0, x0, #0x320
   1683c:	add	x0, x0, #0x1a0
   16840:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   16844:	mov	x20, x0
   16848:	cbz	x0, 168e0 <PyFloat_FromString@plt+0xfe50>
   1684c:	add	x4, sp, #0x3c
   16850:	ldr	x3, [sp, #64]
   16854:	add	x3, x3, #0x10
   16858:	add	x2, x21, #0x18
   1685c:	add	x1, x19, #0x18
   16860:	add	x0, x0, #0x18
   16864:	bl	2fc54 <PyInit__decimal@@Base+0x15ab4>
   16868:	ldr	x0, [x19]
   1686c:	sub	x0, x0, #0x1
   16870:	str	x0, [x19]
   16874:	cbz	x0, 16924 <PyFloat_FromString@plt+0xfe94>
   16878:	ldr	x0, [x21]
   1687c:	sub	x0, x0, #0x1
   16880:	str	x0, [x21]
   16884:	cbz	x0, 16930 <PyFloat_FromString@plt+0xfea0>
   16888:	ldr	w1, [sp, #60]
   1688c:	ldr	x0, [sp, #64]
   16890:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   16894:	cbnz	w0, 1693c <PyFloat_FromString@plt+0xfeac>
   16898:	ldr	x21, [sp, #32]
   1689c:	mov	x0, x20
   168a0:	ldp	x19, x20, [sp, #16]
   168a4:	ldp	x29, x30, [sp], #80
   168a8:	ret
   168ac:	mov	x2, x20
   168b0:	mov	x1, x21
   168b4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   168b8:	add	x0, x0, #0x320
   168bc:	add	x0, x0, #0x1a0
   168c0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   168c4:	mov	x21, x0
   168c8:	cbnz	x0, 16834 <PyFloat_FromString@plt+0xfda4>
   168cc:	b	167e4 <PyFloat_FromString@plt+0xfd54>
   168d0:	mov	x0, x19
   168d4:	bl	65d0 <_Py_Dealloc@plt>
   168d8:	ldr	x21, [sp, #32]
   168dc:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   168e0:	ldr	x0, [x19]
   168e4:	sub	x0, x0, #0x1
   168e8:	str	x0, [x19]
   168ec:	cbz	x0, 16908 <PyFloat_FromString@plt+0xfe78>
   168f0:	ldr	x0, [x21]
   168f4:	sub	x0, x0, #0x1
   168f8:	str	x0, [x21]
   168fc:	cbz	x0, 16914 <PyFloat_FromString@plt+0xfe84>
   16900:	ldr	x21, [sp, #32]
   16904:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16908:	mov	x0, x19
   1690c:	bl	65d0 <_Py_Dealloc@plt>
   16910:	b	168f0 <PyFloat_FromString@plt+0xfe60>
   16914:	mov	x0, x21
   16918:	bl	65d0 <_Py_Dealloc@plt>
   1691c:	ldr	x21, [sp, #32]
   16920:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16924:	mov	x0, x19
   16928:	bl	65d0 <_Py_Dealloc@plt>
   1692c:	b	16878 <PyFloat_FromString@plt+0xfde8>
   16930:	mov	x0, x21
   16934:	bl	65d0 <_Py_Dealloc@plt>
   16938:	b	16888 <PyFloat_FromString@plt+0xfdf8>
   1693c:	ldr	x0, [x20]
   16940:	sub	x0, x0, #0x1
   16944:	str	x0, [x20]
   16948:	cbz	x0, 16958 <PyFloat_FromString@plt+0xfec8>
   1694c:	mov	x20, #0x0                   	// #0
   16950:	ldr	x21, [sp, #32]
   16954:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16958:	mov	x0, x20
   1695c:	bl	65d0 <_Py_Dealloc@plt>
   16960:	mov	x20, #0x0                   	// #0
   16964:	ldr	x21, [sp, #32]
   16968:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   1696c:	mov	x20, #0x0                   	// #0
   16970:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16974:	mov	x20, x0
   16978:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   1697c:	mov	x20, #0x0                   	// #0
   16980:	b	1689c <PyFloat_FromString@plt+0xfe0c>
   16984:	stp	x29, x30, [sp, #-80]!
   16988:	mov	x29, sp
   1698c:	stp	x19, x20, [sp, #16]
   16990:	mov	x19, x0
   16994:	mov	x0, x1
   16998:	mov	x1, x2
   1699c:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   169a0:	ldr	x2, [x2, #4008]
   169a4:	str	x2, [sp, #64]
   169a8:	str	wzr, [sp, #60]
   169ac:	add	x5, sp, #0x40
   169b0:	add	x4, sp, #0x48
   169b4:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   169b8:	add	x3, x3, #0x9a0
   169bc:	add	x3, x3, #0x3c8
   169c0:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   169c4:	add	x2, x2, #0xa08
   169c8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   169cc:	cbz	w0, 16cd0 <PyFloat_FromString@plt+0x10240>
   169d0:	ldr	x1, [sp, #64]
   169d4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   169d8:	ldr	x0, [x0, #4008]
   169dc:	cmp	x1, x0
   169e0:	b.eq	16a68 <PyFloat_FromString@plt+0xffd8>  // b.none
   169e4:	ldr	x0, [x1, #8]
   169e8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   169ec:	add	x1, x1, #0x320
   169f0:	cmp	x0, x1
   169f4:	b.eq	16a08 <PyFloat_FromString@plt+0xff78>  // b.none
   169f8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   169fc:	add	x1, x1, #0x320
   16a00:	bl	69c0 <PyType_IsSubtype@plt>
   16a04:	cbz	w0, 16abc <PyFloat_FromString@plt+0x1002c>
   16a08:	ldr	x0, [x19, #8]
   16a0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16a10:	add	x1, x1, #0x320
   16a14:	add	x1, x1, #0x1a0
   16a18:	cmp	x0, x1
   16a1c:	b.eq	16adc <PyFloat_FromString@plt+0x1004c>  // b.none
   16a20:	ldr	x20, [sp, #64]
   16a24:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16a28:	add	x1, x1, #0x320
   16a2c:	add	x1, x1, #0x1a0
   16a30:	bl	69c0 <PyType_IsSubtype@plt>
   16a34:	cbnz	w0, 16adc <PyFloat_FromString@plt+0x1004c>
   16a38:	ldr	x0, [x19, #8]
   16a3c:	ldr	x1, [x0, #168]
   16a40:	tbnz	w1, #24, 16b64 <PyFloat_FromString@plt+0x100d4>
   16a44:	ldr	x2, [x0, #24]
   16a48:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16a4c:	add	x1, x1, #0x8a8
   16a50:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16a54:	ldr	x0, [x0, #3936]
   16a58:	ldr	x0, [x0]
   16a5c:	bl	6a10 <PyErr_Format@plt>
   16a60:	mov	x20, #0x0                   	// #0
   16a64:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16a68:	add	x2, sp, #0x30
   16a6c:	mov	x1, #0x0                   	// #0
   16a70:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   16a74:	ldr	x0, [x0, #1816]
   16a78:	bl	6740 <PyContextVar_Get@plt>
   16a7c:	tbnz	w0, #31, 16ce0 <PyFloat_FromString@plt+0x10250>
   16a80:	ldr	x20, [sp, #48]
   16a84:	cbz	x20, 16aa8 <PyFloat_FromString@plt+0x10018>
   16a88:	str	x20, [sp, #64]
   16a8c:	ldr	x0, [x20]
   16a90:	sub	x0, x0, #0x1
   16a94:	str	x0, [x20]
   16a98:	cbnz	x0, 16a08 <PyFloat_FromString@plt+0xff78>
   16a9c:	mov	x0, x20
   16aa0:	bl	65d0 <_Py_Dealloc@plt>
   16aa4:	b	16a08 <PyFloat_FromString@plt+0xff78>
   16aa8:	bl	7abc <PyFloat_FromString@plt+0x102c>
   16aac:	mov	x20, x0
   16ab0:	str	x0, [sp, #64]
   16ab4:	cbnz	x0, 16a8c <PyFloat_FromString@plt+0xfffc>
   16ab8:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16abc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16ac0:	add	x1, x1, #0x928
   16ac4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16ac8:	ldr	x0, [x0, #3936]
   16acc:	ldr	x0, [x0]
   16ad0:	bl	6650 <PyErr_SetString@plt>
   16ad4:	mov	x20, #0x0                   	// #0
   16ad8:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16adc:	str	x21, [sp, #32]
   16ae0:	ldr	x0, [x19]
   16ae4:	add	x0, x0, #0x1
   16ae8:	str	x0, [x19]
   16aec:	ldr	x21, [sp, #72]
   16af0:	ldr	x0, [x21, #8]
   16af4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16af8:	add	x1, x1, #0x320
   16afc:	add	x1, x1, #0x1a0
   16b00:	cmp	x0, x1
   16b04:	b.eq	16b8c <PyFloat_FromString@plt+0x100fc>  // b.none
   16b08:	ldr	x20, [sp, #64]
   16b0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16b10:	add	x1, x1, #0x320
   16b14:	add	x1, x1, #0x1a0
   16b18:	bl	69c0 <PyType_IsSubtype@plt>
   16b1c:	cbnz	w0, 16b8c <PyFloat_FromString@plt+0x100fc>
   16b20:	ldr	x0, [x21, #8]
   16b24:	ldr	x1, [x0, #168]
   16b28:	tbnz	w1, #24, 16c10 <PyFloat_FromString@plt+0x10180>
   16b2c:	ldr	x2, [x0, #24]
   16b30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16b34:	add	x1, x1, #0x8a8
   16b38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16b3c:	ldr	x0, [x0, #3936]
   16b40:	ldr	x0, [x0]
   16b44:	bl	6a10 <PyErr_Format@plt>
   16b48:	ldr	x0, [x19]
   16b4c:	sub	x0, x0, #0x1
   16b50:	str	x0, [x19]
   16b54:	mov	x20, #0x0                   	// #0
   16b58:	cbz	x0, 16c34 <PyFloat_FromString@plt+0x101a4>
   16b5c:	ldr	x21, [sp, #32]
   16b60:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16b64:	mov	x2, x20
   16b68:	mov	x1, x19
   16b6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16b70:	add	x0, x0, #0x320
   16b74:	add	x0, x0, #0x1a0
   16b78:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16b7c:	mov	x19, x0
   16b80:	cbz	x0, 16cd8 <PyFloat_FromString@plt+0x10248>
   16b84:	str	x21, [sp, #32]
   16b88:	b	16aec <PyFloat_FromString@plt+0x1005c>
   16b8c:	ldr	x0, [x21]
   16b90:	add	x0, x0, #0x1
   16b94:	str	x0, [x21]
   16b98:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16b9c:	add	x0, x0, #0x320
   16ba0:	add	x0, x0, #0x1a0
   16ba4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   16ba8:	mov	x20, x0
   16bac:	cbz	x0, 16c44 <PyFloat_FromString@plt+0x101b4>
   16bb0:	add	x4, sp, #0x3c
   16bb4:	ldr	x3, [sp, #64]
   16bb8:	add	x3, x3, #0x10
   16bbc:	add	x2, x21, #0x18
   16bc0:	add	x1, x19, #0x18
   16bc4:	add	x0, x0, #0x18
   16bc8:	bl	2feac <PyInit__decimal@@Base+0x15d0c>
   16bcc:	ldr	x0, [x19]
   16bd0:	sub	x0, x0, #0x1
   16bd4:	str	x0, [x19]
   16bd8:	cbz	x0, 16c88 <PyFloat_FromString@plt+0x101f8>
   16bdc:	ldr	x0, [x21]
   16be0:	sub	x0, x0, #0x1
   16be4:	str	x0, [x21]
   16be8:	cbz	x0, 16c94 <PyFloat_FromString@plt+0x10204>
   16bec:	ldr	w1, [sp, #60]
   16bf0:	ldr	x0, [sp, #64]
   16bf4:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   16bf8:	cbnz	w0, 16ca0 <PyFloat_FromString@plt+0x10210>
   16bfc:	ldr	x21, [sp, #32]
   16c00:	mov	x0, x20
   16c04:	ldp	x19, x20, [sp, #16]
   16c08:	ldp	x29, x30, [sp], #80
   16c0c:	ret
   16c10:	mov	x2, x20
   16c14:	mov	x1, x21
   16c18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16c1c:	add	x0, x0, #0x320
   16c20:	add	x0, x0, #0x1a0
   16c24:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16c28:	mov	x21, x0
   16c2c:	cbnz	x0, 16b98 <PyFloat_FromString@plt+0x10108>
   16c30:	b	16b48 <PyFloat_FromString@plt+0x100b8>
   16c34:	mov	x0, x19
   16c38:	bl	65d0 <_Py_Dealloc@plt>
   16c3c:	ldr	x21, [sp, #32]
   16c40:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16c44:	ldr	x0, [x19]
   16c48:	sub	x0, x0, #0x1
   16c4c:	str	x0, [x19]
   16c50:	cbz	x0, 16c6c <PyFloat_FromString@plt+0x101dc>
   16c54:	ldr	x0, [x21]
   16c58:	sub	x0, x0, #0x1
   16c5c:	str	x0, [x21]
   16c60:	cbz	x0, 16c78 <PyFloat_FromString@plt+0x101e8>
   16c64:	ldr	x21, [sp, #32]
   16c68:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16c6c:	mov	x0, x19
   16c70:	bl	65d0 <_Py_Dealloc@plt>
   16c74:	b	16c54 <PyFloat_FromString@plt+0x101c4>
   16c78:	mov	x0, x21
   16c7c:	bl	65d0 <_Py_Dealloc@plt>
   16c80:	ldr	x21, [sp, #32]
   16c84:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16c88:	mov	x0, x19
   16c8c:	bl	65d0 <_Py_Dealloc@plt>
   16c90:	b	16bdc <PyFloat_FromString@plt+0x1014c>
   16c94:	mov	x0, x21
   16c98:	bl	65d0 <_Py_Dealloc@plt>
   16c9c:	b	16bec <PyFloat_FromString@plt+0x1015c>
   16ca0:	ldr	x0, [x20]
   16ca4:	sub	x0, x0, #0x1
   16ca8:	str	x0, [x20]
   16cac:	cbz	x0, 16cbc <PyFloat_FromString@plt+0x1022c>
   16cb0:	mov	x20, #0x0                   	// #0
   16cb4:	ldr	x21, [sp, #32]
   16cb8:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16cbc:	mov	x0, x20
   16cc0:	bl	65d0 <_Py_Dealloc@plt>
   16cc4:	mov	x20, #0x0                   	// #0
   16cc8:	ldr	x21, [sp, #32]
   16ccc:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16cd0:	mov	x20, #0x0                   	// #0
   16cd4:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16cd8:	mov	x20, x0
   16cdc:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16ce0:	mov	x20, #0x0                   	// #0
   16ce4:	b	16c00 <PyFloat_FromString@plt+0x10170>
   16ce8:	stp	x29, x30, [sp, #-80]!
   16cec:	mov	x29, sp
   16cf0:	stp	x19, x20, [sp, #16]
   16cf4:	mov	x19, x0
   16cf8:	mov	x0, x1
   16cfc:	mov	x1, x2
   16d00:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   16d04:	ldr	x2, [x2, #4008]
   16d08:	str	x2, [sp, #64]
   16d0c:	str	wzr, [sp, #60]
   16d10:	add	x5, sp, #0x40
   16d14:	add	x4, sp, #0x48
   16d18:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   16d1c:	add	x3, x3, #0x9a0
   16d20:	add	x3, x3, #0x3e0
   16d24:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   16d28:	add	x2, x2, #0xa08
   16d2c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16d30:	cbz	w0, 17034 <PyFloat_FromString@plt+0x105a4>
   16d34:	ldr	x1, [sp, #64]
   16d38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16d3c:	ldr	x0, [x0, #4008]
   16d40:	cmp	x1, x0
   16d44:	b.eq	16dcc <PyFloat_FromString@plt+0x1033c>  // b.none
   16d48:	ldr	x0, [x1, #8]
   16d4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16d50:	add	x1, x1, #0x320
   16d54:	cmp	x0, x1
   16d58:	b.eq	16d6c <PyFloat_FromString@plt+0x102dc>  // b.none
   16d5c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16d60:	add	x1, x1, #0x320
   16d64:	bl	69c0 <PyType_IsSubtype@plt>
   16d68:	cbz	w0, 16e20 <PyFloat_FromString@plt+0x10390>
   16d6c:	ldr	x0, [x19, #8]
   16d70:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16d74:	add	x1, x1, #0x320
   16d78:	add	x1, x1, #0x1a0
   16d7c:	cmp	x0, x1
   16d80:	b.eq	16e40 <PyFloat_FromString@plt+0x103b0>  // b.none
   16d84:	ldr	x20, [sp, #64]
   16d88:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16d8c:	add	x1, x1, #0x320
   16d90:	add	x1, x1, #0x1a0
   16d94:	bl	69c0 <PyType_IsSubtype@plt>
   16d98:	cbnz	w0, 16e40 <PyFloat_FromString@plt+0x103b0>
   16d9c:	ldr	x0, [x19, #8]
   16da0:	ldr	x1, [x0, #168]
   16da4:	tbnz	w1, #24, 16ec8 <PyFloat_FromString@plt+0x10438>
   16da8:	ldr	x2, [x0, #24]
   16dac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16db0:	add	x1, x1, #0x8a8
   16db4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16db8:	ldr	x0, [x0, #3936]
   16dbc:	ldr	x0, [x0]
   16dc0:	bl	6a10 <PyErr_Format@plt>
   16dc4:	mov	x20, #0x0                   	// #0
   16dc8:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16dcc:	add	x2, sp, #0x30
   16dd0:	mov	x1, #0x0                   	// #0
   16dd4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   16dd8:	ldr	x0, [x0, #1816]
   16ddc:	bl	6740 <PyContextVar_Get@plt>
   16de0:	tbnz	w0, #31, 17044 <PyFloat_FromString@plt+0x105b4>
   16de4:	ldr	x20, [sp, #48]
   16de8:	cbz	x20, 16e0c <PyFloat_FromString@plt+0x1037c>
   16dec:	str	x20, [sp, #64]
   16df0:	ldr	x0, [x20]
   16df4:	sub	x0, x0, #0x1
   16df8:	str	x0, [x20]
   16dfc:	cbnz	x0, 16d6c <PyFloat_FromString@plt+0x102dc>
   16e00:	mov	x0, x20
   16e04:	bl	65d0 <_Py_Dealloc@plt>
   16e08:	b	16d6c <PyFloat_FromString@plt+0x102dc>
   16e0c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   16e10:	mov	x20, x0
   16e14:	str	x0, [sp, #64]
   16e18:	cbnz	x0, 16df0 <PyFloat_FromString@plt+0x10360>
   16e1c:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16e20:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16e24:	add	x1, x1, #0x928
   16e28:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16e2c:	ldr	x0, [x0, #3936]
   16e30:	ldr	x0, [x0]
   16e34:	bl	6650 <PyErr_SetString@plt>
   16e38:	mov	x20, #0x0                   	// #0
   16e3c:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16e40:	str	x21, [sp, #32]
   16e44:	ldr	x0, [x19]
   16e48:	add	x0, x0, #0x1
   16e4c:	str	x0, [x19]
   16e50:	ldr	x21, [sp, #72]
   16e54:	ldr	x0, [x21, #8]
   16e58:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16e5c:	add	x1, x1, #0x320
   16e60:	add	x1, x1, #0x1a0
   16e64:	cmp	x0, x1
   16e68:	b.eq	16ef0 <PyFloat_FromString@plt+0x10460>  // b.none
   16e6c:	ldr	x20, [sp, #64]
   16e70:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   16e74:	add	x1, x1, #0x320
   16e78:	add	x1, x1, #0x1a0
   16e7c:	bl	69c0 <PyType_IsSubtype@plt>
   16e80:	cbnz	w0, 16ef0 <PyFloat_FromString@plt+0x10460>
   16e84:	ldr	x0, [x21, #8]
   16e88:	ldr	x1, [x0, #168]
   16e8c:	tbnz	w1, #24, 16f74 <PyFloat_FromString@plt+0x104e4>
   16e90:	ldr	x2, [x0, #24]
   16e94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   16e98:	add	x1, x1, #0x8a8
   16e9c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   16ea0:	ldr	x0, [x0, #3936]
   16ea4:	ldr	x0, [x0]
   16ea8:	bl	6a10 <PyErr_Format@plt>
   16eac:	ldr	x0, [x19]
   16eb0:	sub	x0, x0, #0x1
   16eb4:	str	x0, [x19]
   16eb8:	mov	x20, #0x0                   	// #0
   16ebc:	cbz	x0, 16f98 <PyFloat_FromString@plt+0x10508>
   16ec0:	ldr	x21, [sp, #32]
   16ec4:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16ec8:	mov	x2, x20
   16ecc:	mov	x1, x19
   16ed0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16ed4:	add	x0, x0, #0x320
   16ed8:	add	x0, x0, #0x1a0
   16edc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16ee0:	mov	x19, x0
   16ee4:	cbz	x0, 1703c <PyFloat_FromString@plt+0x105ac>
   16ee8:	str	x21, [sp, #32]
   16eec:	b	16e50 <PyFloat_FromString@plt+0x103c0>
   16ef0:	ldr	x0, [x21]
   16ef4:	add	x0, x0, #0x1
   16ef8:	str	x0, [x21]
   16efc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16f00:	add	x0, x0, #0x320
   16f04:	add	x0, x0, #0x1a0
   16f08:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   16f0c:	mov	x20, x0
   16f10:	cbz	x0, 16fa8 <PyFloat_FromString@plt+0x10518>
   16f14:	add	x4, sp, #0x3c
   16f18:	ldr	x3, [sp, #64]
   16f1c:	add	x3, x3, #0x10
   16f20:	add	x2, x21, #0x18
   16f24:	add	x1, x19, #0x18
   16f28:	add	x0, x0, #0x18
   16f2c:	bl	2fd80 <PyInit__decimal@@Base+0x15be0>
   16f30:	ldr	x0, [x19]
   16f34:	sub	x0, x0, #0x1
   16f38:	str	x0, [x19]
   16f3c:	cbz	x0, 16fec <PyFloat_FromString@plt+0x1055c>
   16f40:	ldr	x0, [x21]
   16f44:	sub	x0, x0, #0x1
   16f48:	str	x0, [x21]
   16f4c:	cbz	x0, 16ff8 <PyFloat_FromString@plt+0x10568>
   16f50:	ldr	w1, [sp, #60]
   16f54:	ldr	x0, [sp, #64]
   16f58:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   16f5c:	cbnz	w0, 17004 <PyFloat_FromString@plt+0x10574>
   16f60:	ldr	x21, [sp, #32]
   16f64:	mov	x0, x20
   16f68:	ldp	x19, x20, [sp, #16]
   16f6c:	ldp	x29, x30, [sp], #80
   16f70:	ret
   16f74:	mov	x2, x20
   16f78:	mov	x1, x21
   16f7c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   16f80:	add	x0, x0, #0x320
   16f84:	add	x0, x0, #0x1a0
   16f88:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   16f8c:	mov	x21, x0
   16f90:	cbnz	x0, 16efc <PyFloat_FromString@plt+0x1046c>
   16f94:	b	16eac <PyFloat_FromString@plt+0x1041c>
   16f98:	mov	x0, x19
   16f9c:	bl	65d0 <_Py_Dealloc@plt>
   16fa0:	ldr	x21, [sp, #32]
   16fa4:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16fa8:	ldr	x0, [x19]
   16fac:	sub	x0, x0, #0x1
   16fb0:	str	x0, [x19]
   16fb4:	cbz	x0, 16fd0 <PyFloat_FromString@plt+0x10540>
   16fb8:	ldr	x0, [x21]
   16fbc:	sub	x0, x0, #0x1
   16fc0:	str	x0, [x21]
   16fc4:	cbz	x0, 16fdc <PyFloat_FromString@plt+0x1054c>
   16fc8:	ldr	x21, [sp, #32]
   16fcc:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16fd0:	mov	x0, x19
   16fd4:	bl	65d0 <_Py_Dealloc@plt>
   16fd8:	b	16fb8 <PyFloat_FromString@plt+0x10528>
   16fdc:	mov	x0, x21
   16fe0:	bl	65d0 <_Py_Dealloc@plt>
   16fe4:	ldr	x21, [sp, #32]
   16fe8:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   16fec:	mov	x0, x19
   16ff0:	bl	65d0 <_Py_Dealloc@plt>
   16ff4:	b	16f40 <PyFloat_FromString@plt+0x104b0>
   16ff8:	mov	x0, x21
   16ffc:	bl	65d0 <_Py_Dealloc@plt>
   17000:	b	16f50 <PyFloat_FromString@plt+0x104c0>
   17004:	ldr	x0, [x20]
   17008:	sub	x0, x0, #0x1
   1700c:	str	x0, [x20]
   17010:	cbz	x0, 17020 <PyFloat_FromString@plt+0x10590>
   17014:	mov	x20, #0x0                   	// #0
   17018:	ldr	x21, [sp, #32]
   1701c:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   17020:	mov	x0, x20
   17024:	bl	65d0 <_Py_Dealloc@plt>
   17028:	mov	x20, #0x0                   	// #0
   1702c:	ldr	x21, [sp, #32]
   17030:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   17034:	mov	x20, #0x0                   	// #0
   17038:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   1703c:	mov	x20, x0
   17040:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   17044:	mov	x20, #0x0                   	// #0
   17048:	b	16f64 <PyFloat_FromString@plt+0x104d4>
   1704c:	stp	x29, x30, [sp, #-80]!
   17050:	mov	x29, sp
   17054:	stp	x19, x20, [sp, #16]
   17058:	mov	x19, x0
   1705c:	mov	x0, x1
   17060:	mov	x1, x2
   17064:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   17068:	ldr	x2, [x2, #4008]
   1706c:	str	x2, [sp, #64]
   17070:	str	wzr, [sp, #60]
   17074:	add	x5, sp, #0x40
   17078:	add	x4, sp, #0x48
   1707c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   17080:	add	x3, x3, #0x9a0
   17084:	add	x3, x3, #0x3f8
   17088:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1708c:	add	x2, x2, #0xa08
   17090:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17094:	cbz	w0, 17398 <PyFloat_FromString@plt+0x10908>
   17098:	ldr	x1, [sp, #64]
   1709c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   170a0:	ldr	x0, [x0, #4008]
   170a4:	cmp	x1, x0
   170a8:	b.eq	17130 <PyFloat_FromString@plt+0x106a0>  // b.none
   170ac:	ldr	x0, [x1, #8]
   170b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   170b4:	add	x1, x1, #0x320
   170b8:	cmp	x0, x1
   170bc:	b.eq	170d0 <PyFloat_FromString@plt+0x10640>  // b.none
   170c0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   170c4:	add	x1, x1, #0x320
   170c8:	bl	69c0 <PyType_IsSubtype@plt>
   170cc:	cbz	w0, 17184 <PyFloat_FromString@plt+0x106f4>
   170d0:	ldr	x0, [x19, #8]
   170d4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   170d8:	add	x1, x1, #0x320
   170dc:	add	x1, x1, #0x1a0
   170e0:	cmp	x0, x1
   170e4:	b.eq	171a4 <PyFloat_FromString@plt+0x10714>  // b.none
   170e8:	ldr	x20, [sp, #64]
   170ec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   170f0:	add	x1, x1, #0x320
   170f4:	add	x1, x1, #0x1a0
   170f8:	bl	69c0 <PyType_IsSubtype@plt>
   170fc:	cbnz	w0, 171a4 <PyFloat_FromString@plt+0x10714>
   17100:	ldr	x0, [x19, #8]
   17104:	ldr	x1, [x0, #168]
   17108:	tbnz	w1, #24, 1722c <PyFloat_FromString@plt+0x1079c>
   1710c:	ldr	x2, [x0, #24]
   17110:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17114:	add	x1, x1, #0x8a8
   17118:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1711c:	ldr	x0, [x0, #3936]
   17120:	ldr	x0, [x0]
   17124:	bl	6a10 <PyErr_Format@plt>
   17128:	mov	x20, #0x0                   	// #0
   1712c:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17130:	add	x2, sp, #0x30
   17134:	mov	x1, #0x0                   	// #0
   17138:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1713c:	ldr	x0, [x0, #1816]
   17140:	bl	6740 <PyContextVar_Get@plt>
   17144:	tbnz	w0, #31, 173a8 <PyFloat_FromString@plt+0x10918>
   17148:	ldr	x20, [sp, #48]
   1714c:	cbz	x20, 17170 <PyFloat_FromString@plt+0x106e0>
   17150:	str	x20, [sp, #64]
   17154:	ldr	x0, [x20]
   17158:	sub	x0, x0, #0x1
   1715c:	str	x0, [x20]
   17160:	cbnz	x0, 170d0 <PyFloat_FromString@plt+0x10640>
   17164:	mov	x0, x20
   17168:	bl	65d0 <_Py_Dealloc@plt>
   1716c:	b	170d0 <PyFloat_FromString@plt+0x10640>
   17170:	bl	7abc <PyFloat_FromString@plt+0x102c>
   17174:	mov	x20, x0
   17178:	str	x0, [sp, #64]
   1717c:	cbnz	x0, 17154 <PyFloat_FromString@plt+0x106c4>
   17180:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17184:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17188:	add	x1, x1, #0x928
   1718c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17190:	ldr	x0, [x0, #3936]
   17194:	ldr	x0, [x0]
   17198:	bl	6650 <PyErr_SetString@plt>
   1719c:	mov	x20, #0x0                   	// #0
   171a0:	b	172c8 <PyFloat_FromString@plt+0x10838>
   171a4:	str	x21, [sp, #32]
   171a8:	ldr	x0, [x19]
   171ac:	add	x0, x0, #0x1
   171b0:	str	x0, [x19]
   171b4:	ldr	x21, [sp, #72]
   171b8:	ldr	x0, [x21, #8]
   171bc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   171c0:	add	x1, x1, #0x320
   171c4:	add	x1, x1, #0x1a0
   171c8:	cmp	x0, x1
   171cc:	b.eq	17254 <PyFloat_FromString@plt+0x107c4>  // b.none
   171d0:	ldr	x20, [sp, #64]
   171d4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   171d8:	add	x1, x1, #0x320
   171dc:	add	x1, x1, #0x1a0
   171e0:	bl	69c0 <PyType_IsSubtype@plt>
   171e4:	cbnz	w0, 17254 <PyFloat_FromString@plt+0x107c4>
   171e8:	ldr	x0, [x21, #8]
   171ec:	ldr	x1, [x0, #168]
   171f0:	tbnz	w1, #24, 172d8 <PyFloat_FromString@plt+0x10848>
   171f4:	ldr	x2, [x0, #24]
   171f8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   171fc:	add	x1, x1, #0x8a8
   17200:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17204:	ldr	x0, [x0, #3936]
   17208:	ldr	x0, [x0]
   1720c:	bl	6a10 <PyErr_Format@plt>
   17210:	ldr	x0, [x19]
   17214:	sub	x0, x0, #0x1
   17218:	str	x0, [x19]
   1721c:	mov	x20, #0x0                   	// #0
   17220:	cbz	x0, 172fc <PyFloat_FromString@plt+0x1086c>
   17224:	ldr	x21, [sp, #32]
   17228:	b	172c8 <PyFloat_FromString@plt+0x10838>
   1722c:	mov	x2, x20
   17230:	mov	x1, x19
   17234:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17238:	add	x0, x0, #0x320
   1723c:	add	x0, x0, #0x1a0
   17240:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   17244:	mov	x19, x0
   17248:	cbz	x0, 173a0 <PyFloat_FromString@plt+0x10910>
   1724c:	str	x21, [sp, #32]
   17250:	b	171b4 <PyFloat_FromString@plt+0x10724>
   17254:	ldr	x0, [x21]
   17258:	add	x0, x0, #0x1
   1725c:	str	x0, [x21]
   17260:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17264:	add	x0, x0, #0x320
   17268:	add	x0, x0, #0x1a0
   1726c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   17270:	mov	x20, x0
   17274:	cbz	x0, 1730c <PyFloat_FromString@plt+0x1087c>
   17278:	add	x4, sp, #0x3c
   1727c:	ldr	x3, [sp, #64]
   17280:	add	x3, x3, #0x10
   17284:	add	x2, x21, #0x18
   17288:	add	x1, x19, #0x18
   1728c:	add	x0, x0, #0x18
   17290:	bl	316dc <PyInit__decimal@@Base+0x1753c>
   17294:	ldr	x0, [x19]
   17298:	sub	x0, x0, #0x1
   1729c:	str	x0, [x19]
   172a0:	cbz	x0, 17350 <PyFloat_FromString@plt+0x108c0>
   172a4:	ldr	x0, [x21]
   172a8:	sub	x0, x0, #0x1
   172ac:	str	x0, [x21]
   172b0:	cbz	x0, 1735c <PyFloat_FromString@plt+0x108cc>
   172b4:	ldr	w1, [sp, #60]
   172b8:	ldr	x0, [sp, #64]
   172bc:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   172c0:	cbnz	w0, 17368 <PyFloat_FromString@plt+0x108d8>
   172c4:	ldr	x21, [sp, #32]
   172c8:	mov	x0, x20
   172cc:	ldp	x19, x20, [sp, #16]
   172d0:	ldp	x29, x30, [sp], #80
   172d4:	ret
   172d8:	mov	x2, x20
   172dc:	mov	x1, x21
   172e0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   172e4:	add	x0, x0, #0x320
   172e8:	add	x0, x0, #0x1a0
   172ec:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   172f0:	mov	x21, x0
   172f4:	cbnz	x0, 17260 <PyFloat_FromString@plt+0x107d0>
   172f8:	b	17210 <PyFloat_FromString@plt+0x10780>
   172fc:	mov	x0, x19
   17300:	bl	65d0 <_Py_Dealloc@plt>
   17304:	ldr	x21, [sp, #32]
   17308:	b	172c8 <PyFloat_FromString@plt+0x10838>
   1730c:	ldr	x0, [x19]
   17310:	sub	x0, x0, #0x1
   17314:	str	x0, [x19]
   17318:	cbz	x0, 17334 <PyFloat_FromString@plt+0x108a4>
   1731c:	ldr	x0, [x21]
   17320:	sub	x0, x0, #0x1
   17324:	str	x0, [x21]
   17328:	cbz	x0, 17340 <PyFloat_FromString@plt+0x108b0>
   1732c:	ldr	x21, [sp, #32]
   17330:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17334:	mov	x0, x19
   17338:	bl	65d0 <_Py_Dealloc@plt>
   1733c:	b	1731c <PyFloat_FromString@plt+0x1088c>
   17340:	mov	x0, x21
   17344:	bl	65d0 <_Py_Dealloc@plt>
   17348:	ldr	x21, [sp, #32]
   1734c:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17350:	mov	x0, x19
   17354:	bl	65d0 <_Py_Dealloc@plt>
   17358:	b	172a4 <PyFloat_FromString@plt+0x10814>
   1735c:	mov	x0, x21
   17360:	bl	65d0 <_Py_Dealloc@plt>
   17364:	b	172b4 <PyFloat_FromString@plt+0x10824>
   17368:	ldr	x0, [x20]
   1736c:	sub	x0, x0, #0x1
   17370:	str	x0, [x20]
   17374:	cbz	x0, 17384 <PyFloat_FromString@plt+0x108f4>
   17378:	mov	x20, #0x0                   	// #0
   1737c:	ldr	x21, [sp, #32]
   17380:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17384:	mov	x0, x20
   17388:	bl	65d0 <_Py_Dealloc@plt>
   1738c:	mov	x20, #0x0                   	// #0
   17390:	ldr	x21, [sp, #32]
   17394:	b	172c8 <PyFloat_FromString@plt+0x10838>
   17398:	mov	x20, #0x0                   	// #0
   1739c:	b	172c8 <PyFloat_FromString@plt+0x10838>
   173a0:	mov	x20, x0
   173a4:	b	172c8 <PyFloat_FromString@plt+0x10838>
   173a8:	mov	x20, #0x0                   	// #0
   173ac:	b	172c8 <PyFloat_FromString@plt+0x10838>
   173b0:	stp	x29, x30, [sp, #-80]!
   173b4:	mov	x29, sp
   173b8:	stp	x19, x20, [sp, #16]
   173bc:	mov	x19, x0
   173c0:	mov	x0, x1
   173c4:	mov	x1, x2
   173c8:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   173cc:	ldr	x2, [x2, #4008]
   173d0:	str	x2, [sp, #64]
   173d4:	str	wzr, [sp, #60]
   173d8:	add	x5, sp, #0x40
   173dc:	add	x4, sp, #0x48
   173e0:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   173e4:	add	x3, x3, #0x9a0
   173e8:	add	x3, x3, #0x410
   173ec:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   173f0:	add	x2, x2, #0xa08
   173f4:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   173f8:	cbz	w0, 176fc <PyFloat_FromString@plt+0x10c6c>
   173fc:	ldr	x1, [sp, #64]
   17400:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17404:	ldr	x0, [x0, #4008]
   17408:	cmp	x1, x0
   1740c:	b.eq	17494 <PyFloat_FromString@plt+0x10a04>  // b.none
   17410:	ldr	x0, [x1, #8]
   17414:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17418:	add	x1, x1, #0x320
   1741c:	cmp	x0, x1
   17420:	b.eq	17434 <PyFloat_FromString@plt+0x109a4>  // b.none
   17424:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17428:	add	x1, x1, #0x320
   1742c:	bl	69c0 <PyType_IsSubtype@plt>
   17430:	cbz	w0, 174e8 <PyFloat_FromString@plt+0x10a58>
   17434:	ldr	x0, [x19, #8]
   17438:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1743c:	add	x1, x1, #0x320
   17440:	add	x1, x1, #0x1a0
   17444:	cmp	x0, x1
   17448:	b.eq	17508 <PyFloat_FromString@plt+0x10a78>  // b.none
   1744c:	ldr	x20, [sp, #64]
   17450:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17454:	add	x1, x1, #0x320
   17458:	add	x1, x1, #0x1a0
   1745c:	bl	69c0 <PyType_IsSubtype@plt>
   17460:	cbnz	w0, 17508 <PyFloat_FromString@plt+0x10a78>
   17464:	ldr	x0, [x19, #8]
   17468:	ldr	x1, [x0, #168]
   1746c:	tbnz	w1, #24, 17590 <PyFloat_FromString@plt+0x10b00>
   17470:	ldr	x2, [x0, #24]
   17474:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17478:	add	x1, x1, #0x8a8
   1747c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17480:	ldr	x0, [x0, #3936]
   17484:	ldr	x0, [x0]
   17488:	bl	6a10 <PyErr_Format@plt>
   1748c:	mov	x20, #0x0                   	// #0
   17490:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17494:	add	x2, sp, #0x30
   17498:	mov	x1, #0x0                   	// #0
   1749c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   174a0:	ldr	x0, [x0, #1816]
   174a4:	bl	6740 <PyContextVar_Get@plt>
   174a8:	tbnz	w0, #31, 1770c <PyFloat_FromString@plt+0x10c7c>
   174ac:	ldr	x20, [sp, #48]
   174b0:	cbz	x20, 174d4 <PyFloat_FromString@plt+0x10a44>
   174b4:	str	x20, [sp, #64]
   174b8:	ldr	x0, [x20]
   174bc:	sub	x0, x0, #0x1
   174c0:	str	x0, [x20]
   174c4:	cbnz	x0, 17434 <PyFloat_FromString@plt+0x109a4>
   174c8:	mov	x0, x20
   174cc:	bl	65d0 <_Py_Dealloc@plt>
   174d0:	b	17434 <PyFloat_FromString@plt+0x109a4>
   174d4:	bl	7abc <PyFloat_FromString@plt+0x102c>
   174d8:	mov	x20, x0
   174dc:	str	x0, [sp, #64]
   174e0:	cbnz	x0, 174b8 <PyFloat_FromString@plt+0x10a28>
   174e4:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   174e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   174ec:	add	x1, x1, #0x928
   174f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   174f4:	ldr	x0, [x0, #3936]
   174f8:	ldr	x0, [x0]
   174fc:	bl	6650 <PyErr_SetString@plt>
   17500:	mov	x20, #0x0                   	// #0
   17504:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17508:	str	x21, [sp, #32]
   1750c:	ldr	x0, [x19]
   17510:	add	x0, x0, #0x1
   17514:	str	x0, [x19]
   17518:	ldr	x21, [sp, #72]
   1751c:	ldr	x0, [x21, #8]
   17520:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17524:	add	x1, x1, #0x320
   17528:	add	x1, x1, #0x1a0
   1752c:	cmp	x0, x1
   17530:	b.eq	175b8 <PyFloat_FromString@plt+0x10b28>  // b.none
   17534:	ldr	x20, [sp, #64]
   17538:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1753c:	add	x1, x1, #0x320
   17540:	add	x1, x1, #0x1a0
   17544:	bl	69c0 <PyType_IsSubtype@plt>
   17548:	cbnz	w0, 175b8 <PyFloat_FromString@plt+0x10b28>
   1754c:	ldr	x0, [x21, #8]
   17550:	ldr	x1, [x0, #168]
   17554:	tbnz	w1, #24, 1763c <PyFloat_FromString@plt+0x10bac>
   17558:	ldr	x2, [x0, #24]
   1755c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17560:	add	x1, x1, #0x8a8
   17564:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17568:	ldr	x0, [x0, #3936]
   1756c:	ldr	x0, [x0]
   17570:	bl	6a10 <PyErr_Format@plt>
   17574:	ldr	x0, [x19]
   17578:	sub	x0, x0, #0x1
   1757c:	str	x0, [x19]
   17580:	mov	x20, #0x0                   	// #0
   17584:	cbz	x0, 17660 <PyFloat_FromString@plt+0x10bd0>
   17588:	ldr	x21, [sp, #32]
   1758c:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17590:	mov	x2, x20
   17594:	mov	x1, x19
   17598:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1759c:	add	x0, x0, #0x320
   175a0:	add	x0, x0, #0x1a0
   175a4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   175a8:	mov	x19, x0
   175ac:	cbz	x0, 17704 <PyFloat_FromString@plt+0x10c74>
   175b0:	str	x21, [sp, #32]
   175b4:	b	17518 <PyFloat_FromString@plt+0x10a88>
   175b8:	ldr	x0, [x21]
   175bc:	add	x0, x0, #0x1
   175c0:	str	x0, [x21]
   175c4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   175c8:	add	x0, x0, #0x320
   175cc:	add	x0, x0, #0x1a0
   175d0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   175d4:	mov	x20, x0
   175d8:	cbz	x0, 17670 <PyFloat_FromString@plt+0x10be0>
   175dc:	add	x4, sp, #0x3c
   175e0:	ldr	x3, [sp, #64]
   175e4:	add	x3, x3, #0x10
   175e8:	add	x2, x21, #0x18
   175ec:	add	x1, x19, #0x18
   175f0:	add	x0, x0, #0x18
   175f4:	bl	37b80 <PyInit__decimal@@Base+0x1d9e0>
   175f8:	ldr	x0, [x19]
   175fc:	sub	x0, x0, #0x1
   17600:	str	x0, [x19]
   17604:	cbz	x0, 176b4 <PyFloat_FromString@plt+0x10c24>
   17608:	ldr	x0, [x21]
   1760c:	sub	x0, x0, #0x1
   17610:	str	x0, [x21]
   17614:	cbz	x0, 176c0 <PyFloat_FromString@plt+0x10c30>
   17618:	ldr	w1, [sp, #60]
   1761c:	ldr	x0, [sp, #64]
   17620:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   17624:	cbnz	w0, 176cc <PyFloat_FromString@plt+0x10c3c>
   17628:	ldr	x21, [sp, #32]
   1762c:	mov	x0, x20
   17630:	ldp	x19, x20, [sp, #16]
   17634:	ldp	x29, x30, [sp], #80
   17638:	ret
   1763c:	mov	x2, x20
   17640:	mov	x1, x21
   17644:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17648:	add	x0, x0, #0x320
   1764c:	add	x0, x0, #0x1a0
   17650:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   17654:	mov	x21, x0
   17658:	cbnz	x0, 175c4 <PyFloat_FromString@plt+0x10b34>
   1765c:	b	17574 <PyFloat_FromString@plt+0x10ae4>
   17660:	mov	x0, x19
   17664:	bl	65d0 <_Py_Dealloc@plt>
   17668:	ldr	x21, [sp, #32]
   1766c:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17670:	ldr	x0, [x19]
   17674:	sub	x0, x0, #0x1
   17678:	str	x0, [x19]
   1767c:	cbz	x0, 17698 <PyFloat_FromString@plt+0x10c08>
   17680:	ldr	x0, [x21]
   17684:	sub	x0, x0, #0x1
   17688:	str	x0, [x21]
   1768c:	cbz	x0, 176a4 <PyFloat_FromString@plt+0x10c14>
   17690:	ldr	x21, [sp, #32]
   17694:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17698:	mov	x0, x19
   1769c:	bl	65d0 <_Py_Dealloc@plt>
   176a0:	b	17680 <PyFloat_FromString@plt+0x10bf0>
   176a4:	mov	x0, x21
   176a8:	bl	65d0 <_Py_Dealloc@plt>
   176ac:	ldr	x21, [sp, #32]
   176b0:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   176b4:	mov	x0, x19
   176b8:	bl	65d0 <_Py_Dealloc@plt>
   176bc:	b	17608 <PyFloat_FromString@plt+0x10b78>
   176c0:	mov	x0, x21
   176c4:	bl	65d0 <_Py_Dealloc@plt>
   176c8:	b	17618 <PyFloat_FromString@plt+0x10b88>
   176cc:	ldr	x0, [x20]
   176d0:	sub	x0, x0, #0x1
   176d4:	str	x0, [x20]
   176d8:	cbz	x0, 176e8 <PyFloat_FromString@plt+0x10c58>
   176dc:	mov	x20, #0x0                   	// #0
   176e0:	ldr	x21, [sp, #32]
   176e4:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   176e8:	mov	x0, x20
   176ec:	bl	65d0 <_Py_Dealloc@plt>
   176f0:	mov	x20, #0x0                   	// #0
   176f4:	ldr	x21, [sp, #32]
   176f8:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   176fc:	mov	x20, #0x0                   	// #0
   17700:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17704:	mov	x20, x0
   17708:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   1770c:	mov	x20, #0x0                   	// #0
   17710:	b	1762c <PyFloat_FromString@plt+0x10b9c>
   17714:	stp	x29, x30, [sp, #-80]!
   17718:	mov	x29, sp
   1771c:	stp	x19, x20, [sp, #16]
   17720:	mov	x19, x0
   17724:	mov	x0, x1
   17728:	mov	x1, x2
   1772c:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   17730:	ldr	x2, [x2, #4008]
   17734:	str	x2, [sp, #64]
   17738:	str	wzr, [sp, #60]
   1773c:	add	x5, sp, #0x40
   17740:	add	x4, sp, #0x48
   17744:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   17748:	add	x3, x3, #0x9a0
   1774c:	add	x3, x3, #0x428
   17750:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   17754:	add	x2, x2, #0xa08
   17758:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1775c:	cbz	w0, 17a60 <PyFloat_FromString@plt+0x10fd0>
   17760:	ldr	x1, [sp, #64]
   17764:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17768:	ldr	x0, [x0, #4008]
   1776c:	cmp	x1, x0
   17770:	b.eq	177f8 <PyFloat_FromString@plt+0x10d68>  // b.none
   17774:	ldr	x0, [x1, #8]
   17778:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1777c:	add	x1, x1, #0x320
   17780:	cmp	x0, x1
   17784:	b.eq	17798 <PyFloat_FromString@plt+0x10d08>  // b.none
   17788:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1778c:	add	x1, x1, #0x320
   17790:	bl	69c0 <PyType_IsSubtype@plt>
   17794:	cbz	w0, 1784c <PyFloat_FromString@plt+0x10dbc>
   17798:	ldr	x0, [x19, #8]
   1779c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   177a0:	add	x1, x1, #0x320
   177a4:	add	x1, x1, #0x1a0
   177a8:	cmp	x0, x1
   177ac:	b.eq	1786c <PyFloat_FromString@plt+0x10ddc>  // b.none
   177b0:	ldr	x20, [sp, #64]
   177b4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   177b8:	add	x1, x1, #0x320
   177bc:	add	x1, x1, #0x1a0
   177c0:	bl	69c0 <PyType_IsSubtype@plt>
   177c4:	cbnz	w0, 1786c <PyFloat_FromString@plt+0x10ddc>
   177c8:	ldr	x0, [x19, #8]
   177cc:	ldr	x1, [x0, #168]
   177d0:	tbnz	w1, #24, 178f4 <PyFloat_FromString@plt+0x10e64>
   177d4:	ldr	x2, [x0, #24]
   177d8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   177dc:	add	x1, x1, #0x8a8
   177e0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   177e4:	ldr	x0, [x0, #3936]
   177e8:	ldr	x0, [x0]
   177ec:	bl	6a10 <PyErr_Format@plt>
   177f0:	mov	x20, #0x0                   	// #0
   177f4:	b	17990 <PyFloat_FromString@plt+0x10f00>
   177f8:	add	x2, sp, #0x30
   177fc:	mov	x1, #0x0                   	// #0
   17800:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   17804:	ldr	x0, [x0, #1816]
   17808:	bl	6740 <PyContextVar_Get@plt>
   1780c:	tbnz	w0, #31, 17a70 <PyFloat_FromString@plt+0x10fe0>
   17810:	ldr	x20, [sp, #48]
   17814:	cbz	x20, 17838 <PyFloat_FromString@plt+0x10da8>
   17818:	str	x20, [sp, #64]
   1781c:	ldr	x0, [x20]
   17820:	sub	x0, x0, #0x1
   17824:	str	x0, [x20]
   17828:	cbnz	x0, 17798 <PyFloat_FromString@plt+0x10d08>
   1782c:	mov	x0, x20
   17830:	bl	65d0 <_Py_Dealloc@plt>
   17834:	b	17798 <PyFloat_FromString@plt+0x10d08>
   17838:	bl	7abc <PyFloat_FromString@plt+0x102c>
   1783c:	mov	x20, x0
   17840:	str	x0, [sp, #64]
   17844:	cbnz	x0, 1781c <PyFloat_FromString@plt+0x10d8c>
   17848:	b	17990 <PyFloat_FromString@plt+0x10f00>
   1784c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17850:	add	x1, x1, #0x928
   17854:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17858:	ldr	x0, [x0, #3936]
   1785c:	ldr	x0, [x0]
   17860:	bl	6650 <PyErr_SetString@plt>
   17864:	mov	x20, #0x0                   	// #0
   17868:	b	17990 <PyFloat_FromString@plt+0x10f00>
   1786c:	str	x21, [sp, #32]
   17870:	ldr	x0, [x19]
   17874:	add	x0, x0, #0x1
   17878:	str	x0, [x19]
   1787c:	ldr	x21, [sp, #72]
   17880:	ldr	x0, [x21, #8]
   17884:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17888:	add	x1, x1, #0x320
   1788c:	add	x1, x1, #0x1a0
   17890:	cmp	x0, x1
   17894:	b.eq	1791c <PyFloat_FromString@plt+0x10e8c>  // b.none
   17898:	ldr	x20, [sp, #64]
   1789c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   178a0:	add	x1, x1, #0x320
   178a4:	add	x1, x1, #0x1a0
   178a8:	bl	69c0 <PyType_IsSubtype@plt>
   178ac:	cbnz	w0, 1791c <PyFloat_FromString@plt+0x10e8c>
   178b0:	ldr	x0, [x21, #8]
   178b4:	ldr	x1, [x0, #168]
   178b8:	tbnz	w1, #24, 179a0 <PyFloat_FromString@plt+0x10f10>
   178bc:	ldr	x2, [x0, #24]
   178c0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   178c4:	add	x1, x1, #0x8a8
   178c8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   178cc:	ldr	x0, [x0, #3936]
   178d0:	ldr	x0, [x0]
   178d4:	bl	6a10 <PyErr_Format@plt>
   178d8:	ldr	x0, [x19]
   178dc:	sub	x0, x0, #0x1
   178e0:	str	x0, [x19]
   178e4:	mov	x20, #0x0                   	// #0
   178e8:	cbz	x0, 179c4 <PyFloat_FromString@plt+0x10f34>
   178ec:	ldr	x21, [sp, #32]
   178f0:	b	17990 <PyFloat_FromString@plt+0x10f00>
   178f4:	mov	x2, x20
   178f8:	mov	x1, x19
   178fc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17900:	add	x0, x0, #0x320
   17904:	add	x0, x0, #0x1a0
   17908:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1790c:	mov	x19, x0
   17910:	cbz	x0, 17a68 <PyFloat_FromString@plt+0x10fd8>
   17914:	str	x21, [sp, #32]
   17918:	b	1787c <PyFloat_FromString@plt+0x10dec>
   1791c:	ldr	x0, [x21]
   17920:	add	x0, x0, #0x1
   17924:	str	x0, [x21]
   17928:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1792c:	add	x0, x0, #0x320
   17930:	add	x0, x0, #0x1a0
   17934:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   17938:	mov	x20, x0
   1793c:	cbz	x0, 179d4 <PyFloat_FromString@plt+0x10f44>
   17940:	add	x4, sp, #0x3c
   17944:	ldr	x3, [sp, #64]
   17948:	add	x3, x3, #0x10
   1794c:	add	x2, x21, #0x18
   17950:	add	x1, x19, #0x18
   17954:	add	x0, x0, #0x18
   17958:	bl	2d178 <PyInit__decimal@@Base+0x12fd8>
   1795c:	ldr	x0, [x19]
   17960:	sub	x0, x0, #0x1
   17964:	str	x0, [x19]
   17968:	cbz	x0, 17a18 <PyFloat_FromString@plt+0x10f88>
   1796c:	ldr	x0, [x21]
   17970:	sub	x0, x0, #0x1
   17974:	str	x0, [x21]
   17978:	cbz	x0, 17a24 <PyFloat_FromString@plt+0x10f94>
   1797c:	ldr	w1, [sp, #60]
   17980:	ldr	x0, [sp, #64]
   17984:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   17988:	cbnz	w0, 17a30 <PyFloat_FromString@plt+0x10fa0>
   1798c:	ldr	x21, [sp, #32]
   17990:	mov	x0, x20
   17994:	ldp	x19, x20, [sp, #16]
   17998:	ldp	x29, x30, [sp], #80
   1799c:	ret
   179a0:	mov	x2, x20
   179a4:	mov	x1, x21
   179a8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   179ac:	add	x0, x0, #0x320
   179b0:	add	x0, x0, #0x1a0
   179b4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   179b8:	mov	x21, x0
   179bc:	cbnz	x0, 17928 <PyFloat_FromString@plt+0x10e98>
   179c0:	b	178d8 <PyFloat_FromString@plt+0x10e48>
   179c4:	mov	x0, x19
   179c8:	bl	65d0 <_Py_Dealloc@plt>
   179cc:	ldr	x21, [sp, #32]
   179d0:	b	17990 <PyFloat_FromString@plt+0x10f00>
   179d4:	ldr	x0, [x19]
   179d8:	sub	x0, x0, #0x1
   179dc:	str	x0, [x19]
   179e0:	cbz	x0, 179fc <PyFloat_FromString@plt+0x10f6c>
   179e4:	ldr	x0, [x21]
   179e8:	sub	x0, x0, #0x1
   179ec:	str	x0, [x21]
   179f0:	cbz	x0, 17a08 <PyFloat_FromString@plt+0x10f78>
   179f4:	ldr	x21, [sp, #32]
   179f8:	b	17990 <PyFloat_FromString@plt+0x10f00>
   179fc:	mov	x0, x19
   17a00:	bl	65d0 <_Py_Dealloc@plt>
   17a04:	b	179e4 <PyFloat_FromString@plt+0x10f54>
   17a08:	mov	x0, x21
   17a0c:	bl	65d0 <_Py_Dealloc@plt>
   17a10:	ldr	x21, [sp, #32]
   17a14:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a18:	mov	x0, x19
   17a1c:	bl	65d0 <_Py_Dealloc@plt>
   17a20:	b	1796c <PyFloat_FromString@plt+0x10edc>
   17a24:	mov	x0, x21
   17a28:	bl	65d0 <_Py_Dealloc@plt>
   17a2c:	b	1797c <PyFloat_FromString@plt+0x10eec>
   17a30:	ldr	x0, [x20]
   17a34:	sub	x0, x0, #0x1
   17a38:	str	x0, [x20]
   17a3c:	cbz	x0, 17a4c <PyFloat_FromString@plt+0x10fbc>
   17a40:	mov	x20, #0x0                   	// #0
   17a44:	ldr	x21, [sp, #32]
   17a48:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a4c:	mov	x0, x20
   17a50:	bl	65d0 <_Py_Dealloc@plt>
   17a54:	mov	x20, #0x0                   	// #0
   17a58:	ldr	x21, [sp, #32]
   17a5c:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a60:	mov	x20, #0x0                   	// #0
   17a64:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a68:	mov	x20, x0
   17a6c:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a70:	mov	x20, #0x0                   	// #0
   17a74:	b	17990 <PyFloat_FromString@plt+0x10f00>
   17a78:	stp	x29, x30, [sp, #-80]!
   17a7c:	mov	x29, sp
   17a80:	stp	x19, x20, [sp, #16]
   17a84:	mov	x19, x0
   17a88:	mov	x0, x1
   17a8c:	mov	x1, x2
   17a90:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   17a94:	ldr	x2, [x2, #4008]
   17a98:	str	x2, [sp, #64]
   17a9c:	str	wzr, [sp, #60]
   17aa0:	add	x5, sp, #0x40
   17aa4:	add	x4, sp, #0x48
   17aa8:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   17aac:	add	x3, x3, #0x9a0
   17ab0:	add	x3, x3, #0x440
   17ab4:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   17ab8:	add	x2, x2, #0xa08
   17abc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17ac0:	cbz	w0, 17dc4 <PyFloat_FromString@plt+0x11334>
   17ac4:	ldr	x1, [sp, #64]
   17ac8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17acc:	ldr	x0, [x0, #4008]
   17ad0:	cmp	x1, x0
   17ad4:	b.eq	17b5c <PyFloat_FromString@plt+0x110cc>  // b.none
   17ad8:	ldr	x0, [x1, #8]
   17adc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17ae0:	add	x1, x1, #0x320
   17ae4:	cmp	x0, x1
   17ae8:	b.eq	17afc <PyFloat_FromString@plt+0x1106c>  // b.none
   17aec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17af0:	add	x1, x1, #0x320
   17af4:	bl	69c0 <PyType_IsSubtype@plt>
   17af8:	cbz	w0, 17bb0 <PyFloat_FromString@plt+0x11120>
   17afc:	ldr	x0, [x19, #8]
   17b00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17b04:	add	x1, x1, #0x320
   17b08:	add	x1, x1, #0x1a0
   17b0c:	cmp	x0, x1
   17b10:	b.eq	17bd0 <PyFloat_FromString@plt+0x11140>  // b.none
   17b14:	ldr	x20, [sp, #64]
   17b18:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17b1c:	add	x1, x1, #0x320
   17b20:	add	x1, x1, #0x1a0
   17b24:	bl	69c0 <PyType_IsSubtype@plt>
   17b28:	cbnz	w0, 17bd0 <PyFloat_FromString@plt+0x11140>
   17b2c:	ldr	x0, [x19, #8]
   17b30:	ldr	x1, [x0, #168]
   17b34:	tbnz	w1, #24, 17c58 <PyFloat_FromString@plt+0x111c8>
   17b38:	ldr	x2, [x0, #24]
   17b3c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17b40:	add	x1, x1, #0x8a8
   17b44:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17b48:	ldr	x0, [x0, #3936]
   17b4c:	ldr	x0, [x0]
   17b50:	bl	6a10 <PyErr_Format@plt>
   17b54:	mov	x20, #0x0                   	// #0
   17b58:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17b5c:	add	x2, sp, #0x30
   17b60:	mov	x1, #0x0                   	// #0
   17b64:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   17b68:	ldr	x0, [x0, #1816]
   17b6c:	bl	6740 <PyContextVar_Get@plt>
   17b70:	tbnz	w0, #31, 17dd4 <PyFloat_FromString@plt+0x11344>
   17b74:	ldr	x20, [sp, #48]
   17b78:	cbz	x20, 17b9c <PyFloat_FromString@plt+0x1110c>
   17b7c:	str	x20, [sp, #64]
   17b80:	ldr	x0, [x20]
   17b84:	sub	x0, x0, #0x1
   17b88:	str	x0, [x20]
   17b8c:	cbnz	x0, 17afc <PyFloat_FromString@plt+0x1106c>
   17b90:	mov	x0, x20
   17b94:	bl	65d0 <_Py_Dealloc@plt>
   17b98:	b	17afc <PyFloat_FromString@plt+0x1106c>
   17b9c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   17ba0:	mov	x20, x0
   17ba4:	str	x0, [sp, #64]
   17ba8:	cbnz	x0, 17b80 <PyFloat_FromString@plt+0x110f0>
   17bac:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17bb0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17bb4:	add	x1, x1, #0x928
   17bb8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17bbc:	ldr	x0, [x0, #3936]
   17bc0:	ldr	x0, [x0]
   17bc4:	bl	6650 <PyErr_SetString@plt>
   17bc8:	mov	x20, #0x0                   	// #0
   17bcc:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17bd0:	str	x21, [sp, #32]
   17bd4:	ldr	x0, [x19]
   17bd8:	add	x0, x0, #0x1
   17bdc:	str	x0, [x19]
   17be0:	ldr	x21, [sp, #72]
   17be4:	ldr	x0, [x21, #8]
   17be8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17bec:	add	x1, x1, #0x320
   17bf0:	add	x1, x1, #0x1a0
   17bf4:	cmp	x0, x1
   17bf8:	b.eq	17c80 <PyFloat_FromString@plt+0x111f0>  // b.none
   17bfc:	ldr	x20, [sp, #64]
   17c00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17c04:	add	x1, x1, #0x320
   17c08:	add	x1, x1, #0x1a0
   17c0c:	bl	69c0 <PyType_IsSubtype@plt>
   17c10:	cbnz	w0, 17c80 <PyFloat_FromString@plt+0x111f0>
   17c14:	ldr	x0, [x21, #8]
   17c18:	ldr	x1, [x0, #168]
   17c1c:	tbnz	w1, #24, 17d04 <PyFloat_FromString@plt+0x11274>
   17c20:	ldr	x2, [x0, #24]
   17c24:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17c28:	add	x1, x1, #0x8a8
   17c2c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17c30:	ldr	x0, [x0, #3936]
   17c34:	ldr	x0, [x0]
   17c38:	bl	6a10 <PyErr_Format@plt>
   17c3c:	ldr	x0, [x19]
   17c40:	sub	x0, x0, #0x1
   17c44:	str	x0, [x19]
   17c48:	mov	x20, #0x0                   	// #0
   17c4c:	cbz	x0, 17d28 <PyFloat_FromString@plt+0x11298>
   17c50:	ldr	x21, [sp, #32]
   17c54:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17c58:	mov	x2, x20
   17c5c:	mov	x1, x19
   17c60:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17c64:	add	x0, x0, #0x320
   17c68:	add	x0, x0, #0x1a0
   17c6c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   17c70:	mov	x19, x0
   17c74:	cbz	x0, 17dcc <PyFloat_FromString@plt+0x1133c>
   17c78:	str	x21, [sp, #32]
   17c7c:	b	17be0 <PyFloat_FromString@plt+0x11150>
   17c80:	ldr	x0, [x21]
   17c84:	add	x0, x0, #0x1
   17c88:	str	x0, [x21]
   17c8c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17c90:	add	x0, x0, #0x320
   17c94:	add	x0, x0, #0x1a0
   17c98:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   17c9c:	mov	x20, x0
   17ca0:	cbz	x0, 17d38 <PyFloat_FromString@plt+0x112a8>
   17ca4:	add	x4, sp, #0x3c
   17ca8:	ldr	x3, [sp, #64]
   17cac:	add	x3, x3, #0x10
   17cb0:	add	x2, x21, #0x18
   17cb4:	add	x1, x19, #0x18
   17cb8:	add	x0, x0, #0x18
   17cbc:	bl	2dce0 <PyInit__decimal@@Base+0x13b40>
   17cc0:	ldr	x0, [x19]
   17cc4:	sub	x0, x0, #0x1
   17cc8:	str	x0, [x19]
   17ccc:	cbz	x0, 17d7c <PyFloat_FromString@plt+0x112ec>
   17cd0:	ldr	x0, [x21]
   17cd4:	sub	x0, x0, #0x1
   17cd8:	str	x0, [x21]
   17cdc:	cbz	x0, 17d88 <PyFloat_FromString@plt+0x112f8>
   17ce0:	ldr	w1, [sp, #60]
   17ce4:	ldr	x0, [sp, #64]
   17ce8:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   17cec:	cbnz	w0, 17d94 <PyFloat_FromString@plt+0x11304>
   17cf0:	ldr	x21, [sp, #32]
   17cf4:	mov	x0, x20
   17cf8:	ldp	x19, x20, [sp, #16]
   17cfc:	ldp	x29, x30, [sp], #80
   17d00:	ret
   17d04:	mov	x2, x20
   17d08:	mov	x1, x21
   17d0c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17d10:	add	x0, x0, #0x320
   17d14:	add	x0, x0, #0x1a0
   17d18:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   17d1c:	mov	x21, x0
   17d20:	cbnz	x0, 17c8c <PyFloat_FromString@plt+0x111fc>
   17d24:	b	17c3c <PyFloat_FromString@plt+0x111ac>
   17d28:	mov	x0, x19
   17d2c:	bl	65d0 <_Py_Dealloc@plt>
   17d30:	ldr	x21, [sp, #32]
   17d34:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17d38:	ldr	x0, [x19]
   17d3c:	sub	x0, x0, #0x1
   17d40:	str	x0, [x19]
   17d44:	cbz	x0, 17d60 <PyFloat_FromString@plt+0x112d0>
   17d48:	ldr	x0, [x21]
   17d4c:	sub	x0, x0, #0x1
   17d50:	str	x0, [x21]
   17d54:	cbz	x0, 17d6c <PyFloat_FromString@plt+0x112dc>
   17d58:	ldr	x21, [sp, #32]
   17d5c:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17d60:	mov	x0, x19
   17d64:	bl	65d0 <_Py_Dealloc@plt>
   17d68:	b	17d48 <PyFloat_FromString@plt+0x112b8>
   17d6c:	mov	x0, x21
   17d70:	bl	65d0 <_Py_Dealloc@plt>
   17d74:	ldr	x21, [sp, #32]
   17d78:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17d7c:	mov	x0, x19
   17d80:	bl	65d0 <_Py_Dealloc@plt>
   17d84:	b	17cd0 <PyFloat_FromString@plt+0x11240>
   17d88:	mov	x0, x21
   17d8c:	bl	65d0 <_Py_Dealloc@plt>
   17d90:	b	17ce0 <PyFloat_FromString@plt+0x11250>
   17d94:	ldr	x0, [x20]
   17d98:	sub	x0, x0, #0x1
   17d9c:	str	x0, [x20]
   17da0:	cbz	x0, 17db0 <PyFloat_FromString@plt+0x11320>
   17da4:	mov	x20, #0x0                   	// #0
   17da8:	ldr	x21, [sp, #32]
   17dac:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17db0:	mov	x0, x20
   17db4:	bl	65d0 <_Py_Dealloc@plt>
   17db8:	mov	x20, #0x0                   	// #0
   17dbc:	ldr	x21, [sp, #32]
   17dc0:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17dc4:	mov	x20, #0x0                   	// #0
   17dc8:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17dcc:	mov	x20, x0
   17dd0:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17dd4:	mov	x20, #0x0                   	// #0
   17dd8:	b	17cf4 <PyFloat_FromString@plt+0x11264>
   17ddc:	stp	x29, x30, [sp, #-80]!
   17de0:	mov	x29, sp
   17de4:	stp	x19, x20, [sp, #16]
   17de8:	mov	x19, x0
   17dec:	mov	x0, x1
   17df0:	mov	x1, x2
   17df4:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   17df8:	ldr	x2, [x2, #4008]
   17dfc:	str	x2, [sp, #64]
   17e00:	str	wzr, [sp, #60]
   17e04:	add	x5, sp, #0x40
   17e08:	add	x4, sp, #0x48
   17e0c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   17e10:	add	x3, x3, #0x9a0
   17e14:	add	x3, x3, #0x458
   17e18:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   17e1c:	add	x2, x2, #0xa08
   17e20:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17e24:	cbz	w0, 18128 <PyFloat_FromString@plt+0x11698>
   17e28:	ldr	x1, [sp, #64]
   17e2c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17e30:	ldr	x0, [x0, #4008]
   17e34:	cmp	x1, x0
   17e38:	b.eq	17ec0 <PyFloat_FromString@plt+0x11430>  // b.none
   17e3c:	ldr	x0, [x1, #8]
   17e40:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17e44:	add	x1, x1, #0x320
   17e48:	cmp	x0, x1
   17e4c:	b.eq	17e60 <PyFloat_FromString@plt+0x113d0>  // b.none
   17e50:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17e54:	add	x1, x1, #0x320
   17e58:	bl	69c0 <PyType_IsSubtype@plt>
   17e5c:	cbz	w0, 17f14 <PyFloat_FromString@plt+0x11484>
   17e60:	ldr	x0, [x19, #8]
   17e64:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17e68:	add	x1, x1, #0x320
   17e6c:	add	x1, x1, #0x1a0
   17e70:	cmp	x0, x1
   17e74:	b.eq	17f34 <PyFloat_FromString@plt+0x114a4>  // b.none
   17e78:	ldr	x20, [sp, #64]
   17e7c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17e80:	add	x1, x1, #0x320
   17e84:	add	x1, x1, #0x1a0
   17e88:	bl	69c0 <PyType_IsSubtype@plt>
   17e8c:	cbnz	w0, 17f34 <PyFloat_FromString@plt+0x114a4>
   17e90:	ldr	x0, [x19, #8]
   17e94:	ldr	x1, [x0, #168]
   17e98:	tbnz	w1, #24, 17fbc <PyFloat_FromString@plt+0x1152c>
   17e9c:	ldr	x2, [x0, #24]
   17ea0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17ea4:	add	x1, x1, #0x8a8
   17ea8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17eac:	ldr	x0, [x0, #3936]
   17eb0:	ldr	x0, [x0]
   17eb4:	bl	6a10 <PyErr_Format@plt>
   17eb8:	mov	x20, #0x0                   	// #0
   17ebc:	b	18058 <PyFloat_FromString@plt+0x115c8>
   17ec0:	add	x2, sp, #0x30
   17ec4:	mov	x1, #0x0                   	// #0
   17ec8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   17ecc:	ldr	x0, [x0, #1816]
   17ed0:	bl	6740 <PyContextVar_Get@plt>
   17ed4:	tbnz	w0, #31, 18138 <PyFloat_FromString@plt+0x116a8>
   17ed8:	ldr	x20, [sp, #48]
   17edc:	cbz	x20, 17f00 <PyFloat_FromString@plt+0x11470>
   17ee0:	str	x20, [sp, #64]
   17ee4:	ldr	x0, [x20]
   17ee8:	sub	x0, x0, #0x1
   17eec:	str	x0, [x20]
   17ef0:	cbnz	x0, 17e60 <PyFloat_FromString@plt+0x113d0>
   17ef4:	mov	x0, x20
   17ef8:	bl	65d0 <_Py_Dealloc@plt>
   17efc:	b	17e60 <PyFloat_FromString@plt+0x113d0>
   17f00:	bl	7abc <PyFloat_FromString@plt+0x102c>
   17f04:	mov	x20, x0
   17f08:	str	x0, [sp, #64]
   17f0c:	cbnz	x0, 17ee4 <PyFloat_FromString@plt+0x11454>
   17f10:	b	18058 <PyFloat_FromString@plt+0x115c8>
   17f14:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17f18:	add	x1, x1, #0x928
   17f1c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17f20:	ldr	x0, [x0, #3936]
   17f24:	ldr	x0, [x0]
   17f28:	bl	6650 <PyErr_SetString@plt>
   17f2c:	mov	x20, #0x0                   	// #0
   17f30:	b	18058 <PyFloat_FromString@plt+0x115c8>
   17f34:	str	x21, [sp, #32]
   17f38:	ldr	x0, [x19]
   17f3c:	add	x0, x0, #0x1
   17f40:	str	x0, [x19]
   17f44:	ldr	x21, [sp, #72]
   17f48:	ldr	x0, [x21, #8]
   17f4c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17f50:	add	x1, x1, #0x320
   17f54:	add	x1, x1, #0x1a0
   17f58:	cmp	x0, x1
   17f5c:	b.eq	17fe4 <PyFloat_FromString@plt+0x11554>  // b.none
   17f60:	ldr	x20, [sp, #64]
   17f64:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   17f68:	add	x1, x1, #0x320
   17f6c:	add	x1, x1, #0x1a0
   17f70:	bl	69c0 <PyType_IsSubtype@plt>
   17f74:	cbnz	w0, 17fe4 <PyFloat_FromString@plt+0x11554>
   17f78:	ldr	x0, [x21, #8]
   17f7c:	ldr	x1, [x0, #168]
   17f80:	tbnz	w1, #24, 18068 <PyFloat_FromString@plt+0x115d8>
   17f84:	ldr	x2, [x0, #24]
   17f88:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   17f8c:	add	x1, x1, #0x8a8
   17f90:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   17f94:	ldr	x0, [x0, #3936]
   17f98:	ldr	x0, [x0]
   17f9c:	bl	6a10 <PyErr_Format@plt>
   17fa0:	ldr	x0, [x19]
   17fa4:	sub	x0, x0, #0x1
   17fa8:	str	x0, [x19]
   17fac:	mov	x20, #0x0                   	// #0
   17fb0:	cbz	x0, 1808c <PyFloat_FromString@plt+0x115fc>
   17fb4:	ldr	x21, [sp, #32]
   17fb8:	b	18058 <PyFloat_FromString@plt+0x115c8>
   17fbc:	mov	x2, x20
   17fc0:	mov	x1, x19
   17fc4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17fc8:	add	x0, x0, #0x320
   17fcc:	add	x0, x0, #0x1a0
   17fd0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   17fd4:	mov	x19, x0
   17fd8:	cbz	x0, 18130 <PyFloat_FromString@plt+0x116a0>
   17fdc:	str	x21, [sp, #32]
   17fe0:	b	17f44 <PyFloat_FromString@plt+0x114b4>
   17fe4:	ldr	x0, [x21]
   17fe8:	add	x0, x0, #0x1
   17fec:	str	x0, [x21]
   17ff0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   17ff4:	add	x0, x0, #0x320
   17ff8:	add	x0, x0, #0x1a0
   17ffc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   18000:	mov	x20, x0
   18004:	cbz	x0, 1809c <PyFloat_FromString@plt+0x1160c>
   18008:	add	x4, sp, #0x3c
   1800c:	ldr	x3, [sp, #64]
   18010:	add	x3, x3, #0x10
   18014:	add	x2, x21, #0x18
   18018:	add	x1, x19, #0x18
   1801c:	add	x0, x0, #0x18
   18020:	bl	2a90c <PyInit__decimal@@Base+0x1076c>
   18024:	ldr	x0, [x19]
   18028:	sub	x0, x0, #0x1
   1802c:	str	x0, [x19]
   18030:	cbz	x0, 180e0 <PyFloat_FromString@plt+0x11650>
   18034:	ldr	x0, [x21]
   18038:	sub	x0, x0, #0x1
   1803c:	str	x0, [x21]
   18040:	cbz	x0, 180ec <PyFloat_FromString@plt+0x1165c>
   18044:	ldr	w1, [sp, #60]
   18048:	ldr	x0, [sp, #64]
   1804c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   18050:	cbnz	w0, 180f8 <PyFloat_FromString@plt+0x11668>
   18054:	ldr	x21, [sp, #32]
   18058:	mov	x0, x20
   1805c:	ldp	x19, x20, [sp, #16]
   18060:	ldp	x29, x30, [sp], #80
   18064:	ret
   18068:	mov	x2, x20
   1806c:	mov	x1, x21
   18070:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18074:	add	x0, x0, #0x320
   18078:	add	x0, x0, #0x1a0
   1807c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18080:	mov	x21, x0
   18084:	cbnz	x0, 17ff0 <PyFloat_FromString@plt+0x11560>
   18088:	b	17fa0 <PyFloat_FromString@plt+0x11510>
   1808c:	mov	x0, x19
   18090:	bl	65d0 <_Py_Dealloc@plt>
   18094:	ldr	x21, [sp, #32]
   18098:	b	18058 <PyFloat_FromString@plt+0x115c8>
   1809c:	ldr	x0, [x19]
   180a0:	sub	x0, x0, #0x1
   180a4:	str	x0, [x19]
   180a8:	cbz	x0, 180c4 <PyFloat_FromString@plt+0x11634>
   180ac:	ldr	x0, [x21]
   180b0:	sub	x0, x0, #0x1
   180b4:	str	x0, [x21]
   180b8:	cbz	x0, 180d0 <PyFloat_FromString@plt+0x11640>
   180bc:	ldr	x21, [sp, #32]
   180c0:	b	18058 <PyFloat_FromString@plt+0x115c8>
   180c4:	mov	x0, x19
   180c8:	bl	65d0 <_Py_Dealloc@plt>
   180cc:	b	180ac <PyFloat_FromString@plt+0x1161c>
   180d0:	mov	x0, x21
   180d4:	bl	65d0 <_Py_Dealloc@plt>
   180d8:	ldr	x21, [sp, #32]
   180dc:	b	18058 <PyFloat_FromString@plt+0x115c8>
   180e0:	mov	x0, x19
   180e4:	bl	65d0 <_Py_Dealloc@plt>
   180e8:	b	18034 <PyFloat_FromString@plt+0x115a4>
   180ec:	mov	x0, x21
   180f0:	bl	65d0 <_Py_Dealloc@plt>
   180f4:	b	18044 <PyFloat_FromString@plt+0x115b4>
   180f8:	ldr	x0, [x20]
   180fc:	sub	x0, x0, #0x1
   18100:	str	x0, [x20]
   18104:	cbz	x0, 18114 <PyFloat_FromString@plt+0x11684>
   18108:	mov	x20, #0x0                   	// #0
   1810c:	ldr	x21, [sp, #32]
   18110:	b	18058 <PyFloat_FromString@plt+0x115c8>
   18114:	mov	x0, x20
   18118:	bl	65d0 <_Py_Dealloc@plt>
   1811c:	mov	x20, #0x0                   	// #0
   18120:	ldr	x21, [sp, #32]
   18124:	b	18058 <PyFloat_FromString@plt+0x115c8>
   18128:	mov	x20, #0x0                   	// #0
   1812c:	b	18058 <PyFloat_FromString@plt+0x115c8>
   18130:	mov	x20, x0
   18134:	b	18058 <PyFloat_FromString@plt+0x115c8>
   18138:	mov	x20, #0x0                   	// #0
   1813c:	b	18058 <PyFloat_FromString@plt+0x115c8>
   18140:	stp	x29, x30, [sp, #-80]!
   18144:	mov	x29, sp
   18148:	stp	x19, x20, [sp, #16]
   1814c:	mov	x19, x0
   18150:	mov	x0, x1
   18154:	mov	x1, x2
   18158:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1815c:	ldr	x2, [x2, #4008]
   18160:	str	x2, [sp, #64]
   18164:	str	wzr, [sp, #60]
   18168:	add	x5, sp, #0x40
   1816c:	add	x4, sp, #0x48
   18170:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   18174:	add	x3, x3, #0x9a0
   18178:	add	x3, x3, #0x470
   1817c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   18180:	add	x2, x2, #0xa08
   18184:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18188:	cbz	w0, 1848c <PyFloat_FromString@plt+0x119fc>
   1818c:	ldr	x1, [sp, #64]
   18190:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18194:	ldr	x0, [x0, #4008]
   18198:	cmp	x1, x0
   1819c:	b.eq	18224 <PyFloat_FromString@plt+0x11794>  // b.none
   181a0:	ldr	x0, [x1, #8]
   181a4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   181a8:	add	x1, x1, #0x320
   181ac:	cmp	x0, x1
   181b0:	b.eq	181c4 <PyFloat_FromString@plt+0x11734>  // b.none
   181b4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   181b8:	add	x1, x1, #0x320
   181bc:	bl	69c0 <PyType_IsSubtype@plt>
   181c0:	cbz	w0, 18278 <PyFloat_FromString@plt+0x117e8>
   181c4:	ldr	x0, [x19, #8]
   181c8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   181cc:	add	x1, x1, #0x320
   181d0:	add	x1, x1, #0x1a0
   181d4:	cmp	x0, x1
   181d8:	b.eq	18298 <PyFloat_FromString@plt+0x11808>  // b.none
   181dc:	ldr	x20, [sp, #64]
   181e0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   181e4:	add	x1, x1, #0x320
   181e8:	add	x1, x1, #0x1a0
   181ec:	bl	69c0 <PyType_IsSubtype@plt>
   181f0:	cbnz	w0, 18298 <PyFloat_FromString@plt+0x11808>
   181f4:	ldr	x0, [x19, #8]
   181f8:	ldr	x1, [x0, #168]
   181fc:	tbnz	w1, #24, 18320 <PyFloat_FromString@plt+0x11890>
   18200:	ldr	x2, [x0, #24]
   18204:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18208:	add	x1, x1, #0x8a8
   1820c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18210:	ldr	x0, [x0, #3936]
   18214:	ldr	x0, [x0]
   18218:	bl	6a10 <PyErr_Format@plt>
   1821c:	mov	x20, #0x0                   	// #0
   18220:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18224:	add	x2, sp, #0x30
   18228:	mov	x1, #0x0                   	// #0
   1822c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   18230:	ldr	x0, [x0, #1816]
   18234:	bl	6740 <PyContextVar_Get@plt>
   18238:	tbnz	w0, #31, 1849c <PyFloat_FromString@plt+0x11a0c>
   1823c:	ldr	x20, [sp, #48]
   18240:	cbz	x20, 18264 <PyFloat_FromString@plt+0x117d4>
   18244:	str	x20, [sp, #64]
   18248:	ldr	x0, [x20]
   1824c:	sub	x0, x0, #0x1
   18250:	str	x0, [x20]
   18254:	cbnz	x0, 181c4 <PyFloat_FromString@plt+0x11734>
   18258:	mov	x0, x20
   1825c:	bl	65d0 <_Py_Dealloc@plt>
   18260:	b	181c4 <PyFloat_FromString@plt+0x11734>
   18264:	bl	7abc <PyFloat_FromString@plt+0x102c>
   18268:	mov	x20, x0
   1826c:	str	x0, [sp, #64]
   18270:	cbnz	x0, 18248 <PyFloat_FromString@plt+0x117b8>
   18274:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18278:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1827c:	add	x1, x1, #0x928
   18280:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18284:	ldr	x0, [x0, #3936]
   18288:	ldr	x0, [x0]
   1828c:	bl	6650 <PyErr_SetString@plt>
   18290:	mov	x20, #0x0                   	// #0
   18294:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18298:	str	x21, [sp, #32]
   1829c:	ldr	x0, [x19]
   182a0:	add	x0, x0, #0x1
   182a4:	str	x0, [x19]
   182a8:	ldr	x21, [sp, #72]
   182ac:	ldr	x0, [x21, #8]
   182b0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   182b4:	add	x1, x1, #0x320
   182b8:	add	x1, x1, #0x1a0
   182bc:	cmp	x0, x1
   182c0:	b.eq	18348 <PyFloat_FromString@plt+0x118b8>  // b.none
   182c4:	ldr	x20, [sp, #64]
   182c8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   182cc:	add	x1, x1, #0x320
   182d0:	add	x1, x1, #0x1a0
   182d4:	bl	69c0 <PyType_IsSubtype@plt>
   182d8:	cbnz	w0, 18348 <PyFloat_FromString@plt+0x118b8>
   182dc:	ldr	x0, [x21, #8]
   182e0:	ldr	x1, [x0, #168]
   182e4:	tbnz	w1, #24, 183cc <PyFloat_FromString@plt+0x1193c>
   182e8:	ldr	x2, [x0, #24]
   182ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   182f0:	add	x1, x1, #0x8a8
   182f4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   182f8:	ldr	x0, [x0, #3936]
   182fc:	ldr	x0, [x0]
   18300:	bl	6a10 <PyErr_Format@plt>
   18304:	ldr	x0, [x19]
   18308:	sub	x0, x0, #0x1
   1830c:	str	x0, [x19]
   18310:	mov	x20, #0x0                   	// #0
   18314:	cbz	x0, 183f0 <PyFloat_FromString@plt+0x11960>
   18318:	ldr	x21, [sp, #32]
   1831c:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18320:	mov	x2, x20
   18324:	mov	x1, x19
   18328:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1832c:	add	x0, x0, #0x320
   18330:	add	x0, x0, #0x1a0
   18334:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18338:	mov	x19, x0
   1833c:	cbz	x0, 18494 <PyFloat_FromString@plt+0x11a04>
   18340:	str	x21, [sp, #32]
   18344:	b	182a8 <PyFloat_FromString@plt+0x11818>
   18348:	ldr	x0, [x21]
   1834c:	add	x0, x0, #0x1
   18350:	str	x0, [x21]
   18354:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18358:	add	x0, x0, #0x320
   1835c:	add	x0, x0, #0x1a0
   18360:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   18364:	mov	x20, x0
   18368:	cbz	x0, 18400 <PyFloat_FromString@plt+0x11970>
   1836c:	add	x4, sp, #0x3c
   18370:	ldr	x3, [sp, #64]
   18374:	add	x3, x3, #0x10
   18378:	add	x2, x21, #0x18
   1837c:	add	x1, x19, #0x18
   18380:	add	x0, x0, #0x18
   18384:	bl	2a884 <PyInit__decimal@@Base+0x106e4>
   18388:	ldr	x0, [x19]
   1838c:	sub	x0, x0, #0x1
   18390:	str	x0, [x19]
   18394:	cbz	x0, 18444 <PyFloat_FromString@plt+0x119b4>
   18398:	ldr	x0, [x21]
   1839c:	sub	x0, x0, #0x1
   183a0:	str	x0, [x21]
   183a4:	cbz	x0, 18450 <PyFloat_FromString@plt+0x119c0>
   183a8:	ldr	w1, [sp, #60]
   183ac:	ldr	x0, [sp, #64]
   183b0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   183b4:	cbnz	w0, 1845c <PyFloat_FromString@plt+0x119cc>
   183b8:	ldr	x21, [sp, #32]
   183bc:	mov	x0, x20
   183c0:	ldp	x19, x20, [sp, #16]
   183c4:	ldp	x29, x30, [sp], #80
   183c8:	ret
   183cc:	mov	x2, x20
   183d0:	mov	x1, x21
   183d4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   183d8:	add	x0, x0, #0x320
   183dc:	add	x0, x0, #0x1a0
   183e0:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   183e4:	mov	x21, x0
   183e8:	cbnz	x0, 18354 <PyFloat_FromString@plt+0x118c4>
   183ec:	b	18304 <PyFloat_FromString@plt+0x11874>
   183f0:	mov	x0, x19
   183f4:	bl	65d0 <_Py_Dealloc@plt>
   183f8:	ldr	x21, [sp, #32]
   183fc:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18400:	ldr	x0, [x19]
   18404:	sub	x0, x0, #0x1
   18408:	str	x0, [x19]
   1840c:	cbz	x0, 18428 <PyFloat_FromString@plt+0x11998>
   18410:	ldr	x0, [x21]
   18414:	sub	x0, x0, #0x1
   18418:	str	x0, [x21]
   1841c:	cbz	x0, 18434 <PyFloat_FromString@plt+0x119a4>
   18420:	ldr	x21, [sp, #32]
   18424:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18428:	mov	x0, x19
   1842c:	bl	65d0 <_Py_Dealloc@plt>
   18430:	b	18410 <PyFloat_FromString@plt+0x11980>
   18434:	mov	x0, x21
   18438:	bl	65d0 <_Py_Dealloc@plt>
   1843c:	ldr	x21, [sp, #32]
   18440:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18444:	mov	x0, x19
   18448:	bl	65d0 <_Py_Dealloc@plt>
   1844c:	b	18398 <PyFloat_FromString@plt+0x11908>
   18450:	mov	x0, x21
   18454:	bl	65d0 <_Py_Dealloc@plt>
   18458:	b	183a8 <PyFloat_FromString@plt+0x11918>
   1845c:	ldr	x0, [x20]
   18460:	sub	x0, x0, #0x1
   18464:	str	x0, [x20]
   18468:	cbz	x0, 18478 <PyFloat_FromString@plt+0x119e8>
   1846c:	mov	x20, #0x0                   	// #0
   18470:	ldr	x21, [sp, #32]
   18474:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18478:	mov	x0, x20
   1847c:	bl	65d0 <_Py_Dealloc@plt>
   18480:	mov	x20, #0x0                   	// #0
   18484:	ldr	x21, [sp, #32]
   18488:	b	183bc <PyFloat_FromString@plt+0x1192c>
   1848c:	mov	x20, #0x0                   	// #0
   18490:	b	183bc <PyFloat_FromString@plt+0x1192c>
   18494:	mov	x20, x0
   18498:	b	183bc <PyFloat_FromString@plt+0x1192c>
   1849c:	mov	x20, #0x0                   	// #0
   184a0:	b	183bc <PyFloat_FromString@plt+0x1192c>
   184a4:	stp	x29, x30, [sp, #-80]!
   184a8:	mov	x29, sp
   184ac:	stp	x19, x20, [sp, #16]
   184b0:	mov	x19, x0
   184b4:	mov	x0, x1
   184b8:	mov	x1, x2
   184bc:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   184c0:	ldr	x2, [x2, #4008]
   184c4:	str	x2, [sp, #64]
   184c8:	str	wzr, [sp, #60]
   184cc:	add	x5, sp, #0x40
   184d0:	add	x4, sp, #0x48
   184d4:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   184d8:	add	x3, x3, #0x9a0
   184dc:	add	x3, x3, #0x488
   184e0:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   184e4:	add	x2, x2, #0xa08
   184e8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   184ec:	cbz	w0, 187f0 <PyFloat_FromString@plt+0x11d60>
   184f0:	ldr	x1, [sp, #64]
   184f4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   184f8:	ldr	x0, [x0, #4008]
   184fc:	cmp	x1, x0
   18500:	b.eq	18588 <PyFloat_FromString@plt+0x11af8>  // b.none
   18504:	ldr	x0, [x1, #8]
   18508:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1850c:	add	x1, x1, #0x320
   18510:	cmp	x0, x1
   18514:	b.eq	18528 <PyFloat_FromString@plt+0x11a98>  // b.none
   18518:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1851c:	add	x1, x1, #0x320
   18520:	bl	69c0 <PyType_IsSubtype@plt>
   18524:	cbz	w0, 185dc <PyFloat_FromString@plt+0x11b4c>
   18528:	ldr	x0, [x19, #8]
   1852c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18530:	add	x1, x1, #0x320
   18534:	add	x1, x1, #0x1a0
   18538:	cmp	x0, x1
   1853c:	b.eq	185fc <PyFloat_FromString@plt+0x11b6c>  // b.none
   18540:	ldr	x20, [sp, #64]
   18544:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18548:	add	x1, x1, #0x320
   1854c:	add	x1, x1, #0x1a0
   18550:	bl	69c0 <PyType_IsSubtype@plt>
   18554:	cbnz	w0, 185fc <PyFloat_FromString@plt+0x11b6c>
   18558:	ldr	x0, [x19, #8]
   1855c:	ldr	x1, [x0, #168]
   18560:	tbnz	w1, #24, 18684 <PyFloat_FromString@plt+0x11bf4>
   18564:	ldr	x2, [x0, #24]
   18568:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1856c:	add	x1, x1, #0x8a8
   18570:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18574:	ldr	x0, [x0, #3936]
   18578:	ldr	x0, [x0]
   1857c:	bl	6a10 <PyErr_Format@plt>
   18580:	mov	x20, #0x0                   	// #0
   18584:	b	18720 <PyFloat_FromString@plt+0x11c90>
   18588:	add	x2, sp, #0x30
   1858c:	mov	x1, #0x0                   	// #0
   18590:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   18594:	ldr	x0, [x0, #1816]
   18598:	bl	6740 <PyContextVar_Get@plt>
   1859c:	tbnz	w0, #31, 18800 <PyFloat_FromString@plt+0x11d70>
   185a0:	ldr	x20, [sp, #48]
   185a4:	cbz	x20, 185c8 <PyFloat_FromString@plt+0x11b38>
   185a8:	str	x20, [sp, #64]
   185ac:	ldr	x0, [x20]
   185b0:	sub	x0, x0, #0x1
   185b4:	str	x0, [x20]
   185b8:	cbnz	x0, 18528 <PyFloat_FromString@plt+0x11a98>
   185bc:	mov	x0, x20
   185c0:	bl	65d0 <_Py_Dealloc@plt>
   185c4:	b	18528 <PyFloat_FromString@plt+0x11a98>
   185c8:	bl	7abc <PyFloat_FromString@plt+0x102c>
   185cc:	mov	x20, x0
   185d0:	str	x0, [sp, #64]
   185d4:	cbnz	x0, 185ac <PyFloat_FromString@plt+0x11b1c>
   185d8:	b	18720 <PyFloat_FromString@plt+0x11c90>
   185dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   185e0:	add	x1, x1, #0x928
   185e4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   185e8:	ldr	x0, [x0, #3936]
   185ec:	ldr	x0, [x0]
   185f0:	bl	6650 <PyErr_SetString@plt>
   185f4:	mov	x20, #0x0                   	// #0
   185f8:	b	18720 <PyFloat_FromString@plt+0x11c90>
   185fc:	str	x21, [sp, #32]
   18600:	ldr	x0, [x19]
   18604:	add	x0, x0, #0x1
   18608:	str	x0, [x19]
   1860c:	ldr	x21, [sp, #72]
   18610:	ldr	x0, [x21, #8]
   18614:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18618:	add	x1, x1, #0x320
   1861c:	add	x1, x1, #0x1a0
   18620:	cmp	x0, x1
   18624:	b.eq	186ac <PyFloat_FromString@plt+0x11c1c>  // b.none
   18628:	ldr	x20, [sp, #64]
   1862c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18630:	add	x1, x1, #0x320
   18634:	add	x1, x1, #0x1a0
   18638:	bl	69c0 <PyType_IsSubtype@plt>
   1863c:	cbnz	w0, 186ac <PyFloat_FromString@plt+0x11c1c>
   18640:	ldr	x0, [x21, #8]
   18644:	ldr	x1, [x0, #168]
   18648:	tbnz	w1, #24, 18730 <PyFloat_FromString@plt+0x11ca0>
   1864c:	ldr	x2, [x0, #24]
   18650:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18654:	add	x1, x1, #0x8a8
   18658:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1865c:	ldr	x0, [x0, #3936]
   18660:	ldr	x0, [x0]
   18664:	bl	6a10 <PyErr_Format@plt>
   18668:	ldr	x0, [x19]
   1866c:	sub	x0, x0, #0x1
   18670:	str	x0, [x19]
   18674:	mov	x20, #0x0                   	// #0
   18678:	cbz	x0, 18754 <PyFloat_FromString@plt+0x11cc4>
   1867c:	ldr	x21, [sp, #32]
   18680:	b	18720 <PyFloat_FromString@plt+0x11c90>
   18684:	mov	x2, x20
   18688:	mov	x1, x19
   1868c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18690:	add	x0, x0, #0x320
   18694:	add	x0, x0, #0x1a0
   18698:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1869c:	mov	x19, x0
   186a0:	cbz	x0, 187f8 <PyFloat_FromString@plt+0x11d68>
   186a4:	str	x21, [sp, #32]
   186a8:	b	1860c <PyFloat_FromString@plt+0x11b7c>
   186ac:	ldr	x0, [x21]
   186b0:	add	x0, x0, #0x1
   186b4:	str	x0, [x21]
   186b8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   186bc:	add	x0, x0, #0x320
   186c0:	add	x0, x0, #0x1a0
   186c4:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   186c8:	mov	x20, x0
   186cc:	cbz	x0, 18764 <PyFloat_FromString@plt+0x11cd4>
   186d0:	add	x4, sp, #0x3c
   186d4:	ldr	x3, [sp, #64]
   186d8:	add	x3, x3, #0x10
   186dc:	add	x2, x21, #0x18
   186e0:	add	x1, x19, #0x18
   186e4:	add	x0, x0, #0x18
   186e8:	bl	2e2cc <PyInit__decimal@@Base+0x1412c>
   186ec:	ldr	x0, [x19]
   186f0:	sub	x0, x0, #0x1
   186f4:	str	x0, [x19]
   186f8:	cbz	x0, 187a8 <PyFloat_FromString@plt+0x11d18>
   186fc:	ldr	x0, [x21]
   18700:	sub	x0, x0, #0x1
   18704:	str	x0, [x21]
   18708:	cbz	x0, 187b4 <PyFloat_FromString@plt+0x11d24>
   1870c:	ldr	w1, [sp, #60]
   18710:	ldr	x0, [sp, #64]
   18714:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   18718:	cbnz	w0, 187c0 <PyFloat_FromString@plt+0x11d30>
   1871c:	ldr	x21, [sp, #32]
   18720:	mov	x0, x20
   18724:	ldp	x19, x20, [sp, #16]
   18728:	ldp	x29, x30, [sp], #80
   1872c:	ret
   18730:	mov	x2, x20
   18734:	mov	x1, x21
   18738:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1873c:	add	x0, x0, #0x320
   18740:	add	x0, x0, #0x1a0
   18744:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18748:	mov	x21, x0
   1874c:	cbnz	x0, 186b8 <PyFloat_FromString@plt+0x11c28>
   18750:	b	18668 <PyFloat_FromString@plt+0x11bd8>
   18754:	mov	x0, x19
   18758:	bl	65d0 <_Py_Dealloc@plt>
   1875c:	ldr	x21, [sp, #32]
   18760:	b	18720 <PyFloat_FromString@plt+0x11c90>
   18764:	ldr	x0, [x19]
   18768:	sub	x0, x0, #0x1
   1876c:	str	x0, [x19]
   18770:	cbz	x0, 1878c <PyFloat_FromString@plt+0x11cfc>
   18774:	ldr	x0, [x21]
   18778:	sub	x0, x0, #0x1
   1877c:	str	x0, [x21]
   18780:	cbz	x0, 18798 <PyFloat_FromString@plt+0x11d08>
   18784:	ldr	x21, [sp, #32]
   18788:	b	18720 <PyFloat_FromString@plt+0x11c90>
   1878c:	mov	x0, x19
   18790:	bl	65d0 <_Py_Dealloc@plt>
   18794:	b	18774 <PyFloat_FromString@plt+0x11ce4>
   18798:	mov	x0, x21
   1879c:	bl	65d0 <_Py_Dealloc@plt>
   187a0:	ldr	x21, [sp, #32]
   187a4:	b	18720 <PyFloat_FromString@plt+0x11c90>
   187a8:	mov	x0, x19
   187ac:	bl	65d0 <_Py_Dealloc@plt>
   187b0:	b	186fc <PyFloat_FromString@plt+0x11c6c>
   187b4:	mov	x0, x21
   187b8:	bl	65d0 <_Py_Dealloc@plt>
   187bc:	b	1870c <PyFloat_FromString@plt+0x11c7c>
   187c0:	ldr	x0, [x20]
   187c4:	sub	x0, x0, #0x1
   187c8:	str	x0, [x20]
   187cc:	cbz	x0, 187dc <PyFloat_FromString@plt+0x11d4c>
   187d0:	mov	x20, #0x0                   	// #0
   187d4:	ldr	x21, [sp, #32]
   187d8:	b	18720 <PyFloat_FromString@plt+0x11c90>
   187dc:	mov	x0, x20
   187e0:	bl	65d0 <_Py_Dealloc@plt>
   187e4:	mov	x20, #0x0                   	// #0
   187e8:	ldr	x21, [sp, #32]
   187ec:	b	18720 <PyFloat_FromString@plt+0x11c90>
   187f0:	mov	x20, #0x0                   	// #0
   187f4:	b	18720 <PyFloat_FromString@plt+0x11c90>
   187f8:	mov	x20, x0
   187fc:	b	18720 <PyFloat_FromString@plt+0x11c90>
   18800:	mov	x20, #0x0                   	// #0
   18804:	b	18720 <PyFloat_FromString@plt+0x11c90>
   18808:	stp	x29, x30, [sp, #-80]!
   1880c:	mov	x29, sp
   18810:	stp	x19, x20, [sp, #16]
   18814:	mov	x19, x0
   18818:	mov	x0, x1
   1881c:	mov	x1, x2
   18820:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   18824:	ldr	x2, [x2, #4008]
   18828:	str	x2, [sp, #64]
   1882c:	str	wzr, [sp, #60]
   18830:	add	x5, sp, #0x40
   18834:	add	x4, sp, #0x48
   18838:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   1883c:	add	x3, x3, #0x9a0
   18840:	add	x3, x3, #0x4a0
   18844:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   18848:	add	x2, x2, #0xa08
   1884c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18850:	cbz	w0, 18b54 <PyFloat_FromString@plt+0x120c4>
   18854:	ldr	x1, [sp, #64]
   18858:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1885c:	ldr	x0, [x0, #4008]
   18860:	cmp	x1, x0
   18864:	b.eq	188ec <PyFloat_FromString@plt+0x11e5c>  // b.none
   18868:	ldr	x0, [x1, #8]
   1886c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18870:	add	x1, x1, #0x320
   18874:	cmp	x0, x1
   18878:	b.eq	1888c <PyFloat_FromString@plt+0x11dfc>  // b.none
   1887c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18880:	add	x1, x1, #0x320
   18884:	bl	69c0 <PyType_IsSubtype@plt>
   18888:	cbz	w0, 18940 <PyFloat_FromString@plt+0x11eb0>
   1888c:	ldr	x0, [x19, #8]
   18890:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18894:	add	x1, x1, #0x320
   18898:	add	x1, x1, #0x1a0
   1889c:	cmp	x0, x1
   188a0:	b.eq	18960 <PyFloat_FromString@plt+0x11ed0>  // b.none
   188a4:	ldr	x20, [sp, #64]
   188a8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   188ac:	add	x1, x1, #0x320
   188b0:	add	x1, x1, #0x1a0
   188b4:	bl	69c0 <PyType_IsSubtype@plt>
   188b8:	cbnz	w0, 18960 <PyFloat_FromString@plt+0x11ed0>
   188bc:	ldr	x0, [x19, #8]
   188c0:	ldr	x1, [x0, #168]
   188c4:	tbnz	w1, #24, 189e8 <PyFloat_FromString@plt+0x11f58>
   188c8:	ldr	x2, [x0, #24]
   188cc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   188d0:	add	x1, x1, #0x8a8
   188d4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   188d8:	ldr	x0, [x0, #3936]
   188dc:	ldr	x0, [x0]
   188e0:	bl	6a10 <PyErr_Format@plt>
   188e4:	mov	x20, #0x0                   	// #0
   188e8:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   188ec:	add	x2, sp, #0x30
   188f0:	mov	x1, #0x0                   	// #0
   188f4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   188f8:	ldr	x0, [x0, #1816]
   188fc:	bl	6740 <PyContextVar_Get@plt>
   18900:	tbnz	w0, #31, 18b64 <PyFloat_FromString@plt+0x120d4>
   18904:	ldr	x20, [sp, #48]
   18908:	cbz	x20, 1892c <PyFloat_FromString@plt+0x11e9c>
   1890c:	str	x20, [sp, #64]
   18910:	ldr	x0, [x20]
   18914:	sub	x0, x0, #0x1
   18918:	str	x0, [x20]
   1891c:	cbnz	x0, 1888c <PyFloat_FromString@plt+0x11dfc>
   18920:	mov	x0, x20
   18924:	bl	65d0 <_Py_Dealloc@plt>
   18928:	b	1888c <PyFloat_FromString@plt+0x11dfc>
   1892c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   18930:	mov	x20, x0
   18934:	str	x0, [sp, #64]
   18938:	cbnz	x0, 18910 <PyFloat_FromString@plt+0x11e80>
   1893c:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18940:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18944:	add	x1, x1, #0x928
   18948:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1894c:	ldr	x0, [x0, #3936]
   18950:	ldr	x0, [x0]
   18954:	bl	6650 <PyErr_SetString@plt>
   18958:	mov	x20, #0x0                   	// #0
   1895c:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18960:	str	x21, [sp, #32]
   18964:	ldr	x0, [x19]
   18968:	add	x0, x0, #0x1
   1896c:	str	x0, [x19]
   18970:	ldr	x21, [sp, #72]
   18974:	ldr	x0, [x21, #8]
   18978:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1897c:	add	x1, x1, #0x320
   18980:	add	x1, x1, #0x1a0
   18984:	cmp	x0, x1
   18988:	b.eq	18a10 <PyFloat_FromString@plt+0x11f80>  // b.none
   1898c:	ldr	x20, [sp, #64]
   18990:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18994:	add	x1, x1, #0x320
   18998:	add	x1, x1, #0x1a0
   1899c:	bl	69c0 <PyType_IsSubtype@plt>
   189a0:	cbnz	w0, 18a10 <PyFloat_FromString@plt+0x11f80>
   189a4:	ldr	x0, [x21, #8]
   189a8:	ldr	x1, [x0, #168]
   189ac:	tbnz	w1, #24, 18a94 <PyFloat_FromString@plt+0x12004>
   189b0:	ldr	x2, [x0, #24]
   189b4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   189b8:	add	x1, x1, #0x8a8
   189bc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   189c0:	ldr	x0, [x0, #3936]
   189c4:	ldr	x0, [x0]
   189c8:	bl	6a10 <PyErr_Format@plt>
   189cc:	ldr	x0, [x19]
   189d0:	sub	x0, x0, #0x1
   189d4:	str	x0, [x19]
   189d8:	mov	x20, #0x0                   	// #0
   189dc:	cbz	x0, 18ab8 <PyFloat_FromString@plt+0x12028>
   189e0:	ldr	x21, [sp, #32]
   189e4:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   189e8:	mov	x2, x20
   189ec:	mov	x1, x19
   189f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   189f4:	add	x0, x0, #0x320
   189f8:	add	x0, x0, #0x1a0
   189fc:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18a00:	mov	x19, x0
   18a04:	cbz	x0, 18b5c <PyFloat_FromString@plt+0x120cc>
   18a08:	str	x21, [sp, #32]
   18a0c:	b	18970 <PyFloat_FromString@plt+0x11ee0>
   18a10:	ldr	x0, [x21]
   18a14:	add	x0, x0, #0x1
   18a18:	str	x0, [x21]
   18a1c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18a20:	add	x0, x0, #0x320
   18a24:	add	x0, x0, #0x1a0
   18a28:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   18a2c:	mov	x20, x0
   18a30:	cbz	x0, 18ac8 <PyFloat_FromString@plt+0x12038>
   18a34:	add	x4, sp, #0x3c
   18a38:	ldr	x3, [sp, #64]
   18a3c:	add	x3, x3, #0x10
   18a40:	add	x2, x21, #0x18
   18a44:	add	x1, x19, #0x18
   18a48:	add	x0, x0, #0x18
   18a4c:	bl	2e964 <PyInit__decimal@@Base+0x147c4>
   18a50:	ldr	x0, [x19]
   18a54:	sub	x0, x0, #0x1
   18a58:	str	x0, [x19]
   18a5c:	cbz	x0, 18b0c <PyFloat_FromString@plt+0x1207c>
   18a60:	ldr	x0, [x21]
   18a64:	sub	x0, x0, #0x1
   18a68:	str	x0, [x21]
   18a6c:	cbz	x0, 18b18 <PyFloat_FromString@plt+0x12088>
   18a70:	ldr	w1, [sp, #60]
   18a74:	ldr	x0, [sp, #64]
   18a78:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   18a7c:	cbnz	w0, 18b24 <PyFloat_FromString@plt+0x12094>
   18a80:	ldr	x21, [sp, #32]
   18a84:	mov	x0, x20
   18a88:	ldp	x19, x20, [sp, #16]
   18a8c:	ldp	x29, x30, [sp], #80
   18a90:	ret
   18a94:	mov	x2, x20
   18a98:	mov	x1, x21
   18a9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18aa0:	add	x0, x0, #0x320
   18aa4:	add	x0, x0, #0x1a0
   18aa8:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18aac:	mov	x21, x0
   18ab0:	cbnz	x0, 18a1c <PyFloat_FromString@plt+0x11f8c>
   18ab4:	b	189cc <PyFloat_FromString@plt+0x11f3c>
   18ab8:	mov	x0, x19
   18abc:	bl	65d0 <_Py_Dealloc@plt>
   18ac0:	ldr	x21, [sp, #32]
   18ac4:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18ac8:	ldr	x0, [x19]
   18acc:	sub	x0, x0, #0x1
   18ad0:	str	x0, [x19]
   18ad4:	cbz	x0, 18af0 <PyFloat_FromString@plt+0x12060>
   18ad8:	ldr	x0, [x21]
   18adc:	sub	x0, x0, #0x1
   18ae0:	str	x0, [x21]
   18ae4:	cbz	x0, 18afc <PyFloat_FromString@plt+0x1206c>
   18ae8:	ldr	x21, [sp, #32]
   18aec:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18af0:	mov	x0, x19
   18af4:	bl	65d0 <_Py_Dealloc@plt>
   18af8:	b	18ad8 <PyFloat_FromString@plt+0x12048>
   18afc:	mov	x0, x21
   18b00:	bl	65d0 <_Py_Dealloc@plt>
   18b04:	ldr	x21, [sp, #32]
   18b08:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b0c:	mov	x0, x19
   18b10:	bl	65d0 <_Py_Dealloc@plt>
   18b14:	b	18a60 <PyFloat_FromString@plt+0x11fd0>
   18b18:	mov	x0, x21
   18b1c:	bl	65d0 <_Py_Dealloc@plt>
   18b20:	b	18a70 <PyFloat_FromString@plt+0x11fe0>
   18b24:	ldr	x0, [x20]
   18b28:	sub	x0, x0, #0x1
   18b2c:	str	x0, [x20]
   18b30:	cbz	x0, 18b40 <PyFloat_FromString@plt+0x120b0>
   18b34:	mov	x20, #0x0                   	// #0
   18b38:	ldr	x21, [sp, #32]
   18b3c:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b40:	mov	x0, x20
   18b44:	bl	65d0 <_Py_Dealloc@plt>
   18b48:	mov	x20, #0x0                   	// #0
   18b4c:	ldr	x21, [sp, #32]
   18b50:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b54:	mov	x20, #0x0                   	// #0
   18b58:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b5c:	mov	x20, x0
   18b60:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b64:	mov	x20, #0x0                   	// #0
   18b68:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18b6c:	stp	x29, x30, [sp, #-80]!
   18b70:	mov	x29, sp
   18b74:	stp	x19, x20, [sp, #16]
   18b78:	mov	x19, x0
   18b7c:	mov	x0, x1
   18b80:	mov	x1, x2
   18b84:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   18b88:	ldr	x2, [x2, #4008]
   18b8c:	str	x2, [sp, #64]
   18b90:	str	wzr, [sp, #60]
   18b94:	add	x5, sp, #0x40
   18b98:	add	x4, sp, #0x48
   18b9c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   18ba0:	add	x3, x3, #0x9a0
   18ba4:	add	x3, x3, #0x4b8
   18ba8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   18bac:	add	x2, x2, #0xa08
   18bb0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18bb4:	cbz	w0, 18eb8 <PyFloat_FromString@plt+0x12428>
   18bb8:	ldr	x1, [sp, #64]
   18bbc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18bc0:	ldr	x0, [x0, #4008]
   18bc4:	cmp	x1, x0
   18bc8:	b.eq	18c50 <PyFloat_FromString@plt+0x121c0>  // b.none
   18bcc:	ldr	x0, [x1, #8]
   18bd0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18bd4:	add	x1, x1, #0x320
   18bd8:	cmp	x0, x1
   18bdc:	b.eq	18bf0 <PyFloat_FromString@plt+0x12160>  // b.none
   18be0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18be4:	add	x1, x1, #0x320
   18be8:	bl	69c0 <PyType_IsSubtype@plt>
   18bec:	cbz	w0, 18ca4 <PyFloat_FromString@plt+0x12214>
   18bf0:	ldr	x0, [x19, #8]
   18bf4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18bf8:	add	x1, x1, #0x320
   18bfc:	add	x1, x1, #0x1a0
   18c00:	cmp	x0, x1
   18c04:	b.eq	18cc4 <PyFloat_FromString@plt+0x12234>  // b.none
   18c08:	ldr	x20, [sp, #64]
   18c0c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18c10:	add	x1, x1, #0x320
   18c14:	add	x1, x1, #0x1a0
   18c18:	bl	69c0 <PyType_IsSubtype@plt>
   18c1c:	cbnz	w0, 18cc4 <PyFloat_FromString@plt+0x12234>
   18c20:	ldr	x0, [x19, #8]
   18c24:	ldr	x1, [x0, #168]
   18c28:	tbnz	w1, #24, 18d4c <PyFloat_FromString@plt+0x122bc>
   18c2c:	ldr	x2, [x0, #24]
   18c30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18c34:	add	x1, x1, #0x8a8
   18c38:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18c3c:	ldr	x0, [x0, #3936]
   18c40:	ldr	x0, [x0]
   18c44:	bl	6a10 <PyErr_Format@plt>
   18c48:	mov	x20, #0x0                   	// #0
   18c4c:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18c50:	add	x2, sp, #0x30
   18c54:	mov	x1, #0x0                   	// #0
   18c58:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   18c5c:	ldr	x0, [x0, #1816]
   18c60:	bl	6740 <PyContextVar_Get@plt>
   18c64:	tbnz	w0, #31, 18ec8 <PyFloat_FromString@plt+0x12438>
   18c68:	ldr	x20, [sp, #48]
   18c6c:	cbz	x20, 18c90 <PyFloat_FromString@plt+0x12200>
   18c70:	str	x20, [sp, #64]
   18c74:	ldr	x0, [x20]
   18c78:	sub	x0, x0, #0x1
   18c7c:	str	x0, [x20]
   18c80:	cbnz	x0, 18bf0 <PyFloat_FromString@plt+0x12160>
   18c84:	mov	x0, x20
   18c88:	bl	65d0 <_Py_Dealloc@plt>
   18c8c:	b	18bf0 <PyFloat_FromString@plt+0x12160>
   18c90:	bl	7abc <PyFloat_FromString@plt+0x102c>
   18c94:	mov	x20, x0
   18c98:	str	x0, [sp, #64]
   18c9c:	cbnz	x0, 18c74 <PyFloat_FromString@plt+0x121e4>
   18ca0:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18ca4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18ca8:	add	x1, x1, #0x928
   18cac:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18cb0:	ldr	x0, [x0, #3936]
   18cb4:	ldr	x0, [x0]
   18cb8:	bl	6650 <PyErr_SetString@plt>
   18cbc:	mov	x20, #0x0                   	// #0
   18cc0:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18cc4:	str	x21, [sp, #32]
   18cc8:	ldr	x0, [x19]
   18ccc:	add	x0, x0, #0x1
   18cd0:	str	x0, [x19]
   18cd4:	ldr	x21, [sp, #72]
   18cd8:	ldr	x0, [x21, #8]
   18cdc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18ce0:	add	x1, x1, #0x320
   18ce4:	add	x1, x1, #0x1a0
   18ce8:	cmp	x0, x1
   18cec:	b.eq	18d74 <PyFloat_FromString@plt+0x122e4>  // b.none
   18cf0:	ldr	x20, [sp, #64]
   18cf4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18cf8:	add	x1, x1, #0x320
   18cfc:	add	x1, x1, #0x1a0
   18d00:	bl	69c0 <PyType_IsSubtype@plt>
   18d04:	cbnz	w0, 18d74 <PyFloat_FromString@plt+0x122e4>
   18d08:	ldr	x0, [x21, #8]
   18d0c:	ldr	x1, [x0, #168]
   18d10:	tbnz	w1, #24, 18df8 <PyFloat_FromString@plt+0x12368>
   18d14:	ldr	x2, [x0, #24]
   18d18:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18d1c:	add	x1, x1, #0x8a8
   18d20:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18d24:	ldr	x0, [x0, #3936]
   18d28:	ldr	x0, [x0]
   18d2c:	bl	6a10 <PyErr_Format@plt>
   18d30:	ldr	x0, [x19]
   18d34:	sub	x0, x0, #0x1
   18d38:	str	x0, [x19]
   18d3c:	mov	x20, #0x0                   	// #0
   18d40:	cbz	x0, 18e1c <PyFloat_FromString@plt+0x1238c>
   18d44:	ldr	x21, [sp, #32]
   18d48:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18d4c:	mov	x2, x20
   18d50:	mov	x1, x19
   18d54:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18d58:	add	x0, x0, #0x320
   18d5c:	add	x0, x0, #0x1a0
   18d60:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18d64:	mov	x19, x0
   18d68:	cbz	x0, 18ec0 <PyFloat_FromString@plt+0x12430>
   18d6c:	str	x21, [sp, #32]
   18d70:	b	18cd4 <PyFloat_FromString@plt+0x12244>
   18d74:	ldr	x0, [x21]
   18d78:	add	x0, x0, #0x1
   18d7c:	str	x0, [x21]
   18d80:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18d84:	add	x0, x0, #0x320
   18d88:	add	x0, x0, #0x1a0
   18d8c:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   18d90:	mov	x20, x0
   18d94:	cbz	x0, 18e2c <PyFloat_FromString@plt+0x1239c>
   18d98:	add	x4, sp, #0x3c
   18d9c:	ldr	x3, [sp, #64]
   18da0:	add	x3, x3, #0x10
   18da4:	add	x2, x21, #0x18
   18da8:	add	x1, x19, #0x18
   18dac:	add	x0, x0, #0x18
   18db0:	bl	2e5b8 <PyInit__decimal@@Base+0x14418>
   18db4:	ldr	x0, [x19]
   18db8:	sub	x0, x0, #0x1
   18dbc:	str	x0, [x19]
   18dc0:	cbz	x0, 18e70 <PyFloat_FromString@plt+0x123e0>
   18dc4:	ldr	x0, [x21]
   18dc8:	sub	x0, x0, #0x1
   18dcc:	str	x0, [x21]
   18dd0:	cbz	x0, 18e7c <PyFloat_FromString@plt+0x123ec>
   18dd4:	ldr	w1, [sp, #60]
   18dd8:	ldr	x0, [sp, #64]
   18ddc:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   18de0:	cbnz	w0, 18e88 <PyFloat_FromString@plt+0x123f8>
   18de4:	ldr	x21, [sp, #32]
   18de8:	mov	x0, x20
   18dec:	ldp	x19, x20, [sp, #16]
   18df0:	ldp	x29, x30, [sp], #80
   18df4:	ret
   18df8:	mov	x2, x20
   18dfc:	mov	x1, x21
   18e00:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   18e04:	add	x0, x0, #0x320
   18e08:	add	x0, x0, #0x1a0
   18e0c:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   18e10:	mov	x21, x0
   18e14:	cbnz	x0, 18d80 <PyFloat_FromString@plt+0x122f0>
   18e18:	b	18d30 <PyFloat_FromString@plt+0x122a0>
   18e1c:	mov	x0, x19
   18e20:	bl	65d0 <_Py_Dealloc@plt>
   18e24:	ldr	x21, [sp, #32]
   18e28:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18e2c:	ldr	x0, [x19]
   18e30:	sub	x0, x0, #0x1
   18e34:	str	x0, [x19]
   18e38:	cbz	x0, 18e54 <PyFloat_FromString@plt+0x123c4>
   18e3c:	ldr	x0, [x21]
   18e40:	sub	x0, x0, #0x1
   18e44:	str	x0, [x21]
   18e48:	cbz	x0, 18e60 <PyFloat_FromString@plt+0x123d0>
   18e4c:	ldr	x21, [sp, #32]
   18e50:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18e54:	mov	x0, x19
   18e58:	bl	65d0 <_Py_Dealloc@plt>
   18e5c:	b	18e3c <PyFloat_FromString@plt+0x123ac>
   18e60:	mov	x0, x21
   18e64:	bl	65d0 <_Py_Dealloc@plt>
   18e68:	ldr	x21, [sp, #32]
   18e6c:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18e70:	mov	x0, x19
   18e74:	bl	65d0 <_Py_Dealloc@plt>
   18e78:	b	18dc4 <PyFloat_FromString@plt+0x12334>
   18e7c:	mov	x0, x21
   18e80:	bl	65d0 <_Py_Dealloc@plt>
   18e84:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   18e88:	ldr	x0, [x20]
   18e8c:	sub	x0, x0, #0x1
   18e90:	str	x0, [x20]
   18e94:	cbz	x0, 18ea4 <PyFloat_FromString@plt+0x12414>
   18e98:	mov	x20, #0x0                   	// #0
   18e9c:	ldr	x21, [sp, #32]
   18ea0:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18ea4:	mov	x0, x20
   18ea8:	bl	65d0 <_Py_Dealloc@plt>
   18eac:	mov	x20, #0x0                   	// #0
   18eb0:	ldr	x21, [sp, #32]
   18eb4:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18eb8:	mov	x20, #0x0                   	// #0
   18ebc:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18ec0:	mov	x20, x0
   18ec4:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18ec8:	mov	x20, #0x0                   	// #0
   18ecc:	b	18de8 <PyFloat_FromString@plt+0x12358>
   18ed0:	stp	x29, x30, [sp, #-80]!
   18ed4:	mov	x29, sp
   18ed8:	stp	x19, x20, [sp, #16]
   18edc:	mov	x19, x0
   18ee0:	mov	x0, x1
   18ee4:	mov	x1, x2
   18ee8:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   18eec:	ldr	x2, [x2, #4008]
   18ef0:	str	x2, [sp, #64]
   18ef4:	str	wzr, [sp, #60]
   18ef8:	add	x5, sp, #0x40
   18efc:	add	x4, sp, #0x48
   18f00:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   18f04:	add	x3, x3, #0x9a0
   18f08:	add	x3, x3, #0x4d0
   18f0c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   18f10:	add	x2, x2, #0xa08
   18f14:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18f18:	cbz	w0, 1921c <PyFloat_FromString@plt+0x1278c>
   18f1c:	ldr	x1, [sp, #64]
   18f20:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18f24:	ldr	x0, [x0, #4008]
   18f28:	cmp	x1, x0
   18f2c:	b.eq	18fb4 <PyFloat_FromString@plt+0x12524>  // b.none
   18f30:	ldr	x0, [x1, #8]
   18f34:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18f38:	add	x1, x1, #0x320
   18f3c:	cmp	x0, x1
   18f40:	b.eq	18f54 <PyFloat_FromString@plt+0x124c4>  // b.none
   18f44:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18f48:	add	x1, x1, #0x320
   18f4c:	bl	69c0 <PyType_IsSubtype@plt>
   18f50:	cbz	w0, 19008 <PyFloat_FromString@plt+0x12578>
   18f54:	ldr	x0, [x19, #8]
   18f58:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18f5c:	add	x1, x1, #0x320
   18f60:	add	x1, x1, #0x1a0
   18f64:	cmp	x0, x1
   18f68:	b.eq	19028 <PyFloat_FromString@plt+0x12598>  // b.none
   18f6c:	ldr	x20, [sp, #64]
   18f70:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   18f74:	add	x1, x1, #0x320
   18f78:	add	x1, x1, #0x1a0
   18f7c:	bl	69c0 <PyType_IsSubtype@plt>
   18f80:	cbnz	w0, 19028 <PyFloat_FromString@plt+0x12598>
   18f84:	ldr	x0, [x19, #8]
   18f88:	ldr	x1, [x0, #168]
   18f8c:	tbnz	w1, #24, 190b0 <PyFloat_FromString@plt+0x12620>
   18f90:	ldr	x2, [x0, #24]
   18f94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   18f98:	add	x1, x1, #0x8a8
   18f9c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   18fa0:	ldr	x0, [x0, #3936]
   18fa4:	ldr	x0, [x0]
   18fa8:	bl	6a10 <PyErr_Format@plt>
   18fac:	mov	x20, #0x0                   	// #0
   18fb0:	b	1914c <PyFloat_FromString@plt+0x126bc>
   18fb4:	add	x2, sp, #0x30
   18fb8:	mov	x1, #0x0                   	// #0
   18fbc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   18fc0:	ldr	x0, [x0, #1816]
   18fc4:	bl	6740 <PyContextVar_Get@plt>
   18fc8:	tbnz	w0, #31, 1922c <PyFloat_FromString@plt+0x1279c>
   18fcc:	ldr	x20, [sp, #48]
   18fd0:	cbz	x20, 18ff4 <PyFloat_FromString@plt+0x12564>
   18fd4:	str	x20, [sp, #64]
   18fd8:	ldr	x0, [x20]
   18fdc:	sub	x0, x0, #0x1
   18fe0:	str	x0, [x20]
   18fe4:	cbnz	x0, 18f54 <PyFloat_FromString@plt+0x124c4>
   18fe8:	mov	x0, x20
   18fec:	bl	65d0 <_Py_Dealloc@plt>
   18ff0:	b	18f54 <PyFloat_FromString@plt+0x124c4>
   18ff4:	bl	7abc <PyFloat_FromString@plt+0x102c>
   18ff8:	mov	x20, x0
   18ffc:	str	x0, [sp, #64]
   19000:	cbnz	x0, 18fd8 <PyFloat_FromString@plt+0x12548>
   19004:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19008:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1900c:	add	x1, x1, #0x928
   19010:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19014:	ldr	x0, [x0, #3936]
   19018:	ldr	x0, [x0]
   1901c:	bl	6650 <PyErr_SetString@plt>
   19020:	mov	x20, #0x0                   	// #0
   19024:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19028:	str	x21, [sp, #32]
   1902c:	ldr	x0, [x19]
   19030:	add	x0, x0, #0x1
   19034:	str	x0, [x19]
   19038:	ldr	x21, [sp, #72]
   1903c:	ldr	x0, [x21, #8]
   19040:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19044:	add	x1, x1, #0x320
   19048:	add	x1, x1, #0x1a0
   1904c:	cmp	x0, x1
   19050:	b.eq	190d8 <PyFloat_FromString@plt+0x12648>  // b.none
   19054:	ldr	x20, [sp, #64]
   19058:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1905c:	add	x1, x1, #0x320
   19060:	add	x1, x1, #0x1a0
   19064:	bl	69c0 <PyType_IsSubtype@plt>
   19068:	cbnz	w0, 190d8 <PyFloat_FromString@plt+0x12648>
   1906c:	ldr	x0, [x21, #8]
   19070:	ldr	x1, [x0, #168]
   19074:	tbnz	w1, #24, 1915c <PyFloat_FromString@plt+0x126cc>
   19078:	ldr	x2, [x0, #24]
   1907c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19080:	add	x1, x1, #0x8a8
   19084:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19088:	ldr	x0, [x0, #3936]
   1908c:	ldr	x0, [x0]
   19090:	bl	6a10 <PyErr_Format@plt>
   19094:	ldr	x0, [x19]
   19098:	sub	x0, x0, #0x1
   1909c:	str	x0, [x19]
   190a0:	mov	x20, #0x0                   	// #0
   190a4:	cbz	x0, 19180 <PyFloat_FromString@plt+0x126f0>
   190a8:	ldr	x21, [sp, #32]
   190ac:	b	1914c <PyFloat_FromString@plt+0x126bc>
   190b0:	mov	x2, x20
   190b4:	mov	x1, x19
   190b8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   190bc:	add	x0, x0, #0x320
   190c0:	add	x0, x0, #0x1a0
   190c4:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   190c8:	mov	x19, x0
   190cc:	cbz	x0, 19224 <PyFloat_FromString@plt+0x12794>
   190d0:	str	x21, [sp, #32]
   190d4:	b	19038 <PyFloat_FromString@plt+0x125a8>
   190d8:	ldr	x0, [x21]
   190dc:	add	x0, x0, #0x1
   190e0:	str	x0, [x21]
   190e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   190e8:	add	x0, x0, #0x320
   190ec:	add	x0, x0, #0x1a0
   190f0:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   190f4:	mov	x20, x0
   190f8:	cbz	x0, 19190 <PyFloat_FromString@plt+0x12700>
   190fc:	add	x4, sp, #0x3c
   19100:	ldr	x3, [sp, #64]
   19104:	add	x3, x3, #0x10
   19108:	add	x2, x21, #0x18
   1910c:	add	x1, x19, #0x18
   19110:	add	x0, x0, #0x18
   19114:	bl	2e804 <PyInit__decimal@@Base+0x14664>
   19118:	ldr	x0, [x19]
   1911c:	sub	x0, x0, #0x1
   19120:	str	x0, [x19]
   19124:	cbz	x0, 191d4 <PyFloat_FromString@plt+0x12744>
   19128:	ldr	x0, [x21]
   1912c:	sub	x0, x0, #0x1
   19130:	str	x0, [x21]
   19134:	cbz	x0, 191e0 <PyFloat_FromString@plt+0x12750>
   19138:	ldr	w1, [sp, #60]
   1913c:	ldr	x0, [sp, #64]
   19140:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   19144:	cbnz	w0, 191ec <PyFloat_FromString@plt+0x1275c>
   19148:	ldr	x21, [sp, #32]
   1914c:	mov	x0, x20
   19150:	ldp	x19, x20, [sp, #16]
   19154:	ldp	x29, x30, [sp], #80
   19158:	ret
   1915c:	mov	x2, x20
   19160:	mov	x1, x21
   19164:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   19168:	add	x0, x0, #0x320
   1916c:	add	x0, x0, #0x1a0
   19170:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   19174:	mov	x21, x0
   19178:	cbnz	x0, 190e4 <PyFloat_FromString@plt+0x12654>
   1917c:	b	19094 <PyFloat_FromString@plt+0x12604>
   19180:	mov	x0, x19
   19184:	bl	65d0 <_Py_Dealloc@plt>
   19188:	ldr	x21, [sp, #32]
   1918c:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19190:	ldr	x0, [x19]
   19194:	sub	x0, x0, #0x1
   19198:	str	x0, [x19]
   1919c:	cbz	x0, 191b8 <PyFloat_FromString@plt+0x12728>
   191a0:	ldr	x0, [x21]
   191a4:	sub	x0, x0, #0x1
   191a8:	str	x0, [x21]
   191ac:	cbz	x0, 191c4 <PyFloat_FromString@plt+0x12734>
   191b0:	ldr	x21, [sp, #32]
   191b4:	b	1914c <PyFloat_FromString@plt+0x126bc>
   191b8:	mov	x0, x19
   191bc:	bl	65d0 <_Py_Dealloc@plt>
   191c0:	b	191a0 <PyFloat_FromString@plt+0x12710>
   191c4:	mov	x0, x21
   191c8:	bl	65d0 <_Py_Dealloc@plt>
   191cc:	ldr	x21, [sp, #32]
   191d0:	b	1914c <PyFloat_FromString@plt+0x126bc>
   191d4:	mov	x0, x19
   191d8:	bl	65d0 <_Py_Dealloc@plt>
   191dc:	b	19128 <PyFloat_FromString@plt+0x12698>
   191e0:	mov	x0, x21
   191e4:	bl	65d0 <_Py_Dealloc@plt>
   191e8:	b	19138 <PyFloat_FromString@plt+0x126a8>
   191ec:	ldr	x0, [x20]
   191f0:	sub	x0, x0, #0x1
   191f4:	str	x0, [x20]
   191f8:	cbz	x0, 19208 <PyFloat_FromString@plt+0x12778>
   191fc:	mov	x20, #0x0                   	// #0
   19200:	ldr	x21, [sp, #32]
   19204:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19208:	mov	x0, x20
   1920c:	bl	65d0 <_Py_Dealloc@plt>
   19210:	mov	x20, #0x0                   	// #0
   19214:	ldr	x21, [sp, #32]
   19218:	b	1914c <PyFloat_FromString@plt+0x126bc>
   1921c:	mov	x20, #0x0                   	// #0
   19220:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19224:	mov	x20, x0
   19228:	b	1914c <PyFloat_FromString@plt+0x126bc>
   1922c:	mov	x20, #0x0                   	// #0
   19230:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19234:	stp	x29, x30, [sp, #-112]!
   19238:	mov	x29, sp
   1923c:	stp	x19, x20, [sp, #16]
   19240:	mov	x20, x0
   19244:	mov	x0, x1
   19248:	mov	x1, x2
   1924c:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   19250:	ldr	x2, [x2, #4008]
   19254:	str	x2, [sp, #104]
   19258:	str	x2, [sp, #96]
   1925c:	str	wzr, [sp, #92]
   19260:	add	x5, sp, #0x60
   19264:	add	x4, sp, #0x68
   19268:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   1926c:	add	x3, x3, #0x9a0
   19270:	add	x3, x3, #0x4e8
   19274:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   19278:	add	x2, x2, #0xb50
   1927c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19280:	cbz	w0, 1940c <PyFloat_FromString@plt+0x1297c>
   19284:	ldr	x1, [sp, #96]
   19288:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1928c:	ldr	x0, [x0, #4008]
   19290:	cmp	x1, x0
   19294:	b.eq	19354 <PyFloat_FromString@plt+0x128c4>  // b.none
   19298:	ldr	x0, [x1, #8]
   1929c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   192a0:	add	x1, x1, #0x320
   192a4:	cmp	x0, x1
   192a8:	b.eq	192bc <PyFloat_FromString@plt+0x1282c>  // b.none
   192ac:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   192b0:	add	x1, x1, #0x320
   192b4:	bl	69c0 <PyType_IsSubtype@plt>
   192b8:	cbz	w0, 193a8 <PyFloat_FromString@plt+0x12918>
   192bc:	ldr	x1, [sp, #96]
   192c0:	ldp	x2, x3, [x1, #16]
   192c4:	stp	x2, x3, [sp, #40]
   192c8:	ldp	x2, x3, [x1, #32]
   192cc:	stp	x2, x3, [sp, #56]
   192d0:	ldp	x0, x1, [x1, #48]
   192d4:	stp	x0, x1, [sp, #72]
   192d8:	ldr	x0, [sp, #104]
   192dc:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   192e0:	ldr	x1, [x1, #4008]
   192e4:	cmp	x0, x1
   192e8:	b.eq	19308 <PyFloat_FromString@plt+0x12878>  // b.none
   192ec:	bl	718c <PyFloat_FromString@plt+0x6fc>
   192f0:	mov	w1, w0
   192f4:	mov	x19, #0x0                   	// #0
   192f8:	tbnz	w0, #31, 19344 <PyFloat_FromString@plt+0x128b4>
   192fc:	add	x0, sp, #0x28
   19300:	bl	1d5dc <PyInit__decimal@@Base+0x343c>
   19304:	cbz	w0, 193c8 <PyFloat_FromString@plt+0x12938>
   19308:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1930c:	add	x0, x0, #0x320
   19310:	add	x0, x0, #0x1a0
   19314:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   19318:	mov	x19, x0
   1931c:	cbz	x0, 19344 <PyFloat_FromString@plt+0x128b4>
   19320:	add	x3, sp, #0x5c
   19324:	add	x2, sp, #0x28
   19328:	add	x1, x20, #0x18
   1932c:	add	x0, x0, #0x18
   19330:	bl	31f08 <PyInit__decimal@@Base+0x17d68>
   19334:	ldr	w1, [sp, #92]
   19338:	ldr	x0, [sp, #96]
   1933c:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   19340:	cbnz	w0, 193e4 <PyFloat_FromString@plt+0x12954>
   19344:	mov	x0, x19
   19348:	ldp	x19, x20, [sp, #16]
   1934c:	ldp	x29, x30, [sp], #112
   19350:	ret
   19354:	add	x2, sp, #0x20
   19358:	mov	x1, #0x0                   	// #0
   1935c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   19360:	ldr	x0, [x0, #1816]
   19364:	bl	6740 <PyContextVar_Get@plt>
   19368:	tbnz	w0, #31, 19414 <PyFloat_FromString@plt+0x12984>
   1936c:	ldr	x19, [sp, #32]
   19370:	cbz	x19, 19394 <PyFloat_FromString@plt+0x12904>
   19374:	str	x19, [sp, #96]
   19378:	ldr	x0, [x19]
   1937c:	sub	x0, x0, #0x1
   19380:	str	x0, [x19]
   19384:	cbnz	x0, 192bc <PyFloat_FromString@plt+0x1282c>
   19388:	mov	x0, x19
   1938c:	bl	65d0 <_Py_Dealloc@plt>
   19390:	b	192bc <PyFloat_FromString@plt+0x1282c>
   19394:	bl	7abc <PyFloat_FromString@plt+0x102c>
   19398:	mov	x19, x0
   1939c:	str	x0, [sp, #96]
   193a0:	cbnz	x0, 19378 <PyFloat_FromString@plt+0x128e8>
   193a4:	b	19344 <PyFloat_FromString@plt+0x128b4>
   193a8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   193ac:	add	x1, x1, #0x928
   193b0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   193b4:	ldr	x0, [x0, #3936]
   193b8:	ldr	x0, [x0]
   193bc:	bl	6650 <PyErr_SetString@plt>
   193c0:	mov	x19, #0x0                   	// #0
   193c4:	b	19344 <PyFloat_FromString@plt+0x128b4>
   193c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   193cc:	add	x1, x1, #0xb70
   193d0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   193d4:	ldr	x0, [x0, #3920]
   193d8:	ldr	x0, [x0]
   193dc:	bl	6650 <PyErr_SetString@plt>
   193e0:	b	19344 <PyFloat_FromString@plt+0x128b4>
   193e4:	ldr	x0, [x19]
   193e8:	sub	x0, x0, #0x1
   193ec:	str	x0, [x19]
   193f0:	cbz	x0, 193fc <PyFloat_FromString@plt+0x1296c>
   193f4:	mov	x19, #0x0                   	// #0
   193f8:	b	19344 <PyFloat_FromString@plt+0x128b4>
   193fc:	mov	x0, x19
   19400:	bl	65d0 <_Py_Dealloc@plt>
   19404:	mov	x19, #0x0                   	// #0
   19408:	b	19344 <PyFloat_FromString@plt+0x128b4>
   1940c:	mov	x19, #0x0                   	// #0
   19410:	b	19344 <PyFloat_FromString@plt+0x128b4>
   19414:	mov	x19, #0x0                   	// #0
   19418:	b	19344 <PyFloat_FromString@plt+0x128b4>
   1941c:	stp	x29, x30, [sp, #-112]!
   19420:	mov	x29, sp
   19424:	stp	x19, x20, [sp, #16]
   19428:	mov	x20, x0
   1942c:	mov	x0, x1
   19430:	mov	x1, x2
   19434:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   19438:	ldr	x2, [x2, #4008]
   1943c:	str	x2, [sp, #104]
   19440:	str	x2, [sp, #96]
   19444:	str	wzr, [sp, #92]
   19448:	add	x5, sp, #0x60
   1944c:	add	x4, sp, #0x68
   19450:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   19454:	add	x3, x3, #0x9a0
   19458:	add	x3, x3, #0x500
   1945c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   19460:	add	x2, x2, #0xb50
   19464:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19468:	cbz	w0, 195f4 <PyFloat_FromString@plt+0x12b64>
   1946c:	ldr	x1, [sp, #96]
   19470:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19474:	ldr	x0, [x0, #4008]
   19478:	cmp	x1, x0
   1947c:	b.eq	1953c <PyFloat_FromString@plt+0x12aac>  // b.none
   19480:	ldr	x0, [x1, #8]
   19484:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19488:	add	x1, x1, #0x320
   1948c:	cmp	x0, x1
   19490:	b.eq	194a4 <PyFloat_FromString@plt+0x12a14>  // b.none
   19494:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19498:	add	x1, x1, #0x320
   1949c:	bl	69c0 <PyType_IsSubtype@plt>
   194a0:	cbz	w0, 19590 <PyFloat_FromString@plt+0x12b00>
   194a4:	ldr	x1, [sp, #96]
   194a8:	ldp	x2, x3, [x1, #16]
   194ac:	stp	x2, x3, [sp, #40]
   194b0:	ldp	x2, x3, [x1, #32]
   194b4:	stp	x2, x3, [sp, #56]
   194b8:	ldp	x0, x1, [x1, #48]
   194bc:	stp	x0, x1, [sp, #72]
   194c0:	ldr	x0, [sp, #104]
   194c4:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   194c8:	ldr	x1, [x1, #4008]
   194cc:	cmp	x0, x1
   194d0:	b.eq	194f0 <PyFloat_FromString@plt+0x12a60>  // b.none
   194d4:	bl	718c <PyFloat_FromString@plt+0x6fc>
   194d8:	mov	w1, w0
   194dc:	mov	x19, #0x0                   	// #0
   194e0:	tbnz	w0, #31, 1952c <PyFloat_FromString@plt+0x12a9c>
   194e4:	add	x0, sp, #0x28
   194e8:	bl	1d5dc <PyInit__decimal@@Base+0x343c>
   194ec:	cbz	w0, 195b0 <PyFloat_FromString@plt+0x12b20>
   194f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   194f4:	add	x0, x0, #0x320
   194f8:	add	x0, x0, #0x1a0
   194fc:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   19500:	mov	x19, x0
   19504:	cbz	x0, 1952c <PyFloat_FromString@plt+0x12a9c>
   19508:	add	x3, sp, #0x5c
   1950c:	add	x2, sp, #0x28
   19510:	add	x1, x20, #0x18
   19514:	add	x0, x0, #0x18
   19518:	bl	31ee0 <PyInit__decimal@@Base+0x17d40>
   1951c:	ldr	w1, [sp, #92]
   19520:	ldr	x0, [sp, #96]
   19524:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   19528:	cbnz	w0, 195cc <PyFloat_FromString@plt+0x12b3c>
   1952c:	mov	x0, x19
   19530:	ldp	x19, x20, [sp, #16]
   19534:	ldp	x29, x30, [sp], #112
   19538:	ret
   1953c:	add	x2, sp, #0x20
   19540:	mov	x1, #0x0                   	// #0
   19544:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   19548:	ldr	x0, [x0, #1816]
   1954c:	bl	6740 <PyContextVar_Get@plt>
   19550:	tbnz	w0, #31, 195fc <PyFloat_FromString@plt+0x12b6c>
   19554:	ldr	x19, [sp, #32]
   19558:	cbz	x19, 1957c <PyFloat_FromString@plt+0x12aec>
   1955c:	str	x19, [sp, #96]
   19560:	ldr	x0, [x19]
   19564:	sub	x0, x0, #0x1
   19568:	str	x0, [x19]
   1956c:	cbnz	x0, 194a4 <PyFloat_FromString@plt+0x12a14>
   19570:	mov	x0, x19
   19574:	bl	65d0 <_Py_Dealloc@plt>
   19578:	b	194a4 <PyFloat_FromString@plt+0x12a14>
   1957c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   19580:	mov	x19, x0
   19584:	str	x0, [sp, #96]
   19588:	cbnz	x0, 19560 <PyFloat_FromString@plt+0x12ad0>
   1958c:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   19590:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19594:	add	x1, x1, #0x928
   19598:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1959c:	ldr	x0, [x0, #3936]
   195a0:	ldr	x0, [x0]
   195a4:	bl	6650 <PyErr_SetString@plt>
   195a8:	mov	x19, #0x0                   	// #0
   195ac:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   195b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   195b4:	add	x1, x1, #0xb98
   195b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   195bc:	ldr	x0, [x0, #3920]
   195c0:	ldr	x0, [x0]
   195c4:	bl	6650 <PyErr_SetString@plt>
   195c8:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   195cc:	ldr	x0, [x19]
   195d0:	sub	x0, x0, #0x1
   195d4:	str	x0, [x19]
   195d8:	cbz	x0, 195e4 <PyFloat_FromString@plt+0x12b54>
   195dc:	mov	x19, #0x0                   	// #0
   195e0:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   195e4:	mov	x0, x19
   195e8:	bl	65d0 <_Py_Dealloc@plt>
   195ec:	mov	x19, #0x0                   	// #0
   195f0:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   195f4:	mov	x19, #0x0                   	// #0
   195f8:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   195fc:	mov	x19, #0x0                   	// #0
   19600:	b	1952c <PyFloat_FromString@plt+0x12a9c>
   19604:	stp	x29, x30, [sp, #-144]!
   19608:	mov	x29, sp
   1960c:	stp	x19, x20, [sp, #16]
   19610:	mov	x19, x0
   19614:	mov	x0, x1
   19618:	mov	x1, x2
   1961c:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   19620:	ldr	x2, [x2, #4008]
   19624:	str	x2, [sp, #136]
   19628:	str	x2, [sp, #128]
   1962c:	str	wzr, [sp, #116]
   19630:	add	x6, sp, #0x80
   19634:	add	x5, sp, #0x88
   19638:	add	x4, sp, #0x78
   1963c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   19640:	add	x3, x3, #0x9a0
   19644:	add	x3, x3, #0x518
   19648:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1964c:	add	x2, x2, #0xbc0
   19650:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19654:	cbz	w0, 199bc <PyFloat_FromString@plt+0x12f2c>
   19658:	ldr	x1, [sp, #128]
   1965c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19660:	ldr	x0, [x0, #4008]
   19664:	cmp	x1, x0
   19668:	b.eq	1973c <PyFloat_FromString@plt+0x12cac>  // b.none
   1966c:	ldr	x0, [x1, #8]
   19670:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19674:	add	x1, x1, #0x320
   19678:	cmp	x0, x1
   1967c:	b.eq	19690 <PyFloat_FromString@plt+0x12c00>  // b.none
   19680:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19684:	add	x1, x1, #0x320
   19688:	bl	69c0 <PyType_IsSubtype@plt>
   1968c:	cbz	w0, 19790 <PyFloat_FromString@plt+0x12d00>
   19690:	ldr	x1, [sp, #128]
   19694:	ldp	x2, x3, [x1, #16]
   19698:	stp	x2, x3, [sp, #64]
   1969c:	ldp	x2, x3, [x1, #32]
   196a0:	stp	x2, x3, [sp, #80]
   196a4:	ldp	x0, x1, [x1, #48]
   196a8:	stp	x0, x1, [sp, #96]
   196ac:	ldr	x0, [sp, #136]
   196b0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   196b4:	ldr	x1, [x1, #4008]
   196b8:	cmp	x0, x1
   196bc:	b.eq	196dc <PyFloat_FromString@plt+0x12c4c>  // b.none
   196c0:	bl	718c <PyFloat_FromString@plt+0x6fc>
   196c4:	mov	w1, w0
   196c8:	mov	x20, #0x0                   	// #0
   196cc:	tbnz	w0, #31, 198ec <PyFloat_FromString@plt+0x12e5c>
   196d0:	add	x0, sp, #0x40
   196d4:	bl	1d5dc <PyInit__decimal@@Base+0x343c>
   196d8:	cbz	w0, 197b0 <PyFloat_FromString@plt+0x12d20>
   196dc:	ldr	x0, [x19, #8]
   196e0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   196e4:	add	x1, x1, #0x320
   196e8:	add	x1, x1, #0x1a0
   196ec:	cmp	x0, x1
   196f0:	b.eq	197cc <PyFloat_FromString@plt+0x12d3c>  // b.none
   196f4:	ldr	x20, [sp, #128]
   196f8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   196fc:	add	x1, x1, #0x320
   19700:	add	x1, x1, #0x1a0
   19704:	bl	69c0 <PyType_IsSubtype@plt>
   19708:	cbnz	w0, 197cc <PyFloat_FromString@plt+0x12d3c>
   1970c:	ldr	x0, [x19, #8]
   19710:	ldr	x1, [x0, #168]
   19714:	tbnz	w1, #24, 19854 <PyFloat_FromString@plt+0x12dc4>
   19718:	ldr	x2, [x0, #24]
   1971c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19720:	add	x1, x1, #0x8a8
   19724:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19728:	ldr	x0, [x0, #3936]
   1972c:	ldr	x0, [x0]
   19730:	bl	6a10 <PyErr_Format@plt>
   19734:	mov	x20, #0x0                   	// #0
   19738:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   1973c:	add	x2, sp, #0x38
   19740:	mov	x1, #0x0                   	// #0
   19744:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   19748:	ldr	x0, [x0, #1816]
   1974c:	bl	6740 <PyContextVar_Get@plt>
   19750:	tbnz	w0, #31, 199cc <PyFloat_FromString@plt+0x12f3c>
   19754:	ldr	x20, [sp, #56]
   19758:	cbz	x20, 1977c <PyFloat_FromString@plt+0x12cec>
   1975c:	str	x20, [sp, #128]
   19760:	ldr	x0, [x20]
   19764:	sub	x0, x0, #0x1
   19768:	str	x0, [x20]
   1976c:	cbnz	x0, 19690 <PyFloat_FromString@plt+0x12c00>
   19770:	mov	x0, x20
   19774:	bl	65d0 <_Py_Dealloc@plt>
   19778:	b	19690 <PyFloat_FromString@plt+0x12c00>
   1977c:	bl	7abc <PyFloat_FromString@plt+0x102c>
   19780:	mov	x20, x0
   19784:	str	x0, [sp, #128]
   19788:	cbnz	x0, 19760 <PyFloat_FromString@plt+0x12cd0>
   1978c:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   19790:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19794:	add	x1, x1, #0x928
   19798:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1979c:	ldr	x0, [x0, #3936]
   197a0:	ldr	x0, [x0]
   197a4:	bl	6650 <PyErr_SetString@plt>
   197a8:	mov	x20, #0x0                   	// #0
   197ac:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   197b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   197b4:	add	x1, x1, #0xbc8
   197b8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   197bc:	ldr	x0, [x0, #3920]
   197c0:	ldr	x0, [x0]
   197c4:	bl	6650 <PyErr_SetString@plt>
   197c8:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   197cc:	str	x21, [sp, #32]
   197d0:	ldr	x0, [x19]
   197d4:	add	x0, x0, #0x1
   197d8:	str	x0, [x19]
   197dc:	ldr	x21, [sp, #120]
   197e0:	ldr	x0, [x21, #8]
   197e4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   197e8:	add	x1, x1, #0x320
   197ec:	add	x1, x1, #0x1a0
   197f0:	cmp	x0, x1
   197f4:	b.eq	1987c <PyFloat_FromString@plt+0x12dec>  // b.none
   197f8:	ldr	x20, [sp, #128]
   197fc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   19800:	add	x1, x1, #0x320
   19804:	add	x1, x1, #0x1a0
   19808:	bl	69c0 <PyType_IsSubtype@plt>
   1980c:	cbnz	w0, 1987c <PyFloat_FromString@plt+0x12dec>
   19810:	ldr	x0, [x21, #8]
   19814:	ldr	x1, [x0, #168]
   19818:	tbnz	w1, #24, 198fc <PyFloat_FromString@plt+0x12e6c>
   1981c:	ldr	x2, [x0, #24]
   19820:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19824:	add	x1, x1, #0x8a8
   19828:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1982c:	ldr	x0, [x0, #3936]
   19830:	ldr	x0, [x0]
   19834:	bl	6a10 <PyErr_Format@plt>
   19838:	ldr	x0, [x19]
   1983c:	sub	x0, x0, #0x1
   19840:	str	x0, [x19]
   19844:	mov	x20, #0x0                   	// #0
   19848:	cbz	x0, 19920 <PyFloat_FromString@plt+0x12e90>
   1984c:	ldr	x21, [sp, #32]
   19850:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   19854:	mov	x2, x20
   19858:	mov	x1, x19
   1985c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   19860:	add	x0, x0, #0x320
   19864:	add	x0, x0, #0x1a0
   19868:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   1986c:	mov	x19, x0
   19870:	cbz	x0, 199c4 <PyFloat_FromString@plt+0x12f34>
   19874:	str	x21, [sp, #32]
   19878:	b	197dc <PyFloat_FromString@plt+0x12d4c>
   1987c:	ldr	x0, [x21]
   19880:	add	x0, x0, #0x1
   19884:	str	x0, [x21]
   19888:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1988c:	add	x0, x0, #0x320
   19890:	add	x0, x0, #0x1a0
   19894:	bl	6d2c <PyFloat_FromString@plt+0x29c>
   19898:	mov	x20, x0
   1989c:	cbz	x0, 19930 <PyFloat_FromString@plt+0x12ea0>
   198a0:	add	x4, sp, #0x74
   198a4:	add	x3, sp, #0x40
   198a8:	add	x2, x21, #0x18
   198ac:	add	x1, x19, #0x18
   198b0:	add	x0, x0, #0x18
   198b4:	bl	317f0 <PyInit__decimal@@Base+0x17650>
   198b8:	ldr	x0, [x19]
   198bc:	sub	x0, x0, #0x1
   198c0:	str	x0, [x19]
   198c4:	cbz	x0, 19974 <PyFloat_FromString@plt+0x12ee4>
   198c8:	ldr	x0, [x21]
   198cc:	sub	x0, x0, #0x1
   198d0:	str	x0, [x21]
   198d4:	cbz	x0, 19980 <PyFloat_FromString@plt+0x12ef0>
   198d8:	ldr	w1, [sp, #116]
   198dc:	ldr	x0, [sp, #128]
   198e0:	bl	86bc <PyFloat_FromString@plt+0x1c2c>
   198e4:	cbnz	w0, 1998c <PyFloat_FromString@plt+0x12efc>
   198e8:	ldr	x21, [sp, #32]
   198ec:	mov	x0, x20
   198f0:	ldp	x19, x20, [sp, #16]
   198f4:	ldp	x29, x30, [sp], #144
   198f8:	ret
   198fc:	mov	x2, x20
   19900:	mov	x1, x21
   19904:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   19908:	add	x0, x0, #0x320
   1990c:	add	x0, x0, #0x1a0
   19910:	bl	8a40 <PyFloat_FromString@plt+0x1fb0>
   19914:	mov	x21, x0
   19918:	cbnz	x0, 19888 <PyFloat_FromString@plt+0x12df8>
   1991c:	b	19838 <PyFloat_FromString@plt+0x12da8>
   19920:	mov	x0, x19
   19924:	bl	65d0 <_Py_Dealloc@plt>
   19928:	ldr	x21, [sp, #32]
   1992c:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   19930:	ldr	x0, [x19]
   19934:	sub	x0, x0, #0x1
   19938:	str	x0, [x19]
   1993c:	cbz	x0, 19958 <PyFloat_FromString@plt+0x12ec8>
   19940:	ldr	x0, [x21]
   19944:	sub	x0, x0, #0x1
   19948:	str	x0, [x21]
   1994c:	cbz	x0, 19964 <PyFloat_FromString@plt+0x12ed4>
   19950:	ldr	x21, [sp, #32]
   19954:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   19958:	mov	x0, x19
   1995c:	bl	65d0 <_Py_Dealloc@plt>
   19960:	b	19940 <PyFloat_FromString@plt+0x12eb0>
   19964:	mov	x0, x21
   19968:	bl	65d0 <_Py_Dealloc@plt>
   1996c:	ldr	x21, [sp, #32]
   19970:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   19974:	mov	x0, x19
   19978:	bl	65d0 <_Py_Dealloc@plt>
   1997c:	b	198c8 <PyFloat_FromString@plt+0x12e38>
   19980:	mov	x0, x21
   19984:	bl	65d0 <_Py_Dealloc@plt>
   19988:	b	198d8 <PyFloat_FromString@plt+0x12e48>
   1998c:	ldr	x0, [x20]
   19990:	sub	x0, x0, #0x1
   19994:	str	x0, [x20]
   19998:	cbz	x0, 199a8 <PyFloat_FromString@plt+0x12f18>
   1999c:	mov	x20, #0x0                   	// #0
   199a0:	ldr	x21, [sp, #32]
   199a4:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   199a8:	mov	x0, x20
   199ac:	bl	65d0 <_Py_Dealloc@plt>
   199b0:	mov	x20, #0x0                   	// #0
   199b4:	ldr	x21, [sp, #32]
   199b8:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   199bc:	mov	x20, #0x0                   	// #0
   199c0:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   199c4:	mov	x20, x0
   199c8:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   199cc:	mov	x20, #0x0                   	// #0
   199d0:	b	198ec <PyFloat_FromString@plt+0x12e5c>
   199d4:	sub	sp, sp, #0x130
   199d8:	stp	x29, x30, [sp, #16]
   199dc:	add	x29, sp, #0x10
   199e0:	str	x19, [sp, #32]
   199e4:	mov	x19, x0
   199e8:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   199ec:	add	x3, x3, #0x9a0
   199f0:	add	x3, x3, #0x538
   199f4:	ldr	w2, [x0, #44]
   199f8:	mov	w1, #0x79                  	// #121
   199fc:	add	x0, sp, #0xb0
   19a00:	bl	24f18 <PyInit__decimal@@Base+0xad78>
   19a04:	cmp	w0, #0x78
   19a08:	b.hi	19a7c <PyFloat_FromString@plt+0x12fec>  // b.pmore
   19a0c:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   19a10:	add	x3, x3, #0x9a0
   19a14:	add	x3, x3, #0x538
   19a18:	ldr	w2, [x19, #40]
   19a1c:	mov	w1, #0x79                  	// #121
   19a20:	add	x0, sp, #0x30
   19a24:	bl	24f18 <PyInit__decimal@@Base+0xad78>
   19a28:	cmp	w0, #0x78
   19a2c:	b.hi	19a9c <PyFloat_FromString@plt+0x1300c>  // b.pmore
   19a30:	ldrsw	x1, [x19, #52]
   19a34:	add	x2, sp, #0x30
   19a38:	str	x2, [sp]
   19a3c:	add	x7, sp, #0xb0
   19a40:	ldr	w6, [x19, #56]
   19a44:	ldr	w5, [x19, #80]
   19a48:	ldr	x4, [x19, #24]
   19a4c:	ldr	x3, [x19, #32]
   19a50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   19a54:	add	x0, x0, #0x548
   19a58:	ldr	x2, [x0, x1, lsl #3]
   19a5c:	ldr	x1, [x19, #16]
   19a60:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   19a64:	add	x0, x0, #0xc10
   19a68:	bl	6480 <PyUnicode_FromFormat@plt>
   19a6c:	ldr	x19, [sp, #32]
   19a70:	ldp	x29, x30, [sp, #16]
   19a74:	add	sp, sp, #0x130
   19a78:	ret
   19a7c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19a80:	add	x1, x1, #0xbf0
   19a84:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19a88:	ldr	x0, [x0, #3920]
   19a8c:	ldr	x0, [x0]
   19a90:	bl	6650 <PyErr_SetString@plt>
   19a94:	mov	x0, #0x0                   	// #0
   19a98:	b	19a6c <PyFloat_FromString@plt+0x12fdc>
   19a9c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19aa0:	add	x1, x1, #0xbf0
   19aa4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19aa8:	ldr	x0, [x0, #3920]
   19aac:	ldr	x0, [x0]
   19ab0:	bl	6650 <PyErr_SetString@plt>
   19ab4:	mov	x0, #0x0                   	// #0
   19ab8:	b	19a6c <PyFloat_FromString@plt+0x12fdc>
   19abc:	stp	x29, x30, [sp, #-32]!
   19ac0:	mov	x29, sp
   19ac4:	str	x19, [sp, #16]
   19ac8:	mov	x19, x0
   19acc:	mov	x0, x1
   19ad0:	ldr	x2, [x1, #8]
   19ad4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   19ad8:	ldr	x1, [x1, #1736]
   19adc:	cmp	x2, x1
   19ae0:	b.eq	19b14 <PyFloat_FromString@plt+0x13084>  // b.none
   19ae4:	bl	6d98 <PyFloat_FromString@plt+0x308>
   19ae8:	mov	w1, w0
   19aec:	tst	w0, #0x18000
   19af0:	b.ne	19b40 <PyFloat_FromString@plt+0x130b0>  // b.any
   19af4:	add	x0, x19, #0x10
   19af8:	bl	1d618 <PyInit__decimal@@Base+0x3478>
   19afc:	mov	w1, w0
   19b00:	mov	w0, #0x0                   	// #0
   19b04:	cbz	w1, 19b20 <PyFloat_FromString@plt+0x13090>
   19b08:	ldr	x19, [sp, #16]
   19b0c:	ldp	x29, x30, [sp], #32
   19b10:	ret
   19b14:	ldr	x0, [x0, #16]
   19b18:	ldr	w1, [x0]
   19b1c:	b	19af4 <PyFloat_FromString@plt+0x13064>
   19b20:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19b24:	add	x1, x1, #0xc70
   19b28:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19b2c:	ldr	x0, [x0, #3920]
   19b30:	ldr	x0, [x0]
   19b34:	bl	6650 <PyErr_SetString@plt>
   19b38:	mov	w0, #0xffffffff            	// #-1
   19b3c:	b	19b08 <PyFloat_FromString@plt+0x13078>
   19b40:	mov	w0, #0xffffffff            	// #-1
   19b44:	b	19b08 <PyFloat_FromString@plt+0x13078>
   19b48:	stp	x29, x30, [sp, #-32]!
   19b4c:	mov	x29, sp
   19b50:	str	x19, [sp, #16]
   19b54:	mov	x19, x0
   19b58:	mov	x0, x1
   19b5c:	ldr	x2, [x1, #8]
   19b60:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   19b64:	ldr	x1, [x1, #1736]
   19b68:	cmp	x2, x1
   19b6c:	b.eq	19ba0 <PyFloat_FromString@plt+0x13110>  // b.none
   19b70:	bl	6d98 <PyFloat_FromString@plt+0x308>
   19b74:	mov	w1, w0
   19b78:	tst	w0, #0x18000
   19b7c:	b.ne	19bcc <PyFloat_FromString@plt+0x1313c>  // b.any
   19b80:	add	x0, x19, #0x10
   19b84:	bl	1d5f8 <PyInit__decimal@@Base+0x3458>
   19b88:	mov	w1, w0
   19b8c:	mov	w0, #0x0                   	// #0
   19b90:	cbz	w1, 19bac <PyFloat_FromString@plt+0x1311c>
   19b94:	ldr	x19, [sp, #16]
   19b98:	ldp	x29, x30, [sp], #32
   19b9c:	ret
   19ba0:	ldr	x0, [x0, #16]
   19ba4:	ldr	w1, [x0]
   19ba8:	b	19b80 <PyFloat_FromString@plt+0x130f0>
   19bac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19bb0:	add	x1, x1, #0xca0
   19bb4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19bb8:	ldr	x0, [x0, #3920]
   19bbc:	ldr	x0, [x0]
   19bc0:	bl	6650 <PyErr_SetString@plt>
   19bc4:	mov	w0, #0xffffffff            	// #-1
   19bc8:	b	19b94 <PyFloat_FromString@plt+0x13104>
   19bcc:	mov	w0, #0xffffffff            	// #-1
   19bd0:	b	19b94 <PyFloat_FromString@plt+0x13104>
   19bd4:	stp	x29, x30, [sp, #-48]!
   19bd8:	mov	x29, sp
   19bdc:	cbz	x2, 19c48 <PyFloat_FromString@plt+0x131b8>
   19be0:	stp	x19, x20, [sp, #16]
   19be4:	str	x21, [sp, #32]
   19be8:	mov	x21, x0
   19bec:	mov	x19, x1
   19bf0:	mov	x20, x2
   19bf4:	ldr	x0, [x1, #8]
   19bf8:	ldr	x0, [x0, #168]
   19bfc:	tbz	w0, #28, 19c28 <PyFloat_FromString@plt+0x13198>
   19c00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19c04:	add	x1, x1, #0x5d0
   19c08:	mov	x0, x19
   19c0c:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
   19c10:	cbz	w0, 19c68 <PyFloat_FromString@plt+0x131d8>
   19c14:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19c18:	add	x1, x1, #0x5d8
   19c1c:	mov	x0, x19
   19c20:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
   19c24:	cbz	w0, 19c80 <PyFloat_FromString@plt+0x131f0>
   19c28:	mov	x2, x20
   19c2c:	mov	x1, x19
   19c30:	mov	x0, x21
   19c34:	bl	69b0 <PyObject_GenericSetAttr@plt>
   19c38:	ldp	x19, x20, [sp, #16]
   19c3c:	ldr	x21, [sp, #32]
   19c40:	ldp	x29, x30, [sp], #48
   19c44:	ret
   19c48:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19c4c:	add	x1, x1, #0xcc8
   19c50:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19c54:	ldr	x0, [x0, #4048]
   19c58:	ldr	x0, [x0]
   19c5c:	bl	6650 <PyErr_SetString@plt>
   19c60:	mov	w0, #0xffffffff            	// #-1
   19c64:	b	19c40 <PyFloat_FromString@plt+0x131b0>
   19c68:	mov	x1, x20
   19c6c:	mov	x0, x21
   19c70:	bl	19b48 <PyFloat_FromString@plt+0x130b8>
   19c74:	ldp	x19, x20, [sp, #16]
   19c78:	ldr	x21, [sp, #32]
   19c7c:	b	19c40 <PyFloat_FromString@plt+0x131b0>
   19c80:	mov	x1, x20
   19c84:	mov	x0, x21
   19c88:	bl	19abc <PyFloat_FromString@plt+0x1302c>
   19c8c:	ldp	x19, x20, [sp, #16]
   19c90:	ldr	x21, [sp, #32]
   19c94:	b	19c40 <PyFloat_FromString@plt+0x131b0>
   19c98:	stp	x29, x30, [sp, #-32]!
   19c9c:	mov	x29, sp
   19ca0:	stp	x19, x20, [sp, #16]
   19ca4:	mov	x20, x0
   19ca8:	mov	x0, x1
   19cac:	bl	66f0 <PyLong_AsSsize_t@plt>
   19cb0:	mov	x19, x0
   19cb4:	cmn	x0, #0x1
   19cb8:	b.eq	19cf8 <PyFloat_FromString@plt+0x13268>  // b.none
   19cbc:	mov	x0, #0x80000000            	// #2147483648
   19cc0:	add	x0, x19, x0
   19cc4:	mov	x1, #0xffffffff            	// #4294967295
   19cc8:	cmp	x0, x1
   19ccc:	mov	x0, #0x7fffffff            	// #2147483647
   19cd0:	csel	x19, x19, x0, ls  // ls = plast
   19cd4:	mov	w1, w19
   19cd8:	add	x0, x20, #0x10
   19cdc:	bl	1d638 <PyInit__decimal@@Base+0x3498>
   19ce0:	mov	w1, w0
   19ce4:	mov	w0, #0x0                   	// #0
   19ce8:	cbz	w1, 19d08 <PyFloat_FromString@plt+0x13278>
   19cec:	ldp	x19, x20, [sp, #16]
   19cf0:	ldp	x29, x30, [sp], #32
   19cf4:	ret
   19cf8:	bl	67e0 <PyErr_Occurred@plt>
   19cfc:	cbz	x0, 19cd4 <PyFloat_FromString@plt+0x13244>
   19d00:	mov	w0, #0xffffffff            	// #-1
   19d04:	b	19cec <PyFloat_FromString@plt+0x1325c>
   19d08:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19d0c:	add	x1, x1, #0xcf0
   19d10:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19d14:	ldr	x0, [x0, #3928]
   19d18:	ldr	x0, [x0]
   19d1c:	bl	6650 <PyErr_SetString@plt>
   19d20:	mov	w0, #0xffffffff            	// #-1
   19d24:	b	19cec <PyFloat_FromString@plt+0x1325c>
   19d28:	stp	x29, x30, [sp, #-32]!
   19d2c:	mov	x29, sp
   19d30:	stp	x19, x20, [sp, #16]
   19d34:	mov	x20, x0
   19d38:	mov	x0, x1
   19d3c:	bl	66f0 <PyLong_AsSsize_t@plt>
   19d40:	mov	x19, x0
   19d44:	cmn	x0, #0x1
   19d48:	b.eq	19d70 <PyFloat_FromString@plt+0x132e0>  // b.none
   19d4c:	mov	x1, x19
   19d50:	add	x0, x20, #0x10
   19d54:	bl	1d588 <PyInit__decimal@@Base+0x33e8>
   19d58:	mov	w1, w0
   19d5c:	mov	w0, #0x0                   	// #0
   19d60:	cbz	w1, 19d80 <PyFloat_FromString@plt+0x132f0>
   19d64:	ldp	x19, x20, [sp, #16]
   19d68:	ldp	x29, x30, [sp], #32
   19d6c:	ret
   19d70:	bl	67e0 <PyErr_Occurred@plt>
   19d74:	cbz	x0, 19d4c <PyFloat_FromString@plt+0x132bc>
   19d78:	mov	w0, #0xffffffff            	// #-1
   19d7c:	b	19d64 <PyFloat_FromString@plt+0x132d4>
   19d80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19d84:	add	x1, x1, #0xd18
   19d88:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19d8c:	ldr	x0, [x0, #3928]
   19d90:	ldr	x0, [x0]
   19d94:	bl	6650 <PyErr_SetString@plt>
   19d98:	mov	w0, #0xffffffff            	// #-1
   19d9c:	b	19d64 <PyFloat_FromString@plt+0x132d4>
   19da0:	stp	x29, x30, [sp, #-32]!
   19da4:	mov	x29, sp
   19da8:	stp	x19, x20, [sp, #16]
   19dac:	mov	x20, x0
   19db0:	mov	x0, x1
   19db4:	bl	66f0 <PyLong_AsSsize_t@plt>
   19db8:	mov	x19, x0
   19dbc:	cmn	x0, #0x1
   19dc0:	b.eq	19de8 <PyFloat_FromString@plt+0x13358>  // b.none
   19dc4:	mov	x1, x19
   19dc8:	add	x0, x20, #0x10
   19dcc:	bl	1d5b0 <PyInit__decimal@@Base+0x3410>
   19dd0:	mov	w1, w0
   19dd4:	mov	w0, #0x0                   	// #0
   19dd8:	cbz	w1, 19df8 <PyFloat_FromString@plt+0x13368>
   19ddc:	ldp	x19, x20, [sp, #16]
   19de0:	ldp	x29, x30, [sp], #32
   19de4:	ret
   19de8:	bl	67e0 <PyErr_Occurred@plt>
   19dec:	cbz	x0, 19dc4 <PyFloat_FromString@plt+0x13334>
   19df0:	mov	w0, #0xffffffff            	// #-1
   19df4:	b	19ddc <PyFloat_FromString@plt+0x1334c>
   19df8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19dfc:	add	x1, x1, #0xd40
   19e00:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19e04:	ldr	x0, [x0, #3928]
   19e08:	ldr	x0, [x0]
   19e0c:	bl	6650 <PyErr_SetString@plt>
   19e10:	mov	w0, #0xffffffff            	// #-1
   19e14:	b	19ddc <PyFloat_FromString@plt+0x1334c>
   19e18:	stp	x29, x30, [sp, #-32]!
   19e1c:	mov	x29, sp
   19e20:	stp	x19, x20, [sp, #16]
   19e24:	mov	x20, x0
   19e28:	mov	x0, x1
   19e2c:	bl	66f0 <PyLong_AsSsize_t@plt>
   19e30:	mov	x19, x0
   19e34:	cmn	x0, #0x1
   19e38:	b.eq	19e60 <PyFloat_FromString@plt+0x133d0>  // b.none
   19e3c:	mov	x1, x19
   19e40:	add	x0, x20, #0x10
   19e44:	bl	1d55c <PyInit__decimal@@Base+0x33bc>
   19e48:	mov	w1, w0
   19e4c:	mov	w0, #0x0                   	// #0
   19e50:	cbz	w1, 19e70 <PyFloat_FromString@plt+0x133e0>
   19e54:	ldp	x19, x20, [sp, #16]
   19e58:	ldp	x29, x30, [sp], #32
   19e5c:	ret
   19e60:	bl	67e0 <PyErr_Occurred@plt>
   19e64:	cbz	x0, 19e3c <PyFloat_FromString@plt+0x133ac>
   19e68:	mov	w0, #0xffffffff            	// #-1
   19e6c:	b	19e54 <PyFloat_FromString@plt+0x133c4>
   19e70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19e74:	add	x1, x1, #0xd68
   19e78:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19e7c:	ldr	x0, [x0, #3928]
   19e80:	ldr	x0, [x0]
   19e84:	bl	6650 <PyErr_SetString@plt>
   19e88:	mov	w0, #0xffffffff            	// #-1
   19e8c:	b	19e54 <PyFloat_FromString@plt+0x133c4>
   19e90:	stp	x29, x30, [sp, #-32]!
   19e94:	mov	x29, sp
   19e98:	str	x19, [sp, #16]
   19e9c:	mov	x19, x0
   19ea0:	mov	x0, x1
   19ea4:	bl	66f0 <PyLong_AsSsize_t@plt>
   19ea8:	cmn	x0, #0x1
   19eac:	b.eq	19ecc <PyFloat_FromString@plt+0x1343c>  // b.none
   19eb0:	cmp	x0, #0x1
   19eb4:	b.hi	19ed4 <PyFloat_FromString@plt+0x13444>  // b.pmore
   19eb8:	str	w0, [x19, #80]
   19ebc:	mov	w0, #0x0                   	// #0
   19ec0:	ldr	x19, [sp, #16]
   19ec4:	ldp	x29, x30, [sp], #32
   19ec8:	ret
   19ecc:	bl	67e0 <PyErr_Occurred@plt>
   19ed0:	cbnz	x0, 19ef4 <PyFloat_FromString@plt+0x13464>
   19ed4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   19ed8:	add	x1, x1, #0xd90
   19edc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19ee0:	ldr	x0, [x0, #3928]
   19ee4:	ldr	x0, [x0]
   19ee8:	bl	6650 <PyErr_SetString@plt>
   19eec:	mov	w0, #0xffffffff            	// #-1
   19ef0:	b	19ec0 <PyFloat_FromString@plt+0x13430>
   19ef4:	mov	w0, #0xffffffff            	// #-1
   19ef8:	b	19ec0 <PyFloat_FromString@plt+0x13430>
   19efc:	sub	sp, sp, #0x80
   19f00:	stp	x29, x30, [sp, #32]
   19f04:	add	x29, sp, #0x20
   19f08:	str	x19, [sp, #48]
   19f0c:	mov	x19, x0
   19f10:	mov	x0, x1
   19f14:	mov	x1, x2
   19f18:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   19f1c:	ldr	x2, [x2, #4008]
   19f20:	str	x2, [sp, #120]
   19f24:	str	x2, [sp, #112]
   19f28:	str	x2, [sp, #104]
   19f2c:	str	x2, [sp, #96]
   19f30:	str	x2, [sp, #88]
   19f34:	str	x2, [sp, #80]
   19f38:	str	x2, [sp, #72]
   19f3c:	str	x2, [sp, #64]
   19f40:	add	x2, sp, #0x40
   19f44:	str	x2, [sp, #24]
   19f48:	add	x2, sp, #0x48
   19f4c:	str	x2, [sp, #16]
   19f50:	add	x2, sp, #0x50
   19f54:	str	x2, [sp, #8]
   19f58:	add	x2, sp, #0x58
   19f5c:	str	x2, [sp]
   19f60:	add	x7, sp, #0x60
   19f64:	add	x6, sp, #0x68
   19f68:	add	x5, sp, #0x70
   19f6c:	add	x4, sp, #0x78
   19f70:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   19f74:	add	x3, x3, #0x9a0
   19f78:	add	x3, x3, #0x5b0
   19f7c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   19f80:	add	x2, x2, #0xdb8
   19f84:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19f88:	cbz	w0, 1a168 <PyFloat_FromString@plt+0x136d8>
   19f8c:	ldr	x1, [sp, #120]
   19f90:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19f94:	ldr	x0, [x0, #4008]
   19f98:	cmp	x1, x0
   19f9c:	b.eq	19fb0 <PyFloat_FromString@plt+0x13520>  // b.none
   19fa0:	mov	x2, #0x0                   	// #0
   19fa4:	mov	x0, x19
   19fa8:	bl	19e18 <PyFloat_FromString@plt+0x13388>
   19fac:	tbnz	w0, #31, 1a170 <PyFloat_FromString@plt+0x136e0>
   19fb0:	ldr	x1, [sp, #112]
   19fb4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19fb8:	ldr	x0, [x0, #4008]
   19fbc:	cmp	x1, x0
   19fc0:	b.eq	19fd4 <PyFloat_FromString@plt+0x13544>  // b.none
   19fc4:	mov	x2, #0x0                   	// #0
   19fc8:	mov	x0, x19
   19fcc:	bl	7238 <PyFloat_FromString@plt+0x7a8>
   19fd0:	tbnz	w0, #31, 1a178 <PyFloat_FromString@plt+0x136e8>
   19fd4:	ldr	x1, [sp, #104]
   19fd8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   19fdc:	ldr	x0, [x0, #4008]
   19fe0:	cmp	x1, x0
   19fe4:	b.eq	19ff8 <PyFloat_FromString@plt+0x13568>  // b.none
   19fe8:	mov	x2, #0x0                   	// #0
   19fec:	mov	x0, x19
   19ff0:	bl	19da0 <PyFloat_FromString@plt+0x13310>
   19ff4:	tbnz	w0, #31, 1a180 <PyFloat_FromString@plt+0x136f0>
   19ff8:	ldr	x1, [sp, #96]
   19ffc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a000:	ldr	x0, [x0, #4008]
   1a004:	cmp	x1, x0
   1a008:	b.eq	1a01c <PyFloat_FromString@plt+0x1358c>  // b.none
   1a00c:	mov	x2, #0x0                   	// #0
   1a010:	mov	x0, x19
   1a014:	bl	19d28 <PyFloat_FromString@plt+0x13298>
   1a018:	tbnz	w0, #31, 1a188 <PyFloat_FromString@plt+0x136f8>
   1a01c:	ldr	x1, [sp, #88]
   1a020:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a024:	ldr	x0, [x0, #4008]
   1a028:	cmp	x1, x0
   1a02c:	b.eq	1a040 <PyFloat_FromString@plt+0x135b0>  // b.none
   1a030:	mov	x2, #0x0                   	// #0
   1a034:	mov	x0, x19
   1a038:	bl	19e90 <PyFloat_FromString@plt+0x13400>
   1a03c:	tbnz	w0, #31, 1a190 <PyFloat_FromString@plt+0x13700>
   1a040:	ldr	x1, [sp, #80]
   1a044:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a048:	ldr	x0, [x0, #4008]
   1a04c:	cmp	x1, x0
   1a050:	b.eq	1a064 <PyFloat_FromString@plt+0x135d4>  // b.none
   1a054:	mov	x2, #0x0                   	// #0
   1a058:	mov	x0, x19
   1a05c:	bl	19c98 <PyFloat_FromString@plt+0x13208>
   1a060:	tbnz	w0, #31, 1a198 <PyFloat_FromString@plt+0x13708>
   1a064:	ldr	x0, [sp, #64]
   1a068:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a06c:	ldr	x2, [x2, #4008]
   1a070:	cmp	x0, x2
   1a074:	b.eq	1a0a0 <PyFloat_FromString@plt+0x13610>  // b.none
   1a078:	ldr	x1, [x0, #8]
   1a07c:	ldr	x1, [x1, #168]
   1a080:	tbz	w1, #25, 1a128 <PyFloat_FromString@plt+0x13698>
   1a084:	bl	95b0 <PyFloat_FromString@plt+0x2b20>
   1a088:	mov	w1, w0
   1a08c:	tst	w0, #0x18000
   1a090:	b.ne	1a120 <PyFloat_FromString@plt+0x13690>  // b.any
   1a094:	add	x0, x19, #0x10
   1a098:	bl	1d5f8 <PyInit__decimal@@Base+0x3458>
   1a09c:	cbz	w0, 1a108 <PyFloat_FromString@plt+0x13678>
   1a0a0:	ldr	x1, [sp, #72]
   1a0a4:	mov	w0, #0x0                   	// #0
   1a0a8:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a0ac:	ldr	x2, [x2, #4008]
   1a0b0:	cmp	x1, x2
   1a0b4:	b.eq	1a150 <PyFloat_FromString@plt+0x136c0>  // b.none
   1a0b8:	ldr	x0, [x1, #8]
   1a0bc:	ldr	x0, [x0, #168]
   1a0c0:	tbz	w0, #25, 1a13c <PyFloat_FromString@plt+0x136ac>
   1a0c4:	mov	x0, x1
   1a0c8:	bl	95b0 <PyFloat_FromString@plt+0x2b20>
   1a0cc:	mov	w1, w0
   1a0d0:	tst	w0, #0x18000
   1a0d4:	b.ne	1a160 <PyFloat_FromString@plt+0x136d0>  // b.any
   1a0d8:	add	x0, x19, #0x10
   1a0dc:	bl	1d618 <PyInit__decimal@@Base+0x3478>
   1a0e0:	mov	w1, #0x0                   	// #0
   1a0e4:	cbnz	w0, 1a148 <PyFloat_FromString@plt+0x136b8>
   1a0e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a0ec:	add	x1, x1, #0xdf0
   1a0f0:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a0f4:	ldr	x0, [x0, #3920]
   1a0f8:	ldr	x0, [x0]
   1a0fc:	bl	6650 <PyErr_SetString@plt>
   1a100:	mov	w1, #0xffffffff            	// #-1
   1a104:	b	1a148 <PyFloat_FromString@plt+0x136b8>
   1a108:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a10c:	add	x1, x1, #0xdc8
   1a110:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a114:	ldr	x0, [x0, #3920]
   1a118:	ldr	x0, [x0]
   1a11c:	bl	6650 <PyErr_SetString@plt>
   1a120:	mov	w0, #0xffffffff            	// #-1
   1a124:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a128:	mov	x1, x0
   1a12c:	mov	x0, x19
   1a130:	bl	19b48 <PyFloat_FromString@plt+0x130b8>
   1a134:	tbz	w0, #31, 1a0a0 <PyFloat_FromString@plt+0x13610>
   1a138:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a13c:	mov	x0, x19
   1a140:	bl	19abc <PyFloat_FromString@plt+0x1302c>
   1a144:	mov	w1, w0
   1a148:	cmp	w1, #0x0
   1a14c:	csel	w0, w1, wzr, le
   1a150:	ldr	x19, [sp, #48]
   1a154:	ldp	x29, x30, [sp, #32]
   1a158:	add	sp, sp, #0x80
   1a15c:	ret
   1a160:	mov	w1, #0xffffffff            	// #-1
   1a164:	b	1a148 <PyFloat_FromString@plt+0x136b8>
   1a168:	mov	w0, #0xffffffff            	// #-1
   1a16c:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a170:	mov	w0, #0xffffffff            	// #-1
   1a174:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a178:	mov	w0, #0xffffffff            	// #-1
   1a17c:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a180:	mov	w0, #0xffffffff            	// #-1
   1a184:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a188:	mov	w0, #0xffffffff            	// #-1
   1a18c:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a190:	mov	w0, #0xffffffff            	// #-1
   1a194:	b	1a150 <PyFloat_FromString@plt+0x136c0>
   1a198:	mov	w0, #0xffffffff            	// #-1
   1a19c:	b	1a150 <PyFloat_FromString@plt+0x136c0>

000000000001a1a0 <PyInit__decimal@@Base>:
   1a1a0:	stp	x29, x30, [sp, #-144]!
   1a1a4:	mov	x29, sp
   1a1a8:	stp	x19, x20, [sp, #16]
   1a1ac:	stp	x21, x22, [sp, #32]
   1a1b0:	stp	x23, x24, [sp, #48]
   1a1b4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a1b8:	adrp	x0, 6000 <memcpy@plt-0x470>
   1a1bc:	add	x0, x0, #0xba8
   1a1c0:	str	x0, [x1, #1424]
   1a1c4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a1c8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a1cc:	ldr	x0, [x0, #4064]
   1a1d0:	str	x0, [x1, #1680]
   1a1d4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a1d8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a1dc:	ldr	x0, [x0, #3944]
   1a1e0:	str	x0, [x1, #1696]
   1a1e4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a1e8:	adrp	x0, 25000 <PyInit__decimal@@Base+0xae60>
   1a1ec:	add	x0, x0, #0xf0
   1a1f0:	str	x0, [x1, #1688]
   1a1f4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a1f8:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a1fc:	ldr	x0, [x0, #3888]
   1a200:	str	x0, [x1, #1704]
   1a204:	mov	x0, #0x4                   	// #4
   1a208:	bl	1d2b4 <PyInit__decimal@@Base+0x3114>
   1a20c:	mov	x1, #0x0                   	// #0
   1a210:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a214:	add	x0, x0, #0xe20
   1a218:	bl	6760 <PyContextVar_New@plt>
   1a21c:	mov	x19, x0
   1a220:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a224:	str	x19, [x0, #1816]
   1a228:	cbz	x19, 1ac30 <PyInit__decimal@@Base+0xa90>
   1a22c:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a230:	ldr	x0, [x0, #4040]
   1a234:	ldr	x0, [x0, #96]
   1a238:	adrp	x19, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a23c:	add	x19, x19, #0x6c0
   1a240:	ldr	x1, [x0, #16]
   1a244:	str	x1, [x19, #160]
   1a248:	ldr	x1, [x0, #232]
   1a24c:	str	x1, [x19, #168]
   1a250:	ldr	x0, [x0, #40]
   1a254:	str	x0, [x19, #152]
   1a258:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a25c:	ldr	x0, [x0, #3864]
   1a260:	ldr	x1, [x0, #96]
   1a264:	ldr	x1, [x1, #64]
   1a268:	str	x1, [x19, #120]
   1a26c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a270:	add	x1, x1, #0xe30
   1a274:	bl	7a4c <PyFloat_FromString@plt+0xfbc>
   1a278:	str	x0, [x19, #128]
   1a27c:	cbz	x0, 1ac44 <PyInit__decimal@@Base+0xaa4>
   1a280:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a284:	add	x1, x1, #0xe48
   1a288:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a28c:	ldr	x0, [x0, #4040]
   1a290:	bl	7a4c <PyFloat_FromString@plt+0xfbc>
   1a294:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a298:	str	x0, [x1, #1864]
   1a29c:	cbz	x0, 1ac58 <PyInit__decimal@@Base+0xab8>
   1a2a0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a2a4:	add	x1, x1, #0x320
   1a2a8:	add	x0, x1, #0x1a0
   1a2ac:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a2b0:	ldr	x2, [x2, #4032]
   1a2b4:	str	x2, [x0, #256]
   1a2b8:	str	x2, [x1, #256]
   1a2bc:	str	x2, [x1, #1088]
   1a2c0:	str	x2, [x1, #1504]
   1a2c4:	bl	66c0 <PyType_Ready@plt>
   1a2c8:	tbnz	w0, #31, 1ac6c <PyInit__decimal@@Base+0xacc>
   1a2cc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a2d0:	add	x0, x0, #0x320
   1a2d4:	bl	66c0 <PyType_Ready@plt>
   1a2d8:	tbnz	w0, #31, 1ac80 <PyInit__decimal@@Base+0xae0>
   1a2dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a2e0:	add	x0, x0, #0x320
   1a2e4:	add	x0, x0, #0x4e0
   1a2e8:	bl	66c0 <PyType_Ready@plt>
   1a2ec:	tbnz	w0, #31, 1ac94 <PyInit__decimal@@Base+0xaf4>
   1a2f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a2f4:	add	x0, x0, #0x320
   1a2f8:	add	x0, x0, #0x340
   1a2fc:	bl	66c0 <PyType_Ready@plt>
   1a300:	tbnz	w0, #31, 1aca8 <PyInit__decimal@@Base+0xb08>
   1a304:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a308:	add	x0, x0, #0xe58
   1a30c:	bl	6960 <PyUnicode_FromString@plt>
   1a310:	mov	x20, x0
   1a314:	cbz	x0, 1acbc <PyInit__decimal@@Base+0xb1c>
   1a318:	mov	x2, x0
   1a31c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a320:	add	x1, x1, #0xe60
   1a324:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a328:	ldr	x0, [x0, #1480]
   1a32c:	bl	64c0 <PyDict_SetItemString@plt>
   1a330:	tbnz	w0, #31, 1abe8 <PyInit__decimal@@Base+0xa48>
   1a334:	mov	x2, x20
   1a338:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a33c:	add	x1, x1, #0xe60
   1a340:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a344:	ldr	x0, [x0, #1064]
   1a348:	bl	64c0 <PyDict_SetItemString@plt>
   1a34c:	tbnz	w0, #31, 1ac10 <PyInit__decimal@@Base+0xa70>
   1a350:	ldr	x0, [x20]
   1a354:	sub	x0, x0, #0x1
   1a358:	str	x0, [x20]
   1a35c:	cbz	x0, 1a63c <PyInit__decimal@@Base+0x49c>
   1a360:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a364:	add	x0, x0, #0xe70
   1a368:	bl	6830 <PyImport_ImportModule@plt>
   1a36c:	mov	x19, x0
   1a370:	cbz	x0, 1accc <PyInit__decimal@@Base+0xb2c>
   1a374:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a378:	add	x1, x1, #0xe78
   1a37c:	bl	6580 <PyObject_GetAttrString@plt>
   1a380:	mov	x23, x0
   1a384:	cbz	x0, 1af04 <PyInit__decimal@@Base+0xd64>
   1a388:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a38c:	add	x3, x3, #0x320
   1a390:	add	x3, x3, #0x1a0
   1a394:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a398:	add	x2, x2, #0xe80
   1a39c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a3a0:	add	x1, x1, #0xe88
   1a3a4:	bl	6550 <PyObject_CallMethod@plt>
   1a3a8:	cbz	x0, 1af04 <PyInit__decimal@@Base+0xd64>
   1a3ac:	ldr	x1, [x0]
   1a3b0:	sub	x1, x1, #0x1
   1a3b4:	str	x1, [x0]
   1a3b8:	cbz	x1, 1a648 <PyInit__decimal@@Base+0x4a8>
   1a3bc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a3c0:	add	x1, x1, #0xe98
   1a3c4:	mov	x0, x19
   1a3c8:	bl	6580 <PyObject_GetAttrString@plt>
   1a3cc:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a3d0:	str	x0, [x1, #1872]
   1a3d4:	cbz	x0, 1af04 <PyInit__decimal@@Base+0xd64>
   1a3d8:	ldr	x0, [x19]
   1a3dc:	sub	x0, x0, #0x1
   1a3e0:	str	x0, [x19]
   1a3e4:	cbz	x0, 1a650 <PyInit__decimal@@Base+0x4b0>
   1a3e8:	ldr	x0, [x23]
   1a3ec:	sub	x0, x0, #0x1
   1a3f0:	str	x0, [x23]
   1a3f4:	cbz	x0, 1a65c <PyInit__decimal@@Base+0x4bc>
   1a3f8:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a3fc:	add	x0, x0, #0xea8
   1a400:	bl	6830 <PyImport_ImportModule@plt>
   1a404:	mov	x22, x0
   1a408:	cbz	x0, 1acdc <PyInit__decimal@@Base+0xb3c>
   1a40c:	adrp	x4, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a410:	add	x4, x4, #0xeb8
   1a414:	adrp	x3, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a418:	add	x3, x3, #0xed0
   1a41c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a420:	add	x2, x2, #0xee0
   1a424:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a428:	add	x1, x1, #0xee8
   1a42c:	bl	6550 <PyObject_CallMethod@plt>
   1a430:	mov	x19, x0
   1a434:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a438:	str	x19, [x0, #1840]
   1a43c:	cbz	x19, 1acec <PyInit__decimal@@Base+0xb4c>
   1a440:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a444:	add	x0, x0, #0xe58
   1a448:	bl	6960 <PyUnicode_FromString@plt>
   1a44c:	mov	x20, x0
   1a450:	cbz	x0, 1acf8 <PyInit__decimal@@Base+0xb58>
   1a454:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a458:	ldr	x0, [x0, #1840]
   1a45c:	mov	x2, x20
   1a460:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a464:	add	x1, x1, #0xe60
   1a468:	ldr	x0, [x0, #264]
   1a46c:	bl	64c0 <PyDict_SetItemString@plt>
   1a470:	tbnz	w0, #31, 1ac1c <PyInit__decimal@@Base+0xa7c>
   1a474:	ldr	x0, [x20]
   1a478:	sub	x0, x0, #0x1
   1a47c:	str	x0, [x20]
   1a480:	cbz	x0, 1a668 <PyInit__decimal@@Base+0x4c8>
   1a484:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a488:	add	x0, x0, #0xef8
   1a48c:	bl	6830 <PyImport_ImportModule@plt>
   1a490:	mov	x20, x0
   1a494:	cbz	x0, 1ad04 <PyInit__decimal@@Base+0xb64>
   1a498:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a49c:	add	x1, x1, #0xf08
   1a4a0:	bl	6580 <PyObject_GetAttrString@plt>
   1a4a4:	mov	x21, x0
   1a4a8:	cbz	x0, 1ad10 <PyInit__decimal@@Base+0xb70>
   1a4ac:	mov	x4, x0
   1a4b0:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a4b4:	add	x3, x3, #0x320
   1a4b8:	add	x3, x3, #0x4e0
   1a4bc:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a4c0:	add	x2, x2, #0xf18
   1a4c4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a4c8:	add	x1, x1, #0xf28
   1a4cc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a4d0:	ldr	x0, [x0, #4000]
   1a4d4:	bl	6790 <PyObject_CallFunction@plt>
   1a4d8:	mov	x19, x0
   1a4dc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a4e0:	str	x19, [x0, #1736]
   1a4e4:	cbz	x19, 1ac3c <PyInit__decimal@@Base+0xa9c>
   1a4e8:	ldr	x0, [x22]
   1a4ec:	sub	x0, x0, #0x1
   1a4f0:	str	x0, [x22]
   1a4f4:	cbz	x0, 1a674 <PyInit__decimal@@Base+0x4d4>
   1a4f8:	ldr	x0, [x20]
   1a4fc:	sub	x0, x0, #0x1
   1a500:	str	x0, [x20]
   1a504:	cbz	x0, 1a680 <PyInit__decimal@@Base+0x4e0>
   1a508:	ldr	x0, [x21]
   1a50c:	sub	x0, x0, #0x1
   1a510:	str	x0, [x21]
   1a514:	cbz	x0, 1a68c <PyInit__decimal@@Base+0x4ec>
   1a518:	mov	w1, #0x3f5                 	// #1013
   1a51c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a520:	add	x0, x0, #0x9a0
   1a524:	add	x0, x0, #0x648
   1a528:	bl	67f0 <PyModule_Create2@plt>
   1a52c:	mov	x19, x0
   1a530:	cbz	x0, 1ad18 <PyInit__decimal@@Base+0xb78>
   1a534:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a538:	add	x2, x2, #0x320
   1a53c:	ldr	x0, [x2, #416]
   1a540:	add	x0, x0, #0x1
   1a544:	str	x0, [x2, #416]
   1a548:	add	x2, x2, #0x1a0
   1a54c:	adrp	x1, 3d000 <PyInit__decimal@@Base+0x22e60>
   1a550:	add	x1, x1, #0x6c8
   1a554:	mov	x0, x19
   1a558:	bl	6990 <PyModule_AddObject@plt>
   1a55c:	tbnz	w0, #31, 1ad28 <PyInit__decimal@@Base+0xb88>
   1a560:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a564:	ldr	x0, [x2, #800]
   1a568:	add	x0, x0, #0x1
   1a56c:	str	x0, [x2, #800]
   1a570:	add	x2, x2, #0x320
   1a574:	adrp	x1, 3d000 <PyInit__decimal@@Base+0x22e60>
   1a578:	add	x1, x1, #0x6b8
   1a57c:	mov	x0, x19
   1a580:	bl	6990 <PyModule_AddObject@plt>
   1a584:	tbnz	w0, #31, 1ad38 <PyInit__decimal@@Base+0xb98>
   1a588:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a58c:	ldr	x2, [x0, #1840]
   1a590:	ldr	x0, [x2]
   1a594:	add	x0, x0, #0x1
   1a598:	str	x0, [x2]
   1a59c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a5a0:	add	x1, x1, #0xed0
   1a5a4:	mov	x0, x19
   1a5a8:	bl	6990 <PyModule_AddObject@plt>
   1a5ac:	tbnz	w0, #31, 1ad48 <PyInit__decimal@@Base+0xba8>
   1a5b0:	mov	x2, #0x0                   	// #0
   1a5b4:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a5b8:	ldr	x0, [x0, #3960]
   1a5bc:	ldr	x1, [x0]
   1a5c0:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a5c4:	add	x0, x0, #0xf30
   1a5c8:	bl	6710 <PyErr_NewException@plt>
   1a5cc:	mov	x22, x0
   1a5d0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a5d4:	str	x22, [x0, #1920]
   1a5d8:	cbz	x22, 1ad58 <PyInit__decimal@@Base+0xbb8>
   1a5dc:	ldr	x0, [x22]
   1a5e0:	add	x0, x0, #0x1
   1a5e4:	str	x0, [x22]
   1a5e8:	mov	x2, x22
   1a5ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a5f0:	add	x1, x1, #0xf38
   1a5f4:	mov	x0, x19
   1a5f8:	bl	6990 <PyModule_AddObject@plt>
   1a5fc:	tbnz	w0, #31, 1ad64 <PyInit__decimal@@Base+0xbc4>
   1a600:	mov	x0, #0x9                   	// #9
   1a604:	bl	67a0 <PyTuple_New@plt>
   1a608:	mov	x22, x0
   1a60c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a610:	str	x22, [x0, #1728]
   1a614:	cbz	x22, 1ad74 <PyInit__decimal@@Base+0xbd4>
   1a618:	stp	x25, x26, [sp, #64]
   1a61c:	str	x27, [sp, #80]
   1a620:	adrp	x25, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a624:	add	x25, x25, #0x9a0
   1a628:	mov	w26, #0x8                   	// #8
   1a62c:	mov	x21, x25
   1a630:	mov	x27, #0x2                   	// #2
   1a634:	add	x24, x0, #0x6c0
   1a638:	b	1a75c <PyInit__decimal@@Base+0x5bc>
   1a63c:	mov	x0, x20
   1a640:	bl	65d0 <_Py_Dealloc@plt>
   1a644:	b	1a360 <PyInit__decimal@@Base+0x1c0>
   1a648:	bl	65d0 <_Py_Dealloc@plt>
   1a64c:	b	1a3bc <PyInit__decimal@@Base+0x21c>
   1a650:	mov	x0, x19
   1a654:	bl	65d0 <_Py_Dealloc@plt>
   1a658:	b	1a3e8 <PyInit__decimal@@Base+0x248>
   1a65c:	mov	x0, x23
   1a660:	bl	65d0 <_Py_Dealloc@plt>
   1a664:	b	1a3f8 <PyInit__decimal@@Base+0x258>
   1a668:	mov	x0, x20
   1a66c:	bl	65d0 <_Py_Dealloc@plt>
   1a670:	b	1a484 <PyInit__decimal@@Base+0x2e4>
   1a674:	mov	x0, x22
   1a678:	bl	65d0 <_Py_Dealloc@plt>
   1a67c:	b	1a4f8 <PyInit__decimal@@Base+0x358>
   1a680:	mov	x0, x20
   1a684:	bl	65d0 <_Py_Dealloc@plt>
   1a688:	b	1a508 <PyInit__decimal@@Base+0x368>
   1a68c:	mov	x0, x21
   1a690:	bl	65d0 <_Py_Dealloc@plt>
   1a694:	b	1a518 <PyInit__decimal@@Base+0x378>
   1a698:	cmp	w0, #0x4, lsl #12
   1a69c:	b.ne	1a7b8 <PyInit__decimal@@Base+0x618>  // b.any
   1a6a0:	ldr	x3, [x21, #184]
   1a6a4:	ldr	x2, [x21, #248]
   1a6a8:	ldr	x1, [x21, #216]
   1a6ac:	mov	x0, #0x3                   	// #3
   1a6b0:	bl	6a60 <PyTuple_Pack@plt>
   1a6b4:	mov	x22, x0
   1a6b8:	b	1a6d8 <PyInit__decimal@@Base+0x538>
   1a6bc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a6c0:	ldr	x0, [x0, #4016]
   1a6c4:	ldr	x2, [x0]
   1a6c8:	ldr	x1, [x24, #192]
   1a6cc:	mov	x0, x27
   1a6d0:	bl	6a60 <PyTuple_Pack@plt>
   1a6d4:	mov	x22, x0
   1a6d8:	cbz	x22, 1ad80 <PyInit__decimal@@Base+0xbe0>
   1a6dc:	mov	x2, #0x0                   	// #0
   1a6e0:	mov	x1, x22
   1a6e4:	ldr	x0, [x23, #264]
   1a6e8:	bl	6710 <PyErr_NewException@plt>
   1a6ec:	mov	x20, x0
   1a6f0:	str	x0, [x23, #280]
   1a6f4:	cbz	x0, 1ad94 <PyInit__decimal@@Base+0xbf4>
   1a6f8:	ldr	x0, [x22]
   1a6fc:	sub	x0, x0, #0x1
   1a700:	str	x0, [x22]
   1a704:	cbz	x0, 1a7cc <PyInit__decimal@@Base+0x62c>
   1a708:	ldr	x1, [x23, #280]
   1a70c:	ldr	x0, [x1]
   1a710:	add	x0, x0, #0x1
   1a714:	str	x0, [x1]
   1a718:	ldr	x2, [x23, #280]
   1a71c:	ldr	x1, [x23, #256]
   1a720:	mov	x0, x19
   1a724:	bl	6990 <PyModule_AddObject@plt>
   1a728:	tbnz	w0, #31, 1ada8 <PyInit__decimal@@Base+0xc08>
   1a72c:	ldr	x1, [x23, #280]
   1a730:	ldr	x0, [x1]
   1a734:	add	x0, x0, #0x1
   1a738:	str	x0, [x1]
   1a73c:	ldr	x1, [x23, #280]
   1a740:	ldr	x0, [x24]
   1a744:	add	x0, x0, w26, sxtw #3
   1a748:	str	x1, [x0, #24]
   1a74c:	sub	w26, w26, #0x1
   1a750:	sub	x25, x25, #0x20
   1a754:	cmn	w26, #0x1
   1a758:	b.eq	1a7d8 <PyInit__decimal@@Base+0x638>  // b.none
   1a75c:	mov	x23, x25
   1a760:	ldr	w0, [x25, #272]
   1a764:	cmp	w0, #0x800
   1a768:	b.eq	1a7a0 <PyInit__decimal@@Base+0x600>  // b.none
   1a76c:	b.hi	1a698 <PyInit__decimal@@Base+0x4f8>  // b.pmore
   1a770:	cmp	w0, #0x4
   1a774:	b.eq	1a6bc <PyInit__decimal@@Base+0x51c>  // b.none
   1a778:	cmp	w0, #0x400
   1a77c:	b.ne	1a7b8 <PyInit__decimal@@Base+0x618>  // b.any
   1a780:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a784:	ldr	x0, [x0, #3936]
   1a788:	ldr	x2, [x0]
   1a78c:	ldr	x1, [x24, #192]
   1a790:	mov	x0, x27
   1a794:	bl	6a60 <PyTuple_Pack@plt>
   1a798:	mov	x22, x0
   1a79c:	b	1a6d8 <PyInit__decimal@@Base+0x538>
   1a7a0:	ldr	x2, [x21, #248]
   1a7a4:	ldr	x1, [x21, #216]
   1a7a8:	mov	x0, x27
   1a7ac:	bl	6a60 <PyTuple_Pack@plt>
   1a7b0:	mov	x22, x0
   1a7b4:	b	1a6d8 <PyInit__decimal@@Base+0x538>
   1a7b8:	ldr	x1, [x24, #192]
   1a7bc:	mov	x0, #0x1                   	// #1
   1a7c0:	bl	6a60 <PyTuple_Pack@plt>
   1a7c4:	mov	x22, x0
   1a7c8:	b	1a6d8 <PyInit__decimal@@Base+0x538>
   1a7cc:	mov	x0, x22
   1a7d0:	bl	65d0 <_Py_Dealloc@plt>
   1a7d4:	b	1a708 <PyInit__decimal@@Base+0x568>
   1a7d8:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a7dc:	add	x21, x21, #0x9a0
   1a7e0:	ldr	x0, [x21, #24]
   1a7e4:	str	x0, [x21, #344]
   1a7e8:	add	x21, x21, #0x160
   1a7ec:	adrp	x23, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a7f0:	add	x23, x23, #0x9a0
   1a7f4:	mov	x25, #0x1                   	// #1
   1a7f8:	adrp	x24, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a7fc:	ldr	x24, [x24, #4016]
   1a800:	b	1a844 <PyInit__decimal@@Base+0x6a4>
   1a804:	ldr	x2, [x24]
   1a808:	ldr	x1, [x23, #24]
   1a80c:	mov	x0, #0x2                   	// #2
   1a810:	bl	6a60 <PyTuple_Pack@plt>
   1a814:	mov	x22, x0
   1a818:	b	1a868 <PyInit__decimal@@Base+0x6c8>
   1a81c:	ldr	x1, [x21, #24]
   1a820:	ldr	x0, [x1]
   1a824:	add	x0, x0, #0x1
   1a828:	str	x0, [x1]
   1a82c:	ldr	x2, [x21, #24]
   1a830:	ldr	x1, [x21]
   1a834:	mov	x0, x19
   1a838:	bl	6990 <PyModule_AddObject@plt>
   1a83c:	tbnz	w0, #31, 1ade8 <PyInit__decimal@@Base+0xc48>
   1a840:	add	x21, x21, #0x20
   1a844:	ldr	x22, [x21]
   1a848:	cbz	x22, 1a8a4 <PyInit__decimal@@Base+0x704>
   1a84c:	ldr	w0, [x21, #16]
   1a850:	cmp	w0, #0x10
   1a854:	b.eq	1a804 <PyInit__decimal@@Base+0x664>  // b.none
   1a858:	ldr	x1, [x23, #24]
   1a85c:	mov	x0, x25
   1a860:	bl	6a60 <PyTuple_Pack@plt>
   1a864:	mov	x22, x0
   1a868:	cbz	x22, 1adc0 <PyInit__decimal@@Base+0xc20>
   1a86c:	mov	x2, #0x0                   	// #0
   1a870:	mov	x1, x22
   1a874:	ldr	x0, [x21, #8]
   1a878:	bl	6710 <PyErr_NewException@plt>
   1a87c:	mov	x20, x0
   1a880:	str	x0, [x21, #24]
   1a884:	cbz	x0, 1add4 <PyInit__decimal@@Base+0xc34>
   1a888:	ldr	x0, [x22]
   1a88c:	sub	x0, x0, #0x1
   1a890:	str	x0, [x22]
   1a894:	cbnz	x0, 1a81c <PyInit__decimal@@Base+0x67c>
   1a898:	mov	x0, x22
   1a89c:	bl	65d0 <_Py_Dealloc@plt>
   1a8a0:	b	1a81c <PyInit__decimal@@Base+0x67c>
   1a8a4:	mov	x1, #0x0                   	// #0
   1a8a8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a8ac:	add	x0, x0, #0x320
   1a8b0:	bl	6840 <PyObject_CallObject@plt>
   1a8b4:	mov	x20, x0
   1a8b8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a8bc:	str	x20, [x0, #1808]
   1a8c0:	cbz	x20, 1ae00 <PyInit__decimal@@Base+0xc60>
   1a8c4:	ldr	x0, [x20]
   1a8c8:	add	x0, x0, #0x1
   1a8cc:	str	x0, [x20]
   1a8d0:	mov	x2, x20
   1a8d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a8d8:	add	x1, x1, #0xf50
   1a8dc:	mov	x0, x19
   1a8e0:	bl	6990 <PyModule_AddObject@plt>
   1a8e4:	tbnz	w0, #31, 1ae14 <PyInit__decimal@@Base+0xc74>
   1a8e8:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   1a8ec:	ldr	x2, [x2, #4024]
   1a8f0:	ldr	x0, [x2]
   1a8f4:	add	x0, x0, #0x1
   1a8f8:	str	x0, [x2]
   1a8fc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a900:	add	x1, x1, #0xf60
   1a904:	mov	x0, x19
   1a908:	bl	6990 <PyModule_AddObject@plt>
   1a90c:	tbnz	w0, #31, 1ae28 <PyInit__decimal@@Base+0xc88>
   1a910:	mov	x1, #0x0                   	// #0
   1a914:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a918:	add	x0, x0, #0x320
   1a91c:	bl	6840 <PyObject_CallObject@plt>
   1a920:	mov	x20, x0
   1a924:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a928:	str	x20, [x0, #1824]
   1a92c:	cbz	x20, 1ae3c <PyInit__decimal@@Base+0xc9c>
   1a930:	adrp	x0, 3d000 <PyInit__decimal@@Base+0x22e60>
   1a934:	add	x0, x0, #0x6d0
   1a938:	ldp	x2, x3, [x0]
   1a93c:	stp	x2, x3, [sp, #96]
   1a940:	ldp	x2, x3, [x0, #16]
   1a944:	stp	x2, x3, [sp, #112]
   1a948:	ldp	x0, x1, [x0, #32]
   1a94c:	stp	x0, x1, [sp, #128]
   1a950:	mov	x0, #0x9                   	// #9
   1a954:	str	x0, [sp, #96]
   1a958:	mov	w0, #0x4bbf                	// #19391
   1a95c:	str	w0, [sp, #120]
   1a960:	mov	w0, #0x4                   	// #4
   1a964:	str	w0, [sp, #132]
   1a968:	ldp	x2, x3, [sp, #96]
   1a96c:	stp	x2, x3, [x20, #16]
   1a970:	ldp	x2, x3, [sp, #112]
   1a974:	stp	x2, x3, [x20, #32]
   1a978:	ldp	x2, x3, [sp, #128]
   1a97c:	stp	x2, x3, [x20, #48]
   1a980:	mov	w0, #0x1                   	// #1
   1a984:	str	w0, [x20, #80]
   1a988:	ldr	x0, [x20]
   1a98c:	add	x0, x0, #0x1
   1a990:	str	x0, [x20]
   1a994:	mov	x2, x20
   1a998:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1a99c:	add	x1, x1, #0xf70
   1a9a0:	mov	x0, x19
   1a9a4:	bl	6990 <PyModule_AddObject@plt>
   1a9a8:	tbnz	w0, #31, 1ae50 <PyInit__decimal@@Base+0xcb0>
   1a9ac:	mov	x1, #0x0                   	// #0
   1a9b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41e60>
   1a9b4:	add	x0, x0, #0x320
   1a9b8:	bl	6840 <PyObject_CallObject@plt>
   1a9bc:	mov	x20, x0
   1a9c0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1a9c4:	str	x20, [x0, #1832]
   1a9c8:	cbz	x20, 1ae64 <PyInit__decimal@@Base+0xcc4>
   1a9cc:	adrp	x0, 3d000 <PyInit__decimal@@Base+0x22e60>
   1a9d0:	add	x0, x0, #0x6d0
   1a9d4:	ldp	x2, x3, [x0]
   1a9d8:	stp	x2, x3, [sp, #96]
   1a9dc:	ldp	x2, x3, [x0, #16]
   1a9e0:	stp	x2, x3, [sp, #112]
   1a9e4:	ldp	x2, x3, [x0, #32]
   1a9e8:	stp	x2, x3, [sp, #128]
   1a9ec:	mov	x0, #0x9                   	// #9
   1a9f0:	str	x0, [sp, #96]
   1a9f4:	str	wzr, [sp, #120]
   1a9f8:	ldp	x4, x5, [sp, #96]
   1a9fc:	stp	x4, x5, [x20, #16]
   1aa00:	ldp	x4, x5, [sp, #112]
   1aa04:	stp	x4, x5, [x20, #32]
   1aa08:	stp	x2, x3, [x20, #48]
   1aa0c:	mov	w0, #0x1                   	// #1
   1aa10:	str	w0, [x20, #80]
   1aa14:	ldr	x0, [x20]
   1aa18:	add	x0, x0, #0x1
   1aa1c:	str	x0, [x20]
   1aa20:	mov	x2, x20
   1aa24:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1aa28:	add	x1, x1, #0xf80
   1aa2c:	mov	x0, x19
   1aa30:	bl	6990 <PyModule_AddObject@plt>
   1aa34:	tbnz	w0, #31, 1ae78 <PyInit__decimal@@Base+0xcd8>
   1aa38:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41e60>
   1aa3c:	add	x21, x21, #0x9a0
   1aa40:	add	x21, x21, #0x5f8
   1aa44:	ldr	x20, [x21]
   1aa48:	cbz	x20, 1aa78 <PyInit__decimal@@Base+0x8d8>
   1aa4c:	ldr	x0, [x21, #8]
   1aa50:	bl	66a0 <PyLong_FromSsize_t@plt>
   1aa54:	mov	x20, x0
   1aa58:	cbz	x0, 1ae8c <PyInit__decimal@@Base+0xcec>
   1aa5c:	mov	x2, x0
   1aa60:	ldr	x1, [x21]
   1aa64:	mov	x0, x19
   1aa68:	bl	6990 <PyModule_AddObject@plt>
   1aa6c:	tbnz	w0, #31, 1ac24 <PyInit__decimal@@Base+0xa84>
   1aa70:	add	x21, x21, #0x10
   1aa74:	b	1aa44 <PyInit__decimal@@Base+0x8a4>
   1aa78:	adrp	x21, 5e000 <PyInit__decimal@@Base+0x43e60>
   1aa7c:	add	x21, x21, #0x6c0
   1aa80:	add	x21, x21, #0xb0
   1aa84:	ldr	x22, [x21]
   1aa88:	cbz	x22, 1aaa8 <PyInit__decimal@@Base+0x908>
   1aa8c:	ldrsw	x2, [x21, #8]
   1aa90:	mov	x1, x22
   1aa94:	mov	x0, x19
   1aa98:	bl	6500 <PyModule_AddIntConstant@plt>
   1aa9c:	tbnz	w0, #31, 1aea0 <PyInit__decimal@@Base+0xd00>
   1aaa0:	add	x21, x21, #0x10
   1aaa4:	b	1aa84 <PyInit__decimal@@Base+0x8e4>
   1aaa8:	adrp	x23, 5e000 <PyInit__decimal@@Base+0x43e60>
   1aaac:	add	x23, x23, #0x548
   1aab0:	adrp	x21, 5e000 <PyInit__decimal@@Base+0x43e60>
   1aab4:	add	x21, x21, #0x6c0
   1aab8:	add	x21, x21, #0x10
   1aabc:	mov	w24, #0x8                   	// #8
   1aac0:	ldr	x0, [x23]
   1aac4:	bl	6980 <PyUnicode_InternFromString@plt>
   1aac8:	mov	x20, x0
   1aacc:	str	x0, [x21]
   1aad0:	cbz	x0, 1aeb4 <PyInit__decimal@@Base+0xd14>
   1aad4:	ldr	x0, [x0]
   1aad8:	add	x0, x0, #0x1
   1aadc:	str	x0, [x20]
   1aae0:	ldr	x2, [x21]
   1aae4:	ldr	x1, [x23]
   1aae8:	mov	x0, x19
   1aaec:	bl	6990 <PyModule_AddObject@plt>
   1aaf0:	tbnz	w0, #31, 1aec8 <PyInit__decimal@@Base+0xd28>
   1aaf4:	add	x23, x23, #0x8
   1aaf8:	add	x21, x21, #0x8
   1aafc:	subs	w24, w24, #0x1
   1ab00:	b.ne	1aac0 <PyInit__decimal@@Base+0x920>  // b.any
   1ab04:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21e60>
   1ab08:	add	x2, x2, #0xf90
   1ab0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1ab10:	add	x1, x1, #0xf98
   1ab14:	mov	x0, x19
   1ab18:	bl	6970 <PyModule_AddStringConstant@plt>
   1ab1c:	tbnz	w0, #31, 1aedc <PyInit__decimal@@Base+0xd3c>
   1ab20:	bl	27b54 <PyInit__decimal@@Base+0xd9b4>
   1ab24:	mov	x2, x0
   1ab28:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21e60>
   1ab2c:	add	x1, x1, #0xfa8
   1ab30:	mov	x0, x19
   1ab34:	bl	6970 <PyModule_AddStringConstant@plt>
   1ab38:	tbnz	w0, #31, 1aef0 <PyInit__decimal@@Base+0xd50>
   1ab3c:	ldp	x25, x26, [sp, #64]
   1ab40:	ldr	x27, [sp, #80]
   1ab44:	b	1b088 <PyInit__decimal@@Base+0xee8>
   1ab48:	mov	x0, x20
   1ab4c:	bl	65d0 <_Py_Dealloc@plt>
   1ab50:	b	1ac00 <PyInit__decimal@@Base+0xa60>
   1ab54:	mov	x0, x19
   1ab58:	bl	65d0 <_Py_Dealloc@plt>
   1ab5c:	mov	x21, #0x0                   	// #0
   1ab60:	mov	x20, #0x0                   	// #0
   1ab64:	mov	x22, #0x0                   	// #0
   1ab68:	mov	x19, #0x0                   	// #0
   1ab6c:	b	1af24 <PyInit__decimal@@Base+0xd84>
   1ab70:	mov	x0, x23
   1ab74:	bl	65d0 <_Py_Dealloc@plt>
   1ab78:	b	1af38 <PyInit__decimal@@Base+0xd98>
   1ab7c:	bl	65d0 <_Py_Dealloc@plt>
   1ab80:	b	1af5c <PyInit__decimal@@Base+0xdbc>
   1ab84:	mov	x0, x22
   1ab88:	bl	65d0 <_Py_Dealloc@plt>
   1ab8c:	b	1af70 <PyInit__decimal@@Base+0xdd0>
   1ab90:	mov	x0, x20
   1ab94:	bl	65d0 <_Py_Dealloc@plt>
   1ab98:	b	1af84 <PyInit__decimal@@Base+0xde4>
   1ab9c:	mov	x0, x21
   1aba0:	bl	65d0 <_Py_Dealloc@plt>
   1aba4:	b	1af98 <PyInit__decimal@@Base+0xdf8>
   1aba8:	bl	65d0 <_Py_Dealloc@plt>
   1abac:	b	1afbc <PyInit__decimal@@Base+0xe1c>
   1abb0:	bl	65d0 <_Py_Dealloc@plt>
   1abb4:	b	1afe0 <PyInit__decimal@@Base+0xe40>
   1abb8:	bl	65d0 <_Py_Dealloc@plt>
   1abbc:	b	1b004 <PyInit__decimal@@Base+0xe64>
   1abc0:	bl	65d0 <_Py_Dealloc@plt>
   1abc4:	b	1b028 <PyInit__decimal@@Base+0xe88>
   1abc8:	bl	65d0 <_Py_Dealloc@plt>
   1abcc:	b	1b04c <PyInit__decimal@@Base+0xeac>
   1abd0:	bl	65d0 <_Py_Dealloc@plt>
   1abd4:	b	1b070 <PyInit__decimal@@Base+0xed0>
   1abd8:	mov	x0, x19
   1abdc:	bl	65d0 <_Py_Dealloc@plt>
   1abe0:	mov	x19, #0x0                   	// #0
   1abe4:	b	1b088 <PyInit__decimal@@Base+0xee8>
   1abe8:	mov	x22, #0x0                   	// #0
   1abec:	mov	x19, #0x0                   	// #0
   1abf0:	ldr	x0, [x20]
   1abf4:	sub	x0, x0, #0x1
   1abf8:	str	x0, [x20]
   1abfc:	cbz	x0, 1ab48 <PyInit__decimal@@Base+0x9a8>
   1ac00:	mov	x21, #0x0                   	// #0
   1ac04:	mov	x20, #0x0                   	// #0
   1ac08:	mov	x23, #0x0                   	// #0
   1ac0c:	b	1af24 <PyInit__decimal@@Base+0xd84>
   1ac10:	mov	x22, #0x0                   	// #0
   1ac14:	mov	x19, #0x0                   	// #0
   1ac18:	b	1abf0 <PyInit__decimal@@Base+0xa50>
   1ac1c:	mov	x19, #0x0                   	// #0
   1ac20:	b	1abf0 <PyInit__decimal@@Base+0xa50>
   1ac24:	ldp	x25, x26, [sp, #64]
   1ac28:	ldr	x27, [sp, #80]
   1ac2c:	b	1abf0 <PyInit__decimal@@Base+0xa50>
   1ac30:	mov	x21, x19
   1ac34:	mov	x20, x19
   1ac38:	mov	x22, x19
   1ac3c:	mov	x23, #0x0                   	// #0
   1ac40:	b	1af24 <PyInit__decimal@@Base+0xd84>
   1ac44:	mov	x21, #0x0                   	// #0
   1ac48:	mov	x20, #0x0                   	// #0
   1ac4c:	mov	x22, #0x0                   	// #0
   1ac50:	mov	x19, #0x0                   	// #0
   1ac54:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ac58:	mov	x21, #0x0                   	// #0
   1ac5c:	mov	x20, #0x0                   	// #0
   1ac60:	mov	x22, #0x0                   	// #0
   1ac64:	mov	x19, #0x0                   	// #0
   1ac68:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ac6c:	mov	x21, #0x0                   	// #0
   1ac70:	mov	x20, #0x0                   	// #0
   1ac74:	mov	x22, #0x0                   	// #0
   1ac78:	mov	x19, #0x0                   	// #0
   1ac7c:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ac80:	mov	x21, #0x0                   	// #0
   1ac84:	mov	x20, #0x0                   	// #0
   1ac88:	mov	x22, #0x0                   	// #0
   1ac8c:	mov	x19, #0x0                   	// #0
   1ac90:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ac94:	mov	x21, #0x0                   	// #0
   1ac98:	mov	x20, #0x0                   	// #0
   1ac9c:	mov	x22, #0x0                   	// #0
   1aca0:	mov	x19, #0x0                   	// #0
   1aca4:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aca8:	mov	x21, #0x0                   	// #0
   1acac:	mov	x20, #0x0                   	// #0
   1acb0:	mov	x22, #0x0                   	// #0
   1acb4:	mov	x19, #0x0                   	// #0
   1acb8:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1acbc:	mov	x21, x0
   1acc0:	mov	x22, x0
   1acc4:	mov	x19, x0
   1acc8:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1accc:	mov	x21, x0
   1acd0:	mov	x20, x0
   1acd4:	mov	x22, x0
   1acd8:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1acdc:	mov	x21, x0
   1ace0:	mov	x20, x0
   1ace4:	mov	x19, x0
   1ace8:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1acec:	mov	x21, x19
   1acf0:	mov	x20, x19
   1acf4:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1acf8:	mov	x21, x0
   1acfc:	mov	x19, x0
   1ad00:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad04:	mov	x21, x0
   1ad08:	mov	x19, x0
   1ad0c:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad10:	mov	x19, x0
   1ad14:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad18:	mov	x21, x0
   1ad1c:	mov	x20, x0
   1ad20:	mov	x22, x0
   1ad24:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad28:	mov	x21, #0x0                   	// #0
   1ad2c:	mov	x20, #0x0                   	// #0
   1ad30:	mov	x22, #0x0                   	// #0
   1ad34:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad38:	mov	x21, #0x0                   	// #0
   1ad3c:	mov	x20, #0x0                   	// #0
   1ad40:	mov	x22, #0x0                   	// #0
   1ad44:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad48:	mov	x21, #0x0                   	// #0
   1ad4c:	mov	x20, #0x0                   	// #0
   1ad50:	mov	x22, #0x0                   	// #0
   1ad54:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad58:	mov	x21, x22
   1ad5c:	mov	x20, x22
   1ad60:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad64:	mov	x21, #0x0                   	// #0
   1ad68:	mov	x20, #0x0                   	// #0
   1ad6c:	mov	x22, #0x0                   	// #0
   1ad70:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad74:	mov	x21, x22
   1ad78:	mov	x20, x22
   1ad7c:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad80:	mov	x21, x22
   1ad84:	mov	x20, x22
   1ad88:	ldp	x25, x26, [sp, #64]
   1ad8c:	ldr	x27, [sp, #80]
   1ad90:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ad94:	mov	x21, x0
   1ad98:	mov	x22, x0
   1ad9c:	ldp	x25, x26, [sp, #64]
   1ada0:	ldr	x27, [sp, #80]
   1ada4:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ada8:	mov	x21, #0x0                   	// #0
   1adac:	mov	x20, #0x0                   	// #0
   1adb0:	mov	x22, #0x0                   	// #0
   1adb4:	ldp	x25, x26, [sp, #64]
   1adb8:	ldr	x27, [sp, #80]
   1adbc:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1adc0:	mov	x21, x22
   1adc4:	mov	x20, x22
   1adc8:	ldp	x25, x26, [sp, #64]
   1adcc:	ldr	x27, [sp, #80]
   1add0:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1add4:	mov	x21, x0
   1add8:	mov	x22, x0
   1addc:	ldp	x25, x26, [sp, #64]
   1ade0:	ldr	x27, [sp, #80]
   1ade4:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ade8:	mov	x21, #0x0                   	// #0
   1adec:	mov	x20, #0x0                   	// #0
   1adf0:	mov	x22, #0x0                   	// #0
   1adf4:	ldp	x25, x26, [sp, #64]
   1adf8:	ldr	x27, [sp, #80]
   1adfc:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae00:	mov	x21, x20
   1ae04:	mov	x22, x20
   1ae08:	ldp	x25, x26, [sp, #64]
   1ae0c:	ldr	x27, [sp, #80]
   1ae10:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae14:	mov	x21, x22
   1ae18:	mov	x20, x22
   1ae1c:	ldp	x25, x26, [sp, #64]
   1ae20:	ldr	x27, [sp, #80]
   1ae24:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae28:	mov	x21, x22
   1ae2c:	mov	x20, x22
   1ae30:	ldp	x25, x26, [sp, #64]
   1ae34:	ldr	x27, [sp, #80]
   1ae38:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae3c:	mov	x21, x20
   1ae40:	mov	x22, x20
   1ae44:	ldp	x25, x26, [sp, #64]
   1ae48:	ldr	x27, [sp, #80]
   1ae4c:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae50:	mov	x21, x22
   1ae54:	mov	x20, x22
   1ae58:	ldp	x25, x26, [sp, #64]
   1ae5c:	ldr	x27, [sp, #80]
   1ae60:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae64:	mov	x21, x20
   1ae68:	mov	x22, x20
   1ae6c:	ldp	x25, x26, [sp, #64]
   1ae70:	ldr	x27, [sp, #80]
   1ae74:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae78:	mov	x21, x22
   1ae7c:	mov	x20, x22
   1ae80:	ldp	x25, x26, [sp, #64]
   1ae84:	ldr	x27, [sp, #80]
   1ae88:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1ae8c:	mov	x21, x0
   1ae90:	mov	x22, x0
   1ae94:	ldp	x25, x26, [sp, #64]
   1ae98:	ldr	x27, [sp, #80]
   1ae9c:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aea0:	mov	x21, x20
   1aea4:	mov	x22, x20
   1aea8:	ldp	x25, x26, [sp, #64]
   1aeac:	ldr	x27, [sp, #80]
   1aeb0:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aeb4:	mov	x21, x0
   1aeb8:	mov	x22, x0
   1aebc:	ldp	x25, x26, [sp, #64]
   1aec0:	ldr	x27, [sp, #80]
   1aec4:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aec8:	mov	x21, x22
   1aecc:	mov	x20, x22
   1aed0:	ldp	x25, x26, [sp, #64]
   1aed4:	ldr	x27, [sp, #80]
   1aed8:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aedc:	mov	x21, x22
   1aee0:	mov	x20, x22
   1aee4:	ldp	x25, x26, [sp, #64]
   1aee8:	ldr	x27, [sp, #80]
   1aeec:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1aef0:	mov	x21, x22
   1aef4:	mov	x20, x22
   1aef8:	ldp	x25, x26, [sp, #64]
   1aefc:	ldr	x27, [sp, #80]
   1af00:	b	1ac3c <PyInit__decimal@@Base+0xa9c>
   1af04:	ldr	x1, [x19]
   1af08:	sub	x1, x1, #0x1
   1af0c:	str	x1, [x19]
   1af10:	cbz	x1, 1ab54 <PyInit__decimal@@Base+0x9b4>
   1af14:	mov	x21, #0x0                   	// #0
   1af18:	mov	x20, #0x0                   	// #0
   1af1c:	mov	x22, #0x0                   	// #0
   1af20:	mov	x19, #0x0                   	// #0
   1af24:	cbz	x23, 1af38 <PyInit__decimal@@Base+0xd98>
   1af28:	ldr	x1, [x23]
   1af2c:	sub	x1, x1, #0x1
   1af30:	str	x1, [x23]
   1af34:	cbz	x1, 1ab70 <PyInit__decimal@@Base+0x9d0>
   1af38:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1af3c:	ldr	x0, [x0, #1872]
   1af40:	cbz	x0, 1af5c <PyInit__decimal@@Base+0xdbc>
   1af44:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1af48:	str	xzr, [x1, #1872]
   1af4c:	ldr	x1, [x0]
   1af50:	sub	x1, x1, #0x1
   1af54:	str	x1, [x0]
   1af58:	cbz	x1, 1ab7c <PyInit__decimal@@Base+0x9dc>
   1af5c:	cbz	x22, 1af70 <PyInit__decimal@@Base+0xdd0>
   1af60:	ldr	x0, [x22]
   1af64:	sub	x0, x0, #0x1
   1af68:	str	x0, [x22]
   1af6c:	cbz	x0, 1ab84 <PyInit__decimal@@Base+0x9e4>
   1af70:	cbz	x20, 1af84 <PyInit__decimal@@Base+0xde4>
   1af74:	ldr	x0, [x20]
   1af78:	sub	x0, x0, #0x1
   1af7c:	str	x0, [x20]
   1af80:	cbz	x0, 1ab90 <PyInit__decimal@@Base+0x9f0>
   1af84:	cbz	x21, 1af98 <PyInit__decimal@@Base+0xdf8>
   1af88:	ldr	x0, [x21]
   1af8c:	sub	x0, x0, #0x1
   1af90:	str	x0, [x21]
   1af94:	cbz	x0, 1ab9c <PyInit__decimal@@Base+0x9fc>
   1af98:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1af9c:	ldr	x0, [x0, #1728]
   1afa0:	cbz	x0, 1afbc <PyInit__decimal@@Base+0xe1c>
   1afa4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1afa8:	str	xzr, [x1, #1728]
   1afac:	ldr	x1, [x0]
   1afb0:	sub	x1, x1, #0x1
   1afb4:	str	x1, [x0]
   1afb8:	cbz	x1, 1aba8 <PyInit__decimal@@Base+0xa08>
   1afbc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1afc0:	ldr	x0, [x0, #1840]
   1afc4:	cbz	x0, 1afe0 <PyInit__decimal@@Base+0xe40>
   1afc8:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1afcc:	str	xzr, [x1, #1840]
   1afd0:	ldr	x1, [x0]
   1afd4:	sub	x1, x1, #0x1
   1afd8:	str	x1, [x0]
   1afdc:	cbz	x1, 1abb0 <PyInit__decimal@@Base+0xa10>
   1afe0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1afe4:	ldr	x0, [x0, #1808]
   1afe8:	cbz	x0, 1b004 <PyInit__decimal@@Base+0xe64>
   1afec:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1aff0:	str	xzr, [x1, #1808]
   1aff4:	ldr	x1, [x0]
   1aff8:	sub	x1, x1, #0x1
   1affc:	str	x1, [x0]
   1b000:	cbz	x1, 1abb8 <PyInit__decimal@@Base+0xa18>
   1b004:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b008:	ldr	x0, [x0, #1824]
   1b00c:	cbz	x0, 1b028 <PyInit__decimal@@Base+0xe88>
   1b010:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b014:	str	xzr, [x1, #1824]
   1b018:	ldr	x1, [x0]
   1b01c:	sub	x1, x1, #0x1
   1b020:	str	x1, [x0]
   1b024:	cbz	x1, 1abc0 <PyInit__decimal@@Base+0xa20>
   1b028:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b02c:	ldr	x0, [x0, #1832]
   1b030:	cbz	x0, 1b04c <PyInit__decimal@@Base+0xeac>
   1b034:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b038:	str	xzr, [x1, #1832]
   1b03c:	ldr	x1, [x0]
   1b040:	sub	x1, x1, #0x1
   1b044:	str	x1, [x0]
   1b048:	cbz	x1, 1abc8 <PyInit__decimal@@Base+0xa28>
   1b04c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b050:	ldr	x0, [x0, #1816]
   1b054:	cbz	x0, 1b070 <PyInit__decimal@@Base+0xed0>
   1b058:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b05c:	str	xzr, [x1, #1816]
   1b060:	ldr	x1, [x0]
   1b064:	sub	x1, x1, #0x1
   1b068:	str	x1, [x0]
   1b06c:	cbz	x1, 1abd0 <PyInit__decimal@@Base+0xa30>
   1b070:	cbz	x19, 1b088 <PyInit__decimal@@Base+0xee8>
   1b074:	ldr	x0, [x19]
   1b078:	sub	x0, x0, #0x1
   1b07c:	str	x0, [x19]
   1b080:	cbz	x0, 1abd8 <PyInit__decimal@@Base+0xa38>
   1b084:	mov	x19, #0x0                   	// #0
   1b088:	mov	x0, x19
   1b08c:	ldp	x19, x20, [sp, #16]
   1b090:	ldp	x21, x22, [sp, #32]
   1b094:	ldp	x23, x24, [sp, #48]
   1b098:	ldp	x29, x30, [sp], #144
   1b09c:	ret
   1b0a0:	mov	x8, x0
   1b0a4:	mov	x9, x2
   1b0a8:	cbz	x4, 1b180 <PyInit__decimal@@Base+0xfe0>
   1b0ac:	mov	x5, #0x0                   	// #0
   1b0b0:	mov	x2, #0x0                   	// #0
   1b0b4:	mov	x11, #0xffffffff89e7ffff    	// #-1981284353
   1b0b8:	movk	x11, #0x2304, lsl #32
   1b0bc:	movk	x11, #0x8ac7, lsl #48
   1b0c0:	mov	x10, #0x76180000            	// #1981284352
   1b0c4:	movk	x10, #0xdcfb, lsl #32
   1b0c8:	movk	x10, #0x7538, lsl #48
   1b0cc:	ldr	x0, [x1, x5, lsl #3]
   1b0d0:	ldr	x6, [x9, x5, lsl #3]
   1b0d4:	add	x6, x0, x6
   1b0d8:	add	x6, x6, x2
   1b0dc:	cmp	x0, x6
   1b0e0:	cset	w7, hi  // hi = pmore
   1b0e4:	cmp	x6, x11
   1b0e8:	cset	w0, hi  // hi = pmore
   1b0ec:	orr	w7, w7, w0
   1b0f0:	and	x2, x7, #0xff
   1b0f4:	add	x0, x6, x10
   1b0f8:	cmp	w7, #0x0
   1b0fc:	csel	x6, x0, x6, ne  // ne = any
   1b100:	str	x6, [x8, x5, lsl #3]
   1b104:	add	x5, x5, #0x1
   1b108:	cmp	x4, x5
   1b10c:	b.ne	1b0cc <PyInit__decimal@@Base+0xf2c>  // b.any
   1b110:	cmp	w7, #0x0
   1b114:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b118:	b.ls	1b18c <PyInit__decimal@@Base+0xfec>  // b.plast
   1b11c:	mov	x4, #0x89e80000            	// #2313682944
   1b120:	movk	x4, #0x2304, lsl #32
   1b124:	movk	x4, #0x8ac7, lsl #48
   1b128:	mov	x9, #0x0                   	// #0
   1b12c:	mov	x7, #0x1                   	// #1
   1b130:	ldr	x0, [x1, x5, lsl #3]
   1b134:	add	x2, x2, x0
   1b138:	cmp	x2, x4
   1b13c:	cset	w6, eq  // eq = none
   1b140:	cset	x0, eq  // eq = none
   1b144:	csel	x2, x2, x9, ne  // ne = any
   1b148:	str	x2, [x8, x5, lsl #3]
   1b14c:	add	x5, x5, #0x1
   1b150:	mov	x2, x7
   1b154:	cmp	w6, #0x0
   1b158:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b15c:	b.hi	1b130 <PyInit__decimal@@Base+0xf90>  // b.pmore
   1b160:	cmp	x3, x5
   1b164:	b.ls	1b17c <PyInit__decimal@@Base+0xfdc>  // b.plast
   1b168:	ldr	x2, [x1, x5, lsl #3]
   1b16c:	str	x2, [x8, x5, lsl #3]
   1b170:	add	x5, x5, #0x1
   1b174:	cmp	x3, x5
   1b178:	b.ne	1b168 <PyInit__decimal@@Base+0xfc8>  // b.any
   1b17c:	ret
   1b180:	mov	x5, x4
   1b184:	mov	x0, x4
   1b188:	b	1b160 <PyInit__decimal@@Base+0xfc0>
   1b18c:	mov	x0, x2
   1b190:	b	1b160 <PyInit__decimal@@Base+0xfc0>
   1b194:	cbz	x2, 1b22c <PyInit__decimal@@Base+0x108c>
   1b198:	mov	x4, #0x0                   	// #0
   1b19c:	mov	x6, #0x0                   	// #0
   1b1a0:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1b1a4:	movk	x9, #0x2304, lsl #32
   1b1a8:	movk	x9, #0x8ac7, lsl #48
   1b1ac:	mov	x8, #0x76180000            	// #1981284352
   1b1b0:	movk	x8, #0xdcfb, lsl #32
   1b1b4:	movk	x8, #0x7538, lsl #48
   1b1b8:	ldr	x5, [x0, x4, lsl #3]
   1b1bc:	ldr	x3, [x1, x4, lsl #3]
   1b1c0:	add	x3, x5, x3
   1b1c4:	add	x3, x3, x6
   1b1c8:	cmp	x5, x3
   1b1cc:	cset	w5, hi  // hi = pmore
   1b1d0:	cmp	x3, x9
   1b1d4:	cset	w6, hi  // hi = pmore
   1b1d8:	orr	w5, w5, w6
   1b1dc:	and	x6, x5, #0xff
   1b1e0:	add	x7, x3, x8
   1b1e4:	cmp	w5, #0x0
   1b1e8:	csel	x3, x7, x3, ne  // ne = any
   1b1ec:	str	x3, [x0, x4, lsl #3]
   1b1f0:	add	x4, x4, #0x1
   1b1f4:	cmp	x2, x4
   1b1f8:	b.ne	1b1b8 <PyInit__decimal@@Base+0x1018>  // b.any
   1b1fc:	cbz	w5, 1b22c <PyInit__decimal@@Base+0x108c>
   1b200:	add	x4, x0, x4, lsl #3
   1b204:	mov	x2, #0x89e80000            	// #2313682944
   1b208:	movk	x2, #0x2304, lsl #32
   1b20c:	movk	x2, #0x8ac7, lsl #48
   1b210:	b	1b218 <PyInit__decimal@@Base+0x1078>
   1b214:	str	xzr, [x4], #8
   1b218:	ldr	x0, [x4]
   1b21c:	add	x0, x0, #0x1
   1b220:	cmp	x0, x2
   1b224:	b.eq	1b214 <PyInit__decimal@@Base+0x1074>  // b.none
   1b228:	str	x0, [x4]
   1b22c:	ret
   1b230:	mov	x4, x0
   1b234:	ldr	x0, [x0]
   1b238:	adds	x2, x2, x0
   1b23c:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1b240:	movk	x0, #0x2304, lsl #32
   1b244:	movk	x0, #0x8ac7, lsl #48
   1b248:	ccmp	x2, x0, #0x2, cc  // cc = lo, ul, last
   1b24c:	b.ls	1b2b8 <PyInit__decimal@@Base+0x1118>  // b.plast
   1b250:	mov	x0, #0x76180000            	// #1981284352
   1b254:	movk	x0, #0xdcfb, lsl #32
   1b258:	movk	x0, #0x7538, lsl #48
   1b25c:	add	x2, x2, x0
   1b260:	str	x2, [x4]
   1b264:	cmp	x1, #0x1
   1b268:	b.ls	1b2b0 <PyInit__decimal@@Base+0x1110>  // b.plast
   1b26c:	mov	x3, #0x1                   	// #1
   1b270:	mov	x5, #0x89e80000            	// #2313682944
   1b274:	movk	x5, #0x2304, lsl #32
   1b278:	movk	x5, #0x8ac7, lsl #48
   1b27c:	mov	x7, #0x0                   	// #0
   1b280:	ldr	x2, [x4, x3, lsl #3]
   1b284:	add	x2, x2, #0x1
   1b288:	cmp	x2, x5
   1b28c:	cset	w6, eq  // eq = none
   1b290:	cset	x0, eq  // eq = none
   1b294:	csel	x2, x2, x7, ne  // ne = any
   1b298:	str	x2, [x4, x3, lsl #3]
   1b29c:	add	x3, x3, #0x1
   1b2a0:	cmp	w6, #0x0
   1b2a4:	ccmp	x1, x3, #0x0, ne  // ne = any
   1b2a8:	b.hi	1b280 <PyInit__decimal@@Base+0x10e0>  // b.pmore
   1b2ac:	ret
   1b2b0:	mov	x0, #0x1                   	// #1
   1b2b4:	b	1b2ac <PyInit__decimal@@Base+0x110c>
   1b2b8:	str	x2, [x4]
   1b2bc:	mov	x0, #0x0                   	// #0
   1b2c0:	b	1b2ac <PyInit__decimal@@Base+0x110c>
   1b2c4:	mov	x4, x0
   1b2c8:	cbz	x1, 1b310 <PyInit__decimal@@Base+0x1170>
   1b2cc:	mov	x3, #0x0                   	// #0
   1b2d0:	mov	x5, #0x89e80000            	// #2313682944
   1b2d4:	movk	x5, #0x2304, lsl #32
   1b2d8:	movk	x5, #0x8ac7, lsl #48
   1b2dc:	mov	x7, #0x0                   	// #0
   1b2e0:	ldr	x2, [x4, x3, lsl #3]
   1b2e4:	add	x2, x2, #0x1
   1b2e8:	cmp	x2, x5
   1b2ec:	cset	w6, eq  // eq = none
   1b2f0:	cset	x0, eq  // eq = none
   1b2f4:	csel	x2, x2, x7, ne  // ne = any
   1b2f8:	str	x2, [x4, x3, lsl #3]
   1b2fc:	add	x3, x3, #0x1
   1b300:	cmp	w6, #0x0
   1b304:	ccmp	x1, x3, #0x0, ne  // ne = any
   1b308:	b.hi	1b2e0 <PyInit__decimal@@Base+0x1140>  // b.pmore
   1b30c:	ret
   1b310:	mov	x0, #0x1                   	// #1
   1b314:	b	1b30c <PyInit__decimal@@Base+0x116c>
   1b318:	cbz	x4, 1b3cc <PyInit__decimal@@Base+0x122c>
   1b31c:	mov	x5, #0x0                   	// #0
   1b320:	mov	x6, #0x0                   	// #0
   1b324:	mov	x11, #0x89e80000            	// #2313682944
   1b328:	movk	x11, #0x2304, lsl #32
   1b32c:	movk	x11, #0x8ac7, lsl #48
   1b330:	ldr	x8, [x1, x5, lsl #3]
   1b334:	sub	x6, x8, x6
   1b338:	ldr	x7, [x2, x5, lsl #3]
   1b33c:	sub	x7, x6, x7
   1b340:	cmp	x8, x7
   1b344:	cset	w10, cc  // cc = lo, ul, last
   1b348:	cset	x6, cc  // cc = lo, ul, last
   1b34c:	add	x9, x7, x11
   1b350:	csel	x7, x9, x7, cc  // cc = lo, ul, last
   1b354:	str	x7, [x0, x5, lsl #3]
   1b358:	add	x5, x5, #0x1
   1b35c:	cmp	x4, x5
   1b360:	b.ne	1b330 <PyInit__decimal@@Base+0x1190>  // b.any
   1b364:	cmp	w10, #0x0
   1b368:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b36c:	b.ls	1b3ac <PyInit__decimal@@Base+0x120c>  // b.plast
   1b370:	mov	x8, #0xffffffff89e7ffff    	// #-1981284353
   1b374:	movk	x8, #0x2304, lsl #32
   1b378:	movk	x8, #0x8ac7, lsl #48
   1b37c:	mov	x7, #0x1                   	// #1
   1b380:	ldr	x2, [x1, x5, lsl #3]
   1b384:	cmp	x2, #0x0
   1b388:	cset	w4, eq  // eq = none
   1b38c:	sub	x6, x2, x6
   1b390:	csel	x6, x6, x8, ne  // ne = any
   1b394:	str	x6, [x0, x5, lsl #3]
   1b398:	add	x5, x5, #0x1
   1b39c:	mov	x6, x7
   1b3a0:	cmp	w4, #0x0
   1b3a4:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b3a8:	b.hi	1b380 <PyInit__decimal@@Base+0x11e0>  // b.pmore
   1b3ac:	cmp	x3, x5
   1b3b0:	b.ls	1b3c8 <PyInit__decimal@@Base+0x1228>  // b.plast
   1b3b4:	ldr	x2, [x1, x5, lsl #3]
   1b3b8:	str	x2, [x0, x5, lsl #3]
   1b3bc:	add	x5, x5, #0x1
   1b3c0:	cmp	x3, x5
   1b3c4:	b.ne	1b3b4 <PyInit__decimal@@Base+0x1214>  // b.any
   1b3c8:	ret
   1b3cc:	mov	x5, x4
   1b3d0:	b	1b3ac <PyInit__decimal@@Base+0x120c>
   1b3d4:	cbz	x2, 1b44c <PyInit__decimal@@Base+0x12ac>
   1b3d8:	mov	x3, #0x0                   	// #0
   1b3dc:	mov	x6, #0x0                   	// #0
   1b3e0:	mov	x8, #0x89e80000            	// #2313682944
   1b3e4:	movk	x8, #0x2304, lsl #32
   1b3e8:	movk	x8, #0x8ac7, lsl #48
   1b3ec:	ldr	x5, [x0, x3, lsl #3]
   1b3f0:	sub	x6, x5, x6
   1b3f4:	ldr	x4, [x1, x3, lsl #3]
   1b3f8:	sub	x4, x6, x4
   1b3fc:	cmp	x5, x4
   1b400:	cset	x6, cc  // cc = lo, ul, last
   1b404:	add	x7, x4, x8
   1b408:	csel	x7, x7, x4, cc  // cc = lo, ul, last
   1b40c:	str	x7, [x0, x3, lsl #3]
   1b410:	add	x3, x3, #0x1
   1b414:	cmp	x2, x3
   1b418:	b.ne	1b3ec <PyInit__decimal@@Base+0x124c>  // b.any
   1b41c:	cmp	x5, x4
   1b420:	b.cs	1b44c <PyInit__decimal@@Base+0x12ac>  // b.hs, b.nlast
   1b424:	add	x3, x0, x3, lsl #3
   1b428:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   1b42c:	movk	x2, #0x2304, lsl #32
   1b430:	movk	x2, #0x8ac7, lsl #48
   1b434:	b	1b43c <PyInit__decimal@@Base+0x129c>
   1b438:	str	x2, [x3], #8
   1b43c:	ldr	x0, [x3]
   1b440:	cbz	x0, 1b438 <PyInit__decimal@@Base+0x1298>
   1b444:	sub	x0, x0, #0x1
   1b448:	str	x0, [x3]
   1b44c:	ret
   1b450:	cbz	x2, 1b4a4 <PyInit__decimal@@Base+0x1304>
   1b454:	mov	x12, x3
   1b458:	mov	x14, #0x0                   	// #0
   1b45c:	ldr	x5, [x1]
   1b460:	umulh	x4, x5, x3
   1b464:	mul	x5, x5, x3
   1b468:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   1b46c:	ldr	x11, [x3, #3504]
   1b470:	mov	x16, #0x0                   	// #0
   1b474:	mov	x7, #0x0                   	// #0
   1b478:	mov	x10, #0x89e80000            	// #2313682944
   1b47c:	movk	x10, #0x2304, lsl #32
   1b480:	movk	x10, #0x8ac7, lsl #48
   1b484:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   1b488:	add	x3, x3, #0xcf0
   1b48c:	ldr	x9, [x3]
   1b490:	ldr	x15, [x3, #8]
   1b494:	mov	x13, #0x76180000            	// #1981284352
   1b498:	movk	x13, #0xdcfb, lsl #32
   1b49c:	movk	x13, #0x7538, lsl #48
   1b4a0:	b	1b4c8 <PyInit__decimal@@Base+0x1328>
   1b4a4:	mov	x3, x2
   1b4a8:	mov	x7, x2
   1b4ac:	b	1b528 <PyInit__decimal@@Base+0x1388>
   1b4b0:	ldr	x5, [x1, x7, lsl #3]
   1b4b4:	umulh	x4, x5, x12
   1b4b8:	madd	x4, x5, x14, x4
   1b4bc:	madd	x5, x5, x12, x3
   1b4c0:	cmp	x5, x3
   1b4c4:	cinc	x4, x4, cc  // cc = lo, ul, last
   1b4c8:	and	x8, x10, x5, asr #63
   1b4cc:	add	x8, x8, x5
   1b4d0:	add	x6, x4, x5, lsr #63
   1b4d4:	umulh	x3, x6, x11
   1b4d8:	madd	x3, x6, x16, x3
   1b4dc:	madd	x6, x6, x11, x8
   1b4e0:	cmp	x8, x6
   1b4e4:	cinc	x3, x3, hi  // hi = pmore
   1b4e8:	add	x3, x4, x3
   1b4ec:	mvn	x3, x3
   1b4f0:	umulh	x6, x3, x9
   1b4f4:	madd	x6, x3, x15, x6
   1b4f8:	madd	x8, x3, x9, x5
   1b4fc:	cmp	x8, x5
   1b500:	cinc	x6, x6, cc  // cc = lo, ul, last
   1b504:	add	x4, x4, x13
   1b508:	add	x4, x4, x6
   1b50c:	sub	x3, x4, x3
   1b510:	and	x4, x4, x10
   1b514:	add	x4, x4, x8
   1b518:	str	x4, [x0, x7, lsl #3]
   1b51c:	add	x7, x7, #0x1
   1b520:	cmp	x2, x7
   1b524:	b.ne	1b4b0 <PyInit__decimal@@Base+0x1310>  // b.any
   1b528:	str	x3, [x0, x7, lsl #3]
   1b52c:	ret
   1b530:	cbz	x4, 1b64c <PyInit__decimal@@Base+0x14ac>
   1b534:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27e60>
   1b538:	ldr	x12, [x5, #3504]
   1b53c:	mov	x9, x0
   1b540:	mov	x13, #0x0                   	// #0
   1b544:	mov	x17, #0x0                   	// #0
   1b548:	mov	x11, #0x89e80000            	// #2313682944
   1b54c:	movk	x11, #0x2304, lsl #32
   1b550:	movk	x11, #0x8ac7, lsl #48
   1b554:	adrp	x16, 42000 <PyInit__decimal@@Base+0x27e60>
   1b558:	add	x16, x16, #0xcf0
   1b55c:	mov	x15, #0x76180000            	// #1981284352
   1b560:	movk	x15, #0xdcfb, lsl #32
   1b564:	movk	x15, #0x7538, lsl #48
   1b568:	mov	x18, x3
   1b56c:	mov	x5, x17
   1b570:	mov	x7, #0x0                   	// #0
   1b574:	cbz	x3, 1b638 <PyInit__decimal@@Base+0x1498>
   1b578:	stp	x29, x30, [sp, #-16]!
   1b57c:	mov	x29, sp
   1b580:	ldr	x10, [x16]
   1b584:	ldr	x14, [x16, #8]
   1b588:	ldr	x6, [x1, x7, lsl #3]
   1b58c:	ldr	x30, [x2, x13, lsl #3]
   1b590:	umulh	x0, x6, x30
   1b594:	ldr	x8, [x9, x7, lsl #3]
   1b598:	madd	x6, x6, x30, x8
   1b59c:	cmp	x8, x6
   1b5a0:	cinc	x0, x0, hi  // hi = pmore
   1b5a4:	adds	x6, x6, x5
   1b5a8:	cinc	x0, x0, cs  // cs = hs, nlast
   1b5ac:	and	x30, x11, x6, asr #63
   1b5b0:	add	x30, x30, x6
   1b5b4:	add	x8, x0, x6, lsr #63
   1b5b8:	umulh	x5, x8, x12
   1b5bc:	madd	x8, x8, x12, x30
   1b5c0:	cmp	x30, x8
   1b5c4:	cinc	x5, x5, hi  // hi = pmore
   1b5c8:	add	x5, x0, x5
   1b5cc:	mvn	x5, x5
   1b5d0:	umulh	x8, x5, x10
   1b5d4:	madd	x8, x5, x14, x8
   1b5d8:	madd	x30, x5, x10, x6
   1b5dc:	cmp	x6, x30
   1b5e0:	cinc	x8, x8, hi  // hi = pmore
   1b5e4:	add	x0, x0, x15
   1b5e8:	add	x0, x0, x8
   1b5ec:	sub	x5, x0, x5
   1b5f0:	and	x0, x0, x11
   1b5f4:	add	x0, x0, x30
   1b5f8:	str	x0, [x9, x7, lsl #3]
   1b5fc:	add	x7, x7, #0x1
   1b600:	cmp	x3, x7
   1b604:	b.ne	1b588 <PyInit__decimal@@Base+0x13e8>  // b.any
   1b608:	str	x5, [x9, x3, lsl #3]
   1b60c:	add	x13, x13, #0x1
   1b610:	add	x9, x9, #0x8
   1b614:	cmp	x4, x13
   1b618:	b.eq	1b630 <PyInit__decimal@@Base+0x1490>  // b.none
   1b61c:	mov	x5, x17
   1b620:	mov	x7, #0x0                   	// #0
   1b624:	cbnz	x3, 1b580 <PyInit__decimal@@Base+0x13e0>
   1b628:	mov	x5, x18
   1b62c:	b	1b608 <PyInit__decimal@@Base+0x1468>
   1b630:	ldp	x29, x30, [sp], #16
   1b634:	ret
   1b638:	str	x18, [x9, x3, lsl #3]
   1b63c:	add	x13, x13, #0x1
   1b640:	add	x9, x9, #0x8
   1b644:	cmp	x4, x13
   1b648:	b.ne	1b56c <PyInit__decimal@@Base+0x13cc>  // b.any
   1b64c:	ret
   1b650:	cbz	x2, 1b6ec <PyInit__decimal@@Base+0x154c>
   1b654:	stp	x29, x30, [sp, #-80]!
   1b658:	mov	x29, sp
   1b65c:	stp	x19, x20, [sp, #16]
   1b660:	stp	x21, x22, [sp, #32]
   1b664:	stp	x23, x24, [sp, #48]
   1b668:	str	x25, [sp, #64]
   1b66c:	mov	x24, x0
   1b670:	mov	x25, x1
   1b674:	mov	x22, x3
   1b678:	sub	x20, x2, #0x1
   1b67c:	ldr	x0, [x1, x20, lsl #3]
   1b680:	neg	x1, x2, lsl #3
   1b684:	add	x1, x1, x20, lsl #3
   1b688:	add	x1, x1, #0x8
   1b68c:	add	x24, x24, x1
   1b690:	mov	x1, #0x0                   	// #0
   1b694:	mov	x21, #0x0                   	// #0
   1b698:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27e60>
   1b69c:	add	x23, x23, #0xcf0
   1b6a0:	adds	x19, x21, x0
   1b6a4:	mov	x2, x22
   1b6a8:	mov	x3, x21
   1b6ac:	mov	x0, x19
   1b6b0:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1b6b4:	str	x0, [x24, x20, lsl #3]
   1b6b8:	msub	x0, x22, x0, x19
   1b6bc:	sub	x20, x20, #0x1
   1b6c0:	cmn	x20, #0x1
   1b6c4:	b.eq	1b6f4 <PyInit__decimal@@Base+0x1554>  // b.none
   1b6c8:	ldr	x2, [x23]
   1b6cc:	ldr	x3, [x23, #8]
   1b6d0:	umulh	x1, x0, x2
   1b6d4:	madd	x1, x0, x3, x1
   1b6d8:	ldr	x3, [x25, x20, lsl #3]
   1b6dc:	madd	x0, x0, x2, x3
   1b6e0:	cmp	x3, x0
   1b6e4:	cinc	x1, x1, hi  // hi = pmore
   1b6e8:	b	1b6a0 <PyInit__decimal@@Base+0x1500>
   1b6ec:	mov	x0, #0x0                   	// #0
   1b6f0:	ret
   1b6f4:	ldp	x19, x20, [sp, #16]
   1b6f8:	ldp	x21, x22, [sp, #32]
   1b6fc:	ldp	x23, x24, [sp, #48]
   1b700:	ldr	x25, [sp, #64]
   1b704:	ldp	x29, x30, [sp], #80
   1b708:	ret
   1b70c:	sub	sp, sp, #0x4a0
   1b710:	stp	x29, x30, [sp]
   1b714:	mov	x29, sp
   1b718:	str	x0, [sp, #112]
   1b71c:	str	x1, [sp, #136]
   1b720:	cmp	x4, x5
   1b724:	b.cc	1b7c4 <PyInit__decimal@@Base+0x1624>  // b.lo, b.ul, b.last
   1b728:	stp	x19, x20, [sp, #16]
   1b72c:	stp	x21, x22, [sp, #32]
   1b730:	stp	x23, x24, [sp, #48]
   1b734:	stp	x27, x28, [sp, #80]
   1b738:	mov	x21, x2
   1b73c:	mov	x20, x3
   1b740:	mov	x19, x4
   1b744:	mov	x23, x5
   1b748:	sub	x27, x4, x5
   1b74c:	lsl	x0, x5, #3
   1b750:	str	x0, [sp, #96]
   1b754:	sub	x0, x0, #0x8
   1b758:	str	x0, [sp, #104]
   1b75c:	ldr	x0, [x3, x0]
   1b760:	add	x0, x0, #0x1
   1b764:	mov	x1, #0x89e80000            	// #2313682944
   1b768:	movk	x1, #0x2304, lsl #32
   1b76c:	movk	x1, #0x8ac7, lsl #48
   1b770:	udiv	x0, x1, x0
   1b774:	str	x0, [sp, #128]
   1b778:	add	x0, sp, #0x2a0
   1b77c:	str	x0, [sp, #120]
   1b780:	cmp	x4, #0x3f
   1b784:	b.hi	1b824 <PyInit__decimal@@Base+0x1684>  // b.pmore
   1b788:	stp	x25, x26, [sp, #64]
   1b78c:	cmp	x23, #0x3f
   1b790:	b.ls	1b840 <PyInit__decimal@@Base+0x16a0>  // b.plast
   1b794:	mov	x1, #0x8                   	// #8
   1b798:	add	x0, x23, #0x1
   1b79c:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   1b7a0:	mov	x25, x0
   1b7a4:	cbnz	x0, 1b844 <PyInit__decimal@@Base+0x16a4>
   1b7a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1b7ac:	ldr	x1, [x0, #1704]
   1b7b0:	ldr	x0, [sp, #120]
   1b7b4:	blr	x1
   1b7b8:	mov	w19, #0xffffffff            	// #-1
   1b7bc:	ldp	x25, x26, [sp, #64]
   1b7c0:	b	1baec <PyInit__decimal@@Base+0x194c>
   1b7c4:	stp	x19, x20, [sp, #16]
   1b7c8:	stp	x21, x22, [sp, #32]
   1b7cc:	stp	x23, x24, [sp, #48]
   1b7d0:	stp	x25, x26, [sp, #64]
   1b7d4:	stp	x27, x28, [sp, #80]
   1b7d8:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   1b7dc:	ldr	x19, [x19, #3904]
   1b7e0:	mov	w3, #0x25c                 	// #604
   1b7e4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   1b7e8:	add	x2, x2, #0xc68
   1b7ec:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   1b7f0:	add	x1, x1, #0xca8
   1b7f4:	ldr	x0, [x19]
   1b7f8:	bl	6a70 <fprintf@plt>
   1b7fc:	ldr	x3, [x19]
   1b800:	mov	x2, #0x29                  	// #41
   1b804:	mov	x1, #0x1                   	// #1
   1b808:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1b80c:	add	x0, x0, #0xcb8
   1b810:	bl	6930 <fwrite@plt>
   1b814:	ldr	x1, [x19]
   1b818:	mov	w0, #0xa                   	// #10
   1b81c:	bl	65b0 <fputc@plt>
   1b820:	bl	67c0 <abort@plt>
   1b824:	mov	x1, #0x8                   	// #8
   1b828:	add	x0, x4, #0x1
   1b82c:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   1b830:	str	x0, [sp, #120]
   1b834:	cbnz	x0, 1b788 <PyInit__decimal@@Base+0x15e8>
   1b838:	mov	w19, #0xffffffff            	// #-1
   1b83c:	b	1baec <PyInit__decimal@@Base+0x194c>
   1b840:	add	x25, sp, #0xa0
   1b844:	ldr	x22, [sp, #128]
   1b848:	mov	x3, x22
   1b84c:	mov	x2, x19
   1b850:	mov	x1, x21
   1b854:	ldr	x21, [sp, #120]
   1b858:	mov	x0, x21
   1b85c:	bl	1b450 <PyInit__decimal@@Base+0x12b0>
   1b860:	mov	x3, x22
   1b864:	mov	x2, x23
   1b868:	mov	x1, x20
   1b86c:	mov	x0, x25
   1b870:	bl	1b450 <PyInit__decimal@@Base+0x12b0>
   1b874:	cmn	x27, #0x1
   1b878:	b.eq	1ba90 <PyInit__decimal@@Base+0x18f0>  // b.none
   1b87c:	add	x19, x21, x19, lsl #3
   1b880:	sub	x26, x19, #0x8
   1b884:	add	x20, x21, x27, lsl #3
   1b888:	mov	x19, #0x89e80000            	// #2313682944
   1b88c:	movk	x19, #0x2304, lsl #32
   1b890:	movk	x19, #0x8ac7, lsl #48
   1b894:	adrp	x24, 42000 <PyInit__decimal@@Base+0x27e60>
   1b898:	add	x24, x24, #0xcf0
   1b89c:	mov	x22, #0x76180000            	// #1981284352
   1b8a0:	movk	x22, #0xdcfb, lsl #32
   1b8a4:	movk	x22, #0x7538, lsl #48
   1b8a8:	b	1ba24 <PyInit__decimal@@Base+0x1884>
   1b8ac:	sub	x5, x5, #0x1
   1b8b0:	ldr	x1, [x21]
   1b8b4:	adds	x0, x0, x1
   1b8b8:	ccmp	x0, x4, #0x2, cc  // cc = lo, ul, last
   1b8bc:	b.hi	1b94c <PyInit__decimal@@Base+0x17ac>  // b.pmore
   1b8c0:	cmp	x5, x4
   1b8c4:	b.hi	1b8ac <PyInit__decimal@@Base+0x170c>  // b.pmore
   1b8c8:	ldur	x2, [x7, #-16]
   1b8cc:	mul	x10, x2, x5
   1b8d0:	umulh	x2, x2, x5
   1b8d4:	mov	x3, x2
   1b8d8:	and	x8, x19, x10, asr #63
   1b8dc:	add	x8, x8, x10
   1b8e0:	add	x2, x2, x10, lsr #63
   1b8e4:	umulh	x1, x2, x6
   1b8e8:	madd	x2, x2, x6, x8
   1b8ec:	cmp	x8, x2
   1b8f0:	cinc	x1, x1, hi  // hi = pmore
   1b8f4:	add	x1, x3, x1
   1b8f8:	mvn	x1, x1
   1b8fc:	ldr	x2, [x24]
   1b900:	ldr	x8, [x24, #8]
   1b904:	umulh	x9, x1, x2
   1b908:	madd	x9, x1, x8, x9
   1b90c:	madd	x8, x1, x2, x10
   1b910:	cmp	x10, x8
   1b914:	cinc	x2, x9, hi  // hi = pmore
   1b918:	add	x3, x3, x22
   1b91c:	add	x2, x3, x2
   1b920:	sub	x1, x2, x1
   1b924:	str	x1, [sp, #152]
   1b928:	and	x2, x2, x19
   1b92c:	add	x2, x2, x8
   1b930:	str	x2, [sp, #144]
   1b934:	cmp	x0, x1
   1b938:	b.cc	1b8ac <PyInit__decimal@@Base+0x170c>  // b.lo, b.ul, b.last
   1b93c:	b.ne	1b94c <PyInit__decimal@@Base+0x17ac>  // b.any
   1b940:	ldur	x1, [x28, #-8]
   1b944:	cmp	x1, x2
   1b948:	b.cc	1b8ac <PyInit__decimal@@Base+0x170c>  // b.lo, b.ul, b.last
   1b94c:	mov	x9, x5
   1b950:	ldr	x2, [x25]
   1b954:	umulh	x1, x2, x5
   1b958:	mul	x2, x2, x5
   1b95c:	add	x3, x23, #0x1
   1b960:	mov	x7, #0x0                   	// #0
   1b964:	ldr	x8, [x24]
   1b968:	ldr	x10, [x24, #8]
   1b96c:	and	x11, x19, x2, asr #63
   1b970:	add	x11, x11, x2
   1b974:	add	x4, x1, x2, lsr #63
   1b978:	umulh	x0, x4, x6
   1b97c:	madd	x4, x4, x6, x11
   1b980:	cmp	x11, x4
   1b984:	cinc	x0, x0, hi  // hi = pmore
   1b988:	add	x0, x0, x1
   1b98c:	mvn	x0, x0
   1b990:	umulh	x11, x0, x8
   1b994:	madd	x11, x0, x10, x11
   1b998:	madd	x4, x0, x8, x2
   1b99c:	cmp	x4, x2
   1b9a0:	cinc	x2, x11, cc  // cc = lo, ul, last
   1b9a4:	add	x1, x1, x22
   1b9a8:	add	x2, x1, x2
   1b9ac:	sub	x0, x2, x0
   1b9b0:	mov	x1, x20
   1b9b4:	ldr	x11, [x20, x7, lsl #3]
   1b9b8:	sub	x4, x11, x4
   1b9bc:	and	x2, x2, x19
   1b9c0:	sub	x2, x4, x2
   1b9c4:	cmp	x11, x2
   1b9c8:	cset	x4, cc  // cc = lo, ul, last
   1b9cc:	add	x12, x2, x19
   1b9d0:	csel	x2, x12, x2, cc  // cc = lo, ul, last
   1b9d4:	str	x2, [x20, x7, lsl #3]
   1b9d8:	add	x0, x4, x0
   1b9dc:	add	x4, x7, #0x1
   1b9e0:	cmp	x23, x7
   1b9e4:	b.eq	1ba04 <PyInit__decimal@@Base+0x1864>  // b.none
   1b9e8:	ldr	x2, [x25, x4, lsl #3]
   1b9ec:	umulh	x1, x2, x9
   1b9f0:	madd	x2, x2, x9, x0
   1b9f4:	cmp	x2, x0
   1b9f8:	cinc	x1, x1, cc  // cc = lo, ul, last
   1b9fc:	mov	x7, x4
   1ba00:	b	1b96c <PyInit__decimal@@Base+0x17cc>
   1ba04:	cbnz	x0, 1ba70 <PyInit__decimal@@Base+0x18d0>
   1ba08:	ldr	x0, [sp, #112]
   1ba0c:	str	x5, [x0, x27, lsl #3]
   1ba10:	sub	x27, x27, #0x1
   1ba14:	sub	x26, x26, #0x8
   1ba18:	sub	x20, x20, #0x8
   1ba1c:	cmn	x27, #0x1
   1ba20:	b.eq	1ba90 <PyInit__decimal@@Base+0x18f0>  // b.none
   1ba24:	mov	x28, x26
   1ba28:	ldr	x0, [sp, #104]
   1ba2c:	add	x21, x25, x0
   1ba30:	ldr	x3, [x25, x0]
   1ba34:	mov	x2, #0x2                   	// #2
   1ba38:	mov	x1, x26
   1ba3c:	add	x0, sp, #0x90
   1ba40:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   1ba44:	ldr	x5, [sp, #152]
   1ba48:	ldr	x1, [sp, #144]
   1ba4c:	madd	x5, x5, x19, x1
   1ba50:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   1ba54:	ldr	x6, [x1, #3504]
   1ba58:	mov	x4, #0xffffffff89e7ffff    	// #-1981284353
   1ba5c:	movk	x4, #0x2304, lsl #32
   1ba60:	movk	x4, #0x8ac7, lsl #48
   1ba64:	ldr	x1, [sp, #96]
   1ba68:	add	x7, x25, x1
   1ba6c:	b	1b8c0 <PyInit__decimal@@Base+0x1720>
   1ba70:	sub	x5, x5, #0x1
   1ba74:	ldr	x0, [sp, #112]
   1ba78:	str	x5, [x0, x27, lsl #3]
   1ba7c:	mov	x4, x23
   1ba80:	mov	x2, x25
   1ba84:	mov	x0, x20
   1ba88:	bl	1b0a0 <PyInit__decimal@@Base+0xf00>
   1ba8c:	b	1ba10 <PyInit__decimal@@Base+0x1870>
   1ba90:	ldr	x0, [sp, #136]
   1ba94:	cbz	x0, 1bb0c <PyInit__decimal@@Base+0x196c>
   1ba98:	ldr	x3, [sp, #128]
   1ba9c:	mov	x2, x23
   1baa0:	ldr	x1, [sp, #120]
   1baa4:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   1baa8:	mov	w19, #0x0                   	// #0
   1baac:	add	x0, sp, #0x2a0
   1bab0:	ldr	x2, [sp, #120]
   1bab4:	cmp	x2, x0
   1bab8:	b.eq	1bacc <PyInit__decimal@@Base+0x192c>  // b.none
   1babc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1bac0:	ldr	x1, [x0, #1704]
   1bac4:	mov	x0, x2
   1bac8:	blr	x1
   1bacc:	add	x0, sp, #0xa0
   1bad0:	cmp	x25, x0
   1bad4:	b.eq	1bb34 <PyInit__decimal@@Base+0x1994>  // b.none
   1bad8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1badc:	ldr	x1, [x0, #1704]
   1bae0:	mov	x0, x25
   1bae4:	blr	x1
   1bae8:	ldp	x25, x26, [sp, #64]
   1baec:	mov	w0, w19
   1baf0:	ldp	x19, x20, [sp, #16]
   1baf4:	ldp	x21, x22, [sp, #32]
   1baf8:	ldp	x23, x24, [sp, #48]
   1bafc:	ldp	x27, x28, [sp, #80]
   1bb00:	ldp	x29, x30, [sp]
   1bb04:	add	sp, sp, #0x4a0
   1bb08:	ret
   1bb0c:	subs	x23, x23, #0x1
   1bb10:	b.mi	1bb28 <PyInit__decimal@@Base+0x1988>  // b.first
   1bb14:	ldr	x0, [sp, #120]
   1bb18:	ldr	x0, [x0, x23, lsl #3]
   1bb1c:	cbz	x0, 1bb0c <PyInit__decimal@@Base+0x196c>
   1bb20:	mov	w19, #0x0                   	// #0
   1bb24:	b	1bb2c <PyInit__decimal@@Base+0x198c>
   1bb28:	mov	w19, #0x1                   	// #1
   1bb2c:	eor	w19, w19, #0x1
   1bb30:	b	1baac <PyInit__decimal@@Base+0x190c>
   1bb34:	ldp	x25, x26, [sp, #64]
   1bb38:	b	1baec <PyInit__decimal@@Base+0x194c>
   1bb3c:	stp	x29, x30, [sp, #-96]!
   1bb40:	mov	x29, sp
   1bb44:	mov	x7, x1
   1bb48:	mov	x1, #0x435f                	// #17247
   1bb4c:	movk	x1, #0xd79, lsl #16
   1bb50:	movk	x1, #0x35e5, lsl #32
   1bb54:	movk	x1, #0xd794, lsl #48
   1bb58:	umulh	x1, x4, x1
   1bb5c:	lsr	x1, x1, #4
   1bb60:	add	x6, x1, x1, lsl #2
   1bb64:	lsl	x6, x6, #2
   1bb68:	sub	x6, x6, x1
   1bb6c:	subs	x4, x4, x6
   1bb70:	b.ne	1bba0 <PyInit__decimal@@Base+0x1a00>  // b.any
   1bb74:	sub	x2, x3, #0x1
   1bb78:	add	x4, x0, x1, lsl #3
   1bb7c:	cbz	x3, 1bb94 <PyInit__decimal@@Base+0x19f4>
   1bb80:	ldr	x3, [x7, x2, lsl #3]
   1bb84:	str	x3, [x4, x2, lsl #3]
   1bb88:	sub	x2, x2, #0x1
   1bb8c:	cmn	x2, #0x1
   1bb90:	b.ne	1bb80 <PyInit__decimal@@Base+0x19e0>  // b.any
   1bb94:	bl	28294 <PyInit__decimal@@Base+0xe0f4>
   1bb98:	ldp	x29, x30, [sp], #96
   1bb9c:	ret
   1bba0:	adrp	x6, 42000 <PyInit__decimal@@Base+0x27e60>
   1bba4:	add	x6, x6, #0xdb8
   1bba8:	ldr	x10, [x6, x4, lsl #3]
   1bbac:	sub	x11, x2, #0x1
   1bbb0:	sub	x6, x3, #0x2
   1bbb4:	sub	x12, x3, #0x1
   1bbb8:	ldr	x12, [x7, x12, lsl #3]
   1bbbc:	mov	x13, #0x13                  	// #19
   1bbc0:	sub	x4, x13, x4
   1bbc4:	cmp	x4, #0x9
   1bbc8:	b.hi	1bec8 <PyInit__decimal@@Base+0x1d28>  // b.pmore
   1bbcc:	cmp	x4, #0x4
   1bbd0:	b.hi	1bdd4 <PyInit__decimal@@Base+0x1c34>  // b.pmore
   1bbd4:	cmp	x4, #0x2
   1bbd8:	b.eq	1bd78 <PyInit__decimal@@Base+0x1bd8>  // b.none
   1bbdc:	b.ls	1bc0c <PyInit__decimal@@Base+0x1a6c>  // b.plast
   1bbe0:	cmp	x4, #0x3
   1bbe4:	b.eq	1bda4 <PyInit__decimal@@Base+0x1c04>  // b.none
   1bbe8:	mov	x5, #0x594b                	// #22859
   1bbec:	movk	x5, #0x3886, lsl #16
   1bbf0:	movk	x5, #0xc5d6, lsl #32
   1bbf4:	movk	x5, #0x346d, lsl #48
   1bbf8:	umulh	x5, x12, x5
   1bbfc:	lsr	x5, x5, #11
   1bc00:	mov	x8, #0x2710                	// #10000
   1bc04:	msub	x8, x5, x8, x12
   1bc08:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bc0c:	cmp	x4, #0x1
   1bc10:	b.ne	1bc2c <PyInit__decimal@@Base+0x1a8c>  // b.any
   1bc14:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   1bc18:	movk	x5, #0xcccd
   1bc1c:	umulh	x5, x12, x5
   1bc20:	lsr	x5, x5, #3
   1bc24:	add	x8, x5, x5, lsl #2
   1bc28:	sub	x8, x12, x8, lsl #1
   1bc2c:	cbz	x5, 1bc38 <PyInit__decimal@@Base+0x1a98>
   1bc30:	str	x5, [x0, x11, lsl #3]
   1bc34:	sub	x11, x2, #0x2
   1bc38:	cmn	x6, #0x1
   1bc3c:	b.eq	1c368 <PyInit__decimal@@Base+0x21c8>  // b.none
   1bc40:	stp	x19, x20, [sp, #16]
   1bc44:	stp	x21, x22, [sp, #32]
   1bc48:	stp	x23, x24, [sp, #48]
   1bc4c:	stp	x25, x26, [sp, #64]
   1bc50:	stp	x27, x28, [sp, #80]
   1bc54:	lsl	x2, x11, #3
   1bc58:	sub	x2, x2, x3, lsl #3
   1bc5c:	add	x2, x2, #0x10
   1bc60:	add	x2, x0, x2
   1bc64:	mov	x28, #0x1b53                	// #6995
   1bc68:	movk	x28, #0xd519, lsl #16
   1bc6c:	movk	x28, #0x5c3b, lsl #32
   1bc70:	mov	x27, #0x5d8a0000            	// #1569325056
   1bc74:	movk	x27, #0x4578, lsl #32
   1bc78:	movk	x27, #0x163, lsl #48
   1bc7c:	mov	x26, #0x490f                	// #18703
   1bc80:	movk	x26, #0x7747, lsl #16
   1bc84:	movk	x26, #0x49c9, lsl #32
   1bc88:	mov	x25, #0xa7640000            	// #2808348672
   1bc8c:	movk	x25, #0xb6b3, lsl #32
   1bc90:	movk	x25, #0xde0, lsl #48
   1bc94:	mov	x24, #0xeac3                	// #60099
   1bc98:	movk	x24, #0xf3dc, lsl #16
   1bc9c:	movk	x24, #0x4075, lsl #32
   1bca0:	movk	x24, #0x2, lsl #48
   1bca4:	mov	x23, #0x8000                	// #32768
   1bca8:	movk	x23, #0xa4c6, lsl #16
   1bcac:	movk	x23, #0x8d7e, lsl #32
   1bcb0:	movk	x23, #0x3, lsl #48
   1bcb4:	mov	x22, #0x7857                	// #30807
   1bcb8:	movk	x22, #0xb113, lsl #16
   1bcbc:	movk	x22, #0x652f, lsl #32
   1bcc0:	movk	x22, #0x39a5, lsl #48
   1bcc4:	mov	x21, #0x6fc10000            	// #1874919424
   1bcc8:	movk	x21, #0x86f2, lsl #32
   1bccc:	movk	x21, #0x23, lsl #48
   1bcd0:	mov	x20, #0x2233                	// #8755
   1bcd4:	movk	x20, #0x5bd4, lsl #16
   1bcd8:	movk	x20, #0x3302, lsl #32
   1bcdc:	movk	x20, #0x232f, lsl #48
   1bce0:	mov	x19, #0x1000                	// #4096
   1bce4:	movk	x19, #0xd4a5, lsl #16
   1bce8:	movk	x19, #0xe8, lsl #32
   1bcec:	mov	x30, #0xcd81                	// #52609
   1bcf0:	movk	x30, #0x5095, lsl #16
   1bcf4:	movk	x30, #0x4dc3, lsl #32
   1bcf8:	movk	x30, #0xb42, lsl #48
   1bcfc:	mov	x18, #0x4000                	// #16384
   1bd00:	movk	x18, #0x107a, lsl #16
   1bd04:	movk	x18, #0x5af3, lsl #32
   1bd08:	mov	x17, #0x385                 	// #901
   1bd0c:	movk	x17, #0x92ed, lsl #16
   1bd10:	movk	x17, #0x84d0, lsl #32
   1bd14:	movk	x17, #0x384b, lsl #48
   1bd18:	mov	x16, #0xa000                	// #40960
   1bd1c:	movk	x16, #0x4e72, lsl #16
   1bd20:	movk	x16, #0x918, lsl #32
   1bd24:	mov	x15, #0xd5bf                	// #54719
   1bd28:	movk	x15, #0xbded, lsl #16
   1bd2c:	movk	x15, #0xfece, lsl #32
   1bd30:	movk	x15, #0xdbe6, lsl #48
   1bd34:	mov	x14, #0xe400                	// #58368
   1bd38:	movk	x14, #0x540b, lsl #16
   1bd3c:	movk	x14, #0x2, lsl #32
   1bd40:	mov	x13, #0xaaff                	// #43775
   1bd44:	movk	x13, #0xcb24, lsl #16
   1bd48:	movk	x13, #0xff0b, lsl #32
   1bd4c:	movk	x13, #0xafeb, lsl #48
   1bd50:	mov	x12, #0x42bd                	// #17085
   1bd54:	movk	x12, #0xe57a, lsl #16
   1bd58:	movk	x12, #0x94d5, lsl #32
   1bd5c:	movk	x12, #0xd6bf, lsl #48
   1bd60:	mov	x11, #0x5a53                	// #23123
   1bd64:	movk	x11, #0xa09b, lsl #16
   1bd68:	movk	x11, #0xb82f, lsl #32
   1bd6c:	movk	x11, #0x44, lsl #48
   1bd70:	mov	x3, x8
   1bd74:	b	1c0dc <PyInit__decimal@@Base+0x1f3c>
   1bd78:	lsr	x5, x12, #2
   1bd7c:	mov	x8, #0xf5c3                	// #62915
   1bd80:	movk	x8, #0x5c28, lsl #16
   1bd84:	movk	x8, #0xc28f, lsl #32
   1bd88:	movk	x8, #0x28f5, lsl #48
   1bd8c:	umulh	x5, x5, x8
   1bd90:	lsr	x5, x5, #2
   1bd94:	add	x8, x5, x5, lsl #1
   1bd98:	add	x8, x5, x8, lsl #3
   1bd9c:	sub	x8, x12, x8, lsl #2
   1bda0:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bda4:	lsr	x5, x12, #3
   1bda8:	mov	x8, #0xf7cf                	// #63439
   1bdac:	movk	x8, #0xe353, lsl #16
   1bdb0:	movk	x8, #0x9ba5, lsl #32
   1bdb4:	movk	x8, #0x20c4, lsl #48
   1bdb8:	umulh	x5, x5, x8
   1bdbc:	lsr	x5, x5, #4
   1bdc0:	lsl	x8, x5, #5
   1bdc4:	sub	x8, x8, x5
   1bdc8:	add	x8, x5, x8, lsl #2
   1bdcc:	sub	x8, x12, x8, lsl #3
   1bdd0:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bdd4:	cmp	x4, #0x7
   1bdd8:	b.eq	1be78 <PyInit__decimal@@Base+0x1cd8>  // b.none
   1bddc:	b.ls	1be14 <PyInit__decimal@@Base+0x1c74>  // b.plast
   1bde0:	cmp	x4, #0x8
   1bde4:	b.eq	1bea0 <PyInit__decimal@@Base+0x1d00>  // b.none
   1bde8:	lsr	x5, x12, #9
   1bdec:	mov	x8, #0x5a53                	// #23123
   1bdf0:	movk	x8, #0xa09b, lsl #16
   1bdf4:	movk	x8, #0xb82f, lsl #32
   1bdf8:	movk	x8, #0x44, lsl #48
   1bdfc:	umulh	x5, x5, x8
   1be00:	lsr	x5, x5, #11
   1be04:	mov	x8, #0xca00                	// #51712
   1be08:	movk	x8, #0x3b9a, lsl #16
   1be0c:	msub	x8, x5, x8, x12
   1be10:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1be14:	cmp	x4, #0x5
   1be18:	b.eq	1be4c <PyInit__decimal@@Base+0x1cac>  // b.none
   1be1c:	cmp	x4, #0x6
   1be20:	b.ne	1bc2c <PyInit__decimal@@Base+0x1a8c>  // b.any
   1be24:	mov	x5, #0x34db                	// #13531
   1be28:	movk	x5, #0xd7b6, lsl #16
   1be2c:	movk	x5, #0xde82, lsl #32
   1be30:	movk	x5, #0x431b, lsl #48
   1be34:	umulh	x5, x12, x5
   1be38:	lsr	x5, x5, #18
   1be3c:	mov	x8, #0x4240                	// #16960
   1be40:	movk	x8, #0xf, lsl #16
   1be44:	msub	x8, x5, x8, x12
   1be48:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1be4c:	lsr	x5, x12, #5
   1be50:	mov	x8, #0x7843                	// #30787
   1be54:	movk	x8, #0x71b4, lsl #16
   1be58:	movk	x8, #0x5ac4, lsl #32
   1be5c:	movk	x8, #0xa7c, lsl #48
   1be60:	umulh	x5, x5, x8
   1be64:	lsr	x5, x5, #7
   1be68:	mov	x8, #0x86a0                	// #34464
   1be6c:	movk	x8, #0x1, lsl #16
   1be70:	msub	x8, x5, x8, x12
   1be74:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1be78:	mov	x5, #0x42bd                	// #17085
   1be7c:	movk	x5, #0xe57a, lsl #16
   1be80:	movk	x5, #0x94d5, lsl #32
   1be84:	movk	x5, #0xd6bf, lsl #48
   1be88:	umulh	x5, x12, x5
   1be8c:	lsr	x5, x5, #23
   1be90:	mov	x8, #0x9680                	// #38528
   1be94:	movk	x8, #0x98, lsl #16
   1be98:	msub	x8, x5, x8, x12
   1be9c:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bea0:	mov	x5, #0xcefd                	// #52989
   1bea4:	movk	x5, #0x8461, lsl #16
   1bea8:	movk	x5, #0x7711, lsl #32
   1beac:	movk	x5, #0xabcc, lsl #48
   1beb0:	umulh	x5, x12, x5
   1beb4:	lsr	x5, x5, #26
   1beb8:	mov	x8, #0xe100                	// #57600
   1bebc:	movk	x8, #0x5f5, lsl #16
   1bec0:	msub	x8, x5, x8, x12
   1bec4:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bec8:	cmp	x4, #0xe
   1becc:	b.hi	1bfd0 <PyInit__decimal@@Base+0x1e30>  // b.pmore
   1bed0:	cmp	x4, #0xc
   1bed4:	b.eq	1bf78 <PyInit__decimal@@Base+0x1dd8>  // b.none
   1bed8:	b.ls	1bf10 <PyInit__decimal@@Base+0x1d70>  // b.plast
   1bedc:	cmp	x4, #0xd
   1bee0:	b.eq	1bfa4 <PyInit__decimal@@Base+0x1e04>  // b.none
   1bee4:	mov	x5, #0xcd81                	// #52609
   1bee8:	movk	x5, #0x5095, lsl #16
   1beec:	movk	x5, #0x4dc3, lsl #32
   1bef0:	movk	x5, #0xb42, lsl #48
   1bef4:	umulh	x5, x12, x5
   1bef8:	lsr	x5, x5, #42
   1befc:	mov	x8, #0x4000                	// #16384
   1bf00:	movk	x8, #0x107a, lsl #16
   1bf04:	movk	x8, #0x5af3, lsl #32
   1bf08:	msub	x8, x5, x8, x12
   1bf0c:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bf10:	cmp	x4, #0xa
   1bf14:	b.eq	1bf4c <PyInit__decimal@@Base+0x1dac>  // b.none
   1bf18:	cmp	x4, #0xb
   1bf1c:	b.ne	1bc2c <PyInit__decimal@@Base+0x1a8c>  // b.any
   1bf20:	mov	x5, #0xaaff                	// #43775
   1bf24:	movk	x5, #0xcb24, lsl #16
   1bf28:	movk	x5, #0xff0b, lsl #32
   1bf2c:	movk	x5, #0xafeb, lsl #48
   1bf30:	umulh	x5, x12, x5
   1bf34:	lsr	x5, x5, #36
   1bf38:	mov	x8, #0xe800                	// #59392
   1bf3c:	movk	x8, #0x4876, lsl #16
   1bf40:	movk	x8, #0x17, lsl #32
   1bf44:	msub	x8, x5, x8, x12
   1bf48:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bf4c:	mov	x5, #0xd5bf                	// #54719
   1bf50:	movk	x5, #0xbded, lsl #16
   1bf54:	movk	x5, #0xfece, lsl #32
   1bf58:	movk	x5, #0xdbe6, lsl #48
   1bf5c:	umulh	x5, x12, x5
   1bf60:	lsr	x5, x5, #33
   1bf64:	mov	x8, #0xe400                	// #58368
   1bf68:	movk	x8, #0x540b, lsl #16
   1bf6c:	movk	x8, #0x2, lsl #32
   1bf70:	msub	x8, x5, x8, x12
   1bf74:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bf78:	mov	x5, #0x2233                	// #8755
   1bf7c:	movk	x5, #0x5bd4, lsl #16
   1bf80:	movk	x5, #0x3302, lsl #32
   1bf84:	movk	x5, #0x232f, lsl #48
   1bf88:	umulh	x5, x12, x5
   1bf8c:	lsr	x5, x5, #37
   1bf90:	mov	x8, #0x1000                	// #4096
   1bf94:	movk	x8, #0xd4a5, lsl #16
   1bf98:	movk	x8, #0xe8, lsl #32
   1bf9c:	msub	x8, x5, x8, x12
   1bfa0:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bfa4:	mov	x5, #0x385                 	// #901
   1bfa8:	movk	x5, #0x92ed, lsl #16
   1bfac:	movk	x5, #0x84d0, lsl #32
   1bfb0:	movk	x5, #0x384b, lsl #48
   1bfb4:	umulh	x5, x12, x5
   1bfb8:	lsr	x5, x5, #41
   1bfbc:	mov	x8, #0xa000                	// #40960
   1bfc0:	movk	x8, #0x4e72, lsl #16
   1bfc4:	movk	x8, #0x918, lsl #32
   1bfc8:	msub	x8, x5, x8, x12
   1bfcc:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1bfd0:	cmp	x4, #0x11
   1bfd4:	b.eq	1c078 <PyInit__decimal@@Base+0x1ed8>  // b.none
   1bfd8:	b.ls	1c008 <PyInit__decimal@@Base+0x1e68>  // b.plast
   1bfdc:	lsr	x5, x12, #18
   1bfe0:	mov	x8, #0x490f                	// #18703
   1bfe4:	movk	x8, #0x7747, lsl #16
   1bfe8:	movk	x8, #0x49c9, lsl #32
   1bfec:	umulh	x5, x5, x8
   1bff0:	lsr	x5, x5, #24
   1bff4:	mov	x8, #0xa7640000            	// #2808348672
   1bff8:	movk	x8, #0xb6b3, lsl #32
   1bffc:	movk	x8, #0xde0, lsl #48
   1c000:	msub	x8, x5, x8, x12
   1c004:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1c008:	cmp	x4, #0xf
   1c00c:	b.eq	1c044 <PyInit__decimal@@Base+0x1ea4>  // b.none
   1c010:	cmp	x4, #0x10
   1c014:	b.ne	1bc2c <PyInit__decimal@@Base+0x1a8c>  // b.any
   1c018:	mov	x5, #0x7857                	// #30807
   1c01c:	movk	x5, #0xb113, lsl #16
   1c020:	movk	x5, #0x652f, lsl #32
   1c024:	movk	x5, #0x39a5, lsl #48
   1c028:	umulh	x5, x12, x5
   1c02c:	lsr	x5, x5, #51
   1c030:	mov	x8, #0x6fc10000            	// #1874919424
   1c034:	movk	x8, #0x86f2, lsl #32
   1c038:	movk	x8, #0x23, lsl #48
   1c03c:	msub	x8, x5, x8, x12
   1c040:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1c044:	lsr	x5, x12, #15
   1c048:	mov	x8, #0xeac3                	// #60099
   1c04c:	movk	x8, #0xf3dc, lsl #16
   1c050:	movk	x8, #0x4075, lsl #32
   1c054:	movk	x8, #0x2, lsl #48
   1c058:	umulh	x5, x5, x8
   1c05c:	lsr	x5, x5, #20
   1c060:	mov	x8, #0x8000                	// #32768
   1c064:	movk	x8, #0xa4c6, lsl #16
   1c068:	movk	x8, #0x8d7e, lsl #32
   1c06c:	movk	x8, #0x3, lsl #48
   1c070:	msub	x8, x5, x8, x12
   1c074:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1c078:	lsr	x5, x12, #17
   1c07c:	mov	x8, #0x1b53                	// #6995
   1c080:	movk	x8, #0xd519, lsl #16
   1c084:	movk	x8, #0x5c3b, lsl #32
   1c088:	umulh	x5, x5, x8
   1c08c:	lsr	x5, x5, #22
   1c090:	mov	x8, #0x5d8a0000            	// #1569325056
   1c094:	movk	x8, #0x4578, lsl #32
   1c098:	movk	x8, #0x163, lsl #48
   1c09c:	msub	x8, x5, x8, x12
   1c0a0:	b	1bc2c <PyInit__decimal@@Base+0x1a8c>
   1c0a4:	cmp	x4, #0x1
   1c0a8:	b.ne	1c0c4 <PyInit__decimal@@Base+0x1f24>  // b.any
   1c0ac:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   1c0b0:	movk	x5, #0xcccd
   1c0b4:	umulh	x5, x8, x5
   1c0b8:	lsr	x5, x5, #3
   1c0bc:	add	x9, x5, x5, lsl #2
   1c0c0:	sub	x9, x8, x9, lsl #1
   1c0c4:	madd	x3, x10, x3, x5
   1c0c8:	str	x3, [x2, x6, lsl #3]
   1c0cc:	sub	x6, x6, #0x1
   1c0d0:	cmn	x6, #0x1
   1c0d4:	b.eq	1c348 <PyInit__decimal@@Base+0x21a8>  // b.none
   1c0d8:	mov	x3, x9
   1c0dc:	ldr	x8, [x7, x6, lsl #3]
   1c0e0:	cmp	x4, #0x9
   1c0e4:	b.hi	1c258 <PyInit__decimal@@Base+0x20b8>  // b.pmore
   1c0e8:	cmp	x4, #0x4
   1c0ec:	b.hi	1c184 <PyInit__decimal@@Base+0x1fe4>  // b.pmore
   1c0f0:	cmp	x4, #0x2
   1c0f4:	b.eq	1c128 <PyInit__decimal@@Base+0x1f88>  // b.none
   1c0f8:	b.ls	1c0a4 <PyInit__decimal@@Base+0x1f04>  // b.plast
   1c0fc:	cmp	x4, #0x3
   1c100:	b.eq	1c154 <PyInit__decimal@@Base+0x1fb4>  // b.none
   1c104:	mov	x5, #0x594b                	// #22859
   1c108:	movk	x5, #0x3886, lsl #16
   1c10c:	movk	x5, #0xc5d6, lsl #32
   1c110:	movk	x5, #0x346d, lsl #48
   1c114:	umulh	x5, x8, x5
   1c118:	lsr	x5, x5, #11
   1c11c:	mov	x9, #0x2710                	// #10000
   1c120:	msub	x9, x5, x9, x8
   1c124:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c128:	lsr	x5, x8, #2
   1c12c:	mov	x9, #0xf5c3                	// #62915
   1c130:	movk	x9, #0x5c28, lsl #16
   1c134:	movk	x9, #0xc28f, lsl #32
   1c138:	movk	x9, #0x28f5, lsl #48
   1c13c:	umulh	x5, x5, x9
   1c140:	lsr	x5, x5, #2
   1c144:	add	x9, x5, x5, lsl #1
   1c148:	add	x9, x5, x9, lsl #3
   1c14c:	sub	x9, x8, x9, lsl #2
   1c150:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c154:	lsr	x5, x8, #3
   1c158:	mov	x9, #0xf7cf                	// #63439
   1c15c:	movk	x9, #0xe353, lsl #16
   1c160:	movk	x9, #0x9ba5, lsl #32
   1c164:	movk	x9, #0x20c4, lsl #48
   1c168:	umulh	x5, x5, x9
   1c16c:	lsr	x5, x5, #4
   1c170:	lsl	x9, x5, #5
   1c174:	sub	x9, x9, x5
   1c178:	add	x9, x5, x9, lsl #2
   1c17c:	sub	x9, x8, x9, lsl #3
   1c180:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c184:	cmp	x4, #0x7
   1c188:	b.eq	1c218 <PyInit__decimal@@Base+0x2078>  // b.none
   1c18c:	b.ls	1c1b4 <PyInit__decimal@@Base+0x2014>  // b.plast
   1c190:	cmp	x4, #0x8
   1c194:	b.eq	1c230 <PyInit__decimal@@Base+0x2090>  // b.none
   1c198:	lsr	x5, x8, #9
   1c19c:	umulh	x5, x5, x11
   1c1a0:	lsr	x5, x5, #11
   1c1a4:	mov	x9, #0xca00                	// #51712
   1c1a8:	movk	x9, #0x3b9a, lsl #16
   1c1ac:	msub	x9, x5, x9, x8
   1c1b0:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c1b4:	cmp	x4, #0x5
   1c1b8:	b.eq	1c1ec <PyInit__decimal@@Base+0x204c>  // b.none
   1c1bc:	cmp	x4, #0x6
   1c1c0:	b.ne	1c0c4 <PyInit__decimal@@Base+0x1f24>  // b.any
   1c1c4:	mov	x5, #0x34db                	// #13531
   1c1c8:	movk	x5, #0xd7b6, lsl #16
   1c1cc:	movk	x5, #0xde82, lsl #32
   1c1d0:	movk	x5, #0x431b, lsl #48
   1c1d4:	umulh	x5, x8, x5
   1c1d8:	lsr	x5, x5, #18
   1c1dc:	mov	x9, #0x4240                	// #16960
   1c1e0:	movk	x9, #0xf, lsl #16
   1c1e4:	msub	x9, x5, x9, x8
   1c1e8:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c1ec:	lsr	x5, x8, #5
   1c1f0:	mov	x9, #0x7843                	// #30787
   1c1f4:	movk	x9, #0x71b4, lsl #16
   1c1f8:	movk	x9, #0x5ac4, lsl #32
   1c1fc:	movk	x9, #0xa7c, lsl #48
   1c200:	umulh	x5, x5, x9
   1c204:	lsr	x5, x5, #7
   1c208:	mov	x9, #0x86a0                	// #34464
   1c20c:	movk	x9, #0x1, lsl #16
   1c210:	msub	x9, x5, x9, x8
   1c214:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c218:	umulh	x5, x8, x12
   1c21c:	lsr	x5, x5, #23
   1c220:	mov	x9, #0x9680                	// #38528
   1c224:	movk	x9, #0x98, lsl #16
   1c228:	msub	x9, x5, x9, x8
   1c22c:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c230:	mov	x5, #0xcefd                	// #52989
   1c234:	movk	x5, #0x8461, lsl #16
   1c238:	movk	x5, #0x7711, lsl #32
   1c23c:	movk	x5, #0xabcc, lsl #48
   1c240:	umulh	x5, x8, x5
   1c244:	lsr	x5, x5, #26
   1c248:	mov	x9, #0xe100                	// #57600
   1c24c:	movk	x9, #0x5f5, lsl #16
   1c250:	msub	x9, x5, x9, x8
   1c254:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c258:	cmp	x4, #0xe
   1c25c:	b.hi	1c2e0 <PyInit__decimal@@Base+0x2140>  // b.pmore
   1c260:	cmp	x4, #0xc
   1c264:	b.eq	1c2c0 <PyInit__decimal@@Base+0x2120>  // b.none
   1c268:	b.ls	1c284 <PyInit__decimal@@Base+0x20e4>  // b.plast
   1c26c:	cmp	x4, #0xd
   1c270:	b.eq	1c2d0 <PyInit__decimal@@Base+0x2130>  // b.none
   1c274:	umulh	x5, x8, x30
   1c278:	lsr	x5, x5, #42
   1c27c:	msub	x9, x5, x18, x8
   1c280:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c284:	cmp	x4, #0xa
   1c288:	b.eq	1c2b0 <PyInit__decimal@@Base+0x2110>  // b.none
   1c28c:	cmp	x4, #0xb
   1c290:	b.ne	1c0c4 <PyInit__decimal@@Base+0x1f24>  // b.any
   1c294:	umulh	x5, x8, x13
   1c298:	lsr	x5, x5, #36
   1c29c:	mov	x9, #0xe800                	// #59392
   1c2a0:	movk	x9, #0x4876, lsl #16
   1c2a4:	movk	x9, #0x17, lsl #32
   1c2a8:	msub	x9, x5, x9, x8
   1c2ac:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c2b0:	umulh	x5, x8, x15
   1c2b4:	lsr	x5, x5, #33
   1c2b8:	msub	x9, x5, x14, x8
   1c2bc:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c2c0:	umulh	x5, x8, x20
   1c2c4:	lsr	x5, x5, #37
   1c2c8:	msub	x9, x5, x19, x8
   1c2cc:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c2d0:	umulh	x5, x8, x17
   1c2d4:	lsr	x5, x5, #41
   1c2d8:	msub	x9, x5, x16, x8
   1c2dc:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c2e0:	cmp	x4, #0x11
   1c2e4:	b.eq	1c334 <PyInit__decimal@@Base+0x2194>  // b.none
   1c2e8:	b.ls	1c300 <PyInit__decimal@@Base+0x2160>  // b.plast
   1c2ec:	lsr	x5, x8, #18
   1c2f0:	umulh	x5, x5, x26
   1c2f4:	lsr	x5, x5, #24
   1c2f8:	msub	x9, x5, x25, x8
   1c2fc:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c300:	cmp	x4, #0xf
   1c304:	b.eq	1c320 <PyInit__decimal@@Base+0x2180>  // b.none
   1c308:	cmp	x4, #0x10
   1c30c:	b.ne	1c0c4 <PyInit__decimal@@Base+0x1f24>  // b.any
   1c310:	umulh	x5, x8, x22
   1c314:	lsr	x5, x5, #51
   1c318:	msub	x9, x5, x21, x8
   1c31c:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c320:	lsr	x5, x8, #15
   1c324:	umulh	x5, x5, x24
   1c328:	lsr	x5, x5, #20
   1c32c:	msub	x9, x5, x23, x8
   1c330:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c334:	lsr	x5, x8, #17
   1c338:	umulh	x5, x5, x28
   1c33c:	lsr	x5, x5, #22
   1c340:	msub	x9, x5, x27, x8
   1c344:	b	1c0c4 <PyInit__decimal@@Base+0x1f24>
   1c348:	ldp	x19, x20, [sp, #16]
   1c34c:	ldp	x21, x22, [sp, #32]
   1c350:	ldp	x23, x24, [sp, #48]
   1c354:	ldp	x25, x26, [sp, #64]
   1c358:	ldp	x27, x28, [sp, #80]
   1c35c:	mul	x9, x10, x9
   1c360:	str	x9, [x0, x1, lsl #3]
   1c364:	b	1bb94 <PyInit__decimal@@Base+0x19f4>
   1c368:	mov	x9, x8
   1c36c:	b	1c35c <PyInit__decimal@@Base+0x21bc>
   1c370:	mov	x8, x0
   1c374:	mov	x5, #0x435f                	// #17247
   1c378:	movk	x5, #0xd79, lsl #16
   1c37c:	movk	x5, #0x35e5, lsl #32
   1c380:	movk	x5, #0xd794, lsl #48
   1c384:	umulh	x5, x3, x5
   1c388:	lsr	x5, x5, #4
   1c38c:	add	x4, x5, x5, lsl #2
   1c390:	lsl	x4, x4, #2
   1c394:	sub	x4, x4, x5
   1c398:	subs	x4, x3, x4
   1c39c:	b.ne	1c3f8 <PyInit__decimal@@Base+0x2258>  // b.any
   1c3a0:	cmp	x3, #0x12
   1c3a4:	b.ls	1cfc0 <PyInit__decimal@@Base+0x2e20>  // b.plast
   1c3a8:	add	x0, x1, x5, lsl #3
   1c3ac:	ldur	x3, [x0, #-8]
   1c3b0:	lsr	x0, x3, #18
   1c3b4:	mov	x6, #0x490f                	// #18703
   1c3b8:	movk	x6, #0x7747, lsl #16
   1c3bc:	movk	x6, #0x49c9, lsl #32
   1c3c0:	umulh	x0, x0, x6
   1c3c4:	lsr	x0, x0, #24
   1c3c8:	mov	x11, #0xa7640000            	// #2808348672
   1c3cc:	movk	x11, #0xb6b3, lsl #32
   1c3d0:	movk	x11, #0xde0, lsl #48
   1c3d4:	msub	x11, x0, x11, x3
   1c3d8:	cbnz	x11, 1cf90 <PyInit__decimal@@Base+0x2df0>
   1c3dc:	sub	x3, x5, #0x1
   1c3e0:	subs	x3, x3, #0x1
   1c3e4:	b.mi	1cf84 <PyInit__decimal@@Base+0x2de4>  // b.first
   1c3e8:	ldr	x6, [x1, x3, lsl #3]
   1c3ec:	cbz	x6, 1c3e0 <PyInit__decimal@@Base+0x2240>
   1c3f0:	mov	w11, #0x0                   	// #0
   1c3f4:	b	1cf88 <PyInit__decimal@@Base+0x2de8>
   1c3f8:	mov	x9, #0x13                  	// #19
   1c3fc:	sub	x9, x9, x4
   1c400:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1c404:	add	x0, x0, #0xdb8
   1c408:	ldr	x13, [x0, x9, lsl #3]
   1c40c:	ldr	x0, [x1, x5, lsl #3]
   1c410:	cmp	x4, #0x9
   1c414:	b.hi	1c80c <PyInit__decimal@@Base+0x266c>  // b.pmore
   1c418:	cmp	x4, #0x4
   1c41c:	b.hi	1c664 <PyInit__decimal@@Base+0x24c4>  // b.pmore
   1c420:	cmp	x4, #0x2
   1c424:	b.eq	1c5c8 <PyInit__decimal@@Base+0x2428>  // b.none
   1c428:	b.ls	1c484 <PyInit__decimal@@Base+0x22e4>  // b.plast
   1c42c:	cmp	x4, #0x3
   1c430:	b.eq	1c60c <PyInit__decimal@@Base+0x246c>  // b.none
   1c434:	mov	x7, #0x594b                	// #22859
   1c438:	movk	x7, #0x3886, lsl #16
   1c43c:	movk	x7, #0xc5d6, lsl #32
   1c440:	movk	x7, #0x346d, lsl #48
   1c444:	umulh	x7, x0, x7
   1c448:	lsr	x7, x7, #11
   1c44c:	mov	x9, #0x2710                	// #10000
   1c450:	msub	x9, x7, x9, x0
   1c454:	lsr	x0, x9, #3
   1c458:	mov	x11, #0xf7cf                	// #63439
   1c45c:	movk	x11, #0xe353, lsl #16
   1c460:	movk	x11, #0x9ba5, lsl #32
   1c464:	movk	x11, #0x20c4, lsl #48
   1c468:	umulh	x0, x0, x11
   1c46c:	lsr	x0, x0, #4
   1c470:	lsl	x11, x0, #5
   1c474:	sub	x11, x11, x0
   1c478:	add	x11, x0, x11, lsl #2
   1c47c:	sub	x11, x9, x11, lsl #3
   1c480:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c484:	cmp	x4, #0x1
   1c488:	b.ne	1cb58 <PyInit__decimal@@Base+0x29b8>  // b.any
   1c48c:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   1c490:	movk	x7, #0xcccd
   1c494:	umulh	x7, x0, x7
   1c498:	lsr	x7, x7, #3
   1c49c:	add	x9, x7, x7, lsl #2
   1c4a0:	sub	x0, x0, x9, lsl #1
   1c4a4:	mov	x11, #0x0                   	// #0
   1c4a8:	cmp	x11, #0x0
   1c4ac:	ccmp	x3, #0x12, #0x0, eq  // eq = none
   1c4b0:	mov	x3, x5
   1c4b4:	b.hi	1cc48 <PyInit__decimal@@Base+0x2aa8>  // b.pmore
   1c4b8:	add	x3, x5, #0x1
   1c4bc:	cmp	x2, x3
   1c4c0:	b.ls	1cfe4 <PyInit__decimal@@Base+0x2e44>  // b.plast
   1c4c4:	stp	x29, x30, [sp, #-96]!
   1c4c8:	mov	x29, sp
   1c4cc:	stp	x19, x20, [sp, #16]
   1c4d0:	stp	x21, x22, [sp, #32]
   1c4d4:	stp	x23, x24, [sp, #48]
   1c4d8:	stp	x25, x26, [sp, #64]
   1c4dc:	stp	x27, x28, [sp, #80]
   1c4e0:	mvn	x12, x5
   1c4e4:	add	x12, x8, x12, lsl #3
   1c4e8:	mov	x28, #0x1b53                	// #6995
   1c4ec:	movk	x28, #0xd519, lsl #16
   1c4f0:	movk	x28, #0x5c3b, lsl #32
   1c4f4:	mov	x27, #0x5d8a0000            	// #1569325056
   1c4f8:	movk	x27, #0x4578, lsl #32
   1c4fc:	movk	x27, #0x163, lsl #48
   1c500:	mov	x26, #0x490f                	// #18703
   1c504:	movk	x26, #0x7747, lsl #16
   1c508:	movk	x26, #0x49c9, lsl #32
   1c50c:	mov	x25, #0xa7640000            	// #2808348672
   1c510:	movk	x25, #0xb6b3, lsl #32
   1c514:	movk	x25, #0xde0, lsl #48
   1c518:	mov	x24, #0xeac3                	// #60099
   1c51c:	movk	x24, #0xf3dc, lsl #16
   1c520:	movk	x24, #0x4075, lsl #32
   1c524:	movk	x24, #0x2, lsl #48
   1c528:	mov	x23, #0x8000                	// #32768
   1c52c:	movk	x23, #0xa4c6, lsl #16
   1c530:	movk	x23, #0x8d7e, lsl #32
   1c534:	movk	x23, #0x3, lsl #48
   1c538:	mov	x22, #0x7857                	// #30807
   1c53c:	movk	x22, #0xb113, lsl #16
   1c540:	movk	x22, #0x652f, lsl #32
   1c544:	movk	x22, #0x39a5, lsl #48
   1c548:	mov	x21, #0x6fc10000            	// #1874919424
   1c54c:	movk	x21, #0x86f2, lsl #32
   1c550:	movk	x21, #0x23, lsl #48
   1c554:	mov	x20, #0x2233                	// #8755
   1c558:	movk	x20, #0x5bd4, lsl #16
   1c55c:	movk	x20, #0x3302, lsl #32
   1c560:	movk	x20, #0x232f, lsl #48
   1c564:	mov	x19, #0x1000                	// #4096
   1c568:	movk	x19, #0xd4a5, lsl #16
   1c56c:	movk	x19, #0xe8, lsl #32
   1c570:	mov	x30, #0xcd81                	// #52609
   1c574:	movk	x30, #0x5095, lsl #16
   1c578:	movk	x30, #0x4dc3, lsl #32
   1c57c:	movk	x30, #0xb42, lsl #48
   1c580:	mov	x18, #0x4000                	// #16384
   1c584:	movk	x18, #0x107a, lsl #16
   1c588:	movk	x18, #0x5af3, lsl #32
   1c58c:	mov	x17, #0x385                 	// #901
   1c590:	movk	x17, #0x92ed, lsl #16
   1c594:	movk	x17, #0x84d0, lsl #32
   1c598:	movk	x17, #0x384b, lsl #48
   1c59c:	mov	x16, #0xa000                	// #40960
   1c5a0:	movk	x16, #0x4e72, lsl #16
   1c5a4:	movk	x16, #0x918, lsl #32
   1c5a8:	mov	x15, #0xd5bf                	// #54719
   1c5ac:	movk	x15, #0xbded, lsl #16
   1c5b0:	movk	x15, #0xfece, lsl #32
   1c5b4:	movk	x15, #0xdbe6, lsl #48
   1c5b8:	mov	x14, #0xe400                	// #58368
   1c5bc:	movk	x14, #0x540b, lsl #16
   1c5c0:	movk	x14, #0x2, lsl #32
   1c5c4:	b	1ccac <PyInit__decimal@@Base+0x2b0c>
   1c5c8:	lsr	x7, x0, #2
   1c5cc:	mov	x9, #0xf5c3                	// #62915
   1c5d0:	movk	x9, #0x5c28, lsl #16
   1c5d4:	movk	x9, #0xc28f, lsl #32
   1c5d8:	movk	x9, #0x28f5, lsl #48
   1c5dc:	umulh	x7, x7, x9
   1c5e0:	lsr	x7, x7, #2
   1c5e4:	add	x9, x7, x7, lsl #1
   1c5e8:	add	x9, x7, x9, lsl #3
   1c5ec:	sub	x9, x0, x9, lsl #2
   1c5f0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1c5f4:	movk	x0, #0xcccd
   1c5f8:	umulh	x0, x9, x0
   1c5fc:	lsr	x0, x0, #3
   1c600:	add	x11, x0, x0, lsl #2
   1c604:	sub	x11, x9, x11, lsl #1
   1c608:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c60c:	lsr	x7, x0, #3
   1c610:	mov	x9, #0xf7cf                	// #63439
   1c614:	movk	x9, #0xe353, lsl #16
   1c618:	movk	x9, #0x9ba5, lsl #32
   1c61c:	movk	x9, #0x20c4, lsl #48
   1c620:	umulh	x7, x7, x9
   1c624:	lsr	x7, x7, #4
   1c628:	lsl	x9, x7, #5
   1c62c:	sub	x9, x9, x7
   1c630:	add	x9, x7, x9, lsl #2
   1c634:	sub	x9, x0, x9, lsl #3
   1c638:	lsr	x0, x9, #2
   1c63c:	mov	x11, #0xf5c3                	// #62915
   1c640:	movk	x11, #0x5c28, lsl #16
   1c644:	movk	x11, #0xc28f, lsl #32
   1c648:	movk	x11, #0x28f5, lsl #48
   1c64c:	umulh	x0, x0, x11
   1c650:	lsr	x0, x0, #2
   1c654:	add	x11, x0, x0, lsl #1
   1c658:	add	x11, x0, x11, lsl #3
   1c65c:	sub	x11, x9, x11, lsl #2
   1c660:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c664:	cmp	x4, #0x7
   1c668:	b.eq	1c774 <PyInit__decimal@@Base+0x25d4>  // b.none
   1c66c:	b.ls	1c6c8 <PyInit__decimal@@Base+0x2528>  // b.plast
   1c670:	cmp	x4, #0x8
   1c674:	b.eq	1c7c0 <PyInit__decimal@@Base+0x2620>  // b.none
   1c678:	lsr	x7, x0, #9
   1c67c:	mov	x9, #0x5a53                	// #23123
   1c680:	movk	x9, #0xa09b, lsl #16
   1c684:	movk	x9, #0xb82f, lsl #32
   1c688:	movk	x9, #0x44, lsl #48
   1c68c:	umulh	x7, x7, x9
   1c690:	lsr	x7, x7, #11
   1c694:	mov	x9, #0xca00                	// #51712
   1c698:	movk	x9, #0x3b9a, lsl #16
   1c69c:	msub	x9, x7, x9, x0
   1c6a0:	mov	x0, #0xcefd                	// #52989
   1c6a4:	movk	x0, #0x8461, lsl #16
   1c6a8:	movk	x0, #0x7711, lsl #32
   1c6ac:	movk	x0, #0xabcc, lsl #48
   1c6b0:	umulh	x0, x9, x0
   1c6b4:	lsr	x0, x0, #26
   1c6b8:	mov	x11, #0xe100                	// #57600
   1c6bc:	movk	x11, #0x5f5, lsl #16
   1c6c0:	msub	x11, x0, x11, x9
   1c6c4:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c6c8:	cmp	x4, #0x5
   1c6cc:	b.eq	1c728 <PyInit__decimal@@Base+0x2588>  // b.none
   1c6d0:	cmp	x4, #0x6
   1c6d4:	b.ne	1cb58 <PyInit__decimal@@Base+0x29b8>  // b.any
   1c6d8:	mov	x7, #0x34db                	// #13531
   1c6dc:	movk	x7, #0xd7b6, lsl #16
   1c6e0:	movk	x7, #0xde82, lsl #32
   1c6e4:	movk	x7, #0x431b, lsl #48
   1c6e8:	umulh	x7, x0, x7
   1c6ec:	lsr	x7, x7, #18
   1c6f0:	mov	x9, #0x4240                	// #16960
   1c6f4:	movk	x9, #0xf, lsl #16
   1c6f8:	msub	x9, x7, x9, x0
   1c6fc:	lsr	x0, x9, #5
   1c700:	mov	x11, #0x7843                	// #30787
   1c704:	movk	x11, #0x71b4, lsl #16
   1c708:	movk	x11, #0x5ac4, lsl #32
   1c70c:	movk	x11, #0xa7c, lsl #48
   1c710:	umulh	x0, x0, x11
   1c714:	lsr	x0, x0, #7
   1c718:	mov	x11, #0x86a0                	// #34464
   1c71c:	movk	x11, #0x1, lsl #16
   1c720:	msub	x11, x0, x11, x9
   1c724:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c728:	lsr	x7, x0, #5
   1c72c:	mov	x9, #0x7843                	// #30787
   1c730:	movk	x9, #0x71b4, lsl #16
   1c734:	movk	x9, #0x5ac4, lsl #32
   1c738:	movk	x9, #0xa7c, lsl #48
   1c73c:	umulh	x7, x7, x9
   1c740:	lsr	x7, x7, #7
   1c744:	mov	x9, #0x86a0                	// #34464
   1c748:	movk	x9, #0x1, lsl #16
   1c74c:	msub	x9, x7, x9, x0
   1c750:	mov	x0, #0x594b                	// #22859
   1c754:	movk	x0, #0x3886, lsl #16
   1c758:	movk	x0, #0xc5d6, lsl #32
   1c75c:	movk	x0, #0x346d, lsl #48
   1c760:	umulh	x0, x9, x0
   1c764:	lsr	x0, x0, #11
   1c768:	mov	x11, #0x2710                	// #10000
   1c76c:	msub	x11, x0, x11, x9
   1c770:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c774:	mov	x7, #0x42bd                	// #17085
   1c778:	movk	x7, #0xe57a, lsl #16
   1c77c:	movk	x7, #0x94d5, lsl #32
   1c780:	movk	x7, #0xd6bf, lsl #48
   1c784:	umulh	x7, x0, x7
   1c788:	lsr	x7, x7, #23
   1c78c:	mov	x9, #0x9680                	// #38528
   1c790:	movk	x9, #0x98, lsl #16
   1c794:	msub	x9, x7, x9, x0
   1c798:	mov	x0, #0x34db                	// #13531
   1c79c:	movk	x0, #0xd7b6, lsl #16
   1c7a0:	movk	x0, #0xde82, lsl #32
   1c7a4:	movk	x0, #0x431b, lsl #48
   1c7a8:	umulh	x0, x9, x0
   1c7ac:	lsr	x0, x0, #18
   1c7b0:	mov	x11, #0x4240                	// #16960
   1c7b4:	movk	x11, #0xf, lsl #16
   1c7b8:	msub	x11, x0, x11, x9
   1c7bc:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c7c0:	mov	x7, #0xcefd                	// #52989
   1c7c4:	movk	x7, #0x8461, lsl #16
   1c7c8:	movk	x7, #0x7711, lsl #32
   1c7cc:	movk	x7, #0xabcc, lsl #48
   1c7d0:	umulh	x7, x0, x7
   1c7d4:	lsr	x7, x7, #26
   1c7d8:	mov	x9, #0xe100                	// #57600
   1c7dc:	movk	x9, #0x5f5, lsl #16
   1c7e0:	msub	x9, x7, x9, x0
   1c7e4:	mov	x0, #0x42bd                	// #17085
   1c7e8:	movk	x0, #0xe57a, lsl #16
   1c7ec:	movk	x0, #0x94d5, lsl #32
   1c7f0:	movk	x0, #0xd6bf, lsl #48
   1c7f4:	umulh	x0, x9, x0
   1c7f8:	lsr	x0, x0, #23
   1c7fc:	mov	x11, #0x9680                	// #38528
   1c800:	movk	x11, #0x98, lsl #16
   1c804:	msub	x11, x0, x11, x9
   1c808:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c80c:	cmp	x4, #0xe
   1c810:	b.hi	1c9dc <PyInit__decimal@@Base+0x283c>  // b.pmore
   1c814:	cmp	x4, #0xc
   1c818:	b.eq	1c934 <PyInit__decimal@@Base+0x2794>  // b.none
   1c81c:	b.ls	1c87c <PyInit__decimal@@Base+0x26dc>  // b.plast
   1c820:	cmp	x4, #0xd
   1c824:	b.eq	1c988 <PyInit__decimal@@Base+0x27e8>  // b.none
   1c828:	mov	x7, #0xcd81                	// #52609
   1c82c:	movk	x7, #0x5095, lsl #16
   1c830:	movk	x7, #0x4dc3, lsl #32
   1c834:	movk	x7, #0xb42, lsl #48
   1c838:	umulh	x7, x0, x7
   1c83c:	lsr	x7, x7, #42
   1c840:	mov	x9, #0x4000                	// #16384
   1c844:	movk	x9, #0x107a, lsl #16
   1c848:	movk	x9, #0x5af3, lsl #32
   1c84c:	msub	x9, x7, x9, x0
   1c850:	mov	x0, #0x385                 	// #901
   1c854:	movk	x0, #0x92ed, lsl #16
   1c858:	movk	x0, #0x84d0, lsl #32
   1c85c:	movk	x0, #0x384b, lsl #48
   1c860:	umulh	x0, x9, x0
   1c864:	lsr	x0, x0, #41
   1c868:	mov	x11, #0xa000                	// #40960
   1c86c:	movk	x11, #0x4e72, lsl #16
   1c870:	movk	x11, #0x918, lsl #32
   1c874:	msub	x11, x0, x11, x9
   1c878:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c87c:	cmp	x4, #0xa
   1c880:	b.eq	1c8e0 <PyInit__decimal@@Base+0x2740>  // b.none
   1c884:	cmp	x4, #0xb
   1c888:	b.ne	1cb58 <PyInit__decimal@@Base+0x29b8>  // b.any
   1c88c:	mov	x7, #0xaaff                	// #43775
   1c890:	movk	x7, #0xcb24, lsl #16
   1c894:	movk	x7, #0xff0b, lsl #32
   1c898:	movk	x7, #0xafeb, lsl #48
   1c89c:	umulh	x7, x0, x7
   1c8a0:	lsr	x7, x7, #36
   1c8a4:	mov	x9, #0xe800                	// #59392
   1c8a8:	movk	x9, #0x4876, lsl #16
   1c8ac:	movk	x9, #0x17, lsl #32
   1c8b0:	msub	x9, x7, x9, x0
   1c8b4:	mov	x0, #0xd5bf                	// #54719
   1c8b8:	movk	x0, #0xbded, lsl #16
   1c8bc:	movk	x0, #0xfece, lsl #32
   1c8c0:	movk	x0, #0xdbe6, lsl #48
   1c8c4:	umulh	x0, x9, x0
   1c8c8:	lsr	x0, x0, #33
   1c8cc:	mov	x11, #0xe400                	// #58368
   1c8d0:	movk	x11, #0x540b, lsl #16
   1c8d4:	movk	x11, #0x2, lsl #32
   1c8d8:	msub	x11, x0, x11, x9
   1c8dc:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c8e0:	mov	x7, #0xd5bf                	// #54719
   1c8e4:	movk	x7, #0xbded, lsl #16
   1c8e8:	movk	x7, #0xfece, lsl #32
   1c8ec:	movk	x7, #0xdbe6, lsl #48
   1c8f0:	umulh	x7, x0, x7
   1c8f4:	lsr	x7, x7, #33
   1c8f8:	mov	x9, #0xe400                	// #58368
   1c8fc:	movk	x9, #0x540b, lsl #16
   1c900:	movk	x9, #0x2, lsl #32
   1c904:	msub	x9, x7, x9, x0
   1c908:	lsr	x0, x9, #9
   1c90c:	mov	x11, #0x5a53                	// #23123
   1c910:	movk	x11, #0xa09b, lsl #16
   1c914:	movk	x11, #0xb82f, lsl #32
   1c918:	movk	x11, #0x44, lsl #48
   1c91c:	umulh	x0, x0, x11
   1c920:	lsr	x0, x0, #11
   1c924:	mov	x11, #0xca00                	// #51712
   1c928:	movk	x11, #0x3b9a, lsl #16
   1c92c:	msub	x11, x0, x11, x9
   1c930:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c934:	mov	x7, #0x2233                	// #8755
   1c938:	movk	x7, #0x5bd4, lsl #16
   1c93c:	movk	x7, #0x3302, lsl #32
   1c940:	movk	x7, #0x232f, lsl #48
   1c944:	umulh	x7, x0, x7
   1c948:	lsr	x7, x7, #37
   1c94c:	mov	x9, #0x1000                	// #4096
   1c950:	movk	x9, #0xd4a5, lsl #16
   1c954:	movk	x9, #0xe8, lsl #32
   1c958:	msub	x9, x7, x9, x0
   1c95c:	mov	x0, #0xaaff                	// #43775
   1c960:	movk	x0, #0xcb24, lsl #16
   1c964:	movk	x0, #0xff0b, lsl #32
   1c968:	movk	x0, #0xafeb, lsl #48
   1c96c:	umulh	x0, x9, x0
   1c970:	lsr	x0, x0, #36
   1c974:	mov	x11, #0xe800                	// #59392
   1c978:	movk	x11, #0x4876, lsl #16
   1c97c:	movk	x11, #0x17, lsl #32
   1c980:	msub	x11, x0, x11, x9
   1c984:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c988:	mov	x7, #0x385                 	// #901
   1c98c:	movk	x7, #0x92ed, lsl #16
   1c990:	movk	x7, #0x84d0, lsl #32
   1c994:	movk	x7, #0x384b, lsl #48
   1c998:	umulh	x7, x0, x7
   1c99c:	lsr	x7, x7, #41
   1c9a0:	mov	x9, #0xa000                	// #40960
   1c9a4:	movk	x9, #0x4e72, lsl #16
   1c9a8:	movk	x9, #0x918, lsl #32
   1c9ac:	msub	x9, x7, x9, x0
   1c9b0:	mov	x0, #0x2233                	// #8755
   1c9b4:	movk	x0, #0x5bd4, lsl #16
   1c9b8:	movk	x0, #0x3302, lsl #32
   1c9bc:	movk	x0, #0x232f, lsl #48
   1c9c0:	umulh	x0, x9, x0
   1c9c4:	lsr	x0, x0, #37
   1c9c8:	mov	x11, #0x1000                	// #4096
   1c9cc:	movk	x11, #0xd4a5, lsl #16
   1c9d0:	movk	x11, #0xe8, lsl #32
   1c9d4:	msub	x11, x0, x11, x9
   1c9d8:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1c9dc:	cmp	x4, #0x11
   1c9e0:	b.eq	1cb04 <PyInit__decimal@@Base+0x2964>  // b.none
   1c9e4:	b.ls	1ca3c <PyInit__decimal@@Base+0x289c>  // b.plast
   1c9e8:	lsr	x7, x0, #18
   1c9ec:	mov	x9, #0x490f                	// #18703
   1c9f0:	movk	x9, #0x7747, lsl #16
   1c9f4:	movk	x9, #0x49c9, lsl #32
   1c9f8:	umulh	x7, x7, x9
   1c9fc:	lsr	x7, x7, #24
   1ca00:	mov	x9, #0xa7640000            	// #2808348672
   1ca04:	movk	x9, #0xb6b3, lsl #32
   1ca08:	movk	x9, #0xde0, lsl #48
   1ca0c:	msub	x9, x7, x9, x0
   1ca10:	lsr	x0, x9, #17
   1ca14:	mov	x11, #0x1b53                	// #6995
   1ca18:	movk	x11, #0xd519, lsl #16
   1ca1c:	movk	x11, #0x5c3b, lsl #32
   1ca20:	umulh	x0, x0, x11
   1ca24:	lsr	x0, x0, #22
   1ca28:	mov	x11, #0x5d8a0000            	// #1569325056
   1ca2c:	movk	x11, #0x4578, lsl #32
   1ca30:	movk	x11, #0x163, lsl #48
   1ca34:	msub	x11, x0, x11, x9
   1ca38:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1ca3c:	cmp	x4, #0xf
   1ca40:	b.eq	1caa8 <PyInit__decimal@@Base+0x2908>  // b.none
   1ca44:	cmp	x4, #0x10
   1ca48:	b.ne	1cb58 <PyInit__decimal@@Base+0x29b8>  // b.any
   1ca4c:	mov	x7, #0x7857                	// #30807
   1ca50:	movk	x7, #0xb113, lsl #16
   1ca54:	movk	x7, #0x652f, lsl #32
   1ca58:	movk	x7, #0x39a5, lsl #48
   1ca5c:	umulh	x7, x0, x7
   1ca60:	lsr	x7, x7, #51
   1ca64:	mov	x9, #0x6fc10000            	// #1874919424
   1ca68:	movk	x9, #0x86f2, lsl #32
   1ca6c:	movk	x9, #0x23, lsl #48
   1ca70:	msub	x9, x7, x9, x0
   1ca74:	lsr	x0, x9, #15
   1ca78:	mov	x11, #0xeac3                	// #60099
   1ca7c:	movk	x11, #0xf3dc, lsl #16
   1ca80:	movk	x11, #0x4075, lsl #32
   1ca84:	movk	x11, #0x2, lsl #48
   1ca88:	umulh	x0, x0, x11
   1ca8c:	lsr	x0, x0, #20
   1ca90:	mov	x11, #0x8000                	// #32768
   1ca94:	movk	x11, #0xa4c6, lsl #16
   1ca98:	movk	x11, #0x8d7e, lsl #32
   1ca9c:	movk	x11, #0x3, lsl #48
   1caa0:	msub	x11, x0, x11, x9
   1caa4:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1caa8:	lsr	x7, x0, #15
   1caac:	mov	x9, #0xeac3                	// #60099
   1cab0:	movk	x9, #0xf3dc, lsl #16
   1cab4:	movk	x9, #0x4075, lsl #32
   1cab8:	movk	x9, #0x2, lsl #48
   1cabc:	umulh	x7, x7, x9
   1cac0:	lsr	x7, x7, #20
   1cac4:	mov	x9, #0x8000                	// #32768
   1cac8:	movk	x9, #0xa4c6, lsl #16
   1cacc:	movk	x9, #0x8d7e, lsl #32
   1cad0:	movk	x9, #0x3, lsl #48
   1cad4:	msub	x9, x7, x9, x0
   1cad8:	mov	x0, #0xcd81                	// #52609
   1cadc:	movk	x0, #0x5095, lsl #16
   1cae0:	movk	x0, #0x4dc3, lsl #32
   1cae4:	movk	x0, #0xb42, lsl #48
   1cae8:	umulh	x0, x9, x0
   1caec:	lsr	x0, x0, #42
   1caf0:	mov	x11, #0x4000                	// #16384
   1caf4:	movk	x11, #0x107a, lsl #16
   1caf8:	movk	x11, #0x5af3, lsl #32
   1cafc:	msub	x11, x0, x11, x9
   1cb00:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1cb04:	lsr	x7, x0, #17
   1cb08:	mov	x9, #0x1b53                	// #6995
   1cb0c:	movk	x9, #0xd519, lsl #16
   1cb10:	movk	x9, #0x5c3b, lsl #32
   1cb14:	umulh	x7, x7, x9
   1cb18:	lsr	x7, x7, #22
   1cb1c:	mov	x9, #0x5d8a0000            	// #1569325056
   1cb20:	movk	x9, #0x4578, lsl #32
   1cb24:	movk	x9, #0x163, lsl #48
   1cb28:	msub	x9, x7, x9, x0
   1cb2c:	mov	x0, #0x7857                	// #30807
   1cb30:	movk	x0, #0xb113, lsl #16
   1cb34:	movk	x0, #0x652f, lsl #32
   1cb38:	movk	x0, #0x39a5, lsl #48
   1cb3c:	umulh	x0, x9, x0
   1cb40:	lsr	x0, x0, #51
   1cb44:	mov	x11, #0x6fc10000            	// #1874919424
   1cb48:	movk	x11, #0x86f2, lsl #32
   1cb4c:	movk	x11, #0x23, lsl #48
   1cb50:	msub	x11, x0, x11, x9
   1cb54:	b	1c4a8 <PyInit__decimal@@Base+0x2308>
   1cb58:	sub	x0, x4, #0x1
   1cb5c:	cmp	x0, #0x9
   1cb60:	b.hi	1cbe4 <PyInit__decimal@@Base+0x2a44>  // b.pmore
   1cb64:	cmp	x0, #0x4
   1cb68:	b.hi	1cba4 <PyInit__decimal@@Base+0x2a04>  // b.pmore
   1cb6c:	b.eq	1cb9c <PyInit__decimal@@Base+0x29fc>  // b.none
   1cb70:	cmp	x0, #0x3
   1cb74:	b.eq	1cb94 <PyInit__decimal@@Base+0x29f4>  // b.none
   1cb78:	cmp	x0, #0x2
   1cb7c:	b.eq	1cb8c <PyInit__decimal@@Base+0x29ec>  // b.none
   1cb80:	mov	x9, #0x0                   	// #0
   1cb84:	cbnz	x0, 1c5f0 <PyInit__decimal@@Base+0x2450>
   1cb88:	b	1c4a4 <PyInit__decimal@@Base+0x2304>
   1cb8c:	mov	x9, #0x0                   	// #0
   1cb90:	b	1c638 <PyInit__decimal@@Base+0x2498>
   1cb94:	mov	x9, #0x0                   	// #0
   1cb98:	b	1c454 <PyInit__decimal@@Base+0x22b4>
   1cb9c:	mov	x9, #0x0                   	// #0
   1cba0:	b	1c750 <PyInit__decimal@@Base+0x25b0>
   1cba4:	cmp	x0, #0x9
   1cba8:	b.eq	1cbdc <PyInit__decimal@@Base+0x2a3c>  // b.none
   1cbac:	cmp	x0, #0x8
   1cbb0:	b.eq	1cbd4 <PyInit__decimal@@Base+0x2a34>  // b.none
   1cbb4:	cmp	x0, #0x7
   1cbb8:	b.eq	1cbcc <PyInit__decimal@@Base+0x2a2c>  // b.none
   1cbbc:	mov	x9, #0x0                   	// #0
   1cbc0:	cmp	x0, #0x5
   1cbc4:	b.ne	1c798 <PyInit__decimal@@Base+0x25f8>  // b.any
   1cbc8:	b	1c6fc <PyInit__decimal@@Base+0x255c>
   1cbcc:	mov	x9, #0x0                   	// #0
   1cbd0:	b	1c7e4 <PyInit__decimal@@Base+0x2644>
   1cbd4:	mov	x9, #0x0                   	// #0
   1cbd8:	b	1c6a0 <PyInit__decimal@@Base+0x2500>
   1cbdc:	mov	x9, #0x0                   	// #0
   1cbe0:	b	1c908 <PyInit__decimal@@Base+0x2768>
   1cbe4:	cmp	x0, #0xe
   1cbe8:	b.hi	1cc28 <PyInit__decimal@@Base+0x2a88>  // b.pmore
   1cbec:	b.eq	1cc20 <PyInit__decimal@@Base+0x2a80>  // b.none
   1cbf0:	cmp	x0, #0xd
   1cbf4:	b.eq	1cc18 <PyInit__decimal@@Base+0x2a78>  // b.none
   1cbf8:	cmp	x0, #0xc
   1cbfc:	b.eq	1cc10 <PyInit__decimal@@Base+0x2a70>  // b.none
   1cc00:	mov	x9, #0x0                   	// #0
   1cc04:	cmp	x0, #0xa
   1cc08:	b.ne	1c95c <PyInit__decimal@@Base+0x27bc>  // b.any
   1cc0c:	b	1c8b4 <PyInit__decimal@@Base+0x2714>
   1cc10:	mov	x9, #0x0                   	// #0
   1cc14:	b	1c9b0 <PyInit__decimal@@Base+0x2810>
   1cc18:	mov	x9, #0x0                   	// #0
   1cc1c:	b	1c850 <PyInit__decimal@@Base+0x26b0>
   1cc20:	mov	x9, #0x0                   	// #0
   1cc24:	b	1cad8 <PyInit__decimal@@Base+0x2938>
   1cc28:	cmp	x0, #0x11
   1cc2c:	b.eq	1cc40 <PyInit__decimal@@Base+0x2aa0>  // b.none
   1cc30:	mov	x9, #0x0                   	// #0
   1cc34:	cmp	x0, #0xf
   1cc38:	b.ne	1cb2c <PyInit__decimal@@Base+0x298c>  // b.any
   1cc3c:	b	1ca74 <PyInit__decimal@@Base+0x28d4>
   1cc40:	mov	x9, #0x0                   	// #0
   1cc44:	b	1ca10 <PyInit__decimal@@Base+0x2870>
   1cc48:	subs	x3, x3, #0x1
   1cc4c:	b.mi	1cc60 <PyInit__decimal@@Base+0x2ac0>  // b.first
   1cc50:	ldr	x9, [x1, x3, lsl #3]
   1cc54:	cbz	x9, 1cc48 <PyInit__decimal@@Base+0x2aa8>
   1cc58:	mov	w11, #0x0                   	// #0
   1cc5c:	b	1cc64 <PyInit__decimal@@Base+0x2ac4>
   1cc60:	mov	w11, #0x1                   	// #1
   1cc64:	eor	w11, w11, #0x1
   1cc68:	mov	w11, w11
   1cc6c:	b	1c4b8 <PyInit__decimal@@Base+0x2318>
   1cc70:	cmp	x4, #0x1
   1cc74:	b.ne	1cc90 <PyInit__decimal@@Base+0x2af0>  // b.any
   1cc78:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   1cc7c:	movk	x6, #0xcccd
   1cc80:	umulh	x6, x9, x6
   1cc84:	lsr	x6, x6, #3
   1cc88:	add	x10, x6, x6, lsl #2
   1cc8c:	sub	x10, x9, x10, lsl #1
   1cc90:	madd	x7, x13, x10, x7
   1cc94:	str	x7, [x12, x3, lsl #3]
   1cc98:	add	x9, x3, #0x1
   1cc9c:	cmp	x2, x9
   1cca0:	b.eq	1cf48 <PyInit__decimal@@Base+0x2da8>  // b.none
   1cca4:	mov	x7, x6
   1cca8:	mov	x3, x9
   1ccac:	ldr	x9, [x1, x3, lsl #3]
   1ccb0:	cmp	x4, #0x9
   1ccb4:	b.hi	1ce48 <PyInit__decimal@@Base+0x2ca8>  // b.pmore
   1ccb8:	cmp	x4, #0x4
   1ccbc:	b.hi	1cd54 <PyInit__decimal@@Base+0x2bb4>  // b.pmore
   1ccc0:	cmp	x4, #0x2
   1ccc4:	b.eq	1ccf8 <PyInit__decimal@@Base+0x2b58>  // b.none
   1ccc8:	b.ls	1cc70 <PyInit__decimal@@Base+0x2ad0>  // b.plast
   1cccc:	cmp	x4, #0x3
   1ccd0:	b.eq	1cd24 <PyInit__decimal@@Base+0x2b84>  // b.none
   1ccd4:	mov	x6, #0x594b                	// #22859
   1ccd8:	movk	x6, #0x3886, lsl #16
   1ccdc:	movk	x6, #0xc5d6, lsl #32
   1cce0:	movk	x6, #0x346d, lsl #48
   1cce4:	umulh	x6, x9, x6
   1cce8:	lsr	x6, x6, #11
   1ccec:	mov	x10, #0x2710                	// #10000
   1ccf0:	msub	x10, x6, x10, x9
   1ccf4:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ccf8:	lsr	x6, x9, #2
   1ccfc:	mov	x10, #0xf5c3                	// #62915
   1cd00:	movk	x10, #0x5c28, lsl #16
   1cd04:	movk	x10, #0xc28f, lsl #32
   1cd08:	movk	x10, #0x28f5, lsl #48
   1cd0c:	umulh	x6, x6, x10
   1cd10:	lsr	x6, x6, #2
   1cd14:	add	x10, x6, x6, lsl #1
   1cd18:	add	x10, x6, x10, lsl #3
   1cd1c:	sub	x10, x9, x10, lsl #2
   1cd20:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cd24:	lsr	x6, x9, #3
   1cd28:	mov	x10, #0xf7cf                	// #63439
   1cd2c:	movk	x10, #0xe353, lsl #16
   1cd30:	movk	x10, #0x9ba5, lsl #32
   1cd34:	movk	x10, #0x20c4, lsl #48
   1cd38:	umulh	x6, x6, x10
   1cd3c:	lsr	x6, x6, #4
   1cd40:	lsl	x10, x6, #5
   1cd44:	sub	x10, x10, x6
   1cd48:	add	x10, x6, x10, lsl #2
   1cd4c:	sub	x10, x9, x10, lsl #3
   1cd50:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cd54:	cmp	x4, #0x7
   1cd58:	b.eq	1cdf8 <PyInit__decimal@@Base+0x2c58>  // b.none
   1cd5c:	b.ls	1cd94 <PyInit__decimal@@Base+0x2bf4>  // b.plast
   1cd60:	cmp	x4, #0x8
   1cd64:	b.eq	1ce20 <PyInit__decimal@@Base+0x2c80>  // b.none
   1cd68:	lsr	x6, x9, #9
   1cd6c:	mov	x10, #0x5a53                	// #23123
   1cd70:	movk	x10, #0xa09b, lsl #16
   1cd74:	movk	x10, #0xb82f, lsl #32
   1cd78:	movk	x10, #0x44, lsl #48
   1cd7c:	umulh	x6, x6, x10
   1cd80:	lsr	x6, x6, #11
   1cd84:	mov	x10, #0xca00                	// #51712
   1cd88:	movk	x10, #0x3b9a, lsl #16
   1cd8c:	msub	x10, x6, x10, x9
   1cd90:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cd94:	cmp	x4, #0x5
   1cd98:	b.eq	1cdcc <PyInit__decimal@@Base+0x2c2c>  // b.none
   1cd9c:	cmp	x4, #0x6
   1cda0:	b.ne	1cc90 <PyInit__decimal@@Base+0x2af0>  // b.any
   1cda4:	mov	x6, #0x34db                	// #13531
   1cda8:	movk	x6, #0xd7b6, lsl #16
   1cdac:	movk	x6, #0xde82, lsl #32
   1cdb0:	movk	x6, #0x431b, lsl #48
   1cdb4:	umulh	x6, x9, x6
   1cdb8:	lsr	x6, x6, #18
   1cdbc:	mov	x10, #0x4240                	// #16960
   1cdc0:	movk	x10, #0xf, lsl #16
   1cdc4:	msub	x10, x6, x10, x9
   1cdc8:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cdcc:	lsr	x6, x9, #5
   1cdd0:	mov	x10, #0x7843                	// #30787
   1cdd4:	movk	x10, #0x71b4, lsl #16
   1cdd8:	movk	x10, #0x5ac4, lsl #32
   1cddc:	movk	x10, #0xa7c, lsl #48
   1cde0:	umulh	x6, x6, x10
   1cde4:	lsr	x6, x6, #7
   1cde8:	mov	x10, #0x86a0                	// #34464
   1cdec:	movk	x10, #0x1, lsl #16
   1cdf0:	msub	x10, x6, x10, x9
   1cdf4:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cdf8:	mov	x6, #0x42bd                	// #17085
   1cdfc:	movk	x6, #0xe57a, lsl #16
   1ce00:	movk	x6, #0x94d5, lsl #32
   1ce04:	movk	x6, #0xd6bf, lsl #48
   1ce08:	umulh	x6, x9, x6
   1ce0c:	lsr	x6, x6, #23
   1ce10:	mov	x10, #0x9680                	// #38528
   1ce14:	movk	x10, #0x98, lsl #16
   1ce18:	msub	x10, x6, x10, x9
   1ce1c:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ce20:	mov	x6, #0xcefd                	// #52989
   1ce24:	movk	x6, #0x8461, lsl #16
   1ce28:	movk	x6, #0x7711, lsl #32
   1ce2c:	movk	x6, #0xabcc, lsl #48
   1ce30:	umulh	x6, x9, x6
   1ce34:	lsr	x6, x6, #26
   1ce38:	mov	x10, #0xe100                	// #57600
   1ce3c:	movk	x10, #0x5f5, lsl #16
   1ce40:	msub	x10, x6, x10, x9
   1ce44:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ce48:	cmp	x4, #0xe
   1ce4c:	b.hi	1cee0 <PyInit__decimal@@Base+0x2d40>  // b.pmore
   1ce50:	cmp	x4, #0xc
   1ce54:	b.eq	1cec0 <PyInit__decimal@@Base+0x2d20>  // b.none
   1ce58:	b.ls	1ce74 <PyInit__decimal@@Base+0x2cd4>  // b.plast
   1ce5c:	cmp	x4, #0xd
   1ce60:	b.eq	1ced0 <PyInit__decimal@@Base+0x2d30>  // b.none
   1ce64:	umulh	x6, x9, x30
   1ce68:	lsr	x6, x6, #42
   1ce6c:	msub	x10, x6, x18, x9
   1ce70:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ce74:	cmp	x4, #0xa
   1ce78:	b.eq	1ceb0 <PyInit__decimal@@Base+0x2d10>  // b.none
   1ce7c:	cmp	x4, #0xb
   1ce80:	b.ne	1cc90 <PyInit__decimal@@Base+0x2af0>  // b.any
   1ce84:	mov	x6, #0xaaff                	// #43775
   1ce88:	movk	x6, #0xcb24, lsl #16
   1ce8c:	movk	x6, #0xff0b, lsl #32
   1ce90:	movk	x6, #0xafeb, lsl #48
   1ce94:	umulh	x6, x9, x6
   1ce98:	lsr	x6, x6, #36
   1ce9c:	mov	x10, #0xe800                	// #59392
   1cea0:	movk	x10, #0x4876, lsl #16
   1cea4:	movk	x10, #0x17, lsl #32
   1cea8:	msub	x10, x6, x10, x9
   1ceac:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ceb0:	umulh	x6, x9, x15
   1ceb4:	lsr	x6, x6, #33
   1ceb8:	msub	x10, x6, x14, x9
   1cebc:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cec0:	umulh	x6, x9, x20
   1cec4:	lsr	x6, x6, #37
   1cec8:	msub	x10, x6, x19, x9
   1cecc:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1ced0:	umulh	x6, x9, x17
   1ced4:	lsr	x6, x6, #41
   1ced8:	msub	x10, x6, x16, x9
   1cedc:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cee0:	cmp	x4, #0x11
   1cee4:	b.eq	1cf34 <PyInit__decimal@@Base+0x2d94>  // b.none
   1cee8:	b.ls	1cf00 <PyInit__decimal@@Base+0x2d60>  // b.plast
   1ceec:	lsr	x6, x9, #18
   1cef0:	umulh	x6, x6, x26
   1cef4:	lsr	x6, x6, #24
   1cef8:	msub	x10, x6, x25, x9
   1cefc:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cf00:	cmp	x4, #0xf
   1cf04:	b.eq	1cf20 <PyInit__decimal@@Base+0x2d80>  // b.none
   1cf08:	cmp	x4, #0x10
   1cf0c:	b.ne	1cc90 <PyInit__decimal@@Base+0x2af0>  // b.any
   1cf10:	umulh	x6, x9, x22
   1cf14:	lsr	x6, x6, #51
   1cf18:	msub	x10, x6, x21, x9
   1cf1c:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cf20:	lsr	x6, x9, #15
   1cf24:	umulh	x6, x6, x24
   1cf28:	lsr	x6, x6, #20
   1cf2c:	msub	x10, x6, x23, x9
   1cf30:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cf34:	lsr	x6, x9, #17
   1cf38:	umulh	x6, x6, x28
   1cf3c:	lsr	x6, x6, #22
   1cf40:	msub	x10, x6, x27, x9
   1cf44:	b	1cc90 <PyInit__decimal@@Base+0x2af0>
   1cf48:	sub	x5, x3, x5
   1cf4c:	cbz	x6, 1cf54 <PyInit__decimal@@Base+0x2db4>
   1cf50:	str	x6, [x8, x5, lsl #3]
   1cf54:	cmp	x0, #0x0
   1cf58:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   1cf5c:	b.ne	1cf68 <PyInit__decimal@@Base+0x2dc8>  // b.any
   1cf60:	cmp	x11, #0x0
   1cf64:	cinc	x0, x0, ne  // ne = any
   1cf68:	ldp	x19, x20, [sp, #16]
   1cf6c:	ldp	x21, x22, [sp, #32]
   1cf70:	ldp	x23, x24, [sp, #48]
   1cf74:	ldp	x25, x26, [sp, #64]
   1cf78:	ldp	x27, x28, [sp, #80]
   1cf7c:	ldp	x29, x30, [sp], #96
   1cf80:	ret
   1cf84:	mov	w11, #0x1                   	// #1
   1cf88:	eor	w11, w11, #0x1
   1cf8c:	mov	w11, w11
   1cf90:	subs	x2, x2, x5
   1cf94:	b.eq	1cfb0 <PyInit__decimal@@Base+0x2e10>  // b.none
   1cf98:	add	x1, x1, x5, lsl #3
   1cf9c:	ldr	x3, [x1, x4, lsl #3]
   1cfa0:	str	x3, [x8, x4, lsl #3]
   1cfa4:	add	x4, x4, #0x1
   1cfa8:	cmp	x4, x2
   1cfac:	b.ne	1cf9c <PyInit__decimal@@Base+0x2dfc>  // b.any
   1cfb0:	cmp	x0, #0x0
   1cfb4:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   1cfb8:	b.eq	1cfd8 <PyInit__decimal@@Base+0x2e38>  // b.none
   1cfbc:	ret
   1cfc0:	mov	x11, x4
   1cfc4:	mov	x0, x4
   1cfc8:	subs	x2, x2, x5
   1cfcc:	b.ne	1cf98 <PyInit__decimal@@Base+0x2df8>  // b.any
   1cfd0:	mov	x11, x2
   1cfd4:	mov	x0, x2
   1cfd8:	cmp	x11, #0x0
   1cfdc:	cinc	x0, x0, ne  // ne = any
   1cfe0:	b	1cfbc <PyInit__decimal@@Base+0x2e1c>
   1cfe4:	mov	x5, #0x0                   	// #0
   1cfe8:	cbz	x7, 1cfb0 <PyInit__decimal@@Base+0x2e10>
   1cfec:	str	x7, [x8, x5, lsl #3]
   1cff0:	b	1cfb0 <PyInit__decimal@@Base+0x2e10>
   1cff4:	mov	x5, x0
   1cff8:	ldr	x0, [x0]
   1cffc:	adds	x2, x2, x0
   1d000:	ccmp	x2, x3, #0x2, cc  // cc = lo, ul, last
   1d004:	b.cc	1d058 <PyInit__decimal@@Base+0x2eb8>  // b.lo, b.ul, b.last
   1d008:	sub	x2, x2, x3
   1d00c:	str	x2, [x5]
   1d010:	cmp	x1, #0x1
   1d014:	b.ls	1d050 <PyInit__decimal@@Base+0x2eb0>  // b.plast
   1d018:	mov	x4, #0x1                   	// #1
   1d01c:	mov	x7, #0x0                   	// #0
   1d020:	ldr	x2, [x5, x4, lsl #3]
   1d024:	add	x2, x2, #0x1
   1d028:	cmp	x3, x2
   1d02c:	cset	w6, eq  // eq = none
   1d030:	cset	x0, eq  // eq = none
   1d034:	csel	x2, x2, x7, ne  // ne = any
   1d038:	str	x2, [x5, x4, lsl #3]
   1d03c:	add	x4, x4, #0x1
   1d040:	cmp	w6, #0x0
   1d044:	ccmp	x1, x4, #0x0, ne  // ne = any
   1d048:	b.hi	1d020 <PyInit__decimal@@Base+0x2e80>  // b.pmore
   1d04c:	ret
   1d050:	mov	x0, #0x1                   	// #1
   1d054:	b	1d04c <PyInit__decimal@@Base+0x2eac>
   1d058:	str	x2, [x5]
   1d05c:	mov	x0, #0x0                   	// #0
   1d060:	b	1d04c <PyInit__decimal@@Base+0x2eac>
   1d064:	mov	x13, x0
   1d068:	mov	x0, x2
   1d06c:	cbz	x2, 1d138 <PyInit__decimal@@Base+0x2f98>
   1d070:	mov	x12, x3
   1d074:	mov	x15, #0x0                   	// #0
   1d078:	ldr	x5, [x1]
   1d07c:	umulh	x4, x5, x3
   1d080:	mul	x5, x5, x3
   1d084:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1d088:	ldr	x11, [x0, #3504]
   1d08c:	mov	x17, #0x0                   	// #0
   1d090:	mov	x8, #0x0                   	// #0
   1d094:	mov	x10, #0x89e80000            	// #2313682944
   1d098:	movk	x10, #0x2304, lsl #32
   1d09c:	movk	x10, #0x8ac7, lsl #48
   1d0a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1d0a4:	add	x0, x0, #0xcf0
   1d0a8:	ldr	x9, [x0]
   1d0ac:	ldr	x16, [x0, #8]
   1d0b0:	mov	x14, #0x76180000            	// #1981284352
   1d0b4:	movk	x14, #0xdcfb, lsl #32
   1d0b8:	movk	x14, #0x7538, lsl #48
   1d0bc:	b	1d0d8 <PyInit__decimal@@Base+0x2f38>
   1d0c0:	ldr	x5, [x1, x8, lsl #3]
   1d0c4:	umulh	x4, x5, x12
   1d0c8:	madd	x4, x5, x15, x4
   1d0cc:	madd	x5, x5, x12, x0
   1d0d0:	cmp	x5, x0
   1d0d4:	cinc	x4, x4, cc  // cc = lo, ul, last
   1d0d8:	and	x7, x10, x5, asr #63
   1d0dc:	add	x7, x7, x5
   1d0e0:	add	x6, x4, x5, lsr #63
   1d0e4:	umulh	x3, x6, x11
   1d0e8:	madd	x3, x6, x17, x3
   1d0ec:	madd	x6, x6, x11, x7
   1d0f0:	cmp	x7, x6
   1d0f4:	cinc	x3, x3, hi  // hi = pmore
   1d0f8:	add	x3, x4, x3
   1d0fc:	mvn	x3, x3
   1d100:	umulh	x6, x3, x9
   1d104:	madd	x6, x3, x16, x6
   1d108:	madd	x7, x3, x9, x5
   1d10c:	cmp	x7, x5
   1d110:	cinc	x6, x6, cc  // cc = lo, ul, last
   1d114:	add	x4, x4, x14
   1d118:	add	x4, x4, x6
   1d11c:	sub	x0, x4, x3
   1d120:	and	x4, x4, x10
   1d124:	add	x4, x4, x7
   1d128:	str	x4, [x13, x8, lsl #3]
   1d12c:	add	x8, x8, #0x1
   1d130:	cmp	x2, x8
   1d134:	b.ne	1d0c0 <PyInit__decimal@@Base+0x2f20>  // b.any
   1d138:	ret
   1d13c:	stp	x29, x30, [sp, #-96]!
   1d140:	mov	x29, sp
   1d144:	stp	x23, x24, [sp, #48]
   1d148:	mov	x23, x2
   1d14c:	cbz	x2, 1d1cc <PyInit__decimal@@Base+0x302c>
   1d150:	stp	x19, x20, [sp, #16]
   1d154:	stp	x21, x22, [sp, #32]
   1d158:	stp	x25, x26, [sp, #64]
   1d15c:	str	x27, [sp, #80]
   1d160:	mov	x24, x0
   1d164:	mov	x25, x1
   1d168:	mov	x21, x4
   1d16c:	mov	x22, x3
   1d170:	mov	x26, #0x0                   	// #0
   1d174:	ldr	x0, [x1]
   1d178:	umulh	x1, x0, x3
   1d17c:	mul	x3, x0, x3
   1d180:	mov	x19, #0x0                   	// #0
   1d184:	mov	x20, #0x0                   	// #0
   1d188:	adds	x27, x20, x3
   1d18c:	mov	x2, x21
   1d190:	mov	x3, x20
   1d194:	mov	x0, x27
   1d198:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1d19c:	msub	x3, x21, x0, x27
   1d1a0:	str	x3, [x24, x19, lsl #3]
   1d1a4:	add	x19, x19, #0x1
   1d1a8:	cmp	x23, x19
   1d1ac:	b.eq	1d1d4 <PyInit__decimal@@Base+0x3034>  // b.none
   1d1b0:	ldr	x3, [x25, x19, lsl #3]
   1d1b4:	umulh	x1, x3, x22
   1d1b8:	madd	x1, x3, x26, x1
   1d1bc:	madd	x3, x3, x22, x0
   1d1c0:	cmp	x3, x0
   1d1c4:	cinc	x1, x1, cc  // cc = lo, ul, last
   1d1c8:	b	1d188 <PyInit__decimal@@Base+0x2fe8>
   1d1cc:	mov	x0, x2
   1d1d0:	b	1d1e4 <PyInit__decimal@@Base+0x3044>
   1d1d4:	ldp	x19, x20, [sp, #16]
   1d1d8:	ldp	x21, x22, [sp, #32]
   1d1dc:	ldp	x25, x26, [sp, #64]
   1d1e0:	ldr	x27, [sp, #80]
   1d1e4:	ldp	x23, x24, [sp, #48]
   1d1e8:	ldp	x29, x30, [sp], #96
   1d1ec:	ret
   1d1f0:	cbz	x2, 1d27c <PyInit__decimal@@Base+0x30dc>
   1d1f4:	stp	x29, x30, [sp, #-80]!
   1d1f8:	mov	x29, sp
   1d1fc:	stp	x19, x20, [sp, #16]
   1d200:	stp	x21, x22, [sp, #32]
   1d204:	stp	x23, x24, [sp, #48]
   1d208:	str	x25, [sp, #64]
   1d20c:	mov	x23, x0
   1d210:	mov	x24, x1
   1d214:	mov	x21, x3
   1d218:	mov	x22, x4
   1d21c:	sub	x19, x2, #0x1
   1d220:	ldr	x0, [x1, x19, lsl #3]
   1d224:	neg	x1, x2, lsl #3
   1d228:	add	x1, x1, x19, lsl #3
   1d22c:	add	x1, x1, #0x8
   1d230:	add	x23, x23, x1
   1d234:	mov	x1, #0x0                   	// #0
   1d238:	mov	x20, #0x0                   	// #0
   1d23c:	adds	x25, x20, x0
   1d240:	mov	x2, x21
   1d244:	mov	x3, x20
   1d248:	mov	x0, x25
   1d24c:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1d250:	str	x0, [x23, x19, lsl #3]
   1d254:	msub	x0, x21, x0, x25
   1d258:	sub	x19, x19, #0x1
   1d25c:	cmn	x19, #0x1
   1d260:	b.eq	1d284 <PyInit__decimal@@Base+0x30e4>  // b.none
   1d264:	umulh	x1, x0, x22
   1d268:	ldr	x2, [x24, x19, lsl #3]
   1d26c:	madd	x0, x0, x22, x2
   1d270:	cmp	x2, x0
   1d274:	cinc	x1, x1, hi  // hi = pmore
   1d278:	b	1d23c <PyInit__decimal@@Base+0x309c>
   1d27c:	mov	x0, #0x0                   	// #0
   1d280:	ret
   1d284:	ldp	x19, x20, [sp, #16]
   1d288:	ldp	x21, x22, [sp, #32]
   1d28c:	ldp	x23, x24, [sp, #48]
   1d290:	ldr	x25, [sp, #64]
   1d294:	ldp	x29, x30, [sp], #80
   1d298:	ret
   1d29c:	stp	x29, x30, [sp, #-16]!
   1d2a0:	mov	x29, sp
   1d2a4:	mov	w0, #0x8                   	// #8
   1d2a8:	bl	6510 <raise@plt>
   1d2ac:	ldp	x29, x30, [sp], #16
   1d2b0:	ret
   1d2b4:	stp	x29, x30, [sp, #-32]!
   1d2b8:	mov	x29, sp
   1d2bc:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1d2c0:	ldr	w1, [x1, #1928]
   1d2c4:	cbnz	w1, 1d2f0 <PyInit__decimal@@Base+0x3150>
   1d2c8:	sub	x1, x0, #0x2
   1d2cc:	cmp	x1, #0x3e
   1d2d0:	b.hi	1d344 <PyInit__decimal@@Base+0x31a4>  // b.pmore
   1d2d4:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1d2d8:	str	x0, [x1, #1672]
   1d2dc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1d2e0:	mov	w1, #0x1                   	// #1
   1d2e4:	str	w1, [x0, #1928]
   1d2e8:	ldp	x29, x30, [sp], #32
   1d2ec:	ret
   1d2f0:	str	x19, [sp, #16]
   1d2f4:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   1d2f8:	ldr	x19, [x19, #3904]
   1d2fc:	mov	w3, #0x36                  	// #54
   1d300:	adrp	x2, 43000 <PyInit__decimal@@Base+0x28e60>
   1d304:	add	x2, x2, #0xa8
   1d308:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   1d30c:	add	x1, x1, #0xe8
   1d310:	ldr	x0, [x19]
   1d314:	bl	6a70 <fprintf@plt>
   1d318:	ldr	x3, [x19]
   1d31c:	mov	x2, #0x44                  	// #68
   1d320:	mov	x1, #0x1                   	// #1
   1d324:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1d328:	add	x0, x0, #0x100
   1d32c:	bl	6930 <fwrite@plt>
   1d330:	ldr	x1, [x19]
   1d334:	mov	w0, #0xa                   	// #10
   1d338:	bl	65b0 <fputc@plt>
   1d33c:	ldr	x19, [sp, #16]
   1d340:	b	1d2e8 <PyInit__decimal@@Base+0x3148>
   1d344:	str	x19, [sp, #16]
   1d348:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   1d34c:	ldr	x19, [x19, #3904]
   1d350:	mov	w3, #0x3b                  	// #59
   1d354:	adrp	x2, 43000 <PyInit__decimal@@Base+0x28e60>
   1d358:	add	x2, x2, #0xa8
   1d35c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   1d360:	add	x1, x1, #0xca8
   1d364:	ldr	x0, [x19]
   1d368:	bl	6a70 <fprintf@plt>
   1d36c:	ldr	x3, [x19]
   1d370:	mov	x2, #0x1e                  	// #30
   1d374:	mov	x1, #0x1                   	// #1
   1d378:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1d37c:	add	x0, x0, #0x148
   1d380:	bl	6930 <fwrite@plt>
   1d384:	ldr	x1, [x19]
   1d388:	mov	w0, #0xa                   	// #10
   1d38c:	bl	65b0 <fputc@plt>
   1d390:	bl	67c0 <abort@plt>
   1d394:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1d398:	movk	x1, #0xb6b3, lsl #32
   1d39c:	movk	x1, #0xde0, lsl #48
   1d3a0:	str	x1, [x0]
   1d3a4:	str	x1, [x0, #8]
   1d3a8:	mov	x1, #0x1                   	// #1
   1d3ac:	movk	x1, #0x589c, lsl #16
   1d3b0:	movk	x1, #0x494c, lsl #32
   1d3b4:	movk	x1, #0xf21f, lsl #48
   1d3b8:	str	x1, [x0, #16]
   1d3bc:	mov	w1, #0x6                   	// #6
   1d3c0:	str	w1, [x0, #36]
   1d3c4:	mov	w1, #0x4bbe                	// #19390
   1d3c8:	str	w1, [x0, #24]
   1d3cc:	str	wzr, [x0, #28]
   1d3d0:	str	wzr, [x0, #32]
   1d3d4:	str	wzr, [x0, #40]
   1d3d8:	mov	w1, #0x1                   	// #1
   1d3dc:	str	w1, [x0, #44]
   1d3e0:	ret
   1d3e4:	mov	x1, #0x26                  	// #38
   1d3e8:	str	x1, [x0]
   1d3ec:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1d3f0:	movk	x1, #0xb6b3, lsl #32
   1d3f4:	movk	x1, #0xde0, lsl #48
   1d3f8:	str	x1, [x0, #8]
   1d3fc:	mov	x1, #0x1                   	// #1
   1d400:	movk	x1, #0x589c, lsl #16
   1d404:	movk	x1, #0x494c, lsl #32
   1d408:	movk	x1, #0xf21f, lsl #48
   1d40c:	str	x1, [x0, #16]
   1d410:	mov	w1, #0x4                   	// #4
   1d414:	str	w1, [x0, #36]
   1d418:	mov	w1, #0x4bbe                	// #19390
   1d41c:	str	w1, [x0, #24]
   1d420:	str	wzr, [x0, #28]
   1d424:	str	wzr, [x0, #32]
   1d428:	str	wzr, [x0, #40]
   1d42c:	mov	w1, #0x1                   	// #1
   1d430:	str	w1, [x0, #44]
   1d434:	ret
   1d438:	mov	x1, #0x9                   	// #9
   1d43c:	str	x1, [x0]
   1d440:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1d444:	movk	x1, #0xb6b3, lsl #32
   1d448:	movk	x1, #0xde0, lsl #48
   1d44c:	str	x1, [x0, #8]
   1d450:	mov	x1, #0x1                   	// #1
   1d454:	movk	x1, #0x589c, lsl #16
   1d458:	movk	x1, #0x494c, lsl #32
   1d45c:	movk	x1, #0xf21f, lsl #48
   1d460:	str	x1, [x0, #16]
   1d464:	mov	w1, #0x4                   	// #4
   1d468:	str	w1, [x0, #36]
   1d46c:	mov	w1, #0x4bbf                	// #19391
   1d470:	str	w1, [x0, #24]
   1d474:	str	wzr, [x0, #28]
   1d478:	str	wzr, [x0, #32]
   1d47c:	str	wzr, [x0, #40]
   1d480:	mov	w1, #0x1                   	// #1
   1d484:	str	w1, [x0, #44]
   1d488:	ret
   1d48c:	sub	w2, w1, #0x1
   1d490:	cmp	w2, #0x1ff
   1d494:	b.hi	1d50c <PyInit__decimal@@Base+0x336c>  // b.pmore
   1d498:	tst	x1, #0x1f
   1d49c:	b.ne	1d514 <PyInit__decimal@@Base+0x3374>  // b.any
   1d4a0:	add	w2, w1, #0x1f
   1d4a4:	cmp	w1, #0x0
   1d4a8:	csel	w2, w2, w1, lt  // lt = tstop
   1d4ac:	asr	w2, w2, #5
   1d4b0:	add	w2, w2, w2, lsl #3
   1d4b4:	sub	w2, w2, #0x2
   1d4b8:	sxtw	x2, w2
   1d4bc:	str	x2, [x0]
   1d4c0:	add	w2, w1, #0xf
   1d4c4:	csel	w1, w2, w1, lt  // lt = tstop
   1d4c8:	asr	w1, w1, #4
   1d4cc:	add	w1, w1, #0x3
   1d4d0:	mov	x2, #0x3                   	// #3
   1d4d4:	lsl	x1, x2, x1
   1d4d8:	str	x1, [x0, #8]
   1d4dc:	mov	x2, #0x1                   	// #1
   1d4e0:	sub	x1, x2, x1
   1d4e4:	str	x1, [x0, #16]
   1d4e8:	mov	w1, #0x6                   	// #6
   1d4ec:	str	w1, [x0, #36]
   1d4f0:	str	wzr, [x0, #24]
   1d4f4:	str	wzr, [x0, #28]
   1d4f8:	str	wzr, [x0, #32]
   1d4fc:	str	w2, [x0, #40]
   1d500:	str	w2, [x0, #44]
   1d504:	mov	w0, #0x0                   	// #0
   1d508:	ret
   1d50c:	mov	w0, #0xffffffff            	// #-1
   1d510:	b	1d508 <PyInit__decimal@@Base+0x3368>
   1d514:	mov	w0, #0xffffffff            	// #-1
   1d518:	b	1d508 <PyInit__decimal@@Base+0x3368>
   1d51c:	ldr	x0, [x0]
   1d520:	ret
   1d524:	ldr	x0, [x0, #8]
   1d528:	ret
   1d52c:	ldr	x0, [x0, #16]
   1d530:	ret
   1d534:	ldr	w0, [x0, #36]
   1d538:	ret
   1d53c:	ldr	w0, [x0, #24]
   1d540:	ret
   1d544:	ldr	w0, [x0, #28]
   1d548:	ret
   1d54c:	ldr	w0, [x0, #40]
   1d550:	ret
   1d554:	ldr	w0, [x0, #44]
   1d558:	ret
   1d55c:	sub	x3, x1, #0x1
   1d560:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   1d564:	movk	x2, #0xb6b3, lsl #32
   1d568:	movk	x2, #0xde0, lsl #48
   1d56c:	cmp	x3, x2
   1d570:	b.cs	1d580 <PyInit__decimal@@Base+0x33e0>  // b.hs, b.nlast
   1d574:	str	x1, [x0]
   1d578:	mov	w0, #0x1                   	// #1
   1d57c:	ret
   1d580:	mov	w0, #0x0                   	// #0
   1d584:	b	1d57c <PyInit__decimal@@Base+0x33dc>
   1d588:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   1d58c:	movk	x2, #0xb6b3, lsl #32
   1d590:	movk	x2, #0xde0, lsl #48
   1d594:	cmp	x1, x2
   1d598:	b.hi	1d5a8 <PyInit__decimal@@Base+0x3408>  // b.pmore
   1d59c:	str	x1, [x0, #8]
   1d5a0:	mov	w0, #0x1                   	// #1
   1d5a4:	ret
   1d5a8:	mov	w0, #0x0                   	// #0
   1d5ac:	b	1d5a4 <PyInit__decimal@@Base+0x3404>
   1d5b0:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   1d5b4:	movk	x2, #0xb6b3, lsl #32
   1d5b8:	movk	x2, #0xde0, lsl #48
   1d5bc:	add	x3, x1, x2
   1d5c0:	cmp	x3, x2
   1d5c4:	b.hi	1d5d4 <PyInit__decimal@@Base+0x3434>  // b.pmore
   1d5c8:	str	x1, [x0, #16]
   1d5cc:	mov	w0, #0x1                   	// #1
   1d5d0:	ret
   1d5d4:	mov	w0, #0x0                   	// #0
   1d5d8:	b	1d5d0 <PyInit__decimal@@Base+0x3430>
   1d5dc:	cmp	w1, #0x8
   1d5e0:	b.hi	1d5f0 <PyInit__decimal@@Base+0x3450>  // b.pmore
   1d5e4:	str	w1, [x0, #36]
   1d5e8:	mov	w0, #0x1                   	// #1
   1d5ec:	ret
   1d5f0:	mov	w0, #0x0                   	// #0
   1d5f4:	b	1d5ec <PyInit__decimal@@Base+0x344c>
   1d5f8:	mov	w2, #0x7fff                	// #32767
   1d5fc:	cmp	w1, w2
   1d600:	b.hi	1d610 <PyInit__decimal@@Base+0x3470>  // b.pmore
   1d604:	str	w1, [x0, #24]
   1d608:	mov	w0, #0x1                   	// #1
   1d60c:	ret
   1d610:	mov	w0, #0x0                   	// #0
   1d614:	b	1d60c <PyInit__decimal@@Base+0x346c>
   1d618:	mov	w2, #0x7fff                	// #32767
   1d61c:	cmp	w1, w2
   1d620:	b.hi	1d630 <PyInit__decimal@@Base+0x3490>  // b.pmore
   1d624:	str	w1, [x0, #28]
   1d628:	mov	w0, #0x1                   	// #1
   1d62c:	ret
   1d630:	mov	w0, #0x0                   	// #0
   1d634:	b	1d62c <PyInit__decimal@@Base+0x348c>
   1d638:	cmp	w1, #0x1
   1d63c:	b.hi	1d64c <PyInit__decimal@@Base+0x34ac>  // b.pmore
   1d640:	str	w1, [x0, #40]
   1d644:	mov	w0, #0x1                   	// #1
   1d648:	ret
   1d64c:	mov	w0, #0x0                   	// #0
   1d650:	b	1d648 <PyInit__decimal@@Base+0x34a8>
   1d654:	cmp	w1, #0x1
   1d658:	b.hi	1d668 <PyInit__decimal@@Base+0x34c8>  // b.pmore
   1d65c:	str	w1, [x0, #44]
   1d660:	mov	w0, #0x1                   	// #1
   1d664:	ret
   1d668:	mov	w0, #0x0                   	// #0
   1d66c:	b	1d664 <PyInit__decimal@@Base+0x34c4>
   1d670:	ldr	w2, [x0, #28]
   1d674:	orr	w2, w2, w1
   1d678:	str	w2, [x0, #28]
   1d67c:	ldr	w2, [x0, #24]
   1d680:	ands	w1, w1, w2
   1d684:	b.eq	1d6a8 <PyInit__decimal@@Base+0x3508>  // b.none
   1d688:	stp	x29, x30, [sp, #-16]!
   1d68c:	mov	x29, sp
   1d690:	str	w1, [x0, #32]
   1d694:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   1d698:	ldr	x1, [x1, #1424]
   1d69c:	blr	x1
   1d6a0:	ldp	x29, x30, [sp], #16
   1d6a4:	ret
   1d6a8:	ret
   1d6ac:	stp	x29, x30, [sp, #-32]!
   1d6b0:	mov	x29, sp
   1d6b4:	stp	x19, x20, [sp, #16]
   1d6b8:	mov	x20, x0
   1d6bc:	mov	x19, x1
   1d6c0:	bl	1d3e4 <PyInit__decimal@@Base+0x3244>
   1d6c4:	sub	x1, x19, #0x1
   1d6c8:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1d6cc:	movk	x0, #0xb6b3, lsl #32
   1d6d0:	movk	x0, #0xde0, lsl #48
   1d6d4:	cmp	x1, x0
   1d6d8:	b.cs	1d728 <PyInit__decimal@@Base+0x3588>  // b.hs, b.nlast
   1d6dc:	str	x19, [x20]
   1d6e0:	add	x19, x19, #0x12
   1d6e4:	mov	x0, #0x9436                	// #37942
   1d6e8:	movk	x0, #0x50d7, lsl #16
   1d6ec:	movk	x0, #0x435e, lsl #32
   1d6f0:	movk	x0, #0xd79, lsl #48
   1d6f4:	smulh	x0, x19, x0
   1d6f8:	sub	x19, x0, x19, asr #63
   1d6fc:	lsl	x0, x19, #1
   1d700:	cmp	x0, #0x40
   1d704:	mov	x1, #0x40                  	// #64
   1d708:	csel	x0, x0, x1, le
   1d70c:	cmp	x0, #0x2
   1d710:	mov	x1, #0x2                   	// #2
   1d714:	csel	x0, x0, x1, ge  // ge = tcont
   1d718:	bl	1d2b4 <PyInit__decimal@@Base+0x3114>
   1d71c:	ldp	x19, x20, [sp, #16]
   1d720:	ldp	x29, x30, [sp], #32
   1d724:	ret
   1d728:	mov	w1, #0x80                  	// #128
   1d72c:	mov	x0, x20
   1d730:	bl	1d670 <PyInit__decimal@@Base+0x34d0>
   1d734:	b	1d71c <PyInit__decimal@@Base+0x357c>
   1d738:	stp	x29, x30, [sp, #-80]!
   1d73c:	mov	x29, sp
   1d740:	stp	x19, x20, [sp, #16]
   1d744:	stp	x21, x22, [sp, #32]
   1d748:	stp	x23, x24, [sp, #48]
   1d74c:	stp	x25, x26, [sp, #64]
   1d750:	mov	x20, x0
   1d754:	mov	x22, x1
   1d758:	mov	x21, x2
   1d75c:	mov	w23, w3
   1d760:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1d764:	add	x0, x0, #0x90
   1d768:	ldr	x19, [x0, w23, sxtw #3]
   1d76c:	subs	x3, x19, #0x2
   1d770:	b.eq	1da08 <PyInit__decimal@@Base+0x3868>  // b.none
   1d774:	mov	x4, x2
   1d778:	mov	x24, #0x1                   	// #1
   1d77c:	and	x6, x19, #0x400000000
   1d780:	and	x5, x19, #0x100000000
   1d784:	b	1d8a4 <PyInit__decimal@@Base+0x3704>
   1d788:	lsr	x2, x4, #32
   1d78c:	sub	x4, x7, x4
   1d790:	cmp	x7, x4
   1d794:	sbc	x2, x2, xzr
   1d798:	lsl	x0, x0, #32
   1d79c:	adds	x4, x4, x0
   1d7a0:	cinc	x2, x2, cs  // cs = hs, nlast
   1d7a4:	lsr	x0, x2, #32
   1d7a8:	sub	x24, x4, x2
   1d7ac:	cmp	x4, x24
   1d7b0:	sbc	x0, x0, xzr
   1d7b4:	lsl	x2, x2, #32
   1d7b8:	adds	x24, x24, x2
   1d7bc:	cinc	x0, x0, cs  // cs = hs, nlast
   1d7c0:	cmp	x0, #0x0
   1d7c4:	sub	x0, x24, x19
   1d7c8:	ccmp	x19, x24, #0x0, eq  // eq = none
   1d7cc:	csel	x24, x0, x24, ls  // ls = plast
   1d7d0:	umulh	x0, x1, x1
   1d7d4:	mul	x4, x1, x1
   1d7d8:	b	1d850 <PyInit__decimal@@Base+0x36b0>
   1d7dc:	lsr	x4, x4, #24
   1d7e0:	sub	x2, x7, x0
   1d7e4:	cmp	x7, x2
   1d7e8:	sbc	x4, x4, xzr
   1d7ec:	lsl	x0, x0, #40
   1d7f0:	adds	x0, x2, x0
   1d7f4:	cinc	x4, x4, cs  // cs = hs, nlast
   1d7f8:	lsr	x2, x4, #24
   1d7fc:	sub	x7, x0, x4
   1d800:	cmp	x0, x7
   1d804:	sbc	x2, x2, xzr
   1d808:	lsl	x4, x4, #40
   1d80c:	adds	x7, x7, x4
   1d810:	cinc	x2, x2, cs  // cs = hs, nlast
   1d814:	lsr	x0, x2, #24
   1d818:	sub	x4, x7, x2
   1d81c:	cmp	x7, x4
   1d820:	sbc	x0, x0, xzr
   1d824:	lsl	x2, x2, #40
   1d828:	adds	x24, x4, x2
   1d82c:	cinc	x0, x0, cs  // cs = hs, nlast
   1d830:	cmp	x0, #0x0
   1d834:	sub	x0, x24, x19
   1d838:	ccmp	x19, x24, #0x0, eq  // eq = none
   1d83c:	csel	x24, x0, x24, ls  // ls = plast
   1d840:	b	1d924 <PyInit__decimal@@Base+0x3784>
   1d844:	umulh	x0, x4, x4
   1d848:	mul	x4, x4, x4
   1d84c:	cbz	x5, 1d92c <PyInit__decimal@@Base+0x378c>
   1d850:	lsr	x1, x0, #32
   1d854:	sub	x2, x4, x0
   1d858:	cmp	x2, x4
   1d85c:	cset	x4, hi  // hi = pmore
   1d860:	sub	x1, x1, x4
   1d864:	lsl	x0, x0, #32
   1d868:	adds	x0, x2, x0
   1d86c:	cinc	x1, x1, cs  // cs = hs, nlast
   1d870:	lsr	x2, x1, #32
   1d874:	sub	x4, x0, x1
   1d878:	cmp	x0, x4
   1d87c:	sbc	x2, x2, xzr
   1d880:	lsl	x1, x1, #32
   1d884:	adds	x4, x4, x1
   1d888:	cinc	x2, x2, cs  // cs = hs, nlast
   1d88c:	cmp	x2, #0x0
   1d890:	sub	x0, x4, x19
   1d894:	ccmp	x19, x4, #0x0, eq  // eq = none
   1d898:	csel	x4, x0, x4, ls  // ls = plast
   1d89c:	lsr	x3, x3, #1
   1d8a0:	cbz	x3, 1da0c <PyInit__decimal@@Base+0x386c>
   1d8a4:	tbz	w3, #0, 1d844 <PyInit__decimal@@Base+0x36a4>
   1d8a8:	mov	x1, x4
   1d8ac:	mul	x7, x24, x4
   1d8b0:	umulh	x4, x24, x4
   1d8b4:	mov	x0, x4
   1d8b8:	cbnz	x5, 1d788 <PyInit__decimal@@Base+0x35e8>
   1d8bc:	cbz	x6, 1d7dc <PyInit__decimal@@Base+0x363c>
   1d8c0:	lsr	x4, x4, #30
   1d8c4:	sub	x2, x7, x0
   1d8c8:	cmp	x7, x2
   1d8cc:	sbc	x4, x4, xzr
   1d8d0:	lsl	x0, x0, #34
   1d8d4:	adds	x0, x2, x0
   1d8d8:	cinc	x4, x4, cs  // cs = hs, nlast
   1d8dc:	lsr	x2, x4, #30
   1d8e0:	sub	x7, x0, x4
   1d8e4:	cmp	x0, x7
   1d8e8:	sbc	x2, x2, xzr
   1d8ec:	lsl	x4, x4, #34
   1d8f0:	adds	x7, x7, x4
   1d8f4:	cinc	x2, x2, cs  // cs = hs, nlast
   1d8f8:	lsr	x0, x2, #30
   1d8fc:	sub	x4, x7, x2
   1d900:	cmp	x7, x4
   1d904:	sbc	x0, x0, xzr
   1d908:	lsl	x2, x2, #34
   1d90c:	adds	x24, x4, x2
   1d910:	cinc	x0, x0, cs  // cs = hs, nlast
   1d914:	cmp	x0, #0x0
   1d918:	sub	x0, x24, x19
   1d91c:	ccmp	x19, x24, #0x0, eq  // eq = none
   1d920:	csel	x24, x0, x24, ls  // ls = plast
   1d924:	umulh	x0, x1, x1
   1d928:	mul	x4, x1, x1
   1d92c:	cbz	x6, 1d99c <PyInit__decimal@@Base+0x37fc>
   1d930:	lsr	x2, x0, #30
   1d934:	sub	x1, x4, x0
   1d938:	cmp	x1, x4
   1d93c:	cset	x4, hi  // hi = pmore
   1d940:	sub	x2, x2, x4
   1d944:	lsl	x0, x0, #34
   1d948:	adds	x0, x1, x0
   1d94c:	cinc	x2, x2, cs  // cs = hs, nlast
   1d950:	lsr	x1, x2, #30
   1d954:	sub	x4, x0, x2
   1d958:	cmp	x0, x4
   1d95c:	sbc	x1, x1, xzr
   1d960:	lsl	x2, x2, #34
   1d964:	adds	x2, x4, x2
   1d968:	cinc	x1, x1, cs  // cs = hs, nlast
   1d96c:	lsr	x0, x1, #30
   1d970:	sub	x4, x2, x1
   1d974:	cmp	x2, x4
   1d978:	sbc	x0, x0, xzr
   1d97c:	lsl	x1, x1, #34
   1d980:	adds	x4, x4, x1
   1d984:	cinc	x0, x0, cs  // cs = hs, nlast
   1d988:	cmp	x0, #0x0
   1d98c:	sub	x0, x4, x19
   1d990:	ccmp	x19, x4, #0x0, eq  // eq = none
   1d994:	csel	x4, x0, x4, ls  // ls = plast
   1d998:	b	1d89c <PyInit__decimal@@Base+0x36fc>
   1d99c:	lsr	x2, x0, #24
   1d9a0:	sub	x1, x4, x0
   1d9a4:	cmp	x1, x4
   1d9a8:	cset	x4, hi  // hi = pmore
   1d9ac:	sub	x2, x2, x4
   1d9b0:	lsl	x0, x0, #40
   1d9b4:	adds	x0, x1, x0
   1d9b8:	cinc	x2, x2, cs  // cs = hs, nlast
   1d9bc:	lsr	x1, x2, #24
   1d9c0:	sub	x4, x0, x2
   1d9c4:	cmp	x0, x4
   1d9c8:	sbc	x1, x1, xzr
   1d9cc:	lsl	x2, x2, #40
   1d9d0:	adds	x2, x4, x2
   1d9d4:	cinc	x1, x1, cs  // cs = hs, nlast
   1d9d8:	lsr	x0, x1, #24
   1d9dc:	sub	x4, x2, x1
   1d9e0:	cmp	x2, x4
   1d9e4:	sbc	x0, x0, xzr
   1d9e8:	lsl	x1, x1, #40
   1d9ec:	adds	x4, x4, x1
   1d9f0:	cinc	x0, x0, cs  // cs = hs, nlast
   1d9f4:	cmp	x0, #0x0
   1d9f8:	sub	x0, x4, x19
   1d9fc:	ccmp	x19, x4, #0x0, eq  // eq = none
   1da00:	csel	x4, x0, x4, ls  // ls = plast
   1da04:	b	1d89c <PyInit__decimal@@Base+0x36fc>
   1da08:	mov	x24, #0x1                   	// #1
   1da0c:	cbz	x21, 1da38 <PyInit__decimal@@Base+0x3898>
   1da10:	sub	x0, x21, #0x1
   1da14:	tst	x0, x21
   1da18:	b.ne	1da90 <PyInit__decimal@@Base+0x38f0>  // b.any
   1da1c:	cmp	x21, #0x1, lsl #12
   1da20:	b.hi	1daa4 <PyInit__decimal@@Base+0x3904>  // b.pmore
   1da24:	adrp	x25, 1f000 <PyInit__decimal@@Base+0x4e60>
   1da28:	add	x25, x25, #0xbcc
   1da2c:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4e60>
   1da30:	add	x26, x26, #0xb64
   1da34:	b	1da48 <PyInit__decimal@@Base+0x38a8>
   1da38:	adrp	x25, 20000 <PyInit__decimal@@Base+0x5e60>
   1da3c:	add	x25, x25, #0xbfc
   1da40:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4e60>
   1da44:	add	x26, x26, #0xc34
   1da48:	mov	w2, w23
   1da4c:	mov	x1, x21
   1da50:	mov	x0, x20
   1da54:	blr	x26
   1da58:	cbz	w0, 1e254 <PyInit__decimal@@Base+0x40b4>
   1da5c:	mov	w2, w23
   1da60:	mov	x1, x21
   1da64:	mov	x0, x22
   1da68:	blr	x26
   1da6c:	cbz	w0, 1e254 <PyInit__decimal@@Base+0x40b4>
   1da70:	subs	x7, x21, #0x1
   1da74:	b.eq	1e274 <PyInit__decimal@@Base+0x40d4>  // b.none
   1da78:	mov	x2, #0x0                   	// #0
   1da7c:	add	x6, x20, #0x8
   1da80:	add	x9, x22, #0x8
   1da84:	and	x8, x19, #0x100000000
   1da88:	and	x10, x19, #0x400000000
   1da8c:	b	1db68 <PyInit__decimal@@Base+0x39c8>
   1da90:	adrp	x25, 20000 <PyInit__decimal@@Base+0x5e60>
   1da94:	add	x25, x25, #0xbfc
   1da98:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4e60>
   1da9c:	add	x26, x26, #0xc34
   1daa0:	b	1da48 <PyInit__decimal@@Base+0x38a8>
   1daa4:	adrp	x25, 3a000 <PyInit__decimal@@Base+0x1fe60>
   1daa8:	add	x25, x25, #0xc34
   1daac:	adrp	x26, 3a000 <PyInit__decimal@@Base+0x1fe60>
   1dab0:	add	x26, x26, #0xcc
   1dab4:	b	1da48 <PyInit__decimal@@Base+0x38a8>
   1dab8:	lsr	x11, x0, #32
   1dabc:	sub	x0, x12, x0
   1dac0:	cmp	x12, x0
   1dac4:	sbc	x11, x11, xzr
   1dac8:	lsl	x4, x4, #32
   1dacc:	adds	x0, x0, x4
   1dad0:	cinc	x11, x11, cs  // cs = hs, nlast
   1dad4:	lsr	x4, x11, #32
   1dad8:	sub	x1, x0, x11
   1dadc:	cmp	x0, x1
   1dae0:	sbc	x4, x4, xzr
   1dae4:	lsl	x11, x11, #32
   1dae8:	adds	x1, x1, x11
   1daec:	cinc	x4, x4, cs  // cs = hs, nlast
   1daf0:	cmp	x4, #0x0
   1daf4:	sub	x0, x1, x19
   1daf8:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dafc:	csel	x1, x0, x1, ls  // ls = plast
   1db00:	mul	x11, x5, x3
   1db04:	umulh	x3, x5, x3
   1db08:	lsr	x4, x3, #32
   1db0c:	sub	x0, x11, x3
   1db10:	cmp	x0, x11
   1db14:	cset	x5, hi  // hi = pmore
   1db18:	sub	x4, x4, x5
   1db1c:	lsl	x3, x3, #32
   1db20:	adds	x3, x0, x3
   1db24:	cinc	x4, x4, cs  // cs = hs, nlast
   1db28:	lsr	x5, x4, #32
   1db2c:	sub	x0, x3, x4
   1db30:	cmp	x3, x0
   1db34:	sbc	x5, x5, xzr
   1db38:	lsl	x4, x4, #32
   1db3c:	adds	x0, x0, x4
   1db40:	cinc	x5, x5, cs  // cs = hs, nlast
   1db44:	cmp	x5, #0x0
   1db48:	sub	x3, x0, x19
   1db4c:	ccmp	x19, x0, #0x0, eq  // eq = none
   1db50:	csel	x0, x3, x0, ls  // ls = plast
   1db54:	str	x1, [x20, x2, lsl #3]
   1db58:	str	x0, [x6, x2, lsl #3]
   1db5c:	add	x2, x2, #0x2
   1db60:	cmp	x7, x2
   1db64:	b.ls	1dd3c <PyInit__decimal@@Base+0x3b9c>  // b.plast
   1db68:	ldr	x5, [x6, x2, lsl #3]
   1db6c:	ldr	x3, [x9, x2, lsl #3]
   1db70:	ldr	x0, [x20, x2, lsl #3]
   1db74:	ldr	x1, [x22, x2, lsl #3]
   1db78:	mul	x12, x0, x1
   1db7c:	umulh	x0, x0, x1
   1db80:	mov	x4, x0
   1db84:	cbnz	x8, 1dab8 <PyInit__decimal@@Base+0x3918>
   1db88:	cbz	x10, 1dc64 <PyInit__decimal@@Base+0x3ac4>
   1db8c:	lsr	x1, x0, #30
   1db90:	sub	x0, x12, x0
   1db94:	cmp	x12, x0
   1db98:	sbc	x1, x1, xzr
   1db9c:	lsl	x4, x4, #34
   1dba0:	adds	x4, x0, x4
   1dba4:	cinc	x1, x1, cs  // cs = hs, nlast
   1dba8:	lsr	x0, x1, #30
   1dbac:	sub	x11, x4, x1
   1dbb0:	cmp	x4, x11
   1dbb4:	sbc	x0, x0, xzr
   1dbb8:	lsl	x1, x1, #34
   1dbbc:	adds	x1, x11, x1
   1dbc0:	cinc	x0, x0, cs  // cs = hs, nlast
   1dbc4:	lsr	x4, x0, #30
   1dbc8:	sub	x11, x1, x0
   1dbcc:	cmp	x1, x11
   1dbd0:	sbc	x4, x4, xzr
   1dbd4:	lsl	x0, x0, #34
   1dbd8:	adds	x1, x11, x0
   1dbdc:	cinc	x4, x4, cs  // cs = hs, nlast
   1dbe0:	cmp	x4, #0x0
   1dbe4:	sub	x0, x1, x19
   1dbe8:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dbec:	csel	x1, x0, x1, ls  // ls = plast
   1dbf0:	mul	x11, x5, x3
   1dbf4:	umulh	x3, x5, x3
   1dbf8:	lsr	x0, x3, #30
   1dbfc:	sub	x4, x11, x3
   1dc00:	cmp	x4, x11
   1dc04:	cset	x5, hi  // hi = pmore
   1dc08:	sub	x0, x0, x5
   1dc0c:	lsl	x5, x3, #34
   1dc10:	adds	x5, x4, x5
   1dc14:	cinc	x0, x0, cs  // cs = hs, nlast
   1dc18:	lsr	x3, x0, #30
   1dc1c:	sub	x4, x5, x0
   1dc20:	cmp	x5, x4
   1dc24:	sbc	x3, x3, xzr
   1dc28:	lsl	x0, x0, #34
   1dc2c:	adds	x4, x4, x0
   1dc30:	cinc	x3, x3, cs  // cs = hs, nlast
   1dc34:	lsr	x5, x3, #30
   1dc38:	sub	x0, x4, x3
   1dc3c:	cmp	x4, x0
   1dc40:	sbc	x5, x5, xzr
   1dc44:	lsl	x3, x3, #34
   1dc48:	adds	x0, x0, x3
   1dc4c:	cinc	x5, x5, cs  // cs = hs, nlast
   1dc50:	cmp	x5, #0x0
   1dc54:	sub	x3, x0, x19
   1dc58:	ccmp	x19, x0, #0x0, eq  // eq = none
   1dc5c:	csel	x0, x3, x0, ls  // ls = plast
   1dc60:	b	1db54 <PyInit__decimal@@Base+0x39b4>
   1dc64:	lsr	x1, x0, #24
   1dc68:	sub	x0, x12, x0
   1dc6c:	cmp	x12, x0
   1dc70:	sbc	x1, x1, xzr
   1dc74:	lsl	x4, x4, #40
   1dc78:	adds	x4, x0, x4
   1dc7c:	cinc	x1, x1, cs  // cs = hs, nlast
   1dc80:	lsr	x0, x1, #24
   1dc84:	sub	x11, x4, x1
   1dc88:	cmp	x4, x11
   1dc8c:	sbc	x0, x0, xzr
   1dc90:	lsl	x1, x1, #40
   1dc94:	adds	x1, x11, x1
   1dc98:	cinc	x0, x0, cs  // cs = hs, nlast
   1dc9c:	lsr	x4, x0, #24
   1dca0:	sub	x11, x1, x0
   1dca4:	cmp	x1, x11
   1dca8:	sbc	x4, x4, xzr
   1dcac:	lsl	x0, x0, #40
   1dcb0:	adds	x1, x11, x0
   1dcb4:	cinc	x4, x4, cs  // cs = hs, nlast
   1dcb8:	cmp	x4, #0x0
   1dcbc:	sub	x0, x1, x19
   1dcc0:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dcc4:	csel	x1, x0, x1, ls  // ls = plast
   1dcc8:	mul	x4, x5, x3
   1dccc:	umulh	x3, x5, x3
   1dcd0:	lsr	x0, x3, #24
   1dcd4:	sub	x5, x4, x3
   1dcd8:	cmp	x5, x4
   1dcdc:	cset	x4, hi  // hi = pmore
   1dce0:	sub	x0, x0, x4
   1dce4:	lsl	x3, x3, #40
   1dce8:	adds	x3, x5, x3
   1dcec:	cinc	x0, x0, cs  // cs = hs, nlast
   1dcf0:	lsr	x4, x0, #24
   1dcf4:	sub	x11, x3, x0
   1dcf8:	cmp	x3, x11
   1dcfc:	sbc	x4, x4, xzr
   1dd00:	lsl	x0, x0, #40
   1dd04:	adds	x11, x11, x0
   1dd08:	cinc	x4, x4, cs  // cs = hs, nlast
   1dd0c:	lsr	x3, x4, #24
   1dd10:	sub	x0, x11, x4
   1dd14:	cmp	x11, x0
   1dd18:	sbc	x3, x3, xzr
   1dd1c:	lsl	x4, x4, #40
   1dd20:	adds	x0, x0, x4
   1dd24:	cinc	x3, x3, cs  // cs = hs, nlast
   1dd28:	cmp	x3, #0x0
   1dd2c:	sub	x3, x0, x19
   1dd30:	ccmp	x19, x0, #0x0, eq  // eq = none
   1dd34:	csel	x0, x3, x0, ls  // ls = plast
   1dd38:	b	1db54 <PyInit__decimal@@Base+0x39b4>
   1dd3c:	mov	w2, w23
   1dd40:	mov	x1, x21
   1dd44:	mov	x0, x20
   1dd48:	blr	x25
   1dd4c:	cbz	w0, 1e254 <PyInit__decimal@@Base+0x40b4>
   1dd50:	subs	x21, x21, #0x3
   1dd54:	b.eq	1e26c <PyInit__decimal@@Base+0x40cc>  // b.none
   1dd58:	mov	x8, #0x0                   	// #0
   1dd5c:	mov	x0, x24
   1dd60:	and	x2, x19, #0x100000000
   1dd64:	and	x9, x19, #0x400000000
   1dd68:	b	1decc <PyInit__decimal@@Base+0x3d2c>
   1dd6c:	lsr	x10, x5, #32
   1dd70:	sub	x5, x11, x5
   1dd74:	cmp	x11, x5
   1dd78:	sbc	x10, x10, xzr
   1dd7c:	lsl	x6, x6, #32
   1dd80:	adds	x5, x5, x6
   1dd84:	cinc	x10, x10, cs  // cs = hs, nlast
   1dd88:	lsr	x6, x10, #32
   1dd8c:	sub	x11, x5, x10
   1dd90:	cmp	x5, x11
   1dd94:	sbc	x6, x6, xzr
   1dd98:	lsl	x10, x10, #32
   1dd9c:	adds	x5, x11, x10
   1dda0:	cinc	x6, x6, cs  // cs = hs, nlast
   1dda4:	cmp	x6, #0x0
   1dda8:	sub	x6, x5, x19
   1ddac:	ccmp	x19, x5, #0x0, eq  // eq = none
   1ddb0:	csel	x5, x6, x5, ls  // ls = plast
   1ddb4:	mul	x11, x4, x0
   1ddb8:	umulh	x4, x4, x0
   1ddbc:	lsr	x6, x4, #32
   1ddc0:	sub	x10, x11, x4
   1ddc4:	cmp	x10, x11
   1ddc8:	cset	x11, hi  // hi = pmore
   1ddcc:	sub	x6, x6, x11
   1ddd0:	lsl	x4, x4, #32
   1ddd4:	adds	x10, x10, x4
   1ddd8:	cinc	x6, x6, cs  // cs = hs, nlast
   1dddc:	lsr	x11, x6, #32
   1dde0:	sub	x4, x10, x6
   1dde4:	cmp	x10, x4
   1dde8:	sbc	x11, x11, xzr
   1ddec:	lsl	x6, x6, #32
   1ddf0:	adds	x4, x4, x6
   1ddf4:	cinc	x11, x11, cs  // cs = hs, nlast
   1ddf8:	cmp	x11, #0x0
   1ddfc:	sub	x6, x4, x19
   1de00:	ccmp	x19, x4, #0x0, eq  // eq = none
   1de04:	csel	x4, x6, x4, ls  // ls = plast
   1de08:	mul	x11, x3, x0
   1de0c:	umulh	x3, x3, x0
   1de10:	lsr	x6, x3, #32
   1de14:	sub	x10, x11, x3
   1de18:	cmp	x10, x11
   1de1c:	cset	x11, hi  // hi = pmore
   1de20:	sub	x6, x6, x11
   1de24:	lsl	x3, x3, #32
   1de28:	adds	x10, x10, x3
   1de2c:	cinc	x6, x6, cs  // cs = hs, nlast
   1de30:	lsr	x11, x6, #32
   1de34:	sub	x3, x10, x6
   1de38:	cmp	x10, x3
   1de3c:	sbc	x11, x11, xzr
   1de40:	lsl	x6, x6, #32
   1de44:	adds	x3, x3, x6
   1de48:	cinc	x11, x11, cs  // cs = hs, nlast
   1de4c:	cmp	x11, #0x0
   1de50:	sub	x6, x3, x19
   1de54:	ccmp	x19, x3, #0x0, eq  // eq = none
   1de58:	csel	x3, x6, x3, ls  // ls = plast
   1de5c:	mul	x11, x1, x0
   1de60:	umulh	x1, x1, x0
   1de64:	lsr	x6, x1, #32
   1de68:	sub	x10, x11, x1
   1de6c:	cmp	x11, x10
   1de70:	sbc	x6, x6, xzr
   1de74:	lsl	x1, x1, #32
   1de78:	adds	x10, x10, x1
   1de7c:	cinc	x6, x6, cs  // cs = hs, nlast
   1de80:	lsr	x11, x6, #32
   1de84:	sub	x1, x10, x6
   1de88:	cmp	x10, x1
   1de8c:	sbc	x11, x11, xzr
   1de90:	lsl	x6, x6, #32
   1de94:	adds	x1, x1, x6
   1de98:	cinc	x11, x11, cs  // cs = hs, nlast
   1de9c:	cmp	x11, #0x0
   1dea0:	sub	x6, x1, x19
   1dea4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dea8:	csel	x1, x6, x1, ls  // ls = plast
   1deac:	str	x5, [x7]
   1deb0:	str	x4, [x7, #8]
   1deb4:	str	x3, [x7, #16]
   1deb8:	str	x1, [x7, #24]
   1debc:	add	x8, x8, #0x4
   1dec0:	add	x20, x20, #0x20
   1dec4:	cmp	x8, x21
   1dec8:	b.cs	1e250 <PyInit__decimal@@Base+0x40b0>  // b.hs, b.nlast
   1decc:	mov	x7, x20
   1ded0:	ldr	x4, [x20, #8]
   1ded4:	ldr	x3, [x20, #16]
   1ded8:	ldr	x1, [x20, #24]
   1dedc:	ldr	x5, [x20]
   1dee0:	mul	x11, x5, x24
   1dee4:	umulh	x5, x5, x24
   1dee8:	mov	x6, x5
   1deec:	cbnz	x2, 1dd6c <PyInit__decimal@@Base+0x3bcc>
   1def0:	cbz	x9, 1e0a4 <PyInit__decimal@@Base+0x3f04>
   1def4:	lsr	x5, x5, #30
   1def8:	sub	x10, x11, x6
   1defc:	cmp	x11, x10
   1df00:	sbc	x5, x5, xzr
   1df04:	lsl	x6, x6, #34
   1df08:	adds	x6, x10, x6
   1df0c:	cinc	x5, x5, cs  // cs = hs, nlast
   1df10:	lsr	x10, x5, #30
   1df14:	sub	x11, x6, x5
   1df18:	cmp	x6, x11
   1df1c:	sbc	x10, x10, xzr
   1df20:	lsl	x5, x5, #34
   1df24:	adds	x5, x11, x5
   1df28:	cinc	x10, x10, cs  // cs = hs, nlast
   1df2c:	lsr	x6, x10, #30
   1df30:	sub	x11, x5, x10
   1df34:	cmp	x5, x11
   1df38:	sbc	x6, x6, xzr
   1df3c:	lsl	x10, x10, #34
   1df40:	adds	x5, x11, x10
   1df44:	cinc	x6, x6, cs  // cs = hs, nlast
   1df48:	cmp	x6, #0x0
   1df4c:	sub	x6, x5, x19
   1df50:	ccmp	x19, x5, #0x0, eq  // eq = none
   1df54:	csel	x5, x6, x5, ls  // ls = plast
   1df58:	mul	x11, x4, x0
   1df5c:	umulh	x4, x4, x0
   1df60:	lsr	x10, x4, #30
   1df64:	sub	x6, x11, x4
   1df68:	cmp	x6, x11
   1df6c:	cset	x11, hi  // hi = pmore
   1df70:	sub	x10, x10, x11
   1df74:	lsl	x4, x4, #34
   1df78:	adds	x11, x6, x4
   1df7c:	cinc	x10, x10, cs  // cs = hs, nlast
   1df80:	lsr	x6, x10, #30
   1df84:	sub	x4, x11, x10
   1df88:	cmp	x11, x4
   1df8c:	sbc	x6, x6, xzr
   1df90:	lsl	x10, x10, #34
   1df94:	adds	x10, x4, x10
   1df98:	cinc	x6, x6, cs  // cs = hs, nlast
   1df9c:	lsr	x11, x6, #30
   1dfa0:	sub	x4, x10, x6
   1dfa4:	cmp	x10, x4
   1dfa8:	sbc	x11, x11, xzr
   1dfac:	lsl	x6, x6, #34
   1dfb0:	adds	x4, x4, x6
   1dfb4:	cinc	x11, x11, cs  // cs = hs, nlast
   1dfb8:	cmp	x11, #0x0
   1dfbc:	sub	x6, x4, x19
   1dfc0:	ccmp	x19, x4, #0x0, eq  // eq = none
   1dfc4:	csel	x4, x6, x4, ls  // ls = plast
   1dfc8:	mul	x11, x3, x0
   1dfcc:	umulh	x3, x3, x0
   1dfd0:	lsr	x10, x3, #30
   1dfd4:	sub	x6, x11, x3
   1dfd8:	cmp	x11, x6
   1dfdc:	sbc	x10, x10, xzr
   1dfe0:	lsl	x3, x3, #34
   1dfe4:	adds	x11, x6, x3
   1dfe8:	cinc	x10, x10, cs  // cs = hs, nlast
   1dfec:	lsr	x6, x10, #30
   1dff0:	sub	x3, x11, x10
   1dff4:	cmp	x11, x3
   1dff8:	sbc	x6, x6, xzr
   1dffc:	lsl	x10, x10, #34
   1e000:	adds	x10, x3, x10
   1e004:	cinc	x6, x6, cs  // cs = hs, nlast
   1e008:	lsr	x11, x6, #30
   1e00c:	sub	x3, x10, x6
   1e010:	cmp	x10, x3
   1e014:	sbc	x11, x11, xzr
   1e018:	lsl	x6, x6, #34
   1e01c:	adds	x3, x3, x6
   1e020:	cinc	x11, x11, cs  // cs = hs, nlast
   1e024:	cmp	x11, #0x0
   1e028:	sub	x6, x3, x19
   1e02c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e030:	csel	x3, x6, x3, ls  // ls = plast
   1e034:	mul	x11, x1, x0
   1e038:	umulh	x1, x1, x0
   1e03c:	lsr	x10, x1, #30
   1e040:	sub	x6, x11, x1
   1e044:	cmp	x11, x6
   1e048:	sbc	x10, x10, xzr
   1e04c:	lsl	x1, x1, #34
   1e050:	adds	x11, x6, x1
   1e054:	cinc	x10, x10, cs  // cs = hs, nlast
   1e058:	lsr	x6, x10, #30
   1e05c:	sub	x1, x11, x10
   1e060:	cmp	x11, x1
   1e064:	sbc	x6, x6, xzr
   1e068:	lsl	x10, x10, #34
   1e06c:	adds	x10, x1, x10
   1e070:	cinc	x6, x6, cs  // cs = hs, nlast
   1e074:	lsr	x11, x6, #30
   1e078:	sub	x1, x10, x6
   1e07c:	cmp	x10, x1
   1e080:	sbc	x11, x11, xzr
   1e084:	lsl	x6, x6, #34
   1e088:	adds	x1, x1, x6
   1e08c:	cinc	x11, x11, cs  // cs = hs, nlast
   1e090:	cmp	x11, #0x0
   1e094:	sub	x6, x1, x19
   1e098:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e09c:	csel	x1, x6, x1, ls  // ls = plast
   1e0a0:	b	1deac <PyInit__decimal@@Base+0x3d0c>
   1e0a4:	lsr	x5, x5, #24
   1e0a8:	sub	x10, x11, x6
   1e0ac:	cmp	x11, x10
   1e0b0:	sbc	x5, x5, xzr
   1e0b4:	lsl	x6, x6, #40
   1e0b8:	adds	x6, x10, x6
   1e0bc:	cinc	x5, x5, cs  // cs = hs, nlast
   1e0c0:	lsr	x10, x5, #24
   1e0c4:	sub	x11, x6, x5
   1e0c8:	cmp	x6, x11
   1e0cc:	sbc	x10, x10, xzr
   1e0d0:	lsl	x5, x5, #40
   1e0d4:	adds	x5, x11, x5
   1e0d8:	cinc	x10, x10, cs  // cs = hs, nlast
   1e0dc:	lsr	x6, x10, #24
   1e0e0:	sub	x11, x5, x10
   1e0e4:	cmp	x5, x11
   1e0e8:	sbc	x6, x6, xzr
   1e0ec:	lsl	x10, x10, #40
   1e0f0:	adds	x5, x11, x10
   1e0f4:	cinc	x6, x6, cs  // cs = hs, nlast
   1e0f8:	cmp	x6, #0x0
   1e0fc:	sub	x6, x5, x19
   1e100:	ccmp	x19, x5, #0x0, eq  // eq = none
   1e104:	csel	x5, x6, x5, ls  // ls = plast
   1e108:	mul	x11, x4, x0
   1e10c:	umulh	x4, x4, x0
   1e110:	lsr	x10, x4, #24
   1e114:	sub	x6, x11, x4
   1e118:	cmp	x11, x6
   1e11c:	sbc	x10, x10, xzr
   1e120:	lsl	x4, x4, #40
   1e124:	adds	x4, x6, x4
   1e128:	cinc	x10, x10, cs  // cs = hs, nlast
   1e12c:	lsr	x6, x10, #24
   1e130:	sub	x11, x4, x10
   1e134:	cmp	x4, x11
   1e138:	sbc	x6, x6, xzr
   1e13c:	lsl	x10, x10, #40
   1e140:	adds	x10, x11, x10
   1e144:	cinc	x6, x6, cs  // cs = hs, nlast
   1e148:	lsr	x11, x6, #24
   1e14c:	sub	x4, x10, x6
   1e150:	cmp	x10, x4
   1e154:	sbc	x11, x11, xzr
   1e158:	lsl	x6, x6, #40
   1e15c:	adds	x4, x4, x6
   1e160:	cinc	x11, x11, cs  // cs = hs, nlast
   1e164:	cmp	x11, #0x0
   1e168:	sub	x6, x4, x19
   1e16c:	ccmp	x19, x4, #0x0, eq  // eq = none
   1e170:	csel	x4, x6, x4, ls  // ls = plast
   1e174:	mul	x11, x3, x0
   1e178:	umulh	x3, x3, x0
   1e17c:	lsr	x10, x3, #24
   1e180:	sub	x6, x11, x3
   1e184:	cmp	x11, x6
   1e188:	sbc	x10, x10, xzr
   1e18c:	lsl	x3, x3, #40
   1e190:	adds	x3, x6, x3
   1e194:	cinc	x10, x10, cs  // cs = hs, nlast
   1e198:	lsr	x6, x10, #24
   1e19c:	sub	x11, x3, x10
   1e1a0:	cmp	x3, x11
   1e1a4:	sbc	x6, x6, xzr
   1e1a8:	lsl	x10, x10, #40
   1e1ac:	adds	x10, x11, x10
   1e1b0:	cinc	x6, x6, cs  // cs = hs, nlast
   1e1b4:	lsr	x11, x6, #24
   1e1b8:	sub	x3, x10, x6
   1e1bc:	cmp	x10, x3
   1e1c0:	sbc	x11, x11, xzr
   1e1c4:	lsl	x6, x6, #40
   1e1c8:	adds	x3, x3, x6
   1e1cc:	cinc	x11, x11, cs  // cs = hs, nlast
   1e1d0:	cmp	x11, #0x0
   1e1d4:	sub	x6, x3, x19
   1e1d8:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e1dc:	csel	x3, x6, x3, ls  // ls = plast
   1e1e0:	mul	x11, x1, x0
   1e1e4:	umulh	x1, x1, x0
   1e1e8:	lsr	x10, x1, #24
   1e1ec:	sub	x6, x11, x1
   1e1f0:	cmp	x11, x6
   1e1f4:	sbc	x10, x10, xzr
   1e1f8:	lsl	x1, x1, #40
   1e1fc:	adds	x1, x6, x1
   1e200:	cinc	x10, x10, cs  // cs = hs, nlast
   1e204:	lsr	x6, x10, #24
   1e208:	sub	x11, x1, x10
   1e20c:	cmp	x1, x11
   1e210:	sbc	x6, x6, xzr
   1e214:	lsl	x10, x10, #40
   1e218:	adds	x10, x11, x10
   1e21c:	cinc	x6, x6, cs  // cs = hs, nlast
   1e220:	lsr	x11, x6, #24
   1e224:	sub	x1, x10, x6
   1e228:	cmp	x10, x1
   1e22c:	sbc	x11, x11, xzr
   1e230:	lsl	x6, x6, #40
   1e234:	adds	x1, x1, x6
   1e238:	cinc	x11, x11, cs  // cs = hs, nlast
   1e23c:	cmp	x11, #0x0
   1e240:	sub	x6, x1, x19
   1e244:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e248:	csel	x1, x6, x1, ls  // ls = plast
   1e24c:	b	1deac <PyInit__decimal@@Base+0x3d0c>
   1e250:	mov	w0, #0x1                   	// #1
   1e254:	ldp	x19, x20, [sp, #16]
   1e258:	ldp	x21, x22, [sp, #32]
   1e25c:	ldp	x23, x24, [sp, #48]
   1e260:	ldp	x25, x26, [sp, #64]
   1e264:	ldp	x29, x30, [sp], #80
   1e268:	ret
   1e26c:	mov	w0, #0x1                   	// #1
   1e270:	b	1e254 <PyInit__decimal@@Base+0x40b4>
   1e274:	mov	w2, w23
   1e278:	mov	x1, #0x1                   	// #1
   1e27c:	mov	x0, x20
   1e280:	blr	x25
   1e284:	mov	x21, #0xfffffffffffffffe    	// #-2
   1e288:	cbnz	w0, 1dd58 <PyInit__decimal@@Base+0x3bb8>
   1e28c:	b	1e254 <PyInit__decimal@@Base+0x40b4>
   1e290:	stp	x29, x30, [sp, #-80]!
   1e294:	mov	x29, sp
   1e298:	stp	x19, x20, [sp, #16]
   1e29c:	stp	x21, x22, [sp, #32]
   1e2a0:	stp	x23, x24, [sp, #48]
   1e2a4:	str	x25, [sp, #64]
   1e2a8:	mov	x20, x0
   1e2ac:	mov	x21, x1
   1e2b0:	mov	w22, w2
   1e2b4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1e2b8:	add	x0, x0, #0x90
   1e2bc:	ldr	x19, [x0, w22, sxtw #3]
   1e2c0:	subs	x5, x19, #0x2
   1e2c4:	b.eq	1e55c <PyInit__decimal@@Base+0x43bc>  // b.none
   1e2c8:	mov	x3, x1
   1e2cc:	mov	x23, #0x1                   	// #1
   1e2d0:	and	x7, x19, #0x400000000
   1e2d4:	and	x6, x19, #0x100000000
   1e2d8:	b	1e3f8 <PyInit__decimal@@Base+0x4258>
   1e2dc:	lsr	x2, x4, #32
   1e2e0:	sub	x4, x8, x4
   1e2e4:	cmp	x8, x4
   1e2e8:	sbc	x2, x2, xzr
   1e2ec:	lsl	x0, x0, #32
   1e2f0:	adds	x4, x4, x0
   1e2f4:	cinc	x2, x2, cs  // cs = hs, nlast
   1e2f8:	lsr	x0, x2, #32
   1e2fc:	sub	x23, x4, x2
   1e300:	cmp	x4, x23
   1e304:	sbc	x0, x0, xzr
   1e308:	lsl	x2, x2, #32
   1e30c:	adds	x23, x23, x2
   1e310:	cinc	x0, x0, cs  // cs = hs, nlast
   1e314:	cmp	x0, #0x0
   1e318:	sub	x0, x23, x19
   1e31c:	ccmp	x19, x23, #0x0, eq  // eq = none
   1e320:	csel	x23, x0, x23, ls  // ls = plast
   1e324:	umulh	x0, x3, x3
   1e328:	mul	x3, x3, x3
   1e32c:	b	1e3a4 <PyInit__decimal@@Base+0x4204>
   1e330:	lsr	x3, x4, #24
   1e334:	sub	x2, x8, x4
   1e338:	cmp	x8, x2
   1e33c:	sbc	x3, x3, xzr
   1e340:	lsl	x0, x4, #40
   1e344:	adds	x0, x2, x0
   1e348:	cinc	x3, x3, cs  // cs = hs, nlast
   1e34c:	lsr	x2, x3, #24
   1e350:	sub	x4, x0, x3
   1e354:	cmp	x0, x4
   1e358:	sbc	x2, x2, xzr
   1e35c:	lsl	x3, x3, #40
   1e360:	adds	x3, x4, x3
   1e364:	cinc	x2, x2, cs  // cs = hs, nlast
   1e368:	lsr	x0, x2, #24
   1e36c:	sub	x4, x3, x2
   1e370:	cmp	x3, x4
   1e374:	sbc	x0, x0, xzr
   1e378:	lsl	x2, x2, #40
   1e37c:	adds	x23, x4, x2
   1e380:	cinc	x0, x0, cs  // cs = hs, nlast
   1e384:	cmp	x0, #0x0
   1e388:	sub	x0, x23, x19
   1e38c:	ccmp	x19, x23, #0x0, eq  // eq = none
   1e390:	csel	x23, x0, x23, ls  // ls = plast
   1e394:	b	1e478 <PyInit__decimal@@Base+0x42d8>
   1e398:	umulh	x0, x3, x3
   1e39c:	mul	x3, x3, x3
   1e3a0:	cbz	x6, 1e480 <PyInit__decimal@@Base+0x42e0>
   1e3a4:	lsr	x1, x0, #32
   1e3a8:	sub	x2, x3, x0
   1e3ac:	cmp	x2, x3
   1e3b0:	cset	x3, hi  // hi = pmore
   1e3b4:	sub	x1, x1, x3
   1e3b8:	lsl	x0, x0, #32
   1e3bc:	adds	x0, x2, x0
   1e3c0:	cinc	x1, x1, cs  // cs = hs, nlast
   1e3c4:	lsr	x2, x1, #32
   1e3c8:	sub	x3, x0, x1
   1e3cc:	cmp	x0, x3
   1e3d0:	sbc	x2, x2, xzr
   1e3d4:	lsl	x1, x1, #32
   1e3d8:	adds	x3, x3, x1
   1e3dc:	cinc	x2, x2, cs  // cs = hs, nlast
   1e3e0:	cmp	x2, #0x0
   1e3e4:	sub	x0, x3, x19
   1e3e8:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e3ec:	csel	x3, x0, x3, ls  // ls = plast
   1e3f0:	lsr	x5, x5, #1
   1e3f4:	cbz	x5, 1e560 <PyInit__decimal@@Base+0x43c0>
   1e3f8:	tbz	w5, #0, 1e398 <PyInit__decimal@@Base+0x41f8>
   1e3fc:	mov	x1, x3
   1e400:	mul	x8, x23, x3
   1e404:	umulh	x4, x23, x3
   1e408:	mov	x0, x4
   1e40c:	cbnz	x6, 1e2dc <PyInit__decimal@@Base+0x413c>
   1e410:	cbz	x7, 1e330 <PyInit__decimal@@Base+0x4190>
   1e414:	lsr	x3, x4, #30
   1e418:	sub	x2, x8, x4
   1e41c:	cmp	x8, x2
   1e420:	sbc	x3, x3, xzr
   1e424:	lsl	x0, x4, #34
   1e428:	adds	x0, x2, x0
   1e42c:	cinc	x3, x3, cs  // cs = hs, nlast
   1e430:	lsr	x2, x3, #30
   1e434:	sub	x4, x0, x3
   1e438:	cmp	x0, x4
   1e43c:	sbc	x2, x2, xzr
   1e440:	lsl	x3, x3, #34
   1e444:	adds	x3, x4, x3
   1e448:	cinc	x2, x2, cs  // cs = hs, nlast
   1e44c:	lsr	x0, x2, #30
   1e450:	sub	x4, x3, x2
   1e454:	cmp	x3, x4
   1e458:	sbc	x0, x0, xzr
   1e45c:	lsl	x2, x2, #34
   1e460:	adds	x23, x4, x2
   1e464:	cinc	x0, x0, cs  // cs = hs, nlast
   1e468:	cmp	x0, #0x0
   1e46c:	sub	x0, x23, x19
   1e470:	ccmp	x19, x23, #0x0, eq  // eq = none
   1e474:	csel	x23, x0, x23, ls  // ls = plast
   1e478:	umulh	x0, x1, x1
   1e47c:	mul	x3, x1, x1
   1e480:	cbz	x7, 1e4f0 <PyInit__decimal@@Base+0x4350>
   1e484:	lsr	x2, x0, #30
   1e488:	sub	x1, x3, x0
   1e48c:	cmp	x1, x3
   1e490:	cset	x3, hi  // hi = pmore
   1e494:	sub	x2, x2, x3
   1e498:	lsl	x0, x0, #34
   1e49c:	adds	x0, x1, x0
   1e4a0:	cinc	x2, x2, cs  // cs = hs, nlast
   1e4a4:	lsr	x1, x2, #30
   1e4a8:	sub	x3, x0, x2
   1e4ac:	cmp	x0, x3
   1e4b0:	sbc	x1, x1, xzr
   1e4b4:	lsl	x2, x2, #34
   1e4b8:	adds	x2, x3, x2
   1e4bc:	cinc	x1, x1, cs  // cs = hs, nlast
   1e4c0:	lsr	x0, x1, #30
   1e4c4:	sub	x3, x2, x1
   1e4c8:	cmp	x2, x3
   1e4cc:	sbc	x0, x0, xzr
   1e4d0:	lsl	x1, x1, #34
   1e4d4:	adds	x3, x3, x1
   1e4d8:	cinc	x0, x0, cs  // cs = hs, nlast
   1e4dc:	cmp	x0, #0x0
   1e4e0:	sub	x0, x3, x19
   1e4e4:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e4e8:	csel	x3, x0, x3, ls  // ls = plast
   1e4ec:	b	1e3f0 <PyInit__decimal@@Base+0x4250>
   1e4f0:	lsr	x2, x0, #24
   1e4f4:	sub	x1, x3, x0
   1e4f8:	cmp	x1, x3
   1e4fc:	cset	x3, hi  // hi = pmore
   1e500:	sub	x2, x2, x3
   1e504:	lsl	x0, x0, #40
   1e508:	adds	x0, x1, x0
   1e50c:	cinc	x2, x2, cs  // cs = hs, nlast
   1e510:	lsr	x1, x2, #24
   1e514:	sub	x3, x0, x2
   1e518:	cmp	x0, x3
   1e51c:	sbc	x1, x1, xzr
   1e520:	lsl	x2, x2, #40
   1e524:	adds	x2, x3, x2
   1e528:	cinc	x1, x1, cs  // cs = hs, nlast
   1e52c:	lsr	x0, x1, #24
   1e530:	sub	x3, x2, x1
   1e534:	cmp	x2, x3
   1e538:	sbc	x0, x0, xzr
   1e53c:	lsl	x1, x1, #40
   1e540:	adds	x3, x3, x1
   1e544:	cinc	x0, x0, cs  // cs = hs, nlast
   1e548:	cmp	x0, #0x0
   1e54c:	sub	x0, x3, x19
   1e550:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e554:	csel	x3, x0, x3, ls  // ls = plast
   1e558:	b	1e3f0 <PyInit__decimal@@Base+0x4250>
   1e55c:	mov	x23, #0x1                   	// #1
   1e560:	cbz	x21, 1ed94 <PyInit__decimal@@Base+0x4bf4>
   1e564:	sub	x24, x21, #0x1
   1e568:	tst	x21, x24
   1e56c:	b.ne	1e58c <PyInit__decimal@@Base+0x43ec>  // b.any
   1e570:	cmp	x21, #0x1, lsl #12
   1e574:	b.hi	1e5d0 <PyInit__decimal@@Base+0x4430>  // b.pmore
   1e578:	adrp	x25, 1f000 <PyInit__decimal@@Base+0x4e60>
   1e57c:	add	x25, x25, #0xbcc
   1e580:	adrp	x3, 1f000 <PyInit__decimal@@Base+0x4e60>
   1e584:	add	x3, x3, #0xb64
   1e588:	b	1e59c <PyInit__decimal@@Base+0x43fc>
   1e58c:	adrp	x25, 20000 <PyInit__decimal@@Base+0x5e60>
   1e590:	add	x25, x25, #0xbfc
   1e594:	adrp	x3, 1f000 <PyInit__decimal@@Base+0x4e60>
   1e598:	add	x3, x3, #0xc34
   1e59c:	mov	w2, w22
   1e5a0:	mov	x1, x21
   1e5a4:	mov	x0, x20
   1e5a8:	blr	x3
   1e5ac:	cbz	w0, 1ed74 <PyInit__decimal@@Base+0x4bd4>
   1e5b0:	cbnz	x24, 1edb4 <PyInit__decimal@@Base+0x4c14>
   1e5b4:	mov	w2, w22
   1e5b8:	mov	x1, #0x1                   	// #1
   1e5bc:	mov	x0, x20
   1e5c0:	blr	x25
   1e5c4:	mov	x21, #0xfffffffffffffffe    	// #-2
   1e5c8:	cbnz	w0, 1e87c <PyInit__decimal@@Base+0x46dc>
   1e5cc:	b	1ed74 <PyInit__decimal@@Base+0x4bd4>
   1e5d0:	adrp	x25, 3a000 <PyInit__decimal@@Base+0x1fe60>
   1e5d4:	add	x25, x25, #0xc34
   1e5d8:	adrp	x3, 3a000 <PyInit__decimal@@Base+0x1fe60>
   1e5dc:	add	x3, x3, #0xcc
   1e5e0:	b	1e59c <PyInit__decimal@@Base+0x43fc>
   1e5e4:	lsr	x4, x1, #32
   1e5e8:	sub	x1, x8, x1
   1e5ec:	cmp	x8, x1
   1e5f0:	sbc	x4, x4, xzr
   1e5f4:	lsl	x3, x3, #32
   1e5f8:	adds	x1, x1, x3
   1e5fc:	cinc	x4, x4, cs  // cs = hs, nlast
   1e600:	lsr	x3, x4, #32
   1e604:	sub	x8, x1, x4
   1e608:	cmp	x1, x8
   1e60c:	sbc	x3, x3, xzr
   1e610:	lsl	x4, x4, #32
   1e614:	adds	x1, x8, x4
   1e618:	cinc	x3, x3, cs  // cs = hs, nlast
   1e61c:	cmp	x3, #0x0
   1e620:	sub	x3, x1, x19
   1e624:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e628:	csel	x1, x3, x1, ls  // ls = plast
   1e62c:	mul	x8, x0, x0
   1e630:	umulh	x0, x0, x0
   1e634:	lsr	x3, x0, #32
   1e638:	sub	x4, x8, x0
   1e63c:	cmp	x4, x8
   1e640:	cset	x8, hi  // hi = pmore
   1e644:	sub	x3, x3, x8
   1e648:	lsl	x0, x0, #32
   1e64c:	adds	x4, x4, x0
   1e650:	cinc	x3, x3, cs  // cs = hs, nlast
   1e654:	lsr	x8, x3, #32
   1e658:	sub	x0, x4, x3
   1e65c:	cmp	x4, x0
   1e660:	sbc	x8, x8, xzr
   1e664:	lsl	x3, x3, #32
   1e668:	adds	x0, x0, x3
   1e66c:	cinc	x8, x8, cs  // cs = hs, nlast
   1e670:	cmp	x8, #0x0
   1e674:	sub	x3, x0, x19
   1e678:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e67c:	csel	x0, x3, x0, ls  // ls = plast
   1e680:	str	x1, [x20, x2, lsl #3]
   1e684:	str	x0, [x5, x2, lsl #3]
   1e688:	add	x2, x2, #0x2
   1e68c:	cmp	x2, x24
   1e690:	b.cs	1e860 <PyInit__decimal@@Base+0x46c0>  // b.hs, b.nlast
   1e694:	ldr	x0, [x5, x2, lsl #3]
   1e698:	ldr	x1, [x20, x2, lsl #3]
   1e69c:	mul	x8, x1, x1
   1e6a0:	umulh	x1, x1, x1
   1e6a4:	mov	x3, x1
   1e6a8:	cbnz	x6, 1e5e4 <PyInit__decimal@@Base+0x4444>
   1e6ac:	cbz	x7, 1e788 <PyInit__decimal@@Base+0x45e8>
   1e6b0:	lsr	x1, x1, #30
   1e6b4:	sub	x4, x8, x3
   1e6b8:	cmp	x8, x4
   1e6bc:	sbc	x1, x1, xzr
   1e6c0:	lsl	x3, x3, #34
   1e6c4:	adds	x3, x4, x3
   1e6c8:	cinc	x1, x1, cs  // cs = hs, nlast
   1e6cc:	lsr	x4, x1, #30
   1e6d0:	sub	x8, x3, x1
   1e6d4:	cmp	x3, x8
   1e6d8:	sbc	x4, x4, xzr
   1e6dc:	lsl	x1, x1, #34
   1e6e0:	adds	x1, x8, x1
   1e6e4:	cinc	x4, x4, cs  // cs = hs, nlast
   1e6e8:	lsr	x3, x4, #30
   1e6ec:	sub	x8, x1, x4
   1e6f0:	cmp	x1, x8
   1e6f4:	sbc	x3, x3, xzr
   1e6f8:	lsl	x4, x4, #34
   1e6fc:	adds	x1, x8, x4
   1e700:	cinc	x3, x3, cs  // cs = hs, nlast
   1e704:	cmp	x3, #0x0
   1e708:	sub	x3, x1, x19
   1e70c:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e710:	csel	x1, x3, x1, ls  // ls = plast
   1e714:	mul	x8, x0, x0
   1e718:	umulh	x0, x0, x0
   1e71c:	lsr	x4, x0, #30
   1e720:	sub	x3, x8, x0
   1e724:	cmp	x3, x8
   1e728:	cset	x8, hi  // hi = pmore
   1e72c:	sub	x4, x4, x8
   1e730:	lsl	x0, x0, #34
   1e734:	adds	x8, x3, x0
   1e738:	cinc	x4, x4, cs  // cs = hs, nlast
   1e73c:	lsr	x3, x4, #30
   1e740:	sub	x0, x8, x4
   1e744:	cmp	x8, x0
   1e748:	sbc	x3, x3, xzr
   1e74c:	lsl	x4, x4, #34
   1e750:	adds	x4, x0, x4
   1e754:	cinc	x3, x3, cs  // cs = hs, nlast
   1e758:	lsr	x8, x3, #30
   1e75c:	sub	x0, x4, x3
   1e760:	cmp	x4, x0
   1e764:	sbc	x8, x8, xzr
   1e768:	lsl	x3, x3, #34
   1e76c:	adds	x0, x0, x3
   1e770:	cinc	x8, x8, cs  // cs = hs, nlast
   1e774:	cmp	x8, #0x0
   1e778:	sub	x3, x0, x19
   1e77c:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e780:	csel	x0, x3, x0, ls  // ls = plast
   1e784:	b	1e680 <PyInit__decimal@@Base+0x44e0>
   1e788:	lsr	x1, x1, #24
   1e78c:	sub	x4, x8, x3
   1e790:	cmp	x8, x4
   1e794:	sbc	x1, x1, xzr
   1e798:	lsl	x3, x3, #40
   1e79c:	adds	x3, x4, x3
   1e7a0:	cinc	x1, x1, cs  // cs = hs, nlast
   1e7a4:	lsr	x4, x1, #24
   1e7a8:	sub	x8, x3, x1
   1e7ac:	cmp	x3, x8
   1e7b0:	sbc	x4, x4, xzr
   1e7b4:	lsl	x1, x1, #40
   1e7b8:	adds	x1, x8, x1
   1e7bc:	cinc	x4, x4, cs  // cs = hs, nlast
   1e7c0:	lsr	x3, x4, #24
   1e7c4:	sub	x8, x1, x4
   1e7c8:	cmp	x1, x8
   1e7cc:	sbc	x3, x3, xzr
   1e7d0:	lsl	x4, x4, #40
   1e7d4:	adds	x1, x8, x4
   1e7d8:	cinc	x3, x3, cs  // cs = hs, nlast
   1e7dc:	cmp	x3, #0x0
   1e7e0:	sub	x3, x1, x19
   1e7e4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e7e8:	csel	x1, x3, x1, ls  // ls = plast
   1e7ec:	mul	x8, x0, x0
   1e7f0:	umulh	x0, x0, x0
   1e7f4:	lsr	x4, x0, #24
   1e7f8:	sub	x3, x8, x0
   1e7fc:	cmp	x3, x8
   1e800:	cset	x8, hi  // hi = pmore
   1e804:	sub	x4, x4, x8
   1e808:	lsl	x0, x0, #40
   1e80c:	adds	x0, x3, x0
   1e810:	cinc	x4, x4, cs  // cs = hs, nlast
   1e814:	lsr	x3, x4, #24
   1e818:	sub	x8, x0, x4
   1e81c:	cmp	x0, x8
   1e820:	sbc	x3, x3, xzr
   1e824:	lsl	x4, x4, #40
   1e828:	adds	x4, x8, x4
   1e82c:	cinc	x3, x3, cs  // cs = hs, nlast
   1e830:	lsr	x8, x3, #24
   1e834:	sub	x0, x4, x3
   1e838:	cmp	x4, x0
   1e83c:	sbc	x8, x8, xzr
   1e840:	lsl	x3, x3, #40
   1e844:	adds	x0, x0, x3
   1e848:	cinc	x8, x8, cs  // cs = hs, nlast
   1e84c:	cmp	x8, #0x0
   1e850:	sub	x3, x0, x19
   1e854:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e858:	csel	x0, x3, x0, ls  // ls = plast
   1e85c:	b	1e680 <PyInit__decimal@@Base+0x44e0>
   1e860:	mov	w2, w22
   1e864:	mov	x1, x21
   1e868:	mov	x0, x20
   1e86c:	blr	x25
   1e870:	cbz	w0, 1ed74 <PyInit__decimal@@Base+0x4bd4>
   1e874:	subs	x21, x21, #0x3
   1e878:	b.eq	1ed8c <PyInit__decimal@@Base+0x4bec>  // b.none
   1e87c:	mov	x8, #0x0                   	// #0
   1e880:	mov	x0, x23
   1e884:	and	x1, x19, #0x100000000
   1e888:	and	x9, x19, #0x400000000
   1e88c:	b	1e9ec <PyInit__decimal@@Base+0x484c>
   1e890:	lsr	x10, x5, #32
   1e894:	sub	x5, x11, x5
   1e898:	cmp	x11, x5
   1e89c:	sbc	x10, x10, xzr
   1e8a0:	lsl	x6, x6, #32
   1e8a4:	adds	x5, x5, x6
   1e8a8:	cinc	x10, x10, cs  // cs = hs, nlast
   1e8ac:	lsr	x6, x10, #32
   1e8b0:	sub	x11, x5, x10
   1e8b4:	cmp	x5, x11
   1e8b8:	sbc	x6, x6, xzr
   1e8bc:	lsl	x10, x10, #32
   1e8c0:	adds	x5, x11, x10
   1e8c4:	cinc	x6, x6, cs  // cs = hs, nlast
   1e8c8:	cmp	x6, #0x0
   1e8cc:	sub	x6, x5, x19
   1e8d0:	ccmp	x19, x5, #0x0, eq  // eq = none
   1e8d4:	csel	x5, x6, x5, ls  // ls = plast
   1e8d8:	mul	x11, x4, x0
   1e8dc:	umulh	x4, x4, x0
   1e8e0:	lsr	x6, x4, #32
   1e8e4:	sub	x10, x11, x4
   1e8e8:	cmp	x10, x11
   1e8ec:	cset	x11, hi  // hi = pmore
   1e8f0:	sub	x6, x6, x11
   1e8f4:	lsl	x4, x4, #32
   1e8f8:	adds	x10, x10, x4
   1e8fc:	cinc	x6, x6, cs  // cs = hs, nlast
   1e900:	lsr	x11, x6, #32
   1e904:	sub	x4, x10, x6
   1e908:	cmp	x10, x4
   1e90c:	sbc	x11, x11, xzr
   1e910:	lsl	x6, x6, #32
   1e914:	adds	x4, x4, x6
   1e918:	cinc	x11, x11, cs  // cs = hs, nlast
   1e91c:	cmp	x11, #0x0
   1e920:	sub	x6, x4, x19
   1e924:	ccmp	x19, x4, #0x0, eq  // eq = none
   1e928:	csel	x4, x6, x4, ls  // ls = plast
   1e92c:	mul	x11, x3, x0
   1e930:	umulh	x3, x3, x0
   1e934:	lsr	x6, x3, #32
   1e938:	sub	x10, x11, x3
   1e93c:	cmp	x11, x10
   1e940:	sbc	x6, x6, xzr
   1e944:	lsl	x3, x3, #32
   1e948:	adds	x10, x10, x3
   1e94c:	cinc	x6, x6, cs  // cs = hs, nlast
   1e950:	lsr	x11, x6, #32
   1e954:	sub	x3, x10, x6
   1e958:	cmp	x10, x3
   1e95c:	sbc	x11, x11, xzr
   1e960:	lsl	x6, x6, #32
   1e964:	adds	x3, x3, x6
   1e968:	cinc	x11, x11, cs  // cs = hs, nlast
   1e96c:	cmp	x11, #0x0
   1e970:	sub	x6, x3, x19
   1e974:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e978:	csel	x3, x6, x3, ls  // ls = plast
   1e97c:	mul	x11, x2, x0
   1e980:	umulh	x2, x2, x0
   1e984:	lsr	x6, x2, #32
   1e988:	sub	x10, x11, x2
   1e98c:	cmp	x11, x10
   1e990:	sbc	x6, x6, xzr
   1e994:	lsl	x2, x2, #32
   1e998:	adds	x10, x10, x2
   1e99c:	cinc	x6, x6, cs  // cs = hs, nlast
   1e9a0:	lsr	x11, x6, #32
   1e9a4:	sub	x2, x10, x6
   1e9a8:	cmp	x10, x2
   1e9ac:	sbc	x11, x11, xzr
   1e9b0:	lsl	x6, x6, #32
   1e9b4:	adds	x2, x2, x6
   1e9b8:	cinc	x11, x11, cs  // cs = hs, nlast
   1e9bc:	cmp	x11, #0x0
   1e9c0:	sub	x6, x2, x19
   1e9c4:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e9c8:	csel	x2, x6, x2, ls  // ls = plast
   1e9cc:	str	x5, [x7]
   1e9d0:	str	x4, [x7, #8]
   1e9d4:	str	x3, [x7, #16]
   1e9d8:	str	x2, [x7, #24]
   1e9dc:	add	x8, x8, #0x4
   1e9e0:	add	x20, x20, #0x20
   1e9e4:	cmp	x8, x21
   1e9e8:	b.cs	1ed70 <PyInit__decimal@@Base+0x4bd0>  // b.hs, b.nlast
   1e9ec:	mov	x7, x20
   1e9f0:	ldr	x4, [x20, #8]
   1e9f4:	ldr	x3, [x20, #16]
   1e9f8:	ldr	x2, [x20, #24]
   1e9fc:	ldr	x5, [x20]
   1ea00:	mul	x11, x5, x23
   1ea04:	umulh	x5, x5, x23
   1ea08:	mov	x6, x5
   1ea0c:	cbnz	x1, 1e890 <PyInit__decimal@@Base+0x46f0>
   1ea10:	cbz	x9, 1ebc4 <PyInit__decimal@@Base+0x4a24>
   1ea14:	lsr	x5, x5, #30
   1ea18:	sub	x10, x11, x6
   1ea1c:	cmp	x11, x10
   1ea20:	sbc	x5, x5, xzr
   1ea24:	lsl	x6, x6, #34
   1ea28:	adds	x6, x10, x6
   1ea2c:	cinc	x5, x5, cs  // cs = hs, nlast
   1ea30:	lsr	x10, x5, #30
   1ea34:	sub	x11, x6, x5
   1ea38:	cmp	x6, x11
   1ea3c:	sbc	x10, x10, xzr
   1ea40:	lsl	x5, x5, #34
   1ea44:	adds	x5, x11, x5
   1ea48:	cinc	x10, x10, cs  // cs = hs, nlast
   1ea4c:	lsr	x6, x10, #30
   1ea50:	sub	x11, x5, x10
   1ea54:	cmp	x5, x11
   1ea58:	sbc	x6, x6, xzr
   1ea5c:	lsl	x10, x10, #34
   1ea60:	adds	x5, x11, x10
   1ea64:	cinc	x6, x6, cs  // cs = hs, nlast
   1ea68:	cmp	x6, #0x0
   1ea6c:	sub	x6, x5, x19
   1ea70:	ccmp	x19, x5, #0x0, eq  // eq = none
   1ea74:	csel	x5, x6, x5, ls  // ls = plast
   1ea78:	mul	x11, x4, x0
   1ea7c:	umulh	x4, x4, x0
   1ea80:	lsr	x10, x4, #30
   1ea84:	sub	x6, x11, x4
   1ea88:	cmp	x6, x11
   1ea8c:	cset	x11, hi  // hi = pmore
   1ea90:	sub	x10, x10, x11
   1ea94:	lsl	x4, x4, #34
   1ea98:	adds	x11, x6, x4
   1ea9c:	cinc	x10, x10, cs  // cs = hs, nlast
   1eaa0:	lsr	x6, x10, #30
   1eaa4:	sub	x4, x11, x10
   1eaa8:	cmp	x11, x4
   1eaac:	sbc	x6, x6, xzr
   1eab0:	lsl	x10, x10, #34
   1eab4:	adds	x10, x4, x10
   1eab8:	cinc	x6, x6, cs  // cs = hs, nlast
   1eabc:	lsr	x11, x6, #30
   1eac0:	sub	x4, x10, x6
   1eac4:	cmp	x10, x4
   1eac8:	sbc	x11, x11, xzr
   1eacc:	lsl	x6, x6, #34
   1ead0:	adds	x4, x4, x6
   1ead4:	cinc	x11, x11, cs  // cs = hs, nlast
   1ead8:	cmp	x11, #0x0
   1eadc:	sub	x6, x4, x19
   1eae0:	ccmp	x19, x4, #0x0, eq  // eq = none
   1eae4:	csel	x4, x6, x4, ls  // ls = plast
   1eae8:	mul	x11, x3, x0
   1eaec:	umulh	x3, x3, x0
   1eaf0:	lsr	x10, x3, #30
   1eaf4:	sub	x6, x11, x3
   1eaf8:	cmp	x11, x6
   1eafc:	sbc	x10, x10, xzr
   1eb00:	lsl	x3, x3, #34
   1eb04:	adds	x11, x6, x3
   1eb08:	cinc	x10, x10, cs  // cs = hs, nlast
   1eb0c:	lsr	x6, x10, #30
   1eb10:	sub	x3, x11, x10
   1eb14:	cmp	x11, x3
   1eb18:	sbc	x6, x6, xzr
   1eb1c:	lsl	x10, x10, #34
   1eb20:	adds	x10, x3, x10
   1eb24:	cinc	x6, x6, cs  // cs = hs, nlast
   1eb28:	lsr	x11, x6, #30
   1eb2c:	sub	x3, x10, x6
   1eb30:	cmp	x10, x3
   1eb34:	sbc	x11, x11, xzr
   1eb38:	lsl	x6, x6, #34
   1eb3c:	adds	x3, x3, x6
   1eb40:	cinc	x11, x11, cs  // cs = hs, nlast
   1eb44:	cmp	x11, #0x0
   1eb48:	sub	x6, x3, x19
   1eb4c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1eb50:	csel	x3, x6, x3, ls  // ls = plast
   1eb54:	mul	x11, x2, x0
   1eb58:	umulh	x2, x2, x0
   1eb5c:	lsr	x10, x2, #30
   1eb60:	sub	x6, x11, x2
   1eb64:	cmp	x11, x6
   1eb68:	sbc	x10, x10, xzr
   1eb6c:	lsl	x2, x2, #34
   1eb70:	adds	x11, x6, x2
   1eb74:	cinc	x10, x10, cs  // cs = hs, nlast
   1eb78:	lsr	x6, x10, #30
   1eb7c:	sub	x2, x11, x10
   1eb80:	cmp	x11, x2
   1eb84:	sbc	x6, x6, xzr
   1eb88:	lsl	x10, x10, #34
   1eb8c:	adds	x10, x2, x10
   1eb90:	cinc	x6, x6, cs  // cs = hs, nlast
   1eb94:	lsr	x11, x6, #30
   1eb98:	sub	x2, x10, x6
   1eb9c:	cmp	x10, x2
   1eba0:	sbc	x11, x11, xzr
   1eba4:	lsl	x6, x6, #34
   1eba8:	adds	x2, x2, x6
   1ebac:	cinc	x11, x11, cs  // cs = hs, nlast
   1ebb0:	cmp	x11, #0x0
   1ebb4:	sub	x6, x2, x19
   1ebb8:	ccmp	x19, x2, #0x0, eq  // eq = none
   1ebbc:	csel	x2, x6, x2, ls  // ls = plast
   1ebc0:	b	1e9cc <PyInit__decimal@@Base+0x482c>
   1ebc4:	lsr	x5, x5, #24
   1ebc8:	sub	x10, x11, x6
   1ebcc:	cmp	x11, x10
   1ebd0:	sbc	x5, x5, xzr
   1ebd4:	lsl	x6, x6, #40
   1ebd8:	adds	x6, x10, x6
   1ebdc:	cinc	x5, x5, cs  // cs = hs, nlast
   1ebe0:	lsr	x10, x5, #24
   1ebe4:	sub	x11, x6, x5
   1ebe8:	cmp	x6, x11
   1ebec:	sbc	x10, x10, xzr
   1ebf0:	lsl	x5, x5, #40
   1ebf4:	adds	x5, x11, x5
   1ebf8:	cinc	x10, x10, cs  // cs = hs, nlast
   1ebfc:	lsr	x6, x10, #24
   1ec00:	sub	x11, x5, x10
   1ec04:	cmp	x5, x11
   1ec08:	sbc	x6, x6, xzr
   1ec0c:	lsl	x10, x10, #40
   1ec10:	adds	x5, x11, x10
   1ec14:	cinc	x6, x6, cs  // cs = hs, nlast
   1ec18:	cmp	x6, #0x0
   1ec1c:	sub	x6, x5, x19
   1ec20:	ccmp	x19, x5, #0x0, eq  // eq = none
   1ec24:	csel	x5, x6, x5, ls  // ls = plast
   1ec28:	mul	x11, x4, x0
   1ec2c:	umulh	x4, x4, x0
   1ec30:	lsr	x10, x4, #24
   1ec34:	sub	x6, x11, x4
   1ec38:	cmp	x11, x6
   1ec3c:	sbc	x10, x10, xzr
   1ec40:	lsl	x4, x4, #40
   1ec44:	adds	x4, x6, x4
   1ec48:	cinc	x10, x10, cs  // cs = hs, nlast
   1ec4c:	lsr	x6, x10, #24
   1ec50:	sub	x11, x4, x10
   1ec54:	cmp	x4, x11
   1ec58:	sbc	x6, x6, xzr
   1ec5c:	lsl	x10, x10, #40
   1ec60:	adds	x10, x11, x10
   1ec64:	cinc	x6, x6, cs  // cs = hs, nlast
   1ec68:	lsr	x11, x6, #24
   1ec6c:	sub	x4, x10, x6
   1ec70:	cmp	x10, x4
   1ec74:	sbc	x11, x11, xzr
   1ec78:	lsl	x6, x6, #40
   1ec7c:	adds	x4, x4, x6
   1ec80:	cinc	x11, x11, cs  // cs = hs, nlast
   1ec84:	cmp	x11, #0x0
   1ec88:	sub	x6, x4, x19
   1ec8c:	ccmp	x19, x4, #0x0, eq  // eq = none
   1ec90:	csel	x4, x6, x4, ls  // ls = plast
   1ec94:	mul	x11, x3, x0
   1ec98:	umulh	x3, x3, x0
   1ec9c:	lsr	x10, x3, #24
   1eca0:	sub	x6, x11, x3
   1eca4:	cmp	x11, x6
   1eca8:	sbc	x10, x10, xzr
   1ecac:	lsl	x3, x3, #40
   1ecb0:	adds	x3, x6, x3
   1ecb4:	cinc	x10, x10, cs  // cs = hs, nlast
   1ecb8:	lsr	x6, x10, #24
   1ecbc:	sub	x11, x3, x10
   1ecc0:	cmp	x3, x11
   1ecc4:	sbc	x6, x6, xzr
   1ecc8:	lsl	x10, x10, #40
   1eccc:	adds	x10, x11, x10
   1ecd0:	cinc	x6, x6, cs  // cs = hs, nlast
   1ecd4:	lsr	x11, x6, #24
   1ecd8:	sub	x3, x10, x6
   1ecdc:	cmp	x10, x3
   1ece0:	sbc	x11, x11, xzr
   1ece4:	lsl	x6, x6, #40
   1ece8:	adds	x3, x3, x6
   1ecec:	cinc	x11, x11, cs  // cs = hs, nlast
   1ecf0:	cmp	x11, #0x0
   1ecf4:	sub	x6, x3, x19
   1ecf8:	ccmp	x19, x3, #0x0, eq  // eq = none
   1ecfc:	csel	x3, x6, x3, ls  // ls = plast
   1ed00:	mul	x11, x2, x0
   1ed04:	umulh	x2, x2, x0
   1ed08:	lsr	x10, x2, #24
   1ed0c:	sub	x6, x11, x2
   1ed10:	cmp	x11, x6
   1ed14:	sbc	x10, x10, xzr
   1ed18:	lsl	x2, x2, #40
   1ed1c:	adds	x2, x6, x2
   1ed20:	cinc	x10, x10, cs  // cs = hs, nlast
   1ed24:	lsr	x6, x10, #24
   1ed28:	sub	x11, x2, x10
   1ed2c:	cmp	x2, x11
   1ed30:	sbc	x6, x6, xzr
   1ed34:	lsl	x10, x10, #40
   1ed38:	adds	x10, x11, x10
   1ed3c:	cinc	x6, x6, cs  // cs = hs, nlast
   1ed40:	lsr	x11, x6, #24
   1ed44:	sub	x2, x10, x6
   1ed48:	cmp	x10, x2
   1ed4c:	sbc	x11, x11, xzr
   1ed50:	lsl	x6, x6, #40
   1ed54:	adds	x2, x2, x6
   1ed58:	cinc	x11, x11, cs  // cs = hs, nlast
   1ed5c:	cmp	x11, #0x0
   1ed60:	sub	x6, x2, x19
   1ed64:	ccmp	x19, x2, #0x0, eq  // eq = none
   1ed68:	csel	x2, x6, x2, ls  // ls = plast
   1ed6c:	b	1e9cc <PyInit__decimal@@Base+0x482c>
   1ed70:	mov	w0, #0x1                   	// #1
   1ed74:	ldp	x19, x20, [sp, #16]
   1ed78:	ldp	x21, x22, [sp, #32]
   1ed7c:	ldp	x23, x24, [sp, #48]
   1ed80:	ldr	x25, [sp, #64]
   1ed84:	ldp	x29, x30, [sp], #80
   1ed88:	ret
   1ed8c:	mov	w0, #0x1                   	// #1
   1ed90:	b	1ed74 <PyInit__decimal@@Base+0x4bd4>
   1ed94:	mov	w2, w22
   1ed98:	mov	x1, #0x0                   	// #0
   1ed9c:	mov	x0, x20
   1eda0:	bl	1fc34 <PyInit__decimal@@Base+0x5a94>
   1eda4:	cbz	w0, 1ed74 <PyInit__decimal@@Base+0x4bd4>
   1eda8:	mov	x24, #0xffffffffffffffff    	// #-1
   1edac:	adrp	x25, 20000 <PyInit__decimal@@Base+0x5e60>
   1edb0:	add	x25, x25, #0xbfc
   1edb4:	mov	x2, #0x0                   	// #0
   1edb8:	add	x5, x20, #0x8
   1edbc:	and	x6, x19, #0x100000000
   1edc0:	and	x7, x19, #0x400000000
   1edc4:	b	1e694 <PyInit__decimal@@Base+0x44f4>
   1edc8:	stp	x29, x30, [sp, #-224]!
   1edcc:	mov	x29, sp
   1edd0:	str	x0, [sp, #104]
   1edd4:	str	x1, [sp, #128]
   1edd8:	str	x2, [sp, #136]
   1eddc:	str	x3, [sp, #144]
   1ede0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1ede4:	ldr	x0, [x0, #144]
   1ede8:	str	x0, [sp, #120]
   1edec:	cbz	x3, 1f288 <PyInit__decimal@@Base+0x50e8>
   1edf0:	stp	x19, x20, [sp, #16]
   1edf4:	stp	x21, x22, [sp, #32]
   1edf8:	stp	x23, x24, [sp, #48]
   1edfc:	stp	x25, x26, [sp, #64]
   1ee00:	stp	x27, x28, [sp, #80]
   1ee04:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1ee08:	add	x0, x0, #0x90
   1ee0c:	ldr	x21, [x0, #8]
   1ee10:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   1ee14:	ldr	x1, [x1, #112]
   1ee18:	str	x1, [sp, #192]
   1ee1c:	and	x1, x21, #0x100000000
   1ee20:	str	x1, [sp, #152]
   1ee24:	and	x1, x21, #0x400000000
   1ee28:	str	x1, [sp, #208]
   1ee2c:	ldr	x24, [x0, #16]
   1ee30:	str	x24, [sp, #184]
   1ee34:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1ee38:	ldr	x0, [x0, #104]
   1ee3c:	str	x0, [sp, #200]
   1ee40:	and	x0, x24, #0x100000000
   1ee44:	str	x0, [sp, #160]
   1ee48:	and	x0, x24, #0x400000000
   1ee4c:	str	x0, [sp, #216]
   1ee50:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1ee54:	ldr	x0, [x0, #96]
   1ee58:	str	x0, [sp, #168]
   1ee5c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1ee60:	ldr	x0, [x0, #88]
   1ee64:	str	x0, [sp, #176]
   1ee68:	mov	x25, #0x0                   	// #0
   1ee6c:	str	xzr, [sp, #96]
   1ee70:	str	xzr, [sp, #112]
   1ee74:	mov	x22, #0x0                   	// #0
   1ee78:	mov	x20, #0x0                   	// #0
   1ee7c:	mov	x27, #0x89e80000            	// #2313682944
   1ee80:	movk	x27, #0x2304, lsl #32
   1ee84:	movk	x27, #0x8ac7, lsl #48
   1ee88:	b	1f13c <PyInit__decimal@@Base+0x4f9c>
   1ee8c:	lsr	x3, x0, #32
   1ee90:	sub	x0, x4, x0
   1ee94:	cmp	x4, x0
   1ee98:	sbc	x3, x3, xzr
   1ee9c:	lsl	x1, x1, #32
   1eea0:	adds	x0, x0, x1
   1eea4:	cinc	x3, x3, cs  // cs = hs, nlast
   1eea8:	lsr	x1, x3, #32
   1eeac:	sub	x19, x0, x3
   1eeb0:	cmp	x0, x19
   1eeb4:	sbc	x1, x1, xzr
   1eeb8:	lsl	x3, x3, #32
   1eebc:	adds	x19, x19, x3
   1eec0:	cinc	x1, x1, cs  // cs = hs, nlast
   1eec4:	cmp	x1, #0x0
   1eec8:	sub	x0, x19, x21
   1eecc:	ccmp	x21, x19, #0x0, eq  // eq = none
   1eed0:	csel	x19, x0, x19, ls  // ls = plast
   1eed4:	ldr	x0, [sp, #120]
   1eed8:	umulh	x23, x0, x19
   1eedc:	madd	x19, x0, x19, x2
   1eee0:	cmp	x19, x2
   1eee4:	cinc	x23, x23, cc  // cc = lo, ul, last
   1eee8:	udiv	x1, x23, x24
   1eeec:	adds	x26, x20, x19
   1eef0:	ldr	x2, [sp, #184]
   1eef4:	mov	x3, #0x0                   	// #0
   1eef8:	mov	x0, x26
   1eefc:	msub	x1, x1, x24, x23
   1ef00:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1ef04:	mul	x0, x24, x0
   1ef08:	sub	x1, x28, x26
   1ef0c:	add	x1, x1, x0
   1ef10:	sub	x26, x26, x0
   1ef14:	add	x0, x1, x24
   1ef18:	cmp	x28, x26
   1ef1c:	csel	x1, x0, x1, cc  // cc = lo, ul, last
   1ef20:	ldr	x0, [sp, #200]
   1ef24:	mul	x4, x1, x0
   1ef28:	umulh	x2, x1, x0
   1ef2c:	mov	x0, #0x0                   	// #0
   1ef30:	madd	x2, x1, x0, x2
   1ef34:	mov	x1, x2
   1ef38:	ldr	x0, [sp, #160]
   1ef3c:	cbnz	x0, 1f018 <PyInit__decimal@@Base+0x4e78>
   1ef40:	ldr	x0, [sp, #216]
   1ef44:	cbz	x0, 1f20c <PyInit__decimal@@Base+0x506c>
   1ef48:	lsr	x0, x2, #30
   1ef4c:	sub	x2, x4, x2
   1ef50:	cmp	x4, x2
   1ef54:	sbc	x0, x0, xzr
   1ef58:	lsl	x1, x1, #34
   1ef5c:	adds	x1, x2, x1
   1ef60:	cinc	x0, x0, cs  // cs = hs, nlast
   1ef64:	lsr	x2, x0, #30
   1ef68:	sub	x3, x1, x0
   1ef6c:	cmp	x1, x3
   1ef70:	sbc	x2, x2, xzr
   1ef74:	lsl	x0, x0, #34
   1ef78:	adds	x3, x3, x0
   1ef7c:	cinc	x2, x2, cs  // cs = hs, nlast
   1ef80:	lsr	x1, x2, #30
   1ef84:	sub	x0, x3, x2
   1ef88:	cmp	x3, x0
   1ef8c:	sbc	x1, x1, xzr
   1ef90:	lsl	x2, x2, #34
   1ef94:	adds	x0, x0, x2
   1ef98:	cinc	x1, x1, cs  // cs = hs, nlast
   1ef9c:	cmp	x1, #0x0
   1efa0:	sub	x1, x0, x24
   1efa4:	ccmp	x24, x0, #0x0, eq  // eq = none
   1efa8:	csel	x0, x1, x0, ls  // ls = plast
   1efac:	b	1f060 <PyInit__decimal@@Base+0x4ec0>
   1efb0:	lsr	x3, x1, #24
   1efb4:	sub	x0, x4, x1
   1efb8:	cmp	x4, x0
   1efbc:	sbc	x3, x3, xzr
   1efc0:	lsl	x1, x1, #40
   1efc4:	adds	x1, x0, x1
   1efc8:	cinc	x3, x3, cs  // cs = hs, nlast
   1efcc:	lsr	x0, x3, #24
   1efd0:	sub	x4, x1, x3
   1efd4:	cmp	x1, x4
   1efd8:	sbc	x0, x0, xzr
   1efdc:	lsl	x3, x3, #40
   1efe0:	adds	x3, x4, x3
   1efe4:	cinc	x0, x0, cs  // cs = hs, nlast
   1efe8:	lsr	x1, x0, #24
   1efec:	sub	x19, x3, x0
   1eff0:	cmp	x3, x19
   1eff4:	sbc	x1, x1, xzr
   1eff8:	lsl	x0, x0, #40
   1effc:	adds	x19, x19, x0
   1f000:	cinc	x1, x1, cs  // cs = hs, nlast
   1f004:	cmp	x1, #0x0
   1f008:	sub	x0, x19, x21
   1f00c:	ccmp	x21, x19, #0x0, eq  // eq = none
   1f010:	csel	x19, x0, x19, ls  // ls = plast
   1f014:	b	1eed4 <PyInit__decimal@@Base+0x4d34>
   1f018:	lsr	x3, x2, #32
   1f01c:	sub	x2, x4, x2
   1f020:	cmp	x4, x2
   1f024:	sbc	x3, x3, xzr
   1f028:	lsl	x1, x1, #32
   1f02c:	adds	x2, x2, x1
   1f030:	cinc	x3, x3, cs  // cs = hs, nlast
   1f034:	lsr	x1, x3, #32
   1f038:	sub	x0, x2, x3
   1f03c:	cmp	x2, x0
   1f040:	sbc	x1, x1, xzr
   1f044:	lsl	x3, x3, #32
   1f048:	adds	x0, x0, x3
   1f04c:	cinc	x1, x1, cs  // cs = hs, nlast
   1f050:	cmp	x1, #0x0
   1f054:	sub	x1, x0, x24
   1f058:	ccmp	x24, x0, #0x0, eq  // eq = none
   1f05c:	csel	x0, x1, x0, ls  // ls = plast
   1f060:	ldr	x4, [sp, #168]
   1f064:	umulh	x1, x4, x0
   1f068:	mov	x2, #0x0                   	// #0
   1f06c:	madd	x1, x2, x0, x1
   1f070:	ldr	x2, [sp, #176]
   1f074:	umulh	x3, x0, x2
   1f078:	madd	x2, x0, x2, x1
   1f07c:	cmp	x1, x2
   1f080:	cinc	x3, x3, hi  // hi = pmore
   1f084:	madd	x0, x4, x0, x19
   1f088:	cmp	x19, x0
   1f08c:	add	x2, x2, x23
   1f090:	cinc	x2, x2, hi  // hi = pmore
   1f094:	ldr	x1, [sp, #112]
   1f098:	adds	x19, x0, x1
   1f09c:	adc	x4, x25, x2
   1f0a0:	cmp	x4, x25
   1f0a4:	cset	x1, cc  // cc = lo, ul, last
   1f0a8:	cmp	x2, x23
   1f0ac:	cinc	x1, x1, cc  // cc = lo, ul, last
   1f0b0:	ldr	x0, [sp, #96]
   1f0b4:	add	x0, x3, x0
   1f0b8:	add	x1, x1, x0
   1f0bc:	str	x20, [sp, #96]
   1f0c0:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1f0c4:	movk	x0, #0x2304, lsl #32
   1f0c8:	movk	x0, #0x8ac7, lsl #48
   1f0cc:	cmp	x1, x0
   1f0d0:	b.ls	1f0e4 <PyInit__decimal@@Base+0x4f44>  // b.plast
   1f0d4:	cmp	x1, x27
   1f0d8:	cset	x0, cs  // cs = hs, nlast
   1f0dc:	str	x0, [sp, #96]
   1f0e0:	msub	x1, x0, x27, x1
   1f0e4:	adds	x23, x20, x4
   1f0e8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1f0ec:	add	x0, x0, #0xcf0
   1f0f0:	ldp	x2, x3, [x0]
   1f0f4:	mov	x0, x23
   1f0f8:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1f0fc:	mov	x25, x0
   1f100:	adds	x19, x20, x19
   1f104:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   1f108:	add	x0, x0, #0xcf0
   1f10c:	ldp	x2, x3, [x0]
   1f110:	mov	x0, x19
   1f114:	msub	x1, x25, x27, x23
   1f118:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   1f11c:	str	x0, [sp, #112]
   1f120:	msub	x19, x0, x27, x19
   1f124:	ldr	x0, [sp, #104]
   1f128:	str	x19, [x0, x22, lsl #3]
   1f12c:	add	x22, x22, #0x1
   1f130:	ldr	x0, [sp, #144]
   1f134:	cmp	x0, x22
   1f138:	b.eq	1f274 <PyInit__decimal@@Base+0x50d4>  // b.none
   1f13c:	ldr	x0, [sp, #104]
   1f140:	ldr	x2, [x0, x22, lsl #3]
   1f144:	ldr	x0, [sp, #128]
   1f148:	ldr	x0, [x0, x22, lsl #3]
   1f14c:	ldr	x1, [sp, #136]
   1f150:	ldr	x28, [x1, x22, lsl #3]
   1f154:	sub	x1, x0, x21
   1f158:	cmp	x0, x21
   1f15c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1f160:	sub	x3, x2, x21
   1f164:	cmp	x2, x21
   1f168:	csel	x3, x3, x2, cs  // cs = hs, nlast
   1f16c:	sub	x1, x0, x3
   1f170:	add	x4, x1, x21
   1f174:	cmp	x0, x3
   1f178:	csel	x1, x4, x1, cc  // cc = lo, ul, last
   1f17c:	ldr	x0, [sp, #192]
   1f180:	mul	x4, x1, x0
   1f184:	umulh	x0, x1, x0
   1f188:	mov	x3, #0x0                   	// #0
   1f18c:	madd	x0, x1, x3, x0
   1f190:	mov	x1, x0
   1f194:	ldr	x3, [sp, #152]
   1f198:	cbnz	x3, 1ee8c <PyInit__decimal@@Base+0x4cec>
   1f19c:	ldr	x0, [sp, #208]
   1f1a0:	cbz	x0, 1efb0 <PyInit__decimal@@Base+0x4e10>
   1f1a4:	lsr	x3, x1, #30
   1f1a8:	sub	x0, x4, x1
   1f1ac:	cmp	x4, x0
   1f1b0:	sbc	x3, x3, xzr
   1f1b4:	lsl	x1, x1, #34
   1f1b8:	adds	x1, x0, x1
   1f1bc:	cinc	x3, x3, cs  // cs = hs, nlast
   1f1c0:	lsr	x0, x3, #30
   1f1c4:	sub	x4, x1, x3
   1f1c8:	cmp	x1, x4
   1f1cc:	sbc	x0, x0, xzr
   1f1d0:	lsl	x3, x3, #34
   1f1d4:	adds	x3, x4, x3
   1f1d8:	cinc	x0, x0, cs  // cs = hs, nlast
   1f1dc:	lsr	x1, x0, #30
   1f1e0:	sub	x19, x3, x0
   1f1e4:	cmp	x3, x19
   1f1e8:	sbc	x1, x1, xzr
   1f1ec:	lsl	x0, x0, #34
   1f1f0:	adds	x19, x19, x0
   1f1f4:	cinc	x1, x1, cs  // cs = hs, nlast
   1f1f8:	cmp	x1, #0x0
   1f1fc:	sub	x0, x19, x21
   1f200:	ccmp	x21, x19, #0x0, eq  // eq = none
   1f204:	csel	x19, x0, x19, ls  // ls = plast
   1f208:	b	1eed4 <PyInit__decimal@@Base+0x4d34>
   1f20c:	lsr	x0, x2, #24
   1f210:	sub	x2, x4, x2
   1f214:	cmp	x4, x2
   1f218:	sbc	x0, x0, xzr
   1f21c:	lsl	x1, x1, #40
   1f220:	adds	x1, x2, x1
   1f224:	cinc	x0, x0, cs  // cs = hs, nlast
   1f228:	lsr	x2, x0, #24
   1f22c:	sub	x3, x1, x0
   1f230:	cmp	x1, x3
   1f234:	sbc	x2, x2, xzr
   1f238:	lsl	x0, x0, #40
   1f23c:	adds	x3, x3, x0
   1f240:	cinc	x2, x2, cs  // cs = hs, nlast
   1f244:	lsr	x1, x2, #24
   1f248:	sub	x0, x3, x2
   1f24c:	cmp	x3, x0
   1f250:	sbc	x1, x1, xzr
   1f254:	lsl	x2, x2, #40
   1f258:	adds	x0, x0, x2
   1f25c:	cinc	x1, x1, cs  // cs = hs, nlast
   1f260:	cmp	x1, #0x0
   1f264:	sub	x1, x0, x24
   1f268:	ccmp	x24, x0, #0x0, eq  // eq = none
   1f26c:	csel	x0, x1, x0, ls  // ls = plast
   1f270:	b	1f060 <PyInit__decimal@@Base+0x4ec0>
   1f274:	ldp	x19, x20, [sp, #16]
   1f278:	ldp	x21, x22, [sp, #32]
   1f27c:	ldp	x23, x24, [sp, #48]
   1f280:	ldp	x25, x26, [sp, #64]
   1f284:	ldp	x27, x28, [sp, #80]
   1f288:	ldp	x29, x30, [sp], #224
   1f28c:	ret
   1f290:	mov	x15, x0
   1f294:	mov	x11, x1
   1f298:	ldrsw	x1, [x2]
   1f29c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1f2a0:	add	x0, x0, #0x90
   1f2a4:	ldr	x0, [x0, x1, lsl #3]
   1f2a8:	cmp	x11, #0x1
   1f2ac:	b.ls	1fab0 <PyInit__decimal@@Base+0x5910>  // b.plast
   1f2b0:	stp	x29, x30, [sp, #-80]!
   1f2b4:	mov	x29, sp
   1f2b8:	stp	x19, x20, [sp, #16]
   1f2bc:	stp	x21, x22, [sp, #32]
   1f2c0:	mov	x22, x2
   1f2c4:	lsr	x19, x11, #1
   1f2c8:	add	x5, x15, x19, lsl #3
   1f2cc:	mov	x3, #0x0                   	// #0
   1f2d0:	add	x8, x2, #0x18
   1f2d4:	add	x7, x2, #0x20
   1f2d8:	add	x21, x15, #0x8
   1f2dc:	and	x12, x0, #0x100000000
   1f2e0:	and	x9, x0, #0x400000000
   1f2e4:	b	1f398 <PyInit__decimal@@Base+0x51f8>
   1f2e8:	lsr	x10, x2, #32
   1f2ec:	sub	x2, x13, x2
   1f2f0:	cmp	x13, x2
   1f2f4:	sbc	x10, x10, xzr
   1f2f8:	lsl	x4, x4, #32
   1f2fc:	adds	x2, x2, x4
   1f300:	cinc	x10, x10, cs  // cs = hs, nlast
   1f304:	lsr	x4, x10, #32
   1f308:	sub	x13, x2, x10
   1f30c:	cmp	x2, x13
   1f310:	sbc	x4, x4, xzr
   1f314:	lsl	x10, x10, #32
   1f318:	adds	x2, x13, x10
   1f31c:	cinc	x4, x4, cs  // cs = hs, nlast
   1f320:	cmp	x4, #0x0
   1f324:	sub	x4, x2, x0
   1f328:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f32c:	csel	x2, x4, x2, ls  // ls = plast
   1f330:	mul	x13, x16, x1
   1f334:	umulh	x1, x16, x1
   1f338:	lsr	x4, x1, #32
   1f33c:	sub	x10, x13, x1
   1f340:	cmp	x13, x10
   1f344:	sbc	x4, x4, xzr
   1f348:	lsl	x1, x1, #32
   1f34c:	adds	x10, x10, x1
   1f350:	cinc	x4, x4, cs  // cs = hs, nlast
   1f354:	lsr	x13, x4, #32
   1f358:	sub	x1, x10, x4
   1f35c:	cmp	x10, x1
   1f360:	sbc	x13, x13, xzr
   1f364:	lsl	x4, x4, #32
   1f368:	adds	x1, x1, x4
   1f36c:	cinc	x13, x13, cs  // cs = hs, nlast
   1f370:	cmp	x13, #0x0
   1f374:	sub	x4, x1, x0
   1f378:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f37c:	csel	x1, x4, x1, ls  // ls = plast
   1f380:	str	x2, [x6]
   1f384:	str	x1, [x6, #8]
   1f388:	add	x3, x3, #0x2
   1f38c:	add	x5, x5, #0x10
   1f390:	cmp	x19, x3
   1f394:	b.ls	1f5d0 <PyInit__decimal@@Base+0x5430>  // b.plast
   1f398:	ldr	x17, [x8, x3, lsl #3]
   1f39c:	ldr	x16, [x7, x3, lsl #3]
   1f3a0:	ldr	x10, [x15, x3, lsl #3]
   1f3a4:	mov	x6, x5
   1f3a8:	ldr	x14, [x5]
   1f3ac:	ldr	x4, [x21, x3, lsl #3]
   1f3b0:	ldr	x13, [x5, #8]
   1f3b4:	add	x1, x14, x10
   1f3b8:	sub	x2, x1, x0
   1f3bc:	cmp	x10, x1
   1f3c0:	csel	x1, x2, x1, hi  // hi = pmore
   1f3c4:	sub	x2, x1, x0
   1f3c8:	cmp	x0, x1
   1f3cc:	csel	x1, x2, x1, ls  // ls = plast
   1f3d0:	str	x1, [x15, x3, lsl #3]
   1f3d4:	sub	x2, x10, x14
   1f3d8:	add	x1, x2, x0
   1f3dc:	cmp	x14, x10
   1f3e0:	csel	x2, x1, x2, hi  // hi = pmore
   1f3e4:	add	x1, x13, x4
   1f3e8:	sub	x10, x1, x0
   1f3ec:	cmp	x1, x4
   1f3f0:	csel	x1, x10, x1, cc  // cc = lo, ul, last
   1f3f4:	sub	x10, x1, x0
   1f3f8:	cmp	x0, x1
   1f3fc:	csel	x1, x10, x1, ls  // ls = plast
   1f400:	str	x1, [x21, x3, lsl #3]
   1f404:	sub	x1, x4, x13
   1f408:	add	x10, x1, x0
   1f40c:	cmp	x13, x4
   1f410:	csel	x1, x10, x1, hi  // hi = pmore
   1f414:	mul	x13, x2, x17
   1f418:	umulh	x2, x2, x17
   1f41c:	mov	x4, x2
   1f420:	cbnz	x12, 1f2e8 <PyInit__decimal@@Base+0x5148>
   1f424:	cbz	x9, 1f4fc <PyInit__decimal@@Base+0x535c>
   1f428:	lsr	x2, x2, #30
   1f42c:	sub	x10, x13, x4
   1f430:	cmp	x13, x10
   1f434:	sbc	x2, x2, xzr
   1f438:	lsl	x4, x4, #34
   1f43c:	adds	x13, x10, x4
   1f440:	cinc	x2, x2, cs  // cs = hs, nlast
   1f444:	lsr	x4, x2, #30
   1f448:	sub	x10, x13, x2
   1f44c:	cmp	x13, x10
   1f450:	sbc	x4, x4, xzr
   1f454:	lsl	x2, x2, #34
   1f458:	adds	x2, x10, x2
   1f45c:	cinc	x4, x4, cs  // cs = hs, nlast
   1f460:	lsr	x10, x4, #30
   1f464:	sub	x13, x2, x4
   1f468:	cmp	x2, x13
   1f46c:	sbc	x10, x10, xzr
   1f470:	lsl	x4, x4, #34
   1f474:	adds	x2, x13, x4
   1f478:	cinc	x10, x10, cs  // cs = hs, nlast
   1f47c:	cmp	x10, #0x0
   1f480:	sub	x4, x2, x0
   1f484:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f488:	csel	x2, x4, x2, ls  // ls = plast
   1f48c:	mul	x13, x1, x16
   1f490:	umulh	x1, x1, x16
   1f494:	lsr	x10, x1, #30
   1f498:	sub	x4, x13, x1
   1f49c:	cmp	x13, x4
   1f4a0:	sbc	x10, x10, xzr
   1f4a4:	lsl	x1, x1, #34
   1f4a8:	adds	x13, x4, x1
   1f4ac:	cinc	x10, x10, cs  // cs = hs, nlast
   1f4b0:	lsr	x4, x10, #30
   1f4b4:	sub	x1, x13, x10
   1f4b8:	cmp	x13, x1
   1f4bc:	sbc	x4, x4, xzr
   1f4c0:	lsl	x10, x10, #34
   1f4c4:	adds	x10, x1, x10
   1f4c8:	cinc	x4, x4, cs  // cs = hs, nlast
   1f4cc:	lsr	x13, x4, #30
   1f4d0:	sub	x1, x10, x4
   1f4d4:	cmp	x10, x1
   1f4d8:	sbc	x13, x13, xzr
   1f4dc:	lsl	x4, x4, #34
   1f4e0:	adds	x1, x1, x4
   1f4e4:	cinc	x13, x13, cs  // cs = hs, nlast
   1f4e8:	cmp	x13, #0x0
   1f4ec:	sub	x4, x1, x0
   1f4f0:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f4f4:	csel	x1, x4, x1, ls  // ls = plast
   1f4f8:	b	1f380 <PyInit__decimal@@Base+0x51e0>
   1f4fc:	lsr	x2, x2, #24
   1f500:	sub	x10, x13, x4
   1f504:	cmp	x13, x10
   1f508:	sbc	x2, x2, xzr
   1f50c:	lsl	x4, x4, #40
   1f510:	adds	x13, x10, x4
   1f514:	cinc	x2, x2, cs  // cs = hs, nlast
   1f518:	lsr	x4, x2, #24
   1f51c:	sub	x10, x13, x2
   1f520:	cmp	x13, x10
   1f524:	sbc	x4, x4, xzr
   1f528:	lsl	x2, x2, #40
   1f52c:	adds	x2, x10, x2
   1f530:	cinc	x4, x4, cs  // cs = hs, nlast
   1f534:	lsr	x10, x4, #24
   1f538:	sub	x13, x2, x4
   1f53c:	cmp	x2, x13
   1f540:	sbc	x10, x10, xzr
   1f544:	lsl	x4, x4, #40
   1f548:	adds	x2, x13, x4
   1f54c:	cinc	x10, x10, cs  // cs = hs, nlast
   1f550:	cmp	x10, #0x0
   1f554:	sub	x4, x2, x0
   1f558:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f55c:	csel	x2, x4, x2, ls  // ls = plast
   1f560:	mul	x13, x1, x16
   1f564:	umulh	x1, x1, x16
   1f568:	lsr	x10, x1, #24
   1f56c:	sub	x4, x13, x1
   1f570:	cmp	x13, x4
   1f574:	sbc	x10, x10, xzr
   1f578:	lsl	x1, x1, #40
   1f57c:	adds	x13, x4, x1
   1f580:	cinc	x10, x10, cs  // cs = hs, nlast
   1f584:	lsr	x4, x10, #24
   1f588:	sub	x1, x13, x10
   1f58c:	cmp	x13, x1
   1f590:	sbc	x4, x4, xzr
   1f594:	lsl	x10, x10, #40
   1f598:	adds	x10, x1, x10
   1f59c:	cinc	x4, x4, cs  // cs = hs, nlast
   1f5a0:	lsr	x13, x4, #24
   1f5a4:	sub	x1, x10, x4
   1f5a8:	cmp	x10, x1
   1f5ac:	sbc	x13, x13, xzr
   1f5b0:	lsl	x4, x4, #40
   1f5b4:	adds	x1, x1, x4
   1f5b8:	cinc	x13, x13, cs  // cs = hs, nlast
   1f5bc:	cmp	x13, #0x0
   1f5c0:	sub	x4, x1, x0
   1f5c4:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f5c8:	csel	x1, x4, x1, ls  // ls = plast
   1f5cc:	b	1f380 <PyInit__decimal@@Base+0x51e0>
   1f5d0:	cmp	x11, #0x3
   1f5d4:	b.ls	1f910 <PyInit__decimal@@Base+0x5770>  // b.plast
   1f5d8:	stp	x23, x24, [sp, #48]
   1f5dc:	stp	x25, x26, [sp, #64]
   1f5e0:	mov	x20, #0x2                   	// #2
   1f5e4:	and	x14, x0, #0x400000000
   1f5e8:	b	1f9c8 <PyInit__decimal@@Base+0x5828>
   1f5ec:	lsr	x24, x2, #32
   1f5f0:	sub	x2, x25, x2
   1f5f4:	cmp	x25, x2
   1f5f8:	sbc	x24, x24, xzr
   1f5fc:	lsl	x23, x23, #32
   1f600:	adds	x2, x2, x23
   1f604:	cinc	x24, x24, cs  // cs = hs, nlast
   1f608:	lsr	x23, x24, #32
   1f60c:	sub	x25, x2, x24
   1f610:	cmp	x2, x25
   1f614:	sbc	x23, x23, xzr
   1f618:	lsl	x24, x24, #32
   1f61c:	adds	x2, x25, x24
   1f620:	cinc	x23, x23, cs  // cs = hs, nlast
   1f624:	cmp	x23, #0x0
   1f628:	sub	x23, x2, x0
   1f62c:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f630:	csel	x2, x23, x2, ls  // ls = plast
   1f634:	mul	x25, x1, x4
   1f638:	umulh	x1, x1, x4
   1f63c:	lsr	x23, x1, #32
   1f640:	sub	x24, x25, x1
   1f644:	cmp	x25, x24
   1f648:	sbc	x23, x23, xzr
   1f64c:	lsl	x1, x1, #32
   1f650:	adds	x24, x24, x1
   1f654:	cinc	x23, x23, cs  // cs = hs, nlast
   1f658:	lsr	x25, x23, #32
   1f65c:	sub	x1, x24, x23
   1f660:	cmp	x24, x1
   1f664:	sbc	x25, x25, xzr
   1f668:	lsl	x23, x23, #32
   1f66c:	adds	x1, x1, x23
   1f670:	cinc	x25, x25, cs  // cs = hs, nlast
   1f674:	cmp	x25, #0x0
   1f678:	sub	x23, x1, x0
   1f67c:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f680:	csel	x1, x23, x1, ls  // ls = plast
   1f684:	str	x2, [x10, x3, lsl #3]
   1f688:	str	x1, [x9, x3, lsl #3]
   1f68c:	add	x3, x3, x13
   1f690:	cmp	x11, x3
   1f694:	b.ls	1f8cc <PyInit__decimal@@Base+0x572c>  // b.plast
   1f698:	ldr	x24, [x8, x3, lsl #3]
   1f69c:	mov	x10, x7
   1f6a0:	ldr	x26, [x7, x3, lsl #3]
   1f6a4:	ldr	x23, [x5, x3, lsl #3]
   1f6a8:	mov	x9, x6
   1f6ac:	ldr	x25, [x6, x3, lsl #3]
   1f6b0:	add	x1, x26, x24
   1f6b4:	sub	x2, x1, x0
   1f6b8:	cmp	x24, x1
   1f6bc:	csel	x1, x2, x1, hi  // hi = pmore
   1f6c0:	sub	x2, x1, x0
   1f6c4:	cmp	x0, x1
   1f6c8:	csel	x1, x2, x1, ls  // ls = plast
   1f6cc:	str	x1, [x8, x3, lsl #3]
   1f6d0:	sub	x2, x24, x26
   1f6d4:	add	x1, x2, x0
   1f6d8:	cmp	x26, x24
   1f6dc:	csel	x2, x1, x2, hi  // hi = pmore
   1f6e0:	add	x1, x25, x23
   1f6e4:	sub	x24, x1, x0
   1f6e8:	cmp	x23, x1
   1f6ec:	csel	x1, x24, x1, hi  // hi = pmore
   1f6f0:	sub	x24, x1, x0
   1f6f4:	cmp	x0, x1
   1f6f8:	csel	x1, x24, x1, ls  // ls = plast
   1f6fc:	str	x1, [x5, x3, lsl #3]
   1f700:	sub	x1, x23, x25
   1f704:	add	x24, x1, x0
   1f708:	cmp	x25, x23
   1f70c:	csel	x1, x24, x1, hi  // hi = pmore
   1f710:	mul	x25, x2, x4
   1f714:	umulh	x2, x2, x4
   1f718:	mov	x23, x2
   1f71c:	cbnz	x12, 1f5ec <PyInit__decimal@@Base+0x544c>
   1f720:	cbz	x14, 1f7f8 <PyInit__decimal@@Base+0x5658>
   1f724:	lsr	x26, x2, #30
   1f728:	sub	x24, x25, x2
   1f72c:	cmp	x25, x24
   1f730:	sbc	x26, x26, xzr
   1f734:	lsl	x23, x2, #34
   1f738:	adds	x23, x24, x23
   1f73c:	cinc	x26, x26, cs  // cs = hs, nlast
   1f740:	lsr	x24, x26, #30
   1f744:	sub	x2, x23, x26
   1f748:	cmp	x23, x2
   1f74c:	sbc	x24, x24, xzr
   1f750:	lsl	x26, x26, #34
   1f754:	adds	x26, x2, x26
   1f758:	cinc	x24, x24, cs  // cs = hs, nlast
   1f75c:	lsr	x23, x24, #30
   1f760:	sub	x2, x26, x24
   1f764:	cmp	x26, x2
   1f768:	sbc	x23, x23, xzr
   1f76c:	lsl	x24, x24, #34
   1f770:	adds	x2, x2, x24
   1f774:	cinc	x23, x23, cs  // cs = hs, nlast
   1f778:	cmp	x23, #0x0
   1f77c:	sub	x23, x2, x0
   1f780:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f784:	csel	x2, x23, x2, ls  // ls = plast
   1f788:	mul	x25, x1, x4
   1f78c:	umulh	x1, x1, x4
   1f790:	lsr	x24, x1, #30
   1f794:	sub	x23, x25, x1
   1f798:	cmp	x25, x23
   1f79c:	sbc	x24, x24, xzr
   1f7a0:	lsl	x1, x1, #34
   1f7a4:	adds	x25, x23, x1
   1f7a8:	cinc	x24, x24, cs  // cs = hs, nlast
   1f7ac:	lsr	x23, x24, #30
   1f7b0:	sub	x1, x25, x24
   1f7b4:	cmp	x25, x1
   1f7b8:	sbc	x23, x23, xzr
   1f7bc:	lsl	x24, x24, #34
   1f7c0:	adds	x24, x1, x24
   1f7c4:	cinc	x23, x23, cs  // cs = hs, nlast
   1f7c8:	lsr	x25, x23, #30
   1f7cc:	sub	x1, x24, x23
   1f7d0:	cmp	x24, x1
   1f7d4:	sbc	x25, x25, xzr
   1f7d8:	lsl	x23, x23, #34
   1f7dc:	adds	x1, x1, x23
   1f7e0:	cinc	x25, x25, cs  // cs = hs, nlast
   1f7e4:	cmp	x25, #0x0
   1f7e8:	sub	x23, x1, x0
   1f7ec:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f7f0:	csel	x1, x23, x1, ls  // ls = plast
   1f7f4:	b	1f684 <PyInit__decimal@@Base+0x54e4>
   1f7f8:	lsr	x2, x2, #24
   1f7fc:	sub	x24, x25, x23
   1f800:	cmp	x25, x24
   1f804:	sbc	x2, x2, xzr
   1f808:	lsl	x23, x23, #40
   1f80c:	adds	x23, x24, x23
   1f810:	cinc	x2, x2, cs  // cs = hs, nlast
   1f814:	lsr	x24, x2, #24
   1f818:	sub	x25, x23, x2
   1f81c:	cmp	x23, x25
   1f820:	sbc	x24, x24, xzr
   1f824:	lsl	x2, x2, #40
   1f828:	adds	x2, x25, x2
   1f82c:	cinc	x24, x24, cs  // cs = hs, nlast
   1f830:	lsr	x23, x24, #24
   1f834:	sub	x25, x2, x24
   1f838:	cmp	x2, x25
   1f83c:	sbc	x23, x23, xzr
   1f840:	lsl	x24, x24, #40
   1f844:	adds	x2, x25, x24
   1f848:	cinc	x23, x23, cs  // cs = hs, nlast
   1f84c:	cmp	x23, #0x0
   1f850:	sub	x23, x2, x0
   1f854:	ccmp	x0, x2, #0x0, eq  // eq = none
   1f858:	csel	x2, x23, x2, ls  // ls = plast
   1f85c:	mul	x25, x1, x4
   1f860:	umulh	x1, x1, x4
   1f864:	lsr	x24, x1, #24
   1f868:	sub	x23, x25, x1
   1f86c:	cmp	x25, x23
   1f870:	sbc	x24, x24, xzr
   1f874:	lsl	x1, x1, #40
   1f878:	adds	x1, x23, x1
   1f87c:	cinc	x24, x24, cs  // cs = hs, nlast
   1f880:	lsr	x23, x24, #24
   1f884:	sub	x25, x1, x24
   1f888:	cmp	x1, x25
   1f88c:	sbc	x23, x23, xzr
   1f890:	lsl	x24, x24, #40
   1f894:	adds	x24, x25, x24
   1f898:	cinc	x23, x23, cs  // cs = hs, nlast
   1f89c:	lsr	x25, x23, #24
   1f8a0:	sub	x1, x24, x23
   1f8a4:	cmp	x24, x1
   1f8a8:	sbc	x25, x25, xzr
   1f8ac:	lsl	x23, x23, #40
   1f8b0:	adds	x1, x1, x23
   1f8b4:	cinc	x25, x25, cs  // cs = hs, nlast
   1f8b8:	cmp	x25, #0x0
   1f8bc:	sub	x23, x1, x0
   1f8c0:	ccmp	x0, x1, #0x0, eq  // eq = none
   1f8c4:	csel	x1, x23, x1, ls  // ls = plast
   1f8c8:	b	1f684 <PyInit__decimal@@Base+0x54e4>
   1f8cc:	add	x16, x16, #0x1
   1f8d0:	add	x17, x17, x30
   1f8d4:	add	x7, x7, #0x8
   1f8d8:	add	x6, x6, #0x8
   1f8dc:	add	x5, x5, #0x8
   1f8e0:	add	x8, x8, #0x8
   1f8e4:	cmp	x18, x16
   1f8e8:	b.ls	1f9c0 <PyInit__decimal@@Base+0x5820>  // b.plast
   1f8ec:	ldr	x4, [x17, #24]
   1f8f0:	mov	x3, #0x0                   	// #0
   1f8f4:	b	1f698 <PyInit__decimal@@Base+0x54f8>
   1f8f8:	lsr	x19, x19, #1
   1f8fc:	lsl	x20, x20, #1
   1f900:	cmp	x19, #0x1
   1f904:	b.hi	1f9c8 <PyInit__decimal@@Base+0x5828>  // b.pmore
   1f908:	ldp	x23, x24, [sp, #48]
   1f90c:	ldp	x25, x26, [sp, #64]
   1f910:	mov	x3, #0x0                   	// #0
   1f914:	mov	x2, #0x0                   	// #0
   1f918:	b	1f98c <PyInit__decimal@@Base+0x57ec>
   1f91c:	mov	x1, x2
   1f920:	mov	w0, #0x1f                  	// #31
   1f924:	tst	w1, #0xffff
   1f928:	b.eq	1f9a0 <PyInit__decimal@@Base+0x5800>  // b.none
   1f92c:	sub	w0, w0, #0x10
   1f930:	tst	w1, #0xff
   1f934:	b.eq	1f9a8 <PyInit__decimal@@Base+0x5808>  // b.none
   1f938:	sub	w0, w0, #0x8
   1f93c:	tst	x1, #0xf
   1f940:	b.eq	1f9b0 <PyInit__decimal@@Base+0x5810>  // b.none
   1f944:	sub	w0, w0, #0x4
   1f948:	tst	x1, #0x3
   1f94c:	b.eq	1f9b8 <PyInit__decimal@@Base+0x5818>  // b.none
   1f950:	sub	w0, w0, #0x2
   1f954:	and	w1, w1, #0x1
   1f958:	sub	w0, w0, w1
   1f95c:	add	w0, w0, #0x1
   1f960:	lsr	x0, x11, x0
   1f964:	sub	x0, x11, x0
   1f968:	eor	x3, x3, x0
   1f96c:	cmp	x11, x2
   1f970:	b.ls	1faa0 <PyInit__decimal@@Base+0x5900>  // b.plast
   1f974:	cmp	x2, x3
   1f978:	b.cs	1f98c <PyInit__decimal@@Base+0x57ec>  // b.hs, b.nlast
   1f97c:	ldr	x0, [x15, x2, lsl #3]
   1f980:	ldr	x1, [x15, x3, lsl #3]
   1f984:	str	x1, [x15, x2, lsl #3]
   1f988:	str	x0, [x15, x3, lsl #3]
   1f98c:	add	x2, x2, #0x1
   1f990:	cbnz	w2, 1f91c <PyInit__decimal@@Base+0x577c>
   1f994:	lsr	x1, x2, #32
   1f998:	mov	w0, #0x3f                  	// #63
   1f99c:	b	1f924 <PyInit__decimal@@Base+0x5784>
   1f9a0:	lsr	x1, x1, #16
   1f9a4:	b	1f930 <PyInit__decimal@@Base+0x5790>
   1f9a8:	lsr	x1, x1, #8
   1f9ac:	b	1f93c <PyInit__decimal@@Base+0x579c>
   1f9b0:	lsr	x1, x1, #4
   1f9b4:	b	1f948 <PyInit__decimal@@Base+0x57a8>
   1f9b8:	lsr	x1, x1, #2
   1f9bc:	b	1f954 <PyInit__decimal@@Base+0x57b4>
   1f9c0:	lsr	x19, x19, #1
   1f9c4:	lsl	x20, x20, #1
   1f9c8:	lsr	x18, x19, #1
   1f9cc:	lsl	x13, x19, #1
   1f9d0:	add	x10, x15, x18, lsl #3
   1f9d4:	add	x9, x15, x19, lsl #3
   1f9d8:	add	x8, x18, x19
   1f9dc:	add	x8, x15, x8, lsl #3
   1f9e0:	mov	x1, #0x0                   	// #0
   1f9e4:	ldr	x5, [x15, x1, lsl #3]
   1f9e8:	ldr	x7, [x10, x1, lsl #3]
   1f9ec:	ldr	x4, [x9, x1, lsl #3]
   1f9f0:	ldr	x6, [x8, x1, lsl #3]
   1f9f4:	add	x2, x7, x5
   1f9f8:	sub	x3, x2, x0
   1f9fc:	cmp	x5, x2
   1fa00:	csel	x2, x3, x2, hi  // hi = pmore
   1fa04:	sub	x3, x2, x0
   1fa08:	cmp	x0, x2
   1fa0c:	csel	x2, x3, x2, ls  // ls = plast
   1fa10:	str	x2, [x15, x1, lsl #3]
   1fa14:	sub	x3, x5, x7
   1fa18:	add	x2, x3, x0
   1fa1c:	cmp	x7, x5
   1fa20:	csel	x3, x2, x3, hi  // hi = pmore
   1fa24:	add	x2, x6, x4
   1fa28:	sub	x5, x2, x0
   1fa2c:	cmp	x4, x2
   1fa30:	csel	x2, x5, x2, hi  // hi = pmore
   1fa34:	sub	x5, x2, x0
   1fa38:	cmp	x0, x2
   1fa3c:	csel	x2, x5, x2, ls  // ls = plast
   1fa40:	str	x2, [x9, x1, lsl #3]
   1fa44:	sub	x2, x4, x6
   1fa48:	add	x5, x2, x0
   1fa4c:	cmp	x6, x4
   1fa50:	csel	x2, x5, x2, hi  // hi = pmore
   1fa54:	str	x3, [x10, x1, lsl #3]
   1fa58:	str	x2, [x8, x1, lsl #3]
   1fa5c:	add	x1, x1, x13
   1fa60:	cmp	x11, x1
   1fa64:	b.hi	1f9e4 <PyInit__decimal@@Base+0x5844>  // b.pmore
   1fa68:	cmp	x19, #0x3
   1fa6c:	b.ls	1f8f8 <PyInit__decimal@@Base+0x5758>  // b.plast
   1fa70:	lsl	x13, x19, #1
   1fa74:	lsl	x30, x20, #3
   1fa78:	add	x17, x22, x30
   1fa7c:	add	x7, x18, #0x1
   1fa80:	add	x7, x15, x7, lsl #3
   1fa84:	add	x5, x19, #0x1
   1fa88:	add	x6, x5, x18
   1fa8c:	add	x6, x15, x6, lsl #3
   1fa90:	add	x5, x15, x5, lsl #3
   1fa94:	mov	x8, x21
   1fa98:	mov	x16, #0x1                   	// #1
   1fa9c:	b	1f8ec <PyInit__decimal@@Base+0x574c>
   1faa0:	ldp	x19, x20, [sp, #16]
   1faa4:	ldp	x21, x22, [sp, #32]
   1faa8:	ldp	x29, x30, [sp], #80
   1faac:	ret
   1fab0:	mov	x3, #0x0                   	// #0
   1fab4:	mov	x2, #0x0                   	// #0
   1fab8:	b	1fb1c <PyInit__decimal@@Base+0x597c>
   1fabc:	mov	x1, x2
   1fac0:	mov	w0, #0x1f                  	// #31
   1fac4:	b	1fb2c <PyInit__decimal@@Base+0x598c>
   1fac8:	lsr	x1, x1, #16
   1facc:	b	1fb38 <PyInit__decimal@@Base+0x5998>
   1fad0:	lsr	x1, x1, #8
   1fad4:	b	1fb44 <PyInit__decimal@@Base+0x59a4>
   1fad8:	lsr	x1, x1, #4
   1fadc:	b	1fb50 <PyInit__decimal@@Base+0x59b0>
   1fae0:	lsr	x1, x1, #2
   1fae4:	and	w1, w1, #0x1
   1fae8:	sub	w0, w0, w1
   1faec:	add	w0, w0, #0x1
   1faf0:	lsr	x0, x11, x0
   1faf4:	sub	x0, x11, x0
   1faf8:	eor	x3, x3, x0
   1fafc:	cmp	x11, x2
   1fb00:	b.ls	1fb60 <PyInit__decimal@@Base+0x59c0>  // b.plast
   1fb04:	cmp	x2, x3
   1fb08:	b.cs	1fb1c <PyInit__decimal@@Base+0x597c>  // b.hs, b.nlast
   1fb0c:	ldr	x0, [x15, x2, lsl #3]
   1fb10:	ldr	x1, [x15, x3, lsl #3]
   1fb14:	str	x1, [x15, x2, lsl #3]
   1fb18:	str	x0, [x15, x3, lsl #3]
   1fb1c:	add	x2, x2, #0x1
   1fb20:	cbnz	w2, 1fabc <PyInit__decimal@@Base+0x591c>
   1fb24:	lsr	x1, x2, #32
   1fb28:	mov	w0, #0x3f                  	// #63
   1fb2c:	tst	w1, #0xffff
   1fb30:	b.eq	1fac8 <PyInit__decimal@@Base+0x5928>  // b.none
   1fb34:	sub	w0, w0, #0x10
   1fb38:	tst	w1, #0xff
   1fb3c:	b.eq	1fad0 <PyInit__decimal@@Base+0x5930>  // b.none
   1fb40:	sub	w0, w0, #0x8
   1fb44:	tst	x1, #0xf
   1fb48:	b.eq	1fad8 <PyInit__decimal@@Base+0x5938>  // b.none
   1fb4c:	sub	w0, w0, #0x4
   1fb50:	tst	x1, #0x3
   1fb54:	b.eq	1fae0 <PyInit__decimal@@Base+0x5940>  // b.none
   1fb58:	sub	w0, w0, #0x2
   1fb5c:	b	1fae4 <PyInit__decimal@@Base+0x5944>
   1fb60:	ret
   1fb64:	stp	x29, x30, [sp, #-48]!
   1fb68:	mov	x29, sp
   1fb6c:	stp	x19, x20, [sp, #16]
   1fb70:	str	x21, [sp, #32]
   1fb74:	mov	x21, x0
   1fb78:	mov	x20, x1
   1fb7c:	mov	w1, #0xffffffff            	// #-1
   1fb80:	mov	x0, x20
   1fb84:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   1fb88:	cbz	x0, 1fbc4 <PyInit__decimal@@Base+0x5a24>
   1fb8c:	mov	x19, x0
   1fb90:	mov	x2, x0
   1fb94:	mov	x1, x20
   1fb98:	mov	x0, x21
   1fb9c:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   1fba0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1fba4:	ldr	x1, [x0, #1704]
   1fba8:	mov	x0, x19
   1fbac:	blr	x1
   1fbb0:	mov	w0, #0x1                   	// #1
   1fbb4:	ldp	x19, x20, [sp, #16]
   1fbb8:	ldr	x21, [sp, #32]
   1fbbc:	ldp	x29, x30, [sp], #48
   1fbc0:	ret
   1fbc4:	mov	w0, #0x0                   	// #0
   1fbc8:	b	1fbb4 <PyInit__decimal@@Base+0x5a14>
   1fbcc:	stp	x29, x30, [sp, #-48]!
   1fbd0:	mov	x29, sp
   1fbd4:	stp	x19, x20, [sp, #16]
   1fbd8:	str	x21, [sp, #32]
   1fbdc:	mov	x21, x0
   1fbe0:	mov	x20, x1
   1fbe4:	mov	w1, #0x1                   	// #1
   1fbe8:	mov	x0, x20
   1fbec:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   1fbf0:	cbz	x0, 1fc2c <PyInit__decimal@@Base+0x5a8c>
   1fbf4:	mov	x19, x0
   1fbf8:	mov	x2, x0
   1fbfc:	mov	x1, x20
   1fc00:	mov	x0, x21
   1fc04:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   1fc08:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   1fc0c:	ldr	x1, [x0, #1704]
   1fc10:	mov	x0, x19
   1fc14:	blr	x1
   1fc18:	mov	w0, #0x1                   	// #1
   1fc1c:	ldp	x19, x20, [sp, #16]
   1fc20:	ldr	x21, [sp, #32]
   1fc24:	ldp	x29, x30, [sp], #48
   1fc28:	ret
   1fc2c:	mov	w0, #0x0                   	// #0
   1fc30:	b	1fc1c <PyInit__decimal@@Base+0x5a7c>
   1fc34:	stp	x29, x30, [sp, #-128]!
   1fc38:	mov	x29, sp
   1fc3c:	stp	x19, x20, [sp, #16]
   1fc40:	stp	x21, x22, [sp, #32]
   1fc44:	stp	x23, x24, [sp, #48]
   1fc48:	stp	x25, x26, [sp, #64]
   1fc4c:	str	x27, [sp, #80]
   1fc50:	mov	x20, x0
   1fc54:	mov	x22, x1
   1fc58:	mov	w23, w2
   1fc5c:	mov	x21, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1fc60:	movk	x21, #0xaaab
   1fc64:	umulh	x21, x1, x21
   1fc68:	lsr	x21, x21, #1
   1fc6c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   1fc70:	add	x0, x0, #0x90
   1fc74:	ldr	x19, [x0, w23, sxtw #3]
   1fc78:	mov	w1, #0xffffffff            	// #-1
   1fc7c:	add	x0, sp, #0x68
   1fc80:	bl	39dec <PyInit__decimal@@Base+0x1fc4c>
   1fc84:	lsl	x24, x21, #3
   1fc88:	add	x9, x20, x24
   1fc8c:	add	x10, x9, x24
   1fc90:	cmp	x20, x9
   1fc94:	b.cs	20254 <PyInit__decimal@@Base+0x60b4>  // b.hs, b.nlast
   1fc98:	ldr	x7, [sp, #112]
   1fc9c:	mov	x12, #0x0                   	// #0
   1fca0:	ldr	x6, [sp, #120]
   1fca4:	mov	x11, #0x0                   	// #0
   1fca8:	mvn	x13, x20
   1fcac:	add	x13, x9, x13
   1fcb0:	lsr	x13, x13, #3
   1fcb4:	mov	x4, #0x0                   	// #0
   1fcb8:	and	x5, x19, #0x100000000
   1fcbc:	and	x8, x19, #0x400000000
   1fcc0:	b	20128 <PyInit__decimal@@Base+0x5f88>
   1fcc4:	lsr	x17, x2, #32
   1fcc8:	sub	x2, x18, x2
   1fccc:	cmp	x18, x2
   1fcd0:	sbc	x17, x17, xzr
   1fcd4:	lsl	x16, x16, #32
   1fcd8:	adds	x2, x2, x16
   1fcdc:	cinc	x17, x17, cs  // cs = hs, nlast
   1fce0:	lsr	x16, x17, #32
   1fce4:	sub	x0, x2, x17
   1fce8:	cmp	x2, x0
   1fcec:	sbc	x16, x16, xzr
   1fcf0:	lsl	x17, x17, #32
   1fcf4:	adds	x0, x0, x17
   1fcf8:	cinc	x16, x16, cs  // cs = hs, nlast
   1fcfc:	cmp	x16, #0x0
   1fd00:	sub	x2, x0, x19
   1fd04:	ccmp	x19, x0, #0x0, eq  // eq = none
   1fd08:	csel	x0, x2, x0, ls  // ls = plast
   1fd0c:	add	x0, x14, x0
   1fd10:	sub	x2, x0, x19
   1fd14:	cmp	x14, x0
   1fd18:	csel	x0, x2, x0, hi  // hi = pmore
   1fd1c:	sub	x2, x0, x19
   1fd20:	cmp	x19, x0
   1fd24:	csel	x0, x2, x0, ls  // ls = plast
   1fd28:	mul	x25, x1, x6
   1fd2c:	umulh	x16, x1, x6
   1fd30:	madd	x16, x1, x11, x16
   1fd34:	mov	x17, x16
   1fd38:	cbnz	x5, 1fe10 <PyInit__decimal@@Base+0x5c70>
   1fd3c:	cbz	x8, 1fef4 <PyInit__decimal@@Base+0x5d54>
   1fd40:	lsr	x2, x16, #30
   1fd44:	sub	x16, x25, x16
   1fd48:	cmp	x25, x16
   1fd4c:	sbc	x2, x2, xzr
   1fd50:	lsl	x17, x17, #34
   1fd54:	adds	x17, x16, x17
   1fd58:	cinc	x2, x2, cs  // cs = hs, nlast
   1fd5c:	lsr	x16, x2, #30
   1fd60:	sub	x18, x17, x2
   1fd64:	cmp	x17, x18
   1fd68:	sbc	x16, x16, xzr
   1fd6c:	lsl	x2, x2, #34
   1fd70:	adds	x18, x18, x2
   1fd74:	cinc	x16, x16, cs  // cs = hs, nlast
   1fd78:	lsr	x17, x16, #30
   1fd7c:	sub	x2, x18, x16
   1fd80:	cmp	x18, x2
   1fd84:	sbc	x17, x17, xzr
   1fd88:	lsl	x16, x16, #34
   1fd8c:	adds	x2, x2, x16
   1fd90:	cinc	x17, x17, cs  // cs = hs, nlast
   1fd94:	cmp	x17, #0x0
   1fd98:	sub	x16, x2, x19
   1fd9c:	ccmp	x19, x2, #0x0, eq  // eq = none
   1fda0:	csel	x2, x16, x2, ls  // ls = plast
   1fda4:	b	1fe58 <PyInit__decimal@@Base+0x5cb8>
   1fda8:	lsr	x0, x2, #24
   1fdac:	sub	x2, x18, x2
   1fdb0:	cmp	x18, x2
   1fdb4:	sbc	x0, x0, xzr
   1fdb8:	lsl	x16, x16, #40
   1fdbc:	adds	x16, x2, x16
   1fdc0:	cinc	x0, x0, cs  // cs = hs, nlast
   1fdc4:	lsr	x2, x0, #24
   1fdc8:	sub	x17, x16, x0
   1fdcc:	cmp	x16, x17
   1fdd0:	sbc	x2, x2, xzr
   1fdd4:	lsl	x0, x0, #40
   1fdd8:	adds	x17, x17, x0
   1fddc:	cinc	x2, x2, cs  // cs = hs, nlast
   1fde0:	lsr	x16, x2, #24
   1fde4:	sub	x0, x17, x2
   1fde8:	cmp	x17, x0
   1fdec:	sbc	x16, x16, xzr
   1fdf0:	lsl	x2, x2, #40
   1fdf4:	adds	x0, x0, x2
   1fdf8:	cinc	x16, x16, cs  // cs = hs, nlast
   1fdfc:	cmp	x16, #0x0
   1fe00:	sub	x2, x0, x19
   1fe04:	ccmp	x19, x0, #0x0, eq  // eq = none
   1fe08:	csel	x0, x2, x0, ls  // ls = plast
   1fe0c:	b	1fd0c <PyInit__decimal@@Base+0x5b6c>
   1fe10:	lsr	x18, x16, #32
   1fe14:	sub	x16, x25, x16
   1fe18:	cmp	x25, x16
   1fe1c:	sbc	x18, x18, xzr
   1fe20:	lsl	x17, x17, #32
   1fe24:	adds	x16, x16, x17
   1fe28:	cinc	x18, x18, cs  // cs = hs, nlast
   1fe2c:	lsr	x17, x18, #32
   1fe30:	sub	x2, x16, x18
   1fe34:	cmp	x16, x2
   1fe38:	sbc	x17, x17, xzr
   1fe3c:	lsl	x18, x18, #32
   1fe40:	adds	x2, x2, x18
   1fe44:	cinc	x17, x17, cs  // cs = hs, nlast
   1fe48:	cmp	x17, #0x0
   1fe4c:	sub	x16, x2, x19
   1fe50:	ccmp	x19, x2, #0x0, eq  // eq = none
   1fe54:	csel	x2, x16, x2, ls  // ls = plast
   1fe58:	add	x2, x0, x2
   1fe5c:	sub	x16, x2, x19
   1fe60:	cmp	x0, x2
   1fe64:	csel	x2, x16, x2, hi  // hi = pmore
   1fe68:	sub	x0, x2, x19
   1fe6c:	cmp	x19, x2
   1fe70:	csel	x2, x0, x2, ls  // ls = plast
   1fe74:	mul	x18, x15, x6
   1fe78:	umulh	x16, x15, x6
   1fe7c:	madd	x16, x15, x11, x16
   1fe80:	mov	x15, x16
   1fe84:	cbnz	x5, 1ff5c <PyInit__decimal@@Base+0x5dbc>
   1fe88:	cbz	x8, 20040 <PyInit__decimal@@Base+0x5ea0>
   1fe8c:	lsr	x0, x16, #30
   1fe90:	sub	x16, x18, x16
   1fe94:	cmp	x18, x16
   1fe98:	sbc	x0, x0, xzr
   1fe9c:	lsl	x15, x15, #34
   1fea0:	adds	x15, x16, x15
   1fea4:	cinc	x0, x0, cs  // cs = hs, nlast
   1fea8:	lsr	x16, x0, #30
   1feac:	sub	x17, x15, x0
   1feb0:	cmp	x15, x17
   1feb4:	sbc	x16, x16, xzr
   1feb8:	lsl	x0, x0, #34
   1febc:	adds	x17, x17, x0
   1fec0:	cinc	x16, x16, cs  // cs = hs, nlast
   1fec4:	lsr	x15, x16, #30
   1fec8:	sub	x0, x17, x16
   1fecc:	cmp	x17, x0
   1fed0:	sbc	x15, x15, xzr
   1fed4:	lsl	x16, x16, #34
   1fed8:	adds	x0, x0, x16
   1fedc:	cinc	x15, x15, cs  // cs = hs, nlast
   1fee0:	cmp	x15, #0x0
   1fee4:	sub	x15, x0, x19
   1fee8:	ccmp	x19, x0, #0x0, eq  // eq = none
   1feec:	csel	x0, x15, x0, ls  // ls = plast
   1fef0:	b	1ffa4 <PyInit__decimal@@Base+0x5e04>
   1fef4:	lsr	x2, x16, #24
   1fef8:	sub	x16, x25, x16
   1fefc:	cmp	x25, x16
   1ff00:	sbc	x2, x2, xzr
   1ff04:	lsl	x17, x17, #40
   1ff08:	adds	x17, x16, x17
   1ff0c:	cinc	x2, x2, cs  // cs = hs, nlast
   1ff10:	lsr	x16, x2, #24
   1ff14:	sub	x18, x17, x2
   1ff18:	cmp	x17, x18
   1ff1c:	sbc	x16, x16, xzr
   1ff20:	lsl	x2, x2, #40
   1ff24:	adds	x18, x18, x2
   1ff28:	cinc	x16, x16, cs  // cs = hs, nlast
   1ff2c:	lsr	x17, x16, #24
   1ff30:	sub	x2, x18, x16
   1ff34:	cmp	x18, x2
   1ff38:	sbc	x17, x17, xzr
   1ff3c:	lsl	x16, x16, #40
   1ff40:	adds	x2, x2, x16
   1ff44:	cinc	x17, x17, cs  // cs = hs, nlast
   1ff48:	cmp	x17, #0x0
   1ff4c:	sub	x16, x2, x19
   1ff50:	ccmp	x19, x2, #0x0, eq  // eq = none
   1ff54:	csel	x2, x16, x2, ls  // ls = plast
   1ff58:	b	1fe58 <PyInit__decimal@@Base+0x5cb8>
   1ff5c:	lsr	x17, x16, #32
   1ff60:	sub	x16, x18, x16
   1ff64:	cmp	x18, x16
   1ff68:	sbc	x17, x17, xzr
   1ff6c:	lsl	x15, x15, #32
   1ff70:	adds	x16, x16, x15
   1ff74:	cinc	x17, x17, cs  // cs = hs, nlast
   1ff78:	lsr	x15, x17, #32
   1ff7c:	sub	x0, x16, x17
   1ff80:	cmp	x16, x0
   1ff84:	sbc	x15, x15, xzr
   1ff88:	lsl	x17, x17, #32
   1ff8c:	adds	x0, x0, x17
   1ff90:	cinc	x15, x15, cs  // cs = hs, nlast
   1ff94:	cmp	x15, #0x0
   1ff98:	sub	x15, x0, x19
   1ff9c:	ccmp	x19, x0, #0x0, eq  // eq = none
   1ffa0:	csel	x0, x15, x0, ls  // ls = plast
   1ffa4:	add	x0, x14, x0
   1ffa8:	sub	x15, x0, x19
   1ffac:	cmp	x14, x0
   1ffb0:	csel	x0, x15, x0, hi  // hi = pmore
   1ffb4:	sub	x14, x0, x19
   1ffb8:	cmp	x19, x0
   1ffbc:	csel	x0, x14, x0, ls  // ls = plast
   1ffc0:	mul	x17, x7, x1
   1ffc4:	umulh	x14, x7, x1
   1ffc8:	madd	x14, x12, x1, x14
   1ffcc:	mov	x15, x14
   1ffd0:	cbnz	x5, 200a8 <PyInit__decimal@@Base+0x5f08>
   1ffd4:	cbz	x8, 201ec <PyInit__decimal@@Base+0x604c>
   1ffd8:	lsr	x1, x14, #30
   1ffdc:	sub	x14, x17, x14
   1ffe0:	cmp	x17, x14
   1ffe4:	sbc	x1, x1, xzr
   1ffe8:	lsl	x15, x15, #34
   1ffec:	adds	x15, x14, x15
   1fff0:	cinc	x1, x1, cs  // cs = hs, nlast
   1fff4:	lsr	x14, x1, #30
   1fff8:	sub	x16, x15, x1
   1fffc:	cmp	x15, x16
   20000:	sbc	x14, x14, xzr
   20004:	lsl	x1, x1, #34
   20008:	adds	x16, x16, x1
   2000c:	cinc	x14, x14, cs  // cs = hs, nlast
   20010:	lsr	x15, x14, #30
   20014:	sub	x1, x16, x14
   20018:	cmp	x16, x1
   2001c:	sbc	x15, x15, xzr
   20020:	lsl	x14, x14, #34
   20024:	adds	x1, x1, x14
   20028:	cinc	x15, x15, cs  // cs = hs, nlast
   2002c:	cmp	x15, #0x0
   20030:	sub	x14, x1, x19
   20034:	ccmp	x19, x1, #0x0, eq  // eq = none
   20038:	csel	x1, x14, x1, ls  // ls = plast
   2003c:	b	200f0 <PyInit__decimal@@Base+0x5f50>
   20040:	lsr	x0, x16, #24
   20044:	sub	x16, x18, x16
   20048:	cmp	x18, x16
   2004c:	sbc	x0, x0, xzr
   20050:	lsl	x15, x15, #40
   20054:	adds	x15, x16, x15
   20058:	cinc	x0, x0, cs  // cs = hs, nlast
   2005c:	lsr	x16, x0, #24
   20060:	sub	x17, x15, x0
   20064:	cmp	x15, x17
   20068:	sbc	x16, x16, xzr
   2006c:	lsl	x0, x0, #40
   20070:	adds	x17, x17, x0
   20074:	cinc	x16, x16, cs  // cs = hs, nlast
   20078:	lsr	x15, x16, #24
   2007c:	sub	x0, x17, x16
   20080:	cmp	x17, x0
   20084:	sbc	x15, x15, xzr
   20088:	lsl	x16, x16, #40
   2008c:	adds	x0, x0, x16
   20090:	cinc	x15, x15, cs  // cs = hs, nlast
   20094:	cmp	x15, #0x0
   20098:	sub	x15, x0, x19
   2009c:	ccmp	x19, x0, #0x0, eq  // eq = none
   200a0:	csel	x0, x15, x0, ls  // ls = plast
   200a4:	b	1ffa4 <PyInit__decimal@@Base+0x5e04>
   200a8:	lsr	x16, x14, #32
   200ac:	sub	x14, x17, x14
   200b0:	cmp	x17, x14
   200b4:	sbc	x16, x16, xzr
   200b8:	lsl	x15, x15, #32
   200bc:	adds	x14, x14, x15
   200c0:	cinc	x16, x16, cs  // cs = hs, nlast
   200c4:	lsr	x15, x16, #32
   200c8:	sub	x1, x14, x16
   200cc:	cmp	x14, x1
   200d0:	sbc	x15, x15, xzr
   200d4:	lsl	x16, x16, #32
   200d8:	adds	x1, x1, x16
   200dc:	cinc	x15, x15, cs  // cs = hs, nlast
   200e0:	cmp	x15, #0x0
   200e4:	sub	x14, x1, x19
   200e8:	ccmp	x19, x1, #0x0, eq  // eq = none
   200ec:	csel	x1, x14, x1, ls  // ls = plast
   200f0:	add	x1, x0, x1
   200f4:	sub	x14, x1, x19
   200f8:	cmp	x0, x1
   200fc:	csel	x1, x14, x1, hi  // hi = pmore
   20100:	sub	x0, x1, x19
   20104:	cmp	x19, x1
   20108:	csel	x1, x0, x1, ls  // ls = plast
   2010c:	str	x1, [x10, x4, lsl #3]
   20110:	str	x2, [x9, x4, lsl #3]
   20114:	str	x3, [x20, x4, lsl #3]
   20118:	add	x0, x4, #0x1
   2011c:	cmp	x13, x4
   20120:	b.eq	20254 <PyInit__decimal@@Base+0x60b4>  // b.none
   20124:	mov	x4, x0
   20128:	ldr	x14, [x20, x4, lsl #3]
   2012c:	ldr	x15, [x9, x4, lsl #3]
   20130:	add	x0, x14, x15
   20134:	sub	x1, x0, x19
   20138:	cmp	x14, x0
   2013c:	csel	x0, x1, x0, hi  // hi = pmore
   20140:	sub	x1, x0, x19
   20144:	cmp	x19, x0
   20148:	csel	x0, x1, x0, ls  // ls = plast
   2014c:	ldr	x1, [x10, x4, lsl #3]
   20150:	add	x3, x1, x0
   20154:	sub	x2, x3, x19
   20158:	cmp	x0, x3
   2015c:	csel	x3, x2, x3, hi  // hi = pmore
   20160:	sub	x0, x3, x19
   20164:	cmp	x19, x3
   20168:	csel	x3, x0, x3, ls  // ls = plast
   2016c:	mul	x18, x15, x7
   20170:	umulh	x2, x15, x7
   20174:	madd	x2, x15, x12, x2
   20178:	mov	x16, x2
   2017c:	cbnz	x5, 1fcc4 <PyInit__decimal@@Base+0x5b24>
   20180:	cbz	x8, 1fda8 <PyInit__decimal@@Base+0x5c08>
   20184:	lsr	x0, x2, #30
   20188:	sub	x2, x18, x2
   2018c:	cmp	x18, x2
   20190:	sbc	x0, x0, xzr
   20194:	lsl	x16, x16, #34
   20198:	adds	x16, x2, x16
   2019c:	cinc	x0, x0, cs  // cs = hs, nlast
   201a0:	lsr	x2, x0, #30
   201a4:	sub	x17, x16, x0
   201a8:	cmp	x16, x17
   201ac:	sbc	x2, x2, xzr
   201b0:	lsl	x0, x0, #34
   201b4:	adds	x17, x17, x0
   201b8:	cinc	x2, x2, cs  // cs = hs, nlast
   201bc:	lsr	x16, x2, #30
   201c0:	sub	x0, x17, x2
   201c4:	cmp	x17, x0
   201c8:	sbc	x16, x16, xzr
   201cc:	lsl	x2, x2, #34
   201d0:	adds	x0, x0, x2
   201d4:	cinc	x16, x16, cs  // cs = hs, nlast
   201d8:	cmp	x16, #0x0
   201dc:	sub	x2, x0, x19
   201e0:	ccmp	x19, x0, #0x0, eq  // eq = none
   201e4:	csel	x0, x2, x0, ls  // ls = plast
   201e8:	b	1fd0c <PyInit__decimal@@Base+0x5b6c>
   201ec:	lsr	x1, x14, #24
   201f0:	sub	x14, x17, x14
   201f4:	cmp	x17, x14
   201f8:	sbc	x1, x1, xzr
   201fc:	lsl	x15, x15, #40
   20200:	adds	x15, x14, x15
   20204:	cinc	x1, x1, cs  // cs = hs, nlast
   20208:	lsr	x14, x1, #24
   2020c:	sub	x16, x15, x1
   20210:	cmp	x15, x16
   20214:	sbc	x14, x14, xzr
   20218:	lsl	x1, x1, #40
   2021c:	adds	x16, x16, x1
   20220:	cinc	x14, x14, cs  // cs = hs, nlast
   20224:	lsr	x15, x14, #24
   20228:	sub	x1, x16, x14
   2022c:	cmp	x16, x1
   20230:	sbc	x15, x15, xzr
   20234:	lsl	x14, x14, #40
   20238:	adds	x1, x1, x14
   2023c:	cinc	x15, x15, cs  // cs = hs, nlast
   20240:	cmp	x15, #0x0
   20244:	sub	x14, x1, x19
   20248:	ccmp	x19, x1, #0x0, eq  // eq = none
   2024c:	csel	x1, x14, x1, ls  // ls = plast
   20250:	b	200f0 <PyInit__decimal@@Base+0x5f50>
   20254:	mov	w2, w23
   20258:	mov	w1, #0xffffffff            	// #-1
   2025c:	mov	x0, x22
   20260:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   20264:	sub	x10, x21, #0x2
   20268:	and	x10, x10, #0xfffffffffffffffe
   2026c:	mov	x8, x21
   20270:	mov	x7, #0x1                   	// #1
   20274:	mov	x9, x7
   20278:	and	x5, x19, #0x400000000
   2027c:	and	x6, x19, #0x100000000
   20280:	mov	x12, x7
   20284:	add	x11, x20, #0x10
   20288:	b	20b14 <PyInit__decimal@@Base+0x6974>
   2028c:	lsr	x4, x3, #32
   20290:	sub	x3, x14, x3
   20294:	cmp	x14, x3
   20298:	sbc	x4, x4, xzr
   2029c:	lsl	x1, x1, #32
   202a0:	adds	x3, x3, x1
   202a4:	cinc	x4, x4, cs  // cs = hs, nlast
   202a8:	lsr	x1, x4, #32
   202ac:	sub	x14, x3, x4
   202b0:	cmp	x3, x14
   202b4:	sbc	x1, x1, xzr
   202b8:	lsl	x4, x4, #32
   202bc:	adds	x3, x14, x4
   202c0:	cinc	x1, x1, cs  // cs = hs, nlast
   202c4:	cmp	x1, #0x0
   202c8:	sub	x1, x3, x19
   202cc:	ccmp	x19, x3, #0x0, eq  // eq = none
   202d0:	csel	x3, x1, x3, ls  // ls = plast
   202d4:	umulh	x1, x13, x13
   202d8:	mul	x4, x13, x13
   202dc:	b	20354 <PyInit__decimal@@Base+0x61b4>
   202e0:	lsr	x3, x3, #24
   202e4:	sub	x4, x14, x1
   202e8:	cmp	x14, x4
   202ec:	sbc	x3, x3, xzr
   202f0:	lsl	x1, x1, #40
   202f4:	adds	x1, x4, x1
   202f8:	cinc	x3, x3, cs  // cs = hs, nlast
   202fc:	lsr	x4, x3, #24
   20300:	sub	x14, x1, x3
   20304:	cmp	x1, x14
   20308:	sbc	x4, x4, xzr
   2030c:	lsl	x3, x3, #40
   20310:	adds	x3, x14, x3
   20314:	cinc	x4, x4, cs  // cs = hs, nlast
   20318:	lsr	x1, x4, #24
   2031c:	sub	x14, x3, x4
   20320:	cmp	x3, x14
   20324:	sbc	x1, x1, xzr
   20328:	lsl	x4, x4, #40
   2032c:	adds	x3, x14, x4
   20330:	cinc	x1, x1, cs  // cs = hs, nlast
   20334:	cmp	x1, #0x0
   20338:	sub	x1, x3, x19
   2033c:	ccmp	x19, x3, #0x0, eq  // eq = none
   20340:	csel	x3, x1, x3, ls  // ls = plast
   20344:	b	20428 <PyInit__decimal@@Base+0x6288>
   20348:	umulh	x1, x4, x4
   2034c:	mul	x4, x4, x4
   20350:	cbz	x6, 20430 <PyInit__decimal@@Base+0x6290>
   20354:	lsr	x13, x1, #32
   20358:	sub	x14, x4, x1
   2035c:	cmp	x14, x4
   20360:	cset	x4, hi  // hi = pmore
   20364:	sub	x13, x13, x4
   20368:	lsl	x1, x1, #32
   2036c:	adds	x1, x14, x1
   20370:	cinc	x13, x13, cs  // cs = hs, nlast
   20374:	lsr	x14, x13, #32
   20378:	sub	x4, x1, x13
   2037c:	cmp	x1, x4
   20380:	sbc	x14, x14, xzr
   20384:	lsl	x13, x13, #32
   20388:	adds	x4, x4, x13
   2038c:	cinc	x14, x14, cs  // cs = hs, nlast
   20390:	cmp	x14, #0x0
   20394:	sub	x1, x4, x19
   20398:	ccmp	x19, x4, #0x0, eq  // eq = none
   2039c:	csel	x4, x1, x4, ls  // ls = plast
   203a0:	lsr	x2, x2, #1
   203a4:	cbz	x2, 2050c <PyInit__decimal@@Base+0x636c>
   203a8:	tbz	w2, #0, 20348 <PyInit__decimal@@Base+0x61a8>
   203ac:	mov	x13, x4
   203b0:	mul	x14, x3, x4
   203b4:	umulh	x3, x3, x4
   203b8:	mov	x1, x3
   203bc:	cbnz	x6, 2028c <PyInit__decimal@@Base+0x60ec>
   203c0:	cbz	x5, 202e0 <PyInit__decimal@@Base+0x6140>
   203c4:	lsr	x3, x3, #30
   203c8:	sub	x4, x14, x1
   203cc:	cmp	x14, x4
   203d0:	sbc	x3, x3, xzr
   203d4:	lsl	x1, x1, #34
   203d8:	adds	x1, x4, x1
   203dc:	cinc	x3, x3, cs  // cs = hs, nlast
   203e0:	lsr	x4, x3, #30
   203e4:	sub	x14, x1, x3
   203e8:	cmp	x1, x14
   203ec:	sbc	x4, x4, xzr
   203f0:	lsl	x3, x3, #34
   203f4:	adds	x3, x14, x3
   203f8:	cinc	x4, x4, cs  // cs = hs, nlast
   203fc:	lsr	x1, x4, #30
   20400:	sub	x14, x3, x4
   20404:	cmp	x3, x14
   20408:	sbc	x1, x1, xzr
   2040c:	lsl	x4, x4, #34
   20410:	adds	x3, x14, x4
   20414:	cinc	x1, x1, cs  // cs = hs, nlast
   20418:	cmp	x1, #0x0
   2041c:	sub	x1, x3, x19
   20420:	ccmp	x19, x3, #0x0, eq  // eq = none
   20424:	csel	x3, x1, x3, ls  // ls = plast
   20428:	umulh	x1, x13, x13
   2042c:	mul	x4, x13, x13
   20430:	cbz	x5, 204a0 <PyInit__decimal@@Base+0x6300>
   20434:	lsr	x14, x1, #30
   20438:	sub	x13, x4, x1
   2043c:	cmp	x13, x4
   20440:	cset	x4, hi  // hi = pmore
   20444:	sub	x14, x14, x4
   20448:	lsl	x1, x1, #34
   2044c:	adds	x1, x13, x1
   20450:	cinc	x14, x14, cs  // cs = hs, nlast
   20454:	lsr	x13, x14, #30
   20458:	sub	x4, x1, x14
   2045c:	cmp	x1, x4
   20460:	sbc	x13, x13, xzr
   20464:	lsl	x14, x14, #34
   20468:	adds	x14, x4, x14
   2046c:	cinc	x13, x13, cs  // cs = hs, nlast
   20470:	lsr	x1, x13, #30
   20474:	sub	x4, x14, x13
   20478:	cmp	x14, x4
   2047c:	sbc	x1, x1, xzr
   20480:	lsl	x13, x13, #34
   20484:	adds	x4, x4, x13
   20488:	cinc	x1, x1, cs  // cs = hs, nlast
   2048c:	cmp	x1, #0x0
   20490:	sub	x1, x4, x19
   20494:	ccmp	x19, x4, #0x0, eq  // eq = none
   20498:	csel	x4, x1, x4, ls  // ls = plast
   2049c:	b	203a0 <PyInit__decimal@@Base+0x6200>
   204a0:	lsr	x14, x1, #24
   204a4:	sub	x13, x4, x1
   204a8:	cmp	x13, x4
   204ac:	cset	x4, hi  // hi = pmore
   204b0:	sub	x14, x14, x4
   204b4:	lsl	x1, x1, #40
   204b8:	adds	x1, x13, x1
   204bc:	cinc	x14, x14, cs  // cs = hs, nlast
   204c0:	lsr	x13, x14, #24
   204c4:	sub	x4, x1, x14
   204c8:	cmp	x1, x4
   204cc:	sbc	x13, x13, xzr
   204d0:	lsl	x14, x14, #40
   204d4:	adds	x14, x4, x14
   204d8:	cinc	x13, x13, cs  // cs = hs, nlast
   204dc:	lsr	x1, x13, #24
   204e0:	sub	x4, x14, x13
   204e4:	cmp	x14, x4
   204e8:	sbc	x1, x1, xzr
   204ec:	lsl	x13, x13, #40
   204f0:	adds	x4, x4, x13
   204f4:	cinc	x1, x1, cs  // cs = hs, nlast
   204f8:	cmp	x1, #0x0
   204fc:	sub	x1, x4, x19
   20500:	ccmp	x19, x4, #0x0, eq  // eq = none
   20504:	csel	x4, x1, x4, ls  // ls = plast
   20508:	b	203a0 <PyInit__decimal@@Base+0x6200>
   2050c:	mul	x13, x3, x3
   20510:	umulh	x2, x3, x3
   20514:	mov	x1, x2
   20518:	mov	x14, x13
   2051c:	and	x18, x19, #0x100000000
   20520:	tbnz	x19, #32, 20594 <PyInit__decimal@@Base+0x63f4>
   20524:	cbz	x5, 20b38 <PyInit__decimal@@Base+0x6998>
   20528:	lsr	x18, x2, #30
   2052c:	sub	x2, x13, x2
   20530:	cmp	x13, x2
   20534:	sbc	x18, x18, xzr
   20538:	lsl	x1, x1, #34
   2053c:	adds	x1, x1, x2
   20540:	cinc	x18, x18, cs  // cs = hs, nlast
   20544:	lsr	x2, x18, #30
   20548:	sub	x4, x1, x18
   2054c:	cmp	x1, x4
   20550:	sbc	x2, x2, xzr
   20554:	lsl	x18, x18, #34
   20558:	adds	x4, x4, x18
   2055c:	cinc	x2, x2, cs  // cs = hs, nlast
   20560:	lsr	x1, x2, #30
   20564:	sub	x15, x4, x2
   20568:	cmp	x4, x15
   2056c:	sbc	x1, x1, xzr
   20570:	lsl	x2, x2, #34
   20574:	adds	x15, x15, x2
   20578:	cinc	x1, x1, cs  // cs = hs, nlast
   2057c:	cmp	x1, #0x0
   20580:	mov	x18, #0x0                   	// #0
   20584:	ccmp	x19, x15, #0x0, eq  // eq = none
   20588:	b.hi	205e0 <PyInit__decimal@@Base+0x6440>  // b.pmore
   2058c:	sub	x15, x15, x19
   20590:	b	205e0 <PyInit__decimal@@Base+0x6440>
   20594:	lsr	x4, x2, #32
   20598:	sub	x2, x13, x2
   2059c:	cmp	x13, x2
   205a0:	sbc	x4, x4, xzr
   205a4:	lsl	x1, x1, #32
   205a8:	adds	x1, x2, x1
   205ac:	cinc	x4, x4, cs  // cs = hs, nlast
   205b0:	lsr	x2, x4, #32
   205b4:	sub	x15, x1, x4
   205b8:	cmp	x15, x1
   205bc:	cset	x1, hi  // hi = pmore
   205c0:	sub	x2, x2, x1
   205c4:	lsl	x4, x4, #32
   205c8:	adds	x15, x15, x4
   205cc:	cinc	x2, x2, cs  // cs = hs, nlast
   205d0:	cmp	x2, #0x0
   205d4:	sub	x1, x15, x19
   205d8:	ccmp	x19, x15, #0x0, eq  // eq = none
   205dc:	csel	x15, x1, x15, ls  // ls = plast
   205e0:	cmp	x21, #0x1
   205e4:	b.eq	20b04 <PyInit__decimal@@Base+0x6964>  // b.none
   205e8:	add	x14, x20, x8, lsl #3
   205ec:	add	x30, x10, x8
   205f0:	add	x30, x11, x30, lsl #3
   205f4:	mov	x1, x9
   205f8:	mov	x17, x15
   205fc:	b	20770 <PyInit__decimal@@Base+0x65d0>
   20600:	mov	x4, x7
   20604:	mov	x3, x9
   20608:	mov	x1, x12
   2060c:	b	205b0 <PyInit__decimal@@Base+0x6410>
   20610:	mov	x1, x18
   20614:	mov	x3, x9
   20618:	mov	x2, x12
   2061c:	b	20538 <PyInit__decimal@@Base+0x6398>
   20620:	lsr	x27, x1, #32
   20624:	sub	x1, x26, x1
   20628:	cmp	x26, x1
   2062c:	sbc	x27, x27, xzr
   20630:	lsl	x2, x2, #32
   20634:	adds	x1, x1, x2
   20638:	cinc	x27, x27, cs  // cs = hs, nlast
   2063c:	lsr	x2, x27, #32
   20640:	sub	x4, x1, x27
   20644:	cmp	x1, x4
   20648:	sbc	x2, x2, xzr
   2064c:	lsl	x27, x27, #32
   20650:	adds	x4, x4, x27
   20654:	cinc	x2, x2, cs  // cs = hs, nlast
   20658:	cmp	x2, #0x0
   2065c:	sub	x1, x4, x19
   20660:	ccmp	x19, x4, #0x0, eq  // eq = none
   20664:	csel	x4, x1, x4, ls  // ls = plast
   20668:	mov	x26, x3
   2066c:	mul	x27, x25, x3
   20670:	umulh	x3, x25, x3
   20674:	lsr	x1, x3, #32
   20678:	sub	x2, x27, x3
   2067c:	cmp	x27, x2
   20680:	sbc	x1, x1, xzr
   20684:	lsl	x3, x3, #32
   20688:	adds	x3, x2, x3
   2068c:	cinc	x1, x1, cs  // cs = hs, nlast
   20690:	lsr	x25, x1, #32
   20694:	sub	x2, x3, x1
   20698:	cmp	x3, x2
   2069c:	sbc	x25, x25, xzr
   206a0:	lsl	x1, x1, #32
   206a4:	adds	x2, x2, x1
   206a8:	cinc	x25, x25, cs  // cs = hs, nlast
   206ac:	cmp	x25, #0x0
   206b0:	sub	x1, x2, x19
   206b4:	ccmp	x19, x2, #0x0, eq  // eq = none
   206b8:	csel	x2, x1, x2, ls  // ls = plast
   206bc:	mul	x25, x13, x15
   206c0:	umulh	x13, x13, x15
   206c4:	lsr	x3, x13, #32
   206c8:	sub	x1, x25, x13
   206cc:	cmp	x25, x1
   206d0:	sbc	x3, x3, xzr
   206d4:	lsl	x13, x13, #32
   206d8:	adds	x13, x1, x13
   206dc:	cinc	x3, x3, cs  // cs = hs, nlast
   206e0:	lsr	x25, x3, #32
   206e4:	sub	x1, x13, x3
   206e8:	cmp	x13, x1
   206ec:	sbc	x25, x25, xzr
   206f0:	lsl	x3, x3, #32
   206f4:	adds	x1, x1, x3
   206f8:	cinc	x25, x25, cs  // cs = hs, nlast
   206fc:	cmp	x25, #0x0
   20700:	sub	x3, x1, x19
   20704:	ccmp	x19, x1, #0x0, eq  // eq = none
   20708:	csel	x1, x3, x1, ls  // ls = plast
   2070c:	mul	x25, x17, x26
   20710:	umulh	x26, x17, x26
   20714:	lsr	x13, x26, #32
   20718:	sub	x3, x25, x26
   2071c:	cmp	x25, x3
   20720:	sbc	x13, x13, xzr
   20724:	lsl	x26, x26, #32
   20728:	adds	x26, x3, x26
   2072c:	cinc	x13, x13, cs  // cs = hs, nlast
   20730:	lsr	x25, x13, #32
   20734:	sub	x3, x26, x13
   20738:	cmp	x26, x3
   2073c:	sbc	x25, x25, xzr
   20740:	lsl	x13, x13, #32
   20744:	adds	x3, x3, x13
   20748:	cinc	x25, x25, cs  // cs = hs, nlast
   2074c:	cmp	x25, #0x0
   20750:	sub	x13, x3, x19
   20754:	ccmp	x19, x3, #0x0, eq  // eq = none
   20758:	csel	x3, x13, x3, ls  // ls = plast
   2075c:	str	x4, [x16]
   20760:	str	x2, [x16, #8]
   20764:	add	x14, x14, #0x10
   20768:	cmp	x30, x14
   2076c:	b.eq	20b04 <PyInit__decimal@@Base+0x6964>  // b.none
   20770:	mov	x16, x14
   20774:	ldr	x25, [x14, #8]
   20778:	mov	x13, x1
   2077c:	ldr	x2, [x14]
   20780:	mul	x26, x2, x1
   20784:	umulh	x1, x2, x1
   20788:	mov	x2, x1
   2078c:	cbnz	x18, 20620 <PyInit__decimal@@Base+0x6480>
   20790:	cbz	x5, 2094c <PyInit__decimal@@Base+0x67ac>
   20794:	lsr	x4, x1, #30
   20798:	sub	x27, x26, x1
   2079c:	cmp	x26, x27
   207a0:	sbc	x4, x4, xzr
   207a4:	lsl	x2, x1, #34
   207a8:	adds	x27, x27, x2
   207ac:	cinc	x4, x4, cs  // cs = hs, nlast
   207b0:	lsr	x1, x4, #30
   207b4:	sub	x26, x27, x4
   207b8:	cmp	x27, x26
   207bc:	sbc	x1, x1, xzr
   207c0:	lsl	x4, x4, #34
   207c4:	adds	x4, x26, x4
   207c8:	cinc	x1, x1, cs  // cs = hs, nlast
   207cc:	lsr	x2, x1, #30
   207d0:	sub	x26, x4, x1
   207d4:	cmp	x4, x26
   207d8:	sbc	x2, x2, xzr
   207dc:	lsl	x1, x1, #34
   207e0:	adds	x4, x26, x1
   207e4:	cinc	x2, x2, cs  // cs = hs, nlast
   207e8:	cmp	x2, #0x0
   207ec:	sub	x1, x4, x19
   207f0:	ccmp	x19, x4, #0x0, eq  // eq = none
   207f4:	csel	x4, x1, x4, ls  // ls = plast
   207f8:	mov	x26, x3
   207fc:	mul	x27, x25, x3
   20800:	umulh	x3, x25, x3
   20804:	lsr	x2, x3, #30
   20808:	sub	x1, x27, x3
   2080c:	cmp	x1, x27
   20810:	cset	x25, hi  // hi = pmore
   20814:	sub	x2, x2, x25
   20818:	lsl	x25, x3, #34
   2081c:	adds	x25, x1, x25
   20820:	cinc	x2, x2, cs  // cs = hs, nlast
   20824:	lsr	x1, x2, #30
   20828:	sub	x3, x25, x2
   2082c:	cmp	x25, x3
   20830:	sbc	x1, x1, xzr
   20834:	lsl	x2, x2, #34
   20838:	adds	x2, x3, x2
   2083c:	cinc	x1, x1, cs  // cs = hs, nlast
   20840:	lsr	x3, x1, #30
   20844:	sub	x25, x2, x1
   20848:	cmp	x2, x25
   2084c:	sbc	x3, x3, xzr
   20850:	lsl	x1, x1, #34
   20854:	adds	x2, x25, x1
   20858:	cinc	x3, x3, cs  // cs = hs, nlast
   2085c:	cmp	x3, #0x0
   20860:	sub	x1, x2, x19
   20864:	ccmp	x19, x2, #0x0, eq  // eq = none
   20868:	csel	x2, x1, x2, ls  // ls = plast
   2086c:	mul	x25, x13, x15
   20870:	umulh	x13, x13, x15
   20874:	lsr	x1, x13, #30
   20878:	sub	x3, x25, x13
   2087c:	cmp	x3, x25
   20880:	cset	x25, hi  // hi = pmore
   20884:	sub	x1, x1, x25
   20888:	lsl	x13, x13, #34
   2088c:	adds	x25, x3, x13
   20890:	cinc	x1, x1, cs  // cs = hs, nlast
   20894:	lsr	x3, x1, #30
   20898:	sub	x13, x25, x1
   2089c:	cmp	x25, x13
   208a0:	sbc	x3, x3, xzr
   208a4:	lsl	x1, x1, #34
   208a8:	adds	x1, x13, x1
   208ac:	cinc	x3, x3, cs  // cs = hs, nlast
   208b0:	lsr	x13, x3, #30
   208b4:	sub	x25, x1, x3
   208b8:	cmp	x1, x25
   208bc:	sbc	x13, x13, xzr
   208c0:	lsl	x3, x3, #34
   208c4:	adds	x1, x25, x3
   208c8:	cinc	x13, x13, cs  // cs = hs, nlast
   208cc:	cmp	x13, #0x0
   208d0:	sub	x3, x1, x19
   208d4:	ccmp	x19, x1, #0x0, eq  // eq = none
   208d8:	csel	x1, x3, x1, ls  // ls = plast
   208dc:	mul	x25, x17, x26
   208e0:	umulh	x26, x17, x26
   208e4:	lsr	x3, x26, #30
   208e8:	sub	x13, x25, x26
   208ec:	cmp	x25, x13
   208f0:	sbc	x3, x3, xzr
   208f4:	lsl	x26, x26, #34
   208f8:	adds	x26, x13, x26
   208fc:	cinc	x3, x3, cs  // cs = hs, nlast
   20900:	lsr	x13, x3, #30
   20904:	sub	x25, x26, x3
   20908:	cmp	x26, x25
   2090c:	sbc	x13, x13, xzr
   20910:	lsl	x3, x3, #34
   20914:	adds	x3, x25, x3
   20918:	cinc	x13, x13, cs  // cs = hs, nlast
   2091c:	lsr	x25, x13, #30
   20920:	sub	x26, x3, x13
   20924:	cmp	x3, x26
   20928:	sbc	x25, x25, xzr
   2092c:	lsl	x13, x13, #34
   20930:	adds	x3, x26, x13
   20934:	cinc	x25, x25, cs  // cs = hs, nlast
   20938:	cmp	x25, #0x0
   2093c:	sub	x13, x3, x19
   20940:	ccmp	x19, x3, #0x0, eq  // eq = none
   20944:	csel	x3, x13, x3, ls  // ls = plast
   20948:	b	2075c <PyInit__decimal@@Base+0x65bc>
   2094c:	lsr	x4, x1, #24
   20950:	sub	x1, x26, x1
   20954:	cmp	x26, x1
   20958:	sbc	x4, x4, xzr
   2095c:	lsl	x2, x2, #40
   20960:	adds	x2, x1, x2
   20964:	cinc	x4, x4, cs  // cs = hs, nlast
   20968:	lsr	x1, x4, #24
   2096c:	sub	x26, x2, x4
   20970:	cmp	x2, x26
   20974:	sbc	x1, x1, xzr
   20978:	lsl	x4, x4, #40
   2097c:	adds	x4, x26, x4
   20980:	cinc	x1, x1, cs  // cs = hs, nlast
   20984:	lsr	x2, x1, #24
   20988:	sub	x26, x4, x1
   2098c:	cmp	x4, x26
   20990:	sbc	x2, x2, xzr
   20994:	lsl	x1, x1, #40
   20998:	adds	x4, x26, x1
   2099c:	cinc	x2, x2, cs  // cs = hs, nlast
   209a0:	cmp	x2, #0x0
   209a4:	sub	x1, x4, x19
   209a8:	ccmp	x19, x4, #0x0, eq  // eq = none
   209ac:	csel	x4, x1, x4, ls  // ls = plast
   209b0:	mov	x26, x3
   209b4:	mul	x1, x25, x3
   209b8:	umulh	x3, x25, x3
   209bc:	lsr	x2, x3, #24
   209c0:	sub	x25, x1, x3
   209c4:	cmp	x25, x1
   209c8:	cset	x1, hi  // hi = pmore
   209cc:	sub	x2, x2, x1
   209d0:	lsl	x3, x3, #40
   209d4:	adds	x3, x25, x3
   209d8:	cinc	x2, x2, cs  // cs = hs, nlast
   209dc:	lsr	x1, x2, #24
   209e0:	sub	x27, x3, x2
   209e4:	cmp	x3, x27
   209e8:	sbc	x1, x1, xzr
   209ec:	lsl	x2, x2, #40
   209f0:	adds	x2, x27, x2
   209f4:	cinc	x1, x1, cs  // cs = hs, nlast
   209f8:	lsr	x3, x1, #24
   209fc:	sub	x25, x2, x1
   20a00:	cmp	x2, x25
   20a04:	sbc	x3, x3, xzr
   20a08:	lsl	x1, x1, #40
   20a0c:	adds	x2, x25, x1
   20a10:	cinc	x3, x3, cs  // cs = hs, nlast
   20a14:	cmp	x3, #0x0
   20a18:	sub	x1, x2, x19
   20a1c:	ccmp	x19, x2, #0x0, eq  // eq = none
   20a20:	csel	x2, x1, x2, ls  // ls = plast
   20a24:	mul	x25, x13, x15
   20a28:	umulh	x13, x13, x15
   20a2c:	lsr	x1, x13, #24
   20a30:	sub	x3, x25, x13
   20a34:	cmp	x3, x25
   20a38:	cset	x25, hi  // hi = pmore
   20a3c:	sub	x1, x1, x25
   20a40:	lsl	x13, x13, #40
   20a44:	adds	x13, x3, x13
   20a48:	cinc	x1, x1, cs  // cs = hs, nlast
   20a4c:	lsr	x3, x1, #24
   20a50:	sub	x25, x13, x1
   20a54:	cmp	x13, x25
   20a58:	sbc	x3, x3, xzr
   20a5c:	lsl	x1, x1, #40
   20a60:	adds	x1, x25, x1
   20a64:	cinc	x3, x3, cs  // cs = hs, nlast
   20a68:	lsr	x13, x3, #24
   20a6c:	sub	x25, x1, x3
   20a70:	cmp	x1, x25
   20a74:	sbc	x13, x13, xzr
   20a78:	lsl	x3, x3, #40
   20a7c:	adds	x1, x25, x3
   20a80:	cinc	x13, x13, cs  // cs = hs, nlast
   20a84:	cmp	x13, #0x0
   20a88:	sub	x3, x1, x19
   20a8c:	ccmp	x19, x1, #0x0, eq  // eq = none
   20a90:	csel	x1, x3, x1, ls  // ls = plast
   20a94:	mul	x25, x17, x26
   20a98:	umulh	x26, x17, x26
   20a9c:	lsr	x3, x26, #24
   20aa0:	sub	x13, x25, x26
   20aa4:	cmp	x25, x13
   20aa8:	sbc	x3, x3, xzr
   20aac:	lsl	x26, x26, #40
   20ab0:	adds	x26, x13, x26
   20ab4:	cinc	x3, x3, cs  // cs = hs, nlast
   20ab8:	lsr	x13, x3, #24
   20abc:	sub	x25, x26, x3
   20ac0:	cmp	x26, x25
   20ac4:	sbc	x13, x13, xzr
   20ac8:	lsl	x3, x3, #40
   20acc:	adds	x3, x25, x3
   20ad0:	cinc	x13, x13, cs  // cs = hs, nlast
   20ad4:	lsr	x25, x13, #24
   20ad8:	sub	x26, x3, x13
   20adc:	cmp	x3, x26
   20ae0:	sbc	x25, x25, xzr
   20ae4:	lsl	x13, x13, #40
   20ae8:	adds	x3, x26, x13
   20aec:	cinc	x25, x25, cs  // cs = hs, nlast
   20af0:	cmp	x25, #0x0
   20af4:	sub	x13, x3, x19
   20af8:	ccmp	x19, x3, #0x0, eq  // eq = none
   20afc:	csel	x3, x13, x3, ls  // ls = plast
   20b00:	b	2075c <PyInit__decimal@@Base+0x65bc>
   20b04:	add	x7, x7, #0x1
   20b08:	add	x8, x8, x21
   20b0c:	cmp	x7, #0x3
   20b10:	b.eq	20ba8 <PyInit__decimal@@Base+0x6a08>  // b.none
   20b14:	mov	x4, x0
   20b18:	mov	x2, x7
   20b1c:	mov	x3, x9
   20b20:	cbnz	x7, 203a8 <PyInit__decimal@@Base+0x6208>
   20b24:	and	x18, x19, #0x100000000
   20b28:	tbnz	x19, #32, 20600 <PyInit__decimal@@Base+0x6460>
   20b2c:	mov	x1, x5
   20b30:	cbnz	x5, 20610 <PyInit__decimal@@Base+0x6470>
   20b34:	mov	x14, x12
   20b38:	lsr	x4, x1, #24
   20b3c:	sub	x2, x14, x1
   20b40:	cmp	x2, x14
   20b44:	cset	x13, hi  // hi = pmore
   20b48:	sub	x4, x4, x13
   20b4c:	lsl	x1, x1, #40
   20b50:	adds	x1, x2, x1
   20b54:	cinc	x4, x4, cs  // cs = hs, nlast
   20b58:	lsr	x2, x4, #24
   20b5c:	sub	x13, x1, x4
   20b60:	cmp	x1, x13
   20b64:	sbc	x2, x2, xzr
   20b68:	lsl	x4, x4, #40
   20b6c:	adds	x4, x13, x4
   20b70:	cinc	x2, x2, cs  // cs = hs, nlast
   20b74:	lsr	x1, x2, #24
   20b78:	sub	x15, x4, x2
   20b7c:	cmp	x4, x15
   20b80:	sbc	x1, x1, xzr
   20b84:	lsl	x2, x2, #40
   20b88:	adds	x15, x15, x2
   20b8c:	cinc	x1, x1, cs  // cs = hs, nlast
   20b90:	cmp	x1, #0x0
   20b94:	mov	x18, #0x0                   	// #0
   20b98:	ccmp	x19, x15, #0x0, eq  // eq = none
   20b9c:	b.hi	205e0 <PyInit__decimal@@Base+0x6440>  // b.pmore
   20ba0:	sub	x15, x15, x19
   20ba4:	b	205e0 <PyInit__decimal@@Base+0x6440>
   20ba8:	add	x22, x20, x22, lsl #3
   20bac:	cmp	x20, x22
   20bb0:	b.cs	20bf4 <PyInit__decimal@@Base+0x6a54>  // b.hs, b.nlast
   20bb4:	mov	w2, w23
   20bb8:	mov	x1, x21
   20bbc:	mov	x0, x20
   20bc0:	bl	3a0cc <PyInit__decimal@@Base+0x1ff2c>
   20bc4:	cbz	w0, 20bd8 <PyInit__decimal@@Base+0x6a38>
   20bc8:	add	x20, x20, x24
   20bcc:	cmp	x20, x22
   20bd0:	b.cc	20bb4 <PyInit__decimal@@Base+0x6a14>  // b.lo, b.ul, b.last
   20bd4:	mov	w0, #0x1                   	// #1
   20bd8:	ldp	x19, x20, [sp, #16]
   20bdc:	ldp	x21, x22, [sp, #32]
   20be0:	ldp	x23, x24, [sp, #48]
   20be4:	ldp	x25, x26, [sp, #64]
   20be8:	ldr	x27, [sp, #80]
   20bec:	ldp	x29, x30, [sp], #128
   20bf0:	ret
   20bf4:	mov	w0, #0x1                   	// #1
   20bf8:	b	20bd8 <PyInit__decimal@@Base+0x6a38>
   20bfc:	stp	x29, x30, [sp, #-112]!
   20c00:	mov	x29, sp
   20c04:	stp	x19, x20, [sp, #16]
   20c08:	stp	x21, x22, [sp, #32]
   20c0c:	stp	x23, x24, [sp, #48]
   20c10:	str	x25, [sp, #64]
   20c14:	mov	x21, x0
   20c18:	mov	x23, x1
   20c1c:	mov	w22, w2
   20c20:	mov	x20, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   20c24:	movk	x20, #0xaaab
   20c28:	umulh	x20, x1, x20
   20c2c:	lsr	x20, x20, #1
   20c30:	add	x24, x0, x1, lsl #3
   20c34:	cmp	x0, x24
   20c38:	b.cs	20c64 <PyInit__decimal@@Base+0x6ac4>  // b.hs, b.nlast
   20c3c:	lsl	x25, x20, #3
   20c40:	mov	x19, x0
   20c44:	mov	w2, w22
   20c48:	mov	x1, x20
   20c4c:	mov	x0, x19
   20c50:	bl	3ac34 <PyInit__decimal@@Base+0x20a94>
   20c54:	cbz	w0, 21b24 <PyInit__decimal@@Base+0x7984>
   20c58:	add	x19, x19, x25
   20c5c:	cmp	x19, x24
   20c60:	b.cc	20c44 <PyInit__decimal@@Base+0x6aa4>  // b.lo, b.ul, b.last
   20c64:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   20c68:	add	x0, x0, #0x90
   20c6c:	ldr	x19, [x0, w22, sxtw #3]
   20c70:	mov	w2, w22
   20c74:	mov	w1, #0x1                   	// #1
   20c78:	mov	x0, x23
   20c7c:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   20c80:	mov	x9, x20
   20c84:	mov	x8, #0x1                   	// #1
   20c88:	mov	x10, x8
   20c8c:	and	x6, x19, #0x400000000
   20c90:	and	x7, x19, #0x100000000
   20c94:	mov	x11, x8
   20c98:	b	21514 <PyInit__decimal@@Base+0x7374>
   20c9c:	lsr	x4, x3, #32
   20ca0:	sub	x3, x12, x3
   20ca4:	cmp	x12, x3
   20ca8:	sbc	x4, x4, xzr
   20cac:	lsl	x1, x1, #32
   20cb0:	adds	x3, x3, x1
   20cb4:	cinc	x4, x4, cs  // cs = hs, nlast
   20cb8:	lsr	x1, x4, #32
   20cbc:	sub	x12, x3, x4
   20cc0:	cmp	x3, x12
   20cc4:	sbc	x1, x1, xzr
   20cc8:	lsl	x4, x4, #32
   20ccc:	adds	x3, x12, x4
   20cd0:	cinc	x1, x1, cs  // cs = hs, nlast
   20cd4:	cmp	x1, #0x0
   20cd8:	sub	x1, x3, x19
   20cdc:	ccmp	x19, x3, #0x0, eq  // eq = none
   20ce0:	csel	x3, x1, x3, ls  // ls = plast
   20ce4:	umulh	x1, x5, x5
   20ce8:	mul	x4, x5, x5
   20cec:	b	20d64 <PyInit__decimal@@Base+0x6bc4>
   20cf0:	lsr	x3, x3, #24
   20cf4:	sub	x4, x12, x1
   20cf8:	cmp	x12, x4
   20cfc:	sbc	x3, x3, xzr
   20d00:	lsl	x1, x1, #40
   20d04:	adds	x1, x4, x1
   20d08:	cinc	x3, x3, cs  // cs = hs, nlast
   20d0c:	lsr	x4, x3, #24
   20d10:	sub	x12, x1, x3
   20d14:	cmp	x1, x12
   20d18:	sbc	x4, x4, xzr
   20d1c:	lsl	x3, x3, #40
   20d20:	adds	x3, x12, x3
   20d24:	cinc	x4, x4, cs  // cs = hs, nlast
   20d28:	lsr	x1, x4, #24
   20d2c:	sub	x12, x3, x4
   20d30:	cmp	x3, x12
   20d34:	sbc	x1, x1, xzr
   20d38:	lsl	x4, x4, #40
   20d3c:	adds	x3, x12, x4
   20d40:	cinc	x1, x1, cs  // cs = hs, nlast
   20d44:	cmp	x1, #0x0
   20d48:	sub	x1, x3, x19
   20d4c:	ccmp	x19, x3, #0x0, eq  // eq = none
   20d50:	csel	x3, x1, x3, ls  // ls = plast
   20d54:	b	20e38 <PyInit__decimal@@Base+0x6c98>
   20d58:	umulh	x1, x4, x4
   20d5c:	mul	x4, x4, x4
   20d60:	cbz	x7, 20e40 <PyInit__decimal@@Base+0x6ca0>
   20d64:	lsr	x5, x1, #32
   20d68:	sub	x12, x4, x1
   20d6c:	cmp	x12, x4
   20d70:	cset	x4, hi  // hi = pmore
   20d74:	sub	x5, x5, x4
   20d78:	lsl	x1, x1, #32
   20d7c:	adds	x1, x12, x1
   20d80:	cinc	x5, x5, cs  // cs = hs, nlast
   20d84:	lsr	x12, x5, #32
   20d88:	sub	x4, x1, x5
   20d8c:	cmp	x1, x4
   20d90:	sbc	x12, x12, xzr
   20d94:	lsl	x5, x5, #32
   20d98:	adds	x4, x4, x5
   20d9c:	cinc	x12, x12, cs  // cs = hs, nlast
   20da0:	cmp	x12, #0x0
   20da4:	sub	x1, x4, x19
   20da8:	ccmp	x19, x4, #0x0, eq  // eq = none
   20dac:	csel	x4, x1, x4, ls  // ls = plast
   20db0:	lsr	x2, x2, #1
   20db4:	cbz	x2, 20f1c <PyInit__decimal@@Base+0x6d7c>
   20db8:	tbz	w2, #0, 20d58 <PyInit__decimal@@Base+0x6bb8>
   20dbc:	mov	x5, x4
   20dc0:	mul	x12, x3, x4
   20dc4:	umulh	x3, x3, x4
   20dc8:	mov	x1, x3
   20dcc:	cbnz	x7, 20c9c <PyInit__decimal@@Base+0x6afc>
   20dd0:	cbz	x6, 20cf0 <PyInit__decimal@@Base+0x6b50>
   20dd4:	lsr	x3, x3, #30
   20dd8:	sub	x4, x12, x1
   20ddc:	cmp	x12, x4
   20de0:	sbc	x3, x3, xzr
   20de4:	lsl	x1, x1, #34
   20de8:	adds	x1, x4, x1
   20dec:	cinc	x3, x3, cs  // cs = hs, nlast
   20df0:	lsr	x4, x3, #30
   20df4:	sub	x12, x1, x3
   20df8:	cmp	x1, x12
   20dfc:	sbc	x4, x4, xzr
   20e00:	lsl	x3, x3, #34
   20e04:	adds	x3, x12, x3
   20e08:	cinc	x4, x4, cs  // cs = hs, nlast
   20e0c:	lsr	x1, x4, #30
   20e10:	sub	x12, x3, x4
   20e14:	cmp	x3, x12
   20e18:	sbc	x1, x1, xzr
   20e1c:	lsl	x4, x4, #34
   20e20:	adds	x3, x12, x4
   20e24:	cinc	x1, x1, cs  // cs = hs, nlast
   20e28:	cmp	x1, #0x0
   20e2c:	sub	x1, x3, x19
   20e30:	ccmp	x19, x3, #0x0, eq  // eq = none
   20e34:	csel	x3, x1, x3, ls  // ls = plast
   20e38:	umulh	x1, x5, x5
   20e3c:	mul	x4, x5, x5
   20e40:	cbz	x6, 20eb0 <PyInit__decimal@@Base+0x6d10>
   20e44:	lsr	x12, x1, #30
   20e48:	sub	x5, x4, x1
   20e4c:	cmp	x5, x4
   20e50:	cset	x4, hi  // hi = pmore
   20e54:	sub	x12, x12, x4
   20e58:	lsl	x1, x1, #34
   20e5c:	adds	x1, x5, x1
   20e60:	cinc	x12, x12, cs  // cs = hs, nlast
   20e64:	lsr	x5, x12, #30
   20e68:	sub	x4, x1, x12
   20e6c:	cmp	x1, x4
   20e70:	sbc	x5, x5, xzr
   20e74:	lsl	x12, x12, #34
   20e78:	adds	x12, x4, x12
   20e7c:	cinc	x5, x5, cs  // cs = hs, nlast
   20e80:	lsr	x1, x5, #30
   20e84:	sub	x4, x12, x5
   20e88:	cmp	x12, x4
   20e8c:	sbc	x1, x1, xzr
   20e90:	lsl	x5, x5, #34
   20e94:	adds	x4, x4, x5
   20e98:	cinc	x1, x1, cs  // cs = hs, nlast
   20e9c:	cmp	x1, #0x0
   20ea0:	sub	x1, x4, x19
   20ea4:	ccmp	x19, x4, #0x0, eq  // eq = none
   20ea8:	csel	x4, x1, x4, ls  // ls = plast
   20eac:	b	20db0 <PyInit__decimal@@Base+0x6c10>
   20eb0:	lsr	x12, x1, #24
   20eb4:	sub	x5, x4, x1
   20eb8:	cmp	x5, x4
   20ebc:	cset	x4, hi  // hi = pmore
   20ec0:	sub	x12, x12, x4
   20ec4:	lsl	x1, x1, #40
   20ec8:	adds	x1, x5, x1
   20ecc:	cinc	x12, x12, cs  // cs = hs, nlast
   20ed0:	lsr	x5, x12, #24
   20ed4:	sub	x4, x1, x12
   20ed8:	cmp	x1, x4
   20edc:	sbc	x5, x5, xzr
   20ee0:	lsl	x12, x12, #40
   20ee4:	adds	x12, x4, x12
   20ee8:	cinc	x5, x5, cs  // cs = hs, nlast
   20eec:	lsr	x1, x5, #24
   20ef0:	sub	x4, x12, x5
   20ef4:	cmp	x12, x4
   20ef8:	sbc	x1, x1, xzr
   20efc:	lsl	x5, x5, #40
   20f00:	adds	x4, x4, x5
   20f04:	cinc	x1, x1, cs  // cs = hs, nlast
   20f08:	cmp	x1, #0x0
   20f0c:	sub	x1, x4, x19
   20f10:	ccmp	x19, x4, #0x0, eq  // eq = none
   20f14:	csel	x4, x1, x4, ls  // ls = plast
   20f18:	b	20db0 <PyInit__decimal@@Base+0x6c10>
   20f1c:	mul	x5, x3, x3
   20f20:	umulh	x2, x3, x3
   20f24:	mov	x1, x2
   20f28:	mov	x12, x5
   20f2c:	and	x24, x19, #0x100000000
   20f30:	tbnz	x19, #32, 20fa4 <PyInit__decimal@@Base+0x6e04>
   20f34:	cbz	x6, 21b48 <PyInit__decimal@@Base+0x79a8>
   20f38:	lsr	x24, x2, #30
   20f3c:	sub	x2, x5, x2
   20f40:	cmp	x5, x2
   20f44:	sbc	x24, x24, xzr
   20f48:	lsl	x1, x1, #34
   20f4c:	adds	x1, x1, x2
   20f50:	cinc	x24, x24, cs  // cs = hs, nlast
   20f54:	lsr	x2, x24, #30
   20f58:	sub	x4, x1, x24
   20f5c:	cmp	x1, x4
   20f60:	sbc	x2, x2, xzr
   20f64:	lsl	x24, x24, #34
   20f68:	adds	x4, x4, x24
   20f6c:	cinc	x2, x2, cs  // cs = hs, nlast
   20f70:	lsr	x1, x2, #30
   20f74:	sub	x14, x4, x2
   20f78:	cmp	x4, x14
   20f7c:	sbc	x1, x1, xzr
   20f80:	lsl	x2, x2, #34
   20f84:	adds	x14, x14, x2
   20f88:	cinc	x1, x1, cs  // cs = hs, nlast
   20f8c:	cmp	x1, #0x0
   20f90:	mov	x24, #0x0                   	// #0
   20f94:	ccmp	x19, x14, #0x0, eq  // eq = none
   20f98:	b.hi	20ff0 <PyInit__decimal@@Base+0x6e50>  // b.pmore
   20f9c:	sub	x14, x14, x19
   20fa0:	b	20ff0 <PyInit__decimal@@Base+0x6e50>
   20fa4:	lsr	x4, x2, #32
   20fa8:	sub	x2, x5, x2
   20fac:	cmp	x5, x2
   20fb0:	sbc	x4, x4, xzr
   20fb4:	lsl	x1, x1, #32
   20fb8:	adds	x1, x2, x1
   20fbc:	cinc	x4, x4, cs  // cs = hs, nlast
   20fc0:	lsr	x2, x4, #32
   20fc4:	sub	x14, x1, x4
   20fc8:	cmp	x14, x1
   20fcc:	cset	x1, hi  // hi = pmore
   20fd0:	sub	x2, x2, x1
   20fd4:	lsl	x4, x4, #32
   20fd8:	adds	x14, x14, x4
   20fdc:	cinc	x2, x2, cs  // cs = hs, nlast
   20fe0:	cmp	x2, #0x0
   20fe4:	sub	x1, x14, x19
   20fe8:	ccmp	x19, x14, #0x0, eq  // eq = none
   20fec:	csel	x14, x1, x14, ls  // ls = plast
   20ff0:	cmp	x23, #0x2
   20ff4:	b.ls	21504 <PyInit__decimal@@Base+0x7364>  // b.plast
   20ff8:	add	x13, x21, x9, lsl #3
   20ffc:	mov	x1, x10
   21000:	mov	x15, #0x0                   	// #0
   21004:	mov	x17, x14
   21008:	b	21174 <PyInit__decimal@@Base+0x6fd4>
   2100c:	mov	x4, x8
   21010:	mov	x3, x10
   21014:	mov	x1, x11
   21018:	b	20fc0 <PyInit__decimal@@Base+0x6e20>
   2101c:	lsr	x18, x1, #32
   21020:	sub	x1, x30, x1
   21024:	cmp	x30, x1
   21028:	sbc	x18, x18, xzr
   2102c:	lsl	x12, x12, #32
   21030:	adds	x1, x1, x12
   21034:	cinc	x18, x18, cs  // cs = hs, nlast
   21038:	lsr	x12, x18, #32
   2103c:	sub	x4, x1, x18
   21040:	cmp	x1, x4
   21044:	sbc	x12, x12, xzr
   21048:	lsl	x18, x18, #32
   2104c:	adds	x4, x4, x18
   21050:	cinc	x12, x12, cs  // cs = hs, nlast
   21054:	cmp	x12, #0x0
   21058:	sub	x1, x4, x19
   2105c:	ccmp	x19, x4, #0x0, eq  // eq = none
   21060:	csel	x4, x1, x4, ls  // ls = plast
   21064:	mov	x12, x3
   21068:	mul	x25, x2, x3
   2106c:	umulh	x3, x2, x3
   21070:	lsr	x1, x3, #32
   21074:	sub	x18, x25, x3
   21078:	cmp	x25, x18
   2107c:	sbc	x1, x1, xzr
   21080:	lsl	x3, x3, #32
   21084:	adds	x18, x18, x3
   21088:	cinc	x1, x1, cs  // cs = hs, nlast
   2108c:	lsr	x3, x1, #32
   21090:	sub	x2, x18, x1
   21094:	cmp	x18, x2
   21098:	sbc	x3, x3, xzr
   2109c:	lsl	x1, x1, #32
   210a0:	adds	x2, x2, x1
   210a4:	cinc	x3, x3, cs  // cs = hs, nlast
   210a8:	cmp	x3, #0x0
   210ac:	sub	x1, x2, x19
   210b0:	ccmp	x19, x2, #0x0, eq  // eq = none
   210b4:	csel	x2, x1, x2, ls  // ls = plast
   210b8:	mul	x18, x5, x14
   210bc:	umulh	x5, x5, x14
   210c0:	lsr	x3, x5, #32
   210c4:	sub	x1, x18, x5
   210c8:	cmp	x1, x18
   210cc:	cset	x18, hi  // hi = pmore
   210d0:	sub	x3, x3, x18
   210d4:	lsl	x5, x5, #32
   210d8:	adds	x5, x1, x5
   210dc:	cinc	x3, x3, cs  // cs = hs, nlast
   210e0:	lsr	x18, x3, #32
   210e4:	sub	x1, x5, x3
   210e8:	cmp	x5, x1
   210ec:	sbc	x18, x18, xzr
   210f0:	lsl	x3, x3, #32
   210f4:	adds	x1, x1, x3
   210f8:	cinc	x18, x18, cs  // cs = hs, nlast
   210fc:	cmp	x18, #0x0
   21100:	sub	x3, x1, x19
   21104:	ccmp	x19, x1, #0x0, eq  // eq = none
   21108:	csel	x1, x3, x1, ls  // ls = plast
   2110c:	mul	x18, x17, x12
   21110:	umulh	x3, x17, x12
   21114:	lsr	x5, x3, #32
   21118:	sub	x12, x18, x3
   2111c:	cmp	x18, x12
   21120:	sbc	x5, x5, xzr
   21124:	lsl	x3, x3, #32
   21128:	adds	x3, x12, x3
   2112c:	cinc	x5, x5, cs  // cs = hs, nlast
   21130:	lsr	x12, x5, #32
   21134:	sub	x18, x3, x5
   21138:	cmp	x3, x18
   2113c:	sbc	x12, x12, xzr
   21140:	lsl	x5, x5, #32
   21144:	adds	x3, x18, x5
   21148:	cinc	x12, x12, cs  // cs = hs, nlast
   2114c:	cmp	x12, #0x0
   21150:	sub	x5, x3, x19
   21154:	ccmp	x19, x3, #0x0, eq  // eq = none
   21158:	csel	x3, x5, x3, ls  // ls = plast
   2115c:	str	x4, [x16]
   21160:	str	x2, [x16, #8]
   21164:	add	x15, x15, #0x2
   21168:	add	x13, x13, #0x10
   2116c:	cmp	x20, x15
   21170:	b.ls	21504 <PyInit__decimal@@Base+0x7364>  // b.plast
   21174:	mov	x16, x13
   21178:	ldr	x2, [x13, #8]
   2117c:	mov	x5, x1
   21180:	ldr	x4, [x13]
   21184:	mul	x30, x4, x1
   21188:	umulh	x1, x4, x1
   2118c:	mov	x12, x1
   21190:	cbnz	x24, 2101c <PyInit__decimal@@Base+0x6e7c>
   21194:	cbz	x6, 2134c <PyInit__decimal@@Base+0x71ac>
   21198:	lsr	x4, x1, #30
   2119c:	sub	x1, x30, x1
   211a0:	cmp	x30, x1
   211a4:	sbc	x4, x4, xzr
   211a8:	lsl	x12, x12, #34
   211ac:	adds	x12, x1, x12
   211b0:	cinc	x4, x4, cs  // cs = hs, nlast
   211b4:	lsr	x1, x4, #30
   211b8:	sub	x18, x12, x4
   211bc:	cmp	x12, x18
   211c0:	sbc	x1, x1, xzr
   211c4:	lsl	x4, x4, #34
   211c8:	adds	x4, x18, x4
   211cc:	cinc	x1, x1, cs  // cs = hs, nlast
   211d0:	lsr	x12, x1, #30
   211d4:	sub	x18, x4, x1
   211d8:	cmp	x4, x18
   211dc:	sbc	x12, x12, xzr
   211e0:	lsl	x1, x1, #34
   211e4:	adds	x4, x18, x1
   211e8:	cinc	x12, x12, cs  // cs = hs, nlast
   211ec:	cmp	x12, #0x0
   211f0:	sub	x1, x4, x19
   211f4:	ccmp	x19, x4, #0x0, eq  // eq = none
   211f8:	csel	x4, x1, x4, ls  // ls = plast
   211fc:	mov	x12, x3
   21200:	mul	x25, x2, x3
   21204:	umulh	x3, x2, x3
   21208:	lsr	x18, x3, #30
   2120c:	sub	x1, x25, x3
   21210:	cmp	x1, x25
   21214:	cset	x2, hi  // hi = pmore
   21218:	sub	x18, x18, x2
   2121c:	lsl	x3, x3, #34
   21220:	adds	x3, x1, x3
   21224:	cinc	x18, x18, cs  // cs = hs, nlast
   21228:	lsr	x1, x18, #30
   2122c:	sub	x2, x3, x18
   21230:	cmp	x3, x2
   21234:	sbc	x1, x1, xzr
   21238:	lsl	x18, x18, #34
   2123c:	adds	x18, x2, x18
   21240:	cinc	x1, x1, cs  // cs = hs, nlast
   21244:	lsr	x3, x1, #30
   21248:	sub	x2, x18, x1
   2124c:	cmp	x18, x2
   21250:	sbc	x3, x3, xzr
   21254:	lsl	x1, x1, #34
   21258:	adds	x2, x2, x1
   2125c:	cinc	x3, x3, cs  // cs = hs, nlast
   21260:	cmp	x3, #0x0
   21264:	sub	x1, x2, x19
   21268:	ccmp	x19, x2, #0x0, eq  // eq = none
   2126c:	csel	x2, x1, x2, ls  // ls = plast
   21270:	mul	x18, x5, x14
   21274:	umulh	x5, x5, x14
   21278:	lsr	x1, x5, #30
   2127c:	sub	x3, x18, x5
   21280:	cmp	x18, x3
   21284:	sbc	x1, x1, xzr
   21288:	lsl	x5, x5, #34
   2128c:	adds	x18, x3, x5
   21290:	cinc	x1, x1, cs  // cs = hs, nlast
   21294:	lsr	x3, x1, #30
   21298:	sub	x5, x18, x1
   2129c:	cmp	x18, x5
   212a0:	sbc	x3, x3, xzr
   212a4:	lsl	x1, x1, #34
   212a8:	adds	x1, x5, x1
   212ac:	cinc	x3, x3, cs  // cs = hs, nlast
   212b0:	lsr	x5, x3, #30
   212b4:	sub	x18, x1, x3
   212b8:	cmp	x1, x18
   212bc:	sbc	x5, x5, xzr
   212c0:	lsl	x3, x3, #34
   212c4:	adds	x1, x18, x3
   212c8:	cinc	x5, x5, cs  // cs = hs, nlast
   212cc:	cmp	x5, #0x0
   212d0:	sub	x3, x1, x19
   212d4:	ccmp	x19, x1, #0x0, eq  // eq = none
   212d8:	csel	x1, x3, x1, ls  // ls = plast
   212dc:	mul	x18, x17, x12
   212e0:	umulh	x12, x17, x12
   212e4:	lsr	x3, x12, #30
   212e8:	sub	x5, x18, x12
   212ec:	cmp	x18, x5
   212f0:	sbc	x3, x3, xzr
   212f4:	lsl	x12, x12, #34
   212f8:	adds	x12, x5, x12
   212fc:	cinc	x3, x3, cs  // cs = hs, nlast
   21300:	lsr	x5, x3, #30
   21304:	sub	x18, x12, x3
   21308:	cmp	x12, x18
   2130c:	sbc	x5, x5, xzr
   21310:	lsl	x3, x3, #34
   21314:	adds	x3, x18, x3
   21318:	cinc	x5, x5, cs  // cs = hs, nlast
   2131c:	lsr	x12, x5, #30
   21320:	sub	x18, x3, x5
   21324:	cmp	x3, x18
   21328:	sbc	x12, x12, xzr
   2132c:	lsl	x5, x5, #34
   21330:	adds	x3, x18, x5
   21334:	cinc	x12, x12, cs  // cs = hs, nlast
   21338:	cmp	x12, #0x0
   2133c:	sub	x5, x3, x19
   21340:	ccmp	x19, x3, #0x0, eq  // eq = none
   21344:	csel	x3, x5, x3, ls  // ls = plast
   21348:	b	2115c <PyInit__decimal@@Base+0x6fbc>
   2134c:	lsr	x4, x1, #24
   21350:	sub	x1, x30, x1
   21354:	cmp	x30, x1
   21358:	sbc	x4, x4, xzr
   2135c:	lsl	x12, x12, #40
   21360:	adds	x12, x1, x12
   21364:	cinc	x4, x4, cs  // cs = hs, nlast
   21368:	lsr	x1, x4, #24
   2136c:	sub	x18, x12, x4
   21370:	cmp	x12, x18
   21374:	sbc	x1, x1, xzr
   21378:	lsl	x4, x4, #40
   2137c:	adds	x4, x18, x4
   21380:	cinc	x1, x1, cs  // cs = hs, nlast
   21384:	lsr	x12, x1, #24
   21388:	sub	x18, x4, x1
   2138c:	cmp	x4, x18
   21390:	sbc	x12, x12, xzr
   21394:	lsl	x1, x1, #40
   21398:	adds	x4, x18, x1
   2139c:	cinc	x12, x12, cs  // cs = hs, nlast
   213a0:	cmp	x12, #0x0
   213a4:	sub	x1, x4, x19
   213a8:	ccmp	x19, x4, #0x0, eq  // eq = none
   213ac:	csel	x4, x1, x4, ls  // ls = plast
   213b0:	mov	x12, x3
   213b4:	mul	x1, x2, x3
   213b8:	umulh	x3, x2, x3
   213bc:	lsr	x18, x3, #24
   213c0:	sub	x2, x1, x3
   213c4:	cmp	x2, x1
   213c8:	cset	x1, hi  // hi = pmore
   213cc:	sub	x18, x18, x1
   213d0:	lsl	x3, x3, #40
   213d4:	adds	x3, x2, x3
   213d8:	cinc	x18, x18, cs  // cs = hs, nlast
   213dc:	lsr	x1, x18, #24
   213e0:	sub	x30, x3, x18
   213e4:	cmp	x3, x30
   213e8:	sbc	x1, x1, xzr
   213ec:	lsl	x18, x18, #40
   213f0:	adds	x18, x30, x18
   213f4:	cinc	x1, x1, cs  // cs = hs, nlast
   213f8:	lsr	x3, x1, #24
   213fc:	sub	x2, x18, x1
   21400:	cmp	x18, x2
   21404:	sbc	x3, x3, xzr
   21408:	lsl	x1, x1, #40
   2140c:	adds	x2, x2, x1
   21410:	cinc	x3, x3, cs  // cs = hs, nlast
   21414:	cmp	x3, #0x0
   21418:	sub	x1, x2, x19
   2141c:	ccmp	x19, x2, #0x0, eq  // eq = none
   21420:	csel	x2, x1, x2, ls  // ls = plast
   21424:	mul	x18, x14, x5
   21428:	umulh	x5, x14, x5
   2142c:	lsr	x1, x5, #24
   21430:	sub	x3, x18, x5
   21434:	cmp	x3, x18
   21438:	cset	x18, hi  // hi = pmore
   2143c:	sub	x1, x1, x18
   21440:	lsl	x5, x5, #40
   21444:	adds	x5, x3, x5
   21448:	cinc	x1, x1, cs  // cs = hs, nlast
   2144c:	lsr	x3, x1, #24
   21450:	sub	x18, x5, x1
   21454:	cmp	x5, x18
   21458:	sbc	x3, x3, xzr
   2145c:	lsl	x1, x1, #40
   21460:	adds	x1, x18, x1
   21464:	cinc	x3, x3, cs  // cs = hs, nlast
   21468:	lsr	x5, x3, #24
   2146c:	sub	x18, x1, x3
   21470:	cmp	x1, x18
   21474:	sbc	x5, x5, xzr
   21478:	lsl	x3, x3, #40
   2147c:	adds	x1, x18, x3
   21480:	cinc	x5, x5, cs  // cs = hs, nlast
   21484:	cmp	x5, #0x0
   21488:	sub	x3, x1, x19
   2148c:	ccmp	x19, x1, #0x0, eq  // eq = none
   21490:	csel	x1, x3, x1, ls  // ls = plast
   21494:	mul	x18, x17, x12
   21498:	umulh	x12, x17, x12
   2149c:	lsr	x3, x12, #24
   214a0:	sub	x5, x18, x12
   214a4:	cmp	x18, x5
   214a8:	sbc	x3, x3, xzr
   214ac:	lsl	x12, x12, #40
   214b0:	adds	x12, x5, x12
   214b4:	cinc	x3, x3, cs  // cs = hs, nlast
   214b8:	lsr	x5, x3, #24
   214bc:	sub	x18, x12, x3
   214c0:	cmp	x12, x18
   214c4:	sbc	x5, x5, xzr
   214c8:	lsl	x3, x3, #40
   214cc:	adds	x3, x18, x3
   214d0:	cinc	x5, x5, cs  // cs = hs, nlast
   214d4:	lsr	x12, x5, #24
   214d8:	sub	x18, x3, x5
   214dc:	cmp	x3, x18
   214e0:	sbc	x12, x12, xzr
   214e4:	lsl	x5, x5, #40
   214e8:	adds	x3, x18, x5
   214ec:	cinc	x12, x12, cs  // cs = hs, nlast
   214f0:	cmp	x12, #0x0
   214f4:	sub	x5, x3, x19
   214f8:	ccmp	x19, x3, #0x0, eq  // eq = none
   214fc:	csel	x3, x5, x3, ls  // ls = plast
   21500:	b	2115c <PyInit__decimal@@Base+0x6fbc>
   21504:	add	x8, x8, #0x1
   21508:	add	x9, x9, x20
   2150c:	cmp	x8, #0x3
   21510:	b.eq	21544 <PyInit__decimal@@Base+0x73a4>  // b.none
   21514:	mov	x4, x0
   21518:	mov	x2, x8
   2151c:	mov	x3, x10
   21520:	cbnz	x8, 20db8 <PyInit__decimal@@Base+0x6c18>
   21524:	and	x24, x19, #0x100000000
   21528:	tbnz	x19, #32, 2100c <PyInit__decimal@@Base+0x6e6c>
   2152c:	mov	x1, x6
   21530:	cbz	x6, 21b44 <PyInit__decimal@@Base+0x79a4>
   21534:	mov	x1, x24
   21538:	mov	x3, x10
   2153c:	mov	x2, x11
   21540:	b	20f48 <PyInit__decimal@@Base+0x6da8>
   21544:	mov	w2, w22
   21548:	mov	w1, #0x1                   	// #1
   2154c:	add	x0, sp, #0x58
   21550:	bl	39dec <PyInit__decimal@@Base+0x1fc4c>
   21554:	lsl	x20, x20, #3
   21558:	add	x7, x21, x20
   2155c:	add	x20, x7, x20
   21560:	cmp	x21, x7
   21564:	b.cs	21b3c <PyInit__decimal@@Base+0x799c>  // b.hs, b.nlast
   21568:	ldr	x5, [sp, #96]
   2156c:	mov	x9, #0x0                   	// #0
   21570:	ldr	x4, [sp, #104]
   21574:	mov	x8, #0x0                   	// #0
   21578:	mvn	x10, x21
   2157c:	add	x10, x7, x10
   21580:	lsr	x10, x10, #3
   21584:	mov	x3, #0x0                   	// #0
   21588:	and	x6, x19, #0x400000000
   2158c:	b	219f4 <PyInit__decimal@@Base+0x7854>
   21590:	lsr	x15, x1, #32
   21594:	sub	x1, x16, x1
   21598:	cmp	x16, x1
   2159c:	sbc	x15, x15, xzr
   215a0:	lsl	x13, x13, #32
   215a4:	adds	x1, x1, x13
   215a8:	cinc	x15, x15, cs  // cs = hs, nlast
   215ac:	lsr	x13, x15, #32
   215b0:	sub	x0, x1, x15
   215b4:	cmp	x1, x0
   215b8:	sbc	x13, x13, xzr
   215bc:	lsl	x15, x15, #32
   215c0:	adds	x0, x0, x15
   215c4:	cinc	x13, x13, cs  // cs = hs, nlast
   215c8:	cmp	x13, #0x0
   215cc:	sub	x1, x0, x19
   215d0:	ccmp	x19, x0, #0x0, eq  // eq = none
   215d4:	csel	x0, x1, x0, ls  // ls = plast
   215d8:	add	x0, x12, x0
   215dc:	sub	x1, x0, x19
   215e0:	cmp	x12, x0
   215e4:	csel	x0, x1, x0, hi  // hi = pmore
   215e8:	sub	x1, x0, x19
   215ec:	cmp	x19, x0
   215f0:	csel	x0, x1, x0, ls  // ls = plast
   215f4:	mul	x17, x11, x4
   215f8:	umulh	x13, x11, x4
   215fc:	madd	x13, x11, x8, x13
   21600:	mov	x15, x13
   21604:	cbnz	x24, 216dc <PyInit__decimal@@Base+0x753c>
   21608:	cbz	x6, 217c0 <PyInit__decimal@@Base+0x7620>
   2160c:	lsr	x1, x13, #30
   21610:	sub	x13, x17, x13
   21614:	cmp	x17, x13
   21618:	sbc	x1, x1, xzr
   2161c:	lsl	x15, x15, #34
   21620:	adds	x15, x13, x15
   21624:	cinc	x1, x1, cs  // cs = hs, nlast
   21628:	lsr	x13, x1, #30
   2162c:	sub	x16, x15, x1
   21630:	cmp	x15, x16
   21634:	sbc	x13, x13, xzr
   21638:	lsl	x1, x1, #34
   2163c:	adds	x16, x16, x1
   21640:	cinc	x13, x13, cs  // cs = hs, nlast
   21644:	lsr	x15, x13, #30
   21648:	sub	x1, x16, x13
   2164c:	cmp	x16, x1
   21650:	sbc	x15, x15, xzr
   21654:	lsl	x13, x13, #34
   21658:	adds	x1, x1, x13
   2165c:	cinc	x15, x15, cs  // cs = hs, nlast
   21660:	cmp	x15, #0x0
   21664:	sub	x13, x1, x19
   21668:	ccmp	x19, x1, #0x0, eq  // eq = none
   2166c:	csel	x1, x13, x1, ls  // ls = plast
   21670:	b	21724 <PyInit__decimal@@Base+0x7584>
   21674:	lsr	x0, x1, #24
   21678:	sub	x1, x16, x1
   2167c:	cmp	x16, x1
   21680:	sbc	x0, x0, xzr
   21684:	lsl	x13, x13, #40
   21688:	adds	x13, x1, x13
   2168c:	cinc	x0, x0, cs  // cs = hs, nlast
   21690:	lsr	x1, x0, #24
   21694:	sub	x15, x13, x0
   21698:	cmp	x13, x15
   2169c:	sbc	x1, x1, xzr
   216a0:	lsl	x0, x0, #40
   216a4:	adds	x15, x15, x0
   216a8:	cinc	x1, x1, cs  // cs = hs, nlast
   216ac:	lsr	x13, x1, #24
   216b0:	sub	x0, x15, x1
   216b4:	cmp	x15, x0
   216b8:	sbc	x13, x13, xzr
   216bc:	lsl	x1, x1, #40
   216c0:	adds	x0, x0, x1
   216c4:	cinc	x13, x13, cs  // cs = hs, nlast
   216c8:	cmp	x13, #0x0
   216cc:	sub	x1, x0, x19
   216d0:	ccmp	x19, x0, #0x0, eq  // eq = none
   216d4:	csel	x0, x1, x0, ls  // ls = plast
   216d8:	b	215d8 <PyInit__decimal@@Base+0x7438>
   216dc:	lsr	x16, x13, #32
   216e0:	sub	x13, x17, x13
   216e4:	cmp	x17, x13
   216e8:	sbc	x16, x16, xzr
   216ec:	lsl	x15, x15, #32
   216f0:	adds	x13, x13, x15
   216f4:	cinc	x16, x16, cs  // cs = hs, nlast
   216f8:	lsr	x15, x16, #32
   216fc:	sub	x1, x13, x16
   21700:	cmp	x13, x1
   21704:	sbc	x15, x15, xzr
   21708:	lsl	x16, x16, #32
   2170c:	adds	x1, x1, x16
   21710:	cinc	x15, x15, cs  // cs = hs, nlast
   21714:	cmp	x15, #0x0
   21718:	sub	x13, x1, x19
   2171c:	ccmp	x19, x1, #0x0, eq  // eq = none
   21720:	csel	x1, x13, x1, ls  // ls = plast
   21724:	add	x13, x0, x1
   21728:	sub	x1, x13, x19
   2172c:	cmp	x0, x13
   21730:	csel	x13, x1, x13, hi  // hi = pmore
   21734:	sub	x0, x13, x19
   21738:	cmp	x19, x13
   2173c:	csel	x13, x0, x13, ls  // ls = plast
   21740:	mul	x16, x14, x4
   21744:	umulh	x1, x14, x4
   21748:	madd	x1, x14, x8, x1
   2174c:	mov	x14, x1
   21750:	cbnz	x24, 21828 <PyInit__decimal@@Base+0x7688>
   21754:	cbz	x6, 2190c <PyInit__decimal@@Base+0x776c>
   21758:	lsr	x0, x1, #30
   2175c:	sub	x1, x16, x1
   21760:	cmp	x16, x1
   21764:	sbc	x0, x0, xzr
   21768:	lsl	x14, x14, #34
   2176c:	adds	x14, x1, x14
   21770:	cinc	x0, x0, cs  // cs = hs, nlast
   21774:	lsr	x1, x0, #30
   21778:	sub	x15, x14, x0
   2177c:	cmp	x14, x15
   21780:	sbc	x1, x1, xzr
   21784:	lsl	x0, x0, #34
   21788:	adds	x15, x15, x0
   2178c:	cinc	x1, x1, cs  // cs = hs, nlast
   21790:	lsr	x14, x1, #30
   21794:	sub	x0, x15, x1
   21798:	cmp	x15, x0
   2179c:	sbc	x14, x14, xzr
   217a0:	lsl	x1, x1, #34
   217a4:	adds	x0, x0, x1
   217a8:	cinc	x14, x14, cs  // cs = hs, nlast
   217ac:	cmp	x14, #0x0
   217b0:	sub	x1, x0, x19
   217b4:	ccmp	x19, x0, #0x0, eq  // eq = none
   217b8:	csel	x0, x1, x0, ls  // ls = plast
   217bc:	b	21870 <PyInit__decimal@@Base+0x76d0>
   217c0:	lsr	x1, x13, #24
   217c4:	sub	x13, x17, x13
   217c8:	cmp	x17, x13
   217cc:	sbc	x1, x1, xzr
   217d0:	lsl	x15, x15, #40
   217d4:	adds	x15, x13, x15
   217d8:	cinc	x1, x1, cs  // cs = hs, nlast
   217dc:	lsr	x13, x1, #24
   217e0:	sub	x16, x15, x1
   217e4:	cmp	x15, x16
   217e8:	sbc	x13, x13, xzr
   217ec:	lsl	x1, x1, #40
   217f0:	adds	x16, x16, x1
   217f4:	cinc	x13, x13, cs  // cs = hs, nlast
   217f8:	lsr	x15, x13, #24
   217fc:	sub	x1, x16, x13
   21800:	cmp	x16, x1
   21804:	sbc	x15, x15, xzr
   21808:	lsl	x13, x13, #40
   2180c:	adds	x1, x1, x13
   21810:	cinc	x15, x15, cs  // cs = hs, nlast
   21814:	cmp	x15, #0x0
   21818:	sub	x13, x1, x19
   2181c:	ccmp	x19, x1, #0x0, eq  // eq = none
   21820:	csel	x1, x13, x1, ls  // ls = plast
   21824:	b	21724 <PyInit__decimal@@Base+0x7584>
   21828:	lsr	x15, x1, #32
   2182c:	sub	x1, x16, x1
   21830:	cmp	x16, x1
   21834:	sbc	x15, x15, xzr
   21838:	lsl	x14, x14, #32
   2183c:	adds	x1, x1, x14
   21840:	cinc	x15, x15, cs  // cs = hs, nlast
   21844:	lsr	x14, x15, #32
   21848:	sub	x0, x1, x15
   2184c:	cmp	x1, x0
   21850:	sbc	x14, x14, xzr
   21854:	lsl	x15, x15, #32
   21858:	adds	x0, x0, x15
   2185c:	cinc	x14, x14, cs  // cs = hs, nlast
   21860:	cmp	x14, #0x0
   21864:	sub	x1, x0, x19
   21868:	ccmp	x19, x0, #0x0, eq  // eq = none
   2186c:	csel	x0, x1, x0, ls  // ls = plast
   21870:	add	x0, x12, x0
   21874:	sub	x1, x0, x19
   21878:	cmp	x12, x0
   2187c:	csel	x0, x1, x0, hi  // hi = pmore
   21880:	sub	x1, x0, x19
   21884:	cmp	x19, x0
   21888:	csel	x0, x1, x0, ls  // ls = plast
   2188c:	mul	x15, x5, x11
   21890:	umulh	x12, x5, x11
   21894:	madd	x12, x9, x11, x12
   21898:	mov	x11, x12
   2189c:	cbnz	x24, 21974 <PyInit__decimal@@Base+0x77d4>
   218a0:	cbz	x6, 21ab8 <PyInit__decimal@@Base+0x7918>
   218a4:	lsr	x1, x12, #30
   218a8:	sub	x12, x15, x12
   218ac:	cmp	x15, x12
   218b0:	sbc	x1, x1, xzr
   218b4:	lsl	x11, x11, #34
   218b8:	adds	x11, x12, x11
   218bc:	cinc	x1, x1, cs  // cs = hs, nlast
   218c0:	lsr	x12, x1, #30
   218c4:	sub	x14, x11, x1
   218c8:	cmp	x11, x14
   218cc:	sbc	x12, x12, xzr
   218d0:	lsl	x1, x1, #34
   218d4:	adds	x14, x14, x1
   218d8:	cinc	x12, x12, cs  // cs = hs, nlast
   218dc:	lsr	x11, x12, #30
   218e0:	sub	x1, x14, x12
   218e4:	cmp	x14, x1
   218e8:	sbc	x11, x11, xzr
   218ec:	lsl	x12, x12, #34
   218f0:	adds	x1, x1, x12
   218f4:	cinc	x11, x11, cs  // cs = hs, nlast
   218f8:	cmp	x11, #0x0
   218fc:	sub	x11, x1, x19
   21900:	ccmp	x19, x1, #0x0, eq  // eq = none
   21904:	csel	x1, x11, x1, ls  // ls = plast
   21908:	b	219bc <PyInit__decimal@@Base+0x781c>
   2190c:	lsr	x0, x1, #24
   21910:	sub	x1, x16, x1
   21914:	cmp	x16, x1
   21918:	sbc	x0, x0, xzr
   2191c:	lsl	x14, x14, #40
   21920:	adds	x14, x1, x14
   21924:	cinc	x0, x0, cs  // cs = hs, nlast
   21928:	lsr	x1, x0, #24
   2192c:	sub	x15, x14, x0
   21930:	cmp	x14, x15
   21934:	sbc	x1, x1, xzr
   21938:	lsl	x0, x0, #40
   2193c:	adds	x15, x15, x0
   21940:	cinc	x1, x1, cs  // cs = hs, nlast
   21944:	lsr	x14, x1, #24
   21948:	sub	x0, x15, x1
   2194c:	cmp	x15, x0
   21950:	sbc	x14, x14, xzr
   21954:	lsl	x1, x1, #40
   21958:	adds	x0, x0, x1
   2195c:	cinc	x14, x14, cs  // cs = hs, nlast
   21960:	cmp	x14, #0x0
   21964:	sub	x1, x0, x19
   21968:	ccmp	x19, x0, #0x0, eq  // eq = none
   2196c:	csel	x0, x1, x0, ls  // ls = plast
   21970:	b	21870 <PyInit__decimal@@Base+0x76d0>
   21974:	lsr	x14, x12, #32
   21978:	sub	x12, x15, x12
   2197c:	cmp	x15, x12
   21980:	sbc	x14, x14, xzr
   21984:	lsl	x11, x11, #32
   21988:	adds	x12, x12, x11
   2198c:	cinc	x14, x14, cs  // cs = hs, nlast
   21990:	lsr	x11, x14, #32
   21994:	sub	x1, x12, x14
   21998:	cmp	x12, x1
   2199c:	sbc	x11, x11, xzr
   219a0:	lsl	x14, x14, #32
   219a4:	adds	x1, x1, x14
   219a8:	cinc	x11, x11, cs  // cs = hs, nlast
   219ac:	cmp	x11, #0x0
   219b0:	sub	x11, x1, x19
   219b4:	ccmp	x19, x1, #0x0, eq  // eq = none
   219b8:	csel	x1, x11, x1, ls  // ls = plast
   219bc:	add	x1, x0, x1
   219c0:	sub	x11, x1, x19
   219c4:	cmp	x0, x1
   219c8:	csel	x1, x11, x1, hi  // hi = pmore
   219cc:	sub	x0, x1, x19
   219d0:	cmp	x19, x1
   219d4:	csel	x1, x0, x1, ls  // ls = plast
   219d8:	str	x1, [x20, x3, lsl #3]
   219dc:	str	x13, [x7, x3, lsl #3]
   219e0:	str	x2, [x21, x3, lsl #3]
   219e4:	add	x0, x3, #0x1
   219e8:	cmp	x10, x3
   219ec:	b.eq	21b20 <PyInit__decimal@@Base+0x7980>  // b.none
   219f0:	mov	x3, x0
   219f4:	ldr	x12, [x21, x3, lsl #3]
   219f8:	ldr	x14, [x7, x3, lsl #3]
   219fc:	add	x0, x12, x14
   21a00:	sub	x1, x0, x19
   21a04:	cmp	x12, x0
   21a08:	csel	x0, x1, x0, hi  // hi = pmore
   21a0c:	sub	x1, x0, x19
   21a10:	cmp	x19, x0
   21a14:	csel	x0, x1, x0, ls  // ls = plast
   21a18:	ldr	x11, [x20, x3, lsl #3]
   21a1c:	add	x2, x11, x0
   21a20:	sub	x1, x2, x19
   21a24:	cmp	x0, x2
   21a28:	csel	x2, x1, x2, hi  // hi = pmore
   21a2c:	sub	x0, x2, x19
   21a30:	cmp	x19, x2
   21a34:	csel	x2, x0, x2, ls  // ls = plast
   21a38:	mul	x16, x14, x5
   21a3c:	umulh	x1, x14, x5
   21a40:	madd	x1, x14, x9, x1
   21a44:	mov	x13, x1
   21a48:	cbnz	x24, 21590 <PyInit__decimal@@Base+0x73f0>
   21a4c:	cbz	x6, 21674 <PyInit__decimal@@Base+0x74d4>
   21a50:	lsr	x0, x1, #30
   21a54:	sub	x1, x16, x1
   21a58:	cmp	x16, x1
   21a5c:	sbc	x0, x0, xzr
   21a60:	lsl	x13, x13, #34
   21a64:	adds	x13, x1, x13
   21a68:	cinc	x0, x0, cs  // cs = hs, nlast
   21a6c:	lsr	x1, x0, #30
   21a70:	sub	x15, x13, x0
   21a74:	cmp	x13, x15
   21a78:	sbc	x1, x1, xzr
   21a7c:	lsl	x0, x0, #34
   21a80:	adds	x15, x15, x0
   21a84:	cinc	x1, x1, cs  // cs = hs, nlast
   21a88:	lsr	x13, x1, #30
   21a8c:	sub	x0, x15, x1
   21a90:	cmp	x15, x0
   21a94:	sbc	x13, x13, xzr
   21a98:	lsl	x1, x1, #34
   21a9c:	adds	x0, x0, x1
   21aa0:	cinc	x13, x13, cs  // cs = hs, nlast
   21aa4:	cmp	x13, #0x0
   21aa8:	sub	x1, x0, x19
   21aac:	ccmp	x19, x0, #0x0, eq  // eq = none
   21ab0:	csel	x0, x1, x0, ls  // ls = plast
   21ab4:	b	215d8 <PyInit__decimal@@Base+0x7438>
   21ab8:	lsr	x1, x12, #24
   21abc:	sub	x12, x15, x12
   21ac0:	cmp	x15, x12
   21ac4:	sbc	x1, x1, xzr
   21ac8:	lsl	x11, x11, #40
   21acc:	adds	x11, x12, x11
   21ad0:	cinc	x1, x1, cs  // cs = hs, nlast
   21ad4:	lsr	x12, x1, #24
   21ad8:	sub	x14, x11, x1
   21adc:	cmp	x11, x14
   21ae0:	sbc	x12, x12, xzr
   21ae4:	lsl	x1, x1, #40
   21ae8:	adds	x14, x14, x1
   21aec:	cinc	x12, x12, cs  // cs = hs, nlast
   21af0:	lsr	x11, x12, #24
   21af4:	sub	x1, x14, x12
   21af8:	cmp	x14, x1
   21afc:	sbc	x11, x11, xzr
   21b00:	lsl	x12, x12, #40
   21b04:	adds	x1, x1, x12
   21b08:	cinc	x11, x11, cs  // cs = hs, nlast
   21b0c:	cmp	x11, #0x0
   21b10:	sub	x11, x1, x19
   21b14:	ccmp	x19, x1, #0x0, eq  // eq = none
   21b18:	csel	x1, x11, x1, ls  // ls = plast
   21b1c:	b	219bc <PyInit__decimal@@Base+0x781c>
   21b20:	mov	w0, #0x1                   	// #1
   21b24:	ldp	x19, x20, [sp, #16]
   21b28:	ldp	x21, x22, [sp, #32]
   21b2c:	ldp	x23, x24, [sp, #48]
   21b30:	ldr	x25, [sp, #64]
   21b34:	ldp	x29, x30, [sp], #112
   21b38:	ret
   21b3c:	mov	w0, #0x1                   	// #1
   21b40:	b	21b24 <PyInit__decimal@@Base+0x7984>
   21b44:	mov	x12, x11
   21b48:	lsr	x4, x1, #24
   21b4c:	sub	x2, x12, x1
   21b50:	cmp	x2, x12
   21b54:	cset	x5, hi  // hi = pmore
   21b58:	sub	x4, x4, x5
   21b5c:	lsl	x1, x1, #40
   21b60:	adds	x1, x2, x1
   21b64:	cinc	x4, x4, cs  // cs = hs, nlast
   21b68:	lsr	x2, x4, #24
   21b6c:	sub	x5, x1, x4
   21b70:	cmp	x1, x5
   21b74:	sbc	x2, x2, xzr
   21b78:	lsl	x4, x4, #40
   21b7c:	adds	x4, x5, x4
   21b80:	cinc	x2, x2, cs  // cs = hs, nlast
   21b84:	lsr	x1, x2, #24
   21b88:	sub	x14, x4, x2
   21b8c:	cmp	x4, x14
   21b90:	sbc	x1, x1, xzr
   21b94:	lsl	x2, x2, #40
   21b98:	adds	x14, x14, x2
   21b9c:	cinc	x1, x1, cs  // cs = hs, nlast
   21ba0:	cmp	x1, #0x0
   21ba4:	mov	x24, #0x0                   	// #0
   21ba8:	ccmp	x19, x14, #0x0, eq  // eq = none
   21bac:	b.hi	20ff0 <PyInit__decimal@@Base+0x6e50>  // b.pmore
   21bb0:	sub	x14, x14, x19
   21bb4:	b	20ff0 <PyInit__decimal@@Base+0x6e50>
   21bb8:	sub	w2, w2, #0x2
   21bbc:	mov	x4, x0
   21bc0:	cmp	w2, #0x12
   21bc4:	b.hi	21fe8 <PyInit__decimal@@Base+0x7e48>  // b.pmore
   21bc8:	adrp	x4, 43000 <PyInit__decimal@@Base+0x28e60>
   21bcc:	add	x4, x4, #0x168
   21bd0:	ldrh	w2, [x4, w2, uxtw #1]
   21bd4:	adr	x4, 21be0 <PyInit__decimal@@Base+0x7a40>
   21bd8:	add	x2, x4, w2, sxth #2
   21bdc:	br	x2
   21be0:	cmp	x0, x3
   21be4:	b.eq	22004 <PyInit__decimal@@Base+0x7e64>  // b.none
   21be8:	mov	x4, #0x89e80000            	// #2313682944
   21bec:	movk	x4, #0x2304, lsl #32
   21bf0:	movk	x4, #0x8ac7, lsl #48
   21bf4:	cmp	x1, x4
   21bf8:	cset	w2, cs  // cs = hs, nlast
   21bfc:	cset	x5, cs  // cs = hs, nlast
   21c00:	add	w2, w2, #0x30
   21c04:	strb	w2, [x0], #1
   21c08:	msub	x1, x5, x4, x1
   21c0c:	cmp	x0, x3
   21c10:	b.eq	22010 <PyInit__decimal@@Base+0x7e70>  // b.none
   21c14:	lsr	x2, x1, #18
   21c18:	mov	x4, #0x490f                	// #18703
   21c1c:	movk	x4, #0x7747, lsl #16
   21c20:	movk	x4, #0x49c9, lsl #32
   21c24:	umulh	x2, x2, x4
   21c28:	lsr	x2, x2, #24
   21c2c:	add	w4, w2, #0x30
   21c30:	strb	w4, [x0], #1
   21c34:	mov	x4, #0xa7640000            	// #2808348672
   21c38:	movk	x4, #0xb6b3, lsl #32
   21c3c:	movk	x4, #0xde0, lsl #48
   21c40:	msub	x1, x2, x4, x1
   21c44:	cmp	x0, x3
   21c48:	b.eq	2201c <PyInit__decimal@@Base+0x7e7c>  // b.none
   21c4c:	lsr	x2, x1, #17
   21c50:	mov	x4, #0x1b53                	// #6995
   21c54:	movk	x4, #0xd519, lsl #16
   21c58:	movk	x4, #0x5c3b, lsl #32
   21c5c:	umulh	x2, x2, x4
   21c60:	lsr	x2, x2, #22
   21c64:	add	w4, w2, #0x30
   21c68:	strb	w4, [x0], #1
   21c6c:	mov	x4, #0x5d8a0000            	// #1569325056
   21c70:	movk	x4, #0x4578, lsl #32
   21c74:	movk	x4, #0x163, lsl #48
   21c78:	msub	x1, x2, x4, x1
   21c7c:	cmp	x0, x3
   21c80:	b.eq	22028 <PyInit__decimal@@Base+0x7e88>  // b.none
   21c84:	mov	x2, #0x7857                	// #30807
   21c88:	movk	x2, #0xb113, lsl #16
   21c8c:	movk	x2, #0x652f, lsl #32
   21c90:	movk	x2, #0x39a5, lsl #48
   21c94:	umulh	x2, x1, x2
   21c98:	lsr	x2, x2, #51
   21c9c:	add	w4, w2, #0x30
   21ca0:	strb	w4, [x0], #1
   21ca4:	mov	x4, #0x6fc10000            	// #1874919424
   21ca8:	movk	x4, #0x86f2, lsl #32
   21cac:	movk	x4, #0x23, lsl #48
   21cb0:	msub	x1, x2, x4, x1
   21cb4:	cmp	x0, x3
   21cb8:	b.eq	22034 <PyInit__decimal@@Base+0x7e94>  // b.none
   21cbc:	lsr	x2, x1, #15
   21cc0:	mov	x4, #0xeac3                	// #60099
   21cc4:	movk	x4, #0xf3dc, lsl #16
   21cc8:	movk	x4, #0x4075, lsl #32
   21ccc:	movk	x4, #0x2, lsl #48
   21cd0:	umulh	x2, x2, x4
   21cd4:	lsr	x2, x2, #20
   21cd8:	add	w4, w2, #0x30
   21cdc:	strb	w4, [x0], #1
   21ce0:	mov	x4, #0x8000                	// #32768
   21ce4:	movk	x4, #0xa4c6, lsl #16
   21ce8:	movk	x4, #0x8d7e, lsl #32
   21cec:	movk	x4, #0x3, lsl #48
   21cf0:	msub	x1, x2, x4, x1
   21cf4:	cmp	x0, x3
   21cf8:	b.eq	22040 <PyInit__decimal@@Base+0x7ea0>  // b.none
   21cfc:	mov	x2, #0xcd81                	// #52609
   21d00:	movk	x2, #0x5095, lsl #16
   21d04:	movk	x2, #0x4dc3, lsl #32
   21d08:	movk	x2, #0xb42, lsl #48
   21d0c:	umulh	x2, x1, x2
   21d10:	lsr	x2, x2, #42
   21d14:	add	w4, w2, #0x30
   21d18:	strb	w4, [x0], #1
   21d1c:	mov	x4, #0x4000                	// #16384
   21d20:	movk	x4, #0x107a, lsl #16
   21d24:	movk	x4, #0x5af3, lsl #32
   21d28:	msub	x1, x2, x4, x1
   21d2c:	cmp	x0, x3
   21d30:	b.eq	2204c <PyInit__decimal@@Base+0x7eac>  // b.none
   21d34:	mov	x2, #0x385                 	// #901
   21d38:	movk	x2, #0x92ed, lsl #16
   21d3c:	movk	x2, #0x84d0, lsl #32
   21d40:	movk	x2, #0x384b, lsl #48
   21d44:	umulh	x2, x1, x2
   21d48:	lsr	x2, x2, #41
   21d4c:	add	w4, w2, #0x30
   21d50:	strb	w4, [x0], #1
   21d54:	mov	x4, #0xa000                	// #40960
   21d58:	movk	x4, #0x4e72, lsl #16
   21d5c:	movk	x4, #0x918, lsl #32
   21d60:	msub	x1, x2, x4, x1
   21d64:	cmp	x0, x3
   21d68:	b.eq	22058 <PyInit__decimal@@Base+0x7eb8>  // b.none
   21d6c:	mov	x2, #0x2233                	// #8755
   21d70:	movk	x2, #0x5bd4, lsl #16
   21d74:	movk	x2, #0x3302, lsl #32
   21d78:	movk	x2, #0x232f, lsl #48
   21d7c:	umulh	x2, x1, x2
   21d80:	lsr	x2, x2, #37
   21d84:	add	w4, w2, #0x30
   21d88:	strb	w4, [x0], #1
   21d8c:	mov	x4, #0x1000                	// #4096
   21d90:	movk	x4, #0xd4a5, lsl #16
   21d94:	movk	x4, #0xe8, lsl #32
   21d98:	msub	x1, x2, x4, x1
   21d9c:	cmp	x0, x3
   21da0:	b.eq	22064 <PyInit__decimal@@Base+0x7ec4>  // b.none
   21da4:	mov	x2, #0xaaff                	// #43775
   21da8:	movk	x2, #0xcb24, lsl #16
   21dac:	movk	x2, #0xff0b, lsl #32
   21db0:	movk	x2, #0xafeb, lsl #48
   21db4:	umulh	x2, x1, x2
   21db8:	lsr	x2, x2, #36
   21dbc:	add	w4, w2, #0x30
   21dc0:	strb	w4, [x0], #1
   21dc4:	mov	x4, #0xe800                	// #59392
   21dc8:	movk	x4, #0x4876, lsl #16
   21dcc:	movk	x4, #0x17, lsl #32
   21dd0:	msub	x1, x2, x4, x1
   21dd4:	cmp	x0, x3
   21dd8:	b.eq	22070 <PyInit__decimal@@Base+0x7ed0>  // b.none
   21ddc:	mov	x2, #0xd5bf                	// #54719
   21de0:	movk	x2, #0xbded, lsl #16
   21de4:	movk	x2, #0xfece, lsl #32
   21de8:	movk	x2, #0xdbe6, lsl #48
   21dec:	umulh	x2, x1, x2
   21df0:	lsr	x2, x2, #33
   21df4:	add	w4, w2, #0x30
   21df8:	strb	w4, [x0], #1
   21dfc:	mov	x4, #0xe400                	// #58368
   21e00:	movk	x4, #0x540b, lsl #16
   21e04:	movk	x4, #0x2, lsl #32
   21e08:	msub	x1, x2, x4, x1
   21e0c:	cmp	x0, x3
   21e10:	b.eq	2207c <PyInit__decimal@@Base+0x7edc>  // b.none
   21e14:	lsr	x2, x1, #9
   21e18:	mov	x4, #0x5a53                	// #23123
   21e1c:	movk	x4, #0xa09b, lsl #16
   21e20:	movk	x4, #0xb82f, lsl #32
   21e24:	movk	x4, #0x44, lsl #48
   21e28:	umulh	x2, x2, x4
   21e2c:	lsr	x2, x2, #11
   21e30:	add	w4, w2, #0x30
   21e34:	strb	w4, [x0], #1
   21e38:	mov	x4, #0xca00                	// #51712
   21e3c:	movk	x4, #0x3b9a, lsl #16
   21e40:	msub	x1, x2, x4, x1
   21e44:	cmp	x0, x3
   21e48:	b.eq	22088 <PyInit__decimal@@Base+0x7ee8>  // b.none
   21e4c:	mov	x2, #0xcefd                	// #52989
   21e50:	movk	x2, #0x8461, lsl #16
   21e54:	movk	x2, #0x7711, lsl #32
   21e58:	movk	x2, #0xabcc, lsl #48
   21e5c:	umulh	x2, x1, x2
   21e60:	lsr	x2, x2, #26
   21e64:	add	w4, w2, #0x30
   21e68:	strb	w4, [x0], #1
   21e6c:	mov	x4, #0xe100                	// #57600
   21e70:	movk	x4, #0x5f5, lsl #16
   21e74:	msub	x1, x2, x4, x1
   21e78:	cmp	x0, x3
   21e7c:	b.eq	22094 <PyInit__decimal@@Base+0x7ef4>  // b.none
   21e80:	mov	x2, #0x42bd                	// #17085
   21e84:	movk	x2, #0xe57a, lsl #16
   21e88:	movk	x2, #0x94d5, lsl #32
   21e8c:	movk	x2, #0xd6bf, lsl #48
   21e90:	umulh	x2, x1, x2
   21e94:	lsr	x2, x2, #23
   21e98:	add	w4, w2, #0x30
   21e9c:	strb	w4, [x0], #1
   21ea0:	mov	x4, #0x9680                	// #38528
   21ea4:	movk	x4, #0x98, lsl #16
   21ea8:	msub	x1, x2, x4, x1
   21eac:	cmp	x0, x3
   21eb0:	b.eq	220a0 <PyInit__decimal@@Base+0x7f00>  // b.none
   21eb4:	mov	x2, #0x34db                	// #13531
   21eb8:	movk	x2, #0xd7b6, lsl #16
   21ebc:	movk	x2, #0xde82, lsl #32
   21ec0:	movk	x2, #0x431b, lsl #48
   21ec4:	umulh	x2, x1, x2
   21ec8:	lsr	x2, x2, #18
   21ecc:	add	w4, w2, #0x30
   21ed0:	strb	w4, [x0], #1
   21ed4:	mov	x4, #0x4240                	// #16960
   21ed8:	movk	x4, #0xf, lsl #16
   21edc:	msub	x1, x2, x4, x1
   21ee0:	cmp	x0, x3
   21ee4:	b.eq	220ac <PyInit__decimal@@Base+0x7f0c>  // b.none
   21ee8:	lsr	x2, x1, #5
   21eec:	mov	x4, #0x7843                	// #30787
   21ef0:	movk	x4, #0x71b4, lsl #16
   21ef4:	movk	x4, #0x5ac4, lsl #32
   21ef8:	movk	x4, #0xa7c, lsl #48
   21efc:	umulh	x2, x2, x4
   21f00:	lsr	x2, x2, #7
   21f04:	add	w4, w2, #0x30
   21f08:	strb	w4, [x0], #1
   21f0c:	mov	x4, #0x86a0                	// #34464
   21f10:	movk	x4, #0x1, lsl #16
   21f14:	msub	x1, x2, x4, x1
   21f18:	cmp	x0, x3
   21f1c:	b.eq	220b8 <PyInit__decimal@@Base+0x7f18>  // b.none
   21f20:	mov	x2, #0x594b                	// #22859
   21f24:	movk	x2, #0x3886, lsl #16
   21f28:	movk	x2, #0xc5d6, lsl #32
   21f2c:	movk	x2, #0x346d, lsl #48
   21f30:	umulh	x2, x1, x2
   21f34:	lsr	x2, x2, #11
   21f38:	add	w4, w2, #0x30
   21f3c:	strb	w4, [x0], #1
   21f40:	mov	x4, #0x2710                	// #10000
   21f44:	msub	x1, x2, x4, x1
   21f48:	cmp	x0, x3
   21f4c:	b.eq	220c4 <PyInit__decimal@@Base+0x7f24>  // b.none
   21f50:	lsr	x2, x1, #3
   21f54:	mov	x4, #0xf7cf                	// #63439
   21f58:	movk	x4, #0xe353, lsl #16
   21f5c:	movk	x4, #0x9ba5, lsl #32
   21f60:	movk	x4, #0x20c4, lsl #48
   21f64:	umulh	x2, x2, x4
   21f68:	lsr	x2, x2, #4
   21f6c:	add	w4, w2, #0x30
   21f70:	strb	w4, [x0], #1
   21f74:	lsl	x4, x2, #5
   21f78:	sub	x4, x4, x2
   21f7c:	add	x2, x2, x4, lsl #2
   21f80:	sub	x1, x1, x2, lsl #3
   21f84:	cmp	x0, x3
   21f88:	b.eq	220d0 <PyInit__decimal@@Base+0x7f30>  // b.none
   21f8c:	lsr	x2, x1, #2
   21f90:	mov	x4, #0xf5c3                	// #62915
   21f94:	movk	x4, #0x5c28, lsl #16
   21f98:	movk	x4, #0xc28f, lsl #32
   21f9c:	movk	x4, #0x28f5, lsl #48
   21fa0:	umulh	x2, x2, x4
   21fa4:	lsr	x2, x2, #2
   21fa8:	add	w4, w2, #0x30
   21fac:	strb	w4, [x0], #1
   21fb0:	add	x4, x2, x2, lsl #1
   21fb4:	add	x2, x2, x4, lsl #3
   21fb8:	sub	x1, x1, x2, lsl #2
   21fbc:	cmp	x0, x3
   21fc0:	b.eq	220dc <PyInit__decimal@@Base+0x7f3c>  // b.none
   21fc4:	mov	x4, x0
   21fc8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   21fcc:	movk	x0, #0xcccd
   21fd0:	umulh	x0, x1, x0
   21fd4:	lsr	x0, x0, #3
   21fd8:	add	w2, w0, #0x30
   21fdc:	strb	w2, [x4], #1
   21fe0:	add	x0, x0, x0, lsl #2
   21fe4:	sub	x1, x1, x0, lsl #1
   21fe8:	cmp	x4, x3
   21fec:	b.eq	220e8 <PyInit__decimal@@Base+0x7f48>  // b.none
   21ff0:	add	w1, w1, #0x30
   21ff4:	strb	w1, [x4]
   21ff8:	mov	x0, x4
   21ffc:	strb	wzr, [x0, #1]!
   22000:	ret
   22004:	mov	w2, #0x2e                  	// #46
   22008:	strb	w2, [x0], #1
   2200c:	b	21be8 <PyInit__decimal@@Base+0x7a48>
   22010:	mov	w2, #0x2e                  	// #46
   22014:	strb	w2, [x0], #1
   22018:	b	21c14 <PyInit__decimal@@Base+0x7a74>
   2201c:	mov	w2, #0x2e                  	// #46
   22020:	strb	w2, [x0], #1
   22024:	b	21c4c <PyInit__decimal@@Base+0x7aac>
   22028:	mov	w2, #0x2e                  	// #46
   2202c:	strb	w2, [x0], #1
   22030:	b	21c84 <PyInit__decimal@@Base+0x7ae4>
   22034:	mov	w2, #0x2e                  	// #46
   22038:	strb	w2, [x0], #1
   2203c:	b	21cbc <PyInit__decimal@@Base+0x7b1c>
   22040:	mov	w2, #0x2e                  	// #46
   22044:	strb	w2, [x0], #1
   22048:	b	21cfc <PyInit__decimal@@Base+0x7b5c>
   2204c:	mov	w2, #0x2e                  	// #46
   22050:	strb	w2, [x0], #1
   22054:	b	21d34 <PyInit__decimal@@Base+0x7b94>
   22058:	mov	w2, #0x2e                  	// #46
   2205c:	strb	w2, [x0], #1
   22060:	b	21d6c <PyInit__decimal@@Base+0x7bcc>
   22064:	mov	w2, #0x2e                  	// #46
   22068:	strb	w2, [x0], #1
   2206c:	b	21da4 <PyInit__decimal@@Base+0x7c04>
   22070:	mov	w2, #0x2e                  	// #46
   22074:	strb	w2, [x0], #1
   22078:	b	21ddc <PyInit__decimal@@Base+0x7c3c>
   2207c:	mov	w2, #0x2e                  	// #46
   22080:	strb	w2, [x0], #1
   22084:	b	21e14 <PyInit__decimal@@Base+0x7c74>
   22088:	mov	w2, #0x2e                  	// #46
   2208c:	strb	w2, [x0], #1
   22090:	b	21e4c <PyInit__decimal@@Base+0x7cac>
   22094:	mov	w2, #0x2e                  	// #46
   22098:	strb	w2, [x0], #1
   2209c:	b	21e80 <PyInit__decimal@@Base+0x7ce0>
   220a0:	mov	w2, #0x2e                  	// #46
   220a4:	strb	w2, [x0], #1
   220a8:	b	21eb4 <PyInit__decimal@@Base+0x7d14>
   220ac:	mov	w2, #0x2e                  	// #46
   220b0:	strb	w2, [x0], #1
   220b4:	b	21ee8 <PyInit__decimal@@Base+0x7d48>
   220b8:	mov	w2, #0x2e                  	// #46
   220bc:	strb	w2, [x0], #1
   220c0:	b	21f20 <PyInit__decimal@@Base+0x7d80>
   220c4:	mov	w2, #0x2e                  	// #46
   220c8:	strb	w2, [x0], #1
   220cc:	b	21f50 <PyInit__decimal@@Base+0x7db0>
   220d0:	mov	w2, #0x2e                  	// #46
   220d4:	strb	w2, [x0], #1
   220d8:	b	21f8c <PyInit__decimal@@Base+0x7dec>
   220dc:	mov	w2, #0x2e                  	// #46
   220e0:	strb	w2, [x0], #1
   220e4:	b	21fc4 <PyInit__decimal@@Base+0x7e24>
   220e8:	mov	w0, #0x2e                  	// #46
   220ec:	strb	w0, [x4], #1
   220f0:	b	21ff0 <PyInit__decimal@@Base+0x7e50>
   220f4:	stp	x29, x30, [sp, #-32]!
   220f8:	mov	x29, sp
   220fc:	stp	x19, x20, [sp, #16]
   22100:	mov	x19, x0
   22104:	mov	x20, x1
   22108:	ldrb	w0, [x0]
   2210c:	cmp	w0, #0x30
   22110:	b.ne	22120 <PyInit__decimal@@Base+0x7f80>  // b.any
   22114:	ldrb	w0, [x19, #1]!
   22118:	cmp	w0, #0x30
   2211c:	b.eq	22114 <PyInit__decimal@@Base+0x7f74>  // b.none
   22120:	bl	6880 <__ctype_b_loc@plt>
   22124:	ldr	x3, [x0]
   22128:	mov	x2, x19
   2212c:	b	22134 <PyInit__decimal@@Base+0x7f94>
   22130:	add	x2, x2, #0x1
   22134:	ldrb	w0, [x2]
   22138:	ldrh	w0, [x3, x0, lsl #1]
   2213c:	tbnz	w0, #11, 22130 <PyInit__decimal@@Base+0x7f90>
   22140:	str	x2, [x20]
   22144:	ldrb	w0, [x2]
   22148:	cmp	w0, #0x0
   2214c:	csel	x0, x19, xzr, eq  // eq = none
   22150:	ldp	x19, x20, [sp, #16]
   22154:	ldp	x29, x30, [sp], #32
   22158:	ret
   2215c:	stp	x29, x30, [sp, #-96]!
   22160:	mov	x29, sp
   22164:	stp	x19, x20, [sp, #16]
   22168:	stp	x21, x22, [sp, #32]
   2216c:	stp	x23, x24, [sp, #48]
   22170:	stp	x25, x26, [sp, #64]
   22174:	stp	x27, x28, [sp, #80]
   22178:	mov	x19, x0
   2217c:	mov	x24, x1
   22180:	mov	x25, x2
   22184:	mov	x20, x3
   22188:	mov	x27, x4
   2218c:	mov	x22, x5
   22190:	mov	x28, x6
   22194:	mov	x21, x7
   22198:	cmp	x1, #0x0
   2219c:	cset	x26, ne  // ne = any
   221a0:	ldr	x0, [x7, #32]
   221a4:	bl	64d0 <strlen@plt>
   221a8:	mov	x23, x0
   221ac:	ldr	x1, [x19]
   221b0:	str	x28, [x19]
   221b4:	str	x28, [x19, #8]
   221b8:	sub	x1, x1, x28
   221bc:	str	x1, [x19, #16]
   221c0:	ldr	x0, [x19, #24]
   221c4:	cbz	x0, 221e8 <PyInit__decimal@@Base+0x8048>
   221c8:	subs	x6, x28, #0x1
   221cc:	b.mi	221e8 <PyInit__decimal@@Base+0x8048>  // b.first
   221d0:	add	x1, x0, x1
   221d4:	ldrb	w0, [x22, x6]
   221d8:	strb	w0, [x1, x6]
   221dc:	sub	x6, x6, #0x1
   221e0:	cmn	x6, #0x1
   221e4:	b.ne	221d4 <PyInit__decimal@@Base+0x8034>  // b.any
   221e8:	cbz	x27, 22244 <PyInit__decimal@@Base+0x80a4>
   221ec:	mov	x0, x27
   221f0:	bl	64d0 <strlen@plt>
   221f4:	ldr	x1, [x19]
   221f8:	add	x1, x1, x0
   221fc:	str	x1, [x19]
   22200:	cmp	x0, #0x0
   22204:	ldr	x1, [x19, #8]
   22208:	cinc	x1, x1, gt
   2220c:	str	x1, [x19, #8]
   22210:	ldr	x2, [x19, #16]
   22214:	sub	x2, x2, x0
   22218:	str	x2, [x19, #16]
   2221c:	ldr	x1, [x19, #24]
   22220:	cbz	x1, 22244 <PyInit__decimal@@Base+0x80a4>
   22224:	subs	x0, x0, #0x1
   22228:	b.mi	22244 <PyInit__decimal@@Base+0x80a4>  // b.first
   2222c:	add	x2, x1, x2
   22230:	ldrb	w1, [x27, x0]
   22234:	strb	w1, [x2, x0]
   22238:	sub	x0, x0, #0x1
   2223c:	cmn	x0, #0x1
   22240:	b.ne	22230 <PyInit__decimal@@Base+0x8090>  // b.any
   22244:	ldr	x5, [x21, #40]
   22248:	ldrb	w1, [x5]
   2224c:	mov	w7, #0x0                   	// #0
   22250:	mov	w6, #0x30                  	// #48
   22254:	mov	w8, #0x1                   	// #1
   22258:	b	22340 <PyInit__decimal@@Base+0x81a0>
   2225c:	ldr	x0, [x19]
   22260:	add	x0, x0, x1
   22264:	str	x0, [x19]
   22268:	ldr	x0, [x19, #8]
   2226c:	add	x0, x0, x1
   22270:	str	x0, [x19, #8]
   22274:	ldr	x2, [x19, #16]
   22278:	sub	x2, x2, x1
   2227c:	str	x2, [x19, #16]
   22280:	ldr	x0, [x19, #24]
   22284:	cbz	x0, 223a8 <PyInit__decimal@@Base+0x8208>
   22288:	subs	x4, x1, #0x1
   2228c:	b.mi	223a8 <PyInit__decimal@@Base+0x8208>  // b.first
   22290:	add	x3, x25, x20
   22294:	add	x2, x0, x2
   22298:	ldrb	w0, [x3, x4]
   2229c:	strb	w0, [x2, x4]
   222a0:	sub	x4, x4, #0x1
   222a4:	cmn	x4, #0x1
   222a8:	b.ne	22298 <PyInit__decimal@@Base+0x80f8>  // b.any
   222ac:	b	223a8 <PyInit__decimal@@Base+0x8208>
   222b0:	sub	x20, x20, x0
   222b4:	ldrb	w0, [x5]
   222b8:	sub	x1, x0, x1
   222bc:	mov	w7, w8
   222c0:	b	22340 <PyInit__decimal@@Base+0x81a0>
   222c4:	cmp	x23, #0x0
   222c8:	b.le	22328 <PyInit__decimal@@Base+0x8188>
   222cc:	cmp	w7, #0x0
   222d0:	ccmp	x20, #0x1, #0x4, ne  // ne = any
   222d4:	cset	x0, gt
   222d8:	sub	x20, x20, x0
   222dc:	ldr	x3, [x21, #32]
   222e0:	ldr	x0, [x19]
   222e4:	add	x0, x0, x23
   222e8:	str	x0, [x19]
   222ec:	ldr	x0, [x19, #8]
   222f0:	add	x0, x0, #0x1
   222f4:	str	x0, [x19, #8]
   222f8:	ldr	x2, [x19, #16]
   222fc:	sub	x1, x2, x23
   22300:	str	x1, [x19, #16]
   22304:	ldr	x2, [x19, #24]
   22308:	cbz	x2, 22328 <PyInit__decimal@@Base+0x8188>
   2230c:	sub	x0, x23, #0x1
   22310:	add	x2, x2, x1
   22314:	ldrb	w1, [x3, x0]
   22318:	strb	w1, [x2, x0]
   2231c:	sub	x0, x0, #0x1
   22320:	cmn	x0, #0x1
   22324:	b.ne	22314 <PyInit__decimal@@Base+0x8174>  // b.any
   22328:	ldrb	w0, [x5]
   2232c:	cbz	w0, 2233c <PyInit__decimal@@Base+0x819c>
   22330:	ldrb	w0, [x5, #1]
   22334:	cmp	w0, #0x0
   22338:	cinc	x5, x5, ne  // ne = any
   2233c:	ldrb	w1, [x5]
   22340:	ldrb	w0, [x5]
   22344:	sub	w0, w0, #0x1
   22348:	and	w0, w0, #0xff
   2234c:	cmp	w0, #0xfd
   22350:	ccmp	x20, x1, #0x1, ls  // ls = plast
   22354:	csel	x1, x1, x20, ge  // ge = tcont
   22358:	sub	x20, x20, x1
   2235c:	cbz	w7, 2225c <PyInit__decimal@@Base+0x80bc>
   22360:	ldr	x0, [x19]
   22364:	add	x0, x0, x1
   22368:	str	x0, [x19]
   2236c:	ldr	x0, [x19, #8]
   22370:	add	x0, x0, x1
   22374:	str	x0, [x19, #8]
   22378:	ldr	x2, [x19, #16]
   2237c:	sub	x2, x2, x1
   22380:	str	x2, [x19, #16]
   22384:	ldr	x3, [x19, #24]
   22388:	cbz	x3, 223a8 <PyInit__decimal@@Base+0x8208>
   2238c:	subs	x0, x1, #0x1
   22390:	b.mi	223a8 <PyInit__decimal@@Base+0x8208>  // b.first
   22394:	add	x2, x3, x2
   22398:	strb	w6, [x2, x0]
   2239c:	sub	x0, x0, #0x1
   223a0:	cmn	x0, #0x1
   223a4:	b.ne	22398 <PyInit__decimal@@Base+0x81f8>  // b.any
   223a8:	cbnz	x20, 222c4 <PyInit__decimal@@Base+0x8124>
   223ac:	ldrb	w0, [x21, #17]
   223b0:	cmp	w0, #0x7a
   223b4:	b.ne	223cc <PyInit__decimal@@Base+0x822c>  // b.any
   223b8:	ldr	x20, [x19, #8]
   223bc:	add	x0, x26, x20
   223c0:	ldr	x20, [x21]
   223c4:	cmp	x0, x20
   223c8:	b.lt	222b0 <PyInit__decimal@@Base+0x8110>  // b.tstop
   223cc:	cbz	x24, 22404 <PyInit__decimal@@Base+0x8264>
   223d0:	ldr	x0, [x19]
   223d4:	add	x0, x0, #0x1
   223d8:	str	x0, [x19]
   223dc:	ldr	x0, [x19, #8]
   223e0:	add	x0, x0, #0x1
   223e4:	str	x0, [x19, #8]
   223e8:	ldr	x0, [x19, #16]
   223ec:	sub	x0, x0, #0x1
   223f0:	str	x0, [x19, #16]
   223f4:	ldr	x1, [x19, #24]
   223f8:	cbz	x1, 22414 <PyInit__decimal@@Base+0x8274>
   223fc:	ldrb	w2, [x24]
   22400:	strb	w2, [x1, x0]
   22404:	ldr	x0, [x19, #24]
   22408:	cbz	x0, 22414 <PyInit__decimal@@Base+0x8274>
   2240c:	ldr	x1, [x19]
   22410:	strb	wzr, [x0, x1]
   22414:	ldp	x19, x20, [sp, #16]
   22418:	ldp	x21, x22, [sp, #32]
   2241c:	ldp	x23, x24, [sp, #48]
   22420:	ldp	x25, x26, [sp, #64]
   22424:	ldp	x27, x28, [sp, #80]
   22428:	ldp	x29, x30, [sp], #96
   2242c:	ret
   22430:	stp	x29, x30, [sp, #-144]!
   22434:	mov	x29, sp
   22438:	stp	x19, x20, [sp, #16]
   2243c:	stp	x23, x24, [sp, #48]
   22440:	str	x0, [sp, #120]
   22444:	mov	x20, x1
   22448:	str	w2, [sp, #104]
   2244c:	mov	x23, x3
   22450:	mov	x0, x1
   22454:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
   22458:	cbnz	w0, 224cc <PyInit__decimal@@Base+0x832c>
   2245c:	ldr	x0, [x20, #8]
   22460:	ldr	x1, [x20, #16]
   22464:	add	x2, x0, x1
   22468:	str	x2, [sp, #128]
   2246c:	ldr	w1, [sp, #104]
   22470:	and	w3, w1, #0x8
   22474:	str	w3, [sp, #140]
   22478:	tbnz	w1, #3, 229f4 <PyInit__decimal@@Base+0x8854>
   2247c:	tbnz	w1, #4, 229f0 <PyInit__decimal@@Base+0x8850>
   22480:	cmp	x0, #0x0
   22484:	ccmn	x2, #0x5, #0x1, le
   22488:	b.ge	22bc8 <PyInit__decimal@@Base+0x8a28>  // b.tcont
   2248c:	tbz	w1, #2, 229f4 <PyInit__decimal@@Base+0x8854>
   22490:	mov	x0, x20
   22494:	bl	28118 <PyInit__decimal@@Base+0xdf78>
   22498:	cbz	w0, 229c0 <PyInit__decimal@@Base+0x8820>
   2249c:	ldr	x1, [x20, #8]
   224a0:	add	x1, x1, #0x2
   224a4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   224a8:	movk	x0, #0x5556
   224ac:	smulh	x0, x1, x0
   224b0:	sub	x0, x0, x1, asr #63
   224b4:	add	x0, x0, x0, lsl #1
   224b8:	subs	x0, x1, x0
   224bc:	add	x1, x0, #0x3
   224c0:	csel	x0, x1, x0, mi  // mi = first
   224c4:	sub	x23, x0, #0x1
   224c8:	b	229f4 <PyInit__decimal@@Base+0x8854>
   224cc:	mov	x0, x20
   224d0:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
   224d4:	mov	w1, w0
   224d8:	mov	x0, #0xb                   	// #11
   224dc:	cbz	w1, 224f4 <PyInit__decimal@@Base+0x8354>
   224e0:	ldr	x1, [x20, #24]
   224e4:	cmp	x1, #0x0
   224e8:	b.le	224f4 <PyInit__decimal@@Base+0x8354>
   224ec:	ldr	x0, [x20, #16]
   224f0:	add	x0, x0, #0xb
   224f4:	mov	x1, #0x1                   	// #1
   224f8:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   224fc:	str	x0, [sp, #112]
   22500:	cbz	x0, 226dc <PyInit__decimal@@Base+0x853c>
   22504:	mov	x0, x20
   22508:	bl	280cc <PyInit__decimal@@Base+0xdf2c>
   2250c:	cbz	w0, 226ec <PyInit__decimal@@Base+0x854c>
   22510:	ldr	x19, [sp, #112]
   22514:	mov	w0, #0x2d                  	// #45
   22518:	strb	w0, [x19], #1
   2251c:	mov	x0, x20
   22520:	bl	280c0 <PyInit__decimal@@Base+0xdf20>
   22524:	cbz	w0, 22988 <PyInit__decimal@@Base+0x87e8>
   22528:	mov	x0, x20
   2252c:	bl	280e8 <PyInit__decimal@@Base+0xdf48>
   22530:	cbz	w0, 22720 <PyInit__decimal@@Base+0x8580>
   22534:	mov	w0, #0x614e                	// #24910
   22538:	movk	w0, #0x4e, lsl #16
   2253c:	str	w0, [x19], #3
   22540:	ldr	x0, [x20, #24]
   22544:	cmp	x0, #0x0
   22548:	b.le	23094 <PyInit__decimal@@Base+0x8ef4>
   2254c:	stp	x21, x22, [sp, #32]
   22550:	mov	x0, x20
   22554:	bl	27d20 <PyInit__decimal@@Base+0xdb80>
   22558:	mov	x21, x0
   2255c:	bl	27b60 <PyInit__decimal@@Base+0xd9c0>
   22560:	mov	x3, #0x0                   	// #0
   22564:	mov	w2, w0
   22568:	mov	x1, x21
   2256c:	mov	x0, x19
   22570:	bl	21bb8 <PyInit__decimal@@Base+0x7a18>
   22574:	mov	x19, x0
   22578:	ldr	x3, [x20, #24]
   2257c:	subs	x3, x3, #0x2
   22580:	b.mi	2393c <PyInit__decimal@@Base+0x979c>  // b.first
   22584:	stp	x25, x26, [sp, #64]
   22588:	stp	x27, x28, [sp, #80]
   2258c:	mov	x27, #0x490f                	// #18703
   22590:	movk	x27, #0x7747, lsl #16
   22594:	movk	x27, #0x49c9, lsl #32
   22598:	mov	x26, #0xa7640000            	// #2808348672
   2259c:	movk	x26, #0xb6b3, lsl #32
   225a0:	movk	x26, #0xde0, lsl #48
   225a4:	mov	x25, #0x1b53                	// #6995
   225a8:	movk	x25, #0xd519, lsl #16
   225ac:	movk	x25, #0x5c3b, lsl #32
   225b0:	mov	x24, #0x5d8a0000            	// #1569325056
   225b4:	movk	x24, #0x4578, lsl #32
   225b8:	movk	x24, #0x163, lsl #48
   225bc:	mov	x23, #0x7857                	// #30807
   225c0:	movk	x23, #0xb113, lsl #16
   225c4:	movk	x23, #0x652f, lsl #32
   225c8:	movk	x23, #0x39a5, lsl #48
   225cc:	mov	x22, #0x6fc10000            	// #1874919424
   225d0:	movk	x22, #0x86f2, lsl #32
   225d4:	movk	x22, #0x23, lsl #48
   225d8:	mov	x21, #0xeac3                	// #60099
   225dc:	movk	x21, #0xf3dc, lsl #16
   225e0:	movk	x21, #0x4075, lsl #32
   225e4:	movk	x21, #0x2, lsl #48
   225e8:	mov	x18, #0x8000                	// #32768
   225ec:	movk	x18, #0xa4c6, lsl #16
   225f0:	movk	x18, #0x8d7e, lsl #32
   225f4:	movk	x18, #0x3, lsl #48
   225f8:	mov	x17, #0xcd81                	// #52609
   225fc:	movk	x17, #0x5095, lsl #16
   22600:	movk	x17, #0x4dc3, lsl #32
   22604:	movk	x17, #0xb42, lsl #48
   22608:	mov	x16, #0x4000                	// #16384
   2260c:	movk	x16, #0x107a, lsl #16
   22610:	movk	x16, #0x5af3, lsl #32
   22614:	mov	x15, #0x385                 	// #901
   22618:	movk	x15, #0x92ed, lsl #16
   2261c:	movk	x15, #0x84d0, lsl #32
   22620:	movk	x15, #0x384b, lsl #48
   22624:	mov	x14, #0xa000                	// #40960
   22628:	movk	x14, #0x4e72, lsl #16
   2262c:	movk	x14, #0x918, lsl #32
   22630:	mov	x13, #0x2233                	// #8755
   22634:	movk	x13, #0x5bd4, lsl #16
   22638:	movk	x13, #0x3302, lsl #32
   2263c:	movk	x13, #0x232f, lsl #48
   22640:	mov	x12, #0x1000                	// #4096
   22644:	movk	x12, #0xd4a5, lsl #16
   22648:	movk	x12, #0xe8, lsl #32
   2264c:	mov	x11, #0xaaff                	// #43775
   22650:	movk	x11, #0xcb24, lsl #16
   22654:	movk	x11, #0xff0b, lsl #32
   22658:	movk	x11, #0xafeb, lsl #48
   2265c:	mov	x10, #0xe800                	// #59392
   22660:	movk	x10, #0x4876, lsl #16
   22664:	movk	x10, #0x17, lsl #32
   22668:	mov	x9, #0xd5bf                	// #54719
   2266c:	movk	x9, #0xbded, lsl #16
   22670:	movk	x9, #0xfece, lsl #32
   22674:	movk	x9, #0xdbe6, lsl #48
   22678:	mov	x8, #0x5a53                	// #23123
   2267c:	movk	x8, #0xa09b, lsl #16
   22680:	movk	x8, #0xb82f, lsl #32
   22684:	movk	x8, #0x44, lsl #48
   22688:	mov	x7, #0xcefd                	// #52989
   2268c:	movk	x7, #0x8461, lsl #16
   22690:	movk	x7, #0x7711, lsl #32
   22694:	movk	x7, #0xabcc, lsl #48
   22698:	mov	x6, #0x42bd                	// #17085
   2269c:	movk	x6, #0xe57a, lsl #16
   226a0:	movk	x6, #0x94d5, lsl #32
   226a4:	movk	x6, #0xd6bf, lsl #48
   226a8:	mov	x5, #0x34db                	// #13531
   226ac:	movk	x5, #0xd7b6, lsl #16
   226b0:	movk	x5, #0xde82, lsl #32
   226b4:	movk	x5, #0x431b, lsl #48
   226b8:	mov	x4, #0x7843                	// #30787
   226bc:	movk	x4, #0x71b4, lsl #16
   226c0:	movk	x4, #0x5ac4, lsl #32
   226c4:	movk	x4, #0xa7c, lsl #48
   226c8:	mov	x30, #0x594b                	// #22859
   226cc:	movk	x30, #0x3886, lsl #16
   226d0:	movk	x30, #0xc5d6, lsl #32
   226d4:	movk	x30, #0x346d, lsl #48
   226d8:	b	22954 <PyInit__decimal@@Base+0x87b4>
   226dc:	ldr	x0, [sp, #120]
   226e0:	str	xzr, [x0]
   226e4:	mov	x0, #0xffffffffffffffff    	// #-1
   226e8:	b	230c0 <PyInit__decimal@@Base+0x8f20>
   226ec:	ldr	x0, [sp, #104]
   226f0:	tbz	w0, #6, 22704 <PyInit__decimal@@Base+0x8564>
   226f4:	ldr	x19, [sp, #112]
   226f8:	mov	w0, #0x20                  	// #32
   226fc:	strb	w0, [x19], #1
   22700:	b	2251c <PyInit__decimal@@Base+0x837c>
   22704:	ldr	x0, [sp, #112]
   22708:	mov	x19, x0
   2270c:	ldr	x1, [sp, #104]
   22710:	tbz	w1, #7, 2251c <PyInit__decimal@@Base+0x837c>
   22714:	mov	w0, #0x2b                  	// #43
   22718:	strb	w0, [x19], #1
   2271c:	b	2251c <PyInit__decimal@@Base+0x837c>
   22720:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   22724:	add	x0, x0, #0x698
   22728:	ldr	w1, [x0]
   2272c:	str	w1, [x19]
   22730:	ldrb	w0, [x0, #4]
   22734:	strb	w0, [x19, #4]!
   22738:	b	22540 <PyInit__decimal@@Base+0x83a0>
   2273c:	lsr	x2, x1, #18
   22740:	umulh	x2, x2, x27
   22744:	lsr	x2, x2, #24
   22748:	add	w19, w2, #0x30
   2274c:	strb	w19, [x0]
   22750:	msub	x1, x2, x26, x1
   22754:	lsr	x2, x1, #17
   22758:	umulh	x2, x2, x25
   2275c:	lsr	x2, x2, #22
   22760:	add	w19, w2, #0x30
   22764:	strb	w19, [x0, #1]
   22768:	msub	x2, x2, x24, x1
   2276c:	umulh	x1, x2, x23
   22770:	lsr	x1, x1, #51
   22774:	add	w19, w1, #0x30
   22778:	strb	w19, [x0, #2]
   2277c:	msub	x2, x1, x22, x2
   22780:	lsr	x1, x2, #15
   22784:	umulh	x1, x1, x21
   22788:	lsr	x1, x1, #20
   2278c:	add	w19, w1, #0x30
   22790:	strb	w19, [x0, #3]
   22794:	msub	x1, x1, x18, x2
   22798:	umulh	x2, x1, x17
   2279c:	lsr	x2, x2, #42
   227a0:	add	w19, w2, #0x30
   227a4:	strb	w19, [x0, #4]
   227a8:	msub	x2, x2, x16, x1
   227ac:	umulh	x1, x2, x15
   227b0:	lsr	x1, x1, #41
   227b4:	add	w19, w1, #0x30
   227b8:	strb	w19, [x0, #5]
   227bc:	msub	x2, x1, x14, x2
   227c0:	umulh	x1, x2, x13
   227c4:	lsr	x1, x1, #37
   227c8:	add	w19, w1, #0x30
   227cc:	strb	w19, [x0, #6]
   227d0:	msub	x1, x1, x12, x2
   227d4:	umulh	x2, x1, x11
   227d8:	lsr	x2, x2, #36
   227dc:	add	w19, w2, #0x30
   227e0:	strb	w19, [x0, #7]
   227e4:	msub	x1, x2, x10, x1
   227e8:	umulh	x2, x1, x9
   227ec:	lsr	x2, x2, #33
   227f0:	add	w19, w2, #0x30
   227f4:	strb	w19, [x0, #8]
   227f8:	mov	x19, #0xe400                	// #58368
   227fc:	movk	x19, #0x540b, lsl #16
   22800:	movk	x19, #0x2, lsl #32
   22804:	msub	x2, x2, x19, x1
   22808:	lsr	x1, x2, #9
   2280c:	umulh	x1, x1, x8
   22810:	lsr	x1, x1, #11
   22814:	add	w19, w1, #0x30
   22818:	strb	w19, [x0, #9]
   2281c:	mov	x19, #0xca00                	// #51712
   22820:	movk	x19, #0x3b9a, lsl #16
   22824:	msub	x1, x1, x19, x2
   22828:	umulh	x19, x1, x7
   2282c:	lsr	x19, x19, #26
   22830:	add	w2, w19, #0x30
   22834:	strb	w2, [x0, #10]
   22838:	mov	x2, #0xe100                	// #57600
   2283c:	movk	x2, #0x5f5, lsl #16
   22840:	msub	x1, x19, x2, x1
   22844:	umulh	x2, x1, x6
   22848:	lsr	x2, x2, #23
   2284c:	add	w19, w2, #0x30
   22850:	strb	w19, [x0, #11]
   22854:	mov	x19, #0x9680                	// #38528
   22858:	movk	x19, #0x98, lsl #16
   2285c:	msub	x19, x2, x19, x1
   22860:	umulh	x1, x19, x5
   22864:	lsr	x1, x1, #18
   22868:	add	w2, w1, #0x30
   2286c:	strb	w2, [x0, #12]
   22870:	mov	x2, #0x4240                	// #16960
   22874:	movk	x2, #0xf, lsl #16
   22878:	msub	x2, x1, x2, x19
   2287c:	lsr	x1, x2, #5
   22880:	umulh	x1, x1, x4
   22884:	lsr	x1, x1, #7
   22888:	add	w19, w1, #0x30
   2288c:	strb	w19, [x0, #13]
   22890:	mov	x19, #0x86a0                	// #34464
   22894:	movk	x19, #0x1, lsl #16
   22898:	msub	x1, x1, x19, x2
   2289c:	umulh	x28, x1, x30
   228a0:	lsr	x28, x28, #11
   228a4:	add	w2, w28, #0x30
   228a8:	strb	w2, [x0, #14]
   228ac:	mov	x2, #0x2710                	// #10000
   228b0:	msub	x1, x28, x2, x1
   228b4:	lsr	x19, x1, #3
   228b8:	mov	x2, #0xf7cf                	// #63439
   228bc:	movk	x2, #0xe353, lsl #16
   228c0:	movk	x2, #0x9ba5, lsl #32
   228c4:	movk	x2, #0x20c4, lsl #48
   228c8:	umulh	x19, x19, x2
   228cc:	lsr	x19, x19, #4
   228d0:	add	w2, w19, #0x30
   228d4:	strb	w2, [x0, #15]
   228d8:	lsl	x2, x19, #5
   228dc:	sub	x28, x2, x19
   228e0:	add	x2, x19, x28, lsl #2
   228e4:	sub	x28, x1, x2, lsl #3
   228e8:	lsr	x19, x28, #2
   228ec:	mov	x1, #0xf5c3                	// #62915
   228f0:	movk	x1, #0x5c28, lsl #16
   228f4:	movk	x1, #0xc28f, lsl #32
   228f8:	movk	x1, #0x28f5, lsl #48
   228fc:	umulh	x19, x19, x1
   22900:	lsr	x19, x19, #2
   22904:	add	w1, w19, #0x30
   22908:	strb	w1, [x0, #16]
   2290c:	add	x1, x19, x19, lsl #1
   22910:	add	x1, x19, x1, lsl #3
   22914:	sub	x2, x28, x1, lsl #2
   22918:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2291c:	movk	x1, #0xcccd
   22920:	umulh	x1, x2, x1
   22924:	lsr	x1, x1, #3
   22928:	add	w19, w1, #0x30
   2292c:	strb	w19, [x0, #17]
   22930:	add	x19, x0, #0x13
   22934:	add	x1, x1, x1, lsl #2
   22938:	sub	x1, x2, x1, lsl #1
   2293c:	add	w1, w1, #0x30
   22940:	strb	w1, [x0, #18]
   22944:	strb	wzr, [x0, #19]
   22948:	sub	x3, x3, #0x1
   2294c:	cmn	x3, #0x1
   22950:	b.eq	22978 <PyInit__decimal@@Base+0x87d8>  // b.none
   22954:	ldr	x0, [x20, #40]
   22958:	ldr	x1, [x0, x3, lsl #3]
   2295c:	mov	x0, x19
   22960:	cbnz	x19, 2273c <PyInit__decimal@@Base+0x859c>
   22964:	mov	x0, #0x0                   	// #0
   22968:	mov	w2, #0x2e                  	// #46
   2296c:	strb	w2, [x0]
   22970:	mov	x0, #0x1                   	// #1
   22974:	b	2273c <PyInit__decimal@@Base+0x859c>
   22978:	ldp	x21, x22, [sp, #32]
   2297c:	ldp	x25, x26, [sp, #64]
   22980:	ldp	x27, x28, [sp, #80]
   22984:	b	23094 <PyInit__decimal@@Base+0x8ef4>
   22988:	mov	x0, x20
   2298c:	bl	280b4 <PyInit__decimal@@Base+0xdf14>
   22990:	cbz	w0, 229b0 <PyInit__decimal@@Base+0x8810>
   22994:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   22998:	add	x0, x0, #0x190
   2299c:	ldr	x1, [x0]
   229a0:	str	x1, [x19]
   229a4:	ldrb	w0, [x0, #8]
   229a8:	strb	w0, [x19, #8]!
   229ac:	b	23094 <PyInit__decimal@@Base+0x8ef4>
   229b0:	stp	x21, x22, [sp, #32]
   229b4:	stp	x25, x26, [sp, #64]
   229b8:	stp	x27, x28, [sp, #80]
   229bc:	bl	67c0 <abort@plt>
   229c0:	ldr	x0, [sp, #128]
   229c4:	sub	x1, x0, #0x1
   229c8:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   229cc:	movk	x0, #0x5556
   229d0:	smulh	x0, x1, x0
   229d4:	sub	x0, x0, x1, asr #63
   229d8:	add	x0, x0, x0, lsl #1
   229dc:	subs	x0, x1, x0
   229e0:	add	x1, x0, #0x3
   229e4:	csel	x0, x1, x0, mi  // mi = first
   229e8:	add	x23, x23, x0
   229ec:	b	229f4 <PyInit__decimal@@Base+0x8854>
   229f0:	ldr	x23, [sp, #128]
   229f4:	cmp	x23, #0x0
   229f8:	b.le	22bd0 <PyInit__decimal@@Base+0x8a30>
   229fc:	ldr	x0, [x20, #16]
   22a00:	cmp	x0, x23
   22a04:	csel	x0, x0, x23, ge  // ge = tcont
   22a08:	mov	x1, #0x1                   	// #1
   22a0c:	add	x0, x0, #0x1a
   22a10:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   22a14:	str	x0, [sp, #112]
   22a18:	cbz	x0, 22be0 <PyInit__decimal@@Base+0x8a40>
   22a1c:	stp	x21, x22, [sp, #32]
   22a20:	mov	x0, x20
   22a24:	bl	280cc <PyInit__decimal@@Base+0xdf2c>
   22a28:	cbz	w0, 22bf0 <PyInit__decimal@@Base+0x8a50>
   22a2c:	ldr	x19, [sp, #112]
   22a30:	mov	w0, #0x2d                  	// #45
   22a34:	strb	w0, [x19], #1
   22a38:	cmp	x23, #0x0
   22a3c:	b.le	22c24 <PyInit__decimal@@Base+0x8a84>
   22a40:	ldr	x0, [x20, #16]
   22a44:	cmp	x0, x23
   22a48:	b.gt	23358 <PyInit__decimal@@Base+0x91b8>
   22a4c:	mov	x0, x20
   22a50:	bl	27d20 <PyInit__decimal@@Base+0xdb80>
   22a54:	mov	x21, x0
   22a58:	bl	27b60 <PyInit__decimal@@Base+0xd9c0>
   22a5c:	mov	x3, #0x0                   	// #0
   22a60:	mov	w2, w0
   22a64:	mov	x1, x21
   22a68:	mov	x0, x19
   22a6c:	bl	21bb8 <PyInit__decimal@@Base+0x7a18>
   22a70:	ldr	x4, [x20, #24]
   22a74:	subs	x4, x4, #0x2
   22a78:	b.mi	2331c <PyInit__decimal@@Base+0x917c>  // b.first
   22a7c:	stp	x25, x26, [sp, #64]
   22a80:	stp	x27, x28, [sp, #80]
   22a84:	mov	x28, #0x490f                	// #18703
   22a88:	movk	x28, #0x7747, lsl #16
   22a8c:	movk	x28, #0x49c9, lsl #32
   22a90:	mov	x27, #0xa7640000            	// #2808348672
   22a94:	movk	x27, #0xb6b3, lsl #32
   22a98:	movk	x27, #0xde0, lsl #48
   22a9c:	mov	x26, #0x1b53                	// #6995
   22aa0:	movk	x26, #0xd519, lsl #16
   22aa4:	movk	x26, #0x5c3b, lsl #32
   22aa8:	mov	x25, #0x5d8a0000            	// #1569325056
   22aac:	movk	x25, #0x4578, lsl #32
   22ab0:	movk	x25, #0x163, lsl #48
   22ab4:	mov	x24, #0x7857                	// #30807
   22ab8:	movk	x24, #0xb113, lsl #16
   22abc:	movk	x24, #0x652f, lsl #32
   22ac0:	movk	x24, #0x39a5, lsl #48
   22ac4:	mov	x22, #0xeac3                	// #60099
   22ac8:	movk	x22, #0xf3dc, lsl #16
   22acc:	movk	x22, #0x4075, lsl #32
   22ad0:	movk	x22, #0x2, lsl #48
   22ad4:	mov	x21, #0x8000                	// #32768
   22ad8:	movk	x21, #0xa4c6, lsl #16
   22adc:	movk	x21, #0x8d7e, lsl #32
   22ae0:	movk	x21, #0x3, lsl #48
   22ae4:	mov	x19, #0xcd81                	// #52609
   22ae8:	movk	x19, #0x5095, lsl #16
   22aec:	movk	x19, #0x4dc3, lsl #32
   22af0:	movk	x19, #0xb42, lsl #48
   22af4:	mov	x18, #0x4000                	// #16384
   22af8:	movk	x18, #0x107a, lsl #16
   22afc:	movk	x18, #0x5af3, lsl #32
   22b00:	mov	x17, #0x385                 	// #901
   22b04:	movk	x17, #0x92ed, lsl #16
   22b08:	movk	x17, #0x84d0, lsl #32
   22b0c:	movk	x17, #0x384b, lsl #48
   22b10:	mov	x16, #0xa000                	// #40960
   22b14:	movk	x16, #0x4e72, lsl #16
   22b18:	movk	x16, #0x918, lsl #32
   22b1c:	mov	x15, #0x2233                	// #8755
   22b20:	movk	x15, #0x5bd4, lsl #16
   22b24:	movk	x15, #0x3302, lsl #32
   22b28:	movk	x15, #0x232f, lsl #48
   22b2c:	mov	x14, #0x1000                	// #4096
   22b30:	movk	x14, #0xd4a5, lsl #16
   22b34:	movk	x14, #0xe8, lsl #32
   22b38:	mov	x13, #0xaaff                	// #43775
   22b3c:	movk	x13, #0xcb24, lsl #16
   22b40:	movk	x13, #0xff0b, lsl #32
   22b44:	movk	x13, #0xafeb, lsl #48
   22b48:	mov	x12, #0xe800                	// #59392
   22b4c:	movk	x12, #0x4876, lsl #16
   22b50:	movk	x12, #0x17, lsl #32
   22b54:	mov	x11, #0xd5bf                	// #54719
   22b58:	movk	x11, #0xbded, lsl #16
   22b5c:	movk	x11, #0xfece, lsl #32
   22b60:	movk	x11, #0xdbe6, lsl #48
   22b64:	mov	x10, #0x5a53                	// #23123
   22b68:	movk	x10, #0xa09b, lsl #16
   22b6c:	movk	x10, #0xb82f, lsl #32
   22b70:	movk	x10, #0x44, lsl #48
   22b74:	mov	x9, #0xcefd                	// #52989
   22b78:	movk	x9, #0x8461, lsl #16
   22b7c:	movk	x9, #0x7711, lsl #32
   22b80:	movk	x9, #0xabcc, lsl #48
   22b84:	mov	x8, #0x42bd                	// #17085
   22b88:	movk	x8, #0xe57a, lsl #16
   22b8c:	movk	x8, #0x94d5, lsl #32
   22b90:	movk	x8, #0xd6bf, lsl #48
   22b94:	mov	x7, #0x34db                	// #13531
   22b98:	movk	x7, #0xd7b6, lsl #16
   22b9c:	movk	x7, #0xde82, lsl #32
   22ba0:	movk	x7, #0x431b, lsl #48
   22ba4:	mov	x6, #0x7843                	// #30787
   22ba8:	movk	x6, #0x71b4, lsl #16
   22bac:	movk	x6, #0x5ac4, lsl #32
   22bb0:	movk	x6, #0xa7c, lsl #48
   22bb4:	mov	x5, #0xf5c3                	// #62915
   22bb8:	movk	x5, #0x5c28, lsl #16
   22bbc:	movk	x5, #0xc28f, lsl #32
   22bc0:	movk	x5, #0x28f5, lsl #48
   22bc4:	b	23300 <PyInit__decimal@@Base+0x9160>
   22bc8:	ldr	x23, [sp, #128]
   22bcc:	b	229f4 <PyInit__decimal@@Base+0x8854>
   22bd0:	ldr	x0, [x20, #16]
   22bd4:	add	x0, x0, #0x2
   22bd8:	sub	x0, x0, x23
   22bdc:	b	22a08 <PyInit__decimal@@Base+0x8868>
   22be0:	ldr	x0, [sp, #120]
   22be4:	str	xzr, [x0]
   22be8:	mov	x0, #0xffffffffffffffff    	// #-1
   22bec:	b	230c0 <PyInit__decimal@@Base+0x8f20>
   22bf0:	ldr	x0, [sp, #104]
   22bf4:	tbz	w0, #6, 22c08 <PyInit__decimal@@Base+0x8a68>
   22bf8:	ldr	x19, [sp, #112]
   22bfc:	mov	w0, #0x20                  	// #32
   22c00:	strb	w0, [x19], #1
   22c04:	b	22a38 <PyInit__decimal@@Base+0x8898>
   22c08:	ldr	x0, [sp, #112]
   22c0c:	mov	x19, x0
   22c10:	ldr	x1, [sp, #104]
   22c14:	tbz	w1, #7, 22a38 <PyInit__decimal@@Base+0x8898>
   22c18:	mov	w0, #0x2b                  	// #43
   22c1c:	strb	w0, [x19], #1
   22c20:	b	22a38 <PyInit__decimal@@Base+0x8898>
   22c24:	mov	x21, x19
   22c28:	mov	w0, #0x30                  	// #48
   22c2c:	strb	w0, [x21], #2
   22c30:	mov	w0, #0x2e                  	// #46
   22c34:	strb	w0, [x19, #1]
   22c38:	neg	x2, x23
   22c3c:	cmp	x2, #0x0
   22c40:	b.le	22c64 <PyInit__decimal@@Base+0x8ac4>
   22c44:	sub	x19, x19, x23
   22c48:	add	x19, x19, #0x2
   22c4c:	mov	x0, x21
   22c50:	mov	w1, #0x30                  	// #48
   22c54:	strb	w1, [x0], #1
   22c58:	cmp	x0, x19
   22c5c:	b.ne	22c54 <PyInit__decimal@@Base+0x8ab4>  // b.any
   22c60:	add	x21, x21, x2
   22c64:	mov	x0, x20
   22c68:	bl	27d20 <PyInit__decimal@@Base+0xdb80>
   22c6c:	mov	x19, x0
   22c70:	bl	27b60 <PyInit__decimal@@Base+0xd9c0>
   22c74:	mov	x3, #0x0                   	// #0
   22c78:	mov	w2, w0
   22c7c:	mov	x1, x19
   22c80:	mov	x0, x21
   22c84:	bl	21bb8 <PyInit__decimal@@Base+0x7a18>
   22c88:	mov	x19, x0
   22c8c:	ldr	x3, [x20, #24]
   22c90:	subs	x3, x3, #0x2
   22c94:	b.mi	23034 <PyInit__decimal@@Base+0x8e94>  // b.first
   22c98:	stp	x25, x26, [sp, #64]
   22c9c:	stp	x27, x28, [sp, #80]
   22ca0:	mov	x28, #0x490f                	// #18703
   22ca4:	movk	x28, #0x7747, lsl #16
   22ca8:	movk	x28, #0x49c9, lsl #32
   22cac:	mov	x27, #0xa7640000            	// #2808348672
   22cb0:	movk	x27, #0xb6b3, lsl #32
   22cb4:	movk	x27, #0xde0, lsl #48
   22cb8:	mov	x26, #0x1b53                	// #6995
   22cbc:	movk	x26, #0xd519, lsl #16
   22cc0:	movk	x26, #0x5c3b, lsl #32
   22cc4:	mov	x25, #0x5d8a0000            	// #1569325056
   22cc8:	movk	x25, #0x4578, lsl #32
   22ccc:	movk	x25, #0x163, lsl #48
   22cd0:	mov	x24, #0x7857                	// #30807
   22cd4:	movk	x24, #0xb113, lsl #16
   22cd8:	movk	x24, #0x652f, lsl #32
   22cdc:	movk	x24, #0x39a5, lsl #48
   22ce0:	mov	x22, #0xeac3                	// #60099
   22ce4:	movk	x22, #0xf3dc, lsl #16
   22ce8:	movk	x22, #0x4075, lsl #32
   22cec:	movk	x22, #0x2, lsl #48
   22cf0:	mov	x21, #0x8000                	// #32768
   22cf4:	movk	x21, #0xa4c6, lsl #16
   22cf8:	movk	x21, #0x8d7e, lsl #32
   22cfc:	movk	x21, #0x3, lsl #48
   22d00:	mov	x30, #0xcd81                	// #52609
   22d04:	movk	x30, #0x5095, lsl #16
   22d08:	movk	x30, #0x4dc3, lsl #32
   22d0c:	movk	x30, #0xb42, lsl #48
   22d10:	mov	x18, #0x4000                	// #16384
   22d14:	movk	x18, #0x107a, lsl #16
   22d18:	movk	x18, #0x5af3, lsl #32
   22d1c:	mov	x17, #0x385                 	// #901
   22d20:	movk	x17, #0x92ed, lsl #16
   22d24:	movk	x17, #0x84d0, lsl #32
   22d28:	movk	x17, #0x384b, lsl #48
   22d2c:	mov	x16, #0xa000                	// #40960
   22d30:	movk	x16, #0x4e72, lsl #16
   22d34:	movk	x16, #0x918, lsl #32
   22d38:	mov	x15, #0x2233                	// #8755
   22d3c:	movk	x15, #0x5bd4, lsl #16
   22d40:	movk	x15, #0x3302, lsl #32
   22d44:	movk	x15, #0x232f, lsl #48
   22d48:	mov	x14, #0x1000                	// #4096
   22d4c:	movk	x14, #0xd4a5, lsl #16
   22d50:	movk	x14, #0xe8, lsl #32
   22d54:	mov	x13, #0xaaff                	// #43775
   22d58:	movk	x13, #0xcb24, lsl #16
   22d5c:	movk	x13, #0xff0b, lsl #32
   22d60:	movk	x13, #0xafeb, lsl #48
   22d64:	mov	x12, #0xe800                	// #59392
   22d68:	movk	x12, #0x4876, lsl #16
   22d6c:	movk	x12, #0x17, lsl #32
   22d70:	mov	x11, #0xd5bf                	// #54719
   22d74:	movk	x11, #0xbded, lsl #16
   22d78:	movk	x11, #0xfece, lsl #32
   22d7c:	movk	x11, #0xdbe6, lsl #48
   22d80:	mov	x10, #0x5a53                	// #23123
   22d84:	movk	x10, #0xa09b, lsl #16
   22d88:	movk	x10, #0xb82f, lsl #32
   22d8c:	movk	x10, #0x44, lsl #48
   22d90:	mov	x9, #0xcefd                	// #52989
   22d94:	movk	x9, #0x8461, lsl #16
   22d98:	movk	x9, #0x7711, lsl #32
   22d9c:	movk	x9, #0xabcc, lsl #48
   22da0:	mov	x8, #0x42bd                	// #17085
   22da4:	movk	x8, #0xe57a, lsl #16
   22da8:	movk	x8, #0x94d5, lsl #32
   22dac:	movk	x8, #0xd6bf, lsl #48
   22db0:	mov	x7, #0x34db                	// #13531
   22db4:	movk	x7, #0xd7b6, lsl #16
   22db8:	movk	x7, #0xde82, lsl #32
   22dbc:	movk	x7, #0x431b, lsl #48
   22dc0:	mov	x6, #0x7843                	// #30787
   22dc4:	movk	x6, #0x71b4, lsl #16
   22dc8:	movk	x6, #0x5ac4, lsl #32
   22dcc:	movk	x6, #0xa7c, lsl #48
   22dd0:	mov	x5, #0x594b                	// #22859
   22dd4:	movk	x5, #0x3886, lsl #16
   22dd8:	movk	x5, #0xc5d6, lsl #32
   22ddc:	movk	x5, #0x346d, lsl #48
   22de0:	mov	x4, #0xf7cf                	// #63439
   22de4:	movk	x4, #0xe353, lsl #16
   22de8:	movk	x4, #0x9ba5, lsl #32
   22dec:	movk	x4, #0x20c4, lsl #48
   22df0:	b	23018 <PyInit__decimal@@Base+0x8e78>
   22df4:	mov	x0, #0x0                   	// #0
   22df8:	mov	w2, #0x2e                  	// #46
   22dfc:	strb	w2, [x0]
   22e00:	mov	x0, #0x1                   	// #1
   22e04:	lsr	x2, x1, #18
   22e08:	umulh	x2, x2, x28
   22e0c:	lsr	x2, x2, #24
   22e10:	add	w19, w2, #0x30
   22e14:	strb	w19, [x0]
   22e18:	msub	x1, x2, x27, x1
   22e1c:	lsr	x2, x1, #17
   22e20:	umulh	x2, x2, x26
   22e24:	lsr	x2, x2, #22
   22e28:	add	w19, w2, #0x30
   22e2c:	strb	w19, [x0, #1]
   22e30:	msub	x2, x2, x25, x1
   22e34:	umulh	x1, x2, x24
   22e38:	lsr	x1, x1, #51
   22e3c:	add	w19, w1, #0x30
   22e40:	strb	w19, [x0, #2]
   22e44:	mov	x19, #0x6fc10000            	// #1874919424
   22e48:	movk	x19, #0x86f2, lsl #32
   22e4c:	movk	x19, #0x23, lsl #48
   22e50:	msub	x2, x1, x19, x2
   22e54:	lsr	x1, x2, #15
   22e58:	umulh	x1, x1, x22
   22e5c:	lsr	x1, x1, #20
   22e60:	add	w19, w1, #0x30
   22e64:	strb	w19, [x0, #3]
   22e68:	msub	x1, x1, x21, x2
   22e6c:	umulh	x19, x1, x30
   22e70:	lsr	x19, x19, #42
   22e74:	add	w2, w19, #0x30
   22e78:	strb	w2, [x0, #4]
   22e7c:	msub	x1, x19, x18, x1
   22e80:	umulh	x19, x1, x17
   22e84:	lsr	x19, x19, #41
   22e88:	add	w2, w19, #0x30
   22e8c:	strb	w2, [x0, #5]
   22e90:	msub	x19, x19, x16, x1
   22e94:	umulh	x2, x19, x15
   22e98:	lsr	x2, x2, #37
   22e9c:	add	w1, w2, #0x30
   22ea0:	strb	w1, [x0, #6]
   22ea4:	msub	x1, x2, x14, x19
   22ea8:	umulh	x2, x1, x13
   22eac:	lsr	x2, x2, #36
   22eb0:	add	w19, w2, #0x30
   22eb4:	strb	w19, [x0, #7]
   22eb8:	msub	x2, x2, x12, x1
   22ebc:	umulh	x1, x2, x11
   22ec0:	lsr	x1, x1, #33
   22ec4:	add	w19, w1, #0x30
   22ec8:	strb	w19, [x0, #8]
   22ecc:	mov	x19, #0xe400                	// #58368
   22ed0:	movk	x19, #0x540b, lsl #16
   22ed4:	movk	x19, #0x2, lsl #32
   22ed8:	msub	x2, x1, x19, x2
   22edc:	lsr	x1, x2, #9
   22ee0:	umulh	x1, x1, x10
   22ee4:	lsr	x1, x1, #11
   22ee8:	add	w19, w1, #0x30
   22eec:	strb	w19, [x0, #9]
   22ef0:	mov	x19, #0xca00                	// #51712
   22ef4:	movk	x19, #0x3b9a, lsl #16
   22ef8:	msub	x1, x1, x19, x2
   22efc:	umulh	x2, x1, x9
   22f00:	lsr	x2, x2, #26
   22f04:	add	w19, w2, #0x30
   22f08:	strb	w19, [x0, #10]
   22f0c:	mov	x19, #0xe100                	// #57600
   22f10:	movk	x19, #0x5f5, lsl #16
   22f14:	msub	x1, x2, x19, x1
   22f18:	umulh	x2, x1, x8
   22f1c:	lsr	x2, x2, #23
   22f20:	add	w19, w2, #0x30
   22f24:	strb	w19, [x0, #11]
   22f28:	mov	x19, #0x9680                	// #38528
   22f2c:	movk	x19, #0x98, lsl #16
   22f30:	msub	x2, x2, x19, x1
   22f34:	umulh	x19, x2, x7
   22f38:	lsr	x19, x19, #18
   22f3c:	add	w1, w19, #0x30
   22f40:	strb	w1, [x0, #12]
   22f44:	mov	x1, #0x4240                	// #16960
   22f48:	movk	x1, #0xf, lsl #16
   22f4c:	msub	x1, x19, x1, x2
   22f50:	lsr	x19, x1, #5
   22f54:	umulh	x19, x19, x6
   22f58:	lsr	x19, x19, #7
   22f5c:	add	w2, w19, #0x30
   22f60:	strb	w2, [x0, #13]
   22f64:	mov	x2, #0x86a0                	// #34464
   22f68:	movk	x2, #0x1, lsl #16
   22f6c:	msub	x19, x19, x2, x1
   22f70:	umulh	x1, x19, x5
   22f74:	lsr	x1, x1, #11
   22f78:	add	w2, w1, #0x30
   22f7c:	strb	w2, [x0, #14]
   22f80:	mov	x2, #0x2710                	// #10000
   22f84:	msub	x19, x1, x2, x19
   22f88:	lsr	x1, x19, #3
   22f8c:	umulh	x1, x1, x4
   22f90:	lsr	x2, x1, #4
   22f94:	add	w1, w2, #0x30
   22f98:	strb	w1, [x0, #15]
   22f9c:	lsl	x1, x2, #5
   22fa0:	sub	x1, x1, x2
   22fa4:	add	x1, x2, x1, lsl #2
   22fa8:	sub	x19, x19, x1, lsl #3
   22fac:	lsr	x1, x19, #2
   22fb0:	mov	x2, #0xf5c3                	// #62915
   22fb4:	movk	x2, #0x5c28, lsl #16
   22fb8:	movk	x2, #0xc28f, lsl #32
   22fbc:	movk	x2, #0x28f5, lsl #48
   22fc0:	umulh	x1, x1, x2
   22fc4:	lsr	x2, x1, #2
   22fc8:	add	w1, w2, #0x30
   22fcc:	strb	w1, [x0, #16]
   22fd0:	add	x1, x2, x2, lsl #1
   22fd4:	add	x1, x2, x1, lsl #3
   22fd8:	sub	x2, x19, x1, lsl #2
   22fdc:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   22fe0:	movk	x1, #0xcccd
   22fe4:	umulh	x1, x2, x1
   22fe8:	lsr	x1, x1, #3
   22fec:	add	w19, w1, #0x30
   22ff0:	strb	w19, [x0, #17]
   22ff4:	add	x19, x0, #0x13
   22ff8:	add	x1, x1, x1, lsl #2
   22ffc:	sub	x1, x2, x1, lsl #1
   23000:	add	w1, w1, #0x30
   23004:	strb	w1, [x0, #18]
   23008:	strb	wzr, [x0, #19]
   2300c:	sub	x3, x3, #0x1
   23010:	cmn	x3, #0x1
   23014:	b.eq	2302c <PyInit__decimal@@Base+0x8e8c>  // b.none
   23018:	ldr	x0, [x20, #40]
   2301c:	ldr	x1, [x0, x3, lsl #3]
   23020:	mov	x0, x19
   23024:	cbnz	x19, 22e04 <PyInit__decimal@@Base+0x8c64>
   23028:	b	22df4 <PyInit__decimal@@Base+0x8c54>
   2302c:	ldp	x25, x26, [sp, #64]
   23030:	ldp	x27, x28, [sp, #80]
   23034:	ldr	w0, [sp, #140]
   23038:	cmp	w0, #0x0
   2303c:	ldr	x2, [sp, #128]
   23040:	ccmp	x23, x2, #0x0, eq  // eq = none
   23044:	b.eq	23944 <PyInit__decimal@@Base+0x97a4>  // b.none
   23048:	ldr	x0, [sp, #104]
   2304c:	tst	x0, #0x1
   23050:	mov	w0, #0x45                  	// #69
   23054:	mov	w1, #0x65                  	// #101
   23058:	csel	w0, w0, w1, ne  // ne = any
   2305c:	strb	w0, [x19]
   23060:	mov	w0, #0x2b                  	// #43
   23064:	subs	x20, x2, x23
   23068:	b.mi	23930 <PyInit__decimal@@Base+0x9790>  // b.first
   2306c:	strb	w0, [x19, #1]
   23070:	mov	x0, x20
   23074:	bl	27b60 <PyInit__decimal@@Base+0xd9c0>
   23078:	mov	x3, #0x0                   	// #0
   2307c:	mov	w2, w0
   23080:	mov	x1, x20
   23084:	add	x0, x19, #0x2
   23088:	bl	21bb8 <PyInit__decimal@@Base+0x7a18>
   2308c:	mov	x19, x0
   23090:	ldp	x21, x22, [sp, #32]
   23094:	ldr	x0, [sp, #104]
   23098:	tbz	w0, #5, 230ac <PyInit__decimal@@Base+0x8f0c>
   2309c:	mov	x0, x19
   230a0:	mov	w1, #0x25                  	// #37
   230a4:	strb	w1, [x0], #1
   230a8:	mov	x19, x0
   230ac:	strb	wzr, [x19]
   230b0:	ldr	x1, [sp, #120]
   230b4:	ldr	x0, [sp, #112]
   230b8:	str	x0, [x1]
   230bc:	sub	x0, x19, x0
   230c0:	ldp	x19, x20, [sp, #16]
   230c4:	ldp	x23, x24, [sp, #48]
   230c8:	ldp	x29, x30, [sp], #144
   230cc:	ret
   230d0:	mov	w1, #0x2e                  	// #46
   230d4:	strb	w1, [x0]
   230d8:	mov	x1, #0x1                   	// #1
   230dc:	lsr	x2, x3, #18
   230e0:	umulh	x2, x2, x28
   230e4:	lsr	x2, x2, #24
   230e8:	add	w0, w2, #0x30
   230ec:	strb	w0, [x1]
   230f0:	msub	x0, x2, x27, x3
   230f4:	lsr	x2, x0, #17
   230f8:	umulh	x2, x2, x26
   230fc:	lsr	x2, x2, #22
   23100:	add	w3, w2, #0x30
   23104:	strb	w3, [x1, #1]
   23108:	msub	x2, x2, x25, x0
   2310c:	umulh	x0, x2, x24
   23110:	lsr	x0, x0, #51
   23114:	add	w3, w0, #0x30
   23118:	strb	w3, [x1, #2]
   2311c:	mov	x3, #0x6fc10000            	// #1874919424
   23120:	movk	x3, #0x86f2, lsl #32
   23124:	movk	x3, #0x23, lsl #48
   23128:	msub	x2, x0, x3, x2
   2312c:	lsr	x0, x2, #15
   23130:	umulh	x0, x0, x22
   23134:	lsr	x0, x0, #20
   23138:	add	w3, w0, #0x30
   2313c:	strb	w3, [x1, #3]
   23140:	msub	x0, x0, x21, x2
   23144:	umulh	x2, x0, x19
   23148:	lsr	x2, x2, #42
   2314c:	add	w3, w2, #0x30
   23150:	strb	w3, [x1, #4]
   23154:	msub	x2, x2, x18, x0
   23158:	umulh	x0, x2, x17
   2315c:	lsr	x0, x0, #41
   23160:	add	w3, w0, #0x30
   23164:	strb	w3, [x1, #5]
   23168:	msub	x2, x0, x16, x2
   2316c:	umulh	x0, x2, x15
   23170:	lsr	x0, x0, #37
   23174:	add	w3, w0, #0x30
   23178:	strb	w3, [x1, #6]
   2317c:	msub	x0, x0, x14, x2
   23180:	umulh	x2, x0, x13
   23184:	lsr	x2, x2, #36
   23188:	add	w3, w2, #0x30
   2318c:	strb	w3, [x1, #7]
   23190:	msub	x0, x2, x12, x0
   23194:	umulh	x2, x0, x11
   23198:	lsr	x2, x2, #33
   2319c:	add	w3, w2, #0x30
   231a0:	strb	w3, [x1, #8]
   231a4:	mov	x3, #0xe400                	// #58368
   231a8:	movk	x3, #0x540b, lsl #16
   231ac:	movk	x3, #0x2, lsl #32
   231b0:	msub	x2, x2, x3, x0
   231b4:	lsr	x0, x2, #9
   231b8:	umulh	x0, x0, x10
   231bc:	lsr	x0, x0, #11
   231c0:	add	w3, w0, #0x30
   231c4:	strb	w3, [x1, #9]
   231c8:	mov	x3, #0xca00                	// #51712
   231cc:	movk	x3, #0x3b9a, lsl #16
   231d0:	msub	x0, x0, x3, x2
   231d4:	umulh	x2, x0, x9
   231d8:	lsr	x2, x2, #26
   231dc:	add	w3, w2, #0x30
   231e0:	strb	w3, [x1, #10]
   231e4:	mov	x3, #0xe100                	// #57600
   231e8:	movk	x3, #0x5f5, lsl #16
   231ec:	msub	x0, x2, x3, x0
   231f0:	umulh	x3, x0, x8
   231f4:	lsr	x3, x3, #23
   231f8:	add	w2, w3, #0x30
   231fc:	strb	w2, [x1, #11]
   23200:	mov	x2, #0x9680                	// #38528
   23204:	movk	x2, #0x98, lsl #16
   23208:	msub	x2, x3, x2, x0
   2320c:	umulh	x0, x2, x7
   23210:	lsr	x0, x0, #18
   23214:	add	w3, w0, #0x30
   23218:	strb	w3, [x1, #12]
   2321c:	mov	x3, #0x4240                	// #16960
   23220:	movk	x3, #0xf, lsl #16
   23224:	msub	x3, x0, x3, x2
   23228:	lsr	x0, x3, #5
   2322c:	umulh	x0, x0, x6
   23230:	lsr	x0, x0, #7
   23234:	add	w2, w0, #0x30
   23238:	strb	w2, [x1, #13]
   2323c:	mov	x2, #0x86a0                	// #34464
   23240:	movk	x2, #0x1, lsl #16
   23244:	msub	x0, x0, x2, x3
   23248:	mov	x2, #0x594b                	// #22859
   2324c:	movk	x2, #0x3886, lsl #16
   23250:	movk	x2, #0xc5d6, lsl #32
   23254:	movk	x2, #0x346d, lsl #48
   23258:	umulh	x3, x0, x2
   2325c:	lsr	x3, x3, #11
   23260:	add	w2, w3, #0x30
   23264:	strb	w2, [x1, #14]
   23268:	mov	x2, #0x2710                	// #10000
   2326c:	msub	x3, x3, x2, x0
   23270:	lsr	x30, x3, #3
   23274:	mov	x0, #0xf7cf                	// #63439
   23278:	movk	x0, #0xe353, lsl #16
   2327c:	movk	x0, #0x9ba5, lsl #32
   23280:	movk	x0, #0x20c4, lsl #48
   23284:	umulh	x30, x30, x0
   23288:	lsr	x30, x30, #4
   2328c:	add	w0, w30, #0x30
   23290:	strb	w0, [x1, #15]
   23294:	lsl	x0, x30, #5
   23298:	sub	x0, x0, x30
   2329c:	add	x0, x30, x0, lsl #2
   232a0:	sub	x0, x3, x0, lsl #3
   232a4:	lsr	x30, x0, #2
   232a8:	umulh	x30, x30, x5
   232ac:	lsr	x30, x30, #2
   232b0:	add	w2, w30, #0x30
   232b4:	strb	w2, [x1, #16]
   232b8:	add	x2, x30, x30, lsl #1
   232bc:	add	x2, x30, x2, lsl #3
   232c0:	sub	x3, x0, x2, lsl #2
   232c4:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   232c8:	movk	x2, #0xcccd
   232cc:	umulh	x2, x3, x2
   232d0:	lsr	x2, x2, #3
   232d4:	add	w0, w2, #0x30
   232d8:	strb	w0, [x1, #17]
   232dc:	add	x0, x1, #0x13
   232e0:	add	x2, x2, x2, lsl #2
   232e4:	sub	x2, x3, x2, lsl #1
   232e8:	add	w2, w2, #0x30
   232ec:	strb	w2, [x1, #18]
   232f0:	strb	wzr, [x1, #19]
   232f4:	sub	x4, x4, #0x1
   232f8:	cmn	x4, #0x1
   232fc:	b.eq	23314 <PyInit__decimal@@Base+0x9174>  // b.none
   23300:	ldr	x1, [x20, #40]
   23304:	ldr	x3, [x1, x4, lsl #3]
   23308:	mov	x1, x0
   2330c:	cbnz	x0, 230dc <PyInit__decimal@@Base+0x8f3c>
   23310:	b	230d0 <PyInit__decimal@@Base+0x8f30>
   23314:	ldp	x25, x26, [sp, #64]
   23318:	ldp	x27, x28, [sp, #80]
   2331c:	ldr	x1, [x20, #16]
   23320:	sub	x1, x23, x1
   23324:	cmp	x1, #0x0
   23328:	b.le	23928 <PyInit__decimal@@Base+0x9788>
   2332c:	mov	x1, #0x0                   	// #0
   23330:	add	x4, x0, #0x1
   23334:	mov	w3, #0x30                  	// #48
   23338:	add	x19, x4, x1
   2333c:	strb	w3, [x0, x1]
   23340:	add	x1, x1, #0x1
   23344:	ldr	x2, [x20, #16]
   23348:	sub	x2, x23, x2
   2334c:	cmp	x2, x1
   23350:	b.gt	23338 <PyInit__decimal@@Base+0x9198>
   23354:	b	23034 <PyInit__decimal@@Base+0x8e94>
   23358:	add	x21, x19, x23
   2335c:	mov	x0, x20
   23360:	bl	27d20 <PyInit__decimal@@Base+0xdb80>
   23364:	mov	x22, x0
   23368:	bl	27b60 <PyInit__decimal@@Base+0xd9c0>
   2336c:	mov	x3, x21
   23370:	mov	w2, w0
   23374:	mov	x1, x22
   23378:	mov	x0, x19
   2337c:	bl	21bb8 <PyInit__decimal@@Base+0x7a18>
   23380:	mov	x19, x0
   23384:	ldr	x1, [x20, #24]
   23388:	subs	x1, x1, #0x2
   2338c:	b.mi	23034 <PyInit__decimal@@Base+0x8e94>  // b.first
   23390:	stp	x25, x26, [sp, #64]
   23394:	stp	x27, x28, [sp, #80]
   23398:	mov	x24, #0x490f                	// #18703
   2339c:	movk	x24, #0x7747, lsl #16
   233a0:	movk	x24, #0x49c9, lsl #32
   233a4:	mov	x22, #0x1b53                	// #6995
   233a8:	movk	x22, #0xd519, lsl #16
   233ac:	movk	x22, #0x5c3b, lsl #32
   233b0:	mov	x18, #0x5d8a0000            	// #1569325056
   233b4:	movk	x18, #0x4578, lsl #32
   233b8:	movk	x18, #0x163, lsl #48
   233bc:	mov	x17, #0x7857                	// #30807
   233c0:	movk	x17, #0xb113, lsl #16
   233c4:	movk	x17, #0x652f, lsl #32
   233c8:	movk	x17, #0x39a5, lsl #48
   233cc:	mov	x16, #0x6fc10000            	// #1874919424
   233d0:	movk	x16, #0x86f2, lsl #32
   233d4:	movk	x16, #0x23, lsl #48
   233d8:	mov	x15, #0xeac3                	// #60099
   233dc:	movk	x15, #0xf3dc, lsl #16
   233e0:	movk	x15, #0x4075, lsl #32
   233e4:	movk	x15, #0x2, lsl #48
   233e8:	mov	x14, #0x8000                	// #32768
   233ec:	movk	x14, #0xa4c6, lsl #16
   233f0:	movk	x14, #0x8d7e, lsl #32
   233f4:	movk	x14, #0x3, lsl #48
   233f8:	mov	x13, #0xcd81                	// #52609
   233fc:	movk	x13, #0x5095, lsl #16
   23400:	movk	x13, #0x4dc3, lsl #32
   23404:	movk	x13, #0xb42, lsl #48
   23408:	mov	x12, #0x4000                	// #16384
   2340c:	movk	x12, #0x107a, lsl #16
   23410:	movk	x12, #0x5af3, lsl #32
   23414:	mov	x11, #0x385                 	// #901
   23418:	movk	x11, #0x92ed, lsl #16
   2341c:	movk	x11, #0x84d0, lsl #32
   23420:	movk	x11, #0x384b, lsl #48
   23424:	mov	x10, #0xa000                	// #40960
   23428:	movk	x10, #0x4e72, lsl #16
   2342c:	movk	x10, #0x918, lsl #32
   23430:	mov	x9, #0x2233                	// #8755
   23434:	movk	x9, #0x5bd4, lsl #16
   23438:	movk	x9, #0x3302, lsl #32
   2343c:	movk	x9, #0x232f, lsl #48
   23440:	mov	x8, #0x1000                	// #4096
   23444:	movk	x8, #0xd4a5, lsl #16
   23448:	movk	x8, #0xe8, lsl #32
   2344c:	mov	x7, #0xaaff                	// #43775
   23450:	movk	x7, #0xcb24, lsl #16
   23454:	movk	x7, #0xff0b, lsl #32
   23458:	movk	x7, #0xafeb, lsl #48
   2345c:	mov	x6, #0xe800                	// #59392
   23460:	movk	x6, #0x4876, lsl #16
   23464:	movk	x6, #0x17, lsl #32
   23468:	mov	x5, #0xd5bf                	// #54719
   2346c:	movk	x5, #0xbded, lsl #16
   23470:	movk	x5, #0xfece, lsl #32
   23474:	movk	x5, #0xdbe6, lsl #48
   23478:	mov	x4, #0x5a53                	// #23123
   2347c:	movk	x4, #0xa09b, lsl #16
   23480:	movk	x4, #0xb82f, lsl #32
   23484:	movk	x4, #0x44, lsl #48
   23488:	mov	x3, #0xcefd                	// #52989
   2348c:	movk	x3, #0x8461, lsl #16
   23490:	movk	x3, #0x7711, lsl #32
   23494:	movk	x3, #0xabcc, lsl #48
   23498:	mov	x2, #0x42bd                	// #17085
   2349c:	movk	x2, #0xe57a, lsl #16
   234a0:	movk	x2, #0x94d5, lsl #32
   234a4:	movk	x2, #0xd6bf, lsl #48
   234a8:	mov	x30, #0x34db                	// #13531
   234ac:	movk	x30, #0xd7b6, lsl #16
   234b0:	movk	x30, #0xde82, lsl #32
   234b4:	movk	x30, #0x431b, lsl #48
   234b8:	mov	x26, x0
   234bc:	b	23604 <PyInit__decimal@@Base+0x9464>
   234c0:	mov	w19, #0x2e                  	// #46
   234c4:	strb	w19, [x26], #1
   234c8:	b	23614 <PyInit__decimal@@Base+0x9474>
   234cc:	add	x25, x26, #0x2
   234d0:	mov	w19, #0x2e                  	// #46
   234d4:	strb	w19, [x26, #1]
   234d8:	b	23644 <PyInit__decimal@@Base+0x94a4>
   234dc:	add	x26, x25, #0x2
   234e0:	mov	w0, #0x2e                  	// #46
   234e4:	strb	w0, [x25, #1]
   234e8:	b	23668 <PyInit__decimal@@Base+0x94c8>
   234ec:	add	x25, x26, #0x2
   234f0:	mov	w0, #0x2e                  	// #46
   234f4:	strb	w0, [x26, #1]
   234f8:	b	23688 <PyInit__decimal@@Base+0x94e8>
   234fc:	add	x26, x25, #0x2
   23500:	mov	w19, #0x2e                  	// #46
   23504:	strb	w19, [x25, #1]
   23508:	b	236ac <PyInit__decimal@@Base+0x950c>
   2350c:	add	x27, x26, #0x2
   23510:	mov	w19, #0x2e                  	// #46
   23514:	strb	w19, [x26, #1]
   23518:	b	236cc <PyInit__decimal@@Base+0x952c>
   2351c:	add	x26, x27, #0x2
   23520:	mov	w0, #0x2e                  	// #46
   23524:	strb	w0, [x27, #1]
   23528:	b	236ec <PyInit__decimal@@Base+0x954c>
   2352c:	add	x27, x26, #0x2
   23530:	mov	w19, #0x2e                  	// #46
   23534:	strb	w19, [x26, #1]
   23538:	b	2370c <PyInit__decimal@@Base+0x956c>
   2353c:	add	x26, x27, #0x2
   23540:	mov	w0, #0x2e                  	// #46
   23544:	strb	w0, [x27, #1]
   23548:	b	2372c <PyInit__decimal@@Base+0x958c>
   2354c:	add	x19, x26, #0x2
   23550:	mov	w0, #0x2e                  	// #46
   23554:	strb	w0, [x26, #1]
   23558:	b	23758 <PyInit__decimal@@Base+0x95b8>
   2355c:	add	x26, x19, #0x2
   23560:	mov	w25, #0x2e                  	// #46
   23564:	strb	w25, [x19, #1]
   23568:	b	23784 <PyInit__decimal@@Base+0x95e4>
   2356c:	add	x27, x26, #0x2
   23570:	mov	w19, #0x2e                  	// #46
   23574:	strb	w19, [x26, #1]
   23578:	b	237ac <PyInit__decimal@@Base+0x960c>
   2357c:	add	x28, x27, #0x2
   23580:	mov	w0, #0x2e                  	// #46
   23584:	strb	w0, [x27, #1]
   23588:	b	237d4 <PyInit__decimal@@Base+0x9634>
   2358c:	add	x27, x28, #0x2
   23590:	mov	w19, #0x2e                  	// #46
   23594:	strb	w19, [x28, #1]
   23598:	b	237fc <PyInit__decimal@@Base+0x965c>
   2359c:	add	x25, x27, #0x2
   235a0:	mov	w0, #0x2e                  	// #46
   235a4:	strb	w0, [x27, #1]
   235a8:	b	23838 <PyInit__decimal@@Base+0x9698>
   235ac:	add	x0, x25, #0x2
   235b0:	mov	w26, #0x2e                  	// #46
   235b4:	strb	w26, [x25, #1]
   235b8:	b	2386c <PyInit__decimal@@Base+0x96cc>
   235bc:	add	x27, x0, #0x2
   235c0:	mov	w19, #0x2e                  	// #46
   235c4:	strb	w19, [x0, #1]
   235c8:	b	238ac <PyInit__decimal@@Base+0x970c>
   235cc:	add	x19, x27, #0x2
   235d0:	mov	w0, #0x2e                  	// #46
   235d4:	strb	w0, [x27, #1]
   235d8:	b	238e8 <PyInit__decimal@@Base+0x9748>
   235dc:	add	x25, x19, #0x2
   235e0:	mov	w26, #0x2e                  	// #46
   235e4:	strb	w26, [x19, #1]
   235e8:	mov	x26, x25
   235ec:	add	w0, w0, #0x30
   235f0:	strb	w0, [x26], #1
   235f4:	strb	wzr, [x25, #1]
   235f8:	sub	x1, x1, #0x1
   235fc:	cmn	x1, #0x1
   23600:	b.eq	23918 <PyInit__decimal@@Base+0x9778>  // b.none
   23604:	ldr	x0, [x20, #40]
   23608:	ldr	x0, [x0, x1, lsl #3]
   2360c:	cmp	x21, x26
   23610:	b.eq	234c0 <PyInit__decimal@@Base+0x9320>  // b.none
   23614:	mov	x25, x26
   23618:	lsr	x19, x0, #18
   2361c:	umulh	x19, x19, x24
   23620:	lsr	x19, x19, #24
   23624:	add	w27, w19, #0x30
   23628:	strb	w27, [x25], #1
   2362c:	mov	x27, #0xa7640000            	// #2808348672
   23630:	movk	x27, #0xb6b3, lsl #32
   23634:	movk	x27, #0xde0, lsl #48
   23638:	msub	x0, x19, x27, x0
   2363c:	cmp	x21, x25
   23640:	b.eq	234cc <PyInit__decimal@@Base+0x932c>  // b.none
   23644:	mov	x26, x25
   23648:	lsr	x19, x0, #17
   2364c:	umulh	x19, x19, x22
   23650:	lsr	x19, x19, #22
   23654:	add	w27, w19, #0x30
   23658:	strb	w27, [x26], #1
   2365c:	msub	x19, x19, x18, x0
   23660:	cmp	x21, x26
   23664:	b.eq	234dc <PyInit__decimal@@Base+0x933c>  // b.none
   23668:	mov	x25, x26
   2366c:	umulh	x0, x19, x17
   23670:	lsr	x0, x0, #51
   23674:	add	w27, w0, #0x30
   23678:	strb	w27, [x25], #1
   2367c:	msub	x19, x0, x16, x19
   23680:	cmp	x21, x25
   23684:	b.eq	234ec <PyInit__decimal@@Base+0x934c>  // b.none
   23688:	mov	x26, x25
   2368c:	lsr	x0, x19, #15
   23690:	umulh	x0, x0, x15
   23694:	lsr	x0, x0, #20
   23698:	add	w27, w0, #0x30
   2369c:	strb	w27, [x26], #1
   236a0:	msub	x0, x0, x14, x19
   236a4:	cmp	x21, x26
   236a8:	b.eq	234fc <PyInit__decimal@@Base+0x935c>  // b.none
   236ac:	mov	x27, x26
   236b0:	umulh	x19, x0, x13
   236b4:	lsr	x19, x19, #42
   236b8:	add	w25, w19, #0x30
   236bc:	strb	w25, [x27], #1
   236c0:	msub	x0, x19, x12, x0
   236c4:	cmp	x21, x27
   236c8:	b.eq	2350c <PyInit__decimal@@Base+0x936c>  // b.none
   236cc:	mov	x26, x27
   236d0:	umulh	x19, x0, x11
   236d4:	lsr	x19, x19, #41
   236d8:	add	w25, w19, #0x30
   236dc:	strb	w25, [x26], #1
   236e0:	msub	x19, x19, x10, x0
   236e4:	cmp	x21, x26
   236e8:	b.eq	2351c <PyInit__decimal@@Base+0x937c>  // b.none
   236ec:	mov	x27, x26
   236f0:	umulh	x25, x19, x9
   236f4:	lsr	x25, x25, #37
   236f8:	add	w0, w25, #0x30
   236fc:	strb	w0, [x27], #1
   23700:	msub	x0, x25, x8, x19
   23704:	cmp	x21, x27
   23708:	b.eq	2352c <PyInit__decimal@@Base+0x938c>  // b.none
   2370c:	mov	x26, x27
   23710:	umulh	x25, x0, x7
   23714:	lsr	x25, x25, #36
   23718:	add	w19, w25, #0x30
   2371c:	strb	w19, [x26], #1
   23720:	msub	x25, x25, x6, x0
   23724:	cmp	x21, x26
   23728:	b.eq	2353c <PyInit__decimal@@Base+0x939c>  // b.none
   2372c:	mov	x19, x26
   23730:	umulh	x0, x25, x5
   23734:	lsr	x0, x0, #33
   23738:	add	w27, w0, #0x30
   2373c:	strb	w27, [x19], #1
   23740:	mov	x27, #0xe400                	// #58368
   23744:	movk	x27, #0x540b, lsl #16
   23748:	movk	x27, #0x2, lsl #32
   2374c:	msub	x25, x0, x27, x25
   23750:	cmp	x21, x19
   23754:	b.eq	2354c <PyInit__decimal@@Base+0x93ac>  // b.none
   23758:	mov	x26, x19
   2375c:	lsr	x0, x25, #9
   23760:	umulh	x0, x0, x4
   23764:	lsr	x0, x0, #11
   23768:	add	w27, w0, #0x30
   2376c:	strb	w27, [x26], #1
   23770:	mov	x27, #0xca00                	// #51712
   23774:	movk	x27, #0x3b9a, lsl #16
   23778:	msub	x0, x0, x27, x25
   2377c:	cmp	x21, x26
   23780:	b.eq	2355c <PyInit__decimal@@Base+0x93bc>  // b.none
   23784:	mov	x27, x26
   23788:	umulh	x25, x0, x3
   2378c:	lsr	x25, x25, #26
   23790:	add	w19, w25, #0x30
   23794:	strb	w19, [x27], #1
   23798:	mov	x19, #0xe100                	// #57600
   2379c:	movk	x19, #0x5f5, lsl #16
   237a0:	msub	x0, x25, x19, x0
   237a4:	cmp	x21, x27
   237a8:	b.eq	2356c <PyInit__decimal@@Base+0x93cc>  // b.none
   237ac:	mov	x28, x27
   237b0:	umulh	x25, x0, x2
   237b4:	lsr	x25, x25, #23
   237b8:	add	w19, w25, #0x30
   237bc:	strb	w19, [x28], #1
   237c0:	mov	x19, #0x9680                	// #38528
   237c4:	movk	x19, #0x98, lsl #16
   237c8:	msub	x25, x25, x19, x0
   237cc:	cmp	x21, x28
   237d0:	b.eq	2357c <PyInit__decimal@@Base+0x93dc>  // b.none
   237d4:	mov	x27, x28
   237d8:	umulh	x19, x25, x30
   237dc:	lsr	x19, x19, #18
   237e0:	add	w0, w19, #0x30
   237e4:	strb	w0, [x27], #1
   237e8:	mov	x0, #0x4240                	// #16960
   237ec:	movk	x0, #0xf, lsl #16
   237f0:	msub	x0, x19, x0, x25
   237f4:	cmp	x21, x27
   237f8:	b.eq	2358c <PyInit__decimal@@Base+0x93ec>  // b.none
   237fc:	mov	x25, x27
   23800:	lsr	x19, x0, #5
   23804:	mov	x26, #0x7843                	// #30787
   23808:	movk	x26, #0x71b4, lsl #16
   2380c:	movk	x26, #0x5ac4, lsl #32
   23810:	movk	x26, #0xa7c, lsl #48
   23814:	umulh	x19, x19, x26
   23818:	lsr	x19, x19, #7
   2381c:	add	w26, w19, #0x30
   23820:	strb	w26, [x25], #1
   23824:	mov	x26, #0x86a0                	// #34464
   23828:	movk	x26, #0x1, lsl #16
   2382c:	msub	x19, x19, x26, x0
   23830:	cmp	x21, x25
   23834:	b.eq	2359c <PyInit__decimal@@Base+0x93fc>  // b.none
   23838:	mov	x0, x25
   2383c:	mov	x26, #0x594b                	// #22859
   23840:	movk	x26, #0x3886, lsl #16
   23844:	movk	x26, #0xc5d6, lsl #32
   23848:	movk	x26, #0x346d, lsl #48
   2384c:	umulh	x28, x19, x26
   23850:	lsr	x28, x28, #11
   23854:	add	w26, w28, #0x30
   23858:	strb	w26, [x0], #1
   2385c:	mov	x26, #0x2710                	// #10000
   23860:	msub	x19, x28, x26, x19
   23864:	cmp	x21, x0
   23868:	b.eq	235ac <PyInit__decimal@@Base+0x940c>  // b.none
   2386c:	mov	x27, x0
   23870:	lsr	x25, x19, #3
   23874:	mov	x26, #0xf7cf                	// #63439
   23878:	movk	x26, #0xe353, lsl #16
   2387c:	movk	x26, #0x9ba5, lsl #32
   23880:	movk	x26, #0x20c4, lsl #48
   23884:	umulh	x25, x25, x26
   23888:	lsr	x25, x25, #4
   2388c:	add	w26, w25, #0x30
   23890:	strb	w26, [x27], #1
   23894:	lsl	x26, x25, #5
   23898:	sub	x26, x26, x25
   2389c:	add	x26, x25, x26, lsl #2
   238a0:	sub	x28, x19, x26, lsl #3
   238a4:	cmp	x21, x27
   238a8:	b.eq	235bc <PyInit__decimal@@Base+0x941c>  // b.none
   238ac:	mov	x19, x27
   238b0:	lsr	x25, x28, #2
   238b4:	mov	x0, #0xf5c3                	// #62915
   238b8:	movk	x0, #0x5c28, lsl #16
   238bc:	movk	x0, #0xc28f, lsl #32
   238c0:	movk	x0, #0x28f5, lsl #48
   238c4:	umulh	x25, x25, x0
   238c8:	lsr	x25, x25, #2
   238cc:	add	w0, w25, #0x30
   238d0:	strb	w0, [x19], #1
   238d4:	add	x0, x25, x25, lsl #1
   238d8:	add	x0, x25, x0, lsl #3
   238dc:	sub	x26, x28, x0, lsl #2
   238e0:	cmp	x21, x19
   238e4:	b.eq	235cc <PyInit__decimal@@Base+0x942c>  // b.none
   238e8:	mov	x25, x19
   238ec:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   238f0:	movk	x0, #0xcccd
   238f4:	umulh	x0, x26, x0
   238f8:	lsr	x0, x0, #3
   238fc:	add	w27, w0, #0x30
   23900:	strb	w27, [x25], #1
   23904:	add	x0, x0, x0, lsl #2
   23908:	sub	x0, x26, x0, lsl #1
   2390c:	cmp	x21, x25
   23910:	b.ne	235e8 <PyInit__decimal@@Base+0x9448>  // b.any
   23914:	b	235dc <PyInit__decimal@@Base+0x943c>
   23918:	mov	x19, x26
   2391c:	ldp	x25, x26, [sp, #64]
   23920:	ldp	x27, x28, [sp, #80]
   23924:	b	23034 <PyInit__decimal@@Base+0x8e94>
   23928:	mov	x19, x0
   2392c:	b	23034 <PyInit__decimal@@Base+0x8e94>
   23930:	sub	x20, x23, x2
   23934:	mov	w0, #0x2d                  	// #45
   23938:	b	2306c <PyInit__decimal@@Base+0x8ecc>
   2393c:	ldp	x21, x22, [sp, #32]
   23940:	b	23094 <PyInit__decimal@@Base+0x8ef4>
   23944:	ldp	x21, x22, [sp, #32]
   23948:	b	23094 <PyInit__decimal@@Base+0x8ef4>
   2394c:	stp	x29, x30, [sp, #-96]!
   23950:	mov	x29, sp
   23954:	stp	x19, x20, [sp, #16]
   23958:	stp	x21, x22, [sp, #32]
   2395c:	stp	x23, x24, [sp, #48]
   23960:	mov	x20, x0
   23964:	mov	x24, x1
   23968:	mov	x22, x2
   2396c:	mov	x21, x3
   23970:	mov	w1, #0x0                   	// #0
   23974:	bl	28864 <PyInit__decimal@@Base+0xe6c4>
   23978:	str	xzr, [x20, #24]
   2397c:	str	xzr, [x20, #8]
   23980:	ldrb	w0, [x24]
   23984:	cmp	w0, #0x2b
   23988:	b.eq	239b0 <PyInit__decimal@@Base+0x9810>  // b.none
   2398c:	mov	w1, #0x0                   	// #0
   23990:	cmp	w0, #0x2d
   23994:	b.eq	239bc <PyInit__decimal@@Base+0x981c>  // b.none
   23998:	mov	x4, #0x0                   	// #0
   2399c:	adrp	x3, 3c000 <PyInit__decimal@@Base+0x21e60>
   239a0:	add	x3, x3, #0x918
   239a4:	adrp	x5, 43000 <PyInit__decimal@@Base+0x28e60>
   239a8:	add	x5, x5, #0x1a0
   239ac:	b	239dc <PyInit__decimal@@Base+0x983c>
   239b0:	add	x24, x24, #0x1
   239b4:	mov	w1, #0x0                   	// #0
   239b8:	b	23998 <PyInit__decimal@@Base+0x97f8>
   239bc:	mov	x0, x20
   239c0:	bl	287c8 <PyInit__decimal@@Base+0xe628>
   239c4:	add	x24, x24, #0x1
   239c8:	mov	w1, #0x1                   	// #1
   239cc:	b	23998 <PyInit__decimal@@Base+0x97f8>
   239d0:	add	x4, x4, #0x1
   239d4:	cmp	x4, #0x3
   239d8:	b.eq	23ea0 <PyInit__decimal@@Base+0x9d00>  // b.none
   239dc:	ldrb	w0, [x24, x4]
   239e0:	ldrb	w2, [x4, x3]
   239e4:	cmp	w2, w0
   239e8:	b.eq	239d0 <PyInit__decimal@@Base+0x9830>  // b.none
   239ec:	ldrb	w2, [x4, x5]
   239f0:	cmp	w2, w0
   239f4:	b.eq	239d0 <PyInit__decimal@@Base+0x9830>  // b.none
   239f8:	mov	x0, #0x0                   	// #0
   239fc:	adrp	x4, 43000 <PyInit__decimal@@Base+0x28e60>
   23a00:	add	x4, x4, #0x1a8
   23a04:	adrp	x5, 43000 <PyInit__decimal@@Base+0x28e60>
   23a08:	add	x5, x5, #0x1b0
   23a0c:	b	23a1c <PyInit__decimal@@Base+0x987c>
   23a10:	add	x0, x0, #0x1
   23a14:	cmp	x0, #0x4
   23a18:	b.eq	23e48 <PyInit__decimal@@Base+0x9ca8>  // b.none
   23a1c:	ldrb	w2, [x24, x0]
   23a20:	ldrb	w3, [x0, x4]
   23a24:	cmp	w3, w2
   23a28:	b.eq	23a10 <PyInit__decimal@@Base+0x9870>  // b.none
   23a2c:	ldrb	w3, [x0, x5]
   23a30:	cmp	w3, w2
   23a34:	b.eq	23a10 <PyInit__decimal@@Base+0x9870>  // b.none
   23a38:	mov	x0, #0x0                   	// #0
   23a3c:	adrp	x4, 43000 <PyInit__decimal@@Base+0x28e60>
   23a40:	add	x4, x4, #0x1b8
   23a44:	adrp	x5, 43000 <PyInit__decimal@@Base+0x28e60>
   23a48:	add	x5, x5, #0x1c0
   23a4c:	b	23a5c <PyInit__decimal@@Base+0x98bc>
   23a50:	add	x0, x0, #0x1
   23a54:	cmp	x0, #0x3
   23a58:	b.eq	23e24 <PyInit__decimal@@Base+0x9c84>  // b.none
   23a5c:	ldrb	w2, [x24, x0]
   23a60:	ldrb	w3, [x0, x4]
   23a64:	cmp	w3, w2
   23a68:	b.eq	23a50 <PyInit__decimal@@Base+0x98b0>  // b.none
   23a6c:	ldrb	w3, [x0, x5]
   23a70:	cmp	w3, w2
   23a74:	b.eq	23a50 <PyInit__decimal@@Base+0x98b0>  // b.none
   23a78:	stp	x25, x26, [sp, #64]
   23a7c:	ldrb	w25, [x24]
   23a80:	mov	x26, #0x0                   	// #0
   23a84:	mov	x23, #0x0                   	// #0
   23a88:	mov	x19, #0x0                   	// #0
   23a8c:	cbnz	w25, 23b14 <PyInit__decimal@@Base+0x9974>
   23a90:	str	x24, [sp, #88]
   23a94:	ldp	x25, x26, [sp, #64]
   23a98:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23a9c:	add	x0, x0, #0x1
   23aa0:	cmp	x0, #0x6
   23aa4:	b.eq	23ae8 <PyInit__decimal@@Base+0x9948>  // b.none
   23aa8:	ldrb	w2, [x5, x0]
   23aac:	ldrb	w3, [x0, x4]
   23ab0:	cmp	w3, w2
   23ab4:	b.eq	23a9c <PyInit__decimal@@Base+0x98fc>  // b.none
   23ab8:	ldrb	w3, [x0, x6]
   23abc:	cmp	w3, w2
   23ac0:	b.eq	23a9c <PyInit__decimal@@Base+0x98fc>  // b.none
   23ac4:	mov	x2, x21
   23ac8:	mov	w1, #0x2                   	// #2
   23acc:	mov	x0, x20
   23ad0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   23ad4:	ldp	x19, x20, [sp, #16]
   23ad8:	ldp	x21, x22, [sp, #32]
   23adc:	ldp	x23, x24, [sp, #48]
   23ae0:	ldp	x29, x30, [sp], #96
   23ae4:	ret
   23ae8:	mov	w2, #0x2                   	// #2
   23aec:	mov	x0, x20
   23af0:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   23af4:	b	23ad4 <PyInit__decimal@@Base+0x9934>
   23af8:	orr	x26, x26, x23
   23afc:	cbnz	x26, 23de4 <PyInit__decimal@@Base+0x9c44>
   23b00:	mov	x23, x24
   23b04:	add	x0, x24, #0x1
   23b08:	ldrb	w25, [x24, #1]
   23b0c:	cbz	w25, 23bb8 <PyInit__decimal@@Base+0x9a18>
   23b10:	mov	x24, x0
   23b14:	and	w0, w25, #0xffffffdf
   23b18:	and	w0, w0, #0xff
   23b1c:	cmp	w0, #0x45
   23b20:	b.eq	23b8c <PyInit__decimal@@Base+0x99ec>  // b.none
   23b24:	cmp	w25, #0x2e
   23b28:	b.eq	23af8 <PyInit__decimal@@Base+0x9958>  // b.none
   23b2c:	bl	6880 <__ctype_b_loc@plt>
   23b30:	ldr	x0, [x0]
   23b34:	and	x1, x25, #0xff
   23b38:	ldrh	w1, [x0, x1, lsl #1]
   23b3c:	tbz	w1, #11, 23df4 <PyInit__decimal@@Base+0x9c54>
   23b40:	orr	x1, x19, x26
   23b44:	cbnz	x1, 23b04 <PyInit__decimal@@Base+0x9964>
   23b48:	mov	x26, x1
   23b4c:	mov	x19, x24
   23b50:	cmp	w25, #0x30
   23b54:	b.ne	23b04 <PyInit__decimal@@Base+0x9964>  // b.any
   23b58:	ldrb	w2, [x24, #1]
   23b5c:	and	x3, x2, #0xff
   23b60:	ldrh	w3, [x0, x3, lsl #1]
   23b64:	tbnz	w3, #11, 23bb0 <PyInit__decimal@@Base+0x9a10>
   23b68:	cmp	w2, #0x2e
   23b6c:	b.ne	23b04 <PyInit__decimal@@Base+0x9964>  // b.any
   23b70:	ldrb	w2, [x24, #2]
   23b74:	ldrh	w0, [x0, x2, lsl #1]
   23b78:	tst	x0, #0x800
   23b7c:	csel	x19, x24, x1, eq  // eq = none
   23b80:	add	x0, x24, #0x1
   23b84:	ldrb	w25, [x24, #1]
   23b88:	b	23b10 <PyInit__decimal@@Base+0x9970>
   23b8c:	cbnz	x26, 23dec <PyInit__decimal@@Base+0x9c4c>
   23b90:	ldrb	w0, [x24, #1]
   23b94:	sub	w0, w0, #0x2b
   23b98:	and	w0, w0, #0xfffffffd
   23b9c:	mov	x26, x24
   23ba0:	tst	w0, #0xff
   23ba4:	b.ne	23b04 <PyInit__decimal@@Base+0x9964>  // b.any
   23ba8:	add	x24, x24, #0x1
   23bac:	b	23b04 <PyInit__decimal@@Base+0x9964>
   23bb0:	mov	x19, x1
   23bb4:	b	23b04 <PyInit__decimal@@Base+0x9964>
   23bb8:	str	x0, [sp, #88]
   23bbc:	cbz	x19, 23dfc <PyInit__decimal@@Base+0x9c5c>
   23bc0:	cbz	x26, 23c30 <PyInit__decimal@@Base+0x9a90>
   23bc4:	str	x26, [sp, #88]
   23bc8:	bl	6a20 <__errno_location@plt>
   23bcc:	mov	x24, x0
   23bd0:	str	wzr, [x0]
   23bd4:	mov	w2, #0xa                   	// #10
   23bd8:	add	x1, sp, #0x50
   23bdc:	add	x0, x26, #0x1
   23be0:	bl	6540 <strtoll@plt>
   23be4:	ldr	w1, [x24]
   23be8:	cbnz	w1, 23c08 <PyInit__decimal@@Base+0x9a68>
   23bec:	ldrb	w1, [x26, #1]
   23bf0:	cbz	w1, 23c00 <PyInit__decimal@@Base+0x9a60>
   23bf4:	ldr	x1, [sp, #80]
   23bf8:	ldrb	w1, [x1]
   23bfc:	cbz	w1, 23c08 <PyInit__decimal@@Base+0x9a68>
   23c00:	mov	w1, #0x16                  	// #22
   23c04:	str	w1, [x24]
   23c08:	str	x0, [x20, #8]
   23c0c:	ldr	w1, [x24]
   23c10:	cbz	w1, 23c30 <PyInit__decimal@@Base+0x9a90>
   23c14:	cmp	w1, #0x22
   23c18:	b.ne	23e04 <PyInit__decimal@@Base+0x9c64>  // b.any
   23c1c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   23c20:	cmp	x0, x1
   23c24:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23c28:	ccmp	x0, x1, #0x4, ne  // ne = any
   23c2c:	b.ne	23e0c <PyInit__decimal@@Base+0x9c6c>  // b.any
   23c30:	ldr	x1, [sp, #88]
   23c34:	sub	x0, x1, x19
   23c38:	cbz	x23, 23cac <PyInit__decimal@@Base+0x9b0c>
   23c3c:	sub	x1, x1, x23
   23c40:	sub	x3, x1, #0x1
   23c44:	cmp	x19, x23
   23c48:	sbc	x0, x0, xzr
   23c4c:	mov	x2, #0xffffffffa763ffff    	// #-1486618625
   23c50:	movk	x2, #0xb6b3, lsl #32
   23c54:	movk	x2, #0xde0, lsl #48
   23c58:	cmp	x3, x2
   23c5c:	b.hi	23e14 <PyInit__decimal@@Base+0x9c74>  // b.pmore
   23c60:	ldr	x2, [x20, #8]
   23c64:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
   23c68:	add	x1, x1, x4
   23c6c:	cmp	x2, x1
   23c70:	b.ge	23ca4 <PyInit__decimal@@Base+0x9b04>  // b.tcont
   23c74:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23c78:	str	x1, [x20, #8]
   23c7c:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   23c80:	movk	x1, #0xb6b3, lsl #32
   23c84:	movk	x1, #0xde0, lsl #48
   23c88:	cmp	x0, x1
   23c8c:	b.hi	23c9c <PyInit__decimal@@Base+0x9afc>  // b.pmore
   23c90:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23c94:	str	x1, [x20, #8]
   23c98:	b	23ef4 <PyInit__decimal@@Base+0x9d54>
   23c9c:	ldp	x25, x26, [sp, #64]
   23ca0:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23ca4:	sub	x2, x2, x3
   23ca8:	str	x2, [x20, #8]
   23cac:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   23cb0:	movk	x1, #0xb6b3, lsl #32
   23cb4:	movk	x1, #0xde0, lsl #48
   23cb8:	cmp	x0, x1
   23cbc:	b.hi	23e1c <PyInit__decimal@@Base+0x9c7c>  // b.pmore
   23cc0:	ldr	x2, [x20, #8]
   23cc4:	mov	x1, #0x1                   	// #1
   23cc8:	movk	x1, #0x4ec8, lsl #16
   23ccc:	movk	x1, #0x6d67, lsl #32
   23cd0:	movk	x1, #0x1bc1, lsl #48
   23cd4:	cmp	x2, x1
   23cd8:	b.le	23ce4 <PyInit__decimal@@Base+0x9b44>
   23cdc:	str	x1, [x20, #8]
   23ce0:	b	23ef4 <PyInit__decimal@@Base+0x9d54>
   23ce4:	ldr	x2, [x20, #8]
   23ce8:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23cec:	cmp	x2, x1
   23cf0:	b.ne	23ef4 <PyInit__decimal@@Base+0x9d54>  // b.any
   23cf4:	b	23c90 <PyInit__decimal@@Base+0x9af0>
   23cf8:	mov	x2, x21
   23cfc:	mov	x1, x24
   23d00:	mov	x0, x20
   23d04:	bl	28300 <PyInit__decimal@@Base+0xe160>
   23d08:	cbz	w0, 23dcc <PyInit__decimal@@Base+0x9c2c>
   23d0c:	str	x24, [x20, #24]
   23d10:	ldr	x3, [x20, #40]
   23d14:	mov	w5, w25
   23d18:	mov	x6, x24
   23d1c:	cmp	w25, #0x0
   23d20:	b.le	23d64 <PyInit__decimal@@Base+0x9bc4>
   23d24:	sub	x6, x24, #0x1
   23d28:	add	x4, x3, x6, lsl #3
   23d2c:	str	xzr, [x3, x6, lsl #3]
   23d30:	mov	w2, #0x0                   	// #0
   23d34:	cmp	x23, x19
   23d38:	cinc	x19, x19, eq  // eq = none
   23d3c:	ldr	x0, [x4]
   23d40:	add	x0, x0, x0, lsl #2
   23d44:	ldrb	w1, [x19], #1
   23d48:	sub	w1, w1, #0x30
   23d4c:	sxtw	x1, w1
   23d50:	add	x0, x1, x0, lsl #1
   23d54:	str	x0, [x4]
   23d58:	add	w2, w2, #0x1
   23d5c:	cmp	w5, w2
   23d60:	b.ne	23d34 <PyInit__decimal@@Base+0x9b94>  // b.any
   23d64:	sub	x2, x6, #0x1
   23d68:	cbz	x6, 23dac <PyInit__decimal@@Base+0x9c0c>
   23d6c:	str	xzr, [x3, x2, lsl #3]
   23d70:	mov	w0, #0x13                  	// #19
   23d74:	cmp	x23, x19
   23d78:	cinc	x19, x19, eq  // eq = none
   23d7c:	ldr	x1, [x3, x2, lsl #3]
   23d80:	add	x1, x1, x1, lsl #2
   23d84:	ldrb	w4, [x19], #1
   23d88:	sub	w4, w4, #0x30
   23d8c:	sxtw	x4, w4
   23d90:	add	x1, x4, x1, lsl #1
   23d94:	str	x1, [x3, x2, lsl #3]
   23d98:	subs	w0, w0, #0x1
   23d9c:	b.ne	23d74 <PyInit__decimal@@Base+0x9bd4>  // b.any
   23da0:	sub	x2, x2, #0x1
   23da4:	cmn	x2, #0x1
   23da8:	b.ne	23d6c <PyInit__decimal@@Base+0x9bcc>  // b.any
   23dac:	mov	x0, x20
   23db0:	bl	285bc <PyInit__decimal@@Base+0xe41c>
   23db4:	mov	x2, x21
   23db8:	mov	x1, x22
   23dbc:	mov	x0, x20
   23dc0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   23dc4:	ldp	x25, x26, [sp, #64]
   23dc8:	b	23ad4 <PyInit__decimal@@Base+0x9934>
   23dcc:	mov	x2, x21
   23dd0:	mov	w1, #0x200                 	// #512
   23dd4:	mov	x0, x20
   23dd8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   23ddc:	ldp	x25, x26, [sp, #64]
   23de0:	b	23ad4 <PyInit__decimal@@Base+0x9934>
   23de4:	ldp	x25, x26, [sp, #64]
   23de8:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23dec:	ldp	x25, x26, [sp, #64]
   23df0:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23df4:	ldp	x25, x26, [sp, #64]
   23df8:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23dfc:	ldp	x25, x26, [sp, #64]
   23e00:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23e04:	ldp	x25, x26, [sp, #64]
   23e08:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23e0c:	ldp	x25, x26, [sp, #64]
   23e10:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23e14:	ldp	x25, x26, [sp, #64]
   23e18:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23e1c:	ldp	x25, x26, [sp, #64]
   23e20:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23e24:	add	x5, x24, #0x3
   23e28:	ldrb	w0, [x24, #3]
   23e2c:	cbz	w0, 23ae8 <PyInit__decimal@@Base+0x9948>
   23e30:	mov	x0, #0x0                   	// #0
   23e34:	adrp	x4, 43000 <PyInit__decimal@@Base+0x28e60>
   23e38:	add	x4, x4, #0x1c8
   23e3c:	adrp	x6, 43000 <PyInit__decimal@@Base+0x28e60>
   23e40:	add	x6, x6, #0x1d0
   23e44:	b	23aa8 <PyInit__decimal@@Base+0x9908>
   23e48:	mov	w2, #0x8                   	// #8
   23e4c:	mov	x0, x20
   23e50:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   23e54:	ldrb	w0, [x24, #4]
   23e58:	cbz	w0, 23ad4 <PyInit__decimal@@Base+0x9934>
   23e5c:	add	x1, sp, #0x58
   23e60:	add	x0, x24, #0x4
   23e64:	bl	220f4 <PyInit__decimal@@Base+0x7f54>
   23e68:	mov	x19, x0
   23e6c:	cbz	x0, 23ac4 <PyInit__decimal@@Base+0x9924>
   23e70:	ldrb	w0, [x0]
   23e74:	cbz	w0, 23ad4 <PyInit__decimal@@Base+0x9934>
   23e78:	ldr	x0, [sp, #88]
   23e7c:	sub	x0, x0, x19
   23e80:	ldrsw	x2, [x22, #40]
   23e84:	ldr	x1, [x22]
   23e88:	sub	x1, x1, x2
   23e8c:	cmp	x1, x0
   23e90:	b.cc	23ac4 <PyInit__decimal@@Base+0x9924>  // b.lo, b.ul, b.last
   23e94:	stp	x25, x26, [sp, #64]
   23e98:	mov	x23, #0x0                   	// #0
   23e9c:	b	23ef4 <PyInit__decimal@@Base+0x9d54>
   23ea0:	mov	w2, #0x4                   	// #4
   23ea4:	mov	x0, x20
   23ea8:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   23eac:	ldrb	w0, [x24, #3]
   23eb0:	cbz	w0, 23ad4 <PyInit__decimal@@Base+0x9934>
   23eb4:	add	x1, sp, #0x58
   23eb8:	add	x0, x24, #0x3
   23ebc:	bl	220f4 <PyInit__decimal@@Base+0x7f54>
   23ec0:	mov	x19, x0
   23ec4:	cbz	x0, 23ac4 <PyInit__decimal@@Base+0x9924>
   23ec8:	ldrb	w0, [x0]
   23ecc:	cbz	w0, 23ad4 <PyInit__decimal@@Base+0x9934>
   23ed0:	ldr	x0, [sp, #88]
   23ed4:	sub	x0, x0, x19
   23ed8:	ldrsw	x2, [x22, #40]
   23edc:	ldr	x1, [x22]
   23ee0:	sub	x1, x1, x2
   23ee4:	cmp	x1, x0
   23ee8:	b.cc	23ac4 <PyInit__decimal@@Base+0x9924>  // b.lo, b.ul, b.last
   23eec:	stp	x25, x26, [sp, #64]
   23ef0:	mov	x23, #0x0                   	// #0
   23ef4:	mov	x24, #0x9436                	// #37942
   23ef8:	movk	x24, #0x50d7, lsl #16
   23efc:	movk	x24, #0x435e, lsl #32
   23f00:	movk	x24, #0xd79, lsl #48
   23f04:	smulh	x24, x0, x24
   23f08:	sub	x24, x24, x0, asr #63
   23f0c:	add	x25, x24, x24, lsl #2
   23f10:	lsl	x25, x25, #2
   23f14:	sub	x25, x25, x24
   23f18:	subs	x25, x0, x25
   23f1c:	cinc	x24, x24, ne  // ne = any
   23f20:	cbnz	x24, 23cf8 <PyInit__decimal@@Base+0x9b58>
   23f24:	ldp	x25, x26, [sp, #64]
   23f28:	b	23ac4 <PyInit__decimal@@Base+0x9924>
   23f2c:	stp	x29, x30, [sp, #-32]!
   23f30:	mov	x29, sp
   23f34:	cmp	w1, #0x0
   23f38:	cset	w2, ne  // ne = any
   23f3c:	mov	x3, #0x1                   	// #1
   23f40:	orr	w2, w2, #0x2
   23f44:	mov	x1, x0
   23f48:	add	x0, sp, #0x18
   23f4c:	bl	22430 <PyInit__decimal@@Base+0x8290>
   23f50:	ldr	x0, [sp, #24]
   23f54:	ldp	x29, x30, [sp], #32
   23f58:	ret
   23f5c:	stp	x29, x30, [sp, #-32]!
   23f60:	mov	x29, sp
   23f64:	cmp	w1, #0x0
   23f68:	cset	w2, ne  // ne = any
   23f6c:	mov	x3, #0x1                   	// #1
   23f70:	orr	w2, w2, #0x4
   23f74:	mov	x1, x0
   23f78:	add	x0, sp, #0x18
   23f7c:	bl	22430 <PyInit__decimal@@Base+0x8290>
   23f80:	ldr	x0, [sp, #24]
   23f84:	ldp	x29, x30, [sp], #32
   23f88:	ret
   23f8c:	stp	x29, x30, [sp, #-16]!
   23f90:	mov	x29, sp
   23f94:	cmp	w2, #0x0
   23f98:	cset	w2, ne  // ne = any
   23f9c:	mov	x3, #0x1                   	// #1
   23fa0:	orr	w2, w2, #0x2
   23fa4:	bl	22430 <PyInit__decimal@@Base+0x8290>
   23fa8:	ldp	x29, x30, [sp], #16
   23fac:	ret
   23fb0:	stp	x29, x30, [sp, #-16]!
   23fb4:	mov	x29, sp
   23fb8:	cmp	w2, #0x0
   23fbc:	cset	w2, ne  // ne = any
   23fc0:	mov	x3, #0x1                   	// #1
   23fc4:	orr	w2, w2, #0x4
   23fc8:	bl	22430 <PyInit__decimal@@Base+0x8290>
   23fcc:	ldp	x29, x30, [sp], #16
   23fd0:	ret
   23fd4:	stp	x29, x30, [sp, #-32]!
   23fd8:	mov	x29, sp
   23fdc:	str	x19, [sp, #16]
   23fe0:	mov	x19, x0
   23fe4:	ldr	x0, [x0, #24]
   23fe8:	bl	64d0 <strlen@plt>
   23fec:	sub	x0, x0, #0x1
   23ff0:	cmp	x0, #0x3
   23ff4:	b.hi	24014 <PyInit__decimal@@Base+0x9e74>  // b.pmore
   23ff8:	ldr	x0, [x19, #32]
   23ffc:	bl	64d0 <strlen@plt>
   24000:	cmp	x0, #0x4
   24004:	csetm	w0, hi  // hi = pmore
   24008:	ldr	x19, [sp, #16]
   2400c:	ldp	x29, x30, [sp], #32
   24010:	ret
   24014:	mov	w0, #0xffffffff            	// #-1
   24018:	b	24008 <PyInit__decimal@@Base+0x9e68>
   2401c:	stp	x29, x30, [sp, #-80]!
   24020:	mov	x29, sp
   24024:	stp	x19, x20, [sp, #16]
   24028:	stp	x21, x22, [sp, #32]
   2402c:	mov	x19, x0
   24030:	str	x1, [sp, #72]
   24034:	str	xzr, [x0]
   24038:	mov	x0, #0xffffffffffffffff    	// #-1
   2403c:	str	x0, [x19, #8]
   24040:	cmp	w2, #0x0
   24044:	mov	w0, #0x47                  	// #71
   24048:	mov	w2, #0x67                  	// #103
   2404c:	csel	w0, w0, w2, ne  // ne = any
   24050:	strb	w0, [x19, #16]
   24054:	mov	w0, #0x3e                  	// #62
   24058:	strb	w0, [x19, #17]
   2405c:	mov	w0, #0x2d                  	// #45
   24060:	strb	w0, [x19, #18]
   24064:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   24068:	add	x0, x0, #0xf8
   2406c:	str	x0, [x19, #24]
   24070:	str	x0, [x19, #32]
   24074:	str	x0, [x19, #40]
   24078:	ldrb	w0, [x1]
   2407c:	cbz	w0, 240e0 <PyInit__decimal@@Base+0x9f40>
   24080:	tbz	w0, #7, 24200 <PyInit__decimal@@Base+0xa060>
   24084:	add	x4, x19, #0x13
   24088:	add	w2, w0, #0x3e
   2408c:	and	w2, w2, #0xff
   24090:	cmp	w2, #0x1d
   24094:	b.ls	2449c <PyInit__decimal@@Base+0xa2fc>  // b.plast
   24098:	cmp	w0, #0xe0
   2409c:	b.eq	243e0 <PyInit__decimal@@Base+0xa240>  // b.none
   240a0:	cmp	w0, #0xec
   240a4:	b.ls	2444c <PyInit__decimal@@Base+0xa2ac>  // b.plast
   240a8:	cmp	w0, #0xed
   240ac:	b.eq	2445c <PyInit__decimal@@Base+0xa2bc>  // b.none
   240b0:	cmp	w0, #0xef
   240b4:	b.ls	2446c <PyInit__decimal@@Base+0xa2cc>  // b.plast
   240b8:	cmp	w0, #0xf0
   240bc:	b.eq	2447c <PyInit__decimal@@Base+0xa2dc>  // b.none
   240c0:	cmp	w0, #0xf3
   240c4:	b.ls	2448c <PyInit__decimal@@Base+0xa2ec>  // b.plast
   240c8:	cmp	w0, #0xf4
   240cc:	b.ne	244b4 <PyInit__decimal@@Base+0xa314>  // b.any
   240d0:	mov	w2, #0x4                   	// #4
   240d4:	mov	w5, #0x8f                  	// #143
   240d8:	mov	w3, #0x80                  	// #128
   240dc:	b	243ec <PyInit__decimal@@Base+0xa24c>
   240e0:	str	x23, [sp, #48]
   240e4:	strb	wzr, [x19, #19]
   240e8:	mov	w2, #0x0                   	// #0
   240ec:	ldrb	w0, [x1]
   240f0:	cbnz	w0, 24214 <PyInit__decimal@@Base+0xa074>
   240f4:	mov	w0, #0x20                  	// #32
   240f8:	strb	w0, [x19, #19]
   240fc:	strb	wzr, [x19, #20]
   24100:	ldrb	w2, [x1]
   24104:	sub	w0, w2, #0x3c
   24108:	and	w0, w0, #0xff
   2410c:	cmp	w2, #0x5e
   24110:	mov	w22, #0x0                   	// #0
   24114:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   24118:	b.hi	2412c <PyInit__decimal@@Base+0x9f8c>  // b.pmore
   2411c:	add	x1, x1, #0x1
   24120:	str	x1, [sp, #72]
   24124:	strb	w2, [x19, #17]
   24128:	mov	w22, #0x1                   	// #1
   2412c:	ldr	x1, [sp, #72]
   24130:	ldrb	w2, [x1]
   24134:	sub	w0, w2, #0x2b
   24138:	and	w0, w0, #0xfffffffd
   2413c:	and	w0, w0, #0xff
   24140:	cmp	w2, #0x20
   24144:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   24148:	b.ne	2415c <PyInit__decimal@@Base+0x9fbc>  // b.any
   2414c:	add	x0, x1, #0x1
   24150:	str	x0, [sp, #72]
   24154:	ldrb	w0, [x1]
   24158:	strb	w0, [x19, #18]
   2415c:	ldr	x21, [sp, #72]
   24160:	ldrb	w20, [x21]
   24164:	cmp	w20, #0x30
   24168:	b.eq	24248 <PyInit__decimal@@Base+0xa0a8>  // b.none
   2416c:	bl	6880 <__ctype_b_loc@plt>
   24170:	mov	x23, x0
   24174:	and	x20, x20, #0xff
   24178:	ldr	x0, [x0]
   2417c:	ldrh	w0, [x0, x20, lsl #1]
   24180:	tbnz	w0, #11, 24298 <PyInit__decimal@@Base+0xa0f8>
   24184:	ldr	x0, [sp, #72]
   24188:	ldrb	w1, [x0]
   2418c:	cmp	w1, #0x2c
   24190:	b.eq	242d4 <PyInit__decimal@@Base+0xa134>  // b.none
   24194:	ldr	x0, [sp, #72]
   24198:	ldrb	w1, [x0]
   2419c:	cmp	w1, #0x2e
   241a0:	b.eq	24304 <PyInit__decimal@@Base+0xa164>  // b.none
   241a4:	ldr	x1, [sp, #72]
   241a8:	ldrb	w2, [x1]
   241ac:	and	w0, w2, #0xffffffdf
   241b0:	and	w3, w0, #0xff
   241b4:	sub	w0, w0, #0x45
   241b8:	and	w0, w0, #0xff
   241bc:	cmp	w2, #0x25
   241c0:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   241c4:	b.hi	24360 <PyInit__decimal@@Base+0xa1c0>  // b.pmore
   241c8:	add	x0, x1, #0x1
   241cc:	str	x0, [sp, #72]
   241d0:	ldrb	w0, [x1]
   241d4:	strb	w0, [x19, #16]
   241d8:	ldr	x0, [sp, #72]
   241dc:	ldrb	w0, [x0]
   241e0:	cmp	w0, #0x0
   241e4:	cset	w22, eq  // eq = none
   241e8:	ldr	x23, [sp, #48]
   241ec:	mov	w0, w22
   241f0:	ldp	x19, x20, [sp, #16]
   241f4:	ldp	x21, x22, [sp, #32]
   241f8:	ldp	x29, x30, [sp], #80
   241fc:	ret
   24200:	str	x23, [sp, #48]
   24204:	strb	w0, [x19, #19]
   24208:	strb	wzr, [x19, #20]
   2420c:	mov	w2, #0x1                   	// #1
   24210:	b	240ec <PyInit__decimal@@Base+0x9f4c>
   24214:	add	x3, x1, w2, sxtw
   24218:	ldrb	w4, [x1, w2, sxtw]
   2421c:	sub	w0, w4, #0x3c
   24220:	and	w0, w0, #0xff
   24224:	cmp	w4, #0x5e
   24228:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   2422c:	b.hi	240f4 <PyInit__decimal@@Base+0x9f54>  // b.pmore
   24230:	add	x3, x3, #0x1
   24234:	str	x3, [sp, #72]
   24238:	ldrb	w0, [x1, w2, sxtw]
   2423c:	strb	w0, [x19, #17]
   24240:	mov	w22, #0x1                   	// #1
   24244:	b	2412c <PyInit__decimal@@Base+0x9f8c>
   24248:	cbnz	w22, 243c8 <PyInit__decimal@@Base+0xa228>
   2424c:	mov	w0, #0x7a                  	// #122
   24250:	strb	w0, [x19, #17]
   24254:	add	x20, x21, #0x1
   24258:	str	x20, [sp, #72]
   2425c:	ldrb	w0, [x21]
   24260:	strb	w0, [x19, #19]
   24264:	strb	wzr, [x19, #20]
   24268:	bl	6880 <__ctype_b_loc@plt>
   2426c:	mov	x23, x0
   24270:	ldrb	w0, [x21, #1]
   24274:	and	x2, x0, #0xff
   24278:	ldr	x1, [x23]
   2427c:	ldrh	w1, [x1, x2, lsl #1]
   24280:	tbz	w1, #11, 24184 <PyInit__decimal@@Base+0x9fe4>
   24284:	cmp	w0, #0x30
   24288:	b.ne	24294 <PyInit__decimal@@Base+0xa0f4>  // b.any
   2428c:	ldr	x23, [sp, #48]
   24290:	b	241ec <PyInit__decimal@@Base+0xa04c>
   24294:	mov	x21, x20
   24298:	bl	6a20 <__errno_location@plt>
   2429c:	mov	x20, x0
   242a0:	str	wzr, [x0]
   242a4:	mov	w2, #0xa                   	// #10
   242a8:	add	x1, sp, #0x48
   242ac:	mov	x0, x21
   242b0:	bl	6540 <strtoll@plt>
   242b4:	str	x0, [x19]
   242b8:	ldr	w0, [x20]
   242bc:	cmp	w0, #0x22
   242c0:	mov	w22, #0x0                   	// #0
   242c4:	ccmp	w0, #0x16, #0x4, ne  // ne = any
   242c8:	b.ne	24184 <PyInit__decimal@@Base+0x9fe4>  // b.any
   242cc:	ldr	x23, [sp, #48]
   242d0:	b	241ec <PyInit__decimal@@Base+0xa04c>
   242d4:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   242d8:	add	x1, x1, #0x1d8
   242dc:	str	x1, [x19, #24]
   242e0:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   242e4:	add	x1, x1, #0x1e0
   242e8:	str	x1, [x19, #32]
   242ec:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   242f0:	add	x1, x1, #0x1e8
   242f4:	str	x1, [x19, #40]
   242f8:	add	x0, x0, #0x1
   242fc:	str	x0, [sp, #72]
   24300:	b	24194 <PyInit__decimal@@Base+0x9ff4>
   24304:	add	x20, x0, #0x1
   24308:	str	x20, [sp, #72]
   2430c:	ldrb	w1, [x0, #1]
   24310:	ldr	x0, [x23]
   24314:	ldrh	w0, [x0, x1, lsl #1]
   24318:	mov	w22, #0x0                   	// #0
   2431c:	tbnz	w0, #11, 24328 <PyInit__decimal@@Base+0xa188>
   24320:	ldr	x23, [sp, #48]
   24324:	b	241ec <PyInit__decimal@@Base+0xa04c>
   24328:	bl	6a20 <__errno_location@plt>
   2432c:	mov	x21, x0
   24330:	str	wzr, [x0]
   24334:	mov	w2, #0xa                   	// #10
   24338:	add	x1, sp, #0x48
   2433c:	mov	x0, x20
   24340:	bl	6540 <strtoll@plt>
   24344:	str	x0, [x19, #8]
   24348:	ldr	w0, [x21]
   2434c:	cmp	w0, #0x22
   24350:	ccmp	w0, #0x16, #0x4, ne  // ne = any
   24354:	b.ne	241a4 <PyInit__decimal@@Base+0xa004>  // b.any
   24358:	ldr	x23, [sp, #48]
   2435c:	b	241ec <PyInit__decimal@@Base+0xa04c>
   24360:	cmp	w3, #0x4e
   24364:	b.ne	241d8 <PyInit__decimal@@Base+0xa038>  // b.any
   24368:	ldr	x0, [x19, #32]
   2436c:	ldrb	w0, [x0]
   24370:	mov	w22, #0x0                   	// #0
   24374:	cbnz	w0, 244d4 <PyInit__decimal@@Base+0xa334>
   24378:	add	x0, x1, #0x1
   2437c:	str	x0, [sp, #72]
   24380:	ldrb	w0, [x1]
   24384:	cmp	w0, #0x4e
   24388:	mov	w0, #0x47                  	// #71
   2438c:	mov	w1, #0x67                  	// #103
   24390:	csel	w0, w0, w1, eq  // eq = none
   24394:	strb	w0, [x19, #16]
   24398:	bl	6630 <localeconv@plt>
   2439c:	ldr	x1, [x0]
   243a0:	str	x1, [x19, #24]
   243a4:	ldr	x1, [x0, #8]
   243a8:	str	x1, [x19, #32]
   243ac:	ldr	x0, [x0, #16]
   243b0:	str	x0, [x19, #40]
   243b4:	mov	x0, x19
   243b8:	bl	23fd4 <PyInit__decimal@@Base+0x9e34>
   243bc:	tbz	w0, #31, 241d8 <PyInit__decimal@@Base+0xa038>
   243c0:	ldr	x23, [sp, #48]
   243c4:	b	241ec <PyInit__decimal@@Base+0xa04c>
   243c8:	mov	w22, #0x0                   	// #0
   243cc:	ldr	x23, [sp, #48]
   243d0:	b	241ec <PyInit__decimal@@Base+0xa04c>
   243d4:	str	x23, [sp, #48]
   243d8:	mov	w0, #0x3                   	// #3
   243dc:	b	24444 <PyInit__decimal@@Base+0xa2a4>
   243e0:	mov	w2, #0x3                   	// #3
   243e4:	mov	w5, #0xbf                  	// #191
   243e8:	mov	w3, #0xa0                  	// #160
   243ec:	strb	w0, [x19, #19]
   243f0:	ldrb	w0, [x1, #1]
   243f4:	cmp	w5, w0
   243f8:	ccmp	w3, w0, #0x2, cs  // cs = hs, nlast
   243fc:	b.hi	244b4 <PyInit__decimal@@Base+0xa314>  // b.pmore
   24400:	strb	w0, [x19, #20]
   24404:	ldrb	w3, [x1, #2]
   24408:	sub	w0, w3, #0x80
   2440c:	and	w0, w0, #0xff
   24410:	cmp	w0, #0x3f
   24414:	b.hi	244b4 <PyInit__decimal@@Base+0xa314>  // b.pmore
   24418:	strb	w3, [x19, #21]
   2441c:	cmp	w2, #0x3
   24420:	b.le	243d4 <PyInit__decimal@@Base+0xa234>
   24424:	ldrb	w3, [x1, #3]
   24428:	sub	w0, w3, #0x80
   2442c:	and	w0, w0, #0xff
   24430:	cmp	w0, #0x3f
   24434:	b.hi	244b4 <PyInit__decimal@@Base+0xa314>  // b.pmore
   24438:	str	x23, [sp, #48]
   2443c:	strb	w3, [x19, #22]
   24440:	mov	w0, #0x4                   	// #4
   24444:	strb	wzr, [x4, w0, sxtw]
   24448:	b	240ec <PyInit__decimal@@Base+0x9f4c>
   2444c:	mov	w2, #0x3                   	// #3
   24450:	mov	w5, #0xbf                  	// #191
   24454:	mov	w3, #0x80                  	// #128
   24458:	b	243ec <PyInit__decimal@@Base+0xa24c>
   2445c:	mov	w2, #0x3                   	// #3
   24460:	mov	w5, #0x9f                  	// #159
   24464:	mov	w3, #0x80                  	// #128
   24468:	b	243ec <PyInit__decimal@@Base+0xa24c>
   2446c:	mov	w2, #0x3                   	// #3
   24470:	mov	w5, #0xbf                  	// #191
   24474:	mov	w3, #0x80                  	// #128
   24478:	b	243ec <PyInit__decimal@@Base+0xa24c>
   2447c:	mov	w2, #0x4                   	// #4
   24480:	mov	w5, #0xbf                  	// #191
   24484:	mov	w3, #0x90                  	// #144
   24488:	b	243ec <PyInit__decimal@@Base+0xa24c>
   2448c:	mov	w2, #0x4                   	// #4
   24490:	mov	w5, #0xbf                  	// #191
   24494:	mov	w3, #0x80                  	// #128
   24498:	b	243ec <PyInit__decimal@@Base+0xa24c>
   2449c:	strb	w0, [x19, #19]
   244a0:	ldrb	w2, [x1, #1]
   244a4:	sub	w0, w2, #0x80
   244a8:	and	w0, w0, #0xff
   244ac:	cmp	w0, #0x3f
   244b0:	b.ls	244c0 <PyInit__decimal@@Base+0xa320>  // b.plast
   244b4:	strb	wzr, [x19, #19]
   244b8:	mov	w22, #0x0                   	// #0
   244bc:	b	241ec <PyInit__decimal@@Base+0xa04c>
   244c0:	str	x23, [sp, #48]
   244c4:	strb	w2, [x19, #20]
   244c8:	mov	w2, #0x2                   	// #2
   244cc:	mov	w0, w2
   244d0:	b	24444 <PyInit__decimal@@Base+0xa2a4>
   244d4:	ldr	x23, [sp, #48]
   244d8:	b	241ec <PyInit__decimal@@Base+0xa04c>
   244dc:	sub	sp, sp, #0x2f0
   244e0:	stp	x29, x30, [sp]
   244e4:	mov	x29, sp
   244e8:	stp	x19, x20, [sp, #16]
   244ec:	stp	x21, x22, [sp, #32]
   244f0:	stp	x23, x24, [sp, #48]
   244f4:	mov	x22, x0
   244f8:	mov	x19, x1
   244fc:	mov	x23, x3
   24500:	mov	w0, #0x30                  	// #48
   24504:	strb	w0, [sp, #192]
   24508:	str	xzr, [sp, #200]
   2450c:	str	xzr, [sp, #208]
   24510:	str	xzr, [sp, #216]
   24514:	mov	x0, #0x40                  	// #64
   24518:	str	x0, [sp, #224]
   2451c:	add	x0, sp, #0xf0
   24520:	str	x0, [sp, #232]
   24524:	ldrb	w20, [x1, #16]
   24528:	ldr	x1, [x1]
   2452c:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   24530:	movk	x0, #0xb6b3, lsl #32
   24534:	movk	x0, #0xde0, lsl #48
   24538:	cmp	x1, x0
   2453c:	b.gt	24618 <PyInit__decimal@@Base+0xa478>
   24540:	stp	x25, x26, [sp, #64]
   24544:	mov	x25, x2
   24548:	bl	6880 <__ctype_b_loc@plt>
   2454c:	mov	x24, x0
   24550:	and	x26, x20, #0xff
   24554:	ldr	x0, [x0]
   24558:	ldrh	w0, [x0, x26, lsl #1]
   2455c:	mov	w21, #0x0                   	// #0
   24560:	tbz	w0, #8, 24578 <PyInit__decimal@@Base+0xa3d8>
   24564:	bl	6600 <__ctype_tolower_loc@plt>
   24568:	ldr	x0, [x0]
   2456c:	ldr	w20, [x0, x26, lsl #2]
   24570:	and	w20, w20, #0xff
   24574:	mov	w21, #0x1                   	// #1
   24578:	ldrb	w0, [x19, #18]
   2457c:	cmp	w0, #0x20
   24580:	b.eq	2462c <PyInit__decimal@@Base+0xa48c>  // b.none
   24584:	orr	w1, w21, #0x80
   24588:	cmp	w0, #0x2b
   2458c:	csel	w21, w1, w21, eq  // eq = none
   24590:	mov	x0, x22
   24594:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
   24598:	cbz	w0, 24670 <PyInit__decimal@@Base+0xa4d0>
   2459c:	ldrb	w0, [x19, #17]
   245a0:	cmp	w0, #0x7a
   245a4:	b.eq	24634 <PyInit__decimal@@Base+0xa494>  // b.none
   245a8:	mov	x3, #0x1                   	// #1
   245ac:	cmp	w20, #0x25
   245b0:	b.eq	24668 <PyInit__decimal@@Base+0xa4c8>  // b.none
   245b4:	mov	w2, w21
   245b8:	mov	x1, x22
   245bc:	add	x0, sp, #0xb8
   245c0:	bl	22430 <PyInit__decimal@@Base+0x8290>
   245c4:	str	x0, [sp, #160]
   245c8:	str	x0, [sp, #168]
   245cc:	tbnz	x0, #63, 24934 <PyInit__decimal@@Base+0xa794>
   245d0:	ldr	x0, [x19, #24]
   245d4:	ldrb	w0, [x0]
   245d8:	cbnz	w0, 24954 <PyInit__decimal@@Base+0xa7b4>
   245dc:	ldr	x22, [x19]
   245e0:	cbz	x22, 245f0 <PyInit__decimal@@Base+0xa450>
   245e4:	ldr	x21, [sp, #168]
   245e8:	cmp	x22, x21
   245ec:	b.gt	24b00 <PyInit__decimal@@Base+0xa960>
   245f0:	add	x0, sp, #0xc0
   245f4:	bl	282b0 <PyInit__decimal@@Base+0xe110>
   245f8:	ldr	x0, [sp, #184]
   245fc:	ldp	x25, x26, [sp, #64]
   24600:	ldp	x19, x20, [sp, #16]
   24604:	ldp	x21, x22, [sp, #32]
   24608:	ldp	x23, x24, [sp, #48]
   2460c:	ldp	x29, x30, [sp]
   24610:	add	sp, sp, #0x2f0
   24614:	ret
   24618:	ldr	w0, [x3]
   2461c:	orr	w0, w0, #0x100
   24620:	str	w0, [x3]
   24624:	mov	x0, #0x0                   	// #0
   24628:	b	24600 <PyInit__decimal@@Base+0xa460>
   2462c:	orr	w21, w21, #0x40
   24630:	b	24590 <PyInit__decimal@@Base+0xa3f0>
   24634:	ldp	x0, x1, [x19]
   24638:	stp	x0, x1, [sp, #112]
   2463c:	ldp	x0, x1, [x19, #16]
   24640:	stp	x0, x1, [sp, #128]
   24644:	ldp	x0, x1, [x19, #32]
   24648:	stp	x0, x1, [sp, #144]
   2464c:	mov	w0, #0x20                  	// #32
   24650:	strb	w0, [sp, #131]
   24654:	strb	wzr, [sp, #132]
   24658:	mov	w0, #0x3e                  	// #62
   2465c:	strb	w0, [sp, #129]
   24660:	add	x19, sp, #0x70
   24664:	b	245a8 <PyInit__decimal@@Base+0xa408>
   24668:	orr	w21, w21, #0x20
   2466c:	b	245b4 <PyInit__decimal@@Base+0xa414>
   24670:	str	wzr, [sp, #108]
   24674:	cmp	w20, #0x66
   24678:	b.eq	24744 <PyInit__decimal@@Base+0xa5a4>  // b.none
   2467c:	b.hi	2470c <PyInit__decimal@@Base+0xa56c>  // b.pmore
   24680:	cmp	w20, #0x25
   24684:	b.eq	2471c <PyInit__decimal@@Base+0xa57c>  // b.none
   24688:	orr	w21, w21, #0x8
   2468c:	cmp	w20, #0x65
   24690:	b.ne	24780 <PyInit__decimal@@Base+0xa5e0>  // b.any
   24694:	ldr	x26, [x19, #8]
   24698:	mov	x3, #0x1                   	// #1
   2469c:	tbnz	x26, #63, 245b4 <PyInit__decimal@@Base+0xa414>
   246a0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   246a4:	movk	x0, #0xb6b3, lsl #32
   246a8:	movk	x0, #0xde0, lsl #48
   246ac:	cmp	x26, x0
   246b0:	b.gt	24764 <PyInit__decimal@@Base+0xa5c4>
   246b4:	cmp	w20, #0x66
   246b8:	b.eq	24914 <PyInit__decimal@@Base+0xa774>  // b.none
   246bc:	cmp	w20, #0x67
   246c0:	b.eq	24788 <PyInit__decimal@@Base+0xa5e8>  // b.none
   246c4:	cmp	w20, #0x65
   246c8:	b.eq	24824 <PyInit__decimal@@Base+0xa684>  // b.none
   246cc:	mov	x0, x22
   246d0:	bl	28118 <PyInit__decimal@@Base+0xdf78>
   246d4:	mov	x3, #0x1                   	// #1
   246d8:	cbz	w0, 247a0 <PyInit__decimal@@Base+0xa600>
   246dc:	ldr	x0, [x22, #8]
   246e0:	cmp	x0, #0x0
   246e4:	b.le	247a0 <PyInit__decimal@@Base+0xa600>
   246e8:	add	x0, sp, #0xc0
   246ec:	add	x4, sp, #0x6c
   246f0:	mov	x3, x25
   246f4:	mov	x2, #0x0                   	// #0
   246f8:	mov	x1, x22
   246fc:	mov	x22, x0
   24700:	bl	31e40 <PyInit__decimal@@Base+0x17ca0>
   24704:	mov	x3, #0x1                   	// #1
   24708:	b	247a0 <PyInit__decimal@@Base+0xa600>
   2470c:	cmp	w20, #0x67
   24710:	b.ne	24780 <PyInit__decimal@@Base+0xa5e0>  // b.any
   24714:	orr	w21, w21, #0x2
   24718:	b	24694 <PyInit__decimal@@Base+0xa4f4>
   2471c:	orr	w21, w21, #0x20
   24720:	mov	x2, x23
   24724:	mov	x1, x22
   24728:	add	x0, sp, #0xc0
   2472c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   24730:	cbz	w0, 24774 <PyInit__decimal@@Base+0xa5d4>
   24734:	ldr	x0, [sp, #200]
   24738:	add	x0, x0, #0x2
   2473c:	str	x0, [sp, #200]
   24740:	add	x22, sp, #0xc0
   24744:	orr	w21, w21, #0x10
   24748:	ldr	x26, [x19, #8]
   2474c:	tbnz	x26, #63, 246cc <PyInit__decimal@@Base+0xa52c>
   24750:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   24754:	movk	x0, #0xb6b3, lsl #32
   24758:	movk	x0, #0xde0, lsl #48
   2475c:	cmp	x26, x0
   24760:	b.le	24914 <PyInit__decimal@@Base+0xa774>
   24764:	ldr	w0, [x23]
   24768:	orr	w0, w0, #0x100
   2476c:	str	w0, [x23]
   24770:	b	24940 <PyInit__decimal@@Base+0xa7a0>
   24774:	mov	x0, #0x0                   	// #0
   24778:	ldp	x25, x26, [sp, #64]
   2477c:	b	24600 <PyInit__decimal@@Base+0xa460>
   24780:	str	x27, [sp, #80]
   24784:	bl	67c0 <abort@plt>
   24788:	cmp	x26, #0x0
   2478c:	csinc	x26, x26, xzr, ne  // ne = any
   24790:	ldr	x20, [x22, #16]
   24794:	mov	x3, #0x1                   	// #1
   24798:	cmp	x26, x20
   2479c:	b.lt	24c84 <PyInit__decimal@@Base+0xaae4>  // b.tstop
   247a0:	ldr	w0, [sp, #108]
   247a4:	mov	w1, #0x3be                 	// #958
   247a8:	ands	w0, w0, w1
   247ac:	b.eq	245b4 <PyInit__decimal@@Base+0xa414>  // b.none
   247b0:	ldr	w1, [x23]
   247b4:	orr	w0, w1, w0
   247b8:	str	w0, [x23]
   247bc:	b	24940 <PyInit__decimal@@Base+0xa7a0>
   247c0:	add	x20, x27, x20
   247c4:	sub	x20, x20, x26
   247c8:	add	x4, sp, #0x6c
   247cc:	mov	x3, x25
   247d0:	mov	x2, x20
   247d4:	mov	x1, x22
   247d8:	add	x0, sp, #0xc0
   247dc:	bl	31e90 <PyInit__decimal@@Base+0x17cf0>
   247e0:	ldr	x0, [sp, #208]
   247e4:	cmp	x0, x26
   247e8:	b.gt	247fc <PyInit__decimal@@Base+0xa65c>
   247ec:	mov	x3, #0x1                   	// #1
   247f0:	add	x22, sp, #0xc0
   247f4:	ldr	x27, [sp, #80]
   247f8:	b	247a0 <PyInit__decimal@@Base+0xa600>
   247fc:	add	x22, sp, #0xc0
   24800:	add	x4, sp, #0x6c
   24804:	mov	x3, x25
   24808:	add	x2, x20, #0x1
   2480c:	mov	x1, x22
   24810:	mov	x0, x22
   24814:	bl	31e90 <PyInit__decimal@@Base+0x17cf0>
   24818:	mov	x3, #0x1                   	// #1
   2481c:	ldr	x27, [sp, #80]
   24820:	b	247a0 <PyInit__decimal@@Base+0xa600>
   24824:	mov	x0, x22
   24828:	bl	28118 <PyInit__decimal@@Base+0xdf78>
   2482c:	cbz	w0, 24840 <PyInit__decimal@@Base+0xa6a0>
   24830:	ldr	x0, [x19, #8]
   24834:	mov	x3, #0x1                   	// #1
   24838:	sub	x3, x3, x0
   2483c:	b	247a0 <PyInit__decimal@@Base+0xa600>
   24840:	ldr	x20, [x19, #8]
   24844:	add	x20, x20, #0x1
   24848:	cmp	x20, #0x0
   2484c:	b.le	24894 <PyInit__decimal@@Base+0xa6f4>
   24850:	str	x27, [sp, #80]
   24854:	ldr	x26, [x22, #8]
   24858:	ldr	x27, [x22, #16]
   2485c:	mov	x0, x22
   24860:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
   24864:	cbnz	w0, 24874 <PyInit__decimal@@Base+0xa6d4>
   24868:	mov	x0, x22
   2486c:	bl	28118 <PyInit__decimal@@Base+0xdf78>
   24870:	cbz	w0, 248b0 <PyInit__decimal@@Base+0xa710>
   24874:	add	x0, sp, #0xc0
   24878:	add	x2, sp, #0x6c
   2487c:	mov	x1, x22
   24880:	mov	x22, x0
   24884:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   24888:	mov	x3, #0x1                   	// #1
   2488c:	ldr	x27, [sp, #80]
   24890:	b	247a0 <PyInit__decimal@@Base+0xa600>
   24894:	add	x22, sp, #0xc0
   24898:	add	x2, sp, #0x6c
   2489c:	mov	w1, #0x100                 	// #256
   248a0:	mov	x0, x22
   248a4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   248a8:	mov	x3, #0x1                   	// #1
   248ac:	b	247a0 <PyInit__decimal@@Base+0xa600>
   248b0:	add	x26, x26, x27
   248b4:	sub	x26, x26, x20
   248b8:	add	x4, sp, #0x6c
   248bc:	mov	x3, x25
   248c0:	mov	x2, x26
   248c4:	mov	x1, x22
   248c8:	add	x0, sp, #0xc0
   248cc:	bl	31e90 <PyInit__decimal@@Base+0x17cf0>
   248d0:	ldr	x0, [sp, #208]
   248d4:	cmp	x20, x0
   248d8:	b.lt	248ec <PyInit__decimal@@Base+0xa74c>  // b.tstop
   248dc:	mov	x3, #0x1                   	// #1
   248e0:	add	x22, sp, #0xc0
   248e4:	ldr	x27, [sp, #80]
   248e8:	b	247a0 <PyInit__decimal@@Base+0xa600>
   248ec:	add	x22, sp, #0xc0
   248f0:	add	x4, sp, #0x6c
   248f4:	mov	x3, x25
   248f8:	add	x2, x26, #0x1
   248fc:	mov	x1, x22
   24900:	mov	x0, x22
   24904:	bl	31e90 <PyInit__decimal@@Base+0x17cf0>
   24908:	mov	x3, #0x1                   	// #1
   2490c:	ldr	x27, [sp, #80]
   24910:	b	247a0 <PyInit__decimal@@Base+0xa600>
   24914:	add	x0, sp, #0xc0
   24918:	add	x4, sp, #0x6c
   2491c:	mov	x3, x25
   24920:	neg	x2, x26
   24924:	mov	x1, x22
   24928:	mov	x22, x0
   2492c:	bl	31e40 <PyInit__decimal@@Base+0x17ca0>
   24930:	b	246cc <PyInit__decimal@@Base+0xa52c>
   24934:	ldr	w0, [x23]
   24938:	orr	w0, w0, #0x200
   2493c:	str	w0, [x23]
   24940:	add	x0, sp, #0xc0
   24944:	bl	282b0 <PyInit__decimal@@Base+0xe110>
   24948:	mov	x0, #0x0                   	// #0
   2494c:	ldp	x25, x26, [sp, #64]
   24950:	b	24600 <PyInit__decimal@@Base+0xa460>
   24954:	mov	x0, x22
   24958:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
   2495c:	cbnz	w0, 245dc <PyInit__decimal@@Base+0xa43c>
   24960:	mov	x0, #0x23                  	// #35
   24964:	movk	x0, #0xa764, lsl #16
   24968:	movk	x0, #0xb6b3, lsl #32
   2496c:	movk	x0, #0xde0, lsl #48
   24970:	ldr	x1, [sp, #168]
   24974:	cmp	x1, x0
   24978:	b.gt	24a08 <PyInit__decimal@@Base+0xa868>
   2497c:	str	x27, [sp, #80]
   24980:	ldr	x21, [sp, #184]
   24984:	ldrb	w1, [x21]
   24988:	sub	w0, w1, #0x2b
   2498c:	and	w0, w0, #0xfffffffd
   24990:	and	w0, w0, #0xff
   24994:	cmp	w1, #0x20
   24998:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   2499c:	b.ne	24a28 <PyInit__decimal@@Base+0xa888>  // b.any
   249a0:	add	x22, x21, #0x1
   249a4:	mov	x25, x21
   249a8:	add	x3, x22, #0x1
   249ac:	ldr	x2, [x24]
   249b0:	ldrb	w0, [x22, #1]
   249b4:	and	x1, x0, #0xff
   249b8:	ldrh	w1, [x2, x1, lsl #1]
   249bc:	tbz	w1, #11, 249d0 <PyInit__decimal@@Base+0xa830>
   249c0:	ldrb	w0, [x3, #1]!
   249c4:	and	x1, x0, #0xff
   249c8:	ldrh	w1, [x2, x1, lsl #1]
   249cc:	tbnz	w1, #11, 249c0 <PyInit__decimal@@Base+0xa820>
   249d0:	cmp	w0, #0x2e
   249d4:	b.eq	24a34 <PyInit__decimal@@Base+0xa894>  // b.none
   249d8:	sub	x24, x3, x21
   249dc:	ldr	x0, [sp, #160]
   249e0:	sub	x24, x0, x24
   249e4:	mov	x26, x3
   249e8:	ldr	x0, [x19, #32]
   249ec:	ldrb	w0, [x0]
   249f0:	cbz	w0, 24af0 <PyInit__decimal@@Base+0xa950>
   249f4:	ldr	x0, [x19, #40]
   249f8:	ldrb	w0, [x0]
   249fc:	cbz	w0, 24af8 <PyInit__decimal@@Base+0xa958>
   24a00:	mov	x27, #0x0                   	// #0
   24a04:	b	24a4c <PyInit__decimal@@Base+0xa8ac>
   24a08:	ldr	w0, [x23]
   24a0c:	orr	w0, w0, #0x100
   24a10:	str	w0, [x23]
   24a14:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24a18:	ldr	x1, [x0, #1704]
   24a1c:	ldr	x0, [sp, #184]
   24a20:	blr	x1
   24a24:	b	24940 <PyInit__decimal@@Base+0xa7a0>
   24a28:	mov	x22, x21
   24a2c:	mov	x25, #0x0                   	// #0
   24a30:	b	249a8 <PyInit__decimal@@Base+0xa808>
   24a34:	add	x26, x3, #0x1
   24a38:	ldr	x27, [x19, #24]
   24a3c:	sub	x0, x26, x21
   24a40:	ldr	x24, [sp, #160]
   24a44:	sub	x24, x24, x0
   24a48:	cbz	x27, 249e8 <PyInit__decimal@@Base+0xa848>
   24a4c:	sub	x20, x3, x22
   24a50:	str	xzr, [sp, #184]
   24a54:	mov	x7, x19
   24a58:	mov	x6, x24
   24a5c:	mov	x5, x26
   24a60:	mov	x4, x27
   24a64:	mov	x3, x20
   24a68:	mov	x2, x22
   24a6c:	mov	x1, x25
   24a70:	add	x0, sp, #0xa0
   24a74:	bl	2215c <PyInit__decimal@@Base+0x7fbc>
   24a78:	mov	x1, #0x1                   	// #1
   24a7c:	ldr	x0, [sp, #160]
   24a80:	add	x0, x0, x1
   24a84:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   24a88:	str	x0, [sp, #184]
   24a8c:	cbz	x0, 24acc <PyInit__decimal@@Base+0xa92c>
   24a90:	mov	x7, x19
   24a94:	mov	x6, x24
   24a98:	mov	x5, x26
   24a9c:	mov	x4, x27
   24aa0:	mov	x3, x20
   24aa4:	mov	x2, x22
   24aa8:	mov	x1, x25
   24aac:	add	x0, sp, #0xa0
   24ab0:	bl	2215c <PyInit__decimal@@Base+0x7fbc>
   24ab4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24ab8:	ldr	x1, [x0, #1704]
   24abc:	mov	x0, x21
   24ac0:	blr	x1
   24ac4:	ldr	x27, [sp, #80]
   24ac8:	b	245dc <PyInit__decimal@@Base+0xa43c>
   24acc:	ldr	w0, [x23]
   24ad0:	orr	w0, w0, #0x200
   24ad4:	str	w0, [x23]
   24ad8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24adc:	ldr	x1, [x0, #1704]
   24ae0:	mov	x0, x21
   24ae4:	blr	x1
   24ae8:	ldr	x27, [sp, #80]
   24aec:	b	24940 <PyInit__decimal@@Base+0xa7a0>
   24af0:	ldr	x27, [sp, #80]
   24af4:	b	245dc <PyInit__decimal@@Base+0xa43c>
   24af8:	ldr	x27, [sp, #80]
   24afc:	b	245dc <PyInit__decimal@@Base+0xa43c>
   24b00:	str	x27, [sp, #80]
   24b04:	ldrb	w27, [x19, #17]
   24b08:	strb	wzr, [sp, #108]
   24b0c:	add	x0, x19, #0x13
   24b10:	bl	64d0 <strlen@plt>
   24b14:	mov	x20, x0
   24b18:	sub	x22, x22, x21
   24b1c:	mul	x24, x0, x22
   24b20:	ldr	x1, [sp, #160]
   24b24:	add	x1, x1, #0x1
   24b28:	add	x3, sp, #0x6c
   24b2c:	mov	x2, #0x1                   	// #1
   24b30:	add	x1, x1, x24
   24b34:	ldr	x0, [sp, #184]
   24b38:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   24b3c:	mov	x25, x0
   24b40:	str	x0, [sp, #184]
   24b44:	ldrb	w0, [sp, #108]
   24b48:	cbnz	w0, 24bac <PyInit__decimal@@Base+0xaa0c>
   24b4c:	cmp	w27, #0x7a
   24b50:	b.eq	24cc4 <PyInit__decimal@@Base+0xab24>  // b.none
   24b54:	mov	x23, x22
   24b58:	mov	x26, #0x0                   	// #0
   24b5c:	cmp	w27, #0x3c
   24b60:	b.eq	24b80 <PyInit__decimal@@Base+0xa9e0>  // b.none
   24b64:	sub	w0, w27, #0x3d
   24b68:	and	w0, w0, #0xff
   24b6c:	cmp	w0, #0x1
   24b70:	b.ls	24bd0 <PyInit__decimal@@Base+0xaa30>  // b.plast
   24b74:	add	x26, x22, x22, lsr #63
   24b78:	asr	x26, x26, #1
   24b7c:	sub	x23, x22, x26
   24b80:	ldr	x21, [sp, #160]
   24b84:	mul	x27, x20, x26
   24b88:	mov	x2, x21
   24b8c:	mov	x1, x25
   24b90:	add	x0, x25, x27
   24b94:	bl	6490 <memmove@plt>
   24b98:	cbz	x26, 24c14 <PyInit__decimal@@Base+0xaa74>
   24b9c:	mov	x0, x25
   24ba0:	mov	x3, #0x0                   	// #0
   24ba4:	add	x4, x19, #0x13
   24ba8:	b	24bf4 <PyInit__decimal@@Base+0xaa54>
   24bac:	ldr	w0, [x23]
   24bb0:	orr	w0, w0, #0x200
   24bb4:	str	w0, [x23]
   24bb8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24bbc:	ldr	x1, [x0, #1704]
   24bc0:	mov	x0, x25
   24bc4:	blr	x1
   24bc8:	ldr	x27, [sp, #80]
   24bcc:	b	24940 <PyInit__decimal@@Base+0xa7a0>
   24bd0:	mov	x26, x22
   24bd4:	ldr	x21, [sp, #160]
   24bd8:	cmp	w27, #0x3d
   24bdc:	b.eq	24ccc <PyInit__decimal@@Base+0xab2c>  // b.none
   24be0:	b	24cf0 <PyInit__decimal@@Base+0xab50>
   24be4:	add	x3, x3, #0x1
   24be8:	add	x0, x0, x20
   24bec:	cmp	x3, x26
   24bf0:	b.eq	24c14 <PyInit__decimal@@Base+0xaa74>  // b.none
   24bf4:	mov	x1, #0x0                   	// #0
   24bf8:	cbz	x20, 24be4 <PyInit__decimal@@Base+0xaa44>
   24bfc:	ldrb	w2, [x4, x1]
   24c00:	strb	w2, [x0, x1]
   24c04:	add	x1, x1, #0x1
   24c08:	cmp	x20, x1
   24c0c:	b.ne	24bfc <PyInit__decimal@@Base+0xaa5c>  // b.any
   24c10:	b	24be4 <PyInit__decimal@@Base+0xaa44>
   24c14:	add	x21, x21, x27
   24c18:	cbz	x23, 24c5c <PyInit__decimal@@Base+0xaabc>
   24c1c:	add	x0, x25, x21
   24c20:	mov	x4, #0x0                   	// #0
   24c24:	add	x19, x19, #0x13
   24c28:	b	24c3c <PyInit__decimal@@Base+0xaa9c>
   24c2c:	add	x4, x4, #0x1
   24c30:	add	x0, x0, x20
   24c34:	cmp	x4, x23
   24c38:	b.eq	24c5c <PyInit__decimal@@Base+0xaabc>  // b.none
   24c3c:	mov	x2, #0x0                   	// #0
   24c40:	cbz	x20, 24c2c <PyInit__decimal@@Base+0xaa8c>
   24c44:	ldrb	w3, [x19, x2]
   24c48:	strb	w3, [x0, x2]
   24c4c:	add	x2, x2, #0x1
   24c50:	cmp	x20, x2
   24c54:	b.ne	24c44 <PyInit__decimal@@Base+0xaaa4>  // b.any
   24c58:	b	24c2c <PyInit__decimal@@Base+0xaa8c>
   24c5c:	ldr	x0, [sp, #160]
   24c60:	add	x24, x24, x0
   24c64:	str	x24, [sp, #160]
   24c68:	ldr	x0, [sp, #168]
   24c6c:	add	x22, x0, x22
   24c70:	str	x22, [sp, #168]
   24c74:	ldr	x0, [sp, #184]
   24c78:	strb	wzr, [x0, x24]
   24c7c:	ldr	x27, [sp, #80]
   24c80:	b	245f0 <PyInit__decimal@@Base+0xa450>
   24c84:	str	x27, [sp, #80]
   24c88:	ldr	x27, [x22, #8]
   24c8c:	mov	x0, x22
   24c90:	bl	2810c <PyInit__decimal@@Base+0xdf6c>
   24c94:	cbnz	w0, 24ca4 <PyInit__decimal@@Base+0xab04>
   24c98:	mov	x0, x22
   24c9c:	bl	28118 <PyInit__decimal@@Base+0xdf78>
   24ca0:	cbz	w0, 247c0 <PyInit__decimal@@Base+0xa620>
   24ca4:	add	x0, sp, #0xc0
   24ca8:	add	x2, sp, #0x6c
   24cac:	mov	x1, x22
   24cb0:	mov	x22, x0
   24cb4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   24cb8:	mov	x3, #0x1                   	// #1
   24cbc:	ldr	x27, [sp, #80]
   24cc0:	b	247a0 <PyInit__decimal@@Base+0xa600>
   24cc4:	mov	x26, x22
   24cc8:	ldr	x21, [sp, #160]
   24ccc:	ldrb	w1, [x25]
   24cd0:	sub	w0, w1, #0x2b
   24cd4:	and	w0, w0, #0xfffffffd
   24cd8:	and	w0, w0, #0xff
   24cdc:	cmp	w1, #0x20
   24ce0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   24ce4:	b.ne	24cf0 <PyInit__decimal@@Base+0xab50>  // b.any
   24ce8:	add	x25, x25, #0x1
   24cec:	sub	x21, x21, #0x1
   24cf0:	mul	x27, x20, x26
   24cf4:	mov	x2, x21
   24cf8:	mov	x1, x25
   24cfc:	add	x0, x25, x27
   24d00:	bl	6490 <memmove@plt>
   24d04:	mov	x23, #0x0                   	// #0
   24d08:	b	24b9c <PyInit__decimal@@Base+0xa9fc>
   24d0c:	stp	x29, x30, [sp, #-96]!
   24d10:	mov	x29, sp
   24d14:	stp	x19, x20, [sp, #16]
   24d18:	str	x21, [sp, #32]
   24d1c:	mov	x20, x0
   24d20:	mov	x21, x2
   24d24:	mov	x19, x3
   24d28:	mov	w2, #0x1                   	// #1
   24d2c:	add	x0, sp, #0x30
   24d30:	bl	2401c <PyInit__decimal@@Base+0x9e7c>
   24d34:	cbz	w0, 24d5c <PyInit__decimal@@Base+0xabbc>
   24d38:	mov	x3, x19
   24d3c:	mov	x2, x21
   24d40:	add	x1, sp, #0x30
   24d44:	mov	x0, x20
   24d48:	bl	244dc <PyInit__decimal@@Base+0xa33c>
   24d4c:	ldp	x19, x20, [sp, #16]
   24d50:	ldr	x21, [sp, #32]
   24d54:	ldp	x29, x30, [sp], #96
   24d58:	ret
   24d5c:	ldr	w0, [x19]
   24d60:	orr	w0, w0, #0x100
   24d64:	str	w0, [x19]
   24d68:	mov	x0, #0x0                   	// #0
   24d6c:	b	24d4c <PyInit__decimal@@Base+0xabac>
   24d70:	stp	x29, x30, [sp, #-80]!
   24d74:	mov	x29, sp
   24d78:	stp	x19, x20, [sp, #16]
   24d7c:	stp	x21, x22, [sp, #32]
   24d80:	stp	x23, x24, [sp, #48]
   24d84:	stp	x25, x26, [sp, #64]
   24d88:	mov	x26, x0
   24d8c:	mov	w20, w1
   24d90:	mov	w22, w2
   24d94:	strb	wzr, [x0]
   24d98:	mov	x21, x0
   24d9c:	mov	x19, #0x0                   	// #0
   24da0:	mov	w23, #0x1                   	// #1
   24da4:	adrp	x25, 5e000 <PyInit__decimal@@Base+0x43e60>
   24da8:	add	x25, x25, #0x598
   24dac:	adrp	x24, 43000 <PyInit__decimal@@Base+0x28e60>
   24db0:	add	x24, x24, #0x1f0
   24db4:	b	24dc4 <PyInit__decimal@@Base+0xac24>
   24db8:	add	x19, x19, #0x1
   24dbc:	cmp	x19, #0xf
   24dc0:	b.eq	24dfc <PyInit__decimal@@Base+0xac5c>  // b.none
   24dc4:	lsl	w0, w23, w19
   24dc8:	tst	w0, w22
   24dcc:	b.eq	24db8 <PyInit__decimal@@Base+0xac18>  // b.none
   24dd0:	ldr	x3, [x25, x19, lsl #3]
   24dd4:	mov	x2, x24
   24dd8:	sxtw	x1, w20
   24ddc:	mov	x0, x21
   24de0:	bl	6610 <snprintf@plt>
   24de4:	cmp	w0, #0x0
   24de8:	ccmp	w0, w20, #0x0, ge  // ge = tcont
   24dec:	b.ge	24e2c <PyInit__decimal@@Base+0xac8c>  // b.tcont
   24df0:	add	x21, x21, w0, sxtw
   24df4:	sub	w20, w20, w0
   24df8:	b	24db8 <PyInit__decimal@@Base+0xac18>
   24dfc:	mov	x0, x21
   24e00:	cmp	x21, x26
   24e04:	b.eq	24e10 <PyInit__decimal@@Base+0xac70>  // b.none
   24e08:	sub	x0, x21, #0x1
   24e0c:	sturb	wzr, [x21, #-1]
   24e10:	sub	w0, w0, w26
   24e14:	ldp	x19, x20, [sp, #16]
   24e18:	ldp	x21, x22, [sp, #32]
   24e1c:	ldp	x23, x24, [sp, #48]
   24e20:	ldp	x25, x26, [sp, #64]
   24e24:	ldp	x29, x30, [sp], #80
   24e28:	ret
   24e2c:	mov	w0, #0xffffffff            	// #-1
   24e30:	b	24e14 <PyInit__decimal@@Base+0xac74>
   24e34:	stp	x29, x30, [sp, #-96]!
   24e38:	mov	x29, sp
   24e3c:	stp	x19, x20, [sp, #16]
   24e40:	stp	x21, x22, [sp, #32]
   24e44:	stp	x23, x24, [sp, #48]
   24e48:	stp	x25, x26, [sp, #64]
   24e4c:	str	x27, [sp, #80]
   24e50:	mov	x26, x0
   24e54:	mov	w22, w2
   24e58:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24e5c:	add	x0, x0, #0x598
   24e60:	cmp	x3, #0x0
   24e64:	csel	x24, x0, x3, eq  // eq = none
   24e68:	mov	w0, #0x5b                  	// #91
   24e6c:	strb	w0, [x26]
   24e70:	mov	x27, x26
   24e74:	strb	wzr, [x27, #1]!
   24e78:	sub	w21, w1, #0x1
   24e7c:	mov	x20, x27
   24e80:	mov	x19, #0x0                   	// #0
   24e84:	mov	w23, #0x1                   	// #1
   24e88:	adrp	x25, 43000 <PyInit__decimal@@Base+0x28e60>
   24e8c:	add	x25, x25, #0x1f8
   24e90:	b	24ea0 <PyInit__decimal@@Base+0xad00>
   24e94:	add	x19, x19, #0x1
   24e98:	cmp	x19, #0xf
   24e9c:	b.eq	24ed8 <PyInit__decimal@@Base+0xad38>  // b.none
   24ea0:	lsl	w0, w23, w19
   24ea4:	tst	w0, w22
   24ea8:	b.eq	24e94 <PyInit__decimal@@Base+0xacf4>  // b.none
   24eac:	ldr	x3, [x24, x19, lsl #3]
   24eb0:	mov	x2, x25
   24eb4:	sxtw	x1, w21
   24eb8:	mov	x0, x20
   24ebc:	bl	6610 <snprintf@plt>
   24ec0:	cmp	w0, #0x0
   24ec4:	ccmp	w0, w21, #0x0, ge  // ge = tcont
   24ec8:	b.ge	24f10 <PyInit__decimal@@Base+0xad70>  // b.tcont
   24ecc:	add	x20, x20, w0, sxtw
   24ed0:	sub	w21, w21, w0
   24ed4:	b	24e94 <PyInit__decimal@@Base+0xacf4>
   24ed8:	sub	x0, x20, #0x2
   24edc:	cmp	x20, x27
   24ee0:	csel	x20, x0, x20, ne  // ne = any
   24ee4:	mov	w0, #0x5d                  	// #93
   24ee8:	strb	w0, [x20]
   24eec:	strb	wzr, [x20, #1]!
   24ef0:	sub	w0, w20, w26
   24ef4:	ldp	x19, x20, [sp, #16]
   24ef8:	ldp	x21, x22, [sp, #32]
   24efc:	ldp	x23, x24, [sp, #48]
   24f00:	ldp	x25, x26, [sp, #64]
   24f04:	ldr	x27, [sp, #80]
   24f08:	ldp	x29, x30, [sp], #96
   24f0c:	ret
   24f10:	mov	w0, #0xffffffff            	// #-1
   24f14:	b	24ef4 <PyInit__decimal@@Base+0xad54>
   24f18:	stp	x29, x30, [sp, #-112]!
   24f1c:	mov	x29, sp
   24f20:	stp	x19, x20, [sp, #16]
   24f24:	stp	x21, x22, [sp, #32]
   24f28:	stp	x23, x24, [sp, #48]
   24f2c:	stp	x25, x26, [sp, #64]
   24f30:	stp	x27, x28, [sp, #80]
   24f34:	mov	x4, x0
   24f38:	str	x0, [sp, #104]
   24f3c:	mov	w20, w2
   24f40:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   24f44:	add	x0, x0, #0x598
   24f48:	add	x0, x0, #0x78
   24f4c:	cmp	x3, #0x0
   24f50:	csel	x24, x0, x3, eq  // eq = none
   24f54:	mov	w0, #0x5b                  	// #91
   24f58:	strb	w0, [x4]
   24f5c:	mov	x28, x4
   24f60:	strb	wzr, [x28, #1]!
   24f64:	sub	w22, w1, #0x1
   24f68:	mov	x21, x28
   24f6c:	mov	x19, #0x0                   	// #0
   24f70:	mov	w26, #0x0                   	// #0
   24f74:	mov	w23, #0x1                   	// #1
   24f78:	mov	w27, #0x3ba                 	// #954
   24f7c:	adrp	x25, 43000 <PyInit__decimal@@Base+0x28e60>
   24f80:	add	x25, x25, #0x1f8
   24f84:	b	24fbc <PyInit__decimal@@Base+0xae1c>
   24f88:	ldr	x3, [x24, x19, lsl #3]
   24f8c:	mov	x2, x25
   24f90:	sxtw	x1, w22
   24f94:	mov	x0, x21
   24f98:	bl	6610 <snprintf@plt>
   24f9c:	cmp	w0, #0x0
   24fa0:	ccmp	w0, w22, #0x0, ge  // ge = tcont
   24fa4:	b.ge	25018 <PyInit__decimal@@Base+0xae78>  // b.tcont
   24fa8:	add	x21, x21, w0, sxtw
   24fac:	sub	w22, w22, w0
   24fb0:	add	x19, x19, #0x1
   24fb4:	cmp	x19, #0xf
   24fb8:	b.eq	24fdc <PyInit__decimal@@Base+0xae3c>  // b.none
   24fbc:	lsl	w0, w23, w19
   24fc0:	ands	w0, w0, w20
   24fc4:	b.eq	24fb0 <PyInit__decimal@@Base+0xae10>  // b.none
   24fc8:	tst	w0, w27
   24fcc:	b.eq	24f88 <PyInit__decimal@@Base+0xade8>  // b.none
   24fd0:	cbnz	w26, 24fb0 <PyInit__decimal@@Base+0xae10>
   24fd4:	mov	w26, w23
   24fd8:	b	24f88 <PyInit__decimal@@Base+0xade8>
   24fdc:	sub	x0, x21, #0x2
   24fe0:	cmp	x21, x28
   24fe4:	csel	x21, x0, x21, ne  // ne = any
   24fe8:	mov	w0, #0x5d                  	// #93
   24fec:	strb	w0, [x21]
   24ff0:	strb	wzr, [x21, #1]!
   24ff4:	ldr	w0, [sp, #104]
   24ff8:	sub	w0, w21, w0
   24ffc:	ldp	x19, x20, [sp, #16]
   25000:	ldp	x21, x22, [sp, #32]
   25004:	ldp	x23, x24, [sp, #48]
   25008:	ldp	x25, x26, [sp, #64]
   2500c:	ldp	x27, x28, [sp, #80]
   25010:	ldp	x29, x30, [sp], #112
   25014:	ret
   25018:	mov	w0, #0xffffffff            	// #-1
   2501c:	b	24ffc <PyInit__decimal@@Base+0xae5c>
   25020:	stp	x29, x30, [sp, #-32]!
   25024:	mov	x29, sp
   25028:	stp	x19, x20, [sp, #16]
   2502c:	mov	x20, x0
   25030:	mov	x0, x1
   25034:	mov	w1, #0x1                   	// #1
   25038:	bl	23f2c <PyInit__decimal@@Base+0x9d8c>
   2503c:	cbz	x0, 25074 <PyInit__decimal@@Base+0xaed4>
   25040:	mov	x19, x0
   25044:	mov	x2, x0
   25048:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   2504c:	add	x1, x1, #0x200
   25050:	mov	x0, x20
   25054:	bl	6a70 <fprintf@plt>
   25058:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2505c:	ldr	x1, [x0, #1704]
   25060:	mov	x0, x19
   25064:	blr	x1
   25068:	ldp	x19, x20, [sp, #16]
   2506c:	ldp	x29, x30, [sp], #32
   25070:	ret
   25074:	mov	x3, x20
   25078:	mov	x2, #0x19                  	// #25
   2507c:	mov	x1, #0x1                   	// #1
   25080:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   25084:	add	x0, x0, #0x208
   25088:	bl	6930 <fwrite@plt>
   2508c:	b	25068 <PyInit__decimal@@Base+0xaec8>
   25090:	stp	x29, x30, [sp, #-32]!
   25094:	mov	x29, sp
   25098:	mov	w1, #0x1                   	// #1
   2509c:	bl	23f2c <PyInit__decimal@@Base+0x9d8c>
   250a0:	cbz	x0, 250cc <PyInit__decimal@@Base+0xaf2c>
   250a4:	str	x19, [sp, #16]
   250a8:	mov	x19, x0
   250ac:	bl	6810 <puts@plt>
   250b0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   250b4:	ldr	x1, [x0, #1704]
   250b8:	mov	x0, x19
   250bc:	blr	x1
   250c0:	ldr	x19, [sp, #16]
   250c4:	ldp	x29, x30, [sp], #32
   250c8:	ret
   250cc:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   250d0:	ldr	x0, [x0, #3904]
   250d4:	ldr	x3, [x0]
   250d8:	mov	x2, #0x19                  	// #25
   250dc:	mov	x1, #0x1                   	// #1
   250e0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   250e4:	add	x0, x0, #0x208
   250e8:	bl	6930 <fwrite@plt>
   250ec:	b	250c4 <PyInit__decimal@@Base+0xaf24>
   250f0:	stp	x29, x30, [sp, #-32]!
   250f4:	mov	x29, sp
   250f8:	stp	x19, x20, [sp, #16]
   250fc:	mul	x20, x0, x1
   25100:	umulh	x0, x0, x1
   25104:	cbnz	x0, 2513c <PyInit__decimal@@Base+0xaf9c>
   25108:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2510c:	ldr	x1, [x0, #1680]
   25110:	mov	x0, x20
   25114:	blr	x1
   25118:	mov	x19, x0
   2511c:	cbz	x0, 2512c <PyInit__decimal@@Base+0xaf8c>
   25120:	mov	x2, x20
   25124:	mov	w1, #0x0                   	// #0
   25128:	bl	6670 <memset@plt>
   2512c:	mov	x0, x19
   25130:	ldp	x19, x20, [sp, #16]
   25134:	ldp	x29, x30, [sp], #32
   25138:	ret
   2513c:	mov	x19, #0x0                   	// #0
   25140:	b	2512c <PyInit__decimal@@Base+0xaf8c>
   25144:	mov	x2, x0
   25148:	mul	x0, x0, x1
   2514c:	umulh	x2, x2, x1
   25150:	cbnz	x2, 25170 <PyInit__decimal@@Base+0xafd0>
   25154:	stp	x29, x30, [sp, #-16]!
   25158:	mov	x29, sp
   2515c:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   25160:	ldr	x1, [x1, #1680]
   25164:	blr	x1
   25168:	ldp	x29, x30, [sp], #16
   2516c:	ret
   25170:	mov	x0, #0x0                   	// #0
   25174:	ret
   25178:	umulh	x2, x0, x1
   2517c:	cbnz	x2, 2519c <PyInit__decimal@@Base+0xaffc>
   25180:	stp	x29, x30, [sp, #-16]!
   25184:	mov	x29, sp
   25188:	adrp	x2, 5e000 <PyInit__decimal@@Base+0x43e60>
   2518c:	ldr	x2, [x2, #1688]
   25190:	blr	x2
   25194:	ldp	x29, x30, [sp], #16
   25198:	ret
   2519c:	mov	x0, #0x0                   	// #0
   251a0:	ret
   251a4:	stp	x29, x30, [sp, #-32]!
   251a8:	mov	x29, sp
   251ac:	stp	x19, x20, [sp, #16]
   251b0:	mov	x19, x0
   251b4:	mov	x4, x1
   251b8:	mov	x20, x3
   251bc:	mul	x1, x1, x2
   251c0:	umulh	x4, x4, x2
   251c4:	cbnz	x4, 251e8 <PyInit__decimal@@Base+0xb048>
   251c8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   251cc:	ldr	x2, [x0, #1696]
   251d0:	mov	x0, x19
   251d4:	blr	x2
   251d8:	cbz	x0, 251f8 <PyInit__decimal@@Base+0xb058>
   251dc:	ldp	x19, x20, [sp, #16]
   251e0:	ldp	x29, x30, [sp], #32
   251e4:	ret
   251e8:	mov	w0, #0x1                   	// #1
   251ec:	strb	w0, [x3]
   251f0:	mov	x0, x19
   251f4:	b	251dc <PyInit__decimal@@Base+0xb03c>
   251f8:	mov	w0, #0x1                   	// #1
   251fc:	strb	w0, [x20]
   25200:	mov	x0, x19
   25204:	b	251dc <PyInit__decimal@@Base+0xb03c>
   25208:	mul	x4, x1, x2
   2520c:	umulh	x1, x1, x2
   25210:	cbnz	x1, 25244 <PyInit__decimal@@Base+0xb0a4>
   25214:	mov	x3, x0
   25218:	mov	x0, #0x0                   	// #0
   2521c:	adds	x3, x3, x4
   25220:	b.cs	2524c <PyInit__decimal@@Base+0xb0ac>  // b.hs, b.nlast
   25224:	stp	x29, x30, [sp, #-16]!
   25228:	mov	x29, sp
   2522c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25230:	ldr	x1, [x0, #1680]
   25234:	mov	x0, x3
   25238:	blr	x1
   2523c:	ldp	x29, x30, [sp], #16
   25240:	ret
   25244:	mov	x0, #0x0                   	// #0
   25248:	ret
   2524c:	ret
   25250:	stp	x29, x30, [sp, #-48]!
   25254:	mov	x29, sp
   25258:	stp	x19, x20, [sp, #16]
   2525c:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   25260:	ldr	x1, [x1, #1672]
   25264:	cmp	x1, x0
   25268:	csel	x20, x1, x0, ge  // ge = tcont
   2526c:	mov	x1, #0x30                  	// #48
   25270:	mov	x0, #0x1                   	// #1
   25274:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   25278:	mov	x19, x0
   2527c:	cbz	x0, 252b4 <PyInit__decimal@@Base+0xb114>
   25280:	str	x21, [sp, #32]
   25284:	mov	x1, #0x8                   	// #8
   25288:	mov	x0, x20
   2528c:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   25290:	mov	x21, x0
   25294:	str	x0, [x19, #40]
   25298:	cbz	x0, 252c4 <PyInit__decimal@@Base+0xb124>
   2529c:	strb	wzr, [x19]
   252a0:	str	xzr, [x19, #8]
   252a4:	str	xzr, [x19, #16]
   252a8:	str	xzr, [x19, #24]
   252ac:	str	x20, [x19, #32]
   252b0:	ldr	x21, [sp, #32]
   252b4:	mov	x0, x19
   252b8:	ldp	x19, x20, [sp, #16]
   252bc:	ldp	x29, x30, [sp], #48
   252c0:	ret
   252c4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   252c8:	ldr	x1, [x0, #1704]
   252cc:	mov	x0, x19
   252d0:	blr	x1
   252d4:	mov	x19, x21
   252d8:	ldr	x21, [sp, #32]
   252dc:	b	252b4 <PyInit__decimal@@Base+0xb114>
   252e0:	stp	x29, x30, [sp, #-16]!
   252e4:	mov	x29, sp
   252e8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   252ec:	ldr	x0, [x0, #1672]
   252f0:	bl	25250 <PyInit__decimal@@Base+0xb0b0>
   252f4:	ldp	x29, x30, [sp], #16
   252f8:	ret
   252fc:	stp	x29, x30, [sp, #-32]!
   25300:	mov	x29, sp
   25304:	stp	x19, x20, [sp, #16]
   25308:	mov	x20, x0
   2530c:	bl	252e0 <PyInit__decimal@@Base+0xb140>
   25310:	mov	x19, x0
   25314:	cbz	x0, 25328 <PyInit__decimal@@Base+0xb188>
   25318:	mov	x0, x19
   2531c:	ldp	x19, x20, [sp, #16]
   25320:	ldp	x29, x30, [sp], #32
   25324:	ret
   25328:	mov	w1, #0x200                 	// #512
   2532c:	mov	x0, x20
   25330:	bl	1d670 <PyInit__decimal@@Base+0x34d0>
   25334:	b	25318 <PyInit__decimal@@Base+0xb178>
   25338:	stp	x29, x30, [sp, #-48]!
   2533c:	mov	x29, sp
   25340:	stp	x19, x20, [sp, #16]
   25344:	stp	x21, x22, [sp, #32]
   25348:	mov	x19, x0
   2534c:	mov	x20, x1
   25350:	mov	x21, x2
   25354:	ldr	x22, [x0, #40]
   25358:	mov	x1, #0x8                   	// #8
   2535c:	mov	x0, x20
   25360:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   25364:	str	x0, [x19, #40]
   25368:	cbz	x0, 2539c <PyInit__decimal@@Base+0xb1fc>
   2536c:	ldr	x2, [x19, #32]
   25370:	lsl	x2, x2, #3
   25374:	mov	x1, x22
   25378:	bl	6470 <memcpy@plt>
   2537c:	str	x20, [x19, #32]
   25380:	mov	x0, x19
   25384:	bl	28808 <PyInit__decimal@@Base+0xe668>
   25388:	mov	w0, #0x1                   	// #1
   2538c:	ldp	x19, x20, [sp, #16]
   25390:	ldp	x21, x22, [sp, #32]
   25394:	ldp	x29, x30, [sp], #48
   25398:	ret
   2539c:	str	x22, [x19, #40]
   253a0:	mov	x0, x19
   253a4:	bl	287a0 <PyInit__decimal@@Base+0xe600>
   253a8:	mov	x0, x19
   253ac:	bl	287d8 <PyInit__decimal@@Base+0xe638>
   253b0:	str	xzr, [x19, #24]
   253b4:	str	xzr, [x19, #16]
   253b8:	str	xzr, [x19, #8]
   253bc:	ldr	w0, [x21]
   253c0:	orr	w0, w0, #0x200
   253c4:	str	w0, [x21]
   253c8:	mov	w0, #0x0                   	// #0
   253cc:	b	2538c <PyInit__decimal@@Base+0xb1ec>
   253d0:	stp	x29, x30, [sp, #-48]!
   253d4:	mov	x29, sp
   253d8:	stp	x19, x20, [sp, #16]
   253dc:	stp	x21, x22, [sp, #32]
   253e0:	mov	x19, x0
   253e4:	mov	x20, x1
   253e8:	mov	x21, x2
   253ec:	ldr	x22, [x0, #40]
   253f0:	mov	x1, #0x8                   	// #8
   253f4:	mov	x0, x20
   253f8:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   253fc:	str	x0, [x19, #40]
   25400:	cbz	x0, 25424 <PyInit__decimal@@Base+0xb284>
   25404:	str	x20, [x19, #32]
   25408:	mov	x0, x19
   2540c:	bl	28808 <PyInit__decimal@@Base+0xe668>
   25410:	mov	w0, #0x1                   	// #1
   25414:	ldp	x19, x20, [sp, #16]
   25418:	ldp	x21, x22, [sp, #32]
   2541c:	ldp	x29, x30, [sp], #48
   25420:	ret
   25424:	str	x22, [x19, #40]
   25428:	mov	x0, x19
   2542c:	bl	287a0 <PyInit__decimal@@Base+0xe600>
   25430:	mov	x0, x19
   25434:	bl	287d8 <PyInit__decimal@@Base+0xe638>
   25438:	str	xzr, [x19, #24]
   2543c:	str	xzr, [x19, #16]
   25440:	str	xzr, [x19, #8]
   25444:	ldr	w0, [x21]
   25448:	orr	w0, w0, #0x200
   2544c:	str	w0, [x21]
   25450:	mov	w0, #0x0                   	// #0
   25454:	b	25414 <PyInit__decimal@@Base+0xb274>
   25458:	stp	x29, x30, [sp, #-64]!
   2545c:	mov	x29, sp
   25460:	stp	x19, x20, [sp, #16]
   25464:	str	x21, [sp, #32]
   25468:	mov	x19, x0
   2546c:	mov	x20, x1
   25470:	mov	x21, x2
   25474:	strb	wzr, [sp, #63]
   25478:	add	x3, sp, #0x3f
   2547c:	mov	x2, #0x8                   	// #8
   25480:	ldr	x0, [x0, #40]
   25484:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   25488:	str	x0, [x19, #40]
   2548c:	ldrb	w0, [sp, #63]
   25490:	cbnz	w0, 254ac <PyInit__decimal@@Base+0xb30c>
   25494:	str	x20, [x19, #32]
   25498:	mov	w0, #0x1                   	// #1
   2549c:	ldp	x19, x20, [sp, #16]
   254a0:	ldr	x21, [sp, #32]
   254a4:	ldp	x29, x30, [sp], #64
   254a8:	ret
   254ac:	ldr	x1, [x19, #32]
   254b0:	mov	w0, #0x1                   	// #1
   254b4:	cmp	x1, x20
   254b8:	b.ge	2549c <PyInit__decimal@@Base+0xb2fc>  // b.tcont
   254bc:	mov	x0, x19
   254c0:	bl	287a0 <PyInit__decimal@@Base+0xe600>
   254c4:	mov	x0, x19
   254c8:	bl	287d8 <PyInit__decimal@@Base+0xe638>
   254cc:	str	xzr, [x19, #24]
   254d0:	str	xzr, [x19, #16]
   254d4:	str	xzr, [x19, #8]
   254d8:	ldr	w0, [x21]
   254dc:	orr	w0, w0, #0x200
   254e0:	str	w0, [x21]
   254e4:	mov	w0, #0x0                   	// #0
   254e8:	b	2549c <PyInit__decimal@@Base+0xb2fc>
   254ec:	stp	x29, x30, [sp, #-128]!
   254f0:	mov	x29, sp
   254f4:	stp	x19, x20, [sp, #16]
   254f8:	stp	x23, x24, [sp, #48]
   254fc:	stp	x25, x26, [sp, #64]
   25500:	stp	x27, x28, [sp, #80]
   25504:	mov	x25, x0
   25508:	mov	x23, x1
   2550c:	mov	x24, x2
   25510:	mov	x20, x4
   25514:	mov	x28, x5
   25518:	cmp	x4, #0x10
   2551c:	b.ls	255f0 <PyInit__decimal@@Base+0xb450>  // b.plast
   25520:	stp	x21, x22, [sp, #32]
   25524:	mov	x19, x3
   25528:	add	x22, x4, #0x1
   2552c:	lsr	x21, x22, #1
   25530:	cmp	x5, x22, lsr #1
   25534:	b.hi	2563c <PyInit__decimal@@Base+0xb49c>  // b.pmore
   25538:	sub	x20, x4, x21
   2553c:	cmp	x20, x5
   25540:	b.cs	25600 <PyInit__decimal@@Base+0xb460>  // b.hs, b.nlast
   25544:	lsl	x2, x5, #1
   25548:	add	x3, x2, #0x1
   2554c:	mov	x0, #0x0                   	// #0
   25550:	str	xzr, [x19, x0, lsl #3]
   25554:	cmp	x2, x0
   25558:	add	x0, x0, #0x1
   2555c:	b.ne	25550 <PyInit__decimal@@Base+0xb3b0>  // b.any
   25560:	mov	x5, x20
   25564:	mov	x4, x28
   25568:	add	x3, x19, x3, lsl #3
   2556c:	add	x2, x23, x21, lsl #3
   25570:	mov	x1, x24
   25574:	mov	x0, x19
   25578:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   2557c:	add	x2, x20, x28
   25580:	mov	x1, x19
   25584:	add	x0, x25, x21, lsl #3
   25588:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   2558c:	and	x2, x22, #0xfffffffffffffffe
   25590:	orr	x3, x22, #0x1
   25594:	mov	x0, #0x0                   	// #0
   25598:	str	xzr, [x19, x0, lsl #3]
   2559c:	cmp	x2, x0
   255a0:	add	x0, x0, #0x1
   255a4:	b.ne	25598 <PyInit__decimal@@Base+0xb3f8>  // b.any
   255a8:	mov	x5, x28
   255ac:	mov	x4, x21
   255b0:	add	x3, x19, x3, lsl #3
   255b4:	mov	x2, x24
   255b8:	mov	x1, x23
   255bc:	mov	x0, x19
   255c0:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   255c4:	add	x2, x21, x28
   255c8:	mov	x1, x19
   255cc:	mov	x0, x25
   255d0:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   255d4:	ldp	x21, x22, [sp, #32]
   255d8:	ldp	x19, x20, [sp, #16]
   255dc:	ldp	x23, x24, [sp, #48]
   255e0:	ldp	x25, x26, [sp, #64]
   255e4:	ldp	x27, x28, [sp, #80]
   255e8:	ldp	x29, x30, [sp], #128
   255ec:	ret
   255f0:	mov	x4, x5
   255f4:	mov	x3, x20
   255f8:	bl	1b530 <PyInit__decimal@@Base+0x1390>
   255fc:	b	255d8 <PyInit__decimal@@Base+0xb438>
   25600:	lsl	x2, x20, #1
   25604:	add	x3, x2, #0x1
   25608:	mov	x0, #0x0                   	// #0
   2560c:	str	xzr, [x19, x0, lsl #3]
   25610:	cmp	x2, x0
   25614:	add	x0, x0, #0x1
   25618:	b.ne	2560c <PyInit__decimal@@Base+0xb46c>  // b.any
   2561c:	mov	x5, x28
   25620:	mov	x4, x20
   25624:	add	x3, x19, x3, lsl #3
   25628:	mov	x2, x24
   2562c:	add	x1, x23, x21, lsl #3
   25630:	mov	x0, x19
   25634:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   25638:	b	2557c <PyInit__decimal@@Base+0xb3dc>
   2563c:	lsl	x26, x21, #3
   25640:	mov	x2, x26
   25644:	mov	x0, x3
   25648:	bl	6470 <memcpy@plt>
   2564c:	str	xzr, [x19, x21, lsl #3]
   25650:	add	x1, x23, x26
   25654:	str	x1, [sp, #104]
   25658:	sub	x20, x20, x21
   2565c:	mov	x2, x20
   25660:	mov	x0, x19
   25664:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25668:	add	x27, x26, #0x8
   2566c:	add	x0, x19, x27
   25670:	mov	x2, x26
   25674:	mov	x1, x24
   25678:	str	x0, [sp, #96]
   2567c:	bl	6470 <memcpy@plt>
   25680:	lsl	x1, x21, #4
   25684:	str	x1, [sp, #112]
   25688:	add	x0, x19, x1
   2568c:	str	xzr, [x0, #8]
   25690:	add	x3, x24, x26
   25694:	str	x3, [sp, #120]
   25698:	sub	x27, x28, x21
   2569c:	mov	x2, x27
   256a0:	mov	x1, x3
   256a4:	ldr	x0, [sp, #96]
   256a8:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   256ac:	add	x28, x25, x26
   256b0:	ldr	x1, [sp, #112]
   256b4:	add	x3, x1, #0x10
   256b8:	add	x4, x21, #0x1
   256bc:	mov	x5, x4
   256c0:	add	x3, x19, x3
   256c4:	ldr	x2, [sp, #96]
   256c8:	mov	x1, x19
   256cc:	mov	x0, x28
   256d0:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   256d4:	lsl	x2, x20, #1
   256d8:	add	x3, x2, #0x1
   256dc:	mov	x0, #0x0                   	// #0
   256e0:	str	xzr, [x19, x0, lsl #3]
   256e4:	cmp	x2, x0
   256e8:	add	x0, x0, #0x1
   256ec:	b.ne	256e0 <PyInit__decimal@@Base+0xb540>  // b.any
   256f0:	mov	x5, x27
   256f4:	mov	x4, x20
   256f8:	add	x3, x19, x3, lsl #3
   256fc:	ldr	x2, [sp, #120]
   25700:	ldr	x1, [sp, #104]
   25704:	mov	x0, x19
   25708:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   2570c:	add	x20, x20, x27
   25710:	mov	x2, x20
   25714:	mov	x1, x19
   25718:	add	x0, x28, x26
   2571c:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25720:	mov	x2, x20
   25724:	mov	x1, x19
   25728:	mov	x0, x28
   2572c:	bl	1b3d4 <PyInit__decimal@@Base+0x1234>
   25730:	and	x20, x22, #0xfffffffffffffffe
   25734:	orr	x3, x22, #0x1
   25738:	mov	x0, #0x0                   	// #0
   2573c:	str	xzr, [x19, x0, lsl #3]
   25740:	cmp	x20, x0
   25744:	add	x0, x0, #0x1
   25748:	b.ne	2573c <PyInit__decimal@@Base+0xb59c>  // b.any
   2574c:	mov	x5, x21
   25750:	mov	x4, x21
   25754:	add	x3, x19, x3, lsl #3
   25758:	mov	x2, x24
   2575c:	mov	x1, x23
   25760:	mov	x0, x19
   25764:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   25768:	mov	x2, x20
   2576c:	mov	x1, x19
   25770:	mov	x0, x25
   25774:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25778:	mov	x2, x20
   2577c:	mov	x1, x19
   25780:	mov	x0, x28
   25784:	bl	1b3d4 <PyInit__decimal@@Base+0x1234>
   25788:	ldp	x21, x22, [sp, #32]
   2578c:	b	255d8 <PyInit__decimal@@Base+0xb438>
   25790:	stp	x29, x30, [sp, #-32]!
   25794:	mov	x29, sp
   25798:	str	x19, [sp, #16]
   2579c:	mov	x19, x0
   257a0:	mov	x0, #0x20000000000000      	// #9007199254740992
   257a4:	cmp	x19, x0
   257a8:	b.hi	257ec <PyInit__decimal@@Base+0xb64c>  // b.pmore
   257ac:	ucvtf	d0, w1
   257b0:	bl	6620 <log10@plt>
   257b4:	ucvtf	d1, x19
   257b8:	fmov	d2, #1.900000000000000000e+01
   257bc:	fdiv	d0, d0, d2
   257c0:	fmul	d0, d1, d0
   257c4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   257c8:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   257cc:	ldr	d1, [x1, #1096]
   257d0:	fcmpe	d0, d1
   257d4:	b.ge	257e0 <PyInit__decimal@@Base+0xb640>  // b.tcont
   257d8:	fcvtzs	x0, d0
   257dc:	add	x0, x0, #0x1
   257e0:	ldr	x19, [sp, #16]
   257e4:	ldp	x29, x30, [sp], #32
   257e8:	ret
   257ec:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   257f0:	b	257e0 <PyInit__decimal@@Base+0xb640>
   257f4:	stp	x29, x30, [sp, #-96]!
   257f8:	mov	x29, sp
   257fc:	stp	x21, x22, [sp, #32]
   25800:	mov	x22, x0
   25804:	mvn	x0, x3
   25808:	cmp	x2, x0
   2580c:	b.hi	258f8 <PyInit__decimal@@Base+0xb758>  // b.pmore
   25810:	stp	x19, x20, [sp, #16]
   25814:	stp	x23, x24, [sp, #48]
   25818:	stp	x25, x26, [sp, #64]
   2581c:	mov	x24, x1
   25820:	mov	x20, x2
   25824:	mov	x21, x3
   25828:	mov	x23, x4
   2582c:	add	x19, x2, x3
   25830:	str	x19, [x4]
   25834:	lsr	x5, x19, #32
   25838:	mov	w6, #0x20                  	// #32
   2583c:	cmp	xzr, x19, lsr #32
   25840:	b.ne	2584c <PyInit__decimal@@Base+0xb6ac>  // b.any
   25844:	mov	x5, x19
   25848:	mov	w6, #0x0                   	// #0
   2584c:	lsr	x0, x5, #16
   25850:	cmp	xzr, x5, lsr #16
   25854:	b.eq	25860 <PyInit__decimal@@Base+0xb6c0>  // b.none
   25858:	add	w6, w6, #0x10
   2585c:	mov	x5, x0
   25860:	lsr	x0, x5, #8
   25864:	cmp	xzr, x5, lsr #8
   25868:	b.eq	25874 <PyInit__decimal@@Base+0xb6d4>  // b.none
   2586c:	add	w6, w6, #0x8
   25870:	mov	x5, x0
   25874:	lsr	x0, x5, #4
   25878:	cmp	xzr, x5, lsr #4
   2587c:	b.eq	25888 <PyInit__decimal@@Base+0xb6e8>  // b.none
   25880:	add	w6, w6, #0x4
   25884:	mov	x5, x0
   25888:	lsr	x0, x5, #2
   2588c:	cmp	xzr, x5, lsr #2
   25890:	b.eq	2589c <PyInit__decimal@@Base+0xb6fc>  // b.none
   25894:	add	w6, w6, #0x2
   25898:	mov	x5, x0
   2589c:	lsr	x0, x5, #1
   258a0:	cmp	xzr, x5, lsr #1
   258a4:	b.eq	258b0 <PyInit__decimal@@Base+0xb710>  // b.none
   258a8:	add	w6, w6, #0x1
   258ac:	mov	x5, x0
   258b0:	sub	w6, w6, #0x1
   258b4:	add	w5, w6, w5
   258b8:	sxtw	x5, w5
   258bc:	cmp	x19, #0x400
   258c0:	b.ls	25954 <PyInit__decimal@@Base+0xb7b4>  // b.plast
   258c4:	mov	x0, #0x100000000           	// #4294967296
   258c8:	cmp	x19, x0
   258cc:	b.hi	25ac4 <PyInit__decimal@@Base+0xb924>  // b.pmore
   258d0:	mov	x0, #0x1                   	// #1
   258d4:	lsl	x5, x0, x5
   258d8:	cmp	x5, x19
   258dc:	b.eq	25968 <PyInit__decimal@@Base+0xb7c8>  // b.none
   258e0:	lsr	x0, x5, #1
   258e4:	add	x5, x5, x0
   258e8:	cmp	x5, x19
   258ec:	b.cs	25ae8 <PyInit__decimal@@Base+0xb948>  // b.hs, b.nlast
   258f0:	add	x19, x0, x5
   258f4:	b	25968 <PyInit__decimal@@Base+0xb7c8>
   258f8:	stp	x19, x20, [sp, #16]
   258fc:	stp	x23, x24, [sp, #48]
   25900:	stp	x25, x26, [sp, #64]
   25904:	stp	x27, x28, [sp, #80]
   25908:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2590c:	ldr	x19, [x19, #3904]
   25910:	mov	w3, #0x253                 	// #595
   25914:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   25918:	add	x2, x2, #0xc68
   2591c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   25920:	add	x1, x1, #0xca8
   25924:	ldr	x0, [x19]
   25928:	bl	6a70 <fprintf@plt>
   2592c:	ldr	x3, [x19]
   25930:	mov	x2, #0x29                  	// #41
   25934:	mov	x1, #0x1                   	// #1
   25938:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2593c:	add	x0, x0, #0x2f8
   25940:	bl	6930 <fwrite@plt>
   25944:	ldr	x1, [x19]
   25948:	mov	w0, #0xa                   	// #10
   2594c:	bl	65b0 <fputc@plt>
   25950:	bl	67c0 <abort@plt>
   25954:	mov	x0, #0x1                   	// #1
   25958:	lsl	x5, x0, x5
   2595c:	lsl	x0, x5, #1
   25960:	cmp	x5, x19
   25964:	csel	x19, x0, x19, ne  // ne = any
   25968:	mov	x1, #0x8                   	// #8
   2596c:	mov	x0, x19
   25970:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   25974:	mov	x25, x0
   25978:	cbz	x0, 25adc <PyInit__decimal@@Base+0xb93c>
   2597c:	stp	x27, x28, [sp, #80]
   25980:	mov	x1, #0x8                   	// #8
   25984:	mov	x0, x19
   25988:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   2598c:	mov	x27, x0
   25990:	cbz	x0, 25b74 <PyInit__decimal@@Base+0xb9d4>
   25994:	mov	x1, #0x8                   	// #8
   25998:	mov	x0, x19
   2599c:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   259a0:	mov	x26, x0
   259a4:	cbz	x0, 25b78 <PyInit__decimal@@Base+0xb9d8>
   259a8:	lsl	x20, x20, #3
   259ac:	mov	x2, x20
   259b0:	mov	x1, x22
   259b4:	mov	x0, x25
   259b8:	bl	6470 <memcpy@plt>
   259bc:	mov	x2, x20
   259c0:	mov	x1, x22
   259c4:	mov	x0, x27
   259c8:	bl	6470 <memcpy@plt>
   259cc:	mov	x2, x20
   259d0:	mov	x1, x22
   259d4:	mov	x0, x26
   259d8:	bl	6470 <memcpy@plt>
   259dc:	cmp	x22, x24
   259e0:	b.eq	25af8 <PyInit__decimal@@Base+0xb958>  // b.none
   259e4:	mov	x1, #0x8                   	// #8
   259e8:	mov	x0, x19
   259ec:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   259f0:	mov	x22, x0
   259f4:	cbz	x0, 25b78 <PyInit__decimal@@Base+0xb9d8>
   259f8:	lsl	x28, x21, #3
   259fc:	mov	x2, x28
   25a00:	mov	x1, x24
   25a04:	bl	6470 <memcpy@plt>
   25a08:	mov	w3, #0x0                   	// #0
   25a0c:	mov	x2, x19
   25a10:	mov	x1, x22
   25a14:	mov	x0, x25
   25a18:	bl	1d738 <PyInit__decimal@@Base+0x3598>
   25a1c:	cbz	w0, 25b38 <PyInit__decimal@@Base+0xb998>
   25a20:	mov	x2, x28
   25a24:	mov	x1, x24
   25a28:	mov	x0, x22
   25a2c:	bl	6470 <memcpy@plt>
   25a30:	cmp	x19, x21
   25a34:	b.eq	25be0 <PyInit__decimal@@Base+0xba40>  // b.none
   25a38:	add	x20, x22, x28
   25a3c:	add	x21, x22, x19, lsl #3
   25a40:	mov	x0, x20
   25a44:	str	xzr, [x0], #8
   25a48:	cmp	x21, x0
   25a4c:	b.ne	25a44 <PyInit__decimal@@Base+0xb8a4>  // b.any
   25a50:	mov	w3, #0x1                   	// #1
   25a54:	mov	x2, x19
   25a58:	mov	x1, x22
   25a5c:	mov	x0, x27
   25a60:	bl	1d738 <PyInit__decimal@@Base+0x3598>
   25a64:	cbz	w0, 25b4c <PyInit__decimal@@Base+0xb9ac>
   25a68:	mov	x2, x28
   25a6c:	mov	x1, x24
   25a70:	mov	x0, x22
   25a74:	bl	6470 <memcpy@plt>
   25a78:	str	xzr, [x20], #8
   25a7c:	cmp	x21, x20
   25a80:	b.ne	25a78 <PyInit__decimal@@Base+0xb8d8>  // b.any
   25a84:	mov	w3, #0x2                   	// #2
   25a88:	mov	x2, x19
   25a8c:	mov	x1, x22
   25a90:	mov	x0, x26
   25a94:	bl	1d738 <PyInit__decimal@@Base+0x3598>
   25a98:	cbz	w0, 25b60 <PyInit__decimal@@Base+0xb9c0>
   25a9c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25aa0:	ldr	x1, [x0, #1704]
   25aa4:	mov	x0, x22
   25aa8:	blr	x1
   25aac:	ldr	x3, [x23]
   25ab0:	mov	x2, x26
   25ab4:	mov	x1, x27
   25ab8:	mov	x0, x25
   25abc:	bl	1edc8 <PyInit__decimal@@Base+0x4c28>
   25ac0:	b	25b90 <PyInit__decimal@@Base+0xb9f0>
   25ac4:	mov	x0, #0x180000000           	// #6442450944
   25ac8:	cmp	x19, x0
   25acc:	b.ls	25c0c <PyInit__decimal@@Base+0xba6c>  // b.plast
   25ad0:	mov	x0, #0x300000000           	// #12884901888
   25ad4:	cmp	x19, x0
   25ad8:	b.ls	25c14 <PyInit__decimal@@Base+0xba74>  // b.plast
   25adc:	mov	x26, #0x0                   	// #0
   25ae0:	mov	x25, #0x0                   	// #0
   25ae4:	b	25ba4 <PyInit__decimal@@Base+0xba04>
   25ae8:	cmn	x5, #0x1
   25aec:	b.eq	25adc <PyInit__decimal@@Base+0xb93c>  // b.none
   25af0:	mov	x19, x5
   25af4:	b	25968 <PyInit__decimal@@Base+0xb7c8>
   25af8:	mov	w2, #0x0                   	// #0
   25afc:	mov	x1, x19
   25b00:	mov	x0, x25
   25b04:	bl	1e290 <PyInit__decimal@@Base+0x40f0>
   25b08:	cbz	w0, 25b78 <PyInit__decimal@@Base+0xb9d8>
   25b0c:	mov	w2, #0x1                   	// #1
   25b10:	mov	x1, x19
   25b14:	mov	x0, x27
   25b18:	bl	1e290 <PyInit__decimal@@Base+0x40f0>
   25b1c:	cbz	w0, 25b78 <PyInit__decimal@@Base+0xb9d8>
   25b20:	mov	w2, #0x2                   	// #2
   25b24:	mov	x1, x19
   25b28:	mov	x0, x26
   25b2c:	bl	1e290 <PyInit__decimal@@Base+0x40f0>
   25b30:	cbnz	w0, 25aac <PyInit__decimal@@Base+0xb90c>
   25b34:	b	25b78 <PyInit__decimal@@Base+0xb9d8>
   25b38:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25b3c:	ldr	x1, [x0, #1704]
   25b40:	mov	x0, x22
   25b44:	blr	x1
   25b48:	b	25b78 <PyInit__decimal@@Base+0xb9d8>
   25b4c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25b50:	ldr	x1, [x0, #1704]
   25b54:	mov	x0, x22
   25b58:	blr	x1
   25b5c:	b	25b78 <PyInit__decimal@@Base+0xb9d8>
   25b60:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25b64:	ldr	x1, [x0, #1704]
   25b68:	mov	x0, x22
   25b6c:	blr	x1
   25b70:	b	25b78 <PyInit__decimal@@Base+0xb9d8>
   25b74:	mov	x26, x0
   25b78:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25b7c:	ldr	x1, [x0, #1704]
   25b80:	mov	x0, x25
   25b84:	blr	x1
   25b88:	mov	x25, #0x0                   	// #0
   25b8c:	cbz	x27, 25bd4 <PyInit__decimal@@Base+0xba34>
   25b90:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25b94:	ldr	x1, [x0, #1704]
   25b98:	mov	x0, x27
   25b9c:	blr	x1
   25ba0:	ldp	x27, x28, [sp, #80]
   25ba4:	cbz	x26, 25bb8 <PyInit__decimal@@Base+0xba18>
   25ba8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25bac:	ldr	x1, [x0, #1704]
   25bb0:	mov	x0, x26
   25bb4:	blr	x1
   25bb8:	mov	x0, x25
   25bbc:	ldp	x19, x20, [sp, #16]
   25bc0:	ldp	x23, x24, [sp, #48]
   25bc4:	ldp	x25, x26, [sp, #64]
   25bc8:	ldp	x21, x22, [sp, #32]
   25bcc:	ldp	x29, x30, [sp], #96
   25bd0:	ret
   25bd4:	mov	x25, x27
   25bd8:	ldp	x27, x28, [sp, #80]
   25bdc:	b	25ba4 <PyInit__decimal@@Base+0xba04>
   25be0:	mov	w3, #0x1                   	// #1
   25be4:	mov	x2, x19
   25be8:	mov	x1, x22
   25bec:	mov	x0, x27
   25bf0:	bl	1d738 <PyInit__decimal@@Base+0x3598>
   25bf4:	cbz	w0, 25b4c <PyInit__decimal@@Base+0xb9ac>
   25bf8:	mov	x2, x28
   25bfc:	mov	x1, x24
   25c00:	mov	x0, x22
   25c04:	bl	6470 <memcpy@plt>
   25c08:	b	25a84 <PyInit__decimal@@Base+0xb8e4>
   25c0c:	mov	x19, #0x180000000           	// #6442450944
   25c10:	b	25968 <PyInit__decimal@@Base+0xb7c8>
   25c14:	mov	x19, #0x300000000           	// #12884901888
   25c18:	b	25968 <PyInit__decimal@@Base+0xb7c8>
   25c1c:	stp	x29, x30, [sp, #-144]!
   25c20:	mov	x29, sp
   25c24:	stp	x19, x20, [sp, #16]
   25c28:	stp	x21, x22, [sp, #32]
   25c2c:	stp	x23, x24, [sp, #48]
   25c30:	mov	x24, x0
   25c34:	mov	x22, x1
   25c38:	mov	x23, x2
   25c3c:	mov	x20, x4
   25c40:	mov	x21, x5
   25c44:	mov	x0, #0x180000000           	// #6442450944
   25c48:	cmp	x4, x0
   25c4c:	b.hi	25cd4 <PyInit__decimal@@Base+0xbb34>  // b.pmore
   25c50:	cmp	x5, #0xc0
   25c54:	b.ls	25cb8 <PyInit__decimal@@Base+0xbb18>  // b.plast
   25c58:	add	x4, sp, #0x88
   25c5c:	mov	x3, x5
   25c60:	mov	x2, x20
   25c64:	mov	x1, x23
   25c68:	mov	x0, x22
   25c6c:	bl	257f4 <PyInit__decimal@@Base+0xb654>
   25c70:	mov	x19, x0
   25c74:	mov	w0, #0x0                   	// #0
   25c78:	cbz	x19, 25ca4 <PyInit__decimal@@Base+0xbb04>
   25c7c:	add	x20, x20, x21
   25c80:	lsl	x2, x20, #3
   25c84:	mov	x1, x19
   25c88:	mov	x0, x24
   25c8c:	bl	6470 <memcpy@plt>
   25c90:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   25c94:	ldr	x1, [x0, #1704]
   25c98:	mov	x0, x19
   25c9c:	blr	x1
   25ca0:	mov	w0, #0x1                   	// #1
   25ca4:	ldp	x19, x20, [sp, #16]
   25ca8:	ldp	x21, x22, [sp, #32]
   25cac:	ldp	x23, x24, [sp, #48]
   25cb0:	ldp	x29, x30, [sp], #144
   25cb4:	ret
   25cb8:	mov	x3, x5
   25cbc:	mov	x2, x1
   25cc0:	mov	x1, x23
   25cc4:	mov	x0, x24
   25cc8:	bl	1b530 <PyInit__decimal@@Base+0x1390>
   25ccc:	mov	w0, #0x1                   	// #1
   25cd0:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25cd4:	stp	x25, x26, [sp, #64]
   25cd8:	mov	x19, x3
   25cdc:	add	x26, x4, #0x1
   25ce0:	lsr	x25, x26, #1
   25ce4:	cmp	x5, x26, lsr #1
   25ce8:	b.hi	25df0 <PyInit__decimal@@Base+0xbc50>  // b.pmore
   25cec:	sub	x20, x4, x25
   25cf0:	cmp	x20, x5
   25cf4:	b.cs	25d90 <PyInit__decimal@@Base+0xbbf0>  // b.hs, b.nlast
   25cf8:	lsl	x2, x5, #1
   25cfc:	add	x3, x2, #0x1
   25d00:	mov	x0, #0x0                   	// #0
   25d04:	str	xzr, [x19, x0, lsl #3]
   25d08:	cmp	x2, x0
   25d0c:	add	x0, x0, #0x1
   25d10:	b.ne	25d04 <PyInit__decimal@@Base+0xbb64>  // b.any
   25d14:	mov	x5, x20
   25d18:	mov	x4, x21
   25d1c:	add	x3, x19, x3, lsl #3
   25d20:	add	x2, x22, x25, lsl #3
   25d24:	mov	x1, x23
   25d28:	mov	x0, x19
   25d2c:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25d30:	cbz	w0, 25d88 <PyInit__decimal@@Base+0xbbe8>
   25d34:	add	x2, x20, x21
   25d38:	mov	x1, x19
   25d3c:	add	x0, x24, x25, lsl #3
   25d40:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25d44:	and	x2, x26, #0xfffffffffffffffe
   25d48:	orr	x3, x26, #0x1
   25d4c:	mov	x0, #0x0                   	// #0
   25d50:	str	xzr, [x19, x0, lsl #3]
   25d54:	cmp	x2, x0
   25d58:	add	x0, x0, #0x1
   25d5c:	b.ne	25d50 <PyInit__decimal@@Base+0xbbb0>  // b.any
   25d60:	mov	x5, x21
   25d64:	mov	x4, x25
   25d68:	add	x3, x19, x3, lsl #3
   25d6c:	mov	x2, x23
   25d70:	mov	x1, x22
   25d74:	mov	x0, x19
   25d78:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25d7c:	cbnz	w0, 25dd4 <PyInit__decimal@@Base+0xbc34>
   25d80:	ldp	x25, x26, [sp, #64]
   25d84:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25d88:	ldp	x25, x26, [sp, #64]
   25d8c:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25d90:	lsl	x2, x20, #1
   25d94:	add	x3, x2, #0x1
   25d98:	mov	x0, #0x0                   	// #0
   25d9c:	str	xzr, [x19, x0, lsl #3]
   25da0:	cmp	x2, x0
   25da4:	add	x0, x0, #0x1
   25da8:	b.ne	25d9c <PyInit__decimal@@Base+0xbbfc>  // b.any
   25dac:	mov	x5, x21
   25db0:	mov	x4, x20
   25db4:	add	x3, x19, x3, lsl #3
   25db8:	mov	x2, x23
   25dbc:	add	x1, x22, x25, lsl #3
   25dc0:	mov	x0, x19
   25dc4:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25dc8:	cbnz	w0, 25d34 <PyInit__decimal@@Base+0xbb94>
   25dcc:	ldp	x25, x26, [sp, #64]
   25dd0:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25dd4:	add	x2, x25, x21
   25dd8:	mov	x1, x19
   25ddc:	mov	x0, x24
   25de0:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25de4:	mov	w0, #0x1                   	// #1
   25de8:	ldp	x25, x26, [sp, #64]
   25dec:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25df0:	stp	x27, x28, [sp, #80]
   25df4:	lsl	x27, x25, #3
   25df8:	mov	x2, x27
   25dfc:	mov	x0, x3
   25e00:	bl	6470 <memcpy@plt>
   25e04:	str	xzr, [x19, x25, lsl #3]
   25e08:	add	x1, x22, x27
   25e0c:	str	x1, [sp, #104]
   25e10:	sub	x20, x20, x25
   25e14:	mov	x2, x20
   25e18:	mov	x0, x19
   25e1c:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25e20:	add	x28, x27, #0x8
   25e24:	add	x28, x19, x28
   25e28:	mov	x2, x27
   25e2c:	mov	x1, x23
   25e30:	mov	x0, x28
   25e34:	bl	6470 <memcpy@plt>
   25e38:	lsl	x0, x25, #4
   25e3c:	str	x0, [sp, #96]
   25e40:	add	x0, x19, x0
   25e44:	str	xzr, [x0, #8]
   25e48:	add	x1, x23, x27
   25e4c:	str	x1, [sp, #112]
   25e50:	sub	x21, x21, x25
   25e54:	mov	x2, x21
   25e58:	mov	x0, x28
   25e5c:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25e60:	add	x6, x24, x27
   25e64:	str	x6, [sp, #120]
   25e68:	ldr	x1, [sp, #96]
   25e6c:	add	x3, x1, #0x10
   25e70:	add	x4, x25, #0x1
   25e74:	mov	x5, x4
   25e78:	add	x3, x19, x3
   25e7c:	mov	x2, x28
   25e80:	mov	x1, x19
   25e84:	mov	x0, x6
   25e88:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25e8c:	cbz	w0, 25f78 <PyInit__decimal@@Base+0xbdd8>
   25e90:	lsl	x2, x20, #1
   25e94:	add	x3, x2, #0x1
   25e98:	mov	x0, #0x0                   	// #0
   25e9c:	str	xzr, [x19, x0, lsl #3]
   25ea0:	cmp	x2, x0
   25ea4:	add	x0, x0, #0x1
   25ea8:	b.ne	25e9c <PyInit__decimal@@Base+0xbcfc>  // b.any
   25eac:	mov	x5, x21
   25eb0:	mov	x4, x20
   25eb4:	add	x3, x19, x3, lsl #3
   25eb8:	ldr	x2, [sp, #112]
   25ebc:	ldr	x1, [sp, #104]
   25ec0:	mov	x0, x19
   25ec4:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25ec8:	cbnz	w0, 25ed8 <PyInit__decimal@@Base+0xbd38>
   25ecc:	ldp	x25, x26, [sp, #64]
   25ed0:	ldp	x27, x28, [sp, #80]
   25ed4:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25ed8:	add	x20, x20, x21
   25edc:	mov	x2, x20
   25ee0:	mov	x1, x19
   25ee4:	ldr	x21, [sp, #120]
   25ee8:	add	x0, x21, x27
   25eec:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25ef0:	mov	x2, x20
   25ef4:	mov	x1, x19
   25ef8:	mov	x0, x21
   25efc:	bl	1b3d4 <PyInit__decimal@@Base+0x1234>
   25f00:	and	x20, x26, #0xfffffffffffffffe
   25f04:	orr	x3, x26, #0x1
   25f08:	mov	x0, #0x0                   	// #0
   25f0c:	str	xzr, [x19, x0, lsl #3]
   25f10:	cmp	x20, x0
   25f14:	add	x0, x0, #0x1
   25f18:	b.ne	25f0c <PyInit__decimal@@Base+0xbd6c>  // b.any
   25f1c:	mov	x5, x25
   25f20:	mov	x4, x25
   25f24:	add	x3, x19, x3, lsl #3
   25f28:	mov	x2, x23
   25f2c:	mov	x1, x22
   25f30:	mov	x0, x19
   25f34:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   25f38:	cbnz	w0, 25f48 <PyInit__decimal@@Base+0xbda8>
   25f3c:	ldp	x25, x26, [sp, #64]
   25f40:	ldp	x27, x28, [sp, #80]
   25f44:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25f48:	mov	x2, x20
   25f4c:	mov	x1, x19
   25f50:	mov	x0, x24
   25f54:	bl	1b194 <PyInit__decimal@@Base+0xff4>
   25f58:	mov	x2, x20
   25f5c:	mov	x1, x19
   25f60:	ldr	x0, [sp, #120]
   25f64:	bl	1b3d4 <PyInit__decimal@@Base+0x1234>
   25f68:	mov	w0, #0x1                   	// #1
   25f6c:	ldp	x25, x26, [sp, #64]
   25f70:	ldp	x27, x28, [sp, #80]
   25f74:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25f78:	ldp	x25, x26, [sp, #64]
   25f7c:	ldp	x27, x28, [sp, #80]
   25f80:	b	25ca4 <PyInit__decimal@@Base+0xbb04>
   25f84:	cmp	x0, x1
   25f88:	b.hi	25f94 <PyInit__decimal@@Base+0xbdf4>  // b.pmore
   25f8c:	mov	x0, #0x0                   	// #0
   25f90:	ret
   25f94:	stp	x29, x30, [sp, #-32]!
   25f98:	mov	x29, sp
   25f9c:	str	x19, [sp, #16]
   25fa0:	add	x0, x0, #0x1
   25fa4:	lsr	x0, x0, #1
   25fa8:	add	x0, x0, #0x1
   25fac:	lsl	x19, x0, #1
   25fb0:	tbnz	x0, #63, 25fd4 <PyInit__decimal@@Base+0xbe34>
   25fb4:	bl	25f84 <PyInit__decimal@@Base+0xbde4>
   25fb8:	mvn	x1, x0
   25fbc:	add	x0, x0, x19
   25fc0:	cmp	x1, x19
   25fc4:	b.cc	26020 <PyInit__decimal@@Base+0xbe80>  // b.lo, b.ul, b.last
   25fc8:	ldr	x19, [sp, #16]
   25fcc:	ldp	x29, x30, [sp], #32
   25fd0:	ret
   25fd4:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   25fd8:	ldr	x19, [x19, #3904]
   25fdc:	mov	w3, #0x26c                 	// #620
   25fe0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   25fe4:	add	x2, x2, #0xc68
   25fe8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   25fec:	add	x1, x1, #0xca8
   25ff0:	ldr	x0, [x19]
   25ff4:	bl	6a70 <fprintf@plt>
   25ff8:	ldr	x3, [x19]
   25ffc:	mov	x2, #0x29                  	// #41
   26000:	mov	x1, #0x1                   	// #1
   26004:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   26008:	add	x0, x0, #0x328
   2600c:	bl	6930 <fwrite@plt>
   26010:	ldr	x1, [x19]
   26014:	mov	w0, #0xa                   	// #10
   26018:	bl	65b0 <fputc@plt>
   2601c:	bl	67c0 <abort@plt>
   26020:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   26024:	ldr	x19, [x19, #3904]
   26028:	mov	w3, #0x253                 	// #595
   2602c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26030:	add	x2, x2, #0xc68
   26034:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   26038:	add	x1, x1, #0xca8
   2603c:	ldr	x0, [x19]
   26040:	bl	6a70 <fprintf@plt>
   26044:	ldr	x3, [x19]
   26048:	mov	x2, #0x29                  	// #41
   2604c:	mov	x1, #0x1                   	// #1
   26050:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   26054:	add	x0, x0, #0x2f8
   26058:	bl	6930 <fwrite@plt>
   2605c:	ldr	x1, [x19]
   26060:	mov	w0, #0xa                   	// #10
   26064:	bl	65b0 <fputc@plt>
   26068:	bl	67c0 <abort@plt>
   2606c:	ldrb	w4, [x0]
   26070:	and	w4, w4, #0xfffffff0
   26074:	orr	w1, w1, w4
   26078:	strb	w1, [x0]
   2607c:	str	x3, [x0, #8]
   26080:	ldr	x4, [x0, #40]
   26084:	mov	x3, #0x89e80000            	// #2313682944
   26088:	movk	x3, #0x2304, lsl #32
   2608c:	movk	x3, #0x8ac7, lsl #48
   26090:	cmp	x2, x3
   26094:	cset	x1, cs  // cs = hs, nlast
   26098:	str	x1, [x4, #8]
   2609c:	msub	x2, x1, x3, x2
   260a0:	str	x2, [x4]
   260a4:	ldr	x2, [x0, #40]
   260a8:	ldr	x1, [x2, #8]
   260ac:	cmp	x1, #0x0
   260b0:	cset	x1, ne  // ne = any
   260b4:	add	x1, x1, #0x1
   260b8:	str	x1, [x0, #24]
   260bc:	add	x2, x2, x1, lsl #3
   260c0:	ldur	x2, [x2, #-8]
   260c4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   260c8:	ldr	x3, [x3, #3584]
   260cc:	cmp	x2, x3
   260d0:	b.cs	26190 <PyInit__decimal@@Base+0xbff0>  // b.hs, b.nlast
   260d4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   260d8:	ldr	x3, [x3, #3544]
   260dc:	cmp	x2, x3
   260e0:	b.cs	2613c <PyInit__decimal@@Base+0xbf9c>  // b.hs, b.nlast
   260e4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   260e8:	ldr	x3, [x3, #3528]
   260ec:	cmp	x2, x3
   260f0:	b.cs	26124 <PyInit__decimal@@Base+0xbf84>  // b.hs, b.nlast
   260f4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   260f8:	ldr	x3, [x3, #3520]
   260fc:	cmp	x2, x3
   26100:	cset	w3, cs  // cs = hs, nlast
   26104:	add	w3, w3, #0x1
   26108:	sub	x1, x1, #0x1
   2610c:	add	x2, x1, x1, lsl #2
   26110:	lsl	x2, x2, #2
   26114:	sub	x1, x2, x1
   26118:	add	x1, x1, w3, sxtw
   2611c:	str	x1, [x0, #16]
   26120:	ret
   26124:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26128:	ldr	x3, [x3, #3536]
   2612c:	cmp	x2, x3
   26130:	cset	w3, cs  // cs = hs, nlast
   26134:	add	w3, w3, #0x3
   26138:	b	26108 <PyInit__decimal@@Base+0xbf68>
   2613c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26140:	ldr	x3, [x3, #3560]
   26144:	cmp	x2, x3
   26148:	b.cc	26178 <PyInit__decimal@@Base+0xbfd8>  // b.lo, b.ul, b.last
   2614c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26150:	ldr	x4, [x3, #3576]
   26154:	mov	w3, #0x9                   	// #9
   26158:	cmp	x2, x4
   2615c:	b.cs	26108 <PyInit__decimal@@Base+0xbf68>  // b.hs, b.nlast
   26160:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26164:	ldr	x3, [x3, #3568]
   26168:	cmp	x2, x3
   2616c:	cset	w3, cs  // cs = hs, nlast
   26170:	add	w3, w3, #0x7
   26174:	b	26108 <PyInit__decimal@@Base+0xbf68>
   26178:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   2617c:	ldr	x3, [x3, #3552]
   26180:	cmp	x2, x3
   26184:	cset	w3, cs  // cs = hs, nlast
   26188:	add	w3, w3, #0x5
   2618c:	b	26108 <PyInit__decimal@@Base+0xbf68>
   26190:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26194:	ldr	x3, [x3, #3624]
   26198:	cmp	x2, x3
   2619c:	b.cs	261f4 <PyInit__decimal@@Base+0xc054>  // b.hs, b.nlast
   261a0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   261a4:	ldr	x3, [x3, #3600]
   261a8:	cmp	x2, x3
   261ac:	b.cc	261dc <PyInit__decimal@@Base+0xc03c>  // b.lo, b.ul, b.last
   261b0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   261b4:	ldr	x4, [x3, #3616]
   261b8:	mov	w3, #0xe                   	// #14
   261bc:	cmp	x2, x4
   261c0:	b.cs	26108 <PyInit__decimal@@Base+0xbf68>  // b.hs, b.nlast
   261c4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   261c8:	ldr	x3, [x3, #3608]
   261cc:	cmp	x2, x3
   261d0:	cset	w3, cs  // cs = hs, nlast
   261d4:	add	w3, w3, #0xc
   261d8:	b	26108 <PyInit__decimal@@Base+0xbf68>
   261dc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   261e0:	ldr	x3, [x3, #3592]
   261e4:	cmp	x2, x3
   261e8:	cset	w3, cs  // cs = hs, nlast
   261ec:	add	w3, w3, #0xa
   261f0:	b	26108 <PyInit__decimal@@Base+0xbf68>
   261f4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   261f8:	ldr	x3, [x3, #3656]
   261fc:	cmp	x2, x3
   26200:	b.cs	26244 <PyInit__decimal@@Base+0xc0a4>  // b.hs, b.nlast
   26204:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26208:	ldr	x3, [x3, #3640]
   2620c:	cmp	x2, x3
   26210:	b.cs	2622c <PyInit__decimal@@Base+0xc08c>  // b.hs, b.nlast
   26214:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26218:	ldr	x3, [x3, #3632]
   2621c:	cmp	x2, x3
   26220:	cset	w3, cs  // cs = hs, nlast
   26224:	add	w3, w3, #0xf
   26228:	b	26108 <PyInit__decimal@@Base+0xbf68>
   2622c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26230:	ldr	x3, [x3, #3648]
   26234:	cmp	x2, x3
   26238:	cset	w3, cs  // cs = hs, nlast
   2623c:	add	w3, w3, #0x11
   26240:	b	26108 <PyInit__decimal@@Base+0xbf68>
   26244:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   26248:	ldr	x3, [x3, #3664]
   2624c:	cmp	x2, x3
   26250:	cset	w3, cs  // cs = hs, nlast
   26254:	add	w3, w3, #0x13
   26258:	b	26108 <PyInit__decimal@@Base+0xbf68>
   2625c:	mov	x5, #0x435f                	// #17247
   26260:	movk	x5, #0xd79, lsl #16
   26264:	movk	x5, #0x35e5, lsl #32
   26268:	movk	x5, #0xd794, lsl #48
   2626c:	umulh	x5, x4, x5
   26270:	lsr	x5, x5, #4
   26274:	add	x9, x5, x5, lsl #2
   26278:	lsl	x9, x9, #2
   2627c:	sub	x9, x9, x5
   26280:	add	x10, x0, x5, lsl #3
   26284:	subs	x9, x4, x9
   26288:	b.ne	262b4 <PyInit__decimal@@Base+0xc114>  // b.any
   2628c:	sub	x3, x3, #0x1
   26290:	cmn	x3, #0x1
   26294:	b.eq	26afc <PyInit__decimal@@Base+0xc95c>  // b.none
   26298:	ldr	x4, [x10, x3, lsl #3]
   2629c:	ldr	x2, [x1, x3, lsl #3]
   262a0:	cmp	x4, x2
   262a4:	b.eq	2628c <PyInit__decimal@@Base+0xc0ec>  // b.none
   262a8:	mov	w0, #0x1                   	// #1
   262ac:	cneg	w0, w0, cc  // cc = lo, ul, last
   262b0:	ret
   262b4:	sub	x11, x2, #0x1
   262b8:	sub	x4, x3, #0x1
   262bc:	ldr	x10, [x1, x4, lsl #3]
   262c0:	mov	x4, #0x13                  	// #19
   262c4:	sub	x4, x4, x9
   262c8:	cmp	x4, #0x9
   262cc:	b.hi	2649c <PyInit__decimal@@Base+0xc2fc>  // b.pmore
   262d0:	cmp	x4, #0x4
   262d4:	b.hi	263a8 <PyInit__decimal@@Base+0xc208>  // b.pmore
   262d8:	cmp	x4, #0x2
   262dc:	b.eq	2634c <PyInit__decimal@@Base+0xc1ac>  // b.none
   262e0:	b.hi	26320 <PyInit__decimal@@Base+0xc180>  // b.pmore
   262e4:	cmp	x4, #0x1
   262e8:	b.ne	26304 <PyInit__decimal@@Base+0xc164>  // b.any
   262ec:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   262f0:	movk	x6, #0xcccd
   262f4:	umulh	x6, x10, x6
   262f8:	lsr	x6, x6, #3
   262fc:	add	x7, x6, x6, lsl #2
   26300:	sub	x7, x10, x7, lsl #1
   26304:	cbz	x6, 2667c <PyInit__decimal@@Base+0xc4dc>
   26308:	ldr	x10, [x0, x11, lsl #3]
   2630c:	cmp	x10, x6
   26310:	b.eq	26678 <PyInit__decimal@@Base+0xc4d8>  // b.none
   26314:	mov	w0, #0x1                   	// #1
   26318:	cneg	w0, w0, cc  // cc = lo, ul, last
   2631c:	ret
   26320:	cmp	x4, #0x3
   26324:	b.eq	26378 <PyInit__decimal@@Base+0xc1d8>  // b.none
   26328:	mov	x6, #0x594b                	// #22859
   2632c:	movk	x6, #0x3886, lsl #16
   26330:	movk	x6, #0xc5d6, lsl #32
   26334:	movk	x6, #0x346d, lsl #48
   26338:	umulh	x6, x10, x6
   2633c:	lsr	x6, x6, #11
   26340:	mov	x7, #0x2710                	// #10000
   26344:	msub	x7, x6, x7, x10
   26348:	b	26304 <PyInit__decimal@@Base+0xc164>
   2634c:	lsr	x6, x10, #2
   26350:	mov	x7, #0xf5c3                	// #62915
   26354:	movk	x7, #0x5c28, lsl #16
   26358:	movk	x7, #0xc28f, lsl #32
   2635c:	movk	x7, #0x28f5, lsl #48
   26360:	umulh	x6, x6, x7
   26364:	lsr	x6, x6, #2
   26368:	add	x7, x6, x6, lsl #1
   2636c:	add	x7, x6, x7, lsl #3
   26370:	sub	x7, x10, x7, lsl #2
   26374:	b	26304 <PyInit__decimal@@Base+0xc164>
   26378:	lsr	x6, x10, #3
   2637c:	mov	x7, #0xf7cf                	// #63439
   26380:	movk	x7, #0xe353, lsl #16
   26384:	movk	x7, #0x9ba5, lsl #32
   26388:	movk	x7, #0x20c4, lsl #48
   2638c:	umulh	x6, x6, x7
   26390:	lsr	x6, x6, #4
   26394:	lsl	x7, x6, #5
   26398:	sub	x7, x7, x6
   2639c:	add	x7, x6, x7, lsl #2
   263a0:	sub	x7, x10, x7, lsl #3
   263a4:	b	26304 <PyInit__decimal@@Base+0xc164>
   263a8:	cmp	x4, #0x7
   263ac:	b.eq	2644c <PyInit__decimal@@Base+0xc2ac>  // b.none
   263b0:	b.hi	263ec <PyInit__decimal@@Base+0xc24c>  // b.pmore
   263b4:	cmp	x4, #0x5
   263b8:	b.eq	26420 <PyInit__decimal@@Base+0xc280>  // b.none
   263bc:	cmp	x4, #0x6
   263c0:	b.ne	26304 <PyInit__decimal@@Base+0xc164>  // b.any
   263c4:	mov	x6, #0x34db                	// #13531
   263c8:	movk	x6, #0xd7b6, lsl #16
   263cc:	movk	x6, #0xde82, lsl #32
   263d0:	movk	x6, #0x431b, lsl #48
   263d4:	umulh	x6, x10, x6
   263d8:	lsr	x6, x6, #18
   263dc:	mov	x7, #0x4240                	// #16960
   263e0:	movk	x7, #0xf, lsl #16
   263e4:	msub	x7, x6, x7, x10
   263e8:	b	26304 <PyInit__decimal@@Base+0xc164>
   263ec:	cmp	x4, #0x8
   263f0:	b.eq	26474 <PyInit__decimal@@Base+0xc2d4>  // b.none
   263f4:	lsr	x6, x10, #9
   263f8:	mov	x7, #0x5a53                	// #23123
   263fc:	movk	x7, #0xa09b, lsl #16
   26400:	movk	x7, #0xb82f, lsl #32
   26404:	movk	x7, #0x44, lsl #48
   26408:	umulh	x6, x6, x7
   2640c:	lsr	x6, x6, #11
   26410:	mov	x7, #0xca00                	// #51712
   26414:	movk	x7, #0x3b9a, lsl #16
   26418:	msub	x7, x6, x7, x10
   2641c:	b	26304 <PyInit__decimal@@Base+0xc164>
   26420:	lsr	x6, x10, #5
   26424:	mov	x7, #0x7843                	// #30787
   26428:	movk	x7, #0x71b4, lsl #16
   2642c:	movk	x7, #0x5ac4, lsl #32
   26430:	movk	x7, #0xa7c, lsl #48
   26434:	umulh	x6, x6, x7
   26438:	lsr	x6, x6, #7
   2643c:	mov	x7, #0x86a0                	// #34464
   26440:	movk	x7, #0x1, lsl #16
   26444:	msub	x7, x6, x7, x10
   26448:	b	26304 <PyInit__decimal@@Base+0xc164>
   2644c:	mov	x6, #0x42bd                	// #17085
   26450:	movk	x6, #0xe57a, lsl #16
   26454:	movk	x6, #0x94d5, lsl #32
   26458:	movk	x6, #0xd6bf, lsl #48
   2645c:	umulh	x6, x10, x6
   26460:	lsr	x6, x6, #23
   26464:	mov	x7, #0x9680                	// #38528
   26468:	movk	x7, #0x98, lsl #16
   2646c:	msub	x7, x6, x7, x10
   26470:	b	26304 <PyInit__decimal@@Base+0xc164>
   26474:	mov	x6, #0xcefd                	// #52989
   26478:	movk	x6, #0x8461, lsl #16
   2647c:	movk	x6, #0x7711, lsl #32
   26480:	movk	x6, #0xabcc, lsl #48
   26484:	umulh	x6, x10, x6
   26488:	lsr	x6, x6, #26
   2648c:	mov	x7, #0xe100                	// #57600
   26490:	movk	x7, #0x5f5, lsl #16
   26494:	msub	x7, x6, x7, x10
   26498:	b	26304 <PyInit__decimal@@Base+0xc164>
   2649c:	cmp	x4, #0xe
   264a0:	b.hi	265a4 <PyInit__decimal@@Base+0xc404>  // b.pmore
   264a4:	cmp	x4, #0xc
   264a8:	b.eq	2654c <PyInit__decimal@@Base+0xc3ac>  // b.none
   264ac:	b.hi	264ec <PyInit__decimal@@Base+0xc34c>  // b.pmore
   264b0:	cmp	x4, #0xa
   264b4:	b.eq	26520 <PyInit__decimal@@Base+0xc380>  // b.none
   264b8:	cmp	x4, #0xb
   264bc:	b.ne	26304 <PyInit__decimal@@Base+0xc164>  // b.any
   264c0:	mov	x6, #0xaaff                	// #43775
   264c4:	movk	x6, #0xcb24, lsl #16
   264c8:	movk	x6, #0xff0b, lsl #32
   264cc:	movk	x6, #0xafeb, lsl #48
   264d0:	umulh	x6, x10, x6
   264d4:	lsr	x6, x6, #36
   264d8:	mov	x7, #0xe800                	// #59392
   264dc:	movk	x7, #0x4876, lsl #16
   264e0:	movk	x7, #0x17, lsl #32
   264e4:	msub	x7, x6, x7, x10
   264e8:	b	26304 <PyInit__decimal@@Base+0xc164>
   264ec:	cmp	x4, #0xd
   264f0:	b.eq	26578 <PyInit__decimal@@Base+0xc3d8>  // b.none
   264f4:	mov	x6, #0xcd81                	// #52609
   264f8:	movk	x6, #0x5095, lsl #16
   264fc:	movk	x6, #0x4dc3, lsl #32
   26500:	movk	x6, #0xb42, lsl #48
   26504:	umulh	x6, x10, x6
   26508:	lsr	x6, x6, #42
   2650c:	mov	x7, #0x4000                	// #16384
   26510:	movk	x7, #0x107a, lsl #16
   26514:	movk	x7, #0x5af3, lsl #32
   26518:	msub	x7, x6, x7, x10
   2651c:	b	26304 <PyInit__decimal@@Base+0xc164>
   26520:	mov	x6, #0xd5bf                	// #54719
   26524:	movk	x6, #0xbded, lsl #16
   26528:	movk	x6, #0xfece, lsl #32
   2652c:	movk	x6, #0xdbe6, lsl #48
   26530:	umulh	x6, x10, x6
   26534:	lsr	x6, x6, #33
   26538:	mov	x7, #0xe400                	// #58368
   2653c:	movk	x7, #0x540b, lsl #16
   26540:	movk	x7, #0x2, lsl #32
   26544:	msub	x7, x6, x7, x10
   26548:	b	26304 <PyInit__decimal@@Base+0xc164>
   2654c:	mov	x6, #0x2233                	// #8755
   26550:	movk	x6, #0x5bd4, lsl #16
   26554:	movk	x6, #0x3302, lsl #32
   26558:	movk	x6, #0x232f, lsl #48
   2655c:	umulh	x6, x10, x6
   26560:	lsr	x6, x6, #37
   26564:	mov	x7, #0x1000                	// #4096
   26568:	movk	x7, #0xd4a5, lsl #16
   2656c:	movk	x7, #0xe8, lsl #32
   26570:	msub	x7, x6, x7, x10
   26574:	b	26304 <PyInit__decimal@@Base+0xc164>
   26578:	mov	x6, #0x385                 	// #901
   2657c:	movk	x6, #0x92ed, lsl #16
   26580:	movk	x6, #0x84d0, lsl #32
   26584:	movk	x6, #0x384b, lsl #48
   26588:	umulh	x6, x10, x6
   2658c:	lsr	x6, x6, #41
   26590:	mov	x7, #0xa000                	// #40960
   26594:	movk	x7, #0x4e72, lsl #16
   26598:	movk	x7, #0x918, lsl #32
   2659c:	msub	x7, x6, x7, x10
   265a0:	b	26304 <PyInit__decimal@@Base+0xc164>
   265a4:	cmp	x4, #0x11
   265a8:	b.eq	26620 <PyInit__decimal@@Base+0xc480>  // b.none
   265ac:	b.hi	2664c <PyInit__decimal@@Base+0xc4ac>  // b.pmore
   265b0:	cmp	x4, #0xf
   265b4:	b.eq	265ec <PyInit__decimal@@Base+0xc44c>  // b.none
   265b8:	cmp	x4, #0x10
   265bc:	b.ne	26304 <PyInit__decimal@@Base+0xc164>  // b.any
   265c0:	mov	x6, #0x7857                	// #30807
   265c4:	movk	x6, #0xb113, lsl #16
   265c8:	movk	x6, #0x652f, lsl #32
   265cc:	movk	x6, #0x39a5, lsl #48
   265d0:	umulh	x6, x10, x6
   265d4:	lsr	x6, x6, #51
   265d8:	mov	x7, #0x6fc10000            	// #1874919424
   265dc:	movk	x7, #0x86f2, lsl #32
   265e0:	movk	x7, #0x23, lsl #48
   265e4:	msub	x7, x6, x7, x10
   265e8:	b	26304 <PyInit__decimal@@Base+0xc164>
   265ec:	lsr	x6, x10, #15
   265f0:	mov	x7, #0xeac3                	// #60099
   265f4:	movk	x7, #0xf3dc, lsl #16
   265f8:	movk	x7, #0x4075, lsl #32
   265fc:	movk	x7, #0x2, lsl #48
   26600:	umulh	x6, x6, x7
   26604:	lsr	x6, x6, #20
   26608:	mov	x7, #0x8000                	// #32768
   2660c:	movk	x7, #0xa4c6, lsl #16
   26610:	movk	x7, #0x8d7e, lsl #32
   26614:	movk	x7, #0x3, lsl #48
   26618:	msub	x7, x6, x7, x10
   2661c:	b	26304 <PyInit__decimal@@Base+0xc164>
   26620:	lsr	x6, x10, #17
   26624:	mov	x7, #0x1b53                	// #6995
   26628:	movk	x7, #0xd519, lsl #16
   2662c:	movk	x7, #0x5c3b, lsl #32
   26630:	umulh	x6, x6, x7
   26634:	lsr	x6, x6, #22
   26638:	mov	x7, #0x5d8a0000            	// #1569325056
   2663c:	movk	x7, #0x4578, lsl #32
   26640:	movk	x7, #0x163, lsl #48
   26644:	msub	x7, x6, x7, x10
   26648:	b	26304 <PyInit__decimal@@Base+0xc164>
   2664c:	lsr	x6, x10, #18
   26650:	mov	x7, #0x490f                	// #18703
   26654:	movk	x7, #0x7747, lsl #16
   26658:	movk	x7, #0x49c9, lsl #32
   2665c:	umulh	x6, x6, x7
   26660:	lsr	x6, x6, #24
   26664:	mov	x7, #0xa7640000            	// #2808348672
   26668:	movk	x7, #0xb6b3, lsl #32
   2666c:	movk	x7, #0xde0, lsl #48
   26670:	msub	x7, x6, x7, x10
   26674:	b	26304 <PyInit__decimal@@Base+0xc164>
   26678:	sub	x11, x2, #0x2
   2667c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26680:	add	x2, x2, #0xdb8
   26684:	ldr	x10, [x2, x9, lsl #3]
   26688:	sub	x2, x3, #0x2
   2668c:	cmp	x3, #0x1
   26690:	b.eq	26ae0 <PyInit__decimal@@Base+0xc940>  // b.none
   26694:	stp	x29, x30, [sp, #-96]!
   26698:	mov	x29, sp
   2669c:	stp	x19, x20, [sp, #16]
   266a0:	stp	x21, x22, [sp, #32]
   266a4:	stp	x23, x24, [sp, #48]
   266a8:	stp	x25, x26, [sp, #64]
   266ac:	stp	x27, x28, [sp, #80]
   266b0:	neg	x3, x3, lsl #3
   266b4:	add	x3, x3, x11, lsl #3
   266b8:	add	x9, x3, #0x10
   266bc:	add	x9, x0, x9
   266c0:	mov	x28, #0x1b53                	// #6995
   266c4:	movk	x28, #0xd519, lsl #16
   266c8:	movk	x28, #0x5c3b, lsl #32
   266cc:	mov	x27, #0x5d8a0000            	// #1569325056
   266d0:	movk	x27, #0x4578, lsl #32
   266d4:	movk	x27, #0x163, lsl #48
   266d8:	mov	x26, #0x490f                	// #18703
   266dc:	movk	x26, #0x7747, lsl #16
   266e0:	movk	x26, #0x49c9, lsl #32
   266e4:	mov	x25, #0xa7640000            	// #2808348672
   266e8:	movk	x25, #0xb6b3, lsl #32
   266ec:	movk	x25, #0xde0, lsl #48
   266f0:	mov	x24, #0xeac3                	// #60099
   266f4:	movk	x24, #0xf3dc, lsl #16
   266f8:	movk	x24, #0x4075, lsl #32
   266fc:	movk	x24, #0x2, lsl #48
   26700:	mov	x23, #0x8000                	// #32768
   26704:	movk	x23, #0xa4c6, lsl #16
   26708:	movk	x23, #0x8d7e, lsl #32
   2670c:	movk	x23, #0x3, lsl #48
   26710:	mov	x22, #0x7857                	// #30807
   26714:	movk	x22, #0xb113, lsl #16
   26718:	movk	x22, #0x652f, lsl #32
   2671c:	movk	x22, #0x39a5, lsl #48
   26720:	mov	x21, #0x6fc10000            	// #1874919424
   26724:	movk	x21, #0x86f2, lsl #32
   26728:	movk	x21, #0x23, lsl #48
   2672c:	mov	x20, #0x2233                	// #8755
   26730:	movk	x20, #0x5bd4, lsl #16
   26734:	movk	x20, #0x3302, lsl #32
   26738:	movk	x20, #0x232f, lsl #48
   2673c:	mov	x19, #0x1000                	// #4096
   26740:	movk	x19, #0xd4a5, lsl #16
   26744:	movk	x19, #0xe8, lsl #32
   26748:	mov	x30, #0xcd81                	// #52609
   2674c:	movk	x30, #0x5095, lsl #16
   26750:	movk	x30, #0x4dc3, lsl #32
   26754:	movk	x30, #0xb42, lsl #48
   26758:	mov	x18, #0x4000                	// #16384
   2675c:	movk	x18, #0x107a, lsl #16
   26760:	movk	x18, #0x5af3, lsl #32
   26764:	mov	x17, #0x385                 	// #901
   26768:	movk	x17, #0x92ed, lsl #16
   2676c:	movk	x17, #0x84d0, lsl #32
   26770:	movk	x17, #0x384b, lsl #48
   26774:	mov	x16, #0xa000                	// #40960
   26778:	movk	x16, #0x4e72, lsl #16
   2677c:	movk	x16, #0x918, lsl #32
   26780:	mov	x15, #0xd5bf                	// #54719
   26784:	movk	x15, #0xbded, lsl #16
   26788:	movk	x15, #0xfece, lsl #32
   2678c:	movk	x15, #0xdbe6, lsl #48
   26790:	mov	x14, #0xe400                	// #58368
   26794:	movk	x14, #0x540b, lsl #16
   26798:	movk	x14, #0x2, lsl #32
   2679c:	mov	x13, #0xaaff                	// #43775
   267a0:	movk	x13, #0xcb24, lsl #16
   267a4:	movk	x13, #0xff0b, lsl #32
   267a8:	movk	x13, #0xafeb, lsl #48
   267ac:	mov	x12, #0x42bd                	// #17085
   267b0:	movk	x12, #0xe57a, lsl #16
   267b4:	movk	x12, #0x94d5, lsl #32
   267b8:	movk	x12, #0xd6bf, lsl #48
   267bc:	mov	x11, #0x5a53                	// #23123
   267c0:	movk	x11, #0xa09b, lsl #16
   267c4:	movk	x11, #0xb82f, lsl #32
   267c8:	movk	x11, #0x44, lsl #48
   267cc:	b	26810 <PyInit__decimal@@Base+0xc670>
   267d0:	cmp	x4, #0x1
   267d4:	b.ne	267f0 <PyInit__decimal@@Base+0xc650>  // b.any
   267d8:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   267dc:	movk	x6, #0xcccd
   267e0:	umulh	x6, x3, x6
   267e4:	lsr	x6, x6, #3
   267e8:	add	x8, x6, x6, lsl #2
   267ec:	sub	x8, x3, x8, lsl #1
   267f0:	madd	x7, x10, x7, x6
   267f4:	ldr	x3, [x9, x2, lsl #3]
   267f8:	cmp	x3, x7
   267fc:	b.ne	26a7c <PyInit__decimal@@Base+0xc8dc>  // b.any
   26800:	sub	x2, x2, #0x1
   26804:	cmn	x2, #0x1
   26808:	b.eq	26a88 <PyInit__decimal@@Base+0xc8e8>  // b.none
   2680c:	mov	x7, x8
   26810:	ldr	x3, [x1, x2, lsl #3]
   26814:	cmp	x4, #0x9
   26818:	b.hi	2698c <PyInit__decimal@@Base+0xc7ec>  // b.pmore
   2681c:	cmp	x4, #0x4
   26820:	b.hi	268b8 <PyInit__decimal@@Base+0xc718>  // b.pmore
   26824:	cmp	x4, #0x2
   26828:	b.eq	2685c <PyInit__decimal@@Base+0xc6bc>  // b.none
   2682c:	b.ls	267d0 <PyInit__decimal@@Base+0xc630>  // b.plast
   26830:	cmp	x4, #0x3
   26834:	b.eq	26888 <PyInit__decimal@@Base+0xc6e8>  // b.none
   26838:	mov	x6, #0x594b                	// #22859
   2683c:	movk	x6, #0x3886, lsl #16
   26840:	movk	x6, #0xc5d6, lsl #32
   26844:	movk	x6, #0x346d, lsl #48
   26848:	umulh	x6, x3, x6
   2684c:	lsr	x6, x6, #11
   26850:	mov	x8, #0x2710                	// #10000
   26854:	msub	x8, x6, x8, x3
   26858:	b	267f0 <PyInit__decimal@@Base+0xc650>
   2685c:	lsr	x6, x3, #2
   26860:	mov	x8, #0xf5c3                	// #62915
   26864:	movk	x8, #0x5c28, lsl #16
   26868:	movk	x8, #0xc28f, lsl #32
   2686c:	movk	x8, #0x28f5, lsl #48
   26870:	umulh	x6, x6, x8
   26874:	lsr	x6, x6, #2
   26878:	add	x8, x6, x6, lsl #1
   2687c:	add	x8, x6, x8, lsl #3
   26880:	sub	x8, x3, x8, lsl #2
   26884:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26888:	lsr	x6, x3, #3
   2688c:	mov	x8, #0xf7cf                	// #63439
   26890:	movk	x8, #0xe353, lsl #16
   26894:	movk	x8, #0x9ba5, lsl #32
   26898:	movk	x8, #0x20c4, lsl #48
   2689c:	umulh	x6, x6, x8
   268a0:	lsr	x6, x6, #4
   268a4:	lsl	x8, x6, #5
   268a8:	sub	x8, x8, x6
   268ac:	add	x8, x6, x8, lsl #2
   268b0:	sub	x8, x3, x8, lsl #3
   268b4:	b	267f0 <PyInit__decimal@@Base+0xc650>
   268b8:	cmp	x4, #0x7
   268bc:	b.eq	2694c <PyInit__decimal@@Base+0xc7ac>  // b.none
   268c0:	b.ls	268e8 <PyInit__decimal@@Base+0xc748>  // b.plast
   268c4:	cmp	x4, #0x8
   268c8:	b.eq	26964 <PyInit__decimal@@Base+0xc7c4>  // b.none
   268cc:	lsr	x6, x3, #9
   268d0:	umulh	x6, x6, x11
   268d4:	lsr	x6, x6, #11
   268d8:	mov	x8, #0xca00                	// #51712
   268dc:	movk	x8, #0x3b9a, lsl #16
   268e0:	msub	x8, x6, x8, x3
   268e4:	b	267f0 <PyInit__decimal@@Base+0xc650>
   268e8:	cmp	x4, #0x5
   268ec:	b.eq	26920 <PyInit__decimal@@Base+0xc780>  // b.none
   268f0:	cmp	x4, #0x6
   268f4:	b.ne	267f0 <PyInit__decimal@@Base+0xc650>  // b.any
   268f8:	mov	x6, #0x34db                	// #13531
   268fc:	movk	x6, #0xd7b6, lsl #16
   26900:	movk	x6, #0xde82, lsl #32
   26904:	movk	x6, #0x431b, lsl #48
   26908:	umulh	x6, x3, x6
   2690c:	lsr	x6, x6, #18
   26910:	mov	x8, #0x4240                	// #16960
   26914:	movk	x8, #0xf, lsl #16
   26918:	msub	x8, x6, x8, x3
   2691c:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26920:	lsr	x6, x3, #5
   26924:	mov	x8, #0x7843                	// #30787
   26928:	movk	x8, #0x71b4, lsl #16
   2692c:	movk	x8, #0x5ac4, lsl #32
   26930:	movk	x8, #0xa7c, lsl #48
   26934:	umulh	x6, x6, x8
   26938:	lsr	x6, x6, #7
   2693c:	mov	x8, #0x86a0                	// #34464
   26940:	movk	x8, #0x1, lsl #16
   26944:	msub	x8, x6, x8, x3
   26948:	b	267f0 <PyInit__decimal@@Base+0xc650>
   2694c:	umulh	x6, x3, x12
   26950:	lsr	x6, x6, #23
   26954:	mov	x8, #0x9680                	// #38528
   26958:	movk	x8, #0x98, lsl #16
   2695c:	msub	x8, x6, x8, x3
   26960:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26964:	mov	x6, #0xcefd                	// #52989
   26968:	movk	x6, #0x8461, lsl #16
   2696c:	movk	x6, #0x7711, lsl #32
   26970:	movk	x6, #0xabcc, lsl #48
   26974:	umulh	x6, x3, x6
   26978:	lsr	x6, x6, #26
   2697c:	mov	x8, #0xe100                	// #57600
   26980:	movk	x8, #0x5f5, lsl #16
   26984:	msub	x8, x6, x8, x3
   26988:	b	267f0 <PyInit__decimal@@Base+0xc650>
   2698c:	cmp	x4, #0xe
   26990:	b.hi	26a14 <PyInit__decimal@@Base+0xc874>  // b.pmore
   26994:	cmp	x4, #0xc
   26998:	b.eq	269f4 <PyInit__decimal@@Base+0xc854>  // b.none
   2699c:	b.ls	269b8 <PyInit__decimal@@Base+0xc818>  // b.plast
   269a0:	cmp	x4, #0xd
   269a4:	b.eq	26a04 <PyInit__decimal@@Base+0xc864>  // b.none
   269a8:	umulh	x6, x3, x30
   269ac:	lsr	x6, x6, #42
   269b0:	msub	x8, x6, x18, x3
   269b4:	b	267f0 <PyInit__decimal@@Base+0xc650>
   269b8:	cmp	x4, #0xa
   269bc:	b.eq	269e4 <PyInit__decimal@@Base+0xc844>  // b.none
   269c0:	cmp	x4, #0xb
   269c4:	b.ne	267f0 <PyInit__decimal@@Base+0xc650>  // b.any
   269c8:	umulh	x6, x3, x13
   269cc:	lsr	x6, x6, #36
   269d0:	mov	x8, #0xe800                	// #59392
   269d4:	movk	x8, #0x4876, lsl #16
   269d8:	movk	x8, #0x17, lsl #32
   269dc:	msub	x8, x6, x8, x3
   269e0:	b	267f0 <PyInit__decimal@@Base+0xc650>
   269e4:	umulh	x6, x3, x15
   269e8:	lsr	x6, x6, #33
   269ec:	msub	x8, x6, x14, x3
   269f0:	b	267f0 <PyInit__decimal@@Base+0xc650>
   269f4:	umulh	x6, x3, x20
   269f8:	lsr	x6, x6, #37
   269fc:	msub	x8, x6, x19, x3
   26a00:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a04:	umulh	x6, x3, x17
   26a08:	lsr	x6, x6, #41
   26a0c:	msub	x8, x6, x16, x3
   26a10:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a14:	cmp	x4, #0x11
   26a18:	b.eq	26a68 <PyInit__decimal@@Base+0xc8c8>  // b.none
   26a1c:	b.ls	26a34 <PyInit__decimal@@Base+0xc894>  // b.plast
   26a20:	lsr	x6, x3, #18
   26a24:	umulh	x6, x6, x26
   26a28:	lsr	x6, x6, #24
   26a2c:	msub	x8, x6, x25, x3
   26a30:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a34:	cmp	x4, #0xf
   26a38:	b.eq	26a54 <PyInit__decimal@@Base+0xc8b4>  // b.none
   26a3c:	cmp	x4, #0x10
   26a40:	b.ne	267f0 <PyInit__decimal@@Base+0xc650>  // b.any
   26a44:	umulh	x6, x3, x22
   26a48:	lsr	x6, x6, #51
   26a4c:	msub	x8, x6, x21, x3
   26a50:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a54:	lsr	x6, x3, #15
   26a58:	umulh	x6, x6, x24
   26a5c:	lsr	x6, x6, #20
   26a60:	msub	x8, x6, x23, x3
   26a64:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a68:	lsr	x6, x3, #17
   26a6c:	umulh	x6, x6, x28
   26a70:	lsr	x6, x6, #22
   26a74:	msub	x8, x6, x27, x3
   26a78:	b	267f0 <PyInit__decimal@@Base+0xc650>
   26a7c:	mov	w0, #0x1                   	// #1
   26a80:	cneg	w0, w0, cc  // cc = lo, ul, last
   26a84:	b	26ac4 <PyInit__decimal@@Base+0xc924>
   26a88:	mul	x8, x10, x8
   26a8c:	ldr	x1, [x0, x5, lsl #3]
   26a90:	cmp	x1, x8
   26a94:	b.eq	26aa4 <PyInit__decimal@@Base+0xc904>  // b.none
   26a98:	mov	w0, #0x1                   	// #1
   26a9c:	cneg	w0, w0, cc  // cc = lo, ul, last
   26aa0:	b	26ac4 <PyInit__decimal@@Base+0xc924>
   26aa4:	subs	x5, x5, #0x1
   26aa8:	b.mi	26abc <PyInit__decimal@@Base+0xc91c>  // b.first
   26aac:	ldr	x1, [x0, x5, lsl #3]
   26ab0:	cbz	x1, 26aa4 <PyInit__decimal@@Base+0xc904>
   26ab4:	mov	w0, #0x0                   	// #0
   26ab8:	b	26ac0 <PyInit__decimal@@Base+0xc920>
   26abc:	mov	w0, #0x1                   	// #1
   26ac0:	eor	w0, w0, #0x1
   26ac4:	ldp	x19, x20, [sp, #16]
   26ac8:	ldp	x21, x22, [sp, #32]
   26acc:	ldp	x23, x24, [sp, #48]
   26ad0:	ldp	x25, x26, [sp, #64]
   26ad4:	ldp	x27, x28, [sp, #80]
   26ad8:	ldp	x29, x30, [sp], #96
   26adc:	ret
   26ae0:	mul	x8, x10, x7
   26ae4:	ldr	x1, [x0, x5, lsl #3]
   26ae8:	cmp	x1, x8
   26aec:	b.eq	26afc <PyInit__decimal@@Base+0xc95c>  // b.none
   26af0:	mov	w0, #0x1                   	// #1
   26af4:	cneg	w0, w0, cc  // cc = lo, ul, last
   26af8:	ret
   26afc:	subs	x5, x5, #0x1
   26b00:	b.mi	26b14 <PyInit__decimal@@Base+0xc974>  // b.first
   26b04:	ldr	x1, [x0, x5, lsl #3]
   26b08:	cbz	x1, 26afc <PyInit__decimal@@Base+0xc95c>
   26b0c:	mov	w0, #0x0                   	// #0
   26b10:	b	26b18 <PyInit__decimal@@Base+0xc978>
   26b14:	mov	w0, #0x1                   	// #1
   26b18:	eor	w0, w0, #0x1
   26b1c:	ret
   26b20:	mov	x5, x1
   26b24:	ldr	x1, [x0, #8]
   26b28:	ldr	x2, [x5, #8]
   26b2c:	cmp	x1, x2
   26b30:	b.eq	26b84 <PyInit__decimal@@Base+0xc9e4>  // b.none
   26b34:	stp	x29, x30, [sp, #-16]!
   26b38:	mov	x29, sp
   26b3c:	sub	x4, x1, x2
   26b40:	cmp	x4, #0x0
   26b44:	b.le	26b68 <PyInit__decimal@@Base+0xc9c8>
   26b48:	ldr	x3, [x0, #24]
   26b4c:	ldr	x2, [x5, #24]
   26b50:	ldr	x1, [x0, #40]
   26b54:	ldr	x0, [x5, #40]
   26b58:	bl	2625c <PyInit__decimal@@Base+0xc0bc>
   26b5c:	neg	w0, w0
   26b60:	ldp	x29, x30, [sp], #16
   26b64:	ret
   26b68:	sub	x4, x2, x1
   26b6c:	ldr	x3, [x5, #24]
   26b70:	ldr	x2, [x0, #24]
   26b74:	ldr	x1, [x5, #40]
   26b78:	ldr	x0, [x0, #40]
   26b7c:	bl	2625c <PyInit__decimal@@Base+0xc0bc>
   26b80:	b	26b60 <PyInit__decimal@@Base+0xc9c0>
   26b84:	ldr	x2, [x0, #24]
   26b88:	subs	x2, x2, #0x1
   26b8c:	b.mi	26bc8 <PyInit__decimal@@Base+0xca28>  // b.first
   26b90:	ldr	x4, [x0, #40]
   26b94:	ldr	x0, [x5, #40]
   26b98:	ldr	x3, [x4, x2, lsl #3]
   26b9c:	ldr	x1, [x0, x2, lsl #3]
   26ba0:	cmp	x3, x1
   26ba4:	b.ne	26bbc <PyInit__decimal@@Base+0xca1c>  // b.any
   26ba8:	sub	x2, x2, #0x1
   26bac:	cmn	x2, #0x1
   26bb0:	b.ne	26b98 <PyInit__decimal@@Base+0xc9f8>  // b.any
   26bb4:	mov	w0, #0x0                   	// #0
   26bb8:	ret
   26bbc:	mov	w0, #0x1                   	// #1
   26bc0:	cneg	w0, w0, cc  // cc = lo, ul, last
   26bc4:	ret
   26bc8:	mov	w0, #0x0                   	// #0
   26bcc:	ret
   26bd0:	cmp	x0, x1
   26bd4:	b.eq	26c94 <PyInit__decimal@@Base+0xcaf4>  // b.none
   26bd8:	mov	x2, x0
   26bdc:	ldrb	w0, [x0]
   26be0:	tbz	w0, #1, 26bf4 <PyInit__decimal@@Base+0xca54>
   26be4:	ldrb	w0, [x1]
   26be8:	eor	x0, x0, #0x2
   26bec:	ubfx	x0, x0, #1, #1
   26bf0:	ret
   26bf4:	ldrb	w0, [x1]
   26bf8:	tbnz	w0, #1, 26c9c <PyInit__decimal@@Base+0xcafc>
   26bfc:	ldr	x0, [x2, #24]
   26c00:	ldr	x3, [x2, #40]
   26c04:	add	x0, x3, x0, lsl #3
   26c08:	ldur	x0, [x0, #-8]
   26c0c:	cbnz	x0, 26c2c <PyInit__decimal@@Base+0xca8c>
   26c10:	ldr	x0, [x1, #24]
   26c14:	ldr	x1, [x1, #40]
   26c18:	add	x0, x1, x0, lsl #3
   26c1c:	ldur	x0, [x0, #-8]
   26c20:	cmp	x0, #0x0
   26c24:	csetm	w0, ne  // ne = any
   26c28:	ret
   26c2c:	ldr	x0, [x1, #24]
   26c30:	ldr	x3, [x1, #40]
   26c34:	add	x0, x3, x0, lsl #3
   26c38:	ldur	x3, [x0, #-8]
   26c3c:	mov	w0, #0x1                   	// #1
   26c40:	cbz	x3, 26ca4 <PyInit__decimal@@Base+0xcb04>
   26c44:	ldr	x0, [x2, #8]
   26c48:	ldr	x3, [x2, #16]
   26c4c:	add	x0, x0, x3
   26c50:	sub	x5, x0, #0x1
   26c54:	ldr	x3, [x1, #8]
   26c58:	ldr	x4, [x1, #16]
   26c5c:	add	x3, x3, x4
   26c60:	sub	x4, x3, #0x1
   26c64:	cmp	x3, x0
   26c68:	b.eq	26c7c <PyInit__decimal@@Base+0xcadc>  // b.none
   26c6c:	mov	w0, #0x1                   	// #1
   26c70:	cmp	x4, x5
   26c74:	cneg	w0, w0, gt
   26c78:	ret
   26c7c:	stp	x29, x30, [sp, #-16]!
   26c80:	mov	x29, sp
   26c84:	mov	x0, x2
   26c88:	bl	26b20 <PyInit__decimal@@Base+0xc980>
   26c8c:	ldp	x29, x30, [sp], #16
   26c90:	ret
   26c94:	mov	w0, #0x0                   	// #0
   26c98:	ret
   26c9c:	mov	w0, #0xffffffff            	// #-1
   26ca0:	ret
   26ca4:	ret
   26ca8:	cmp	x0, x1
   26cac:	b.eq	26dd0 <PyInit__decimal@@Base+0xcc30>  // b.none
   26cb0:	ldrb	w2, [x0]
   26cb4:	tbz	w2, #1, 26ce0 <PyInit__decimal@@Base+0xcb40>
   26cb8:	ldrb	w0, [x1]
   26cbc:	tbz	w0, #1, 26cd0 <PyInit__decimal@@Base+0xcb30>
   26cc0:	and	w0, w0, #0x1
   26cc4:	and	w2, w2, #0x1
   26cc8:	sub	w0, w0, w2
   26ccc:	ret
   26cd0:	sbfx	x0, x2, #0, #1
   26cd4:	lsl	w0, w0, #1
   26cd8:	add	w0, w0, #0x1
   26cdc:	ret
   26ce0:	ldrb	w3, [x1]
   26ce4:	tbnz	w3, #1, 26d20 <PyInit__decimal@@Base+0xcb80>
   26ce8:	ldr	x4, [x0, #24]
   26cec:	ldr	x5, [x0, #40]
   26cf0:	add	x4, x5, x4, lsl #3
   26cf4:	ldur	x4, [x4, #-8]
   26cf8:	cbnz	x4, 26d2c <PyInit__decimal@@Base+0xcb8c>
   26cfc:	ldr	x0, [x1, #24]
   26d00:	ldr	x1, [x1, #40]
   26d04:	add	x0, x1, x0, lsl #3
   26d08:	ldur	x1, [x0, #-8]
   26d0c:	sbfx	x0, x3, #0, #1
   26d10:	mvn	w0, w0, lsl #1
   26d14:	cmp	x1, #0x0
   26d18:	csel	w0, w0, wzr, ne  // ne = any
   26d1c:	ret
   26d20:	sbfx	x0, x3, #0, #1
   26d24:	mvn	w0, w0, lsl #1
   26d28:	ret
   26d2c:	ldr	x4, [x1, #24]
   26d30:	ldr	x5, [x1, #40]
   26d34:	add	x4, x5, x4, lsl #3
   26d38:	ldur	x4, [x4, #-8]
   26d3c:	cbz	x4, 26d6c <PyInit__decimal@@Base+0xcbcc>
   26d40:	stp	x29, x30, [sp, #-32]!
   26d44:	mov	x29, sp
   26d48:	str	x19, [sp, #16]
   26d4c:	and	w19, w2, #0x1
   26d50:	and	w3, w3, #0x1
   26d54:	cmp	w3, w19
   26d58:	b.eq	26d7c <PyInit__decimal@@Base+0xcbdc>  // b.none
   26d5c:	sub	w0, w3, w19
   26d60:	ldr	x19, [sp, #16]
   26d64:	ldp	x29, x30, [sp], #32
   26d68:	ret
   26d6c:	sbfx	x0, x2, #0, #1
   26d70:	lsl	w0, w0, #1
   26d74:	add	w0, w0, #0x1
   26d78:	ret
   26d7c:	ldr	x2, [x0, #8]
   26d80:	ldr	x3, [x0, #16]
   26d84:	add	x2, x2, x3
   26d88:	sub	x5, x2, #0x1
   26d8c:	ldr	x3, [x1, #8]
   26d90:	ldr	x4, [x1, #16]
   26d94:	add	x3, x3, x4
   26d98:	sub	x4, x3, #0x1
   26d9c:	cmp	x3, x2
   26da0:	b.eq	26dbc <PyInit__decimal@@Base+0xcc1c>  // b.none
   26da4:	neg	w0, w19
   26da8:	lsl	w2, w0, #1
   26dac:	add	w0, w2, #0x1
   26db0:	cmp	x4, x5
   26db4:	csinv	w0, w0, w2, le
   26db8:	b	26d60 <PyInit__decimal@@Base+0xcbc0>
   26dbc:	bl	26b20 <PyInit__decimal@@Base+0xc980>
   26dc0:	neg	w1, w19
   26dc4:	lsl	w1, w1, #1
   26dc8:	madd	w0, w1, w0, w0
   26dcc:	b	26d60 <PyInit__decimal@@Base+0xcbc0>
   26dd0:	mov	w0, #0x0                   	// #0
   26dd4:	ret
   26dd8:	stp	x29, x30, [sp, #-64]!
   26ddc:	mov	x29, sp
   26de0:	stp	x19, x20, [sp, #16]
   26de4:	stp	x21, x22, [sp, #32]
   26de8:	mov	x19, x0
   26dec:	and	w22, w1, #0xff
   26df0:	mov	x20, x2
   26df4:	mov	x21, x3
   26df8:	ldrb	w0, [x0]
   26dfc:	tbnz	w0, #5, 26e14 <PyInit__decimal@@Base+0xcc74>
   26e00:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   26e04:	ldr	x1, [x0, #1672]
   26e08:	ldr	x0, [x19, #32]
   26e0c:	cmp	x0, x1
   26e10:	b.gt	26ed8 <PyInit__decimal@@Base+0xcd38>
   26e14:	ldrb	w1, [x19]
   26e18:	and	w1, w1, #0xfffffff0
   26e1c:	orr	w1, w22, w1
   26e20:	strb	w1, [x19]
   26e24:	str	x21, [x19, #8]
   26e28:	ldr	x1, [x19, #40]
   26e2c:	mov	x0, #0x89e80000            	// #2313682944
   26e30:	movk	x0, #0x2304, lsl #32
   26e34:	movk	x0, #0x8ac7, lsl #48
   26e38:	cmp	x20, x0
   26e3c:	cset	x2, cs  // cs = hs, nlast
   26e40:	str	x2, [x1, #8]
   26e44:	msub	x20, x2, x0, x20
   26e48:	str	x20, [x1]
   26e4c:	ldr	x1, [x19, #40]
   26e50:	ldr	x0, [x1, #8]
   26e54:	cmp	x0, #0x0
   26e58:	cset	x0, ne  // ne = any
   26e5c:	add	x0, x0, #0x1
   26e60:	str	x0, [x19, #24]
   26e64:	add	x1, x1, x0, lsl #3
   26e68:	ldur	x1, [x1, #-8]
   26e6c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26e70:	ldr	x2, [x2, #3584]
   26e74:	cmp	x1, x2
   26e78:	b.cs	26f74 <PyInit__decimal@@Base+0xcdd4>  // b.hs, b.nlast
   26e7c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26e80:	ldr	x2, [x2, #3544]
   26e84:	cmp	x1, x2
   26e88:	b.cs	26f20 <PyInit__decimal@@Base+0xcd80>  // b.hs, b.nlast
   26e8c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26e90:	ldr	x2, [x2, #3528]
   26e94:	cmp	x1, x2
   26e98:	b.cs	26f08 <PyInit__decimal@@Base+0xcd68>  // b.hs, b.nlast
   26e9c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26ea0:	ldr	x2, [x2, #3520]
   26ea4:	cmp	x1, x2
   26ea8:	cset	w2, cs  // cs = hs, nlast
   26eac:	add	w2, w2, #0x1
   26eb0:	sub	x0, x0, #0x1
   26eb4:	add	x1, x0, x0, lsl #2
   26eb8:	lsl	x1, x1, #2
   26ebc:	sub	x0, x1, x0
   26ec0:	add	x0, x0, w2, sxtw
   26ec4:	str	x0, [x19, #16]
   26ec8:	ldp	x19, x20, [sp, #16]
   26ecc:	ldp	x21, x22, [sp, #32]
   26ed0:	ldp	x29, x30, [sp], #64
   26ed4:	ret
   26ed8:	strb	wzr, [sp, #63]
   26edc:	add	x3, sp, #0x3f
   26ee0:	mov	x2, #0x8                   	// #8
   26ee4:	ldr	x0, [x19, #40]
   26ee8:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   26eec:	str	x0, [x19, #40]
   26ef0:	ldrb	w0, [sp, #63]
   26ef4:	cbnz	w0, 26e14 <PyInit__decimal@@Base+0xcc74>
   26ef8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   26efc:	ldr	x0, [x0, #1672]
   26f00:	str	x0, [x19, #32]
   26f04:	b	26e14 <PyInit__decimal@@Base+0xcc74>
   26f08:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f0c:	ldr	x2, [x2, #3536]
   26f10:	cmp	x1, x2
   26f14:	cset	w2, cs  // cs = hs, nlast
   26f18:	add	w2, w2, #0x3
   26f1c:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   26f20:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f24:	ldr	x2, [x2, #3560]
   26f28:	cmp	x1, x2
   26f2c:	b.cc	26f5c <PyInit__decimal@@Base+0xcdbc>  // b.lo, b.ul, b.last
   26f30:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f34:	ldr	x3, [x2, #3576]
   26f38:	mov	w2, #0x9                   	// #9
   26f3c:	cmp	x1, x3
   26f40:	b.cs	26eb0 <PyInit__decimal@@Base+0xcd10>  // b.hs, b.nlast
   26f44:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f48:	ldr	x2, [x2, #3568]
   26f4c:	cmp	x1, x2
   26f50:	cset	w2, cs  // cs = hs, nlast
   26f54:	add	w2, w2, #0x7
   26f58:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   26f5c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f60:	ldr	x2, [x2, #3552]
   26f64:	cmp	x1, x2
   26f68:	cset	w2, cs  // cs = hs, nlast
   26f6c:	add	w2, w2, #0x5
   26f70:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   26f74:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f78:	ldr	x2, [x2, #3624]
   26f7c:	cmp	x1, x2
   26f80:	b.cs	26fd8 <PyInit__decimal@@Base+0xce38>  // b.hs, b.nlast
   26f84:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f88:	ldr	x2, [x2, #3600]
   26f8c:	cmp	x1, x2
   26f90:	b.cc	26fc0 <PyInit__decimal@@Base+0xce20>  // b.lo, b.ul, b.last
   26f94:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26f98:	ldr	x3, [x2, #3616]
   26f9c:	mov	w2, #0xe                   	// #14
   26fa0:	cmp	x1, x3
   26fa4:	b.cs	26eb0 <PyInit__decimal@@Base+0xcd10>  // b.hs, b.nlast
   26fa8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26fac:	ldr	x2, [x2, #3608]
   26fb0:	cmp	x1, x2
   26fb4:	cset	w2, cs  // cs = hs, nlast
   26fb8:	add	w2, w2, #0xc
   26fbc:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   26fc0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26fc4:	ldr	x2, [x2, #3592]
   26fc8:	cmp	x1, x2
   26fcc:	cset	w2, cs  // cs = hs, nlast
   26fd0:	add	w2, w2, #0xa
   26fd4:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   26fd8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26fdc:	ldr	x2, [x2, #3656]
   26fe0:	cmp	x1, x2
   26fe4:	b.cs	27028 <PyInit__decimal@@Base+0xce88>  // b.hs, b.nlast
   26fe8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26fec:	ldr	x2, [x2, #3640]
   26ff0:	cmp	x1, x2
   26ff4:	b.cs	27010 <PyInit__decimal@@Base+0xce70>  // b.hs, b.nlast
   26ff8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   26ffc:	ldr	x2, [x2, #3632]
   27000:	cmp	x1, x2
   27004:	cset	w2, cs  // cs = hs, nlast
   27008:	add	w2, w2, #0xf
   2700c:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   27010:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27014:	ldr	x2, [x2, #3648]
   27018:	cmp	x1, x2
   2701c:	cset	w2, cs  // cs = hs, nlast
   27020:	add	w2, w2, #0x11
   27024:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   27028:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2702c:	ldr	x2, [x2, #3664]
   27030:	cmp	x1, x2
   27034:	cset	w2, cs  // cs = hs, nlast
   27038:	add	w2, w2, #0x13
   2703c:	b	26eb0 <PyInit__decimal@@Base+0xcd10>
   27040:	stp	x29, x30, [sp, #-48]!
   27044:	mov	x29, sp
   27048:	stp	x19, x20, [sp, #16]
   2704c:	mov	x20, x0
   27050:	ldr	x0, [x0, #24]
   27054:	cmp	x0, #0x0
   27058:	b.le	27180 <PyInit__decimal@@Base+0xcfe0>
   2705c:	ldr	x0, [x1]
   27060:	ldr	x1, [x20, #16]
   27064:	cmp	x1, x0
   27068:	b.le	27180 <PyInit__decimal@@Base+0xcfe0>
   2706c:	mov	x19, #0x9436                	// #37942
   27070:	movk	x19, #0x50d7, lsl #16
   27074:	movk	x19, #0x435e, lsl #32
   27078:	movk	x19, #0xd79, lsl #48
   2707c:	smulh	x19, x0, x19
   27080:	sub	x19, x19, x0, asr #63
   27084:	add	x1, x19, x19, lsl #2
   27088:	lsl	x1, x1, #2
   2708c:	sub	x1, x1, x19
   27090:	subs	x0, x0, x1
   27094:	b.eq	270c4 <PyInit__decimal@@Base+0xcf24>  // b.none
   27098:	add	x19, x19, #0x1
   2709c:	lsl	x1, x19, #3
   270a0:	sub	x1, x1, #0x8
   270a4:	ldr	x3, [x20, #40]
   270a8:	ldr	x4, [x3, x1]
   270ac:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   270b0:	add	x2, x2, #0xdb8
   270b4:	ldr	x2, [x2, x0, lsl #3]
   270b8:	udiv	x0, x4, x2
   270bc:	msub	x0, x0, x2, x4
   270c0:	str	x0, [x3, x1]
   270c4:	ldr	x1, [x20, #40]
   270c8:	sub	x1, x1, #0x8
   270cc:	cmp	x19, #0x1
   270d0:	b.le	270e8 <PyInit__decimal@@Base+0xcf48>
   270d4:	ldr	x0, [x1, x19, lsl #3]
   270d8:	cbnz	x0, 270e8 <PyInit__decimal@@Base+0xcf48>
   270dc:	sub	x19, x19, #0x1
   270e0:	cmp	x19, #0x1
   270e4:	b.ne	270d4 <PyInit__decimal@@Base+0xcf34>  // b.any
   270e8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   270ec:	ldr	x1, [x0, #1672]
   270f0:	cmp	x1, x19
   270f4:	csel	x1, x1, x19, ge  // ge = tcont
   270f8:	ldr	x0, [x20, #32]
   270fc:	cmp	x0, x1
   27100:	b.eq	27114 <PyInit__decimal@@Base+0xcf74>  // b.none
   27104:	ldrb	w2, [x20]
   27108:	tbz	w2, #5, 271d0 <PyInit__decimal@@Base+0xd030>
   2710c:	cmp	x0, x1
   27110:	b.lt	271c0 <PyInit__decimal@@Base+0xd020>  // b.tstop
   27114:	str	x19, [x20, #24]
   27118:	ldr	x0, [x20, #40]
   2711c:	add	x0, x0, x19, lsl #3
   27120:	ldur	x0, [x0, #-8]
   27124:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27128:	ldr	x1, [x1, #3584]
   2712c:	cmp	x0, x1
   27130:	b.cs	2724c <PyInit__decimal@@Base+0xd0ac>  // b.hs, b.nlast
   27134:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27138:	ldr	x1, [x1, #3544]
   2713c:	cmp	x0, x1
   27140:	b.cs	271f8 <PyInit__decimal@@Base+0xd058>  // b.hs, b.nlast
   27144:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27148:	ldr	x1, [x1, #3528]
   2714c:	cmp	x0, x1
   27150:	b.cs	271e0 <PyInit__decimal@@Base+0xd040>  // b.hs, b.nlast
   27154:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27158:	ldr	x1, [x1, #3520]
   2715c:	cmp	x0, x1
   27160:	cset	w1, cs  // cs = hs, nlast
   27164:	add	w1, w1, #0x1
   27168:	sub	x19, x19, #0x1
   2716c:	add	x0, x19, x19, lsl #2
   27170:	lsl	x0, x0, #2
   27174:	sub	x19, x0, x19
   27178:	add	x19, x19, w1, sxtw
   2717c:	str	x19, [x20, #16]
   27180:	ldrb	w1, [x20]
   27184:	tst	w1, #0xe
   27188:	b.ne	271b4 <PyInit__decimal@@Base+0xd014>  // b.any
   2718c:	ldr	x0, [x20, #24]
   27190:	ldr	x2, [x20, #40]
   27194:	add	x0, x2, x0, lsl #3
   27198:	ldur	x0, [x0, #-8]
   2719c:	cbnz	x0, 271b4 <PyInit__decimal@@Base+0xd014>
   271a0:	ldr	x3, [x20, #8]
   271a4:	mov	x2, #0x0                   	// #0
   271a8:	and	w1, w1, #0x1
   271ac:	mov	x0, x20
   271b0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   271b4:	ldp	x19, x20, [sp, #16]
   271b8:	ldp	x29, x30, [sp], #48
   271bc:	ret
   271c0:	add	x2, sp, #0x2c
   271c4:	mov	x0, x20
   271c8:	bl	25338 <PyInit__decimal@@Base+0xb198>
   271cc:	b	27114 <PyInit__decimal@@Base+0xcf74>
   271d0:	add	x2, sp, #0x2c
   271d4:	mov	x0, x20
   271d8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   271dc:	b	27114 <PyInit__decimal@@Base+0xcf74>
   271e0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   271e4:	ldr	x1, [x1, #3536]
   271e8:	cmp	x0, x1
   271ec:	cset	w1, cs  // cs = hs, nlast
   271f0:	add	w1, w1, #0x3
   271f4:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   271f8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   271fc:	ldr	x1, [x1, #3560]
   27200:	cmp	x0, x1
   27204:	b.cc	27234 <PyInit__decimal@@Base+0xd094>  // b.lo, b.ul, b.last
   27208:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2720c:	ldr	x2, [x1, #3576]
   27210:	mov	w1, #0x9                   	// #9
   27214:	cmp	x0, x2
   27218:	b.cs	27168 <PyInit__decimal@@Base+0xcfc8>  // b.hs, b.nlast
   2721c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27220:	ldr	x1, [x1, #3568]
   27224:	cmp	x0, x1
   27228:	cset	w1, cs  // cs = hs, nlast
   2722c:	add	w1, w1, #0x7
   27230:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   27234:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27238:	ldr	x1, [x1, #3552]
   2723c:	cmp	x0, x1
   27240:	cset	w1, cs  // cs = hs, nlast
   27244:	add	w1, w1, #0x5
   27248:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   2724c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27250:	ldr	x1, [x1, #3624]
   27254:	cmp	x0, x1
   27258:	b.cs	272b0 <PyInit__decimal@@Base+0xd110>  // b.hs, b.nlast
   2725c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27260:	ldr	x1, [x1, #3600]
   27264:	cmp	x0, x1
   27268:	b.cc	27298 <PyInit__decimal@@Base+0xd0f8>  // b.lo, b.ul, b.last
   2726c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27270:	ldr	x2, [x1, #3616]
   27274:	mov	w1, #0xe                   	// #14
   27278:	cmp	x0, x2
   2727c:	b.cs	27168 <PyInit__decimal@@Base+0xcfc8>  // b.hs, b.nlast
   27280:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27284:	ldr	x1, [x1, #3608]
   27288:	cmp	x0, x1
   2728c:	cset	w1, cs  // cs = hs, nlast
   27290:	add	w1, w1, #0xc
   27294:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   27298:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2729c:	ldr	x1, [x1, #3592]
   272a0:	cmp	x0, x1
   272a4:	cset	w1, cs  // cs = hs, nlast
   272a8:	add	w1, w1, #0xa
   272ac:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   272b0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   272b4:	ldr	x1, [x1, #3656]
   272b8:	cmp	x0, x1
   272bc:	b.cs	27300 <PyInit__decimal@@Base+0xd160>  // b.hs, b.nlast
   272c0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   272c4:	ldr	x1, [x1, #3640]
   272c8:	cmp	x0, x1
   272cc:	b.cs	272e8 <PyInit__decimal@@Base+0xd148>  // b.hs, b.nlast
   272d0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   272d4:	ldr	x1, [x1, #3632]
   272d8:	cmp	x0, x1
   272dc:	cset	w1, cs  // cs = hs, nlast
   272e0:	add	w1, w1, #0xf
   272e4:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   272e8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   272ec:	ldr	x1, [x1, #3648]
   272f0:	cmp	x0, x1
   272f4:	cset	w1, cs  // cs = hs, nlast
   272f8:	add	w1, w1, #0x11
   272fc:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   27300:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27304:	ldr	x1, [x1, #3664]
   27308:	cmp	x0, x1
   2730c:	cset	w1, cs  // cs = hs, nlast
   27310:	add	w1, w1, #0x13
   27314:	b	27168 <PyInit__decimal@@Base+0xcfc8>
   27318:	mov	x4, x0
   2731c:	cbz	w2, 27638 <PyInit__decimal@@Base+0xd498>
   27320:	add	x0, x0, x1, lsl #3
   27324:	ldur	x0, [x0, #-8]
   27328:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2732c:	ldr	x2, [x2, #3584]
   27330:	cmp	x0, x2
   27334:	b.cs	27484 <PyInit__decimal@@Base+0xd2e4>  // b.hs, b.nlast
   27338:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2733c:	ldr	x2, [x2, #3544]
   27340:	cmp	x0, x2
   27344:	b.cs	273e8 <PyInit__decimal@@Base+0xd248>  // b.hs, b.nlast
   27348:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2734c:	ldr	x2, [x2, #3528]
   27350:	cmp	x0, x2
   27354:	b.cs	273a4 <PyInit__decimal@@Base+0xd204>  // b.hs, b.nlast
   27358:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2735c:	ldr	x3, [x2, #3520]
   27360:	mov	x2, #0x0                   	// #0
   27364:	cmp	x0, x3
   27368:	b.cc	27388 <PyInit__decimal@@Base+0xd1e8>  // b.lo, b.ul, b.last
   2736c:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   27370:	movk	x3, #0xcccd
   27374:	umulh	x3, x0, x3
   27378:	lsr	x3, x3, #3
   2737c:	add	x2, x3, x3, lsl #2
   27380:	sub	x2, x0, x2, lsl #1
   27384:	mov	x0, x3
   27388:	cmp	x2, #0x0
   2738c:	ccmp	x1, #0x1, #0x4, eq  // eq = none
   27390:	b.gt	2760c <PyInit__decimal@@Base+0xd46c>
   27394:	cmp	x0, #0x0
   27398:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   2739c:	b.ne	27664 <PyInit__decimal@@Base+0xd4c4>  // b.any
   273a0:	b	2765c <PyInit__decimal@@Base+0xd4bc>
   273a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   273a8:	ldr	x2, [x2, #3536]
   273ac:	cmp	x0, x2
   273b0:	b.cc	27668 <PyInit__decimal@@Base+0xd4c8>  // b.lo, b.ul, b.last
   273b4:	lsr	x3, x0, #3
   273b8:	mov	x2, #0xf7cf                	// #63439
   273bc:	movk	x2, #0xe353, lsl #16
   273c0:	movk	x2, #0x9ba5, lsl #32
   273c4:	movk	x2, #0x20c4, lsl #48
   273c8:	umulh	x3, x3, x2
   273cc:	lsr	x3, x3, #4
   273d0:	lsl	x2, x3, #5
   273d4:	sub	x2, x2, x3
   273d8:	add	x2, x3, x2, lsl #2
   273dc:	sub	x2, x0, x2, lsl #3
   273e0:	mov	x0, x3
   273e4:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   273e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   273ec:	ldr	x2, [x2, #3560]
   273f0:	cmp	x0, x2
   273f4:	b.cc	27444 <PyInit__decimal@@Base+0xd2a4>  // b.lo, b.ul, b.last
   273f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   273fc:	ldr	x2, [x2, #3576]
   27400:	cmp	x0, x2
   27404:	b.cs	276ec <PyInit__decimal@@Base+0xd54c>  // b.hs, b.nlast
   27408:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2740c:	ldr	x2, [x2, #3568]
   27410:	cmp	x0, x2
   27414:	b.cc	276c0 <PyInit__decimal@@Base+0xd520>  // b.lo, b.ul, b.last
   27418:	mov	x3, #0x42bd                	// #17085
   2741c:	movk	x3, #0xe57a, lsl #16
   27420:	movk	x3, #0x94d5, lsl #32
   27424:	movk	x3, #0xd6bf, lsl #48
   27428:	umulh	x3, x0, x3
   2742c:	lsr	x3, x3, #23
   27430:	mov	x2, #0x9680                	// #38528
   27434:	movk	x2, #0x98, lsl #16
   27438:	msub	x2, x3, x2, x0
   2743c:	mov	x0, x3
   27440:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27444:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27448:	ldr	x2, [x2, #3552]
   2744c:	cmp	x0, x2
   27450:	b.cc	27698 <PyInit__decimal@@Base+0xd4f8>  // b.lo, b.ul, b.last
   27454:	lsr	x3, x0, #5
   27458:	mov	x2, #0x7843                	// #30787
   2745c:	movk	x2, #0x71b4, lsl #16
   27460:	movk	x2, #0x5ac4, lsl #32
   27464:	movk	x2, #0xa7c, lsl #48
   27468:	umulh	x3, x3, x2
   2746c:	lsr	x3, x3, #7
   27470:	mov	x2, #0x86a0                	// #34464
   27474:	movk	x2, #0x1, lsl #16
   27478:	msub	x2, x3, x2, x0
   2747c:	mov	x0, x3
   27480:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27484:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27488:	ldr	x2, [x2, #3624]
   2748c:	cmp	x0, x2
   27490:	b.cs	27534 <PyInit__decimal@@Base+0xd394>  // b.hs, b.nlast
   27494:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27498:	ldr	x2, [x2, #3600]
   2749c:	cmp	x0, x2
   274a0:	b.cc	274f4 <PyInit__decimal@@Base+0xd354>  // b.lo, b.ul, b.last
   274a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   274a8:	ldr	x2, [x2, #3616]
   274ac:	cmp	x0, x2
   274b0:	b.cs	27778 <PyInit__decimal@@Base+0xd5d8>  // b.hs, b.nlast
   274b4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   274b8:	ldr	x2, [x2, #3608]
   274bc:	cmp	x0, x2
   274c0:	b.cc	27748 <PyInit__decimal@@Base+0xd5a8>  // b.lo, b.ul, b.last
   274c4:	mov	x3, #0x2233                	// #8755
   274c8:	movk	x3, #0x5bd4, lsl #16
   274cc:	movk	x3, #0x3302, lsl #32
   274d0:	movk	x3, #0x232f, lsl #48
   274d4:	umulh	x3, x0, x3
   274d8:	lsr	x3, x3, #37
   274dc:	mov	x2, #0x1000                	// #4096
   274e0:	movk	x2, #0xd4a5, lsl #16
   274e4:	movk	x2, #0xe8, lsl #32
   274e8:	msub	x2, x3, x2, x0
   274ec:	mov	x0, x3
   274f0:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   274f4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   274f8:	ldr	x2, [x2, #3592]
   274fc:	cmp	x0, x2
   27500:	b.cc	27718 <PyInit__decimal@@Base+0xd578>  // b.lo, b.ul, b.last
   27504:	mov	x3, #0xd5bf                	// #54719
   27508:	movk	x3, #0xbded, lsl #16
   2750c:	movk	x3, #0xfece, lsl #32
   27510:	movk	x3, #0xdbe6, lsl #48
   27514:	umulh	x3, x0, x3
   27518:	lsr	x3, x3, #33
   2751c:	mov	x2, #0xe400                	// #58368
   27520:	movk	x2, #0x540b, lsl #16
   27524:	movk	x2, #0x2, lsl #32
   27528:	msub	x2, x3, x2, x0
   2752c:	mov	x0, x3
   27530:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27534:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27538:	ldr	x2, [x2, #3656]
   2753c:	cmp	x0, x2
   27540:	b.cs	275dc <PyInit__decimal@@Base+0xd43c>  // b.hs, b.nlast
   27544:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27548:	ldr	x2, [x2, #3640]
   2754c:	cmp	x0, x2
   27550:	b.cs	2759c <PyInit__decimal@@Base+0xd3fc>  // b.hs, b.nlast
   27554:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27558:	ldr	x2, [x2, #3632]
   2755c:	cmp	x0, x2
   27560:	b.cc	277a8 <PyInit__decimal@@Base+0xd608>  // b.lo, b.ul, b.last
   27564:	lsr	x3, x0, #15
   27568:	mov	x2, #0xeac3                	// #60099
   2756c:	movk	x2, #0xf3dc, lsl #16
   27570:	movk	x2, #0x4075, lsl #32
   27574:	movk	x2, #0x2, lsl #48
   27578:	umulh	x3, x3, x2
   2757c:	lsr	x3, x3, #20
   27580:	mov	x2, #0x8000                	// #32768
   27584:	movk	x2, #0xa4c6, lsl #16
   27588:	movk	x2, #0x8d7e, lsl #32
   2758c:	movk	x2, #0x3, lsl #48
   27590:	msub	x2, x3, x2, x0
   27594:	mov	x0, x3
   27598:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   2759c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   275a0:	ldr	x2, [x2, #3648]
   275a4:	cmp	x0, x2
   275a8:	b.cc	277d8 <PyInit__decimal@@Base+0xd638>  // b.lo, b.ul, b.last
   275ac:	lsr	x3, x0, #17
   275b0:	mov	x2, #0x1b53                	// #6995
   275b4:	movk	x2, #0xd519, lsl #16
   275b8:	movk	x2, #0x5c3b, lsl #32
   275bc:	umulh	x3, x3, x2
   275c0:	lsr	x3, x3, #22
   275c4:	mov	x2, #0x5d8a0000            	// #1569325056
   275c8:	movk	x2, #0x4578, lsl #32
   275cc:	movk	x2, #0x163, lsl #48
   275d0:	msub	x2, x3, x2, x0
   275d4:	mov	x0, x3
   275d8:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   275dc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   275e0:	ldr	x2, [x2, #3664]
   275e4:	cmp	x0, x2
   275e8:	b.cc	27808 <PyInit__decimal@@Base+0xd668>  // b.lo, b.ul, b.last
   275ec:	mov	x2, #0x89e80000            	// #2313682944
   275f0:	movk	x2, #0x2304, lsl #32
   275f4:	movk	x2, #0x8ac7, lsl #48
   275f8:	cmp	x0, x2
   275fc:	cset	x3, cs  // cs = hs, nlast
   27600:	msub	x2, x3, x2, x0
   27604:	mov	x0, x3
   27608:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   2760c:	sub	x1, x1, #0x2
   27610:	ldr	x2, [x4, x1, lsl #3]
   27614:	cbnz	x2, 27630 <PyInit__decimal@@Base+0xd490>
   27618:	subs	x1, x1, #0x1
   2761c:	b.pl	27610 <PyInit__decimal@@Base+0xd470>  // b.nfrst
   27620:	mov	w2, #0x1                   	// #1
   27624:	eor	w2, w2, #0x1
   27628:	mov	w2, w2
   2762c:	b	27394 <PyInit__decimal@@Base+0xd1f4>
   27630:	mov	w2, #0x0                   	// #0
   27634:	b	27624 <PyInit__decimal@@Base+0xd484>
   27638:	subs	x1, x1, #0x1
   2763c:	b.mi	2764c <PyInit__decimal@@Base+0xd4ac>  // b.first
   27640:	ldr	x3, [x4, x1, lsl #3]
   27644:	cbz	x3, 27638 <PyInit__decimal@@Base+0xd498>
   27648:	b	27650 <PyInit__decimal@@Base+0xd4b0>
   2764c:	mov	w2, #0x1                   	// #1
   27650:	cmp	w2, #0x0
   27654:	cset	x2, eq  // eq = none
   27658:	mov	x0, #0x0                   	// #0
   2765c:	cmp	x2, #0x0
   27660:	cinc	x0, x0, ne  // ne = any
   27664:	ret
   27668:	lsr	x3, x0, #2
   2766c:	mov	x2, #0xf5c3                	// #62915
   27670:	movk	x2, #0x5c28, lsl #16
   27674:	movk	x2, #0xc28f, lsl #32
   27678:	movk	x2, #0x28f5, lsl #48
   2767c:	umulh	x3, x3, x2
   27680:	lsr	x3, x3, #2
   27684:	add	x2, x3, x3, lsl #1
   27688:	add	x2, x3, x2, lsl #3
   2768c:	sub	x2, x0, x2, lsl #2
   27690:	mov	x0, x3
   27694:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27698:	mov	x3, #0x594b                	// #22859
   2769c:	movk	x3, #0x3886, lsl #16
   276a0:	movk	x3, #0xc5d6, lsl #32
   276a4:	movk	x3, #0x346d, lsl #48
   276a8:	umulh	x3, x0, x3
   276ac:	lsr	x3, x3, #11
   276b0:	mov	x2, #0x2710                	// #10000
   276b4:	msub	x2, x3, x2, x0
   276b8:	mov	x0, x3
   276bc:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   276c0:	mov	x3, #0x34db                	// #13531
   276c4:	movk	x3, #0xd7b6, lsl #16
   276c8:	movk	x3, #0xde82, lsl #32
   276cc:	movk	x3, #0x431b, lsl #48
   276d0:	umulh	x3, x0, x3
   276d4:	lsr	x3, x3, #18
   276d8:	mov	x2, #0x4240                	// #16960
   276dc:	movk	x2, #0xf, lsl #16
   276e0:	msub	x2, x3, x2, x0
   276e4:	mov	x0, x3
   276e8:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   276ec:	mov	x3, #0xcefd                	// #52989
   276f0:	movk	x3, #0x8461, lsl #16
   276f4:	movk	x3, #0x7711, lsl #32
   276f8:	movk	x3, #0xabcc, lsl #48
   276fc:	umulh	x3, x0, x3
   27700:	lsr	x3, x3, #26
   27704:	mov	x2, #0xe100                	// #57600
   27708:	movk	x2, #0x5f5, lsl #16
   2770c:	msub	x2, x3, x2, x0
   27710:	mov	x0, x3
   27714:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27718:	lsr	x3, x0, #9
   2771c:	mov	x2, #0x5a53                	// #23123
   27720:	movk	x2, #0xa09b, lsl #16
   27724:	movk	x2, #0xb82f, lsl #32
   27728:	movk	x2, #0x44, lsl #48
   2772c:	umulh	x3, x3, x2
   27730:	lsr	x3, x3, #11
   27734:	mov	x2, #0xca00                	// #51712
   27738:	movk	x2, #0x3b9a, lsl #16
   2773c:	msub	x2, x3, x2, x0
   27740:	mov	x0, x3
   27744:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27748:	mov	x3, #0xaaff                	// #43775
   2774c:	movk	x3, #0xcb24, lsl #16
   27750:	movk	x3, #0xff0b, lsl #32
   27754:	movk	x3, #0xafeb, lsl #48
   27758:	umulh	x3, x0, x3
   2775c:	lsr	x3, x3, #36
   27760:	mov	x2, #0xe800                	// #59392
   27764:	movk	x2, #0x4876, lsl #16
   27768:	movk	x2, #0x17, lsl #32
   2776c:	msub	x2, x3, x2, x0
   27770:	mov	x0, x3
   27774:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27778:	mov	x3, #0x385                 	// #901
   2777c:	movk	x3, #0x92ed, lsl #16
   27780:	movk	x3, #0x84d0, lsl #32
   27784:	movk	x3, #0x384b, lsl #48
   27788:	umulh	x3, x0, x3
   2778c:	lsr	x3, x3, #41
   27790:	mov	x2, #0xa000                	// #40960
   27794:	movk	x2, #0x4e72, lsl #16
   27798:	movk	x2, #0x918, lsl #32
   2779c:	msub	x2, x3, x2, x0
   277a0:	mov	x0, x3
   277a4:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   277a8:	mov	x3, #0xcd81                	// #52609
   277ac:	movk	x3, #0x5095, lsl #16
   277b0:	movk	x3, #0x4dc3, lsl #32
   277b4:	movk	x3, #0xb42, lsl #48
   277b8:	umulh	x3, x0, x3
   277bc:	lsr	x3, x3, #42
   277c0:	mov	x2, #0x4000                	// #16384
   277c4:	movk	x2, #0x107a, lsl #16
   277c8:	movk	x2, #0x5af3, lsl #32
   277cc:	msub	x2, x3, x2, x0
   277d0:	mov	x0, x3
   277d4:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   277d8:	mov	x3, #0x7857                	// #30807
   277dc:	movk	x3, #0xb113, lsl #16
   277e0:	movk	x3, #0x652f, lsl #32
   277e4:	movk	x3, #0x39a5, lsl #48
   277e8:	umulh	x3, x0, x3
   277ec:	lsr	x3, x3, #51
   277f0:	mov	x2, #0x6fc10000            	// #1874919424
   277f4:	movk	x2, #0x86f2, lsl #32
   277f8:	movk	x2, #0x23, lsl #48
   277fc:	msub	x2, x3, x2, x0
   27800:	mov	x0, x3
   27804:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27808:	lsr	x3, x0, #18
   2780c:	mov	x2, #0x490f                	// #18703
   27810:	movk	x2, #0x7747, lsl #16
   27814:	movk	x2, #0x49c9, lsl #32
   27818:	umulh	x3, x3, x2
   2781c:	lsr	x3, x3, #24
   27820:	mov	x2, #0xa7640000            	// #2808348672
   27824:	movk	x2, #0xb6b3, lsl #32
   27828:	movk	x2, #0xde0, lsl #48
   2782c:	msub	x2, x3, x2, x0
   27830:	mov	x0, x3
   27834:	b	27388 <PyInit__decimal@@Base+0xd1e8>
   27838:	stp	x29, x30, [sp, #-48]!
   2783c:	mov	x29, sp
   27840:	stp	x19, x20, [sp, #16]
   27844:	mov	x20, x0
   27848:	ldr	x0, [x0, #24]
   2784c:	cmp	x0, #0x0
   27850:	b.le	27894 <PyInit__decimal@@Base+0xd6f4>
   27854:	ldrsw	x2, [x1, #40]
   27858:	ldr	x0, [x1]
   2785c:	sub	x0, x0, x2
   27860:	ldr	x1, [x20, #16]
   27864:	cmp	x1, x0
   27868:	b.le	27894 <PyInit__decimal@@Base+0xd6f4>
   2786c:	cbnz	x0, 278d0 <PyInit__decimal@@Base+0xd730>
   27870:	ldrb	w0, [x20]
   27874:	tbnz	w0, #5, 2788c <PyInit__decimal@@Base+0xd6ec>
   27878:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2787c:	ldr	x1, [x0, #1672]
   27880:	ldr	x0, [x20, #32]
   27884:	cmp	x0, x1
   27888:	b.gt	278a0 <PyInit__decimal@@Base+0xd700>
   2788c:	str	xzr, [x20, #16]
   27890:	str	xzr, [x20, #24]
   27894:	ldp	x19, x20, [sp, #16]
   27898:	ldp	x29, x30, [sp], #48
   2789c:	ret
   278a0:	strb	wzr, [sp, #43]
   278a4:	add	x3, sp, #0x2b
   278a8:	mov	x2, #0x8                   	// #8
   278ac:	ldr	x0, [x20, #40]
   278b0:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   278b4:	str	x0, [x20, #40]
   278b8:	ldrb	w0, [sp, #43]
   278bc:	cbnz	w0, 2788c <PyInit__decimal@@Base+0xd6ec>
   278c0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   278c4:	ldr	x0, [x0, #1672]
   278c8:	str	x0, [x20, #32]
   278cc:	b	2788c <PyInit__decimal@@Base+0xd6ec>
   278d0:	mov	x19, #0x9436                	// #37942
   278d4:	movk	x19, #0x50d7, lsl #16
   278d8:	movk	x19, #0x435e, lsl #32
   278dc:	movk	x19, #0xd79, lsl #48
   278e0:	smulh	x19, x0, x19
   278e4:	sub	x19, x19, x0, asr #63
   278e8:	add	x1, x19, x19, lsl #2
   278ec:	lsl	x1, x1, #2
   278f0:	sub	x1, x1, x19
   278f4:	subs	x0, x0, x1
   278f8:	b.eq	27928 <PyInit__decimal@@Base+0xd788>  // b.none
   278fc:	add	x19, x19, #0x1
   27900:	lsl	x1, x19, #3
   27904:	sub	x1, x1, #0x8
   27908:	ldr	x3, [x20, #40]
   2790c:	ldr	x4, [x3, x1]
   27910:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27914:	add	x2, x2, #0xdb8
   27918:	ldr	x2, [x2, x0, lsl #3]
   2791c:	udiv	x0, x4, x2
   27920:	msub	x0, x0, x2, x4
   27924:	str	x0, [x3, x1]
   27928:	ldr	x1, [x20, #40]
   2792c:	sub	x1, x1, #0x8
   27930:	cmp	x19, #0x1
   27934:	b.le	2794c <PyInit__decimal@@Base+0xd7ac>
   27938:	ldr	x0, [x1, x19, lsl #3]
   2793c:	cbnz	x0, 2794c <PyInit__decimal@@Base+0xd7ac>
   27940:	sub	x19, x19, #0x1
   27944:	cmp	x19, #0x1
   27948:	b.ne	27938 <PyInit__decimal@@Base+0xd798>  // b.any
   2794c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   27950:	ldr	x1, [x0, #1672]
   27954:	cmp	x1, x19
   27958:	csel	x1, x1, x19, ge  // ge = tcont
   2795c:	ldr	x0, [x20, #32]
   27960:	cmp	x1, x0
   27964:	b.eq	27978 <PyInit__decimal@@Base+0xd7d8>  // b.none
   27968:	ldrb	w2, [x20]
   2796c:	tbz	w2, #5, 27a0c <PyInit__decimal@@Base+0xd86c>
   27970:	cmp	x1, x0
   27974:	b.gt	279fc <PyInit__decimal@@Base+0xd85c>
   27978:	str	x19, [x20, #24]
   2797c:	lsl	x2, x19, #3
   27980:	sub	x2, x2, #0x8
   27984:	ldr	x3, [x20, #40]
   27988:	ldr	x0, [x3, x2]
   2798c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27990:	ldr	x1, [x1, #3584]
   27994:	cmp	x0, x1
   27998:	b.cs	27a88 <PyInit__decimal@@Base+0xd8e8>  // b.hs, b.nlast
   2799c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   279a0:	ldr	x1, [x1, #3544]
   279a4:	cmp	x0, x1
   279a8:	b.cs	27a34 <PyInit__decimal@@Base+0xd894>  // b.hs, b.nlast
   279ac:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   279b0:	ldr	x1, [x1, #3528]
   279b4:	cmp	x0, x1
   279b8:	b.cs	27a1c <PyInit__decimal@@Base+0xd87c>  // b.hs, b.nlast
   279bc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   279c0:	ldr	x1, [x1, #3520]
   279c4:	cmp	x0, x1
   279c8:	cset	w1, cs  // cs = hs, nlast
   279cc:	add	w1, w1, #0x1
   279d0:	sub	x19, x19, #0x1
   279d4:	add	x0, x19, x19, lsl #2
   279d8:	lsl	x0, x0, #2
   279dc:	sub	x19, x0, x19
   279e0:	add	x19, x19, w1, sxtw
   279e4:	str	x19, [x20, #16]
   279e8:	ldr	x0, [x3, x2]
   279ec:	cbnz	x0, 27894 <PyInit__decimal@@Base+0xd6f4>
   279f0:	str	xzr, [x20, #16]
   279f4:	str	xzr, [x20, #24]
   279f8:	b	27894 <PyInit__decimal@@Base+0xd6f4>
   279fc:	add	x2, sp, #0x2c
   27a00:	mov	x0, x20
   27a04:	bl	25338 <PyInit__decimal@@Base+0xb198>
   27a08:	b	27978 <PyInit__decimal@@Base+0xd7d8>
   27a0c:	add	x2, sp, #0x2c
   27a10:	mov	x0, x20
   27a14:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   27a18:	b	27978 <PyInit__decimal@@Base+0xd7d8>
   27a1c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a20:	ldr	x1, [x1, #3536]
   27a24:	cmp	x0, x1
   27a28:	cset	w1, cs  // cs = hs, nlast
   27a2c:	add	w1, w1, #0x3
   27a30:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27a34:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a38:	ldr	x1, [x1, #3560]
   27a3c:	cmp	x0, x1
   27a40:	b.cc	27a70 <PyInit__decimal@@Base+0xd8d0>  // b.lo, b.ul, b.last
   27a44:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a48:	ldr	x4, [x1, #3576]
   27a4c:	mov	w1, #0x9                   	// #9
   27a50:	cmp	x0, x4
   27a54:	b.cs	279d0 <PyInit__decimal@@Base+0xd830>  // b.hs, b.nlast
   27a58:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a5c:	ldr	x1, [x1, #3568]
   27a60:	cmp	x0, x1
   27a64:	cset	w1, cs  // cs = hs, nlast
   27a68:	add	w1, w1, #0x7
   27a6c:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27a70:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a74:	ldr	x1, [x1, #3552]
   27a78:	cmp	x0, x1
   27a7c:	cset	w1, cs  // cs = hs, nlast
   27a80:	add	w1, w1, #0x5
   27a84:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27a88:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a8c:	ldr	x1, [x1, #3624]
   27a90:	cmp	x0, x1
   27a94:	b.cs	27aec <PyInit__decimal@@Base+0xd94c>  // b.hs, b.nlast
   27a98:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27a9c:	ldr	x1, [x1, #3600]
   27aa0:	cmp	x0, x1
   27aa4:	b.cc	27ad4 <PyInit__decimal@@Base+0xd934>  // b.lo, b.ul, b.last
   27aa8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27aac:	ldr	x4, [x1, #3616]
   27ab0:	mov	w1, #0xe                   	// #14
   27ab4:	cmp	x0, x4
   27ab8:	b.cs	279d0 <PyInit__decimal@@Base+0xd830>  // b.hs, b.nlast
   27abc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27ac0:	ldr	x1, [x1, #3608]
   27ac4:	cmp	x0, x1
   27ac8:	cset	w1, cs  // cs = hs, nlast
   27acc:	add	w1, w1, #0xc
   27ad0:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27ad4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27ad8:	ldr	x1, [x1, #3592]
   27adc:	cmp	x0, x1
   27ae0:	cset	w1, cs  // cs = hs, nlast
   27ae4:	add	w1, w1, #0xa
   27ae8:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27aec:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27af0:	ldr	x1, [x1, #3656]
   27af4:	cmp	x0, x1
   27af8:	b.cs	27b3c <PyInit__decimal@@Base+0xd99c>  // b.hs, b.nlast
   27afc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27b00:	ldr	x1, [x1, #3640]
   27b04:	cmp	x0, x1
   27b08:	b.cs	27b24 <PyInit__decimal@@Base+0xd984>  // b.hs, b.nlast
   27b0c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27b10:	ldr	x1, [x1, #3632]
   27b14:	cmp	x0, x1
   27b18:	cset	w1, cs  // cs = hs, nlast
   27b1c:	add	w1, w1, #0xf
   27b20:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27b24:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27b28:	ldr	x1, [x1, #3648]
   27b2c:	cmp	x0, x1
   27b30:	cset	w1, cs  // cs = hs, nlast
   27b34:	add	w1, w1, #0x11
   27b38:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27b3c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27b40:	ldr	x1, [x1, #3664]
   27b44:	cmp	x0, x1
   27b48:	cset	w1, cs  // cs = hs, nlast
   27b4c:	add	w1, w1, #0x13
   27b50:	b	279d0 <PyInit__decimal@@Base+0xd830>
   27b54:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   27b58:	add	x0, x0, #0x358
   27b5c:	ret
   27b60:	mov	x1, x0
   27b64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27b68:	ldr	x0, [x0, #3584]
   27b6c:	cmp	x0, x1
   27b70:	b.ls	27c18 <PyInit__decimal@@Base+0xda78>  // b.plast
   27b74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27b78:	ldr	x0, [x0, #3544]
   27b7c:	cmp	x0, x1
   27b80:	b.ls	27bc4 <PyInit__decimal@@Base+0xda24>  // b.plast
   27b84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27b88:	ldr	x0, [x0, #3528]
   27b8c:	cmp	x0, x1
   27b90:	b.ls	27bac <PyInit__decimal@@Base+0xda0c>  // b.plast
   27b94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27b98:	ldr	x0, [x0, #3520]
   27b9c:	cmp	x0, x1
   27ba0:	cset	w0, ls  // ls = plast
   27ba4:	add	w0, w0, #0x1
   27ba8:	ret
   27bac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27bb0:	ldr	x0, [x0, #3536]
   27bb4:	cmp	x0, x1
   27bb8:	cset	w0, ls  // ls = plast
   27bbc:	add	w0, w0, #0x3
   27bc0:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27bc4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27bc8:	ldr	x0, [x0, #3560]
   27bcc:	cmp	x0, x1
   27bd0:	b.hi	27c00 <PyInit__decimal@@Base+0xda60>  // b.pmore
   27bd4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27bd8:	ldr	x2, [x0, #3576]
   27bdc:	mov	w0, #0x9                   	// #9
   27be0:	cmp	x2, x1
   27be4:	b.ls	27ba8 <PyInit__decimal@@Base+0xda08>  // b.plast
   27be8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27bec:	ldr	x0, [x0, #3568]
   27bf0:	cmp	x0, x1
   27bf4:	cset	w0, ls  // ls = plast
   27bf8:	add	w0, w0, #0x7
   27bfc:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27c00:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c04:	ldr	x0, [x0, #3552]
   27c08:	cmp	x0, x1
   27c0c:	cset	w0, ls  // ls = plast
   27c10:	add	w0, w0, #0x5
   27c14:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27c18:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c1c:	ldr	x0, [x0, #3624]
   27c20:	cmp	x0, x1
   27c24:	b.ls	27c7c <PyInit__decimal@@Base+0xdadc>  // b.plast
   27c28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c2c:	ldr	x0, [x0, #3600]
   27c30:	cmp	x0, x1
   27c34:	b.hi	27c64 <PyInit__decimal@@Base+0xdac4>  // b.pmore
   27c38:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c3c:	ldr	x2, [x0, #3616]
   27c40:	mov	w0, #0xe                   	// #14
   27c44:	cmp	x2, x1
   27c48:	b.ls	27ba8 <PyInit__decimal@@Base+0xda08>  // b.plast
   27c4c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c50:	ldr	x0, [x0, #3608]
   27c54:	cmp	x0, x1
   27c58:	cset	w0, ls  // ls = plast
   27c5c:	add	w0, w0, #0xc
   27c60:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27c64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c68:	ldr	x0, [x0, #3592]
   27c6c:	cmp	x0, x1
   27c70:	cset	w0, ls  // ls = plast
   27c74:	add	w0, w0, #0xa
   27c78:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27c7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c80:	ldr	x0, [x0, #3656]
   27c84:	cmp	x0, x1
   27c88:	b.ls	27ccc <PyInit__decimal@@Base+0xdb2c>  // b.plast
   27c8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27c90:	ldr	x0, [x0, #3640]
   27c94:	cmp	x0, x1
   27c98:	b.ls	27cb4 <PyInit__decimal@@Base+0xdb14>  // b.plast
   27c9c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27ca0:	ldr	x0, [x0, #3632]
   27ca4:	cmp	x0, x1
   27ca8:	cset	w0, ls  // ls = plast
   27cac:	add	w0, w0, #0xf
   27cb0:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27cb4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27cb8:	ldr	x0, [x0, #3648]
   27cbc:	cmp	x0, x1
   27cc0:	cset	w0, ls  // ls = plast
   27cc4:	add	w0, w0, #0x11
   27cc8:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27ccc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27cd0:	ldr	x0, [x0, #3664]
   27cd4:	cmp	x0, x1
   27cd8:	cset	w0, ls  // ls = plast
   27cdc:	add	w0, w0, #0x13
   27ce0:	b	27ba8 <PyInit__decimal@@Base+0xda08>
   27ce4:	ldr	x1, [x0, #8]
   27ce8:	ldr	x0, [x0, #16]
   27cec:	add	x0, x1, x0
   27cf0:	sub	x0, x0, #0x1
   27cf4:	ret
   27cf8:	ldr	x1, [x0, #16]
   27cfc:	add	x1, x1, #0x1
   27d00:	ldr	x0, [x0]
   27d04:	sub	x0, x1, x0
   27d08:	ret
   27d0c:	ldr	x1, [x0, #8]
   27d10:	add	x1, x1, #0x1
   27d14:	ldr	x0, [x0]
   27d18:	sub	x0, x1, x0
   27d1c:	ret
   27d20:	ldr	x1, [x0, #24]
   27d24:	ldr	x0, [x0, #40]
   27d28:	add	x0, x0, x1, lsl #3
   27d2c:	ldur	x0, [x0, #-8]
   27d30:	ret
   27d34:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27d38:	ldr	x1, [x1, #3584]
   27d3c:	cmp	x0, x1
   27d40:	b.cs	27dfc <PyInit__decimal@@Base+0xdc5c>  // b.hs, b.nlast
   27d44:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27d48:	ldr	x1, [x1, #3544]
   27d4c:	cmp	x0, x1
   27d50:	b.cs	27da8 <PyInit__decimal@@Base+0xdc08>  // b.hs, b.nlast
   27d54:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27d58:	ldr	x1, [x1, #3528]
   27d5c:	cmp	x0, x1
   27d60:	b.cs	27d90 <PyInit__decimal@@Base+0xdbf0>  // b.hs, b.nlast
   27d64:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27d68:	ldr	x1, [x1, #3520]
   27d6c:	cmp	x0, x1
   27d70:	cset	w1, cs  // cs = hs, nlast
   27d74:	add	w1, w1, #0x1
   27d78:	sub	w1, w1, #0x1
   27d7c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   27d80:	add	x2, x2, #0xdb8
   27d84:	ldr	x1, [x2, w1, sxtw #3]
   27d88:	udiv	x0, x0, x1
   27d8c:	ret
   27d90:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27d94:	ldr	x1, [x1, #3536]
   27d98:	cmp	x0, x1
   27d9c:	cset	w1, cs  // cs = hs, nlast
   27da0:	add	w1, w1, #0x3
   27da4:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27da8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27dac:	ldr	x1, [x1, #3560]
   27db0:	cmp	x0, x1
   27db4:	b.cc	27de4 <PyInit__decimal@@Base+0xdc44>  // b.lo, b.ul, b.last
   27db8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27dbc:	ldr	x2, [x1, #3576]
   27dc0:	mov	w1, #0x9                   	// #9
   27dc4:	cmp	x0, x2
   27dc8:	b.cs	27d78 <PyInit__decimal@@Base+0xdbd8>  // b.hs, b.nlast
   27dcc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27dd0:	ldr	x1, [x1, #3568]
   27dd4:	cmp	x0, x1
   27dd8:	cset	w1, cs  // cs = hs, nlast
   27ddc:	add	w1, w1, #0x7
   27de0:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27de4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27de8:	ldr	x1, [x1, #3552]
   27dec:	cmp	x0, x1
   27df0:	cset	w1, cs  // cs = hs, nlast
   27df4:	add	w1, w1, #0x5
   27df8:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27dfc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e00:	ldr	x1, [x1, #3624]
   27e04:	cmp	x0, x1
   27e08:	b.cs	27e60 <PyInit__decimal@@Base+0xdcc0>  // b.hs, b.nlast
   27e0c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e10:	ldr	x1, [x1, #3600]
   27e14:	cmp	x0, x1
   27e18:	b.cc	27e48 <PyInit__decimal@@Base+0xdca8>  // b.lo, b.ul, b.last
   27e1c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e20:	ldr	x2, [x1, #3616]
   27e24:	mov	w1, #0xe                   	// #14
   27e28:	cmp	x0, x2
   27e2c:	b.cs	27d78 <PyInit__decimal@@Base+0xdbd8>  // b.hs, b.nlast
   27e30:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e34:	ldr	x1, [x1, #3608]
   27e38:	cmp	x0, x1
   27e3c:	cset	w1, cs  // cs = hs, nlast
   27e40:	add	w1, w1, #0xc
   27e44:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27e48:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e4c:	ldr	x1, [x1, #3592]
   27e50:	cmp	x0, x1
   27e54:	cset	w1, cs  // cs = hs, nlast
   27e58:	add	w1, w1, #0xa
   27e5c:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27e60:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e64:	ldr	x1, [x1, #3656]
   27e68:	cmp	x0, x1
   27e6c:	b.cs	27eb0 <PyInit__decimal@@Base+0xdd10>  // b.hs, b.nlast
   27e70:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e74:	ldr	x1, [x1, #3640]
   27e78:	cmp	x0, x1
   27e7c:	b.cs	27e98 <PyInit__decimal@@Base+0xdcf8>  // b.hs, b.nlast
   27e80:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e84:	ldr	x1, [x1, #3632]
   27e88:	cmp	x0, x1
   27e8c:	cset	w1, cs  // cs = hs, nlast
   27e90:	add	w1, w1, #0xf
   27e94:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27e98:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27e9c:	ldr	x1, [x1, #3648]
   27ea0:	cmp	x0, x1
   27ea4:	cset	w1, cs  // cs = hs, nlast
   27ea8:	add	w1, w1, #0x11
   27eac:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27eb0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   27eb4:	ldr	x1, [x1, #3664]
   27eb8:	cmp	x0, x1
   27ebc:	cset	w1, cs  // cs = hs, nlast
   27ec0:	add	w1, w1, #0x13
   27ec4:	b	27d78 <PyInit__decimal@@Base+0xdbd8>
   27ec8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   27ecc:	movk	x1, #0xcccd
   27ed0:	umulh	x1, x0, x1
   27ed4:	lsr	x1, x1, #3
   27ed8:	add	x1, x1, x1, lsl #2
   27edc:	sub	x0, x0, x1, lsl #1
   27ee0:	ret
   27ee4:	mov	x1, #0x9436                	// #37942
   27ee8:	movk	x1, #0x50d7, lsl #16
   27eec:	movk	x1, #0x435e, lsl #32
   27ef0:	movk	x1, #0xd79, lsl #48
   27ef4:	smulh	x1, x0, x1
   27ef8:	sub	x1, x1, x0, asr #63
   27efc:	add	x2, x1, x1, lsl #2
   27f00:	lsl	x2, x2, #2
   27f04:	sub	x2, x2, x1
   27f08:	cmp	x0, x2
   27f0c:	cinc	x0, x1, ne  // ne = any
   27f10:	ret
   27f14:	cmp	x0, #0x0
   27f18:	cneg	x1, x0, lt  // lt = tstop
   27f1c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f20:	ldr	x0, [x0, #3584]
   27f24:	cmp	x1, x0
   27f28:	b.cs	27fd0 <PyInit__decimal@@Base+0xde30>  // b.hs, b.nlast
   27f2c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f30:	ldr	x0, [x0, #3544]
   27f34:	cmp	x1, x0
   27f38:	b.cs	27f7c <PyInit__decimal@@Base+0xdddc>  // b.hs, b.nlast
   27f3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f40:	ldr	x0, [x0, #3528]
   27f44:	cmp	x1, x0
   27f48:	b.cs	27f64 <PyInit__decimal@@Base+0xddc4>  // b.hs, b.nlast
   27f4c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f50:	ldr	x0, [x0, #3520]
   27f54:	cmp	x1, x0
   27f58:	cset	w0, cs  // cs = hs, nlast
   27f5c:	add	w0, w0, #0x1
   27f60:	ret
   27f64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f68:	ldr	x0, [x0, #3536]
   27f6c:	cmp	x1, x0
   27f70:	cset	w0, cs  // cs = hs, nlast
   27f74:	add	w0, w0, #0x3
   27f78:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   27f7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f80:	ldr	x0, [x0, #3560]
   27f84:	cmp	x1, x0
   27f88:	b.cc	27fb8 <PyInit__decimal@@Base+0xde18>  // b.lo, b.ul, b.last
   27f8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27f90:	ldr	x2, [x0, #3576]
   27f94:	mov	w0, #0x9                   	// #9
   27f98:	cmp	x1, x2
   27f9c:	b.cs	27f60 <PyInit__decimal@@Base+0xddc0>  // b.hs, b.nlast
   27fa0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27fa4:	ldr	x0, [x0, #3568]
   27fa8:	cmp	x1, x0
   27fac:	cset	w0, cs  // cs = hs, nlast
   27fb0:	add	w0, w0, #0x7
   27fb4:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   27fb8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27fbc:	ldr	x0, [x0, #3552]
   27fc0:	cmp	x1, x0
   27fc4:	cset	w0, cs  // cs = hs, nlast
   27fc8:	add	w0, w0, #0x5
   27fcc:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   27fd0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27fd4:	ldr	x0, [x0, #3624]
   27fd8:	cmp	x1, x0
   27fdc:	b.cs	28034 <PyInit__decimal@@Base+0xde94>  // b.hs, b.nlast
   27fe0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27fe4:	ldr	x0, [x0, #3600]
   27fe8:	cmp	x1, x0
   27fec:	b.cc	2801c <PyInit__decimal@@Base+0xde7c>  // b.lo, b.ul, b.last
   27ff0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   27ff4:	ldr	x2, [x0, #3616]
   27ff8:	mov	w0, #0xe                   	// #14
   27ffc:	cmp	x1, x2
   28000:	b.cs	27f60 <PyInit__decimal@@Base+0xddc0>  // b.hs, b.nlast
   28004:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28008:	ldr	x0, [x0, #3608]
   2800c:	cmp	x1, x0
   28010:	cset	w0, cs  // cs = hs, nlast
   28014:	add	w0, w0, #0xc
   28018:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   2801c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28020:	ldr	x0, [x0, #3592]
   28024:	cmp	x1, x0
   28028:	cset	w0, cs  // cs = hs, nlast
   2802c:	add	w0, w0, #0xa
   28030:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   28034:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28038:	ldr	x0, [x0, #3656]
   2803c:	cmp	x1, x0
   28040:	b.cs	28084 <PyInit__decimal@@Base+0xdee4>  // b.hs, b.nlast
   28044:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28048:	ldr	x0, [x0, #3640]
   2804c:	cmp	x1, x0
   28050:	b.cs	2806c <PyInit__decimal@@Base+0xdecc>  // b.hs, b.nlast
   28054:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28058:	ldr	x0, [x0, #3632]
   2805c:	cmp	x1, x0
   28060:	cset	w0, cs  // cs = hs, nlast
   28064:	add	w0, w0, #0xf
   28068:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   2806c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28070:	ldr	x0, [x0, #3648]
   28074:	cmp	x1, x0
   28078:	cset	w0, cs  // cs = hs, nlast
   2807c:	add	w0, w0, #0x11
   28080:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   28084:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   28088:	ldr	x0, [x0, #3664]
   2808c:	cmp	x1, x0
   28090:	cset	w0, cs  // cs = hs, nlast
   28094:	add	w0, w0, #0x13
   28098:	b	27f60 <PyInit__decimal@@Base+0xddc0>
   2809c:	mov	w0, #0x1                   	// #1
   280a0:	ret
   280a4:	ldrb	w0, [x0]
   280a8:	tst	w0, #0xe
   280ac:	cset	w0, eq  // eq = none
   280b0:	ret
   280b4:	ldrb	w0, [x0]
   280b8:	and	w0, w0, #0x2
   280bc:	ret
   280c0:	ldrb	w0, [x0]
   280c4:	and	w0, w0, #0xc
   280c8:	ret
   280cc:	ldrb	w0, [x0]
   280d0:	and	w0, w0, #0x1
   280d4:	ret
   280d8:	ldrb	w0, [x0]
   280dc:	eor	w0, w0, #0x1
   280e0:	and	w0, w0, #0x1
   280e4:	ret
   280e8:	ldrb	w0, [x0]
   280ec:	and	w0, w0, #0x4
   280f0:	ret
   280f4:	ldrb	w0, [x0]
   280f8:	and	w0, w0, #0x1
   280fc:	ret
   28100:	ldrb	w0, [x0]
   28104:	and	w0, w0, #0x8
   28108:	ret
   2810c:	ldrb	w0, [x0]
   28110:	and	w0, w0, #0xe
   28114:	ret
   28118:	ldrb	w1, [x0]
   2811c:	tst	w1, #0xe
   28120:	b.ne	28140 <PyInit__decimal@@Base+0xdfa0>  // b.any
   28124:	ldr	x1, [x0, #24]
   28128:	ldr	x0, [x0, #40]
   2812c:	add	x0, x0, x1, lsl #3
   28130:	ldur	x0, [x0, #-8]
   28134:	cmp	x0, #0x0
   28138:	cset	w0, eq  // eq = none
   2813c:	ret
   28140:	mov	w0, #0x0                   	// #0
   28144:	b	2813c <PyInit__decimal@@Base+0xdf9c>
   28148:	ldr	x1, [x0, #24]
   2814c:	ldr	x0, [x0, #40]
   28150:	add	x0, x0, x1, lsl #3
   28154:	ldur	x0, [x0, #-8]
   28158:	cmp	x0, #0x0
   2815c:	cset	w0, eq  // eq = none
   28160:	ret
   28164:	mov	x2, x0
   28168:	ldrb	w0, [x0]
   2816c:	tst	w0, #0xe
   28170:	b.ne	281ac <PyInit__decimal@@Base+0xe00c>  // b.any
   28174:	ldr	x0, [x2, #24]
   28178:	ldr	x3, [x2, #40]
   2817c:	add	x0, x3, x0, lsl #3
   28180:	ldur	x3, [x0, #-8]
   28184:	mov	w0, #0x0                   	// #0
   28188:	cbz	x3, 281a8 <PyInit__decimal@@Base+0xe008>
   2818c:	ldr	x0, [x2, #8]
   28190:	ldr	x2, [x2, #16]
   28194:	add	x0, x0, x2
   28198:	sub	x0, x0, #0x1
   2819c:	ldr	x1, [x1, #16]
   281a0:	cmp	x1, x0
   281a4:	cset	w0, le
   281a8:	ret
   281ac:	mov	w0, #0x0                   	// #0
   281b0:	b	281a8 <PyInit__decimal@@Base+0xe008>
   281b4:	mov	x2, x0
   281b8:	ldrb	w0, [x0]
   281bc:	tst	w0, #0xe
   281c0:	b.ne	281fc <PyInit__decimal@@Base+0xe05c>  // b.any
   281c4:	ldr	x0, [x2, #24]
   281c8:	ldr	x3, [x2, #40]
   281cc:	add	x0, x3, x0, lsl #3
   281d0:	ldur	x3, [x0, #-8]
   281d4:	mov	w0, #0x0                   	// #0
   281d8:	cbz	x3, 281f8 <PyInit__decimal@@Base+0xe058>
   281dc:	ldr	x0, [x2, #8]
   281e0:	ldr	x2, [x2, #16]
   281e4:	add	x0, x0, x2
   281e8:	sub	x0, x0, #0x1
   281ec:	ldr	x1, [x1, #16]
   281f0:	cmp	x1, x0
   281f4:	cset	w0, gt
   281f8:	ret
   281fc:	mov	w0, #0x0                   	// #0
   28200:	b	281f8 <PyInit__decimal@@Base+0xe058>
   28204:	and	w0, w0, #0x1
   28208:	ret
   2820c:	ldr	x0, [x0, #40]
   28210:	ldr	x0, [x0]
   28214:	and	w0, w0, #0x1
   28218:	ret
   2821c:	ldrb	w0, [x0]
   28220:	and	w0, w0, #0x1
   28224:	ret
   28228:	ldrb	w0, [x0]
   2822c:	sbfx	x0, x0, #0, #1
   28230:	lsl	w0, w0, #1
   28234:	add	w0, w0, #0x1
   28238:	ret
   2823c:	mov	x0, #0xa                   	// #10
   28240:	ret
   28244:	ldrb	w0, [x0]
   28248:	eor	x0, x0, #0x10
   2824c:	ubfx	w0, w0, #4, #1
   28250:	ret
   28254:	ldrb	w0, [x0]
   28258:	and	w0, w0, #0x10
   2825c:	ret
   28260:	ldrb	w0, [x0]
   28264:	tst	w0, #0xe0
   28268:	cset	w0, eq  // eq = none
   2826c:	ret
   28270:	ldrb	w0, [x0]
   28274:	and	w0, w0, #0x20
   28278:	ret
   2827c:	ldrb	w0, [x0]
   28280:	and	w0, w0, #0x40
   28284:	ret
   28288:	ldrb	w0, [x0]
   2828c:	and	w0, w0, #0x80
   28290:	ret
   28294:	cbz	x1, 282ac <PyInit__decimal@@Base+0xe10c>
   28298:	mov	x2, x0
   2829c:	add	x0, x0, x1, lsl #3
   282a0:	str	xzr, [x2], #8
   282a4:	cmp	x2, x0
   282a8:	b.ne	282a0 <PyInit__decimal@@Base+0xe100>  // b.any
   282ac:	ret
   282b0:	stp	x29, x30, [sp, #-32]!
   282b4:	mov	x29, sp
   282b8:	str	x19, [sp, #16]
   282bc:	mov	x19, x0
   282c0:	ldrb	w0, [x0]
   282c4:	tst	w0, #0xe0
   282c8:	b.ne	282dc <PyInit__decimal@@Base+0xe13c>  // b.any
   282cc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   282d0:	ldr	x1, [x0, #1704]
   282d4:	ldr	x0, [x19, #40]
   282d8:	blr	x1
   282dc:	ldrb	w0, [x19]
   282e0:	tbnz	w0, #4, 282f4 <PyInit__decimal@@Base+0xe154>
   282e4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   282e8:	ldr	x1, [x0, #1704]
   282ec:	mov	x0, x19
   282f0:	blr	x1
   282f4:	ldr	x19, [sp, #16]
   282f8:	ldp	x29, x30, [sp], #32
   282fc:	ret
   28300:	mov	x4, x0
   28304:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28308:	ldr	x3, [x0, #1672]
   2830c:	cmp	x3, x1
   28310:	csel	x1, x3, x1, ge  // ge = tcont
   28314:	ldr	x3, [x4, #32]
   28318:	cmp	x3, x1
   2831c:	b.eq	2835c <PyInit__decimal@@Base+0xe1bc>  // b.none
   28320:	stp	x29, x30, [sp, #-16]!
   28324:	mov	x29, sp
   28328:	ldrb	w0, [x4]
   2832c:	tbz	w0, #5, 28350 <PyInit__decimal@@Base+0xe1b0>
   28330:	mov	w0, #0x1                   	// #1
   28334:	cmp	x3, x1
   28338:	b.lt	28344 <PyInit__decimal@@Base+0xe1a4>  // b.tstop
   2833c:	ldp	x29, x30, [sp], #16
   28340:	ret
   28344:	mov	x0, x4
   28348:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2834c:	b	2833c <PyInit__decimal@@Base+0xe19c>
   28350:	mov	x0, x4
   28354:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   28358:	b	2833c <PyInit__decimal@@Base+0xe19c>
   2835c:	mov	w0, #0x1                   	// #1
   28360:	ret
   28364:	stp	x29, x30, [sp, #-32]!
   28368:	mov	x29, sp
   2836c:	stp	x19, x20, [sp, #16]
   28370:	mov	x20, x0
   28374:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28378:	ldr	x19, [x0, #1672]
   2837c:	cmp	x19, x1
   28380:	csel	x19, x19, x1, ge  // ge = tcont
   28384:	ldr	x0, [x20, #32]
   28388:	cmp	x0, x19
   2838c:	b.eq	283a0 <PyInit__decimal@@Base+0xe200>  // b.none
   28390:	ldrb	w1, [x20]
   28394:	tbz	w1, #5, 283dc <PyInit__decimal@@Base+0xe23c>
   28398:	cmp	x0, x19
   2839c:	b.lt	283cc <PyInit__decimal@@Base+0xe22c>  // b.tstop
   283a0:	ldr	x1, [x20, #40]
   283a4:	cbz	x19, 283f0 <PyInit__decimal@@Base+0xe250>
   283a8:	mov	x0, x1
   283ac:	add	x1, x1, x19, lsl #3
   283b0:	str	xzr, [x0], #8
   283b4:	cmp	x0, x1
   283b8:	b.ne	283b0 <PyInit__decimal@@Base+0xe210>  // b.any
   283bc:	mov	w0, #0x1                   	// #1
   283c0:	ldp	x19, x20, [sp, #16]
   283c4:	ldp	x29, x30, [sp], #32
   283c8:	ret
   283cc:	mov	x1, x19
   283d0:	mov	x0, x20
   283d4:	bl	253d0 <PyInit__decimal@@Base+0xb230>
   283d8:	b	283c0 <PyInit__decimal@@Base+0xe220>
   283dc:	mov	x1, x19
   283e0:	mov	x0, x20
   283e4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   283e8:	cbnz	w0, 283a0 <PyInit__decimal@@Base+0xe200>
   283ec:	b	283c0 <PyInit__decimal@@Base+0xe220>
   283f0:	mov	w0, #0x1                   	// #1
   283f4:	b	283c0 <PyInit__decimal@@Base+0xe220>
   283f8:	stp	x29, x30, [sp, #-48]!
   283fc:	mov	x29, sp
   28400:	str	x19, [sp, #16]
   28404:	mov	x19, x0
   28408:	ldrb	w0, [x0]
   2840c:	tbnz	w0, #5, 28424 <PyInit__decimal@@Base+0xe284>
   28410:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28414:	ldr	x1, [x0, #1672]
   28418:	ldr	x0, [x19, #32]
   2841c:	cmp	x0, x1
   28420:	b.gt	28430 <PyInit__decimal@@Base+0xe290>
   28424:	ldr	x19, [sp, #16]
   28428:	ldp	x29, x30, [sp], #48
   2842c:	ret
   28430:	strb	wzr, [sp, #47]
   28434:	add	x3, sp, #0x2f
   28438:	mov	x2, #0x8                   	// #8
   2843c:	ldr	x0, [x19, #40]
   28440:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   28444:	str	x0, [x19, #40]
   28448:	ldrb	w0, [sp, #47]
   2844c:	cbnz	w0, 28424 <PyInit__decimal@@Base+0xe284>
   28450:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28454:	ldr	x0, [x0, #1672]
   28458:	str	x0, [x19, #32]
   2845c:	b	28424 <PyInit__decimal@@Base+0xe284>
   28460:	stp	x29, x30, [sp, #-48]!
   28464:	mov	x29, sp
   28468:	stp	x19, x20, [sp, #16]
   2846c:	str	wzr, [sp, #44]
   28470:	adrp	x3, 5e000 <PyInit__decimal@@Base+0x43e60>
   28474:	ldr	x3, [x3, #1672]
   28478:	cmp	x3, x1
   2847c:	csel	x1, x3, x1, ge  // ge = tcont
   28480:	ldr	x3, [x0, #32]
   28484:	mov	w19, #0x1                   	// #1
   28488:	cmp	x1, x3
   2848c:	b.eq	284a8 <PyInit__decimal@@Base+0xe308>  // b.none
   28490:	mov	x20, x2
   28494:	ldrb	w2, [x0]
   28498:	tbz	w2, #5, 284c8 <PyInit__decimal@@Base+0xe328>
   2849c:	mov	w19, #0x1                   	// #1
   284a0:	cmp	x1, x3
   284a4:	b.gt	284b8 <PyInit__decimal@@Base+0xe318>
   284a8:	mov	w0, w19
   284ac:	ldp	x19, x20, [sp, #16]
   284b0:	ldp	x29, x30, [sp], #48
   284b4:	ret
   284b8:	add	x2, sp, #0x2c
   284bc:	bl	25338 <PyInit__decimal@@Base+0xb198>
   284c0:	mov	w19, w0
   284c4:	b	284d4 <PyInit__decimal@@Base+0xe334>
   284c8:	add	x2, sp, #0x2c
   284cc:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   284d0:	mov	w19, w0
   284d4:	cbz	w19, 284e0 <PyInit__decimal@@Base+0xe340>
   284d8:	mov	w19, #0x1                   	// #1
   284dc:	b	284a8 <PyInit__decimal@@Base+0xe308>
   284e0:	ldr	w1, [sp, #44]
   284e4:	mov	x0, x20
   284e8:	bl	1d670 <PyInit__decimal@@Base+0x34d0>
   284ec:	b	284a8 <PyInit__decimal@@Base+0xe308>
   284f0:	stp	x29, x30, [sp, #-64]!
   284f4:	mov	x29, sp
   284f8:	stp	x19, x20, [sp, #16]
   284fc:	mov	x20, x0
   28500:	str	wzr, [sp, #60]
   28504:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28508:	ldr	x19, [x0, #1672]
   2850c:	cmp	x19, x1
   28510:	csel	x19, x19, x1, ge  // ge = tcont
   28514:	ldr	x0, [x20, #32]
   28518:	cmp	x19, x0
   2851c:	b.eq	2853c <PyInit__decimal@@Base+0xe39c>  // b.none
   28520:	str	x21, [sp, #32]
   28524:	mov	x21, x2
   28528:	ldrb	w1, [x20]
   2852c:	tbz	w1, #5, 285a0 <PyInit__decimal@@Base+0xe400>
   28530:	cmp	x19, x0
   28534:	b.gt	28568 <PyInit__decimal@@Base+0xe3c8>
   28538:	ldr	x21, [sp, #32]
   2853c:	ldr	x1, [x20, #40]
   28540:	cbz	x19, 28558 <PyInit__decimal@@Base+0xe3b8>
   28544:	mov	x0, x1
   28548:	add	x1, x1, x19, lsl #3
   2854c:	str	xzr, [x0], #8
   28550:	cmp	x0, x1
   28554:	b.ne	2854c <PyInit__decimal@@Base+0xe3ac>  // b.any
   28558:	mov	w0, #0x1                   	// #1
   2855c:	ldp	x19, x20, [sp, #16]
   28560:	ldp	x29, x30, [sp], #64
   28564:	ret
   28568:	add	x2, sp, #0x3c
   2856c:	mov	x1, x19
   28570:	mov	x0, x20
   28574:	bl	253d0 <PyInit__decimal@@Base+0xb230>
   28578:	cbnz	w0, 28594 <PyInit__decimal@@Base+0xe3f4>
   2857c:	ldr	w1, [sp, #60]
   28580:	mov	x0, x21
   28584:	bl	1d670 <PyInit__decimal@@Base+0x34d0>
   28588:	mov	w0, #0x0                   	// #0
   2858c:	ldr	x21, [sp, #32]
   28590:	b	2855c <PyInit__decimal@@Base+0xe3bc>
   28594:	mov	w0, #0x1                   	// #1
   28598:	ldr	x21, [sp, #32]
   2859c:	b	2855c <PyInit__decimal@@Base+0xe3bc>
   285a0:	add	x2, sp, #0x3c
   285a4:	mov	x1, x19
   285a8:	mov	x0, x20
   285ac:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   285b0:	cbz	w0, 2857c <PyInit__decimal@@Base+0xe3dc>
   285b4:	ldr	x21, [sp, #32]
   285b8:	b	2853c <PyInit__decimal@@Base+0xe39c>
   285bc:	ldr	x1, [x0, #24]
   285c0:	ldr	x2, [x0, #40]
   285c4:	add	x2, x2, x1, lsl #3
   285c8:	ldur	x2, [x2, #-8]
   285cc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   285d0:	ldr	x3, [x3, #3584]
   285d4:	cmp	x3, x2
   285d8:	b.ls	28698 <PyInit__decimal@@Base+0xe4f8>  // b.plast
   285dc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   285e0:	ldr	x3, [x3, #3544]
   285e4:	cmp	x3, x2
   285e8:	b.ls	28644 <PyInit__decimal@@Base+0xe4a4>  // b.plast
   285ec:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   285f0:	ldr	x3, [x3, #3528]
   285f4:	cmp	x3, x2
   285f8:	b.ls	2862c <PyInit__decimal@@Base+0xe48c>  // b.plast
   285fc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28600:	ldr	x3, [x3, #3520]
   28604:	cmp	x3, x2
   28608:	cset	w3, ls  // ls = plast
   2860c:	add	w3, w3, #0x1
   28610:	sub	x1, x1, #0x1
   28614:	add	x2, x1, x1, lsl #2
   28618:	lsl	x2, x2, #2
   2861c:	sub	x1, x2, x1
   28620:	add	x1, x1, w3, sxtw
   28624:	str	x1, [x0, #16]
   28628:	ret
   2862c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28630:	ldr	x3, [x3, #3536]
   28634:	cmp	x3, x2
   28638:	cset	w3, ls  // ls = plast
   2863c:	add	w3, w3, #0x3
   28640:	b	28610 <PyInit__decimal@@Base+0xe470>
   28644:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28648:	ldr	x3, [x3, #3560]
   2864c:	cmp	x3, x2
   28650:	b.hi	28680 <PyInit__decimal@@Base+0xe4e0>  // b.pmore
   28654:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28658:	ldr	x4, [x3, #3576]
   2865c:	mov	w3, #0x9                   	// #9
   28660:	cmp	x4, x2
   28664:	b.ls	28610 <PyInit__decimal@@Base+0xe470>  // b.plast
   28668:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   2866c:	ldr	x3, [x3, #3568]
   28670:	cmp	x3, x2
   28674:	cset	w3, ls  // ls = plast
   28678:	add	w3, w3, #0x7
   2867c:	b	28610 <PyInit__decimal@@Base+0xe470>
   28680:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28684:	ldr	x3, [x3, #3552]
   28688:	cmp	x3, x2
   2868c:	cset	w3, ls  // ls = plast
   28690:	add	w3, w3, #0x5
   28694:	b	28610 <PyInit__decimal@@Base+0xe470>
   28698:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   2869c:	ldr	x3, [x3, #3624]
   286a0:	cmp	x3, x2
   286a4:	b.ls	286fc <PyInit__decimal@@Base+0xe55c>  // b.plast
   286a8:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   286ac:	ldr	x3, [x3, #3600]
   286b0:	cmp	x3, x2
   286b4:	b.hi	286e4 <PyInit__decimal@@Base+0xe544>  // b.pmore
   286b8:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   286bc:	ldr	x4, [x3, #3616]
   286c0:	mov	w3, #0xe                   	// #14
   286c4:	cmp	x4, x2
   286c8:	b.ls	28610 <PyInit__decimal@@Base+0xe470>  // b.plast
   286cc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   286d0:	ldr	x3, [x3, #3608]
   286d4:	cmp	x3, x2
   286d8:	cset	w3, ls  // ls = plast
   286dc:	add	w3, w3, #0xc
   286e0:	b	28610 <PyInit__decimal@@Base+0xe470>
   286e4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   286e8:	ldr	x3, [x3, #3592]
   286ec:	cmp	x3, x2
   286f0:	cset	w3, ls  // ls = plast
   286f4:	add	w3, w3, #0xa
   286f8:	b	28610 <PyInit__decimal@@Base+0xe470>
   286fc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28700:	ldr	x3, [x3, #3656]
   28704:	cmp	x3, x2
   28708:	b.ls	2874c <PyInit__decimal@@Base+0xe5ac>  // b.plast
   2870c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28710:	ldr	x3, [x3, #3640]
   28714:	cmp	x3, x2
   28718:	b.ls	28734 <PyInit__decimal@@Base+0xe594>  // b.plast
   2871c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28720:	ldr	x3, [x3, #3632]
   28724:	cmp	x3, x2
   28728:	cset	w3, ls  // ls = plast
   2872c:	add	w3, w3, #0xf
   28730:	b	28610 <PyInit__decimal@@Base+0xe470>
   28734:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28738:	ldr	x3, [x3, #3648]
   2873c:	cmp	x3, x2
   28740:	cset	w3, ls  // ls = plast
   28744:	add	w3, w3, #0x11
   28748:	b	28610 <PyInit__decimal@@Base+0xe470>
   2874c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   28750:	ldr	x3, [x3, #3664]
   28754:	cmp	x3, x2
   28758:	cset	w3, ls  // ls = plast
   2875c:	add	w3, w3, #0x13
   28760:	b	28610 <PyInit__decimal@@Base+0xe470>
   28764:	ldrb	w2, [x0]
   28768:	and	w2, w2, #0xfffffffe
   2876c:	orr	w1, w1, w2
   28770:	strb	w1, [x0]
   28774:	ret
   28778:	ldrb	w2, [x0]
   2877c:	ldrb	w1, [x1]
   28780:	bfxil	w2, w1, #0, #1
   28784:	strb	w2, [x0]
   28788:	ret
   2878c:	ldrb	w1, [x0]
   28790:	and	w1, w1, #0xfffffff1
   28794:	orr	w1, w1, #0x2
   28798:	strb	w1, [x0]
   2879c:	ret
   287a0:	ldrb	w1, [x0]
   287a4:	and	w1, w1, #0xfffffff1
   287a8:	orr	w1, w1, #0x4
   287ac:	strb	w1, [x0]
   287b0:	ret
   287b4:	ldrb	w1, [x0]
   287b8:	and	w1, w1, #0xfffffff1
   287bc:	orr	w1, w1, #0x8
   287c0:	strb	w1, [x0]
   287c4:	ret
   287c8:	ldrb	w1, [x0]
   287cc:	orr	w1, w1, #0x1
   287d0:	strb	w1, [x0]
   287d4:	ret
   287d8:	ldrb	w1, [x0]
   287dc:	and	w1, w1, #0xfffffffe
   287e0:	strb	w1, [x0]
   287e4:	ret
   287e8:	ldrb	w1, [x0]
   287ec:	and	w1, w1, #0xffffffef
   287f0:	strb	w1, [x0]
   287f4:	ret
   287f8:	ldrb	w1, [x0]
   287fc:	orr	w1, w1, #0x10
   28800:	strb	w1, [x0]
   28804:	ret
   28808:	ldrb	w1, [x0]
   2880c:	and	w1, w1, #0x1f
   28810:	strb	w1, [x0]
   28814:	ret
   28818:	ldrb	w1, [x0]
   2881c:	and	w1, w1, #0x1f
   28820:	orr	w1, w1, #0x20
   28824:	strb	w1, [x0]
   28828:	ret
   2882c:	ldrb	w1, [x0]
   28830:	and	w1, w1, #0x1f
   28834:	orr	w1, w1, #0x40
   28838:	strb	w1, [x0]
   2883c:	ret
   28840:	ldrb	w1, [x0]
   28844:	and	w1, w1, #0x1f
   28848:	orr	w1, w1, #0xffffff80
   2884c:	strb	w1, [x0]
   28850:	ret
   28854:	ldrb	w1, [x0]
   28858:	and	w1, w1, #0xfffffff0
   2885c:	strb	w1, [x0]
   28860:	ret
   28864:	ldrb	w2, [x0]
   28868:	and	w2, w2, #0xfffffff0
   2886c:	orr	w1, w1, w2
   28870:	strb	w1, [x0]
   28874:	ret
   28878:	ldrb	w2, [x0]
   2887c:	ldrb	w1, [x1]
   28880:	bfxil	w2, w1, #0, #4
   28884:	strb	w2, [x0]
   28888:	ret
   2888c:	stp	x29, x30, [sp, #-48]!
   28890:	mov	x29, sp
   28894:	str	x19, [sp, #16]
   28898:	mov	x19, x0
   2889c:	ldrb	w0, [x0]
   288a0:	tbnz	w0, #5, 288b8 <PyInit__decimal@@Base+0xe718>
   288a4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   288a8:	ldr	x1, [x0, #1672]
   288ac:	ldr	x0, [x19, #32]
   288b0:	cmp	x0, x1
   288b4:	b.gt	288d8 <PyInit__decimal@@Base+0xe738>
   288b8:	mov	x0, #0x1                   	// #1
   288bc:	str	x0, [x19, #16]
   288c0:	str	x0, [x19, #24]
   288c4:	ldr	x0, [x19, #40]
   288c8:	str	xzr, [x0]
   288cc:	ldr	x19, [sp, #16]
   288d0:	ldp	x29, x30, [sp], #48
   288d4:	ret
   288d8:	strb	wzr, [sp, #47]
   288dc:	add	x3, sp, #0x2f
   288e0:	mov	x2, #0x8                   	// #8
   288e4:	ldr	x0, [x19, #40]
   288e8:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   288ec:	str	x0, [x19, #40]
   288f0:	ldrb	w0, [sp, #47]
   288f4:	cbnz	w0, 288b8 <PyInit__decimal@@Base+0xe718>
   288f8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   288fc:	ldr	x0, [x0, #1672]
   28900:	str	x0, [x19, #32]
   28904:	b	288b8 <PyInit__decimal@@Base+0xe718>
   28908:	stp	x29, x30, [sp, #-48]!
   2890c:	mov	x29, sp
   28910:	stp	x19, x20, [sp, #16]
   28914:	stp	x21, x22, [sp, #32]
   28918:	mov	x19, x0
   2891c:	mov	x21, x1
   28920:	ldr	x3, [x1]
   28924:	mov	x20, #0x9436                	// #37942
   28928:	movk	x20, #0x50d7, lsl #16
   2892c:	movk	x20, #0x435e, lsl #32
   28930:	movk	x20, #0xd79, lsl #48
   28934:	smulh	x20, x3, x20
   28938:	sub	x20, x20, x3, asr #63
   2893c:	add	x0, x20, x20, lsl #2
   28940:	lsl	x0, x0, #2
   28944:	sub	x0, x0, x20
   28948:	subs	x22, x3, x0
   2894c:	b.eq	28a08 <PyInit__decimal@@Base+0xe868>  // b.none
   28950:	add	x20, x20, #0x1
   28954:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28958:	ldr	x0, [x0, #1672]
   2895c:	cmp	x0, x20
   28960:	csel	x1, x0, x20, ge  // ge = tcont
   28964:	ldr	x0, [x19, #32]
   28968:	cmp	x1, x0
   2896c:	b.eq	28980 <PyInit__decimal@@Base+0xe7e0>  // b.none
   28970:	ldrb	w3, [x19]
   28974:	tbz	w3, #5, 289f8 <PyInit__decimal@@Base+0xe858>
   28978:	cmp	x1, x0
   2897c:	b.gt	289ec <PyInit__decimal@@Base+0xe84c>
   28980:	str	x20, [x19, #24]
   28984:	ldr	x0, [x21]
   28988:	str	x0, [x19, #16]
   2898c:	sub	x0, x20, #0x1
   28990:	mov	x1, x0
   28994:	cmp	x22, #0x0
   28998:	b.le	289b8 <PyInit__decimal@@Base+0xe818>
   2899c:	sub	x1, x20, #0x2
   289a0:	ldr	x3, [x19, #40]
   289a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   289a8:	add	x2, x2, #0xdb8
   289ac:	ldr	x2, [x2, x22, lsl #3]
   289b0:	sub	x2, x2, #0x1
   289b4:	str	x2, [x3, x0, lsl #3]
   289b8:	tbnz	x1, #63, 289dc <PyInit__decimal@@Base+0xe83c>
   289bc:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   289c0:	movk	x2, #0x2304, lsl #32
   289c4:	movk	x2, #0x8ac7, lsl #48
   289c8:	ldr	x0, [x19, #40]
   289cc:	str	x2, [x0, x1, lsl #3]
   289d0:	sub	x1, x1, #0x1
   289d4:	cmn	x1, #0x1
   289d8:	b.ne	289c8 <PyInit__decimal@@Base+0xe828>  // b.any
   289dc:	ldp	x19, x20, [sp, #16]
   289e0:	ldp	x21, x22, [sp, #32]
   289e4:	ldp	x29, x30, [sp], #48
   289e8:	ret
   289ec:	mov	x0, x19
   289f0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   289f4:	b	28a00 <PyInit__decimal@@Base+0xe860>
   289f8:	mov	x0, x19
   289fc:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   28a00:	cbnz	w0, 28980 <PyInit__decimal@@Base+0xe7e0>
   28a04:	b	289dc <PyInit__decimal@@Base+0xe83c>
   28a08:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28a0c:	ldr	x0, [x0, #1672]
   28a10:	cmp	x0, x20
   28a14:	csel	x1, x0, x20, ge  // ge = tcont
   28a18:	ldr	x0, [x19, #32]
   28a1c:	cmp	x1, x0
   28a20:	b.ne	28970 <PyInit__decimal@@Base+0xe7d0>  // b.any
   28a24:	str	x20, [x19, #24]
   28a28:	ldr	x0, [x21]
   28a2c:	str	x0, [x19, #16]
   28a30:	sub	x1, x20, #0x1
   28a34:	b	289b8 <PyInit__decimal@@Base+0xe818>
   28a38:	ldr	x2, [x0, #24]
   28a3c:	cmp	x2, #0x0
   28a40:	b.le	28abc <PyInit__decimal@@Base+0xe91c>
   28a44:	ldr	x3, [x0, #40]
   28a48:	mov	x0, #0x0                   	// #0
   28a4c:	ldr	x1, [x3, x0, lsl #3]
   28a50:	cbnz	x1, 28a68 <PyInit__decimal@@Base+0xe8c8>
   28a54:	add	x0, x0, #0x1
   28a58:	cmp	x0, x2
   28a5c:	b.ne	28a4c <PyInit__decimal@@Base+0xe8ac>  // b.any
   28a60:	mov	x0, #0x0                   	// #0
   28a64:	ret
   28a68:	add	x2, x0, x0, lsl #2
   28a6c:	lsl	x2, x2, #2
   28a70:	sub	x0, x2, x0
   28a74:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   28a78:	movk	x2, #0xcccd
   28a7c:	umulh	x2, x1, x2
   28a80:	lsr	x2, x2, #3
   28a84:	add	x2, x2, x2, lsl #2
   28a88:	cmp	x1, x2, lsl #1
   28a8c:	b.ne	28a64 <PyInit__decimal@@Base+0xe8c4>  // b.any
   28a90:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   28a94:	movk	x3, #0xcccd
   28a98:	umulh	x1, x1, x3
   28a9c:	lsr	x1, x1, #3
   28aa0:	add	x0, x0, #0x1
   28aa4:	umulh	x2, x1, x3
   28aa8:	lsr	x2, x2, #3
   28aac:	add	x2, x2, x2, lsl #2
   28ab0:	cmp	x1, x2, lsl #1
   28ab4:	b.eq	28a98 <PyInit__decimal@@Base+0xe8f8>  // b.none
   28ab8:	b	28a64 <PyInit__decimal@@Base+0xe8c4>
   28abc:	mov	x0, #0x0                   	// #0
   28ac0:	b	28a64 <PyInit__decimal@@Base+0xe8c4>
   28ac4:	stp	x29, x30, [sp, #-32]!
   28ac8:	mov	x29, sp
   28acc:	str	x19, [sp, #16]
   28ad0:	mov	x19, x0
   28ad4:	ldr	x0, [x0, #24]
   28ad8:	ldr	x1, [x19, #40]
   28adc:	add	x0, x1, x0, lsl #3
   28ae0:	ldur	x0, [x0, #-8]
   28ae4:	cbnz	x0, 28af8 <PyInit__decimal@@Base+0xe958>
   28ae8:	mov	w0, #0x1                   	// #1
   28aec:	ldr	x19, [sp, #16]
   28af0:	ldp	x29, x30, [sp], #32
   28af4:	ret
   28af8:	mov	x0, x19
   28afc:	bl	28a38 <PyInit__decimal@@Base+0xe898>
   28b00:	ldr	x1, [x19, #8]
   28b04:	add	x0, x0, x1
   28b08:	mvn	x0, x0
   28b0c:	lsr	x0, x0, #63
   28b10:	b	28aec <PyInit__decimal@@Base+0xe94c>
   28b14:	stp	x29, x30, [sp, #-160]!
   28b18:	mov	x29, sp
   28b1c:	stp	x19, x20, [sp, #16]
   28b20:	stp	x21, x22, [sp, #32]
   28b24:	mov	x20, x2
   28b28:	ldrb	w21, [x1]
   28b2c:	tst	w21, #0xe
   28b30:	b.ne	28c40 <PyInit__decimal@@Base+0xeaa0>  // b.any
   28b34:	stp	x23, x24, [sp, #48]
   28b38:	stp	x25, x26, [sp, #64]
   28b3c:	stp	x27, x28, [sp, #80]
   28b40:	mov	w3, w0
   28b44:	mov	x19, x1
   28b48:	ldr	x23, [x1, #40]
   28b4c:	ldr	x24, [x1, #24]
   28b50:	lsl	x26, x24, #3
   28b54:	sub	x25, x26, #0x8
   28b58:	ldr	x0, [x23, x25]
   28b5c:	cbz	x0, 28dcc <PyInit__decimal@@Base+0xec2c>
   28b60:	cbz	w3, 28b68 <PyInit__decimal@@Base+0xe9c8>
   28b64:	tbnz	w21, #0, 28c60 <PyInit__decimal@@Base+0xeac0>
   28b68:	ldr	x22, [x19, #16]
   28b6c:	ldr	x27, [x19, #8]
   28b70:	add	x28, x22, x27
   28b74:	cmp	x28, #0x14
   28b78:	b.gt	28c80 <PyInit__decimal@@Base+0xeae0>
   28b7c:	tbnz	x27, #63, 28ca0 <PyInit__decimal@@Base+0xeb00>
   28b80:	ldr	x0, [x19, #16]
   28b84:	mov	x1, #0x435f                	// #17247
   28b88:	movk	x1, #0xd79, lsl #16
   28b8c:	movk	x1, #0x35e5, lsl #32
   28b90:	movk	x1, #0xd794, lsl #48
   28b94:	umulh	x1, x0, x1
   28b98:	lsr	x1, x1, #4
   28b9c:	add	x2, x1, x1, lsl #2
   28ba0:	lsl	x2, x2, #2
   28ba4:	sub	x1, x2, x1
   28ba8:	subs	x1, x0, x1
   28bac:	mov	x0, #0x13                  	// #19
   28bb0:	csel	x1, x1, x0, ne  // ne = any
   28bb4:	ldr	x3, [x19, #40]
   28bb8:	ldr	x2, [x19, #24]
   28bbc:	lsl	x4, x2, #3
   28bc0:	add	x0, x3, x4
   28bc4:	ldur	x0, [x0, #-8]
   28bc8:	cmp	x2, #0x1
   28bcc:	b.le	28c0c <PyInit__decimal@@Base+0xea6c>
   28bd0:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27e60>
   28bd4:	add	x5, x5, #0xdb8
   28bd8:	mov	x2, #0x14                  	// #20
   28bdc:	sub	x2, x2, x1
   28be0:	ldr	x7, [x5, x2, lsl #3]
   28be4:	umulh	x6, x7, x0
   28be8:	add	x3, x3, x4
   28bec:	sub	x1, x1, #0x1
   28bf0:	ldur	x2, [x3, #-16]
   28bf4:	ldr	x1, [x5, x1, lsl #3]
   28bf8:	udiv	x1, x2, x1
   28bfc:	madd	x0, x7, x0, x1
   28c00:	cmp	x1, x0
   28c04:	b.hi	28d8c <PyInit__decimal@@Base+0xebec>  // b.pmore
   28c08:	cbnz	x6, 28d8c <PyInit__decimal@@Base+0xebec>
   28c0c:	ldr	x1, [x19, #8]
   28c10:	cmp	x1, #0x0
   28c14:	b.le	28ddc <PyInit__decimal@@Base+0xec3c>
   28c18:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   28c1c:	add	x2, x2, #0xdb8
   28c20:	ldr	x1, [x2, x1, lsl #3]
   28c24:	umulh	x2, x1, x0
   28c28:	mul	x0, x1, x0
   28c2c:	cbnz	x2, 28dac <PyInit__decimal@@Base+0xec0c>
   28c30:	ldp	x23, x24, [sp, #48]
   28c34:	ldp	x25, x26, [sp, #64]
   28c38:	ldp	x27, x28, [sp, #80]
   28c3c:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28c40:	ldr	w0, [x2]
   28c44:	orr	w0, w0, #0x100
   28c48:	str	w0, [x2]
   28c4c:	mov	x0, #0xffffffffffffffff    	// #-1
   28c50:	ldp	x19, x20, [sp, #16]
   28c54:	ldp	x21, x22, [sp, #32]
   28c58:	ldp	x29, x30, [sp], #160
   28c5c:	ret
   28c60:	ldr	w0, [x2]
   28c64:	orr	w0, w0, #0x100
   28c68:	str	w0, [x2]
   28c6c:	mov	x0, #0xffffffffffffffff    	// #-1
   28c70:	ldp	x23, x24, [sp, #48]
   28c74:	ldp	x25, x26, [sp, #64]
   28c78:	ldp	x27, x28, [sp, #80]
   28c7c:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28c80:	ldr	w0, [x20]
   28c84:	orr	w0, w0, #0x100
   28c88:	str	w0, [x20]
   28c8c:	mov	x0, #0xffffffffffffffff    	// #-1
   28c90:	ldp	x23, x24, [sp, #48]
   28c94:	ldp	x25, x26, [sp, #64]
   28c98:	ldp	x27, x28, [sp, #80]
   28c9c:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28ca0:	mov	x0, x19
   28ca4:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   28ca8:	cbz	w0, 28d38 <PyInit__decimal@@Base+0xeb98>
   28cac:	add	x0, sp, #0x60
   28cb0:	str	x0, [sp, #152]
   28cb4:	mov	w0, #0x30                  	// #48
   28cb8:	strb	w0, [sp, #112]
   28cbc:	mov	x0, #0x2                   	// #2
   28cc0:	str	x0, [sp, #144]
   28cc4:	ldr	x0, [x23, x25]
   28cc8:	cbz	x0, 28d58 <PyInit__decimal@@Base+0xebb8>
   28ccc:	neg	x3, x27
   28cd0:	cmp	x22, x3
   28cd4:	b.le	28d80 <PyInit__decimal@@Base+0xebe0>
   28cd8:	str	x28, [sp, #128]
   28cdc:	mov	x21, #0x9436                	// #37942
   28ce0:	movk	x21, #0x50d7, lsl #16
   28ce4:	movk	x21, #0x435e, lsl #32
   28ce8:	movk	x21, #0xd79, lsl #48
   28cec:	smulh	x21, x28, x21
   28cf0:	sub	x21, x21, x28, asr #63
   28cf4:	add	x0, x21, x21, lsl #2
   28cf8:	lsl	x0, x0, #2
   28cfc:	sub	x0, x0, x21
   28d00:	cmp	x28, x0
   28d04:	cinc	x21, x21, ne  // ne = any
   28d08:	mov	x2, x24
   28d0c:	mov	x1, x23
   28d10:	add	x0, sp, #0x60
   28d14:	bl	1c370 <PyInit__decimal@@Base+0x21d0>
   28d18:	str	x21, [sp, #136]
   28d1c:	ldrb	w0, [sp, #112]
   28d20:	ldrb	w1, [x19]
   28d24:	bfxil	w0, w1, #0, #4
   28d28:	strb	w0, [sp, #112]
   28d2c:	str	xzr, [sp, #120]
   28d30:	add	x19, sp, #0x70
   28d34:	b	28b80 <PyInit__decimal@@Base+0xe9e0>
   28d38:	ldr	w0, [x20]
   28d3c:	orr	w0, w0, #0x100
   28d40:	str	w0, [x20]
   28d44:	mov	x0, #0xffffffffffffffff    	// #-1
   28d48:	ldp	x23, x24, [sp, #48]
   28d4c:	ldp	x25, x26, [sp, #64]
   28d50:	ldp	x27, x28, [sp, #80]
   28d54:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28d58:	mov	x2, x26
   28d5c:	mov	x1, x23
   28d60:	add	x0, sp, #0x60
   28d64:	bl	6470 <memcpy@plt>
   28d68:	and	w21, w21, #0xf
   28d6c:	orr	w21, w21, #0x30
   28d70:	strb	w21, [sp, #112]
   28d74:	str	x22, [sp, #128]
   28d78:	str	x24, [sp, #136]
   28d7c:	b	28d2c <PyInit__decimal@@Base+0xeb8c>
   28d80:	add	x0, sp, #0x70
   28d84:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   28d88:	b	28d1c <PyInit__decimal@@Base+0xeb7c>
   28d8c:	ldr	w0, [x20]
   28d90:	orr	w0, w0, #0x100
   28d94:	str	w0, [x20]
   28d98:	mov	x0, #0xffffffffffffffff    	// #-1
   28d9c:	ldp	x23, x24, [sp, #48]
   28da0:	ldp	x25, x26, [sp, #64]
   28da4:	ldp	x27, x28, [sp, #80]
   28da8:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28dac:	ldr	w0, [x20]
   28db0:	orr	w0, w0, #0x100
   28db4:	str	w0, [x20]
   28db8:	mov	x0, #0xffffffffffffffff    	// #-1
   28dbc:	ldp	x23, x24, [sp, #48]
   28dc0:	ldp	x25, x26, [sp, #64]
   28dc4:	ldp	x27, x28, [sp, #80]
   28dc8:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28dcc:	ldp	x23, x24, [sp, #48]
   28dd0:	ldp	x25, x26, [sp, #64]
   28dd4:	ldp	x27, x28, [sp, #80]
   28dd8:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28ddc:	ldp	x23, x24, [sp, #48]
   28de0:	ldp	x25, x26, [sp, #64]
   28de4:	ldp	x27, x28, [sp, #80]
   28de8:	b	28c50 <PyInit__decimal@@Base+0xeab0>
   28dec:	ldrb	w1, [x0]
   28df0:	tst	w1, #0xe
   28df4:	b.eq	28e00 <PyInit__decimal@@Base+0xec60>  // b.none
   28df8:	mov	w0, #0x0                   	// #0
   28dfc:	ret
   28e00:	stp	x29, x30, [sp, #-16]!
   28e04:	mov	x29, sp
   28e08:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   28e0c:	ldp	x29, x30, [sp], #16
   28e10:	ret
   28e14:	ldr	x2, [x0, #40]
   28e18:	ldr	x1, [x0, #24]
   28e1c:	add	x1, x2, x1, lsl #3
   28e20:	ldur	x1, [x1, #-8]
   28e24:	cbz	x1, 28e8c <PyInit__decimal@@Base+0xecec>
   28e28:	ldr	x1, [x0, #8]
   28e2c:	tbnz	x1, #63, 28e44 <PyInit__decimal@@Base+0xeca4>
   28e30:	mov	w0, #0x0                   	// #0
   28e34:	cbnz	x1, 28e90 <PyInit__decimal@@Base+0xecf0>
   28e38:	ldr	x0, [x2]
   28e3c:	and	w0, w0, #0x1
   28e40:	b	28e90 <PyInit__decimal@@Base+0xecf0>
   28e44:	neg	x1, x1
   28e48:	mov	x0, #0x435f                	// #17247
   28e4c:	movk	x0, #0xd79, lsl #16
   28e50:	movk	x0, #0x35e5, lsl #32
   28e54:	movk	x0, #0xd794, lsl #48
   28e58:	umulh	x0, x1, x0
   28e5c:	lsr	x0, x0, #4
   28e60:	add	x3, x0, x0, lsl #2
   28e64:	lsl	x3, x3, #2
   28e68:	sub	x3, x3, x0
   28e6c:	sub	x1, x1, x3
   28e70:	ldr	x0, [x2, x0, lsl #3]
   28e74:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   28e78:	add	x2, x2, #0xdb8
   28e7c:	ldr	x1, [x2, x1, lsl #3]
   28e80:	udiv	x0, x0, x1
   28e84:	and	w0, w0, #0x1
   28e88:	b	28e90 <PyInit__decimal@@Base+0xecf0>
   28e8c:	mov	w0, #0x0                   	// #0
   28e90:	ret
   28e94:	stp	x29, x30, [sp, #-16]!
   28e98:	mov	x29, sp
   28e9c:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   28ea0:	cmp	w0, #0x0
   28ea4:	cset	w0, eq  // eq = none
   28ea8:	ldp	x29, x30, [sp], #16
   28eac:	ret
   28eb0:	stp	x29, x30, [sp, #-64]!
   28eb4:	mov	x29, sp
   28eb8:	stp	x19, x20, [sp, #16]
   28ebc:	str	x21, [sp, #32]
   28ec0:	mov	x19, x0
   28ec4:	and	w20, w1, #0xff
   28ec8:	and	w21, w2, #0xff
   28ecc:	ldrb	w0, [x0]
   28ed0:	tbnz	w0, #5, 28ee8 <PyInit__decimal@@Base+0xed48>
   28ed4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28ed8:	ldr	x1, [x0, #1672]
   28edc:	ldr	x0, [x19, #32]
   28ee0:	cmp	x0, x1
   28ee4:	b.gt	28f18 <PyInit__decimal@@Base+0xed78>
   28ee8:	ldrb	w0, [x19]
   28eec:	and	w0, w0, #0xfffffff0
   28ef0:	orr	w20, w20, w21
   28ef4:	orr	w0, w0, w20
   28ef8:	strb	w0, [x19]
   28efc:	str	xzr, [x19, #24]
   28f00:	str	xzr, [x19, #16]
   28f04:	str	xzr, [x19, #8]
   28f08:	ldp	x19, x20, [sp, #16]
   28f0c:	ldr	x21, [sp, #32]
   28f10:	ldp	x29, x30, [sp], #64
   28f14:	ret
   28f18:	strb	wzr, [sp, #63]
   28f1c:	add	x3, sp, #0x3f
   28f20:	mov	x2, #0x8                   	// #8
   28f24:	ldr	x0, [x19, #40]
   28f28:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   28f2c:	str	x0, [x19, #40]
   28f30:	ldrb	w0, [sp, #63]
   28f34:	cbnz	w0, 28ee8 <PyInit__decimal@@Base+0xed48>
   28f38:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28f3c:	ldr	x0, [x0, #1672]
   28f40:	str	x0, [x19, #32]
   28f44:	b	28ee8 <PyInit__decimal@@Base+0xed48>
   28f48:	stp	x29, x30, [sp, #-64]!
   28f4c:	mov	x29, sp
   28f50:	stp	x19, x20, [sp, #16]
   28f54:	str	x21, [sp, #32]
   28f58:	mov	x19, x0
   28f5c:	mov	w21, w1
   28f60:	mov	x20, x2
   28f64:	ldrb	w0, [x0]
   28f68:	tbnz	w0, #5, 28f80 <PyInit__decimal@@Base+0xede0>
   28f6c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28f70:	ldr	x1, [x0, #1672]
   28f74:	ldr	x0, [x19, #32]
   28f78:	cmp	x0, x1
   28f7c:	b.gt	28fb8 <PyInit__decimal@@Base+0xee18>
   28f80:	ldrb	w0, [x19]
   28f84:	and	w0, w0, #0xfffffff0
   28f88:	orr	w0, w0, #0x4
   28f8c:	strb	w0, [x19]
   28f90:	str	xzr, [x19, #24]
   28f94:	str	xzr, [x19, #16]
   28f98:	str	xzr, [x19, #8]
   28f9c:	ldr	w0, [x20]
   28fa0:	orr	w1, w0, w21
   28fa4:	str	w1, [x20]
   28fa8:	ldp	x19, x20, [sp, #16]
   28fac:	ldr	x21, [sp, #32]
   28fb0:	ldp	x29, x30, [sp], #64
   28fb4:	ret
   28fb8:	strb	wzr, [sp, #63]
   28fbc:	add	x3, sp, #0x3f
   28fc0:	mov	x2, #0x8                   	// #8
   28fc4:	ldr	x0, [x19, #40]
   28fc8:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   28fcc:	str	x0, [x19, #40]
   28fd0:	ldrb	w0, [sp, #63]
   28fd4:	cbnz	w0, 28f80 <PyInit__decimal@@Base+0xede0>
   28fd8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   28fdc:	ldr	x0, [x0, #1672]
   28fe0:	str	x0, [x19, #32]
   28fe4:	b	28f80 <PyInit__decimal@@Base+0xede0>
   28fe8:	stp	x29, x30, [sp, #-16]!
   28fec:	mov	x29, sp
   28ff0:	and	w3, w3, #0xff
   28ff4:	ldrb	w5, [x1]
   28ff8:	tbz	w5, #1, 29030 <PyInit__decimal@@Base+0xee90>
   28ffc:	and	w5, w5, #0x1
   29000:	cmp	w3, w5
   29004:	b.eq	29010 <PyInit__decimal@@Base+0xee70>  // b.none
   29008:	ldrb	w1, [x2]
   2900c:	tbnz	w1, #1, 29020 <PyInit__decimal@@Base+0xee80>
   29010:	mov	w2, #0x2                   	// #2
   29014:	mov	w1, w5
   29018:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2901c:	b	2903c <PyInit__decimal@@Base+0xee9c>
   29020:	mov	x2, x4
   29024:	mov	w1, #0x100                 	// #256
   29028:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2902c:	b	2903c <PyInit__decimal@@Base+0xee9c>
   29030:	mov	w2, #0x2                   	// #2
   29034:	mov	w1, w3
   29038:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2903c:	ldp	x29, x30, [sp], #16
   29040:	ret
   29044:	stp	x29, x30, [sp, #-16]!
   29048:	mov	x29, sp
   2904c:	mov	x2, x1
   29050:	mov	x1, x0
   29054:	mov	w0, #0x1                   	// #1
   29058:	bl	28b14 <PyInit__decimal@@Base+0xe974>
   2905c:	ldp	x29, x30, [sp], #16
   29060:	ret
   29064:	stp	x29, x30, [sp, #-16]!
   29068:	mov	x29, sp
   2906c:	mov	x2, x1
   29070:	mov	x1, x0
   29074:	mov	w0, #0x0                   	// #0
   29078:	bl	28b14 <PyInit__decimal@@Base+0xe974>
   2907c:	ldp	x29, x30, [sp], #16
   29080:	ret
   29084:	stp	x29, x30, [sp, #-32]!
   29088:	mov	x29, sp
   2908c:	stp	x19, x20, [sp, #16]
   29090:	mov	x20, x0
   29094:	mov	x19, x1
   29098:	bl	29064 <PyInit__decimal@@Base+0xeec4>
   2909c:	ldr	w1, [x19]
   290a0:	tbnz	w1, #8, 290e4 <PyInit__decimal@@Base+0xef44>
   290a4:	mov	x2, x0
   290a8:	ldrb	w3, [x20]
   290ac:	and	w3, w3, #0x1
   290b0:	cmp	w3, #0x0
   290b4:	cneg	x0, x0, ne  // ne = any
   290b8:	tbz	x2, #63, 290d8 <PyInit__decimal@@Base+0xef38>
   290bc:	cmp	w3, #0x0
   290c0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   290c4:	ccmp	x2, x0, #0x0, ne  // ne = any
   290c8:	b.eq	290ec <PyInit__decimal@@Base+0xef4c>  // b.none
   290cc:	orr	w1, w1, #0x100
   290d0:	str	w1, [x19]
   290d4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   290d8:	ldp	x19, x20, [sp, #16]
   290dc:	ldp	x29, x30, [sp], #32
   290e0:	ret
   290e4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   290e8:	b	290d8 <PyInit__decimal@@Base+0xef38>
   290ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   290f0:	b	290d8 <PyInit__decimal@@Base+0xef38>
   290f4:	stp	x29, x30, [sp, #-16]!
   290f8:	mov	x29, sp
   290fc:	bl	29044 <PyInit__decimal@@Base+0xeea4>
   29100:	ldp	x29, x30, [sp], #16
   29104:	ret
   29108:	stp	x29, x30, [sp, #-16]!
   2910c:	mov	x29, sp
   29110:	bl	29084 <PyInit__decimal@@Base+0xeee4>
   29114:	ldp	x29, x30, [sp], #16
   29118:	ret
   2911c:	stp	x29, x30, [sp, #-32]!
   29120:	mov	x29, sp
   29124:	str	x19, [sp, #16]
   29128:	mov	x19, x1
   2912c:	bl	29044 <PyInit__decimal@@Base+0xeea4>
   29130:	ldr	w1, [x19]
   29134:	tbnz	w1, #8, 29160 <PyInit__decimal@@Base+0xefc0>
   29138:	mov	x3, #0xffffffff            	// #4294967295
   2913c:	cmp	x0, x3
   29140:	b.hi	29150 <PyInit__decimal@@Base+0xefb0>  // b.pmore
   29144:	ldr	x19, [sp, #16]
   29148:	ldp	x29, x30, [sp], #32
   2914c:	ret
   29150:	orr	w1, w1, #0x100
   29154:	str	w1, [x19]
   29158:	mov	w0, #0xffffffff            	// #-1
   2915c:	b	29144 <PyInit__decimal@@Base+0xefa4>
   29160:	mov	w0, #0xffffffff            	// #-1
   29164:	b	29144 <PyInit__decimal@@Base+0xefa4>
   29168:	stp	x29, x30, [sp, #-32]!
   2916c:	mov	x29, sp
   29170:	str	x19, [sp, #16]
   29174:	mov	x19, x1
   29178:	bl	29084 <PyInit__decimal@@Base+0xeee4>
   2917c:	ldr	w2, [x19]
   29180:	tbnz	w2, #8, 291b4 <PyInit__decimal@@Base+0xf014>
   29184:	mov	x1, #0x80000000            	// #2147483648
   29188:	add	x1, x0, x1
   2918c:	mov	x3, #0xffffffff            	// #4294967295
   29190:	cmp	x1, x3
   29194:	b.hi	291a4 <PyInit__decimal@@Base+0xf004>  // b.pmore
   29198:	ldr	x19, [sp, #16]
   2919c:	ldp	x29, x30, [sp], #32
   291a0:	ret
   291a4:	orr	w2, w2, #0x100
   291a8:	str	w2, [x19]
   291ac:	mov	w0, #0x7fffffff            	// #2147483647
   291b0:	b	29198 <PyInit__decimal@@Base+0xeff8>
   291b4:	mov	w0, #0x7fffffff            	// #2147483647
   291b8:	b	29198 <PyInit__decimal@@Base+0xeff8>
   291bc:	cmp	x0, x1
   291c0:	b.eq	2926c <PyInit__decimal@@Base+0xf0cc>  // b.none
   291c4:	stp	x29, x30, [sp, #-32]!
   291c8:	mov	x29, sp
   291cc:	stp	x19, x20, [sp, #16]
   291d0:	mov	x19, x0
   291d4:	mov	x20, x1
   291d8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   291dc:	ldr	x0, [x0, #1672]
   291e0:	ldr	x1, [x1, #24]
   291e4:	cmp	x1, x0
   291e8:	csel	x1, x1, x0, ge  // ge = tcont
   291ec:	ldr	x0, [x19, #32]
   291f0:	cmp	x1, x0
   291f4:	b.eq	29208 <PyInit__decimal@@Base+0xf068>  // b.none
   291f8:	ldrb	w3, [x19]
   291fc:	tbz	w3, #5, 2925c <PyInit__decimal@@Base+0xf0bc>
   29200:	cmp	x1, x0
   29204:	b.gt	29250 <PyInit__decimal@@Base+0xf0b0>
   29208:	ldrb	w0, [x19]
   2920c:	ldrb	w1, [x20]
   29210:	bfxil	w0, w1, #0, #4
   29214:	strb	w0, [x19]
   29218:	ldr	x0, [x20, #8]
   2921c:	str	x0, [x19, #8]
   29220:	ldr	x0, [x20, #16]
   29224:	str	x0, [x19, #16]
   29228:	ldr	x2, [x20, #24]
   2922c:	str	x2, [x19, #24]
   29230:	lsl	x2, x2, #3
   29234:	ldr	x1, [x20, #40]
   29238:	ldr	x0, [x19, #40]
   2923c:	bl	6470 <memcpy@plt>
   29240:	mov	w0, #0x1                   	// #1
   29244:	ldp	x19, x20, [sp, #16]
   29248:	ldp	x29, x30, [sp], #32
   2924c:	ret
   29250:	mov	x0, x19
   29254:	bl	25338 <PyInit__decimal@@Base+0xb198>
   29258:	b	29264 <PyInit__decimal@@Base+0xf0c4>
   2925c:	mov	x0, x19
   29260:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   29264:	cbnz	w0, 29208 <PyInit__decimal@@Base+0xf068>
   29268:	b	29244 <PyInit__decimal@@Base+0xf0a4>
   2926c:	mov	w0, #0x1                   	// #1
   29270:	ret
   29274:	stp	x29, x30, [sp, #-32]!
   29278:	mov	x29, sp
   2927c:	stp	x19, x20, [sp, #16]
   29280:	mov	x19, x0
   29284:	ldrb	w0, [x1]
   29288:	tst	w0, #0xc
   2928c:	b.ne	292a0 <PyInit__decimal@@Base+0xf100>  // b.any
   29290:	mov	w0, #0x0                   	// #0
   29294:	ldp	x19, x20, [sp, #16]
   29298:	ldp	x29, x30, [sp], #32
   2929c:	ret
   292a0:	mov	x20, x2
   292a4:	ubfx	x0, x0, #3, #1
   292a8:	ldr	w2, [x3]
   292ac:	orr	w0, w2, w0, lsl #8
   292b0:	str	w0, [x3]
   292b4:	mov	x2, x3
   292b8:	mov	x0, x19
   292bc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   292c0:	ldrb	w0, [x19]
   292c4:	and	w0, w0, #0xfffffff1
   292c8:	orr	w0, w0, #0x4
   292cc:	strb	w0, [x19]
   292d0:	mov	x1, x20
   292d4:	mov	x0, x19
   292d8:	bl	27838 <PyInit__decimal@@Base+0xd698>
   292dc:	mov	w0, #0x1                   	// #1
   292e0:	b	29294 <PyInit__decimal@@Base+0xf0f4>
   292e4:	stp	x29, x30, [sp, #-32]!
   292e8:	mov	x29, sp
   292ec:	stp	x19, x20, [sp, #16]
   292f0:	mov	x19, x0
   292f4:	mov	x0, x2
   292f8:	mov	x20, x3
   292fc:	ldrb	w2, [x1]
   29300:	ldrb	w3, [x0]
   29304:	orr	w5, w2, w3
   29308:	tst	w5, #0xc
   2930c:	b.ne	29320 <PyInit__decimal@@Base+0xf180>  // b.any
   29310:	mov	w0, #0x0                   	// #0
   29314:	ldp	x19, x20, [sp, #16]
   29318:	ldp	x29, x30, [sp], #32
   2931c:	ret
   29320:	tbz	w2, #3, 29360 <PyInit__decimal@@Base+0xf1c0>
   29324:	ldr	w0, [x4]
   29328:	orr	w0, w0, #0x100
   2932c:	str	w0, [x4]
   29330:	mov	x2, x4
   29334:	mov	x0, x19
   29338:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2933c:	ldrb	w0, [x19]
   29340:	and	w0, w0, #0xfffffff1
   29344:	orr	w0, w0, #0x4
   29348:	strb	w0, [x19]
   2934c:	mov	x1, x20
   29350:	mov	x0, x19
   29354:	bl	27838 <PyInit__decimal@@Base+0xd698>
   29358:	mov	w0, #0x1                   	// #1
   2935c:	b	29314 <PyInit__decimal@@Base+0xf174>
   29360:	tbz	w3, #3, 29378 <PyInit__decimal@@Base+0xf1d8>
   29364:	ldr	w1, [x4]
   29368:	orr	w1, w1, #0x100
   2936c:	str	w1, [x4]
   29370:	mov	x1, x0
   29374:	b	29330 <PyInit__decimal@@Base+0xf190>
   29378:	tst	x2, #0x4
   2937c:	csel	x1, x1, x0, ne  // ne = any
   29380:	b	29330 <PyInit__decimal@@Base+0xf190>
   29384:	sub	sp, sp, #0x2b0
   29388:	stp	x29, x30, [sp]
   2938c:	mov	x29, sp
   29390:	stp	x19, x20, [sp, #16]
   29394:	stp	x21, x22, [sp, #32]
   29398:	mov	x19, x0
   2939c:	mov	x20, x1
   293a0:	mov	x21, x2
   293a4:	mov	x22, x4
   293a8:	ldrb	w0, [x1]
   293ac:	tst	w0, #0xe
   293b0:	b.ne	293c0 <PyInit__decimal@@Base+0xf220>  // b.any
   293b4:	ldrb	w0, [x2]
   293b8:	tst	w0, #0xe
   293bc:	b.eq	2948c <PyInit__decimal@@Base+0xf2ec>  // b.none
   293c0:	mov	x4, x22
   293c4:	mov	x2, x21
   293c8:	mov	x1, x20
   293cc:	mov	x0, x19
   293d0:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   293d4:	cbz	w0, 293ec <PyInit__decimal@@Base+0xf24c>
   293d8:	ldp	x19, x20, [sp, #16]
   293dc:	ldp	x21, x22, [sp, #32]
   293e0:	ldp	x29, x30, [sp]
   293e4:	add	sp, sp, #0x2b0
   293e8:	ret
   293ec:	ldrb	w1, [x20]
   293f0:	tbnz	w1, #1, 29424 <PyInit__decimal@@Base+0xf284>
   293f4:	tst	w1, #0xe
   293f8:	b.ne	29470 <PyInit__decimal@@Base+0xf2d0>  // b.any
   293fc:	ldr	x0, [x20, #24]
   29400:	ldr	x2, [x20, #40]
   29404:	add	x0, x2, x0, lsl #3
   29408:	ldur	x0, [x0, #-8]
   2940c:	cbnz	x0, 29470 <PyInit__decimal@@Base+0xf2d0>
   29410:	mov	x2, x22
   29414:	mov	w1, #0x100                 	// #256
   29418:	mov	x0, x19
   2941c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   29420:	b	293d8 <PyInit__decimal@@Base+0xf238>
   29424:	ldrb	w0, [x21]
   29428:	tst	w0, #0xe
   2942c:	b.ne	29458 <PyInit__decimal@@Base+0xf2b8>  // b.any
   29430:	ldr	x2, [x21, #24]
   29434:	ldr	x3, [x21, #40]
   29438:	add	x2, x3, x2, lsl #3
   2943c:	ldur	x2, [x2, #-8]
   29440:	cbnz	x2, 29458 <PyInit__decimal@@Base+0xf2b8>
   29444:	mov	x2, x22
   29448:	mov	w1, #0x100                 	// #256
   2944c:	mov	x0, x19
   29450:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   29454:	b	293d8 <PyInit__decimal@@Base+0xf238>
   29458:	eor	w1, w1, w0
   2945c:	mov	w2, #0x2                   	// #2
   29460:	and	w1, w1, #0x1
   29464:	mov	x0, x19
   29468:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2946c:	b	293d8 <PyInit__decimal@@Base+0xf238>
   29470:	ldrb	w0, [x21]
   29474:	eor	w1, w1, w0
   29478:	mov	w2, #0x2                   	// #2
   2947c:	and	w1, w1, #0x1
   29480:	mov	x0, x19
   29484:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   29488:	b	293d8 <PyInit__decimal@@Base+0xf238>
   2948c:	stp	x23, x24, [sp, #48]
   29490:	stp	x25, x26, [sp, #64]
   29494:	ldr	x1, [x2, #24]
   29498:	ldr	x0, [x20, #24]
   2949c:	cmp	x1, x0
   294a0:	b.le	29574 <PyInit__decimal@@Base+0xf3d4>
   294a4:	mov	x25, x20
   294a8:	mov	x24, x2
   294ac:	ldr	x23, [x24, #24]
   294b0:	ldr	x26, [x25, #24]
   294b4:	add	x0, x23, x26
   294b8:	str	x0, [sp, #168]
   294bc:	cmp	x23, #0x1
   294c0:	b.eq	29580 <PyInit__decimal@@Base+0xf3e0>  // b.none
   294c4:	cmp	x0, #0x40
   294c8:	b.hi	298d4 <PyInit__decimal@@Base+0xf734>  // b.pmore
   294cc:	cmp	x23, #0x2
   294d0:	b.eq	29628 <PyInit__decimal@@Base+0xf488>  // b.none
   294d4:	mov	x1, #0x1                   	// #1
   294d8:	add	x3, sp, #0xb0
   294dc:	cbz	x0, 294f4 <PyInit__decimal@@Base+0xf354>
   294e0:	add	x2, x3, x1, lsl #3
   294e4:	stur	xzr, [x2, #-8]
   294e8:	cmp	x0, x1
   294ec:	add	x1, x1, #0x1
   294f0:	b.ne	294e0 <PyInit__decimal@@Base+0xf340>  // b.any
   294f4:	cmp	x26, #0x1
   294f8:	b.eq	2988c <PyInit__decimal@@Base+0xf6ec>  // b.none
   294fc:	mov	x4, x23
   29500:	mov	x3, x26
   29504:	ldr	x2, [x24, #40]
   29508:	ldr	x1, [x25, #40]
   2950c:	add	x0, sp, #0xb0
   29510:	bl	1b530 <PyInit__decimal@@Base+0x1390>
   29514:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   29518:	ldr	x0, [x0, #1672]
   2951c:	ldr	x1, [sp, #168]
   29520:	cmp	x1, x0
   29524:	csel	x1, x1, x0, ge  // ge = tcont
   29528:	ldr	x0, [x19, #32]
   2952c:	cmp	x1, x0
   29530:	b.eq	29544 <PyInit__decimal@@Base+0xf3a4>  // b.none
   29534:	ldrb	w2, [x19]
   29538:	tbz	w2, #5, 298b8 <PyInit__decimal@@Base+0xf718>
   2953c:	cmp	x1, x0
   29540:	b.gt	298a8 <PyInit__decimal@@Base+0xf708>
   29544:	ldr	x2, [sp, #168]
   29548:	add	x1, sp, #0xb0
   2954c:	mov	x0, #0x0                   	// #0
   29550:	cbz	x2, 2994c <PyInit__decimal@@Base+0xf7ac>
   29554:	ldr	x3, [x1], #8
   29558:	ldr	x2, [x19, #40]
   2955c:	str	x3, [x2, x0, lsl #3]
   29560:	add	x0, x0, #0x1
   29564:	ldr	x2, [sp, #168]
   29568:	cmp	x2, x0
   2956c:	b.hi	29554 <PyInit__decimal@@Base+0xf3b4>  // b.pmore
   29570:	b	2994c <PyInit__decimal@@Base+0xf7ac>
   29574:	mov	x25, x2
   29578:	mov	x24, x20
   2957c:	b	294ac <PyInit__decimal@@Base+0xf30c>
   29580:	ldr	x6, [x19, #40]
   29584:	ldr	x0, [x24, #40]
   29588:	ldr	x2, [x0]
   2958c:	ldr	x0, [x25, #40]
   29590:	ldr	x0, [x0]
   29594:	mul	x4, x2, x0
   29598:	umulh	x2, x2, x0
   2959c:	mov	x0, x2
   295a0:	mov	x3, #0x89e80000            	// #2313682944
   295a4:	movk	x3, #0x2304, lsl #32
   295a8:	movk	x3, #0x8ac7, lsl #48
   295ac:	and	x3, x3, x4, asr #63
   295b0:	add	x3, x3, x4
   295b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   295b8:	ldr	x5, [x1, #3504]
   295bc:	add	x2, x2, x4, lsr #63
   295c0:	umulh	x1, x5, x2
   295c4:	madd	x2, x5, x2, x3
   295c8:	cmp	x3, x2
   295cc:	cinc	x1, x1, hi  // hi = pmore
   295d0:	add	x1, x0, x1
   295d4:	mvn	x1, x1
   295d8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   295dc:	ldr	x2, [x2, #3312]
   295e0:	umulh	x3, x1, x2
   295e4:	madd	x2, x1, x2, x4
   295e8:	cmp	x4, x2
   295ec:	cinc	x3, x3, hi  // hi = pmore
   295f0:	mov	x4, #0x76180000            	// #1981284352
   295f4:	movk	x4, #0xdcfb, lsl #32
   295f8:	movk	x4, #0x7538, lsl #48
   295fc:	add	x0, x0, x4
   29600:	add	x0, x0, x3
   29604:	sub	x1, x0, x1
   29608:	str	x1, [x6, #8]
   2960c:	mov	x1, #0x89e80000            	// #2313682944
   29610:	movk	x1, #0x2304, lsl #32
   29614:	movk	x1, #0x8ac7, lsl #48
   29618:	and	x0, x0, x1
   2961c:	add	x0, x0, x2
   29620:	str	x0, [x6]
   29624:	b	2994c <PyInit__decimal@@Base+0xf7ac>
   29628:	ldr	x5, [x24, #40]
   2962c:	ldr	x4, [x25, #40]
   29630:	ldr	x2, [x5]
   29634:	ldr	x0, [x4]
   29638:	mul	x7, x2, x0
   2963c:	umulh	x2, x2, x0
   29640:	mov	x0, x2
   29644:	mov	x6, #0x89e80000            	// #2313682944
   29648:	movk	x6, #0x2304, lsl #32
   2964c:	movk	x6, #0x8ac7, lsl #48
   29650:	and	x6, x6, x7, asr #63
   29654:	add	x6, x6, x7
   29658:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2965c:	ldr	x3, [x1, #3504]
   29660:	add	x2, x2, x7, lsr #63
   29664:	umulh	x1, x2, x3
   29668:	madd	x2, x2, x3, x6
   2966c:	cmp	x6, x2
   29670:	cinc	x1, x1, hi  // hi = pmore
   29674:	add	x1, x0, x1
   29678:	mvn	x1, x1
   2967c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29680:	ldr	x2, [x2, #3312]
   29684:	umulh	x6, x1, x2
   29688:	madd	x2, x1, x2, x7
   2968c:	cmp	x7, x2
   29690:	cinc	x6, x6, hi  // hi = pmore
   29694:	mov	x7, #0x76180000            	// #1981284352
   29698:	movk	x7, #0xdcfb, lsl #32
   2969c:	movk	x7, #0x7538, lsl #48
   296a0:	add	x0, x0, x7
   296a4:	add	x0, x0, x6
   296a8:	sub	x1, x0, x1
   296ac:	str	x1, [sp, #184]
   296b0:	mov	x6, #0x89e80000            	// #2313682944
   296b4:	movk	x6, #0x2304, lsl #32
   296b8:	movk	x6, #0x8ac7, lsl #48
   296bc:	and	x0, x0, x6
   296c0:	add	x0, x0, x2
   296c4:	str	x0, [sp, #176]
   296c8:	ldr	x2, [x5, #8]
   296cc:	ldr	x6, [x4]
   296d0:	umulh	x0, x2, x6
   296d4:	madd	x2, x2, x6, x1
   296d8:	cmp	x2, x1
   296dc:	cinc	x0, x0, cc  // cc = lo, ul, last
   296e0:	mov	x6, #0x89e80000            	// #2313682944
   296e4:	movk	x6, #0x2304, lsl #32
   296e8:	movk	x6, #0x8ac7, lsl #48
   296ec:	and	x6, x6, x2, asr #63
   296f0:	add	x6, x6, x2
   296f4:	add	x7, x0, x2, lsr #63
   296f8:	umulh	x1, x7, x3
   296fc:	madd	x7, x7, x3, x6
   29700:	cmp	x6, x7
   29704:	cinc	x1, x1, hi  // hi = pmore
   29708:	add	x1, x0, x1
   2970c:	mvn	x1, x1
   29710:	adrp	x6, 42000 <PyInit__decimal@@Base+0x27e60>
   29714:	ldr	x7, [x6, #3312]
   29718:	umulh	x6, x1, x7
   2971c:	madd	x7, x1, x7, x2
   29720:	cmp	x2, x7
   29724:	cinc	x2, x6, hi  // hi = pmore
   29728:	mov	x6, #0x76180000            	// #1981284352
   2972c:	movk	x6, #0xdcfb, lsl #32
   29730:	movk	x6, #0x7538, lsl #48
   29734:	add	x0, x0, x6
   29738:	add	x0, x0, x2
   2973c:	sub	x6, x0, x1
   29740:	str	x6, [sp, #192]
   29744:	mov	x1, #0x89e80000            	// #2313682944
   29748:	movk	x1, #0x2304, lsl #32
   2974c:	movk	x1, #0x8ac7, lsl #48
   29750:	and	x0, x0, x1
   29754:	add	x0, x0, x7
   29758:	str	x0, [sp, #184]
   2975c:	cmp	x26, #0x1
   29760:	b.eq	29514 <PyInit__decimal@@Base+0xf374>  // b.none
   29764:	ldr	x2, [x5]
   29768:	ldr	x7, [x4, #8]
   2976c:	umulh	x1, x2, x7
   29770:	madd	x2, x2, x7, x0
   29774:	cmp	x2, x0
   29778:	cinc	x0, x1, cc  // cc = lo, ul, last
   2977c:	mov	x7, #0x89e80000            	// #2313682944
   29780:	movk	x7, #0x2304, lsl #32
   29784:	movk	x7, #0x8ac7, lsl #48
   29788:	and	x7, x7, x2, asr #63
   2978c:	add	x7, x7, x2
   29790:	add	x8, x0, x2, lsr #63
   29794:	umulh	x1, x8, x3
   29798:	madd	x8, x8, x3, x7
   2979c:	cmp	x7, x8
   297a0:	cinc	x1, x1, hi  // hi = pmore
   297a4:	add	x1, x0, x1
   297a8:	mvn	x1, x1
   297ac:	adrp	x7, 42000 <PyInit__decimal@@Base+0x27e60>
   297b0:	ldr	x7, [x7, #3312]
   297b4:	umulh	x8, x1, x7
   297b8:	madd	x7, x1, x7, x2
   297bc:	cmp	x2, x7
   297c0:	cinc	x2, x8, hi  // hi = pmore
   297c4:	mov	x8, #0x76180000            	// #1981284352
   297c8:	movk	x8, #0xdcfb, lsl #32
   297cc:	movk	x8, #0x7538, lsl #48
   297d0:	add	x0, x0, x8
   297d4:	add	x0, x0, x2
   297d8:	sub	x2, x0, x1
   297dc:	str	x2, [sp, #200]
   297e0:	mov	x1, #0x89e80000            	// #2313682944
   297e4:	movk	x1, #0x2304, lsl #32
   297e8:	movk	x1, #0x8ac7, lsl #48
   297ec:	and	x0, x0, x1
   297f0:	add	x0, x0, x7
   297f4:	str	x0, [sp, #184]
   297f8:	ldr	x1, [x5, #8]
   297fc:	ldr	x4, [x4, #8]
   29800:	umulh	x0, x1, x4
   29804:	madd	x1, x1, x4, x6
   29808:	cmp	x1, x6
   2980c:	cinc	x0, x0, cc  // cc = lo, ul, last
   29810:	adds	x1, x1, x2
   29814:	cinc	x0, x0, cs  // cs = hs, nlast
   29818:	mov	x4, #0x89e80000            	// #2313682944
   2981c:	movk	x4, #0x2304, lsl #32
   29820:	movk	x4, #0x8ac7, lsl #48
   29824:	and	x4, x4, x1, asr #63
   29828:	add	x4, x4, x1
   2982c:	add	x5, x0, x1, lsr #63
   29830:	umulh	x2, x5, x3
   29834:	madd	x3, x5, x3, x4
   29838:	cmp	x4, x3
   2983c:	cinc	x2, x2, hi  // hi = pmore
   29840:	add	x2, x0, x2
   29844:	mvn	x2, x2
   29848:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   2984c:	ldr	x3, [x3, #3312]
   29850:	umulh	x4, x2, x3
   29854:	madd	x3, x2, x3, x1
   29858:	cmp	x1, x3
   2985c:	cinc	x1, x4, hi  // hi = pmore
   29860:	add	x0, x0, x8
   29864:	add	x0, x0, x1
   29868:	sub	x2, x0, x2
   2986c:	str	x2, [sp, #200]
   29870:	mov	x1, #0x89e80000            	// #2313682944
   29874:	movk	x1, #0x2304, lsl #32
   29878:	movk	x1, #0x8ac7, lsl #48
   2987c:	and	x0, x0, x1
   29880:	add	x0, x0, x3
   29884:	str	x0, [sp, #192]
   29888:	b	29514 <PyInit__decimal@@Base+0xf374>
   2988c:	ldr	x0, [x25, #40]
   29890:	ldr	x3, [x0]
   29894:	mov	x2, x23
   29898:	ldr	x1, [x24, #40]
   2989c:	add	x0, sp, #0xb0
   298a0:	bl	1b450 <PyInit__decimal@@Base+0x12b0>
   298a4:	b	29514 <PyInit__decimal@@Base+0xf374>
   298a8:	mov	x2, x22
   298ac:	mov	x0, x19
   298b0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   298b4:	b	298c4 <PyInit__decimal@@Base+0xf724>
   298b8:	mov	x2, x22
   298bc:	mov	x0, x19
   298c0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   298c4:	cbnz	w0, 29544 <PyInit__decimal@@Base+0xf3a4>
   298c8:	ldp	x23, x24, [sp, #48]
   298cc:	ldp	x25, x26, [sp, #64]
   298d0:	b	293d8 <PyInit__decimal@@Base+0xf238>
   298d4:	stp	x27, x28, [sp, #80]
   298d8:	cmp	x26, #0x100
   298dc:	b.le	29a48 <PyInit__decimal@@Base+0xf8a8>
   298e0:	cmp	x0, #0x400
   298e4:	b.ls	29a94 <PyInit__decimal@@Base+0xf8f4>  // b.plast
   298e8:	mov	x1, #0x300000000           	// #12884901888
   298ec:	cmp	x0, x1
   298f0:	b.hi	29ff8 <PyInit__decimal@@Base+0xfe58>  // b.pmore
   298f4:	add	x4, sp, #0xa8
   298f8:	mov	x3, x26
   298fc:	mov	x2, x23
   29900:	ldr	x1, [x25, #40]
   29904:	ldr	x0, [x24, #40]
   29908:	bl	257f4 <PyInit__decimal@@Base+0xb654>
   2990c:	mov	x27, x0
   29910:	cbz	x27, 2a594 <PyInit__decimal@@Base+0x103f4>
   29914:	ldrb	w0, [x19]
   29918:	tst	w0, #0xe0
   2991c:	b.ne	29930 <PyInit__decimal@@Base+0xf790>  // b.any
   29920:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   29924:	ldr	x1, [x0, #1704]
   29928:	ldr	x0, [x19, #40]
   2992c:	blr	x1
   29930:	str	x27, [x19, #40]
   29934:	ldr	x0, [sp, #168]
   29938:	str	x0, [x19, #32]
   2993c:	ldrb	w0, [x19]
   29940:	and	w0, w0, #0x1f
   29944:	strb	w0, [x19]
   29948:	ldp	x27, x28, [sp, #80]
   2994c:	ldrb	w3, [x21]
   29950:	ldrb	w0, [x20]
   29954:	eor	w3, w3, w0
   29958:	and	w0, w3, #0x1
   2995c:	ldrb	w3, [x19]
   29960:	and	w3, w3, #0xf0
   29964:	orr	w3, w3, w0
   29968:	strb	w3, [x19]
   2996c:	ldr	x0, [x24, #8]
   29970:	ldr	x1, [x25, #8]
   29974:	add	x0, x0, x1
   29978:	str	x0, [x19, #8]
   2997c:	ldr	x2, [x19, #40]
   29980:	ldr	x1, [sp, #168]
   29984:	sub	x2, x2, #0x8
   29988:	cmp	x1, #0x1
   2998c:	b.le	299a4 <PyInit__decimal@@Base+0xf804>
   29990:	ldr	x0, [x2, x1, lsl #3]
   29994:	cbnz	x0, 299a4 <PyInit__decimal@@Base+0xf804>
   29998:	sub	x1, x1, #0x1
   2999c:	cmp	x1, #0x1
   299a0:	b.ne	29990 <PyInit__decimal@@Base+0xf7f0>  // b.any
   299a4:	str	x1, [x19, #24]
   299a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   299ac:	ldr	x0, [x0, #1672]
   299b0:	cmp	x0, x1
   299b4:	csel	x1, x0, x1, ge  // ge = tcont
   299b8:	ldr	x0, [x19, #32]
   299bc:	cmp	x1, x0
   299c0:	b.eq	299d0 <PyInit__decimal@@Base+0xf830>  // b.none
   299c4:	tbz	w3, #5, 2a5c4 <PyInit__decimal@@Base+0x10424>
   299c8:	cmp	x1, x0
   299cc:	b.gt	2a5b4 <PyInit__decimal@@Base+0x10414>
   299d0:	ldr	x0, [x19, #24]
   299d4:	ldr	x1, [x19, #40]
   299d8:	add	x1, x1, x0, lsl #3
   299dc:	ldur	x1, [x1, #-8]
   299e0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   299e4:	ldr	x2, [x2, #3584]
   299e8:	cmp	x1, x2
   299ec:	b.cs	2a640 <PyInit__decimal@@Base+0x104a0>  // b.hs, b.nlast
   299f0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   299f4:	ldr	x2, [x2, #3544]
   299f8:	cmp	x1, x2
   299fc:	b.cs	2a5ec <PyInit__decimal@@Base+0x1044c>  // b.hs, b.nlast
   29a00:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29a04:	ldr	x2, [x2, #3528]
   29a08:	cmp	x1, x2
   29a0c:	b.cs	2a5d4 <PyInit__decimal@@Base+0x10434>  // b.hs, b.nlast
   29a10:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29a14:	ldr	x2, [x2, #3520]
   29a18:	cmp	x1, x2
   29a1c:	cset	w2, cs  // cs = hs, nlast
   29a20:	add	w2, w2, #0x1
   29a24:	sub	x0, x0, #0x1
   29a28:	add	x1, x0, x0, lsl #2
   29a2c:	lsl	x1, x1, #2
   29a30:	sub	x0, x1, x0
   29a34:	add	x0, x0, w2, sxtw
   29a38:	str	x0, [x19, #16]
   29a3c:	ldp	x23, x24, [sp, #48]
   29a40:	ldp	x25, x26, [sp, #64]
   29a44:	b	293d8 <PyInit__decimal@@Base+0xf238>
   29a48:	mov	x1, #0x8                   	// #8
   29a4c:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   29a50:	mov	x27, x0
   29a54:	cbz	x0, 2a594 <PyInit__decimal@@Base+0x103f4>
   29a58:	ldr	x3, [x25, #24]
   29a5c:	cmp	x3, #0x1
   29a60:	b.eq	29a78 <PyInit__decimal@@Base+0xf8d8>  // b.none
   29a64:	ldr	x4, [x24, #24]
   29a68:	ldr	x2, [x24, #40]
   29a6c:	ldr	x1, [x25, #40]
   29a70:	bl	1b530 <PyInit__decimal@@Base+0x1390>
   29a74:	b	29914 <PyInit__decimal@@Base+0xf774>
   29a78:	ldr	x0, [x25, #40]
   29a7c:	ldr	x3, [x0]
   29a80:	ldr	x2, [x24, #24]
   29a84:	ldr	x1, [x24, #40]
   29a88:	mov	x0, x27
   29a8c:	bl	1b450 <PyInit__decimal@@Base+0x12b0>
   29a90:	b	29914 <PyInit__decimal@@Base+0xf774>
   29a94:	ldr	x0, [x24, #40]
   29a98:	str	x0, [sp, #96]
   29a9c:	ldr	x0, [x25, #40]
   29aa0:	str	x0, [sp, #104]
   29aa4:	mvn	x0, x26
   29aa8:	cmp	x23, x0
   29aac:	b.hi	29b2c <PyInit__decimal@@Base+0xf98c>  // b.pmore
   29ab0:	add	x0, x23, x26
   29ab4:	cmn	x0, #0x1
   29ab8:	b.eq	29b78 <PyInit__decimal@@Base+0xf9d8>  // b.none
   29abc:	add	x1, x0, #0x1
   29ac0:	add	x0, x23, #0x1
   29ac4:	lsr	x0, x0, #1
   29ac8:	str	x0, [sp, #128]
   29acc:	add	x28, x0, #0x1
   29ad0:	lsr	x2, x28, #63
   29ad4:	lsl	x0, x28, #1
   29ad8:	adds	x0, x0, x28
   29adc:	cinc	x2, x2, cs  // cs = hs, nlast
   29ae0:	str	x2, [sp, #112]
   29ae4:	cbnz	x2, 29bc4 <PyInit__decimal@@Base+0xfa24>
   29ae8:	cmp	x0, x1
   29aec:	csel	x0, x0, x1, cs  // cs = hs, nlast
   29af0:	str	x0, [sp, #168]
   29af4:	mov	x1, #0x8                   	// #8
   29af8:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   29afc:	mov	x27, x0
   29b00:	cbz	x0, 2a594 <PyInit__decimal@@Base+0x103f4>
   29b04:	cmp	x23, #0x10
   29b08:	b.hi	29c10 <PyInit__decimal@@Base+0xfa70>  // b.pmore
   29b0c:	mov	x5, x26
   29b10:	mov	x4, x23
   29b14:	mov	x3, #0x0                   	// #0
   29b18:	ldr	x2, [sp, #104]
   29b1c:	ldr	x1, [sp, #96]
   29b20:	mov	x0, x27
   29b24:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   29b28:	b	29914 <PyInit__decimal@@Base+0xf774>
   29b2c:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29b30:	ldr	x19, [x19, #3904]
   29b34:	mov	w3, #0x253                 	// #595
   29b38:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29b3c:	add	x2, x2, #0xc68
   29b40:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29b44:	add	x1, x1, #0xca8
   29b48:	ldr	x0, [x19]
   29b4c:	bl	6a70 <fprintf@plt>
   29b50:	ldr	x3, [x19]
   29b54:	mov	x2, #0x29                  	// #41
   29b58:	mov	x1, #0x1                   	// #1
   29b5c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29b60:	add	x0, x0, #0x2f8
   29b64:	bl	6930 <fwrite@plt>
   29b68:	ldr	x1, [x19]
   29b6c:	mov	w0, #0xa                   	// #10
   29b70:	bl	65b0 <fputc@plt>
   29b74:	bl	67c0 <abort@plt>
   29b78:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29b7c:	ldr	x19, [x19, #3904]
   29b80:	mov	w3, #0x253                 	// #595
   29b84:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29b88:	add	x2, x2, #0xc68
   29b8c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29b90:	add	x1, x1, #0xca8
   29b94:	ldr	x0, [x19]
   29b98:	bl	6a70 <fprintf@plt>
   29b9c:	ldr	x3, [x19]
   29ba0:	mov	x2, #0x29                  	// #41
   29ba4:	mov	x1, #0x1                   	// #1
   29ba8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29bac:	add	x0, x0, #0x2f8
   29bb0:	bl	6930 <fwrite@plt>
   29bb4:	ldr	x1, [x19]
   29bb8:	mov	w0, #0xa                   	// #10
   29bbc:	bl	65b0 <fputc@plt>
   29bc0:	bl	67c0 <abort@plt>
   29bc4:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29bc8:	ldr	x19, [x19, #3904]
   29bcc:	mov	w3, #0x26c                 	// #620
   29bd0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29bd4:	add	x2, x2, #0xc68
   29bd8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29bdc:	add	x1, x1, #0xca8
   29be0:	ldr	x0, [x19]
   29be4:	bl	6a70 <fprintf@plt>
   29be8:	ldr	x3, [x19]
   29bec:	mov	x2, #0x29                  	// #41
   29bf0:	mov	x1, #0x1                   	// #1
   29bf4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29bf8:	add	x0, x0, #0x328
   29bfc:	bl	6930 <fwrite@plt>
   29c00:	ldr	x1, [x19]
   29c04:	mov	w0, #0xa                   	// #10
   29c08:	bl	65b0 <fputc@plt>
   29c0c:	bl	67c0 <abort@plt>
   29c10:	lsl	x0, x28, #1
   29c14:	str	x0, [sp, #120]
   29c18:	cmp	x28, #0x10
   29c1c:	b.hi	29c64 <PyInit__decimal@@Base+0xfac4>  // b.pmore
   29c20:	mov	x1, #0x8                   	// #8
   29c24:	ldr	x0, [sp, #120]
   29c28:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   29c2c:	mov	x28, x0
   29c30:	cbz	x0, 29fe4 <PyInit__decimal@@Base+0xfe44>
   29c34:	mov	x5, x26
   29c38:	mov	x4, x23
   29c3c:	mov	x3, x0
   29c40:	ldr	x2, [sp, #104]
   29c44:	ldr	x1, [sp, #96]
   29c48:	mov	x0, x27
   29c4c:	bl	254ec <PyInit__decimal@@Base+0xb34c>
   29c50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   29c54:	ldr	x1, [x0, #1704]
   29c58:	mov	x0, x28
   29c5c:	blr	x1
   29c60:	b	29914 <PyInit__decimal@@Base+0xf774>
   29c64:	ldr	x0, [sp, #128]
   29c68:	add	x0, x0, #0x2
   29c6c:	lsr	x0, x0, #1
   29c70:	add	x1, x0, #0x1
   29c74:	lsl	x2, x1, #1
   29c78:	str	x2, [sp, #128]
   29c7c:	cmp	x1, #0x10
   29c80:	b.hi	29cb4 <PyInit__decimal@@Base+0xfb14>  // b.pmore
   29c84:	ldr	x0, [sp, #128]
   29c88:	ldr	x1, [sp, #112]
   29c8c:	add	x0, x0, x1
   29c90:	mvn	x1, x0
   29c94:	ldr	x2, [sp, #120]
   29c98:	cmp	x1, x2
   29c9c:	b.cc	29f98 <PyInit__decimal@@Base+0xfdf8>  // b.lo, b.ul, b.last
   29ca0:	ldr	x1, [sp, #120]
   29ca4:	adds	x0, x1, x0
   29ca8:	str	x0, [sp, #120]
   29cac:	b.ne	29c20 <PyInit__decimal@@Base+0xfa80>  // b.any
   29cb0:	b	29b0c <PyInit__decimal@@Base+0xf96c>
   29cb4:	add	x0, x0, #0x2
   29cb8:	lsr	x0, x0, #1
   29cbc:	add	x1, x0, #0x1
   29cc0:	lsl	x2, x1, #1
   29cc4:	str	x2, [sp, #112]
   29cc8:	cmp	x1, #0x10
   29ccc:	b.ls	29c84 <PyInit__decimal@@Base+0xfae4>  // b.plast
   29cd0:	add	x0, x0, #0x2
   29cd4:	lsr	x0, x0, #1
   29cd8:	add	x1, x0, #0x1
   29cdc:	lsl	x2, x1, #1
   29ce0:	str	x2, [sp, #136]
   29ce4:	cmp	x1, #0x10
   29ce8:	b.hi	29d58 <PyInit__decimal@@Base+0xfbb8>  // b.pmore
   29cec:	ldr	x0, [sp, #112]
   29cf0:	ldr	x1, [sp, #136]
   29cf4:	add	x0, x0, x1
   29cf8:	str	x0, [sp, #112]
   29cfc:	mvn	x0, x0
   29d00:	ldr	x1, [sp, #128]
   29d04:	cmp	x0, x1
   29d08:	b.cs	29c84 <PyInit__decimal@@Base+0xfae4>  // b.hs, b.nlast
   29d0c:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29d10:	ldr	x19, [x19, #3904]
   29d14:	mov	w3, #0x253                 	// #595
   29d18:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29d1c:	add	x2, x2, #0xc68
   29d20:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29d24:	add	x1, x1, #0xca8
   29d28:	ldr	x0, [x19]
   29d2c:	bl	6a70 <fprintf@plt>
   29d30:	ldr	x3, [x19]
   29d34:	mov	x2, #0x29                  	// #41
   29d38:	mov	x1, #0x1                   	// #1
   29d3c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29d40:	add	x0, x0, #0x2f8
   29d44:	bl	6930 <fwrite@plt>
   29d48:	ldr	x1, [x19]
   29d4c:	mov	w0, #0xa                   	// #10
   29d50:	bl	65b0 <fputc@plt>
   29d54:	bl	67c0 <abort@plt>
   29d58:	add	x0, x0, #0x2
   29d5c:	lsr	x0, x0, #1
   29d60:	add	x1, x0, #0x1
   29d64:	lsl	x2, x1, #1
   29d68:	str	x2, [sp, #144]
   29d6c:	cmp	x1, #0x10
   29d70:	b.hi	29de0 <PyInit__decimal@@Base+0xfc40>  // b.pmore
   29d74:	ldr	x0, [sp, #136]
   29d78:	ldr	x1, [sp, #144]
   29d7c:	add	x0, x0, x1
   29d80:	str	x0, [sp, #136]
   29d84:	mvn	x0, x0
   29d88:	ldr	x1, [sp, #112]
   29d8c:	cmp	x0, x1
   29d90:	b.cs	29cec <PyInit__decimal@@Base+0xfb4c>  // b.hs, b.nlast
   29d94:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29d98:	ldr	x19, [x19, #3904]
   29d9c:	mov	w3, #0x253                 	// #595
   29da0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29da4:	add	x2, x2, #0xc68
   29da8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29dac:	add	x1, x1, #0xca8
   29db0:	ldr	x0, [x19]
   29db4:	bl	6a70 <fprintf@plt>
   29db8:	ldr	x3, [x19]
   29dbc:	mov	x2, #0x29                  	// #41
   29dc0:	mov	x1, #0x1                   	// #1
   29dc4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29dc8:	add	x0, x0, #0x2f8
   29dcc:	bl	6930 <fwrite@plt>
   29dd0:	ldr	x1, [x19]
   29dd4:	mov	w0, #0xa                   	// #10
   29dd8:	bl	65b0 <fputc@plt>
   29ddc:	bl	67c0 <abort@plt>
   29de0:	add	x0, x0, #0x2
   29de4:	lsr	x0, x0, #1
   29de8:	add	x1, x0, #0x1
   29dec:	lsl	x28, x1, #1
   29df0:	cmp	x1, #0x10
   29df4:	b.hi	29e60 <PyInit__decimal@@Base+0xfcc0>  // b.pmore
   29df8:	ldr	x0, [sp, #144]
   29dfc:	add	x0, x0, x28
   29e00:	str	x0, [sp, #144]
   29e04:	mvn	x0, x0
   29e08:	ldr	x1, [sp, #136]
   29e0c:	cmp	x0, x1
   29e10:	b.cs	29d74 <PyInit__decimal@@Base+0xfbd4>  // b.hs, b.nlast
   29e14:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29e18:	ldr	x19, [x19, #3904]
   29e1c:	mov	w3, #0x253                 	// #595
   29e20:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29e24:	add	x2, x2, #0xc68
   29e28:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29e2c:	add	x1, x1, #0xca8
   29e30:	ldr	x0, [x19]
   29e34:	bl	6a70 <fprintf@plt>
   29e38:	ldr	x3, [x19]
   29e3c:	mov	x2, #0x29                  	// #41
   29e40:	mov	x1, #0x1                   	// #1
   29e44:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29e48:	add	x0, x0, #0x2f8
   29e4c:	bl	6930 <fwrite@plt>
   29e50:	ldr	x1, [x19]
   29e54:	mov	w0, #0xa                   	// #10
   29e58:	bl	65b0 <fputc@plt>
   29e5c:	bl	67c0 <abort@plt>
   29e60:	add	x0, x0, #0x2
   29e64:	lsr	x0, x0, #1
   29e68:	add	x0, x0, #0x1
   29e6c:	lsl	x1, x0, #1
   29e70:	str	x1, [sp, #152]
   29e74:	mov	x1, #0x10                  	// #16
   29e78:	bl	25f84 <PyInit__decimal@@Base+0xbde4>
   29e7c:	mvn	x1, x0
   29e80:	ldr	x2, [sp, #152]
   29e84:	cmp	x1, x2
   29e88:	b.cc	29f00 <PyInit__decimal@@Base+0xfd60>  // b.lo, b.ul, b.last
   29e8c:	ldr	x1, [sp, #152]
   29e90:	add	x0, x0, x1
   29e94:	mvn	x1, x0
   29e98:	cmp	x1, x28
   29e9c:	b.cc	29f4c <PyInit__decimal@@Base+0xfdac>  // b.lo, b.ul, b.last
   29ea0:	add	x28, x28, x0
   29ea4:	mvn	x0, x28
   29ea8:	ldr	x1, [sp, #144]
   29eac:	cmp	x0, x1
   29eb0:	b.cs	29df8 <PyInit__decimal@@Base+0xfc58>  // b.hs, b.nlast
   29eb4:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29eb8:	ldr	x19, [x19, #3904]
   29ebc:	mov	w3, #0x253                 	// #595
   29ec0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29ec4:	add	x2, x2, #0xc68
   29ec8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29ecc:	add	x1, x1, #0xca8
   29ed0:	ldr	x0, [x19]
   29ed4:	bl	6a70 <fprintf@plt>
   29ed8:	ldr	x3, [x19]
   29edc:	mov	x2, #0x29                  	// #41
   29ee0:	mov	x1, #0x1                   	// #1
   29ee4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29ee8:	add	x0, x0, #0x2f8
   29eec:	bl	6930 <fwrite@plt>
   29ef0:	ldr	x1, [x19]
   29ef4:	mov	w0, #0xa                   	// #10
   29ef8:	bl	65b0 <fputc@plt>
   29efc:	bl	67c0 <abort@plt>
   29f00:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29f04:	ldr	x19, [x19, #3904]
   29f08:	mov	w3, #0x253                 	// #595
   29f0c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29f10:	add	x2, x2, #0xc68
   29f14:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29f18:	add	x1, x1, #0xca8
   29f1c:	ldr	x0, [x19]
   29f20:	bl	6a70 <fprintf@plt>
   29f24:	ldr	x3, [x19]
   29f28:	mov	x2, #0x29                  	// #41
   29f2c:	mov	x1, #0x1                   	// #1
   29f30:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29f34:	add	x0, x0, #0x2f8
   29f38:	bl	6930 <fwrite@plt>
   29f3c:	ldr	x1, [x19]
   29f40:	mov	w0, #0xa                   	// #10
   29f44:	bl	65b0 <fputc@plt>
   29f48:	bl	67c0 <abort@plt>
   29f4c:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29f50:	ldr	x19, [x19, #3904]
   29f54:	mov	w3, #0x253                 	// #595
   29f58:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29f5c:	add	x2, x2, #0xc68
   29f60:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29f64:	add	x1, x1, #0xca8
   29f68:	ldr	x0, [x19]
   29f6c:	bl	6a70 <fprintf@plt>
   29f70:	ldr	x3, [x19]
   29f74:	mov	x2, #0x29                  	// #41
   29f78:	mov	x1, #0x1                   	// #1
   29f7c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29f80:	add	x0, x0, #0x2f8
   29f84:	bl	6930 <fwrite@plt>
   29f88:	ldr	x1, [x19]
   29f8c:	mov	w0, #0xa                   	// #10
   29f90:	bl	65b0 <fputc@plt>
   29f94:	bl	67c0 <abort@plt>
   29f98:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   29f9c:	ldr	x19, [x19, #3904]
   29fa0:	mov	w3, #0x253                 	// #595
   29fa4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   29fa8:	add	x2, x2, #0xc68
   29fac:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   29fb0:	add	x1, x1, #0xca8
   29fb4:	ldr	x0, [x19]
   29fb8:	bl	6a70 <fprintf@plt>
   29fbc:	ldr	x3, [x19]
   29fc0:	mov	x2, #0x29                  	// #41
   29fc4:	mov	x1, #0x1                   	// #1
   29fc8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   29fcc:	add	x0, x0, #0x2f8
   29fd0:	bl	6930 <fwrite@plt>
   29fd4:	ldr	x1, [x19]
   29fd8:	mov	w0, #0xa                   	// #10
   29fdc:	bl	65b0 <fputc@plt>
   29fe0:	bl	67c0 <abort@plt>
   29fe4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   29fe8:	ldr	x1, [x0, #1704]
   29fec:	mov	x0, x27
   29ff0:	blr	x1
   29ff4:	b	2a594 <PyInit__decimal@@Base+0x103f4>
   29ff8:	ldr	x0, [x24, #40]
   29ffc:	str	x0, [sp, #96]
   2a000:	ldr	x0, [x25, #40]
   2a004:	str	x0, [sp, #104]
   2a008:	mvn	x0, x26
   2a00c:	cmp	x23, x0
   2a010:	b.hi	2a0a0 <PyInit__decimal@@Base+0xff00>  // b.pmore
   2a014:	add	x0, x23, x26
   2a018:	cmn	x0, #0x1
   2a01c:	b.eq	2a0ec <PyInit__decimal@@Base+0xff4c>  // b.none
   2a020:	add	x1, x0, #0x1
   2a024:	add	x0, x23, #0x1
   2a028:	lsr	x0, x0, #1
   2a02c:	str	x0, [sp, #128]
   2a030:	add	x28, x0, #0x1
   2a034:	lsr	x2, x28, #63
   2a038:	lsl	x0, x28, #1
   2a03c:	adds	x0, x0, x28
   2a040:	cinc	x2, x2, cs  // cs = hs, nlast
   2a044:	str	x2, [sp, #112]
   2a048:	cbnz	x2, 2a138 <PyInit__decimal@@Base+0xff98>
   2a04c:	cmp	x0, x1
   2a050:	csel	x0, x0, x1, cs  // cs = hs, nlast
   2a054:	str	x0, [sp, #168]
   2a058:	mov	x1, #0x8                   	// #8
   2a05c:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   2a060:	mov	x27, x0
   2a064:	cbz	x0, 2a594 <PyInit__decimal@@Base+0x103f4>
   2a068:	mov	x0, #0x180000000           	// #6442450944
   2a06c:	cmp	x23, x0
   2a070:	b.hi	2a184 <PyInit__decimal@@Base+0xffe4>  // b.pmore
   2a074:	mov	x5, x26
   2a078:	mov	x4, x23
   2a07c:	mov	x3, #0x0                   	// #0
   2a080:	ldr	x2, [sp, #104]
   2a084:	ldr	x1, [sp, #96]
   2a088:	mov	x0, x27
   2a08c:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   2a090:	cbz	w0, 2a70c <PyInit__decimal@@Base+0x1056c>
   2a094:	mov	x28, #0x0                   	// #0
   2a098:	cbz	x28, 29914 <PyInit__decimal@@Base+0xf774>
   2a09c:	b	2a1e0 <PyInit__decimal@@Base+0x10040>
   2a0a0:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a0a4:	ldr	x19, [x19, #3904]
   2a0a8:	mov	w3, #0x253                 	// #595
   2a0ac:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a0b0:	add	x2, x2, #0xc68
   2a0b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a0b8:	add	x1, x1, #0xca8
   2a0bc:	ldr	x0, [x19]
   2a0c0:	bl	6a70 <fprintf@plt>
   2a0c4:	ldr	x3, [x19]
   2a0c8:	mov	x2, #0x29                  	// #41
   2a0cc:	mov	x1, #0x1                   	// #1
   2a0d0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a0d4:	add	x0, x0, #0x2f8
   2a0d8:	bl	6930 <fwrite@plt>
   2a0dc:	ldr	x1, [x19]
   2a0e0:	mov	w0, #0xa                   	// #10
   2a0e4:	bl	65b0 <fputc@plt>
   2a0e8:	bl	67c0 <abort@plt>
   2a0ec:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a0f0:	ldr	x19, [x19, #3904]
   2a0f4:	mov	w3, #0x253                 	// #595
   2a0f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a0fc:	add	x2, x2, #0xc68
   2a100:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a104:	add	x1, x1, #0xca8
   2a108:	ldr	x0, [x19]
   2a10c:	bl	6a70 <fprintf@plt>
   2a110:	ldr	x3, [x19]
   2a114:	mov	x2, #0x29                  	// #41
   2a118:	mov	x1, #0x1                   	// #1
   2a11c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a120:	add	x0, x0, #0x2f8
   2a124:	bl	6930 <fwrite@plt>
   2a128:	ldr	x1, [x19]
   2a12c:	mov	w0, #0xa                   	// #10
   2a130:	bl	65b0 <fputc@plt>
   2a134:	bl	67c0 <abort@plt>
   2a138:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a13c:	ldr	x19, [x19, #3904]
   2a140:	mov	w3, #0x26c                 	// #620
   2a144:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a148:	add	x2, x2, #0xc68
   2a14c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a150:	add	x1, x1, #0xca8
   2a154:	ldr	x0, [x19]
   2a158:	bl	6a70 <fprintf@plt>
   2a15c:	ldr	x3, [x19]
   2a160:	mov	x2, #0x29                  	// #41
   2a164:	mov	x1, #0x1                   	// #1
   2a168:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a16c:	add	x0, x0, #0x328
   2a170:	bl	6930 <fwrite@plt>
   2a174:	ldr	x1, [x19]
   2a178:	mov	w0, #0xa                   	// #10
   2a17c:	bl	65b0 <fputc@plt>
   2a180:	bl	67c0 <abort@plt>
   2a184:	lsl	x0, x28, #1
   2a188:	str	x0, [sp, #120]
   2a18c:	mov	x0, #0x180000000           	// #6442450944
   2a190:	cmp	x28, x0
   2a194:	b.hi	2a1f4 <PyInit__decimal@@Base+0x10054>  // b.pmore
   2a198:	mov	x1, #0x8                   	// #8
   2a19c:	ldr	x0, [sp, #120]
   2a1a0:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   2a1a4:	mov	x28, x0
   2a1a8:	cbz	x0, 2a584 <PyInit__decimal@@Base+0x103e4>
   2a1ac:	mov	x5, x26
   2a1b0:	mov	x4, x23
   2a1b4:	mov	x3, x0
   2a1b8:	ldr	x2, [sp, #104]
   2a1bc:	ldr	x1, [sp, #96]
   2a1c0:	mov	x0, x27
   2a1c4:	bl	25c1c <PyInit__decimal@@Base+0xba7c>
   2a1c8:	cbnz	w0, 2a098 <PyInit__decimal@@Base+0xfef8>
   2a1cc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2a1d0:	ldr	x1, [x0, #1704]
   2a1d4:	mov	x0, x27
   2a1d8:	blr	x1
   2a1dc:	mov	x27, #0x0                   	// #0
   2a1e0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2a1e4:	ldr	x1, [x0, #1704]
   2a1e8:	mov	x0, x28
   2a1ec:	blr	x1
   2a1f0:	b	29910 <PyInit__decimal@@Base+0xf770>
   2a1f4:	ldr	x0, [sp, #128]
   2a1f8:	add	x0, x0, #0x2
   2a1fc:	lsr	x0, x0, #1
   2a200:	add	x1, x0, #0x1
   2a204:	lsl	x2, x1, #1
   2a208:	str	x2, [sp, #128]
   2a20c:	mov	x2, #0x180000000           	// #6442450944
   2a210:	cmp	x1, x2
   2a214:	b.hi	2a248 <PyInit__decimal@@Base+0x100a8>  // b.pmore
   2a218:	ldr	x0, [sp, #128]
   2a21c:	ldr	x1, [sp, #112]
   2a220:	add	x0, x0, x1
   2a224:	mvn	x1, x0
   2a228:	ldr	x2, [sp, #120]
   2a22c:	cmp	x1, x2
   2a230:	b.cc	2a538 <PyInit__decimal@@Base+0x10398>  // b.lo, b.ul, b.last
   2a234:	ldr	x1, [sp, #120]
   2a238:	adds	x0, x1, x0
   2a23c:	str	x0, [sp, #120]
   2a240:	b.ne	2a198 <PyInit__decimal@@Base+0xfff8>  // b.any
   2a244:	b	2a074 <PyInit__decimal@@Base+0xfed4>
   2a248:	add	x0, x0, #0x2
   2a24c:	lsr	x0, x0, #1
   2a250:	add	x1, x0, #0x1
   2a254:	lsl	x2, x1, #1
   2a258:	str	x2, [sp, #112]
   2a25c:	mov	x2, #0x180000000           	// #6442450944
   2a260:	cmp	x1, x2
   2a264:	b.ls	2a218 <PyInit__decimal@@Base+0x10078>  // b.plast
   2a268:	add	x0, x0, #0x2
   2a26c:	lsr	x0, x0, #1
   2a270:	add	x1, x0, #0x1
   2a274:	lsl	x2, x1, #1
   2a278:	str	x2, [sp, #136]
   2a27c:	mov	x2, #0x180000000           	// #6442450944
   2a280:	cmp	x1, x2
   2a284:	b.hi	2a2f4 <PyInit__decimal@@Base+0x10154>  // b.pmore
   2a288:	ldr	x0, [sp, #112]
   2a28c:	ldr	x1, [sp, #136]
   2a290:	add	x0, x0, x1
   2a294:	str	x0, [sp, #112]
   2a298:	mvn	x0, x0
   2a29c:	ldr	x1, [sp, #128]
   2a2a0:	cmp	x0, x1
   2a2a4:	b.cs	2a218 <PyInit__decimal@@Base+0x10078>  // b.hs, b.nlast
   2a2a8:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a2ac:	ldr	x19, [x19, #3904]
   2a2b0:	mov	w3, #0x253                 	// #595
   2a2b4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a2b8:	add	x2, x2, #0xc68
   2a2bc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a2c0:	add	x1, x1, #0xca8
   2a2c4:	ldr	x0, [x19]
   2a2c8:	bl	6a70 <fprintf@plt>
   2a2cc:	ldr	x3, [x19]
   2a2d0:	mov	x2, #0x29                  	// #41
   2a2d4:	mov	x1, #0x1                   	// #1
   2a2d8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a2dc:	add	x0, x0, #0x2f8
   2a2e0:	bl	6930 <fwrite@plt>
   2a2e4:	ldr	x1, [x19]
   2a2e8:	mov	w0, #0xa                   	// #10
   2a2ec:	bl	65b0 <fputc@plt>
   2a2f0:	bl	67c0 <abort@plt>
   2a2f4:	add	x0, x0, #0x2
   2a2f8:	lsr	x0, x0, #1
   2a2fc:	add	x1, x0, #0x1
   2a300:	lsl	x2, x1, #1
   2a304:	str	x2, [sp, #144]
   2a308:	mov	x2, #0x180000000           	// #6442450944
   2a30c:	cmp	x1, x2
   2a310:	b.hi	2a380 <PyInit__decimal@@Base+0x101e0>  // b.pmore
   2a314:	ldr	x0, [sp, #136]
   2a318:	ldr	x1, [sp, #144]
   2a31c:	add	x0, x0, x1
   2a320:	str	x0, [sp, #136]
   2a324:	mvn	x0, x0
   2a328:	ldr	x1, [sp, #112]
   2a32c:	cmp	x0, x1
   2a330:	b.cs	2a288 <PyInit__decimal@@Base+0x100e8>  // b.hs, b.nlast
   2a334:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a338:	ldr	x19, [x19, #3904]
   2a33c:	mov	w3, #0x253                 	// #595
   2a340:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a344:	add	x2, x2, #0xc68
   2a348:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a34c:	add	x1, x1, #0xca8
   2a350:	ldr	x0, [x19]
   2a354:	bl	6a70 <fprintf@plt>
   2a358:	ldr	x3, [x19]
   2a35c:	mov	x2, #0x29                  	// #41
   2a360:	mov	x1, #0x1                   	// #1
   2a364:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a368:	add	x0, x0, #0x2f8
   2a36c:	bl	6930 <fwrite@plt>
   2a370:	ldr	x1, [x19]
   2a374:	mov	w0, #0xa                   	// #10
   2a378:	bl	65b0 <fputc@plt>
   2a37c:	bl	67c0 <abort@plt>
   2a380:	add	x0, x0, #0x2
   2a384:	lsr	x0, x0, #1
   2a388:	add	x1, x0, #0x1
   2a38c:	lsl	x28, x1, #1
   2a390:	cmp	x1, x2
   2a394:	b.hi	2a400 <PyInit__decimal@@Base+0x10260>  // b.pmore
   2a398:	ldr	x0, [sp, #144]
   2a39c:	add	x0, x0, x28
   2a3a0:	str	x0, [sp, #144]
   2a3a4:	mvn	x0, x0
   2a3a8:	ldr	x1, [sp, #136]
   2a3ac:	cmp	x0, x1
   2a3b0:	b.cs	2a314 <PyInit__decimal@@Base+0x10174>  // b.hs, b.nlast
   2a3b4:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a3b8:	ldr	x19, [x19, #3904]
   2a3bc:	mov	w3, #0x253                 	// #595
   2a3c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a3c4:	add	x2, x2, #0xc68
   2a3c8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a3cc:	add	x1, x1, #0xca8
   2a3d0:	ldr	x0, [x19]
   2a3d4:	bl	6a70 <fprintf@plt>
   2a3d8:	ldr	x3, [x19]
   2a3dc:	mov	x2, #0x29                  	// #41
   2a3e0:	mov	x1, #0x1                   	// #1
   2a3e4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a3e8:	add	x0, x0, #0x2f8
   2a3ec:	bl	6930 <fwrite@plt>
   2a3f0:	ldr	x1, [x19]
   2a3f4:	mov	w0, #0xa                   	// #10
   2a3f8:	bl	65b0 <fputc@plt>
   2a3fc:	bl	67c0 <abort@plt>
   2a400:	add	x0, x0, #0x2
   2a404:	lsr	x0, x0, #1
   2a408:	add	x0, x0, #0x1
   2a40c:	lsl	x1, x0, #1
   2a410:	str	x1, [sp, #152]
   2a414:	mov	x1, x2
   2a418:	bl	25f84 <PyInit__decimal@@Base+0xbde4>
   2a41c:	mvn	x1, x0
   2a420:	ldr	x2, [sp, #152]
   2a424:	cmp	x1, x2
   2a428:	b.cc	2a4a0 <PyInit__decimal@@Base+0x10300>  // b.lo, b.ul, b.last
   2a42c:	ldr	x1, [sp, #152]
   2a430:	add	x0, x0, x1
   2a434:	mvn	x1, x0
   2a438:	cmp	x1, x28
   2a43c:	b.cc	2a4ec <PyInit__decimal@@Base+0x1034c>  // b.lo, b.ul, b.last
   2a440:	add	x28, x28, x0
   2a444:	mvn	x0, x28
   2a448:	ldr	x1, [sp, #144]
   2a44c:	cmp	x0, x1
   2a450:	b.cs	2a398 <PyInit__decimal@@Base+0x101f8>  // b.hs, b.nlast
   2a454:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a458:	ldr	x19, [x19, #3904]
   2a45c:	mov	w3, #0x253                 	// #595
   2a460:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a464:	add	x2, x2, #0xc68
   2a468:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a46c:	add	x1, x1, #0xca8
   2a470:	ldr	x0, [x19]
   2a474:	bl	6a70 <fprintf@plt>
   2a478:	ldr	x3, [x19]
   2a47c:	mov	x2, #0x29                  	// #41
   2a480:	mov	x1, #0x1                   	// #1
   2a484:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a488:	add	x0, x0, #0x2f8
   2a48c:	bl	6930 <fwrite@plt>
   2a490:	ldr	x1, [x19]
   2a494:	mov	w0, #0xa                   	// #10
   2a498:	bl	65b0 <fputc@plt>
   2a49c:	bl	67c0 <abort@plt>
   2a4a0:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a4a4:	ldr	x19, [x19, #3904]
   2a4a8:	mov	w3, #0x253                 	// #595
   2a4ac:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a4b0:	add	x2, x2, #0xc68
   2a4b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a4b8:	add	x1, x1, #0xca8
   2a4bc:	ldr	x0, [x19]
   2a4c0:	bl	6a70 <fprintf@plt>
   2a4c4:	ldr	x3, [x19]
   2a4c8:	mov	x2, #0x29                  	// #41
   2a4cc:	mov	x1, #0x1                   	// #1
   2a4d0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a4d4:	add	x0, x0, #0x2f8
   2a4d8:	bl	6930 <fwrite@plt>
   2a4dc:	ldr	x1, [x19]
   2a4e0:	mov	w0, #0xa                   	// #10
   2a4e4:	bl	65b0 <fputc@plt>
   2a4e8:	bl	67c0 <abort@plt>
   2a4ec:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a4f0:	ldr	x19, [x19, #3904]
   2a4f4:	mov	w3, #0x253                 	// #595
   2a4f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a4fc:	add	x2, x2, #0xc68
   2a500:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a504:	add	x1, x1, #0xca8
   2a508:	ldr	x0, [x19]
   2a50c:	bl	6a70 <fprintf@plt>
   2a510:	ldr	x3, [x19]
   2a514:	mov	x2, #0x29                  	// #41
   2a518:	mov	x1, #0x1                   	// #1
   2a51c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a520:	add	x0, x0, #0x2f8
   2a524:	bl	6930 <fwrite@plt>
   2a528:	ldr	x1, [x19]
   2a52c:	mov	w0, #0xa                   	// #10
   2a530:	bl	65b0 <fputc@plt>
   2a534:	bl	67c0 <abort@plt>
   2a538:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   2a53c:	ldr	x19, [x19, #3904]
   2a540:	mov	w3, #0x253                 	// #595
   2a544:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a548:	add	x2, x2, #0xc68
   2a54c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2a550:	add	x1, x1, #0xca8
   2a554:	ldr	x0, [x19]
   2a558:	bl	6a70 <fprintf@plt>
   2a55c:	ldr	x3, [x19]
   2a560:	mov	x2, #0x29                  	// #41
   2a564:	mov	x1, #0x1                   	// #1
   2a568:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2a56c:	add	x0, x0, #0x2f8
   2a570:	bl	6930 <fwrite@plt>
   2a574:	ldr	x1, [x19]
   2a578:	mov	w0, #0xa                   	// #10
   2a57c:	bl	65b0 <fputc@plt>
   2a580:	bl	67c0 <abort@plt>
   2a584:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2a588:	ldr	x1, [x0, #1704]
   2a58c:	mov	x0, x27
   2a590:	blr	x1
   2a594:	mov	x2, x22
   2a598:	mov	w1, #0x200                 	// #512
   2a59c:	mov	x0, x19
   2a5a0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2a5a4:	ldp	x23, x24, [sp, #48]
   2a5a8:	ldp	x25, x26, [sp, #64]
   2a5ac:	ldp	x27, x28, [sp, #80]
   2a5b0:	b	293d8 <PyInit__decimal@@Base+0xf238>
   2a5b4:	mov	x2, x22
   2a5b8:	mov	x0, x19
   2a5bc:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2a5c0:	b	299d0 <PyInit__decimal@@Base+0xf830>
   2a5c4:	mov	x2, x22
   2a5c8:	mov	x0, x19
   2a5cc:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2a5d0:	b	299d0 <PyInit__decimal@@Base+0xf830>
   2a5d4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a5d8:	ldr	x2, [x2, #3536]
   2a5dc:	cmp	x1, x2
   2a5e0:	cset	w2, cs  // cs = hs, nlast
   2a5e4:	add	w2, w2, #0x3
   2a5e8:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a5ec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a5f0:	ldr	x2, [x2, #3560]
   2a5f4:	cmp	x1, x2
   2a5f8:	b.cc	2a628 <PyInit__decimal@@Base+0x10488>  // b.lo, b.ul, b.last
   2a5fc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a600:	ldr	x3, [x2, #3576]
   2a604:	mov	w2, #0x9                   	// #9
   2a608:	cmp	x1, x3
   2a60c:	b.cs	29a24 <PyInit__decimal@@Base+0xf884>  // b.hs, b.nlast
   2a610:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a614:	ldr	x2, [x2, #3568]
   2a618:	cmp	x1, x2
   2a61c:	cset	w2, cs  // cs = hs, nlast
   2a620:	add	w2, w2, #0x7
   2a624:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a628:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a62c:	ldr	x2, [x2, #3552]
   2a630:	cmp	x1, x2
   2a634:	cset	w2, cs  // cs = hs, nlast
   2a638:	add	w2, w2, #0x5
   2a63c:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a640:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a644:	ldr	x2, [x2, #3624]
   2a648:	cmp	x1, x2
   2a64c:	b.cs	2a6a4 <PyInit__decimal@@Base+0x10504>  // b.hs, b.nlast
   2a650:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a654:	ldr	x2, [x2, #3600]
   2a658:	cmp	x1, x2
   2a65c:	b.cc	2a68c <PyInit__decimal@@Base+0x104ec>  // b.lo, b.ul, b.last
   2a660:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a664:	ldr	x3, [x2, #3616]
   2a668:	mov	w2, #0xe                   	// #14
   2a66c:	cmp	x1, x3
   2a670:	b.cs	29a24 <PyInit__decimal@@Base+0xf884>  // b.hs, b.nlast
   2a674:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a678:	ldr	x2, [x2, #3608]
   2a67c:	cmp	x1, x2
   2a680:	cset	w2, cs  // cs = hs, nlast
   2a684:	add	w2, w2, #0xc
   2a688:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a68c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a690:	ldr	x2, [x2, #3592]
   2a694:	cmp	x1, x2
   2a698:	cset	w2, cs  // cs = hs, nlast
   2a69c:	add	w2, w2, #0xa
   2a6a0:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a6a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a6a8:	ldr	x2, [x2, #3656]
   2a6ac:	cmp	x1, x2
   2a6b0:	b.cs	2a6f4 <PyInit__decimal@@Base+0x10554>  // b.hs, b.nlast
   2a6b4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a6b8:	ldr	x2, [x2, #3640]
   2a6bc:	cmp	x1, x2
   2a6c0:	b.cs	2a6dc <PyInit__decimal@@Base+0x1053c>  // b.hs, b.nlast
   2a6c4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a6c8:	ldr	x2, [x2, #3632]
   2a6cc:	cmp	x1, x2
   2a6d0:	cset	w2, cs  // cs = hs, nlast
   2a6d4:	add	w2, w2, #0xf
   2a6d8:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a6dc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a6e0:	ldr	x2, [x2, #3648]
   2a6e4:	cmp	x1, x2
   2a6e8:	cset	w2, cs  // cs = hs, nlast
   2a6ec:	add	w2, w2, #0x11
   2a6f0:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a6f4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2a6f8:	ldr	x2, [x2, #3664]
   2a6fc:	cmp	x1, x2
   2a700:	cset	w2, cs  // cs = hs, nlast
   2a704:	add	w2, w2, #0x13
   2a708:	b	29a24 <PyInit__decimal@@Base+0xf884>
   2a70c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2a710:	ldr	x1, [x0, #1704]
   2a714:	mov	x0, x27
   2a718:	blr	x1
   2a71c:	b	2a594 <PyInit__decimal@@Base+0x103f4>
   2a720:	stp	x29, x30, [sp, #-32]!
   2a724:	mov	x29, sp
   2a728:	stp	x19, x20, [sp, #16]
   2a72c:	mov	x20, x0
   2a730:	ldr	x0, [x0, #24]
   2a734:	bl	25250 <PyInit__decimal@@Base+0xb0b0>
   2a738:	mov	x19, x0
   2a73c:	cbz	x0, 2a77c <PyInit__decimal@@Base+0x105dc>
   2a740:	ldr	x2, [x20, #24]
   2a744:	lsl	x2, x2, #3
   2a748:	ldr	x1, [x20, #40]
   2a74c:	ldr	x0, [x0, #40]
   2a750:	bl	6470 <memcpy@plt>
   2a754:	ldrb	w0, [x19]
   2a758:	ldrb	w1, [x20]
   2a75c:	bfxil	w0, w1, #0, #4
   2a760:	strb	w0, [x19]
   2a764:	ldr	x0, [x20, #8]
   2a768:	str	x0, [x19, #8]
   2a76c:	ldr	x0, [x20, #16]
   2a770:	str	x0, [x19, #16]
   2a774:	ldr	x0, [x20, #24]
   2a778:	str	x0, [x19, #24]
   2a77c:	mov	x0, x19
   2a780:	ldp	x19, x20, [sp, #16]
   2a784:	ldp	x29, x30, [sp], #32
   2a788:	ret
   2a78c:	stp	x29, x30, [sp, #-32]!
   2a790:	mov	x29, sp
   2a794:	str	x19, [sp, #16]
   2a798:	mov	x19, x0
   2a79c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2a7a0:	cbz	w0, 2a7b4 <PyInit__decimal@@Base+0x10614>
   2a7a4:	ldrb	w0, [x19]
   2a7a8:	and	w0, w0, #0xfffffffe
   2a7ac:	strb	w0, [x19]
   2a7b0:	mov	w0, #0x1                   	// #1
   2a7b4:	ldr	x19, [sp, #16]
   2a7b8:	ldp	x29, x30, [sp], #32
   2a7bc:	ret
   2a7c0:	stp	x29, x30, [sp, #-32]!
   2a7c4:	mov	x29, sp
   2a7c8:	str	x19, [sp, #16]
   2a7cc:	mov	x19, x0
   2a7d0:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2a7d4:	cbz	w0, 2a7e8 <PyInit__decimal@@Base+0x10648>
   2a7d8:	ldrb	w0, [x19]
   2a7dc:	eor	w0, w0, #0x1
   2a7e0:	strb	w0, [x19]
   2a7e4:	mov	w0, #0x1                   	// #1
   2a7e8:	ldr	x19, [sp, #16]
   2a7ec:	ldp	x29, x30, [sp], #32
   2a7f0:	ret
   2a7f4:	stp	x29, x30, [sp, #-32]!
   2a7f8:	mov	x29, sp
   2a7fc:	stp	x19, x20, [sp, #16]
   2a800:	mov	x19, x0
   2a804:	ldrb	w20, [x2]
   2a808:	mov	x2, x3
   2a80c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2a810:	cbz	w0, 2a824 <PyInit__decimal@@Base+0x10684>
   2a814:	ldrb	w0, [x19]
   2a818:	bfxil	w0, w20, #0, #1
   2a81c:	strb	w0, [x19]
   2a820:	mov	w0, #0x1                   	// #1
   2a824:	ldp	x19, x20, [sp, #16]
   2a828:	ldp	x29, x30, [sp], #32
   2a82c:	ret
   2a830:	ldrb	w3, [x0]
   2a834:	tst	w3, #0xe
   2a838:	b.ne	2a848 <PyInit__decimal@@Base+0x106a8>  // b.any
   2a83c:	ldrb	w4, [x1]
   2a840:	tst	w4, #0xe
   2a844:	b.eq	2a85c <PyInit__decimal@@Base+0x106bc>  // b.none
   2a848:	tst	w3, #0xc
   2a84c:	b.ne	2a870 <PyInit__decimal@@Base+0x106d0>  // b.any
   2a850:	ldrb	w3, [x1]
   2a854:	tst	w3, #0xc
   2a858:	b.ne	2a870 <PyInit__decimal@@Base+0x106d0>  // b.any
   2a85c:	stp	x29, x30, [sp, #-16]!
   2a860:	mov	x29, sp
   2a864:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   2a868:	ldp	x29, x30, [sp], #16
   2a86c:	ret
   2a870:	ldr	w0, [x2]
   2a874:	orr	w0, w0, #0x100
   2a878:	str	w0, [x2]
   2a87c:	mov	w0, #0x7fffffff            	// #2147483647
   2a880:	ret
   2a884:	stp	x29, x30, [sp, #-48]!
   2a888:	mov	x29, sp
   2a88c:	stp	x19, x20, [sp, #16]
   2a890:	stp	x21, x22, [sp, #32]
   2a894:	mov	x22, x0
   2a898:	mov	x20, x1
   2a89c:	mov	x21, x2
   2a8a0:	ldrb	w0, [x1]
   2a8a4:	tst	w0, #0xe
   2a8a8:	b.ne	2a8b8 <PyInit__decimal@@Base+0x10718>  // b.any
   2a8ac:	ldrb	w0, [x2]
   2a8b0:	tst	w0, #0xe
   2a8b4:	b.eq	2a8d0 <PyInit__decimal@@Base+0x10730>  // b.none
   2a8b8:	mov	x2, x21
   2a8bc:	mov	x1, x20
   2a8c0:	mov	x0, x22
   2a8c4:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2a8c8:	mov	w19, #0x7fffffff            	// #2147483647
   2a8cc:	cbnz	w0, 2a8f8 <PyInit__decimal@@Base+0x10758>
   2a8d0:	mov	x1, x21
   2a8d4:	mov	x0, x20
   2a8d8:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   2a8dc:	mov	w19, w0
   2a8e0:	cmp	w0, #0x0
   2a8e4:	mov	x3, #0x0                   	// #0
   2a8e8:	cset	x2, ne  // ne = any
   2a8ec:	lsr	w1, w0, #31
   2a8f0:	mov	x0, x22
   2a8f4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2a8f8:	mov	w0, w19
   2a8fc:	ldp	x19, x20, [sp, #16]
   2a900:	ldp	x21, x22, [sp, #32]
   2a904:	ldp	x29, x30, [sp], #48
   2a908:	ret
   2a90c:	stp	x29, x30, [sp, #-48]!
   2a910:	mov	x29, sp
   2a914:	stp	x19, x20, [sp, #16]
   2a918:	stp	x21, x22, [sp, #32]
   2a91c:	mov	x21, x0
   2a920:	mov	x19, x1
   2a924:	mov	x20, x2
   2a928:	mov	x22, x4
   2a92c:	ldrb	w0, [x1]
   2a930:	tst	w0, #0xe
   2a934:	b.ne	2a944 <PyInit__decimal@@Base+0x107a4>  // b.any
   2a938:	ldrb	w0, [x2]
   2a93c:	tst	w0, #0xe
   2a940:	b.eq	2a95c <PyInit__decimal@@Base+0x107bc>  // b.none
   2a944:	mov	x4, x22
   2a948:	mov	x2, x20
   2a94c:	mov	x1, x19
   2a950:	mov	x0, x21
   2a954:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2a958:	cbnz	w0, 2a998 <PyInit__decimal@@Base+0x107f8>
   2a95c:	mov	x1, x20
   2a960:	mov	x0, x19
   2a964:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   2a968:	mov	w19, w0
   2a96c:	cmp	w0, #0x0
   2a970:	mov	x3, #0x0                   	// #0
   2a974:	cset	x2, ne  // ne = any
   2a978:	lsr	w1, w0, #31
   2a97c:	mov	x0, x21
   2a980:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2a984:	mov	w0, w19
   2a988:	ldp	x19, x20, [sp, #16]
   2a98c:	ldp	x21, x22, [sp, #32]
   2a990:	ldp	x29, x30, [sp], #48
   2a994:	ret
   2a998:	ldr	w0, [x22]
   2a99c:	orr	w0, w0, #0x100
   2a9a0:	str	w0, [x22]
   2a9a4:	mov	w19, #0x7fffffff            	// #2147483647
   2a9a8:	b	2a984 <PyInit__decimal@@Base+0x107e4>
   2a9ac:	stp	x29, x30, [sp, #-144]!
   2a9b0:	mov	x29, sp
   2a9b4:	stp	x19, x20, [sp, #16]
   2a9b8:	str	x21, [sp, #32]
   2a9bc:	mov	x21, x0
   2a9c0:	mov	x20, x1
   2a9c4:	ldrb	w1, [x0]
   2a9c8:	and	w19, w1, #0x1
   2a9cc:	ldrb	w0, [x20]
   2a9d0:	and	w2, w0, #0x1
   2a9d4:	cmp	w2, w19
   2a9d8:	b.eq	2a9f0 <PyInit__decimal@@Base+0x10850>  // b.none
   2a9dc:	sub	w0, w2, w19
   2a9e0:	ldp	x19, x20, [sp, #16]
   2a9e4:	ldr	x21, [sp, #32]
   2a9e8:	ldp	x29, x30, [sp], #144
   2a9ec:	ret
   2a9f0:	tst	w1, #0xc
   2a9f4:	b.eq	2aab8 <PyInit__decimal@@Base+0x10918>  // b.none
   2a9f8:	mov	w2, #0x1                   	// #1
   2a9fc:	tst	w0, #0xc
   2aa00:	b.eq	2aac4 <PyInit__decimal@@Base+0x10924>  // b.none
   2aa04:	ubfx	x4, x1, #2, #1
   2aa08:	ubfx	x3, x0, #2, #1
   2aa0c:	sub	w2, w4, w3
   2aa10:	cmp	w4, w3
   2aa14:	b.ne	2aac4 <PyInit__decimal@@Base+0x10924>  // b.any
   2aa18:	ldr	x2, [x21, #24]
   2aa1c:	cmp	x2, #0x0
   2aa20:	b.le	2aa30 <PyInit__decimal@@Base+0x10890>
   2aa24:	ldr	x3, [x20, #24]
   2aa28:	cmp	x3, #0x0
   2aa2c:	b.gt	2aa4c <PyInit__decimal@@Base+0x108ac>
   2aa30:	cmp	x2, #0x0
   2aa34:	cset	w0, gt
   2aa38:	ldr	x1, [x20, #24]
   2aa3c:	cmp	x1, #0x0
   2aa40:	cset	w2, gt
   2aa44:	sub	w2, w0, w2
   2aa48:	b	2aac4 <PyInit__decimal@@Base+0x10924>
   2aa4c:	ldr	x4, [x21, #16]
   2aa50:	str	x4, [sp, #112]
   2aa54:	str	x2, [sp, #120]
   2aa58:	ldr	x2, [x21, #32]
   2aa5c:	str	x2, [sp, #128]
   2aa60:	ldr	x2, [x21, #40]
   2aa64:	str	x2, [sp, #136]
   2aa68:	and	w1, w1, #0x1f
   2aa6c:	orr	w1, w1, #0x40
   2aa70:	strb	w1, [sp, #96]
   2aa74:	ldr	x1, [x20, #16]
   2aa78:	str	x1, [sp, #64]
   2aa7c:	str	x3, [sp, #72]
   2aa80:	ldr	x1, [x20, #32]
   2aa84:	str	x1, [sp, #80]
   2aa88:	ldr	x1, [x20, #40]
   2aa8c:	str	x1, [sp, #88]
   2aa90:	and	w0, w0, #0x1f
   2aa94:	orr	w0, w0, #0x40
   2aa98:	strb	w0, [sp, #48]
   2aa9c:	str	xzr, [sp, #56]
   2aaa0:	str	xzr, [sp, #104]
   2aaa4:	add	x1, sp, #0x30
   2aaa8:	add	x0, sp, #0x60
   2aaac:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   2aab0:	mov	w2, w0
   2aab4:	b	2aac4 <PyInit__decimal@@Base+0x10924>
   2aab8:	mov	w2, #0xffffffff            	// #-1
   2aabc:	tst	w0, #0xc
   2aac0:	b.eq	2aad4 <PyInit__decimal@@Base+0x10934>  // b.none
   2aac4:	neg	w0, w19
   2aac8:	lsl	w0, w0, #1
   2aacc:	madd	w0, w0, w2, w2
   2aad0:	b	2a9e0 <PyInit__decimal@@Base+0x10840>
   2aad4:	mov	x1, x20
   2aad8:	mov	x0, x21
   2aadc:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   2aae0:	mov	w2, w0
   2aae4:	cbnz	w0, 2aac4 <PyInit__decimal@@Base+0x10924>
   2aae8:	ldr	x3, [x21, #8]
   2aaec:	ldr	x1, [x20, #8]
   2aaf0:	cmp	x3, x1
   2aaf4:	b.eq	2aac4 <PyInit__decimal@@Base+0x10924>  // b.none
   2aaf8:	mov	w0, #0x1                   	// #1
   2aafc:	cneg	w2, w0, lt  // lt = tstop
   2ab00:	b	2aac4 <PyInit__decimal@@Base+0x10924>
   2ab04:	stp	x29, x30, [sp, #-32]!
   2ab08:	mov	x29, sp
   2ab0c:	stp	x19, x20, [sp, #16]
   2ab10:	mov	x20, x0
   2ab14:	mov	x0, x1
   2ab18:	mov	x1, x2
   2ab1c:	bl	2a9ac <PyInit__decimal@@Base+0x1080c>
   2ab20:	mov	w19, w0
   2ab24:	cmp	w0, #0x0
   2ab28:	mov	x3, #0x0                   	// #0
   2ab2c:	cset	x2, ne  // ne = any
   2ab30:	lsr	w1, w0, #31
   2ab34:	mov	x0, x20
   2ab38:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2ab3c:	mov	w0, w19
   2ab40:	ldp	x19, x20, [sp, #16]
   2ab44:	ldp	x29, x30, [sp], #32
   2ab48:	ret
   2ab4c:	stp	x29, x30, [sp, #-112]!
   2ab50:	mov	x29, sp
   2ab54:	ldrb	w2, [x0]
   2ab58:	ldr	x3, [x0, #8]
   2ab5c:	str	x3, [sp, #72]
   2ab60:	ldr	x3, [x0, #16]
   2ab64:	str	x3, [sp, #80]
   2ab68:	ldr	x3, [x0, #24]
   2ab6c:	str	x3, [sp, #88]
   2ab70:	ldr	x3, [x0, #32]
   2ab74:	str	x3, [sp, #96]
   2ab78:	ldr	x0, [x0, #40]
   2ab7c:	str	x0, [sp, #104]
   2ab80:	ldrb	w0, [x1]
   2ab84:	ldr	x3, [x1, #8]
   2ab88:	str	x3, [sp, #24]
   2ab8c:	ldr	x3, [x1, #16]
   2ab90:	str	x3, [sp, #32]
   2ab94:	ldr	x3, [x1, #24]
   2ab98:	str	x3, [sp, #40]
   2ab9c:	ldr	x3, [x1, #32]
   2aba0:	str	x3, [sp, #48]
   2aba4:	ldr	x1, [x1, #40]
   2aba8:	str	x1, [sp, #56]
   2abac:	and	w1, w2, #0x1e
   2abb0:	orr	w1, w1, #0x40
   2abb4:	strb	w1, [sp, #64]
   2abb8:	and	w0, w0, #0x1e
   2abbc:	orr	w0, w0, #0x40
   2abc0:	strb	w0, [sp, #16]
   2abc4:	add	x1, sp, #0x10
   2abc8:	add	x0, sp, #0x40
   2abcc:	bl	2a9ac <PyInit__decimal@@Base+0x1080c>
   2abd0:	ldp	x29, x30, [sp], #112
   2abd4:	ret
   2abd8:	stp	x29, x30, [sp, #-32]!
   2abdc:	mov	x29, sp
   2abe0:	stp	x19, x20, [sp, #16]
   2abe4:	mov	x20, x0
   2abe8:	mov	x0, x1
   2abec:	mov	x1, x2
   2abf0:	bl	2ab4c <PyInit__decimal@@Base+0x109ac>
   2abf4:	mov	w19, w0
   2abf8:	cmp	w0, #0x0
   2abfc:	mov	x3, #0x0                   	// #0
   2ac00:	cset	x2, ne  // ne = any
   2ac04:	lsr	w1, w0, #31
   2ac08:	mov	x0, x20
   2ac0c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2ac10:	mov	w0, w19
   2ac14:	ldp	x19, x20, [sp, #16]
   2ac18:	ldp	x29, x30, [sp], #32
   2ac1c:	ret
   2ac20:	stp	x29, x30, [sp, #-48]!
   2ac24:	mov	x29, sp
   2ac28:	stp	x19, x20, [sp, #16]
   2ac2c:	stp	x21, x22, [sp, #32]
   2ac30:	mov	x20, x0
   2ac34:	mov	x19, x1
   2ac38:	mov	x22, x2
   2ac3c:	mov	x2, x3
   2ac40:	ldr	x0, [x1, #24]
   2ac44:	ldr	x1, [x1, #40]
   2ac48:	add	x0, x1, x0, lsl #3
   2ac4c:	ldur	x0, [x0, #-8]
   2ac50:	cmp	x0, #0x0
   2ac54:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   2ac58:	b.eq	2ad04 <PyInit__decimal@@Base+0x10b64>  // b.none
   2ac5c:	ldr	x1, [x19, #16]
   2ac60:	add	x1, x22, x1
   2ac64:	mov	x21, #0x9436                	// #37942
   2ac68:	movk	x21, #0x50d7, lsl #16
   2ac6c:	movk	x21, #0x435e, lsl #32
   2ac70:	movk	x21, #0xd79, lsl #48
   2ac74:	smulh	x21, x1, x21
   2ac78:	sub	x21, x21, x1, asr #63
   2ac7c:	add	x0, x21, x21, lsl #2
   2ac80:	lsl	x0, x0, #2
   2ac84:	sub	x0, x0, x21
   2ac88:	cmp	x1, x0
   2ac8c:	cinc	x21, x21, ne  // ne = any
   2ac90:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2ac94:	ldr	x1, [x0, #1672]
   2ac98:	cmp	x1, x21
   2ac9c:	csel	x1, x1, x21, ge  // ge = tcont
   2aca0:	ldr	x0, [x20, #32]
   2aca4:	cmp	x1, x0
   2aca8:	b.eq	2acbc <PyInit__decimal@@Base+0x10b1c>  // b.none
   2acac:	ldrb	w3, [x20]
   2acb0:	tbz	w3, #5, 2ad2c <PyInit__decimal@@Base+0x10b8c>
   2acb4:	cmp	x1, x0
   2acb8:	b.gt	2ad20 <PyInit__decimal@@Base+0x10b80>
   2acbc:	mov	x4, x22
   2acc0:	ldr	x3, [x19, #24]
   2acc4:	mov	x2, x21
   2acc8:	ldr	x1, [x19, #40]
   2accc:	ldr	x0, [x20, #40]
   2acd0:	bl	1bb3c <PyInit__decimal@@Base+0x199c>
   2acd4:	ldrb	w0, [x20]
   2acd8:	ldrb	w1, [x19]
   2acdc:	bfxil	w0, w1, #0, #4
   2ace0:	strb	w0, [x20]
   2ace4:	ldr	x0, [x19, #8]
   2ace8:	str	x0, [x20, #8]
   2acec:	ldr	x2, [x19, #16]
   2acf0:	add	x22, x2, x22
   2acf4:	str	x22, [x20, #16]
   2acf8:	str	x21, [x20, #24]
   2acfc:	mov	w0, #0x1                   	// #1
   2ad00:	b	2ad10 <PyInit__decimal@@Base+0x10b70>
   2ad04:	mov	x1, x19
   2ad08:	mov	x0, x20
   2ad0c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2ad10:	ldp	x19, x20, [sp, #16]
   2ad14:	ldp	x21, x22, [sp, #32]
   2ad18:	ldp	x29, x30, [sp], #48
   2ad1c:	ret
   2ad20:	mov	x0, x20
   2ad24:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2ad28:	b	2ad34 <PyInit__decimal@@Base+0x10b94>
   2ad2c:	mov	x0, x20
   2ad30:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2ad34:	cbnz	w0, 2acbc <PyInit__decimal@@Base+0x10b1c>
   2ad38:	b	2ad10 <PyInit__decimal@@Base+0x10b70>
   2ad3c:	sub	sp, sp, #0x2d0
   2ad40:	stp	x29, x30, [sp]
   2ad44:	mov	x29, sp
   2ad48:	stp	x19, x20, [sp, #16]
   2ad4c:	stp	x21, x22, [sp, #32]
   2ad50:	stp	x23, x24, [sp, #48]
   2ad54:	stp	x25, x26, [sp, #64]
   2ad58:	mov	x20, x0
   2ad5c:	mov	x21, x1
   2ad60:	mov	x19, x2
   2ad64:	and	w24, w3, #0xff
   2ad68:	mov	x23, x4
   2ad6c:	mov	x22, x5
   2ad70:	mov	w0, #0x30                  	// #48
   2ad74:	strb	w0, [sp, #160]
   2ad78:	str	xzr, [sp, #168]
   2ad7c:	str	xzr, [sp, #176]
   2ad80:	str	xzr, [sp, #184]
   2ad84:	mov	x0, #0x40                  	// #64
   2ad88:	str	x0, [sp, #192]
   2ad8c:	add	x0, sp, #0xd0
   2ad90:	str	x0, [sp, #200]
   2ad94:	mov	x0, #0x1                   	// #1
   2ad98:	str	x0, [sp, #152]
   2ad9c:	mov	w1, #0xffffff90            	// #-112
   2ada0:	strb	w1, [sp, #104]
   2ada4:	str	xzr, [sp, #112]
   2ada8:	str	x0, [sp, #120]
   2adac:	str	x0, [sp, #128]
   2adb0:	str	x0, [sp, #136]
   2adb4:	add	x0, sp, #0x98
   2adb8:	str	x0, [sp, #144]
   2adbc:	ldr	x1, [x21, #8]
   2adc0:	ldr	x0, [x2, #8]
   2adc4:	cmp	x1, x0
   2adc8:	b.eq	2aeac <PyInit__decimal@@Base+0x10d0c>  // b.none
   2adcc:	b.ge	2ae8c <PyInit__decimal@@Base+0x10cec>  // b.tcont
   2add0:	mov	x26, x2
   2add4:	mov	x19, x21
   2add8:	mov	w25, #0x1                   	// #1
   2addc:	ldr	x0, [x26, #24]
   2ade0:	ldr	x1, [x26, #40]
   2ade4:	add	x0, x1, x0, lsl #3
   2ade8:	ldur	x0, [x0, #-8]
   2adec:	cbz	x0, 2b0a8 <PyInit__decimal@@Base+0x10f08>
   2adf0:	ldr	x2, [x26, #8]
   2adf4:	sub	x4, x2, #0x1
   2adf8:	ldr	x3, [x26, #16]
   2adfc:	ldr	x1, [x23]
   2ae00:	mvn	x0, x1
   2ae04:	add	x0, x0, x3
   2ae08:	cmp	x3, x1
   2ae0c:	csel	x0, x0, xzr, le
   2ae10:	add	x0, x0, x4
   2ae14:	ldr	x1, [x19, #8]
   2ae18:	ldr	x3, [x19, #16]
   2ae1c:	add	x1, x1, x3
   2ae20:	sub	x1, x1, #0x1
   2ae24:	cmp	x0, x1
   2ae28:	b.le	2ae64 <PyInit__decimal@@Base+0x10cc4>
   2ae2c:	ldrb	w1, [x19]
   2ae30:	and	w1, w1, #0xf
   2ae34:	mov	w3, #0xffffff90            	// #-112
   2ae38:	orr	w1, w1, w3
   2ae3c:	strb	w1, [sp, #104]
   2ae40:	str	x0, [sp, #112]
   2ae44:	ldr	x0, [x19, #24]
   2ae48:	ldr	x1, [x19, #40]
   2ae4c:	add	x0, x1, x0, lsl #3
   2ae50:	ldur	x0, [x0, #-8]
   2ae54:	cmp	x0, #0x0
   2ae58:	cset	x0, ne  // ne = any
   2ae5c:	str	x0, [sp, #152]
   2ae60:	add	x19, sp, #0x68
   2ae64:	ldr	x0, [x19, #8]
   2ae68:	mov	x3, x22
   2ae6c:	sub	x2, x2, x0
   2ae70:	mov	x1, x26
   2ae74:	add	x0, sp, #0xa0
   2ae78:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2ae7c:	add	x26, sp, #0xa0
   2ae80:	cbz	w0, 2ae98 <PyInit__decimal@@Base+0x10cf8>
   2ae84:	str	x27, [sp, #80]
   2ae88:	b	2aeb8 <PyInit__decimal@@Base+0x10d18>
   2ae8c:	mov	x26, x21
   2ae90:	mov	w25, #0x0                   	// #0
   2ae94:	b	2addc <PyInit__decimal@@Base+0x10c3c>
   2ae98:	mov	x2, x22
   2ae9c:	mov	w1, #0x200                 	// #512
   2aea0:	mov	x0, x20
   2aea4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2aea8:	b	2b058 <PyInit__decimal@@Base+0x10eb8>
   2aeac:	str	x27, [sp, #80]
   2aeb0:	mov	x26, x21
   2aeb4:	mov	w25, #0x0                   	// #0
   2aeb8:	ldr	x0, [x19, #8]
   2aebc:	str	x0, [x20, #8]
   2aec0:	ldr	x1, [x26, #24]
   2aec4:	ldr	x0, [x19, #24]
   2aec8:	cmp	x1, x0
   2aecc:	b.ge	2aee0 <PyInit__decimal@@Base+0x10d40>  // b.tcont
   2aed0:	add	w25, w25, #0x1
   2aed4:	mov	x0, x26
   2aed8:	mov	x26, x19
   2aedc:	mov	x19, x0
   2aee0:	ldr	x27, [x26, #24]
   2aee4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2aee8:	ldr	x1, [x0, #1672]
   2aeec:	cmp	x1, x27
   2aef0:	csel	x1, x1, x27, ge  // ge = tcont
   2aef4:	ldr	x0, [x20, #32]
   2aef8:	cmp	x1, x0
   2aefc:	b.eq	2af10 <PyInit__decimal@@Base+0x10d70>  // b.none
   2af00:	ldrb	w2, [x20]
   2af04:	tbz	w2, #5, 2b0c0 <PyInit__decimal@@Base+0x10f20>
   2af08:	cmp	x1, x0
   2af0c:	b.gt	2b0b0 <PyInit__decimal@@Base+0x10f10>
   2af10:	ldrb	w0, [x21]
   2af14:	and	w0, w0, #0x1
   2af18:	cmp	w24, w0
   2af1c:	b.eq	2b0d8 <PyInit__decimal@@Base+0x10f38>  // b.none
   2af20:	ldr	x0, [x26, #24]
   2af24:	ldr	x1, [x19, #24]
   2af28:	cmp	x0, x1
   2af2c:	b.eq	2b178 <PyInit__decimal@@Base+0x10fd8>  // b.none
   2af30:	ldr	x4, [x19, #24]
   2af34:	ldr	x3, [x26, #24]
   2af38:	ldr	x2, [x19, #40]
   2af3c:	ldr	x1, [x26, #40]
   2af40:	ldr	x0, [x20, #40]
   2af44:	bl	1b318 <PyInit__decimal@@Base+0x1178>
   2af48:	ldr	x1, [x20, #40]
   2af4c:	ldr	x19, [x26, #24]
   2af50:	sub	x1, x1, #0x8
   2af54:	cmp	x19, #0x1
   2af58:	b.le	2af70 <PyInit__decimal@@Base+0x10dd0>
   2af5c:	ldr	x0, [x1, x19, lsl #3]
   2af60:	cbnz	x0, 2af70 <PyInit__decimal@@Base+0x10dd0>
   2af64:	sub	x19, x19, #0x1
   2af68:	cmp	x19, #0x1
   2af6c:	b.ne	2af5c <PyInit__decimal@@Base+0x10dbc>  // b.any
   2af70:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2af74:	ldr	x1, [x0, #1672]
   2af78:	cmp	x1, x19
   2af7c:	csel	x1, x1, x19, ge  // ge = tcont
   2af80:	ldr	x0, [x20, #32]
   2af84:	cmp	x1, x0
   2af88:	b.eq	2af9c <PyInit__decimal@@Base+0x10dfc>  // b.none
   2af8c:	ldrb	w2, [x20]
   2af90:	tbz	w2, #5, 2b1d0 <PyInit__decimal@@Base+0x11030>
   2af94:	cmp	x1, x0
   2af98:	b.gt	2b1c0 <PyInit__decimal@@Base+0x11020>
   2af9c:	str	x19, [x20, #24]
   2afa0:	tbnz	w25, #0, 2afac <PyInit__decimal@@Base+0x10e0c>
   2afa4:	ldrb	w24, [x21]
   2afa8:	and	w24, w24, #0x1
   2afac:	ldrb	w0, [x20]
   2afb0:	and	w0, w0, #0xf0
   2afb4:	orr	w24, w0, w24
   2afb8:	strb	w24, [x20]
   2afbc:	ldr	x0, [x20, #40]
   2afc0:	add	x19, x0, x19, lsl #3
   2afc4:	ldur	x0, [x19, #-8]
   2afc8:	cbnz	x0, 2afe8 <PyInit__decimal@@Base+0x10e48>
   2afcc:	and	w24, w24, #0xfe
   2afd0:	strb	w24, [x20]
   2afd4:	ldr	w1, [x23, #36]
   2afd8:	orr	w0, w24, #0x1
   2afdc:	cmp	w1, #0x3
   2afe0:	csel	w24, w0, w24, eq  // eq = none
   2afe4:	strb	w24, [x20]
   2afe8:	ldr	x0, [x20, #24]
   2afec:	ldr	x1, [x20, #40]
   2aff0:	add	x1, x1, x0, lsl #3
   2aff4:	ldur	x1, [x1, #-8]
   2aff8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2affc:	ldr	x2, [x2, #3584]
   2b000:	cmp	x1, x2
   2b004:	b.cs	2b24c <PyInit__decimal@@Base+0x110ac>  // b.hs, b.nlast
   2b008:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b00c:	ldr	x2, [x2, #3544]
   2b010:	cmp	x1, x2
   2b014:	b.cs	2b1f8 <PyInit__decimal@@Base+0x11058>  // b.hs, b.nlast
   2b018:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b01c:	ldr	x2, [x2, #3528]
   2b020:	cmp	x1, x2
   2b024:	b.cs	2b1e0 <PyInit__decimal@@Base+0x11040>  // b.hs, b.nlast
   2b028:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b02c:	ldr	x2, [x2, #3520]
   2b030:	cmp	x1, x2
   2b034:	cset	w2, cs  // cs = hs, nlast
   2b038:	add	w2, w2, #0x1
   2b03c:	sub	x0, x0, #0x1
   2b040:	add	x1, x0, x0, lsl #2
   2b044:	lsl	x1, x1, #2
   2b048:	sub	x0, x1, x0
   2b04c:	add	x0, x0, w2, sxtw
   2b050:	str	x0, [x20, #16]
   2b054:	ldr	x27, [sp, #80]
   2b058:	ldrb	w0, [sp, #160]
   2b05c:	tst	w0, #0xe0
   2b060:	b.ne	2b074 <PyInit__decimal@@Base+0x10ed4>  // b.any
   2b064:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2b068:	ldr	x1, [x0, #1704]
   2b06c:	ldr	x0, [sp, #200]
   2b070:	blr	x1
   2b074:	ldrb	w0, [sp, #160]
   2b078:	tbnz	w0, #4, 2b08c <PyInit__decimal@@Base+0x10eec>
   2b07c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2b080:	ldr	x1, [x0, #1704]
   2b084:	add	x0, sp, #0xa0
   2b088:	blr	x1
   2b08c:	ldp	x19, x20, [sp, #16]
   2b090:	ldp	x21, x22, [sp, #32]
   2b094:	ldp	x23, x24, [sp, #48]
   2b098:	ldp	x25, x26, [sp, #64]
   2b09c:	ldp	x29, x30, [sp]
   2b0a0:	add	sp, sp, #0x2d0
   2b0a4:	ret
   2b0a8:	str	x27, [sp, #80]
   2b0ac:	b	2aeb8 <PyInit__decimal@@Base+0x10d18>
   2b0b0:	mov	x2, x22
   2b0b4:	mov	x0, x20
   2b0b8:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2b0bc:	b	2b0cc <PyInit__decimal@@Base+0x10f2c>
   2b0c0:	mov	x2, x22
   2b0c4:	mov	x0, x20
   2b0c8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2b0cc:	cbnz	w0, 2af10 <PyInit__decimal@@Base+0x10d70>
   2b0d0:	ldr	x27, [sp, #80]
   2b0d4:	b	2b058 <PyInit__decimal@@Base+0x10eb8>
   2b0d8:	ldr	x4, [x19, #24]
   2b0dc:	ldr	x3, [x26, #24]
   2b0e0:	ldr	x2, [x19, #40]
   2b0e4:	ldr	x1, [x26, #40]
   2b0e8:	ldr	x0, [x20, #40]
   2b0ec:	bl	1b0a0 <PyInit__decimal@@Base+0xf00>
   2b0f0:	mov	x19, x0
   2b0f4:	cbz	x0, 2b138 <PyInit__decimal@@Base+0x10f98>
   2b0f8:	ldr	x27, [x26, #24]
   2b0fc:	add	x27, x27, #0x1
   2b100:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2b104:	ldr	x0, [x0, #1672]
   2b108:	cmp	x0, x27
   2b10c:	csel	x1, x0, x27, ge  // ge = tcont
   2b110:	ldr	x0, [x20, #32]
   2b114:	cmp	x1, x0
   2b118:	b.eq	2b12c <PyInit__decimal@@Base+0x10f8c>  // b.none
   2b11c:	ldrb	w2, [x20]
   2b120:	tbz	w2, #5, 2b160 <PyInit__decimal@@Base+0x10fc0>
   2b124:	cmp	x1, x0
   2b128:	b.gt	2b150 <PyInit__decimal@@Base+0x10fb0>
   2b12c:	ldr	x0, [x20, #40]
   2b130:	add	x0, x0, x27, lsl #3
   2b134:	stur	x19, [x0, #-8]
   2b138:	str	x27, [x20, #24]
   2b13c:	ldrb	w0, [x20]
   2b140:	and	w0, w0, #0xfffffff0
   2b144:	orr	w24, w24, w0
   2b148:	strb	w24, [x20]
   2b14c:	b	2afe8 <PyInit__decimal@@Base+0x10e48>
   2b150:	mov	x2, x22
   2b154:	mov	x0, x20
   2b158:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2b15c:	b	2b16c <PyInit__decimal@@Base+0x10fcc>
   2b160:	mov	x2, x22
   2b164:	mov	x0, x20
   2b168:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2b16c:	cbnz	w0, 2b12c <PyInit__decimal@@Base+0x10f8c>
   2b170:	ldr	x27, [sp, #80]
   2b174:	b	2b058 <PyInit__decimal@@Base+0x10eb8>
   2b178:	subs	x0, x0, #0x1
   2b17c:	b.mi	2af30 <PyInit__decimal@@Base+0x10d90>  // b.first
   2b180:	ldr	x4, [x26, #40]
   2b184:	ldr	x3, [x19, #40]
   2b188:	ldr	x2, [x4, x0, lsl #3]
   2b18c:	ldr	x1, [x3, x0, lsl #3]
   2b190:	cmp	x2, x1
   2b194:	b.ne	2b1a8 <PyInit__decimal@@Base+0x11008>  // b.any
   2b198:	sub	x0, x0, #0x1
   2b19c:	cmn	x0, #0x1
   2b1a0:	b.ne	2b188 <PyInit__decimal@@Base+0x10fe8>  // b.any
   2b1a4:	b	2af30 <PyInit__decimal@@Base+0x10d90>
   2b1a8:	b.cs	2af30 <PyInit__decimal@@Base+0x10d90>  // b.hs, b.nlast
   2b1ac:	add	w25, w25, #0x1
   2b1b0:	mov	x0, x26
   2b1b4:	mov	x26, x19
   2b1b8:	mov	x19, x0
   2b1bc:	b	2af30 <PyInit__decimal@@Base+0x10d90>
   2b1c0:	mov	x2, x22
   2b1c4:	mov	x0, x20
   2b1c8:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2b1cc:	b	2af9c <PyInit__decimal@@Base+0x10dfc>
   2b1d0:	mov	x2, x22
   2b1d4:	mov	x0, x20
   2b1d8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2b1dc:	b	2af9c <PyInit__decimal@@Base+0x10dfc>
   2b1e0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b1e4:	ldr	x2, [x2, #3536]
   2b1e8:	cmp	x1, x2
   2b1ec:	cset	w2, cs  // cs = hs, nlast
   2b1f0:	add	w2, w2, #0x3
   2b1f4:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b1f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b1fc:	ldr	x2, [x2, #3560]
   2b200:	cmp	x1, x2
   2b204:	b.cc	2b234 <PyInit__decimal@@Base+0x11094>  // b.lo, b.ul, b.last
   2b208:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b20c:	ldr	x3, [x2, #3576]
   2b210:	mov	w2, #0x9                   	// #9
   2b214:	cmp	x1, x3
   2b218:	b.cs	2b03c <PyInit__decimal@@Base+0x10e9c>  // b.hs, b.nlast
   2b21c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b220:	ldr	x2, [x2, #3568]
   2b224:	cmp	x1, x2
   2b228:	cset	w2, cs  // cs = hs, nlast
   2b22c:	add	w2, w2, #0x7
   2b230:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b234:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b238:	ldr	x2, [x2, #3552]
   2b23c:	cmp	x1, x2
   2b240:	cset	w2, cs  // cs = hs, nlast
   2b244:	add	w2, w2, #0x5
   2b248:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b24c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b250:	ldr	x2, [x2, #3624]
   2b254:	cmp	x1, x2
   2b258:	b.cs	2b2b0 <PyInit__decimal@@Base+0x11110>  // b.hs, b.nlast
   2b25c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b260:	ldr	x2, [x2, #3600]
   2b264:	cmp	x1, x2
   2b268:	b.cc	2b298 <PyInit__decimal@@Base+0x110f8>  // b.lo, b.ul, b.last
   2b26c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b270:	ldr	x3, [x2, #3616]
   2b274:	mov	w2, #0xe                   	// #14
   2b278:	cmp	x1, x3
   2b27c:	b.cs	2b03c <PyInit__decimal@@Base+0x10e9c>  // b.hs, b.nlast
   2b280:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b284:	ldr	x2, [x2, #3608]
   2b288:	cmp	x1, x2
   2b28c:	cset	w2, cs  // cs = hs, nlast
   2b290:	add	w2, w2, #0xc
   2b294:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b298:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b29c:	ldr	x2, [x2, #3592]
   2b2a0:	cmp	x1, x2
   2b2a4:	cset	w2, cs  // cs = hs, nlast
   2b2a8:	add	w2, w2, #0xa
   2b2ac:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b2b0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b2b4:	ldr	x2, [x2, #3656]
   2b2b8:	cmp	x1, x2
   2b2bc:	b.cs	2b300 <PyInit__decimal@@Base+0x11160>  // b.hs, b.nlast
   2b2c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b2c4:	ldr	x2, [x2, #3640]
   2b2c8:	cmp	x1, x2
   2b2cc:	b.cs	2b2e8 <PyInit__decimal@@Base+0x11148>  // b.hs, b.nlast
   2b2d0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b2d4:	ldr	x2, [x2, #3632]
   2b2d8:	cmp	x1, x2
   2b2dc:	cset	w2, cs  // cs = hs, nlast
   2b2e0:	add	w2, w2, #0xf
   2b2e4:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b2e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b2ec:	ldr	x2, [x2, #3648]
   2b2f0:	cmp	x1, x2
   2b2f4:	cset	w2, cs  // cs = hs, nlast
   2b2f8:	add	w2, w2, #0x11
   2b2fc:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b300:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b304:	ldr	x2, [x2, #3664]
   2b308:	cmp	x1, x2
   2b30c:	cset	w2, cs  // cs = hs, nlast
   2b310:	add	w2, w2, #0x13
   2b314:	b	2b03c <PyInit__decimal@@Base+0x10e9c>
   2b318:	stp	x29, x30, [sp, #-48]!
   2b31c:	mov	x29, sp
   2b320:	stp	x19, x20, [sp, #16]
   2b324:	mov	x19, x0
   2b328:	ldrb	w0, [x0]
   2b32c:	tst	w0, #0xe
   2b330:	b.ne	2b360 <PyInit__decimal@@Base+0x111c0>  // b.any
   2b334:	str	x21, [sp, #32]
   2b338:	ldr	x0, [x19, #24]
   2b33c:	ldr	x3, [x19, #40]
   2b340:	add	x0, x3, x0, lsl #3
   2b344:	ldur	x0, [x0, #-8]
   2b348:	cbz	x0, 2b398 <PyInit__decimal@@Base+0x111f8>
   2b34c:	ldr	x20, [x19, #16]
   2b350:	ldr	x21, [x1]
   2b354:	cmp	x20, x21
   2b358:	b.lt	2b36c <PyInit__decimal@@Base+0x111cc>  // b.tstop
   2b35c:	ldr	x21, [sp, #32]
   2b360:	ldp	x19, x20, [sp, #16]
   2b364:	ldp	x29, x30, [sp], #48
   2b368:	ret
   2b36c:	mov	x3, x2
   2b370:	sub	x2, x21, x20
   2b374:	mov	x1, x19
   2b378:	mov	x0, x19
   2b37c:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2b380:	ldr	x0, [x19, #8]
   2b384:	add	x20, x20, x0
   2b388:	sub	x20, x20, x21
   2b38c:	str	x20, [x19, #8]
   2b390:	ldr	x21, [sp, #32]
   2b394:	b	2b360 <PyInit__decimal@@Base+0x111c0>
   2b398:	ldr	x21, [sp, #32]
   2b39c:	b	2b360 <PyInit__decimal@@Base+0x111c0>
   2b3a0:	stp	x29, x30, [sp, #-64]!
   2b3a4:	mov	x29, sp
   2b3a8:	stp	x19, x20, [sp, #16]
   2b3ac:	str	x21, [sp, #32]
   2b3b0:	mov	x19, x0
   2b3b4:	mov	x20, x1
   2b3b8:	ldr	x0, [x0, #40]
   2b3bc:	ldr	x1, [x19, #24]
   2b3c0:	add	x2, x0, x1, lsl #3
   2b3c4:	ldur	x2, [x2, #-8]
   2b3c8:	cmp	x2, #0x0
   2b3cc:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2b3d0:	mov	x21, #0x0                   	// #0
   2b3d4:	b.ne	2b3ec <PyInit__decimal@@Base+0x1124c>  // b.any
   2b3d8:	mov	x0, x21
   2b3dc:	ldp	x19, x20, [sp, #16]
   2b3e0:	ldr	x21, [sp, #32]
   2b3e4:	ldp	x29, x30, [sp], #64
   2b3e8:	ret
   2b3ec:	ldr	x2, [x19, #16]
   2b3f0:	cmp	x2, x20
   2b3f4:	b.gt	2b410 <PyInit__decimal@@Base+0x11270>
   2b3f8:	cset	w2, eq  // eq = none
   2b3fc:	bl	27318 <PyInit__decimal@@Base+0xd178>
   2b400:	mov	x21, x0
   2b404:	mov	x0, x19
   2b408:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2b40c:	b	2b3d8 <PyInit__decimal@@Base+0x11238>
   2b410:	mov	x3, x20
   2b414:	mov	x2, x1
   2b418:	mov	x1, x0
   2b41c:	bl	1c370 <PyInit__decimal@@Base+0x21d0>
   2b420:	mov	x21, x0
   2b424:	ldr	x1, [x19, #16]
   2b428:	sub	x1, x1, x20
   2b42c:	str	x1, [x19, #16]
   2b430:	mov	x20, #0x9436                	// #37942
   2b434:	movk	x20, #0x50d7, lsl #16
   2b438:	movk	x20, #0x435e, lsl #32
   2b43c:	movk	x20, #0xd79, lsl #48
   2b440:	smulh	x20, x1, x20
   2b444:	sub	x20, x20, x1, asr #63
   2b448:	add	x0, x20, x20, lsl #2
   2b44c:	lsl	x0, x0, #2
   2b450:	sub	x0, x0, x20
   2b454:	cmp	x1, x0
   2b458:	cinc	x20, x20, ne  // ne = any
   2b45c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2b460:	ldr	x1, [x0, #1672]
   2b464:	cmp	x1, x20
   2b468:	csel	x1, x1, x20, ge  // ge = tcont
   2b46c:	ldr	x0, [x19, #32]
   2b470:	cmp	x1, x0
   2b474:	b.eq	2b488 <PyInit__decimal@@Base+0x112e8>  // b.none
   2b478:	ldrb	w2, [x19]
   2b47c:	tbz	w2, #5, 2b4a0 <PyInit__decimal@@Base+0x11300>
   2b480:	cmp	x1, x0
   2b484:	b.gt	2b490 <PyInit__decimal@@Base+0x112f0>
   2b488:	str	x20, [x19, #24]
   2b48c:	b	2b3d8 <PyInit__decimal@@Base+0x11238>
   2b490:	add	x2, sp, #0x3c
   2b494:	mov	x0, x19
   2b498:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2b49c:	b	2b488 <PyInit__decimal@@Base+0x112e8>
   2b4a0:	add	x2, sp, #0x3c
   2b4a4:	mov	x0, x19
   2b4a8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2b4ac:	b	2b488 <PyInit__decimal@@Base+0x112e8>
   2b4b0:	stp	x29, x30, [sp, #-64]!
   2b4b4:	mov	x29, sp
   2b4b8:	stp	x19, x20, [sp, #16]
   2b4bc:	stp	x21, x22, [sp, #32]
   2b4c0:	stp	x23, x24, [sp, #48]
   2b4c4:	mov	x19, x0
   2b4c8:	mov	x20, x1
   2b4cc:	mov	x22, x2
   2b4d0:	ldr	x23, [x0, #8]
   2b4d4:	ldr	x21, [x0, #16]
   2b4d8:	add	x21, x23, x21
   2b4dc:	sub	x21, x21, #0x1
   2b4e0:	ldr	x2, [x1, #8]
   2b4e4:	cmp	x2, x21
   2b4e8:	b.ge	2b664 <PyInit__decimal@@Base+0x114c4>  // b.tcont
   2b4ec:	ldr	x0, [x0, #24]
   2b4f0:	ldr	x1, [x19, #40]
   2b4f4:	add	x0, x1, x0, lsl #3
   2b4f8:	ldur	x0, [x0, #-8]
   2b4fc:	cbz	x0, 2b548 <PyInit__decimal@@Base+0x113a8>
   2b500:	ldr	w0, [x20, #36]
   2b504:	cmp	w0, #0x3
   2b508:	b.eq	2b620 <PyInit__decimal@@Base+0x11480>  // b.none
   2b50c:	b.gt	2b5b0 <PyInit__decimal@@Base+0x11410>
   2b510:	cmp	w0, #0x2
   2b514:	b.ne	2b57c <PyInit__decimal@@Base+0x113dc>  // b.any
   2b518:	ldrb	w0, [x19]
   2b51c:	tbz	w0, #0, 2b60c <PyInit__decimal@@Base+0x1146c>
   2b520:	mov	x2, x22
   2b524:	mov	x1, x20
   2b528:	mov	x0, x19
   2b52c:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2b530:	ldr	x0, [x20, #8]
   2b534:	add	x0, x0, #0x1
   2b538:	ldr	x1, [x20]
   2b53c:	sub	x0, x0, x1
   2b540:	str	x0, [x19, #8]
   2b544:	b	2b5e8 <PyInit__decimal@@Base+0x11448>
   2b548:	str	x2, [x19, #8]
   2b54c:	ldr	w0, [x20, #40]
   2b550:	cbz	w0, 2b564 <PyInit__decimal@@Base+0x113c4>
   2b554:	add	x2, x2, #0x1
   2b558:	ldr	x0, [x20]
   2b55c:	sub	x2, x2, x0
   2b560:	str	x2, [x19, #8]
   2b564:	mov	x0, x19
   2b568:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2b56c:	ldr	w0, [x22]
   2b570:	orr	w0, w0, #0x1
   2b574:	str	w0, [x22]
   2b578:	b	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b57c:	cbz	w0, 2b5d4 <PyInit__decimal@@Base+0x11434>
   2b580:	cmp	w0, #0x1
   2b584:	b.ne	2b5c4 <PyInit__decimal@@Base+0x11424>  // b.any
   2b588:	mov	x2, x22
   2b58c:	mov	x1, x20
   2b590:	mov	x0, x19
   2b594:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2b598:	ldr	x0, [x20, #8]
   2b59c:	add	x0, x0, #0x1
   2b5a0:	ldr	x1, [x20]
   2b5a4:	sub	x0, x0, x1
   2b5a8:	str	x0, [x19, #8]
   2b5ac:	b	2b5e8 <PyInit__decimal@@Base+0x11448>
   2b5b0:	cmp	w0, #0x7
   2b5b4:	b.eq	2b588 <PyInit__decimal@@Base+0x113e8>  // b.none
   2b5b8:	b.le	2b5c8 <PyInit__decimal@@Base+0x11428>
   2b5bc:	cmp	w0, #0x8
   2b5c0:	b.eq	2b5d4 <PyInit__decimal@@Base+0x11434>  // b.none
   2b5c4:	bl	67c0 <abort@plt>
   2b5c8:	sub	w0, w0, #0x4
   2b5cc:	cmp	w0, #0x2
   2b5d0:	b.hi	2b5c4 <PyInit__decimal@@Base+0x11424>  // b.pmore
   2b5d4:	ldrb	w1, [x19]
   2b5d8:	mov	w2, #0x2                   	// #2
   2b5dc:	and	w1, w1, #0x1
   2b5e0:	mov	x0, x19
   2b5e4:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2b5e8:	ldr	w0, [x22]
   2b5ec:	mov	w1, #0x1840                	// #6208
   2b5f0:	orr	w0, w0, w1
   2b5f4:	str	w0, [x22]
   2b5f8:	ldp	x19, x20, [sp, #16]
   2b5fc:	ldp	x21, x22, [sp, #32]
   2b600:	ldp	x23, x24, [sp, #48]
   2b604:	ldp	x29, x30, [sp], #64
   2b608:	ret
   2b60c:	mov	w2, #0x2                   	// #2
   2b610:	mov	w1, #0x0                   	// #0
   2b614:	mov	x0, x19
   2b618:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2b61c:	b	2b5e8 <PyInit__decimal@@Base+0x11448>
   2b620:	ldrb	w0, [x19]
   2b624:	tbnz	w0, #0, 2b650 <PyInit__decimal@@Base+0x114b0>
   2b628:	mov	x2, x22
   2b62c:	mov	x1, x20
   2b630:	mov	x0, x19
   2b634:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2b638:	ldr	x0, [x20, #8]
   2b63c:	add	x0, x0, #0x1
   2b640:	ldr	x1, [x20]
   2b644:	sub	x0, x0, x1
   2b648:	str	x0, [x19, #8]
   2b64c:	b	2b5e8 <PyInit__decimal@@Base+0x11448>
   2b650:	mov	w2, #0x2                   	// #2
   2b654:	mov	w1, #0x1                   	// #1
   2b658:	mov	x0, x19
   2b65c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2b660:	b	2b5e8 <PyInit__decimal@@Base+0x11448>
   2b664:	ldr	w0, [x1, #40]
   2b668:	cbz	w0, 2b680 <PyInit__decimal@@Base+0x114e0>
   2b66c:	ldr	x0, [x1]
   2b670:	add	x2, x2, #0x1
   2b674:	sub	x24, x2, x0
   2b678:	cmp	x23, x24
   2b67c:	b.gt	2b70c <PyInit__decimal@@Base+0x1156c>
   2b680:	ldr	x0, [x20, #16]
   2b684:	cmp	x0, x21
   2b688:	b.le	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b68c:	add	x0, x0, #0x1
   2b690:	ldr	x21, [x20]
   2b694:	sub	x21, x0, x21
   2b698:	ldr	x0, [x19, #24]
   2b69c:	ldr	x1, [x19, #40]
   2b6a0:	add	x0, x1, x0, lsl #3
   2b6a4:	ldur	x0, [x0, #-8]
   2b6a8:	cbz	x0, 2b774 <PyInit__decimal@@Base+0x115d4>
   2b6ac:	ldr	w0, [x22]
   2b6b0:	orr	w0, w0, #0x2000
   2b6b4:	str	w0, [x22]
   2b6b8:	ldr	x1, [x19, #8]
   2b6bc:	cmp	x1, x21
   2b6c0:	b.ge	2b5f8 <PyInit__decimal@@Base+0x11458>  // b.tcont
   2b6c4:	sub	x1, x21, x1
   2b6c8:	mov	x0, x19
   2b6cc:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2b6d0:	mov	x23, x0
   2b6d4:	str	x21, [x19, #8]
   2b6d8:	sxtw	x0, w0
   2b6dc:	ldr	w1, [x20, #36]
   2b6e0:	cmp	w1, #0x4
   2b6e4:	b.eq	2b918 <PyInit__decimal@@Base+0x11778>  // b.none
   2b6e8:	b.gt	2b8bc <PyInit__decimal@@Base+0x1171c>
   2b6ec:	cmp	w1, #0x2
   2b6f0:	b.eq	2b940 <PyInit__decimal@@Base+0x117a0>  // b.none
   2b6f4:	cmp	w1, #0x3
   2b6f8:	b.ne	2b798 <PyInit__decimal@@Base+0x115f8>  // b.any
   2b6fc:	cbz	x0, 2bab8 <PyInit__decimal@@Base+0x11918>
   2b700:	ldrb	w0, [x19]
   2b704:	and	w0, w0, #0x1
   2b708:	b	2b950 <PyInit__decimal@@Base+0x117b0>
   2b70c:	add	x0, x23, x0
   2b710:	mov	x3, x22
   2b714:	sub	x2, x0, x2
   2b718:	mov	x1, x19
   2b71c:	mov	x0, x19
   2b720:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2b724:	cbz	w0, 2b5f8 <PyInit__decimal@@Base+0x11458>
   2b728:	sub	x23, x24, x23
   2b72c:	ldr	x24, [x19, #8]
   2b730:	add	x23, x24, x23
   2b734:	str	x23, [x19, #8]
   2b738:	ldr	w1, [x22]
   2b73c:	orr	w0, w1, #0x1
   2b740:	str	w0, [x22]
   2b744:	ldr	x0, [x19, #24]
   2b748:	ldr	x2, [x19, #40]
   2b74c:	add	x0, x2, x0, lsl #3
   2b750:	ldur	x0, [x0, #-8]
   2b754:	cbz	x0, 2b5f8 <PyInit__decimal@@Base+0x11458>
   2b758:	ldr	x0, [x20, #16]
   2b75c:	cmp	x0, x21
   2b760:	b.le	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b764:	mov	w0, #0x2001                	// #8193
   2b768:	orr	w1, w1, w0
   2b76c:	str	w1, [x22]
   2b770:	b	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b774:	cmp	x23, x21
   2b778:	b.ge	2b5f8 <PyInit__decimal@@Base+0x11458>  // b.tcont
   2b77c:	str	x21, [x19, #8]
   2b780:	mov	x0, x19
   2b784:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2b788:	ldr	w0, [x22]
   2b78c:	orr	w0, w0, #0x1
   2b790:	str	w0, [x22]
   2b794:	b	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b798:	cmp	x0, #0x0
   2b79c:	cset	w0, ne  // ne = any
   2b7a0:	cbnz	w1, 2b874 <PyInit__decimal@@Base+0x116d4>
   2b7a4:	cbz	w0, 2b874 <PyInit__decimal@@Base+0x116d4>
   2b7a8:	ldr	x1, [x19, #24]
   2b7ac:	ldr	x0, [x19, #40]
   2b7b0:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   2b7b4:	cbz	x0, 2b808 <PyInit__decimal@@Base+0x11668>
   2b7b8:	ldr	x0, [x19, #24]
   2b7bc:	add	x0, x0, #0x1
   2b7c0:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2b7c4:	ldr	x1, [x1, #1672]
   2b7c8:	cmp	x0, x1
   2b7cc:	csel	x1, x0, x1, ge  // ge = tcont
   2b7d0:	ldr	x0, [x19, #32]
   2b7d4:	cmp	x1, x0
   2b7d8:	b.eq	2b7ec <PyInit__decimal@@Base+0x1164c>  // b.none
   2b7dc:	ldrb	w2, [x19]
   2b7e0:	tbz	w2, #5, 2b96c <PyInit__decimal@@Base+0x117cc>
   2b7e4:	cmp	x1, x0
   2b7e8:	b.gt	2b95c <PyInit__decimal@@Base+0x117bc>
   2b7ec:	ldr	x1, [x19, #24]
   2b7f0:	ldr	x0, [x19, #40]
   2b7f4:	mov	x2, #0x1                   	// #1
   2b7f8:	str	x2, [x0, x1, lsl #3]
   2b7fc:	ldr	x0, [x19, #24]
   2b800:	add	x0, x0, x2
   2b804:	str	x0, [x19, #24]
   2b808:	ldr	x0, [x19, #24]
   2b80c:	ldr	x1, [x19, #40]
   2b810:	add	x1, x1, x0, lsl #3
   2b814:	ldur	x1, [x1, #-8]
   2b818:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b81c:	ldr	x2, [x2, #3584]
   2b820:	cmp	x1, x2
   2b824:	b.cs	2b9ec <PyInit__decimal@@Base+0x1184c>  // b.hs, b.nlast
   2b828:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b82c:	ldr	x2, [x2, #3544]
   2b830:	cmp	x1, x2
   2b834:	b.cs	2b998 <PyInit__decimal@@Base+0x117f8>  // b.hs, b.nlast
   2b838:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b83c:	ldr	x2, [x2, #3528]
   2b840:	cmp	x1, x2
   2b844:	b.cs	2b980 <PyInit__decimal@@Base+0x117e0>  // b.hs, b.nlast
   2b848:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b84c:	ldr	x2, [x2, #3520]
   2b850:	cmp	x1, x2
   2b854:	cset	w2, cs  // cs = hs, nlast
   2b858:	add	w2, w2, #0x1
   2b85c:	sub	x0, x0, #0x1
   2b860:	add	x1, x0, x0, lsl #2
   2b864:	lsl	x1, x1, #2
   2b868:	sub	x0, x1, x0
   2b86c:	add	x0, x0, w2, sxtw
   2b870:	str	x0, [x19, #16]
   2b874:	ldr	w0, [x22]
   2b878:	orr	w1, w0, #0x1000
   2b87c:	str	w1, [x22]
   2b880:	cbz	w23, 2b5f8 <PyInit__decimal@@Base+0x11458>
   2b884:	mov	w1, #0x5040                	// #20544
   2b888:	orr	w0, w0, w1
   2b88c:	str	w0, [x22]
   2b890:	ldr	x0, [x19, #24]
   2b894:	ldr	x1, [x19, #40]
   2b898:	add	x0, x1, x0, lsl #3
   2b89c:	ldur	x0, [x0, #-8]
   2b8a0:	cbnz	x0, 2b5f8 <PyInit__decimal@@Base+0x11458>
   2b8a4:	mov	x0, x19
   2b8a8:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2b8ac:	ldr	w0, [x22]
   2b8b0:	orr	w0, w0, #0x1
   2b8b4:	str	w0, [x22]
   2b8b8:	b	2b5f8 <PyInit__decimal@@Base+0x11458>
   2b8bc:	cmp	w1, #0x6
   2b8c0:	b.eq	2b924 <PyInit__decimal@@Base+0x11784>  // b.none
   2b8c4:	cmp	w1, #0x7
   2b8c8:	b.ne	2b904 <PyInit__decimal@@Base+0x11764>  // b.any
   2b8cc:	cbz	x0, 2bab8 <PyInit__decimal@@Base+0x11918>
   2b8d0:	ldr	x0, [x19, #40]
   2b8d4:	ldr	x1, [x0]
   2b8d8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2b8dc:	movk	x0, #0xcccd
   2b8e0:	umulh	x0, x1, x0
   2b8e4:	lsr	x0, x0, #3
   2b8e8:	add	x0, x0, x0, lsl #2
   2b8ec:	sub	x0, x1, x0, lsl #1
   2b8f0:	cmp	w0, #0x0
   2b8f4:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2b8f8:	b.eq	2b7a8 <PyInit__decimal@@Base+0x11608>  // b.none
   2b8fc:	ldr	w0, [x22]
   2b900:	b	2b884 <PyInit__decimal@@Base+0x116e4>
   2b904:	cmp	x0, #0x5
   2b908:	cset	w0, hi  // hi = pmore
   2b90c:	cmp	w1, #0x5
   2b910:	b.eq	2b7a4 <PyInit__decimal@@Base+0x11604>  // b.none
   2b914:	b	2b874 <PyInit__decimal@@Base+0x116d4>
   2b918:	cmp	x0, #0x4
   2b91c:	cset	w0, hi  // hi = pmore
   2b920:	b	2b7a4 <PyInit__decimal@@Base+0x11604>
   2b924:	cmp	x0, #0x5
   2b928:	b.hi	2b7a8 <PyInit__decimal@@Base+0x11608>  // b.pmore
   2b92c:	b.ne	2b874 <PyInit__decimal@@Base+0x116d4>  // b.any
   2b930:	ldr	x0, [x19, #40]
   2b934:	ldr	x0, [x0]
   2b938:	and	w0, w0, #0x1
   2b93c:	b	2b950 <PyInit__decimal@@Base+0x117b0>
   2b940:	cbz	x0, 2bab8 <PyInit__decimal@@Base+0x11918>
   2b944:	ldrb	w0, [x19]
   2b948:	eor	w0, w0, #0x1
   2b94c:	and	w0, w0, #0x1
   2b950:	cbnz	w0, 2b7a8 <PyInit__decimal@@Base+0x11608>
   2b954:	ldr	w0, [x22]
   2b958:	b	2b884 <PyInit__decimal@@Base+0x116e4>
   2b95c:	mov	x2, x22
   2b960:	mov	x0, x19
   2b964:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2b968:	b	2b978 <PyInit__decimal@@Base+0x117d8>
   2b96c:	mov	x2, x22
   2b970:	mov	x0, x19
   2b974:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2b978:	cbnz	w0, 2b7ec <PyInit__decimal@@Base+0x1164c>
   2b97c:	b	2b874 <PyInit__decimal@@Base+0x116d4>
   2b980:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b984:	ldr	x2, [x2, #3536]
   2b988:	cmp	x1, x2
   2b98c:	cset	w2, cs  // cs = hs, nlast
   2b990:	add	w2, w2, #0x3
   2b994:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2b998:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b99c:	ldr	x2, [x2, #3560]
   2b9a0:	cmp	x1, x2
   2b9a4:	b.cc	2b9d4 <PyInit__decimal@@Base+0x11834>  // b.lo, b.ul, b.last
   2b9a8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b9ac:	ldr	x3, [x2, #3576]
   2b9b0:	mov	w2, #0x9                   	// #9
   2b9b4:	cmp	x1, x3
   2b9b8:	b.cs	2b85c <PyInit__decimal@@Base+0x116bc>  // b.hs, b.nlast
   2b9bc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b9c0:	ldr	x2, [x2, #3568]
   2b9c4:	cmp	x1, x2
   2b9c8:	cset	w2, cs  // cs = hs, nlast
   2b9cc:	add	w2, w2, #0x7
   2b9d0:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2b9d4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b9d8:	ldr	x2, [x2, #3552]
   2b9dc:	cmp	x1, x2
   2b9e0:	cset	w2, cs  // cs = hs, nlast
   2b9e4:	add	w2, w2, #0x5
   2b9e8:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2b9ec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2b9f0:	ldr	x2, [x2, #3624]
   2b9f4:	cmp	x1, x2
   2b9f8:	b.cs	2ba50 <PyInit__decimal@@Base+0x118b0>  // b.hs, b.nlast
   2b9fc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba00:	ldr	x2, [x2, #3600]
   2ba04:	cmp	x1, x2
   2ba08:	b.cc	2ba38 <PyInit__decimal@@Base+0x11898>  // b.lo, b.ul, b.last
   2ba0c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba10:	ldr	x3, [x2, #3616]
   2ba14:	mov	w2, #0xe                   	// #14
   2ba18:	cmp	x1, x3
   2ba1c:	b.cs	2b85c <PyInit__decimal@@Base+0x116bc>  // b.hs, b.nlast
   2ba20:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba24:	ldr	x2, [x2, #3608]
   2ba28:	cmp	x1, x2
   2ba2c:	cset	w2, cs  // cs = hs, nlast
   2ba30:	add	w2, w2, #0xc
   2ba34:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2ba38:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba3c:	ldr	x2, [x2, #3592]
   2ba40:	cmp	x1, x2
   2ba44:	cset	w2, cs  // cs = hs, nlast
   2ba48:	add	w2, w2, #0xa
   2ba4c:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2ba50:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba54:	ldr	x2, [x2, #3656]
   2ba58:	cmp	x1, x2
   2ba5c:	b.cs	2baa0 <PyInit__decimal@@Base+0x11900>  // b.hs, b.nlast
   2ba60:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba64:	ldr	x2, [x2, #3640]
   2ba68:	cmp	x1, x2
   2ba6c:	b.cs	2ba88 <PyInit__decimal@@Base+0x118e8>  // b.hs, b.nlast
   2ba70:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba74:	ldr	x2, [x2, #3632]
   2ba78:	cmp	x1, x2
   2ba7c:	cset	w2, cs  // cs = hs, nlast
   2ba80:	add	w2, w2, #0xf
   2ba84:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2ba88:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ba8c:	ldr	x2, [x2, #3648]
   2ba90:	cmp	x1, x2
   2ba94:	cset	w2, cs  // cs = hs, nlast
   2ba98:	add	w2, w2, #0x11
   2ba9c:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2baa0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2baa4:	ldr	x2, [x2, #3664]
   2baa8:	cmp	x1, x2
   2baac:	cset	w2, cs  // cs = hs, nlast
   2bab0:	add	w2, w2, #0x13
   2bab4:	b	2b85c <PyInit__decimal@@Base+0x116bc>
   2bab8:	ldr	w0, [x22]
   2babc:	orr	w0, w0, #0x1000
   2bac0:	str	w0, [x22]
   2bac4:	b	2b5f8 <PyInit__decimal@@Base+0x11458>
   2bac8:	stp	x29, x30, [sp, #-64]!
   2bacc:	mov	x29, sp
   2bad0:	stp	x19, x20, [sp, #16]
   2bad4:	mov	x19, x0
   2bad8:	mov	x20, x1
   2badc:	ldrb	w1, [x0]
   2bae0:	tst	w1, #0xe
   2bae4:	b.eq	2bb08 <PyInit__decimal@@Base+0x11968>  // b.none
   2bae8:	tst	w1, #0xc
   2baec:	b.ne	2bafc <PyInit__decimal@@Base+0x1195c>  // b.any
   2baf0:	ldp	x19, x20, [sp, #16]
   2baf4:	ldp	x29, x30, [sp], #64
   2baf8:	ret
   2bafc:	mov	x1, x20
   2bb00:	bl	27838 <PyInit__decimal@@Base+0xd698>
   2bb04:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2bb08:	stp	x21, x22, [sp, #32]
   2bb0c:	stp	x23, x24, [sp, #48]
   2bb10:	mov	x21, x2
   2bb14:	ldr	x23, [x0, #8]
   2bb18:	ldr	x22, [x0, #16]
   2bb1c:	add	x22, x23, x22
   2bb20:	sub	x22, x22, #0x1
   2bb24:	ldr	x2, [x20, #8]
   2bb28:	cmp	x22, x2
   2bb2c:	b.le	2bcb0 <PyInit__decimal@@Base+0x11b10>
   2bb30:	ldr	x0, [x0, #24]
   2bb34:	ldr	x3, [x19, #40]
   2bb38:	add	x0, x3, x0, lsl #3
   2bb3c:	ldur	x0, [x0, #-8]
   2bb40:	cbz	x0, 2bb88 <PyInit__decimal@@Base+0x119e8>
   2bb44:	ldr	w0, [x20, #36]
   2bb48:	cmp	w0, #0x3
   2bb4c:	b.eq	2bc70 <PyInit__decimal@@Base+0x11ad0>  // b.none
   2bb50:	b.gt	2bbf0 <PyInit__decimal@@Base+0x11a50>
   2bb54:	cmp	w0, #0x2
   2bb58:	b.ne	2bbbc <PyInit__decimal@@Base+0x11a1c>  // b.any
   2bb5c:	tbz	w1, #0, 2bc5c <PyInit__decimal@@Base+0x11abc>
   2bb60:	mov	x2, x21
   2bb64:	mov	x1, x20
   2bb68:	mov	x0, x19
   2bb6c:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2bb70:	ldr	x0, [x20, #8]
   2bb74:	add	x0, x0, #0x1
   2bb78:	ldr	x1, [x20]
   2bb7c:	sub	x0, x0, x1
   2bb80:	str	x0, [x19, #8]
   2bb84:	b	2bc24 <PyInit__decimal@@Base+0x11a84>
   2bb88:	str	x2, [x19, #8]
   2bb8c:	ldr	w0, [x20, #40]
   2bb90:	cbz	w0, 2bba4 <PyInit__decimal@@Base+0x11a04>
   2bb94:	add	x2, x2, #0x1
   2bb98:	ldr	x0, [x20]
   2bb9c:	sub	x2, x2, x0
   2bba0:	str	x2, [x19, #8]
   2bba4:	mov	x0, x19
   2bba8:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2bbac:	ldr	w0, [x21]
   2bbb0:	orr	w0, w0, #0x1
   2bbb4:	str	w0, [x21]
   2bbb8:	b	2bc34 <PyInit__decimal@@Base+0x11a94>
   2bbbc:	cbz	w0, 2bc14 <PyInit__decimal@@Base+0x11a74>
   2bbc0:	cmp	w0, #0x1
   2bbc4:	b.ne	2bc04 <PyInit__decimal@@Base+0x11a64>  // b.any
   2bbc8:	mov	x2, x21
   2bbcc:	mov	x1, x20
   2bbd0:	mov	x0, x19
   2bbd4:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2bbd8:	ldr	x0, [x20, #8]
   2bbdc:	add	x0, x0, #0x1
   2bbe0:	ldr	x1, [x20]
   2bbe4:	sub	x0, x0, x1
   2bbe8:	str	x0, [x19, #8]
   2bbec:	b	2bc24 <PyInit__decimal@@Base+0x11a84>
   2bbf0:	cmp	w0, #0x7
   2bbf4:	b.eq	2bbc8 <PyInit__decimal@@Base+0x11a28>  // b.none
   2bbf8:	b.le	2bc08 <PyInit__decimal@@Base+0x11a68>
   2bbfc:	cmp	w0, #0x8
   2bc00:	b.eq	2bc14 <PyInit__decimal@@Base+0x11a74>  // b.none
   2bc04:	bl	67c0 <abort@plt>
   2bc08:	sub	w0, w0, #0x4
   2bc0c:	cmp	w0, #0x2
   2bc10:	b.hi	2bc04 <PyInit__decimal@@Base+0x11a64>  // b.pmore
   2bc14:	mov	w2, #0x2                   	// #2
   2bc18:	and	w1, w1, #0x1
   2bc1c:	mov	x0, x19
   2bc20:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2bc24:	ldr	w0, [x21]
   2bc28:	mov	w1, #0x1840                	// #6208
   2bc2c:	orr	w0, w0, w1
   2bc30:	str	w0, [x21]
   2bc34:	ldrb	w0, [x19]
   2bc38:	tst	w0, #0xe
   2bc3c:	b.ne	2c47c <PyInit__decimal@@Base+0x122dc>  // b.any
   2bc40:	ldr	x0, [x19, #16]
   2bc44:	ldr	x22, [x20]
   2bc48:	cmp	x0, x22
   2bc4c:	b.gt	2c104 <PyInit__decimal@@Base+0x11f64>
   2bc50:	ldp	x21, x22, [sp, #32]
   2bc54:	ldp	x23, x24, [sp, #48]
   2bc58:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2bc5c:	mov	w2, #0x2                   	// #2
   2bc60:	mov	w1, #0x0                   	// #0
   2bc64:	mov	x0, x19
   2bc68:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2bc6c:	b	2bc24 <PyInit__decimal@@Base+0x11a84>
   2bc70:	tbnz	w1, #0, 2bc9c <PyInit__decimal@@Base+0x11afc>
   2bc74:	mov	x2, x21
   2bc78:	mov	x1, x20
   2bc7c:	mov	x0, x19
   2bc80:	bl	28908 <PyInit__decimal@@Base+0xe768>
   2bc84:	ldr	x0, [x20, #8]
   2bc88:	add	x0, x0, #0x1
   2bc8c:	ldr	x1, [x20]
   2bc90:	sub	x0, x0, x1
   2bc94:	str	x0, [x19, #8]
   2bc98:	b	2bc24 <PyInit__decimal@@Base+0x11a84>
   2bc9c:	mov	w2, #0x2                   	// #2
   2bca0:	mov	w1, #0x1                   	// #1
   2bca4:	mov	x0, x19
   2bca8:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2bcac:	b	2bc24 <PyInit__decimal@@Base+0x11a84>
   2bcb0:	ldr	w0, [x20, #40]
   2bcb4:	cbz	w0, 2bccc <PyInit__decimal@@Base+0x11b2c>
   2bcb8:	ldr	x0, [x20]
   2bcbc:	add	x2, x2, #0x1
   2bcc0:	sub	x24, x2, x0
   2bcc4:	cmp	x23, x24
   2bcc8:	b.gt	2bd58 <PyInit__decimal@@Base+0x11bb8>
   2bccc:	ldr	x0, [x20, #16]
   2bcd0:	cmp	x22, x0
   2bcd4:	b.ge	2bc40 <PyInit__decimal@@Base+0x11aa0>  // b.tcont
   2bcd8:	add	x0, x0, #0x1
   2bcdc:	ldr	x22, [x20]
   2bce0:	sub	x22, x0, x22
   2bce4:	ldr	x0, [x19, #24]
   2bce8:	ldr	x1, [x19, #40]
   2bcec:	add	x0, x1, x0, lsl #3
   2bcf0:	ldur	x0, [x0, #-8]
   2bcf4:	cbz	x0, 2bdc0 <PyInit__decimal@@Base+0x11c20>
   2bcf8:	ldr	w0, [x21]
   2bcfc:	orr	w0, w0, #0x2000
   2bd00:	str	w0, [x21]
   2bd04:	ldr	x1, [x19, #8]
   2bd08:	cmp	x22, x1
   2bd0c:	b.le	2bc34 <PyInit__decimal@@Base+0x11a94>
   2bd10:	sub	x1, x22, x1
   2bd14:	mov	x0, x19
   2bd18:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2bd1c:	mov	x23, x0
   2bd20:	str	x22, [x19, #8]
   2bd24:	sxtw	x0, w0
   2bd28:	ldr	w1, [x20, #36]
   2bd2c:	cmp	w1, #0x4
   2bd30:	b.eq	2bf64 <PyInit__decimal@@Base+0x11dc4>  // b.none
   2bd34:	b.gt	2bf08 <PyInit__decimal@@Base+0x11d68>
   2bd38:	cmp	w1, #0x2
   2bd3c:	b.eq	2bf8c <PyInit__decimal@@Base+0x11dec>  // b.none
   2bd40:	cmp	w1, #0x3
   2bd44:	b.ne	2bde4 <PyInit__decimal@@Base+0x11c44>  // b.any
   2bd48:	cbz	x0, 2c46c <PyInit__decimal@@Base+0x122cc>
   2bd4c:	ldrb	w0, [x19]
   2bd50:	and	w0, w0, #0x1
   2bd54:	b	2bf9c <PyInit__decimal@@Base+0x11dfc>
   2bd58:	add	x0, x23, x0
   2bd5c:	mov	x3, x21
   2bd60:	sub	x2, x0, x2
   2bd64:	mov	x1, x19
   2bd68:	mov	x0, x19
   2bd6c:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2bd70:	cbz	w0, 2bc34 <PyInit__decimal@@Base+0x11a94>
   2bd74:	sub	x23, x24, x23
   2bd78:	ldr	x0, [x19, #8]
   2bd7c:	add	x23, x0, x23
   2bd80:	str	x23, [x19, #8]
   2bd84:	ldr	w1, [x21]
   2bd88:	orr	w0, w1, #0x1
   2bd8c:	str	w0, [x21]
   2bd90:	ldr	x0, [x19, #24]
   2bd94:	ldr	x2, [x19, #40]
   2bd98:	add	x0, x2, x0, lsl #3
   2bd9c:	ldur	x0, [x0, #-8]
   2bda0:	cbz	x0, 2bc34 <PyInit__decimal@@Base+0x11a94>
   2bda4:	ldr	x0, [x20, #16]
   2bda8:	cmp	x22, x0
   2bdac:	b.ge	2bc34 <PyInit__decimal@@Base+0x11a94>  // b.tcont
   2bdb0:	mov	w0, #0x2001                	// #8193
   2bdb4:	orr	w1, w1, w0
   2bdb8:	str	w1, [x21]
   2bdbc:	b	2bc34 <PyInit__decimal@@Base+0x11a94>
   2bdc0:	cmp	x23, x22
   2bdc4:	b.ge	2bc40 <PyInit__decimal@@Base+0x11aa0>  // b.tcont
   2bdc8:	str	x22, [x19, #8]
   2bdcc:	mov	x0, x19
   2bdd0:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2bdd4:	ldr	w0, [x21]
   2bdd8:	orr	w0, w0, #0x1
   2bddc:	str	w0, [x21]
   2bde0:	b	2bc34 <PyInit__decimal@@Base+0x11a94>
   2bde4:	cmp	x0, #0x0
   2bde8:	cset	w0, ne  // ne = any
   2bdec:	cbnz	w1, 2bec0 <PyInit__decimal@@Base+0x11d20>
   2bdf0:	cbz	w0, 2bec0 <PyInit__decimal@@Base+0x11d20>
   2bdf4:	ldr	x1, [x19, #24]
   2bdf8:	ldr	x0, [x19, #40]
   2bdfc:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   2be00:	cbz	x0, 2be54 <PyInit__decimal@@Base+0x11cb4>
   2be04:	ldr	x1, [x19, #24]
   2be08:	add	x1, x1, #0x1
   2be0c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2be10:	ldr	x0, [x0, #1672]
   2be14:	cmp	x1, x0
   2be18:	csel	x1, x1, x0, ge  // ge = tcont
   2be1c:	ldr	x0, [x19, #32]
   2be20:	cmp	x1, x0
   2be24:	b.eq	2be38 <PyInit__decimal@@Base+0x11c98>  // b.none
   2be28:	ldrb	w2, [x19]
   2be2c:	tbz	w2, #5, 2bfb8 <PyInit__decimal@@Base+0x11e18>
   2be30:	cmp	x1, x0
   2be34:	b.gt	2bfa8 <PyInit__decimal@@Base+0x11e08>
   2be38:	ldr	x1, [x19, #24]
   2be3c:	ldr	x0, [x19, #40]
   2be40:	mov	x2, #0x1                   	// #1
   2be44:	str	x2, [x0, x1, lsl #3]
   2be48:	ldr	x0, [x19, #24]
   2be4c:	add	x0, x0, x2
   2be50:	str	x0, [x19, #24]
   2be54:	ldr	x1, [x19, #24]
   2be58:	ldr	x0, [x19, #40]
   2be5c:	add	x0, x0, x1, lsl #3
   2be60:	ldur	x2, [x0, #-8]
   2be64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2be68:	ldr	x0, [x0, #3584]
   2be6c:	cmp	x2, x0
   2be70:	b.cs	2c038 <PyInit__decimal@@Base+0x11e98>  // b.hs, b.nlast
   2be74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2be78:	ldr	x0, [x0, #3544]
   2be7c:	cmp	x2, x0
   2be80:	b.cs	2bfe4 <PyInit__decimal@@Base+0x11e44>  // b.hs, b.nlast
   2be84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2be88:	ldr	x0, [x0, #3528]
   2be8c:	cmp	x2, x0
   2be90:	b.cs	2bfcc <PyInit__decimal@@Base+0x11e2c>  // b.hs, b.nlast
   2be94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2be98:	ldr	x0, [x0, #3520]
   2be9c:	cmp	x2, x0
   2bea0:	cset	w0, cs  // cs = hs, nlast
   2bea4:	add	w0, w0, #0x1
   2bea8:	sub	x1, x1, #0x1
   2beac:	add	x2, x1, x1, lsl #2
   2beb0:	lsl	x2, x2, #2
   2beb4:	sub	x1, x2, x1
   2beb8:	add	x0, x1, w0, sxtw
   2bebc:	str	x0, [x19, #16]
   2bec0:	ldr	w0, [x21]
   2bec4:	orr	w1, w0, #0x1000
   2bec8:	str	w1, [x21]
   2becc:	cbz	w23, 2bc34 <PyInit__decimal@@Base+0x11a94>
   2bed0:	mov	w1, #0x5040                	// #20544
   2bed4:	orr	w0, w0, w1
   2bed8:	str	w0, [x21]
   2bedc:	ldr	x0, [x19, #24]
   2bee0:	ldr	x1, [x19, #40]
   2bee4:	add	x0, x1, x0, lsl #3
   2bee8:	ldur	x0, [x0, #-8]
   2beec:	cbnz	x0, 2bc34 <PyInit__decimal@@Base+0x11a94>
   2bef0:	mov	x0, x19
   2bef4:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2bef8:	ldr	w0, [x21]
   2befc:	orr	w0, w0, #0x1
   2bf00:	str	w0, [x21]
   2bf04:	b	2bc34 <PyInit__decimal@@Base+0x11a94>
   2bf08:	cmp	w1, #0x6
   2bf0c:	b.eq	2bf70 <PyInit__decimal@@Base+0x11dd0>  // b.none
   2bf10:	cmp	w1, #0x7
   2bf14:	b.ne	2bf50 <PyInit__decimal@@Base+0x11db0>  // b.any
   2bf18:	cbz	x0, 2c46c <PyInit__decimal@@Base+0x122cc>
   2bf1c:	ldr	x0, [x19, #40]
   2bf20:	ldr	x1, [x0]
   2bf24:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2bf28:	movk	x0, #0xcccd
   2bf2c:	umulh	x0, x1, x0
   2bf30:	lsr	x0, x0, #3
   2bf34:	add	x0, x0, x0, lsl #2
   2bf38:	sub	x0, x1, x0, lsl #1
   2bf3c:	cmp	w0, #0x0
   2bf40:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2bf44:	b.eq	2bdf4 <PyInit__decimal@@Base+0x11c54>  // b.none
   2bf48:	ldr	w0, [x21]
   2bf4c:	b	2bed0 <PyInit__decimal@@Base+0x11d30>
   2bf50:	cmp	x0, #0x5
   2bf54:	cset	w0, hi  // hi = pmore
   2bf58:	cmp	w1, #0x5
   2bf5c:	b.eq	2bdf0 <PyInit__decimal@@Base+0x11c50>  // b.none
   2bf60:	b	2bec0 <PyInit__decimal@@Base+0x11d20>
   2bf64:	cmp	x0, #0x4
   2bf68:	cset	w0, hi  // hi = pmore
   2bf6c:	b	2bdf0 <PyInit__decimal@@Base+0x11c50>
   2bf70:	cmp	x0, #0x5
   2bf74:	b.hi	2bdf4 <PyInit__decimal@@Base+0x11c54>  // b.pmore
   2bf78:	b.ne	2bec0 <PyInit__decimal@@Base+0x11d20>  // b.any
   2bf7c:	ldr	x0, [x19, #40]
   2bf80:	ldr	x0, [x0]
   2bf84:	and	w0, w0, #0x1
   2bf88:	b	2bf9c <PyInit__decimal@@Base+0x11dfc>
   2bf8c:	cbz	x0, 2c46c <PyInit__decimal@@Base+0x122cc>
   2bf90:	ldrb	w0, [x19]
   2bf94:	eor	w0, w0, #0x1
   2bf98:	and	w0, w0, #0x1
   2bf9c:	cbnz	w0, 2bdf4 <PyInit__decimal@@Base+0x11c54>
   2bfa0:	ldr	w0, [x21]
   2bfa4:	b	2bed0 <PyInit__decimal@@Base+0x11d30>
   2bfa8:	mov	x2, x21
   2bfac:	mov	x0, x19
   2bfb0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2bfb4:	b	2bfc4 <PyInit__decimal@@Base+0x11e24>
   2bfb8:	mov	x2, x21
   2bfbc:	mov	x0, x19
   2bfc0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2bfc4:	cbnz	w0, 2be38 <PyInit__decimal@@Base+0x11c98>
   2bfc8:	b	2bec0 <PyInit__decimal@@Base+0x11d20>
   2bfcc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2bfd0:	ldr	x0, [x0, #3536]
   2bfd4:	cmp	x2, x0
   2bfd8:	cset	w0, cs  // cs = hs, nlast
   2bfdc:	add	w0, w0, #0x3
   2bfe0:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2bfe4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2bfe8:	ldr	x0, [x0, #3560]
   2bfec:	cmp	x2, x0
   2bff0:	b.cc	2c020 <PyInit__decimal@@Base+0x11e80>  // b.lo, b.ul, b.last
   2bff4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2bff8:	ldr	x3, [x0, #3576]
   2bffc:	mov	w0, #0x9                   	// #9
   2c000:	cmp	x2, x3
   2c004:	b.cs	2bea8 <PyInit__decimal@@Base+0x11d08>  // b.hs, b.nlast
   2c008:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c00c:	ldr	x0, [x0, #3568]
   2c010:	cmp	x2, x0
   2c014:	cset	w0, cs  // cs = hs, nlast
   2c018:	add	w0, w0, #0x7
   2c01c:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c020:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c024:	ldr	x0, [x0, #3552]
   2c028:	cmp	x2, x0
   2c02c:	cset	w0, cs  // cs = hs, nlast
   2c030:	add	w0, w0, #0x5
   2c034:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c038:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c03c:	ldr	x0, [x0, #3624]
   2c040:	cmp	x2, x0
   2c044:	b.cs	2c09c <PyInit__decimal@@Base+0x11efc>  // b.hs, b.nlast
   2c048:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c04c:	ldr	x0, [x0, #3600]
   2c050:	cmp	x2, x0
   2c054:	b.cc	2c084 <PyInit__decimal@@Base+0x11ee4>  // b.lo, b.ul, b.last
   2c058:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c05c:	ldr	x3, [x0, #3616]
   2c060:	mov	w0, #0xe                   	// #14
   2c064:	cmp	x2, x3
   2c068:	b.cs	2bea8 <PyInit__decimal@@Base+0x11d08>  // b.hs, b.nlast
   2c06c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c070:	ldr	x0, [x0, #3608]
   2c074:	cmp	x2, x0
   2c078:	cset	w0, cs  // cs = hs, nlast
   2c07c:	add	w0, w0, #0xc
   2c080:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c084:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c088:	ldr	x0, [x0, #3592]
   2c08c:	cmp	x2, x0
   2c090:	cset	w0, cs  // cs = hs, nlast
   2c094:	add	w0, w0, #0xa
   2c098:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c09c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c0a0:	ldr	x0, [x0, #3656]
   2c0a4:	cmp	x2, x0
   2c0a8:	b.cs	2c0ec <PyInit__decimal@@Base+0x11f4c>  // b.hs, b.nlast
   2c0ac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c0b0:	ldr	x0, [x0, #3640]
   2c0b4:	cmp	x2, x0
   2c0b8:	b.cs	2c0d4 <PyInit__decimal@@Base+0x11f34>  // b.hs, b.nlast
   2c0bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c0c0:	ldr	x0, [x0, #3632]
   2c0c4:	cmp	x2, x0
   2c0c8:	cset	w0, cs  // cs = hs, nlast
   2c0cc:	add	w0, w0, #0xf
   2c0d0:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c0d4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c0d8:	ldr	x0, [x0, #3648]
   2c0dc:	cmp	x2, x0
   2c0e0:	cset	w0, cs  // cs = hs, nlast
   2c0e4:	add	w0, w0, #0x11
   2c0e8:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c0ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2c0f0:	ldr	x0, [x0, #3664]
   2c0f4:	cmp	x2, x0
   2c0f8:	cset	w0, cs  // cs = hs, nlast
   2c0fc:	add	w0, w0, #0x13
   2c100:	b	2bea8 <PyInit__decimal@@Base+0x11d08>
   2c104:	sub	x22, x0, x22
   2c108:	mov	x1, x22
   2c10c:	mov	x0, x19
   2c110:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2c114:	mov	x23, x0
   2c118:	ldr	x0, [x19, #8]
   2c11c:	add	x0, x0, x22
   2c120:	str	x0, [x19, #8]
   2c124:	ldr	w1, [x20, #36]
   2c128:	cmp	w1, #0x4
   2c12c:	b.eq	2c2a0 <PyInit__decimal@@Base+0x12100>  // b.none
   2c130:	b.gt	2c220 <PyInit__decimal@@Base+0x12080>
   2c134:	cmp	w1, #0x2
   2c138:	b.eq	2c2c8 <PyInit__decimal@@Base+0x12128>  // b.none
   2c13c:	cmp	w1, #0x3
   2c140:	b.ne	2c154 <PyInit__decimal@@Base+0x11fb4>  // b.any
   2c144:	cbz	x23, 2c454 <PyInit__decimal@@Base+0x122b4>
   2c148:	ldrb	w0, [x19]
   2c14c:	and	w0, w0, #0x1
   2c150:	b	2c2d8 <PyInit__decimal@@Base+0x12138>
   2c154:	cmp	x23, #0x0
   2c158:	cset	w0, ne  // ne = any
   2c15c:	cbnz	w1, 2c278 <PyInit__decimal@@Base+0x120d8>
   2c160:	cbz	w0, 2c278 <PyInit__decimal@@Base+0x120d8>
   2c164:	ldr	x1, [x19, #24]
   2c168:	ldr	x0, [x19, #40]
   2c16c:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   2c170:	cbnz	x0, 2c2e4 <PyInit__decimal@@Base+0x12144>
   2c174:	ldr	x0, [x19, #24]
   2c178:	ldr	x1, [x19, #40]
   2c17c:	add	x1, x1, x0, lsl #3
   2c180:	ldur	x2, [x1, #-8]
   2c184:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c188:	ldr	x1, [x1, #3584]
   2c18c:	cmp	x2, x1
   2c190:	b.cs	2c388 <PyInit__decimal@@Base+0x121e8>  // b.hs, b.nlast
   2c194:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c198:	ldr	x1, [x1, #3544]
   2c19c:	cmp	x2, x1
   2c1a0:	b.cs	2c334 <PyInit__decimal@@Base+0x12194>  // b.hs, b.nlast
   2c1a4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c1a8:	ldr	x1, [x1, #3528]
   2c1ac:	cmp	x2, x1
   2c1b0:	b.cs	2c31c <PyInit__decimal@@Base+0x1217c>  // b.hs, b.nlast
   2c1b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c1b8:	ldr	x1, [x1, #3520]
   2c1bc:	cmp	x2, x1
   2c1c0:	cset	w1, cs  // cs = hs, nlast
   2c1c4:	add	w1, w1, #0x1
   2c1c8:	sub	x0, x0, #0x1
   2c1cc:	add	x2, x0, x0, lsl #2
   2c1d0:	lsl	x2, x2, #2
   2c1d4:	sub	x0, x2, x0
   2c1d8:	add	x0, x0, w1, sxtw
   2c1dc:	str	x0, [x19, #16]
   2c1e0:	ldr	x1, [x20]
   2c1e4:	cmp	x1, x0
   2c1e8:	b.ge	2c278 <PyInit__decimal@@Base+0x120d8>  // b.tcont
   2c1ec:	mov	x1, #0x1                   	// #1
   2c1f0:	mov	x0, x19
   2c1f4:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2c1f8:	ldr	x0, [x19, #8]
   2c1fc:	add	x0, x0, #0x1
   2c200:	str	x0, [x19, #8]
   2c204:	ldr	x0, [x20]
   2c208:	str	x0, [x19, #16]
   2c20c:	mov	x2, x21
   2c210:	mov	x1, x20
   2c214:	mov	x0, x19
   2c218:	bl	2b4b0 <PyInit__decimal@@Base+0x11310>
   2c21c:	b	2c278 <PyInit__decimal@@Base+0x120d8>
   2c220:	cmp	w1, #0x6
   2c224:	b.eq	2c2ac <PyInit__decimal@@Base+0x1210c>  // b.none
   2c228:	cmp	w1, #0x7
   2c22c:	b.ne	2c268 <PyInit__decimal@@Base+0x120c8>  // b.any
   2c230:	cbz	x23, 2c454 <PyInit__decimal@@Base+0x122b4>
   2c234:	ldr	x0, [x19, #40]
   2c238:	ldr	x1, [x0]
   2c23c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2c240:	movk	x0, #0xcccd
   2c244:	umulh	x0, x1, x0
   2c248:	lsr	x0, x0, #3
   2c24c:	add	x0, x0, x0, lsl #2
   2c250:	sub	x0, x1, x0, lsl #1
   2c254:	cmp	w0, #0x0
   2c258:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2c25c:	b.eq	2c164 <PyInit__decimal@@Base+0x11fc4>  // b.none
   2c260:	ldr	w0, [x21]
   2c264:	b	2c288 <PyInit__decimal@@Base+0x120e8>
   2c268:	cmp	x23, #0x5
   2c26c:	cset	w0, hi  // hi = pmore
   2c270:	cmp	w1, #0x5
   2c274:	b.eq	2c160 <PyInit__decimal@@Base+0x11fc0>  // b.none
   2c278:	ldr	w0, [x21]
   2c27c:	orr	w1, w0, #0x1000
   2c280:	str	w1, [x21]
   2c284:	cbz	x23, 2c488 <PyInit__decimal@@Base+0x122e8>
   2c288:	mov	w1, #0x1040                	// #4160
   2c28c:	orr	w0, w0, w1
   2c290:	str	w0, [x21]
   2c294:	ldp	x21, x22, [sp, #32]
   2c298:	ldp	x23, x24, [sp, #48]
   2c29c:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2c2a0:	cmp	x23, #0x4
   2c2a4:	cset	w0, hi  // hi = pmore
   2c2a8:	b	2c160 <PyInit__decimal@@Base+0x11fc0>
   2c2ac:	cmp	x23, #0x5
   2c2b0:	b.hi	2c164 <PyInit__decimal@@Base+0x11fc4>  // b.pmore
   2c2b4:	b.ne	2c278 <PyInit__decimal@@Base+0x120d8>  // b.any
   2c2b8:	ldr	x0, [x19, #40]
   2c2bc:	ldr	x0, [x0]
   2c2c0:	and	w0, w0, #0x1
   2c2c4:	b	2c2d8 <PyInit__decimal@@Base+0x12138>
   2c2c8:	cbz	x23, 2c454 <PyInit__decimal@@Base+0x122b4>
   2c2cc:	ldrb	w0, [x19]
   2c2d0:	eor	w0, w0, #0x1
   2c2d4:	and	w0, w0, #0x1
   2c2d8:	cbnz	w0, 2c164 <PyInit__decimal@@Base+0x11fc4>
   2c2dc:	ldr	w0, [x21]
   2c2e0:	b	2c288 <PyInit__decimal@@Base+0x120e8>
   2c2e4:	ldr	x0, [x19, #24]
   2c2e8:	ldr	x1, [x19, #40]
   2c2ec:	add	x0, x1, x0, lsl #3
   2c2f0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c2f4:	ldr	x1, [x1, #3656]
   2c2f8:	stur	x1, [x0, #-8]
   2c2fc:	ldr	x0, [x19, #8]
   2c300:	add	x0, x0, #0x1
   2c304:	str	x0, [x19, #8]
   2c308:	mov	x2, x21
   2c30c:	mov	x1, x20
   2c310:	mov	x0, x19
   2c314:	bl	2b4b0 <PyInit__decimal@@Base+0x11310>
   2c318:	b	2c278 <PyInit__decimal@@Base+0x120d8>
   2c31c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c320:	ldr	x1, [x1, #3536]
   2c324:	cmp	x2, x1
   2c328:	cset	w1, cs  // cs = hs, nlast
   2c32c:	add	w1, w1, #0x3
   2c330:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c334:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c338:	ldr	x1, [x1, #3560]
   2c33c:	cmp	x2, x1
   2c340:	b.cc	2c370 <PyInit__decimal@@Base+0x121d0>  // b.lo, b.ul, b.last
   2c344:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c348:	ldr	x3, [x1, #3576]
   2c34c:	mov	w1, #0x9                   	// #9
   2c350:	cmp	x2, x3
   2c354:	b.cs	2c1c8 <PyInit__decimal@@Base+0x12028>  // b.hs, b.nlast
   2c358:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c35c:	ldr	x1, [x1, #3568]
   2c360:	cmp	x2, x1
   2c364:	cset	w1, cs  // cs = hs, nlast
   2c368:	add	w1, w1, #0x7
   2c36c:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c370:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c374:	ldr	x1, [x1, #3552]
   2c378:	cmp	x2, x1
   2c37c:	cset	w1, cs  // cs = hs, nlast
   2c380:	add	w1, w1, #0x5
   2c384:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c388:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c38c:	ldr	x1, [x1, #3624]
   2c390:	cmp	x2, x1
   2c394:	b.cs	2c3ec <PyInit__decimal@@Base+0x1224c>  // b.hs, b.nlast
   2c398:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c39c:	ldr	x1, [x1, #3600]
   2c3a0:	cmp	x2, x1
   2c3a4:	b.cc	2c3d4 <PyInit__decimal@@Base+0x12234>  // b.lo, b.ul, b.last
   2c3a8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c3ac:	ldr	x3, [x1, #3616]
   2c3b0:	mov	w1, #0xe                   	// #14
   2c3b4:	cmp	x2, x3
   2c3b8:	b.cs	2c1c8 <PyInit__decimal@@Base+0x12028>  // b.hs, b.nlast
   2c3bc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c3c0:	ldr	x1, [x1, #3608]
   2c3c4:	cmp	x2, x1
   2c3c8:	cset	w1, cs  // cs = hs, nlast
   2c3cc:	add	w1, w1, #0xc
   2c3d0:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c3d4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c3d8:	ldr	x1, [x1, #3592]
   2c3dc:	cmp	x2, x1
   2c3e0:	cset	w1, cs  // cs = hs, nlast
   2c3e4:	add	w1, w1, #0xa
   2c3e8:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c3ec:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c3f0:	ldr	x1, [x1, #3656]
   2c3f4:	cmp	x2, x1
   2c3f8:	b.cs	2c43c <PyInit__decimal@@Base+0x1229c>  // b.hs, b.nlast
   2c3fc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c400:	ldr	x1, [x1, #3640]
   2c404:	cmp	x2, x1
   2c408:	b.cs	2c424 <PyInit__decimal@@Base+0x12284>  // b.hs, b.nlast
   2c40c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c410:	ldr	x1, [x1, #3632]
   2c414:	cmp	x2, x1
   2c418:	cset	w1, cs  // cs = hs, nlast
   2c41c:	add	w1, w1, #0xf
   2c420:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c424:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c428:	ldr	x1, [x1, #3648]
   2c42c:	cmp	x2, x1
   2c430:	cset	w1, cs  // cs = hs, nlast
   2c434:	add	w1, w1, #0x11
   2c438:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c43c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2c440:	ldr	x1, [x1, #3664]
   2c444:	cmp	x2, x1
   2c448:	cset	w1, cs  // cs = hs, nlast
   2c44c:	add	w1, w1, #0x13
   2c450:	b	2c1c8 <PyInit__decimal@@Base+0x12028>
   2c454:	ldr	w0, [x21]
   2c458:	orr	w0, w0, #0x1000
   2c45c:	str	w0, [x21]
   2c460:	ldp	x21, x22, [sp, #32]
   2c464:	ldp	x23, x24, [sp, #48]
   2c468:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2c46c:	ldr	w0, [x21]
   2c470:	orr	w0, w0, #0x1000
   2c474:	str	w0, [x21]
   2c478:	b	2bc34 <PyInit__decimal@@Base+0x11a94>
   2c47c:	ldp	x21, x22, [sp, #32]
   2c480:	ldp	x23, x24, [sp, #48]
   2c484:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2c488:	ldp	x21, x22, [sp, #32]
   2c48c:	ldp	x23, x24, [sp, #48]
   2c490:	b	2baf0 <PyInit__decimal@@Base+0x11950>
   2c494:	stp	x29, x30, [sp, #-48]!
   2c498:	mov	x29, sp
   2c49c:	stp	x19, x20, [sp, #16]
   2c4a0:	str	x21, [sp, #32]
   2c4a4:	mov	x19, x0
   2c4a8:	mov	x4, x1
   2c4ac:	mov	x20, x2
   2c4b0:	mov	x21, x3
   2c4b4:	mov	x2, x1
   2c4b8:	mov	w1, #0x0                   	// #0
   2c4bc:	tbnz	x4, #63, 2c4ec <PyInit__decimal@@Base+0x1234c>
   2c4c0:	mov	x3, #0x0                   	// #0
   2c4c4:	mov	x0, x19
   2c4c8:	bl	2606c <PyInit__decimal@@Base+0xbecc>
   2c4cc:	mov	x2, x21
   2c4d0:	mov	x1, x20
   2c4d4:	mov	x0, x19
   2c4d8:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2c4dc:	ldp	x19, x20, [sp, #16]
   2c4e0:	ldr	x21, [sp, #32]
   2c4e4:	ldp	x29, x30, [sp], #48
   2c4e8:	ret
   2c4ec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
   2c4f0:	cmp	x4, x0
   2c4f4:	b.eq	2c504 <PyInit__decimal@@Base+0x12364>  // b.none
   2c4f8:	neg	x2, x4
   2c4fc:	mov	w1, #0x1                   	// #1
   2c500:	b	2c4c0 <PyInit__decimal@@Base+0x12320>
   2c504:	mov	w1, #0x1                   	// #1
   2c508:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
   2c50c:	b	2c4c0 <PyInit__decimal@@Base+0x12320>
   2c510:	stp	x29, x30, [sp, #-16]!
   2c514:	mov	x29, sp
   2c518:	sxtw	x1, w1
   2c51c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   2c520:	ldp	x29, x30, [sp], #16
   2c524:	ret
   2c528:	stp	x29, x30, [sp, #-16]!
   2c52c:	mov	x29, sp
   2c530:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   2c534:	ldp	x29, x30, [sp], #16
   2c538:	ret
   2c53c:	stp	x29, x30, [sp, #-64]!
   2c540:	mov	x29, sp
   2c544:	stp	x19, x20, [sp, #16]
   2c548:	stp	x21, x22, [sp, #32]
   2c54c:	mov	x19, x0
   2c550:	mov	x20, x1
   2c554:	mov	x21, x2
   2c558:	mov	x22, x3
   2c55c:	ldrb	w0, [x0]
   2c560:	tbnz	w0, #5, 2c578 <PyInit__decimal@@Base+0x123d8>
   2c564:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2c568:	ldr	x1, [x0, #1672]
   2c56c:	ldr	x0, [x19, #32]
   2c570:	cmp	x0, x1
   2c574:	b.gt	2c59c <PyInit__decimal@@Base+0x123fc>
   2c578:	mov	x3, x22
   2c57c:	mov	x2, x21
   2c580:	mov	x1, x20
   2c584:	mov	x0, x19
   2c588:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   2c58c:	ldp	x19, x20, [sp, #16]
   2c590:	ldp	x21, x22, [sp, #32]
   2c594:	ldp	x29, x30, [sp], #64
   2c598:	ret
   2c59c:	strb	wzr, [sp, #63]
   2c5a0:	add	x3, sp, #0x3f
   2c5a4:	mov	x2, #0x8                   	// #8
   2c5a8:	ldr	x0, [x19, #40]
   2c5ac:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   2c5b0:	str	x0, [x19, #40]
   2c5b4:	ldrb	w0, [sp, #63]
   2c5b8:	cbnz	w0, 2c578 <PyInit__decimal@@Base+0x123d8>
   2c5bc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2c5c0:	ldr	x0, [x0, #1672]
   2c5c4:	str	x0, [x19, #32]
   2c5c8:	b	2c578 <PyInit__decimal@@Base+0x123d8>
   2c5cc:	stp	x29, x30, [sp, #-16]!
   2c5d0:	mov	x29, sp
   2c5d4:	sxtw	x1, w1
   2c5d8:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
   2c5dc:	ldp	x29, x30, [sp], #16
   2c5e0:	ret
   2c5e4:	stp	x29, x30, [sp, #-16]!
   2c5e8:	mov	x29, sp
   2c5ec:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
   2c5f0:	ldp	x29, x30, [sp], #16
   2c5f4:	ret
   2c5f8:	stp	x29, x30, [sp, #-48]!
   2c5fc:	mov	x29, sp
   2c600:	stp	x19, x20, [sp, #16]
   2c604:	str	x21, [sp, #32]
   2c608:	mov	x19, x0
   2c60c:	mov	x20, x2
   2c610:	mov	x21, x3
   2c614:	mov	x3, #0x0                   	// #0
   2c618:	mov	x2, x1
   2c61c:	mov	w1, #0x0                   	// #0
   2c620:	bl	2606c <PyInit__decimal@@Base+0xbecc>
   2c624:	mov	x2, x21
   2c628:	mov	x1, x20
   2c62c:	mov	x0, x19
   2c630:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2c634:	ldp	x19, x20, [sp, #16]
   2c638:	ldr	x21, [sp, #32]
   2c63c:	ldp	x29, x30, [sp], #48
   2c640:	ret
   2c644:	stp	x29, x30, [sp, #-16]!
   2c648:	mov	x29, sp
   2c64c:	mov	w1, w1
   2c650:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   2c654:	ldp	x29, x30, [sp], #16
   2c658:	ret
   2c65c:	stp	x29, x30, [sp, #-16]!
   2c660:	mov	x29, sp
   2c664:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   2c668:	ldp	x29, x30, [sp], #16
   2c66c:	ret
   2c670:	stp	x29, x30, [sp, #-48]!
   2c674:	mov	x29, sp
   2c678:	stp	x19, x20, [sp, #16]
   2c67c:	str	x21, [sp, #32]
   2c680:	mov	x19, x0
   2c684:	mov	x20, x2
   2c688:	mov	x21, x3
   2c68c:	mov	x3, #0x0                   	// #0
   2c690:	mov	x2, x1
   2c694:	mov	w1, #0x0                   	// #0
   2c698:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2c69c:	mov	x2, x21
   2c6a0:	mov	x1, x20
   2c6a4:	mov	x0, x19
   2c6a8:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2c6ac:	ldp	x19, x20, [sp, #16]
   2c6b0:	ldr	x21, [sp, #32]
   2c6b4:	ldp	x29, x30, [sp], #48
   2c6b8:	ret
   2c6bc:	stp	x29, x30, [sp, #-16]!
   2c6c0:	mov	x29, sp
   2c6c4:	mov	w1, w1
   2c6c8:	bl	2c670 <PyInit__decimal@@Base+0x124d0>
   2c6cc:	ldp	x29, x30, [sp], #16
   2c6d0:	ret
   2c6d4:	stp	x29, x30, [sp, #-16]!
   2c6d8:	mov	x29, sp
   2c6dc:	bl	2c670 <PyInit__decimal@@Base+0x124d0>
   2c6e0:	ldp	x29, x30, [sp], #16
   2c6e4:	ret
   2c6e8:	stp	x29, x30, [sp, #-64]!
   2c6ec:	mov	x29, sp
   2c6f0:	stp	x19, x20, [sp, #16]
   2c6f4:	stp	x21, x22, [sp, #32]
   2c6f8:	stp	x23, x24, [sp, #48]
   2c6fc:	mov	x20, x0
   2c700:	mov	x19, x1
   2c704:	mov	x21, x2
   2c708:	mov	x22, x3
   2c70c:	ldr	x0, [x1, #40]
   2c710:	ldr	x1, [x1, #24]
   2c714:	add	x2, x0, x1, lsl #3
   2c718:	ldur	x2, [x2, #-8]
   2c71c:	cmp	x2, #0x0
   2c720:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   2c724:	b.ne	2c758 <PyInit__decimal@@Base+0x125b8>  // b.any
   2c728:	mov	x2, x3
   2c72c:	mov	x1, x19
   2c730:	mov	x0, x20
   2c734:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2c738:	cmp	w0, #0x0
   2c73c:	csetm	x24, eq  // eq = none
   2c740:	mov	x0, x24
   2c744:	ldp	x19, x20, [sp, #16]
   2c748:	ldp	x21, x22, [sp, #32]
   2c74c:	ldp	x23, x24, [sp, #48]
   2c750:	ldp	x29, x30, [sp], #64
   2c754:	ret
   2c758:	ldr	x2, [x19, #16]
   2c75c:	cmp	x2, x21
   2c760:	b.le	2c804 <PyInit__decimal@@Base+0x12664>
   2c764:	sub	x0, x2, x21
   2c768:	str	x0, [x20, #16]
   2c76c:	mov	x23, #0x9436                	// #37942
   2c770:	movk	x23, #0x50d7, lsl #16
   2c774:	movk	x23, #0x435e, lsl #32
   2c778:	movk	x23, #0xd79, lsl #48
   2c77c:	smulh	x23, x0, x23
   2c780:	sub	x23, x23, x0, asr #63
   2c784:	add	x1, x23, x23, lsl #2
   2c788:	lsl	x1, x1, #2
   2c78c:	sub	x1, x1, x23
   2c790:	cmp	x0, x1
   2c794:	cinc	x23, x23, ne  // ne = any
   2c798:	cmp	x19, x20
   2c79c:	b.eq	2c81c <PyInit__decimal@@Base+0x1267c>  // b.none
   2c7a0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2c7a4:	ldr	x1, [x0, #1672]
   2c7a8:	cmp	x1, x23
   2c7ac:	csel	x1, x1, x23, ge  // ge = tcont
   2c7b0:	ldr	x0, [x20, #32]
   2c7b4:	cmp	x1, x0
   2c7b8:	b.eq	2c7cc <PyInit__decimal@@Base+0x1262c>  // b.none
   2c7bc:	ldrb	w2, [x20]
   2c7c0:	tbz	w2, #5, 2c890 <PyInit__decimal@@Base+0x126f0>
   2c7c4:	cmp	x1, x0
   2c7c8:	b.gt	2c880 <PyInit__decimal@@Base+0x126e0>
   2c7cc:	mov	x3, x21
   2c7d0:	ldr	x2, [x19, #24]
   2c7d4:	ldr	x1, [x19, #40]
   2c7d8:	ldr	x0, [x20, #40]
   2c7dc:	bl	1c370 <PyInit__decimal@@Base+0x21d0>
   2c7e0:	mov	x24, x0
   2c7e4:	str	x23, [x20, #24]
   2c7e8:	ldrb	w0, [x20]
   2c7ec:	ldrb	w1, [x19]
   2c7f0:	bfxil	w0, w1, #0, #4
   2c7f4:	strb	w0, [x20]
   2c7f8:	ldr	x0, [x19, #8]
   2c7fc:	str	x0, [x20, #8]
   2c800:	b	2c740 <PyInit__decimal@@Base+0x125a0>
   2c804:	cset	w2, eq  // eq = none
   2c808:	bl	27318 <PyInit__decimal@@Base+0xd178>
   2c80c:	mov	x24, x0
   2c810:	mov	x0, x20
   2c814:	bl	2888c <PyInit__decimal@@Base+0xe6ec>
   2c818:	b	2c7e8 <PyInit__decimal@@Base+0x12648>
   2c81c:	mov	x3, x21
   2c820:	ldr	x2, [x19, #24]
   2c824:	ldr	x1, [x19, #40]
   2c828:	ldr	x0, [x20, #40]
   2c82c:	bl	1c370 <PyInit__decimal@@Base+0x21d0>
   2c830:	mov	x24, x0
   2c834:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2c838:	ldr	x1, [x0, #1672]
   2c83c:	cmp	x1, x23
   2c840:	csel	x1, x1, x23, ge  // ge = tcont
   2c844:	ldr	x0, [x20, #32]
   2c848:	cmp	x1, x0
   2c84c:	b.eq	2c7e4 <PyInit__decimal@@Base+0x12644>  // b.none
   2c850:	ldrb	w2, [x20]
   2c854:	tbz	w2, #5, 2c870 <PyInit__decimal@@Base+0x126d0>
   2c858:	cmp	x1, x0
   2c85c:	b.le	2c7e4 <PyInit__decimal@@Base+0x12644>
   2c860:	mov	x2, x22
   2c864:	mov	x0, x20
   2c868:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2c86c:	b	2c7e4 <PyInit__decimal@@Base+0x12644>
   2c870:	mov	x2, x22
   2c874:	mov	x0, x20
   2c878:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2c87c:	b	2c7e4 <PyInit__decimal@@Base+0x12644>
   2c880:	mov	x2, x3
   2c884:	mov	x0, x20
   2c888:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2c88c:	b	2c89c <PyInit__decimal@@Base+0x126fc>
   2c890:	mov	x2, x3
   2c894:	mov	x0, x20
   2c898:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2c89c:	mov	x24, #0xffffffffffffffff    	// #-1
   2c8a0:	cbnz	w0, 2c7cc <PyInit__decimal@@Base+0x1262c>
   2c8a4:	b	2c740 <PyInit__decimal@@Base+0x125a0>
   2c8a8:	stp	x29, x30, [sp, #-64]!
   2c8ac:	mov	x29, sp
   2c8b0:	stp	x19, x20, [sp, #16]
   2c8b4:	stp	x21, x22, [sp, #32]
   2c8b8:	mov	x19, x0
   2c8bc:	mov	x21, x4
   2c8c0:	ldrb	w0, [x1]
   2c8c4:	tst	w0, #0xe
   2c8c8:	b.ne	2c8fc <PyInit__decimal@@Base+0x1275c>  // b.any
   2c8cc:	mov	x20, x2
   2c8d0:	mov	x22, x3
   2c8d4:	ldr	x2, [x1, #24]
   2c8d8:	ldr	x3, [x1, #40]
   2c8dc:	add	x2, x3, x2, lsl #3
   2c8e0:	ldur	x2, [x2, #-8]
   2c8e4:	cbnz	x2, 2c918 <PyInit__decimal@@Base+0x12778>
   2c8e8:	mov	x3, x20
   2c8ec:	and	w1, w0, #0x1
   2c8f0:	mov	x0, x19
   2c8f4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2c8f8:	b	2c908 <PyInit__decimal@@Base+0x12768>
   2c8fc:	mov	x2, x4
   2c900:	mov	x0, x19
   2c904:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2c908:	ldp	x19, x20, [sp, #16]
   2c90c:	ldp	x21, x22, [sp, #32]
   2c910:	ldp	x29, x30, [sp], #64
   2c914:	ret
   2c918:	ldr	x0, [x1, #8]
   2c91c:	subs	x2, x0, x20
   2c920:	b.mi	2c9b4 <PyInit__decimal@@Base+0x12814>  // b.first
   2c924:	ldr	x0, [x1, #16]
   2c928:	add	x0, x2, x0
   2c92c:	mov	x3, #0xa7640000            	// #2808348672
   2c930:	movk	x3, #0xb6b3, lsl #32
   2c934:	movk	x3, #0xde0, lsl #48
   2c938:	cmp	x0, x3
   2c93c:	b.gt	2c9a0 <PyInit__decimal@@Base+0x12800>
   2c940:	mov	x3, x4
   2c944:	mov	x0, x19
   2c948:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2c94c:	cbz	w0, 2c908 <PyInit__decimal@@Base+0x12768>
   2c950:	str	x20, [x19, #8]
   2c954:	ldrb	w0, [x19]
   2c958:	tst	w0, #0xe
   2c95c:	b.ne	2c908 <PyInit__decimal@@Base+0x12768>  // b.any
   2c960:	ldr	x0, [x19, #24]
   2c964:	ldr	x1, [x19, #40]
   2c968:	add	x0, x1, x0, lsl #3
   2c96c:	ldur	x0, [x0, #-8]
   2c970:	cbz	x0, 2c908 <PyInit__decimal@@Base+0x12768>
   2c974:	ldr	x0, [x19, #8]
   2c978:	ldr	x1, [x19, #16]
   2c97c:	add	x0, x0, x1
   2c980:	sub	x0, x0, #0x1
   2c984:	ldr	x1, [x22, #16]
   2c988:	cmp	x0, x1
   2c98c:	b.ge	2c908 <PyInit__decimal@@Base+0x12768>  // b.tcont
   2c990:	ldr	w0, [x21]
   2c994:	orr	w0, w0, #0x2000
   2c998:	str	w0, [x21]
   2c99c:	b	2c908 <PyInit__decimal@@Base+0x12768>
   2c9a0:	mov	x2, x4
   2c9a4:	mov	w1, #0x100                 	// #256
   2c9a8:	mov	x0, x19
   2c9ac:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2c9b0:	b	2c908 <PyInit__decimal@@Base+0x12768>
   2c9b4:	str	x23, [sp, #48]
   2c9b8:	mov	x3, x4
   2c9bc:	sub	x2, x20, x0
   2c9c0:	mov	x0, x19
   2c9c4:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   2c9c8:	mov	x23, x0
   2c9cc:	cmn	x0, #0x1
   2c9d0:	b.eq	2cd20 <PyInit__decimal@@Base+0x12b80>  // b.none
   2c9d4:	str	x20, [x19, #8]
   2c9d8:	ldr	w0, [x22, #36]
   2c9dc:	cmp	w0, #0x4
   2c9e0:	b.eq	2cb64 <PyInit__decimal@@Base+0x129c4>  // b.none
   2c9e4:	b.gt	2cb08 <PyInit__decimal@@Base+0x12968>
   2c9e8:	cmp	w0, #0x2
   2c9ec:	b.eq	2cb8c <PyInit__decimal@@Base+0x129ec>  // b.none
   2c9f0:	cmp	w0, #0x3
   2c9f4:	b.ne	2ca08 <PyInit__decimal@@Base+0x12868>  // b.any
   2c9f8:	cbz	x23, 2cd0c <PyInit__decimal@@Base+0x12b6c>
   2c9fc:	ldrb	w0, [x19]
   2ca00:	and	w0, w0, #0x1
   2ca04:	b	2cb9c <PyInit__decimal@@Base+0x129fc>
   2ca08:	cmp	x23, #0x0
   2ca0c:	cset	w1, ne  // ne = any
   2ca10:	cbnz	w0, 2cae4 <PyInit__decimal@@Base+0x12944>
   2ca14:	cbz	w1, 2cae4 <PyInit__decimal@@Base+0x12944>
   2ca18:	ldr	x1, [x19, #24]
   2ca1c:	ldr	x0, [x19, #40]
   2ca20:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   2ca24:	cbz	x0, 2ca78 <PyInit__decimal@@Base+0x128d8>
   2ca28:	ldr	x0, [x19, #24]
   2ca2c:	add	x0, x0, #0x1
   2ca30:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2ca34:	ldr	x1, [x1, #1672]
   2ca38:	cmp	x0, x1
   2ca3c:	csel	x1, x0, x1, ge  // ge = tcont
   2ca40:	ldr	x0, [x19, #32]
   2ca44:	cmp	x1, x0
   2ca48:	b.eq	2ca5c <PyInit__decimal@@Base+0x128bc>  // b.none
   2ca4c:	ldrb	w2, [x19]
   2ca50:	tbz	w2, #5, 2cbb8 <PyInit__decimal@@Base+0x12a18>
   2ca54:	cmp	x1, x0
   2ca58:	b.gt	2cba8 <PyInit__decimal@@Base+0x12a08>
   2ca5c:	ldr	x1, [x19, #24]
   2ca60:	ldr	x0, [x19, #40]
   2ca64:	mov	x2, #0x1                   	// #1
   2ca68:	str	x2, [x0, x1, lsl #3]
   2ca6c:	ldr	x0, [x19, #24]
   2ca70:	add	x0, x0, x2
   2ca74:	str	x0, [x19, #24]
   2ca78:	ldr	x0, [x19, #24]
   2ca7c:	ldr	x1, [x19, #40]
   2ca80:	add	x1, x1, x0, lsl #3
   2ca84:	ldur	x1, [x1, #-8]
   2ca88:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ca8c:	ldr	x2, [x2, #3584]
   2ca90:	cmp	x1, x2
   2ca94:	b.cs	2cc38 <PyInit__decimal@@Base+0x12a98>  // b.hs, b.nlast
   2ca98:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ca9c:	ldr	x2, [x2, #3544]
   2caa0:	cmp	x1, x2
   2caa4:	b.cs	2cbe4 <PyInit__decimal@@Base+0x12a44>  // b.hs, b.nlast
   2caa8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2caac:	ldr	x2, [x2, #3528]
   2cab0:	cmp	x1, x2
   2cab4:	b.cs	2cbcc <PyInit__decimal@@Base+0x12a2c>  // b.hs, b.nlast
   2cab8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cabc:	ldr	x2, [x2, #3520]
   2cac0:	cmp	x1, x2
   2cac4:	cset	w2, cs  // cs = hs, nlast
   2cac8:	add	w2, w2, #0x1
   2cacc:	sub	x0, x0, #0x1
   2cad0:	add	x1, x0, x0, lsl #2
   2cad4:	lsl	x1, x1, #2
   2cad8:	sub	x0, x1, x0
   2cadc:	add	x0, x0, w2, sxtw
   2cae0:	str	x0, [x19, #16]
   2cae4:	ldr	w0, [x21]
   2cae8:	orr	w1, w0, #0x1000
   2caec:	str	w1, [x21]
   2caf0:	cbz	x23, 2cd04 <PyInit__decimal@@Base+0x12b64>
   2caf4:	mov	w1, #0x1040                	// #4160
   2caf8:	orr	w0, w0, w1
   2cafc:	str	w0, [x21]
   2cb00:	ldr	x23, [sp, #48]
   2cb04:	b	2c954 <PyInit__decimal@@Base+0x127b4>
   2cb08:	cmp	w0, #0x6
   2cb0c:	b.eq	2cb70 <PyInit__decimal@@Base+0x129d0>  // b.none
   2cb10:	cmp	w0, #0x7
   2cb14:	b.ne	2cb50 <PyInit__decimal@@Base+0x129b0>  // b.any
   2cb18:	cbz	x23, 2cd0c <PyInit__decimal@@Base+0x12b6c>
   2cb1c:	ldr	x0, [x19, #40]
   2cb20:	ldr	x1, [x0]
   2cb24:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2cb28:	movk	x0, #0xcccd
   2cb2c:	umulh	x0, x1, x0
   2cb30:	lsr	x0, x0, #3
   2cb34:	add	x0, x0, x0, lsl #2
   2cb38:	sub	x0, x1, x0, lsl #1
   2cb3c:	cmp	w0, #0x0
   2cb40:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2cb44:	b.eq	2ca18 <PyInit__decimal@@Base+0x12878>  // b.none
   2cb48:	ldr	w0, [x21]
   2cb4c:	b	2caf4 <PyInit__decimal@@Base+0x12954>
   2cb50:	cmp	x23, #0x5
   2cb54:	cset	w1, hi  // hi = pmore
   2cb58:	cmp	w0, #0x5
   2cb5c:	b.eq	2ca14 <PyInit__decimal@@Base+0x12874>  // b.none
   2cb60:	b	2cae4 <PyInit__decimal@@Base+0x12944>
   2cb64:	cmp	x23, #0x4
   2cb68:	cset	w1, hi  // hi = pmore
   2cb6c:	b	2ca14 <PyInit__decimal@@Base+0x12874>
   2cb70:	cmp	x23, #0x5
   2cb74:	b.hi	2ca18 <PyInit__decimal@@Base+0x12878>  // b.pmore
   2cb78:	b.ne	2cae4 <PyInit__decimal@@Base+0x12944>  // b.any
   2cb7c:	ldr	x0, [x19, #40]
   2cb80:	ldr	x0, [x0]
   2cb84:	and	w0, w0, #0x1
   2cb88:	b	2cb9c <PyInit__decimal@@Base+0x129fc>
   2cb8c:	cbz	x23, 2cd0c <PyInit__decimal@@Base+0x12b6c>
   2cb90:	ldrb	w0, [x19]
   2cb94:	eor	w0, w0, #0x1
   2cb98:	and	w0, w0, #0x1
   2cb9c:	cbnz	w0, 2ca18 <PyInit__decimal@@Base+0x12878>
   2cba0:	ldr	w0, [x21]
   2cba4:	b	2caf4 <PyInit__decimal@@Base+0x12954>
   2cba8:	mov	x2, x21
   2cbac:	mov	x0, x19
   2cbb0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2cbb4:	b	2cbc4 <PyInit__decimal@@Base+0x12a24>
   2cbb8:	mov	x2, x21
   2cbbc:	mov	x0, x19
   2cbc0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2cbc4:	cbnz	w0, 2ca5c <PyInit__decimal@@Base+0x128bc>
   2cbc8:	b	2cae4 <PyInit__decimal@@Base+0x12944>
   2cbcc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cbd0:	ldr	x2, [x2, #3536]
   2cbd4:	cmp	x1, x2
   2cbd8:	cset	w2, cs  // cs = hs, nlast
   2cbdc:	add	w2, w2, #0x3
   2cbe0:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cbe4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cbe8:	ldr	x2, [x2, #3560]
   2cbec:	cmp	x1, x2
   2cbf0:	b.cc	2cc20 <PyInit__decimal@@Base+0x12a80>  // b.lo, b.ul, b.last
   2cbf4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cbf8:	ldr	x3, [x2, #3576]
   2cbfc:	mov	w2, #0x9                   	// #9
   2cc00:	cmp	x1, x3
   2cc04:	b.cs	2cacc <PyInit__decimal@@Base+0x1292c>  // b.hs, b.nlast
   2cc08:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc0c:	ldr	x2, [x2, #3568]
   2cc10:	cmp	x1, x2
   2cc14:	cset	w2, cs  // cs = hs, nlast
   2cc18:	add	w2, w2, #0x7
   2cc1c:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cc20:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc24:	ldr	x2, [x2, #3552]
   2cc28:	cmp	x1, x2
   2cc2c:	cset	w2, cs  // cs = hs, nlast
   2cc30:	add	w2, w2, #0x5
   2cc34:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cc38:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc3c:	ldr	x2, [x2, #3624]
   2cc40:	cmp	x1, x2
   2cc44:	b.cs	2cc9c <PyInit__decimal@@Base+0x12afc>  // b.hs, b.nlast
   2cc48:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc4c:	ldr	x2, [x2, #3600]
   2cc50:	cmp	x1, x2
   2cc54:	b.cc	2cc84 <PyInit__decimal@@Base+0x12ae4>  // b.lo, b.ul, b.last
   2cc58:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc5c:	ldr	x3, [x2, #3616]
   2cc60:	mov	w2, #0xe                   	// #14
   2cc64:	cmp	x1, x3
   2cc68:	b.cs	2cacc <PyInit__decimal@@Base+0x1292c>  // b.hs, b.nlast
   2cc6c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc70:	ldr	x2, [x2, #3608]
   2cc74:	cmp	x1, x2
   2cc78:	cset	w2, cs  // cs = hs, nlast
   2cc7c:	add	w2, w2, #0xc
   2cc80:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cc84:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cc88:	ldr	x2, [x2, #3592]
   2cc8c:	cmp	x1, x2
   2cc90:	cset	w2, cs  // cs = hs, nlast
   2cc94:	add	w2, w2, #0xa
   2cc98:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cc9c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cca0:	ldr	x2, [x2, #3656]
   2cca4:	cmp	x1, x2
   2cca8:	b.cs	2ccec <PyInit__decimal@@Base+0x12b4c>  // b.hs, b.nlast
   2ccac:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ccb0:	ldr	x2, [x2, #3640]
   2ccb4:	cmp	x1, x2
   2ccb8:	b.cs	2ccd4 <PyInit__decimal@@Base+0x12b34>  // b.hs, b.nlast
   2ccbc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ccc0:	ldr	x2, [x2, #3632]
   2ccc4:	cmp	x1, x2
   2ccc8:	cset	w2, cs  // cs = hs, nlast
   2cccc:	add	w2, w2, #0xf
   2ccd0:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2ccd4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ccd8:	ldr	x2, [x2, #3648]
   2ccdc:	cmp	x1, x2
   2cce0:	cset	w2, cs  // cs = hs, nlast
   2cce4:	add	w2, w2, #0x11
   2cce8:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2ccec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ccf0:	ldr	x2, [x2, #3664]
   2ccf4:	cmp	x1, x2
   2ccf8:	cset	w2, cs  // cs = hs, nlast
   2ccfc:	add	w2, w2, #0x13
   2cd00:	b	2cacc <PyInit__decimal@@Base+0x1292c>
   2cd04:	ldr	x23, [sp, #48]
   2cd08:	b	2c954 <PyInit__decimal@@Base+0x127b4>
   2cd0c:	ldr	w0, [x21]
   2cd10:	orr	w0, w0, #0x1000
   2cd14:	str	w0, [x21]
   2cd18:	ldr	x23, [sp, #48]
   2cd1c:	b	2c954 <PyInit__decimal@@Base+0x127b4>
   2cd20:	ldr	x23, [sp, #48]
   2cd24:	b	2c908 <PyInit__decimal@@Base+0x12768>
   2cd28:	stp	x29, x30, [sp, #-64]!
   2cd2c:	mov	x29, sp
   2cd30:	stp	x19, x20, [sp, #16]
   2cd34:	stp	x21, x22, [sp, #32]
   2cd38:	mov	x22, x1
   2cd3c:	mov	x19, x2
   2cd40:	mov	x21, x3
   2cd44:	mov	x20, x4
   2cd48:	ldrb	w1, [x2]
   2cd4c:	tst	w1, #0xe
   2cd50:	b.ne	2cdac <PyInit__decimal@@Base+0x12c0c>  // b.any
   2cd54:	str	x23, [sp, #48]
   2cd58:	mov	w23, w0
   2cd5c:	ldr	x2, [x2, #8]
   2cd60:	tbz	x2, #63, 2cde8 <PyInit__decimal@@Base+0x12c48>
   2cd64:	ldr	x0, [x19, #24]
   2cd68:	ldr	x3, [x19, #40]
   2cd6c:	add	x0, x3, x0, lsl #3
   2cd70:	ldur	x0, [x0, #-8]
   2cd74:	cbz	x0, 2ce00 <PyInit__decimal@@Base+0x12c60>
   2cd78:	mov	x3, x4
   2cd7c:	neg	x2, x2
   2cd80:	mov	x1, x19
   2cd84:	mov	x0, x22
   2cd88:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   2cd8c:	mov	x19, x0
   2cd90:	cmn	x0, #0x1
   2cd94:	b.eq	2d168 <PyInit__decimal@@Base+0x12fc8>  // b.none
   2cd98:	str	xzr, [x22, #8]
   2cd9c:	cmp	w23, #0x1
   2cda0:	b.ls	2ce1c <PyInit__decimal@@Base+0x12c7c>  // b.plast
   2cda4:	ldr	x23, [sp, #48]
   2cda8:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2cdac:	mov	x3, x4
   2cdb0:	mov	x2, x21
   2cdb4:	mov	x1, x19
   2cdb8:	mov	x0, x22
   2cdbc:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   2cdc0:	cbz	w0, 2cdd4 <PyInit__decimal@@Base+0x12c34>
   2cdc4:	ldp	x19, x20, [sp, #16]
   2cdc8:	ldp	x21, x22, [sp, #32]
   2cdcc:	ldp	x29, x30, [sp], #64
   2cdd0:	ret
   2cdd4:	mov	x2, x20
   2cdd8:	mov	x1, x19
   2cddc:	mov	x0, x22
   2cde0:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2cde4:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2cde8:	mov	x2, x4
   2cdec:	mov	x1, x19
   2cdf0:	mov	x0, x22
   2cdf4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2cdf8:	ldr	x23, [sp, #48]
   2cdfc:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2ce00:	mov	x3, #0x0                   	// #0
   2ce04:	mov	x2, #0x0                   	// #0
   2ce08:	and	w1, w1, #0x1
   2ce0c:	mov	x0, x22
   2ce10:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   2ce14:	ldr	x23, [sp, #48]
   2ce18:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2ce1c:	ldr	w0, [x21, #36]
   2ce20:	cmp	w0, #0x4
   2ce24:	b.eq	2cfa8 <PyInit__decimal@@Base+0x12e08>  // b.none
   2ce28:	b.gt	2cf48 <PyInit__decimal@@Base+0x12da8>
   2ce2c:	cmp	w0, #0x2
   2ce30:	b.eq	2cfd0 <PyInit__decimal@@Base+0x12e30>  // b.none
   2ce34:	cmp	w0, #0x3
   2ce38:	b.ne	2ce4c <PyInit__decimal@@Base+0x12cac>  // b.any
   2ce3c:	cbz	x19, 2d140 <PyInit__decimal@@Base+0x12fa0>
   2ce40:	ldrb	w1, [x22]
   2ce44:	and	w1, w1, #0x1
   2ce48:	b	2ce58 <PyInit__decimal@@Base+0x12cb8>
   2ce4c:	cmp	x19, #0x0
   2ce50:	cset	w1, ne  // ne = any
   2ce54:	cbnz	w0, 2cf28 <PyInit__decimal@@Base+0x12d88>
   2ce58:	cbz	w1, 2cf28 <PyInit__decimal@@Base+0x12d88>
   2ce5c:	ldr	x1, [x22, #24]
   2ce60:	ldr	x0, [x22, #40]
   2ce64:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   2ce68:	cbz	x0, 2cebc <PyInit__decimal@@Base+0x12d1c>
   2ce6c:	ldr	x0, [x22, #24]
   2ce70:	add	x0, x0, #0x1
   2ce74:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2ce78:	ldr	x1, [x1, #1672]
   2ce7c:	cmp	x0, x1
   2ce80:	csel	x1, x0, x1, ge  // ge = tcont
   2ce84:	ldr	x0, [x22, #32]
   2ce88:	cmp	x1, x0
   2ce8c:	b.eq	2cea0 <PyInit__decimal@@Base+0x12d00>  // b.none
   2ce90:	ldrb	w2, [x22]
   2ce94:	tbz	w2, #5, 2cff4 <PyInit__decimal@@Base+0x12e54>
   2ce98:	cmp	x1, x0
   2ce9c:	b.gt	2cfe4 <PyInit__decimal@@Base+0x12e44>
   2cea0:	ldr	x1, [x22, #24]
   2cea4:	ldr	x0, [x22, #40]
   2cea8:	mov	x2, #0x1                   	// #1
   2ceac:	str	x2, [x0, x1, lsl #3]
   2ceb0:	ldr	x0, [x22, #24]
   2ceb4:	add	x0, x0, x2
   2ceb8:	str	x0, [x22, #24]
   2cebc:	ldr	x0, [x22, #24]
   2cec0:	ldr	x1, [x22, #40]
   2cec4:	add	x1, x1, x0, lsl #3
   2cec8:	ldur	x1, [x1, #-8]
   2cecc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2ced0:	ldr	x2, [x2, #3584]
   2ced4:	cmp	x1, x2
   2ced8:	b.cs	2d074 <PyInit__decimal@@Base+0x12ed4>  // b.hs, b.nlast
   2cedc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cee0:	ldr	x2, [x2, #3544]
   2cee4:	cmp	x1, x2
   2cee8:	b.cs	2d020 <PyInit__decimal@@Base+0x12e80>  // b.hs, b.nlast
   2ceec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cef0:	ldr	x2, [x2, #3528]
   2cef4:	cmp	x1, x2
   2cef8:	b.cs	2d008 <PyInit__decimal@@Base+0x12e68>  // b.hs, b.nlast
   2cefc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2cf00:	ldr	x2, [x2, #3520]
   2cf04:	cmp	x1, x2
   2cf08:	cset	w2, cs  // cs = hs, nlast
   2cf0c:	add	w2, w2, #0x1
   2cf10:	sub	x0, x0, #0x1
   2cf14:	add	x1, x0, x0, lsl #2
   2cf18:	lsl	x1, x1, #2
   2cf1c:	sub	x0, x1, x0
   2cf20:	add	x0, x0, w2, sxtw
   2cf24:	str	x0, [x22, #16]
   2cf28:	cbnz	w23, 2d170 <PyInit__decimal@@Base+0x12fd0>
   2cf2c:	ldr	w0, [x20]
   2cf30:	cbz	x19, 2d148 <PyInit__decimal@@Base+0x12fa8>
   2cf34:	mov	w1, #0x1040                	// #4160
   2cf38:	orr	w0, w0, w1
   2cf3c:	str	w0, [x20]
   2cf40:	ldr	x23, [sp, #48]
   2cf44:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2cf48:	cmp	w0, #0x6
   2cf4c:	b.eq	2cfb4 <PyInit__decimal@@Base+0x12e14>  // b.none
   2cf50:	cmp	w0, #0x7
   2cf54:	b.ne	2cf94 <PyInit__decimal@@Base+0x12df4>  // b.any
   2cf58:	ldr	x0, [x22, #40]
   2cf5c:	ldr	x1, [x0]
   2cf60:	cbz	x19, 2d140 <PyInit__decimal@@Base+0x12fa0>
   2cf64:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2cf68:	movk	x0, #0xcccd
   2cf6c:	umulh	x0, x1, x0
   2cf70:	lsr	x0, x0, #3
   2cf74:	add	x0, x0, x0, lsl #2
   2cf78:	sub	x0, x1, x0, lsl #1
   2cf7c:	cmp	w0, #0x0
   2cf80:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2cf84:	b.eq	2ce5c <PyInit__decimal@@Base+0x12cbc>  // b.none
   2cf88:	cbz	w23, 2d160 <PyInit__decimal@@Base+0x12fc0>
   2cf8c:	ldr	x23, [sp, #48]
   2cf90:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2cf94:	cmp	x19, #0x5
   2cf98:	cset	w1, hi  // hi = pmore
   2cf9c:	cmp	w0, #0x5
   2cfa0:	b.eq	2ce58 <PyInit__decimal@@Base+0x12cb8>  // b.none
   2cfa4:	b	2cf28 <PyInit__decimal@@Base+0x12d88>
   2cfa8:	cmp	x19, #0x4
   2cfac:	cset	w1, hi  // hi = pmore
   2cfb0:	b	2ce58 <PyInit__decimal@@Base+0x12cb8>
   2cfb4:	cmp	x19, #0x5
   2cfb8:	b.hi	2ce5c <PyInit__decimal@@Base+0x12cbc>  // b.pmore
   2cfbc:	b.ne	2cf28 <PyInit__decimal@@Base+0x12d88>  // b.any
   2cfc0:	ldr	x0, [x22, #40]
   2cfc4:	ldr	x1, [x0]
   2cfc8:	and	w1, w1, #0x1
   2cfcc:	b	2ce58 <PyInit__decimal@@Base+0x12cb8>
   2cfd0:	cbz	x19, 2d140 <PyInit__decimal@@Base+0x12fa0>
   2cfd4:	ldrb	w1, [x22]
   2cfd8:	eor	w1, w1, #0x1
   2cfdc:	and	w1, w1, #0x1
   2cfe0:	b	2ce58 <PyInit__decimal@@Base+0x12cb8>
   2cfe4:	mov	x2, x20
   2cfe8:	mov	x0, x22
   2cfec:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2cff0:	b	2d000 <PyInit__decimal@@Base+0x12e60>
   2cff4:	mov	x2, x20
   2cff8:	mov	x0, x22
   2cffc:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2d000:	cbnz	w0, 2cea0 <PyInit__decimal@@Base+0x12d00>
   2d004:	b	2cf28 <PyInit__decimal@@Base+0x12d88>
   2d008:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d00c:	ldr	x2, [x2, #3536]
   2d010:	cmp	x1, x2
   2d014:	cset	w2, cs  // cs = hs, nlast
   2d018:	add	w2, w2, #0x3
   2d01c:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d020:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d024:	ldr	x2, [x2, #3560]
   2d028:	cmp	x1, x2
   2d02c:	b.cc	2d05c <PyInit__decimal@@Base+0x12ebc>  // b.lo, b.ul, b.last
   2d030:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d034:	ldr	x3, [x2, #3576]
   2d038:	mov	w2, #0x9                   	// #9
   2d03c:	cmp	x1, x3
   2d040:	b.cs	2cf10 <PyInit__decimal@@Base+0x12d70>  // b.hs, b.nlast
   2d044:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d048:	ldr	x2, [x2, #3568]
   2d04c:	cmp	x1, x2
   2d050:	cset	w2, cs  // cs = hs, nlast
   2d054:	add	w2, w2, #0x7
   2d058:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d05c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d060:	ldr	x2, [x2, #3552]
   2d064:	cmp	x1, x2
   2d068:	cset	w2, cs  // cs = hs, nlast
   2d06c:	add	w2, w2, #0x5
   2d070:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d074:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d078:	ldr	x2, [x2, #3624]
   2d07c:	cmp	x1, x2
   2d080:	b.cs	2d0d8 <PyInit__decimal@@Base+0x12f38>  // b.hs, b.nlast
   2d084:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d088:	ldr	x2, [x2, #3600]
   2d08c:	cmp	x1, x2
   2d090:	b.cc	2d0c0 <PyInit__decimal@@Base+0x12f20>  // b.lo, b.ul, b.last
   2d094:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d098:	ldr	x3, [x2, #3616]
   2d09c:	mov	w2, #0xe                   	// #14
   2d0a0:	cmp	x1, x3
   2d0a4:	b.cs	2cf10 <PyInit__decimal@@Base+0x12d70>  // b.hs, b.nlast
   2d0a8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d0ac:	ldr	x2, [x2, #3608]
   2d0b0:	cmp	x1, x2
   2d0b4:	cset	w2, cs  // cs = hs, nlast
   2d0b8:	add	w2, w2, #0xc
   2d0bc:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d0c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d0c4:	ldr	x2, [x2, #3592]
   2d0c8:	cmp	x1, x2
   2d0cc:	cset	w2, cs  // cs = hs, nlast
   2d0d0:	add	w2, w2, #0xa
   2d0d4:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d0d8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d0dc:	ldr	x2, [x2, #3656]
   2d0e0:	cmp	x1, x2
   2d0e4:	b.cs	2d128 <PyInit__decimal@@Base+0x12f88>  // b.hs, b.nlast
   2d0e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d0ec:	ldr	x2, [x2, #3640]
   2d0f0:	cmp	x1, x2
   2d0f4:	b.cs	2d110 <PyInit__decimal@@Base+0x12f70>  // b.hs, b.nlast
   2d0f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d0fc:	ldr	x2, [x2, #3632]
   2d100:	cmp	x1, x2
   2d104:	cset	w2, cs  // cs = hs, nlast
   2d108:	add	w2, w2, #0xf
   2d10c:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d110:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d114:	ldr	x2, [x2, #3648]
   2d118:	cmp	x1, x2
   2d11c:	cset	w2, cs  // cs = hs, nlast
   2d120:	add	w2, w2, #0x11
   2d124:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d128:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   2d12c:	ldr	x2, [x2, #3664]
   2d130:	cmp	x1, x2
   2d134:	cset	w2, cs  // cs = hs, nlast
   2d138:	add	w2, w2, #0x13
   2d13c:	b	2cf10 <PyInit__decimal@@Base+0x12d70>
   2d140:	cbnz	w23, 2d158 <PyInit__decimal@@Base+0x12fb8>
   2d144:	ldr	w0, [x20]
   2d148:	orr	w0, w0, #0x1000
   2d14c:	str	w0, [x20]
   2d150:	ldr	x23, [sp, #48]
   2d154:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2d158:	ldr	x23, [sp, #48]
   2d15c:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2d160:	ldr	w0, [x20]
   2d164:	b	2cf34 <PyInit__decimal@@Base+0x12d94>
   2d168:	ldr	x23, [sp, #48]
   2d16c:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2d170:	ldr	x23, [sp, #48]
   2d174:	b	2cdc4 <PyInit__decimal@@Base+0x12c24>
   2d178:	stp	x29, x30, [sp, #-64]!
   2d17c:	mov	x29, sp
   2d180:	stp	x21, x22, [sp, #32]
   2d184:	mov	x21, x0
   2d188:	mov	x22, x4
   2d18c:	ldrb	w0, [x1]
   2d190:	tst	w0, #0xe
   2d194:	b.ne	2d1cc <PyInit__decimal@@Base+0x1302c>  // b.any
   2d198:	stp	x19, x20, [sp, #16]
   2d19c:	stp	x23, x24, [sp, #48]
   2d1a0:	mov	x19, x1
   2d1a4:	mov	x20, x2
   2d1a8:	mov	x23, x3
   2d1ac:	ldrb	w1, [x2]
   2d1b0:	orr	w0, w1, w0
   2d1b4:	and	w0, w0, #0x1
   2d1b8:	and	w1, w1, #0xe
   2d1bc:	orr	w0, w0, w1
   2d1c0:	cbz	w0, 2d1e8 <PyInit__decimal@@Base+0x13048>
   2d1c4:	ldp	x19, x20, [sp, #16]
   2d1c8:	ldp	x23, x24, [sp, #48]
   2d1cc:	mov	x2, x22
   2d1d0:	mov	w1, #0x100                 	// #256
   2d1d4:	mov	x0, x21
   2d1d8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2d1dc:	ldp	x21, x22, [sp, #32]
   2d1e0:	ldp	x29, x30, [sp], #64
   2d1e4:	ret
   2d1e8:	ldr	x0, [x19, #8]
   2d1ec:	cbnz	x0, 2d2c0 <PyInit__decimal@@Base+0x13120>
   2d1f0:	ldr	x24, [x2, #8]
   2d1f4:	cbnz	x24, 2d2b4 <PyInit__decimal@@Base+0x13114>
   2d1f8:	ldr	x1, [x2, #16]
   2d1fc:	ldr	x0, [x19, #16]
   2d200:	cmp	x1, x0
   2d204:	csel	x2, x19, x2, le
   2d208:	csel	x20, x20, x19, le
   2d20c:	mov	x19, x2
   2d210:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2d214:	ldr	x0, [x0, #1672]
   2d218:	ldr	x1, [x2, #24]
   2d21c:	cmp	x1, x0
   2d220:	csel	x1, x1, x0, ge  // ge = tcont
   2d224:	ldr	x0, [x21, #32]
   2d228:	cmp	x1, x0
   2d22c:	b.eq	2d240 <PyInit__decimal@@Base+0x130a0>  // b.none
   2d230:	ldrb	w2, [x21]
   2d234:	tbz	w2, #5, 2d2dc <PyInit__decimal@@Base+0x1313c>
   2d238:	cmp	x1, x0
   2d23c:	b.gt	2d2cc <PyInit__decimal@@Base+0x1312c>
   2d240:	ldr	x0, [x20, #24]
   2d244:	sub	x0, x0, #0x1
   2d248:	cmp	x0, #0x0
   2d24c:	b.le	2d368 <PyInit__decimal@@Base+0x131c8>
   2d250:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2d254:	movk	x6, #0xcccd
   2d258:	adrp	x9, 42000 <PyInit__decimal@@Base+0x27e60>
   2d25c:	lsl	x10, x24, #3
   2d260:	ldr	x0, [x20, #40]
   2d264:	ldr	x0, [x0, x24, lsl #3]
   2d268:	ldr	x1, [x19, #40]
   2d26c:	ldr	x1, [x1, x24, lsl #3]
   2d270:	umulh	x2, x0, x6
   2d274:	lsr	x5, x2, #3
   2d278:	add	x5, x5, x5, lsl #2
   2d27c:	sub	x5, x0, x5, lsl #1
   2d280:	lsr	x2, x2, #3
   2d284:	umulh	x3, x1, x6
   2d288:	lsr	x0, x3, #3
   2d28c:	add	x0, x0, x0, lsl #2
   2d290:	sub	x0, x1, x0, lsl #1
   2d294:	lsr	x3, x3, #3
   2d298:	cmp	x5, #0x1
   2d29c:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2d2a0:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d2a4:	add	x1, x9, #0xdb8
   2d2a8:	add	x8, x1, #0x90
   2d2ac:	mov	x7, #0x0                   	// #0
   2d2b0:	b	2d33c <PyInit__decimal@@Base+0x1319c>
   2d2b4:	ldp	x19, x20, [sp, #16]
   2d2b8:	ldp	x23, x24, [sp, #48]
   2d2bc:	b	2d1cc <PyInit__decimal@@Base+0x1302c>
   2d2c0:	ldp	x19, x20, [sp, #16]
   2d2c4:	ldp	x23, x24, [sp, #48]
   2d2c8:	b	2d1cc <PyInit__decimal@@Base+0x1302c>
   2d2cc:	mov	x2, x4
   2d2d0:	mov	x0, x21
   2d2d4:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2d2d8:	b	2d2e8 <PyInit__decimal@@Base+0x13148>
   2d2dc:	mov	x2, x4
   2d2e0:	mov	x0, x21
   2d2e4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2d2e8:	cbnz	w0, 2d240 <PyInit__decimal@@Base+0x130a0>
   2d2ec:	ldp	x19, x20, [sp, #16]
   2d2f0:	ldp	x23, x24, [sp, #48]
   2d2f4:	b	2d1dc <PyInit__decimal@@Base+0x1303c>
   2d2f8:	add	x7, x7, x5
   2d2fc:	cmp	x1, x8
   2d300:	b.eq	2d34c <PyInit__decimal@@Base+0x131ac>  // b.none
   2d304:	umulh	x0, x2, x6
   2d308:	lsr	x5, x0, #3
   2d30c:	add	x5, x5, x5, lsl #2
   2d310:	sub	x5, x2, x5, lsl #1
   2d314:	lsr	x2, x0, #3
   2d318:	umulh	x4, x3, x6
   2d31c:	lsr	x0, x4, #3
   2d320:	add	x0, x0, x0, lsl #2
   2d324:	sub	x0, x3, x0, lsl #1
   2d328:	lsr	x3, x4, #3
   2d32c:	add	x1, x1, #0x8
   2d330:	cmp	x5, #0x1
   2d334:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2d338:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d33c:	ands	x5, x5, x0
   2d340:	b.eq	2d2f8 <PyInit__decimal@@Base+0x13158>  // b.none
   2d344:	ldr	x5, [x1]
   2d348:	b	2d2f8 <PyInit__decimal@@Base+0x13158>
   2d34c:	ldr	x0, [x21, #40]
   2d350:	str	x7, [x0, x10]
   2d354:	add	x24, x24, #0x1
   2d358:	ldr	x0, [x20, #24]
   2d35c:	sub	x0, x0, #0x1
   2d360:	cmp	x0, x24
   2d364:	b.gt	2d25c <PyInit__decimal@@Base+0x130bc>
   2d368:	lsl	x10, x24, #3
   2d36c:	ldr	x0, [x20, #40]
   2d370:	ldr	x1, [x0, x24, lsl #3]
   2d374:	ldr	x0, [x19, #40]
   2d378:	ldr	x2, [x0, x24, lsl #3]
   2d37c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d380:	ldr	x0, [x0, #3584]
   2d384:	cmp	x1, x0
   2d388:	b.cs	2d484 <PyInit__decimal@@Base+0x132e4>  // b.hs, b.nlast
   2d38c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d390:	ldr	x0, [x0, #3544]
   2d394:	cmp	x1, x0
   2d398:	b.cs	2d430 <PyInit__decimal@@Base+0x13290>  // b.hs, b.nlast
   2d39c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d3a0:	ldr	x0, [x0, #3528]
   2d3a4:	cmp	x1, x0
   2d3a8:	b.cs	2d418 <PyInit__decimal@@Base+0x13278>  // b.hs, b.nlast
   2d3ac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d3b0:	ldr	x0, [x0, #3520]
   2d3b4:	cmp	x1, x0
   2d3b8:	cset	w8, cs  // cs = hs, nlast
   2d3bc:	add	w8, w8, #0x1
   2d3c0:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2d3c4:	movk	x3, #0xcccd
   2d3c8:	umulh	x4, x1, x3
   2d3cc:	lsr	x0, x4, #3
   2d3d0:	add	x0, x0, x0, lsl #2
   2d3d4:	sub	x0, x1, x0, lsl #1
   2d3d8:	lsr	x4, x4, #3
   2d3dc:	umulh	x3, x2, x3
   2d3e0:	lsr	x1, x3, #3
   2d3e4:	add	x1, x1, x1, lsl #2
   2d3e8:	sub	x1, x2, x1, lsl #1
   2d3ec:	lsr	x3, x3, #3
   2d3f0:	cmp	x0, #0x1
   2d3f4:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2d3f8:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d3fc:	mov	x2, #0x1                   	// #1
   2d400:	mov	x6, #0x0                   	// #0
   2d404:	adrp	x9, 42000 <PyInit__decimal@@Base+0x27e60>
   2d408:	add	x9, x9, #0xdb0
   2d40c:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   2d410:	movk	x7, #0xcccd
   2d414:	b	2d598 <PyInit__decimal@@Base+0x133f8>
   2d418:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d41c:	ldr	x0, [x0, #3536]
   2d420:	cmp	x1, x0
   2d424:	cset	w8, cs  // cs = hs, nlast
   2d428:	add	w8, w8, #0x3
   2d42c:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d430:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d434:	ldr	x0, [x0, #3560]
   2d438:	cmp	x1, x0
   2d43c:	b.cc	2d46c <PyInit__decimal@@Base+0x132cc>  // b.lo, b.ul, b.last
   2d440:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d444:	ldr	x0, [x0, #3576]
   2d448:	mov	w8, #0x9                   	// #9
   2d44c:	cmp	x1, x0
   2d450:	b.cs	2d3c0 <PyInit__decimal@@Base+0x13220>  // b.hs, b.nlast
   2d454:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d458:	ldr	x0, [x0, #3568]
   2d45c:	cmp	x1, x0
   2d460:	cset	w8, cs  // cs = hs, nlast
   2d464:	add	w8, w8, #0x7
   2d468:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d46c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d470:	ldr	x0, [x0, #3552]
   2d474:	cmp	x1, x0
   2d478:	cset	w8, cs  // cs = hs, nlast
   2d47c:	add	w8, w8, #0x5
   2d480:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d484:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d488:	ldr	x0, [x0, #3624]
   2d48c:	cmp	x1, x0
   2d490:	b.cs	2d4e8 <PyInit__decimal@@Base+0x13348>  // b.hs, b.nlast
   2d494:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d498:	ldr	x0, [x0, #3600]
   2d49c:	cmp	x1, x0
   2d4a0:	b.cc	2d4d0 <PyInit__decimal@@Base+0x13330>  // b.lo, b.ul, b.last
   2d4a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d4a8:	ldr	x0, [x0, #3616]
   2d4ac:	mov	w8, #0xe                   	// #14
   2d4b0:	cmp	x1, x0
   2d4b4:	b.cs	2d3c0 <PyInit__decimal@@Base+0x13220>  // b.hs, b.nlast
   2d4b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d4bc:	ldr	x0, [x0, #3608]
   2d4c0:	cmp	x1, x0
   2d4c4:	cset	w8, cs  // cs = hs, nlast
   2d4c8:	add	w8, w8, #0xc
   2d4cc:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d4d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d4d4:	ldr	x0, [x0, #3592]
   2d4d8:	cmp	x1, x0
   2d4dc:	cset	w8, cs  // cs = hs, nlast
   2d4e0:	add	w8, w8, #0xa
   2d4e4:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d4e8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d4ec:	ldr	x0, [x0, #3656]
   2d4f0:	cmp	x1, x0
   2d4f4:	b.cs	2d538 <PyInit__decimal@@Base+0x13398>  // b.hs, b.nlast
   2d4f8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d4fc:	ldr	x0, [x0, #3640]
   2d500:	cmp	x1, x0
   2d504:	b.cs	2d520 <PyInit__decimal@@Base+0x13380>  // b.hs, b.nlast
   2d508:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d50c:	ldr	x0, [x0, #3632]
   2d510:	cmp	x1, x0
   2d514:	cset	w8, cs  // cs = hs, nlast
   2d518:	add	w8, w8, #0xf
   2d51c:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d520:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d524:	ldr	x0, [x0, #3648]
   2d528:	cmp	x1, x0
   2d52c:	cset	w8, cs  // cs = hs, nlast
   2d530:	add	w8, w8, #0x11
   2d534:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d538:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2d53c:	ldr	x0, [x0, #3664]
   2d540:	cmp	x1, x0
   2d544:	cset	w8, cs  // cs = hs, nlast
   2d548:	add	w8, w8, #0x13
   2d54c:	b	2d3c0 <PyInit__decimal@@Base+0x13220>
   2d550:	add	x6, x6, x0
   2d554:	mov	w1, w2
   2d558:	cmp	w8, w2
   2d55c:	b.le	2d5a8 <PyInit__decimal@@Base+0x13408>
   2d560:	umulh	x1, x4, x7
   2d564:	lsr	x0, x1, #3
   2d568:	add	x0, x0, x0, lsl #2
   2d56c:	sub	x0, x4, x0, lsl #1
   2d570:	lsr	x4, x1, #3
   2d574:	umulh	x5, x3, x7
   2d578:	lsr	x1, x5, #3
   2d57c:	add	x1, x1, x1, lsl #2
   2d580:	sub	x1, x3, x1, lsl #1
   2d584:	lsr	x3, x5, #3
   2d588:	add	x2, x2, #0x1
   2d58c:	cmp	x0, #0x1
   2d590:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2d594:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d598:	ands	x0, x0, x1
   2d59c:	b.eq	2d550 <PyInit__decimal@@Base+0x133b0>  // b.none
   2d5a0:	ldr	x0, [x9, x2, lsl #3]
   2d5a4:	b	2d550 <PyInit__decimal@@Base+0x133b0>
   2d5a8:	ldr	x0, [x21, #40]
   2d5ac:	str	x6, [x0, x10]
   2d5b0:	cmp	w2, #0x12
   2d5b4:	b.gt	2d624 <PyInit__decimal@@Base+0x13484>
   2d5b8:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   2d5bc:	movk	x2, #0xcccd
   2d5c0:	umulh	x2, x3, x2
   2d5c4:	lsr	x2, x2, #3
   2d5c8:	add	x0, x2, x2, lsl #2
   2d5cc:	sub	x3, x3, x0, lsl #1
   2d5d0:	cmp	x3, #0x1
   2d5d4:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d5d8:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2d5dc:	movk	x4, #0xcccd
   2d5e0:	add	w1, w1, #0x1
   2d5e4:	cmp	w1, #0x13
   2d5e8:	b.eq	2d624 <PyInit__decimal@@Base+0x13484>  // b.none
   2d5ec:	umulh	x3, x2, x4
   2d5f0:	lsr	x0, x3, #3
   2d5f4:	add	x0, x0, x0, lsl #2
   2d5f8:	sub	x0, x2, x0, lsl #1
   2d5fc:	lsr	x2, x3, #3
   2d600:	cmp	x0, #0x1
   2d604:	b.ls	2d5e0 <PyInit__decimal@@Base+0x13440>  // b.plast
   2d608:	mov	x2, x22
   2d60c:	mov	w1, #0x100                 	// #256
   2d610:	mov	x0, x21
   2d614:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2d618:	ldp	x19, x20, [sp, #16]
   2d61c:	ldp	x23, x24, [sp, #48]
   2d620:	b	2d1dc <PyInit__decimal@@Base+0x1303c>
   2d624:	add	x24, x24, #0x1
   2d628:	ldr	x6, [x19, #24]
   2d62c:	cmp	x24, x6
   2d630:	b.ge	2d690 <PyInit__decimal@@Base+0x134f0>  // b.tcont
   2d634:	ldr	x5, [x19, #40]
   2d638:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2d63c:	movk	x4, #0xcccd
   2d640:	ldr	x2, [x5, x24, lsl #3]
   2d644:	umulh	x1, x2, x4
   2d648:	lsr	x1, x1, #3
   2d64c:	add	x0, x1, x1, lsl #2
   2d650:	sub	x0, x2, x0, lsl #1
   2d654:	cmp	x0, #0x1
   2d658:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d65c:	mov	w3, #0x12                  	// #18
   2d660:	umulh	x2, x1, x4
   2d664:	lsr	x0, x2, #3
   2d668:	add	x0, x0, x0, lsl #2
   2d66c:	sub	x0, x1, x0, lsl #1
   2d670:	lsr	x1, x2, #3
   2d674:	cmp	x0, #0x1
   2d678:	b.hi	2d608 <PyInit__decimal@@Base+0x13468>  // b.pmore
   2d67c:	subs	w3, w3, #0x1
   2d680:	b.ne	2d660 <PyInit__decimal@@Base+0x134c0>  // b.any
   2d684:	add	x24, x24, #0x1
   2d688:	cmp	x24, x6
   2d68c:	b.lt	2d640 <PyInit__decimal@@Base+0x134a0>  // b.tstop
   2d690:	ldrb	w2, [x21]
   2d694:	and	w0, w2, #0xfffffff0
   2d698:	strb	w0, [x21]
   2d69c:	str	xzr, [x21, #8]
   2d6a0:	ldr	x1, [x21, #40]
   2d6a4:	ldr	x0, [x20, #24]
   2d6a8:	cmp	x0, #0x1
   2d6ac:	b.le	2d6c8 <PyInit__decimal@@Base+0x13528>
   2d6b0:	sub	x1, x1, #0x8
   2d6b4:	ldr	x3, [x1, x0, lsl #3]
   2d6b8:	cbnz	x3, 2d6c8 <PyInit__decimal@@Base+0x13528>
   2d6bc:	sub	x0, x0, #0x1
   2d6c0:	cmp	x0, #0x1
   2d6c4:	b.ne	2d6b4 <PyInit__decimal@@Base+0x13514>  // b.any
   2d6c8:	str	x0, [x21, #24]
   2d6cc:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2d6d0:	ldr	x1, [x1, #1672]
   2d6d4:	cmp	x1, x0
   2d6d8:	csel	x1, x1, x0, ge  // ge = tcont
   2d6dc:	ldr	x0, [x21, #32]
   2d6e0:	cmp	x1, x0
   2d6e4:	b.eq	2d6f4 <PyInit__decimal@@Base+0x13554>  // b.none
   2d6e8:	tbz	w2, #5, 2d724 <PyInit__decimal@@Base+0x13584>
   2d6ec:	cmp	x1, x0
   2d6f0:	b.gt	2d714 <PyInit__decimal@@Base+0x13574>
   2d6f4:	mov	x0, x21
   2d6f8:	bl	285bc <PyInit__decimal@@Base+0xe41c>
   2d6fc:	mov	x1, x23
   2d700:	mov	x0, x21
   2d704:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2d708:	ldp	x19, x20, [sp, #16]
   2d70c:	ldp	x23, x24, [sp, #48]
   2d710:	b	2d1dc <PyInit__decimal@@Base+0x1303c>
   2d714:	mov	x2, x22
   2d718:	mov	x0, x21
   2d71c:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2d720:	b	2d6f4 <PyInit__decimal@@Base+0x13554>
   2d724:	mov	x2, x22
   2d728:	mov	x0, x21
   2d72c:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2d730:	b	2d6f4 <PyInit__decimal@@Base+0x13554>
   2d734:	ldrb	w2, [x0]
   2d738:	tst	w2, #0xc
   2d73c:	b.eq	2d75c <PyInit__decimal@@Base+0x135bc>  // b.none
   2d740:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21e60>
   2d744:	add	x1, x0, #0x698
   2d748:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d74c:	add	x0, x0, #0x370
   2d750:	tst	x2, #0x4
   2d754:	csel	x0, x0, x1, ne  // ne = any
   2d758:	ret
   2d75c:	tbnz	w2, #0, 2d7b0 <PyInit__decimal@@Base+0x13610>
   2d760:	tbnz	w2, #1, 2d800 <PyInit__decimal@@Base+0x13660>
   2d764:	tst	w2, #0xe
   2d768:	b.ne	2d80c <PyInit__decimal@@Base+0x1366c>  // b.any
   2d76c:	ldr	x2, [x0, #24]
   2d770:	ldr	x3, [x0, #40]
   2d774:	add	x2, x3, x2, lsl #3
   2d778:	ldur	x2, [x2, #-8]
   2d77c:	cbz	x2, 2d818 <PyInit__decimal@@Base+0x13678>
   2d780:	ldr	x2, [x0, #8]
   2d784:	ldr	x0, [x0, #16]
   2d788:	add	x2, x2, x0
   2d78c:	sub	x2, x2, #0x1
   2d790:	ldr	x3, [x1, #16]
   2d794:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d798:	add	x1, x0, #0x360
   2d79c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d7a0:	add	x0, x0, #0x388
   2d7a4:	cmp	x2, x3
   2d7a8:	csel	x0, x0, x1, lt  // lt = tstop
   2d7ac:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d7b0:	tbnz	w2, #1, 2d824 <PyInit__decimal@@Base+0x13684>
   2d7b4:	tst	w2, #0xe
   2d7b8:	b.ne	2d830 <PyInit__decimal@@Base+0x13690>  // b.any
   2d7bc:	ldr	x2, [x0, #24]
   2d7c0:	ldr	x3, [x0, #40]
   2d7c4:	add	x2, x3, x2, lsl #3
   2d7c8:	ldur	x2, [x2, #-8]
   2d7cc:	cbz	x2, 2d83c <PyInit__decimal@@Base+0x1369c>
   2d7d0:	ldr	x2, [x0, #8]
   2d7d4:	ldr	x0, [x0, #16]
   2d7d8:	add	x2, x2, x0
   2d7dc:	sub	x2, x2, #0x1
   2d7e0:	ldr	x3, [x1, #16]
   2d7e4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d7e8:	add	x1, x0, #0x3c0
   2d7ec:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d7f0:	add	x0, x0, #0x3b0
   2d7f4:	cmp	x2, x3
   2d7f8:	csel	x0, x0, x1, lt  // lt = tstop
   2d7fc:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d800:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d804:	add	x0, x0, #0x378
   2d808:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d80c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d810:	add	x0, x0, #0x388
   2d814:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d818:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d81c:	add	x0, x0, #0x398
   2d820:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d824:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d828:	add	x0, x0, #0x3a0
   2d82c:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d830:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d834:	add	x0, x0, #0x3b0
   2d838:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d83c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   2d840:	add	x0, x0, #0x368
   2d844:	b	2d758 <PyInit__decimal@@Base+0x135b8>
   2d848:	stp	x29, x30, [sp, #-64]!
   2d84c:	mov	x29, sp
   2d850:	stp	x21, x22, [sp, #32]
   2d854:	mov	x21, x0
   2d858:	mov	x22, x3
   2d85c:	ldrb	w0, [x1]
   2d860:	tst	x0, #0xf
   2d864:	b.ne	2d958 <PyInit__decimal@@Base+0x137b8>  // b.any
   2d868:	stp	x19, x20, [sp, #16]
   2d86c:	stp	x23, x24, [sp, #48]
   2d870:	mov	x20, x1
   2d874:	mov	x23, x2
   2d878:	ldr	x24, [x1, #8]
   2d87c:	cbnz	x24, 2d950 <PyInit__decimal@@Base+0x137b0>
   2d880:	ldr	x1, [x2]
   2d884:	ldr	x0, [x20, #16]
   2d888:	cmp	x0, x1
   2d88c:	csel	x0, x0, x1, ge  // ge = tcont
   2d890:	mov	x19, #0x9436                	// #37942
   2d894:	movk	x19, #0x50d7, lsl #16
   2d898:	movk	x19, #0x435e, lsl #32
   2d89c:	movk	x19, #0xd79, lsl #48
   2d8a0:	smulh	x19, x0, x19
   2d8a4:	sub	x19, x19, x0, asr #63
   2d8a8:	add	x1, x19, x19, lsl #2
   2d8ac:	lsl	x1, x1, #2
   2d8b0:	sub	x1, x1, x19
   2d8b4:	cmp	x0, x1
   2d8b8:	cinc	x19, x19, ne  // ne = any
   2d8bc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2d8c0:	ldr	x1, [x0, #1672]
   2d8c4:	cmp	x1, x19
   2d8c8:	csel	x1, x1, x19, ge  // ge = tcont
   2d8cc:	ldr	x0, [x21, #32]
   2d8d0:	cmp	x1, x0
   2d8d4:	b.eq	2d8e8 <PyInit__decimal@@Base+0x13748>  // b.none
   2d8d8:	ldrb	w2, [x21]
   2d8dc:	tbz	w2, #5, 2d984 <PyInit__decimal@@Base+0x137e4>
   2d8e0:	cmp	x1, x0
   2d8e4:	b.gt	2d974 <PyInit__decimal@@Base+0x137d4>
   2d8e8:	cmp	x19, #0x0
   2d8ec:	b.le	2da08 <PyInit__decimal@@Base+0x13868>
   2d8f0:	mov	x8, #0x0                   	// #0
   2d8f4:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2d8f8:	movk	x6, #0xcccd
   2d8fc:	adrp	x9, 42000 <PyInit__decimal@@Base+0x27e60>
   2d900:	mov	x7, x8
   2d904:	ldr	x0, [x20, #24]
   2d908:	cmp	x0, x24
   2d90c:	b.le	2d9a0 <PyInit__decimal@@Base+0x13800>
   2d910:	ldr	x0, [x20, #40]
   2d914:	ldr	x1, [x0, x24, lsl #3]
   2d918:	umulh	x0, x1, x6
   2d91c:	lsr	x4, x0, #3
   2d920:	add	x4, x4, x4, lsl #2
   2d924:	sub	x4, x1, x4, lsl #1
   2d928:	lsr	x0, x0, #3
   2d92c:	cmp	x4, #0x1
   2d930:	b.ls	2d9a8 <PyInit__decimal@@Base+0x13808>  // b.plast
   2d934:	mov	x2, x22
   2d938:	mov	w1, #0x100                 	// #256
   2d93c:	mov	x0, x21
   2d940:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2d944:	ldp	x19, x20, [sp, #16]
   2d948:	ldp	x23, x24, [sp, #48]
   2d94c:	b	2d968 <PyInit__decimal@@Base+0x137c8>
   2d950:	ldp	x19, x20, [sp, #16]
   2d954:	ldp	x23, x24, [sp, #48]
   2d958:	mov	x2, x22
   2d95c:	mov	w1, #0x100                 	// #256
   2d960:	mov	x0, x21
   2d964:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2d968:	ldp	x21, x22, [sp, #32]
   2d96c:	ldp	x29, x30, [sp], #64
   2d970:	ret
   2d974:	mov	x2, x3
   2d978:	mov	x0, x21
   2d97c:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2d980:	b	2d990 <PyInit__decimal@@Base+0x137f0>
   2d984:	mov	x2, x3
   2d988:	mov	x0, x21
   2d98c:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2d990:	cbnz	w0, 2d8e8 <PyInit__decimal@@Base+0x13748>
   2d994:	ldp	x19, x20, [sp, #16]
   2d998:	ldp	x23, x24, [sp, #48]
   2d99c:	b	2d968 <PyInit__decimal@@Base+0x137c8>
   2d9a0:	mov	x0, x8
   2d9a4:	mov	x4, x8
   2d9a8:	add	x5, x9, #0xdb8
   2d9ac:	add	x3, x5, #0x90
   2d9b0:	mov	x2, #0x0                   	// #0
   2d9b4:	b	2d9e4 <PyInit__decimal@@Base+0x13844>
   2d9b8:	add	x2, x2, x1
   2d9bc:	cmp	x3, x5
   2d9c0:	b.eq	2d9f4 <PyInit__decimal@@Base+0x13854>  // b.none
   2d9c4:	umulh	x1, x0, x6
   2d9c8:	lsr	x4, x1, #3
   2d9cc:	add	x4, x4, x4, lsl #2
   2d9d0:	sub	x4, x0, x4, lsl #1
   2d9d4:	lsr	x0, x1, #3
   2d9d8:	add	x5, x5, #0x8
   2d9dc:	cmp	x4, #0x1
   2d9e0:	b.hi	2d934 <PyInit__decimal@@Base+0x13794>  // b.pmore
   2d9e4:	mov	x1, x7
   2d9e8:	cbnz	x4, 2d9b8 <PyInit__decimal@@Base+0x13818>
   2d9ec:	ldr	x1, [x5]
   2d9f0:	b	2d9b8 <PyInit__decimal@@Base+0x13818>
   2d9f4:	ldr	x0, [x21, #40]
   2d9f8:	str	x2, [x0, x24, lsl #3]
   2d9fc:	add	x24, x24, #0x1
   2da00:	cmp	x19, x24
   2da04:	b.ne	2d904 <PyInit__decimal@@Base+0x13764>  // b.any
   2da08:	ldrb	w2, [x21]
   2da0c:	and	w0, w2, #0xfffffff0
   2da10:	strb	w0, [x21]
   2da14:	str	xzr, [x21, #8]
   2da18:	ldr	x1, [x21, #40]
   2da1c:	sub	x1, x1, #0x8
   2da20:	cmp	x19, #0x1
   2da24:	b.le	2da3c <PyInit__decimal@@Base+0x1389c>
   2da28:	ldr	x0, [x1, x19, lsl #3]
   2da2c:	cbnz	x0, 2da3c <PyInit__decimal@@Base+0x1389c>
   2da30:	sub	x19, x19, #0x1
   2da34:	cmp	x19, #0x1
   2da38:	b.ne	2da28 <PyInit__decimal@@Base+0x13888>  // b.any
   2da3c:	str	x19, [x21, #24]
   2da40:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2da44:	ldr	x0, [x0, #1672]
   2da48:	cmp	x0, x19
   2da4c:	csel	x1, x0, x19, ge  // ge = tcont
   2da50:	ldr	x0, [x21, #32]
   2da54:	cmp	x1, x0
   2da58:	b.eq	2da68 <PyInit__decimal@@Base+0x138c8>  // b.none
   2da5c:	tbz	w2, #5, 2dafc <PyInit__decimal@@Base+0x1395c>
   2da60:	cmp	x1, x0
   2da64:	b.gt	2daec <PyInit__decimal@@Base+0x1394c>
   2da68:	ldr	x1, [x21, #24]
   2da6c:	ldr	x0, [x21, #40]
   2da70:	add	x0, x0, x1, lsl #3
   2da74:	ldur	x2, [x0, #-8]
   2da78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2da7c:	ldr	x0, [x0, #3584]
   2da80:	cmp	x2, x0
   2da84:	b.cs	2db78 <PyInit__decimal@@Base+0x139d8>  // b.hs, b.nlast
   2da88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2da8c:	ldr	x0, [x0, #3544]
   2da90:	cmp	x2, x0
   2da94:	b.cs	2db24 <PyInit__decimal@@Base+0x13984>  // b.hs, b.nlast
   2da98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2da9c:	ldr	x0, [x0, #3528]
   2daa0:	cmp	x2, x0
   2daa4:	b.cs	2db0c <PyInit__decimal@@Base+0x1396c>  // b.hs, b.nlast
   2daa8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2daac:	ldr	x0, [x0, #3520]
   2dab0:	cmp	x2, x0
   2dab4:	cset	w0, cs  // cs = hs, nlast
   2dab8:	add	w0, w0, #0x1
   2dabc:	sub	x1, x1, #0x1
   2dac0:	add	x2, x1, x1, lsl #2
   2dac4:	lsl	x2, x2, #2
   2dac8:	sub	x1, x2, x1
   2dacc:	add	x0, x1, w0, sxtw
   2dad0:	str	x0, [x21, #16]
   2dad4:	mov	x1, x23
   2dad8:	mov	x0, x21
   2dadc:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2dae0:	ldp	x19, x20, [sp, #16]
   2dae4:	ldp	x23, x24, [sp, #48]
   2dae8:	b	2d968 <PyInit__decimal@@Base+0x137c8>
   2daec:	mov	x2, x22
   2daf0:	mov	x0, x21
   2daf4:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2daf8:	b	2da68 <PyInit__decimal@@Base+0x138c8>
   2dafc:	mov	x2, x22
   2db00:	mov	x0, x21
   2db04:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2db08:	b	2da68 <PyInit__decimal@@Base+0x138c8>
   2db0c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db10:	ldr	x0, [x0, #3536]
   2db14:	cmp	x2, x0
   2db18:	cset	w0, cs  // cs = hs, nlast
   2db1c:	add	w0, w0, #0x3
   2db20:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2db24:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db28:	ldr	x0, [x0, #3560]
   2db2c:	cmp	x2, x0
   2db30:	b.cc	2db60 <PyInit__decimal@@Base+0x139c0>  // b.lo, b.ul, b.last
   2db34:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db38:	ldr	x3, [x0, #3576]
   2db3c:	mov	w0, #0x9                   	// #9
   2db40:	cmp	x2, x3
   2db44:	b.cs	2dabc <PyInit__decimal@@Base+0x1391c>  // b.hs, b.nlast
   2db48:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db4c:	ldr	x0, [x0, #3568]
   2db50:	cmp	x2, x0
   2db54:	cset	w0, cs  // cs = hs, nlast
   2db58:	add	w0, w0, #0x7
   2db5c:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2db60:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db64:	ldr	x0, [x0, #3552]
   2db68:	cmp	x2, x0
   2db6c:	cset	w0, cs  // cs = hs, nlast
   2db70:	add	w0, w0, #0x5
   2db74:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2db78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db7c:	ldr	x0, [x0, #3624]
   2db80:	cmp	x2, x0
   2db84:	b.cs	2dbdc <PyInit__decimal@@Base+0x13a3c>  // b.hs, b.nlast
   2db88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db8c:	ldr	x0, [x0, #3600]
   2db90:	cmp	x2, x0
   2db94:	b.cc	2dbc4 <PyInit__decimal@@Base+0x13a24>  // b.lo, b.ul, b.last
   2db98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2db9c:	ldr	x3, [x0, #3616]
   2dba0:	mov	w0, #0xe                   	// #14
   2dba4:	cmp	x2, x3
   2dba8:	b.cs	2dabc <PyInit__decimal@@Base+0x1391c>  // b.hs, b.nlast
   2dbac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dbb0:	ldr	x0, [x0, #3608]
   2dbb4:	cmp	x2, x0
   2dbb8:	cset	w0, cs  // cs = hs, nlast
   2dbbc:	add	w0, w0, #0xc
   2dbc0:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2dbc4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dbc8:	ldr	x0, [x0, #3592]
   2dbcc:	cmp	x2, x0
   2dbd0:	cset	w0, cs  // cs = hs, nlast
   2dbd4:	add	w0, w0, #0xa
   2dbd8:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2dbdc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dbe0:	ldr	x0, [x0, #3656]
   2dbe4:	cmp	x2, x0
   2dbe8:	b.cs	2dc2c <PyInit__decimal@@Base+0x13a8c>  // b.hs, b.nlast
   2dbec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dbf0:	ldr	x0, [x0, #3640]
   2dbf4:	cmp	x2, x0
   2dbf8:	b.cs	2dc14 <PyInit__decimal@@Base+0x13a74>  // b.hs, b.nlast
   2dbfc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dc00:	ldr	x0, [x0, #3632]
   2dc04:	cmp	x2, x0
   2dc08:	cset	w0, cs  // cs = hs, nlast
   2dc0c:	add	w0, w0, #0xf
   2dc10:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2dc14:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dc18:	ldr	x0, [x0, #3648]
   2dc1c:	cmp	x2, x0
   2dc20:	cset	w0, cs  // cs = hs, nlast
   2dc24:	add	w0, w0, #0x11
   2dc28:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2dc2c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dc30:	ldr	x0, [x0, #3664]
   2dc34:	cmp	x2, x0
   2dc38:	cset	w0, cs  // cs = hs, nlast
   2dc3c:	add	w0, w0, #0x13
   2dc40:	b	2dabc <PyInit__decimal@@Base+0x1391c>
   2dc44:	stp	x29, x30, [sp, #-32]!
   2dc48:	mov	x29, sp
   2dc4c:	stp	x19, x20, [sp, #16]
   2dc50:	mov	x20, x0
   2dc54:	mov	x19, x3
   2dc58:	ldrb	w3, [x1]
   2dc5c:	tst	w3, #0xe
   2dc60:	b.ne	2dca0 <PyInit__decimal@@Base+0x13b00>  // b.any
   2dc64:	ldr	x3, [x1, #24]
   2dc68:	ldr	x0, [x1, #40]
   2dc6c:	add	x3, x0, x3, lsl #3
   2dc70:	ldur	x0, [x3, #-8]
   2dc74:	cbnz	x0, 2dcc0 <PyInit__decimal@@Base+0x13b20>
   2dc78:	mov	w2, #0x2                   	// #2
   2dc7c:	mov	w1, #0x1                   	// #1
   2dc80:	mov	x0, x20
   2dc84:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2dc88:	ldr	w0, [x19]
   2dc8c:	orr	w0, w0, #0x4
   2dc90:	str	w0, [x19]
   2dc94:	ldp	x19, x20, [sp, #16]
   2dc98:	ldp	x29, x30, [sp], #32
   2dc9c:	ret
   2dca0:	mov	x3, x19
   2dca4:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   2dca8:	cbnz	w0, 2dc94 <PyInit__decimal@@Base+0x13af4>
   2dcac:	mov	w2, #0x2                   	// #2
   2dcb0:	mov	w1, #0x0                   	// #0
   2dcb4:	mov	x0, x20
   2dcb8:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   2dcbc:	b	2dc94 <PyInit__decimal@@Base+0x13af4>
   2dcc0:	ldr	x0, [x1, #8]
   2dcc4:	ldr	x1, [x1, #16]
   2dcc8:	add	x1, x0, x1
   2dccc:	mov	x3, x19
   2dcd0:	sub	x1, x1, #0x1
   2dcd4:	mov	x0, x20
   2dcd8:	bl	2c53c <PyInit__decimal@@Base+0x1239c>
   2dcdc:	b	2dc94 <PyInit__decimal@@Base+0x13af4>
   2dce0:	stp	x29, x30, [sp, #-64]!
   2dce4:	mov	x29, sp
   2dce8:	stp	x21, x22, [sp, #32]
   2dcec:	mov	x21, x0
   2dcf0:	mov	x22, x4
   2dcf4:	ldrb	w0, [x1]
   2dcf8:	tst	w0, #0xe
   2dcfc:	b.ne	2dd34 <PyInit__decimal@@Base+0x13b94>  // b.any
   2dd00:	stp	x19, x20, [sp, #16]
   2dd04:	stp	x23, x24, [sp, #48]
   2dd08:	mov	x19, x1
   2dd0c:	mov	x20, x2
   2dd10:	mov	x23, x3
   2dd14:	ldrb	w1, [x2]
   2dd18:	orr	w0, w1, w0
   2dd1c:	and	w0, w0, #0x1
   2dd20:	and	w1, w1, #0xe
   2dd24:	orr	w0, w0, w1
   2dd28:	cbz	w0, 2dd50 <PyInit__decimal@@Base+0x13bb0>
   2dd2c:	ldp	x19, x20, [sp, #16]
   2dd30:	ldp	x23, x24, [sp, #48]
   2dd34:	mov	x2, x22
   2dd38:	mov	w1, #0x100                 	// #256
   2dd3c:	mov	x0, x21
   2dd40:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2dd44:	ldp	x21, x22, [sp, #32]
   2dd48:	ldp	x29, x30, [sp], #64
   2dd4c:	ret
   2dd50:	ldr	x0, [x19, #8]
   2dd54:	cbnz	x0, 2de28 <PyInit__decimal@@Base+0x13c88>
   2dd58:	ldr	x24, [x2, #8]
   2dd5c:	cbnz	x24, 2de1c <PyInit__decimal@@Base+0x13c7c>
   2dd60:	ldr	x1, [x2, #16]
   2dd64:	ldr	x0, [x19, #16]
   2dd68:	cmp	x1, x0
   2dd6c:	csel	x2, x19, x2, le
   2dd70:	csel	x20, x20, x19, le
   2dd74:	mov	x19, x2
   2dd78:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2dd7c:	ldr	x0, [x0, #1672]
   2dd80:	ldr	x1, [x2, #24]
   2dd84:	cmp	x1, x0
   2dd88:	csel	x1, x1, x0, ge  // ge = tcont
   2dd8c:	ldr	x0, [x21, #32]
   2dd90:	cmp	x1, x0
   2dd94:	b.eq	2dda8 <PyInit__decimal@@Base+0x13c08>  // b.none
   2dd98:	ldrb	w2, [x21]
   2dd9c:	tbz	w2, #5, 2de44 <PyInit__decimal@@Base+0x13ca4>
   2dda0:	cmp	x1, x0
   2dda4:	b.gt	2de34 <PyInit__decimal@@Base+0x13c94>
   2dda8:	ldr	x0, [x20, #24]
   2ddac:	sub	x0, x0, #0x1
   2ddb0:	cmp	x0, #0x0
   2ddb4:	b.le	2ded0 <PyInit__decimal@@Base+0x13d30>
   2ddb8:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2ddbc:	movk	x6, #0xcccd
   2ddc0:	adrp	x9, 42000 <PyInit__decimal@@Base+0x27e60>
   2ddc4:	lsl	x10, x24, #3
   2ddc8:	ldr	x0, [x20, #40]
   2ddcc:	ldr	x0, [x0, x24, lsl #3]
   2ddd0:	ldr	x1, [x19, #40]
   2ddd4:	ldr	x1, [x1, x24, lsl #3]
   2ddd8:	umulh	x2, x0, x6
   2dddc:	lsr	x5, x2, #3
   2dde0:	add	x5, x5, x5, lsl #2
   2dde4:	sub	x5, x0, x5, lsl #1
   2dde8:	lsr	x2, x2, #3
   2ddec:	umulh	x3, x1, x6
   2ddf0:	lsr	x0, x3, #3
   2ddf4:	add	x0, x0, x0, lsl #2
   2ddf8:	sub	x0, x1, x0, lsl #1
   2ddfc:	lsr	x3, x3, #3
   2de00:	cmp	x5, #0x1
   2de04:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2de08:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2de0c:	add	x1, x9, #0xdb8
   2de10:	add	x8, x1, #0x90
   2de14:	mov	x7, #0x0                   	// #0
   2de18:	b	2dea4 <PyInit__decimal@@Base+0x13d04>
   2de1c:	ldp	x19, x20, [sp, #16]
   2de20:	ldp	x23, x24, [sp, #48]
   2de24:	b	2dd34 <PyInit__decimal@@Base+0x13b94>
   2de28:	ldp	x19, x20, [sp, #16]
   2de2c:	ldp	x23, x24, [sp, #48]
   2de30:	b	2dd34 <PyInit__decimal@@Base+0x13b94>
   2de34:	mov	x2, x4
   2de38:	mov	x0, x21
   2de3c:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2de40:	b	2de50 <PyInit__decimal@@Base+0x13cb0>
   2de44:	mov	x2, x4
   2de48:	mov	x0, x21
   2de4c:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2de50:	cbnz	w0, 2dda8 <PyInit__decimal@@Base+0x13c08>
   2de54:	ldp	x19, x20, [sp, #16]
   2de58:	ldp	x23, x24, [sp, #48]
   2de5c:	b	2dd44 <PyInit__decimal@@Base+0x13ba4>
   2de60:	add	x7, x7, x5
   2de64:	cmp	x8, x1
   2de68:	b.eq	2deb4 <PyInit__decimal@@Base+0x13d14>  // b.none
   2de6c:	umulh	x0, x2, x6
   2de70:	lsr	x5, x0, #3
   2de74:	add	x5, x5, x5, lsl #2
   2de78:	sub	x5, x2, x5, lsl #1
   2de7c:	lsr	x2, x0, #3
   2de80:	umulh	x4, x3, x6
   2de84:	lsr	x0, x4, #3
   2de88:	add	x0, x0, x0, lsl #2
   2de8c:	sub	x0, x3, x0, lsl #1
   2de90:	lsr	x3, x4, #3
   2de94:	add	x1, x1, #0x8
   2de98:	cmp	x5, #0x1
   2de9c:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2dea0:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2dea4:	orr	x5, x5, x0
   2dea8:	cbz	x5, 2de60 <PyInit__decimal@@Base+0x13cc0>
   2deac:	ldr	x5, [x1]
   2deb0:	b	2de60 <PyInit__decimal@@Base+0x13cc0>
   2deb4:	ldr	x0, [x21, #40]
   2deb8:	str	x7, [x0, x10]
   2debc:	add	x24, x24, #0x1
   2dec0:	ldr	x0, [x20, #24]
   2dec4:	sub	x0, x0, #0x1
   2dec8:	cmp	x0, x24
   2decc:	b.gt	2ddc4 <PyInit__decimal@@Base+0x13c24>
   2ded0:	lsl	x8, x24, #3
   2ded4:	ldr	x0, [x20, #40]
   2ded8:	ldr	x1, [x0, x24, lsl #3]
   2dedc:	ldr	x0, [x19, #40]
   2dee0:	ldr	x2, [x0, x24, lsl #3]
   2dee4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dee8:	ldr	x0, [x0, #3584]
   2deec:	cmp	x1, x0
   2def0:	b.cs	2dfec <PyInit__decimal@@Base+0x13e4c>  // b.hs, b.nlast
   2def4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2def8:	ldr	x0, [x0, #3544]
   2defc:	cmp	x1, x0
   2df00:	b.cs	2df98 <PyInit__decimal@@Base+0x13df8>  // b.hs, b.nlast
   2df04:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2df08:	ldr	x0, [x0, #3528]
   2df0c:	cmp	x1, x0
   2df10:	b.cs	2df80 <PyInit__decimal@@Base+0x13de0>  // b.hs, b.nlast
   2df14:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2df18:	ldr	x0, [x0, #3520]
   2df1c:	cmp	x1, x0
   2df20:	cset	w9, cs  // cs = hs, nlast
   2df24:	add	w9, w9, #0x1
   2df28:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2df2c:	movk	x3, #0xcccd
   2df30:	umulh	x4, x1, x3
   2df34:	lsr	x0, x4, #3
   2df38:	add	x0, x0, x0, lsl #2
   2df3c:	sub	x0, x1, x0, lsl #1
   2df40:	lsr	x4, x4, #3
   2df44:	umulh	x3, x2, x3
   2df48:	lsr	x1, x3, #3
   2df4c:	add	x1, x1, x1, lsl #2
   2df50:	sub	x1, x2, x1, lsl #1
   2df54:	lsr	x3, x3, #3
   2df58:	cmp	x0, #0x1
   2df5c:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2df60:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2df64:	mov	x2, #0x1                   	// #1
   2df68:	mov	x5, #0x0                   	// #0
   2df6c:	adrp	x10, 42000 <PyInit__decimal@@Base+0x27e60>
   2df70:	add	x10, x10, #0xdb0
   2df74:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   2df78:	movk	x7, #0xcccd
   2df7c:	b	2e0fc <PyInit__decimal@@Base+0x13f5c>
   2df80:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2df84:	ldr	x0, [x0, #3536]
   2df88:	cmp	x1, x0
   2df8c:	cset	w9, cs  // cs = hs, nlast
   2df90:	add	w9, w9, #0x3
   2df94:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2df98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2df9c:	ldr	x0, [x0, #3560]
   2dfa0:	cmp	x1, x0
   2dfa4:	b.cc	2dfd4 <PyInit__decimal@@Base+0x13e34>  // b.lo, b.ul, b.last
   2dfa8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dfac:	ldr	x0, [x0, #3576]
   2dfb0:	mov	w9, #0x9                   	// #9
   2dfb4:	cmp	x1, x0
   2dfb8:	b.cs	2df28 <PyInit__decimal@@Base+0x13d88>  // b.hs, b.nlast
   2dfbc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dfc0:	ldr	x0, [x0, #3568]
   2dfc4:	cmp	x1, x0
   2dfc8:	cset	w9, cs  // cs = hs, nlast
   2dfcc:	add	w9, w9, #0x7
   2dfd0:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2dfd4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dfd8:	ldr	x0, [x0, #3552]
   2dfdc:	cmp	x1, x0
   2dfe0:	cset	w9, cs  // cs = hs, nlast
   2dfe4:	add	w9, w9, #0x5
   2dfe8:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2dfec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2dff0:	ldr	x0, [x0, #3624]
   2dff4:	cmp	x1, x0
   2dff8:	b.cs	2e050 <PyInit__decimal@@Base+0x13eb0>  // b.hs, b.nlast
   2dffc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e000:	ldr	x0, [x0, #3600]
   2e004:	cmp	x1, x0
   2e008:	b.cc	2e038 <PyInit__decimal@@Base+0x13e98>  // b.lo, b.ul, b.last
   2e00c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e010:	ldr	x0, [x0, #3616]
   2e014:	mov	w9, #0xe                   	// #14
   2e018:	cmp	x1, x0
   2e01c:	b.cs	2df28 <PyInit__decimal@@Base+0x13d88>  // b.hs, b.nlast
   2e020:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e024:	ldr	x0, [x0, #3608]
   2e028:	cmp	x1, x0
   2e02c:	cset	w9, cs  // cs = hs, nlast
   2e030:	add	w9, w9, #0xc
   2e034:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2e038:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e03c:	ldr	x0, [x0, #3592]
   2e040:	cmp	x1, x0
   2e044:	cset	w9, cs  // cs = hs, nlast
   2e048:	add	w9, w9, #0xa
   2e04c:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2e050:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e054:	ldr	x0, [x0, #3656]
   2e058:	cmp	x1, x0
   2e05c:	b.cs	2e0a0 <PyInit__decimal@@Base+0x13f00>  // b.hs, b.nlast
   2e060:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e064:	ldr	x0, [x0, #3640]
   2e068:	cmp	x1, x0
   2e06c:	b.cs	2e088 <PyInit__decimal@@Base+0x13ee8>  // b.hs, b.nlast
   2e070:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e074:	ldr	x0, [x0, #3632]
   2e078:	cmp	x1, x0
   2e07c:	cset	w9, cs  // cs = hs, nlast
   2e080:	add	w9, w9, #0xf
   2e084:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2e088:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e08c:	ldr	x0, [x0, #3648]
   2e090:	cmp	x1, x0
   2e094:	cset	w9, cs  // cs = hs, nlast
   2e098:	add	w9, w9, #0x11
   2e09c:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2e0a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2e0a4:	ldr	x0, [x0, #3664]
   2e0a8:	cmp	x1, x0
   2e0ac:	cset	w9, cs  // cs = hs, nlast
   2e0b0:	add	w9, w9, #0x13
   2e0b4:	b	2df28 <PyInit__decimal@@Base+0x13d88>
   2e0b8:	add	x5, x5, x0
   2e0bc:	cmp	w9, w2
   2e0c0:	b.le	2e10c <PyInit__decimal@@Base+0x13f6c>
   2e0c4:	umulh	x1, x4, x7
   2e0c8:	lsr	x0, x1, #3
   2e0cc:	add	x0, x0, x0, lsl #2
   2e0d0:	sub	x0, x4, x0, lsl #1
   2e0d4:	lsr	x4, x1, #3
   2e0d8:	umulh	x6, x3, x7
   2e0dc:	lsr	x1, x6, #3
   2e0e0:	add	x1, x1, x1, lsl #2
   2e0e4:	sub	x1, x3, x1, lsl #1
   2e0e8:	lsr	x3, x6, #3
   2e0ec:	add	x2, x2, #0x1
   2e0f0:	cmp	x0, #0x1
   2e0f4:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2e0f8:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2e0fc:	orr	x0, x0, x1
   2e100:	cbz	x0, 2e0b8 <PyInit__decimal@@Base+0x13f18>
   2e104:	ldr	x0, [x10, x2, lsl #3]
   2e108:	b	2e0b8 <PyInit__decimal@@Base+0x13f18>
   2e10c:	cmp	w2, #0x12
   2e110:	b.gt	2e1a4 <PyInit__decimal@@Base+0x14004>
   2e114:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2e118:	movk	x1, #0xcccd
   2e11c:	umulh	x1, x3, x1
   2e120:	lsr	x0, x1, #3
   2e124:	add	x0, x0, x0, lsl #2
   2e128:	sub	x0, x3, x0, lsl #1
   2e12c:	lsr	x3, x1, #3
   2e130:	cmp	x0, #0x1
   2e134:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2e138:	mov	w4, #0x12                  	// #18
   2e13c:	sub	w4, w4, w2
   2e140:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2e144:	add	x1, x1, #0xdb8
   2e148:	add	x6, x1, w2, sxtw #3
   2e14c:	mov	x1, #0x0                   	// #0
   2e150:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   2e154:	movk	x7, #0xcccd
   2e158:	ldr	x2, [x6, x1, lsl #3]
   2e15c:	madd	x5, x0, x2, x5
   2e160:	cmp	x4, x1
   2e164:	b.eq	2e1a4 <PyInit__decimal@@Base+0x14004>  // b.none
   2e168:	umulh	x2, x3, x7
   2e16c:	lsr	x0, x2, #3
   2e170:	add	x0, x0, x0, lsl #2
   2e174:	sub	x0, x3, x0, lsl #1
   2e178:	lsr	x3, x2, #3
   2e17c:	add	x1, x1, #0x1
   2e180:	cmp	x0, #0x1
   2e184:	b.ls	2e158 <PyInit__decimal@@Base+0x13fb8>  // b.plast
   2e188:	mov	x2, x22
   2e18c:	mov	w1, #0x100                 	// #256
   2e190:	mov	x0, x21
   2e194:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e198:	ldp	x19, x20, [sp, #16]
   2e19c:	ldp	x23, x24, [sp, #48]
   2e1a0:	b	2dd44 <PyInit__decimal@@Base+0x13ba4>
   2e1a4:	add	x24, x24, #0x1
   2e1a8:	ldr	x0, [x21, #40]
   2e1ac:	str	x5, [x0, x8]
   2e1b0:	ldr	x0, [x19, #24]
   2e1b4:	cmp	x24, x0
   2e1b8:	b.ge	2e228 <PyInit__decimal@@Base+0x14088>  // b.tcont
   2e1bc:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2e1c0:	movk	x4, #0xcccd
   2e1c4:	lsl	x6, x24, #3
   2e1c8:	ldr	x0, [x19, #40]
   2e1cc:	ldr	x5, [x0, x24, lsl #3]
   2e1d0:	umulh	x1, x5, x4
   2e1d4:	lsr	x1, x1, #3
   2e1d8:	add	x0, x1, x1, lsl #2
   2e1dc:	sub	x0, x5, x0, lsl #1
   2e1e0:	cmp	x0, #0x1
   2e1e4:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2e1e8:	mov	w3, #0x12                  	// #18
   2e1ec:	umulh	x2, x1, x4
   2e1f0:	lsr	x0, x2, #3
   2e1f4:	add	x0, x0, x0, lsl #2
   2e1f8:	sub	x0, x1, x0, lsl #1
   2e1fc:	lsr	x1, x2, #3
   2e200:	cmp	x0, #0x1
   2e204:	b.hi	2e188 <PyInit__decimal@@Base+0x13fe8>  // b.pmore
   2e208:	subs	w3, w3, #0x1
   2e20c:	b.ne	2e1ec <PyInit__decimal@@Base+0x1404c>  // b.any
   2e210:	ldr	x0, [x21, #40]
   2e214:	str	x5, [x0, x6]
   2e218:	add	x24, x24, #0x1
   2e21c:	ldr	x0, [x19, #24]
   2e220:	cmp	x0, x24
   2e224:	b.gt	2e1c4 <PyInit__decimal@@Base+0x14024>
   2e228:	ldrb	w2, [x21]
   2e22c:	and	w0, w2, #0xfffffff0
   2e230:	strb	w0, [x21]
   2e234:	str	xzr, [x21, #8]
   2e238:	ldr	x1, [x21, #40]
   2e23c:	ldr	x0, [x19, #24]
   2e240:	cmp	x0, #0x1
   2e244:	b.le	2e260 <PyInit__decimal@@Base+0x140c0>
   2e248:	sub	x1, x1, #0x8
   2e24c:	ldr	x3, [x1, x0, lsl #3]
   2e250:	cbnz	x3, 2e260 <PyInit__decimal@@Base+0x140c0>
   2e254:	sub	x0, x0, #0x1
   2e258:	cmp	x0, #0x1
   2e25c:	b.ne	2e24c <PyInit__decimal@@Base+0x140ac>  // b.any
   2e260:	str	x0, [x21, #24]
   2e264:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e268:	ldr	x1, [x1, #1672]
   2e26c:	cmp	x1, x0
   2e270:	csel	x1, x1, x0, ge  // ge = tcont
   2e274:	ldr	x0, [x21, #32]
   2e278:	cmp	x1, x0
   2e27c:	b.eq	2e28c <PyInit__decimal@@Base+0x140ec>  // b.none
   2e280:	tbz	w2, #5, 2e2bc <PyInit__decimal@@Base+0x1411c>
   2e284:	cmp	x1, x0
   2e288:	b.gt	2e2ac <PyInit__decimal@@Base+0x1410c>
   2e28c:	mov	x0, x21
   2e290:	bl	285bc <PyInit__decimal@@Base+0xe41c>
   2e294:	mov	x1, x23
   2e298:	mov	x0, x21
   2e29c:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e2a0:	ldp	x19, x20, [sp, #16]
   2e2a4:	ldp	x23, x24, [sp, #48]
   2e2a8:	b	2dd44 <PyInit__decimal@@Base+0x13ba4>
   2e2ac:	mov	x2, x22
   2e2b0:	mov	x0, x21
   2e2b4:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2e2b8:	b	2e28c <PyInit__decimal@@Base+0x140ec>
   2e2bc:	mov	x2, x22
   2e2c0:	mov	x0, x21
   2e2c4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2e2c8:	b	2e28c <PyInit__decimal@@Base+0x140ec>
   2e2cc:	sub	sp, sp, #0x6e0
   2e2d0:	stp	x29, x30, [sp]
   2e2d4:	mov	x29, sp
   2e2d8:	stp	x19, x20, [sp, #16]
   2e2dc:	stp	x21, x22, [sp, #32]
   2e2e0:	stp	x23, x24, [sp, #48]
   2e2e4:	mov	x22, x0
   2e2e8:	mov	x20, x1
   2e2ec:	mov	x19, x2
   2e2f0:	mov	x23, x3
   2e2f4:	mov	x21, x4
   2e2f8:	str	wzr, [sp, #1756]
   2e2fc:	mov	w1, #0x30                  	// #48
   2e300:	strb	w1, [sp, #1192]
   2e304:	str	xzr, [sp, #1200]
   2e308:	str	xzr, [sp, #1208]
   2e30c:	str	xzr, [sp, #1216]
   2e310:	mov	x0, #0x40                  	// #64
   2e314:	str	x0, [sp, #1224]
   2e318:	add	x2, sp, #0x4d8
   2e31c:	str	x2, [sp, #1232]
   2e320:	strb	w1, [sp, #632]
   2e324:	str	xzr, [sp, #640]
   2e328:	str	xzr, [sp, #648]
   2e32c:	str	xzr, [sp, #656]
   2e330:	str	x0, [sp, #664]
   2e334:	add	x2, sp, #0x2a8
   2e338:	str	x2, [sp, #672]
   2e33c:	strb	w1, [sp, #72]
   2e340:	str	xzr, [sp, #80]
   2e344:	str	xzr, [sp, #88]
   2e348:	str	xzr, [sp, #96]
   2e34c:	str	x0, [sp, #104]
   2e350:	add	x0, sp, #0x78
   2e354:	str	x0, [sp, #112]
   2e358:	ldrb	w0, [x20]
   2e35c:	tst	w0, #0xe
   2e360:	b.ne	2e370 <PyInit__decimal@@Base+0x141d0>  // b.any
   2e364:	ldrb	w0, [x19]
   2e368:	tst	w0, #0xe
   2e36c:	b.eq	2e38c <PyInit__decimal@@Base+0x141ec>  // b.none
   2e370:	mov	x4, x21
   2e374:	mov	x3, x23
   2e378:	mov	x2, x19
   2e37c:	mov	x1, x20
   2e380:	mov	x0, x22
   2e384:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2e388:	cbnz	w0, 2e3ac <PyInit__decimal@@Base+0x1420c>
   2e38c:	ldr	x0, [x19, #8]
   2e390:	cbnz	x0, 2e39c <PyInit__decimal@@Base+0x141fc>
   2e394:	ldrb	w0, [x19]
   2e398:	tbz	w0, #1, 2e3c4 <PyInit__decimal@@Base+0x14224>
   2e39c:	mov	x2, x21
   2e3a0:	mov	w1, #0x100                 	// #256
   2e3a4:	mov	x0, x22
   2e3a8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e3ac:	ldp	x19, x20, [sp, #16]
   2e3b0:	ldp	x21, x22, [sp, #32]
   2e3b4:	ldp	x23, x24, [sp, #48]
   2e3b8:	ldp	x29, x30, [sp]
   2e3bc:	add	sp, sp, #0x6e0
   2e3c0:	ret
   2e3c4:	add	x1, sp, #0x6dc
   2e3c8:	mov	x0, x19
   2e3cc:	bl	29084 <PyInit__decimal@@Base+0xeee4>
   2e3d0:	mov	x19, x0
   2e3d4:	ldr	w0, [sp, #1756]
   2e3d8:	tbnz	w0, #8, 2e534 <PyInit__decimal@@Base+0x14394>
   2e3dc:	ldr	x0, [x23]
   2e3e0:	cmp	x0, x19
   2e3e4:	b.lt	2e548 <PyInit__decimal@@Base+0x143a8>  // b.tstop
   2e3e8:	neg	x1, x0
   2e3ec:	cmp	x1, x19
   2e3f0:	b.gt	2e548 <PyInit__decimal@@Base+0x143a8>
   2e3f4:	ldrb	w1, [x20]
   2e3f8:	tbnz	w1, #1, 2e55c <PyInit__decimal@@Base+0x143bc>
   2e3fc:	sub	x24, x0, x19
   2e400:	tbnz	x19, #63, 2e570 <PyInit__decimal@@Base+0x143d0>
   2e404:	ldr	x1, [x20, #16]
   2e408:	cmp	x0, x1
   2e40c:	b.ge	2e434 <PyInit__decimal@@Base+0x14294>  // b.tcont
   2e410:	mov	x2, x21
   2e414:	mov	x1, x20
   2e418:	add	x0, sp, #0x4a8
   2e41c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e420:	cbz	w0, 2e57c <PyInit__decimal@@Base+0x143dc>
   2e424:	add	x20, sp, #0x4a8
   2e428:	mov	x1, x23
   2e42c:	mov	x0, x20
   2e430:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e434:	mov	x3, x21
   2e438:	mov	x2, x19
   2e43c:	mov	x1, x20
   2e440:	add	x0, sp, #0x278
   2e444:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2e448:	cbz	w0, 2e590 <PyInit__decimal@@Base+0x143f0>
   2e44c:	mov	x1, x23
   2e450:	add	x0, sp, #0x278
   2e454:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e458:	mov	x3, x21
   2e45c:	mov	x2, x24
   2e460:	mov	x1, x20
   2e464:	add	x0, sp, #0x48
   2e468:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   2e46c:	cmn	x0, #0x1
   2e470:	b.eq	2e5a4 <PyInit__decimal@@Base+0x14404>  // b.none
   2e474:	ldrb	w3, [sp, #72]
   2e478:	mov	x5, x21
   2e47c:	mov	x4, x23
   2e480:	and	w3, w3, #0x1
   2e484:	add	x2, sp, #0x48
   2e488:	add	x1, sp, #0x278
   2e48c:	mov	x0, x22
   2e490:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   2e494:	ldrb	w0, [sp, #1192]
   2e498:	tst	w0, #0xe0
   2e49c:	b.ne	2e4b0 <PyInit__decimal@@Base+0x14310>  // b.any
   2e4a0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e4a4:	ldr	x1, [x0, #1704]
   2e4a8:	ldr	x0, [sp, #1232]
   2e4ac:	blr	x1
   2e4b0:	ldrb	w0, [sp, #1192]
   2e4b4:	tbnz	w0, #4, 2e4c8 <PyInit__decimal@@Base+0x14328>
   2e4b8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e4bc:	ldr	x1, [x0, #1704]
   2e4c0:	add	x0, sp, #0x4a8
   2e4c4:	blr	x1
   2e4c8:	ldrb	w0, [sp, #632]
   2e4cc:	tst	w0, #0xe0
   2e4d0:	b.ne	2e4e4 <PyInit__decimal@@Base+0x14344>  // b.any
   2e4d4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e4d8:	ldr	x1, [x0, #1704]
   2e4dc:	ldr	x0, [sp, #672]
   2e4e0:	blr	x1
   2e4e4:	ldrb	w0, [sp, #632]
   2e4e8:	tbnz	w0, #4, 2e4fc <PyInit__decimal@@Base+0x1435c>
   2e4ec:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e4f0:	ldr	x1, [x0, #1704]
   2e4f4:	add	x0, sp, #0x278
   2e4f8:	blr	x1
   2e4fc:	ldrb	w0, [sp, #72]
   2e500:	tst	w0, #0xe0
   2e504:	b.ne	2e518 <PyInit__decimal@@Base+0x14378>  // b.any
   2e508:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e50c:	ldr	x1, [x0, #1704]
   2e510:	ldr	x0, [sp, #112]
   2e514:	blr	x1
   2e518:	ldrb	w0, [sp, #72]
   2e51c:	tbnz	w0, #4, 2e3ac <PyInit__decimal@@Base+0x1420c>
   2e520:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2e524:	ldr	x1, [x0, #1704]
   2e528:	add	x0, sp, #0x48
   2e52c:	blr	x1
   2e530:	b	2e3ac <PyInit__decimal@@Base+0x1420c>
   2e534:	mov	x2, x21
   2e538:	mov	w1, #0x100                 	// #256
   2e53c:	mov	x0, x22
   2e540:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e544:	b	2e3ac <PyInit__decimal@@Base+0x1420c>
   2e548:	mov	x2, x21
   2e54c:	mov	w1, #0x100                 	// #256
   2e550:	mov	x0, x22
   2e554:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e558:	b	2e3ac <PyInit__decimal@@Base+0x1420c>
   2e55c:	mov	x2, x21
   2e560:	mov	x1, x20
   2e564:	mov	x0, x22
   2e568:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e56c:	b	2e3ac <PyInit__decimal@@Base+0x1420c>
   2e570:	neg	x24, x19
   2e574:	add	x19, x0, x19
   2e578:	b	2e404 <PyInit__decimal@@Base+0x14264>
   2e57c:	mov	x2, x21
   2e580:	mov	w1, #0x200                 	// #512
   2e584:	mov	x0, x22
   2e588:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e58c:	b	2e494 <PyInit__decimal@@Base+0x142f4>
   2e590:	mov	x2, x21
   2e594:	mov	w1, #0x200                 	// #512
   2e598:	mov	x0, x22
   2e59c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e5a0:	b	2e494 <PyInit__decimal@@Base+0x142f4>
   2e5a4:	mov	x2, x21
   2e5a8:	mov	w1, #0x200                 	// #512
   2e5ac:	mov	x0, x22
   2e5b0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e5b4:	b	2e494 <PyInit__decimal@@Base+0x142f4>
   2e5b8:	stp	x29, x30, [sp, #-80]!
   2e5bc:	mov	x29, sp
   2e5c0:	stp	x19, x20, [sp, #16]
   2e5c4:	stp	x21, x22, [sp, #32]
   2e5c8:	str	x23, [sp, #48]
   2e5cc:	mov	x23, x0
   2e5d0:	mov	x20, x1
   2e5d4:	mov	x19, x2
   2e5d8:	mov	x22, x3
   2e5dc:	mov	x21, x4
   2e5e0:	str	wzr, [sp, #76]
   2e5e4:	ldrb	w2, [x1]
   2e5e8:	tst	w2, #0xe
   2e5ec:	b.ne	2e5fc <PyInit__decimal@@Base+0x1445c>  // b.any
   2e5f0:	ldrb	w0, [x19]
   2e5f4:	tst	w0, #0xe
   2e5f8:	b.eq	2e618 <PyInit__decimal@@Base+0x14478>  // b.none
   2e5fc:	mov	x4, x21
   2e600:	mov	x3, x22
   2e604:	mov	x2, x19
   2e608:	mov	x1, x20
   2e60c:	mov	x0, x23
   2e610:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2e614:	cbnz	w0, 2e638 <PyInit__decimal@@Base+0x14498>
   2e618:	ldr	x0, [x19, #8]
   2e61c:	cbnz	x0, 2e628 <PyInit__decimal@@Base+0x14488>
   2e620:	ldrb	w0, [x19]
   2e624:	tbz	w0, #1, 2e64c <PyInit__decimal@@Base+0x144ac>
   2e628:	mov	x2, x21
   2e62c:	mov	w1, #0x100                 	// #256
   2e630:	mov	x0, x23
   2e634:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e638:	ldp	x19, x20, [sp, #16]
   2e63c:	ldp	x21, x22, [sp, #32]
   2e640:	ldr	x23, [sp, #48]
   2e644:	ldp	x29, x30, [sp], #80
   2e648:	ret
   2e64c:	add	x1, sp, #0x4c
   2e650:	mov	x0, x19
   2e654:	bl	29064 <PyInit__decimal@@Base+0xeec4>
   2e658:	ldr	x1, [x22, #8]
   2e65c:	ldr	x2, [x22]
   2e660:	add	x1, x1, x2
   2e664:	cmp	x0, x1, lsl #1
   2e668:	b.hi	2e6ec <PyInit__decimal@@Base+0x1454c>  // b.pmore
   2e66c:	ldr	w1, [sp, #76]
   2e670:	tbnz	w1, #8, 2e6ec <PyInit__decimal@@Base+0x1454c>
   2e674:	ldrb	w1, [x20]
   2e678:	tbnz	w1, #1, 2e700 <PyInit__decimal@@Base+0x14560>
   2e67c:	ldrb	w1, [x19]
   2e680:	sbfx	x1, x1, #0, #1
   2e684:	lsl	w1, w1, #1
   2e688:	add	w1, w1, #0x1
   2e68c:	sxtw	x1, w1
   2e690:	ldr	x19, [x20, #8]
   2e694:	madd	x19, x1, x0, x19
   2e698:	mov	x0, #0x1                   	// #1
   2e69c:	movk	x0, #0x4ec8, lsl #16
   2e6a0:	movk	x0, #0x6d67, lsl #32
   2e6a4:	movk	x0, #0x1bc1, lsl #48
   2e6a8:	cmp	x19, x0
   2e6ac:	csel	x19, x19, x0, le
   2e6b0:	mov	x2, x21
   2e6b4:	mov	x1, x20
   2e6b8:	mov	x0, x23
   2e6bc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e6c0:	mov	x0, #0xffffffff626fffff    	// #-2643460097
   2e6c4:	movk	x0, #0x2531, lsl #32
   2e6c8:	movk	x0, #0xc87d, lsl #48
   2e6cc:	cmp	x19, x0
   2e6d0:	csel	x19, x19, x0, ge  // ge = tcont
   2e6d4:	str	x19, [x23, #8]
   2e6d8:	mov	x2, x21
   2e6dc:	mov	x1, x22
   2e6e0:	mov	x0, x23
   2e6e4:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2e6e8:	b	2e638 <PyInit__decimal@@Base+0x14498>
   2e6ec:	mov	x2, x21
   2e6f0:	mov	w1, #0x100                 	// #256
   2e6f4:	mov	x0, x23
   2e6f8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e6fc:	b	2e638 <PyInit__decimal@@Base+0x14498>
   2e700:	mov	x2, x21
   2e704:	mov	x1, x20
   2e708:	mov	x0, x23
   2e70c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e710:	b	2e638 <PyInit__decimal@@Base+0x14498>
   2e714:	stp	x29, x30, [sp, #-64]!
   2e718:	mov	x29, sp
   2e71c:	stp	x19, x20, [sp, #16]
   2e720:	stp	x21, x22, [sp, #32]
   2e724:	str	x23, [sp, #48]
   2e728:	mov	x23, x0
   2e72c:	mov	x19, x1
   2e730:	mov	x21, x3
   2e734:	mov	x22, x4
   2e738:	ldrb	w1, [x1]
   2e73c:	tst	w1, #0xe
   2e740:	b.ne	2e77c <PyInit__decimal@@Base+0x145dc>  // b.any
   2e744:	mov	x20, x2
   2e748:	tbnz	x2, #63, 2e7c4 <PyInit__decimal@@Base+0x14624>
   2e74c:	ldr	x0, [x3]
   2e750:	cmp	x0, x2
   2e754:	b.ge	2e7a4 <PyInit__decimal@@Base+0x14604>  // b.tcont
   2e758:	mov	x2, x22
   2e75c:	mov	w1, #0x100                 	// #256
   2e760:	mov	x0, x23
   2e764:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e768:	ldp	x19, x20, [sp, #16]
   2e76c:	ldp	x21, x22, [sp, #32]
   2e770:	ldr	x23, [sp, #48]
   2e774:	ldp	x29, x30, [sp], #64
   2e778:	ret
   2e77c:	mov	x3, x4
   2e780:	mov	x2, x21
   2e784:	mov	x1, x19
   2e788:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   2e78c:	cbnz	w0, 2e768 <PyInit__decimal@@Base+0x145c8>
   2e790:	mov	x2, x22
   2e794:	mov	x1, x19
   2e798:	mov	x0, x23
   2e79c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e7a0:	b	2e768 <PyInit__decimal@@Base+0x145c8>
   2e7a4:	mov	x3, x4
   2e7a8:	mov	x1, x19
   2e7ac:	mov	x0, x23
   2e7b0:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2e7b4:	mov	x1, x21
   2e7b8:	mov	x0, x23
   2e7bc:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e7c0:	b	2e768 <PyInit__decimal@@Base+0x145c8>
   2e7c4:	ldr	x0, [x3]
   2e7c8:	neg	x0, x0
   2e7cc:	cmp	x0, x2
   2e7d0:	b.gt	2e758 <PyInit__decimal@@Base+0x145b8>
   2e7d4:	mov	x2, x4
   2e7d8:	mov	x1, x19
   2e7dc:	mov	x0, x23
   2e7e0:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e7e4:	cbz	w0, 2e768 <PyInit__decimal@@Base+0x145c8>
   2e7e8:	mov	x1, x21
   2e7ec:	mov	x0, x23
   2e7f0:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e7f4:	neg	x1, x20
   2e7f8:	mov	x0, x23
   2e7fc:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2e800:	b	2e768 <PyInit__decimal@@Base+0x145c8>
   2e804:	stp	x29, x30, [sp, #-80]!
   2e808:	mov	x29, sp
   2e80c:	stp	x19, x20, [sp, #16]
   2e810:	stp	x21, x22, [sp, #32]
   2e814:	str	x23, [sp, #48]
   2e818:	mov	x23, x0
   2e81c:	mov	x21, x1
   2e820:	mov	x19, x2
   2e824:	mov	x22, x3
   2e828:	mov	x20, x4
   2e82c:	str	wzr, [sp, #76]
   2e830:	ldrb	w2, [x1]
   2e834:	tst	w2, #0xe
   2e838:	b.ne	2e848 <PyInit__decimal@@Base+0x146a8>  // b.any
   2e83c:	ldrb	w0, [x19]
   2e840:	tst	w0, #0xe
   2e844:	b.eq	2e864 <PyInit__decimal@@Base+0x146c4>  // b.none
   2e848:	mov	x4, x20
   2e84c:	mov	x3, x22
   2e850:	mov	x2, x19
   2e854:	mov	x1, x21
   2e858:	mov	x0, x23
   2e85c:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2e860:	cbnz	w0, 2e884 <PyInit__decimal@@Base+0x146e4>
   2e864:	ldr	x0, [x19, #8]
   2e868:	cbnz	x0, 2e874 <PyInit__decimal@@Base+0x146d4>
   2e86c:	ldrb	w0, [x19]
   2e870:	tbz	w0, #1, 2e898 <PyInit__decimal@@Base+0x146f8>
   2e874:	mov	x2, x20
   2e878:	mov	w1, #0x100                 	// #256
   2e87c:	mov	x0, x23
   2e880:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e884:	ldp	x19, x20, [sp, #16]
   2e888:	ldp	x21, x22, [sp, #32]
   2e88c:	ldr	x23, [sp, #48]
   2e890:	ldp	x29, x30, [sp], #80
   2e894:	ret
   2e898:	add	x1, sp, #0x4c
   2e89c:	mov	x0, x19
   2e8a0:	bl	29084 <PyInit__decimal@@Base+0xeee4>
   2e8a4:	mov	x19, x0
   2e8a8:	ldr	w0, [sp, #76]
   2e8ac:	tbnz	w0, #8, 2e8f8 <PyInit__decimal@@Base+0x14758>
   2e8b0:	ldr	x0, [x22]
   2e8b4:	cmp	x0, x19
   2e8b8:	b.lt	2e90c <PyInit__decimal@@Base+0x1476c>  // b.tstop
   2e8bc:	neg	x0, x0
   2e8c0:	cmp	x0, x19
   2e8c4:	b.gt	2e90c <PyInit__decimal@@Base+0x1476c>
   2e8c8:	ldrb	w0, [x21]
   2e8cc:	tbnz	w0, #1, 2e920 <PyInit__decimal@@Base+0x14780>
   2e8d0:	tbnz	x19, #63, 2e934 <PyInit__decimal@@Base+0x14794>
   2e8d4:	mov	x3, x20
   2e8d8:	mov	x2, x19
   2e8dc:	mov	x1, x21
   2e8e0:	mov	x0, x23
   2e8e4:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   2e8e8:	mov	x1, x22
   2e8ec:	mov	x0, x23
   2e8f0:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e8f4:	b	2e884 <PyInit__decimal@@Base+0x146e4>
   2e8f8:	mov	x2, x20
   2e8fc:	mov	w1, #0x100                 	// #256
   2e900:	mov	x0, x23
   2e904:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e908:	b	2e884 <PyInit__decimal@@Base+0x146e4>
   2e90c:	mov	x2, x20
   2e910:	mov	w1, #0x100                 	// #256
   2e914:	mov	x0, x23
   2e918:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e91c:	b	2e884 <PyInit__decimal@@Base+0x146e4>
   2e920:	mov	x2, x20
   2e924:	mov	x1, x21
   2e928:	mov	x0, x23
   2e92c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e930:	b	2e884 <PyInit__decimal@@Base+0x146e4>
   2e934:	mov	x2, x20
   2e938:	mov	x1, x21
   2e93c:	mov	x0, x23
   2e940:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2e944:	cbz	w0, 2e884 <PyInit__decimal@@Base+0x146e4>
   2e948:	mov	x1, x22
   2e94c:	mov	x0, x23
   2e950:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2e954:	neg	x1, x19
   2e958:	mov	x0, x23
   2e95c:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   2e960:	b	2e884 <PyInit__decimal@@Base+0x146e4>
   2e964:	stp	x29, x30, [sp, #-64]!
   2e968:	mov	x29, sp
   2e96c:	stp	x21, x22, [sp, #32]
   2e970:	mov	x21, x0
   2e974:	mov	x22, x4
   2e978:	ldrb	w0, [x1]
   2e97c:	tst	w0, #0xe
   2e980:	b.ne	2e9b8 <PyInit__decimal@@Base+0x14818>  // b.any
   2e984:	stp	x19, x20, [sp, #16]
   2e988:	stp	x23, x24, [sp, #48]
   2e98c:	mov	x19, x1
   2e990:	mov	x20, x2
   2e994:	mov	x23, x3
   2e998:	ldrb	w1, [x2]
   2e99c:	orr	w0, w1, w0
   2e9a0:	and	w0, w0, #0x1
   2e9a4:	and	w1, w1, #0xe
   2e9a8:	orr	w0, w0, w1
   2e9ac:	cbz	w0, 2e9d4 <PyInit__decimal@@Base+0x14834>
   2e9b0:	ldp	x19, x20, [sp, #16]
   2e9b4:	ldp	x23, x24, [sp, #48]
   2e9b8:	mov	x2, x22
   2e9bc:	mov	w1, #0x100                 	// #256
   2e9c0:	mov	x0, x21
   2e9c4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2e9c8:	ldp	x21, x22, [sp, #32]
   2e9cc:	ldp	x29, x30, [sp], #64
   2e9d0:	ret
   2e9d4:	ldr	x0, [x19, #8]
   2e9d8:	cbnz	x0, 2eab0 <PyInit__decimal@@Base+0x14910>
   2e9dc:	ldr	x24, [x2, #8]
   2e9e0:	cbnz	x24, 2eaa4 <PyInit__decimal@@Base+0x14904>
   2e9e4:	ldr	x1, [x2, #16]
   2e9e8:	ldr	x0, [x19, #16]
   2e9ec:	cmp	x1, x0
   2e9f0:	csel	x2, x19, x2, le
   2e9f4:	csel	x20, x20, x19, le
   2e9f8:	mov	x19, x2
   2e9fc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2ea00:	ldr	x0, [x0, #1672]
   2ea04:	ldr	x1, [x2, #24]
   2ea08:	cmp	x1, x0
   2ea0c:	csel	x1, x1, x0, ge  // ge = tcont
   2ea10:	ldr	x0, [x21, #32]
   2ea14:	cmp	x1, x0
   2ea18:	b.eq	2ea2c <PyInit__decimal@@Base+0x1488c>  // b.none
   2ea1c:	ldrb	w2, [x21]
   2ea20:	tbz	w2, #5, 2eacc <PyInit__decimal@@Base+0x1492c>
   2ea24:	cmp	x1, x0
   2ea28:	b.gt	2eabc <PyInit__decimal@@Base+0x1491c>
   2ea2c:	ldr	x0, [x20, #24]
   2ea30:	sub	x0, x0, #0x1
   2ea34:	cmp	x0, #0x0
   2ea38:	b.le	2eb5c <PyInit__decimal@@Base+0x149bc>
   2ea3c:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2ea40:	movk	x4, #0xcccd
   2ea44:	adrp	x10, 42000 <PyInit__decimal@@Base+0x27e60>
   2ea48:	mov	x9, #0x0                   	// #0
   2ea4c:	lsl	x11, x24, #3
   2ea50:	ldr	x0, [x20, #40]
   2ea54:	ldr	x2, [x0, x24, lsl #3]
   2ea58:	ldr	x0, [x19, #40]
   2ea5c:	ldr	x0, [x0, x24, lsl #3]
   2ea60:	umulh	x1, x2, x4
   2ea64:	lsr	x5, x1, #3
   2ea68:	add	x5, x5, x5, lsl #2
   2ea6c:	sub	x5, x2, x5, lsl #1
   2ea70:	lsr	x1, x1, #3
   2ea74:	umulh	x2, x0, x4
   2ea78:	lsr	x6, x2, #3
   2ea7c:	add	x6, x6, x6, lsl #2
   2ea80:	sub	x6, x0, x6, lsl #1
   2ea84:	lsr	x2, x2, #3
   2ea88:	cmp	x5, #0x1
   2ea8c:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
   2ea90:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2ea94:	add	x0, x10, #0xdb8
   2ea98:	add	x8, x0, #0x90
   2ea9c:	mov	x7, #0x0                   	// #0
   2eaa0:	b	2eb30 <PyInit__decimal@@Base+0x14990>
   2eaa4:	ldp	x19, x20, [sp, #16]
   2eaa8:	ldp	x23, x24, [sp, #48]
   2eaac:	b	2e9b8 <PyInit__decimal@@Base+0x14818>
   2eab0:	ldp	x19, x20, [sp, #16]
   2eab4:	ldp	x23, x24, [sp, #48]
   2eab8:	b	2e9b8 <PyInit__decimal@@Base+0x14818>
   2eabc:	mov	x2, x4
   2eac0:	mov	x0, x21
   2eac4:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2eac8:	b	2ead8 <PyInit__decimal@@Base+0x14938>
   2eacc:	mov	x2, x4
   2ead0:	mov	x0, x21
   2ead4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2ead8:	cbnz	w0, 2ea2c <PyInit__decimal@@Base+0x1488c>
   2eadc:	ldp	x19, x20, [sp, #16]
   2eae0:	ldp	x23, x24, [sp, #48]
   2eae4:	b	2e9c8 <PyInit__decimal@@Base+0x14828>
   2eae8:	ldr	x3, [x0]
   2eaec:	add	x7, x7, x3
   2eaf0:	cmp	x8, x0
   2eaf4:	b.eq	2eb40 <PyInit__decimal@@Base+0x149a0>  // b.none
   2eaf8:	umulh	x3, x1, x4
   2eafc:	lsr	x5, x3, #3
   2eb00:	add	x5, x5, x5, lsl #2
   2eb04:	sub	x5, x1, x5, lsl #1
   2eb08:	lsr	x1, x3, #3
   2eb0c:	umulh	x3, x2, x4
   2eb10:	lsr	x6, x3, #3
   2eb14:	add	x6, x6, x6, lsl #2
   2eb18:	sub	x6, x2, x6, lsl #1
   2eb1c:	lsr	x2, x3, #3
   2eb20:	add	x0, x0, #0x8
   2eb24:	cmp	x5, #0x1
   2eb28:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
   2eb2c:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2eb30:	mov	x3, x9
   2eb34:	cmp	x5, x6
   2eb38:	b.ne	2eae8 <PyInit__decimal@@Base+0x14948>  // b.any
   2eb3c:	b	2eaec <PyInit__decimal@@Base+0x1494c>
   2eb40:	ldr	x0, [x21, #40]
   2eb44:	str	x7, [x0, x11]
   2eb48:	add	x24, x24, #0x1
   2eb4c:	ldr	x0, [x20, #24]
   2eb50:	sub	x0, x0, #0x1
   2eb54:	cmp	x0, x24
   2eb58:	b.gt	2ea4c <PyInit__decimal@@Base+0x148ac>
   2eb5c:	lsl	x8, x24, #3
   2eb60:	ldr	x0, [x20, #40]
   2eb64:	ldr	x1, [x0, x24, lsl #3]
   2eb68:	ldr	x0, [x19, #40]
   2eb6c:	ldr	x2, [x0, x24, lsl #3]
   2eb70:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eb74:	ldr	x0, [x0, #3584]
   2eb78:	cmp	x1, x0
   2eb7c:	b.cs	2ec7c <PyInit__decimal@@Base+0x14adc>  // b.hs, b.nlast
   2eb80:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eb84:	ldr	x0, [x0, #3544]
   2eb88:	cmp	x1, x0
   2eb8c:	b.cs	2ec28 <PyInit__decimal@@Base+0x14a88>  // b.hs, b.nlast
   2eb90:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eb94:	ldr	x0, [x0, #3528]
   2eb98:	cmp	x1, x0
   2eb9c:	b.cs	2ec10 <PyInit__decimal@@Base+0x14a70>  // b.hs, b.nlast
   2eba0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eba4:	ldr	x0, [x0, #3520]
   2eba8:	cmp	x1, x0
   2ebac:	cset	w9, cs  // cs = hs, nlast
   2ebb0:	add	w9, w9, #0x1
   2ebb4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2ebb8:	movk	x3, #0xcccd
   2ebbc:	umulh	x4, x1, x3
   2ebc0:	lsr	x0, x4, #3
   2ebc4:	add	x0, x0, x0, lsl #2
   2ebc8:	sub	x0, x1, x0, lsl #1
   2ebcc:	lsr	x4, x4, #3
   2ebd0:	umulh	x3, x2, x3
   2ebd4:	lsr	x1, x3, #3
   2ebd8:	add	x1, x1, x1, lsl #2
   2ebdc:	sub	x1, x2, x1, lsl #1
   2ebe0:	lsr	x3, x3, #3
   2ebe4:	cmp	x0, #0x1
   2ebe8:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2ebec:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2ebf0:	mov	x2, #0x1                   	// #1
   2ebf4:	mov	x5, #0x0                   	// #0
   2ebf8:	mov	x10, #0x0                   	// #0
   2ebfc:	adrp	x11, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec00:	add	x11, x11, #0xdb0
   2ec04:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   2ec08:	movk	x7, #0xcccd
   2ec0c:	b	2ed8c <PyInit__decimal@@Base+0x14bec>
   2ec10:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec14:	ldr	x0, [x0, #3536]
   2ec18:	cmp	x1, x0
   2ec1c:	cset	w9, cs  // cs = hs, nlast
   2ec20:	add	w9, w9, #0x3
   2ec24:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ec28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec2c:	ldr	x0, [x0, #3560]
   2ec30:	cmp	x1, x0
   2ec34:	b.cc	2ec64 <PyInit__decimal@@Base+0x14ac4>  // b.lo, b.ul, b.last
   2ec38:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec3c:	ldr	x0, [x0, #3576]
   2ec40:	mov	w9, #0x9                   	// #9
   2ec44:	cmp	x1, x0
   2ec48:	b.cs	2ebb4 <PyInit__decimal@@Base+0x14a14>  // b.hs, b.nlast
   2ec4c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec50:	ldr	x0, [x0, #3568]
   2ec54:	cmp	x1, x0
   2ec58:	cset	w9, cs  // cs = hs, nlast
   2ec5c:	add	w9, w9, #0x7
   2ec60:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ec64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec68:	ldr	x0, [x0, #3552]
   2ec6c:	cmp	x1, x0
   2ec70:	cset	w9, cs  // cs = hs, nlast
   2ec74:	add	w9, w9, #0x5
   2ec78:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ec7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec80:	ldr	x0, [x0, #3624]
   2ec84:	cmp	x1, x0
   2ec88:	b.cs	2ece0 <PyInit__decimal@@Base+0x14b40>  // b.hs, b.nlast
   2ec8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ec90:	ldr	x0, [x0, #3600]
   2ec94:	cmp	x1, x0
   2ec98:	b.cc	2ecc8 <PyInit__decimal@@Base+0x14b28>  // b.lo, b.ul, b.last
   2ec9c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eca0:	ldr	x0, [x0, #3616]
   2eca4:	mov	w9, #0xe                   	// #14
   2eca8:	cmp	x1, x0
   2ecac:	b.cs	2ebb4 <PyInit__decimal@@Base+0x14a14>  // b.hs, b.nlast
   2ecb0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ecb4:	ldr	x0, [x0, #3608]
   2ecb8:	cmp	x1, x0
   2ecbc:	cset	w9, cs  // cs = hs, nlast
   2ecc0:	add	w9, w9, #0xc
   2ecc4:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ecc8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2eccc:	ldr	x0, [x0, #3592]
   2ecd0:	cmp	x1, x0
   2ecd4:	cset	w9, cs  // cs = hs, nlast
   2ecd8:	add	w9, w9, #0xa
   2ecdc:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ece0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ece4:	ldr	x0, [x0, #3656]
   2ece8:	cmp	x1, x0
   2ecec:	b.cs	2ed30 <PyInit__decimal@@Base+0x14b90>  // b.hs, b.nlast
   2ecf0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ecf4:	ldr	x0, [x0, #3640]
   2ecf8:	cmp	x1, x0
   2ecfc:	b.cs	2ed18 <PyInit__decimal@@Base+0x14b78>  // b.hs, b.nlast
   2ed00:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ed04:	ldr	x0, [x0, #3632]
   2ed08:	cmp	x1, x0
   2ed0c:	cset	w9, cs  // cs = hs, nlast
   2ed10:	add	w9, w9, #0xf
   2ed14:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ed18:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ed1c:	ldr	x0, [x0, #3648]
   2ed20:	cmp	x1, x0
   2ed24:	cset	w9, cs  // cs = hs, nlast
   2ed28:	add	w9, w9, #0x11
   2ed2c:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ed30:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2ed34:	ldr	x0, [x0, #3664]
   2ed38:	cmp	x1, x0
   2ed3c:	cset	w9, cs  // cs = hs, nlast
   2ed40:	add	w9, w9, #0x13
   2ed44:	b	2ebb4 <PyInit__decimal@@Base+0x14a14>
   2ed48:	add	x5, x5, x6
   2ed4c:	cmp	w9, w2
   2ed50:	b.le	2eda0 <PyInit__decimal@@Base+0x14c00>
   2ed54:	umulh	x1, x4, x7
   2ed58:	lsr	x0, x1, #3
   2ed5c:	add	x0, x0, x0, lsl #2
   2ed60:	sub	x0, x4, x0, lsl #1
   2ed64:	lsr	x4, x1, #3
   2ed68:	umulh	x6, x3, x7
   2ed6c:	lsr	x1, x6, #3
   2ed70:	add	x1, x1, x1, lsl #2
   2ed74:	sub	x1, x3, x1, lsl #1
   2ed78:	lsr	x3, x6, #3
   2ed7c:	add	x2, x2, #0x1
   2ed80:	cmp	x0, #0x1
   2ed84:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2ed88:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2ed8c:	mov	x6, x10
   2ed90:	cmp	x0, x1
   2ed94:	b.eq	2ed48 <PyInit__decimal@@Base+0x14ba8>  // b.none
   2ed98:	ldr	x6, [x11, x2, lsl #3]
   2ed9c:	b	2ed48 <PyInit__decimal@@Base+0x14ba8>
   2eda0:	cmp	w2, #0x12
   2eda4:	b.gt	2ee38 <PyInit__decimal@@Base+0x14c98>
   2eda8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2edac:	movk	x1, #0xcccd
   2edb0:	umulh	x1, x3, x1
   2edb4:	lsr	x0, x1, #3
   2edb8:	add	x0, x0, x0, lsl #2
   2edbc:	sub	x0, x3, x0, lsl #1
   2edc0:	lsr	x3, x1, #3
   2edc4:	cmp	x0, #0x1
   2edc8:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2edcc:	mov	w4, #0x12                  	// #18
   2edd0:	sub	w4, w4, w2
   2edd4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   2edd8:	add	x1, x1, #0xdb8
   2eddc:	add	x6, x1, w2, sxtw #3
   2ede0:	mov	x1, #0x0                   	// #0
   2ede4:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   2ede8:	movk	x7, #0xcccd
   2edec:	ldr	x2, [x6, x1, lsl #3]
   2edf0:	madd	x5, x0, x2, x5
   2edf4:	cmp	x4, x1
   2edf8:	b.eq	2ee38 <PyInit__decimal@@Base+0x14c98>  // b.none
   2edfc:	umulh	x2, x3, x7
   2ee00:	lsr	x0, x2, #3
   2ee04:	add	x0, x0, x0, lsl #2
   2ee08:	sub	x0, x3, x0, lsl #1
   2ee0c:	lsr	x3, x2, #3
   2ee10:	add	x1, x1, #0x1
   2ee14:	cmp	x0, #0x1
   2ee18:	b.ls	2edec <PyInit__decimal@@Base+0x14c4c>  // b.plast
   2ee1c:	mov	x2, x22
   2ee20:	mov	w1, #0x100                 	// #256
   2ee24:	mov	x0, x21
   2ee28:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2ee2c:	ldp	x19, x20, [sp, #16]
   2ee30:	ldp	x23, x24, [sp, #48]
   2ee34:	b	2e9c8 <PyInit__decimal@@Base+0x14828>
   2ee38:	add	x24, x24, #0x1
   2ee3c:	ldr	x0, [x21, #40]
   2ee40:	str	x5, [x0, x8]
   2ee44:	ldr	x0, [x19, #24]
   2ee48:	cmp	x24, x0
   2ee4c:	b.ge	2eebc <PyInit__decimal@@Base+0x14d1c>  // b.tcont
   2ee50:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2ee54:	movk	x4, #0xcccd
   2ee58:	lsl	x6, x24, #3
   2ee5c:	ldr	x0, [x19, #40]
   2ee60:	ldr	x5, [x0, x24, lsl #3]
   2ee64:	umulh	x1, x5, x4
   2ee68:	lsr	x1, x1, #3
   2ee6c:	add	x0, x1, x1, lsl #2
   2ee70:	sub	x0, x5, x0, lsl #1
   2ee74:	cmp	x0, #0x1
   2ee78:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2ee7c:	mov	w3, #0x12                  	// #18
   2ee80:	umulh	x2, x1, x4
   2ee84:	lsr	x0, x2, #3
   2ee88:	add	x0, x0, x0, lsl #2
   2ee8c:	sub	x0, x1, x0, lsl #1
   2ee90:	lsr	x1, x2, #3
   2ee94:	cmp	x0, #0x1
   2ee98:	b.hi	2ee1c <PyInit__decimal@@Base+0x14c7c>  // b.pmore
   2ee9c:	subs	w3, w3, #0x1
   2eea0:	b.ne	2ee80 <PyInit__decimal@@Base+0x14ce0>  // b.any
   2eea4:	ldr	x0, [x21, #40]
   2eea8:	str	x5, [x0, x6]
   2eeac:	add	x24, x24, #0x1
   2eeb0:	ldr	x0, [x19, #24]
   2eeb4:	cmp	x0, x24
   2eeb8:	b.gt	2ee58 <PyInit__decimal@@Base+0x14cb8>
   2eebc:	ldrb	w2, [x21]
   2eec0:	and	w0, w2, #0xfffffff0
   2eec4:	strb	w0, [x21]
   2eec8:	str	xzr, [x21, #8]
   2eecc:	ldr	x1, [x21, #40]
   2eed0:	ldr	x0, [x19, #24]
   2eed4:	cmp	x0, #0x1
   2eed8:	b.le	2eef4 <PyInit__decimal@@Base+0x14d54>
   2eedc:	sub	x1, x1, #0x8
   2eee0:	ldr	x3, [x1, x0, lsl #3]
   2eee4:	cbnz	x3, 2eef4 <PyInit__decimal@@Base+0x14d54>
   2eee8:	sub	x0, x0, #0x1
   2eeec:	cmp	x0, #0x1
   2eef0:	b.ne	2eee0 <PyInit__decimal@@Base+0x14d40>  // b.any
   2eef4:	str	x0, [x21, #24]
   2eef8:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   2eefc:	ldr	x1, [x1, #1672]
   2ef00:	cmp	x1, x0
   2ef04:	csel	x1, x1, x0, ge  // ge = tcont
   2ef08:	ldr	x0, [x21, #32]
   2ef0c:	cmp	x1, x0
   2ef10:	b.eq	2ef20 <PyInit__decimal@@Base+0x14d80>  // b.none
   2ef14:	tbz	w2, #5, 2ef50 <PyInit__decimal@@Base+0x14db0>
   2ef18:	cmp	x1, x0
   2ef1c:	b.gt	2ef40 <PyInit__decimal@@Base+0x14da0>
   2ef20:	mov	x0, x21
   2ef24:	bl	285bc <PyInit__decimal@@Base+0xe41c>
   2ef28:	mov	x1, x23
   2ef2c:	mov	x0, x21
   2ef30:	bl	27040 <PyInit__decimal@@Base+0xcea0>
   2ef34:	ldp	x19, x20, [sp, #16]
   2ef38:	ldp	x23, x24, [sp, #48]
   2ef3c:	b	2e9c8 <PyInit__decimal@@Base+0x14828>
   2ef40:	mov	x2, x22
   2ef44:	mov	x0, x21
   2ef48:	bl	25338 <PyInit__decimal@@Base+0xb198>
   2ef4c:	b	2ef20 <PyInit__decimal@@Base+0x14d80>
   2ef50:	mov	x2, x22
   2ef54:	mov	x0, x21
   2ef58:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   2ef5c:	b	2ef20 <PyInit__decimal@@Base+0x14d80>
   2ef60:	stp	x29, x30, [sp, #-64]!
   2ef64:	mov	x29, sp
   2ef68:	stp	x19, x20, [sp, #16]
   2ef6c:	stp	x21, x22, [sp, #32]
   2ef70:	str	x23, [sp, #48]
   2ef74:	mov	x23, x0
   2ef78:	mov	x19, x1
   2ef7c:	mov	x20, x2
   2ef80:	mov	x22, x3
   2ef84:	mov	x21, x4
   2ef88:	ldrb	w1, [x1]
   2ef8c:	tst	w1, #0xe
   2ef90:	b.ne	2efa0 <PyInit__decimal@@Base+0x14e00>  // b.any
   2ef94:	ldrb	w3, [x2]
   2ef98:	tst	w3, #0xe
   2ef9c:	b.eq	2eff0 <PyInit__decimal@@Base+0x14e50>  // b.none
   2efa0:	mov	x4, x21
   2efa4:	mov	x3, x22
   2efa8:	mov	x2, x20
   2efac:	mov	x1, x19
   2efb0:	mov	x0, x23
   2efb4:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2efb8:	cbz	w0, 2efd0 <PyInit__decimal@@Base+0x14e30>
   2efbc:	ldp	x19, x20, [sp, #16]
   2efc0:	ldp	x21, x22, [sp, #32]
   2efc4:	ldr	x23, [sp, #48]
   2efc8:	ldp	x29, x30, [sp], #64
   2efcc:	ret
   2efd0:	ldrb	w3, [x20]
   2efd4:	mov	x4, x21
   2efd8:	and	w3, w3, #0x1
   2efdc:	mov	x2, x20
   2efe0:	mov	x1, x19
   2efe4:	mov	x0, x23
   2efe8:	bl	28fe8 <PyInit__decimal@@Base+0xee48>
   2efec:	b	2efbc <PyInit__decimal@@Base+0x14e1c>
   2eff0:	mov	x5, x4
   2eff4:	mov	x4, x22
   2eff8:	and	w3, w3, #0x1
   2effc:	mov	x1, x19
   2f000:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   2f004:	mov	x2, x21
   2f008:	mov	x1, x22
   2f00c:	mov	x0, x23
   2f010:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2f014:	b	2efbc <PyInit__decimal@@Base+0x14e1c>
   2f018:	stp	x29, x30, [sp, #-48]!
   2f01c:	mov	x29, sp
   2f020:	stp	x19, x20, [sp, #16]
   2f024:	mov	x20, x0
   2f028:	mov	x19, x4
   2f02c:	str	wzr, [sp, #44]
   2f030:	add	x4, sp, #0x2c
   2f034:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   2f038:	ldr	w0, [sp, #44]
   2f03c:	ldr	w1, [x19]
   2f040:	orr	w1, w1, w0
   2f044:	str	w1, [x19]
   2f048:	mov	w1, #0x1041                	// #4161
   2f04c:	tst	w0, w1
   2f050:	b.ne	2f060 <PyInit__decimal@@Base+0x14ec0>  // b.any
   2f054:	ldp	x19, x20, [sp, #16]
   2f058:	ldp	x29, x30, [sp], #48
   2f05c:	ret
   2f060:	mov	x2, x19
   2f064:	mov	w1, #0x100                 	// #256
   2f068:	mov	x0, x20
   2f06c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2f070:	b	2f054 <PyInit__decimal@@Base+0x14eb4>
   2f074:	stp	x29, x30, [sp, #-64]!
   2f078:	mov	x29, sp
   2f07c:	stp	x19, x20, [sp, #16]
   2f080:	stp	x21, x22, [sp, #32]
   2f084:	str	x23, [sp, #48]
   2f088:	mov	x21, x0
   2f08c:	mov	x19, x1
   2f090:	mov	x20, x2
   2f094:	mov	x23, x3
   2f098:	mov	x22, x4
   2f09c:	ldrb	w0, [x1]
   2f0a0:	tst	w0, #0xe
   2f0a4:	b.ne	2f0b4 <PyInit__decimal@@Base+0x14f14>  // b.any
   2f0a8:	ldrb	w3, [x2]
   2f0ac:	tst	w3, #0xe
   2f0b0:	b.eq	2f108 <PyInit__decimal@@Base+0x14f68>  // b.none
   2f0b4:	mov	x4, x22
   2f0b8:	mov	x3, x23
   2f0bc:	mov	x2, x20
   2f0c0:	mov	x1, x19
   2f0c4:	mov	x0, x21
   2f0c8:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2f0cc:	cbz	w0, 2f0e4 <PyInit__decimal@@Base+0x14f44>
   2f0d0:	ldp	x19, x20, [sp, #16]
   2f0d4:	ldp	x21, x22, [sp, #32]
   2f0d8:	ldr	x23, [sp, #48]
   2f0dc:	ldp	x29, x30, [sp], #64
   2f0e0:	ret
   2f0e4:	ldrb	w3, [x20]
   2f0e8:	eor	w3, w3, #0x1
   2f0ec:	mov	x4, x22
   2f0f0:	and	w3, w3, #0x1
   2f0f4:	mov	x2, x20
   2f0f8:	mov	x1, x19
   2f0fc:	mov	x0, x21
   2f100:	bl	28fe8 <PyInit__decimal@@Base+0xee48>
   2f104:	b	2f0d0 <PyInit__decimal@@Base+0x14f30>
   2f108:	eor	w3, w3, #0x1
   2f10c:	mov	x5, x4
   2f110:	mov	x4, x23
   2f114:	and	w3, w3, #0x1
   2f118:	mov	x0, x21
   2f11c:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   2f120:	mov	x2, x22
   2f124:	mov	x1, x23
   2f128:	mov	x0, x21
   2f12c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2f130:	b	2f0d0 <PyInit__decimal@@Base+0x14f30>
   2f134:	stp	x29, x30, [sp, #-48]!
   2f138:	mov	x29, sp
   2f13c:	stp	x19, x20, [sp, #16]
   2f140:	mov	x20, x0
   2f144:	mov	x19, x4
   2f148:	str	wzr, [sp, #44]
   2f14c:	add	x4, sp, #0x2c
   2f150:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   2f154:	ldr	w0, [sp, #44]
   2f158:	ldr	w1, [x19]
   2f15c:	orr	w1, w1, w0
   2f160:	str	w1, [x19]
   2f164:	mov	w1, #0x1041                	// #4161
   2f168:	tst	w0, w1
   2f16c:	b.ne	2f17c <PyInit__decimal@@Base+0x14fdc>  // b.any
   2f170:	ldp	x19, x20, [sp, #16]
   2f174:	ldp	x29, x30, [sp], #48
   2f178:	ret
   2f17c:	mov	x2, x19
   2f180:	mov	w1, #0x100                 	// #256
   2f184:	mov	x0, x20
   2f188:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2f18c:	b	2f170 <PyInit__decimal@@Base+0x14fd0>
   2f190:	sub	sp, sp, #0x290
   2f194:	stp	x29, x30, [sp]
   2f198:	mov	x29, sp
   2f19c:	stp	x19, x20, [sp, #16]
   2f1a0:	stp	x21, x22, [sp, #32]
   2f1a4:	mov	x21, x0
   2f1a8:	mov	w0, #0x30                  	// #48
   2f1ac:	strb	w0, [sp, #48]
   2f1b0:	str	xzr, [sp, #56]
   2f1b4:	str	xzr, [sp, #64]
   2f1b8:	str	xzr, [sp, #72]
   2f1bc:	mov	x0, #0x40                  	// #64
   2f1c0:	str	x0, [sp, #80]
   2f1c4:	add	x0, sp, #0x60
   2f1c8:	str	x0, [sp, #88]
   2f1cc:	ldr	x2, [x21, #16]
   2f1d0:	ldr	x0, [x21, #8]
   2f1d4:	add	x2, x2, x0
   2f1d8:	sub	x20, x2, #0x1
   2f1dc:	cmp	x20, #0x0
   2f1e0:	b.gt	2f270 <PyInit__decimal@@Base+0x150d0>
   2f1e4:	mov	x19, x1
   2f1e8:	cmn	x20, #0x1
   2f1ec:	b.lt	2f40c <PyInit__decimal@@Base+0x1526c>  // b.tstop
   2f1f0:	add	x22, sp, #0x260
   2f1f4:	mov	x0, x22
   2f1f8:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   2f1fc:	mov	x4, x19
   2f200:	mov	x3, x22
   2f204:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   2f208:	add	x2, x2, #0xc58
   2f20c:	mov	x1, x21
   2f210:	add	x0, sp, #0x30
   2f214:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   2f218:	ldrb	w1, [sp, #48]
   2f21c:	tst	w1, #0xe
   2f220:	b.ne	2f59c <PyInit__decimal@@Base+0x153fc>  // b.any
   2f224:	ldr	x0, [sp, #56]
   2f228:	ldr	x19, [sp, #64]
   2f22c:	add	x19, x0, x19
   2f230:	tst	w1, #0xe0
   2f234:	b.ne	2f248 <PyInit__decimal@@Base+0x150a8>  // b.any
   2f238:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f23c:	ldr	x1, [x0, #1704]
   2f240:	ldr	x0, [sp, #88]
   2f244:	blr	x1
   2f248:	ldrb	w0, [sp, #48]
   2f24c:	tbnz	w0, #4, 2f260 <PyInit__decimal@@Base+0x150c0>
   2f250:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f254:	ldr	x1, [x0, #1704]
   2f258:	add	x0, sp, #0x30
   2f25c:	blr	x1
   2f260:	cmp	x20, #0x0
   2f264:	cinc	x0, x19, ne  // ne = any
   2f268:	sub	x0, x0, #0x3
   2f26c:	b	2f2c0 <PyInit__decimal@@Base+0x15120>
   2f270:	cneg	x20, x20, lt  // lt = tstop
   2f274:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f278:	ldr	x0, [x0, #3584]
   2f27c:	cmp	x20, x0
   2f280:	b.cs	2f340 <PyInit__decimal@@Base+0x151a0>  // b.hs, b.nlast
   2f284:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f288:	ldr	x0, [x0, #3544]
   2f28c:	cmp	x20, x0
   2f290:	b.cs	2f2ec <PyInit__decimal@@Base+0x1514c>  // b.hs, b.nlast
   2f294:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f298:	ldr	x0, [x0, #3528]
   2f29c:	cmp	x20, x0
   2f2a0:	b.cs	2f2d4 <PyInit__decimal@@Base+0x15134>  // b.hs, b.nlast
   2f2a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f2a8:	ldr	x0, [x0, #3520]
   2f2ac:	cmp	x20, x0
   2f2b0:	cset	w0, cs  // cs = hs, nlast
   2f2b4:	add	w0, w0, #0x1
   2f2b8:	sub	w0, w0, #0x1
   2f2bc:	sxtw	x0, w0
   2f2c0:	ldp	x19, x20, [sp, #16]
   2f2c4:	ldp	x21, x22, [sp, #32]
   2f2c8:	ldp	x29, x30, [sp]
   2f2cc:	add	sp, sp, #0x290
   2f2d0:	ret
   2f2d4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f2d8:	ldr	x0, [x0, #3536]
   2f2dc:	cmp	x20, x0
   2f2e0:	cset	w0, cs  // cs = hs, nlast
   2f2e4:	add	w0, w0, #0x3
   2f2e8:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f2ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f2f0:	ldr	x0, [x0, #3560]
   2f2f4:	cmp	x20, x0
   2f2f8:	b.cc	2f328 <PyInit__decimal@@Base+0x15188>  // b.lo, b.ul, b.last
   2f2fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f300:	ldr	x1, [x0, #3576]
   2f304:	mov	w0, #0x9                   	// #9
   2f308:	cmp	x20, x1
   2f30c:	b.cs	2f2b8 <PyInit__decimal@@Base+0x15118>  // b.hs, b.nlast
   2f310:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f314:	ldr	x0, [x0, #3568]
   2f318:	cmp	x20, x0
   2f31c:	cset	w0, cs  // cs = hs, nlast
   2f320:	add	w0, w0, #0x7
   2f324:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f328:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f32c:	ldr	x0, [x0, #3552]
   2f330:	cmp	x20, x0
   2f334:	cset	w0, cs  // cs = hs, nlast
   2f338:	add	w0, w0, #0x5
   2f33c:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f340:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f344:	ldr	x0, [x0, #3624]
   2f348:	cmp	x20, x0
   2f34c:	b.cs	2f3a4 <PyInit__decimal@@Base+0x15204>  // b.hs, b.nlast
   2f350:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f354:	ldr	x0, [x0, #3600]
   2f358:	cmp	x20, x0
   2f35c:	b.cc	2f38c <PyInit__decimal@@Base+0x151ec>  // b.lo, b.ul, b.last
   2f360:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f364:	ldr	x1, [x0, #3616]
   2f368:	mov	w0, #0xe                   	// #14
   2f36c:	cmp	x20, x1
   2f370:	b.cs	2f2b8 <PyInit__decimal@@Base+0x15118>  // b.hs, b.nlast
   2f374:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f378:	ldr	x0, [x0, #3608]
   2f37c:	cmp	x20, x0
   2f380:	cset	w0, cs  // cs = hs, nlast
   2f384:	add	w0, w0, #0xc
   2f388:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f38c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f390:	ldr	x0, [x0, #3592]
   2f394:	cmp	x20, x0
   2f398:	cset	w0, cs  // cs = hs, nlast
   2f39c:	add	w0, w0, #0xa
   2f3a0:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f3a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f3a8:	ldr	x0, [x0, #3656]
   2f3ac:	cmp	x20, x0
   2f3b0:	b.cs	2f3f4 <PyInit__decimal@@Base+0x15254>  // b.hs, b.nlast
   2f3b4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f3b8:	ldr	x0, [x0, #3640]
   2f3bc:	cmp	x20, x0
   2f3c0:	b.cs	2f3dc <PyInit__decimal@@Base+0x1523c>  // b.hs, b.nlast
   2f3c4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f3c8:	ldr	x0, [x0, #3632]
   2f3cc:	cmp	x20, x0
   2f3d0:	cset	w0, cs  // cs = hs, nlast
   2f3d4:	add	w0, w0, #0xf
   2f3d8:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f3dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f3e0:	ldr	x0, [x0, #3648]
   2f3e4:	cmp	x20, x0
   2f3e8:	cset	w0, cs  // cs = hs, nlast
   2f3ec:	add	w0, w0, #0x11
   2f3f0:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f3f4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f3f8:	ldr	x0, [x0, #3664]
   2f3fc:	cmp	x20, x0
   2f400:	cset	w0, cs  // cs = hs, nlast
   2f404:	add	w0, w0, #0x13
   2f408:	b	2f2b8 <PyInit__decimal@@Base+0x15118>
   2f40c:	cmp	x2, #0x0
   2f410:	cneg	x2, x2, lt  // lt = tstop
   2f414:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f418:	ldr	x0, [x0, #3584]
   2f41c:	cmp	x2, x0
   2f420:	b.cs	2f4d0 <PyInit__decimal@@Base+0x15330>  // b.hs, b.nlast
   2f424:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f428:	ldr	x0, [x0, #3544]
   2f42c:	cmp	x2, x0
   2f430:	b.cs	2f47c <PyInit__decimal@@Base+0x152dc>  // b.hs, b.nlast
   2f434:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f438:	ldr	x0, [x0, #3528]
   2f43c:	cmp	x2, x0
   2f440:	b.cs	2f464 <PyInit__decimal@@Base+0x152c4>  // b.hs, b.nlast
   2f444:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f448:	ldr	x0, [x0, #3520]
   2f44c:	cmp	x2, x0
   2f450:	cset	w0, cs  // cs = hs, nlast
   2f454:	add	w0, w0, #0x1
   2f458:	sub	w0, w0, #0x1
   2f45c:	sxtw	x0, w0
   2f460:	b	2f2c0 <PyInit__decimal@@Base+0x15120>
   2f464:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f468:	ldr	x0, [x0, #3536]
   2f46c:	cmp	x2, x0
   2f470:	cset	w0, cs  // cs = hs, nlast
   2f474:	add	w0, w0, #0x3
   2f478:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f47c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f480:	ldr	x0, [x0, #3560]
   2f484:	cmp	x2, x0
   2f488:	b.cc	2f4b8 <PyInit__decimal@@Base+0x15318>  // b.lo, b.ul, b.last
   2f48c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f490:	ldr	x1, [x0, #3576]
   2f494:	mov	w0, #0x9                   	// #9
   2f498:	cmp	x2, x1
   2f49c:	b.cs	2f458 <PyInit__decimal@@Base+0x152b8>  // b.hs, b.nlast
   2f4a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f4a4:	ldr	x0, [x0, #3568]
   2f4a8:	cmp	x2, x0
   2f4ac:	cset	w0, cs  // cs = hs, nlast
   2f4b0:	add	w0, w0, #0x7
   2f4b4:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f4b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f4bc:	ldr	x0, [x0, #3552]
   2f4c0:	cmp	x2, x0
   2f4c4:	cset	w0, cs  // cs = hs, nlast
   2f4c8:	add	w0, w0, #0x5
   2f4cc:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f4d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f4d4:	ldr	x0, [x0, #3624]
   2f4d8:	cmp	x2, x0
   2f4dc:	b.cs	2f534 <PyInit__decimal@@Base+0x15394>  // b.hs, b.nlast
   2f4e0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f4e4:	ldr	x0, [x0, #3600]
   2f4e8:	cmp	x2, x0
   2f4ec:	b.cc	2f51c <PyInit__decimal@@Base+0x1537c>  // b.lo, b.ul, b.last
   2f4f0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f4f4:	ldr	x1, [x0, #3616]
   2f4f8:	mov	w0, #0xe                   	// #14
   2f4fc:	cmp	x2, x1
   2f500:	b.cs	2f458 <PyInit__decimal@@Base+0x152b8>  // b.hs, b.nlast
   2f504:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f508:	ldr	x0, [x0, #3608]
   2f50c:	cmp	x2, x0
   2f510:	cset	w0, cs  // cs = hs, nlast
   2f514:	add	w0, w0, #0xc
   2f518:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f51c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f520:	ldr	x0, [x0, #3592]
   2f524:	cmp	x2, x0
   2f528:	cset	w0, cs  // cs = hs, nlast
   2f52c:	add	w0, w0, #0xa
   2f530:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f534:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f538:	ldr	x0, [x0, #3656]
   2f53c:	cmp	x2, x0
   2f540:	b.cs	2f584 <PyInit__decimal@@Base+0x153e4>  // b.hs, b.nlast
   2f544:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f548:	ldr	x0, [x0, #3640]
   2f54c:	cmp	x2, x0
   2f550:	b.cs	2f56c <PyInit__decimal@@Base+0x153cc>  // b.hs, b.nlast
   2f554:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f558:	ldr	x0, [x0, #3632]
   2f55c:	cmp	x2, x0
   2f560:	cset	w0, cs  // cs = hs, nlast
   2f564:	add	w0, w0, #0xf
   2f568:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f56c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f570:	ldr	x0, [x0, #3648]
   2f574:	cmp	x2, x0
   2f578:	cset	w0, cs  // cs = hs, nlast
   2f57c:	add	w0, w0, #0x11
   2f580:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f584:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   2f588:	ldr	x0, [x0, #3664]
   2f58c:	cmp	x2, x0
   2f590:	cset	w0, cs  // cs = hs, nlast
   2f594:	add	w0, w0, #0x13
   2f598:	b	2f458 <PyInit__decimal@@Base+0x152b8>
   2f59c:	tst	w1, #0xe0
   2f5a0:	b.ne	2f5b4 <PyInit__decimal@@Base+0x15414>  // b.any
   2f5a4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f5a8:	ldr	x1, [x0, #1704]
   2f5ac:	ldr	x0, [sp, #88]
   2f5b0:	blr	x1
   2f5b4:	ldrb	w1, [sp, #48]
   2f5b8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2f5bc:	tbnz	w1, #4, 2f2c0 <PyInit__decimal@@Base+0x15120>
   2f5c0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f5c4:	ldr	x1, [x0, #1704]
   2f5c8:	add	x0, sp, #0x30
   2f5cc:	blr	x1
   2f5d0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   2f5d4:	b	2f2c0 <PyInit__decimal@@Base+0x15120>
   2f5d8:	sub	sp, sp, #0x2b0
   2f5dc:	stp	x29, x30, [sp]
   2f5e0:	mov	x29, sp
   2f5e4:	stp	x19, x20, [sp, #16]
   2f5e8:	stp	x21, x22, [sp, #32]
   2f5ec:	stp	x23, x24, [sp, #48]
   2f5f0:	str	x25, [sp, #64]
   2f5f4:	mov	x21, x0
   2f5f8:	mov	x22, x1
   2f5fc:	mov	x24, x2
   2f600:	mov	x23, x3
   2f604:	mov	x20, x4
   2f608:	mov	w0, #0x30                  	// #48
   2f60c:	strb	w0, [sp, #80]
   2f610:	str	xzr, [sp, #88]
   2f614:	str	xzr, [sp, #96]
   2f618:	str	xzr, [sp, #104]
   2f61c:	mov	x0, #0x40                  	// #64
   2f620:	str	x0, [sp, #112]
   2f624:	add	x0, sp, #0x80
   2f628:	str	x0, [sp, #120]
   2f62c:	add	x25, sp, #0x280
   2f630:	mov	x0, x25
   2f634:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   2f638:	add	x19, sp, #0x50
   2f63c:	mov	x3, x20
   2f640:	mov	x2, x25
   2f644:	mov	x1, x24
   2f648:	mov	x0, x19
   2f64c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   2f650:	mov	x4, x20
   2f654:	mov	x3, x23
   2f658:	mov	x2, x19
   2f65c:	mov	x1, x22
   2f660:	mov	x0, x21
   2f664:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   2f668:	ldrb	w0, [sp, #80]
   2f66c:	tst	w0, #0xe0
   2f670:	b.ne	2f684 <PyInit__decimal@@Base+0x154e4>  // b.any
   2f674:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f678:	ldr	x1, [x0, #1704]
   2f67c:	ldr	x0, [sp, #120]
   2f680:	blr	x1
   2f684:	ldrb	w0, [sp, #80]
   2f688:	tbnz	w0, #4, 2f69c <PyInit__decimal@@Base+0x154fc>
   2f68c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f690:	ldr	x1, [x0, #1704]
   2f694:	add	x0, sp, #0x50
   2f698:	blr	x1
   2f69c:	ldp	x19, x20, [sp, #16]
   2f6a0:	ldp	x21, x22, [sp, #32]
   2f6a4:	ldp	x23, x24, [sp, #48]
   2f6a8:	ldr	x25, [sp, #64]
   2f6ac:	ldp	x29, x30, [sp]
   2f6b0:	add	sp, sp, #0x2b0
   2f6b4:	ret
   2f6b8:	sub	sp, sp, #0x2b0
   2f6bc:	stp	x29, x30, [sp]
   2f6c0:	mov	x29, sp
   2f6c4:	stp	x19, x20, [sp, #16]
   2f6c8:	stp	x21, x22, [sp, #32]
   2f6cc:	stp	x23, x24, [sp, #48]
   2f6d0:	str	x25, [sp, #64]
   2f6d4:	mov	x21, x0
   2f6d8:	mov	x22, x1
   2f6dc:	mov	x24, x2
   2f6e0:	mov	x23, x3
   2f6e4:	mov	x20, x4
   2f6e8:	mov	w0, #0x30                  	// #48
   2f6ec:	strb	w0, [sp, #80]
   2f6f0:	str	xzr, [sp, #88]
   2f6f4:	str	xzr, [sp, #96]
   2f6f8:	str	xzr, [sp, #104]
   2f6fc:	mov	x0, #0x40                  	// #64
   2f700:	str	x0, [sp, #112]
   2f704:	add	x0, sp, #0x80
   2f708:	str	x0, [sp, #120]
   2f70c:	add	x25, sp, #0x280
   2f710:	mov	x0, x25
   2f714:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   2f718:	add	x19, sp, #0x50
   2f71c:	mov	x3, x20
   2f720:	mov	x2, x25
   2f724:	mov	x1, x24
   2f728:	mov	x0, x19
   2f72c:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   2f730:	mov	x4, x20
   2f734:	mov	x3, x23
   2f738:	mov	x2, x19
   2f73c:	mov	x1, x22
   2f740:	mov	x0, x21
   2f744:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   2f748:	ldrb	w0, [sp, #80]
   2f74c:	tst	w0, #0xe0
   2f750:	b.ne	2f764 <PyInit__decimal@@Base+0x155c4>  // b.any
   2f754:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f758:	ldr	x1, [x0, #1704]
   2f75c:	ldr	x0, [sp, #120]
   2f760:	blr	x1
   2f764:	ldrb	w0, [sp, #80]
   2f768:	tbnz	w0, #4, 2f77c <PyInit__decimal@@Base+0x155dc>
   2f76c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f770:	ldr	x1, [x0, #1704]
   2f774:	add	x0, sp, #0x50
   2f778:	blr	x1
   2f77c:	ldp	x19, x20, [sp, #16]
   2f780:	ldp	x21, x22, [sp, #32]
   2f784:	ldp	x23, x24, [sp, #48]
   2f788:	ldr	x25, [sp, #64]
   2f78c:	ldp	x29, x30, [sp]
   2f790:	add	sp, sp, #0x2b0
   2f794:	ret
   2f798:	sub	sp, sp, #0x2b0
   2f79c:	stp	x29, x30, [sp]
   2f7a0:	mov	x29, sp
   2f7a4:	stp	x19, x20, [sp, #16]
   2f7a8:	stp	x21, x22, [sp, #32]
   2f7ac:	stp	x23, x24, [sp, #48]
   2f7b0:	str	x25, [sp, #64]
   2f7b4:	mov	x21, x0
   2f7b8:	mov	x22, x1
   2f7bc:	mov	x24, x2
   2f7c0:	mov	x23, x3
   2f7c4:	mov	x20, x4
   2f7c8:	mov	w0, #0x30                  	// #48
   2f7cc:	strb	w0, [sp, #80]
   2f7d0:	str	xzr, [sp, #88]
   2f7d4:	str	xzr, [sp, #96]
   2f7d8:	str	xzr, [sp, #104]
   2f7dc:	mov	x0, #0x40                  	// #64
   2f7e0:	str	x0, [sp, #112]
   2f7e4:	add	x0, sp, #0x80
   2f7e8:	str	x0, [sp, #120]
   2f7ec:	add	x25, sp, #0x280
   2f7f0:	mov	x0, x25
   2f7f4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   2f7f8:	add	x19, sp, #0x50
   2f7fc:	mov	x3, x20
   2f800:	mov	x2, x25
   2f804:	mov	x1, x24
   2f808:	mov	x0, x19
   2f80c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   2f810:	mov	x4, x20
   2f814:	mov	x3, x23
   2f818:	mov	x2, x19
   2f81c:	mov	x1, x22
   2f820:	mov	x0, x21
   2f824:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   2f828:	ldrb	w0, [sp, #80]
   2f82c:	tst	w0, #0xe0
   2f830:	b.ne	2f844 <PyInit__decimal@@Base+0x156a4>  // b.any
   2f834:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f838:	ldr	x1, [x0, #1704]
   2f83c:	ldr	x0, [sp, #120]
   2f840:	blr	x1
   2f844:	ldrb	w0, [sp, #80]
   2f848:	tbnz	w0, #4, 2f85c <PyInit__decimal@@Base+0x156bc>
   2f84c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f850:	ldr	x1, [x0, #1704]
   2f854:	add	x0, sp, #0x50
   2f858:	blr	x1
   2f85c:	ldp	x19, x20, [sp, #16]
   2f860:	ldp	x21, x22, [sp, #32]
   2f864:	ldp	x23, x24, [sp, #48]
   2f868:	ldr	x25, [sp, #64]
   2f86c:	ldp	x29, x30, [sp]
   2f870:	add	sp, sp, #0x2b0
   2f874:	ret
   2f878:	sub	sp, sp, #0x2b0
   2f87c:	stp	x29, x30, [sp]
   2f880:	mov	x29, sp
   2f884:	stp	x19, x20, [sp, #16]
   2f888:	stp	x21, x22, [sp, #32]
   2f88c:	stp	x23, x24, [sp, #48]
   2f890:	str	x25, [sp, #64]
   2f894:	mov	x21, x0
   2f898:	mov	x22, x1
   2f89c:	mov	x24, x2
   2f8a0:	mov	x23, x3
   2f8a4:	mov	x20, x4
   2f8a8:	mov	w0, #0x30                  	// #48
   2f8ac:	strb	w0, [sp, #80]
   2f8b0:	str	xzr, [sp, #88]
   2f8b4:	str	xzr, [sp, #96]
   2f8b8:	str	xzr, [sp, #104]
   2f8bc:	mov	x0, #0x40                  	// #64
   2f8c0:	str	x0, [sp, #112]
   2f8c4:	add	x0, sp, #0x80
   2f8c8:	str	x0, [sp, #120]
   2f8cc:	add	x25, sp, #0x280
   2f8d0:	mov	x0, x25
   2f8d4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   2f8d8:	add	x19, sp, #0x50
   2f8dc:	mov	x3, x20
   2f8e0:	mov	x2, x25
   2f8e4:	mov	x1, x24
   2f8e8:	mov	x0, x19
   2f8ec:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   2f8f0:	mov	x4, x20
   2f8f4:	mov	x3, x23
   2f8f8:	mov	x2, x19
   2f8fc:	mov	x1, x22
   2f900:	mov	x0, x21
   2f904:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   2f908:	ldrb	w0, [sp, #80]
   2f90c:	tst	w0, #0xe0
   2f910:	b.ne	2f924 <PyInit__decimal@@Base+0x15784>  // b.any
   2f914:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f918:	ldr	x1, [x0, #1704]
   2f91c:	ldr	x0, [sp, #120]
   2f920:	blr	x1
   2f924:	ldrb	w0, [sp, #80]
   2f928:	tbnz	w0, #4, 2f93c <PyInit__decimal@@Base+0x1579c>
   2f92c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2f930:	ldr	x1, [x0, #1704]
   2f934:	add	x0, sp, #0x50
   2f938:	blr	x1
   2f93c:	ldp	x19, x20, [sp, #16]
   2f940:	ldp	x21, x22, [sp, #32]
   2f944:	ldp	x23, x24, [sp, #48]
   2f948:	ldr	x25, [sp, #64]
   2f94c:	ldp	x29, x30, [sp]
   2f950:	add	sp, sp, #0x2b0
   2f954:	ret
   2f958:	stp	x29, x30, [sp, #-16]!
   2f95c:	mov	x29, sp
   2f960:	sxtw	x2, w2
   2f964:	bl	2f5d8 <PyInit__decimal@@Base+0x15438>
   2f968:	ldp	x29, x30, [sp], #16
   2f96c:	ret
   2f970:	stp	x29, x30, [sp, #-16]!
   2f974:	mov	x29, sp
   2f978:	mov	w2, w2
   2f97c:	bl	2f6b8 <PyInit__decimal@@Base+0x15518>
   2f980:	ldp	x29, x30, [sp], #16
   2f984:	ret
   2f988:	stp	x29, x30, [sp, #-16]!
   2f98c:	mov	x29, sp
   2f990:	bl	2f5d8 <PyInit__decimal@@Base+0x15438>
   2f994:	ldp	x29, x30, [sp], #16
   2f998:	ret
   2f99c:	stp	x29, x30, [sp, #-16]!
   2f9a0:	mov	x29, sp
   2f9a4:	bl	2f6b8 <PyInit__decimal@@Base+0x15518>
   2f9a8:	ldp	x29, x30, [sp], #16
   2f9ac:	ret
   2f9b0:	stp	x29, x30, [sp, #-16]!
   2f9b4:	mov	x29, sp
   2f9b8:	sxtw	x2, w2
   2f9bc:	bl	2f798 <PyInit__decimal@@Base+0x155f8>
   2f9c0:	ldp	x29, x30, [sp], #16
   2f9c4:	ret
   2f9c8:	stp	x29, x30, [sp, #-16]!
   2f9cc:	mov	x29, sp
   2f9d0:	mov	w2, w2
   2f9d4:	bl	2f878 <PyInit__decimal@@Base+0x156d8>
   2f9d8:	ldp	x29, x30, [sp], #16
   2f9dc:	ret
   2f9e0:	stp	x29, x30, [sp, #-16]!
   2f9e4:	mov	x29, sp
   2f9e8:	bl	2f798 <PyInit__decimal@@Base+0x155f8>
   2f9ec:	ldp	x29, x30, [sp], #16
   2f9f0:	ret
   2f9f4:	stp	x29, x30, [sp, #-16]!
   2f9f8:	mov	x29, sp
   2f9fc:	bl	2f878 <PyInit__decimal@@Base+0x156d8>
   2fa00:	ldp	x29, x30, [sp], #16
   2fa04:	ret
   2fa08:	stp	x29, x30, [sp, #-80]!
   2fa0c:	mov	x29, sp
   2fa10:	stp	x19, x20, [sp, #16]
   2fa14:	stp	x21, x22, [sp, #32]
   2fa18:	stp	x23, x24, [sp, #48]
   2fa1c:	mov	x19, x0
   2fa20:	mov	x23, x1
   2fa24:	mov	x24, x2
   2fa28:	mov	x21, x3
   2fa2c:	mov	x22, x4
   2fa30:	mov	x20, x5
   2fa34:	str	wzr, [sp, #76]
   2fa38:	cmp	x0, x3
   2fa3c:	b.eq	2fa70 <PyInit__decimal@@Base+0x158d0>  // b.none
   2fa40:	add	x4, sp, #0x4c
   2fa44:	mov	x3, x22
   2fa48:	bl	29384 <PyInit__decimal@@Base+0xf1e4>
   2fa4c:	ldr	w0, [sp, #76]
   2fa50:	tbnz	w0, #8, 2fad4 <PyInit__decimal@@Base+0x15934>
   2fa54:	add	x4, sp, #0x4c
   2fa58:	mov	x3, x22
   2fa5c:	mov	x2, x21
   2fa60:	mov	x1, x19
   2fa64:	mov	x0, x19
   2fa68:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   2fa6c:	b	2fad4 <PyInit__decimal@@Base+0x15934>
   2fa70:	mov	x0, x3
   2fa74:	bl	2a720 <PyInit__decimal@@Base+0x10580>
   2fa78:	mov	x21, x0
   2fa7c:	cbz	x0, 2faf8 <PyInit__decimal@@Base+0x15958>
   2fa80:	add	x4, sp, #0x4c
   2fa84:	mov	x3, x22
   2fa88:	mov	x2, x24
   2fa8c:	mov	x1, x23
   2fa90:	mov	x0, x19
   2fa94:	bl	29384 <PyInit__decimal@@Base+0xf1e4>
   2fa98:	ldr	w0, [sp, #76]
   2fa9c:	tbz	w0, #8, 2fb0c <PyInit__decimal@@Base+0x1596c>
   2faa0:	ldrb	w0, [x21]
   2faa4:	tst	w0, #0xe0
   2faa8:	b.ne	2fabc <PyInit__decimal@@Base+0x1591c>  // b.any
   2faac:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2fab0:	ldr	x1, [x0, #1704]
   2fab4:	ldr	x0, [x21, #40]
   2fab8:	blr	x1
   2fabc:	ldrb	w0, [x21]
   2fac0:	tbnz	w0, #4, 2fad4 <PyInit__decimal@@Base+0x15934>
   2fac4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   2fac8:	ldr	x1, [x0, #1704]
   2facc:	mov	x0, x21
   2fad0:	blr	x1
   2fad4:	ldr	w0, [x20]
   2fad8:	ldr	w1, [sp, #76]
   2fadc:	orr	w0, w0, w1
   2fae0:	str	w0, [x20]
   2fae4:	ldp	x19, x20, [sp, #16]
   2fae8:	ldp	x21, x22, [sp, #32]
   2faec:	ldp	x23, x24, [sp, #48]
   2faf0:	ldp	x29, x30, [sp], #80
   2faf4:	ret
   2faf8:	mov	x2, x20
   2fafc:	mov	w1, #0x200                 	// #512
   2fb00:	mov	x0, x19
   2fb04:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   2fb08:	b	2fae4 <PyInit__decimal@@Base+0x15944>
   2fb0c:	add	x4, sp, #0x4c
   2fb10:	mov	x3, x22
   2fb14:	mov	x2, x21
   2fb18:	mov	x1, x19
   2fb1c:	mov	x0, x19
   2fb20:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   2fb24:	b	2faa0 <PyInit__decimal@@Base+0x15900>
   2fb28:	stp	x29, x30, [sp, #-64]!
   2fb2c:	mov	x29, sp
   2fb30:	stp	x19, x20, [sp, #16]
   2fb34:	stp	x21, x22, [sp, #32]
   2fb38:	str	x23, [sp, #48]
   2fb3c:	mov	x21, x0
   2fb40:	mov	x20, x1
   2fb44:	mov	x19, x2
   2fb48:	mov	x23, x3
   2fb4c:	mov	x22, x4
   2fb50:	ldrb	w0, [x1]
   2fb54:	tbz	w0, #2, 2fb64 <PyInit__decimal@@Base+0x159c4>
   2fb58:	ldrb	w1, [x2]
   2fb5c:	tst	w1, #0xc
   2fb60:	b.eq	2fbf4 <PyInit__decimal@@Base+0x15a54>  // b.none
   2fb64:	ldrb	w1, [x19]
   2fb68:	tbz	w1, #2, 2fb74 <PyInit__decimal@@Base+0x159d4>
   2fb6c:	tst	w0, #0xc
   2fb70:	b.eq	2fc08 <PyInit__decimal@@Base+0x15a68>  // b.none
   2fb74:	mov	x4, x22
   2fb78:	mov	x3, x23
   2fb7c:	mov	x2, x19
   2fb80:	mov	x1, x20
   2fb84:	mov	x0, x21
   2fb88:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2fb8c:	cbnz	w0, 2fbe0 <PyInit__decimal@@Base+0x15a40>
   2fb90:	mov	x1, x19
   2fb94:	mov	x0, x20
   2fb98:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   2fb9c:	cbnz	w0, 2fbbc <PyInit__decimal@@Base+0x15a1c>
   2fba0:	ldrb	w0, [x20]
   2fba4:	and	w1, w0, #0x1
   2fba8:	ldrb	w0, [x19]
   2fbac:	and	w0, w0, #0x1
   2fbb0:	cmp	w1, w0
   2fbb4:	b.eq	2fc1c <PyInit__decimal@@Base+0x15a7c>  // b.none
   2fbb8:	sub	w0, w0, w1
   2fbbc:	tbnz	w0, #31, 2fc40 <PyInit__decimal@@Base+0x15aa0>
   2fbc0:	mov	x2, x22
   2fbc4:	mov	x1, x20
   2fbc8:	mov	x0, x21
   2fbcc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fbd0:	mov	x2, x22
   2fbd4:	mov	x1, x23
   2fbd8:	mov	x0, x21
   2fbdc:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2fbe0:	ldp	x19, x20, [sp, #16]
   2fbe4:	ldp	x21, x22, [sp, #32]
   2fbe8:	ldr	x23, [sp, #48]
   2fbec:	ldp	x29, x30, [sp], #64
   2fbf0:	ret
   2fbf4:	mov	x2, x4
   2fbf8:	mov	x1, x19
   2fbfc:	mov	x0, x21
   2fc00:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fc04:	b	2fbd0 <PyInit__decimal@@Base+0x15a30>
   2fc08:	mov	x2, x22
   2fc0c:	mov	x1, x20
   2fc10:	mov	x0, x21
   2fc14:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fc18:	b	2fbd0 <PyInit__decimal@@Base+0x15a30>
   2fc1c:	ldr	x3, [x20, #8]
   2fc20:	ldr	x2, [x19, #8]
   2fc24:	mov	w0, #0x1                   	// #1
   2fc28:	cmp	x3, x2
   2fc2c:	cneg	w0, w0, lt  // lt = tstop
   2fc30:	neg	w1, w1
   2fc34:	lsl	w1, w1, #1
   2fc38:	madd	w0, w1, w0, w0
   2fc3c:	b	2fbbc <PyInit__decimal@@Base+0x15a1c>
   2fc40:	mov	x2, x22
   2fc44:	mov	x1, x19
   2fc48:	mov	x0, x21
   2fc4c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fc50:	b	2fbd0 <PyInit__decimal@@Base+0x15a30>
   2fc54:	stp	x29, x30, [sp, #-64]!
   2fc58:	mov	x29, sp
   2fc5c:	stp	x19, x20, [sp, #16]
   2fc60:	stp	x21, x22, [sp, #32]
   2fc64:	str	x23, [sp, #48]
   2fc68:	mov	x21, x0
   2fc6c:	mov	x20, x1
   2fc70:	mov	x19, x2
   2fc74:	mov	x23, x3
   2fc78:	mov	x22, x4
   2fc7c:	ldrb	w0, [x1]
   2fc80:	tbz	w0, #2, 2fc90 <PyInit__decimal@@Base+0x15af0>
   2fc84:	ldrb	w1, [x2]
   2fc88:	tst	w1, #0xc
   2fc8c:	b.eq	2fd20 <PyInit__decimal@@Base+0x15b80>  // b.none
   2fc90:	ldrb	w1, [x19]
   2fc94:	tbz	w1, #2, 2fca0 <PyInit__decimal@@Base+0x15b00>
   2fc98:	tst	w0, #0xc
   2fc9c:	b.eq	2fd34 <PyInit__decimal@@Base+0x15b94>  // b.none
   2fca0:	mov	x4, x22
   2fca4:	mov	x3, x23
   2fca8:	mov	x2, x19
   2fcac:	mov	x1, x20
   2fcb0:	mov	x0, x21
   2fcb4:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2fcb8:	cbnz	w0, 2fd0c <PyInit__decimal@@Base+0x15b6c>
   2fcbc:	mov	x1, x19
   2fcc0:	mov	x0, x20
   2fcc4:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   2fcc8:	cbnz	w0, 2fce8 <PyInit__decimal@@Base+0x15b48>
   2fccc:	ldrb	w0, [x20]
   2fcd0:	and	w1, w0, #0x1
   2fcd4:	ldrb	w0, [x19]
   2fcd8:	and	w0, w0, #0x1
   2fcdc:	cmp	w1, w0
   2fce0:	b.eq	2fd48 <PyInit__decimal@@Base+0x15ba8>  // b.none
   2fce4:	sub	w0, w0, w1
   2fce8:	tbnz	w0, #31, 2fd6c <PyInit__decimal@@Base+0x15bcc>
   2fcec:	mov	x2, x22
   2fcf0:	mov	x1, x20
   2fcf4:	mov	x0, x21
   2fcf8:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fcfc:	mov	x2, x22
   2fd00:	mov	x1, x23
   2fd04:	mov	x0, x21
   2fd08:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2fd0c:	ldp	x19, x20, [sp, #16]
   2fd10:	ldp	x21, x22, [sp, #32]
   2fd14:	ldr	x23, [sp, #48]
   2fd18:	ldp	x29, x30, [sp], #64
   2fd1c:	ret
   2fd20:	mov	x2, x4
   2fd24:	mov	x1, x19
   2fd28:	mov	x0, x21
   2fd2c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fd30:	b	2fcfc <PyInit__decimal@@Base+0x15b5c>
   2fd34:	mov	x2, x22
   2fd38:	mov	x1, x20
   2fd3c:	mov	x0, x21
   2fd40:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fd44:	b	2fcfc <PyInit__decimal@@Base+0x15b5c>
   2fd48:	ldr	x3, [x20, #8]
   2fd4c:	ldr	x2, [x19, #8]
   2fd50:	mov	w0, #0x1                   	// #1
   2fd54:	cmp	x3, x2
   2fd58:	cneg	w0, w0, lt  // lt = tstop
   2fd5c:	neg	w1, w1
   2fd60:	lsl	w1, w1, #1
   2fd64:	madd	w0, w1, w0, w0
   2fd68:	b	2fce8 <PyInit__decimal@@Base+0x15b48>
   2fd6c:	mov	x2, x22
   2fd70:	mov	x1, x19
   2fd74:	mov	x0, x21
   2fd78:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fd7c:	b	2fcfc <PyInit__decimal@@Base+0x15b5c>
   2fd80:	stp	x29, x30, [sp, #-64]!
   2fd84:	mov	x29, sp
   2fd88:	stp	x19, x20, [sp, #16]
   2fd8c:	stp	x21, x22, [sp, #32]
   2fd90:	str	x23, [sp, #48]
   2fd94:	mov	x21, x0
   2fd98:	mov	x20, x1
   2fd9c:	mov	x19, x2
   2fda0:	mov	x23, x3
   2fda4:	mov	x22, x4
   2fda8:	ldrb	w0, [x1]
   2fdac:	tbz	w0, #2, 2fdbc <PyInit__decimal@@Base+0x15c1c>
   2fdb0:	ldrb	w1, [x2]
   2fdb4:	tst	w1, #0xc
   2fdb8:	b.eq	2fe4c <PyInit__decimal@@Base+0x15cac>  // b.none
   2fdbc:	ldrb	w1, [x19]
   2fdc0:	tbz	w1, #2, 2fdcc <PyInit__decimal@@Base+0x15c2c>
   2fdc4:	tst	w0, #0xc
   2fdc8:	b.eq	2fe60 <PyInit__decimal@@Base+0x15cc0>  // b.none
   2fdcc:	mov	x4, x22
   2fdd0:	mov	x3, x23
   2fdd4:	mov	x2, x19
   2fdd8:	mov	x1, x20
   2fddc:	mov	x0, x21
   2fde0:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2fde4:	cbnz	w0, 2fe38 <PyInit__decimal@@Base+0x15c98>
   2fde8:	mov	x1, x19
   2fdec:	mov	x0, x20
   2fdf0:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   2fdf4:	cbnz	w0, 2fe14 <PyInit__decimal@@Base+0x15c74>
   2fdf8:	ldrb	w0, [x20]
   2fdfc:	and	w1, w0, #0x1
   2fe00:	ldrb	w0, [x19]
   2fe04:	and	w0, w0, #0x1
   2fe08:	cmp	w1, w0
   2fe0c:	b.eq	2fe74 <PyInit__decimal@@Base+0x15cd4>  // b.none
   2fe10:	sub	w0, w0, w1
   2fe14:	tbnz	w0, #31, 2fe98 <PyInit__decimal@@Base+0x15cf8>
   2fe18:	mov	x2, x22
   2fe1c:	mov	x1, x19
   2fe20:	mov	x0, x21
   2fe24:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fe28:	mov	x2, x22
   2fe2c:	mov	x1, x23
   2fe30:	mov	x0, x21
   2fe34:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2fe38:	ldp	x19, x20, [sp, #16]
   2fe3c:	ldp	x21, x22, [sp, #32]
   2fe40:	ldr	x23, [sp, #48]
   2fe44:	ldp	x29, x30, [sp], #64
   2fe48:	ret
   2fe4c:	mov	x2, x4
   2fe50:	mov	x1, x19
   2fe54:	mov	x0, x21
   2fe58:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fe5c:	b	2fe28 <PyInit__decimal@@Base+0x15c88>
   2fe60:	mov	x2, x22
   2fe64:	mov	x1, x20
   2fe68:	mov	x0, x21
   2fe6c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fe70:	b	2fe28 <PyInit__decimal@@Base+0x15c88>
   2fe74:	ldr	x3, [x20, #8]
   2fe78:	ldr	x2, [x19, #8]
   2fe7c:	mov	w0, #0x1                   	// #1
   2fe80:	cmp	x3, x2
   2fe84:	cneg	w0, w0, lt  // lt = tstop
   2fe88:	neg	w1, w1
   2fe8c:	lsl	w1, w1, #1
   2fe90:	madd	w0, w1, w0, w0
   2fe94:	b	2fe14 <PyInit__decimal@@Base+0x15c74>
   2fe98:	mov	x2, x22
   2fe9c:	mov	x1, x20
   2fea0:	mov	x0, x21
   2fea4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2fea8:	b	2fe28 <PyInit__decimal@@Base+0x15c88>
   2feac:	stp	x29, x30, [sp, #-64]!
   2feb0:	mov	x29, sp
   2feb4:	stp	x19, x20, [sp, #16]
   2feb8:	stp	x21, x22, [sp, #32]
   2febc:	str	x23, [sp, #48]
   2fec0:	mov	x21, x0
   2fec4:	mov	x20, x1
   2fec8:	mov	x19, x2
   2fecc:	mov	x23, x3
   2fed0:	mov	x22, x4
   2fed4:	ldrb	w0, [x1]
   2fed8:	tbz	w0, #2, 2fee8 <PyInit__decimal@@Base+0x15d48>
   2fedc:	ldrb	w1, [x2]
   2fee0:	tst	w1, #0xc
   2fee4:	b.eq	2ff78 <PyInit__decimal@@Base+0x15dd8>  // b.none
   2fee8:	ldrb	w1, [x19]
   2feec:	tbz	w1, #2, 2fef8 <PyInit__decimal@@Base+0x15d58>
   2fef0:	tst	w0, #0xc
   2fef4:	b.eq	2ff8c <PyInit__decimal@@Base+0x15dec>  // b.none
   2fef8:	mov	x4, x22
   2fefc:	mov	x3, x23
   2ff00:	mov	x2, x19
   2ff04:	mov	x1, x20
   2ff08:	mov	x0, x21
   2ff0c:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   2ff10:	cbnz	w0, 2ff64 <PyInit__decimal@@Base+0x15dc4>
   2ff14:	mov	x1, x19
   2ff18:	mov	x0, x20
   2ff1c:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   2ff20:	cbnz	w0, 2ff40 <PyInit__decimal@@Base+0x15da0>
   2ff24:	ldrb	w0, [x20]
   2ff28:	and	w1, w0, #0x1
   2ff2c:	ldrb	w0, [x19]
   2ff30:	and	w0, w0, #0x1
   2ff34:	cmp	w1, w0
   2ff38:	b.eq	2ffa0 <PyInit__decimal@@Base+0x15e00>  // b.none
   2ff3c:	sub	w0, w0, w1
   2ff40:	tbnz	w0, #31, 2ffc4 <PyInit__decimal@@Base+0x15e24>
   2ff44:	mov	x2, x22
   2ff48:	mov	x1, x19
   2ff4c:	mov	x0, x21
   2ff50:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2ff54:	mov	x2, x22
   2ff58:	mov	x1, x23
   2ff5c:	mov	x0, x21
   2ff60:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   2ff64:	ldp	x19, x20, [sp, #16]
   2ff68:	ldp	x21, x22, [sp, #32]
   2ff6c:	ldr	x23, [sp, #48]
   2ff70:	ldp	x29, x30, [sp], #64
   2ff74:	ret
   2ff78:	mov	x2, x4
   2ff7c:	mov	x1, x19
   2ff80:	mov	x0, x21
   2ff84:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2ff88:	b	2ff54 <PyInit__decimal@@Base+0x15db4>
   2ff8c:	mov	x2, x22
   2ff90:	mov	x1, x20
   2ff94:	mov	x0, x21
   2ff98:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2ff9c:	b	2ff54 <PyInit__decimal@@Base+0x15db4>
   2ffa0:	ldr	x3, [x20, #8]
   2ffa4:	ldr	x2, [x19, #8]
   2ffa8:	mov	w0, #0x1                   	// #1
   2ffac:	cmp	x3, x2
   2ffb0:	cneg	w0, w0, lt  // lt = tstop
   2ffb4:	neg	w1, w1
   2ffb8:	lsl	w1, w1, #1
   2ffbc:	madd	w0, w1, w0, w0
   2ffc0:	b	2ff40 <PyInit__decimal@@Base+0x15da0>
   2ffc4:	mov	x2, x22
   2ffc8:	mov	x1, x20
   2ffcc:	mov	x0, x21
   2ffd0:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   2ffd4:	b	2ff54 <PyInit__decimal@@Base+0x15db4>
   2ffd8:	stp	x29, x30, [sp, #-48]!
   2ffdc:	mov	x29, sp
   2ffe0:	stp	x19, x20, [sp, #16]
   2ffe4:	str	x21, [sp, #32]
   2ffe8:	mov	x19, x0
   2ffec:	mov	x20, x3
   2fff0:	mov	x21, x4
   2fff4:	bl	29384 <PyInit__decimal@@Base+0xf1e4>
   2fff8:	mov	x2, x21
   2fffc:	mov	x1, x20
   30000:	mov	x0, x19
   30004:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   30008:	ldp	x19, x20, [sp, #16]
   3000c:	ldr	x21, [sp, #32]
   30010:	ldp	x29, x30, [sp], #48
   30014:	ret
   30018:	stp	x29, x30, [sp, #-48]!
   3001c:	mov	x29, sp
   30020:	stp	x19, x20, [sp, #16]
   30024:	mov	x20, x0
   30028:	mov	x19, x4
   3002c:	str	wzr, [sp, #44]
   30030:	add	x4, sp, #0x2c
   30034:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30038:	ldr	w0, [sp, #44]
   3003c:	ldr	w1, [x19]
   30040:	orr	w1, w1, w0
   30044:	str	w1, [x19]
   30048:	mov	w1, #0x1041                	// #4161
   3004c:	tst	w0, w1
   30050:	b.ne	30060 <PyInit__decimal@@Base+0x15ec0>  // b.any
   30054:	ldp	x19, x20, [sp, #16]
   30058:	ldp	x29, x30, [sp], #48
   3005c:	ret
   30060:	mov	x2, x19
   30064:	mov	w1, #0x100                 	// #256
   30068:	mov	x0, x20
   3006c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   30070:	b	30054 <PyInit__decimal@@Base+0x15eb4>
   30074:	sub	sp, sp, #0x7c0
   30078:	stp	x29, x30, [sp]
   3007c:	mov	x29, sp
   30080:	stp	x19, x20, [sp, #16]
   30084:	stp	x21, x22, [sp, #32]
   30088:	stp	x23, x24, [sp, #48]
   3008c:	stp	x27, x28, [sp, #80]
   30090:	mov	x20, x0
   30094:	str	x2, [sp, #104]
   30098:	mov	x21, x3
   3009c:	ldrb	w0, [x1]
   300a0:	str	w0, [sp, #116]
   300a4:	ldr	x0, [x1, #8]
   300a8:	str	x0, [sp, #120]
   300ac:	ldr	x28, [x1, #16]
   300b0:	str	x28, [sp, #1856]
   300b4:	ldr	x3, [x1, #24]
   300b8:	str	x3, [sp, #1864]
   300bc:	ldr	x0, [x1, #32]
   300c0:	str	x0, [sp, #1872]
   300c4:	ldr	x2, [x1, #40]
   300c8:	str	x2, [sp, #1880]
   300cc:	mov	w1, #0x30                  	// #48
   300d0:	strb	w1, [sp, #1280]
   300d4:	str	xzr, [sp, #1288]
   300d8:	str	xzr, [sp, #1296]
   300dc:	str	xzr, [sp, #1304]
   300e0:	mov	x0, #0x40                  	// #64
   300e4:	str	x0, [sp, #1312]
   300e8:	add	x4, sp, #0x530
   300ec:	str	x4, [sp, #1320]
   300f0:	strb	w1, [sp, #720]
   300f4:	str	xzr, [sp, #728]
   300f8:	str	xzr, [sp, #736]
   300fc:	str	xzr, [sp, #744]
   30100:	str	x0, [sp, #752]
   30104:	add	x0, sp, #0x300
   30108:	str	x0, [sp, #760]
   3010c:	mov	x0, #0x2                   	// #2
   30110:	str	x0, [sp, #712]
   30114:	mov	w0, #0xffffff90            	// #-112
   30118:	strb	w0, [sp, #664]
   3011c:	str	xzr, [sp, #672]
   30120:	mov	x0, #0x1                   	// #1
   30124:	str	x0, [sp, #680]
   30128:	str	x0, [sp, #688]
   3012c:	str	x0, [sp, #696]
   30130:	add	x0, sp, #0x2c8
   30134:	str	x0, [sp, #704]
   30138:	mov	w0, #0x50                  	// #80
   3013c:	strb	w0, [sp, #1840]
   30140:	neg	x0, x28
   30144:	str	x0, [sp, #1848]
   30148:	str	xzr, [sp, #136]
   3014c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30150:	ldr	x19, [x0, #3648]
   30154:	str	x19, [sp, #144]
   30158:	mov	x0, #0x435f                	// #17247
   3015c:	movk	x0, #0xd79, lsl #16
   30160:	movk	x0, #0x35e5, lsl #32
   30164:	movk	x0, #0xd794, lsl #48
   30168:	umulh	x0, x28, x0
   3016c:	lsr	x0, x0, #4
   30170:	add	x1, x0, x0, lsl #2
   30174:	lsl	x1, x1, #2
   30178:	sub	x0, x1, x0
   3017c:	subs	x0, x28, x0
   30180:	b.ne	30784 <PyInit__decimal@@Base+0x165e4>  // b.any
   30184:	add	x2, x2, x3, lsl #3
   30188:	ldur	x1, [x2, #-8]
   3018c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30190:	ldr	x0, [x0, #3512]
   30194:	udiv	x1, x1, x0
   30198:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3019c:	ldr	x22, [x0, #3584]
   301a0:	cmp	x22, x1
   301a4:	b.ls	303dc <PyInit__decimal@@Base+0x1623c>  // b.plast
   301a8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   301ac:	ldr	x0, [x0, #3544]
   301b0:	cmp	x0, x1
   301b4:	b.ls	30388 <PyInit__decimal@@Base+0x161e8>  // b.plast
   301b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   301bc:	ldr	x0, [x0, #3528]
   301c0:	cmp	x0, x1
   301c4:	b.ls	30370 <PyInit__decimal@@Base+0x161d0>  // b.plast
   301c8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   301cc:	ldr	x0, [x0, #3520]
   301d0:	cmp	x0, x1
   301d4:	cset	w0, ls  // ls = plast
   301d8:	add	w0, w0, #0x1
   301dc:	mov	w2, #0x13                  	// #19
   301e0:	sub	w2, w2, w0
   301e4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   301e8:	add	x0, x0, #0xdb8
   301ec:	ldr	x23, [x0, w2, sxtw #3]
   301f0:	mul	x23, x1, x23
   301f4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   301f8:	ldr	x1, [x0, #1672]
   301fc:	cmp	x1, #0x2
   30200:	mov	x0, #0x2                   	// #2
   30204:	csel	x1, x1, x0, ge  // ge = tcont
   30208:	ldr	x0, [x20, #32]
   3020c:	cmp	x1, x0
   30210:	b.eq	30224 <PyInit__decimal@@Base+0x16084>  // b.none
   30214:	ldrb	w2, [x20]
   30218:	tbz	w2, #5, 304b0 <PyInit__decimal@@Base+0x16310>
   3021c:	cmp	x1, x0
   30220:	b.gt	304a0 <PyInit__decimal@@Base+0x16300>
   30224:	mov	x3, x23
   30228:	mov	x2, #0x2                   	// #2
   3022c:	add	x1, sp, #0x88
   30230:	ldr	x0, [x20, #40]
   30234:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   30238:	ldrb	w0, [x20]
   3023c:	and	w0, w0, #0xfffffff0
   30240:	strb	w0, [x20]
   30244:	mov	x0, #0xffffffffffffffef    	// #-17
   30248:	str	x0, [x20, #8]
   3024c:	ldr	x1, [x20, #40]
   30250:	ldr	x0, [x1, #8]
   30254:	cmp	x0, #0x0
   30258:	cset	x0, ne  // ne = any
   3025c:	add	x0, x0, #0x1
   30260:	str	x0, [x20, #24]
   30264:	add	x1, x1, x0, lsl #3
   30268:	ldur	x1, [x1, #-8]
   3026c:	cmp	x22, x1
   30270:	b.ls	3052c <PyInit__decimal@@Base+0x1638c>  // b.plast
   30274:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30278:	ldr	x2, [x2, #3544]
   3027c:	cmp	x1, x2
   30280:	b.cs	304d8 <PyInit__decimal@@Base+0x16338>  // b.hs, b.nlast
   30284:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30288:	ldr	x2, [x2, #3528]
   3028c:	cmp	x1, x2
   30290:	b.cs	304c0 <PyInit__decimal@@Base+0x16320>  // b.hs, b.nlast
   30294:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30298:	ldr	x2, [x2, #3520]
   3029c:	cmp	x1, x2
   302a0:	cset	w2, cs  // cs = hs, nlast
   302a4:	add	w2, w2, #0x1
   302a8:	sub	x0, x0, #0x1
   302ac:	add	x1, x0, x0, lsl #2
   302b0:	lsl	x1, x1, #2
   302b4:	sub	x0, x1, x0
   302b8:	add	x0, x0, w2, sxtw
   302bc:	str	x0, [x20, #16]
   302c0:	add	x0, sp, #0x790
   302c4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   302c8:	add	x0, sp, #0x760
   302cc:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   302d0:	mov	w0, #0x8                   	// #8
   302d4:	str	w0, [sp, #1924]
   302d8:	str	w0, [sp, #1972]
   302dc:	mov	x0, #0x63                  	// #99
   302e0:	movk	x0, #0xa764, lsl #16
   302e4:	movk	x0, #0xb6b3, lsl #32
   302e8:	movk	x0, #0xde0, lsl #48
   302ec:	str	x0, [sp, #1896]
   302f0:	str	x0, [sp, #1944]
   302f4:	mov	x1, #0xff9d                	// #65437
   302f8:	movk	x1, #0x589b, lsl #16
   302fc:	movk	x1, #0x494c, lsl #32
   30300:	movk	x1, #0xf21f, lsl #48
   30304:	str	x1, [sp, #1904]
   30308:	str	x1, [sp, #1952]
   3030c:	str	x0, [sp, #1888]
   30310:	ldr	x0, [sp, #104]
   30314:	ldr	x0, [x0]
   30318:	add	x0, x0, #0x2
   3031c:	cmp	x0, #0x10
   30320:	b.le	306bc <PyInit__decimal@@Base+0x1651c>
   30324:	mov	w2, #0x0                   	// #0
   30328:	add	x3, sp, #0x98
   3032c:	add	x1, x0, #0x1
   30330:	add	x0, x1, x1, lsr #63
   30334:	asr	x0, x0, #1
   30338:	mov	w19, w2
   3033c:	add	w2, w2, #0x1
   30340:	add	x22, x3, w19, sxtw #3
   30344:	str	x0, [x3, w19, sxtw #3]
   30348:	cmp	x1, #0x21
   3034c:	b.gt	3032c <PyInit__decimal@@Base+0x1618c>
   30350:	tbnz	w19, #31, 306bc <PyInit__decimal@@Base+0x1651c>
   30354:	stp	x25, x26, [sp, #64]
   30358:	add	x25, sp, #0x760
   3035c:	add	x23, sp, #0x500
   30360:	add	x27, sp, #0x790
   30364:	add	x26, sp, #0x730
   30368:	add	x24, sp, #0x2d0
   3036c:	b	30648 <PyInit__decimal@@Base+0x164a8>
   30370:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30374:	ldr	x0, [x0, #3536]
   30378:	cmp	x0, x1
   3037c:	cset	w0, ls  // ls = plast
   30380:	add	w0, w0, #0x3
   30384:	b	301dc <PyInit__decimal@@Base+0x1603c>
   30388:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3038c:	ldr	x0, [x0, #3560]
   30390:	cmp	x0, x1
   30394:	b.hi	303c4 <PyInit__decimal@@Base+0x16224>  // b.pmore
   30398:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3039c:	ldr	x2, [x0, #3576]
   303a0:	mov	w0, #0x9                   	// #9
   303a4:	cmp	x2, x1
   303a8:	b.ls	301dc <PyInit__decimal@@Base+0x1603c>  // b.plast
   303ac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   303b0:	ldr	x0, [x0, #3568]
   303b4:	cmp	x0, x1
   303b8:	cset	w0, ls  // ls = plast
   303bc:	add	w0, w0, #0x7
   303c0:	b	301dc <PyInit__decimal@@Base+0x1603c>
   303c4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   303c8:	ldr	x0, [x0, #3552]
   303cc:	cmp	x0, x1
   303d0:	cset	w0, ls  // ls = plast
   303d4:	add	w0, w0, #0x5
   303d8:	b	301dc <PyInit__decimal@@Base+0x1603c>
   303dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   303e0:	ldr	x0, [x0, #3624]
   303e4:	cmp	x0, x1
   303e8:	b.ls	30440 <PyInit__decimal@@Base+0x162a0>  // b.plast
   303ec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   303f0:	ldr	x0, [x0, #3600]
   303f4:	cmp	x0, x1
   303f8:	b.hi	30428 <PyInit__decimal@@Base+0x16288>  // b.pmore
   303fc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30400:	ldr	x2, [x0, #3616]
   30404:	mov	w0, #0xe                   	// #14
   30408:	cmp	x2, x1
   3040c:	b.ls	301dc <PyInit__decimal@@Base+0x1603c>  // b.plast
   30410:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30414:	ldr	x0, [x0, #3608]
   30418:	cmp	x0, x1
   3041c:	cset	w0, ls  // ls = plast
   30420:	add	w0, w0, #0xc
   30424:	b	301dc <PyInit__decimal@@Base+0x1603c>
   30428:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3042c:	ldr	x0, [x0, #3592]
   30430:	cmp	x0, x1
   30434:	cset	w0, ls  // ls = plast
   30438:	add	w0, w0, #0xa
   3043c:	b	301dc <PyInit__decimal@@Base+0x1603c>
   30440:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30444:	ldr	x0, [x0, #3656]
   30448:	cmp	x0, x1
   3044c:	b.ls	30488 <PyInit__decimal@@Base+0x162e8>  // b.plast
   30450:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30454:	ldr	x0, [x0, #3640]
   30458:	cmp	x0, x1
   3045c:	b.ls	30478 <PyInit__decimal@@Base+0x162d8>  // b.plast
   30460:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30464:	ldr	x0, [x0, #3632]
   30468:	cmp	x0, x1
   3046c:	cset	w0, ls  // ls = plast
   30470:	add	w0, w0, #0xf
   30474:	b	301dc <PyInit__decimal@@Base+0x1603c>
   30478:	cmp	x19, x1
   3047c:	cset	w0, ls  // ls = plast
   30480:	add	w0, w0, #0x11
   30484:	b	301dc <PyInit__decimal@@Base+0x1603c>
   30488:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3048c:	ldr	x0, [x0, #3664]
   30490:	cmp	x0, x1
   30494:	cset	w0, ls  // ls = plast
   30498:	add	w0, w0, #0x13
   3049c:	b	301dc <PyInit__decimal@@Base+0x1603c>
   304a0:	mov	x2, x21
   304a4:	mov	x0, x20
   304a8:	bl	25338 <PyInit__decimal@@Base+0xb198>
   304ac:	b	30224 <PyInit__decimal@@Base+0x16084>
   304b0:	mov	x2, x21
   304b4:	mov	x0, x20
   304b8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   304bc:	b	30224 <PyInit__decimal@@Base+0x16084>
   304c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   304c4:	ldr	x2, [x2, #3536]
   304c8:	cmp	x1, x2
   304cc:	cset	w2, cs  // cs = hs, nlast
   304d0:	add	w2, w2, #0x3
   304d4:	b	302a8 <PyInit__decimal@@Base+0x16108>
   304d8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   304dc:	ldr	x2, [x2, #3560]
   304e0:	cmp	x1, x2
   304e4:	b.cc	30514 <PyInit__decimal@@Base+0x16374>  // b.lo, b.ul, b.last
   304e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   304ec:	ldr	x3, [x2, #3576]
   304f0:	mov	w2, #0x9                   	// #9
   304f4:	cmp	x1, x3
   304f8:	b.cs	302a8 <PyInit__decimal@@Base+0x16108>  // b.hs, b.nlast
   304fc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30500:	ldr	x2, [x2, #3568]
   30504:	cmp	x1, x2
   30508:	cset	w2, cs  // cs = hs, nlast
   3050c:	add	w2, w2, #0x7
   30510:	b	302a8 <PyInit__decimal@@Base+0x16108>
   30514:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30518:	ldr	x2, [x2, #3552]
   3051c:	cmp	x1, x2
   30520:	cset	w2, cs  // cs = hs, nlast
   30524:	add	w2, w2, #0x5
   30528:	b	302a8 <PyInit__decimal@@Base+0x16108>
   3052c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30530:	ldr	x2, [x2, #3624]
   30534:	cmp	x1, x2
   30538:	b.cs	30590 <PyInit__decimal@@Base+0x163f0>  // b.hs, b.nlast
   3053c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30540:	ldr	x2, [x2, #3600]
   30544:	cmp	x1, x2
   30548:	b.cc	30578 <PyInit__decimal@@Base+0x163d8>  // b.lo, b.ul, b.last
   3054c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30550:	ldr	x3, [x2, #3616]
   30554:	mov	w2, #0xe                   	// #14
   30558:	cmp	x1, x3
   3055c:	b.cs	302a8 <PyInit__decimal@@Base+0x16108>  // b.hs, b.nlast
   30560:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30564:	ldr	x2, [x2, #3608]
   30568:	cmp	x1, x2
   3056c:	cset	w2, cs  // cs = hs, nlast
   30570:	add	w2, w2, #0xc
   30574:	b	302a8 <PyInit__decimal@@Base+0x16108>
   30578:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3057c:	ldr	x2, [x2, #3592]
   30580:	cmp	x1, x2
   30584:	cset	w2, cs  // cs = hs, nlast
   30588:	add	w2, w2, #0xa
   3058c:	b	302a8 <PyInit__decimal@@Base+0x16108>
   30590:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   30594:	ldr	x2, [x2, #3656]
   30598:	cmp	x1, x2
   3059c:	b.cs	305d8 <PyInit__decimal@@Base+0x16438>  // b.hs, b.nlast
   305a0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   305a4:	ldr	x2, [x2, #3640]
   305a8:	cmp	x1, x2
   305ac:	b.cs	305c8 <PyInit__decimal@@Base+0x16428>  // b.hs, b.nlast
   305b0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   305b4:	ldr	x2, [x2, #3632]
   305b8:	cmp	x1, x2
   305bc:	cset	w2, cs  // cs = hs, nlast
   305c0:	add	w2, w2, #0xf
   305c4:	b	302a8 <PyInit__decimal@@Base+0x16108>
   305c8:	cmp	x19, x1
   305cc:	cset	w2, ls  // ls = plast
   305d0:	add	w2, w2, #0x11
   305d4:	b	302a8 <PyInit__decimal@@Base+0x16108>
   305d8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   305dc:	ldr	x2, [x2, #3664]
   305e0:	cmp	x1, x2
   305e4:	cset	w2, cs  // cs = hs, nlast
   305e8:	add	w2, w2, #0x13
   305ec:	b	302a8 <PyInit__decimal@@Base+0x16108>
   305f0:	mov	x4, x21
   305f4:	mov	x3, x27
   305f8:	mov	x2, x23
   305fc:	mov	x1, x26
   30600:	mov	x0, x24
   30604:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30608:	mov	x4, x21
   3060c:	mov	x3, x25
   30610:	add	x2, sp, #0x298
   30614:	mov	x1, x20
   30618:	mov	x0, x23
   3061c:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   30620:	mov	x4, x21
   30624:	mov	x3, x25
   30628:	mov	x2, x24
   3062c:	mov	x1, x23
   30630:	mov	x0, x20
   30634:	bl	2f134 <PyInit__decimal@@Base+0x14f94>
   30638:	sub	w19, w19, #0x1
   3063c:	sub	x22, x22, #0x8
   30640:	cmn	w19, #0x1
   30644:	b.eq	306b8 <PyInit__decimal@@Base+0x16518>  // b.none
   30648:	mov	x4, x21
   3064c:	mov	x3, x25
   30650:	mov	x2, x20
   30654:	mov	x1, x20
   30658:	mov	x0, x23
   3065c:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   30660:	ldr	x0, [x22]
   30664:	lsl	x0, x0, #1
   30668:	add	x0, x0, #0x5
   3066c:	str	x0, [sp, #1936]
   30670:	ldr	x2, [sp, #1856]
   30674:	cmp	x0, x2
   30678:	b.ge	305f0 <PyInit__decimal@@Base+0x16450>  // b.tcont
   3067c:	mov	x3, x21
   30680:	sub	x2, x2, x0
   30684:	mov	x1, x26
   30688:	mov	x0, x24
   3068c:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   30690:	ldr	x0, [sp, #1936]
   30694:	neg	x0, x0
   30698:	str	x0, [sp, #728]
   3069c:	mov	x4, x21
   306a0:	mov	x3, x27
   306a4:	mov	x2, x23
   306a8:	mov	x1, x24
   306ac:	mov	x0, x24
   306b0:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   306b4:	b	30608 <PyInit__decimal@@Base+0x16468>
   306b8:	ldp	x25, x26, [sp, #64]
   306bc:	ldrb	w0, [x20]
   306c0:	tst	w0, #0xe
   306c4:	b.ne	306f0 <PyInit__decimal@@Base+0x16550>  // b.any
   306c8:	ldr	x1, [sp, #120]
   306cc:	add	x28, x1, x28
   306d0:	ldr	x1, [x20, #8]
   306d4:	sub	x28, x1, x28
   306d8:	str	x28, [x20, #8]
   306dc:	ldr	w1, [sp, #116]
   306e0:	and	w1, w1, #0x1
   306e4:	and	w0, w0, #0xfffffff0
   306e8:	orr	w0, w1, w0
   306ec:	strb	w0, [x20]
   306f0:	ldrb	w0, [sp, #1280]
   306f4:	tst	w0, #0xe0
   306f8:	b.ne	3070c <PyInit__decimal@@Base+0x1656c>  // b.any
   306fc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30700:	ldr	x1, [x0, #1704]
   30704:	ldr	x0, [sp, #1320]
   30708:	blr	x1
   3070c:	ldrb	w0, [sp, #1280]
   30710:	tbnz	w0, #4, 30724 <PyInit__decimal@@Base+0x16584>
   30714:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30718:	ldr	x1, [x0, #1704]
   3071c:	add	x0, sp, #0x500
   30720:	blr	x1
   30724:	ldrb	w0, [sp, #720]
   30728:	tst	w0, #0xe0
   3072c:	b.ne	30740 <PyInit__decimal@@Base+0x165a0>  // b.any
   30730:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30734:	ldr	x1, [x0, #1704]
   30738:	ldr	x0, [sp, #760]
   3073c:	blr	x1
   30740:	ldrb	w0, [sp, #720]
   30744:	tbnz	w0, #4, 30758 <PyInit__decimal@@Base+0x165b8>
   30748:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3074c:	ldr	x1, [x0, #1704]
   30750:	add	x0, sp, #0x2d0
   30754:	blr	x1
   30758:	mov	x2, x21
   3075c:	ldr	x1, [sp, #104]
   30760:	mov	x0, x20
   30764:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   30768:	ldp	x19, x20, [sp, #16]
   3076c:	ldp	x21, x22, [sp, #32]
   30770:	ldp	x23, x24, [sp, #48]
   30774:	ldp	x27, x28, [sp, #80]
   30778:	ldp	x29, x30, [sp]
   3077c:	add	sp, sp, #0x7c0
   30780:	ret
   30784:	lsl	x4, x3, #3
   30788:	add	x1, x2, x4
   3078c:	ldur	x1, [x1, #-8]
   30790:	cmp	x3, #0x1
   30794:	b.le	30198 <PyInit__decimal@@Base+0x15ff8>
   30798:	add	x2, x2, x4
   3079c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   307a0:	add	x3, x3, #0xdb8
   307a4:	ldur	x2, [x2, #-16]
   307a8:	ldr	x4, [x3, x0, lsl #3]
   307ac:	udiv	x2, x2, x4
   307b0:	mov	x4, #0x13                  	// #19
   307b4:	sub	x0, x4, x0
   307b8:	ldr	x0, [x3, x0, lsl #3]
   307bc:	madd	x1, x0, x1, x2
   307c0:	b	30198 <PyInit__decimal@@Base+0x15ff8>
   307c4:	sub	sp, sp, #0x7f0
   307c8:	stp	x29, x30, [sp]
   307cc:	mov	x29, sp
   307d0:	stp	x19, x20, [sp, #16]
   307d4:	stp	x21, x22, [sp, #32]
   307d8:	stp	x25, x26, [sp, #64]
   307dc:	mov	x19, x0
   307e0:	mov	x20, x1
   307e4:	mov	x21, x2
   307e8:	str	x3, [sp, #104]
   307ec:	str	wzr, [sp, #2028]
   307f0:	ldrb	w0, [x1]
   307f4:	and	w0, w0, #0xf
   307f8:	mov	w1, #0x50                  	// #80
   307fc:	orr	w0, w0, w1
   30800:	strb	w0, [sp, #1880]
   30804:	ldr	x0, [x20, #8]
   30808:	str	x0, [sp, #1888]
   3080c:	ldr	x1, [x20, #16]
   30810:	str	x1, [sp, #1896]
   30814:	ldr	x1, [x20, #24]
   30818:	str	x1, [sp, #1904]
   3081c:	ldr	x1, [x20, #32]
   30820:	str	x1, [sp, #1912]
   30824:	ldr	x1, [x20, #40]
   30828:	str	x1, [sp, #1920]
   3082c:	mov	w2, #0x30                  	// #48
   30830:	strb	w2, [sp, #1320]
   30834:	str	xzr, [sp, #1328]
   30838:	str	xzr, [sp, #1336]
   3083c:	str	xzr, [sp, #1344]
   30840:	mov	x1, #0x40                  	// #64
   30844:	str	x1, [sp, #1352]
   30848:	add	x3, sp, #0x558
   3084c:	str	x3, [sp, #1360]
   30850:	strb	w2, [sp, #760]
   30854:	str	xzr, [sp, #768]
   30858:	str	xzr, [sp, #776]
   3085c:	str	xzr, [sp, #784]
   30860:	str	x1, [sp, #792]
   30864:	add	x1, sp, #0x328
   30868:	str	x1, [sp, #800]
   3086c:	mov	x1, #0x5                   	// #5
   30870:	str	x1, [sp, #752]
   30874:	mov	w2, #0xffffff90            	// #-112
   30878:	strb	w2, [sp, #704]
   3087c:	mov	x1, #0xffffffffffffffff    	// #-1
   30880:	str	x1, [sp, #712]
   30884:	mov	x1, #0x1                   	// #1
   30888:	str	x1, [sp, #720]
   3088c:	str	x1, [sp, #728]
   30890:	str	x1, [sp, #736]
   30894:	add	x3, sp, #0x2f0
   30898:	str	x3, [sp, #744]
   3089c:	mov	x3, #0x3                   	// #3
   308a0:	str	x3, [sp, #696]
   308a4:	strb	w2, [sp, #648]
   308a8:	str	xzr, [sp, #656]
   308ac:	str	x1, [sp, #664]
   308b0:	str	x1, [sp, #672]
   308b4:	str	x1, [sp, #680]
   308b8:	add	x1, sp, #0x2b8
   308bc:	str	x1, [sp, #688]
   308c0:	and	x0, x0, #0xfffffffffffffffe
   308c4:	neg	x0, x0
   308c8:	add	x0, x0, x0, lsr #63
   308cc:	asr	x0, x0, #1
   308d0:	str	x0, [sp, #112]
   308d4:	add	x25, sp, #0x758
   308d8:	cmp	x19, x20
   308dc:	b.eq	309b8 <PyInit__decimal@@Base+0x16818>  // b.none
   308e0:	stp	x23, x24, [sp, #48]
   308e4:	stp	x27, x28, [sp, #80]
   308e8:	ldr	x1, [x25, #16]
   308ec:	ldr	x0, [x25, #8]
   308f0:	add	x0, x1, x0
   308f4:	tbz	w0, #0, 30a14 <PyInit__decimal@@Base+0x16874>
   308f8:	mov	x0, #0x1                   	// #1
   308fc:	sub	x0, x0, x1
   30900:	str	x0, [x25, #8]
   30904:	cmp	x1, #0x7
   30908:	mov	x3, #0x7                   	// #7
   3090c:	csel	x3, x1, x3, le
   30910:	mov	x0, #0x435f                	// #17247
   30914:	movk	x0, #0xd79, lsl #16
   30918:	movk	x0, #0x35e5, lsl #32
   3091c:	movk	x0, #0xd794, lsl #48
   30920:	umulh	x0, x1, x0
   30924:	lsr	x0, x0, #4
   30928:	add	x2, x0, x0, lsl #2
   3092c:	lsl	x2, x2, #2
   30930:	sub	x0, x2, x0
   30934:	subs	x0, x1, x0
   30938:	mov	x1, #0x13                  	// #19
   3093c:	csel	x0, x0, x1, ne  // ne = any
   30940:	ldr	x1, [x25, #40]
   30944:	ldr	x5, [x25, #24]
   30948:	lsl	x6, x5, #3
   3094c:	add	x2, x1, x6
   30950:	ldur	x2, [x2, #-8]
   30954:	and	x4, x3, #0xffffffff
   30958:	cmp	x0, w3, uxtw
   3095c:	b.cc	309dc <PyInit__decimal@@Base+0x1683c>  // b.lo, b.ul, b.last
   30960:	sub	x0, x0, x4
   30964:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   30968:	add	x1, x1, #0xdb8
   3096c:	ldr	x0, [x1, x0, lsl #3]
   30970:	udiv	x2, x2, x0
   30974:	cmp	w3, #0x6
   30978:	b.gt	30994 <PyInit__decimal@@Base+0x167f4>
   3097c:	mov	w0, #0x7                   	// #7
   30980:	sub	w3, w0, w3
   30984:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30988:	add	x0, x0, #0xdb8
   3098c:	ldr	x0, [x0, w3, sxtw #3]
   30990:	mul	x2, x2, x0
   30994:	ldr	x0, [x20, #8]
   30998:	ldr	x1, [x25, #8]
   3099c:	sub	x0, x0, x1
   309a0:	add	x0, x0, x0, lsr #63
   309a4:	asr	x0, x0, #1
   309a8:	str	x0, [sp, #120]
   309ac:	mov	x3, #0x2710                	// #10000
   309b0:	mov	x4, #0x3e8                 	// #1000
   309b4:	b	30af0 <PyInit__decimal@@Base+0x16950>
   309b8:	mov	x0, x20
   309bc:	bl	2a720 <PyInit__decimal@@Base+0x10580>
   309c0:	mov	x25, x0
   309c4:	cbnz	x0, 308e0 <PyInit__decimal@@Base+0x16740>
   309c8:	ldr	x2, [sp, #104]
   309cc:	mov	w1, #0x200                 	// #512
   309d0:	mov	x0, x19
   309d4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   309d8:	b	30f84 <PyInit__decimal@@Base+0x16de4>
   309dc:	cmp	x5, #0x1
   309e0:	b.le	30974 <PyInit__decimal@@Base+0x167d4>
   309e4:	add	x1, x1, x6
   309e8:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27e60>
   309ec:	add	x5, x5, #0xdb8
   309f0:	sub	x6, x0, x4
   309f4:	add	x6, x6, #0x13
   309f8:	ldur	x1, [x1, #-16]
   309fc:	ldr	x6, [x5, x6, lsl #3]
   30a00:	udiv	x1, x1, x6
   30a04:	sub	x0, x4, x0
   30a08:	ldr	x0, [x5, x0, lsl #3]
   30a0c:	madd	x2, x0, x2, x1
   30a10:	b	30974 <PyInit__decimal@@Base+0x167d4>
   30a14:	mov	x0, #0x2                   	// #2
   30a18:	sub	x0, x0, x1
   30a1c:	str	x0, [x25, #8]
   30a20:	cmp	x1, #0x8
   30a24:	mov	x3, #0x8                   	// #8
   30a28:	csel	x3, x1, x3, le
   30a2c:	mov	x0, #0x435f                	// #17247
   30a30:	movk	x0, #0xd79, lsl #16
   30a34:	movk	x0, #0x35e5, lsl #32
   30a38:	movk	x0, #0xd794, lsl #48
   30a3c:	umulh	x0, x1, x0
   30a40:	lsr	x0, x0, #4
   30a44:	add	x2, x0, x0, lsl #2
   30a48:	lsl	x2, x2, #2
   30a4c:	sub	x0, x2, x0
   30a50:	subs	x0, x1, x0
   30a54:	mov	x1, #0x13                  	// #19
   30a58:	csel	x0, x0, x1, ne  // ne = any
   30a5c:	ldr	x1, [x25, #40]
   30a60:	ldr	x5, [x25, #24]
   30a64:	lsl	x6, x5, #3
   30a68:	add	x2, x1, x6
   30a6c:	ldur	x2, [x2, #-8]
   30a70:	and	x4, x3, #0xffffffff
   30a74:	cmp	x0, w3, uxtw
   30a78:	b.cc	30ab4 <PyInit__decimal@@Base+0x16914>  // b.lo, b.ul, b.last
   30a7c:	sub	x0, x0, x4
   30a80:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   30a84:	add	x1, x1, #0xdb8
   30a88:	ldr	x0, [x1, x0, lsl #3]
   30a8c:	udiv	x2, x2, x0
   30a90:	cmp	w3, #0x7
   30a94:	b.gt	30994 <PyInit__decimal@@Base+0x167f4>
   30a98:	mov	w0, #0x8                   	// #8
   30a9c:	sub	w3, w0, w3
   30aa0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30aa4:	add	x0, x0, #0xdb8
   30aa8:	ldr	x0, [x0, w3, sxtw #3]
   30aac:	mul	x2, x2, x0
   30ab0:	b	30994 <PyInit__decimal@@Base+0x167f4>
   30ab4:	cmp	x5, #0x1
   30ab8:	b.le	30a90 <PyInit__decimal@@Base+0x168f0>
   30abc:	add	x1, x1, x6
   30ac0:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27e60>
   30ac4:	add	x5, x5, #0xdb8
   30ac8:	sub	x6, x0, x4
   30acc:	add	x6, x6, #0x13
   30ad0:	ldur	x1, [x1, #-16]
   30ad4:	ldr	x6, [x5, x6, lsl #3]
   30ad8:	udiv	x1, x1, x6
   30adc:	sub	x0, x4, x0
   30ae0:	ldr	x0, [x5, x0, lsl #3]
   30ae4:	madd	x2, x0, x2, x1
   30ae8:	b	30a90 <PyInit__decimal@@Base+0x168f0>
   30aec:	sub	x3, x20, #0x1
   30af0:	add	x0, x4, x3
   30af4:	lsr	x20, x0, #1
   30af8:	mul	x1, x20, x20
   30afc:	cmp	x1, x2
   30b00:	b.hi	30aec <PyInit__decimal@@Base+0x1694c>  // b.pmore
   30b04:	orr	x0, x0, #0x1
   30b08:	add	x0, x0, x1
   30b0c:	cmp	x0, x2
   30b10:	b.hi	30b1c <PyInit__decimal@@Base+0x1697c>  // b.pmore
   30b14:	add	x4, x20, #0x1
   30b18:	b	30af0 <PyInit__decimal@@Base+0x16950>
   30b1c:	ldrb	w0, [x19]
   30b20:	tbnz	w0, #5, 30b38 <PyInit__decimal@@Base+0x16998>
   30b24:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30b28:	ldr	x1, [x0, #1672]
   30b2c:	ldr	x0, [x19, #32]
   30b30:	cmp	x0, x1
   30b34:	b.gt	30c2c <PyInit__decimal@@Base+0x16a8c>
   30b38:	ldrb	w0, [x19]
   30b3c:	and	w0, w0, #0xfffffff0
   30b40:	strb	w0, [x19]
   30b44:	ldr	x1, [x19, #40]
   30b48:	mov	x0, #0xca00                	// #51712
   30b4c:	movk	x0, #0x3b9a, lsl #16
   30b50:	udiv	x20, x0, x20
   30b54:	str	x20, [x1]
   30b58:	mov	x0, #0x1                   	// #1
   30b5c:	str	x0, [x19, #24]
   30b60:	mov	x0, #0xfffffffffffffffa    	// #-6
   30b64:	str	x0, [x19, #8]
   30b68:	ldr	x0, [x19, #40]
   30b6c:	ldr	x1, [x0]
   30b70:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30b74:	ldr	x0, [x0, #3584]
   30b78:	cmp	x1, x0
   30b7c:	b.cs	30cc8 <PyInit__decimal@@Base+0x16b28>  // b.hs, b.nlast
   30b80:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30b84:	ldr	x0, [x0, #3544]
   30b88:	cmp	x1, x0
   30b8c:	b.cs	30c74 <PyInit__decimal@@Base+0x16ad4>  // b.hs, b.nlast
   30b90:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30b94:	ldr	x0, [x0, #3528]
   30b98:	cmp	x1, x0
   30b9c:	b.cs	30c5c <PyInit__decimal@@Base+0x16abc>  // b.hs, b.nlast
   30ba0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30ba4:	ldr	x0, [x0, #3520]
   30ba8:	cmp	x1, x0
   30bac:	cset	w0, cs  // cs = hs, nlast
   30bb0:	add	w0, w0, #0x1
   30bb4:	sxtw	x0, w0
   30bb8:	str	x0, [x19, #16]
   30bbc:	add	x0, sp, #0x788
   30bc0:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   30bc4:	add	x0, sp, #0x7b8
   30bc8:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   30bcc:	mov	w0, #0x8                   	// #8
   30bd0:	str	w0, [sp, #2012]
   30bd4:	ldr	x0, [x21]
   30bd8:	add	x0, x0, #0x1
   30bdc:	cmp	x0, #0x3
   30be0:	b.le	30e7c <PyInit__decimal@@Base+0x16cdc>
   30be4:	mov	w2, #0x0                   	// #0
   30be8:	add	x3, sp, #0x88
   30bec:	add	x1, x0, #0x3
   30bf0:	add	x0, x1, x1, lsr #63
   30bf4:	asr	x0, x0, #1
   30bf8:	mov	w20, w2
   30bfc:	add	w2, w2, #0x1
   30c00:	add	x23, x3, w20, sxtw #3
   30c04:	str	x0, [x3, w20, sxtw #3]
   30c08:	cmp	x1, #0x7
   30c0c:	b.gt	30bec <PyInit__decimal@@Base+0x16a4c>
   30c10:	tbnz	w20, #31, 30e7c <PyInit__decimal@@Base+0x16cdc>
   30c14:	add	x21, sp, #0x7ec
   30c18:	add	x26, sp, #0x788
   30c1c:	add	x28, sp, #0x528
   30c20:	add	x27, sp, #0x7b8
   30c24:	add	x22, sp, #0x2f8
   30c28:	b	30e04 <PyInit__decimal@@Base+0x16c64>
   30c2c:	strb	wzr, [sp, #135]
   30c30:	add	x3, sp, #0x87
   30c34:	mov	x2, #0x8                   	// #8
   30c38:	ldr	x0, [x19, #40]
   30c3c:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   30c40:	str	x0, [x19, #40]
   30c44:	ldrb	w0, [sp, #135]
   30c48:	cbnz	w0, 30b38 <PyInit__decimal@@Base+0x16998>
   30c4c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30c50:	ldr	x0, [x0, #1672]
   30c54:	str	x0, [x19, #32]
   30c58:	b	30b38 <PyInit__decimal@@Base+0x16998>
   30c5c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30c60:	ldr	x0, [x0, #3536]
   30c64:	cmp	x1, x0
   30c68:	cset	w0, cs  // cs = hs, nlast
   30c6c:	add	w0, w0, #0x3
   30c70:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30c74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30c78:	ldr	x0, [x0, #3560]
   30c7c:	cmp	x1, x0
   30c80:	b.cc	30cb0 <PyInit__decimal@@Base+0x16b10>  // b.lo, b.ul, b.last
   30c84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30c88:	ldr	x2, [x0, #3576]
   30c8c:	mov	w0, #0x9                   	// #9
   30c90:	cmp	x1, x2
   30c94:	b.cs	30bb4 <PyInit__decimal@@Base+0x16a14>  // b.hs, b.nlast
   30c98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30c9c:	ldr	x0, [x0, #3568]
   30ca0:	cmp	x1, x0
   30ca4:	cset	w0, cs  // cs = hs, nlast
   30ca8:	add	w0, w0, #0x7
   30cac:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30cb0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30cb4:	ldr	x0, [x0, #3552]
   30cb8:	cmp	x1, x0
   30cbc:	cset	w0, cs  // cs = hs, nlast
   30cc0:	add	w0, w0, #0x5
   30cc4:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30cc8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30ccc:	ldr	x0, [x0, #3624]
   30cd0:	cmp	x1, x0
   30cd4:	b.cs	30d2c <PyInit__decimal@@Base+0x16b8c>  // b.hs, b.nlast
   30cd8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30cdc:	ldr	x0, [x0, #3600]
   30ce0:	cmp	x1, x0
   30ce4:	b.cc	30d14 <PyInit__decimal@@Base+0x16b74>  // b.lo, b.ul, b.last
   30ce8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30cec:	ldr	x2, [x0, #3616]
   30cf0:	mov	w0, #0xe                   	// #14
   30cf4:	cmp	x1, x2
   30cf8:	b.cs	30bb4 <PyInit__decimal@@Base+0x16a14>  // b.hs, b.nlast
   30cfc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d00:	ldr	x0, [x0, #3608]
   30d04:	cmp	x1, x0
   30d08:	cset	w0, cs  // cs = hs, nlast
   30d0c:	add	w0, w0, #0xc
   30d10:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30d14:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d18:	ldr	x0, [x0, #3592]
   30d1c:	cmp	x1, x0
   30d20:	cset	w0, cs  // cs = hs, nlast
   30d24:	add	w0, w0, #0xa
   30d28:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30d2c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d30:	ldr	x0, [x0, #3656]
   30d34:	cmp	x1, x0
   30d38:	b.cs	30d7c <PyInit__decimal@@Base+0x16bdc>  // b.hs, b.nlast
   30d3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d40:	ldr	x0, [x0, #3640]
   30d44:	cmp	x1, x0
   30d48:	b.cs	30d64 <PyInit__decimal@@Base+0x16bc4>  // b.hs, b.nlast
   30d4c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d50:	ldr	x0, [x0, #3632]
   30d54:	cmp	x1, x0
   30d58:	cset	w0, cs  // cs = hs, nlast
   30d5c:	add	w0, w0, #0xf
   30d60:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30d64:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d68:	ldr	x0, [x0, #3648]
   30d6c:	cmp	x1, x0
   30d70:	cset	w0, cs  // cs = hs, nlast
   30d74:	add	w0, w0, #0x11
   30d78:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30d7c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   30d80:	ldr	x0, [x0, #3664]
   30d84:	cmp	x1, x0
   30d88:	cset	w0, cs  // cs = hs, nlast
   30d8c:	add	w0, w0, #0x13
   30d90:	b	30bb4 <PyInit__decimal@@Base+0x16a14>
   30d94:	mov	x4, x21
   30d98:	mov	x3, x27
   30d9c:	mov	x2, x28
   30da0:	mov	x1, x25
   30da4:	mov	x0, x22
   30da8:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30dac:	mov	x4, x21
   30db0:	mov	x3, x26
   30db4:	mov	x2, x22
   30db8:	add	x1, sp, #0x288
   30dbc:	mov	x0, x22
   30dc0:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   30dc4:	mov	x4, x21
   30dc8:	mov	x3, x27
   30dcc:	mov	x2, x22
   30dd0:	mov	x1, x19
   30dd4:	mov	x0, x19
   30dd8:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30ddc:	mov	x4, x21
   30de0:	mov	x3, x26
   30de4:	add	x2, sp, #0x2c0
   30de8:	mov	x1, x19
   30dec:	mov	x0, x19
   30df0:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30df4:	sub	w20, w20, #0x1
   30df8:	sub	x23, x23, #0x8
   30dfc:	cmn	w20, #0x1
   30e00:	b.eq	30e7c <PyInit__decimal@@Base+0x16cdc>  // b.none
   30e04:	ldr	x0, [x23]
   30e08:	add	x0, x0, #0x1
   30e0c:	lsl	x0, x0, #1
   30e10:	str	x0, [sp, #1976]
   30e14:	mov	x4, x21
   30e18:	mov	x3, x26
   30e1c:	mov	x2, x19
   30e20:	mov	x1, x19
   30e24:	mov	x0, x28
   30e28:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30e2c:	ldr	x24, [x25, #16]
   30e30:	ldr	x0, [sp, #1976]
   30e34:	cmp	x24, x0
   30e38:	b.le	30d94 <PyInit__decimal@@Base+0x16bf4>
   30e3c:	sub	x24, x24, x0
   30e40:	mov	x3, x21
   30e44:	mov	x2, x24
   30e48:	mov	x1, x25
   30e4c:	mov	x0, x22
   30e50:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   30e54:	ldr	x0, [sp, #768]
   30e58:	add	x24, x0, x24
   30e5c:	str	x24, [sp, #768]
   30e60:	mov	x4, x21
   30e64:	mov	x3, x27
   30e68:	mov	x2, x28
   30e6c:	mov	x1, x22
   30e70:	mov	x0, x22
   30e74:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   30e78:	b	30dac <PyInit__decimal@@Base+0x16c0c>
   30e7c:	ldr	x20, [x19, #8]
   30e80:	ldr	x21, [sp, #120]
   30e84:	sub	x0, x20, x21
   30e88:	str	x0, [x19, #8]
   30e8c:	mov	x0, x19
   30e90:	bl	28a38 <PyInit__decimal@@Base+0xe898>
   30e94:	ldr	x1, [sp, #112]
   30e98:	sub	x20, x1, x20
   30e9c:	add	x20, x20, x21
   30ea0:	cmp	x0, x20
   30ea4:	csel	x20, x0, x20, le
   30ea8:	cmp	x20, #0x0
   30eac:	b.gt	30f9c <PyInit__decimal@@Base+0x16dfc>
   30eb0:	ldrb	w0, [sp, #1320]
   30eb4:	tst	w0, #0xe0
   30eb8:	b.ne	30ecc <PyInit__decimal@@Base+0x16d2c>  // b.any
   30ebc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30ec0:	ldr	x1, [x0, #1704]
   30ec4:	ldr	x0, [sp, #1360]
   30ec8:	blr	x1
   30ecc:	ldrb	w0, [sp, #1320]
   30ed0:	tbnz	w0, #4, 30ee4 <PyInit__decimal@@Base+0x16d44>
   30ed4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30ed8:	ldr	x1, [x0, #1704]
   30edc:	add	x0, sp, #0x528
   30ee0:	blr	x1
   30ee4:	ldrb	w0, [sp, #760]
   30ee8:	tst	w0, #0xe0
   30eec:	b.ne	30f00 <PyInit__decimal@@Base+0x16d60>  // b.any
   30ef0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30ef4:	ldr	x1, [x0, #1704]
   30ef8:	ldr	x0, [sp, #800]
   30efc:	blr	x1
   30f00:	ldrb	w0, [sp, #760]
   30f04:	tbnz	w0, #4, 30f18 <PyInit__decimal@@Base+0x16d78>
   30f08:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30f0c:	ldr	x1, [x0, #1704]
   30f10:	add	x0, sp, #0x2f8
   30f14:	blr	x1
   30f18:	add	x0, sp, #0x758
   30f1c:	cmp	x25, x0
   30f20:	b.eq	30f58 <PyInit__decimal@@Base+0x16db8>  // b.none
   30f24:	ldrb	w0, [x25]
   30f28:	tst	w0, #0xe0
   30f2c:	b.ne	30f40 <PyInit__decimal@@Base+0x16da0>  // b.any
   30f30:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30f34:	ldr	x1, [x0, #1704]
   30f38:	ldr	x0, [x25, #40]
   30f3c:	blr	x1
   30f40:	ldrb	w0, [x25]
   30f44:	tbnz	w0, #4, 30f58 <PyInit__decimal@@Base+0x16db8>
   30f48:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   30f4c:	ldr	x1, [x0, #1704]
   30f50:	mov	x0, x25
   30f54:	blr	x1
   30f58:	ldr	w0, [sp, #2028]
   30f5c:	mov	w1, #0x3be                 	// #958
   30f60:	and	w0, w0, w1
   30f64:	ldr	x2, [sp, #104]
   30f68:	ldr	w1, [x2]
   30f6c:	orr	w0, w0, w1
   30f70:	mov	w1, #0x1040                	// #4160
   30f74:	orr	w0, w0, w1
   30f78:	str	w0, [x2]
   30f7c:	ldp	x23, x24, [sp, #48]
   30f80:	ldp	x27, x28, [sp, #80]
   30f84:	ldp	x19, x20, [sp, #16]
   30f88:	ldp	x21, x22, [sp, #32]
   30f8c:	ldp	x25, x26, [sp, #64]
   30f90:	ldp	x29, x30, [sp]
   30f94:	add	sp, sp, #0x7f0
   30f98:	ret
   30f9c:	mov	x1, x20
   30fa0:	mov	x0, x19
   30fa4:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   30fa8:	ldr	x0, [x19, #8]
   30fac:	add	x0, x0, x20
   30fb0:	str	x0, [x19, #8]
   30fb4:	b	30eb0 <PyInit__decimal@@Base+0x16d10>
   30fb8:	sub	sp, sp, #0x2b0
   30fbc:	stp	x29, x30, [sp]
   30fc0:	mov	x29, sp
   30fc4:	stp	x19, x20, [sp, #16]
   30fc8:	stp	x21, x22, [sp, #32]
   30fcc:	stp	x23, x24, [sp, #48]
   30fd0:	str	x25, [sp, #64]
   30fd4:	mov	x21, x0
   30fd8:	mov	x22, x1
   30fdc:	mov	x24, x2
   30fe0:	mov	x23, x3
   30fe4:	mov	x20, x4
   30fe8:	mov	w0, #0x30                  	// #48
   30fec:	strb	w0, [sp, #80]
   30ff0:	str	xzr, [sp, #88]
   30ff4:	str	xzr, [sp, #96]
   30ff8:	str	xzr, [sp, #104]
   30ffc:	mov	x0, #0x40                  	// #64
   31000:	str	x0, [sp, #112]
   31004:	add	x0, sp, #0x80
   31008:	str	x0, [sp, #120]
   3100c:	add	x25, sp, #0x280
   31010:	mov	x0, x25
   31014:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   31018:	add	x19, sp, #0x50
   3101c:	mov	x3, x20
   31020:	mov	x2, x25
   31024:	mov	x1, x24
   31028:	mov	x0, x19
   3102c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   31030:	mov	x4, x20
   31034:	mov	x3, x23
   31038:	mov	x2, x19
   3103c:	mov	x1, x22
   31040:	mov	x0, x21
   31044:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   31048:	ldrb	w0, [sp, #80]
   3104c:	tst	w0, #0xe0
   31050:	b.ne	31064 <PyInit__decimal@@Base+0x16ec4>  // b.any
   31054:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   31058:	ldr	x1, [x0, #1704]
   3105c:	ldr	x0, [sp, #120]
   31060:	blr	x1
   31064:	ldrb	w0, [sp, #80]
   31068:	tbnz	w0, #4, 3107c <PyInit__decimal@@Base+0x16edc>
   3106c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   31070:	ldr	x1, [x0, #1704]
   31074:	add	x0, sp, #0x50
   31078:	blr	x1
   3107c:	ldp	x19, x20, [sp, #16]
   31080:	ldp	x21, x22, [sp, #32]
   31084:	ldp	x23, x24, [sp, #48]
   31088:	ldr	x25, [sp, #64]
   3108c:	ldp	x29, x30, [sp]
   31090:	add	sp, sp, #0x2b0
   31094:	ret
   31098:	sub	sp, sp, #0x2b0
   3109c:	stp	x29, x30, [sp]
   310a0:	mov	x29, sp
   310a4:	stp	x19, x20, [sp, #16]
   310a8:	stp	x21, x22, [sp, #32]
   310ac:	stp	x23, x24, [sp, #48]
   310b0:	str	x25, [sp, #64]
   310b4:	mov	x21, x0
   310b8:	mov	x22, x1
   310bc:	mov	x24, x2
   310c0:	mov	x23, x3
   310c4:	mov	x20, x4
   310c8:	mov	w0, #0x30                  	// #48
   310cc:	strb	w0, [sp, #80]
   310d0:	str	xzr, [sp, #88]
   310d4:	str	xzr, [sp, #96]
   310d8:	str	xzr, [sp, #104]
   310dc:	mov	x0, #0x40                  	// #64
   310e0:	str	x0, [sp, #112]
   310e4:	add	x0, sp, #0x80
   310e8:	str	x0, [sp, #120]
   310ec:	add	x25, sp, #0x280
   310f0:	mov	x0, x25
   310f4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   310f8:	add	x19, sp, #0x50
   310fc:	mov	x3, x20
   31100:	mov	x2, x25
   31104:	mov	x1, x24
   31108:	mov	x0, x19
   3110c:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   31110:	mov	x4, x20
   31114:	mov	x3, x23
   31118:	mov	x2, x19
   3111c:	mov	x1, x22
   31120:	mov	x0, x21
   31124:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   31128:	ldrb	w0, [sp, #80]
   3112c:	tst	w0, #0xe0
   31130:	b.ne	31144 <PyInit__decimal@@Base+0x16fa4>  // b.any
   31134:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   31138:	ldr	x1, [x0, #1704]
   3113c:	ldr	x0, [sp, #120]
   31140:	blr	x1
   31144:	ldrb	w0, [sp, #80]
   31148:	tbnz	w0, #4, 3115c <PyInit__decimal@@Base+0x16fbc>
   3114c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   31150:	ldr	x1, [x0, #1704]
   31154:	add	x0, sp, #0x50
   31158:	blr	x1
   3115c:	ldp	x19, x20, [sp, #16]
   31160:	ldp	x21, x22, [sp, #32]
   31164:	ldp	x23, x24, [sp, #48]
   31168:	ldr	x25, [sp, #64]
   3116c:	ldp	x29, x30, [sp]
   31170:	add	sp, sp, #0x2b0
   31174:	ret
   31178:	stp	x29, x30, [sp, #-16]!
   3117c:	mov	x29, sp
   31180:	sxtw	x2, w2
   31184:	bl	30fb8 <PyInit__decimal@@Base+0x16e18>
   31188:	ldp	x29, x30, [sp], #16
   3118c:	ret
   31190:	stp	x29, x30, [sp, #-16]!
   31194:	mov	x29, sp
   31198:	mov	w2, w2
   3119c:	bl	31098 <PyInit__decimal@@Base+0x16ef8>
   311a0:	ldp	x29, x30, [sp], #16
   311a4:	ret
   311a8:	stp	x29, x30, [sp, #-16]!
   311ac:	mov	x29, sp
   311b0:	bl	30fb8 <PyInit__decimal@@Base+0x16e18>
   311b4:	ldp	x29, x30, [sp], #16
   311b8:	ret
   311bc:	stp	x29, x30, [sp, #-16]!
   311c0:	mov	x29, sp
   311c4:	bl	31098 <PyInit__decimal@@Base+0x16ef8>
   311c8:	ldp	x29, x30, [sp], #16
   311cc:	ret
   311d0:	stp	x29, x30, [sp, #-48]!
   311d4:	mov	x29, sp
   311d8:	stp	x19, x20, [sp, #16]
   311dc:	stp	x21, x22, [sp, #32]
   311e0:	mov	x22, x0
   311e4:	mov	x19, x1
   311e8:	mov	x21, x2
   311ec:	mov	x20, x3
   311f0:	ldrb	w1, [x1]
   311f4:	tst	w1, #0xe
   311f8:	b.ne	31230 <PyInit__decimal@@Base+0x17090>  // b.any
   311fc:	ldr	x0, [x19, #24]
   31200:	ldr	x1, [x19, #40]
   31204:	add	x0, x1, x0, lsl #3
   31208:	ldur	x0, [x0, #-8]
   3120c:	cbnz	x0, 31248 <PyInit__decimal@@Base+0x170a8>
   31210:	ldr	w0, [x21, #36]
   31214:	cmp	w0, #0x3
   31218:	b.eq	31248 <PyInit__decimal@@Base+0x170a8>  // b.none
   3121c:	mov	x2, x20
   31220:	mov	x1, x19
   31224:	mov	x0, x22
   31228:	bl	2a78c <PyInit__decimal@@Base+0x105ec>
   3122c:	b	31258 <PyInit__decimal@@Base+0x170b8>
   31230:	mov	x1, x19
   31234:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   31238:	cbnz	w0, 31268 <PyInit__decimal@@Base+0x170c8>
   3123c:	ldrb	w0, [x19]
   31240:	tst	w0, #0xe
   31244:	b.eq	311fc <PyInit__decimal@@Base+0x1705c>  // b.none
   31248:	mov	x2, x20
   3124c:	mov	x1, x19
   31250:	mov	x0, x22
   31254:	bl	2a7c0 <PyInit__decimal@@Base+0x10620>
   31258:	mov	x2, x20
   3125c:	mov	x1, x21
   31260:	mov	x0, x22
   31264:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   31268:	ldp	x19, x20, [sp, #16]
   3126c:	ldp	x21, x22, [sp, #32]
   31270:	ldp	x29, x30, [sp], #48
   31274:	ret
   31278:	stp	x29, x30, [sp, #-48]!
   3127c:	mov	x29, sp
   31280:	stp	x19, x20, [sp, #16]
   31284:	stp	x21, x22, [sp, #32]
   31288:	mov	x22, x0
   3128c:	mov	x19, x1
   31290:	mov	x21, x2
   31294:	mov	x20, x3
   31298:	ldrb	w1, [x1]
   3129c:	tst	w1, #0xe
   312a0:	b.ne	312d8 <PyInit__decimal@@Base+0x17138>  // b.any
   312a4:	ldr	x0, [x19, #24]
   312a8:	ldr	x1, [x19, #40]
   312ac:	add	x0, x1, x0, lsl #3
   312b0:	ldur	x0, [x0, #-8]
   312b4:	cbnz	x0, 312f0 <PyInit__decimal@@Base+0x17150>
   312b8:	ldr	w0, [x21, #36]
   312bc:	cmp	w0, #0x3
   312c0:	b.eq	312f0 <PyInit__decimal@@Base+0x17150>  // b.none
   312c4:	mov	x2, x20
   312c8:	mov	x1, x19
   312cc:	mov	x0, x22
   312d0:	bl	2a78c <PyInit__decimal@@Base+0x105ec>
   312d4:	b	31300 <PyInit__decimal@@Base+0x17160>
   312d8:	mov	x1, x19
   312dc:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   312e0:	cbnz	w0, 31310 <PyInit__decimal@@Base+0x17170>
   312e4:	ldrb	w0, [x19]
   312e8:	tst	w0, #0xe
   312ec:	b.eq	312a4 <PyInit__decimal@@Base+0x17104>  // b.none
   312f0:	mov	x2, x20
   312f4:	mov	x1, x19
   312f8:	mov	x0, x22
   312fc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31300:	mov	x2, x20
   31304:	mov	x1, x21
   31308:	mov	x0, x22
   3130c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   31310:	ldp	x19, x20, [sp, #16]
   31314:	ldp	x21, x22, [sp, #32]
   31318:	ldp	x29, x30, [sp], #48
   3131c:	ret
   31320:	stp	x29, x30, [sp, #-48]!
   31324:	mov	x29, sp
   31328:	stp	x19, x20, [sp, #16]
   3132c:	stp	x21, x22, [sp, #32]
   31330:	mov	x20, x0
   31334:	mov	x19, x1
   31338:	mov	x21, x2
   3133c:	mov	x22, x3
   31340:	ldrb	w0, [x1]
   31344:	tst	w0, #0xe
   31348:	b.ne	31378 <PyInit__decimal@@Base+0x171d8>  // b.any
   3134c:	ldrb	w0, [x19]
   31350:	tbz	w0, #0, 31388 <PyInit__decimal@@Base+0x171e8>
   31354:	mov	x3, x22
   31358:	mov	x2, x21
   3135c:	mov	x1, x19
   31360:	mov	x0, x20
   31364:	bl	311d0 <PyInit__decimal@@Base+0x17030>
   31368:	ldp	x19, x20, [sp, #16]
   3136c:	ldp	x21, x22, [sp, #32]
   31370:	ldp	x29, x30, [sp], #48
   31374:	ret
   31378:	mov	x0, x20
   3137c:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   31380:	cbz	w0, 3134c <PyInit__decimal@@Base+0x171ac>
   31384:	b	31368 <PyInit__decimal@@Base+0x171c8>
   31388:	mov	x3, x22
   3138c:	mov	x2, x21
   31390:	mov	x1, x19
   31394:	mov	x0, x20
   31398:	bl	31278 <PyInit__decimal@@Base+0x170d8>
   3139c:	b	31368 <PyInit__decimal@@Base+0x171c8>
   313a0:	stp	x29, x30, [sp, #-160]!
   313a4:	mov	x29, sp
   313a8:	stp	x19, x20, [sp, #16]
   313ac:	stp	x21, x22, [sp, #32]
   313b0:	mov	x21, x0
   313b4:	mov	x20, x1
   313b8:	mov	x19, x2
   313bc:	mov	x22, x3
   313c0:	mov	x0, #0x1                   	// #1
   313c4:	str	x0, [sp, #104]
   313c8:	mov	w1, #0xffffff90            	// #-112
   313cc:	strb	w1, [sp, #56]
   313d0:	ldr	x1, [x2, #16]
   313d4:	ldr	x2, [x2]
   313d8:	sub	x3, x1, x2
   313dc:	str	x3, [sp, #64]
   313e0:	str	x0, [sp, #72]
   313e4:	str	x0, [sp, #80]
   313e8:	str	x0, [sp, #88]
   313ec:	add	x0, sp, #0x68
   313f0:	str	x0, [sp, #96]
   313f4:	ldrb	w0, [x20]
   313f8:	tst	w0, #0xe
   313fc:	b.eq	31474 <PyInit__decimal@@Base+0x172d4>  // b.none
   31400:	mov	x3, x22
   31404:	mov	x2, x19
   31408:	mov	x1, x20
   3140c:	mov	x0, x21
   31410:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   31414:	cbnz	w0, 314bc <PyInit__decimal@@Base+0x1731c>
   31418:	ldrb	w0, [x20]
   3141c:	tbnz	w0, #0, 31460 <PyInit__decimal@@Base+0x172c0>
   31420:	ldrb	w0, [x21]
   31424:	and	w0, w0, #0xfffffff0
   31428:	strb	w0, [x21]
   3142c:	mov	x2, x22
   31430:	mov	x1, x19
   31434:	mov	x0, x21
   31438:	bl	28908 <PyInit__decimal@@Base+0xe768>
   3143c:	ldrb	w0, [x21]
   31440:	tst	w0, #0xc
   31444:	b.ne	314bc <PyInit__decimal@@Base+0x1731c>  // b.any
   31448:	ldr	x0, [x19, #8]
   3144c:	add	x0, x0, #0x1
   31450:	ldr	x1, [x19]
   31454:	sub	x0, x0, x1
   31458:	str	x0, [x21, #8]
   3145c:	b	314bc <PyInit__decimal@@Base+0x1731c>
   31460:	mov	x2, x22
   31464:	mov	x1, x20
   31468:	mov	x0, x21
   3146c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31470:	b	314bc <PyInit__decimal@@Base+0x1731c>
   31474:	str	x2, [sp, #112]
   31478:	ldr	x0, [x19, #8]
   3147c:	str	x0, [sp, #120]
   31480:	str	x1, [sp, #128]
   31484:	str	wzr, [sp, #136]
   31488:	str	wzr, [sp, #140]
   3148c:	str	wzr, [sp, #144]
   31490:	ldr	w0, [x19, #40]
   31494:	str	w0, [sp, #152]
   31498:	ldr	w0, [x19, #44]
   3149c:	str	w0, [sp, #156]
   314a0:	mov	w0, #0x3                   	// #3
   314a4:	str	w0, [sp, #148]
   314a8:	mov	x2, x22
   314ac:	mov	x1, x20
   314b0:	mov	x0, x21
   314b4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   314b8:	cbnz	w0, 314cc <PyInit__decimal@@Base+0x1732c>
   314bc:	ldp	x19, x20, [sp, #16]
   314c0:	ldp	x21, x22, [sp, #32]
   314c4:	ldp	x29, x30, [sp], #160
   314c8:	ret
   314cc:	add	x1, sp, #0x70
   314d0:	add	x2, x1, #0x1c
   314d4:	mov	x0, x21
   314d8:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   314dc:	ldr	w0, [sp, #140]
   314e0:	tst	w0, #0x3fe
   314e4:	b.eq	31500 <PyInit__decimal@@Base+0x17360>  // b.none
   314e8:	mov	w1, #0x3be                 	// #958
   314ec:	and	w0, w0, w1
   314f0:	ldr	w1, [x22]
   314f4:	orr	w0, w1, w0
   314f8:	str	w0, [x22]
   314fc:	b	314bc <PyInit__decimal@@Base+0x1731c>
   31500:	str	wzr, [sp, #140]
   31504:	add	x3, sp, #0x70
   31508:	add	x4, x3, #0x1c
   3150c:	add	x2, sp, #0x38
   31510:	mov	x1, x20
   31514:	mov	x0, x21
   31518:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   3151c:	ldr	w0, [sp, #140]
   31520:	mov	w1, #0x3be                 	// #958
   31524:	and	w1, w0, w1
   31528:	ldr	w0, [x22]
   3152c:	orr	w0, w0, w1
   31530:	str	w0, [x22]
   31534:	b	314bc <PyInit__decimal@@Base+0x1731c>
   31538:	stp	x29, x30, [sp, #-160]!
   3153c:	mov	x29, sp
   31540:	stp	x19, x20, [sp, #16]
   31544:	stp	x21, x22, [sp, #32]
   31548:	mov	x21, x0
   3154c:	mov	x20, x1
   31550:	mov	x19, x2
   31554:	mov	x22, x3
   31558:	mov	x0, #0x1                   	// #1
   3155c:	str	x0, [sp, #104]
   31560:	mov	w1, #0xffffff90            	// #-112
   31564:	strb	w1, [sp, #56]
   31568:	ldr	x1, [x2, #16]
   3156c:	ldr	x2, [x2]
   31570:	sub	x3, x1, x2
   31574:	str	x3, [sp, #64]
   31578:	str	x0, [sp, #72]
   3157c:	str	x0, [sp, #80]
   31580:	str	x0, [sp, #88]
   31584:	add	x0, sp, #0x68
   31588:	str	x0, [sp, #96]
   3158c:	ldrb	w0, [x20]
   31590:	tst	w0, #0xe
   31594:	b.eq	31618 <PyInit__decimal@@Base+0x17478>  // b.none
   31598:	mov	x3, x22
   3159c:	mov	x2, x19
   315a0:	mov	x1, x20
   315a4:	mov	x0, x21
   315a8:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   315ac:	cbnz	w0, 31660 <PyInit__decimal@@Base+0x174c0>
   315b0:	ldrb	w0, [x20]
   315b4:	tbz	w0, #0, 31604 <PyInit__decimal@@Base+0x17464>
   315b8:	ldrb	w0, [x21]
   315bc:	and	w0, w0, #0xfffffff0
   315c0:	strb	w0, [x21]
   315c4:	mov	x2, x22
   315c8:	mov	x1, x19
   315cc:	mov	x0, x21
   315d0:	bl	28908 <PyInit__decimal@@Base+0xe768>
   315d4:	ldrb	w0, [x21]
   315d8:	tst	w0, #0xc
   315dc:	b.ne	31660 <PyInit__decimal@@Base+0x174c0>  // b.any
   315e0:	and	w0, w0, #0xfffffff0
   315e4:	orr	w0, w0, #0x1
   315e8:	strb	w0, [x21]
   315ec:	ldr	x0, [x19, #8]
   315f0:	add	x0, x0, #0x1
   315f4:	ldr	x1, [x19]
   315f8:	sub	x0, x0, x1
   315fc:	str	x0, [x21, #8]
   31600:	b	31660 <PyInit__decimal@@Base+0x174c0>
   31604:	mov	x2, x22
   31608:	mov	x1, x20
   3160c:	mov	x0, x21
   31610:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31614:	b	31660 <PyInit__decimal@@Base+0x174c0>
   31618:	str	x2, [sp, #112]
   3161c:	ldr	x0, [x19, #8]
   31620:	str	x0, [sp, #120]
   31624:	str	x1, [sp, #128]
   31628:	str	wzr, [sp, #136]
   3162c:	str	wzr, [sp, #140]
   31630:	str	wzr, [sp, #144]
   31634:	ldr	w0, [x19, #40]
   31638:	str	w0, [sp, #152]
   3163c:	ldr	w0, [x19, #44]
   31640:	str	w0, [sp, #156]
   31644:	mov	w0, #0x2                   	// #2
   31648:	str	w0, [sp, #148]
   3164c:	mov	x2, x22
   31650:	mov	x1, x20
   31654:	mov	x0, x21
   31658:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   3165c:	cbnz	w0, 31670 <PyInit__decimal@@Base+0x174d0>
   31660:	ldp	x19, x20, [sp, #16]
   31664:	ldp	x21, x22, [sp, #32]
   31668:	ldp	x29, x30, [sp], #160
   3166c:	ret
   31670:	add	x1, sp, #0x70
   31674:	add	x2, x1, #0x1c
   31678:	mov	x0, x21
   3167c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   31680:	ldr	w0, [sp, #140]
   31684:	tst	w0, #0x3fe
   31688:	b.eq	316a4 <PyInit__decimal@@Base+0x17504>  // b.none
   3168c:	mov	w1, #0x3be                 	// #958
   31690:	and	w0, w0, w1
   31694:	ldr	w1, [x22]
   31698:	orr	w0, w1, w0
   3169c:	str	w0, [x22]
   316a0:	b	31660 <PyInit__decimal@@Base+0x174c0>
   316a4:	str	wzr, [sp, #140]
   316a8:	add	x3, sp, #0x70
   316ac:	add	x4, x3, #0x1c
   316b0:	add	x2, sp, #0x38
   316b4:	mov	x1, x20
   316b8:	mov	x0, x21
   316bc:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   316c0:	ldr	w0, [sp, #140]
   316c4:	mov	w1, #0x3be                 	// #958
   316c8:	and	w1, w0, w1
   316cc:	ldr	w0, [x22]
   316d0:	orr	w0, w0, w1
   316d4:	str	w0, [x22]
   316d8:	b	31660 <PyInit__decimal@@Base+0x174c0>
   316dc:	stp	x29, x30, [sp, #-64]!
   316e0:	mov	x29, sp
   316e4:	stp	x19, x20, [sp, #16]
   316e8:	stp	x21, x22, [sp, #32]
   316ec:	str	x23, [sp, #48]
   316f0:	mov	x19, x0
   316f4:	mov	x22, x1
   316f8:	mov	x21, x2
   316fc:	mov	x23, x3
   31700:	mov	x20, x4
   31704:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   31708:	cbz	w0, 31720 <PyInit__decimal@@Base+0x17580>
   3170c:	ldp	x19, x20, [sp, #16]
   31710:	ldp	x21, x22, [sp, #32]
   31714:	ldr	x23, [sp, #48]
   31718:	ldp	x29, x30, [sp], #64
   3171c:	ret
   31720:	mov	x1, x21
   31724:	mov	x0, x22
   31728:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   3172c:	cbz	w0, 31764 <PyInit__decimal@@Base+0x175c4>
   31730:	tbnz	w0, #31, 3177c <PyInit__decimal@@Base+0x175dc>
   31734:	mov	x3, x20
   31738:	mov	x2, x23
   3173c:	mov	x1, x22
   31740:	mov	x0, x19
   31744:	bl	313a0 <PyInit__decimal@@Base+0x17200>
   31748:	ldrb	w0, [x19]
   3174c:	tbz	w0, #1, 31794 <PyInit__decimal@@Base+0x175f4>
   31750:	ldr	w0, [x20]
   31754:	mov	w1, #0x1840                	// #6208
   31758:	orr	w0, w0, w1
   3175c:	str	w0, [x20]
   31760:	b	3170c <PyInit__decimal@@Base+0x1756c>
   31764:	mov	x3, x20
   31768:	mov	x2, x21
   3176c:	mov	x1, x22
   31770:	mov	x0, x19
   31774:	bl	2a7f4 <PyInit__decimal@@Base+0x10654>
   31778:	b	3170c <PyInit__decimal@@Base+0x1756c>
   3177c:	mov	x3, x20
   31780:	mov	x2, x23
   31784:	mov	x1, x22
   31788:	mov	x0, x19
   3178c:	bl	31538 <PyInit__decimal@@Base+0x17398>
   31790:	b	31748 <PyInit__decimal@@Base+0x175a8>
   31794:	ldr	x0, [x19, #8]
   31798:	ldr	x1, [x19, #16]
   3179c:	add	x0, x0, x1
   317a0:	sub	x0, x0, #0x1
   317a4:	ldr	x1, [x23, #16]
   317a8:	cmp	x1, x0
   317ac:	b.le	3170c <PyInit__decimal@@Base+0x1756c>
   317b0:	ldr	w1, [x20]
   317b4:	mov	w0, #0x7040                	// #28736
   317b8:	orr	w0, w1, w0
   317bc:	str	w0, [x20]
   317c0:	ldrb	w0, [x19]
   317c4:	tst	w0, #0xe
   317c8:	b.ne	3170c <PyInit__decimal@@Base+0x1756c>  // b.any
   317cc:	ldr	x0, [x19, #24]
   317d0:	ldr	x2, [x19, #40]
   317d4:	add	x0, x2, x0, lsl #3
   317d8:	ldur	x0, [x0, #-8]
   317dc:	cbnz	x0, 3170c <PyInit__decimal@@Base+0x1756c>
   317e0:	mov	w0, #0x7041                	// #28737
   317e4:	orr	w1, w1, w0
   317e8:	str	w1, [x20]
   317ec:	b	3170c <PyInit__decimal@@Base+0x1756c>
   317f0:	stp	x29, x30, [sp, #-64]!
   317f4:	mov	x29, sp
   317f8:	stp	x19, x20, [sp, #16]
   317fc:	stp	x21, x22, [sp, #32]
   31800:	str	x23, [sp, #48]
   31804:	mov	x23, x0
   31808:	mov	x19, x1
   3180c:	mov	x20, x2
   31810:	mov	x21, x3
   31814:	mov	x22, x4
   31818:	ldrb	w1, [x1]
   3181c:	tst	w1, #0xe
   31820:	b.ne	31830 <PyInit__decimal@@Base+0x17690>  // b.any
   31824:	ldrb	w0, [x2]
   31828:	tst	w0, #0xe
   3182c:	b.eq	31894 <PyInit__decimal@@Base+0x176f4>  // b.none
   31830:	mov	x4, x22
   31834:	mov	x3, x21
   31838:	mov	x2, x20
   3183c:	mov	x1, x19
   31840:	mov	x0, x23
   31844:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   31848:	cbnz	w0, 3186c <PyInit__decimal@@Base+0x176cc>
   3184c:	ldrb	w0, [x19]
   31850:	tbz	w0, #1, 3185c <PyInit__decimal@@Base+0x176bc>
   31854:	ldrb	w0, [x20]
   31858:	tbnz	w0, #1, 31880 <PyInit__decimal@@Base+0x176e0>
   3185c:	mov	x2, x22
   31860:	mov	w1, #0x100                 	// #256
   31864:	mov	x0, x23
   31868:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   3186c:	ldp	x19, x20, [sp, #16]
   31870:	ldp	x21, x22, [sp, #32]
   31874:	ldr	x23, [sp, #48]
   31878:	ldp	x29, x30, [sp], #64
   3187c:	ret
   31880:	mov	x2, x22
   31884:	mov	x1, x19
   31888:	mov	x0, x23
   3188c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31890:	b	3186c <PyInit__decimal@@Base+0x176cc>
   31894:	ldr	x20, [x2, #8]
   31898:	ldr	x0, [x3, #8]
   3189c:	cmp	x0, x20
   318a0:	b.lt	318f8 <PyInit__decimal@@Base+0x17758>  // b.tstop
   318a4:	ldr	x3, [x3]
   318a8:	ldr	x0, [x21, #16]
   318ac:	add	x0, x0, #0x1
   318b0:	sub	x0, x0, x3
   318b4:	cmp	x20, x0
   318b8:	b.lt	318f8 <PyInit__decimal@@Base+0x17758>  // b.tstop
   318bc:	ldr	x0, [x19, #24]
   318c0:	ldr	x2, [x19, #40]
   318c4:	add	x0, x2, x0, lsl #3
   318c8:	ldur	x0, [x0, #-8]
   318cc:	cbnz	x0, 3190c <PyInit__decimal@@Base+0x1776c>
   318d0:	mov	x3, x20
   318d4:	mov	x2, #0x0                   	// #0
   318d8:	and	w1, w1, #0x1
   318dc:	mov	x0, x23
   318e0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   318e4:	mov	x2, x22
   318e8:	mov	x1, x21
   318ec:	mov	x0, x23
   318f0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   318f4:	b	3186c <PyInit__decimal@@Base+0x176cc>
   318f8:	mov	x2, x22
   318fc:	mov	w1, #0x100                 	// #256
   31900:	mov	x0, x23
   31904:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   31908:	b	3186c <PyInit__decimal@@Base+0x176cc>
   3190c:	ldr	x1, [x19, #8]
   31910:	sub	x2, x1, x20
   31914:	ldr	x0, [x19, #16]
   31918:	add	x0, x2, x0
   3191c:	cmp	x0, x3
   31920:	b.gt	3198c <PyInit__decimal@@Base+0x177ec>
   31924:	tbnz	x2, #63, 319a0 <PyInit__decimal@@Base+0x17800>
   31928:	mov	x3, x4
   3192c:	mov	x1, x19
   31930:	mov	x0, x23
   31934:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   31938:	cbz	w0, 3186c <PyInit__decimal@@Base+0x176cc>
   3193c:	str	x20, [x23, #8]
   31940:	mov	w2, #0x0                   	// #0
   31944:	ldr	x0, [x23, #8]
   31948:	ldr	x1, [x23, #16]
   3194c:	add	x0, x0, x1
   31950:	sub	x0, x0, #0x1
   31954:	ldr	x1, [x21, #8]
   31958:	cmp	x1, x0
   3195c:	b.lt	31978 <PyInit__decimal@@Base+0x177d8>  // b.tstop
   31960:	ldr	x1, [x21, #16]
   31964:	add	x1, x1, #0x1
   31968:	ldr	x3, [x21]
   3196c:	sub	x1, x1, x3
   31970:	cmp	x0, x1
   31974:	b.ge	31d18 <PyInit__decimal@@Base+0x17b78>  // b.tcont
   31978:	mov	x2, x22
   3197c:	mov	w1, #0x100                 	// #256
   31980:	mov	x0, x23
   31984:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   31988:	b	3186c <PyInit__decimal@@Base+0x176cc>
   3198c:	mov	x2, x4
   31990:	mov	w1, #0x100                 	// #256
   31994:	mov	x0, x23
   31998:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   3199c:	b	3186c <PyInit__decimal@@Base+0x176cc>
   319a0:	mov	x3, x4
   319a4:	sub	x2, x20, x1
   319a8:	mov	x1, x19
   319ac:	mov	x0, x23
   319b0:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   319b4:	mov	x19, x0
   319b8:	cmn	x0, #0x1
   319bc:	b.eq	3186c <PyInit__decimal@@Base+0x176cc>  // b.none
   319c0:	str	x20, [x23, #8]
   319c4:	ldr	w0, [x21, #36]
   319c8:	cmp	w0, #0x4
   319cc:	b.eq	31b4c <PyInit__decimal@@Base+0x179ac>  // b.none
   319d0:	b.gt	31af0 <PyInit__decimal@@Base+0x17950>
   319d4:	cmp	w0, #0x2
   319d8:	b.eq	31b74 <PyInit__decimal@@Base+0x179d4>  // b.none
   319dc:	cmp	w0, #0x3
   319e0:	b.ne	319f4 <PyInit__decimal@@Base+0x17854>  // b.any
   319e4:	cbz	x19, 31d08 <PyInit__decimal@@Base+0x17b68>
   319e8:	ldrb	w0, [x23]
   319ec:	and	w0, w0, #0x1
   319f0:	b	31b84 <PyInit__decimal@@Base+0x179e4>
   319f4:	cmp	x19, #0x0
   319f8:	cset	w1, ne  // ne = any
   319fc:	cbnz	w0, 31adc <PyInit__decimal@@Base+0x1793c>
   31a00:	cbz	w1, 31adc <PyInit__decimal@@Base+0x1793c>
   31a04:	ldr	x1, [x23, #24]
   31a08:	ldr	x0, [x23, #40]
   31a0c:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   31a10:	cbz	x0, 31a64 <PyInit__decimal@@Base+0x178c4>
   31a14:	ldr	x0, [x23, #24]
   31a18:	add	x0, x0, #0x1
   31a1c:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   31a20:	ldr	x1, [x1, #1672]
   31a24:	cmp	x0, x1
   31a28:	csel	x1, x0, x1, ge  // ge = tcont
   31a2c:	ldr	x0, [x23, #32]
   31a30:	cmp	x1, x0
   31a34:	b.eq	31a48 <PyInit__decimal@@Base+0x178a8>  // b.none
   31a38:	ldrb	w2, [x23]
   31a3c:	tbz	w2, #5, 31ba0 <PyInit__decimal@@Base+0x17a00>
   31a40:	cmp	x1, x0
   31a44:	b.gt	31b90 <PyInit__decimal@@Base+0x179f0>
   31a48:	ldr	x1, [x23, #24]
   31a4c:	ldr	x0, [x23, #40]
   31a50:	mov	x2, #0x1                   	// #1
   31a54:	str	x2, [x0, x1, lsl #3]
   31a58:	ldr	x0, [x23, #24]
   31a5c:	add	x0, x0, x2
   31a60:	str	x0, [x23, #24]
   31a64:	ldr	x1, [x23, #24]
   31a68:	ldr	x0, [x23, #40]
   31a6c:	add	x0, x0, x1, lsl #3
   31a70:	ldur	x2, [x0, #-8]
   31a74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31a78:	ldr	x0, [x0, #3584]
   31a7c:	cmp	x2, x0
   31a80:	b.cs	31c20 <PyInit__decimal@@Base+0x17a80>  // b.hs, b.nlast
   31a84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31a88:	ldr	x0, [x0, #3544]
   31a8c:	cmp	x2, x0
   31a90:	b.cs	31bcc <PyInit__decimal@@Base+0x17a2c>  // b.hs, b.nlast
   31a94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31a98:	ldr	x0, [x0, #3528]
   31a9c:	cmp	x2, x0
   31aa0:	b.cs	31bb4 <PyInit__decimal@@Base+0x17a14>  // b.hs, b.nlast
   31aa4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31aa8:	ldr	x0, [x0, #3520]
   31aac:	cmp	x2, x0
   31ab0:	cset	w0, cs  // cs = hs, nlast
   31ab4:	add	w0, w0, #0x1
   31ab8:	sub	x1, x1, #0x1
   31abc:	add	x2, x1, x1, lsl #2
   31ac0:	lsl	x2, x2, #2
   31ac4:	sub	x1, x2, x1
   31ac8:	add	x0, x1, w0, sxtw
   31acc:	str	x0, [x23, #16]
   31ad0:	ldr	x1, [x21]
   31ad4:	cmp	x1, x0
   31ad8:	b.lt	31cec <PyInit__decimal@@Base+0x17b4c>  // b.tstop
   31adc:	cmp	x19, #0x0
   31ae0:	mov	w2, #0x1000                	// #4096
   31ae4:	mov	w0, #0x1040                	// #4160
   31ae8:	csel	w2, w2, w0, eq  // eq = none
   31aec:	b	31944 <PyInit__decimal@@Base+0x177a4>
   31af0:	cmp	w0, #0x6
   31af4:	b.eq	31b58 <PyInit__decimal@@Base+0x179b8>  // b.none
   31af8:	cmp	w0, #0x7
   31afc:	b.ne	31b38 <PyInit__decimal@@Base+0x17998>  // b.any
   31b00:	cbz	x19, 31d10 <PyInit__decimal@@Base+0x17b70>
   31b04:	ldr	x0, [x23, #40]
   31b08:	ldr	x1, [x0]
   31b0c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   31b10:	movk	x0, #0xcccd
   31b14:	umulh	x0, x1, x0
   31b18:	lsr	x0, x0, #3
   31b1c:	add	x0, x0, x0, lsl #2
   31b20:	sub	x0, x1, x0, lsl #1
   31b24:	cmp	w0, #0x0
   31b28:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   31b2c:	mov	w2, #0x1040                	// #4160
   31b30:	b.ne	31944 <PyInit__decimal@@Base+0x177a4>  // b.any
   31b34:	b	31a04 <PyInit__decimal@@Base+0x17864>
   31b38:	cmp	x19, #0x5
   31b3c:	cset	w1, hi  // hi = pmore
   31b40:	cmp	w0, #0x5
   31b44:	b.eq	31a00 <PyInit__decimal@@Base+0x17860>  // b.none
   31b48:	b	31adc <PyInit__decimal@@Base+0x1793c>
   31b4c:	cmp	x19, #0x4
   31b50:	cset	w1, hi  // hi = pmore
   31b54:	b	31a00 <PyInit__decimal@@Base+0x17860>
   31b58:	cmp	x19, #0x5
   31b5c:	b.hi	31a04 <PyInit__decimal@@Base+0x17864>  // b.pmore
   31b60:	b.ne	31adc <PyInit__decimal@@Base+0x1793c>  // b.any
   31b64:	ldr	x0, [x23, #40]
   31b68:	ldr	x0, [x0]
   31b6c:	and	w0, w0, #0x1
   31b70:	b	31b84 <PyInit__decimal@@Base+0x179e4>
   31b74:	cbz	x19, 31d00 <PyInit__decimal@@Base+0x17b60>
   31b78:	ldrb	w0, [x23]
   31b7c:	eor	w0, w0, #0x1
   31b80:	and	w0, w0, #0x1
   31b84:	mov	w2, #0x1040                	// #4160
   31b88:	cbnz	w0, 31a04 <PyInit__decimal@@Base+0x17864>
   31b8c:	b	31944 <PyInit__decimal@@Base+0x177a4>
   31b90:	mov	x2, x22
   31b94:	mov	x0, x23
   31b98:	bl	25338 <PyInit__decimal@@Base+0xb198>
   31b9c:	b	31bac <PyInit__decimal@@Base+0x17a0c>
   31ba0:	mov	x2, x22
   31ba4:	mov	x0, x23
   31ba8:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   31bac:	cbnz	w0, 31a48 <PyInit__decimal@@Base+0x178a8>
   31bb0:	b	3186c <PyInit__decimal@@Base+0x176cc>
   31bb4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31bb8:	ldr	x0, [x0, #3536]
   31bbc:	cmp	x2, x0
   31bc0:	cset	w0, cs  // cs = hs, nlast
   31bc4:	add	w0, w0, #0x3
   31bc8:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31bcc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31bd0:	ldr	x0, [x0, #3560]
   31bd4:	cmp	x2, x0
   31bd8:	b.cc	31c08 <PyInit__decimal@@Base+0x17a68>  // b.lo, b.ul, b.last
   31bdc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31be0:	ldr	x3, [x0, #3576]
   31be4:	mov	w0, #0x9                   	// #9
   31be8:	cmp	x2, x3
   31bec:	b.cs	31ab8 <PyInit__decimal@@Base+0x17918>  // b.hs, b.nlast
   31bf0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31bf4:	ldr	x0, [x0, #3568]
   31bf8:	cmp	x2, x0
   31bfc:	cset	w0, cs  // cs = hs, nlast
   31c00:	add	w0, w0, #0x7
   31c04:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31c08:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c0c:	ldr	x0, [x0, #3552]
   31c10:	cmp	x2, x0
   31c14:	cset	w0, cs  // cs = hs, nlast
   31c18:	add	w0, w0, #0x5
   31c1c:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31c20:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c24:	ldr	x0, [x0, #3624]
   31c28:	cmp	x2, x0
   31c2c:	b.cs	31c84 <PyInit__decimal@@Base+0x17ae4>  // b.hs, b.nlast
   31c30:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c34:	ldr	x0, [x0, #3600]
   31c38:	cmp	x2, x0
   31c3c:	b.cc	31c6c <PyInit__decimal@@Base+0x17acc>  // b.lo, b.ul, b.last
   31c40:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c44:	ldr	x3, [x0, #3616]
   31c48:	mov	w0, #0xe                   	// #14
   31c4c:	cmp	x2, x3
   31c50:	b.cs	31ab8 <PyInit__decimal@@Base+0x17918>  // b.hs, b.nlast
   31c54:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c58:	ldr	x0, [x0, #3608]
   31c5c:	cmp	x2, x0
   31c60:	cset	w0, cs  // cs = hs, nlast
   31c64:	add	w0, w0, #0xc
   31c68:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31c6c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c70:	ldr	x0, [x0, #3592]
   31c74:	cmp	x2, x0
   31c78:	cset	w0, cs  // cs = hs, nlast
   31c7c:	add	w0, w0, #0xa
   31c80:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31c84:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c88:	ldr	x0, [x0, #3656]
   31c8c:	cmp	x2, x0
   31c90:	b.cs	31cd4 <PyInit__decimal@@Base+0x17b34>  // b.hs, b.nlast
   31c94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31c98:	ldr	x0, [x0, #3640]
   31c9c:	cmp	x2, x0
   31ca0:	b.cs	31cbc <PyInit__decimal@@Base+0x17b1c>  // b.hs, b.nlast
   31ca4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31ca8:	ldr	x0, [x0, #3632]
   31cac:	cmp	x2, x0
   31cb0:	cset	w0, cs  // cs = hs, nlast
   31cb4:	add	w0, w0, #0xf
   31cb8:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31cbc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31cc0:	ldr	x0, [x0, #3648]
   31cc4:	cmp	x2, x0
   31cc8:	cset	w0, cs  // cs = hs, nlast
   31ccc:	add	w0, w0, #0x11
   31cd0:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31cd4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   31cd8:	ldr	x0, [x0, #3664]
   31cdc:	cmp	x2, x0
   31ce0:	cset	w0, cs  // cs = hs, nlast
   31ce4:	add	w0, w0, #0x13
   31ce8:	b	31ab8 <PyInit__decimal@@Base+0x17918>
   31cec:	mov	x2, x22
   31cf0:	mov	w1, #0x100                 	// #256
   31cf4:	mov	x0, x23
   31cf8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   31cfc:	b	3186c <PyInit__decimal@@Base+0x176cc>
   31d00:	mov	w2, #0x1000                	// #4096
   31d04:	b	31944 <PyInit__decimal@@Base+0x177a4>
   31d08:	mov	w2, #0x1000                	// #4096
   31d0c:	b	31944 <PyInit__decimal@@Base+0x177a4>
   31d10:	mov	w2, #0x1000                	// #4096
   31d14:	b	31944 <PyInit__decimal@@Base+0x177a4>
   31d18:	ldr	w0, [x22]
   31d1c:	orr	w2, w0, w2
   31d20:	str	w2, [x22]
   31d24:	mov	x2, x22
   31d28:	mov	x1, x21
   31d2c:	mov	x0, x23
   31d30:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   31d34:	b	3186c <PyInit__decimal@@Base+0x176cc>
   31d38:	stp	x29, x30, [sp, #-64]!
   31d3c:	mov	x29, sp
   31d40:	stp	x19, x20, [sp, #16]
   31d44:	stp	x21, x22, [sp, #32]
   31d48:	str	x23, [sp, #48]
   31d4c:	mov	x19, x0
   31d50:	mov	x20, x1
   31d54:	mov	x22, x2
   31d58:	mov	x21, x3
   31d5c:	ldrb	w23, [x1]
   31d60:	tst	w23, #0xe
   31d64:	b.eq	31d98 <PyInit__decimal@@Base+0x17bf8>  // b.none
   31d68:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   31d6c:	cbz	w0, 31d84 <PyInit__decimal@@Base+0x17be4>
   31d70:	ldp	x19, x20, [sp, #16]
   31d74:	ldp	x21, x22, [sp, #32]
   31d78:	ldr	x23, [sp, #48]
   31d7c:	ldp	x29, x30, [sp], #64
   31d80:	ret
   31d84:	mov	x2, x21
   31d88:	mov	x1, x20
   31d8c:	mov	x0, x19
   31d90:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31d94:	b	31d70 <PyInit__decimal@@Base+0x17bd0>
   31d98:	mov	x2, x3
   31d9c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   31da0:	cbz	w0, 31d70 <PyInit__decimal@@Base+0x17bd0>
   31da4:	mov	x2, x21
   31da8:	mov	x1, x22
   31dac:	mov	x0, x19
   31db0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   31db4:	ldrb	w0, [x19]
   31db8:	tst	w0, #0xe
   31dbc:	b.ne	31d70 <PyInit__decimal@@Base+0x17bd0>  // b.any
   31dc0:	ldr	x0, [x19, #24]
   31dc4:	ldr	x1, [x19, #40]
   31dc8:	add	x0, x1, x0, lsl #3
   31dcc:	ldur	x0, [x0, #-8]
   31dd0:	cbnz	x0, 31dec <PyInit__decimal@@Base+0x17c4c>
   31dd4:	mov	x3, #0x0                   	// #0
   31dd8:	mov	x2, #0x0                   	// #0
   31ddc:	and	w1, w23, #0x1
   31de0:	mov	x0, x19
   31de4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   31de8:	b	31d70 <PyInit__decimal@@Base+0x17bd0>
   31dec:	mov	x0, x19
   31df0:	bl	28a38 <PyInit__decimal@@Base+0xe898>
   31df4:	ldr	w1, [x22, #40]
   31df8:	cbz	w1, 31e38 <PyInit__decimal@@Base+0x17c98>
   31dfc:	ldr	x20, [x22, #8]
   31e00:	add	x20, x20, #0x1
   31e04:	ldr	x1, [x22]
   31e08:	sub	x20, x20, x1
   31e0c:	ldr	x1, [x19, #8]
   31e10:	sub	x20, x20, x1
   31e14:	cmp	x20, x0
   31e18:	csel	x20, x20, x0, le
   31e1c:	mov	x1, x20
   31e20:	mov	x0, x19
   31e24:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   31e28:	ldr	x0, [x19, #8]
   31e2c:	add	x20, x0, x20
   31e30:	str	x20, [x19, #8]
   31e34:	b	31d70 <PyInit__decimal@@Base+0x17bd0>
   31e38:	ldr	x20, [x22, #8]
   31e3c:	b	31e0c <PyInit__decimal@@Base+0x17c6c>
   31e40:	stp	x29, x30, [sp, #-16]!
   31e44:	mov	x29, sp
   31e48:	mov	x5, #0xfffd                	// #65533
   31e4c:	movk	x5, #0x4ec7, lsl #16
   31e50:	movk	x5, #0x6d67, lsl #32
   31e54:	movk	x5, #0x1bc1, lsl #48
   31e58:	add	x5, x2, x5
   31e5c:	mov	x6, #0xfffd                	// #65533
   31e60:	movk	x6, #0xf62b, lsl #16
   31e64:	movk	x6, #0x241a, lsl #32
   31e68:	movk	x6, #0x29a2, lsl #48
   31e6c:	cmp	x5, x6
   31e70:	b.hi	31e80 <PyInit__decimal@@Base+0x17ce0>  // b.pmore
   31e74:	bl	2c8a8 <PyInit__decimal@@Base+0x12708>
   31e78:	ldp	x29, x30, [sp], #16
   31e7c:	ret
   31e80:	mov	x2, x4
   31e84:	mov	w1, #0x100                 	// #256
   31e88:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   31e8c:	b	31e78 <PyInit__decimal@@Base+0x17cd8>
   31e90:	stp	x29, x30, [sp, #-16]!
   31e94:	mov	x29, sp
   31e98:	mov	x5, #0xfffc                	// #65532
   31e9c:	movk	x5, #0xf62b, lsl #16
   31ea0:	movk	x5, #0x241a, lsl #32
   31ea4:	movk	x5, #0x29a2, lsl #48
   31ea8:	add	x5, x2, x5
   31eac:	mov	x6, #0xfffc                	// #65532
   31eb0:	movk	x6, #0x9d8f, lsl #16
   31eb4:	movk	x6, #0xdace, lsl #32
   31eb8:	movk	x6, #0x3782, lsl #48
   31ebc:	cmp	x5, x6
   31ec0:	b.hi	31ed0 <PyInit__decimal@@Base+0x17d30>  // b.pmore
   31ec4:	bl	2c8a8 <PyInit__decimal@@Base+0x12708>
   31ec8:	ldp	x29, x30, [sp], #16
   31ecc:	ret
   31ed0:	mov	x2, x4
   31ed4:	mov	w1, #0x100                 	// #256
   31ed8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   31edc:	b	31ec8 <PyInit__decimal@@Base+0x17d28>
   31ee0:	stp	x29, x30, [sp, #-16]!
   31ee4:	mov	x29, sp
   31ee8:	mov	x4, x3
   31eec:	mov	x3, x2
   31ef0:	mov	x2, x1
   31ef4:	mov	x1, x0
   31ef8:	mov	w0, #0x0                   	// #0
   31efc:	bl	2cd28 <PyInit__decimal@@Base+0x12b88>
   31f00:	ldp	x29, x30, [sp], #16
   31f04:	ret
   31f08:	stp	x29, x30, [sp, #-16]!
   31f0c:	mov	x29, sp
   31f10:	mov	x4, x3
   31f14:	mov	x3, x2
   31f18:	mov	x2, x1
   31f1c:	mov	x1, x0
   31f20:	mov	w0, #0x1                   	// #1
   31f24:	bl	2cd28 <PyInit__decimal@@Base+0x12b88>
   31f28:	ldp	x29, x30, [sp], #16
   31f2c:	ret
   31f30:	stp	x29, x30, [sp, #-16]!
   31f34:	mov	x29, sp
   31f38:	mov	x4, x3
   31f3c:	mov	x3, x2
   31f40:	mov	x2, x1
   31f44:	mov	x1, x0
   31f48:	mov	w0, #0x2                   	// #2
   31f4c:	bl	2cd28 <PyInit__decimal@@Base+0x12b88>
   31f50:	ldp	x29, x30, [sp], #16
   31f54:	ret
   31f58:	stp	x29, x30, [sp, #-240]!
   31f5c:	mov	x29, sp
   31f60:	stp	x19, x20, [sp, #16]
   31f64:	stp	x21, x22, [sp, #32]
   31f68:	stp	x23, x24, [sp, #48]
   31f6c:	stp	x25, x26, [sp, #64]
   31f70:	mov	x23, x0
   31f74:	mov	x24, x1
   31f78:	mov	x20, x2
   31f7c:	mov	x19, x3
   31f80:	mov	x25, x4
   31f84:	ldrb	w1, [x2]
   31f88:	ldr	x0, [x2, #16]
   31f8c:	str	x0, [sp, #160]
   31f90:	ldr	x0, [x2, #24]
   31f94:	str	x0, [sp, #168]
   31f98:	ldr	x0, [x2, #32]
   31f9c:	str	x0, [sp, #176]
   31fa0:	ldr	x0, [x2, #40]
   31fa4:	str	x0, [sp, #184]
   31fa8:	ldrb	w0, [x3]
   31fac:	ldr	x2, [x3, #16]
   31fb0:	str	x2, [sp, #112]
   31fb4:	ldr	x2, [x3, #24]
   31fb8:	str	x2, [sp, #120]
   31fbc:	ldr	x2, [x3, #32]
   31fc0:	str	x2, [sp, #128]
   31fc4:	ldr	x2, [x3, #40]
   31fc8:	str	x2, [sp, #136]
   31fcc:	and	w1, w1, #0x1e
   31fd0:	orr	w1, w1, #0x40
   31fd4:	strb	w1, [sp, #144]
   31fd8:	and	w0, w0, #0x1e
   31fdc:	orr	w0, w0, #0x40
   31fe0:	strb	w0, [sp, #96]
   31fe4:	str	xzr, [sp, #152]
   31fe8:	str	xzr, [sp, #104]
   31fec:	cmp	x23, x20
   31ff0:	mov	x22, x23
   31ff4:	ccmp	x23, x3, #0x4, ne  // ne = any
   31ff8:	b.eq	32030 <PyInit__decimal@@Base+0x17e90>  // b.none
   31ffc:	cmp	x24, x20
   32000:	ccmp	x24, x19, #0x4, ne  // ne = any
   32004:	b.ne	3204c <PyInit__decimal@@Base+0x17eac>  // b.any
   32008:	bl	252e0 <PyInit__decimal@@Base+0xb140>
   3200c:	mov	x21, x0
   32010:	cbnz	x0, 32050 <PyInit__decimal@@Base+0x17eb0>
   32014:	ldr	w0, [x25]
   32018:	orr	w0, w0, #0x200
   3201c:	str	w0, [x25]
   32020:	cmp	x22, #0x0
   32024:	ccmp	x22, x23, #0x4, ne  // ne = any
   32028:	b.ne	3209c <PyInit__decimal@@Base+0x17efc>  // b.any
   3202c:	b	32110 <PyInit__decimal@@Base+0x17f70>
   32030:	bl	252e0 <PyInit__decimal@@Base+0xb140>
   32034:	mov	x22, x0
   32038:	cbnz	x0, 31ffc <PyInit__decimal@@Base+0x17e5c>
   3203c:	ldr	w0, [x25]
   32040:	orr	w0, w0, #0x200
   32044:	str	w0, [x25]
   32048:	b	32110 <PyInit__decimal@@Base+0x17f70>
   3204c:	mov	x21, x24
   32050:	add	x0, sp, #0xc0
   32054:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   32058:	ldr	x2, [x20, #16]
   3205c:	ldr	x0, [x19, #16]
   32060:	sub	x0, x2, x0
   32064:	add	x0, x0, #0x4
   32068:	str	x0, [sp, #192]
   3206c:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   32070:	movk	x1, #0xb6b3, lsl #32
   32074:	movk	x1, #0xde0, lsl #48
   32078:	cmp	x0, x1
   3207c:	ccmp	x2, x1, #0x0, le
   32080:	b.le	32148 <PyInit__decimal@@Base+0x17fa8>
   32084:	ldr	w0, [x25]
   32088:	orr	w0, w0, #0x8
   3208c:	str	w0, [x25]
   32090:	cmp	x22, #0x0
   32094:	ccmp	x22, x23, #0x4, ne  // ne = any
   32098:	b.eq	320d0 <PyInit__decimal@@Base+0x17f30>  // b.none
   3209c:	ldrb	w0, [x22]
   320a0:	tst	w0, #0xe0
   320a4:	b.ne	320b8 <PyInit__decimal@@Base+0x17f18>  // b.any
   320a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   320ac:	ldr	x1, [x0, #1704]
   320b0:	ldr	x0, [x22, #40]
   320b4:	blr	x1
   320b8:	ldrb	w0, [x22]
   320bc:	tbnz	w0, #4, 320d0 <PyInit__decimal@@Base+0x17f30>
   320c0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   320c4:	ldr	x1, [x0, #1704]
   320c8:	mov	x0, x22
   320cc:	blr	x1
   320d0:	cmp	x21, #0x0
   320d4:	ccmp	x24, x21, #0x4, ne  // ne = any
   320d8:	b.eq	32110 <PyInit__decimal@@Base+0x17f70>  // b.none
   320dc:	ldrb	w0, [x21]
   320e0:	tst	w0, #0xe0
   320e4:	b.ne	320f8 <PyInit__decimal@@Base+0x17f58>  // b.any
   320e8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   320ec:	ldr	x1, [x0, #1704]
   320f0:	ldr	x0, [x21, #40]
   320f4:	blr	x1
   320f8:	ldrb	w0, [x21]
   320fc:	tbnz	w0, #4, 32110 <PyInit__decimal@@Base+0x17f70>
   32100:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32104:	ldr	x1, [x0, #1704]
   32108:	mov	x0, x21
   3210c:	blr	x1
   32110:	mov	w2, #0x4                   	// #4
   32114:	mov	w1, #0x0                   	// #0
   32118:	mov	x0, x23
   3211c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32120:	mov	w2, #0x4                   	// #4
   32124:	mov	w1, #0x0                   	// #0
   32128:	mov	x0, x24
   3212c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32130:	ldp	x19, x20, [sp, #16]
   32134:	ldp	x21, x22, [sp, #32]
   32138:	ldp	x23, x24, [sp, #48]
   3213c:	ldp	x25, x26, [sp, #64]
   32140:	ldp	x29, x30, [sp], #240
   32144:	ret
   32148:	stp	x27, x28, [sp, #80]
   3214c:	add	x19, sp, #0xc0
   32150:	add	x20, sp, #0xdc
   32154:	add	x27, sp, #0x60
   32158:	mov	x3, x20
   3215c:	mov	x2, x19
   32160:	mov	x1, x27
   32164:	mov	x0, x21
   32168:	bl	30074 <PyInit__decimal@@Base+0x15ed4>
   3216c:	add	x26, sp, #0x90
   32170:	mov	x4, x20
   32174:	mov	x3, x19
   32178:	mov	x2, x21
   3217c:	mov	x1, x26
   32180:	mov	x0, x22
   32184:	bl	29384 <PyInit__decimal@@Base+0xf1e4>
   32188:	mov	x3, x20
   3218c:	mov	x2, x19
   32190:	mov	x1, x22
   32194:	mov	x0, x22
   32198:	bl	31f30 <PyInit__decimal@@Base+0x17d90>
   3219c:	ldr	x0, [sp, #160]
   321a0:	add	x0, x0, #0x3
   321a4:	str	x0, [sp, #192]
   321a8:	mov	x0, #0x2                   	// #2
   321ac:	movk	x0, #0xa764, lsl #16
   321b0:	movk	x0, #0xb6b3, lsl #32
   321b4:	movk	x0, #0xde0, lsl #48
   321b8:	str	x0, [sp, #200]
   321bc:	mov	x0, #0xfffe                	// #65534
   321c0:	movk	x0, #0x589b, lsl #16
   321c4:	movk	x0, #0x494c, lsl #32
   321c8:	movk	x0, #0xf21f, lsl #48
   321cc:	str	x0, [sp, #208]
   321d0:	mov	x4, x20
   321d4:	mov	x3, x19
   321d8:	mov	x2, x22
   321dc:	mov	x1, x27
   321e0:	mov	x0, x21
   321e4:	bl	29384 <PyInit__decimal@@Base+0xf1e4>
   321e8:	mov	x4, x20
   321ec:	mov	x3, x19
   321f0:	mov	x2, x21
   321f4:	mov	x1, x26
   321f8:	mov	x0, x21
   321fc:	bl	2f134 <PyInit__decimal@@Base+0x14f94>
   32200:	ldrb	w0, [x22]
   32204:	tst	w0, #0xe
   32208:	b.ne	32228 <PyInit__decimal@@Base+0x18088>  // b.any
   3220c:	mov	w19, #0x4                   	// #4
   32210:	adrp	x26, 5b000 <PyInit__decimal@@Base+0x40e60>
   32214:	add	x26, x26, #0xc58
   32218:	add	x28, x26, #0x30
   3221c:	add	x20, sp, #0xc0
   32220:	add	x27, x20, #0x1c
   32224:	b	32314 <PyInit__decimal@@Base+0x18174>
   32228:	ldr	w0, [sp, #220]
   3222c:	mov	w1, #0x3be                 	// #958
   32230:	and	w1, w0, w1
   32234:	ldr	w0, [x25]
   32238:	orr	w0, w0, w1
   3223c:	str	w0, [x25]
   32240:	ldp	x27, x28, [sp, #80]
   32244:	b	32090 <PyInit__decimal@@Base+0x17ef0>
   32248:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   3224c:	ldr	x19, [x19, #3904]
   32250:	mov	w3, #0x1d0b                	// #7435
   32254:	adrp	x2, 43000 <PyInit__decimal@@Base+0x28e60>
   32258:	add	x2, x2, #0x3c8
   3225c:	adrp	x1, 43000 <PyInit__decimal@@Base+0x28e60>
   32260:	add	x1, x1, #0xe8
   32264:	ldr	x0, [x19]
   32268:	bl	6a70 <fprintf@plt>
   3226c:	ldr	x3, [x19]
   32270:	mov	x2, #0x3c                  	// #60
   32274:	mov	x1, #0x1                   	// #1
   32278:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3227c:	add	x0, x0, #0x408
   32280:	bl	6930 <fwrite@plt>
   32284:	ldr	x1, [x19]
   32288:	mov	w0, #0xa                   	// #10
   3228c:	bl	65b0 <fputc@plt>
   32290:	ldr	w0, [x25]
   32294:	orr	w0, w0, #0x100
   32298:	str	w0, [x25]
   3229c:	ldp	x27, x28, [sp, #80]
   322a0:	b	32090 <PyInit__decimal@@Base+0x17ef0>
   322a4:	mov	x4, x27
   322a8:	mov	x3, x20
   322ac:	add	x2, sp, #0x60
   322b0:	mov	x1, x21
   322b4:	mov	x0, x21
   322b8:	bl	2f018 <PyInit__decimal@@Base+0x14e78>
   322bc:	mov	x4, x27
   322c0:	mov	x3, x20
   322c4:	add	x2, x26, #0x60
   322c8:	mov	x1, x22
   322cc:	mov	x0, x22
   322d0:	bl	2f018 <PyInit__decimal@@Base+0x14e78>
   322d4:	b	32308 <PyInit__decimal@@Base+0x18168>
   322d8:	mov	x4, x27
   322dc:	mov	x3, x20
   322e0:	add	x2, sp, #0x60
   322e4:	mov	x1, x21
   322e8:	mov	x0, x21
   322ec:	bl	2f134 <PyInit__decimal@@Base+0x14f94>
   322f0:	mov	x4, x27
   322f4:	mov	x3, x20
   322f8:	mov	x2, x26
   322fc:	mov	x1, x22
   32300:	mov	x0, x22
   32304:	bl	2f018 <PyInit__decimal@@Base+0x14e78>
   32308:	ldrb	w0, [x22]
   3230c:	tst	w0, #0xe
   32310:	b.ne	32228 <PyInit__decimal@@Base+0x18088>  // b.any
   32314:	ldrb	w0, [x21]
   32318:	tst	w0, #0xe
   3231c:	b.ne	32228 <PyInit__decimal@@Base+0x18088>  // b.any
   32320:	subs	w19, w19, #0x1
   32324:	b.eq	32248 <PyInit__decimal@@Base+0x180a8>  // b.none
   32328:	mov	x1, x21
   3232c:	mov	x0, x28
   32330:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   32334:	cmp	w0, #0x1
   32338:	b.eq	322a4 <PyInit__decimal@@Base+0x18104>  // b.none
   3233c:	add	x1, sp, #0x60
   32340:	mov	x0, x21
   32344:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   32348:	cmn	w0, #0x1
   3234c:	b.ne	322d8 <PyInit__decimal@@Base+0x18138>  // b.any
   32350:	cmp	x22, x23
   32354:	b.eq	323a0 <PyInit__decimal@@Base+0x18200>  // b.none
   32358:	mov	x2, x25
   3235c:	mov	x1, x22
   32360:	mov	x0, x23
   32364:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   32368:	cbz	w0, 32410 <PyInit__decimal@@Base+0x18270>
   3236c:	ldrb	w0, [x22]
   32370:	tst	w0, #0xe0
   32374:	b.ne	32388 <PyInit__decimal@@Base+0x181e8>  // b.any
   32378:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3237c:	ldr	x1, [x0, #1704]
   32380:	ldr	x0, [x22, #40]
   32384:	blr	x1
   32388:	ldrb	w0, [x22]
   3238c:	tbnz	w0, #4, 323a0 <PyInit__decimal@@Base+0x18200>
   32390:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32394:	ldr	x1, [x0, #1704]
   32398:	mov	x0, x22
   3239c:	blr	x1
   323a0:	cmp	x21, x24
   323a4:	b.eq	323f0 <PyInit__decimal@@Base+0x18250>  // b.none
   323a8:	mov	x2, x25
   323ac:	mov	x1, x21
   323b0:	mov	x0, x24
   323b4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   323b8:	cbz	w0, 32418 <PyInit__decimal@@Base+0x18278>
   323bc:	ldrb	w0, [x21]
   323c0:	tst	w0, #0xe0
   323c4:	b.ne	323d8 <PyInit__decimal@@Base+0x18238>  // b.any
   323c8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   323cc:	ldr	x1, [x0, #1704]
   323d0:	ldr	x0, [x21, #40]
   323d4:	blr	x1
   323d8:	ldrb	w0, [x21]
   323dc:	tbnz	w0, #4, 323f0 <PyInit__decimal@@Base+0x18250>
   323e0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   323e4:	ldr	x1, [x0, #1704]
   323e8:	mov	x0, x21
   323ec:	blr	x1
   323f0:	ldr	w0, [sp, #220]
   323f4:	mov	w1, #0x3be                 	// #958
   323f8:	and	w1, w0, w1
   323fc:	ldr	w0, [x25]
   32400:	orr	w0, w0, w1
   32404:	str	w0, [x25]
   32408:	ldp	x27, x28, [sp, #80]
   3240c:	b	32130 <PyInit__decimal@@Base+0x17f90>
   32410:	ldp	x27, x28, [sp, #80]
   32414:	b	3209c <PyInit__decimal@@Base+0x17efc>
   32418:	cmp	x22, x23
   3241c:	b.eq	32428 <PyInit__decimal@@Base+0x18288>  // b.none
   32420:	ldp	x27, x28, [sp, #80]
   32424:	b	3209c <PyInit__decimal@@Base+0x17efc>
   32428:	ldp	x27, x28, [sp, #80]
   3242c:	b	320dc <PyInit__decimal@@Base+0x17f3c>
   32430:	sub	sp, sp, #0x4d0
   32434:	stp	x29, x30, [sp]
   32438:	mov	x29, sp
   3243c:	stp	x19, x20, [sp, #16]
   32440:	stp	x21, x22, [sp, #32]
   32444:	stp	x23, x24, [sp, #48]
   32448:	stp	x25, x26, [sp, #64]
   3244c:	stp	x27, x28, [sp, #80]
   32450:	mov	w26, w0
   32454:	mov	x21, x1
   32458:	mov	x19, x2
   3245c:	mov	x20, x3
   32460:	mov	x24, x4
   32464:	mov	x23, x5
   32468:	mov	w0, #0x30                  	// #48
   3246c:	strb	w0, [sp, #672]
   32470:	str	xzr, [sp, #680]
   32474:	str	xzr, [sp, #688]
   32478:	str	xzr, [sp, #696]
   3247c:	mov	x0, #0x40                  	// #64
   32480:	str	x0, [sp, #704]
   32484:	add	x0, sp, #0x2d0
   32488:	str	x0, [sp, #712]
   3248c:	ldrb	w25, [x2]
   32490:	ldrb	w27, [x3]
   32494:	orr	w0, w25, w27
   32498:	tst	w0, #0xe
   3249c:	b.eq	32550 <PyInit__decimal@@Base+0x183b0>  // b.none
   324a0:	mov	x4, x5
   324a4:	mov	x3, x24
   324a8:	mov	x2, x20
   324ac:	mov	x1, x19
   324b0:	mov	x0, x21
   324b4:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   324b8:	cbz	w0, 324dc <PyInit__decimal@@Base+0x1833c>
   324bc:	ldp	x19, x20, [sp, #16]
   324c0:	ldp	x21, x22, [sp, #32]
   324c4:	ldp	x23, x24, [sp, #48]
   324c8:	ldp	x25, x26, [sp, #64]
   324cc:	ldp	x27, x28, [sp, #80]
   324d0:	ldp	x29, x30, [sp]
   324d4:	add	sp, sp, #0x4d0
   324d8:	ret
   324dc:	ldrb	w1, [x19]
   324e0:	tbz	w1, #1, 32518 <PyInit__decimal@@Base+0x18378>
   324e4:	ldrb	w0, [x20]
   324e8:	tbz	w0, #1, 32500 <PyInit__decimal@@Base+0x18360>
   324ec:	mov	x2, x23
   324f0:	mov	w1, #0x100                 	// #256
   324f4:	mov	x0, x21
   324f8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   324fc:	b	324bc <PyInit__decimal@@Base+0x1831c>
   32500:	eor	w1, w1, w0
   32504:	mov	w2, #0x2                   	// #2
   32508:	and	w1, w1, #0x1
   3250c:	mov	x0, x21
   32510:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32514:	b	324bc <PyInit__decimal@@Base+0x1831c>
   32518:	ldr	x0, [x24, #16]
   3251c:	add	x0, x0, #0x1
   32520:	ldr	x3, [x24]
   32524:	ldrb	w2, [x20]
   32528:	eor	w1, w1, w2
   3252c:	sub	x3, x0, x3
   32530:	mov	x2, #0x0                   	// #0
   32534:	and	w1, w1, #0x1
   32538:	mov	x0, x21
   3253c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   32540:	ldr	w0, [x23]
   32544:	orr	w0, w0, #0x1
   32548:	str	w0, [x23]
   3254c:	b	324bc <PyInit__decimal@@Base+0x1831c>
   32550:	ldr	x0, [x3, #24]
   32554:	ldr	x1, [x3, #40]
   32558:	add	x0, x1, x0, lsl #3
   3255c:	ldur	x0, [x0, #-8]
   32560:	cbz	x0, 32724 <PyInit__decimal@@Base+0x18584>
   32564:	ldr	x0, [x2, #24]
   32568:	ldr	x1, [x2, #40]
   3256c:	add	x0, x1, x0, lsl #3
   32570:	ldur	x0, [x0, #-8]
   32574:	cbz	x0, 32770 <PyInit__decimal@@Base+0x185d0>
   32578:	ldr	x2, [x3, #16]
   3257c:	ldr	x0, [x4]
   32580:	add	x2, x2, x0
   32584:	ldr	x0, [x19, #16]
   32588:	sub	x2, x2, x0
   3258c:	add	x28, x2, #0x1
   32590:	ldr	x0, [x19, #8]
   32594:	str	x0, [sp, #96]
   32598:	ldr	x0, [x3, #8]
   3259c:	str	x0, [sp, #104]
   325a0:	cmp	x28, #0x0
   325a4:	b.gt	327a4 <PyInit__decimal@@Base+0x18604>
   325a8:	tbnz	x28, #63, 327d4 <PyInit__decimal@@Base+0x18634>
   325ac:	ldr	x0, [x20, #24]
   325b0:	mov	x22, #0x1                   	// #1
   325b4:	sub	x22, x22, x0
   325b8:	ldr	x1, [x19, #24]
   325bc:	add	x22, x22, x1
   325c0:	cmp	x20, x21
   325c4:	ccmp	x19, x21, #0x4, ne  // ne = any
   325c8:	b.ne	3282c <PyInit__decimal@@Base+0x1868c>  // b.any
   325cc:	cmp	x0, x22
   325d0:	ccmp	x20, x21, #0x0, lt  // lt = tstop
   325d4:	b.eq	3282c <PyInit__decimal@@Base+0x1868c>  // b.none
   325d8:	ldr	x5, [x20, #24]
   325dc:	cmp	x5, #0x1
   325e0:	b.eq	3288c <PyInit__decimal@@Base+0x186ec>  // b.none
   325e4:	cmp	x5, #0x400
   325e8:	b.gt	328c0 <PyInit__decimal@@Base+0x18720>
   325ec:	ldr	x4, [x19, #24]
   325f0:	ldr	x3, [x20, #40]
   325f4:	ldr	x2, [x19, #40]
   325f8:	mov	x1, #0x0                   	// #0
   325fc:	ldr	x0, [x21, #40]
   32600:	bl	1b70c <PyInit__decimal@@Base+0x156c>
   32604:	sxtw	x19, w0
   32608:	tbnz	w0, #31, 328ac <PyInit__decimal@@Base+0x1870c>
   3260c:	ldr	x1, [x21, #40]
   32610:	sub	x1, x1, #0x8
   32614:	cmp	x22, #0x1
   32618:	b.le	32630 <PyInit__decimal@@Base+0x18490>
   3261c:	ldr	x0, [x1, x22, lsl #3]
   32620:	cbnz	x0, 32630 <PyInit__decimal@@Base+0x18490>
   32624:	sub	x22, x22, #0x1
   32628:	cmp	x22, #0x1
   3262c:	b.ne	3261c <PyInit__decimal@@Base+0x1847c>  // b.any
   32630:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32634:	ldr	x1, [x0, #1672]
   32638:	cmp	x1, x22
   3263c:	csel	x1, x1, x22, ge  // ge = tcont
   32640:	ldr	x0, [x21, #32]
   32644:	cmp	x1, x0
   32648:	b.eq	3265c <PyInit__decimal@@Base+0x184bc>  // b.none
   3264c:	ldrb	w2, [x21]
   32650:	tbz	w2, #5, 329b8 <PyInit__decimal@@Base+0x18818>
   32654:	cmp	x1, x0
   32658:	b.gt	329a8 <PyInit__decimal@@Base+0x18808>
   3265c:	eor	w0, w25, w27
   32660:	and	w0, w0, #0x1
   32664:	ldrb	w1, [x21]
   32668:	and	w1, w1, #0xfffffff0
   3266c:	orr	w0, w0, w1
   32670:	strb	w0, [x21]
   32674:	str	x22, [x21, #24]
   32678:	ldr	x2, [x21, #40]
   3267c:	add	x0, x2, x22, lsl #3
   32680:	ldur	x0, [x0, #-8]
   32684:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32688:	ldr	x1, [x1, #3584]
   3268c:	cmp	x0, x1
   32690:	b.cs	32a34 <PyInit__decimal@@Base+0x18894>  // b.hs, b.nlast
   32694:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32698:	ldr	x1, [x1, #3544]
   3269c:	cmp	x0, x1
   326a0:	b.cs	329e0 <PyInit__decimal@@Base+0x18840>  // b.hs, b.nlast
   326a4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   326a8:	ldr	x1, [x1, #3528]
   326ac:	cmp	x0, x1
   326b0:	b.cs	329c8 <PyInit__decimal@@Base+0x18828>  // b.hs, b.nlast
   326b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   326b8:	ldr	x1, [x1, #3520]
   326bc:	cmp	x0, x1
   326c0:	cset	w1, cs  // cs = hs, nlast
   326c4:	add	w1, w1, #0x1
   326c8:	ldr	x0, [sp, #96]
   326cc:	ldr	x3, [sp, #104]
   326d0:	sub	x20, x0, x3
   326d4:	sub	x20, x20, x28
   326d8:	sub	x22, x22, #0x1
   326dc:	add	x0, x22, x22, lsl #2
   326e0:	lsl	x0, x0, #2
   326e4:	sub	x22, x0, x22
   326e8:	add	x22, x22, w1, sxtw
   326ec:	str	x22, [x21, #16]
   326f0:	cbz	x19, 32b00 <PyInit__decimal@@Base+0x18960>
   326f4:	ldr	x1, [x2]
   326f8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   326fc:	movk	x0, #0xcccd
   32700:	umulh	x0, x1, x0
   32704:	lsr	x0, x0, #3
   32708:	add	x0, x0, x0, lsl #2
   3270c:	subs	x0, x1, x0, lsl #1
   32710:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   32714:	b.ne	32b0c <PyInit__decimal@@Base+0x1896c>  // b.any
   32718:	add	x1, x1, #0x1
   3271c:	str	x1, [x2]
   32720:	b	32b0c <PyInit__decimal@@Base+0x1896c>
   32724:	ldr	x0, [x2, #24]
   32728:	ldr	x1, [x2, #40]
   3272c:	add	x0, x1, x0, lsl #3
   32730:	ldur	x0, [x0, #-8]
   32734:	cbnz	x0, 3274c <PyInit__decimal@@Base+0x185ac>
   32738:	mov	x2, x5
   3273c:	mov	w1, #0x10                  	// #16
   32740:	mov	x0, x21
   32744:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   32748:	b	324bc <PyInit__decimal@@Base+0x1831c>
   3274c:	eor	w1, w25, w27
   32750:	mov	w2, #0x2                   	// #2
   32754:	and	w1, w1, #0x1
   32758:	mov	x0, x21
   3275c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32760:	ldr	w0, [x23]
   32764:	orr	w0, w0, #0x4
   32768:	str	w0, [x23]
   3276c:	b	324bc <PyInit__decimal@@Base+0x1831c>
   32770:	ldr	x3, [x2, #8]
   32774:	ldr	x0, [x20, #8]
   32778:	eor	w1, w25, w27
   3277c:	sub	x3, x3, x0
   32780:	mov	x2, #0x0                   	// #0
   32784:	and	w1, w1, #0x1
   32788:	mov	x0, x21
   3278c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   32790:	mov	x2, x23
   32794:	mov	x1, x24
   32798:	mov	x0, x21
   3279c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   327a0:	b	324bc <PyInit__decimal@@Base+0x1831c>
   327a4:	mov	x3, x5
   327a8:	mov	x2, x28
   327ac:	mov	x1, x19
   327b0:	add	x0, sp, #0x2a0
   327b4:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   327b8:	add	x19, sp, #0x2a0
   327bc:	cbnz	w0, 325ac <PyInit__decimal@@Base+0x1840c>
   327c0:	mov	x2, x23
   327c4:	mov	w1, #0x200                 	// #512
   327c8:	mov	x0, x21
   327cc:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   327d0:	b	32b10 <PyInit__decimal@@Base+0x18970>
   327d4:	mov	x3, x5
   327d8:	mvn	x2, x2
   327dc:	mov	x1, x20
   327e0:	add	x0, sp, #0x2a0
   327e4:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   327e8:	cbz	w0, 32814 <PyInit__decimal@@Base+0x18674>
   327ec:	mov	x22, #0x1                   	// #1
   327f0:	ldr	x0, [sp, #696]
   327f4:	sub	x22, x22, x0
   327f8:	ldr	x0, [x19, #24]
   327fc:	add	x22, x22, x0
   32800:	cmp	x19, x21
   32804:	b.ne	32828 <PyInit__decimal@@Base+0x18688>  // b.any
   32808:	mov	x19, x21
   3280c:	add	x20, sp, #0x2a0
   32810:	b	325d8 <PyInit__decimal@@Base+0x18438>
   32814:	mov	x2, x23
   32818:	mov	w1, #0x200                 	// #512
   3281c:	mov	x0, x21
   32820:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   32824:	b	32b10 <PyInit__decimal@@Base+0x18970>
   32828:	add	x20, sp, #0x2a0
   3282c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32830:	ldr	x1, [x0, #1672]
   32834:	cmp	x1, x22
   32838:	csel	x1, x1, x22, ge  // ge = tcont
   3283c:	ldr	x0, [x21, #32]
   32840:	cmp	x1, x0
   32844:	b.eq	325d8 <PyInit__decimal@@Base+0x18438>  // b.none
   32848:	ldrb	w2, [x21]
   3284c:	tbz	w2, #5, 32868 <PyInit__decimal@@Base+0x186c8>
   32850:	cmp	x1, x0
   32854:	b.le	325d8 <PyInit__decimal@@Base+0x18438>
   32858:	mov	x2, x23
   3285c:	mov	x0, x21
   32860:	bl	25338 <PyInit__decimal@@Base+0xb198>
   32864:	b	32874 <PyInit__decimal@@Base+0x186d4>
   32868:	mov	x2, x23
   3286c:	mov	x0, x21
   32870:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   32874:	cbnz	w0, 325d8 <PyInit__decimal@@Base+0x18438>
   32878:	mov	x2, x23
   3287c:	mov	w1, #0x200                 	// #512
   32880:	mov	x0, x21
   32884:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   32888:	b	32b10 <PyInit__decimal@@Base+0x18970>
   3288c:	ldr	x0, [x20, #40]
   32890:	ldr	x3, [x0]
   32894:	ldr	x2, [x19, #24]
   32898:	ldr	x1, [x19, #40]
   3289c:	ldr	x0, [x21, #40]
   328a0:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   328a4:	mov	x19, x0
   328a8:	b	3260c <PyInit__decimal@@Base+0x1846c>
   328ac:	mov	x2, x23
   328b0:	mov	w1, #0x200                 	// #512
   328b4:	mov	x0, x21
   328b8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   328bc:	b	32b10 <PyInit__decimal@@Base+0x18970>
   328c0:	mov	w0, #0x30                  	// #48
   328c4:	strb	w0, [sp, #112]
   328c8:	str	xzr, [sp, #120]
   328cc:	str	xzr, [sp, #128]
   328d0:	str	xzr, [sp, #136]
   328d4:	mov	x0, #0x40                  	// #64
   328d8:	str	x0, [sp, #144]
   328dc:	add	x0, sp, #0xa0
   328e0:	str	x0, [sp, #152]
   328e4:	mov	x4, x23
   328e8:	mov	x3, x20
   328ec:	mov	x2, x19
   328f0:	add	x1, sp, #0x70
   328f4:	mov	x0, x21
   328f8:	bl	31f58 <PyInit__decimal@@Base+0x17db8>
   328fc:	ldrb	w0, [x21]
   32900:	tst	w0, #0xe
   32904:	b.ne	32960 <PyInit__decimal@@Base+0x187c0>  // b.any
   32908:	ldrb	w1, [sp, #112]
   3290c:	tst	w1, #0xe
   32910:	b.ne	32960 <PyInit__decimal@@Base+0x187c0>  // b.any
   32914:	ldr	x0, [sp, #152]
   32918:	ldr	x2, [sp, #136]
   3291c:	add	x2, x0, x2, lsl #3
   32920:	ldur	x2, [x2, #-8]
   32924:	cmp	x2, #0x0
   32928:	cset	x19, ne  // ne = any
   3292c:	tst	w1, #0xe0
   32930:	b.ne	32940 <PyInit__decimal@@Base+0x187a0>  // b.any
   32934:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   32938:	ldr	x1, [x1, #1704]
   3293c:	blr	x1
   32940:	ldrb	w0, [sp, #112]
   32944:	tbnz	w0, #4, 32958 <PyInit__decimal@@Base+0x187b8>
   32948:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3294c:	ldr	x1, [x0, #1704]
   32950:	add	x0, sp, #0x70
   32954:	blr	x1
   32958:	ldr	x22, [x21, #24]
   3295c:	b	3260c <PyInit__decimal@@Base+0x1846c>
   32960:	mov	w2, #0x4                   	// #4
   32964:	mov	w1, #0x0                   	// #0
   32968:	mov	x0, x21
   3296c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32970:	ldrb	w0, [sp, #112]
   32974:	tst	w0, #0xe0
   32978:	b.ne	3298c <PyInit__decimal@@Base+0x187ec>  // b.any
   3297c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32980:	ldr	x1, [x0, #1704]
   32984:	ldr	x0, [sp, #152]
   32988:	blr	x1
   3298c:	ldrb	w0, [sp, #112]
   32990:	tbnz	w0, #4, 32b10 <PyInit__decimal@@Base+0x18970>
   32994:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32998:	ldr	x1, [x0, #1704]
   3299c:	add	x0, sp, #0x70
   329a0:	blr	x1
   329a4:	b	32b10 <PyInit__decimal@@Base+0x18970>
   329a8:	mov	x2, x23
   329ac:	mov	x0, x21
   329b0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   329b4:	b	3265c <PyInit__decimal@@Base+0x184bc>
   329b8:	mov	x2, x23
   329bc:	mov	x0, x21
   329c0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   329c4:	b	3265c <PyInit__decimal@@Base+0x184bc>
   329c8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   329cc:	ldr	x1, [x1, #3536]
   329d0:	cmp	x0, x1
   329d4:	cset	w1, cs  // cs = hs, nlast
   329d8:	add	w1, w1, #0x3
   329dc:	b	326c8 <PyInit__decimal@@Base+0x18528>
   329e0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   329e4:	ldr	x1, [x1, #3560]
   329e8:	cmp	x0, x1
   329ec:	b.cc	32a1c <PyInit__decimal@@Base+0x1887c>  // b.lo, b.ul, b.last
   329f0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   329f4:	ldr	x3, [x1, #3576]
   329f8:	mov	w1, #0x9                   	// #9
   329fc:	cmp	x0, x3
   32a00:	b.cs	326c8 <PyInit__decimal@@Base+0x18528>  // b.hs, b.nlast
   32a04:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a08:	ldr	x1, [x1, #3568]
   32a0c:	cmp	x0, x1
   32a10:	cset	w1, cs  // cs = hs, nlast
   32a14:	add	w1, w1, #0x7
   32a18:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32a1c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a20:	ldr	x1, [x1, #3552]
   32a24:	cmp	x0, x1
   32a28:	cset	w1, cs  // cs = hs, nlast
   32a2c:	add	w1, w1, #0x5
   32a30:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32a34:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a38:	ldr	x1, [x1, #3624]
   32a3c:	cmp	x0, x1
   32a40:	b.cs	32a98 <PyInit__decimal@@Base+0x188f8>  // b.hs, b.nlast
   32a44:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a48:	ldr	x1, [x1, #3600]
   32a4c:	cmp	x0, x1
   32a50:	b.cc	32a80 <PyInit__decimal@@Base+0x188e0>  // b.lo, b.ul, b.last
   32a54:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a58:	ldr	x3, [x1, #3616]
   32a5c:	mov	w1, #0xe                   	// #14
   32a60:	cmp	x0, x3
   32a64:	b.cs	326c8 <PyInit__decimal@@Base+0x18528>  // b.hs, b.nlast
   32a68:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a6c:	ldr	x1, [x1, #3608]
   32a70:	cmp	x0, x1
   32a74:	cset	w1, cs  // cs = hs, nlast
   32a78:	add	w1, w1, #0xc
   32a7c:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32a80:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a84:	ldr	x1, [x1, #3592]
   32a88:	cmp	x0, x1
   32a8c:	cset	w1, cs  // cs = hs, nlast
   32a90:	add	w1, w1, #0xa
   32a94:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32a98:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32a9c:	ldr	x1, [x1, #3656]
   32aa0:	cmp	x0, x1
   32aa4:	b.cs	32ae8 <PyInit__decimal@@Base+0x18948>  // b.hs, b.nlast
   32aa8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32aac:	ldr	x1, [x1, #3640]
   32ab0:	cmp	x0, x1
   32ab4:	b.cs	32ad0 <PyInit__decimal@@Base+0x18930>  // b.hs, b.nlast
   32ab8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32abc:	ldr	x1, [x1, #3632]
   32ac0:	cmp	x0, x1
   32ac4:	cset	w1, cs  // cs = hs, nlast
   32ac8:	add	w1, w1, #0xf
   32acc:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32ad0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32ad4:	ldr	x1, [x1, #3648]
   32ad8:	cmp	x0, x1
   32adc:	cset	w1, cs  // cs = hs, nlast
   32ae0:	add	w1, w1, #0x11
   32ae4:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32ae8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32aec:	ldr	x1, [x1, #3664]
   32af0:	cmp	x0, x1
   32af4:	cset	w1, cs  // cs = hs, nlast
   32af8:	add	w1, w1, #0x13
   32afc:	b	326c8 <PyInit__decimal@@Base+0x18528>
   32b00:	cmp	x28, #0x0
   32b04:	ccmp	w26, #0x1, #0x0, gt
   32b08:	b.eq	32b58 <PyInit__decimal@@Base+0x189b8>  // b.none
   32b0c:	str	x20, [x21, #8]
   32b10:	ldrb	w0, [sp, #672]
   32b14:	tst	w0, #0xe0
   32b18:	b.ne	32b2c <PyInit__decimal@@Base+0x1898c>  // b.any
   32b1c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32b20:	ldr	x1, [x0, #1704]
   32b24:	ldr	x0, [sp, #712]
   32b28:	blr	x1
   32b2c:	ldrb	w0, [sp, #672]
   32b30:	tbnz	w0, #4, 32b44 <PyInit__decimal@@Base+0x189a4>
   32b34:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32b38:	ldr	x1, [x0, #1704]
   32b3c:	add	x0, sp, #0x2a0
   32b40:	blr	x1
   32b44:	mov	x2, x23
   32b48:	mov	x1, x24
   32b4c:	mov	x0, x21
   32b50:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   32b54:	b	324bc <PyInit__decimal@@Base+0x1831c>
   32b58:	mov	x0, x21
   32b5c:	bl	28a38 <PyInit__decimal@@Base+0xe898>
   32b60:	cmp	x28, x0
   32b64:	csel	x28, x28, x0, le
   32b68:	mov	x1, x28
   32b6c:	mov	x0, x21
   32b70:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   32b74:	add	x20, x20, x28
   32b78:	b	32b0c <PyInit__decimal@@Base+0x1896c>
   32b7c:	stp	x29, x30, [sp, #-16]!
   32b80:	mov	x29, sp
   32b84:	mov	x5, x4
   32b88:	mov	x4, x3
   32b8c:	mov	x3, x2
   32b90:	mov	x2, x1
   32b94:	mov	x1, x0
   32b98:	mov	w0, #0x1                   	// #1
   32b9c:	bl	32430 <PyInit__decimal@@Base+0x18290>
   32ba0:	ldp	x29, x30, [sp], #16
   32ba4:	ret
   32ba8:	sub	sp, sp, #0x2b0
   32bac:	stp	x29, x30, [sp]
   32bb0:	mov	x29, sp
   32bb4:	stp	x19, x20, [sp, #16]
   32bb8:	stp	x21, x22, [sp, #32]
   32bbc:	stp	x23, x24, [sp, #48]
   32bc0:	str	x25, [sp, #64]
   32bc4:	mov	x21, x0
   32bc8:	mov	x22, x1
   32bcc:	mov	x24, x2
   32bd0:	mov	x23, x3
   32bd4:	mov	x20, x4
   32bd8:	mov	w0, #0x30                  	// #48
   32bdc:	strb	w0, [sp, #80]
   32be0:	str	xzr, [sp, #88]
   32be4:	str	xzr, [sp, #96]
   32be8:	str	xzr, [sp, #104]
   32bec:	mov	x0, #0x40                  	// #64
   32bf0:	str	x0, [sp, #112]
   32bf4:	add	x0, sp, #0x80
   32bf8:	str	x0, [sp, #120]
   32bfc:	add	x25, sp, #0x280
   32c00:	mov	x0, x25
   32c04:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   32c08:	add	x19, sp, #0x50
   32c0c:	mov	x3, x20
   32c10:	mov	x2, x25
   32c14:	mov	x1, x24
   32c18:	mov	x0, x19
   32c1c:	bl	2c494 <PyInit__decimal@@Base+0x122f4>
   32c20:	mov	x4, x20
   32c24:	mov	x3, x23
   32c28:	mov	x2, x19
   32c2c:	mov	x1, x22
   32c30:	mov	x0, x21
   32c34:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
   32c38:	ldrb	w0, [sp, #80]
   32c3c:	tst	w0, #0xe0
   32c40:	b.ne	32c54 <PyInit__decimal@@Base+0x18ab4>  // b.any
   32c44:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32c48:	ldr	x1, [x0, #1704]
   32c4c:	ldr	x0, [sp, #120]
   32c50:	blr	x1
   32c54:	ldrb	w0, [sp, #80]
   32c58:	tbnz	w0, #4, 32c6c <PyInit__decimal@@Base+0x18acc>
   32c5c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32c60:	ldr	x1, [x0, #1704]
   32c64:	add	x0, sp, #0x50
   32c68:	blr	x1
   32c6c:	ldp	x19, x20, [sp, #16]
   32c70:	ldp	x21, x22, [sp, #32]
   32c74:	ldp	x23, x24, [sp, #48]
   32c78:	ldr	x25, [sp, #64]
   32c7c:	ldp	x29, x30, [sp]
   32c80:	add	sp, sp, #0x2b0
   32c84:	ret
   32c88:	stp	x29, x30, [sp, #-16]!
   32c8c:	mov	x29, sp
   32c90:	sxtw	x2, w2
   32c94:	bl	32ba8 <PyInit__decimal@@Base+0x18a08>
   32c98:	ldp	x29, x30, [sp], #16
   32c9c:	ret
   32ca0:	stp	x29, x30, [sp, #-16]!
   32ca4:	mov	x29, sp
   32ca8:	bl	32ba8 <PyInit__decimal@@Base+0x18a08>
   32cac:	ldp	x29, x30, [sp], #16
   32cb0:	ret
   32cb4:	sub	sp, sp, #0x2b0
   32cb8:	stp	x29, x30, [sp]
   32cbc:	mov	x29, sp
   32cc0:	stp	x19, x20, [sp, #16]
   32cc4:	stp	x21, x22, [sp, #32]
   32cc8:	stp	x23, x24, [sp, #48]
   32ccc:	str	x25, [sp, #64]
   32cd0:	mov	x21, x0
   32cd4:	mov	x22, x1
   32cd8:	mov	x24, x2
   32cdc:	mov	x23, x3
   32ce0:	mov	x20, x4
   32ce4:	mov	w0, #0x30                  	// #48
   32ce8:	strb	w0, [sp, #80]
   32cec:	str	xzr, [sp, #88]
   32cf0:	str	xzr, [sp, #96]
   32cf4:	str	xzr, [sp, #104]
   32cf8:	mov	x0, #0x40                  	// #64
   32cfc:	str	x0, [sp, #112]
   32d00:	add	x0, sp, #0x80
   32d04:	str	x0, [sp, #120]
   32d08:	add	x25, sp, #0x280
   32d0c:	mov	x0, x25
   32d10:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   32d14:	add	x19, sp, #0x50
   32d18:	mov	x3, x20
   32d1c:	mov	x2, x25
   32d20:	mov	x1, x24
   32d24:	mov	x0, x19
   32d28:	bl	2c5f8 <PyInit__decimal@@Base+0x12458>
   32d2c:	mov	x4, x20
   32d30:	mov	x3, x23
   32d34:	mov	x2, x19
   32d38:	mov	x1, x22
   32d3c:	mov	x0, x21
   32d40:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
   32d44:	ldrb	w0, [sp, #80]
   32d48:	tst	w0, #0xe0
   32d4c:	b.ne	32d60 <PyInit__decimal@@Base+0x18bc0>  // b.any
   32d50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32d54:	ldr	x1, [x0, #1704]
   32d58:	ldr	x0, [sp, #120]
   32d5c:	blr	x1
   32d60:	ldrb	w0, [sp, #80]
   32d64:	tbnz	w0, #4, 32d78 <PyInit__decimal@@Base+0x18bd8>
   32d68:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   32d6c:	ldr	x1, [x0, #1704]
   32d70:	add	x0, sp, #0x50
   32d74:	blr	x1
   32d78:	ldp	x19, x20, [sp, #16]
   32d7c:	ldp	x21, x22, [sp, #32]
   32d80:	ldp	x23, x24, [sp, #48]
   32d84:	ldr	x25, [sp, #64]
   32d88:	ldp	x29, x30, [sp]
   32d8c:	add	sp, sp, #0x2b0
   32d90:	ret
   32d94:	stp	x29, x30, [sp, #-16]!
   32d98:	mov	x29, sp
   32d9c:	mov	w2, w2
   32da0:	bl	32cb4 <PyInit__decimal@@Base+0x18b14>
   32da4:	ldp	x29, x30, [sp], #16
   32da8:	ret
   32dac:	stp	x29, x30, [sp, #-16]!
   32db0:	mov	x29, sp
   32db4:	bl	32cb4 <PyInit__decimal@@Base+0x18b14>
   32db8:	ldp	x29, x30, [sp], #16
   32dbc:	ret
   32dc0:	sub	sp, sp, #0x590
   32dc4:	stp	x29, x30, [sp]
   32dc8:	mov	x29, sp
   32dcc:	stp	x19, x20, [sp, #16]
   32dd0:	stp	x21, x22, [sp, #32]
   32dd4:	mov	x19, x0
   32dd8:	mov	x20, x1
   32ddc:	mov	x22, x2
   32de0:	mov	w1, #0x30                  	// #48
   32de4:	strb	w1, [sp, #816]
   32de8:	str	xzr, [sp, #824]
   32dec:	str	xzr, [sp, #832]
   32df0:	str	xzr, [sp, #840]
   32df4:	mov	x0, #0x40                  	// #64
   32df8:	str	x0, [sp, #848]
   32dfc:	add	x2, sp, #0x360
   32e00:	str	x2, [sp, #856]
   32e04:	strb	w1, [sp, #256]
   32e08:	str	xzr, [sp, #264]
   32e0c:	str	xzr, [sp, #272]
   32e10:	str	xzr, [sp, #280]
   32e14:	str	x0, [sp, #288]
   32e18:	add	x0, sp, #0x130
   32e1c:	str	x0, [sp, #296]
   32e20:	mov	x0, #0x1                   	// #1
   32e24:	str	x0, [sp, #248]
   32e28:	mov	w1, #0xffffff90            	// #-112
   32e2c:	strb	w1, [sp, #200]
   32e30:	str	xzr, [sp, #208]
   32e34:	str	x0, [sp, #216]
   32e38:	str	x0, [sp, #224]
   32e3c:	str	x0, [sp, #232]
   32e40:	add	x0, sp, #0xf8
   32e44:	str	x0, [sp, #240]
   32e48:	ldr	x0, [x20, #40]
   32e4c:	ldr	x1, [x20, #24]
   32e50:	add	x2, x0, x1, lsl #3
   32e54:	ldur	x2, [x2, #-8]
   32e58:	cbz	x2, 32eb8 <PyInit__decimal@@Base+0x18d18>
   32e5c:	stp	x23, x24, [sp, #48]
   32e60:	mov	x21, x3
   32e64:	ldr	x3, [x20, #16]
   32e68:	ldr	x4, [x20, #8]
   32e6c:	add	x23, x3, x4
   32e70:	cmp	x23, #0x13
   32e74:	b.le	32f08 <PyInit__decimal@@Base+0x18d68>
   32e78:	ldrb	w0, [x20]
   32e7c:	tbnz	w0, #0, 32ed0 <PyInit__decimal@@Base+0x18d30>
   32e80:	mov	w2, #0x2                   	// #2
   32e84:	mov	w1, #0x0                   	// #0
   32e88:	mov	x0, x19
   32e8c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   32e90:	ldr	w0, [x21]
   32e94:	mov	w1, #0x1840                	// #6208
   32e98:	orr	w0, w0, w1
   32e9c:	str	w0, [x21]
   32ea0:	ldp	x23, x24, [sp, #48]
   32ea4:	ldp	x19, x20, [sp, #16]
   32ea8:	ldp	x21, x22, [sp, #32]
   32eac:	ldp	x29, x30, [sp]
   32eb0:	add	sp, sp, #0x590
   32eb4:	ret
   32eb8:	mov	x3, #0x0                   	// #0
   32ebc:	mov	x2, #0x1                   	// #1
   32ec0:	mov	w1, #0x0                   	// #0
   32ec4:	mov	x0, x19
   32ec8:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   32ecc:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   32ed0:	ldr	x0, [x22, #16]
   32ed4:	add	x0, x0, #0x1
   32ed8:	ldr	x3, [x22]
   32edc:	sub	x3, x0, x3
   32ee0:	mov	x2, #0x0                   	// #0
   32ee4:	mov	w1, #0x0                   	// #0
   32ee8:	mov	x0, x19
   32eec:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   32ef0:	ldr	w0, [x21]
   32ef4:	mov	w1, #0x7041                	// #28737
   32ef8:	orr	w0, w0, w1
   32efc:	str	w0, [x21]
   32f00:	ldp	x23, x24, [sp, #48]
   32f04:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   32f08:	mov	x2, #0x9                   	// #9
   32f0c:	str	x2, [sp, #96]
   32f10:	mov	w2, #0xffffff90            	// #-112
   32f14:	strb	w2, [sp, #104]
   32f18:	ldr	x2, [x22]
   32f1c:	mvn	x2, x2
   32f20:	str	x2, [sp, #112]
   32f24:	mov	x2, #0x1                   	// #1
   32f28:	str	x2, [sp, #120]
   32f2c:	str	x2, [sp, #128]
   32f30:	str	x2, [sp, #136]
   32f34:	add	x2, sp, #0x60
   32f38:	str	x2, [sp, #144]
   32f3c:	ldrb	w2, [x20]
   32f40:	and	w2, w2, #0xe
   32f44:	str	x4, [sp, #160]
   32f48:	str	x3, [sp, #168]
   32f4c:	str	x1, [sp, #176]
   32f50:	ldr	x1, [x20, #32]
   32f54:	str	x1, [sp, #184]
   32f58:	str	x0, [sp, #192]
   32f5c:	mov	w0, #0x50                  	// #80
   32f60:	orr	w0, w2, w0
   32f64:	strb	w0, [sp, #152]
   32f68:	add	x1, sp, #0x68
   32f6c:	add	x0, sp, #0x98
   32f70:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   32f74:	cmp	w0, #0x0
   32f78:	b.le	330b4 <PyInit__decimal@@Base+0x18f14>
   32f7c:	cmp	x23, #0x0
   32f80:	csel	x23, x23, xzr, ge  // ge = tcont
   32f84:	add	x0, sp, #0x560
   32f88:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   32f8c:	ldr	x0, [x22]
   32f90:	add	x0, x0, #0x2
   32f94:	add	x0, x0, x23
   32f98:	cmp	x0, #0xa
   32f9c:	mov	x1, #0xa                   	// #10
   32fa0:	csel	x0, x0, x1, ge  // ge = tcont
   32fa4:	str	x0, [sp, #1376]
   32fa8:	mov	w0, #0x6                   	// #6
   32fac:	str	w0, [sp, #1412]
   32fb0:	mov	x2, x21
   32fb4:	mov	x1, x20
   32fb8:	mov	x0, x19
   32fbc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   32fc0:	cbz	w0, 335e8 <PyInit__decimal@@Base+0x19448>
   32fc4:	ldr	x2, [x19, #8]
   32fc8:	sub	x2, x2, x23
   32fcc:	str	x2, [x19, #8]
   32fd0:	ldr	x0, [sp, #1376]
   32fd4:	mov	x1, #0x10000000000000      	// #4503599627370496
   32fd8:	cmp	x0, x1
   32fdc:	b.gt	33220 <PyInit__decimal@@Base+0x19080>
   32fe0:	stp	x25, x26, [sp, #64]
   32fe4:	stp	x27, x28, [sp, #80]
   32fe8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32fec:	ldr	x26, [x1, #3584]
   32ff0:	cmp	x0, x26
   32ff4:	b.cs	3314c <PyInit__decimal@@Base+0x18fac>  // b.hs, b.nlast
   32ff8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   32ffc:	ldr	x1, [x1, #3544]
   33000:	cmp	x0, x1
   33004:	b.cs	330f8 <PyInit__decimal@@Base+0x18f58>  // b.hs, b.nlast
   33008:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3300c:	ldr	x1, [x1, #3528]
   33010:	cmp	x0, x1
   33014:	b.cs	330e0 <PyInit__decimal@@Base+0x18f40>  // b.hs, b.nlast
   33018:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3301c:	ldr	x1, [x1, #3520]
   33020:	cmp	x0, x1
   33024:	cset	w1, cs  // cs = hs, nlast
   33028:	add	w1, w1, #0x1
   3302c:	scvtf	d0, x0
   33030:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   33034:	ldr	d1, [x0, #1104]
   33038:	fmul	d0, d0, d1
   3303c:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   33040:	ldr	d1, [x0, #1112]
   33044:	fsub	d0, d0, d1
   33048:	sub	w1, w1, #0x1
   3304c:	sxtw	x1, w1
   33050:	ldr	x0, [x19, #16]
   33054:	add	x2, x2, x0
   33058:	sub	x0, x1, x2
   3305c:	fmov	d1, x0
   33060:	scvtf	d1, d1
   33064:	fdiv	d0, d0, d1
   33068:	fcvtps	x0, d0
   3306c:	cmp	x0, #0x3
   33070:	mov	x20, #0x3                   	// #3
   33074:	csel	x20, x0, x20, ge  // ge = tcont
   33078:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   3307c:	cmp	x0, x1
   33080:	b.eq	33218 <PyInit__decimal@@Base+0x19078>  // b.none
   33084:	mov	x3, #0x0                   	// #0
   33088:	mov	x2, #0x1                   	// #1
   3308c:	mov	w1, #0x0                   	// #0
   33090:	add	x0, sp, #0x100
   33094:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   33098:	sub	x20, x20, #0x1
   3309c:	adrp	x22, 42000 <PyInit__decimal@@Base+0x27e60>
   330a0:	add	x22, x22, #0xdb8
   330a4:	add	x24, sp, #0x560
   330a8:	add	x25, x24, #0x1c
   330ac:	add	x27, sp, #0xc8
   330b0:	b	332a8 <PyInit__decimal@@Base+0x19108>
   330b4:	mov	x3, #0x0                   	// #0
   330b8:	mov	x2, #0x1                   	// #1
   330bc:	mov	w1, #0x0                   	// #0
   330c0:	mov	x0, x19
   330c4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   330c8:	ldr	w0, [x21]
   330cc:	mov	w1, #0x1040                	// #4160
   330d0:	orr	w0, w0, w1
   330d4:	str	w0, [x21]
   330d8:	ldp	x23, x24, [sp, #48]
   330dc:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   330e0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   330e4:	ldr	x1, [x1, #3536]
   330e8:	cmp	x0, x1
   330ec:	cset	w1, cs  // cs = hs, nlast
   330f0:	add	w1, w1, #0x3
   330f4:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   330f8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   330fc:	ldr	x1, [x1, #3560]
   33100:	cmp	x0, x1
   33104:	b.cc	33134 <PyInit__decimal@@Base+0x18f94>  // b.lo, b.ul, b.last
   33108:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3310c:	ldr	x3, [x1, #3576]
   33110:	mov	w1, #0x9                   	// #9
   33114:	cmp	x0, x3
   33118:	b.cs	3302c <PyInit__decimal@@Base+0x18e8c>  // b.hs, b.nlast
   3311c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33120:	ldr	x1, [x1, #3568]
   33124:	cmp	x0, x1
   33128:	cset	w1, cs  // cs = hs, nlast
   3312c:	add	w1, w1, #0x7
   33130:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   33134:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33138:	ldr	x1, [x1, #3552]
   3313c:	cmp	x0, x1
   33140:	cset	w1, cs  // cs = hs, nlast
   33144:	add	w1, w1, #0x5
   33148:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   3314c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33150:	ldr	x1, [x1, #3624]
   33154:	cmp	x0, x1
   33158:	b.cs	331b0 <PyInit__decimal@@Base+0x19010>  // b.hs, b.nlast
   3315c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33160:	ldr	x1, [x1, #3600]
   33164:	cmp	x0, x1
   33168:	b.cc	33198 <PyInit__decimal@@Base+0x18ff8>  // b.lo, b.ul, b.last
   3316c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33170:	ldr	x3, [x1, #3616]
   33174:	mov	w1, #0xe                   	// #14
   33178:	cmp	x0, x3
   3317c:	b.cs	3302c <PyInit__decimal@@Base+0x18e8c>  // b.hs, b.nlast
   33180:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33184:	ldr	x1, [x1, #3608]
   33188:	cmp	x0, x1
   3318c:	cset	w1, cs  // cs = hs, nlast
   33190:	add	w1, w1, #0xc
   33194:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   33198:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3319c:	ldr	x1, [x1, #3592]
   331a0:	cmp	x0, x1
   331a4:	cset	w1, cs  // cs = hs, nlast
   331a8:	add	w1, w1, #0xa
   331ac:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   331b0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   331b4:	ldr	x1, [x1, #3656]
   331b8:	cmp	x0, x1
   331bc:	b.cs	33200 <PyInit__decimal@@Base+0x19060>  // b.hs, b.nlast
   331c0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   331c4:	ldr	x1, [x1, #3640]
   331c8:	cmp	x0, x1
   331cc:	b.cs	331e8 <PyInit__decimal@@Base+0x19048>  // b.hs, b.nlast
   331d0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   331d4:	ldr	x1, [x1, #3632]
   331d8:	cmp	x0, x1
   331dc:	cset	w1, cs  // cs = hs, nlast
   331e0:	add	w1, w1, #0xf
   331e4:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   331e8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   331ec:	ldr	x1, [x1, #3648]
   331f0:	cmp	x0, x1
   331f4:	cset	w1, cs  // cs = hs, nlast
   331f8:	add	w1, w1, #0x11
   331fc:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   33200:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   33204:	ldr	x1, [x1, #3664]
   33208:	cmp	x0, x1
   3320c:	cset	w1, cs  // cs = hs, nlast
   33210:	add	w1, w1, #0x13
   33214:	b	3302c <PyInit__decimal@@Base+0x18e8c>
   33218:	ldp	x25, x26, [sp, #64]
   3321c:	ldp	x27, x28, [sp, #80]
   33220:	mov	x2, x21
   33224:	mov	w1, #0x100                 	// #256
   33228:	mov	x0, x19
   3322c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   33230:	ldp	x23, x24, [sp, #48]
   33234:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   33238:	ldr	x2, [x22, #24]
   3323c:	cmp	x1, x2
   33240:	cset	w2, cs  // cs = hs, nlast
   33244:	add	w2, w2, #0x3
   33248:	sub	x0, x0, #0x1
   3324c:	add	x1, x0, x0, lsl #2
   33250:	lsl	x1, x1, #2
   33254:	sub	x0, x1, x0
   33258:	add	x0, x0, w2, sxtw
   3325c:	str	x0, [sp, #216]
   33260:	add	x28, sp, #0x330
   33264:	mov	x4, x25
   33268:	mov	x3, x24
   3326c:	mov	x2, x27
   33270:	mov	x1, x19
   33274:	mov	x0, x28
   33278:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
   3327c:	add	x0, sp, #0x100
   33280:	mov	x5, x25
   33284:	mov	x4, x24
   33288:	adrp	x3, 5b000 <PyInit__decimal@@Base+0x40e60>
   3328c:	add	x3, x3, #0xc58
   33290:	mov	x2, x28
   33294:	mov	x1, x0
   33298:	bl	2fa08 <PyInit__decimal@@Base+0x15868>
   3329c:	sub	x20, x20, #0x1
   332a0:	cmp	x20, #0x0
   332a4:	b.le	333dc <PyInit__decimal@@Base+0x1923c>
   332a8:	ldr	x0, [sp, #240]
   332ac:	str	x20, [x0]
   332b0:	ldr	x0, [sp, #224]
   332b4:	ldr	x1, [sp, #240]
   332b8:	add	x1, x1, x0, lsl #3
   332bc:	ldur	x1, [x1, #-8]
   332c0:	cmp	x26, x1
   332c4:	b.ls	33338 <PyInit__decimal@@Base+0x19198>  // b.plast
   332c8:	ldr	x2, [x22, #32]
   332cc:	cmp	x1, x2
   332d0:	b.cs	332f4 <PyInit__decimal@@Base+0x19154>  // b.hs, b.nlast
   332d4:	ldr	x2, [x22, #16]
   332d8:	cmp	x1, x2
   332dc:	b.cs	33238 <PyInit__decimal@@Base+0x19098>  // b.hs, b.nlast
   332e0:	ldr	x2, [x22, #8]
   332e4:	cmp	x1, x2
   332e8:	cset	w2, cs  // cs = hs, nlast
   332ec:	add	w2, w2, #0x1
   332f0:	b	33248 <PyInit__decimal@@Base+0x190a8>
   332f4:	ldr	x2, [x22, #48]
   332f8:	cmp	x1, x2
   332fc:	b.cc	33324 <PyInit__decimal@@Base+0x19184>  // b.lo, b.ul, b.last
   33300:	ldr	x3, [x22, #64]
   33304:	mov	w2, #0x9                   	// #9
   33308:	cmp	x1, x3
   3330c:	b.cs	33248 <PyInit__decimal@@Base+0x190a8>  // b.hs, b.nlast
   33310:	ldr	x2, [x22, #56]
   33314:	cmp	x1, x2
   33318:	cset	w2, cs  // cs = hs, nlast
   3331c:	add	w2, w2, #0x7
   33320:	b	33248 <PyInit__decimal@@Base+0x190a8>
   33324:	ldr	x2, [x22, #40]
   33328:	cmp	x1, x2
   3332c:	cset	w2, cs  // cs = hs, nlast
   33330:	add	w2, w2, #0x5
   33334:	b	33248 <PyInit__decimal@@Base+0x190a8>
   33338:	ldr	x2, [x22, #112]
   3333c:	cmp	x1, x2
   33340:	b.cs	33388 <PyInit__decimal@@Base+0x191e8>  // b.hs, b.nlast
   33344:	ldr	x2, [x22, #88]
   33348:	cmp	x1, x2
   3334c:	b.cc	33374 <PyInit__decimal@@Base+0x191d4>  // b.lo, b.ul, b.last
   33350:	ldr	x3, [x22, #104]
   33354:	mov	w2, #0xe                   	// #14
   33358:	cmp	x1, x3
   3335c:	b.cs	33248 <PyInit__decimal@@Base+0x190a8>  // b.hs, b.nlast
   33360:	ldr	x2, [x22, #96]
   33364:	cmp	x1, x2
   33368:	cset	w2, cs  // cs = hs, nlast
   3336c:	add	w2, w2, #0xc
   33370:	b	33248 <PyInit__decimal@@Base+0x190a8>
   33374:	ldr	x2, [x22, #80]
   33378:	cmp	x1, x2
   3337c:	cset	w2, cs  // cs = hs, nlast
   33380:	add	w2, w2, #0xa
   33384:	b	33248 <PyInit__decimal@@Base+0x190a8>
   33388:	ldr	x2, [x22, #144]
   3338c:	cmp	x1, x2
   33390:	b.cs	333c8 <PyInit__decimal@@Base+0x19228>  // b.hs, b.nlast
   33394:	ldr	x2, [x22, #128]
   33398:	cmp	x1, x2
   3339c:	b.cs	333b4 <PyInit__decimal@@Base+0x19214>  // b.hs, b.nlast
   333a0:	ldr	x2, [x22, #120]
   333a4:	cmp	x1, x2
   333a8:	cset	w2, cs  // cs = hs, nlast
   333ac:	add	w2, w2, #0xf
   333b0:	b	33248 <PyInit__decimal@@Base+0x190a8>
   333b4:	ldr	x2, [x22, #136]
   333b8:	cmp	x1, x2
   333bc:	cset	w2, cs  // cs = hs, nlast
   333c0:	add	w2, w2, #0x11
   333c4:	b	33248 <PyInit__decimal@@Base+0x190a8>
   333c8:	ldr	x2, [x22, #152]
   333cc:	cmp	x1, x2
   333d0:	cset	w2, cs  // cs = hs, nlast
   333d4:	add	w2, w2, #0x13
   333d8:	b	33248 <PyInit__decimal@@Base+0x190a8>
   333dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   333e0:	add	x0, x0, #0xdb8
   333e4:	ldr	x22, [x0, x23, lsl #3]
   333e8:	str	wzr, [sp, #152]
   333ec:	cbz	x22, 334b0 <PyInit__decimal@@Base+0x19310>
   333f0:	mov	x2, x21
   333f4:	add	x1, sp, #0x100
   333f8:	mov	x0, x19
   333fc:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   33400:	cbz	w0, 33550 <PyInit__decimal@@Base+0x193b0>
   33404:	lsr	x0, x22, #32
   33408:	mov	w1, #0x20                  	// #32
   3340c:	cmp	xzr, x22, lsr #32
   33410:	b.ne	3341c <PyInit__decimal@@Base+0x1927c>  // b.any
   33414:	mov	x0, x22
   33418:	mov	w1, #0x0                   	// #0
   3341c:	lsr	x2, x0, #16
   33420:	cmp	xzr, x0, lsr #16
   33424:	b.eq	33430 <PyInit__decimal@@Base+0x19290>  // b.none
   33428:	add	w1, w1, #0x10
   3342c:	mov	x0, x2
   33430:	lsr	x2, x0, #8
   33434:	cmp	xzr, x0, lsr #8
   33438:	b.eq	33444 <PyInit__decimal@@Base+0x192a4>  // b.none
   3343c:	add	w1, w1, #0x8
   33440:	mov	x0, x2
   33444:	lsr	x2, x0, #4
   33448:	cmp	xzr, x0, lsr #4
   3344c:	b.eq	33458 <PyInit__decimal@@Base+0x192b8>  // b.none
   33450:	add	w1, w1, #0x4
   33454:	mov	x0, x2
   33458:	lsr	x2, x0, #2
   3345c:	cmp	xzr, x0, lsr #2
   33460:	b.eq	3346c <PyInit__decimal@@Base+0x192cc>  // b.none
   33464:	add	w1, w1, #0x2
   33468:	mov	x0, x2
   3346c:	lsr	x2, x0, #1
   33470:	cmp	xzr, x0, lsr #1
   33474:	b.eq	33480 <PyInit__decimal@@Base+0x192e0>  // b.none
   33478:	add	w1, w1, #0x1
   3347c:	mov	x0, x2
   33480:	sub	w1, w1, #0x1
   33484:	add	w0, w1, w0
   33488:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3348c:	add	x1, x1, #0xe58
   33490:	ldr	x0, [x1, w0, sxtw #3]
   33494:	lsr	x20, x0, #1
   33498:	cmp	xzr, x0, lsr #1
   3349c:	b.eq	33534 <PyInit__decimal@@Base+0x19394>  // b.none
   334a0:	add	x24, sp, #0x98
   334a4:	add	x23, sp, #0x560
   334a8:	add	x25, sp, #0x100
   334ac:	b	334ec <PyInit__decimal@@Base+0x1934c>
   334b0:	mov	x3, #0x0                   	// #0
   334b4:	mov	x2, #0x1                   	// #1
   334b8:	mov	w1, #0x0                   	// #0
   334bc:	mov	x0, x19
   334c0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   334c4:	b	33550 <PyInit__decimal@@Base+0x193b0>
   334c8:	mov	x4, x24
   334cc:	mov	x3, x23
   334d0:	mov	x2, x25
   334d4:	mov	x1, x19
   334d8:	mov	x0, x19
   334dc:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   334e0:	b	3350c <PyInit__decimal@@Base+0x1936c>
   334e4:	lsr	x20, x20, #1
   334e8:	cbz	x20, 33534 <PyInit__decimal@@Base+0x19394>
   334ec:	mov	x4, x24
   334f0:	mov	x3, x23
   334f4:	mov	x2, x19
   334f8:	mov	x1, x19
   334fc:	mov	x0, x19
   33500:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   33504:	tst	x22, x20
   33508:	b.ne	334c8 <PyInit__decimal@@Base+0x19328>  // b.any
   3350c:	ldrb	w0, [x19]
   33510:	tst	w0, #0xe
   33514:	b.ne	33534 <PyInit__decimal@@Base+0x19394>  // b.any
   33518:	ldr	x0, [x19, #24]
   3351c:	ldr	x1, [x19, #40]
   33520:	add	x0, x1, x0, lsl #3
   33524:	ldur	x0, [x0, #-8]
   33528:	cbnz	x0, 334e4 <PyInit__decimal@@Base+0x19344>
   3352c:	ldr	w0, [sp, #152]
   33530:	tbz	w0, #0, 334e4 <PyInit__decimal@@Base+0x19344>
   33534:	ldr	w0, [x21]
   33538:	ldr	w1, [sp, #152]
   3353c:	orr	w0, w0, w1
   33540:	str	w0, [x21]
   33544:	ldrb	w0, [x19]
   33548:	and	w0, w0, #0xfffffffe
   3354c:	strb	w0, [x19]
   33550:	ldrb	w0, [sp, #816]
   33554:	tst	w0, #0xe0
   33558:	b.ne	3356c <PyInit__decimal@@Base+0x193cc>  // b.any
   3355c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33560:	ldr	x1, [x0, #1704]
   33564:	ldr	x0, [sp, #856]
   33568:	blr	x1
   3356c:	ldrb	w0, [sp, #816]
   33570:	tbnz	w0, #4, 33584 <PyInit__decimal@@Base+0x193e4>
   33574:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33578:	ldr	x1, [x0, #1704]
   3357c:	add	x0, sp, #0x330
   33580:	blr	x1
   33584:	ldrb	w0, [sp, #256]
   33588:	tst	w0, #0xe0
   3358c:	b.ne	335a0 <PyInit__decimal@@Base+0x19400>  // b.any
   33590:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33594:	ldr	x1, [x0, #1704]
   33598:	ldr	x0, [sp, #296]
   3359c:	blr	x1
   335a0:	ldrb	w0, [sp, #256]
   335a4:	tbnz	w0, #4, 335b8 <PyInit__decimal@@Base+0x19418>
   335a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   335ac:	ldr	x1, [x0, #1704]
   335b0:	add	x0, sp, #0x100
   335b4:	blr	x1
   335b8:	ldr	w0, [sp, #1404]
   335bc:	mov	w1, #0x3be                 	// #958
   335c0:	and	w0, w0, w1
   335c4:	ldr	w1, [x21]
   335c8:	orr	w0, w0, w1
   335cc:	mov	w1, #0x1040                	// #4160
   335d0:	orr	w0, w0, w1
   335d4:	str	w0, [x21]
   335d8:	ldp	x23, x24, [sp, #48]
   335dc:	ldp	x25, x26, [sp, #64]
   335e0:	ldp	x27, x28, [sp, #80]
   335e4:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   335e8:	ldp	x23, x24, [sp, #48]
   335ec:	b	32ea4 <PyInit__decimal@@Base+0x18d04>
   335f0:	sub	sp, sp, #0x960
   335f4:	stp	x29, x30, [sp]
   335f8:	mov	x29, sp
   335fc:	stp	x19, x20, [sp, #16]
   33600:	stp	x23, x24, [sp, #48]
   33604:	stp	x25, x26, [sp, #64]
   33608:	mov	x19, x0
   3360c:	mov	x24, x1
   33610:	mov	x25, x2
   33614:	mov	x20, x3
   33618:	ldrb	w0, [x1]
   3361c:	tst	w0, #0xe
   33620:	b.ne	33710 <PyInit__decimal@@Base+0x19570>  // b.any
   33624:	ldr	x0, [x1, #24]
   33628:	ldr	x1, [x1, #40]
   3362c:	add	x0, x1, x0, lsl #3
   33630:	ldur	x0, [x0, #-8]
   33634:	cbz	x0, 33750 <PyInit__decimal@@Base+0x195b0>
   33638:	ldp	x0, x1, [x2]
   3363c:	add	x2, sp, #0xa00
   33640:	stp	x0, x1, [x2, #-208]
   33644:	ldp	x0, x1, [x25, #16]
   33648:	stp	x0, x1, [x2, #-192]
   3364c:	ldp	x0, x1, [x25, #32]
   33650:	stp	x0, x1, [x2, #-176]
   33654:	mov	w0, #0x6                   	// #6
   33658:	str	w0, [sp, #2388]
   3365c:	ldr	w0, [x25, #44]
   33660:	cbz	w0, 339bc <PyInit__decimal@@Base+0x1981c>
   33664:	mov	w1, #0x30                  	// #48
   33668:	strb	w1, [sp, #112]
   3366c:	str	xzr, [sp, #120]
   33670:	str	xzr, [sp, #128]
   33674:	str	xzr, [sp, #136]
   33678:	mov	x0, #0x40                  	// #64
   3367c:	str	x0, [sp, #144]
   33680:	add	x2, sp, #0x130
   33684:	str	x2, [sp, #152]
   33688:	strb	w1, [sp, #160]
   3368c:	str	xzr, [sp, #168]
   33690:	str	xzr, [sp, #176]
   33694:	str	xzr, [sp, #184]
   33698:	str	x0, [sp, #192]
   3369c:	add	x2, sp, #0x330
   336a0:	str	x2, [sp, #200]
   336a4:	strb	w1, [sp, #208]
   336a8:	str	xzr, [sp, #216]
   336ac:	str	xzr, [sp, #224]
   336b0:	str	xzr, [sp, #232]
   336b4:	str	x0, [sp, #240]
   336b8:	add	x2, sp, #0x530
   336bc:	str	x2, [sp, #248]
   336c0:	strb	w1, [sp, #256]
   336c4:	str	xzr, [sp, #264]
   336c8:	str	xzr, [sp, #272]
   336cc:	str	xzr, [sp, #280]
   336d0:	str	x0, [sp, #288]
   336d4:	add	x0, sp, #0x730
   336d8:	str	x0, [sp, #296]
   336dc:	cmp	x24, x19
   336e0:	b.eq	33768 <PyInit__decimal@@Base+0x195c8>  // b.none
   336e4:	stp	x21, x22, [sp, #32]
   336e8:	stp	x27, x28, [sp, #80]
   336ec:	str	wzr, [sp, #2392]
   336f0:	ldr	x23, [x25]
   336f4:	add	x23, x23, #0x3
   336f8:	add	x28, sp, #0x6c
   336fc:	add	x21, sp, #0x930
   33700:	add	x22, sp, #0xd0
   33704:	add	x26, x21, #0x1c
   33708:	add	x27, sp, #0x70
   3370c:	b	33798 <PyInit__decimal@@Base+0x195f8>
   33710:	mov	x0, x19
   33714:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   33718:	cbnz	w0, 33a54 <PyInit__decimal@@Base+0x198b4>
   3371c:	ldrb	w0, [x24]
   33720:	tbz	w0, #0, 3373c <PyInit__decimal@@Base+0x1959c>
   33724:	mov	x3, #0x0                   	// #0
   33728:	mov	x2, #0x0                   	// #0
   3372c:	mov	w1, #0x0                   	// #0
   33730:	mov	x0, x19
   33734:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   33738:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   3373c:	mov	w2, #0x2                   	// #2
   33740:	mov	w1, #0x0                   	// #0
   33744:	mov	x0, x19
   33748:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3374c:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   33750:	mov	x3, #0x0                   	// #0
   33754:	mov	x2, #0x1                   	// #1
   33758:	mov	w1, #0x0                   	// #0
   3375c:	mov	x0, x19
   33760:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   33764:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   33768:	mov	x2, x3
   3376c:	mov	x1, x24
   33770:	add	x0, sp, #0x100
   33774:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   33778:	add	x24, sp, #0x100
   3377c:	cbnz	w0, 336e4 <PyInit__decimal@@Base+0x19544>
   33780:	mov	x2, x20
   33784:	mov	w1, #0x200                 	// #512
   33788:	mov	x0, x19
   3378c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   33790:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   33794:	add	x23, x23, #0x13
   33798:	str	x23, [sp, #2352]
   3379c:	str	wzr, [sp, #108]
   337a0:	mov	x3, x28
   337a4:	mov	x2, x21
   337a8:	mov	x1, x24
   337ac:	mov	x0, x19
   337b0:	bl	32dc0 <PyInit__decimal@@Base+0x18c20>
   337b4:	ldr	w1, [sp, #108]
   337b8:	ldr	w0, [x20]
   337bc:	orr	w0, w0, w1
   337c0:	str	w0, [x20]
   337c4:	ldr	x3, [x19, #8]
   337c8:	ldr	x0, [x19, #16]
   337cc:	add	x0, x3, x0
   337d0:	ldr	x2, [sp, #2352]
   337d4:	sub	x0, x0, x2
   337d8:	tst	x1, #0x4000
   337dc:	csel	x3, x0, x3, eq  // eq = none
   337e0:	mov	x2, #0x1                   	// #1
   337e4:	mov	w1, #0x0                   	// #0
   337e8:	mov	x0, x22
   337ec:	bl	2606c <PyInit__decimal@@Base+0xbecc>
   337f0:	ldr	x0, [x25]
   337f4:	str	x0, [sp, #2352]
   337f8:	mov	x4, x26
   337fc:	mov	x3, x21
   33800:	mov	x2, x22
   33804:	mov	x1, x19
   33808:	mov	x0, x27
   3380c:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   33810:	mov	x4, x26
   33814:	mov	x3, x21
   33818:	mov	x2, x22
   3381c:	mov	x1, x19
   33820:	add	x0, sp, #0xa0
   33824:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   33828:	ldrb	w0, [x19]
   3382c:	tst	w0, #0xe
   33830:	b.ne	3385c <PyInit__decimal@@Base+0x196bc>  // b.any
   33834:	ldr	x0, [x19, #24]
   33838:	ldr	x1, [x19, #40]
   3383c:	add	x0, x1, x0, lsl #3
   33840:	ldur	x0, [x0, #-8]
   33844:	cbz	x0, 3385c <PyInit__decimal@@Base+0x196bc>
   33848:	mov	x2, x20
   3384c:	add	x1, sp, #0xa0
   33850:	mov	x0, x27
   33854:	bl	2a830 <PyInit__decimal@@Base+0x10690>
   33858:	cbnz	w0, 33794 <PyInit__decimal@@Base+0x195f4>
   3385c:	ldr	w0, [x25, #40]
   33860:	str	w0, [sp, #2392]
   33864:	mov	x2, x20
   33868:	add	x1, sp, #0x930
   3386c:	mov	x0, x19
   33870:	bl	2b318 <PyInit__decimal@@Base+0x11178>
   33874:	ldr	x2, [x19, #8]
   33878:	ldr	x1, [sp, #2368]
   3387c:	ldr	x0, [x19, #16]
   33880:	add	x0, x2, x0
   33884:	sub	x0, x0, #0x1
   33888:	cmp	x0, x1
   3388c:	b.ge	338d0 <PyInit__decimal@@Base+0x19730>  // b.tcont
   33890:	ldrb	w0, [x19]
   33894:	tst	w0, #0xe
   33898:	b.ne	338b0 <PyInit__decimal@@Base+0x19710>  // b.any
   3389c:	ldr	x0, [x19, #24]
   338a0:	ldr	x3, [x19, #40]
   338a4:	add	x0, x3, x0, lsl #3
   338a8:	ldur	x0, [x0, #-8]
   338ac:	cbz	x0, 338d0 <PyInit__decimal@@Base+0x19730>
   338b0:	add	x1, x1, #0x1
   338b4:	ldr	x0, [sp, #2352]
   338b8:	sub	x1, x1, x0
   338bc:	cmp	x2, x1
   338c0:	b.ge	338d0 <PyInit__decimal@@Base+0x19730>  // b.tcont
   338c4:	ldr	w0, [x20]
   338c8:	orr	w0, w0, #0x4000
   338cc:	str	w0, [x20]
   338d0:	mov	x2, x20
   338d4:	add	x1, sp, #0x930
   338d8:	mov	x0, x19
   338dc:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   338e0:	ldrb	w0, [sp, #112]
   338e4:	tst	w0, #0xe0
   338e8:	b.ne	338fc <PyInit__decimal@@Base+0x1975c>  // b.any
   338ec:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   338f0:	ldr	x1, [x0, #1704]
   338f4:	ldr	x0, [sp, #152]
   338f8:	blr	x1
   338fc:	ldrb	w0, [sp, #112]
   33900:	tbnz	w0, #4, 33914 <PyInit__decimal@@Base+0x19774>
   33904:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33908:	ldr	x1, [x0, #1704]
   3390c:	add	x0, sp, #0x70
   33910:	blr	x1
   33914:	ldrb	w0, [sp, #160]
   33918:	tst	w0, #0xe0
   3391c:	b.ne	33930 <PyInit__decimal@@Base+0x19790>  // b.any
   33920:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33924:	ldr	x1, [x0, #1704]
   33928:	ldr	x0, [sp, #200]
   3392c:	blr	x1
   33930:	ldrb	w0, [sp, #160]
   33934:	tbnz	w0, #4, 33948 <PyInit__decimal@@Base+0x197a8>
   33938:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3393c:	ldr	x1, [x0, #1704]
   33940:	add	x0, sp, #0xa0
   33944:	blr	x1
   33948:	ldrb	w0, [sp, #208]
   3394c:	tst	w0, #0xe0
   33950:	b.ne	33964 <PyInit__decimal@@Base+0x197c4>  // b.any
   33954:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33958:	ldr	x1, [x0, #1704]
   3395c:	ldr	x0, [sp, #248]
   33960:	blr	x1
   33964:	ldrb	w0, [sp, #208]
   33968:	tbnz	w0, #4, 3397c <PyInit__decimal@@Base+0x197dc>
   3396c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33970:	ldr	x1, [x0, #1704]
   33974:	add	x0, sp, #0xd0
   33978:	blr	x1
   3397c:	ldrb	w0, [sp, #256]
   33980:	tst	w0, #0xe0
   33984:	b.ne	33998 <PyInit__decimal@@Base+0x197f8>  // b.any
   33988:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3398c:	ldr	x1, [x0, #1704]
   33990:	ldr	x0, [sp, #296]
   33994:	blr	x1
   33998:	ldrb	w0, [sp, #256]
   3399c:	tbnz	w0, #4, 33a6c <PyInit__decimal@@Base+0x198cc>
   339a0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   339a4:	ldr	x1, [x0, #1704]
   339a8:	add	x0, sp, #0x100
   339ac:	blr	x1
   339b0:	ldp	x21, x22, [sp, #32]
   339b4:	ldp	x27, x28, [sp, #80]
   339b8:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   339bc:	stp	x21, x22, [sp, #32]
   339c0:	add	x21, sp, #0x930
   339c4:	mov	x2, x21
   339c8:	mov	x1, x24
   339cc:	mov	x0, x19
   339d0:	bl	32dc0 <PyInit__decimal@@Base+0x18c20>
   339d4:	mov	x2, x20
   339d8:	mov	x1, x21
   339dc:	mov	x0, x19
   339e0:	bl	2b318 <PyInit__decimal@@Base+0x11178>
   339e4:	ldr	x2, [x19, #8]
   339e8:	ldr	x1, [sp, #2368]
   339ec:	ldr	x0, [x19, #16]
   339f0:	add	x0, x2, x0
   339f4:	sub	x0, x0, #0x1
   339f8:	cmp	x0, x1
   339fc:	b.ge	33a40 <PyInit__decimal@@Base+0x198a0>  // b.tcont
   33a00:	ldrb	w0, [x19]
   33a04:	tst	w0, #0xe
   33a08:	b.ne	33a20 <PyInit__decimal@@Base+0x19880>  // b.any
   33a0c:	ldr	x0, [x19, #24]
   33a10:	ldr	x3, [x19, #40]
   33a14:	add	x0, x3, x0, lsl #3
   33a18:	ldur	x0, [x0, #-8]
   33a1c:	cbz	x0, 33a40 <PyInit__decimal@@Base+0x198a0>
   33a20:	add	x0, x1, #0x1
   33a24:	ldr	x1, [sp, #2352]
   33a28:	sub	x0, x0, x1
   33a2c:	cmp	x2, x0
   33a30:	b.ge	33a40 <PyInit__decimal@@Base+0x198a0>  // b.tcont
   33a34:	ldr	w0, [x20]
   33a38:	orr	w0, w0, #0x4000
   33a3c:	str	w0, [x20]
   33a40:	mov	x2, x20
   33a44:	add	x1, sp, #0x930
   33a48:	mov	x0, x19
   33a4c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   33a50:	ldp	x21, x22, [sp, #32]
   33a54:	ldp	x19, x20, [sp, #16]
   33a58:	ldp	x23, x24, [sp, #48]
   33a5c:	ldp	x25, x26, [sp, #64]
   33a60:	ldp	x29, x30, [sp]
   33a64:	add	sp, sp, #0x960
   33a68:	ret
   33a6c:	ldp	x21, x22, [sp, #32]
   33a70:	ldp	x27, x28, [sp, #80]
   33a74:	b	33a54 <PyInit__decimal@@Base+0x198b4>
   33a78:	sub	sp, sp, #0x530
   33a7c:	stp	x29, x30, [sp]
   33a80:	mov	x29, sp
   33a84:	stp	x19, x20, [sp, #16]
   33a88:	stp	x21, x22, [sp, #32]
   33a8c:	stp	x25, x26, [sp, #64]
   33a90:	mov	x19, x0
   33a94:	mov	x25, x1
   33a98:	mov	x22, x2
   33a9c:	mov	w1, #0x30                  	// #48
   33aa0:	strb	w1, [sp, #672]
   33aa4:	str	xzr, [sp, #680]
   33aa8:	str	xzr, [sp, #688]
   33aac:	str	xzr, [sp, #696]
   33ab0:	mov	x1, #0x40                  	// #64
   33ab4:	str	x1, [sp, #704]
   33ab8:	add	x1, sp, #0x2d0
   33abc:	str	x1, [sp, #712]
   33ac0:	mov	x1, #0xa                   	// #10
   33ac4:	str	x1, [sp, #664]
   33ac8:	mov	w1, #0xffffff90            	// #-112
   33acc:	strb	w1, [sp, #616]
   33ad0:	str	xzr, [sp, #624]
   33ad4:	mov	x1, #0x2                   	// #2
   33ad8:	str	x1, [sp, #632]
   33adc:	mov	x1, #0x1                   	// #1
   33ae0:	str	x1, [sp, #640]
   33ae4:	str	x1, [sp, #648]
   33ae8:	add	x1, sp, #0x298
   33aec:	str	x1, [sp, #656]
   33af0:	mov	x2, #0x4c0                 	// #1216
   33af4:	subs	x2, x2, x25
   33af8:	mov	x3, x22
   33afc:	csel	x2, x2, xzr, pl  // pl = nfrst
   33b00:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   33b04:	add	x1, x1, #0xc58
   33b08:	add	x1, x1, #0x90
   33b0c:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   33b10:	cmn	x0, #0x1
   33b14:	b.eq	33c5c <PyInit__decimal@@Base+0x19abc>  // b.none
   33b18:	mov	x20, x0
   33b1c:	ldr	x1, [x19, #16]
   33b20:	mov	x0, #0x1                   	// #1
   33b24:	sub	x0, x0, x1
   33b28:	str	x0, [x19, #8]
   33b2c:	add	x0, sp, #0x4d0
   33b30:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   33b34:	cmp	x25, #0x4bf
   33b38:	b.le	33c70 <PyInit__decimal@@Base+0x19ad0>
   33b3c:	add	x0, sp, #0x500
   33b40:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   33b44:	mov	w0, #0x8                   	// #8
   33b48:	str	w0, [sp, #1316]
   33b4c:	add	x0, x25, #0x2
   33b50:	ldr	x3, [x19, #8]
   33b54:	neg	x3, x3
   33b58:	cmp	x0, x3
   33b5c:	b.le	33f8c <PyInit__decimal@@Base+0x19dec>
   33b60:	stp	x23, x24, [sp, #48]
   33b64:	mov	w1, #0x0                   	// #0
   33b68:	add	x2, sp, #0x68
   33b6c:	add	x0, x0, #0x2
   33b70:	add	x0, x0, x0, lsr #63
   33b74:	asr	x0, x0, #1
   33b78:	mov	w21, w1
   33b7c:	add	w1, w1, #0x1
   33b80:	add	x23, x2, w21, sxtw #3
   33b84:	str	x0, [x2, w21, sxtw #3]
   33b88:	cmp	x3, x0
   33b8c:	b.lt	33b6c <PyInit__decimal@@Base+0x199cc>  // b.tstop
   33b90:	tbnz	w21, #31, 33fec <PyInit__decimal@@Base+0x19e4c>
   33b94:	stp	x27, x28, [sp, #80]
   33b98:	add	x26, sp, #0x500
   33b9c:	add	x20, sp, #0x2a0
   33ba0:	add	x28, sp, #0x268
   33ba4:	add	x24, sp, #0x4d0
   33ba8:	adrp	x27, 5b000 <PyInit__decimal@@Base+0x40e60>
   33bac:	add	x27, x27, #0xc58
   33bb0:	ldr	x0, [x23]
   33bb4:	lsl	x0, x0, #1
   33bb8:	add	x0, x0, #0x3
   33bbc:	str	x0, [sp, #1280]
   33bc0:	ldrb	w0, [x19]
   33bc4:	eor	w0, w0, #0x1
   33bc8:	strb	w0, [x19]
   33bcc:	mov	x3, x22
   33bd0:	mov	x2, x26
   33bd4:	mov	x1, x19
   33bd8:	mov	x0, x20
   33bdc:	bl	32dc0 <PyInit__decimal@@Base+0x18c20>
   33be0:	ldrb	w0, [x19]
   33be4:	eor	w0, w0, #0x1
   33be8:	strb	w0, [x19]
   33bec:	mov	x4, x22
   33bf0:	mov	x3, x26
   33bf4:	mov	x2, x20
   33bf8:	mov	x1, x28
   33bfc:	mov	x0, x20
   33c00:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   33c04:	mov	x4, x22
   33c08:	mov	x3, x24
   33c0c:	mov	x2, x27
   33c10:	mov	x1, x20
   33c14:	mov	x0, x20
   33c18:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   33c1c:	mov	x4, x22
   33c20:	mov	x3, x24
   33c24:	mov	x2, x20
   33c28:	mov	x1, x19
   33c2c:	mov	x0, x19
   33c30:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   33c34:	ldrb	w0, [x19]
   33c38:	tst	w0, #0xe
   33c3c:	b.ne	33f84 <PyInit__decimal@@Base+0x19de4>  // b.any
   33c40:	sub	w21, w21, #0x1
   33c44:	sub	x23, x23, #0x8
   33c48:	cmn	w21, #0x1
   33c4c:	b.ne	33bb0 <PyInit__decimal@@Base+0x19a10>  // b.any
   33c50:	ldp	x23, x24, [sp, #48]
   33c54:	ldp	x27, x28, [sp, #80]
   33c58:	b	33f8c <PyInit__decimal@@Base+0x19dec>
   33c5c:	mov	x2, x22
   33c60:	mov	w1, #0x200                 	// #512
   33c64:	mov	x0, x19
   33c68:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   33c6c:	b	33fd4 <PyInit__decimal@@Base+0x19e34>
   33c70:	str	x25, [sp, #1232]
   33c74:	ldr	w0, [sp, #1268]
   33c78:	cmp	w0, #0x4
   33c7c:	b.eq	33dec <PyInit__decimal@@Base+0x19c4c>  // b.none
   33c80:	b.gt	33d94 <PyInit__decimal@@Base+0x19bf4>
   33c84:	cmp	w0, #0x2
   33c88:	b.eq	33e14 <PyInit__decimal@@Base+0x19c74>  // b.none
   33c8c:	cmp	w0, #0x3
   33c90:	b.ne	33ca4 <PyInit__decimal@@Base+0x19b04>  // b.any
   33c94:	cbz	x20, 33d80 <PyInit__decimal@@Base+0x19be0>
   33c98:	ldrb	w1, [x19]
   33c9c:	and	w1, w1, #0x1
   33ca0:	b	33cb0 <PyInit__decimal@@Base+0x19b10>
   33ca4:	cmp	x20, #0x0
   33ca8:	cset	w1, ne  // ne = any
   33cac:	cbnz	w0, 33d80 <PyInit__decimal@@Base+0x19be0>
   33cb0:	cbz	w1, 33d80 <PyInit__decimal@@Base+0x19be0>
   33cb4:	ldr	x1, [x19, #24]
   33cb8:	ldr	x0, [x19, #40]
   33cbc:	bl	1b2c4 <PyInit__decimal@@Base+0x1124>
   33cc0:	cbz	x0, 33d14 <PyInit__decimal@@Base+0x19b74>
   33cc4:	ldr	x0, [x19, #24]
   33cc8:	add	x0, x0, #0x1
   33ccc:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   33cd0:	ldr	x1, [x1, #1672]
   33cd4:	cmp	x0, x1
   33cd8:	csel	x1, x0, x1, ge  // ge = tcont
   33cdc:	ldr	x0, [x19, #32]
   33ce0:	cmp	x1, x0
   33ce4:	b.eq	33cf8 <PyInit__decimal@@Base+0x19b58>  // b.none
   33ce8:	ldrb	w2, [x19]
   33cec:	tbz	w2, #5, 33e38 <PyInit__decimal@@Base+0x19c98>
   33cf0:	cmp	x1, x0
   33cf4:	b.gt	33e28 <PyInit__decimal@@Base+0x19c88>
   33cf8:	ldr	x1, [x19, #24]
   33cfc:	ldr	x0, [x19, #40]
   33d00:	mov	x2, #0x1                   	// #1
   33d04:	str	x2, [x0, x1, lsl #3]
   33d08:	ldr	x0, [x19, #24]
   33d0c:	add	x0, x0, x2
   33d10:	str	x0, [x19, #24]
   33d14:	ldr	x0, [x19, #24]
   33d18:	ldr	x1, [x19, #40]
   33d1c:	add	x1, x1, x0, lsl #3
   33d20:	ldur	x1, [x1, #-8]
   33d24:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33d28:	ldr	x2, [x2, #3584]
   33d2c:	cmp	x1, x2
   33d30:	b.cs	33eb8 <PyInit__decimal@@Base+0x19d18>  // b.hs, b.nlast
   33d34:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33d38:	ldr	x2, [x2, #3544]
   33d3c:	cmp	x1, x2
   33d40:	b.cs	33e64 <PyInit__decimal@@Base+0x19cc4>  // b.hs, b.nlast
   33d44:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33d48:	ldr	x2, [x2, #3528]
   33d4c:	cmp	x1, x2
   33d50:	b.cs	33e4c <PyInit__decimal@@Base+0x19cac>  // b.hs, b.nlast
   33d54:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33d58:	ldr	x2, [x2, #3520]
   33d5c:	cmp	x1, x2
   33d60:	cset	w2, cs  // cs = hs, nlast
   33d64:	add	w2, w2, #0x1
   33d68:	sub	x0, x0, #0x1
   33d6c:	add	x1, x0, x0, lsl #2
   33d70:	lsl	x1, x1, #2
   33d74:	sub	x0, x1, x0
   33d78:	add	x0, x0, w2, sxtw
   33d7c:	str	x0, [x19, #16]
   33d80:	ldr	w0, [x22]
   33d84:	mov	w1, #0x1040                	// #4160
   33d88:	orr	w0, w0, w1
   33d8c:	str	w0, [x22]
   33d90:	b	33fd4 <PyInit__decimal@@Base+0x19e34>
   33d94:	cmp	w0, #0x6
   33d98:	b.eq	33df8 <PyInit__decimal@@Base+0x19c58>  // b.none
   33d9c:	cmp	w0, #0x7
   33da0:	b.ne	33dd8 <PyInit__decimal@@Base+0x19c38>  // b.any
   33da4:	cbz	x20, 33d80 <PyInit__decimal@@Base+0x19be0>
   33da8:	ldr	x0, [x19, #40]
   33dac:	ldr	x1, [x0]
   33db0:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   33db4:	movk	x0, #0xcccd
   33db8:	umulh	x0, x1, x0
   33dbc:	lsr	x0, x0, #3
   33dc0:	add	x0, x0, x0, lsl #2
   33dc4:	sub	x0, x1, x0, lsl #1
   33dc8:	cmp	w0, #0x0
   33dcc:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   33dd0:	b.eq	33cb4 <PyInit__decimal@@Base+0x19b14>  // b.none
   33dd4:	b	33d80 <PyInit__decimal@@Base+0x19be0>
   33dd8:	cmp	x20, #0x5
   33ddc:	cset	w1, hi  // hi = pmore
   33de0:	cmp	w0, #0x5
   33de4:	b.eq	33cb0 <PyInit__decimal@@Base+0x19b10>  // b.none
   33de8:	b	33d80 <PyInit__decimal@@Base+0x19be0>
   33dec:	cmp	x20, #0x4
   33df0:	cset	w1, hi  // hi = pmore
   33df4:	b	33cb0 <PyInit__decimal@@Base+0x19b10>
   33df8:	cmp	x20, #0x5
   33dfc:	b.hi	33cb4 <PyInit__decimal@@Base+0x19b14>  // b.pmore
   33e00:	b.ne	33d80 <PyInit__decimal@@Base+0x19be0>  // b.any
   33e04:	ldr	x0, [x19, #40]
   33e08:	ldr	x1, [x0]
   33e0c:	and	w1, w1, #0x1
   33e10:	b	33cb0 <PyInit__decimal@@Base+0x19b10>
   33e14:	cbz	x20, 33d80 <PyInit__decimal@@Base+0x19be0>
   33e18:	ldrb	w1, [x19]
   33e1c:	eor	w1, w1, #0x1
   33e20:	and	w1, w1, #0x1
   33e24:	b	33cb0 <PyInit__decimal@@Base+0x19b10>
   33e28:	mov	x2, x22
   33e2c:	mov	x0, x19
   33e30:	bl	25338 <PyInit__decimal@@Base+0xb198>
   33e34:	b	33e44 <PyInit__decimal@@Base+0x19ca4>
   33e38:	mov	x2, x22
   33e3c:	mov	x0, x19
   33e40:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   33e44:	cbnz	w0, 33cf8 <PyInit__decimal@@Base+0x19b58>
   33e48:	b	33d80 <PyInit__decimal@@Base+0x19be0>
   33e4c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33e50:	ldr	x2, [x2, #3536]
   33e54:	cmp	x1, x2
   33e58:	cset	w2, cs  // cs = hs, nlast
   33e5c:	add	w2, w2, #0x3
   33e60:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33e64:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33e68:	ldr	x2, [x2, #3560]
   33e6c:	cmp	x1, x2
   33e70:	b.cc	33ea0 <PyInit__decimal@@Base+0x19d00>  // b.lo, b.ul, b.last
   33e74:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33e78:	ldr	x3, [x2, #3576]
   33e7c:	mov	w2, #0x9                   	// #9
   33e80:	cmp	x1, x3
   33e84:	b.cs	33d68 <PyInit__decimal@@Base+0x19bc8>  // b.hs, b.nlast
   33e88:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33e8c:	ldr	x2, [x2, #3568]
   33e90:	cmp	x1, x2
   33e94:	cset	w2, cs  // cs = hs, nlast
   33e98:	add	w2, w2, #0x7
   33e9c:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33ea0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33ea4:	ldr	x2, [x2, #3552]
   33ea8:	cmp	x1, x2
   33eac:	cset	w2, cs  // cs = hs, nlast
   33eb0:	add	w2, w2, #0x5
   33eb4:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33eb8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33ebc:	ldr	x2, [x2, #3624]
   33ec0:	cmp	x1, x2
   33ec4:	b.cs	33f1c <PyInit__decimal@@Base+0x19d7c>  // b.hs, b.nlast
   33ec8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33ecc:	ldr	x2, [x2, #3600]
   33ed0:	cmp	x1, x2
   33ed4:	b.cc	33f04 <PyInit__decimal@@Base+0x19d64>  // b.lo, b.ul, b.last
   33ed8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33edc:	ldr	x3, [x2, #3616]
   33ee0:	mov	w2, #0xe                   	// #14
   33ee4:	cmp	x1, x3
   33ee8:	b.cs	33d68 <PyInit__decimal@@Base+0x19bc8>  // b.hs, b.nlast
   33eec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33ef0:	ldr	x2, [x2, #3608]
   33ef4:	cmp	x1, x2
   33ef8:	cset	w2, cs  // cs = hs, nlast
   33efc:	add	w2, w2, #0xc
   33f00:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33f04:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f08:	ldr	x2, [x2, #3592]
   33f0c:	cmp	x1, x2
   33f10:	cset	w2, cs  // cs = hs, nlast
   33f14:	add	w2, w2, #0xa
   33f18:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33f1c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f20:	ldr	x2, [x2, #3656]
   33f24:	cmp	x1, x2
   33f28:	b.cs	33f6c <PyInit__decimal@@Base+0x19dcc>  // b.hs, b.nlast
   33f2c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f30:	ldr	x2, [x2, #3640]
   33f34:	cmp	x1, x2
   33f38:	b.cs	33f54 <PyInit__decimal@@Base+0x19db4>  // b.hs, b.nlast
   33f3c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f40:	ldr	x2, [x2, #3632]
   33f44:	cmp	x1, x2
   33f48:	cset	w2, cs  // cs = hs, nlast
   33f4c:	add	w2, w2, #0xf
   33f50:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33f54:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f58:	ldr	x2, [x2, #3648]
   33f5c:	cmp	x1, x2
   33f60:	cset	w2, cs  // cs = hs, nlast
   33f64:	add	w2, w2, #0x11
   33f68:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33f6c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   33f70:	ldr	x2, [x2, #3664]
   33f74:	cmp	x1, x2
   33f78:	cset	w2, cs  // cs = hs, nlast
   33f7c:	add	w2, w2, #0x13
   33f80:	b	33d68 <PyInit__decimal@@Base+0x19bc8>
   33f84:	ldp	x23, x24, [sp, #48]
   33f88:	ldp	x27, x28, [sp, #80]
   33f8c:	ldrb	w0, [sp, #672]
   33f90:	tst	w0, #0xe0
   33f94:	b.ne	33fa8 <PyInit__decimal@@Base+0x19e08>  // b.any
   33f98:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33f9c:	ldr	x1, [x0, #1704]
   33fa0:	ldr	x0, [sp, #712]
   33fa4:	blr	x1
   33fa8:	ldrb	w0, [sp, #672]
   33fac:	tbnz	w0, #4, 33fc0 <PyInit__decimal@@Base+0x19e20>
   33fb0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   33fb4:	ldr	x1, [x0, #1704]
   33fb8:	add	x0, sp, #0x2a0
   33fbc:	blr	x1
   33fc0:	str	x25, [sp, #1232]
   33fc4:	mov	x2, x22
   33fc8:	add	x1, sp, #0x4d0
   33fcc:	mov	x0, x19
   33fd0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   33fd4:	ldp	x19, x20, [sp, #16]
   33fd8:	ldp	x21, x22, [sp, #32]
   33fdc:	ldp	x25, x26, [sp, #64]
   33fe0:	ldp	x29, x30, [sp]
   33fe4:	add	sp, sp, #0x530
   33fe8:	ret
   33fec:	ldp	x23, x24, [sp, #48]
   33ff0:	b	33f8c <PyInit__decimal@@Base+0x19dec>
   33ff4:	sub	sp, sp, #0x970
   33ff8:	stp	x29, x30, [sp]
   33ffc:	mov	x29, sp
   34000:	stp	x19, x20, [sp, #16]
   34004:	stp	x21, x22, [sp, #32]
   34008:	stp	x23, x24, [sp, #48]
   3400c:	mov	x19, x0
   34010:	mov	x23, x1
   34014:	mov	x20, x2
   34018:	mov	x22, x3
   3401c:	mov	w2, #0x30                  	// #48
   34020:	strb	w2, [sp, #1760]
   34024:	str	xzr, [sp, #1768]
   34028:	str	xzr, [sp, #1776]
   3402c:	str	xzr, [sp, #1784]
   34030:	mov	x0, #0x40                  	// #64
   34034:	str	x0, [sp, #1792]
   34038:	add	x3, sp, #0x710
   3403c:	str	x3, [sp, #1800]
   34040:	strb	w2, [sp, #1200]
   34044:	str	xzr, [sp, #1208]
   34048:	str	xzr, [sp, #1216]
   3404c:	str	xzr, [sp, #1224]
   34050:	str	x0, [sp, #1232]
   34054:	add	x3, sp, #0x4e0
   34058:	str	x3, [sp, #1240]
   3405c:	strb	w2, [sp, #640]
   34060:	str	xzr, [sp, #648]
   34064:	str	xzr, [sp, #656]
   34068:	str	xzr, [sp, #664]
   3406c:	str	x0, [sp, #672]
   34070:	add	x0, sp, #0x2b0
   34074:	str	x0, [sp, #680]
   34078:	mov	x2, x22
   3407c:	add	x0, sp, #0x6e0
   34080:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   34084:	cbz	w0, 34110 <PyInit__decimal@@Base+0x19f70>
   34088:	stp	x25, x26, [sp, #64]
   3408c:	ldr	x1, [sp, #1776]
   34090:	mov	x0, #0x435f                	// #17247
   34094:	movk	x0, #0xd79, lsl #16
   34098:	movk	x0, #0x35e5, lsl #32
   3409c:	movk	x0, #0xd794, lsl #48
   340a0:	umulh	x0, x1, x0
   340a4:	lsr	x0, x0, #4
   340a8:	add	x2, x0, x0, lsl #2
   340ac:	lsl	x2, x2, #2
   340b0:	sub	x0, x2, x0
   340b4:	subs	x0, x1, x0
   340b8:	b.eq	34700 <PyInit__decimal@@Base+0x1a560>  // b.none
   340bc:	ldr	x1, [sp, #1800]
   340c0:	ldr	x2, [sp, #1784]
   340c4:	lsl	x3, x2, #3
   340c8:	add	x4, x1, x3
   340cc:	ldur	x21, [x4, #-8]
   340d0:	cmp	x0, #0x2
   340d4:	b.hi	34714 <PyInit__decimal@@Base+0x1a574>  // b.pmore
   340d8:	cmp	x2, #0x1
   340dc:	b.le	34728 <PyInit__decimal@@Base+0x1a588>
   340e0:	add	x1, x1, x3
   340e4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   340e8:	add	x2, x2, #0xdb8
   340ec:	add	x3, x0, #0x10
   340f0:	ldur	x1, [x1, #-16]
   340f4:	ldr	x3, [x2, x3, lsl #3]
   340f8:	udiv	x1, x1, x3
   340fc:	mov	x3, #0x3                   	// #3
   34100:	sub	x0, x3, x0
   34104:	ldr	x0, [x2, x0, lsl #3]
   34108:	madd	x21, x0, x21, x1
   3410c:	b	34728 <PyInit__decimal@@Base+0x1a588>
   34110:	mov	x2, x22
   34114:	mov	w1, #0x200                 	// #512
   34118:	mov	x0, x19
   3411c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   34120:	b	3463c <PyInit__decimal@@Base+0x1a49c>
   34124:	cmp	x21, #0x63
   34128:	b.ls	34738 <PyInit__decimal@@Base+0x1a598>  // b.plast
   3412c:	sub	x24, x21, #0x64
   34130:	ldr	x25, [x23, #16]
   34134:	ldr	x23, [x23, #8]
   34138:	ldrb	w0, [x19]
   3413c:	tbnz	w0, #5, 34154 <PyInit__decimal@@Base+0x19fb4>
   34140:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34144:	ldr	x1, [x0, #1672]
   34148:	ldr	x0, [x19, #32]
   3414c:	cmp	x0, x1
   34150:	b.gt	34288 <PyInit__decimal@@Base+0x1a0e8>
   34154:	ldrb	w0, [x19]
   34158:	and	w0, w0, #0xfffffff0
   3415c:	strb	w0, [x19]
   34160:	ldr	x1, [x19, #40]
   34164:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   34168:	add	x0, x0, #0x460
   3416c:	ldrh	w0, [x0, x24, lsl #1]
   34170:	str	x0, [x1]
   34174:	mov	x0, #0x1                   	// #1
   34178:	str	x0, [x19, #24]
   3417c:	mov	x0, #0xfffffffffffffffd    	// #-3
   34180:	str	x0, [x19, #8]
   34184:	ldr	x0, [x19, #40]
   34188:	ldr	x1, [x0]
   3418c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34190:	ldr	x0, [x0, #3584]
   34194:	cmp	x1, x0
   34198:	b.cs	34324 <PyInit__decimal@@Base+0x1a184>  // b.hs, b.nlast
   3419c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   341a0:	ldr	x0, [x0, #3544]
   341a4:	cmp	x1, x0
   341a8:	b.cs	342d0 <PyInit__decimal@@Base+0x1a130>  // b.hs, b.nlast
   341ac:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   341b0:	ldr	x0, [x0, #3528]
   341b4:	cmp	x1, x0
   341b8:	b.cs	342b8 <PyInit__decimal@@Base+0x1a118>  // b.hs, b.nlast
   341bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   341c0:	ldr	x0, [x0, #3520]
   341c4:	cmp	x1, x0
   341c8:	cset	w0, cs  // cs = hs, nlast
   341cc:	add	w0, w0, #0x1
   341d0:	sxtw	x0, w0
   341d4:	str	x0, [x19, #16]
   341d8:	cmp	x24, #0x190
   341dc:	b.hi	343f0 <PyInit__decimal@@Base+0x1a250>  // b.pmore
   341e0:	mov	x0, #0x1                   	// #1
   341e4:	sub	x0, x0, x25
   341e8:	str	x0, [sp, #1768]
   341ec:	add	x25, x25, x23
   341f0:	sub	x0, x25, #0x1
   341f4:	str	x0, [sp, #104]
   341f8:	add	x0, sp, #0x910
   341fc:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   34200:	add	x0, sp, #0x940
   34204:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   34208:	mov	w0, #0x8                   	// #8
   3420c:	str	w0, [sp, #2404]
   34210:	ldr	x0, [x20]
   34214:	add	x0, x0, #0x2
   34218:	str	x0, [sp, #96]
   3421c:	ldr	x0, [sp, #104]
   34220:	cbnz	x0, 34230 <PyInit__decimal@@Base+0x1a090>
   34224:	sub	x21, x21, #0x74
   34228:	cmp	x21, #0x30f
   3422c:	b.hi	34410 <PyInit__decimal@@Base+0x1a270>  // b.pmore
   34230:	ldr	x0, [sp, #96]
   34234:	cmp	x0, #0x2
   34238:	b.le	345e8 <PyInit__decimal@@Base+0x1a448>
   3423c:	mov	w2, #0x0                   	// #0
   34240:	add	x3, sp, #0x80
   34244:	add	x1, x0, #0x2
   34248:	add	x0, x1, x1, lsr #63
   3424c:	asr	x0, x0, #1
   34250:	mov	w21, w2
   34254:	add	w2, w2, #0x1
   34258:	add	x23, x3, w21, sxtw #3
   3425c:	str	x0, [x3, w21, sxtw #3]
   34260:	cmp	x1, #0x5
   34264:	b.gt	34244 <PyInit__decimal@@Base+0x1a0a4>
   34268:	tbnz	w21, #31, 345e8 <PyInit__decimal@@Base+0x1a448>
   3426c:	stp	x27, x28, [sp, #80]
   34270:	add	x26, sp, #0x940
   34274:	add	x20, sp, #0x280
   34278:	add	x28, sp, #0x6e0
   3427c:	add	x27, sp, #0x4b0
   34280:	add	x25, sp, #0x910
   34284:	b	34550 <PyInit__decimal@@Base+0x1a3b0>
   34288:	strb	wzr, [sp, #127]
   3428c:	add	x3, sp, #0x7f
   34290:	mov	x2, #0x8                   	// #8
   34294:	ldr	x0, [x19, #40]
   34298:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   3429c:	str	x0, [x19, #40]
   342a0:	ldrb	w0, [sp, #127]
   342a4:	cbnz	w0, 34154 <PyInit__decimal@@Base+0x19fb4>
   342a8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   342ac:	ldr	x0, [x0, #1672]
   342b0:	str	x0, [x19, #32]
   342b4:	b	34154 <PyInit__decimal@@Base+0x19fb4>
   342b8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   342bc:	ldr	x0, [x0, #3536]
   342c0:	cmp	x1, x0
   342c4:	cset	w0, cs  // cs = hs, nlast
   342c8:	add	w0, w0, #0x3
   342cc:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   342d0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   342d4:	ldr	x0, [x0, #3560]
   342d8:	cmp	x1, x0
   342dc:	b.cc	3430c <PyInit__decimal@@Base+0x1a16c>  // b.lo, b.ul, b.last
   342e0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   342e4:	ldr	x2, [x0, #3576]
   342e8:	mov	w0, #0x9                   	// #9
   342ec:	cmp	x1, x2
   342f0:	b.cs	341d0 <PyInit__decimal@@Base+0x1a030>  // b.hs, b.nlast
   342f4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   342f8:	ldr	x0, [x0, #3568]
   342fc:	cmp	x1, x0
   34300:	cset	w0, cs  // cs = hs, nlast
   34304:	add	w0, w0, #0x7
   34308:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   3430c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34310:	ldr	x0, [x0, #3552]
   34314:	cmp	x1, x0
   34318:	cset	w0, cs  // cs = hs, nlast
   3431c:	add	w0, w0, #0x5
   34320:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   34324:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34328:	ldr	x0, [x0, #3624]
   3432c:	cmp	x1, x0
   34330:	b.cs	34388 <PyInit__decimal@@Base+0x1a1e8>  // b.hs, b.nlast
   34334:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34338:	ldr	x0, [x0, #3600]
   3433c:	cmp	x1, x0
   34340:	b.cc	34370 <PyInit__decimal@@Base+0x1a1d0>  // b.lo, b.ul, b.last
   34344:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34348:	ldr	x2, [x0, #3616]
   3434c:	mov	w0, #0xe                   	// #14
   34350:	cmp	x1, x2
   34354:	b.cs	341d0 <PyInit__decimal@@Base+0x1a030>  // b.hs, b.nlast
   34358:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3435c:	ldr	x0, [x0, #3608]
   34360:	cmp	x1, x0
   34364:	cset	w0, cs  // cs = hs, nlast
   34368:	add	w0, w0, #0xc
   3436c:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   34370:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   34374:	ldr	x0, [x0, #3592]
   34378:	cmp	x1, x0
   3437c:	cset	w0, cs  // cs = hs, nlast
   34380:	add	w0, w0, #0xa
   34384:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   34388:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3438c:	ldr	x0, [x0, #3656]
   34390:	cmp	x1, x0
   34394:	b.cs	343d8 <PyInit__decimal@@Base+0x1a238>  // b.hs, b.nlast
   34398:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3439c:	ldr	x0, [x0, #3640]
   343a0:	cmp	x1, x0
   343a4:	b.cs	343c0 <PyInit__decimal@@Base+0x1a220>  // b.hs, b.nlast
   343a8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   343ac:	ldr	x0, [x0, #3632]
   343b0:	cmp	x1, x0
   343b4:	cset	w0, cs  // cs = hs, nlast
   343b8:	add	w0, w0, #0xf
   343bc:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   343c0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   343c4:	ldr	x0, [x0, #3648]
   343c8:	cmp	x1, x0
   343cc:	cset	w0, cs  // cs = hs, nlast
   343d0:	add	w0, w0, #0x11
   343d4:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   343d8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   343dc:	ldr	x0, [x0, #3664]
   343e0:	cmp	x1, x0
   343e4:	cset	w0, cs  // cs = hs, nlast
   343e8:	add	w0, w0, #0x13
   343ec:	b	341d0 <PyInit__decimal@@Base+0x1a030>
   343f0:	neg	x0, x25
   343f4:	str	x0, [sp, #1768]
   343f8:	add	x0, x25, x23
   343fc:	str	x0, [sp, #104]
   34400:	ldrb	w0, [x19]
   34404:	orr	w0, w0, #0x1
   34408:	strb	w0, [x19]
   3440c:	b	341f8 <PyInit__decimal@@Base+0x1a058>
   34410:	adrp	x23, 5b000 <PyInit__decimal@@Base+0x40e60>
   34414:	add	x23, x23, #0xc58
   34418:	add	x21, sp, #0x6e0
   3441c:	mov	x1, x23
   34420:	mov	x0, x21
   34424:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   34428:	mov	w24, w0
   3442c:	add	x4, sp, #0x910
   34430:	add	x5, x4, #0x1c
   34434:	mov	w3, #0x1                   	// #1
   34438:	mov	x2, x23
   3443c:	mov	x1, x21
   34440:	add	x0, sp, #0x280
   34444:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   34448:	ldr	w1, [sp, #2348]
   3444c:	mov	w0, #0x3be                 	// #958
   34450:	tst	w1, w0
   34454:	b.ne	344a8 <PyInit__decimal@@Base+0x1a308>  // b.any
   34458:	tbnz	w24, #31, 344c0 <PyInit__decimal@@Base+0x1a320>
   3445c:	ldr	x2, [sp, #648]
   34460:	ldr	x1, [sp, #656]
   34464:	ldr	x3, [x20, #16]
   34468:	ldr	x0, [x20]
   3446c:	sub	x3, x3, x0
   34470:	add	x4, x3, #0x1
   34474:	add	x0, x2, x1
   34478:	sub	x0, x0, #0x1
   3447c:	cmp	x4, x0
   34480:	b.gt	344d0 <PyInit__decimal@@Base+0x1a330>
   34484:	sub	x2, x2, #0x1
   34488:	str	x2, [sp, #648]
   3448c:	sub	x0, x1, #0x1
   34490:	adds	x0, x0, x2
   34494:	ldr	x2, [sp, #96]
   34498:	sub	x1, x2, x0
   3449c:	csel	x0, x1, x2, mi  // mi = first
   344a0:	str	x0, [sp, #96]
   344a4:	b	34230 <PyInit__decimal@@Base+0x1a090>
   344a8:	mov	x2, x22
   344ac:	mov	w1, #0x200                 	// #512
   344b0:	mov	x0, x19
   344b4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   344b8:	ldp	x25, x26, [sp, #64]
   344bc:	b	3463c <PyInit__decimal@@Base+0x1a49c>
   344c0:	ldr	x0, [sp, #648]
   344c4:	add	x0, x0, #0x1
   344c8:	str	x0, [sp, #648]
   344cc:	b	3445c <PyInit__decimal@@Base+0x1a2bc>
   344d0:	mov	x2, #0x1                   	// #1
   344d4:	lsr	w1, w24, #31
   344d8:	mov	x0, x19
   344dc:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   344e0:	ldp	x25, x26, [sp, #64]
   344e4:	b	3463c <PyInit__decimal@@Base+0x1a49c>
   344e8:	mov	x4, x22
   344ec:	mov	x3, x26
   344f0:	mov	x2, x20
   344f4:	mov	x1, x28
   344f8:	mov	x0, x20
   344fc:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   34500:	mov	x4, x22
   34504:	mov	x3, x25
   34508:	adrp	x2, 5b000 <PyInit__decimal@@Base+0x40e60>
   3450c:	add	x2, x2, #0xc58
   34510:	mov	x1, x20
   34514:	mov	x0, x20
   34518:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   3451c:	mov	x4, x22
   34520:	mov	x3, x25
   34524:	mov	x2, x20
   34528:	mov	x1, x19
   3452c:	mov	x0, x19
   34530:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   34534:	ldrb	w0, [x19]
   34538:	tst	w0, #0xe
   3453c:	b.ne	345e4 <PyInit__decimal@@Base+0x1a444>  // b.any
   34540:	sub	w21, w21, #0x1
   34544:	sub	x23, x23, #0x8
   34548:	cmn	w21, #0x1
   3454c:	b.eq	345dc <PyInit__decimal@@Base+0x1a43c>  // b.none
   34550:	ldr	x0, [x23]
   34554:	lsl	x0, x0, #1
   34558:	add	x0, x0, #0x3
   3455c:	str	x0, [sp, #2368]
   34560:	ldrb	w0, [x19]
   34564:	eor	w0, w0, #0x1
   34568:	strb	w0, [x19]
   3456c:	mov	x3, x22
   34570:	mov	x2, x26
   34574:	mov	x1, x19
   34578:	mov	x0, x20
   3457c:	bl	32dc0 <PyInit__decimal@@Base+0x18c20>
   34580:	ldrb	w0, [x19]
   34584:	eor	w0, w0, #0x1
   34588:	strb	w0, [x19]
   3458c:	ldr	x24, [sp, #1776]
   34590:	ldr	x0, [sp, #2368]
   34594:	cmp	x24, x0
   34598:	b.le	344e8 <PyInit__decimal@@Base+0x1a348>
   3459c:	sub	x24, x24, x0
   345a0:	mov	x3, x22
   345a4:	mov	x2, x24
   345a8:	mov	x1, x28
   345ac:	mov	x0, x27
   345b0:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   345b4:	ldr	x0, [sp, #1208]
   345b8:	add	x24, x0, x24
   345bc:	str	x24, [sp, #1208]
   345c0:	mov	x4, x22
   345c4:	mov	x3, x26
   345c8:	mov	x2, x20
   345cc:	mov	x1, x27
   345d0:	mov	x0, x20
   345d4:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   345d8:	b	34500 <PyInit__decimal@@Base+0x1a360>
   345dc:	ldp	x27, x28, [sp, #80]
   345e0:	b	345e8 <PyInit__decimal@@Base+0x1a448>
   345e4:	ldp	x27, x28, [sp, #80]
   345e8:	add	x23, sp, #0x6e0
   345ec:	mov	x2, x22
   345f0:	ldr	x0, [sp, #96]
   345f4:	add	x1, x0, #0x1
   345f8:	mov	x0, x23
   345fc:	bl	33a78 <PyInit__decimal@@Base+0x198d8>
   34600:	add	x21, sp, #0x910
   34604:	add	x20, sp, #0x280
   34608:	mov	x4, x22
   3460c:	mov	x3, x21
   34610:	ldr	x2, [sp, #104]
   34614:	mov	x1, x23
   34618:	mov	x0, x20
   3461c:	bl	30fb8 <PyInit__decimal@@Base+0x16e18>
   34620:	mov	x4, x22
   34624:	mov	x3, x21
   34628:	mov	x2, x19
   3462c:	mov	x1, x20
   34630:	mov	x0, x19
   34634:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   34638:	ldp	x25, x26, [sp, #64]
   3463c:	ldr	w0, [x22]
   34640:	mov	w1, #0x1040                	// #4160
   34644:	orr	w0, w0, w1
   34648:	str	w0, [x22]
   3464c:	ldrb	w0, [sp, #1760]
   34650:	tst	w0, #0xe0
   34654:	b.ne	34668 <PyInit__decimal@@Base+0x1a4c8>  // b.any
   34658:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3465c:	ldr	x1, [x0, #1704]
   34660:	ldr	x0, [sp, #1800]
   34664:	blr	x1
   34668:	ldrb	w0, [sp, #1760]
   3466c:	tbnz	w0, #4, 34680 <PyInit__decimal@@Base+0x1a4e0>
   34670:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34674:	ldr	x1, [x0, #1704]
   34678:	add	x0, sp, #0x6e0
   3467c:	blr	x1
   34680:	ldrb	w0, [sp, #1200]
   34684:	tst	w0, #0xe0
   34688:	b.ne	3469c <PyInit__decimal@@Base+0x1a4fc>  // b.any
   3468c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34690:	ldr	x1, [x0, #1704]
   34694:	ldr	x0, [sp, #1240]
   34698:	blr	x1
   3469c:	ldrb	w0, [sp, #1200]
   346a0:	tbnz	w0, #4, 346b4 <PyInit__decimal@@Base+0x1a514>
   346a4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   346a8:	ldr	x1, [x0, #1704]
   346ac:	add	x0, sp, #0x4b0
   346b0:	blr	x1
   346b4:	ldrb	w0, [sp, #640]
   346b8:	tst	w0, #0xe0
   346bc:	b.ne	346d0 <PyInit__decimal@@Base+0x1a530>  // b.any
   346c0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   346c4:	ldr	x1, [x0, #1704]
   346c8:	ldr	x0, [sp, #680]
   346cc:	blr	x1
   346d0:	ldrb	w0, [sp, #640]
   346d4:	tbnz	w0, #4, 346e8 <PyInit__decimal@@Base+0x1a548>
   346d8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   346dc:	ldr	x1, [x0, #1704]
   346e0:	add	x0, sp, #0x280
   346e4:	blr	x1
   346e8:	ldp	x19, x20, [sp, #16]
   346ec:	ldp	x21, x22, [sp, #32]
   346f0:	ldp	x23, x24, [sp, #48]
   346f4:	ldp	x29, x30, [sp]
   346f8:	add	sp, sp, #0x970
   346fc:	ret
   34700:	ldr	x0, [sp, #1784]
   34704:	ldr	x1, [sp, #1800]
   34708:	add	x0, x1, x0, lsl #3
   3470c:	ldur	x21, [x0, #-8]
   34710:	mov	x0, #0x13                  	// #19
   34714:	sub	x0, x0, #0x3
   34718:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3471c:	add	x1, x1, #0xdb8
   34720:	ldr	x0, [x1, x0, lsl #3]
   34724:	udiv	x21, x21, x0
   34728:	cmp	x21, #0x9
   3472c:	b.hi	34124 <PyInit__decimal@@Base+0x19f84>  // b.pmore
   34730:	add	x21, x21, x21, lsl #2
   34734:	lsl	x21, x21, #1
   34738:	add	x21, x21, x21, lsl #2
   3473c:	lsl	x21, x21, #1
   34740:	b	3412c <PyInit__decimal@@Base+0x19f8c>
   34744:	sub	sp, sp, #0x950
   34748:	stp	x29, x30, [sp]
   3474c:	mov	x29, sp
   34750:	stp	x19, x20, [sp, #16]
   34754:	stp	x21, x22, [sp, #32]
   34758:	mov	x19, x0
   3475c:	mov	x20, x1
   34760:	mov	x22, x2
   34764:	mov	x21, x3
   34768:	ldrb	w1, [x1]
   3476c:	tst	w1, #0xe
   34770:	b.ne	348f0 <PyInit__decimal@@Base+0x1a750>  // b.any
   34774:	ldr	x0, [x20, #24]
   34778:	ldr	x2, [x20, #40]
   3477c:	add	x0, x2, x0, lsl #3
   34780:	ldur	x0, [x0, #-8]
   34784:	cbz	x0, 3492c <PyInit__decimal@@Base+0x1a78c>
   34788:	tbnz	w1, #0, 34940 <PyInit__decimal@@Base+0x1a7a0>
   3478c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   34790:	add	x1, x1, #0xc58
   34794:	mov	x0, x20
   34798:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   3479c:	cbz	w0, 34964 <PyInit__decimal@@Base+0x1a7c4>
   347a0:	ldr	x0, [x20, #8]
   347a4:	ldr	x1, [x20, #16]
   347a8:	add	x0, x0, x1
   347ac:	subs	x1, x0, #0x1
   347b0:	csneg	x0, x1, x0, pl  // pl = nfrst
   347b4:	lsl	x0, x0, #1
   347b8:	cmp	x0, #0x0
   347bc:	cneg	x0, x0, lt  // lt = tstop
   347c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   347c4:	ldr	x2, [x2, #3584]
   347c8:	cmp	x0, x2
   347cc:	b.cs	349e8 <PyInit__decimal@@Base+0x1a848>  // b.hs, b.nlast
   347d0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   347d4:	ldr	x2, [x2, #3544]
   347d8:	cmp	x0, x2
   347dc:	b.cs	34994 <PyInit__decimal@@Base+0x1a7f4>  // b.hs, b.nlast
   347e0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   347e4:	ldr	x2, [x2, #3528]
   347e8:	cmp	x0, x2
   347ec:	b.cs	3497c <PyInit__decimal@@Base+0x1a7dc>  // b.hs, b.nlast
   347f0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   347f4:	ldr	x2, [x2, #3520]
   347f8:	cmp	x0, x2
   347fc:	cset	w2, cs  // cs = hs, nlast
   34800:	add	w2, w2, #0x1
   34804:	sub	w2, w2, #0x1
   34808:	ldr	x0, [x22, #8]
   3480c:	cmp	x0, w2, sxtw
   34810:	b.lt	34ab4 <PyInit__decimal@@Base+0x1a914>  // b.tstop
   34814:	ldp	x0, x1, [x22]
   34818:	add	x2, sp, #0xa00
   3481c:	stp	x0, x1, [x2, #-224]
   34820:	ldp	x0, x1, [x22, #16]
   34824:	stp	x0, x1, [x2, #-208]
   34828:	ldp	x0, x1, [x22, #32]
   3482c:	stp	x0, x1, [x2, #-192]
   34830:	mov	w0, #0x6                   	// #6
   34834:	str	w0, [sp, #2372]
   34838:	ldr	w0, [x22, #44]
   3483c:	cbz	w0, 34d04 <PyInit__decimal@@Base+0x1ab64>
   34840:	mov	w1, #0x30                  	// #48
   34844:	strb	w1, [sp, #96]
   34848:	str	xzr, [sp, #104]
   3484c:	str	xzr, [sp, #112]
   34850:	str	xzr, [sp, #120]
   34854:	mov	x0, #0x40                  	// #64
   34858:	str	x0, [sp, #128]
   3485c:	add	x2, sp, #0x120
   34860:	str	x2, [sp, #136]
   34864:	strb	w1, [sp, #144]
   34868:	str	xzr, [sp, #152]
   3486c:	str	xzr, [sp, #160]
   34870:	str	xzr, [sp, #168]
   34874:	str	x0, [sp, #176]
   34878:	add	x2, sp, #0x320
   3487c:	str	x2, [sp, #184]
   34880:	strb	w1, [sp, #192]
   34884:	str	xzr, [sp, #200]
   34888:	str	xzr, [sp, #208]
   3488c:	str	xzr, [sp, #216]
   34890:	str	x0, [sp, #224]
   34894:	add	x2, sp, #0x520
   34898:	str	x2, [sp, #232]
   3489c:	strb	w1, [sp, #240]
   348a0:	str	xzr, [sp, #248]
   348a4:	str	xzr, [sp, #256]
   348a8:	str	xzr, [sp, #264]
   348ac:	str	x0, [sp, #272]
   348b0:	add	x0, sp, #0x720
   348b4:	str	x0, [sp, #280]
   348b8:	cmp	x20, x19
   348bc:	b.eq	34ad8 <PyInit__decimal@@Base+0x1a938>  // b.none
   348c0:	stp	x23, x24, [sp, #48]
   348c4:	stp	x25, x26, [sp, #64]
   348c8:	stp	x27, x28, [sp, #80]
   348cc:	str	wzr, [sp, #2376]
   348d0:	ldr	x25, [x22]
   348d4:	add	x25, x25, #0x3
   348d8:	add	x23, sp, #0x920
   348dc:	add	x24, sp, #0xc0
   348e0:	add	x26, x23, #0x1c
   348e4:	add	x28, sp, #0x60
   348e8:	add	x27, sp, #0x90
   348ec:	b	34b08 <PyInit__decimal@@Base+0x1a968>
   348f0:	mov	x1, x20
   348f4:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   348f8:	cbnz	w0, 34950 <PyInit__decimal@@Base+0x1a7b0>
   348fc:	ldrb	w0, [x20]
   34900:	tbz	w0, #0, 34918 <PyInit__decimal@@Base+0x1a778>
   34904:	mov	x2, x21
   34908:	mov	w1, #0x100                 	// #256
   3490c:	mov	x0, x19
   34910:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   34914:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34918:	mov	w2, #0x2                   	// #2
   3491c:	mov	w1, #0x0                   	// #0
   34920:	mov	x0, x19
   34924:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   34928:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   3492c:	mov	w2, #0x2                   	// #2
   34930:	mov	w1, #0x1                   	// #1
   34934:	mov	x0, x19
   34938:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3493c:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34940:	mov	x2, x3
   34944:	mov	w1, #0x100                 	// #256
   34948:	mov	x0, x19
   3494c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   34950:	ldp	x19, x20, [sp, #16]
   34954:	ldp	x21, x22, [sp, #32]
   34958:	ldp	x29, x30, [sp]
   3495c:	add	sp, sp, #0x950
   34960:	ret
   34964:	mov	x3, #0x0                   	// #0
   34968:	mov	x2, #0x0                   	// #0
   3496c:	mov	w1, #0x0                   	// #0
   34970:	mov	x0, x19
   34974:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   34978:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   3497c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34980:	ldr	x2, [x2, #3536]
   34984:	cmp	x0, x2
   34988:	cset	w2, cs  // cs = hs, nlast
   3498c:	add	w2, w2, #0x3
   34990:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34994:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34998:	ldr	x2, [x2, #3560]
   3499c:	cmp	x0, x2
   349a0:	b.cc	349d0 <PyInit__decimal@@Base+0x1a830>  // b.lo, b.ul, b.last
   349a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   349a8:	ldr	x3, [x2, #3576]
   349ac:	mov	w2, #0x9                   	// #9
   349b0:	cmp	x0, x3
   349b4:	b.cs	34804 <PyInit__decimal@@Base+0x1a664>  // b.hs, b.nlast
   349b8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   349bc:	ldr	x2, [x2, #3568]
   349c0:	cmp	x0, x2
   349c4:	cset	w2, cs  // cs = hs, nlast
   349c8:	add	w2, w2, #0x7
   349cc:	b	34804 <PyInit__decimal@@Base+0x1a664>
   349d0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   349d4:	ldr	x2, [x2, #3552]
   349d8:	cmp	x0, x2
   349dc:	cset	w2, cs  // cs = hs, nlast
   349e0:	add	w2, w2, #0x5
   349e4:	b	34804 <PyInit__decimal@@Base+0x1a664>
   349e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   349ec:	ldr	x2, [x2, #3624]
   349f0:	cmp	x0, x2
   349f4:	b.cs	34a4c <PyInit__decimal@@Base+0x1a8ac>  // b.hs, b.nlast
   349f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   349fc:	ldr	x2, [x2, #3600]
   34a00:	cmp	x0, x2
   34a04:	b.cc	34a34 <PyInit__decimal@@Base+0x1a894>  // b.lo, b.ul, b.last
   34a08:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a0c:	ldr	x3, [x2, #3616]
   34a10:	mov	w2, #0xe                   	// #14
   34a14:	cmp	x0, x3
   34a18:	b.cs	34804 <PyInit__decimal@@Base+0x1a664>  // b.hs, b.nlast
   34a1c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a20:	ldr	x2, [x2, #3608]
   34a24:	cmp	x0, x2
   34a28:	cset	w2, cs  // cs = hs, nlast
   34a2c:	add	w2, w2, #0xc
   34a30:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34a34:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a38:	ldr	x2, [x2, #3592]
   34a3c:	cmp	x0, x2
   34a40:	cset	w2, cs  // cs = hs, nlast
   34a44:	add	w2, w2, #0xa
   34a48:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34a4c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a50:	ldr	x2, [x2, #3656]
   34a54:	cmp	x0, x2
   34a58:	b.cs	34a9c <PyInit__decimal@@Base+0x1a8fc>  // b.hs, b.nlast
   34a5c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a60:	ldr	x2, [x2, #3640]
   34a64:	cmp	x0, x2
   34a68:	b.cs	34a84 <PyInit__decimal@@Base+0x1a8e4>  // b.hs, b.nlast
   34a6c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a70:	ldr	x2, [x2, #3632]
   34a74:	cmp	x0, x2
   34a78:	cset	w2, cs  // cs = hs, nlast
   34a7c:	add	w2, w2, #0xf
   34a80:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34a84:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34a88:	ldr	x2, [x2, #3648]
   34a8c:	cmp	x0, x2
   34a90:	cset	w2, cs  // cs = hs, nlast
   34a94:	add	w2, w2, #0x11
   34a98:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34a9c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   34aa0:	ldr	x2, [x2, #3664]
   34aa4:	cmp	x0, x2
   34aa8:	cset	w2, cs  // cs = hs, nlast
   34aac:	add	w2, w2, #0x13
   34ab0:	b	34804 <PyInit__decimal@@Base+0x1a664>
   34ab4:	ldr	w0, [x21]
   34ab8:	mov	w2, #0x1840                	// #6208
   34abc:	orr	w0, w0, w2
   34ac0:	str	w0, [x21]
   34ac4:	mov	w2, #0x2                   	// #2
   34ac8:	lsr	x1, x1, #63
   34acc:	mov	x0, x19
   34ad0:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   34ad4:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34ad8:	mov	x2, x21
   34adc:	mov	x1, x20
   34ae0:	add	x0, sp, #0xf0
   34ae4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   34ae8:	add	x20, sp, #0xf0
   34aec:	cbnz	w0, 348c0 <PyInit__decimal@@Base+0x1a720>
   34af0:	mov	x2, x21
   34af4:	mov	w1, #0x200                 	// #512
   34af8:	mov	x0, x19
   34afc:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   34b00:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34b04:	add	x25, x25, #0x13
   34b08:	str	x25, [sp, #2336]
   34b0c:	mov	x3, x21
   34b10:	mov	x2, x23
   34b14:	mov	x1, x20
   34b18:	mov	x0, x19
   34b1c:	bl	33ff4 <PyInit__decimal@@Base+0x19e54>
   34b20:	ldr	x0, [x19, #8]
   34b24:	ldr	x3, [x19, #16]
   34b28:	add	x0, x0, x3
   34b2c:	ldr	x3, [sp, #2336]
   34b30:	sub	x3, x0, x3
   34b34:	mov	x2, #0x1                   	// #1
   34b38:	mov	w1, #0x0                   	// #0
   34b3c:	mov	x0, x24
   34b40:	bl	2606c <PyInit__decimal@@Base+0xbecc>
   34b44:	ldr	x0, [x22]
   34b48:	str	x0, [sp, #2336]
   34b4c:	mov	x4, x26
   34b50:	mov	x3, x23
   34b54:	mov	x2, x24
   34b58:	mov	x1, x19
   34b5c:	mov	x0, x28
   34b60:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   34b64:	mov	x4, x26
   34b68:	mov	x3, x23
   34b6c:	mov	x2, x24
   34b70:	mov	x1, x19
   34b74:	mov	x0, x27
   34b78:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   34b7c:	ldrb	w0, [x19]
   34b80:	tst	w0, #0xe
   34b84:	b.ne	34bb0 <PyInit__decimal@@Base+0x1aa10>  // b.any
   34b88:	ldr	x0, [x19, #24]
   34b8c:	ldr	x1, [x19, #40]
   34b90:	add	x0, x1, x0, lsl #3
   34b94:	ldur	x0, [x0, #-8]
   34b98:	cbz	x0, 34bb0 <PyInit__decimal@@Base+0x1aa10>
   34b9c:	mov	x2, x21
   34ba0:	mov	x1, x27
   34ba4:	mov	x0, x28
   34ba8:	bl	2a830 <PyInit__decimal@@Base+0x10690>
   34bac:	cbnz	w0, 34b04 <PyInit__decimal@@Base+0x1a964>
   34bb0:	ldr	w0, [x22, #40]
   34bb4:	str	w0, [sp, #2376]
   34bb8:	ldr	x2, [x19, #8]
   34bbc:	ldr	x1, [sp, #2352]
   34bc0:	ldr	x0, [x19, #16]
   34bc4:	add	x0, x2, x0
   34bc8:	sub	x0, x0, #0x1
   34bcc:	cmp	x0, x1
   34bd0:	b.ge	34c14 <PyInit__decimal@@Base+0x1aa74>  // b.tcont
   34bd4:	ldrb	w0, [x19]
   34bd8:	tst	w0, #0xe
   34bdc:	b.ne	34bf4 <PyInit__decimal@@Base+0x1aa54>  // b.any
   34be0:	ldr	x0, [x19, #24]
   34be4:	ldr	x3, [x19, #40]
   34be8:	add	x0, x3, x0, lsl #3
   34bec:	ldur	x0, [x0, #-8]
   34bf0:	cbz	x0, 34c14 <PyInit__decimal@@Base+0x1aa74>
   34bf4:	add	x1, x1, #0x1
   34bf8:	ldr	x0, [sp, #2336]
   34bfc:	sub	x1, x1, x0
   34c00:	cmp	x2, x1
   34c04:	b.ge	34c14 <PyInit__decimal@@Base+0x1aa74>  // b.tcont
   34c08:	ldr	w0, [x21]
   34c0c:	orr	w0, w0, #0x4000
   34c10:	str	w0, [x21]
   34c14:	mov	x2, x21
   34c18:	add	x1, sp, #0x920
   34c1c:	mov	x0, x19
   34c20:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   34c24:	ldrb	w0, [sp, #96]
   34c28:	tst	w0, #0xe0
   34c2c:	b.ne	34c40 <PyInit__decimal@@Base+0x1aaa0>  // b.any
   34c30:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34c34:	ldr	x1, [x0, #1704]
   34c38:	ldr	x0, [sp, #136]
   34c3c:	blr	x1
   34c40:	ldrb	w0, [sp, #96]
   34c44:	tbnz	w0, #4, 34c58 <PyInit__decimal@@Base+0x1aab8>
   34c48:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34c4c:	ldr	x1, [x0, #1704]
   34c50:	add	x0, sp, #0x60
   34c54:	blr	x1
   34c58:	ldrb	w0, [sp, #144]
   34c5c:	tst	w0, #0xe0
   34c60:	b.ne	34c74 <PyInit__decimal@@Base+0x1aad4>  // b.any
   34c64:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34c68:	ldr	x1, [x0, #1704]
   34c6c:	ldr	x0, [sp, #184]
   34c70:	blr	x1
   34c74:	ldrb	w0, [sp, #144]
   34c78:	tbnz	w0, #4, 34c8c <PyInit__decimal@@Base+0x1aaec>
   34c7c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34c80:	ldr	x1, [x0, #1704]
   34c84:	add	x0, sp, #0x90
   34c88:	blr	x1
   34c8c:	ldrb	w0, [sp, #192]
   34c90:	tst	w0, #0xe0
   34c94:	b.ne	34ca8 <PyInit__decimal@@Base+0x1ab08>  // b.any
   34c98:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34c9c:	ldr	x1, [x0, #1704]
   34ca0:	ldr	x0, [sp, #232]
   34ca4:	blr	x1
   34ca8:	ldrb	w0, [sp, #192]
   34cac:	tbnz	w0, #4, 34cc0 <PyInit__decimal@@Base+0x1ab20>
   34cb0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34cb4:	ldr	x1, [x0, #1704]
   34cb8:	add	x0, sp, #0xc0
   34cbc:	blr	x1
   34cc0:	ldrb	w0, [sp, #240]
   34cc4:	tst	w0, #0xe0
   34cc8:	b.ne	34cdc <PyInit__decimal@@Base+0x1ab3c>  // b.any
   34ccc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34cd0:	ldr	x1, [x0, #1704]
   34cd4:	ldr	x0, [sp, #280]
   34cd8:	blr	x1
   34cdc:	ldrb	w0, [sp, #240]
   34ce0:	tbnz	w0, #4, 34d88 <PyInit__decimal@@Base+0x1abe8>
   34ce4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34ce8:	ldr	x1, [x0, #1704]
   34cec:	add	x0, sp, #0xf0
   34cf0:	blr	x1
   34cf4:	ldp	x23, x24, [sp, #48]
   34cf8:	ldp	x25, x26, [sp, #64]
   34cfc:	ldp	x27, x28, [sp, #80]
   34d00:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34d04:	mov	x3, x21
   34d08:	add	x2, sp, #0x920
   34d0c:	mov	x1, x20
   34d10:	mov	x0, x19
   34d14:	bl	33ff4 <PyInit__decimal@@Base+0x19e54>
   34d18:	ldr	x2, [x19, #8]
   34d1c:	ldr	x1, [sp, #2352]
   34d20:	ldr	x0, [x19, #16]
   34d24:	add	x0, x2, x0
   34d28:	sub	x0, x0, #0x1
   34d2c:	cmp	x0, x1
   34d30:	b.ge	34d74 <PyInit__decimal@@Base+0x1abd4>  // b.tcont
   34d34:	ldrb	w0, [x19]
   34d38:	tst	w0, #0xe
   34d3c:	b.ne	34d54 <PyInit__decimal@@Base+0x1abb4>  // b.any
   34d40:	ldr	x0, [x19, #24]
   34d44:	ldr	x3, [x19, #40]
   34d48:	add	x0, x3, x0, lsl #3
   34d4c:	ldur	x0, [x0, #-8]
   34d50:	cbz	x0, 34d74 <PyInit__decimal@@Base+0x1abd4>
   34d54:	add	x0, x1, #0x1
   34d58:	ldr	x1, [sp, #2336]
   34d5c:	sub	x0, x0, x1
   34d60:	cmp	x2, x0
   34d64:	b.ge	34d74 <PyInit__decimal@@Base+0x1abd4>  // b.tcont
   34d68:	ldr	w0, [x21]
   34d6c:	orr	w0, w0, #0x4000
   34d70:	str	w0, [x21]
   34d74:	mov	x2, x21
   34d78:	add	x1, sp, #0x920
   34d7c:	mov	x0, x19
   34d80:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   34d84:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34d88:	ldp	x23, x24, [sp, #48]
   34d8c:	ldp	x25, x26, [sp, #64]
   34d90:	ldp	x27, x28, [sp, #80]
   34d94:	b	34950 <PyInit__decimal@@Base+0x1a7b0>
   34d98:	sub	sp, sp, #0x2a0
   34d9c:	stp	x29, x30, [sp]
   34da0:	mov	x29, sp
   34da4:	stp	x19, x20, [sp, #16]
   34da8:	stp	x21, x22, [sp, #32]
   34dac:	mov	x19, x0
   34db0:	mov	x21, x1
   34db4:	mov	x1, x2
   34db8:	mov	x22, x3
   34dbc:	mov	x20, x4
   34dc0:	mov	w0, #0x30                  	// #48
   34dc4:	strb	w0, [sp, #64]
   34dc8:	str	xzr, [sp, #72]
   34dcc:	str	xzr, [sp, #80]
   34dd0:	str	xzr, [sp, #88]
   34dd4:	mov	x0, #0x40                  	// #64
   34dd8:	str	x0, [sp, #96]
   34ddc:	add	x0, sp, #0x70
   34de0:	str	x0, [sp, #104]
   34de4:	mov	x2, x4
   34de8:	add	x0, sp, #0x40
   34dec:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   34df0:	cbz	w0, 34edc <PyInit__decimal@@Base+0x1ad3c>
   34df4:	str	x23, [sp, #48]
   34df8:	add	x23, sp, #0x270
   34dfc:	mov	x0, x23
   34e00:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   34e04:	ldr	x1, [x21, #16]
   34e08:	ldr	x0, [x22]
   34e0c:	cmp	x0, x1
   34e10:	csel	x0, x0, x1, ge  // ge = tcont
   34e14:	add	x0, x0, #0x17
   34e18:	str	x0, [sp, #624]
   34e1c:	mov	w0, #0x6                   	// #6
   34e20:	str	w0, [sp, #660]
   34e24:	ldr	w0, [x22, #44]
   34e28:	str	w0, [sp, #668]
   34e2c:	add	x22, x23, #0x1c
   34e30:	mov	x3, x22
   34e34:	mov	x2, x23
   34e38:	mov	x1, x21
   34e3c:	mov	x0, x19
   34e40:	bl	34744 <PyInit__decimal@@Base+0x1a5a4>
   34e44:	mov	x4, x22
   34e48:	mov	x3, x23
   34e4c:	add	x2, sp, #0x40
   34e50:	mov	x1, x19
   34e54:	mov	x0, x19
   34e58:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   34e5c:	mov	x3, x20
   34e60:	mov	x2, x23
   34e64:	mov	x1, x19
   34e68:	mov	x0, x19
   34e6c:	bl	335f0 <PyInit__decimal@@Base+0x19450>
   34e70:	ldrb	w0, [sp, #64]
   34e74:	tst	w0, #0xe0
   34e78:	b.ne	34e8c <PyInit__decimal@@Base+0x1acec>  // b.any
   34e7c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34e80:	ldr	x1, [x0, #1704]
   34e84:	ldr	x0, [sp, #104]
   34e88:	blr	x1
   34e8c:	ldrb	w0, [sp, #64]
   34e90:	tbnz	w0, #4, 34ea4 <PyInit__decimal@@Base+0x1ad04>
   34e94:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34e98:	ldr	x1, [x0, #1704]
   34e9c:	add	x0, sp, #0x40
   34ea0:	blr	x1
   34ea4:	ldr	w0, [sp, #652]
   34ea8:	mov	w1, #0x3be                 	// #958
   34eac:	and	w0, w0, w1
   34eb0:	ldr	w1, [x20]
   34eb4:	orr	w0, w0, w1
   34eb8:	mov	w1, #0x1040                	// #4160
   34ebc:	orr	w0, w0, w1
   34ec0:	str	w0, [x20]
   34ec4:	ldr	x23, [sp, #48]
   34ec8:	ldp	x19, x20, [sp, #16]
   34ecc:	ldp	x21, x22, [sp, #32]
   34ed0:	ldp	x29, x30, [sp]
   34ed4:	add	sp, sp, #0x2a0
   34ed8:	ret
   34edc:	mov	x2, x20
   34ee0:	mov	w1, #0x200                 	// #512
   34ee4:	mov	x0, x19
   34ee8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   34eec:	b	34ec8 <PyInit__decimal@@Base+0x1ad28>
   34ef0:	sub	sp, sp, #0x2a0
   34ef4:	stp	x29, x30, [sp]
   34ef8:	mov	x29, sp
   34efc:	stp	x19, x20, [sp, #16]
   34f00:	stp	x21, x22, [sp, #32]
   34f04:	stp	x23, x24, [sp, #48]
   34f08:	mov	w22, w0
   34f0c:	mov	x19, x1
   34f10:	mov	x23, x2
   34f14:	mov	x21, x3
   34f18:	mov	x20, x4
   34f1c:	mov	w0, #0x30                  	// #48
   34f20:	strb	w0, [sp, #64]
   34f24:	str	xzr, [sp, #72]
   34f28:	str	xzr, [sp, #80]
   34f2c:	str	xzr, [sp, #88]
   34f30:	mov	x0, #0x40                  	// #64
   34f34:	str	x0, [sp, #96]
   34f38:	add	x0, sp, #0x70
   34f3c:	str	x0, [sp, #104]
   34f40:	add	x24, sp, #0x270
   34f44:	mov	x0, x24
   34f48:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   34f4c:	ldr	x0, [x21]
   34f50:	add	x0, x0, #0x3
   34f54:	str	x0, [sp, #624]
   34f58:	mov	x3, x20
   34f5c:	mov	x2, x24
   34f60:	mov	x1, x23
   34f64:	mov	x0, x19
   34f68:	bl	33ff4 <PyInit__decimal@@Base+0x19e54>
   34f6c:	mov	x2, x20
   34f70:	ldr	x1, [sp, #624]
   34f74:	add	x0, sp, #0x40
   34f78:	bl	33a78 <PyInit__decimal@@Base+0x198d8>
   34f7c:	cmp	w22, #0x1
   34f80:	b.eq	34fec <PyInit__decimal@@Base+0x1ae4c>  // b.none
   34f84:	mov	x5, x20
   34f88:	add	x4, sp, #0x270
   34f8c:	add	x3, sp, #0x40
   34f90:	mov	x2, x19
   34f94:	mov	x1, x19
   34f98:	mov	w0, #0x0                   	// #0
   34f9c:	bl	32430 <PyInit__decimal@@Base+0x18290>
   34fa0:	ldrb	w0, [sp, #64]
   34fa4:	tst	w0, #0xe0
   34fa8:	b.ne	34fbc <PyInit__decimal@@Base+0x1ae1c>  // b.any
   34fac:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34fb0:	ldr	x1, [x0, #1704]
   34fb4:	ldr	x0, [sp, #104]
   34fb8:	blr	x1
   34fbc:	ldrb	w0, [sp, #64]
   34fc0:	tbnz	w0, #4, 34fd4 <PyInit__decimal@@Base+0x1ae34>
   34fc4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   34fc8:	ldr	x1, [x0, #1704]
   34fcc:	add	x0, sp, #0x40
   34fd0:	blr	x1
   34fd4:	ldp	x19, x20, [sp, #16]
   34fd8:	ldp	x21, x22, [sp, #32]
   34fdc:	ldp	x23, x24, [sp, #48]
   34fe0:	ldp	x29, x30, [sp]
   34fe4:	add	sp, sp, #0x2a0
   34fe8:	ret
   34fec:	ldp	x0, x1, [x21]
   34ff0:	add	x2, sp, #0x200
   34ff4:	stp	x0, x1, [x2, #112]
   34ff8:	ldp	x0, x1, [x21, #16]
   34ffc:	stp	x0, x1, [x2, #128]
   35000:	ldp	x0, x1, [x21, #32]
   35004:	stp	x0, x1, [x2, #144]
   35008:	mov	w0, #0x6                   	// #6
   3500c:	str	w0, [sp, #660]
   35010:	b	34f84 <PyInit__decimal@@Base+0x1ade4>
   35014:	sub	sp, sp, #0x950
   35018:	stp	x29, x30, [sp]
   3501c:	mov	x29, sp
   35020:	stp	x19, x20, [sp, #16]
   35024:	stp	x21, x22, [sp, #32]
   35028:	mov	x19, x0
   3502c:	mov	x21, x1
   35030:	mov	x20, x2
   35034:	mov	x22, x3
   35038:	ldp	x0, x1, [x2]
   3503c:	add	x2, sp, #0xa00
   35040:	stp	x0, x1, [x2, #-224]
   35044:	ldp	x0, x1, [x20, #16]
   35048:	stp	x0, x1, [x2, #-208]
   3504c:	ldp	x0, x1, [x20, #32]
   35050:	stp	x0, x1, [x2, #-192]
   35054:	mov	w0, #0x6                   	// #6
   35058:	str	w0, [sp, #2372]
   3505c:	ldrb	w3, [x21]
   35060:	tst	w3, #0xe
   35064:	b.ne	352c4 <PyInit__decimal@@Base+0x1b124>  // b.any
   35068:	ldr	x4, [x21, #40]
   3506c:	ldr	x0, [x21, #24]
   35070:	add	x1, x4, x0, lsl #3
   35074:	ldur	x2, [x1, #-8]
   35078:	cbz	x2, 3530c <PyInit__decimal@@Base+0x1b16c>
   3507c:	and	w1, w3, #0x1
   35080:	tbnz	w3, #0, 35320 <PyInit__decimal@@Base+0x1b180>
   35084:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35088:	ldr	x6, [x3, #3584]
   3508c:	cmp	x2, x6
   35090:	b.cs	353a0 <PyInit__decimal@@Base+0x1b200>  // b.hs, b.nlast
   35094:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35098:	ldr	x3, [x3, #3544]
   3509c:	cmp	x2, x3
   350a0:	b.cs	3534c <PyInit__decimal@@Base+0x1b1ac>  // b.hs, b.nlast
   350a4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   350a8:	ldr	x3, [x3, #3528]
   350ac:	cmp	x2, x3
   350b0:	b.cs	35334 <PyInit__decimal@@Base+0x1b194>  // b.hs, b.nlast
   350b4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   350b8:	ldr	x3, [x3, #3520]
   350bc:	cmp	x2, x3
   350c0:	cset	w3, cs  // cs = hs, nlast
   350c4:	add	w3, w3, #0x1
   350c8:	sub	w3, w3, #0x1
   350cc:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27e60>
   350d0:	add	x5, x5, #0xdb8
   350d4:	ldr	x3, [x5, w3, sxtw #3]
   350d8:	cmp	x2, x3
   350dc:	b.ne	350f4 <PyInit__decimal@@Base+0x1af54>  // b.any
   350e0:	sub	x0, x0, #0x1
   350e4:	subs	x0, x0, #0x1
   350e8:	b.mi	357cc <PyInit__decimal@@Base+0x1b62c>  // b.first
   350ec:	ldr	x2, [x4, x0, lsl #3]
   350f0:	cbz	x2, 350e4 <PyInit__decimal@@Base+0x1af44>
   350f4:	ldr	x1, [x21, #8]
   350f8:	ldr	x2, [x21, #16]
   350fc:	add	x0, x1, x2
   35100:	subs	x3, x0, #0x1
   35104:	csel	x0, x0, x3, mi  // mi = first
   35108:	cmp	x0, #0x0
   3510c:	cneg	x0, x0, lt  // lt = tstop
   35110:	cmp	x6, x0
   35114:	b.ls	354e4 <PyInit__decimal@@Base+0x1b344>  // b.plast
   35118:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3511c:	ldr	x1, [x1, #3544]
   35120:	cmp	x0, x1
   35124:	b.cs	35490 <PyInit__decimal@@Base+0x1b2f0>  // b.hs, b.nlast
   35128:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3512c:	ldr	x1, [x1, #3528]
   35130:	cmp	x0, x1
   35134:	b.cs	35478 <PyInit__decimal@@Base+0x1b2d8>  // b.hs, b.nlast
   35138:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3513c:	ldr	x1, [x1, #3520]
   35140:	cmp	x0, x1
   35144:	cset	w2, cs  // cs = hs, nlast
   35148:	add	w2, w2, #0x1
   3514c:	sub	w2, w2, #0x1
   35150:	ldr	x0, [x20, #8]
   35154:	cmp	x0, w2, sxtw
   35158:	b.lt	355b0 <PyInit__decimal@@Base+0x1b410>  // b.tstop
   3515c:	ldr	w0, [x20, #44]
   35160:	cbz	w0, 35754 <PyInit__decimal@@Base+0x1b5b4>
   35164:	mov	w1, #0x30                  	// #48
   35168:	strb	w1, [sp, #96]
   3516c:	str	xzr, [sp, #104]
   35170:	str	xzr, [sp, #112]
   35174:	str	xzr, [sp, #120]
   35178:	mov	x0, #0x40                  	// #64
   3517c:	str	x0, [sp, #128]
   35180:	add	x2, sp, #0x120
   35184:	str	x2, [sp, #136]
   35188:	strb	w1, [sp, #144]
   3518c:	str	xzr, [sp, #152]
   35190:	str	xzr, [sp, #160]
   35194:	str	xzr, [sp, #168]
   35198:	str	x0, [sp, #176]
   3519c:	add	x2, sp, #0x320
   351a0:	str	x2, [sp, #184]
   351a4:	strb	w1, [sp, #192]
   351a8:	str	xzr, [sp, #200]
   351ac:	str	xzr, [sp, #208]
   351b0:	str	xzr, [sp, #216]
   351b4:	str	x0, [sp, #224]
   351b8:	add	x2, sp, #0x520
   351bc:	str	x2, [sp, #232]
   351c0:	strb	w1, [sp, #240]
   351c4:	str	xzr, [sp, #248]
   351c8:	str	xzr, [sp, #256]
   351cc:	str	xzr, [sp, #264]
   351d0:	str	x0, [sp, #272]
   351d4:	add	x0, sp, #0x720
   351d8:	str	x0, [sp, #280]
   351dc:	cmp	x21, x19
   351e0:	b.eq	355d4 <PyInit__decimal@@Base+0x1b434>  // b.none
   351e4:	stp	x23, x24, [sp, #48]
   351e8:	stp	x25, x26, [sp, #64]
   351ec:	stp	x27, x28, [sp, #80]
   351f0:	str	wzr, [sp, #2376]
   351f4:	ldr	x25, [x20]
   351f8:	add	x25, x25, #0x3
   351fc:	add	x23, sp, #0x920
   35200:	add	x24, sp, #0xc0
   35204:	add	x26, x23, #0x1c
   35208:	add	x28, sp, #0x60
   3520c:	add	x27, sp, #0x90
   35210:	str	x25, [sp, #2336]
   35214:	mov	x4, x22
   35218:	mov	x3, x23
   3521c:	mov	x2, x21
   35220:	mov	x1, x19
   35224:	mov	w0, #0x0                   	// #0
   35228:	bl	34ef0 <PyInit__decimal@@Base+0x1ad50>
   3522c:	ldr	x0, [x19, #8]
   35230:	ldr	x3, [x19, #16]
   35234:	add	x0, x0, x3
   35238:	ldr	x3, [sp, #2336]
   3523c:	sub	x3, x0, x3
   35240:	mov	x2, #0x1                   	// #1
   35244:	mov	w1, #0x0                   	// #0
   35248:	mov	x0, x24
   3524c:	bl	2606c <PyInit__decimal@@Base+0xbecc>
   35250:	ldr	x0, [x20]
   35254:	str	x0, [sp, #2336]
   35258:	mov	x4, x26
   3525c:	mov	x3, x23
   35260:	mov	x2, x24
   35264:	mov	x1, x19
   35268:	mov	x0, x28
   3526c:	bl	2ef60 <PyInit__decimal@@Base+0x14dc0>
   35270:	mov	x4, x26
   35274:	mov	x3, x23
   35278:	mov	x2, x24
   3527c:	mov	x1, x19
   35280:	mov	x0, x27
   35284:	bl	2f074 <PyInit__decimal@@Base+0x14ed4>
   35288:	ldrb	w0, [x19]
   3528c:	tst	w0, #0xe
   35290:	b.ne	35600 <PyInit__decimal@@Base+0x1b460>  // b.any
   35294:	ldr	x0, [x19, #24]
   35298:	ldr	x1, [x19, #40]
   3529c:	add	x0, x1, x0, lsl #3
   352a0:	ldur	x0, [x0, #-8]
   352a4:	cbz	x0, 35600 <PyInit__decimal@@Base+0x1b460>
   352a8:	mov	x2, x22
   352ac:	mov	x1, x27
   352b0:	mov	x0, x28
   352b4:	bl	2a830 <PyInit__decimal@@Base+0x10690>
   352b8:	cbz	w0, 35600 <PyInit__decimal@@Base+0x1b460>
   352bc:	add	x25, x25, #0x13
   352c0:	b	35210 <PyInit__decimal@@Base+0x1b070>
   352c4:	mov	x3, x22
   352c8:	mov	x2, x20
   352cc:	mov	x1, x21
   352d0:	mov	x0, x19
   352d4:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   352d8:	cbnz	w0, 357fc <PyInit__decimal@@Base+0x1b65c>
   352dc:	ldrb	w0, [x21]
   352e0:	tbz	w0, #0, 352f8 <PyInit__decimal@@Base+0x1b158>
   352e4:	mov	x2, x22
   352e8:	mov	w1, #0x100                 	// #256
   352ec:	mov	x0, x19
   352f0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   352f4:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   352f8:	mov	w2, #0x2                   	// #2
   352fc:	mov	w1, #0x0                   	// #0
   35300:	mov	x0, x19
   35304:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   35308:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   3530c:	mov	w2, #0x2                   	// #2
   35310:	mov	w1, #0x1                   	// #1
   35314:	mov	x0, x19
   35318:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3531c:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   35320:	mov	x2, x22
   35324:	mov	w1, #0x100                 	// #256
   35328:	mov	x0, x19
   3532c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   35330:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   35334:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35338:	ldr	x3, [x3, #3536]
   3533c:	cmp	x2, x3
   35340:	cset	w3, cs  // cs = hs, nlast
   35344:	add	w3, w3, #0x3
   35348:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   3534c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35350:	ldr	x3, [x3, #3560]
   35354:	cmp	x2, x3
   35358:	b.cc	35388 <PyInit__decimal@@Base+0x1b1e8>  // b.lo, b.ul, b.last
   3535c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35360:	ldr	x5, [x3, #3576]
   35364:	mov	w3, #0x9                   	// #9
   35368:	cmp	x2, x5
   3536c:	b.cs	350c8 <PyInit__decimal@@Base+0x1af28>  // b.hs, b.nlast
   35370:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35374:	ldr	x3, [x3, #3568]
   35378:	cmp	x2, x3
   3537c:	cset	w3, cs  // cs = hs, nlast
   35380:	add	w3, w3, #0x7
   35384:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   35388:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   3538c:	ldr	x3, [x3, #3552]
   35390:	cmp	x2, x3
   35394:	cset	w3, cs  // cs = hs, nlast
   35398:	add	w3, w3, #0x5
   3539c:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   353a0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   353a4:	ldr	x3, [x3, #3624]
   353a8:	cmp	x2, x3
   353ac:	b.cs	35404 <PyInit__decimal@@Base+0x1b264>  // b.hs, b.nlast
   353b0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   353b4:	ldr	x3, [x3, #3600]
   353b8:	cmp	x2, x3
   353bc:	b.cc	353ec <PyInit__decimal@@Base+0x1b24c>  // b.lo, b.ul, b.last
   353c0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   353c4:	ldr	x5, [x3, #3616]
   353c8:	mov	w3, #0xe                   	// #14
   353cc:	cmp	x2, x5
   353d0:	b.cs	350c8 <PyInit__decimal@@Base+0x1af28>  // b.hs, b.nlast
   353d4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   353d8:	ldr	x3, [x3, #3608]
   353dc:	cmp	x2, x3
   353e0:	cset	w3, cs  // cs = hs, nlast
   353e4:	add	w3, w3, #0xc
   353e8:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   353ec:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   353f0:	ldr	x3, [x3, #3592]
   353f4:	cmp	x2, x3
   353f8:	cset	w3, cs  // cs = hs, nlast
   353fc:	add	w3, w3, #0xa
   35400:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   35404:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35408:	ldr	x3, [x3, #3656]
   3540c:	cmp	x2, x3
   35410:	b.cs	35454 <PyInit__decimal@@Base+0x1b2b4>  // b.hs, b.nlast
   35414:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35418:	ldr	x3, [x3, #3640]
   3541c:	cmp	x2, x3
   35420:	b.cs	3543c <PyInit__decimal@@Base+0x1b29c>  // b.hs, b.nlast
   35424:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35428:	ldr	x3, [x3, #3632]
   3542c:	cmp	x2, x3
   35430:	cset	w3, cs  // cs = hs, nlast
   35434:	add	w3, w3, #0xf
   35438:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   3543c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35440:	ldr	x3, [x3, #3648]
   35444:	cmp	x2, x3
   35448:	cset	w3, cs  // cs = hs, nlast
   3544c:	add	w3, w3, #0x11
   35450:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   35454:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   35458:	ldr	x3, [x3, #3664]
   3545c:	cmp	x2, x3
   35460:	cset	w3, cs  // cs = hs, nlast
   35464:	add	w3, w3, #0x13
   35468:	b	350c8 <PyInit__decimal@@Base+0x1af28>
   3546c:	mov	x1, #0x1                   	// #1
   35470:	sub	x2, x1, x0
   35474:	b	357e0 <PyInit__decimal@@Base+0x1b640>
   35478:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3547c:	ldr	x1, [x1, #3536]
   35480:	cmp	x0, x1
   35484:	cset	w2, cs  // cs = hs, nlast
   35488:	add	w2, w2, #0x3
   3548c:	b	3514c <PyInit__decimal@@Base+0x1afac>
   35490:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35494:	ldr	x1, [x1, #3560]
   35498:	cmp	x0, x1
   3549c:	b.cc	354cc <PyInit__decimal@@Base+0x1b32c>  // b.lo, b.ul, b.last
   354a0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   354a4:	ldr	x1, [x1, #3576]
   354a8:	mov	w2, #0x9                   	// #9
   354ac:	cmp	x0, x1
   354b0:	b.cs	3514c <PyInit__decimal@@Base+0x1afac>  // b.hs, b.nlast
   354b4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   354b8:	ldr	x1, [x1, #3568]
   354bc:	cmp	x0, x1
   354c0:	cset	w2, cs  // cs = hs, nlast
   354c4:	add	w2, w2, #0x7
   354c8:	b	3514c <PyInit__decimal@@Base+0x1afac>
   354cc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   354d0:	ldr	x1, [x1, #3552]
   354d4:	cmp	x0, x1
   354d8:	cset	w2, cs  // cs = hs, nlast
   354dc:	add	w2, w2, #0x5
   354e0:	b	3514c <PyInit__decimal@@Base+0x1afac>
   354e4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   354e8:	ldr	x1, [x1, #3624]
   354ec:	cmp	x0, x1
   354f0:	b.cs	35548 <PyInit__decimal@@Base+0x1b3a8>  // b.hs, b.nlast
   354f4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   354f8:	ldr	x1, [x1, #3600]
   354fc:	cmp	x0, x1
   35500:	b.cc	35530 <PyInit__decimal@@Base+0x1b390>  // b.lo, b.ul, b.last
   35504:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35508:	ldr	x1, [x1, #3616]
   3550c:	mov	w2, #0xe                   	// #14
   35510:	cmp	x0, x1
   35514:	b.cs	3514c <PyInit__decimal@@Base+0x1afac>  // b.hs, b.nlast
   35518:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3551c:	ldr	x1, [x1, #3608]
   35520:	cmp	x0, x1
   35524:	cset	w2, cs  // cs = hs, nlast
   35528:	add	w2, w2, #0xc
   3552c:	b	3514c <PyInit__decimal@@Base+0x1afac>
   35530:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35534:	ldr	x1, [x1, #3592]
   35538:	cmp	x0, x1
   3553c:	cset	w2, cs  // cs = hs, nlast
   35540:	add	w2, w2, #0xa
   35544:	b	3514c <PyInit__decimal@@Base+0x1afac>
   35548:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3554c:	ldr	x1, [x1, #3656]
   35550:	cmp	x0, x1
   35554:	b.cs	35598 <PyInit__decimal@@Base+0x1b3f8>  // b.hs, b.nlast
   35558:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3555c:	ldr	x1, [x1, #3640]
   35560:	cmp	x0, x1
   35564:	b.cs	35580 <PyInit__decimal@@Base+0x1b3e0>  // b.hs, b.nlast
   35568:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3556c:	ldr	x1, [x1, #3632]
   35570:	cmp	x0, x1
   35574:	cset	w2, cs  // cs = hs, nlast
   35578:	add	w2, w2, #0xf
   3557c:	b	3514c <PyInit__decimal@@Base+0x1afac>
   35580:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35584:	ldr	x1, [x1, #3648]
   35588:	cmp	x0, x1
   3558c:	cset	w2, cs  // cs = hs, nlast
   35590:	add	w2, w2, #0x11
   35594:	b	3514c <PyInit__decimal@@Base+0x1afac>
   35598:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3559c:	ldr	x1, [x1, #3664]
   355a0:	cmp	x0, x1
   355a4:	cset	w2, cs  // cs = hs, nlast
   355a8:	add	w2, w2, #0x13
   355ac:	b	3514c <PyInit__decimal@@Base+0x1afac>
   355b0:	ldr	w0, [x22]
   355b4:	mov	w1, #0x1840                	// #6208
   355b8:	orr	w0, w0, w1
   355bc:	str	w0, [x22]
   355c0:	mov	w2, #0x2                   	// #2
   355c4:	lsr	x1, x3, #63
   355c8:	mov	x0, x19
   355cc:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   355d0:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   355d4:	mov	x2, x22
   355d8:	mov	x1, x21
   355dc:	add	x0, sp, #0xf0
   355e0:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   355e4:	add	x21, sp, #0xf0
   355e8:	cbnz	w0, 351e4 <PyInit__decimal@@Base+0x1b044>
   355ec:	mov	x2, x22
   355f0:	mov	w1, #0x200                 	// #512
   355f4:	mov	x0, x19
   355f8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   355fc:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   35600:	ldr	w0, [x20, #40]
   35604:	str	w0, [sp, #2376]
   35608:	ldr	x2, [x19, #8]
   3560c:	ldr	x1, [sp, #2352]
   35610:	ldr	x0, [x19, #16]
   35614:	add	x0, x2, x0
   35618:	sub	x0, x0, #0x1
   3561c:	cmp	x0, x1
   35620:	b.ge	35664 <PyInit__decimal@@Base+0x1b4c4>  // b.tcont
   35624:	ldrb	w0, [x19]
   35628:	tst	w0, #0xe
   3562c:	b.ne	35644 <PyInit__decimal@@Base+0x1b4a4>  // b.any
   35630:	ldr	x0, [x19, #24]
   35634:	ldr	x3, [x19, #40]
   35638:	add	x0, x3, x0, lsl #3
   3563c:	ldur	x0, [x0, #-8]
   35640:	cbz	x0, 35664 <PyInit__decimal@@Base+0x1b4c4>
   35644:	add	x1, x1, #0x1
   35648:	ldr	x0, [sp, #2336]
   3564c:	sub	x1, x1, x0
   35650:	cmp	x2, x1
   35654:	b.ge	35664 <PyInit__decimal@@Base+0x1b4c4>  // b.tcont
   35658:	ldr	w0, [x22]
   3565c:	orr	w0, w0, #0x4000
   35660:	str	w0, [x22]
   35664:	mov	x2, x22
   35668:	add	x1, sp, #0x920
   3566c:	mov	x0, x19
   35670:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   35674:	ldrb	w0, [sp, #96]
   35678:	tst	w0, #0xe0
   3567c:	b.ne	35690 <PyInit__decimal@@Base+0x1b4f0>  // b.any
   35680:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35684:	ldr	x1, [x0, #1704]
   35688:	ldr	x0, [sp, #136]
   3568c:	blr	x1
   35690:	ldrb	w0, [sp, #96]
   35694:	tbnz	w0, #4, 356a8 <PyInit__decimal@@Base+0x1b508>
   35698:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3569c:	ldr	x1, [x0, #1704]
   356a0:	add	x0, sp, #0x60
   356a4:	blr	x1
   356a8:	ldrb	w0, [sp, #144]
   356ac:	tst	w0, #0xe0
   356b0:	b.ne	356c4 <PyInit__decimal@@Base+0x1b524>  // b.any
   356b4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   356b8:	ldr	x1, [x0, #1704]
   356bc:	ldr	x0, [sp, #184]
   356c0:	blr	x1
   356c4:	ldrb	w0, [sp, #144]
   356c8:	tbnz	w0, #4, 356dc <PyInit__decimal@@Base+0x1b53c>
   356cc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   356d0:	ldr	x1, [x0, #1704]
   356d4:	add	x0, sp, #0x90
   356d8:	blr	x1
   356dc:	ldrb	w0, [sp, #192]
   356e0:	tst	w0, #0xe0
   356e4:	b.ne	356f8 <PyInit__decimal@@Base+0x1b558>  // b.any
   356e8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   356ec:	ldr	x1, [x0, #1704]
   356f0:	ldr	x0, [sp, #232]
   356f4:	blr	x1
   356f8:	ldrb	w0, [sp, #192]
   356fc:	tbnz	w0, #4, 35710 <PyInit__decimal@@Base+0x1b570>
   35700:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35704:	ldr	x1, [x0, #1704]
   35708:	add	x0, sp, #0xc0
   3570c:	blr	x1
   35710:	ldrb	w0, [sp, #240]
   35714:	tst	w0, #0xe0
   35718:	b.ne	3572c <PyInit__decimal@@Base+0x1b58c>  // b.any
   3571c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35720:	ldr	x1, [x0, #1704]
   35724:	ldr	x0, [sp, #280]
   35728:	blr	x1
   3572c:	ldrb	w0, [sp, #240]
   35730:	tbnz	w0, #4, 35810 <PyInit__decimal@@Base+0x1b670>
   35734:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35738:	ldr	x1, [x0, #1704]
   3573c:	add	x0, sp, #0xf0
   35740:	blr	x1
   35744:	ldp	x23, x24, [sp, #48]
   35748:	ldp	x25, x26, [sp, #64]
   3574c:	ldp	x27, x28, [sp, #80]
   35750:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   35754:	mov	x4, x22
   35758:	add	x3, sp, #0x920
   3575c:	mov	x2, x21
   35760:	mov	x1, x19
   35764:	mov	w0, #0x1                   	// #1
   35768:	bl	34ef0 <PyInit__decimal@@Base+0x1ad50>
   3576c:	ldr	x2, [x19, #8]
   35770:	ldr	x1, [sp, #2352]
   35774:	ldr	x0, [x19, #16]
   35778:	add	x0, x2, x0
   3577c:	sub	x0, x0, #0x1
   35780:	cmp	x0, x1
   35784:	b.ge	357fc <PyInit__decimal@@Base+0x1b65c>  // b.tcont
   35788:	ldrb	w0, [x19]
   3578c:	tst	w0, #0xe
   35790:	b.ne	357a8 <PyInit__decimal@@Base+0x1b608>  // b.any
   35794:	ldr	x0, [x19, #24]
   35798:	ldr	x3, [x19, #40]
   3579c:	add	x0, x3, x0, lsl #3
   357a0:	ldur	x0, [x0, #-8]
   357a4:	cbz	x0, 357fc <PyInit__decimal@@Base+0x1b65c>
   357a8:	add	x0, x1, #0x1
   357ac:	ldr	x1, [sp, #2336]
   357b0:	sub	x0, x0, x1
   357b4:	cmp	x2, x0
   357b8:	b.ge	357fc <PyInit__decimal@@Base+0x1b65c>  // b.tcont
   357bc:	ldr	w0, [x22]
   357c0:	orr	w0, w0, #0x4000
   357c4:	str	w0, [x22]
   357c8:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   357cc:	ldr	x0, [x21, #8]
   357d0:	ldr	x2, [x21, #16]
   357d4:	add	x0, x0, x2
   357d8:	subs	x2, x0, #0x1
   357dc:	b.mi	3546c <PyInit__decimal@@Base+0x1b2cc>  // b.first
   357e0:	mov	x3, #0x0                   	// #0
   357e4:	mov	x0, x19
   357e8:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   357ec:	mov	x2, x22
   357f0:	add	x1, sp, #0x920
   357f4:	mov	x0, x19
   357f8:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   357fc:	ldp	x19, x20, [sp, #16]
   35800:	ldp	x21, x22, [sp, #32]
   35804:	ldp	x29, x30, [sp]
   35808:	add	sp, sp, #0x950
   3580c:	ret
   35810:	ldp	x23, x24, [sp, #48]
   35814:	ldp	x25, x26, [sp, #64]
   35818:	ldp	x27, x28, [sp, #80]
   3581c:	b	357fc <PyInit__decimal@@Base+0x1b65c>
   35820:	sub	sp, sp, #0x2a0
   35824:	stp	x29, x30, [sp]
   35828:	mov	x29, sp
   3582c:	stp	x19, x20, [sp, #16]
   35830:	stp	x21, x22, [sp, #32]
   35834:	stp	x23, x24, [sp, #48]
   35838:	stp	x25, x26, [sp, #64]
   3583c:	stp	x27, x28, [sp, #80]
   35840:	mov	x23, x0
   35844:	mov	x22, x1
   35848:	mov	x19, x2
   3584c:	str	x4, [sp, #96]
   35850:	mov	x25, x5
   35854:	mov	w0, #0x30                  	// #48
   35858:	strb	w0, [sp, #112]
   3585c:	str	xzr, [sp, #120]
   35860:	str	xzr, [sp, #128]
   35864:	str	xzr, [sp, #136]
   35868:	mov	x0, #0x40                  	// #64
   3586c:	str	x0, [sp, #144]
   35870:	add	x0, sp, #0xa0
   35874:	str	x0, [sp, #152]
   35878:	ldrb	w27, [x2]
   3587c:	ldrb	w24, [x3]
   35880:	eor	w24, w27, w24
   35884:	and	w24, w24, #0x1
   35888:	ldr	x0, [x2, #8]
   3588c:	ldr	x1, [x3, #8]
   35890:	cmp	x0, x1
   35894:	csel	x28, x0, x1, le
   35898:	ldr	x4, [x2, #24]
   3589c:	ldr	x2, [x2, #40]
   358a0:	add	x2, x2, x4, lsl #3
   358a4:	ldur	x2, [x2, #-8]
   358a8:	cbz	x2, 35918 <PyInit__decimal@@Base+0x1b778>
   358ac:	mov	x20, x3
   358b0:	ldr	x2, [x19, #16]
   358b4:	add	x2, x0, x2
   358b8:	ldr	x3, [x3, #16]
   358bc:	add	x3, x1, x3
   358c0:	subs	x2, x2, x3
   358c4:	b.mi	359bc <PyInit__decimal@@Base+0x1b81c>  // b.first
   358c8:	ldr	x3, [sp, #96]
   358cc:	ldr	x3, [x3]
   358d0:	cmp	x3, x2
   358d4:	b.lt	35a10 <PyInit__decimal@@Base+0x1b870>  // b.tstop
   358d8:	cmp	x0, x1
   358dc:	b.eq	35a5c <PyInit__decimal@@Base+0x1b8bc>  // b.none
   358e0:	sub	x2, x0, x1
   358e4:	cmp	x2, #0x0
   358e8:	b.le	35a20 <PyInit__decimal@@Base+0x1b880>
   358ec:	mov	x3, x5
   358f0:	mov	x1, x19
   358f4:	add	x0, sp, #0x70
   358f8:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   358fc:	cbz	w0, 3592c <PyInit__decimal@@Base+0x1b78c>
   35900:	ldr	x0, [x20, #24]
   35904:	ldr	x21, [sp, #136]
   35908:	add	x21, x21, #0x1
   3590c:	sub	x21, x21, x0
   35910:	add	x19, sp, #0x70
   35914:	b	35a74 <PyInit__decimal@@Base+0x1b8d4>
   35918:	mov	x2, x5
   3591c:	mov	x1, x19
   35920:	mov	x0, x22
   35924:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   35928:	cbnz	w0, 359a0 <PyInit__decimal@@Base+0x1b800>
   3592c:	mov	w2, #0x4                   	// #4
   35930:	mov	w1, #0x0                   	// #0
   35934:	mov	x0, x23
   35938:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3593c:	mov	w2, #0x4                   	// #4
   35940:	mov	w1, #0x0                   	// #0
   35944:	mov	x0, x22
   35948:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3594c:	ldrb	w0, [sp, #112]
   35950:	tst	w0, #0xe0
   35954:	b.ne	35968 <PyInit__decimal@@Base+0x1b7c8>  // b.any
   35958:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3595c:	ldr	x1, [x0, #1704]
   35960:	ldr	x0, [sp, #152]
   35964:	blr	x1
   35968:	ldrb	w0, [sp, #112]
   3596c:	tbnz	w0, #4, 35980 <PyInit__decimal@@Base+0x1b7e0>
   35970:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35974:	ldr	x1, [x0, #1704]
   35978:	add	x0, sp, #0x70
   3597c:	blr	x1
   35980:	ldp	x19, x20, [sp, #16]
   35984:	ldp	x21, x22, [sp, #32]
   35988:	ldp	x23, x24, [sp, #48]
   3598c:	ldp	x25, x26, [sp, #64]
   35990:	ldp	x27, x28, [sp, #80]
   35994:	ldp	x29, x30, [sp]
   35998:	add	sp, sp, #0x2a0
   3599c:	ret
   359a0:	str	x28, [x22, #8]
   359a4:	mov	x3, #0x0                   	// #0
   359a8:	mov	x2, #0x0                   	// #0
   359ac:	mov	w1, w24
   359b0:	mov	x0, x23
   359b4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   359b8:	b	35980 <PyInit__decimal@@Base+0x1b7e0>
   359bc:	cmp	x0, x1
   359c0:	b.le	359f8 <PyInit__decimal@@Base+0x1b858>
   359c4:	mov	x3, x5
   359c8:	sub	x2, x0, x1
   359cc:	mov	x1, x19
   359d0:	mov	x0, x22
   359d4:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   359d8:	cbz	w0, 3592c <PyInit__decimal@@Base+0x1b78c>
   359dc:	str	x28, [x22, #8]
   359e0:	mov	x3, #0x0                   	// #0
   359e4:	mov	x2, #0x0                   	// #0
   359e8:	mov	w1, w24
   359ec:	mov	x0, x23
   359f0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   359f4:	b	35980 <PyInit__decimal@@Base+0x1b7e0>
   359f8:	mov	x2, x5
   359fc:	mov	x1, x19
   35a00:	mov	x0, x22
   35a04:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   35a08:	cbz	w0, 3592c <PyInit__decimal@@Base+0x1b78c>
   35a0c:	b	359e0 <PyInit__decimal@@Base+0x1b840>
   35a10:	ldr	w0, [x5]
   35a14:	orr	w0, w0, #0x8
   35a18:	str	w0, [x5]
   35a1c:	b	3592c <PyInit__decimal@@Base+0x1b78c>
   35a20:	mov	x3, x5
   35a24:	sub	x2, x1, x0
   35a28:	mov	x1, x20
   35a2c:	add	x0, sp, #0x70
   35a30:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   35a34:	cbz	w0, 3592c <PyInit__decimal@@Base+0x1b78c>
   35a38:	ldr	x0, [x19, #24]
   35a3c:	ldr	x21, [sp, #136]
   35a40:	sub	x21, x0, x21
   35a44:	add	x21, x21, #0x1
   35a48:	cmp	x0, x21
   35a4c:	add	x20, sp, #0x70
   35a50:	ccmp	x19, x23, #0x0, gt
   35a54:	b.ne	35a80 <PyInit__decimal@@Base+0x1b8e0>  // b.any
   35a58:	b	35aac <PyInit__decimal@@Base+0x1b90c>
   35a5c:	ldr	x0, [x20, #24]
   35a60:	sub	x21, x4, x0
   35a64:	add	x21, x21, #0x1
   35a68:	cmp	x21, x4
   35a6c:	ccmp	x19, x23, #0x0, lt  // lt = tstop
   35a70:	b.eq	35aac <PyInit__decimal@@Base+0x1b90c>  // b.none
   35a74:	cmp	x0, x21
   35a78:	ccmp	x20, x23, #0x0, gt
   35a7c:	b.eq	35aac <PyInit__decimal@@Base+0x1b90c>  // b.none
   35a80:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35a84:	ldr	x1, [x0, #1672]
   35a88:	cmp	x1, x21
   35a8c:	csel	x1, x1, x21, ge  // ge = tcont
   35a90:	ldr	x0, [x23, #32]
   35a94:	cmp	x1, x0
   35a98:	b.eq	35aac <PyInit__decimal@@Base+0x1b90c>  // b.none
   35a9c:	ldrb	w2, [x23]
   35aa0:	tbz	w2, #5, 35cd8 <PyInit__decimal@@Base+0x1bb38>
   35aa4:	cmp	x1, x0
   35aa8:	b.gt	35cc8 <PyInit__decimal@@Base+0x1bb28>
   35aac:	ldr	x26, [x20, #24]
   35ab0:	cmp	x22, x19
   35ab4:	b.eq	35cec <PyInit__decimal@@Base+0x1bb4c>  // b.none
   35ab8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35abc:	ldr	x1, [x0, #1672]
   35ac0:	cmp	x1, x26
   35ac4:	csel	x1, x1, x26, ge  // ge = tcont
   35ac8:	ldr	x0, [x22, #32]
   35acc:	cmp	x1, x0
   35ad0:	b.eq	35ae4 <PyInit__decimal@@Base+0x1b944>  // b.none
   35ad4:	ldrb	w2, [x22]
   35ad8:	tbz	w2, #5, 35d0c <PyInit__decimal@@Base+0x1bb6c>
   35adc:	cmp	x1, x0
   35ae0:	b.gt	35cfc <PyInit__decimal@@Base+0x1bb5c>
   35ae4:	ldr	x5, [x20, #24]
   35ae8:	cmp	x5, #0x1
   35aec:	b.eq	35d20 <PyInit__decimal@@Base+0x1bb80>  // b.none
   35af0:	cmp	x5, #0x400
   35af4:	b.gt	35d90 <PyInit__decimal@@Base+0x1bbf0>
   35af8:	ldr	x4, [x19, #24]
   35afc:	ldr	x3, [x20, #40]
   35b00:	ldr	x2, [x19, #40]
   35b04:	ldr	x1, [x22, #40]
   35b08:	ldr	x0, [x23, #40]
   35b0c:	bl	1b70c <PyInit__decimal@@Base+0x156c>
   35b10:	cmn	w0, #0x1
   35b14:	b.eq	35d80 <PyInit__decimal@@Base+0x1bbe0>  // b.none
   35b18:	ldr	x1, [x23, #40]
   35b1c:	sub	x1, x1, #0x8
   35b20:	cmp	x21, #0x1
   35b24:	b.le	35b3c <PyInit__decimal@@Base+0x1b99c>
   35b28:	ldr	x0, [x1, x21, lsl #3]
   35b2c:	cbnz	x0, 35b3c <PyInit__decimal@@Base+0x1b99c>
   35b30:	sub	x21, x21, #0x1
   35b34:	cmp	x21, #0x1
   35b38:	b.ne	35b28 <PyInit__decimal@@Base+0x1b988>  // b.any
   35b3c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35b40:	ldr	x1, [x0, #1672]
   35b44:	cmp	x1, x21
   35b48:	csel	x1, x1, x21, ge  // ge = tcont
   35b4c:	ldr	x0, [x23, #32]
   35b50:	cmp	x1, x0
   35b54:	b.eq	35b68 <PyInit__decimal@@Base+0x1b9c8>  // b.none
   35b58:	ldrb	w2, [x23]
   35b5c:	tbz	w2, #5, 35ddc <PyInit__decimal@@Base+0x1bc3c>
   35b60:	cmp	x1, x0
   35b64:	b.gt	35dcc <PyInit__decimal@@Base+0x1bc2c>
   35b68:	str	x21, [x23, #24]
   35b6c:	ldr	x0, [x23, #40]
   35b70:	add	x0, x0, x21, lsl #3
   35b74:	ldur	x1, [x0, #-8]
   35b78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35b7c:	ldr	x19, [x0, #3584]
   35b80:	cmp	x1, x19
   35b84:	b.cs	35e58 <PyInit__decimal@@Base+0x1bcb8>  // b.hs, b.nlast
   35b88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35b8c:	ldr	x0, [x0, #3544]
   35b90:	cmp	x1, x0
   35b94:	b.cs	35e04 <PyInit__decimal@@Base+0x1bc64>  // b.hs, b.nlast
   35b98:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35b9c:	ldr	x0, [x0, #3528]
   35ba0:	cmp	x1, x0
   35ba4:	b.cs	35dec <PyInit__decimal@@Base+0x1bc4c>  // b.hs, b.nlast
   35ba8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35bac:	ldr	x0, [x0, #3520]
   35bb0:	cmp	x1, x0
   35bb4:	cset	w0, cs  // cs = hs, nlast
   35bb8:	add	w0, w0, #0x1
   35bbc:	sub	x21, x21, #0x1
   35bc0:	add	x1, x21, x21, lsl #2
   35bc4:	lsl	x1, x1, #2
   35bc8:	sub	x21, x1, x21
   35bcc:	add	x0, x21, w0, sxtw
   35bd0:	str	x0, [x23, #16]
   35bd4:	ldrb	w1, [x23]
   35bd8:	and	w1, w1, #0xfffffff0
   35bdc:	orr	w24, w24, w1
   35be0:	strb	w24, [x23]
   35be4:	str	xzr, [x23, #8]
   35be8:	ldr	x1, [sp, #96]
   35bec:	ldr	x1, [x1]
   35bf0:	cmp	x1, x0
   35bf4:	b.lt	35f24 <PyInit__decimal@@Base+0x1bd84>  // b.tstop
   35bf8:	ldr	x1, [x22, #40]
   35bfc:	sub	x1, x1, #0x8
   35c00:	cmp	x26, #0x1
   35c04:	b.le	35c1c <PyInit__decimal@@Base+0x1ba7c>
   35c08:	ldr	x0, [x1, x26, lsl #3]
   35c0c:	cbnz	x0, 35c1c <PyInit__decimal@@Base+0x1ba7c>
   35c10:	sub	x26, x26, #0x1
   35c14:	cmp	x26, #0x1
   35c18:	b.ne	35c08 <PyInit__decimal@@Base+0x1ba68>  // b.any
   35c1c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   35c20:	ldr	x1, [x0, #1672]
   35c24:	cmp	x1, x26
   35c28:	csel	x1, x1, x26, ge  // ge = tcont
   35c2c:	ldr	x0, [x22, #32]
   35c30:	cmp	x1, x0
   35c34:	b.eq	35c48 <PyInit__decimal@@Base+0x1baa8>  // b.none
   35c38:	ldrb	w2, [x22]
   35c3c:	tbz	w2, #5, 35f44 <PyInit__decimal@@Base+0x1bda4>
   35c40:	cmp	x1, x0
   35c44:	b.gt	35f34 <PyInit__decimal@@Base+0x1bd94>
   35c48:	str	x26, [x22, #24]
   35c4c:	ldr	x0, [x22, #40]
   35c50:	add	x0, x0, x26, lsl #3
   35c54:	ldur	x0, [x0, #-8]
   35c58:	cmp	x19, x0
   35c5c:	b.ls	35fc0 <PyInit__decimal@@Base+0x1be20>  // b.plast
   35c60:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35c64:	ldr	x1, [x1, #3544]
   35c68:	cmp	x0, x1
   35c6c:	b.cs	35f6c <PyInit__decimal@@Base+0x1bdcc>  // b.hs, b.nlast
   35c70:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35c74:	ldr	x1, [x1, #3528]
   35c78:	cmp	x0, x1
   35c7c:	b.cs	35f54 <PyInit__decimal@@Base+0x1bdb4>  // b.hs, b.nlast
   35c80:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35c84:	ldr	x1, [x1, #3520]
   35c88:	cmp	x0, x1
   35c8c:	cset	w1, cs  // cs = hs, nlast
   35c90:	add	w1, w1, #0x1
   35c94:	sub	x26, x26, #0x1
   35c98:	add	x0, x26, x26, lsl #2
   35c9c:	lsl	x0, x0, #2
   35ca0:	sub	x26, x0, x26
   35ca4:	add	x26, x26, w1, sxtw
   35ca8:	str	x26, [x22, #16]
   35cac:	ldrb	w0, [x22]
   35cb0:	and	w0, w0, #0xfffffff0
   35cb4:	and	w27, w27, #0x1
   35cb8:	orr	w27, w0, w27
   35cbc:	strb	w27, [x22]
   35cc0:	str	x28, [x22, #8]
   35cc4:	b	3594c <PyInit__decimal@@Base+0x1b7ac>
   35cc8:	mov	x2, x25
   35ccc:	mov	x0, x23
   35cd0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   35cd4:	b	35ce4 <PyInit__decimal@@Base+0x1bb44>
   35cd8:	mov	x2, x25
   35cdc:	mov	x0, x23
   35ce0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   35ce4:	cbnz	w0, 35aac <PyInit__decimal@@Base+0x1b90c>
   35ce8:	b	3592c <PyInit__decimal@@Base+0x1b78c>
   35cec:	ldr	x0, [x19, #24]
   35cf0:	cmp	x0, x26
   35cf4:	b.gt	35ae4 <PyInit__decimal@@Base+0x1b944>
   35cf8:	b	35ab8 <PyInit__decimal@@Base+0x1b918>
   35cfc:	mov	x2, x25
   35d00:	mov	x0, x22
   35d04:	bl	25338 <PyInit__decimal@@Base+0xb198>
   35d08:	b	35d18 <PyInit__decimal@@Base+0x1bb78>
   35d0c:	mov	x2, x25
   35d10:	mov	x0, x22
   35d14:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   35d18:	cbnz	w0, 35ae4 <PyInit__decimal@@Base+0x1b944>
   35d1c:	b	3592c <PyInit__decimal@@Base+0x1b78c>
   35d20:	ldr	x2, [x19, #24]
   35d24:	cmp	x2, #0x1
   35d28:	b.ne	35d58 <PyInit__decimal@@Base+0x1bbb8>  // b.any
   35d2c:	ldr	x4, [x23, #40]
   35d30:	ldr	x3, [x22, #40]
   35d34:	ldr	x0, [x19, #40]
   35d38:	ldr	x2, [x0]
   35d3c:	ldr	x0, [x20, #40]
   35d40:	ldr	x1, [x0]
   35d44:	udiv	x0, x2, x1
   35d48:	str	x0, [x4]
   35d4c:	msub	x0, x0, x1, x2
   35d50:	str	x0, [x3]
   35d54:	b	35b18 <PyInit__decimal@@Base+0x1b978>
   35d58:	ldr	x0, [x22, #40]
   35d5c:	str	x0, [sp, #104]
   35d60:	ldr	x0, [x20, #40]
   35d64:	ldr	x3, [x0]
   35d68:	ldr	x1, [x19, #40]
   35d6c:	ldr	x0, [x23, #40]
   35d70:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   35d74:	ldr	x1, [sp, #104]
   35d78:	str	x0, [x1]
   35d7c:	b	35b18 <PyInit__decimal@@Base+0x1b978>
   35d80:	ldr	w0, [x25]
   35d84:	orr	w0, w0, #0x200
   35d88:	str	w0, [x25]
   35d8c:	b	3592c <PyInit__decimal@@Base+0x1b78c>
   35d90:	mov	x4, x25
   35d94:	mov	x3, x20
   35d98:	mov	x2, x19
   35d9c:	mov	x1, x22
   35da0:	mov	x0, x23
   35da4:	bl	31f58 <PyInit__decimal@@Base+0x17db8>
   35da8:	ldrb	w0, [x23]
   35dac:	tst	w0, #0xe
   35db0:	b.ne	3592c <PyInit__decimal@@Base+0x1b78c>  // b.any
   35db4:	ldrb	w0, [x22]
   35db8:	tst	w0, #0xe
   35dbc:	b.ne	3592c <PyInit__decimal@@Base+0x1b78c>  // b.any
   35dc0:	ldr	x21, [x23, #24]
   35dc4:	ldr	x26, [x22, #24]
   35dc8:	b	35b18 <PyInit__decimal@@Base+0x1b978>
   35dcc:	mov	x2, x25
   35dd0:	mov	x0, x23
   35dd4:	bl	25338 <PyInit__decimal@@Base+0xb198>
   35dd8:	b	35b68 <PyInit__decimal@@Base+0x1b9c8>
   35ddc:	mov	x2, x25
   35de0:	mov	x0, x23
   35de4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   35de8:	b	35b68 <PyInit__decimal@@Base+0x1b9c8>
   35dec:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35df0:	ldr	x0, [x0, #3536]
   35df4:	cmp	x1, x0
   35df8:	cset	w0, cs  // cs = hs, nlast
   35dfc:	add	w0, w0, #0x3
   35e00:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35e04:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e08:	ldr	x0, [x0, #3560]
   35e0c:	cmp	x1, x0
   35e10:	b.cc	35e40 <PyInit__decimal@@Base+0x1bca0>  // b.lo, b.ul, b.last
   35e14:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e18:	ldr	x2, [x0, #3576]
   35e1c:	mov	w0, #0x9                   	// #9
   35e20:	cmp	x1, x2
   35e24:	b.cs	35bbc <PyInit__decimal@@Base+0x1ba1c>  // b.hs, b.nlast
   35e28:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e2c:	ldr	x0, [x0, #3568]
   35e30:	cmp	x1, x0
   35e34:	cset	w0, cs  // cs = hs, nlast
   35e38:	add	w0, w0, #0x7
   35e3c:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35e40:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e44:	ldr	x0, [x0, #3552]
   35e48:	cmp	x1, x0
   35e4c:	cset	w0, cs  // cs = hs, nlast
   35e50:	add	w0, w0, #0x5
   35e54:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35e58:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e5c:	ldr	x0, [x0, #3624]
   35e60:	cmp	x1, x0
   35e64:	b.cs	35ebc <PyInit__decimal@@Base+0x1bd1c>  // b.hs, b.nlast
   35e68:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e6c:	ldr	x0, [x0, #3600]
   35e70:	cmp	x1, x0
   35e74:	b.cc	35ea4 <PyInit__decimal@@Base+0x1bd04>  // b.lo, b.ul, b.last
   35e78:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e7c:	ldr	x2, [x0, #3616]
   35e80:	mov	w0, #0xe                   	// #14
   35e84:	cmp	x1, x2
   35e88:	b.cs	35bbc <PyInit__decimal@@Base+0x1ba1c>  // b.hs, b.nlast
   35e8c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35e90:	ldr	x0, [x0, #3608]
   35e94:	cmp	x1, x0
   35e98:	cset	w0, cs  // cs = hs, nlast
   35e9c:	add	w0, w0, #0xc
   35ea0:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35ea4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35ea8:	ldr	x0, [x0, #3592]
   35eac:	cmp	x1, x0
   35eb0:	cset	w0, cs  // cs = hs, nlast
   35eb4:	add	w0, w0, #0xa
   35eb8:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35ebc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35ec0:	ldr	x0, [x0, #3656]
   35ec4:	cmp	x1, x0
   35ec8:	b.cs	35f0c <PyInit__decimal@@Base+0x1bd6c>  // b.hs, b.nlast
   35ecc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35ed0:	ldr	x0, [x0, #3640]
   35ed4:	cmp	x1, x0
   35ed8:	b.cs	35ef4 <PyInit__decimal@@Base+0x1bd54>  // b.hs, b.nlast
   35edc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35ee0:	ldr	x0, [x0, #3632]
   35ee4:	cmp	x1, x0
   35ee8:	cset	w0, cs  // cs = hs, nlast
   35eec:	add	w0, w0, #0xf
   35ef0:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35ef4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35ef8:	ldr	x0, [x0, #3648]
   35efc:	cmp	x1, x0
   35f00:	cset	w0, cs  // cs = hs, nlast
   35f04:	add	w0, w0, #0x11
   35f08:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35f0c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   35f10:	ldr	x0, [x0, #3664]
   35f14:	cmp	x1, x0
   35f18:	cset	w0, cs  // cs = hs, nlast
   35f1c:	add	w0, w0, #0x13
   35f20:	b	35bbc <PyInit__decimal@@Base+0x1ba1c>
   35f24:	ldr	w0, [x25]
   35f28:	orr	w0, w0, #0x8
   35f2c:	str	w0, [x25]
   35f30:	b	3592c <PyInit__decimal@@Base+0x1b78c>
   35f34:	mov	x2, x25
   35f38:	mov	x0, x22
   35f3c:	bl	25338 <PyInit__decimal@@Base+0xb198>
   35f40:	b	35c48 <PyInit__decimal@@Base+0x1baa8>
   35f44:	mov	x2, x25
   35f48:	mov	x0, x22
   35f4c:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   35f50:	b	35c48 <PyInit__decimal@@Base+0x1baa8>
   35f54:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35f58:	ldr	x1, [x1, #3536]
   35f5c:	cmp	x0, x1
   35f60:	cset	w1, cs  // cs = hs, nlast
   35f64:	add	w1, w1, #0x3
   35f68:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   35f6c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35f70:	ldr	x1, [x1, #3560]
   35f74:	cmp	x0, x1
   35f78:	b.cc	35fa8 <PyInit__decimal@@Base+0x1be08>  // b.lo, b.ul, b.last
   35f7c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35f80:	ldr	x2, [x1, #3576]
   35f84:	mov	w1, #0x9                   	// #9
   35f88:	cmp	x0, x2
   35f8c:	b.cs	35c94 <PyInit__decimal@@Base+0x1baf4>  // b.hs, b.nlast
   35f90:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35f94:	ldr	x1, [x1, #3568]
   35f98:	cmp	x0, x1
   35f9c:	cset	w1, cs  // cs = hs, nlast
   35fa0:	add	w1, w1, #0x7
   35fa4:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   35fa8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35fac:	ldr	x1, [x1, #3552]
   35fb0:	cmp	x0, x1
   35fb4:	cset	w1, cs  // cs = hs, nlast
   35fb8:	add	w1, w1, #0x5
   35fbc:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   35fc0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35fc4:	ldr	x1, [x1, #3624]
   35fc8:	cmp	x0, x1
   35fcc:	b.cs	36024 <PyInit__decimal@@Base+0x1be84>  // b.hs, b.nlast
   35fd0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35fd4:	ldr	x1, [x1, #3600]
   35fd8:	cmp	x0, x1
   35fdc:	b.cc	3600c <PyInit__decimal@@Base+0x1be6c>  // b.lo, b.ul, b.last
   35fe0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35fe4:	ldr	x2, [x1, #3616]
   35fe8:	mov	w1, #0xe                   	// #14
   35fec:	cmp	x0, x2
   35ff0:	b.cs	35c94 <PyInit__decimal@@Base+0x1baf4>  // b.hs, b.nlast
   35ff4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   35ff8:	ldr	x1, [x1, #3608]
   35ffc:	cmp	x0, x1
   36000:	cset	w1, cs  // cs = hs, nlast
   36004:	add	w1, w1, #0xc
   36008:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   3600c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36010:	ldr	x1, [x1, #3592]
   36014:	cmp	x0, x1
   36018:	cset	w1, cs  // cs = hs, nlast
   3601c:	add	w1, w1, #0xa
   36020:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   36024:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36028:	ldr	x1, [x1, #3656]
   3602c:	cmp	x0, x1
   36030:	b.cs	36074 <PyInit__decimal@@Base+0x1bed4>  // b.hs, b.nlast
   36034:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36038:	ldr	x1, [x1, #3640]
   3603c:	cmp	x0, x1
   36040:	b.cs	3605c <PyInit__decimal@@Base+0x1bebc>  // b.hs, b.nlast
   36044:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36048:	ldr	x1, [x1, #3632]
   3604c:	cmp	x0, x1
   36050:	cset	w1, cs  // cs = hs, nlast
   36054:	add	w1, w1, #0xf
   36058:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   3605c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36060:	ldr	x1, [x1, #3648]
   36064:	cmp	x0, x1
   36068:	cset	w1, cs  // cs = hs, nlast
   3606c:	add	w1, w1, #0x11
   36070:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   36074:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36078:	ldr	x1, [x1, #3664]
   3607c:	cmp	x0, x1
   36080:	cset	w1, cs  // cs = hs, nlast
   36084:	add	w1, w1, #0x13
   36088:	b	35c94 <PyInit__decimal@@Base+0x1baf4>
   3608c:	stp	x29, x30, [sp, #-80]!
   36090:	mov	x29, sp
   36094:	stp	x19, x20, [sp, #16]
   36098:	stp	x21, x22, [sp, #32]
   3609c:	stp	x23, x24, [sp, #48]
   360a0:	str	x25, [sp, #64]
   360a4:	mov	x22, x0
   360a8:	mov	x23, x1
   360ac:	mov	x19, x2
   360b0:	mov	x20, x3
   360b4:	mov	x24, x4
   360b8:	mov	x21, x5
   360bc:	ldrb	w2, [x2]
   360c0:	ldrb	w0, [x3]
   360c4:	eor	w1, w2, w0
   360c8:	and	w25, w1, #0x1
   360cc:	orr	w2, w2, w0
   360d0:	tst	w2, #0xe
   360d4:	b.eq	361cc <PyInit__decimal@@Base+0x1c02c>  // b.none
   360d8:	mov	x4, x5
   360dc:	mov	x3, x24
   360e0:	mov	x2, x20
   360e4:	mov	x1, x19
   360e8:	mov	x0, x22
   360ec:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   360f0:	cbnz	w0, 3612c <PyInit__decimal@@Base+0x1bf8c>
   360f4:	ldrb	w0, [x19]
   360f8:	tbnz	w0, #1, 36140 <PyInit__decimal@@Base+0x1bfa0>
   360fc:	ldrb	w0, [x20]
   36100:	tbz	w0, #1, 361c8 <PyInit__decimal@@Base+0x1c028>
   36104:	mov	x2, x21
   36108:	mov	x1, x19
   3610c:	mov	x0, x23
   36110:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   36114:	cbnz	w0, 361a0 <PyInit__decimal@@Base+0x1c000>
   36118:	mov	x2, x21
   3611c:	mov	w1, #0x200                 	// #512
   36120:	mov	x0, x22
   36124:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   36128:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   3612c:	mov	x2, x21
   36130:	mov	x1, x22
   36134:	mov	x0, x23
   36138:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   3613c:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   36140:	ldrb	w0, [x20]
   36144:	tbz	w0, #1, 3618c <PyInit__decimal@@Base+0x1bfec>
   36148:	mov	w2, #0x4                   	// #4
   3614c:	mov	w1, #0x0                   	// #0
   36150:	mov	x0, x22
   36154:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36158:	mov	w2, #0x4                   	// #4
   3615c:	mov	w1, #0x0                   	// #0
   36160:	mov	x0, x23
   36164:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36168:	ldr	w0, [x21]
   3616c:	orr	w0, w0, #0x100
   36170:	str	w0, [x21]
   36174:	ldp	x19, x20, [sp, #16]
   36178:	ldp	x21, x22, [sp, #32]
   3617c:	ldp	x23, x24, [sp, #48]
   36180:	ldr	x25, [sp, #64]
   36184:	ldp	x29, x30, [sp], #80
   36188:	ret
   3618c:	mov	w2, #0x2                   	// #2
   36190:	mov	w1, w25
   36194:	mov	x0, x22
   36198:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3619c:	b	36158 <PyInit__decimal@@Base+0x1bfb8>
   361a0:	mov	x2, x21
   361a4:	mov	x1, x24
   361a8:	mov	x0, x23
   361ac:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   361b0:	mov	x3, #0x0                   	// #0
   361b4:	mov	x2, #0x0                   	// #0
   361b8:	mov	w1, w25
   361bc:	mov	x0, x22
   361c0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   361c4:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   361c8:	bl	67c0 <abort@plt>
   361cc:	ldr	x0, [x3, #24]
   361d0:	ldr	x1, [x3, #40]
   361d4:	add	x0, x1, x0, lsl #3
   361d8:	ldur	x0, [x0, #-8]
   361dc:	cbnz	x0, 36258 <PyInit__decimal@@Base+0x1c0b8>
   361e0:	ldr	x0, [x19, #24]
   361e4:	ldr	x1, [x19, #40]
   361e8:	add	x0, x1, x0, lsl #3
   361ec:	ldur	x0, [x0, #-8]
   361f0:	cbnz	x0, 36224 <PyInit__decimal@@Base+0x1c084>
   361f4:	mov	w2, #0x4                   	// #4
   361f8:	mov	w1, #0x0                   	// #0
   361fc:	mov	x0, x22
   36200:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36204:	mov	w2, #0x4                   	// #4
   36208:	mov	w1, #0x0                   	// #0
   3620c:	mov	x0, x23
   36210:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36214:	ldr	w0, [x21]
   36218:	orr	w0, w0, #0x10
   3621c:	str	w0, [x21]
   36220:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   36224:	mov	w2, #0x2                   	// #2
   36228:	mov	w1, w25
   3622c:	mov	x0, x22
   36230:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36234:	mov	w2, #0x4                   	// #4
   36238:	mov	w1, #0x0                   	// #0
   3623c:	mov	x0, x23
   36240:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36244:	ldr	w0, [x21]
   36248:	mov	w1, #0x104                 	// #260
   3624c:	orr	w0, w0, w1
   36250:	str	w0, [x21]
   36254:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   36258:	mov	x2, x19
   3625c:	mov	x1, x23
   36260:	mov	x0, x22
   36264:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   36268:	mov	x2, x21
   3626c:	mov	x1, x24
   36270:	mov	x0, x22
   36274:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36278:	mov	x2, x21
   3627c:	mov	x1, x24
   36280:	mov	x0, x23
   36284:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36288:	b	36174 <PyInit__decimal@@Base+0x1bfd4>
   3628c:	sub	sp, sp, #0x270
   36290:	stp	x29, x30, [sp]
   36294:	mov	x29, sp
   36298:	stp	x19, x20, [sp, #16]
   3629c:	stp	x21, x22, [sp, #32]
   362a0:	stp	x23, x24, [sp, #48]
   362a4:	mov	x21, x0
   362a8:	mov	x20, x1
   362ac:	mov	x19, x2
   362b0:	mov	x23, x3
   362b4:	mov	x22, x4
   362b8:	mov	w0, #0x30                  	// #48
   362bc:	strb	w0, [sp, #64]
   362c0:	str	xzr, [sp, #72]
   362c4:	str	xzr, [sp, #80]
   362c8:	str	xzr, [sp, #88]
   362cc:	mov	x0, #0x40                  	// #64
   362d0:	str	x0, [sp, #96]
   362d4:	add	x0, sp, #0x70
   362d8:	str	x0, [sp, #104]
   362dc:	ldrb	w2, [x1]
   362e0:	ldrb	w0, [x19]
   362e4:	eor	w1, w2, w0
   362e8:	and	w24, w1, #0x1
   362ec:	orr	w2, w2, w0
   362f0:	tst	w2, #0xe
   362f4:	b.eq	3637c <PyInit__decimal@@Base+0x1c1dc>  // b.none
   362f8:	mov	x2, x19
   362fc:	mov	x1, x20
   36300:	mov	x0, x21
   36304:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   36308:	cbnz	w0, 36360 <PyInit__decimal@@Base+0x1c1c0>
   3630c:	ldrb	w0, [x20]
   36310:	tbz	w0, #1, 36344 <PyInit__decimal@@Base+0x1c1a4>
   36314:	ldrb	w0, [x19]
   36318:	tbnz	w0, #1, 36330 <PyInit__decimal@@Base+0x1c190>
   3631c:	mov	w2, #0x2                   	// #2
   36320:	mov	w1, w24
   36324:	mov	x0, x21
   36328:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3632c:	b	36360 <PyInit__decimal@@Base+0x1c1c0>
   36330:	mov	x2, x22
   36334:	mov	w1, #0x100                 	// #256
   36338:	mov	x0, x21
   3633c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   36340:	b	36360 <PyInit__decimal@@Base+0x1c1c0>
   36344:	ldrb	w0, [x19]
   36348:	tbz	w0, #1, 36378 <PyInit__decimal@@Base+0x1c1d8>
   3634c:	mov	x3, #0x0                   	// #0
   36350:	mov	x2, #0x0                   	// #0
   36354:	mov	w1, w24
   36358:	mov	x0, x21
   3635c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36360:	ldp	x19, x20, [sp, #16]
   36364:	ldp	x21, x22, [sp, #32]
   36368:	ldp	x23, x24, [sp, #48]
   3636c:	ldp	x29, x30, [sp]
   36370:	add	sp, sp, #0x270
   36374:	ret
   36378:	bl	67c0 <abort@plt>
   3637c:	ldr	x0, [x19, #24]
   36380:	ldr	x1, [x19, #40]
   36384:	add	x0, x1, x0, lsl #3
   36388:	ldur	x0, [x0, #-8]
   3638c:	cbnz	x0, 363d8 <PyInit__decimal@@Base+0x1c238>
   36390:	ldr	x0, [x20, #24]
   36394:	ldr	x1, [x20, #40]
   36398:	add	x0, x1, x0, lsl #3
   3639c:	ldur	x0, [x0, #-8]
   363a0:	cbnz	x0, 363b8 <PyInit__decimal@@Base+0x1c218>
   363a4:	mov	x2, x4
   363a8:	mov	w1, #0x10                  	// #16
   363ac:	mov	x0, x21
   363b0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   363b4:	b	36360 <PyInit__decimal@@Base+0x1c1c0>
   363b8:	mov	w2, #0x2                   	// #2
   363bc:	mov	w1, w24
   363c0:	mov	x0, x21
   363c4:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   363c8:	ldr	w0, [x22]
   363cc:	orr	w0, w0, #0x4
   363d0:	str	w0, [x22]
   363d4:	b	36360 <PyInit__decimal@@Base+0x1c1c0>
   363d8:	mov	x5, x4
   363dc:	mov	x4, x3
   363e0:	mov	x3, x19
   363e4:	mov	x2, x20
   363e8:	add	x1, sp, #0x40
   363ec:	mov	x0, x21
   363f0:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   363f4:	ldrb	w0, [sp, #64]
   363f8:	tst	w0, #0xe0
   363fc:	b.ne	36410 <PyInit__decimal@@Base+0x1c270>  // b.any
   36400:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   36404:	ldr	x1, [x0, #1704]
   36408:	ldr	x0, [sp, #104]
   3640c:	blr	x1
   36410:	ldrb	w0, [sp, #64]
   36414:	tbnz	w0, #4, 36428 <PyInit__decimal@@Base+0x1c288>
   36418:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3641c:	ldr	x1, [x0, #1704]
   36420:	add	x0, sp, #0x40
   36424:	blr	x1
   36428:	mov	x2, x22
   3642c:	mov	x1, x23
   36430:	mov	x0, x21
   36434:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36438:	b	36360 <PyInit__decimal@@Base+0x1c1c0>
   3643c:	sub	sp, sp, #0x560
   36440:	stp	x29, x30, [sp]
   36444:	mov	x29, sp
   36448:	stp	x19, x20, [sp, #16]
   3644c:	stp	x21, x22, [sp, #32]
   36450:	stp	x23, x24, [sp, #48]
   36454:	mov	x19, x0
   36458:	mov	x22, x2
   3645c:	and	w24, w3, #0xff
   36460:	mov	x20, x4
   36464:	mov	x21, x5
   36468:	mov	w2, #0x30                  	// #48
   3646c:	strb	w2, [sp, #768]
   36470:	str	xzr, [sp, #776]
   36474:	str	xzr, [sp, #784]
   36478:	str	xzr, [sp, #792]
   3647c:	mov	x0, #0x40                  	// #64
   36480:	str	x0, [sp, #800]
   36484:	add	x3, sp, #0x330
   36488:	str	x3, [sp, #808]
   3648c:	strb	w2, [sp, #208]
   36490:	str	xzr, [sp, #216]
   36494:	str	xzr, [sp, #224]
   36498:	str	xzr, [sp, #232]
   3649c:	str	x0, [sp, #240]
   364a0:	add	x0, sp, #0x100
   364a4:	str	x0, [sp, #248]
   364a8:	ldr	x2, [x4]
   364ac:	ldr	x0, [x4, #8]
   364b0:	str	x0, [sp, #1336]
   364b4:	ldr	x0, [x4, #16]
   364b8:	str	x0, [sp, #1344]
   364bc:	str	wzr, [sp, #1352]
   364c0:	str	wzr, [sp, #1356]
   364c4:	str	wzr, [sp, #1360]
   364c8:	ldr	w0, [x4, #44]
   364cc:	str	w0, [sp, #1372]
   364d0:	ldr	x0, [x22, #16]
   364d4:	ldr	x3, [x22, #8]
   364d8:	add	x0, x0, x3
   364dc:	add	x0, x0, x2
   364e0:	add	x2, x0, #0x2
   364e4:	str	x2, [sp, #1328]
   364e8:	mov	w2, #0x6                   	// #6
   364ec:	str	w2, [sp, #1364]
   364f0:	str	wzr, [sp, #1368]
   364f4:	ldrb	w2, [x22]
   364f8:	tbz	w2, #0, 365dc <PyInit__decimal@@Base+0x1c43c>
   364fc:	add	x0, x0, #0x3
   36500:	str	x0, [sp, #1328]
   36504:	mov	x4, x5
   36508:	add	x3, sp, #0x530
   3650c:	mov	x2, x1
   36510:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   36514:	add	x1, x1, #0xc58
   36518:	add	x0, sp, #0x300
   3651c:	bl	32b7c <PyInit__decimal@@Base+0x189dc>
   36520:	ldr	w1, [x21]
   36524:	mov	w0, #0x3be                 	// #958
   36528:	tst	w1, w0
   3652c:	b.ne	365c8 <PyInit__decimal@@Base+0x1c428>  // b.any
   36530:	add	x1, sp, #0x54c
   36534:	mov	x0, x22
   36538:	bl	29064 <PyInit__decimal@@Base+0xeec4>
   3653c:	mov	x23, x0
   36540:	ldr	w0, [sp, #1356]
   36544:	tbz	w0, #8, 367a4 <PyInit__decimal@@Base+0x1c604>
   36548:	mov	x2, x21
   3654c:	mov	x1, x22
   36550:	add	x0, sp, #0xd0
   36554:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   36558:	cbz	w0, 36600 <PyInit__decimal@@Base+0x1c460>
   3655c:	stp	x25, x26, [sp, #64]
   36560:	str	x27, [sp, #80]
   36564:	str	wzr, [sp, #100]
   36568:	mov	x0, #0x2                   	// #2
   3656c:	str	x0, [sp, #104]
   36570:	mov	w0, #0xffffff90            	// #-112
   36574:	strb	w0, [sp, #160]
   36578:	str	xzr, [sp, #168]
   3657c:	mov	x0, #0x1                   	// #1
   36580:	str	x0, [sp, #176]
   36584:	str	x0, [sp, #184]
   36588:	str	x0, [sp, #192]
   3658c:	add	x0, sp, #0x68
   36590:	str	x0, [sp, #200]
   36594:	add	x0, sp, #0x70
   36598:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   3659c:	mov	x2, x21
   365a0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   365a4:	add	x1, x1, #0xc58
   365a8:	mov	x0, x19
   365ac:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   365b0:	add	x23, sp, #0xd0
   365b4:	add	x25, sp, #0x64
   365b8:	add	x26, sp, #0x530
   365bc:	add	x22, sp, #0x300
   365c0:	add	x27, sp, #0x70
   365c4:	b	366b0 <PyInit__decimal@@Base+0x1c510>
   365c8:	mov	w2, #0x4                   	// #4
   365cc:	mov	w1, #0x0                   	// #0
   365d0:	mov	x0, x19
   365d4:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   365d8:	b	366f0 <PyInit__decimal@@Base+0x1c550>
   365dc:	mov	x2, x5
   365e0:	add	x0, sp, #0x300
   365e4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   365e8:	cbnz	w0, 36530 <PyInit__decimal@@Base+0x1c390>
   365ec:	mov	w2, #0x4                   	// #4
   365f0:	mov	w1, #0x0                   	// #0
   365f4:	mov	x0, x19
   365f8:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   365fc:	b	366f0 <PyInit__decimal@@Base+0x1c550>
   36600:	mov	w2, #0x4                   	// #4
   36604:	mov	w1, #0x0                   	// #0
   36608:	mov	x0, x19
   3660c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36610:	b	366f0 <PyInit__decimal@@Base+0x1c550>
   36614:	mov	x0, x23
   36618:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   3661c:	cbz	w0, 3666c <PyInit__decimal@@Base+0x1c4cc>
   36620:	mov	x4, x25
   36624:	mov	x3, x26
   36628:	mov	x2, x22
   3662c:	mov	x1, x19
   36630:	mov	x0, x19
   36634:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   36638:	ldr	w1, [sp, #100]
   3663c:	ldr	w0, [x21]
   36640:	orr	w0, w0, w1
   36644:	str	w0, [x21]
   36648:	ldrb	w0, [x19]
   3664c:	tst	w0, #0xe
   36650:	b.ne	366d0 <PyInit__decimal@@Base+0x1c530>  // b.any
   36654:	ldr	x0, [x19, #24]
   36658:	ldr	x2, [x19, #40]
   3665c:	add	x0, x2, x0, lsl #3
   36660:	ldur	x0, [x0, #-8]
   36664:	cbnz	x0, 3666c <PyInit__decimal@@Base+0x1c4cc>
   36668:	tbnz	w1, #0, 366d0 <PyInit__decimal@@Base+0x1c530>
   3666c:	mov	x4, x25
   36670:	mov	x3, x26
   36674:	mov	x2, x22
   36678:	mov	x1, x22
   3667c:	mov	x0, x22
   36680:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   36684:	mov	x4, x25
   36688:	mov	x3, x27
   3668c:	add	x2, sp, #0xa0
   36690:	mov	x1, x23
   36694:	mov	x0, x23
   36698:	bl	3628c <PyInit__decimal@@Base+0x1c0ec>
   3669c:	ldrb	w0, [sp, #768]
   366a0:	ldrb	w1, [sp, #208]
   366a4:	orr	w0, w0, w1
   366a8:	tst	w0, #0xc
   366ac:	b.ne	36780 <PyInit__decimal@@Base+0x1c5e0>  // b.any
   366b0:	ldrb	w0, [sp, #208]
   366b4:	tst	w0, #0xe
   366b8:	b.ne	36614 <PyInit__decimal@@Base+0x1c474>  // b.any
   366bc:	ldr	x0, [sp, #232]
   366c0:	ldr	x1, [sp, #248]
   366c4:	add	x0, x1, x0, lsl #3
   366c8:	ldur	x0, [x0, #-8]
   366cc:	cbnz	x0, 36614 <PyInit__decimal@@Base+0x1c474>
   366d0:	ldrb	w0, [x19]
   366d4:	and	w0, w0, #0xfffffffe
   366d8:	orr	w0, w24, w0
   366dc:	strb	w0, [x19]
   366e0:	ldp	x25, x26, [sp, #64]
   366e4:	ldr	x27, [sp, #80]
   366e8:	ldrb	w0, [x19]
   366ec:	tbnz	w0, #1, 3693c <PyInit__decimal@@Base+0x1c79c>
   366f0:	ldrb	w0, [sp, #768]
   366f4:	tst	w0, #0xe0
   366f8:	b.ne	3670c <PyInit__decimal@@Base+0x1c56c>  // b.any
   366fc:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   36700:	ldr	x1, [x0, #1704]
   36704:	ldr	x0, [sp, #808]
   36708:	blr	x1
   3670c:	ldrb	w0, [sp, #768]
   36710:	tbnz	w0, #4, 36724 <PyInit__decimal@@Base+0x1c584>
   36714:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   36718:	ldr	x1, [x0, #1704]
   3671c:	add	x0, sp, #0x300
   36720:	blr	x1
   36724:	ldrb	w0, [sp, #208]
   36728:	tst	w0, #0xe0
   3672c:	b.ne	36740 <PyInit__decimal@@Base+0x1c5a0>  // b.any
   36730:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   36734:	ldr	x1, [x0, #1704]
   36738:	ldr	x0, [sp, #248]
   3673c:	blr	x1
   36740:	ldrb	w0, [sp, #208]
   36744:	tbnz	w0, #4, 36758 <PyInit__decimal@@Base+0x1c5b8>
   36748:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3674c:	ldr	x1, [x0, #1704]
   36750:	add	x0, sp, #0xd0
   36754:	blr	x1
   36758:	mov	x2, x21
   3675c:	mov	x1, x20
   36760:	mov	x0, x19
   36764:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36768:	ldp	x19, x20, [sp, #16]
   3676c:	ldp	x21, x22, [sp, #32]
   36770:	ldp	x23, x24, [sp, #48]
   36774:	ldp	x29, x30, [sp]
   36778:	add	sp, sp, #0x560
   3677c:	ret
   36780:	mov	x2, x21
   36784:	ldr	w1, [sp, #100]
   36788:	mov	w0, #0x3be                 	// #958
   3678c:	and	w1, w1, w0
   36790:	mov	x0, x19
   36794:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   36798:	ldp	x25, x26, [sp, #64]
   3679c:	ldr	x27, [sp, #80]
   367a0:	b	366e8 <PyInit__decimal@@Base+0x1c548>
   367a4:	str	wzr, [sp, #160]
   367a8:	cbz	x23, 36874 <PyInit__decimal@@Base+0x1c6d4>
   367ac:	mov	x2, x21
   367b0:	add	x1, sp, #0x300
   367b4:	mov	x0, x19
   367b8:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   367bc:	cbz	w0, 366e8 <PyInit__decimal@@Base+0x1c548>
   367c0:	lsr	x0, x23, #32
   367c4:	mov	w1, #0x20                  	// #32
   367c8:	cmp	xzr, x23, lsr #32
   367cc:	b.ne	367d8 <PyInit__decimal@@Base+0x1c638>  // b.any
   367d0:	mov	x0, x23
   367d4:	mov	w1, #0x0                   	// #0
   367d8:	lsr	x2, x0, #16
   367dc:	cmp	xzr, x0, lsr #16
   367e0:	b.eq	367ec <PyInit__decimal@@Base+0x1c64c>  // b.none
   367e4:	add	w1, w1, #0x10
   367e8:	mov	x0, x2
   367ec:	lsr	x2, x0, #8
   367f0:	cmp	xzr, x0, lsr #8
   367f4:	b.eq	36800 <PyInit__decimal@@Base+0x1c660>  // b.none
   367f8:	add	w1, w1, #0x8
   367fc:	mov	x0, x2
   36800:	lsr	x2, x0, #4
   36804:	cmp	xzr, x0, lsr #4
   36808:	b.eq	36814 <PyInit__decimal@@Base+0x1c674>  // b.none
   3680c:	add	w1, w1, #0x4
   36810:	mov	x0, x2
   36814:	lsr	x2, x0, #2
   36818:	cmp	xzr, x0, lsr #2
   3681c:	b.eq	36828 <PyInit__decimal@@Base+0x1c688>  // b.none
   36820:	add	w1, w1, #0x2
   36824:	mov	x0, x2
   36828:	lsr	x2, x0, #1
   3682c:	cmp	xzr, x0, lsr #1
   36830:	b.eq	3683c <PyInit__decimal@@Base+0x1c69c>  // b.none
   36834:	add	w1, w1, #0x1
   36838:	mov	x0, x2
   3683c:	sub	w1, w1, #0x1
   36840:	add	w0, w1, w0
   36844:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   36848:	add	x1, x1, #0xe58
   3684c:	ldr	x0, [x1, w0, sxtw #3]
   36850:	lsr	x22, x0, #1
   36854:	cmp	xzr, x0, lsr #1
   36858:	b.eq	36918 <PyInit__decimal@@Base+0x1c778>  // b.none
   3685c:	stp	x25, x26, [sp, #64]
   36860:	str	x27, [sp, #80]
   36864:	add	x26, sp, #0xa0
   36868:	add	x25, sp, #0x530
   3686c:	add	x27, sp, #0x300
   36870:	b	368b0 <PyInit__decimal@@Base+0x1c710>
   36874:	mov	x3, #0x0                   	// #0
   36878:	mov	x2, #0x1                   	// #1
   3687c:	mov	w1, w24
   36880:	mov	x0, x19
   36884:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36888:	b	366e8 <PyInit__decimal@@Base+0x1c548>
   3688c:	mov	x4, x26
   36890:	mov	x3, x25
   36894:	mov	x2, x27
   36898:	mov	x1, x19
   3689c:	mov	x0, x19
   368a0:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   368a4:	b	368d0 <PyInit__decimal@@Base+0x1c730>
   368a8:	lsr	x22, x22, #1
   368ac:	cbz	x22, 36904 <PyInit__decimal@@Base+0x1c764>
   368b0:	mov	x4, x26
   368b4:	mov	x3, x25
   368b8:	mov	x2, x19
   368bc:	mov	x1, x19
   368c0:	mov	x0, x19
   368c4:	bl	2ffd8 <PyInit__decimal@@Base+0x15e38>
   368c8:	tst	x23, x22
   368cc:	b.ne	3688c <PyInit__decimal@@Base+0x1c6ec>  // b.any
   368d0:	ldrb	w0, [x19]
   368d4:	tst	w0, #0xe
   368d8:	b.ne	36910 <PyInit__decimal@@Base+0x1c770>  // b.any
   368dc:	ldr	x0, [x19, #24]
   368e0:	ldr	x1, [x19, #40]
   368e4:	add	x0, x1, x0, lsl #3
   368e8:	ldur	x0, [x0, #-8]
   368ec:	cbnz	x0, 368a8 <PyInit__decimal@@Base+0x1c708>
   368f0:	ldr	w0, [sp, #160]
   368f4:	tbz	w0, #0, 368a8 <PyInit__decimal@@Base+0x1c708>
   368f8:	ldp	x25, x26, [sp, #64]
   368fc:	ldr	x27, [sp, #80]
   36900:	b	36918 <PyInit__decimal@@Base+0x1c778>
   36904:	ldp	x25, x26, [sp, #64]
   36908:	ldr	x27, [sp, #80]
   3690c:	b	36918 <PyInit__decimal@@Base+0x1c778>
   36910:	ldp	x25, x26, [sp, #64]
   36914:	ldr	x27, [sp, #80]
   36918:	ldr	w0, [x21]
   3691c:	ldr	w1, [sp, #160]
   36920:	orr	w0, w0, w1
   36924:	str	w0, [x21]
   36928:	ldrb	w0, [x19]
   3692c:	and	w0, w0, #0xfffffffe
   36930:	orr	w0, w24, w0
   36934:	strb	w0, [x19]
   36938:	b	366e8 <PyInit__decimal@@Base+0x1c548>
   3693c:	mov	x3, #0x1                   	// #1
   36940:	movk	x3, #0x4ec8, lsl #16
   36944:	movk	x3, #0x6d67, lsl #32
   36948:	movk	x3, #0x1bc1, lsl #48
   3694c:	mov	x2, #0x1                   	// #1
   36950:	mov	w1, w24
   36954:	mov	x0, x19
   36958:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   3695c:	b	366f0 <PyInit__decimal@@Base+0x1c550>
   36960:	stp	x29, x30, [sp, #-144]!
   36964:	mov	x29, sp
   36968:	stp	x19, x20, [sp, #16]
   3696c:	stp	x21, x22, [sp, #32]
   36970:	stp	x23, x24, [sp, #48]
   36974:	stp	x25, x26, [sp, #64]
   36978:	mov	x25, x0
   3697c:	mov	x19, x1
   36980:	mov	x20, x2
   36984:	mov	x26, x3
   36988:	mov	x22, x4
   3698c:	ldrb	w21, [x1]
   36990:	tst	w21, #0xe
   36994:	b.ne	369a4 <PyInit__decimal@@Base+0x1c804>  // b.any
   36998:	ldrb	w1, [x2]
   3699c:	ands	w24, w1, #0xe
   369a0:	b.eq	3720c <PyInit__decimal@@Base+0x1d06c>  // b.none
   369a4:	mov	x4, x22
   369a8:	mov	x3, x26
   369ac:	mov	x2, x20
   369b0:	mov	x1, x19
   369b4:	mov	x0, x25
   369b8:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   369bc:	cbnz	w0, 36ac4 <PyInit__decimal@@Base+0x1c924>
   369c0:	mov	x0, x20
   369c4:	bl	28dec <PyInit__decimal@@Base+0xec4c>
   369c8:	mov	w23, w0
   369cc:	mov	w24, #0x0                   	// #0
   369d0:	cbz	w0, 369f8 <PyInit__decimal@@Base+0x1c858>
   369d4:	ldrb	w0, [x19]
   369d8:	mov	w1, #0x0                   	// #0
   369dc:	tbz	w0, #0, 369f0 <PyInit__decimal@@Base+0x1c850>
   369e0:	mov	x0, x20
   369e4:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   369e8:	cmp	w0, #0x0
   369ec:	cset	w1, ne  // ne = any
   369f0:	and	w24, w1, #0xff
   369f4:	mov	w23, #0x1                   	// #1
   369f8:	ldrb	w21, [x19]
   369fc:	tst	w21, #0xe
   36a00:	b.eq	36a58 <PyInit__decimal@@Base+0x1c8b8>  // b.none
   36a04:	stp	x27, x28, [sp, #80]
   36a08:	and	w28, w21, #0x1
   36a0c:	tbz	w21, #0, 36adc <PyInit__decimal@@Base+0x1c93c>
   36a10:	cbz	w23, 36ab0 <PyInit__decimal@@Base+0x1c910>
   36a14:	ldrb	w27, [x20]
   36a18:	tbnz	w27, #1, 36ab0 <PyInit__decimal@@Base+0x1c910>
   36a1c:	tbnz	w21, #1, 36b8c <PyInit__decimal@@Base+0x1c9ec>
   36a20:	tst	w27, #0xe
   36a24:	b.ne	36bfc <PyInit__decimal@@Base+0x1ca5c>  // b.any
   36a28:	ldr	x0, [x20, #24]
   36a2c:	ldr	x1, [x20, #40]
   36a30:	add	x0, x1, x0, lsl #3
   36a34:	ldur	x0, [x0, #-8]
   36a38:	cbnz	x0, 36bfc <PyInit__decimal@@Base+0x1ca5c>
   36a3c:	mov	x3, #0x0                   	// #0
   36a40:	mov	x2, #0x1                   	// #1
   36a44:	mov	w1, w24
   36a48:	mov	x0, x25
   36a4c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36a50:	ldp	x27, x28, [sp, #80]
   36a54:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36a58:	ldr	x0, [x19, #24]
   36a5c:	ldr	x1, [x19, #40]
   36a60:	add	x0, x1, x0, lsl #3
   36a64:	ldur	x0, [x0, #-8]
   36a68:	cbnz	x0, 36aa8 <PyInit__decimal@@Base+0x1c908>
   36a6c:	ldrb	w0, [x20]
   36a70:	tst	w0, #0xe
   36a74:	b.eq	3723c <PyInit__decimal@@Base+0x1d09c>  // b.none
   36a78:	tbz	w0, #0, 36a90 <PyInit__decimal@@Base+0x1c8f0>
   36a7c:	mov	w2, #0x2                   	// #2
   36a80:	mov	w1, w24
   36a84:	mov	x0, x25
   36a88:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36a8c:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36a90:	mov	x3, #0x0                   	// #0
   36a94:	mov	x2, #0x0                   	// #0
   36a98:	mov	w1, w24
   36a9c:	mov	x0, x25
   36aa0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36aa4:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36aa8:	stp	x27, x28, [sp, #80]
   36aac:	b	36a08 <PyInit__decimal@@Base+0x1c868>
   36ab0:	mov	x2, x22
   36ab4:	mov	w1, #0x100                 	// #256
   36ab8:	mov	x0, x25
   36abc:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   36ac0:	ldp	x27, x28, [sp, #80]
   36ac4:	ldp	x19, x20, [sp, #16]
   36ac8:	ldp	x21, x22, [sp, #32]
   36acc:	ldp	x23, x24, [sp, #48]
   36ad0:	ldp	x25, x26, [sp, #64]
   36ad4:	ldp	x29, x30, [sp], #144
   36ad8:	ret
   36adc:	ldrb	w27, [x20]
   36ae0:	tbz	w27, #1, 36a1c <PyInit__decimal@@Base+0x1c87c>
   36ae4:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   36ae8:	add	x1, x1, #0xc58
   36aec:	mov	x0, x19
   36af0:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   36af4:	cbz	w0, 36b20 <PyInit__decimal@@Base+0x1c980>
   36af8:	sbfx	x27, x27, #0, #1
   36afc:	lsl	w27, w27, #1
   36b00:	madd	w0, w27, w0, w0
   36b04:	tbnz	w0, #31, 36b70 <PyInit__decimal@@Base+0x1c9d0>
   36b08:	mov	w2, #0x2                   	// #2
   36b0c:	mov	w1, w24
   36b10:	mov	x0, x25
   36b14:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36b18:	ldp	x27, x28, [sp, #80]
   36b1c:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36b20:	ldr	x19, [x26]
   36b24:	mov	x3, x22
   36b28:	sub	x2, x19, #0x1
   36b2c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   36b30:	add	x1, x1, #0xc58
   36b34:	mov	x0, x25
   36b38:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   36b3c:	mov	x0, #0x1                   	// #1
   36b40:	sub	x0, x0, x19
   36b44:	str	x0, [x25, #8]
   36b48:	ldrb	w1, [x25]
   36b4c:	and	w1, w1, #0xfffffff0
   36b50:	orr	w1, w24, w1
   36b54:	strb	w1, [x25]
   36b58:	ldr	w0, [x22]
   36b5c:	mov	w1, #0x1040                	// #4160
   36b60:	orr	w0, w0, w1
   36b64:	str	w0, [x22]
   36b68:	ldp	x27, x28, [sp, #80]
   36b6c:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36b70:	mov	x3, #0x0                   	// #0
   36b74:	mov	x2, #0x0                   	// #0
   36b78:	mov	w1, w24
   36b7c:	mov	x0, x25
   36b80:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36b84:	ldp	x27, x28, [sp, #80]
   36b88:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36b8c:	tst	w27, #0xe
   36b90:	b.ne	36bc4 <PyInit__decimal@@Base+0x1ca24>  // b.any
   36b94:	ldr	x0, [x20, #24]
   36b98:	ldr	x1, [x20, #40]
   36b9c:	add	x0, x1, x0, lsl #3
   36ba0:	ldur	x0, [x0, #-8]
   36ba4:	cbnz	x0, 36bc4 <PyInit__decimal@@Base+0x1ca24>
   36ba8:	mov	x3, #0x0                   	// #0
   36bac:	mov	x2, #0x1                   	// #1
   36bb0:	mov	w1, w24
   36bb4:	mov	x0, x25
   36bb8:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36bbc:	ldp	x27, x28, [sp, #80]
   36bc0:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36bc4:	tbz	w27, #0, 36be4 <PyInit__decimal@@Base+0x1ca44>
   36bc8:	mov	x3, #0x0                   	// #0
   36bcc:	mov	x2, #0x0                   	// #0
   36bd0:	mov	w1, w24
   36bd4:	mov	x0, x25
   36bd8:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36bdc:	ldp	x27, x28, [sp, #80]
   36be0:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36be4:	mov	w2, #0x2                   	// #2
   36be8:	mov	w1, w24
   36bec:	mov	x0, x25
   36bf0:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   36bf4:	ldp	x27, x28, [sp, #80]
   36bf8:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36bfc:	str	wzr, [sp, #96]
   36c00:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   36c04:	add	x1, x1, #0xc58
   36c08:	mov	x0, x19
   36c0c:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   36c10:	cbz	w0, 36d48 <PyInit__decimal@@Base+0x1cba8>
   36c14:	ldrb	w0, [x19]
   36c18:	and	w0, w0, #0xe
   36c1c:	ldr	x1, [x19, #8]
   36c20:	str	x1, [sp, #104]
   36c24:	ldr	x1, [x19, #16]
   36c28:	str	x1, [sp, #112]
   36c2c:	ldr	x1, [x19, #24]
   36c30:	str	x1, [sp, #120]
   36c34:	ldr	x1, [x19, #32]
   36c38:	str	x1, [sp, #128]
   36c3c:	ldr	x1, [x19, #40]
   36c40:	str	x1, [sp, #136]
   36c44:	mov	w1, #0x50                  	// #80
   36c48:	orr	w0, w0, w1
   36c4c:	strb	w0, [sp, #96]
   36c50:	ldr	x21, [x20, #8]
   36c54:	ldr	x0, [x20, #16]
   36c58:	add	x21, x21, x0
   36c5c:	sub	x21, x21, #0x1
   36c60:	mov	x1, x22
   36c64:	add	x0, sp, #0x60
   36c68:	bl	2f190 <PyInit__decimal@@Base+0x14ff0>
   36c6c:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   36c70:	cmp	x0, x1
   36c74:	b.eq	36e40 <PyInit__decimal@@Base+0x1cca0>  // b.none
   36c78:	ldr	x1, [sp, #104]
   36c7c:	ldr	x2, [sp, #112]
   36c80:	add	x1, x1, x2
   36c84:	sub	x1, x1, #0x1
   36c88:	lsr	x1, x1, #63
   36c8c:	ldrb	w2, [x20]
   36c90:	and	w2, w2, #0x1
   36c94:	cmp	w2, w1, sxtb
   36c98:	b.eq	36e58 <PyInit__decimal@@Base+0x1ccb8>  // b.none
   36c9c:	ldr	x1, [x26, #16]
   36ca0:	ldr	x3, [x26]
   36ca4:	sub	x3, x1, x3
   36ca8:	adds	x1, x3, #0x1
   36cac:	cneg	x1, x1, mi  // mi = first
   36cb0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36cb4:	ldr	x2, [x2, #3584]
   36cb8:	cmp	x1, x2
   36cbc:	b.cs	37090 <PyInit__decimal@@Base+0x1cef0>  // b.hs, b.nlast
   36cc0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36cc4:	ldr	x2, [x2, #3544]
   36cc8:	cmp	x1, x2
   36ccc:	b.cs	3703c <PyInit__decimal@@Base+0x1ce9c>  // b.hs, b.nlast
   36cd0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36cd4:	ldr	x2, [x2, #3528]
   36cd8:	cmp	x1, x2
   36cdc:	b.cs	37024 <PyInit__decimal@@Base+0x1ce84>  // b.hs, b.nlast
   36ce0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36ce4:	ldr	x2, [x2, #3520]
   36ce8:	cmp	x1, x2
   36cec:	cset	w2, cs  // cs = hs, nlast
   36cf0:	add	w2, w2, #0x1
   36cf4:	add	x0, x21, x0
   36cf8:	cmp	x0, w2, sxtw
   36cfc:	b.gt	3715c <PyInit__decimal@@Base+0x1cfbc>
   36d00:	cbnz	w23, 37184 <PyInit__decimal@@Base+0x1cfe4>
   36d04:	mov	x4, x22
   36d08:	mov	x3, x26
   36d0c:	mov	x2, x20
   36d10:	mov	x1, x19
   36d14:	mov	x0, x25
   36d18:	bl	34d98 <PyInit__decimal@@Base+0x1abf8>
   36d1c:	ldrb	w0, [x25]
   36d20:	tst	w0, #0xe
   36d24:	b.eq	371a8 <PyInit__decimal@@Base+0x1d008>  // b.none
   36d28:	ldrb	w0, [x25]
   36d2c:	tbnz	w0, #1, 371e8 <PyInit__decimal@@Base+0x1d048>
   36d30:	mov	x2, x22
   36d34:	mov	x1, x26
   36d38:	mov	x0, x25
   36d3c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36d40:	ldp	x27, x28, [sp, #80]
   36d44:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36d48:	mov	x0, x20
   36d4c:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   36d50:	cbz	w0, 36de8 <PyInit__decimal@@Base+0x1cc48>
   36d54:	tbnz	w27, #0, 36d98 <PyInit__decimal@@Base+0x1cbf8>
   36d58:	ldr	x2, [x19, #8]
   36d5c:	add	x4, sp, #0x60
   36d60:	mov	x3, x26
   36d64:	neg	x2, x2
   36d68:	mov	x1, x20
   36d6c:	mov	x0, x25
   36d70:	bl	30fb8 <PyInit__decimal@@Base+0x16e18>
   36d74:	ldr	w0, [sp, #96]
   36d78:	mov	w1, #0x3be                 	// #958
   36d7c:	ands	w0, w0, w1
   36d80:	b.eq	36db4 <PyInit__decimal@@Base+0x1cc14>  // b.none
   36d84:	ldr	w1, [x22]
   36d88:	orr	w0, w1, w0
   36d8c:	str	w0, [x22]
   36d90:	ldp	x27, x28, [sp, #80]
   36d94:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36d98:	mov	x3, #0x0                   	// #0
   36d9c:	mov	x2, #0x1                   	// #1
   36da0:	mov	w1, w24
   36da4:	mov	x0, x25
   36da8:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36dac:	ldp	x27, x28, [sp, #80]
   36db0:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36db4:	add	x1, sp, #0x60
   36db8:	mov	x0, x25
   36dbc:	bl	29084 <PyInit__decimal@@Base+0xeee4>
   36dc0:	mov	x19, x0
   36dc4:	ldr	x0, [x26]
   36dc8:	sub	x0, x0, #0x1
   36dcc:	cmp	x19, x0
   36dd0:	b.le	36e04 <PyInit__decimal@@Base+0x1cc64>
   36dd4:	ldr	w1, [x22]
   36dd8:	orr	w1, w1, #0x1000
   36ddc:	str	w1, [x22]
   36de0:	mov	x19, x0
   36de4:	b	36e04 <PyInit__decimal@@Base+0x1cc64>
   36de8:	cbnz	w28, 36c14 <PyInit__decimal@@Base+0x1ca74>
   36dec:	ldr	x0, [x26]
   36df0:	sub	x19, x0, #0x1
   36df4:	ldr	w1, [x22]
   36df8:	mov	w0, #0x1040                	// #4160
   36dfc:	orr	w1, w1, w0
   36e00:	str	w1, [x22]
   36e04:	mov	x3, x22
   36e08:	mov	x2, x19
   36e0c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   36e10:	add	x1, x1, #0xc58
   36e14:	mov	x0, x25
   36e18:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   36e1c:	cbz	w0, 37264 <PyInit__decimal@@Base+0x1d0c4>
   36e20:	neg	x0, x19
   36e24:	str	x0, [x25, #8]
   36e28:	ldrb	w1, [x25]
   36e2c:	and	w1, w1, #0xfffffff0
   36e30:	orr	w1, w24, w1
   36e34:	strb	w1, [x25]
   36e38:	ldp	x27, x28, [sp, #80]
   36e3c:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36e40:	mov	x2, x22
   36e44:	mov	w1, #0x200                 	// #512
   36e48:	mov	x0, x25
   36e4c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   36e50:	ldp	x27, x28, [sp, #80]
   36e54:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36e58:	ldr	x1, [x26, #8]
   36e5c:	cmp	x1, #0x0
   36e60:	cneg	x1, x1, lt  // lt = tstop
   36e64:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36e68:	ldr	x2, [x2, #3584]
   36e6c:	cmp	x1, x2
   36e70:	b.cs	36f58 <PyInit__decimal@@Base+0x1cdb8>  // b.hs, b.nlast
   36e74:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36e78:	ldr	x2, [x2, #3544]
   36e7c:	cmp	x1, x2
   36e80:	b.cs	36f04 <PyInit__decimal@@Base+0x1cd64>  // b.hs, b.nlast
   36e84:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36e88:	ldr	x2, [x2, #3528]
   36e8c:	cmp	x1, x2
   36e90:	b.cs	36eec <PyInit__decimal@@Base+0x1cd4c>  // b.hs, b.nlast
   36e94:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36e98:	ldr	x2, [x2, #3520]
   36e9c:	cmp	x1, x2
   36ea0:	cset	w2, cs  // cs = hs, nlast
   36ea4:	add	w2, w2, #0x1
   36ea8:	add	x0, x21, x0
   36eac:	cmp	x0, w2, sxtw
   36eb0:	b.le	36d00 <PyInit__decimal@@Base+0x1cb60>
   36eb4:	mov	x3, #0x1                   	// #1
   36eb8:	movk	x3, #0x4ec8, lsl #16
   36ebc:	movk	x3, #0x6d67, lsl #32
   36ec0:	movk	x3, #0x1bc1, lsl #48
   36ec4:	mov	x2, #0x1                   	// #1
   36ec8:	mov	w1, w24
   36ecc:	mov	x0, x25
   36ed0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   36ed4:	mov	x2, x22
   36ed8:	mov	x1, x26
   36edc:	mov	x0, x25
   36ee0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   36ee4:	ldp	x27, x28, [sp, #80]
   36ee8:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   36eec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36ef0:	ldr	x2, [x2, #3536]
   36ef4:	cmp	x1, x2
   36ef8:	cset	w2, cs  // cs = hs, nlast
   36efc:	add	w2, w2, #0x3
   36f00:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36f04:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f08:	ldr	x2, [x2, #3560]
   36f0c:	cmp	x1, x2
   36f10:	b.cc	36f40 <PyInit__decimal@@Base+0x1cda0>  // b.lo, b.ul, b.last
   36f14:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f18:	ldr	x3, [x2, #3576]
   36f1c:	mov	w2, #0x9                   	// #9
   36f20:	cmp	x1, x3
   36f24:	b.cs	36ea8 <PyInit__decimal@@Base+0x1cd08>  // b.hs, b.nlast
   36f28:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f2c:	ldr	x2, [x2, #3568]
   36f30:	cmp	x1, x2
   36f34:	cset	w2, cs  // cs = hs, nlast
   36f38:	add	w2, w2, #0x7
   36f3c:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36f40:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f44:	ldr	x2, [x2, #3552]
   36f48:	cmp	x1, x2
   36f4c:	cset	w2, cs  // cs = hs, nlast
   36f50:	add	w2, w2, #0x5
   36f54:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36f58:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f5c:	ldr	x2, [x2, #3624]
   36f60:	cmp	x1, x2
   36f64:	b.cs	36fbc <PyInit__decimal@@Base+0x1ce1c>  // b.hs, b.nlast
   36f68:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f6c:	ldr	x2, [x2, #3600]
   36f70:	cmp	x1, x2
   36f74:	b.cc	36fa4 <PyInit__decimal@@Base+0x1ce04>  // b.lo, b.ul, b.last
   36f78:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f7c:	ldr	x3, [x2, #3616]
   36f80:	mov	w2, #0xe                   	// #14
   36f84:	cmp	x1, x3
   36f88:	b.cs	36ea8 <PyInit__decimal@@Base+0x1cd08>  // b.hs, b.nlast
   36f8c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36f90:	ldr	x2, [x2, #3608]
   36f94:	cmp	x1, x2
   36f98:	cset	w2, cs  // cs = hs, nlast
   36f9c:	add	w2, w2, #0xc
   36fa0:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36fa4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36fa8:	ldr	x2, [x2, #3592]
   36fac:	cmp	x1, x2
   36fb0:	cset	w2, cs  // cs = hs, nlast
   36fb4:	add	w2, w2, #0xa
   36fb8:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36fbc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36fc0:	ldr	x2, [x2, #3656]
   36fc4:	cmp	x1, x2
   36fc8:	b.cs	3700c <PyInit__decimal@@Base+0x1ce6c>  // b.hs, b.nlast
   36fcc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36fd0:	ldr	x2, [x2, #3640]
   36fd4:	cmp	x1, x2
   36fd8:	b.cs	36ff4 <PyInit__decimal@@Base+0x1ce54>  // b.hs, b.nlast
   36fdc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36fe0:	ldr	x2, [x2, #3632]
   36fe4:	cmp	x1, x2
   36fe8:	cset	w2, cs  // cs = hs, nlast
   36fec:	add	w2, w2, #0xf
   36ff0:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   36ff4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   36ff8:	ldr	x2, [x2, #3648]
   36ffc:	cmp	x1, x2
   37000:	cset	w2, cs  // cs = hs, nlast
   37004:	add	w2, w2, #0x11
   37008:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   3700c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37010:	ldr	x2, [x2, #3664]
   37014:	cmp	x1, x2
   37018:	cset	w2, cs  // cs = hs, nlast
   3701c:	add	w2, w2, #0x13
   37020:	b	36ea8 <PyInit__decimal@@Base+0x1cd08>
   37024:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37028:	ldr	x2, [x2, #3536]
   3702c:	cmp	x1, x2
   37030:	cset	w2, cs  // cs = hs, nlast
   37034:	add	w2, w2, #0x3
   37038:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   3703c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37040:	ldr	x2, [x2, #3560]
   37044:	cmp	x1, x2
   37048:	b.cc	37078 <PyInit__decimal@@Base+0x1ced8>  // b.lo, b.ul, b.last
   3704c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37050:	ldr	x4, [x2, #3576]
   37054:	mov	w2, #0x9                   	// #9
   37058:	cmp	x1, x4
   3705c:	b.cs	36cf4 <PyInit__decimal@@Base+0x1cb54>  // b.hs, b.nlast
   37060:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37064:	ldr	x2, [x2, #3568]
   37068:	cmp	x1, x2
   3706c:	cset	w2, cs  // cs = hs, nlast
   37070:	add	w2, w2, #0x7
   37074:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   37078:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3707c:	ldr	x2, [x2, #3552]
   37080:	cmp	x1, x2
   37084:	cset	w2, cs  // cs = hs, nlast
   37088:	add	w2, w2, #0x5
   3708c:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   37090:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37094:	ldr	x2, [x2, #3624]
   37098:	cmp	x1, x2
   3709c:	b.cs	370f4 <PyInit__decimal@@Base+0x1cf54>  // b.hs, b.nlast
   370a0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   370a4:	ldr	x2, [x2, #3600]
   370a8:	cmp	x1, x2
   370ac:	b.cc	370dc <PyInit__decimal@@Base+0x1cf3c>  // b.lo, b.ul, b.last
   370b0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   370b4:	ldr	x4, [x2, #3616]
   370b8:	mov	w2, #0xe                   	// #14
   370bc:	cmp	x1, x4
   370c0:	b.cs	36cf4 <PyInit__decimal@@Base+0x1cb54>  // b.hs, b.nlast
   370c4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   370c8:	ldr	x2, [x2, #3608]
   370cc:	cmp	x1, x2
   370d0:	cset	w2, cs  // cs = hs, nlast
   370d4:	add	w2, w2, #0xc
   370d8:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   370dc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   370e0:	ldr	x2, [x2, #3592]
   370e4:	cmp	x1, x2
   370e8:	cset	w2, cs  // cs = hs, nlast
   370ec:	add	w2, w2, #0xa
   370f0:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   370f4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   370f8:	ldr	x2, [x2, #3656]
   370fc:	cmp	x1, x2
   37100:	b.cs	37144 <PyInit__decimal@@Base+0x1cfa4>  // b.hs, b.nlast
   37104:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37108:	ldr	x2, [x2, #3640]
   3710c:	cmp	x1, x2
   37110:	b.cs	3712c <PyInit__decimal@@Base+0x1cf8c>  // b.hs, b.nlast
   37114:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37118:	ldr	x2, [x2, #3632]
   3711c:	cmp	x1, x2
   37120:	cset	w2, cs  // cs = hs, nlast
   37124:	add	w2, w2, #0xf
   37128:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   3712c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37130:	ldr	x2, [x2, #3648]
   37134:	cmp	x1, x2
   37138:	cset	w2, cs  // cs = hs, nlast
   3713c:	add	w2, w2, #0x11
   37140:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   37144:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   37148:	ldr	x2, [x2, #3664]
   3714c:	cmp	x1, x2
   37150:	cset	w2, cs  // cs = hs, nlast
   37154:	add	w2, w2, #0x13
   37158:	b	36cf4 <PyInit__decimal@@Base+0x1cb54>
   3715c:	mov	x2, #0x1                   	// #1
   37160:	mov	w1, w24
   37164:	mov	x0, x25
   37168:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   3716c:	mov	x2, x22
   37170:	mov	x1, x26
   37174:	mov	x0, x25
   37178:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   3717c:	ldp	x27, x28, [sp, #80]
   37180:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   37184:	mov	x5, x22
   37188:	mov	x4, x26
   3718c:	mov	w3, w24
   37190:	mov	x2, x20
   37194:	mov	x1, x19
   37198:	mov	x0, x25
   3719c:	bl	3643c <PyInit__decimal@@Base+0x1c29c>
   371a0:	ldp	x27, x28, [sp, #80]
   371a4:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   371a8:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   371ac:	add	x1, x1, #0xc58
   371b0:	mov	x0, x25
   371b4:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   371b8:	cbnz	w0, 36d28 <PyInit__decimal@@Base+0x1cb88>
   371bc:	ldr	x19, [x26]
   371c0:	mov	x3, x22
   371c4:	sub	x2, x19, #0x1
   371c8:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   371cc:	add	x1, x1, #0xc58
   371d0:	mov	x0, x25
   371d4:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   371d8:	mov	x0, #0x1                   	// #1
   371dc:	sub	x0, x0, x19
   371e0:	str	x0, [x25, #8]
   371e4:	b	36d28 <PyInit__decimal@@Base+0x1cb88>
   371e8:	mov	x3, #0x1                   	// #1
   371ec:	movk	x3, #0x4ec8, lsl #16
   371f0:	movk	x3, #0x6d67, lsl #32
   371f4:	movk	x3, #0x1bc1, lsl #48
   371f8:	mov	x2, #0x1                   	// #1
   371fc:	mov	w1, #0x0                   	// #0
   37200:	mov	x0, x25
   37204:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   37208:	b	36d30 <PyInit__decimal@@Base+0x1cb90>
   3720c:	mov	x0, x2
   37210:	bl	28dec <PyInit__decimal@@Base+0xec4c>
   37214:	mov	w23, w0
   37218:	cbnz	w0, 369d4 <PyInit__decimal@@Base+0x1c834>
   3721c:	ldr	x0, [x19, #24]
   37220:	ldr	x1, [x19, #40]
   37224:	add	x0, x1, x0, lsl #3
   37228:	ldur	x0, [x0, #-8]
   3722c:	cbz	x0, 37238 <PyInit__decimal@@Base+0x1d098>
   37230:	stp	x27, x28, [sp, #80]
   37234:	b	36a08 <PyInit__decimal@@Base+0x1c868>
   37238:	ldrb	w0, [x20]
   3723c:	ldr	x1, [x20, #24]
   37240:	ldr	x2, [x20, #40]
   37244:	add	x1, x2, x1, lsl #3
   37248:	ldur	x1, [x1, #-8]
   3724c:	cbnz	x1, 36a78 <PyInit__decimal@@Base+0x1c8d8>
   37250:	mov	x2, x22
   37254:	mov	w1, #0x100                 	// #256
   37258:	mov	x0, x25
   3725c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37260:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   37264:	ldp	x27, x28, [sp, #80]
   37268:	b	36ac4 <PyInit__decimal@@Base+0x1c924>
   3726c:	sub	sp, sp, #0x270
   37270:	stp	x29, x30, [sp]
   37274:	mov	x29, sp
   37278:	stp	x19, x20, [sp, #16]
   3727c:	stp	x21, x22, [sp, #32]
   37280:	str	x23, [sp, #48]
   37284:	mov	x21, x0
   37288:	mov	x19, x1
   3728c:	mov	x20, x2
   37290:	mov	x23, x3
   37294:	mov	x22, x4
   37298:	mov	w0, #0x30                  	// #48
   3729c:	strb	w0, [sp, #64]
   372a0:	str	xzr, [sp, #72]
   372a4:	str	xzr, [sp, #80]
   372a8:	str	xzr, [sp, #88]
   372ac:	mov	x0, #0x40                  	// #64
   372b0:	str	x0, [sp, #96]
   372b4:	add	x0, sp, #0x70
   372b8:	str	x0, [sp, #104]
   372bc:	ldrb	w0, [x1]
   372c0:	tst	w0, #0xe
   372c4:	b.ne	372d4 <PyInit__decimal@@Base+0x1d134>  // b.any
   372c8:	ldrb	w0, [x2]
   372cc:	tst	w0, #0xe
   372d0:	b.eq	37350 <PyInit__decimal@@Base+0x1d1b0>  // b.none
   372d4:	mov	x4, x22
   372d8:	mov	x3, x23
   372dc:	mov	x2, x20
   372e0:	mov	x1, x19
   372e4:	mov	x0, x21
   372e8:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   372ec:	cbnz	w0, 37320 <PyInit__decimal@@Base+0x1d180>
   372f0:	ldrb	w0, [x19]
   372f4:	tbnz	w0, #1, 37338 <PyInit__decimal@@Base+0x1d198>
   372f8:	ldrb	w0, [x20]
   372fc:	tbz	w0, #1, 3734c <PyInit__decimal@@Base+0x1d1ac>
   37300:	mov	x2, x22
   37304:	mov	x1, x19
   37308:	mov	x0, x21
   3730c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   37310:	mov	x2, x22
   37314:	mov	x1, x23
   37318:	mov	x0, x21
   3731c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   37320:	ldp	x19, x20, [sp, #16]
   37324:	ldp	x21, x22, [sp, #32]
   37328:	ldr	x23, [sp, #48]
   3732c:	ldp	x29, x30, [sp]
   37330:	add	sp, sp, #0x270
   37334:	ret
   37338:	mov	x2, x22
   3733c:	mov	w1, #0x100                 	// #256
   37340:	mov	x0, x21
   37344:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37348:	b	37320 <PyInit__decimal@@Base+0x1d180>
   3734c:	bl	67c0 <abort@plt>
   37350:	ldr	x0, [x2, #24]
   37354:	ldr	x1, [x2, #40]
   37358:	add	x0, x1, x0, lsl #3
   3735c:	ldur	x0, [x0, #-8]
   37360:	cbnz	x0, 373a0 <PyInit__decimal@@Base+0x1d200>
   37364:	ldr	x0, [x19, #24]
   37368:	ldr	x1, [x19, #40]
   3736c:	add	x0, x1, x0, lsl #3
   37370:	ldur	x0, [x0, #-8]
   37374:	cbnz	x0, 3738c <PyInit__decimal@@Base+0x1d1ec>
   37378:	mov	x2, x4
   3737c:	mov	w1, #0x10                  	// #16
   37380:	mov	x0, x21
   37384:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37388:	b	37320 <PyInit__decimal@@Base+0x1d180>
   3738c:	mov	x2, x4
   37390:	mov	w1, #0x100                 	// #256
   37394:	mov	x0, x21
   37398:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   3739c:	b	37320 <PyInit__decimal@@Base+0x1d180>
   373a0:	mov	x5, x4
   373a4:	mov	x4, x3
   373a8:	mov	x3, x2
   373ac:	mov	x2, x19
   373b0:	mov	x1, x21
   373b4:	add	x0, sp, #0x40
   373b8:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   373bc:	ldrb	w0, [sp, #64]
   373c0:	tst	w0, #0xe0
   373c4:	b.ne	373d8 <PyInit__decimal@@Base+0x1d238>  // b.any
   373c8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   373cc:	ldr	x1, [x0, #1704]
   373d0:	ldr	x0, [sp, #104]
   373d4:	blr	x1
   373d8:	ldrb	w0, [sp, #64]
   373dc:	tbnz	w0, #4, 373f0 <PyInit__decimal@@Base+0x1d250>
   373e0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   373e4:	ldr	x1, [x0, #1704]
   373e8:	add	x0, sp, #0x40
   373ec:	blr	x1
   373f0:	mov	x2, x22
   373f4:	mov	x1, x23
   373f8:	mov	x0, x21
   373fc:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   37400:	b	37320 <PyInit__decimal@@Base+0x1d180>
   37404:	sub	sp, sp, #0xa00
   37408:	stp	x29, x30, [sp]
   3740c:	mov	x29, sp
   37410:	stp	x19, x20, [sp, #16]
   37414:	stp	x21, x22, [sp, #32]
   37418:	stp	x23, x24, [sp, #48]
   3741c:	stp	x25, x26, [sp, #64]
   37420:	mov	x19, x0
   37424:	mov	x22, x1
   37428:	mov	x21, x2
   3742c:	mov	x23, x3
   37430:	mov	x24, x4
   37434:	mov	x20, x5
   37438:	mov	w5, #0x30                  	// #48
   3743c:	strb	w5, [sp, #1952]
   37440:	str	xzr, [sp, #1960]
   37444:	str	xzr, [sp, #1968]
   37448:	str	xzr, [sp, #1976]
   3744c:	mov	x0, #0x40                  	// #64
   37450:	str	x0, [sp, #1984]
   37454:	add	x1, sp, #0x7d0
   37458:	str	x1, [sp, #1992]
   3745c:	strb	w5, [sp, #1392]
   37460:	str	xzr, [sp, #1400]
   37464:	str	xzr, [sp, #1408]
   37468:	str	xzr, [sp, #1416]
   3746c:	str	x0, [sp, #1424]
   37470:	add	x1, sp, #0x5a0
   37474:	str	x1, [sp, #1432]
   37478:	strb	w5, [sp, #832]
   3747c:	str	xzr, [sp, #840]
   37480:	str	xzr, [sp, #848]
   37484:	str	xzr, [sp, #856]
   37488:	str	x0, [sp, #864]
   3748c:	add	x1, sp, #0x370
   37490:	str	x1, [sp, #872]
   37494:	strb	w5, [sp, #272]
   37498:	str	xzr, [sp, #280]
   3749c:	str	xzr, [sp, #288]
   374a0:	str	xzr, [sp, #296]
   374a4:	str	x0, [sp, #304]
   374a8:	add	x0, sp, #0x140
   374ac:	str	x0, [sp, #312]
   374b0:	mov	x0, #0x2                   	// #2
   374b4:	str	x0, [sp, #264]
   374b8:	mov	w0, #0xffffff90            	// #-112
   374bc:	strb	w0, [sp, #216]
   374c0:	str	xzr, [sp, #224]
   374c4:	mov	x0, #0x1                   	// #1
   374c8:	str	x0, [sp, #232]
   374cc:	str	x0, [sp, #240]
   374d0:	str	x0, [sp, #248]
   374d4:	add	x0, sp, #0x108
   374d8:	str	x0, [sp, #256]
   374dc:	ldrb	w25, [x22]
   374e0:	tst	w25, #0xe
   374e4:	b.ne	37500 <PyInit__decimal@@Base+0x1d360>  // b.any
   374e8:	ldrb	w26, [x2]
   374ec:	tst	w26, #0xe
   374f0:	b.ne	37500 <PyInit__decimal@@Base+0x1d360>  // b.any
   374f4:	ldrb	w0, [x3]
   374f8:	tst	w0, #0xe
   374fc:	b.eq	375c4 <PyInit__decimal@@Base+0x1d424>  // b.none
   37500:	ldrb	w1, [x21]
   37504:	ldrb	w2, [x23]
   37508:	orr	w0, w1, w2
   3750c:	orr	w0, w25, w0
   37510:	tst	w0, #0xc
   37514:	b.ne	3752c <PyInit__decimal@@Base+0x1d38c>  // b.any
   37518:	mov	x2, x20
   3751c:	mov	w1, #0x100                 	// #256
   37520:	mov	x0, x19
   37524:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37528:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   3752c:	tbz	w25, #3, 37584 <PyInit__decimal@@Base+0x1d3e4>
   37530:	ldr	w0, [x20]
   37534:	orr	w0, w0, #0x100
   37538:	str	w0, [x20]
   3753c:	mov	x2, x20
   37540:	mov	x1, x22
   37544:	mov	x0, x19
   37548:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   3754c:	ldrb	w0, [x19]
   37550:	and	w0, w0, #0xfffffff1
   37554:	orr	w0, w0, #0x4
   37558:	strb	w0, [x19]
   3755c:	mov	x1, x24
   37560:	mov	x0, x19
   37564:	bl	27838 <PyInit__decimal@@Base+0xd698>
   37568:	ldp	x19, x20, [sp, #16]
   3756c:	ldp	x21, x22, [sp, #32]
   37570:	ldp	x23, x24, [sp, #48]
   37574:	ldp	x25, x26, [sp, #64]
   37578:	ldp	x29, x30, [sp]
   3757c:	add	sp, sp, #0xa00
   37580:	ret
   37584:	tbz	w1, #3, 3759c <PyInit__decimal@@Base+0x1d3fc>
   37588:	ldr	w0, [x20]
   3758c:	orr	w0, w0, #0x100
   37590:	str	w0, [x20]
   37594:	mov	x22, x21
   37598:	b	3753c <PyInit__decimal@@Base+0x1d39c>
   3759c:	tbz	w2, #3, 375b4 <PyInit__decimal@@Base+0x1d414>
   375a0:	ldr	w0, [x20]
   375a4:	orr	w0, w0, #0x100
   375a8:	str	w0, [x20]
   375ac:	mov	x22, x23
   375b0:	b	3753c <PyInit__decimal@@Base+0x1d39c>
   375b4:	tbnz	w25, #2, 3753c <PyInit__decimal@@Base+0x1d39c>
   375b8:	tst	x1, #0x4
   375bc:	csel	x22, x23, x21, eq  // eq = none
   375c0:	b	3753c <PyInit__decimal@@Base+0x1d39c>
   375c4:	mov	x0, x22
   375c8:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   375cc:	cbz	w0, 375dc <PyInit__decimal@@Base+0x1d43c>
   375d0:	mov	x0, x21
   375d4:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   375d8:	cbnz	w0, 375f0 <PyInit__decimal@@Base+0x1d450>
   375dc:	mov	x2, x20
   375e0:	mov	w1, #0x100                 	// #256
   375e4:	mov	x0, x19
   375e8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   375ec:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   375f0:	mov	x0, x23
   375f4:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   375f8:	cbz	w0, 375dc <PyInit__decimal@@Base+0x1d43c>
   375fc:	ldr	x0, [x23, #24]
   37600:	ldr	x1, [x23, #40]
   37604:	add	x0, x1, x0, lsl #3
   37608:	ldur	x0, [x0, #-8]
   3760c:	cbz	x0, 37688 <PyInit__decimal@@Base+0x1d4e8>
   37610:	ldr	x0, [x23, #16]
   37614:	ldr	x1, [x23, #8]
   37618:	add	x0, x0, x1
   3761c:	ldr	x1, [x24]
   37620:	cmp	x0, x1
   37624:	b.gt	3769c <PyInit__decimal@@Base+0x1d4fc>
   37628:	stp	x27, x28, [sp, #80]
   3762c:	mov	w27, #0x0                   	// #0
   37630:	tbz	w25, #0, 37644 <PyInit__decimal@@Base+0x1d4a4>
   37634:	mov	x0, x21
   37638:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   3763c:	cmp	w0, #0x0
   37640:	cset	w27, ne  // ne = any
   37644:	and	w27, w27, #0xff
   37648:	ldr	x0, [x21, #24]
   3764c:	ldr	x1, [x21, #40]
   37650:	add	x0, x1, x0, lsl #3
   37654:	ldur	x0, [x0, #-8]
   37658:	cbnz	x0, 376e0 <PyInit__decimal@@Base+0x1d540>
   3765c:	ldr	x0, [x22, #24]
   37660:	ldr	x1, [x22, #40]
   37664:	add	x0, x1, x0, lsl #3
   37668:	ldur	x0, [x0, #-8]
   3766c:	cbnz	x0, 376b0 <PyInit__decimal@@Base+0x1d510>
   37670:	mov	x2, x20
   37674:	mov	w1, #0x100                 	// #256
   37678:	mov	x0, x19
   3767c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37680:	ldp	x27, x28, [sp, #80]
   37684:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   37688:	mov	x2, x20
   3768c:	mov	w1, #0x100                 	// #256
   37690:	mov	x0, x19
   37694:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37698:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   3769c:	mov	x2, x20
   376a0:	mov	w1, #0x100                 	// #256
   376a4:	mov	x0, x19
   376a8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   376ac:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   376b0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   376b4:	add	x1, x1, #0xc58
   376b8:	mov	x0, x23
   376bc:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   376c0:	cmp	w0, #0x0
   376c4:	mov	x3, #0x0                   	// #0
   376c8:	cset	x2, ne  // ne = any
   376cc:	mov	w1, w27
   376d0:	mov	x0, x19
   376d4:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   376d8:	ldp	x27, x28, [sp, #80]
   376dc:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   376e0:	tbnz	w26, #0, 37850 <PyInit__decimal@@Base+0x1d6b0>
   376e4:	ldr	x0, [x22, #24]
   376e8:	ldr	x1, [x22, #40]
   376ec:	add	x0, x1, x0, lsl #3
   376f0:	ldur	x0, [x0, #-8]
   376f4:	cbz	x0, 37868 <PyInit__decimal@@Base+0x1d6c8>
   376f8:	add	x24, sp, #0x9d0
   376fc:	mov	x0, x24
   37700:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   37704:	add	x4, x24, #0x1c
   37708:	mov	x3, x24
   3770c:	mov	x2, #0x0                   	// #0
   37710:	mov	x1, x23
   37714:	add	x0, sp, #0x340
   37718:	bl	31e40 <PyInit__decimal@@Base+0x17ca0>
   3771c:	ldr	w0, [sp, #2540]
   37720:	mov	w1, #0x3be                 	// #958
   37724:	ands	w1, w0, w1
   37728:	b.ne	37884 <PyInit__decimal@@Base+0x1d6e4>  // b.any
   3772c:	str	wzr, [sp, #2540]
   37730:	ldrb	w0, [sp, #832]
   37734:	and	w0, w0, #0xfffffffe
   37738:	strb	w0, [sp, #832]
   3773c:	add	x23, sp, #0x9d0
   37740:	add	x0, sp, #0x7a0
   37744:	mov	x3, x20
   37748:	mov	x2, x23
   3774c:	mov	x1, x22
   37750:	mov	x22, x0
   37754:	bl	31f08 <PyInit__decimal@@Base+0x17d68>
   37758:	ldrb	w0, [sp, #1952]
   3775c:	and	w0, w0, #0xfffffffe
   37760:	strb	w0, [sp, #1952]
   37764:	ldr	x24, [sp, #1960]
   37768:	str	xzr, [sp, #1960]
   3776c:	mov	x3, x20
   37770:	mov	x2, x23
   37774:	mov	x1, x21
   37778:	add	x0, sp, #0x570
   3777c:	bl	31f08 <PyInit__decimal@@Base+0x17d68>
   37780:	ldr	x25, [sp, #1400]
   37784:	str	x25, [sp, #96]
   37788:	str	xzr, [sp, #1400]
   3778c:	add	x21, sp, #0x340
   37790:	mov	x4, x20
   37794:	mov	x3, x23
   37798:	mov	x2, x21
   3779c:	mov	x1, x22
   377a0:	mov	x0, x22
   377a4:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   377a8:	mov	x3, x20
   377ac:	mov	x2, x24
   377b0:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   377b4:	add	x1, x1, #0xc58
   377b8:	mov	x0, x19
   377bc:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   377c0:	mov	x4, x20
   377c4:	mov	x3, x23
   377c8:	mov	x2, x21
   377cc:	mov	x1, x19
   377d0:	mov	x0, x19
   377d4:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   377d8:	mov	x4, x20
   377dc:	mov	x3, x23
   377e0:	mov	x2, x19
   377e4:	mov	x1, x22
   377e8:	mov	x0, x22
   377ec:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   377f0:	mov	x4, x20
   377f4:	mov	x3, x23
   377f8:	mov	x2, x21
   377fc:	mov	x1, x22
   37800:	mov	x0, x22
   37804:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   37808:	ldrb	w0, [sp, #1952]
   3780c:	ldrb	w1, [sp, #1392]
   37810:	orr	w0, w0, w1
   37814:	ldrb	w1, [sp, #832]
   37818:	orr	w0, w0, w1
   3781c:	tst	w0, #0xe
   37820:	b.ne	37980 <PyInit__decimal@@Base+0x1d7e0>  // b.any
   37824:	cmp	x25, #0x0
   37828:	b.le	37a68 <PyInit__decimal@@Base+0x1d8c8>
   3782c:	mov	x28, #0x0                   	// #0
   37830:	add	x24, sp, #0x78
   37834:	adrp	x0, 5b000 <PyInit__decimal@@Base+0x40e60>
   37838:	add	x0, x0, #0xc58
   3783c:	str	x0, [sp, #104]
   37840:	add	x25, sp, #0x110
   37844:	add	x21, sp, #0x7a0
   37848:	add	x26, sp, #0x340
   3784c:	b	378e0 <PyInit__decimal@@Base+0x1d740>
   37850:	mov	x2, x20
   37854:	mov	w1, #0x100                 	// #256
   37858:	mov	x0, x19
   3785c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37860:	ldp	x27, x28, [sp, #80]
   37864:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   37868:	mov	x3, #0x0                   	// #0
   3786c:	mov	x2, #0x0                   	// #0
   37870:	mov	w1, w27
   37874:	mov	x0, x19
   37878:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   3787c:	ldp	x27, x28, [sp, #80]
   37880:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   37884:	mov	x2, x20
   37888:	mov	x0, x19
   3788c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37890:	b	37990 <PyInit__decimal@@Base+0x1d7f0>
   37894:	ldp	x6, x7, [x25]
   37898:	stp	x6, x7, [sp, #168]
   3789c:	ldp	x2, x3, [x25, #16]
   378a0:	stp	x2, x3, [sp, #184]
   378a4:	ldp	x0, x1, [x25, #32]
   378a8:	stp	x0, x1, [sp, #200]
   378ac:	ldp	x4, x5, [x21]
   378b0:	stp	x4, x5, [x25]
   378b4:	ldp	x4, x5, [x21, #16]
   378b8:	stp	x4, x5, [x25, #16]
   378bc:	ldp	x4, x5, [x21, #32]
   378c0:	stp	x4, x5, [x25, #32]
   378c4:	stp	x6, x7, [x21]
   378c8:	stp	x2, x3, [x21, #16]
   378cc:	stp	x0, x1, [x21, #32]
   378d0:	add	x28, x28, #0x1
   378d4:	ldr	x0, [sp, #96]
   378d8:	cmp	x0, x28
   378dc:	b.eq	37974 <PyInit__decimal@@Base+0x1d7d4>  // b.none
   378e0:	mov	x0, x24
   378e4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   378e8:	mov	x2, x20
   378ec:	ldr	x1, [sp, #104]
   378f0:	mov	x0, x25
   378f4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   378f8:	mov	w22, #0x4                   	// #4
   378fc:	mov	x23, #0xa                   	// #10
   37900:	mov	x4, x20
   37904:	mov	x3, x24
   37908:	mov	x2, x21
   3790c:	mov	x1, x21
   37910:	mov	x0, x21
   37914:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   37918:	mov	x4, x20
   3791c:	mov	x3, x24
   37920:	mov	x2, x26
   37924:	mov	x1, x21
   37928:	mov	x0, x21
   3792c:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   37930:	lsr	x23, x23, #1
   37934:	subs	w22, w22, #0x1
   37938:	b.eq	37894 <PyInit__decimal@@Base+0x1d6f4>  // b.none
   3793c:	tbz	w23, #0, 37900 <PyInit__decimal@@Base+0x1d760>
   37940:	mov	x4, x20
   37944:	mov	x3, x24
   37948:	mov	x2, x21
   3794c:	mov	x1, x25
   37950:	mov	x0, x25
   37954:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   37958:	mov	x4, x20
   3795c:	mov	x3, x24
   37960:	mov	x2, x26
   37964:	mov	x1, x25
   37968:	mov	x0, x25
   3796c:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   37970:	b	37900 <PyInit__decimal@@Base+0x1d760>
   37974:	ldrb	w0, [sp, #1952]
   37978:	tst	w0, #0xe
   3797c:	b.eq	37a68 <PyInit__decimal@@Base+0x1d8c8>  // b.none
   37980:	mov	w2, #0x4                   	// #4
   37984:	mov	w1, #0x0                   	// #0
   37988:	mov	x0, x19
   3798c:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   37990:	ldrb	w0, [sp, #1952]
   37994:	tst	w0, #0xe0
   37998:	b.ne	379ac <PyInit__decimal@@Base+0x1d80c>  // b.any
   3799c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   379a0:	ldr	x1, [x0, #1704]
   379a4:	ldr	x0, [sp, #1992]
   379a8:	blr	x1
   379ac:	ldrb	w0, [sp, #1952]
   379b0:	tbnz	w0, #4, 379c4 <PyInit__decimal@@Base+0x1d824>
   379b4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   379b8:	ldr	x1, [x0, #1704]
   379bc:	add	x0, sp, #0x7a0
   379c0:	blr	x1
   379c4:	ldrb	w0, [sp, #1392]
   379c8:	tst	w0, #0xe0
   379cc:	b.ne	379e0 <PyInit__decimal@@Base+0x1d840>  // b.any
   379d0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   379d4:	ldr	x1, [x0, #1704]
   379d8:	ldr	x0, [sp, #1432]
   379dc:	blr	x1
   379e0:	ldrb	w0, [sp, #1392]
   379e4:	tbnz	w0, #4, 379f8 <PyInit__decimal@@Base+0x1d858>
   379e8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   379ec:	ldr	x1, [x0, #1704]
   379f0:	add	x0, sp, #0x570
   379f4:	blr	x1
   379f8:	ldrb	w0, [sp, #832]
   379fc:	tst	w0, #0xe0
   37a00:	b.ne	37a14 <PyInit__decimal@@Base+0x1d874>  // b.any
   37a04:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37a08:	ldr	x1, [x0, #1704]
   37a0c:	ldr	x0, [sp, #872]
   37a10:	blr	x1
   37a14:	ldrb	w0, [sp, #832]
   37a18:	tbnz	w0, #4, 37a2c <PyInit__decimal@@Base+0x1d88c>
   37a1c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37a20:	ldr	x1, [x0, #1704]
   37a24:	add	x0, sp, #0x340
   37a28:	blr	x1
   37a2c:	ldrb	w0, [sp, #272]
   37a30:	tst	w0, #0xe0
   37a34:	b.ne	37a48 <PyInit__decimal@@Base+0x1d8a8>  // b.any
   37a38:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37a3c:	ldr	x1, [x0, #1704]
   37a40:	ldr	x0, [sp, #312]
   37a44:	blr	x1
   37a48:	ldrb	w0, [sp, #272]
   37a4c:	tbnz	w0, #4, 37b78 <PyInit__decimal@@Base+0x1d9d8>
   37a50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37a54:	ldr	x1, [x0, #1704]
   37a58:	add	x0, sp, #0x110
   37a5c:	blr	x1
   37a60:	ldp	x27, x28, [sp, #80]
   37a64:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   37a68:	mov	x2, x20
   37a6c:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   37a70:	add	x1, x1, #0xc58
   37a74:	mov	x0, x19
   37a78:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   37a7c:	ldrb	w0, [sp, #1392]
   37a80:	tst	w0, #0xe
   37a84:	b.ne	37980 <PyInit__decimal@@Base+0x1d7e0>  // b.any
   37a88:	add	x23, sp, #0x570
   37a8c:	add	x22, sp, #0x9d0
   37a90:	add	x21, sp, #0x7a0
   37a94:	add	x24, sp, #0x340
   37a98:	add	x25, sp, #0xd8
   37a9c:	b	37b00 <PyInit__decimal@@Base+0x1d960>
   37aa0:	mov	x0, x23
   37aa4:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   37aa8:	cbnz	w0, 37b44 <PyInit__decimal@@Base+0x1d9a4>
   37aac:	mov	x4, x20
   37ab0:	mov	x3, x22
   37ab4:	mov	x2, x21
   37ab8:	mov	x1, x21
   37abc:	mov	x0, x21
   37ac0:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   37ac4:	mov	x4, x20
   37ac8:	mov	x3, x22
   37acc:	mov	x2, x24
   37ad0:	mov	x1, x21
   37ad4:	mov	x0, x21
   37ad8:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   37adc:	mov	x4, x20
   37ae0:	mov	x3, x22
   37ae4:	mov	x2, x25
   37ae8:	mov	x1, x23
   37aec:	mov	x0, x23
   37af0:	bl	3628c <PyInit__decimal@@Base+0x1c0ec>
   37af4:	ldrb	w0, [sp, #1392]
   37af8:	tst	w0, #0xe
   37afc:	b.ne	37980 <PyInit__decimal@@Base+0x1d7e0>  // b.any
   37b00:	ldr	x0, [sp, #1416]
   37b04:	ldr	x1, [sp, #1432]
   37b08:	add	x0, x1, x0, lsl #3
   37b0c:	ldur	x0, [x0, #-8]
   37b10:	cbnz	x0, 37aa0 <PyInit__decimal@@Base+0x1d900>
   37b14:	ldrb	w0, [sp, #1952]
   37b18:	ldrb	w1, [sp, #832]
   37b1c:	orr	w0, w0, w1
   37b20:	tst	w0, #0xe
   37b24:	b.ne	37980 <PyInit__decimal@@Base+0x1d7e0>  // b.any
   37b28:	ldrb	w0, [x19]
   37b2c:	tst	w0, #0xe
   37b30:	b.ne	37980 <PyInit__decimal@@Base+0x1d7e0>  // b.any
   37b34:	and	w0, w0, #0xfffffffe
   37b38:	orr	w27, w27, w0
   37b3c:	strb	w27, [x19]
   37b40:	b	37990 <PyInit__decimal@@Base+0x1d7f0>
   37b44:	mov	x4, x20
   37b48:	mov	x3, x22
   37b4c:	mov	x2, x21
   37b50:	mov	x1, x19
   37b54:	mov	x0, x19
   37b58:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   37b5c:	mov	x4, x20
   37b60:	mov	x3, x22
   37b64:	mov	x2, x24
   37b68:	mov	x1, x19
   37b6c:	mov	x0, x19
   37b70:	bl	3726c <PyInit__decimal@@Base+0x1d0cc>
   37b74:	b	37aac <PyInit__decimal@@Base+0x1d90c>
   37b78:	ldp	x27, x28, [sp, #80]
   37b7c:	b	37568 <PyInit__decimal@@Base+0x1d3c8>
   37b80:	sub	sp, sp, #0x4e0
   37b84:	stp	x29, x30, [sp]
   37b88:	mov	x29, sp
   37b8c:	stp	x19, x20, [sp, #16]
   37b90:	stp	x21, x22, [sp, #32]
   37b94:	stp	x23, x24, [sp, #48]
   37b98:	mov	x21, x0
   37b9c:	mov	x20, x1
   37ba0:	mov	x19, x2
   37ba4:	mov	x23, x3
   37ba8:	mov	x22, x4
   37bac:	mov	w1, #0x30                  	// #48
   37bb0:	strb	w1, [sp, #640]
   37bb4:	str	xzr, [sp, #648]
   37bb8:	str	xzr, [sp, #656]
   37bbc:	str	xzr, [sp, #664]
   37bc0:	mov	x0, #0x40                  	// #64
   37bc4:	str	x0, [sp, #672]
   37bc8:	add	x2, sp, #0x2b0
   37bcc:	str	x2, [sp, #680]
   37bd0:	strb	w1, [sp, #80]
   37bd4:	str	xzr, [sp, #88]
   37bd8:	str	xzr, [sp, #96]
   37bdc:	str	xzr, [sp, #104]
   37be0:	str	x0, [sp, #112]
   37be4:	add	x0, sp, #0x80
   37be8:	str	x0, [sp, #120]
   37bec:	ldrb	w0, [x20]
   37bf0:	tst	w0, #0xe
   37bf4:	b.ne	37c04 <PyInit__decimal@@Base+0x1da64>  // b.any
   37bf8:	ldrb	w0, [x19]
   37bfc:	tst	w0, #0xe
   37c00:	b.eq	37c84 <PyInit__decimal@@Base+0x1dae4>  // b.none
   37c04:	mov	x4, x22
   37c08:	mov	x3, x23
   37c0c:	mov	x2, x19
   37c10:	mov	x1, x20
   37c14:	mov	x0, x21
   37c18:	bl	292e4 <PyInit__decimal@@Base+0xf144>
   37c1c:	cbnz	w0, 37c50 <PyInit__decimal@@Base+0x1dab0>
   37c20:	ldrb	w0, [x20]
   37c24:	tbnz	w0, #1, 37c68 <PyInit__decimal@@Base+0x1dac8>
   37c28:	ldrb	w0, [x19]
   37c2c:	tbz	w0, #1, 37c7c <PyInit__decimal@@Base+0x1dadc>
   37c30:	mov	x2, x22
   37c34:	mov	x1, x20
   37c38:	mov	x0, x21
   37c3c:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   37c40:	mov	x2, x22
   37c44:	mov	x1, x23
   37c48:	mov	x0, x21
   37c4c:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   37c50:	ldp	x19, x20, [sp, #16]
   37c54:	ldp	x21, x22, [sp, #32]
   37c58:	ldp	x23, x24, [sp, #48]
   37c5c:	ldp	x29, x30, [sp]
   37c60:	add	sp, sp, #0x4e0
   37c64:	ret
   37c68:	mov	x2, x22
   37c6c:	mov	w1, #0x100                 	// #256
   37c70:	mov	x0, x21
   37c74:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37c78:	b	37c50 <PyInit__decimal@@Base+0x1dab0>
   37c7c:	stp	x25, x26, [sp, #64]
   37c80:	bl	67c0 <abort@plt>
   37c84:	ldr	x0, [x19, #24]
   37c88:	ldr	x1, [x19, #40]
   37c8c:	add	x0, x1, x0, lsl #3
   37c90:	ldur	x0, [x0, #-8]
   37c94:	cbz	x0, 37d8c <PyInit__decimal@@Base+0x1dbec>
   37c98:	cmp	x19, x21
   37c9c:	b.eq	37dc8 <PyInit__decimal@@Base+0x1dc28>  // b.none
   37ca0:	mov	x5, x22
   37ca4:	mov	x4, x23
   37ca8:	mov	x3, x19
   37cac:	mov	x2, x20
   37cb0:	mov	x1, x21
   37cb4:	add	x0, sp, #0x50
   37cb8:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   37cbc:	ldrb	w0, [sp, #80]
   37cc0:	tst	w0, #0xc
   37cc4:	b.ne	37d10 <PyInit__decimal@@Base+0x1db70>  // b.any
   37cc8:	ldrb	w0, [x21]
   37ccc:	tst	w0, #0xc
   37cd0:	b.ne	37d10 <PyInit__decimal@@Base+0x1db70>  // b.any
   37cd4:	ldr	x0, [x21, #24]
   37cd8:	ldr	x1, [x21, #40]
   37cdc:	add	x0, x1, x0, lsl #3
   37ce0:	ldur	x0, [x0, #-8]
   37ce4:	cbz	x0, 37d10 <PyInit__decimal@@Base+0x1db70>
   37ce8:	ldr	x0, [x19, #8]
   37cec:	ldr	x1, [x19, #16]
   37cf0:	add	x0, x0, x1
   37cf4:	ldr	x1, [x21, #8]
   37cf8:	ldr	x2, [x21, #16]
   37cfc:	add	x1, x1, x2
   37d00:	sub	x0, x0, x1
   37d04:	add	x0, x0, #0x1
   37d08:	cmp	x0, #0x2
   37d0c:	b.ls	37df4 <PyInit__decimal@@Base+0x1dc54>  // b.plast
   37d10:	ldrb	w0, [sp, #640]
   37d14:	tst	w0, #0xe0
   37d18:	b.ne	37d2c <PyInit__decimal@@Base+0x1db8c>  // b.any
   37d1c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37d20:	ldr	x1, [x0, #1704]
   37d24:	ldr	x0, [sp, #680]
   37d28:	blr	x1
   37d2c:	ldrb	w0, [sp, #640]
   37d30:	tbnz	w0, #4, 37d44 <PyInit__decimal@@Base+0x1dba4>
   37d34:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37d38:	ldr	x1, [x0, #1704]
   37d3c:	add	x0, sp, #0x280
   37d40:	blr	x1
   37d44:	ldrb	w0, [sp, #80]
   37d48:	tst	w0, #0xe0
   37d4c:	b.ne	37d60 <PyInit__decimal@@Base+0x1dbc0>  // b.any
   37d50:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37d54:	ldr	x1, [x0, #1704]
   37d58:	ldr	x0, [sp, #120]
   37d5c:	blr	x1
   37d60:	ldrb	w0, [sp, #80]
   37d64:	tbnz	w0, #4, 37d78 <PyInit__decimal@@Base+0x1dbd8>
   37d68:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   37d6c:	ldr	x1, [x0, #1704]
   37d70:	add	x0, sp, #0x50
   37d74:	blr	x1
   37d78:	mov	x2, x22
   37d7c:	mov	x1, x23
   37d80:	mov	x0, x21
   37d84:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   37d88:	b	37c50 <PyInit__decimal@@Base+0x1dab0>
   37d8c:	ldr	x0, [x20, #24]
   37d90:	ldr	x1, [x20, #40]
   37d94:	add	x0, x1, x0, lsl #3
   37d98:	ldur	x0, [x0, #-8]
   37d9c:	cbnz	x0, 37db4 <PyInit__decimal@@Base+0x1dc14>
   37da0:	mov	x2, x4
   37da4:	mov	w1, #0x10                  	// #16
   37da8:	mov	x0, x21
   37dac:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37db0:	b	37c50 <PyInit__decimal@@Base+0x1dab0>
   37db4:	mov	x2, x4
   37db8:	mov	w1, #0x100                 	// #256
   37dbc:	mov	x0, x21
   37dc0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37dc4:	b	37c50 <PyInit__decimal@@Base+0x1dab0>
   37dc8:	mov	x2, x4
   37dcc:	mov	x1, x19
   37dd0:	add	x0, sp, #0x280
   37dd4:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   37dd8:	add	x19, sp, #0x280
   37ddc:	cbnz	w0, 37ca0 <PyInit__decimal@@Base+0x1db00>
   37de0:	mov	x2, x22
   37de4:	mov	w1, #0x200                 	// #512
   37de8:	mov	x0, x21
   37dec:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   37df0:	b	37c50 <PyInit__decimal@@Base+0x1dab0>
   37df4:	stp	x25, x26, [sp, #64]
   37df8:	ldr	x2, [sp, #120]
   37dfc:	ldr	x0, [sp, #104]
   37e00:	add	x1, x2, x0, lsl #3
   37e04:	ldur	x1, [x1, #-8]
   37e08:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e0c:	ldr	x3, [x3, #3584]
   37e10:	cmp	x1, x3
   37e14:	b.cs	37f00 <PyInit__decimal@@Base+0x1dd60>  // b.hs, b.nlast
   37e18:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e1c:	ldr	x3, [x3, #3544]
   37e20:	cmp	x1, x3
   37e24:	b.cs	37eac <PyInit__decimal@@Base+0x1dd0c>  // b.hs, b.nlast
   37e28:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e2c:	ldr	x3, [x3, #3528]
   37e30:	cmp	x1, x3
   37e34:	b.cs	37e94 <PyInit__decimal@@Base+0x1dcf4>  // b.hs, b.nlast
   37e38:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e3c:	ldr	x3, [x3, #3520]
   37e40:	cmp	x1, x3
   37e44:	cset	w4, cs  // cs = hs, nlast
   37e48:	add	w4, w4, #0x1
   37e4c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e50:	add	x3, x3, #0xdb8
   37e54:	ldr	x3, [x3, w4, sxtw #3]
   37e58:	sub	x3, x3, #0x1
   37e5c:	mov	w24, #0x0                   	// #0
   37e60:	cmp	x1, x3
   37e64:	b.ne	37fd0 <PyInit__decimal@@Base+0x1de30>  // b.any
   37e68:	sub	x0, x0, #0x1
   37e6c:	mov	x3, #0xffffffff89e7ffff    	// #-1981284353
   37e70:	movk	x3, #0x2304, lsl #32
   37e74:	movk	x3, #0x8ac7, lsl #48
   37e78:	subs	x0, x0, #0x1
   37e7c:	b.mi	37fcc <PyInit__decimal@@Base+0x1de2c>  // b.first
   37e80:	ldr	x1, [x2, x0, lsl #3]
   37e84:	cmp	x1, x3
   37e88:	b.eq	37e78 <PyInit__decimal@@Base+0x1dcd8>  // b.none
   37e8c:	mov	w24, #0x0                   	// #0
   37e90:	b	37fd0 <PyInit__decimal@@Base+0x1de30>
   37e94:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37e98:	ldr	x3, [x3, #3536]
   37e9c:	cmp	x1, x3
   37ea0:	cset	w4, cs  // cs = hs, nlast
   37ea4:	add	w4, w4, #0x3
   37ea8:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37eac:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37eb0:	ldr	x3, [x3, #3560]
   37eb4:	cmp	x1, x3
   37eb8:	b.cc	37ee8 <PyInit__decimal@@Base+0x1dd48>  // b.lo, b.ul, b.last
   37ebc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37ec0:	ldr	x3, [x3, #3576]
   37ec4:	mov	w4, #0x9                   	// #9
   37ec8:	cmp	x1, x3
   37ecc:	b.cs	37e4c <PyInit__decimal@@Base+0x1dcac>  // b.hs, b.nlast
   37ed0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37ed4:	ldr	x3, [x3, #3568]
   37ed8:	cmp	x1, x3
   37edc:	cset	w4, cs  // cs = hs, nlast
   37ee0:	add	w4, w4, #0x7
   37ee4:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37ee8:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37eec:	ldr	x3, [x3, #3552]
   37ef0:	cmp	x1, x3
   37ef4:	cset	w4, cs  // cs = hs, nlast
   37ef8:	add	w4, w4, #0x5
   37efc:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37f00:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f04:	ldr	x3, [x3, #3624]
   37f08:	cmp	x1, x3
   37f0c:	b.cs	37f64 <PyInit__decimal@@Base+0x1ddc4>  // b.hs, b.nlast
   37f10:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f14:	ldr	x3, [x3, #3600]
   37f18:	cmp	x1, x3
   37f1c:	b.cc	37f4c <PyInit__decimal@@Base+0x1ddac>  // b.lo, b.ul, b.last
   37f20:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f24:	ldr	x3, [x3, #3616]
   37f28:	mov	w4, #0xe                   	// #14
   37f2c:	cmp	x1, x3
   37f30:	b.cs	37e4c <PyInit__decimal@@Base+0x1dcac>  // b.hs, b.nlast
   37f34:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f38:	ldr	x3, [x3, #3608]
   37f3c:	cmp	x1, x3
   37f40:	cset	w4, cs  // cs = hs, nlast
   37f44:	add	w4, w4, #0xc
   37f48:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37f4c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f50:	ldr	x3, [x3, #3592]
   37f54:	cmp	x1, x3
   37f58:	cset	w4, cs  // cs = hs, nlast
   37f5c:	add	w4, w4, #0xa
   37f60:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37f64:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f68:	ldr	x3, [x3, #3656]
   37f6c:	cmp	x1, x3
   37f70:	b.cs	37fb4 <PyInit__decimal@@Base+0x1de14>  // b.hs, b.nlast
   37f74:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f78:	ldr	x3, [x3, #3640]
   37f7c:	cmp	x1, x3
   37f80:	b.cs	37f9c <PyInit__decimal@@Base+0x1ddfc>  // b.hs, b.nlast
   37f84:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37f88:	ldr	x3, [x3, #3632]
   37f8c:	cmp	x1, x3
   37f90:	cset	w4, cs  // cs = hs, nlast
   37f94:	add	w4, w4, #0xf
   37f98:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37f9c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37fa0:	ldr	x3, [x3, #3648]
   37fa4:	cmp	x1, x3
   37fa8:	cset	w4, cs  // cs = hs, nlast
   37fac:	add	w4, w4, #0x11
   37fb0:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37fb4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27e60>
   37fb8:	ldr	x3, [x3, #3664]
   37fbc:	cmp	x1, x3
   37fc0:	cset	w4, cs  // cs = hs, nlast
   37fc4:	add	w4, w4, #0x13
   37fc8:	b	37e4c <PyInit__decimal@@Base+0x1dcac>
   37fcc:	mov	w24, #0x1                   	// #1
   37fd0:	ldr	x26, [sp, #96]
   37fd4:	add	x0, sp, #0x50
   37fd8:	bl	28e14 <PyInit__decimal@@Base+0xec74>
   37fdc:	mov	w25, w0
   37fe0:	add	x0, sp, #0x4b0
   37fe4:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   37fe8:	ldrb	w3, [x19]
   37fec:	and	w3, w3, #0x1
   37ff0:	ldrb	w0, [x20]
   37ff4:	and	w0, w0, #0x1
   37ff8:	cmp	w3, w0
   37ffc:	b.eq	3806c <PyInit__decimal@@Base+0x1decc>  // b.none
   38000:	add	x4, sp, #0x4b0
   38004:	add	x5, x4, #0x1c
   38008:	mov	x2, x19
   3800c:	mov	x1, x21
   38010:	add	x0, sp, #0x50
   38014:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   38018:	ldr	w0, [sp, #1228]
   3801c:	mov	w1, #0x3be                 	// #958
   38020:	ands	w1, w0, w1
   38024:	b.ne	3808c <PyInit__decimal@@Base+0x1deec>  // b.any
   38028:	mov	x1, x21
   3802c:	add	x0, sp, #0x50
   38030:	bl	26bd0 <PyInit__decimal@@Base+0xca30>
   38034:	tbnz	w0, #31, 38044 <PyInit__decimal@@Base+0x1dea4>
   38038:	cmp	w0, #0x0
   3803c:	ccmp	w25, #0x0, #0x4, eq  // eq = none
   38040:	b.eq	380b8 <PyInit__decimal@@Base+0x1df18>  // b.none
   38044:	cbz	w24, 38054 <PyInit__decimal@@Base+0x1deb4>
   38048:	ldr	x0, [x23]
   3804c:	cmp	x0, x26
   38050:	b.eq	380a0 <PyInit__decimal@@Base+0x1df00>  // b.none
   38054:	mov	x2, x22
   38058:	add	x1, sp, #0x50
   3805c:	mov	x0, x21
   38060:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   38064:	ldp	x25, x26, [sp, #64]
   38068:	b	37d10 <PyInit__decimal@@Base+0x1db70>
   3806c:	add	x4, sp, #0x4b0
   38070:	add	x5, x4, #0x1c
   38074:	eor	w3, w3, #0x1
   38078:	mov	x2, x19
   3807c:	mov	x1, x21
   38080:	add	x0, sp, #0x50
   38084:	bl	2ad3c <PyInit__decimal@@Base+0x10b9c>
   38088:	b	38018 <PyInit__decimal@@Base+0x1de78>
   3808c:	mov	x2, x22
   38090:	mov	x0, x21
   38094:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   38098:	ldp	x25, x26, [sp, #64]
   3809c:	b	37d10 <PyInit__decimal@@Base+0x1db70>
   380a0:	mov	x2, x22
   380a4:	mov	w1, #0x8                   	// #8
   380a8:	mov	x0, x21
   380ac:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   380b0:	ldp	x25, x26, [sp, #64]
   380b4:	b	37d10 <PyInit__decimal@@Base+0x1db70>
   380b8:	ldp	x25, x26, [sp, #64]
   380bc:	b	37d10 <PyInit__decimal@@Base+0x1db70>
   380c0:	stp	x29, x30, [sp, #-64]!
   380c4:	mov	x29, sp
   380c8:	ldp	x4, x5, [x2]
   380cc:	stp	x4, x5, [sp, #16]
   380d0:	ldp	x4, x5, [x2, #16]
   380d4:	stp	x4, x5, [sp, #32]
   380d8:	ldp	x4, x5, [x2, #32]
   380dc:	stp	x4, x5, [sp, #48]
   380e0:	mov	w2, #0x3                   	// #3
   380e4:	str	w2, [sp, #52]
   380e8:	mov	x4, x3
   380ec:	add	x3, sp, #0x10
   380f0:	mov	x2, x1
   380f4:	mov	x1, x0
   380f8:	mov	w0, #0x1                   	// #1
   380fc:	bl	2cd28 <PyInit__decimal@@Base+0x12b88>
   38100:	ldp	x29, x30, [sp], #64
   38104:	ret
   38108:	stp	x29, x30, [sp, #-64]!
   3810c:	mov	x29, sp
   38110:	ldp	x4, x5, [x2]
   38114:	stp	x4, x5, [sp, #16]
   38118:	ldp	x4, x5, [x2, #16]
   3811c:	stp	x4, x5, [sp, #32]
   38120:	ldp	x4, x5, [x2, #32]
   38124:	stp	x4, x5, [sp, #48]
   38128:	mov	w2, #0x2                   	// #2
   3812c:	str	w2, [sp, #52]
   38130:	mov	x4, x3
   38134:	add	x3, sp, #0x10
   38138:	mov	x2, x1
   3813c:	mov	x1, x0
   38140:	mov	w0, #0x1                   	// #1
   38144:	bl	2cd28 <PyInit__decimal@@Base+0x12b88>
   38148:	ldp	x29, x30, [sp], #64
   3814c:	ret
   38150:	ldrb	w2, [x0]
   38154:	tst	w2, #0xe
   38158:	b.ne	3817c <PyInit__decimal@@Base+0x1dfdc>  // b.any
   3815c:	ldrb	w3, [x1]
   38160:	tst	w3, #0xe
   38164:	b.ne	3817c <PyInit__decimal@@Base+0x1dfdc>  // b.any
   38168:	ldr	x2, [x0, #8]
   3816c:	ldr	x0, [x1, #8]
   38170:	cmp	x2, x0
   38174:	cset	w0, eq  // eq = none
   38178:	ret
   3817c:	tst	w2, #0xc
   38180:	b.eq	38194 <PyInit__decimal@@Base+0x1dff4>  // b.none
   38184:	ldrb	w3, [x1]
   38188:	mov	w0, #0x1                   	// #1
   3818c:	tst	w3, #0xc
   38190:	b.ne	38178 <PyInit__decimal@@Base+0x1dfd8>  // b.any
   38194:	mov	w0, #0x0                   	// #0
   38198:	tbz	w2, #1, 38178 <PyInit__decimal@@Base+0x1dfd8>
   3819c:	ldrb	w0, [x1]
   381a0:	ubfx	x0, x0, #1, #1
   381a4:	b	38178 <PyInit__decimal@@Base+0x1dfd8>
   381a8:	stp	x29, x30, [sp, #-96]!
   381ac:	mov	x29, sp
   381b0:	stp	x19, x20, [sp, #16]
   381b4:	stp	x21, x22, [sp, #32]
   381b8:	mov	x22, x0
   381bc:	mov	x19, x1
   381c0:	mov	x20, x2
   381c4:	mov	x21, x3
   381c8:	ldrb	w1, [x1]
   381cc:	tst	w1, #0xe
   381d0:	b.ne	38208 <PyInit__decimal@@Base+0x1e068>  // b.any
   381d4:	ldr	x0, [x19, #24]
   381d8:	ldr	x2, [x19, #40]
   381dc:	add	x0, x2, x0, lsl #3
   381e0:	ldur	x0, [x0, #-8]
   381e4:	cbnz	x0, 38260 <PyInit__decimal@@Base+0x1e0c0>
   381e8:	mov	w2, #0x2                   	// #2
   381ec:	and	w1, w1, #0x1
   381f0:	mov	x0, x22
   381f4:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   381f8:	ldr	w0, [x21]
   381fc:	orr	w0, w0, #0x4
   38200:	str	w0, [x21]
   38204:	b	382b4 <PyInit__decimal@@Base+0x1e114>
   38208:	mov	x1, x19
   3820c:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   38210:	cbnz	w0, 382b4 <PyInit__decimal@@Base+0x1e114>
   38214:	ldrb	w0, [x19]
   38218:	tbz	w0, #0, 38230 <PyInit__decimal@@Base+0x1e090>
   3821c:	mov	x2, x21
   38220:	mov	w1, #0x100                 	// #256
   38224:	mov	x0, x22
   38228:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   3822c:	b	382b4 <PyInit__decimal@@Base+0x1e114>
   38230:	ldr	x0, [x20, #16]
   38234:	add	x0, x0, #0x1
   38238:	ldr	x3, [x20]
   3823c:	sub	x3, x0, x3
   38240:	mov	x2, #0x0                   	// #0
   38244:	mov	w1, #0x0                   	// #0
   38248:	mov	x0, x22
   3824c:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   38250:	ldr	w0, [x21]
   38254:	orr	w0, w0, #0x1
   38258:	str	w0, [x21]
   3825c:	b	382b4 <PyInit__decimal@@Base+0x1e114>
   38260:	tbnz	w1, #0, 382c4 <PyInit__decimal@@Base+0x1e124>
   38264:	ldr	x0, [x20]
   38268:	ldr	x1, [x20, #8]
   3826c:	str	x1, [sp, #56]
   38270:	ldp	x2, x3, [x20, #16]
   38274:	stp	x2, x3, [sp, #64]
   38278:	ldp	x2, x3, [x20, #32]
   3827c:	stp	x2, x3, [sp, #80]
   38280:	add	x0, x0, #0x2
   38284:	str	x0, [sp, #48]
   38288:	mov	w0, #0x6                   	// #6
   3828c:	str	w0, [sp, #84]
   38290:	mov	x3, x21
   38294:	add	x2, sp, #0x30
   38298:	mov	x1, x19
   3829c:	mov	x0, x22
   382a0:	bl	307c4 <PyInit__decimal@@Base+0x16624>
   382a4:	mov	x2, x21
   382a8:	mov	x1, x20
   382ac:	mov	x0, x22
   382b0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   382b4:	ldp	x19, x20, [sp, #16]
   382b8:	ldp	x21, x22, [sp, #32]
   382bc:	ldp	x29, x30, [sp], #96
   382c0:	ret
   382c4:	mov	x2, x3
   382c8:	mov	w1, #0x100                 	// #256
   382cc:	mov	x0, x22
   382d0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   382d4:	b	382b4 <PyInit__decimal@@Base+0x1e114>
   382d8:	sub	sp, sp, #0x780
   382dc:	stp	x29, x30, [sp]
   382e0:	mov	x29, sp
   382e4:	stp	x19, x20, [sp, #16]
   382e8:	stp	x21, x22, [sp, #32]
   382ec:	mov	x19, x0
   382f0:	mov	x22, x1
   382f4:	mov	x21, x2
   382f8:	mov	x20, x3
   382fc:	mov	w1, #0x30                  	// #48
   38300:	strb	w1, [sp, #1312]
   38304:	str	xzr, [sp, #1320]
   38308:	str	xzr, [sp, #1328]
   3830c:	str	xzr, [sp, #1336]
   38310:	mov	x0, #0x40                  	// #64
   38314:	str	x0, [sp, #1344]
   38318:	add	x2, sp, #0x550
   3831c:	str	x2, [sp, #1352]
   38320:	strb	w1, [sp, #752]
   38324:	str	xzr, [sp, #760]
   38328:	str	xzr, [sp, #768]
   3832c:	str	xzr, [sp, #776]
   38330:	str	x0, [sp, #784]
   38334:	add	x2, sp, #0x320
   38338:	str	x2, [sp, #792]
   3833c:	strb	w1, [sp, #192]
   38340:	str	xzr, [sp, #200]
   38344:	str	xzr, [sp, #208]
   38348:	str	xzr, [sp, #216]
   3834c:	str	x0, [sp, #224]
   38350:	add	x0, sp, #0xf0
   38354:	str	x0, [sp, #232]
   38358:	mov	x0, #0x2                   	// #2
   3835c:	str	x0, [sp, #184]
   38360:	mov	w0, #0xffffff90            	// #-112
   38364:	strb	w0, [sp, #136]
   38368:	str	xzr, [sp, #144]
   3836c:	mov	x0, #0x1                   	// #1
   38370:	str	x0, [sp, #152]
   38374:	str	x0, [sp, #160]
   38378:	str	x0, [sp, #168]
   3837c:	add	x0, sp, #0xb8
   38380:	str	x0, [sp, #176]
   38384:	ldrb	w1, [x22]
   38388:	tst	w1, #0xe
   3838c:	b.ne	383dc <PyInit__decimal@@Base+0x1e23c>  // b.any
   38390:	stp	x25, x26, [sp, #64]
   38394:	ldr	x26, [x22, #8]
   38398:	asr	x26, x26, #1
   3839c:	ldr	x0, [x22, #24]
   383a0:	ldr	x2, [x22, #40]
   383a4:	add	x0, x2, x0, lsl #3
   383a8:	ldur	x0, [x0, #-8]
   383ac:	cbnz	x0, 38420 <PyInit__decimal@@Base+0x1e280>
   383b0:	mov	x3, x26
   383b4:	mov	x2, #0x0                   	// #0
   383b8:	and	w1, w1, #0x1
   383bc:	mov	x0, x19
   383c0:	bl	26dd8 <PyInit__decimal@@Base+0xcc38>
   383c4:	mov	x2, x20
   383c8:	mov	x1, x21
   383cc:	mov	x0, x19
   383d0:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   383d4:	ldp	x25, x26, [sp, #64]
   383d8:	b	387c4 <PyInit__decimal@@Base+0x1e624>
   383dc:	mov	x2, x21
   383e0:	mov	x1, x22
   383e4:	mov	x0, x19
   383e8:	bl	29274 <PyInit__decimal@@Base+0xf0d4>
   383ec:	cbnz	w0, 387c4 <PyInit__decimal@@Base+0x1e624>
   383f0:	ldrb	w0, [x22]
   383f4:	tbz	w0, #0, 3840c <PyInit__decimal@@Base+0x1e26c>
   383f8:	mov	x2, x20
   383fc:	mov	w1, #0x100                 	// #256
   38400:	mov	x0, x19
   38404:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   38408:	b	387c4 <PyInit__decimal@@Base+0x1e624>
   3840c:	mov	w2, #0x2                   	// #2
   38410:	mov	w1, #0x0                   	// #0
   38414:	mov	x0, x19
   38418:	bl	28eb0 <PyInit__decimal@@Base+0xed10>
   3841c:	b	387c4 <PyInit__decimal@@Base+0x1e624>
   38420:	tbnz	w1, #0, 38494 <PyInit__decimal@@Base+0x1e2f4>
   38424:	stp	x23, x24, [sp, #48]
   38428:	add	x0, sp, #0x750
   3842c:	bl	1d394 <PyInit__decimal@@Base+0x31f4>
   38430:	ldr	x23, [x21]
   38434:	mov	x2, x20
   38438:	mov	x1, x22
   3843c:	add	x0, sp, #0x520
   38440:	bl	291bc <PyInit__decimal@@Base+0xf01c>
   38444:	cbz	w0, 386dc <PyInit__decimal@@Base+0x1e53c>
   38448:	str	xzr, [sp, #1320]
   3844c:	ldr	x0, [x22, #8]
   38450:	tbnz	w0, #0, 384ac <PyInit__decimal@@Base+0x1e30c>
   38454:	stp	x27, x28, [sp, #80]
   38458:	ldr	x22, [x22, #16]
   3845c:	add	x22, x22, #0x1
   38460:	asr	x22, x22, #1
   38464:	add	x23, x23, #0x1
   38468:	subs	x28, x23, x22
   3846c:	b.mi	384d8 <PyInit__decimal@@Base+0x1e338>  // b.first
   38470:	add	x0, sp, #0x520
   38474:	mov	x3, x20
   38478:	lsl	x2, x28, #1
   3847c:	mov	x1, x0
   38480:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   38484:	cbz	w0, 386d0 <PyInit__decimal@@Base+0x1e530>
   38488:	mov	w0, #0x1                   	// #1
   3848c:	str	w0, [sp, #116]
   38490:	b	384f0 <PyInit__decimal@@Base+0x1e350>
   38494:	mov	x2, x3
   38498:	mov	w1, #0x100                 	// #256
   3849c:	mov	x0, x19
   384a0:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   384a4:	ldp	x25, x26, [sp, #64]
   384a8:	b	387c4 <PyInit__decimal@@Base+0x1e624>
   384ac:	add	x0, sp, #0x520
   384b0:	mov	x3, x20
   384b4:	mov	x2, #0x1                   	// #1
   384b8:	mov	x1, x0
   384bc:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   384c0:	cbz	w0, 386dc <PyInit__decimal@@Base+0x1e53c>
   384c4:	stp	x27, x28, [sp, #80]
   384c8:	ldr	x22, [x22, #16]
   384cc:	asr	x22, x22, #1
   384d0:	add	x22, x22, #0x1
   384d4:	b	38464 <PyInit__decimal@@Base+0x1e2c4>
   384d8:	neg	x1, x28, lsl #1
   384dc:	add	x0, sp, #0x520
   384e0:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   384e4:	cmp	x0, #0x0
   384e8:	cset	w0, eq  // eq = none
   384ec:	str	w0, [sp, #116]
   384f0:	sub	x0, x22, x23
   384f4:	str	x0, [sp, #120]
   384f8:	add	x0, x0, x26
   384fc:	str	x0, [sp, #104]
   38500:	mov	x3, x20
   38504:	mov	x2, x23
   38508:	adrp	x1, 5b000 <PyInit__decimal@@Base+0x40e60>
   3850c:	add	x1, x1, #0xc58
   38510:	mov	x0, x19
   38514:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   38518:	cbz	w0, 386d8 <PyInit__decimal@@Base+0x1e538>
   3851c:	add	x22, sp, #0x750
   38520:	add	x24, x22, #0x1c
   38524:	add	x27, sp, #0x520
   38528:	add	x25, sp, #0xc0
   3852c:	add	x23, sp, #0x2f0
   38530:	b	38570 <PyInit__decimal@@Base+0x1e3d0>
   38534:	mov	x2, x20
   38538:	ldr	w1, [sp, #1900]
   3853c:	mov	w0, #0x3be                 	// #958
   38540:	and	w1, w1, w0
   38544:	mov	x0, x19
   38548:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   3854c:	ldp	x27, x28, [sp, #80]
   38550:	b	386ec <PyInit__decimal@@Base+0x1e54c>
   38554:	mov	x5, x24
   38558:	mov	x4, x22
   3855c:	add	x3, sp, #0x88
   38560:	mov	x2, x19
   38564:	mov	x1, x25
   38568:	mov	x0, x19
   3856c:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   38570:	mov	x5, x24
   38574:	mov	x4, x22
   38578:	mov	x3, x19
   3857c:	mov	x2, x27
   38580:	mov	x1, x25
   38584:	mov	x0, x23
   38588:	bl	35820 <PyInit__decimal@@Base+0x1b680>
   3858c:	ldrb	w0, [x19]
   38590:	ldrb	w1, [sp, #752]
   38594:	orr	w0, w0, w1
   38598:	tst	w0, #0xe
   3859c:	b.ne	38534 <PyInit__decimal@@Base+0x1e394>  // b.any
   385a0:	mov	x1, x23
   385a4:	mov	x0, x19
   385a8:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   385ac:	cmp	w0, #0x0
   385b0:	b.le	385f8 <PyInit__decimal@@Base+0x1e458>
   385b4:	mov	x4, x24
   385b8:	mov	x3, x22
   385bc:	mov	x2, x23
   385c0:	mov	x1, x19
   385c4:	mov	x0, x19
   385c8:	bl	2f018 <PyInit__decimal@@Base+0x14e78>
   385cc:	ldrb	w0, [x19]
   385d0:	tst	w0, #0xe
   385d4:	b.eq	38554 <PyInit__decimal@@Base+0x1e3b4>  // b.none
   385d8:	mov	x2, x20
   385dc:	ldr	w1, [sp, #1900]
   385e0:	mov	w0, #0x3be                 	// #958
   385e4:	and	w1, w1, w0
   385e8:	mov	x0, x19
   385ec:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   385f0:	ldp	x27, x28, [sp, #80]
   385f4:	b	386ec <PyInit__decimal@@Base+0x1e54c>
   385f8:	ldr	w0, [sp, #116]
   385fc:	cbnz	w0, 38638 <PyInit__decimal@@Base+0x1e498>
   38600:	ldr	x2, [x19, #40]
   38604:	ldr	x1, [x2]
   38608:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   3860c:	movk	x0, #0xcccd
   38610:	umulh	x0, x1, x0
   38614:	lsr	x0, x0, #3
   38618:	add	x0, x0, x0, lsl #2
   3861c:	sub	x0, x1, x0, lsl #1
   38620:	cmp	w0, #0x0
   38624:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   38628:	b.ne	38680 <PyInit__decimal@@Base+0x1e4e0>  // b.any
   3862c:	add	x1, x1, #0x1
   38630:	str	x1, [x2]
   38634:	b	38680 <PyInit__decimal@@Base+0x1e4e0>
   38638:	add	x3, sp, #0x750
   3863c:	add	x4, x3, #0x1c
   38640:	mov	x2, x19
   38644:	mov	x1, x19
   38648:	add	x0, sp, #0xc0
   3864c:	bl	30018 <PyInit__decimal@@Base+0x15e78>
   38650:	ldrb	w0, [sp, #192]
   38654:	tst	w0, #0xe
   38658:	b.ne	38690 <PyInit__decimal@@Base+0x1e4f0>  // b.any
   3865c:	add	x1, sp, #0x520
   38660:	add	x0, sp, #0xc0
   38664:	bl	26ca8 <PyInit__decimal@@Base+0xcb08>
   38668:	cbnz	w0, 38600 <PyInit__decimal@@Base+0x1e460>
   3866c:	tbnz	x28, #63, 386b0 <PyInit__decimal@@Base+0x1e510>
   38670:	mov	x1, x28
   38674:	mov	x0, x19
   38678:	bl	2b3a0 <PyInit__decimal@@Base+0x11200>
   3867c:	str	x26, [sp, #104]
   38680:	ldr	x0, [sp, #104]
   38684:	str	x0, [x19, #8]
   38688:	ldp	x27, x28, [sp, #80]
   3868c:	b	386ec <PyInit__decimal@@Base+0x1e54c>
   38690:	mov	x2, x20
   38694:	ldr	w1, [sp, #1900]
   38698:	mov	w0, #0x3be                 	// #958
   3869c:	and	w1, w1, w0
   386a0:	mov	x0, x19
   386a4:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   386a8:	ldp	x27, x28, [sp, #80]
   386ac:	b	386ec <PyInit__decimal@@Base+0x1e54c>
   386b0:	mov	x3, x20
   386b4:	ldr	x2, [sp, #120]
   386b8:	mov	x1, x19
   386bc:	mov	x0, x19
   386c0:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   386c4:	cbz	w0, 387d8 <PyInit__decimal@@Base+0x1e638>
   386c8:	str	x26, [sp, #104]
   386cc:	b	38680 <PyInit__decimal@@Base+0x1e4e0>
   386d0:	ldp	x27, x28, [sp, #80]
   386d4:	b	386dc <PyInit__decimal@@Base+0x1e53c>
   386d8:	ldp	x27, x28, [sp, #80]
   386dc:	mov	x2, x20
   386e0:	mov	w1, #0x200                 	// #512
   386e4:	mov	x0, x19
   386e8:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   386ec:	ldrb	w0, [sp, #1312]
   386f0:	tst	w0, #0xe0
   386f4:	b.ne	38708 <PyInit__decimal@@Base+0x1e568>  // b.any
   386f8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   386fc:	ldr	x1, [x0, #1704]
   38700:	ldr	x0, [sp, #1352]
   38704:	blr	x1
   38708:	ldrb	w0, [sp, #1312]
   3870c:	tbnz	w0, #4, 38720 <PyInit__decimal@@Base+0x1e580>
   38710:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38714:	ldr	x1, [x0, #1704]
   38718:	add	x0, sp, #0x520
   3871c:	blr	x1
   38720:	ldrb	w0, [sp, #752]
   38724:	tst	w0, #0xe0
   38728:	b.ne	3873c <PyInit__decimal@@Base+0x1e59c>  // b.any
   3872c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38730:	ldr	x1, [x0, #1704]
   38734:	ldr	x0, [sp, #792]
   38738:	blr	x1
   3873c:	ldrb	w0, [sp, #752]
   38740:	tbnz	w0, #4, 38754 <PyInit__decimal@@Base+0x1e5b4>
   38744:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38748:	ldr	x1, [x0, #1704]
   3874c:	add	x0, sp, #0x2f0
   38750:	blr	x1
   38754:	ldrb	w0, [sp, #192]
   38758:	tst	w0, #0xe0
   3875c:	b.ne	38770 <PyInit__decimal@@Base+0x1e5d0>  // b.any
   38760:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38764:	ldr	x1, [x0, #1704]
   38768:	ldr	x0, [sp, #232]
   3876c:	blr	x1
   38770:	ldrb	w0, [sp, #192]
   38774:	tbnz	w0, #4, 38788 <PyInit__decimal@@Base+0x1e5e8>
   38778:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3877c:	ldr	x1, [x0, #1704]
   38780:	add	x0, sp, #0xc0
   38784:	blr	x1
   38788:	ldp	x0, x1, [x21]
   3878c:	add	x2, sp, #0x820
   38790:	stp	x0, x1, [x2, #-208]
   38794:	ldp	x0, x1, [x21, #16]
   38798:	stp	x0, x1, [x2, #-192]
   3879c:	ldp	x0, x1, [x21, #32]
   387a0:	stp	x0, x1, [x2, #-176]
   387a4:	mov	w0, #0x6                   	// #6
   387a8:	str	w0, [sp, #1908]
   387ac:	mov	x2, x20
   387b0:	add	x1, sp, #0x750
   387b4:	mov	x0, x19
   387b8:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   387bc:	ldp	x23, x24, [sp, #48]
   387c0:	ldp	x25, x26, [sp, #64]
   387c4:	ldp	x19, x20, [sp, #16]
   387c8:	ldp	x21, x22, [sp, #32]
   387cc:	ldp	x29, x30, [sp]
   387d0:	add	sp, sp, #0x780
   387d4:	ret
   387d8:	ldp	x27, x28, [sp, #80]
   387dc:	b	386dc <PyInit__decimal@@Base+0x1e53c>
   387e0:	mov	x2, x0
   387e4:	ldrb	w0, [x0]
   387e8:	tst	w0, #0xe
   387ec:	b.ne	38808 <PyInit__decimal@@Base+0x1e668>  // b.any
   387f0:	ldr	x0, [x2, #24]
   387f4:	ldr	x3, [x2, #40]
   387f8:	add	x0, x3, x0, lsl #3
   387fc:	ldur	x3, [x0, #-8]
   38800:	mov	x0, #0x1                   	// #1
   38804:	cbz	x3, 38870 <PyInit__decimal@@Base+0x1e6d0>
   38808:	stp	x29, x30, [sp, #-32]!
   3880c:	mov	x29, sp
   38810:	str	x19, [sp, #16]
   38814:	ldr	x19, [x2, #16]
   38818:	ldr	x0, [x2, #8]
   3881c:	add	x19, x19, x0
   38820:	mov	x0, #0xffffffffffffffff    	// #-1
   38824:	mov	x2, #0xbcfe                	// #48382
   38828:	movk	x2, #0xa84f, lsl #16
   3882c:	movk	x2, #0xa209, lsl #32
   38830:	movk	x2, #0x9, lsl #48
   38834:	cmp	x19, x2
   38838:	b.hi	38864 <PyInit__decimal@@Base+0x1e6c4>  // b.pmore
   3883c:	ucvtf	d0, w1
   38840:	bl	6620 <log10@plt>
   38844:	ucvtf	d1, x19
   38848:	fdiv	d0, d1, d0
   3884c:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   38850:	fmov	d1, x0
   38854:	fcvtzu	x0, d0
   38858:	add	x0, x0, #0x1
   3885c:	fcmp	d0, d1
   38860:	csinv	x0, x0, xzr, le
   38864:	ldr	x19, [sp, #16]
   38868:	ldp	x29, x30, [sp], #32
   3886c:	ret
   38870:	ret
   38874:	sub	sp, sp, #0x2b0
   38878:	stp	x29, x30, [sp]
   3887c:	mov	x29, sp
   38880:	stp	x19, x20, [sp, #16]
   38884:	stp	x21, x22, [sp, #32]
   38888:	stp	x23, x24, [sp, #48]
   3888c:	mov	x21, x0
   38890:	mov	x23, x4
   38894:	mov	w0, #0x30                  	// #48
   38898:	strb	w0, [sp, #128]
   3889c:	str	xzr, [sp, #136]
   388a0:	str	xzr, [sp, #144]
   388a4:	str	xzr, [sp, #152]
   388a8:	mov	x0, #0x40                  	// #64
   388ac:	str	x0, [sp, #160]
   388b0:	add	x0, sp, #0xb0
   388b4:	str	x0, [sp, #168]
   388b8:	ldrb	w0, [x3]
   388bc:	tst	w0, #0xe
   388c0:	b.ne	3890c <PyInit__decimal@@Base+0x1e76c>  // b.any
   388c4:	mov	x22, x1
   388c8:	mov	w24, w2
   388cc:	mov	x19, x3
   388d0:	mov	x0, x3
   388d4:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   388d8:	cbz	w0, 3890c <PyInit__decimal@@Base+0x1e76c>
   388dc:	ldr	x0, [x21]
   388e0:	str	wzr, [sp, #108]
   388e4:	cbz	x0, 38938 <PyInit__decimal@@Base+0x1e798>
   388e8:	ldr	x0, [x19, #24]
   388ec:	ldr	x1, [x19, #40]
   388f0:	add	x0, x1, x0, lsl #3
   388f4:	ldur	x0, [x0, #-8]
   388f8:	cbnz	x0, 38974 <PyInit__decimal@@Base+0x1e7d4>
   388fc:	ldr	x0, [x21]
   38900:	strh	wzr, [x0]
   38904:	mov	x20, #0x1                   	// #1
   38908:	b	3891c <PyInit__decimal@@Base+0x1e77c>
   3890c:	ldr	w0, [x23]
   38910:	orr	w0, w0, #0x100
   38914:	str	w0, [x23]
   38918:	mov	x20, #0xffffffffffffffff    	// #-1
   3891c:	mov	x0, x20
   38920:	ldp	x19, x20, [sp, #16]
   38924:	ldp	x21, x22, [sp, #32]
   38928:	ldp	x23, x24, [sp, #48]
   3892c:	ldp	x29, x30, [sp]
   38930:	add	sp, sp, #0x2b0
   38934:	ret
   38938:	mov	w1, w24
   3893c:	mov	x0, x19
   38940:	bl	387e0 <PyInit__decimal@@Base+0x1e640>
   38944:	mov	x22, x0
   38948:	cmn	x0, #0x1
   3894c:	b.eq	389b8 <PyInit__decimal@@Base+0x1e818>  // b.none
   38950:	mov	x1, #0x2                   	// #2
   38954:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   38958:	str	x0, [x21]
   3895c:	cbz	x0, 38ad8 <PyInit__decimal@@Base+0x1e938>
   38960:	ldrb	w0, [x19]
   38964:	mov	w1, #0x1                   	// #1
   38968:	str	w1, [sp, #108]
   3896c:	tst	w0, #0xe
   38970:	b.eq	388e8 <PyInit__decimal@@Base+0x1e748>  // b.none
   38974:	ldr	x2, [x19, #8]
   38978:	tbnz	x2, #63, 389cc <PyInit__decimal@@Base+0x1e82c>
   3897c:	mov	x3, x23
   38980:	mov	x1, x19
   38984:	add	x0, sp, #0x80
   38988:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   3898c:	cbz	w0, 38abc <PyInit__decimal@@Base+0x1e91c>
   38990:	stp	x25, x26, [sp, #64]
   38994:	stp	x27, x28, [sp, #80]
   38998:	mov	w24, w24
   3899c:	ldr	x25, [sp, #168]
   389a0:	ldr	x19, [sp, #152]
   389a4:	mov	x20, #0x0                   	// #0
   389a8:	add	x28, sp, #0x7f
   389ac:	mov	x27, #0x2                   	// #2
   389b0:	sub	x26, x25, #0x8
   389b4:	b	389f8 <PyInit__decimal@@Base+0x1e858>
   389b8:	ldr	w0, [x23]
   389bc:	orr	w0, w0, #0x100
   389c0:	str	w0, [x23]
   389c4:	mov	x20, x22
   389c8:	b	3891c <PyInit__decimal@@Base+0x1e77c>
   389cc:	mov	x3, x23
   389d0:	neg	x2, x2
   389d4:	mov	x1, x19
   389d8:	add	x0, sp, #0x80
   389dc:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   389e0:	cmn	x0, #0x1
   389e4:	b.ne	38990 <PyInit__decimal@@Base+0x1e7f0>  // b.any
   389e8:	b	38abc <PyInit__decimal@@Base+0x1e91c>
   389ec:	add	x0, x25, x19, lsl #3
   389f0:	ldur	x0, [x0, #-8]
   389f4:	cbz	x0, 38a6c <PyInit__decimal@@Base+0x1e8cc>
   389f8:	cmp	x22, x20
   389fc:	b.hi	38a28 <PyInit__decimal@@Base+0x1e888>  // b.pmore
   38a00:	add	x22, x20, #0x1
   38a04:	strb	wzr, [sp, #127]
   38a08:	mov	x3, x28
   38a0c:	mov	x2, x27
   38a10:	mov	x1, x22
   38a14:	ldr	x0, [x21]
   38a18:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   38a1c:	str	x0, [x21]
   38a20:	ldrb	w0, [sp, #127]
   38a24:	cbnz	w0, 38ab4 <PyInit__decimal@@Base+0x1e914>
   38a28:	mov	x3, x24
   38a2c:	mov	x2, x19
   38a30:	mov	x1, x25
   38a34:	mov	x0, x25
   38a38:	bl	1b650 <PyInit__decimal@@Base+0x14b0>
   38a3c:	add	x20, x20, #0x1
   38a40:	ldr	x1, [x21]
   38a44:	add	x1, x1, x20, lsl #1
   38a48:	sturh	w0, [x1, #-2]
   38a4c:	cmp	x19, #0x1
   38a50:	b.le	389ec <PyInit__decimal@@Base+0x1e84c>
   38a54:	ldr	x0, [x26, x19, lsl #3]
   38a58:	cbnz	x0, 389f8 <PyInit__decimal@@Base+0x1e858>
   38a5c:	sub	x19, x19, #0x1
   38a60:	cmp	x19, #0x1
   38a64:	b.ne	38a54 <PyInit__decimal@@Base+0x1e8b4>  // b.any
   38a68:	b	389ec <PyInit__decimal@@Base+0x1e84c>
   38a6c:	cmn	x20, #0x1
   38a70:	b.eq	38aec <PyInit__decimal@@Base+0x1e94c>  // b.none
   38a74:	ldp	x25, x26, [sp, #64]
   38a78:	ldp	x27, x28, [sp, #80]
   38a7c:	ldrb	w0, [sp, #128]
   38a80:	tst	w0, #0xe0
   38a84:	b.ne	38a98 <PyInit__decimal@@Base+0x1e8f8>  // b.any
   38a88:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38a8c:	ldr	x1, [x0, #1704]
   38a90:	ldr	x0, [sp, #168]
   38a94:	blr	x1
   38a98:	ldrb	w0, [sp, #128]
   38a9c:	tbnz	w0, #4, 3891c <PyInit__decimal@@Base+0x1e77c>
   38aa0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38aa4:	ldr	x1, [x0, #1704]
   38aa8:	add	x0, sp, #0x80
   38aac:	blr	x1
   38ab0:	b	3891c <PyInit__decimal@@Base+0x1e77c>
   38ab4:	ldp	x25, x26, [sp, #64]
   38ab8:	ldp	x27, x28, [sp, #80]
   38abc:	ldr	w0, [sp, #108]
   38ac0:	cbz	w0, 38ad8 <PyInit__decimal@@Base+0x1e938>
   38ac4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38ac8:	ldr	x1, [x0, #1704]
   38acc:	ldr	x0, [x21]
   38ad0:	blr	x1
   38ad4:	str	xzr, [x21]
   38ad8:	ldr	w0, [x23]
   38adc:	orr	w0, w0, #0x200
   38ae0:	str	w0, [x23]
   38ae4:	mov	x20, #0xffffffffffffffff    	// #-1
   38ae8:	b	38a7c <PyInit__decimal@@Base+0x1e8dc>
   38aec:	ldp	x25, x26, [sp, #64]
   38af0:	ldp	x27, x28, [sp, #80]
   38af4:	b	38abc <PyInit__decimal@@Base+0x1e91c>
   38af8:	sub	sp, sp, #0x2b0
   38afc:	stp	x29, x30, [sp]
   38b00:	mov	x29, sp
   38b04:	stp	x19, x20, [sp, #16]
   38b08:	stp	x21, x22, [sp, #32]
   38b0c:	stp	x23, x24, [sp, #48]
   38b10:	mov	x21, x0
   38b14:	mov	x23, x4
   38b18:	mov	w0, #0x30                  	// #48
   38b1c:	strb	w0, [sp, #128]
   38b20:	str	xzr, [sp, #136]
   38b24:	str	xzr, [sp, #144]
   38b28:	str	xzr, [sp, #152]
   38b2c:	mov	x0, #0x40                  	// #64
   38b30:	str	x0, [sp, #160]
   38b34:	add	x0, sp, #0xb0
   38b38:	str	x0, [sp, #168]
   38b3c:	ldrb	w0, [x3]
   38b40:	tst	w0, #0xe
   38b44:	b.ne	38b9c <PyInit__decimal@@Base+0x1e9fc>  // b.any
   38b48:	stp	x25, x26, [sp, #64]
   38b4c:	mov	x22, x1
   38b50:	mov	w25, w2
   38b54:	mov	x19, x3
   38b58:	mov	x0, x3
   38b5c:	bl	28ac4 <PyInit__decimal@@Base+0xe924>
   38b60:	cbz	w0, 38b98 <PyInit__decimal@@Base+0x1e9f8>
   38b64:	ldr	x0, [x21]
   38b68:	str	wzr, [sp, #108]
   38b6c:	cbz	x0, 38bc8 <PyInit__decimal@@Base+0x1ea28>
   38b70:	ldr	x0, [x19, #24]
   38b74:	ldr	x1, [x19, #40]
   38b78:	add	x0, x1, x0, lsl #3
   38b7c:	ldur	x0, [x0, #-8]
   38b80:	cbnz	x0, 38c04 <PyInit__decimal@@Base+0x1ea64>
   38b84:	ldr	x0, [x21]
   38b88:	str	wzr, [x0]
   38b8c:	mov	x20, #0x1                   	// #1
   38b90:	ldp	x25, x26, [sp, #64]
   38b94:	b	38bac <PyInit__decimal@@Base+0x1ea0c>
   38b98:	ldp	x25, x26, [sp, #64]
   38b9c:	ldr	w0, [x23]
   38ba0:	orr	w0, w0, #0x100
   38ba4:	str	w0, [x23]
   38ba8:	mov	x20, #0xffffffffffffffff    	// #-1
   38bac:	mov	x0, x20
   38bb0:	ldp	x19, x20, [sp, #16]
   38bb4:	ldp	x21, x22, [sp, #32]
   38bb8:	ldp	x23, x24, [sp, #48]
   38bbc:	ldp	x29, x30, [sp]
   38bc0:	add	sp, sp, #0x2b0
   38bc4:	ret
   38bc8:	mov	w1, w25
   38bcc:	mov	x0, x19
   38bd0:	bl	387e0 <PyInit__decimal@@Base+0x1e640>
   38bd4:	mov	x22, x0
   38bd8:	cmn	x0, #0x1
   38bdc:	b.eq	38c54 <PyInit__decimal@@Base+0x1eab4>  // b.none
   38be0:	mov	x1, #0x4                   	// #4
   38be4:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   38be8:	str	x0, [x21]
   38bec:	cbz	x0, 38d78 <PyInit__decimal@@Base+0x1ebd8>
   38bf0:	ldrb	w0, [x19]
   38bf4:	mov	w1, #0x1                   	// #1
   38bf8:	str	w1, [sp, #108]
   38bfc:	tst	w0, #0xe
   38c00:	b.eq	38b70 <PyInit__decimal@@Base+0x1e9d0>  // b.none
   38c04:	ldr	x2, [x19, #8]
   38c08:	tbnz	x2, #63, 38c6c <PyInit__decimal@@Base+0x1eacc>
   38c0c:	mov	x3, x23
   38c10:	mov	x1, x19
   38c14:	add	x0, sp, #0x80
   38c18:	bl	2ac20 <PyInit__decimal@@Base+0x10a80>
   38c1c:	cbz	w0, 38d5c <PyInit__decimal@@Base+0x1ebbc>
   38c20:	stp	x27, x28, [sp, #80]
   38c24:	ldr	x24, [sp, #168]
   38c28:	ldr	x19, [sp, #152]
   38c2c:	mov	x20, #0x0                   	// #0
   38c30:	add	x28, sp, #0x7f
   38c34:	mov	x27, #0x4                   	// #4
   38c38:	mov	x26, #0x89e80000            	// #2313682944
   38c3c:	movk	x26, #0x2304, lsl #32
   38c40:	movk	x26, #0x8ac7, lsl #48
   38c44:	mov	w0, w25
   38c48:	str	x0, [sp, #96]
   38c4c:	sub	x25, x24, #0x8
   38c50:	b	38c98 <PyInit__decimal@@Base+0x1eaf8>
   38c54:	ldr	w0, [x23]
   38c58:	orr	w0, w0, #0x100
   38c5c:	str	w0, [x23]
   38c60:	mov	x20, x22
   38c64:	ldp	x25, x26, [sp, #64]
   38c68:	b	38bac <PyInit__decimal@@Base+0x1ea0c>
   38c6c:	mov	x3, x23
   38c70:	neg	x2, x2
   38c74:	mov	x1, x19
   38c78:	add	x0, sp, #0x80
   38c7c:	bl	2c6e8 <PyInit__decimal@@Base+0x12548>
   38c80:	cmn	x0, #0x1
   38c84:	b.ne	38c20 <PyInit__decimal@@Base+0x1ea80>  // b.any
   38c88:	b	38d5c <PyInit__decimal@@Base+0x1ebbc>
   38c8c:	add	x0, x24, x19, lsl #3
   38c90:	ldur	x0, [x0, #-8]
   38c94:	cbz	x0, 38d10 <PyInit__decimal@@Base+0x1eb70>
   38c98:	cmp	x22, x20
   38c9c:	b.hi	38cc8 <PyInit__decimal@@Base+0x1eb28>  // b.pmore
   38ca0:	add	x22, x20, #0x1
   38ca4:	strb	wzr, [sp, #127]
   38ca8:	mov	x3, x28
   38cac:	mov	x2, x27
   38cb0:	mov	x1, x22
   38cb4:	ldr	x0, [x21]
   38cb8:	bl	251a4 <PyInit__decimal@@Base+0xb004>
   38cbc:	str	x0, [x21]
   38cc0:	ldrb	w0, [sp, #127]
   38cc4:	cbnz	w0, 38d58 <PyInit__decimal@@Base+0x1ebb8>
   38cc8:	mov	x4, x26
   38ccc:	ldr	x3, [sp, #96]
   38cd0:	mov	x2, x19
   38cd4:	mov	x1, x24
   38cd8:	mov	x0, x24
   38cdc:	bl	1d1f0 <PyInit__decimal@@Base+0x3050>
   38ce0:	add	x20, x20, #0x1
   38ce4:	ldr	x1, [x21]
   38ce8:	add	x1, x1, x20, lsl #2
   38cec:	stur	w0, [x1, #-4]
   38cf0:	cmp	x19, #0x1
   38cf4:	b.le	38c8c <PyInit__decimal@@Base+0x1eaec>
   38cf8:	ldr	x0, [x25, x19, lsl #3]
   38cfc:	cbnz	x0, 38c98 <PyInit__decimal@@Base+0x1eaf8>
   38d00:	sub	x19, x19, #0x1
   38d04:	cmp	x19, #0x1
   38d08:	b.ne	38cf8 <PyInit__decimal@@Base+0x1eb58>  // b.any
   38d0c:	b	38c8c <PyInit__decimal@@Base+0x1eaec>
   38d10:	cmn	x20, #0x1
   38d14:	b.eq	38d8c <PyInit__decimal@@Base+0x1ebec>  // b.none
   38d18:	ldp	x27, x28, [sp, #80]
   38d1c:	ldrb	w0, [sp, #128]
   38d20:	tst	w0, #0xe0
   38d24:	b.ne	38d38 <PyInit__decimal@@Base+0x1eb98>  // b.any
   38d28:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38d2c:	ldr	x1, [x0, #1704]
   38d30:	ldr	x0, [sp, #168]
   38d34:	blr	x1
   38d38:	ldrb	w0, [sp, #128]
   38d3c:	tbnz	w0, #4, 38d94 <PyInit__decimal@@Base+0x1ebf4>
   38d40:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38d44:	ldr	x1, [x0, #1704]
   38d48:	add	x0, sp, #0x80
   38d4c:	blr	x1
   38d50:	ldp	x25, x26, [sp, #64]
   38d54:	b	38bac <PyInit__decimal@@Base+0x1ea0c>
   38d58:	ldp	x27, x28, [sp, #80]
   38d5c:	ldr	w0, [sp, #108]
   38d60:	cbz	w0, 38d78 <PyInit__decimal@@Base+0x1ebd8>
   38d64:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38d68:	ldr	x1, [x0, #1704]
   38d6c:	ldr	x0, [x21]
   38d70:	blr	x1
   38d74:	str	xzr, [x21]
   38d78:	ldr	w0, [x23]
   38d7c:	orr	w0, w0, #0x200
   38d80:	str	w0, [x23]
   38d84:	mov	x20, #0xffffffffffffffff    	// #-1
   38d88:	b	38d1c <PyInit__decimal@@Base+0x1eb7c>
   38d8c:	ldp	x27, x28, [sp, #80]
   38d90:	b	38d5c <PyInit__decimal@@Base+0x1ebbc>
   38d94:	ldp	x25, x26, [sp, #64]
   38d98:	b	38bac <PyInit__decimal@@Base+0x1ea0c>
   38d9c:	stp	x29, x30, [sp, #-112]!
   38da0:	mov	x29, sp
   38da4:	stp	x19, x20, [sp, #16]
   38da8:	stp	x21, x22, [sp, #32]
   38dac:	stp	x25, x26, [sp, #64]
   38db0:	stp	x27, x28, [sp, #80]
   38db4:	mov	x20, x0
   38db8:	mov	x22, x1
   38dbc:	mov	x19, x2
   38dc0:	and	w0, w3, #0xff
   38dc4:	str	w0, [sp, #100]
   38dc8:	mov	w25, w4
   38dcc:	str	x5, [sp, #104]
   38dd0:	mov	x27, x6
   38dd4:	mov	w1, w4
   38dd8:	mov	x0, x2
   38ddc:	bl	25790 <PyInit__decimal@@Base+0xb5f0>
   38de0:	mov	x21, x0
   38de4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   38de8:	cmp	x21, x0
   38dec:	b.eq	38e7c <PyInit__decimal@@Base+0x1ecdc>  // b.none
   38df0:	stp	x23, x24, [sp, #48]
   38df4:	mov	x1, #0x8                   	// #8
   38df8:	mov	x0, x19
   38dfc:	bl	25144 <PyInit__decimal@@Base+0xafa4>
   38e00:	mov	x24, x0
   38e04:	cbz	x0, 38e90 <PyInit__decimal@@Base+0x1ecf0>
   38e08:	mov	x0, #0x0                   	// #0
   38e0c:	cbz	x19, 3922c <PyInit__decimal@@Base+0x1f08c>
   38e10:	ldrh	w1, [x22, x0, lsl #1]
   38e14:	str	x1, [x24, x0, lsl #3]
   38e18:	add	x0, x0, #0x1
   38e1c:	cmp	x19, x0
   38e20:	b.ne	38e10 <PyInit__decimal@@Base+0x1ec70>  // b.any
   38e24:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   38e28:	ldr	x1, [x0, #1672]
   38e2c:	cmp	x1, x21
   38e30:	csel	x1, x1, x21, ge  // ge = tcont
   38e34:	ldr	x0, [x20, #32]
   38e38:	cmp	x1, x0
   38e3c:	b.eq	38e50 <PyInit__decimal@@Base+0x1ecb0>  // b.none
   38e40:	ldrb	w2, [x20]
   38e44:	tbz	w2, #5, 38eb8 <PyInit__decimal@@Base+0x1ed18>
   38e48:	cmp	x1, x0
   38e4c:	b.gt	38ea8 <PyInit__decimal@@Base+0x1ed08>
   38e50:	ldr	x0, [x20, #40]
   38e54:	sub	x1, x19, #0x1
   38e58:	ldr	x1, [x24, x1, lsl #3]
   38e5c:	str	x1, [x0]
   38e60:	sub	x23, x19, #0x2
   38e64:	cmp	x19, #0x1
   38e68:	b.eq	390c8 <PyInit__decimal@@Base+0x1ef28>  // b.none
   38e6c:	mov	x19, #0x1                   	// #1
   38e70:	mov	w25, w25
   38e74:	adrp	x26, 5e000 <PyInit__decimal@@Base+0x43e60>
   38e78:	b	38f70 <PyInit__decimal@@Base+0x1edd0>
   38e7c:	mov	x2, x27
   38e80:	mov	w1, #0x100                 	// #256
   38e84:	mov	x0, x20
   38e88:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   38e8c:	b	390b0 <PyInit__decimal@@Base+0x1ef10>
   38e90:	mov	x2, x27
   38e94:	mov	w1, #0x200                 	// #512
   38e98:	mov	x0, x20
   38e9c:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   38ea0:	ldp	x23, x24, [sp, #48]
   38ea4:	b	390b0 <PyInit__decimal@@Base+0x1ef10>
   38ea8:	mov	x2, x27
   38eac:	mov	x0, x20
   38eb0:	bl	25338 <PyInit__decimal@@Base+0xb198>
   38eb4:	b	38ec4 <PyInit__decimal@@Base+0x1ed24>
   38eb8:	mov	x2, x27
   38ebc:	mov	x0, x20
   38ec0:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   38ec4:	cbnz	w0, 38e50 <PyInit__decimal@@Base+0x1ecb0>
   38ec8:	b	3909c <PyInit__decimal@@Base+0x1eefc>
   38ecc:	mov	x2, x27
   38ed0:	mov	x0, x20
   38ed4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   38ed8:	cbz	w0, 3909c <PyInit__decimal@@Base+0x1eefc>
   38edc:	add	x19, x19, #0x1
   38ee0:	ldr	x0, [x20, #40]
   38ee4:	str	x22, [x0, x28, lsl #3]
   38ee8:	mov	x28, x19
   38eec:	ldr	x2, [x24, x23, lsl #3]
   38ef0:	mov	x1, x19
   38ef4:	ldr	x0, [x20, #40]
   38ef8:	bl	1b230 <PyInit__decimal@@Base+0x1090>
   38efc:	mov	x22, x0
   38f00:	cbz	x0, 38f64 <PyInit__decimal@@Base+0x1edc4>
   38f04:	cmp	x19, x21
   38f08:	b.lt	38f58 <PyInit__decimal@@Base+0x1edb8>  // b.tstop
   38f0c:	add	x21, x19, #0x1
   38f10:	ldr	x1, [x26, #1672]
   38f14:	cmp	x1, x21
   38f18:	csel	x1, x1, x21, ge  // ge = tcont
   38f1c:	ldr	x0, [x20, #32]
   38f20:	cmp	x1, x0
   38f24:	b.eq	38f58 <PyInit__decimal@@Base+0x1edb8>  // b.none
   38f28:	ldrb	w2, [x20]
   38f2c:	tbz	w2, #5, 38f48 <PyInit__decimal@@Base+0x1eda8>
   38f30:	cmp	x1, x0
   38f34:	b.le	38f58 <PyInit__decimal@@Base+0x1edb8>
   38f38:	mov	x2, x27
   38f3c:	mov	x0, x20
   38f40:	bl	25338 <PyInit__decimal@@Base+0xb198>
   38f44:	b	38f54 <PyInit__decimal@@Base+0x1edb4>
   38f48:	mov	x2, x27
   38f4c:	mov	x0, x20
   38f50:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   38f54:	cbz	w0, 3909c <PyInit__decimal@@Base+0x1eefc>
   38f58:	add	x19, x19, #0x1
   38f5c:	ldr	x0, [x20, #40]
   38f60:	str	x22, [x0, x28, lsl #3]
   38f64:	sub	x23, x23, #0x1
   38f68:	cmn	x23, #0x1
   38f6c:	b.eq	38fd4 <PyInit__decimal@@Base+0x1ee34>  // b.none
   38f70:	ldr	x0, [x20, #40]
   38f74:	mov	x28, x19
   38f78:	mov	x3, x25
   38f7c:	mov	x2, x19
   38f80:	mov	x1, x0
   38f84:	bl	1d064 <PyInit__decimal@@Base+0x2ec4>
   38f88:	mov	x22, x0
   38f8c:	cbz	x0, 38ee8 <PyInit__decimal@@Base+0x1ed48>
   38f90:	cmp	x19, x21
   38f94:	b.lt	38edc <PyInit__decimal@@Base+0x1ed3c>  // b.tstop
   38f98:	add	x21, x19, #0x1
   38f9c:	ldr	x1, [x26, #1672]
   38fa0:	cmp	x1, x21
   38fa4:	csel	x1, x1, x21, ge  // ge = tcont
   38fa8:	ldr	x0, [x20, #32]
   38fac:	cmp	x1, x0
   38fb0:	b.eq	38edc <PyInit__decimal@@Base+0x1ed3c>  // b.none
   38fb4:	ldrb	w2, [x20]
   38fb8:	tbz	w2, #5, 38ecc <PyInit__decimal@@Base+0x1ed2c>
   38fbc:	cmp	x1, x0
   38fc0:	b.le	38edc <PyInit__decimal@@Base+0x1ed3c>
   38fc4:	mov	x2, x27
   38fc8:	mov	x0, x20
   38fcc:	bl	25338 <PyInit__decimal@@Base+0xb198>
   38fd0:	b	38ed8 <PyInit__decimal@@Base+0x1ed38>
   38fd4:	mov	x1, x19
   38fd8:	cmn	x19, #0x1
   38fdc:	b.eq	3909c <PyInit__decimal@@Base+0x1eefc>  // b.none
   38fe0:	ldrb	w0, [x20]
   38fe4:	and	w0, w0, #0xf0
   38fe8:	ldr	w2, [sp, #100]
   38fec:	orr	w0, w0, w2
   38ff0:	strb	w0, [x20]
   38ff4:	str	xzr, [x20, #8]
   38ff8:	str	x19, [x20, #24]
   38ffc:	ldr	x2, [x20, #40]
   39000:	add	x1, x2, x1, lsl #3
   39004:	ldur	x1, [x1, #-8]
   39008:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3900c:	ldr	x2, [x2, #3584]
   39010:	cmp	x1, x2
   39014:	b.cs	39140 <PyInit__decimal@@Base+0x1efa0>  // b.hs, b.nlast
   39018:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3901c:	ldr	x2, [x2, #3544]
   39020:	cmp	x1, x2
   39024:	b.cs	390ec <PyInit__decimal@@Base+0x1ef4c>  // b.hs, b.nlast
   39028:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3902c:	ldr	x2, [x2, #3528]
   39030:	cmp	x1, x2
   39034:	b.cs	390d4 <PyInit__decimal@@Base+0x1ef34>  // b.hs, b.nlast
   39038:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3903c:	ldr	x2, [x2, #3520]
   39040:	cmp	x1, x2
   39044:	cset	w2, cs  // cs = hs, nlast
   39048:	add	w2, w2, #0x1
   3904c:	sub	x3, x19, #0x1
   39050:	add	x1, x3, x3, lsl #2
   39054:	lsl	x1, x1, #2
   39058:	sub	x1, x1, x3
   3905c:	add	x1, x1, w2, sxtw
   39060:	str	x1, [x20, #16]
   39064:	adrp	x1, 5e000 <PyInit__decimal@@Base+0x43e60>
   39068:	ldr	x1, [x1, #1672]
   3906c:	cmp	x1, x19
   39070:	csel	x1, x1, x19, ge  // ge = tcont
   39074:	ldr	x2, [x20, #32]
   39078:	cmp	x1, x2
   3907c:	b.eq	3908c <PyInit__decimal@@Base+0x1eeec>  // b.none
   39080:	tbz	w0, #5, 3921c <PyInit__decimal@@Base+0x1f07c>
   39084:	cmp	x1, x2
   39088:	b.gt	3920c <PyInit__decimal@@Base+0x1f06c>
   3908c:	mov	x2, x27
   39090:	ldr	x1, [sp, #104]
   39094:	mov	x0, x20
   39098:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   3909c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   390a0:	ldr	x1, [x0, #1704]
   390a4:	mov	x0, x24
   390a8:	blr	x1
   390ac:	ldp	x23, x24, [sp, #48]
   390b0:	ldp	x19, x20, [sp, #16]
   390b4:	ldp	x21, x22, [sp, #32]
   390b8:	ldp	x25, x26, [sp, #64]
   390bc:	ldp	x27, x28, [sp, #80]
   390c0:	ldp	x29, x30, [sp], #112
   390c4:	ret
   390c8:	mov	x19, #0x1                   	// #1
   390cc:	mov	x1, x19
   390d0:	b	38fe0 <PyInit__decimal@@Base+0x1ee40>
   390d4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   390d8:	ldr	x2, [x2, #3536]
   390dc:	cmp	x1, x2
   390e0:	cset	w2, cs  // cs = hs, nlast
   390e4:	add	w2, w2, #0x3
   390e8:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   390ec:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   390f0:	ldr	x2, [x2, #3560]
   390f4:	cmp	x1, x2
   390f8:	b.cc	39128 <PyInit__decimal@@Base+0x1ef88>  // b.lo, b.ul, b.last
   390fc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39100:	ldr	x3, [x2, #3576]
   39104:	mov	w2, #0x9                   	// #9
   39108:	cmp	x1, x3
   3910c:	b.cs	3904c <PyInit__decimal@@Base+0x1eeac>  // b.hs, b.nlast
   39110:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39114:	ldr	x2, [x2, #3568]
   39118:	cmp	x1, x2
   3911c:	cset	w2, cs  // cs = hs, nlast
   39120:	add	w2, w2, #0x7
   39124:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   39128:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3912c:	ldr	x2, [x2, #3552]
   39130:	cmp	x1, x2
   39134:	cset	w2, cs  // cs = hs, nlast
   39138:	add	w2, w2, #0x5
   3913c:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   39140:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39144:	ldr	x2, [x2, #3624]
   39148:	cmp	x1, x2
   3914c:	b.cs	391a4 <PyInit__decimal@@Base+0x1f004>  // b.hs, b.nlast
   39150:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39154:	ldr	x2, [x2, #3600]
   39158:	cmp	x1, x2
   3915c:	b.cc	3918c <PyInit__decimal@@Base+0x1efec>  // b.lo, b.ul, b.last
   39160:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39164:	ldr	x3, [x2, #3616]
   39168:	mov	w2, #0xe                   	// #14
   3916c:	cmp	x1, x3
   39170:	b.cs	3904c <PyInit__decimal@@Base+0x1eeac>  // b.hs, b.nlast
   39174:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39178:	ldr	x2, [x2, #3608]
   3917c:	cmp	x1, x2
   39180:	cset	w2, cs  // cs = hs, nlast
   39184:	add	w2, w2, #0xc
   39188:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   3918c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   39190:	ldr	x2, [x2, #3592]
   39194:	cmp	x1, x2
   39198:	cset	w2, cs  // cs = hs, nlast
   3919c:	add	w2, w2, #0xa
   391a0:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   391a4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   391a8:	ldr	x2, [x2, #3656]
   391ac:	cmp	x1, x2
   391b0:	b.cs	391f4 <PyInit__decimal@@Base+0x1f054>  // b.hs, b.nlast
   391b4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   391b8:	ldr	x2, [x2, #3640]
   391bc:	cmp	x1, x2
   391c0:	b.cs	391dc <PyInit__decimal@@Base+0x1f03c>  // b.hs, b.nlast
   391c4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   391c8:	ldr	x2, [x2, #3632]
   391cc:	cmp	x1, x2
   391d0:	cset	w2, cs  // cs = hs, nlast
   391d4:	add	w2, w2, #0xf
   391d8:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   391dc:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   391e0:	ldr	x2, [x2, #3648]
   391e4:	cmp	x1, x2
   391e8:	cset	w2, cs  // cs = hs, nlast
   391ec:	add	w2, w2, #0x11
   391f0:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   391f4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   391f8:	ldr	x2, [x2, #3664]
   391fc:	cmp	x1, x2
   39200:	cset	w2, cs  // cs = hs, nlast
   39204:	add	w2, w2, #0x13
   39208:	b	3904c <PyInit__decimal@@Base+0x1eeac>
   3920c:	mov	x2, x27
   39210:	mov	x0, x20
   39214:	bl	25338 <PyInit__decimal@@Base+0xb198>
   39218:	b	3908c <PyInit__decimal@@Base+0x1eeec>
   3921c:	mov	x2, x27
   39220:	mov	x0, x20
   39224:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   39228:	b	3908c <PyInit__decimal@@Base+0x1eeec>
   3922c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   39230:	ldr	x1, [x0, #1672]
   39234:	cmp	x1, x21
   39238:	csel	x1, x1, x21, ge  // ge = tcont
   3923c:	ldr	x0, [x20, #32]
   39240:	cmp	x1, x0
   39244:	b.ne	38e40 <PyInit__decimal@@Base+0x1eca0>  // b.any
   39248:	ldr	x0, [x20, #40]
   3924c:	ldur	x1, [x24, #-8]
   39250:	str	x1, [x0]
   39254:	mov	x23, #0xfffffffffffffffe    	// #-2
   39258:	b	38e6c <PyInit__decimal@@Base+0x1eccc>
   3925c:	stp	x29, x30, [sp, #-128]!
   39260:	mov	x29, sp
   39264:	stp	x19, x20, [sp, #16]
   39268:	stp	x21, x22, [sp, #32]
   3926c:	stp	x23, x24, [sp, #48]
   39270:	stp	x25, x26, [sp, #64]
   39274:	stp	x27, x28, [sp, #80]
   39278:	mov	x19, x0
   3927c:	mov	x25, x1
   39280:	mov	x20, x2
   39284:	and	w28, w3, #0xff
   39288:	mov	w23, w4
   3928c:	str	x5, [sp, #120]
   39290:	mov	x22, x6
   39294:	mov	w1, w4
   39298:	mov	x0, x2
   3929c:	bl	25790 <PyInit__decimal@@Base+0xb5f0>
   392a0:	mov	x21, x0
   392a4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   392a8:	cmp	x21, x0
   392ac:	b.eq	39318 <PyInit__decimal@@Base+0x1f178>  // b.none
   392b0:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   392b4:	ldr	x1, [x0, #1672]
   392b8:	cmp	x1, x21
   392bc:	csel	x1, x1, x21, ge  // ge = tcont
   392c0:	ldr	x0, [x19, #32]
   392c4:	cmp	x1, x0
   392c8:	b.eq	392dc <PyInit__decimal@@Base+0x1f13c>  // b.none
   392cc:	ldrb	w2, [x19]
   392d0:	tbz	w2, #5, 3933c <PyInit__decimal@@Base+0x1f19c>
   392d4:	cmp	x1, x0
   392d8:	b.gt	3932c <PyInit__decimal@@Base+0x1f18c>
   392dc:	mov	w0, w23
   392e0:	str	x0, [sp, #112]
   392e4:	ldr	x0, [x19, #40]
   392e8:	sub	x1, x20, #0x1
   392ec:	ldr	w1, [x25, x1, lsl #2]
   392f0:	str	x1, [x0]
   392f4:	sub	x24, x20, #0x2
   392f8:	cmp	x20, #0x1
   392fc:	b.eq	39548 <PyInit__decimal@@Base+0x1f3a8>  // b.none
   39300:	mov	x20, #0x1                   	// #1
   39304:	mov	x27, #0x89e80000            	// #2313682944
   39308:	movk	x27, #0x2304, lsl #32
   3930c:	movk	x27, #0x8ac7, lsl #48
   39310:	adrp	x26, 5e000 <PyInit__decimal@@Base+0x43e60>
   39314:	b	39400 <PyInit__decimal@@Base+0x1f260>
   39318:	mov	x2, x22
   3931c:	mov	w1, #0x100                 	// #256
   39320:	mov	x0, x19
   39324:	bl	28f48 <PyInit__decimal@@Base+0xeda8>
   39328:	b	3952c <PyInit__decimal@@Base+0x1f38c>
   3932c:	mov	x2, x22
   39330:	mov	x0, x19
   39334:	bl	25338 <PyInit__decimal@@Base+0xb198>
   39338:	b	39348 <PyInit__decimal@@Base+0x1f1a8>
   3933c:	mov	x2, x22
   39340:	mov	x0, x19
   39344:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   39348:	cbnz	w0, 392dc <PyInit__decimal@@Base+0x1f13c>
   3934c:	b	3952c <PyInit__decimal@@Base+0x1f38c>
   39350:	mov	x2, x22
   39354:	mov	x0, x19
   39358:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   3935c:	cbz	w0, 3952c <PyInit__decimal@@Base+0x1f38c>
   39360:	add	x20, x20, #0x1
   39364:	ldr	x0, [x19, #40]
   39368:	ldr	x1, [sp, #104]
   3936c:	str	x23, [x0, x1, lsl #3]
   39370:	str	x20, [sp, #104]
   39374:	mov	x3, x27
   39378:	ldr	w2, [x25, x24, lsl #2]
   3937c:	mov	x1, x20
   39380:	ldr	x0, [x19, #40]
   39384:	bl	1cff4 <PyInit__decimal@@Base+0x2e54>
   39388:	mov	x23, x0
   3938c:	cbz	x0, 393f4 <PyInit__decimal@@Base+0x1f254>
   39390:	cmp	x20, x21
   39394:	b.lt	393e4 <PyInit__decimal@@Base+0x1f244>  // b.tstop
   39398:	add	x21, x20, #0x1
   3939c:	ldr	x1, [x26, #1672]
   393a0:	cmp	x1, x21
   393a4:	csel	x1, x1, x21, ge  // ge = tcont
   393a8:	ldr	x0, [x19, #32]
   393ac:	cmp	x1, x0
   393b0:	b.eq	393e4 <PyInit__decimal@@Base+0x1f244>  // b.none
   393b4:	ldrb	w2, [x19]
   393b8:	tbz	w2, #5, 393d4 <PyInit__decimal@@Base+0x1f234>
   393bc:	cmp	x1, x0
   393c0:	b.le	393e4 <PyInit__decimal@@Base+0x1f244>
   393c4:	mov	x2, x22
   393c8:	mov	x0, x19
   393cc:	bl	25338 <PyInit__decimal@@Base+0xb198>
   393d0:	b	393e0 <PyInit__decimal@@Base+0x1f240>
   393d4:	mov	x2, x22
   393d8:	mov	x0, x19
   393dc:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   393e0:	cbz	w0, 3952c <PyInit__decimal@@Base+0x1f38c>
   393e4:	add	x20, x20, #0x1
   393e8:	ldr	x0, [x19, #40]
   393ec:	ldr	x1, [sp, #104]
   393f0:	str	x23, [x0, x1, lsl #3]
   393f4:	sub	x24, x24, #0x1
   393f8:	cmn	x24, #0x1
   393fc:	b.eq	39468 <PyInit__decimal@@Base+0x1f2c8>  // b.none
   39400:	ldr	x0, [x19, #40]
   39404:	str	x20, [sp, #104]
   39408:	mov	x4, x27
   3940c:	ldr	x3, [sp, #112]
   39410:	mov	x2, x20
   39414:	mov	x1, x0
   39418:	bl	1d13c <PyInit__decimal@@Base+0x2f9c>
   3941c:	mov	x23, x0
   39420:	cbz	x0, 39370 <PyInit__decimal@@Base+0x1f1d0>
   39424:	cmp	x21, x20
   39428:	b.gt	39360 <PyInit__decimal@@Base+0x1f1c0>
   3942c:	add	x21, x20, #0x1
   39430:	ldr	x1, [x26, #1672]
   39434:	cmp	x1, x21
   39438:	csel	x1, x1, x21, ge  // ge = tcont
   3943c:	ldr	x0, [x19, #32]
   39440:	cmp	x1, x0
   39444:	b.eq	39360 <PyInit__decimal@@Base+0x1f1c0>  // b.none
   39448:	ldrb	w2, [x19]
   3944c:	tbz	w2, #5, 39350 <PyInit__decimal@@Base+0x1f1b0>
   39450:	cmp	x1, x0
   39454:	b.le	39360 <PyInit__decimal@@Base+0x1f1c0>
   39458:	mov	x2, x22
   3945c:	mov	x0, x19
   39460:	bl	25338 <PyInit__decimal@@Base+0xb198>
   39464:	b	3935c <PyInit__decimal@@Base+0x1f1bc>
   39468:	mov	x0, x20
   3946c:	cmn	x20, #0x1
   39470:	b.eq	3952c <PyInit__decimal@@Base+0x1f38c>  // b.none
   39474:	ldrb	w1, [x19]
   39478:	and	w1, w1, #0xf0
   3947c:	orr	w28, w1, w28
   39480:	strb	w28, [x19]
   39484:	str	xzr, [x19, #8]
   39488:	str	x20, [x19, #24]
   3948c:	ldr	x1, [x19, #40]
   39490:	add	x0, x1, x0, lsl #3
   39494:	ldur	x0, [x0, #-8]
   39498:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3949c:	ldr	x1, [x1, #3584]
   394a0:	cmp	x0, x1
   394a4:	b.cs	395c0 <PyInit__decimal@@Base+0x1f420>  // b.hs, b.nlast
   394a8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   394ac:	ldr	x1, [x1, #3544]
   394b0:	cmp	x0, x1
   394b4:	b.cs	3956c <PyInit__decimal@@Base+0x1f3cc>  // b.hs, b.nlast
   394b8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   394bc:	ldr	x1, [x1, #3528]
   394c0:	cmp	x0, x1
   394c4:	b.cs	39554 <PyInit__decimal@@Base+0x1f3b4>  // b.hs, b.nlast
   394c8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   394cc:	ldr	x1, [x1, #3520]
   394d0:	cmp	x0, x1
   394d4:	cset	w1, cs  // cs = hs, nlast
   394d8:	add	w1, w1, #0x1
   394dc:	sub	x2, x20, #0x1
   394e0:	add	x0, x2, x2, lsl #2
   394e4:	lsl	x0, x0, #2
   394e8:	sub	x0, x0, x2
   394ec:	add	x0, x0, w1, sxtw
   394f0:	str	x0, [x19, #16]
   394f4:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   394f8:	ldr	x1, [x0, #1672]
   394fc:	cmp	x1, x20
   39500:	csel	x1, x1, x20, ge  // ge = tcont
   39504:	ldr	x0, [x19, #32]
   39508:	cmp	x1, x0
   3950c:	b.eq	3951c <PyInit__decimal@@Base+0x1f37c>  // b.none
   39510:	tbz	w28, #5, 3969c <PyInit__decimal@@Base+0x1f4fc>
   39514:	cmp	x1, x0
   39518:	b.gt	3968c <PyInit__decimal@@Base+0x1f4ec>
   3951c:	mov	x2, x22
   39520:	ldr	x1, [sp, #120]
   39524:	mov	x0, x19
   39528:	bl	2bac8 <PyInit__decimal@@Base+0x11928>
   3952c:	ldp	x19, x20, [sp, #16]
   39530:	ldp	x21, x22, [sp, #32]
   39534:	ldp	x23, x24, [sp, #48]
   39538:	ldp	x25, x26, [sp, #64]
   3953c:	ldp	x27, x28, [sp, #80]
   39540:	ldp	x29, x30, [sp], #128
   39544:	ret
   39548:	mov	x0, #0x1                   	// #1
   3954c:	mov	x20, x0
   39550:	b	39474 <PyInit__decimal@@Base+0x1f2d4>
   39554:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39558:	ldr	x1, [x1, #3536]
   3955c:	cmp	x0, x1
   39560:	cset	w1, cs  // cs = hs, nlast
   39564:	add	w1, w1, #0x3
   39568:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   3956c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39570:	ldr	x1, [x1, #3560]
   39574:	cmp	x0, x1
   39578:	b.cc	395a8 <PyInit__decimal@@Base+0x1f408>  // b.lo, b.ul, b.last
   3957c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39580:	ldr	x2, [x1, #3576]
   39584:	mov	w1, #0x9                   	// #9
   39588:	cmp	x0, x2
   3958c:	b.cs	394dc <PyInit__decimal@@Base+0x1f33c>  // b.hs, b.nlast
   39590:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39594:	ldr	x1, [x1, #3568]
   39598:	cmp	x0, x1
   3959c:	cset	w1, cs  // cs = hs, nlast
   395a0:	add	w1, w1, #0x7
   395a4:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   395a8:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   395ac:	ldr	x1, [x1, #3552]
   395b0:	cmp	x0, x1
   395b4:	cset	w1, cs  // cs = hs, nlast
   395b8:	add	w1, w1, #0x5
   395bc:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   395c0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   395c4:	ldr	x1, [x1, #3624]
   395c8:	cmp	x0, x1
   395cc:	b.cs	39624 <PyInit__decimal@@Base+0x1f484>  // b.hs, b.nlast
   395d0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   395d4:	ldr	x1, [x1, #3600]
   395d8:	cmp	x0, x1
   395dc:	b.cc	3960c <PyInit__decimal@@Base+0x1f46c>  // b.lo, b.ul, b.last
   395e0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   395e4:	ldr	x2, [x1, #3616]
   395e8:	mov	w1, #0xe                   	// #14
   395ec:	cmp	x0, x2
   395f0:	b.cs	394dc <PyInit__decimal@@Base+0x1f33c>  // b.hs, b.nlast
   395f4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   395f8:	ldr	x1, [x1, #3608]
   395fc:	cmp	x0, x1
   39600:	cset	w1, cs  // cs = hs, nlast
   39604:	add	w1, w1, #0xc
   39608:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   3960c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39610:	ldr	x1, [x1, #3592]
   39614:	cmp	x0, x1
   39618:	cset	w1, cs  // cs = hs, nlast
   3961c:	add	w1, w1, #0xa
   39620:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   39624:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39628:	ldr	x1, [x1, #3656]
   3962c:	cmp	x0, x1
   39630:	b.cs	39674 <PyInit__decimal@@Base+0x1f4d4>  // b.hs, b.nlast
   39634:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39638:	ldr	x1, [x1, #3640]
   3963c:	cmp	x0, x1
   39640:	b.cs	3965c <PyInit__decimal@@Base+0x1f4bc>  // b.hs, b.nlast
   39644:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39648:	ldr	x1, [x1, #3632]
   3964c:	cmp	x0, x1
   39650:	cset	w1, cs  // cs = hs, nlast
   39654:	add	w1, w1, #0xf
   39658:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   3965c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39660:	ldr	x1, [x1, #3648]
   39664:	cmp	x0, x1
   39668:	cset	w1, cs  // cs = hs, nlast
   3966c:	add	w1, w1, #0x11
   39670:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   39674:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   39678:	ldr	x1, [x1, #3664]
   3967c:	cmp	x0, x1
   39680:	cset	w1, cs  // cs = hs, nlast
   39684:	add	w1, w1, #0x13
   39688:	b	394dc <PyInit__decimal@@Base+0x1f33c>
   3968c:	mov	x2, x22
   39690:	mov	x0, x19
   39694:	bl	25338 <PyInit__decimal@@Base+0xb198>
   39698:	b	3951c <PyInit__decimal@@Base+0x1f37c>
   3969c:	mov	x2, x22
   396a0:	mov	x0, x19
   396a4:	bl	25458 <PyInit__decimal@@Base+0xb2b8>
   396a8:	b	3951c <PyInit__decimal@@Base+0x1f37c>
   396ac:	mov	x3, x0
   396b0:	sxtw	x2, w2
   396b4:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   396b8:	add	x0, x0, #0x90
   396bc:	ldr	x4, [x0, x2, lsl #3]
   396c0:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   396c4:	add	x0, x0, #0x78
   396c8:	ldr	x2, [x0, x2, lsl #3]
   396cc:	sub	x5, x4, #0x1
   396d0:	udiv	x6, x5, x3
   396d4:	cmn	w1, #0x1
   396d8:	b.eq	396f4 <PyInit__decimal@@Base+0x1f554>  // b.none
   396dc:	mov	x0, #0x1                   	// #1
   396e0:	and	x8, x4, #0x400000000
   396e4:	and	x7, x4, #0x100000000
   396e8:	cmp	x5, x3
   396ec:	b.cs	39aa8 <PyInit__decimal@@Base+0x1f908>  // b.hs, b.nlast
   396f0:	ret
   396f4:	subs	x6, x5, x6
   396f8:	b.eq	39c0c <PyInit__decimal@@Base+0x1fa6c>  // b.none
   396fc:	mov	x0, #0x1                   	// #1
   39700:	and	x8, x4, #0x400000000
   39704:	and	x7, x4, #0x100000000
   39708:	b	39828 <PyInit__decimal@@Base+0x1f688>
   3970c:	lsr	x5, x3, #32
   39710:	sub	x3, x10, x3
   39714:	cmp	x10, x3
   39718:	sbc	x5, x5, xzr
   3971c:	lsl	x1, x1, #32
   39720:	adds	x1, x3, x1
   39724:	cinc	x5, x5, cs  // cs = hs, nlast
   39728:	lsr	x10, x5, #32
   3972c:	sub	x3, x1, x5
   39730:	cmp	x1, x3
   39734:	sbc	x10, x10, xzr
   39738:	lsl	x5, x5, #32
   3973c:	adds	x0, x3, x5
   39740:	cinc	x10, x10, cs  // cs = hs, nlast
   39744:	cmp	x10, #0x0
   39748:	sub	x1, x0, x4
   3974c:	ccmp	x4, x0, #0x0, eq  // eq = none
   39750:	csel	x0, x1, x0, ls  // ls = plast
   39754:	umulh	x1, x2, x2
   39758:	mul	x2, x2, x2
   3975c:	b	397d4 <PyInit__decimal@@Base+0x1f634>
   39760:	lsr	x3, x3, #24
   39764:	sub	x0, x10, x1
   39768:	cmp	x10, x0
   3976c:	sbc	x3, x3, xzr
   39770:	lsl	x1, x1, #40
   39774:	adds	x1, x0, x1
   39778:	cinc	x3, x3, cs  // cs = hs, nlast
   3977c:	lsr	x5, x3, #24
   39780:	sub	x0, x1, x3
   39784:	cmp	x1, x0
   39788:	sbc	x5, x5, xzr
   3978c:	lsl	x3, x3, #40
   39790:	adds	x3, x0, x3
   39794:	cinc	x5, x5, cs  // cs = hs, nlast
   39798:	lsr	x1, x5, #24
   3979c:	sub	x0, x3, x5
   397a0:	cmp	x3, x0
   397a4:	sbc	x1, x1, xzr
   397a8:	lsl	x5, x5, #40
   397ac:	adds	x0, x0, x5
   397b0:	cinc	x1, x1, cs  // cs = hs, nlast
   397b4:	cmp	x1, #0x0
   397b8:	sub	x1, x0, x4
   397bc:	ccmp	x4, x0, #0x0, eq  // eq = none
   397c0:	csel	x0, x1, x0, ls  // ls = plast
   397c4:	b	398a8 <PyInit__decimal@@Base+0x1f708>
   397c8:	umulh	x1, x2, x2
   397cc:	mul	x2, x2, x2
   397d0:	cbz	x7, 398b0 <PyInit__decimal@@Base+0x1f710>
   397d4:	lsr	x3, x1, #32
   397d8:	sub	x5, x2, x1
   397dc:	cmp	x5, x2
   397e0:	cset	x2, hi  // hi = pmore
   397e4:	sub	x3, x3, x2
   397e8:	lsl	x1, x1, #32
   397ec:	adds	x1, x5, x1
   397f0:	cinc	x3, x3, cs  // cs = hs, nlast
   397f4:	lsr	x5, x3, #32
   397f8:	sub	x2, x1, x3
   397fc:	cmp	x1, x2
   39800:	sbc	x5, x5, xzr
   39804:	lsl	x3, x3, #32
   39808:	adds	x2, x2, x3
   3980c:	cinc	x5, x5, cs  // cs = hs, nlast
   39810:	cmp	x5, #0x0
   39814:	sub	x1, x2, x4
   39818:	ccmp	x4, x2, #0x0, eq  // eq = none
   3981c:	csel	x2, x1, x2, ls  // ls = plast
   39820:	lsr	x6, x6, #1
   39824:	cbz	x6, 396f0 <PyInit__decimal@@Base+0x1f550>
   39828:	tbz	w6, #0, 397c8 <PyInit__decimal@@Base+0x1f628>
   3982c:	mov	x9, x2
   39830:	mul	x10, x0, x2
   39834:	umulh	x3, x0, x2
   39838:	mov	x1, x3
   3983c:	cbnz	x7, 3970c <PyInit__decimal@@Base+0x1f56c>
   39840:	cbz	x8, 39760 <PyInit__decimal@@Base+0x1f5c0>
   39844:	lsr	x3, x3, #30
   39848:	sub	x0, x10, x1
   3984c:	cmp	x10, x0
   39850:	sbc	x3, x3, xzr
   39854:	lsl	x1, x1, #34
   39858:	adds	x1, x0, x1
   3985c:	cinc	x3, x3, cs  // cs = hs, nlast
   39860:	lsr	x5, x3, #30
   39864:	sub	x0, x1, x3
   39868:	cmp	x1, x0
   3986c:	sbc	x5, x5, xzr
   39870:	lsl	x3, x3, #34
   39874:	adds	x3, x0, x3
   39878:	cinc	x5, x5, cs  // cs = hs, nlast
   3987c:	lsr	x1, x5, #30
   39880:	sub	x0, x3, x5
   39884:	cmp	x3, x0
   39888:	sbc	x1, x1, xzr
   3988c:	lsl	x5, x5, #34
   39890:	adds	x0, x0, x5
   39894:	cinc	x1, x1, cs  // cs = hs, nlast
   39898:	cmp	x1, #0x0
   3989c:	sub	x1, x0, x4
   398a0:	ccmp	x4, x0, #0x0, eq  // eq = none
   398a4:	csel	x0, x1, x0, ls  // ls = plast
   398a8:	umulh	x1, x9, x9
   398ac:	mul	x2, x9, x9
   398b0:	cbz	x8, 39920 <PyInit__decimal@@Base+0x1f780>
   398b4:	lsr	x5, x1, #30
   398b8:	sub	x3, x2, x1
   398bc:	cmp	x3, x2
   398c0:	cset	x2, hi  // hi = pmore
   398c4:	sub	x5, x5, x2
   398c8:	lsl	x1, x1, #34
   398cc:	adds	x1, x3, x1
   398d0:	cinc	x5, x5, cs  // cs = hs, nlast
   398d4:	lsr	x3, x5, #30
   398d8:	sub	x2, x1, x5
   398dc:	cmp	x1, x2
   398e0:	sbc	x3, x3, xzr
   398e4:	lsl	x5, x5, #34
   398e8:	adds	x5, x2, x5
   398ec:	cinc	x3, x3, cs  // cs = hs, nlast
   398f0:	lsr	x1, x3, #30
   398f4:	sub	x2, x5, x3
   398f8:	cmp	x5, x2
   398fc:	sbc	x1, x1, xzr
   39900:	lsl	x3, x3, #34
   39904:	adds	x2, x2, x3
   39908:	cinc	x1, x1, cs  // cs = hs, nlast
   3990c:	cmp	x1, #0x0
   39910:	sub	x1, x2, x4
   39914:	ccmp	x4, x2, #0x0, eq  // eq = none
   39918:	csel	x2, x1, x2, ls  // ls = plast
   3991c:	b	39820 <PyInit__decimal@@Base+0x1f680>
   39920:	lsr	x5, x1, #24
   39924:	sub	x3, x2, x1
   39928:	cmp	x3, x2
   3992c:	cset	x2, hi  // hi = pmore
   39930:	sub	x5, x5, x2
   39934:	lsl	x1, x1, #40
   39938:	adds	x1, x3, x1
   3993c:	cinc	x5, x5, cs  // cs = hs, nlast
   39940:	lsr	x3, x5, #24
   39944:	sub	x2, x1, x5
   39948:	cmp	x1, x2
   3994c:	sbc	x3, x3, xzr
   39950:	lsl	x5, x5, #40
   39954:	adds	x5, x2, x5
   39958:	cinc	x3, x3, cs  // cs = hs, nlast
   3995c:	lsr	x1, x3, #24
   39960:	sub	x2, x5, x3
   39964:	cmp	x5, x2
   39968:	sbc	x1, x1, xzr
   3996c:	lsl	x3, x3, #40
   39970:	adds	x2, x2, x3
   39974:	cinc	x1, x1, cs  // cs = hs, nlast
   39978:	cmp	x1, #0x0
   3997c:	sub	x1, x2, x4
   39980:	ccmp	x4, x2, #0x0, eq  // eq = none
   39984:	csel	x2, x1, x2, ls  // ls = plast
   39988:	b	39820 <PyInit__decimal@@Base+0x1f680>
   3998c:	lsr	x9, x3, #32
   39990:	sub	x3, x10, x3
   39994:	cmp	x10, x3
   39998:	sbc	x9, x9, xzr
   3999c:	lsl	x1, x1, #32
   399a0:	adds	x1, x3, x1
   399a4:	cinc	x9, x9, cs  // cs = hs, nlast
   399a8:	lsr	x10, x9, #32
   399ac:	sub	x3, x1, x9
   399b0:	cmp	x1, x3
   399b4:	sbc	x10, x10, xzr
   399b8:	lsl	x9, x9, #32
   399bc:	adds	x0, x3, x9
   399c0:	cinc	x10, x10, cs  // cs = hs, nlast
   399c4:	cmp	x10, #0x0
   399c8:	sub	x1, x0, x4
   399cc:	ccmp	x4, x0, #0x0, eq  // eq = none
   399d0:	csel	x0, x1, x0, ls  // ls = plast
   399d4:	umulh	x1, x2, x2
   399d8:	mul	x2, x2, x2
   399dc:	b	39a54 <PyInit__decimal@@Base+0x1f8b4>
   399e0:	lsr	x0, x3, #24
   399e4:	sub	x2, x10, x3
   399e8:	cmp	x10, x2
   399ec:	sbc	x0, x0, xzr
   399f0:	lsl	x1, x3, #40
   399f4:	adds	x1, x2, x1
   399f8:	cinc	x0, x0, cs  // cs = hs, nlast
   399fc:	lsr	x9, x0, #24
   39a00:	sub	x2, x1, x0
   39a04:	cmp	x1, x2
   39a08:	sbc	x9, x9, xzr
   39a0c:	lsl	x0, x0, #40
   39a10:	adds	x0, x2, x0
   39a14:	cinc	x9, x9, cs  // cs = hs, nlast
   39a18:	lsr	x10, x9, #24
   39a1c:	sub	x3, x0, x9
   39a20:	cmp	x0, x3
   39a24:	sbc	x10, x10, xzr
   39a28:	lsl	x9, x9, #40
   39a2c:	adds	x0, x3, x9
   39a30:	cinc	x10, x10, cs  // cs = hs, nlast
   39a34:	cmp	x10, #0x0
   39a38:	sub	x1, x0, x4
   39a3c:	ccmp	x4, x0, #0x0, eq  // eq = none
   39a40:	csel	x0, x1, x0, ls  // ls = plast
   39a44:	b	39b28 <PyInit__decimal@@Base+0x1f988>
   39a48:	umulh	x1, x2, x2
   39a4c:	mul	x2, x2, x2
   39a50:	cbz	x7, 39b30 <PyInit__decimal@@Base+0x1f990>
   39a54:	lsr	x3, x1, #32
   39a58:	sub	x5, x2, x1
   39a5c:	cmp	x5, x2
   39a60:	cset	x2, hi  // hi = pmore
   39a64:	sub	x3, x3, x2
   39a68:	lsl	x1, x1, #32
   39a6c:	adds	x1, x5, x1
   39a70:	cinc	x3, x3, cs  // cs = hs, nlast
   39a74:	lsr	x5, x3, #32
   39a78:	sub	x2, x1, x3
   39a7c:	cmp	x1, x2
   39a80:	sbc	x5, x5, xzr
   39a84:	lsl	x3, x3, #32
   39a88:	adds	x2, x2, x3
   39a8c:	cinc	x5, x5, cs  // cs = hs, nlast
   39a90:	cmp	x5, #0x0
   39a94:	sub	x1, x2, x4
   39a98:	ccmp	x4, x2, #0x0, eq  // eq = none
   39a9c:	csel	x2, x1, x2, ls  // ls = plast
   39aa0:	lsr	x6, x6, #1
   39aa4:	cbz	x6, 396f0 <PyInit__decimal@@Base+0x1f550>
   39aa8:	tbz	w6, #0, 39a48 <PyInit__decimal@@Base+0x1f8a8>
   39aac:	mov	x5, x2
   39ab0:	mul	x10, x0, x2
   39ab4:	umulh	x3, x0, x2
   39ab8:	mov	x1, x3
   39abc:	cbnz	x7, 3998c <PyInit__decimal@@Base+0x1f7ec>
   39ac0:	cbz	x8, 399e0 <PyInit__decimal@@Base+0x1f840>
   39ac4:	lsr	x0, x3, #30
   39ac8:	sub	x2, x10, x3
   39acc:	cmp	x10, x2
   39ad0:	sbc	x0, x0, xzr
   39ad4:	lsl	x1, x3, #34
   39ad8:	adds	x1, x2, x1
   39adc:	cinc	x0, x0, cs  // cs = hs, nlast
   39ae0:	lsr	x9, x0, #30
   39ae4:	sub	x2, x1, x0
   39ae8:	cmp	x1, x2
   39aec:	sbc	x9, x9, xzr
   39af0:	lsl	x0, x0, #34
   39af4:	adds	x0, x2, x0
   39af8:	cinc	x9, x9, cs  // cs = hs, nlast
   39afc:	lsr	x10, x9, #30
   39b00:	sub	x3, x0, x9
   39b04:	cmp	x0, x3
   39b08:	sbc	x10, x10, xzr
   39b0c:	lsl	x9, x9, #34
   39b10:	adds	x0, x3, x9
   39b14:	cinc	x10, x10, cs  // cs = hs, nlast
   39b18:	cmp	x10, #0x0
   39b1c:	sub	x1, x0, x4
   39b20:	ccmp	x4, x0, #0x0, eq  // eq = none
   39b24:	csel	x0, x1, x0, ls  // ls = plast
   39b28:	umulh	x1, x5, x5
   39b2c:	mul	x2, x5, x5
   39b30:	cbz	x8, 39ba0 <PyInit__decimal@@Base+0x1fa00>
   39b34:	lsr	x5, x1, #30
   39b38:	sub	x3, x2, x1
   39b3c:	cmp	x3, x2
   39b40:	cset	x2, hi  // hi = pmore
   39b44:	sub	x5, x5, x2
   39b48:	lsl	x1, x1, #34
   39b4c:	adds	x1, x3, x1
   39b50:	cinc	x5, x5, cs  // cs = hs, nlast
   39b54:	lsr	x3, x5, #30
   39b58:	sub	x2, x1, x5
   39b5c:	cmp	x1, x2
   39b60:	sbc	x3, x3, xzr
   39b64:	lsl	x5, x5, #34
   39b68:	adds	x5, x2, x5
   39b6c:	cinc	x3, x3, cs  // cs = hs, nlast
   39b70:	lsr	x1, x3, #30
   39b74:	sub	x2, x5, x3
   39b78:	cmp	x5, x2
   39b7c:	sbc	x1, x1, xzr
   39b80:	lsl	x3, x3, #34
   39b84:	adds	x2, x2, x3
   39b88:	cinc	x1, x1, cs  // cs = hs, nlast
   39b8c:	cmp	x1, #0x0
   39b90:	sub	x1, x2, x4
   39b94:	ccmp	x4, x2, #0x0, eq  // eq = none
   39b98:	csel	x2, x1, x2, ls  // ls = plast
   39b9c:	b	39aa0 <PyInit__decimal@@Base+0x1f900>
   39ba0:	lsr	x5, x1, #24
   39ba4:	sub	x3, x2, x1
   39ba8:	cmp	x3, x2
   39bac:	cset	x2, hi  // hi = pmore
   39bb0:	sub	x5, x5, x2
   39bb4:	lsl	x1, x1, #40
   39bb8:	adds	x1, x3, x1
   39bbc:	cinc	x5, x5, cs  // cs = hs, nlast
   39bc0:	lsr	x3, x5, #24
   39bc4:	sub	x2, x1, x5
   39bc8:	cmp	x1, x2
   39bcc:	sbc	x3, x3, xzr
   39bd0:	lsl	x5, x5, #40
   39bd4:	adds	x5, x2, x5
   39bd8:	cinc	x3, x3, cs  // cs = hs, nlast
   39bdc:	lsr	x1, x3, #24
   39be0:	sub	x2, x5, x3
   39be4:	cmp	x5, x2
   39be8:	sbc	x1, x1, xzr
   39bec:	lsl	x3, x3, #40
   39bf0:	adds	x2, x2, x3
   39bf4:	cinc	x1, x1, cs  // cs = hs, nlast
   39bf8:	cmp	x1, #0x0
   39bfc:	sub	x1, x2, x4
   39c00:	ccmp	x4, x2, #0x0, eq  // eq = none
   39c04:	csel	x2, x1, x2, ls  // ls = plast
   39c08:	b	39aa0 <PyInit__decimal@@Base+0x1f900>
   39c0c:	mov	x0, #0x1                   	// #1
   39c10:	b	396f0 <PyInit__decimal@@Base+0x1f550>
   39c14:	stp	x29, x30, [sp, #-64]!
   39c18:	mov	x29, sp
   39c1c:	stp	x19, x20, [sp, #16]
   39c20:	stp	x21, x22, [sp, #32]
   39c24:	stp	x23, x24, [sp, #48]
   39c28:	mov	x22, x0
   39c2c:	mov	w24, w1
   39c30:	mov	w23, w2
   39c34:	lsr	x20, x0, #1
   39c38:	mov	x2, #0x8                   	// #8
   39c3c:	mov	x1, x20
   39c40:	mov	x0, #0x18                  	// #24
   39c44:	bl	25208 <PyInit__decimal@@Base+0xb068>
   39c48:	mov	x21, x0
   39c4c:	cbz	x0, 39dd4 <PyInit__decimal@@Base+0x1fc34>
   39c50:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   39c54:	add	x0, x0, #0x90
   39c58:	ldr	x19, [x0, w23, sxtw #3]
   39c5c:	mov	w2, w23
   39c60:	mov	w1, w24
   39c64:	mov	x0, x22
   39c68:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   39c6c:	str	w23, [x21]
   39c70:	str	x19, [x21, #8]
   39c74:	str	x0, [x21, #16]
   39c78:	cmp	x22, #0x1
   39c7c:	b.ls	39dd4 <PyInit__decimal@@Base+0x1fc34>  // b.plast
   39c80:	mov	x3, #0x0                   	// #0
   39c84:	mov	x1, #0x1                   	// #1
   39c88:	add	x7, x21, #0x18
   39c8c:	and	x6, x19, #0x100000000
   39c90:	and	x8, x19, #0x400000000
   39c94:	b	39cec <PyInit__decimal@@Base+0x1fb4c>
   39c98:	lsr	x4, x1, #32
   39c9c:	sub	x1, x5, x1
   39ca0:	cmp	x5, x1
   39ca4:	sbc	x4, x4, xzr
   39ca8:	lsl	x2, x2, #32
   39cac:	adds	x1, x1, x2
   39cb0:	cinc	x4, x4, cs  // cs = hs, nlast
   39cb4:	lsr	x2, x4, #32
   39cb8:	sub	x5, x1, x4
   39cbc:	cmp	x1, x5
   39cc0:	sbc	x2, x2, xzr
   39cc4:	lsl	x1, x4, #32
   39cc8:	adds	x1, x5, x1
   39ccc:	cinc	x2, x2, cs  // cs = hs, nlast
   39cd0:	cmp	x2, #0x0
   39cd4:	sub	x2, x1, x19
   39cd8:	ccmp	x19, x1, #0x0, eq  // eq = none
   39cdc:	csel	x1, x2, x1, ls  // ls = plast
   39ce0:	add	x3, x3, #0x1
   39ce4:	cmp	x20, x3
   39ce8:	b.ls	39dd4 <PyInit__decimal@@Base+0x1fc34>  // b.plast
   39cec:	str	x1, [x7, x3, lsl #3]
   39cf0:	mul	x5, x1, x0
   39cf4:	umulh	x1, x1, x0
   39cf8:	mov	x2, x1
   39cfc:	cbnz	x6, 39c98 <PyInit__decimal@@Base+0x1faf8>
   39d00:	cbz	x8, 39d6c <PyInit__decimal@@Base+0x1fbcc>
   39d04:	lsr	x1, x1, #30
   39d08:	sub	x4, x5, x2
   39d0c:	cmp	x5, x4
   39d10:	sbc	x1, x1, xzr
   39d14:	lsl	x2, x2, #34
   39d18:	adds	x2, x4, x2
   39d1c:	cinc	x1, x1, cs  // cs = hs, nlast
   39d20:	lsr	x4, x1, #30
   39d24:	sub	x5, x2, x1
   39d28:	cmp	x2, x5
   39d2c:	sbc	x4, x4, xzr
   39d30:	lsl	x1, x1, #34
   39d34:	adds	x5, x5, x1
   39d38:	cinc	x4, x4, cs  // cs = hs, nlast
   39d3c:	lsr	x2, x4, #30
   39d40:	sub	x1, x5, x4
   39d44:	cmp	x5, x1
   39d48:	sbc	x2, x2, xzr
   39d4c:	lsl	x4, x4, #34
   39d50:	adds	x1, x1, x4
   39d54:	cinc	x2, x2, cs  // cs = hs, nlast
   39d58:	cmp	x2, #0x0
   39d5c:	sub	x2, x1, x19
   39d60:	ccmp	x19, x1, #0x0, eq  // eq = none
   39d64:	csel	x1, x2, x1, ls  // ls = plast
   39d68:	b	39ce0 <PyInit__decimal@@Base+0x1fb40>
   39d6c:	lsr	x1, x1, #24
   39d70:	sub	x4, x5, x2
   39d74:	cmp	x5, x4
   39d78:	sbc	x1, x1, xzr
   39d7c:	lsl	x2, x2, #40
   39d80:	adds	x2, x4, x2
   39d84:	cinc	x1, x1, cs  // cs = hs, nlast
   39d88:	lsr	x4, x1, #24
   39d8c:	sub	x5, x2, x1
   39d90:	cmp	x2, x5
   39d94:	sbc	x4, x4, xzr
   39d98:	lsl	x1, x1, #40
   39d9c:	adds	x5, x5, x1
   39da0:	cinc	x4, x4, cs  // cs = hs, nlast
   39da4:	lsr	x2, x4, #24
   39da8:	sub	x1, x5, x4
   39dac:	cmp	x5, x1
   39db0:	sbc	x2, x2, xzr
   39db4:	lsl	x4, x4, #40
   39db8:	adds	x1, x1, x4
   39dbc:	cinc	x2, x2, cs  // cs = hs, nlast
   39dc0:	cmp	x2, #0x0
   39dc4:	sub	x2, x1, x19
   39dc8:	ccmp	x19, x1, #0x0, eq  // eq = none
   39dcc:	csel	x1, x2, x1, ls  // ls = plast
   39dd0:	b	39ce0 <PyInit__decimal@@Base+0x1fb40>
   39dd4:	mov	x0, x21
   39dd8:	ldp	x19, x20, [sp, #16]
   39ddc:	ldp	x21, x22, [sp, #32]
   39de0:	ldp	x23, x24, [sp, #48]
   39de4:	ldp	x29, x30, [sp], #64
   39de8:	ret
   39dec:	stp	x29, x30, [sp, #-32]!
   39df0:	mov	x29, sp
   39df4:	stp	x19, x20, [sp, #16]
   39df8:	mov	x20, x0
   39dfc:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   39e00:	add	x0, x0, #0x90
   39e04:	ldr	x19, [x0, w2, sxtw #3]
   39e08:	mov	x0, #0x3                   	// #3
   39e0c:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   39e10:	mov	x1, #0x1                   	// #1
   39e14:	str	x1, [x20]
   39e18:	str	x0, [x20, #8]
   39e1c:	mov	w4, #0x2                   	// #2
   39e20:	mov	x2, x1
   39e24:	mov	x1, #0x2                   	// #2
   39e28:	and	x6, x19, #0x400000000
   39e2c:	and	x5, x19, #0x100000000
   39e30:	mov	x7, x2
   39e34:	b	39f58 <PyInit__decimal@@Base+0x1fdb8>
   39e38:	lsr	x8, x1, #32
   39e3c:	sub	x1, x9, x1
   39e40:	cmp	x9, x1
   39e44:	sbc	x8, x8, xzr
   39e48:	lsl	x0, x0, #32
   39e4c:	adds	x1, x1, x0
   39e50:	cinc	x8, x8, cs  // cs = hs, nlast
   39e54:	lsr	x9, x8, #32
   39e58:	sub	x2, x1, x8
   39e5c:	cmp	x1, x2
   39e60:	sbc	x9, x9, xzr
   39e64:	lsl	x8, x8, #32
   39e68:	adds	x2, x2, x8
   39e6c:	cinc	x9, x9, cs  // cs = hs, nlast
   39e70:	cmp	x9, #0x0
   39e74:	sub	x0, x2, x19
   39e78:	ccmp	x19, x2, #0x0, eq  // eq = none
   39e7c:	csel	x2, x0, x2, ls  // ls = plast
   39e80:	umulh	x1, x3, x3
   39e84:	mul	x0, x3, x3
   39e88:	b	39f00 <PyInit__decimal@@Base+0x1fd60>
   39e8c:	lsr	x2, x1, #24
   39e90:	sub	x1, x9, x1
   39e94:	cmp	x9, x1
   39e98:	sbc	x2, x2, xzr
   39e9c:	lsl	x0, x0, #40
   39ea0:	adds	x0, x1, x0
   39ea4:	cinc	x2, x2, cs  // cs = hs, nlast
   39ea8:	lsr	x8, x2, #24
   39eac:	sub	x9, x0, x2
   39eb0:	cmp	x0, x9
   39eb4:	sbc	x8, x8, xzr
   39eb8:	lsl	x2, x2, #40
   39ebc:	adds	x2, x9, x2
   39ec0:	cinc	x8, x8, cs  // cs = hs, nlast
   39ec4:	lsr	x9, x8, #24
   39ec8:	sub	x1, x2, x8
   39ecc:	cmp	x2, x1
   39ed0:	sbc	x9, x9, xzr
   39ed4:	lsl	x8, x8, #40
   39ed8:	adds	x2, x1, x8
   39edc:	cinc	x9, x9, cs  // cs = hs, nlast
   39ee0:	cmp	x9, #0x0
   39ee4:	sub	x0, x2, x19
   39ee8:	ccmp	x19, x2, #0x0, eq  // eq = none
   39eec:	csel	x2, x0, x2, ls  // ls = plast
   39ef0:	b	39fd8 <PyInit__decimal@@Base+0x1fe38>
   39ef4:	umulh	x1, x0, x0
   39ef8:	mul	x0, x0, x0
   39efc:	cbz	x5, 39fe0 <PyInit__decimal@@Base+0x1fe40>
   39f00:	lsr	x3, x1, #32
   39f04:	sub	x8, x0, x1
   39f08:	cmp	x8, x0
   39f0c:	cset	x0, hi  // hi = pmore
   39f10:	sub	x3, x3, x0
   39f14:	lsl	x1, x1, #32
   39f18:	adds	x8, x8, x1
   39f1c:	cinc	x3, x3, cs  // cs = hs, nlast
   39f20:	lsr	x9, x3, #32
   39f24:	sub	x1, x8, x3
   39f28:	cmp	x8, x1
   39f2c:	sbc	x9, x9, xzr
   39f30:	lsl	x0, x3, #32
   39f34:	adds	x0, x1, x0
   39f38:	cinc	x9, x9, cs  // cs = hs, nlast
   39f3c:	cmp	x9, #0x0
   39f40:	sub	x1, x0, x19
   39f44:	ccmp	x19, x0, #0x0, eq  // eq = none
   39f48:	csel	x0, x1, x0, ls  // ls = plast
   39f4c:	mov	x1, x7
   39f50:	subs	w4, w4, #0x1
   39f54:	b.eq	3a0bc <PyInit__decimal@@Base+0x1ff1c>  // b.none
   39f58:	tbz	w1, #0, 39ef4 <PyInit__decimal@@Base+0x1fd54>
   39f5c:	mov	x3, x0
   39f60:	mul	x9, x2, x0
   39f64:	umulh	x1, x2, x0
   39f68:	mov	x0, x1
   39f6c:	cbnz	x5, 39e38 <PyInit__decimal@@Base+0x1fc98>
   39f70:	cbz	x6, 39e8c <PyInit__decimal@@Base+0x1fcec>
   39f74:	lsr	x2, x1, #30
   39f78:	sub	x1, x9, x1
   39f7c:	cmp	x9, x1
   39f80:	sbc	x2, x2, xzr
   39f84:	lsl	x0, x0, #34
   39f88:	adds	x0, x1, x0
   39f8c:	cinc	x2, x2, cs  // cs = hs, nlast
   39f90:	lsr	x8, x2, #30
   39f94:	sub	x9, x0, x2
   39f98:	cmp	x0, x9
   39f9c:	sbc	x8, x8, xzr
   39fa0:	lsl	x2, x2, #34
   39fa4:	adds	x2, x9, x2
   39fa8:	cinc	x8, x8, cs  // cs = hs, nlast
   39fac:	lsr	x9, x8, #30
   39fb0:	sub	x1, x2, x8
   39fb4:	cmp	x2, x1
   39fb8:	sbc	x9, x9, xzr
   39fbc:	lsl	x8, x8, #34
   39fc0:	adds	x2, x1, x8
   39fc4:	cinc	x9, x9, cs  // cs = hs, nlast
   39fc8:	cmp	x9, #0x0
   39fcc:	sub	x0, x2, x19
   39fd0:	ccmp	x19, x2, #0x0, eq  // eq = none
   39fd4:	csel	x2, x0, x2, ls  // ls = plast
   39fd8:	umulh	x1, x3, x3
   39fdc:	mul	x0, x3, x3
   39fe0:	cbz	x6, 3a050 <PyInit__decimal@@Base+0x1feb0>
   39fe4:	lsr	x3, x1, #30
   39fe8:	sub	x8, x0, x1
   39fec:	cmp	x8, x0
   39ff0:	cset	x0, hi  // hi = pmore
   39ff4:	sub	x3, x3, x0
   39ff8:	lsl	x1, x1, #34
   39ffc:	adds	x1, x8, x1
   3a000:	cinc	x3, x3, cs  // cs = hs, nlast
   3a004:	lsr	x0, x3, #30
   3a008:	sub	x8, x1, x3
   3a00c:	cmp	x1, x8
   3a010:	sbc	x0, x0, xzr
   3a014:	lsl	x3, x3, #34
   3a018:	adds	x3, x8, x3
   3a01c:	cinc	x0, x0, cs  // cs = hs, nlast
   3a020:	lsr	x8, x0, #30
   3a024:	sub	x1, x3, x0
   3a028:	cmp	x3, x1
   3a02c:	sbc	x8, x8, xzr
   3a030:	lsl	x0, x0, #34
   3a034:	adds	x0, x1, x0
   3a038:	cinc	x8, x8, cs  // cs = hs, nlast
   3a03c:	cmp	x8, #0x0
   3a040:	sub	x1, x0, x19
   3a044:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a048:	csel	x0, x1, x0, ls  // ls = plast
   3a04c:	b	39f4c <PyInit__decimal@@Base+0x1fdac>
   3a050:	lsr	x3, x1, #24
   3a054:	sub	x8, x0, x1
   3a058:	cmp	x8, x0
   3a05c:	cset	x0, hi  // hi = pmore
   3a060:	sub	x3, x3, x0
   3a064:	lsl	x1, x1, #40
   3a068:	adds	x1, x8, x1
   3a06c:	cinc	x3, x3, cs  // cs = hs, nlast
   3a070:	lsr	x0, x3, #24
   3a074:	sub	x8, x1, x3
   3a078:	cmp	x1, x8
   3a07c:	sbc	x0, x0, xzr
   3a080:	lsl	x3, x3, #40
   3a084:	adds	x3, x8, x3
   3a088:	cinc	x0, x0, cs  // cs = hs, nlast
   3a08c:	lsr	x8, x0, #24
   3a090:	sub	x1, x3, x0
   3a094:	cmp	x3, x1
   3a098:	sbc	x8, x8, xzr
   3a09c:	lsl	x0, x0, #40
   3a0a0:	adds	x0, x1, x0
   3a0a4:	cinc	x8, x8, cs  // cs = hs, nlast
   3a0a8:	cmp	x8, #0x0
   3a0ac:	sub	x1, x0, x19
   3a0b0:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a0b4:	csel	x0, x1, x0, ls  // ls = plast
   3a0b8:	b	39f4c <PyInit__decimal@@Base+0x1fdac>
   3a0bc:	str	x2, [x20, #16]
   3a0c0:	ldp	x19, x20, [sp, #16]
   3a0c4:	ldp	x29, x30, [sp], #32
   3a0c8:	ret
   3a0cc:	stp	x29, x30, [sp, #-112]!
   3a0d0:	mov	x29, sp
   3a0d4:	stp	x19, x20, [sp, #16]
   3a0d8:	stp	x21, x22, [sp, #32]
   3a0dc:	stp	x23, x24, [sp, #48]
   3a0e0:	stp	x25, x26, [sp, #64]
   3a0e4:	stp	x27, x28, [sp, #80]
   3a0e8:	mov	x20, x0
   3a0ec:	mov	x24, x1
   3a0f0:	str	w2, [sp, #108]
   3a0f4:	cmp	xzr, x1, lsr #32
   3a0f8:	b.eq	3a1c4 <PyInit__decimal@@Base+0x20024>  // b.none
   3a0fc:	lsr	x0, x1, #32
   3a100:	mov	w1, #0x20                  	// #32
   3a104:	lsr	x2, x0, #16
   3a108:	cmp	xzr, x0, lsr #16
   3a10c:	b.eq	3a118 <PyInit__decimal@@Base+0x1ff78>  // b.none
   3a110:	add	w1, w1, #0x10
   3a114:	mov	x0, x2
   3a118:	lsr	x2, x0, #8
   3a11c:	cmp	xzr, x0, lsr #8
   3a120:	b.eq	3a12c <PyInit__decimal@@Base+0x1ff8c>  // b.none
   3a124:	add	w1, w1, #0x8
   3a128:	mov	x0, x2
   3a12c:	lsr	x2, x0, #4
   3a130:	cmp	xzr, x0, lsr #4
   3a134:	b.eq	3a140 <PyInit__decimal@@Base+0x1ffa0>  // b.none
   3a138:	add	w1, w1, #0x4
   3a13c:	mov	x0, x2
   3a140:	lsr	x2, x0, #2
   3a144:	cmp	xzr, x0, lsr #2
   3a148:	b.eq	3a154 <PyInit__decimal@@Base+0x1ffb4>  // b.none
   3a14c:	add	w1, w1, #0x2
   3a150:	mov	x0, x2
   3a154:	lsr	x2, x0, #1
   3a158:	cmp	xzr, x0, lsr #1
   3a15c:	b.eq	3a168 <PyInit__decimal@@Base+0x1ffc8>  // b.none
   3a160:	add	w1, w1, #0x1
   3a164:	mov	x0, x2
   3a168:	sub	w19, w1, #0x1
   3a16c:	add	w19, w19, w0
   3a170:	sxtw	x23, w19
   3a174:	lsr	x23, x23, #1
   3a178:	mov	w27, w23
   3a17c:	mov	x21, #0x1                   	// #1
   3a180:	lsl	x25, x21, x23
   3a184:	sub	w19, w19, w23
   3a188:	lsl	x21, x21, x19
   3a18c:	mov	x2, x25
   3a190:	mov	x1, x21
   3a194:	mov	x0, x20
   3a198:	bl	3be24 <PyInit__decimal@@Base+0x21c84>
   3a19c:	mov	w28, w0
   3a1a0:	cbnz	w0, 3a1d0 <PyInit__decimal@@Base+0x20030>
   3a1a4:	mov	w0, w28
   3a1a8:	ldp	x19, x20, [sp, #16]
   3a1ac:	ldp	x21, x22, [sp, #32]
   3a1b0:	ldp	x23, x24, [sp, #48]
   3a1b4:	ldp	x25, x26, [sp, #64]
   3a1b8:	ldp	x27, x28, [sp, #80]
   3a1bc:	ldp	x29, x30, [sp], #112
   3a1c0:	ret
   3a1c4:	mov	x0, x1
   3a1c8:	mov	w1, #0x0                   	// #0
   3a1cc:	b	3a104 <PyInit__decimal@@Base+0x1ff64>
   3a1d0:	ldr	w2, [sp, #108]
   3a1d4:	mov	w1, #0xffffffff            	// #-1
   3a1d8:	mov	x0, x21
   3a1dc:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   3a1e0:	mov	x22, x0
   3a1e4:	cbz	x0, 3ac24 <PyInit__decimal@@Base+0x20a84>
   3a1e8:	add	x26, x20, x24, lsl #3
   3a1ec:	cmp	x20, x26
   3a1f0:	b.cs	3a21c <PyInit__decimal@@Base+0x2007c>  // b.hs, b.nlast
   3a1f4:	mov	x28, #0x8                   	// #8
   3a1f8:	lsl	x28, x28, x19
   3a1fc:	mov	x19, x20
   3a200:	mov	x2, x22
   3a204:	mov	x1, x21
   3a208:	mov	x0, x19
   3a20c:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   3a210:	add	x19, x19, x28
   3a214:	cmp	x26, x19
   3a218:	b.hi	3a200 <PyInit__decimal@@Base+0x20060>  // b.pmore
   3a21c:	mov	x2, x21
   3a220:	mov	x1, x25
   3a224:	mov	x0, x20
   3a228:	bl	3be24 <PyInit__decimal@@Base+0x21c84>
   3a22c:	mov	w28, w0
   3a230:	cbnz	w0, 3a248 <PyInit__decimal@@Base+0x200a8>
   3a234:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3a238:	ldr	x1, [x0, #1704]
   3a23c:	mov	x0, x22
   3a240:	blr	x1
   3a244:	b	3a1a4 <PyInit__decimal@@Base+0x20004>
   3a248:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3a24c:	add	x0, x0, #0x90
   3a250:	ldr	w2, [sp, #108]
   3a254:	ldr	x19, [x0, w2, sxtw #3]
   3a258:	mov	w1, #0xffffffff            	// #-1
   3a25c:	mov	x0, x24
   3a260:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   3a264:	cmp	x21, #0x1
   3a268:	b.ls	3abb0 <PyInit__decimal@@Base+0x20a10>  // b.plast
   3a26c:	sub	x10, x25, #0x1
   3a270:	and	x10, x10, #0xfffffffffffffffe
   3a274:	mov	x7, #0x1                   	// #1
   3a278:	mov	x9, x0
   3a27c:	mov	x8, x7
   3a280:	and	x5, x19, #0x400000000
   3a284:	and	x6, x19, #0x100000000
   3a288:	mov	x12, x7
   3a28c:	add	x11, x20, #0x10
   3a290:	b	3ab1c <PyInit__decimal@@Base+0x2097c>
   3a294:	lsr	x1, x0, #32
   3a298:	sub	x0, x13, x0
   3a29c:	cmp	x13, x0
   3a2a0:	sbc	x1, x1, xzr
   3a2a4:	lsl	x2, x2, #32
   3a2a8:	adds	x0, x0, x2
   3a2ac:	cinc	x1, x1, cs  // cs = hs, nlast
   3a2b0:	lsr	x2, x1, #32
   3a2b4:	sub	x13, x0, x1
   3a2b8:	cmp	x0, x13
   3a2bc:	sbc	x2, x2, xzr
   3a2c0:	lsl	x1, x1, #32
   3a2c4:	adds	x0, x13, x1
   3a2c8:	cinc	x2, x2, cs  // cs = hs, nlast
   3a2cc:	cmp	x2, #0x0
   3a2d0:	sub	x1, x0, x19
   3a2d4:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a2d8:	csel	x0, x1, x0, ls  // ls = plast
   3a2dc:	umulh	x2, x4, x4
   3a2e0:	mul	x1, x4, x4
   3a2e4:	b	3a35c <PyInit__decimal@@Base+0x201bc>
   3a2e8:	lsr	x0, x0, #24
   3a2ec:	sub	x1, x13, x2
   3a2f0:	cmp	x13, x1
   3a2f4:	sbc	x0, x0, xzr
   3a2f8:	lsl	x2, x2, #40
   3a2fc:	adds	x2, x1, x2
   3a300:	cinc	x0, x0, cs  // cs = hs, nlast
   3a304:	lsr	x1, x0, #24
   3a308:	sub	x13, x2, x0
   3a30c:	cmp	x2, x13
   3a310:	sbc	x1, x1, xzr
   3a314:	lsl	x0, x0, #40
   3a318:	adds	x0, x13, x0
   3a31c:	cinc	x1, x1, cs  // cs = hs, nlast
   3a320:	lsr	x2, x1, #24
   3a324:	sub	x13, x0, x1
   3a328:	cmp	x0, x13
   3a32c:	sbc	x2, x2, xzr
   3a330:	lsl	x1, x1, #40
   3a334:	adds	x0, x13, x1
   3a338:	cinc	x2, x2, cs  // cs = hs, nlast
   3a33c:	cmp	x2, #0x0
   3a340:	sub	x1, x0, x19
   3a344:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a348:	csel	x0, x1, x0, ls  // ls = plast
   3a34c:	b	3a430 <PyInit__decimal@@Base+0x20290>
   3a350:	umulh	x2, x1, x1
   3a354:	mul	x1, x1, x1
   3a358:	cbz	x6, 3a438 <PyInit__decimal@@Base+0x20298>
   3a35c:	lsr	x4, x2, #32
   3a360:	sub	x13, x1, x2
   3a364:	cmp	x13, x1
   3a368:	cset	x1, hi  // hi = pmore
   3a36c:	sub	x4, x4, x1
   3a370:	lsl	x2, x2, #32
   3a374:	adds	x13, x13, x2
   3a378:	cinc	x4, x4, cs  // cs = hs, nlast
   3a37c:	lsr	x2, x4, #32
   3a380:	sub	x1, x13, x4
   3a384:	cmp	x13, x1
   3a388:	sbc	x2, x2, xzr
   3a38c:	lsl	x4, x4, #32
   3a390:	adds	x1, x1, x4
   3a394:	cinc	x2, x2, cs  // cs = hs, nlast
   3a398:	cmp	x2, #0x0
   3a39c:	sub	x2, x1, x19
   3a3a0:	ccmp	x19, x1, #0x0, eq  // eq = none
   3a3a4:	csel	x1, x2, x1, ls  // ls = plast
   3a3a8:	lsr	x3, x3, #1
   3a3ac:	cbz	x3, 3a514 <PyInit__decimal@@Base+0x20374>
   3a3b0:	tbz	w3, #0, 3a350 <PyInit__decimal@@Base+0x201b0>
   3a3b4:	mov	x4, x1
   3a3b8:	mul	x13, x0, x1
   3a3bc:	umulh	x0, x0, x1
   3a3c0:	mov	x2, x0
   3a3c4:	cbnz	x6, 3a294 <PyInit__decimal@@Base+0x200f4>
   3a3c8:	cbz	x5, 3a2e8 <PyInit__decimal@@Base+0x20148>
   3a3cc:	lsr	x0, x0, #30
   3a3d0:	sub	x1, x13, x2
   3a3d4:	cmp	x13, x1
   3a3d8:	sbc	x0, x0, xzr
   3a3dc:	lsl	x2, x2, #34
   3a3e0:	adds	x2, x1, x2
   3a3e4:	cinc	x0, x0, cs  // cs = hs, nlast
   3a3e8:	lsr	x1, x0, #30
   3a3ec:	sub	x13, x2, x0
   3a3f0:	cmp	x2, x13
   3a3f4:	sbc	x1, x1, xzr
   3a3f8:	lsl	x0, x0, #34
   3a3fc:	adds	x0, x13, x0
   3a400:	cinc	x1, x1, cs  // cs = hs, nlast
   3a404:	lsr	x2, x1, #30
   3a408:	sub	x13, x0, x1
   3a40c:	cmp	x0, x13
   3a410:	sbc	x2, x2, xzr
   3a414:	lsl	x1, x1, #34
   3a418:	adds	x0, x13, x1
   3a41c:	cinc	x2, x2, cs  // cs = hs, nlast
   3a420:	cmp	x2, #0x0
   3a424:	sub	x1, x0, x19
   3a428:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a42c:	csel	x0, x1, x0, ls  // ls = plast
   3a430:	umulh	x2, x4, x4
   3a434:	mul	x1, x4, x4
   3a438:	cbz	x5, 3a4a8 <PyInit__decimal@@Base+0x20308>
   3a43c:	lsr	x13, x2, #30
   3a440:	sub	x4, x1, x2
   3a444:	cmp	x4, x1
   3a448:	cset	x1, hi  // hi = pmore
   3a44c:	sub	x13, x13, x1
   3a450:	lsl	x2, x2, #34
   3a454:	adds	x2, x4, x2
   3a458:	cinc	x13, x13, cs  // cs = hs, nlast
   3a45c:	lsr	x4, x13, #30
   3a460:	sub	x1, x2, x13
   3a464:	cmp	x2, x1
   3a468:	sbc	x4, x4, xzr
   3a46c:	lsl	x13, x13, #34
   3a470:	adds	x13, x1, x13
   3a474:	cinc	x4, x4, cs  // cs = hs, nlast
   3a478:	lsr	x2, x4, #30
   3a47c:	sub	x1, x13, x4
   3a480:	cmp	x13, x1
   3a484:	sbc	x2, x2, xzr
   3a488:	lsl	x4, x4, #34
   3a48c:	adds	x1, x1, x4
   3a490:	cinc	x2, x2, cs  // cs = hs, nlast
   3a494:	cmp	x2, #0x0
   3a498:	sub	x2, x1, x19
   3a49c:	ccmp	x19, x1, #0x0, eq  // eq = none
   3a4a0:	csel	x1, x2, x1, ls  // ls = plast
   3a4a4:	b	3a3a8 <PyInit__decimal@@Base+0x20208>
   3a4a8:	lsr	x13, x2, #24
   3a4ac:	sub	x4, x1, x2
   3a4b0:	cmp	x4, x1
   3a4b4:	cset	x1, hi  // hi = pmore
   3a4b8:	sub	x13, x13, x1
   3a4bc:	lsl	x2, x2, #40
   3a4c0:	adds	x2, x4, x2
   3a4c4:	cinc	x13, x13, cs  // cs = hs, nlast
   3a4c8:	lsr	x4, x13, #24
   3a4cc:	sub	x1, x2, x13
   3a4d0:	cmp	x2, x1
   3a4d4:	sbc	x4, x4, xzr
   3a4d8:	lsl	x13, x13, #40
   3a4dc:	adds	x13, x1, x13
   3a4e0:	cinc	x4, x4, cs  // cs = hs, nlast
   3a4e4:	lsr	x2, x4, #24
   3a4e8:	sub	x1, x13, x4
   3a4ec:	cmp	x13, x1
   3a4f0:	sbc	x2, x2, xzr
   3a4f4:	lsl	x4, x4, #40
   3a4f8:	adds	x1, x1, x4
   3a4fc:	cinc	x2, x2, cs  // cs = hs, nlast
   3a500:	cmp	x2, #0x0
   3a504:	sub	x2, x1, x19
   3a508:	ccmp	x19, x1, #0x0, eq  // eq = none
   3a50c:	csel	x1, x2, x1, ls  // ls = plast
   3a510:	b	3a3a8 <PyInit__decimal@@Base+0x20208>
   3a514:	mul	x4, x0, x0
   3a518:	umulh	x2, x0, x0
   3a51c:	mov	x1, x2
   3a520:	mov	x13, x4
   3a524:	and	x17, x19, #0x100000000
   3a528:	tbnz	x19, #32, 3a59c <PyInit__decimal@@Base+0x203fc>
   3a52c:	cbz	x5, 3ab40 <PyInit__decimal@@Base+0x209a0>
   3a530:	lsr	x17, x2, #30
   3a534:	sub	x2, x4, x2
   3a538:	cmp	x4, x2
   3a53c:	sbc	x17, x17, xzr
   3a540:	lsl	x1, x1, #34
   3a544:	adds	x1, x1, x2
   3a548:	cinc	x17, x17, cs  // cs = hs, nlast
   3a54c:	lsr	x2, x17, #30
   3a550:	sub	x3, x1, x17
   3a554:	cmp	x1, x3
   3a558:	sbc	x2, x2, xzr
   3a55c:	lsl	x17, x17, #34
   3a560:	adds	x3, x3, x17
   3a564:	cinc	x2, x2, cs  // cs = hs, nlast
   3a568:	lsr	x1, x2, #30
   3a56c:	sub	x14, x3, x2
   3a570:	cmp	x3, x14
   3a574:	sbc	x1, x1, xzr
   3a578:	lsl	x2, x2, #34
   3a57c:	adds	x14, x14, x2
   3a580:	cinc	x1, x1, cs  // cs = hs, nlast
   3a584:	cmp	x1, #0x0
   3a588:	mov	x17, #0x0                   	// #0
   3a58c:	ccmp	x19, x14, #0x0, eq  // eq = none
   3a590:	b.hi	3a5e8 <PyInit__decimal@@Base+0x20448>  // b.pmore
   3a594:	sub	x14, x14, x19
   3a598:	b	3a5e8 <PyInit__decimal@@Base+0x20448>
   3a59c:	lsr	x3, x2, #32
   3a5a0:	sub	x2, x4, x2
   3a5a4:	cmp	x4, x2
   3a5a8:	sbc	x3, x3, xzr
   3a5ac:	lsl	x1, x1, #32
   3a5b0:	adds	x1, x2, x1
   3a5b4:	cinc	x3, x3, cs  // cs = hs, nlast
   3a5b8:	lsr	x2, x3, #32
   3a5bc:	sub	x14, x1, x3
   3a5c0:	cmp	x14, x1
   3a5c4:	cset	x1, hi  // hi = pmore
   3a5c8:	sub	x2, x2, x1
   3a5cc:	lsl	x3, x3, #32
   3a5d0:	adds	x14, x14, x3
   3a5d4:	cinc	x2, x2, cs  // cs = hs, nlast
   3a5d8:	cmp	x2, #0x0
   3a5dc:	sub	x1, x14, x19
   3a5e0:	ccmp	x19, x14, #0x0, eq  // eq = none
   3a5e4:	csel	x14, x1, x14, ls  // ls = plast
   3a5e8:	cbz	x25, 3ab10 <PyInit__decimal@@Base+0x20970>
   3a5ec:	lsl	x18, x7, x27
   3a5f0:	add	x13, x20, x18, lsl #3
   3a5f4:	add	x18, x10, x18
   3a5f8:	add	x18, x11, x18, lsl #3
   3a5fc:	mov	x1, x8
   3a600:	mov	x16, x14
   3a604:	b	3a77c <PyInit__decimal@@Base+0x205dc>
   3a608:	mov	x3, x7
   3a60c:	mov	x0, x8
   3a610:	mov	x1, x12
   3a614:	b	3a5b8 <PyInit__decimal@@Base+0x20418>
   3a618:	mov	x1, x17
   3a61c:	mov	x0, x8
   3a620:	mov	x2, x12
   3a624:	b	3a540 <PyInit__decimal@@Base+0x203a0>
   3a628:	lsr	x30, x1, #32
   3a62c:	sub	x1, x24, x1
   3a630:	cmp	x24, x1
   3a634:	sbc	x30, x30, xzr
   3a638:	lsl	x28, x28, #32
   3a63c:	adds	x1, x1, x28
   3a640:	cinc	x30, x30, cs  // cs = hs, nlast
   3a644:	lsr	x24, x30, #32
   3a648:	sub	x3, x1, x30
   3a64c:	cmp	x1, x3
   3a650:	sbc	x24, x24, xzr
   3a654:	lsl	x30, x30, #32
   3a658:	adds	x3, x3, x30
   3a65c:	cinc	x24, x24, cs  // cs = hs, nlast
   3a660:	cmp	x24, #0x0
   3a664:	sub	x1, x3, x19
   3a668:	ccmp	x19, x3, #0x0, eq  // eq = none
   3a66c:	csel	x3, x1, x3, ls  // ls = plast
   3a670:	mov	x24, x0
   3a674:	mul	x28, x2, x0
   3a678:	umulh	x0, x2, x0
   3a67c:	lsr	x2, x0, #32
   3a680:	sub	x30, x28, x0
   3a684:	cmp	x30, x28
   3a688:	cset	x1, hi  // hi = pmore
   3a68c:	sub	x2, x2, x1
   3a690:	lsl	x0, x0, #32
   3a694:	adds	x1, x30, x0
   3a698:	cinc	x2, x2, cs  // cs = hs, nlast
   3a69c:	lsr	x28, x2, #32
   3a6a0:	sub	x30, x1, x2
   3a6a4:	cmp	x1, x30
   3a6a8:	sbc	x28, x28, xzr
   3a6ac:	lsl	x0, x2, #32
   3a6b0:	adds	x2, x30, x0
   3a6b4:	cinc	x28, x28, cs  // cs = hs, nlast
   3a6b8:	cmp	x28, #0x0
   3a6bc:	sub	x0, x2, x19
   3a6c0:	ccmp	x19, x2, #0x0, eq  // eq = none
   3a6c4:	csel	x2, x0, x2, ls  // ls = plast
   3a6c8:	mul	x28, x4, x14
   3a6cc:	umulh	x4, x4, x14
   3a6d0:	lsr	x1, x4, #32
   3a6d4:	sub	x0, x28, x4
   3a6d8:	cmp	x28, x0
   3a6dc:	sbc	x1, x1, xzr
   3a6e0:	lsl	x4, x4, #32
   3a6e4:	adds	x4, x0, x4
   3a6e8:	cinc	x1, x1, cs  // cs = hs, nlast
   3a6ec:	lsr	x28, x1, #32
   3a6f0:	sub	x30, x4, x1
   3a6f4:	cmp	x4, x30
   3a6f8:	sbc	x28, x28, xzr
   3a6fc:	lsl	x0, x1, #32
   3a700:	adds	x1, x30, x0
   3a704:	cinc	x28, x28, cs  // cs = hs, nlast
   3a708:	cmp	x28, #0x0
   3a70c:	sub	x0, x1, x19
   3a710:	ccmp	x19, x1, #0x0, eq  // eq = none
   3a714:	csel	x1, x0, x1, ls  // ls = plast
   3a718:	mul	x0, x16, x24
   3a71c:	umulh	x24, x16, x24
   3a720:	lsr	x4, x24, #32
   3a724:	sub	x28, x0, x24
   3a728:	cmp	x0, x28
   3a72c:	sbc	x4, x4, xzr
   3a730:	lsl	x24, x24, #32
   3a734:	adds	x24, x28, x24
   3a738:	cinc	x4, x4, cs  // cs = hs, nlast
   3a73c:	lsr	x30, x4, #32
   3a740:	sub	x0, x24, x4
   3a744:	cmp	x24, x0
   3a748:	sbc	x30, x30, xzr
   3a74c:	lsl	x4, x4, #32
   3a750:	adds	x0, x0, x4
   3a754:	cinc	x30, x30, cs  // cs = hs, nlast
   3a758:	cmp	x30, #0x0
   3a75c:	sub	x4, x0, x19
   3a760:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a764:	csel	x0, x4, x0, ls  // ls = plast
   3a768:	str	x3, [x15]
   3a76c:	str	x2, [x15, #8]
   3a770:	add	x13, x13, #0x10
   3a774:	cmp	x18, x13
   3a778:	b.eq	3ab10 <PyInit__decimal@@Base+0x20970>  // b.none
   3a77c:	mov	x15, x13
   3a780:	ldr	x2, [x13, #8]
   3a784:	mov	x4, x1
   3a788:	ldr	x3, [x13]
   3a78c:	mul	x24, x3, x1
   3a790:	umulh	x1, x3, x1
   3a794:	mov	x28, x1
   3a798:	cbnz	x17, 3a628 <PyInit__decimal@@Base+0x20488>
   3a79c:	cbz	x5, 3a958 <PyInit__decimal@@Base+0x207b8>
   3a7a0:	lsr	x3, x1, #30
   3a7a4:	sub	x1, x24, x1
   3a7a8:	cmp	x24, x1
   3a7ac:	sbc	x3, x3, xzr
   3a7b0:	lsl	x28, x28, #34
   3a7b4:	adds	x28, x1, x28
   3a7b8:	cinc	x3, x3, cs  // cs = hs, nlast
   3a7bc:	lsr	x1, x3, #30
   3a7c0:	sub	x30, x28, x3
   3a7c4:	cmp	x28, x30
   3a7c8:	sbc	x1, x1, xzr
   3a7cc:	lsl	x24, x3, #34
   3a7d0:	adds	x24, x30, x24
   3a7d4:	cinc	x1, x1, cs  // cs = hs, nlast
   3a7d8:	lsr	x28, x1, #30
   3a7dc:	sub	x3, x24, x1
   3a7e0:	cmp	x24, x3
   3a7e4:	sbc	x28, x28, xzr
   3a7e8:	lsl	x1, x1, #34
   3a7ec:	adds	x3, x3, x1
   3a7f0:	cinc	x28, x28, cs  // cs = hs, nlast
   3a7f4:	cmp	x28, #0x0
   3a7f8:	sub	x1, x3, x19
   3a7fc:	ccmp	x19, x3, #0x0, eq  // eq = none
   3a800:	csel	x3, x1, x3, ls  // ls = plast
   3a804:	mov	x24, x0
   3a808:	mul	x30, x2, x0
   3a80c:	umulh	x0, x2, x0
   3a810:	lsr	x1, x0, #30
   3a814:	sub	x28, x30, x0
   3a818:	cmp	x28, x30
   3a81c:	cset	x2, hi  // hi = pmore
   3a820:	sub	x1, x1, x2
   3a824:	lsl	x0, x0, #34
   3a828:	adds	x28, x28, x0
   3a82c:	cinc	x1, x1, cs  // cs = hs, nlast
   3a830:	lsr	x0, x1, #30
   3a834:	sub	x2, x28, x1
   3a838:	cmp	x28, x2
   3a83c:	sbc	x0, x0, xzr
   3a840:	lsl	x1, x1, #34
   3a844:	adds	x1, x2, x1
   3a848:	cinc	x0, x0, cs  // cs = hs, nlast
   3a84c:	lsr	x28, x0, #30
   3a850:	sub	x2, x1, x0
   3a854:	cmp	x1, x2
   3a858:	sbc	x28, x28, xzr
   3a85c:	lsl	x0, x0, #34
   3a860:	adds	x2, x2, x0
   3a864:	cinc	x28, x28, cs  // cs = hs, nlast
   3a868:	cmp	x28, #0x0
   3a86c:	sub	x0, x2, x19
   3a870:	ccmp	x19, x2, #0x0, eq  // eq = none
   3a874:	csel	x2, x0, x2, ls  // ls = plast
   3a878:	mul	x28, x4, x14
   3a87c:	umulh	x4, x4, x14
   3a880:	lsr	x1, x4, #30
   3a884:	sub	x0, x28, x4
   3a888:	cmp	x28, x0
   3a88c:	sbc	x1, x1, xzr
   3a890:	lsl	x4, x4, #34
   3a894:	adds	x4, x0, x4
   3a898:	cinc	x1, x1, cs  // cs = hs, nlast
   3a89c:	lsr	x0, x1, #30
   3a8a0:	sub	x28, x4, x1
   3a8a4:	cmp	x4, x28
   3a8a8:	sbc	x0, x0, xzr
   3a8ac:	lsl	x4, x1, #34
   3a8b0:	adds	x4, x28, x4
   3a8b4:	cinc	x0, x0, cs  // cs = hs, nlast
   3a8b8:	lsr	x30, x0, #30
   3a8bc:	sub	x1, x4, x0
   3a8c0:	cmp	x4, x1
   3a8c4:	sbc	x30, x30, xzr
   3a8c8:	lsl	x0, x0, #34
   3a8cc:	adds	x1, x1, x0
   3a8d0:	cinc	x30, x30, cs  // cs = hs, nlast
   3a8d4:	cmp	x30, #0x0
   3a8d8:	sub	x0, x1, x19
   3a8dc:	ccmp	x19, x1, #0x0, eq  // eq = none
   3a8e0:	csel	x1, x0, x1, ls  // ls = plast
   3a8e4:	mul	x30, x16, x24
   3a8e8:	umulh	x24, x16, x24
   3a8ec:	lsr	x4, x24, #30
   3a8f0:	sub	x0, x30, x24
   3a8f4:	cmp	x0, x30
   3a8f8:	cset	x28, hi  // hi = pmore
   3a8fc:	sub	x4, x4, x28
   3a900:	lsl	x24, x24, #34
   3a904:	adds	x28, x0, x24
   3a908:	cinc	x4, x4, cs  // cs = hs, nlast
   3a90c:	lsr	x0, x4, #30
   3a910:	sub	x24, x28, x4
   3a914:	cmp	x28, x24
   3a918:	sbc	x0, x0, xzr
   3a91c:	lsl	x4, x4, #34
   3a920:	adds	x4, x24, x4
   3a924:	cinc	x0, x0, cs  // cs = hs, nlast
   3a928:	lsr	x28, x0, #30
   3a92c:	sub	x30, x4, x0
   3a930:	cmp	x4, x30
   3a934:	sbc	x28, x28, xzr
   3a938:	lsl	x0, x0, #34
   3a93c:	adds	x0, x30, x0
   3a940:	cinc	x28, x28, cs  // cs = hs, nlast
   3a944:	cmp	x28, #0x0
   3a948:	sub	x4, x0, x19
   3a94c:	ccmp	x19, x0, #0x0, eq  // eq = none
   3a950:	csel	x0, x4, x0, ls  // ls = plast
   3a954:	b	3a768 <PyInit__decimal@@Base+0x205c8>
   3a958:	lsr	x1, x1, #24
   3a95c:	sub	x3, x24, x28
   3a960:	cmp	x24, x3
   3a964:	sbc	x1, x1, xzr
   3a968:	lsl	x28, x28, #40
   3a96c:	adds	x3, x3, x28
   3a970:	cinc	x1, x1, cs  // cs = hs, nlast
   3a974:	lsr	x30, x1, #24
   3a978:	sub	x28, x3, x1
   3a97c:	cmp	x3, x28
   3a980:	sbc	x30, x30, xzr
   3a984:	lsl	x24, x1, #40
   3a988:	adds	x1, x28, x24
   3a98c:	cinc	x30, x30, cs  // cs = hs, nlast
   3a990:	lsr	x24, x30, #24
   3a994:	sub	x3, x1, x30
   3a998:	cmp	x1, x3
   3a99c:	sbc	x24, x24, xzr
   3a9a0:	lsl	x1, x30, #40
   3a9a4:	adds	x3, x3, x1
   3a9a8:	cinc	x24, x24, cs  // cs = hs, nlast
   3a9ac:	cmp	x24, #0x0
   3a9b0:	sub	x1, x3, x19
   3a9b4:	ccmp	x19, x3, #0x0, eq  // eq = none
   3a9b8:	csel	x3, x1, x3, ls  // ls = plast
   3a9bc:	mov	x24, x0
   3a9c0:	mul	x30, x2, x0
   3a9c4:	umulh	x0, x2, x0
   3a9c8:	lsr	x1, x0, #24
   3a9cc:	sub	x28, x30, x0
   3a9d0:	cmp	x28, x30
   3a9d4:	cset	x2, hi  // hi = pmore
   3a9d8:	sub	x1, x1, x2
   3a9dc:	lsl	x0, x0, #40
   3a9e0:	adds	x28, x28, x0
   3a9e4:	cinc	x1, x1, cs  // cs = hs, nlast
   3a9e8:	lsr	x0, x1, #24
   3a9ec:	sub	x2, x28, x1
   3a9f0:	cmp	x28, x2
   3a9f4:	sbc	x0, x0, xzr
   3a9f8:	lsl	x1, x1, #40
   3a9fc:	adds	x1, x2, x1
   3aa00:	cinc	x0, x0, cs  // cs = hs, nlast
   3aa04:	lsr	x28, x0, #24
   3aa08:	sub	x2, x1, x0
   3aa0c:	cmp	x1, x2
   3aa10:	sbc	x28, x28, xzr
   3aa14:	lsl	x0, x0, #40
   3aa18:	adds	x2, x2, x0
   3aa1c:	cinc	x28, x28, cs  // cs = hs, nlast
   3aa20:	cmp	x28, #0x0
   3aa24:	sub	x0, x2, x19
   3aa28:	ccmp	x19, x2, #0x0, eq  // eq = none
   3aa2c:	csel	x2, x0, x2, ls  // ls = plast
   3aa30:	mul	x28, x14, x4
   3aa34:	umulh	x4, x14, x4
   3aa38:	lsr	x1, x4, #24
   3aa3c:	sub	x0, x28, x4
   3aa40:	cmp	x0, x28
   3aa44:	cset	x28, hi  // hi = pmore
   3aa48:	sub	x1, x1, x28
   3aa4c:	lsl	x4, x4, #40
   3aa50:	adds	x4, x0, x4
   3aa54:	cinc	x1, x1, cs  // cs = hs, nlast
   3aa58:	lsr	x0, x1, #24
   3aa5c:	sub	x28, x4, x1
   3aa60:	cmp	x4, x28
   3aa64:	sbc	x0, x0, xzr
   3aa68:	lsl	x4, x1, #40
   3aa6c:	adds	x4, x28, x4
   3aa70:	cinc	x0, x0, cs  // cs = hs, nlast
   3aa74:	lsr	x30, x0, #24
   3aa78:	sub	x1, x4, x0
   3aa7c:	cmp	x4, x1
   3aa80:	sbc	x30, x30, xzr
   3aa84:	lsl	x0, x0, #40
   3aa88:	adds	x1, x1, x0
   3aa8c:	cinc	x30, x30, cs  // cs = hs, nlast
   3aa90:	cmp	x30, #0x0
   3aa94:	sub	x0, x1, x19
   3aa98:	ccmp	x19, x1, #0x0, eq  // eq = none
   3aa9c:	csel	x1, x0, x1, ls  // ls = plast
   3aaa0:	mul	x0, x16, x24
   3aaa4:	umulh	x24, x16, x24
   3aaa8:	lsr	x4, x24, #24
   3aaac:	sub	x28, x0, x24
   3aab0:	cmp	x0, x28
   3aab4:	sbc	x4, x4, xzr
   3aab8:	lsl	x24, x24, #40
   3aabc:	adds	x24, x28, x24
   3aac0:	cinc	x4, x4, cs  // cs = hs, nlast
   3aac4:	lsr	x0, x4, #24
   3aac8:	sub	x30, x24, x4
   3aacc:	cmp	x24, x30
   3aad0:	sbc	x0, x0, xzr
   3aad4:	lsl	x4, x4, #40
   3aad8:	adds	x4, x30, x4
   3aadc:	cinc	x0, x0, cs  // cs = hs, nlast
   3aae0:	lsr	x24, x0, #24
   3aae4:	sub	x28, x4, x0
   3aae8:	cmp	x4, x28
   3aaec:	sbc	x24, x24, xzr
   3aaf0:	lsl	x0, x0, #40
   3aaf4:	adds	x0, x28, x0
   3aaf8:	cinc	x24, x24, cs  // cs = hs, nlast
   3aafc:	cmp	x24, #0x0
   3ab00:	sub	x4, x0, x19
   3ab04:	ccmp	x19, x0, #0x0, eq  // eq = none
   3ab08:	csel	x0, x4, x0, ls  // ls = plast
   3ab0c:	b	3a768 <PyInit__decimal@@Base+0x205c8>
   3ab10:	add	x7, x7, #0x1
   3ab14:	cmp	x21, x7
   3ab18:	b.eq	3abb0 <PyInit__decimal@@Base+0x20a10>  // b.none
   3ab1c:	mov	x1, x9
   3ab20:	mov	x3, x7
   3ab24:	mov	x0, x8
   3ab28:	cbnz	x7, 3a3b0 <PyInit__decimal@@Base+0x20210>
   3ab2c:	and	x17, x19, #0x100000000
   3ab30:	tbnz	x19, #32, 3a608 <PyInit__decimal@@Base+0x20468>
   3ab34:	mov	x1, x5
   3ab38:	cbnz	x5, 3a618 <PyInit__decimal@@Base+0x20478>
   3ab3c:	mov	x13, x12
   3ab40:	lsr	x3, x1, #24
   3ab44:	sub	x2, x13, x1
   3ab48:	cmp	x2, x13
   3ab4c:	cset	x4, hi  // hi = pmore
   3ab50:	sub	x3, x3, x4
   3ab54:	lsl	x1, x1, #40
   3ab58:	adds	x1, x2, x1
   3ab5c:	cinc	x3, x3, cs  // cs = hs, nlast
   3ab60:	lsr	x2, x3, #24
   3ab64:	sub	x4, x1, x3
   3ab68:	cmp	x1, x4
   3ab6c:	sbc	x2, x2, xzr
   3ab70:	lsl	x3, x3, #40
   3ab74:	adds	x3, x4, x3
   3ab78:	cinc	x2, x2, cs  // cs = hs, nlast
   3ab7c:	lsr	x1, x2, #24
   3ab80:	sub	x14, x3, x2
   3ab84:	cmp	x3, x14
   3ab88:	sbc	x1, x1, xzr
   3ab8c:	lsl	x2, x2, #40
   3ab90:	adds	x14, x14, x2
   3ab94:	cinc	x1, x1, cs  // cs = hs, nlast
   3ab98:	cmp	x1, #0x0
   3ab9c:	mov	x17, #0x0                   	// #0
   3aba0:	ccmp	x19, x14, #0x0, eq  // eq = none
   3aba4:	b.hi	3a5e8 <PyInit__decimal@@Base+0x20448>  // b.pmore
   3aba8:	sub	x14, x14, x19
   3abac:	b	3a5e8 <PyInit__decimal@@Base+0x20448>
   3abb0:	cmp	x25, x21
   3abb4:	b.eq	3abe0 <PyInit__decimal@@Base+0x20a40>  // b.none
   3abb8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3abbc:	ldr	x1, [x0, #1704]
   3abc0:	mov	x0, x22
   3abc4:	blr	x1
   3abc8:	ldr	w2, [sp, #108]
   3abcc:	mov	w1, #0xffffffff            	// #-1
   3abd0:	mov	x0, x25
   3abd4:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   3abd8:	mov	x22, x0
   3abdc:	cbz	x0, 3ac2c <PyInit__decimal@@Base+0x20a8c>
   3abe0:	cmp	x20, x26
   3abe4:	b.cs	3ac0c <PyInit__decimal@@Base+0x20a6c>  // b.hs, b.nlast
   3abe8:	mov	x0, #0x8                   	// #8
   3abec:	lsl	x23, x0, x23
   3abf0:	mov	x2, x22
   3abf4:	mov	x1, x25
   3abf8:	mov	x0, x20
   3abfc:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   3ac00:	add	x20, x20, x23
   3ac04:	cmp	x20, x26
   3ac08:	b.cc	3abf0 <PyInit__decimal@@Base+0x20a50>  // b.lo, b.ul, b.last
   3ac0c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3ac10:	ldr	x1, [x0, #1704]
   3ac14:	mov	x0, x22
   3ac18:	blr	x1
   3ac1c:	mov	w28, #0x1                   	// #1
   3ac20:	b	3a1a4 <PyInit__decimal@@Base+0x20004>
   3ac24:	mov	w28, #0x0                   	// #0
   3ac28:	b	3a1a4 <PyInit__decimal@@Base+0x20004>
   3ac2c:	mov	w28, #0x0                   	// #0
   3ac30:	b	3a1a4 <PyInit__decimal@@Base+0x20004>
   3ac34:	stp	x29, x30, [sp, #-112]!
   3ac38:	mov	x29, sp
   3ac3c:	stp	x19, x20, [sp, #16]
   3ac40:	stp	x21, x22, [sp, #32]
   3ac44:	stp	x23, x24, [sp, #48]
   3ac48:	stp	x25, x26, [sp, #64]
   3ac4c:	stp	x27, x28, [sp, #80]
   3ac50:	mov	x23, x0
   3ac54:	mov	x26, x1
   3ac58:	mov	w28, w2
   3ac5c:	cmp	xzr, x1, lsr #32
   3ac60:	b.eq	3ad8c <PyInit__decimal@@Base+0x20bec>  // b.none
   3ac64:	lsr	x0, x1, #32
   3ac68:	mov	w1, #0x20                  	// #32
   3ac6c:	lsr	x2, x0, #16
   3ac70:	cmp	xzr, x0, lsr #16
   3ac74:	b.eq	3ac80 <PyInit__decimal@@Base+0x20ae0>  // b.none
   3ac78:	add	w1, w1, #0x10
   3ac7c:	mov	x0, x2
   3ac80:	lsr	x2, x0, #8
   3ac84:	cmp	xzr, x0, lsr #8
   3ac88:	b.eq	3ac94 <PyInit__decimal@@Base+0x20af4>  // b.none
   3ac8c:	add	w1, w1, #0x8
   3ac90:	mov	x0, x2
   3ac94:	lsr	x2, x0, #4
   3ac98:	cmp	xzr, x0, lsr #4
   3ac9c:	b.eq	3aca8 <PyInit__decimal@@Base+0x20b08>  // b.none
   3aca0:	add	w1, w1, #0x4
   3aca4:	mov	x0, x2
   3aca8:	lsr	x2, x0, #2
   3acac:	cmp	xzr, x0, lsr #2
   3acb0:	b.eq	3acbc <PyInit__decimal@@Base+0x20b1c>  // b.none
   3acb4:	add	w1, w1, #0x2
   3acb8:	mov	x0, x2
   3acbc:	lsr	x2, x0, #1
   3acc0:	cmp	xzr, x0, lsr #1
   3acc4:	b.eq	3acd0 <PyInit__decimal@@Base+0x20b30>  // b.none
   3acc8:	add	w1, w1, #0x1
   3accc:	mov	x0, x2
   3acd0:	sub	w1, w1, #0x1
   3acd4:	add	w0, w1, w0
   3acd8:	sxtw	x19, w0
   3acdc:	lsr	x19, x19, #1
   3ace0:	mov	w27, w19
   3ace4:	mov	x1, #0x1                   	// #1
   3ace8:	lsl	x20, x1, x19
   3acec:	sub	w0, w0, w19
   3acf0:	str	w0, [sp, #108]
   3acf4:	lsl	x22, x1, x0
   3acf8:	mov	w2, w28
   3acfc:	mov	x0, x20
   3ad00:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   3ad04:	mov	x21, x0
   3ad08:	cbz	x0, 3b790 <PyInit__decimal@@Base+0x215f0>
   3ad0c:	add	x24, x23, x26, lsl #3
   3ad10:	cmp	x23, x24
   3ad14:	b.cs	3ad40 <PyInit__decimal@@Base+0x20ba0>  // b.hs, b.nlast
   3ad18:	mov	x25, #0x8                   	// #8
   3ad1c:	lsl	x25, x25, x19
   3ad20:	mov	x19, x23
   3ad24:	mov	x2, x21
   3ad28:	mov	x1, x20
   3ad2c:	mov	x0, x19
   3ad30:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   3ad34:	add	x19, x19, x25
   3ad38:	cmp	x19, x24
   3ad3c:	b.cc	3ad24 <PyInit__decimal@@Base+0x20b84>  // b.lo, b.ul, b.last
   3ad40:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3ad44:	add	x0, x0, #0x90
   3ad48:	ldr	x19, [x0, w28, sxtw #3]
   3ad4c:	mov	w2, w28
   3ad50:	mov	w1, #0x1                   	// #1
   3ad54:	mov	x0, x26
   3ad58:	bl	396ac <PyInit__decimal@@Base+0x1f50c>
   3ad5c:	cmp	x22, #0x1
   3ad60:	b.ls	3b6b8 <PyInit__decimal@@Base+0x21518>  // b.plast
   3ad64:	sub	x10, x20, #0x1
   3ad68:	and	x10, x10, #0xfffffffffffffffe
   3ad6c:	mov	x7, #0x1                   	// #1
   3ad70:	mov	x9, x0
   3ad74:	mov	x8, x7
   3ad78:	and	x5, x19, #0x400000000
   3ad7c:	and	x6, x19, #0x100000000
   3ad80:	mov	x12, x7
   3ad84:	add	x11, x23, #0x10
   3ad88:	b	3b624 <PyInit__decimal@@Base+0x21484>
   3ad8c:	mov	x0, x1
   3ad90:	mov	w1, #0x0                   	// #0
   3ad94:	b	3ac6c <PyInit__decimal@@Base+0x20acc>
   3ad98:	lsr	x1, x0, #32
   3ad9c:	sub	x0, x13, x0
   3ada0:	cmp	x13, x0
   3ada4:	sbc	x1, x1, xzr
   3ada8:	lsl	x2, x2, #32
   3adac:	adds	x0, x0, x2
   3adb0:	cinc	x1, x1, cs  // cs = hs, nlast
   3adb4:	lsr	x2, x1, #32
   3adb8:	sub	x13, x0, x1
   3adbc:	cmp	x0, x13
   3adc0:	sbc	x2, x2, xzr
   3adc4:	lsl	x1, x1, #32
   3adc8:	adds	x0, x13, x1
   3adcc:	cinc	x2, x2, cs  // cs = hs, nlast
   3add0:	cmp	x2, #0x0
   3add4:	sub	x1, x0, x19
   3add8:	ccmp	x19, x0, #0x0, eq  // eq = none
   3addc:	csel	x0, x1, x0, ls  // ls = plast
   3ade0:	umulh	x2, x4, x4
   3ade4:	mul	x1, x4, x4
   3ade8:	b	3ae60 <PyInit__decimal@@Base+0x20cc0>
   3adec:	lsr	x0, x0, #24
   3adf0:	sub	x1, x13, x2
   3adf4:	cmp	x13, x1
   3adf8:	sbc	x0, x0, xzr
   3adfc:	lsl	x2, x2, #40
   3ae00:	adds	x2, x1, x2
   3ae04:	cinc	x0, x0, cs  // cs = hs, nlast
   3ae08:	lsr	x1, x0, #24
   3ae0c:	sub	x13, x2, x0
   3ae10:	cmp	x2, x13
   3ae14:	sbc	x1, x1, xzr
   3ae18:	lsl	x0, x0, #40
   3ae1c:	adds	x0, x13, x0
   3ae20:	cinc	x1, x1, cs  // cs = hs, nlast
   3ae24:	lsr	x2, x1, #24
   3ae28:	sub	x13, x0, x1
   3ae2c:	cmp	x0, x13
   3ae30:	sbc	x2, x2, xzr
   3ae34:	lsl	x1, x1, #40
   3ae38:	adds	x0, x13, x1
   3ae3c:	cinc	x2, x2, cs  // cs = hs, nlast
   3ae40:	cmp	x2, #0x0
   3ae44:	sub	x1, x0, x19
   3ae48:	ccmp	x19, x0, #0x0, eq  // eq = none
   3ae4c:	csel	x0, x1, x0, ls  // ls = plast
   3ae50:	b	3af34 <PyInit__decimal@@Base+0x20d94>
   3ae54:	umulh	x2, x1, x1
   3ae58:	mul	x1, x1, x1
   3ae5c:	cbz	x6, 3af3c <PyInit__decimal@@Base+0x20d9c>
   3ae60:	lsr	x4, x2, #32
   3ae64:	sub	x13, x1, x2
   3ae68:	cmp	x13, x1
   3ae6c:	cset	x1, hi  // hi = pmore
   3ae70:	sub	x4, x4, x1
   3ae74:	lsl	x2, x2, #32
   3ae78:	adds	x13, x13, x2
   3ae7c:	cinc	x4, x4, cs  // cs = hs, nlast
   3ae80:	lsr	x2, x4, #32
   3ae84:	sub	x1, x13, x4
   3ae88:	cmp	x13, x1
   3ae8c:	sbc	x2, x2, xzr
   3ae90:	lsl	x4, x4, #32
   3ae94:	adds	x1, x1, x4
   3ae98:	cinc	x2, x2, cs  // cs = hs, nlast
   3ae9c:	cmp	x2, #0x0
   3aea0:	sub	x2, x1, x19
   3aea4:	ccmp	x19, x1, #0x0, eq  // eq = none
   3aea8:	csel	x1, x2, x1, ls  // ls = plast
   3aeac:	lsr	x3, x3, #1
   3aeb0:	cbz	x3, 3b018 <PyInit__decimal@@Base+0x20e78>
   3aeb4:	tbz	w3, #0, 3ae54 <PyInit__decimal@@Base+0x20cb4>
   3aeb8:	mov	x4, x1
   3aebc:	mul	x13, x0, x1
   3aec0:	umulh	x0, x0, x1
   3aec4:	mov	x2, x0
   3aec8:	cbnz	x6, 3ad98 <PyInit__decimal@@Base+0x20bf8>
   3aecc:	cbz	x5, 3adec <PyInit__decimal@@Base+0x20c4c>
   3aed0:	lsr	x0, x0, #30
   3aed4:	sub	x1, x13, x2
   3aed8:	cmp	x13, x1
   3aedc:	sbc	x0, x0, xzr
   3aee0:	lsl	x2, x2, #34
   3aee4:	adds	x2, x1, x2
   3aee8:	cinc	x0, x0, cs  // cs = hs, nlast
   3aeec:	lsr	x1, x0, #30
   3aef0:	sub	x13, x2, x0
   3aef4:	cmp	x2, x13
   3aef8:	sbc	x1, x1, xzr
   3aefc:	lsl	x0, x0, #34
   3af00:	adds	x0, x13, x0
   3af04:	cinc	x1, x1, cs  // cs = hs, nlast
   3af08:	lsr	x2, x1, #30
   3af0c:	sub	x13, x0, x1
   3af10:	cmp	x0, x13
   3af14:	sbc	x2, x2, xzr
   3af18:	lsl	x1, x1, #34
   3af1c:	adds	x0, x13, x1
   3af20:	cinc	x2, x2, cs  // cs = hs, nlast
   3af24:	cmp	x2, #0x0
   3af28:	sub	x1, x0, x19
   3af2c:	ccmp	x19, x0, #0x0, eq  // eq = none
   3af30:	csel	x0, x1, x0, ls  // ls = plast
   3af34:	umulh	x2, x4, x4
   3af38:	mul	x1, x4, x4
   3af3c:	cbz	x5, 3afac <PyInit__decimal@@Base+0x20e0c>
   3af40:	lsr	x13, x2, #30
   3af44:	sub	x4, x1, x2
   3af48:	cmp	x4, x1
   3af4c:	cset	x1, hi  // hi = pmore
   3af50:	sub	x13, x13, x1
   3af54:	lsl	x2, x2, #34
   3af58:	adds	x2, x4, x2
   3af5c:	cinc	x13, x13, cs  // cs = hs, nlast
   3af60:	lsr	x4, x13, #30
   3af64:	sub	x1, x2, x13
   3af68:	cmp	x2, x1
   3af6c:	sbc	x4, x4, xzr
   3af70:	lsl	x13, x13, #34
   3af74:	adds	x13, x1, x13
   3af78:	cinc	x4, x4, cs  // cs = hs, nlast
   3af7c:	lsr	x2, x4, #30
   3af80:	sub	x1, x13, x4
   3af84:	cmp	x13, x1
   3af88:	sbc	x2, x2, xzr
   3af8c:	lsl	x4, x4, #34
   3af90:	adds	x1, x1, x4
   3af94:	cinc	x2, x2, cs  // cs = hs, nlast
   3af98:	cmp	x2, #0x0
   3af9c:	sub	x2, x1, x19
   3afa0:	ccmp	x19, x1, #0x0, eq  // eq = none
   3afa4:	csel	x1, x2, x1, ls  // ls = plast
   3afa8:	b	3aeac <PyInit__decimal@@Base+0x20d0c>
   3afac:	lsr	x13, x2, #24
   3afb0:	sub	x4, x1, x2
   3afb4:	cmp	x4, x1
   3afb8:	cset	x1, hi  // hi = pmore
   3afbc:	sub	x13, x13, x1
   3afc0:	lsl	x2, x2, #40
   3afc4:	adds	x2, x4, x2
   3afc8:	cinc	x13, x13, cs  // cs = hs, nlast
   3afcc:	lsr	x4, x13, #24
   3afd0:	sub	x1, x2, x13
   3afd4:	cmp	x2, x1
   3afd8:	sbc	x4, x4, xzr
   3afdc:	lsl	x13, x13, #40
   3afe0:	adds	x13, x1, x13
   3afe4:	cinc	x4, x4, cs  // cs = hs, nlast
   3afe8:	lsr	x2, x4, #24
   3afec:	sub	x1, x13, x4
   3aff0:	cmp	x13, x1
   3aff4:	sbc	x2, x2, xzr
   3aff8:	lsl	x4, x4, #40
   3affc:	adds	x1, x1, x4
   3b000:	cinc	x2, x2, cs  // cs = hs, nlast
   3b004:	cmp	x2, #0x0
   3b008:	sub	x2, x1, x19
   3b00c:	ccmp	x19, x1, #0x0, eq  // eq = none
   3b010:	csel	x1, x2, x1, ls  // ls = plast
   3b014:	b	3aeac <PyInit__decimal@@Base+0x20d0c>
   3b018:	mul	x4, x0, x0
   3b01c:	umulh	x2, x0, x0
   3b020:	mov	x1, x2
   3b024:	mov	x13, x4
   3b028:	and	x17, x19, #0x100000000
   3b02c:	tbnz	x19, #32, 3b0a0 <PyInit__decimal@@Base+0x20f00>
   3b030:	cbz	x5, 3b648 <PyInit__decimal@@Base+0x214a8>
   3b034:	lsr	x17, x2, #30
   3b038:	sub	x2, x4, x2
   3b03c:	cmp	x4, x2
   3b040:	sbc	x17, x17, xzr
   3b044:	lsl	x1, x1, #34
   3b048:	adds	x1, x1, x2
   3b04c:	cinc	x17, x17, cs  // cs = hs, nlast
   3b050:	lsr	x2, x17, #30
   3b054:	sub	x3, x1, x17
   3b058:	cmp	x1, x3
   3b05c:	sbc	x2, x2, xzr
   3b060:	lsl	x17, x17, #34
   3b064:	adds	x3, x3, x17
   3b068:	cinc	x2, x2, cs  // cs = hs, nlast
   3b06c:	lsr	x1, x2, #30
   3b070:	sub	x14, x3, x2
   3b074:	cmp	x3, x14
   3b078:	sbc	x1, x1, xzr
   3b07c:	lsl	x2, x2, #34
   3b080:	adds	x14, x14, x2
   3b084:	cinc	x1, x1, cs  // cs = hs, nlast
   3b088:	cmp	x1, #0x0
   3b08c:	mov	x17, #0x0                   	// #0
   3b090:	ccmp	x19, x14, #0x0, eq  // eq = none
   3b094:	b.hi	3b0ec <PyInit__decimal@@Base+0x20f4c>  // b.pmore
   3b098:	sub	x14, x14, x19
   3b09c:	b	3b0ec <PyInit__decimal@@Base+0x20f4c>
   3b0a0:	lsr	x3, x2, #32
   3b0a4:	sub	x2, x4, x2
   3b0a8:	cmp	x4, x2
   3b0ac:	sbc	x3, x3, xzr
   3b0b0:	lsl	x1, x1, #32
   3b0b4:	adds	x1, x2, x1
   3b0b8:	cinc	x3, x3, cs  // cs = hs, nlast
   3b0bc:	lsr	x2, x3, #32
   3b0c0:	sub	x14, x1, x3
   3b0c4:	cmp	x14, x1
   3b0c8:	cset	x1, hi  // hi = pmore
   3b0cc:	sub	x2, x2, x1
   3b0d0:	lsl	x3, x3, #32
   3b0d4:	adds	x14, x14, x3
   3b0d8:	cinc	x2, x2, cs  // cs = hs, nlast
   3b0dc:	cmp	x2, #0x0
   3b0e0:	sub	x1, x14, x19
   3b0e4:	ccmp	x19, x14, #0x0, eq  // eq = none
   3b0e8:	csel	x14, x1, x14, ls  // ls = plast
   3b0ec:	cbz	x20, 3b618 <PyInit__decimal@@Base+0x21478>
   3b0f0:	lsl	x18, x7, x27
   3b0f4:	add	x13, x23, x18, lsl #3
   3b0f8:	add	x18, x10, x18
   3b0fc:	add	x18, x11, x18, lsl #3
   3b100:	mov	x1, x8
   3b104:	mov	x16, x14
   3b108:	b	3b284 <PyInit__decimal@@Base+0x210e4>
   3b10c:	mov	x3, x7
   3b110:	mov	x0, x8
   3b114:	mov	x1, x12
   3b118:	b	3b0bc <PyInit__decimal@@Base+0x20f1c>
   3b11c:	mov	x1, x17
   3b120:	mov	x0, x8
   3b124:	mov	x2, x12
   3b128:	b	3b044 <PyInit__decimal@@Base+0x20ea4>
   3b12c:	lsr	x30, x1, #32
   3b130:	sub	x1, x25, x1
   3b134:	cmp	x25, x1
   3b138:	sbc	x30, x30, xzr
   3b13c:	lsl	x26, x26, #32
   3b140:	adds	x1, x1, x26
   3b144:	cinc	x30, x30, cs  // cs = hs, nlast
   3b148:	lsr	x25, x30, #32
   3b14c:	sub	x3, x1, x30
   3b150:	cmp	x1, x3
   3b154:	sbc	x25, x25, xzr
   3b158:	lsl	x30, x30, #32
   3b15c:	adds	x3, x3, x30
   3b160:	cinc	x25, x25, cs  // cs = hs, nlast
   3b164:	cmp	x25, #0x0
   3b168:	sub	x1, x3, x19
   3b16c:	ccmp	x19, x3, #0x0, eq  // eq = none
   3b170:	csel	x3, x1, x3, ls  // ls = plast
   3b174:	mov	x25, x0
   3b178:	mul	x26, x2, x0
   3b17c:	umulh	x0, x2, x0
   3b180:	lsr	x2, x0, #32
   3b184:	sub	x30, x26, x0
   3b188:	cmp	x30, x26
   3b18c:	cset	x1, hi  // hi = pmore
   3b190:	sub	x2, x2, x1
   3b194:	lsl	x0, x0, #32
   3b198:	adds	x1, x30, x0
   3b19c:	cinc	x2, x2, cs  // cs = hs, nlast
   3b1a0:	lsr	x26, x2, #32
   3b1a4:	sub	x30, x1, x2
   3b1a8:	cmp	x1, x30
   3b1ac:	sbc	x26, x26, xzr
   3b1b0:	lsl	x0, x2, #32
   3b1b4:	adds	x2, x30, x0
   3b1b8:	cinc	x26, x26, cs  // cs = hs, nlast
   3b1bc:	cmp	x26, #0x0
   3b1c0:	sub	x0, x2, x19
   3b1c4:	ccmp	x19, x2, #0x0, eq  // eq = none
   3b1c8:	csel	x2, x0, x2, ls  // ls = plast
   3b1cc:	mul	x26, x14, x4
   3b1d0:	umulh	x4, x14, x4
   3b1d4:	lsr	x1, x4, #32
   3b1d8:	sub	x0, x26, x4
   3b1dc:	cmp	x0, x26
   3b1e0:	cset	x26, hi  // hi = pmore
   3b1e4:	sub	x1, x1, x26
   3b1e8:	lsl	x4, x4, #32
   3b1ec:	adds	x4, x0, x4
   3b1f0:	cinc	x1, x1, cs  // cs = hs, nlast
   3b1f4:	lsr	x26, x1, #32
   3b1f8:	sub	x30, x4, x1
   3b1fc:	cmp	x4, x30
   3b200:	sbc	x26, x26, xzr
   3b204:	lsl	x0, x1, #32
   3b208:	adds	x1, x30, x0
   3b20c:	cinc	x26, x26, cs  // cs = hs, nlast
   3b210:	cmp	x26, #0x0
   3b214:	sub	x0, x1, x19
   3b218:	ccmp	x19, x1, #0x0, eq  // eq = none
   3b21c:	csel	x1, x0, x1, ls  // ls = plast
   3b220:	mul	x0, x16, x25
   3b224:	umulh	x25, x16, x25
   3b228:	lsr	x4, x25, #32
   3b22c:	sub	x26, x0, x25
   3b230:	cmp	x0, x26
   3b234:	sbc	x4, x4, xzr
   3b238:	lsl	x25, x25, #32
   3b23c:	adds	x25, x26, x25
   3b240:	cinc	x4, x4, cs  // cs = hs, nlast
   3b244:	lsr	x30, x4, #32
   3b248:	sub	x0, x25, x4
   3b24c:	cmp	x25, x0
   3b250:	sbc	x30, x30, xzr
   3b254:	lsl	x4, x4, #32
   3b258:	adds	x0, x0, x4
   3b25c:	cinc	x30, x30, cs  // cs = hs, nlast
   3b260:	cmp	x30, #0x0
   3b264:	sub	x4, x0, x19
   3b268:	ccmp	x19, x0, #0x0, eq  // eq = none
   3b26c:	csel	x0, x4, x0, ls  // ls = plast
   3b270:	str	x3, [x15]
   3b274:	str	x2, [x15, #8]
   3b278:	add	x13, x13, #0x10
   3b27c:	cmp	x18, x13
   3b280:	b.eq	3b618 <PyInit__decimal@@Base+0x21478>  // b.none
   3b284:	mov	x15, x13
   3b288:	ldr	x2, [x13, #8]
   3b28c:	mov	x4, x1
   3b290:	ldr	x3, [x13]
   3b294:	mul	x25, x3, x1
   3b298:	umulh	x1, x3, x1
   3b29c:	mov	x26, x1
   3b2a0:	cbnz	x17, 3b12c <PyInit__decimal@@Base+0x20f8c>
   3b2a4:	cbz	x5, 3b460 <PyInit__decimal@@Base+0x212c0>
   3b2a8:	lsr	x3, x1, #30
   3b2ac:	sub	x1, x25, x1
   3b2b0:	cmp	x25, x1
   3b2b4:	sbc	x3, x3, xzr
   3b2b8:	lsl	x26, x26, #34
   3b2bc:	adds	x26, x1, x26
   3b2c0:	cinc	x3, x3, cs  // cs = hs, nlast
   3b2c4:	lsr	x1, x3, #30
   3b2c8:	sub	x30, x26, x3
   3b2cc:	cmp	x26, x30
   3b2d0:	sbc	x1, x1, xzr
   3b2d4:	lsl	x25, x3, #34
   3b2d8:	adds	x25, x30, x25
   3b2dc:	cinc	x1, x1, cs  // cs = hs, nlast
   3b2e0:	lsr	x26, x1, #30
   3b2e4:	sub	x3, x25, x1
   3b2e8:	cmp	x25, x3
   3b2ec:	sbc	x26, x26, xzr
   3b2f0:	lsl	x1, x1, #34
   3b2f4:	adds	x3, x3, x1
   3b2f8:	cinc	x26, x26, cs  // cs = hs, nlast
   3b2fc:	cmp	x26, #0x0
   3b300:	sub	x1, x3, x19
   3b304:	ccmp	x19, x3, #0x0, eq  // eq = none
   3b308:	csel	x3, x1, x3, ls  // ls = plast
   3b30c:	mov	x25, x0
   3b310:	mul	x30, x2, x0
   3b314:	umulh	x0, x2, x0
   3b318:	lsr	x1, x0, #30
   3b31c:	sub	x26, x30, x0
   3b320:	cmp	x26, x30
   3b324:	cset	x2, hi  // hi = pmore
   3b328:	sub	x1, x1, x2
   3b32c:	lsl	x0, x0, #34
   3b330:	adds	x26, x26, x0
   3b334:	cinc	x1, x1, cs  // cs = hs, nlast
   3b338:	lsr	x0, x1, #30
   3b33c:	sub	x2, x26, x1
   3b340:	cmp	x26, x2
   3b344:	sbc	x0, x0, xzr
   3b348:	lsl	x1, x1, #34
   3b34c:	adds	x1, x2, x1
   3b350:	cinc	x0, x0, cs  // cs = hs, nlast
   3b354:	lsr	x26, x0, #30
   3b358:	sub	x2, x1, x0
   3b35c:	cmp	x1, x2
   3b360:	sbc	x26, x26, xzr
   3b364:	lsl	x0, x0, #34
   3b368:	adds	x2, x2, x0
   3b36c:	cinc	x26, x26, cs  // cs = hs, nlast
   3b370:	cmp	x26, #0x0
   3b374:	sub	x0, x2, x19
   3b378:	ccmp	x19, x2, #0x0, eq  // eq = none
   3b37c:	csel	x2, x0, x2, ls  // ls = plast
   3b380:	mul	x26, x14, x4
   3b384:	umulh	x4, x14, x4
   3b388:	lsr	x1, x4, #30
   3b38c:	sub	x0, x26, x4
   3b390:	cmp	x0, x26
   3b394:	cset	x26, hi  // hi = pmore
   3b398:	sub	x1, x1, x26
   3b39c:	lsl	x4, x4, #34
   3b3a0:	adds	x4, x0, x4
   3b3a4:	cinc	x1, x1, cs  // cs = hs, nlast
   3b3a8:	lsr	x0, x1, #30
   3b3ac:	sub	x26, x4, x1
   3b3b0:	cmp	x4, x26
   3b3b4:	sbc	x0, x0, xzr
   3b3b8:	lsl	x4, x1, #34
   3b3bc:	adds	x4, x26, x4
   3b3c0:	cinc	x0, x0, cs  // cs = hs, nlast
   3b3c4:	lsr	x30, x0, #30
   3b3c8:	sub	x1, x4, x0
   3b3cc:	cmp	x4, x1
   3b3d0:	sbc	x30, x30, xzr
   3b3d4:	lsl	x0, x0, #34
   3b3d8:	adds	x1, x1, x0
   3b3dc:	cinc	x30, x30, cs  // cs = hs, nlast
   3b3e0:	cmp	x30, #0x0
   3b3e4:	sub	x0, x1, x19
   3b3e8:	ccmp	x19, x1, #0x0, eq  // eq = none
   3b3ec:	csel	x1, x0, x1, ls  // ls = plast
   3b3f0:	mul	x0, x16, x25
   3b3f4:	umulh	x25, x16, x25
   3b3f8:	lsr	x4, x25, #30
   3b3fc:	sub	x26, x0, x25
   3b400:	cmp	x0, x26
   3b404:	sbc	x4, x4, xzr
   3b408:	lsl	x25, x25, #34
   3b40c:	adds	x25, x26, x25
   3b410:	cinc	x4, x4, cs  // cs = hs, nlast
   3b414:	lsr	x0, x4, #30
   3b418:	sub	x30, x25, x4
   3b41c:	cmp	x25, x30
   3b420:	sbc	x0, x0, xzr
   3b424:	lsl	x4, x4, #34
   3b428:	adds	x4, x30, x4
   3b42c:	cinc	x0, x0, cs  // cs = hs, nlast
   3b430:	lsr	x25, x0, #30
   3b434:	sub	x26, x4, x0
   3b438:	cmp	x4, x26
   3b43c:	sbc	x25, x25, xzr
   3b440:	lsl	x0, x0, #34
   3b444:	adds	x0, x26, x0
   3b448:	cinc	x25, x25, cs  // cs = hs, nlast
   3b44c:	cmp	x25, #0x0
   3b450:	sub	x4, x0, x19
   3b454:	ccmp	x19, x0, #0x0, eq  // eq = none
   3b458:	csel	x0, x4, x0, ls  // ls = plast
   3b45c:	b	3b270 <PyInit__decimal@@Base+0x210d0>
   3b460:	lsr	x1, x1, #24
   3b464:	sub	x3, x25, x26
   3b468:	cmp	x25, x3
   3b46c:	sbc	x1, x1, xzr
   3b470:	lsl	x26, x26, #40
   3b474:	adds	x3, x3, x26
   3b478:	cinc	x1, x1, cs  // cs = hs, nlast
   3b47c:	lsr	x30, x1, #24
   3b480:	sub	x26, x3, x1
   3b484:	cmp	x3, x26
   3b488:	sbc	x30, x30, xzr
   3b48c:	lsl	x25, x1, #40
   3b490:	adds	x1, x26, x25
   3b494:	cinc	x30, x30, cs  // cs = hs, nlast
   3b498:	lsr	x25, x30, #24
   3b49c:	sub	x3, x1, x30
   3b4a0:	cmp	x1, x3
   3b4a4:	sbc	x25, x25, xzr
   3b4a8:	lsl	x1, x30, #40
   3b4ac:	adds	x3, x3, x1
   3b4b0:	cinc	x25, x25, cs  // cs = hs, nlast
   3b4b4:	cmp	x25, #0x0
   3b4b8:	sub	x1, x3, x19
   3b4bc:	ccmp	x19, x3, #0x0, eq  // eq = none
   3b4c0:	csel	x3, x1, x3, ls  // ls = plast
   3b4c4:	mov	x25, x0
   3b4c8:	mul	x30, x2, x0
   3b4cc:	umulh	x0, x2, x0
   3b4d0:	lsr	x1, x0, #24
   3b4d4:	sub	x26, x30, x0
   3b4d8:	cmp	x26, x30
   3b4dc:	cset	x2, hi  // hi = pmore
   3b4e0:	sub	x1, x1, x2
   3b4e4:	lsl	x0, x0, #40
   3b4e8:	adds	x26, x26, x0
   3b4ec:	cinc	x1, x1, cs  // cs = hs, nlast
   3b4f0:	lsr	x0, x1, #24
   3b4f4:	sub	x2, x26, x1
   3b4f8:	cmp	x26, x2
   3b4fc:	sbc	x0, x0, xzr
   3b500:	lsl	x1, x1, #40
   3b504:	adds	x1, x2, x1
   3b508:	cinc	x0, x0, cs  // cs = hs, nlast
   3b50c:	lsr	x26, x0, #24
   3b510:	sub	x2, x1, x0
   3b514:	cmp	x1, x2
   3b518:	sbc	x26, x26, xzr
   3b51c:	lsl	x0, x0, #40
   3b520:	adds	x2, x2, x0
   3b524:	cinc	x26, x26, cs  // cs = hs, nlast
   3b528:	cmp	x26, #0x0
   3b52c:	sub	x0, x2, x19
   3b530:	ccmp	x19, x2, #0x0, eq  // eq = none
   3b534:	csel	x2, x0, x2, ls  // ls = plast
   3b538:	mul	x1, x4, x14
   3b53c:	umulh	x4, x4, x14
   3b540:	lsr	x0, x4, #24
   3b544:	sub	x26, x1, x4
   3b548:	cmp	x1, x26
   3b54c:	sbc	x0, x0, xzr
   3b550:	lsl	x4, x4, #40
   3b554:	adds	x4, x26, x4
   3b558:	cinc	x0, x0, cs  // cs = hs, nlast
   3b55c:	lsr	x1, x0, #24
   3b560:	sub	x30, x4, x0
   3b564:	cmp	x4, x30
   3b568:	sbc	x1, x1, xzr
   3b56c:	lsl	x4, x0, #40
   3b570:	adds	x0, x30, x4
   3b574:	cinc	x1, x1, cs  // cs = hs, nlast
   3b578:	lsr	x26, x1, #24
   3b57c:	sub	x4, x0, x1
   3b580:	cmp	x0, x4
   3b584:	sbc	x26, x26, xzr
   3b588:	lsl	x0, x1, #40
   3b58c:	adds	x1, x4, x0
   3b590:	cinc	x26, x26, cs  // cs = hs, nlast
   3b594:	cmp	x26, #0x0
   3b598:	sub	x0, x1, x19
   3b59c:	ccmp	x19, x1, #0x0, eq  // eq = none
   3b5a0:	csel	x1, x0, x1, ls  // ls = plast
   3b5a4:	mul	x30, x16, x25
   3b5a8:	umulh	x25, x16, x25
   3b5ac:	lsr	x4, x25, #24
   3b5b0:	sub	x0, x30, x25
   3b5b4:	cmp	x0, x30
   3b5b8:	cset	x26, hi  // hi = pmore
   3b5bc:	sub	x4, x4, x26
   3b5c0:	lsl	x25, x25, #40
   3b5c4:	adds	x26, x0, x25
   3b5c8:	cinc	x4, x4, cs  // cs = hs, nlast
   3b5cc:	lsr	x0, x4, #24
   3b5d0:	sub	x25, x26, x4
   3b5d4:	cmp	x26, x25
   3b5d8:	sbc	x0, x0, xzr
   3b5dc:	lsl	x4, x4, #40
   3b5e0:	adds	x4, x25, x4
   3b5e4:	cinc	x0, x0, cs  // cs = hs, nlast
   3b5e8:	lsr	x26, x0, #24
   3b5ec:	sub	x30, x4, x0
   3b5f0:	cmp	x4, x30
   3b5f4:	sbc	x26, x26, xzr
   3b5f8:	lsl	x0, x0, #40
   3b5fc:	adds	x0, x30, x0
   3b600:	cinc	x26, x26, cs  // cs = hs, nlast
   3b604:	cmp	x26, #0x0
   3b608:	sub	x4, x0, x19
   3b60c:	ccmp	x19, x0, #0x0, eq  // eq = none
   3b610:	csel	x0, x4, x0, ls  // ls = plast
   3b614:	b	3b270 <PyInit__decimal@@Base+0x210d0>
   3b618:	add	x7, x7, #0x1
   3b61c:	cmp	x22, x7
   3b620:	b.eq	3b6b8 <PyInit__decimal@@Base+0x21518>  // b.none
   3b624:	mov	x1, x9
   3b628:	mov	x3, x7
   3b62c:	mov	x0, x8
   3b630:	cbnz	x7, 3aeb4 <PyInit__decimal@@Base+0x20d14>
   3b634:	and	x17, x19, #0x100000000
   3b638:	tbnz	x19, #32, 3b10c <PyInit__decimal@@Base+0x20f6c>
   3b63c:	mov	x1, x5
   3b640:	cbnz	x5, 3b11c <PyInit__decimal@@Base+0x20f7c>
   3b644:	mov	x13, x12
   3b648:	lsr	x3, x1, #24
   3b64c:	sub	x2, x13, x1
   3b650:	cmp	x2, x13
   3b654:	cset	x4, hi  // hi = pmore
   3b658:	sub	x3, x3, x4
   3b65c:	lsl	x1, x1, #40
   3b660:	adds	x1, x2, x1
   3b664:	cinc	x3, x3, cs  // cs = hs, nlast
   3b668:	lsr	x2, x3, #24
   3b66c:	sub	x4, x1, x3
   3b670:	cmp	x1, x4
   3b674:	sbc	x2, x2, xzr
   3b678:	lsl	x3, x3, #40
   3b67c:	adds	x3, x4, x3
   3b680:	cinc	x2, x2, cs  // cs = hs, nlast
   3b684:	lsr	x1, x2, #24
   3b688:	sub	x14, x3, x2
   3b68c:	cmp	x3, x14
   3b690:	sbc	x1, x1, xzr
   3b694:	lsl	x2, x2, #40
   3b698:	adds	x14, x14, x2
   3b69c:	cinc	x1, x1, cs  // cs = hs, nlast
   3b6a0:	cmp	x1, #0x0
   3b6a4:	mov	x17, #0x0                   	// #0
   3b6a8:	ccmp	x19, x14, #0x0, eq  // eq = none
   3b6ac:	b.hi	3b0ec <PyInit__decimal@@Base+0x20f4c>  // b.pmore
   3b6b0:	sub	x14, x14, x19
   3b6b4:	b	3b0ec <PyInit__decimal@@Base+0x20f4c>
   3b6b8:	mov	x2, x20
   3b6bc:	mov	x1, x22
   3b6c0:	mov	x0, x23
   3b6c4:	bl	3be24 <PyInit__decimal@@Base+0x21c84>
   3b6c8:	mov	w19, w0
   3b6cc:	cbz	w0, 3b77c <PyInit__decimal@@Base+0x215dc>
   3b6d0:	cmp	x20, x22
   3b6d4:	b.eq	3b700 <PyInit__decimal@@Base+0x21560>  // b.none
   3b6d8:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3b6dc:	ldr	x1, [x0, #1704]
   3b6e0:	mov	x0, x21
   3b6e4:	blr	x1
   3b6e8:	mov	w2, w28
   3b6ec:	mov	w1, #0x1                   	// #1
   3b6f0:	mov	x0, x22
   3b6f4:	bl	39c14 <PyInit__decimal@@Base+0x1fa74>
   3b6f8:	mov	x21, x0
   3b6fc:	cbz	x0, 3b798 <PyInit__decimal@@Base+0x215f8>
   3b700:	cmp	x23, x24
   3b704:	b.cs	3b734 <PyInit__decimal@@Base+0x21594>  // b.hs, b.nlast
   3b708:	mov	x25, #0x8                   	// #8
   3b70c:	ldrb	w0, [sp, #108]
   3b710:	lsl	x25, x25, x0
   3b714:	mov	x19, x23
   3b718:	mov	x2, x21
   3b71c:	mov	x1, x22
   3b720:	mov	x0, x19
   3b724:	bl	1f290 <PyInit__decimal@@Base+0x50f0>
   3b728:	add	x19, x19, x25
   3b72c:	cmp	x19, x24
   3b730:	b.cc	3b718 <PyInit__decimal@@Base+0x21578>  // b.lo, b.ul, b.last
   3b734:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3b738:	ldr	x1, [x0, #1704]
   3b73c:	mov	x0, x21
   3b740:	blr	x1
   3b744:	mov	x2, x22
   3b748:	mov	x1, x20
   3b74c:	mov	x0, x23
   3b750:	bl	3be24 <PyInit__decimal@@Base+0x21c84>
   3b754:	cmp	w0, #0x0
   3b758:	cset	w19, ne  // ne = any
   3b75c:	mov	w0, w19
   3b760:	ldp	x19, x20, [sp, #16]
   3b764:	ldp	x21, x22, [sp, #32]
   3b768:	ldp	x23, x24, [sp, #48]
   3b76c:	ldp	x25, x26, [sp, #64]
   3b770:	ldp	x27, x28, [sp, #80]
   3b774:	ldp	x29, x30, [sp], #112
   3b778:	ret
   3b77c:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3b780:	ldr	x1, [x0, #1704]
   3b784:	mov	x0, x21
   3b788:	blr	x1
   3b78c:	b	3b75c <PyInit__decimal@@Base+0x215bc>
   3b790:	mov	w19, #0x0                   	// #0
   3b794:	b	3b75c <PyInit__decimal@@Base+0x215bc>
   3b798:	mov	w19, #0x0                   	// #0
   3b79c:	b	3b75c <PyInit__decimal@@Base+0x215bc>
   3b7a0:	sub	sp, sp, #0xf0
   3b7a4:	sub	sp, sp, #0x10, lsl #12
   3b7a8:	stp	x29, x30, [sp]
   3b7ac:	mov	x29, sp
   3b7b0:	stp	x25, x26, [sp, #64]
   3b7b4:	str	x0, [sp, #96]
   3b7b8:	str	x1, [sp, #200]
   3b7bc:	mov	x25, x2
   3b7c0:	cbz	w3, 3b860 <PyInit__decimal@@Base+0x216c0>
   3b7c4:	mov	x0, #0x2                   	// #2
   3b7c8:	str	x0, [sp, #216]
   3b7cc:	cmp	w3, #0x1
   3b7d0:	b.ne	3b84c <PyInit__decimal@@Base+0x216ac>  // b.any
   3b7d4:	stp	x19, x20, [sp, #16]
   3b7d8:	stp	x27, x28, [sp, #80]
   3b7dc:	ldr	x19, [sp, #200]
   3b7e0:	lsr	x0, x19, #3
   3b7e4:	mov	x1, #0x8                   	// #8
   3b7e8:	add	x0, x0, #0x1
   3b7ec:	bl	25178 <PyInit__decimal@@Base+0xafd8>
   3b7f0:	mov	x28, x0
   3b7f4:	cbz	x0, 3ba88 <PyInit__decimal@@Base+0x218e8>
   3b7f8:	cbz	x19, 3ba58 <PyInit__decimal@@Base+0x218b8>
   3b7fc:	stp	x21, x22, [sp, #32]
   3b800:	stp	x23, x24, [sp, #48]
   3b804:	sub	x0, x25, #0x1
   3b808:	str	x0, [sp, #104]
   3b80c:	lsr	x0, x25, #1
   3b810:	str	x0, [sp, #144]
   3b814:	lsl	x0, x25, #1
   3b818:	str	x0, [sp, #208]
   3b81c:	str	x25, [sp, #192]
   3b820:	mov	x26, #0x1                   	// #1
   3b824:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27e60>
   3b828:	add	x0, x0, #0xe58
   3b82c:	str	x0, [sp, #120]
   3b830:	ldr	x27, [sp, #216]
   3b834:	add	x0, sp, #0xf0
   3b838:	str	x0, [sp, #224]
   3b83c:	add	x0, sp, #0x8, lsl #12
   3b840:	add	x0, x0, #0xf0
   3b844:	str	x0, [sp, #232]
   3b848:	b	3b9dc <PyInit__decimal@@Base+0x2183c>
   3b84c:	stp	x19, x20, [sp, #16]
   3b850:	stp	x21, x22, [sp, #32]
   3b854:	stp	x23, x24, [sp, #48]
   3b858:	stp	x27, x28, [sp, #80]
   3b85c:	bl	67c0 <abort@plt>
   3b860:	stp	x19, x20, [sp, #16]
   3b864:	stp	x27, x28, [sp, #80]
   3b868:	ldr	x0, [sp, #200]
   3b86c:	str	x0, [sp, #216]
   3b870:	b	3b7dc <PyInit__decimal@@Base+0x2163c>
   3b874:	mov	x0, x22
   3b878:	mov	x22, x21
   3b87c:	mov	x21, x0
   3b880:	add	x20, x20, x24
   3b884:	mov	x2, x23
   3b888:	mov	x1, x20
   3b88c:	mov	x0, x22
   3b890:	bl	6470 <memcpy@plt>
   3b894:	mov	x2, x23
   3b898:	mov	x1, x21
   3b89c:	mov	x0, x20
   3b8a0:	bl	6470 <memcpy@plt>
   3b8a4:	lsr	x1, x19, #6
   3b8a8:	and	x2, x19, #0x3f
   3b8ac:	ldr	x0, [x28, x1, lsl #3]
   3b8b0:	ldr	x3, [sp, #120]
   3b8b4:	ldr	x2, [x3, x2, lsl #3]
   3b8b8:	orr	x0, x0, x2
   3b8bc:	str	x0, [x28, x1, lsl #3]
   3b8c0:	mul	x20, x19, x27
   3b8c4:	umulh	x1, x19, x27
   3b8c8:	ldr	x2, [sp, #112]
   3b8cc:	mov	x3, #0x0                   	// #0
   3b8d0:	mov	x0, x20
   3b8d4:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   3b8d8:	ldr	x1, [sp, #104]
   3b8dc:	msub	x19, x1, x0, x20
   3b8e0:	mul	x20, x25, x19
   3b8e4:	lsr	x20, x20, #1
   3b8e8:	ldr	x0, [sp, #96]
   3b8ec:	add	x20, x0, x20, lsl #3
   3b8f0:	cmp	x19, x26
   3b8f4:	b.ne	3b874 <PyInit__decimal@@Base+0x216d4>  // b.any
   3b8f8:	mov	x2, x23
   3b8fc:	mov	x1, x22
   3b900:	add	x0, x20, x24
   3b904:	bl	6470 <memcpy@plt>
   3b908:	ldr	x1, [sp, #152]
   3b90c:	ldr	x0, [x1]
   3b910:	ldr	x2, [sp, #160]
   3b914:	orr	x0, x0, x2
   3b918:	str	x0, [x1]
   3b91c:	ldr	x0, [sp, #136]
   3b920:	add	x0, x0, #0x8, lsl #12
   3b924:	str	x0, [sp, #136]
   3b928:	ldr	x0, [sp, #128]
   3b92c:	ldr	x1, [sp, #144]
   3b930:	cmp	x0, x1
   3b934:	b.cs	3b9bc <PyInit__decimal@@Base+0x2181c>  // b.hs, b.nlast
   3b938:	ldr	x0, [sp, #128]
   3b93c:	mov	x24, x0
   3b940:	add	x0, x0, #0x1, lsl #12
   3b944:	str	x0, [sp, #128]
   3b948:	ldr	x1, [sp, #144]
   3b94c:	sub	x23, x1, x24
   3b950:	cmp	x0, x1
   3b954:	mov	x0, #0x1000                	// #4096
   3b958:	csel	x23, x23, x0, cs  // cs = hs, nlast
   3b95c:	lsl	x24, x24, #3
   3b960:	lsl	x23, x23, #3
   3b964:	mov	x2, x23
   3b968:	ldr	x1, [sp, #136]
   3b96c:	mov	x0, x21
   3b970:	bl	6470 <memcpy@plt>
   3b974:	ldr	x2, [sp, #112]
   3b978:	mov	x3, #0x0                   	// #0
   3b97c:	ldr	x0, [sp, #176]
   3b980:	ldr	x1, [sp, #184]
   3b984:	bl	3bfe8 <PyInit__decimal@@Base+0x21e48>
   3b988:	ldr	x1, [sp, #104]
   3b98c:	ldr	x2, [sp, #168]
   3b990:	msub	x19, x1, x0, x2
   3b994:	mul	x20, x25, x19
   3b998:	lsr	x20, x20, #1
   3b99c:	ldr	x0, [sp, #96]
   3b9a0:	add	x20, x0, x20, lsl #3
   3b9a4:	cmp	x19, x26
   3b9a8:	b.ne	3b880 <PyInit__decimal@@Base+0x216e0>  // b.any
   3b9ac:	mov	x0, x21
   3b9b0:	mov	x21, x22
   3b9b4:	mov	x22, x0
   3b9b8:	b	3b8f8 <PyInit__decimal@@Base+0x21758>
   3b9bc:	add	x26, x26, #0x2
   3b9c0:	ldr	x0, [sp, #192]
   3b9c4:	ldr	x1, [sp, #208]
   3b9c8:	add	x0, x0, x1
   3b9cc:	str	x0, [sp, #192]
   3b9d0:	ldr	x0, [sp, #200]
   3b9d4:	cmp	x0, x26
   3b9d8:	b.cc	3ba50 <PyInit__decimal@@Base+0x218b0>  // b.lo, b.ul, b.last
   3b9dc:	lsr	x0, x26, #6
   3b9e0:	add	x1, x28, x0, lsl #3
   3b9e4:	str	x1, [sp, #152]
   3b9e8:	and	x1, x26, #0x3f
   3b9ec:	ldr	x2, [sp, #120]
   3b9f0:	ldr	x1, [x2, x1, lsl #3]
   3b9f4:	str	x1, [sp, #160]
   3b9f8:	ldr	x0, [x28, x0, lsl #3]
   3b9fc:	ands	x0, x1, x0
   3ba00:	str	x0, [sp, #128]
   3ba04:	b.ne	3b9bc <PyInit__decimal@@Base+0x2181c>  // b.any
   3ba08:	cmp	x25, #0x1
   3ba0c:	b.ls	3b9bc <PyInit__decimal@@Base+0x2181c>  // b.plast
   3ba10:	ldr	x1, [sp, #216]
   3ba14:	mul	x0, x26, x1
   3ba18:	umulh	x1, x26, x1
   3ba1c:	str	x0, [sp, #176]
   3ba20:	str	x1, [sp, #184]
   3ba24:	str	x0, [sp, #168]
   3ba28:	ldr	x0, [sp, #192]
   3ba2c:	lsr	x0, x0, #1
   3ba30:	ldr	x1, [sp, #96]
   3ba34:	add	x0, x1, x0, lsl #3
   3ba38:	str	x0, [sp, #136]
   3ba3c:	ldr	x22, [sp, #224]
   3ba40:	ldr	x21, [sp, #232]
   3ba44:	ldr	x0, [sp, #104]
   3ba48:	str	x0, [sp, #112]
   3ba4c:	b	3b938 <PyInit__decimal@@Base+0x21798>
   3ba50:	ldp	x21, x22, [sp, #32]
   3ba54:	ldp	x23, x24, [sp, #48]
   3ba58:	adrp	x0, 5e000 <PyInit__decimal@@Base+0x43e60>
   3ba5c:	ldr	x1, [x0, #1704]
   3ba60:	mov	x0, x28
   3ba64:	blr	x1
   3ba68:	mov	w0, #0x1                   	// #1
   3ba6c:	ldp	x19, x20, [sp, #16]
   3ba70:	ldp	x27, x28, [sp, #80]
   3ba74:	ldp	x25, x26, [sp, #64]
   3ba78:	ldp	x29, x30, [sp]
   3ba7c:	add	sp, sp, #0xf0
   3ba80:	add	sp, sp, #0x10, lsl #12
   3ba84:	ret
   3ba88:	mov	w0, #0x0                   	// #0
   3ba8c:	b	3ba6c <PyInit__decimal@@Base+0x218cc>
   3ba90:	sub	sp, sp, #0xd0
   3ba94:	sub	sp, sp, #0x40, lsl #12
   3ba98:	stp	x29, x30, [sp]
   3ba9c:	mov	x29, sp
   3baa0:	stp	x27, x28, [sp, #80]
   3baa4:	mov	x27, x1
   3baa8:	str	x1, [sp, #128]
   3baac:	cmp	x1, #0x80
   3bab0:	b.ls	3bb34 <PyInit__decimal@@Base+0x21994>  // b.plast
   3bab4:	stp	x19, x20, [sp, #16]
   3bab8:	stp	x21, x22, [sp, #32]
   3babc:	stp	x23, x24, [sp, #48]
   3bac0:	stp	x25, x26, [sp, #64]
   3bac4:	lsr	x27, x27, #1
   3bac8:	cmp	x27, #0x80
   3bacc:	b.hi	3bac4 <PyInit__decimal@@Base+0x21924>  // b.pmore
   3bad0:	lsl	x19, x27, #3
   3bad4:	ldr	x1, [sp, #128]
   3bad8:	lsl	x20, x1, #3
   3badc:	add	x1, x20, #0x8
   3bae0:	mul	x1, x1, x27
   3bae4:	str	x1, [sp, #200]
   3bae8:	str	x0, [sp, #192]
   3baec:	mul	x1, x20, x27
   3baf0:	str	x1, [sp, #152]
   3baf4:	add	x28, x19, #0x8
   3baf8:	add	x1, sp, #0x20, lsl #12
   3bafc:	add	x1, x1, #0xd0
   3bb00:	add	x1, x1, x19
   3bb04:	str	x1, [sp, #160]
   3bb08:	add	x1, sp, #0xd0
   3bb0c:	add	x1, x1, x19
   3bb10:	str	x1, [sp, #184]
   3bb14:	str	x0, [sp, #144]
   3bb18:	str	xzr, [sp, #136]
   3bb1c:	add	x0, sp, #0x20, lsl #12
   3bb20:	add	x0, x0, #0xd0
   3bb24:	str	x0, [sp, #168]
   3bb28:	sub	x0, x19, #0x8
   3bb2c:	str	x0, [sp, #104]
   3bb30:	b	3bd24 <PyInit__decimal@@Base+0x21b84>
   3bb34:	ldr	x1, [sp, #128]
   3bb38:	cbz	x1, 3bd5c <PyInit__decimal@@Base+0x21bbc>
   3bb3c:	stp	x19, x20, [sp, #16]
   3bb40:	stp	x21, x22, [sp, #32]
   3bb44:	stp	x23, x24, [sp, #48]
   3bb48:	stp	x25, x26, [sp, #64]
   3bb4c:	ldr	x27, [sp, #128]
   3bb50:	b	3bad0 <PyInit__decimal@@Base+0x21930>
   3bb54:	mov	x23, #0x0                   	// #0
   3bb58:	add	x21, sp, #0x20, lsl #12
   3bb5c:	add	x21, x21, #0xd0
   3bb60:	mov	x2, x19
   3bb64:	mov	x1, x21
   3bb68:	mov	x0, x22
   3bb6c:	bl	6470 <memcpy@plt>
   3bb70:	add	x21, x21, x19
   3bb74:	add	x22, x22, x20
   3bb78:	add	x23, x23, #0x1
   3bb7c:	cmp	x27, x23
   3bb80:	b.hi	3bb60 <PyInit__decimal@@Base+0x219c0>  // b.pmore
   3bb84:	b	3bc28 <PyInit__decimal@@Base+0x21a88>
   3bb88:	ldr	x4, [x0]
   3bb8c:	ldr	x5, [x1]
   3bb90:	str	x5, [x0], #8
   3bb94:	str	x4, [x1]
   3bb98:	add	x1, x1, x19
   3bb9c:	cmp	x3, x0
   3bba0:	b.ne	3bb88 <PyInit__decimal@@Base+0x219e8>  // b.any
   3bba4:	add	x2, x2, x28
   3bba8:	add	x3, x3, x19
   3bbac:	mov	x0, x6
   3bbb0:	add	x6, x0, #0x1
   3bbb4:	cmp	x23, x0
   3bbb8:	b.eq	3bbcc <PyInit__decimal@@Base+0x21a2c>  // b.none
   3bbbc:	ldr	x0, [sp, #104]
   3bbc0:	add	x1, x0, x2
   3bbc4:	mov	x0, x2
   3bbc8:	b	3bb88 <PyInit__decimal@@Base+0x219e8>
   3bbcc:	mov	x24, #0x0                   	// #0
   3bbd0:	add	x21, sp, #0x20, lsl #12
   3bbd4:	add	x21, x21, #0xd0
   3bbd8:	mov	x2, x19
   3bbdc:	mov	x1, x21
   3bbe0:	mov	x0, x26
   3bbe4:	bl	6470 <memcpy@plt>
   3bbe8:	add	x21, x21, x19
   3bbec:	add	x26, x26, x20
   3bbf0:	cmp	x23, x24
   3bbf4:	add	x24, x24, #0x1
   3bbf8:	b.ne	3bbd8 <PyInit__decimal@@Base+0x21a38>  // b.any
   3bbfc:	mov	x24, #0x0                   	// #0
   3bc00:	add	x21, sp, #0xd0
   3bc04:	mov	x2, x19
   3bc08:	mov	x1, x21
   3bc0c:	mov	x0, x22
   3bc10:	bl	6470 <memcpy@plt>
   3bc14:	add	x21, x21, x19
   3bc18:	add	x22, x22, x20
   3bc1c:	cmp	x23, x24
   3bc20:	add	x24, x24, #0x1
   3bc24:	b.ne	3bc04 <PyInit__decimal@@Base+0x21a64>  // b.any
   3bc28:	ldr	x0, [sp, #112]
   3bc2c:	add	x0, x0, x27
   3bc30:	str	x0, [sp, #112]
   3bc34:	ldr	x1, [sp, #120]
   3bc38:	ldr	x2, [sp, #152]
   3bc3c:	add	x1, x1, x2
   3bc40:	str	x1, [sp, #120]
   3bc44:	ldr	x1, [sp, #128]
   3bc48:	cmp	x1, x0
   3bc4c:	b.ls	3bcec <PyInit__decimal@@Base+0x21b4c>  // b.plast
   3bc50:	ldr	x0, [sp, #112]
   3bc54:	ldr	x1, [sp, #144]
   3bc58:	add	x22, x1, x0, lsl #3
   3bc5c:	cbz	x27, 3bc28 <PyInit__decimal@@Base+0x21a88>
   3bc60:	mov	x24, x22
   3bc64:	mov	x21, #0x0                   	// #0
   3bc68:	add	x23, sp, #0x20, lsl #12
   3bc6c:	add	x23, x23, #0xd0
   3bc70:	mov	x2, x19
   3bc74:	mov	x1, x24
   3bc78:	mov	x0, x23
   3bc7c:	bl	6470 <memcpy@plt>
   3bc80:	add	x24, x24, x20
   3bc84:	add	x23, x23, x19
   3bc88:	mov	x6, x21
   3bc8c:	add	x21, x21, #0x1
   3bc90:	cmp	x27, x21
   3bc94:	b.ne	3bc70 <PyInit__decimal@@Base+0x21ad0>  // b.any
   3bc98:	ldr	x0, [sp, #168]
   3bc9c:	add	x2, x0, #0x8
   3bca0:	ldr	x3, [sp, #160]
   3bca4:	mov	x0, #0x0                   	// #0
   3bca8:	add	x7, x0, #0x1
   3bcac:	cmp	x6, x0
   3bcb0:	b.eq	3bd70 <PyInit__decimal@@Base+0x21bd0>  // b.none
   3bcb4:	ldr	x0, [sp, #104]
   3bcb8:	add	x1, x0, x2
   3bcbc:	mov	x0, x2
   3bcc0:	ldr	x4, [x0]
   3bcc4:	ldr	x5, [x1]
   3bcc8:	str	x5, [x0], #8
   3bccc:	str	x4, [x1]
   3bcd0:	add	x1, x1, x19
   3bcd4:	cmp	x0, x3
   3bcd8:	b.ne	3bcc0 <PyInit__decimal@@Base+0x21b20>  // b.any
   3bcdc:	add	x2, x2, x28
   3bce0:	add	x3, x3, x19
   3bce4:	mov	x0, x7
   3bce8:	b	3bca8 <PyInit__decimal@@Base+0x21b08>
   3bcec:	ldr	x0, [sp, #136]
   3bcf0:	add	x0, x0, x27
   3bcf4:	str	x0, [sp, #136]
   3bcf8:	ldr	x1, [sp, #192]
   3bcfc:	ldr	x2, [sp, #200]
   3bd00:	add	x1, x1, x2
   3bd04:	str	x1, [sp, #192]
   3bd08:	ldr	x1, [sp, #144]
   3bd0c:	ldr	x2, [sp, #152]
   3bd10:	add	x1, x1, x2
   3bd14:	str	x1, [sp, #144]
   3bd18:	ldr	x1, [sp, #128]
   3bd1c:	cmp	x1, x0
   3bd20:	b.ls	3bd4c <PyInit__decimal@@Base+0x21bac>  // b.plast
   3bd24:	ldr	x0, [sp, #192]
   3bd28:	str	x0, [sp, #120]
   3bd2c:	ldr	x0, [sp, #136]
   3bd30:	str	x0, [sp, #112]
   3bd34:	add	x1, sp, #0xd0
   3bd38:	str	x1, [sp, #176]
   3bd3c:	ldr	x1, [sp, #128]
   3bd40:	cmp	x1, x0
   3bd44:	b.hi	3bc50 <PyInit__decimal@@Base+0x21ab0>  // b.pmore
   3bd48:	b	3bcec <PyInit__decimal@@Base+0x21b4c>
   3bd4c:	ldp	x19, x20, [sp, #16]
   3bd50:	ldp	x21, x22, [sp, #32]
   3bd54:	ldp	x23, x24, [sp, #48]
   3bd58:	ldp	x25, x26, [sp, #64]
   3bd5c:	ldp	x27, x28, [sp, #80]
   3bd60:	ldp	x29, x30, [sp]
   3bd64:	add	sp, sp, #0xd0
   3bd68:	add	sp, sp, #0x40, lsl #12
   3bd6c:	ret
   3bd70:	ldr	x0, [sp, #136]
   3bd74:	ldr	x1, [sp, #112]
   3bd78:	cmp	x0, x1
   3bd7c:	b.eq	3bb54 <PyInit__decimal@@Base+0x219b4>  // b.none
   3bd80:	ldr	x25, [sp, #120]
   3bd84:	mov	x26, x25
   3bd88:	mov	x21, #0x0                   	// #0
   3bd8c:	add	x24, sp, #0xd0
   3bd90:	mov	x2, x19
   3bd94:	mov	x1, x25
   3bd98:	mov	x0, x24
   3bd9c:	bl	6470 <memcpy@plt>
   3bda0:	add	x25, x25, x20
   3bda4:	add	x24, x24, x19
   3bda8:	mov	x23, x21
   3bdac:	add	x21, x21, #0x1
   3bdb0:	cmp	x27, x21
   3bdb4:	b.ne	3bd90 <PyInit__decimal@@Base+0x21bf0>  // b.any
   3bdb8:	ldr	x0, [sp, #176]
   3bdbc:	add	x2, x0, #0x8
   3bdc0:	ldr	x3, [sp, #184]
   3bdc4:	mov	x0, #0x0                   	// #0
   3bdc8:	b	3bbb0 <PyInit__decimal@@Base+0x21a10>
   3bdcc:	cbz	x2, 3be20 <PyInit__decimal@@Base+0x21c80>
   3bdd0:	lsl	x8, x2, #3
   3bdd4:	mov	x7, x3
   3bdd8:	mov	x10, #0x0                   	// #0
   3bddc:	mov	x9, #0x0                   	// #0
   3bde0:	b	3bdf8 <PyInit__decimal@@Base+0x21c58>
   3bde4:	add	x9, x9, #0x1
   3bde8:	add	x10, x10, x3
   3bdec:	add	x7, x7, x3
   3bdf0:	cmp	x2, x9
   3bdf4:	b.eq	3be20 <PyInit__decimal@@Base+0x21c80>  // b.none
   3bdf8:	cbz	x3, 3bde4 <PyInit__decimal@@Base+0x21c44>
   3bdfc:	add	x5, x0, x9, lsl #3
   3be00:	mov	x4, x10
   3be04:	ldr	x6, [x1, x4, lsl #3]
   3be08:	str	x6, [x5]
   3be0c:	add	x4, x4, #0x1
   3be10:	add	x5, x5, x8
   3be14:	cmp	x4, x7
   3be18:	b.ne	3be04 <PyInit__decimal@@Base+0x21c64>  // b.any
   3be1c:	b	3bde4 <PyInit__decimal@@Base+0x21c44>
   3be20:	ret
   3be24:	stp	x29, x30, [sp, #-48]!
   3be28:	mov	x29, sp
   3be2c:	stp	x19, x20, [sp, #16]
   3be30:	stp	x21, x22, [sp, #32]
   3be34:	mov	x21, x0
   3be38:	mul	x22, x1, x2
   3be3c:	umulh	x0, x1, x2
   3be40:	cbnz	x0, 3bebc <PyInit__decimal@@Base+0x21d1c>
   3be44:	mov	x20, x1
   3be48:	mov	x19, x2
   3be4c:	cmp	x1, x2
   3be50:	b.eq	3bf08 <PyInit__decimal@@Base+0x21d68>  // b.none
   3be54:	lsl	x0, x1, #1
   3be58:	tbnz	x1, #63, 3bf18 <PyInit__decimal@@Base+0x21d78>
   3be5c:	cmp	x2, x0
   3be60:	b.eq	3bf64 <PyInit__decimal@@Base+0x21dc4>  // b.none
   3be64:	lsl	x0, x2, #1
   3be68:	tbnz	x2, #63, 3bf98 <PyInit__decimal@@Base+0x21df8>
   3be6c:	cmp	x1, x0
   3be70:	b.ne	3bfe4 <PyInit__decimal@@Base+0x21e44>  // b.any
   3be74:	mov	x1, x2
   3be78:	mov	x0, x21
   3be7c:	bl	3ba90 <PyInit__decimal@@Base+0x218f0>
   3be80:	lsr	x0, x22, #1
   3be84:	mov	x1, x19
   3be88:	add	x0, x21, x0, lsl #3
   3be8c:	bl	3ba90 <PyInit__decimal@@Base+0x218f0>
   3be90:	mov	w3, #0x1                   	// #1
   3be94:	mov	x2, x20
   3be98:	mov	x1, x19
   3be9c:	mov	x0, x21
   3bea0:	bl	3b7a0 <PyInit__decimal@@Base+0x21600>
   3bea4:	cmp	w0, #0x0
   3bea8:	cset	w0, ne  // ne = any
   3beac:	ldp	x19, x20, [sp, #16]
   3beb0:	ldp	x21, x22, [sp, #32]
   3beb4:	ldp	x29, x30, [sp], #48
   3beb8:	ret
   3bebc:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   3bec0:	ldr	x19, [x19, #3904]
   3bec4:	mov	w3, #0x26c                 	// #620
   3bec8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3becc:	add	x2, x2, #0xc68
   3bed0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3bed4:	add	x1, x1, #0xca8
   3bed8:	ldr	x0, [x19]
   3bedc:	bl	6a70 <fprintf@plt>
   3bee0:	ldr	x3, [x19]
   3bee4:	mov	x2, #0x29                  	// #41
   3bee8:	mov	x1, #0x1                   	// #1
   3beec:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3bef0:	add	x0, x0, #0x328
   3bef4:	bl	6930 <fwrite@plt>
   3bef8:	ldr	x1, [x19]
   3befc:	mov	w0, #0xa                   	// #10
   3bf00:	bl	65b0 <fputc@plt>
   3bf04:	bl	67c0 <abort@plt>
   3bf08:	mov	x0, x21
   3bf0c:	bl	3ba90 <PyInit__decimal@@Base+0x218f0>
   3bf10:	mov	w0, #0x1                   	// #1
   3bf14:	b	3beac <PyInit__decimal@@Base+0x21d0c>
   3bf18:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   3bf1c:	ldr	x19, [x19, #3904]
   3bf20:	mov	w3, #0x26c                 	// #620
   3bf24:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3bf28:	add	x2, x2, #0xc68
   3bf2c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3bf30:	add	x1, x1, #0xca8
   3bf34:	ldr	x0, [x19]
   3bf38:	bl	6a70 <fprintf@plt>
   3bf3c:	ldr	x3, [x19]
   3bf40:	mov	x2, #0x29                  	// #41
   3bf44:	mov	x1, #0x1                   	// #1
   3bf48:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3bf4c:	add	x0, x0, #0x328
   3bf50:	bl	6930 <fwrite@plt>
   3bf54:	ldr	x1, [x19]
   3bf58:	mov	w0, #0xa                   	// #10
   3bf5c:	bl	65b0 <fputc@plt>
   3bf60:	bl	67c0 <abort@plt>
   3bf64:	mov	w3, #0x0                   	// #0
   3bf68:	mov	x0, x21
   3bf6c:	bl	3b7a0 <PyInit__decimal@@Base+0x21600>
   3bf70:	cbz	w0, 3beac <PyInit__decimal@@Base+0x21d0c>
   3bf74:	mov	x1, x20
   3bf78:	mov	x0, x21
   3bf7c:	bl	3ba90 <PyInit__decimal@@Base+0x218f0>
   3bf80:	lsr	x0, x22, #1
   3bf84:	mov	x1, x20
   3bf88:	add	x0, x21, x0, lsl #3
   3bf8c:	bl	3ba90 <PyInit__decimal@@Base+0x218f0>
   3bf90:	mov	w0, #0x1                   	// #1
   3bf94:	b	3beac <PyInit__decimal@@Base+0x21d0c>
   3bf98:	adrp	x19, 5b000 <PyInit__decimal@@Base+0x40e60>
   3bf9c:	ldr	x19, [x19, #3904]
   3bfa0:	mov	w3, #0x26c                 	// #620
   3bfa4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27e60>
   3bfa8:	add	x2, x2, #0xc68
   3bfac:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27e60>
   3bfb0:	add	x1, x1, #0xca8
   3bfb4:	ldr	x0, [x19]
   3bfb8:	bl	6a70 <fprintf@plt>
   3bfbc:	ldr	x3, [x19]
   3bfc0:	mov	x2, #0x29                  	// #41
   3bfc4:	mov	x1, #0x1                   	// #1
   3bfc8:	adrp	x0, 43000 <PyInit__decimal@@Base+0x28e60>
   3bfcc:	add	x0, x0, #0x328
   3bfd0:	bl	6930 <fwrite@plt>
   3bfd4:	ldr	x1, [x19]
   3bfd8:	mov	w0, #0xa                   	// #10
   3bfdc:	bl	65b0 <fputc@plt>
   3bfe0:	bl	67c0 <abort@plt>
   3bfe4:	bl	67c0 <abort@plt>
   3bfe8:	mov	x5, x0
   3bfec:	mov	x4, x1
   3bff0:	mov	x6, x2
   3bff4:	mov	x1, x3
   3bff8:	mov	x7, x0
   3bffc:	mov	x0, x4
   3c000:	cbnz	x3, 3c1fc <PyInit__decimal@@Base+0x2205c>
   3c004:	cmp	x2, x4
   3c008:	b.ls	3c0ac <PyInit__decimal@@Base+0x21f0c>  // b.plast
   3c00c:	clz	x3, x2
   3c010:	cbz	x3, 3c02c <PyInit__decimal@@Base+0x21e8c>
   3c014:	lsl	x6, x2, x3
   3c018:	lsl	x4, x4, x3
   3c01c:	neg	w0, w3
   3c020:	lsr	x0, x5, x0
   3c024:	orr	x0, x0, x4
   3c028:	lsl	x7, x5, x3
   3c02c:	lsr	x2, x6, #32
   3c030:	and	x3, x6, #0xffffffff
   3c034:	udiv	x5, x0, x2
   3c038:	msub	x4, x5, x2, x0
   3c03c:	mov	x0, x5
   3c040:	mul	x8, x3, x5
   3c044:	extr	x4, x4, x7, #32
   3c048:	cmp	x8, x4
   3c04c:	b.ls	3c064 <PyInit__decimal@@Base+0x21ec4>  // b.plast
   3c050:	add	x4, x4, x6
   3c054:	cmp	x8, x4
   3c058:	ccmp	x6, x4, #0x2, hi  // hi = pmore
   3c05c:	b.ls	3c0a0 <PyInit__decimal@@Base+0x21f00>  // b.plast
   3c060:	sub	x0, x5, #0x1
   3c064:	sub	x4, x4, x8
   3c068:	udiv	x5, x4, x2
   3c06c:	msub	x4, x5, x2, x4
   3c070:	mov	x2, x5
   3c074:	mul	x3, x3, x5
   3c078:	bfi	x7, x4, #32, #32
   3c07c:	cmp	x3, x7
   3c080:	b.ls	3c098 <PyInit__decimal@@Base+0x21ef8>  // b.plast
   3c084:	add	x7, x6, x7
   3c088:	cmp	x3, x7
   3c08c:	ccmp	x6, x7, #0x2, hi  // hi = pmore
   3c090:	cinc	x2, x5, hi  // hi = pmore
   3c094:	sub	x2, x2, #0x2
   3c098:	orr	x0, x2, x0, lsl #32
   3c09c:	b	3c33c <PyInit__decimal@@Base+0x2219c>
   3c0a0:	sub	x0, x5, #0x2
   3c0a4:	add	x4, x4, x6
   3c0a8:	b	3c064 <PyInit__decimal@@Base+0x21ec4>
   3c0ac:	cbnz	x2, 3c0bc <PyInit__decimal@@Base+0x21f1c>
   3c0b0:	mov	x6, #0x1                   	// #1
   3c0b4:	mov	x0, #0x0                   	// #0
   3c0b8:	udiv	x6, x6, x0
   3c0bc:	clz	x0, x6
   3c0c0:	cbnz	x0, 3c140 <PyInit__decimal@@Base+0x21fa0>
   3c0c4:	sub	x4, x4, x6
   3c0c8:	mov	x1, #0x1                   	// #1
   3c0cc:	lsr	x2, x6, #32
   3c0d0:	and	x3, x6, #0xffffffff
   3c0d4:	udiv	x5, x4, x2
   3c0d8:	msub	x4, x5, x2, x4
   3c0dc:	mov	x0, x5
   3c0e0:	mul	x8, x3, x5
   3c0e4:	extr	x4, x4, x7, #32
   3c0e8:	cmp	x8, x4
   3c0ec:	b.ls	3c104 <PyInit__decimal@@Base+0x21f64>  // b.plast
   3c0f0:	add	x4, x4, x6
   3c0f4:	cmp	x8, x4
   3c0f8:	ccmp	x6, x4, #0x2, hi  // hi = pmore
   3c0fc:	b.ls	3c1f0 <PyInit__decimal@@Base+0x22050>  // b.plast
   3c100:	sub	x0, x5, #0x1
   3c104:	sub	x4, x4, x8
   3c108:	udiv	x5, x4, x2
   3c10c:	msub	x4, x5, x2, x4
   3c110:	mov	x2, x5
   3c114:	mul	x3, x3, x5
   3c118:	bfi	x7, x4, #32, #32
   3c11c:	cmp	x3, x7
   3c120:	b.ls	3c138 <PyInit__decimal@@Base+0x21f98>  // b.plast
   3c124:	add	x7, x6, x7
   3c128:	cmp	x3, x7
   3c12c:	ccmp	x6, x7, #0x2, hi  // hi = pmore
   3c130:	cinc	x2, x5, hi  // hi = pmore
   3c134:	sub	x2, x2, #0x2
   3c138:	orr	x0, x2, x0, lsl #32
   3c13c:	b	3c33c <PyInit__decimal@@Base+0x2219c>
   3c140:	lsl	x6, x6, x0
   3c144:	mov	x1, #0x40                  	// #64
   3c148:	sub	x1, x1, x0
   3c14c:	lsr	x2, x4, x1
   3c150:	lsl	x4, x4, x0
   3c154:	lsr	x1, x5, x1
   3c158:	orr	x4, x1, x4
   3c15c:	lsl	x7, x5, x0
   3c160:	lsr	x3, x6, #32
   3c164:	and	x5, x6, #0xffffffff
   3c168:	udiv	x8, x2, x3
   3c16c:	msub	x2, x8, x3, x2
   3c170:	mov	x10, x8
   3c174:	mul	x9, x5, x8
   3c178:	extr	x0, x2, x4, #32
   3c17c:	cmp	x9, x0
   3c180:	b.ls	3c198 <PyInit__decimal@@Base+0x21ff8>  // b.plast
   3c184:	add	x0, x0, x6
   3c188:	cmp	x9, x0
   3c18c:	ccmp	x6, x0, #0x2, hi  // hi = pmore
   3c190:	b.ls	3c1d8 <PyInit__decimal@@Base+0x22038>  // b.plast
   3c194:	sub	x10, x8, #0x1
   3c198:	sub	x0, x0, x9
   3c19c:	udiv	x8, x0, x3
   3c1a0:	msub	x0, x8, x3, x0
   3c1a4:	mov	x1, x8
   3c1a8:	mul	x2, x5, x8
   3c1ac:	bfi	x4, x0, #32, #32
   3c1b0:	cmp	x2, x4
   3c1b4:	b.ls	3c1cc <PyInit__decimal@@Base+0x2202c>  // b.plast
   3c1b8:	add	x4, x4, x6
   3c1bc:	cmp	x2, x4
   3c1c0:	ccmp	x6, x4, #0x2, hi  // hi = pmore
   3c1c4:	b.ls	3c1e4 <PyInit__decimal@@Base+0x22044>  // b.plast
   3c1c8:	sub	x1, x8, #0x1
   3c1cc:	sub	x4, x4, x2
   3c1d0:	orr	x1, x1, x10, lsl #32
   3c1d4:	b	3c0cc <PyInit__decimal@@Base+0x21f2c>
   3c1d8:	sub	x10, x8, #0x2
   3c1dc:	add	x0, x0, x6
   3c1e0:	b	3c198 <PyInit__decimal@@Base+0x21ff8>
   3c1e4:	sub	x1, x8, #0x2
   3c1e8:	add	x4, x4, x6
   3c1ec:	b	3c1cc <PyInit__decimal@@Base+0x2202c>
   3c1f0:	sub	x0, x5, #0x2
   3c1f4:	add	x4, x4, x6
   3c1f8:	b	3c104 <PyInit__decimal@@Base+0x21f64>
   3c1fc:	cmp	x3, x4
   3c200:	b.hi	3c334 <PyInit__decimal@@Base+0x22194>  // b.pmore
   3c204:	clz	x1, x3
   3c208:	cbnz	x1, 3c218 <PyInit__decimal@@Base+0x22078>
   3c20c:	ccmp	x2, x5, #0x0, cs  // cs = hs, nlast
   3c210:	cset	x0, ls  // ls = plast
   3c214:	b	3c33c <PyInit__decimal@@Base+0x2219c>
   3c218:	lsl	x3, x3, x1
   3c21c:	mov	x0, #0x40                  	// #64
   3c220:	sub	x0, x0, x1
   3c224:	lsr	x6, x2, x0
   3c228:	orr	x3, x6, x3
   3c22c:	lsl	x2, x2, x1
   3c230:	lsr	x7, x4, x0
   3c234:	lsl	x4, x4, x1
   3c238:	lsr	x0, x5, x0
   3c23c:	orr	x4, x0, x4
   3c240:	lsr	x8, x3, #32
   3c244:	and	x9, x3, #0xffffffff
   3c248:	udiv	x10, x7, x8
   3c24c:	msub	x7, x10, x8, x7
   3c250:	mov	x0, x10
   3c254:	mul	x11, x9, x10
   3c258:	extr	x6, x7, x4, #32
   3c25c:	cmp	x11, x6
   3c260:	b.ls	3c278 <PyInit__decimal@@Base+0x220d8>  // b.plast
   3c264:	add	x6, x6, x3
   3c268:	cmp	x11, x6
   3c26c:	ccmp	x3, x6, #0x2, hi  // hi = pmore
   3c270:	b.ls	3c31c <PyInit__decimal@@Base+0x2217c>  // b.plast
   3c274:	sub	x0, x10, #0x1
   3c278:	sub	x6, x6, x11
   3c27c:	udiv	x10, x6, x8
   3c280:	msub	x6, x10, x8, x6
   3c284:	mov	x7, x10
   3c288:	mul	x8, x9, x10
   3c28c:	bfi	x4, x6, #32, #32
   3c290:	cmp	x8, x4
   3c294:	b.ls	3c2ac <PyInit__decimal@@Base+0x2210c>  // b.plast
   3c298:	add	x4, x4, x3
   3c29c:	cmp	x8, x4
   3c2a0:	ccmp	x3, x4, #0x2, hi  // hi = pmore
   3c2a4:	b.ls	3c328 <PyInit__decimal@@Base+0x22188>  // b.plast
   3c2a8:	sub	x7, x10, #0x1
   3c2ac:	sub	x4, x4, x8
   3c2b0:	orr	x0, x7, x0, lsl #32
   3c2b4:	mov	w7, w7
   3c2b8:	lsr	x3, x0, #32
   3c2bc:	and	x6, x2, #0xffffffff
   3c2c0:	lsr	x2, x2, #32
   3c2c4:	mul	x8, x7, x6
   3c2c8:	mul	x6, x3, x6
   3c2cc:	mul	x3, x3, x2
   3c2d0:	madd	x2, x7, x2, x6
   3c2d4:	add	x2, x2, x8, lsr #32
   3c2d8:	mov	x7, #0x100000000           	// #4294967296
   3c2dc:	add	x7, x3, x7
   3c2e0:	cmp	x6, x2
   3c2e4:	csel	x3, x7, x3, hi  // hi = pmore
   3c2e8:	add	x3, x3, x2, lsr #32
   3c2ec:	cmp	x4, x3
   3c2f0:	b.cc	3c310 <PyInit__decimal@@Base+0x22170>  // b.lo, b.ul, b.last
   3c2f4:	lsl	x5, x5, x1
   3c2f8:	and	x8, x8, #0xffffffff
   3c2fc:	add	x2, x8, x2, lsl #32
   3c300:	cmp	x5, x2
   3c304:	mov	x1, #0x0                   	// #0
   3c308:	ccmp	x4, x3, #0x0, cc  // cc = lo, ul, last
   3c30c:	b.ne	3c33c <PyInit__decimal@@Base+0x2219c>  // b.any
   3c310:	sub	x0, x0, #0x1
   3c314:	mov	x1, #0x0                   	// #0
   3c318:	b	3c33c <PyInit__decimal@@Base+0x2219c>
   3c31c:	sub	x0, x10, #0x2
   3c320:	add	x6, x6, x3
   3c324:	b	3c278 <PyInit__decimal@@Base+0x220d8>
   3c328:	sub	x7, x10, #0x2
   3c32c:	add	x4, x4, x3
   3c330:	b	3c2ac <PyInit__decimal@@Base+0x2210c>
   3c334:	mov	x1, #0x0                   	// #0
   3c338:	mov	x0, #0x0                   	// #0
   3c33c:	ret

Disassembly of section .fini:

000000000003c340 <.fini>:
   3c340:	stp	x29, x30, [sp, #-16]!
   3c344:	mov	x29, sp
   3c348:	ldp	x29, x30, [sp], #16
   3c34c:	ret
