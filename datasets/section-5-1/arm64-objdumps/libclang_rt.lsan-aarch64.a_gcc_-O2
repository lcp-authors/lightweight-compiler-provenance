In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.lsan-aarch64.a_gcc_-O2:

interception_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN14__interception17InterceptFunctionEPKcPmmm>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x19, x3
   8:	mov	x20, x0
   c:	stp	x21, x22, [sp, #16]
  10:	mov	x22, x2
  14:	mov	x21, x1
  18:	mov	x1, x0
  1c:	mov	x0, #0xffffffffffffffff    	// #-1
  20:	str	x30, [sp, #32]
  24:	bl	0 <dlsym>
  28:	cmp	x19, x22
  2c:	mov	x2, x0
  30:	cset	w22, eq  // eq = none
  34:	cbz	x0, 50 <_ZN14__interception17InterceptFunctionEPKcPmmm+0x50>
  38:	ldr	x30, [sp, #32]
  3c:	str	x2, [x21]
  40:	mov	w0, w22
  44:	ldp	x21, x22, [sp, #16]
  48:	ldp	x19, x20, [sp], #48
  4c:	ret
  50:	mov	x1, x20
  54:	bl	0 <dlsym>
  58:	mov	x2, x0
  5c:	cmp	x19, x0
  60:	b.eq	84 <_ZN14__interception17InterceptFunctionEPKcPmmm+0x84>  // b.none
  64:	cmp	x0, #0x0
  68:	ldr	x30, [sp, #32]
  6c:	str	x2, [x21]
  70:	csel	w22, w22, wzr, ne  // ne = any
  74:	mov	w0, w22
  78:	ldp	x21, x22, [sp, #16]
  7c:	ldp	x19, x20, [sp], #48
  80:	ret
  84:	mov	w22, #0x0                   	// #0
  88:	mov	x2, #0x0                   	// #0
  8c:	b	38 <_ZN14__interception17InterceptFunctionEPKcPmmm+0x38>

0000000000000090 <_ZN14__interception17InterceptFunctionEPKcS1_Pmmm>:
  90:	stp	x19, x20, [sp, #-32]!
  94:	mov	x5, x1
  98:	mov	x20, x3
  9c:	stp	x21, x30, [sp, #16]
  a0:	mov	x21, x2
  a4:	mov	x19, x4
  a8:	mov	x1, x0
  ac:	mov	x2, x5
  b0:	mov	x0, #0xffffffffffffffff    	// #-1
  b4:	bl	0 <dlvsym>
  b8:	cmp	x0, #0x0
  bc:	str	x0, [x21]
  c0:	ccmp	x20, x19, #0x0, ne  // ne = any
  c4:	cset	w0, eq  // eq = none
  c8:	ldp	x21, x30, [sp, #16]
  cc:	ldp	x19, x20, [sp], #32
  d0:	ret

interception_mac.cpp.o:     file format elf64-littleaarch64


interception_win.cpp.o:     file format elf64-littleaarch64


interception_type_test.cpp.o:     file format elf64-littleaarch64


sanitizer_allocator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>:
       0:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
       4:	mov	x2, x0
       8:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
       c:	add	x0, x0, #0x0
      10:	ldr	x1, [x1]
      14:	adrp	x3, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      18:	mov	w4, #0x1                   	// #1
      1c:	str	x30, [sp, #-16]!
      20:	strb	w4, [x3]
      24:	ldr	x1, [x1]
      28:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
      2c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000030 <_ZN11__sanitizer18internal_allocatorEv.part.0>:
      30:	stp	x19, x20, [sp, #-48]!
      34:	adrp	x19, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      38:	add	x0, x19, #0x0
      3c:	add	x0, x0, #0x8
      40:	mov	w2, #0x1                   	// #1
      44:	str	x30, [sp, #32]
      48:	ldxrb	w1, [x0]
      4c:	stxrb	w3, w2, [x0]
      50:	cbnz	w3, 48 <_ZN11__sanitizer18internal_allocatorEv.part.0+0x18>
      54:	dmb	ish
      58:	tst	w1, #0xff
      5c:	b.eq	64 <_ZN11__sanitizer18internal_allocatorEv.part.0+0x34>  // b.none
      60:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      64:	add	x0, x19, #0x0
      68:	ldrb	w0, [x0, #16]
      6c:	tst	w0, #0xff
      70:	b.eq	8c <_ZN11__sanitizer18internal_allocatorEv.part.0+0x5c>  // b.none
      74:	dmb	ish
      78:	add	x19, x19, #0x0
      7c:	strb	wzr, [x19, #8]
      80:	ldr	x30, [sp, #32]
      84:	ldp	x19, x20, [sp], #48
      88:	ret
      8c:	mov	x2, #0x28                  	// #40
      90:	mov	w1, #0x0                   	// #0
      94:	adrp	x20, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      98:	stp	x21, x22, [sp, #16]
      9c:	add	x21, x20, #0x0
      a0:	adrp	x22, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      a4:	add	x0, x22, #0x0
      a8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      ac:	add	x22, x22, #0x0
      b0:	add	x3, x21, #0xc0, lsl #12
      b4:	mov	x0, x21
      b8:	add	x21, x21, #0x80, lsl #12
      bc:	mov	x2, #0x80000               	// #524288
      c0:	mov	w1, #0x0                   	// #0
      c4:	str	x22, [x3, #4104]
      c8:	str	x22, [x3, #4112]
      cc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      d0:	strb	wzr, [x21]
      d4:	mov	x2, #0xd80                 	// #3456
      d8:	mov	w1, #0x0                   	// #0
      dc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      e0:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
      e4:	add	x0, x0, #0x0
      e8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      ec:	mov	x2, #0x248                 	// #584
      f0:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
      f4:	movk	x2, #0x4, lsl #16
      f8:	add	x0, x0, #0x0
      fc:	mov	w1, #0x0                   	// #0
     100:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     104:	ldr	x21, [x21]
     108:	ldr	x0, [x21]
     10c:	cbz	x0, 154 <_ZN11__sanitizer18internal_allocatorEv.part.0+0x124>
     110:	add	x20, x20, #0x0
     114:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     118:	add	x20, x20, #0x80, lsl #12
     11c:	add	x1, x1, #0x0
     120:	str	x0, [x20, #3520]
     124:	str	x1, [x20, #3528]
     128:	dmb	ish
     12c:	add	x0, x19, #0x0
     130:	mov	w1, #0x1                   	// #1
     134:	strb	w1, [x0, #16]
     138:	ldp	x21, x22, [sp, #16]
     13c:	dmb	ish
     140:	add	x19, x19, #0x0
     144:	strb	wzr, [x19, #8]
     148:	ldr	x30, [sp, #32]
     14c:	ldp	x19, x20, [sp], #48
     150:	ret
     154:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     158:	str	x0, [x21]
     15c:	b	110 <_ZN11__sanitizer18internal_allocatorEv.part.0+0xe0>

0000000000000160 <_ZN11__sanitizer18internal_allocatorEv>:
     160:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     164:	add	x0, x0, #0x0
     168:	ldrb	w0, [x0, #16]
     16c:	dmb	ish
     170:	and	w0, w0, #0xff
     174:	cbz	w0, 184 <_ZN11__sanitizer18internal_allocatorEv+0x24>
     178:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     17c:	add	x0, x0, #0x0
     180:	ret
     184:	str	x30, [sp, #-16]!
     188:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     18c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     190:	add	x0, x0, #0x0
     194:	ldr	x30, [sp], #16
     198:	ret
     19c:	nop

00000000000001a0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>:
     1a0:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     1a4:	stp	x19, x20, [sp, #-32]!
     1a8:	mov	x20, x0
     1ac:	ldr	x0, [x2]
     1b0:	str	x30, [sp, #24]
     1b4:	sub	x19, x0, #0x1
     1b8:	tst	x0, x19
     1bc:	b.ne	274 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xd4>  // b.any
     1c0:	ldp	x3, x2, [x20]
     1c4:	add	x1, x1, x19
     1c8:	neg	x19, x0
     1cc:	and	x19, x1, x19
     1d0:	sub	x0, x3, x2
     1d4:	cmp	x0, x19
     1d8:	b.ge	250 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xb0>  // b.tcont
     1dc:	str	x21, [sp, #16]
     1e0:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     1e4:	ldr	x21, [x21]
     1e8:	ldr	x0, [x21]
     1ec:	cbz	x0, 268 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xc8>
     1f0:	sub	x1, x0, #0x1
     1f4:	tst	x1, x0
     1f8:	b.ne	278 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xd8>  // b.any
     1fc:	add	x1, x19, x1
     200:	neg	x0, x0
     204:	and	x21, x1, x0
     208:	mov	w2, #0x0                   	// #0
     20c:	mov	x0, x21
     210:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     214:	add	x1, x1, #0x0
     218:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     21c:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     220:	mov	x2, x0
     224:	ldr	x3, [x1]
     228:	add	x1, x0, x21
     22c:	stp	x1, x0, [x20]
     230:	cbz	x3, 240 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xa0>
     234:	mov	x1, x21
     238:	blr	x3
     23c:	ldp	x1, x2, [x20]
     240:	sub	x1, x1, x2
     244:	cmp	x19, x1
     248:	b.gt	288 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0xe8>
     24c:	ldr	x21, [sp, #16]
     250:	add	x19, x2, x19
     254:	ldr	x30, [sp, #24]
     258:	str	x19, [x20, #8]
     25c:	mov	x0, x2
     260:	ldp	x19, x20, [sp], #32
     264:	ret
     268:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     26c:	str	x0, [x21]
     270:	b	1f0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm+0x50>
     274:	str	x21, [sp, #16]
     278:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     27c:	add	x0, x0, #0x0
     280:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     284:	bl	0 <_ZN11__sanitizer3DieEv>
     288:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     28c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     290:	add	x2, x2, #0x0
     294:	add	x0, x0, #0x0
     298:	mov	x4, #0x0                   	// #0
     29c:	mov	x3, #0x0                   	// #0
     2a0:	mov	w1, #0xe1                  	// #225
     2a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002a8 <_ZN11__sanitizer31SetLowLevelAllocateMinAlignmentEm>:
     2a8:	sub	x1, x0, #0x1
     2ac:	tst	x1, x0
     2b0:	b.ne	2cc <_ZN11__sanitizer31SetLowLevelAllocateMinAlignmentEm+0x24>  // b.any
     2b4:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     2b8:	ldr	x1, [x2]
     2bc:	cmp	x1, x0
     2c0:	csel	x0, x1, x0, cs  // cs = hs, nlast
     2c4:	str	x0, [x2]
     2c8:	ret
     2cc:	str	x30, [sp, #-16]!
     2d0:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     2d4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     2d8:	add	x2, x2, #0x0
     2dc:	add	x0, x0, #0x0
     2e0:	mov	x4, #0x0                   	// #0
     2e4:	mov	x3, #0x0                   	// #0
     2e8:	mov	w1, #0xe8                  	// #232
     2ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002f0 <_ZN11__sanitizer27SetLowLevelAllocateCallbackEPFvmmE>:
     2f0:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     2f4:	str	x0, [x1]
     2f8:	ret
     2fc:	nop

0000000000000300 <_ZN11__sanitizer22IsAllocatorOutOfMemoryEv>:
     300:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     304:	ldrb	w0, [x0]
     308:	tst	w0, #0xff
     30c:	cset	w0, ne  // ne = any
     310:	ret
     314:	nop

0000000000000318 <_ZN11__sanitizer23SetAllocatorOutOfMemoryEv>:
     318:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     31c:	mov	w1, #0x1                   	// #1
     320:	strb	w1, [x0]
     324:	ret

0000000000000328 <_ZN11__sanitizer22AllocatorMayReturnNullEv>:
     328:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     32c:	add	x0, x0, #0x0
     330:	ldrb	w0, [x0, #32]
     334:	tst	w0, #0xff
     338:	cset	w0, ne  // ne = any
     33c:	ret

0000000000000340 <_ZN11__sanitizer25SetAllocatorMayReturnNullEb>:
     340:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     344:	add	x1, x1, #0x0
     348:	and	w0, w0, #0xff
     34c:	strb	w0, [x1, #32]
     350:	ret
     354:	nop

0000000000000358 <_ZN11__sanitizer34PrintHintAllocatorCannotReturnNullEv>:
     358:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     35c:	add	x0, x0, #0x0
     360:	b	0 <_ZN11__sanitizer6ReportEPKcz>
     364:	nop

0000000000000368 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>:
     368:	cmn	x0, #0x9
     36c:	b.hi	450 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xe8>  // b.pmore
     370:	stp	x19, x20, [sp, #-48]!
     374:	cmp	x2, #0x0
     378:	add	x20, x0, #0x8
     37c:	str	x30, [sp, #24]
     380:	mov	x0, #0x8                   	// #8
     384:	csel	x19, x2, x0, ne  // ne = any
     388:	cbz	x1, 3dc <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x74>
     38c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     390:	add	x0, x0, #0x0
     394:	ldrb	w0, [x0, #16]
     398:	dmb	ish
     39c:	and	w0, w0, #0xff
     3a0:	cbz	w0, 460 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xf8>
     3a4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     3a8:	mov	x3, x19
     3ac:	mov	x2, x20
     3b0:	add	x0, x0, #0x0
     3b4:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     3b8:	cbz	x0, 470 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x108>
     3bc:	mov	x1, #0xc041                	// #49217
     3c0:	movk	x1, #0xbceb, lsl #16
     3c4:	movk	x1, #0xb03a, lsl #32
     3c8:	movk	x1, #0x6a6c, lsl #48
     3cc:	str	x1, [x0], #8
     3d0:	ldr	x30, [sp, #24]
     3d4:	ldp	x19, x20, [sp], #48
     3d8:	ret
     3dc:	str	x21, [sp, #16]
     3e0:	adrp	x21, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     3e4:	add	x0, x21, #0x0
     3e8:	mov	w2, #0x1                   	// #1
     3ec:	add	x0, x0, #0x28
     3f0:	ldxrb	w1, [x0]
     3f4:	stxrb	w3, w2, [x0]
     3f8:	cbnz	w3, 3f0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x88>
     3fc:	dmb	ish
     400:	tst	w1, #0xff
     404:	b.eq	40c <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xa4>  // b.none
     408:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     40c:	add	x0, x21, #0x0
     410:	ldrb	w0, [x0, #16]
     414:	dmb	ish
     418:	and	w0, w0, #0xff
     41c:	cbz	w0, 458 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xf0>
     420:	mov	x3, x19
     424:	mov	x2, x20
     428:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     42c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     430:	add	x1, x1, #0x0
     434:	add	x0, x0, #0x0
     438:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     43c:	dmb	ish
     440:	add	x21, x21, #0x0
     444:	strb	wzr, [x21, #40]
     448:	ldr	x21, [sp, #16]
     44c:	b	3b8 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x50>
     450:	mov	x0, #0x0                   	// #0
     454:	ret
     458:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     45c:	b	420 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0xb8>
     460:	str	x1, [sp, #40]
     464:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     468:	ldr	x1, [sp, #40]
     46c:	b	3a4 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm+0x3c>
     470:	mov	x0, x20
     474:	str	x21, [sp, #16]
     478:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     47c:	nop

0000000000000480 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
     480:	stp	x19, x20, [sp, #-48]!
     484:	mov	x19, x2
     488:	str	x30, [sp, #32]
     48c:	cbz	x0, 538 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xb8>
     490:	mov	x20, x1
     494:	umulh	x1, x1, x0
     498:	cbnz	x1, 5d0 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x150>
     49c:	mul	x20, x0, x20
     4a0:	cmn	x20, #0x9
     4a4:	b.hi	524 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa4>  // b.pmore
     4a8:	stp	x21, x22, [sp, #16]
     4ac:	add	x21, x20, #0x8
     4b0:	cbz	x19, 548 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xc8>
     4b4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     4b8:	add	x0, x0, #0x0
     4bc:	ldrb	w0, [x0, #16]
     4c0:	dmb	ish
     4c4:	and	w0, w0, #0xff
     4c8:	cbz	w0, 5b8 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x138>
     4cc:	mov	x1, x19
     4d0:	mov	x2, x21
     4d4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     4d8:	mov	x3, #0x8                   	// #8
     4dc:	add	x0, x0, #0x0
     4e0:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     4e4:	mov	x19, x0
     4e8:	cbz	x19, 5c0 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x140>
     4ec:	mov	x0, #0xc041                	// #49217
     4f0:	mov	x2, x20
     4f4:	movk	x0, #0xbceb, lsl #16
     4f8:	mov	w1, #0x0                   	// #0
     4fc:	movk	x0, #0xb03a, lsl #32
     500:	movk	x0, #0x6a6c, lsl #48
     504:	str	x0, [x19], #8
     508:	mov	x0, x19
     50c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     510:	mov	x0, x19
     514:	ldp	x21, x22, [sp, #16]
     518:	ldr	x30, [sp, #32]
     51c:	ldp	x19, x20, [sp], #48
     520:	ret
     524:	mov	x19, #0x0                   	// #0
     528:	mov	x0, x19
     52c:	ldr	x30, [sp, #32]
     530:	ldp	x19, x20, [sp], #48
     534:	ret
     538:	stp	x21, x22, [sp, #16]
     53c:	mov	x20, #0x0                   	// #0
     540:	add	x21, x20, #0x8
     544:	cbnz	x19, 4b4 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x34>
     548:	adrp	x22, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     54c:	add	x0, x22, #0x0
     550:	add	x0, x0, #0x28
     554:	mov	w2, #0x1                   	// #1
     558:	ldxrb	w1, [x0]
     55c:	stxrb	w3, w2, [x0]
     560:	cbnz	w3, 558 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xd8>
     564:	dmb	ish
     568:	tst	w1, #0xff
     56c:	b.eq	574 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xf4>  // b.none
     570:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     574:	add	x0, x22, #0x0
     578:	ldrb	w0, [x0, #16]
     57c:	dmb	ish
     580:	and	w0, w0, #0xff
     584:	cbz	w0, 5c8 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x148>
     588:	mov	x2, x21
     58c:	mov	x3, #0x8                   	// #8
     590:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     594:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     598:	add	x1, x1, #0x0
     59c:	add	x0, x0, #0x0
     5a0:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     5a4:	dmb	ish
     5a8:	mov	x19, x0
     5ac:	add	x22, x22, #0x0
     5b0:	strb	wzr, [x22, #40]
     5b4:	b	4e8 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x68>
     5b8:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     5bc:	b	4cc <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x4c>
     5c0:	mov	x0, x21
     5c4:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     5c8:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     5cc:	b	588 <_ZN11__sanitizer14InternalCallocEmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x108>
     5d0:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     5d4:	mov	x2, x0
     5d8:	mov	x3, x20
     5dc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     5e0:	ldr	x1, [x1]
     5e4:	add	x0, x0, #0x0
     5e8:	stp	x21, x22, [sp, #16]
     5ec:	ldr	x1, [x1]
     5f0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     5f4:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000005f8 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
     5f8:	stp	x19, x20, [sp, #-48]!
     5fc:	mov	x20, x1
     600:	mov	x1, x2
     604:	str	x30, [sp, #24]
     608:	cbz	x0, 700 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x108>
     60c:	cmn	x20, #0x9
     610:	b.hi	714 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x11c>  // b.pmore
     614:	mov	x3, #0xc041                	// #49217
     618:	add	x20, x20, #0x8
     61c:	ldur	x4, [x0, #-8]
     620:	movk	x3, #0xbceb, lsl #16
     624:	movk	x3, #0xb03a, lsl #32
     628:	sub	x19, x0, #0x8
     62c:	movk	x3, #0x6a6c, lsl #48
     630:	cmp	x4, x3
     634:	b.ne	734 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x13c>  // b.any
     638:	cbz	x2, 684 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x8c>
     63c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     640:	add	x0, x0, #0x0
     644:	ldrb	w0, [x0, #16]
     648:	dmb	ish
     64c:	and	w0, w0, #0xff
     650:	cbz	w0, 724 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x12c>
     654:	mov	x2, x19
     658:	mov	x3, x20
     65c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     660:	mov	x4, #0x8                   	// #8
     664:	add	x0, x0, #0x0
     668:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     66c:	mov	x1, x0
     670:	add	x0, x1, #0x8
     674:	cbz	x1, 750 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x158>
     678:	ldr	x30, [sp, #24]
     67c:	ldp	x19, x20, [sp], #48
     680:	ret
     684:	str	x21, [sp, #16]
     688:	adrp	x21, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     68c:	add	x0, x21, #0x0
     690:	mov	w2, #0x1                   	// #1
     694:	add	x0, x0, #0x28
     698:	ldxrb	w1, [x0]
     69c:	stxrb	w3, w2, [x0]
     6a0:	cbnz	w3, 698 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa0>
     6a4:	dmb	ish
     6a8:	tst	w1, #0xff
     6ac:	b.eq	6b4 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xbc>  // b.none
     6b0:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     6b4:	add	x0, x21, #0x0
     6b8:	ldrb	w0, [x0, #16]
     6bc:	dmb	ish
     6c0:	and	w0, w0, #0xff
     6c4:	cbz	w0, 75c <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x164>
     6c8:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     6cc:	add	x1, x1, #0x0
     6d0:	mov	x2, x19
     6d4:	mov	x3, x20
     6d8:	mov	x4, #0x8                   	// #8
     6dc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     6e0:	add	x0, x0, #0x0
     6e4:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     6e8:	dmb	ish
     6ec:	mov	x1, x0
     6f0:	add	x21, x21, #0x0
     6f4:	strb	wzr, [x21, #40]
     6f8:	ldr	x21, [sp, #16]
     6fc:	b	670 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x78>
     700:	mov	x0, x20
     704:	mov	x2, #0x0                   	// #0
     708:	ldr	x30, [sp, #24]
     70c:	ldp	x19, x20, [sp], #48
     710:	b	368 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     714:	mov	x0, #0x0                   	// #0
     718:	ldr	x30, [sp, #24]
     71c:	ldp	x19, x20, [sp], #48
     720:	ret
     724:	str	x2, [sp, #40]
     728:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     72c:	ldr	x1, [sp, #40]
     730:	b	654 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x5c>
     734:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     738:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     73c:	add	x2, x2, #0x0
     740:	add	x0, x0, #0x0
     744:	mov	w1, #0xa6                  	// #166
     748:	str	x21, [sp, #16]
     74c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     750:	mov	x0, x20
     754:	str	x21, [sp, #16]
     758:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     75c:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     760:	b	6c8 <_ZN11__sanitizer15InternalReallocEPvmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xd0>
     764:	nop

0000000000000768 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
     768:	stp	x19, x20, [sp, #-48]!
     76c:	mov	x5, x0
     770:	mov	x0, x1
     774:	str	x30, [sp, #24]
     778:	mov	x1, x3
     77c:	cbz	x0, 808 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa0>
     780:	umulh	x3, x2, x0
     784:	cbnz	x3, 8e8 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x180>
     788:	mul	x0, x0, x2
     78c:	cbz	x5, 80c <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xa4>
     790:	cmn	x0, #0x9
     794:	b.hi	898 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x130>  // b.pmore
     798:	mov	x3, #0xc041                	// #49217
     79c:	add	x19, x0, #0x8
     7a0:	ldur	x4, [x5, #-8]
     7a4:	movk	x3, #0xbceb, lsl #16
     7a8:	movk	x3, #0xb03a, lsl #32
     7ac:	sub	x20, x5, #0x8
     7b0:	movk	x3, #0x6a6c, lsl #48
     7b4:	cmp	x4, x3
     7b8:	b.ne	8b8 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x150>  // b.any
     7bc:	cbz	x1, 81c <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xb4>
     7c0:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     7c4:	add	x0, x0, #0x0
     7c8:	ldrb	w0, [x0, #16]
     7cc:	dmb	ish
     7d0:	and	w0, w0, #0xff
     7d4:	cbz	w0, 8a8 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x140>
     7d8:	mov	x2, x20
     7dc:	mov	x3, x19
     7e0:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     7e4:	mov	x4, #0x8                   	// #8
     7e8:	add	x0, x0, #0x0
     7ec:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     7f0:	mov	x1, x0
     7f4:	add	x0, x1, #0x8
     7f8:	cbz	x1, 8d4 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x16c>
     7fc:	ldr	x30, [sp, #24]
     800:	ldp	x19, x20, [sp], #48
     804:	ret
     808:	cbnz	x5, 798 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x30>
     80c:	ldr	x30, [sp, #24]
     810:	mov	x2, #0x0                   	// #0
     814:	ldp	x19, x20, [sp], #48
     818:	b	368 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     81c:	str	x21, [sp, #16]
     820:	adrp	x21, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     824:	add	x0, x21, #0x0
     828:	mov	w2, #0x1                   	// #1
     82c:	add	x0, x0, #0x28
     830:	ldxrb	w1, [x0]
     834:	stxrb	w3, w2, [x0]
     838:	cbnz	w3, 830 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xc8>
     83c:	dmb	ish
     840:	tst	w1, #0xff
     844:	b.eq	84c <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xe4>  // b.none
     848:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     84c:	add	x0, x21, #0x0
     850:	ldrb	w0, [x0, #16]
     854:	dmb	ish
     858:	and	w0, w0, #0xff
     85c:	cbz	w0, 8e0 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x178>
     860:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     864:	add	x1, x1, #0x0
     868:	mov	x2, x20
     86c:	mov	x3, x19
     870:	mov	x4, #0x8                   	// #8
     874:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     878:	add	x0, x0, #0x0
     87c:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     880:	dmb	ish
     884:	mov	x1, x0
     888:	add	x21, x21, #0x0
     88c:	strb	wzr, [x21, #40]
     890:	ldr	x21, [sp, #16]
     894:	b	7f4 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x8c>
     898:	mov	x0, #0x0                   	// #0
     89c:	ldr	x30, [sp, #24]
     8a0:	ldp	x19, x20, [sp], #48
     8a4:	ret
     8a8:	str	x1, [sp, #40]
     8ac:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     8b0:	ldr	x1, [sp, #40]
     8b4:	b	7d8 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x70>
     8b8:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     8bc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     8c0:	add	x2, x2, #0x0
     8c4:	add	x0, x0, #0x0
     8c8:	mov	w1, #0xa6                  	// #166
     8cc:	str	x21, [sp, #16]
     8d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     8d4:	mov	x0, x19
     8d8:	str	x21, [sp, #16]
     8dc:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     8e0:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     8e4:	b	860 <_ZN11__sanitizer20InternalReallocArrayEPvmmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xf8>
     8e8:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     8ec:	mov	x3, x2
     8f0:	mov	x2, x0
     8f4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     8f8:	ldr	x1, [x1]
     8fc:	add	x0, x0, #0x0
     900:	ldr	x1, [x1]
     904:	str	x21, [sp, #16]
     908:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     90c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000910 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>:
     910:	cbz	x0, c78 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x368>
     914:	stp	x19, x20, [sp, #-64]!
     918:	mov	x3, #0xc041                	// #49217
     91c:	movk	x3, #0xbceb, lsl #16
     920:	ldur	x4, [x0, #-8]
     924:	stp	x21, x22, [sp, #16]
     928:	movk	x3, #0xb03a, lsl #32
     92c:	str	x30, [sp, #48]
     930:	movk	x3, #0x6a6c, lsl #48
     934:	sub	x21, x0, #0x8
     938:	cmp	x4, x3
     93c:	b.ne	c5c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x34c>  // b.any
     940:	stur	xzr, [x0, #-8]
     944:	mov	x19, x1
     948:	cbz	x1, a78 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x168>
     94c:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     950:	add	x0, x0, #0x0
     954:	ldrb	w0, [x0, #16]
     958:	dmb	ish
     95c:	and	w0, w0, #0xff
     960:	cbz	w0, a70 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x160>
     964:	mov	x0, #0xffffffffffff        	// #281474976710655
     968:	adrp	x20, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     96c:	cmp	x21, x0
     970:	b.hi	994 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x84>  // b.pmore
     974:	lsr	x2, x21, #32
     978:	add	x1, x20, #0x0
     97c:	ldr	x0, [x1, x2, lsl #3]
     980:	dmb	ish
     984:	cbz	x0, 994 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x84>
     988:	lsr	w3, w21, #20
     98c:	ldrb	w0, [x0, x3]
     990:	cbnz	w0, c7c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x36c>
     994:	add	x0, x20, #0x0
     998:	add	x0, x0, #0x80, lsl #12
     99c:	ldr	x19, [x0, #3520]
     9a0:	sub	x0, x19, #0x1
     9a4:	tst	x21, x0
     9a8:	b.ne	cf8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x3e8>  // b.any
     9ac:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     9b0:	sub	x19, x21, x19
     9b4:	add	x0, x0, #0x0
     9b8:	mov	w2, #0x1                   	// #1
     9bc:	ldxrb	w1, [x0]
     9c0:	stxrb	w3, w2, [x0]
     9c4:	cbnz	w3, 9bc <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xac>
     9c8:	dmb	ish
     9cc:	tst	w1, #0xff
     9d0:	b.eq	9d8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0xc8>  // b.none
     9d4:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     9d8:	add	x20, x20, #0x0
     9dc:	add	x0, x20, #0x80, lsl #12
     9e0:	ldr	x1, [x19, #24]
     9e4:	ldr	x2, [x0, #3528]
     9e8:	ldr	x3, [x2, x1, lsl #3]
     9ec:	cmp	x3, x19
     9f0:	b.ne	d1c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x40c>  // b.any
     9f4:	add	x0, x20, #0xc0, lsl #12
     9f8:	ldr	x4, [x0, #3536]
     9fc:	cmp	x1, x4
     a00:	b.cs	d3c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x42c>  // b.hs, b.nlast
     a04:	sub	x4, x4, #0x1
     a08:	ldr	x3, [x19, #8]
     a0c:	str	x4, [x0, #3536]
     a10:	ldr	x4, [x2, x4, lsl #3]
     a14:	str	x4, [x2, x1, lsl #3]
     a18:	ldr	x2, [x0, #4120]
     a1c:	str	x1, [x4, #24]
     a20:	sub	x2, x2, x3
     a24:	str	x2, [x0, #4120]
     a28:	ldr	x4, [x0, #3560]
     a2c:	strb	wzr, [x0, #3544]
     a30:	ldr	x2, [x0, #3568]
     a34:	add	x4, x4, #0x1
     a38:	ldr	x1, [x0, #4128]
     a3c:	sub	x2, x2, x3
     a40:	str	x4, [x0, #3560]
     a44:	sub	x1, x1, x3
     a48:	str	x2, [x0, #3568]
     a4c:	str	x1, [x0, #4128]
     a50:	dmb	ish
     a54:	add	x20, x20, #0xc1, lsl #12
     a58:	strb	wzr, [x20]
     a5c:	ldp	x0, x1, [x19]
     a60:	ldp	x21, x22, [sp, #16]
     a64:	ldr	x30, [sp, #48]
     a68:	ldp	x19, x20, [sp], #64
     a6c:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     a70:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     a74:	b	964 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x54>
     a78:	adrp	x19, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     a7c:	add	x0, x19, #0x0
     a80:	add	x0, x0, #0x28
     a84:	mov	w2, #0x1                   	// #1
     a88:	ldxrb	w1, [x0]
     a8c:	stxrb	w3, w2, [x0]
     a90:	cbnz	w3, a88 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x178>
     a94:	dmb	ish
     a98:	tst	w1, #0xff
     a9c:	b.eq	aa4 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x194>  // b.none
     aa0:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     aa4:	add	x0, x19, #0x0
     aa8:	ldrb	w0, [x0, #16]
     aac:	dmb	ish
     ab0:	and	w0, w0, #0xff
     ab4:	cbz	w0, cf0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x3e0>
     ab8:	mov	x0, #0xffffffffffff        	// #281474976710655
     abc:	adrp	x20, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     ac0:	cmp	x21, x0
     ac4:	b.hi	b70 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x260>  // b.pmore
     ac8:	lsr	x2, x21, #32
     acc:	add	x1, x20, #0x0
     ad0:	ldr	x0, [x1, x2, lsl #3]
     ad4:	dmb	ish
     ad8:	cbz	x0, b70 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x260>
     adc:	lsr	w3, w21, #20
     ae0:	ldrb	w0, [x0, x3]
     ae4:	cbz	w0, b70 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x260>
     ae8:	stp	x23, x24, [sp, #32]
     aec:	ldr	x0, [x1, x2, lsl #3]
     af0:	dmb	ish
     af4:	cbz	x0, d5c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x44c>
     af8:	ldrb	w24, [x0, x3]
     afc:	cbz	x24, d5c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x44c>
     b00:	cmp	x24, #0x35
     b04:	b.hi	ef8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x5e8>  // b.pmore
     b08:	lsl	x23, x24, #10
     b0c:	adrp	x22, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     b10:	add	x6, x22, #0x0
     b14:	add	x0, x6, x23
     b18:	ldr	x2, [x0, #8]
     b1c:	cbz	x2, f28 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x618>
     b20:	add	x0, x22, #0x0
     b24:	add	x1, x0, x23
     b28:	ldr	x4, [x0, x23]
     b2c:	cmp	x4, x2
     b30:	b.eq	f18 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x608>  // b.none
     b34:	add	x22, x22, #0x0
     b38:	add	x1, x22, x23
     b3c:	add	x2, x22, #0x8, lsl #12
     b40:	ldr	x0, [x22, x23]
     b44:	ldr	x4, [x1, #16]
     b48:	add	x1, x0, #0x1
     b4c:	add	x0, x0, x24, lsl #7
     b50:	str	x1, [x22, x23]
     b54:	add	x0, x0, #0x4
     b58:	ldr	x1, [x2, #22544]
     b5c:	str	x21, [x22, x0, lsl #3]
     b60:	sub	x0, x1, x4
     b64:	ldp	x23, x24, [sp, #32]
     b68:	str	x0, [x2, #22544]
     b6c:	b	c40 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x330>
     b70:	add	x0, x20, #0x0
     b74:	add	x0, x0, #0x80, lsl #12
     b78:	ldr	x4, [x0, #3520]
     b7c:	sub	x0, x4, #0x1
     b80:	tst	x21, x0
     b84:	b.ne	d7c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x46c>  // b.any
     b88:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     b8c:	sub	x21, x21, x4
     b90:	add	x0, x0, #0x0
     b94:	mov	w2, #0x1                   	// #1
     b98:	ldxrb	w1, [x0]
     b9c:	stxrb	w3, w2, [x0]
     ba0:	cbnz	w3, b98 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x288>
     ba4:	dmb	ish
     ba8:	tst	w1, #0xff
     bac:	b.eq	bb4 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x2a4>  // b.none
     bb0:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     bb4:	add	x20, x20, #0x0
     bb8:	add	x0, x20, #0x80, lsl #12
     bbc:	ldr	x1, [x21, #24]
     bc0:	ldr	x2, [x0, #3528]
     bc4:	ldr	x3, [x2, x1, lsl #3]
     bc8:	cmp	x3, x21
     bcc:	b.ne	da0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x490>  // b.any
     bd0:	add	x0, x20, #0xc0, lsl #12
     bd4:	ldr	x4, [x0, #3536]
     bd8:	cmp	x1, x4
     bdc:	b.cs	dc0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x4b0>  // b.hs, b.nlast
     be0:	sub	x4, x4, #0x1
     be4:	ldr	x3, [x21, #8]
     be8:	str	x4, [x0, #3536]
     bec:	ldr	x4, [x2, x4, lsl #3]
     bf0:	str	x4, [x2, x1, lsl #3]
     bf4:	ldr	x2, [x0, #4120]
     bf8:	str	x1, [x4, #24]
     bfc:	sub	x2, x2, x3
     c00:	str	x2, [x0, #4120]
     c04:	ldr	x4, [x0, #3560]
     c08:	strb	wzr, [x0, #3544]
     c0c:	ldr	x2, [x0, #3568]
     c10:	add	x4, x4, #0x1
     c14:	ldr	x1, [x0, #4128]
     c18:	sub	x2, x2, x3
     c1c:	str	x4, [x0, #3560]
     c20:	sub	x1, x1, x3
     c24:	str	x2, [x0, #3568]
     c28:	str	x1, [x0, #4128]
     c2c:	dmb	ish
     c30:	add	x20, x20, #0xc1, lsl #12
     c34:	strb	wzr, [x20]
     c38:	ldp	x0, x1, [x21]
     c3c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     c40:	dmb	ish
     c44:	add	x19, x19, #0x0
     c48:	strb	wzr, [x19, #40]
     c4c:	ldp	x21, x22, [sp, #16]
     c50:	ldr	x30, [sp, #48]
     c54:	ldp	x19, x20, [sp], #64
     c58:	ret
     c5c:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     c60:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     c64:	add	x2, x2, #0x0
     c68:	add	x0, x0, #0x0
     c6c:	mov	w1, #0xca                  	// #202
     c70:	stp	x23, x24, [sp, #32]
     c74:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     c78:	ret
     c7c:	stp	x23, x24, [sp, #32]
     c80:	ldr	x0, [x1, x2, lsl #3]
     c84:	dmb	ish
     c88:	cbz	x0, d5c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x44c>
     c8c:	ldrb	w22, [x0, x3]
     c90:	cbz	x22, d5c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x44c>
     c94:	cmp	x22, #0x35
     c98:	b.hi	de0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x4d0>  // b.pmore
     c9c:	lsl	x23, x22, #10
     ca0:	add	x1, x19, x23
     ca4:	ldr	x2, [x1, #8]
     ca8:	cbz	x2, e00 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x4f0>
     cac:	ldr	x0, [x19, x23]
     cb0:	cmp	x2, x0
     cb4:	b.eq	ee0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x5d0>  // b.none
     cb8:	add	x22, x0, x22, lsl #7
     cbc:	add	x2, x19, x23
     cc0:	add	x22, x22, #0x4
     cc4:	add	x0, x0, #0x1
     cc8:	mov	x3, #0xd800                	// #55296
     ccc:	add	x1, x19, x3
     cd0:	str	x0, [x19, x23]
     cd4:	str	x21, [x19, x22, lsl #3]
     cd8:	ldr	x0, [x1, #16]
     cdc:	ldr	x2, [x2, #16]
     ce0:	ldp	x23, x24, [sp, #32]
     ce4:	sub	x0, x0, x2
     ce8:	str	x0, [x1, #16]
     cec:	b	c4c <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x33c>
     cf0:	bl	30 <_ZN11__sanitizer18internal_allocatorEv.part.0>
     cf4:	b	ab8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x1a8>
     cf8:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     cfc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d00:	add	x2, x2, #0x0
     d04:	add	x0, x0, #0x0
     d08:	mov	x4, #0x0                   	// #0
     d0c:	mov	x3, #0x0                   	// #0
     d10:	mov	w1, #0x12d                 	// #301
     d14:	stp	x23, x24, [sp, #32]
     d18:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d1c:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d20:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d24:	mov	x4, x19
     d28:	add	x2, x2, #0x0
     d2c:	add	x0, x0, #0x0
     d30:	mov	w1, #0x8b                  	// #139
     d34:	stp	x23, x24, [sp, #32]
     d38:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d3c:	mov	x3, x1
     d40:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d44:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d48:	add	x2, x2, #0x0
     d4c:	add	x0, x0, #0x0
     d50:	mov	w1, #0x8c                  	// #140
     d54:	stp	x23, x24, [sp, #32]
     d58:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d5c:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d60:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d64:	add	x2, x2, #0x0
     d68:	add	x0, x0, #0x0
     d6c:	mov	x4, #0x0                   	// #0
     d70:	mov	x3, #0x0                   	// #0
     d74:	mov	w1, #0xa8                  	// #168
     d78:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d7c:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d80:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     d84:	add	x2, x2, #0x0
     d88:	add	x0, x0, #0x0
     d8c:	mov	x4, #0x0                   	// #0
     d90:	mov	x3, #0x0                   	// #0
     d94:	mov	w1, #0x12d                 	// #301
     d98:	stp	x23, x24, [sp, #32]
     d9c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     da0:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     da4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     da8:	mov	x4, x21
     dac:	add	x2, x2, #0x0
     db0:	add	x0, x0, #0x0
     db4:	mov	w1, #0x8b                  	// #139
     db8:	stp	x23, x24, [sp, #32]
     dbc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     dc0:	mov	x3, x1
     dc4:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     dc8:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     dcc:	add	x2, x2, #0x0
     dd0:	add	x0, x0, #0x0
     dd4:	mov	w1, #0x8c                  	// #140
     dd8:	stp	x23, x24, [sp, #32]
     ddc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     de0:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     de4:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     de8:	mov	x3, x22
     dec:	add	x2, x2, #0x0
     df0:	add	x0, x0, #0x0
     df4:	mov	x4, #0x36                  	// #54
     df8:	mov	w1, #0xa9                  	// #169
     dfc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     e00:	mov	x2, #0x1                   	// #1
     e04:	mov	x11, x2
     e08:	mov	x12, #0x7c                  	// #124
     e0c:	mov	x10, #0x14                  	// #20
     e10:	mov	x9, #0x100                 	// #256
     e14:	mov	w8, #0x4000                	// #16384
     e18:	mov	x7, #0x3e                  	// #62
     e1c:	nop
     e20:	add	x5, x19, x2, lsl #10
     e24:	lsl	x6, x2, #4
     e28:	mov	x4, x5
     e2c:	mov	x0, #0x14                  	// #20
     e30:	mov	x3, x2
     e34:	add	x2, x2, #0x1
     e38:	stp	x12, x6, [x5, #8]
     e3c:	cmp	x2, #0x36
     e40:	str	x0, [x4, #24]
     e44:	b.eq	eb4 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x5a4>  // b.none
     e48:	cmp	x2, #0x35
     e4c:	b.eq	ebc <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x5ac>  // b.none
     e50:	cmp	x2, #0x10
     e54:	b.ls	e20 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x510>  // b.plast
     e58:	sub	x0, x3, #0xf
     e5c:	add	x4, x4, #0x400
     e60:	and	x6, x0, #0x3
     e64:	mov	x3, x2
     e68:	lsr	x0, x0, #2
     e6c:	add	x2, x2, #0x1
     e70:	lsl	x0, x9, x0
     e74:	lsr	x5, x0, #2
     e78:	madd	x5, x5, x6, x0
     e7c:	str	x5, [x4, #16]
     e80:	udiv	w0, w8, w5
     e84:	cmp	x0, #0x0
     e88:	csel	x0, x0, x11, ne  // ne = any
     e8c:	cmp	x0, #0x3e
     e90:	csel	x0, x0, x7, ls  // ls = plast
     e94:	add	x6, x0, #0x2
     e98:	lsl	x0, x0, #1
     e9c:	str	x0, [x4, #8]
     ea0:	cmp	x5, x6, lsl #3
     ea4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
     ea8:	str	x0, [x4, #24]
     eac:	cmp	x2, #0x36
     eb0:	b.ne	e48 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x538>  // b.any
     eb4:	ldr	x2, [x1, #8]
     eb8:	b	cac <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x39c>
     ebc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     ec0:	ldr	q0, [x0]
     ec4:	mov	x0, #0xd400                	// #54272
     ec8:	add	x2, x19, x0
     ecc:	add	x0, x19, #0x8, lsl #12
     ed0:	stur	q0, [x2, #8]
     ed4:	str	xzr, [x0, #21528]
     ed8:	ldr	x2, [x1, #8]
     edc:	b	cac <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x39c>
     ee0:	mov	x0, x19
     ee4:	add	x2, x20, #0x0
     ee8:	mov	x3, x22
     eec:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     ef0:	ldr	x0, [x19, x23]
     ef4:	b	cb8 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x3a8>
     ef8:	adrp	x2, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     efc:	adrp	x0, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     f00:	mov	x3, x24
     f04:	add	x2, x2, #0x0
     f08:	add	x0, x0, #0x0
     f0c:	mov	x4, #0x36                  	// #54
     f10:	mov	w1, #0xa9                  	// #169
     f14:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f18:	add	x2, x20, #0x0
     f1c:	mov	x3, x24
     f20:	bl	0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     f24:	b	b34 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x224>
     f28:	mov	x1, #0x1                   	// #1
     f2c:	mov	x11, x1
     f30:	mov	x12, #0x7c                  	// #124
     f34:	mov	x10, #0x14                  	// #20
     f38:	mov	x9, #0x100                 	// #256
     f3c:	mov	w8, #0x4000                	// #16384
     f40:	mov	x7, #0x3e                  	// #62
     f44:	nop
     f48:	lsl	x0, x1, #10
     f4c:	lsl	x4, x1, #4
     f50:	add	x13, x6, x0
     f54:	add	x0, x0, #0x18
     f58:	add	x2, x0, x6
     f5c:	mov	x0, #0x14                  	// #20
     f60:	mov	x5, x1
     f64:	add	x1, x1, #0x1
     f68:	stp	x12, x4, [x13, #8]
     f6c:	cmp	x1, #0x36
     f70:	str	x0, [x2]
     f74:	b.eq	fe4 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x6d4>  // b.none
     f78:	cmp	x1, #0x35
     f7c:	b.eq	ff4 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x6e4>  // b.none
     f80:	cmp	x1, #0x10
     f84:	b.ls	f48 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x638>  // b.plast
     f88:	sub	x0, x5, #0xf
     f8c:	add	x2, x2, #0x400
     f90:	and	x13, x0, #0x3
     f94:	mov	x5, x1
     f98:	lsr	x0, x0, #2
     f9c:	add	x1, x1, #0x1
     fa0:	lsl	x0, x9, x0
     fa4:	lsr	x4, x0, #2
     fa8:	madd	x4, x4, x13, x0
     fac:	stur	x4, [x2, #-8]
     fb0:	udiv	w0, w8, w4
     fb4:	cmp	x0, #0x0
     fb8:	csel	x0, x0, x11, ne  // ne = any
     fbc:	cmp	x0, #0x3e
     fc0:	csel	x0, x0, x7, ls  // ls = plast
     fc4:	add	x13, x0, #0x2
     fc8:	lsl	x0, x0, #1
     fcc:	stur	x0, [x2, #-16]
     fd0:	cmp	x4, x13, lsl #3
     fd4:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
     fd8:	str	x0, [x2]
     fdc:	cmp	x1, #0x36
     fe0:	b.ne	f78 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x668>  // b.any
     fe4:	add	x0, x22, #0x0
     fe8:	add	x0, x0, x23
     fec:	ldr	x2, [x0, #8]
     ff0:	b	b20 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x210>
     ff4:	adrp	x1, 0 <_ZN11__sanitizerL34ReportInternalAllocatorOutOfMemoryEm>
     ff8:	add	x0, x22, #0x0
     ffc:	ldr	q0, [x1]
    1000:	mov	x1, #0xd400                	// #54272
    1004:	add	x2, x0, x1
    1008:	add	x1, x0, x23
    100c:	add	x0, x0, #0x8, lsl #12
    1010:	stur	q0, [x2, #8]
    1014:	str	xzr, [x0, #21528]
    1018:	ldr	x2, [x1, #8]
    101c:	b	b20 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE+0x210>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x21, x0
   c:	ldr	x0, [x2, #8]
  10:	stp	x23, x30, [sp, #32]
  14:	cbz	x0, c0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0+0xc0>
  18:	mov	x0, #0x2001                	// #8193
  1c:	add	x22, x1, x0
  20:	mov	x20, x2
  24:	mov	x19, x1
  28:	add	x23, x21, x22, lsl #6
  2c:	mov	w1, #0x1                   	// #1
  30:	ldxrb	w0, [x23]
  34:	stxrb	w2, w1, [x23]
  38:	cbnz	w2, 30 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0+0x30>
  3c:	dmb	ish
  40:	tst	w0, #0xff
  44:	b.eq	50 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0+0x50>  // b.none
  48:	mov	x0, x23
  4c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0>
  50:	ldr	x0, [x23, #8]
  54:	cbz	x0, 8c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0+0x8c>
  58:	add	x19, x21, x19, lsl #6
  5c:	add	x0, x0, #0x1
  60:	add	x19, x19, #0x80, lsl #12
  64:	ldr	x1, [x19, #80]
  68:	str	x1, [x20]
  6c:	stp	x0, x20, [x19, #72]
  70:	dmb	ish
  74:	lsl	x22, x22, #6
  78:	strb	wzr, [x21, x22]
  7c:	ldp	x21, x22, [sp, #16]
  80:	ldp	x23, x30, [sp, #32]
  84:	ldp	x19, x20, [sp], #48
  88:	ret
  8c:	add	x0, x21, x22, lsl #6
  90:	dup	v0.2d, x20
  94:	str	xzr, [x20]
  98:	mov	x1, #0x1                   	// #1
  9c:	str	x1, [x0, #8]
  a0:	str	q0, [x0, #16]
  a4:	dmb	ish
  a8:	lsl	x22, x22, #6
  ac:	strb	wzr, [x21, x22]
  b0:	ldp	x21, x22, [sp, #16]
  b4:	ldp	x23, x30, [sp, #32]
  b8:	ldp	x19, x20, [sp], #48
  bc:	ret
  c0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0>
  c4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE15DeallocateBatchEPNS_14AllocatorStatsEmPNS2_13TransferBatchE.isra.0>
  c8:	add	x2, x2, #0x0
  cc:	add	x0, x0, #0x0
  d0:	mov	x4, #0x0                   	// #0
  d4:	mov	x3, #0x0                   	// #0
  d8:	mov	w1, #0xb8                  	// #184
  dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>:
   0:	sub	sp, sp, #0x210
   4:	adrp	x5, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
   8:	stp	x25, x26, [sp, #48]
   c:	mov	x26, x2
  10:	mov	x25, x3
  14:	ldr	x2, [x5]
  18:	stp	x19, x20, [sp]
  1c:	mov	x19, x1
  20:	mov	x1, #0x100000              	// #1048576
  24:	stp	x21, x22, [sp, #16]
  28:	mov	x21, x0
  2c:	mov	x0, x1
  30:	str	x30, [sp, #80]
  34:	str	x4, [sp, #104]
  38:	bl	0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc>
  3c:	ldr	x4, [sp, #104]
  40:	cbz	x0, 224 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x224>
  44:	mov	x22, x0
  48:	tst	x0, #0xfffff
  4c:	ldr	x0, [x19, #24]
  50:	stp	x23, x24, [sp, #32]
  54:	stp	x27, x28, [sp, #64]
  58:	add	x0, x0, #0x100, lsl #12
  5c:	str	x0, [x19, #24]
  60:	b.ne	42c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x42c>  // b.any
  64:	mov	x0, #0xfffffff             	// #268435455
  68:	lsr	x19, x22, #20
  6c:	cmp	x0, x22, lsr #20
  70:	b.cc	494 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x494>  // b.lo, b.ul, b.last
  74:	and	w23, w4, #0xff
  78:	lsr	x20, x22, #32
  7c:	ldr	x0, [x21, x20, lsl #3]
  80:	dmb	ish
  84:	cbz	x0, 3e4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3e4>
  88:	and	x3, x19, #0xfff
  8c:	ldrb	w1, [x0, x3]
  90:	cbnz	x1, 4ec <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x4ec>
  94:	strb	w23, [x0, x3]
  98:	cmp	x4, #0x35
  9c:	b.eq	2bc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2bc>  // b.none
  a0:	lsl	x28, x4, #4
  a4:	cmp	x4, #0x10
  a8:	b.ls	c8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0xc8>  // b.plast
  ac:	sub	x0, x4, #0x10
  b0:	mov	x28, #0x100                 	// #256
  b4:	and	x1, x0, #0x3
  b8:	lsr	x0, x0, #2
  bc:	lsl	x0, x28, x0
  c0:	lsr	x28, x0, #2
  c4:	madd	x28, x28, x1, x0
  c8:	mov	x27, #0x100000              	// #1048576
  cc:	udiv	x27, x27, x28
  d0:	cbz	x28, 3d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3d4>
  d4:	mov	w23, #0x4000                	// #16384
  d8:	mov	x1, #0x40                  	// #64
  dc:	mov	x0, #0x3e                  	// #62
  e0:	mul	x27, x27, x28
  e4:	udiv	w23, w23, w28
  e8:	cmp	x23, x1
  ec:	csel	x23, x23, x1, ls  // ls = plast
  f0:	cmp	x23, #0x0
  f4:	csinc	x23, x23, xzr, ne  // ne = any
  f8:	cmp	x23, x0
  fc:	csel	x23, x23, x0, ls  // ls = plast
 100:	add	x27, x22, x27
 104:	cmp	x22, x27
 108:	b.cs	3d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3d4>  // b.hs, b.nlast
 10c:	add	x24, sp, #0x90
 110:	add	x7, x26, x4, lsl #10
 114:	mov	x1, #0x0                   	// #0
 118:	mov	x19, #0x1                   	// #1
 11c:	str	x22, [sp, #144]
 120:	add	x22, x22, x28
 124:	cmp	x22, x27
 128:	b.cs	278 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x278>  // b.hs, b.nlast
 12c:	str	x22, [x24, x19, lsl #3]
 130:	cmp	x19, #0x2f
 134:	add	x19, x19, #0x1
 138:	b.ne	120 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x120>  // b.any
 13c:	mov	x2, #0xd800                	// #55296
 140:	mov	x19, #0x0                   	// #0
 144:	add	x9, x26, x2
 148:	b	154 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x154>
 14c:	cmp	x19, #0x2f
 150:	b.hi	2b4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2b4>  // b.pmore
 154:	ldr	x8, [x24, x19, lsl #3]
 158:	cbz	x1, 1a4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1a4>
 15c:	ldr	x5, [x1, #8]
 160:	add	x6, x5, #0x1
 164:	add	x5, x5, #0x2
 168:	str	x6, [x1, #8]
 16c:	add	x19, x19, #0x1
 170:	cmp	x6, x23
 174:	str	x8, [x1, x5, lsl #3]
 178:	b.ne	14c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x14c>  // b.any
 17c:	ldr	x5, [x25, #8]
 180:	cbnz	x5, 240 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x240>
 184:	dup	v0.2d, x1
 188:	str	xzr, [x1]
 18c:	mov	x0, #0x1                   	// #1
 190:	str	x0, [x25, #8]
 194:	cmp	x19, #0x2f
 198:	str	q0, [x25, #16]
 19c:	b.hi	260 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x260>  // b.pmore
 1a0:	ldr	x8, [x24, x19, lsl #3]
 1a4:	mov	x1, x8
 1a8:	ldr	x20, [x7, #24]
 1ac:	cbnz	x20, 1c4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1c4>
 1b0:	cbz	x1, 21c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x21c>
 1b4:	mov	x5, #0x0                   	// #0
 1b8:	mov	x6, #0x1                   	// #1
 1bc:	str	xzr, [x1, #8]
 1c0:	b	164 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x164>
 1c4:	cmp	x20, #0x35
 1c8:	b.hi	44c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x44c>  // b.pmore
 1cc:	lsl	x5, x20, #10
 1d0:	add	x1, x26, x5
 1d4:	ldr	x0, [x26, x5]
 1d8:	cbz	x0, 4b4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x4b4>
 1dc:	lsl	x20, x20, #7
 1e0:	add	x3, x26, x5
 1e4:	add	x1, x20, x0
 1e8:	sub	x0, x0, #0x1
 1ec:	add	x1, x1, #0x2
 1f0:	str	x0, [x26, x5]
 1f4:	add	x20, x20, x0
 1f8:	add	x20, x20, #0x4
 1fc:	ldr	x2, [x26, x1, lsl #3]
 200:	ldr	x0, [x9, #16]
 204:	ldr	x1, [x3, #16]
 208:	prfm	pldl1keep, [x2]
 20c:	add	x0, x0, x1
 210:	ldr	x1, [x26, x20, lsl #3]
 214:	str	x0, [x9, #16]
 218:	cbnz	x1, 1b4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1b4>
 21c:	ldp	x23, x24, [sp, #32]
 220:	ldp	x27, x28, [sp, #64]
 224:	mov	w0, #0x0                   	// #0
 228:	ldp	x19, x20, [sp]
 22c:	ldp	x21, x22, [sp, #16]
 230:	ldp	x25, x26, [sp, #48]
 234:	ldr	x30, [sp, #80]
 238:	add	sp, sp, #0x210
 23c:	ret
 240:	ldr	x2, [x25, #24]
 244:	str	xzr, [x1]
 248:	add	x5, x5, #0x1
 24c:	cmp	x19, #0x2f
 250:	str	x1, [x2]
 254:	str	x5, [x25, #8]
 258:	str	x1, [x25, #24]
 25c:	b.ls	1a0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1a0>  // b.plast
 260:	add	x22, x22, x28
 264:	mov	x19, #0x0                   	// #0
 268:	cmp	x22, x27
 26c:	mov	x1, #0x0                   	// #0
 270:	b.cc	12c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x12c>  // b.lo, b.ul, b.last
 274:	nop
 278:	cbnz	x19, 2cc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2cc>
 27c:	cbz	x1, 3d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3d4>
 280:	ldr	x2, [x1, #8]
 284:	cbz	x2, 50c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x50c>
 288:	ldr	x0, [x25, #8]
 28c:	cbnz	x0, 46c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x46c>
 290:	dup	v0.2d, x1
 294:	ldp	x23, x24, [sp, #32]
 298:	ldp	x27, x28, [sp, #64]
 29c:	str	xzr, [x1]
 2a0:	mov	x1, #0x1                   	// #1
 2a4:	mov	w0, w1
 2a8:	str	x1, [x25, #8]
 2ac:	str	q0, [x25, #16]
 2b0:	b	228 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x228>
 2b4:	mov	x19, #0x0                   	// #0
 2b8:	b	120 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x120>
 2bc:	mov	x27, #0x100000              	// #1048576
 2c0:	mov	x23, #0x20                  	// #32
 2c4:	mov	x28, #0x200                 	// #512
 2c8:	b	100 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x100>
 2cc:	add	x28, x26, x4, lsl #10
 2d0:	mov	x0, #0xd800                	// #55296
 2d4:	add	x27, sp, #0x90
 2d8:	add	x4, x26, x0
 2dc:	mov	x20, #0x0                   	// #0
 2e0:	b	2ec <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2ec>
 2e4:	cmp	x19, x20
 2e8:	b.ls	284 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x284>  // b.plast
 2ec:	ldr	x22, [x27, x20, lsl #3]
 2f0:	cbz	x1, 33c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x33c>
 2f4:	ldr	x0, [x1, #8]
 2f8:	add	x2, x0, #0x1
 2fc:	add	x0, x0, #0x2
 300:	str	x2, [x1, #8]
 304:	add	x20, x20, #0x1
 308:	cmp	x2, x23
 30c:	str	x22, [x1, x0, lsl #3]
 310:	b.ne	2e4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2e4>  // b.any
 314:	ldr	x0, [x25, #8]
 318:	cbnz	x0, 3b4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3b4>
 31c:	dup	v0.2d, x1
 320:	str	xzr, [x1]
 324:	mov	x0, #0x1                   	// #1
 328:	str	x0, [x25, #8]
 32c:	cmp	x19, x20
 330:	str	q0, [x25, #16]
 334:	b.ls	3d4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3d4>  // b.plast
 338:	ldr	x22, [x27, x20, lsl #3]
 33c:	mov	x1, x22
 340:	ldr	x24, [x28, #24]
 344:	cbnz	x24, 35c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x35c>
 348:	cbz	x1, 21c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x21c>
 34c:	mov	x0, #0x0                   	// #0
 350:	mov	x2, #0x1                   	// #1
 354:	str	xzr, [x1, #8]
 358:	b	2fc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x2fc>
 35c:	cmp	x24, #0x35
 360:	b.hi	554 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x554>  // b.pmore
 364:	lsl	x5, x24, #10
 368:	add	x1, x26, x5
 36c:	ldr	x0, [x26, x5]
 370:	cbz	x0, 55c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x55c>
 374:	lsl	x24, x24, #7
 378:	add	x2, x26, x5
 37c:	add	x1, x24, x0
 380:	sub	x0, x0, #0x1
 384:	add	x1, x1, #0x2
 388:	str	x0, [x26, x5]
 38c:	add	x24, x24, x0
 390:	add	x0, x24, #0x4
 394:	ldr	x3, [x26, x1, lsl #3]
 398:	ldr	x1, [x2, #16]
 39c:	ldr	x2, [x4, #16]
 3a0:	prfm	pldl1keep, [x3]
 3a4:	add	x2, x2, x1
 3a8:	ldr	x1, [x26, x0, lsl #3]
 3ac:	str	x2, [x4, #16]
 3b0:	b	348 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x348>
 3b4:	ldr	x3, [x25, #24]
 3b8:	str	xzr, [x1]
 3bc:	add	x0, x0, #0x1
 3c0:	cmp	x19, x20
 3c4:	str	x1, [x3]
 3c8:	str	x0, [x25, #8]
 3cc:	str	x1, [x25, #24]
 3d0:	b.hi	338 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x338>  // b.pmore
 3d4:	mov	w0, #0x1                   	// #1
 3d8:	ldp	x23, x24, [sp, #32]
 3dc:	ldp	x27, x28, [sp, #64]
 3e0:	b	228 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x228>
 3e4:	add	x24, x21, #0x80, lsl #12
 3e8:	mov	w1, #0x1                   	// #1
 3ec:	ldxrb	w0, [x24]
 3f0:	stxrb	w2, w1, [x24]
 3f4:	cbnz	w2, 3ec <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x3ec>
 3f8:	dmb	ish
 3fc:	tst	w0, #0xff
 400:	b.eq	414 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x414>  // b.none
 404:	mov	x0, x24
 408:	str	x4, [sp, #104]
 40c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 410:	ldr	x4, [sp, #104]
 414:	ldr	x0, [x21, x20, lsl #3]
 418:	dmb	ish
 41c:	cbz	x0, 52c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x52c>
 420:	dmb	ish
 424:	strb	wzr, [x24]
 428:	b	88 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x88>
 42c:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 430:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 434:	add	x2, x2, #0x0
 438:	add	x0, x0, #0x0
 43c:	mov	x4, #0x0                   	// #0
 440:	mov	x3, #0x0                   	// #0
 444:	mov	w1, #0x131                 	// #305
 448:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 44c:	mov	x3, x20
 450:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 454:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 458:	add	x2, x2, #0x0
 45c:	add	x0, x0, #0x0
 460:	mov	x4, #0x36                  	// #54
 464:	mov	w1, #0x9a                  	// #154
 468:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 46c:	ldr	x4, [x25, #24]
 470:	add	x2, x0, #0x1
 474:	ldp	x23, x24, [sp, #32]
 478:	mov	w0, #0x1                   	// #1
 47c:	ldp	x27, x28, [sp, #64]
 480:	str	xzr, [x1]
 484:	str	x1, [x4]
 488:	str	x2, [x25, #8]
 48c:	str	x1, [x25, #24]
 490:	b	228 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x228>
 494:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 498:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 49c:	mov	x3, x19
 4a0:	add	x2, x2, #0x0
 4a4:	add	x0, x0, #0x0
 4a8:	mov	x4, #0x10000000            	// #268435456
 4ac:	mov	w1, #0x121                 	// #289
 4b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4b4:	mov	x3, x20
 4b8:	mov	x2, x21
 4bc:	mov	x0, x26
 4c0:	stp	x8, x4, [sp, #104]
 4c4:	stp	x5, x9, [sp, #120]
 4c8:	str	x7, [sp, #136]
 4cc:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 4d0:	tst	w0, #0xff
 4d4:	b.eq	21c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x21c>  // b.none
 4d8:	ldp	x5, x9, [sp, #120]
 4dc:	ldp	x8, x4, [sp, #104]
 4e0:	ldr	x7, [sp, #136]
 4e4:	ldr	x0, [x26, x5]
 4e8:	b	1dc <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x1dc>
 4ec:	mov	x4, x1
 4f0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 4f4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 4f8:	add	x2, x2, #0x0
 4fc:	add	x0, x0, #0x0
 500:	mov	x3, #0x0                   	// #0
 504:	mov	w1, #0x47                  	// #71
 508:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 50c:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 510:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 514:	add	x2, x2, #0x0
 518:	add	x0, x0, #0x0
 51c:	mov	x4, #0x0                   	// #0
 520:	mov	x3, #0x0                   	// #0
 524:	mov	w1, #0x174                 	// #372
 528:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 52c:	mov	w2, #0x0                   	// #0
 530:	adrp	x1, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 534:	mov	x0, #0x1000                	// #4096
 538:	add	x1, x1, #0x0
 53c:	str	x4, [sp, #104]
 540:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 544:	dmb	ish
 548:	str	x0, [x21, x20, lsl #3]
 54c:	ldr	x4, [sp, #104]
 550:	b	420 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x420>
 554:	mov	x3, x24
 558:	b	450 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x450>
 55c:	mov	x3, x24
 560:	mov	x2, x21
 564:	mov	x0, x26
 568:	stp	x5, x4, [sp, #104]
 56c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm>
 570:	tst	w0, #0xff
 574:	b.eq	21c <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x21c>  // b.none
 578:	ldp	x5, x4, [sp, #104]
 57c:	ldr	x0, [x26, x5]
 580:	b	374 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEPNS2_13SizeClassInfoEm+0x374>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	mov	x20, x0
   8:	mov	x0, #0x2001                	// #8193
   c:	stp	x21, x22, [sp, #16]
  10:	add	x22, x3, x0
  14:	mov	x19, x3
  18:	lsl	x21, x22, #6
  1c:	stp	x23, x24, [sp, #32]
  20:	add	x23, x20, x21
  24:	stp	x25, x26, [sp, #48]
  28:	mov	x25, x2
  2c:	mov	x24, x1
  30:	mov	w1, #0x1                   	// #1
  34:	str	x30, [sp, #64]
  38:	ldxrb	w0, [x23]
  3c:	stxrb	w2, w1, [x23]
  40:	cbnz	w2, 38 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x38>
  44:	dmb	ish
  48:	tst	w0, #0xff
  4c:	b.eq	58 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x58>  // b.none
  50:	mov	x0, x23
  54:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  58:	add	x21, x21, #0x8
  5c:	add	x26, x20, x21
  60:	ldr	x5, [x20, x21]
  64:	cbnz	x5, 90 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x90>
  68:	mov	x3, x23
  6c:	mov	x2, x25
  70:	mov	x1, x24
  74:	mov	x4, x19
  78:	mov	x0, x20
  7c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  80:	tst	w0, #0xff
  84:	b.eq	100 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0x100>  // b.none
  88:	ldr	x5, [x20, x21]
  8c:	cbz	x5, e0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xe0>
  90:	add	x4, x20, x19, lsl #6
  94:	add	x4, x4, #0x80, lsl #12
  98:	ldr	x0, [x26, #8]
  9c:	ldr	x1, [x4, #80]
  a0:	ldr	x1, [x1]
  a4:	str	x1, [x4, #80]
  a8:	cbz	x1, d8 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xd8>
  ac:	sub	x5, x5, #0x1
  b0:	str	x5, [x4, #72]
  b4:	dmb	ish
  b8:	lsl	x22, x22, #6
  bc:	strb	wzr, [x20, x22]
  c0:	ldp	x21, x22, [sp, #16]
  c4:	ldp	x23, x24, [sp, #32]
  c8:	ldp	x25, x26, [sp, #48]
  cc:	ldr	x30, [sp, #64]
  d0:	ldp	x19, x20, [sp], #80
  d4:	ret
  d8:	str	xzr, [x4, #88]
  dc:	b	ac <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xac>
  e0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  e4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm>
  e8:	add	x2, x2, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	x4, #0x0                   	// #0
  f4:	mov	x3, #0x0                   	// #0
  f8:	mov	w1, #0x41                  	// #65
  fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 100:	mov	x0, #0x0                   	// #0
 104:	b	b4 <_ZN11__sanitizer20SizeClassAllocator32INS_4AP32EE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS2_EEm+0xb4>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	mov	x19, x0
   8:	ldr	x0, [x1, #8]
   c:	stp	x21, x22, [sp, #16]
  10:	mov	x21, x1
  14:	stp	x23, x24, [sp, #32]
  18:	mov	x22, x2
  1c:	mov	x23, x3
  20:	str	x30, [sp, #48]
  24:	cbz	x0, 168 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x168>
  28:	mov	x3, #0xd800                	// #55296
  2c:	add	x24, x19, x3
  30:	mov	x1, x24
  34:	mov	x3, x23
  38:	mov	x2, x19
  3c:	mov	x0, x22
  40:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
  44:	mov	x20, x0
  48:	cbz	x0, 150 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x150>
  4c:	ldr	x5, [x0, #8]
  50:	cbz	x5, 244 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x244>
  54:	add	x2, x0, #0x10
  58:	add	x0, x21, #0x30
  5c:	cmp	x2, x0
  60:	sub	x1, x5, #0x1
  64:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
  68:	add	x0, x21, #0x20
  6c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
  70:	b.ls	134 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x134>  // b.plast
  74:	lsr	x1, x5, #1
  78:	mov	x4, #0x0                   	// #0
  7c:	lsl	x1, x1, #4
  80:	ldr	q0, [x2, x4]
  84:	str	q0, [x0, x4]
  88:	add	x4, x4, #0x10
  8c:	cmp	x1, x4
  90:	b.ne	80 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x80>  // b.any
  94:	and	x4, x5, #0xfffffffffffffffe
  98:	tbz	w5, #0, a8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xa8>
  9c:	add	x1, x4, #0x2
  a0:	ldr	x1, [x20, x1, lsl #3]
  a4:	str	x1, [x0, x4, lsl #3]
  a8:	add	x23, x19, x23, lsl #10
  ac:	str	x5, [x21]
  b0:	mov	w0, #0x1                   	// #1
  b4:	ldr	x21, [x23, #24]
  b8:	cbnz	x21, d0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xd0>
  bc:	ldp	x21, x22, [sp, #16]
  c0:	ldp	x23, x24, [sp, #32]
  c4:	ldr	x30, [sp, #48]
  c8:	ldp	x19, x20, [sp], #64
  cc:	ret
  d0:	cmp	x21, #0x35
  d4:	b.hi	364 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x364>  // b.pmore
  d8:	lsl	x23, x21, #10
  dc:	add	x1, x19, x23
  e0:	ldr	x2, [x1, #8]
  e4:	cbz	x2, 27c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x27c>
  e8:	ldr	x0, [x19, x23]
  ec:	cmp	x0, x2
  f0:	b.eq	264 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x264>  // b.none
  f4:	add	x2, x0, x21, lsl #7
  f8:	add	x3, x19, x23
  fc:	add	x2, x2, #0x4
 100:	add	x0, x0, #0x1
 104:	str	x0, [x19, x23]
 108:	mov	w0, #0x1                   	// #1
 10c:	ldr	x1, [x24, #16]
 110:	str	x20, [x19, x2, lsl #3]
 114:	ldp	x21, x22, [sp, #16]
 118:	ldr	x2, [x3, #16]
 11c:	ldr	x30, [sp, #48]
 120:	sub	x1, x1, x2
 124:	str	x1, [x24, #16]
 128:	ldp	x23, x24, [sp, #32]
 12c:	ldp	x19, x20, [sp], #64
 130:	ret
 134:	mov	x1, #0x0                   	// #0
 138:	ldr	x3, [x2, x1, lsl #3]
 13c:	str	x3, [x0, x1, lsl #3]
 140:	add	x1, x1, #0x1
 144:	cmp	x5, x1
 148:	b.ne	138 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x138>  // b.any
 14c:	b	a8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xa8>
 150:	mov	w0, #0x0                   	// #0
 154:	ldp	x21, x22, [sp, #16]
 158:	ldp	x23, x24, [sp, #32]
 15c:	ldr	x30, [sp, #48]
 160:	ldp	x19, x20, [sp], #64
 164:	ret
 168:	mov	x5, #0x1                   	// #1
 16c:	mov	x11, x5
 170:	mov	x12, #0x7c                  	// #124
 174:	mov	x10, #0x14                  	// #20
 178:	mov	x9, #0x100                 	// #256
 17c:	mov	w8, #0x4000                	// #16384
 180:	mov	x3, #0x3e                  	// #62
 184:	nop
 188:	add	x2, x19, x5, lsl #10
 18c:	lsl	x4, x5, #4
 190:	mov	x6, x2
 194:	mov	x0, #0x14                  	// #20
 198:	mov	x1, x5
 19c:	add	x5, x5, #0x1
 1a0:	stp	x12, x4, [x2, #8]
 1a4:	cmp	x5, #0x36
 1a8:	str	x0, [x6, #24]
 1ac:	b.eq	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x28>  // b.none
 1b0:	cmp	x5, #0x35
 1b4:	b.eq	224 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x224>  // b.none
 1b8:	cmp	x5, #0x10
 1bc:	b.ls	188 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x188>  // b.plast
 1c0:	sub	x4, x1, #0xf
 1c4:	add	x6, x6, #0x400
 1c8:	and	x0, x4, #0x3
 1cc:	mov	x1, x5
 1d0:	lsr	x4, x4, #2
 1d4:	add	x5, x5, #0x1
 1d8:	lsl	x4, x9, x4
 1dc:	lsr	x7, x4, #2
 1e0:	madd	x7, x7, x0, x4
 1e4:	str	x7, [x6, #16]
 1e8:	udiv	w4, w8, w7
 1ec:	cmp	x4, #0x0
 1f0:	csel	x4, x4, x11, ne  // ne = any
 1f4:	cmp	x4, #0x3e
 1f8:	csel	x4, x4, x3, ls  // ls = plast
 1fc:	add	x0, x4, #0x2
 200:	lsl	x4, x4, #1
 204:	str	x4, [x6, #8]
 208:	cmp	x7, x0, lsl #3
 20c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 210:	str	x0, [x6, #24]
 214:	cmp	x5, #0x36
 218:	b.eq	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x28>  // b.none
 21c:	cmp	x5, #0x35
 220:	b.ne	1b8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x1b8>  // b.any
 224:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 228:	ldr	q0, [x0]
 22c:	mov	x0, #0xd400                	// #54272
 230:	add	x1, x19, x0
 234:	add	x0, x19, #0x8, lsl #12
 238:	stur	q0, [x1, #8]
 23c:	str	xzr, [x0, #21528]
 240:	b	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x28>
 244:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 248:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 24c:	add	x2, x2, #0x0
 250:	add	x0, x0, #0x0
 254:	mov	x4, #0x0                   	// #0
 258:	mov	x3, #0x0                   	// #0
 25c:	mov	w1, #0xf0                  	// #240
 260:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 264:	mov	x0, x19
 268:	mov	x2, x22
 26c:	mov	x3, x21
 270:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 274:	ldr	x0, [x19, x23]
 278:	b	f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xf4>
 27c:	mov	x2, #0x1                   	// #1
 280:	mov	x11, x2
 284:	mov	x12, #0x7c                  	// #124
 288:	mov	x10, #0x14                  	// #20
 28c:	mov	x9, #0x100                 	// #256
 290:	mov	w8, #0x4000                	// #16384
 294:	mov	x7, #0x3e                  	// #62
 298:	add	x5, x19, x2, lsl #10
 29c:	lsl	x6, x2, #4
 2a0:	mov	x4, x5
 2a4:	mov	x0, #0x14                  	// #20
 2a8:	mov	x3, x2
 2ac:	add	x2, x2, #0x1
 2b0:	stp	x12, x6, [x5, #8]
 2b4:	cmp	x2, #0x36
 2b8:	str	x0, [x4, #24]
 2bc:	b.eq	32c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x32c>  // b.none
 2c0:	cmp	x2, #0x35
 2c4:	b.eq	334 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x334>  // b.none
 2c8:	cmp	x2, #0x10
 2cc:	b.ls	298 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x298>  // b.plast
 2d0:	sub	x0, x3, #0xf
 2d4:	add	x4, x4, #0x400
 2d8:	and	x6, x0, #0x3
 2dc:	mov	x3, x2
 2e0:	lsr	x0, x0, #2
 2e4:	add	x2, x2, #0x1
 2e8:	lsl	x0, x9, x0
 2ec:	lsr	x5, x0, #2
 2f0:	madd	x5, x5, x6, x0
 2f4:	str	x5, [x4, #16]
 2f8:	udiv	w0, w8, w5
 2fc:	cmp	x0, #0x0
 300:	csel	x0, x0, x11, ne  // ne = any
 304:	cmp	x0, #0x3e
 308:	csel	x0, x0, x7, ls  // ls = plast
 30c:	add	x6, x0, #0x2
 310:	lsl	x0, x0, #1
 314:	str	x0, [x4, #8]
 318:	cmp	x5, x6, lsl #3
 31c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 320:	str	x0, [x4, #24]
 324:	cmp	x2, #0x36
 328:	b.ne	2c0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x2c0>  // b.any
 32c:	ldr	x2, [x1, #8]
 330:	b	e8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xe8>
 334:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 338:	mov	x2, #0xd400                	// #54272
 33c:	add	x2, x19, x2
 340:	ldr	q0, [x0]
 344:	add	x0, x19, #0x8, lsl #12
 348:	stur	q0, [x2, #8]
 34c:	str	xzr, [x0, #21528]
 350:	ldr	x0, [x19, x23]
 354:	ldr	x2, [x1, #8]
 358:	cmp	x0, x2
 35c:	b.ne	f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0xf4>  // b.any
 360:	b	264 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m+0x264>
 364:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 368:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE6RefillEPNS4_8PerClassEPS3_m>
 36c:	mov	x3, x21
 370:	add	x2, x2, #0x0
 374:	add	x0, x0, #0x0
 378:	mov	x4, #0x36                  	// #54
 37c:	mov	w1, #0xa9                  	// #169
 380:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	cmp	x2, #0x0
   8:	stp	x21, x22, [sp, #16]
   c:	csinc	x22, x2, xzr, ne  // ne = any
  10:	mov	x21, x1
  14:	str	x30, [sp, #64]
  18:	adds	x1, x3, x22
  1c:	b.cs	470 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x470>  // b.hs, b.nlast
  20:	stp	x23, x24, [sp, #32]
  24:	mov	x19, x3
  28:	mov	x23, x0
  2c:	cmp	x3, #0x8
  30:	b.hi	278 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x278>  // b.pmore
  34:	cmp	x2, #0x20, lsl #12
  38:	b.hi	fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xfc>  // b.pmore
  3c:	cmp	x22, #0x100
  40:	b.ls	2ac <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x2ac>  // b.plast
  44:	clz	x3, x22
  48:	mov	w20, #0x3f                  	// #63
  4c:	sub	w20, w20, w3
  50:	mov	w3, #0x1                   	// #1
  54:	sub	w1, w20, #0x2
  58:	lsl	w3, w3, w1
  5c:	sub	w3, w3, #0x1
  60:	tst	x3, x22
  64:	lsr	x3, x22, x1
  68:	and	x3, x3, #0x3
  6c:	cinc	x3, x3, ne  // ne = any
  70:	add	x20, x3, w20, sxtw #2
  74:	sub	x20, x20, #0x10
  78:	cmp	x20, #0x35
  7c:	b.hi	2fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x2fc>  // b.pmore
  80:	lsl	x22, x20, #10
  84:	add	x1, x21, x22
  88:	ldr	x3, [x21, x22]
  8c:	cbz	x3, 390 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x390>
  90:	lsl	x20, x20, #7
  94:	add	x1, x21, x22
  98:	add	x0, x20, x3
  9c:	mov	x2, #0xd800                	// #55296
  a0:	add	x0, x0, #0x2
  a4:	sub	x3, x3, #0x1
  a8:	add	x2, x21, x2
  ac:	str	x3, [x21, x22]
  b0:	add	x20, x20, x3
  b4:	ldr	x3, [x21, x0, lsl #3]
  b8:	add	x20, x20, #0x4
  bc:	ldr	x0, [x1, #16]
  c0:	ldr	x1, [x2, #16]
  c4:	prfm	pldl1keep, [x3]
  c8:	add	x1, x1, x0
  cc:	ldr	x0, [x21, x20, lsl #3]
  d0:	str	x1, [x2, #16]
  d4:	cmp	x19, #0x8
  d8:	b.ls	e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xe8>  // b.plast
  dc:	sub	x19, x19, #0x1
  e0:	ands	x3, x0, x19
  e4:	b.ne	350 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x350>  // b.any
  e8:	ldp	x23, x24, [sp, #32]
  ec:	ldp	x21, x22, [sp, #16]
  f0:	ldr	x30, [sp, #64]
  f4:	ldp	x19, x20, [sp], #80
  f8:	ret
  fc:	stp	x25, x26, [sp, #48]
 100:	sub	x24, x3, #0x1
 104:	tst	x3, x24
 108:	b.ne	370 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x370>  // b.any
 10c:	add	x25, x23, #0x80, lsl #12
 110:	add	x25, x25, #0xc00
 114:	ldr	x2, [x25, #448]
 118:	sub	x0, x2, #0x1
 11c:	tst	x2, x0
 120:	b.ne	2ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x2ec>  // b.any
 124:	add	x20, x22, x0
 128:	neg	x0, x2
 12c:	and	x20, x20, x0
 130:	cmp	x19, x2
 134:	add	x20, x20, x2
 138:	add	x0, x20, x19
 13c:	csel	x20, x0, x20, hi  // hi = pmore
 140:	cmp	x22, x20
 144:	b.hi	320 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x320>  // b.pmore
 148:	adrp	x1, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 14c:	mov	x0, x20
 150:	ldr	x1, [x1]
 154:	bl	0 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>
 158:	cbz	x0, 3b0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x3b0>
 15c:	ldr	x1, [x25, #448]
 160:	sub	x2, x1, #0x1
 164:	tst	x0, x2
 168:	b.ne	3c0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x3c0>  // b.any
 16c:	add	x21, x0, x1
 170:	ands	x3, x24, x21
 174:	b.eq	188 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x188>  // b.none
 178:	add	x21, x19, x21
 17c:	sub	x21, x21, x3
 180:	tst	x24, x21
 184:	b.ne	3e0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x3e0>  // b.any
 188:	tst	x21, x2
 18c:	b.ne	400 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x400>  // b.any
 190:	add	x3, x21, x22
 194:	cmp	x0, x3
 198:	b.hi	420 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x420>  // b.pmore
 19c:	add	x4, x0, x20
 1a0:	cmp	x4, x3
 1a4:	b.cc	43c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x43c>  // b.lo, b.ul, b.last
 1a8:	sub	x24, x21, x1
 1ac:	add	x26, x23, #0xc1, lsl #12
 1b0:	mov	w1, #0x1                   	// #1
 1b4:	stp	x0, x20, [x24]
 1b8:	str	x22, [x24, #16]
 1bc:	ldxrb	w0, [x26]
 1c0:	stxrb	w2, w1, [x26]
 1c4:	cbnz	w2, 1bc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x1bc>
 1c8:	dmb	ish
 1cc:	tst	w0, #0xff
 1d0:	b.eq	1dc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x1dc>  // b.none
 1d4:	mov	x0, x26
 1d8:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 1dc:	add	x25, x25, #0x1c0
 1e0:	mov	x0, #0x7fff                	// #32767
 1e4:	add	x1, x25, #0x40, lsl #12
 1e8:	ldr	x3, [x1, #16]
 1ec:	cmp	x3, x0
 1f0:	b.hi	454 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x454>  // b.pmore
 1f4:	clz	x0, x20
 1f8:	mov	w2, #0x3f                  	// #63
 1fc:	sub	w2, w2, w0
 200:	add	x5, x3, #0x1
 204:	ldp	x0, x4, [x1, #48]
 208:	add	x23, x23, w2, sxtw #3
 20c:	ldr	x6, [x25, #8]
 210:	str	x5, [x1, #16]
 214:	ldr	x5, [x1, #32]
 218:	str	x3, [x24, #24]
 21c:	add	x0, x20, x0
 220:	add	x23, x23, #0xc0, lsl #12
 224:	cmp	x4, x0
 228:	str	x24, [x6, x3, lsl #3]
 22c:	csel	x4, x4, x0, cs  // cs = hs, nlast
 230:	add	x5, x5, #0x1
 234:	strb	wzr, [x1, #24]
 238:	str	x5, [x1, #32]
 23c:	stp	x0, x4, [x1, #48]
 240:	ldr	x1, [x23, #3584]
 244:	ldr	x0, [x26, #24]
 248:	add	x1, x1, #0x1
 24c:	str	x1, [x23, #3584]
 250:	add	x0, x20, x0
 254:	str	x0, [x26, #24]
 258:	ldr	x0, [x26, #32]
 25c:	add	x20, x20, x0
 260:	str	x20, [x26, #32]
 264:	dmb	ish
 268:	strb	wzr, [x26]
 26c:	mov	x0, x21
 270:	ldp	x25, x26, [sp, #48]
 274:	b	d4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xd4>
 278:	sub	x24, x3, #0x1
 27c:	tst	x3, x24
 280:	b.ne	2e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x2e8>  // b.any
 284:	sub	x3, x1, #0x1
 288:	neg	x1, x19
 28c:	cmp	x19, #0x20, lsl #12
 290:	and	x1, x3, x1
 294:	mov	x0, #0x20000               	// #131072
 298:	ccmp	x1, x0, #0x2, ls  // ls = plast
 29c:	b.hi	2e0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x2e0>  // b.pmore
 2a0:	mov	x22, x1
 2a4:	cmp	x22, #0x100
 2a8:	b.hi	44 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x44>  // b.pmore
 2ac:	add	x20, x22, #0xf
 2b0:	cmp	xzr, x20, lsr #4
 2b4:	lsr	x20, x20, #4
 2b8:	b.ne	80 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x80>  // b.any
 2bc:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 2c0:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 2c4:	add	x2, x2, #0x0
 2c8:	add	x0, x0, #0x0
 2cc:	mov	x4, #0x0                   	// #0
 2d0:	mov	x3, #0x0                   	// #0
 2d4:	mov	w1, #0x99                  	// #153
 2d8:	stp	x25, x26, [sp, #48]
 2dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2e0:	stp	x25, x26, [sp, #48]
 2e4:	b	10c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x10c>
 2e8:	stp	x25, x26, [sp, #48]
 2ec:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 2f0:	add	x0, x0, #0x0
 2f4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 2f8:	bl	0 <_ZN11__sanitizer3DieEv>
 2fc:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 300:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 304:	mov	x3, x20
 308:	add	x2, x2, #0x0
 30c:	add	x0, x0, #0x0
 310:	mov	x4, #0x36                  	// #54
 314:	mov	w1, #0x9a                  	// #154
 318:	stp	x25, x26, [sp, #48]
 31c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 320:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 324:	mov	x3, x19
 328:	mov	x2, x20
 32c:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 330:	ldr	x1, [x1]
 334:	add	x0, x0, #0x0
 338:	ldr	x1, [x1]
 33c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 340:	mov	x0, #0x0                   	// #0
 344:	ldp	x23, x24, [sp, #32]
 348:	ldp	x25, x26, [sp, #48]
 34c:	b	ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xec>
 350:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 354:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 358:	add	x2, x2, #0x0
 35c:	add	x0, x0, #0x0
 360:	mov	x4, #0x0                   	// #0
 364:	mov	w1, #0x49                  	// #73
 368:	stp	x25, x26, [sp, #48]
 36c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 370:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 374:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 378:	add	x2, x2, #0x0
 37c:	add	x0, x0, #0x0
 380:	mov	x4, #0x0                   	// #0
 384:	mov	x3, #0x0                   	// #0
 388:	mov	w1, #0x56                  	// #86
 38c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 390:	mov	x2, x23
 394:	mov	x3, x20
 398:	mov	x0, x21
 39c:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 3a0:	tst	w0, #0xff
 3a4:	b.eq	3b4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x3b4>  // b.none
 3a8:	ldr	x3, [x21, x22]
 3ac:	b	90 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0x90>
 3b0:	ldp	x25, x26, [sp, #48]
 3b4:	mov	x0, #0x0                   	// #0
 3b8:	ldp	x23, x24, [sp, #32]
 3bc:	b	ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xec>
 3c0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 3c4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 3c8:	add	x2, x2, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	x4, #0x0                   	// #0
 3d4:	mov	x3, #0x0                   	// #0
 3d8:	mov	w1, #0x65                  	// #101
 3dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 3e4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 3e8:	add	x2, x2, #0x0
 3ec:	add	x0, x0, #0x0
 3f0:	mov	x4, #0x0                   	// #0
 3f4:	mov	x3, #0x0                   	// #0
 3f8:	mov	w1, #0x6b                  	// #107
 3fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 400:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 404:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 408:	add	x2, x2, #0x0
 40c:	add	x0, x0, #0x0
 410:	mov	x4, #0x0                   	// #0
 414:	mov	x3, #0x0                   	// #0
 418:	mov	w1, #0x6c                  	// #108
 41c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 420:	mov	x4, x0
 424:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 428:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 42c:	add	x2, x2, #0x0
 430:	add	x0, x0, #0x0
 434:	mov	w1, #0x6d                  	// #109
 438:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 43c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 440:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 444:	add	x2, x2, #0x0
 448:	add	x0, x0, #0x0
 44c:	mov	w1, #0x6e                  	// #110
 450:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 454:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 458:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 45c:	add	x2, x2, #0x0
 460:	add	x0, x0, #0x0
 464:	mov	x4, #0x8000                	// #32768
 468:	mov	w1, #0x16                  	// #22
 46c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 470:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 474:	mov	x2, x22
 478:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm>
 47c:	add	x0, x0, #0x0
 480:	ldr	x1, [x1]
 484:	ldr	x1, [x1]
 488:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 48c:	mov	x0, #0x0                   	// #0
 490:	b	ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEmm+0xec>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	stp	x23, x24, [sp, #32]
   8:	mov	x23, x1
   c:	add	x1, x0, x3, lsl #10
  10:	stp	x25, x26, [sp, #48]
  14:	mov	x24, x3
  18:	mov	x25, x2
  1c:	ldp	x20, x19, [x23]
  20:	stp	x21, x22, [sp, #16]
  24:	ldr	x26, [x1, #24]
  28:	str	x30, [sp, #72]
  2c:	lsr	x19, x19, #1
  30:	cmp	x19, x20
  34:	csel	x19, x19, x20, ls  // ls = plast
  38:	sub	x21, x20, x19
  3c:	cbnz	x26, f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xf4>
  40:	add	x0, x21, #0x4
  44:	ldr	x2, [x23, x0, lsl #3]
  48:	cbz	x2, 180 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x180>
  4c:	add	x5, x21, #0x4
  50:	str	x19, [x2, #8]
  54:	add	x5, x23, x5, lsl #3
  58:	cbz	x19, c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xc8>
  5c:	add	x0, x20, #0x6
  60:	add	x4, x20, #0x4
  64:	sub	x0, x0, x19
  68:	sub	x4, x4, x19
  6c:	add	x7, x2, #0x10
  70:	add	x1, x2, #0x20
  74:	add	x0, x23, x0, lsl #3
  78:	add	x4, x23, x4, lsl #3
  7c:	cmp	x7, x0
  80:	sub	x0, x19, #0x1
  84:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
  88:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
  8c:	b.ls	160 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x160>  // b.plast
  90:	lsr	x6, x19, #1
  94:	mov	x0, #0x0                   	// #0
  98:	lsl	x6, x6, #4
  9c:	nop
  a0:	ldr	q0, [x4, x0]
  a4:	str	q0, [x7, x0]
  a8:	add	x0, x0, #0x10
  ac:	cmp	x0, x6
  b0:	b.ne	a0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xa0>  // b.any
  b4:	and	x0, x19, #0xfffffffffffffffe
  b8:	tbz	w19, #0, c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xc8>
  bc:	add	x4, x0, #0x2
  c0:	ldr	x0, [x5, x0, lsl #3]
  c4:	str	x0, [x2, x4, lsl #3]
  c8:	ldr	x3, [x23]
  cc:	mov	x0, x25
  d0:	ldp	x21, x22, [sp, #16]
  d4:	sub	x19, x3, x19
  d8:	ldp	x25, x26, [sp, #48]
  dc:	mov	x1, x24
  e0:	ldr	x30, [sp, #72]
  e4:	str	x19, [x23]
  e8:	ldp	x23, x24, [sp, #32]
  ec:	ldp	x19, x20, [sp], #80
  f0:	b	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
  f4:	str	x27, [sp, #64]
  f8:	cmp	x26, #0x35
  fc:	b.hi	1a0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x1a0>  // b.pmore
 100:	lsl	x27, x26, #10
 104:	mov	x22, x0
 108:	add	x1, x0, x27
 10c:	ldr	x3, [x0, x27]
 110:	cbz	x3, 1c0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x1c0>
 114:	lsl	x26, x26, #7
 118:	add	x2, x22, x27
 11c:	add	x0, x26, x3
 120:	mov	x1, #0xd800                	// #55296
 124:	add	x0, x0, #0x2
 128:	sub	x3, x3, #0x1
 12c:	add	x1, x22, x1
 130:	str	x3, [x22, x27]
 134:	add	x26, x26, x3
 138:	ldr	x3, [x22, x0, lsl #3]
 13c:	add	x26, x26, #0x4
 140:	ldr	x2, [x2, #16]
 144:	ldr	x0, [x1, #16]
 148:	prfm	pldl1keep, [x3]
 14c:	add	x0, x0, x2
 150:	ldr	x2, [x22, x26, lsl #3]
 154:	ldr	x27, [sp, #64]
 158:	str	x0, [x1, #16]
 15c:	b	48 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x48>
 160:	mov	x0, #0x0                   	// #0
 164:	nop
 168:	ldr	x1, [x5, x0, lsl #3]
 16c:	str	x1, [x7, x0, lsl #3]
 170:	add	x0, x0, #0x1
 174:	cmp	x19, x0
 178:	b.ne	168 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x168>  // b.any
 17c:	b	c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0xc8>
 180:	str	x27, [sp, #64]
 184:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 188:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 18c:	add	x0, x0, #0x0
 190:	ldr	x1, [x1]
 194:	ldr	x1, [x1]
 198:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 19c:	bl	0 <_ZN11__sanitizer3DieEv>
 1a0:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 1a4:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 1a8:	mov	x3, x26
 1ac:	add	x2, x2, #0x0
 1b0:	add	x0, x0, #0x0
 1b4:	mov	x4, #0x36                  	// #54
 1b8:	mov	w1, #0x9a                  	// #154
 1bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1c0:	mov	x3, x26
 1c4:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m>
 1c8:	tst	w0, #0xff
 1cc:	b.eq	184 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x184>  // b.none
 1d0:	ldr	x3, [x22, x27]
 1d4:	b	114 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEE5DrainEPNS4_8PerClassEPS3_m+0x114>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	stp	x23, x24, [sp, #32]
   8:	mov	x23, x3
   c:	mov	x24, x4
  10:	str	x30, [sp, #56]
  14:	cbz	x2, 2c0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x2c0>
  18:	stp	x21, x22, [sp, #16]
  1c:	mov	x19, x2
  20:	mov	x20, x0
  24:	mov	x22, x1
  28:	cbz	x3, 2d8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x2d8>
  2c:	str	x25, [sp, #48]
  30:	mov	x0, #0xffffffffffff        	// #281474976710655
  34:	cmp	x2, x0
  38:	b.ls	250 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x250>  // b.plast
  3c:	add	x25, x20, #0xc1, lsl #12
  40:	mov	w1, #0x1                   	// #1
  44:	ldxrb	w0, [x25]
  48:	stxrb	w2, w1, [x25]
  4c:	cbnz	w2, 44 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x44>
  50:	dmb	ish
  54:	tst	w0, #0xff
  58:	b.eq	64 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x64>  // b.none
  5c:	mov	x0, x25
  60:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
  64:	add	x21, x20, #0x80, lsl #12
  68:	mov	x3, #0x0                   	// #0
  6c:	add	x21, x21, #0xc00
  70:	add	x1, x21, #0x1c0
  74:	add	x0, x1, #0x40, lsl #12
  78:	ldr	x6, [x21, #456]
  7c:	ldr	x7, [x0, #16]
  80:	add	x8, x6, x7, lsl #3
  84:	cbz	x7, 298 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x298>
  88:	ldr	x7, [x6]
  8c:	cmp	x19, x7
  90:	b.cc	a4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0xa4>  // b.lo, b.ul, b.last
  94:	sub	x2, x19, x3
  98:	sub	x1, x19, x7
  9c:	cmp	x2, x1
  a0:	csel	x3, x3, x7, ls  // ls = plast
  a4:	add	x6, x6, #0x8
  a8:	cmp	x6, x8
  ac:	b.ne	88 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x88>  // b.any
  b0:	cbz	x3, 298 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x298>
  b4:	ldr	x4, [x3]
  b8:	cmp	x4, x3
  bc:	b.hi	584 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x584>  // b.pmore
  c0:	ldr	x0, [x3, #8]
  c4:	add	x4, x4, x0
  c8:	cmp	x4, x3
  cc:	b.ls	59c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x59c>  // b.plast
  d0:	cmp	x19, x3
  d4:	b.cc	5b4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5b4>  // b.lo, b.ul, b.last
  d8:	cmp	x4, x19
  dc:	b.ls	298 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x298>  // b.plast
  e0:	ldr	x0, [x21, #448]
  e4:	sub	x1, x0, #0x1
  e8:	tst	x1, x3
  ec:	b.ne	4f8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x4f8>  // b.any
  f0:	dmb	ish
  f4:	strb	wzr, [x25]
  f8:	cmn	x0, x3
  fc:	b.eq	2a0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x2a0>  // b.none
 100:	mov	x0, #0xffffffffffff        	// #281474976710655
 104:	cmp	x19, x0
 108:	b.ls	440 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x440>  // b.plast
 10c:	ldr	x1, [x21, #448]
 110:	sub	x0, x1, #0x1
 114:	tst	x19, x0
 118:	b.ne	4d8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x4d8>  // b.any
 11c:	sub	x2, x19, x1
 120:	tst	x1, x0
 124:	ldr	x5, [x2, #16]
 128:	b.ne	5d0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5d0>  // b.any
 12c:	add	x5, x5, x0
 130:	neg	x0, x1
 134:	and	x0, x5, x0
 138:	cmp	x0, x23
 13c:	csel	x21, x0, x23, ls  // ls = plast
 140:	mov	x2, x23
 144:	mov	x3, x24
 148:	mov	x1, x22
 14c:	mov	x0, x20
 150:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 154:	mov	x23, x0
 158:	cbz	x0, 168 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x168>
 15c:	mov	x2, x21
 160:	mov	x1, x19
 164:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 168:	mov	x0, #0xffffffffffff        	// #281474976710655
 16c:	cmp	x19, x0
 170:	b.ls	44c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x44c>  // b.plast
 174:	add	x21, x20, #0x80, lsl #12
 178:	add	x21, x21, #0xc00
 17c:	ldr	x4, [x21, #448]
 180:	sub	x0, x4, #0x1
 184:	tst	x19, x0
 188:	b.ne	4d8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x4d8>  // b.any
 18c:	sub	x19, x19, x4
 190:	add	x25, x20, #0xc1, lsl #12
 194:	mov	w1, #0x1                   	// #1
 198:	ldxrb	w0, [x25]
 19c:	stxrb	w2, w1, [x25]
 1a0:	cbnz	w2, 198 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x198>
 1a4:	dmb	ish
 1a8:	tst	w0, #0xff
 1ac:	b.eq	1b8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x1b8>  // b.none
 1b0:	mov	x0, x25
 1b4:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 1b8:	ldr	x0, [x19, #24]
 1bc:	add	x21, x21, #0x1c0
 1c0:	ldr	x2, [x21, #8]
 1c4:	ldr	x3, [x2, x0, lsl #3]
 1c8:	cmp	x3, x19
 1cc:	b.ne	5e0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5e0>  // b.any
 1d0:	add	x21, x21, #0x40, lsl #12
 1d4:	ldr	x4, [x21, #16]
 1d8:	cmp	x0, x4
 1dc:	b.cs	5fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5fc>  // b.hs, b.nlast
 1e0:	sub	x4, x4, #0x1
 1e4:	ldr	x3, [x19, #8]
 1e8:	ldr	x5, [x2, x4, lsl #3]
 1ec:	str	x4, [x21, #16]
 1f0:	str	x5, [x2, x0, lsl #3]
 1f4:	ldp	x4, x2, [x21, #40]
 1f8:	str	x0, [x5, #24]
 1fc:	ldr	x0, [x25, #24]
 200:	strb	wzr, [x21, #24]
 204:	sub	x0, x0, x3
 208:	sub	x2, x2, x3
 20c:	add	x4, x4, #0x1
 210:	stp	x4, x2, [x21, #40]
 214:	str	x0, [x25, #24]
 218:	ldr	x0, [x25, #32]
 21c:	sub	x0, x0, x3
 220:	str	x0, [x25, #32]
 224:	dmb	ish
 228:	strb	wzr, [x25]
 22c:	ldp	x0, x1, [x19]
 230:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 234:	ldr	x25, [sp, #48]
 238:	mov	x0, x23
 23c:	ldp	x21, x22, [sp, #16]
 240:	ldp	x23, x24, [sp, #32]
 244:	ldr	x30, [sp, #56]
 248:	ldp	x19, x20, [sp], #64
 24c:	ret
 250:	lsr	x0, x2, #32
 254:	ldr	x1, [x20, x0, lsl #3]
 258:	dmb	ish
 25c:	cbz	x1, 3c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x3c>
 260:	lsr	w2, w2, #20
 264:	lsr	x3, x19, #20
 268:	ldrb	w1, [x1, x2]
 26c:	cbz	w1, 3c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x3c>
 270:	lsl	x1, x0, #3
 274:	ldr	x0, [x20, x0, lsl #3]
 278:	dmb	ish
 27c:	cbz	x0, 28c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x28c>
 280:	and	x3, x3, #0xfff
 284:	ldrb	w0, [x0, x3]
 288:	cbnz	w0, 518 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x518>
 28c:	add	x21, x20, #0x80, lsl #12
 290:	add	x21, x21, #0xc00
 294:	b	10c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x10c>
 298:	dmb	ish
 29c:	strb	wzr, [x25]
 2a0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 2a4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 2a8:	add	x2, x2, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	x4, #0x0                   	// #0
 2b4:	mov	x3, #0x0                   	// #0
 2b8:	mov	w1, #0x69                  	// #105
 2bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2c0:	mov	x2, x23
 2c4:	mov	x3, x4
 2c8:	ldp	x23, x24, [sp, #32]
 2cc:	ldr	x30, [sp, #56]
 2d0:	ldp	x19, x20, [sp], #64
 2d4:	b	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 2d8:	mov	x0, #0xffffffffffff        	// #281474976710655
 2dc:	cmp	x2, x0
 2e0:	b.hi	370 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x370>  // b.pmore
 2e4:	lsr	x1, x2, #32
 2e8:	ldr	x0, [x20, x1, lsl #3]
 2ec:	dmb	ish
 2f0:	cbz	x0, 370 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x370>
 2f4:	lsr	w2, w2, #20
 2f8:	ldrb	w0, [x0, x2]
 2fc:	cbz	w0, 370 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x370>
 300:	ldr	x0, [x20, x1, lsl #3]
 304:	dmb	ish
 308:	cbz	x0, 628 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x628>
 30c:	ldrb	w21, [x0, x2]
 310:	cbz	x21, 628 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x628>
 314:	cmp	x21, #0x35
 318:	b.hi	66c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x66c>  // b.pmore
 31c:	lsl	x23, x21, #10
 320:	add	x1, x22, x23
 324:	ldr	x2, [x1, #8]
 328:	cbz	x2, 7a0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x7a0>
 32c:	ldr	x0, [x22, x23]
 330:	cmp	x0, x2
 334:	b.eq	788 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x788>  // b.none
 338:	add	x1, x0, x21, lsl #7
 33c:	add	x3, x22, x23
 340:	add	x1, x1, #0x4
 344:	add	x0, x0, #0x1
 348:	mov	x5, #0xd800                	// #55296
 34c:	add	x2, x22, x5
 350:	str	x0, [x22, x23]
 354:	mov	x23, #0x0                   	// #0
 358:	str	x19, [x22, x1, lsl #3]
 35c:	ldr	x0, [x2, #16]
 360:	ldr	x1, [x3, #16]
 364:	sub	x0, x0, x1
 368:	str	x0, [x2, #16]
 36c:	b	238 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x238>
 370:	add	x21, x20, #0x80, lsl #12
 374:	add	x21, x21, #0xc00
 378:	ldr	x4, [x21, #448]
 37c:	str	x25, [sp, #48]
 380:	sub	x0, x4, #0x1
 384:	tst	x19, x0
 388:	b.ne	4d8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x4d8>  // b.any
 38c:	sub	x19, x19, x4
 390:	add	x25, x20, #0xc1, lsl #12
 394:	mov	w1, #0x1                   	// #1
 398:	ldxrb	w0, [x25]
 39c:	stxrb	w2, w1, [x25]
 3a0:	cbnz	w2, 398 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x398>
 3a4:	dmb	ish
 3a8:	tst	w0, #0xff
 3ac:	b.eq	3b8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x3b8>  // b.none
 3b0:	mov	x0, x25
 3b4:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 3b8:	ldr	x0, [x19, #24]
 3bc:	add	x21, x21, #0x1c0
 3c0:	ldr	x2, [x21, #8]
 3c4:	ldr	x3, [x2, x0, lsl #3]
 3c8:	cmp	x3, x19
 3cc:	b.ne	5e0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5e0>  // b.any
 3d0:	add	x21, x21, #0x40, lsl #12
 3d4:	ldr	x4, [x21, #16]
 3d8:	cmp	x0, x4
 3dc:	b.cs	5fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x5fc>  // b.hs, b.nlast
 3e0:	sub	x4, x4, #0x1
 3e4:	ldr	x3, [x19, #8]
 3e8:	ldr	x5, [x2, x4, lsl #3]
 3ec:	str	x4, [x21, #16]
 3f0:	str	x5, [x2, x0, lsl #3]
 3f4:	ldp	x4, x2, [x21, #40]
 3f8:	str	x0, [x5, #24]
 3fc:	ldr	x0, [x25, #24]
 400:	strb	wzr, [x21, #24]
 404:	sub	x0, x0, x3
 408:	sub	x2, x2, x3
 40c:	add	x4, x4, #0x1
 410:	stp	x4, x2, [x21, #40]
 414:	str	x0, [x25, #24]
 418:	ldr	x0, [x25, #32]
 41c:	sub	x0, x0, x3
 420:	str	x0, [x25, #32]
 424:	dmb	ish
 428:	strb	wzr, [x25]
 42c:	ldp	x0, x1, [x19]
 430:	mov	x23, #0x0                   	// #0
 434:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 438:	ldr	x25, [sp, #48]
 43c:	b	238 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x238>
 440:	lsr	x3, x19, #20
 444:	lsr	x0, x19, #32
 448:	b	270 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x270>
 44c:	lsr	x1, x19, #32
 450:	ldr	x0, [x20, x1, lsl #3]
 454:	dmb	ish
 458:	cbz	x0, 174 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x174>
 45c:	lsr	w2, w19, #20
 460:	ldrb	w0, [x0, x2]
 464:	cbz	w0, 174 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x174>
 468:	ldr	x0, [x20, x1, lsl #3]
 46c:	dmb	ish
 470:	cbz	x0, 62c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x62c>
 474:	ldrb	w21, [x0, x2]
 478:	cbz	x21, 62c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x62c>
 47c:	cmp	x21, #0x35
 480:	b.hi	670 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x670>  // b.pmore
 484:	lsl	x24, x21, #10
 488:	add	x1, x22, x24
 48c:	ldr	x2, [x1, #8]
 490:	cbz	x2, 6a8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x6a8>
 494:	ldr	x0, [x22, x24]
 498:	cmp	x0, x2
 49c:	b.eq	690 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x690>  // b.none
 4a0:	add	x1, x0, x21, lsl #7
 4a4:	add	x3, x22, x24
 4a8:	add	x1, x1, #0x4
 4ac:	add	x0, x0, #0x1
 4b0:	mov	x4, #0xd800                	// #55296
 4b4:	add	x2, x22, x4
 4b8:	str	x0, [x22, x24]
 4bc:	str	x19, [x22, x1, lsl #3]
 4c0:	ldr	x0, [x2, #16]
 4c4:	ldr	x1, [x3, #16]
 4c8:	ldr	x25, [sp, #48]
 4cc:	sub	x0, x0, x1
 4d0:	str	x0, [x2, #16]
 4d4:	b	238 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x238>
 4d8:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 4dc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 4e0:	add	x2, x2, #0x0
 4e4:	add	x0, x0, #0x0
 4e8:	mov	x4, #0x0                   	// #0
 4ec:	mov	x3, #0x0                   	// #0
 4f0:	mov	w1, #0x12d                 	// #301
 4f4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4f8:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 4fc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 500:	add	x2, x2, #0x0
 504:	add	x0, x0, #0x0
 508:	mov	x4, #0x0                   	// #0
 50c:	mov	x3, #0x0                   	// #0
 510:	mov	w1, #0x135                 	// #309
 514:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 518:	ldr	x0, [x20, x1]
 51c:	dmb	ish
 520:	cbz	x0, 64c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x64c>
 524:	ldrb	w0, [x0, x3]
 528:	cbz	w0, 64c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x64c>
 52c:	ldr	x21, [x20, x1]
 530:	dmb	ish
 534:	cbz	x21, 140 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x140>
 538:	ldrb	w0, [x21, x3]
 53c:	cmp	w0, #0x35
 540:	and	x1, x0, #0xff
 544:	b.eq	618 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x618>  // b.none
 548:	ubfiz	x0, x0, #4, #8
 54c:	cmp	x0, x23
 550:	csel	x21, x0, x23, ls  // ls = plast
 554:	cmp	x1, #0x10
 558:	b.ls	140 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x140>  // b.plast
 55c:	sub	x1, x1, #0x10
 560:	mov	x0, #0x100                 	// #256
 564:	and	x21, x1, #0x3
 568:	lsr	x1, x1, #2
 56c:	lsl	x1, x0, x1
 570:	lsr	x0, x1, #2
 574:	madd	x0, x0, x21, x1
 578:	cmp	x0, x23
 57c:	csel	x21, x0, x23, ls  // ls = plast
 580:	b	140 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x140>
 584:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 588:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 58c:	add	x2, x2, #0x0
 590:	add	x0, x0, #0x0
 594:	mov	w1, #0xc7                  	// #199
 598:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 59c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5a0:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5a4:	add	x2, x2, #0x0
 5a8:	add	x0, x0, #0x0
 5ac:	mov	w1, #0xc8                  	// #200
 5b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5b4:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5b8:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5bc:	mov	x4, x19
 5c0:	add	x2, x2, #0x0
 5c4:	add	x0, x0, #0x0
 5c8:	mov	w1, #0xc9                  	// #201
 5cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5d0:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5d4:	add	x0, x0, #0x0
 5d8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5dc:	bl	0 <_ZN11__sanitizer3DieEv>
 5e0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5e4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 5e8:	mov	x4, x19
 5ec:	add	x2, x2, #0x0
 5f0:	add	x0, x0, #0x0
 5f4:	mov	w1, #0x8b                  	// #139
 5f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5fc:	mov	x3, x0
 600:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 604:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 608:	add	x2, x2, #0x0
 60c:	add	x0, x0, #0x0
 610:	mov	w1, #0x8c                  	// #140
 614:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 618:	cmp	x23, #0x200
 61c:	mov	x0, #0x200                 	// #512
 620:	csel	x21, x23, x0, ls  // ls = plast
 624:	b	140 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x140>
 628:	str	x25, [sp, #48]
 62c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 630:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 634:	add	x2, x2, #0x0
 638:	add	x0, x0, #0x0
 63c:	mov	x4, #0x0                   	// #0
 640:	mov	x3, #0x0                   	// #0
 644:	mov	w1, #0xa8                  	// #168
 648:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 64c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 650:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 654:	add	x2, x2, #0x0
 658:	add	x0, x0, #0x0
 65c:	mov	x4, #0x0                   	// #0
 660:	mov	x3, #0x0                   	// #0
 664:	mov	w1, #0xd7                  	// #215
 668:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 66c:	str	x25, [sp, #48]
 670:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 674:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 678:	mov	x3, x21
 67c:	add	x2, x2, #0x0
 680:	add	x0, x0, #0x0
 684:	mov	x4, #0x36                  	// #54
 688:	mov	w1, #0xa9                  	// #169
 68c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 690:	mov	x0, x22
 694:	mov	x2, x20
 698:	mov	x3, x21
 69c:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 6a0:	ldr	x0, [x22, x24]
 6a4:	b	4a0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x4a0>
 6a8:	mov	x2, #0x1                   	// #1
 6ac:	mov	x11, x2
 6b0:	mov	x12, #0x7c                  	// #124
 6b4:	mov	x10, #0x14                  	// #20
 6b8:	mov	x9, #0x100                 	// #256
 6bc:	mov	w8, #0x4000                	// #16384
 6c0:	mov	x7, #0x3e                  	// #62
 6c4:	nop
 6c8:	add	x5, x22, x2, lsl #10
 6cc:	lsl	x6, x2, #4
 6d0:	mov	x4, x5
 6d4:	mov	x0, #0x14                  	// #20
 6d8:	mov	x3, x2
 6dc:	add	x2, x2, #0x1
 6e0:	stp	x12, x6, [x5, #8]
 6e4:	cmp	x2, #0x36
 6e8:	str	x0, [x4, #24]
 6ec:	b.eq	75c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x75c>  // b.none
 6f0:	cmp	x2, #0x35
 6f4:	b.eq	764 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x764>  // b.none
 6f8:	cmp	x2, #0x10
 6fc:	b.ls	6c8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x6c8>  // b.plast
 700:	sub	x0, x3, #0xf
 704:	add	x4, x4, #0x400
 708:	and	x6, x0, #0x3
 70c:	mov	x3, x2
 710:	lsr	x0, x0, #2
 714:	add	x2, x2, #0x1
 718:	lsl	x0, x9, x0
 71c:	lsr	x5, x0, #2
 720:	madd	x5, x5, x6, x0
 724:	str	x5, [x4, #16]
 728:	udiv	w0, w8, w5
 72c:	cmp	x0, #0x0
 730:	csel	x0, x0, x11, ne  // ne = any
 734:	cmp	x0, #0x3e
 738:	csel	x0, x0, x7, ls  // ls = plast
 73c:	add	x6, x0, #0x2
 740:	lsl	x0, x0, #1
 744:	str	x0, [x4, #8]
 748:	cmp	x5, x6, lsl #3
 74c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 750:	str	x0, [x4, #24]
 754:	cmp	x2, #0x36
 758:	b.ne	6f0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x6f0>  // b.any
 75c:	ldr	x2, [x1, #8]
 760:	b	494 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x494>
 764:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 768:	ldr	q0, [x0]
 76c:	mov	x0, #0xd400                	// #54272
 770:	add	x2, x22, x0
 774:	add	x0, x22, #0x8, lsl #12
 778:	stur	q0, [x2, #8]
 77c:	str	xzr, [x0, #21528]
 780:	ldr	x2, [x1, #8]
 784:	b	494 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x494>
 788:	mov	x0, x22
 78c:	mov	x2, x20
 790:	mov	x3, x21
 794:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 798:	ldr	x0, [x22, x23]
 79c:	b	338 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x338>
 7a0:	mov	x2, #0x1                   	// #1
 7a4:	mov	x11, x2
 7a8:	mov	x12, #0x7c                  	// #124
 7ac:	mov	x10, #0x14                  	// #20
 7b0:	mov	x9, #0x100                 	// #256
 7b4:	mov	w8, #0x4000                	// #16384
 7b8:	mov	x7, #0x3e                  	// #62
 7bc:	nop
 7c0:	add	x5, x22, x2, lsl #10
 7c4:	lsl	x6, x2, #4
 7c8:	mov	x4, x5
 7cc:	mov	x0, #0x14                  	// #20
 7d0:	mov	x3, x2
 7d4:	add	x2, x2, #0x1
 7d8:	stp	x12, x6, [x5, #8]
 7dc:	cmp	x2, #0x36
 7e0:	str	x0, [x4, #24]
 7e4:	b.eq	854 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x854>  // b.none
 7e8:	cmp	x2, #0x35
 7ec:	b.eq	85c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x85c>  // b.none
 7f0:	cmp	x2, #0x10
 7f4:	b.ls	7c0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x7c0>  // b.plast
 7f8:	sub	x0, x3, #0xf
 7fc:	add	x4, x4, #0x400
 800:	and	x6, x0, #0x3
 804:	mov	x3, x2
 808:	lsr	x0, x0, #2
 80c:	add	x2, x2, #0x1
 810:	lsl	x0, x9, x0
 814:	lsr	x5, x0, #2
 818:	madd	x5, x5, x6, x0
 81c:	str	x5, [x4, #16]
 820:	udiv	w0, w8, w5
 824:	cmp	x0, #0x0
 828:	csel	x0, x0, x11, ne  // ne = any
 82c:	cmp	x0, #0x3e
 830:	csel	x0, x0, x7, ls  // ls = plast
 834:	add	x6, x0, #0x2
 838:	lsl	x0, x0, #1
 83c:	str	x0, [x4, #8]
 840:	cmp	x5, x6, lsl #3
 844:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 848:	str	x0, [x4, #24]
 84c:	cmp	x2, #0x36
 850:	b.ne	7e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x7e8>  // b.any
 854:	ldr	x2, [x1, #8]
 858:	b	32c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x32c>
 85c:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm>
 860:	mov	x2, #0xd400                	// #54272
 864:	add	x2, x22, x2
 868:	ldr	q0, [x0]
 86c:	add	x0, x22, #0x8, lsl #12
 870:	stur	q0, [x2, #8]
 874:	str	xzr, [x0, #21528]
 878:	ldr	x2, [x1, #8]
 87c:	b	32c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32INS_4AP32EEENS_32LargeMmapAllocatorPtrArrayStaticEE10ReallocateEPNS_30SizeClassAllocator32LocalCacheIS3_EEPvmm+0x32c>

sanitizer_common.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>:
   0:	str	x30, [sp, #-16]!
   4:	tst	w4, #0xff
   8:	b.ne	1c <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib+0x1c>  // b.any
   c:	adrp	x8, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  10:	mov	x7, x0
  14:	ldr	w0, [x8]
  18:	cbz	w0, 2c <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib+0x2c>
  1c:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  20:	add	x0, x0, #0x0
  24:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  28:	bl	0 <_ZN11__sanitizer3DieEv>
  2c:	adrp	x4, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  30:	mov	x5, x1
  34:	mov	w6, w3
  38:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  3c:	ldr	x1, [x4]
  40:	mov	x3, x7
  44:	mov	x4, x7
  48:	add	x0, x0, #0x0
  4c:	mov	w7, #0x1                   	// #1
  50:	str	w7, [x8]
  54:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  58:	bl	0 <_ZN11__sanitizer14DumpProcessMapEv>
  5c:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  60:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
  64:	add	x2, x2, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	x4, #0x0                   	// #0
  70:	mov	x3, #0x0                   	// #0
  74:	mov	w1, #0x36                  	// #54
  78:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  7c:	nop

0000000000000080 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>:
  80:	stp	x19, x20, [sp, #-32]!
  84:	str	x30, [sp, #24]
  88:	cbz	x0, f8 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x78>
  8c:	mov	x19, x0
  90:	mov	x20, x1
  94:	cbz	x1, c4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x44>
  98:	str	x21, [sp, #16]
  9c:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
  a0:	mov	x21, x0
  a4:	cbz	x0, b4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x34>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  b0:	add	x19, x21, x0
  b4:	ldrb	w0, [x19]
  b8:	cmp	w0, #0x2e
  bc:	b.eq	d4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x54>  // b.none
  c0:	ldr	x21, [sp, #16]
  c4:	mov	x0, x19
  c8:	ldr	x30, [sp, #24]
  cc:	ldp	x19, x20, [sp], #32
  d0:	ret
  d4:	ldrb	w1, [x19, #1]
  d8:	add	x0, x19, #0x2
  dc:	ldr	x21, [sp, #16]
  e0:	cmp	w1, #0x2f
  e4:	csel	x19, x0, x19, eq  // eq = none
  e8:	mov	x0, x19
  ec:	ldr	x30, [sp, #24]
  f0:	ldp	x19, x20, [sp], #32
  f4:	ret
  f8:	mov	x19, #0x0                   	// #0
  fc:	b	c4 <_ZN11__sanitizer15StripPathPrefixEPKcS1_+0x44>

0000000000000100 <_ZN11__sanitizer15StripModuleNameEPKc>:
 100:	stp	x19, x30, [sp, #-16]!
 104:	mov	x19, x0
 108:	cbz	x0, 11c <_ZN11__sanitizer15StripModuleNameEPKc+0x1c>
 10c:	mov	w1, #0x2f                  	// #47
 110:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 114:	cmp	x0, #0x0
 118:	csinc	x19, x19, x0, eq  // eq = none
 11c:	mov	x0, x19
 120:	ldp	x19, x30, [sp], #16
 124:	ret

0000000000000128 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc>:
 128:	cbz	x0, 1b4 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x8c>
 12c:	stp	x19, x30, [sp, #-16]!
 130:	mov	x19, x0
 134:	ldrb	w1, [x0]
 138:	cbz	w1, 1a8 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x80>
 13c:	nop
 140:	cmp	w1, #0x1b
 144:	b.eq	18c <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x64>  // b.none
 148:	cmp	x0, x19
 14c:	b.eq	154 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x2c>  // b.none
 150:	strb	w1, [x19]
 154:	add	x19, x19, #0x1
 158:	ldrb	w1, [x0, #1]
 15c:	add	x0, x0, #0x1
 160:	cbz	w1, 1a8 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x80>
 164:	cmp	x0, x19
 168:	b.cs	140 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x18>  // b.hs, b.nlast
 16c:	mov	x3, x0
 170:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 174:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 178:	mov	x4, x19
 17c:	add	x2, x2, #0x0
 180:	add	x0, x0, #0x0
 184:	mov	w1, #0x69                  	// #105
 188:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 18c:	ldrb	w2, [x0, #1]
 190:	cmp	w2, #0x5b
 194:	b.ne	148 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x20>  // b.any
 198:	mov	w1, #0x6d                  	// #109
 19c:	bl	0 <_ZN11__sanitizer18internal_strchrnulEPKci>
 1a0:	ldrb	w1, [x0]
 1a4:	cbnz	w1, 158 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc+0x30>
 1a8:	strb	wzr, [x19]
 1ac:	ldp	x19, x30, [sp], #16
 1b0:	ret
 1b4:	ret

00000000000001b8 <_ZN11__sanitizer12LoadedModule5clearEv>:
 1b8:	stp	x19, x20, [sp, #-32]!
 1bc:	mov	x19, x0
 1c0:	mov	x1, #0x0                   	// #0
 1c4:	ldr	x0, [x0]
 1c8:	str	x30, [sp, #16]
 1cc:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1d0:	str	xzr, [x19]
 1d4:	stp	xzr, xzr, [x19, #8]
 1d8:	mov	x2, #0x10                  	// #16
 1dc:	add	x0, x19, #0x1c
 1e0:	str	wzr, [x19, #24]
 1e4:	mov	w1, #0x0                   	// #0
 1e8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 1ec:	strb	wzr, [x19, #44]
 1f0:	ldr	x2, [x19, #48]
 1f4:	cbz	x2, 228 <_ZN11__sanitizer12LoadedModule5clearEv+0x70>
 1f8:	add	x20, x19, #0x30
 1fc:	nop
 200:	ldr	x0, [x19, #56]
 204:	sub	x4, x2, #0x1
 208:	mov	x1, #0x0                   	// #0
 20c:	ldr	x3, [x0]
 210:	str	x3, [x20, #8]
 214:	cbz	x3, 234 <_ZN11__sanitizer12LoadedModule5clearEv+0x7c>
 218:	str	x4, [x20]
 21c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 220:	ldr	x2, [x19, #48]
 224:	cbnz	x2, 200 <_ZN11__sanitizer12LoadedModule5clearEv+0x48>
 228:	ldr	x30, [sp, #16]
 22c:	ldp	x19, x20, [sp], #32
 230:	ret
 234:	str	x4, [x20]
 238:	str	xzr, [x20, #16]
 23c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 240:	ldr	x2, [x19, #48]
 244:	cbnz	x2, 200 <_ZN11__sanitizer12LoadedModule5clearEv+0x48>
 248:	ldr	x30, [sp, #16]
 24c:	ldp	x19, x20, [sp], #32
 250:	ret
 254:	nop

0000000000000258 <_ZN11__sanitizer12LoadedModule3setEPKcm>:
 258:	stp	x19, x20, [sp, #-32]!
 25c:	mov	x19, x0
 260:	mov	x20, x2
 264:	stp	x21, x30, [sp, #16]
 268:	mov	x21, x1
 26c:	bl	1b8 <_ZN11__sanitizer12LoadedModule5clearEv>
 270:	mov	x0, x21
 274:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 278:	ldp	x21, x30, [sp, #16]
 27c:	stp	x0, x20, [x19]
 280:	ldp	x19, x20, [sp], #32
 284:	ret

0000000000000288 <_ZN11__sanitizer12LoadedModule3setEPKcmNS_10ModuleArchEPhb>:
 288:	stp	x19, x20, [sp, #-64]!
 28c:	mov	x19, x0
 290:	mov	w20, w3
 294:	stp	x21, x22, [sp, #16]
 298:	mov	x21, x4
 29c:	mov	x22, x2
 2a0:	stp	x23, x24, [sp, #32]
 2a4:	and	w24, w5, #0xff
 2a8:	mov	x23, x1
 2ac:	str	x30, [sp, #48]
 2b0:	bl	1b8 <_ZN11__sanitizer12LoadedModule5clearEv>
 2b4:	mov	x0, x23
 2b8:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 2bc:	stp	x0, x22, [x19]
 2c0:	mov	x1, x21
 2c4:	add	x0, x19, #0x1c
 2c8:	str	w20, [x19, #24]
 2cc:	mov	x2, #0x10                  	// #16
 2d0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2d4:	strb	w24, [x19, #44]
 2d8:	ldp	x21, x22, [sp, #16]
 2dc:	ldp	x23, x24, [sp, #32]
 2e0:	ldr	x30, [sp, #48]
 2e4:	ldp	x19, x20, [sp], #64
 2e8:	ret
 2ec:	nop

00000000000002f0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>:
 2f0:	stp	x19, x20, [sp, #-64]!
 2f4:	mov	x20, x0
 2f8:	mov	x0, #0x30                  	// #48
 2fc:	stp	x21, x22, [sp, #16]
 300:	mov	x21, x5
 304:	mov	x22, x2
 308:	mov	x2, #0x0                   	// #0
 30c:	stp	x23, x24, [sp, #32]
 310:	and	w24, w3, #0xff
 314:	mov	x23, x1
 318:	mov	x1, #0x0                   	// #0
 31c:	stp	x25, x30, [sp, #48]
 320:	and	w25, w4, #0xff
 324:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 328:	mov	x19, x0
 32c:	cmp	x21, #0x0
 330:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 334:	add	x1, x1, #0x0
 338:	add	x0, x0, #0x1a
 33c:	csel	x1, x1, x21, eq  // eq = none
 340:	stp	xzr, x23, [x19]
 344:	mov	x2, #0x10                  	// #16
 348:	str	x22, [x19, #16]
 34c:	strb	w24, [x19, #24]
 350:	strb	w25, [x19, #25]
 354:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 358:	ldr	x0, [x20, #48]
 35c:	cbnz	x0, 39c <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0xac>
 360:	dup	v0.2d, x19
 364:	str	xzr, [x19]
 368:	mov	x0, #0x1                   	// #1
 36c:	str	x0, [x20, #48]
 370:	stur	q0, [x20, #56]
 374:	cbz	w24, 388 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0x98>
 378:	ldr	x0, [x20, #16]
 37c:	cmp	x0, x22
 380:	b.cs	388 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0x98>  // b.hs, b.nlast
 384:	str	x22, [x20, #16]
 388:	ldp	x21, x22, [sp, #16]
 38c:	ldp	x23, x24, [sp, #32]
 390:	ldp	x25, x30, [sp, #48]
 394:	ldp	x19, x20, [sp], #64
 398:	ret
 39c:	str	xzr, [x19]
 3a0:	add	x0, x0, #0x1
 3a4:	ldr	x2, [x20, #64]
 3a8:	str	x19, [x2]
 3ac:	str	x0, [x20, #48]
 3b0:	str	x19, [x20, #64]
 3b4:	b	374 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc+0x84>

00000000000003b8 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>:
 3b8:	ldr	x0, [x0, #56]
 3bc:	cbz	x0, 3ec <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x34>
 3c0:	ldr	x2, [x0, #8]
 3c4:	cmp	x2, x1
 3c8:	b.hi	3d8 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x20>  // b.pmore
 3cc:	ldr	x2, [x0, #16]
 3d0:	cmp	x2, x1
 3d4:	b.hi	3e4 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x2c>  // b.pmore
 3d8:	ldr	x0, [x0]
 3dc:	cbnz	x0, 3c0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm+0x8>
 3e0:	ret
 3e4:	mov	w0, #0x1                   	// #1
 3e8:	ret
 3ec:	mov	w0, #0x0                   	// #0
 3f0:	ret
 3f4:	nop

00000000000003f8 <_ZN11__sanitizer17IncreaseTotalMmapEm>:
 3f8:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 3fc:	ldr	x1, [x1]
 400:	ldr	x2, [x1, #128]
 404:	cbnz	x2, 40c <_ZN11__sanitizer17IncreaseTotalMmapEm+0x14>
 408:	ret
 40c:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 410:	add	x2, x2, #0x0
 414:	add	x2, x2, #0x8
 418:	ldxr	x3, [x2]
 41c:	add	x4, x3, x0
 420:	stlxr	w5, x4, [x2]
 424:	cbnz	w5, 418 <_ZN11__sanitizer17IncreaseTotalMmapEm+0x20>
 428:	dmb	ish
 42c:	ldr	x1, [x1, #128]
 430:	add	x0, x3, x0
 434:	cmp	x1, x0, lsr #20
 438:	b.hi	408 <_ZN11__sanitizer17IncreaseTotalMmapEm+0x10>  // b.pmore
 43c:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 440:	add	x0, x0, #0x0
 444:	str	x30, [sp, #-16]!
 448:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 44c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000450 <_ZN11__sanitizer17DecreaseTotalMmapEm>:
 450:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 454:	ldr	x1, [x1]
 458:	ldr	x1, [x1, #128]
 45c:	cbnz	x1, 464 <_ZN11__sanitizer17DecreaseTotalMmapEm+0x14>
 460:	ret
 464:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 468:	add	x1, x1, #0x0
 46c:	neg	x0, x0
 470:	add	x1, x1, #0x8
 474:	ldxr	x2, [x1]
 478:	add	x2, x2, x0
 47c:	stlxr	w3, x2, [x1]
 480:	cbnz	w3, 474 <_ZN11__sanitizer17DecreaseTotalMmapEm+0x24>
 484:	dmb	ish
 488:	ret
 48c:	nop

0000000000000490 <_ZN11__sanitizer13TemplateMatchEPKcS1_>:
 490:	cbz	x1, 624 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x194>
 494:	stp	x19, x20, [sp, #-80]!
 498:	mov	x19, x0
 49c:	stp	x21, x22, [sp, #16]
 4a0:	mov	x21, x1
 4a4:	str	x30, [sp, #64]
 4a8:	ldrb	w0, [x1]
 4ac:	cbz	w0, 5a4 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x114>
 4b0:	cbz	x19, 588 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xf8>
 4b4:	stp	x23, x24, [sp, #32]
 4b8:	mov	w23, #0x0                   	// #0
 4bc:	stp	x25, x26, [sp, #48]
 4c0:	ldrb	w1, [x19]
 4c4:	cmp	w1, #0x5e
 4c8:	b.ne	4d8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x48>  // b.any
 4cc:	ldrb	w1, [x19, #1]
 4d0:	add	x19, x19, #0x1
 4d4:	mov	w23, #0x1                   	// #1
 4d8:	mov	w2, #0x0                   	// #0
 4dc:	mov	w25, #0x2a                  	// #42
 4e0:	mov	w24, #0x24                  	// #36
 4e4:	cbz	w1, 580 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xf0>
 4e8:	cmp	w1, #0x2a
 4ec:	b.eq	614 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x184>  // b.none
 4f0:	ldrb	w0, [x21]
 4f4:	cmp	w1, #0x24
 4f8:	b.eq	62c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x19c>  // b.none
 4fc:	cbz	w0, 59c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x10c>
 500:	mov	w1, #0x2a                  	// #42
 504:	mov	x0, x19
 508:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 50c:	mov	x22, x0
 510:	mov	w1, #0x24                  	// #36
 514:	mov	x0, x19
 518:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 51c:	mov	x26, x0
 520:	cbz	x22, 5ec <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x15c>
 524:	cmp	x0, #0x0
 528:	ccmp	x22, x0, #0x0, ne  // ne = any
 52c:	b.ls	5b8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x128>  // b.plast
 530:	strb	wzr, [x26]
 534:	mov	x1, x19
 538:	mov	x0, x21
 53c:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 540:	mov	x20, x0
 544:	mov	x0, x19
 548:	mov	x19, x26
 54c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 550:	add	x0, x20, x0
 554:	mov	w1, #0x24                  	// #36
 558:	strb	w1, [x19]
 55c:	cbz	x20, 59c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x10c>
 560:	cmp	x21, x20
 564:	csel	w2, w23, wzr, ne  // ne = any
 568:	cbnz	w2, 59c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x10c>
 56c:	cbz	x19, 580 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xf0>
 570:	ldrb	w1, [x19]
 574:	mov	x21, x0
 578:	mov	w23, #0x0                   	// #0
 57c:	cbnz	w1, 4e8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x58>
 580:	ldp	x23, x24, [sp, #32]
 584:	ldp	x25, x26, [sp, #48]
 588:	mov	w0, #0x1                   	// #1
 58c:	ldp	x21, x22, [sp, #16]
 590:	ldr	x30, [sp, #64]
 594:	ldp	x19, x20, [sp], #80
 598:	ret
 59c:	ldp	x23, x24, [sp, #32]
 5a0:	ldp	x25, x26, [sp, #48]
 5a4:	mov	w0, #0x0                   	// #0
 5a8:	ldp	x21, x22, [sp, #16]
 5ac:	ldr	x30, [sp, #64]
 5b0:	ldp	x19, x20, [sp], #80
 5b4:	ret
 5b8:	strb	wzr, [x22]
 5bc:	mov	x1, x19
 5c0:	mov	x0, x21
 5c4:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 5c8:	mov	x20, x0
 5cc:	mov	x0, x19
 5d0:	mov	x19, x22
 5d4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 5d8:	add	x0, x20, x0
 5dc:	cmp	x22, x26
 5e0:	csel	w1, w24, w25, eq  // eq = none
 5e4:	strb	w1, [x19]
 5e8:	b	55c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xcc>
 5ec:	cbnz	x0, 530 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xa0>
 5f0:	mov	x1, x19
 5f4:	mov	x0, x21
 5f8:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
 5fc:	mov	x20, x0
 600:	mov	x0, x19
 604:	mov	x19, #0x0                   	// #0
 608:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 60c:	add	x0, x20, x0
 610:	b	55c <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xcc>
 614:	add	x19, x19, #0x1
 618:	mov	x0, x21
 61c:	mov	w2, #0x1                   	// #1
 620:	b	570 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0xe0>
 624:	mov	w0, #0x0                   	// #0
 628:	ret
 62c:	cmp	w0, #0x0
 630:	csinc	w0, w2, wzr, ne  // ne = any
 634:	ldp	x23, x24, [sp, #32]
 638:	ldp	x25, x26, [sp, #48]
 63c:	b	5a8 <_ZN11__sanitizer13TemplateMatchEPKcS1_+0x118>

0000000000000640 <_ZN11__sanitizer14GetProcessNameEv>:
 640:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 644:	add	x0, x0, #0x0
 648:	ret
 64c:	nop

0000000000000650 <_ZN11__sanitizer17UpdateProcessNameEv>:
 650:	stp	x19, x20, [sp, #-32]!
 654:	adrp	x19, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 658:	add	x19, x19, #0x0
 65c:	mov	x1, #0x1000                	// #4096
 660:	mov	x0, x19
 664:	str	x30, [sp, #24]
 668:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 66c:	mov	x0, x19
 670:	mov	w1, #0x2f                  	// #47
 674:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 678:	cbz	x0, 6bc <_ZN11__sanitizer17UpdateProcessNameEv+0x6c>
 67c:	add	x20, x0, #0x1
 680:	str	x21, [sp, #16]
 684:	mov	x0, x20
 688:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 68c:	cmp	x20, x19
 690:	mov	x21, x0
 694:	b.eq	6ac <_ZN11__sanitizer17UpdateProcessNameEv+0x5c>  // b.none
 698:	mov	x2, x0
 69c:	mov	x1, x20
 6a0:	mov	x0, x19
 6a4:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 6a8:	strb	wzr, [x21, x19]
 6ac:	ldr	x21, [sp, #16]
 6b0:	ldr	x30, [sp, #24]
 6b4:	ldp	x19, x20, [sp], #32
 6b8:	ret
 6bc:	mov	x0, x19
 6c0:	ldr	x30, [sp, #24]
 6c4:	ldp	x19, x20, [sp], #32
 6c8:	b	0 <_ZN11__sanitizer15internal_strlenEPKc>
 6cc:	nop

00000000000006d0 <_ZN11__sanitizer15CacheBinaryNameEv>:
 6d0:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 6d4:	add	x0, x1, #0x0
 6d8:	ldrb	w1, [x1]
 6dc:	cbz	w1, 6e4 <_ZN11__sanitizer15CacheBinaryNameEv+0x14>
 6e0:	ret
 6e4:	stp	x19, x20, [sp, #-32]!
 6e8:	mov	x1, #0x1000                	// #4096
 6ec:	adrp	x19, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 6f0:	add	x19, x19, #0x0
 6f4:	str	x30, [sp, #24]
 6f8:	bl	0 <_ZN11__sanitizer14ReadBinaryNameEPcm>
 6fc:	mov	x1, #0x1000                	// #4096
 700:	mov	x0, x19
 704:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 708:	mov	x0, x19
 70c:	mov	w1, #0x2f                  	// #47
 710:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 714:	cbz	x0, 758 <_ZN11__sanitizer15CacheBinaryNameEv+0x88>
 718:	add	x20, x0, #0x1
 71c:	str	x21, [sp, #16]
 720:	mov	x0, x20
 724:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 728:	cmp	x20, x19
 72c:	mov	x21, x0
 730:	b.eq	748 <_ZN11__sanitizer15CacheBinaryNameEv+0x78>  // b.none
 734:	mov	x2, x0
 738:	mov	x1, x20
 73c:	mov	x0, x19
 740:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 744:	strb	wzr, [x21, x19]
 748:	ldr	x21, [sp, #16]
 74c:	ldr	x30, [sp, #24]
 750:	ldp	x19, x20, [sp], #32
 754:	ret
 758:	mov	x0, x19
 75c:	ldr	x30, [sp, #24]
 760:	ldp	x19, x20, [sp], #32
 764:	b	0 <_ZN11__sanitizer15internal_strlenEPKc>

0000000000000768 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>:
 768:	stp	x19, x20, [sp, #-64]!
 76c:	adrp	x20, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 770:	mov	x19, x1
 774:	ldrb	w2, [x20]
 778:	stp	x21, x22, [sp, #16]
 77c:	mov	x21, x0
 780:	str	x30, [sp, #48]
 784:	cbz	w2, 7d0 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x68>
 788:	add	x20, x20, #0x0
 78c:	mov	x0, x20
 790:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 794:	mov	x2, x0
 798:	cbz	x19, 7bc <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x54>
 79c:	sub	x19, x19, #0x1
 7a0:	mov	x1, x20
 7a4:	cmp	x19, x0
 7a8:	mov	x0, x21
 7ac:	csel	x19, x19, x2, ls  // ls = plast
 7b0:	mov	x2, x19
 7b4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 7b8:	strb	wzr, [x21, x19]
 7bc:	mov	x0, x19
 7c0:	ldp	x21, x22, [sp, #16]
 7c4:	ldr	x30, [sp, #48]
 7c8:	ldp	x19, x20, [sp], #64
 7cc:	ret
 7d0:	mov	x1, #0x1000                	// #4096
 7d4:	add	x0, x20, #0x0
 7d8:	adrp	x22, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 7dc:	bl	0 <_ZN11__sanitizer14ReadBinaryNameEPcm>
 7e0:	add	x22, x22, #0x0
 7e4:	mov	x1, #0x1000                	// #4096
 7e8:	mov	x0, x22
 7ec:	bl	0 <_ZN11__sanitizer19ReadLongProcessNameEPcm>
 7f0:	mov	x0, x22
 7f4:	mov	w1, #0x2f                  	// #47
 7f8:	bl	0 <_ZN11__sanitizer16internal_strrchrEPKci>
 7fc:	cbz	x0, 838 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0xd0>
 800:	stp	x23, x24, [sp, #32]
 804:	add	x23, x0, #0x1
 808:	mov	x0, x23
 80c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 810:	mov	x24, x0
 814:	cmp	x23, x22
 818:	b.eq	844 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0xdc>  // b.none
 81c:	mov	x1, x23
 820:	mov	x2, x0
 824:	mov	x0, x22
 828:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
 82c:	strb	wzr, [x24, x22]
 830:	ldp	x23, x24, [sp, #32]
 834:	b	788 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x20>
 838:	mov	x0, x22
 83c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 840:	b	788 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x20>
 844:	ldp	x23, x24, [sp, #32]
 848:	b	788 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm+0x20>
 84c:	nop

0000000000000850 <_ZN11__sanitizer12PrintCmdlineEv>:
 850:	stp	x19, x20, [sp, #-32]!
 854:	str	x30, [sp, #16]
 858:	bl	0 <_ZN11__sanitizer7GetArgvEv>
 85c:	cbz	x0, 8ac <_ZN11__sanitizer12PrintCmdlineEv+0x5c>
 860:	mov	x19, x0
 864:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 868:	add	x0, x0, #0x0
 86c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 870:	ldr	x1, [x19]
 874:	cbz	x1, 898 <_ZN11__sanitizer12PrintCmdlineEv+0x48>
 878:	adrp	x20, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 87c:	add	x19, x19, #0x8
 880:	add	x20, x20, #0x0
 884:	nop
 888:	mov	x0, x20
 88c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 890:	ldr	x1, [x19], #8
 894:	cbnz	x1, 888 <_ZN11__sanitizer12PrintCmdlineEv+0x38>
 898:	ldr	x30, [sp, #16]
 89c:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 8a0:	ldp	x19, x20, [sp], #32
 8a4:	add	x0, x0, #0x0
 8a8:	b	0 <_ZN11__sanitizer6PrintfEPKcz>
 8ac:	ldr	x30, [sp, #16]
 8b0:	ldp	x19, x20, [sp], #32
 8b4:	ret

00000000000008b8 <_ZN11__sanitizer14RunMallocHooksEPKvm>:
 8b8:	stp	x19, x20, [sp, #-48]!
 8bc:	adrp	x20, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 8c0:	add	x20, x20, #0x0
 8c4:	add	x19, x20, #0x10
 8c8:	add	x20, x20, #0x60
 8cc:	stp	x21, x22, [sp, #16]
 8d0:	mov	x22, x0
 8d4:	mov	x21, x1
 8d8:	str	x30, [sp, #32]
 8dc:	ldr	x2, [x19]
 8e0:	mov	x1, x21
 8e4:	mov	x0, x22
 8e8:	add	x19, x19, #0x10
 8ec:	cbz	x2, 8fc <_ZN11__sanitizer14RunMallocHooksEPKvm+0x44>
 8f0:	blr	x2
 8f4:	cmp	x19, x20
 8f8:	b.ne	8dc <_ZN11__sanitizer14RunMallocHooksEPKvm+0x24>  // b.any
 8fc:	ldp	x21, x22, [sp, #16]
 900:	ldr	x30, [sp, #32]
 904:	ldp	x19, x20, [sp], #48
 908:	ret
 90c:	nop

0000000000000910 <_ZN11__sanitizer12RunFreeHooksEPKv>:
 910:	stp	x19, x20, [sp, #-32]!
 914:	adrp	x20, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 918:	add	x20, x20, #0x0
 91c:	add	x20, x20, #0x10
 920:	stp	x21, x30, [sp, #16]
 924:	mov	x21, x0
 928:	mov	x19, #0x0                   	// #0
 92c:	add	x1, x20, x19
 930:	mov	x0, x21
 934:	add	x19, x19, #0x10
 938:	ldr	x1, [x1, #8]
 93c:	cbz	x1, 94c <_ZN11__sanitizer12RunFreeHooksEPKv+0x3c>
 940:	blr	x1
 944:	cmp	x19, #0x50
 948:	b.ne	92c <_ZN11__sanitizer12RunFreeHooksEPKv+0x1c>  // b.any
 94c:	ldp	x21, x30, [sp, #16]
 950:	ldp	x19, x20, [sp], #32
 954:	ret

0000000000000958 <__sanitizer_report_error_summary>:
 958:	mov	x1, x0
 95c:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 960:	add	x0, x2, #0x0
 964:	b	0 <_ZN11__sanitizer6PrintfEPKcz>

0000000000000968 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>:
 968:	adrp	x4, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 96c:	ldr	x4, [x4]
 970:	ldrb	w2, [x4, #60]
 974:	cbnz	w2, 97c <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x14>
 978:	ret
 97c:	stp	x19, x20, [sp, #-96]!
 980:	mov	x20, x1
 984:	stp	x23, x24, [sp, #32]
 988:	adrp	x23, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 98c:	add	x19, x23, #0x0
 990:	stp	x21, x22, [sp, #16]
 994:	mov	x21, x0
 998:	ldr	x2, [x19, #96]
 99c:	str	x30, [sp, #48]
 9a0:	str	xzr, [sp, #64]
 9a4:	stp	xzr, xzr, [sp, #72]
 9a8:	cbz	x2, a78 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x110>
 9ac:	sub	x0, x2, #0x1
 9b0:	tst	x0, x2
 9b4:	b.ne	ae0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x178>  // b.any
 9b8:	add	x22, x2, #0x3ff
 9bc:	neg	x2, x2
 9c0:	and	x22, x22, x2
 9c4:	adrp	x24, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 9c8:	mov	w2, #0x0                   	// #0
 9cc:	add	x1, x24, #0x0
 9d0:	mov	x0, x22
 9d4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 9d8:	ldr	x1, [sp, #64]
 9dc:	mov	x19, x0
 9e0:	ldr	x2, [sp, #80]
 9e4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 9e8:	ldp	x0, x1, [sp, #64]
 9ec:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 9f0:	stp	x19, x22, [sp, #64]
 9f4:	ldr	x2, [sp, #80]
 9f8:	cmp	x2, #0x3ff
 9fc:	b.hi	a20 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0xb8>  // b.pmore
 a00:	cmp	x22, #0x3ff
 a04:	b.ls	a88 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x120>  // b.plast
 a08:	mov	x3, #0x400                 	// #1024
 a0c:	add	x0, x19, x2
 a10:	mov	w1, #0x0                   	// #0
 a14:	sub	x2, x3, x2
 a18:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 a1c:	ldr	x19, [sp, #64]
 a20:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a24:	adrp	x2, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a28:	cmp	x20, #0x0
 a2c:	ldr	q0, [x0]
 a30:	mov	x3, x21
 a34:	add	x0, sp, #0x40
 a38:	adrp	x1, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 a3c:	add	x1, x1, #0x0
 a40:	str	q0, [sp, #80]
 a44:	strb	wzr, [x19]
 a48:	ldr	x2, [x2]
 a4c:	csel	x2, x2, x20, eq  // eq = none
 a50:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 a54:	ldr	x0, [sp, #64]
 a58:	bl	958 <__sanitizer_report_error_summary>
 a5c:	ldp	x0, x1, [sp, #64]
 a60:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 a64:	ldp	x21, x22, [sp, #16]
 a68:	ldp	x23, x24, [sp, #32]
 a6c:	ldr	x30, [sp, #48]
 a70:	ldp	x19, x20, [sp], #96
 a74:	ret
 a78:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 a7c:	mov	x2, x0
 a80:	str	x0, [x19, #96]
 a84:	b	9ac <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x44>
 a88:	add	x23, x23, #0x0
 a8c:	ldr	x0, [x23, #96]
 a90:	cbz	x0, af0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x188>
 a94:	sub	x1, x0, #0x1
 a98:	tst	x1, x0
 a9c:	b.ne	ae0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x178>  // b.any
 aa0:	add	x22, x0, #0x3ff
 aa4:	neg	x0, x0
 aa8:	and	x22, x22, x0
 aac:	add	x1, x24, #0x0
 ab0:	mov	w2, #0x0                   	// #0
 ab4:	mov	x0, x22
 ab8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 abc:	mov	x19, x0
 ac0:	ldr	x1, [sp, #64]
 ac4:	ldr	x2, [sp, #80]
 ac8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 acc:	ldp	x0, x1, [sp, #64]
 ad0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 ad4:	stp	x19, x22, [sp, #64]
 ad8:	ldr	x2, [sp, #80]
 adc:	b	a08 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0xa0>
 ae0:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 ae4:	add	x0, x0, #0x0
 ae8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 aec:	bl	0 <_ZN11__sanitizer3DieEv>
 af0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 af4:	str	x0, [x23, #96]
 af8:	b	a94 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_+0x12c>
 afc:	nop

0000000000000b00 <__sanitizer_acquire_crash_state>:
 b00:	adrp	x0, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 b04:	add	x0, x0, #0x0
 b08:	add	x0, x0, #0x68
 b0c:	mov	w2, #0x1                   	// #1
 b10:	ldxrb	w1, [x0]
 b14:	stxrb	w3, w2, [x0]
 b18:	cbnz	w3, b10 <__sanitizer_acquire_crash_state+0x10>
 b1c:	tst	w1, #0xff
 b20:	dmb	ish
 b24:	cset	w0, eq  // eq = none
 b28:	ret
 b2c:	nop

0000000000000b30 <__sanitizer_install_malloc_and_free_hooks>:
 b30:	cmp	x0, #0x0
 b34:	mov	x2, x0
 b38:	ccmp	x1, #0x0, #0x4, ne  // ne = any
 b3c:	mov	w0, #0x0                   	// #0
 b40:	b.eq	b7c <__sanitizer_install_malloc_and_free_hooks+0x4c>  // b.none
 b44:	adrp	x3, 0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
 b48:	add	x4, x3, #0x0
 b4c:	add	x0, x4, #0x10
 b50:	ldr	x4, [x4, #16]
 b54:	cbz	x4, ba4 <__sanitizer_install_malloc_and_free_hooks+0x74>
 b58:	ldr	x4, [x0, #16]
 b5c:	cbz	x4, bb0 <__sanitizer_install_malloc_and_free_hooks+0x80>
 b60:	ldr	x4, [x0, #32]
 b64:	cbz	x4, bbc <__sanitizer_install_malloc_and_free_hooks+0x8c>
 b68:	ldr	x4, [x0, #48]
 b6c:	cbz	x4, bc8 <__sanitizer_install_malloc_and_free_hooks+0x98>
 b70:	ldr	x4, [x0, #64]
 b74:	mov	w0, #0x0                   	// #0
 b78:	cbz	x4, b80 <__sanitizer_install_malloc_and_free_hooks+0x50>
 b7c:	ret
 b80:	mov	w4, #0x4                   	// #4
 b84:	mov	w0, #0x5                   	// #5
 b88:	add	x3, x3, #0x0
 b8c:	sbfiz	x4, x4, #4, #32
 b90:	add	x3, x3, #0x10
 b94:	add	x5, x3, x4
 b98:	str	x2, [x3, x4]
 b9c:	str	x1, [x5, #8]
 ba0:	ret
 ba4:	mov	w4, #0x0                   	// #0
 ba8:	mov	w0, #0x1                   	// #1
 bac:	b	b88 <__sanitizer_install_malloc_and_free_hooks+0x58>
 bb0:	mov	w4, #0x1                   	// #1
 bb4:	mov	w0, #0x2                   	// #2
 bb8:	b	b88 <__sanitizer_install_malloc_and_free_hooks+0x58>
 bbc:	mov	w4, #0x2                   	// #2
 bc0:	mov	w0, #0x3                   	// #3
 bc4:	b	b88 <__sanitizer_install_malloc_and_free_hooks+0x58>
 bc8:	mov	w4, #0x3                   	// #3
 bcc:	mov	w0, #0x4                   	// #4
 bd0:	b	b88 <__sanitizer_install_malloc_and_free_hooks+0x58>

sanitizer_deadlock_detector1.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>:
       0:	mov	x0, #0x0                   	// #0
       4:	ret

0000000000000008 <_ZN11__sanitizer2DD21DestroyPhysicalThreadEPNS_16DDPhysicalThreadE>:
       8:	ret
       c:	nop

0000000000000010 <_ZN11__sanitizer2DD9GetReportEPNS_10DDCallbackE>:
      10:	ldr	x1, [x1, #16]
      14:	ldrb	w0, [x1, #2224]
      18:	cbz	w0, 28 <_ZN11__sanitizer2DD9GetReportEPNS_10DDCallbackE+0x18>
      1c:	add	x0, x1, #0x628
      20:	strb	wzr, [x1, #2224]
      24:	ret
      28:	mov	x0, #0x0                   	// #0
      2c:	ret

0000000000000030 <_ZN11__sanitizer2DD19CreateLogicalThreadEy>:
      30:	stp	x19, x30, [sp, #-16]!
      34:	mov	x2, #0x0                   	// #0
      38:	mov	x19, x1
      3c:	mov	x0, #0x8b8                 	// #2232
      40:	mov	x1, #0x0                   	// #0
      44:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
      48:	mov	x3, x0
      4c:	str	x19, [x0]
      50:	str	xzr, [x3, #8]!
      54:	str	xzr, [x3, #520]
      58:	str	xzr, [x3, #1040]
      5c:	str	xzr, [x3, #1560]
      60:	strb	wzr, [x0, #2224]
      64:	ldp	x19, x30, [sp], #16
      68:	ret
      6c:	nop

0000000000000070 <_ZN11__sanitizer2DD20DestroyLogicalThreadEPNS_15DDLogicalThreadE>:
      70:	mov	x0, x1
      74:	mov	x1, #0x0                   	// #0
      78:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
      7c:	nop

0000000000000080 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb>:
      80:	ldr	x1, [x1, #16]
      84:	ldr	x2, [x2]
      88:	ldr	x3, [x1, #528]
      8c:	and	x0, x2, #0xfffffffffffff000
      90:	cmp	x3, x0
      94:	b.eq	9c <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1c>  // b.none
      98:	ret
      9c:	ldr	x7, [x1, #1048]
      a0:	add	x6, x1, #0x8
      a4:	and	x4, x2, #0xfff
      a8:	cbz	x7, f4 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x74>
      ac:	sub	x8, x7, #0x1
      b0:	mov	x0, x8
      b4:	tbnz	x8, #63, f4 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x74>
      b8:	add	x5, x1, #0x218
      bc:	b	cc <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x4c>
      c0:	sub	x0, x0, #0x1
      c4:	cmn	x0, #0x1
      c8:	b.eq	f4 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x74>  // b.none
      cc:	ldr	x3, [x5, x0, lsl #3]
      d0:	cmp	x4, x3
      d4:	b.ne	c0 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x40>  // b.any
      d8:	add	x1, x1, x7, lsl #3
      dc:	add	x0, x0, #0x42
      e0:	str	x8, [x6, #1040]
      e4:	ldr	x2, [x1, #528]
      e8:	str	x2, [x6, x0, lsl #3]
      ec:	str	x4, [x1, #528]
      f0:	ret
      f4:	ldr	x7, [x1, #8]
      f8:	lsr	x3, x4, #6
      fc:	mov	x0, #0x1                   	// #1
     100:	lsl	x5, x0, x3
     104:	tst	x7, x5
     108:	b.eq	98 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x18>  // b.none
     10c:	add	x3, x3, x0
     110:	lsl	x0, x0, x2
     114:	ldr	x2, [x6, x3, lsl #3]
     118:	bic	x0, x2, x0
     11c:	str	x0, [x6, x3, lsl #3]
     120:	cbz	x0, 19c <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x11c>
     124:	cmp	x2, x0
     128:	b.eq	98 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x18>  // b.none
     12c:	ldr	x5, [x6, #1560]
     130:	cbz	x5, 98 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x18>
     134:	sub	x7, x5, #0x1
     138:	mov	x0, x7
     13c:	tbnz	x7, #63, 98 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x18>
     140:	add	x1, x1, #0x420
     144:	mov	w3, w4
     148:	b	158 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0xd8>
     14c:	sub	x0, x0, #0x1
     150:	cmn	x0, #0x1
     154:	b.eq	98 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0x18>  // b.none
     158:	lsl	x2, x0, #3
     15c:	ldr	w2, [x1, x2]
     160:	cmp	w3, w2
     164:	b.ne	14c <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0xcc>  // b.any
     168:	add	x3, x6, x0, lsl #3
     16c:	add	x1, x5, #0x82
     170:	add	x5, x6, x7, lsl #3
     174:	mov	x0, x3
     178:	lsl	x1, x1, #3
     17c:	add	x2, x6, x1
     180:	ldr	w3, [x3, #1052]
     184:	ldr	x5, [x5, #1048]
     188:	str	x5, [x0, #1048]
     18c:	str	w4, [x6, x1]
     190:	str	w3, [x2, #4]
     194:	str	x7, [x6, #1560]
     198:	ret
     19c:	bic	x5, x7, x5
     1a0:	str	x5, [x1, #8]
     1a4:	b	124 <_ZN11__sanitizer2DD17MutexBeforeUnlockEPNS_10DDCallbackEPNS_7DDMutexEb+0xa4>

00000000000001a8 <_ZN11__sanitizer2DD9MutexInitEPNS_10DDCallbackEPNS_7DDMutexE>:
     1a8:	ldr	x3, [x1]
     1ac:	stp	x19, x30, [sp, #-16]!
     1b0:	mov	x19, x2
     1b4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     1b8:	add	x2, x2, #0x0
     1bc:	ldr	x3, [x3]
     1c0:	str	xzr, [x19]
     1c4:	mov	w0, #0x0                   	// #0
     1c8:	cmp	x3, x2
     1cc:	b.ne	1dc <_ZN11__sanitizer2DD9MutexInitEPNS_10DDCallbackEPNS_7DDMutexE+0x34>  // b.any
     1d0:	str	w0, [x19, #8]
     1d4:	ldp	x19, x30, [sp], #16
     1d8:	ret
     1dc:	mov	x0, x1
     1e0:	blr	x3
     1e4:	str	w0, [x19, #8]
     1e8:	ldp	x19, x30, [sp], #16
     1ec:	ret

00000000000001f0 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE>:
     1f0:	stp	x19, x20, [sp, #-32]!
     1f4:	mov	x20, x0
     1f8:	ldr	x0, [x2]
     1fc:	str	x30, [sp, #16]
     200:	cbnz	x0, 210 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x20>
     204:	ldr	x30, [sp, #16]
     208:	ldp	x19, x20, [sp], #32
     20c:	ret
     210:	add	x0, x20, #0x8
     214:	mov	x19, x2
     218:	mov	w2, #0x1                   	// #1
     21c:	ldxrb	w1, [x0]
     220:	stxrb	w3, w2, [x0]
     224:	cbnz	w3, 21c <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x2c>
     228:	dmb	ish
     22c:	tst	w1, #0xff
     230:	b.eq	238 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x48>  // b.none
     234:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     238:	ldr	x3, [x19]
     23c:	cbz	x3, 250 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x60>
     240:	ldr	x0, [x20, #16]
     244:	and	x1, x3, #0xfffffffffffff000
     248:	cmp	x1, x0
     24c:	b.eq	268 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x78>  // b.none
     250:	str	xzr, [x19]
     254:	dmb	ish
     258:	strb	wzr, [x20, #8]
     25c:	ldr	x30, [sp, #16]
     260:	ldp	x19, x20, [sp], #32
     264:	ret
     268:	cmp	x3, #0xfff
     26c:	b.ls	328 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x138>  // b.plast
     270:	ubfx	x0, x3, #6, #6
     274:	mov	x1, #0x1                   	// #1
     278:	ldr	x6, [x20, #24]
     27c:	add	x4, x0, x1
     280:	and	x2, x3, #0xfff
     284:	lsl	x0, x1, x0
     288:	lsl	x5, x4, #3
     28c:	tst	x0, x6
     290:	lsl	x3, x1, x3
     294:	b.ne	2c4 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0xd4>  // b.any
     298:	ldr	x1, [x20, #544]
     29c:	add	x5, x20, #0x220
     2a0:	tst	x0, x1
     2a4:	b.ne	2f4 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x104>  // b.any
     2a8:	orr	x0, x0, x1
     2ac:	str	x0, [x20, #544]
     2b0:	str	x3, [x5, x4, lsl #3]
     2b4:	add	x2, x2, x2, lsl #6
     2b8:	add	x2, x20, x2, lsl #3
     2bc:	str	xzr, [x2, #1584]
     2c0:	b	250 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0x60>
     2c4:	add	x5, x20, x5
     2c8:	ldr	x1, [x5, #24]
     2cc:	tst	x3, x1
     2d0:	b.eq	298 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0xa8>  // b.none
     2d4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     2d8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     2dc:	add	x2, x2, #0x0
     2e0:	add	x0, x0, #0x0
     2e4:	mov	x4, #0x0                   	// #0
     2e8:	mov	x3, #0x0                   	// #0
     2ec:	mov	w1, #0xbe                  	// #190
     2f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     2f4:	ldr	x0, [x5, x4, lsl #3]
     2f8:	orr	x3, x0, x3
     2fc:	str	x3, [x5, x4, lsl #3]
     300:	cmp	x0, x3
     304:	b.ne	2b4 <_ZN11__sanitizer2DD12MutexDestroyEPNS_10DDCallbackEPNS_7DDMutexE+0xc4>  // b.any
     308:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     30c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     310:	add	x2, x2, #0x0
     314:	add	x0, x0, #0x0
     318:	mov	x4, #0x0                   	// #0
     31c:	mov	x3, #0x0                   	// #0
     320:	mov	w1, #0xbf                  	// #191
     324:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     328:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     32c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     330:	add	x2, x2, #0x0
     334:	add	x0, x0, #0x0
     338:	mov	x4, #0x1000                	// #4096
     33c:	mov	w1, #0x16e                 	// #366
     340:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     344:	nop

0000000000000348 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE>:
     348:	stp	x19, x30, [sp, #-16]!
     34c:	mov	x19, x0
     350:	mov	x0, #0xa50                 	// #2640
     354:	mov	w2, #0x0                   	// #0
     358:	movk	x0, #0x41, lsl #16
     35c:	adrp	x1, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     360:	add	x1, x1, #0x0
     364:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     368:	add	x4, x0, #0x410, lsl #12
     36c:	strb	wzr, [x0, #8]
     370:	adrp	x1, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     374:	add	x3, x1, #0x0
     378:	add	x2, x0, #0x208, lsl #12
     37c:	str	x3, [x0]
     380:	add	x1, x0, #0x630
     384:	ldrb	w3, [x19]
     388:	add	x2, x2, #0x630
     38c:	strb	w3, [x4, #2632]
     390:	stp	xzr, xzr, [x0, #16]
     394:	str	xzr, [x0, #544]
     398:	str	xzr, [x1]
     39c:	add	x1, x1, #0x208
     3a0:	cmp	x1, x2
     3a4:	b.ne	398 <_ZN11__sanitizer9DDetector6CreateEPKNS_7DDFlagsE+0x50>  // b.any
     3a8:	add	x1, x0, #0x10
     3ac:	add	x1, x1, #0x410, lsl #12
     3b0:	str	xzr, [x1, #2608]
     3b4:	ldp	x19, x30, [sp], #16
     3b8:	ret
     3bc:	nop

00000000000003c0 <_ZN11__sanitizer2DDC1EPKNS_7DDFlagsE>:
     3c0:	add	x5, x0, #0x410, lsl #12
     3c4:	strb	wzr, [x0, #8]
     3c8:	add	x3, x0, #0x208, lsl #12
     3cc:	adrp	x4, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     3d0:	ldrb	w1, [x1]
     3d4:	add	x4, x4, #0x0
     3d8:	str	x4, [x0]
     3dc:	add	x2, x0, #0x630
     3e0:	add	x3, x3, #0x630
     3e4:	strb	w1, [x5, #2632]
     3e8:	stp	xzr, xzr, [x0, #16]
     3ec:	str	xzr, [x0, #544]
     3f0:	str	xzr, [x2]
     3f4:	add	x2, x2, #0x208
     3f8:	cmp	x2, x3
     3fc:	b.ne	3f0 <_ZN11__sanitizer2DDC1EPKNS_7DDFlagsE+0x30>  // b.any
     400:	add	x0, x0, #0x10
     404:	add	x0, x0, #0x410, lsl #12
     408:	str	xzr, [x0, #2608]
     40c:	ret

0000000000000410 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE>:
     410:	ldr	x3, [x2]
     414:	cbz	x3, 428 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x18>
     418:	ldr	x4, [x0, #16]
     41c:	and	x3, x3, #0xfffffffffffff000
     420:	cmp	x3, x4
     424:	b.eq	6ec <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2dc>  // b.none
     428:	stp	x19, x20, [sp, #-32]!
     42c:	ldr	x9, [x0, #24]
     430:	str	x30, [sp, #16]
     434:	cbz	x9, 4a0 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x90>
     438:	mov	x4, x0
     43c:	rbit	x3, x9
     440:	clz	x3, x3
     444:	mov	x5, #0x1                   	// #1
     448:	add	x8, x3, x5
     44c:	lsl	x7, x5, x3
     450:	bic	x9, x9, x7
     454:	str	x9, [x4, #24]!
     458:	ldr	x6, [x4, x8, lsl #3]
     45c:	cbz	x6, 848 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x438>
     460:	rbit	x10, x6
     464:	clz	x10, x10
     468:	lsl	x5, x5, x10
     46c:	bic	x5, x6, x5
     470:	str	x5, [x4, x8, lsl #3]
     474:	cbz	x5, 480 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x70>
     478:	orr	x7, x7, x9
     47c:	str	x7, [x0, #24]
     480:	add	x3, x10, x3, lsl #6
     484:	add	x4, x0, #0x10
     488:	add	x5, x3, #0x41, lsl #12
     48c:	add	x5, x5, #0x146
     490:	str	x2, [x4, x5, lsl #3]
     494:	ldr	x4, [x0, #16]
     498:	add	x3, x3, x4
     49c:	b	6a0 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x290>
     4a0:	ldr	x15, [x0, #544]
     4a4:	cbz	x15, 5ec <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x1dc>
     4a8:	add	x11, x0, #0x10
     4ac:	add	x10, x11, #0x410, lsl #12
     4b0:	ldr	x4, [x10, #2608]
     4b4:	subs	x12, x4, #0x1
     4b8:	b.mi	590 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x180>  // b.first
     4bc:	add	x4, x4, #0x21, lsl #12
     4c0:	mov	x16, #0x10a2                	// #4258
     4c4:	add	x4, x4, #0xa3
     4c8:	add	x14, x0, #0x220
     4cc:	mov	x13, #0x1                   	// #1
     4d0:	movk	x16, #0x2, lsl #16
     4d4:	add	x4, x0, x4, lsl #4
     4d8:	ldrh	w6, [x4]
     4dc:	and	x3, x6, #0xffff
     4e0:	cmp	x3, #0x1, lsl #12
     4e4:	b.hi	7e4 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x3d4>  // b.pmore
     4e8:	lsr	x5, x3, #12
     4ec:	ubfx	x3, x3, #6, #6
     4f0:	lsl	x8, x13, x3
     4f4:	ldr	x7, [x14, x5, lsl #3]
     4f8:	tst	x8, x7
     4fc:	b.ne	6d0 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2c0>  // b.any
     500:	ldrh	w6, [x4, #2]
     504:	and	x3, x6, #0xffff
     508:	cmp	x3, #0x1, lsl #12
     50c:	b.hi	80c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x3fc>  // b.pmore
     510:	lsr	x5, x3, #12
     514:	ubfx	x3, x3, #6, #6
     518:	lsl	x8, x13, x3
     51c:	ldr	x7, [x14, x5, lsl #3]
     520:	tst	x8, x7
     524:	b.eq	580 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x170>  // b.none
     528:	add	x3, x3, x5, lsl #6
     52c:	lsl	x6, x13, x6
     530:	add	x3, x3, #0x1
     534:	ldr	x3, [x14, x3, lsl #3]
     538:	tst	x6, x3
     53c:	b.eq	580 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x170>  // b.none
     540:	ldr	x3, [x10, #2608]
     544:	ldrh	w20, [x4]
     548:	add	x8, x3, x16
     54c:	sub	x5, x3, #0x1
     550:	ldrh	w19, [x4, #2]
     554:	lsl	x8, x8, #4
     558:	ldr	w17, [x4, #12]
     55c:	add	x3, x11, x8
     560:	ldp	w30, w18, [x4, #4]
     564:	ldp	x6, x7, [x3]
     568:	stp	x6, x7, [x4]
     56c:	strh	w20, [x11, x8]
     570:	strh	w19, [x3, #2]
     574:	stp	w30, w18, [x3, #4]
     578:	str	w17, [x3, #12]
     57c:	str	x5, [x10, #2608]
     580:	sub	x12, x12, #0x1
     584:	sub	x4, x4, #0x10
     588:	cmn	x12, #0x1
     58c:	b.ne	4d8 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0xc8>  // b.any
     590:	mov	x12, #0x1                   	// #1
     594:	add	x6, x0, #0x630
     598:	mov	x14, x12
     59c:	ldr	x3, [x6, x9, lsl #3]
     5a0:	add	x13, x9, #0x1
     5a4:	and	x3, x15, x3
     5a8:	cbz	x3, 72c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x31c>
     5ac:	rbit	x4, x3
     5b0:	clz	x4, x4
     5b4:	add	x7, x13, x4
     5b8:	add	x10, x0, x4, lsl #3
     5bc:	lsl	x5, x12, x4
     5c0:	bic	x3, x3, x5
     5c4:	ldr	x8, [x6, x7, lsl #3]
     5c8:	ldr	x5, [x10, #552]
     5cc:	bic	x5, x8, x5
     5d0:	str	x5, [x6, x7, lsl #3]
     5d4:	cbnz	x5, 5a8 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x198>
     5d8:	ldr	x5, [x6, x9, lsl #3]
     5dc:	lsl	x4, x14, x4
     5e0:	bic	x4, x5, x4
     5e4:	str	x4, [x6, x9, lsl #3]
     5e8:	b	5a8 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x198>
     5ec:	ldr	x4, [x0, #16]
     5f0:	mov	x5, x0
     5f4:	mvni	v0.4s, #0x0
     5f8:	add	x3, x0, #0x20
     5fc:	add	x4, x4, #0x1, lsl #12
     600:	str	x4, [x0, #16]
     604:	add	x4, x0, #0x220
     608:	mov	x6, #0xffffffffffffffff    	// #-1
     60c:	str	x6, [x5, #24]!
     610:	str	q0, [x3], #16
     614:	cmp	x3, x4
     618:	b.ne	610 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x200>  // b.any
     61c:	add	x4, x0, #0x208, lsl #12
     620:	add	x3, x0, #0x630
     624:	add	x4, x4, #0x630
     628:	str	xzr, [x3]
     62c:	add	x3, x3, #0x208
     630:	cmp	x4, x3
     634:	b.ne	628 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x218>  // b.any
     638:	add	x11, x0, #0x10
     63c:	add	x3, x11, #0x410, lsl #12
     640:	str	xzr, [x3, #2608]
     644:	ldr	x4, [x0, #24]
     648:	cbz	x4, 70c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2fc>
     64c:	rbit	x3, x4
     650:	mov	x6, #0x1                   	// #1
     654:	clz	x3, x3
     658:	add	x9, x3, x6
     65c:	lsl	x8, x6, x3
     660:	bic	x4, x4, x8
     664:	str	x4, [x0, #24]
     668:	ldr	x7, [x5, x9, lsl #3]
     66c:	cbz	x7, 828 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x418>
     670:	rbit	x10, x7
     674:	clz	x10, x10
     678:	lsl	x6, x6, x10
     67c:	bic	x6, x7, x6
     680:	str	x6, [x5, x9, lsl #3]
     684:	cbnz	x6, 800 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x3f0>
     688:	add	x3, x10, x3, lsl #6
     68c:	add	x4, x3, #0x41, lsl #12
     690:	add	x4, x4, #0x146
     694:	str	x2, [x11, x4, lsl #3]
     698:	ldr	x4, [x0, #16]
     69c:	add	x3, x3, x4
     6a0:	str	x3, [x2]
     6a4:	ldr	x2, [x1, #528]
     6a8:	ldr	x4, [x0, #16]
     6ac:	cmp	x2, x4
     6b0:	b.eq	6c4 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2b4>  // b.none
     6b4:	str	xzr, [x1, #8]
     6b8:	str	x4, [x1, #528]
     6bc:	str	xzr, [x1, #1048]
     6c0:	str	xzr, [x1, #1568]
     6c4:	ldr	x30, [sp, #16]
     6c8:	ldp	x19, x20, [sp], #32
     6cc:	ret
     6d0:	add	x3, x3, x5, lsl #6
     6d4:	lsl	x6, x13, x6
     6d8:	add	x3, x3, #0x1
     6dc:	ldr	x3, [x14, x3, lsl #3]
     6e0:	tst	x6, x3
     6e4:	b.ne	540 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x130>  // b.any
     6e8:	b	500 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0xf0>
     6ec:	ldr	x2, [x1, #528]
     6f0:	cmp	x2, x4
     6f4:	b.eq	708 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2f8>  // b.none
     6f8:	str	xzr, [x1, #8]
     6fc:	str	x4, [x1, #528]
     700:	str	xzr, [x1, #1048]
     704:	str	xzr, [x1, #1568]
     708:	ret
     70c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     710:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     714:	add	x2, x2, #0x0
     718:	add	x0, x0, #0x0
     71c:	mov	x4, #0x0                   	// #0
     720:	mov	x3, #0x0                   	// #0
     724:	mov	w1, #0xc0                  	// #192
     728:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     72c:	add	x9, x9, #0x41
     730:	cmp	x9, #0x41, lsl #12
     734:	ldr	x15, [x0, #544]
     738:	b.ne	59c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x18c>  // b.any
     73c:	add	x8, x0, #0x220
     740:	add	x6, x0, #0x18
     744:	mov	x7, #0x1                   	// #1
     748:	cbz	x15, 788 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x378>
     74c:	rbit	x3, x15
     750:	ldr	x5, [x0, #24]
     754:	clz	x3, x3
     758:	lsl	x4, x7, x3
     75c:	add	x3, x3, #0x1
     760:	bic	x15, x15, x4
     764:	orr	x4, x4, x5
     768:	str	x4, [x0, #24]
     76c:	cmp	x4, x5
     770:	lsl	x4, x3, #3
     774:	b.eq	868 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x458>  // b.none
     778:	str	xzr, [x6, x3, lsl #3]
     77c:	ldr	x4, [x8, x3, lsl #3]
     780:	str	x4, [x6, x3, lsl #3]
     784:	cbnz	x15, 74c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x33c>
     788:	ldr	x5, [x0, #24]
     78c:	str	xzr, [x0, #544]
     790:	cbz	x5, 70c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x2fc>
     794:	rbit	x3, x5
     798:	mov	x7, x0
     79c:	clz	x3, x3
     7a0:	mov	x4, #0x1                   	// #1
     7a4:	add	x6, x3, #0x1
     7a8:	lsl	x8, x4, x3
     7ac:	bic	x5, x5, x8
     7b0:	lsl	x6, x6, #3
     7b4:	str	x5, [x7, #24]!
     7b8:	ldr	x9, [x7, x6]
     7bc:	cbz	x9, 880 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x470>
     7c0:	rbit	x10, x9
     7c4:	clz	x10, x10
     7c8:	lsl	x4, x4, x10
     7cc:	bic	x4, x9, x4
     7d0:	str	x4, [x7, x6]
     7d4:	cbz	x4, 688 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x278>
     7d8:	orr	x5, x8, x5
     7dc:	str	x5, [x0, #24]
     7e0:	b	688 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x278>
     7e4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     7e8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     7ec:	add	x2, x2, #0x0
     7f0:	add	x0, x0, #0x0
     7f4:	mov	x4, #0x1000                	// #4096
     7f8:	mov	w1, #0x144                 	// #324
     7fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     800:	orr	x4, x8, x4
     804:	str	x4, [x0, #24]
     808:	b	688 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x278>
     80c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     810:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     814:	add	x2, x2, #0x0
     818:	add	x0, x0, #0x0
     81c:	mov	x4, #0x1000                	// #4096
     820:	mov	w1, #0x144                 	// #324
     824:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     828:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     82c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     830:	add	x2, x2, #0x0
     834:	add	x0, x0, #0x0
     838:	mov	x4, #0x0                   	// #0
     83c:	mov	x3, #0x0                   	// #0
     840:	mov	w1, #0x31                  	// #49
     844:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     848:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     84c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     850:	add	x2, x2, #0x0
     854:	add	x0, x0, #0x0
     858:	mov	x4, #0x0                   	// #0
     85c:	mov	x3, #0x0                   	// #0
     860:	mov	w1, #0x31                  	// #49
     864:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     868:	ldr	x3, [x6, x4]
     86c:	ldr	x5, [x8, x4]
     870:	orr	x3, x3, x5
     874:	str	x3, [x6, x4]
     878:	cbnz	x15, 74c <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x33c>
     87c:	b	788 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE+0x378>
     880:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     884:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     888:	add	x2, x2, #0x0
     88c:	add	x0, x0, #0x0
     890:	mov	x4, #0x0                   	// #0
     894:	mov	x3, #0x0                   	// #0
     898:	mov	w1, #0x31                  	// #49
     89c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000008a0 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb>:
     8a0:	stp	x19, x20, [sp, #-96]!
     8a4:	mov	x20, x1
     8a8:	add	x1, x0, #0x410, lsl #12
     8ac:	stp	x21, x22, [sp, #16]
     8b0:	mov	x19, x0
     8b4:	mov	x21, x2
     8b8:	ldrb	w1, [x1, #2632]
     8bc:	stp	x23, x24, [sp, #32]
     8c0:	and	w24, w3, #0xff
     8c4:	stp	x25, x26, [sp, #48]
     8c8:	and	w26, w4, #0xff
     8cc:	mov	w25, #0x0                   	// #0
     8d0:	ldr	x23, [x20, #16]
     8d4:	str	x30, [sp, #64]
     8d8:	cbz	w1, 8f4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x54>
     8dc:	ldr	x0, [x20]
     8e0:	adrp	x1, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     8e4:	add	x1, x1, #0x0
     8e8:	ldr	x2, [x0]
     8ec:	cmp	x2, x1
     8f0:	b.ne	a8c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x1ec>  // b.any
     8f4:	ldr	x1, [x23, #8]
     8f8:	add	x22, x23, #0x8
     8fc:	ldr	x2, [x21]
     900:	ldr	x5, [x23, #528]
     904:	cbz	x1, a30 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x190>
     908:	cbz	x2, 918 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x78>
     90c:	ldr	x0, [x19, #16]
     910:	cmp	x0, x5
     914:	b.eq	ab0 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x210>  // b.none
     918:	add	x0, x19, #0x8
     91c:	mov	w2, #0x1                   	// #1
     920:	ldxrb	w1, [x0]
     924:	stxrb	w3, w2, [x0]
     928:	cbnz	w3, 920 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x80>
     92c:	dmb	ish
     930:	tst	w1, #0xff
     934:	b.eq	940 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xa0>  // b.none
     938:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     93c:	nop
     940:	mov	x2, x21
     944:	mov	x1, x23
     948:	mov	x0, x19
     94c:	bl	410 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE>
     950:	cbnz	w24, b6c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2cc>
     954:	ldr	x24, [x21]
     958:	cbnz	w26, 994 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xf4>
     95c:	mov	w3, w25
     960:	ldr	x1, [x20]
     964:	cbz	w25, c34 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x394>
     968:	ldr	x2, [x1, #8]
     96c:	adrp	x1, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     970:	add	x1, x1, #0x0
     974:	mov	w4, #0x0                   	// #0
     978:	cmp	x2, x1
     97c:	b.ne	d00 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x460>  // b.any
     980:	mov	x2, x24
     984:	mov	x1, x22
     988:	add	x0, x19, #0x10
     98c:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     990:	ldr	x24, [x21]
     994:	ldr	x0, [x19, #16]
     998:	ldr	x1, [x22, #520]
     99c:	cmp	x0, x1
     9a0:	b.eq	9b4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x114>  // b.none
     9a4:	str	xzr, [x23, #8]
     9a8:	str	x0, [x22, #520]
     9ac:	str	xzr, [x22, #1040]
     9b0:	str	xzr, [x22, #1560]
     9b4:	cmp	x24, #0xfff
     9b8:	b.ls	cc8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x428>  // b.plast
     9bc:	ldr	x3, [x19, #16]
     9c0:	and	x4, x24, #0xfffffffffffff000
     9c4:	cmp	x3, x4
     9c8:	b.ne	ce8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x448>  // b.any
     9cc:	cmp	x3, x0
     9d0:	and	x4, x24, #0xfff
     9d4:	b.ne	d18 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x478>  // b.any
     9d8:	ldr	x1, [x23, #8]
     9dc:	lsr	x2, x4, #6
     9e0:	mov	x0, #0x1                   	// #1
     9e4:	add	x3, x2, x0
     9e8:	lsl	x24, x0, x24
     9ec:	lsl	x0, x0, x2
     9f0:	tst	x1, x0
     9f4:	b.ne	be4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x344>  // b.any
     9f8:	orr	x0, x1, x0
     9fc:	str	x0, [x23, #8]
     a00:	str	x24, [x22, x3, lsl #3]
     a04:	ldr	x3, [x22, #1560]
     a08:	cmp	x3, #0x3f
     a0c:	b.hi	c5c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3bc>  // b.pmore
     a10:	add	x0, x3, #0x83
     a14:	add	x3, x3, #0x1
     a18:	str	x3, [x22, #1560]
     a1c:	lsl	x0, x0, #3
     a20:	add	x1, x22, x0
     a24:	str	w4, [x22, x0]
     a28:	str	w25, [x1, #4]
     a2c:	b	c14 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x374>
     a30:	cbz	x5, 908 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x68>
     a34:	and	x0, x2, #0xfffffffffffff000
     a38:	cmp	x0, x5
     a3c:	b.ne	908 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x68>  // b.any
     a40:	ubfx	x1, x2, #6, #6
     a44:	mov	x0, #0x1                   	// #1
     a48:	add	x3, x1, x0
     a4c:	lsl	x4, x0, x2
     a50:	lsl	x0, x0, x1
     a54:	str	x0, [x23, #8]
     a58:	and	x2, x2, #0xfff
     a5c:	str	x4, [x22, x3, lsl #3]
     a60:	ldr	x3, [x22, #1560]
     a64:	cmp	x3, #0x3f
     a68:	b.hi	c5c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3bc>  // b.pmore
     a6c:	add	x0, x3, #0x83
     a70:	add	x3, x3, #0x1
     a74:	str	x3, [x22, #1560]
     a78:	lsl	x0, x0, #3
     a7c:	add	x1, x22, x0
     a80:	str	w2, [x22, x0]
     a84:	str	w25, [x1, #4]
     a88:	b	c1c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x37c>
     a8c:	mov	x0, x20
     a90:	blr	x2
     a94:	ldr	x1, [x23, #8]
     a98:	mov	w25, w0
     a9c:	add	x22, x23, #0x8
     aa0:	ldr	x2, [x21]
     aa4:	ldr	x5, [x23, #528]
     aa8:	cbnz	x1, 908 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x68>
     aac:	b	a30 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x190>
     ab0:	and	x0, x2, #0xfffffffffffff000
     ab4:	cmp	x0, x5
     ab8:	b.ne	918 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x78>  // b.any
     abc:	ldr	x9, [x23, #1568]
     ac0:	ubfx	x6, x2, #6, #6
     ac4:	mov	x0, #0x1                   	// #1
     ac8:	and	x8, x2, #0xfff
     acc:	add	x5, x6, x0
     ad0:	lsl	x3, x0, x6
     ad4:	lsl	x2, x0, x2
     ad8:	cbz	x9, b2c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x28c>
     adc:	add	x6, x6, #0x1
     ae0:	add	x7, x19, #0x630
     ae4:	add	x11, x23, #0x420
     ae8:	mov	x0, #0x0                   	// #0
     aec:	mov	w10, #0x208                 	// #520
     af0:	mov	w12, #0x41                  	// #65
     af4:	lsl	x4, x0, #3
     af8:	ldr	w4, [x11, x4]
     afc:	umull	x5, w4, w10
     b00:	ldr	x5, [x7, x5]
     b04:	tst	x3, x5
     b08:	b.eq	918 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x78>  // b.none
     b0c:	umaddl	x4, w4, w12, x6
     b10:	mov	x5, x6
     b14:	ldr	x4, [x7, x4, lsl #3]
     b18:	tst	x2, x4
     b1c:	b.eq	918 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x78>  // b.none
     b20:	add	x0, x0, #0x1
     b24:	cmp	x9, x0
     b28:	b.ne	af4 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x254>  // b.any
     b2c:	tst	x1, x3
     b30:	b.ne	c94 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3f4>  // b.any
     b34:	orr	x1, x1, x3
     b38:	str	x1, [x23, #8]
     b3c:	str	x2, [x22, x5, lsl #3]
     b40:	ldr	x3, [x22, #1560]
     b44:	cmp	x3, #0x3f
     b48:	b.hi	c5c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3bc>  // b.pmore
     b4c:	add	x0, x3, #0x83
     b50:	add	x3, x3, #0x1
     b54:	str	x3, [x22, #1560]
     b58:	lsl	x0, x0, #3
     b5c:	add	x1, x22, x0
     b60:	str	w8, [x22, x0]
     b64:	str	w25, [x1, #4]
     b68:	b	c1c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x37c>
     b6c:	ldr	x0, [x19, #16]
     b70:	ldr	x3, [x22, #520]
     b74:	ldr	x24, [x21]
     b78:	cmp	x0, x3
     b7c:	b.ne	d38 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x498>  // b.any
     b80:	cmp	x24, #0xfff
     b84:	b.ls	cc8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x428>  // b.plast
     b88:	and	x4, x24, #0xfffffffffffff000
     b8c:	mov	x3, x0
     b90:	cmp	x0, x4
     b94:	b.ne	ce8 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x448>  // b.any
     b98:	ldr	x2, [x23, #8]
     b9c:	ubfx	x1, x24, #6, #6
     ba0:	mov	x0, #0x1                   	// #1
     ba4:	lsl	x3, x0, x1
     ba8:	tst	x3, x2
     bac:	b.eq	958 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xb8>  // b.none
     bb0:	add	x1, x1, x0
     bb4:	lsl	x0, x0, x24
     bb8:	ldr	x1, [x22, x1, lsl #3]
     bbc:	tst	x0, x1
     bc0:	b.eq	958 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xb8>  // b.none
     bc4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     bc8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     bcc:	add	x2, x2, #0x0
     bd0:	add	x0, x0, #0x0
     bd4:	mov	x4, #0x0                   	// #0
     bd8:	mov	x3, #0x0                   	// #0
     bdc:	mov	w1, #0xa6                  	// #166
     be0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     be4:	ldr	x0, [x22, x3, lsl #3]
     be8:	orr	x24, x0, x24
     bec:	str	x24, [x22, x3, lsl #3]
     bf0:	cmp	x0, x24
     bf4:	b.ne	a04 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x164>  // b.any
     bf8:	ldr	x3, [x22, #1040]
     bfc:	cmp	x3, #0x3f
     c00:	b.hi	c78 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3d8>  // b.pmore
     c04:	add	x0, x3, #0x42
     c08:	add	x3, x3, #0x1
     c0c:	str	x3, [x22, #1040]
     c10:	str	x4, [x22, x0, lsl #3]
     c14:	dmb	ish
     c18:	strb	wzr, [x19, #8]
     c1c:	ldp	x21, x22, [sp, #16]
     c20:	ldp	x23, x24, [sp, #32]
     c24:	ldp	x25, x26, [sp, #48]
     c28:	ldr	x30, [sp, #64]
     c2c:	ldp	x19, x20, [sp], #96
     c30:	ret
     c34:	ldr	x2, [x1]
     c38:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     c3c:	add	x0, x0, #0x0
     c40:	cmp	x2, x0
     c44:	b.eq	968 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xc8>  // b.none
     c48:	mov	x0, x20
     c4c:	blr	x2
     c50:	mov	w3, w0
     c54:	ldr	x1, [x20]
     c58:	b	968 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xc8>
     c5c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     c60:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     c64:	add	x2, x2, #0x0
     c68:	add	x0, x0, #0x0
     c6c:	mov	x4, #0x40                  	// #64
     c70:	mov	w1, #0x43                  	// #67
     c74:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     c78:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     c7c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     c80:	add	x2, x2, #0x0
     c84:	add	x0, x0, #0x0
     c88:	mov	x4, #0x40                  	// #64
     c8c:	mov	w1, #0x3f                  	// #63
     c90:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     c94:	ldr	x0, [x22, x5, lsl #3]
     c98:	orr	x2, x0, x2
     c9c:	str	x2, [x22, x5, lsl #3]
     ca0:	cmp	x0, x2
     ca4:	b.ne	b40 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x2a0>  // b.any
     ca8:	ldr	x3, [x22, #1040]
     cac:	cmp	x3, #0x3f
     cb0:	b.hi	c78 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x3d8>  // b.pmore
     cb4:	add	x0, x3, #0x42
     cb8:	add	x3, x3, #0x1
     cbc:	str	x3, [x22, #1040]
     cc0:	str	x8, [x22, x0, lsl #3]
     cc4:	b	c1c <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0x37c>
     cc8:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     ccc:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     cd0:	mov	x3, x24
     cd4:	add	x2, x2, #0x0
     cd8:	add	x0, x0, #0x0
     cdc:	mov	x4, #0x1000                	// #4096
     ce0:	mov	w1, #0x16e                 	// #366
     ce4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ce8:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     cec:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     cf0:	add	x2, x2, #0x0
     cf4:	add	x0, x0, #0x0
     cf8:	mov	w1, #0x16f                 	// #367
     cfc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d00:	str	w3, [sp, #92]
     d04:	mov	x0, x20
     d08:	blr	x2
     d0c:	mov	w4, w0
     d10:	ldr	w3, [sp, #92]
     d14:	b	980 <_ZN11__sanitizer2DD14MutexAfterLockEPNS_10DDCallbackEPNS_7DDMutexEbb+0xe0>
     d18:	mov	x4, x3
     d1c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     d20:	mov	x3, x0
     d24:	add	x2, x2, #0x0
     d28:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     d2c:	mov	w1, #0x3c                  	// #60
     d30:	add	x0, x0, #0x0
     d34:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d38:	mov	x4, x0
     d3c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     d40:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     d44:	add	x2, x2, #0x0
     d48:	add	x0, x0, #0x0
     d4c:	mov	w1, #0x6b                  	// #107
     d50:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d54:	nop

0000000000000d58 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE>:
     d58:	stp	x19, x20, [sp, #-336]!
     d5c:	stp	x23, x24, [sp, #32]
     d60:	ldr	x23, [x1, #16]
     d64:	stp	x21, x22, [sp, #16]
     d68:	mov	x22, x2
     d6c:	ldr	x4, [x0, #16]
     d70:	stp	x25, x26, [sp, #48]
     d74:	add	x2, x23, #0x8
     d78:	ldr	x3, [x2, #520]
     d7c:	stp	x27, x28, [sp, #64]
     d80:	ldr	x25, [x22]
     d84:	str	x30, [sp, #80]
     d88:	cmp	x4, x3
     d8c:	b.ne	f98 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x240>  // b.any
     d90:	str	xzr, [x0, #1064]
     d94:	mov	x19, x0
     d98:	add	x21, x0, #0x428
     d9c:	ldr	x1, [x23, #8]
     da0:	cbz	x1, dfc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0xa4>
     da4:	mov	x3, #0x0                   	// #0
     da8:	mov	x6, #0x1                   	// #1
     dac:	rbit	x0, x1
     db0:	clz	x0, x0
     db4:	lsl	x5, x6, x0
     db8:	orr	x4, x5, x3
     dbc:	str	x4, [x19, #1064]
     dc0:	bic	x1, x1, x5
     dc4:	cmp	x4, x3
     dc8:	add	x0, x0, #0x1
     dcc:	b.eq	de8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x90>  // b.none
     dd0:	str	xzr, [x21, x0, lsl #3]
     dd4:	ldr	x3, [x2, x0, lsl #3]
     dd8:	str	x3, [x21, x0, lsl #3]
     ddc:	cbz	x1, dfc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0xa4>
     de0:	ldr	x3, [x19, #1064]
     de4:	b	dac <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x54>
     de8:	ldr	x3, [x21, x0, lsl #3]
     dec:	ldr	x4, [x2, x0, lsl #3]
     df0:	orr	x3, x3, x4
     df4:	str	x3, [x21, x0, lsl #3]
     df8:	cbnz	x1, de0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x88>
     dfc:	mov	x3, x25
     e00:	cmp	x25, #0xfff
     e04:	b.ls	fdc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x284>  // b.plast
     e08:	ldr	x3, [x19, #16]
     e0c:	and	x4, x25, #0xfffffffffffff000
     e10:	cmp	x3, x4
     e14:	b.ne	ffc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2a4>  // b.any
     e18:	ubfx	x24, x25, #6, #6
     e1c:	mov	x5, #0x1                   	// #1
     e20:	ldr	x20, [x19, #1064]
     e24:	add	x0, x24, x5
     e28:	and	x6, x25, #0xfff
     e2c:	lsl	x24, x5, x24
     e30:	add	x11, x21, x0, lsl #3
     e34:	ands	x20, x20, x24
     e38:	lsl	x5, x5, x25
     e3c:	b.eq	e6c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x114>  // b.none
     e40:	ldr	x0, [x21, x0, lsl #3]
     e44:	tst	x5, x0
     e48:	b.eq	e6c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x114>  // b.none
     e4c:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     e50:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     e54:	add	x2, x2, #0x0
     e58:	add	x0, x0, #0x0
     e5c:	mov	x4, #0x0                   	// #0
     e60:	mov	x3, #0x0                   	// #0
     e64:	mov	w1, #0x13a                 	// #314
     e68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     e6c:	add	x8, x6, x6, lsl #6
     e70:	str	x6, [sp, #176]
     e74:	add	x7, x19, #0x630
     e78:	mov	x26, #0x1                   	// #1
     e7c:	add	x3, sp, #0xb8
     e80:	add	x10, x7, x8, lsl #3
     e84:	mov	x9, x26
     e88:	cbz	x20, ec0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x168>
     e8c:	ldr	x20, [x11]
     e90:	ands	x20, x5, x20
     e94:	b.eq	ec0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x168>  // b.none
     e98:	mov	x0, #0x1                   	// #1
     e9c:	cmp	x0, x26
     ea0:	b.eq	1034 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2dc>  // b.none
     ea4:	add	x26, x26, #0x1
     ea8:	cmp	x26, #0x15
     eac:	b.eq	11c8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x470>  // b.none
     eb0:	ldr	x20, [x19, #1064]
     eb4:	str	x6, [sp, #176]
     eb8:	and	x20, x20, x24
     ebc:	cbnz	x20, e8c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x134>
     ec0:	sub	x4, x26, #0x1
     ec4:	mov	x28, #0x0                   	// #0
     ec8:	mov	x27, #0x0                   	// #0
     ecc:	mov	x12, #0x0                   	// #0
     ed0:	cbnz	x27, f74 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x21c>
     ed4:	cbnz	x20, ea4 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x14c>
     ed8:	ldr	x27, [x10]
     edc:	cbz	x27, ea4 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x14c>
     ee0:	cbnz	x28, fb0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x258>
     ee4:	mov	x1, x8
     ee8:	mov	x20, x28
     eec:	rbit	x12, x27
     ef0:	clz	x12, x12
     ef4:	add	x0, x1, x12
     ef8:	add	x0, x0, #0x1
     efc:	ldr	x2, [x7, x0, lsl #3]
     f00:	cbz	x2, 1014 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2bc>
     f04:	add	x1, x12, x28
     f08:	lsl	x0, x9, x12
     f0c:	mov	x28, x2
     f10:	bic	x27, x27, x0
     f14:	rbit	x0, x28
     f18:	clz	x0, x0
     f1c:	add	x1, x0, x1, lsl #6
     f20:	lsl	x2, x9, x0
     f24:	bic	x28, x28, x2
     f28:	orr	x0, x28, x27
     f2c:	cbz	x0, fc8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x270>
     f30:	mov	x0, x7
     f34:	mov	x2, x21
     f38:	stp	x7, x3, [sp, #104]
     f3c:	stp	x4, x6, [sp, #120]
     f40:	stp	x10, x12, [sp, #136]
     f44:	stp	x11, x5, [sp, #152]
     f48:	str	x8, [sp, #168]
     f4c:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     f50:	mov	x9, #0x1                   	// #1
     f54:	ldp	x7, x3, [sp, #104]
     f58:	ldp	x4, x6, [sp, #120]
     f5c:	ldp	x10, x12, [sp, #136]
     f60:	ldp	x11, x5, [sp, #152]
     f64:	ldr	x8, [sp, #168]
     f68:	cbz	x0, ed0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x178>
     f6c:	add	x0, x0, x9
     f70:	b	e9c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x144>
     f74:	lsl	x0, x20, #6
     f78:	cbz	x28, fbc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x264>
     f7c:	rbit	x1, x28
     f80:	add	x0, x12, x0
     f84:	clz	x1, x1
     f88:	lsl	x2, x9, x1
     f8c:	add	x1, x1, x0, lsl #6
     f90:	bic	x28, x28, x2
     f94:	b	f30 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x1d8>
     f98:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     f9c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     fa0:	add	x2, x2, #0x0
     fa4:	add	x0, x0, #0x0
     fa8:	mov	w1, #0x6b                  	// #107
     fac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     fb0:	mov	x1, x12
     fb4:	mov	x27, #0x0                   	// #0
     fb8:	b	f14 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x1bc>
     fbc:	add	x1, x8, x0
     fc0:	mov	x28, x0
     fc4:	b	eec <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x194>
     fc8:	add	x20, x20, #0x1
     fcc:	mov	x27, #0x0                   	// #0
     fd0:	mov	x28, #0x0                   	// #0
     fd4:	b	f30 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x1d8>
     fd8:	mov	x3, x5
     fdc:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     fe0:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
     fe4:	add	x2, x2, #0x0
     fe8:	add	x0, x0, #0x0
     fec:	mov	x4, #0x1000                	// #4096
     ff0:	mov	w1, #0x16e                 	// #366
     ff4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ff8:	mov	x3, x1
     ffc:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1000:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1004:	add	x2, x2, #0x0
    1008:	add	x0, x0, #0x0
    100c:	mov	w1, #0x16f                 	// #367
    1010:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1014:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1018:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    101c:	add	x2, x2, #0x0
    1020:	add	x0, x0, #0x0
    1024:	mov	x4, #0x0                   	// #0
    1028:	mov	x3, #0x0                   	// #0
    102c:	mov	w1, #0x133                 	// #307
    1030:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1034:	add	x7, sp, #0xb0
    1038:	mov	x0, x7
    103c:	add	x2, x7, x26, lsl #3
    1040:	b	1058 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x300>
    1044:	ldr	x1, [x19, #16]
    1048:	add	x3, x3, x1
    104c:	str	x3, [x0], #8
    1050:	cmp	x2, x0
    1054:	b.eq	1080 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x328>  // b.none
    1058:	ldr	x3, [x0]
    105c:	cmp	x3, #0xfff
    1060:	b.ls	1044 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2ec>  // b.plast
    1064:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1068:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    106c:	add	x2, x2, #0x0
    1070:	add	x0, x0, #0x0
    1074:	mov	x4, #0x1000                	// #4096
    1078:	mov	w1, #0x16b                 	// #363
    107c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1080:	ldr	x3, [sp, #176]
    1084:	cmp	x25, x3
    1088:	b.ne	1200 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x4a8>  // b.any
    108c:	ldr	x3, [x22]
    1090:	cmp	x3, x25
    1094:	b.ne	11d8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x480>  // b.any
    1098:	add	x10, x19, #0x10
    109c:	mov	x0, #0x14                  	// #20
    10a0:	cmp	x26, #0x14
    10a4:	mov	x13, #0xa40                 	// #2624
    10a8:	mov	x11, #0x1146                	// #4422
    10ac:	add	x12, x10, #0x410, lsl #12
    10b0:	add	x9, x23, #0x630
    10b4:	csel	x26, x26, x0, ls  // ls = plast
    10b8:	mov	x8, #0x1                   	// #1
    10bc:	mov	w0, #0x1                   	// #1
    10c0:	movk	x13, #0x21, lsl #16
    10c4:	movk	x11, #0x4, lsl #16
    10c8:	str	w26, [x23, #1576]
    10cc:	strb	w0, [x23, #2224]
    10d0:	udiv	x0, x8, x26
    10d4:	add	x2, x7, x8, lsl #3
    10d8:	ldur	x5, [x2, #-8]
    10dc:	msub	x0, x0, x26, x8
    10e0:	cmp	x5, #0xfff
    10e4:	b.ls	fd8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x280>  // b.plast
    10e8:	and	x4, x5, #0xfffffffffffff000
    10ec:	cmp	x1, x4
    10f0:	b.ne	ff8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2a0>  // b.any
    10f4:	ldr	x3, [x7, x0, lsl #3]
    10f8:	and	x5, x5, #0xfff
    10fc:	cmp	x3, #0xfff
    1100:	b.ls	fdc <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x284>  // b.plast
    1104:	and	x4, x3, #0xfffffffffffff000
    1108:	cmp	x1, x4
    110c:	b.ne	ff8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x2a0>  // b.any
    1110:	ldr	x4, [x12, #2608]
    1114:	and	x6, x3, #0xfff
    1118:	cbz	x4, 11f4 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x49c>
    111c:	add	x0, x19, x13
    1120:	mov	x2, #0x0                   	// #0
    1124:	b	1138 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x3e0>
    1128:	add	x2, x2, #0x1
    112c:	add	x0, x0, #0x10
    1130:	cmp	x4, x2
    1134:	b.eq	11b8 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x460>  // b.none
    1138:	ldrh	w3, [x0]
    113c:	cmp	x5, x3
    1140:	b.ne	1128 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x3d0>  // b.any
    1144:	ldrh	w3, [x0, #2]
    1148:	cmp	x6, x3
    114c:	b.ne	1128 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x3d0>  // b.any
    1150:	add	x0, x19, x2, lsl #4
    1154:	add	x0, x0, #0x210, lsl #12
    1158:	ldrsw	x4, [x0, #2636]
    115c:	ldr	w2, [x0, #2628]
    1160:	ldr	w0, [x0, #2632]
    1164:	add	x5, x5, x11
    1168:	add	x3, x6, x11
    116c:	cmp	x26, x8
    1170:	add	x8, x8, #0x1
    1174:	ldr	x5, [x10, x5, lsl #3]
    1178:	ldr	x3, [x10, x3, lsl #3]
    117c:	str	x4, [x9]
    1180:	ldr	x4, [x5, #16]
    1184:	str	x4, [x9, #8]
    1188:	ldr	x3, [x3, #16]
    118c:	str	x3, [x9, #16]
    1190:	stp	w0, w2, [x9, #24]
    1194:	add	x9, x9, #0x20
    1198:	b.ne	10d0 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x378>  // b.any
    119c:	ldp	x21, x22, [sp, #16]
    11a0:	ldp	x23, x24, [sp, #32]
    11a4:	ldp	x25, x26, [sp, #48]
    11a8:	ldp	x27, x28, [sp, #64]
    11ac:	ldr	x30, [sp, #80]
    11b0:	ldp	x19, x20, [sp], #336
    11b4:	ret
    11b8:	mov	w0, #0xffffffff            	// #-1
    11bc:	mov	x4, #0x0                   	// #0
    11c0:	mov	w2, w0
    11c4:	b	1164 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x40c>
    11c8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    11cc:	add	x0, x0, #0x0
    11d0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    11d4:	b	119c <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x444>
    11d8:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    11dc:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    11e0:	mov	x4, x25
    11e4:	add	x2, x2, #0x0
    11e8:	add	x0, x0, #0x0
    11ec:	mov	w1, #0x80                  	// #128
    11f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    11f4:	mov	w0, #0xffffffff            	// #-1
    11f8:	mov	w2, w0
    11fc:	b	1164 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE+0x40c>
    1200:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1204:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1208:	mov	x4, x25
    120c:	add	x2, x2, #0x0
    1210:	add	x0, x0, #0x0
    1214:	mov	w1, #0x13f                 	// #319
    1218:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    121c:	nop

0000000000001220 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb>:
    1220:	stp	x19, x20, [sp, #-64]!
    1224:	mov	x19, x0
    1228:	stp	x21, x22, [sp, #16]
    122c:	ldr	x21, [x1, #16]
    1230:	ldr	x0, [x21, #8]
    1234:	str	x30, [sp, #40]
    1238:	cbz	x0, 13fc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1dc>
    123c:	ldr	x0, [x2]
    1240:	mov	x22, x1
    1244:	mov	x20, x2
    1248:	cbz	x0, 125c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3c>
    124c:	ldr	x2, [x19, #16]
    1250:	ldr	x1, [x21, #528]
    1254:	cmp	x1, x2
    1258:	b.eq	141c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1fc>  // b.none
    125c:	add	x0, x19, #0x8
    1260:	mov	w2, #0x1                   	// #1
    1264:	str	x23, [sp, #32]
    1268:	ldxrb	w1, [x0]
    126c:	stxrb	w3, w2, [x0]
    1270:	cbnz	w3, 1268 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x48>
    1274:	dmb	ish
    1278:	tst	w1, #0xff
    127c:	b.eq	1284 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x64>  // b.none
    1280:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1284:	add	x23, x21, #0x8
    1288:	mov	x1, x21
    128c:	mov	x0, x19
    1290:	mov	x2, x20
    1294:	bl	410 <_ZN11__sanitizer2DD13MutexEnsureIDEPNS_15DDLogicalThreadEPNS_7DDMutexE>
    1298:	ldr	x1, [x19, #16]
    129c:	ldr	x3, [x23, #520]
    12a0:	ldr	x0, [x20]
    12a4:	cmp	x1, x3
    12a8:	b.ne	15a4 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x384>  // b.any
    12ac:	cmp	x0, #0xfff
    12b0:	b.ls	15c0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3a0>  // b.plast
    12b4:	and	x4, x0, #0xfffffffffffff000
    12b8:	cmp	x1, x4
    12bc:	b.ne	15e0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3c0>  // b.any
    12c0:	ldr	x2, [x21, #8]
    12c4:	ubfx	x1, x0, #6, #6
    12c8:	mov	x3, #0x1                   	// #1
    12cc:	add	x8, x1, x3
    12d0:	lsl	x5, x3, x1
    12d4:	and	x1, x0, #0xfff
    12d8:	tst	x5, x2
    12dc:	lsl	x3, x3, x0
    12e0:	b.ne	140c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1ec>  // b.any
    12e4:	add	x6, x19, #0x208, lsl #12
    12e8:	add	x4, x1, x1, lsl #6
    12ec:	add	x10, x19, #0x630
    12f0:	str	xzr, [x6, #1584]
    12f4:	ldr	x1, [x10, x4, lsl #3]
    12f8:	cbz	x1, 14a8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x288>
    12fc:	add	x9, x19, #0x208, lsl #12
    1300:	mov	x2, #0x0                   	// #0
    1304:	add	x9, x9, #0x630
    1308:	mov	x11, #0x1                   	// #1
    130c:	rbit	x0, x1
    1310:	clz	x0, x0
    1314:	lsl	x0, x11, x0
    1318:	orr	x7, x0, x2
    131c:	cmp	x7, x2
    1320:	rbit	x2, x1
    1324:	str	x7, [x6, #1584]
    1328:	clz	x2, x2
    132c:	bic	x1, x1, x0
    1330:	add	x0, x2, #0x1
    1334:	add	x2, x2, x4
    1338:	b.eq	1490 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x270>  // b.none
    133c:	add	x2, x2, #0x1
    1340:	str	xzr, [x9, x0, lsl #3]
    1344:	ldr	x2, [x10, x2, lsl #3]
    1348:	str	x2, [x9, x0, lsl #3]
    134c:	cbz	x1, 14a8 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x288>
    1350:	ldr	x2, [x6, #1584]
    1354:	b	130c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xec>
    1358:	ldr	x0, [x21, #8]
    135c:	mov	x4, #0x1                   	// #1
    1360:	ldr	x3, [x6, #2104]
    1364:	ands	x0, x3, x0
    1368:	b.eq	13f0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1d0>  // b.none
    136c:	rbit	x1, x0
    1370:	clz	x1, x1
    1374:	mov	x2, x1
    1378:	lsl	x1, x4, x1
    137c:	tst	x1, x3
    1380:	bic	x0, x0, x1
    1384:	b.eq	15fc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3dc>  // b.none
    1388:	add	x1, x2, #0x1
    138c:	ldr	x2, [x23, x1, lsl #3]
    1390:	ldr	x1, [x7, x1, lsl #3]
    1394:	tst	x2, x1
    1398:	b.eq	15fc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3dc>  // b.none
    139c:	ldr	x1, [x22]
    13a0:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    13a4:	add	x0, x0, #0x0
    13a8:	mov	w3, #0x0                   	// #0
    13ac:	ldr	x2, [x20]
    13b0:	ldr	x4, [x1]
    13b4:	cmp	x4, x0
    13b8:	b.ne	163c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x41c>  // b.any
    13bc:	ldr	x1, [x1, #8]
    13c0:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    13c4:	add	x0, x0, #0x0
    13c8:	mov	w4, #0x0                   	// #0
    13cc:	cmp	x1, x0
    13d0:	b.ne	161c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3fc>  // b.any
    13d4:	mov	x1, x23
    13d8:	add	x0, x19, #0x10
    13dc:	bl	0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    13e0:	mov	x2, x20
    13e4:	mov	x1, x22
    13e8:	mov	x0, x19
    13ec:	bl	d58 <_ZN11__sanitizer2DD14ReportDeadlockEPNS_10DDCallbackEPNS_7DDMutexE>
    13f0:	dmb	ish
    13f4:	strb	wzr, [x19, #8]
    13f8:	ldr	x23, [sp, #32]
    13fc:	ldp	x21, x22, [sp, #16]
    1400:	ldr	x30, [sp, #40]
    1404:	ldp	x19, x20, [sp], #64
    1408:	ret
    140c:	ldr	x0, [x23, x8, lsl #3]
    1410:	tst	x3, x0
    1414:	b.eq	12e4 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0xc4>  // b.none
    1418:	b	13f0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1d0>
    141c:	and	x2, x0, #0xfffffffffffff000
    1420:	cmp	x1, x2
    1424:	b.ne	125c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3c>  // b.any
    1428:	ldr	x6, [x21, #1568]
    142c:	cbz	x6, 13fc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1dc>
    1430:	ubfx	x3, x0, #6, #6
    1434:	mov	x1, #0x1                   	// #1
    1438:	add	x5, x19, #0x630
    143c:	add	x8, x21, #0x420
    1440:	add	x10, x3, x1
    1444:	lsl	x0, x1, x0
    1448:	lsl	x3, x1, x3
    144c:	mov	w7, #0x208                 	// #520
    1450:	mov	x1, #0x0                   	// #0
    1454:	mov	w9, #0x41                  	// #65
    1458:	lsl	x2, x1, #3
    145c:	ldr	w2, [x8, x2]
    1460:	umull	x4, w2, w7
    1464:	ldr	x4, [x5, x4]
    1468:	tst	x3, x4
    146c:	b.eq	125c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3c>  // b.none
    1470:	umaddl	x2, w2, w9, x10
    1474:	ldr	x2, [x5, x2, lsl #3]
    1478:	tst	x0, x2
    147c:	b.eq	125c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3c>  // b.none
    1480:	add	x1, x1, #0x1
    1484:	cmp	x6, x1
    1488:	b.ne	1458 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x238>  // b.any
    148c:	b	13fc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1dc>
    1490:	add	x2, x2, #0x1
    1494:	ldr	x7, [x9, x0, lsl #3]
    1498:	ldr	x2, [x10, x2, lsl #3]
    149c:	orr	x2, x7, x2
    14a0:	str	x2, [x9, x0, lsl #3]
    14a4:	cbnz	x1, 1350 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x130>
    14a8:	add	x7, x19, #0x208, lsl #12
    14ac:	add	x9, x19, #0x208, lsl #12
    14b0:	add	x7, x7, #0x838
    14b4:	add	x9, x9, #0x630
    14b8:	str	x5, [x6, #2104]
    14bc:	mov	w12, #0x40                  	// #64
    14c0:	mov	x13, #0x208                 	// #520
    14c4:	mov	x5, #0x1                   	// #1
    14c8:	str	x3, [x7, x8, lsl #3]
    14cc:	ldr	x0, [x6, #1584]
    14d0:	cbz	x0, 1358 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x138>
    14d4:	rbit	x1, x0
    14d8:	clz	x1, x1
    14dc:	add	x3, x1, #0x1
    14e0:	lsl	x4, x5, x1
    14e4:	bic	x0, x0, x4
    14e8:	str	x0, [x6, #1584]
    14ec:	ldr	x2, [x9, x3, lsl #3]
    14f0:	cbz	x2, 1658 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x438>
    14f4:	rbit	x11, x2
    14f8:	clz	x11, x11
    14fc:	lsl	x8, x5, x11
    1500:	bic	x2, x2, x8
    1504:	str	x2, [x9, x3, lsl #3]
    1508:	cbz	x2, 1514 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x2f4>
    150c:	orr	x0, x4, x0
    1510:	str	x0, [x6, #1584]
    1514:	sxtw	x11, w11
    1518:	ldr	x3, [x6, #2104]
    151c:	smaddl	x1, w1, w12, x11
    1520:	lsr	x0, x1, #6
    1524:	lsl	x2, x5, x1
    1528:	add	x4, x0, #0x1
    152c:	lsl	x0, x5, x0
    1530:	tst	x3, x0
    1534:	b.ne	1604 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x3e4>  // b.any
    1538:	orr	x0, x3, x0
    153c:	str	x0, [x6, #2104]
    1540:	str	x2, [x7, x4, lsl #3]
    1544:	mul	x0, x1, x13
    1548:	add	x1, x1, x1, lsl #6
    154c:	ldr	x2, [x10, x0]
    1550:	ldr	x11, [x6, #1584]
    1554:	cbz	x2, 14cc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x2ac>
    1558:	rbit	x4, x2
    155c:	clz	x4, x4
    1560:	mov	x0, x4
    1564:	add	x3, x0, #0x1
    1568:	lsl	x4, x5, x4
    156c:	orr	x8, x4, x11
    1570:	str	x8, [x6, #1584]
    1574:	cmp	x11, x8
    1578:	bic	x2, x2, x4
    157c:	lsl	x3, x3, #3
    1580:	b.eq	1588 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x368>  // b.none
    1584:	str	xzr, [x9, x3]
    1588:	add	x0, x0, x1
    158c:	add	x0, x0, #0x1
    1590:	ldr	x4, [x9, x3]
    1594:	ldr	x0, [x10, x0, lsl #3]
    1598:	orr	x0, x4, x0
    159c:	str	x0, [x9, x3]
    15a0:	b	1550 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x330>
    15a4:	mov	x4, x1
    15a8:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15ac:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15b0:	add	x2, x2, #0x0
    15b4:	add	x0, x0, #0x0
    15b8:	mov	w1, #0x6b                  	// #107
    15bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    15c0:	mov	x3, x0
    15c4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15c8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15cc:	add	x2, x2, #0x0
    15d0:	add	x0, x0, #0x0
    15d4:	mov	x4, #0x1000                	// #4096
    15d8:	mov	w1, #0x16e                 	// #366
    15dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    15e0:	mov	x3, x1
    15e4:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15e8:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    15ec:	add	x2, x2, #0x0
    15f0:	add	x0, x0, #0x0
    15f4:	mov	w1, #0x16f                 	// #367
    15f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    15fc:	cbnz	x0, 136c <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x14c>
    1600:	b	13f0 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1d0>
    1604:	ldr	x0, [x7, x4, lsl #3]
    1608:	orr	x2, x0, x2
    160c:	str	x2, [x7, x4, lsl #3]
    1610:	cmp	x0, x2
    1614:	b.eq	14cc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x2ac>  // b.none
    1618:	b	1544 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x324>
    161c:	str	x2, [sp, #48]
    1620:	mov	x0, x22
    1624:	str	w3, [sp, #60]
    1628:	blr	x1
    162c:	mov	w4, w0
    1630:	ldr	w3, [sp, #60]
    1634:	ldr	x2, [sp, #48]
    1638:	b	13d4 <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x1b4>
    163c:	str	x2, [sp, #48]
    1640:	mov	x0, x22
    1644:	blr	x4
    1648:	mov	w3, w0
    164c:	ldr	x1, [x22]
    1650:	ldr	x2, [sp, #48]
    1654:	b	13bc <_ZN11__sanitizer2DD15MutexBeforeLockEPNS_10DDCallbackEPNS_7DDMutexEb+0x19c>
    1658:	adrp	x2, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    165c:	adrp	x0, 0 <_ZN11__sanitizer2DD20CreatePhysicalThreadEv>
    1660:	add	x2, x2, #0x0
    1664:	add	x0, x0, #0x0
    1668:	mov	x4, #0x0                   	// #0
    166c:	mov	x3, #0x0                   	// #0
    1670:	mov	w1, #0x31                  	// #49
    1674:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer10DDCallback6UnwindEv:

0000000000000000 <_ZN11__sanitizer10DDCallback6UnwindEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN11__sanitizer10DDCallback9UniqueTidEv:

0000000000000000 <_ZN11__sanitizer10DDCallback9UniqueTidEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0:

0000000000000000 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>:
   0:	stp	x19, x20, [sp, #-112]!
   4:	add	x1, x1, x1, lsl #6
   8:	mov	x19, #0x0                   	// #0
   c:	stp	x21, x22, [sp, #16]
  10:	mov	x22, x0
  14:	add	x21, x1, #0x1
  18:	stp	x23, x24, [sp, #32]
  1c:	sub	x23, x4, #0x1
  20:	mov	x20, #0x0                   	// #0
  24:	stp	x25, x26, [sp, #48]
  28:	mov	x26, x3
  2c:	add	x3, x3, #0x8
  30:	stp	x27, x28, [sp, #64]
  34:	add	x27, x0, x1, lsl #3
  38:	mov	x25, #0x0                   	// #0
  3c:	mov	x28, #0x0                   	// #0
  40:	mov	x24, #0x1                   	// #1
  44:	str	x30, [sp, #80]
  48:	cbnz	x23, 8c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x8c>
  4c:	mov	x1, #0x1                   	// #1
  50:	cbnz	x20, 130 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x130>
  54:	cbnz	x28, 1d4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1d4>
  58:	ldr	x20, [x27]
  5c:	cbz	x20, 1d4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1d4>
  60:	cbz	x19, 14c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x14c>
  64:	mov	x20, #0x0                   	// #0
  68:	rbit	x0, x19
  6c:	clz	x0, x0
  70:	lsl	x0, x1, x0
  74:	bic	x19, x19, x0
  78:	orr	x0, x19, x20
  7c:	cbnz	x0, 50 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x50>
  80:	add	x28, x28, #0x1
  84:	mov	x19, #0x0                   	// #0
  88:	b	54 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x54>
  8c:	cbnz	x20, 190 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x190>
  90:	cbnz	x28, 1d4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1d4>
  94:	ldr	x20, [x27]
  98:	cbz	x20, 1d4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1d4>
  9c:	cbz	x19, 1ac <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1ac>
  a0:	mov	x1, x25
  a4:	mov	x20, #0x0                   	// #0
  a8:	rbit	x0, x19
  ac:	clz	x0, x0
  b0:	lsl	x4, x24, x0
  b4:	bic	x19, x19, x4
  b8:	orr	x4, x19, x20
  bc:	cbnz	x4, cc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0xcc>
  c0:	add	x28, x28, #0x1
  c4:	mov	x20, #0x0                   	// #0
  c8:	mov	x19, #0x0                   	// #0
  cc:	sxtw	x0, w0
  d0:	add	x1, x0, x1, lsl #6
  d4:	str	x1, [x26, #8]
  d8:	cmp	x1, #0x1, lsl #12
  dc:	b.hi	214 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x214>  // b.pmore
  e0:	lsr	x0, x1, #12
  e4:	ubfx	x4, x1, #6, #6
  e8:	lsl	x6, x24, x4
  ec:	ldr	x5, [x2, x0, lsl #3]
  f0:	tst	x6, x5
  f4:	b.eq	170 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x170>  // b.none
  f8:	add	x0, x4, x0, lsl #6
  fc:	lsl	x4, x24, x1
 100:	add	x0, x0, #0x1
 104:	ldr	x5, [x2, x0, lsl #3]
 108:	tst	x4, x5
 10c:	b.eq	170 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x170>  // b.none
 110:	mov	x0, #0x2                   	// #2
 114:	ldp	x21, x22, [sp, #16]
 118:	ldp	x23, x24, [sp, #32]
 11c:	ldp	x25, x26, [sp, #48]
 120:	ldp	x27, x28, [sp, #64]
 124:	ldr	x30, [sp, #80]
 128:	ldp	x19, x20, [sp], #112
 12c:	ret
 130:	cbz	x19, 14c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x14c>
 134:	rbit	x0, x19
 138:	clz	x0, x0
 13c:	lsl	x0, x1, x0
 140:	bic	x19, x19, x0
 144:	cbz	x20, 54 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x54>
 148:	b	130 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x130>
 14c:	rbit	x2, x20
 150:	add	x0, x21, x28, lsl #6
 154:	clz	x2, x2
 158:	add	x0, x0, x2
 15c:	ldr	x19, [x22, x0, lsl #3]
 160:	cbz	x19, 1f4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1f4>
 164:	lsl	x2, x1, x2
 168:	bic	x20, x20, x2
 16c:	b	68 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x68>
 170:	mov	x4, x23
 174:	mov	x0, x22
 178:	stp	x2, x3, [sp, #96]
 17c:	bl	0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>
 180:	ldp	x2, x3, [sp, #96]
 184:	cbz	x0, 48 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x48>
 188:	add	x0, x0, #0x1
 18c:	b	1d8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1d8>
 190:	cbz	x19, 1ac <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1ac>
 194:	rbit	x0, x19
 198:	add	x1, x25, x28, lsl #6
 19c:	clz	x0, x0
 1a0:	lsl	x4, x24, x0
 1a4:	bic	x19, x19, x4
 1a8:	b	cc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0xcc>
 1ac:	rbit	x25, x20
 1b0:	clz	x25, x25
 1b4:	add	x1, x25, x28, lsl #6
 1b8:	mov	x0, x25
 1bc:	add	x4, x1, x21
 1c0:	ldr	x19, [x22, x4, lsl #3]
 1c4:	cbz	x19, 1f4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0x1f4>
 1c8:	lsl	x0, x24, x0
 1cc:	bic	x20, x20, x0
 1d0:	b	a8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0+0xa8>
 1d4:	mov	x0, #0x0                   	// #0
 1d8:	ldp	x21, x22, [sp, #16]
 1dc:	ldp	x23, x24, [sp, #32]
 1e0:	ldp	x25, x26, [sp, #48]
 1e4:	ldp	x27, x28, [sp, #64]
 1e8:	ldr	x30, [sp, #80]
 1ec:	ldp	x19, x20, [sp], #112
 1f0:	ret
 1f4:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>
 1f8:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>
 1fc:	add	x2, x2, #0x0
 200:	add	x0, x0, #0x0
 204:	mov	x4, #0x0                   	// #0
 208:	mov	x3, #0x0                   	// #0
 20c:	mov	w1, #0x133                 	// #307
 210:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 214:	mov	x3, x1
 218:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>
 21c:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm.part.0>
 220:	add	x2, x2, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	x4, #0x1000                	// #4096
 22c:	mov	w1, #0x144                 	// #324
 230:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

Disassembly of section .text._ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji:

0000000000000000 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>:
   0:	stp	x19, x20, [sp, #-352]!
   4:	mov	x8, x0
   8:	ldr	x0, [x0]
   c:	ldr	x5, [x1, #520]
  10:	str	x30, [sp, #16]
  14:	cmp	x0, x5
  18:	b.eq	2c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x2c>  // b.none
  1c:	str	xzr, [x1]
  20:	str	x0, [x1, #520]
  24:	str	xzr, [x1, #1040]
  28:	str	xzr, [x1, #1560]
  2c:	cmp	x2, #0xfff
  30:	b.ls	224 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x224>  // b.plast
  34:	ldr	x5, [x8]
  38:	and	x6, x2, #0xfffffffffffff000
  3c:	cmp	x5, x6
  40:	b.ne	244 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x244>  // b.any
  44:	cmp	x5, x0
  48:	b.ne	264 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x264>  // b.any
  4c:	add	x12, x8, #0x208, lsl #12
  50:	str	xzr, [x12, #1568]
  54:	ldr	x5, [x1]
  58:	cbz	x5, c0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xc0>
  5c:	add	x10, x8, #0x208, lsl #12
  60:	mov	x6, #0x0                   	// #0
  64:	add	x10, x10, #0x620
  68:	mov	x11, #0x1                   	// #1
  6c:	rbit	x0, x5
  70:	clz	x0, x0
  74:	lsl	x9, x11, x0
  78:	orr	x7, x9, x6
  7c:	str	x7, [x12, #1568]
  80:	bic	x5, x5, x9
  84:	cmp	x7, x6
  88:	add	x0, x0, #0x1
  8c:	b.eq	a8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xa8>  // b.none
  90:	str	xzr, [x10, x0, lsl #3]
  94:	ldr	x6, [x1, x0, lsl #3]
  98:	str	x6, [x10, x0, lsl #3]
  9c:	cbz	x5, bc <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xbc>
  a0:	ldr	x6, [x12, #1568]
  a4:	b	6c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x6c>
  a8:	ldr	x6, [x10, x0, lsl #3]
  ac:	ldr	x7, [x1, x0, lsl #3]
  b0:	orr	x6, x6, x7
  b4:	str	x6, [x10, x0, lsl #3]
  b8:	cbnz	x5, a0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xa0>
  bc:	ldr	x5, [x12, #1568]
  c0:	ubfx	x0, x2, #6, #6
  c4:	mov	x6, #0x1                   	// #1
  c8:	add	x10, x8, #0x208, lsl #12
  cc:	add	x19, x0, x6
  d0:	lsl	x16, x6, x0
  d4:	mov	x11, x6
  d8:	and	x14, x2, #0xfff
  dc:	add	x10, x10, #0x620
  e0:	add	x17, x8, #0x620
  e4:	add	x30, sp, #0x20
  e8:	mov	x0, #0x0                   	// #0
  ec:	lsl	x13, x6, x2
  f0:	mov	w20, #0x40                  	// #64
  f4:	cbz	x5, 168 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x168>
  f8:	rbit	x2, x5
  fc:	clz	x2, x2
 100:	add	x9, x2, #0x1
 104:	lsl	x7, x11, x2
 108:	bic	x5, x5, x7
 10c:	str	x5, [x12, #1568]
 110:	ldr	x6, [x10, x9, lsl #3]
 114:	cbz	x6, 2c0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x2c0>
 118:	rbit	x18, x6
 11c:	clz	x18, x18
 120:	lsl	x15, x11, x18
 124:	bic	x6, x6, x15
 128:	str	x6, [x10, x9, lsl #3]
 12c:	cbnz	x6, 28c <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x28c>
 130:	sxtw	x18, w18
 134:	smaddl	x2, w2, w20, x18
 138:	add	x7, x2, x2, lsl #6
 13c:	add	x6, x19, x7
 140:	ldr	x5, [x17, x7, lsl #3]
 144:	tst	x5, x16
 148:	b.ne	298 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x298>  // b.any
 14c:	orr	x5, x5, x16
 150:	str	x5, [x17, x7, lsl #3]
 154:	str	x13, [x17, x6, lsl #3]
 158:	cmp	x0, #0x27
 15c:	b.ls	2b0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x2b0>  // b.plast
 160:	ldr	x5, [x12, #1568]
 164:	cbnz	x5, f8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0xf8>
 168:	cbz	x0, 218 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x218>
 16c:	add	x15, x8, #0x410, lsl #12
 170:	mov	x16, #0x10a3                	// #4259
 174:	and	w14, w14, #0xffff
 178:	add	x17, sp, #0x20
 17c:	add	x11, x1, #0x418
 180:	mov	x5, #0x1                   	// #1
 184:	mov	x12, #0x1ffff               	// #131071
 188:	movk	x16, #0x2, lsl #16
 18c:	ldr	x10, [x15, #2608]
 190:	b	1a0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x1a0>
 194:	cmp	x0, x5
 198:	add	x5, x5, #0x1
 19c:	b.eq	218 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x218>  // b.none
 1a0:	cmp	x10, x12
 1a4:	b.hi	194 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x194>  // b.pmore
 1a8:	add	x2, x17, x5, lsl #3
 1ac:	ldr	x9, [x1, #1560]
 1b0:	ldur	x7, [x2, #-8]
 1b4:	and	w13, w7, #0xffff
 1b8:	cbz	x9, 284 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x284>
 1bc:	mov	x2, #0x0                   	// #0
 1c0:	b	1d0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x1d0>
 1c4:	add	x2, x2, #0x1
 1c8:	cmp	x2, x9
 1cc:	b.eq	284 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x284>  // b.none
 1d0:	lsl	x6, x2, #3
 1d4:	ldr	w6, [x11, x6]
 1d8:	cmp	w6, w7
 1dc:	b.ne	1c4 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x1c4>  // b.any
 1e0:	add	x2, x1, x2, lsl #3
 1e4:	ldr	w7, [x2, #1052]
 1e8:	add	x6, x10, x16
 1ec:	add	x10, x10, #0x1
 1f0:	str	x10, [x15, #2608]
 1f4:	cmp	x0, x5
 1f8:	lsl	x6, x6, #4
 1fc:	add	x5, x5, #0x1
 200:	add	x2, x8, x6
 204:	strh	w13, [x8, x6]
 208:	strh	w14, [x2, #2]
 20c:	stp	w7, w3, [x2, #4]
 210:	str	w4, [x2, #12]
 214:	b.ne	1a0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x1a0>  // b.any
 218:	ldr	x30, [sp, #16]
 21c:	ldp	x19, x20, [sp], #352
 220:	ret
 224:	mov	x3, x2
 228:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 22c:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 230:	add	x0, x0, #0x0
 234:	add	x2, x2, #0x0
 238:	mov	x4, #0x1000                	// #4096
 23c:	mov	w1, #0x16e                 	// #366
 240:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 244:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 248:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 24c:	mov	x4, x6
 250:	mov	x3, x5
 254:	add	x2, x2, #0x0
 258:	add	x0, x0, #0x0
 25c:	mov	w1, #0x16f                 	// #367
 260:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 264:	mov	x3, x0
 268:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 26c:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 270:	mov	x4, x5
 274:	add	x2, x2, #0x0
 278:	add	x0, x0, #0x0
 27c:	mov	w1, #0x6b                  	// #107
 280:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 284:	mov	w7, #0x0                   	// #0
 288:	b	1e8 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x1e8>
 28c:	orr	x7, x7, x5
 290:	str	x7, [x12, #1568]
 294:	b	130 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x130>
 298:	ldr	x7, [x17, x6, lsl #3]
 29c:	cmp	x0, #0x27
 2a0:	orr	x5, x7, x13
 2a4:	str	x5, [x17, x6, lsl #3]
 2a8:	ccmp	x7, x5, #0x4, ls  // ls = plast
 2ac:	b.eq	160 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x160>  // b.none
 2b0:	str	x2, [x30, x0, lsl #3]
 2b4:	add	x0, x0, #0x1
 2b8:	ldr	x5, [x12, #1568]
 2bc:	b	164 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji+0x164>
 2c0:	adrp	x2, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 2c4:	adrp	x0, 0 <_ZN11__sanitizer16DeadlockDetectorINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8addEdgesEPNS_19DeadlockDetectorTLSIS4_EEmji>
 2c8:	add	x2, x2, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	x4, #0x0                   	// #0
 2d4:	mov	x3, #0x0                   	// #0
 2d8:	mov	w1, #0x31                  	// #49
 2dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm:

0000000000000000 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>:
   0:	stp	x19, x20, [sp, #-112]!
   4:	stp	x23, x24, [sp, #32]
   8:	mov	x24, x0
   c:	mov	x0, x4
  10:	str	x30, [sp, #80]
  14:	cbnz	x4, 28 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x28>
  18:	ldp	x23, x24, [sp, #32]
  1c:	ldr	x30, [sp, #80]
  20:	ldp	x19, x20, [sp], #112
  24:	ret
  28:	str	x1, [x3]
  2c:	mov	x23, x3
  30:	cmp	x1, #0x1, lsl #12
  34:	b.hi	234 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x234>  // b.pmore
  38:	lsr	x3, x1, #12
  3c:	ubfx	x5, x1, #6, #6
  40:	mov	x4, #0x1                   	// #1
  44:	lsl	x7, x4, x5
  48:	ldr	x6, [x2, x3, lsl #3]
  4c:	tst	x7, x6
  50:	b.eq	74 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x74>  // b.none
  54:	add	x3, x5, x3, lsl #6
  58:	lsl	x5, x4, x1
  5c:	add	x3, x3, x4
  60:	ldr	x6, [x2, x3, lsl #3]
  64:	tst	x5, x6
  68:	b.eq	74 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x74>  // b.none
  6c:	mov	x0, x4
  70:	b	18 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x18>
  74:	add	x1, x1, x1, lsl #6
  78:	sub	x20, x0, #0x1
  7c:	add	x3, x23, #0x8
  80:	stp	x27, x28, [sp, #64]
  84:	add	x19, x24, x1, lsl #3
  88:	add	x28, x1, #0x1
  8c:	mov	x27, #0x0                   	// #0
  90:	stp	x21, x22, [sp, #16]
  94:	mov	x21, #0x0                   	// #0
  98:	mov	x22, #0x0                   	// #0
  9c:	stp	x25, x26, [sp, #48]
  a0:	mov	x25, #0x0                   	// #0
  a4:	mov	x26, #0x1                   	// #1
  a8:	cbnz	x20, ec <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xec>
  ac:	mov	x1, #0x1                   	// #1
  b0:	cbnz	x22, 130 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x130>
  b4:	cbnz	x25, 280 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x280>
  b8:	ldr	x22, [x19]
  bc:	cbz	x22, 280 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x280>
  c0:	cbz	x21, 1bc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x1bc>
  c4:	mov	x22, #0x0                   	// #0
  c8:	rbit	x0, x21
  cc:	clz	x0, x0
  d0:	lsl	x0, x1, x0
  d4:	bic	x21, x21, x0
  d8:	orr	x0, x22, x21
  dc:	cbnz	x0, b0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xb0>
  e0:	add	x25, x25, #0x1
  e4:	mov	x21, #0x0                   	// #0
  e8:	b	b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xb4>
  ec:	cbnz	x22, 14c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x14c>
  f0:	cbnz	x25, 280 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x280>
  f4:	ldr	x22, [x19]
  f8:	cbz	x22, 280 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x280>
  fc:	cbz	x21, 20c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x20c>
 100:	mov	x1, x27
 104:	mov	x22, #0x0                   	// #0
 108:	rbit	x0, x21
 10c:	clz	x0, x0
 110:	lsl	x4, x26, x0
 114:	bic	x21, x21, x4
 118:	orr	x4, x21, x22
 11c:	cbnz	x4, 164 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x164>
 120:	add	x25, x25, #0x1
 124:	mov	x22, #0x0                   	// #0
 128:	mov	x21, #0x0                   	// #0
 12c:	b	164 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x164>
 130:	cbz	x21, 1bc <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x1bc>
 134:	rbit	x0, x21
 138:	clz	x0, x0
 13c:	lsl	x0, x1, x0
 140:	bic	x21, x21, x0
 144:	cbz	x22, b4 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xb4>
 148:	b	130 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x130>
 14c:	cbz	x21, 20c <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x20c>
 150:	rbit	x0, x21
 154:	add	x1, x27, x25, lsl #6
 158:	clz	x0, x0
 15c:	lsl	x4, x26, x0
 160:	bic	x21, x21, x4
 164:	sxtw	x0, w0
 168:	add	x1, x0, x1, lsl #6
 16c:	str	x1, [x23, #8]
 170:	cmp	x1, #0x1, lsl #12
 174:	b.hi	240 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x240>  // b.pmore
 178:	lsr	x0, x1, #12
 17c:	ubfx	x4, x1, #6, #6
 180:	lsl	x6, x26, x4
 184:	ldr	x5, [x2, x0, lsl #3]
 188:	tst	x6, x5
 18c:	b.eq	1e0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x1e0>  // b.none
 190:	add	x0, x4, x0, lsl #6
 194:	lsl	x4, x26, x1
 198:	add	x0, x0, #0x1
 19c:	ldr	x5, [x2, x0, lsl #3]
 1a0:	tst	x4, x5
 1a4:	b.eq	1e0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x1e0>  // b.none
 1a8:	mov	x0, #0x2                   	// #2
 1ac:	ldp	x21, x22, [sp, #16]
 1b0:	ldp	x25, x26, [sp, #48]
 1b4:	ldp	x27, x28, [sp, #64]
 1b8:	b	18 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x18>
 1bc:	rbit	x2, x22
 1c0:	add	x0, x28, x25, lsl #6
 1c4:	clz	x2, x2
 1c8:	add	x0, x0, x2
 1cc:	ldr	x21, [x24, x0, lsl #3]
 1d0:	cbz	x21, 260 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x260>
 1d4:	lsl	x2, x1, x2
 1d8:	bic	x22, x22, x2
 1dc:	b	c8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xc8>
 1e0:	mov	x4, x20
 1e4:	mov	x0, x24
 1e8:	stp	x2, x3, [sp, #96]
 1ec:	bl	0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 1f0:	ldp	x2, x3, [sp, #96]
 1f4:	cbz	x0, a8 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0xa8>
 1f8:	add	x0, x0, #0x1
 1fc:	ldp	x21, x22, [sp, #16]
 200:	ldp	x25, x26, [sp, #48]
 204:	ldp	x27, x28, [sp, #64]
 208:	b	18 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x18>
 20c:	rbit	x27, x22
 210:	clz	x27, x27
 214:	add	x1, x27, x25, lsl #6
 218:	mov	x0, x27
 21c:	add	x4, x1, x28
 220:	ldr	x21, [x24, x4, lsl #3]
 224:	cbz	x21, 260 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x260>
 228:	lsl	x0, x26, x0
 22c:	bic	x22, x22, x0
 230:	b	108 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x108>
 234:	stp	x21, x22, [sp, #16]
 238:	stp	x25, x26, [sp, #48]
 23c:	stp	x27, x28, [sp, #64]
 240:	mov	x3, x1
 244:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 248:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 24c:	add	x2, x2, #0x0
 250:	add	x0, x0, #0x0
 254:	mov	x4, #0x1000                	// #4096
 258:	mov	w1, #0x144                 	// #324
 25c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 260:	adrp	x2, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 264:	adrp	x0, 0 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm>
 268:	add	x2, x2, #0x0
 26c:	add	x0, x0, #0x0
 270:	mov	x4, #0x0                   	// #0
 274:	mov	x3, #0x0                   	// #0
 278:	mov	w1, #0x133                 	// #307
 27c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 280:	mov	x0, #0x0                   	// #0
 284:	ldp	x21, x22, [sp, #16]
 288:	ldp	x25, x26, [sp, #48]
 28c:	ldp	x27, x28, [sp, #64]
 290:	b	18 <_ZN11__sanitizer7BVGraphINS_17TwoLevelBitVectorILm1ENS_14BasicBitVectorImEEEEE8findPathEmRKS4_Pmm+0x18>

sanitizer_deadlock_detector2.cpp.o:     file format elf64-littleaarch64


sanitizer_errno.cpp.o:     file format elf64-littleaarch64


sanitizer_file.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>:
   0:	mov	x2, x1
   4:	mov	x4, #0x0                   	// #0
   8:	mov	x1, x0
   c:	mov	x3, #0x0                   	// #0
  10:	mov	w0, #0x2                   	// #2
  14:	b	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>

0000000000000018 <_ZN11__sanitizer8RawWriteEPKc>:
  18:	stp	x19, x30, [sp, #-16]!
  1c:	mov	x19, x0
  20:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
  24:	mov	x2, x0
  28:	mov	x1, x19
  2c:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
  30:	ldp	x19, x30, [sp], #16
  34:	add	x0, x0, #0x0
  38:	b	0 <_ZN11__sanitizer10ReportFile5WriteEPKcm>
  3c:	nop

0000000000000040 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>:
  40:	stp	x19, x20, [sp, #-32]!
  44:	mov	x19, x0
  48:	ldr	x0, [x0]
  4c:	str	x30, [sp, #24]
  50:	ldrb	w3, [x0]
  54:	and	x3, x3, #0xff
  58:	cmp	x3, #0x1
  5c:	b.ne	160 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x120>  // b.any
  60:	ldr	w0, [x19, #8]
  64:	sub	w0, w0, #0x1
  68:	cmp	w0, #0x1
  6c:	b.ls	118 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xd8>  // b.plast
  70:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
  74:	mov	x20, x0
  78:	adrp	x1, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
  7c:	ldr	x1, [x1]
  80:	ldr	x0, [x1]
  84:	cmp	x0, x20
  88:	b.eq	124 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xe4>  // b.none
  8c:	ldr	w0, [x19, #8]
  90:	cmn	w0, #0x1
  94:	b.eq	13c <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xfc>  // b.none
  98:	ldr	x1, [x19, #8208]
  9c:	cmp	x1, x20
  a0:	b.eq	118 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xd8>  // b.none
  a4:	str	x21, [sp, #16]
  a8:	bl	0 <_ZN11__sanitizer9CloseFileEi>
  ac:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
  b0:	cmp	x0, #0x0
  b4:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  b8:	mov	x4, x0
  bc:	mov	x0, #0x100c                	// #4108
  c0:	add	x21, x19, x0
  c4:	ldr	x0, [x1]
  c8:	cset	w1, ne  // ne = any
  cc:	add	x3, x19, #0xc
  d0:	ldrb	w0, [x0, #48]
  d4:	tst	w1, w0
  d8:	b.ne	144 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x104>  // b.any
  dc:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
  e0:	mov	x4, x20
  e4:	add	x2, x2, #0x0
  e8:	mov	x0, x21
  ec:	mov	x1, #0x1000                	// #4096
  f0:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  f4:	mov	x0, x21
  f8:	mov	x2, #0x0                   	// #0
  fc:	mov	w1, #0x1                   	// #1
 100:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 104:	str	w0, [x19, #8]
 108:	cmn	w0, #0x1
 10c:	b.eq	180 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x140>  // b.none
 110:	ldr	x21, [sp, #16]
 114:	str	x20, [x19, #8208]
 118:	ldr	x30, [sp, #24]
 11c:	ldp	x19, x20, [sp], #32
 120:	ret
 124:	adrp	x0, 0 <_ZN11__sanitizer24stoptheworld_tracer_ppidE>
 128:	ldr	x0, [x0]
 12c:	ldr	x20, [x0]
 130:	ldr	w0, [x19, #8]
 134:	cmn	w0, #0x1
 138:	b.ne	98 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x58>  // b.any
 13c:	str	x21, [sp, #16]
 140:	b	ac <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0x6c>
 144:	mov	x5, x20
 148:	mov	x0, x21
 14c:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 150:	mov	x1, #0x1000                	// #4096
 154:	add	x2, x2, #0x0
 158:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 15c:	b	f4 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv+0xb4>
 160:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 164:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 168:	add	x2, x2, #0x0
 16c:	add	x0, x0, #0x0
 170:	mov	x4, #0x1                   	// #1
 174:	mov	w1, #0x2b                  	// #43
 178:	str	x21, [sp, #16]
 17c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 180:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 184:	add	x19, x19, #0x0
 188:	mov	x0, x19
 18c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 190:	mov	x1, x19
 194:	mov	x2, x0
 198:	mov	x4, #0x0                   	// #0
 19c:	mov	x3, #0x0                   	// #0
 1a0:	mov	w0, #0x2                   	// #2
 1a4:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 1a8:	mov	x0, x21
 1ac:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 1b0:	mov	x1, x21
 1b4:	mov	x2, x0
 1b8:	mov	x4, #0x0                   	// #0
 1bc:	mov	x3, #0x0                   	// #0
 1c0:	mov	w0, #0x2                   	// #2
 1c4:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
 1c8:	bl	0 <_ZN11__sanitizer3DieEv>
 1cc:	nop

00000000000001d0 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc>:
 1d0:	cbz	x1, 2c4 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xf4>
 1d4:	sub	sp, sp, #0x30
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	mov	x19, x0
 1e0:	mov	x20, x1
 1e4:	mov	x0, x1
 1e8:	stp	x21, x30, [sp, #32]
 1ec:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 1f0:	cmp	x0, #0xf9c
 1f4:	b.hi	2e4 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x114>  // b.pmore
 1f8:	ldr	x21, [x19]
 1fc:	mov	w1, #0x1                   	// #1
 200:	ldxrb	w0, [x21]
 204:	stxrb	w2, w1, [x21]
 208:	cbnz	w2, 200 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x30>
 20c:	dmb	ish
 210:	tst	w0, #0xff
 214:	b.eq	220 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x50>  // b.none
 218:	mov	x0, x21
 21c:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 220:	ldr	w0, [x19, #8]
 224:	sub	w1, w0, #0x1
 228:	cmp	w1, #0x1
 22c:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
 230:	b.ne	270 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xa0>  // b.any
 234:	mov	w0, #0xffffffff            	// #-1
 238:	str	w0, [x19, #8]
 23c:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 240:	mov	x0, x20
 244:	add	x1, x1, #0x0
 248:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 24c:	cbnz	w0, 290 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xc0>
 250:	mov	w0, #0x1                   	// #1
 254:	str	w0, [x19, #8]
 258:	dmb	ish
 25c:	strb	wzr, [x21]
 260:	ldp	x19, x20, [sp, #16]
 264:	ldp	x21, x30, [sp, #32]
 268:	add	sp, sp, #0x30
 26c:	ret
 270:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 274:	mov	w0, #0xffffffff            	// #-1
 278:	str	w0, [x19, #8]
 27c:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 280:	mov	x0, x20
 284:	add	x1, x1, #0x0
 288:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 28c:	cbz	w0, 250 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x80>
 290:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 294:	mov	x0, x20
 298:	add	x1, x1, #0x0
 29c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2a0:	cbnz	w0, 2c8 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0xf8>
 2a4:	mov	w0, #0x2                   	// #2
 2a8:	str	w0, [x19, #8]
 2ac:	dmb	ish
 2b0:	strb	wzr, [x21]
 2b4:	ldp	x19, x20, [sp, #16]
 2b8:	ldp	x21, x30, [sp, #32]
 2bc:	add	sp, sp, #0x30
 2c0:	ret
 2c4:	ret
 2c8:	mov	x3, x20
 2cc:	add	x0, x19, #0xc
 2d0:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 2d4:	mov	x1, #0x1000                	// #4096
 2d8:	add	x2, x2, #0x0
 2dc:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 2e0:	b	258 <_ZN11__sanitizer10ReportFile13SetReportPathEPKc+0x88>
 2e4:	ldrb	w7, [x20, #6]
 2e8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 2ec:	ldrb	w6, [x20, #5]
 2f0:	add	x0, x0, #0x0
 2f4:	ldrb	w5, [x20, #4]
 2f8:	ldrb	w4, [x20, #3]
 2fc:	ldrb	w3, [x20, #2]
 300:	ldrb	w2, [x20, #1]
 304:	ldrb	w1, [x20]
 308:	ldrb	w8, [x20, #7]
 30c:	str	w8, [sp]
 310:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 314:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000318 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>:
 318:	stp	x19, x20, [sp, #-128]!
 31c:	mov	w19, #0x1                   	// #1
 320:	str	x30, [sp, #80]
 324:	str	xzr, [x1]
 328:	str	xzr, [x2]
 32c:	str	xzr, [x3]
 330:	cbz	x4, 43c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x124>
 334:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
 338:	stp	x21, x22, [sp, #16]
 33c:	mov	x21, x1
 340:	ldr	x19, [x19]
 344:	stp	x23, x24, [sp, #32]
 348:	mov	x22, x4
 34c:	stp	x25, x26, [sp, #48]
 350:	mov	x23, x5
 354:	mov	x26, x0
 358:	ldr	x20, [x19]
 35c:	stp	x27, x28, [sp, #64]
 360:	mov	x25, x2
 364:	mov	x28, x3
 368:	mov	x0, #0x0                   	// #0
 36c:	cbz	x20, 478 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x160>
 370:	cmp	x20, x22
 374:	add	x24, sp, #0x78
 378:	csel	x20, x20, x22, ls  // ls = plast
 37c:	adrp	x27, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 380:	add	x1, x27, #0x0
 384:	str	x1, [sp, #104]
 388:	ldr	x1, [x25]
 38c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 390:	ldr	x1, [sp, #104]
 394:	mov	w2, #0x0                   	// #0
 398:	mov	x0, x20
 39c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3a0:	str	x0, [x21]
 3a4:	str	x20, [x25]
 3a8:	mov	x2, x23
 3ac:	mov	x0, x26
 3b0:	mov	w1, #0x0                   	// #0
 3b4:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 3b8:	mov	w27, w0
 3bc:	cmn	w0, #0x1
 3c0:	b.eq	48c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x174>  // b.none
 3c4:	str	xzr, [x28]
 3c8:	mov	x1, #0x0                   	// #0
 3cc:	cbnz	x20, 3dc <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0xc4>
 3d0:	b	44c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x134>
 3d4:	cmp	x1, x20
 3d8:	b.cs	44c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x134>  // b.hs, b.nlast
 3dc:	ldr	x5, [x21]
 3e0:	sub	x2, x20, x1
 3e4:	mov	x4, x23
 3e8:	mov	x3, x24
 3ec:	mov	w0, w27
 3f0:	add	x1, x5, x1
 3f4:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
 3f8:	ands	w19, w0, #0xff
 3fc:	b.eq	468 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x150>  // b.none
 400:	ldr	x1, [x28]
 404:	ldr	x2, [sp, #120]
 408:	add	x1, x2, x1
 40c:	str	x1, [x28]
 410:	cmp	x1, x22
 414:	cset	w19, eq  // eq = none
 418:	cmp	x2, #0x0
 41c:	csinc	w19, w19, wzr, ne  // ne = any
 420:	cbz	w19, 3d4 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0xbc>
 424:	mov	w0, w27
 428:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 42c:	ldp	x21, x22, [sp, #16]
 430:	ldp	x23, x24, [sp, #32]
 434:	ldp	x25, x26, [sp, #48]
 438:	ldp	x27, x28, [sp, #64]
 43c:	mov	w0, w19
 440:	ldr	x30, [sp, #80]
 444:	ldp	x19, x20, [sp], #128
 448:	ret
 44c:	mov	w0, w27
 450:	lsl	x20, x20, #1
 454:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 458:	cmp	x20, x22
 45c:	csel	x20, x20, x22, ls  // ls = plast
 460:	ldr	x0, [x21]
 464:	b	388 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x70>
 468:	ldr	x0, [x21]
 46c:	ldr	x1, [x25]
 470:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 474:	b	424 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x10c>
 478:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 47c:	mov	x20, x0
 480:	ldr	x0, [x21]
 484:	str	x20, [x19]
 488:	b	370 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x58>
 48c:	ldr	x0, [x21]
 490:	mov	w19, #0x0                   	// #0
 494:	ldr	x1, [x25]
 498:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 49c:	ldp	x21, x22, [sp, #16]
 4a0:	ldp	x23, x24, [sp, #32]
 4a4:	ldp	x25, x26, [sp, #48]
 4a8:	ldp	x27, x28, [sp, #64]
 4ac:	b	43c <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi+0x124>

00000000000004b0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi>:
 4b0:	stp	x19, x20, [sp, #-144]!
 4b4:	stp	x27, x28, [sp, #64]
 4b8:	str	x30, [sp, #80]
 4bc:	str	xzr, [x1, #16]
 4c0:	cbz	x2, 63c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x18c>
 4c4:	stp	x25, x26, [sp, #48]
 4c8:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
 4cc:	mov	x20, x1
 4d0:	stp	x23, x24, [sp, #32]
 4d4:	mov	x19, x0
 4d8:	ldr	x24, [x25]
 4dc:	stp	x21, x22, [sp, #16]
 4e0:	mov	x21, x2
 4e4:	mov	x22, x3
 4e8:	ldr	x23, [x24]
 4ec:	cbz	x23, 5f0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x140>
 4f0:	mov	x0, x19
 4f4:	mov	x2, x22
 4f8:	mov	w1, #0x0                   	// #0
 4fc:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 500:	mov	w27, w0
 504:	cmn	w0, #0x1
 508:	b.eq	618 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x168>  // b.none
 50c:	ldr	x0, [x25]
 510:	str	x0, [sp, #104]
 514:	ldr	x3, [x20, #16]
 518:	adrp	x26, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 51c:	mov	x19, #0x0                   	// #0
 520:	add	x24, sp, #0x88
 524:	add	x26, x26, #0x0
 528:	cmp	x3, x19
 52c:	b.ls	580 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0xd0>  // b.plast
 530:	cmp	x21, x3
 534:	b.cc	5d4 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x124>  // b.lo, b.ul, b.last
 538:	ldr	x1, [x20]
 53c:	sub	x2, x3, x19
 540:	mov	x4, x22
 544:	mov	x3, x24
 548:	mov	w0, w27
 54c:	add	x1, x1, x19
 550:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
 554:	ands	w28, w0, #0xff
 558:	b.eq	730 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x280>  // b.none
 55c:	ldr	x1, [sp, #136]
 560:	add	x3, x1, x19
 564:	cbz	x1, 6d4 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x224>
 568:	cmp	x21, x3
 56c:	b.ls	6d8 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x228>  // b.plast
 570:	mov	x19, x3
 574:	ldr	x3, [x20, #16]
 578:	cmp	x3, x19
 57c:	b.hi	530 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x80>  // b.pmore
 580:	lsl	x28, x19, #1
 584:	cmp	x28, x23
 588:	csel	x28, x28, x23, cs  // cs = hs, nlast
 58c:	cmp	x28, x21
 590:	csel	x28, x28, x21, ls  // ls = plast
 594:	cmp	x28, x3
 598:	b.ls	5bc <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x10c>  // b.plast
 59c:	ldr	x0, [x20, #8]
 5a0:	cmp	x28, x0
 5a4:	b.hi	674 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x1c4>  // b.pmore
 5a8:	ldr	x4, [x20]
 5ac:	add	x0, x4, x3
 5b0:	sub	x2, x28, x3
 5b4:	mov	w1, #0x0                   	// #0
 5b8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 5bc:	str	x28, [x20, #16]
 5c0:	cmp	x28, x19
 5c4:	b.ls	654 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x1a4>  // b.plast
 5c8:	mov	x3, x28
 5cc:	cmp	x21, x3
 5d0:	b.cs	538 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x88>  // b.hs, b.nlast
 5d4:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 5d8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 5dc:	mov	x4, x21
 5e0:	add	x2, x2, #0x0
 5e4:	add	x0, x0, #0x0
 5e8:	mov	w1, #0x9a                  	// #154
 5ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5f0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 5f4:	mov	x23, x0
 5f8:	mov	x2, x22
 5fc:	mov	w1, #0x0                   	// #0
 600:	str	x0, [x24]
 604:	mov	x0, x19
 608:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 60c:	mov	w27, w0
 610:	cmn	w0, #0x1
 614:	b.ne	50c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x5c>  // b.any
 618:	mov	w28, #0x0                   	// #0
 61c:	mov	w0, w28
 620:	ldp	x21, x22, [sp, #16]
 624:	ldp	x23, x24, [sp, #32]
 628:	ldp	x25, x26, [sp, #48]
 62c:	ldp	x27, x28, [sp, #64]
 630:	ldr	x30, [sp, #80]
 634:	ldp	x19, x20, [sp], #144
 638:	ret
 63c:	mov	w28, #0x1                   	// #1
 640:	mov	w0, w28
 644:	ldp	x27, x28, [sp, #64]
 648:	ldr	x30, [sp, #80]
 64c:	ldp	x19, x20, [sp], #144
 650:	ret
 654:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 658:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 65c:	mov	x4, x28
 660:	mov	x3, x19
 664:	add	x2, x2, #0x0
 668:	add	x0, x0, #0x0
 66c:	mov	w1, #0x99                  	// #153
 670:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 674:	ldr	x0, [sp, #104]
 678:	ldr	x0, [x0]
 67c:	cbz	x0, 748 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x298>
 680:	sub	x1, x0, #0x1
 684:	tst	x1, x0
 688:	b.ne	7e0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x330>  // b.any
 68c:	add	x1, x28, x1
 690:	neg	x0, x0
 694:	and	x6, x1, x0
 698:	mov	w2, #0x0                   	// #0
 69c:	mov	x0, x6
 6a0:	mov	x1, x26
 6a4:	str	x6, [sp, #120]
 6a8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 6ac:	str	x0, [sp, #112]
 6b0:	ldr	x1, [x20]
 6b4:	ldr	x2, [x20, #16]
 6b8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 6bc:	ldp	x0, x1, [x20]
 6c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 6c4:	ldp	x4, x6, [sp, #112]
 6c8:	stp	x4, x6, [x20]
 6cc:	ldr	x3, [x20, #16]
 6d0:	b	5ac <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0xfc>
 6d4:	mov	x3, x19
 6d8:	mov	w0, w27
 6dc:	str	x3, [sp, #104]
 6e0:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 6e4:	ldr	x2, [x20, #16]
 6e8:	ldr	x3, [sp, #104]
 6ec:	cmp	x3, x2
 6f0:	b.ls	71c <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x26c>  // b.plast
 6f4:	ldr	x0, [x20, #8]
 6f8:	cmp	x3, x0
 6fc:	b.hi	758 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x2a8>  // b.pmore
 700:	ldr	x19, [x20]
 704:	add	x0, x19, x2
 708:	mov	w1, #0x0                   	// #0
 70c:	sub	x2, x3, x2
 710:	str	x3, [sp, #104]
 714:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 718:	ldr	x3, [sp, #104]
 71c:	ldp	x21, x22, [sp, #16]
 720:	ldp	x23, x24, [sp, #32]
 724:	ldp	x25, x26, [sp, #48]
 728:	str	x3, [x20, #16]
 72c:	b	640 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x190>
 730:	mov	w0, w27
 734:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 738:	ldp	x21, x22, [sp, #16]
 73c:	ldp	x23, x24, [sp, #32]
 740:	ldp	x25, x26, [sp, #48]
 744:	b	640 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x190>
 748:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 74c:	ldr	x1, [sp, #104]
 750:	str	x0, [x1]
 754:	b	680 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x1d0>
 758:	cbz	x3, 7c0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x310>
 75c:	ldr	x25, [x25]
 760:	ldr	x0, [x25]
 764:	cbz	x0, 808 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x358>
 768:	sub	x1, x0, #0x1
 76c:	tst	x0, x1
 770:	b.ne	7e0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x330>  // b.any
 774:	add	x1, x3, x1
 778:	neg	x0, x0
 77c:	and	x21, x1, x0
 780:	mov	w2, #0x0                   	// #0
 784:	mov	x0, x21
 788:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 78c:	add	x1, x1, #0x0
 790:	str	x3, [sp, #104]
 794:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 798:	mov	x19, x0
 79c:	ldr	x1, [x20]
 7a0:	ldr	x2, [x20, #16]
 7a4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 7a8:	ldp	x0, x1, [x20]
 7ac:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 7b0:	stp	x19, x21, [x20]
 7b4:	ldr	x2, [x20, #16]
 7b8:	ldr	x3, [sp, #104]
 7bc:	b	704 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x254>
 7c0:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7c4:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7c8:	add	x2, x2, #0x0
 7cc:	add	x0, x0, #0x0
 7d0:	mov	x4, #0x0                   	// #0
 7d4:	mov	x3, #0x0                   	// #0
 7d8:	mov	w1, #0x20b                 	// #523
 7dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 7e0:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7e4:	add	x19, x19, #0x0
 7e8:	mov	x0, x19
 7ec:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 7f0:	mov	x1, x19
 7f4:	mov	x2, x0
 7f8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 7fc:	add	x0, x0, #0x0
 800:	bl	0 <_ZN11__sanitizer10ReportFile5WriteEPKcm>
 804:	bl	0 <_ZN11__sanitizer3DieEv>
 808:	str	x3, [sp, #104]
 80c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 810:	str	x0, [x25]
 814:	ldr	x3, [sp, #104]
 818:	b	768 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi+0x2b8>
 81c:	nop

0000000000000820 <_ZN11__sanitizer16FindPathToBinaryEPKc>:
 820:	stp	x19, x20, [sp, #-80]!
 824:	stp	x23, x24, [sp, #32]
 828:	mov	x23, x0
 82c:	str	x30, [sp, #72]
 830:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 834:	tst	w0, #0xff
 838:	b.eq	850 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x30>  // b.none
 83c:	mov	x0, x23
 840:	ldp	x23, x24, [sp, #32]
 844:	ldr	x30, [sp, #72]
 848:	ldp	x19, x20, [sp], #80
 84c:	b	0 <_ZN11__sanitizer15internal_strdupEPKc>
 850:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 854:	add	x0, x0, #0x0
 858:	stp	x21, x22, [sp, #16]
 85c:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
 860:	mov	x21, x0
 864:	cbz	x0, 9a0 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x180>
 868:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
 86c:	mov	x0, x23
 870:	stp	x25, x26, [sp, #48]
 874:	str	x27, [sp, #64]
 878:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 87c:	ldr	x20, [x19]
 880:	mov	x24, x0
 884:	ldr	x0, [x20]
 888:	cbz	x0, 9b8 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x198>
 88c:	sub	x1, x0, #0x1
 890:	tst	x1, x0
 894:	b.ne	a7c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x25c>  // b.any
 898:	add	x25, x0, #0xfff
 89c:	neg	x0, x0
 8a0:	and	x25, x25, x0
 8a4:	mov	w2, #0x0                   	// #0
 8a8:	mov	x0, x25
 8ac:	adrp	x20, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 8b0:	add	x1, x20, #0x0
 8b4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 8b8:	mov	x2, #0x0                   	// #0
 8bc:	mov	x1, #0x0                   	// #0
 8c0:	mov	x22, x0
 8c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 8c8:	mov	x1, #0x0                   	// #0
 8cc:	mov	x0, #0x0                   	// #0
 8d0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8d4:	cmp	x25, #0xfff
 8d8:	b.ls	a20 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x200>  // b.plast
 8dc:	mov	x0, x22
 8e0:	mov	w26, #0x2f                  	// #47
 8e4:	mov	x2, #0x1000                	// #4096
 8e8:	mov	w1, #0x0                   	// #0
 8ec:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 8f0:	b	900 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xe0>
 8f4:	ldrb	w0, [x19]
 8f8:	cbz	w0, 988 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x168>
 8fc:	add	x21, x19, #0x1
 900:	mov	x0, x21
 904:	mov	w1, #0x3a                  	// #58
 908:	bl	0 <_ZN11__sanitizer18internal_strchrnulEPKci>
 90c:	sub	x20, x0, x21
 910:	add	x27, x24, x20
 914:	mov	x19, x0
 918:	add	x0, x27, #0x2
 91c:	cmp	x0, #0x1, lsl #12
 920:	b.hi	8f4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xd4>  // b.pmore
 924:	mov	x1, x21
 928:	mov	x2, x20
 92c:	mov	x0, x22
 930:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 934:	cmp	x20, #0xfff
 938:	b.hi	9c4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x1a4>  // b.pmore
 93c:	strb	w26, [x22, x20]
 940:	add	x4, x20, #0x1
 944:	b.eq	9e4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x1c4>  // b.none
 948:	add	x0, x22, x4
 94c:	mov	x2, x24
 950:	mov	x1, x23
 954:	add	x27, x27, #0x1
 958:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 95c:	cmp	x27, #0xfff
 960:	b.hi	a00 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x1e0>  // b.pmore
 964:	strb	wzr, [x22, x27]
 968:	mov	x0, x22
 96c:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 970:	tst	w0, #0xff
 974:	b.eq	8f4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0xd4>  // b.none
 978:	mov	x0, x22
 97c:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 980:	mov	x21, x0
 984:	b	98c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x16c>
 988:	mov	x21, #0x0                   	// #0
 98c:	mov	x1, x25
 990:	mov	x0, x22
 994:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 998:	ldp	x25, x26, [sp, #48]
 99c:	ldr	x27, [sp, #64]
 9a0:	mov	x0, x21
 9a4:	ldp	x21, x22, [sp, #16]
 9a8:	ldp	x23, x24, [sp, #32]
 9ac:	ldr	x30, [sp, #72]
 9b0:	ldp	x19, x20, [sp], #80
 9b4:	ret
 9b8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 9bc:	str	x0, [x20]
 9c0:	b	88c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x6c>
 9c4:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 9c8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 9cc:	mov	x3, x20
 9d0:	add	x2, x2, #0x0
 9d4:	add	x0, x0, #0x0
 9d8:	mov	x4, #0x1000                	// #4096
 9dc:	mov	w1, #0x1c5                 	// #453
 9e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 9e4:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 9e8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 9ec:	add	x2, x2, #0x0
 9f0:	add	x0, x0, #0x0
 9f4:	mov	x3, x4
 9f8:	mov	w1, #0x1c5                 	// #453
 9fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 a00:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 a04:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 a08:	add	x2, x2, #0x0
 a0c:	add	x0, x0, #0x0
 a10:	mov	x4, #0x1000                	// #4096
 a14:	mov	x3, #0xffffffffffffffff    	// #-1
 a18:	mov	w1, #0x1c5                 	// #453
 a1c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 a20:	ldr	x19, [x19]
 a24:	ldr	x0, [x19]
 a28:	cbz	x0, aa4 <_ZN11__sanitizer16FindPathToBinaryEPKc+0x284>
 a2c:	sub	x1, x0, #0x1
 a30:	tst	x1, x0
 a34:	b.ne	a7c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x25c>  // b.any
 a38:	add	x19, x0, #0xfff
 a3c:	neg	x0, x0
 a40:	and	x19, x19, x0
 a44:	add	x1, x20, #0x0
 a48:	mov	x0, x19
 a4c:	mov	w2, #0x0                   	// #0
 a50:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 a54:	mov	x20, x0
 a58:	mov	x2, #0x0                   	// #0
 a5c:	mov	x1, x22
 a60:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 a64:	mov	x1, x25
 a68:	mov	x0, x22
 a6c:	mov	x25, x19
 a70:	mov	x22, x20
 a74:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 a78:	b	8dc <_ZN11__sanitizer16FindPathToBinaryEPKc+0xbc>
 a7c:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 a80:	add	x19, x19, #0x0
 a84:	mov	x0, x19
 a88:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 a8c:	mov	x1, x19
 a90:	mov	x2, x0
 a94:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 a98:	add	x0, x0, #0x0
 a9c:	bl	0 <_ZN11__sanitizer10ReportFile5WriteEPKcm>
 aa0:	bl	0 <_ZN11__sanitizer3DieEv>
 aa4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 aa8:	str	x0, [x19]
 aac:	b	a2c <_ZN11__sanitizer16FindPathToBinaryEPKc+0x20c>

0000000000000ab0 <__sanitizer_set_report_path>:
 ab0:	cbz	x0, bac <__sanitizer_set_report_path+0xfc>
 ab4:	sub	sp, sp, #0x30
 ab8:	stp	x19, x20, [sp, #16]
 abc:	mov	x19, x0
 ac0:	stp	x21, x30, [sp, #32]
 ac4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 ac8:	cmp	x0, #0xf9c
 acc:	b.hi	bd0 <__sanitizer_set_report_path+0x120>  // b.pmore
 ad0:	adrp	x20, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 ad4:	mov	w1, #0x1                   	// #1
 ad8:	ldr	x21, [x20]
 adc:	ldxrb	w0, [x21]
 ae0:	stxrb	w2, w1, [x21]
 ae4:	cbnz	w2, adc <__sanitizer_set_report_path+0x2c>
 ae8:	dmb	ish
 aec:	tst	w0, #0xff
 af0:	b.eq	afc <__sanitizer_set_report_path+0x4c>  // b.none
 af4:	mov	x0, x21
 af8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 afc:	add	x0, x20, #0x0
 b00:	ldr	w0, [x0, #8]
 b04:	sub	w1, w0, #0x1
 b08:	cmp	w1, #0x1
 b0c:	ccmn	w0, #0x1, #0x4, hi  // hi = pmore
 b10:	b.ne	b54 <__sanitizer_set_report_path+0xa4>  // b.any
 b14:	add	x20, x20, #0x0
 b18:	mov	w2, #0xffffffff            	// #-1
 b1c:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 b20:	mov	x0, x19
 b24:	add	x1, x1, #0x0
 b28:	str	w2, [x20, #8]
 b2c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 b30:	cbnz	w0, b78 <__sanitizer_set_report_path+0xc8>
 b34:	mov	w0, #0x1                   	// #1
 b38:	str	w0, [x20, #8]
 b3c:	dmb	ish
 b40:	strb	wzr, [x21]
 b44:	ldp	x19, x20, [sp, #16]
 b48:	ldp	x21, x30, [sp, #32]
 b4c:	add	sp, sp, #0x30
 b50:	ret
 b54:	bl	0 <_ZN11__sanitizer9CloseFileEi>
 b58:	add	x20, x20, #0x0
 b5c:	mov	w2, #0xffffffff            	// #-1
 b60:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 b64:	mov	x0, x19
 b68:	add	x1, x1, #0x0
 b6c:	str	w2, [x20, #8]
 b70:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 b74:	cbz	w0, b34 <__sanitizer_set_report_path+0x84>
 b78:	adrp	x1, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 b7c:	mov	x0, x19
 b80:	add	x1, x1, #0x0
 b84:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 b88:	cbnz	w0, bb0 <__sanitizer_set_report_path+0x100>
 b8c:	mov	w0, #0x2                   	// #2
 b90:	str	w0, [x20, #8]
 b94:	dmb	ish
 b98:	strb	wzr, [x21]
 b9c:	ldp	x19, x20, [sp, #16]
 ba0:	ldp	x21, x30, [sp, #32]
 ba4:	add	sp, sp, #0x30
 ba8:	ret
 bac:	ret
 bb0:	mov	x3, x19
 bb4:	adrp	x2, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 bb8:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 bbc:	add	x2, x2, #0x0
 bc0:	mov	x1, #0x1000                	// #4096
 bc4:	add	x0, x0, #0x0
 bc8:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 bcc:	b	b3c <__sanitizer_set_report_path+0x8c>
 bd0:	ldrb	w7, [x19, #6]
 bd4:	adrp	x0, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 bd8:	ldrb	w6, [x19, #5]
 bdc:	add	x0, x0, #0x0
 be0:	ldrb	w5, [x19, #4]
 be4:	ldrb	w4, [x19, #3]
 be8:	ldrb	w3, [x19, #2]
 bec:	ldrb	w2, [x19, #1]
 bf0:	ldrb	w1, [x19]
 bf4:	ldrb	w8, [x19, #7]
 bf8:	str	w8, [sp]
 bfc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 c00:	bl	0 <_ZN11__sanitizer3DieEv>
 c04:	nop

0000000000000c08 <__sanitizer_set_report_fd>:
 c08:	stp	x19, x30, [sp, #-16]!
 c0c:	adrp	x19, 0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
 c10:	add	x19, x19, #0x0
 c14:	str	w0, [x19, #8]
 c18:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 c1c:	str	x0, [x19, #8208]
 c20:	ldp	x19, x30, [sp], #16
 c24:	ret

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

sanitizer_flags.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>:
       0:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
       4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
       8:	movi	v0.4s, #0x0
       c:	mov	x17, #0x10000               	// #65536
      10:	ldr	q2, [x2]
      14:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      18:	mov	x16, #0x10100000000         	// #1103806595072
      1c:	mov	w11, #0x100                 	// #256
      20:	ldr	q1, [x2]
      24:	add	x7, x1, #0x0
      28:	mov	w8, #0x1                   	// #1
      2c:	mov	w1, #0x1                   	// #1
      30:	movk	x17, #0x1, lsl #32
      34:	movk	x16, #0x1, lsl #48
      38:	mov	x15, #0x100000000           	// #4294967296
      3c:	mov	w14, #0x101                 	// #257
      40:	mov	x13, #0x10000               	// #65536
      44:	mov	w12, #0x1388                	// #5000
      48:	movk	w11, #0x101, lsl #16
      4c:	adrp	x6, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      50:	adrp	x5, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      54:	add	x6, x6, #0x0
      58:	add	x5, x5, #0x0
      5c:	adrp	x4, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      60:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      64:	add	x4, x4, #0x0
      68:	add	x3, x3, #0x0
      6c:	mov	x10, #0x1                   	// #1
      70:	strb	w1, [x0]
      74:	movk	x10, #0x100, lsl #32
      78:	str	xzr, [x0, #8]
      7c:	mov	w9, #0x100                 	// #256
      80:	strb	wzr, [x0, #16]
      84:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
      88:	stp	x7, x17, [x0, #24]
      8c:	add	x2, x2, #0x0
      90:	str	x6, [x0, #40]
      94:	strh	wzr, [x0, #48]
      98:	stur	x16, [x0, #52]
      9c:	strb	w1, [x0, #60]
      a0:	str	wzr, [x0, #64]
      a4:	strb	w1, [x0, #68]
      a8:	stur	q2, [x0, #72]
      ac:	str	x15, [x0, #88]
      b0:	strh	w14, [x0, #96]
      b4:	strb	w1, [x0, #98]
      b8:	stp	x13, x5, [x0, #104]
      bc:	strh	wzr, [x0, #120]
      c0:	strb	wzr, [x0, #122]
      c4:	stp	q0, q0, [x0, #128]
      c8:	strb	wzr, [x0, #160]
      cc:	str	w12, [x0, #164]
      d0:	strh	w8, [x0, #168]
      d4:	str	x4, [x0, #176]
      d8:	str	w11, [x0, #184]
      dc:	strh	w8, [x0, #188]
      e0:	str	wzr, [x0, #192]
      e4:	str	x3, [x0, #200]
      e8:	str	q1, [x0, #208]
      ec:	stp	x10, x2, [x0, #224]
      f0:	str	w9, [x0, #240]
      f4:	ret

00000000000000f8 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>:
      f8:	mov	x2, #0xf8                  	// #248
      fc:	b	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>

0000000000000100 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm>:
     100:	stp	x19, x20, [sp, #-80]!
     104:	sub	x2, x2, #0x1
     108:	mov	x19, x1
     10c:	stp	x21, x22, [sp, #16]
     110:	mov	x21, x0
     114:	add	x20, x1, x2
     118:	str	x30, [sp, #32]
     11c:	ldrb	w0, [x0]
     120:	cbz	w0, 1f8 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xf8>
     124:	cmp	x1, x20
     128:	b.cs	1c4 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xc4>  // b.hs, b.nlast
     12c:	mov	w22, #0x6667                	// #26215
     130:	movk	w22, #0x6666, lsl #16
     134:	nop
     138:	cmp	w0, #0x25
     13c:	b.ne	1e8 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xe8>  // b.any
     140:	ldrb	w1, [x21, #1]
     144:	cmp	w1, #0x62
     148:	b.eq	214 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x114>  // b.none
     14c:	cmp	w1, #0x70
     150:	b.ne	1e8 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xe8>  // b.any
     154:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     158:	add	x3, sp, #0x50
     15c:	nop
     160:	smull	x1, w0, w22
     164:	asr	x1, x1, #34
     168:	sub	w1, w1, w0, asr #31
     16c:	add	w2, w1, w1, lsl #2
     170:	sub	w2, w0, w2, lsl #1
     174:	mov	w0, w1
     178:	add	w1, w2, #0x30
     17c:	strb	w1, [x3, #-1]!
     180:	cbnz	w0, 160 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x60>
     184:	add	x0, sp, #0x50
     188:	cmp	x0, x3
     18c:	ccmp	x19, x20, #0x2, hi  // hi = pmore
     190:	b.cs	1b0 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xb0>  // b.hs, b.nlast
     194:	nop
     198:	ldrb	w0, [x3], #1
     19c:	strb	w0, [x19], #1
     1a0:	add	x0, sp, #0x50
     1a4:	cmp	x19, x20
     1a8:	ccmp	x0, x3, #0x0, cc  // cc = lo, ul, last
     1ac:	b.hi	198 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x98>  // b.pmore
     1b0:	ldrb	w0, [x21, #2]
     1b4:	add	x21, x21, #0x2
     1b8:	cbz	w0, 1f8 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xf8>
     1bc:	cmp	x19, x20
     1c0:	b.cc	138 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x38>  // b.lo, b.ul, b.last
     1c4:	cmp	x19, x20
     1c8:	cset	x3, cc  // cc = lo, ul, last
     1cc:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     1d0:	adrp	x0, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     1d4:	add	x2, x2, #0x0
     1d8:	add	x0, x0, #0x0
     1dc:	mov	x4, #0x0                   	// #0
     1e0:	mov	w1, #0x47                  	// #71
     1e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     1e8:	add	x21, x21, #0x1
     1ec:	strb	w0, [x19], #1
     1f0:	ldrb	w0, [x21]
     1f4:	cbnz	w0, 1bc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xbc>
     1f8:	cmp	x19, x20
     1fc:	b.cs	268 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x168>  // b.hs, b.nlast
     200:	strb	wzr, [x19]
     204:	ldp	x21, x22, [sp, #16]
     208:	ldr	x30, [sp, #32]
     20c:	ldp	x19, x20, [sp], #80
     210:	ret
     214:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
     218:	cbz	x0, 248 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x148>
     21c:	ldrb	w1, [x0]
     220:	cmp	w1, #0x0
     224:	ccmp	x19, x20, #0x2, ne  // ne = any
     228:	b.cs	1b0 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xb0>  // b.hs, b.nlast
     22c:	nop
     230:	strb	w1, [x19], #1
     234:	ldrb	w1, [x0, #1]!
     238:	cmp	w1, #0x0
     23c:	ccmp	x19, x20, #0x2, ne  // ne = any
     240:	b.cc	230 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0x130>  // b.lo, b.ul, b.last
     244:	b	1b0 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xb0>
     248:	adrp	x2, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     24c:	adrp	x0, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     250:	add	x2, x2, #0x0
     254:	add	x0, x0, #0x0
     258:	mov	x4, #0x0                   	// #0
     25c:	mov	x3, #0x0                   	// #0
     260:	mov	w1, #0x2f                  	// #47
     264:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     268:	mov	x3, #0x0                   	// #0
     26c:	b	1cc <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm+0xcc>

0000000000000270 <_ZN11__sanitizer20RegisterIncludeFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>:
     270:	stp	x19, x20, [sp, #-48]!
     274:	mov	x1, #0x20                  	// #32
     278:	mov	x19, x0
     27c:	stp	x21, x22, [sp, #16]
     280:	adrp	x22, 0 <_ZN11__sanitizer10FlagParser5AllocE>
     284:	adrp	x21, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     288:	ldr	x22, [x22]
     28c:	str	x30, [sp, #32]
     290:	add	x21, x21, #0x0
     294:	adrp	x20, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     298:	mov	x0, x22
     29c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     2a0:	mov	x2, x0
     2a4:	add	x20, x20, #0x0
     2a8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     2ac:	add	x3, x3, #0x0
     2b0:	mov	x0, x19
     2b4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     2b8:	stp	x21, x19, [x2]
     2bc:	add	x1, x1, #0x0
     2c0:	strb	wzr, [x2, #16]
     2c4:	str	x20, [x2, #24]
     2c8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     2cc:	mov	x0, x22
     2d0:	mov	x1, #0x20                  	// #32
     2d4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     2d8:	mov	x2, x0
     2dc:	mov	w4, #0x1                   	// #1
     2e0:	mov	x0, x19
     2e4:	ldr	x30, [sp, #32]
     2e8:	stp	x21, x19, [x2]
     2ec:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     2f0:	strb	w4, [x2, #16]
     2f4:	add	x3, x3, #0x0
     2f8:	str	x20, [x2, #24]
     2fc:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     300:	ldp	x21, x22, [sp, #16]
     304:	add	x1, x1, #0x0
     308:	ldp	x19, x20, [sp], #48
     30c:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>

0000000000000310 <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>:
     310:	stp	x19, x20, [sp, #-64]!
     314:	adrp	x20, 0 <_ZN11__sanitizer10FlagParser5AllocE>
     318:	mov	x19, x0
     31c:	ldr	x20, [x20]
     320:	stp	x21, x22, [sp, #16]
     324:	mov	x21, x1
     328:	mov	x0, x20
     32c:	mov	x1, #0x10                  	// #16
     330:	stp	x23, x24, [sp, #32]
     334:	adrp	x22, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     338:	add	x22, x22, #0x0
     33c:	stp	x25, x30, [sp, #48]
     340:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     344:	mov	x2, x0
     348:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     34c:	add	x3, x3, #0x0
     350:	mov	x0, x19
     354:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     358:	stp	x22, x21, [x2]
     35c:	add	x1, x1, #0x0
     360:	adrp	x23, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     364:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     368:	add	x23, x23, #0x0
     36c:	mov	x0, x20
     370:	mov	x1, #0x10                  	// #16
     374:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     378:	mov	x2, x0
     37c:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     380:	add	x0, x21, #0x8
     384:	add	x3, x3, #0x0
     388:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     38c:	stp	x23, x0, [x2]
     390:	add	x1, x1, #0x0
     394:	mov	x0, x19
     398:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     39c:	adrp	x25, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3a0:	mov	x0, x20
     3a4:	mov	x1, #0x10                  	// #16
     3a8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     3ac:	mov	x2, x0
     3b0:	add	x4, x21, #0x10
     3b4:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3b8:	add	x3, x3, #0x0
     3bc:	mov	x0, x19
     3c0:	stp	x22, x4, [x2]
     3c4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3c8:	add	x1, x1, #0x0
     3cc:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     3d0:	add	x25, x25, #0x0
     3d4:	mov	x0, x20
     3d8:	mov	x1, #0x10                  	// #16
     3dc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     3e0:	mov	x2, x0
     3e4:	add	x4, x21, #0x18
     3e8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3ec:	add	x3, x3, #0x0
     3f0:	mov	x0, x19
     3f4:	stp	x23, x4, [x2]
     3f8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     3fc:	add	x1, x1, #0x0
     400:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     404:	adrp	x24, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     408:	mov	x0, x20
     40c:	mov	x1, #0x10                  	// #16
     410:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     414:	mov	x2, x0
     418:	add	x4, x21, #0x20
     41c:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     420:	add	x3, x3, #0x0
     424:	mov	x0, x19
     428:	stp	x22, x4, [x2]
     42c:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     430:	add	x1, x1, #0x0
     434:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     438:	add	x24, x24, #0x0
     43c:	mov	x0, x20
     440:	mov	x1, #0x10                  	// #16
     444:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     448:	mov	x2, x0
     44c:	add	x4, x21, #0x21
     450:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     454:	add	x3, x3, #0x0
     458:	mov	x0, x19
     45c:	stp	x22, x4, [x2]
     460:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     464:	add	x1, x1, #0x0
     468:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     46c:	mov	x0, x20
     470:	mov	x1, #0x10                  	// #16
     474:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     478:	mov	x2, x0
     47c:	add	x4, x21, #0x22
     480:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     484:	add	x3, x3, #0x0
     488:	mov	x0, x19
     48c:	stp	x22, x4, [x2]
     490:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     494:	add	x1, x1, #0x0
     498:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     49c:	mov	x0, x20
     4a0:	mov	x1, #0x10                  	// #16
     4a4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     4a8:	mov	x2, x0
     4ac:	add	x4, x21, #0x23
     4b0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4b4:	add	x3, x3, #0x0
     4b8:	mov	x0, x19
     4bc:	stp	x22, x4, [x2]
     4c0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4c4:	add	x1, x1, #0x0
     4c8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     4cc:	mov	x0, x20
     4d0:	mov	x1, #0x10                  	// #16
     4d4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     4d8:	mov	x2, x0
     4dc:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4e0:	add	x0, x21, #0x24
     4e4:	add	x3, x3, #0x0
     4e8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     4ec:	stp	x25, x0, [x2]
     4f0:	add	x1, x1, #0x0
     4f4:	mov	x0, x19
     4f8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     4fc:	mov	x0, x20
     500:	mov	x1, #0x10                  	// #16
     504:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     508:	mov	x2, x0
     50c:	add	x4, x21, #0x28
     510:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     514:	add	x3, x3, #0x0
     518:	mov	x0, x19
     51c:	stp	x23, x4, [x2]
     520:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     524:	add	x1, x1, #0x0
     528:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     52c:	mov	x0, x20
     530:	mov	x1, #0x10                  	// #16
     534:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     538:	mov	x2, x0
     53c:	add	x4, x21, #0x30
     540:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     544:	add	x3, x3, #0x0
     548:	mov	x0, x19
     54c:	stp	x22, x4, [x2]
     550:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     554:	add	x1, x1, #0x0
     558:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     55c:	mov	x0, x20
     560:	mov	x1, #0x10                  	// #16
     564:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     568:	mov	x2, x0
     56c:	add	x4, x21, #0x31
     570:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     574:	add	x3, x3, #0x0
     578:	mov	x0, x19
     57c:	stp	x22, x4, [x2]
     580:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     584:	add	x1, x1, #0x0
     588:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     58c:	mov	x0, x20
     590:	mov	x1, #0x10                  	// #16
     594:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     598:	mov	x2, x0
     59c:	add	x4, x21, #0x34
     5a0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5a4:	add	x3, x3, #0x0
     5a8:	mov	x0, x19
     5ac:	stp	x25, x4, [x2]
     5b0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5b4:	add	x1, x1, #0x0
     5b8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     5bc:	mov	x0, x20
     5c0:	mov	x1, #0x10                  	// #16
     5c4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     5c8:	mov	x2, x0
     5cc:	add	x4, x21, #0x38
     5d0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5d4:	add	x3, x3, #0x0
     5d8:	mov	x0, x19
     5dc:	stp	x22, x4, [x2]
     5e0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     5e4:	add	x1, x1, #0x0
     5e8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     5ec:	mov	x0, x20
     5f0:	mov	x1, #0x10                  	// #16
     5f4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     5f8:	mov	x2, x0
     5fc:	add	x4, x21, #0x39
     600:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     604:	add	x3, x3, #0x0
     608:	mov	x0, x19
     60c:	stp	x22, x4, [x2]
     610:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     614:	add	x1, x1, #0x0
     618:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     61c:	mov	x0, x20
     620:	mov	x1, #0x10                  	// #16
     624:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     628:	mov	x2, x0
     62c:	add	x4, x21, #0x3a
     630:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     634:	add	x3, x3, #0x0
     638:	mov	x0, x19
     63c:	stp	x22, x4, [x2]
     640:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     644:	add	x1, x1, #0x0
     648:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     64c:	mov	x0, x20
     650:	mov	x1, #0x10                  	// #16
     654:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     658:	mov	x2, x0
     65c:	add	x4, x21, #0x3b
     660:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     664:	add	x3, x3, #0x0
     668:	mov	x0, x19
     66c:	stp	x22, x4, [x2]
     670:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     674:	add	x1, x1, #0x0
     678:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     67c:	mov	x0, x20
     680:	mov	x1, #0x10                  	// #16
     684:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     688:	mov	x2, x0
     68c:	add	x4, x21, #0x3c
     690:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     694:	add	x3, x3, #0x0
     698:	mov	x0, x19
     69c:	stp	x22, x4, [x2]
     6a0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6a4:	add	x1, x1, #0x0
     6a8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     6ac:	mov	x0, x20
     6b0:	mov	x1, #0x10                  	// #16
     6b4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     6b8:	mov	x2, x0
     6bc:	add	x4, x21, #0x40
     6c0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6c4:	add	x3, x3, #0x0
     6c8:	mov	x0, x19
     6cc:	stp	x25, x4, [x2]
     6d0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6d4:	add	x1, x1, #0x0
     6d8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     6dc:	mov	x0, x20
     6e0:	mov	x1, #0x10                  	// #16
     6e4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     6e8:	mov	x2, x0
     6ec:	add	x4, x21, #0x44
     6f0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     6f4:	add	x3, x3, #0x0
     6f8:	mov	x0, x19
     6fc:	stp	x22, x4, [x2]
     700:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     704:	add	x1, x1, #0x0
     708:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     70c:	mov	x0, x20
     710:	mov	x1, #0x10                  	// #16
     714:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     718:	mov	x2, x0
     71c:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     720:	add	x0, x21, #0x48
     724:	add	x3, x3, #0x0
     728:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     72c:	stp	x24, x0, [x2]
     730:	add	x1, x1, #0x0
     734:	mov	x0, x19
     738:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     73c:	mov	x0, x20
     740:	mov	x1, #0x10                  	// #16
     744:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     748:	mov	x2, x0
     74c:	add	x4, x21, #0x4c
     750:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     754:	add	x3, x3, #0x0
     758:	mov	x0, x19
     75c:	stp	x24, x4, [x2]
     760:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     764:	add	x1, x1, #0x0
     768:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     76c:	mov	x0, x20
     770:	mov	x1, #0x10                  	// #16
     774:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     778:	mov	x2, x0
     77c:	add	x4, x21, #0x50
     780:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     784:	add	x3, x3, #0x0
     788:	mov	x0, x19
     78c:	stp	x24, x4, [x2]
     790:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     794:	add	x1, x1, #0x0
     798:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     79c:	mov	x0, x20
     7a0:	mov	x1, #0x10                  	// #16
     7a4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     7a8:	mov	x2, x0
     7ac:	add	x4, x21, #0x54
     7b0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7b4:	add	x3, x3, #0x0
     7b8:	mov	x0, x19
     7bc:	stp	x24, x4, [x2]
     7c0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7c4:	add	x1, x1, #0x0
     7c8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     7cc:	mov	x0, x20
     7d0:	mov	x1, #0x10                  	// #16
     7d4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     7d8:	mov	x2, x0
     7dc:	add	x4, x21, #0x58
     7e0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7e4:	add	x3, x3, #0x0
     7e8:	mov	x0, x19
     7ec:	stp	x24, x4, [x2]
     7f0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     7f4:	add	x1, x1, #0x0
     7f8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     7fc:	mov	x0, x20
     800:	mov	x1, #0x10                  	// #16
     804:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     808:	mov	x2, x0
     80c:	add	x4, x21, #0x5c
     810:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     814:	add	x3, x3, #0x0
     818:	mov	x0, x19
     81c:	stp	x24, x4, [x2]
     820:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     824:	add	x1, x1, #0x0
     828:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     82c:	adrp	x24, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     830:	mov	x0, x20
     834:	mov	x1, #0x10                  	// #16
     838:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     83c:	mov	x2, x0
     840:	add	x4, x21, #0x60
     844:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     848:	add	x3, x3, #0x0
     84c:	mov	x0, x19
     850:	stp	x22, x4, [x2]
     854:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     858:	add	x1, x1, #0x0
     85c:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     860:	add	x24, x24, #0x0
     864:	mov	x0, x20
     868:	mov	x1, #0x10                  	// #16
     86c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     870:	mov	x2, x0
     874:	add	x4, x21, #0x61
     878:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     87c:	add	x3, x3, #0x0
     880:	mov	x0, x19
     884:	stp	x22, x4, [x2]
     888:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     88c:	add	x1, x1, #0x0
     890:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     894:	mov	x0, x20
     898:	mov	x1, #0x10                  	// #16
     89c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     8a0:	mov	x2, x0
     8a4:	add	x4, x21, #0x62
     8a8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8ac:	add	x3, x3, #0x0
     8b0:	mov	x0, x19
     8b4:	stp	x22, x4, [x2]
     8b8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8bc:	add	x1, x1, #0x0
     8c0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     8c4:	mov	x0, x20
     8c8:	mov	x1, #0x10                  	// #16
     8cc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     8d0:	mov	x2, x0
     8d4:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8d8:	add	x0, x21, #0x68
     8dc:	add	x3, x3, #0x0
     8e0:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     8e4:	stp	x24, x0, [x2]
     8e8:	add	x1, x1, #0x0
     8ec:	mov	x0, x19
     8f0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     8f4:	mov	x0, x20
     8f8:	mov	x1, #0x10                  	// #16
     8fc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     900:	mov	x2, x0
     904:	add	x4, x21, #0x70
     908:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     90c:	add	x3, x3, #0x0
     910:	mov	x0, x19
     914:	stp	x23, x4, [x2]
     918:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     91c:	add	x1, x1, #0x0
     920:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     924:	mov	x0, x20
     928:	mov	x1, #0x10                  	// #16
     92c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     930:	mov	x2, x0
     934:	add	x4, x21, #0x78
     938:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     93c:	add	x3, x3, #0x0
     940:	mov	x0, x19
     944:	stp	x22, x4, [x2]
     948:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     94c:	add	x1, x1, #0x0
     950:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     954:	mov	x0, x20
     958:	mov	x1, #0x10                  	// #16
     95c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     960:	mov	x2, x0
     964:	add	x4, x21, #0x79
     968:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     96c:	add	x3, x3, #0x0
     970:	mov	x0, x19
     974:	stp	x22, x4, [x2]
     978:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     97c:	add	x1, x1, #0x0
     980:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     984:	mov	x0, x20
     988:	mov	x1, #0x10                  	// #16
     98c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     990:	mov	x2, x0
     994:	add	x4, x21, #0x7a
     998:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     99c:	add	x3, x3, #0x0
     9a0:	mov	x0, x19
     9a4:	stp	x22, x4, [x2]
     9a8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9ac:	add	x1, x1, #0x0
     9b0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     9b4:	mov	x0, x20
     9b8:	mov	x1, #0x10                  	// #16
     9bc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9c0:	mov	x2, x0
     9c4:	add	x4, x21, #0x80
     9c8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9cc:	add	x3, x3, #0x0
     9d0:	mov	x0, x19
     9d4:	stp	x24, x4, [x2]
     9d8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9dc:	add	x1, x1, #0x0
     9e0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     9e4:	mov	x0, x20
     9e8:	mov	x1, #0x10                  	// #16
     9ec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9f0:	mov	x2, x0
     9f4:	add	x4, x21, #0x88
     9f8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     9fc:	add	x3, x3, #0x0
     a00:	mov	x0, x19
     a04:	stp	x24, x4, [x2]
     a08:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a0c:	add	x1, x1, #0x0
     a10:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a14:	mov	x0, x20
     a18:	mov	x1, #0x10                  	// #16
     a1c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a20:	mov	x2, x0
     a24:	add	x4, x21, #0x90
     a28:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a2c:	add	x3, x3, #0x0
     a30:	mov	x0, x19
     a34:	stp	x24, x4, [x2]
     a38:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a3c:	add	x1, x1, #0x0
     a40:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a44:	mov	x0, x20
     a48:	mov	x1, #0x10                  	// #16
     a4c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a50:	mov	x2, x0
     a54:	add	x4, x21, #0x98
     a58:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a5c:	add	x3, x3, #0x0
     a60:	mov	x0, x19
     a64:	stp	x24, x4, [x2]
     a68:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a6c:	add	x1, x1, #0x0
     a70:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a74:	mov	x0, x20
     a78:	mov	x1, #0x10                  	// #16
     a7c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a80:	mov	x2, x0
     a84:	add	x4, x21, #0xa0
     a88:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a8c:	add	x3, x3, #0x0
     a90:	mov	x0, x19
     a94:	stp	x22, x4, [x2]
     a98:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     a9c:	add	x1, x1, #0x0
     aa0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     aa4:	mov	x0, x20
     aa8:	mov	x1, #0x10                  	// #16
     aac:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ab0:	mov	x2, x0
     ab4:	add	x4, x21, #0xa4
     ab8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     abc:	add	x3, x3, #0x0
     ac0:	mov	x0, x19
     ac4:	stp	x25, x4, [x2]
     ac8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     acc:	add	x1, x1, #0x0
     ad0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ad4:	mov	x0, x20
     ad8:	mov	x1, #0x10                  	// #16
     adc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ae0:	mov	x2, x0
     ae4:	add	x4, x21, #0xa8
     ae8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     aec:	add	x3, x3, #0x0
     af0:	mov	x0, x19
     af4:	stp	x22, x4, [x2]
     af8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     afc:	add	x1, x1, #0x0
     b00:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b04:	mov	x0, x20
     b08:	mov	x1, #0x10                  	// #16
     b0c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b10:	mov	x2, x0
     b14:	add	x4, x21, #0xa9
     b18:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b1c:	add	x3, x3, #0x0
     b20:	mov	x0, x19
     b24:	stp	x22, x4, [x2]
     b28:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b2c:	add	x1, x1, #0x0
     b30:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b34:	mov	x0, x20
     b38:	mov	x1, #0x10                  	// #16
     b3c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b40:	mov	x2, x0
     b44:	add	x4, x21, #0xb0
     b48:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b4c:	add	x3, x3, #0x0
     b50:	mov	x0, x19
     b54:	stp	x23, x4, [x2]
     b58:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b5c:	add	x1, x1, #0x0
     b60:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b64:	mov	x0, x20
     b68:	mov	x1, #0x10                  	// #16
     b6c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b70:	mov	x2, x0
     b74:	add	x4, x21, #0xb8
     b78:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b7c:	add	x3, x3, #0x0
     b80:	mov	x0, x19
     b84:	stp	x22, x4, [x2]
     b88:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     b8c:	add	x1, x1, #0x0
     b90:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b94:	mov	x0, x20
     b98:	mov	x1, #0x10                  	// #16
     b9c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ba0:	mov	x2, x0
     ba4:	add	x4, x21, #0xb9
     ba8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bac:	add	x3, x3, #0x0
     bb0:	mov	x0, x19
     bb4:	stp	x22, x4, [x2]
     bb8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bbc:	add	x1, x1, #0x0
     bc0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     bc4:	mov	x0, x20
     bc8:	mov	x1, #0x10                  	// #16
     bcc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     bd0:	mov	x2, x0
     bd4:	add	x4, x21, #0xba
     bd8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bdc:	add	x3, x3, #0x0
     be0:	mov	x0, x19
     be4:	stp	x22, x4, [x2]
     be8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     bec:	add	x1, x1, #0x0
     bf0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     bf4:	mov	x0, x20
     bf8:	mov	x1, #0x10                  	// #16
     bfc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c00:	mov	x2, x0
     c04:	add	x4, x21, #0xbb
     c08:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c0c:	add	x3, x3, #0x0
     c10:	mov	x0, x19
     c14:	stp	x22, x4, [x2]
     c18:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c1c:	add	x1, x1, #0x0
     c20:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c24:	mov	x0, x20
     c28:	mov	x1, #0x10                  	// #16
     c2c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c30:	mov	x2, x0
     c34:	add	x4, x21, #0xbc
     c38:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c3c:	add	x3, x3, #0x0
     c40:	mov	x0, x19
     c44:	stp	x22, x4, [x2]
     c48:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c4c:	add	x1, x1, #0x0
     c50:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c54:	mov	x0, x20
     c58:	mov	x1, #0x10                  	// #16
     c5c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c60:	mov	x2, x0
     c64:	add	x4, x21, #0xbd
     c68:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c6c:	add	x3, x3, #0x0
     c70:	mov	x0, x19
     c74:	stp	x22, x4, [x2]
     c78:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c7c:	add	x1, x1, #0x0
     c80:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c84:	mov	x0, x20
     c88:	mov	x1, #0x10                  	// #16
     c8c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c90:	mov	x2, x0
     c94:	add	x4, x21, #0xc0
     c98:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     c9c:	add	x3, x3, #0x0
     ca0:	mov	x0, x19
     ca4:	stp	x25, x4, [x2]
     ca8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cac:	add	x1, x1, #0x0
     cb0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     cb4:	mov	x0, x20
     cb8:	mov	x1, #0x10                  	// #16
     cbc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     cc0:	mov	x2, x0
     cc4:	add	x4, x21, #0xc8
     cc8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ccc:	add	x3, x3, #0x0
     cd0:	mov	x0, x19
     cd4:	stp	x23, x4, [x2]
     cd8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cdc:	add	x1, x1, #0x0
     ce0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ce4:	mov	x0, x20
     ce8:	mov	x1, #0x10                  	// #16
     cec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     cf0:	mov	x2, x0
     cf4:	add	x4, x21, #0xd0
     cf8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     cfc:	add	x3, x3, #0x0
     d00:	mov	x0, x19
     d04:	stp	x22, x4, [x2]
     d08:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d0c:	add	x1, x1, #0x0
     d10:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d14:	mov	x0, x20
     d18:	mov	x1, #0x10                  	// #16
     d1c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d20:	mov	x2, x0
     d24:	add	x4, x21, #0xd1
     d28:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d2c:	add	x3, x3, #0x0
     d30:	mov	x0, x19
     d34:	stp	x22, x4, [x2]
     d38:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d3c:	add	x1, x1, #0x0
     d40:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d44:	mov	x0, x20
     d48:	mov	x1, #0x10                  	// #16
     d4c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d50:	mov	x2, x0
     d54:	add	x4, x21, #0xd2
     d58:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d5c:	add	x3, x3, #0x0
     d60:	mov	x0, x19
     d64:	stp	x22, x4, [x2]
     d68:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d6c:	add	x1, x1, #0x0
     d70:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     d74:	mov	x0, x20
     d78:	mov	x1, #0x10                  	// #16
     d7c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     d80:	mov	x2, x0
     d84:	add	x4, x21, #0xd3
     d88:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d8c:	add	x3, x3, #0x0
     d90:	mov	x0, x19
     d94:	stp	x22, x4, [x2]
     d98:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     d9c:	add	x1, x1, #0x0
     da0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     da4:	mov	x0, x20
     da8:	mov	x1, #0x10                  	// #16
     dac:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     db0:	mov	x2, x0
     db4:	add	x4, x21, #0xd4
     db8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dbc:	add	x3, x3, #0x0
     dc0:	mov	x0, x19
     dc4:	stp	x22, x4, [x2]
     dc8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dcc:	add	x1, x1, #0x0
     dd0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     dd4:	mov	x0, x20
     dd8:	mov	x1, #0x10                  	// #16
     ddc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     de0:	mov	x2, x0
     de4:	add	x4, x21, #0xd5
     de8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dec:	add	x3, x3, #0x0
     df0:	mov	x0, x19
     df4:	stp	x22, x4, [x2]
     df8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     dfc:	add	x1, x1, #0x0
     e00:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e04:	mov	x0, x20
     e08:	mov	x1, #0x10                  	// #16
     e0c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e10:	mov	x2, x0
     e14:	add	x4, x21, #0xd6
     e18:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e1c:	add	x3, x3, #0x0
     e20:	mov	x0, x19
     e24:	stp	x22, x4, [x2]
     e28:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e2c:	add	x1, x1, #0x0
     e30:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e34:	mov	x0, x20
     e38:	mov	x1, #0x10                  	// #16
     e3c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e40:	mov	x2, x0
     e44:	add	x4, x21, #0xd7
     e48:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e4c:	add	x3, x3, #0x0
     e50:	mov	x0, x19
     e54:	stp	x22, x4, [x2]
     e58:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e5c:	add	x1, x1, #0x0
     e60:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e64:	mov	x0, x20
     e68:	mov	x1, #0x10                  	// #16
     e6c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     e70:	mov	x2, x0
     e74:	add	x4, x21, #0xd8
     e78:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e7c:	add	x3, x3, #0x0
     e80:	mov	x0, x19
     e84:	stp	x22, x4, [x2]
     e88:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     e8c:	add	x1, x1, #0x0
     e90:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     e94:	mov	x0, x20
     e98:	mov	x1, #0x10                  	// #16
     e9c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ea0:	mov	x2, x0
     ea4:	add	x4, x21, #0xd9
     ea8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     eac:	add	x3, x3, #0x0
     eb0:	mov	x0, x19
     eb4:	stp	x22, x4, [x2]
     eb8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ebc:	add	x1, x1, #0x0
     ec0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ec4:	mov	x0, x20
     ec8:	mov	x1, #0x10                  	// #16
     ecc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ed0:	mov	x2, x0
     ed4:	add	x4, x21, #0xda
     ed8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     edc:	add	x3, x3, #0x0
     ee0:	mov	x0, x19
     ee4:	stp	x22, x4, [x2]
     ee8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     eec:	add	x1, x1, #0x0
     ef0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ef4:	mov	x0, x20
     ef8:	mov	x1, #0x10                  	// #16
     efc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f00:	mov	x2, x0
     f04:	add	x4, x21, #0xdb
     f08:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f0c:	add	x3, x3, #0x0
     f10:	mov	x0, x19
     f14:	stp	x22, x4, [x2]
     f18:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f1c:	add	x1, x1, #0x0
     f20:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f24:	mov	x0, x20
     f28:	mov	x1, #0x10                  	// #16
     f2c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f30:	mov	x2, x0
     f34:	add	x4, x21, #0xdc
     f38:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f3c:	add	x3, x3, #0x0
     f40:	mov	x0, x19
     f44:	stp	x22, x4, [x2]
     f48:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f4c:	add	x1, x1, #0x0
     f50:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f54:	mov	x0, x20
     f58:	mov	x1, #0x10                  	// #16
     f5c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f60:	mov	x2, x0
     f64:	add	x4, x21, #0xdd
     f68:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f6c:	add	x3, x3, #0x0
     f70:	mov	x0, x19
     f74:	stp	x22, x4, [x2]
     f78:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f7c:	add	x1, x1, #0x0
     f80:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     f84:	mov	x0, x20
     f88:	mov	x1, #0x10                  	// #16
     f8c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     f90:	mov	x2, x0
     f94:	add	x4, x21, #0xde
     f98:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     f9c:	add	x3, x3, #0x0
     fa0:	mov	x0, x19
     fa4:	stp	x22, x4, [x2]
     fa8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fac:	add	x1, x1, #0x0
     fb0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     fb4:	mov	x0, x20
     fb8:	mov	x1, #0x10                  	// #16
     fbc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     fc0:	mov	x2, x0
     fc4:	add	x4, x21, #0xdf
     fc8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fcc:	add	x3, x3, #0x0
     fd0:	mov	x0, x19
     fd4:	stp	x22, x4, [x2]
     fd8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     fdc:	add	x1, x1, #0x0
     fe0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     fe4:	mov	x0, x20
     fe8:	mov	x1, #0x10                  	// #16
     fec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ff0:	mov	x2, x0
     ff4:	add	x1, x21, #0xe0
     ff8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
     ffc:	add	x3, x3, #0x0
    1000:	stp	x25, x1, [x0]
    1004:	mov	x0, x19
    1008:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    100c:	add	x1, x1, #0x0
    1010:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1014:	mov	x0, x20
    1018:	mov	x1, #0x10                  	// #16
    101c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1020:	mov	x2, x0
    1024:	add	x4, x21, #0xe4
    1028:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    102c:	add	x3, x3, #0x0
    1030:	mov	x0, x19
    1034:	stp	x22, x4, [x2]
    1038:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    103c:	add	x1, x1, #0x0
    1040:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1044:	mov	x0, x20
    1048:	mov	x1, #0x10                  	// #16
    104c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1050:	mov	x2, x0
    1054:	add	x4, x21, #0xe5
    1058:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    105c:	add	x3, x3, #0x0
    1060:	mov	x0, x19
    1064:	stp	x22, x4, [x2]
    1068:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    106c:	add	x1, x1, #0x0
    1070:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1074:	mov	x0, x20
    1078:	mov	x1, #0x10                  	// #16
    107c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1080:	mov	x2, x0
    1084:	add	x4, x21, #0xe6
    1088:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    108c:	add	x3, x3, #0x0
    1090:	mov	x0, x19
    1094:	stp	x22, x4, [x2]
    1098:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    109c:	add	x1, x1, #0x0
    10a0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    10a4:	mov	x0, x20
    10a8:	mov	x1, #0x10                  	// #16
    10ac:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    10b0:	mov	x2, x0
    10b4:	add	x4, x21, #0xe7
    10b8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10bc:	add	x3, x3, #0x0
    10c0:	mov	x0, x19
    10c4:	stp	x22, x4, [x2]
    10c8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10cc:	add	x1, x1, #0x0
    10d0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    10d4:	mov	x0, x20
    10d8:	mov	x1, #0x10                  	// #16
    10dc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    10e0:	mov	x2, x0
    10e4:	add	x4, x21, #0xe8
    10e8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10ec:	add	x3, x3, #0x0
    10f0:	mov	x0, x19
    10f4:	stp	x23, x4, [x2]
    10f8:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    10fc:	add	x1, x1, #0x0
    1100:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1104:	mov	x0, x20
    1108:	mov	x1, #0x10                  	// #16
    110c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1110:	mov	x2, x0
    1114:	add	x4, x21, #0xf0
    1118:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    111c:	add	x3, x3, #0x0
    1120:	mov	x0, x19
    1124:	stp	x22, x4, [x2]
    1128:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    112c:	add	x1, x1, #0x0
    1130:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1134:	mov	x0, x20
    1138:	mov	x1, #0x10                  	// #16
    113c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1140:	mov	x2, x0
    1144:	add	x4, x21, #0xf1
    1148:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    114c:	add	x3, x3, #0x0
    1150:	mov	x0, x19
    1154:	stp	x22, x4, [x2]
    1158:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    115c:	add	x1, x1, #0x0
    1160:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1164:	mov	x0, x20
    1168:	mov	x1, #0x10                  	// #16
    116c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1170:	mov	x2, x0
    1174:	add	x4, x21, #0xf2
    1178:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    117c:	add	x3, x3, #0x0
    1180:	mov	x0, x19
    1184:	stp	x22, x4, [x2]
    1188:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    118c:	add	x1, x1, #0x0
    1190:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1194:	add	x21, x21, #0xf3
    1198:	mov	x0, x20
    119c:	mov	x1, #0x10                  	// #16
    11a0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    11a4:	mov	x2, x0
    11a8:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11ac:	add	x3, x3, #0x0
    11b0:	mov	x0, x19
    11b4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11b8:	stp	x22, x21, [x2]
    11bc:	add	x1, x1, #0x0
    11c0:	adrp	x22, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11c4:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    11c8:	add	x22, x22, #0x0
    11cc:	mov	x0, x20
    11d0:	mov	x1, #0x20                  	// #32
    11d4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    11d8:	mov	x2, x0
    11dc:	adrp	x21, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11e0:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11e4:	add	x21, x21, #0x0
    11e8:	add	x3, x3, #0x0
    11ec:	stp	x22, x19, [x2]
    11f0:	mov	x0, x19
    11f4:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    11f8:	strb	wzr, [x2, #16]
    11fc:	add	x1, x1, #0x0
    1200:	str	x21, [x2, #24]
    1204:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
    1208:	mov	x0, x20
    120c:	mov	x1, #0x20                  	// #32
    1210:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
    1214:	mov	x2, x0
    1218:	mov	w4, #0x1                   	// #1
    121c:	mov	x0, x19
    1220:	ldp	x23, x24, [sp, #32]
    1224:	strb	w4, [x2, #16]
    1228:	ldp	x25, x30, [sp, #48]
    122c:	stp	x22, x19, [x2]
    1230:	adrp	x3, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1234:	str	x21, [x2, #24]
    1238:	add	x3, x3, #0x0
    123c:	ldp	x21, x22, [sp, #16]
    1240:	adrp	x1, 0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
    1244:	ldp	x19, x20, [sp], #64
    1248:	add	x1, x1, #0x0
    124c:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>

0000000000001250 <_ZN11__sanitizer21InitializeCommonFlagsEPNS_11CommonFlagsE>:
    1250:	adrp	x1, 0 <_ZN11__sanitizer17current_verbosityE>
    1254:	ldrb	w4, [x0, #231]
    1258:	ldr	w3, [x0, #52]
    125c:	ldr	x2, [x1]
    1260:	ldrb	w1, [x0, #169]
    1264:	orr	w1, w1, w4
    1268:	str	w3, [x2]
    126c:	strb	w1, [x0, #169]
    1270:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_>:
   0:	mov	x2, x0
   4:	mov	w0, #0x1                   	// #1
   8:	ldr	x2, [x2, #8]
   c:	str	x1, [x2]
  10:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	w3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerImE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerImE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerImE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	x3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	w3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer18FlagHandlerInclude6FormatEPcm:

0000000000000000 <_ZN11__sanitizer18FlagHandlerInclude6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #24]
  18:	adrp	x2, 0 <_ZN11__sanitizer18FlagHandlerInclude6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  24:	cmp	x19, w0, sxtw
  28:	cset	w0, hi  // hi = pmore
  2c:	ldp	x19, x30, [sp], #16
  30:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	x3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	adrp	x4, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   8:	add	x4, x4, #0x0
   c:	ldr	x5, [x0, #8]
  10:	mov	x19, x2
  14:	adrp	x3, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  18:	add	x3, x3, #0x0
  1c:	mov	x0, x1
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	ldrb	w5, [x5]
  28:	mov	x1, x19
  2c:	add	x2, x2, #0x0
  30:	cmp	w5, #0x0
  34:	csel	x3, x3, x4, ne  // ne = any
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	cmp	x19, w0, sxtw
  40:	cset	w0, hi  // hi = pmore
  44:	ldp	x19, x30, [sp], #16
  48:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerImE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x20, x0
   8:	mov	w2, #0xa                   	// #10
   c:	mov	x0, x1
  10:	mov	x19, x1
  14:	add	x1, sp, #0x28
  18:	str	x30, [sp, #16]
  1c:	bl	0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
  20:	ldr	x2, [x20, #8]
  24:	ldr	x1, [sp, #40]
  28:	str	x0, [x2]
  2c:	ldrb	w0, [x1]
  30:	cmp	w0, #0x0
  34:	cset	w20, eq  // eq = none
  38:	cbnz	w0, 4c <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc+0x4c>
  3c:	mov	w0, w20
  40:	ldr	x30, [sp, #16]
  44:	ldp	x19, x20, [sp], #48
  48:	ret
  4c:	mov	x1, x19
  50:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerImE5ParseEPKc>
  54:	add	x0, x0, #0x0
  58:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  5c:	mov	w0, w20
  60:	ldr	x30, [sp, #16]
  64:	ldp	x19, x20, [sp], #48
  68:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x20, x0
   8:	mov	w2, #0xa                   	// #10
   c:	mov	x0, x1
  10:	mov	x19, x1
  14:	add	x1, sp, #0x28
  18:	str	x30, [sp, #16]
  1c:	bl	0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
  20:	ldr	x2, [x20, #8]
  24:	ldr	x1, [sp, #40]
  28:	str	w0, [x2]
  2c:	ldrb	w0, [x1]
  30:	cmp	w0, #0x0
  34:	cset	w20, eq  // eq = none
  38:	cbnz	w0, 4c <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc+0x4c>
  3c:	mov	w0, w20
  40:	ldr	x30, [sp, #16]
  44:	ldp	x19, x20, [sp], #48
  48:	ret
  4c:	mov	x1, x19
  50:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>
  54:	add	x0, x0, #0x0
  58:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  5c:	mov	w0, w20
  60:	ldr	x30, [sp, #16]
  64:	ldp	x19, x20, [sp], #48
  68:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x19, x1
   8:	mov	x20, x0
   c:	mov	x0, x1
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	str	x30, [sp, #16]
  1c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  20:	cbnz	w0, 40 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x40>
  24:	mov	w1, #0x0                   	// #0
  28:	ldr	x2, [x20, #8]
  2c:	mov	w0, #0x1                   	// #1
  30:	ldr	x30, [sp, #16]
  34:	str	w1, [x2]
  38:	ldp	x19, x20, [sp], #32
  3c:	ret
  40:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  44:	mov	x0, x19
  48:	add	x1, x1, #0x0
  4c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  50:	cbz	w0, 24 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x24>
  54:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  58:	mov	x0, x19
  5c:	add	x1, x1, #0x0
  60:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  64:	cbz	w0, 24 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x24>
  68:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  6c:	mov	x0, x19
  70:	add	x1, x1, #0x0
  74:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  78:	cbz	w0, 90 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x90>
  7c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  80:	mov	x0, x19
  84:	add	x1, x1, #0x0
  88:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  8c:	cbnz	w0, 98 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x98>
  90:	mov	w1, #0x1                   	// #1
  94:	b	28 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x28>
  98:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  9c:	mov	x0, x19
  a0:	add	x1, x1, #0x0
  a4:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  a8:	cbz	w0, 90 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0x90>
  ac:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  b0:	mov	x0, x19
  b4:	add	x1, x1, #0x0
  b8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  bc:	cbz	w0, f4 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xf4>
  c0:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  c4:	mov	x0, x19
  c8:	add	x1, x1, #0x0
  cc:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  d0:	cbz	w0, f4 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc+0xf4>
  d4:	mov	x1, x19
  d8:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerINS_16HandleSignalModeEE5ParseEPKc>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  e4:	mov	w0, #0x0                   	// #0
  e8:	ldr	x30, [sp, #16]
  ec:	ldp	x19, x20, [sp], #32
  f0:	ret
  f4:	ldr	x1, [x20, #8]
  f8:	mov	w2, #0x2                   	// #2
  fc:	mov	w0, #0x1                   	// #1
 100:	ldr	x30, [sp, #16]
 104:	str	w2, [x1]
 108:	ldp	x19, x20, [sp], #32
 10c:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	mov	x2, x0
   4:	stp	x19, x20, [sp, #-32]!
   8:	mov	x19, x1
   c:	mov	x0, x19
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	ldr	x20, [x2, #8]
  1c:	str	x30, [sp, #16]
  20:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  24:	cbnz	w0, 3c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x3c>
  28:	mov	w0, #0x1                   	// #1
  2c:	strb	wzr, [x20]
  30:	ldr	x30, [sp, #16]
  34:	ldp	x19, x20, [sp], #32
  38:	ret
  3c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  40:	mov	x0, x19
  44:	add	x1, x1, #0x0
  48:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  4c:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  50:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  54:	mov	x0, x19
  58:	add	x1, x1, #0x0
  5c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  60:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  64:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  68:	mov	x0, x19
  6c:	add	x1, x1, #0x0
  70:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  74:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  78:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  7c:	mov	x0, x19
  80:	add	x1, x1, #0x0
  84:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  88:	cbnz	w0, 9c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x9c>
  8c:	mov	w1, #0x1                   	// #1
  90:	mov	w0, #0x1                   	// #1
  94:	strb	w1, [x20]
  98:	b	30 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x30>
  9c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  a0:	mov	x0, x19
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  ac:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  b0:	mov	x1, x19
  b4:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  c0:	mov	w0, #0x0                   	// #0
  c4:	ldr	x30, [sp, #16]
  c8:	ldp	x19, x20, [sp], #32
  cc:	ret

Disassembly of section .text._ZN11__sanitizer18FlagHandlerInclude5ParseEPKc:

0000000000000000 <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	x19, x1
   c:	str	x30, [sp, #24]
  10:	mov	x0, x1
  14:	str	x19, [x20, #24]
  18:	mov	w1, #0x25                  	// #37
  1c:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
  20:	cbz	x0, 84 <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc+0x84>
  24:	mov	w2, #0x0                   	// #0
  28:	adrp	x1, 0 <_ZN11__sanitizer18FlagHandlerInclude5ParseEPKc>
  2c:	mov	x0, #0x1000                	// #4096
  30:	add	x1, x1, #0x0
  34:	str	x21, [sp, #16]
  38:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  3c:	mov	x21, x0
  40:	mov	x2, #0x1000                	// #4096
  44:	mov	x0, x19
  48:	mov	x1, x21
  4c:	bl	100 <_ZN11__sanitizer22SubstituteForFlagValueEPKcPcm>
  50:	ldrb	w2, [x20, #16]
  54:	mov	x1, x21
  58:	ldr	x0, [x20, #8]
  5c:	bl	0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>
  60:	mov	w19, w0
  64:	mov	x1, #0x1000                	// #4096
  68:	mov	x0, x21
  6c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  70:	mov	w0, w19
  74:	ldr	x21, [sp, #16]
  78:	ldr	x30, [sp, #24]
  7c:	ldp	x19, x20, [sp], #32
  80:	ret
  84:	ldrb	w2, [x20, #16]
  88:	mov	x1, x19
  8c:	ldr	x0, [x20, #8]
  90:	ldr	x30, [sp, #24]
  94:	ldp	x19, x20, [sp], #32
  98:	b	0 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>

sanitizer_flag_parser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	stp	x21, x22, [sp, #16]
   8:	adrp	x21, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
   c:	add	x19, x21, #0x0
  10:	str	x30, [sp, #32]
  14:	ldr	w1, [x19, #160]
  18:	cbnz	w1, 2c <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x2c>
  1c:	ldp	x21, x22, [sp, #16]
  20:	ldr	x30, [sp, #32]
  24:	ldp	x19, x20, [sp], #48
  28:	ret
  2c:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  30:	add	x0, x0, #0x0
  34:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  38:	ldr	w0, [x19, #160]
  3c:	cmp	w0, #0x0
  40:	b.le	6c <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x6c>
  44:	adrp	x22, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  48:	add	x22, x22, #0x0
  4c:	mov	x20, #0x0                   	// #0
  50:	ldr	x1, [x19, x20, lsl #3]
  54:	mov	x0, x22
  58:	add	x20, x20, #0x1
  5c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  60:	ldr	w0, [x19, #160]
  64:	cmp	w0, w20
  68:	b.gt	50 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv+0x50>
  6c:	add	x21, x21, #0x0
  70:	ldr	x30, [sp, #32]
  74:	str	wzr, [x21, #160]
  78:	ldp	x21, x22, [sp, #16]
  7c:	ldp	x19, x20, [sp], #48
  80:	ret
  84:	nop

0000000000000088 <_ZN11__sanitizer10FlagParser10ll_strndupEPKcm>:
  88:	stp	x19, x20, [sp, #-32]!
  8c:	stp	x21, x30, [sp, #16]
  90:	mov	x21, x1
  94:	mov	x0, x21
  98:	mov	x1, x2
  9c:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
  a0:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  a4:	mov	x19, x0
  a8:	add	x0, x1, #0x0
  ac:	add	x1, x19, #0x1
  b0:	add	x0, x0, #0xa8
  b4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  b8:	mov	x20, x0
  bc:	mov	x1, x21
  c0:	mov	x2, x19
  c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  c8:	mov	x0, x20
  cc:	strb	wzr, [x20, x19]
  d0:	ldp	x21, x30, [sp, #16]
  d4:	ldp	x19, x20, [sp], #32
  d8:	ret
  dc:	nop

00000000000000e0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>:
  e0:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  e4:	stp	x19, x20, [sp, #-192]!
  e8:	mov	x20, x0
  ec:	ldr	x1, [x1]
  f0:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  f4:	add	x0, x0, #0x0
  f8:	strb	wzr, [sp, #191]
  fc:	ldr	x1, [x1]
 100:	str	x30, [sp, #48]
 104:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 108:	ldr	w0, [x20, #8]
 10c:	cmp	w0, #0x0
 110:	b.le	1dc <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0xfc>
 114:	mov	x19, #0x0                   	// #0
 118:	stp	x21, x22, [sp, #16]
 11c:	add	x22, sp, #0x40
 120:	mov	w21, #0x0                   	// #0
 124:	stp	x23, x24, [sp, #32]
 128:	adrp	x24, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 12c:	adrp	x23, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 130:	add	x24, x24, #0x0
 134:	add	x23, x23, #0x0
 138:	b	170 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0x90>
 13c:	add	x2, x1, x19
 140:	mov	x0, x23
 144:	ldr	x1, [x1, x19]
 148:	mov	x4, x22
 14c:	ldr	x2, [x2, #8]
 150:	adrp	x3, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 154:	add	x3, x3, #0x0
 158:	add	w21, w21, #0x1
 15c:	add	x19, x19, #0x18
 160:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 164:	ldr	w0, [x20, #8]
 168:	cmp	w0, w21
 16c:	b.le	1d4 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0xf4>
 170:	ldr	x3, [x20]
 174:	mov	x1, x22
 178:	mov	x2, #0x80                  	// #128
 17c:	add	x3, x3, x19
 180:	ldr	x0, [x3, #16]
 184:	ldr	x3, [x0]
 188:	ldr	x3, [x3, #8]
 18c:	blr	x3
 190:	and	w0, w0, #0xff
 194:	ldrb	w3, [sp, #191]
 198:	cbnz	x3, 1e8 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0x108>
 19c:	ldr	x1, [x20]
 1a0:	cbz	w0, 13c <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0x5c>
 1a4:	add	x2, x1, x19
 1a8:	mov	x0, x23
 1ac:	ldr	x1, [x1, x19]
 1b0:	mov	x4, x22
 1b4:	ldr	x2, [x2, #8]
 1b8:	mov	x3, x24
 1bc:	add	w21, w21, #0x1
 1c0:	add	x19, x19, #0x18
 1c4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 1c8:	ldr	w0, [x20, #8]
 1cc:	cmp	w0, w21
 1d0:	b.gt	170 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv+0x90>
 1d4:	ldp	x21, x22, [sp, #16]
 1d8:	ldp	x23, x24, [sp, #32]
 1dc:	ldr	x30, [sp, #48]
 1e0:	ldp	x19, x20, [sp], #192
 1e4:	ret
 1e8:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 1ec:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 1f0:	add	x2, x2, #0x0
 1f4:	add	x0, x0, #0x0
 1f8:	mov	x4, #0x0                   	// #0
 1fc:	mov	w1, #0x40                  	// #64
 200:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 204:	nop

0000000000000208 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>:
 208:	adrp	x3, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 20c:	mov	x2, x1
 210:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 214:	add	x0, x0, #0x0
 218:	ldr	x3, [x3]
 21c:	str	x30, [sp, #-16]!
 220:	ldr	x1, [x3]
 224:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 228:	bl	0 <_ZN11__sanitizer3DieEv>
 22c:	nop

0000000000000230 <_ZN11__sanitizer10FlagParser8is_spaceEc>:
 230:	and	w1, w1, #0xff
 234:	cmp	w1, #0x20
 238:	cset	w0, eq  // eq = none
 23c:	cmp	w1, #0x2c
 240:	csinc	w0, w0, wzr, ne  // ne = any
 244:	cbnz	w0, 25c <_ZN11__sanitizer10FlagParser8is_spaceEc+0x2c>
 248:	cmp	w1, #0x3a
 24c:	cset	w0, eq  // eq = none
 250:	cmp	w1, #0xa
 254:	csinc	w0, w0, wzr, ne  // ne = any
 258:	cbz	w0, 260 <_ZN11__sanitizer10FlagParser8is_spaceEc+0x30>
 25c:	ret
 260:	and	w1, w1, #0xfffffffb
 264:	cmp	w1, #0x9
 268:	cset	w0, eq  // eq = none
 26c:	ret

0000000000000270 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv>:
 270:	ldp	x4, x2, [x0, #16]
 274:	mov	w5, #0x2c                  	// #44
 278:	ldrb	w1, [x4, x2]
 27c:	add	x2, x2, #0x1
 280:	cmp	w1, #0x20
 284:	ccmp	w1, w5, #0x4, ne  // ne = any
 288:	b.eq	2ac <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x3c>  // b.none
 28c:	sub	w3, w1, #0x9
 290:	cmp	w1, #0x3a
 294:	and	w3, w3, #0xff
 298:	b.eq	2ac <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x3c>  // b.none
 29c:	cmp	w3, #0x1
 2a0:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
 2a4:	b.eq	2ac <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x3c>  // b.none
 2a8:	ret
 2ac:	str	x2, [x0, #24]
 2b0:	b	278 <_ZN11__sanitizer10FlagParser15skip_whitespaceEv+0x8>
 2b4:	nop

00000000000002b8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>:
 2b8:	stp	x19, x20, [sp, #-64]!
 2bc:	mov	x2, x1
 2c0:	mov	x19, x0
 2c4:	ldp	x5, x1, [x0, #16]
 2c8:	stp	x21, x22, [sp, #16]
 2cc:	stp	x23, x24, [sp, #32]
 2d0:	str	x30, [sp, #48]
 2d4:	add	x20, x5, x1
 2d8:	ldrb	w3, [x5, x1]
 2dc:	cmp	w3, #0x3d
 2e0:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 2e4:	b.eq	368 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0xb0>  // b.none
 2e8:	add	x4, x1, #0x1
 2ec:	mov	w6, #0x2c                  	// #44
 2f0:	b	32c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x74>
 2f4:	cmp	w3, #0x3a
 2f8:	b.eq	338 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x80>  // b.none
 2fc:	sub	w0, w3, #0x9
 300:	and	w0, w0, #0xff
 304:	cmp	w0, #0x1
 308:	ccmp	w3, #0xd, #0x4, hi  // hi = pmore
 30c:	b.eq	338 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x80>  // b.none
 310:	str	x4, [x19, #24]
 314:	add	x0, x4, #0x1
 318:	ldrb	w3, [x5, x4]
 31c:	cmp	w3, #0x3d
 320:	ccmp	w3, #0x0, #0x4, ne  // ne = any
 324:	b.eq	370 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0xb8>  // b.none
 328:	mov	x4, x0
 32c:	cmp	w3, #0x20
 330:	ccmp	w3, w6, #0x4, ne  // ne = any
 334:	b.ne	2f4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x3c>  // b.any
 338:	cbz	x2, 358 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0xa0>
 33c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 340:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 344:	add	x0, x0, #0x0
 348:	ldr	x1, [x1]
 34c:	ldr	x1, [x1]
 350:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 354:	bl	0 <_ZN11__sanitizer3DieEv>
 358:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 35c:	mov	x0, x19
 360:	add	x1, x1, #0x0
 364:	bl	208 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>
 368:	mov	x4, x1
 36c:	nop
 370:	cmp	w3, #0x3d
 374:	b.ne	338 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x80>  // b.any
 378:	sub	x1, x4, x1
 37c:	mov	x0, x20
 380:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 384:	adrp	x23, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 388:	mov	x21, x0
 38c:	add	x0, x23, #0x0
 390:	add	x1, x21, #0x1
 394:	add	x0, x0, #0xa8
 398:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 39c:	mov	x22, x0
 3a0:	mov	x2, x21
 3a4:	mov	x1, x20
 3a8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3ac:	strb	wzr, [x22, x21]
 3b0:	mov	w0, #0x22                  	// #34
 3b4:	ldp	x4, x2, [x19, #16]
 3b8:	add	x5, x2, #0x1
 3bc:	str	x5, [x19, #24]
 3c0:	add	x21, x4, x5
 3c4:	ldrb	w1, [x4, x5]
 3c8:	cmp	w1, #0x27
 3cc:	ccmp	w1, w0, #0x4, ne  // ne = any
 3d0:	b.eq	450 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x198>  // b.none
 3d4:	cbz	w1, 5c0 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x308>
 3d8:	mov	x3, x5
 3dc:	mov	w6, #0x2c                  	// #44
 3e0:	cmp	w1, #0x20
 3e4:	ccmp	w1, w6, #0x4, ne  // ne = any
 3e8:	b.eq	418 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x160>  // b.none
 3ec:	cmp	w1, #0x3a
 3f0:	b.eq	418 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x160>  // b.none
 3f4:	sub	w0, w1, #0x9
 3f8:	and	w0, w0, #0xff
 3fc:	cmp	w0, #0x1
 400:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
 404:	b.ne	540 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x288>  // b.any
 408:	cmp	w0, #0x1
 40c:	ccmp	w1, #0xd, #0x4, hi  // hi = pmore
 410:	b.ne	58c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2d4>  // b.any
 414:	nop
 418:	sub	x1, x3, x5
 41c:	mov	x0, x21
 420:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 424:	mov	x20, x0
 428:	add	x0, x23, #0x0
 42c:	add	x1, x20, #0x1
 430:	add	x0, x0, #0xa8
 434:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 438:	mov	x24, x0
 43c:	mov	x1, x21
 440:	mov	x2, x20
 444:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 448:	strb	wzr, [x24, x20]
 44c:	b	4c8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x210>
 450:	add	x1, x2, #0x2
 454:	str	x1, [x19, #24]
 458:	add	x21, x4, x1
 45c:	ldrb	w2, [x4, x5]
 460:	ldrb	w0, [x4, x1]
 464:	cbnz	w0, 47c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x1c4>
 468:	b	57c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2c4>
 46c:	add	x1, x1, #0x1
 470:	str	x1, [x19, #24]
 474:	ldrb	w0, [x4, x1]
 478:	cbz	w0, 57c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2c4>
 47c:	cmp	w0, w2
 480:	b.ne	46c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x1b4>  // b.any
 484:	mvn	x5, x5
 488:	mov	x0, x21
 48c:	add	x1, x5, x1
 490:	bl	0 <_ZN11__sanitizer16internal_strnlenEPKcm>
 494:	mov	x20, x0
 498:	add	x1, x23, #0x0
 49c:	add	x0, x1, #0xa8
 4a0:	add	x1, x20, #0x1
 4a4:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 4a8:	mov	x24, x0
 4ac:	mov	x1, x21
 4b0:	mov	x2, x20
 4b4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 4b8:	strb	wzr, [x24, x20]
 4bc:	ldr	x0, [x19, #24]
 4c0:	add	x0, x0, #0x1
 4c4:	str	x0, [x19, #24]
 4c8:	ldr	w0, [x19, #8]
 4cc:	mov	x20, #0x0                   	// #0
 4d0:	mov	w21, #0x0                   	// #0
 4d4:	cmp	w0, #0x0
 4d8:	b.gt	4f4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x23c>
 4dc:	b	558 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2a0>
 4e0:	ldr	w1, [x19, #8]
 4e4:	add	w21, w21, #0x1
 4e8:	add	x20, x20, #0x18
 4ec:	cmp	w1, w21
 4f0:	b.le	558 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2a0>
 4f4:	ldr	x1, [x19]
 4f8:	mov	x0, x22
 4fc:	ldr	x1, [x1, x20]
 500:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 504:	cbnz	w0, 4e0 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x228>
 508:	ldr	x0, [x19]
 50c:	mov	x1, x24
 510:	add	x20, x0, x20
 514:	ldr	x0, [x20, #16]
 518:	ldr	x2, [x0]
 51c:	ldr	x2, [x2]
 520:	blr	x2
 524:	tst	w0, #0xff
 528:	b.eq	5c8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x310>  // b.none
 52c:	ldp	x21, x22, [sp, #16]
 530:	ldp	x23, x24, [sp, #32]
 534:	ldr	x30, [sp, #48]
 538:	ldp	x19, x20, [sp], #64
 53c:	ret
 540:	add	x0, x3, #0x1
 544:	str	x0, [x19, #24]
 548:	ldrb	w1, [x4, x0]
 54c:	cbz	w1, 59c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2e4>
 550:	mov	x3, x0
 554:	b	3e0 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x128>
 558:	add	x23, x23, #0x0
 55c:	ldr	w0, [x23, #160]
 560:	sxtw	x3, w0
 564:	cmp	x3, #0x13
 568:	b.hi	5a4 <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x2ec>  // b.pmore
 56c:	add	w0, w0, #0x1
 570:	str	x22, [x23, x3, lsl #3]
 574:	str	w0, [x23, #160]
 578:	b	52c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x274>
 57c:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 580:	mov	x0, x19
 584:	add	x1, x1, #0x0
 588:	bl	208 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>
 58c:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 590:	mov	x0, x19
 594:	add	x1, x1, #0x0
 598:	bl	208 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>
 59c:	sub	x1, x3, x2
 5a0:	b	41c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x164>
 5a4:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 5a8:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 5ac:	add	x2, x2, #0x0
 5b0:	add	x0, x0, #0x0
 5b4:	mov	x4, #0x14                  	// #20
 5b8:	mov	w1, #0x1f                  	// #31
 5bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5c0:	mov	x1, #0x0                   	// #0
 5c4:	b	41c <_ZN11__sanitizer10FlagParser10parse_flagEPKc+0x164>
 5c8:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 5cc:	mov	x0, x19
 5d0:	add	x1, x1, #0x0
 5d4:	bl	208 <_ZN11__sanitizer10FlagParser11fatal_errorEPKc>

00000000000005d8 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc>:
 5d8:	stp	x19, x20, [sp, #-32]!
 5dc:	mov	x19, x0
 5e0:	mov	x20, x1
 5e4:	stp	x21, x30, [sp, #16]
 5e8:	mov	w21, #0x2c                  	// #44
 5ec:	nop
 5f0:	ldp	x0, x4, [x19, #16]
 5f4:	nop
 5f8:	ldrb	w2, [x0, x4]
 5fc:	add	x4, x4, #0x1
 600:	cmp	w2, #0x20
 604:	ccmp	w2, w21, #0x4, ne  // ne = any
 608:	b.eq	63c <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x64>  // b.none
 60c:	sub	w3, w2, #0x9
 610:	cmp	w2, #0x3a
 614:	and	w3, w3, #0xff
 618:	b.eq	63c <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x64>  // b.none
 61c:	cmp	w3, #0x1
 620:	ccmp	w2, #0xd, #0x4, hi  // hi = pmore
 624:	b.eq	63c <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x64>  // b.none
 628:	cbz	w2, 644 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x6c>
 62c:	mov	x1, x20
 630:	mov	x0, x19
 634:	bl	2b8 <_ZN11__sanitizer10FlagParser10parse_flagEPKc>
 638:	b	5f0 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x18>
 63c:	str	x4, [x19, #24]
 640:	b	5f8 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x20>
 644:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 648:	ldr	x0, [x0]
 64c:	ldr	w1, [x0, #36]
 650:	cmp	w1, #0x0
 654:	b.gt	660 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc+0x88>
 658:	mov	w1, #0x1                   	// #1
 65c:	str	w1, [x0, #36]
 660:	ldp	x21, x30, [sp, #16]
 664:	ldp	x19, x20, [sp], #32
 668:	ret
 66c:	nop

0000000000000670 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>:
 670:	stp	x19, x20, [sp, #-48]!
 674:	mov	x19, x0
 678:	mov	x0, x1
 67c:	stp	x21, x22, [sp, #16]
 680:	mov	x21, x1
 684:	str	x30, [sp, #32]
 688:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
 68c:	adrp	x1, 0 <_ZN11__sanitizer17current_verbosityE>
 690:	mov	x20, x0
 694:	ldr	x1, [x1]
 698:	ldr	w0, [x1]
 69c:	cbz	w0, 6c0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x50>
 6a0:	cmp	x20, #0x0
 6a4:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 6a8:	add	x2, x2, #0x0
 6ac:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 6b0:	csel	x2, x2, x20, eq  // eq = none
 6b4:	add	x0, x0, #0x0
 6b8:	mov	x1, x21
 6bc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 6c0:	cbz	x20, 6e4 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc+0x74>
 6c4:	ldr	x22, [x19, #16]
 6c8:	str	x20, [x19, #16]
 6cc:	ldr	x20, [x19, #24]
 6d0:	str	xzr, [x19, #24]
 6d4:	mov	x1, x21
 6d8:	mov	x0, x19
 6dc:	bl	5d8 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc>
 6e0:	stp	x22, x20, [x19, #16]
 6e4:	ldp	x21, x22, [sp, #16]
 6e8:	ldr	x30, [sp, #32]
 6ec:	ldp	x19, x20, [sp], #48
 6f0:	ret
 6f4:	nop

00000000000006f8 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>:
 6f8:	mov	x3, x1
 6fc:	cbz	x1, 72c <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_+0x34>
 700:	stp	x19, x20, [sp, #-32]!
 704:	mov	x19, x0
 708:	mov	x1, x2
 70c:	stp	x21, x30, [sp, #16]
 710:	ldp	x21, x20, [x0, #16]
 714:	stp	x3, xzr, [x0, #16]
 718:	bl	5d8 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc>
 71c:	stp	x21, x20, [x19, #16]
 720:	ldp	x21, x30, [sp, #16]
 724:	ldp	x19, x20, [sp], #32
 728:	ret
 72c:	ret

0000000000000730 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb>:
 730:	stp	x19, x20, [sp, #-80]!
 734:	mov	x19, x0
 738:	mov	x20, x1
 73c:	stp	x21, x22, [sp, #16]
 740:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 744:	and	w22, w2, #0xff
 748:	ldr	x21, [x21]
 74c:	ldr	x0, [x21]
 750:	str	x30, [sp, #40]
 754:	cbz	x0, 7ec <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xbc>
 758:	cmp	x0, #0x8, lsl #12
 75c:	add	x5, sp, #0x34
 760:	add	x3, sp, #0x48
 764:	add	x2, sp, #0x40
 768:	add	x1, sp, #0x38
 76c:	mov	x4, #0x8000                	// #32768
 770:	csel	x4, x0, x4, cs  // cs = hs, nlast
 774:	mov	x0, x20
 778:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 77c:	ands	w21, w0, #0xff
 780:	b.ne	79c <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x6c>  // b.any
 784:	cbz	w22, 7f8 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0xc8>
 788:	mov	w0, w22
 78c:	ldp	x21, x22, [sp, #16]
 790:	ldr	x30, [sp, #40]
 794:	ldp	x19, x20, [sp], #80
 798:	ret
 79c:	ldr	x0, [sp, #56]
 7a0:	cbz	x0, 7cc <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x9c>
 7a4:	ldr	x22, [x19, #24]
 7a8:	str	x23, [sp, #32]
 7ac:	ldr	x23, [x19, #16]
 7b0:	stp	x0, xzr, [x19, #16]
 7b4:	mov	x1, x20
 7b8:	mov	x0, x19
 7bc:	bl	5d8 <_ZN11__sanitizer10FlagParser11parse_flagsEPKc>
 7c0:	stp	x23, x22, [x19, #16]
 7c4:	ldr	x23, [sp, #32]
 7c8:	ldr	x0, [sp, #56]
 7cc:	mov	w22, w21
 7d0:	ldr	x1, [sp, #64]
 7d4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 7d8:	mov	w0, w22
 7dc:	ldp	x21, x22, [sp, #16]
 7e0:	ldr	x30, [sp, #40]
 7e4:	ldp	x19, x20, [sp], #80
 7e8:	ret
 7ec:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 7f0:	str	x0, [x21]
 7f4:	b	758 <_ZN11__sanitizer10FlagParser9ParseFileEPKcb+0x28>
 7f8:	ldr	w2, [sp, #52]
 7fc:	mov	x1, x20
 800:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 804:	add	x0, x0, #0x0
 808:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 80c:	mov	w0, w22
 810:	ldp	x21, x22, [sp, #16]
 814:	ldr	x30, [sp, #40]
 818:	ldp	x19, x20, [sp], #80
 81c:	ret

0000000000000820 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_>:
 820:	stp	x19, x20, [sp, #-48]!
 824:	stp	x21, x22, [sp, #16]
 828:	mov	x21, x0
 82c:	ldr	w0, [x0, #8]
 830:	str	x30, [sp, #40]
 834:	mov	x22, x1
 838:	cmp	w0, #0x0
 83c:	b.le	8b0 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x90>
 840:	mov	x19, #0x0                   	// #0
 844:	mov	w20, #0x0                   	// #0
 848:	str	x23, [sp, #32]
 84c:	mov	x23, x2
 850:	b	868 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x48>
 854:	ldr	w0, [x21, #8]
 858:	add	w20, w20, #0x1
 85c:	add	x19, x19, #0x18
 860:	cmp	w0, w20
 864:	b.le	8ac <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x8c>
 868:	ldr	x3, [x21]
 86c:	mov	x0, x22
 870:	ldr	x1, [x3, x19]
 874:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 878:	cbnz	w0, 854 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0x34>
 87c:	ldr	x0, [x21]
 880:	mov	x1, x23
 884:	ldp	x21, x22, [sp, #16]
 888:	add	x19, x0, x19
 88c:	ldr	x23, [sp, #32]
 890:	ldr	x0, [x19, #16]
 894:	ldr	x30, [sp, #40]
 898:	ldr	x2, [x0]
 89c:	ldp	x19, x20, [sp], #48
 8a0:	ldr	x2, [x2]
 8a4:	mov	x16, x2
 8a8:	br	x16
 8ac:	ldr	x23, [sp, #32]
 8b0:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 8b4:	add	x1, x1, #0x0
 8b8:	ldr	w0, [x1, #160]
 8bc:	sxtw	x3, w0
 8c0:	cmp	x3, #0x13
 8c4:	b.hi	8e8 <_ZN11__sanitizer10FlagParser11run_handlerEPKcS2_+0xc8>  // b.pmore
 8c8:	add	w2, w0, #0x1
 8cc:	str	x22, [x1, x3, lsl #3]
 8d0:	ldp	x21, x22, [sp, #16]
 8d4:	mov	w0, #0x1                   	// #1
 8d8:	ldr	x30, [sp, #40]
 8dc:	str	w2, [x1, #160]
 8e0:	ldp	x19, x20, [sp], #48
 8e4:	ret
 8e8:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 8ec:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 8f0:	add	x2, x2, #0x0
 8f4:	add	x0, x0, #0x0
 8f8:	mov	x4, #0x14                  	// #20
 8fc:	mov	w1, #0x1f                  	// #31
 900:	str	x23, [sp, #32]
 904:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000908 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>:
 908:	ldr	w4, [x0, #8]
 90c:	sxtw	x5, w4
 910:	cmp	x5, #0xc7
 914:	b.hi	93c <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_+0x34>  // b.pmore
 918:	mov	w5, #0x18                  	// #24
 91c:	add	w7, w4, #0x1
 920:	ldr	x6, [x0]
 924:	smull	x4, w4, w5
 928:	add	x5, x6, x4
 92c:	str	x1, [x6, x4]
 930:	stp	x3, x2, [x5, #8]
 934:	str	w7, [x0, #8]
 938:	ret
 93c:	str	x30, [sp, #-16]!
 940:	adrp	x2, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 944:	adrp	x0, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 948:	mov	x3, x5
 94c:	add	x2, x2, #0x0
 950:	add	x0, x0, #0x0
 954:	mov	x4, #0xc8                  	// #200
 958:	mov	w1, #0xb4                  	// #180
 95c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000960 <_ZN11__sanitizer10FlagParserC1Ev>:
 960:	stp	x19, x30, [sp, #-16]!
 964:	mov	x19, x0
 968:	adrp	x1, 0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 96c:	add	x0, x1, #0x0
 970:	mov	x1, #0x12c0                	// #4800
 974:	str	wzr, [x19, #8]
 978:	add	x0, x0, #0xa8
 97c:	stp	xzr, xzr, [x19, #16]
 980:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 984:	str	x0, [x19]
 988:	ldp	x19, x30, [sp], #16
 98c:	ret

sanitizer_fuchsia.cpp.o:     file format elf64-littleaarch64


sanitizer_libc.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer15internal_memchrEPKvim>:
       0:	cbz	x2, 28 <_ZN11__sanitizer15internal_memchrEPKvim+0x28>
       4:	add	x3, x0, x2
       8:	b	18 <_ZN11__sanitizer15internal_memchrEPKvim+0x18>
       c:	add	x0, x0, #0x1
      10:	cmp	x3, x0
      14:	b.eq	28 <_ZN11__sanitizer15internal_memchrEPKvim+0x28>  // b.none
      18:	ldrb	w2, [x0]
      1c:	cmp	w2, w1
      20:	b.ne	c <_ZN11__sanitizer15internal_memchrEPKvim+0xc>  // b.any
      24:	ret
      28:	mov	x0, #0x0                   	// #0
      2c:	ret

0000000000000030 <_ZN11__sanitizer16internal_memrchrEPKvim>:
      30:	mov	x3, x0
      34:	cbz	x2, 5c <_ZN11__sanitizer16internal_memrchrEPKvim+0x2c>
      38:	add	x4, x0, x2
      3c:	mov	x0, #0x0                   	// #0
      40:	ldrb	w2, [x3]
      44:	cmp	w1, w2
      48:	csel	x0, x0, x3, ne  // ne = any
      4c:	add	x3, x3, #0x1
      50:	cmp	x4, x3
      54:	b.ne	40 <_ZN11__sanitizer16internal_memrchrEPKvim+0x10>  // b.any
      58:	ret
      5c:	mov	x0, #0x0                   	// #0
      60:	ret
      64:	nop

0000000000000068 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>:
      68:	cbz	x2, 9c <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x34>
      6c:	mov	x3, #0x0                   	// #0
      70:	b	7c <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x14>
      74:	cmp	x2, x3
      78:	b.eq	9c <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0x34>  // b.none
      7c:	ldrb	w5, [x0, x3]
      80:	ldrb	w4, [x1, x3]
      84:	add	x3, x3, #0x1
      88:	cmp	w5, w4
      8c:	b.eq	74 <_ZN11__sanitizer15internal_memcmpEPKvS1_m+0xc>  // b.none
      90:	mov	w0, #0x1                   	// #1
      94:	cneg	w0, w0, cc  // cc = lo, ul, last
      98:	ret
      9c:	mov	w0, #0x0                   	// #0
      a0:	ret
      a4:	nop

00000000000000a8 <_ZN11__sanitizer15internal_memcpyEPvPKvm>:
      a8:	cbz	x2, 210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>
      ac:	add	x3, x0, #0xf
      b0:	sub	x4, x2, #0x1
      b4:	sub	x3, x3, x1
      b8:	cmp	x3, #0x1e
      bc:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
      c0:	b.ls	214 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x16c>  // b.plast
      c4:	and	x4, x2, #0xfffffffffffffff0
      c8:	mov	x3, #0x0                   	// #0
      cc:	nop
      d0:	ldr	q0, [x1, x3]
      d4:	str	q0, [x0, x3]
      d8:	add	x3, x3, #0x10
      dc:	cmp	x3, x4
      e0:	b.ne	d0 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x28>  // b.any
      e4:	tst	x2, #0xf
      e8:	and	x3, x2, #0xfffffffffffffff0
      ec:	b.eq	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.none
      f0:	ldrb	w5, [x1, x3]
      f4:	add	x4, x3, #0x1
      f8:	strb	w5, [x0, x3]
      fc:	cmp	x2, x4
     100:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     104:	ldrb	w6, [x1, x4]
     108:	add	x5, x3, #0x2
     10c:	strb	w6, [x0, x4]
     110:	cmp	x2, x5
     114:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     118:	ldrb	w6, [x1, x5]
     11c:	add	x4, x3, #0x3
     120:	strb	w6, [x0, x5]
     124:	cmp	x2, x4
     128:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     12c:	ldrb	w6, [x1, x4]
     130:	add	x5, x3, #0x4
     134:	strb	w6, [x0, x4]
     138:	cmp	x2, x5
     13c:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     140:	ldrb	w6, [x1, x5]
     144:	add	x4, x3, #0x5
     148:	strb	w6, [x0, x5]
     14c:	cmp	x2, x4
     150:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     154:	ldrb	w6, [x1, x4]
     158:	add	x5, x3, #0x6
     15c:	strb	w6, [x0, x4]
     160:	cmp	x2, x5
     164:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     168:	ldrb	w6, [x1, x5]
     16c:	add	x4, x3, #0x7
     170:	strb	w6, [x0, x5]
     174:	cmp	x2, x4
     178:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     17c:	ldrb	w6, [x1, x4]
     180:	add	x5, x3, #0x8
     184:	strb	w6, [x0, x4]
     188:	cmp	x2, x5
     18c:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     190:	ldrb	w6, [x1, x5]
     194:	add	x4, x3, #0x9
     198:	strb	w6, [x0, x5]
     19c:	cmp	x2, x4
     1a0:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     1a4:	ldrb	w6, [x1, x4]
     1a8:	add	x5, x3, #0xa
     1ac:	strb	w6, [x0, x4]
     1b0:	cmp	x2, x5
     1b4:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     1b8:	ldrb	w6, [x1, x5]
     1bc:	add	x4, x3, #0xb
     1c0:	strb	w6, [x0, x5]
     1c4:	cmp	x2, x4
     1c8:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     1cc:	ldrb	w6, [x1, x4]
     1d0:	add	x5, x3, #0xc
     1d4:	strb	w6, [x0, x4]
     1d8:	cmp	x2, x5
     1dc:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     1e0:	ldrb	w6, [x1, x5]
     1e4:	add	x4, x3, #0xd
     1e8:	strb	w6, [x0, x5]
     1ec:	cmp	x2, x4
     1f0:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     1f4:	ldrb	w5, [x1, x4]
     1f8:	add	x3, x3, #0xe
     1fc:	strb	w5, [x0, x4]
     200:	cmp	x2, x3
     204:	b.ls	210 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x168>  // b.plast
     208:	ldrb	w1, [x1, x3]
     20c:	strb	w1, [x0, x3]
     210:	ret
     214:	mov	x3, #0x0                   	// #0
     218:	ldrb	w4, [x1, x3]
     21c:	strb	w4, [x0, x3]
     220:	add	x3, x3, #0x1
     224:	cmp	x2, x3
     228:	b.ne	218 <_ZN11__sanitizer15internal_memcpyEPvPKvm+0x170>  // b.any
     22c:	ret

0000000000000230 <_ZN11__sanitizer16internal_memmoveEPvPKvm>:
     230:	cmp	x0, x1
     234:	b.cs	3a4 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x174>  // b.hs, b.nlast
     238:	cmp	x2, #0x0
     23c:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     240:	add	x3, x0, #0xf
     244:	sub	x4, x2, #0x1
     248:	sub	x3, x3, x1
     24c:	cmp	x3, #0x1e
     250:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
     254:	b.ls	550 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x320>  // b.plast
     258:	and	x4, x2, #0xfffffffffffffff0
     25c:	mov	x3, #0x0                   	// #0
     260:	ldr	q0, [x1, x3]
     264:	str	q0, [x0, x3]
     268:	add	x3, x3, #0x10
     26c:	cmp	x3, x4
     270:	b.ne	260 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x30>  // b.any
     274:	tst	x2, #0xf
     278:	and	x3, x2, #0xfffffffffffffff0
     27c:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     280:	ldrb	w5, [x1, x3]
     284:	add	x4, x3, #0x1
     288:	strb	w5, [x0, x3]
     28c:	cmp	x4, x2
     290:	b.ge	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.tcont
     294:	ldrb	w6, [x1, x4]
     298:	add	x5, x3, #0x2
     29c:	strb	w6, [x0, x4]
     2a0:	cmp	x2, x5
     2a4:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     2a8:	ldrb	w6, [x1, x5]
     2ac:	add	x4, x3, #0x3
     2b0:	strb	w6, [x0, x5]
     2b4:	cmp	x2, x4
     2b8:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     2bc:	ldrb	w6, [x1, x4]
     2c0:	add	x5, x3, #0x4
     2c4:	strb	w6, [x0, x4]
     2c8:	cmp	x2, x5
     2cc:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     2d0:	ldrb	w6, [x1, x5]
     2d4:	add	x4, x3, #0x5
     2d8:	strb	w6, [x0, x5]
     2dc:	cmp	x2, x4
     2e0:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     2e4:	ldrb	w6, [x1, x4]
     2e8:	add	x5, x3, #0x6
     2ec:	strb	w6, [x0, x4]
     2f0:	cmp	x2, x5
     2f4:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     2f8:	ldrb	w6, [x1, x5]
     2fc:	add	x4, x3, #0x7
     300:	strb	w6, [x0, x5]
     304:	cmp	x2, x4
     308:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     30c:	ldrb	w6, [x1, x4]
     310:	add	x5, x3, #0x8
     314:	strb	w6, [x0, x4]
     318:	cmp	x2, x5
     31c:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     320:	ldrb	w6, [x1, x5]
     324:	add	x4, x3, #0x9
     328:	strb	w6, [x0, x5]
     32c:	cmp	x2, x4
     330:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     334:	ldrb	w6, [x1, x4]
     338:	add	x5, x3, #0xa
     33c:	strb	w6, [x0, x4]
     340:	cmp	x2, x5
     344:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     348:	ldrb	w6, [x1, x5]
     34c:	add	x4, x3, #0xb
     350:	strb	w6, [x0, x5]
     354:	cmp	x2, x4
     358:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     35c:	ldrb	w6, [x1, x4]
     360:	add	x5, x3, #0xc
     364:	strb	w6, [x0, x4]
     368:	cmp	x2, x5
     36c:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     370:	ldrb	w6, [x1, x5]
     374:	add	x4, x3, #0xd
     378:	strb	w6, [x0, x5]
     37c:	cmp	x2, x4
     380:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     384:	ldrb	w5, [x1, x4]
     388:	add	x3, x3, #0xe
     38c:	strb	w5, [x0, x4]
     390:	cmp	x2, x3
     394:	b.le	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     398:	ldrb	w1, [x1, x3]
     39c:	strb	w1, [x0, x3]
     3a0:	ret
     3a4:	cmp	x2, #0x0
     3a8:	ccmp	x0, x1, #0x0, gt
     3ac:	b.ls	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.plast
     3b0:	sub	x4, x2, #0x10
     3b4:	add	x3, x0, x2
     3b8:	add	x7, x1, x4
     3bc:	add	x4, x0, x4
     3c0:	cmp	x3, x7
     3c4:	add	x3, x1, x2
     3c8:	ccmp	x3, x4, #0x0, hi  // hi = pmore
     3cc:	sub	x5, x2, #0x1
     3d0:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
     3d4:	b.ls	524 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x2f4>  // b.plast
     3d8:	neg	x6, x2, lsr #4
     3dc:	mov	x3, #0x0                   	// #0
     3e0:	lsl	x6, x6, #4
     3e4:	nop
     3e8:	ldr	q0, [x7, x3]
     3ec:	str	q0, [x4, x3]
     3f0:	sub	x3, x3, #0x10
     3f4:	cmp	x3, x6
     3f8:	b.ne	3e8 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x1b8>  // b.any
     3fc:	and	x4, x2, #0xfffffffffffffff0
     400:	sub	x3, x5, x4
     404:	cmp	x2, x4
     408:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     40c:	ldrb	w4, [x1, x3]
     410:	sub	x2, x3, #0x1
     414:	strb	w4, [x0, x3]
     418:	cbz	x3, 3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     41c:	ldrb	w4, [x1, x2]
     420:	cmp	x3, #0x1
     424:	strb	w4, [x0, x2]
     428:	sub	x2, x3, #0x2
     42c:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     430:	ldrb	w4, [x1, x2]
     434:	cmp	x3, #0x2
     438:	strb	w4, [x0, x2]
     43c:	sub	x2, x3, #0x3
     440:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     444:	ldrb	w4, [x1, x2]
     448:	cmp	x3, #0x3
     44c:	strb	w4, [x0, x2]
     450:	sub	x2, x3, #0x4
     454:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     458:	ldrb	w4, [x1, x2]
     45c:	cmp	x3, #0x4
     460:	strb	w4, [x0, x2]
     464:	sub	x2, x3, #0x5
     468:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     46c:	ldrb	w4, [x1, x2]
     470:	cmp	x3, #0x5
     474:	strb	w4, [x0, x2]
     478:	sub	x2, x3, #0x6
     47c:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     480:	ldrb	w4, [x1, x2]
     484:	cmp	x3, #0x6
     488:	strb	w4, [x0, x2]
     48c:	sub	x2, x3, #0x7
     490:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     494:	ldrb	w4, [x1, x2]
     498:	cmp	x3, #0x7
     49c:	strb	w4, [x0, x2]
     4a0:	sub	x2, x3, #0x8
     4a4:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     4a8:	ldrb	w4, [x1, x2]
     4ac:	cmp	x3, #0x8
     4b0:	strb	w4, [x0, x2]
     4b4:	sub	x2, x3, #0x9
     4b8:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     4bc:	ldrb	w4, [x1, x2]
     4c0:	cmp	x3, #0x9
     4c4:	strb	w4, [x0, x2]
     4c8:	sub	x2, x3, #0xa
     4cc:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     4d0:	ldrb	w4, [x1, x2]
     4d4:	cmp	x3, #0xa
     4d8:	strb	w4, [x0, x2]
     4dc:	sub	x2, x3, #0xb
     4e0:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     4e4:	ldrb	w4, [x1, x2]
     4e8:	cmp	x3, #0xb
     4ec:	strb	w4, [x0, x2]
     4f0:	sub	x2, x3, #0xc
     4f4:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     4f8:	ldrb	w4, [x1, x2]
     4fc:	cmp	x3, #0xc
     500:	strb	w4, [x0, x2]
     504:	sub	x2, x3, #0xd
     508:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     50c:	ldrb	w4, [x1, x2]
     510:	cmp	x3, #0xd
     514:	strb	w4, [x0, x2]
     518:	sub	x3, x3, #0xe
     51c:	b.ne	398 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x168>  // b.any
     520:	ret
     524:	ldrb	w2, [x1, x5]
     528:	strb	w2, [x0, x5]
     52c:	sub	x5, x5, #0x1
     530:	cmn	x5, #0x1
     534:	b.eq	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>  // b.none
     538:	ldrb	w2, [x1, x5]
     53c:	strb	w2, [x0, x5]
     540:	sub	x5, x5, #0x1
     544:	cmn	x5, #0x1
     548:	b.ne	524 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x2f4>  // b.any
     54c:	b	3a0 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x170>
     550:	mov	x3, #0x0                   	// #0
     554:	nop
     558:	ldrb	w4, [x1, x3]
     55c:	strb	w4, [x0, x3]
     560:	add	x3, x3, #0x1
     564:	cmp	x2, x3
     568:	b.ne	558 <_ZN11__sanitizer16internal_memmoveEPvPKvm+0x328>  // b.any
     56c:	ret

0000000000000570 <_ZN11__sanitizer15internal_memsetEPvim>:
     570:	orr	x3, x0, x2
     574:	ands	x3, x3, #0xf
     578:	b.eq	5a0 <_ZN11__sanitizer15internal_memsetEPvim+0x30>  // b.none
     57c:	cbz	x2, 59c <_ZN11__sanitizer15internal_memsetEPvim+0x2c>
     580:	and	w3, w1, #0xff
     584:	add	x2, x0, x2
     588:	mov	x1, x0
     58c:	nop
     590:	strb	w3, [x1], #1
     594:	cmp	x1, x2
     598:	b.ne	590 <_ZN11__sanitizer15internal_memsetEPvim+0x20>  // b.any
     59c:	ret
     5a0:	sxtw	x4, w1
     5a4:	sbfiz	x1, x1, #8, #32
     5a8:	orr	x1, x4, x1
     5ac:	and	x2, x2, #0xfffffffffffffff8
     5b0:	add	x4, x0, x2
     5b4:	orr	x1, x1, x1, lsl #16
     5b8:	cmp	x0, x4
     5bc:	orr	x4, x1, x1, lsl #32
     5c0:	b.cs	59c <_ZN11__sanitizer15internal_memsetEPvim+0x2c>  // b.hs, b.nlast
     5c4:	sub	x1, x2, #0x1
     5c8:	dup	v0.2d, x4
     5cc:	lsr	x1, x1, #4
     5d0:	add	x1, x1, #0x1
     5d4:	nop
     5d8:	lsl	x2, x3, #4
     5dc:	add	x3, x3, #0x1
     5e0:	cmp	x1, x3
     5e4:	str	q0, [x0, x2]
     5e8:	b.hi	5d8 <_ZN11__sanitizer15internal_memsetEPvim+0x68>  // b.pmore
     5ec:	ret

00000000000005f0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>:
     5f0:	ldrb	w4, [x0]
     5f4:	mov	x6, x0
     5f8:	cbz	w4, 63c <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x4c>
     5fc:	ldrb	w5, [x1]
     600:	mov	x0, #0x0                   	// #0
     604:	nop
     608:	cmp	w4, w5
     60c:	b.eq	628 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x38>  // b.none
     610:	mov	w2, w5
     614:	mov	x3, x1
     618:	cbz	w2, 62c <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x3c>
     61c:	ldrb	w2, [x3, #1]!
     620:	cmp	w4, w2
     624:	b.ne	618 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x28>  // b.any
     628:	ret
     62c:	add	x0, x0, #0x1
     630:	ldrb	w4, [x6, x0]
     634:	cbnz	w4, 608 <_ZN11__sanitizer16internal_strcspnEPKcS1_+0x18>
     638:	ret
     63c:	mov	x0, #0x0                   	// #0
     640:	ret
     644:	nop

0000000000000648 <_ZN11__sanitizer15internal_strdupEPKc>:
     648:	stp	x19, x20, [sp, #-32]!
     64c:	mov	x20, x0
     650:	str	x30, [sp, #24]
     654:	ldrb	w0, [x0]
     658:	cbz	w0, 820 <_ZN11__sanitizer15internal_strdupEPKc+0x1d8>
     65c:	mov	x19, #0x0                   	// #0
     660:	str	x21, [sp, #16]
     664:	nop
     668:	mov	x21, x19
     66c:	add	x19, x19, #0x1
     670:	ldrb	w0, [x20, x19]
     674:	cbnz	w0, 668 <_ZN11__sanitizer15internal_strdupEPKc+0x20>
     678:	mov	x1, #0x0                   	// #0
     67c:	add	x0, x21, #0x2
     680:	mov	x2, #0x0                   	// #0
     684:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     688:	add	x1, x20, #0xf
     68c:	sub	x1, x1, x0
     690:	cmp	x1, #0x1e
     694:	ccmp	x21, #0xe, #0x0, hi  // hi = pmore
     698:	b.ls	800 <_ZN11__sanitizer15internal_strdupEPKc+0x1b8>  // b.plast
     69c:	and	x2, x19, #0xfffffffffffffff0
     6a0:	mov	x1, #0x0                   	// #0
     6a4:	nop
     6a8:	ldr	q0, [x20, x1]
     6ac:	str	q0, [x0, x1]
     6b0:	add	x1, x1, #0x10
     6b4:	cmp	x1, x2
     6b8:	b.ne	6a8 <_ZN11__sanitizer15internal_strdupEPKc+0x60>  // b.any
     6bc:	tst	x19, #0xf
     6c0:	and	x1, x19, #0xfffffffffffffff0
     6c4:	b.eq	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.none
     6c8:	ldrb	w3, [x20, x1]
     6cc:	add	x2, x1, #0x1
     6d0:	strb	w3, [x0, x1]
     6d4:	cmp	x19, x2
     6d8:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     6dc:	ldrb	w4, [x20, x2]
     6e0:	add	x3, x1, #0x2
     6e4:	strb	w4, [x0, x2]
     6e8:	cmp	x19, x3
     6ec:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     6f0:	ldrb	w4, [x20, x3]
     6f4:	add	x2, x1, #0x3
     6f8:	strb	w4, [x0, x3]
     6fc:	cmp	x19, x2
     700:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     704:	ldrb	w4, [x20, x2]
     708:	add	x3, x1, #0x4
     70c:	strb	w4, [x0, x2]
     710:	cmp	x19, x3
     714:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     718:	ldrb	w4, [x20, x3]
     71c:	add	x2, x1, #0x5
     720:	strb	w4, [x0, x3]
     724:	cmp	x19, x2
     728:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     72c:	ldrb	w4, [x20, x2]
     730:	add	x3, x1, #0x6
     734:	strb	w4, [x0, x2]
     738:	cmp	x19, x3
     73c:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     740:	ldrb	w4, [x20, x3]
     744:	add	x2, x1, #0x7
     748:	strb	w4, [x0, x3]
     74c:	cmp	x19, x2
     750:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     754:	ldrb	w4, [x20, x2]
     758:	add	x3, x1, #0x8
     75c:	strb	w4, [x0, x2]
     760:	cmp	x19, x3
     764:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     768:	ldrb	w4, [x20, x3]
     76c:	add	x2, x1, #0x9
     770:	strb	w4, [x0, x3]
     774:	cmp	x19, x2
     778:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     77c:	ldrb	w4, [x20, x2]
     780:	add	x3, x1, #0xa
     784:	strb	w4, [x0, x2]
     788:	cmp	x19, x3
     78c:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     790:	ldrb	w4, [x20, x3]
     794:	add	x2, x1, #0xb
     798:	strb	w4, [x0, x3]
     79c:	cmp	x19, x2
     7a0:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     7a4:	ldrb	w4, [x20, x2]
     7a8:	add	x3, x1, #0xc
     7ac:	strb	w4, [x0, x2]
     7b0:	cmp	x19, x3
     7b4:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     7b8:	ldrb	w4, [x20, x3]
     7bc:	add	x2, x1, #0xd
     7c0:	strb	w4, [x0, x3]
     7c4:	cmp	x19, x2
     7c8:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     7cc:	ldrb	w3, [x20, x2]
     7d0:	add	x1, x1, #0xe
     7d4:	strb	w3, [x0, x2]
     7d8:	cmp	x19, x1
     7dc:	b.ls	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>  // b.plast
     7e0:	ldrb	w2, [x20, x1]
     7e4:	strb	w2, [x0, x1]
     7e8:	add	x19, x0, x19
     7ec:	ldr	x21, [sp, #16]
     7f0:	strb	wzr, [x19]
     7f4:	ldr	x30, [sp, #24]
     7f8:	ldp	x19, x20, [sp], #32
     7fc:	ret
     800:	mov	x1, #0x0                   	// #0
     804:	nop
     808:	ldrb	w3, [x20, x1]
     80c:	cmp	x21, x1
     810:	strb	w3, [x0, x1]
     814:	add	x1, x1, #0x1
     818:	b.ne	808 <_ZN11__sanitizer15internal_strdupEPKc+0x1c0>  // b.any
     81c:	b	7e8 <_ZN11__sanitizer15internal_strdupEPKc+0x1a0>
     820:	mov	x2, #0x0                   	// #0
     824:	mov	x1, #0x0                   	// #0
     828:	mov	x0, #0x1                   	// #1
     82c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     830:	mov	x19, x0
     834:	strb	wzr, [x19]
     838:	ldr	x30, [sp, #24]
     83c:	ldp	x19, x20, [sp], #32
     840:	ret
     844:	nop

0000000000000848 <_ZN11__sanitizer15internal_strcmpEPKcS1_>:
     848:	ldrb	w3, [x0]
     84c:	mov	x2, #0x1                   	// #1
     850:	ldrb	w4, [x1]
     854:	cmp	w4, w3
     858:	b.ne	878 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x30>  // b.any
     85c:	nop
     860:	cbz	w3, 888 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x40>
     864:	ldrb	w3, [x0, x2]
     868:	ldrb	w4, [x1, x2]
     86c:	add	x2, x2, #0x1
     870:	cmp	w3, w4
     874:	b.eq	860 <_ZN11__sanitizer15internal_strcmpEPKcS1_+0x18>  // b.none
     878:	cmp	w3, w4
     87c:	mov	w0, #0x1                   	// #1
     880:	cneg	w0, w0, cc  // cc = lo, ul, last
     884:	ret
     888:	mov	w0, #0x0                   	// #0
     88c:	ret

0000000000000890 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>:
     890:	cbz	x2, 8c8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x38>
     894:	mov	x3, #0x0                   	// #0
     898:	b	8a8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x18>
     89c:	cbz	w4, 8c8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x38>
     8a0:	cmp	x2, x3
     8a4:	b.eq	8c8 <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0x38>  // b.none
     8a8:	ldrb	w4, [x0, x3]
     8ac:	ldrb	w5, [x1, x3]
     8b0:	add	x3, x3, #0x1
     8b4:	cmp	w4, w5
     8b8:	b.eq	89c <_ZN11__sanitizer16internal_strncmpEPKcS1_m+0xc>  // b.none
     8bc:	mov	w0, #0x1                   	// #1
     8c0:	cneg	w0, w0, cc  // cc = lo, ul, last
     8c4:	ret
     8c8:	mov	w0, #0x0                   	// #0
     8cc:	ret

00000000000008d0 <_ZN11__sanitizer15internal_strchrEPKci>:
     8d0:	ldrb	w2, [x0]
     8d4:	and	w3, w1, #0xff
     8d8:	cmp	w2, w1, uxtb
     8dc:	b.eq	8f0 <_ZN11__sanitizer15internal_strchrEPKci+0x20>  // b.none
     8e0:	cbz	w2, 8f4 <_ZN11__sanitizer15internal_strchrEPKci+0x24>
     8e4:	ldrb	w2, [x0, #1]!
     8e8:	cmp	w2, w3
     8ec:	b.ne	8e0 <_ZN11__sanitizer15internal_strchrEPKci+0x10>  // b.any
     8f0:	ret
     8f4:	mov	x0, #0x0                   	// #0
     8f8:	ret
     8fc:	nop

0000000000000900 <_ZN11__sanitizer18internal_strchrnulEPKci>:
     900:	ldrb	w4, [x0]
     904:	mov	x2, x0
     908:	and	w3, w1, #0xff
     90c:	cmp	w4, w1, uxtb
     910:	b.eq	928 <_ZN11__sanitizer18internal_strchrnulEPKci+0x28>  // b.none
     914:	mov	w1, w4
     918:	cbz	w1, 92c <_ZN11__sanitizer18internal_strchrnulEPKci+0x2c>
     91c:	ldrb	w1, [x0, #1]!
     920:	cmp	w1, w3
     924:	b.ne	918 <_ZN11__sanitizer18internal_strchrnulEPKci+0x18>  // b.any
     928:	ret
     92c:	cbz	w4, 948 <_ZN11__sanitizer18internal_strchrnulEPKci+0x48>
     930:	add	x1, x2, #0x1
     934:	nop
     938:	mov	x0, x1
     93c:	ldrb	w2, [x1], #1
     940:	cbnz	w2, 938 <_ZN11__sanitizer18internal_strchrnulEPKci+0x38>
     944:	ret
     948:	mov	x0, x2
     94c:	ret

0000000000000950 <_ZN11__sanitizer16internal_strrchrEPKci>:
     950:	ldrb	w3, [x0]
     954:	mov	x2, x0
     958:	mov	x0, #0x0                   	// #0
     95c:	cbz	w3, 970 <_ZN11__sanitizer16internal_strrchrEPKci+0x20>
     960:	cmp	w1, w3
     964:	csel	x0, x0, x2, ne  // ne = any
     968:	ldrb	w3, [x2, #1]!
     96c:	cbnz	w3, 960 <_ZN11__sanitizer16internal_strrchrEPKci+0x10>
     970:	ret
     974:	nop

0000000000000978 <_ZN11__sanitizer15internal_strlenEPKc>:
     978:	mov	x2, x0
     97c:	ldrb	w0, [x0]
     980:	cbz	w0, 998 <_ZN11__sanitizer15internal_strlenEPKc+0x20>
     984:	mov	x0, #0x0                   	// #0
     988:	add	x0, x0, #0x1
     98c:	ldrb	w1, [x2, x0]
     990:	cbnz	w1, 988 <_ZN11__sanitizer15internal_strlenEPKc+0x10>
     994:	ret
     998:	mov	x0, #0x0                   	// #0
     99c:	ret

00000000000009a0 <_ZN11__sanitizer16internal_strlcatEPcPKcm>:
     9a0:	ldrb	w3, [x1]
     9a4:	mov	x4, #0x0                   	// #0
     9a8:	cbz	w3, 9bc <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1c>
     9ac:	nop
     9b0:	add	x4, x4, #0x1
     9b4:	ldrb	w3, [x1, x4]
     9b8:	cbnz	w3, 9b0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x10>
     9bc:	cbz	x2, ce0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x340>
     9c0:	mov	x3, #0x0                   	// #0
     9c4:	b	9d4 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x34>
     9c8:	add	x3, x3, #0x1
     9cc:	cmp	x2, x3
     9d0:	b.eq	ce0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x340>  // b.none
     9d4:	ldrb	w5, [x0, x3]
     9d8:	add	x7, x0, x3
     9dc:	cbnz	w5, 9c8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x28>
     9e0:	sub	x5, x2, x3
     9e4:	cmp	x5, x4
     9e8:	b.ls	b60 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1c0>  // b.plast
     9ec:	cmp	x1, x7
     9f0:	add	x5, x4, #0x1
     9f4:	b.ls	ce8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x348>  // b.plast
     9f8:	cmp	x5, #0x0
     9fc:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     a00:	add	x0, x1, #0xf
     a04:	sub	x0, x0, x7
     a08:	cmp	x0, #0x1e
     a0c:	ccmp	x4, #0xe, #0x0, hi  // hi = pmore
     a10:	b.ls	1068 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x6c8>  // b.plast
     a14:	and	x2, x5, #0xfffffffffffffff0
     a18:	mov	x0, #0x0                   	// #0
     a1c:	nop
     a20:	ldr	q0, [x1, x0]
     a24:	str	q0, [x7, x0]
     a28:	add	x0, x0, #0x10
     a2c:	cmp	x0, x2
     a30:	b.ne	a20 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x80>  // b.any
     a34:	tst	x5, #0xf
     a38:	and	x0, x5, #0xfffffffffffffff0
     a3c:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     a40:	ldrb	w6, [x1, x0]
     a44:	add	x2, x0, #0x1
     a48:	strb	w6, [x7, x0]
     a4c:	cmp	x5, x2
     a50:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     a54:	ldrb	w8, [x1, x2]
     a58:	add	x6, x0, #0x2
     a5c:	strb	w8, [x7, x2]
     a60:	cmp	x5, x6
     a64:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     a68:	ldrb	w8, [x1, x6]
     a6c:	add	x2, x0, #0x3
     a70:	strb	w8, [x7, x6]
     a74:	cmp	x5, x2
     a78:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     a7c:	ldrb	w8, [x1, x2]
     a80:	add	x6, x0, #0x4
     a84:	strb	w8, [x7, x2]
     a88:	cmp	x5, x6
     a8c:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     a90:	ldrb	w8, [x1, x6]
     a94:	add	x2, x0, #0x5
     a98:	strb	w8, [x7, x6]
     a9c:	cmp	x5, x2
     aa0:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     aa4:	ldrb	w8, [x1, x2]
     aa8:	add	x6, x0, #0x6
     aac:	strb	w8, [x7, x2]
     ab0:	cmp	x5, x6
     ab4:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     ab8:	ldrb	w8, [x1, x6]
     abc:	add	x2, x0, #0x7
     ac0:	strb	w8, [x7, x6]
     ac4:	cmp	x5, x2
     ac8:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     acc:	ldrb	w8, [x1, x2]
     ad0:	add	x6, x0, #0x8
     ad4:	strb	w8, [x7, x2]
     ad8:	cmp	x5, x6
     adc:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     ae0:	ldrb	w8, [x1, x6]
     ae4:	add	x2, x0, #0x9
     ae8:	strb	w8, [x7, x6]
     aec:	cmp	x5, x2
     af0:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     af4:	ldrb	w8, [x1, x2]
     af8:	add	x6, x0, #0xa
     afc:	strb	w8, [x7, x2]
     b00:	cmp	x5, x6
     b04:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     b08:	ldrb	w8, [x1, x6]
     b0c:	add	x2, x0, #0xb
     b10:	strb	w8, [x7, x6]
     b14:	cmp	x5, x2
     b18:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     b1c:	ldrb	w8, [x1, x2]
     b20:	add	x6, x0, #0xc
     b24:	strb	w8, [x7, x2]
     b28:	cmp	x5, x6
     b2c:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     b30:	ldrb	w8, [x1, x6]
     b34:	add	x2, x0, #0xd
     b38:	strb	w8, [x7, x6]
     b3c:	cmp	x5, x2
     b40:	b.le	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     b44:	ldrb	w6, [x1, x2]
     b48:	add	x0, x0, #0xe
     b4c:	strb	w6, [x7, x2]
     b50:	cmp	x5, x0
     b54:	b.gt	e60 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x4c0>
     b58:	add	x0, x4, x3
     b5c:	ret
     b60:	cmp	x1, x7
     b64:	sub	x8, x5, #0x1
     b68:	b.ls	e70 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x4d0>  // b.plast
     b6c:	cmp	x8, #0x0
     b70:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     b74:	add	x6, x1, #0xf
     b78:	sub	x5, x5, #0x2
     b7c:	sub	x6, x6, x7
     b80:	cmp	x6, #0x1e
     b84:	ccmp	x5, #0xe, #0x0, hi  // hi = pmore
     b88:	b.ls	104c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x6ac>  // b.plast
     b8c:	and	x6, x8, #0xfffffffffffffff0
     b90:	mov	x5, #0x0                   	// #0
     b94:	nop
     b98:	ldr	q0, [x1, x5]
     b9c:	str	q0, [x7, x5]
     ba0:	add	x5, x5, #0x10
     ba4:	cmp	x5, x6
     ba8:	b.ne	b98 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1f8>  // b.any
     bac:	tst	x8, #0xf
     bb0:	and	x5, x8, #0xfffffffffffffff0
     bb4:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     bb8:	ldrb	w9, [x1, x5]
     bbc:	add	x6, x5, #0x1
     bc0:	strb	w9, [x7, x5]
     bc4:	cmp	x8, x6
     bc8:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     bcc:	ldrb	w10, [x1, x6]
     bd0:	add	x9, x5, #0x2
     bd4:	strb	w10, [x7, x6]
     bd8:	cmp	x8, x9
     bdc:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     be0:	ldrb	w10, [x1, x9]
     be4:	add	x6, x5, #0x3
     be8:	strb	w10, [x7, x9]
     bec:	cmp	x8, x6
     bf0:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     bf4:	ldrb	w10, [x1, x6]
     bf8:	add	x9, x5, #0x4
     bfc:	strb	w10, [x7, x6]
     c00:	cmp	x8, x9
     c04:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c08:	ldrb	w10, [x1, x9]
     c0c:	add	x6, x5, #0x5
     c10:	strb	w10, [x7, x9]
     c14:	cmp	x8, x6
     c18:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c1c:	ldrb	w10, [x1, x6]
     c20:	add	x9, x5, #0x6
     c24:	strb	w10, [x7, x6]
     c28:	cmp	x8, x9
     c2c:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c30:	ldrb	w10, [x1, x9]
     c34:	add	x6, x5, #0x7
     c38:	strb	w10, [x7, x9]
     c3c:	cmp	x8, x6
     c40:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c44:	ldrb	w10, [x1, x6]
     c48:	add	x9, x5, #0x8
     c4c:	strb	w10, [x7, x6]
     c50:	cmp	x8, x9
     c54:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c58:	ldrb	w10, [x1, x9]
     c5c:	add	x6, x5, #0x9
     c60:	strb	w10, [x7, x9]
     c64:	cmp	x8, x6
     c68:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c6c:	ldrb	w10, [x1, x6]
     c70:	add	x9, x5, #0xa
     c74:	strb	w10, [x7, x6]
     c78:	cmp	x8, x9
     c7c:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c80:	ldrb	w10, [x1, x9]
     c84:	add	x6, x5, #0xb
     c88:	strb	w10, [x7, x9]
     c8c:	cmp	x8, x6
     c90:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     c94:	ldrb	w10, [x1, x6]
     c98:	add	x9, x5, #0xc
     c9c:	strb	w10, [x7, x6]
     ca0:	cmp	x8, x9
     ca4:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     ca8:	ldrb	w10, [x1, x9]
     cac:	add	x6, x5, #0xd
     cb0:	strb	w10, [x7, x9]
     cb4:	cmp	x8, x6
     cb8:	b.le	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     cbc:	ldrb	w9, [x1, x6]
     cc0:	add	x5, x5, #0xe
     cc4:	strb	w9, [x7, x6]
     cc8:	cmp	x8, x5
     ccc:	b.gt	fe8 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x648>
     cd0:	add	x0, x0, x2
     cd4:	sturb	wzr, [x0, #-1]
     cd8:	add	x0, x4, x3
     cdc:	b	b5c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1bc>
     ce0:	add	x0, x2, x4
     ce4:	ret
     ce8:	cmp	x5, #0x0
     cec:	ccmp	x1, x7, #0x2, gt
     cf0:	b.cs	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.hs, b.nlast
     cf4:	sub	x2, x4, #0xf
     cf8:	add	x0, x1, x5
     cfc:	add	x8, x7, x2
     d00:	add	x2, x1, x2
     d04:	cmp	x8, x0
     d08:	add	x0, x7, x5
     d0c:	ccmp	x0, x2, #0x0, cc  // cc = lo, ul, last
     d10:	mov	x0, x4
     d14:	ccmp	x4, #0xe, #0x0, ls  // ls = plast
     d18:	b.ls	ff4 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x654>  // b.plast
     d1c:	neg	x6, x5, lsr #4
     d20:	mov	x0, #0x0                   	// #0
     d24:	lsl	x6, x6, #4
     d28:	ldr	q0, [x2, x0]
     d2c:	str	q0, [x8, x0]
     d30:	sub	x0, x0, #0x10
     d34:	cmp	x0, x6
     d38:	b.ne	d28 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x388>  // b.any
     d3c:	and	x0, x5, #0xfffffffffffffff0
     d40:	cmp	x5, x0
     d44:	sub	x0, x4, x0
     d48:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     d4c:	ldrb	w5, [x1, x0]
     d50:	sub	x2, x0, #0x1
     d54:	strb	w5, [x7, x0]
     d58:	cbz	x0, b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
     d5c:	ldrb	w5, [x1, x2]
     d60:	cmp	x0, #0x1
     d64:	strb	w5, [x7, x2]
     d68:	sub	x2, x0, #0x2
     d6c:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     d70:	ldrb	w5, [x1, x2]
     d74:	cmp	x0, #0x2
     d78:	strb	w5, [x7, x2]
     d7c:	sub	x2, x0, #0x3
     d80:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     d84:	ldrb	w5, [x1, x2]
     d88:	cmp	x0, #0x3
     d8c:	strb	w5, [x7, x2]
     d90:	sub	x2, x0, #0x4
     d94:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     d98:	ldrb	w5, [x1, x2]
     d9c:	cmp	x0, #0x4
     da0:	strb	w5, [x7, x2]
     da4:	sub	x2, x0, #0x5
     da8:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     dac:	ldrb	w5, [x1, x2]
     db0:	cmp	x0, #0x5
     db4:	strb	w5, [x7, x2]
     db8:	sub	x2, x0, #0x6
     dbc:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     dc0:	ldrb	w5, [x1, x2]
     dc4:	cmp	x0, #0x6
     dc8:	strb	w5, [x7, x2]
     dcc:	sub	x2, x0, #0x7
     dd0:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     dd4:	ldrb	w5, [x1, x2]
     dd8:	cmp	x0, #0x7
     ddc:	strb	w5, [x7, x2]
     de0:	sub	x2, x0, #0x8
     de4:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     de8:	ldrb	w5, [x1, x2]
     dec:	cmp	x0, #0x8
     df0:	strb	w5, [x7, x2]
     df4:	sub	x2, x0, #0x9
     df8:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     dfc:	ldrb	w5, [x1, x2]
     e00:	cmp	x0, #0x9
     e04:	strb	w5, [x7, x2]
     e08:	sub	x2, x0, #0xa
     e0c:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     e10:	ldrb	w5, [x1, x2]
     e14:	cmp	x0, #0xa
     e18:	strb	w5, [x7, x2]
     e1c:	sub	x2, x0, #0xb
     e20:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     e24:	ldrb	w5, [x1, x2]
     e28:	cmp	x0, #0xb
     e2c:	strb	w5, [x7, x2]
     e30:	sub	x2, x0, #0xc
     e34:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     e38:	ldrb	w5, [x1, x2]
     e3c:	cmp	x0, #0xc
     e40:	strb	w5, [x7, x2]
     e44:	sub	x2, x0, #0xd
     e48:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     e4c:	ldrb	w5, [x1, x2]
     e50:	cmp	x0, #0xd
     e54:	strb	w5, [x7, x2]
     e58:	sub	x0, x0, #0xe
     e5c:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
     e60:	ldrb	w1, [x1, x0]
     e64:	strb	w1, [x7, x0]
     e68:	add	x0, x4, x3
     e6c:	b	b5c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1bc>
     e70:	cmp	x8, #0x0
     e74:	ccmp	x1, x7, #0x2, gt
     e78:	b.cs	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.hs, b.nlast
     e7c:	sub	x9, x5, #0x11
     e80:	add	x6, x1, x8
     e84:	add	x11, x7, x9
     e88:	add	x9, x1, x9
     e8c:	cmp	x6, x11
     e90:	add	x6, x7, x8
     e94:	sub	x5, x5, #0x2
     e98:	ccmp	x6, x9, #0x0, hi  // hi = pmore
     e9c:	ccmp	x5, #0xe, #0x0, ls  // ls = plast
     ea0:	b.ls	1020 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x680>  // b.plast
     ea4:	neg	x10, x8, lsr #4
     ea8:	mov	x6, #0x0                   	// #0
     eac:	lsl	x10, x10, #4
     eb0:	ldr	q0, [x9, x6]
     eb4:	str	q0, [x11, x6]
     eb8:	sub	x6, x6, #0x10
     ebc:	cmp	x6, x10
     ec0:	b.ne	eb0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x510>  // b.any
     ec4:	and	x6, x8, #0xfffffffffffffff0
     ec8:	sub	x5, x5, x6
     ecc:	cmp	x8, x6
     ed0:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     ed4:	ldrb	w8, [x1, x5]
     ed8:	sub	x6, x5, #0x1
     edc:	strb	w8, [x7, x5]
     ee0:	cbz	x5, cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     ee4:	ldrb	w8, [x1, x6]
     ee8:	cmp	x5, #0x1
     eec:	strb	w8, [x7, x6]
     ef0:	sub	x6, x5, #0x2
     ef4:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     ef8:	ldrb	w8, [x1, x6]
     efc:	cmp	x5, #0x2
     f00:	strb	w8, [x7, x6]
     f04:	sub	x6, x5, #0x3
     f08:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f0c:	ldrb	w8, [x1, x6]
     f10:	cmp	x5, #0x3
     f14:	strb	w8, [x7, x6]
     f18:	sub	x6, x5, #0x4
     f1c:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f20:	ldrb	w8, [x1, x6]
     f24:	cmp	x5, #0x4
     f28:	strb	w8, [x7, x6]
     f2c:	sub	x6, x5, #0x5
     f30:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f34:	ldrb	w8, [x1, x6]
     f38:	cmp	x5, #0x5
     f3c:	strb	w8, [x7, x6]
     f40:	sub	x6, x5, #0x6
     f44:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f48:	ldrb	w8, [x1, x6]
     f4c:	cmp	x5, #0x6
     f50:	strb	w8, [x7, x6]
     f54:	sub	x6, x5, #0x7
     f58:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f5c:	ldrb	w8, [x1, x6]
     f60:	cmp	x5, #0x7
     f64:	strb	w8, [x7, x6]
     f68:	sub	x6, x5, #0x8
     f6c:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f70:	ldrb	w8, [x1, x6]
     f74:	cmp	x5, #0x8
     f78:	strb	w8, [x7, x6]
     f7c:	sub	x6, x5, #0x9
     f80:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f84:	ldrb	w8, [x1, x6]
     f88:	cmp	x5, #0x9
     f8c:	strb	w8, [x7, x6]
     f90:	sub	x6, x5, #0xa
     f94:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     f98:	ldrb	w8, [x1, x6]
     f9c:	cmp	x5, #0xa
     fa0:	strb	w8, [x7, x6]
     fa4:	sub	x6, x5, #0xb
     fa8:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     fac:	ldrb	w8, [x1, x6]
     fb0:	cmp	x5, #0xb
     fb4:	strb	w8, [x7, x6]
     fb8:	sub	x6, x5, #0xc
     fbc:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     fc0:	ldrb	w8, [x1, x6]
     fc4:	cmp	x5, #0xc
     fc8:	strb	w8, [x7, x6]
     fcc:	sub	x6, x5, #0xd
     fd0:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     fd4:	ldrb	w8, [x1, x6]
     fd8:	cmp	x5, #0xd
     fdc:	strb	w8, [x7, x6]
     fe0:	sub	x5, x5, #0xe
     fe4:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
     fe8:	ldrb	w1, [x1, x5]
     fec:	strb	w1, [x7, x5]
     ff0:	b	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
     ff4:	ldrb	w2, [x1, x0]
     ff8:	strb	w2, [x7, x0]
     ffc:	sub	x0, x0, #0x1
    1000:	cmn	x0, #0x1
    1004:	b.eq	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>  // b.none
    1008:	ldrb	w2, [x1, x0]
    100c:	strb	w2, [x7, x0]
    1010:	sub	x0, x0, #0x1
    1014:	cmn	x0, #0x1
    1018:	b.ne	ff4 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x654>  // b.any
    101c:	b	b58 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1b8>
    1020:	ldrb	w6, [x1, x5]
    1024:	strb	w6, [x7, x5]
    1028:	sub	x5, x5, #0x1
    102c:	cmn	x5, #0x1
    1030:	b.eq	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>  // b.none
    1034:	ldrb	w6, [x1, x5]
    1038:	strb	w6, [x7, x5]
    103c:	sub	x5, x5, #0x1
    1040:	cmn	x5, #0x1
    1044:	b.ne	1020 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x680>  // b.any
    1048:	b	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
    104c:	mov	x5, #0x0                   	// #0
    1050:	ldrb	w6, [x1, x5]
    1054:	strb	w6, [x7, x5]
    1058:	add	x5, x5, #0x1
    105c:	cmp	x8, x5
    1060:	b.ne	1050 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x6b0>  // b.any
    1064:	b	cd0 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x330>
    1068:	mov	x0, #0x0                   	// #0
    106c:	nop
    1070:	ldrb	w2, [x1, x0]
    1074:	strb	w2, [x7, x0]
    1078:	add	x0, x0, #0x1
    107c:	cmp	x5, x0
    1080:	b.ne	1070 <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x6d0>  // b.any
    1084:	add	x0, x4, x3
    1088:	b	b5c <_ZN11__sanitizer16internal_strlcatEPcPKcm+0x1bc>
    108c:	nop

0000000000001090 <_ZN11__sanitizer16internal_strncatEPcPKcm>:
    1090:	ldrb	w3, [x0]
    1094:	mov	x4, #0x0                   	// #0
    1098:	cbz	w3, 10f8 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x68>
    109c:	nop
    10a0:	add	x4, x4, #0x1
    10a4:	add	x5, x0, x4
    10a8:	ldrb	w3, [x0, x4]
    10ac:	cbnz	w3, 10a0 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x10>
    10b0:	add	x6, x0, x4
    10b4:	mov	x3, #0x0                   	// #0
    10b8:	cbnz	x2, 10cc <_ZN11__sanitizer16internal_strncatEPcPKcm+0x3c>
    10bc:	b	10e0 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x50>
    10c0:	strb	w7, [x6]
    10c4:	add	x6, x6, #0x1
    10c8:	b.eq	10e8 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x58>  // b.none
    10cc:	ldrb	w7, [x1, x3]
    10d0:	add	x3, x3, #0x1
    10d4:	mov	x5, x6
    10d8:	cmp	x2, x3
    10dc:	cbnz	w7, 10c0 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x30>
    10e0:	strb	wzr, [x5]
    10e4:	ret
    10e8:	add	x4, x2, x4
    10ec:	add	x5, x0, x4
    10f0:	strb	wzr, [x5]
    10f4:	ret
    10f8:	mov	x5, x0
    10fc:	b	10b0 <_ZN11__sanitizer16internal_strncatEPcPKcm+0x20>

0000000000001100 <_ZN11__sanitizer16internal_strlcpyEPcPKcm>:
    1100:	mov	x4, x0
    1104:	ldrb	w0, [x1]
    1108:	cbz	w0, 1760 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x660>
    110c:	mov	x0, #0x0                   	// #0
    1110:	add	x0, x0, #0x1
    1114:	ldrb	w3, [x1, x0]
    1118:	cbnz	w3, 1110 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x10>
    111c:	cmp	x2, x0
    1120:	b.hi	12a8 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a8>  // b.pmore
    1124:	cbnz	x2, 112c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x2c>
    1128:	ret
    112c:	cmp	x1, x4
    1130:	sub	x5, x2, #0x1
    1134:	b.ls	15c8 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x4c8>  // b.plast
    1138:	cmp	x5, #0x0
    113c:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1140:	add	x3, x1, #0xf
    1144:	sub	x2, x2, #0x2
    1148:	sub	x3, x3, x4
    114c:	cmp	x3, #0x1e
    1150:	ccmp	x2, #0xe, #0x0, hi  // hi = pmore
    1154:	b.ls	1788 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x688>  // b.plast
    1158:	and	x3, x5, #0xfffffffffffffff0
    115c:	mov	x2, #0x0                   	// #0
    1160:	ldr	q0, [x1, x2]
    1164:	str	q0, [x4, x2]
    1168:	add	x2, x2, #0x10
    116c:	cmp	x2, x3
    1170:	b.ne	1160 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x60>  // b.any
    1174:	tst	x5, #0xf
    1178:	and	x2, x5, #0xfffffffffffffff0
    117c:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1180:	ldrb	w6, [x1, x2]
    1184:	add	x3, x2, #0x1
    1188:	strb	w6, [x4, x2]
    118c:	cmp	x5, x3
    1190:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1194:	ldrb	w7, [x1, x3]
    1198:	add	x6, x2, #0x2
    119c:	strb	w7, [x4, x3]
    11a0:	cmp	x5, x6
    11a4:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    11a8:	ldrb	w7, [x1, x6]
    11ac:	add	x3, x2, #0x3
    11b0:	strb	w7, [x4, x6]
    11b4:	cmp	x5, x3
    11b8:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    11bc:	ldrb	w7, [x1, x3]
    11c0:	add	x6, x2, #0x4
    11c4:	strb	w7, [x4, x3]
    11c8:	cmp	x5, x6
    11cc:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    11d0:	ldrb	w7, [x1, x6]
    11d4:	add	x3, x2, #0x5
    11d8:	strb	w7, [x4, x6]
    11dc:	cmp	x5, x3
    11e0:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    11e4:	ldrb	w7, [x1, x3]
    11e8:	add	x6, x2, #0x6
    11ec:	strb	w7, [x4, x3]
    11f0:	cmp	x5, x6
    11f4:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    11f8:	ldrb	w7, [x1, x6]
    11fc:	add	x3, x2, #0x7
    1200:	strb	w7, [x4, x6]
    1204:	cmp	x5, x3
    1208:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    120c:	ldrb	w7, [x1, x3]
    1210:	add	x6, x2, #0x8
    1214:	strb	w7, [x4, x3]
    1218:	cmp	x5, x6
    121c:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1220:	ldrb	w7, [x1, x6]
    1224:	add	x3, x2, #0x9
    1228:	strb	w7, [x4, x6]
    122c:	cmp	x5, x3
    1230:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1234:	ldrb	w6, [x1, x3]
    1238:	add	x7, x2, #0xa
    123c:	strb	w6, [x4, x3]
    1240:	cmp	x5, x7
    1244:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1248:	ldrb	w3, [x1, x7]
    124c:	add	x6, x2, #0xb
    1250:	strb	w3, [x4, x7]
    1254:	cmp	x5, x6
    1258:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    125c:	ldrb	w7, [x1, x6]
    1260:	add	x3, x2, #0xc
    1264:	strb	w7, [x4, x6]
    1268:	cmp	x5, x3
    126c:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1270:	ldrb	w7, [x1, x3]
    1274:	add	x6, x2, #0xd
    1278:	strb	w7, [x4, x3]
    127c:	cmp	x5, x6
    1280:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1284:	ldrb	w3, [x1, x6]
    1288:	add	x2, x2, #0xe
    128c:	strb	w3, [x4, x6]
    1290:	cmp	x5, x2
    1294:	b.le	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1298:	ldrb	w1, [x1, x2]
    129c:	strb	w1, [x4, x2]
    12a0:	strb	wzr, [x4, x5]
    12a4:	ret
    12a8:	cmp	x1, x4
    12ac:	add	x6, x0, #0x1
    12b0:	b.ls	141c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x31c>  // b.plast
    12b4:	cmp	x6, #0x0
    12b8:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    12bc:	add	x2, x1, #0xf
    12c0:	sub	x2, x2, x4
    12c4:	cmp	x2, #0x1e
    12c8:	ccmp	x0, #0xe, #0x0, hi  // hi = pmore
    12cc:	b.ls	1768 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x668>  // b.plast
    12d0:	and	x3, x6, #0xfffffffffffffff0
    12d4:	mov	x2, #0x0                   	// #0
    12d8:	ldr	q0, [x1, x2]
    12dc:	str	q0, [x4, x2]
    12e0:	add	x2, x2, #0x10
    12e4:	cmp	x2, x3
    12e8:	b.ne	12d8 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1d8>  // b.any
    12ec:	tst	x6, #0xf
    12f0:	and	x2, x6, #0xfffffffffffffff0
    12f4:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    12f8:	ldrb	w5, [x1, x2]
    12fc:	add	x3, x2, #0x1
    1300:	strb	w5, [x4, x2]
    1304:	cmp	x6, x3
    1308:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    130c:	ldrb	w7, [x1, x3]
    1310:	add	x5, x2, #0x2
    1314:	strb	w7, [x4, x3]
    1318:	cmp	x6, x5
    131c:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1320:	ldrb	w7, [x1, x5]
    1324:	add	x3, x2, #0x3
    1328:	strb	w7, [x4, x5]
    132c:	cmp	x6, x3
    1330:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1334:	ldrb	w7, [x1, x3]
    1338:	add	x5, x2, #0x4
    133c:	strb	w7, [x4, x3]
    1340:	cmp	x6, x5
    1344:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1348:	ldrb	w7, [x1, x5]
    134c:	add	x3, x2, #0x5
    1350:	strb	w7, [x4, x5]
    1354:	cmp	x6, x3
    1358:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    135c:	ldrb	w7, [x1, x3]
    1360:	add	x5, x2, #0x6
    1364:	strb	w7, [x4, x3]
    1368:	cmp	x6, x5
    136c:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1370:	ldrb	w7, [x1, x5]
    1374:	add	x3, x2, #0x7
    1378:	strb	w7, [x4, x5]
    137c:	cmp	x6, x3
    1380:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1384:	ldrb	w7, [x1, x3]
    1388:	add	x5, x2, #0x8
    138c:	strb	w7, [x4, x3]
    1390:	cmp	x6, x5
    1394:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1398:	ldrb	w7, [x1, x5]
    139c:	add	x3, x2, #0x9
    13a0:	strb	w7, [x4, x5]
    13a4:	cmp	x6, x3
    13a8:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    13ac:	ldrb	w7, [x1, x3]
    13b0:	add	x5, x2, #0xa
    13b4:	strb	w7, [x4, x3]
    13b8:	cmp	x6, x5
    13bc:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    13c0:	ldrb	w3, [x1, x5]
    13c4:	add	x7, x2, #0xb
    13c8:	strb	w3, [x4, x5]
    13cc:	cmp	x6, x7
    13d0:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    13d4:	ldrb	w5, [x1, x7]
    13d8:	add	x3, x2, #0xc
    13dc:	strb	w5, [x4, x7]
    13e0:	cmp	x6, x3
    13e4:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    13e8:	ldrb	w7, [x1, x3]
    13ec:	add	x5, x2, #0xd
    13f0:	strb	w7, [x4, x3]
    13f4:	cmp	x6, x5
    13f8:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    13fc:	ldrb	w3, [x1, x5]
    1400:	add	x2, x2, #0xe
    1404:	strb	w3, [x4, x5]
    1408:	cmp	x6, x2
    140c:	b.le	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1410:	ldrb	w1, [x1, x2]
    1414:	strb	w1, [x4, x2]
    1418:	ret
    141c:	cmp	x6, #0x0
    1420:	ccmp	x1, x4, #0x2, gt
    1424:	b.cs	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.hs, b.nlast
    1428:	sub	x3, x0, #0xf
    142c:	add	x2, x1, x6
    1430:	add	x7, x4, x3
    1434:	add	x3, x1, x3
    1438:	cmp	x2, x7
    143c:	add	x2, x4, x6
    1440:	ccmp	x2, x3, #0x0, hi  // hi = pmore
    1444:	mov	x2, x0
    1448:	ccmp	x0, #0xe, #0x0, ls  // ls = plast
    144c:	b.ls	159c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x49c>  // b.plast
    1450:	neg	x5, x6, lsr #4
    1454:	mov	x2, #0x0                   	// #0
    1458:	lsl	x5, x5, #4
    145c:	nop
    1460:	ldr	q0, [x3, x2]
    1464:	str	q0, [x7, x2]
    1468:	sub	x2, x2, #0x10
    146c:	cmp	x2, x5
    1470:	b.ne	1460 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x360>  // b.any
    1474:	and	x2, x6, #0xfffffffffffffff0
    1478:	cmp	x6, x2
    147c:	sub	x2, x0, x2
    1480:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1484:	ldrb	w5, [x1, x2]
    1488:	sub	x3, x2, #0x1
    148c:	strb	w5, [x4, x2]
    1490:	cbz	x2, 1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    1494:	ldrb	w5, [x1, x3]
    1498:	cmp	x2, #0x1
    149c:	strb	w5, [x4, x3]
    14a0:	sub	x3, x2, #0x2
    14a4:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    14a8:	ldrb	w5, [x1, x3]
    14ac:	cmp	x2, #0x2
    14b0:	strb	w5, [x4, x3]
    14b4:	sub	x3, x2, #0x3
    14b8:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    14bc:	ldrb	w5, [x1, x3]
    14c0:	cmp	x2, #0x3
    14c4:	strb	w5, [x4, x3]
    14c8:	sub	x3, x2, #0x4
    14cc:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    14d0:	ldrb	w5, [x1, x3]
    14d4:	cmp	x2, #0x4
    14d8:	strb	w5, [x4, x3]
    14dc:	sub	x3, x2, #0x5
    14e0:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    14e4:	ldrb	w5, [x1, x3]
    14e8:	cmp	x2, #0x5
    14ec:	strb	w5, [x4, x3]
    14f0:	sub	x3, x2, #0x6
    14f4:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    14f8:	ldrb	w5, [x1, x3]
    14fc:	cmp	x2, #0x6
    1500:	strb	w5, [x4, x3]
    1504:	sub	x3, x2, #0x7
    1508:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    150c:	ldrb	w5, [x1, x3]
    1510:	cmp	x2, #0x7
    1514:	strb	w5, [x4, x3]
    1518:	sub	x3, x2, #0x8
    151c:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1520:	ldrb	w5, [x1, x3]
    1524:	cmp	x2, #0x8
    1528:	strb	w5, [x4, x3]
    152c:	sub	x3, x2, #0x9
    1530:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1534:	ldrb	w5, [x1, x3]
    1538:	cmp	x2, #0x9
    153c:	strb	w5, [x4, x3]
    1540:	sub	x3, x2, #0xa
    1544:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1548:	ldrb	w5, [x1, x3]
    154c:	cmp	x2, #0xa
    1550:	strb	w5, [x4, x3]
    1554:	sub	x3, x2, #0xb
    1558:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    155c:	ldrb	w5, [x1, x3]
    1560:	cmp	x2, #0xb
    1564:	strb	w5, [x4, x3]
    1568:	sub	x3, x2, #0xc
    156c:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1570:	ldrb	w5, [x1, x3]
    1574:	cmp	x2, #0xc
    1578:	strb	w5, [x4, x3]
    157c:	sub	x3, x2, #0xd
    1580:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    1584:	ldrb	w5, [x1, x3]
    1588:	cmp	x2, #0xd
    158c:	strb	w5, [x4, x3]
    1590:	sub	x2, x2, #0xe
    1594:	b.ne	1410 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x310>  // b.any
    1598:	ret
    159c:	ldrb	w3, [x1, x2]
    15a0:	strb	w3, [x4, x2]
    15a4:	sub	x2, x2, #0x1
    15a8:	cmn	x2, #0x1
    15ac:	b.eq	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>  // b.none
    15b0:	ldrb	w3, [x1, x2]
    15b4:	strb	w3, [x4, x2]
    15b8:	sub	x2, x2, #0x1
    15bc:	cmn	x2, #0x1
    15c0:	b.ne	159c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x49c>  // b.any
    15c4:	b	1128 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x28>
    15c8:	cmp	x5, #0x0
    15cc:	ccmp	x1, x4, #0x2, gt
    15d0:	b.cs	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.hs, b.nlast
    15d4:	sub	x6, x2, #0x11
    15d8:	add	x3, x1, x5
    15dc:	add	x8, x4, x6
    15e0:	add	x6, x1, x6
    15e4:	cmp	x3, x8
    15e8:	add	x3, x4, x5
    15ec:	sub	x2, x2, #0x2
    15f0:	ccmp	x3, x6, #0x0, hi  // hi = pmore
    15f4:	ccmp	x2, #0xe, #0x0, ls  // ls = plast
    15f8:	b.ls	1748 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x648>  // b.plast
    15fc:	neg	x7, x5, lsr #4
    1600:	mov	x3, #0x0                   	// #0
    1604:	lsl	x7, x7, #4
    1608:	ldr	q0, [x6, x3]
    160c:	str	q0, [x8, x3]
    1610:	sub	x3, x3, #0x10
    1614:	cmp	x3, x7
    1618:	b.ne	1608 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x508>  // b.any
    161c:	and	x3, x5, #0xfffffffffffffff0
    1620:	sub	x2, x2, x3
    1624:	cmp	x5, x3
    1628:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    162c:	ldrb	w6, [x1, x2]
    1630:	sub	x3, x2, #0x1
    1634:	strb	w6, [x4, x2]
    1638:	cbz	x2, 12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    163c:	ldrb	w6, [x1, x3]
    1640:	cmp	x2, #0x1
    1644:	strb	w6, [x4, x3]
    1648:	sub	x3, x2, #0x2
    164c:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1650:	ldrb	w6, [x1, x3]
    1654:	cmp	x2, #0x2
    1658:	strb	w6, [x4, x3]
    165c:	sub	x3, x2, #0x3
    1660:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1664:	ldrb	w6, [x1, x3]
    1668:	cmp	x2, #0x3
    166c:	strb	w6, [x4, x3]
    1670:	sub	x3, x2, #0x4
    1674:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1678:	ldrb	w6, [x1, x3]
    167c:	cmp	x2, #0x4
    1680:	strb	w6, [x4, x3]
    1684:	sub	x3, x2, #0x5
    1688:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    168c:	ldrb	w6, [x1, x3]
    1690:	cmp	x2, #0x5
    1694:	strb	w6, [x4, x3]
    1698:	sub	x3, x2, #0x6
    169c:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    16a0:	ldrb	w6, [x1, x3]
    16a4:	cmp	x2, #0x6
    16a8:	strb	w6, [x4, x3]
    16ac:	sub	x3, x2, #0x7
    16b0:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    16b4:	ldrb	w6, [x1, x3]
    16b8:	cmp	x2, #0x7
    16bc:	strb	w6, [x4, x3]
    16c0:	sub	x3, x2, #0x8
    16c4:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    16c8:	ldrb	w6, [x1, x3]
    16cc:	cmp	x2, #0x8
    16d0:	strb	w6, [x4, x3]
    16d4:	sub	x3, x2, #0x9
    16d8:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    16dc:	ldrb	w6, [x1, x3]
    16e0:	cmp	x2, #0x9
    16e4:	strb	w6, [x4, x3]
    16e8:	sub	x3, x2, #0xa
    16ec:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    16f0:	ldrb	w6, [x1, x3]
    16f4:	cmp	x2, #0xa
    16f8:	strb	w6, [x4, x3]
    16fc:	sub	x3, x2, #0xb
    1700:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1704:	ldrb	w6, [x1, x3]
    1708:	cmp	x2, #0xb
    170c:	strb	w6, [x4, x3]
    1710:	sub	x3, x2, #0xc
    1714:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    1718:	ldrb	w6, [x1, x3]
    171c:	cmp	x2, #0xc
    1720:	strb	w6, [x4, x3]
    1724:	sub	x3, x2, #0xd
    1728:	b.eq	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>  // b.none
    172c:	ldrb	w6, [x1, x3]
    1730:	cmp	x2, #0xd
    1734:	strb	w6, [x4, x3]
    1738:	sub	x2, x2, #0xe
    173c:	b.ne	1298 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x198>  // b.any
    1740:	strb	wzr, [x4, x5]
    1744:	b	12a4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a4>
    1748:	ldrb	w3, [x1, x2]
    174c:	strb	w3, [x4, x2]
    1750:	sub	x2, x2, #0x1
    1754:	cmn	x2, #0x1
    1758:	b.ne	1748 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x648>  // b.any
    175c:	b	12a0 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a0>
    1760:	mov	x0, #0x0                   	// #0
    1764:	b	111c <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1c>
    1768:	mov	x2, #0x0                   	// #0
    176c:	nop
    1770:	ldrb	w3, [x1, x2]
    1774:	strb	w3, [x4, x2]
    1778:	add	x2, x2, #0x1
    177c:	cmp	x6, x2
    1780:	b.ne	1770 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x670>  // b.any
    1784:	ret
    1788:	mov	x2, #0x0                   	// #0
    178c:	nop
    1790:	ldrb	w3, [x1, x2]
    1794:	strb	w3, [x4, x2]
    1798:	add	x2, x2, #0x1
    179c:	cmp	x5, x2
    17a0:	b.ne	1790 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x690>  // b.any
    17a4:	strb	wzr, [x4, x5]
    17a8:	b	12a4 <_ZN11__sanitizer16internal_strlcpyEPcPKcm+0x1a4>
    17ac:	nop

00000000000017b0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>:
    17b0:	cbz	x2, 17fc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x4c>
    17b4:	mov	x3, #0x0                   	// #0
    17b8:	b	17cc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x1c>
    17bc:	strb	w5, [x0, x3]
    17c0:	add	x3, x3, #0x1
    17c4:	cmp	x2, x3
    17c8:	b.eq	17fc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x4c>  // b.none
    17cc:	ldrb	w5, [x1, x3]
    17d0:	add	x4, x0, x3
    17d4:	cbnz	w5, 17bc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0xc>
    17d8:	sub	x2, x2, x3
    17dc:	orr	x3, x2, x4
    17e0:	ands	x3, x3, #0xf
    17e4:	b.eq	1800 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x50>  // b.none
    17e8:	cbz	x2, 17fc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x4c>
    17ec:	add	x2, x4, x2
    17f0:	strb	wzr, [x4], #1
    17f4:	cmp	x4, x2
    17f8:	b.ne	17f0 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x40>  // b.any
    17fc:	ret
    1800:	and	x2, x2, #0xfffffffffffffff8
    1804:	add	x1, x4, x2
    1808:	cmp	x1, x4
    180c:	b.ls	17fc <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x4c>  // b.plast
    1810:	movi	v0.4s, #0x0
    1814:	mvn	x2, x4
    1818:	add	x1, x1, x2
    181c:	lsr	x1, x1, #4
    1820:	add	x1, x1, #0x1
    1824:	nop
    1828:	lsl	x2, x3, #4
    182c:	add	x3, x3, #0x1
    1830:	cmp	x3, x1
    1834:	str	q0, [x4, x2]
    1838:	b.cc	1828 <_ZN11__sanitizer16internal_strncpyEPcPKcm+0x78>  // b.lo, b.ul, b.last
    183c:	ret

0000000000001840 <_ZN11__sanitizer16internal_strnlenEPKcm>:
    1840:	mov	x3, x0
    1844:	mov	x0, #0x0                   	// #0
    1848:	cbnz	x1, 185c <_ZN11__sanitizer16internal_strnlenEPKcm+0x1c>
    184c:	b	1864 <_ZN11__sanitizer16internal_strnlenEPKcm+0x24>
    1850:	add	x0, x0, #0x1
    1854:	cmp	x1, x0
    1858:	b.eq	1864 <_ZN11__sanitizer16internal_strnlenEPKcm+0x24>  // b.none
    185c:	ldrb	w2, [x3, x0]
    1860:	cbnz	w2, 1850 <_ZN11__sanitizer16internal_strnlenEPKcm+0x10>
    1864:	ret

0000000000001868 <_ZN11__sanitizer15internal_strstrEPKcS1_>:
    1868:	mov	x8, x0
    186c:	ldrb	w0, [x0]
    1870:	mov	x2, #0x0                   	// #0
    1874:	cbz	w0, 1884 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x1c>
    1878:	add	x2, x2, #0x1
    187c:	ldrb	w3, [x8, x2]
    1880:	cbnz	w3, 1878 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x10>
    1884:	ldrb	w0, [x1]
    1888:	cbz	w0, 18f0 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x88>
    188c:	mov	x3, #0x0                   	// #0
    1890:	mov	x4, x3
    1894:	add	x3, x3, #0x1
    1898:	ldrb	w5, [x1, x3]
    189c:	cbnz	w5, 1890 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x28>
    18a0:	cmp	x3, x2
    18a4:	b.hi	18e8 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x80>  // b.pmore
    18a8:	sub	x3, x2, x3
    18ac:	mov	x9, #0x0                   	// #0
    18b0:	add	x0, x8, x9
    18b4:	mov	x2, #0x0                   	// #0
    18b8:	b	18c8 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x60>
    18bc:	cmp	x4, x2
    18c0:	b.eq	18ec <_ZN11__sanitizer15internal_strstrEPKcS1_+0x84>  // b.none
    18c4:	mov	x2, x7
    18c8:	ldrb	w6, [x0, x2]
    18cc:	add	x7, x2, #0x1
    18d0:	ldrb	w5, [x1, x2]
    18d4:	cmp	w6, w5
    18d8:	b.eq	18bc <_ZN11__sanitizer15internal_strstrEPKcS1_+0x54>  // b.none
    18dc:	add	x9, x9, #0x1
    18e0:	cmp	x3, x9
    18e4:	b.cs	18b0 <_ZN11__sanitizer15internal_strstrEPKcS1_+0x48>  // b.hs, b.nlast
    18e8:	mov	x0, #0x0                   	// #0
    18ec:	ret
    18f0:	mov	x0, x8
    18f4:	ret

00000000000018f8 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>:
    18f8:	cmp	w2, #0xa
    18fc:	b.ne	19f0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xf8>  // b.any
    1900:	ldrb	w2, [x0]
    1904:	cmp	w2, #0x20
    1908:	b.eq	19b0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xb8>  // b.none
    190c:	sub	w3, w2, #0x9
    1910:	and	w3, w3, #0xff
    1914:	cmp	w3, #0x4
    1918:	b.ls	19b0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xb8>  // b.plast
    191c:	cmp	w2, #0x2b
    1920:	b.eq	19dc <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xe4>  // b.none
    1924:	cmp	w2, #0x2d
    1928:	b.eq	19b8 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xc0>  // b.none
    192c:	mov	w4, w2
    1930:	mov	x5, x0
    1934:	mov	w8, #0x1                   	// #1
    1938:	sub	w2, w2, #0x30
    193c:	cmp	w2, #0x9
    1940:	b.hi	1a14 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x11c>  // b.pmore
    1944:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
    1948:	mov	x3, #0x0                   	// #0
    194c:	movk	x7, #0x1999, lsl #48
    1950:	mov	x6, #0xffffffffffffffff    	// #-1
    1954:	nop
    1958:	sub	w0, w4, #0x30
    195c:	add	x2, x3, x3, lsl #2
    1960:	cmp	x3, x7
    1964:	ldrb	w4, [x5, #1]!
    1968:	sxtw	x0, w0
    196c:	lsl	x2, x2, #1
    1970:	csel	x2, x2, x6, ls  // ls = plast
    1974:	mvn	x3, x0
    1978:	cmp	x3, x2
    197c:	add	x0, x0, x2
    1980:	sub	w2, w4, #0x30
    1984:	csel	x3, x0, x6, cs  // cs = hs, nlast
    1988:	cmp	w2, #0x9
    198c:	b.ls	1958 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x60>  // b.plast
    1990:	cbz	x1, 1998 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xa0>
    1994:	str	x5, [x1]
    1998:	cmp	w8, #0x1
    199c:	b.ne	19cc <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0xd4>  // b.any
    19a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    19a4:	cmp	x3, x0
    19a8:	csel	x0, x3, x0, ls  // ls = plast
    19ac:	ret
    19b0:	add	x0, x0, #0x1
    19b4:	b	1900 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x8>
    19b8:	ldrb	w2, [x0, #1]
    19bc:	add	x5, x0, #0x1
    19c0:	mov	w8, #0xffffffff            	// #-1
    19c4:	mov	w4, w2
    19c8:	b	1938 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x40>
    19cc:	cmp	x3, #0x0
    19d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    19d4:	csneg	x0, x0, x3, lt  // lt = tstop
    19d8:	ret
    19dc:	ldrb	w2, [x0, #1]
    19e0:	add	x5, x0, #0x1
    19e4:	mov	w8, #0x1                   	// #1
    19e8:	mov	w4, w2
    19ec:	b	1938 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x40>
    19f0:	str	x30, [sp, #-16]!
    19f4:	sxtw	x3, w2
    19f8:	adrp	x0, 0 <_ZN11__sanitizer15internal_memchrEPKvim>
    19fc:	adrp	x2, 0 <_ZN11__sanitizer15internal_memchrEPKvim>
    1a00:	add	x0, x0, #0x0
    1a04:	add	x2, x2, #0x0
    1a08:	mov	x4, #0xa                   	// #10
    1a0c:	mov	w1, #0xe7                  	// #231
    1a10:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1a14:	mov	x5, x0
    1a18:	mov	x3, #0x0                   	// #0
    1a1c:	cbnz	x1, 1994 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i+0x9c>
    1a20:	mov	x0, #0x0                   	// #0
    1a24:	ret

0000000000001a28 <_ZN11__sanitizer14internal_atollEPKc>:
    1a28:	mov	w2, #0xa                   	// #10
    1a2c:	mov	x1, #0x0                   	// #0
    1a30:	b	18f8 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
    1a34:	nop

0000000000001a38 <_ZN11__sanitizer11mem_is_zeroEPKcm>:
    1a38:	mov	x4, #0x10000000000         	// #1099511627776
    1a3c:	cmp	x1, x4
    1a40:	b.hi	1d50 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x318>  // b.pmore
    1a44:	add	x4, x0, x1
    1a48:	add	x2, x0, #0x7
    1a4c:	and	x2, x2, #0xfffffffffffffff8
    1a50:	cmp	x0, x4
    1a54:	and	x6, x4, #0xfffffffffffffff8
    1a58:	ccmp	x0, x2, #0x2, cc  // cc = lo, ul, last
    1a5c:	mov	x8, x2
    1a60:	mov	x7, x6
    1a64:	mov	x1, x0
    1a68:	mov	x3, #0x0                   	// #0
    1a6c:	b.cs	1a84 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x4c>  // b.hs, b.nlast
    1a70:	ldrb	w5, [x1], #1
    1a74:	cmp	x2, x1
    1a78:	orr	x3, x3, x5
    1a7c:	ccmp	x4, x1, #0x0, hi  // hi = pmore
    1a80:	b.hi	1a70 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x38>  // b.pmore
    1a84:	cmp	x2, x6
    1a88:	b.cs	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.hs, b.nlast
    1a8c:	sub	x1, x6, x2
    1a90:	add	x9, x2, #0x1
    1a94:	sub	x1, x1, #0x1
    1a98:	cmp	x6, x9
    1a9c:	mov	x10, #0x1                   	// #1
    1aa0:	lsr	x5, x1, #3
    1aa4:	csinc	x5, x10, x5, cc  // cc = lo, ul, last
    1aa8:	cmp	x1, #0x27
    1aac:	ccmp	x6, x9, #0x0, hi  // hi = pmore
    1ab0:	b.cc	1af4 <_ZN11__sanitizer11mem_is_zeroEPKcm+0xbc>  // b.lo, b.ul, b.last
    1ab4:	movi	v0.4s, #0x0
    1ab8:	lsr	x1, x5, #1
    1abc:	add	x1, x2, x1, lsl #4
    1ac0:	ldr	q1, [x2], #16
    1ac4:	orr	v0.16b, v0.16b, v1.16b
    1ac8:	cmp	x2, x1
    1acc:	b.ne	1ac0 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x88>  // b.any
    1ad0:	movi	v1.4s, #0x0
    1ad4:	and	x1, x5, #0xfffffffffffffffe
    1ad8:	cmp	x5, x1
    1adc:	add	x8, x8, x1, lsl #3
    1ae0:	ext	v1.16b, v0.16b, v1.16b, #8
    1ae4:	orr	v0.16b, v0.16b, v1.16b
    1ae8:	mov	x1, v0.d[0]
    1aec:	orr	x3, x3, x1
    1af0:	b.eq	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.none
    1af4:	mov	x1, x8
    1af8:	ldr	x2, [x1], #8
    1afc:	orr	x3, x3, x2
    1b00:	cmp	x6, x1
    1b04:	b.ls	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.plast
    1b08:	ldr	x1, [x8, #8]
    1b0c:	add	x2, x8, #0x10
    1b10:	cmp	x6, x2
    1b14:	orr	x3, x3, x1
    1b18:	b.ls	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.plast
    1b1c:	ldr	x1, [x8, #16]
    1b20:	add	x2, x8, #0x18
    1b24:	cmp	x6, x2
    1b28:	orr	x3, x3, x1
    1b2c:	b.ls	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.plast
    1b30:	ldr	x1, [x8, #24]
    1b34:	add	x2, x8, #0x20
    1b38:	cmp	x6, x2
    1b3c:	orr	x3, x3, x1
    1b40:	b.ls	1b4c <_ZN11__sanitizer11mem_is_zeroEPKcm+0x114>  // b.plast
    1b44:	ldr	x1, [x8, #32]
    1b48:	orr	x3, x3, x1
    1b4c:	cmp	x0, x6
    1b50:	b.hi	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.pmore
    1b54:	cmp	x4, x6
    1b58:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1b5c:	add	x1, x6, #0x1
    1b60:	sub	x0, x4, #0x1
    1b64:	cmp	x4, x1
    1b68:	sub	x2, x4, x6
    1b6c:	sub	x0, x0, x6
    1b70:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
    1b74:	cmp	x0, #0xe
    1b78:	ccmp	x4, x1, #0x0, hi  // hi = pmore
    1b7c:	b.cc	1c24 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x1ec>  // b.lo, b.ul, b.last
    1b80:	sub	x1, x2, #0x10
    1b84:	mov	x0, #0x0                   	// #0
    1b88:	movi	v5.4s, #0x0
    1b8c:	lsr	x1, x1, #4
    1b90:	add	x1, x1, #0x1
    1b94:	nop
    1b98:	ldr	q2, [x6], #16
    1b9c:	add	x0, x0, #0x1
    1ba0:	cmp	x1, x0
    1ba4:	uxtl	v3.8h, v2.8b
    1ba8:	uxtl2	v2.8h, v2.16b
    1bac:	uxtl	v0.4s, v3.4h
    1bb0:	uxtl2	v3.4s, v3.8h
    1bb4:	uxtl	v4.4s, v2.4h
    1bb8:	uxtl2	v2.4s, v2.8h
    1bbc:	uxtl	v1.2d, v0.2s
    1bc0:	uxtl2	v0.2d, v0.4s
    1bc4:	uxtl	v16.2d, v3.2s
    1bc8:	uxtl2	v3.2d, v3.4s
    1bcc:	uxtl	v7.2d, v4.2s
    1bd0:	orr	v1.16b, v1.16b, v0.16b
    1bd4:	uxtl2	v4.2d, v4.4s
    1bd8:	uxtl	v6.2d, v2.2s
    1bdc:	uxtl2	v2.2d, v2.4s
    1be0:	orr	v0.16b, v1.16b, v16.16b
    1be4:	orr	v0.16b, v0.16b, v3.16b
    1be8:	orr	v0.16b, v0.16b, v7.16b
    1bec:	orr	v0.16b, v0.16b, v4.16b
    1bf0:	orr	v0.16b, v0.16b, v6.16b
    1bf4:	orr	v0.16b, v0.16b, v2.16b
    1bf8:	orr	v5.16b, v5.16b, v0.16b
    1bfc:	b.hi	1b98 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x160>  // b.pmore
    1c00:	movi	v0.4s, #0x0
    1c04:	lsl	x1, x1, #4
    1c08:	add	x7, x7, x1
    1c0c:	cmp	x2, x1
    1c10:	ext	v0.16b, v5.16b, v0.16b, #8
    1c14:	orr	v5.16b, v5.16b, v0.16b
    1c18:	mov	x0, v5.d[0]
    1c1c:	orr	x3, x3, x0
    1c20:	b.eq	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.none
    1c24:	mov	x0, x7
    1c28:	ldrb	w1, [x0], #1
    1c2c:	orr	x3, x3, x1
    1c30:	cmp	x4, x0
    1c34:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c38:	ldrb	w0, [x7, #1]
    1c3c:	add	x1, x7, #0x2
    1c40:	cmp	x4, x1
    1c44:	orr	x3, x3, x0
    1c48:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c4c:	ldrb	w0, [x7, #2]
    1c50:	add	x1, x7, #0x3
    1c54:	cmp	x4, x1
    1c58:	orr	x3, x3, x0
    1c5c:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c60:	ldrb	w0, [x7, #3]
    1c64:	add	x1, x7, #0x4
    1c68:	cmp	x4, x1
    1c6c:	orr	x3, x3, x0
    1c70:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c74:	ldrb	w0, [x7, #4]
    1c78:	add	x1, x7, #0x5
    1c7c:	cmp	x4, x1
    1c80:	orr	x3, x3, x0
    1c84:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c88:	ldrb	w0, [x7, #5]
    1c8c:	add	x1, x7, #0x6
    1c90:	cmp	x4, x1
    1c94:	orr	x3, x3, x0
    1c98:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1c9c:	ldrb	w0, [x7, #6]
    1ca0:	add	x1, x7, #0x7
    1ca4:	cmp	x4, x1
    1ca8:	orr	x3, x3, x0
    1cac:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1cb0:	ldrb	w0, [x7, #7]
    1cb4:	add	x1, x7, #0x8
    1cb8:	cmp	x4, x1
    1cbc:	orr	x3, x3, x0
    1cc0:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1cc4:	ldrb	w0, [x7, #8]
    1cc8:	add	x1, x7, #0x9
    1ccc:	cmp	x4, x1
    1cd0:	orr	x3, x3, x0
    1cd4:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1cd8:	ldrb	w0, [x7, #9]
    1cdc:	add	x1, x7, #0xa
    1ce0:	cmp	x4, x1
    1ce4:	orr	x3, x3, x0
    1ce8:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1cec:	ldrb	w0, [x7, #10]
    1cf0:	add	x1, x7, #0xb
    1cf4:	cmp	x4, x1
    1cf8:	orr	x3, x3, x0
    1cfc:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1d00:	ldrb	w0, [x7, #11]
    1d04:	add	x1, x7, #0xc
    1d08:	cmp	x4, x1
    1d0c:	orr	x3, x3, x0
    1d10:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1d14:	ldrb	w0, [x7, #12]
    1d18:	add	x1, x7, #0xd
    1d1c:	cmp	x4, x1
    1d20:	orr	x3, x3, x0
    1d24:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1d28:	ldrb	w0, [x7, #13]
    1d2c:	add	x1, x7, #0xe
    1d30:	cmp	x4, x1
    1d34:	orr	x3, x3, x0
    1d38:	b.ls	1d44 <_ZN11__sanitizer11mem_is_zeroEPKcm+0x30c>  // b.plast
    1d3c:	ldrb	w0, [x7, #14]
    1d40:	orr	x3, x3, x0
    1d44:	cmp	x3, #0x0
    1d48:	cset	w0, eq  // eq = none
    1d4c:	ret
    1d50:	str	x30, [sp, #-16]!
    1d54:	mov	x3, x1
    1d58:	adrp	x2, 0 <_ZN11__sanitizer15internal_memchrEPKvim>
    1d5c:	adrp	x0, 0 <_ZN11__sanitizer15internal_memchrEPKvim>
    1d60:	add	x2, x2, #0x0
    1d64:	add	x0, x0, #0x0
    1d68:	mov	w1, #0x106                 	// #262
    1d6c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_libignore.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>:
   0:	mov	x1, #0x4810                	// #18448
   4:	add	x0, x0, x1
   8:	b	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
   c:	nop

0000000000000010 <_ZN11__sanitizer9LibIgnore17AddIgnoredLibraryEPKc>:
  10:	stp	x19, x20, [sp, #-48]!
  14:	mov	x20, x0
  18:	stp	x21, x22, [sp, #16]
  1c:	mov	x21, x1
  20:	mov	x1, #0x4810                	// #18448
  24:	add	x22, x0, x1
  28:	str	x30, [sp, #32]
  2c:	mov	x0, x22
  30:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
  34:	ldr	x19, [x20, #18536]
  38:	cmp	x19, #0x3ff
  3c:	b.hi	80 <_ZN11__sanitizer9LibIgnore17AddIgnoredLibraryEPKc+0x70>  // b.pmore
  40:	add	x0, x19, #0x1
  44:	str	x0, [x20, #18536]
  48:	mov	x0, x21
  4c:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
  50:	mov	x3, x0
  54:	add	x1, x20, x19, lsl #5
  58:	mov	x0, x22
  5c:	add	x2, x1, #0x4, lsl #12
  60:	ldp	x21, x22, [sp, #16]
  64:	ldr	x30, [sp, #32]
  68:	str	x3, [x1, #18544]
  6c:	str	xzr, [x1, #18552]
  70:	str	xzr, [x1, #18560]
  74:	strb	wzr, [x2, #2184]
  78:	ldp	x19, x20, [sp], #48
  7c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
  80:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  84:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
  88:	add	x0, x0, #0x0
  8c:	mov	x2, #0x400                 	// #1024
  90:	ldr	x1, [x1]
  94:	ldr	x1, [x1]
  98:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  9c:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000000a0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc>:
  a0:	stp	x19, x20, [sp, #-160]!
  a4:	mov	x3, #0x4810                	// #18448
  a8:	mov	x20, x0
  ac:	stp	x21, x22, [sp, #16]
  b0:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  b4:	add	x0, x0, x3
  b8:	mov	x19, x1
  bc:	stp	x23, x24, [sp, #32]
  c0:	stp	x25, x26, [sp, #48]
  c4:	str	x30, [sp, #80]
  c8:	str	x0, [sp, #112]
  cc:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
  d0:	ldr	x22, [x21]
  d4:	ldr	x0, [x22]
  d8:	cbz	x0, 384 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2e4>
  dc:	sub	x1, x0, #0x1
  e0:	tst	x1, x0
  e4:	b.ne	424 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x384>  // b.any
  e8:	add	x25, x0, #0xfff
  ec:	neg	x0, x0
  f0:	and	x23, x25, x0
  f4:	mov	w2, #0x0                   	// #0
  f8:	mov	x0, x23
  fc:	adrp	x22, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 100:	add	x1, x22, #0x0
 104:	str	x23, [sp, #120]
 108:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 10c:	mov	x24, x0
 110:	mov	x2, #0x0                   	// #0
 114:	mov	x1, #0x0                   	// #0
 118:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 11c:	mov	x1, #0x0                   	// #0
 120:	mov	x0, #0x0                   	// #0
 124:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 128:	cmp	x23, #0xfff
 12c:	b.ls	390 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2f0>  // b.plast
 130:	mov	x0, x24
 134:	mov	x2, #0x1000                	// #4096
 138:	mov	w1, #0x0                   	// #0
 13c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 140:	strb	wzr, [x24]
 144:	cbz	x19, 168 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xc8>
 148:	mov	x1, x24
 14c:	mov	x0, x19
 150:	mov	x2, #0xfff                 	// #4095
 154:	bl	0 <_ZN11__sanitizer17internal_readlinkEPKcPcm>
 158:	cbz	x0, 168 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xc8>
 15c:	ldrb	w0, [x24]
 160:	cbnz	w0, 3ec <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x34c>
 164:	nop
 168:	add	x0, sp, #0x80
 16c:	strb	wzr, [sp, #152]
 170:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
 174:	ldr	x0, [x20, #18536]
 178:	cbz	x0, 28c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1ec>
 17c:	adrp	x22, 0 <_ZN11__sanitizer17current_verbosityE>
 180:	mov	x0, #0x4870                	// #18544
 184:	adrp	x26, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 188:	add	x19, x20, x0
 18c:	ldr	x22, [x22]
 190:	add	x0, x26, #0x0
 194:	stp	x27, x28, [sp, #64]
 198:	stp	x0, xzr, [sp, #96]
 19c:	ldr	x21, [sp, #144]
 1a0:	ldr	x5, [sp, #128]
 1a4:	add	x21, x21, x21, lsl #3
 1a8:	add	x21, x5, x21, lsl #3
 1ac:	cmp	x5, x21
 1b0:	b.eq	474 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3d4>  // b.none
 1b4:	mov	x28, x5
 1b8:	mov	w27, #0x0                   	// #0
 1bc:	mov	w23, #0x1                   	// #1
 1c0:	ldr	x26, [x28, #56]
 1c4:	cbz	x26, 24c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1ac>
 1c8:	ldrb	w25, [x26, #24]
 1cc:	cbz	w25, 330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x290>
 1d0:	ldr	x0, [x19]
 1d4:	ldr	x1, [x28]
 1d8:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 1dc:	tst	w0, #0xff
 1e0:	b.ne	1f8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x158>  // b.any
 1e4:	ldr	x0, [x19, #16]
 1e8:	cbz	x0, 330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x290>
 1ec:	ldr	x1, [x28]
 1f0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 1f4:	cbnz	w0, 330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x290>
 1f8:	cbnz	w27, 588 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x4e8>
 1fc:	ldrb	w27, [x19, #24]
 200:	cbnz	w27, 330 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x290>
 204:	ldr	w0, [x22]
 208:	cbnz	w0, 33c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x29c>
 20c:	strb	w23, [x19, #24]
 210:	ldr	x0, [x28]
 214:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 218:	ldr	x3, [x20]
 21c:	str	x0, [x19, #8]
 220:	cmp	x3, #0x7f
 224:	b.hi	368 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2c8>  // b.pmore
 228:	add	x0, x20, x3, lsl #4
 22c:	add	x3, x3, #0x1
 230:	ldr	x1, [x26, #8]
 234:	str	x1, [x0, #8]
 238:	ldr	x1, [x26, #16]
 23c:	str	x1, [x0, #16]
 240:	dmb	ish
 244:	str	x3, [x20]
 248:	mov	w27, w25
 24c:	add	x28, x28, #0x48
 250:	cmp	x21, x28
 254:	b.ne	1c0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x120>  // b.any
 258:	ldrb	w0, [x19, #24]
 25c:	eor	w0, w0, #0x1
 260:	orr	w2, w27, w0
 264:	tst	w2, #0xff
 268:	b.eq	5b8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x518>  // b.none
 26c:	ldr	x1, [sp, #104]
 270:	add	x19, x19, #0x20
 274:	ldr	x0, [x20, #18536]
 278:	add	x1, x1, #0x1
 27c:	str	x1, [sp, #104]
 280:	cmp	x0, x1
 284:	b.hi	19c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xfc>  // b.pmore
 288:	ldp	x27, x28, [sp, #64]
 28c:	add	x1, x20, #0xc, lsl #12
 290:	ldr	x0, [sp, #144]
 294:	ldrb	w1, [x1, #2160]
 298:	ldr	x19, [sp, #128]
 29c:	add	x0, x0, x0, lsl #3
 2a0:	add	x22, x19, x0, lsl #3
 2a4:	cbz	w1, 2e8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x248>
 2a8:	mov	x21, x19
 2ac:	cmp	x19, x22
 2b0:	b.eq	304 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x264>  // b.none
 2b4:	adrp	x23, 0 <_ZN11__sanitizer17current_verbosityE>
 2b8:	adrp	x26, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 2bc:	add	x26, x26, #0x0
 2c0:	ldr	x23, [x23]
 2c4:	ldrb	w0, [x21, #44]
 2c8:	cbnz	w0, 47c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3dc>
 2cc:	add	x21, x21, #0x48
 2d0:	cmp	x22, x21
 2d4:	b.ne	2c4 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x224>  // b.any
 2d8:	ldr	x0, [sp, #144]
 2dc:	ldr	x19, [sp, #128]
 2e0:	add	x0, x0, x0, lsl #3
 2e4:	add	x22, x19, x0, lsl #3
 2e8:	cmp	x19, x22
 2ec:	b.eq	304 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x264>  // b.none
 2f0:	mov	x0, x19
 2f4:	add	x19, x19, #0x48
 2f8:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 2fc:	cmp	x22, x19
 300:	b.ne	2f0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x250>  // b.any
 304:	ldr	x1, [sp, #120]
 308:	mov	x0, x24
 30c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 310:	ldr	x0, [sp, #112]
 314:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
 318:	ldp	x21, x22, [sp, #16]
 31c:	ldp	x23, x24, [sp, #32]
 320:	ldp	x25, x26, [sp, #48]
 324:	ldr	x30, [sp, #80]
 328:	ldp	x19, x20, [sp], #160
 32c:	ret
 330:	ldr	x26, [x26]
 334:	cbnz	x26, 1c8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x128>
 338:	b	24c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1ac>
 33c:	ldr	x1, [x19]
 340:	ldr	x2, [x28]
 344:	ldr	x0, [sp, #96]
 348:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 34c:	strb	w23, [x19, #24]
 350:	ldr	x0, [x28]
 354:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 358:	ldr	x3, [x20]
 35c:	str	x0, [x19, #8]
 360:	cmp	x3, #0x7f
 364:	b.ls	228 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x188>  // b.plast
 368:	adrp	x2, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 36c:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 370:	add	x2, x2, #0x0
 374:	add	x0, x0, #0x0
 378:	mov	x4, #0x80                  	// #128
 37c:	mov	w1, #0x53                  	// #83
 380:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 384:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 388:	str	x0, [x22]
 38c:	b	dc <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3c>
 390:	ldr	x21, [x21]
 394:	ldr	x0, [x21]
 398:	cbz	x0, 468 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3c8>
 39c:	sub	x1, x0, #0x1
 3a0:	tst	x1, x0
 3a4:	b.ne	424 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x384>  // b.any
 3a8:	add	x21, x0, #0xfff
 3ac:	neg	x0, x0
 3b0:	and	x21, x21, x0
 3b4:	add	x1, x22, #0x0
 3b8:	mov	x0, x21
 3bc:	mov	w2, #0x0                   	// #0
 3c0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3c4:	mov	x22, x0
 3c8:	mov	x1, x24
 3cc:	mov	x2, #0x0                   	// #0
 3d0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3d4:	ldr	x1, [sp, #120]
 3d8:	mov	x0, x24
 3dc:	mov	x24, x22
 3e0:	str	x21, [sp, #120]
 3e4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 3e8:	b	130 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x90>
 3ec:	ldr	x1, [x20, #18536]
 3f0:	cbz	x1, 168 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xc8>
 3f4:	mov	x2, #0x4870                	// #18544
 3f8:	add	x21, x20, x2
 3fc:	mov	x22, #0x0                   	// #0
 400:	ldrb	w0, [x21, #24]
 404:	cbnz	w0, 410 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x370>
 408:	ldr	x0, [x21, #16]
 40c:	cbz	x0, 438 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x398>
 410:	add	x22, x22, #0x1
 414:	add	x21, x21, #0x20
 418:	cmp	x22, x1
 41c:	b.cc	400 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x360>  // b.lo, b.ul, b.last
 420:	b	168 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0xc8>
 424:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 428:	add	x0, x0, #0x0
 42c:	stp	x27, x28, [sp, #64]
 430:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 434:	bl	0 <_ZN11__sanitizer3DieEv>
 438:	ldr	x0, [x21]
 43c:	mov	x1, x19
 440:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 444:	tst	w0, #0xff
 448:	b.ne	454 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3b4>  // b.any
 44c:	ldr	x1, [x20, #18536]
 450:	b	410 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x370>
 454:	mov	x0, x24
 458:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 45c:	str	x0, [x21, #16]
 460:	ldr	x1, [x20, #18536]
 464:	b	410 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x370>
 468:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 46c:	str	x0, [x21]
 470:	b	39c <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x2fc>
 474:	mov	w27, #0x0                   	// #0
 478:	b	258 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x1b8>
 47c:	ldr	x19, [x21, #56]
 480:	cbz	x19, 2cc <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x22c>
 484:	ldrb	w1, [x19, #24]
 488:	cbz	w1, 534 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x494>
 48c:	ldr	x4, [x19, #8]
 490:	ldr	x6, [x20, #2056]
 494:	dmb	ish
 498:	add	x5, x20, #0x810
 49c:	mov	x2, #0x0                   	// #0
 4a0:	mov	x1, x5
 4a4:	cbz	x6, 500 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x460>
 4a8:	ldr	x3, [x1]
 4ac:	cmp	x4, x3
 4b0:	b.cc	540 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x4a0>  // b.lo, b.ul, b.last
 4b4:	ldr	x3, [x1, #8]
 4b8:	cmp	x4, x3
 4bc:	b.cs	540 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x4a0>  // b.hs, b.nlast
 4c0:	ldr	x2, [x19, #16]
 4c4:	sub	x2, x2, #0x1
 4c8:	ldr	x0, [x20, #2056]
 4cc:	dmb	ish
 4d0:	cbz	x0, 500 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x460>
 4d4:	mov	x1, #0x0                   	// #0
 4d8:	ldr	x3, [x5]
 4dc:	cmp	x2, x3
 4e0:	b.cc	4f0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x450>  // b.lo, b.ul, b.last
 4e4:	ldr	x3, [x5, #8]
 4e8:	cmp	x2, x3
 4ec:	b.cc	534 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x494>  // b.lo, b.ul, b.last
 4f0:	add	x1, x1, #0x1
 4f4:	add	x5, x5, #0x10
 4f8:	cmp	x1, x0
 4fc:	b.ne	4d8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x438>  // b.any
 500:	ldr	w0, [x23]
 504:	cbnz	w0, 554 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x4b4>
 508:	ldr	x3, [x20, #2056]
 50c:	cmp	x3, #0x3ff
 510:	b.hi	568 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x4c8>  // b.pmore
 514:	add	x1, x20, x3, lsl #4
 518:	add	x3, x3, #0x1
 51c:	ldr	x0, [x19, #8]
 520:	str	x0, [x1, #2064]
 524:	ldr	x0, [x19, #16]
 528:	str	x0, [x1, #2072]
 52c:	dmb	ish
 530:	str	x3, [x20, #2056]
 534:	ldr	x19, [x19]
 538:	cbnz	x19, 484 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x3e4>
 53c:	b	2cc <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x22c>
 540:	add	x2, x2, #0x1
 544:	add	x1, x1, #0x10
 548:	cmp	x2, x6
 54c:	b.ne	4a8 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x408>  // b.any
 550:	b	500 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x460>
 554:	ldp	x1, x2, [x19, #8]
 558:	mov	x0, x26
 55c:	ldr	x3, [x21]
 560:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 564:	b	508 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc+0x468>
 568:	adrp	x2, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 56c:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 570:	add	x2, x2, #0x0
 574:	add	x0, x0, #0x0
 578:	mov	x4, #0x400                 	// #1024
 57c:	mov	w1, #0x70                  	// #112
 580:	stp	x27, x28, [sp, #64]
 584:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 588:	ldr	x0, [sp, #104]
 58c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 590:	ldr	x4, [x28]
 594:	ldr	x1, [x1]
 598:	add	x20, x20, x0, lsl #5
 59c:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 5a0:	add	x0, x0, #0x0
 5a4:	ldr	x1, [x1]
 5a8:	ldr	x2, [x20, #18544]
 5ac:	ldr	x3, [x20, #18552]
 5b0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 5b4:	bl	0 <_ZN11__sanitizer3DieEv>
 5b8:	ldr	x0, [sp, #104]
 5bc:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 5c0:	ldr	x1, [x1]
 5c4:	add	x20, x20, x0, lsl #5
 5c8:	adrp	x0, 0 <_ZN11__sanitizer9LibIgnoreC1ENS_17LinkerInitializedE>
 5cc:	add	x0, x0, #0x0
 5d0:	ldr	x1, [x1]
 5d4:	ldr	x3, [x20, #18544]
 5d8:	ldr	x2, [x20, #18552]
 5dc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 5e0:	bl	0 <_ZN11__sanitizer3DieEv>
 5e4:	nop

00000000000005e8 <_ZN11__sanitizer9LibIgnore17OnLibraryUnloadedEv>:
 5e8:	mov	x1, #0x0                   	// #0
 5ec:	b	a0 <_ZN11__sanitizer9LibIgnore15OnLibraryLoadedEPKc>

sanitizer_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>:
       0:	stp	x19, x20, [sp, #-64]!
       4:	mov	x19, x1
       8:	mov	x20, x0
       c:	mov	w2, #0x0                   	// #0
      10:	adrp	x1, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
      14:	mov	x0, #0x3e80                	// #16000
      18:	add	x1, x1, #0x0
      1c:	str	x30, [sp, #16]
      20:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
      24:	str	x0, [x19]
      28:	add	x3, sp, #0x38
      2c:	add	x2, sp, #0x30
      30:	add	x1, sp, #0x28
      34:	mov	x0, x20
      38:	mov	x5, #0x0                   	// #0
      3c:	mov	x4, #0x100000              	// #1048576
      40:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
      44:	tst	w0, #0xff
      48:	b.eq	e8 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0xe8>  // b.none
      4c:	ldr	x4, [x19]
      50:	mov	x0, #0x1                   	// #1
      54:	ldr	x1, [sp, #40]
      58:	mov	w2, w0
      5c:	str	x1, [x4]
      60:	ldr	x1, [sp, #40]
      64:	nop
      68:	ldrb	w3, [x1, x0]
      6c:	add	x0, x0, #0x1
      70:	cbnz	w3, 68 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0x68>
      74:	add	x5, x1, x0
      78:	ldrb	w1, [x1, x0]
      7c:	sxtw	x3, w2
      80:	add	x6, x4, w2, sxtw #3
      84:	cbz	w1, bc <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0xbc>
      88:	str	x5, [x4, x3, lsl #3]
      8c:	cmp	w2, #0x7cf
      90:	b.gt	cc <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0xcc>
      94:	ldr	x1, [sp, #40]
      98:	add	w2, w2, #0x1
      9c:	ldrb	w3, [x1, x0]
      a0:	add	x0, x0, #0x1
      a4:	cbnz	w3, 68 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0x68>
      a8:	add	x5, x1, x0
      ac:	ldrb	w1, [x1, x0]
      b0:	sxtw	x3, w2
      b4:	add	x6, x4, w2, sxtw #3
      b8:	cbnz	w1, 88 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0+0x88>
      bc:	str	xzr, [x6]
      c0:	ldr	x30, [sp, #16]
      c4:	ldp	x19, x20, [sp], #64
      c8:	ret
      cc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
      d0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
      d4:	add	x2, x2, #0x0
      d8:	add	x0, x0, #0x0
      dc:	mov	x4, #0x7cf                 	// #1999
      e0:	mov	w1, #0x243                 	// #579
      e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
      e8:	ldr	x0, [x19]
      ec:	ldr	x30, [sp, #16]
      f0:	str	xzr, [x0]
      f4:	ldp	x19, x20, [sp], #64
      f8:	ret
      fc:	nop

0000000000000100 <_ZN11__sanitizer16internal_iserrorEmPi>:
     100:	mov	x2, x0
     104:	mov	w0, #0x0                   	// #0
     108:	cmn	x2, #0x1, lsl #12
     10c:	b.hi	114 <_ZN11__sanitizer16internal_iserrorEmPi+0x14>  // b.pmore
     110:	ret
     114:	mov	w0, #0x1                   	// #1
     118:	cbz	x1, 110 <_ZN11__sanitizer16internal_iserrorEmPi+0x10>
     11c:	neg	w2, w2
     120:	str	w2, [x1]
     124:	ret

0000000000000128 <_ZN11__sanitizer13internal_mmapEPvmiiiy>:
     128:	mov	x8, #0xde                  	// #222
     12c:	sxtw	x2, w2
     130:	sxtw	x3, w3
     134:	sxtw	x4, w4
     138:	svc	#0x0
     13c:	ret

0000000000000140 <_ZN11__sanitizer15internal_munmapEPvm>:
     140:	mov	x8, #0xd7                  	// #215
     144:	svc	#0x0
     148:	ret
     14c:	nop

0000000000000150 <_ZN11__sanitizer17internal_mprotectEPvmi>:
     150:	mov	x8, #0xe2                  	// #226
     154:	sxtw	x2, w2
     158:	svc	#0x0
     15c:	ret

0000000000000160 <_ZN11__sanitizer14internal_closeEi>:
     160:	mov	x8, #0x39                  	// #57
     164:	sxtw	x0, w0
     168:	svc	#0x0
     16c:	ret

0000000000000170 <_ZN11__sanitizer13internal_openEPKci>:
     170:	sxtw	x2, w1
     174:	mov	x8, #0x38                  	// #56
     178:	mov	x1, x0
     17c:	mov	x0, #0xffffffffffffff9c    	// #-100
     180:	svc	#0x0
     184:	ret

0000000000000188 <_ZN11__sanitizer13internal_openEPKcij>:
     188:	mov	w4, w1
     18c:	mov	w3, w2
     190:	mov	x1, x0
     194:	mov	x8, #0x38                  	// #56
     198:	sxtw	x2, w4
     19c:	mov	x0, #0xffffffffffffff9c    	// #-100
     1a0:	svc	#0x0
     1a4:	ret

00000000000001a8 <_ZN11__sanitizer13internal_readEiPvm>:
     1a8:	sxtw	x3, w0
     1ac:	mov	x0, x3
     1b0:	mov	x8, #0x3f                  	// #63
     1b4:	svc	#0x0
     1b8:	cmn	x0, #0x1, lsl #12
     1bc:	b.hi	1c4 <_ZN11__sanitizer13internal_readEiPvm+0x1c>  // b.pmore
     1c0:	ret
     1c4:	cmn	w0, #0x4
     1c8:	b.eq	1ac <_ZN11__sanitizer13internal_readEiPvm+0x4>  // b.none
     1cc:	ret

00000000000001d0 <_ZN11__sanitizer14internal_writeEiPKvm>:
     1d0:	sxtw	x3, w0
     1d4:	mov	x0, x3
     1d8:	mov	x8, #0x40                  	// #64
     1dc:	svc	#0x0
     1e0:	cmn	x0, #0x1, lsl #12
     1e4:	b.hi	1ec <_ZN11__sanitizer14internal_writeEiPKvm+0x1c>  // b.pmore
     1e8:	ret
     1ec:	cmn	w0, #0x4
     1f0:	b.eq	1d4 <_ZN11__sanitizer14internal_writeEiPKvm+0x4>  // b.none
     1f4:	ret

00000000000001f8 <_ZN11__sanitizer18internal_ftruncateEim>:
     1f8:	sxtw	x2, w0
     1fc:	mov	x0, x2
     200:	mov	x8, #0x2e                  	// #46
     204:	svc	#0x0
     208:	cmn	x0, #0x1, lsl #12
     20c:	b.hi	214 <_ZN11__sanitizer18internal_ftruncateEim+0x1c>  // b.pmore
     210:	ret
     214:	cmn	w0, #0x4
     218:	b.eq	1fc <_ZN11__sanitizer18internal_ftruncateEim+0x4>  // b.none
     21c:	ret

0000000000000220 <_ZN11__sanitizer13internal_statEPKcPv>:
     220:	mov	x2, x1
     224:	mov	x8, #0x4f                  	// #79
     228:	mov	x1, x0
     22c:	mov	x3, #0x0                   	// #0
     230:	mov	x0, #0xffffffffffffff9c    	// #-100
     234:	svc	#0x0
     238:	ret
     23c:	nop

0000000000000240 <_ZN11__sanitizer14internal_lstatEPKcPv>:
     240:	mov	x2, x1
     244:	mov	x8, #0x4f                  	// #79
     248:	mov	x1, x0
     24c:	mov	x3, #0x100                 	// #256
     250:	mov	x0, #0xffffffffffffff9c    	// #-100
     254:	svc	#0x0
     258:	ret
     25c:	nop

0000000000000260 <_ZN11__sanitizer14internal_fstatEiPv>:
     260:	mov	x8, #0x50                  	// #80
     264:	sxtw	x0, w0
     268:	svc	#0x0
     26c:	ret

0000000000000270 <_ZN11__sanitizer17internal_filesizeEi>:
     270:	sub	sp, sp, #0x80
     274:	mov	x8, #0x50                  	// #80
     278:	mov	x1, sp
     27c:	sxtw	x0, w0
     280:	svc	#0x0
     284:	ldr	x1, [sp, #48]
     288:	cmp	x0, #0x0
     28c:	add	sp, sp, #0x80
     290:	csinv	x0, x1, xzr, eq  // eq = none
     294:	ret

0000000000000298 <_ZN11__sanitizer12internal_dupEi>:
     298:	mov	x8, #0x17                  	// #23
     29c:	sxtw	x0, w0
     2a0:	svc	#0x0
     2a4:	ret

00000000000002a8 <_ZN11__sanitizer13internal_dup2Eii>:
     2a8:	mov	x8, #0x18                  	// #24
     2ac:	mov	x2, #0x0                   	// #0
     2b0:	sxtw	x0, w0
     2b4:	sxtw	x1, w1
     2b8:	svc	#0x0
     2bc:	ret

00000000000002c0 <_ZN11__sanitizer17internal_readlinkEPKcPcm>:
     2c0:	mov	x4, x1
     2c4:	mov	x3, x2
     2c8:	mov	x1, x0
     2cc:	mov	x2, x4
     2d0:	mov	x8, #0x4e                  	// #78
     2d4:	mov	x0, #0xffffffffffffff9c    	// #-100
     2d8:	svc	#0x0
     2dc:	ret

00000000000002e0 <_ZN11__sanitizer15internal_unlinkEPKc>:
     2e0:	mov	x1, x0
     2e4:	mov	x8, #0x23                  	// #35
     2e8:	mov	x0, #0xffffffffffffff9c    	// #-100
     2ec:	mov	x2, #0x0                   	// #0
     2f0:	svc	#0x0
     2f4:	ret

00000000000002f8 <_ZN11__sanitizer15internal_renameEPKcS1_>:
     2f8:	mov	x3, x1
     2fc:	mov	x8, #0x26                  	// #38
     300:	mov	x1, x0
     304:	mov	x0, #0xffffffffffffff9c    	// #-100
     308:	mov	x2, x0
     30c:	svc	#0x0
     310:	ret
     314:	nop

0000000000000318 <_ZN11__sanitizer20internal_sched_yieldEv>:
     318:	mov	x8, #0x7c                  	// #124
     31c:	svc	#0x0
     320:	ret
     324:	nop

0000000000000328 <_ZN11__sanitizer14internal__exitEi>:
     328:	sxtw	x0, w0
     32c:	mov	x8, #0x5e                  	// #94
     330:	str	x30, [sp, #-16]!
     334:	svc	#0x0
     338:	bl	0 <_ZN11__sanitizer3DieEv>
     33c:	nop

0000000000000340 <_ZN11__sanitizer14internal_sleepEj>:
     340:	sub	sp, sp, #0x10
     344:	mov	w2, w0
     348:	mov	x1, sp
     34c:	mov	x8, #0x65                  	// #101
     350:	mov	x0, x1
     354:	stp	x2, xzr, [sp]
     358:	svc	#0x0
     35c:	ldr	w1, [sp]
     360:	cmp	w0, #0x0
     364:	mov	w0, #0x0                   	// #0
     368:	add	sp, sp, #0x10
     36c:	csel	w0, w1, w0, ne  // ne = any
     370:	ret
     374:	nop

0000000000000378 <_ZN11__sanitizer15internal_execveEPKcPKPcS4_>:
     378:	mov	x8, #0xdd                  	// #221
     37c:	svc	#0x0
     380:	ret
     384:	nop

0000000000000388 <_ZN11__sanitizer10FileExistsEPKc>:
     388:	stp	x19, x30, [sp, #-144]!
     38c:	mov	x19, x0
     390:	bl	0 <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc>
     394:	tst	w0, #0xff
     398:	b.ne	3d0 <_ZN11__sanitizer10FileExistsEPKc+0x48>  // b.any
     39c:	mov	x1, x19
     3a0:	add	x2, sp, #0x10
     3a4:	mov	x8, #0x4f                  	// #79
     3a8:	mov	x0, #0xffffffffffffff9c    	// #-100
     3ac:	mov	x3, #0x0                   	// #0
     3b0:	svc	#0x0
     3b4:	cbnz	x0, 3d0 <_ZN11__sanitizer10FileExistsEPKc+0x48>
     3b8:	ldr	w0, [sp, #32]
     3bc:	ldp	x19, x30, [sp], #144
     3c0:	and	w0, w0, #0xf000
     3c4:	cmp	w0, #0x8, lsl #12
     3c8:	cset	w0, eq  // eq = none
     3cc:	ret
     3d0:	mov	w0, #0x0                   	// #0
     3d4:	ldp	x19, x30, [sp], #144
     3d8:	ret
     3dc:	nop

00000000000003e0 <_ZN11__sanitizer6GetTidEv>:
     3e0:	mov	x8, #0xb2                  	// #178
     3e4:	svc	#0x0
     3e8:	ret
     3ec:	nop

00000000000003f0 <_ZN11__sanitizer6TgKillEiyi>:
     3f0:	mov	x8, #0x83                  	// #131
     3f4:	sxtw	x0, w0
     3f8:	sxtw	x2, w2
     3fc:	svc	#0x0
     400:	ret
     404:	nop

0000000000000408 <_ZN11__sanitizer8NanoTimeEv>:
     408:	stp	x19, x30, [sp, #-32]!
     40c:	mov	x2, #0x10                  	// #16
     410:	mov	w1, #0x0                   	// #0
     414:	add	x19, sp, #0x10
     418:	mov	x0, x19
     41c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     420:	mov	x0, x19
     424:	mov	x8, #0xa9                  	// #169
     428:	mov	x1, #0x0                   	// #0
     42c:	svc	#0x0
     430:	ldp	x3, x2, [sp, #16]
     434:	mov	x0, #0xca00                	// #51712
     438:	movk	x0, #0x3b9a, lsl #16
     43c:	ldp	x19, x30, [sp], #32
     440:	lsl	x1, x2, #5
     444:	sub	x1, x1, x2
     448:	add	x1, x2, x1, lsl #2
     44c:	lsl	x1, x1, #3
     450:	madd	x0, x3, x0, x1
     454:	ret

0000000000000458 <_ZN11__sanitizer22internal_clock_gettimeEiPv>:
     458:	mov	x8, #0x71                  	// #113
     45c:	sxtw	x0, w0
     460:	svc	#0x0
     464:	ret

0000000000000468 <_ZN11__sanitizer6GetEnvEPKc>:
     468:	stp	x19, x20, [sp, #-64]!
     46c:	stp	x21, x22, [sp, #16]
     470:	adrp	x21, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     474:	add	x19, x21, #0x0
     478:	stp	x23, x30, [sp, #32]
     47c:	mov	x23, x0
     480:	ldrb	w0, [x21]
     484:	cbz	w0, 520 <_ZN11__sanitizer6GetEnvEPKc+0xb8>
     488:	ldr	x0, [x19, #8]
     48c:	cbz	x0, 50c <_ZN11__sanitizer6GetEnvEPKc+0xa4>
     490:	add	x21, x21, #0x0
     494:	ldr	x0, [x21, #16]
     498:	cbz	x0, 50c <_ZN11__sanitizer6GetEnvEPKc+0xa4>
     49c:	mov	x0, x23
     4a0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     4a4:	ldr	x20, [x21, #8]
     4a8:	mov	x22, x0
     4ac:	ldrb	w0, [x20]
     4b0:	cbz	w0, 50c <_ZN11__sanitizer6GetEnvEPKc+0xa4>
     4b4:	mov	x2, x20
     4b8:	b	4e8 <_ZN11__sanitizer6GetEnvEPKc+0x80>
     4bc:	mov	x1, x23
     4c0:	mov	x0, x20
     4c4:	bl	0 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
     4c8:	cbnz	w0, 4d8 <_ZN11__sanitizer6GetEnvEPKc+0x70>
     4cc:	ldrb	w0, [x20, x22]
     4d0:	cmp	w0, #0x3d
     4d4:	b.eq	558 <_ZN11__sanitizer6GetEnvEPKc+0xf0>  // b.none
     4d8:	ldrb	w0, [x19, #1]
     4dc:	add	x20, x19, #0x1
     4e0:	cbz	w0, 50c <_ZN11__sanitizer6GetEnvEPKc+0xa4>
     4e4:	ldr	x2, [x21, #8]
     4e8:	sub	x2, x20, x2
     4ec:	ldr	x3, [x21, #16]
     4f0:	mov	x0, x20
     4f4:	mov	w1, #0x0                   	// #0
     4f8:	sub	x2, x3, x2
     4fc:	bl	0 <_ZN11__sanitizer15internal_memchrEPKvim>
     500:	mov	x19, x0
     504:	mov	x2, x22
     508:	cbnz	x0, 4bc <_ZN11__sanitizer6GetEnvEPKc+0x54>
     50c:	mov	x0, #0x0                   	// #0
     510:	ldp	x21, x22, [sp, #16]
     514:	ldp	x23, x30, [sp, #32]
     518:	ldp	x19, x20, [sp], #64
     51c:	ret
     520:	mov	w1, #0x1                   	// #1
     524:	add	x3, x19, #0x10
     528:	strb	w1, [x21]
     52c:	add	x2, sp, #0x38
     530:	add	x1, x19, #0x8
     534:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     538:	mov	x5, #0x0                   	// #0
     53c:	add	x0, x0, #0x0
     540:	mov	x4, #0x4000000             	// #67108864
     544:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
     548:	tst	w0, #0xff
     54c:	b.ne	488 <_ZN11__sanitizer6GetEnvEPKc+0x20>  // b.any
     550:	str	xzr, [x19, #8]
     554:	b	50c <_ZN11__sanitizer6GetEnvEPKc+0xa4>
     558:	add	x0, x22, #0x1
     55c:	add	x0, x20, x0
     560:	ldp	x21, x22, [sp, #16]
     564:	ldp	x23, x30, [sp, #32]
     568:	ldp	x19, x20, [sp], #64
     56c:	ret

0000000000000570 <_ZN11__sanitizer7GetArgvEv>:
     570:	adrp	x0, 0 <__libc_stack_end>
     574:	ldr	x0, [x0]
     578:	cbz	x0, 588 <_ZN11__sanitizer7GetArgvEv+0x18>
     57c:	ldr	x0, [x0]
     580:	add	x0, x0, #0x8
     584:	ret
     588:	str	x30, [sp, #-32]!
     58c:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     590:	add	x0, x0, #0x0
     594:	add	x1, sp, #0x10
     598:	bl	0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     59c:	add	x1, sp, #0x18
     5a0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5a4:	add	x0, x0, #0x0
     5a8:	bl	0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5ac:	ldr	x0, [sp, #16]
     5b0:	ldr	x30, [sp], #32
     5b4:	ret

00000000000005b8 <_ZN11__sanitizer10GetEnvironEv>:
     5b8:	adrp	x0, 0 <__libc_stack_end>
     5bc:	ldr	x0, [x0]
     5c0:	cbz	x0, 5d8 <_ZN11__sanitizer10GetEnvironEv+0x20>
     5c4:	ldr	x1, [x0]
     5c8:	ldrsw	x0, [x1]
     5cc:	add	x0, x0, #0x2
     5d0:	add	x0, x1, x0, lsl #3
     5d4:	ret
     5d8:	str	x30, [sp, #-32]!
     5dc:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5e0:	add	x0, x0, #0x0
     5e4:	add	x1, sp, #0x10
     5e8:	bl	0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5ec:	add	x1, sp, #0x18
     5f0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5f4:	add	x0, x0, #0x0
     5f8:	bl	0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     5fc:	ldr	x0, [sp, #24]
     600:	ldr	x30, [sp], #32
     604:	ret

0000000000000608 <_ZN11__sanitizer13BlockingMutexC1Ev>:
     608:	mov	x2, #0x58                  	// #88
     60c:	mov	w1, #0x0                   	// #0
     610:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
     614:	nop

0000000000000618 <_ZN11__sanitizer13BlockingMutex4LockEv>:
     618:	ldr	x3, [x0, #80]
     61c:	mov	x6, x0
     620:	mov	w1, #0x1                   	// #1
     624:	cbnz	x3, 68c <_ZN11__sanitizer13BlockingMutex4LockEv+0x74>
     628:	ldxr	w0, [x6]
     62c:	stxr	w2, w1, [x6]
     630:	cbnz	w2, 628 <_ZN11__sanitizer13BlockingMutex4LockEv+0x10>
     634:	dmb	ish
     638:	cbz	w0, 688 <_ZN11__sanitizer13BlockingMutex4LockEv+0x70>
     63c:	mov	w7, #0x2                   	// #2
     640:	ldxr	w0, [x6]
     644:	stxr	w1, w7, [x6]
     648:	cbnz	w1, 640 <_ZN11__sanitizer13BlockingMutex4LockEv+0x28>
     64c:	dmb	ish
     650:	cbz	w0, 688 <_ZN11__sanitizer13BlockingMutex4LockEv+0x70>
     654:	mov	x0, x6
     658:	mov	x8, #0x62                  	// #98
     65c:	mov	x1, #0x80                  	// #128
     660:	mov	x2, #0x2                   	// #2
     664:	mov	x3, #0x0                   	// #0
     668:	mov	x4, #0x0                   	// #0
     66c:	mov	x5, #0x0                   	// #0
     670:	svc	#0x0
     674:	ldxr	w0, [x6]
     678:	stxr	w1, w7, [x6]
     67c:	cbnz	w1, 640 <_ZN11__sanitizer13BlockingMutex4LockEv+0x28>
     680:	dmb	ish
     684:	cbnz	w0, 654 <_ZN11__sanitizer13BlockingMutex4LockEv+0x3c>
     688:	ret
     68c:	str	x30, [sp, #-16]!
     690:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     694:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     698:	add	x2, x2, #0x0
     69c:	add	x0, x0, #0x0
     6a0:	mov	x4, #0x0                   	// #0
     6a4:	mov	w1, #0x288                 	// #648
     6a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6ac:	nop

00000000000006b0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>:
     6b0:	dmb	ish
     6b4:	mov	x1, x0
     6b8:	ldxr	w2, [x1]
     6bc:	stxr	w3, wzr, [x1]
     6c0:	cbnz	w3, 6b8 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x8>
     6c4:	dmb	ish
     6c8:	cbz	w2, 6f8 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x48>
     6cc:	cmp	w2, #0x2
     6d0:	b.eq	6d8 <_ZN11__sanitizer13BlockingMutex6UnlockEv+0x28>  // b.none
     6d4:	ret
     6d8:	mov	x8, #0x62                  	// #98
     6dc:	mov	x1, #0x81                  	// #129
     6e0:	mov	x2, #0x1                   	// #1
     6e4:	mov	x3, #0x0                   	// #0
     6e8:	mov	x4, #0x0                   	// #0
     6ec:	mov	x5, #0x0                   	// #0
     6f0:	svc	#0x0
     6f4:	ret
     6f8:	str	x30, [sp, #-16]!
     6fc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     700:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     704:	add	x2, x2, #0x0
     708:	add	x0, x0, #0x0
     70c:	mov	x4, #0x0                   	// #0
     710:	mov	x3, #0x0                   	// #0
     714:	mov	w1, #0x29b                 	// #667
     718:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     71c:	nop

0000000000000720 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>:
     720:	ldr	w0, [x0]
     724:	cbz	w0, 72c <_ZN11__sanitizer13BlockingMutex11CheckLockedEv+0xc>
     728:	ret
     72c:	str	x30, [sp, #-16]!
     730:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     734:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     738:	add	x2, x2, #0x0
     73c:	add	x0, x0, #0x0
     740:	mov	x4, #0x0                   	// #0
     744:	mov	x3, #0x0                   	// #0
     748:	mov	w1, #0x2a9                 	// #681
     74c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000750 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>:
     750:	mov	x8, #0x75                  	// #117
     754:	sxtw	x0, w0
     758:	sxtw	x1, w1
     75c:	svc	#0x0
     760:	ret
     764:	nop

0000000000000768 <_ZN11__sanitizer16internal_waitpidEiPii>:
     768:	mov	x8, #0x104                 	// #260
     76c:	mov	x3, #0x0                   	// #0
     770:	sxtw	x0, w0
     774:	sxtw	x2, w2
     778:	svc	#0x0
     77c:	ret

0000000000000780 <_ZN11__sanitizer15internal_getpidEv>:
     780:	mov	x8, #0xac                  	// #172
     784:	svc	#0x0
     788:	ret
     78c:	nop

0000000000000790 <_ZN11__sanitizer16internal_getppidEv>:
     790:	mov	x8, #0xad                  	// #173
     794:	svc	#0x0
     798:	ret
     79c:	nop

00000000000007a0 <_ZN11__sanitizer17internal_getdentsEiPNS_12linux_direntEj>:
     7a0:	mov	w2, w2
     7a4:	mov	x8, #0x3d                  	// #61
     7a8:	sxtw	x0, w0
     7ac:	svc	#0x0
     7b0:	ret
     7b4:	nop

00000000000007b8 <_ZN11__sanitizer14internal_lseekEimi>:
     7b8:	mov	x8, #0x3e                  	// #62
     7bc:	sxtw	x0, w0
     7c0:	sxtw	x2, w2
     7c4:	svc	#0x0
     7c8:	ret
     7cc:	nop

00000000000007d0 <_ZN11__sanitizer14internal_prctlEimmmm>:
     7d0:	mov	x8, #0xa7                  	// #167
     7d4:	sxtw	x0, w0
     7d8:	svc	#0x0
     7dc:	ret

00000000000007e0 <_ZN11__sanitizer20internal_sigaltstackEPKvPv>:
     7e0:	mov	x8, #0x84                  	// #132
     7e4:	svc	#0x0
     7e8:	ret
     7ec:	nop

00000000000007f0 <_ZN11__sanitizer13internal_forkEv>:
     7f0:	mov	x8, #0xdc                  	// #220
     7f4:	mov	x0, #0x11                  	// #17
     7f8:	mov	x1, #0x0                   	// #0
     7fc:	svc	#0x0
     800:	ret
     804:	nop

0000000000000808 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>:
     808:	stp	x19, x20, [sp, #-112]!
     80c:	sxtw	x20, w0
     810:	mov	x19, x1
     814:	stp	x23, x30, [sp, #32]
     818:	add	x23, sp, #0x30
     81c:	mov	w1, #0x0                   	// #0
     820:	mov	x0, x23
     824:	stp	x21, x22, [sp, #16]
     828:	mov	x21, x2
     82c:	add	x22, sp, #0x50
     830:	mov	x2, #0x20                  	// #32
     834:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     838:	mov	w1, #0x0                   	// #0
     83c:	mov	x0, x22
     840:	mov	x2, #0x20                  	// #32
     844:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     848:	mov	x1, #0x0                   	// #0
     84c:	cbz	x19, 880 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv+0x78>
     850:	mov	x1, x19
     854:	mov	x2, #0x8                   	// #8
     858:	add	x0, x23, #0x18
     85c:	ldr	x3, [x1], #8
     860:	str	x3, [sp, #48]
     864:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     868:	ldr	w0, [x19, #136]
     86c:	mov	x1, x23
     870:	ldr	x2, [x19, #144]
     874:	orr	w0, w0, #0x4000000
     878:	sxtw	x0, w0
     87c:	stp	x0, x2, [sp, #56]
     880:	cmp	x21, #0x0
     884:	mov	x0, x20
     888:	csel	x2, x22, xzr, ne  // ne = any
     88c:	mov	x8, #0x86                  	// #134
     890:	mov	x3, #0x8                   	// #8
     894:	svc	#0x0
     898:	cmp	x0, #0x0
     89c:	mov	x19, x0
     8a0:	ccmp	x21, #0x0, #0x4, eq  // eq = none
     8a4:	b.ne	8bc <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv+0xb4>  // b.any
     8a8:	mov	w0, w19
     8ac:	ldp	x21, x22, [sp, #16]
     8b0:	ldp	x23, x30, [sp, #32]
     8b4:	ldp	x19, x20, [sp], #112
     8b8:	ret
     8bc:	mov	x0, x21
     8c0:	mov	x2, x3
     8c4:	ldr	x3, [sp, #80]
     8c8:	add	x1, x22, #0x18
     8cc:	str	x3, [x0], #8
     8d0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     8d4:	ldr	x0, [sp, #88]
     8d8:	str	w0, [x21, #136]
     8dc:	ldr	x0, [sp, #96]
     8e0:	str	x0, [x21, #144]
     8e4:	mov	w0, w19
     8e8:	ldp	x21, x22, [sp, #16]
     8ec:	ldp	x23, x30, [sp, #32]
     8f0:	ldp	x19, x20, [sp], #112
     8f4:	ret

00000000000008f8 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>:
     8f8:	mov	x8, #0x87                  	// #135
     8fc:	mov	x3, #0x8                   	// #8
     900:	sxtw	x0, w0
     904:	svc	#0x0
     908:	ret
     90c:	nop

0000000000000910 <_ZN11__sanitizer19internal_sigfillsetEPNS_20__sanitizer_sigset_tE>:
     910:	mov	x2, #0x80                  	// #128
     914:	mov	w1, #0xff                  	// #255
     918:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
     91c:	nop

0000000000000920 <_ZN11__sanitizer20internal_sigemptysetEPNS_20__sanitizer_sigset_tE>:
     920:	mov	x2, #0x80                  	// #128
     924:	mov	w1, #0x0                   	// #0
     928:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
     92c:	nop

0000000000000930 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>:
     930:	sub	w1, w1, #0x1
     934:	sxtw	x3, w1
     938:	cmp	x3, #0x3ff
     93c:	b.hi	960 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi+0x30>  // b.pmore
     940:	lsr	x3, x3, #3
     944:	and	w1, w1, #0x7
     948:	mov	w2, #0x1                   	// #1
     94c:	lsl	w1, w2, w1
     950:	ldrb	w2, [x0, x3]
     954:	bic	w1, w2, w1
     958:	strb	w1, [x0, x3]
     95c:	ret
     960:	str	x30, [sp, #-16]!
     964:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     968:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     96c:	add	x2, x2, #0x0
     970:	add	x0, x0, #0x0
     974:	mov	x4, #0x400                 	// #1024
     978:	mov	w1, #0x364                 	// #868
     97c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000980 <_ZN11__sanitizer20internal_sigismemberEPNS_20__sanitizer_sigset_tEi>:
     980:	sub	w1, w1, #0x1
     984:	sxtw	x3, w1
     988:	cmp	x3, #0x3ff
     98c:	b.hi	9a8 <_ZN11__sanitizer20internal_sigismemberEPNS_20__sanitizer_sigset_tEi+0x28>  // b.pmore
     990:	lsr	x3, x3, #3
     994:	and	w1, w1, #0x7
     998:	ldrb	w0, [x0, x3]
     99c:	asr	w0, w0, w1
     9a0:	and	w0, w0, #0x1
     9a4:	ret
     9a8:	str	x30, [sp, #-16]!
     9ac:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     9b0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     9b4:	add	x2, x2, #0x0
     9b8:	add	x0, x0, #0x0
     9bc:	mov	x4, #0x400                 	// #1024
     9c0:	mov	w1, #0x36e                 	// #878
     9c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000009c8 <_ZN11__sanitizer12ThreadListerC1Ei>:
     9c8:	stp	x19, x20, [sp, #-144]!
     9cc:	mov	x19, x0
     9d0:	mov	w20, w1
     9d4:	stp	x23, x24, [sp, #32]
     9d8:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
     9dc:	mov	w1, #0xffffffff            	// #-1
     9e0:	stp	x21, x22, [sp, #16]
     9e4:	ldr	x21, [x24]
     9e8:	stp	x25, x30, [sp, #48]
     9ec:	stp	xzr, xzr, [x0, #16]
     9f0:	ldr	x0, [x21]
     9f4:	stp	w20, w1, [x19]
     9f8:	str	xzr, [x19, #8]
     9fc:	cbz	x0, afc <_ZN11__sanitizer12ThreadListerC1Ei+0x134>
     a00:	sub	x1, x0, #0x1
     a04:	tst	x1, x0
     a08:	b.ne	b6c <_ZN11__sanitizer12ThreadListerC1Ei+0x1a4>  // b.any
     a0c:	add	x21, x19, #0x8
     a10:	add	x22, x0, #0xfff
     a14:	neg	x0, x0
     a18:	mov	w2, #0x0                   	// #0
     a1c:	and	x22, x22, x0
     a20:	adrp	x25, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     a24:	mov	x0, x22
     a28:	add	x1, x25, #0x0
     a2c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     a30:	mov	x23, x0
     a34:	ldr	x1, [x19, #8]
     a38:	ldr	x2, [x21, #16]
     a3c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     a40:	ldr	x0, [x19, #8]
     a44:	ldr	x1, [x21, #8]
     a48:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     a4c:	ldr	x2, [x21, #16]
     a50:	str	x23, [x19, #8]
     a54:	str	x22, [x21, #8]
     a58:	cmp	x2, #0xfff
     a5c:	b.hi	a7c <_ZN11__sanitizer12ThreadListerC1Ei+0xb4>  // b.pmore
     a60:	cmp	x22, #0xfff
     a64:	b.ls	b0c <_ZN11__sanitizer12ThreadListerC1Ei+0x144>  // b.plast
     a68:	mov	x3, #0x1000                	// #4096
     a6c:	add	x0, x23, x2
     a70:	mov	w1, #0x0                   	// #0
     a74:	sub	x2, x3, x2
     a78:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     a7c:	mov	x0, #0x1000                	// #4096
     a80:	str	x0, [x21, #16]
     a84:	add	x21, sp, #0x40
     a88:	mov	w3, w20
     a8c:	mov	x0, x21
     a90:	mov	x1, #0x50                  	// #80
     a94:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     a98:	add	x2, x2, #0x0
     a9c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     aa0:	mov	x1, x21
     aa4:	mov	x8, #0x38                  	// #56
     aa8:	mov	x0, #0xffffffffffffff9c    	// #-100
     aac:	mov	x2, #0x4000                	// #16384
     ab0:	svc	#0x0
     ab4:	str	w0, [x19, #4]
     ab8:	sxtw	x0, w0
     abc:	cmn	x0, #0x1, lsl #12
     ac0:	b.hi	ad8 <_ZN11__sanitizer12ThreadListerC1Ei+0x110>  // b.pmore
     ac4:	ldp	x21, x22, [sp, #16]
     ac8:	ldp	x23, x24, [sp, #32]
     acc:	ldp	x25, x30, [sp, #48]
     ad0:	ldp	x19, x20, [sp], #144
     ad4:	ret
     ad8:	mov	w1, w20
     adc:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     ae0:	add	x0, x0, #0x0
     ae4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     ae8:	ldp	x21, x22, [sp, #16]
     aec:	ldp	x23, x24, [sp, #32]
     af0:	ldp	x25, x30, [sp, #48]
     af4:	ldp	x19, x20, [sp], #144
     af8:	ret
     afc:	mov	x0, #0x6                   	// #6
     b00:	bl	0 <getauxval>
     b04:	str	x0, [x21]
     b08:	b	a00 <_ZN11__sanitizer12ThreadListerC1Ei+0x38>
     b0c:	ldr	x24, [x24]
     b10:	ldr	x0, [x24]
     b14:	cbz	x0, b7c <_ZN11__sanitizer12ThreadListerC1Ei+0x1b4>
     b18:	sub	x1, x0, #0x1
     b1c:	tst	x1, x0
     b20:	b.ne	b6c <_ZN11__sanitizer12ThreadListerC1Ei+0x1a4>  // b.any
     b24:	add	x22, x0, #0xfff
     b28:	neg	x0, x0
     b2c:	and	x22, x22, x0
     b30:	add	x1, x25, #0x0
     b34:	mov	w2, #0x0                   	// #0
     b38:	mov	x0, x22
     b3c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     b40:	mov	x23, x0
     b44:	ldr	x1, [x19, #8]
     b48:	ldr	x2, [x21, #16]
     b4c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     b50:	ldr	x0, [x19, #8]
     b54:	ldr	x1, [x21, #8]
     b58:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     b5c:	ldr	x2, [x21, #16]
     b60:	str	x23, [x19, #8]
     b64:	str	x22, [x21, #8]
     b68:	b	a68 <_ZN11__sanitizer12ThreadListerC1Ei+0xa0>
     b6c:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     b70:	add	x0, x0, #0x0
     b74:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     b78:	bl	0 <_ZN11__sanitizer3DieEv>
     b7c:	mov	x0, #0x6                   	// #6
     b80:	bl	0 <getauxval>
     b84:	str	x0, [x24]
     b88:	b	b18 <_ZN11__sanitizer12ThreadListerC1Ei+0x150>
     b8c:	nop

0000000000000b90 <_ZN11__sanitizer12ThreadLister7IsAliveEi>:
     b90:	stp	x19, x20, [sp, #-144]!
     b94:	mov	x20, x0
     b98:	mov	w4, w1
     b9c:	stp	x21, x22, [sp, #16]
     ba0:	add	x21, sp, #0x40
     ba4:	ldr	w3, [x20], #8
     ba8:	mov	x1, #0x50                  	// #80
     bac:	mov	x19, x0
     bb0:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     bb4:	mov	x0, x21
     bb8:	add	x2, x2, #0x0
     bbc:	str	x30, [sp, #32]
     bc0:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     bc4:	mov	x0, x21
     bc8:	mov	x1, x20
     bcc:	mov	x3, #0x0                   	// #0
     bd0:	mov	x2, #0x4000000             	// #67108864
     bd4:	bl	0 <_ZN11__sanitizer16ReadFileToVectorEPKcPNS_24InternalMmapVectorNoCtorIcEEmPi>
     bd8:	tst	w0, #0xff
     bdc:	b.eq	be8 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x58>  // b.none
     be0:	ldr	x3, [x19, #24]
     be4:	cbnz	x3, bfc <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x6c>
     be8:	mov	w0, #0x0                   	// #0
     bec:	ldp	x21, x22, [sp, #16]
     bf0:	ldr	x30, [sp, #32]
     bf4:	ldp	x19, x20, [sp], #144
     bf8:	ret
     bfc:	ldr	x4, [x19, #16]
     c00:	strb	wzr, [sp, #63]
     c04:	cmp	x3, x4
     c08:	b.hi	d24 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x194>  // b.pmore
     c0c:	add	x1, x3, #0x1
     c10:	b.eq	c70 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0xe0>  // b.none
     c14:	ldr	x21, [x19, #8]
     c18:	str	x1, [x20, #16]
     c1c:	add	x0, x21, x3
     c20:	add	x1, sp, #0x3f
     c24:	mov	x2, #0x1                   	// #1
     c28:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     c2c:	ldr	x0, [x19, #8]
     c30:	adrp	x20, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     c34:	add	x20, x20, #0x0
     c38:	mov	x1, x20
     c3c:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
     c40:	mov	x19, x0
     c44:	cbz	x0, be8 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x58>
     c48:	mov	x0, x20
     c4c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     c50:	add	x0, x19, x0
     c54:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     c58:	cmp	w0, #0x0
     c5c:	cset	w0, ne  // ne = any
     c60:	ldp	x21, x22, [sp, #16]
     c64:	ldr	x30, [sp, #32]
     c68:	ldp	x19, x20, [sp], #144
     c6c:	ret
     c70:	cbz	x1, d4c <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x1bc>
     c74:	tst	x3, x1
     c78:	b.eq	d1c <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x18c>  // b.none
     c7c:	clz	x2, x1
     c80:	mov	w0, #0x3f                  	// #63
     c84:	sub	w0, w0, w2
     c88:	mov	x2, #0x1                   	// #1
     c8c:	add	w21, w0, #0x1
     c90:	lsl	x21, x2, x21
     c94:	cmp	x1, x21
     c98:	b.cs	d98 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x208>  // b.hs, b.nlast
     c9c:	lsl	x4, x2, x0
     ca0:	cmp	x1, x4
     ca4:	b.ls	db8 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x228>  // b.plast
     ca8:	cmp	x3, x21
     cac:	b.hi	d6c <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x1dc>  // b.pmore
     cb0:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
     cb4:	ldr	x22, [x22]
     cb8:	ldr	x0, [x22]
     cbc:	cbz	x0, d3c <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x1ac>
     cc0:	sub	x22, x0, #0x1
     cc4:	tst	x22, x0
     cc8:	b.ne	d88 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x1f8>  // b.any
     ccc:	add	x21, x21, x22
     cd0:	neg	x0, x0
     cd4:	and	x22, x21, x0
     cd8:	mov	w2, #0x0                   	// #0
     cdc:	mov	x0, x22
     ce0:	adrp	x1, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     ce4:	add	x1, x1, #0x0
     ce8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     cec:	ldr	x1, [x19, #8]
     cf0:	mov	x21, x0
     cf4:	ldr	x2, [x20, #16]
     cf8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     cfc:	ldr	x1, [x20, #8]
     d00:	ldr	x0, [x19, #8]
     d04:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     d08:	ldr	x3, [x20, #16]
     d0c:	str	x21, [x19, #8]
     d10:	str	x22, [x20, #8]
     d14:	add	x1, x3, #0x1
     d18:	b	c18 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x88>
     d1c:	mov	x21, x1
     d20:	b	cb0 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x120>
     d24:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d28:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d2c:	add	x2, x2, #0x0
     d30:	add	x0, x0, #0x0
     d34:	mov	w1, #0x1cd                 	// #461
     d38:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d3c:	mov	x0, #0x6                   	// #6
     d40:	bl	0 <getauxval>
     d44:	str	x0, [x22]
     d48:	b	cc0 <_ZN11__sanitizer12ThreadLister7IsAliveEi+0x130>
     d4c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d50:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d54:	add	x2, x2, #0x0
     d58:	add	x0, x0, #0x0
     d5c:	mov	x4, #0x0                   	// #0
     d60:	mov	x3, #0x0                   	// #0
     d64:	mov	w1, #0x186                 	// #390
     d68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d6c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d70:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d74:	mov	x4, x21
     d78:	add	x2, x2, #0x0
     d7c:	add	x0, x0, #0x0
     d80:	mov	w1, #0x20c                 	// #524
     d84:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d88:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     d8c:	add	x0, x0, #0x0
     d90:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     d94:	bl	0 <_ZN11__sanitizer3DieEv>
     d98:	mov	x3, x1
     d9c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     da0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     da4:	mov	x4, x21
     da8:	add	x2, x2, #0x0
     dac:	add	x0, x0, #0x0
     db0:	mov	w1, #0x18a                 	// #394
     db4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     db8:	mov	x3, x1
     dbc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     dc0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     dc4:	add	x2, x2, #0x0
     dc8:	add	x0, x0, #0x0
     dcc:	mov	w1, #0x18b                 	// #395
     dd0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     dd4:	nop

0000000000000dd8 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE>:
     dd8:	stp	x19, x20, [sp, #-144]!
     ddc:	stp	x23, x24, [sp, #32]
     de0:	stp	x25, x26, [sp, #48]
     de4:	mov	x25, x0
     de8:	ldrsw	x0, [x0, #4]
     dec:	str	x30, [sp, #80]
     df0:	cmn	x0, #0x1, lsl #12
     df4:	b.hi	fb4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1dc>  // b.pmore
     df8:	mov	x8, #0x3e                  	// #62
     dfc:	mov	x2, #0x0                   	// #0
     e00:	stp	x21, x22, [sp, #16]
     e04:	stp	x27, x28, [sp, #64]
     e08:	mov	x28, x1
     e0c:	mov	x1, #0x0                   	// #0
     e10:	svc	#0x0
     e14:	add	x23, x25, #0x8
     e18:	str	xzr, [x28, #16]
     e1c:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
     e20:	add	x0, sp, #0x88
     e24:	ldr	x19, [x25, #16]
     e28:	str	x0, [sp, #96]
     e2c:	ldr	x3, [x23, #16]
     e30:	mov	w20, #0x1                   	// #1
     e34:	ldr	x0, [x22]
     e38:	mov	w24, #0x2                   	// #2
     e3c:	str	x0, [sp, #104]
     e40:	cmp	x19, x3
     e44:	b.ls	e5c <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x84>  // b.plast
     e48:	ldr	x0, [x23]
     e4c:	sub	x2, x19, x3
     e50:	mov	w1, #0x0                   	// #0
     e54:	add	x0, x0, x3
     e58:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     e5c:	str	x19, [x23, #16]
     e60:	cmp	x19, #0xfff
     e64:	b.ls	fdc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x204>  // b.plast
     e68:	ldrsw	x0, [x25, #4]
     e6c:	and	x2, x19, #0xffffffff
     e70:	mov	x8, #0x3d                  	// #61
     e74:	ldr	x1, [x25, #8]
     e78:	svc	#0x0
     e7c:	mov	x26, x0
     e80:	cbz	x0, 1194 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3bc>
     e84:	cmn	x0, #0x1, lsl #12
     e88:	b.hi	f80 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1a8>  // b.pmore
     e8c:	ldr	x19, [x25, #8]
     e90:	add	x27, x19, x0
     e94:	cmp	x19, x27
     e98:	b.cs	f28 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x150>  // b.hs, b.nlast
     e9c:	adrp	x21, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     ea0:	add	x21, x21, #0x0
     ea4:	b	eb4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xdc>
     ea8:	cbnz	x2, ed0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xf8>
     eac:	cmp	x27, x19
     eb0:	b.ls	f28 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x150>  // b.plast
     eb4:	mov	x0, x19
     eb8:	ldrh	w2, [x19, #16]
     ebc:	add	x19, x19, x2
     ec0:	ldr	x2, [x0]
     ec4:	cmp	x2, #0x1
     ec8:	b.ne	ea8 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xd0>  // b.any
     ecc:	mov	w24, w2
     ed0:	ldrb	w2, [x0, #19]
     ed4:	sub	w2, w2, #0x30
     ed8:	and	w2, w2, #0xff
     edc:	cmp	w2, #0x9
     ee0:	b.hi	eac <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xd4>  // b.pmore
     ee4:	add	x0, x0, #0x13
     ee8:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     eec:	ldp	x4, x3, [x28, #8]
     ef0:	str	x0, [sp, #136]
     ef4:	lsr	x4, x4, #3
     ef8:	cmp	x3, x4
     efc:	b.hi	117c <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3a4>  // b.pmore
     f00:	add	x0, x3, #0x1
     f04:	b.eq	1040 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x268>  // b.none
     f08:	ldr	x7, [x28]
     f0c:	str	x0, [x28, #16]
     f10:	ldr	x1, [sp, #96]
     f14:	add	x0, x7, x3, lsl #3
     f18:	mov	x2, #0x8                   	// #8
     f1c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     f20:	cmp	x27, x19
     f24:	b.hi	eb4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0xdc>  // b.pmore
     f28:	ldr	x3, [x25, #24]
     f2c:	cbz	w20, f70 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x198>
     f30:	sub	x0, x3, #0x400
     f34:	cmp	x0, x26
     f38:	b.cc	ffc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x224>  // b.lo, b.ul, b.last
     f3c:	ldr	x1, [x28, #16]
     f40:	cbz	x1, fd0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1f8>
     f44:	ldr	x2, [x28]
     f48:	mov	x0, x25
     f4c:	add	x1, x2, x1, lsl #3
     f50:	ldur	w1, [x1, #-8]
     f54:	bl	b90 <_ZN11__sanitizer12ThreadLister7IsAliveEi>
     f58:	tst	w0, #0xff
     f5c:	b.eq	10ec <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x314>  // b.none
     f60:	mov	w20, #0x0                   	// #0
     f64:	ldr	x3, [x23, #16]
     f68:	ldr	x19, [x25, #16]
     f6c:	b	e40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x68>
     f70:	mov	w24, #0x1                   	// #1
     f74:	mov	w20, #0x0                   	// #0
     f78:	ldr	x19, [x25, #16]
     f7c:	b	e40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x68>
     f80:	ldr	w1, [x25]
     f84:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     f88:	add	x0, x0, #0x0
     f8c:	mov	w24, #0x0                   	// #0
     f90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     f94:	ldp	x21, x22, [sp, #16]
     f98:	ldp	x27, x28, [sp, #64]
     f9c:	mov	w0, w24
     fa0:	ldp	x23, x24, [sp, #32]
     fa4:	ldp	x25, x26, [sp, #48]
     fa8:	ldr	x30, [sp, #80]
     fac:	ldp	x19, x20, [sp], #144
     fb0:	ret
     fb4:	mov	w24, #0x0                   	// #0
     fb8:	mov	w0, w24
     fbc:	ldp	x23, x24, [sp, #32]
     fc0:	ldp	x25, x26, [sp, #48]
     fc4:	ldr	x30, [sp, #80]
     fc8:	ldp	x19, x20, [sp], #144
     fcc:	ret
     fd0:	mov	w20, #0x0                   	// #0
     fd4:	ldr	x19, [x25, #16]
     fd8:	b	e40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x68>
     fdc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     fe0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
     fe4:	mov	x3, x19
     fe8:	add	x2, x2, #0x0
     fec:	add	x0, x0, #0x0
     ff0:	mov	x4, #0x1000                	// #4096
     ff4:	mov	w1, #0x398                 	// #920
     ff8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ffc:	cmp	x3, x3, lsl #1
    1000:	lsl	x20, x3, #1
    1004:	ldr	x19, [x25, #16]
    1008:	b.cs	102c <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x254>  // b.hs, b.nlast
    100c:	cmp	x20, x19
    1010:	b.hi	1100 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x328>  // b.pmore
    1014:	ldr	x19, [x23]
    1018:	add	x0, x19, x3
    101c:	sub	x2, x20, x3
    1020:	mov	w1, #0x0                   	// #0
    1024:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    1028:	ldr	x19, [x25, #16]
    102c:	mov	x3, x20
    1030:	mov	w24, #0x1                   	// #1
    1034:	str	x20, [x23, #16]
    1038:	mov	w20, #0x0                   	// #0
    103c:	b	e40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x68>
    1040:	tst	x3, x0
    1044:	b.eq	1080 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x2a8>  // b.none
    1048:	clz	x2, x0
    104c:	mov	w1, #0x3f                  	// #63
    1050:	sub	w2, w1, w2
    1054:	mov	x1, #0x1                   	// #1
    1058:	add	w4, w2, #0x1
    105c:	lsl	x4, x1, x4
    1060:	cmp	x4, x0
    1064:	b.ls	1160 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x388>  // b.plast
    1068:	lsl	x1, x1, x2
    106c:	cmp	x1, x0
    1070:	b.cs	11f4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x41c>  // b.hs, b.nlast
    1074:	cmp	x3, x4
    1078:	b.hi	11cc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3f4>  // b.pmore
    107c:	mov	x0, x4
    1080:	ldr	x1, [sp, #104]
    1084:	ldr	x2, [x1]
    1088:	lsl	x1, x0, #3
    108c:	cbz	x2, 11a0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3c8>
    1090:	sub	x0, x2, #0x1
    1094:	tst	x2, x0
    1098:	b.ne	11bc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3e4>  // b.any
    109c:	add	x0, x1, x0
    10a0:	neg	x2, x2
    10a4:	and	x4, x0, x2
    10a8:	mov	x1, x21
    10ac:	mov	x0, x4
    10b0:	mov	w2, #0x0                   	// #0
    10b4:	str	x4, [sp, #120]
    10b8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    10bc:	str	x0, [sp, #112]
    10c0:	ldr	x1, [x28]
    10c4:	ldr	x2, [x28, #16]
    10c8:	lsl	x2, x2, #3
    10cc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    10d0:	ldp	x0, x1, [x28]
    10d4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    10d8:	ldr	x3, [x28, #16]
    10dc:	ldp	x7, x4, [sp, #112]
    10e0:	add	x0, x3, #0x1
    10e4:	stp	x7, x4, [x28]
    10e8:	b	f0c <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x134>
    10ec:	mov	w24, #0x1                   	// #1
    10f0:	mov	w20, #0x0                   	// #0
    10f4:	ldr	x3, [x23, #16]
    10f8:	ldr	x19, [x25, #16]
    10fc:	b	e40 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x68>
    1100:	cbz	x20, 1214 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x43c>
    1104:	ldr	x19, [x22]
    1108:	ldr	x0, [x19]
    110c:	cbz	x0, 11e4 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x40c>
    1110:	sub	x1, x0, #0x1
    1114:	tst	x0, x1
    1118:	b.ne	11bc <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x3e4>  // b.any
    111c:	add	x1, x20, x1
    1120:	neg	x0, x0
    1124:	and	x21, x1, x0
    1128:	mov	w2, #0x0                   	// #0
    112c:	mov	x0, x21
    1130:	adrp	x1, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1134:	add	x1, x1, #0x0
    1138:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    113c:	ldr	x1, [x23]
    1140:	mov	x19, x0
    1144:	ldr	x2, [x23, #16]
    1148:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    114c:	ldp	x0, x1, [x23]
    1150:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1154:	stp	x19, x21, [x23]
    1158:	ldr	x3, [x23, #16]
    115c:	b	1018 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x240>
    1160:	mov	x3, x0
    1164:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1168:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    116c:	add	x2, x2, #0x0
    1170:	add	x0, x0, #0x0
    1174:	mov	w1, #0x18a                 	// #394
    1178:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    117c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1180:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1184:	add	x2, x2, #0x0
    1188:	add	x0, x0, #0x0
    118c:	mov	w1, #0x1cd                 	// #461
    1190:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1194:	ldp	x21, x22, [sp, #16]
    1198:	ldp	x27, x28, [sp, #64]
    119c:	b	f9c <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x1c4>
    11a0:	mov	x0, #0x6                   	// #6
    11a4:	str	x1, [sp, #112]
    11a8:	bl	0 <getauxval>
    11ac:	mov	x2, x0
    11b0:	ldp	x0, x1, [sp, #104]
    11b4:	str	x2, [x0]
    11b8:	b	1090 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x2b8>
    11bc:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    11c0:	add	x0, x0, #0x0
    11c4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    11c8:	bl	0 <_ZN11__sanitizer3DieEv>
    11cc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    11d0:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    11d4:	add	x2, x2, #0x0
    11d8:	add	x0, x0, #0x0
    11dc:	mov	w1, #0x20c                 	// #524
    11e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    11e4:	mov	x0, #0x6                   	// #6
    11e8:	bl	0 <getauxval>
    11ec:	str	x0, [x19]
    11f0:	b	1110 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE+0x338>
    11f4:	mov	x4, x1
    11f8:	mov	x3, x0
    11fc:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1200:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1204:	add	x2, x2, #0x0
    1208:	add	x0, x0, #0x0
    120c:	mov	w1, #0x18b                 	// #395
    1210:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1214:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1218:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    121c:	add	x2, x2, #0x0
    1220:	add	x0, x0, #0x0
    1224:	mov	x4, #0x0                   	// #0
    1228:	mov	x3, #0x0                   	// #0
    122c:	mov	w1, #0x20b                 	// #523
    1230:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1234:	nop

0000000000001238 <_ZN11__sanitizer12ThreadListerD1Ev>:
    1238:	mov	x1, x0
    123c:	ldrsw	x0, [x0, #4]
    1240:	cmn	x0, #0x1, lsl #12
    1244:	b.hi	1250 <_ZN11__sanitizer12ThreadListerD1Ev+0x18>  // b.pmore
    1248:	mov	x8, #0x39                  	// #57
    124c:	svc	#0x0
    1250:	ldp	x0, x1, [x1, #8]
    1254:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>

0000000000001258 <_ZN11__sanitizer20GetMaxVirtualAddressEv>:
    1258:	stp	x29, x30, [sp, #-16]!
    125c:	mov	x0, #0x1                   	// #1
    1260:	mov	x29, sp
    1264:	clz	x1, x29
    1268:	neg	w1, w1
    126c:	ldp	x29, x30, [sp], #16
    1270:	lsl	x0, x0, x1
    1274:	sub	x0, x0, #0x1
    1278:	ret
    127c:	nop

0000000000001280 <_ZN11__sanitizer24GetMaxUserVirtualAddressEv>:
    1280:	stp	x29, x30, [sp, #-16]!
    1284:	mov	x0, #0x1                   	// #1
    1288:	mov	x29, sp
    128c:	clz	x1, x29
    1290:	neg	w1, w1
    1294:	ldp	x29, x30, [sp], #16
    1298:	lsl	x0, x0, x1
    129c:	sub	x0, x0, #0x1
    12a0:	ret
    12a4:	nop

00000000000012a8 <_ZN11__sanitizer11GetPageSizeEv>:
    12a8:	mov	x0, #0x6                   	// #6
    12ac:	b	0 <getauxval>

00000000000012b0 <_ZN11__sanitizer14ReadBinaryNameEPcm>:
    12b0:	stp	x19, x20, [sp, #-32]!
    12b4:	mov	x2, x0
    12b8:	mov	x20, x0
    12bc:	mov	x19, x1
    12c0:	mov	x3, x1
    12c4:	mov	x8, #0x4e                  	// #78
    12c8:	mov	x0, #0xffffffffffffff9c    	// #-100
    12cc:	stp	x21, x30, [sp, #16]
    12d0:	adrp	x21, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    12d4:	add	x1, x21, #0x0
    12d8:	svc	#0x0
    12dc:	cmn	x0, #0x1, lsl #12
    12e0:	b.hi	12f0 <_ZN11__sanitizer14ReadBinaryNameEPcm+0x40>  // b.pmore
    12e4:	ldp	x21, x30, [sp, #16]
    12e8:	ldp	x19, x20, [sp], #32
    12ec:	ret
    12f0:	neg	w1, w0
    12f4:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    12f8:	add	x0, x0, #0x0
    12fc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1300:	add	x3, x21, #0x0
    1304:	mov	x0, x20
    1308:	mov	x1, x19
    130c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1310:	add	x2, x2, #0x0
    1314:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    1318:	cmp	x19, w0, sxtw
    131c:	sxtw	x0, w0
    1320:	b.hi	12e4 <_ZN11__sanitizer14ReadBinaryNameEPcm+0x34>  // b.pmore
    1324:	mov	x3, x0
    1328:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    132c:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1330:	mov	x4, x19
    1334:	add	x2, x2, #0x0
    1338:	add	x0, x0, #0x0
    133c:	mov	w1, #0x45c                 	// #1116
    1340:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1344:	nop

0000000000001348 <_ZN11__sanitizer19ReadLongProcessNameEPcm>:
    1348:	stp	x19, x20, [sp, #-64]!
    134c:	mov	x5, #0x0                   	// #0
    1350:	mov	x19, x0
    1354:	mov	x20, x1
    1358:	add	x3, sp, #0x38
    135c:	add	x2, sp, #0x30
    1360:	add	x1, sp, #0x28
    1364:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1368:	mov	x4, #0x100000              	// #1048576
    136c:	add	x0, x0, #0x0
    1370:	str	x30, [sp, #24]
    1374:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
    1378:	tst	w0, #0xff
    137c:	b.eq	13ac <_ZN11__sanitizer19ReadLongProcessNameEPcm+0x64>  // b.none
    1380:	ldr	x1, [sp, #40]
    1384:	mov	x2, x20
    1388:	mov	x0, x19
    138c:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
    1390:	ldp	x0, x1, [sp, #40]
    1394:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1398:	mov	x0, x19
    139c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    13a0:	ldr	x30, [sp, #24]
    13a4:	ldp	x19, x20, [sp], #64
    13a8:	ret
    13ac:	mov	x2, x19
    13b0:	mov	x3, x20
    13b4:	mov	x8, #0x4e                  	// #78
    13b8:	mov	x0, #0xffffffffffffff9c    	// #-100
    13bc:	str	x21, [sp, #16]
    13c0:	adrp	x21, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    13c4:	add	x1, x21, #0x0
    13c8:	svc	#0x0
    13cc:	cmn	x0, #0x1, lsl #12
    13d0:	b.hi	13e4 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0x9c>  // b.pmore
    13d4:	ldr	x21, [sp, #16]
    13d8:	ldr	x30, [sp, #24]
    13dc:	ldp	x19, x20, [sp], #64
    13e0:	ret
    13e4:	neg	w1, w0
    13e8:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    13ec:	add	x0, x0, #0x0
    13f0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    13f4:	add	x3, x21, #0x0
    13f8:	mov	x0, x19
    13fc:	mov	x1, x20
    1400:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1404:	add	x2, x2, #0x0
    1408:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    140c:	cmp	x20, w0, sxtw
    1410:	sxtw	x0, w0
    1414:	b.hi	13d4 <_ZN11__sanitizer19ReadLongProcessNameEPcm+0x8c>  // b.pmore
    1418:	mov	x3, x0
    141c:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1420:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1424:	mov	x4, x20
    1428:	add	x2, x2, #0x0
    142c:	add	x0, x0, #0x0
    1430:	mov	w1, #0x45c                 	// #1116
    1434:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001438 <_ZN11__sanitizer13LibraryNameIsEPKcS1_>:
    1438:	stp	x19, x20, [sp, #-32]!
    143c:	mov	x20, x1
    1440:	mov	x19, x0
    1444:	str	x30, [sp, #16]
    1448:	ldrb	w1, [x0]
    144c:	cbz	w1, 1480 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x48>
    1450:	ldrb	w2, [x19, #1]!
    1454:	cbnz	w2, 1450 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x18>
    1458:	cmp	x0, x19
    145c:	b.cc	1470 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x38>  // b.lo, b.ul, b.last
    1460:	b	1480 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x48>
    1464:	ldrb	w2, [x19, #-1]!
    1468:	cmp	x0, x19
    146c:	b.eq	14c8 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x90>  // b.none
    1470:	ldrb	w2, [x19]
    1474:	cmp	w2, #0x2f
    1478:	b.ne	1464 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x2c>  // b.any
    147c:	add	x19, x19, #0x1
    1480:	mov	x0, x20
    1484:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    1488:	mov	x1, x20
    148c:	mov	x20, x0
    1490:	mov	x2, x20
    1494:	mov	x0, x19
    1498:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    149c:	mov	w1, #0x0                   	// #0
    14a0:	cbnz	w0, 14b8 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x80>
    14a4:	ldrb	w0, [x19, x20]
    14a8:	sub	w0, w0, #0x2d
    14ac:	and	w0, w0, #0xff
    14b0:	cmp	w0, #0x1
    14b4:	cset	w1, ls  // ls = plast
    14b8:	mov	w0, w1
    14bc:	ldr	x30, [sp, #16]
    14c0:	ldp	x19, x20, [sp], #32
    14c4:	ret
    14c8:	cmp	w2, #0x2f
    14cc:	b.ne	1480 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x48>  // b.any
    14d0:	add	x19, x19, #0x1
    14d4:	b	1480 <_ZN11__sanitizer13LibraryNameIsEPKcS1_+0x48>

00000000000014d8 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE>:
    14d8:	stp	x19, x20, [sp, #-80]!
    14dc:	stp	x21, x22, [sp, #16]
    14e0:	str	x30, [sp, #72]
    14e4:	cbz	x0, 1624 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x14c>
    14e8:	str	x27, [sp, #64]
    14ec:	mov	x21, x1
    14f0:	ldr	x27, [x0]
    14f4:	mov	x22, #0xffffffffffffffff    	// #-1
    14f8:	ldrh	w0, [x27, #54]
    14fc:	ldrh	w20, [x27, #56]
    1500:	ldr	x19, [x27, #32]
    1504:	and	x2, x0, #0xffff
    1508:	mul	w20, w20, w0
    150c:	add	x19, x27, x19
    1510:	mov	x0, x19
    1514:	add	x20, x19, w20, sxtw
    1518:	cmp	x19, x20
    151c:	b.eq	15d0 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xf8>  // b.none
    1520:	stp	x23, x24, [sp, #32]
    1524:	stp	x25, x26, [sp, #48]
    1528:	ldr	w3, [x0]
    152c:	cmp	w3, #0x1
    1530:	b.ne	1540 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x68>  // b.any
    1534:	ldr	x1, [x0, #16]
    1538:	cmp	x22, x1
    153c:	csel	x22, x22, x1, ls  // ls = plast
    1540:	add	x0, x0, x2
    1544:	cmp	x20, x0
    1548:	b.ne	1528 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x50>  // b.any
    154c:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1550:	sub	x22, x27, x22
    1554:	ldr	x23, [x23]
    1558:	b	1568 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x90>
    155c:	add	x19, x19, x2
    1560:	cmp	x20, x19
    1564:	b.eq	15c8 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xf0>  // b.none
    1568:	ldr	w0, [x19]
    156c:	cmp	w0, #0x1
    1570:	b.ne	155c <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x84>  // b.any
    1574:	ldr	x0, [x23]
    1578:	ldr	x25, [x19, #16]
    157c:	neg	x24, x0
    1580:	ldr	x1, [x19, #40]
    1584:	add	x25, x22, x25
    1588:	and	x24, x24, x25
    158c:	add	x26, x25, x1
    1590:	cbz	x0, 15e4 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x10c>
    1594:	sub	x2, x0, #0x1
    1598:	tst	x2, x0
    159c:	b.ne	1614 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x13c>  // b.any
    15a0:	add	x2, x2, x26
    15a4:	neg	x0, x0
    15a8:	and	x1, x2, x0
    15ac:	mov	x0, x24
    15b0:	sub	x1, x1, x24
    15b4:	blr	x21
    15b8:	ldrh	w2, [x27, #54]
    15bc:	add	x19, x19, x2
    15c0:	cmp	x20, x19
    15c4:	b.ne	1568 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0x90>  // b.any
    15c8:	ldp	x23, x24, [sp, #32]
    15cc:	ldp	x25, x26, [sp, #48]
    15d0:	ldp	x21, x22, [sp, #16]
    15d4:	ldr	x27, [sp, #64]
    15d8:	ldr	x30, [sp, #72]
    15dc:	ldp	x19, x20, [sp], #80
    15e0:	ret
    15e4:	mov	x0, #0x6                   	// #6
    15e8:	bl	0 <getauxval>
    15ec:	str	x0, [x23]
    15f0:	neg	x24, x0
    15f4:	and	x24, x24, x25
    15f8:	cbnz	x0, 1594 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xbc>
    15fc:	mov	x0, #0x6                   	// #6
    1600:	bl	0 <getauxval>
    1604:	str	x0, [x23]
    1608:	sub	x2, x0, #0x1
    160c:	tst	x2, x0
    1610:	b.eq	15a0 <_ZN11__sanitizer19ForEachMappedRegionEP8link_mapPFvPKvmE+0xc8>  // b.none
    1614:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1618:	add	x0, x0, #0x0
    161c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    1620:	bl	0 <_ZN11__sanitizer3DieEv>
    1624:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1628:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    162c:	add	x2, x2, #0x0
    1630:	add	x0, x0, #0x0
    1634:	mov	x4, #0x0                   	// #0
    1638:	mov	x3, #0x0                   	// #0
    163c:	mov	w1, #0x481                 	// #1153
    1640:	stp	x23, x24, [sp, #32]
    1644:	stp	x25, x26, [sp, #48]
    1648:	str	x27, [sp, #64]
    164c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001650 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_>:
    1650:	cmp	x0, #0x0
    1654:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    1658:	b.eq	16ac <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x5c>  // b.none
    165c:	str	x30, [sp, #-16]!
    1660:	mov	x7, x1
    1664:	ands	x1, x1, #0xf
    1668:	b.ne	16b4 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x64>  // b.any
    166c:	sub	x1, x7, #0x10
    1670:	stp	x0, x3, [x7, #-16]
    1674:	mov	x0, x2
    1678:	mov	x2, x4
    167c:	mov	x3, x5
    1680:	mov	x4, x6
    1684:	mov	x8, #0xdc                  	// #220
    1688:	svc	#0x0
    168c:	cmp	x0, #0x0
    1690:	b.ne	16a4 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_+0x54>  // b.any
    1694:	ldp	x1, x0, [sp], #16
    1698:	blr	x1
    169c:	mov	x8, #0x5d                  	// #93
    16a0:	svc	#0x0
    16a4:	ldr	x30, [sp], #16
    16a8:	ret
    16ac:	mov	x0, #0xffffffffffffffea    	// #-22
    16b0:	ret
    16b4:	mov	x4, x1
    16b8:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    16bc:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    16c0:	add	x2, x2, #0x0
    16c4:	add	x0, x0, #0x0
    16c8:	mov	x3, #0x0                   	// #0
    16cc:	mov	w1, #0x537                 	// #1335
    16d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    16d4:	nop

00000000000016d8 <_ZN11__sanitizer19GetHandleSignalModeEi>:
    16d8:	cmp	w0, #0x7
    16dc:	b.eq	1788 <_ZN11__sanitizer19GetHandleSignalModeEi+0xb0>  // b.none
    16e0:	b.gt	172c <_ZN11__sanitizer19GetHandleSignalModeEi+0x54>
    16e4:	cmp	w0, #0x5
    16e8:	b.eq	17a0 <_ZN11__sanitizer19GetHandleSignalModeEi+0xc8>  // b.none
    16ec:	cmp	w0, #0x6
    16f0:	b.ne	170c <_ZN11__sanitizer19GetHandleSignalModeEi+0x34>  // b.any
    16f4:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    16f8:	ldr	x0, [x1]
    16fc:	ldr	w0, [x0, #80]
    1700:	cmp	w0, #0x1
    1704:	b.eq	1750 <_ZN11__sanitizer19GetHandleSignalModeEi+0x78>  // b.none
    1708:	ret
    170c:	cmp	w0, #0x4
    1710:	b.ne	1768 <_ZN11__sanitizer19GetHandleSignalModeEi+0x90>  // b.any
    1714:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1718:	ldr	x0, [x1]
    171c:	ldr	w0, [x0, #84]
    1720:	cmp	w0, #0x1
    1724:	b.ne	1708 <_ZN11__sanitizer19GetHandleSignalModeEi+0x30>  // b.any
    1728:	b	1750 <_ZN11__sanitizer19GetHandleSignalModeEi+0x78>
    172c:	cmp	w0, #0x8
    1730:	b.eq	1770 <_ZN11__sanitizer19GetHandleSignalModeEi+0x98>  // b.none
    1734:	cmp	w0, #0xb
    1738:	b.ne	1768 <_ZN11__sanitizer19GetHandleSignalModeEi+0x90>  // b.any
    173c:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1740:	ldr	x0, [x1]
    1744:	ldr	w0, [x0, #72]
    1748:	cmp	w0, #0x1
    174c:	b.ne	1708 <_ZN11__sanitizer19GetHandleSignalModeEi+0x30>  // b.any
    1750:	ldr	x1, [x1]
    1754:	mov	w2, #0x2                   	// #2
    1758:	ldrb	w1, [x1, #96]
    175c:	cmp	w1, #0x0
    1760:	csel	w0, w0, w2, ne  // ne = any
    1764:	ret
    1768:	mov	w0, #0x0                   	// #0
    176c:	ret
    1770:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1774:	ldr	x0, [x1]
    1778:	ldr	w0, [x0, #92]
    177c:	cmp	w0, #0x1
    1780:	b.ne	1708 <_ZN11__sanitizer19GetHandleSignalModeEi+0x30>  // b.any
    1784:	b	1750 <_ZN11__sanitizer19GetHandleSignalModeEi+0x78>
    1788:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    178c:	ldr	x0, [x1]
    1790:	ldr	w0, [x0, #76]
    1794:	cmp	w0, #0x1
    1798:	b.ne	1708 <_ZN11__sanitizer19GetHandleSignalModeEi+0x30>  // b.any
    179c:	b	1750 <_ZN11__sanitizer19GetHandleSignalModeEi+0x78>
    17a0:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    17a4:	ldr	x0, [x1]
    17a8:	ldr	w0, [x0, #88]
    17ac:	cmp	w0, #0x1
    17b0:	b.ne	1708 <_ZN11__sanitizer19GetHandleSignalModeEi+0x30>  // b.any
    17b4:	b	1750 <_ZN11__sanitizer19GetHandleSignalModeEi+0x78>

00000000000017b8 <_ZN11__sanitizer21internal_start_threadEPFvPvES0_>:
    17b8:	stp	x19, x20, [sp, #-320]!
    17bc:	mov	x2, #0x80                  	// #128
    17c0:	add	x20, sp, #0x40
    17c4:	stp	x21, x22, [sp, #16]
    17c8:	mov	x21, x0
    17cc:	mov	x22, x1
    17d0:	mov	x0, x20
    17d4:	mov	w1, #0xff                  	// #255
    17d8:	str	x30, [sp, #32]
    17dc:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    17e0:	add	x19, sp, #0xc0
    17e4:	ldrb	w4, [sp, #68]
    17e8:	mov	x1, x20
    17ec:	mov	x2, x19
    17f0:	mov	x8, #0x87                  	// #135
    17f4:	and	w4, w4, #0xfffffffe
    17f8:	mov	x0, #0x2                   	// #2
    17fc:	mov	x3, #0x8                   	// #8
    1800:	strb	w4, [sp, #68]
    1804:	svc	#0x0
    1808:	mov	x1, #0x0                   	// #0
    180c:	mov	x3, x22
    1810:	mov	x2, x21
    1814:	add	x0, sp, #0x38
    1818:	bl	0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_>
    181c:	mov	x1, x19
    1820:	mov	x8, #0x87                  	// #135
    1824:	mov	x0, #0x2                   	// #2
    1828:	mov	x2, #0x0                   	// #0
    182c:	mov	x3, #0x8                   	// #8
    1830:	svc	#0x0
    1834:	ldp	x21, x22, [sp, #16]
    1838:	ldr	x30, [sp, #32]
    183c:	ldr	x0, [sp, #56]
    1840:	ldp	x19, x20, [sp], #320
    1844:	ret

0000000000001848 <_ZN11__sanitizer20internal_join_threadEPv>:
    1848:	mov	x1, #0x0                   	// #0
    184c:	b	0 <_ZN11__sanitizer17real_pthread_joinEPvPS0_>

0000000000001850 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>:
    1850:	ldr	x0, [x0, #8]
    1854:	add	x1, x0, #0x1d0
    1858:	ldr	w0, [x0, #468]
    185c:	cbz	w0, 1890 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x40>
    1860:	mov	w3, #0x5201                	// #20993
    1864:	movk	w3, #0x4553, lsl #16
    1868:	b	1878 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x28>
    186c:	add	x1, x1, w0, uxtw
    1870:	ldr	w0, [x1, #4]
    1874:	cbz	w0, 1890 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x40>
    1878:	ldr	w2, [x1]
    187c:	cmp	w2, w3
    1880:	b.ne	186c <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv+0x1c>  // b.any
    1884:	ldr	x0, [x1, #8]
    1888:	ubfx	w0, w0, #6, #1
    188c:	add	w0, w0, #0x1
    1890:	ret
    1894:	nop

0000000000001898 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>:
    1898:	ldr	x0, [x0]
    189c:	ldr	w1, [x0]
    18a0:	cmp	w1, #0xb
    18a4:	b.eq	18b0 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv+0x18>  // b.none
    18a8:	mov	w0, #0x0                   	// #0
    18ac:	ret
    18b0:	ldr	w0, [x0, #8]
    18b4:	cmp	w0, #0x80
    18b8:	cset	w0, ne  // ne = any
    18bc:	ret

00000000000018c0 <_ZN11__sanitizer13SignalContext16DumpAllRegistersEPv>:
    18c0:	ret
    18c4:	nop

00000000000018c8 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>:
    18c8:	ldr	x1, [x0, #8]
    18cc:	ldr	x2, [x1, #416]
    18d0:	ldp	x3, x1, [x1, #432]
    18d4:	stp	x1, x3, [x0, #24]
    18d8:	str	x2, [x0, #40]
    18dc:	ret

00000000000018e0 <_ZN11__sanitizer23InitializePlatformEarlyEv>:
    18e0:	ret
    18e4:	nop

00000000000018e8 <_ZN11__sanitizer11MaybeReexecEv>:
    18e8:	ret
    18ec:	nop

00000000000018f0 <_ZN11__sanitizer9CheckASLREv>:
    18f0:	ret
    18f4:	nop

00000000000018f8 <_ZN11__sanitizer13CheckMPROTECTEv>:
    18f8:	ret
    18fc:	nop

0000000000001900 <_ZN11__sanitizer14PrintModuleMapEv>:
    1900:	ret
    1904:	nop

0000000000001908 <_ZN11__sanitizer15CheckNoDeepBindEPKci>:
    1908:	tbnz	w1, #3, 1910 <_ZN11__sanitizer15CheckNoDeepBindEPKci+0x8>
    190c:	ret
    1910:	mov	x2, x0
    1914:	adrp	x1, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1918:	add	x0, x1, #0x0
    191c:	mov	x1, x2
    1920:	str	x30, [sp, #-16]!
    1924:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1928:	bl	0 <_ZN11__sanitizer3DieEv>
    192c:	nop

0000000000001930 <_ZN11__sanitizer24FindAvailableMemoryRangeEmmmPmS0_>:
    1930:	str	x30, [sp, #-16]!
    1934:	adrp	x2, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1938:	adrp	x0, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    193c:	add	x2, x2, #0x0
    1940:	add	x0, x0, #0x0
    1944:	mov	x4, #0x0                   	// #0
    1948:	mov	x3, #0x0                   	// #0
    194c:	mov	w1, #0x83a                 	// #2106
    1950:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1954:	nop

0000000000001958 <_ZN11__sanitizer9GetRandomEPvmb>:
    1958:	sub	x5, x1, #0x1
    195c:	mov	x3, x1
    1960:	cmp	x5, #0xff
    1964:	mov	x4, x0
    1968:	and	w2, w2, #0xff
    196c:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
    1970:	b.ne	197c <_ZN11__sanitizer9GetRandomEPvmb+0x24>  // b.any
    1974:	mov	w0, #0x0                   	// #0
    1978:	ret
    197c:	adrp	x5, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    1980:	add	x5, x5, #0x0
    1984:	ldrb	w6, [x5, #24]
    1988:	tst	w6, #0xff
    198c:	b.ne	19b4 <_ZN11__sanitizer9GetRandomEPvmb+0x5c>  // b.any
    1990:	eor	w2, w2, #0x1
    1994:	mov	x8, #0x116                 	// #278
    1998:	and	x2, x2, #0xff
    199c:	svc	#0x0
    19a0:	cmn	x0, #0x1, lsl #12
    19a4:	b.hi	1a08 <_ZN11__sanitizer9GetRandomEPvmb+0xb0>  // b.pmore
    19a8:	cmp	x1, x0
    19ac:	mov	w0, #0x1                   	// #1
    19b0:	b.eq	1978 <_ZN11__sanitizer9GetRandomEPvmb+0x20>  // b.none
    19b4:	adrp	x1, 0 <_ZN11__sanitizerL22ReadNullSepFileToArrayEPKcPPPci.constprop.0>
    19b8:	mov	x8, #0x38                  	// #56
    19bc:	add	x1, x1, #0x0
    19c0:	mov	x0, #0xffffffffffffff9c    	// #-100
    19c4:	mov	x2, #0x0                   	// #0
    19c8:	svc	#0x0
    19cc:	cmn	x0, #0x1, lsl #12
    19d0:	b.hi	1974 <_ZN11__sanitizer9GetRandomEPvmb+0x1c>  // b.pmore
    19d4:	sxtw	x5, w0
    19d8:	mov	x0, x5
    19dc:	mov	x1, x4
    19e0:	mov	x2, x3
    19e4:	mov	x8, #0x3f                  	// #63
    19e8:	svc	#0x0
    19ec:	cmn	x0, #0x1, lsl #12
    19f0:	b.hi	1a1c <_ZN11__sanitizer9GetRandomEPvmb+0xc4>  // b.pmore
    19f4:	mov	x0, x5
    19f8:	mov	x8, #0x39                  	// #57
    19fc:	svc	#0x0
    1a00:	mov	w0, #0x1                   	// #1
    1a04:	ret
    1a08:	cmn	w0, #0x26
    1a0c:	b.ne	19b4 <_ZN11__sanitizer9GetRandomEPvmb+0x5c>  // b.any
    1a10:	mov	w0, #0x1                   	// #1
    1a14:	strb	w0, [x5, #24]
    1a18:	b	19b4 <_ZN11__sanitizer9GetRandomEPvmb+0x5c>
    1a1c:	cmn	w0, #0x4
    1a20:	b.eq	19d8 <_ZN11__sanitizer9GetRandomEPvmb+0x80>  // b.none
    1a24:	mov	w0, #0x0                   	// #0
    1a28:	b	1978 <_ZN11__sanitizer9GetRandomEPvmb+0x20>

sanitizer_linux_s390.cpp.o:     file format elf64-littleaarch64


sanitizer_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_netbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_openbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_persistent_allocator.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_freebsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_linux.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_netbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_openbsd.cpp.o:     file format elf64-littleaarch64


sanitizer_platform_limits_posix.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22__sanitizer_in_addr_szEi>:
   0:	cmp	w0, #0x2
   4:	b.eq	18 <_ZN11__sanitizer22__sanitizer_in_addr_szEi+0x18>  // b.none
   8:	cmp	w0, #0xa
   c:	cset	x0, eq  // eq = none
  10:	lsl	x0, x0, #4
  14:	ret
  18:	mov	x0, #0x4                   	// #4
  1c:	ret

sanitizer_platform_limits_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_posix.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18GetMmapGranularityEv>:
       0:	b	0 <_ZN11__sanitizer11GetPageSizeEv>
       4:	nop

0000000000000008 <_ZN11__sanitizer10UnmapOrDieEPvm>:
       8:	cmp	x0, #0x0
       c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
      10:	b.ne	18 <_ZN11__sanitizer10UnmapOrDieEPvm+0x10>  // b.any
      14:	ret
      18:	stp	x19, x20, [sp, #-32]!
      1c:	mov	x19, x1
      20:	mov	x20, x0
      24:	str	x30, [sp, #16]
      28:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
      2c:	mov	x1, #0x0                   	// #0
      30:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
      34:	tst	w0, #0xff
      38:	b.ne	4c <_ZN11__sanitizer10UnmapOrDieEPvm+0x44>  // b.any
      3c:	mov	x0, x19
      40:	ldr	x30, [sp, #16]
      44:	ldp	x19, x20, [sp], #32
      48:	b	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
      4c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
      50:	mov	x4, x20
      54:	mov	x3, x19
      58:	mov	x2, x19
      5c:	ldr	x1, [x1]
      60:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
      64:	add	x0, x0, #0x0
      68:	ldr	x1, [x1]
      6c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
      70:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
      74:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
      78:	add	x2, x2, #0x0
      7c:	add	x0, x0, #0x0
      80:	mov	x4, #0x0                   	// #0
      84:	mov	x3, #0x0                   	// #0
      88:	mov	w1, #0x3d                  	// #61
      8c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000090 <_ZN11__sanitizer16MprotectNoAccessEmm>:
      90:	str	x30, [sp, #-16]!
      94:	mov	w2, #0x0                   	// #0
      98:	bl	0 <_ZN11__sanitizer17internal_mprotectEPvmi>
      9c:	cmp	w0, #0x0
      a0:	cset	w0, eq  // eq = none
      a4:	ldr	x30, [sp], #16
      a8:	ret
      ac:	nop

00000000000000b0 <_ZN11__sanitizer16MprotectReadOnlyEmm>:
      b0:	str	x30, [sp, #-16]!
      b4:	mov	w2, #0x1                   	// #1
      b8:	bl	0 <_ZN11__sanitizer17internal_mprotectEPvmi>
      bc:	cmp	w0, #0x0
      c0:	cset	w0, eq  // eq = none
      c4:	ldr	x30, [sp], #16
      c8:	ret
      cc:	nop

00000000000000d0 <_ZN11__sanitizer19MprotectMallocZonesEPvi>:
      d0:	ret
      d4:	nop

00000000000000d8 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>:
      d8:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
      dc:	stp	x19, x20, [sp, #-64]!
      e0:	mov	w19, w1
      e4:	ldr	x3, [x3]
      e8:	stp	x21, x22, [sp, #16]
      ec:	mov	x20, x2
      f0:	mov	x21, x0
      f4:	ldrb	w1, [x3, #243]
      f8:	str	x30, [sp, #32]
      fc:	cbnz	w1, 1c4 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xec>
     100:	cmp	w19, #0x2
     104:	b.ls	150 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x78>  // b.plast
     108:	mov	w2, #0x1b0                 	// #432
     10c:	mov	w1, w22
     110:	mov	x0, x21
     114:	bl	0 <_ZN11__sanitizer13internal_openEPKcij>
     118:	mov	x1, x20
     11c:	mov	w19, w0
     120:	mov	x20, x0
     124:	sxtw	x0, w0
     128:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     12c:	tst	w0, #0xff
     130:	b.ne	1d8 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x100>  // b.any
     134:	cmp	w20, #0x2
     138:	b.le	160 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x88>
     13c:	mov	w0, w19
     140:	ldp	x21, x22, [sp, #16]
     144:	ldr	x30, [sp, #32]
     148:	ldp	x19, x20, [sp], #64
     14c:	ret
     150:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     154:	add	x0, x0, #0x0
     158:	ldr	w22, [x0, w19, uxtw #2]
     15c:	b	108 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x30>
     160:	add	x20, sp, #0x38
     164:	mov	w21, #0x1                   	// #1
     168:	mov	x0, x20
     16c:	mov	x2, #0x3                   	// #3
     170:	mov	w1, #0x0                   	// #0
     174:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     178:	mov	w0, w19
     17c:	strb	w21, [x20, w19, sxtw]
     180:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     184:	mov	x19, x0
     188:	cmp	w0, #0x2
     18c:	b.le	178 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xa0>
     190:	ldrb	w0, [sp, #56]
     194:	cbnz	w0, 1fc <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x124>
     198:	ldrb	w0, [sp, #57]
     19c:	cbnz	w0, 1f0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x118>
     1a0:	ldrb	w0, [sp, #58]
     1a4:	cbz	w0, 13c <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x64>
     1a8:	mov	w0, #0x2                   	// #2
     1ac:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     1b0:	mov	w0, w19
     1b4:	ldp	x21, x22, [sp, #16]
     1b8:	ldr	x30, [sp, #32]
     1bc:	ldp	x19, x20, [sp], #64
     1c0:	ret
     1c4:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     1c8:	mov	x2, #0x6                   	// #6
     1cc:	add	x1, x1, #0x0
     1d0:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
     1d4:	cbnz	w0, 100 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0x28>
     1d8:	mov	w19, #0xffffffff            	// #-1
     1dc:	mov	w0, w19
     1e0:	ldp	x21, x22, [sp, #16]
     1e4:	ldr	x30, [sp, #32]
     1e8:	ldp	x19, x20, [sp], #64
     1ec:	ret
     1f0:	mov	w0, #0x1                   	// #1
     1f4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     1f8:	b	1a0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xc8>
     1fc:	mov	w0, #0x0                   	// #0
     200:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     204:	b	198 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi+0xc0>

0000000000000208 <_ZN11__sanitizer9CloseFileEi>:
     208:	b	0 <_ZN11__sanitizer14internal_closeEi>
     20c:	nop

0000000000000210 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>:
     210:	stp	x19, x20, [sp, #-32]!
     214:	mov	x20, x4
     218:	mov	x19, x3
     21c:	str	x30, [sp, #16]
     220:	bl	0 <_ZN11__sanitizer13internal_readEiPvm>
     224:	mov	x1, x20
     228:	mov	x20, x0
     22c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     230:	tst	w0, #0xff
     234:	b.ne	250 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi+0x40>  // b.any
     238:	mov	w0, #0x1                   	// #1
     23c:	cbz	x19, 244 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi+0x34>
     240:	str	x20, [x19]
     244:	ldr	x30, [sp, #16]
     248:	ldp	x19, x20, [sp], #32
     24c:	ret
     250:	mov	w0, #0x0                   	// #0
     254:	ldr	x30, [sp, #16]
     258:	ldp	x19, x20, [sp], #32
     25c:	ret

0000000000000260 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>:
     260:	stp	x19, x20, [sp, #-32]!
     264:	mov	x20, x4
     268:	mov	x19, x3
     26c:	str	x30, [sp, #16]
     270:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
     274:	mov	x1, x20
     278:	mov	x20, x0
     27c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     280:	tst	w0, #0xff
     284:	b.ne	2a0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi+0x40>  // b.any
     288:	mov	w0, #0x1                   	// #1
     28c:	cbz	x19, 294 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi+0x34>
     290:	str	x20, [x19]
     294:	ldr	x30, [sp, #16]
     298:	ldp	x19, x20, [sp], #32
     29c:	ret
     2a0:	mov	w0, #0x0                   	// #0
     2a4:	ldr	x30, [sp, #16]
     2a8:	ldp	x19, x20, [sp], #32
     2ac:	ret

00000000000002b0 <_ZN11__sanitizer15MapFileToMemoryEPKcPm>:
     2b0:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     2b4:	stp	x19, x20, [sp, #-64]!
     2b8:	mov	x19, x0
     2bc:	ldr	x2, [x2]
     2c0:	stp	x21, x22, [sp, #16]
     2c4:	mov	x21, x1
     2c8:	ldrb	w1, [x2, #243]
     2cc:	str	x30, [sp, #32]
     2d0:	cbnz	w1, 3ec <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x13c>
     2d4:	mov	w2, #0x1b0                 	// #432
     2d8:	mov	x0, x19
     2dc:	mov	w1, #0x0                   	// #0
     2e0:	bl	0 <_ZN11__sanitizer13internal_openEPKcij>
     2e4:	mov	x1, #0x0                   	// #0
     2e8:	mov	x20, x0
     2ec:	mov	w19, w0
     2f0:	sxtw	x0, w0
     2f4:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     2f8:	tst	w0, #0xff
     2fc:	b.ne	400 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x150>  // b.any
     300:	cmp	w20, #0x2
     304:	b.le	398 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xe8>
     308:	mov	w0, w19
     30c:	bl	0 <_ZN11__sanitizer17internal_filesizeEi>
     310:	mov	x20, x0
     314:	cmn	x0, #0x1
     318:	b.eq	438 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x188>  // b.none
     31c:	cbz	x20, 458 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x1a8>
     320:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
     324:	ldr	x22, [x22]
     328:	ldr	x0, [x22]
     32c:	cbz	x0, 38c <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0xdc>
     330:	sub	x1, x0, #0x1
     334:	tst	x0, x1
     338:	b.ne	478 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x1c8>  // b.any
     33c:	add	x20, x20, x1
     340:	neg	x1, x0
     344:	and	x1, x20, x1
     348:	mov	w4, w19
     34c:	str	x1, [x21]
     350:	mov	x5, #0x0                   	// #0
     354:	mov	w3, #0x2                   	// #2
     358:	mov	w2, #0x1                   	// #1
     35c:	mov	x0, #0x0                   	// #0
     360:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     364:	mov	x1, #0x0                   	// #0
     368:	mov	x19, x0
     36c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     370:	tst	w0, #0xff
     374:	csel	x19, x19, xzr, eq  // eq = none
     378:	mov	x0, x19
     37c:	ldp	x21, x22, [sp, #16]
     380:	ldr	x30, [sp, #32]
     384:	ldp	x19, x20, [sp], #64
     388:	ret
     38c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     390:	str	x0, [x22]
     394:	b	330 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x80>
     398:	add	x20, sp, #0x38
     39c:	mov	w22, #0x1                   	// #1
     3a0:	mov	x0, x20
     3a4:	mov	x2, #0x3                   	// #3
     3a8:	mov	w1, #0x0                   	// #0
     3ac:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     3b0:	mov	w0, w19
     3b4:	strb	w22, [x20, w19, sxtw]
     3b8:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     3bc:	mov	x19, x0
     3c0:	cmp	w0, #0x2
     3c4:	b.le	3b0 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x100>
     3c8:	ldrb	w0, [sp, #56]
     3cc:	cbnz	w0, 42c <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x17c>
     3d0:	ldrb	w0, [sp, #57]
     3d4:	cbnz	w0, 420 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x170>
     3d8:	ldrb	w0, [sp, #58]
     3dc:	cbz	w0, 308 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x58>
     3e0:	mov	w0, #0x2                   	// #2
     3e4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     3e8:	b	308 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x58>
     3ec:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     3f0:	mov	x2, #0x6                   	// #6
     3f4:	add	x1, x1, #0x0
     3f8:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
     3fc:	cbnz	w0, 2d4 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x24>
     400:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     404:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     408:	add	x2, x2, #0x0
     40c:	add	x0, x0, #0x0
     410:	mov	x4, #0x0                   	// #0
     414:	mov	x3, #0x0                   	// #0
     418:	mov	w1, #0xc2                  	// #194
     41c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     420:	mov	w0, #0x1                   	// #1
     424:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     428:	b	3d8 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x128>
     42c:	mov	w0, #0x0                   	// #0
     430:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     434:	b	3d0 <_ZN11__sanitizer15MapFileToMemoryEPKcPm+0x120>
     438:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     43c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     440:	add	x2, x2, #0x0
     444:	add	x0, x0, #0x0
     448:	mov	x4, x20
     44c:	mov	x3, x20
     450:	mov	w1, #0xc4                  	// #196
     454:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     458:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     45c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     460:	add	x2, x2, #0x0
     464:	add	x0, x0, #0x0
     468:	mov	x4, #0x0                   	// #0
     46c:	mov	x3, #0x0                   	// #0
     470:	mov	w1, #0xc5                  	// #197
     474:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     478:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     47c:	add	x0, x0, #0x0
     480:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     484:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000488 <_ZN11__sanitizer23MapWritableFileToMemoryEPvmim>:
     488:	stp	x19, x20, [sp, #-64]!
     48c:	cmp	x0, #0x0
     490:	mov	x5, x3
     494:	mov	w4, w2
     498:	stp	x21, x22, [sp, #16]
     49c:	mov	x21, x3
     4a0:	mov	w3, #0x11                  	// #17
     4a4:	csinc	w3, w3, wzr, ne  // ne = any
     4a8:	mov	w20, w2
     4ac:	mov	w2, #0x3                   	// #3
     4b0:	mov	x22, x1
     4b4:	str	x30, [sp, #32]
     4b8:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     4bc:	mov	x19, x0
     4c0:	add	x1, sp, #0x3c
     4c4:	str	wzr, [sp, #60]
     4c8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     4cc:	tst	w0, #0xff
     4d0:	b.ne	4e8 <_ZN11__sanitizer23MapWritableFileToMemoryEPvmim+0x60>  // b.any
     4d4:	mov	x0, x19
     4d8:	ldp	x21, x22, [sp, #16]
     4dc:	ldr	x30, [sp, #32]
     4e0:	ldp	x19, x20, [sp], #64
     4e4:	ret
     4e8:	ldr	w5, [sp, #60]
     4ec:	mov	x4, x19
     4f0:	mov	x3, x22
     4f4:	mov	x2, x21
     4f8:	mov	w1, w20
     4fc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     500:	add	x0, x0, #0x0
     504:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     508:	mov	x0, #0x0                   	// #0
     50c:	b	4d8 <_ZN11__sanitizer23MapWritableFileToMemoryEPvmim+0x50>

0000000000000510 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm>:
     510:	stp	x19, x20, [sp, #-160]!
     514:	add	x20, sp, #0x30
     518:	stp	x21, x22, [sp, #16]
     51c:	mov	x22, x1
     520:	mov	w1, #0x1                   	// #1
     524:	mov	x21, x0
     528:	mov	x0, x20
     52c:	str	x30, [sp, #40]
     530:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     534:	mov	x0, x20
     538:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
     53c:	ands	w19, w0, #0xff
     540:	b.ne	5a8 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x98>  // b.any
     544:	str	x23, [sp, #32]
     548:	cmp	x21, x22
     54c:	stp	xzr, xzr, [sp, #104]
     550:	add	x23, sp, #0x50
     554:	str	xzr, [sp, #152]
     558:	b.hi	5c4 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xb4>  // b.pmore
     55c:	mov	x1, x23
     560:	mov	x0, x20
     564:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     568:	tst	w0, #0xff
     56c:	b.eq	658 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x148>  // b.none
     570:	ldp	x3, x2, [sp, #80]
     574:	cmp	x3, x2
     578:	b.eq	55c <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x4c>  // b.none
     57c:	cbz	x2, 614 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x104>
     580:	sub	x2, x2, #0x1
     584:	cmp	x3, x2
     588:	b.hi	634 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x124>  // b.pmore
     58c:	cmp	x22, x3
     590:	cset	w19, cc  // cc = lo, ul, last
     594:	cmp	x21, x2
     598:	cset	w0, hi  // hi = pmore
     59c:	orr	w19, w19, w0
     5a0:	cbnz	w19, 55c <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x4c>
     5a4:	ldr	x23, [sp, #32]
     5a8:	mov	x0, x20
     5ac:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     5b0:	mov	w0, w19
     5b4:	ldp	x21, x22, [sp, #16]
     5b8:	ldr	x30, [sp, #40]
     5bc:	ldp	x19, x20, [sp], #160
     5c0:	ret
     5c4:	mov	x1, x23
     5c8:	mov	x0, x20
     5cc:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     5d0:	tst	w0, #0xff
     5d4:	b.eq	658 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x148>  // b.none
     5d8:	ldp	x3, x2, [sp, #80]
     5dc:	cmp	x3, x2
     5e0:	b.eq	5c4 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0xb4>  // b.none
     5e4:	cbz	x2, 614 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x104>
     5e8:	sub	x2, x2, #0x1
     5ec:	cmp	x3, x2
     5f0:	b.hi	634 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x124>  // b.pmore
     5f4:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     5f8:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     5fc:	add	x2, x2, #0x0
     600:	add	x0, x0, #0x0
     604:	mov	x4, #0x0                   	// #0
     608:	mov	x3, #0x0                   	// #0
     60c:	mov	w1, #0xdb                  	// #219
     610:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     614:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     618:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     61c:	add	x2, x2, #0x0
     620:	add	x0, x0, #0x0
     624:	mov	x4, #0x0                   	// #0
     628:	mov	x3, #0x0                   	// #0
     62c:	mov	w1, #0xea                  	// #234
     630:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     634:	cmp	x2, x3
     638:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     63c:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     640:	cset	x3, cs  // cs = hs, nlast
     644:	add	x2, x2, #0x0
     648:	add	x0, x0, #0x0
     64c:	mov	x4, #0x0                   	// #0
     650:	mov	w1, #0xda                  	// #218
     654:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     658:	mov	w19, #0x1                   	// #1
     65c:	ldr	x23, [sp, #32]
     660:	b	5a8 <_ZN11__sanitizer22MemoryRangeIsAvailableEmm+0x98>
     664:	nop

0000000000000668 <_ZN11__sanitizer6GetPwdEv>:
     668:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     66c:	add	x0, x0, #0x0
     670:	b	0 <_ZN11__sanitizer6GetEnvEPKc>
     674:	nop

0000000000000678 <_ZN11__sanitizer15IsPathSeparatorEc>:
     678:	and	w0, w0, #0xff
     67c:	cmp	w0, #0x2f
     680:	cset	w0, eq  // eq = none
     684:	ret

0000000000000688 <_ZN11__sanitizer14IsAbsolutePathEPKc>:
     688:	cbz	x0, 69c <_ZN11__sanitizer14IsAbsolutePathEPKc+0x14>
     68c:	ldrb	w0, [x0]
     690:	cmp	w0, #0x2f
     694:	cset	w0, eq  // eq = none
     698:	ret
     69c:	mov	w0, #0x0                   	// #0
     6a0:	ret
     6a4:	nop

00000000000006a8 <_ZN11__sanitizer10ReportFile5WriteEPKcm>:
     6a8:	stp	x19, x20, [sp, #-48]!
     6ac:	mov	x19, x0
     6b0:	stp	x21, x22, [sp, #16]
     6b4:	mov	x22, x2
     6b8:	mov	x21, x1
     6bc:	mov	w1, #0x1                   	// #1
     6c0:	ldr	x20, [x0]
     6c4:	str	x30, [sp, #32]
     6c8:	ldxrb	w0, [x20]
     6cc:	stxrb	w2, w1, [x20]
     6d0:	cbnz	w2, 6c8 <_ZN11__sanitizer10ReportFile5WriteEPKcm+0x20>
     6d4:	dmb	ish
     6d8:	tst	w0, #0xff
     6dc:	b.eq	6e8 <_ZN11__sanitizer10ReportFile5WriteEPKcm+0x40>  // b.none
     6e0:	mov	x0, x20
     6e4:	bl	0 <_ZN11__sanitizer18GetMmapGranularityEv>
     6e8:	mov	x0, x19
     6ec:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     6f0:	ldr	w0, [x19, #8]
     6f4:	mov	x2, x22
     6f8:	mov	x1, x21
     6fc:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
     700:	dmb	ish
     704:	strb	wzr, [x20]
     708:	ldp	x21, x22, [sp, #16]
     70c:	ldr	x30, [sp, #32]
     710:	ldp	x19, x20, [sp], #48
     714:	ret

0000000000000718 <_ZNK11__sanitizer13SignalContext10GetAddressEv>:
     718:	ldr	x0, [x0]
     71c:	ldr	x0, [x0, #16]
     720:	ret
     724:	nop

0000000000000728 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>:
     728:	ldr	x0, [x0]
     72c:	ldr	w0, [x0]
     730:	cmp	w0, #0xb
     734:	cset	w0, eq  // eq = none
     738:	ret
     73c:	nop

0000000000000740 <_ZNK11__sanitizer13SignalContext7GetTypeEv>:
     740:	ldr	x0, [x0]
     744:	ldr	w0, [x0]
     748:	ret
     74c:	nop

0000000000000750 <_ZNK11__sanitizer13SignalContext8DescribeEv>:
     750:	ldr	x0, [x0]
     754:	ldr	w1, [x0]
     758:	cmp	w1, #0x7
     75c:	b.eq	7d0 <_ZNK11__sanitizer13SignalContext8DescribeEv+0x80>  // b.none
     760:	b.gt	79c <_ZNK11__sanitizer13SignalContext8DescribeEv+0x4c>
     764:	cmp	w1, #0x5
     768:	b.eq	7c4 <_ZNK11__sanitizer13SignalContext8DescribeEv+0x74>  // b.none
     76c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     770:	cmp	w1, #0x6
     774:	add	x0, x0, #0x0
     778:	b.ne	780 <_ZNK11__sanitizer13SignalContext8DescribeEv+0x30>  // b.any
     77c:	ret
     780:	cmp	w1, #0x4
     784:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     788:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     78c:	add	x0, x0, #0x0
     790:	add	x1, x1, #0x0
     794:	csel	x0, x0, x1, ne  // ne = any
     798:	ret
     79c:	cmp	w1, #0x8
     7a0:	b.eq	7b8 <_ZNK11__sanitizer13SignalContext8DescribeEv+0x68>  // b.none
     7a4:	cmp	w1, #0xb
     7a8:	b.ne	7dc <_ZNK11__sanitizer13SignalContext8DescribeEv+0x8c>  // b.any
     7ac:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7b0:	add	x0, x0, #0x0
     7b4:	ret
     7b8:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7bc:	add	x0, x0, #0x0
     7c0:	ret
     7c4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7c8:	add	x0, x0, #0x0
     7cc:	ret
     7d0:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7d4:	add	x0, x0, #0x0
     7d8:	ret
     7dc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     7e0:	add	x0, x0, #0x0
     7e4:	ret

00000000000007e8 <_ZN11__sanitizer18ReserveStandardFdsEi>:
     7e8:	stp	x19, x20, [sp, #-48]!
     7ec:	cmp	w0, #0x2
     7f0:	mov	w19, w0
     7f4:	str	x30, [sp, #24]
     7f8:	b.le	80c <_ZN11__sanitizer18ReserveStandardFdsEi+0x24>
     7fc:	mov	w0, w19
     800:	ldr	x30, [sp, #24]
     804:	ldp	x19, x20, [sp], #48
     808:	ret
     80c:	add	x20, sp, #0x28
     810:	mov	x2, #0x3                   	// #3
     814:	mov	x0, x20
     818:	mov	w1, #0x0                   	// #0
     81c:	str	x21, [sp, #16]
     820:	mov	w21, #0x1                   	// #1
     824:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     828:	mov	w0, w19
     82c:	strb	w21, [x20, w19, sxtw]
     830:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     834:	mov	x19, x0
     838:	cmp	w0, #0x2
     83c:	b.le	828 <_ZN11__sanitizer18ReserveStandardFdsEi+0x40>
     840:	ldrb	w0, [sp, #40]
     844:	cbnz	w0, 86c <_ZN11__sanitizer18ReserveStandardFdsEi+0x84>
     848:	ldrb	w0, [sp, #41]
     84c:	cbnz	w0, 87c <_ZN11__sanitizer18ReserveStandardFdsEi+0x94>
     850:	ldrb	w0, [sp, #42]
     854:	cbnz	w0, 88c <_ZN11__sanitizer18ReserveStandardFdsEi+0xa4>
     858:	mov	w0, w19
     85c:	ldr	x21, [sp, #16]
     860:	ldr	x30, [sp, #24]
     864:	ldp	x19, x20, [sp], #48
     868:	ret
     86c:	mov	w0, #0x0                   	// #0
     870:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     874:	ldrb	w0, [sp, #41]
     878:	cbz	w0, 850 <_ZN11__sanitizer18ReserveStandardFdsEi+0x68>
     87c:	mov	w0, #0x1                   	// #1
     880:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     884:	ldrb	w0, [sp, #42]
     888:	cbz	w0, 858 <_ZN11__sanitizer18ReserveStandardFdsEi+0x70>
     88c:	mov	w0, #0x2                   	// #2
     890:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     894:	mov	w0, w19
     898:	ldr	x21, [sp, #16]
     89c:	ldr	x30, [sp, #24]
     8a0:	ldp	x19, x20, [sp], #48
     8a4:	ret

00000000000008a8 <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc>:
     8a8:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     8ac:	ldr	x1, [x1]
     8b0:	ldrb	w1, [x1, #243]
     8b4:	cbnz	w1, 8c0 <_ZN11__sanitizer23ShouldMockFailureToOpenEPKc+0x18>
     8b8:	mov	w0, w1
     8bc:	ret
     8c0:	str	x30, [sp, #-16]!
     8c4:	mov	x2, #0x6                   	// #6
     8c8:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     8cc:	add	x1, x1, #0x0
     8d0:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
     8d4:	cmp	w0, #0x0
     8d8:	cset	w1, eq  // eq = none
     8dc:	mov	w0, w1
     8e0:	ldr	x30, [sp], #16
     8e4:	ret

00000000000008e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>:
     8e8:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     8ec:	stp	x19, x20, [sp, #-272]!
     8f0:	cmp	x0, #0x0
     8f4:	ldr	x4, [x3]
     8f8:	stp	x21, x22, [sp, #16]
     8fc:	mov	x21, x1
     900:	cset	w3, eq  // eq = none
     904:	ldrb	w1, [x4, #223]
     908:	str	x30, [sp, #48]
     90c:	eor	w1, w1, #0x1
     910:	orr	w3, w3, w1
     914:	tst	w3, #0xff
     918:	b.ne	aa4 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x1bc>  // b.any
     91c:	mov	x19, x0
     920:	mov	x20, x2
     924:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     928:	cmp	x0, #0xbd
     92c:	b.hi	a40 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x158>  // b.pmore
     930:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     934:	add	x22, sp, #0x48
     938:	mov	x3, x0
     93c:	mov	x4, x19
     940:	mov	x1, #0xc8                  	// #200
     944:	mov	x0, x22
     948:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     94c:	add	x2, x2, #0x0
     950:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
     954:	mov	w1, #0x242                 	// #578
     958:	mov	x0, x22
     95c:	movk	w1, #0x8, lsl #16
     960:	mov	w2, #0x1c0                 	// #448
     964:	bl	0 <_ZN11__sanitizer13internal_openEPKcij>
     968:	mov	x19, x0
     96c:	cmp	w0, #0x2
     970:	b.le	9b8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xd0>
     974:	mov	x1, x21
     978:	mov	w0, w19
     97c:	bl	0 <_ZN11__sanitizer18internal_ftruncateEim>
     980:	sxtw	x4, w0
     984:	cbnz	w0, a64 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x17c>
     988:	mov	x0, x22
     98c:	bl	0 <_ZN11__sanitizer15internal_unlinkEPKc>
     990:	sxtw	x4, w0
     994:	cbnz	w0, a84 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x19c>
     998:	ldr	w0, [x20]
     99c:	and	w0, w0, #0xffffffdf
     9a0:	str	w0, [x20]
     9a4:	mov	w0, w19
     9a8:	ldp	x21, x22, [sp, #16]
     9ac:	ldr	x30, [sp, #48]
     9b0:	ldp	x19, x20, [sp], #272
     9b4:	ret
     9b8:	stp	x23, x24, [sp, #32]
     9bc:	add	x23, sp, #0x40
     9c0:	mov	x0, x23
     9c4:	mov	w24, #0x1                   	// #1
     9c8:	mov	x2, #0x3                   	// #3
     9cc:	mov	w1, #0x0                   	// #0
     9d0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     9d4:	nop
     9d8:	mov	w0, w19
     9dc:	strb	w24, [x23, w19, sxtw]
     9e0:	bl	0 <_ZN11__sanitizer12internal_dupEi>
     9e4:	mov	x19, x0
     9e8:	cmp	w0, #0x2
     9ec:	b.le	9d8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xf0>
     9f0:	ldrb	w0, [sp, #64]
     9f4:	cbnz	w0, a10 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x128>
     9f8:	ldrb	w0, [sp, #65]
     9fc:	cbnz	w0, a20 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x138>
     a00:	ldrb	w0, [sp, #66]
     a04:	cbnz	w0, a30 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x148>
     a08:	ldp	x23, x24, [sp, #32]
     a0c:	b	974 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x8c>
     a10:	mov	w0, #0x0                   	// #0
     a14:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     a18:	ldrb	w0, [sp, #65]
     a1c:	cbz	w0, a00 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x118>
     a20:	mov	w0, #0x1                   	// #1
     a24:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     a28:	ldrb	w0, [sp, #66]
     a2c:	cbz	w0, a08 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x120>
     a30:	mov	w0, #0x2                   	// #2
     a34:	bl	0 <_ZN11__sanitizer14internal_closeEi>
     a38:	ldp	x23, x24, [sp, #32]
     a3c:	b	974 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0x8c>
     a40:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a44:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a48:	add	x2, x2, #0x0
     a4c:	add	x0, x0, #0x0
     a50:	mov	x4, #0x0                   	// #0
     a54:	mov	x3, #0x0                   	// #0
     a58:	mov	w1, #0x15b                 	// #347
     a5c:	stp	x23, x24, [sp, #32]
     a60:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a64:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a68:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a6c:	add	x2, x2, #0x0
     a70:	add	x0, x0, #0x0
     a74:	mov	x3, #0x0                   	// #0
     a78:	mov	w1, #0x162                 	// #354
     a7c:	stp	x23, x24, [sp, #32]
     a80:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a84:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a88:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     a8c:	add	x2, x2, #0x0
     a90:	add	x0, x0, #0x0
     a94:	mov	x3, #0x0                   	// #0
     a98:	mov	w1, #0x164                 	// #356
     a9c:	stp	x23, x24, [sp, #32]
     aa0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     aa4:	mov	w19, #0xffffffff            	// #-1
     aa8:	b	9a4 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi+0xbc>
     aac:	nop

0000000000000ab0 <_ZN11__sanitizer9MmapOrDieEmPKcb>:
     ab0:	stp	x19, x20, [sp, #-64]!
     ab4:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
     ab8:	mov	x19, x0
     abc:	ldr	x20, [x20]
     ac0:	stp	x21, x22, [sp, #16]
     ac4:	and	w22, w2, #0xff
     ac8:	stp	x23, x30, [sp, #32]
     acc:	mov	x23, x1
     ad0:	ldr	x0, [x20]
     ad4:	cbz	x0, b64 <_ZN11__sanitizer9MmapOrDieEmPKcb+0xb4>
     ad8:	sub	x1, x0, #0x1
     adc:	tst	x0, x1
     ae0:	b.ne	b78 <_ZN11__sanitizer9MmapOrDieEmPKcb+0xc8>  // b.any
     ae4:	mov	w3, #0x22                  	// #34
     ae8:	add	x19, x19, x1
     aec:	neg	x0, x0
     af0:	add	x20, sp, #0x3c
     af4:	and	x19, x19, x0
     af8:	mov	x2, x20
     afc:	mov	x1, x19
     b00:	mov	x0, x23
     b04:	str	w3, [sp, #60]
     b08:	bl	8e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     b0c:	ldr	w3, [sp, #60]
     b10:	mov	w4, w0
     b14:	mov	x5, #0x0                   	// #0
     b18:	mov	w2, #0x3                   	// #3
     b1c:	mov	x1, x19
     b20:	mov	x0, #0x0                   	// #0
     b24:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     b28:	mov	x21, x0
     b2c:	mov	x1, #0x0                   	// #0
     b30:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     b34:	mov	x1, x20
     b38:	mov	x0, x21
     b3c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     b40:	tst	w0, #0xff
     b44:	b.ne	b88 <_ZN11__sanitizer9MmapOrDieEmPKcb+0xd8>  // b.any
     b48:	mov	x0, x19
     b4c:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
     b50:	mov	x0, x21
     b54:	ldp	x21, x22, [sp, #16]
     b58:	ldp	x23, x30, [sp, #32]
     b5c:	ldp	x19, x20, [sp], #64
     b60:	ret
     b64:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     b68:	str	x0, [x20]
     b6c:	sub	x1, x0, #0x1
     b70:	tst	x0, x1
     b74:	b.eq	ae4 <_ZN11__sanitizer9MmapOrDieEmPKcb+0x34>  // b.none
     b78:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     b7c:	add	x0, x0, #0x0
     b80:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     b84:	bl	0 <_ZN11__sanitizer3DieEv>
     b88:	ldr	w3, [sp, #60]
     b8c:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     b90:	mov	w4, w22
     b94:	mov	x1, x23
     b98:	mov	x0, x19
     b9c:	add	x2, x2, #0x0
     ba0:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
     ba4:	nop

0000000000000ba8 <_ZN11__sanitizer14DumpProcessMapEv>:
     ba8:	stp	x19, x20, [sp, #-160]!
     bac:	mov	w1, #0x1                   	// #1
     bb0:	adrp	x20, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bb4:	add	x19, sp, #0x30
     bb8:	stp	x21, x22, [sp, #16]
     bbc:	mov	x0, x19
     bc0:	str	x30, [sp, #32]
     bc4:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     bc8:	mov	w2, #0x0                   	// #0
     bcc:	adrp	x1, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bd0:	mov	x0, #0xfff                 	// #4095
     bd4:	add	x1, x1, #0x0
     bd8:	bl	ab0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     bdc:	add	x21, sp, #0x50
     be0:	mov	x1, #0xfff                 	// #4095
     be4:	mov	x22, x0
     be8:	add	x20, x20, #0x0
     bec:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     bf0:	add	x0, x0, #0x0
     bf4:	stp	x22, x1, [sp, #104]
     bf8:	str	xzr, [sp, #152]
     bfc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     c00:	b	c14 <_ZN11__sanitizer14DumpProcessMapEv+0x6c>
     c04:	ldp	x1, x2, [sp, #80]
     c08:	mov	x0, x20
     c0c:	ldr	x3, [sp, #104]
     c10:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     c14:	mov	x1, x21
     c18:	mov	x0, x19
     c1c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     c20:	tst	w0, #0xff
     c24:	b.ne	c04 <_ZN11__sanitizer14DumpProcessMapEv+0x5c>  // b.any
     c28:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     c2c:	add	x0, x0, #0x0
     c30:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     c34:	cbnz	x22, c50 <_ZN11__sanitizer14DumpProcessMapEv+0xa8>
     c38:	mov	x0, x19
     c3c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     c40:	ldp	x21, x22, [sp, #16]
     c44:	ldr	x30, [sp, #32]
     c48:	ldp	x19, x20, [sp], #160
     c4c:	ret
     c50:	mov	x1, #0xfff                 	// #4095
     c54:	mov	x0, x22
     c58:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     c5c:	mov	x1, #0x0                   	// #0
     c60:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     c64:	tst	w0, #0xff
     c68:	b.ne	c8c <_ZN11__sanitizer14DumpProcessMapEv+0xe4>  // b.any
     c6c:	mov	x0, #0xfff                 	// #4095
     c70:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     c74:	mov	x0, x19
     c78:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     c7c:	ldp	x21, x22, [sp, #16]
     c80:	ldr	x30, [sp, #32]
     c84:	ldp	x19, x20, [sp], #160
     c88:	ret
     c8c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     c90:	mov	x3, #0xfff                 	// #4095
     c94:	mov	x4, x22
     c98:	mov	x2, x3
     c9c:	ldr	x1, [x1]
     ca0:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     ca4:	add	x0, x0, #0x0
     ca8:	ldr	x1, [x1]
     cac:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     cb0:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     cb4:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     cb8:	add	x2, x2, #0x0
     cbc:	add	x0, x0, #0x0
     cc0:	mov	x4, #0x0                   	// #0
     cc4:	mov	x3, #0x0                   	// #0
     cc8:	mov	w1, #0x3d                  	// #61
     ccc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000cd0 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_>:
     cd0:	stp	x19, x20, [sp, #-192]!
     cd4:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
     cd8:	add	x20, sp, #0x50
     cdc:	stp	x21, x22, [sp, #16]
     ce0:	mov	x22, x0
     ce4:	mov	x0, x20
     ce8:	stp	x23, x24, [sp, #32]
     cec:	mov	x24, x1
     cf0:	mov	x23, x2
     cf4:	mov	w1, #0x0                   	// #0
     cf8:	stp	x25, x26, [sp, #48]
     cfc:	str	x30, [sp, #64]
     d00:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     d04:	ldr	x21, [x19]
     d08:	ldr	x3, [x21]
     d0c:	cbz	x3, e10 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x140>
     d10:	sub	x0, x3, #0x1
     d14:	tst	x0, x3
     d18:	b.ne	e7c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1ac>  // b.any
     d1c:	add	x25, x3, #0xfff
     d20:	neg	x3, x3
     d24:	and	x25, x25, x3
     d28:	mov	w2, #0x0                   	// #0
     d2c:	mov	x0, x25
     d30:	adrp	x21, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     d34:	add	x1, x21, #0x0
     d38:	bl	ab0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     d3c:	mov	x2, #0x0                   	// #0
     d40:	mov	x26, x0
     d44:	mov	x1, #0x0                   	// #0
     d48:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     d4c:	cmp	x25, #0xfff
     d50:	b.ls	e20 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x150>  // b.plast
     d54:	mov	x0, x26
     d58:	mov	x2, #0x1000                	// #4096
     d5c:	mov	w1, #0x0                   	// #0
     d60:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     d64:	strb	wzr, [x26]
     d68:	mov	x0, #0x1000                	// #4096
     d6c:	add	x21, sp, #0x70
     d70:	stp	x26, x0, [sp, #136]
     d74:	str	xzr, [sp, #184]
     d78:	b	d84 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xb4>
     d7c:	ldr	x3, [sp, #152]
     d80:	tbnz	w3, #2, dc0 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xf0>
     d84:	mov	x1, x21
     d88:	mov	x0, x20
     d8c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     d90:	ands	w19, w0, #0xff
     d94:	b.ne	d7c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xac>  // b.any
     d98:	cbnz	x25, de8 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x118>
     d9c:	mov	x0, x20
     da0:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     da4:	mov	w0, w19
     da8:	ldp	x21, x22, [sp, #16]
     dac:	ldp	x23, x24, [sp, #32]
     db0:	ldp	x25, x26, [sp, #48]
     db4:	ldr	x30, [sp, #64]
     db8:	ldp	x19, x20, [sp], #192
     dbc:	ret
     dc0:	ldr	x1, [sp, #136]
     dc4:	mov	x0, x22
     dc8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     dcc:	cbnz	w0, d84 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xb4>
     dd0:	ldr	x0, [sp, #112]
     dd4:	str	x0, [x24]
     dd8:	ldr	x0, [sp, #120]
     ddc:	str	x0, [x23]
     de0:	cbz	x25, d9c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xcc>
     de4:	nop
     de8:	mov	x1, x25
     dec:	mov	x0, x26
     df0:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     df4:	mov	x1, #0x0                   	// #0
     df8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     dfc:	tst	w0, #0xff
     e00:	b.ne	eb4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1e4>  // b.any
     e04:	mov	x0, x25
     e08:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     e0c:	b	d9c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0xcc>
     e10:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     e14:	mov	x3, x0
     e18:	str	x0, [x21]
     e1c:	b	d10 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x40>
     e20:	ldr	x19, [x19]
     e24:	ldr	x0, [x19]
     e28:	cbz	x0, ef8 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x228>
     e2c:	sub	x1, x0, #0x1
     e30:	tst	x1, x0
     e34:	b.ne	e7c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1ac>  // b.any
     e38:	add	x19, x0, #0xfff
     e3c:	neg	x0, x0
     e40:	and	x19, x19, x0
     e44:	add	x1, x21, #0x0
     e48:	mov	w2, #0x0                   	// #0
     e4c:	mov	x0, x19
     e50:	bl	ab0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     e54:	mov	x21, x0
     e58:	mov	x1, x26
     e5c:	mov	x2, #0x0                   	// #0
     e60:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     e64:	cmp	x26, #0x0
     e68:	ccmp	x25, #0x0, #0x4, ne  // ne = any
     e6c:	b.ne	e8c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1bc>  // b.any
     e70:	mov	x25, x19
     e74:	mov	x26, x21
     e78:	b	d54 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x84>
     e7c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     e80:	add	x0, x0, #0x0
     e84:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     e88:	bl	0 <_ZN11__sanitizer3DieEv>
     e8c:	mov	x1, x25
     e90:	mov	x0, x26
     e94:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
     e98:	mov	x1, #0x0                   	// #0
     e9c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     ea0:	tst	w0, #0xff
     ea4:	b.ne	eb4 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1e4>  // b.any
     ea8:	mov	x0, x25
     eac:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
     eb0:	b	e70 <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x1a0>
     eb4:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     eb8:	mov	x4, x26
     ebc:	mov	x3, x25
     ec0:	mov	x2, x25
     ec4:	ldr	x1, [x1]
     ec8:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     ecc:	add	x0, x0, #0x0
     ed0:	ldr	x1, [x1]
     ed4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     ed8:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     edc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     ee0:	add	x2, x2, #0x0
     ee4:	add	x0, x0, #0x0
     ee8:	mov	x4, #0x0                   	// #0
     eec:	mov	x3, #0x0                   	// #0
     ef0:	mov	w1, #0x3d                  	// #61
     ef4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ef8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     efc:	str	x0, [x19]
     f00:	b	e2c <_ZN11__sanitizer19GetCodeRangeForFileEPKcPmS2_+0x15c>
     f04:	nop

0000000000000f08 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc>:
     f08:	stp	x19, x20, [sp, #-64]!
     f0c:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
     f10:	mov	x19, x0
     f14:	ldr	x20, [x20]
     f18:	stp	x21, x22, [sp, #16]
     f1c:	mov	x22, x1
     f20:	ldr	x0, [x20]
     f24:	str	x30, [sp, #32]
     f28:	cbz	x0, fb8 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0xb0>
     f2c:	sub	x1, x0, #0x1
     f30:	tst	x0, x1
     f34:	b.ne	fcc <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0xc4>  // b.any
     f38:	mov	w3, #0x4022                	// #16418
     f3c:	add	x19, x19, x1
     f40:	neg	x0, x0
     f44:	add	x20, sp, #0x3c
     f48:	and	x19, x19, x0
     f4c:	mov	x2, x20
     f50:	mov	x1, x19
     f54:	mov	x0, x22
     f58:	str	w3, [sp, #60]
     f5c:	bl	8e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
     f60:	ldr	w3, [sp, #60]
     f64:	mov	w4, w0
     f68:	mov	x5, #0x0                   	// #0
     f6c:	mov	w2, #0x3                   	// #3
     f70:	mov	x1, x19
     f74:	mov	x0, #0x0                   	// #0
     f78:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
     f7c:	mov	x21, x0
     f80:	mov	x1, #0x0                   	// #0
     f84:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f88:	mov	x1, x20
     f8c:	mov	x0, x21
     f90:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     f94:	tst	w0, #0xff
     f98:	b.ne	fdc <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0xd4>  // b.any
     f9c:	mov	x0, x19
     fa0:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
     fa4:	mov	x0, x21
     fa8:	ldp	x21, x22, [sp, #16]
     fac:	ldr	x30, [sp, #32]
     fb0:	ldp	x19, x20, [sp], #64
     fb4:	ret
     fb8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     fbc:	str	x0, [x20]
     fc0:	sub	x1, x0, #0x1
     fc4:	tst	x0, x1
     fc8:	b.eq	f38 <_ZN11__sanitizer18MmapNoReserveOrDieEmPKc+0x30>  // b.none
     fcc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     fd0:	add	x0, x0, #0x0
     fd4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     fd8:	bl	0 <_ZN11__sanitizer3DieEv>
     fdc:	ldr	w3, [sp, #60]
     fe0:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
     fe4:	mov	x1, x22
     fe8:	mov	x0, x19
     fec:	add	x2, x2, #0x0
     ff0:	mov	w4, #0x0                   	// #0
     ff4:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>

0000000000000ff8 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>:
     ff8:	stp	x19, x20, [sp, #-64]!
     ffc:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1000:	mov	x19, x0
    1004:	ldr	x20, [x20]
    1008:	stp	x21, x22, [sp, #16]
    100c:	mov	x22, x1
    1010:	ldr	x0, [x20]
    1014:	str	x30, [sp, #32]
    1018:	cbz	x0, 10a8 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xb0>
    101c:	sub	x1, x0, #0x1
    1020:	tst	x0, x1
    1024:	b.ne	10bc <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xc4>  // b.any
    1028:	mov	w3, #0x22                  	// #34
    102c:	add	x19, x19, x1
    1030:	neg	x0, x0
    1034:	add	x21, sp, #0x3c
    1038:	and	x19, x19, x0
    103c:	mov	x2, x21
    1040:	mov	x1, x19
    1044:	mov	x0, x22
    1048:	str	w3, [sp, #60]
    104c:	bl	8e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
    1050:	ldr	w3, [sp, #60]
    1054:	mov	w4, w0
    1058:	mov	x5, #0x0                   	// #0
    105c:	mov	w2, #0x3                   	// #3
    1060:	mov	x1, x19
    1064:	mov	x0, #0x0                   	// #0
    1068:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
    106c:	mov	x20, x0
    1070:	mov	x1, #0x0                   	// #0
    1074:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1078:	mov	x1, x21
    107c:	mov	x0, x20
    1080:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1084:	tst	w0, #0xff
    1088:	b.ne	10cc <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xd4>  // b.any
    108c:	mov	x0, x19
    1090:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
    1094:	mov	x0, x20
    1098:	ldp	x21, x22, [sp, #16]
    109c:	ldr	x30, [sp, #32]
    10a0:	ldp	x19, x20, [sp], #64
    10a4:	ret
    10a8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    10ac:	str	x0, [x20]
    10b0:	sub	x1, x0, #0x1
    10b4:	tst	x0, x1
    10b8:	b.eq	1028 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0x30>  // b.none
    10bc:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10c0:	add	x0, x0, #0x0
    10c4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    10c8:	bl	0 <_ZN11__sanitizer3DieEv>
    10cc:	ldr	w3, [sp, #60]
    10d0:	mov	x0, #0x0                   	// #0
    10d4:	cmp	w3, #0xc
    10d8:	b.eq	1098 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc+0xa0>  // b.none
    10dc:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    10e0:	mov	x1, x22
    10e4:	mov	x0, x19
    10e8:	add	x2, x2, #0x0
    10ec:	mov	w4, #0x0                   	// #0
    10f0:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
    10f4:	nop

00000000000010f8 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc>:
    10f8:	stp	x19, x20, [sp, #-48]!
    10fc:	mov	x19, x0
    1100:	sub	x0, x0, #0x1
    1104:	stp	x21, x22, [sp, #16]
    1108:	tst	x0, x19
    110c:	stp	x23, x30, [sp, #32]
    1110:	b.ne	1204 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x10c>  // b.any
    1114:	sub	x23, x1, #0x1
    1118:	mov	x21, x1
    111c:	tst	x1, x23
    1120:	b.ne	1224 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x12c>  // b.any
    1124:	add	x22, x19, x21
    1128:	mov	x1, x2
    112c:	mov	x0, x22
    1130:	bl	ff8 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>
    1134:	mov	x20, x0
    1138:	cbz	x0, 1154 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x5c>
    113c:	add	x22, x22, x0
    1140:	tst	x0, x23
    1144:	b.ne	11a8 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xb0>  // b.any
    1148:	add	x19, x20, x19
    114c:	cmp	x22, x19
    1150:	b.ne	1168 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x70>  // b.any
    1154:	mov	x0, x20
    1158:	ldp	x21, x22, [sp, #16]
    115c:	ldp	x23, x30, [sp, #32]
    1160:	ldp	x19, x20, [sp], #48
    1164:	ret
    1168:	cbz	x19, 1154 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x5c>
    116c:	sub	x22, x22, x19
    1170:	mov	x0, x19
    1174:	mov	x1, x22
    1178:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
    117c:	mov	x1, #0x0                   	// #0
    1180:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1184:	tst	w0, #0xff
    1188:	b.ne	1244 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x14c>  // b.any
    118c:	mov	x0, x22
    1190:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
    1194:	mov	x0, x20
    1198:	ldp	x21, x22, [sp, #16]
    119c:	ldp	x23, x30, [sp, #32]
    11a0:	ldp	x19, x20, [sp], #48
    11a4:	ret
    11a8:	add	x23, x0, x23
    11ac:	neg	x21, x21
    11b0:	and	x21, x23, x21
    11b4:	subs	x23, x21, x0
    11b8:	b.ne	11d0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0xd8>  // b.any
    11bc:	mov	x20, x21
    11c0:	add	x19, x20, x19
    11c4:	cmp	x22, x19
    11c8:	b.eq	1154 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x5c>  // b.none
    11cc:	b	1168 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x70>
    11d0:	mov	x1, x23
    11d4:	bl	0 <_ZN11__sanitizer15internal_munmapEPvm>
    11d8:	mov	x1, #0x0                   	// #0
    11dc:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    11e0:	tst	w0, #0xff
    11e4:	b.ne	1288 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x190>  // b.any
    11e8:	mov	x20, x21
    11ec:	mov	x0, x23
    11f0:	add	x19, x20, x19
    11f4:	bl	0 <_ZN11__sanitizer17DecreaseTotalMmapEm>
    11f8:	cmp	x22, x19
    11fc:	b.eq	1154 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x5c>  // b.none
    1200:	b	1168 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x70>
    1204:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1208:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    120c:	add	x2, x2, #0x0
    1210:	add	x0, x0, #0x0
    1214:	mov	x4, #0x0                   	// #0
    1218:	mov	x3, #0x0                   	// #0
    121c:	mov	w1, #0x55                  	// #85
    1220:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1224:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1228:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    122c:	add	x2, x2, #0x0
    1230:	add	x0, x0, #0x0
    1234:	mov	x4, #0x0                   	// #0
    1238:	mov	x3, #0x0                   	// #0
    123c:	mov	w1, #0x56                  	// #86
    1240:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1244:	mov	x4, x19
    1248:	mov	x3, x22
    124c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1250:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1254:	ldr	x1, [x1]
    1258:	mov	x2, x3
    125c:	add	x0, x0, #0x0
    1260:	ldr	x1, [x1]
    1264:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1268:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    126c:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1270:	add	x2, x2, #0x0
    1274:	add	x0, x0, #0x0
    1278:	mov	x4, #0x0                   	// #0
    127c:	mov	x3, #0x0                   	// #0
    1280:	mov	w1, #0x3d                  	// #61
    1284:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1288:	mov	x4, x20
    128c:	mov	x3, x23
    1290:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1294:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    1298:	b	1254 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc+0x15c>
    129c:	nop

00000000000012a0 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>:
    12a0:	stp	x19, x20, [sp, #-112]!
    12a4:	mov	x20, x0
    12a8:	mov	x19, x1
    12ac:	stp	x21, x22, [sp, #16]
    12b0:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
    12b4:	and	w21, w2, #0xff
    12b8:	ldr	x22, [x22]
    12bc:	stp	x23, x24, [sp, #32]
    12c0:	mov	x23, x3
    12c4:	ldr	x2, [x22]
    12c8:	str	x30, [sp, #48]
    12cc:	cbz	x2, 1364 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xc4>
    12d0:	sub	x1, x2, #0x1
    12d4:	tst	x2, x1
    12d8:	b.ne	1398 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xf8>  // b.any
    12dc:	neg	x2, x2
    12e0:	add	x19, x19, x1
    12e4:	and	x19, x19, x2
    12e8:	mov	w3, #0x32                  	// #50
    12ec:	add	x24, sp, #0x48
    12f0:	and	x22, x20, x2
    12f4:	mov	x1, x19
    12f8:	mov	x2, x24
    12fc:	mov	x0, x23
    1300:	str	w3, [sp, #72]
    1304:	bl	8e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
    1308:	ldr	w3, [sp, #72]
    130c:	mov	w4, w0
    1310:	mov	x5, #0x0                   	// #0
    1314:	mov	w2, #0x3                   	// #3
    1318:	mov	x1, x19
    131c:	mov	x0, x22
    1320:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
    1324:	mov	x20, x0
    1328:	mov	x1, #0x0                   	// #0
    132c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    1330:	mov	x0, x20
    1334:	add	x1, sp, #0x44
    1338:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    133c:	tst	w0, #0xff
    1340:	b.ne	13a8 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x108>  // b.any
    1344:	mov	x0, x19
    1348:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
    134c:	mov	x0, x20
    1350:	ldp	x21, x22, [sp, #16]
    1354:	ldp	x23, x24, [sp, #32]
    1358:	ldr	x30, [sp, #48]
    135c:	ldp	x19, x20, [sp], #112
    1360:	ret
    1364:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1368:	str	x0, [x22]
    136c:	sub	x1, x0, #0x1
    1370:	tst	x0, x1
    1374:	b.ne	1398 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xf8>  // b.any
    1378:	add	x19, x19, x1
    137c:	neg	x2, x0
    1380:	and	x19, x19, x2
    1384:	cbnz	x0, 12e8 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x48>
    1388:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    138c:	neg	x2, x0
    1390:	str	x0, [x22]
    1394:	b	12e8 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x48>
    1398:	adrp	x0, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    139c:	add	x0, x0, #0x0
    13a0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    13a4:	bl	0 <_ZN11__sanitizer3DieEv>
    13a8:	cbz	w21, 13c0 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x120>
    13ac:	ldr	w0, [sp, #68]
    13b0:	cmp	w0, #0xc
    13b4:	b.ne	13c0 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0x120>  // b.any
    13b8:	mov	x0, #0x0                   	// #0
    13bc:	b	1350 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc+0xb0>
    13c0:	mov	x3, x22
    13c4:	mov	x1, #0x28                  	// #40
    13c8:	mov	x0, x24
    13cc:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    13d0:	add	x2, x2, #0x0
    13d4:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    13d8:	ldr	w3, [sp, #68]
    13dc:	adrp	x2, 0 <_ZN11__sanitizer18GetMmapGranularityEv>
    13e0:	mov	x1, x24
    13e4:	mov	x0, x19
    13e8:	add	x2, x2, #0x0
    13ec:	mov	w4, #0x0                   	// #0
    13f0:	bl	0 <_ZN11__sanitizer23ReportMmapFailureAndDieEmPKcS1_ib>
    13f4:	nop

00000000000013f8 <_ZN11__sanitizer14MmapFixedOrDieEmmPKc>:
    13f8:	mov	x3, x2
    13fc:	mov	w2, #0x0                   	// #0
    1400:	b	12a0 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>
    1404:	nop

0000000000001408 <_ZN11__sanitizer26MmapFixedOrDieOnFatalErrorEmmPKc>:
    1408:	mov	x3, x2
    140c:	mov	w2, #0x1                   	// #1
    1410:	b	12a0 <_ZN11__sanitizerL13MmapFixedImplEmmbPKc>
    1414:	nop

0000000000001418 <_ZN11__sanitizer15DecorateMappingEmmPKc>:
    1418:	ret
    141c:	nop

0000000000001420 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>:
    1420:	stp	x19, x20, [sp, #-48]!
    1424:	mov	x19, x0
    1428:	mov	x20, x1
    142c:	mov	x0, x4
    1430:	stp	x21, x30, [sp, #16]
    1434:	mov	w21, w2
    1438:	add	x2, sp, #0x2c
    143c:	str	w3, [sp, #44]
    1440:	bl	8e8 <_ZN11__sanitizer17GetNamedMappingFdEPKcmPi>
    1444:	mov	w4, w0
    1448:	ldr	w3, [sp, #44]
    144c:	mov	w2, w21
    1450:	mov	x5, #0x0                   	// #0
    1454:	mov	x1, x20
    1458:	mov	x0, x19
    145c:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
    1460:	mov	x19, x0
    1464:	mov	x1, #0x0                   	// #0
    1468:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
    146c:	mov	x0, x19
    1470:	ldp	x21, x30, [sp, #16]
    1474:	ldp	x19, x20, [sp], #48
    1478:	ret

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

sanitizer_printf.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>:
   0:	stp	x19, x20, [sp, #-320]!
   4:	and	w3, w3, #0xff
   8:	cmp	w3, #0xa
   c:	cset	w8, ne  // ne = any
  10:	stp	x21, x22, [sp, #16]
  14:	cmp	w8, #0x0
  18:	stp	x23, x24, [sp, #32]
  1c:	ccmp	w3, #0x10, #0x4, ne  // ne = any
  20:	stp	x25, x26, [sp, #48]
  24:	str	x30, [sp, #64]
  28:	b.ne	21c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x21c>  // b.any
  2c:	and	w24, w6, #0xff
  30:	cmp	w8, #0x0
  34:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  38:	b.ne	23c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x23c>  // b.any
  3c:	cmp	x2, #0x0
  40:	ccmp	w24, #0x0, #0x4, eq  // eq = none
  44:	b.ne	24c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x24c>  // b.any
  48:	and	w23, w4, #0xff
  4c:	cmp	w23, #0x1d
  50:	b.hi	25c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x25c>  // b.pmore
  54:	cmp	w23, #0x0
  58:	mov	x19, x0
  5c:	sub	w0, w23, #0x1
  60:	ccmp	w24, #0x0, #0x4, ne  // ne = any
  64:	and	w0, w0, #0xff
  68:	and	w25, w5, #0xff
  6c:	csel	w23, w0, w23, ne  // ne = any
  70:	cmp	w24, #0x0
  74:	mov	x20, x1
  78:	and	w26, w7, #0xff
  7c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
  80:	mov	w21, #0x0                   	// #0
  84:	b.ne	d4 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0xd4>  // b.any
  88:	add	x22, sp, #0x50
  8c:	and	x3, x3, #0xff
  90:	mov	x10, x22
  94:	mov	w0, #0x0                   	// #0
  98:	udiv	x11, x2, x3
  9c:	mov	w8, w0
  a0:	cmp	x3, x2
  a4:	add	w0, w0, #0x1
  a8:	msub	x12, x11, x3, x2
  ac:	mov	x2, x11
  b0:	str	x12, [x10]
  b4:	b.hi	fc <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0xfc>  // b.pmore
  b8:	add	x10, x10, #0x8
  bc:	cmp	w0, #0x1e
  c0:	b.ne	98 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x98>  // b.any
  c4:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
  c8:	add	x0, x0, #0x0
  cc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
  d0:	bl	0 <_ZN11__sanitizer3DieEv>
  d4:	ldr	x9, [x19]
  d8:	mov	w21, #0x1                   	// #1
  dc:	cmp	x1, x9
  e0:	b.ls	88 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x88>  // b.plast
  e4:	mov	w0, #0x2d                  	// #45
  e8:	strb	w0, [x9]
  ec:	ldr	x9, [x19]
  f0:	add	x9, x9, #0x1
  f4:	str	x9, [x19]
  f8:	b	88 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x88>
  fc:	cmp	w0, w23
 100:	b.lt	200 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x200>  // b.tstop
 104:	ldr	x9, [x19]
 108:	add	x0, x22, w8, sxtw #3
 10c:	mov	w3, #0x20                  	// #32
 110:	mov	w2, #0x30                  	// #48
 114:	nop
 118:	ldr	x1, [x0]
 11c:	cbnz	x1, 22c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x22c>
 120:	cmp	w8, #0x0
 124:	ccmp	w25, #0x0, #0x0, ne  // ne = any
 128:	csel	w1, w3, w2, eq  // eq = none
 12c:	cmp	x20, x9
 130:	b.ls	144 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x144>  // b.plast
 134:	strb	w1, [x9]
 138:	ldr	x9, [x19]
 13c:	add	x9, x9, #0x1
 140:	str	x9, [x19]
 144:	sub	w8, w8, #0x1
 148:	add	w21, w21, #0x1
 14c:	cmn	w8, #0x1
 150:	sub	x0, x0, #0x8
 154:	b.ne	118 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x118>  // b.any
 158:	eor	w25, w25, #0x1
 15c:	tst	w24, w25
 160:	b.eq	1e4 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1e4>  // b.none
 164:	cmp	x20, x9
 168:	b.hi	26c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x26c>  // b.pmore
 16c:	add	w21, w21, #0x1
 170:	cmn	w8, #0x1
 174:	b.eq	1e4 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1e4>  // b.none
 178:	cmp	w26, #0x0
 17c:	sub	w3, w8, #0x1
 180:	mov	w4, #0x41                  	// #65
 184:	mov	w0, #0x61                  	// #97
 188:	csel	w4, w4, w0, ne  // ne = any
 18c:	sxtw	x3, w3
 190:	sub	w4, w4, #0xa
 194:	mov	x5, #0xfffffffffffffffe    	// #-2
 198:	add	x0, x22, x3, lsl #3
 19c:	ldrb	w1, [x0, #8]
 1a0:	add	w0, w1, #0x30
 1a4:	add	w2, w1, w4
 1a8:	cmp	w1, #0x9
 1ac:	and	w0, w0, #0xff
 1b0:	and	w2, w2, #0xff
 1b4:	csel	w2, w2, w0, hi  // hi = pmore
 1b8:	cmp	x20, x9
 1bc:	b.ls	1d0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x1d0>  // b.plast
 1c0:	strb	w2, [x9]
 1c4:	ldr	x9, [x19]
 1c8:	add	x9, x9, #0x1
 1cc:	str	x9, [x19]
 1d0:	sub	x3, x3, #0x1
 1d4:	cmp	x3, x5
 1d8:	b.ne	198 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x198>  // b.any
 1dc:	add	w21, w21, #0x1
 1e0:	add	w21, w21, w8
 1e4:	mov	w0, w21
 1e8:	ldp	x21, x22, [sp, #16]
 1ec:	ldp	x23, x24, [sp, #32]
 1f0:	ldp	x25, x26, [sp, #48]
 1f4:	ldr	x30, [sp, #64]
 1f8:	ldp	x19, x20, [sp], #320
 1fc:	ret
 200:	sub	w2, w23, w0
 204:	mov	w1, #0x0                   	// #0
 208:	add	x0, x22, w0, sxtw #3
 20c:	sbfiz	x2, x2, #3, #32
 210:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 214:	sub	w8, w23, #0x1
 218:	b	104 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x104>
 21c:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 220:	add	x0, x0, #0x0
 224:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 228:	bl	0 <_ZN11__sanitizer3DieEv>
 22c:	eor	w25, w25, #0x1
 230:	tst	w24, w25
 234:	b.eq	178 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x178>  // b.none
 238:	b	164 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x164>
 23c:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 240:	add	x0, x0, #0x0
 244:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 248:	bl	0 <_ZN11__sanitizer3DieEv>
 24c:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 250:	add	x0, x0, #0x0
 254:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 258:	bl	0 <_ZN11__sanitizer3DieEv>
 25c:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 260:	add	x0, x0, #0x0
 264:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 268:	bl	0 <_ZN11__sanitizer3DieEv>
 26c:	mov	w0, #0x2d                  	// #45
 270:	strb	w0, [x9]
 274:	ldr	x9, [x19]
 278:	add	x9, x9, #0x1
 27c:	str	x9, [x19]
 280:	b	16c <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb+0x16c>
 284:	nop

0000000000000288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>:
 288:	stp	x19, x20, [sp, #-112]!
 28c:	stp	x23, x24, [sp, #32]
 290:	stp	x27, x28, [sp, #64]
 294:	str	x30, [sp, #80]
 298:	str	x0, [sp, #104]
 29c:	cbz	x2, 8c8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x640>
 2a0:	cmp	w1, #0x0
 2a4:	b.le	8e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x658>
 2a8:	ldrb	w4, [x2]
 2ac:	sxtw	x19, w1
 2b0:	sub	x28, x19, #0x1
 2b4:	mov	x20, x0
 2b8:	add	x28, x0, x28
 2bc:	cbz	w4, 9a4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x71c>
 2c0:	stp	x21, x22, [sp, #16]
 2c4:	adrp	x21, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 2c8:	add	x0, x21, #0x0
 2cc:	mov	w27, #0x1                   	// #1
 2d0:	mov	w24, #0x0                   	// #0
 2d4:	sub	w27, w27, w0
 2d8:	stp	x25, x26, [sp, #48]
 2dc:	ldr	w26, [x3, #24]
 2e0:	ldp	x25, x22, [x3]
 2e4:	b	31c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x94>
 2e8:	ldr	x0, [sp, #104]
 2ec:	cmp	x28, x0
 2f0:	b.ls	304 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x7c>  // b.plast
 2f4:	strb	w4, [x0]
 2f8:	ldr	x0, [sp, #104]
 2fc:	add	x0, x0, #0x1
 300:	str	x0, [sp, #104]
 304:	mov	x0, x23
 308:	add	w24, w24, #0x1
 30c:	mov	x23, x2
 310:	mov	x2, x0
 314:	ldrb	w4, [x23, #1]
 318:	cbz	w4, 4b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x230>
 31c:	cmp	w4, #0x25
 320:	add	x23, x2, #0x1
 324:	b.ne	2e8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x60>  // b.any
 328:	ldrb	w1, [x2, #1]
 32c:	cmp	w1, #0x2d
 330:	mov	w3, w1
 334:	b.ne	340 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xb8>  // b.any
 338:	ldrb	w3, [x2, #2]
 33c:	add	x23, x2, #0x2
 340:	sub	w0, w3, #0x30
 344:	mov	w4, #0x0                   	// #0
 348:	and	w0, w0, #0xff
 34c:	cmp	w0, #0x9
 350:	cset	w6, ls  // ls = plast
 354:	cmp	w3, #0x30
 358:	cset	w5, eq  // eq = none
 35c:	cmp	w0, #0x9
 360:	b.ls	3cc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x144>  // b.plast
 364:	cmp	w3, #0x2e
 368:	mov	w8, #0x1                   	// #1
 36c:	mov	w2, #0xffffffff            	// #-1
 370:	b.eq	410 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x188>  // b.none
 374:	cmp	w3, #0x7a
 378:	cinc	x23, x23, eq  // eq = none
 37c:	cset	w7, eq  // eq = none
 380:	ldrb	w3, [x23]
 384:	b.eq	390 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x108>  // b.none
 388:	cmp	w3, #0x6c
 38c:	b.eq	42c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x1a4>  // b.none
 390:	cmp	w1, #0x2d
 394:	orr	w6, w6, w7
 398:	ccmp	w8, #0x0, #0x4, ne  // ne = any
 39c:	mov	w9, #0x0                   	// #0
 3a0:	b.ne	458 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x1d0>  // b.any
 3a4:	cmp	w3, #0x73
 3a8:	b.eq	660 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3d8>  // b.none
 3ac:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 3b0:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 3b4:	add	x2, x2, #0x0
 3b8:	add	x0, x0, #0x0
 3bc:	mov	x4, #0x0                   	// #0
 3c0:	mov	x3, #0x0                   	// #0
 3c4:	mov	w1, #0xaa                  	// #170
 3c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3cc:	add	w4, w4, w4, lsl #2
 3d0:	add	w4, w3, w4, lsl #1
 3d4:	ldrb	w3, [x23, #1]!
 3d8:	sub	w4, w4, #0x30
 3dc:	sub	w2, w3, #0x30
 3e0:	and	w2, w2, #0xff
 3e4:	cmp	w2, #0x9
 3e8:	b.hi	364 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xdc>  // b.pmore
 3ec:	add	w4, w4, w4, lsl #2
 3f0:	add	w4, w3, w4, lsl #1
 3f4:	ldrb	w3, [x23, #1]!
 3f8:	sub	w4, w4, #0x30
 3fc:	sub	w2, w3, #0x30
 400:	and	w2, w2, #0xff
 404:	cmp	w2, #0x9
 408:	b.ls	3cc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x144>  // b.plast
 40c:	b	364 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xdc>
 410:	ldrb	w3, [x23, #1]
 414:	cmp	w3, #0x2a
 418:	b.eq	7cc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x544>  // b.none
 41c:	ldrb	w3, [x23]
 420:	mov	w7, #0x0                   	// #0
 424:	cmp	w3, #0x6c
 428:	b.ne	390 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x108>  // b.any
 42c:	ldrb	w9, [x23, #1]
 430:	cmp	w9, #0x6c
 434:	b.ne	390 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x108>  // b.any
 438:	cmp	w1, #0x2d
 43c:	mov	w7, #0x1                   	// #1
 440:	ldrb	w3, [x23, #2]
 444:	mov	w6, w7
 448:	add	x23, x23, #0x2
 44c:	mov	w9, w7
 450:	ccmp	w8, #0x0, #0x4, ne  // ne = any
 454:	b.eq	3a4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x11c>  // b.none
 458:	cmp	w3, #0x64
 45c:	b.eq	630 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3a8>  // b.none
 460:	b.hi	4f4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x26c>  // b.pmore
 464:	cmp	w3, #0x58
 468:	b.eq	5e4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x35c>  // b.none
 46c:	cmp	w3, #0x63
 470:	b.ne	57c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2f4>  // b.any
 474:	cbnz	w6, 5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>
 478:	tbnz	w26, #31, 77c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4f4>
 47c:	add	x0, x25, #0xb
 480:	mov	x1, x25
 484:	and	x25, x0, #0xfffffffffffffff8
 488:	ldr	x0, [sp, #104]
 48c:	cmp	x28, x0
 490:	b.ls	4a8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x220>  // b.plast
 494:	ldr	w1, [x1]
 498:	strb	w1, [x0]
 49c:	ldr	x0, [sp, #104]
 4a0:	add	x0, x0, #0x1
 4a4:	str	x0, [sp, #104]
 4a8:	add	w24, w24, #0x1
 4ac:	add	x2, x23, #0x1
 4b0:	ldrb	w4, [x23, #1]
 4b4:	cbnz	w4, 31c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x94>
 4b8:	ldp	x21, x22, [sp, #16]
 4bc:	ldp	x25, x26, [sp, #48]
 4c0:	ldr	x0, [sp, #104]
 4c4:	cmp	x28, x0
 4c8:	b.cc	9ac <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x724>  // b.lo, b.ul, b.last
 4cc:	add	x19, x20, x19
 4d0:	cmp	x0, x19
 4d4:	b.cs	4dc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x254>  // b.hs, b.nlast
 4d8:	strb	wzr, [x0]
 4dc:	mov	w0, w24
 4e0:	ldp	x23, x24, [sp, #32]
 4e4:	ldp	x27, x28, [sp, #64]
 4e8:	ldr	x30, [sp, #80]
 4ec:	ldp	x19, x20, [sp], #112
 4f0:	ret
 4f4:	cmp	w3, #0x70
 4f8:	b.ne	5b0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x328>  // b.any
 4fc:	cbnz	w6, 5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>
 500:	tbnz	w26, #31, 79c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x514>
 504:	add	x0, x25, #0xf
 508:	mov	x2, x25
 50c:	and	x25, x0, #0xfffffffffffffff8
 510:	ldr	x2, [x2]
 514:	add	x1, x21, #0x0
 518:	ldr	x0, [sp, #104]
 51c:	mov	w3, #0x30                  	// #48
 520:	cmp	x28, x0
 524:	b.ls	7bc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x534>  // b.plast
 528:	strb	w3, [x0]
 52c:	add	w8, w27, w1
 530:	ldrb	w3, [x1, #1]!
 534:	ldr	x0, [sp, #104]
 538:	add	x0, x0, #0x1
 53c:	str	x0, [sp, #104]
 540:	cbnz	w3, 520 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x298>
 544:	mov	x1, x28
 548:	add	x0, sp, #0x68
 54c:	mov	w7, #0x0                   	// #0
 550:	mov	w6, #0x0                   	// #0
 554:	mov	w5, #0x1                   	// #1
 558:	mov	w4, #0xc                   	// #12
 55c:	mov	w3, #0x10                  	// #16
 560:	str	w8, [sp, #100]
 564:	bl	0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 568:	ldr	w8, [sp, #100]
 56c:	add	x2, x23, #0x1
 570:	add	w8, w0, w8
 574:	add	w24, w24, w8
 578:	b	314 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x8c>
 57c:	cmp	w3, #0x25
 580:	b.ne	5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>  // b.any
 584:	cbnz	w6, 5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>
 588:	ldr	x0, [sp, #104]
 58c:	cmp	x28, x0
 590:	b.ls	4a8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x220>  // b.plast
 594:	strb	w3, [x0]
 598:	add	w24, w24, #0x1
 59c:	add	x2, x23, #0x1
 5a0:	ldr	x0, [sp, #104]
 5a4:	add	x0, x0, #0x1
 5a8:	str	x0, [sp, #104]
 5ac:	b	4b0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x228>
 5b0:	cmp	w3, #0x6f
 5b4:	b.hi	5c8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x340>  // b.pmore
 5b8:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 5bc:	add	x0, x0, #0x0
 5c0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5c4:	bl	0 <_ZN11__sanitizer3DieEv>
 5c8:	cmp	w3, #0x78
 5cc:	b.eq	5e4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x35c>  // b.none
 5d0:	b.hi	5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>  // b.pmore
 5d4:	cmp	w3, #0x73
 5d8:	b.eq	660 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3d8>  // b.none
 5dc:	cmp	w3, #0x75
 5e0:	b.ne	5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>  // b.any
 5e4:	cbz	w9, 744 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4bc>
 5e8:	tbnz	w26, #31, 888 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x600>
 5ec:	add	x1, x25, #0xf
 5f0:	mov	x0, x25
 5f4:	and	x25, x1, #0xfffffffffffffff8
 5f8:	ldr	x2, [x0]
 5fc:	cmp	w3, #0x58
 600:	cset	w7, eq  // eq = none
 604:	cmp	w3, #0x75
 608:	mov	w0, #0x10                  	// #16
 60c:	mov	w3, #0xa                   	// #10
 610:	csel	w3, w3, w0, eq  // eq = none
 614:	mov	w6, #0x0                   	// #0
 618:	mov	x1, x28
 61c:	add	x0, sp, #0x68
 620:	bl	0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 624:	add	w24, w24, w0
 628:	add	x2, x23, #0x1
 62c:	b	314 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x8c>
 630:	cbz	w9, 760 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4d8>
 634:	tbnz	w26, #31, 8a8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x620>
 638:	add	x1, x25, #0xf
 63c:	mov	x0, x25
 640:	and	x25, x1, #0xfffffffffffffff8
 644:	ldr	x6, [x0]
 648:	cmp	x6, #0x0
 64c:	cneg	x2, x6, lt  // lt = tstop
 650:	mov	w7, #0x0                   	// #0
 654:	lsr	x6, x6, #63
 658:	mov	w3, #0xa                   	// #10
 65c:	b	618 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x390>
 660:	cbnz	w7, 5b8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x330>
 664:	cmp	w1, #0x2d
 668:	ccmp	w0, #0x9, #0x2, ne  // ne = any
 66c:	b.ls	80c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x584>  // b.plast
 670:	cmp	w1, #0x2d
 674:	cneg	w4, w4, eq  // eq = none
 678:	tbnz	w26, #31, 834 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5ac>
 67c:	add	x1, x25, #0xf
 680:	mov	x0, x25
 684:	and	x25, x1, #0xfffffffffffffff8
 688:	ldr	x5, [x0]
 68c:	cbz	x5, 858 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5d0>
 690:	ldrb	w3, [x5]
 694:	cbz	w3, 990 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x708>
 698:	cbz	w2, 99c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x714>
 69c:	mov	w6, #0x0                   	// #0
 6a0:	ldr	x0, [sp, #104]
 6a4:	b	6b4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x42c>
 6a8:	cmp	w1, w2
 6ac:	b.eq	82c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5a4>  // b.none
 6b0:	mov	w6, w1
 6b4:	cmp	x28, x0
 6b8:	b.ls	6cc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x444>  // b.plast
 6bc:	strb	w3, [x0]
 6c0:	ldr	x0, [sp, #104]
 6c4:	add	x0, x0, #0x1
 6c8:	str	x0, [sp, #104]
 6cc:	ldrb	w3, [x5, #1]!
 6d0:	add	w1, w6, #0x1
 6d4:	cbnz	w3, 6a8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x420>
 6d8:	mvn	w6, w6
 6dc:	mov	w2, w1
 6e0:	cmp	w4, w6
 6e4:	b.ge	738 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x4b0>  // b.tcont
 6e8:	ldr	x0, [sp, #104]
 6ec:	mov	w1, w2
 6f0:	mov	w5, #0x20                  	// #32
 6f4:	nop
 6f8:	cmp	x28, x0
 6fc:	b.ls	710 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x488>  // b.plast
 700:	strb	w5, [x0]
 704:	ldr	x0, [sp, #104]
 708:	add	x0, x0, #0x1
 70c:	str	x0, [sp, #104]
 710:	add	w1, w1, #0x1
 714:	neg	w3, w1
 718:	cmp	w4, w3
 71c:	b.lt	6f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x470>  // b.tstop
 720:	mvn	w0, w2
 724:	add	w2, w2, #0x1
 728:	cmp	w4, w0
 72c:	sub	w4, w0, w4
 730:	csel	w4, w4, wzr, le
 734:	add	w2, w4, w2
 738:	add	w24, w24, w2
 73c:	add	x2, x23, #0x1
 740:	b	314 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x8c>
 744:	cbnz	w7, 5e8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x360>
 748:	tbnz	w26, #31, 928 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6a0>
 74c:	mov	x0, x25
 750:	add	x1, x25, #0xb
 754:	and	x25, x1, #0xfffffffffffffff8
 758:	ldr	w2, [x0]
 75c:	b	5fc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x374>
 760:	cbnz	w7, 634 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3ac>
 764:	tbnz	w26, #31, 904 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x67c>
 768:	mov	x0, x25
 76c:	add	x1, x25, #0xb
 770:	and	x25, x1, #0xfffffffffffffff8
 774:	ldrsw	x6, [x0]
 778:	b	648 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3c0>
 77c:	add	w0, w26, #0x8
 780:	cmp	w0, #0x0
 784:	b.le	7f4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x56c>
 788:	add	x2, x25, #0xb
 78c:	mov	x1, x25
 790:	mov	w26, w0
 794:	and	x25, x2, #0xfffffffffffffff8
 798:	b	488 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x200>
 79c:	add	w0, w26, #0x8
 7a0:	cmp	w0, #0x0
 7a4:	b.le	800 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x578>
 7a8:	add	x1, x25, #0xf
 7ac:	mov	x2, x25
 7b0:	mov	w26, w0
 7b4:	and	x25, x1, #0xfffffffffffffff8
 7b8:	b	510 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x288>
 7bc:	add	w8, w27, w1
 7c0:	ldrb	w3, [x1, #1]!
 7c4:	cbnz	w3, 520 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x298>
 7c8:	b	544 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x2bc>
 7cc:	add	x7, x23, #0x2
 7d0:	tbnz	w26, #31, 868 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x5e0>
 7d4:	add	x3, x25, #0xb
 7d8:	mov	x2, x25
 7dc:	and	x25, x3, #0xfffffffffffffff8
 7e0:	ldr	w2, [x2]
 7e4:	ldrb	w3, [x23, #2]
 7e8:	mov	x23, x7
 7ec:	lsr	w8, w2, #31
 7f0:	b	374 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0xec>
 7f4:	add	x1, x22, w26, sxtw
 7f8:	mov	w26, w0
 7fc:	b	488 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x200>
 800:	add	x2, x22, w26, sxtw
 804:	mov	w26, w0
 808:	b	510 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x288>
 80c:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 810:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 814:	add	x2, x2, #0x0
 818:	add	x0, x0, #0x0
 81c:	mov	x4, #0x0                   	// #0
 820:	mov	x3, #0x0                   	// #0
 824:	mov	w1, #0xc7                  	// #199
 828:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 82c:	neg	w6, w2
 830:	b	6e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x458>
 834:	add	w1, w26, #0x8
 838:	cmp	w1, #0x0
 83c:	b.le	8f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x670>
 840:	mov	x0, x25
 844:	add	x3, x25, #0xf
 848:	mov	w26, w1
 84c:	and	x25, x3, #0xfffffffffffffff8
 850:	ldr	x5, [x0]
 854:	cbnz	x5, 690 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x408>
 858:	adrp	x5, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 85c:	mov	w3, #0x3c                  	// #60
 860:	add	x5, x5, #0x0
 864:	b	698 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x410>
 868:	add	w3, w26, #0x8
 86c:	cmp	w3, #0x0
 870:	b.le	94c <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6c4>
 874:	add	x8, x25, #0xb
 878:	mov	x2, x25
 87c:	mov	w26, w3
 880:	and	x25, x8, #0xfffffffffffffff8
 884:	b	7e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x558>
 888:	add	w1, w26, #0x8
 88c:	cmp	w1, #0x0
 890:	b.le	958 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6d0>
 894:	add	x2, x25, #0xf
 898:	mov	x0, x25
 89c:	mov	w26, w1
 8a0:	and	x25, x2, #0xfffffffffffffff8
 8a4:	b	5f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x370>
 8a8:	add	w1, w26, #0x8
 8ac:	cmp	w1, #0x0
 8b0:	b.le	964 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6dc>
 8b4:	add	x2, x25, #0xf
 8b8:	mov	x0, x25
 8bc:	mov	w26, w1
 8c0:	and	x25, x2, #0xfffffffffffffff8
 8c4:	b	644 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3bc>
 8c8:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 8cc:	add	x0, x0, #0x0
 8d0:	stp	x21, x22, [sp, #16]
 8d4:	stp	x25, x26, [sp, #48]
 8d8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 8dc:	bl	0 <_ZN11__sanitizer3DieEv>
 8e0:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 8e4:	add	x0, x0, #0x0
 8e8:	stp	x21, x22, [sp, #16]
 8ec:	stp	x25, x26, [sp, #48]
 8f0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 8f4:	bl	0 <_ZN11__sanitizer3DieEv>
 8f8:	add	x0, x22, w26, sxtw
 8fc:	mov	w26, w1
 900:	b	688 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x400>
 904:	add	w1, w26, #0x8
 908:	cmp	w1, #0x0
 90c:	b.le	970 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6e8>
 910:	mov	x0, x25
 914:	add	x2, x25, #0xb
 918:	mov	w26, w1
 91c:	and	x25, x2, #0xfffffffffffffff8
 920:	ldrsw	x6, [x0]
 924:	b	648 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3c0>
 928:	add	w1, w26, #0x8
 92c:	cmp	w1, #0x0
 930:	b.le	980 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x6f8>
 934:	mov	x0, x25
 938:	add	x2, x25, #0xb
 93c:	and	x25, x2, #0xfffffffffffffff8
 940:	mov	w26, w1
 944:	ldr	w2, [x0]
 948:	b	5fc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x374>
 94c:	add	x2, x22, w26, sxtw
 950:	mov	w26, w3
 954:	b	7e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x558>
 958:	add	x0, x22, w26, sxtw
 95c:	mov	w26, w1
 960:	b	5f8 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x370>
 964:	add	x0, x22, w26, sxtw
 968:	mov	w26, w1
 96c:	b	644 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3bc>
 970:	add	x0, x22, w26, sxtw
 974:	mov	w26, w1
 978:	ldrsw	x6, [x0]
 97c:	b	648 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x3c0>
 980:	add	x0, x22, w26, sxtw
 984:	mov	w26, w1
 988:	ldr	w2, [x0]
 98c:	b	5fc <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x374>
 990:	mov	w6, #0x0                   	// #0
 994:	mov	w2, #0x0                   	// #0
 998:	b	6e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x458>
 99c:	mov	w6, #0x0                   	// #0
 9a0:	b	6e0 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x458>
 9a4:	mov	w24, #0x0                   	// #0
 9a8:	b	4c4 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list+0x23c>
 9ac:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 9b0:	add	x0, x0, #0x0
 9b4:	stp	x21, x22, [sp, #16]
 9b8:	stp	x25, x26, [sp, #48]
 9bc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 9c0:	bl	0 <_ZN11__sanitizer3DieEv>
 9c4:	nop

00000000000009c8 <_ZN11__sanitizer26SetPrintfAndReportCallbackEPFvPKcE>:
 9c8:	adrp	x1, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 9cc:	str	x0, [x1]
 9d0:	ret
 9d4:	nop

00000000000009d8 <__sanitizer_on_print>:
 9d8:	ret
 9dc:	nop

00000000000009e0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>:
 9e0:	sub	sp, sp, #0x100
 9e4:	mov	w9, #0xffffffd8            	// #-40
 9e8:	add	x10, sp, #0xd0
 9ec:	add	x11, sp, #0x100
 9f0:	mov	w8, #0xffffff80            	// #-128
 9f4:	stp	x11, x11, [sp, #48]
 9f8:	str	x10, [sp, #64]
 9fc:	stp	w9, w8, [sp, #72]
 a00:	ldp	x10, x11, [sp, #48]
 a04:	str	x30, [sp]
 a08:	ldp	x8, x9, [sp, #64]
 a0c:	stp	x10, x11, [sp, #16]
 a10:	stp	x8, x9, [sp, #32]
 a14:	str	q0, [sp, #80]
 a18:	str	q1, [sp, #96]
 a1c:	str	q2, [sp, #112]
 a20:	str	q3, [sp, #128]
 a24:	str	q4, [sp, #144]
 a28:	str	q5, [sp, #160]
 a2c:	str	q6, [sp, #176]
 a30:	str	q7, [sp, #192]
 a34:	stp	x3, x4, [sp, #216]
 a38:	add	x3, sp, #0x10
 a3c:	stp	x5, x6, [sp, #232]
 a40:	str	x7, [sp, #248]
 a44:	bl	288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 a48:	ldr	x30, [sp]
 a4c:	add	sp, sp, #0x100
 a50:	ret
 a54:	nop

0000000000000a58 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0>:
 a58:	stp	x19, x20, [sp, #-176]!
 a5c:	and	w0, w0, #0xff
 a60:	mov	x19, x1
 a64:	stp	x23, x24, [sp, #32]
 a68:	adrp	x23, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 a6c:	adrp	x24, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 a70:	stp	x27, x28, [sp, #64]
 a74:	mov	x27, x3
 a78:	add	x24, x24, #0x0
 a7c:	ldr	x23, [x23]
 a80:	stp	x21, x22, [sp, #16]
 a84:	mov	x21, x1
 a88:	mov	x22, x2
 a8c:	stp	x25, x26, [sp, #48]
 a90:	add	x25, sp, #0x70
 a94:	str	w0, [sp, #104]
 a98:	mov	w26, #0x0                   	// #0
 a9c:	ldp	x2, x3, [x3]
 aa0:	mov	w20, #0x190                 	// #400
 aa4:	ldp	x0, x1, [x27, #16]
 aa8:	str	x30, [sp, #80]
 aac:	stp	x2, x3, [sp, #144]
 ab0:	stp	x0, x1, [sp, #160]
 ab4:	ldr	w0, [sp, #104]
 ab8:	cbz	w0, b18 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0xc0>
 abc:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
 ac0:	mov	x28, x0
 ac4:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
 ac8:	cmp	x0, #0x0
 acc:	ldrb	w2, [x23, #48]
 ad0:	cset	w6, ne  // ne = any
 ad4:	mov	x3, x0
 ad8:	sxtw	x1, w20
 adc:	mov	x0, x19
 ae0:	tst	w6, w2
 ae4:	mov	w5, #0x0                   	// #0
 ae8:	b.ne	c34 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x1dc>  // b.any
 aec:	mov	w3, w28
 af0:	mov	x2, x24
 af4:	str	w5, [sp, #108]
 af8:	bl	9e0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 afc:	ldr	w5, [sp, #108]
 b00:	add	w28, w5, w0
 b04:	cmp	w20, w28
 b08:	b.le	b84 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x12c>
 b0c:	add	x0, x19, w28, sxtw
 b10:	sub	w1, w20, w28
 b14:	b	b24 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0xcc>
 b18:	mov	w1, w20
 b1c:	mov	x0, x19
 b20:	mov	w28, #0x0                   	// #0
 b24:	ldp	x6, x7, [x27]
 b28:	mov	x3, x25
 b2c:	ldp	x8, x9, [x27, #16]
 b30:	mov	x2, x22
 b34:	stp	x6, x7, [x25]
 b38:	stp	x8, x9, [x25, #16]
 b3c:	bl	288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 b40:	add	w0, w28, w0
 b44:	cmp	w20, w0
 b48:	b.gt	bd0 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x178>
 b4c:	cbnz	w26, bc4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x16c>
 b50:	ldp	x2, x3, [sp, #160]
 b54:	stp	x2, x3, [x27, #16]
 b58:	mov	w26, #0x1                   	// #1
 b5c:	ldp	x0, x1, [sp, #144]
 b60:	stp	x0, x1, [x27]
 b64:	mov	w2, #0x0                   	// #0
 b68:	mov	w20, #0x4000                	// #16384
 b6c:	adrp	x1, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 b70:	mov	x0, #0x4000                	// #16384
 b74:	add	x1, x1, #0x0
 b78:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 b7c:	mov	x19, x0
 b80:	b	ab4 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x5c>
 b84:	cbz	w26, b50 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0xf8>
 b88:	mov	w0, #0x3fff                	// #16383
 b8c:	cmp	w28, w0
 b90:	b.gt	c5c <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x204>
 b94:	ldp	x6, x7, [x27]
 b98:	mov	x2, x22
 b9c:	ldp	x4, x5, [x27, #16]
 ba0:	add	x3, sp, #0x70
 ba4:	sub	w1, w20, w28
 ba8:	add	x0, x19, w28, sxtw
 bac:	stp	x6, x7, [sp, #112]
 bb0:	stp	x4, x5, [sp, #128]
 bb4:	bl	288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 bb8:	add	w0, w28, w0
 bbc:	cmp	w20, w0
 bc0:	b.gt	bd0 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x178>
 bc4:	mov	w1, #0x3fff                	// #16383
 bc8:	cmp	w0, w1
 bcc:	b.gt	c5c <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x204>
 bd0:	mov	x0, x19
 bd4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 bd8:	mov	x0, x19
 bdc:	bl	0 <_ZN11__sanitizer35RemoveANSIEscapeSequencesFromStringEPc>
 be0:	mov	x0, x19
 be4:	bl	9d8 <__sanitizer_on_print>
 be8:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 bec:	ldr	x1, [x0]
 bf0:	cbz	x1, bfc <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x1a4>
 bf4:	mov	x0, x19
 bf8:	blr	x1
 bfc:	mov	x0, x19
 c00:	bl	0 <_ZN11__sanitizer18LogMessageOnPrintfEPKc>
 c04:	cmp	x19, x21
 c08:	b.eq	c18 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x1c0>  // b.none
 c0c:	sxtw	x1, w20
 c10:	mov	x0, x19
 c14:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 c18:	ldp	x21, x22, [sp, #16]
 c1c:	ldp	x23, x24, [sp, #32]
 c20:	ldp	x25, x26, [sp, #48]
 c24:	ldp	x27, x28, [sp, #64]
 c28:	ldr	x30, [sp, #80]
 c2c:	ldp	x19, x20, [sp], #176
 c30:	ret
 c34:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 c38:	add	x2, x2, #0x0
 c3c:	bl	9e0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 c40:	mov	w5, w0
 c44:	cmp	w20, w0
 c48:	b.le	c6c <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x214>
 c4c:	sub	w1, w20, w0
 c50:	add	x0, x19, w0, sxtw
 c54:	sxtw	x1, w1
 c58:	b	aec <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x94>
 c5c:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 c60:	add	x0, x0, #0x0
 c64:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 c68:	bl	0 <_ZN11__sanitizer3DieEv>
 c6c:	cbz	w26, b50 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0xf8>
 c70:	mov	w0, #0x3fff                	// #16383
 c74:	cmp	w5, w0
 c78:	b.gt	c5c <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x204>
 c7c:	sub	w1, w20, w5
 c80:	mov	w3, w28
 c84:	add	x0, x19, w5, sxtw
 c88:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 c8c:	sxtw	x1, w1
 c90:	add	x2, x2, #0x0
 c94:	str	w5, [sp, #104]
 c98:	bl	9e0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
 c9c:	ldr	w5, [sp, #104]
 ca0:	add	w28, w5, w0
 ca4:	cmp	w20, w28
 ca8:	b.le	b88 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x130>
 cac:	b	b94 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0+0x13c>

0000000000000cb0 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>:
 cb0:	mov	x4, x2
 cb4:	sub	sp, sp, #0x1c0
 cb8:	mov	x2, x1
 cbc:	add	x3, sp, #0x10
 cc0:	add	x1, sp, #0x30
 cc4:	ldp	x6, x7, [x4]
 cc8:	stp	x6, x7, [sp, #16]
 ccc:	ldp	x4, x5, [x4, #16]
 cd0:	str	x30, [sp]
 cd4:	stp	x4, x5, [sp, #32]
 cd8:	bl	a58 <_ZN11__sanitizerL24SharedPrintfCodeNoBufferEbPciPKcSt9__va_list.constprop.0>
 cdc:	ldr	x30, [sp]
 ce0:	add	sp, sp, #0x1c0
 ce4:	ret

0000000000000ce8 <_ZN11__sanitizer6PrintfEPKcz>:
 ce8:	sub	sp, sp, #0x110
 cec:	mov	w9, #0xffffffc8            	// #-56
 cf0:	add	x11, sp, #0xd0
 cf4:	add	x10, sp, #0x110
 cf8:	mov	w8, #0xffffff80            	// #-128
 cfc:	stp	x10, x10, [sp, #48]
 d00:	mov	x10, x0
 d04:	mov	w0, #0x0                   	// #0
 d08:	str	x11, [sp, #64]
 d0c:	stp	w9, w8, [sp, #72]
 d10:	ldp	x12, x13, [sp, #48]
 d14:	str	x30, [sp]
 d18:	ldp	x8, x9, [sp, #64]
 d1c:	stp	x12, x13, [sp, #16]
 d20:	stp	x8, x9, [sp, #32]
 d24:	str	q0, [sp, #80]
 d28:	str	q1, [sp, #96]
 d2c:	str	q2, [sp, #112]
 d30:	str	q3, [sp, #128]
 d34:	str	q4, [sp, #144]
 d38:	str	q5, [sp, #160]
 d3c:	str	q6, [sp, #176]
 d40:	str	q7, [sp, #192]
 d44:	stp	x1, x2, [sp, #216]
 d48:	add	x2, sp, #0x10
 d4c:	mov	x1, x10
 d50:	stp	x3, x4, [sp, #232]
 d54:	stp	x5, x6, [sp, #248]
 d58:	str	x7, [sp, #264]
 d5c:	bl	cb0 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>
 d60:	ldr	x30, [sp]
 d64:	add	sp, sp, #0x110
 d68:	ret
 d6c:	nop

0000000000000d70 <_ZN11__sanitizer6ReportEPKcz>:
 d70:	sub	sp, sp, #0x110
 d74:	mov	w9, #0xffffffc8            	// #-56
 d78:	add	x11, sp, #0xd0
 d7c:	add	x10, sp, #0x110
 d80:	mov	w8, #0xffffff80            	// #-128
 d84:	stp	x10, x10, [sp, #48]
 d88:	mov	x10, x0
 d8c:	mov	w0, #0x1                   	// #1
 d90:	str	x11, [sp, #64]
 d94:	stp	w9, w8, [sp, #72]
 d98:	ldp	x12, x13, [sp, #48]
 d9c:	str	x30, [sp]
 da0:	ldp	x8, x9, [sp, #64]
 da4:	stp	x12, x13, [sp, #16]
 da8:	stp	x8, x9, [sp, #32]
 dac:	str	q0, [sp, #80]
 db0:	str	q1, [sp, #96]
 db4:	str	q2, [sp, #112]
 db8:	str	q3, [sp, #128]
 dbc:	str	q4, [sp, #144]
 dc0:	str	q5, [sp, #160]
 dc4:	str	q6, [sp, #176]
 dc8:	str	q7, [sp, #192]
 dcc:	stp	x1, x2, [sp, #216]
 dd0:	add	x2, sp, #0x10
 dd4:	mov	x1, x10
 dd8:	stp	x3, x4, [sp, #232]
 ddc:	stp	x5, x6, [sp, #248]
 de0:	str	x7, [sp, #264]
 de4:	bl	cb0 <_ZN11__sanitizerL16SharedPrintfCodeEbPKcSt9__va_list>
 de8:	ldr	x30, [sp]
 dec:	add	sp, sp, #0x110
 df0:	ret
 df4:	nop

0000000000000df8 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>:
 df8:	stp	x19, x30, [sp, #-256]!
 dfc:	mov	x19, x0
 e00:	str	q0, [sp, #80]
 e04:	str	q1, [sp, #96]
 e08:	ldr	x8, [x0, #16]
 e0c:	str	q2, [sp, #112]
 e10:	ldr	x0, [x0, #24]
 e14:	str	q3, [sp, #128]
 e18:	str	q4, [sp, #144]
 e1c:	cmp	x0, x8
 e20:	str	q5, [sp, #160]
 e24:	str	q6, [sp, #176]
 e28:	str	q7, [sp, #192]
 e2c:	stp	x2, x3, [sp, #208]
 e30:	stp	x4, x5, [sp, #224]
 e34:	stp	x6, x7, [sp, #240]
 e38:	b.cs	eac <_ZN11__sanitizer20InternalScopedString6appendEPKcz+0xb4>  // b.hs, b.nlast
 e3c:	mov	w4, #0xffffff80            	// #-128
 e40:	mov	w3, #0xffffffd0            	// #-48
 e44:	stp	w3, w4, [sp, #72]
 e48:	add	x5, sp, #0xd0
 e4c:	ldr	x4, [x19]
 e50:	add	x2, sp, #0x100
 e54:	stp	x2, x2, [sp, #48]
 e58:	mov	x2, x1
 e5c:	sub	w1, w8, w0
 e60:	str	x5, [sp, #64]
 e64:	add	x0, x4, x0
 e68:	ldp	x6, x7, [sp, #48]
 e6c:	add	x3, sp, #0x10
 e70:	ldp	x4, x5, [sp, #64]
 e74:	stp	x6, x7, [sp, #16]
 e78:	stp	x4, x5, [sp, #32]
 e7c:	bl	288 <_ZN11__sanitizer9VSNPrintfEPciPKcSt9__va_list>
 e80:	ldr	x1, [x19]
 e84:	ldr	x0, [x19, #24]
 e88:	add	x0, x1, x0
 e8c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 e90:	ldp	x4, x3, [x19, #16]
 e94:	add	x3, x0, x3
 e98:	str	x3, [x19, #24]
 e9c:	cmp	x3, x4
 ea0:	b.cs	ecc <_ZN11__sanitizer20InternalScopedString6appendEPKcz+0xd4>  // b.hs, b.nlast
 ea4:	ldp	x19, x30, [sp], #256
 ea8:	ret
 eac:	mov	x3, x0
 eb0:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 eb4:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 eb8:	mov	x4, x8
 ebc:	add	x2, x2, #0x0
 ec0:	add	x0, x0, #0x0
 ec4:	mov	w1, #0x15d                 	// #349
 ec8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 ecc:	adrp	x2, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 ed0:	adrp	x0, 0 <_ZN11__sanitizerL12AppendNumberEPPcPKcyhhbbb>
 ed4:	add	x2, x2, #0x0
 ed8:	add	x0, x0, #0x0
 edc:	mov	w1, #0x163                 	// #355
 ee0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_procmaps_common.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer9IsDecimalEc>:
   0:	and	w0, w0, #0xff
   4:	sub	w0, w0, #0x30
   8:	and	w0, w0, #0xff
   c:	cmp	w0, #0xa
  10:	cset	w0, cc  // cc = lo, ul, last
  14:	ret

0000000000000018 <_ZN11__sanitizer12ParseDecimalEPPKc>:
  18:	ldr	x2, [x0]
  1c:	mov	x3, x0
  20:	ldrb	w1, [x2]
  24:	sub	w1, w1, #0x30
  28:	and	w0, w1, #0xff
  2c:	cmp	w0, #0x9
  30:	mov	x0, #0x0                   	// #0
  34:	b.ls	3c <_ZN11__sanitizer12ParseDecimalEPPKc+0x24>  // b.plast
  38:	ret
  3c:	add	x2, x2, #0x1
  40:	str	x2, [x3]
  44:	sxtw	x4, w1
  48:	add	x0, x0, x0, lsl #2
  4c:	ldrb	w1, [x2]
  50:	add	x0, x4, x0, lsl #1
  54:	sub	w1, w1, #0x30
  58:	and	w4, w1, #0xff
  5c:	cmp	w4, #0x9
  60:	b.ls	3c <_ZN11__sanitizer12ParseDecimalEPPKc+0x24>  // b.plast
  64:	ret

0000000000000068 <_ZN11__sanitizer5IsHexEc>:
  68:	and	w1, w0, #0xff
  6c:	sub	w0, w1, #0x30
  70:	and	w0, w0, #0xff
  74:	cmp	w0, #0x9
  78:	b.ls	a4 <_ZN11__sanitizer5IsHexEc+0x3c>  // b.plast
  7c:	sub	w2, w1, #0x61
  80:	mov	w0, #0x1                   	// #1
  84:	and	w2, w2, #0xff
  88:	cmp	w2, #0x5
  8c:	b.ls	a0 <_ZN11__sanitizer5IsHexEc+0x38>  // b.plast
  90:	sub	w1, w1, #0x41
  94:	and	w1, w1, #0xff
  98:	cmp	w1, #0x5
  9c:	cset	w0, ls  // ls = plast
  a0:	ret
  a4:	mov	w0, #0x1                   	// #1
  a8:	ret
  ac:	nop

00000000000000b0 <_ZN11__sanitizer8ParseHexEPPKc>:
  b0:	mov	x4, x0
  b4:	mov	x0, #0x0                   	// #0
  b8:	ldr	x3, [x4]
  bc:	b	e0 <_ZN11__sanitizer8ParseHexEPPKc+0x30>
  c0:	cmp	w6, #0x5
  c4:	b.ls	110 <_ZN11__sanitizer8ParseHexEPPKc+0x60>  // b.plast
  c8:	cmp	w5, #0x5
  cc:	b.hi	118 <_ZN11__sanitizer8ParseHexEPPKc+0x68>  // b.pmore
  d0:	sxtw	x1, w1
  d4:	add	x3, x3, #0x1
  d8:	add	x0, x1, x0, lsl #4
  dc:	str	x3, [x4]
  e0:	ldrb	w2, [x3]
  e4:	sub	w7, w2, #0x30
  e8:	sub	w6, w2, #0x61
  ec:	sub	w5, w2, #0x41
  f0:	and	w8, w7, #0xff
  f4:	sub	w1, w2, #0x37
  f8:	and	w6, w6, #0xff
  fc:	and	w5, w5, #0xff
 100:	cmp	w8, #0x9
 104:	b.hi	c0 <_ZN11__sanitizer8ParseHexEPPKc+0x10>  // b.pmore
 108:	mov	w1, w7
 10c:	b	d0 <_ZN11__sanitizer8ParseHexEPPKc+0x20>
 110:	sub	w1, w2, #0x57
 114:	b	d0 <_ZN11__sanitizer8ParseHexEPPKc+0x20>
 118:	ret
 11c:	nop

0000000000000120 <_ZN11__sanitizer19MemoryMappedSegment16AddAddressRangesEPNS_12LoadedModuleE>:
 120:	mov	x2, x0
 124:	mov	x0, x1
 128:	ldr	x1, [x2, #72]
 12c:	cbnz	x1, 14c <_ZN11__sanitizer19MemoryMappedSegment16AddAddressRangesEPNS_12LoadedModuleE+0x2c>
 130:	ldr	x1, [x2]
 134:	mov	x5, #0x0                   	// #0
 138:	ldr	x3, [x2, #40]
 13c:	ldr	x2, [x2, #8]
 140:	ubfx	w4, w3, #1, #1
 144:	ubfx	w3, w3, #2, #1
 148:	b	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 14c:	str	x30, [sp, #-16]!
 150:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 154:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 158:	add	x2, x2, #0x0
 15c:	add	x0, x0, #0x0
 160:	mov	x4, #0x0                   	// #0
 164:	mov	x3, #0x0                   	// #0
 168:	mov	w1, #0x44                  	// #68
 16c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000170 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>:
 170:	stp	x19, x20, [sp, #-64]!
 174:	tst	w1, #0xff
 178:	mov	x19, x0
 17c:	str	x30, [sp, #16]
 180:	b.ne	19c <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x2c>  // b.any
 184:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 188:	ldr	x0, [x19]
 18c:	ldr	x30, [sp, #16]
 190:	str	x0, [x19, #24]
 194:	ldp	x19, x20, [sp], #64
 198:	ret
 19c:	add	x0, sp, #0x28
 1a0:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 1a4:	ldr	x0, [sp, #48]
 1a8:	cbnz	x0, 220 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xb0>
 1ac:	mov	x0, x19
 1b0:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 1b4:	ldr	x0, [x19, #8]
 1b8:	cbnz	x0, 188 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x18>
 1bc:	adrp	x20, 0 <_ZN11__sanitizer9IsDecimalEc>
 1c0:	add	x0, x20, #0x0
 1c4:	mov	w2, #0x1                   	// #1
 1c8:	ldxrb	w1, [x0]
 1cc:	stxrb	w3, w2, [x0]
 1d0:	cbnz	w3, 1c8 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x58>
 1d4:	dmb	ish
 1d8:	tst	w1, #0xff
 1dc:	b.eq	1e4 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x74>  // b.none
 1e0:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 1e4:	add	x0, x20, #0x0
 1e8:	add	x2, x0, #0x8
 1ec:	ldr	x1, [x0, #8]
 1f0:	cbz	x1, 204 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x94>
 1f4:	ldp	x0, x1, [x0, #8]
 1f8:	stp	x0, x1, [x19]
 1fc:	ldr	x0, [x2, #16]
 200:	str	x0, [x19, #16]
 204:	dmb	ish
 208:	strb	wzr, [x20]
 20c:	ldr	x0, [x19]
 210:	ldr	x30, [sp, #16]
 214:	str	x0, [x19, #24]
 218:	ldp	x19, x20, [sp], #64
 21c:	ret
 220:	adrp	x20, 0 <_ZN11__sanitizer9IsDecimalEc>
 224:	add	x0, x20, #0x0
 228:	mov	w2, #0x1                   	// #1
 22c:	ldxrb	w1, [x0]
 230:	stxrb	w3, w2, [x0]
 234:	cbnz	w3, 22c <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xbc>
 238:	dmb	ish
 23c:	tst	w1, #0xff
 240:	b.eq	248 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xd8>  // b.none
 244:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 248:	add	x0, x20, #0x0
 24c:	ldr	x1, [x0, #16]
 250:	cbnz	x1, 284 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x114>
 254:	add	x0, x20, #0x0
 258:	ldp	x2, x3, [sp, #40]
 25c:	ldr	x1, [sp, #56]
 260:	stp	x2, x3, [x0, #8]
 264:	str	x1, [x0, #24]
 268:	dmb	ish
 26c:	strb	wzr, [x20]
 270:	mov	x0, x19
 274:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 278:	ldr	x0, [x19, #8]
 27c:	cbnz	x0, 188 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x18>
 280:	b	1bc <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0x4c>
 284:	ldr	x0, [x0, #8]
 288:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 28c:	b	254 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb+0xe4>

0000000000000290 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>:
 290:	ldr	x0, [x0, #24]
 294:	cmp	x0, #0x0
 298:	cset	w0, eq  // eq = none
 29c:	ret

00000000000002a0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>:
 2a0:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 2a4:	mov	x1, x0
 2a8:	ldr	x0, [x0]
 2ac:	ldr	x2, [x2]
 2b0:	cmp	x0, x2
 2b4:	b.eq	2c0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev+0x20>  // b.none
 2b8:	ldr	x1, [x1, #8]
 2bc:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 2c0:	ret
 2c4:	nop

00000000000002c8 <_ZN11__sanitizer19MemoryMappingLayout5ResetEv>:
 2c8:	ldr	x1, [x0]
 2cc:	str	x1, [x0, #24]
 2d0:	ret
 2d4:	nop

00000000000002d8 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>:
 2d8:	stp	x19, x30, [sp, #-48]!
 2dc:	add	x0, sp, #0x18
 2e0:	bl	0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 2e4:	ldr	x0, [sp, #32]
 2e8:	cbnz	x0, 2f4 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x1c>
 2ec:	ldp	x19, x30, [sp], #48
 2f0:	ret
 2f4:	adrp	x19, 0 <_ZN11__sanitizer9IsDecimalEc>
 2f8:	add	x0, x19, #0x0
 2fc:	mov	w2, #0x1                   	// #1
 300:	ldxrb	w1, [x0]
 304:	stxrb	w3, w2, [x0]
 308:	cbnz	w3, 300 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x28>
 30c:	dmb	ish
 310:	tst	w1, #0xff
 314:	b.eq	31c <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x44>  // b.none
 318:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 31c:	add	x0, x19, #0x0
 320:	ldr	x1, [x0, #16]
 324:	cbnz	x1, 34c <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x74>
 328:	add	x0, x19, #0x0
 32c:	ldp	x2, x3, [sp, #24]
 330:	ldr	x1, [sp, #40]
 334:	stp	x2, x3, [x0, #8]
 338:	str	x1, [x0, #24]
 33c:	dmb	ish
 340:	strb	wzr, [x19]
 344:	ldp	x19, x30, [sp], #48
 348:	ret
 34c:	ldr	x0, [x0, #8]
 350:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 354:	b	328 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv+0x50>

0000000000000358 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv>:
 358:	stp	x19, x20, [sp, #-32]!
 35c:	mov	x19, x0
 360:	adrp	x20, 0 <_ZN11__sanitizer9IsDecimalEc>
 364:	add	x0, x20, #0x0
 368:	mov	w2, #0x1                   	// #1
 36c:	str	x30, [sp, #16]
 370:	ldxrb	w1, [x0]
 374:	stxrb	w3, w2, [x0]
 378:	cbnz	w3, 370 <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x18>
 37c:	dmb	ish
 380:	tst	w1, #0xff
 384:	b.eq	38c <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x34>  // b.none
 388:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 38c:	add	x0, x20, #0x0
 390:	add	x2, x0, #0x8
 394:	ldr	x1, [x0, #8]
 398:	cbz	x1, 3ac <_ZN11__sanitizer19MemoryMappingLayout13LoadFromCacheEv+0x54>
 39c:	ldp	x0, x1, [x0, #8]
 3a0:	stp	x0, x1, [x19]
 3a4:	ldr	x0, [x2, #16]
 3a8:	str	x0, [x19, #16]
 3ac:	dmb	ish
 3b0:	strb	wzr, [x20]
 3b4:	ldr	x30, [sp, #16]
 3b8:	ldp	x19, x20, [sp], #32
 3bc:	ret

00000000000003c0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE>:
 3c0:	stp	x19, x20, [sp, #-272]!
 3c4:	mov	x19, x1
 3c8:	stp	x21, x22, [sp, #16]
 3cc:	mov	x21, x0
 3d0:	adrp	x0, 0 <_ZN11__sanitizer14PageSizeCachedE>
 3d4:	stp	x23, x24, [sp, #32]
 3d8:	ldr	x20, [x0]
 3dc:	stp	x25, x26, [sp, #48]
 3e0:	stp	x27, x28, [sp, #64]
 3e4:	ldr	x0, [x21]
 3e8:	str	x30, [sp, #80]
 3ec:	str	x0, [x21, #24]
 3f0:	ldr	x0, [x20]
 3f4:	cbz	x0, 58c <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x1cc>
 3f8:	sub	x20, x0, #0x1
 3fc:	ands	x20, x20, x0
 400:	b.ne	6f0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x330>  // b.any
 404:	add	x24, x0, #0xfff
 408:	neg	x0, x0
 40c:	and	x24, x24, x0
 410:	mov	w2, #0x0                   	// #0
 414:	mov	x0, x24
 418:	adrp	x1, 0 <_ZN11__sanitizer9IsDecimalEc>
 41c:	add	x1, x1, #0x0
 420:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 424:	mov	x2, #0x0                   	// #0
 428:	mov	x1, #0x0                   	// #0
 42c:	mov	x23, x0
 430:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 434:	mov	x1, #0x0                   	// #0
 438:	mov	x0, #0x0                   	// #0
 43c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 440:	cmp	x24, #0xfff
 444:	b.ls	654 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x294>  // b.plast
 448:	mov	x2, #0x1000                	// #4096
 44c:	mov	w1, #0x0                   	// #0
 450:	mov	x0, x23
 454:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 458:	strb	wzr, [x23]
 45c:	mov	x0, #0x1000                	// #4096
 460:	add	x22, sp, #0x70
 464:	add	x25, sp, #0xc0
 468:	mov	x1, x25
 46c:	add	x27, x22, #0x1c
 470:	stp	x23, x0, [sp, #216]
 474:	mov	x0, x21
 478:	str	xzr, [sp, #264]
 47c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 480:	tst	w0, #0xff
 484:	b.eq	564 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x1a4>  // b.none
 488:	ldr	x28, [sp, #216]
 48c:	ldrb	w0, [x28]
 490:	cbz	w0, 54c <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x18c>
 494:	ldr	x3, [sp, #192]
 498:	cmp	x20, #0x0
 49c:	ldr	x0, [sp, #208]
 4a0:	csel	x3, x3, xzr, ne  // ne = any
 4a4:	mov	x2, #0x10                  	// #16
 4a8:	mov	w1, #0x0                   	// #0
 4ac:	sub	x26, x3, x0
 4b0:	mov	x0, x27
 4b4:	str	xzr, [sp, #112]
 4b8:	stp	xzr, xzr, [sp, #120]
 4bc:	str	wzr, [sp, #136]
 4c0:	strb	wzr, [sp, #156]
 4c4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 4c8:	mov	x0, x22
 4cc:	mov	x2, x26
 4d0:	mov	x1, x28
 4d4:	str	xzr, [sp, #160]
 4d8:	stp	xzr, xzr, [sp, #168]
 4dc:	bl	0 <_ZN11__sanitizer12LoadedModule3setEPKcm>
 4e0:	ldr	x0, [sp, #264]
 4e4:	cbnz	x0, 6b8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x2f8>
 4e8:	ldp	x1, x2, [sp, #192]
 4ec:	mov	x0, x22
 4f0:	ldr	x3, [sp, #232]
 4f4:	mov	x5, #0x0                   	// #0
 4f8:	ubfx	w4, w3, #1, #1
 4fc:	ubfx	w3, w3, #2, #1
 500:	bl	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 504:	ldp	x4, x3, [x19, #8]
 508:	mov	x0, #0xe38f                	// #58255
 50c:	movk	x0, #0x8e38, lsl #16
 510:	movk	x0, #0x38e3, lsl #32
 514:	movk	x0, #0xe38e, lsl #48
 518:	umulh	x4, x4, x0
 51c:	lsr	x4, x4, #6
 520:	cmp	x3, x4
 524:	b.hi	6d8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x318>  // b.pmore
 528:	add	x1, x3, #0x1
 52c:	b.eq	598 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x1d8>  // b.none
 530:	ldr	x5, [x19]
 534:	add	x3, x3, x3, lsl #3
 538:	str	x1, [x19, #16]
 53c:	mov	x2, #0x48                  	// #72
 540:	add	x0, x5, x3, lsl #3
 544:	mov	x1, x22
 548:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 54c:	mov	x1, x25
 550:	mov	x0, x21
 554:	add	x20, x20, #0x1
 558:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 55c:	tst	w0, #0xff
 560:	b.ne	488 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0xc8>  // b.any
 564:	mov	x1, x24
 568:	mov	x0, x23
 56c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 570:	ldp	x21, x22, [sp, #16]
 574:	ldp	x23, x24, [sp, #32]
 578:	ldp	x25, x26, [sp, #48]
 57c:	ldp	x27, x28, [sp, #64]
 580:	ldr	x30, [sp, #80]
 584:	ldp	x19, x20, [sp], #272
 588:	ret
 58c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 590:	str	x0, [x20]
 594:	b	3f8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x38>
 598:	tst	x3, x1
 59c:	b.eq	5d8 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x218>  // b.none
 5a0:	clz	x2, x1
 5a4:	mov	w0, #0x3f                  	// #63
 5a8:	sub	w0, w0, w2
 5ac:	mov	x2, #0x1                   	// #1
 5b0:	add	w4, w0, #0x1
 5b4:	lsl	x4, x2, x4
 5b8:	cmp	x4, x1
 5bc:	b.ls	738 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x378>  // b.plast
 5c0:	lsl	x0, x2, x0
 5c4:	cmp	x0, x1
 5c8:	b.cs	754 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x394>  // b.hs, b.nlast
 5cc:	cmp	x3, x4
 5d0:	b.hi	720 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x360>  // b.pmore
 5d4:	mov	x1, x4
 5d8:	adrp	x0, 0 <_ZN11__sanitizer14PageSizeCachedE>
 5dc:	add	x1, x1, x1, lsl #3
 5e0:	ldr	x2, [x0]
 5e4:	lsl	x1, x1, #3
 5e8:	ldr	x0, [x2]
 5ec:	cbz	x0, 700 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x340>
 5f0:	sub	x4, x0, #0x1
 5f4:	tst	x0, x4
 5f8:	b.ne	6f0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x330>  // b.any
 5fc:	add	x1, x1, x4
 600:	neg	x0, x0
 604:	and	x4, x1, x0
 608:	mov	w2, #0x0                   	// #0
 60c:	mov	x0, x4
 610:	adrp	x1, 0 <_ZN11__sanitizer9IsDecimalEc>
 614:	add	x1, x1, #0x0
 618:	str	x4, [sp, #104]
 61c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 620:	str	x0, [sp, #96]
 624:	ldr	x2, [x19, #16]
 628:	ldr	x1, [x19]
 62c:	add	x2, x2, x2, lsl #3
 630:	lsl	x2, x2, #3
 634:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 638:	ldp	x0, x1, [x19]
 63c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 640:	ldr	x3, [x19, #16]
 644:	ldp	x5, x4, [sp, #96]
 648:	add	x1, x3, #0x1
 64c:	stp	x5, x4, [x19]
 650:	b	534 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x174>
 654:	adrp	x0, 0 <_ZN11__sanitizer14PageSizeCachedE>
 658:	ldr	x22, [x0]
 65c:	ldr	x0, [x22]
 660:	cbz	x0, 714 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x354>
 664:	sub	x1, x0, #0x1
 668:	tst	x1, x0
 66c:	b.ne	6f0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x330>  // b.any
 670:	add	x22, x0, #0xfff
 674:	neg	x0, x0
 678:	and	x22, x22, x0
 67c:	mov	w2, #0x0                   	// #0
 680:	mov	x0, x22
 684:	adrp	x1, 0 <_ZN11__sanitizer9IsDecimalEc>
 688:	add	x1, x1, #0x0
 68c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 690:	mov	x2, #0x0                   	// #0
 694:	mov	x25, x0
 698:	mov	x1, x23
 69c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 6a0:	mov	x1, x24
 6a4:	mov	x0, x23
 6a8:	mov	x24, x22
 6ac:	mov	x23, x25
 6b0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 6b4:	b	448 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x88>
 6b8:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 6bc:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 6c0:	add	x2, x2, #0x0
 6c4:	add	x0, x0, #0x0
 6c8:	mov	x4, #0x0                   	// #0
 6cc:	mov	x3, #0x0                   	// #0
 6d0:	mov	w1, #0x44                  	// #68
 6d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 6d8:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 6dc:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 6e0:	add	x2, x2, #0x0
 6e4:	add	x0, x0, #0x0
 6e8:	mov	w1, #0x1cd                 	// #461
 6ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 6f0:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 6f4:	add	x0, x0, #0x0
 6f8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 6fc:	bl	0 <_ZN11__sanitizer3DieEv>
 700:	stp	x1, x2, [sp, #96]
 704:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 708:	ldp	x1, x2, [sp, #96]
 70c:	str	x0, [x2]
 710:	b	5f0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x230>
 714:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 718:	str	x0, [x22]
 71c:	b	664 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE+0x2a4>
 720:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 724:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 728:	add	x2, x2, #0x0
 72c:	add	x0, x0, #0x0
 730:	mov	w1, #0x20c                 	// #524
 734:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 738:	mov	x3, x1
 73c:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 740:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 744:	add	x2, x2, #0x0
 748:	add	x0, x0, #0x0
 74c:	mov	w1, #0x18a                 	// #394
 750:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 754:	mov	x4, x0
 758:	mov	x3, x1
 75c:	adrp	x2, 0 <_ZN11__sanitizer9IsDecimalEc>
 760:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 764:	add	x2, x2, #0x0
 768:	add	x0, x0, #0x0
 76c:	mov	w1, #0x18b                 	// #395
 770:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 774:	nop

0000000000000778 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m>:
 778:	stp	x19, x20, [sp, #-112]!
 77c:	mov	x5, #0x0                   	// #0
 780:	mov	x4, #0x4000000             	// #67108864
 784:	add	x3, sp, #0x68
 788:	stp	x21, x22, [sp, #16]
 78c:	mov	x21, x0
 790:	mov	x22, x1
 794:	adrp	x0, 0 <_ZN11__sanitizer9IsDecimalEc>
 798:	add	x1, sp, #0x58
 79c:	add	x0, x0, #0x0
 7a0:	stp	x23, x24, [sp, #32]
 7a4:	mov	x23, x2
 7a8:	add	x2, sp, #0x60
 7ac:	str	x30, [sp, #64]
 7b0:	stp	xzr, xzr, [sp, #88]
 7b4:	str	xzr, [sp, #104]
 7b8:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 7bc:	tst	w0, #0xff
 7c0:	b.eq	8c4 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x14c>  // b.none
 7c4:	ldr	x20, [sp, #88]
 7c8:	ldr	x6, [sp, #104]
 7cc:	add	x0, x20, x6
 7d0:	cmp	x20, x0
 7d4:	b.cs	998 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x220>  // b.hs, b.nlast
 7d8:	adrp	x24, 0 <_ZN11__sanitizer9IsDecimalEc>
 7dc:	mov	x0, x20
 7e0:	add	x24, x24, #0x0
 7e4:	stp	x25, x26, [sp, #48]
 7e8:	mov	w26, #0x0                   	// #0
 7ec:	mov	x25, #0x0                   	// #0
 7f0:	ldrb	w1, [x20]
 7f4:	sub	w3, w1, #0x30
 7f8:	and	w2, w3, #0xff
 7fc:	cmp	w2, #0x9
 800:	b.ls	818 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xa0>  // b.plast
 804:	and	w2, w1, #0xffffffdf
 808:	sub	w2, w2, #0x41
 80c:	and	w2, w2, #0xff
 810:	cmp	w2, #0x5
 814:	b.hi	8d8 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x160>  // b.pmore
 818:	mov	x25, #0x0                   	// #0
 81c:	b	834 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xbc>
 820:	sub	w3, w1, #0x37
 824:	ldrb	w1, [x20, #1]!
 828:	sxtw	x3, w3
 82c:	add	x25, x3, x25, lsl #4
 830:	sub	w3, w1, #0x30
 834:	sub	w2, w1, #0x61
 838:	sub	w4, w1, #0x41
 83c:	and	w5, w3, #0xff
 840:	and	w2, w2, #0xff
 844:	and	w4, w4, #0xff
 848:	cmp	w5, #0x9
 84c:	b.ls	824 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xac>  // b.plast
 850:	sub	w3, w1, #0x57
 854:	cmp	w2, #0x5
 858:	b.ls	824 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xac>  // b.plast
 85c:	cmp	w4, #0x5
 860:	b.ls	820 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0xa8>  // b.plast
 864:	cmp	w1, #0x2f
 868:	cset	w26, eq  // eq = none
 86c:	cmp	w26, #0x0
 870:	ccmp	w1, #0xa, #0x0, eq  // eq = none
 874:	b.ls	890 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x118>  // b.plast
 878:	ldrb	w1, [x20, #1]!
 87c:	cmp	w1, #0x2f
 880:	cset	w26, eq  // eq = none
 884:	cmp	w26, #0x0
 888:	ccmp	w1, #0xa, #0x0, eq  // eq = none
 88c:	b.hi	878 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x100>  // b.pmore
 890:	add	x19, x20, #0x1
 894:	nop
 898:	ldurb	w3, [x19, #-1]
 89c:	mov	x20, x19
 8a0:	add	x19, x19, #0x1
 8a4:	cmp	w3, #0xa
 8a8:	b.ne	898 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x120>  // b.any
 8ac:	add	x1, x0, x6
 8b0:	cmp	x20, x1
 8b4:	b.cc	7f0 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x78>  // b.lo, b.ul, b.last
 8b8:	ldp	x25, x26, [sp, #48]
 8bc:	ldr	x1, [sp, #96]
 8c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8c4:	ldp	x21, x22, [sp, #16]
 8c8:	ldp	x23, x24, [sp, #32]
 8cc:	ldr	x30, [sp, #64]
 8d0:	ldp	x19, x20, [sp], #112
 8d4:	ret
 8d8:	mov	x1, x24
 8dc:	mov	x0, x20
 8e0:	mov	x2, #0x4                   	// #4
 8e4:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 8e8:	cbz	w0, 900 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x188>
 8ec:	add	x19, x20, #0x1
 8f0:	ldr	x0, [sp, #88]
 8f4:	ldr	x6, [sp, #104]
 8f8:	b	898 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x120>
 8fc:	add	x20, x20, #0x1
 900:	ldrb	w0, [x20]
 904:	sub	w0, w0, #0x30
 908:	and	w0, w0, #0xff
 90c:	cmp	w0, #0x9
 910:	b.hi	8fc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x184>  // b.pmore
 914:	mov	x19, x20
 918:	ldrb	w2, [x19], #1
 91c:	sub	w0, w2, #0x30
 920:	and	w1, w0, #0xff
 924:	cmp	w1, #0x9
 928:	mov	x1, #0x0                   	// #0
 92c:	b.ls	954 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1dc>  // b.plast
 930:	mov	x0, x25
 934:	lsl	x1, x1, #10
 938:	mov	x4, x23
 93c:	mov	x3, x22
 940:	mov	w2, w26
 944:	blr	x21
 948:	ldr	x0, [sp, #88]
 94c:	ldr	x6, [sp, #104]
 950:	b	898 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x120>
 954:	ldrb	w2, [x19], #1
 958:	sxtw	x3, w0
 95c:	add	x1, x1, x1, lsl #2
 960:	sub	w0, w2, #0x30
 964:	and	w2, w0, #0xff
 968:	add	x1, x3, x1, lsl #1
 96c:	cmp	w2, #0x9
 970:	b.hi	930 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1b8>  // b.pmore
 974:	ldrb	w2, [x19], #1
 978:	sxtw	x3, w0
 97c:	add	x1, x1, x1, lsl #2
 980:	sub	w0, w2, #0x30
 984:	and	w2, w0, #0xff
 988:	add	x1, x3, x1, lsl #1
 98c:	cmp	w2, #0x9
 990:	b.hi	930 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1b8>  // b.pmore
 994:	b	954 <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x1dc>
 998:	mov	x0, x20
 99c:	b	8bc <_ZN11__sanitizer16GetMemoryProfileEPFvmmbPmmES0_m+0x144>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

sanitizer_procmaps_bsd.cpp.o:     file format elf64-littleaarch64


sanitizer_procmaps_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	adrp	x1, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
   8:	mov	x19, x0
   c:	add	x3, x19, #0x10
  10:	add	x0, x1, #0x0
  14:	add	x2, x19, #0x8
  18:	mov	x1, x19
  1c:	mov	x5, #0x0                   	// #0
  20:	mov	x4, #0x4000000             	// #67108864
  24:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
  28:	tst	w0, #0xff
  2c:	b.ne	38 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE+0x38>  // b.any
  30:	str	xzr, [x19]
  34:	stp	xzr, xzr, [x19, #8]
  38:	ldp	x19, x30, [sp], #16
  3c:	ret

0000000000000040 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>:
  40:	stp	x19, x20, [sp, #-64]!
  44:	mov	x19, x0
  48:	stp	x21, x22, [sp, #16]
  4c:	mov	x22, x1
  50:	str	x30, [sp, #56]
  54:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
  58:	ands	w21, w0, #0xff
  5c:	b.ne	2e4 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2a4>  // b.any
  60:	ldp	x1, x0, [x19, #16]
  64:	ldr	x20, [x19]
  68:	add	x20, x20, x1
  6c:	cmp	x0, x20
  70:	b.cc	88 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x48>  // b.lo, b.ul, b.last
  74:	mov	w0, w21
  78:	ldp	x21, x22, [sp, #16]
  7c:	ldr	x30, [sp, #56]
  80:	ldp	x19, x20, [sp], #64
  84:	ret
  88:	sub	x2, x20, x0
  8c:	mov	w1, #0xa                   	// #10
  90:	stp	x23, x24, [sp, #32]
  94:	add	x24, x19, #0x18
  98:	str	x25, [sp, #48]
  9c:	bl	0 <_ZN11__sanitizer15internal_memchrEPKvim>
  a0:	mov	x23, x0
  a4:	mov	x0, x24
  a8:	cmp	x23, #0x0
  ac:	csel	x23, x23, x20, ne  // ne = any
  b0:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
  b4:	ldr	x1, [x19, #24]
  b8:	str	x0, [x22]
  bc:	add	x0, x1, #0x1
  c0:	str	x0, [x19, #24]
  c4:	ldrb	w20, [x1]
  c8:	cmp	x20, #0x2d
  cc:	b.ne	324 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2e4>  // b.any
  d0:	mov	x0, x24
  d4:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
  d8:	ldr	x2, [x19, #24]
  dc:	str	x0, [x22, #8]
  e0:	add	x0, x2, #0x1
  e4:	str	x0, [x19, #24]
  e8:	ldrb	w3, [x2]
  ec:	cmp	x3, #0x20
  f0:	b.ne	344 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x304>  // b.any
  f4:	ldrb	w0, [x2, #1]
  f8:	cmp	w0, #0x72
  fc:	ccmp	w0, w20, #0x4, ne  // ne = any
 100:	b.ne	360 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x320>  // b.any
 104:	str	xzr, [x22, #40]
 108:	add	x0, x2, #0x2
 10c:	str	x0, [x19, #24]
 110:	ldrb	w0, [x2, #1]
 114:	cmp	w0, #0x72
 118:	b.eq	2fc <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x2bc>  // b.none
 11c:	mov	x9, #0xe                   	// #14
 120:	mov	x8, #0xa                   	// #10
 124:	mov	x7, #0x6                   	// #6
 128:	mov	x5, #0xc                   	// #12
 12c:	mov	x3, #0x8                   	// #8
 130:	mov	x4, #0x4                   	// #4
 134:	mov	x6, #0x2                   	// #2
 138:	ldrb	w0, [x2, #2]
 13c:	mov	w1, #0x2d                  	// #45
 140:	cmp	w0, #0x77
 144:	ccmp	w0, w1, #0x4, ne  // ne = any
 148:	b.ne	380 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x340>  // b.any
 14c:	add	x0, x2, #0x3
 150:	str	x0, [x19, #24]
 154:	ldrb	w0, [x2, #2]
 158:	cmp	w0, #0x77
 15c:	b.ne	170 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x130>  // b.any
 160:	mov	x5, x9
 164:	mov	x3, x8
 168:	mov	x4, x7
 16c:	str	x6, [x22, #40]
 170:	ldrb	w0, [x2, #3]
 174:	mov	w1, #0x78                  	// #120
 178:	cmp	w0, #0x2d
 17c:	ccmp	w0, w1, #0x4, ne  // ne = any
 180:	b.ne	3a0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x360>  // b.any
 184:	add	x0, x2, #0x4
 188:	str	x0, [x19, #24]
 18c:	ldrb	w0, [x2, #3]
 190:	cmp	w0, #0x78
 194:	b.ne	1a0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x160>  // b.any
 198:	mov	x3, x5
 19c:	str	x4, [x22, #40]
 1a0:	ldrb	w1, [x2, #4]
 1a4:	cmp	w1, #0x73
 1a8:	cset	w0, eq  // eq = none
 1ac:	cmp	w1, #0x70
 1b0:	csinc	w21, w0, wzr, ne  // ne = any
 1b4:	cbz	w21, 3c0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x380>
 1b8:	add	x0, x2, #0x5
 1bc:	str	x0, [x19, #24]
 1c0:	ldrb	w0, [x2, #4]
 1c4:	cmp	w0, #0x73
 1c8:	b.ne	1d0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x190>  // b.any
 1cc:	str	x3, [x22, #40]
 1d0:	add	x0, x2, #0x6
 1d4:	str	x0, [x19, #24]
 1d8:	ldrb	w20, [x2, #5]
 1dc:	cmp	x20, #0x20
 1e0:	b.ne	3e0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x3a0>  // b.any
 1e4:	mov	x0, x24
 1e8:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 1ec:	str	x0, [x22, #16]
 1f0:	ldr	x0, [x19, #24]
 1f4:	add	x1, x0, #0x1
 1f8:	str	x1, [x19, #24]
 1fc:	ldrb	w25, [x0]
 200:	cmp	x25, #0x20
 204:	b.ne	400 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x3c0>  // b.any
 208:	mov	x0, x24
 20c:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 210:	ldr	x0, [x19, #24]
 214:	add	x1, x0, #0x1
 218:	str	x1, [x19, #24]
 21c:	ldrb	w3, [x0]
 220:	cmp	x3, #0x3a
 224:	b.ne	420 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x3e0>  // b.any
 228:	mov	x0, x24
 22c:	bl	0 <_ZN11__sanitizer8ParseHexEPPKc>
 230:	ldr	x0, [x19, #24]
 234:	add	x2, x0, #0x1
 238:	str	x2, [x19, #24]
 23c:	ldrb	w3, [x0]
 240:	cmp	x3, #0x20
 244:	b.eq	258 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x218>  // b.none
 248:	b	43c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x3fc>
 24c:	ldr	x2, [x19, #24]
 250:	add	x2, x2, #0x1
 254:	str	x2, [x19, #24]
 258:	ldrb	w0, [x2]
 25c:	bl	0 <_ZN11__sanitizer9IsDecimalEc>
 260:	tst	w0, #0xff
 264:	b.ne	24c <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x20c>  // b.any
 268:	ldr	x1, [x19, #24]
 26c:	cmp	x1, x23
 270:	b.cc	288 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x248>  // b.lo, b.ul, b.last
 274:	b	294 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x254>
 278:	add	x1, x1, #0x1
 27c:	str	x1, [x19, #24]
 280:	cmp	x1, x23
 284:	b.eq	294 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x254>  // b.none
 288:	ldrb	w0, [x1]
 28c:	cmp	w0, #0x20
 290:	b.eq	278 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x238>  // b.none
 294:	ldr	x0, [x22, #24]
 298:	cbz	x0, 2c0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0x280>
 29c:	ldr	x20, [x22, #32]
 2a0:	sub	x3, x23, x1
 2a4:	sub	x20, x20, #0x1
 2a8:	cmp	x20, x3
 2ac:	csel	x20, x20, x3, ls  // ls = plast
 2b0:	mov	x2, x20
 2b4:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 2b8:	ldr	x0, [x22, #24]
 2bc:	strb	wzr, [x0, x20]
 2c0:	add	x0, x23, #0x1
 2c4:	ldp	x23, x24, [sp, #32]
 2c8:	ldr	x25, [sp, #48]
 2cc:	str	x0, [x19, #24]
 2d0:	mov	w0, w21
 2d4:	ldp	x21, x22, [sp, #16]
 2d8:	ldr	x30, [sp, #56]
 2dc:	ldp	x19, x20, [sp], #64
 2e0:	ret
 2e4:	mov	w21, #0x0                   	// #0
 2e8:	mov	w0, w21
 2ec:	ldp	x21, x22, [sp, #16]
 2f0:	ldr	x30, [sp, #56]
 2f4:	ldp	x19, x20, [sp], #64
 2f8:	ret
 2fc:	mov	x0, #0x1                   	// #1
 300:	mov	x9, #0xf                   	// #15
 304:	mov	x8, #0xb                   	// #11
 308:	mov	x7, #0x7                   	// #7
 30c:	mov	x5, #0xd                   	// #13
 310:	mov	x3, #0x9                   	// #9
 314:	mov	x4, #0x5                   	// #5
 318:	mov	x6, #0x3                   	// #3
 31c:	str	x0, [x22, #40]
 320:	b	138 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE+0xf8>
 324:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 328:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 32c:	mov	x3, x20
 330:	add	x2, x2, #0x0
 334:	add	x0, x0, #0x0
 338:	mov	x4, #0x2d                  	// #45
 33c:	mov	w1, #0x2a                  	// #42
 340:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 344:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 348:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 34c:	add	x2, x2, #0x0
 350:	add	x0, x0, #0x0
 354:	mov	x4, #0x20                  	// #32
 358:	mov	w1, #0x2c                  	// #44
 35c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 360:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 364:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 368:	mov	w1, w20
 36c:	add	x2, x2, #0x0
 370:	add	x0, x0, #0x0
 374:	mov	x4, #0x0                   	// #0
 378:	mov	x3, #0x0                   	// #0
 37c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 380:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 384:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 388:	add	x2, x2, #0x0
 38c:	add	x0, x0, #0x0
 390:	mov	x4, #0x0                   	// #0
 394:	mov	x3, #0x0                   	// #0
 398:	mov	w1, #0x30                  	// #48
 39c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3a0:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3a4:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3a8:	add	x2, x2, #0x0
 3ac:	add	x0, x0, #0x0
 3b0:	mov	x4, #0x0                   	// #0
 3b4:	mov	x3, #0x0                   	// #0
 3b8:	mov	w1, #0x32                  	// #50
 3bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3c0:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3c4:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3c8:	add	x2, x2, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	x4, #0x0                   	// #0
 3d4:	mov	x3, #0x0                   	// #0
 3d8:	mov	w1, #0x34                  	// #52
 3dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e0:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3e4:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 3e8:	mov	x3, x20
 3ec:	add	x2, x2, #0x0
 3f0:	add	x0, x0, #0x0
 3f4:	mov	x4, #0x20                  	// #32
 3f8:	mov	w1, #0x36                  	// #54
 3fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 400:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 404:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 408:	mov	x4, x20
 40c:	mov	x3, x25
 410:	add	x2, x2, #0x0
 414:	add	x0, x0, #0x0
 418:	mov	w1, #0x38                  	// #56
 41c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 420:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 424:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 428:	mov	x4, #0x3a                  	// #58
 42c:	add	x2, x2, #0x0
 430:	add	x0, x0, #0x0
 434:	mov	w1, w4
 438:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 43c:	adrp	x2, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 440:	adrp	x0, 0 <_ZN11__sanitizer12ReadProcMapsEPNS_16ProcSelfMapsBuffE>
 444:	mov	x4, x25
 448:	add	x2, x2, #0x0
 44c:	add	x0, x0, #0x0
 450:	mov	w1, #0x3c                  	// #60
 454:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_procmaps_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_procmaps_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_rtems.cpp.o:     file format elf64-littleaarch64


sanitizer_solaris.cpp.o:     file format elf64-littleaarch64


sanitizer_stoptheworld_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_suppressions.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>:
   0:	cbz	x1, 328 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x328>
   4:	stp	x19, x20, [sp, #-112]!
   8:	mov	x20, x0
   c:	mov	x19, x1
  10:	stp	x21, x22, [sp, #16]
  14:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
  18:	add	x21, sp, #0x50
  1c:	ldr	x22, [x22]
  20:	stp	x23, x24, [sp, #32]
  24:	adrp	x23, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
  28:	add	x23, x23, #0x0
  2c:	stp	x25, x26, [sp, #48]
  30:	stp	x27, x30, [sp, #64]
  34:	nop
  38:	ldrb	w0, [x19]
  3c:	cmp	w0, #0x20
  40:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  44:	b.ne	58 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x58>  // b.any
  48:	ldrb	w0, [x19, #1]!
  4c:	cmp	w0, #0x20
  50:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  54:	b.eq	48 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x48>  // b.none
  58:	mov	x0, x19
  5c:	mov	w1, #0xa                   	// #10
  60:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
  64:	mov	x25, x0
  68:	cbz	x0, 1d8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x1d8>
  6c:	cmp	x25, x19
  70:	b.eq	80 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x80>  // b.none
  74:	ldrb	w6, [x19]
  78:	cmp	w6, #0x23
  7c:	b.ne	90 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x90>  // b.any
  80:	ldrb	w0, [x25]
  84:	cbz	w0, 1c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x1c0>
  88:	add	x19, x25, #0x1
  8c:	b	38 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x38>
  90:	mov	x24, x25
  94:	nop
  98:	ldurb	w1, [x24, #-1]
  9c:	cmp	w1, #0x20
  a0:	and	w1, w1, #0xfffffffb
  a4:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  a8:	b.ne	b8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0xb8>  // b.any
  ac:	sub	x24, x24, #0x1
  b0:	cmp	x24, x19
  b4:	b.ne	98 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x98>  // b.any
  b8:	ldr	w7, [x20, #8]
  bc:	cmp	w7, #0x0
  c0:	b.le	2c0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x2c0>
  c4:	ldr	x8, [x20]
  c8:	mov	x5, #0x0                   	// #0
  cc:	nop
  d0:	mov	w0, w5
  d4:	mov	w26, w5
  d8:	ldr	x2, [x8, x5, lsl #3]
  dc:	cbz	w6, 110 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x110>
  e0:	mov	w1, w6
  e4:	mov	x4, x19
  e8:	b	f8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0xf8>
  ec:	ldrb	w1, [x4, #1]!
  f0:	add	x2, x2, #0x1
  f4:	cbz	w1, 110 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x110>
  f8:	ldrb	w3, [x2]
  fc:	cmp	w3, w1
 100:	b.eq	ec <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0xec>  // b.none
 104:	cmp	w1, #0x3a
 108:	ccmp	w3, #0x0, #0x0, eq  // eq = none
 10c:	b.eq	1e8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x1e8>  // b.none
 110:	add	x5, x5, #0x1
 114:	add	w26, w0, #0x1
 118:	cmp	w7, w5
 11c:	b.gt	d0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0xd0>
 120:	cmp	w7, w26
 124:	b.eq	32c <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x32c>  // b.none
 128:	mov	x27, x20
 12c:	mov	x2, #0x20                  	// #32
 130:	mov	w1, #0x0                   	// #0
 134:	mov	x0, x21
 138:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 13c:	sxtw	x26, w26
 140:	ldr	x3, [x27], #16
 144:	sub	x24, x24, x19
 148:	mov	x2, #0x0                   	// #0
 14c:	mov	x1, #0x0                   	// #0
 150:	add	x0, x24, #0x1
 154:	ldr	x3, [x3, x26, lsl #3]
 158:	str	x3, [sp, #80]
 15c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 160:	str	x0, [sp, #88]
 164:	mov	x1, x19
 168:	mov	x2, x24
 16c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 170:	ldr	x0, [sp, #88]
 174:	strb	wzr, [x0, x24]
 178:	ldr	x4, [x20, #24]
 17c:	ldr	x0, [x27, #16]
 180:	lsr	x4, x4, #5
 184:	cmp	x0, x4
 188:	b.hi	298 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x298>  // b.pmore
 18c:	add	x3, x0, #0x1
 190:	b.eq	1f0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x1f0>  // b.none
 194:	ldr	x24, [x20, #16]
 198:	add	x26, x20, x26
 19c:	str	x3, [x27, #16]
 1a0:	add	x0, x24, x0, lsl #5
 1a4:	mov	x1, x21
 1a8:	mov	x2, #0x20                  	// #32
 1ac:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 1b0:	mov	w0, #0x1                   	// #1
 1b4:	strb	w0, [x26, #40]
 1b8:	ldrb	w0, [x25]
 1bc:	cbnz	w0, 88 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x88>
 1c0:	ldp	x21, x22, [sp, #16]
 1c4:	ldp	x23, x24, [sp, #32]
 1c8:	ldp	x25, x26, [sp, #48]
 1cc:	ldp	x27, x30, [sp, #64]
 1d0:	ldp	x19, x20, [sp], #112
 1d4:	ret
 1d8:	mov	x0, x19
 1dc:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 1e0:	add	x25, x19, x0
 1e4:	b	6c <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x6c>
 1e8:	add	x19, x4, #0x1
 1ec:	b	120 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x120>
 1f0:	tst	x3, x0
 1f4:	b.eq	230 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x230>  // b.none
 1f8:	clz	x2, x3
 1fc:	mov	w1, #0x3f                  	// #63
 200:	sub	w2, w1, w2
 204:	mov	x1, #0x1                   	// #1
 208:	add	w4, w2, #0x1
 20c:	lsl	x4, x1, x4
 210:	cmp	x3, x4
 214:	b.cs	2e4 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x2e4>  // b.hs, b.nlast
 218:	lsl	x1, x1, x2
 21c:	cmp	x3, x1
 220:	b.ls	2fc <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x2fc>  // b.plast
 224:	cmp	x0, x4
 228:	b.hi	2c8 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x2c8>  // b.pmore
 22c:	mov	x3, x4
 230:	ldr	x0, [x22]
 234:	lsl	x19, x3, #5
 238:	cbz	x0, 2b4 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x2b4>
 23c:	sub	x1, x0, #0x1
 240:	tst	x1, x0
 244:	b.ne	318 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x318>  // b.any
 248:	add	x19, x19, x1
 24c:	neg	x0, x0
 250:	and	x19, x19, x0
 254:	mov	x1, x23
 258:	mov	w2, #0x0                   	// #0
 25c:	mov	x0, x19
 260:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 264:	mov	x24, x0
 268:	ldr	x1, [x20, #16]
 26c:	ldr	x2, [x27, #16]
 270:	lsl	x2, x2, #5
 274:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 278:	ldr	x1, [x27, #8]
 27c:	ldr	x0, [x20, #16]
 280:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 284:	ldr	x0, [x27, #16]
 288:	str	x24, [x20, #16]
 28c:	str	x19, [x27, #8]
 290:	add	x3, x0, #0x1
 294:	b	198 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x198>
 298:	mov	x3, x0
 29c:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2a0:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2a4:	add	x2, x2, #0x0
 2a8:	add	x0, x0, #0x0
 2ac:	mov	w1, #0x1cd                 	// #461
 2b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2b4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 2b8:	str	x0, [x22]
 2bc:	b	23c <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x23c>
 2c0:	mov	w26, #0x0                   	// #0
 2c4:	b	120 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0+0x120>
 2c8:	mov	x3, x0
 2cc:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2d0:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2d4:	add	x2, x2, #0x0
 2d8:	add	x0, x0, #0x0
 2dc:	mov	w1, #0x20c                 	// #524
 2e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2e4:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2e8:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 2ec:	add	x2, x2, #0x0
 2f0:	add	x0, x0, #0x0
 2f4:	mov	w1, #0x18a                 	// #394
 2f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2fc:	mov	x4, x1
 300:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 304:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 308:	add	x2, x2, #0x0
 30c:	add	x0, x0, #0x0
 310:	mov	w1, #0x18b                 	// #395
 314:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 318:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 31c:	add	x0, x0, #0x0
 320:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 324:	bl	0 <_ZN11__sanitizer3DieEv>
 328:	ret
 32c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 330:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 334:	add	x0, x0, #0x0
 338:	ldr	x1, [x1]
 33c:	ldr	x1, [x1]
 340:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 344:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000348 <_ZN11__sanitizer18SuppressionContextC1EPPKci>:
 348:	sxtw	x2, w2
 34c:	mov	w3, #0x1                   	// #1
 350:	str	x1, [x0]
 354:	cmp	x2, #0x40
 358:	str	w2, [x0, #8]
 35c:	str	xzr, [x0, #16]
 360:	stp	xzr, xzr, [x0, #24]
 364:	strb	w3, [x0, #104]
 368:	b.hi	378 <_ZN11__sanitizer18SuppressionContextC1EPPKci+0x30>  // b.pmore
 36c:	add	x0, x0, #0x28
 370:	mov	w1, #0x0                   	// #0
 374:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
 378:	str	x30, [sp, #-16]!
 37c:	mov	x3, x2
 380:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 384:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 388:	add	x0, x0, #0x0
 38c:	add	x2, x2, #0x0
 390:	mov	x4, #0x40                  	// #64
 394:	mov	w1, #0x1d                  	// #29
 398:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 39c:	nop

00000000000003a0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc>:
 3a0:	stp	x19, x20, [sp, #-112]!
 3a4:	mov	x19, x1
 3a8:	str	x30, [sp, #64]
 3ac:	ldrb	w1, [x1]
 3b0:	cbnz	w1, 3c0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x20>
 3b4:	ldr	x30, [sp, #64]
 3b8:	ldp	x19, x20, [sp], #112
 3bc:	ret
 3c0:	stp	x21, x22, [sp, #16]
 3c4:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 3c8:	mov	x21, x0
 3cc:	ldr	x20, [x22]
 3d0:	stp	x23, x24, [sp, #32]
 3d4:	ldr	x2, [x20]
 3d8:	cbz	x2, 4d8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x138>
 3dc:	sub	x0, x2, #0x1
 3e0:	tst	x0, x2
 3e4:	b.ne	5f0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x250>  // b.any
 3e8:	add	x24, x2, #0xfff
 3ec:	neg	x2, x2
 3f0:	and	x24, x24, x2
 3f4:	adrp	x23, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 3f8:	mov	w2, #0x0                   	// #0
 3fc:	add	x1, x23, #0x0
 400:	mov	x0, x24
 404:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 408:	mov	x2, #0x0                   	// #0
 40c:	mov	x1, #0x0                   	// #0
 410:	mov	x20, x0
 414:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 418:	mov	x1, #0x0                   	// #0
 41c:	mov	x0, #0x0                   	// #0
 420:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 424:	cmp	x24, #0xfff
 428:	b.ls	58c <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1ec>  // b.plast
 42c:	mov	x2, #0x1000                	// #4096
 430:	mov	w1, #0x0                   	// #0
 434:	mov	x0, x20
 438:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 43c:	strb	wzr, [x20]
 440:	mov	x0, x19
 444:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
 448:	tst	w0, #0xff
 44c:	b.eq	4e8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x148>  // b.none
 450:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 454:	ldr	x0, [x0]
 458:	ldr	w0, [x0]
 45c:	cbnz	w0, 4b8 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x118>
 460:	add	x3, sp, #0x68
 464:	add	x2, sp, #0x60
 468:	add	x1, sp, #0x58
 46c:	mov	x0, x19
 470:	mov	x5, #0x0                   	// #0
 474:	mov	x4, #0x4000000             	// #67108864
 478:	bl	0 <_ZN11__sanitizer16ReadFileToBufferEPKcPPcPmS4_mPi>
 47c:	tst	w0, #0xff
 480:	b.eq	6ec <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x34c>  // b.none
 484:	ldrb	w0, [x21, #104]
 488:	ldr	x1, [sp, #88]
 48c:	cbz	w0, 604 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x264>
 490:	mov	x0, x21
 494:	bl	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 498:	mov	x1, x24
 49c:	mov	x0, x20
 4a0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 4a4:	ldp	x21, x22, [sp, #16]
 4a8:	ldp	x23, x24, [sp, #32]
 4ac:	ldr	x30, [sp, #64]
 4b0:	ldp	x19, x20, [sp], #112
 4b4:	ret
 4b8:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 4bc:	mov	x2, x19
 4c0:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 4c4:	add	x0, x0, #0x0
 4c8:	ldr	x1, [x1]
 4cc:	ldr	x1, [x1]
 4d0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 4d4:	b	460 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0xc0>
 4d8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 4dc:	mov	x2, x0
 4e0:	str	x0, [x20]
 4e4:	b	3dc <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x3c>
 4e8:	mov	x0, x19
 4ec:	bl	0 <_ZN11__sanitizer14IsAbsolutePathEPKc>
 4f0:	tst	w0, #0xff
 4f4:	b.ne	450 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0xb0>  // b.any
 4f8:	stp	x25, x26, [sp, #48]
 4fc:	ldr	x25, [x22]
 500:	ldr	x0, [x25]
 504:	cbz	x0, 634 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x294>
 508:	sub	x1, x0, #0x1
 50c:	tst	x1, x0
 510:	b.ne	5f4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x254>  // b.any
 514:	add	x26, x0, #0xfff
 518:	neg	x0, x0
 51c:	and	x26, x26, x0
 520:	add	x1, x23, #0x0
 524:	mov	w2, #0x0                   	// #0
 528:	mov	x0, x26
 52c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 530:	mov	x25, x0
 534:	mov	x2, #0x0                   	// #0
 538:	mov	x1, #0x0                   	// #0
 53c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 540:	mov	x1, #0x0                   	// #0
 544:	mov	x0, #0x0                   	// #0
 548:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 54c:	cmp	x26, #0xfff
 550:	b.ls	684 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x2e4>  // b.plast
 554:	mov	w1, #0x0                   	// #0
 558:	mov	x0, x25
 55c:	mov	x2, #0x1000                	// #4096
 560:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 564:	strb	wzr, [x25]
 568:	mov	x0, x25
 56c:	mov	x1, #0x1000                	// #4096
 570:	bl	0 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>
 574:	cbnz	x0, 640 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x2a0>
 578:	mov	x1, x26
 57c:	mov	x0, x25
 580:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 584:	ldp	x25, x26, [sp, #48]
 588:	b	450 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0xb0>
 58c:	stp	x25, x26, [sp, #48]
 590:	ldr	x25, [x22]
 594:	ldr	x0, [x25]
 598:	cbz	x0, 628 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x288>
 59c:	sub	x1, x0, #0x1
 5a0:	tst	x1, x0
 5a4:	b.ne	5f4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x254>  // b.any
 5a8:	add	x25, x0, #0xfff
 5ac:	neg	x0, x0
 5b0:	and	x25, x25, x0
 5b4:	add	x1, x23, #0x0
 5b8:	mov	x0, x25
 5bc:	mov	w2, #0x0                   	// #0
 5c0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 5c4:	mov	x26, x0
 5c8:	mov	x2, #0x0                   	// #0
 5cc:	mov	x1, x20
 5d0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 5d4:	mov	x1, x24
 5d8:	mov	x0, x20
 5dc:	mov	x24, x25
 5e0:	mov	x20, x26
 5e4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 5e8:	ldp	x25, x26, [sp, #48]
 5ec:	b	42c <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x8c>
 5f0:	stp	x25, x26, [sp, #48]
 5f4:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 5f8:	add	x0, x0, #0x0
 5fc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 600:	bl	0 <_ZN11__sanitizer3DieEv>
 604:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 608:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 60c:	add	x2, x2, #0x0
 610:	add	x0, x0, #0x0
 614:	mov	x4, #0x0                   	// #0
 618:	mov	x3, #0x0                   	// #0
 61c:	mov	w1, #0x76                  	// #118
 620:	stp	x25, x26, [sp, #48]
 624:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 628:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 62c:	str	x0, [x25]
 630:	b	59c <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1fc>
 634:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 638:	str	x0, [x25]
 63c:	b	508 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x168>
 640:	mov	x0, x25
 644:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 648:	sub	x2, x0, x25
 64c:	mov	x22, #0xfff                 	// #4095
 650:	cmp	x2, x22
 654:	mov	x1, x25
 658:	csel	x2, x2, x22, ls  // ls = plast
 65c:	mov	x0, x20
 660:	bl	0 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 664:	mov	x0, x20
 668:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 66c:	mov	x1, x19
 670:	sub	x2, x22, x0
 674:	mov	x19, x20
 678:	mov	x0, x20
 67c:	bl	0 <_ZN11__sanitizer16internal_strncatEPcPKcm>
 680:	b	578 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1d8>
 684:	ldr	x22, [x22]
 688:	ldr	x0, [x22]
 68c:	cbz	x0, 6e0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x340>
 690:	sub	x1, x0, #0x1
 694:	tst	x1, x0
 698:	b.ne	5f4 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x254>  // b.any
 69c:	add	x22, x0, #0xfff
 6a0:	neg	x0, x0
 6a4:	and	x22, x22, x0
 6a8:	add	x1, x23, #0x0
 6ac:	mov	x0, x22
 6b0:	mov	w2, #0x0                   	// #0
 6b4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 6b8:	mov	x23, x0
 6bc:	mov	x2, #0x0                   	// #0
 6c0:	mov	x1, x25
 6c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 6c8:	mov	x1, x26
 6cc:	mov	x0, x25
 6d0:	mov	x26, x22
 6d4:	mov	x25, x23
 6d8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 6dc:	b	554 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x1b4>
 6e0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 6e4:	str	x0, [x22]
 6e8:	b	690 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc+0x2f0>
 6ec:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 6f0:	mov	x2, x19
 6f4:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 6f8:	add	x0, x0, #0x0
 6fc:	ldr	x1, [x1]
 700:	stp	x25, x26, [sp, #48]
 704:	ldr	x1, [x1]
 708:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 70c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000710 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>:
 710:	stp	x19, x20, [sp, #-64]!
 714:	mov	x20, x0
 718:	str	x30, [sp, #48]
 71c:	strb	wzr, [x0, #104]
 720:	ldr	w0, [x0, #8]
 724:	cmp	w0, #0x0
 728:	b.le	7ec <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xdc>
 72c:	mov	x19, #0x0                   	// #0
 730:	stp	x21, x22, [sp, #16]
 734:	mov	x22, x1
 738:	mov	x21, x2
 73c:	stp	x23, x24, [sp, #32]
 740:	mov	x23, x3
 744:	b	754 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x44>
 748:	ldr	w0, [x20, #8]
 74c:	cmp	w0, w19
 750:	b.le	7e4 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xd4>
 754:	ldr	x1, [x20]
 758:	mov	w24, w19
 75c:	mov	x0, x21
 760:	ldr	x1, [x1, x19, lsl #3]
 764:	add	x19, x19, #0x1
 768:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 76c:	cbnz	w0, 748 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x38>
 770:	add	x24, x20, w24, sxtw
 774:	ldrb	w0, [x24, #40]
 778:	cbz	w0, 7e4 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xd4>
 77c:	ldr	x0, [x20, #32]
 780:	cbz	x0, 7e4 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xd4>
 784:	mov	x19, #0x0                   	// #0
 788:	b	798 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x88>
 78c:	ldr	x0, [x20, #32]
 790:	cmp	x19, x0
 794:	b.cs	7e4 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0xd4>  // b.hs, b.nlast
 798:	ldr	x0, [x20, #16]
 79c:	lsl	x4, x19, #5
 7a0:	mov	x1, x21
 7a4:	add	x19, x19, #0x1
 7a8:	add	x24, x0, x4
 7ac:	ldr	x0, [x0, x4]
 7b0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 7b4:	cbnz	w0, 78c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x7c>
 7b8:	ldr	x0, [x24, #8]
 7bc:	mov	x1, x22
 7c0:	bl	0 <_ZN11__sanitizer13TemplateMatchEPKcS1_>
 7c4:	ands	w0, w0, #0xff
 7c8:	b.eq	78c <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE+0x7c>  // b.none
 7cc:	ldp	x21, x22, [sp, #16]
 7d0:	str	x24, [x23]
 7d4:	ldp	x23, x24, [sp, #32]
 7d8:	ldr	x30, [sp, #48]
 7dc:	ldp	x19, x20, [sp], #64
 7e0:	ret
 7e4:	ldp	x21, x22, [sp, #16]
 7e8:	ldp	x23, x24, [sp, #32]
 7ec:	mov	w0, #0x0                   	// #0
 7f0:	ldr	x30, [sp, #48]
 7f4:	ldp	x19, x20, [sp], #64
 7f8:	ret
 7fc:	nop

0000000000000800 <_ZN11__sanitizer18SuppressionContext5ParseEPKc>:
 800:	ldrb	w2, [x0, #104]
 804:	cbz	w2, 80c <_ZN11__sanitizer18SuppressionContext5ParseEPKc+0xc>
 808:	b	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 80c:	str	x30, [sp, #-16]!
 810:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 814:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 818:	add	x2, x2, #0x0
 81c:	add	x0, x0, #0x0
 820:	mov	x4, #0x0                   	// #0
 824:	mov	x3, #0x0                   	// #0
 828:	mov	w1, #0x76                  	// #118
 82c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000830 <_ZNK11__sanitizer18SuppressionContext16SuppressionCountEv>:
 830:	ldr	x0, [x0, #32]
 834:	ret

0000000000000838 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc>:
 838:	stp	x19, x20, [sp, #-48]!
 83c:	mov	x20, x0
 840:	ldr	w0, [x0, #8]
 844:	str	x30, [sp, #32]
 848:	cmp	w0, #0x0
 84c:	b.le	8a4 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x6c>
 850:	mov	x19, #0x0                   	// #0
 854:	stp	x21, x22, [sp, #16]
 858:	mov	x21, x1
 85c:	b	86c <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x34>
 860:	ldr	w0, [x20, #8]
 864:	cmp	w0, w19
 868:	b.le	8a0 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x68>
 86c:	ldr	x2, [x20]
 870:	mov	w22, w19
 874:	mov	x0, x21
 878:	ldr	x1, [x2, x19, lsl #3]
 87c:	add	x19, x19, #0x1
 880:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 884:	cbnz	w0, 860 <_ZNK11__sanitizer18SuppressionContext18HasSuppressionTypeEPKc+0x28>
 888:	add	x20, x20, w22, sxtw
 88c:	ldp	x21, x22, [sp, #16]
 890:	ldrb	w0, [x20, #40]
 894:	ldr	x30, [sp, #32]
 898:	ldp	x19, x20, [sp], #48
 89c:	ret
 8a0:	ldp	x21, x22, [sp, #16]
 8a4:	mov	w0, #0x0                   	// #0
 8a8:	ldr	x30, [sp, #32]
 8ac:	ldp	x19, x20, [sp], #48
 8b0:	ret
 8b4:	nop

00000000000008b8 <_ZNK11__sanitizer18SuppressionContext13SuppressionAtEm>:
 8b8:	ldr	x4, [x0, #32]
 8bc:	cmp	x1, x4
 8c0:	b.cs	8d0 <_ZNK11__sanitizer18SuppressionContext13SuppressionAtEm+0x18>  // b.hs, b.nlast
 8c4:	ldr	x0, [x0, #16]
 8c8:	add	x0, x0, x1, lsl #5
 8cc:	ret
 8d0:	str	x30, [sp, #-16]!
 8d4:	mov	x3, x1
 8d8:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 8dc:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 8e0:	add	x2, x2, #0x0
 8e4:	add	x0, x0, #0x0
 8e8:	mov	w1, #0xaa                  	// #170
 8ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000008f0 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE>:
 8f0:	stp	x19, x20, [sp, #-96]!
 8f4:	stp	x21, x22, [sp, #16]
 8f8:	mov	x21, x1
 8fc:	ldr	x1, [x0, #32]
 900:	str	x30, [sp, #64]
 904:	cbz	x1, 998 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0xa8>
 908:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 90c:	mov	x20, x0
 910:	mov	x19, #0x0                   	// #0
 914:	stp	x23, x24, [sp, #32]
 918:	adrp	x23, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 91c:	ldr	x22, [x22]
 920:	add	x23, x23, #0x0
 924:	stp	x25, x26, [sp, #48]
 928:	add	x26, sp, #0x58
 92c:	b	93c <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x4c>
 930:	add	x19, x19, #0x1
 934:	cmp	x19, x1
 938:	b.cs	990 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0xa0>  // b.hs, b.nlast
 93c:	ldr	x2, [x20, #16]
 940:	add	x2, x2, x19, lsl #5
 944:	ldr	w0, [x2, #16]
 948:	cbz	w0, 930 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x40>
 94c:	ldp	x4, x3, [x21, #8]
 950:	str	x2, [sp, #88]
 954:	lsr	x4, x4, #3
 958:	cmp	x3, x4
 95c:	b.hi	a54 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x164>  // b.pmore
 960:	add	x24, x3, #0x1
 964:	b.eq	9a8 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0xb8>  // b.none
 968:	ldr	x25, [x21]
 96c:	str	x24, [x21, #16]
 970:	mov	x1, x26
 974:	add	x0, x25, x3, lsl #3
 978:	mov	x2, #0x8                   	// #8
 97c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 980:	ldr	x1, [x20, #32]
 984:	add	x19, x19, #0x1
 988:	cmp	x19, x1
 98c:	b.cc	93c <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x4c>  // b.lo, b.ul, b.last
 990:	ldp	x23, x24, [sp, #32]
 994:	ldp	x25, x26, [sp, #48]
 998:	ldp	x21, x22, [sp, #16]
 99c:	ldr	x30, [sp, #64]
 9a0:	ldp	x19, x20, [sp], #96
 9a4:	ret
 9a8:	tst	x3, x24
 9ac:	b.eq	9e8 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0xf8>  // b.none
 9b0:	clz	x2, x24
 9b4:	mov	w0, #0x3f                  	// #63
 9b8:	sub	w0, w0, w2
 9bc:	mov	x2, #0x1                   	// #1
 9c0:	add	w4, w0, #0x1
 9c4:	lsl	x4, x2, x4
 9c8:	cmp	x4, x24
 9cc:	b.ls	a7c <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x18c>  // b.plast
 9d0:	lsl	x0, x2, x0
 9d4:	cmp	x0, x24
 9d8:	b.cs	ab0 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x1c0>  // b.hs, b.nlast
 9dc:	cmp	x3, x4
 9e0:	b.hi	a98 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x1a8>  // b.pmore
 9e4:	mov	x24, x4
 9e8:	ldr	x0, [x22]
 9ec:	lsl	x24, x24, #3
 9f0:	cbz	x0, a48 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x158>
 9f4:	sub	x1, x0, #0x1
 9f8:	tst	x1, x0
 9fc:	b.ne	a6c <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x17c>  // b.any
 a00:	add	x24, x24, x1
 a04:	neg	x0, x0
 a08:	and	x24, x24, x0
 a0c:	mov	x1, x23
 a10:	mov	x0, x24
 a14:	mov	w2, #0x0                   	// #0
 a18:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 a1c:	mov	x25, x0
 a20:	ldr	x1, [x21]
 a24:	ldr	x2, [x21, #16]
 a28:	lsl	x2, x2, #3
 a2c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 a30:	ldp	x0, x1, [x21]
 a34:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 a38:	stp	x25, x24, [x21]
 a3c:	ldr	x3, [x21, #16]
 a40:	add	x24, x3, #0x1
 a44:	b	96c <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x7c>
 a48:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 a4c:	str	x0, [x22]
 a50:	b	9f4 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE+0x104>
 a54:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a58:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a5c:	add	x2, x2, #0x0
 a60:	add	x0, x0, #0x0
 a64:	mov	w1, #0x1cd                 	// #461
 a68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 a6c:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a70:	add	x0, x0, #0x0
 a74:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 a78:	bl	0 <_ZN11__sanitizer3DieEv>
 a7c:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a80:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a84:	mov	x3, x24
 a88:	add	x2, x2, #0x0
 a8c:	add	x0, x0, #0x0
 a90:	mov	w1, #0x18a                 	// #394
 a94:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 a98:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 a9c:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 aa0:	add	x2, x2, #0x0
 aa4:	add	x0, x0, #0x0
 aa8:	mov	w1, #0x20c                 	// #524
 aac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 ab0:	mov	x4, x0
 ab4:	adrp	x2, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 ab8:	adrp	x0, 0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc.part.0>
 abc:	mov	x3, x24
 ac0:	add	x2, x2, #0x0
 ac4:	add	x0, x0, #0x0
 ac8:	mov	w1, #0x18b                 	// #395
 acc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_tls_get_addr.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer12DTLS_DestroyEv>:
   0:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
   4:	ldr	x0, [x0]
   8:	ldrb	w0, [x0, #121]
   c:	cbz	w0, e4 <_ZN11__sanitizer12DTLS_DestroyEv+0xe4>
  10:	stp	x19, x20, [sp, #-48]!
  14:	mrs	x19, tpidr_el0
  18:	adrp	x20, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  1c:	ldr	x20, [x20]
  20:	stp	x21, x22, [sp, #16]
  24:	adrp	x21, 0 <_ZN11__sanitizer17current_verbosityE>
  28:	add	x1, x19, x20
  2c:	ldr	x0, [x21]
  30:	ldr	x22, [x19, x20]
  34:	ldr	w0, [x0]
  38:	str	x30, [sp, #32]
  3c:	sxtw	x0, w0
  40:	cmp	x0, #0x1
  44:	b.hi	bc <_ZN11__sanitizer12DTLS_DestroyEv+0xbc>  // b.pmore
  48:	mov	x0, #0xffffffffffffffff    	// #-1
  4c:	str	x0, [x19, x20]
  50:	add	x19, x19, x20
  54:	cbz	x22, ac <_ZN11__sanitizer12DTLS_DestroyEv+0xac>
  58:	ldr	x21, [x21]
  5c:	ldr	x19, [x19, #8]
  60:	ldr	w0, [x21]
  64:	sxtw	x0, w0
  68:	cmp	x0, #0x1
  6c:	b.ls	84 <_ZN11__sanitizer12DTLS_DestroyEv+0x84>  // b.plast
  70:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  74:	mov	x2, x22
  78:	add	x0, x0, #0x0
  7c:	mov	x1, x19
  80:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  84:	mov	x0, x19
  88:	lsl	x1, x22, #4
  8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  90:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  94:	add	x0, x0, #0x0
  98:	ldxr	x1, [x0]
  9c:	sub	x1, x1, #0x1
  a0:	stlxr	w2, x1, [x0]
  a4:	cbnz	w2, 98 <_ZN11__sanitizer12DTLS_DestroyEv+0x98>
  a8:	dmb	ish
  ac:	ldp	x21, x22, [sp, #16]
  b0:	ldr	x30, [sp, #32]
  b4:	ldp	x19, x20, [sp], #48
  b8:	ret
  bc:	mov	x2, x22
  c0:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
  c4:	add	x0, x0, #0x0
  c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  cc:	ldr	x22, [x19, x20]
  d0:	mov	x0, #0xffffffffffffffff    	// #-1
  d4:	str	x0, [x19, x20]
  d8:	add	x19, x19, x20
  dc:	cbnz	x22, 58 <_ZN11__sanitizer12DTLS_DestroyEv+0x58>
  e0:	b	ac <_ZN11__sanitizer12DTLS_DestroyEv+0xac>
  e4:	ret

00000000000000e8 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm>:
  e8:	adrp	x5, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  ec:	stp	x19, x20, [sp, #-144]!
  f0:	mov	x20, x0
  f4:	ldr	x5, [x5]
  f8:	ldrb	w0, [x5, #121]
  fc:	str	x30, [sp, #80]
 100:	cbz	w0, 2ec <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x204>
 104:	adrp	x19, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 108:	ldr	x19, [x19]
 10c:	stp	x23, x24, [sp, #32]
 110:	mrs	x24, tpidr_el0
 114:	stp	x27, x28, [sp, #64]
 118:	mov	x28, x1
 11c:	add	x1, x24, x19
 120:	ldr	x5, [x24, x19]
 124:	cmn	x5, #0x1
 128:	b.eq	36c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x284>  // b.none
 12c:	stp	x21, x22, [sp, #16]
 130:	mov	x23, x3
 134:	mov	x22, x2
 138:	ldr	x21, [x20]
 13c:	stp	x25, x26, [sp, #48]
 140:	add	x3, x21, #0x1
 144:	cmp	x5, x3
 148:	b.cc	224 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x13c>  // b.lo, b.ul, b.last
 14c:	ldr	x26, [x1, #8]
 150:	lsl	x21, x21, #4
 154:	ldr	x26, [x26, x21]
 158:	cbnz	x26, 2dc <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1f4>
 15c:	adrp	x25, 0 <_ZN11__sanitizer17current_verbosityE>
 160:	ldr	x3, [x20, #8]
 164:	ldr	x0, [x25]
 168:	sub	x5, x28, x3
 16c:	str	x5, [sp, #136]
 170:	ldr	w0, [x0]
 174:	sxtw	x0, w0
 178:	cmp	x0, #0x1
 17c:	b.ls	1a8 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0xc0>  // b.plast
 180:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 184:	mov	x4, x28
 188:	ldr	x2, [x20]
 18c:	mov	x1, x20
 190:	ldr	x7, [x0]
 194:	add	x6, sp, #0x88
 198:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 19c:	add	x0, x0, #0x0
 1a0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1a4:	ldr	x5, [sp, #136]
 1a8:	add	x1, x24, x19
 1ac:	ldr	x0, [x1, #24]
 1b0:	cmp	x0, x5
 1b4:	b.eq	338 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x250>  // b.none
 1b8:	cmp	x23, x5
 1bc:	ccmp	x22, x5, #0x2, hi  // hi = pmore
 1c0:	b.ls	394 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2ac>  // b.plast
 1c4:	and	x0, x5, #0xfff
 1c8:	cmp	x0, #0x10
 1cc:	ldr	x0, [x25]
 1d0:	b.eq	304 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x21c>  // b.none
 1d4:	ldr	w0, [x0]
 1d8:	sxtw	x0, w0
 1dc:	cmp	x0, #0x1
 1e0:	b.ls	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>  // b.plast
 1e4:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 1e8:	add	x0, x0, #0x0
 1ec:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1f0:	ldr	x5, [sp, #136]
 1f4:	add	x19, x24, x19
 1f8:	ldp	x23, x24, [sp, #32]
 1fc:	ldr	x1, [x19, #8]
 200:	ldp	x27, x28, [sp, #64]
 204:	add	x0, x1, x21
 208:	str	x5, [x1, x21]
 20c:	ldp	x21, x22, [sp, #16]
 210:	str	x26, [x0, #8]
 214:	ldp	x25, x26, [sp, #48]
 218:	ldr	x30, [sp, #80]
 21c:	ldp	x19, x20, [sp], #144
 220:	ret
 224:	tst	x3, x21
 228:	b.eq	2fc <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x214>  // b.none
 22c:	clz	x1, x3
 230:	mov	w4, #0x3f                  	// #63
 234:	sub	w4, w4, w1
 238:	mov	x1, #0x1                   	// #1
 23c:	add	w27, w4, #0x1
 240:	lsl	x27, x1, x27
 244:	cmp	x3, x27
 248:	b.cs	478 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x390>  // b.hs, b.nlast
 24c:	lsl	x4, x1, x4
 250:	cmp	x3, x4
 254:	b.ls	494 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x3ac>  // b.plast
 258:	cmp	x27, #0x100
 25c:	mov	x4, #0x100                 	// #256
 260:	csel	x27, x27, x4, cs  // cs = hs, nlast
 264:	adrp	x1, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 268:	mov	w2, #0x0                   	// #0
 26c:	add	x1, x1, #0x0
 270:	lsl	x0, x27, #4
 274:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 278:	adrp	x4, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 27c:	mov	x26, x0
 280:	add	x0, x4, #0x0
 284:	ldxr	x2, [x0]
 288:	add	x1, x2, #0x1
 28c:	stlxr	w3, x1, [x0]
 290:	cbnz	w3, 284 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x19c>
 294:	adrp	x25, 0 <_ZN11__sanitizer17current_verbosityE>
 298:	dmb	ish
 29c:	ldr	x0, [x25]
 2a0:	ldr	w0, [x0]
 2a4:	sxtw	x0, w0
 2a8:	cmp	x0, #0x1
 2ac:	b.hi	378 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x290>  // b.pmore
 2b0:	mov	x0, #0xfffff               	// #1048575
 2b4:	cmp	x2, x0
 2b8:	b.hi	458 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x370>  // b.pmore
 2bc:	ldr	x3, [x24, x19]
 2c0:	add	x5, x24, x19
 2c4:	cbnz	x3, 3c0 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x2d8>
 2c8:	lsl	x21, x21, #4
 2cc:	str	x26, [x5, #8]
 2d0:	str	x27, [x24, x19]
 2d4:	ldr	x26, [x26, x21]
 2d8:	cbz	x26, 15c <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x74>
 2dc:	ldp	x21, x22, [sp, #16]
 2e0:	ldp	x23, x24, [sp, #32]
 2e4:	ldp	x25, x26, [sp, #48]
 2e8:	ldp	x27, x28, [sp, #64]
 2ec:	mov	x0, #0x0                   	// #0
 2f0:	ldr	x30, [sp, #80]
 2f4:	ldp	x19, x20, [sp], #144
 2f8:	ret
 2fc:	mov	x27, x3
 300:	b	258 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x170>
 304:	ldr	w0, [x0]
 308:	ldp	x26, x5, [x5, #-16]
 30c:	str	x5, [sp, #136]
 310:	sxtw	x0, w0
 314:	cmp	x0, #0x1
 318:	b.ls	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>  // b.plast
 31c:	mov	x1, x5
 320:	mov	x2, x26
 324:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 328:	add	x0, x0, #0x0
 32c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 330:	ldr	x5, [sp, #136]
 334:	b	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>
 338:	ldr	x0, [x25]
 33c:	ldr	x26, [x1, #16]
 340:	ldr	w0, [x0]
 344:	sxtw	x0, w0
 348:	cmp	x0, #0x1
 34c:	b.ls	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>  // b.plast
 350:	mov	x1, x5
 354:	mov	x2, x26
 358:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 35c:	add	x0, x0, #0x0
 360:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 364:	ldr	x5, [sp, #136]
 368:	b	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>
 36c:	ldp	x23, x24, [sp, #32]
 370:	ldp	x27, x28, [sp, #64]
 374:	b	2ec <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x204>
 378:	add	x1, x24, x19
 37c:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 380:	add	x0, x0, #0x0
 384:	str	x2, [sp, #96]
 388:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 38c:	ldr	x2, [sp, #96]
 390:	b	2b0 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x1c8>
 394:	ldr	x0, [x25]
 398:	ldr	w0, [x0]
 39c:	sxtw	x0, w0
 3a0:	cmp	x0, #0x1
 3a4:	b.ls	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>  // b.plast
 3a8:	mov	x1, x5
 3ac:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 3b0:	add	x0, x0, #0x0
 3b4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 3b8:	ldr	x5, [sp, #136]
 3bc:	b	1f4 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x10c>
 3c0:	ldr	x6, [x5, #8]
 3c4:	lsl	x7, x3, #4
 3c8:	mov	x2, x7
 3cc:	mov	x0, x26
 3d0:	mov	x1, x6
 3d4:	stp	x6, x7, [sp, #96]
 3d8:	stp	x5, x3, [sp, #112]
 3dc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3e0:	ldr	x0, [x25]
 3e4:	str	x27, [x24, x19]
 3e8:	ldr	x5, [sp, #112]
 3ec:	ldr	w0, [x0]
 3f0:	ldp	x6, x7, [sp, #96]
 3f4:	str	x26, [x5, #8]
 3f8:	sxtw	x0, w0
 3fc:	cmp	x0, #0x1
 400:	b.hi	438 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x350>  // b.pmore
 404:	mov	x1, x7
 408:	mov	x0, x6
 40c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 410:	adrp	x4, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 414:	add	x4, x4, #0x0
 418:	ldxr	x0, [x4]
 41c:	sub	x0, x0, #0x1
 420:	stlxr	w1, x0, [x4]
 424:	cbnz	w1, 418 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x330>
 428:	add	x0, x24, x19
 42c:	dmb	ish
 430:	ldr	x26, [x0, #8]
 434:	b	150 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x68>
 438:	ldr	x3, [sp, #120]
 43c:	mov	x1, x6
 440:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 444:	add	x0, x0, #0x0
 448:	mov	x2, x3
 44c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 450:	ldp	x6, x7, [sp, #96]
 454:	b	404 <_ZN11__sanitizer20DTLS_on_tls_get_addrEPvS0_mm+0x31c>
 458:	mov	x3, x2
 45c:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 460:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 464:	add	x0, x0, #0x0
 468:	add	x2, x2, #0x0
 46c:	mov	x4, #0x100000              	// #1048576
 470:	mov	w1, #0x3d                  	// #61
 474:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 478:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 47c:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 480:	mov	x4, x27
 484:	add	x2, x2, #0x0
 488:	add	x0, x0, #0x0
 48c:	mov	w1, #0x18a                 	// #394
 490:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 494:	adrp	x2, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 498:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 49c:	add	x2, x2, #0x0
 4a0:	add	x0, x0, #0x0
 4a4:	mov	w1, #0x18b                 	// #395
 4a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4ac:	nop

00000000000004b0 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm>:
 4b0:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 4b4:	stp	x19, x20, [sp, #-32]!
 4b8:	mov	x19, x0
 4bc:	ldr	x3, [x3]
 4c0:	ldrb	w0, [x3, #121]
 4c4:	str	x30, [sp, #16]
 4c8:	cbz	w0, 4fc <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm+0x4c>
 4cc:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 4d0:	mov	x20, x1
 4d4:	ldr	x0, [x0]
 4d8:	ldr	w0, [x0]
 4dc:	sxtw	x0, w0
 4e0:	cmp	x0, #0x1
 4e4:	b.hi	508 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm+0x58>  // b.pmore
 4e8:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 4ec:	ldr	x0, [x0]
 4f0:	mrs	x1, tpidr_el0
 4f4:	add	x0, x1, x0
 4f8:	stp	x20, x19, [x0, #16]
 4fc:	ldr	x30, [sp, #16]
 500:	ldp	x19, x20, [sp], #32
 504:	ret
 508:	mov	x2, x1
 50c:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 510:	mov	x1, x19
 514:	add	x0, x0, #0x0
 518:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 51c:	b	4e8 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm+0x38>

0000000000000520 <_ZN11__sanitizer8DTLS_GetEv>:
 520:	adrp	x0, 0 <_ZN11__sanitizer12DTLS_DestroyEv>
 524:	ldr	x0, [x0]
 528:	mrs	x1, tpidr_el0
 52c:	add	x0, x1, x0
 530:	ret
 534:	nop

0000000000000538 <_ZN11__sanitizer17DTLSInDestructionEPNS_4DTLSE>:
 538:	ldr	x0, [x0]
 53c:	cmn	x0, #0x1
 540:	cset	w0, eq  // eq = none
 544:	ret

sanitizer_thread_registry.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>:
       0:	stp	x19, x20, [sp, #-32]!
       4:	mov	x19, x0
       8:	ldr	x0, [x0, #160]
       c:	str	x30, [sp, #16]
      10:	cbnz	x0, 44 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x44>
      14:	dup	v0.2d, x1
      18:	str	xzr, [x1, #128]
      1c:	mov	x1, #0x1                   	// #1
      20:	mov	x2, x1
      24:	str	x1, [x19, #160]
      28:	ldr	w1, [x19, #12]
      2c:	stur	q0, [x19, #168]
      30:	cmp	x2, x1
      34:	b.hi	68 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x68>  // b.pmore
      38:	ldr	x30, [sp, #16]
      3c:	ldp	x19, x20, [sp], #32
      40:	ret
      44:	str	xzr, [x1, #128]
      48:	add	x2, x0, #0x1
      4c:	ldr	x4, [x19, #176]
      50:	str	x1, [x4, #128]
      54:	str	x2, [x19, #160]
      58:	str	x1, [x19, #176]
      5c:	ldr	w1, [x19, #12]
      60:	cmp	x2, x1
      64:	b.ls	38 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x38>  // b.plast
      68:	ldr	x20, [x19, #168]
      6c:	add	x2, x19, #0xa0
      70:	ldr	x1, [x20, #128]
      74:	str	x1, [x2, #8]
      78:	cbz	x1, 11c <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x11c>
      7c:	ldr	w3, [x20, #112]
      80:	str	x0, [x19, #160]
      84:	cmp	x3, #0x4
      88:	b.ne	130 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x130>  // b.any
      8c:	strb	wzr, [x20, #48]
      90:	str	wzr, [x20, #112]
      94:	dmb	ish
      98:	str	wzr, [x20, #136]
      9c:	ldr	x1, [x20]
      a0:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
      a4:	add	x0, x0, #0x0
      a8:	ldr	x1, [x1, #40]
      ac:	cmp	x1, x0
      b0:	b.ne	124 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x124>  // b.any
      b4:	ldr	w0, [x20, #24]
      b8:	add	w0, w0, #0x1
      bc:	str	w0, [x20, #24]
      c0:	ldr	w1, [x19, #16]
      c4:	cmp	w1, #0x0
      c8:	ccmp	w0, w1, #0x0, ne  // ne = any
      cc:	b.cs	38 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x38>  // b.hs, b.nlast
      d0:	ldr	x0, [x19, #184]
      d4:	cbnz	x0, f8 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0xf8>
      d8:	dup	v0.2d, x20
      dc:	str	xzr, [x20, #128]
      e0:	mov	x0, #0x1                   	// #1
      e4:	str	x0, [x19, #184]
      e8:	ldr	x30, [sp, #16]
      ec:	str	q0, [x19, #192]
      f0:	ldp	x19, x20, [sp], #32
      f4:	ret
      f8:	str	xzr, [x20, #128]
      fc:	add	x0, x0, #0x1
     100:	ldr	x30, [sp, #16]
     104:	ldr	x2, [x19, #200]
     108:	str	x20, [x2, #128]
     10c:	str	x0, [x19, #184]
     110:	str	x20, [x19, #200]
     114:	ldp	x19, x20, [sp], #32
     118:	ret
     11c:	str	xzr, [x2, #16]
     120:	b	7c <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0x7c>
     124:	mov	x0, x20
     128:	blr	x1
     12c:	b	b4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0+0xb4>
     130:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     134:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     138:	add	x2, x2, #0x0
     13c:	add	x0, x0, #0x0
     140:	mov	x4, #0x4                   	// #4
     144:	mov	w1, #0x144                 	// #324
     148:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     14c:	nop

0000000000000150 <_ZN11__sanitizer17ThreadContextBaseC1Ej>:
     150:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     154:	add	x2, x2, #0x0
     158:	str	x2, [x0]
     15c:	str	w1, [x0, #8]
     160:	str	xzr, [x0, #16]
     164:	str	wzr, [x0, #24]
     168:	stp	xzr, xzr, [x0, #32]
     16c:	strb	wzr, [x0, #48]
     170:	str	wzr, [x0, #112]
     174:	strb	wzr, [x0, #116]
     178:	stp	xzr, xzr, [x0, #120]
     17c:	dmb	ish
     180:	str	wzr, [x0, #136]
     184:	ret

0000000000000188 <_ZN11__sanitizer17ThreadContextBaseD1Ev>:
     188:	str	x30, [sp, #-16]!
     18c:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     190:	add	x1, x1, #0x0
     194:	str	x1, [x0]
     198:	adrp	x3, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     19c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     1a0:	add	x0, x3, #0x0
     1a4:	add	x2, x2, #0x0
     1a8:	mov	x4, #0x0                   	// #0
     1ac:	mov	x3, #0x0                   	// #0
     1b0:	mov	w1, #0x1c                  	// #28
     1b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001b8 <_ZN11__sanitizer17ThreadContextBase7SetNameEPKc>:
     1b8:	strb	wzr, [x0, #48]
     1bc:	cbz	x1, 1e0 <_ZN11__sanitizer17ThreadContextBase7SetNameEPKc+0x28>
     1c0:	stp	x19, x30, [sp, #-16]!
     1c4:	mov	x19, x0
     1c8:	mov	x2, #0x40                  	// #64
     1cc:	add	x0, x0, #0x30
     1d0:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
     1d4:	strb	wzr, [x19, #111]
     1d8:	ldp	x19, x30, [sp], #16
     1dc:	ret
     1e0:	ret
     1e4:	nop

00000000000001e8 <_ZN11__sanitizer17ThreadContextBase7SetDeadEv>:
     1e8:	ldr	w2, [x0, #112]
     1ec:	sub	w2, w2, #0x2
     1f0:	cmp	w2, #0x1
     1f4:	b.hi	228 <_ZN11__sanitizer17ThreadContextBase7SetDeadEv+0x40>  // b.pmore
     1f8:	ldr	x3, [x0]
     1fc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     200:	add	x1, x2, #0x0
     204:	mov	w4, #0x4                   	// #4
     208:	str	xzr, [x0, #40]
     20c:	ldr	x2, [x3]
     210:	str	w4, [x0, #112]
     214:	cmp	x2, x1
     218:	b.ne	220 <_ZN11__sanitizer17ThreadContextBase7SetDeadEv+0x38>  // b.any
     21c:	ret
     220:	mov	x16, x2
     224:	br	x16
     228:	str	x30, [sp, #-16]!
     22c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     230:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     234:	add	x2, x2, #0x0
     238:	add	x0, x0, #0x0
     23c:	mov	x4, #0x0                   	// #0
     240:	mov	x3, #0x0                   	// #0
     244:	mov	w1, #0x28                  	// #40
     248:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     24c:	nop

0000000000000250 <_ZN11__sanitizer17ThreadContextBase12SetDestroyedEv>:
     250:	dmb	ish
     254:	mov	w1, #0x1                   	// #1
     258:	str	w1, [x0, #136]
     25c:	ret

0000000000000260 <_ZN11__sanitizer17ThreadContextBase12GetDestroyedEv>:
     260:	ldr	w0, [x0, #136]
     264:	dmb	ish
     268:	cmp	w0, #0x0
     26c:	cset	w0, ne  // ne = any
     270:	ret
     274:	nop

0000000000000278 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv>:
     278:	ldrb	w3, [x0, #116]
     27c:	str	x30, [sp, #-16]!
     280:	cbnz	w3, 2c8 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv+0x50>
     284:	ldr	w4, [x0, #112]
     288:	cmp	x4, #0x3
     28c:	b.ne	2e8 <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv+0x70>  // b.any
     290:	ldr	x4, [x0]
     294:	adrp	x3, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     298:	add	x2, x3, #0x0
     29c:	mov	w5, #0x4                   	// #4
     2a0:	str	xzr, [x0, #40]
     2a4:	ldr	x3, [x4, #8]
     2a8:	str	w5, [x0, #112]
     2ac:	cmp	x3, x2
     2b0:	b.ne	2bc <_ZN11__sanitizer17ThreadContextBase9SetJoinedEPv+0x44>  // b.any
     2b4:	ldr	x30, [sp], #16
     2b8:	ret
     2bc:	ldr	x30, [sp], #16
     2c0:	mov	x16, x3
     2c4:	br	x16
     2c8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     2cc:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     2d0:	add	x2, x2, #0x0
     2d4:	add	x0, x0, #0x0
     2d8:	mov	x4, #0x1                   	// #1
     2dc:	mov	x3, #0x0                   	// #0
     2e0:	mov	w1, #0x39                  	// #57
     2e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     2e8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     2ec:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     2f0:	add	x2, x2, #0x0
     2f4:	add	x0, x0, #0x0
     2f8:	mov	x3, #0x3                   	// #3
     2fc:	mov	w1, #0x3a                  	// #58
     300:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     304:	nop

0000000000000308 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv>:
     308:	ldrb	w1, [x0, #116]
     30c:	cbz	w1, 338 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x30>
     310:	ldr	w1, [x0, #112]
     314:	cmp	w1, #0x1
     318:	b.eq	338 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x30>  // b.none
     31c:	ldr	x2, [x0]
     320:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     324:	add	x1, x1, #0x0
     328:	ldr	x2, [x2, #16]
     32c:	cmp	x2, x1
     330:	b.ne	358 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x50>  // b.any
     334:	ret
     338:	ldr	x2, [x0]
     33c:	mov	w1, #0x3                   	// #3
     340:	str	w1, [x0, #112]
     344:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     348:	add	x1, x1, #0x0
     34c:	ldr	x2, [x2, #16]
     350:	cmp	x2, x1
     354:	b.eq	334 <_ZN11__sanitizer17ThreadContextBase11SetFinishedEv+0x2c>  // b.none
     358:	mov	x16, x2
     35c:	br	x16

0000000000000360 <_ZN11__sanitizer17ThreadContextBase10SetStartedEyNS_10ThreadTypeEPv>:
     360:	ldr	x6, [x0]
     364:	str	w2, [x0, #120]
     368:	mov	w7, #0x2                   	// #2
     36c:	str	x1, [x0, #32]
     370:	str	w7, [x0, #112]
     374:	adrp	x5, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     378:	ldr	x2, [x6, #24]
     37c:	add	x5, x5, #0x0
     380:	cmp	x2, x5
     384:	b.ne	38c <_ZN11__sanitizer17ThreadContextBase10SetStartedEyNS_10ThreadTypeEPv+0x2c>  // b.any
     388:	ret
     38c:	mov	x1, x3
     390:	mov	x16, x2
     394:	br	x16

0000000000000398 <_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv>:
     398:	ldr	w6, [x0, #8]
     39c:	mov	w7, #0x1                   	// #1
     3a0:	str	x2, [x0, #16]
     3a4:	str	x1, [x0, #40]
     3a8:	str	w7, [x0, #112]
     3ac:	strb	w3, [x0, #116]
     3b0:	cbz	w6, 3b8 <_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv+0x20>
     3b4:	str	w4, [x0, #124]
     3b8:	ldr	x1, [x0]
     3bc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     3c0:	add	x2, x2, #0x0
     3c4:	ldr	x3, [x1, #32]
     3c8:	cmp	x3, x2
     3cc:	b.ne	3d4 <_ZN11__sanitizer17ThreadContextBase10SetCreatedEmybjPv+0x3c>  // b.any
     3d0:	ret
     3d4:	mov	x1, x5
     3d8:	mov	x16, x3
     3dc:	br	x16

00000000000003e0 <_ZN11__sanitizer17ThreadContextBase5ResetEv>:
     3e0:	strb	wzr, [x0, #48]
     3e4:	str	wzr, [x0, #112]
     3e8:	dmb	ish
     3ec:	str	wzr, [x0, #136]
     3f0:	ldr	x2, [x0]
     3f4:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     3f8:	add	x1, x1, #0x0
     3fc:	ldr	x2, [x2, #40]
     400:	cmp	x2, x1
     404:	b.ne	40c <_ZN11__sanitizer17ThreadContextBase5ResetEv+0x2c>  // b.any
     408:	ret
     40c:	mov	x16, x2
     410:	br	x16
     414:	nop

0000000000000418 <_ZN11__sanitizer14ThreadRegistryC1EPFPNS_17ThreadContextBaseEjEjjj>:
     418:	stp	x19, x30, [sp, #-16]!
     41c:	mov	x19, x0
     420:	add	x0, x0, #0x18
     424:	str	x1, [x19]
     428:	stp	w2, w3, [x19, #8]
     42c:	str	w4, [x19, #16]
     430:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
     434:	str	wzr, [x19, #112]
     438:	movi	v0.4s, #0x0
     43c:	ldr	w0, [x19, #8]
     440:	mov	w2, #0x0                   	// #0
     444:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     448:	add	x1, x1, #0x0
     44c:	lsl	x0, x0, #3
     450:	stur	q0, [x19, #120]
     454:	stur	q0, [x19, #136]
     458:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     45c:	movi	v0.4s, #0x0
     460:	stp	x0, xzr, [x19, #152]
     464:	str	xzr, [x19, #184]
     468:	stur	q0, [x19, #168]
     46c:	str	q0, [x19, #192]
     470:	ldp	x19, x30, [sp], #16
     474:	ret

0000000000000478 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_>:
     478:	stp	x19, x20, [sp, #-48]!
     47c:	mov	x19, x0
     480:	mov	x20, x3
     484:	stp	x23, x30, [sp, #32]
     488:	add	x23, x0, #0x18
     48c:	mov	x0, x23
     490:	stp	x21, x22, [sp, #16]
     494:	mov	x22, x1
     498:	mov	x21, x2
     49c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     4a0:	cbz	x22, 4ac <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x34>
     4a4:	ldr	w0, [x19, #112]
     4a8:	str	x0, [x22]
     4ac:	cbz	x21, 4b8 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x40>
     4b0:	ldr	x0, [x19, #144]
     4b4:	str	x0, [x21]
     4b8:	cbz	x20, 4c4 <_ZN11__sanitizer14ThreadRegistry18GetNumberOfThreadsEPmS1_S1_+0x4c>
     4bc:	ldr	x0, [x19, #128]
     4c0:	str	x0, [x20]
     4c4:	mov	x0, x23
     4c8:	ldp	x21, x22, [sp, #16]
     4cc:	ldp	x23, x30, [sp, #32]
     4d0:	ldp	x19, x20, [sp], #48
     4d4:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

00000000000004d8 <_ZN11__sanitizer14ThreadRegistry18GetMaxAliveThreadsEv>:
     4d8:	stp	x19, x20, [sp, #-32]!
     4dc:	mov	x19, x0
     4e0:	add	x20, x0, #0x18
     4e4:	mov	x0, x20
     4e8:	str	x30, [sp, #16]
     4ec:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     4f0:	ldr	x19, [x19, #136]
     4f4:	mov	x0, x20
     4f8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     4fc:	mov	x0, x19
     500:	ldr	x30, [sp, #16]
     504:	ldp	x19, x20, [sp], #32
     508:	ret
     50c:	nop

0000000000000510 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv>:
     510:	stp	x19, x20, [sp, #-64]!
     514:	mov	x19, x0
     518:	stp	x25, x30, [sp, #48]
     51c:	add	x25, x0, #0x18
     520:	mov	x0, x25
     524:	stp	x21, x22, [sp, #16]
     528:	mov	x21, x1
     52c:	mov	w22, w3
     530:	stp	x23, x24, [sp, #32]
     534:	mov	x23, x4
     538:	and	w24, w2, #0xff
     53c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     540:	ldr	x1, [x19, #184]
     544:	cbz	x1, 610 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x100>
     548:	ldr	x0, [x19, #192]
     54c:	ldr	x2, [x0, #128]
     550:	str	x2, [x19, #192]
     554:	cbz	x2, 664 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x154>
     558:	ldr	w20, [x0, #8]
     55c:	sub	x1, x1, #0x1
     560:	str	x1, [x19, #184]
     564:	mov	w3, w20
     568:	mov	x1, #0xffffffff            	// #4294967295
     56c:	cmp	x3, x1
     570:	b.eq	694 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x184>  // b.none
     574:	ldr	w4, [x19, #8]
     578:	cmp	x3, x4
     57c:	b.cs	6b0 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1a0>  // b.hs, b.nlast
     580:	ldr	w3, [x0, #112]
     584:	cbnz	x3, 6c8 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1b8>
     588:	ldp	x2, x1, [x19, #128]
     58c:	add	x3, x2, #0x1
     590:	str	x3, [x19, #128]
     594:	cmp	x3, x1
     598:	b.ls	5ac <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x9c>  // b.plast
     59c:	add	x4, x1, #0x1
     5a0:	str	x4, [x19, #136]
     5a4:	cmp	x2, x1
     5a8:	b.ne	6e4 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1d4>  // b.any
     5ac:	ldr	x1, [x19, #120]
     5b0:	mov	w3, #0x1                   	// #1
     5b4:	ldr	w2, [x0, #8]
     5b8:	add	x4, x1, #0x1
     5bc:	str	x4, [x19, #120]
     5c0:	str	x1, [x0, #16]
     5c4:	str	x21, [x0, #40]
     5c8:	str	w3, [x0, #112]
     5cc:	strb	w24, [x0, #116]
     5d0:	cbz	w2, 5d8 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0xc8>
     5d4:	str	w22, [x0, #124]
     5d8:	ldr	x2, [x0]
     5dc:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     5e0:	add	x1, x1, #0x0
     5e4:	ldr	x2, [x2, #32]
     5e8:	cmp	x2, x1
     5ec:	b.ne	66c <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x15c>  // b.any
     5f0:	mov	x0, x25
     5f4:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     5f8:	mov	w0, w20
     5fc:	ldp	x21, x22, [sp, #16]
     600:	ldp	x23, x24, [sp, #32]
     604:	ldp	x25, x30, [sp, #48]
     608:	ldp	x19, x20, [sp], #64
     60c:	ret
     610:	ldr	w2, [x19, #8]
     614:	ldr	w20, [x19, #112]
     618:	cmp	w20, w2
     61c:	b.cs	6fc <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x1ec>  // b.hs, b.nlast
     620:	ldr	x1, [x19]
     624:	add	w0, w20, #0x1
     628:	str	w0, [x19, #112]
     62c:	mov	w0, w20
     630:	blr	x1
     634:	ldr	x1, [x19, #152]
     638:	mov	w3, w20
     63c:	str	x0, [x1, x3, lsl #3]
     640:	cbnz	x0, 568 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x58>
     644:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     648:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     64c:	add	x2, x2, #0x0
     650:	add	x0, x0, #0x0
     654:	mov	x4, #0x0                   	// #0
     658:	mov	x3, #0x0                   	// #0
     65c:	mov	w1, #0x9d                  	// #157
     660:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     664:	str	xzr, [x19, #200]
     668:	b	558 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv+0x48>
     66c:	mov	x1, x23
     670:	blr	x2
     674:	mov	x0, x25
     678:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     67c:	mov	w0, w20
     680:	ldp	x21, x22, [sp, #16]
     684:	ldp	x23, x24, [sp, #32]
     688:	ldp	x25, x30, [sp, #48]
     68c:	ldp	x19, x20, [sp], #64
     690:	ret
     694:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     698:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     69c:	add	x2, x2, #0x0
     6a0:	add	x0, x0, #0x0
     6a4:	mov	x4, x3
     6a8:	mov	w1, #0x9e                  	// #158
     6ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6b0:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6b4:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6b8:	add	x2, x2, #0x0
     6bc:	add	x0, x0, #0x0
     6c0:	mov	w1, #0x9f                  	// #159
     6c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6c8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6cc:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6d0:	add	x2, x2, #0x0
     6d4:	add	x0, x0, #0x0
     6d8:	mov	x4, #0x0                   	// #0
     6dc:	mov	w1, #0xa0                  	// #160
     6e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6e4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6e8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     6ec:	add	x2, x2, #0x0
     6f0:	add	x0, x0, #0x0
     6f4:	mov	w1, #0xa4                  	// #164
     6f8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6fc:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     700:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     704:	add	x0, x0, #0x0
     708:	ldr	x1, [x1]
     70c:	ldr	x1, [x1]
     710:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     714:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000718 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_>:
     718:	stp	x19, x20, [sp, #-48]!
     71c:	mov	x20, x0
     720:	add	x0, x0, #0x18
     724:	stp	x21, x22, [sp, #16]
     728:	mov	x22, x1
     72c:	mov	x21, x2
     730:	str	x30, [sp, #32]
     734:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
     738:	ldr	w3, [x20, #112]
     73c:	cbz	w3, 784 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x6c>
     740:	ldr	x4, [x20, #152]
     744:	mov	w19, #0x0                   	// #0
     748:	ldr	x0, [x4, w19, uxtw #3]
     74c:	mov	x1, x21
     750:	cbz	x0, 778 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x60>
     754:	blr	x22
     758:	add	w19, w19, #0x1
     75c:	ldr	w3, [x20, #112]
     760:	cmp	w3, w19
     764:	b.ls	784 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x6c>  // b.plast
     768:	ldr	x4, [x20, #152]
     76c:	mov	x1, x21
     770:	ldr	x0, [x4, w19, uxtw #3]
     774:	cbnz	x0, 754 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x3c>
     778:	add	w19, w19, #0x1
     77c:	cmp	w19, w3
     780:	b.cc	748 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_+0x30>  // b.lo, b.ul, b.last
     784:	ldp	x21, x22, [sp, #16]
     788:	ldr	x30, [sp, #32]
     78c:	ldp	x19, x20, [sp], #48
     790:	ret
     794:	nop

0000000000000798 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_>:
     798:	stp	x19, x20, [sp, #-64]!
     79c:	mov	w19, #0x0                   	// #0
     7a0:	stp	x21, x22, [sp, #16]
     7a4:	mov	x21, x0
     7a8:	mov	x22, x2
     7ac:	stp	x23, x24, [sp, #32]
     7b0:	add	x24, x0, #0x18
     7b4:	mov	x23, x1
     7b8:	mov	x0, x24
     7bc:	str	x30, [sp, #48]
     7c0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     7c4:	ldr	w3, [x21, #112]
     7c8:	cbz	w3, 800 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x68>
     7cc:	nop
     7d0:	ldr	x0, [x21, #152]
     7d4:	mov	x1, x22
     7d8:	ldr	x20, [x0, w19, uxtw #3]
     7dc:	mov	x0, x20
     7e0:	cbz	x20, 7f4 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x5c>
     7e4:	blr	x23
     7e8:	tst	w0, #0xff
     7ec:	b.ne	824 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x8c>  // b.any
     7f0:	ldr	w3, [x21, #112]
     7f4:	add	w19, w19, #0x1
     7f8:	cmp	w19, w3
     7fc:	b.cc	7d0 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_+0x38>  // b.lo, b.ul, b.last
     800:	mov	x0, x24
     804:	mov	w19, #0xffffffff            	// #-1
     808:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     80c:	mov	w0, w19
     810:	ldp	x21, x22, [sp, #16]
     814:	ldp	x23, x24, [sp, #32]
     818:	ldr	x30, [sp, #48]
     81c:	ldp	x19, x20, [sp], #64
     820:	ret
     824:	ldr	w19, [x20, #8]
     828:	mov	x0, x24
     82c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     830:	mov	w0, w19
     834:	ldp	x21, x22, [sp, #16]
     838:	ldp	x23, x24, [sp, #32]
     83c:	ldr	x30, [sp, #48]
     840:	ldp	x19, x20, [sp], #64
     844:	ret

0000000000000848 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_>:
     848:	stp	x19, x20, [sp, #-48]!
     84c:	mov	w19, #0x0                   	// #0
     850:	stp	x21, x22, [sp, #16]
     854:	mov	x21, x0
     858:	mov	x22, x2
     85c:	add	x0, x0, #0x18
     860:	stp	x23, x30, [sp, #32]
     864:	mov	x23, x1
     868:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
     86c:	ldr	w3, [x21, #112]
     870:	cbz	w3, 8a8 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x60>
     874:	nop
     878:	ldr	x0, [x21, #152]
     87c:	mov	x1, x22
     880:	ldr	x20, [x0, w19, uxtw #3]
     884:	add	w19, w19, #0x1
     888:	mov	x0, x20
     88c:	cbz	x20, 8a0 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x58>
     890:	blr	x23
     894:	tst	w0, #0xff
     898:	b.ne	8ac <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x64>  // b.any
     89c:	ldr	w3, [x21, #112]
     8a0:	cmp	w19, w3
     8a4:	b.cc	878 <_ZN11__sanitizer14ThreadRegistry23FindThreadContextLockedEPFbPNS_17ThreadContextBaseEPvES3_+0x30>  // b.lo, b.ul, b.last
     8a8:	mov	x20, #0x0                   	// #0
     8ac:	mov	x0, x20
     8b0:	ldp	x21, x22, [sp, #16]
     8b4:	ldp	x23, x30, [sp, #32]
     8b8:	ldp	x19, x20, [sp], #48
     8bc:	ret

00000000000008c0 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy>:
     8c0:	stp	x19, x20, [sp, #-32]!
     8c4:	mov	x19, x0
     8c8:	mov	x20, x1
     8cc:	add	x0, x0, #0x18
     8d0:	str	x30, [sp, #16]
     8d4:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
     8d8:	ldr	w1, [x19, #112]
     8dc:	cbz	w1, 924 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x64>
     8e0:	mov	x2, #0x0                   	// #0
     8e4:	ldr	x4, [x19, #152]
     8e8:	b	8f4 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x34>
     8ec:	cmp	w1, w2
     8f0:	b.ls	924 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x64>  // b.plast
     8f4:	ldr	x0, [x4, x2, lsl #3]
     8f8:	add	x2, x2, #0x1
     8fc:	cbz	x0, 8ec <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x2c>
     900:	ldr	x3, [x0, #32]
     904:	cmp	x20, x3
     908:	b.ne	8ec <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x2c>  // b.any
     90c:	ldr	w3, [x0, #112]
     910:	tst	w3, #0xfffffffb
     914:	b.eq	8ec <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy+0x2c>  // b.none
     918:	ldr	x30, [sp, #16]
     91c:	ldp	x19, x20, [sp], #32
     920:	ret
     924:	mov	x0, #0x0                   	// #0
     928:	ldr	x30, [sp, #16]
     92c:	ldp	x19, x20, [sp], #32
     930:	ret
     934:	nop

0000000000000938 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc>:
     938:	stp	x19, x20, [sp, #-48]!
     93c:	mov	x19, x0
     940:	mov	w20, w1
     944:	stp	x21, x22, [sp, #16]
     948:	add	x22, x0, #0x18
     94c:	mov	x21, x2
     950:	mov	x0, x22
     954:	str	x30, [sp, #32]
     958:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     95c:	ldr	w4, [x19, #112]
     960:	mov	w3, w20
     964:	cmp	x4, w20, uxtw
     968:	b.ls	9b4 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x7c>  // b.plast
     96c:	ldr	x0, [x19, #152]
     970:	ldr	x19, [x0, x3, lsl #3]
     974:	cbz	x19, 9cc <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x94>
     978:	ldr	w4, [x19, #112]
     97c:	cmp	x4, #0x2
     980:	b.ne	9ec <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0xb4>  // b.any
     984:	strb	wzr, [x19, #48]
     988:	cbz	x21, 9a0 <_ZN11__sanitizer14ThreadRegistry13SetThreadNameEjPKc+0x68>
     98c:	mov	x1, x21
     990:	add	x0, x19, #0x30
     994:	mov	x2, #0x40                  	// #64
     998:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
     99c:	strb	wzr, [x19, #111]
     9a0:	mov	x0, x22
     9a4:	ldp	x21, x22, [sp, #16]
     9a8:	ldr	x30, [sp, #32]
     9ac:	ldp	x19, x20, [sp], #48
     9b0:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     9b4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9b8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9bc:	add	x2, x2, #0x0
     9c0:	add	x0, x0, #0x0
     9c4:	mov	w1, #0xd8                  	// #216
     9c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     9cc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9d0:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9d4:	add	x2, x2, #0x0
     9d8:	add	x0, x0, #0x0
     9dc:	mov	x4, #0x0                   	// #0
     9e0:	mov	x3, #0x0                   	// #0
     9e4:	mov	w1, #0xda                  	// #218
     9e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     9ec:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9f0:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     9f4:	add	x2, x2, #0x0
     9f8:	add	x0, x0, #0x0
     9fc:	mov	x3, #0x2                   	// #2
     a00:	mov	w1, #0xdb                  	// #219
     a04:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000a08 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc>:
     a08:	stp	x19, x20, [sp, #-48]!
     a0c:	mov	x19, x0
     a10:	mov	x20, x1
     a14:	stp	x21, x22, [sp, #16]
     a18:	add	x22, x0, #0x18
     a1c:	mov	x21, x2
     a20:	mov	x0, x22
     a24:	str	x30, [sp, #32]
     a28:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     a2c:	ldr	w4, [x19, #112]
     a30:	cbz	w4, a84 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>
     a34:	mov	x0, #0x0                   	// #0
     a38:	ldr	x5, [x19, #152]
     a3c:	b	a48 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x40>
     a40:	cmp	w4, w0
     a44:	b.ls	a84 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>  // b.plast
     a48:	ldr	x19, [x5, x0, lsl #3]
     a4c:	add	x0, x0, #0x1
     a50:	cbz	x19, a40 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>
     a54:	ldr	x3, [x19, #40]
     a58:	cmp	x3, x20
     a5c:	b.ne	a40 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>  // b.any
     a60:	ldr	w1, [x19, #112]
     a64:	cbz	w1, a40 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x38>
     a68:	strb	wzr, [x19, #48]
     a6c:	cbz	x21, a84 <_ZN11__sanitizer14ThreadRegistry21SetThreadNameByUserIdEmPKc+0x7c>
     a70:	mov	x1, x21
     a74:	add	x0, x19, #0x30
     a78:	mov	x2, #0x40                  	// #64
     a7c:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
     a80:	strb	wzr, [x19, #111]
     a84:	mov	x0, x22
     a88:	ldp	x21, x22, [sp, #16]
     a8c:	ldr	x30, [sp, #32]
     a90:	ldp	x19, x20, [sp], #48
     a94:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

0000000000000a98 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv>:
     a98:	stp	x19, x20, [sp, #-48]!
     a9c:	mov	x19, x0
     aa0:	mov	w20, w1
     aa4:	stp	x21, x22, [sp, #16]
     aa8:	add	x21, x0, #0x18
     aac:	mov	x22, x2
     ab0:	mov	x0, x21
     ab4:	str	x30, [sp, #32]
     ab8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     abc:	ldr	w4, [x19, #112]
     ac0:	mov	w3, w20
     ac4:	cmp	x4, w20, uxtw
     ac8:	b.ls	b9c <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x104>  // b.plast
     acc:	ldr	x0, [x19, #152]
     ad0:	ldr	x20, [x0, x3, lsl #3]
     ad4:	cbz	x20, bb4 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x11c>
     ad8:	ldr	w1, [x20, #112]
     adc:	cbz	w1, b1c <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x84>
     ae0:	ldr	x2, [x20]
     ae4:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ae8:	add	x0, x0, #0x0
     aec:	ldr	x2, [x2, #48]
     af0:	cmp	x2, x0
     af4:	b.ne	b48 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xb0>  // b.any
     af8:	cmp	w1, #0x3
     afc:	b.eq	b60 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xc8>  // b.none
     b00:	mov	w0, #0x1                   	// #1
     b04:	strb	w0, [x20, #116]
     b08:	mov	x0, x21
     b0c:	ldp	x21, x22, [sp, #16]
     b10:	ldr	x30, [sp, #32]
     b14:	ldp	x19, x20, [sp], #48
     b18:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     b1c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     b20:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     b24:	add	x0, x0, #0x0
     b28:	ldr	x1, [x1]
     b2c:	ldr	x1, [x1]
     b30:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     b34:	mov	x0, x21
     b38:	ldp	x21, x22, [sp, #16]
     b3c:	ldr	x30, [sp, #32]
     b40:	ldp	x19, x20, [sp], #48
     b44:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     b48:	mov	x1, x22
     b4c:	mov	x0, x20
     b50:	blr	x2
     b54:	ldr	w1, [x20, #112]
     b58:	cmp	w1, #0x3
     b5c:	b.ne	b00 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x68>  // b.any
     b60:	ldr	x1, [x20]
     b64:	mov	w2, #0x4                   	// #4
     b68:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     b6c:	add	x0, x0, #0x0
     b70:	ldr	x1, [x1]
     b74:	str	xzr, [x20, #40]
     b78:	str	w2, [x20, #112]
     b7c:	cmp	x1, x0
     b80:	b.ne	bd4 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x13c>  // b.any
     b84:	ldr	w0, [x20, #8]
     b88:	cbz	w0, b08 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x70>
     b8c:	mov	x1, x20
     b90:	mov	x0, x19
     b94:	bl	0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     b98:	b	b08 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0x70>
     b9c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ba0:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ba4:	add	x2, x2, #0x0
     ba8:	add	x0, x0, #0x0
     bac:	mov	w1, #0xee                  	// #238
     bb0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     bb4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     bb8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     bbc:	add	x2, x2, #0x0
     bc0:	add	x0, x0, #0x0
     bc4:	mov	x4, #0x0                   	// #0
     bc8:	mov	x3, #0x0                   	// #0
     bcc:	mov	w1, #0xf0                  	// #240
     bd0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     bd4:	mov	x0, x20
     bd8:	blr	x1
     bdc:	b	b84 <_ZN11__sanitizer14ThreadRegistry12DetachThreadEjPv+0xec>

0000000000000be0 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv>:
     be0:	stp	x19, x20, [sp, #-64]!
     be4:	mov	x20, x0
     be8:	stp	x21, x22, [sp, #16]
     bec:	add	x22, x0, #0x18
     bf0:	ubfiz	x21, x1, #3, #32
     bf4:	mov	x0, x22
     bf8:	stp	x23, x24, [sp, #32]
     bfc:	mov	w23, w1
     c00:	mov	x24, x2
     c04:	str	x30, [sp, #48]
     c08:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     c0c:	ldr	w4, [x20, #112]
     c10:	cmp	x23, x4
     c14:	b.cs	c58 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x78>  // b.hs, b.nlast
     c18:	ldr	x0, [x20, #152]
     c1c:	ldr	x19, [x0, x21]
     c20:	cbz	x19, cd8 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xf8>
     c24:	ldr	w0, [x19, #112]
     c28:	cbz	w0, d44 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x164>
     c2c:	ldr	w0, [x19, #136]
     c30:	dmb	ish
     c34:	cbnz	w0, c74 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x94>
     c38:	mov	x0, x22
     c3c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     c40:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
     c44:	mov	x0, x22
     c48:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     c4c:	ldr	w4, [x20, #112]
     c50:	cmp	x23, x4
     c54:	b.cc	c18 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x38>  // b.lo, b.ul, b.last
     c58:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     c5c:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     c60:	mov	x3, x23
     c64:	add	x2, x2, #0x0
     c68:	add	x0, x0, #0x0
     c6c:	mov	w1, #0x103                 	// #259
     c70:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     c74:	ldrb	w0, [x19, #116]
     c78:	cbnz	w0, d08 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x128>
     c7c:	ldr	w4, [x19, #112]
     c80:	cmp	x4, #0x3
     c84:	b.ne	d28 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x148>  // b.any
     c88:	ldr	x1, [x19]
     c8c:	mov	w2, #0x4                   	// #4
     c90:	str	w2, [x19, #112]
     c94:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     c98:	str	xzr, [x19, #40]
     c9c:	add	x0, x0, #0x0
     ca0:	ldr	x2, [x1, #8]
     ca4:	cmp	x2, x0
     ca8:	b.ne	cf8 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0x118>  // b.any
     cac:	ldr	w0, [x19, #8]
     cb0:	cbz	w0, cc0 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xe0>
     cb4:	mov	x1, x19
     cb8:	mov	x0, x20
     cbc:	bl	0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     cc0:	mov	x0, x22
     cc4:	ldp	x21, x22, [sp, #16]
     cc8:	ldp	x23, x24, [sp, #32]
     ccc:	ldr	x30, [sp, #48]
     cd0:	ldp	x19, x20, [sp], #64
     cd4:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     cd8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     cdc:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ce0:	add	x2, x2, #0x0
     ce4:	add	x0, x0, #0x0
     ce8:	mov	x4, #0x0                   	// #0
     cec:	mov	x3, #0x0                   	// #0
     cf0:	mov	w1, #0x105                 	// #261
     cf4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     cf8:	mov	x1, x24
     cfc:	mov	x0, x19
     d00:	blr	x2
     d04:	b	cac <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xcc>
     d08:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     d0c:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     d10:	add	x2, x2, #0x0
     d14:	add	x0, x0, #0x0
     d18:	mov	x4, #0x1                   	// #1
     d1c:	mov	x3, #0x0                   	// #0
     d20:	mov	w1, #0x39                  	// #57
     d24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d28:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     d2c:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     d30:	add	x2, x2, #0x0
     d34:	add	x0, x0, #0x0
     d38:	mov	x3, #0x3                   	// #3
     d3c:	mov	w1, #0x3a                  	// #58
     d40:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d44:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     d48:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     d4c:	add	x0, x0, #0x0
     d50:	ldr	x1, [x1]
     d54:	ldr	x1, [x1]
     d58:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     d5c:	b	cc0 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv+0xe0>

0000000000000d60 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj>:
     d60:	stp	x19, x20, [sp, #-48]!
     d64:	mov	x19, x0
     d68:	mov	w20, w1
     d6c:	stp	x21, x22, [sp, #16]
     d70:	add	x22, x0, #0x18
     d74:	mov	x0, x22
     d78:	str	x30, [sp, #32]
     d7c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     d80:	ldr	x0, [x19, #128]
     d84:	cbz	x0, ea4 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x144>
     d88:	ldr	w4, [x19, #112]
     d8c:	sub	x0, x0, #0x1
     d90:	str	x0, [x19, #128]
     d94:	mov	w3, w20
     d98:	cmp	x4, w20, uxtw
     d9c:	b.ls	ec4 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x164>  // b.plast
     da0:	ldr	x0, [x19, #152]
     da4:	ldr	x20, [x0, x3, lsl #3]
     da8:	cbz	x20, edc <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x17c>
     dac:	ldr	w0, [x20, #112]
     db0:	cmp	w0, #0x2
     db4:	b.eq	e10 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0xb0>  // b.none
     db8:	cmp	w0, #0x1
     dbc:	mov	w21, w0
     dc0:	b.ne	f1c <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x1bc>  // b.any
     dc4:	ldr	x1, [x20]
     dc8:	mov	w0, #0x3                   	// #3
     dcc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     dd0:	add	x2, x2, #0x0
     dd4:	ldr	x1, [x1, #16]
     dd8:	str	w0, [x20, #112]
     ddc:	cmp	x1, x2
     de0:	b.eq	e40 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0xe0>  // b.none
     de4:	mov	x0, x20
     de8:	blr	x1
     dec:	cbnz	w21, f8c <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x22c>
     df0:	dmb	ish
     df4:	mov	w0, #0x1                   	// #1
     df8:	str	w0, [x20, #136]
     dfc:	mov	x0, x22
     e00:	ldp	x21, x22, [sp, #16]
     e04:	ldr	x30, [sp, #32]
     e08:	ldp	x19, x20, [sp], #48
     e0c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     e10:	ldr	x1, [x19, #144]
     e14:	cbz	x1, f48 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x1e8>
     e18:	ldrb	w21, [x20, #116]
     e1c:	sub	x1, x1, #0x1
     e20:	str	x1, [x19, #144]
     e24:	cbz	w21, f68 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x208>
     e28:	ldr	x1, [x20]
     e2c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     e30:	add	x2, x2, #0x0
     e34:	ldr	x1, [x1, #16]
     e38:	cmp	x1, x2
     e3c:	b.ne	de4 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x84>  // b.any
     e40:	sub	w0, w0, #0x2
     e44:	cmp	w0, #0x1
     e48:	b.hi	efc <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x19c>  // b.pmore
     e4c:	ldr	x1, [x20]
     e50:	mov	w2, #0x4                   	// #4
     e54:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     e58:	add	x0, x0, #0x0
     e5c:	ldr	x1, [x1]
     e60:	str	xzr, [x20, #40]
     e64:	str	w2, [x20, #112]
     e68:	cmp	x1, x0
     e6c:	b.ne	f3c <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x1dc>  // b.any
     e70:	ldr	w0, [x20, #8]
     e74:	cbz	w0, df0 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x90>
     e78:	mov	x0, x19
     e7c:	mov	x1, x20
     e80:	bl	0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     e84:	dmb	ish
     e88:	mov	w0, #0x1                   	// #1
     e8c:	str	w0, [x20, #136]
     e90:	mov	x0, x22
     e94:	ldp	x21, x22, [sp, #16]
     e98:	ldr	x30, [sp, #32]
     e9c:	ldp	x19, x20, [sp], #48
     ea0:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     ea4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ea8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     eac:	add	x2, x2, #0x0
     eb0:	add	x0, x0, #0x0
     eb4:	mov	x4, #0x0                   	// #0
     eb8:	mov	x3, #0x0                   	// #0
     ebc:	mov	w1, #0x11b                 	// #283
     ec0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ec4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ec8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ecc:	add	x2, x2, #0x0
     ed0:	add	x0, x0, #0x0
     ed4:	mov	w1, #0x11d                 	// #285
     ed8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     edc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ee0:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     ee4:	add	x2, x2, #0x0
     ee8:	add	x0, x0, #0x0
     eec:	mov	x4, #0x0                   	// #0
     ef0:	mov	x3, #0x0                   	// #0
     ef4:	mov	w1, #0x11f                 	// #287
     ef8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     efc:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f00:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f04:	add	x2, x2, #0x0
     f08:	add	x0, x0, #0x0
     f0c:	mov	x4, #0x0                   	// #0
     f10:	mov	x3, #0x0                   	// #0
     f14:	mov	w1, #0x28                  	// #40
     f18:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f1c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f20:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f24:	mov	x3, x21
     f28:	add	x2, x2, #0x0
     f2c:	add	x0, x0, #0x0
     f30:	mov	x4, #0x1                   	// #1
     f34:	mov	w1, #0x126                 	// #294
     f38:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f3c:	mov	x0, x20
     f40:	blr	x1
     f44:	b	e70 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x110>
     f48:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f4c:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f50:	add	x2, x2, #0x0
     f54:	add	x0, x0, #0x0
     f58:	mov	x4, #0x0                   	// #0
     f5c:	mov	x3, #0x0                   	// #0
     f60:	mov	w1, #0x122                 	// #290
     f64:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f68:	ldr	x1, [x20]
     f6c:	mov	w0, #0x3                   	// #3
     f70:	ldr	x1, [x1, #16]
     f74:	str	w0, [x20, #112]
     f78:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
     f7c:	add	x0, x0, #0x0
     f80:	cmp	x1, x0
     f84:	b.eq	df0 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x90>  // b.none
     f88:	b	de4 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0x84>
     f8c:	ldr	w0, [x20, #112]
     f90:	b	e40 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj+0xe0>
     f94:	nop

0000000000000f98 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv>:
     f98:	stp	x19, x20, [sp, #-64]!
     f9c:	mov	x19, x0
     fa0:	mov	w20, w1
     fa4:	stp	x23, x24, [sp, #32]
     fa8:	add	x24, x0, #0x18
     fac:	mov	x23, x4
     fb0:	mov	x0, x24
     fb4:	stp	x21, x22, [sp, #16]
     fb8:	mov	w21, w3
     fbc:	mov	x22, x2
     fc0:	str	x30, [sp, #48]
     fc4:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     fc8:	ldr	x0, [x19, #144]
     fcc:	mov	w3, w20
     fd0:	ldr	w4, [x19, #112]
     fd4:	add	x0, x0, #0x1
     fd8:	str	x0, [x19, #144]
     fdc:	cmp	x4, w20, uxtw
     fe0:	b.ls	105c <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xc4>  // b.plast
     fe4:	ldr	x0, [x19, #152]
     fe8:	ldr	x0, [x0, x3, lsl #3]
     fec:	cbz	x0, 1074 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xdc>
     ff0:	ldr	w4, [x0, #112]
     ff4:	cmp	x4, #0x1
     ff8:	b.ne	1094 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xfc>  // b.any
     ffc:	ldr	x2, [x0]
    1000:	mov	w3, #0x2                   	// #2
    1004:	adrp	x1, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1008:	add	x1, x1, #0x0
    100c:	ldr	x2, [x2, #24]
    1010:	str	x22, [x0, #32]
    1014:	str	w3, [x0, #112]
    1018:	str	w21, [x0, #120]
    101c:	cmp	x2, x1
    1020:	b.ne	103c <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv+0xa4>  // b.any
    1024:	mov	x0, x24
    1028:	ldp	x21, x22, [sp, #16]
    102c:	ldp	x23, x24, [sp, #32]
    1030:	ldr	x30, [sp, #48]
    1034:	ldp	x19, x20, [sp], #64
    1038:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    103c:	mov	x1, x23
    1040:	blr	x2
    1044:	mov	x0, x24
    1048:	ldp	x21, x22, [sp, #16]
    104c:	ldp	x23, x24, [sp, #32]
    1050:	ldr	x30, [sp, #48]
    1054:	ldp	x19, x20, [sp], #64
    1058:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    105c:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1060:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1064:	add	x2, x2, #0x0
    1068:	add	x0, x0, #0x0
    106c:	mov	w1, #0x135                 	// #309
    1070:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1074:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1078:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    107c:	add	x2, x2, #0x0
    1080:	add	x0, x0, #0x0
    1084:	mov	x4, #0x0                   	// #0
    1088:	mov	x3, #0x0                   	// #0
    108c:	mov	w1, #0x137                 	// #311
    1090:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1094:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1098:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    109c:	add	x2, x2, #0x0
    10a0:	add	x0, x0, #0x0
    10a4:	mov	x3, #0x1                   	// #1
    10a8:	mov	w1, #0x138                 	// #312
    10ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000010b0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE>:
    10b0:	stp	x19, x20, [sp, #-32]!
    10b4:	mov	x19, x0
    10b8:	ldr	w0, [x1, #8]
    10bc:	str	x30, [sp, #16]
    10c0:	cbz	w0, 1174 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xc4>
    10c4:	ldr	x0, [x19, #160]
    10c8:	cbz	x0, 1180 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xd0>
    10cc:	str	xzr, [x1, #128]
    10d0:	add	x2, x0, #0x1
    10d4:	ldr	x4, [x19, #176]
    10d8:	str	x1, [x4, #128]
    10dc:	str	x2, [x19, #160]
    10e0:	str	x1, [x19, #176]
    10e4:	ldr	w1, [x19, #12]
    10e8:	cmp	x2, x1
    10ec:	b.ls	1174 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xc4>  // b.plast
    10f0:	ldr	x20, [x19, #168]
    10f4:	add	x2, x19, #0xa0
    10f8:	ldr	x1, [x20, #128]
    10fc:	str	x1, [x2, #8]
    1100:	cbz	x1, 11c0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x110>
    1104:	ldr	w3, [x20, #112]
    1108:	str	x0, [x19, #160]
    110c:	cmp	x3, #0x4
    1110:	b.ne	11d4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x124>  // b.any
    1114:	strb	wzr, [x20, #48]
    1118:	str	wzr, [x20, #112]
    111c:	dmb	ish
    1120:	str	wzr, [x20, #136]
    1124:	ldr	x1, [x20]
    1128:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    112c:	add	x0, x0, #0x0
    1130:	ldr	x1, [x1, #40]
    1134:	cmp	x1, x0
    1138:	b.ne	11c8 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x118>  // b.any
    113c:	ldr	w0, [x20, #24]
    1140:	add	w0, w0, #0x1
    1144:	str	w0, [x20, #24]
    1148:	ldr	w1, [x19, #16]
    114c:	cmp	w1, #0x0
    1150:	ccmp	w0, w1, #0x0, ne  // ne = any
    1154:	b.cs	1174 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xc4>  // b.hs, b.nlast
    1158:	ldr	x0, [x19, #184]
    115c:	cbnz	x0, 119c <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0xec>
    1160:	dup	v0.2d, x20
    1164:	str	xzr, [x20, #128]
    1168:	mov	x0, #0x1                   	// #1
    116c:	str	x0, [x19, #184]
    1170:	str	q0, [x19, #192]
    1174:	ldr	x30, [sp, #16]
    1178:	ldp	x19, x20, [sp], #32
    117c:	ret
    1180:	dup	v0.2d, x1
    1184:	str	xzr, [x1, #128]
    1188:	mov	x1, #0x1                   	// #1
    118c:	mov	x2, x1
    1190:	str	x1, [x19, #160]
    1194:	stur	q0, [x19, #168]
    1198:	b	10e4 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x34>
    119c:	str	xzr, [x20, #128]
    11a0:	add	x0, x0, #0x1
    11a4:	ldr	x30, [sp, #16]
    11a8:	ldr	x2, [x19, #200]
    11ac:	str	x20, [x2, #128]
    11b0:	str	x0, [x19, #184]
    11b4:	str	x20, [x19, #200]
    11b8:	ldp	x19, x20, [sp], #32
    11bc:	ret
    11c0:	str	xzr, [x2, #16]
    11c4:	b	1104 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x54>
    11c8:	mov	x0, x20
    11cc:	blr	x1
    11d0:	b	113c <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE+0x8c>
    11d4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    11d8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    11dc:	add	x2, x2, #0x0
    11e0:	add	x0, x0, #0x0
    11e4:	mov	x4, #0x4                   	// #4
    11e8:	mov	w1, #0x144                 	// #324
    11ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000011f0 <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv>:
    11f0:	ldr	x2, [x0, #184]
    11f4:	mov	x1, x0
    11f8:	mov	x0, #0x0                   	// #0
    11fc:	cbz	x2, 1218 <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv+0x28>
    1200:	ldr	x0, [x1, #192]
    1204:	ldr	x3, [x0, #128]
    1208:	str	x3, [x1, #192]
    120c:	cbz	x3, 121c <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv+0x2c>
    1210:	sub	x2, x2, #0x1
    1214:	str	x2, [x1, #184]
    1218:	ret
    121c:	sub	x2, x2, #0x1
    1220:	str	x2, [x1, #184]
    1224:	str	xzr, [x1, #200]
    1228:	b	1218 <_ZN11__sanitizer14ThreadRegistry13QuarantinePopEv+0x28>
    122c:	nop

0000000000001230 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm>:
    1230:	stp	x19, x20, [sp, #-48]!
    1234:	mov	x19, x0
    1238:	mov	w20, w1
    123c:	stp	x21, x22, [sp, #16]
    1240:	add	x22, x0, #0x18
    1244:	mov	x21, x2
    1248:	mov	x0, x22
    124c:	str	x30, [sp, #32]
    1250:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    1254:	ldr	w4, [x19, #112]
    1258:	mov	w3, w20
    125c:	cmp	x4, w20, uxtw
    1260:	b.ls	12a0 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0x70>  // b.plast
    1264:	ldr	x0, [x19, #152]
    1268:	ldr	x1, [x0, x3, lsl #3]
    126c:	cbz	x1, 12b8 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0x88>
    1270:	ldr	w4, [x1, #112]
    1274:	cbz	x4, 12d8 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xa8>
    1278:	cmp	x4, #0x4
    127c:	b.eq	12f4 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xc4>  // b.none
    1280:	ldr	x3, [x1, #40]
    1284:	cbnz	x3, 1310 <_ZN11__sanitizer14ThreadRegistry15SetThreadUserIdEjm+0xe0>
    1288:	ldr	x30, [sp, #32]
    128c:	str	x21, [x1, #40]
    1290:	mov	x0, x22
    1294:	ldp	x21, x22, [sp, #16]
    1298:	ldp	x19, x20, [sp], #48
    129c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    12a0:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12a4:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12a8:	add	x2, x2, #0x0
    12ac:	add	x0, x0, #0x0
    12b0:	mov	w1, #0x156                 	// #342
    12b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12b8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12bc:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12c0:	add	x2, x2, #0x0
    12c4:	add	x0, x0, #0x0
    12c8:	mov	x4, #0x0                   	// #0
    12cc:	mov	x3, #0x0                   	// #0
    12d0:	mov	w1, #0x158                 	// #344
    12d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12d8:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12dc:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12e0:	add	x2, x2, #0x0
    12e4:	add	x0, x0, #0x0
    12e8:	mov	x3, #0x0                   	// #0
    12ec:	mov	w1, #0x159                 	// #345
    12f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12f4:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12f8:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    12fc:	add	x2, x2, #0x0
    1300:	add	x0, x0, #0x0
    1304:	mov	x3, x4
    1308:	mov	w1, #0x15a                 	// #346
    130c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1310:	adrp	x2, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1314:	adrp	x0, 0 <_ZN11__sanitizer14ThreadRegistry14QuarantinePushEPNS_17ThreadContextBaseE.part.0>
    1318:	add	x2, x2, #0x0
    131c:	add	x0, x0, #0x0
    1320:	mov	x4, #0x0                   	// #0
    1324:	mov	w1, #0x15b                 	// #347
    1328:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase6OnDeadEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase6OnDeadEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase8OnJoinedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase8OnJoinedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase10OnFinishedEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase10OnFinishedEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase9OnStartedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase9OnStartedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase9OnCreatedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase9OnCreatedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase7OnResetEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase7OnResetEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase10OnDetachedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase10OnDetachedEPv>:
   0:	ret

sanitizer_type_traits.cpp.o:     file format elf64-littleaarch64


sanitizer_win.cpp.o:     file format elf64-littleaarch64


sanitizer_termination.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer14AddDieCallbackEPFvvE>:
   0:	adrp	x2, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
   4:	add	x1, x2, #0x0
   8:	ldr	x3, [x2]
   c:	cbz	x3, 3c <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x3c>
  10:	ldr	x3, [x1, #8]
  14:	cbz	x3, 54 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x54>
  18:	ldr	x3, [x1, #16]
  1c:	cbz	x3, 5c <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x5c>
  20:	ldr	x3, [x1, #24]
  24:	cbz	x3, 64 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x64>
  28:	ldr	x3, [x1, #32]
  2c:	mov	w1, #0x0                   	// #0
  30:	cbz	x3, 6c <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x6c>
  34:	mov	w0, w1
  38:	ret
  3c:	mov	w3, #0x0                   	// #0
  40:	add	x2, x2, #0x0
  44:	mov	w1, #0x1                   	// #1
  48:	str	x0, [x2, w3, sxtw #3]
  4c:	mov	w0, w1
  50:	ret
  54:	mov	w3, #0x1                   	// #1
  58:	b	40 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x40>
  5c:	mov	w3, #0x2                   	// #2
  60:	b	40 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x40>
  64:	mov	w3, #0x3                   	// #3
  68:	b	40 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x40>
  6c:	mov	w3, #0x4                   	// #4
  70:	b	40 <_ZN11__sanitizer14AddDieCallbackEPFvvE+0x40>
  74:	nop

0000000000000078 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>:
  78:	adrp	x2, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
  7c:	mov	x1, x0
  80:	ldr	x3, [x2]
  84:	cmp	x0, x3
  88:	b.eq	c8 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x50>  // b.none
  8c:	add	x0, x2, #0x0
  90:	ldr	x3, [x0, #8]
  94:	cmp	x1, x3
  98:	b.eq	100 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x88>  // b.none
  9c:	ldr	x3, [x0, #16]
  a0:	cmp	x1, x3
  a4:	b.eq	10c <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x94>  // b.none
  a8:	ldr	x3, [x0, #24]
  ac:	cmp	x1, x3
  b0:	b.eq	118 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0xa0>  // b.none
  b4:	ldr	x3, [x0, #32]
  b8:	mov	w0, #0x0                   	// #0
  bc:	cmp	x3, x1
  c0:	b.eq	124 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0xac>  // b.none
  c4:	ret
  c8:	mov	w1, #0x1                   	// #1
  cc:	mov	w0, #0x0                   	// #0
  d0:	stp	x19, x30, [sp, #-16]!
  d4:	add	x19, x2, #0x0
  d8:	mov	w2, #0x4                   	// #4
  dc:	sub	w2, w2, w0
  e0:	add	x1, x19, w1, sxtw #3
  e4:	add	x0, x19, w0, sxtw #3
  e8:	sbfiz	x2, x2, #3, #32
  ec:	bl	0 <_ZN11__sanitizer16internal_memmoveEPvPKvm>
  f0:	mov	w0, #0x1                   	// #1
  f4:	str	xzr, [x19, #32]
  f8:	ldp	x19, x30, [sp], #16
  fc:	ret
 100:	mov	w1, #0x2                   	// #2
 104:	mov	w0, #0x1                   	// #1
 108:	b	d0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x58>
 10c:	mov	w1, #0x3                   	// #3
 110:	mov	w0, #0x2                   	// #2
 114:	b	d0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x58>
 118:	mov	w1, #0x4                   	// #4
 11c:	mov	w0, #0x3                   	// #3
 120:	b	d0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x58>
 124:	mov	w1, #0x5                   	// #5
 128:	mov	w0, #0x4                   	// #4
 12c:	b	d0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE+0x58>

0000000000000130 <_ZN11__sanitizer18SetUserDieCallbackEPFvvE>:
 130:	adrp	x1, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 134:	str	x0, [x1]
 138:	ret
 13c:	nop

0000000000000140 <_ZN11__sanitizer3DieEv>:
 140:	stp	x19, x20, [sp, #-32]!
 144:	adrp	x20, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 148:	add	x0, x20, #0x0
 14c:	ldr	x0, [x0, #40]
 150:	str	x30, [sp, #16]
 154:	cbz	x0, 15c <_ZN11__sanitizer3DieEv+0x1c>
 158:	blr	x0
 15c:	add	x20, x20, #0x0
 160:	mov	x19, #0x4                   	// #4
 164:	ldr	x0, [x20, x19, lsl #3]
 168:	cbz	x0, 170 <_ZN11__sanitizer3DieEv+0x30>
 16c:	blr	x0
 170:	sub	x19, x19, #0x1
 174:	cmn	x19, #0x1
 178:	b.ne	164 <_ZN11__sanitizer3DieEv+0x24>  // b.any
 17c:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 180:	ldr	x0, [x0]
 184:	ldrb	w1, [x0, #228]
 188:	cbz	w1, 190 <_ZN11__sanitizer3DieEv+0x50>
 18c:	bl	0 <_ZN11__sanitizer5AbortEv>
 190:	ldr	w0, [x0, #224]
 194:	bl	0 <_ZN11__sanitizer14internal__exitEi>

0000000000000198 <_ZN11__sanitizer22SetCheckFailedCallbackEPFvPKciS1_yyE>:
 198:	adrp	x1, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 19c:	str	x0, [x1]
 1a0:	ret
 1a4:	nop

00000000000001a8 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>:
 1a8:	stp	x19, x20, [sp, #-48]!
 1ac:	adrp	x6, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 1b0:	add	x6, x6, #0x0
 1b4:	add	x5, x6, #0x38
 1b8:	mov	x19, x0
 1bc:	mov	w20, w1
 1c0:	stp	x21, x22, [sp, #16]
 1c4:	mov	x21, x2
 1c8:	mov	x22, x3
 1cc:	stp	x23, x30, [sp, #32]
 1d0:	mov	x23, x4
 1d4:	ldxr	w7, [x5]
 1d8:	add	w8, w7, #0x1
 1dc:	stlxr	w9, w8, [x5]
 1e0:	cbnz	w9, 1d4 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x2c>
 1e4:	dmb	ish
 1e8:	cmp	w7, #0xa
 1ec:	b.hi	220 <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x78>  // b.pmore
 1f0:	ldr	x5, [x6, #48]
 1f4:	cbz	x5, 1fc <_ZN11__sanitizer11CheckFailedEPKciS1_yy+0x54>
 1f8:	blr	x5
 1fc:	mov	x5, x23
 200:	mov	x4, x22
 204:	mov	x3, x21
 208:	mov	w2, w20
 20c:	mov	x1, x19
 210:	adrp	x0, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 21c:	bl	140 <_ZN11__sanitizer3DieEv>
 220:	mov	w0, #0x2                   	// #2
 224:	bl	0 <_ZN11__sanitizer15SleepForSecondsEi>
 228:	brk	#0x3e8
 22c:	nop

0000000000000230 <__sanitizer_set_death_callback>:
 230:	adrp	x1, 0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
 234:	str	x0, [x1]
 238:	ret

sanitizer_common_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>:
   0:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
   4:	ldr	x3, [x1]
   8:	cbnz	x3, 14 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE+0x14>
   c:	str	x0, [x1]
  10:	ret
  14:	str	x30, [sp, #-16]!
  18:	adrp	x2, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  1c:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  20:	add	x2, x2, #0x0
  24:	add	x0, x0, #0x0
  28:	mov	x4, #0x0                   	// #0
  2c:	mov	w1, #0x17                  	// #23
  30:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  34:	nop

0000000000000038 <_ZN11__sanitizer18StackDepotGetStatsEv>:
  38:	mov	x0, #0x0                   	// #0
  3c:	ret

0000000000000040 <_ZN11__sanitizer16BackgroundThreadEPv>:
  40:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  44:	stp	x19, x20, [sp, #-128]!
  48:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  4c:	ldr	x0, [x0]
  50:	stp	x21, x22, [sp, #16]
  54:	add	x1, x1, #0x0
  58:	str	x1, [sp, #120]
  5c:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
  60:	ldp	x21, x19, [x0, #136]
  64:	stp	x23, x24, [sp, #32]
  68:	mov	x22, #0x0                   	// #0
  6c:	stp	x27, x28, [sp, #64]
  70:	mov	x27, #0xcccccccccccccccc    	// #-3689348814741910324
  74:	mov	w23, #0x0                   	// #0
  78:	stp	d8, d9, [sp, #96]
  7c:	mov	x20, #0x0                   	// #0
  80:	cmp	x21, #0x0
  84:	cset	w24, ne  // ne = any
  88:	ldr	d9, [x1]
  8c:	fmov	d8, xzr
  90:	movk	x27, #0xcccd
  94:	stp	x25, x26, [sp, #48]
  98:	adrp	x25, 0 <_ZN11__sanitizer17current_verbosityE>
  9c:	ldrb	w26, [x0, #160]
  a0:	str	x30, [sp, #80]
  a4:	nop
  a8:	mov	w0, #0x64                  	// #100
  ac:	bl	0 <_ZN11__sanitizer14SleepForMillisEi>
  b0:	bl	0 <_ZN11__sanitizer6GetRSSEv>
  b4:	lsr	x28, x0, #20
  b8:	ldr	x1, [x25]
  bc:	ldr	w0, [x1]
  c0:	cbz	w0, 104 <_ZN11__sanitizer16BackgroundThreadEPv+0xc4>
  c4:	add	x0, x20, x20, lsl #1
  c8:	lsl	x0, x0, #2
  cc:	sub	x0, x0, x20
  d0:	umulh	x0, x0, x27
  d4:	cmp	x28, x0, lsr #3
  d8:	b.hi	18c <_ZN11__sanitizer16BackgroundThreadEPv+0x14c>  // b.pmore
  dc:	bl	38 <_ZN11__sanitizer18StackDepotGetStatsEv>
  e0:	mov	x5, x0
  e4:	cbz	x0, 104 <_ZN11__sanitizer16BackgroundThreadEPv+0xc4>
  e8:	add	x1, x22, x22, lsl #1
  ec:	ldr	x3, [x0, #8]
  f0:	lsl	x1, x1, #2
  f4:	sub	x1, x1, x22
  f8:	umulh	x1, x1, x27
  fc:	cmp	x3, x1, lsr #3
 100:	b.hi	1ec <_ZN11__sanitizer16BackgroundThreadEPv+0x1ac>  // b.pmore
 104:	cmp	w24, #0x0
 108:	ccmp	x21, x28, #0x2, ne  // ne = any
 10c:	b.cc	220 <_ZN11__sanitizer16BackgroundThreadEPv+0x1e0>  // b.lo, b.ul, b.last
 110:	cbz	x19, 150 <_ZN11__sanitizer16BackgroundThreadEPv+0x110>
 114:	cmp	x19, x28
 118:	eor	w0, w23, #0x1
 11c:	cset	w1, cc  // cc = lo, ul, last
 120:	ands	w1, w1, w0
 124:	b.ne	1b0 <_ZN11__sanitizer16BackgroundThreadEPv+0x170>  // b.any
 128:	cmp	w23, #0x0
 12c:	ccmp	x19, x28, #0x0, ne  // ne = any
 130:	b.cc	150 <_ZN11__sanitizer16BackgroundThreadEPv+0x110>  // b.lo, b.ul, b.last
 134:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 138:	mov	w23, #0x0                   	// #0
 13c:	ldr	x1, [x0]
 140:	cbz	x1, 150 <_ZN11__sanitizer16BackgroundThreadEPv+0x110>
 144:	mov	w0, #0x0                   	// #0
 148:	blr	x1
 14c:	nop
 150:	cbz	w26, a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x68>
 154:	scvtf	d0, d8
 158:	scvtf	d1, x28
 15c:	fmul	d0, d0, d9
 160:	fcmpe	d1, d0
 164:	b.le	a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x68>
 168:	mov	x1, x28
 16c:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 170:	add	x0, x0, #0x0
 174:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 178:	fmov	d8, x28
 17c:	mov	x1, #0x14                  	// #20
 180:	mov	x0, #0x5a                  	// #90
 184:	bl	0 <__sanitizer_print_memory_profile>
 188:	b	a8 <_ZN11__sanitizer16BackgroundThreadEPv+0x68>
 18c:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 190:	mov	x20, x28
 194:	mov	x2, x28
 198:	ldr	x1, [x0]
 19c:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1a0:	add	x0, x0, #0x0
 1a4:	ldr	x1, [x1]
 1a8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 1ac:	b	dc <_ZN11__sanitizer16BackgroundThreadEPv+0x9c>
 1b0:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1b4:	mov	w23, w1
 1b8:	mov	x3, x28
 1bc:	mov	x2, x19
 1c0:	ldr	x5, [x0]
 1c4:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1c8:	add	x0, x0, #0x0
 1cc:	ldr	x1, [x5]
 1d0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1d4:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 1d8:	ldr	x1, [x0]
 1dc:	cbz	x1, 150 <_ZN11__sanitizer16BackgroundThreadEPv+0x110>
 1e0:	mov	w0, #0x1                   	// #1
 1e4:	blr	x1
 1e8:	b	150 <_ZN11__sanitizer16BackgroundThreadEPv+0x110>
 1ec:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1f0:	lsr	x3, x3, #20
 1f4:	ldr	x2, [x5]
 1f8:	str	x5, [sp, #112]
 1fc:	ldr	x1, [x0]
 200:	ldr	x0, [sp, #120]
 204:	ldr	x1, [x1]
 208:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 20c:	ldr	x5, [sp, #112]
 210:	cmp	w24, #0x0
 214:	ccmp	x21, x28, #0x2, ne  // ne = any
 218:	ldr	x22, [x5, #8]
 21c:	b.cs	110 <_ZN11__sanitizer16BackgroundThreadEPv+0xd0>  // b.hs, b.nlast
 220:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 224:	mov	x3, x28
 228:	mov	x2, x21
 22c:	ldr	x1, [x0]
 230:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 234:	add	x0, x0, #0x0
 238:	ldr	x1, [x1]
 23c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 240:	bl	0 <_ZN11__sanitizer14DumpProcessMapEv>
 244:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000248 <_ZN11__sanitizer13WriteToSyslogEPKc>:
 248:	stp	x19, x20, [sp, #-96]!
 24c:	stp	x23, x24, [sp, #32]
 250:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
 254:	ldr	x19, [x23]
 258:	stp	x21, x22, [sp, #16]
 25c:	mov	x21, x0
 260:	str	xzr, [sp, #64]
 264:	ldr	x1, [x19]
 268:	str	x30, [sp, #48]
 26c:	stp	xzr, xzr, [sp, #72]
 270:	cbz	x1, 388 <_ZN11__sanitizer13WriteToSyslogEPKc+0x140>
 274:	sub	x0, x1, #0x1
 278:	tst	x0, x1
 27c:	b.ne	3f4 <_ZN11__sanitizer13WriteToSyslogEPKc+0x1ac>  // b.any
 280:	neg	x19, x1
 284:	mov	x22, #0xffff                	// #65535
 288:	add	x1, x1, x22
 28c:	mov	w2, #0x0                   	// #0
 290:	and	x19, x1, x19
 294:	adrp	x24, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 298:	mov	x0, x19
 29c:	add	x1, x24, #0x0
 2a0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 2a4:	mov	x20, x0
 2a8:	ldr	x1, [sp, #64]
 2ac:	ldr	x2, [sp, #80]
 2b0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2b4:	ldp	x0, x1, [sp, #64]
 2b8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 2bc:	stp	x20, x19, [sp, #64]
 2c0:	ldr	x2, [sp, #80]
 2c4:	cmp	x2, x22
 2c8:	b.ls	340 <_ZN11__sanitizer13WriteToSyslogEPKc+0xf8>  // b.plast
 2cc:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 2d0:	mov	x2, x21
 2d4:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 2d8:	add	x1, x1, #0x0
 2dc:	ldr	q0, [x0]
 2e0:	add	x0, sp, #0x40
 2e4:	str	q0, [sp, #80]
 2e8:	strb	wzr, [x20]
 2ec:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2f0:	ldr	x19, [sp, #64]
 2f4:	b	308 <_ZN11__sanitizer13WriteToSyslogEPKc+0xc0>
 2f8:	strb	wzr, [x0]
 2fc:	mov	x0, x19
 300:	add	x19, x1, #0x1
 304:	bl	0 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>
 308:	mov	w1, #0xa                   	// #10
 30c:	mov	x0, x19
 310:	bl	0 <_ZN11__sanitizer15internal_strchrEPKci>
 314:	mov	x1, x0
 318:	cbnz	x0, 2f8 <_ZN11__sanitizer13WriteToSyslogEPKc+0xb0>
 31c:	ldrb	w0, [x19]
 320:	cbnz	w0, 364 <_ZN11__sanitizer13WriteToSyslogEPKc+0x11c>
 324:	ldp	x0, x1, [sp, #64]
 328:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 32c:	ldp	x21, x22, [sp, #16]
 330:	ldp	x23, x24, [sp, #32]
 334:	ldr	x30, [sp, #48]
 338:	ldp	x19, x20, [sp], #96
 33c:	ret
 340:	cmp	x19, x22
 344:	b.ls	398 <_ZN11__sanitizer13WriteToSyslogEPKc+0x150>  // b.plast
 348:	mov	x3, #0x10000               	// #65536
 34c:	add	x0, x20, x2
 350:	mov	w1, #0x0                   	// #0
 354:	sub	x2, x3, x2
 358:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 35c:	ldr	x20, [sp, #64]
 360:	b	2cc <_ZN11__sanitizer13WriteToSyslogEPKc+0x84>
 364:	mov	x0, x19
 368:	bl	0 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>
 36c:	ldp	x0, x1, [sp, #64]
 370:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 374:	ldp	x21, x22, [sp, #16]
 378:	ldp	x23, x24, [sp, #32]
 37c:	ldr	x30, [sp, #48]
 380:	ldp	x19, x20, [sp], #96
 384:	ret
 388:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 38c:	mov	x1, x0
 390:	str	x0, [x19]
 394:	b	274 <_ZN11__sanitizer13WriteToSyslogEPKc+0x2c>
 398:	ldr	x23, [x23]
 39c:	ldr	x0, [x23]
 3a0:	cbz	x0, 404 <_ZN11__sanitizer13WriteToSyslogEPKc+0x1bc>
 3a4:	sub	x1, x0, #0x1
 3a8:	tst	x1, x0
 3ac:	b.ne	3f4 <_ZN11__sanitizer13WriteToSyslogEPKc+0x1ac>  // b.any
 3b0:	mov	x1, #0xffff                	// #65535
 3b4:	add	x19, x0, x1
 3b8:	neg	x0, x0
 3bc:	add	x1, x24, #0x0
 3c0:	and	x19, x19, x0
 3c4:	mov	w2, #0x0                   	// #0
 3c8:	mov	x0, x19
 3cc:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3d0:	ldr	x1, [sp, #64]
 3d4:	mov	x20, x0
 3d8:	ldr	x2, [sp, #80]
 3dc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3e0:	ldp	x0, x1, [sp, #64]
 3e4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 3e8:	stp	x20, x19, [sp, #64]
 3ec:	ldr	x2, [sp, #80]
 3f0:	b	348 <_ZN11__sanitizer13WriteToSyslogEPKc+0x100>
 3f4:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 400:	bl	0 <_ZN11__sanitizer3DieEv>
 404:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 408:	str	x0, [x23]
 40c:	b	3a4 <_ZN11__sanitizer13WriteToSyslogEPKc+0x15c>

0000000000000410 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv>:
 410:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 414:	ldr	x0, [x0]
 418:	ldp	x1, x2, [x0, #136]
 41c:	orr	x1, x1, x2
 420:	cbnz	x1, 42c <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x1c>
 424:	ldrb	w0, [x0, #160]
 428:	cbz	w0, 448 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x38>
 42c:	adrp	x0, 0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_>
 430:	ldr	x0, [x0]
 434:	cbz	x0, 448 <_ZN11__sanitizer25MaybeStartBackgroudThreadEv+0x38>
 438:	adrp	x0, 40 <_ZN11__sanitizer16BackgroundThreadEPv>
 43c:	mov	x1, #0x0                   	// #0
 440:	add	x0, x0, #0x0
 444:	b	0 <_ZN11__sanitizer21internal_start_threadEPFvPvES0_>
 448:	ret
 44c:	nop

0000000000000450 <_ZN11__sanitizer21SetSandboxingCallbackEPFvvE>:
 450:	adrp	x1, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 454:	str	x0, [x1]
 458:	ret
 45c:	nop

0000000000000460 <__sanitizer_sandbox_on_notify>:
 460:	str	x30, [sp, #-16]!
 464:	bl	0 <_ZN11__sanitizer28PlatformPrepareForSandboxingEP29__sanitizer_sandbox_arguments>
 468:	adrp	x0, 0 <_ZN11__sanitizer31SetSoftRssLimitExceededCallbackEPFvbE>
 46c:	ldr	x0, [x0]
 470:	cbz	x0, 480 <__sanitizer_sandbox_on_notify+0x20>
 474:	ldr	x30, [sp], #16
 478:	mov	x16, x0
 47c:	br	x16
 480:	ldr	x30, [sp], #16
 484:	ret

sanitizer_allocator_checks.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer16SetErrnoToENOMEMEv>:
   0:	str	x30, [sp, #-16]!
   4:	bl	0 <__errno_location>
   8:	mov	w1, #0xc                   	// #12
   c:	ldr	x30, [sp], #16
  10:	str	w1, [x0]
  14:	ret

sanitizer_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>:
   0:	stp	x19, x20, [sp, #-176]!
   4:	stp	x23, x24, [sp, #32]
   8:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
   c:	ldr	x19, [x23]
  10:	stp	x21, x22, [sp, #16]
  14:	mov	x21, x0
  18:	stp	x25, x30, [sp, #48]
  1c:	mov	x22, x2
  20:	ldr	x1, [x19]
  24:	str	xzr, [sp, #64]
  28:	stp	xzr, xzr, [sp, #72]
  2c:	cbz	x1, 22c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x22c>
  30:	sub	x19, x1, #0x1
  34:	ands	x19, x19, x1
  38:	b.ne	340 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x340>  // b.any
  3c:	add	x25, x1, #0xfff
  40:	neg	x1, x1
  44:	and	x25, x25, x1
  48:	mov	w2, #0x0                   	// #0
  4c:	mov	x0, x25
  50:	adrp	x24, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
  54:	add	x1, x24, #0x0
  58:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  5c:	ldr	x1, [sp, #64]
  60:	mov	x20, x0
  64:	ldr	x2, [sp, #80]
  68:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  6c:	ldp	x0, x1, [sp, #64]
  70:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
  74:	stp	x20, x25, [sp, #64]
  78:	ldr	x2, [sp, #80]
  7c:	cmp	x2, #0xfff
  80:	b.hi	a4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xa4>  // b.pmore
  84:	cmp	x25, #0xfff
  88:	b.ls	2e8 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x2e8>  // b.plast
  8c:	mov	x3, #0x1000                	// #4096
  90:	add	x0, x20, x2
  94:	mov	w1, #0x0                   	// #0
  98:	sub	x2, x3, x2
  9c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  a0:	ldr	x20, [sp, #64]
  a4:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
  a8:	ldr	q0, [x0]
  ac:	str	q0, [sp, #80]
  b0:	strb	wzr, [x20]
  b4:	ldrb	w0, [x22, #8]
  b8:	cbnz	w0, 1d0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1d0>
  bc:	ldr	x2, [x21, #8]
  c0:	cbz	x2, d4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xd4>
  c4:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
  c8:	add	x0, sp, #0x40
  cc:	add	x1, x1, #0x0
  d0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  d4:	ldr	x1, [sp, #80]
  d8:	ldr	x0, [sp, #64]
  dc:	cbz	x1, 350 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x350>
  e0:	ldrb	w1, [x0]
  e4:	cbz	w1, 1b0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1b0>
  e8:	movi	v0.4s, #0x0
  ec:	add	x25, sp, #0x60
  f0:	mov	x2, #0x10                  	// #16
  f4:	mov	w1, #0x0                   	// #0
  f8:	add	x0, x25, #0x1c
  fc:	str	xzr, [sp, #96]
 100:	str	wzr, [sp, #120]
 104:	stur	q0, [sp, #104]
 108:	strb	wzr, [sp, #140]
 10c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 110:	movi	v0.4s, #0x0
 114:	mov	x0, x25
 118:	ldr	x2, [x21]
 11c:	str	xzr, [sp, #144]
 120:	ldr	x1, [sp, #64]
 124:	stur	q0, [sp, #152]
 128:	bl	0 <_ZN11__sanitizer12LoadedModule3setEPKcm>
 12c:	ldrh	w3, [x21, #24]
 130:	cbz	w3, 160 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x160>
 134:	ldr	x0, [x21, #16]
 138:	mov	w20, #0x0                   	// #0
 13c:	nop
 140:	ldr	w1, [x0, x19]
 144:	add	x2, x0, x19
 148:	cmp	w1, #0x1
 14c:	b.eq	1e4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x1e4>  // b.none
 150:	add	w20, w20, #0x1
 154:	add	x19, x19, #0x38
 158:	cmp	w3, w20
 15c:	b.gt	140 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x140>
 160:	ldr	x19, [x22]
 164:	mov	x0, #0xe38f                	// #58255
 168:	movk	x0, #0x8e38, lsl #16
 16c:	movk	x0, #0x38e3, lsl #32
 170:	ldp	x4, x3, [x19, #8]
 174:	movk	x0, #0xe38e, lsl #48
 178:	umulh	x4, x4, x0
 17c:	lsr	x4, x4, #6
 180:	cmp	x3, x4
 184:	b.hi	37c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x37c>  // b.pmore
 188:	add	x0, x3, #0x1
 18c:	b.eq	23c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x23c>  // b.none
 190:	ldr	x21, [x19]
 194:	add	x3, x3, x3, lsl #3
 198:	str	x0, [x19, #16]
 19c:	mov	x1, x25
 1a0:	add	x0, x21, x3, lsl #3
 1a4:	mov	x2, #0x48                  	// #72
 1a8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 1ac:	ldr	x0, [sp, #64]
 1b0:	ldr	x1, [sp, #72]
 1b4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 1b8:	mov	w0, #0x0                   	// #0
 1bc:	ldp	x21, x22, [sp, #16]
 1c0:	ldp	x23, x24, [sp, #32]
 1c4:	ldp	x25, x30, [sp, #48]
 1c8:	ldp	x19, x20, [sp], #176
 1cc:	ret
 1d0:	ldr	x0, [sp, #64]
 1d4:	strb	wzr, [x22, #8]
 1d8:	ldr	x1, [sp, #80]
 1dc:	bl	0 <_ZN11__sanitizer20ReadBinaryNameCachedEPcm>
 1e0:	b	d4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0xd4>
 1e4:	ldr	x1, [x21]
 1e8:	mov	x0, x25
 1ec:	ldr	x4, [x2, #16]
 1f0:	mov	x5, #0x0                   	// #0
 1f4:	ldr	w3, [x2, #4]
 1f8:	add	w20, w20, #0x1
 1fc:	ldr	x2, [x2, #40]
 200:	add	x1, x1, x4
 204:	ubfx	x4, x3, #1, #1
 208:	and	w3, w3, #0x1
 20c:	add	x2, x1, x2
 210:	bl	0 <_ZN11__sanitizer12LoadedModule15addAddressRangeEmmbbPKc>
 214:	ldrh	w3, [x21, #24]
 218:	add	x19, x19, #0x38
 21c:	cmp	w20, w3
 220:	b.ge	160 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x160>  // b.tcont
 224:	ldr	x0, [x21, #16]
 228:	b	140 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x140>
 22c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 230:	mov	x1, x0
 234:	str	x0, [x19]
 238:	b	30 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x30>
 23c:	tst	x0, x3
 240:	b.eq	27c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x27c>  // b.none
 244:	clz	x2, x0
 248:	mov	w1, #0x3f                  	// #63
 24c:	sub	w1, w1, w2
 250:	mov	x2, #0x1                   	// #1
 254:	add	w4, w1, #0x1
 258:	lsl	x4, x2, x4
 25c:	cmp	x0, x4
 260:	b.cs	3d8 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x3d8>  // b.hs, b.nlast
 264:	lsl	x1, x2, x1
 268:	cmp	x0, x1
 26c:	b.ls	3b8 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x3b8>  // b.plast
 270:	cmp	x3, x4
 274:	b.hi	3a0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x3a0>  // b.pmore
 278:	mov	x0, x4
 27c:	ldr	x23, [x23]
 280:	add	x0, x0, x0, lsl #3
 284:	lsl	x20, x0, #3
 288:	ldr	x0, [x23]
 28c:	cbz	x0, 394 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x394>
 290:	sub	x1, x0, #0x1
 294:	tst	x1, x0
 298:	b.ne	340 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x340>  // b.any
 29c:	add	x20, x20, x1
 2a0:	neg	x0, x0
 2a4:	and	x20, x20, x0
 2a8:	add	x1, x24, #0x0
 2ac:	mov	w2, #0x0                   	// #0
 2b0:	mov	x0, x20
 2b4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 2b8:	mov	x21, x0
 2bc:	ldr	x2, [x19, #16]
 2c0:	ldr	x1, [x19]
 2c4:	add	x2, x2, x2, lsl #3
 2c8:	lsl	x2, x2, #3
 2cc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2d0:	ldp	x0, x1, [x19]
 2d4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 2d8:	stp	x21, x20, [x19]
 2dc:	ldr	x3, [x19, #16]
 2e0:	add	x0, x3, #0x1
 2e4:	b	194 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x194>
 2e8:	ldr	x20, [x23]
 2ec:	ldr	x0, [x20]
 2f0:	cbz	x0, 370 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x370>
 2f4:	sub	x1, x0, #0x1
 2f8:	tst	x1, x0
 2fc:	b.ne	340 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x340>  // b.any
 300:	add	x25, x0, #0xfff
 304:	neg	x0, x0
 308:	and	x25, x25, x0
 30c:	add	x1, x24, #0x0
 310:	mov	w2, #0x0                   	// #0
 314:	mov	x0, x25
 318:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 31c:	mov	x20, x0
 320:	ldr	x1, [sp, #64]
 324:	ldr	x2, [sp, #80]
 328:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 32c:	ldp	x0, x1, [sp, #64]
 330:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 334:	stp	x20, x25, [sp, #64]
 338:	ldr	x2, [sp, #80]
 33c:	b	8c <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x8c>
 340:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 344:	add	x0, x0, #0x0
 348:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 34c:	bl	0 <_ZN11__sanitizer3DieEv>
 350:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 354:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 358:	add	x2, x2, #0x0
 35c:	add	x0, x0, #0x0
 360:	mov	x4, #0x0                   	// #0
 364:	mov	x3, #0x0                   	// #0
 368:	mov	w1, #0x1c5                 	// #453
 36c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 370:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 374:	str	x0, [x20]
 378:	b	2f4 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x2f4>
 37c:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 380:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 384:	add	x2, x2, #0x0
 388:	add	x0, x0, #0x0
 38c:	mov	w1, #0x1cd                 	// #461
 390:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 394:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 398:	str	x0, [x23]
 39c:	b	290 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv+0x290>
 3a0:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3a4:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3a8:	add	x2, x2, #0x0
 3ac:	add	x0, x0, #0x0
 3b0:	mov	w1, #0x20c                 	// #524
 3b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3b8:	mov	x4, x1
 3bc:	mov	x3, x0
 3c0:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3c4:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3c8:	add	x2, x2, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	w1, #0x18b                 	// #395
 3d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3d8:	mov	x3, x0
 3dc:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3e0:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 3e4:	add	x2, x2, #0x0
 3e8:	add	x0, x0, #0x0
 3ec:	mov	w1, #0x18a                 	// #394
 3f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3f4:	nop

00000000000003f8 <_ZN11__sanitizer18internal_sigactionEiPKvPv>:
 3f8:	adrp	x3, 0 <_ZN11__sanitizer14real_sigactionEiPKvPv>
 3fc:	ldr	x3, [x3]
 400:	cbz	x3, 408 <_ZN11__sanitizer18internal_sigactionEiPKvPv+0x10>
 404:	b	0 <_ZN11__sanitizer14real_sigactionEiPKvPv>
 408:	b	0 <sigaction>
 40c:	nop

0000000000000410 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>:
 410:	stp	x19, x20, [sp, #-192]!
 414:	str	x30, [sp, #48]
 418:	cbz	x1, 59c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x18c>
 41c:	stp	x23, x24, [sp, #32]
 420:	mov	x24, x2
 424:	cbz	x2, 5c4 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1b4>
 428:	mov	x19, x1
 42c:	and	w0, w0, #0xff
 430:	cbz	w0, 4dc <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xcc>
 434:	stp	x21, x22, [sp, #16]
 438:	add	x22, sp, #0x40
 43c:	mov	x1, x22
 440:	mov	w0, #0x3                   	// #3
 444:	bl	0 <getrlimit>
 448:	sxtw	x20, w0
 44c:	cbnz	w0, 5e8 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1d8>
 450:	add	x21, sp, #0x50
 454:	mov	w1, #0x1                   	// #1
 458:	mov	x0, x21
 45c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
 460:	mov	x0, x21
 464:	bl	0 <_ZNK11__sanitizer19MemoryMappingLayout5ErrorEv>
 468:	tst	w0, #0xff
 46c:	b.ne	590 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x180>  // b.any
 470:	add	x23, sp, #0x70
 474:	stp	xzr, xzr, [sp, #136]
 478:	str	xzr, [sp, #184]
 47c:	b	490 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x80>
 480:	ldr	x0, [sp, #120]
 484:	cmp	x0, x22
 488:	b.hi	540 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x130>  // b.pmore
 48c:	mov	x20, x0
 490:	mov	x1, x23
 494:	mov	x0, x21
 498:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
 49c:	tst	w0, #0xff
 4a0:	b.ne	480 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x70>  // b.any
 4a4:	ldr	x0, [sp, #112]
 4a8:	cmp	x0, x22
 4ac:	b.hi	4bc <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xac>  // b.pmore
 4b0:	ldr	x0, [sp, #120]
 4b4:	cmp	x0, x22
 4b8:	b.hi	54c <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x13c>  // b.pmore
 4bc:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 4c0:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 4c4:	add	x2, x2, #0x0
 4c8:	add	x0, x0, #0x0
 4cc:	mov	x4, #0x0                   	// #0
 4d0:	mov	x3, #0x0                   	// #0
 4d4:	mov	w1, #0x73                  	// #115
 4d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4dc:	add	x20, sp, #0x70
 4e0:	str	xzr, [sp, #64]
 4e4:	mov	x0, x20
 4e8:	str	xzr, [sp, #80]
 4ec:	bl	0 <pthread_attr_init>
 4f0:	bl	0 <pthread_self>
 4f4:	mov	x1, x20
 4f8:	bl	0 <pthread_getattr_np>
 4fc:	sxtw	x3, w0
 500:	cbnz	w0, 608 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x1f8>
 504:	add	x2, sp, #0x40
 508:	add	x1, sp, #0x50
 50c:	mov	x0, x20
 510:	bl	0 <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm>
 514:	mov	x0, x20
 518:	bl	0 <pthread_attr_destroy>
 51c:	ldr	x0, [sp, #64]
 520:	ldr	x1, [sp, #80]
 524:	ldr	x30, [sp, #48]
 528:	add	x0, x0, x1
 52c:	str	x0, [x19]
 530:	str	x1, [x24]
 534:	ldp	x23, x24, [sp, #32]
 538:	ldp	x19, x20, [sp], #192
 53c:	ret
 540:	ldr	x1, [sp, #112]
 544:	cmp	x1, x22
 548:	b.hi	4bc <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0xac>  // b.pmore
 54c:	ldr	x1, [sp, #64]
 550:	mov	x2, #0x40000000            	// #1073741824
 554:	sub	x20, x0, x20
 558:	str	x0, [x19]
 55c:	cmp	x1, x2
 560:	csel	x1, x1, x2, ls  // ls = plast
 564:	cmp	x20, x1
 568:	csel	x20, x20, x1, ls  // ls = plast
 56c:	sub	x0, x0, x20
 570:	str	x0, [x24]
 574:	mov	x0, x21
 578:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 57c:	ldp	x21, x22, [sp, #16]
 580:	ldp	x23, x24, [sp, #32]
 584:	ldr	x30, [sp, #48]
 588:	ldp	x19, x20, [sp], #192
 58c:	ret
 590:	str	xzr, [x24]
 594:	str	xzr, [x19]
 598:	b	574 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_+0x164>
 59c:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5a0:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5a4:	add	x2, x2, #0x0
 5a8:	add	x0, x0, #0x0
 5ac:	mov	x4, #0x0                   	// #0
 5b0:	mov	x3, #0x0                   	// #0
 5b4:	mov	w1, #0x60                  	// #96
 5b8:	stp	x21, x22, [sp, #16]
 5bc:	stp	x23, x24, [sp, #32]
 5c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5c4:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5c8:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5cc:	add	x2, x2, #0x0
 5d0:	add	x0, x0, #0x0
 5d4:	mov	x4, #0x0                   	// #0
 5d8:	mov	x3, #0x0                   	// #0
 5dc:	mov	w1, #0x61                  	// #97
 5e0:	stp	x21, x22, [sp, #16]
 5e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5e8:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5ec:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 5f0:	mov	x3, x20
 5f4:	add	x2, x2, #0x0
 5f8:	add	x0, x0, #0x0
 5fc:	mov	x4, #0x0                   	// #0
 600:	mov	w1, #0x65                  	// #101
 604:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 608:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 60c:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 610:	add	x2, x2, #0x0
 614:	add	x0, x0, #0x0
 618:	mov	x4, #0x0                   	// #0
 61c:	mov	w1, #0x91                  	// #145
 620:	stp	x21, x22, [sp, #16]
 624:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000628 <_ZN11__sanitizer6SetEnvEPKcS1_>:
 628:	stp	x19, x20, [sp, #-48]!
 62c:	mov	x19, x0
 630:	mov	x20, x1
 634:	mov	x0, #0xffffffffffffffff    	// #-1
 638:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 63c:	add	x1, x1, #0x0
 640:	str	x30, [sp, #16]
 644:	bl	0 <dlsym>
 648:	str	x0, [sp, #32]
 64c:	cbz	x0, 688 <_ZN11__sanitizer6SetEnvEPKcS1_+0x60>
 650:	add	x1, sp, #0x20
 654:	add	x0, sp, #0x28
 658:	mov	x2, #0x8                   	// #8
 65c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 660:	ldr	x3, [sp, #40]
 664:	mov	x1, x20
 668:	mov	x0, x19
 66c:	mov	w2, #0x1                   	// #1
 670:	blr	x3
 674:	cmp	w0, #0x0
 678:	cset	w0, eq  // eq = none
 67c:	ldr	x30, [sp, #16]
 680:	ldp	x19, x20, [sp], #48
 684:	ret
 688:	mov	w0, #0x0                   	// #0
 68c:	ldr	x30, [sp, #16]
 690:	ldp	x19, x20, [sp], #48
 694:	ret

0000000000000698 <_ZN11__sanitizer11InitTlsSizeEv>:
 698:	str	x30, [sp, #-48]!
 69c:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 6a0:	mov	x0, #0xffffffffffffffff    	// #-1
 6a4:	add	x1, x1, #0x0
 6a8:	bl	0 <dlsym>
 6ac:	mov	x3, x0
 6b0:	mov	x2, #0x8                   	// #8
 6b4:	add	x1, sp, #0x20
 6b8:	add	x0, sp, #0x28
 6bc:	stp	xzr, xzr, [sp, #16]
 6c0:	str	x3, [sp, #32]
 6c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 6c8:	ldr	x2, [sp, #40]
 6cc:	cbz	x2, 740 <_ZN11__sanitizer11InitTlsSizeEv+0xa8>
 6d0:	add	x1, sp, #0x18
 6d4:	add	x0, sp, #0x10
 6d8:	blr	x2
 6dc:	ldr	x1, [sp, #24]
 6e0:	cmp	x1, #0xf
 6e4:	b.ls	718 <_ZN11__sanitizer11InitTlsSizeEv+0x80>  // b.plast
 6e8:	sub	x0, x1, #0x1
 6ec:	tst	x0, x1
 6f0:	b.ne	760 <_ZN11__sanitizer11InitTlsSizeEv+0xc8>  // b.any
 6f4:	ldr	x0, [sp, #16]
 6f8:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 6fc:	add	x0, x0, x1
 700:	neg	x1, x1
 704:	sub	x0, x0, #0x1
 708:	and	x0, x0, x1
 70c:	str	x0, [x2]
 710:	ldr	x30, [sp], #48
 714:	ret
 718:	ldr	x0, [sp, #16]
 71c:	mov	x1, #0x10                  	// #16
 720:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 724:	add	x0, x0, x1
 728:	neg	x1, x1
 72c:	sub	x0, x0, #0x1
 730:	and	x0, x0, x1
 734:	str	x0, [x2]
 738:	ldr	x30, [sp], #48
 73c:	ret
 740:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 744:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 748:	add	x2, x2, #0x0
 74c:	add	x0, x0, #0x0
 750:	mov	x4, #0x0                   	// #0
 754:	mov	x3, #0x0                   	// #0
 758:	mov	w1, #0xd9                  	// #217
 75c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 760:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 764:	add	x0, x0, #0x0
 768:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 76c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000770 <_ZN11__sanitizer20ThreadDescriptorSizeEv>:
 770:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 774:	add	x1, x1, #0x0
 778:	ldr	x0, [x1, #8]
 77c:	cbnz	x0, 78c <_ZN11__sanitizer20ThreadDescriptorSizeEv+0x1c>
 780:	mov	x2, #0x6f0                 	// #1776
 784:	mov	x0, x2
 788:	str	x2, [x1, #8]
 78c:	ret

0000000000000790 <_ZN11__sanitizer16ThreadSelfOffsetEv>:
 790:	mov	x0, #0x10                  	// #16
 794:	ret

0000000000000798 <_ZN11__sanitizer10ThreadSelfEv>:
 798:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 79c:	add	x1, x1, #0x0
 7a0:	mrs	x2, tpidr_el0
 7a4:	ldr	x0, [x1, #8]
 7a8:	cbnz	x0, 7b8 <_ZN11__sanitizer10ThreadSelfEv+0x20>
 7ac:	mov	x3, #0x6f0                 	// #1776
 7b0:	mov	x0, x3
 7b4:	str	x3, [x1, #8]
 7b8:	sub	x0, x2, x0
 7bc:	ret

00000000000007c0 <_ZN11__sanitizer10GetTlsSizeEv>:
 7c0:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 7c4:	ldr	x0, [x0]
 7c8:	ret
 7cc:	nop

00000000000007d0 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_>:
 7d0:	adrp	x6, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 7d4:	add	x7, x6, #0x0
 7d8:	stp	x19, x20, [sp, #-64]!
 7dc:	mov	x20, x1
 7e0:	mov	x19, x3
 7e4:	ldr	x5, [x7, #8]
 7e8:	stp	x21, x22, [sp, #16]
 7ec:	mov	x22, x2
 7f0:	stp	x23, x30, [sp, #32]
 7f4:	mov	x21, x4
 7f8:	and	w23, w0, #0xff
 7fc:	mrs	x0, tpidr_el0
 800:	cbnz	x5, 810 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0x40>
 804:	mov	x1, #0x6f0                 	// #1776
 808:	mov	x5, x1
 80c:	str	x1, [x7, #8]
 810:	sub	x0, x0, x5
 814:	str	x0, [x19]
 818:	ldr	x0, [x6]
 81c:	str	x0, [x21]
 820:	add	x1, sp, #0x30
 824:	mov	w0, w23
 828:	add	x2, sp, #0x38
 82c:	bl	410 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
 830:	ldp	x0, x1, [sp, #48]
 834:	str	x1, [x20]
 838:	sub	x0, x0, x1
 83c:	str	x0, [x22]
 840:	cbnz	w23, 88c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>
 844:	ldr	x3, [x19]
 848:	ldr	x4, [x20]
 84c:	cmp	x3, x4
 850:	b.ls	88c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>  // b.plast
 854:	add	x1, x0, x4
 858:	cmp	x3, x1
 85c:	b.cs	88c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xbc>  // b.hs, b.nlast
 860:	ldr	x2, [x21]
 864:	add	x3, x3, x2
 868:	cmp	x4, x3
 86c:	b.cs	89c <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xcc>  // b.hs, b.nlast
 870:	cmp	x1, x3
 874:	b.cc	8b4 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_+0xe4>  // b.lo, b.ul, b.last
 878:	sub	x0, x0, x2
 87c:	str	x0, [x22]
 880:	ldr	x1, [x20]
 884:	add	x0, x1, x0
 888:	str	x0, [x19]
 88c:	ldp	x21, x22, [sp, #16]
 890:	ldp	x23, x30, [sp, #32]
 894:	ldp	x19, x20, [sp], #64
 898:	ret
 89c:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 8a0:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 8a4:	add	x2, x2, #0x0
 8a8:	add	x0, x0, #0x0
 8ac:	mov	w1, #0x202                 	// #514
 8b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 8b4:	mov	x4, x1
 8b8:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 8bc:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 8c0:	add	x2, x2, #0x0
 8c4:	add	x0, x0, #0x0
 8c8:	mov	w1, #0x203                 	// #515
 8cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000008d0 <_ZN11__sanitizer13ListOfModules4initEv>:
 8d0:	stp	x19, x20, [sp, #-48]!
 8d4:	mov	x19, x0
 8d8:	ldrb	w0, [x0, #24]
 8dc:	stp	x21, x30, [sp, #16]
 8e0:	cbz	w0, 950 <_ZN11__sanitizer13ListOfModules4initEv+0x80>
 8e4:	ldr	x20, [x19, #16]
 8e8:	ldr	x0, [x19]
 8ec:	add	x20, x20, x20, lsl #3
 8f0:	mov	x21, x0
 8f4:	add	x20, x0, x20, lsl #3
 8f8:	cmp	x0, x20
 8fc:	b.eq	914 <_ZN11__sanitizer13ListOfModules4initEv+0x44>  // b.none
 900:	mov	x0, x21
 904:	add	x21, x21, #0x48
 908:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 90c:	cmp	x20, x21
 910:	b.ne	900 <_ZN11__sanitizer13ListOfModules4initEv+0x30>  // b.any
 914:	str	xzr, [x19, #16]
 918:	mov	w2, #0x1                   	// #1
 91c:	strb	w2, [x19, #24]
 920:	add	x1, sp, #0x20
 924:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 928:	add	x0, x0, #0x0
 92c:	str	x19, [sp, #32]
 930:	strb	w2, [sp, #40]
 934:	stur	wzr, [sp, #41]
 938:	sturh	wzr, [sp, #45]
 93c:	strb	wzr, [sp, #47]
 940:	bl	0 <dl_iterate_phdr>
 944:	ldp	x21, x30, [sp, #16]
 948:	ldp	x19, x20, [sp], #48
 94c:	ret
 950:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 954:	stp	xzr, xzr, [x19, #8]
 958:	ldr	x20, [x20]
 95c:	ldr	x0, [x20]
 960:	str	xzr, [x19]
 964:	cbz	x0, 9c0 <_ZN11__sanitizer13ListOfModules4initEv+0xf0>
 968:	sub	x1, x0, #0x1
 96c:	tst	x1, x0
 970:	b.ne	9cc <_ZN11__sanitizer13ListOfModules4initEv+0xfc>  // b.any
 974:	add	x20, x0, #0x11f, lsl #12
 978:	neg	x0, x0
 97c:	add	x20, x20, #0xfff
 980:	mov	w2, #0x0                   	// #0
 984:	and	x20, x20, x0
 988:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 98c:	mov	x0, x20
 990:	add	x1, x1, #0x0
 994:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 998:	mov	x21, x0
 99c:	ldr	x2, [x19, #16]
 9a0:	ldr	x1, [x19]
 9a4:	add	x2, x2, x2, lsl #3
 9a8:	lsl	x2, x2, #3
 9ac:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 9b0:	ldp	x0, x1, [x19]
 9b4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 9b8:	stp	x21, x20, [x19]
 9bc:	b	918 <_ZN11__sanitizer13ListOfModules4initEv+0x48>
 9c0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 9c4:	str	x0, [x20]
 9c8:	b	968 <_ZN11__sanitizer13ListOfModules4initEv+0x98>
 9cc:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 9d0:	add	x0, x0, #0x0
 9d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 9d8:	bl	0 <_ZN11__sanitizer3DieEv>
 9dc:	nop

00000000000009e0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>:
 9e0:	stp	x19, x20, [sp, #-64]!
 9e4:	mov	x19, x0
 9e8:	ldrb	w0, [x0, #24]
 9ec:	stp	x21, x30, [sp, #16]
 9f0:	cbz	w0, a5c <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x7c>
 9f4:	ldr	x20, [x19, #16]
 9f8:	ldr	x0, [x19]
 9fc:	add	x20, x20, x20, lsl #3
 a00:	mov	x21, x0
 a04:	add	x20, x0, x20, lsl #3
 a08:	cmp	x0, x20
 a0c:	b.eq	a24 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x44>  // b.none
 a10:	mov	x0, x21
 a14:	add	x21, x21, #0x48
 a18:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 a1c:	cmp	x20, x21
 a20:	b.ne	a10 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x30>  // b.any
 a24:	str	xzr, [x19, #16]
 a28:	mov	w1, #0x1                   	// #1
 a2c:	strb	w1, [x19, #24]
 a30:	add	x20, sp, #0x20
 a34:	mov	x0, x20
 a38:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
 a3c:	mov	x1, x19
 a40:	mov	x0, x20
 a44:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout17DumpListOfModulesEPNS_24InternalMmapVectorNoCtorINS_12LoadedModuleEEE>
 a48:	mov	x0, x20
 a4c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
 a50:	ldp	x21, x30, [sp, #16]
 a54:	ldp	x19, x20, [sp], #64
 a58:	ret
 a5c:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 a60:	stp	xzr, xzr, [x19, #8]
 a64:	ldr	x20, [x20]
 a68:	ldr	x0, [x20]
 a6c:	str	xzr, [x19]
 a70:	cbz	x0, acc <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0xec>
 a74:	sub	x1, x0, #0x1
 a78:	tst	x1, x0
 a7c:	b.ne	ad8 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0xf8>  // b.any
 a80:	add	x20, x0, #0x11f, lsl #12
 a84:	neg	x0, x0
 a88:	add	x20, x20, #0xfff
 a8c:	mov	w2, #0x0                   	// #0
 a90:	and	x20, x20, x0
 a94:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 a98:	mov	x0, x20
 a9c:	add	x1, x1, #0x0
 aa0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 aa4:	mov	x21, x0
 aa8:	ldr	x2, [x19, #16]
 aac:	ldr	x1, [x19]
 ab0:	add	x2, x2, x2, lsl #3
 ab4:	lsl	x2, x2, #3
 ab8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 abc:	ldp	x0, x1, [x19]
 ac0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 ac4:	stp	x21, x20, [x19]
 ac8:	b	a28 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x48>
 acc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 ad0:	str	x0, [x20]
 ad4:	b	a74 <_ZN11__sanitizer13ListOfModules12fallbackInitEv+0x94>
 ad8:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 adc:	add	x0, x0, #0x0
 ae0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 ae4:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000ae8 <_ZN11__sanitizer6GetRSSEv>:
 ae8:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 aec:	stp	x19, x20, [sp, #-176]!
 af0:	ldr	x0, [x0]
 af4:	ldrb	w0, [x0, #168]
 af8:	str	x30, [sp, #16]
 afc:	cbnz	w0, b28 <_ZN11__sanitizer6GetRSSEv+0x40>
 b00:	add	x1, sp, #0x20
 b04:	bl	0 <getrusage>
 b08:	mov	w1, w0
 b0c:	mov	x0, #0x0                   	// #0
 b10:	cbnz	w1, b1c <_ZN11__sanitizer6GetRSSEv+0x34>
 b14:	ldr	x0, [sp, #64]
 b18:	lsl	x0, x0, #10
 b1c:	ldr	x30, [sp, #16]
 b20:	ldp	x19, x20, [sp], #176
 b24:	ret
 b28:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 b2c:	mov	x2, #0x0                   	// #0
 b30:	add	x0, x0, #0x0
 b34:	mov	w1, #0x0                   	// #0
 b38:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
 b3c:	mov	w20, w0
 b40:	cmn	w0, #0x1
 b44:	b.eq	c14 <_ZN11__sanitizer6GetRSSEv+0x12c>  // b.none
 b48:	add	x19, sp, #0x20
 b4c:	mov	x2, #0x3f                  	// #63
 b50:	mov	x1, x19
 b54:	bl	0 <_ZN11__sanitizer13internal_readEiPvm>
 b58:	mov	x1, x0
 b5c:	mov	w0, w20
 b60:	mov	x20, x1
 b64:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 b68:	cmp	x20, #0x0
 b6c:	mov	x0, #0x0                   	// #0
 b70:	b.le	b1c <_ZN11__sanitizer6GetRSSEv+0x34>
 b74:	strb	wzr, [x19, x20]
 b78:	mov	x1, x19
 b7c:	ldrb	w2, [sp, #32]
 b80:	sub	w0, w2, #0x30
 b84:	and	w0, w0, #0xff
 b88:	cmp	w0, #0x9
 b8c:	b.hi	ba4 <_ZN11__sanitizer6GetRSSEv+0xbc>  // b.pmore
 b90:	ldrb	w2, [x1, #1]!
 b94:	sub	w0, w2, #0x30
 b98:	and	w0, w0, #0xff
 b9c:	cmp	w0, #0x9
 ba0:	b.ls	b90 <_ZN11__sanitizer6GetRSSEv+0xa8>  // b.plast
 ba4:	cbz	w2, c48 <_ZN11__sanitizer6GetRSSEv+0x160>
 ba8:	ldrb	w2, [x1, #1]!
 bac:	sub	w0, w2, #0x30
 bb0:	cmp	w2, #0x0
 bb4:	and	w0, w0, #0xff
 bb8:	ccmp	w0, #0x9, #0x0, ne  // ne = any
 bbc:	b.hi	ba8 <_ZN11__sanitizer6GetRSSEv+0xc0>  // b.pmore
 bc0:	cmp	w0, #0x9
 bc4:	mov	x19, #0x0                   	// #0
 bc8:	b.hi	bf4 <_ZN11__sanitizer6GetRSSEv+0x10c>  // b.pmore
 bcc:	nop
 bd0:	and	x3, x2, #0xff
 bd4:	ldrb	w2, [x1, #1]!
 bd8:	add	x19, x19, x19, lsl #2
 bdc:	sub	w0, w2, #0x30
 be0:	add	x19, x3, x19, lsl #1
 be4:	and	w0, w0, #0xff
 be8:	sub	x19, x19, #0x30
 bec:	cmp	w0, #0x9
 bf0:	b.ls	bd0 <_ZN11__sanitizer6GetRSSEv+0xe8>  // b.plast
 bf4:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 bf8:	ldr	x20, [x20]
 bfc:	ldr	x0, [x20]
 c00:	cbz	x0, c38 <_ZN11__sanitizer6GetRSSEv+0x150>
 c04:	mul	x0, x19, x0
 c08:	ldr	x30, [sp, #16]
 c0c:	ldp	x19, x20, [sp], #176
 c10:	ret
 c14:	add	x1, sp, #0x20
 c18:	mov	w0, #0x0                   	// #0
 c1c:	bl	0 <getrusage>
 c20:	mov	w1, w0
 c24:	mov	x0, #0x0                   	// #0
 c28:	cbnz	w1, b1c <_ZN11__sanitizer6GetRSSEv+0x34>
 c2c:	ldr	x0, [sp, #64]
 c30:	lsl	x0, x0, #10
 c34:	b	b1c <_ZN11__sanitizer6GetRSSEv+0x34>
 c38:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 c3c:	str	x0, [x20]
 c40:	mul	x0, x19, x0
 c44:	b	c08 <_ZN11__sanitizer6GetRSSEv+0x120>
 c48:	mov	x19, #0x0                   	// #0
 c4c:	b	bf4 <_ZN11__sanitizer6GetRSSEv+0x10c>

0000000000000c50 <_ZN11__sanitizer15GetNumberOfCPUsEv>:
 c50:	stp	x19, x30, [sp, #-144]!
 c54:	mov	x1, #0x80                  	// #128
 c58:	mov	w0, #0x0                   	// #0
 c5c:	add	x19, sp, #0x10
 c60:	mov	x2, x19
 c64:	bl	0 <sched_getaffinity>
 c68:	cbnz	w0, c80 <_ZN11__sanitizer15GetNumberOfCPUsEv+0x30>
 c6c:	mov	x1, x19
 c70:	mov	x0, #0x80                  	// #128
 c74:	bl	0 <__sched_cpucount>
 c78:	ldp	x19, x30, [sp], #144
 c7c:	ret
 c80:	sxtw	x3, w0
 c84:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 c88:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 c8c:	add	x2, x2, #0x0
 c90:	add	x0, x0, #0x0
 c94:	mov	x4, #0x0                   	// #0
 c98:	mov	w1, #0x2b9                 	// #697
 c9c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000ca0 <_ZN11__sanitizer14AndroidLogInitEv>:
 ca0:	ret
 ca4:	nop

0000000000000ca8 <_ZN11__sanitizer20WriteOneLineToSyslogEPKc>:
 ca8:	mov	x2, x0
 cac:	adrp	x1, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 cb0:	mov	w0, #0x6                   	// #6
 cb4:	add	x1, x1, #0x0
 cb8:	b	0 <syslog>
 cbc:	nop

0000000000000cc0 <_ZN11__sanitizer15SetAbortMessageEPKc>:
 cc0:	ret
 cc4:	nop

0000000000000cc8 <_ZN11__sanitizer18LogMessageOnPrintfEPKc>:
 cc8:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 ccc:	ldr	x1, [x1]
 cd0:	ldrb	w1, [x1, #49]
 cd4:	cbnz	w1, cdc <_ZN11__sanitizer18LogMessageOnPrintfEPKc+0x14>
 cd8:	ret
 cdc:	b	0 <_ZN11__sanitizer13WriteToSyslogEPKc>

0000000000000ce0 <_ZN11__sanitizer17MonotonicNanoTimeEv>:
 ce0:	adrp	x0, 0 <__progname>
 ce4:	str	x30, [sp, #-32]!
 ce8:	ldr	x0, [x0]
 cec:	cbz	x0, d00 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x20>
 cf0:	ldr	x0, [x0]
 cf4:	cbz	x0, d00 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x20>
 cf8:	ldrb	w0, [x0]
 cfc:	cbnz	w0, d24 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x44>
 d00:	add	x1, sp, #0x10
 d04:	mov	w0, #0x1                   	// #1
 d08:	bl	0 <_ZN11__sanitizer22internal_clock_gettimeEiPv>
 d0c:	ldp	x2, x1, [sp, #16]
 d10:	mov	x0, #0xca00                	// #51712
 d14:	movk	x0, #0x3b9a, lsl #16
 d18:	ldr	x30, [sp], #32
 d1c:	madd	x0, x2, x0, x1
 d20:	ret
 d24:	adrp	x0, 0 <real_clock_gettime>
 d28:	add	x1, sp, #0x10
 d2c:	ldr	x0, [x0]
 d30:	cbz	x0, d54 <_ZN11__sanitizer17MonotonicNanoTimeEv+0x74>
 d34:	mov	w0, #0x1                   	// #1
 d38:	bl	0 <real_clock_gettime>
 d3c:	ldp	x2, x1, [sp, #16]
 d40:	mov	x0, #0xca00                	// #51712
 d44:	movk	x0, #0x3b9a, lsl #16
 d48:	ldr	x30, [sp], #32
 d4c:	madd	x0, x2, x0, x1
 d50:	ret
 d54:	mov	w0, #0x1                   	// #1
 d58:	bl	0 <clock_gettime>
 d5c:	b	d0c <_ZN11__sanitizer17MonotonicNanoTimeEv+0x2c>

0000000000000d60 <_ZN11__sanitizer6ReExecEv>:
 d60:	stp	x19, x20, [sp, #-48]!
 d64:	mov	x0, #0x1f                  	// #31
 d68:	str	x30, [sp, #16]
 d6c:	bl	0 <getauxval>
 d70:	mov	x19, x0
 d74:	bl	0 <_ZN11__sanitizer7GetArgvEv>
 d78:	mov	x20, x0
 d7c:	bl	0 <_ZN11__sanitizer10GetEnvironEv>
 d80:	mov	x2, x0
 d84:	mov	x1, x20
 d88:	mov	x0, x19
 d8c:	bl	0 <_ZN11__sanitizer15internal_execveEPKcPKPcS4_>
 d90:	add	x1, sp, #0x2c
 d94:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 d98:	tst	w0, #0xff
 d9c:	b.eq	db4 <_ZN11__sanitizer6ReExecEv+0x54>  // b.none
 da0:	ldr	w1, [sp, #44]
 da4:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 da8:	add	x0, x0, #0x0
 dac:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 db0:	bl	0 <_ZN11__sanitizer3DieEv>
 db4:	adrp	x2, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 db8:	adrp	x0, 0 <_ZN11__sanitizerL18dl_iterate_phdr_cbEP12dl_phdr_infomPv>
 dbc:	add	x2, x2, #0x0
 dc0:	add	x0, x0, #0x0
 dc4:	mov	x4, #0x1                   	// #1
 dc8:	mov	x3, #0x0                   	// #0
 dcc:	mov	w1, #0x342                 	// #834
 dd0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_mac_libcdep.cpp.o:     file format elf64-littleaarch64


sanitizer_posix_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizerL6setlimEim.part.0>:
   0:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
   4:	stp	x19, x30, [sp, #-16]!
   8:	ldr	x0, [x0]
   c:	ldr	x19, [x0]
  10:	bl	0 <__errno_location>
  14:	mov	x2, x0
  18:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
  1c:	mov	x1, x19
  20:	add	x0, x0, #0x0
  24:	ldr	w2, [x2]
  28:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  2c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000030 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>:
  30:	stp	x19, x20, [sp, #-192]!
  34:	mov	x19, x1
  38:	stp	x21, x30, [sp, #16]
  3c:	mov	w21, w0
  40:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
  44:	cbnz	w0, 54 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0x24>
  48:	ldp	x21, x30, [sp, #16]
  4c:	ldp	x19, x20, [sp], #192
  50:	ret
  54:	add	x20, sp, #0x28
  58:	mov	x2, #0x98                  	// #152
  5c:	mov	w1, #0x0                   	// #0
  60:	mov	x0, x20
  64:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  68:	str	x19, [sp, #40]
  6c:	adrp	x4, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  70:	mov	w5, #0x4                   	// #4
  74:	mov	w3, #0x4                   	// #4
  78:	movk	w5, #0x4000, lsl #16
  7c:	ldr	x4, [x4]
  80:	movk	w3, #0x4800, lsl #16
  84:	mov	x1, x20
  88:	mov	w0, w21
  8c:	mov	x2, #0x0                   	// #0
  90:	ldrb	w4, [x4, #97]
  94:	cmp	w4, #0x0
  98:	csel	w3, w3, w5, ne  // ne = any
  9c:	str	w3, [sp, #176]
  a0:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
  a4:	sxtw	x4, w0
  a8:	cbnz	w0, d8 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0xa8>
  ac:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
  b0:	ldr	x0, [x0]
  b4:	ldr	w0, [x0]
  b8:	cbz	w0, 48 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E+0x18>
  bc:	mov	w1, w21
  c0:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
  c4:	add	x0, x0, #0x0
  c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  cc:	ldp	x21, x30, [sp, #16]
  d0:	ldp	x19, x20, [sp], #192
  d4:	ret
  d8:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
  dc:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
  e0:	add	x2, x2, #0x0
  e4:	add	x0, x0, #0x0
  e8:	mov	x3, #0x0                   	// #0
  ec:	mov	w1, #0xd2                  	// #210
  f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  f4:	nop

00000000000000f8 <_ZN11__sanitizer6GetUidEv>:
  f8:	b	0 <getuid>
  fc:	nop

0000000000000100 <_ZN11__sanitizer13GetThreadSelfEv>:
 100:	b	0 <pthread_self>
 104:	nop

0000000000000108 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm>:
 108:	stp	x19, x20, [sp, #-32]!
 10c:	mov	x19, x0
 110:	mov	x20, x1
 114:	stp	x21, x30, [sp, #16]
 118:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 11c:	ldr	x21, [x21]
 120:	ldr	x2, [x21]
 124:	cbz	x2, 158 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x50>
 128:	sub	x0, x2, #0x1
 12c:	tst	x2, x0
 130:	b.ne	170 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x68>  // b.any
 134:	neg	x2, x2
 138:	add	x0, x19, x0
 13c:	and	x20, x20, x2
 140:	and	x0, x0, x2
 144:	cmp	x20, x0
 148:	b.hi	180 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x78>  // b.pmore
 14c:	ldp	x21, x30, [sp, #16]
 150:	ldp	x19, x20, [sp], #32
 154:	ret
 158:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 15c:	mov	x2, x0
 160:	str	x0, [x21]
 164:	sub	x0, x2, #0x1
 168:	tst	x2, x0
 16c:	b.eq	134 <_ZN11__sanitizer22ReleaseMemoryPagesToOSEmm+0x2c>  // b.none
 170:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 174:	add	x0, x0, #0x0
 178:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 17c:	bl	0 <_ZN11__sanitizer3DieEv>
 180:	sub	x1, x20, x0
 184:	mov	w2, #0x4                   	// #4
 188:	ldp	x21, x30, [sp, #16]
 18c:	ldp	x19, x20, [sp], #32
 190:	b	0 <madvise>
 194:	nop

0000000000000198 <_ZN11__sanitizer27SetShadowRegionHugePageModeEmm>:
 198:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 19c:	ldr	x2, [x2]
 1a0:	ldrb	w2, [x2, #208]
 1a4:	cbz	w2, 1b0 <_ZN11__sanitizer27SetShadowRegionHugePageModeEmm+0x18>
 1a8:	mov	w2, #0xf                   	// #15
 1ac:	b	0 <madvise>
 1b0:	mov	w2, #0xe                   	// #14
 1b4:	b	0 <madvise>

00000000000001b8 <_ZN11__sanitizer20DontDumpShadowMemoryEmm>:
 1b8:	str	x30, [sp, #-16]!
 1bc:	mov	w2, #0x10                  	// #16
 1c0:	bl	0 <madvise>
 1c4:	cmp	w0, #0x0
 1c8:	cset	w0, eq  // eq = none
 1cc:	ldr	x30, [sp], #16
 1d0:	ret
 1d4:	nop

00000000000001d8 <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv>:
 1d8:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 1dc:	ldr	x0, [x0]
 1e0:	ldrb	w0, [x0, #186]
 1e4:	cbnz	w0, 1ec <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv+0x14>
 1e8:	ret
 1ec:	stp	x19, x30, [sp, #-32]!
 1f0:	mov	w0, #0x4                   	// #4
 1f4:	add	x19, sp, #0x10
 1f8:	mov	x1, x19
 1fc:	bl	0 <getrlimit>
 200:	cbnz	w0, 220 <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv+0x48>
 204:	mov	x1, x19
 208:	mov	w0, #0x4                   	// #4
 20c:	str	xzr, [sp, #16]
 210:	bl	0 <setrlimit>
 214:	cbnz	w0, 24c <_ZN11__sanitizer28DisableCoreDumperIfNecessaryEv+0x74>
 218:	ldp	x19, x30, [sp], #32
 21c:	ret
 220:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 224:	ldr	x0, [x0]
 228:	ldr	x19, [x0]
 22c:	bl	0 <__errno_location>
 230:	mov	x2, x0
 234:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 238:	mov	x1, x19
 23c:	add	x0, x0, #0x0
 240:	ldr	w2, [x2]
 244:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 248:	bl	0 <_ZN11__sanitizer3DieEv>
 24c:	bl	0 <_ZN11__sanitizerL6setlimEim.part.0>

0000000000000250 <_ZN11__sanitizer20StackSizeIsUnlimitedEv>:
 250:	str	x30, [sp, #-32]!
 254:	mov	w0, #0x3                   	// #3
 258:	add	x1, sp, #0x10
 25c:	bl	0 <getrlimit>
 260:	cbnz	w0, 278 <_ZN11__sanitizer20StackSizeIsUnlimitedEv+0x28>
 264:	ldr	x0, [sp, #16]
 268:	ldr	x30, [sp], #32
 26c:	cmn	x0, #0x1
 270:	cset	w0, eq  // eq = none
 274:	ret
 278:	sxtw	x4, w0
 27c:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 280:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 284:	add	x2, x2, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	x3, #0x0                   	// #0
 290:	mov	w1, #0x5c                  	// #92
 294:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000298 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm>:
 298:	stp	x19, x20, [sp, #-48]!
 29c:	mov	x19, x0
 2a0:	mov	w0, #0x3                   	// #3
 2a4:	add	x20, sp, #0x20
 2a8:	str	x30, [sp, #16]
 2ac:	mov	x1, x20
 2b0:	bl	0 <getrlimit>
 2b4:	cbnz	w0, 334 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x9c>
 2b8:	mov	x1, x20
 2bc:	mov	w0, #0x3                   	// #3
 2c0:	str	x19, [sp, #32]
 2c4:	bl	0 <setrlimit>
 2c8:	cbnz	w0, 360 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0xc8>
 2cc:	mov	x1, x20
 2d0:	mov	w0, #0x3                   	// #3
 2d4:	bl	0 <getrlimit>
 2d8:	sxtw	x4, w0
 2dc:	cbnz	w0, 2f8 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x60>
 2e0:	ldr	x0, [sp, #32]
 2e4:	cmn	x0, #0x1
 2e8:	b.eq	314 <_ZN11__sanitizer24SetStackSizeLimitInBytesEm+0x7c>  // b.none
 2ec:	ldr	x30, [sp, #16]
 2f0:	ldp	x19, x20, [sp], #48
 2f4:	ret
 2f8:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 2fc:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 300:	add	x2, x2, #0x0
 304:	add	x0, x0, #0x0
 308:	mov	x3, #0x0                   	// #0
 30c:	mov	w1, #0x5c                  	// #92
 310:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 314:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 318:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 31c:	add	x2, x2, #0x0
 320:	add	x0, x0, #0x0
 324:	mov	x4, #0x0                   	// #0
 328:	mov	x3, #0x0                   	// #0
 32c:	mov	w1, #0x7a                  	// #122
 330:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 334:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 338:	ldr	x0, [x0]
 33c:	ldr	x19, [x0]
 340:	bl	0 <__errno_location>
 344:	mov	x2, x0
 348:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 34c:	mov	x1, x19
 350:	add	x0, x0, #0x0
 354:	ldr	w2, [x2]
 358:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 35c:	bl	0 <_ZN11__sanitizer3DieEv>
 360:	bl	0 <_ZN11__sanitizerL6setlimEim.part.0>
 364:	nop

0000000000000368 <_ZN11__sanitizer23AddressSpaceIsUnlimitedEv>:
 368:	str	x30, [sp, #-32]!
 36c:	mov	w0, #0x9                   	// #9
 370:	add	x1, sp, #0x10
 374:	bl	0 <getrlimit>
 378:	cbnz	w0, 390 <_ZN11__sanitizer23AddressSpaceIsUnlimitedEv+0x28>
 37c:	ldr	x0, [sp, #16]
 380:	ldr	x30, [sp], #32
 384:	cmn	x0, #0x1
 388:	cset	w0, eq  // eq = none
 38c:	ret
 390:	sxtw	x4, w0
 394:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 398:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 39c:	add	x2, x2, #0x0
 3a0:	add	x0, x0, #0x0
 3a4:	mov	x3, #0x0                   	// #0
 3a8:	mov	w1, #0x5c                  	// #92
 3ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000003b0 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv>:
 3b0:	stp	x19, x30, [sp, #-32]!
 3b4:	mov	w0, #0x9                   	// #9
 3b8:	add	x19, sp, #0x10
 3bc:	mov	x1, x19
 3c0:	bl	0 <getrlimit>
 3c4:	cbnz	w0, 444 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0x94>
 3c8:	mov	x2, #0xffffffffffffffff    	// #-1
 3cc:	mov	x1, x19
 3d0:	mov	w0, #0x9                   	// #9
 3d4:	str	x2, [sp, #16]
 3d8:	bl	0 <setrlimit>
 3dc:	cbnz	w0, 470 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0xc0>
 3e0:	mov	x1, x19
 3e4:	mov	w0, #0x9                   	// #9
 3e8:	bl	0 <getrlimit>
 3ec:	sxtw	x4, w0
 3f0:	cbnz	w0, 408 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0x58>
 3f4:	ldr	x0, [sp, #16]
 3f8:	cmn	x0, #0x1
 3fc:	b.ne	424 <_ZN11__sanitizer24SetAddressSpaceUnlimitedEv+0x74>  // b.any
 400:	ldp	x19, x30, [sp], #32
 404:	ret
 408:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 40c:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 410:	add	x2, x2, #0x0
 414:	add	x0, x0, #0x0
 418:	mov	x3, #0x0                   	// #0
 41c:	mov	w1, #0x5c                  	// #92
 420:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 424:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 428:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 42c:	add	x2, x2, #0x0
 430:	add	x0, x0, #0x0
 434:	mov	x4, #0x0                   	// #0
 438:	mov	x3, #0x0                   	// #0
 43c:	mov	w1, #0x84                  	// #132
 440:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 444:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 448:	ldr	x0, [x0]
 44c:	ldr	x19, [x0]
 450:	bl	0 <__errno_location>
 454:	mov	x2, x0
 458:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 45c:	mov	x1, x19
 460:	add	x0, x0, #0x0
 464:	ldr	w2, [x2]
 468:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 46c:	bl	0 <_ZN11__sanitizer3DieEv>
 470:	bl	0 <_ZN11__sanitizerL6setlimEim.part.0>
 474:	nop

0000000000000478 <_ZN11__sanitizer15SleepForSecondsEi>:
 478:	b	0 <sleep>
 47c:	nop

0000000000000480 <_ZN11__sanitizer14SleepForMillisEi>:
 480:	mov	w1, #0x3e8                 	// #1000
 484:	mul	w0, w0, w1
 488:	b	0 <usleep>
 48c:	nop

0000000000000490 <_ZN11__sanitizer5AbortEv>:
 490:	stp	x19, x30, [sp, #-176]!
 494:	mov	w0, #0x6                   	// #6
 498:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
 49c:	cbnz	w0, 4a4 <_ZN11__sanitizer5AbortEv+0x14>
 4a0:	bl	0 <abort>
 4a4:	add	x19, sp, #0x18
 4a8:	mov	x2, #0x98                  	// #152
 4ac:	mov	w1, #0x0                   	// #0
 4b0:	mov	x0, x19
 4b4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 4b8:	str	xzr, [sp, #24]
 4bc:	mov	x1, x19
 4c0:	mov	x2, #0x0                   	// #0
 4c4:	mov	w0, #0x6                   	// #6
 4c8:	bl	0 <_ZN11__sanitizer18internal_sigactionEiPKvPv>
 4cc:	bl	0 <abort>

00000000000004d0 <_ZN11__sanitizer6AtexitEPFvvE>:
 4d0:	b	0 <atexit>
 4d4:	nop

00000000000004d8 <_ZN11__sanitizer21SupportsColoredOutputEi>:
 4d8:	str	x30, [sp, #-16]!
 4dc:	bl	0 <isatty>
 4e0:	cmp	w0, #0x0
 4e4:	cset	w0, ne  // ne = any
 4e8:	ldr	x30, [sp], #16
 4ec:	ret

00000000000004f0 <_ZN11__sanitizer23SetAlternateSignalStackEv>:
 4f0:	str	x30, [sp, #-64]!
 4f4:	mov	x0, #0x0                   	// #0
 4f8:	add	x1, sp, #0x10
 4fc:	bl	0 <sigaltstack>
 500:	cbnz	w0, 56c <_ZN11__sanitizer23SetAlternateSignalStackEv+0x7c>
 504:	ldr	w0, [sp, #24]
 508:	tbnz	w0, #1, 514 <_ZN11__sanitizer23SetAlternateSignalStackEv+0x24>
 50c:	ldr	x30, [sp], #64
 510:	ret
 514:	mov	w2, #0x0                   	// #0
 518:	adrp	x1, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 51c:	mov	x0, #0x10000               	// #65536
 520:	add	x1, x1, #0x0
 524:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 528:	mov	x3, x0
 52c:	mov	x2, #0x10000               	// #65536
 530:	add	x0, sp, #0x28
 534:	mov	x1, #0x0                   	// #0
 538:	str	x3, [sp, #40]
 53c:	str	wzr, [sp, #48]
 540:	str	x2, [sp, #56]
 544:	bl	0 <sigaltstack>
 548:	sxtw	x4, w0
 54c:	cbz	w0, 50c <_ZN11__sanitizer23SetAlternateSignalStackEv+0x1c>
 550:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 554:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 558:	add	x2, x2, #0x0
 55c:	add	x0, x0, #0x0
 560:	mov	x3, #0x0                   	// #0
 564:	mov	w1, #0xbb                  	// #187
 568:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 56c:	sxtw	x4, w0
 570:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 574:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 578:	add	x2, x2, #0x0
 57c:	add	x0, x0, #0x0
 580:	mov	x3, #0x0                   	// #0
 584:	mov	w1, #0xb0                  	// #176
 588:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 58c:	nop

0000000000000590 <_ZN11__sanitizer25UnsetAlternateSignalStackEv>:
 590:	mov	w3, #0x2                   	// #2
 594:	mov	x2, #0x10000               	// #65536
 598:	str	x30, [sp, #-64]!
 59c:	add	x1, sp, #0x28
 5a0:	add	x0, sp, #0x10
 5a4:	str	xzr, [sp, #16]
 5a8:	str	w3, [sp, #24]
 5ac:	str	x2, [sp, #32]
 5b0:	bl	0 <sigaltstack>
 5b4:	cbnz	w0, 5cc <_ZN11__sanitizer25UnsetAlternateSignalStackEv+0x3c>
 5b8:	ldr	x0, [sp, #40]
 5bc:	ldr	x1, [sp, #56]
 5c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 5c4:	ldr	x30, [sp], #64
 5c8:	ret
 5cc:	sxtw	x4, w0
 5d0:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 5d4:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 5d8:	add	x2, x2, #0x0
 5dc:	add	x0, x0, #0x0
 5e0:	mov	x3, #0x0                   	// #0
 5e4:	mov	w1, #0xc3                  	// #195
 5e8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5ec:	nop

00000000000005f0 <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E>:
 5f0:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 5f4:	stp	x19, x30, [sp, #-16]!
 5f8:	mov	x19, x0
 5fc:	ldr	x1, [x1]
 600:	ldrb	w0, [x1, #97]
 604:	cbnz	w0, 654 <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E+0x64>
 608:	mov	x1, x19
 60c:	mov	w0, #0xb                   	// #11
 610:	bl	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 614:	mov	x1, x19
 618:	mov	w0, #0x7                   	// #7
 61c:	bl	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 620:	mov	x1, x19
 624:	mov	w0, #0x6                   	// #6
 628:	bl	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 62c:	mov	x1, x19
 630:	mov	w0, #0x8                   	// #8
 634:	bl	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 638:	mov	x1, x19
 63c:	mov	w0, #0x4                   	// #4
 640:	bl	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 644:	mov	x1, x19
 648:	mov	w0, #0x5                   	// #5
 64c:	ldp	x19, x30, [sp], #16
 650:	b	30 <_ZN11__sanitizerL21MaybeInstallSigactionEiPFviPvS0_E>
 654:	bl	4f0 <_ZN11__sanitizer23SetAlternateSignalStackEv>
 658:	b	608 <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E+0x18>
 65c:	nop

0000000000000660 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv>:
 660:	stp	x19, x20, [sp, #-32]!
 664:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 668:	mov	x19, x0
 66c:	ldr	x20, [x20]
 670:	stp	x21, x30, [sp, #16]
 674:	ldr	x21, [x0, #16]
 678:	ldr	x0, [x20]
 67c:	cbz	x0, 6e8 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x88>
 680:	ldr	x1, [x19, #32]
 684:	add	x21, x21, x0
 688:	mov	w0, #0x0                   	// #0
 68c:	cmp	x21, x1
 690:	b.ls	6dc <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x7c>  // b.plast
 694:	mov	x2, #0xffff                	// #65535
 698:	add	x1, x1, x2
 69c:	ldr	x2, [x19, #16]
 6a0:	cmp	x2, x1
 6a4:	b.cs	6dc <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x7c>  // b.hs, b.nlast
 6a8:	adrp	x1, 0 <_ZN11__sanitizer14si_SEGV_MAPERRE>
 6ac:	mov	w0, #0x1                   	// #1
 6b0:	ldr	x2, [x19]
 6b4:	ldr	x1, [x1]
 6b8:	ldr	w2, [x2, #8]
 6bc:	ldr	w1, [x1]
 6c0:	cmp	w2, w1
 6c4:	b.eq	6dc <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x7c>  // b.none
 6c8:	adrp	x0, 0 <_ZN11__sanitizer14si_SEGV_ACCERRE>
 6cc:	ldr	x0, [x0]
 6d0:	ldr	w0, [x0]
 6d4:	cmp	w0, w2
 6d8:	cset	w0, eq  // eq = none
 6dc:	ldp	x21, x30, [sp, #16]
 6e0:	ldp	x19, x20, [sp], #32
 6e4:	ret
 6e8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 6ec:	str	x0, [x20]
 6f0:	b	680 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv+0x20>
 6f4:	nop

00000000000006f8 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>:
 6f8:	stp	x19, x20, [sp, #-64]!
 6fc:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
 700:	mov	x19, x1
 704:	ldr	x20, [x20]
 708:	stp	x21, x22, [sp, #16]
 70c:	mov	x21, x0
 710:	ldr	x4, [x20]
 714:	str	x30, [sp, #32]
 718:	cbz	x4, 7ac <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xb4>
 71c:	add	x4, x4, x4, lsl #2
 720:	cmp	x19, x4, lsl #1
 724:	lsl	x4, x4, #1
 728:	b.cs	7c8 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xd0>  // b.hs, b.nlast
 72c:	add	x0, sp, #0x38
 730:	mov	w22, #0x0                   	// #0
 734:	bl	0 <pipe>
 738:	mov	w20, w0
 73c:	cbz	w0, 754 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x5c>
 740:	mov	w0, w22
 744:	ldp	x21, x22, [sp, #16]
 748:	ldr	x30, [sp, #32]
 74c:	ldp	x19, x20, [sp], #64
 750:	ret
 754:	ldr	w0, [sp, #60]
 758:	mov	x2, x19
 75c:	mov	x1, x21
 760:	bl	0 <_ZN11__sanitizer14internal_writeEiPKvm>
 764:	mov	x21, x0
 768:	add	x1, sp, #0x34
 76c:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 770:	tst	w0, #0xff
 774:	b.eq	7e4 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xec>  // b.none
 778:	ldrsw	x4, [sp, #52]
 77c:	mov	w22, w20
 780:	cmp	x4, #0xe
 784:	b.ne	800 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x108>  // b.any
 788:	ldr	w0, [sp, #56]
 78c:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 790:	ldr	w0, [sp, #60]
 794:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 798:	mov	w0, w22
 79c:	ldp	x21, x22, [sp, #16]
 7a0:	ldr	x30, [sp, #32]
 7a4:	ldp	x19, x20, [sp], #64
 7a8:	ret
 7ac:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 7b0:	mov	x4, x0
 7b4:	str	x0, [x20]
 7b8:	add	x4, x4, x4, lsl #2
 7bc:	cmp	x19, x4, lsl #1
 7c0:	lsl	x4, x4, #1
 7c4:	b.cc	72c <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0x34>  // b.lo, b.ul, b.last
 7c8:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 7cc:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 7d0:	mov	x3, x19
 7d4:	add	x2, x2, #0x0
 7d8:	add	x0, x0, #0x0
 7dc:	mov	w1, #0x118                 	// #280
 7e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 7e4:	ldr	w0, [sp, #56]
 7e8:	cmp	x19, x21
 7ec:	cset	w22, eq  // eq = none
 7f0:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 7f4:	ldr	w0, [sp, #60]
 7f8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 7fc:	b	798 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm+0xa0>
 800:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 804:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 808:	add	x2, x2, #0x0
 80c:	add	x0, x0, #0x0
 810:	mov	x3, #0xe                   	// #14
 814:	mov	w1, #0x121                 	// #289
 818:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 81c:	nop

0000000000000820 <_ZN11__sanitizer28PlatformPrepareForSandboxingEP29__sanitizer_sandbox_arguments>:
 820:	b	0 <_ZN11__sanitizer19MemoryMappingLayout19CacheMemoryMappingsEv>
 824:	nop

0000000000000828 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc>:
 828:	stp	x19, x20, [sp, #-64]!
 82c:	mov	x20, x0
 830:	mov	x19, x1
 834:	stp	x21, x22, [sp, #16]
 838:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 83c:	mov	x22, x2
 840:	ldr	x21, [x21]
 844:	ldr	x3, [x21]
 848:	str	x30, [sp, #32]
 84c:	cbz	x3, 8b0 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0x88>
 850:	sub	x1, x3, #0x1
 854:	tst	x3, x1
 858:	b.ne	920 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0xf8>  // b.any
 85c:	neg	x3, x3
 860:	add	x19, x19, x1
 864:	and	x19, x19, x3
 868:	mov	x4, x22
 86c:	and	x20, x20, x3
 870:	mov	w2, #0x3                   	// #3
 874:	mov	w3, #0x4032                	// #16434
 878:	mov	x1, x19
 87c:	mov	x0, x20
 880:	bl	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>
 884:	add	x1, sp, #0x3c
 888:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 88c:	tst	w0, #0xff
 890:	b.ne	8e4 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0xbc>  // b.any
 894:	mov	x0, x19
 898:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
 89c:	mov	w0, #0x1                   	// #1
 8a0:	ldp	x21, x22, [sp, #16]
 8a4:	ldr	x30, [sp, #32]
 8a8:	ldp	x19, x20, [sp], #64
 8ac:	ret
 8b0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 8b4:	str	x0, [x21]
 8b8:	sub	x1, x0, #0x1
 8bc:	tst	x0, x1
 8c0:	b.ne	920 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0xf8>  // b.any
 8c4:	add	x19, x19, x1
 8c8:	neg	x3, x0
 8cc:	and	x19, x19, x3
 8d0:	cbnz	x0, 868 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0x40>
 8d4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 8d8:	neg	x3, x0
 8dc:	str	x0, [x21]
 8e0:	b	868 <_ZN11__sanitizer18MmapFixedNoReserveEmmPKc+0x40>
 8e4:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 8e8:	ldr	w5, [sp, #60]
 8ec:	mov	x4, x20
 8f0:	mov	x3, x19
 8f4:	ldr	x1, [x1]
 8f8:	mov	x2, x19
 8fc:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 900:	add	x0, x0, #0x0
 904:	ldr	x1, [x1]
 908:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 90c:	mov	w0, #0x0                   	// #0
 910:	ldp	x21, x22, [sp, #16]
 914:	ldr	x30, [sp, #32]
 918:	ldp	x19, x20, [sp], #64
 91c:	ret
 920:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 924:	add	x0, x0, #0x0
 928:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 92c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000930 <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc>:
 930:	stp	x19, x20, [sp, #-64]!
 934:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
 938:	ldr	x19, [x19]
 93c:	stp	x21, x22, [sp, #16]
 940:	mov	x21, x0
 944:	stp	x23, x30, [sp, #32]
 948:	mov	x22, x1
 94c:	mov	x23, x2
 950:	ldr	x5, [x19]
 954:	cbz	x5, 9d8 <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0xa8>
 958:	sub	x20, x5, #0x1
 95c:	tst	x5, x20
 960:	b.ne	a6c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x13c>  // b.any
 964:	neg	x5, x5
 968:	add	x20, x22, x20
 96c:	and	x20, x20, x5
 970:	mov	x4, x23
 974:	and	x19, x21, x5
 978:	mov	w3, #0x4032                	// #16434
 97c:	mov	w2, #0x3                   	// #3
 980:	mov	x1, x20
 984:	mov	x0, x19
 988:	bl	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>
 98c:	add	x1, sp, #0x3c
 990:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 994:	tst	w0, #0xff
 998:	b.ne	a0c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0xdc>  // b.any
 99c:	mov	x0, x20
 9a0:	bl	0 <_ZN11__sanitizer17IncreaseTotalMmapEm>
 9a4:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 9a8:	mov	x1, x22
 9ac:	ldr	x0, [x0]
 9b0:	ldrb	w19, [x0, #208]
 9b4:	mov	x0, x21
 9b8:	cbz	w19, a4c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x11c>
 9bc:	mov	w2, #0xf                   	// #15
 9c0:	bl	0 <madvise>
 9c4:	mov	w0, w19
 9c8:	ldp	x21, x22, [sp, #16]
 9cc:	ldp	x23, x30, [sp, #32]
 9d0:	ldp	x19, x20, [sp], #64
 9d4:	ret
 9d8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 9dc:	str	x0, [x19]
 9e0:	sub	x20, x0, #0x1
 9e4:	tst	x0, x20
 9e8:	b.ne	a6c <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x13c>  // b.any
 9ec:	add	x20, x22, x20
 9f0:	neg	x5, x0
 9f4:	and	x20, x20, x5
 9f8:	cbnz	x0, 970 <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x40>
 9fc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 a00:	neg	x5, x0
 a04:	str	x0, [x19]
 a08:	b	970 <_ZN11__sanitizer23MmapFixedSuperNoReserveEmmPKc+0x40>
 a0c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 a10:	ldr	w5, [sp, #60]
 a14:	mov	x4, x19
 a18:	mov	x3, x20
 a1c:	ldr	x1, [x1]
 a20:	mov	x2, x20
 a24:	mov	w19, #0x0                   	// #0
 a28:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 a2c:	add	x0, x0, #0x0
 a30:	ldr	x1, [x1]
 a34:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 a38:	mov	w0, w19
 a3c:	ldp	x21, x22, [sp, #16]
 a40:	ldp	x23, x30, [sp, #32]
 a44:	ldp	x19, x20, [sp], #64
 a48:	ret
 a4c:	mov	w2, #0xe                   	// #14
 a50:	mov	w19, #0x1                   	// #1
 a54:	bl	0 <madvise>
 a58:	mov	w0, w19
 a5c:	ldp	x21, x22, [sp, #16]
 a60:	ldp	x23, x30, [sp, #32]
 a64:	ldp	x19, x20, [sp], #64
 a68:	ret
 a6c:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 a70:	add	x0, x0, #0x0
 a74:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 a78:	bl	0 <_ZN11__sanitizer3DieEv>
 a7c:	nop

0000000000000a80 <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm>:
 a80:	stp	x19, x20, [sp, #-32]!
 a84:	mov	x19, x0
 a88:	mov	x20, x2
 a8c:	stp	x21, x30, [sp, #16]
 a90:	mov	x21, x1
 a94:	cbz	x3, ac0 <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm+0x40>
 a98:	mov	x4, x2
 a9c:	mov	x0, x3
 aa0:	mov	w2, #0x0                   	// #0
 aa4:	mov	w3, #0x4032                	// #16434
 aa8:	bl	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>
 aac:	stp	x0, x21, [x19]
 ab0:	str	x20, [x19, #16]
 ab4:	ldp	x21, x30, [sp, #16]
 ab8:	ldp	x19, x20, [sp], #32
 abc:	ret
 ac0:	mov	x5, #0x0                   	// #0
 ac4:	mov	w4, #0xffffffff            	// #-1
 ac8:	mov	w3, #0x4022                	// #16418
 acc:	mov	w2, #0x0                   	// #0
 ad0:	mov	x0, #0x0                   	// #0
 ad4:	bl	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 ad8:	stp	x0, x21, [x19]
 adc:	str	x20, [x19, #16]
 ae0:	ldp	x21, x30, [sp, #16]
 ae4:	ldp	x19, x20, [sp], #32
 ae8:	ret
 aec:	nop

0000000000000af0 <_ZN11__sanitizer20ReservedAddressRange3MapEmmPKc>:
 af0:	mov	x0, x1
 af4:	mov	x1, x2
 af8:	mov	x2, x3
 afc:	b	0 <_ZN11__sanitizer26MmapFixedOrDieOnFatalErrorEmmPKc>

0000000000000b00 <_ZN11__sanitizer20ReservedAddressRange8MapOrDieEmmPKc>:
 b00:	mov	x0, x1
 b04:	mov	x1, x2
 b08:	mov	x2, x3
 b0c:	b	0 <_ZN11__sanitizer14MmapFixedOrDieEmmPKc>

0000000000000b10 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm>:
 b10:	ldr	x4, [x0, #8]
 b14:	str	x30, [sp, #-16]!
 b18:	mov	x5, x0
 b1c:	cmp	x2, x4
 b20:	b.hi	b7c <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x6c>  // b.pmore
 b24:	mov	x0, x1
 b28:	ldr	x1, [x5]
 b2c:	cmp	x1, x0
 b30:	b.eq	b58 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x48>  // b.none
 b34:	add	x1, x1, x4
 b38:	add	x3, x2, x0
 b3c:	cmp	x3, x1
 b40:	b.ne	b98 <_ZN11__sanitizer20ReservedAddressRange5UnmapEmm+0x88>  // b.any
 b44:	ldr	x30, [sp], #16
 b48:	sub	x4, x4, x2
 b4c:	str	x4, [x5, #8]
 b50:	mov	x1, x2
 b54:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 b58:	ldr	x30, [sp], #16
 b5c:	cmp	x2, x4
 b60:	add	x1, x2, x0
 b64:	sub	x4, x4, x2
 b68:	csel	x1, x1, xzr, ne  // ne = any
 b6c:	str	x1, [x5]
 b70:	str	x4, [x5, #8]
 b74:	mov	x1, x2
 b78:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 b7c:	mov	x3, x2
 b80:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 b84:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 b88:	add	x0, x0, #0x0
 b8c:	add	x2, x2, #0x0
 b90:	mov	w1, #0x16d                 	// #365
 b94:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 b98:	mov	x4, x1
 b9c:	adrp	x2, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 ba0:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 ba4:	add	x2, x2, #0x0
 ba8:	add	x0, x0, #0x0
 bac:	mov	w1, #0x172                 	// #370
 bb0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 bb4:	nop

0000000000000bb8 <_ZN11__sanitizer17MmapFixedNoAccessEmmPKc>:
 bb8:	mov	x4, x2
 bbc:	mov	w3, #0x4032                	// #16434
 bc0:	mov	w2, #0x0                   	// #0
 bc4:	b	0 <_ZN11__sanitizer9MmapNamedEPvmiiPKc>

0000000000000bc8 <_ZN11__sanitizer12MmapNoAccessEm>:
 bc8:	mov	x1, x0
 bcc:	mov	x5, #0x0                   	// #0
 bd0:	mov	w4, #0xffffffff            	// #-1
 bd4:	mov	w3, #0x4022                	// #16418
 bd8:	mov	w2, #0x0                   	// #0
 bdc:	mov	x0, #0x0                   	// #0
 be0:	b	0 <_ZN11__sanitizer13internal_mmapEPvmiiiy>
 be4:	nop

0000000000000be8 <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm>:
 be8:	adrp	x3, 0 <real_pthread_attr_getstack>
 bec:	ldr	x3, [x3]
 bf0:	cbz	x3, bf8 <_ZN11__sanitizer24my_pthread_attr_getstackEPvPS0_Pm+0x10>
 bf4:	b	0 <real_pthread_attr_getstack>
 bf8:	b	0 <pthread_attr_getstack>
 bfc:	nop

0000000000000c00 <_ZN11__sanitizer15AdjustStackSizeEPv>:
 c00:	adrp	x1, 0 <real_pthread_attr_getstack>
 c04:	stp	x19, x20, [sp, #-48]!
 c08:	mov	x20, x0
 c0c:	ldr	x1, [x1]
 c10:	str	x30, [sp, #16]
 c14:	stp	xzr, xzr, [sp, #32]
 c18:	add	x2, sp, #0x28
 c1c:	cbz	x1, c98 <_ZN11__sanitizer15AdjustStackSizeEPv+0x98>
 c20:	add	x1, sp, #0x20
 c24:	bl	0 <real_pthread_attr_getstack>
 c28:	ldr	x1, [sp, #32]
 c2c:	cbz	x1, c3c <_ZN11__sanitizer15AdjustStackSizeEPv+0x3c>
 c30:	ldr	x0, [sp, #40]
 c34:	cmn	x1, x0
 c38:	b.ne	c60 <_ZN11__sanitizer15AdjustStackSizeEPv+0x60>  // b.any
 c3c:	bl	0 <_ZN11__sanitizer10GetTlsSizeEv>
 c40:	add	x19, x0, #0x20, lsl #12
 c44:	ldr	x1, [sp, #40]
 c48:	cmp	x1, #0x0
 c4c:	ccmp	x19, x1, #0x0, ne  // ne = any
 c50:	b.hi	ca4 <_ZN11__sanitizer15AdjustStackSizeEPv+0xa4>  // b.pmore
 c54:	ldr	x30, [sp, #16]
 c58:	ldp	x19, x20, [sp], #48
 c5c:	ret
 c60:	bl	0 <_ZN11__sanitizer10GetTlsSizeEv>
 c64:	add	x2, x0, #0x20, lsl #12
 c68:	ldr	x1, [sp, #40]
 c6c:	cmp	x2, x1
 c70:	b.ls	c54 <_ZN11__sanitizer15AdjustStackSizeEPv+0x54>  // b.plast
 c74:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 c78:	add	x0, x0, #0x0
 c7c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 c80:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 c84:	add	x0, x0, #0x0
 c88:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 c8c:	ldr	x30, [sp, #16]
 c90:	ldp	x19, x20, [sp], #48
 c94:	ret
 c98:	add	x1, sp, #0x20
 c9c:	bl	0 <pthread_attr_getstack>
 ca0:	b	c28 <_ZN11__sanitizer15AdjustStackSizeEPv+0x28>
 ca4:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 ca8:	ldr	x0, [x0]
 cac:	ldr	w0, [x0]
 cb0:	cbnz	w0, ccc <_ZN11__sanitizer15AdjustStackSizeEPv+0xcc>
 cb4:	mov	x1, x19
 cb8:	mov	x0, x20
 cbc:	bl	0 <pthread_attr_setstacksize>
 cc0:	ldr	x30, [sp, #16]
 cc4:	ldp	x19, x20, [sp], #48
 cc8:	ret
 ccc:	mov	x2, x19
 cd0:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 cd4:	add	x0, x0, #0x0
 cd8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 cdc:	b	cb4 <_ZN11__sanitizer15AdjustStackSizeEPv+0xb4>

0000000000000ce0 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii>:
 ce0:	stp	x19, x20, [sp, #-80]!
 ce4:	mov	w20, w4
 ce8:	stp	x21, x22, [sp, #16]
 cec:	mov	w22, w2
 cf0:	mov	w21, w3
 cf4:	stp	x23, x24, [sp, #32]
 cf8:	mov	x23, x0
 cfc:	mov	x24, x1
 d00:	str	x30, [sp, #48]
 d04:	bl	0 <_ZN11__sanitizer13internal_forkEv>
 d08:	mov	w19, w0
 d0c:	cmp	w0, #0x0
 d10:	b.lt	d60 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x80>  // b.tstop
 d14:	b.eq	d88 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xa8>  // b.none
 d18:	cmn	w22, #0x1
 d1c:	b.eq	d28 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x48>  // b.none
 d20:	mov	w0, w22
 d24:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 d28:	cmn	w21, #0x1
 d2c:	b.eq	d38 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x58>  // b.none
 d30:	mov	w0, w21
 d34:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 d38:	cmn	w20, #0x1
 d3c:	b.eq	d48 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x68>  // b.none
 d40:	mov	w0, w20
 d44:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 d48:	mov	w0, w19
 d4c:	ldp	x21, x22, [sp, #16]
 d50:	ldp	x23, x24, [sp, #32]
 d54:	ldr	x30, [sp, #48]
 d58:	ldp	x19, x20, [sp], #80
 d5c:	ret
 d60:	add	x1, sp, #0x4c
 d64:	sxtw	x0, w0
 d68:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 d6c:	tst	w0, #0xff
 d70:	b.eq	d18 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x38>  // b.none
 d74:	ldr	w1, [sp, #76]
 d78:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 d7c:	add	x0, x0, #0x0
 d80:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 d84:	b	d18 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x38>
 d88:	cmn	w22, #0x1
 d8c:	b.eq	da8 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xc8>  // b.none
 d90:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 d94:	mov	w1, #0x0                   	// #0
 d98:	mov	w0, w22
 d9c:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 da0:	mov	w0, w22
 da4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 da8:	cmn	w21, #0x1
 dac:	b.eq	dcc <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0xec>  // b.none
 db0:	mov	w0, #0x1                   	// #1
 db4:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 db8:	mov	w1, #0x1                   	// #1
 dbc:	mov	w0, w21
 dc0:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 dc4:	mov	w0, w21
 dc8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 dcc:	cmn	w20, #0x1
 dd0:	b.eq	df0 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x110>  // b.none
 dd4:	mov	w0, #0x2                   	// #2
 dd8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 ddc:	mov	w1, #0x2                   	// #2
 de0:	mov	w0, w20
 de4:	bl	0 <_ZN11__sanitizer13internal_dup2Eii>
 de8:	mov	w0, w20
 dec:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 df0:	mov	w0, #0x4                   	// #4
 df4:	bl	0 <sysconf>
 df8:	mov	x19, x0
 dfc:	cmp	w0, #0x2
 e00:	b.le	e18 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x138>
 e04:	mov	w0, w19
 e08:	sub	w19, w19, #0x1
 e0c:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 e10:	cmp	w19, #0x2
 e14:	b.ne	e04 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii+0x124>  // b.any
 e18:	mov	x1, x24
 e1c:	mov	x0, x23
 e20:	bl	0 <execv>
 e24:	mov	w0, #0x1                   	// #1
 e28:	bl	0 <_ZN11__sanitizer14internal__exitEi>
 e2c:	nop

0000000000000e30 <_ZN11__sanitizer16IsProcessRunningEi>:
 e30:	stp	x19, x30, [sp, #-32]!
 e34:	mov	w2, #0x1                   	// #1
 e38:	add	x1, sp, #0x18
 e3c:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
 e40:	add	x1, sp, #0x1c
 e44:	mov	x19, x0
 e48:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 e4c:	cmp	x19, #0x0
 e50:	cset	w19, eq  // eq = none
 e54:	tst	w0, #0xff
 e58:	b.ne	e68 <_ZN11__sanitizer16IsProcessRunningEi+0x38>  // b.any
 e5c:	mov	w0, w19
 e60:	ldp	x19, x30, [sp], #32
 e64:	ret
 e68:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 e6c:	mov	w19, #0x0                   	// #0
 e70:	ldr	x0, [x0]
 e74:	ldr	w0, [x0]
 e78:	cbz	w0, e5c <_ZN11__sanitizer16IsProcessRunningEi+0x2c>
 e7c:	ldr	w1, [sp, #28]
 e80:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 e84:	add	x0, x0, #0x0
 e88:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 e8c:	mov	w0, w19
 e90:	ldp	x19, x30, [sp], #32
 e94:	ret

0000000000000e98 <_ZN11__sanitizer14WaitForProcessEi>:
 e98:	stp	x19, x30, [sp, #-32]!
 e9c:	mov	w2, #0x0                   	// #0
 ea0:	add	x1, sp, #0x18
 ea4:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
 ea8:	add	x1, sp, #0x1c
 eac:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
 eb0:	tst	w0, #0xff
 eb4:	b.ne	ec8 <_ZN11__sanitizer14WaitForProcessEi+0x30>  // b.any
 eb8:	ldr	w19, [sp, #24]
 ebc:	mov	w0, w19
 ec0:	ldp	x19, x30, [sp], #32
 ec4:	ret
 ec8:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 ecc:	mov	w19, #0xffffffff            	// #-1
 ed0:	ldr	x0, [x0]
 ed4:	ldr	w0, [x0]
 ed8:	cbz	w0, ebc <_ZN11__sanitizer14WaitForProcessEi+0x24>
 edc:	ldr	w1, [sp, #28]
 ee0:	adrp	x0, 0 <_ZN11__sanitizerL6setlimEim.part.0>
 ee4:	add	x0, x0, #0x0
 ee8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 eec:	b	ebc <_ZN11__sanitizer14WaitForProcessEi+0x24>

0000000000000ef0 <_ZN11__sanitizer15IsStateDetachedEi>:
 ef0:	cmp	w0, #0x1
 ef4:	cset	w0, eq  // eq = none
 ef8:	ret

sanitizer_stoptheworld_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>:
       0:	ldr	x0, [x0, #24]
       4:	ret

0000000000000008 <_ZNK11__sanitizer25SuspendedThreadsListLinux13RegisterCountEv>:
       8:	mov	x0, #0x22                  	// #34
       c:	ret

0000000000000010 <_ZNK11__sanitizer25SuspendedThreadsListLinux11GetThreadIDEm>:
      10:	ldr	x4, [x0, #24]
      14:	cmp	x1, x4
      18:	b.cs	28 <_ZNK11__sanitizer25SuspendedThreadsListLinux11GetThreadIDEm+0x18>  // b.hs, b.nlast
      1c:	ldr	x0, [x0, #8]
      20:	ldr	x0, [x0, x1, lsl #3]
      24:	ret
      28:	str	x30, [sp, #-16]!
      2c:	mov	x3, x1
      30:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
      34:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
      38:	add	x2, x2, #0x0
      3c:	add	x0, x0, #0x0
      40:	mov	w1, #0x204                 	// #516
      44:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000048 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_>:
      48:	stp	x19, x20, [sp, #-352]!
      4c:	mov	x19, x2
      50:	adrp	x4, 10 <_ZNK11__sanitizer25SuspendedThreadsListLinux11GetThreadIDEm>
      54:	ldr	x2, [x0]
      58:	stp	x21, x22, [sp, #16]
      5c:	add	x4, x4, #0x0
      60:	stp	x23, x30, [sp, #32]
      64:	mov	x20, x3
      68:	ldr	x2, [x2, #24]
      6c:	cmp	x2, x4
      70:	b.ne	114 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0xcc>  // b.any
      74:	ldr	x4, [x0, #24]
      78:	mov	x3, x1
      7c:	cmp	x1, x4
      80:	b.cs	138 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0xf0>  // b.hs, b.nlast
      84:	ldr	x0, [x0, #8]
      88:	ldr	x21, [x0, x1, lsl #3]
      8c:	add	x3, sp, #0x40
      90:	mov	x2, #0x1                   	// #1
      94:	mov	w1, w21
      98:	add	x22, sp, #0x50
      9c:	mov	x23, #0x110                 	// #272
      a0:	mov	w0, #0x4204                	// #16900
      a4:	stp	x22, x23, [sp, #64]
      a8:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
      ac:	add	x1, sp, #0x3c
      b0:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
      b4:	tst	w0, #0xff
      b8:	b.eq	e8 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0xa0>  // b.none
      bc:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
      c0:	ldr	w2, [sp, #60]
      c4:	ldr	x0, [x0]
      c8:	ldr	w0, [x0]
      cc:	cbnz	w0, 120 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0xd8>
      d0:	cmp	w2, #0x3
      d4:	csetm	w0, eq  // eq = none
      d8:	ldp	x21, x22, [sp, #16]
      dc:	ldp	x23, x30, [sp, #32]
      e0:	ldp	x19, x20, [sp], #352
      e4:	ret
      e8:	ldr	x0, [sp, #328]
      ec:	str	x0, [x20]
      f0:	mov	x2, x23
      f4:	mov	x1, x22
      f8:	mov	x0, x19
      fc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     100:	mov	w0, #0x1                   	// #1
     104:	ldp	x21, x22, [sp, #16]
     108:	ldp	x23, x30, [sp, #32]
     10c:	ldp	x19, x20, [sp], #352
     110:	ret
     114:	blr	x2
     118:	mov	x21, x0
     11c:	b	8c <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0x44>
     120:	mov	w1, w21
     124:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     128:	add	x0, x0, #0x0
     12c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     130:	ldr	w2, [sp, #60]
     134:	b	d0 <_ZNK11__sanitizer25SuspendedThreadsListLinux17GetRegistersAndSPEmPmS1_+0x88>
     138:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     13c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     140:	add	x2, x2, #0x0
     144:	add	x0, x0, #0x0
     148:	mov	w1, #0x204                 	// #516
     14c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000150 <_ZN11__sanitizerL23TracerThreadDieCallbackEv>:
     150:	stp	x19, x20, [sp, #-32]!
     154:	adrp	x20, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     158:	ldr	x19, [x20]
     15c:	str	x30, [sp, #24]
     160:	cbz	x19, 17c <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x2c>
     164:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     168:	adrp	x1, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
     16c:	ldr	x1, [x1]
     170:	ldr	x1, [x1]
     174:	cmp	x0, x1
     178:	b.eq	188 <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x38>  // b.none
     17c:	ldr	x30, [sp, #24]
     180:	ldp	x19, x20, [sp], #32
     184:	ret
     188:	ldr	x0, [x19, #32]
     18c:	cbz	x0, 1c4 <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x74>
     190:	str	x21, [sp, #16]
     194:	mov	x21, #0x0                   	// #0
     198:	ldr	x1, [x19, #16]
     19c:	mov	x3, #0x0                   	// #0
     1a0:	mov	x2, #0x0                   	// #0
     1a4:	mov	w0, #0x8                   	// #8
     1a8:	ldr	x1, [x1, x21, lsl #3]
     1ac:	add	x21, x21, #0x1
     1b0:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     1b4:	ldr	x0, [x19, #32]
     1b8:	cmp	x0, x21
     1bc:	b.hi	198 <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x48>  // b.pmore
     1c0:	ldr	x21, [sp, #16]
     1c4:	str	xzr, [x20]
     1c8:	b	17c <_ZN11__sanitizerL23TracerThreadDieCallbackEv+0x2c>
     1cc:	nop

00000000000001d0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>:
     1d0:	stp	x19, x20, [sp, #-96]!
     1d4:	mov	x19, x1
     1d8:	mov	x20, x0
     1dc:	ldr	x1, [x0, #32]
     1e0:	stp	x21, x22, [sp, #16]
     1e4:	str	x30, [sp, #64]
     1e8:	cbz	x1, 228 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x58>
     1ec:	mov	x2, #0x0                   	// #0
     1f0:	ldr	x4, [x0, #16]
     1f4:	b	204 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x34>
     1f8:	add	x2, x2, #0x1
     1fc:	cmp	x2, x1
     200:	b.eq	228 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x58>  // b.none
     204:	ldr	x3, [x4, x2, lsl #3]
     208:	cmp	x19, x3
     20c:	b.ne	1f8 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x28>  // b.any
     210:	mov	w21, #0x0                   	// #0
     214:	mov	w0, w21
     218:	ldp	x21, x22, [sp, #16]
     21c:	ldr	x30, [sp, #64]
     220:	ldp	x19, x20, [sp], #96
     224:	ret
     228:	mov	x3, #0x0                   	// #0
     22c:	mov	x2, #0x0                   	// #0
     230:	mov	w1, w19
     234:	mov	w0, #0x10                  	// #16
     238:	stp	x23, x24, [sp, #32]
     23c:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     240:	add	x1, sp, #0x50
     244:	mov	w23, w19
     248:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     24c:	ands	w21, w0, #0xff
     250:	b.ne	34c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x17c>  // b.any
     254:	stp	x25, x26, [sp, #48]
     258:	adrp	x25, 0 <_ZN11__sanitizer17current_verbosityE>
     25c:	ldr	x0, [x25]
     260:	ldr	w0, [x0]
     264:	sxtw	x0, w0
     268:	cmp	x0, #0x1
     26c:	b.hi	378 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x1a8>  // b.pmore
     270:	add	x24, sp, #0x54
     274:	add	x22, sp, #0x58
     278:	mov	w2, #0x40000000            	// #1073741824
     27c:	mov	x1, x24
     280:	mov	w0, w23
     284:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
     288:	mov	x1, x22
     28c:	mov	x26, x0
     290:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     294:	tst	w0, #0xff
     298:	b.eq	2a8 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0xd8>  // b.none
     29c:	ldr	w0, [sp, #88]
     2a0:	cmp	w0, #0x4
     2a4:	b.eq	278 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0xa8>  // b.none
     2a8:	mov	x0, x26
     2ac:	mov	x1, x22
     2b0:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     2b4:	tst	w0, #0xff
     2b8:	b.ne	474 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x2a4>  // b.any
     2bc:	ldr	w3, [sp, #84]
     2c0:	and	w0, w3, #0xff
     2c4:	cmp	w0, #0x7f
     2c8:	b.ne	2f0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x120>  // b.any
     2cc:	ubfx	x3, x3, #8, #8
     2d0:	cmp	w3, #0x13
     2d4:	b.eq	2f0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x120>  // b.none
     2d8:	and	x3, x3, #0xff
     2dc:	mov	w1, w23
     2e0:	mov	x2, #0x0                   	// #0
     2e4:	mov	w0, #0x7                   	// #7
     2e8:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     2ec:	b	278 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0xa8>
     2f0:	ldr	x4, [x20, #24]
     2f4:	str	x19, [sp, #88]
     2f8:	ldr	x3, [x20, #32]
     2fc:	add	x21, x20, #0x10
     300:	lsr	x4, x4, #3
     304:	cmp	x3, x4
     308:	b.hi	45c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x28c>  // b.pmore
     30c:	add	x19, x3, #0x1
     310:	b.eq	38c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x1bc>  // b.none
     314:	ldr	x23, [x20, #16]
     318:	str	x19, [x21, #16]
     31c:	mov	x1, x22
     320:	add	x0, x23, x3, lsl #3
     324:	mov	x2, #0x8                   	// #8
     328:	mov	w21, #0x1                   	// #1
     32c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     330:	mov	w0, w21
     334:	ldp	x21, x22, [sp, #16]
     338:	ldp	x23, x24, [sp, #32]
     33c:	ldp	x25, x26, [sp, #48]
     340:	ldr	x30, [sp, #64]
     344:	ldp	x19, x20, [sp], #96
     348:	ret
     34c:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
     350:	mov	w21, #0x0                   	// #0
     354:	ldr	x0, [x0]
     358:	ldr	w0, [x0]
     35c:	cbnz	w0, 440 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x270>
     360:	mov	w0, w21
     364:	ldp	x21, x22, [sp, #16]
     368:	ldp	x23, x24, [sp, #32]
     36c:	ldr	x30, [sp, #64]
     370:	ldp	x19, x20, [sp], #96
     374:	ret
     378:	mov	x1, x19
     37c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     380:	add	x0, x0, #0x0
     384:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     388:	b	270 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0xa0>
     38c:	tst	x3, x19
     390:	b.eq	3cc <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x1fc>  // b.none
     394:	clz	x2, x19
     398:	mov	w1, #0x3f                  	// #63
     39c:	sub	w2, w1, w2
     3a0:	mov	x1, #0x1                   	// #1
     3a4:	add	w4, w2, #0x1
     3a8:	lsl	x4, x1, x4
     3ac:	cmp	x4, x19
     3b0:	b.ls	50c <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x33c>  // b.plast
     3b4:	lsl	x1, x1, x2
     3b8:	cmp	x1, x19
     3bc:	b.cs	4ec <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x31c>  // b.hs, b.nlast
     3c0:	cmp	x3, x4
     3c4:	b.hi	4c4 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x2f4>  // b.pmore
     3c8:	mov	x19, x4
     3cc:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
     3d0:	lsl	x19, x19, #3
     3d4:	ldr	x23, [x23]
     3d8:	ldr	x0, [x23]
     3dc:	cbz	x0, 4a0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x2d0>
     3e0:	sub	x1, x0, #0x1
     3e4:	tst	x0, x1
     3e8:	b.ne	4dc <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x30c>  // b.any
     3ec:	add	x19, x19, x1
     3f0:	neg	x0, x0
     3f4:	and	x19, x19, x0
     3f8:	mov	w2, #0x0                   	// #0
     3fc:	mov	x0, x19
     400:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     404:	add	x1, x1, #0x0
     408:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     40c:	ldr	x1, [x20, #16]
     410:	mov	x23, x0
     414:	ldr	x2, [x21, #16]
     418:	lsl	x2, x2, #3
     41c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     420:	ldr	x1, [x21, #8]
     424:	ldr	x0, [x20, #16]
     428:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     42c:	ldr	x3, [x21, #16]
     430:	str	x23, [x20, #16]
     434:	str	x19, [x21, #8]
     438:	add	x19, x3, #0x1
     43c:	b	318 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x148>
     440:	ldr	w2, [sp, #80]
     444:	mov	x1, x19
     448:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     44c:	add	x0, x0, #0x0
     450:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     454:	ldp	x23, x24, [sp, #32]
     458:	b	214 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x44>
     45c:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     460:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     464:	add	x2, x2, #0x0
     468:	add	x0, x0, #0x0
     46c:	mov	w1, #0x1cd                 	// #461
     470:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     474:	ldr	x25, [x25]
     478:	ldr	w0, [x25]
     47c:	cbnz	w0, 4ac <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x2dc>
     480:	mov	w1, w19
     484:	mov	x3, #0x0                   	// #0
     488:	mov	x2, #0x0                   	// #0
     48c:	mov	w0, #0x11                  	// #17
     490:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     494:	ldp	x23, x24, [sp, #32]
     498:	ldp	x25, x26, [sp, #48]
     49c:	b	214 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x44>
     4a0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     4a4:	str	x0, [x23]
     4a8:	b	3e0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x210>
     4ac:	ldr	w2, [sp, #88]
     4b0:	mov	x1, x19
     4b4:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4b8:	add	x0, x0, #0x0
     4bc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     4c0:	b	480 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy+0x2b0>
     4c4:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4c8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4cc:	add	x2, x2, #0x0
     4d0:	add	x0, x0, #0x0
     4d4:	mov	w1, #0x20c                 	// #524
     4d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     4dc:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4e0:	add	x0, x0, #0x0
     4e4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     4e8:	bl	0 <_ZN11__sanitizer3DieEv>
     4ec:	mov	x4, x1
     4f0:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4f4:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     4f8:	mov	x3, x19
     4fc:	add	x2, x2, #0x0
     500:	add	x0, x0, #0x0
     504:	mov	w1, #0x18b                 	// #395
     508:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     50c:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     510:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     514:	mov	x3, x19
     518:	add	x2, x2, #0x0
     51c:	add	x0, x0, #0x0
     520:	mov	w1, #0x18a                 	// #394
     524:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000528 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv>:
     528:	stp	x19, x20, [sp, #-80]!
     52c:	mov	x20, x0
     530:	ldr	x0, [x0, #32]
     534:	str	x30, [sp, #56]
     538:	cbz	x0, 5fc <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0xd4>
     53c:	mov	x19, #0x0                   	// #0
     540:	stp	x21, x22, [sp, #16]
     544:	adrp	x22, 0 <_ZN11__sanitizer17current_verbosityE>
     548:	stp	x23, x24, [sp, #32]
     54c:	adrp	x24, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     550:	add	x23, sp, #0x4c
     554:	add	x24, x24, #0x0
     558:	str	x25, [sp, #48]
     55c:	adrp	x25, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     560:	add	x25, x25, #0x0
     564:	b	598 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x70>
     568:	ldr	x2, [x22]
     56c:	mov	w1, w21
     570:	mov	x0, x24
     574:	ldr	w2, [x2]
     578:	sxtw	x2, w2
     57c:	cmp	x2, #0x1
     580:	b.ls	588 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x60>  // b.plast
     584:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     588:	ldr	x0, [x20, #32]
     58c:	add	x19, x19, #0x1
     590:	cmp	x0, x19
     594:	b.ls	5f0 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0xc8>  // b.plast
     598:	ldr	x1, [x20, #16]
     59c:	mov	x3, #0x0                   	// #0
     5a0:	mov	x2, #0x0                   	// #0
     5a4:	mov	w0, #0x11                  	// #17
     5a8:	ldr	x21, [x1, x19, lsl #3]
     5ac:	mov	w1, w21
     5b0:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     5b4:	mov	x1, x23
     5b8:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     5bc:	tst	w0, #0xff
     5c0:	b.eq	568 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x40>  // b.none
     5c4:	ldr	x0, [x22]
     5c8:	ldr	w0, [x0]
     5cc:	cbz	w0, 588 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x60>
     5d0:	ldr	w2, [sp, #76]
     5d4:	mov	x0, x25
     5d8:	mov	w1, w21
     5dc:	add	x19, x19, #0x1
     5e0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     5e4:	ldr	x0, [x20, #32]
     5e8:	cmp	x0, x19
     5ec:	b.hi	598 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv+0x70>  // b.pmore
     5f0:	ldp	x21, x22, [sp, #16]
     5f4:	ldp	x23, x24, [sp, #32]
     5f8:	ldr	x25, [sp, #48]
     5fc:	ldr	x30, [sp, #56]
     600:	ldp	x19, x20, [sp], #80
     604:	ret

0000000000000608 <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv>:
     608:	stp	x19, x20, [sp, #-32]!
     60c:	mov	x20, x0
     610:	ldr	x0, [x0, #32]
     614:	str	x30, [sp, #16]
     618:	cbz	x0, 648 <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv+0x40>
     61c:	mov	x19, #0x0                   	// #0
     620:	ldr	x1, [x20, #16]
     624:	mov	x3, #0x0                   	// #0
     628:	mov	x2, #0x0                   	// #0
     62c:	mov	w0, #0x8                   	// #8
     630:	ldr	x1, [x1, x19, lsl #3]
     634:	add	x19, x19, #0x1
     638:	bl	0 <_ZN11__sanitizer15internal_ptraceEiiPvS0_>
     63c:	ldr	x0, [x20, #32]
     640:	cmp	x0, x19
     644:	b.hi	620 <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv+0x18>  // b.pmore
     648:	ldr	x30, [sp, #16]
     64c:	ldp	x19, x20, [sp], #32
     650:	ret
     654:	nop

0000000000000658 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv>:
     658:	stp	x19, x20, [sp, #-96]!
     65c:	mov	w20, w0
     660:	add	x19, sp, #0x20
     664:	stp	x21, x30, [sp, #16]
     668:	mov	x0, x19
     66c:	stp	x1, x2, [sp, #32]
     670:	bl	0 <_ZNK11__sanitizer13SignalContext10GetAddressEv>
     674:	mov	x1, x0
     678:	mov	x0, x19
     67c:	str	x1, [sp, #48]
     680:	adrp	x21, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     684:	bl	0 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>
     688:	mov	w1, w0
     68c:	mov	x0, x19
     690:	strb	w1, [sp, #80]
     694:	bl	0 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>
     698:	mov	w1, w0
     69c:	mov	x0, x19
     6a0:	str	w1, [sp, #84]
     6a4:	bl	0 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>
     6a8:	mov	w1, w0
     6ac:	mov	x0, x19
     6b0:	strb	w1, [sp, #88]
     6b4:	bl	0 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>
     6b8:	ldp	x2, x3, [sp, #48]
     6bc:	mov	w1, w20
     6c0:	ldr	x4, [sp, #64]
     6c4:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     6c8:	add	x0, x0, #0x0
     6cc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     6d0:	ldr	x19, [x21]
     6d4:	cbz	x19, 70c <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0xb4>
     6d8:	mov	x0, x19
     6dc:	cmp	w20, #0x6
     6e0:	b.eq	71c <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0xc4>  // b.none
     6e4:	bl	528 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv>
     6e8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     6ec:	add	x0, x0, #0x0
     6f0:	bl	0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>
     6f4:	tst	w0, #0xff
     6f8:	b.eq	724 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0xcc>  // b.none
     6fc:	ldr	x0, [x19]
     700:	mov	x1, #0x1                   	// #1
     704:	str	xzr, [x21]
     708:	str	x1, [x0, #104]
     70c:	cmp	w20, #0x6
     710:	cset	w0, ne  // ne = any
     714:	add	w0, w0, #0x1
     718:	bl	0 <_ZN11__sanitizer14internal__exitEi>
     71c:	bl	608 <_ZN11__sanitizer15ThreadSuspender14KillAllThreadsEv>
     720:	b	6e8 <_ZN11__sanitizerL25TracerThreadSignalHandlerEiPNS_19__sanitizer_siginfoEPv+0x90>
     724:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     728:	add	x0, x0, #0x0
     72c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     730:	bl	0 <_ZN11__sanitizer3DieEv>
     734:	nop

0000000000000738 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv>:
     738:	stp	x19, x20, [sp, #-128]!
     73c:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
     740:	stp	x21, x22, [sp, #16]
     744:	mov	x22, x0
     748:	stp	x23, x24, [sp, #32]
     74c:	add	x23, sp, #0x60
     750:	ldr	w1, [x22, #40]
     754:	mov	x0, x23
     758:	stp	x25, x30, [sp, #48]
     75c:	bl	0 <_ZN11__sanitizer12ThreadListerC1Ei>
     760:	str	xzr, [sp, #64]
     764:	ldr	x19, [x19]
     768:	stp	xzr, xzr, [sp, #72]
     76c:	ldr	x0, [x19]
     770:	cbz	x0, 89c <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x164>
     774:	sub	x1, x0, #0x1
     778:	tst	x1, x0
     77c:	b.ne	8a8 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x170>  // b.any
     780:	add	x19, x0, #0x3ff
     784:	neg	x0, x0
     788:	and	x19, x19, x0
     78c:	mov	w2, #0x0                   	// #0
     790:	mov	x0, x19
     794:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     798:	add	x1, x1, #0x0
     79c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     7a0:	ldr	x1, [sp, #64]
     7a4:	mov	x20, x0
     7a8:	ldr	x2, [sp, #80]
     7ac:	add	x25, sp, #0x40
     7b0:	mov	w24, #0x0                   	// #0
     7b4:	lsl	x2, x2, #3
     7b8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     7bc:	ldp	x0, x1, [sp, #64]
     7c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     7c4:	stp	x20, x19, [sp, #64]
     7c8:	mov	x1, x25
     7cc:	mov	x0, x23
     7d0:	bl	0 <_ZN11__sanitizer12ThreadLister11ListThreadsEPNS_18InternalMmapVectorIyEE>
     7d4:	cbz	w0, 860 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x128>
     7d8:	cmp	w0, #0x1
     7dc:	b.ne	7fc <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xc4>  // b.any
     7e0:	ldr	x19, [sp, #64]
     7e4:	ldr	x21, [sp, #80]
     7e8:	add	x21, x19, x21, lsl #3
     7ec:	cmp	x21, x19
     7f0:	b.eq	8b8 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x180>  // b.none
     7f4:	mov	w20, w0
     7f8:	b	818 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xe0>
     7fc:	ldr	x19, [sp, #64]
     800:	ldr	x21, [sp, #80]
     804:	add	x21, x19, x21, lsl #3
     808:	cmp	x21, x19
     80c:	b.eq	850 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x118>  // b.none
     810:	mov	w20, #0x0                   	// #0
     814:	nop
     818:	ldr	x1, [x19], #8
     81c:	mov	x0, x22
     820:	bl	1d0 <_ZN11__sanitizer15ThreadSuspender13SuspendThreadEy>
     824:	ands	w0, w0, #0xff
     828:	csel	w20, w20, w0, eq  // eq = none
     82c:	cmp	x21, x19
     830:	b.ne	818 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0xe0>  // b.any
     834:	eor	w20, w20, #0x1
     838:	and	w20, w20, #0xff
     83c:	add	w24, w24, #0x1
     840:	cmp	w20, #0x0
     844:	ccmp	w24, #0x1d, #0x0, eq  // eq = none
     848:	b.le	7c8 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x90>
     84c:	ldr	x19, [sp, #64]
     850:	ldr	x0, [x22, #32]
     854:	cmp	x0, #0x0
     858:	cset	w20, ne  // ne = any
     85c:	b	870 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x138>
     860:	mov	x0, x22
     864:	bl	528 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv>
     868:	ldr	x19, [sp, #64]
     86c:	mov	w20, #0x0                   	// #0
     870:	ldr	x1, [sp, #72]
     874:	mov	x0, x19
     878:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     87c:	mov	x0, x23
     880:	bl	0 <_ZN11__sanitizer12ThreadListerD1Ev>
     884:	mov	w0, w20
     888:	ldp	x21, x22, [sp, #16]
     88c:	ldp	x23, x24, [sp, #32]
     890:	ldp	x25, x30, [sp, #48]
     894:	ldp	x19, x20, [sp], #128
     898:	ret
     89c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     8a0:	str	x0, [x19]
     8a4:	b	774 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x3c>
     8a8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     8ac:	add	x0, x0, #0x0
     8b0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     8b4:	bl	0 <_ZN11__sanitizer3DieEv>
     8b8:	mov	w20, #0x0                   	// #0
     8bc:	b	83c <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv+0x104>

00000000000008c0 <_ZN11__sanitizerL12TracerThreadEPv>:
     8c0:	stp	x19, x20, [sp, #-336]!
     8c4:	mov	x1, #0x9                   	// #9
     8c8:	mov	x4, #0x0                   	// #0
     8cc:	mov	x3, #0x0                   	// #0
     8d0:	mov	x2, #0x0                   	// #0
     8d4:	stp	x21, x22, [sp, #16]
     8d8:	mov	x22, x0
     8dc:	mov	w0, #0x1                   	// #1
     8e0:	stp	x23, x24, [sp, #32]
     8e4:	stp	x25, x26, [sp, #48]
     8e8:	stp	x27, x28, [sp, #64]
     8ec:	str	x30, [sp, #80]
     8f0:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
     8f4:	bl	0 <_ZN11__sanitizer16internal_getppidEv>
     8f8:	ldr	x1, [x22, #112]
     8fc:	cmp	x0, x1
     900:	b.ne	c18 <_ZN11__sanitizerL12TracerThreadEPv+0x358>  // b.any
     904:	add	x19, x22, #0x10
     908:	adrp	x27, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     90c:	mov	x0, x19
     910:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     914:	mov	x0, x19
     918:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     91c:	add	x0, x27, #0x0
     920:	bl	0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>
     924:	tst	w0, #0xff
     928:	b.eq	b8c <_ZN11__sanitizerL12TracerThreadEPv+0x2cc>  // b.none
     92c:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     930:	bl	0 <_ZN11__sanitizer16internal_getppidEv>
     934:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     938:	add	x1, x1, #0x0
     93c:	ldr	x20, [x21]
     940:	stp	x22, x1, [sp, #128]
     944:	mov	x19, x0
     948:	str	xzr, [sp, #144]
     94c:	ldr	x1, [x20]
     950:	stp	xzr, xzr, [sp, #152]
     954:	cbz	x1, b28 <_ZN11__sanitizerL12TracerThreadEPv+0x268>
     958:	sub	x0, x1, #0x1
     95c:	tst	x0, x1
     960:	b.ne	b7c <_ZN11__sanitizerL12TracerThreadEPv+0x2bc>  // b.any
     964:	mov	x2, #0x1fff                	// #8191
     968:	add	x20, x1, x2
     96c:	neg	x1, x1
     970:	mov	w2, #0x0                   	// #0
     974:	and	x20, x20, x1
     978:	adrp	x23, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     97c:	mov	x0, x20
     980:	add	x1, x23, #0x0
     984:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     988:	mov	x24, x0
     98c:	ldr	x1, [sp, #144]
     990:	add	x28, sp, #0x80
     994:	ldr	x2, [sp, #160]
     998:	lsl	x2, x2, #3
     99c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     9a0:	ldp	x0, x1, [sp, #144]
     9a4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     9a8:	stp	x24, x20, [sp, #144]
     9ac:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     9b0:	ldr	x25, [x21]
     9b4:	str	x28, [x0]
     9b8:	str	w19, [sp, #168]
     9bc:	ldr	x0, [x25]
     9c0:	cbz	x0, b54 <_ZN11__sanitizerL12TracerThreadEPv+0x294>
     9c4:	sub	x19, x0, #0x1
     9c8:	ands	x19, x19, x0
     9cc:	b.ne	b7c <_ZN11__sanitizerL12TracerThreadEPv+0x2bc>  // b.any
     9d0:	neg	x20, x0
     9d4:	mov	x24, #0x1fff                	// #8191
     9d8:	add	x0, x0, x24
     9dc:	add	x1, x23, #0x0
     9e0:	and	x20, x0, x20
     9e4:	mov	w2, #0x0                   	// #0
     9e8:	mov	x0, x20
     9ec:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     9f0:	mov	x2, #0x0                   	// #0
     9f4:	mov	x1, #0x0                   	// #0
     9f8:	mov	x26, x0
     9fc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     a00:	mov	x1, #0x0                   	// #0
     a04:	mov	x0, #0x0                   	// #0
     a08:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     a0c:	cmp	x20, x24
     a10:	b.ls	b9c <_ZN11__sanitizerL12TracerThreadEPv+0x2dc>  // b.plast
     a14:	add	x23, sp, #0x68
     a18:	mov	x2, #0x2000                	// #8192
     a1c:	mov	w1, #0x0                   	// #0
     a20:	mov	x0, x26
     a24:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     a28:	mov	w25, #0x4                   	// #4
     a2c:	mov	x0, x23
     a30:	mov	x2, #0x18                  	// #24
     a34:	mov	w1, #0x0                   	// #0
     a38:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     a3c:	mov	x2, #0x2000                	// #8192
     a40:	mov	x0, x23
     a44:	adrp	x24, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     a48:	adrp	x23, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     a4c:	add	x21, sp, #0xb8
     a50:	add	x24, x24, #0x0
     a54:	add	x23, x23, #0x0
     a58:	mov	x1, #0x0                   	// #0
     a5c:	movk	w25, #0x800, lsl #16
     a60:	str	x26, [sp, #104]
     a64:	str	x2, [sp, #120]
     a68:	bl	0 <_ZN11__sanitizer20internal_sigaltstackEPKvPv>
     a6c:	nop
     a70:	mov	x2, #0x98                  	// #152
     a74:	mov	w1, #0x0                   	// #0
     a78:	mov	x0, x21
     a7c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     a80:	ldr	w0, [x23, x19, lsl #2]
     a84:	mov	x1, x21
     a88:	add	x19, x19, #0x1
     a8c:	mov	x2, #0x0                   	// #0
     a90:	str	x24, [sp, #184]
     a94:	str	w25, [sp, #320]
     a98:	bl	0 <_ZN11__sanitizer29internal_sigaction_norestorerEiPKvPv>
     a9c:	cmp	x19, #0x7
     aa0:	b.ne	a70 <_ZN11__sanitizerL12TracerThreadEPv+0x1b0>  // b.any
     aa4:	mov	x0, x28
     aa8:	bl	738 <_ZN11__sanitizer15ThreadSuspender17SuspendAllThreadsEv>
     aac:	tst	w0, #0xff
     ab0:	b.ne	b38 <_ZN11__sanitizerL12TracerThreadEPv+0x278>  // b.any
     ab4:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
     ab8:	mov	w19, #0x3                   	// #3
     abc:	ldr	x0, [x0]
     ac0:	ldr	w0, [x0]
     ac4:	cbnz	w0, b6c <_ZN11__sanitizerL12TracerThreadEPv+0x2ac>
     ac8:	add	x0, x27, #0x0
     acc:	bl	0 <_ZN11__sanitizer17RemoveDieCallbackEPFvvE>
     ad0:	tst	w0, #0xff
     ad4:	b.eq	c08 <_ZN11__sanitizerL12TracerThreadEPv+0x348>  // b.none
     ad8:	mov	x0, #0x1                   	// #1
     adc:	str	x0, [x22, #104]
     ae0:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     ae4:	mov	x1, x20
     ae8:	str	xzr, [x0]
     aec:	mov	x0, x26
     af0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     af4:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     af8:	add	x2, x1, #0x0
     afc:	ldp	x0, x1, [sp, #144]
     b00:	str	x2, [sp, #136]
     b04:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     b08:	mov	w0, w19
     b0c:	ldp	x21, x22, [sp, #16]
     b10:	ldp	x23, x24, [sp, #32]
     b14:	ldp	x25, x26, [sp, #48]
     b18:	ldp	x27, x28, [sp, #64]
     b1c:	ldr	x30, [sp, #80]
     b20:	ldp	x19, x20, [sp], #336
     b24:	ret
     b28:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     b2c:	mov	x1, x0
     b30:	str	x0, [x20]
     b34:	b	958 <_ZN11__sanitizerL12TracerThreadEPv+0x98>
     b38:	ldp	x2, x1, [x22]
     b3c:	add	x0, x28, #0x8
     b40:	mov	w19, #0x0                   	// #0
     b44:	blr	x2
     b48:	mov	x0, x28
     b4c:	bl	528 <_ZN11__sanitizer15ThreadSuspender16ResumeAllThreadsEv>
     b50:	b	ac8 <_ZN11__sanitizerL12TracerThreadEPv+0x208>
     b54:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     b58:	str	x0, [x25]
     b5c:	sub	x19, x0, #0x1
     b60:	ands	x19, x19, x0
     b64:	b.eq	9d0 <_ZN11__sanitizerL12TracerThreadEPv+0x110>  // b.none
     b68:	b	b7c <_ZN11__sanitizerL12TracerThreadEPv+0x2bc>
     b6c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     b70:	add	x0, x0, #0x0
     b74:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     b78:	b	ac8 <_ZN11__sanitizerL12TracerThreadEPv+0x208>
     b7c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     b80:	add	x0, x0, #0x0
     b84:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     b88:	bl	0 <_ZN11__sanitizer3DieEv>
     b8c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     b90:	add	x0, x0, #0x0
     b94:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     b98:	bl	0 <_ZN11__sanitizer3DieEv>
     b9c:	ldr	x21, [x21]
     ba0:	ldr	x0, [x21]
     ba4:	cbz	x0, bfc <_ZN11__sanitizerL12TracerThreadEPv+0x33c>
     ba8:	sub	x1, x0, #0x1
     bac:	tst	x1, x0
     bb0:	b.ne	b7c <_ZN11__sanitizerL12TracerThreadEPv+0x2bc>  // b.any
     bb4:	mov	x1, #0x1fff                	// #8191
     bb8:	add	x21, x0, x1
     bbc:	neg	x0, x0
     bc0:	add	x1, x23, #0x0
     bc4:	and	x21, x21, x0
     bc8:	mov	w2, #0x0                   	// #0
     bcc:	mov	x0, x21
     bd0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     bd4:	mov	x2, #0x0                   	// #0
     bd8:	mov	x23, x0
     bdc:	mov	x1, x26
     be0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     be4:	mov	x1, x20
     be8:	mov	x0, x26
     bec:	mov	x20, x21
     bf0:	mov	x26, x23
     bf4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     bf8:	b	a14 <_ZN11__sanitizerL12TracerThreadEPv+0x154>
     bfc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     c00:	str	x0, [x21]
     c04:	b	ba8 <_ZN11__sanitizerL12TracerThreadEPv+0x2e8>
     c08:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     c0c:	add	x0, x0, #0x0
     c10:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     c14:	bl	0 <_ZN11__sanitizer3DieEv>
     c18:	mov	w0, #0x4                   	// #4
     c1c:	bl	0 <_ZN11__sanitizer14internal__exitEi>

0000000000000c20 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_>:
     c20:	stp	x19, x20, [sp, #-208]!
     c24:	mov	x4, #0x0                   	// #0
     c28:	mov	x20, x0
     c2c:	mov	x19, x1
     c30:	mov	x3, #0x0                   	// #0
     c34:	mov	x2, #0x0                   	// #0
     c38:	mov	x1, #0x0                   	// #0
     c3c:	mov	w0, #0x3                   	// #3
     c40:	stp	x21, x22, [sp, #16]
     c44:	stp	x23, x24, [sp, #32]
     c48:	stp	x25, x26, [sp, #48]
     c4c:	str	x30, [sp, #64]
     c50:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
     c54:	mov	x22, x0
     c58:	cbz	w0, dbc <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x19c>
     c5c:	add	x24, sp, #0x58
     c60:	add	x0, x24, #0x10
     c64:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
     c68:	stp	x20, x19, [sp, #88]
     c6c:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
     c70:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     c74:	str	xzr, [sp, #192]
     c78:	ldr	x20, [x20]
     c7c:	str	x0, [sp, #200]
     c80:	ldr	x19, [x20]
     c84:	cbz	x19, dac <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x18c>
     c88:	mov	w2, #0x0                   	// #0
     c8c:	add	x25, x19, #0x200, lsl #12
     c90:	mov	x0, x25
     c94:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     c98:	add	x1, x1, #0x0
     c9c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     ca0:	mov	x1, x19
     ca4:	mov	x23, x0
     ca8:	bl	0 <_ZN11__sanitizer16MprotectNoAccessEmm>
     cac:	tst	w0, #0xff
     cb0:	b.eq	ed8 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x2b8>  // b.none
     cb4:	add	x0, x24, #0x10
     cb8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     cbc:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     cc0:	adrp	x20, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     cc4:	add	x1, x1, #0x0
     cc8:	add	x20, x20, #0x0
     ccc:	mov	x19, #0x0                   	// #0
     cd0:	add	x0, x1, #0x10
     cd4:	mov	x21, x1
     cd8:	mov	x26, x0
     cdc:	bl	0 <_ZN11__sanitizer19internal_sigfillsetEPNS_20__sanitizer_sigset_tE>
     ce0:	ldr	w1, [x20, x19, lsl #2]
     ce4:	mov	x0, x26
     ce8:	add	x19, x19, #0x1
     cec:	bl	0 <_ZN11__sanitizer18internal_sigdelsetEPNS_20__sanitizer_sigset_tEi>
     cf0:	cmp	x19, #0x7
     cf4:	b.ne	ce0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0xc0>  // b.any
     cf8:	add	x21, x21, #0x90
     cfc:	mov	x1, x26
     d00:	mov	x2, x21
     d04:	mov	w0, #0x0                   	// #0
     d08:	bl	0 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>
     d0c:	sxtw	x3, w0
     d10:	cbnz	w0, ef8 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x2d8>
     d14:	mov	x3, x24
     d18:	mov	w2, #0x700                 	// #1792
     d1c:	mov	x6, #0x0                   	// #0
     d20:	mov	x5, #0x0                   	// #0
     d24:	mov	x4, #0x0                   	// #0
     d28:	add	x1, x23, x25
     d2c:	movk	w2, #0x80, lsl #16
     d30:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     d34:	add	x0, x0, #0x0
     d38:	bl	0 <_ZN11__sanitizer14internal_cloneEPFiPvES0_iS0_PiS0_S3_>
     d3c:	mov	x2, #0x0                   	// #0
     d40:	mov	x20, x0
     d44:	mov	x1, x21
     d48:	add	x19, sp, #0x54
     d4c:	mov	w0, #0x2                   	// #2
     d50:	bl	0 <_ZN11__sanitizer20internal_sigprocmaskEiPNS_20__sanitizer_sigset_tES1_>
     d54:	mov	x0, x20
     d58:	mov	x1, x19
     d5c:	str	wzr, [sp, #84]
     d60:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     d64:	tst	w0, #0xff
     d68:	b.eq	e08 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x1e8>  // b.none
     d6c:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
     d70:	ldr	x0, [x0]
     d74:	ldr	w0, [x0]
     d78:	cbnz	w0, eb4 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x294>
     d7c:	add	x0, x24, #0x10
     d80:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     d84:	mov	x1, x25
     d88:	mov	x0, x23
     d8c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     d90:	cbz	w22, dd8 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x1b8>
     d94:	ldp	x21, x22, [sp, #16]
     d98:	ldp	x23, x24, [sp, #32]
     d9c:	ldp	x25, x26, [sp, #48]
     da0:	ldr	x30, [sp, #64]
     da4:	ldp	x19, x20, [sp], #208
     da8:	ret
     dac:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     db0:	mov	x19, x0
     db4:	str	x0, [x20]
     db8:	b	c88 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x68>
     dbc:	mov	x4, #0x0                   	// #0
     dc0:	mov	x3, #0x0                   	// #0
     dc4:	mov	x2, #0x0                   	// #0
     dc8:	mov	x1, #0x1                   	// #1
     dcc:	mov	w0, #0x4                   	// #4
     dd0:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
     dd4:	b	c5c <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x3c>
     dd8:	mov	x4, #0x0                   	// #0
     ddc:	mov	x3, #0x0                   	// #0
     de0:	mov	x2, #0x0                   	// #0
     de4:	mov	x1, #0x0                   	// #0
     de8:	mov	w0, #0x4                   	// #4
     dec:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
     df0:	ldp	x21, x22, [sp, #16]
     df4:	ldp	x23, x24, [sp, #32]
     df8:	ldp	x25, x26, [sp, #48]
     dfc:	ldr	x30, [sp, #64]
     e00:	ldp	x19, x20, [sp], #208
     e04:	ret
     e08:	adrp	x26, 0 <_ZN11__sanitizer23stoptheworld_tracer_pidE>
     e0c:	adrp	x21, 0 <_ZN11__sanitizer24stoptheworld_tracer_ppidE>
     e10:	ldr	x0, [x26]
     e14:	str	x20, [x0]
     e18:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
     e1c:	ldr	x5, [x21]
     e20:	mov	x6, x0
     e24:	mov	x1, x20
     e28:	mov	x4, #0x0                   	// #0
     e2c:	mov	x3, #0x0                   	// #0
     e30:	mov	x2, #0x0                   	// #0
     e34:	mov	w0, #0x6d61                	// #28001
     e38:	str	x6, [x5]
     e3c:	movk	w0, #0x5961, lsl #16
     e40:	bl	0 <_ZN11__sanitizer14internal_prctlEimmmm>
     e44:	add	x0, x24, #0x10
     e48:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     e4c:	ldr	x0, [sp, #192]
     e50:	cbnz	x0, e64 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x244>
     e54:	nop
     e58:	bl	0 <sched_yield>
     e5c:	ldr	x0, [sp, #192]
     e60:	cbz	x0, e58 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x238>
     e64:	mov	w2, #0x40000000            	// #1073741824
     e68:	mov	x1, #0x0                   	// #0
     e6c:	mov	w0, w20
     e70:	bl	0 <_ZN11__sanitizer16internal_waitpidEiPii>
     e74:	mov	x1, x19
     e78:	bl	0 <_ZN11__sanitizer16internal_iserrorEmPi>
     e7c:	tst	w0, #0xff
     e80:	b.eq	ea0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x280>  // b.none
     e84:	ldr	w1, [sp, #84]
     e88:	cmp	w1, #0x4
     e8c:	b.eq	e64 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x244>  // b.none
     e90:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
     e94:	ldr	x0, [x0]
     e98:	ldr	w0, [x0]
     e9c:	cbnz	w0, ec8 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x2a8>
     ea0:	ldr	x26, [x26]
     ea4:	ldr	x21, [x21]
     ea8:	str	xzr, [x26]
     eac:	str	xzr, [x21]
     eb0:	b	d84 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x164>
     eb4:	ldr	w1, [sp, #84]
     eb8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     ebc:	add	x0, x0, #0x0
     ec0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     ec4:	b	d7c <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x15c>
     ec8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     ecc:	add	x0, x0, #0x0
     ed0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     ed4:	b	ea0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_+0x280>
     ed8:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     edc:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     ee0:	add	x2, x2, #0x0
     ee4:	add	x0, x0, #0x0
     ee8:	mov	x4, #0x0                   	// #0
     eec:	mov	x3, #0x0                   	// #0
     ef0:	mov	w1, #0x154                 	// #340
     ef4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ef8:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     efc:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
     f00:	add	x2, x2, #0x0
     f04:	add	x0, x0, #0x0
     f08:	mov	x4, #0x0                   	// #0
     f0c:	mov	w1, #0x1ae                 	// #430
     f10:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f14:	nop

0000000000000f18 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy>:
     f18:	ldr	x3, [x0, #24]
     f1c:	cbz	x3, f4c <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x34>
     f20:	ldr	x4, [x0, #8]
     f24:	mov	x0, #0x0                   	// #0
     f28:	b	f34 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x1c>
     f2c:	cmp	x0, x3
     f30:	b.eq	f4c <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x34>  // b.none
     f34:	ldr	x2, [x4, x0, lsl #3]
     f38:	add	x0, x0, #0x1
     f3c:	cmp	x2, x1
     f40:	b.ne	f2c <_ZNK11__sanitizer25SuspendedThreadsListLinux11ContainsTidEy+0x14>  // b.any
     f44:	mov	w0, #0x1                   	// #1
     f48:	ret
     f4c:	mov	w0, #0x0                   	// #0
     f50:	ret
     f54:	nop

0000000000000f58 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy>:
     f58:	stp	x19, x20, [sp, #-64]!
     f5c:	stp	x21, x22, [sp, #16]
     f60:	add	x21, x0, #0x8
     f64:	ldr	x4, [x0, #16]
     f68:	str	x1, [sp, #56]
     f6c:	ldr	x3, [x21, #16]
     f70:	str	x30, [sp, #32]
     f74:	lsr	x4, x4, #3
     f78:	cmp	x3, x4
     f7c:	b.hi	1068 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x110>  // b.pmore
     f80:	mov	x19, x0
     f84:	add	x20, x3, #0x1
     f88:	b.eq	fb4 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x5c>  // b.none
     f8c:	ldr	x22, [x0, #8]
     f90:	str	x20, [x21, #16]
     f94:	add	x0, x22, x3, lsl #3
     f98:	add	x1, sp, #0x38
     f9c:	mov	x2, #0x8                   	// #8
     fa0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     fa4:	ldp	x21, x22, [sp, #16]
     fa8:	ldr	x30, [sp, #32]
     fac:	ldp	x19, x20, [sp], #64
     fb0:	ret
     fb4:	tst	x3, x20
     fb8:	b.eq	ff4 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x9c>  // b.none
     fbc:	clz	x4, x20
     fc0:	mov	w0, #0x3f                  	// #63
     fc4:	sub	w0, w0, w4
     fc8:	mov	x2, #0x1                   	// #1
     fcc:	add	w4, w0, #0x1
     fd0:	lsl	x4, x2, x4
     fd4:	cmp	x4, x20
     fd8:	b.ls	10b4 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x15c>  // b.plast
     fdc:	lsl	x0, x2, x0
     fe0:	cmp	x20, x0
     fe4:	b.ls	10d0 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x178>  // b.plast
     fe8:	cmp	x3, x4
     fec:	b.hi	108c <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x134>  // b.pmore
     ff0:	mov	x20, x4
     ff4:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
     ff8:	lsl	x20, x20, #3
     ffc:	ldr	x22, [x22]
    1000:	ldr	x0, [x22]
    1004:	cbz	x0, 1080 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x128>
    1008:	sub	x1, x0, #0x1
    100c:	tst	x0, x1
    1010:	b.ne	10a4 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x14c>  // b.any
    1014:	add	x20, x20, x1
    1018:	neg	x0, x0
    101c:	and	x20, x20, x0
    1020:	mov	w2, #0x0                   	// #0
    1024:	mov	x0, x20
    1028:	adrp	x1, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    102c:	add	x1, x1, #0x0
    1030:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1034:	ldr	x1, [x19, #8]
    1038:	mov	x22, x0
    103c:	ldr	x2, [x21, #16]
    1040:	lsl	x2, x2, #3
    1044:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1048:	ldr	x0, [x19, #8]
    104c:	ldr	x1, [x21, #8]
    1050:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1054:	ldr	x3, [x21, #16]
    1058:	str	x22, [x19, #8]
    105c:	str	x20, [x21, #8]
    1060:	add	x20, x3, #0x1
    1064:	b	f90 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0x38>
    1068:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    106c:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    1070:	add	x2, x2, #0x0
    1074:	add	x0, x0, #0x0
    1078:	mov	w1, #0x1cd                 	// #461
    107c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1080:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1084:	str	x0, [x22]
    1088:	b	1008 <_ZN11__sanitizer25SuspendedThreadsListLinux6AppendEy+0xb0>
    108c:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    1090:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    1094:	add	x2, x2, #0x0
    1098:	add	x0, x0, #0x0
    109c:	mov	w1, #0x20c                 	// #524
    10a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    10a4:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    10a8:	add	x0, x0, #0x0
    10ac:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    10b0:	bl	0 <_ZN11__sanitizer3DieEv>
    10b4:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    10b8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    10bc:	mov	x3, x20
    10c0:	add	x2, x2, #0x0
    10c4:	add	x0, x0, #0x0
    10c8:	mov	w1, #0x18a                 	// #394
    10cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    10d0:	mov	x4, x0
    10d4:	adrp	x2, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    10d8:	adrp	x0, 0 <_ZNK11__sanitizer25SuspendedThreadsListLinux11ThreadCountEv>
    10dc:	mov	x3, x20
    10e0:	add	x2, x2, #0x0
    10e4:	add	x0, x0, #0x0
    10e8:	mov	w1, #0x18b                 	// #395
    10ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_stoptheworld_netbsd_libcdep.cpp.o:     file format elf64-littleaarch64


sancov_flags.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__sancov_default_options>:
   0:	adrp	x0, 0 <__sancov_default_options>
   4:	add	x0, x0, #0x0
   8:	ret
   c:	nop

0000000000000010 <_ZN8__sancov11SancovFlags11SetDefaultsEv>:
  10:	mov	w1, #0x1                   	// #1
  14:	strh	w1, [x0]
  18:	ret
  1c:	nop

0000000000000020 <_ZN8__sancov21InitializeSancovFlagsEv>:
  20:	stp	x19, x20, [sp, #-80]!
  24:	adrp	x0, 0 <__sancov_default_options>
  28:	mov	w1, #0x1                   	// #1
  2c:	stp	x21, x22, [sp, #16]
  30:	adrp	x21, 0 <_ZN11__sanitizer10FlagParser5AllocE>
  34:	add	x19, sp, #0x30
  38:	add	x22, x0, #0x0
  3c:	strh	w1, [x0]
  40:	mov	x0, x19
  44:	str	x30, [sp, #32]
  48:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
  4c:	adrp	x20, 0 <__sancov_default_options>
  50:	ldr	x21, [x21]
  54:	mov	x1, #0x10                  	// #16
  58:	add	x20, x20, #0x0
  5c:	mov	x0, x21
  60:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  64:	mov	x2, x0
  68:	adrp	x3, 0 <__sancov_default_options>
  6c:	add	x3, x3, #0x0
  70:	mov	x0, x19
  74:	adrp	x1, 0 <__sancov_default_options>
  78:	add	x1, x1, #0x0
  7c:	stp	x20, x22, [x2]
  80:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  84:	mov	x1, #0x10                  	// #16
  88:	mov	x0, x21
  8c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  90:	mov	x2, x0
  94:	add	x4, x22, #0x1
  98:	mov	x0, x19
  9c:	adrp	x3, 0 <__sancov_default_options>
  a0:	adrp	x1, 0 <__sancov_default_options>
  a4:	add	x3, x3, #0x0
  a8:	add	x1, x1, #0x0
  ac:	stp	x20, x4, [x2]
  b0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
  b4:	bl	0 <__sancov_default_options>
  b8:	mov	x1, x0
  bc:	mov	x2, #0x0                   	// #0
  c0:	mov	x0, x19
  c4:	bl	0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>
  c8:	mov	x0, x19
  cc:	adrp	x1, 0 <__sancov_default_options>
  d0:	add	x1, x1, #0x0
  d4:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
  d8:	bl	0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
  dc:	ldrb	w0, [x22, #1]
  e0:	cbnz	w0, f4 <_ZN8__sancov21InitializeSancovFlagsEv+0xd4>
  e4:	ldp	x21, x22, [sp, #16]
  e8:	ldr	x30, [sp, #32]
  ec:	ldp	x19, x20, [sp], #80
  f0:	ret
  f4:	mov	x0, x19
  f8:	bl	0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>
  fc:	ldp	x21, x22, [sp, #16]
 100:	ldr	x30, [sp, #32]
 104:	ldp	x19, x20, [sp], #80
 108:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	adrp	x4, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   8:	add	x4, x4, #0x0
   c:	ldr	x5, [x0, #8]
  10:	mov	x19, x2
  14:	adrp	x3, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  18:	add	x3, x3, #0x0
  1c:	mov	x0, x1
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	ldrb	w5, [x5]
  28:	mov	x1, x19
  2c:	add	x2, x2, #0x0
  30:	cmp	w5, #0x0
  34:	csel	x3, x3, x4, ne  // ne = any
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	cmp	x19, w0, sxtw
  40:	cset	w0, hi  // hi = pmore
  44:	ldp	x19, x30, [sp], #16
  48:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	mov	x2, x0
   4:	stp	x19, x20, [sp, #-32]!
   8:	mov	x19, x1
   c:	mov	x0, x19
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	ldr	x20, [x2, #8]
  1c:	str	x30, [sp, #16]
  20:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  24:	cbnz	w0, 3c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x3c>
  28:	mov	w0, #0x1                   	// #1
  2c:	strb	wzr, [x20]
  30:	ldr	x30, [sp, #16]
  34:	ldp	x19, x20, [sp], #32
  38:	ret
  3c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  40:	mov	x0, x19
  44:	add	x1, x1, #0x0
  48:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  4c:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  50:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  54:	mov	x0, x19
  58:	add	x1, x1, #0x0
  5c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  60:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  64:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  68:	mov	x0, x19
  6c:	add	x1, x1, #0x0
  70:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  74:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  78:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  7c:	mov	x0, x19
  80:	add	x1, x1, #0x0
  84:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  88:	cbnz	w0, 9c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x9c>
  8c:	mov	w1, #0x1                   	// #1
  90:	mov	w0, #0x1                   	// #1
  94:	strb	w1, [x20]
  98:	b	30 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x30>
  9c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  a0:	mov	x0, x19
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  ac:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  b0:	mov	x1, x19
  b4:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  c0:	mov	w0, #0x0                   	// #0
  c4:	ldr	x30, [sp, #16]
  c8:	ldp	x19, x20, [sp], #32
  cc:	ret

sanitizer_coverage_fuchsia.cpp.o:     file format elf64-littleaarch64


sanitizer_coverage_libcdep_new.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	mov	x20, x0
   8:	mov	x0, x1
   c:	stp	x21, x22, [sp, #16]
  10:	mov	x22, x2
  14:	mov	x21, x3
  18:	stp	x23, x30, [sp, #32]
  1c:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
  20:	cbz	x0, f4 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm+0xf4>
  24:	mov	x19, x0
  28:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  2c:	ldr	x0, [x0]
  30:	ldr	x23, [x0, #176]
  34:	bl	0 <_ZN11__sanitizer15internal_getpidEv>
  38:	mov	x4, x19
  3c:	mov	x5, x0
  40:	mov	x3, x23
  44:	adrp	x6, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  48:	add	x6, x6, #0x0
  4c:	mov	x1, #0x1000                	// #4096
  50:	mov	x0, x20
  54:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  58:	add	x2, x2, #0x0
  5c:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  60:	add	x2, sp, #0x3c
  64:	mov	x0, x20
  68:	mov	w1, #0x1                   	// #1
  6c:	bl	0 <_ZN11__sanitizer8OpenFileEPKcNS_14FileAccessModeEPi>
  70:	mov	w19, w0
  74:	cmn	w0, #0x1
  78:	b.eq	dc <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm+0xdc>  // b.none
  7c:	mov	w0, w19
  80:	mov	x4, #0x0                   	// #0
  84:	mov	x3, #0x0                   	// #0
  88:	mov	x2, #0x8                   	// #8
  8c:	adrp	x1, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  90:	add	x1, x1, #0x0
  94:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
  98:	mov	x1, x22
  9c:	lsl	x2, x21, #3
  a0:	mov	x4, #0x0                   	// #0
  a4:	mov	x3, #0x0                   	// #0
  a8:	mov	w0, w19
  ac:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
  b0:	mov	w0, w19
  b4:	bl	0 <_ZN11__sanitizer9CloseFileEi>
  b8:	mov	x2, x21
  bc:	mov	x1, x20
  c0:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  c4:	add	x0, x0, #0x0
  c8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  cc:	ldp	x21, x22, [sp, #16]
  d0:	ldp	x23, x30, [sp, #32]
  d4:	ldp	x19, x20, [sp], #64
  d8:	ret
  dc:	ldr	w2, [sp, #60]
  e0:	mov	x1, x20
  e4:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  f0:	b	7c <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm+0x7c>
  f4:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  f8:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
  fc:	add	x2, x2, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	x4, #0x0                   	// #0
 108:	mov	x3, #0x0                   	// #0
 10c:	mov	w1, #0x29                  	// #41
 110:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 114:	nop

0000000000000118 <_ZN11__sanitizer18InitializeCoverageEbPKc>:
 118:	adrp	x1, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 11c:	ldrb	w2, [x1]
 120:	cbz	w2, 128 <_ZN11__sanitizer18InitializeCoverageEbPKc+0x10>
 124:	ret
 128:	stp	x19, x30, [sp, #-16]!
 12c:	adrp	x19, 6c0 <__sanitizer_cov_dump>
 130:	and	w0, w0, #0xff
 134:	ldr	x19, [x19]
 138:	strb	w0, [x1]
 13c:	mov	x0, x19
 140:	bl	0 <_ZN11__sanitizer6AtexitEPFvvE>
 144:	mov	x0, x19
 148:	ldp	x19, x30, [sp], #16
 14c:	b	0 <_ZN11__sanitizer14AddDieCallbackEPFvvE>

0000000000000150 <__sanitizer_cov_trace_pc_guard>:
 150:	ldr	w3, [x0]
 154:	cbnz	w3, 15c <__sanitizer_cov_trace_pc_guard+0xc>
 158:	ret
 15c:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 160:	add	x0, x0, #0x0
 164:	add	x0, x0, #0x8
 168:	str	x30, [sp, #-16]!
 16c:	sub	w3, w3, #0x1
 170:	ldr	x4, [x0, #24]
 174:	ldr	x0, [x0, #8]
 178:	cmp	x3, x4
 17c:	b.cs	198 <__sanitizer_cov_trace_pc_guard+0x48>  // b.hs, b.nlast
 180:	ldr	x1, [x0, x3, lsl #3]
 184:	cbnz	x1, 190 <__sanitizer_cov_trace_pc_guard+0x40>
 188:	sub	x30, x30, #0x1
 18c:	str	x30, [x0, x3, lsl #3]
 190:	ldr	x30, [sp], #16
 194:	ret
 198:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 19c:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 1a0:	add	x2, x2, #0x0
 1a4:	add	x0, x0, #0x0
 1a8:	mov	w1, #0x1c5                 	// #453
 1ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001b0 <__sanitizer_cov_trace_pc_guard_init>:
 1b0:	cmp	x0, x1
 1b4:	b.eq	310 <__sanitizer_cov_trace_pc_guard_init+0x160>  // b.none
 1b8:	stp	x19, x20, [sp, #-48]!
 1bc:	mov	x19, x0
 1c0:	ldr	w0, [x0]
 1c4:	str	x30, [sp, #40]
 1c8:	cbz	w0, 1d8 <__sanitizer_cov_trace_pc_guard_init+0x28>
 1cc:	ldr	x30, [sp, #40]
 1d0:	ldp	x19, x20, [sp], #48
 1d4:	ret
 1d8:	stp	x21, x22, [sp, #16]
 1dc:	adrp	x22, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 1e0:	add	x0, x22, #0x0
 1e4:	mov	x20, x1
 1e8:	add	x21, x0, #0x8
 1ec:	ldrb	w1, [x0, #8]
 1f0:	cbz	w1, 314 <__sanitizer_cov_trace_pc_guard_init+0x164>
 1f4:	cmp	x19, x20
 1f8:	mov	x1, x19
 1fc:	b.eq	3c4 <__sanitizer_cov_trace_pc_guard_init+0x214>  // b.none
 200:	add	x0, x22, #0x0
 204:	ldr	x0, [x0, #32]
 208:	mov	w21, w0
 20c:	b.cs	2c0 <__sanitizer_cov_trace_pc_guard_init+0x110>  // b.hs, b.nlast
 210:	sub	x3, x20, #0x1
 214:	sub	x3, x3, x19
 218:	cmp	x3, #0xf
 21c:	lsr	x3, x3, #2
 220:	add	x4, x3, #0x1
 224:	b.ls	3e8 <__sanitizer_cov_trace_pc_guard_init+0x238>  // b.plast
 228:	adrp	x5, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 22c:	dup	v1.4s, w0
 230:	movi	v3.4s, #0x4
 234:	lsr	x2, x4, #2
 238:	ldr	q0, [x5]
 23c:	add	x2, x19, x2, lsl #4
 240:	movi	v2.4s, #0x1
 244:	add	v1.4s, v1.4s, v0.4s
 248:	mov	v0.16b, v1.16b
 24c:	add	v1.4s, v1.4s, v3.4s
 250:	add	v0.4s, v0.4s, v2.4s
 254:	str	q0, [x1], #16
 258:	cmp	x1, x2
 25c:	b.ne	248 <__sanitizer_cov_trace_pc_guard_init+0x98>  // b.any
 260:	and	x2, x4, #0xfffffffffffffffc
 264:	cmp	x4, x2
 268:	add	w1, w21, w2
 26c:	add	x19, x19, x2, lsl #2
 270:	b.eq	2b8 <__sanitizer_cov_trace_pc_guard_init+0x108>  // b.none
 274:	mov	x2, x19
 278:	add	w4, w1, #0x1
 27c:	str	w4, [x2], #4
 280:	cmp	x20, x2
 284:	b.ls	2b8 <__sanitizer_cov_trace_pc_guard_init+0x108>  // b.plast
 288:	add	w2, w1, #0x2
 28c:	str	w2, [x19, #4]
 290:	add	x2, x19, #0x8
 294:	cmp	x20, x2
 298:	b.ls	2b8 <__sanitizer_cov_trace_pc_guard_init+0x108>  // b.plast
 29c:	add	w2, w1, #0x3
 2a0:	str	w2, [x19, #8]
 2a4:	add	x2, x19, #0xc
 2a8:	cmp	x20, x2
 2ac:	b.ls	2b8 <__sanitizer_cov_trace_pc_guard_init+0x108>  // b.plast
 2b0:	add	w1, w1, #0x4
 2b4:	str	w1, [x19, #12]
 2b8:	add	w19, w21, #0x1
 2bc:	add	w21, w19, w3
 2c0:	cmp	x0, w21, uxtw
 2c4:	mov	w20, w21
 2c8:	b.cs	2f8 <__sanitizer_cov_trace_pc_guard_init+0x148>  // b.hs, b.nlast
 2cc:	add	x1, x22, #0x0
 2d0:	add	x1, x1, #0x8
 2d4:	ldr	x2, [x1, #16]
 2d8:	cmp	x20, x2, lsr #3
 2dc:	b.hi	354 <__sanitizer_cov_trace_pc_guard_init+0x1a4>  // b.pmore
 2e0:	ldr	x21, [x1, #8]
 2e4:	sub	x2, x20, x0
 2e8:	mov	w1, #0x0                   	// #0
 2ec:	add	x0, x21, x0, lsl #3
 2f0:	lsl	x2, x2, #3
 2f4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 2f8:	add	x0, x22, #0x0
 2fc:	ldp	x21, x22, [sp, #16]
 300:	str	x20, [x0, #32]
 304:	ldr	x30, [sp, #40]
 308:	ldp	x19, x20, [sp], #48
 30c:	ret
 310:	ret
 314:	mov	w1, #0x1                   	// #1
 318:	strb	w1, [x0, #8]
 31c:	bl	0 <_ZN8__sancov21InitializeSancovFlagsEv>
 320:	ldr	w0, [x19]
 324:	str	xzr, [x21, #8]
 328:	stp	xzr, xzr, [x21, #16]
 32c:	cbz	w0, 1f4 <__sanitizer_cov_trace_pc_guard_init+0x44>
 330:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 334:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 338:	add	x2, x2, #0x0
 33c:	add	x0, x0, #0x0
 340:	mov	x4, #0x0                   	// #0
 344:	mov	x3, #0x0                   	// #0
 348:	mov	w1, #0x78                  	// #120
 34c:	str	x23, [sp, #32]
 350:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 354:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
 358:	ldr	x19, [x19]
 35c:	ldr	x0, [x19]
 360:	str	x23, [sp, #32]
 364:	cbz	x0, 3f0 <__sanitizer_cov_trace_pc_guard_init+0x240>
 368:	sub	x19, x0, #0x1
 36c:	tst	x19, x0
 370:	b.ne	3fc <__sanitizer_cov_trace_pc_guard_init+0x24c>  // b.any
 374:	add	x23, x22, #0x0
 378:	add	x19, x19, w21, uxtw #3
 37c:	neg	x0, x0
 380:	mov	w2, #0x0                   	// #0
 384:	and	x19, x19, x0
 388:	adrp	x1, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 38c:	mov	x0, x19
 390:	add	x1, x1, #0x0
 394:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 398:	mov	x21, x0
 39c:	ldr	x1, [x23, #16]
 3a0:	ldr	x2, [x23, #32]
 3a4:	lsl	x2, x2, #3
 3a8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3ac:	ldp	x0, x1, [x23, #16]
 3b0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 3b4:	stp	x21, x19, [x23, #16]
 3b8:	ldr	x0, [x23, #32]
 3bc:	ldr	x23, [sp, #32]
 3c0:	b	2e4 <__sanitizer_cov_trace_pc_guard_init+0x134>
 3c4:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 3c8:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 3cc:	add	x2, x2, #0x0
 3d0:	add	x0, x0, #0x0
 3d4:	mov	x4, x19
 3d8:	mov	x3, x19
 3dc:	mov	w1, #0x79                  	// #121
 3e0:	str	x23, [sp, #32]
 3e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e8:	mov	w1, w0
 3ec:	b	274 <__sanitizer_cov_trace_pc_guard_init+0xc4>
 3f0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 3f4:	str	x0, [x19]
 3f8:	b	368 <__sanitizer_cov_trace_pc_guard_init+0x1b8>
 3fc:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 400:	add	x0, x0, #0x0
 404:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 408:	bl	0 <_ZN11__sanitizer3DieEv>
 40c:	nop

0000000000000410 <__sanitizer_cov_reset>:
 410:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 414:	add	x0, x0, #0x0
 418:	add	x0, x0, #0x8
 41c:	ldr	x2, [x0, #24]
 420:	ldr	x0, [x0, #8]
 424:	cbz	x2, 434 <__sanitizer_cov_reset+0x24>
 428:	lsl	x2, x2, #3
 42c:	mov	w1, #0x0                   	// #0
 430:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
 434:	str	x30, [sp, #-16]!
 438:	adrp	x2, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 43c:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 440:	add	x2, x2, #0x0
 444:	add	x0, x0, #0x0
 448:	mov	x4, #0x0                   	// #0
 44c:	mov	x3, #0x0                   	// #0
 450:	mov	w1, #0x1c5                 	// #453
 454:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000458 <__sanitizer_cov_trace_cmp>:
 458:	ret
 45c:	nop

0000000000000460 <__sanitizer_cov_trace_cmp1>:
 460:	ret
 464:	nop

0000000000000468 <__sanitizer_cov_trace_cmp2>:
 468:	ret
 46c:	nop

0000000000000470 <__sanitizer_cov_trace_cmp4>:
 470:	ret
 474:	nop

0000000000000478 <__sanitizer_cov_trace_cmp8>:
 478:	ret
 47c:	nop

0000000000000480 <__sanitizer_cov_trace_const_cmp1>:
 480:	ret
 484:	nop

0000000000000488 <__sanitizer_cov_trace_const_cmp2>:
 488:	ret
 48c:	nop

0000000000000490 <__sanitizer_cov_trace_const_cmp4>:
 490:	ret
 494:	nop

0000000000000498 <__sanitizer_cov_trace_const_cmp8>:
 498:	ret
 49c:	nop

00000000000004a0 <__sanitizer_cov_trace_switch>:
 4a0:	ret
 4a4:	nop

00000000000004a8 <__sanitizer_cov_trace_div4>:
 4a8:	ret
 4ac:	nop

00000000000004b0 <__sanitizer_cov_trace_div8>:
 4b0:	ret
 4b4:	nop

00000000000004b8 <__sanitizer_cov_trace_gep>:
 4b8:	ret
 4bc:	nop

00000000000004c0 <__sanitizer_cov_trace_pc_indir>:
 4c0:	ret
 4c4:	nop

00000000000004c8 <__sanitizer_cov_8bit_counters_init>:
 4c8:	ret
 4cc:	nop

00000000000004d0 <__sanitizer_cov_pcs_init>:
 4d0:	ret
 4d4:	nop

00000000000004d8 <__sanitizer_dump_coverage>:
 4d8:	cbnz	x1, 4e0 <__sanitizer_dump_coverage+0x8>
 4dc:	ret
 4e0:	stp	x19, x20, [sp, #-128]!
 4e4:	mov	x20, x1
 4e8:	mov	x19, x0
 4ec:	mov	x2, #0x0                   	// #0
 4f0:	mov	x1, #0x0                   	// #0
 4f4:	mov	x0, #0x1000                	// #4096
 4f8:	stp	x21, x22, [sp, #16]
 4fc:	lsl	x22, x20, #3
 500:	stp	x23, x24, [sp, #32]
 504:	mov	w23, #0x0                   	// #0
 508:	stp	x25, x26, [sp, #48]
 50c:	mov	x26, #0x0                   	// #0
 510:	stp	x27, x28, [sp, #64]
 514:	adrp	x28, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 518:	mov	x27, #0x0                   	// #0
 51c:	str	x30, [sp, #80]
 520:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 524:	mov	x2, #0x0                   	// #0
 528:	mov	x1, #0x0                   	// #0
 52c:	mov	x25, x0
 530:	mov	x0, #0x1000                	// #4096
 534:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 538:	mov	x24, x0
 53c:	mov	x2, #0x0                   	// #0
 540:	mov	x1, #0x0                   	// #0
 544:	mov	x0, x22
 548:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
 54c:	mov	x1, x19
 550:	mov	x2, x22
 554:	mov	x21, x0
 558:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 55c:	mov	x0, x21
 560:	mov	x1, x20
 564:	mov	w2, #0x0                   	// #0
 568:	bl	0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 56c:	add	x0, x28, #0x0
 570:	mov	x19, #0x0                   	// #0
 574:	str	x0, [sp, #104]
 578:	b	5ac <__sanitizer_dump_coverage+0xd4>
 57c:	cbnz	w23, 660 <__sanitizer_dump_coverage+0x188>
 580:	mov	x3, x28
 584:	mov	x0, x22
 588:	mov	x26, x5
 58c:	mov	w23, w4
 590:	mov	x1, x24
 594:	mov	x27, x19
 598:	mov	x2, #0x1000                	// #4096
 59c:	bl	0 <__sanitizer_get_module_and_offset_for_pc>
 5a0:	add	x19, x19, #0x1
 5a4:	cmp	x20, x19
 5a8:	b.eq	5fc <__sanitizer_dump_coverage+0x124>  // b.none
 5ac:	ldr	x22, [x21, x19, lsl #3]
 5b0:	add	x28, x21, x19, lsl #3
 5b4:	mov	x3, x28
 5b8:	mov	x2, #0x0                   	// #0
 5bc:	mov	x0, x22
 5c0:	mov	x1, #0x0                   	// #0
 5c4:	cbz	x22, 5a0 <__sanitizer_dump_coverage+0xc8>
 5c8:	bl	0 <__sanitizer_get_module_and_offset_for_pc>
 5cc:	eor	w1, w23, #0x1
 5d0:	cbz	w0, 650 <__sanitizer_dump_coverage+0x178>
 5d4:	ldr	x5, [x21, x19, lsl #3]
 5d8:	sub	x5, x22, x5
 5dc:	cmp	x5, x26
 5e0:	cset	w4, ne  // ne = any
 5e4:	orr	w4, w4, w1
 5e8:	cbnz	w4, 57c <__sanitizer_dump_coverage+0xa4>
 5ec:	add	x19, x19, #0x1
 5f0:	mov	w23, #0x1                   	// #1
 5f4:	cmp	x20, x19
 5f8:	b.ne	5ac <__sanitizer_dump_coverage+0xd4>  // b.any
 5fc:	cbz	w23, 614 <__sanitizer_dump_coverage+0x13c>
 600:	sub	x3, x20, x27
 604:	add	x2, x21, x27, lsl #3
 608:	mov	x1, x24
 60c:	mov	x0, x25
 610:	bl	0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 614:	mov	x0, x25
 618:	mov	x1, #0x0                   	// #0
 61c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 620:	mov	x0, x24
 624:	mov	x1, #0x0                   	// #0
 628:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 62c:	mov	x0, x21
 630:	mov	x1, #0x0                   	// #0
 634:	ldp	x21, x22, [sp, #16]
 638:	ldp	x23, x24, [sp, #32]
 63c:	ldp	x25, x26, [sp, #48]
 640:	ldp	x27, x28, [sp, #64]
 644:	ldr	x30, [sp, #80]
 648:	ldp	x19, x20, [sp], #128
 64c:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 650:	ldr	x0, [sp, #104]
 654:	mov	x1, x22
 658:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 65c:	b	5a0 <__sanitizer_dump_coverage+0xc8>
 660:	sub	x3, x19, x27
 664:	add	x2, x21, x27, lsl #3
 668:	mov	x1, x24
 66c:	mov	x0, x25
 670:	str	x5, [sp, #112]
 674:	str	w4, [sp, #124]
 678:	bl	0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 67c:	ldr	w4, [sp, #124]
 680:	ldr	x5, [sp, #112]
 684:	b	580 <__sanitizer_dump_coverage+0xa8>

0000000000000688 <__sanitizer_dump_trace_pc_guard_coverage>:
 688:	adrp	x0, 0 <_ZN8__sancov12_GLOBAL__N_1L19WriteModuleCoverageEPcPKcPKmm>
 68c:	add	x0, x0, #0x0
 690:	add	x1, x0, #0x8
 694:	ldrb	w0, [x0, #8]
 698:	cbz	w0, 6ac <__sanitizer_dump_trace_pc_guard_coverage+0x24>
 69c:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 6a0:	ldr	x0, [x0]
 6a4:	ldrb	w0, [x0, #169]
 6a8:	cbnz	w0, 6b0 <__sanitizer_dump_trace_pc_guard_coverage+0x28>
 6ac:	ret
 6b0:	ldr	x0, [x1, #8]
 6b4:	ldr	x1, [x1, #24]
 6b8:	b	4d8 <__sanitizer_dump_coverage>
 6bc:	nop

00000000000006c0 <__sanitizer_cov_dump>:
 6c0:	b	688 <__sanitizer_dump_trace_pc_guard_coverage>

Disassembly of section .text._ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_:

0000000000000000 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_>:
   0:	cmp	x1, #0x1
   4:	mov	x4, #0x1                   	// #1
   8:	b.ls	fc <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xfc>  // b.plast
   c:	nop
  10:	ldr	x5, [x0, x4, lsl #3]
  14:	mov	x2, x4
  18:	sub	x3, x2, #0x1
  1c:	mov	x6, x2
  20:	lsr	x2, x3, #1
  24:	ldr	x3, [x0, x2, lsl #3]
  28:	cmp	x3, x5
  2c:	b.cs	3c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x3c>  // b.hs, b.nlast
  30:	str	x3, [x0, x6, lsl #3]
  34:	str	x5, [x0, x2, lsl #3]
  38:	cbnz	x2, 18 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x18>
  3c:	add	x2, x4, #0x1
  40:	cmp	x1, x2
  44:	b.eq	94 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x94>  // b.none
  48:	mov	x4, x2
  4c:	b	10 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x10>
  50:	cmp	x1, x4
  54:	b.cs	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.hs, b.nlast
  58:	lsl	x5, x5, #4
  5c:	add	x7, x0, x5
  60:	ldr	x3, [x0, x2, lsl #3]
  64:	ldr	x5, [x0, x5]
  68:	cmp	x5, x3
  6c:	b.ls	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.plast
  70:	cmp	x1, x2
  74:	b.eq	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.none
  78:	ldr	x3, [x0, x2, lsl #3]
  7c:	str	x5, [x0, x2, lsl #3]
  80:	str	x3, [x7]
  84:	cmp	x1, x4
  88:	b.cc	f4 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xf4>  // b.lo, b.ul, b.last
  8c:	subs	x4, x4, #0x1
  90:	b.eq	fc <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xfc>  // b.none
  94:	ldr	x3, [x0, x4, lsl #3]
  98:	mov	x2, #0x0                   	// #0
  9c:	ldr	x1, [x0]
  a0:	str	x3, [x0]
  a4:	str	x1, [x0, x4, lsl #3]
  a8:	lsl	x1, x2, #1
  ac:	add	x5, x2, #0x1
  b0:	add	x3, x1, #0x1
  b4:	add	x1, x1, #0x2
  b8:	cmp	x3, x4
  bc:	b.cs	50 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  c0:	ldr	x6, [x0, x3, lsl #3]
  c4:	add	x8, x0, x3, lsl #3
  c8:	ldr	x7, [x0, x2, lsl #3]
  cc:	cmp	x7, x6
  d0:	b.cs	50 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  d4:	cmp	x1, x4
  d8:	b.cc	100 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x100>  // b.lo, b.ul, b.last
  dc:	cmp	x3, x2
  e0:	b.eq	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.none
  e4:	mov	x1, x3
  e8:	ldr	x5, [x0, x2, lsl #3]
  ec:	str	x6, [x0, x2, lsl #3]
  f0:	str	x5, [x0, x3, lsl #3]
  f4:	mov	x2, x1
  f8:	b	a8 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xa8>
  fc:	ret
 100:	lsl	x9, x5, #4
 104:	add	x7, x0, x5, lsl #4
 108:	ldr	x5, [x0, x9]
 10c:	cmp	x6, x5
 110:	b.cc	70 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x70>  // b.lo, b.ul, b.last
 114:	mov	x5, x6
 118:	mov	x7, x8
 11c:	mov	x1, x3
 120:	b	70 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x70>

sanitizer_coverage_win_sections.cpp.o:     file format elf64-littleaarch64


sanitizer_allocator_report.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	mov	x20, x0
   8:	add	x19, sp, #0x20
   c:	stp	x21, x30, [sp, #16]
  10:	mov	x0, x19
  14:	mov	x21, x1
  18:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  1c:	add	x1, x1, #0x0
  20:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  24:	adrp	x4, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  28:	mov	x3, x21
  2c:	mov	x2, x20
  30:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  34:	ldr	x1, [x4]
  38:	add	x0, x0, #0x0
  3c:	ldr	x1, [x1]
  40:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  44:	mov	x0, x19
  48:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  4c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000050 <_ZN11__sanitizer26ReportReallocArrayOverflowEmmPKNS_10StackTraceE>:
  50:	stp	x19, x20, [sp, #-64]!
  54:	mov	x20, x0
  58:	add	x19, sp, #0x20
  5c:	stp	x21, x30, [sp, #16]
  60:	mov	x0, x19
  64:	mov	x21, x1
  68:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  6c:	add	x1, x1, #0x0
  70:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  74:	adrp	x4, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  78:	mov	x3, x21
  7c:	mov	x2, x20
  80:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  84:	ldr	x1, [x4]
  88:	add	x0, x0, #0x0
  8c:	ldr	x1, [x1]
  90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  94:	mov	x0, x19
  98:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  9c:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000000a0 <_ZN11__sanitizer21ReportPvallocOverflowEmPKNS_10StackTraceE>:
  a0:	stp	x19, x20, [sp, #-80]!
  a4:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
  a8:	mov	x2, x1
  ac:	stp	x21, x22, [sp, #16]
  b0:	add	x21, sp, #0x30
  b4:	mov	x20, x0
  b8:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  bc:	mov	x0, x21
  c0:	add	x1, x1, #0x0
  c4:	str	x30, [sp, #32]
  c8:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  cc:	ldr	x19, [x19]
  d0:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
  d4:	ldr	x0, [x0]
  d8:	ldr	x3, [x19]
  dc:	ldr	x22, [x0]
  e0:	cbz	x3, 104 <_ZN11__sanitizer21ReportPvallocOverflowEmPKNS_10StackTraceE+0x64>
  e4:	mov	x2, x20
  e8:	mov	x1, x22
  ec:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
  f0:	add	x0, x0, #0x0
  f4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
  f8:	mov	x0, x21
  fc:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 100:	bl	0 <_ZN11__sanitizer3DieEv>
 104:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 108:	mov	x3, x0
 10c:	str	x0, [x19]
 110:	b	e4 <_ZN11__sanitizer21ReportPvallocOverflowEmPKNS_10StackTraceE+0x44>
 114:	nop

0000000000000118 <_ZN11__sanitizer32ReportInvalidAllocationAlignmentEmPKNS_10StackTraceE>:
 118:	stp	x19, x20, [sp, #-64]!
 11c:	mov	x2, x1
 120:	mov	x20, x0
 124:	add	x19, sp, #0x20
 128:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 12c:	mov	x0, x19
 130:	add	x1, x1, #0x0
 134:	str	x30, [sp, #16]
 138:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 13c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 140:	mov	x2, x20
 144:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 148:	add	x0, x0, #0x0
 14c:	ldr	x1, [x1]
 150:	ldr	x1, [x1]
 154:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 158:	mov	x0, x19
 15c:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 160:	bl	0 <_ZN11__sanitizer3DieEv>
 164:	nop

0000000000000168 <_ZN11__sanitizer34ReportInvalidAlignedAllocAlignmentEmmPKNS_10StackTraceE>:
 168:	stp	x19, x20, [sp, #-80]!
 16c:	mov	x20, x1
 170:	add	x19, sp, #0x30
 174:	stp	x21, x30, [sp, #16]
 178:	mov	x21, x0
 17c:	mov	x0, x19
 180:	str	x1, [sp, #40]
 184:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 188:	add	x1, x1, #0x0
 18c:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 190:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 194:	mov	x3, x21
 198:	mov	x2, x20
 19c:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1a0:	ldr	x1, [x1]
 1a4:	add	x0, x0, #0x0
 1a8:	ldr	x1, [x1]
 1ac:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1b0:	mov	x0, x19
 1b4:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1b8:	bl	0 <_ZN11__sanitizer3DieEv>
 1bc:	nop

00000000000001c0 <_ZN11__sanitizer35ReportInvalidPosixMemalignAlignmentEmPKNS_10StackTraceE>:
 1c0:	stp	x19, x20, [sp, #-64]!
 1c4:	mov	x2, x1
 1c8:	mov	x20, x0
 1cc:	add	x19, sp, #0x20
 1d0:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1d4:	mov	x0, x19
 1d8:	add	x1, x1, #0x0
 1dc:	str	x30, [sp, #16]
 1e0:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1e4:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 1e8:	mov	x2, x20
 1ec:	mov	x3, #0x8                   	// #8
 1f0:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 1f4:	ldr	x1, [x1]
 1f8:	add	x0, x0, #0x0
 1fc:	ldr	x1, [x1]
 200:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 204:	mov	x0, x19
 208:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 20c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000210 <_ZN11__sanitizer26ReportAllocationSizeTooBigEmmPKNS_10StackTraceE>:
 210:	stp	x19, x20, [sp, #-80]!
 214:	mov	x20, x0
 218:	add	x19, sp, #0x30
 21c:	stp	x21, x30, [sp, #16]
 220:	mov	x0, x19
 224:	mov	x21, x1
 228:	str	x1, [sp, #40]
 22c:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 230:	add	x1, x1, #0x0
 234:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 238:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 23c:	mov	x3, x21
 240:	mov	x2, x20
 244:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 248:	ldr	x1, [x1]
 24c:	add	x0, x0, #0x0
 250:	ldr	x1, [x1]
 254:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 258:	mov	x0, x19
 25c:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 260:	bl	0 <_ZN11__sanitizer3DieEv>
 264:	nop

0000000000000268 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>:
 268:	stp	x19, x20, [sp, #-64]!
 26c:	mov	x2, x1
 270:	mov	x20, x0
 274:	add	x19, sp, #0x20
 278:	adrp	x1, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 27c:	mov	x0, x19
 280:	add	x1, x1, #0x0
 284:	str	x30, [sp, #16]
 288:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 28c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 290:	mov	x2, x20
 294:	adrp	x0, 0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 298:	add	x0, x0, #0x0
 29c:	ldr	x1, [x1]
 2a0:	ldr	x1, [x1]
 2a4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2a8:	mov	x0, x19
 2ac:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>
 2b0:	bl	0 <_ZN11__sanitizer3DieEv>

Disassembly of section .text._ZN11__sanitizer26ScopedAllocatorErrorReportC2EPKcPKNS_10StackTraceE:

0000000000000000 <_ZN11__sanitizer26ScopedAllocatorErrorReportC1EPKcPKNS_10StackTraceE>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x19, x0
   8:	mov	x20, x2
   c:	stp	x21, x30, [sp, #16]
  10:	mov	x21, x1
  14:	bl	0 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
  18:	stp	x21, x20, [x19, #8]
  1c:	bl	0 <_ZN11__sanitizer15ColorizeReportsEv>
  20:	strb	w0, [x19, #24]
  24:	ldp	x21, x30, [sp, #16]
  28:	tst	w0, #0xff
  2c:	ldp	x19, x20, [sp], #32
  30:	adrp	x2, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC1EPKcPKNS_10StackTraceE>
  34:	adrp	x1, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC1EPKcPKNS_10StackTraceE>
  38:	add	x2, x2, #0x0
  3c:	add	x1, x1, #0x0
  40:	adrp	x0, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportC1EPKcPKNS_10StackTraceE>
  44:	csel	x1, x1, x2, ne  // ne = any
  48:	add	x0, x0, #0x0
  4c:	b	0 <_ZN11__sanitizer6PrintfEPKcz>

Disassembly of section .text._ZN11__sanitizer26ScopedAllocatorErrorReportD2Ev:

0000000000000000 <_ZN11__sanitizer26ScopedAllocatorErrorReportD1Ev>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	mov	x19, x0
   8:	adrp	x2, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD1Ev>
   c:	add	x2, x2, #0x0
  10:	adrp	x1, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD1Ev>
  14:	ldrb	w3, [x19, #24]
  18:	add	x1, x1, #0x0
  1c:	adrp	x0, 0 <_ZN11__sanitizer26ScopedAllocatorErrorReportD1Ev>
  20:	add	x0, x0, #0x0
  24:	cmp	w3, #0x0
  28:	csel	x1, x1, x2, ne  // ne = any
  2c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  30:	ldr	x0, [x19, #16]
  34:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  38:	bl	0 <_ZN11__sanitizer34PrintHintAllocatorCannotReturnNullEv>
  3c:	ldp	x0, x1, [x19, #8]
  40:	mov	x2, #0x0                   	// #0
  44:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_>
  48:	mov	x0, x19
  4c:	ldp	x19, x30, [sp], #16
  50:	b	0 <_ZN11__sanitizer21ScopedErrorReportLockD1Ev>

sanitizer_stackdepot.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer16StackDepotHandle2idEv>:
   0:	ldr	x0, [x0]
   4:	ldr	w0, [x0, #8]
   8:	ret
   c:	nop

0000000000000010 <_ZN11__sanitizer16StackDepotHandle9use_countEv>:
  10:	ldr	x0, [x0]
  14:	ldr	w0, [x0, #12]
  18:	and	w0, w0, #0xfffff
  1c:	ret

0000000000000020 <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv>:
  20:	ldr	x0, [x0]
  24:	add	x0, x0, #0xc
  28:	ldxr	w1, [x0]
  2c:	add	w2, w1, #0x1
  30:	stlxr	w3, w2, [x0]
  34:	cbnz	w3, 28 <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv+0x8>
  38:	mvn	x0, x1
  3c:	dmb	ish
  40:	tst	x0, #0xfffff
  44:	b.eq	4c <_ZN11__sanitizer16StackDepotHandle20inc_use_count_unsafeEv+0x2c>  // b.none
  48:	ret
  4c:	str	x30, [sp, #-16]!
  50:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  54:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  58:	mov	x4, #0x100000              	// #1048576
  5c:	add	x2, x2, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	x3, x4
  68:	mov	w1, #0x55                  	// #85
  6c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000070 <_ZN11__sanitizer18StackDepotGetStatsEv>:
  70:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  74:	add	x0, x0, #0x0
  78:	ret
  7c:	nop

0000000000000080 <_ZN11__sanitizer13StackDepotGetEj>:
  80:	mov	w2, w0
  84:	cbz	w0, fc <_ZN11__sanitizer13StackDepotGetEj+0x7c>
  88:	str	x30, [sp, #-16]!
  8c:	and	x3, x2, #0x7fffffff
  90:	mov	w4, w0
  94:	cmp	x3, w0, uxtw
  98:	b.ne	130 <_ZN11__sanitizer13StackDepotGetEj+0xb0>  // b.any
  9c:	lsr	w3, w0, #23
  a0:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
  a4:	add	x0, x0, #0x0
  a8:	mov	x5, #0xfffff               	// #1048575
  ac:	lsl	x3, x3, #12
  b0:	add	x6, x3, #0x1, lsl #12
  b4:	cmp	x3, x5
  b8:	b.hi	148 <_ZN11__sanitizer13StackDepotGetEj+0xc8>  // b.pmore
  bc:	ldr	x1, [x0, x3, lsl #3]
  c0:	ands	x1, x1, #0xfffffffffffffffe
  c4:	b.ne	d4 <_ZN11__sanitizer13StackDepotGetEj+0x54>  // b.any
  c8:	b	114 <_ZN11__sanitizer13StackDepotGetEj+0x94>
  cc:	ldr	x1, [x1]
  d0:	cbz	x1, 114 <_ZN11__sanitizer13StackDepotGetEj+0x94>
  d4:	ldr	w4, [x1, #8]
  d8:	cmp	w2, w4
  dc:	b.ne	cc <_ZN11__sanitizer13StackDepotGetEj+0x4c>  // b.any
  e0:	ldp	w2, w3, [x1, #16]
  e4:	add	x0, x1, #0x18
  e8:	mov	x1, #0x0                   	// #0
  ec:	bfxil	x1, x2, #0, #32
  f0:	ldr	x30, [sp], #16
  f4:	bfi	x1, x3, #32, #32
  f8:	ret
  fc:	mov	x1, #0x0                   	// #0
 100:	mov	w3, #0x0                   	// #0
 104:	bfxil	x1, x2, #0, #32
 108:	mov	x0, #0x0                   	// #0
 10c:	bfi	x1, x3, #32, #32
 110:	ret
 114:	add	x3, x3, #0x1
 118:	cmp	x6, x3
 11c:	b.ne	b4 <_ZN11__sanitizer13StackDepotGetEj+0x34>  // b.any
 120:	mov	w3, #0x0                   	// #0
 124:	mov	w2, #0x0                   	// #0
 128:	mov	x0, #0x0                   	// #0
 12c:	b	e8 <_ZN11__sanitizer13StackDepotGetEj+0x68>
 130:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 134:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 138:	add	x2, x2, #0x0
 13c:	add	x0, x0, #0x0
 140:	mov	w1, #0x8d                  	// #141
 144:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 148:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 14c:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 150:	add	x2, x2, #0x0
 154:	add	x0, x0, #0x0
 158:	mov	x4, #0x100000              	// #1048576
 15c:	mov	w1, #0x92                  	// #146
 160:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 164:	nop

0000000000000168 <_ZN11__sanitizer17StackDepotLockAllEv>:
 168:	stp	x19, x20, [sp, #-48]!
 16c:	adrp	x19, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 170:	add	x19, x19, #0x0
 174:	stp	x23, x30, [sp, #32]
 178:	mov	x23, x19
 17c:	stp	x21, x22, [sp, #16]
 180:	mov	w21, #0x0                   	// #0
 184:	nop
 188:	sxtw	x22, w21
 18c:	mov	w20, #0x0                   	// #0
 190:	ldr	x0, [x23, x22, lsl #3]
 194:	orr	x2, x0, #0x1
 198:	tbnz	w0, #0, 1bc <_ZN11__sanitizer17StackDepotLockAllEv+0x54>
 19c:	ldxr	x1, [x19]
 1a0:	cmp	x1, x0
 1a4:	b.ne	1b0 <_ZN11__sanitizer17StackDepotLockAllEv+0x48>  // b.any
 1a8:	stlxr	w3, x2, [x19]
 1ac:	cbnz	w3, 19c <_ZN11__sanitizer17StackDepotLockAllEv+0x34>
 1b0:	dmb	ish
 1b4:	cmp	x0, x1
 1b8:	b.eq	1d8 <_ZN11__sanitizer17StackDepotLockAllEv+0x70>  // b.none
 1bc:	cmp	w20, #0x9
 1c0:	b.gt	1cc <_ZN11__sanitizer17StackDepotLockAllEv+0x64>
 1c4:	add	w20, w20, #0x1
 1c8:	b	190 <_ZN11__sanitizer17StackDepotLockAllEv+0x28>
 1cc:	add	w20, w20, #0x1
 1d0:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 1d4:	b	190 <_ZN11__sanitizer17StackDepotLockAllEv+0x28>
 1d8:	add	w21, w21, #0x1
 1dc:	add	x19, x19, #0x8
 1e0:	cmp	w21, #0x100, lsl #12
 1e4:	b.ne	188 <_ZN11__sanitizer17StackDepotLockAllEv+0x20>  // b.any
 1e8:	ldp	x21, x22, [sp, #16]
 1ec:	ldp	x23, x30, [sp, #32]
 1f0:	ldp	x19, x20, [sp], #48
 1f4:	ret

00000000000001f8 <_ZN11__sanitizer19StackDepotUnlockAllEv>:
 1f8:	adrp	x3, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 1fc:	add	x3, x3, #0x0
 200:	mov	w0, #0x0                   	// #0
 204:	nop
 208:	sxtw	x2, w0
 20c:	ldr	x1, [x3, x2, lsl #3]
 210:	dmb	ish
 214:	and	x1, x1, #0xfffffffffffffffe
 218:	str	x1, [x3, x2, lsl #3]
 21c:	add	w0, w0, #0x1
 220:	cmp	w0, #0x100, lsl #12
 224:	b.ne	208 <_ZN11__sanitizer19StackDepotUnlockAllEv+0x10>  // b.any
 228:	ret
 22c:	nop

0000000000000230 <_ZN11__sanitizer20StackDepotReverseMap10IdDescPair12IdComparatorERKS1_S3_>:
 230:	ldr	w2, [x0]
 234:	ldr	w0, [x1]
 238:	cmp	w2, w0
 23c:	cset	w0, cc  // cc = lo, ul, last
 240:	ret
 244:	nop

0000000000000248 <_ZN11__sanitizer20StackDepotReverseMapC1Ev>:
 248:	stp	x19, x20, [sp, #-96]!
 24c:	mov	x19, x0
 250:	stp	x25, x26, [sp, #48]
 254:	adrp	x25, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 258:	add	x0, x25, #0x0
 25c:	add	x0, x0, #0x800, lsl #12
 260:	stp	x21, x22, [sp, #16]
 264:	stp	x23, x24, [sp, #32]
 268:	stp	x27, x30, [sp, #64]
 26c:	ldr	x0, [x0, #1024]
 270:	str	xzr, [x19]
 274:	stp	xzr, xzr, [x19, #8]
 278:	adds	x0, x0, #0x64
 27c:	b.ne	534 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x2ec>  // b.any
 280:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 284:	add	x24, sp, #0x50
 288:	mov	w23, #0x0                   	// #0
 28c:	ldr	x22, [x22]
 290:	add	x0, x25, #0x0
 294:	sxtw	x1, w23
 298:	ldr	x20, [x0, x1, lsl #3]
 29c:	adrp	x26, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 2a0:	ands	x20, x20, #0xfffffffffffffffe
 2a4:	add	x26, x26, #0x0
 2a8:	b.eq	2f0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xa8>  // b.none
 2ac:	ldp	x4, x0, [x19, #8]
 2b0:	ldr	w1, [x20, #8]
 2b4:	str	w1, [sp, #80]
 2b8:	str	x20, [sp, #88]
 2bc:	lsr	x4, x4, #4
 2c0:	cmp	x0, x4
 2c4:	b.hi	518 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x2d0>  // b.pmore
 2c8:	add	x3, x0, #0x1
 2cc:	b.eq	478 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x230>  // b.none
 2d0:	ldr	x27, [x19]
 2d4:	str	x3, [x19, #16]
 2d8:	add	x0, x27, x0, lsl #4
 2dc:	mov	x1, x24
 2e0:	mov	x2, #0x10                  	// #16
 2e4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2e8:	ldr	x20, [x20]
 2ec:	cbnz	x20, 2ac <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x64>
 2f0:	add	w23, w23, #0x1
 2f4:	cmp	w23, #0x100, lsl #12
 2f8:	b.ne	290 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x48>  // b.any
 2fc:	ldr	x2, [x19, #16]
 300:	cmp	x2, #0x1
 304:	b.ls	460 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x218>  // b.plast
 308:	ldr	x0, [x19]
 30c:	mov	x1, #0x1                   	// #1
 310:	lsl	x4, x1, #4
 314:	mov	x3, x1
 318:	ldr	w8, [x0, x4]
 31c:	sub	x5, x3, #0x1
 320:	mov	x4, x3
 324:	lsr	x3, x5, #1
 328:	add	x4, x0, x4, lsl #4
 32c:	lsl	x5, x3, #4
 330:	add	x9, x0, x5
 334:	ldr	w6, [x0, x5]
 338:	cmp	w6, w8
 33c:	b.cs	358 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x110>  // b.hs, b.nlast
 340:	ldp	x6, x7, [x9]
 344:	ldr	x10, [x4, #8]
 348:	stp	x6, x7, [x4]
 34c:	str	w8, [x0, x5]
 350:	str	x10, [x9, #8]
 354:	cbnz	x3, 31c <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xd4>
 358:	add	x1, x1, #0x1
 35c:	cmp	x2, x1
 360:	b.ne	310 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0xc8>  // b.any
 364:	sub	x8, x2, #0x1
 368:	add	x2, x0, x2, lsl #4
 36c:	ldp	x6, x7, [x2, #-16]
 370:	mov	x3, #0x0                   	// #0
 374:	ldr	w4, [x0]
 378:	add	x5, x3, #0x1
 37c:	ldr	x1, [x0, #8]
 380:	stp	x6, x7, [x0]
 384:	stur	w4, [x2, #-16]
 388:	stur	x1, [x2, #-8]
 38c:	lsl	x1, x3, #1
 390:	add	x7, x1, #0x1
 394:	add	x1, x1, #0x2
 398:	cmp	x7, x8
 39c:	b.cs	404 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1bc>  // b.hs, b.nlast
 3a0:	lsl	x6, x7, #4
 3a4:	lsl	x4, x3, #4
 3a8:	add	x9, x0, x6
 3ac:	add	x11, x0, x4
 3b0:	ldr	w10, [x0, x6]
 3b4:	ldr	w12, [x0, x4]
 3b8:	cmp	w12, w10
 3bc:	b.cs	404 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1bc>  // b.hs, b.nlast
 3c0:	cmp	x1, x8
 3c4:	b.cc	610 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x3c8>  // b.lo, b.ul, b.last
 3c8:	cmp	x7, x3
 3cc:	b.eq	454 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x20c>  // b.none
 3d0:	ldp	x4, x5, [x9]
 3d4:	mov	x1, x7
 3d8:	ldr	x3, [x11, #8]
 3dc:	stp	x4, x5, [x11]
 3e0:	str	w12, [x0, x6]
 3e4:	str	x3, [x9, #8]
 3e8:	mov	x3, x1
 3ec:	add	x5, x3, #0x1
 3f0:	lsl	x1, x3, #1
 3f4:	add	x7, x1, #0x1
 3f8:	add	x1, x1, #0x2
 3fc:	cmp	x7, x8
 400:	b.cc	3a0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x158>  // b.lo, b.ul, b.last
 404:	cmp	x1, x8
 408:	b.cs	454 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x20c>  // b.hs, b.nlast
 40c:	lsl	x5, x5, #5
 410:	lsl	x4, x3, #4
 414:	add	x6, x0, x5
 418:	ldr	w7, [x0, x5]
 41c:	ldr	w5, [x0, x4]
 420:	cmp	w7, w5
 424:	b.ls	454 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x20c>  // b.plast
 428:	cmp	x1, x3
 42c:	b.eq	454 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x20c>  // b.none
 430:	add	x3, x0, x4
 434:	ldr	w9, [x0, x4]
 438:	ldp	x4, x5, [x6]
 43c:	cmp	x1, x8
 440:	ldr	x7, [x3, #8]
 444:	stp	x4, x5, [x3]
 448:	str	w9, [x6]
 44c:	str	x7, [x6, #8]
 450:	b.cc	3e8 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1a0>  // b.lo, b.ul, b.last
 454:	sub	x2, x2, #0x10
 458:	subs	x8, x8, #0x1
 45c:	b.ne	36c <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x124>  // b.any
 460:	ldp	x21, x22, [sp, #16]
 464:	ldp	x23, x24, [sp, #32]
 468:	ldp	x25, x26, [sp, #48]
 46c:	ldp	x27, x30, [sp, #64]
 470:	ldp	x19, x20, [sp], #96
 474:	ret
 478:	tst	x0, x3
 47c:	b.eq	4b8 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x270>  // b.none
 480:	clz	x2, x3
 484:	mov	w1, #0x3f                  	// #63
 488:	sub	w2, w1, w2
 48c:	mov	x1, #0x1                   	// #1
 490:	add	w4, w2, #0x1
 494:	lsl	x4, x1, x4
 498:	cmp	x4, x3
 49c:	b.ls	5b0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x368>  // b.plast
 4a0:	lsl	x1, x1, x2
 4a4:	cmp	x1, x3
 4a8:	b.cs	5f4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x3ac>  // b.hs, b.nlast
 4ac:	cmp	x0, x4
 4b0:	b.hi	5c8 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x380>  // b.pmore
 4b4:	mov	x3, x4
 4b8:	ldr	x0, [x22]
 4bc:	lsl	x21, x3, #4
 4c0:	cbz	x0, 598 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x350>
 4c4:	sub	x1, x0, #0x1
 4c8:	tst	x1, x0
 4cc:	b.ne	5e4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x39c>  // b.any
 4d0:	add	x21, x21, x1
 4d4:	neg	x0, x0
 4d8:	and	x21, x21, x0
 4dc:	mov	x1, x26
 4e0:	mov	w2, #0x0                   	// #0
 4e4:	mov	x0, x21
 4e8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 4ec:	mov	x27, x0
 4f0:	ldr	x1, [x19]
 4f4:	ldr	x2, [x19, #16]
 4f8:	lsl	x2, x2, #4
 4fc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 500:	ldp	x0, x1, [x19]
 504:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 508:	stp	x27, x21, [x19]
 50c:	ldr	x0, [x19, #16]
 510:	add	x3, x0, #0x1
 514:	b	2d4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x8c>
 518:	mov	x3, x0
 51c:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 520:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 524:	add	x2, x2, #0x0
 528:	add	x0, x0, #0x0
 52c:	mov	w1, #0x1cd                 	// #461
 530:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 534:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 538:	lsl	x20, x0, #4
 53c:	ldr	x21, [x21]
 540:	ldr	x0, [x21]
 544:	cbz	x0, 5a4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x35c>
 548:	sub	x1, x0, #0x1
 54c:	tst	x1, x0
 550:	b.ne	5e4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x39c>  // b.any
 554:	add	x20, x20, x1
 558:	neg	x0, x0
 55c:	and	x20, x20, x0
 560:	mov	w2, #0x0                   	// #0
 564:	mov	x0, x20
 568:	adrp	x1, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 56c:	add	x1, x1, #0x0
 570:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 574:	ldr	x1, [x19]
 578:	mov	x21, x0
 57c:	ldr	x2, [x19, #16]
 580:	lsl	x2, x2, #4
 584:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 588:	ldp	x0, x1, [x19]
 58c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 590:	stp	x21, x20, [x19]
 594:	b	280 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x38>
 598:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 59c:	str	x0, [x22]
 5a0:	b	4c4 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x27c>
 5a4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 5a8:	str	x0, [x21]
 5ac:	b	548 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x300>
 5b0:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5b4:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5b8:	add	x2, x2, #0x0
 5bc:	add	x0, x0, #0x0
 5c0:	mov	w1, #0x18a                 	// #394
 5c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5c8:	mov	x3, x0
 5cc:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5d0:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5d4:	add	x2, x2, #0x0
 5d8:	add	x0, x0, #0x0
 5dc:	mov	w1, #0x20c                 	// #524
 5e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 5e4:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5e8:	add	x0, x0, #0x0
 5ec:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5f0:	bl	0 <_ZN11__sanitizer3DieEv>
 5f4:	mov	x4, x1
 5f8:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 5fc:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 600:	add	x2, x2, #0x0
 604:	add	x0, x0, #0x0
 608:	mov	w1, #0x18b                 	// #395
 60c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 610:	lsl	x11, x5, #5
 614:	add	x6, x0, x5, lsl #5
 618:	ldr	w5, [x0, x11]
 61c:	cmp	w10, w5
 620:	csel	x6, x6, x9, cc  // cc = lo, ul, last
 624:	csel	x1, x1, x7, cc  // cc = lo, ul, last
 628:	b	428 <_ZN11__sanitizer20StackDepotReverseMapC1Ev+0x1e0>
 62c:	nop

0000000000000630 <_ZN11__sanitizer20StackDepotReverseMap3GetEj>:
 630:	ldr	x4, [x0, #16]
 634:	cbnz	x4, 644 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x14>
 638:	mov	x0, #0x0                   	// #0
 63c:	mov	x1, #0x0                   	// #0
 640:	ret
 644:	mov	x5, x4
 648:	mov	x2, #0x0                   	// #0
 64c:	str	x30, [sp, #-16]!
 650:	cmp	x5, x2
 654:	b.ls	688 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x58>  // b.plast
 658:	add	x3, x5, x2
 65c:	ldr	x7, [x0]
 660:	cmp	x4, x3, lsr #1
 664:	lsr	x3, x3, #1
 668:	b.ls	6c4 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x94>  // b.plast
 66c:	lsl	x6, x3, #4
 670:	ldr	w6, [x7, x6]
 674:	cmp	w1, w6
 678:	b.ls	6bc <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x8c>  // b.plast
 67c:	add	x2, x3, #0x1
 680:	cmp	x5, x2
 684:	b.hi	658 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x28>  // b.pmore
 688:	cmp	x4, x2
 68c:	b.cc	6ac <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x7c>  // b.lo, b.ul, b.last
 690:	ldr	x0, [x0]
 694:	b.eq	6ec <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0xbc>  // b.none
 698:	lsl	x2, x2, #4
 69c:	add	x3, x0, x2
 6a0:	ldr	w0, [x0, x2]
 6a4:	cmp	w0, w1
 6a8:	b.eq	6dc <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0xac>  // b.none
 6ac:	mov	x0, #0x0                   	// #0
 6b0:	mov	x1, #0x0                   	// #0
 6b4:	ldr	x30, [sp], #16
 6b8:	ret
 6bc:	mov	x5, x3
 6c0:	b	650 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x20>
 6c4:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 6c8:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 6cc:	add	x2, x2, #0x0
 6d0:	add	x0, x0, #0x0
 6d4:	mov	w1, #0x1c9                 	// #457
 6d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 6dc:	ldr	x1, [x3, #8]
 6e0:	add	x0, x1, #0x18
 6e4:	ldr	x1, [x1, #16]
 6e8:	b	6b4 <_ZN11__sanitizer20StackDepotReverseMap3GetEj+0x84>
 6ec:	adrp	x2, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 6f0:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 6f4:	add	x2, x2, #0x0
 6f8:	add	x0, x0, #0x0
 6fc:	mov	x3, x4
 700:	mov	w1, #0x1c5                 	// #453
 704:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000708 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE>:
 708:	str	x30, [sp, #-16]!
 70c:	mov	x2, x1
 710:	mov	x3, #0x0                   	// #0
 714:	mov	x1, x0
 718:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 71c:	add	x0, x0, #0x0
 720:	bl	0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 724:	cbz	x0, 734 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE+0x2c>
 728:	ldr	w0, [x0, #8]
 72c:	ldr	x30, [sp], #16
 730:	ret
 734:	mov	w0, #0x0                   	// #0
 738:	ldr	x30, [sp], #16
 73c:	ret

0000000000000740 <_ZN11__sanitizer24StackDepotPut_WithHandleENS_10StackTraceE>:
 740:	mov	x2, x1
 744:	mov	x3, #0x0                   	// #0
 748:	mov	x1, x0
 74c:	adrp	x0, 0 <_ZN11__sanitizer16StackDepotHandle2idEv>
 750:	add	x0, x0, #0x0
 754:	b	0 <_ZN11__sanitizer16StackDepotHandle2idEv>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

Disassembly of section .text._ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb:

0000000000000000 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>:
   0:	stp	x19, x20, [sp, #-160]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x22, x2
   c:	mov	x21, x1
  10:	stp	x23, x24, [sp, #32]
  14:	mov	x24, x0
  18:	mov	x23, x3
  1c:	stp	x25, x26, [sp, #48]
  20:	lsr	x25, x2, #32
  24:	stp	x27, x28, [sp, #64]
  28:	mov	w27, w25
  2c:	mov	w28, w2
  30:	str	x30, [sp, #80]
  34:	cbz	x3, 3c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3c>
  38:	strb	wzr, [x3]
  3c:	cmp	x21, #0x0
  40:	mov	x0, #0x0                   	// #0
  44:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  48:	b.ne	68 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x68>  // b.any
  4c:	ldp	x21, x22, [sp, #16]
  50:	ldp	x23, x24, [sp, #32]
  54:	ldp	x25, x26, [sp, #48]
  58:	ldp	x27, x28, [sp, #64]
  5c:	ldr	x30, [sp, #80]
  60:	ldp	x19, x20, [sp], #160
  64:	ret
  68:	mov	w4, #0xb28c                	// #45708
  6c:	mov	w20, #0xe995                	// #59797
  70:	movk	w4, #0x9747, lsl #16
  74:	mov	w26, w22
  78:	eor	w5, w4, w22, lsl #3
  7c:	mov	x1, #0x0                   	// #0
  80:	movk	w20, #0x5bd1, lsl #16
  84:	nop
  88:	ldr	x4, [x21, x1, lsl #3]
  8c:	mul	w5, w5, w20
  90:	add	x1, x1, #0x1
  94:	cmp	x26, x1
  98:	mul	w4, w4, w20
  9c:	eor	w4, w4, w4, lsr #24
  a0:	mul	w4, w4, w20
  a4:	eor	w5, w4, w5
  a8:	b.hi	88 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x88>  // b.pmore
  ac:	eor	w4, w5, w5, lsr #13
  b0:	mul	w20, w4, w20
  b4:	eor	w20, w20, w20, lsr #15
  b8:	and	x5, x20, #0xfffff
  bc:	ubfiz	x2, x20, #3, #20
  c0:	add	x2, x24, x2
  c4:	ldr	x9, [x24, x5, lsl #3]
  c8:	ands	x9, x9, #0xfffffffffffffffe
  cc:	b.eq	138 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x138>  // b.none
  d0:	and	w10, w20, #0xfff00000
  d4:	mov	x4, x9
  d8:	ldr	w1, [x4, #12]
  dc:	and	w1, w1, #0xfff00000
  e0:	cmp	w1, w10
  e4:	b.ne	130 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x130>  // b.any
  e8:	bfxil	x6, x28, #0, #32
  ec:	ldr	x0, [x4, #16]
  f0:	bfi	x6, x27, #32, #32
  f4:	cmp	x0, x6
  f8:	b.ne	130 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x130>  // b.any
  fc:	ldr	w0, [x4, #16]
 100:	cbz	x0, 19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>
 104:	add	x3, x4, #0x18
 108:	mov	x1, #0x0                   	// #0
 10c:	b	11c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x11c>
 110:	add	x1, x1, #0x1
 114:	cmp	x0, x1
 118:	b.eq	19c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x19c>  // b.none
 11c:	ldr	x8, [x3, x1, lsl #3]
 120:	ldr	x7, [x21, x1, lsl #3]
 124:	cmp	x8, x7
 128:	b.eq	110 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x110>  // b.none
 12c:	nop
 130:	ldr	x4, [x4]
 134:	cbnz	x4, d8 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0xd8>
 138:	mov	w1, #0x0                   	// #0
 13c:	ldr	x0, [x2]
 140:	tbnz	w0, #0, 168 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x168>
 144:	orr	x3, x0, #0x1
 148:	ldxr	x6, [x2]
 14c:	cmp	x6, x0
 150:	b.ne	15c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x15c>  // b.any
 154:	stlxr	w4, x3, [x2]
 158:	cbnz	w4, 148 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x148>
 15c:	dmb	ish
 160:	cmp	x0, x6
 164:	b.eq	1a4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1a4>  // b.none
 168:	cmp	w1, #0x9
 16c:	b.gt	178 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x178>
 170:	add	w1, w1, #0x1
 174:	b	13c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x13c>
 178:	stp	x5, x2, [sp, #104]
 17c:	str	x9, [sp, #120]
 180:	str	w1, [sp, #128]
 184:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
 188:	ldr	w1, [sp, #128]
 18c:	ldp	x5, x2, [sp, #104]
 190:	add	w1, w1, #0x1
 194:	ldr	x9, [sp, #120]
 198:	b	13c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x13c>
 19c:	mov	x0, x4
 1a0:	b	4c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x4c>
 1a4:	cmp	x9, x6
 1a8:	b.eq	218 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x218>  // b.none
 1ac:	cbz	x6, 218 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x218>
 1b0:	and	w8, w20, #0xfff00000
 1b4:	mov	x4, x6
 1b8:	ldr	w0, [x4, #12]
 1bc:	and	w0, w0, #0xfff00000
 1c0:	cmp	w0, w8
 1c4:	b.ne	210 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x210>  // b.any
 1c8:	bfxil	x19, x28, #0, #32
 1cc:	ldr	x0, [x4, #16]
 1d0:	bfi	x19, x27, #32, #32
 1d4:	cmp	x0, x19
 1d8:	b.ne	210 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x210>  // b.any
 1dc:	ldr	w3, [x4, #16]
 1e0:	cbz	x3, 310 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x310>
 1e4:	add	x7, x4, #0x18
 1e8:	mov	x1, #0x0                   	// #0
 1ec:	b	1fc <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1fc>
 1f0:	add	x1, x1, #0x1
 1f4:	cmp	x3, x1
 1f8:	b.eq	310 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x310>  // b.none
 1fc:	ldr	x2, [x7, x1, lsl #3]
 200:	ldr	x0, [x21, x1, lsl #3]
 204:	cmp	x2, x0
 208:	b.eq	1f0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1f0>  // b.none
 20c:	nop
 210:	ldr	x4, [x4]
 214:	cbnz	x4, 1b8 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x1b8>
 218:	lsr	x7, x5, #12
 21c:	add	x0, x7, #0x200, lsl #12
 220:	add	x0, x24, x0, lsl #2
 224:	ldxr	w3, [x0]
 228:	add	w1, w3, #0x1
 22c:	stlxr	w2, w1, [x0]
 230:	cbnz	w2, 224 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x224>
 234:	add	x28, x24, #0x800, lsl #12
 238:	mov	w0, #0x7fffff              	// #8388607
 23c:	add	w3, w3, #0x1
 240:	dmb	ish
 244:	cmp	w3, w0
 248:	ldr	x0, [x28, #1024]
 24c:	add	x0, x0, #0x1
 250:	str	x0, [x28, #1024]
 254:	b.hi	428 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x428>  // b.pmore
 258:	orr	w7, w3, w7, lsl #23
 25c:	cbz	w7, 444 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x444>
 260:	adrp	x9, 0 <_ZN11__sanitizer22thePersistentAllocatorE>
 264:	sub	w27, w22, #0x1
 268:	add	x27, x27, #0x4
 26c:	ldr	x1, [x9]
 270:	lsl	x27, x27, #3
 274:	add	x2, x1, #0x8
 278:	ldr	x19, [x1, #8]
 27c:	dmb	ish
 280:	ldr	x3, [x1, #16]
 284:	dmb	ish
 288:	cbz	x19, 320 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x320>
 28c:	add	x0, x27, x19
 290:	cmp	x0, x3
 294:	b.hi	320 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x320>  // b.pmore
 298:	ldxr	x3, [x2]
 29c:	cmp	x3, x19
 2a0:	b.ne	2ac <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2ac>  // b.any
 2a4:	stlxr	w4, x0, [x2]
 2a8:	cbnz	w4, 298 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x298>
 2ac:	dmb	ish
 2b0:	cmp	x3, x19
 2b4:	b.ne	278 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x278>  // b.any
 2b8:	ldr	x0, [x28, #1032]
 2bc:	and	w20, w20, #0xfff00000
 2c0:	lsl	x2, x26, #3
 2c4:	mov	x1, x21
 2c8:	add	x27, x0, x27
 2cc:	str	x27, [x28, #1032]
 2d0:	str	w7, [x19, #8]
 2d4:	add	x0, x19, #0x18
 2d8:	str	w20, [x19, #12]
 2dc:	stp	w22, w25, [x19, #16]
 2e0:	stp	x5, x6, [sp, #104]
 2e4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 2e8:	ldr	x6, [sp, #112]
 2ec:	str	x6, [x19]
 2f0:	dmb	ish
 2f4:	ldr	x5, [sp, #104]
 2f8:	str	x19, [x24, x5, lsl #3]
 2fc:	cbz	x23, 308 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x308>
 300:	mov	w0, #0x1                   	// #1
 304:	strb	w0, [x23]
 308:	mov	x0, x19
 30c:	b	4c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x4c>
 310:	dmb	ish
 314:	str	x6, [x24, x5, lsl #3]
 318:	mov	x0, x4
 31c:	b	4c <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x4c>
 320:	ldr	x0, [x9]
 324:	mov	w2, #0x1                   	// #1
 328:	ldxrb	w1, [x0]
 32c:	stxrb	w3, w2, [x0]
 330:	cbnz	w3, 328 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x328>
 334:	dmb	ish
 338:	tst	w1, #0xff
 33c:	b.eq	360 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x360>  // b.none
 340:	str	x5, [sp, #104]
 344:	str	w7, [sp, #112]
 348:	str	x6, [sp, #120]
 34c:	bl	0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 350:	ldr	w7, [sp, #112]
 354:	adrp	x9, 0 <_ZN11__sanitizer22thePersistentAllocatorE>
 358:	ldr	x5, [sp, #104]
 35c:	ldr	x6, [sp, #120]
 360:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 364:	ldr	x3, [x9]
 368:	add	x0, x0, #0x0
 36c:	str	x0, [sp, #152]
 370:	add	x4, x3, #0x8
 374:	nop
 378:	ldr	x19, [x3, #8]
 37c:	dmb	ish
 380:	ldr	x1, [x3, #16]
 384:	dmb	ish
 388:	cbz	x19, 3c4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3c4>
 38c:	add	x0, x27, x19
 390:	cmp	x0, x1
 394:	b.hi	3c4 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3c4>  // b.pmore
 398:	ldxr	x1, [x4]
 39c:	cmp	x1, x19
 3a0:	b.ne	3ac <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x3ac>  // b.any
 3a4:	stlxr	w2, x0, [x4]
 3a8:	cbnz	w2, 398 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x398>
 3ac:	dmb	ish
 3b0:	cmp	x1, x19
 3b4:	b.ne	378 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x378>  // b.any
 3b8:	dmb	ish
 3bc:	strb	wzr, [x3]
 3c0:	b	2b8 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x2b8>
 3c4:	ldr	x10, [x9]
 3c8:	cmp	x27, #0x10, lsl #12
 3cc:	ldr	x1, [sp, #152]
 3d0:	mov	x19, #0x10000               	// #65536
 3d4:	str	xzr, [x10, #8]
 3d8:	csel	x19, x27, x19, cs  // cs = hs, nlast
 3dc:	mov	x0, x19
 3e0:	mov	w2, #0x0                   	// #0
 3e4:	stp	x10, x5, [sp, #104]
 3e8:	str	w7, [sp, #120]
 3ec:	stp	x6, x3, [sp, #128]
 3f0:	str	x4, [sp, #144]
 3f4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3f8:	dmb	ish
 3fc:	add	x19, x19, x0
 400:	ldr	x10, [sp, #104]
 404:	str	x19, [x10, #16]
 408:	dmb	ish
 40c:	str	x0, [x10, #8]
 410:	adrp	x9, 0 <_ZN11__sanitizer22thePersistentAllocatorE>
 414:	ldr	w7, [sp, #120]
 418:	ldr	x5, [sp, #112]
 41c:	ldp	x6, x3, [sp, #128]
 420:	ldr	x4, [sp, #144]
 424:	b	378 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb+0x378>
 428:	adrp	x2, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 42c:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 430:	add	x2, x2, #0x0
 434:	add	x0, x0, #0x0
 438:	mov	x4, #0x800000              	// #8388608
 43c:	mov	w1, #0x78                  	// #120
 440:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 444:	adrp	x2, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 448:	adrp	x0, 0 <_ZN11__sanitizer14StackDepotBaseINS_14StackDepotNodeELi1ELi20EE3PutENS_10StackTraceEPb>
 44c:	add	x2, x2, #0x0
 450:	add	x0, x0, #0x0
 454:	mov	x4, #0x0                   	// #0
 458:	mov	x3, #0x0                   	// #0
 45c:	mov	w1, #0x7a                  	// #122
 460:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_stacktrace.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>:
   0:	add	x0, x0, #0x4
   4:	ret

0000000000000008 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>:
   8:	str	x30, [sp, #-16]!
   c:	mov	x0, x30
  10:	ldr	x30, [sp], #16
  14:	ret

0000000000000018 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm>:
  18:	stp	x19, x20, [sp, #-32]!
  1c:	cmp	x3, #0x0
  20:	stp	x21, x30, [sp, #16]
  24:	mov	x21, x3
  28:	cinc	w3, w2, ne  // ne = any
  2c:	str	w3, [x0, #8]
  30:	cmp	w3, #0x100
  34:	b.hi	68 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm+0x50>  // b.pmore
  38:	mov	x19, x0
  3c:	mov	x20, x2
  40:	add	x0, x0, #0x10
  44:	lsl	x2, x2, #3
  48:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  4c:	cbz	x21, 58 <_ZN11__sanitizer18BufferedStackTrace4InitEPKmmm+0x40>
  50:	add	x20, x20, #0x2
  54:	str	x21, [x19, x20, lsl #3]
  58:	ldp	x21, x30, [sp, #16]
  5c:	str	xzr, [x19, #2064]
  60:	ldp	x19, x20, [sp], #32
  64:	ret
  68:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
  6c:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
  70:	mov	w3, w3
  74:	add	x2, x2, #0x0
  78:	add	x0, x0, #0x0
  7c:	mov	x4, #0x100                 	// #256
  80:	mov	w1, #0x23                  	// #35
  84:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000088 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj>:
  88:	stp	x19, x20, [sp, #-64]!
  8c:	cmp	w5, #0x1
  90:	stp	x21, x22, [sp, #16]
  94:	stp	x23, x24, [sp, #32]
  98:	stp	x25, x30, [sp, #48]
  9c:	b.ls	184 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xfc>  // b.plast
  a0:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
  a4:	mov	x19, x0
  a8:	mov	w20, w5
  ac:	mov	x24, x1
  b0:	ldr	x25, [x25]
  b4:	mov	x22, x2
  b8:	mov	x21, x3
  bc:	mov	x23, x4
  c0:	ldr	x0, [x25]
  c4:	cbz	x0, 178 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xf0>
  c8:	mov	w1, #0x1                   	// #1
  cc:	str	w1, [x19, #8]
  d0:	str	x24, [x19, #16]
  d4:	cmp	x21, #0xfff
  d8:	b.ls	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.plast
  dc:	mov	x4, x23
  e0:	cmp	x21, x23
  e4:	b.ls	1a8 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x120>  // b.plast
  e8:	cmp	x22, x23
  ec:	b.ls	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.plast
  f0:	sub	x3, x21, #0x10
  f4:	cmp	x22, x3
  f8:	b.cs	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.hs, b.nlast
  fc:	tst	x22, #0x7
 100:	b.ne	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.any
 104:	mov	x2, x22
 108:	ldr	x4, [x2, #8]
 10c:	cmp	x0, x4
 110:	b.hi	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.pmore
 114:	cmp	x24, x4
 118:	b.eq	12c <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xa4>  // b.none
 11c:	add	x5, x19, w1, uxtw #3
 120:	add	w1, w1, #0x1
 124:	str	w1, [x19, #8]
 128:	str	x4, [x5, #16]
 12c:	cmp	x22, x21
 130:	ldr	x2, [x2]
 134:	b.cs	1a4 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x11c>  // b.hs, b.nlast
 138:	cmp	x22, x2
 13c:	b.cs	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.hs, b.nlast
 140:	cmp	x2, x3
 144:	b.cs	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.hs, b.nlast
 148:	tst	x2, #0x7
 14c:	b.ne	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.any
 150:	ldr	w1, [x19, #8]
 154:	cmp	w1, w20
 158:	b.cs	164 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0xdc>  // b.hs, b.nlast
 15c:	mov	x22, x2
 160:	b	108 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x80>
 164:	ldp	x21, x22, [sp, #16]
 168:	ldp	x23, x24, [sp, #32]
 16c:	ldp	x25, x30, [sp, #48]
 170:	ldp	x19, x20, [sp], #64
 174:	ret
 178:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 17c:	str	x0, [x25]
 180:	b	c8 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj+0x40>
 184:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 188:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 18c:	mov	w3, w5
 190:	add	x2, x2, #0x0
 194:	add	x0, x0, #0x0
 198:	mov	x4, #0x2                   	// #2
 19c:	mov	w1, #0x49                  	// #73
 1a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1a4:	mov	x4, x22
 1a8:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 1ac:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 1b0:	mov	x3, x21
 1b4:	add	x2, x2, #0x0
 1b8:	add	x0, x0, #0x0
 1bc:	mov	w1, #0x33                  	// #51
 1c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1c4:	nop

00000000000001c8 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>:
 1c8:	ldr	w2, [x0, #8]
 1cc:	cmp	x1, w2, uxtw
 1d0:	b.cs	25c <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x94>  // b.hs, b.nlast
 1d4:	sub	w6, w2, w1
 1d8:	str	w6, [x0, #8]
 1dc:	cbz	w6, 258 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x90>
 1e0:	sub	x3, x6, #0x1
 1e4:	cmp	x3, #0x9
 1e8:	ccmp	x1, #0x1, #0x0, hi  // hi = pmore
 1ec:	b.ls	23c <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x74>  // b.plast
 1f0:	add	x4, x1, #0x2
 1f4:	lsr	x3, x6, #1
 1f8:	add	x5, x0, #0x10
 1fc:	mov	x2, #0x0                   	// #0
 200:	add	x4, x0, x4, lsl #3
 204:	lsl	x3, x3, #4
 208:	ldr	q0, [x4, x2]
 20c:	str	q0, [x5, x2]
 210:	add	x2, x2, #0x10
 214:	cmp	x2, x3
 218:	b.ne	208 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x40>  // b.any
 21c:	and	x2, x6, #0xfffffffffffffffe
 220:	tbz	w6, #0, 258 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x90>
 224:	add	x1, x2, x1
 228:	add	x2, x2, #0x2
 22c:	add	x1, x1, #0x2
 230:	ldr	x1, [x0, x1, lsl #3]
 234:	str	x1, [x0, x2, lsl #3]
 238:	ret
 23c:	add	x0, x0, #0x10
 240:	add	x2, x0, w6, uxtw #3
 244:	nop
 248:	ldr	x3, [x0, x1, lsl #3]
 24c:	str	x3, [x0], #8
 250:	cmp	x0, x2
 254:	b.ne	248 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm+0x80>  // b.any
 258:	ret
 25c:	str	x30, [sp, #-16]!
 260:	mov	w4, w2
 264:	mov	x3, x1
 268:	adrp	x2, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 26c:	adrp	x0, 0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 270:	add	x2, x2, #0x0
 274:	add	x0, x0, #0x0
 278:	mov	w1, #0x74                  	// #116
 27c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000280 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>:
 280:	ldr	w9, [x0, #8]
 284:	cmp	x9, #0x1
 288:	b.ls	2e0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm+0x60>  // b.plast
 28c:	ldr	x10, [x0]
 290:	mov	x3, #0x1                   	// #1
 294:	mov	x0, #0x0                   	// #0
 298:	ldr	x2, [x10]
 29c:	nop
 2a0:	sub	x7, x1, x2
 2a4:	ldr	x6, [x10, x3, lsl #3]
 2a8:	sub	x5, x2, x1
 2ac:	cmp	x6, x1
 2b0:	sub	x8, x1, x6
 2b4:	sub	x4, x6, x1
 2b8:	csel	x4, x4, x8, cs  // cs = hs, nlast
 2bc:	cmp	x2, x1
 2c0:	csel	x5, x5, x7, cs  // cs = hs, nlast
 2c4:	cmp	x5, x4
 2c8:	csel	x0, x3, x0, hi  // hi = pmore
 2cc:	add	x3, x3, #0x1
 2d0:	csel	x2, x6, x2, hi  // hi = pmore
 2d4:	cmp	x9, x3
 2d8:	b.ne	2a0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm+0x20>  // b.any
 2dc:	ret
 2e0:	mov	x0, #0x0                   	// #0
 2e4:	ret

sanitizer_stacktrace_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK11__sanitizer10StackTrace5PrintEv>:
   0:	stp	x19, x20, [sp, #-176]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x21, x0
   c:	ldr	x0, [x0]
  10:	str	x30, [sp, #80]
  14:	cbz	x0, 74 <_ZNK11__sanitizer10StackTrace5PrintEv+0x74>
  18:	ldr	w0, [x21, #8]
  1c:	cbz	w0, 74 <_ZNK11__sanitizer10StackTrace5PrintEv+0x74>
  20:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	stp	x23, x24, [sp, #32]
  28:	ldr	x22, [x20]
  2c:	stp	x25, x26, [sp, #48]
  30:	stp	x27, x28, [sp, #64]
  34:	ldr	x0, [x22]
  38:	cbz	x0, 90 <_ZNK11__sanitizer10StackTrace5PrintEv+0x90>
  3c:	str	xzr, [sp, #112]
  40:	cmp	xzr, x0, lsl #1
  44:	stp	xzr, xzr, [sp, #120]
  48:	lsl	x19, x0, #1
  4c:	b.ne	bc <_ZNK11__sanitizer10StackTrace5PrintEv+0xbc>  // b.any
  50:	stp	xzr, xzr, [sp, #128]
  54:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  58:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  5c:	add	x2, x2, #0x0
  60:	add	x0, x0, #0x0
  64:	mov	x4, #0x0                   	// #0
  68:	mov	x3, #0x0                   	// #0
  6c:	mov	w1, #0x1c5                 	// #453
  70:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  74:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  78:	add	x0, x0, #0x0
  7c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  80:	ldp	x21, x22, [sp, #16]
  84:	ldr	x30, [sp, #80]
  88:	ldp	x19, x20, [sp], #176
  8c:	ret
  90:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  94:	str	x0, [x22]
  98:	str	xzr, [sp, #112]
  9c:	mov	x19, x0
  a0:	stp	xzr, xzr, [sp, #120]
  a4:	cmp	xzr, x0, lsl #1
  a8:	lsl	x1, x0, #1
  ac:	b.eq	50 <_ZNK11__sanitizer10StackTrace5PrintEv+0x50>  // b.none
  b0:	cbnz	x0, 454 <_ZNK11__sanitizer10StackTrace5PrintEv+0x454>
  b4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  b8:	str	x0, [x22]
  bc:	sub	x1, x0, #0x1
  c0:	tst	x1, x0
  c4:	b.ne	428 <_ZNK11__sanitizer10StackTrace5PrintEv+0x428>  // b.any
  c8:	add	x1, x19, x1
  cc:	neg	x0, x0
  d0:	and	x23, x1, x0
  d4:	mov	w2, #0x0                   	// #0
  d8:	mov	x0, x23
  dc:	adrp	x24, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
  e0:	add	x1, x24, #0x0
  e4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  e8:	ldr	x1, [sp, #112]
  ec:	mov	x22, x0
  f0:	ldr	x2, [sp, #128]
  f4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
  f8:	ldp	x0, x1, [sp, #112]
  fc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 100:	stp	x22, x23, [sp, #112]
 104:	ldr	x2, [sp, #128]
 108:	cmp	x19, x2
 10c:	b.ls	44c <_ZNK11__sanitizer10StackTrace5PrintEv+0x44c>  // b.plast
 110:	cmp	x19, x23
 114:	b.hi	30c <_ZNK11__sanitizer10StackTrace5PrintEv+0x30c>  // b.pmore
 118:	add	x0, x22, x2
 11c:	mov	w1, #0x0                   	// #0
 120:	sub	x2, x19, x2
 124:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 128:	stp	x19, xzr, [sp, #128]
 12c:	ldr	x22, [sp, #112]
 130:	cbz	x19, 54 <_ZNK11__sanitizer10StackTrace5PrintEv+0x54>
 134:	ldr	x23, [x20]
 138:	strb	wzr, [x22]
 13c:	ldr	x19, [x23]
 140:	cbz	x19, 2c0 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2c0>
 144:	str	xzr, [sp, #144]
 148:	stp	xzr, xzr, [sp, #152]
 14c:	sub	x23, x19, #0x1
 150:	ands	x23, x23, x19
 154:	b.ne	428 <_ZNK11__sanitizer10StackTrace5PrintEv+0x428>  // b.any
 158:	lsl	x0, x19, #1
 15c:	neg	x25, x19
 160:	sub	x0, x0, #0x1
 164:	add	x1, x24, #0x0
 168:	and	x25, x0, x25
 16c:	mov	w2, #0x0                   	// #0
 170:	mov	x0, x25
 174:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 178:	ldr	x1, [sp, #144]
 17c:	mov	x22, x0
 180:	ldr	x2, [sp, #160]
 184:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 188:	ldp	x0, x1, [sp, #144]
 18c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 190:	stp	x22, x25, [sp, #144]
 194:	ldr	x2, [sp, #160]
 198:	cmp	x19, x2
 19c:	b.ls	45c <_ZNK11__sanitizer10StackTrace5PrintEv+0x45c>  // b.plast
 1a0:	cmp	x19, x25
 1a4:	b.hi	384 <_ZNK11__sanitizer10StackTrace5PrintEv+0x384>  // b.pmore
 1a8:	add	x0, x22, x2
 1ac:	mov	w1, #0x0                   	// #0
 1b0:	sub	x2, x19, x2
 1b4:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 1b8:	ldr	x22, [sp, #144]
 1bc:	stp	x19, xzr, [sp, #160]
 1c0:	adrp	x26, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 1c4:	strb	wzr, [x22]
 1c8:	ldr	x1, [x26]
 1cc:	str	xzr, [sp, #96]
 1d0:	ldr	w0, [x21, #8]
 1d4:	ldr	w27, [x1, #192]
 1d8:	cbz	w0, 3f4 <_ZNK11__sanitizer10StackTrace5PrintEv+0x3f4>
 1dc:	adrp	x24, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 1e0:	add	x28, sp, #0x70
 1e4:	add	x24, x24, #0x0
 1e8:	ldr	x0, [x21]
 1ec:	ldr	x1, [sp, #96]
 1f0:	ldr	x19, [x0, x1, lsl #3]
 1f4:	cbz	x19, 3f4 <_ZNK11__sanitizer10StackTrace5PrintEv+0x3f4>
 1f8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 1fc:	sub	x1, x19, #0x4
 200:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 204:	str	x0, [sp, #104]
 208:	cbz	x0, 364 <_ZNK11__sanitizer10StackTrace5PrintEv+0x364>
 20c:	mov	x25, x0
 210:	adrp	x22, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 214:	ldr	x0, [sp, #128]
 218:	add	x22, x22, #0x0
 21c:	mov	x19, x23
 220:	ldr	x2, [sp, #112]
 224:	cbz	x0, 54 <_ZNK11__sanitizer10StackTrace5PrintEv+0x54>
 228:	ldr	x1, [x26]
 22c:	strb	wzr, [x2]
 230:	mov	x6, x24
 234:	mov	w2, w19
 238:	add	x3, x25, #0x8
 23c:	mov	x0, x28
 240:	ldrb	w4, [x1, #189]
 244:	add	x20, x19, #0x1
 248:	ldr	x5, [x1, #24]
 24c:	str	xzr, [sp, #136]
 250:	ldr	x1, [x1, #200]
 254:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 258:	ldr	x1, [sp, #112]
 25c:	mov	x0, x22
 260:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 264:	add	w1, w27, w23
 268:	sub	w0, w1, w19
 26c:	sub	w19, w1, w20
 270:	cmp	w0, #0x0
 274:	b.le	290 <_ZNK11__sanitizer10StackTrace5PrintEv+0x290>
 278:	ldr	x0, [sp, #168]
 27c:	cbnz	x0, 2ac <_ZNK11__sanitizer10StackTrace5PrintEv+0x2ac>
 280:	ldr	x1, [x25, #40]
 284:	cbz	x1, 290 <_ZNK11__sanitizer10StackTrace5PrintEv+0x290>
 288:	add	x0, sp, #0x90
 28c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 290:	ldr	x25, [x25]
 294:	cbz	x25, 2e0 <_ZNK11__sanitizer10StackTrace5PrintEv+0x2e0>
 298:	ldr	x0, [sp, #128]
 29c:	mov	x19, x20
 2a0:	ldr	x2, [sp, #112]
 2a4:	cbnz	x0, 228 <_ZNK11__sanitizer10StackTrace5PrintEv+0x228>
 2a8:	b	54 <_ZNK11__sanitizer10StackTrace5PrintEv+0x54>
 2ac:	add	x0, sp, #0x90
 2b0:	adrp	x1, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 2b4:	add	x1, x1, #0x0
 2b8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2bc:	b	280 <_ZNK11__sanitizer10StackTrace5PrintEv+0x280>
 2c0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 2c4:	str	x0, [x23]
 2c8:	str	xzr, [sp, #144]
 2cc:	mov	x19, x0
 2d0:	stp	xzr, xzr, [sp, #152]
 2d4:	cbnz	x0, 14c <_ZNK11__sanitizer10StackTrace5PrintEv+0x14c>
 2d8:	stp	xzr, xzr, [sp, #160]
 2dc:	b	54 <_ZNK11__sanitizer10StackTrace5PrintEv+0x54>
 2e0:	ldr	x0, [sp, #104]
 2e4:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 2e8:	ldr	x1, [sp, #96]
 2ec:	ldr	w0, [x21, #8]
 2f0:	add	x1, x1, #0x1
 2f4:	str	x1, [sp, #96]
 2f8:	cmp	x0, x1
 2fc:	b.ls	3f4 <_ZNK11__sanitizer10StackTrace5PrintEv+0x3f4>  // b.plast
 300:	mov	x23, x20
 304:	mov	w27, w19
 308:	b	1e8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x1e8>
 30c:	ldr	x22, [x20]
 310:	ldr	x0, [x22]
 314:	cbz	x0, 3dc <_ZNK11__sanitizer10StackTrace5PrintEv+0x3dc>
 318:	sub	x1, x0, #0x1
 31c:	tst	x1, x0
 320:	b.ne	428 <_ZNK11__sanitizer10StackTrace5PrintEv+0x428>  // b.any
 324:	add	x1, x19, x1
 328:	neg	x0, x0
 32c:	and	x23, x1, x0
 330:	mov	w2, #0x0                   	// #0
 334:	add	x1, x24, #0x0
 338:	mov	x0, x23
 33c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 340:	mov	x22, x0
 344:	ldr	x1, [sp, #112]
 348:	ldr	x2, [sp, #128]
 34c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 350:	ldp	x0, x1, [sp, #112]
 354:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 358:	stp	x22, x23, [sp, #112]
 35c:	ldr	x2, [sp, #128]
 360:	b	118 <_ZNK11__sanitizer10StackTrace5PrintEv+0x118>
 364:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 368:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 36c:	add	x2, x2, #0x0
 370:	add	x0, x0, #0x0
 374:	mov	x4, #0x0                   	// #0
 378:	mov	x3, #0x0                   	// #0
 37c:	mov	w1, #0x23                  	// #35
 380:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 384:	ldr	x20, [x20]
 388:	ldr	x0, [x20]
 38c:	cbz	x0, 3e8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x3e8>
 390:	sub	x1, x0, #0x1
 394:	tst	x1, x0
 398:	b.ne	428 <_ZNK11__sanitizer10StackTrace5PrintEv+0x428>  // b.any
 39c:	add	x1, x19, x1
 3a0:	neg	x0, x0
 3a4:	and	x20, x1, x0
 3a8:	mov	w2, #0x0                   	// #0
 3ac:	add	x1, x24, #0x0
 3b0:	mov	x0, x20
 3b4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 3b8:	mov	x22, x0
 3bc:	ldr	x1, [sp, #144]
 3c0:	ldr	x2, [sp, #160]
 3c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 3c8:	ldp	x0, x1, [sp, #144]
 3cc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 3d0:	stp	x22, x20, [sp, #144]
 3d4:	ldr	x2, [sp, #160]
 3d8:	b	1a8 <_ZNK11__sanitizer10StackTrace5PrintEv+0x1a8>
 3dc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 3e0:	str	x0, [x22]
 3e4:	b	318 <_ZNK11__sanitizer10StackTrace5PrintEv+0x318>
 3e8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 3ec:	str	x0, [x20]
 3f0:	b	390 <_ZNK11__sanitizer10StackTrace5PrintEv+0x390>
 3f4:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 3f8:	add	x0, x0, #0x0
 3fc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 400:	ldr	x0, [sp, #168]
 404:	cbnz	x0, 438 <_ZNK11__sanitizer10StackTrace5PrintEv+0x438>
 408:	ldp	x0, x1, [sp, #144]
 40c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 410:	ldp	x0, x1, [sp, #112]
 414:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 418:	ldp	x23, x24, [sp, #32]
 41c:	ldp	x25, x26, [sp, #48]
 420:	ldp	x27, x28, [sp, #64]
 424:	b	80 <_ZNK11__sanitizer10StackTrace5PrintEv+0x80>
 428:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 42c:	add	x0, x0, #0x0
 430:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 434:	bl	0 <_ZN11__sanitizer3DieEv>
 438:	ldr	x1, [sp, #144]
 43c:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 440:	add	x0, x0, #0x0
 444:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
 448:	b	408 <_ZNK11__sanitizer10StackTrace5PrintEv+0x408>
 44c:	stp	x19, xzr, [sp, #128]
 450:	b	134 <_ZNK11__sanitizer10StackTrace5PrintEv+0x134>
 454:	mov	x19, x1
 458:	b	bc <_ZNK11__sanitizer10StackTrace5PrintEv+0xbc>
 45c:	stp	x19, xzr, [sp, #160]
 460:	b	1c0 <_ZNK11__sanitizer10StackTrace5PrintEv+0x1c0>
 464:	nop

0000000000000468 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>:
 468:	mov	w8, w1
 46c:	and	w7, w7, #0xff
 470:	mov	x1, x2
 474:	mov	x9, x0
 478:	mov	x2, x3
 47c:	mov	x3, x5
 480:	cbnz	w8, 490 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x28>
 484:	str	wzr, [x0, #8]
 488:	str	xzr, [x0, #2064]
 48c:	ret
 490:	str	x2, [x0, #2064]
 494:	cmp	w8, #0x1
 498:	b.eq	4bc <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x54>  // b.none
 49c:	cbnz	w7, 4b0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x48>
 4a0:	cbz	x4, 4c8 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb+0x60>
 4a4:	mov	w3, w8
 4a8:	mov	x2, x4
 4ac:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj>
 4b0:	mov	w5, w8
 4b4:	mov	x4, x6
 4b8:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindFastEmmmmj>
 4bc:	str	w8, [x9, #8]
 4c0:	str	x1, [x9, #16]
 4c4:	ret
 4c8:	mov	w2, w8
 4cc:	b	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>

00000000000004d0 <__sanitizer_symbolize_pc>:
 4d0:	cbnz	x3, 4d8 <__sanitizer_symbolize_pc+0x8>
 4d4:	ret
 4d8:	stp	x19, x20, [sp, #-112]!
 4dc:	mov	x19, x2
 4e0:	mov	x20, x3
 4e4:	stp	x21, x22, [sp, #16]
 4e8:	mov	x21, x0
 4ec:	stp	x23, x24, [sp, #32]
 4f0:	mov	x23, x1
 4f4:	str	x30, [sp, #72]
 4f8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 4fc:	sub	x1, x21, #0x4
 500:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
 504:	mov	x21, x0
 508:	cbz	x0, 744 <__sanitizer_symbolize_pc+0x274>
 50c:	stp	x25, x26, [sp, #48]
 510:	adrp	x26, 0 <_ZN11__sanitizer14PageSizeCachedE>
 514:	ldr	x24, [x26]
 518:	ldr	x22, [x24]
 51c:	str	x27, [sp, #64]
 520:	cbz	x22, 67c <__sanitizer_symbolize_pc+0x1ac>
 524:	str	xzr, [sp, #80]
 528:	stp	xzr, xzr, [sp, #88]
 52c:	sub	x0, x22, #0x1
 530:	tst	x0, x22
 534:	b.ne	734 <__sanitizer_symbolize_pc+0x264>  // b.any
 538:	lsl	x0, x22, #1
 53c:	neg	x25, x22
 540:	sub	x0, x0, #0x1
 544:	mov	w2, #0x0                   	// #0
 548:	and	x25, x0, x25
 54c:	adrp	x27, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 550:	mov	x0, x25
 554:	add	x1, x27, #0x0
 558:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 55c:	mov	x24, x0
 560:	ldr	x1, [sp, #80]
 564:	ldr	x2, [sp, #96]
 568:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 56c:	ldp	x0, x1, [sp, #80]
 570:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 574:	stp	x24, x25, [sp, #80]
 578:	ldr	x2, [sp, #96]
 57c:	cmp	x22, x2
 580:	b.ls	784 <__sanitizer_symbolize_pc+0x2b4>  // b.plast
 584:	cmp	x22, x25
 588:	b.hi	6d0 <__sanitizer_symbolize_pc+0x200>  // b.pmore
 58c:	add	x0, x24, x2
 590:	mov	w1, #0x0                   	// #0
 594:	sub	x2, x22, x2
 598:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 59c:	ldr	x24, [sp, #80]
 5a0:	stp	x22, xzr, [sp, #96]
 5a4:	sub	x20, x20, #0x1
 5a8:	strb	wzr, [x24]
 5ac:	add	x20, x19, x20
 5b0:	cmp	x19, x20
 5b4:	b.cs	64c <__sanitizer_symbolize_pc+0x17c>  // b.hs, b.nlast
 5b8:	adrp	x25, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 5bc:	adrp	x26, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 5c0:	add	x27, sp, #0x50
 5c4:	add	x26, x26, #0x0
 5c8:	ldr	x25, [x25]
 5cc:	mov	w22, #0x0                   	// #0
 5d0:	ldr	x0, [sp, #96]
 5d4:	ldr	x1, [sp, #80]
 5d8:	cbz	x0, 698 <__sanitizer_symbolize_pc+0x1c8>
 5dc:	strb	wzr, [x1]
 5e0:	mov	x0, x27
 5e4:	mov	x6, x26
 5e8:	add	x3, x21, #0x8
 5ec:	ldrb	w4, [x25, #189]
 5f0:	mov	w2, w22
 5f4:	ldr	x5, [x25, #24]
 5f8:	mov	x1, x23
 5fc:	str	xzr, [sp, #104]
 600:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
 604:	ldr	x0, [sp, #104]
 608:	cbz	x0, 6b8 <__sanitizer_symbolize_pc+0x1e8>
 60c:	ldr	x1, [sp, #80]
 610:	sub	x24, x20, x19
 614:	sub	x24, x24, #0x1
 618:	mov	x0, x19
 61c:	mov	x2, x24
 620:	add	w22, w22, #0x1
 624:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 628:	ldr	x2, [sp, #104]
 62c:	cmp	x2, x24
 630:	csel	x2, x2, x24, ls  // ls = plast
 634:	add	x19, x19, x2
 638:	strb	wzr, [x19], #1
 63c:	ldr	x21, [x21]
 640:	cmp	x21, #0x0
 644:	ccmp	x20, x19, #0x0, ne  // ne = any
 648:	b.hi	5d0 <__sanitizer_symbolize_pc+0x100>  // b.pmore
 64c:	cmp	x19, x20
 650:	b.hi	764 <__sanitizer_symbolize_pc+0x294>  // b.pmore
 654:	ldp	x0, x1, [sp, #80]
 658:	strb	wzr, [x19]
 65c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 660:	ldp	x25, x26, [sp, #48]
 664:	ldr	x27, [sp, #64]
 668:	ldp	x21, x22, [sp, #16]
 66c:	ldp	x23, x24, [sp, #32]
 670:	ldr	x30, [sp, #72]
 674:	ldp	x19, x20, [sp], #112
 678:	ret
 67c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 680:	str	x0, [x24]
 684:	str	xzr, [sp, #80]
 688:	mov	x22, x0
 68c:	stp	xzr, xzr, [sp, #88]
 690:	cbnz	x0, 52c <__sanitizer_symbolize_pc+0x5c>
 694:	stp	xzr, xzr, [sp, #96]
 698:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 69c:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 6a0:	add	x2, x2, #0x0
 6a4:	add	x0, x0, #0x0
 6a8:	mov	x4, #0x0                   	// #0
 6ac:	mov	x3, #0x0                   	// #0
 6b0:	mov	w1, #0x1c5                 	// #453
 6b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 6b8:	ldr	x21, [x21]
 6bc:	add	w22, w22, #0x1
 6c0:	cmp	x21, #0x0
 6c4:	ccmp	x20, x19, #0x0, ne  // ne = any
 6c8:	b.hi	5d0 <__sanitizer_symbolize_pc+0x100>  // b.pmore
 6cc:	b	64c <__sanitizer_symbolize_pc+0x17c>
 6d0:	ldr	x26, [x26]
 6d4:	ldr	x0, [x26]
 6d8:	cbz	x0, 728 <__sanitizer_symbolize_pc+0x258>
 6dc:	sub	x1, x0, #0x1
 6e0:	tst	x0, x1
 6e4:	b.ne	734 <__sanitizer_symbolize_pc+0x264>  // b.any
 6e8:	add	x1, x22, x1
 6ec:	neg	x0, x0
 6f0:	and	x25, x1, x0
 6f4:	mov	w2, #0x0                   	// #0
 6f8:	add	x1, x27, #0x0
 6fc:	mov	x0, x25
 700:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 704:	mov	x24, x0
 708:	ldr	x1, [sp, #80]
 70c:	ldr	x2, [sp, #96]
 710:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 714:	ldp	x0, x1, [sp, #80]
 718:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 71c:	stp	x24, x25, [sp, #80]
 720:	ldr	x2, [sp, #96]
 724:	b	58c <__sanitizer_symbolize_pc+0xbc>
 728:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 72c:	str	x0, [x26]
 730:	b	6dc <__sanitizer_symbolize_pc+0x20c>
 734:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 738:	add	x0, x0, #0x0
 73c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 740:	bl	0 <_ZN11__sanitizer3DieEv>
 744:	mov	x0, x19
 748:	add	x19, x19, x20
 74c:	mov	x2, x20
 750:	adrp	x1, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 754:	add	x1, x1, #0x0
 758:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 75c:	sturb	wzr, [x19, #-1]
 760:	b	668 <__sanitizer_symbolize_pc+0x198>
 764:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 768:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 76c:	add	x2, x2, #0x0
 770:	add	x0, x0, #0x0
 774:	mov	x4, #0x0                   	// #0
 778:	mov	x3, #0x0                   	// #0
 77c:	mov	w1, #0x87                  	// #135
 780:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 784:	stp	x22, xzr, [sp, #96]
 788:	b	5a4 <__sanitizer_symbolize_pc+0xd4>
 78c:	nop

0000000000000790 <__sanitizer_symbolize_global>:
 790:	cbnz	x3, 798 <__sanitizer_symbolize_global+0x8>
 794:	ret
 798:	stp	x19, x20, [sp, #-176]!
 79c:	mov	x20, x0
 7a0:	mov	x19, x3
 7a4:	stp	x21, x22, [sp, #16]
 7a8:	mov	x22, x1
 7ac:	mov	x21, x2
 7b0:	stp	x23, x24, [sp, #32]
 7b4:	add	x23, sp, #0x70
 7b8:	mov	x0, x23
 7bc:	str	x30, [sp, #72]
 7c0:	strb	wzr, [x2]
 7c4:	bl	0 <_ZN11__sanitizer8DataInfoC1Ev>
 7c8:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 7cc:	mov	x2, x23
 7d0:	mov	x1, x20
 7d4:	bl	0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE>
 7d8:	tst	w0, #0xff
 7dc:	b.eq	8c0 <__sanitizer_symbolize_global+0x130>  // b.none
 7e0:	stp	x25, x26, [sp, #48]
 7e4:	adrp	x26, 0 <_ZN11__sanitizer14PageSizeCachedE>
 7e8:	ldr	x24, [x26]
 7ec:	ldr	x20, [x24]
 7f0:	str	x27, [sp, #64]
 7f4:	cbz	x20, 8d4 <__sanitizer_symbolize_global+0x144>
 7f8:	str	xzr, [sp, #80]
 7fc:	stp	xzr, xzr, [sp, #88]
 800:	sub	x0, x20, #0x1
 804:	tst	x0, x20
 808:	b.ne	974 <__sanitizer_symbolize_global+0x1e4>  // b.any
 80c:	lsl	x0, x20, #1
 810:	neg	x25, x20
 814:	sub	x0, x0, #0x1
 818:	mov	w2, #0x0                   	// #0
 81c:	and	x25, x0, x25
 820:	adrp	x27, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 824:	mov	x0, x25
 828:	add	x1, x27, #0x0
 82c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 830:	mov	x24, x0
 834:	ldr	x1, [sp, #80]
 838:	ldr	x2, [sp, #96]
 83c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 840:	ldp	x0, x1, [sp, #80]
 844:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 848:	stp	x24, x25, [sp, #80]
 84c:	ldr	x2, [sp, #96]
 850:	cmp	x20, x2
 854:	b.ls	984 <__sanitizer_symbolize_global+0x1f4>  // b.plast
 858:	cmp	x20, x25
 85c:	b.hi	910 <__sanitizer_symbolize_global+0x180>  // b.pmore
 860:	add	x0, x24, x2
 864:	mov	w1, #0x0                   	// #0
 868:	sub	x2, x20, x2
 86c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 870:	ldr	x24, [sp, #80]
 874:	stp	x20, xzr, [sp, #96]
 878:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 87c:	strb	wzr, [x24]
 880:	mov	x2, x23
 884:	ldr	x3, [x3]
 888:	mov	x1, x22
 88c:	add	x0, sp, #0x50
 890:	ldr	x3, [x3, #24]
 894:	bl	0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 898:	ldr	x1, [sp, #80]
 89c:	mov	x2, x19
 8a0:	mov	x0, x21
 8a4:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 8a8:	ldp	x0, x1, [sp, #80]
 8ac:	add	x2, x21, x19
 8b0:	sturb	wzr, [x2, #-1]
 8b4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 8b8:	ldp	x25, x26, [sp, #48]
 8bc:	ldr	x27, [sp, #64]
 8c0:	ldp	x21, x22, [sp, #16]
 8c4:	ldp	x23, x24, [sp, #32]
 8c8:	ldr	x30, [sp, #72]
 8cc:	ldp	x19, x20, [sp], #176
 8d0:	ret
 8d4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 8d8:	str	x0, [x24]
 8dc:	str	xzr, [sp, #80]
 8e0:	mov	x20, x0
 8e4:	stp	xzr, xzr, [sp, #88]
 8e8:	cbnz	x0, 800 <__sanitizer_symbolize_global+0x70>
 8ec:	adrp	x2, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 8f0:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 8f4:	add	x2, x2, #0x0
 8f8:	add	x0, x0, #0x0
 8fc:	mov	x4, #0x0                   	// #0
 900:	mov	x3, #0x0                   	// #0
 904:	mov	w1, #0x1c5                 	// #453
 908:	stp	xzr, xzr, [sp, #96]
 90c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 910:	ldr	x26, [x26]
 914:	ldr	x0, [x26]
 918:	cbz	x0, 968 <__sanitizer_symbolize_global+0x1d8>
 91c:	sub	x1, x0, #0x1
 920:	tst	x0, x1
 924:	b.ne	974 <__sanitizer_symbolize_global+0x1e4>  // b.any
 928:	add	x1, x20, x1
 92c:	neg	x0, x0
 930:	and	x25, x1, x0
 934:	mov	w2, #0x0                   	// #0
 938:	add	x1, x27, #0x0
 93c:	mov	x0, x25
 940:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 944:	mov	x24, x0
 948:	ldr	x1, [sp, #80]
 94c:	ldr	x2, [sp, #96]
 950:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 954:	ldp	x0, x1, [sp, #80]
 958:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 95c:	stp	x24, x25, [sp, #80]
 960:	ldr	x2, [sp, #96]
 964:	b	860 <__sanitizer_symbolize_global+0xd0>
 968:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 96c:	str	x0, [x26]
 970:	b	91c <__sanitizer_symbolize_global+0x18c>
 974:	adrp	x0, 0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 978:	add	x0, x0, #0x0
 97c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 980:	bl	0 <_ZN11__sanitizer3DieEv>
 984:	stp	x20, xzr, [sp, #96]
 988:	b	878 <__sanitizer_symbolize_global+0xe8>
 98c:	nop

0000000000000990 <__sanitizer_get_module_and_offset_for_pc>:
 990:	stp	x19, x20, [sp, #-64]!
 994:	mov	x19, x1
 998:	mov	x20, x2
 99c:	stp	x21, x22, [sp, #16]
 9a0:	mov	x21, x0
 9a4:	mov	x22, x3
 9a8:	str	x30, [sp, #32]
 9ac:	str	xzr, [sp, #56]
 9b0:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 9b4:	mov	x1, x21
 9b8:	mov	x3, x22
 9bc:	add	x2, sp, #0x38
 9c0:	mov	w21, #0x0                   	// #0
 9c4:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
 9c8:	tst	w0, #0xff
 9cc:	b.eq	9e0 <__sanitizer_get_module_and_offset_for_pc+0x50>  // b.none
 9d0:	cmp	x19, #0x0
 9d4:	mov	w21, #0x1                   	// #1
 9d8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
 9dc:	b.ne	9f4 <__sanitizer_get_module_and_offset_for_pc+0x64>  // b.any
 9e0:	mov	w0, w21
 9e4:	ldp	x21, x22, [sp, #16]
 9e8:	ldr	x30, [sp, #32]
 9ec:	ldp	x19, x20, [sp], #64
 9f0:	ret
 9f4:	ldr	x1, [sp, #56]
 9f8:	mov	x0, x19
 9fc:	add	x19, x19, x20
 a00:	mov	x2, x20
 a04:	bl	0 <_ZN11__sanitizer16internal_strncpyEPcPKcm>
 a08:	sturb	wzr, [x19, #-1]
 a0c:	mov	w0, w21
 a10:	ldp	x21, x22, [sp, #16]
 a14:	ldr	x30, [sp, #32]
 a18:	ldp	x19, x20, [sp], #64
 a1c:	ret

sanitizer_stacktrace_printer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x22, x2
   c:	str	x30, [sp, #64]
  10:	ldrb	w2, [x1]
  14:	cbz	w2, b0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xb0>
  18:	mov	x19, x1
  1c:	mov	x21, x0
  20:	stp	x23, x24, [sp, #32]
  24:	adrp	x23, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
  28:	mov	x24, x3
  2c:	add	x23, x23, #0x0
  30:	stp	x25, x26, [sp, #48]
  34:	adrp	x25, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
  38:	adrp	x26, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
  3c:	add	x25, x25, #0x0
  40:	b	5c <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
  44:	add	x19, x19, #0x2
  48:	add	x1, x26, #0x0
  4c:	mov	x0, x21
  50:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  54:	ldrb	w2, [x20, #1]
  58:	cbz	w2, a8 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xa8>
  5c:	cmp	w2, #0x25
  60:	add	x20, x19, #0x1
  64:	b.ne	ec <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xec>  // b.any
  68:	ldrb	w2, [x19, #1]
  6c:	cmp	w2, #0x6c
  70:	b.eq	10c <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x10c>  // b.none
  74:	b.hi	c0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0xc0>  // b.pmore
  78:	cmp	w2, #0x25
  7c:	b.eq	44 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x44>  // b.none
  80:	cmp	w2, #0x67
  84:	b.ne	124 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x124>  // b.any
  88:	ldr	x2, [x22, #40]
  8c:	mov	x1, x23
  90:	mov	x0, x21
  94:	add	x19, x19, #0x2
  98:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  9c:	ldrb	w2, [x20, #1]
  a0:	cbnz	w2, 5c <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x5c>
  a4:	nop
  a8:	ldp	x23, x24, [sp, #32]
  ac:	ldp	x25, x26, [sp, #48]
  b0:	ldp	x21, x22, [sp, #16]
  b4:	ldr	x30, [sp, #64]
  b8:	ldp	x19, x20, [sp], #80
  bc:	ret
  c0:	cmp	w2, #0x73
  c4:	b.ne	124 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x124>  // b.any
  c8:	ldr	x0, [x22, #24]
  cc:	mov	x1, x24
  d0:	add	x19, x19, #0x2
  d4:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
  d8:	mov	x2, x0
  dc:	mov	x1, x23
  e0:	mov	x0, x21
  e4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  e8:	b	54 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x54>
  ec:	mov	x0, x21
  f0:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
  f4:	add	x1, x1, #0x0
  f8:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
  fc:	mov	x0, x20
 100:	mov	x20, x19
 104:	mov	x19, x0
 108:	b	54 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x54>
 10c:	ldr	x2, [x22, #32]
 110:	add	x19, x19, #0x2
 114:	mov	x1, x25
 118:	mov	x0, x21
 11c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 120:	b	54 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_+0x54>
 124:	mov	w1, w2
 128:	adrp	x0, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 134:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000138 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>:
 138:	stp	x19, x20, [sp, #-48]!
 13c:	cmp	w2, #0x0
 140:	and	w4, w4, #0xff
 144:	stp	x21, x22, [sp, #16]
 148:	mov	x20, x0
 14c:	mov	w19, w2
 150:	str	x30, [sp, #32]
 154:	mov	x0, x1
 158:	mov	w21, w3
 15c:	ccmp	w4, #0x0, #0x4, gt
 160:	mov	x1, x5
 164:	b.ne	1d4 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x9c>  // b.any
 168:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 16c:	mov	x2, x0
 170:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 174:	mov	x0, x20
 178:	add	x1, x1, #0x0
 17c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 180:	cmp	w19, #0x0
 184:	b.gt	198 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x60>
 188:	ldp	x21, x22, [sp, #16]
 18c:	ldr	x30, [sp, #32]
 190:	ldp	x19, x20, [sp], #48
 194:	ret
 198:	adrp	x22, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 19c:	add	x22, x22, #0x0
 1a0:	mov	w2, w19
 1a4:	mov	x1, x22
 1a8:	mov	x0, x20
 1ac:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1b0:	cmp	w21, #0x0
 1b4:	b.le	188 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0x50>
 1b8:	mov	w2, w21
 1bc:	mov	x1, x22
 1c0:	mov	x0, x20
 1c4:	ldp	x21, x22, [sp, #16]
 1c8:	ldr	x30, [sp, #32]
 1cc:	ldp	x19, x20, [sp], #48
 1d0:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1d4:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 1d8:	mov	x2, x0
 1dc:	mov	w3, w19
 1e0:	mov	x0, x20
 1e4:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 1e8:	add	x1, x1, #0x0
 1ec:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 1f0:	cmp	w21, #0x0
 1f4:	b.gt	214 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_+0xdc>
 1f8:	mov	x0, x20
 1fc:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 200:	ldp	x21, x22, [sp, #16]
 204:	add	x1, x1, #0x0
 208:	ldr	x30, [sp, #32]
 20c:	ldp	x19, x20, [sp], #48
 210:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 214:	mov	w2, w21
 218:	mov	x0, x20
 21c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 220:	add	x1, x1, #0x0
 224:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 228:	mov	x0, x20
 22c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 230:	ldp	x21, x22, [sp, #16]
 234:	add	x1, x1, #0x0
 238:	ldr	x30, [sp, #32]
 23c:	ldp	x19, x20, [sp], #48
 240:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 244:	nop

0000000000000248 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_>:
 248:	stp	x19, x20, [sp, #-32]!
 24c:	mov	x20, x0
 250:	mov	w19, w3
 254:	mov	x0, x1
 258:	mov	x1, x4
 25c:	stp	x21, x30, [sp, #16]
 260:	mov	x21, x2
 264:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 268:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 26c:	mov	x2, x0
 270:	add	x1, x1, #0x0
 274:	mov	x0, x20
 278:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 27c:	cbnz	w19, 29c <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x54>
 280:	mov	x2, x21
 284:	mov	x0, x20
 288:	ldp	x21, x30, [sp, #16]
 28c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 290:	ldp	x19, x20, [sp], #32
 294:	add	x1, x1, #0x0
 298:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 29c:	cmp	w19, #0x5
 2a0:	b.eq	36c <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x124>  // b.none
 2a4:	b.hi	2ec <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xa4>  // b.pmore
 2a8:	cmp	w19, #0x3
 2ac:	b.eq	360 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x118>  // b.none
 2b0:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 2b4:	cmp	w19, #0x4
 2b8:	add	x2, x1, #0x0
 2bc:	b.ne	318 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xd0>  // b.any
 2c0:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 2c4:	mov	x0, x20
 2c8:	add	x1, x1, #0x0
 2cc:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2d0:	mov	x2, x21
 2d4:	mov	x0, x20
 2d8:	ldp	x21, x30, [sp, #16]
 2dc:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 2e0:	ldp	x19, x20, [sp], #32
 2e4:	add	x1, x1, #0x0
 2e8:	b	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 2ec:	cmp	w19, #0x7
 2f0:	b.eq	354 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x10c>  // b.none
 2f4:	cmp	w19, #0x8
 2f8:	b.ne	334 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0xec>  // b.any
 2fc:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 300:	mov	x0, x20
 304:	add	x2, x1, #0x0
 308:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 30c:	add	x1, x1, #0x0
 310:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 314:	b	2d0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x88>
 318:	cmp	w19, #0x1
 31c:	b.eq	348 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x100>  // b.none
 320:	cmp	w19, #0x2
 324:	b.ne	378 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x130>  // b.any
 328:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 32c:	add	x2, x1, #0x0
 330:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 334:	cmp	w19, #0x6
 338:	b.ne	378 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x130>  // b.any
 33c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 340:	add	x2, x1, #0x0
 344:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 348:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 34c:	add	x2, x1, #0x0
 350:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 354:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 358:	add	x2, x1, #0x0
 35c:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 360:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 364:	add	x2, x1, #0x0
 368:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 36c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 370:	add	x2, x1, #0x0
 374:	b	2c0 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_+0x78>
 378:	adrp	x2, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 37c:	adrp	x0, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 380:	add	x2, x2, #0x0
 384:	add	x0, x0, #0x0
 388:	mov	x4, #0x0                   	// #0
 38c:	mov	x3, #0x0                   	// #0
 390:	mov	w1, #0x2b8                 	// #696
 394:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000398 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>:
 398:	stp	x19, x20, [sp, #-112]!
 39c:	mov	x19, x1
 3a0:	mov	x20, x0
 3a4:	mov	x0, x1
 3a8:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 3ac:	add	x1, x1, #0x0
 3b0:	stp	x21, x22, [sp, #16]
 3b4:	mov	x21, x3
 3b8:	mov	x22, x6
 3bc:	stp	x23, x24, [sp, #32]
 3c0:	mov	x23, x5
 3c4:	stp	x25, x26, [sp, #48]
 3c8:	mov	w26, w2
 3cc:	stp	x27, x28, [sp, #64]
 3d0:	and	w27, w4, #0xff
 3d4:	str	x30, [sp, #80]
 3d8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 3dc:	cbz	w0, 708 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x370>
 3e0:	ldrb	w2, [x19]
 3e4:	cbz	w2, 4b8 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x120>
 3e8:	adrp	x25, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 3ec:	adrp	x24, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 3f0:	add	x25, x25, #0x0
 3f4:	add	x24, x24, #0x0
 3f8:	b	488 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xf0>
 3fc:	ldrb	w2, [x19, #1]
 400:	cmp	w2, #0x6c
 404:	b.eq	6f0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x358>  // b.none
 408:	b.hi	530 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x198>  // b.pmore
 40c:	cmp	w2, #0x4d
 410:	b.eq	6b8 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x320>  // b.none
 414:	b.ls	4fc <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x164>  // b.plast
 418:	cmp	w2, #0x63
 41c:	b.eq	6a0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x308>  // b.none
 420:	cmp	w2, #0x66
 424:	b.ne	4d4 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x13c>  // b.any
 428:	ldr	x3, [x21, #32]
 42c:	cbz	x3, 468 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xd0>
 430:	cbz	x22, 468 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xd0>
 434:	mov	x0, x22
 438:	str	x3, [sp, #96]
 43c:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 440:	mov	x2, x0
 444:	ldr	x3, [sp, #96]
 448:	mov	x1, x22
 44c:	stp	x2, x3, [sp, #96]
 450:	mov	x0, x3
 454:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 458:	cmp	w0, #0x0
 45c:	ldp	x2, x3, [sp, #96]
 460:	add	x2, x3, x2
 464:	csel	x3, x2, x3, eq  // eq = none
 468:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 46c:	mov	x2, x3
 470:	add	x19, x19, #0x2
 474:	mov	x0, x20
 478:	add	x1, x1, #0x0
 47c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 480:	ldrb	w2, [x28, #1]
 484:	cbz	w2, 4b8 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x120>
 488:	cmp	w2, #0x25
 48c:	add	x28, x19, #0x1
 490:	b.eq	3fc <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x64>  // b.none
 494:	mov	x0, x20
 498:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 49c:	add	x1, x1, #0x0
 4a0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 4a4:	mov	x0, x28
 4a8:	mov	x28, x19
 4ac:	mov	x19, x0
 4b0:	ldrb	w2, [x28, #1]
 4b4:	cbnz	w2, 488 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xf0>
 4b8:	ldp	x21, x22, [sp, #16]
 4bc:	ldp	x23, x24, [sp, #32]
 4c0:	ldp	x25, x26, [sp, #48]
 4c4:	ldp	x27, x28, [sp, #64]
 4c8:	ldr	x30, [sp, #80]
 4cc:	ldp	x19, x20, [sp], #112
 4d0:	ret
 4d4:	cmp	w2, #0x53
 4d8:	b.ne	760 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3c8>  // b.any
 4dc:	ldp	w2, w3, [x21, #56]
 4e0:	add	x19, x19, #0x2
 4e4:	ldr	x1, [x21, #48]
 4e8:	mov	x5, x23
 4ec:	mov	w4, w27
 4f0:	mov	x0, x20
 4f4:	bl	138 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>
 4f8:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 4fc:	cmp	w2, #0x46
 500:	b.eq	608 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x270>  // b.none
 504:	cmp	w2, #0x4c
 508:	b.ne	564 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x1cc>  // b.any
 50c:	ldr	x1, [x21, #48]
 510:	add	x19, x19, #0x2
 514:	cbz	x1, 718 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x380>
 518:	ldp	w2, w3, [x21, #56]
 51c:	mov	x5, x23
 520:	mov	w4, w27
 524:	mov	x0, x20
 528:	bl	138 <_ZN11__sanitizer20RenderSourceLocationEPNS_20InternalScopedStringEPKciibS3_>
 52c:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 530:	cmp	w2, #0x70
 534:	b.eq	688 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x2f0>  // b.none
 538:	b.ls	5b4 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x21c>  // b.plast
 53c:	cmp	w2, #0x71
 540:	b.ne	584 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x1ec>  // b.any
 544:	ldr	x2, [x21, #40]
 548:	add	x19, x19, #0x2
 54c:	mov	x1, x24
 550:	mov	x0, x20
 554:	cmn	x2, #0x1
 558:	csel	x2, x2, xzr, ne  // ne = any
 55c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 560:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 564:	cmp	w2, #0x25
 568:	b.ne	760 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3c8>  // b.any
 56c:	add	x19, x19, #0x2
 570:	mov	x0, x20
 574:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 578:	add	x1, x1, #0x0
 57c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 580:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 584:	cmp	w2, #0x73
 588:	b.ne	760 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3c8>  // b.any
 58c:	ldr	x0, [x21, #48]
 590:	mov	x1, x23
 594:	bl	0 <_ZN11__sanitizer15StripPathPrefixEPKcS1_>
 598:	add	x19, x19, #0x2
 59c:	mov	x2, x0
 5a0:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 5a4:	mov	x0, x20
 5a8:	add	x1, x1, #0x0
 5ac:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 5b0:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 5b4:	cmp	w2, #0x6e
 5b8:	b.eq	5ec <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x254>  // b.none
 5bc:	cmp	w2, #0x6f
 5c0:	b.ne	5dc <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x244>  // b.any
 5c4:	ldr	x2, [x21, #16]
 5c8:	add	x19, x19, #0x2
 5cc:	mov	x1, x24
 5d0:	mov	x0, x20
 5d4:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 5d8:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 5dc:	cmp	w2, #0x6d
 5e0:	b.ne	760 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3c8>  // b.any
 5e4:	ldr	x0, [x21, #8]
 5e8:	b	590 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x1f8>
 5ec:	add	x19, x19, #0x2
 5f0:	mov	w2, w26
 5f4:	mov	x0, x20
 5f8:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 5fc:	add	x1, x1, #0x0
 600:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 604:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 608:	ldr	x3, [x21, #32]
 60c:	add	x19, x19, #0x2
 610:	cbz	x3, 480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 614:	cbz	x22, 64c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x2b4>
 618:	mov	x0, x22
 61c:	str	x3, [sp, #96]
 620:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 624:	mov	x2, x0
 628:	ldr	x3, [sp, #96]
 62c:	mov	x1, x22
 630:	stp	x2, x3, [sp, #96]
 634:	mov	x0, x3
 638:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
 63c:	cmp	w0, #0x0
 640:	ldp	x2, x3, [sp, #96]
 644:	add	x2, x3, x2
 648:	csel	x3, x2, x3, eq  // eq = none
 64c:	mov	x0, x20
 650:	mov	x2, x3
 654:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 658:	add	x1, x1, #0x0
 65c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 660:	ldr	x0, [x21, #48]
 664:	cbnz	x0, 480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 668:	ldr	x2, [x21, #40]
 66c:	cmn	x2, #0x1
 670:	b.eq	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>  // b.none
 674:	mov	x0, x20
 678:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 67c:	add	x1, x1, #0x0
 680:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 684:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 688:	ldr	x2, [x21]
 68c:	add	x19, x19, #0x2
 690:	mov	x1, x24
 694:	mov	x0, x20
 698:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 69c:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 6a0:	ldr	w2, [x21, #60]
 6a4:	add	x19, x19, #0x2
 6a8:	mov	x1, x25
 6ac:	mov	x0, x20
 6b0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 6b4:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 6b8:	ldr	x2, [x21]
 6bc:	add	x19, x19, #0x2
 6c0:	tbnz	x2, #60, 480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 6c4:	ldr	x0, [x21, #8]
 6c8:	cbz	x0, 738 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3a0>
 6cc:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 6d0:	mov	x1, x0
 6d4:	ldr	w3, [x21, #24]
 6d8:	mov	x0, x20
 6dc:	ldr	x2, [x21, #16]
 6e0:	adrp	x4, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 6e4:	add	x4, x4, #0x0
 6e8:	bl	248 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_>
 6ec:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 6f0:	ldr	w2, [x21, #56]
 6f4:	add	x19, x19, #0x2
 6f8:	mov	x1, x25
 6fc:	mov	x0, x20
 700:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 704:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 708:	adrp	x19, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 70c:	mov	w2, #0x20                  	// #32
 710:	add	x19, x19, #0x0
 714:	b	3e8 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x50>
 718:	ldr	x1, [x21, #8]
 71c:	cbz	x1, 74c <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0x3b4>
 720:	ldr	w3, [x21, #24]
 724:	mov	x4, x23
 728:	ldr	x2, [x21, #16]
 72c:	mov	x0, x20
 730:	bl	248 <_ZN11__sanitizer20RenderModuleLocationEPNS_20InternalScopedStringEPKcmNS_10ModuleArchES3_>
 734:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 738:	mov	x0, x20
 73c:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 740:	add	x1, x1, #0x0
 744:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 748:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 74c:	mov	x0, x20
 750:	adrp	x1, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 754:	add	x1, x1, #0x0
 758:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
 75c:	b	480 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_+0xe8>
 760:	mov	w1, w2
 764:	adrp	x0, 0 <_ZN11__sanitizer10RenderDataEPNS_20InternalScopedStringEPKcPKNS_8DataInfoES3_>
 768:	add	x0, x0, #0x0
 76c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 770:	bl	0 <_ZN11__sanitizer3DieEv>

sanitizer_stacktrace_sparc.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer11AddressInfoC1Ev>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	mov	x19, x0
   8:	mov	x2, #0x40                  	// #64
   c:	mov	w1, #0x0                   	// #0
  10:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  14:	mov	x0, #0xffffffffffffffff    	// #-1
  18:	str	x0, [x19, #40]
  1c:	ldp	x19, x30, [sp], #16
  20:	ret
  24:	nop

0000000000000028 <_ZN11__sanitizer11AddressInfo5ClearEv>:
  28:	stp	x19, x30, [sp, #-16]!
  2c:	mov	x19, x0
  30:	mov	x1, #0x0                   	// #0
  34:	ldr	x0, [x0, #8]
  38:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  3c:	ldr	x0, [x19, #32]
  40:	mov	x1, #0x0                   	// #0
  44:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  48:	ldr	x0, [x19, #48]
  4c:	mov	x1, #0x0                   	// #0
  50:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  54:	mov	x0, x19
  58:	mov	x2, #0x40                  	// #64
  5c:	mov	w1, #0x0                   	// #0
  60:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  64:	mov	x0, #0xffffffffffffffff    	// #-1
  68:	str	x0, [x19, #40]
  6c:	ldp	x19, x30, [sp], #16
  70:	ret
  74:	nop

0000000000000078 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>:
  78:	stp	x19, x20, [sp, #-32]!
  7c:	mov	x19, x0
  80:	mov	w20, w3
  84:	mov	x0, x1
  88:	stp	x21, x30, [sp, #16]
  8c:	mov	x21, x2
  90:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
  94:	stp	x0, x21, [x19, #8]
  98:	str	w20, [x19, #24]
  9c:	ldp	x21, x30, [sp, #16]
  a0:	ldp	x19, x20, [sp], #32
  a4:	ret

00000000000000a8 <_ZN11__sanitizer15SymbolizedStackC1Ev>:
  a8:	stp	x19, x30, [sp, #-16]!
  ac:	mov	x19, x0
  b0:	mov	x2, #0x40                  	// #64
  b4:	mov	w1, #0x0                   	// #0
  b8:	str	xzr, [x19], #8
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
  c4:	mov	x0, #0xffffffffffffffff    	// #-1
  c8:	str	x0, [x19, #40]
  cc:	ldp	x19, x30, [sp], #16
  d0:	ret
  d4:	nop

00000000000000d8 <_ZN11__sanitizer15SymbolizedStack3NewEm>:
  d8:	stp	x19, x20, [sp, #-32]!
  dc:	mov	x2, #0x0                   	// #0
  e0:	mov	x1, #0x0                   	// #0
  e4:	stp	x21, x30, [sp, #16]
  e8:	mov	x21, x0
  ec:	mov	x0, #0x48                  	// #72
  f0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  f4:	mov	x20, x0
  f8:	mov	x19, x0
  fc:	mov	x2, #0x40                  	// #64
 100:	mov	w1, #0x0                   	// #0
 104:	str	xzr, [x20], #8
 108:	mov	x0, x20
 10c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 110:	mov	x0, #0xffffffffffffffff    	// #-1
 114:	str	x0, [x20, #40]
 118:	str	x21, [x19, #8]
 11c:	mov	x0, x19
 120:	ldp	x21, x30, [sp, #16]
 124:	ldp	x19, x20, [sp], #32
 128:	ret
 12c:	nop

0000000000000130 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>:
 130:	stp	x19, x20, [sp, #-32]!
 134:	mov	x19, x0
 138:	add	x20, x0, #0x8
 13c:	ldr	x0, [x0, #16]
 140:	mov	x1, #0x0                   	// #0
 144:	str	x30, [sp, #16]
 148:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 14c:	ldr	x0, [x19, #40]
 150:	mov	x1, #0x0                   	// #0
 154:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 158:	ldr	x0, [x19, #56]
 15c:	mov	x1, #0x0                   	// #0
 160:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 164:	mov	w1, #0x0                   	// #0
 168:	mov	x0, x20
 16c:	mov	x2, #0x40                  	// #64
 170:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 174:	ldr	x0, [x19]
 178:	mov	x1, #0xffffffffffffffff    	// #-1
 17c:	str	x1, [x19, #48]
 180:	cbz	x0, 188 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv+0x58>
 184:	bl	130 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
 188:	mov	x0, x19
 18c:	mov	x1, #0x0                   	// #0
 190:	ldr	x30, [sp, #16]
 194:	ldp	x19, x20, [sp], #32
 198:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 19c:	nop

00000000000001a0 <_ZN11__sanitizer8DataInfoC1Ev>:
 1a0:	mov	x2, #0x40                  	// #64
 1a4:	mov	w1, #0x0                   	// #0
 1a8:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>
 1ac:	nop

00000000000001b0 <_ZN11__sanitizer8DataInfo5ClearEv>:
 1b0:	stp	x19, x30, [sp, #-16]!
 1b4:	mov	x19, x0
 1b8:	mov	x1, #0x0                   	// #0
 1bc:	ldr	x0, [x0]
 1c0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1c4:	ldr	x0, [x19, #24]
 1c8:	mov	x1, #0x0                   	// #0
 1cc:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1d0:	ldr	x0, [x19, #40]
 1d4:	mov	x1, #0x0                   	// #0
 1d8:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 1dc:	mov	x0, x19
 1e0:	mov	x2, #0x40                  	// #64
 1e4:	ldp	x19, x30, [sp], #16
 1e8:	mov	w1, #0x0                   	// #0
 1ec:	b	0 <_ZN11__sanitizer15internal_memsetEPvim>

00000000000001f0 <_ZN11__sanitizer9FrameInfo5ClearEv>:
 1f0:	stp	x19, x20, [sp, #-32]!
 1f4:	mov	x1, #0x0                   	// #0
 1f8:	stp	x21, x30, [sp, #16]
 1fc:	mov	x21, x0
 200:	ldr	x0, [x0]
 204:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 208:	ldr	x0, [x21, #40]
 20c:	ldr	x19, [x21, #24]
 210:	lsl	x20, x0, #3
 214:	sub	x20, x20, x0
 218:	add	x20, x19, x20, lsl #3
 21c:	cmp	x20, x19
 220:	b.eq	258 <_ZN11__sanitizer9FrameInfo5ClearEv+0x68>  // b.none
 224:	nop
 228:	ldr	x0, [x19]
 22c:	mov	x1, #0x0                   	// #0
 230:	add	x19, x19, #0x38
 234:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 238:	ldur	x0, [x19, #-48]
 23c:	mov	x1, #0x0                   	// #0
 240:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 244:	ldur	x0, [x19, #-40]
 248:	mov	x1, #0x0                   	// #0
 24c:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
 250:	cmp	x20, x19
 254:	b.ne	228 <_ZN11__sanitizer9FrameInfo5ClearEv+0x38>  // b.any
 258:	str	xzr, [x21, #40]
 25c:	ldp	x21, x30, [sp, #16]
 260:	ldp	x19, x20, [sp], #32
 264:	ret

0000000000000268 <_ZN11__sanitizer10Symbolizer20InvalidateModuleListEv>:
 268:	strb	wzr, [x0, #104]
 26c:	ret

0000000000000270 <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_>:
 270:	ldr	x3, [x0, #224]
 274:	cbz	x3, 29c <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_+0x2c>
 278:	str	x30, [sp, #-16]!
 27c:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 280:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 284:	add	x2, x2, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	x4, #0x0                   	// #0
 290:	mov	x3, #0x0                   	// #0
 294:	mov	w1, #0x59                  	// #89
 298:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 29c:	ldr	x3, [x0, #232]
 2a0:	cbnz	x3, 278 <_ZN11__sanitizer10Symbolizer8AddHooksEPFvvES2_+0x8>
 2a4:	stp	x1, x2, [x0, #224]
 2a8:	ret
 2ac:	nop

00000000000002b0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc>:
 2b0:	stp	x19, x20, [sp, #-48]!
 2b4:	mov	x20, x0
 2b8:	ldr	x0, [x0, #32]
 2bc:	stp	x21, x22, [sp, #16]
 2c0:	mov	x21, x1
 2c4:	str	x30, [sp, #32]
 2c8:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 2cc:	ldr	x0, [x20, #24]
 2d0:	cbz	x0, 2e0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x30>
 2d4:	mov	x1, x21
 2d8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 2dc:	cbz	w0, 380 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0xd0>
 2e0:	ldr	x0, [x20, #16]
 2e4:	mov	x19, #0x0                   	// #0
 2e8:	cbnz	x0, 300 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x50>
 2ec:	b	340 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x90>
 2f0:	ldr	x0, [x20, #16]
 2f4:	add	x19, x19, #0x1
 2f8:	cmp	x19, x0
 2fc:	b.cs	340 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x90>  // b.hs, b.nlast
 300:	ldr	x0, [x20]
 304:	mov	x1, x21
 308:	lsl	x22, x19, #3
 30c:	ldr	x0, [x0, x19, lsl #3]
 310:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 314:	cbnz	w0, 2f0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x40>
 318:	ldr	x4, [x20, #16]
 31c:	ldr	x0, [x20]
 320:	cmp	x4, x19
 324:	b.ls	474 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x1c4>  // b.plast
 328:	ldr	x0, [x0, x22]
 32c:	str	x0, [x20, #24]
 330:	ldp	x21, x22, [sp, #16]
 334:	ldr	x30, [sp, #32]
 338:	ldp	x19, x20, [sp], #48
 33c:	ret
 340:	mov	x0, x21
 344:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 348:	ldp	x4, x3, [x20, #8]
 34c:	mov	x19, x20
 350:	str	x0, [x19, #24]!
 354:	lsr	x4, x4, #3
 358:	cmp	x3, x4
 35c:	b.hi	45c <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x1ac>  // b.pmore
 360:	add	x21, x3, #0x1
 364:	b.eq	394 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0xe4>  // b.none
 368:	ldr	x22, [x20]
 36c:	str	x21, [x20, #16]
 370:	mov	x1, x19
 374:	add	x0, x22, x3, lsl #3
 378:	mov	x2, #0x8                   	// #8
 37c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 380:	ldp	x21, x22, [sp, #16]
 384:	ldr	x0, [x20, #24]
 388:	ldr	x30, [sp, #32]
 38c:	ldp	x19, x20, [sp], #48
 390:	ret
 394:	tst	x3, x21
 398:	b.eq	3d4 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x124>  // b.none
 39c:	clz	x2, x21
 3a0:	mov	w1, #0x3f                  	// #63
 3a4:	sub	w1, w1, w2
 3a8:	mov	x2, #0x1                   	// #1
 3ac:	add	w4, w1, #0x1
 3b0:	lsl	x4, x2, x4
 3b4:	cmp	x4, x21
 3b8:	b.ls	440 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x190>  // b.plast
 3bc:	lsl	x1, x2, x1
 3c0:	cmp	x1, x21
 3c4:	b.cs	4c4 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x214>  // b.hs, b.nlast
 3c8:	cmp	x3, x4
 3cc:	b.hi	49c <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x1ec>  // b.pmore
 3d0:	mov	x21, x4
 3d4:	adrp	x22, 0 <_ZN11__sanitizer14PageSizeCachedE>
 3d8:	lsl	x21, x21, #3
 3dc:	ldr	x22, [x22]
 3e0:	ldr	x0, [x22]
 3e4:	cbz	x0, 490 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x1e0>
 3e8:	sub	x1, x0, #0x1
 3ec:	tst	x0, x1
 3f0:	b.ne	4b4 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x204>  // b.any
 3f4:	add	x21, x21, x1
 3f8:	neg	x0, x0
 3fc:	and	x21, x21, x0
 400:	mov	w2, #0x0                   	// #0
 404:	mov	x0, x21
 408:	adrp	x1, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 40c:	add	x1, x1, #0x0
 410:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 414:	ldr	x1, [x20]
 418:	mov	x22, x0
 41c:	ldr	x2, [x20, #16]
 420:	lsl	x2, x2, #3
 424:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 428:	ldp	x0, x1, [x20]
 42c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 430:	stp	x22, x21, [x20]
 434:	ldr	x3, [x20, #16]
 438:	add	x21, x3, #0x1
 43c:	b	36c <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0xbc>
 440:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 444:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 448:	mov	x3, x21
 44c:	add	x2, x2, #0x0
 450:	add	x0, x0, #0x0
 454:	mov	w1, #0x18a                 	// #394
 458:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 45c:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 460:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 464:	add	x2, x2, #0x0
 468:	add	x0, x0, #0x0
 46c:	mov	w1, #0x1cd                 	// #461
 470:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 474:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 478:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 47c:	mov	x3, x19
 480:	add	x2, x2, #0x0
 484:	add	x0, x0, #0x0
 488:	mov	w1, #0x1c5                 	// #453
 48c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 490:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 494:	str	x0, [x22]
 498:	b	3e8 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc+0x138>
 49c:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 4a0:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 4a4:	add	x2, x2, #0x0
 4a8:	add	x0, x0, #0x0
 4ac:	mov	w1, #0x20c                 	// #524
 4b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4b4:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 4b8:	add	x0, x0, #0x0
 4bc:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 4c0:	bl	0 <_ZN11__sanitizer3DieEv>
 4c4:	mov	x4, x1
 4c8:	adrp	x2, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 4cc:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 4d0:	mov	x3, x21
 4d4:	add	x2, x2, #0x0
 4d8:	add	x0, x0, #0x0
 4dc:	mov	w1, #0x18b                 	// #395
 4e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4e4:	nop

00000000000004e8 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE>:
 4e8:	stp	x19, x20, [sp, #-48]!
 4ec:	mov	x19, x0
 4f0:	mov	x20, x1
 4f4:	stp	x21, x22, [sp, #16]
 4f8:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 4fc:	ldr	x21, [x21]
 500:	stp	x23, x30, [sp, #32]
 504:	add	x23, x0, #0x70
 508:	str	xzr, [x0]
 50c:	stp	xzr, xzr, [x0, #8]
 510:	ldr	x0, [x21]
 514:	stp	xzr, x23, [x19, #24]
 518:	cbz	x0, 5a4 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE+0xbc>
 51c:	sub	x1, x0, #0x1
 520:	tst	x1, x0
 524:	b.ne	5b0 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE+0xc8>  // b.any
 528:	mov	x1, #0x1f3f                	// #7999
 52c:	add	x21, x0, x1
 530:	neg	x0, x0
 534:	mov	w2, #0x0                   	// #0
 538:	and	x21, x21, x0
 53c:	adrp	x1, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 540:	mov	x0, x21
 544:	add	x1, x1, #0x0
 548:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 54c:	mov	x22, x0
 550:	ldr	x1, [x19]
 554:	ldr	x2, [x19, #16]
 558:	lsl	x2, x2, #3
 55c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 560:	ldp	x0, x1, [x19]
 564:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 568:	stp	x22, x21, [x19]
 56c:	mov	x0, x23
 570:	strb	wzr, [x19, #64]
 574:	strb	wzr, [x19, #96]
 578:	strb	wzr, [x19, #104]
 57c:	bl	0 <_ZN11__sanitizer13BlockingMutexC1Ev>
 580:	stp	xzr, xzr, [x19, #224]
 584:	ldp	x0, x1, [x20]
 588:	stp	x0, x1, [x19, #200]
 58c:	ldr	x0, [x20, #16]
 590:	ldp	x21, x22, [sp, #16]
 594:	ldp	x23, x30, [sp, #32]
 598:	str	x0, [x19, #216]
 59c:	ldp	x19, x20, [sp], #48
 5a0:	ret
 5a4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 5a8:	str	x0, [x21]
 5ac:	b	51c <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE+0x34>
 5b0:	adrp	x0, 0 <_ZN11__sanitizer11AddressInfoC1Ev>
 5b4:	add	x0, x0, #0x0
 5b8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 5bc:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000005c0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>:
 5c0:	str	x1, [x0]
 5c4:	ldr	x0, [x1, #224]
 5c8:	cbz	x0, 5d4 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_+0x14>
 5cc:	mov	x16, x0
 5d0:	br	x16
 5d4:	ret

00000000000005d8 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>:
 5d8:	ldr	x0, [x0]
 5dc:	ldr	x0, [x0, #232]
 5e0:	cbz	x0, 5ec <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev+0x14>
 5e4:	mov	x16, x0
 5e8:	br	x16
 5ec:	ret

sanitizer_symbolizer_libbacktrace.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer22LibbacktraceSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

0000000000000008 <_ZN11__sanitizer22LibbacktraceSymbolizer8DemangleEPKc>:
   8:	mov	x0, #0x0                   	// #0
   c:	ret

0000000000000010 <_ZN11__sanitizer22LibbacktraceSymbolizer3getEPNS_17LowLevelAllocatorE>:
  10:	mov	x0, #0x0                   	// #0
  14:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

sanitizer_symbolizer_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>:
       0:	stp	x19, x20, [sp, #-96]!
       4:	mov	x19, #0x0                   	// #0
       8:	stp	x21, x22, [sp, #16]
       c:	mov	x22, x0
      10:	mov	x21, x1
      14:	stp	x23, x24, [sp, #32]
      18:	adrp	x24, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
      1c:	mov	x23, x2
      20:	add	x24, x24, #0x0
      24:	stp	x25, x26, [sp, #48]
      28:	sub	x26, x2, #0x1
      2c:	add	x25, sp, #0x58
      30:	str	x30, [sp, #64]
      34:	b	58 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x58>
      38:	cmp	x19, #0x1
      3c:	b.ls	4c <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x4c>  // b.plast
      40:	ldurb	w0, [x1, #-1]
      44:	cmp	w0, #0xa
      48:	b.eq	d8 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0xd8>  // b.none
      4c:	add	x0, x19, #0x1
      50:	cmp	x23, x0
      54:	b.eq	120 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x120>  // b.none
      58:	ldr	w0, [x22, #16]
      5c:	mov	x3, x25
      60:	sub	x2, x26, x19
      64:	add	x1, x21, x19
      68:	mov	x4, #0x0                   	// #0
      6c:	str	xzr, [sp, #88]
      70:	bl	0 <_ZN11__sanitizer12ReadFromFileEiPvmPmPi>
      74:	ands	w20, w0, #0xff
      78:	b.eq	f0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0xf0>  // b.none
      7c:	ldr	x3, [sp, #88]
      80:	add	x19, x19, x3
      84:	add	x1, x21, x19
      88:	cbz	x3, f0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0xf0>
      8c:	ldr	x0, [x22]
      90:	ldr	x3, [x0, #16]
      94:	cmp	x3, x24
      98:	b.eq	38 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x38>  // b.none
      9c:	mov	x2, x19
      a0:	mov	x1, x21
      a4:	mov	x0, x22
      a8:	blr	x3
      ac:	tst	w0, #0xff
      b0:	b.eq	4c <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x4c>  // b.none
      b4:	add	x21, x21, x19
      b8:	strb	wzr, [x21]
      bc:	mov	w0, w20
      c0:	ldp	x21, x22, [sp, #16]
      c4:	ldp	x23, x24, [sp, #32]
      c8:	ldp	x25, x26, [sp, #48]
      cc:	ldr	x30, [sp, #64]
      d0:	ldp	x19, x20, [sp], #96
      d4:	ret
      d8:	ldurb	w0, [x1, #-2]
      dc:	cmp	w0, #0xa
      e0:	b.ne	4c <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0x4c>  // b.any
      e4:	mov	x21, x1
      e8:	strb	wzr, [x21]
      ec:	b	bc <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0xbc>
      f0:	ldr	w1, [x22, #16]
      f4:	mov	w20, #0x0                   	// #0
      f8:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
      fc:	add	x0, x0, #0x0
     100:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     104:	mov	w0, w20
     108:	ldp	x21, x22, [sp, #16]
     10c:	ldp	x23, x24, [sp, #32]
     110:	ldp	x25, x26, [sp, #48]
     114:	ldr	x30, [sp, #64]
     118:	ldp	x19, x20, [sp], #96
     11c:	ret
     120:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     124:	add	x0, x0, #0x0
     128:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     12c:	strb	wzr, [x21]
     130:	b	bc <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0+0xbc>
     134:	nop

0000000000000138 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>:
     138:	cbz	x2, 140 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm+0x8>
     13c:	b	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     140:	mov	w0, #0x1                   	// #1
     144:	ret

0000000000000148 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>:
     148:	stp	x19, x20, [sp, #-48]!
     14c:	stp	x21, x22, [sp, #16]
     150:	mov	x21, x0
     154:	mov	x0, x1
     158:	stp	x23, x30, [sp, #32]
     15c:	mov	x23, x1
     160:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     164:	add	x1, x1, #0x0
     168:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     16c:	mov	x2, #0x0                   	// #0
     170:	mov	x19, x0
     174:	mov	x1, #0x0                   	// #0
     178:	add	x0, x0, #0x1
     17c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     180:	mov	x20, x0
     184:	mov	x2, x19
     188:	mov	x1, x23
     18c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     190:	add	x22, x23, x19
     194:	strb	wzr, [x20, x19]
     198:	ldrb	w0, [x23, x19]
     19c:	cmp	w0, #0x0
     1a0:	cinc	x22, x22, ne  // ne = any
     1a4:	cbz	x20, 288 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x140>
     1a8:	mov	x0, x20
     1ac:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     1b0:	cbz	x0, 260 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x118>
     1b4:	sub	x19, x0, #0x1
     1b8:	mov	w23, #0x2                   	// #2
     1bc:	add	x19, x20, x19
     1c0:	ldrb	w1, [x19]
     1c4:	cmp	x19, x20
     1c8:	b.hi	1dc <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x94>  // b.pmore
     1cc:	b	1ec <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xa4>
     1d0:	ldrb	w1, [x19, #-1]!
     1d4:	cmp	x19, x20
     1d8:	b.eq	1ec <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xa4>  // b.none
     1dc:	ldrb	w1, [x19]
     1e0:	sub	w2, w1, #0x30
     1e4:	cmp	w2, #0x9
     1e8:	b.ls	1d0 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x88>  // b.plast
     1ec:	cmp	w1, #0x3a
     1f0:	b.ne	224 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xdc>  // b.any
     1f4:	ldrb	w0, [x19, #1]
     1f8:	sub	w0, w0, #0x30
     1fc:	cmp	w0, #0x9
     200:	b.hi	224 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0xdc>  // b.pmore
     204:	ldr	w1, [x21, #56]
     208:	add	x0, x19, #0x1
     20c:	str	w1, [x21, #60]
     210:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     214:	str	w0, [x21, #56]
     218:	strb	wzr, [x19], #-1
     21c:	cmp	w23, #0x1
     220:	b.ne	280 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x138>  // b.any
     224:	mov	x0, x20
     228:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     22c:	add	x1, x1, #0x0
     230:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     234:	mov	x2, #0x0                   	// #0
     238:	mov	x19, x0
     23c:	mov	x1, #0x0                   	// #0
     240:	add	x0, x0, #0x1
     244:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     248:	str	x0, [x21, #48]
     24c:	mov	x2, x19
     250:	mov	x1, x20
     254:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     258:	ldr	x0, [x21, #48]
     25c:	strb	wzr, [x0, x19]
     260:	mov	x0, x20
     264:	mov	x1, #0x0                   	// #0
     268:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     26c:	mov	x0, x22
     270:	ldp	x21, x22, [sp, #16]
     274:	ldp	x23, x30, [sp, #32]
     278:	ldp	x19, x20, [sp], #48
     27c:	ret
     280:	mov	w23, #0x1                   	// #1
     284:	b	1c0 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc+0x78>
     288:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     28c:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     290:	add	x2, x2, #0x0
     294:	add	x0, x0, #0x0
     298:	mov	x4, #0x0                   	// #0
     29c:	mov	x3, #0x0                   	// #0
     2a0:	mov	w1, #0x129                 	// #297
     2a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002a8 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>:
     2a8:	stp	x19, x20, [sp, #-32]!
     2ac:	adrp	x19, 0 <_ZN11__sanitizer10Symbolizer8init_mu_E>
     2b0:	mov	w2, #0x1                   	// #1
     2b4:	ldr	x0, [x19]
     2b8:	str	x30, [sp, #16]
     2bc:	ldxrb	w1, [x0]
     2c0:	stxrb	w3, w2, [x0]
     2c4:	cbnz	w3, 2bc <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x14>
     2c8:	dmb	ish
     2cc:	tst	w1, #0xff
     2d0:	b.eq	2d8 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x30>  // b.none
     2d4:	bl	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     2d8:	adrp	x20, 0 <_ZN11__sanitizer10Symbolizer11symbolizer_E>
     2dc:	ldr	x20, [x20]
     2e0:	ldr	x0, [x20]
     2e4:	cbz	x0, 300 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x58>
     2e8:	dmb	ish
     2ec:	ldr	x19, [x19]
     2f0:	strb	wzr, [x19]
     2f4:	ldr	x30, [sp, #16]
     2f8:	ldp	x19, x20, [sp], #32
     2fc:	ret
     300:	bl	0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv>
     304:	str	x0, [x20]
     308:	cbnz	x0, 2e8 <_ZN11__sanitizer10Symbolizer9GetOrInitEv+0x40>
     30c:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     310:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     314:	add	x2, x2, #0x0
     318:	add	x0, x0, #0x0
     31c:	mov	x4, #0x0                   	// #0
     320:	mov	x3, #0x0                   	// #0
     324:	mov	w1, #0x18                  	// #24
     328:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     32c:	nop

0000000000000330 <_ZN11__sanitizer12ExtractTokenEPKcS1_PPc>:
     330:	stp	x19, x20, [sp, #-32]!
     334:	mov	x20, x0
     338:	stp	x21, x30, [sp, #16]
     33c:	mov	x21, x2
     340:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     344:	mov	x2, #0x0                   	// #0
     348:	mov	x19, x0
     34c:	mov	x1, #0x0                   	// #0
     350:	add	x0, x0, #0x1
     354:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     358:	str	x0, [x21]
     35c:	mov	x2, x19
     360:	mov	x1, x20
     364:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     368:	ldr	x1, [x21]
     36c:	add	x0, x20, x19
     370:	strb	wzr, [x1, x19]
     374:	ldrb	w1, [x20, x19]
     378:	ldp	x21, x30, [sp, #16]
     37c:	cmp	w1, #0x0
     380:	cinc	x0, x0, ne  // ne = any
     384:	ldp	x19, x20, [sp], #32
     388:	ret
     38c:	nop

0000000000000390 <_ZN11__sanitizer10ExtractIntEPKcS1_Pi>:
     390:	stp	x19, x20, [sp, #-48]!
     394:	stp	x21, x22, [sp, #16]
     398:	mov	x21, x0
     39c:	stp	x23, x30, [sp, #32]
     3a0:	mov	x23, x2
     3a4:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     3a8:	mov	x2, #0x0                   	// #0
     3ac:	mov	x19, x0
     3b0:	mov	x1, #0x0                   	// #0
     3b4:	add	x0, x0, #0x1
     3b8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     3bc:	mov	x20, x0
     3c0:	mov	x2, x19
     3c4:	mov	x1, x21
     3c8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     3cc:	add	x22, x21, x19
     3d0:	strb	wzr, [x20, x19]
     3d4:	ldrb	w0, [x21, x19]
     3d8:	cmp	w0, #0x0
     3dc:	cinc	x22, x22, ne  // ne = any
     3e0:	cbz	x20, 3f0 <_ZN11__sanitizer10ExtractIntEPKcS1_Pi+0x60>
     3e4:	mov	x0, x20
     3e8:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     3ec:	str	w0, [x23]
     3f0:	mov	x0, x20
     3f4:	mov	x1, #0x0                   	// #0
     3f8:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     3fc:	mov	x0, x22
     400:	ldp	x21, x22, [sp, #16]
     404:	ldp	x23, x30, [sp, #32]
     408:	ldp	x19, x20, [sp], #48
     40c:	ret

0000000000000410 <_ZN11__sanitizer11ExtractUptrEPKcS1_Pm>:
     410:	stp	x19, x20, [sp, #-48]!
     414:	stp	x21, x22, [sp, #16]
     418:	mov	x21, x0
     41c:	stp	x23, x30, [sp, #32]
     420:	mov	x23, x2
     424:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     428:	mov	x2, #0x0                   	// #0
     42c:	mov	x19, x0
     430:	mov	x1, #0x0                   	// #0
     434:	add	x0, x0, #0x1
     438:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     43c:	mov	x20, x0
     440:	mov	x2, x19
     444:	mov	x1, x21
     448:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     44c:	add	x22, x21, x19
     450:	strb	wzr, [x20, x19]
     454:	ldrb	w0, [x21, x19]
     458:	cmp	w0, #0x0
     45c:	cinc	x22, x22, ne  // ne = any
     460:	cbz	x20, 470 <_ZN11__sanitizer11ExtractUptrEPKcS1_Pm+0x60>
     464:	mov	x0, x20
     468:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     46c:	str	x0, [x23]
     470:	mov	x0, x20
     474:	mov	x1, #0x0                   	// #0
     478:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     47c:	mov	x0, x22
     480:	ldp	x21, x22, [sp, #16]
     484:	ldp	x23, x30, [sp, #32]
     488:	ldp	x19, x20, [sp], #48
     48c:	ret

0000000000000490 <_ZN11__sanitizer11ExtractSptrEPKcS1_Pl>:
     490:	stp	x19, x20, [sp, #-48]!
     494:	stp	x21, x22, [sp, #16]
     498:	mov	x21, x0
     49c:	stp	x23, x30, [sp, #32]
     4a0:	mov	x23, x2
     4a4:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     4a8:	mov	x2, #0x0                   	// #0
     4ac:	mov	x19, x0
     4b0:	mov	x1, #0x0                   	// #0
     4b4:	add	x0, x0, #0x1
     4b8:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     4bc:	mov	x20, x0
     4c0:	mov	x2, x19
     4c4:	mov	x1, x21
     4c8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     4cc:	add	x22, x21, x19
     4d0:	strb	wzr, [x20, x19]
     4d4:	ldrb	w0, [x21, x19]
     4d8:	cmp	w0, #0x0
     4dc:	cinc	x22, x22, ne  // ne = any
     4e0:	cbz	x20, 4f0 <_ZN11__sanitizer11ExtractSptrEPKcS1_Pl+0x60>
     4e4:	mov	x0, x20
     4e8:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     4ec:	str	x0, [x23]
     4f0:	mov	x0, x20
     4f4:	mov	x1, #0x0                   	// #0
     4f8:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     4fc:	mov	x0, x22
     500:	ldp	x21, x22, [sp, #16]
     504:	ldp	x23, x30, [sp, #32]
     508:	ldp	x19, x20, [sp], #48
     50c:	ret

0000000000000510 <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc>:
     510:	stp	x19, x20, [sp, #-48]!
     514:	mov	x20, x0
     518:	stp	x21, x22, [sp, #16]
     51c:	mov	x21, x2
     520:	stp	x23, x30, [sp, #32]
     524:	mov	x23, x1
     528:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
     52c:	cbz	x0, 59c <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x8c>
     530:	mov	x19, x0
     534:	sub	x22, x0, x20
     538:	mov	x2, #0x0                   	// #0
     53c:	mov	x1, #0x0                   	// #0
     540:	add	x0, x22, #0x1
     544:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     548:	str	x0, [x21]
     54c:	mov	x1, x20
     550:	mov	x2, x22
     554:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     558:	ldr	x0, [x21]
     55c:	strb	wzr, [x0, x22]
     560:	ldrb	w0, [x19]
     564:	cbnz	w0, 57c <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x6c>
     568:	mov	x0, x19
     56c:	ldp	x21, x22, [sp, #16]
     570:	ldp	x23, x30, [sp, #32]
     574:	ldp	x19, x20, [sp], #48
     578:	ret
     57c:	mov	x0, x23
     580:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     584:	add	x19, x19, x0
     588:	mov	x0, x19
     58c:	ldp	x21, x22, [sp, #16]
     590:	ldp	x23, x30, [sp, #32]
     594:	ldp	x19, x20, [sp], #48
     598:	ret
     59c:	mov	x0, x20
     5a0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     5a4:	mov	x22, x0
     5a8:	add	x19, x20, x0
     5ac:	b	538 <_ZN11__sanitizer25ExtractTokenUpToDelimiterEPKcS1_PPc+0x28>

00000000000005b0 <_ZN11__sanitizer10Symbolizer5FlushEv>:
     5b0:	stp	x19, x20, [sp, #-64]!
     5b4:	stp	x21, x22, [sp, #16]
     5b8:	mov	x21, x0
     5bc:	stp	x23, x30, [sp, #32]
     5c0:	add	x23, x0, #0x70
     5c4:	mov	x0, x23
     5c8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     5cc:	ldr	x19, [x21, #208]
     5d0:	cbz	x19, 60c <_ZN11__sanitizer10Symbolizer5FlushEv+0x5c>
     5d4:	adrp	x22, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     5d8:	add	x20, sp, #0x38
     5dc:	add	x22, x22, #0x0
     5e0:	mov	x1, x21
     5e4:	mov	x0, x20
     5e8:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     5ec:	ldr	x1, [x19]
     5f0:	mov	x0, x20
     5f4:	ldr	x1, [x1, #24]
     5f8:	cmp	x1, x22
     5fc:	b.ne	624 <_ZN11__sanitizer10Symbolizer5FlushEv+0x74>  // b.any
     600:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     604:	ldr	x19, [x19, #8]
     608:	cbnz	x19, 5e0 <_ZN11__sanitizer10Symbolizer5FlushEv+0x30>
     60c:	mov	x0, x23
     610:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     614:	ldp	x21, x22, [sp, #16]
     618:	ldp	x23, x30, [sp, #32]
     61c:	ldp	x19, x20, [sp], #64
     620:	ret
     624:	mov	x0, x19
     628:	blr	x1
     62c:	mov	x0, x20
     630:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     634:	ldr	x19, [x19, #8]
     638:	cbnz	x19, 5e0 <_ZN11__sanitizer10Symbolizer5FlushEv+0x30>
     63c:	mov	x0, x23
     640:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     644:	ldp	x21, x22, [sp, #16]
     648:	ldp	x23, x30, [sp, #32]
     64c:	ldp	x19, x20, [sp], #64
     650:	ret
     654:	nop

0000000000000658 <_ZN11__sanitizer10Symbolizer8DemangleEPKc>:
     658:	stp	x19, x20, [sp, #-80]!
     65c:	stp	x21, x22, [sp, #16]
     660:	mov	x21, x0
     664:	stp	x25, x30, [sp, #48]
     668:	add	x25, x0, #0x70
     66c:	mov	x0, x25
     670:	stp	x23, x24, [sp, #32]
     674:	mov	x24, x1
     678:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     67c:	ldr	x19, [x21, #208]
     680:	cbz	x19, 6fc <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0xa4>
     684:	adrp	x22, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     688:	add	x20, sp, #0x48
     68c:	add	x22, x22, #0x0
     690:	b	6a4 <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x4c>
     694:	mov	x0, x20
     698:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     69c:	ldr	x19, [x19, #8]
     6a0:	cbz	x19, 6fc <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0xa4>
     6a4:	mov	x1, x21
     6a8:	mov	x0, x20
     6ac:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     6b0:	ldr	x2, [x19]
     6b4:	ldr	x2, [x2, #32]
     6b8:	cmp	x2, x22
     6bc:	b.eq	694 <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x3c>  // b.none
     6c0:	mov	x1, x24
     6c4:	mov	x0, x19
     6c8:	blr	x2
     6cc:	mov	x23, x0
     6d0:	cbz	x0, 694 <_ZN11__sanitizer10Symbolizer8DemangleEPKc+0x3c>
     6d4:	mov	x0, x20
     6d8:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     6dc:	mov	x0, x25
     6e0:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     6e4:	mov	x0, x23
     6e8:	ldp	x21, x22, [sp, #16]
     6ec:	ldp	x23, x24, [sp, #32]
     6f0:	ldp	x25, x30, [sp, #48]
     6f4:	ldp	x19, x20, [sp], #80
     6f8:	ret
     6fc:	mov	x1, x24
     700:	mov	x0, x21
     704:	bl	0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc>
     708:	mov	x23, x0
     70c:	mov	x0, x25
     710:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     714:	mov	x0, x23
     718:	ldp	x21, x22, [sp, #16]
     71c:	ldp	x23, x24, [sp, #32]
     720:	ldp	x25, x30, [sp, #48]
     724:	ldp	x19, x20, [sp], #80
     728:	ret
     72c:	nop

0000000000000730 <_ZN11__sanitizer10Symbolizer14RefreshModulesEv>:
     730:	stp	x19, x30, [sp, #-16]!
     734:	mov	x19, x0
     738:	add	x0, x0, #0x28
     73c:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     740:	add	x0, x19, #0x48
     744:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     748:	ldr	x0, [x19, #56]
     74c:	cbz	x0, 760 <_ZN11__sanitizer10Symbolizer14RefreshModulesEv+0x30>
     750:	mov	w0, #0x1                   	// #1
     754:	strb	w0, [x19, #104]
     758:	ldp	x19, x30, [sp], #16
     75c:	ret
     760:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     764:	add	x0, x0, #0x0
     768:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     76c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>:
     770:	stp	x19, x20, [sp, #-48]!
     774:	mov	x19, x0
     778:	mov	x20, x1
     77c:	ldrb	w0, [x0, #104]
     780:	stp	x21, x22, [sp, #16]
     784:	stp	x23, x30, [sp, #32]
     788:	cbz	w0, 818 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xa8>
     78c:	ldr	x0, [x19, #56]
     790:	mov	w23, #0x0                   	// #0
     794:	cbz	x0, 8ac <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x13c>
     798:	mov	x21, #0x0                   	// #0
     79c:	mov	x22, #0x0                   	// #0
     7a0:	b	7b8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x48>
     7a4:	ldr	x0, [x19, #56]
     7a8:	add	x22, x22, #0x1
     7ac:	add	x21, x21, #0x48
     7b0:	cmp	x0, x22
     7b4:	b.ls	7f8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x88>  // b.plast
     7b8:	ldr	x0, [x19, #40]
     7bc:	mov	x1, x20
     7c0:	add	x0, x0, x21
     7c4:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     7c8:	tst	w0, #0xff
     7cc:	b.eq	7a4 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x34>  // b.none
     7d0:	ldr	x4, [x19, #56]
     7d4:	cmp	x4, x22
     7d8:	b.ls	890 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x120>  // b.plast
     7dc:	ldr	x0, [x19, #40]
     7e0:	adds	x0, x0, x21
     7e4:	b.eq	7f8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x88>  // b.none
     7e8:	ldp	x21, x22, [sp, #16]
     7ec:	ldp	x23, x30, [sp, #32]
     7f0:	ldp	x19, x20, [sp], #48
     7f4:	ret
     7f8:	cbz	w23, 8ac <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x13c>
     7fc:	ldr	x0, [x19, #88]
     800:	cbnz	x0, 840 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xd0>
     804:	mov	x0, #0x0                   	// #0
     808:	ldp	x21, x22, [sp, #16]
     80c:	ldp	x23, x30, [sp, #32]
     810:	ldp	x19, x20, [sp], #48
     814:	ret
     818:	add	x0, x19, #0x28
     81c:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     820:	add	x0, x19, #0x48
     824:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     828:	ldr	x0, [x19, #56]
     82c:	cbz	x0, 920 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x1b0>
     830:	mov	w0, #0x1                   	// #1
     834:	mov	w23, #0x1                   	// #1
     838:	strb	w0, [x19, #104]
     83c:	b	798 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x28>
     840:	mov	x21, #0x0                   	// #0
     844:	mov	x22, #0x0                   	// #0
     848:	b	860 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xf0>
     84c:	ldr	x0, [x19, #88]
     850:	add	x22, x22, #0x1
     854:	add	x21, x21, #0x48
     858:	cmp	x0, x22
     85c:	b.ls	804 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x94>  // b.plast
     860:	ldr	x0, [x19, #72]
     864:	mov	x1, x20
     868:	add	x0, x0, x21
     86c:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     870:	tst	w0, #0xff
     874:	b.eq	84c <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0xdc>  // b.none
     878:	ldr	x4, [x19, #88]
     87c:	cmp	x22, x4
     880:	b.cs	890 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x120>  // b.hs, b.nlast
     884:	ldr	x0, [x19, #72]
     888:	add	x0, x0, x21
     88c:	b	7e8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x78>
     890:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     894:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     898:	mov	x3, x22
     89c:	add	x2, x2, #0x0
     8a0:	add	x0, x0, #0x0
     8a4:	mov	w1, #0x308                 	// #776
     8a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     8ac:	add	x0, x19, #0x28
     8b0:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
     8b4:	add	x0, x19, #0x48
     8b8:	bl	0 <_ZN11__sanitizer13ListOfModules12fallbackInitEv>
     8bc:	ldr	x0, [x19, #56]
     8c0:	cbz	x0, 920 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x1b0>
     8c4:	mov	w0, #0x1                   	// #1
     8c8:	mov	x21, #0x0                   	// #0
     8cc:	mov	x22, #0x0                   	// #0
     8d0:	strb	w0, [x19, #104]
     8d4:	b	8ec <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x17c>
     8d8:	ldr	x0, [x19, #56]
     8dc:	add	x22, x22, #0x1
     8e0:	add	x21, x21, #0x48
     8e4:	cmp	x0, x22
     8e8:	b.ls	7fc <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x8c>  // b.plast
     8ec:	ldr	x0, [x19, #40]
     8f0:	mov	x1, x20
     8f4:	add	x0, x0, x21
     8f8:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     8fc:	tst	w0, #0xff
     900:	b.eq	8d8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x168>  // b.none
     904:	ldr	x4, [x19, #56]
     908:	cmp	x22, x4
     90c:	b.cs	890 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x120>  // b.hs, b.nlast
     910:	ldr	x0, [x19, #40]
     914:	adds	x0, x0, x21
     918:	b.ne	7e8 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x78>  // b.any
     91c:	b	7fc <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm+0x8c>
     920:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     924:	add	x0, x0, #0x0
     928:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     92c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000930 <_ZN11__sanitizer10Symbolizer33FindModuleNameAndOffsetForAddressEmPPKcPmPNS_10ModuleArchE>:
     930:	stp	x19, x20, [sp, #-48]!
     934:	mov	x20, x4
     938:	mov	x19, x1
     93c:	stp	x21, x22, [sp, #16]
     940:	mov	x22, x2
     944:	mov	x21, x3
     948:	str	x30, [sp, #32]
     94c:	bl	770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     950:	cbz	x0, 984 <_ZN11__sanitizer10Symbolizer33FindModuleNameAndOffsetForAddressEmPPKcPmPNS_10ModuleArchE+0x54>
     954:	mov	x5, x0
     958:	mov	w0, #0x1                   	// #1
     95c:	ldr	x30, [sp, #32]
     960:	ldp	x2, x1, [x5]
     964:	str	x2, [x22]
     968:	sub	x1, x19, x1
     96c:	str	x1, [x21]
     970:	ldr	w1, [x5, #24]
     974:	str	w1, [x20]
     978:	ldp	x21, x22, [sp, #16]
     97c:	ldp	x19, x20, [sp], #48
     980:	ret
     984:	mov	w0, #0x0                   	// #0
     988:	ldp	x21, x22, [sp, #16]
     98c:	ldr	x30, [sp, #32]
     990:	ldp	x19, x20, [sp], #48
     994:	ret

0000000000000998 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>:
     998:	stp	x19, x20, [sp, #-64]!
     99c:	mov	x20, x0
     9a0:	mov	x19, x1
     9a4:	stp	x21, x22, [sp, #16]
     9a8:	add	x22, x0, #0x70
     9ac:	mov	x0, x22
     9b0:	mov	x21, x2
     9b4:	stp	x23, x24, [sp, #32]
     9b8:	mov	x23, x3
     9bc:	str	x30, [sp, #48]
     9c0:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     9c4:	mov	x1, x19
     9c8:	mov	x0, x20
     9cc:	bl	770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     9d0:	cbz	x0, a14 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm+0x7c>
     9d4:	ldp	x1, x2, [x0]
     9d8:	mov	w24, #0x1                   	// #1
     9dc:	sub	x19, x19, x2
     9e0:	str	x19, [x23]
     9e4:	cbz	x21, 9f4 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm+0x5c>
     9e8:	mov	x0, x20
     9ec:	bl	0 <_ZN11__sanitizer10Symbolizer15ModuleNameOwner12GetOwnedCopyEPKc>
     9f0:	str	x0, [x21]
     9f4:	mov	x0, x22
     9f8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     9fc:	mov	w0, w24
     a00:	ldp	x21, x22, [sp, #16]
     a04:	ldp	x23, x24, [sp, #32]
     a08:	ldr	x30, [sp, #48]
     a0c:	ldp	x19, x20, [sp], #64
     a10:	ret
     a14:	mov	x0, x22
     a18:	mov	w24, #0x0                   	// #0
     a1c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     a20:	mov	w0, w24
     a24:	ldp	x21, x22, [sp, #16]
     a28:	ldp	x23, x24, [sp, #32]
     a2c:	ldr	x30, [sp, #48]
     a30:	ldp	x19, x20, [sp], #64
     a34:	ret

0000000000000a38 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE>:
     a38:	stp	x19, x20, [sp, #-80]!
     a3c:	stp	x25, x30, [sp, #48]
     a40:	add	x25, x0, #0x70
     a44:	stp	x21, x22, [sp, #16]
     a48:	mov	x21, x0
     a4c:	mov	x22, x2
     a50:	mov	x0, x25
     a54:	stp	x23, x24, [sp, #32]
     a58:	mov	x24, x1
     a5c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
     a60:	mov	x1, x24
     a64:	mov	x0, x21
     a68:	bl	770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
     a6c:	cbz	x0, b28 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xf0>
     a70:	mov	x1, x0
     a74:	add	x23, sp, #0x48
     a78:	ldp	x0, x2, [x0]
     a7c:	ldr	w1, [x1, #24]
     a80:	str	w1, [x22, #16]
     a84:	sub	x2, x24, x2
     a88:	str	x2, [x22, #8]
     a8c:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
     a90:	ldr	x19, [x21, #208]
     a94:	str	x0, [x22]
     a98:	cbnz	x19, aac <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x74>
     a9c:	b	b04 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xcc>
     aa0:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     aa4:	ldr	x19, [x19, #8]
     aa8:	cbz	x19, b04 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xcc>
     aac:	mov	x1, x21
     ab0:	mov	x0, x23
     ab4:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
     ab8:	ldr	x3, [x19]
     abc:	mov	x2, x22
     ac0:	mov	x1, x24
     ac4:	mov	x0, x19
     ac8:	ldr	x3, [x3, #16]
     acc:	blr	x3
     ad0:	mov	w20, w0
     ad4:	ands	w20, w20, #0xff
     ad8:	mov	x0, x23
     adc:	b.eq	aa0 <_ZN11__sanitizer10Symbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x68>  // b.none
     ae0:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
     ae4:	mov	x0, x25
     ae8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     aec:	mov	w0, w20
     af0:	ldp	x21, x22, [sp, #16]
     af4:	ldp	x23, x24, [sp, #32]
     af8:	ldp	x25, x30, [sp, #48]
     afc:	ldp	x19, x20, [sp], #80
     b00:	ret
     b04:	mov	x0, x25
     b08:	mov	w20, #0x1                   	// #1
     b0c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     b10:	mov	w0, w20
     b14:	ldp	x21, x22, [sp, #16]
     b18:	ldp	x23, x24, [sp, #32]
     b1c:	ldp	x25, x30, [sp, #48]
     b20:	ldp	x19, x20, [sp], #80
     b24:	ret
     b28:	mov	x0, x25
     b2c:	mov	w20, #0x0                   	// #0
     b30:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
     b34:	mov	w0, w20
     b38:	ldp	x21, x22, [sp, #16]
     b3c:	ldp	x23, x24, [sp, #32]
     b40:	ldp	x25, x30, [sp, #48]
     b44:	ldp	x19, x20, [sp], #80
     b48:	ret
     b4c:	nop

0000000000000b50 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE>:
     b50:	stp	x19, x20, [sp, #-32]!
     b54:	mov	x20, x0
     b58:	adrp	x3, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     b5c:	add	x3, x3, #0x0
     b60:	str	x30, [sp, #16]
     b64:	stp	x3, xzr, [x20]
     b68:	mov	x0, x2
     b6c:	mov	x19, x1
     b70:	mov	x1, #0x4028                	// #16424
     b74:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b78:	adrp	x2, 0 <_ZTVN11__sanitizer17SymbolizerProcessE>
     b7c:	add	x1, x0, #0x4, lsl #12
     b80:	mov	x3, #0xffffffffffffffff    	// #-1
     b84:	str	x3, [x0, #16]
     b88:	ldr	x2, [x2]
     b8c:	str	xzr, [x0, #16408]
     b90:	add	x2, x2, #0x10
     b94:	stp	x2, x19, [x0]
     b98:	strh	wzr, [x1, #32]
     b9c:	strb	wzr, [x1, #34]
     ba0:	cbz	x19, bc8 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE+0x78>
     ba4:	ldrb	w1, [x19]
     ba8:	cbz	w1, be8 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE+0x98>
     bac:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     bb0:	add	x1, x1, #0x0
     bb4:	ldr	x30, [sp, #16]
     bb8:	str	x1, [x0]
     bbc:	str	x0, [x20, #16]
     bc0:	ldp	x19, x20, [sp], #32
     bc4:	ret
     bc8:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     bcc:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     bd0:	add	x2, x2, #0x0
     bd4:	add	x0, x0, #0x0
     bd8:	mov	x4, #0x0                   	// #0
     bdc:	mov	x3, #0x0                   	// #0
     be0:	mov	w1, #0x1d0                 	// #464
     be4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     be8:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     bec:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     bf0:	add	x2, x2, #0x0
     bf4:	add	x0, x0, #0x0
     bf8:	mov	x4, #0x0                   	// #0
     bfc:	mov	x3, #0x0                   	// #0
     c00:	mov	w1, #0x1d1                 	// #465
     c04:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000c08 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>:
     c08:	stp	x19, x20, [sp, #-96]!
     c0c:	mov	x20, x0
     c10:	stp	x21, x22, [sp, #16]
     c14:	adrp	x22, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     c18:	add	x22, x22, #0x0
     c1c:	stp	x23, x24, [sp, #32]
     c20:	mov	x23, x1
     c24:	mov	w24, #0x1                   	// #1
     c28:	stp	x25, x26, [sp, #48]
     c2c:	adrp	x25, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     c30:	add	x26, x1, #0x8
     c34:	add	x25, x25, #0x0
     c38:	stp	x27, x28, [sp, #64]
     c3c:	mov	x27, x1
     c40:	str	x30, [sp, #80]
     c44:	nop
     c48:	mov	x1, x25
     c4c:	mov	x0, x20
     c50:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     c54:	mov	x19, x0
     c58:	mov	x2, #0x0                   	// #0
     c5c:	mov	x1, #0x0                   	// #0
     c60:	add	x0, x0, #0x1
     c64:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     c68:	mov	x21, x0
     c6c:	mov	x2, x19
     c70:	mov	x1, x20
     c74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     c78:	add	x28, x20, x19
     c7c:	strb	wzr, [x21, x19]
     c80:	ldrb	w0, [x20, x19]
     c84:	cmp	w0, #0x0
     c88:	cinc	x28, x28, ne  // ne = any
     c8c:	cbz	x21, d3c <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x134>
     c90:	ldrb	w0, [x21]
     c94:	cbz	w0, d5c <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x154>
     c98:	cbz	w24, d0c <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x104>
     c9c:	mov	x20, x26
     ca0:	mov	x19, x26
     ca4:	str	x21, [x19, #32]
     ca8:	mov	x1, x28
     cac:	mov	x0, x20
     cb0:	bl	148 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>
     cb4:	mov	x20, x0
     cb8:	ldr	x0, [x19, #32]
     cbc:	mov	x1, x22
     cc0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     cc4:	cbz	w0, cf8 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0xf0>
     cc8:	ldr	x0, [x19, #48]
     ccc:	mov	x1, x22
     cd0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     cd4:	cbz	w0, ce0 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0xd8>
     cd8:	mov	w24, #0x0                   	// #0
     cdc:	b	c48 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x40>
     ce0:	ldr	x0, [x19, #48]
     ce4:	mov	x1, #0x0                   	// #0
     ce8:	mov	w24, #0x0                   	// #0
     cec:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     cf0:	str	xzr, [x19, #48]
     cf4:	b	c48 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x40>
     cf8:	ldr	x0, [x19, #32]
     cfc:	mov	x1, #0x0                   	// #0
     d00:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     d04:	str	xzr, [x19, #32]
     d08:	b	cc8 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0xc0>
     d0c:	ldr	x0, [x23, #8]
     d10:	bl	0 <_ZN11__sanitizer15SymbolizedStack3NewEm>
     d14:	mov	x24, x0
     d18:	ldp	x1, x2, [x23, #16]
     d1c:	add	x19, x0, #0x8
     d20:	ldr	w3, [x23, #32]
     d24:	mov	x0, x19
     d28:	mov	x20, x19
     d2c:	bl	0 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>
     d30:	str	x24, [x27]
     d34:	mov	x27, x24
     d38:	b	ca4 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE+0x9c>
     d3c:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     d40:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     d44:	add	x2, x2, #0x0
     d48:	add	x0, x0, #0x0
     d4c:	mov	x4, #0x0                   	// #0
     d50:	mov	x3, #0x0                   	// #0
     d54:	mov	w1, #0x148                 	// #328
     d58:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d5c:	mov	x0, x21
     d60:	mov	x1, #0x0                   	// #0
     d64:	ldp	x21, x22, [sp, #16]
     d68:	ldp	x23, x24, [sp, #32]
     d6c:	ldp	x25, x26, [sp, #48]
     d70:	ldp	x27, x28, [sp, #64]
     d74:	ldr	x30, [sp, #80]
     d78:	ldp	x19, x20, [sp], #96
     d7c:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>

0000000000000d80 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE>:
     d80:	stp	x19, x20, [sp, #-64]!
     d84:	stp	x21, x22, [sp, #16]
     d88:	mov	x22, x1
     d8c:	mov	x21, x0
     d90:	stp	x23, x24, [sp, #32]
     d94:	adrp	x23, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     d98:	add	x1, x23, #0x0
     d9c:	str	x30, [sp, #48]
     da0:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     da4:	mov	x2, #0x0                   	// #0
     da8:	mov	x19, x0
     dac:	mov	x1, #0x0                   	// #0
     db0:	add	x0, x0, #0x1
     db4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     db8:	str	x0, [x22, #40]
     dbc:	mov	x2, x19
     dc0:	mov	x1, x21
     dc4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     dc8:	add	x20, x21, x19
     dcc:	ldr	x0, [x22, #40]
     dd0:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     dd4:	add	x1, x1, #0x0
     dd8:	strb	wzr, [x0, x19]
     ddc:	ldrb	w0, [x21, x19]
     de0:	cmp	w0, #0x0
     de4:	cinc	x20, x20, ne  // ne = any
     de8:	mov	x0, x20
     dec:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     df0:	mov	x19, x0
     df4:	mov	x2, #0x0                   	// #0
     df8:	mov	x1, #0x0                   	// #0
     dfc:	add	x0, x0, #0x1
     e00:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     e04:	mov	x21, x0
     e08:	mov	x1, x20
     e0c:	mov	x2, x19
     e10:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     e14:	add	x24, x20, x19
     e18:	strb	wzr, [x21, x19]
     e1c:	ldrb	w0, [x20, x19]
     e20:	cmp	w0, #0x0
     e24:	cinc	x24, x24, ne  // ne = any
     e28:	cbz	x21, e38 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE+0xb8>
     e2c:	mov	x0, x21
     e30:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     e34:	str	x0, [x22, #48]
     e38:	mov	x0, x21
     e3c:	mov	x1, #0x0                   	// #0
     e40:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     e44:	add	x1, x23, #0x0
     e48:	mov	x0, x24
     e4c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
     e50:	mov	x20, x0
     e54:	mov	x2, #0x0                   	// #0
     e58:	mov	x1, #0x0                   	// #0
     e5c:	add	x0, x0, #0x1
     e60:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
     e64:	mov	x19, x0
     e68:	mov	x1, x24
     e6c:	mov	x2, x20
     e70:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     e74:	strb	wzr, [x19, x20]
     e78:	cbz	x19, e88 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE+0x108>
     e7c:	mov	x0, x19
     e80:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
     e84:	str	x0, [x22, #56]
     e88:	mov	x0, x19
     e8c:	mov	x1, #0x0                   	// #0
     e90:	ldp	x21, x22, [sp, #16]
     e94:	ldp	x23, x24, [sp, #32]
     e98:	ldr	x30, [sp, #48]
     e9c:	ldp	x19, x20, [sp], #64
     ea0:	b	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
     ea4:	nop

0000000000000ea8 <_ZN11__sanitizer17SymbolizerProcessC1EPKcb>:
     ea8:	adrp	x3, 0 <_ZTVN11__sanitizer17SymbolizerProcessE>
     eac:	add	x4, x0, #0x4, lsl #12
     eb0:	str	x30, [sp, #-16]!
     eb4:	mov	x5, #0xffffffffffffffff    	// #-1
     eb8:	ldr	x3, [x3]
     ebc:	str	x5, [x0, #16]
     ec0:	str	xzr, [x0, #16408]
     ec4:	add	x3, x3, #0x10
     ec8:	stp	x3, x1, [x0]
     ecc:	strh	wzr, [x4, #32]
     ed0:	strb	w2, [x4, #34]
     ed4:	cbz	x1, ee8 <_ZN11__sanitizer17SymbolizerProcessC1EPKcb+0x40>
     ed8:	ldrb	w0, [x1]
     edc:	cbz	w0, f08 <_ZN11__sanitizer17SymbolizerProcessC1EPKcb+0x60>
     ee0:	ldr	x30, [sp], #16
     ee4:	ret
     ee8:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     eec:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     ef0:	add	x2, x2, #0x0
     ef4:	add	x0, x0, #0x0
     ef8:	mov	x4, #0x0                   	// #0
     efc:	mov	x3, #0x0                   	// #0
     f00:	mov	w1, #0x1d0                 	// #464
     f04:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f08:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     f0c:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     f10:	add	x2, x2, #0x0
     f14:	add	x0, x0, #0x0
     f18:	mov	x4, #0x0                   	// #0
     f1c:	mov	x3, #0x0                   	// #0
     f20:	mov	w1, #0x1d1                 	// #465
     f24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000f28 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>:
     f28:	stp	x19, x20, [sp, #-80]!
     f2c:	mov	x19, x0
     f30:	stp	x25, x30, [sp, #48]
     f34:	add	x25, x0, #0x4, lsl #12
     f38:	ldrb	w0, [x25, #32]
     f3c:	cbnz	w0, 1068 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x140>
     f40:	stp	x21, x22, [sp, #16]
     f44:	mov	x21, x1
     f48:	ldr	x22, [x19, #8]
     f4c:	bl	0 <_ZN11__sanitizer14GetProcessNameEv>
     f50:	mov	x20, x0
     f54:	cbz	x0, f94 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x6c>
     f58:	mov	x0, x22
     f5c:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
     f60:	mov	x1, x0
     f64:	cbz	x0, f94 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x6c>
     f68:	mov	x0, x20
     f6c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     f70:	cbnz	w0, f94 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x6c>
     f74:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     f78:	add	x0, x0, #0x0
     f7c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     f80:	mov	x20, #0x0                   	// #0
     f84:	mov	w0, #0x1                   	// #1
     f88:	strb	w0, [x25, #32]
     f8c:	ldp	x21, x22, [sp, #16]
     f90:	b	106c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x144>
     f94:	ldr	x0, [x19, #16408]
     f98:	cmp	x0, #0x4
     f9c:	b.hi	105c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x134>  // b.pmore
     fa0:	adrp	x22, 138 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>
     fa4:	add	x22, x22, #0x0
     fa8:	stp	x23, x24, [sp, #32]
     fac:	adrp	x23, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
     fb0:	add	x24, sp, #0x48
     fb4:	add	x23, x23, #0x0
     fb8:	ldp	w2, w0, [x19, #16]
     fbc:	cmn	w2, #0x1
     fc0:	b.eq	1028 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x100>  // b.none
     fc4:	cmn	w0, #0x1
     fc8:	b.eq	107c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x154>  // b.none
     fcc:	mov	x0, x21
     fd0:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     fd4:	mov	x20, x0
     fd8:	cbz	x0, 1088 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x160>
     fdc:	mov	x2, x0
     fe0:	ldr	w0, [x19, #20]
     fe4:	mov	x3, x24
     fe8:	mov	x1, x21
     fec:	mov	x4, #0x0                   	// #0
     ff0:	str	xzr, [sp, #72]
     ff4:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
     ff8:	tst	w0, #0xff
     ffc:	b.eq	100c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0xe4>  // b.none
    1000:	ldr	x0, [sp, #72]
    1004:	cmp	x20, x0
    1008:	b.eq	1088 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x160>  // b.none
    100c:	ldr	w1, [x19, #20]
    1010:	mov	x0, x23
    1014:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1018:	ldr	w2, [x19, #16]
    101c:	cmn	w2, #0x1
    1020:	b.ne	107c <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x154>  // b.any
    1024:	ldr	w0, [x19, #20]
    1028:	cmn	w0, #0x1
    102c:	b.eq	1034 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x10c>  // b.none
    1030:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    1034:	ldr	x1, [x19]
    1038:	mov	x0, x19
    103c:	ldr	x1, [x1]
    1040:	blr	x1
    1044:	ldr	x0, [x19, #16408]
    1048:	add	x0, x0, #0x1
    104c:	str	x0, [x19, #16408]
    1050:	cmp	x0, #0x4
    1054:	b.ls	fb8 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x90>  // b.plast
    1058:	ldp	x23, x24, [sp, #32]
    105c:	ldrb	w0, [x25, #32]
    1060:	cbz	w0, 10dc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x1b4>
    1064:	ldp	x21, x22, [sp, #16]
    1068:	mov	x20, #0x0                   	// #0
    106c:	mov	x0, x20
    1070:	ldp	x25, x30, [sp, #48]
    1074:	ldp	x19, x20, [sp], #80
    1078:	ret
    107c:	mov	w0, w2
    1080:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    1084:	b	1024 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0xfc>
    1088:	mov	x20, x19
    108c:	mov	x2, #0x4000                	// #16384
    1090:	ldr	x0, [x20], #24
    1094:	mov	x1, x20
    1098:	ldr	x3, [x0, #8]
    109c:	mov	x0, x19
    10a0:	cmp	x3, x22
    10a4:	b.ne	10cc <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x1a4>  // b.any
    10a8:	bl	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    10ac:	and	w0, w0, #0xff
    10b0:	cbz	w0, 1018 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0xf0>
    10b4:	mov	x0, x20
    10b8:	ldp	x21, x22, [sp, #16]
    10bc:	ldp	x23, x24, [sp, #32]
    10c0:	ldp	x25, x30, [sp, #48]
    10c4:	ldp	x19, x20, [sp], #80
    10c8:	ret
    10cc:	blr	x3
    10d0:	and	w0, w0, #0xff
    10d4:	cbz	w0, 1018 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0xf0>
    10d8:	b	10b4 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc+0x18c>
    10dc:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    10e0:	add	x0, x0, #0x0
    10e4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    10e8:	mov	x20, #0x0                   	// #0
    10ec:	mov	w0, #0x1                   	// #1
    10f0:	strb	w0, [x25, #32]
    10f4:	mov	x0, x20
    10f8:	ldp	x21, x22, [sp, #16]
    10fc:	ldp	x25, x30, [sp, #48]
    1100:	ldp	x19, x20, [sp], #80
    1104:	ret

0000000000001108 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>:
    1108:	stp	x19, x20, [sp, #-32]!
    110c:	mov	w7, w4
    1110:	mov	x4, x2
    1114:	str	x30, [sp, #16]
    1118:	cbz	x2, 1240 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x138>
    111c:	mov	x19, x0
    1120:	add	x20, x0, #0x18
    1124:	cbz	w7, 118c <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x84>
    1128:	cmp	w7, #0x5
    112c:	b.eq	125c <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x154>  // b.none
    1130:	b.hi	11e4 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xdc>  // b.pmore
    1134:	cmp	w7, #0x3
    1138:	b.eq	1234 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x12c>  // b.none
    113c:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1140:	cmp	w7, #0x4
    1144:	add	x5, x8, #0x0
    1148:	b.ne	11d0 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xc8>  // b.any
    114c:	nop
    1150:	mov	x6, x3
    1154:	mov	x0, x20
    1158:	mov	x3, x1
    115c:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1160:	mov	x1, #0x4000                	// #16384
    1164:	add	x2, x2, #0x0
    1168:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    116c:	mov	w1, #0x3fff                	// #16383
    1170:	cmp	w0, w1
    1174:	b.gt	11b4 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xac>
    1178:	mov	x1, x20
    117c:	ldr	x0, [x19, #16]
    1180:	ldr	x30, [sp, #16]
    1184:	ldp	x19, x20, [sp], #32
    1188:	b	f28 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
    118c:	mov	x5, x3
    1190:	mov	x0, x20
    1194:	mov	x3, x1
    1198:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    119c:	mov	x1, #0x4000                	// #16384
    11a0:	add	x2, x2, #0x0
    11a4:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    11a8:	mov	w1, #0x3fff                	// #16383
    11ac:	cmp	w0, w1
    11b0:	b.le	1178 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x70>
    11b4:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    11b8:	add	x0, x0, #0x0
    11bc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    11c0:	mov	x0, #0x0                   	// #0
    11c4:	ldr	x30, [sp, #16]
    11c8:	ldp	x19, x20, [sp], #32
    11cc:	ret
    11d0:	cmp	w7, #0x1
    11d4:	b.ne	1200 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0xf8>  // b.any
    11d8:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    11dc:	add	x5, x8, #0x0
    11e0:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    11e4:	cmp	w7, #0x7
    11e8:	b.eq	1228 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x120>  // b.none
    11ec:	cmp	w7, #0x8
    11f0:	b.ne	1214 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x10c>  // b.any
    11f4:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    11f8:	add	x5, x8, #0x0
    11fc:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1200:	cmp	w7, #0x2
    1204:	b.ne	1268 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x160>  // b.any
    1208:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    120c:	add	x5, x8, #0x0
    1210:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1214:	cmp	w7, #0x6
    1218:	b.ne	1268 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x160>  // b.any
    121c:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1220:	add	x5, x8, #0x0
    1224:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1228:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    122c:	add	x5, x8, #0x0
    1230:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1234:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1238:	add	x5, x8, #0x0
    123c:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1240:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1244:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1248:	add	x2, x2, #0x0
    124c:	add	x0, x0, #0x0
    1250:	mov	x3, #0x0                   	// #0
    1254:	mov	w1, #0x1b5                 	// #437
    1258:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    125c:	adrp	x8, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1260:	add	x5, x8, #0x0
    1264:	b	1150 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE+0x48>
    1268:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    126c:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1270:	add	x2, x2, #0x0
    1274:	add	x0, x0, #0x0
    1278:	mov	x4, #0x0                   	// #0
    127c:	mov	x3, #0x0                   	// #0
    1280:	mov	w1, #0x2b8                 	// #696
    1284:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001288 <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE>:
    1288:	stp	x19, x20, [sp, #-64]!
    128c:	mov	x19, x2
    1290:	ldr	w4, [x2, #16]
    1294:	ldr	x2, [x2]
    1298:	stp	x21, x22, [sp, #16]
    129c:	mov	x21, x1
    12a0:	ldr	x3, [x19, #8]
    12a4:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    12a8:	add	x1, x1, #0x0
    12ac:	str	x30, [sp, #56]
    12b0:	bl	1108 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
    12b4:	cbnz	x0, 12cc <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0x44>
    12b8:	mov	w0, #0x0                   	// #0
    12bc:	ldp	x21, x22, [sp, #16]
    12c0:	ldr	x30, [sp, #56]
    12c4:	ldp	x19, x20, [sp], #64
    12c8:	ret
    12cc:	mov	x20, x0
    12d0:	stp	x23, x24, [sp, #32]
    12d4:	adrp	x24, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    12d8:	add	x1, x24, #0x0
    12dc:	str	x25, [sp, #48]
    12e0:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    12e4:	mov	x22, x0
    12e8:	mov	x2, #0x0                   	// #0
    12ec:	mov	x1, #0x0                   	// #0
    12f0:	add	x0, x0, #0x1
    12f4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    12f8:	str	x0, [x19, #40]
    12fc:	mov	x2, x22
    1300:	mov	x1, x20
    1304:	add	x23, x20, x22
    1308:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    130c:	ldr	x0, [x19, #40]
    1310:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1314:	add	x1, x1, #0x0
    1318:	strb	wzr, [x0, x22]
    131c:	ldrb	w0, [x20, x22]
    1320:	cmp	w0, #0x0
    1324:	cinc	x23, x23, ne  // ne = any
    1328:	mov	x0, x23
    132c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1330:	mov	x20, x0
    1334:	mov	x2, #0x0                   	// #0
    1338:	mov	x1, #0x0                   	// #0
    133c:	add	x0, x0, #0x1
    1340:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1344:	mov	x22, x0
    1348:	mov	x1, x23
    134c:	mov	x2, x20
    1350:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1354:	add	x25, x23, x20
    1358:	strb	wzr, [x22, x20]
    135c:	ldrb	w0, [x23, x20]
    1360:	cmp	w0, #0x0
    1364:	cinc	x25, x25, ne  // ne = any
    1368:	cbz	x22, 1378 <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0xf0>
    136c:	mov	x0, x22
    1370:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1374:	str	x0, [x19, #48]
    1378:	mov	x0, x22
    137c:	mov	x1, #0x0                   	// #0
    1380:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1384:	add	x1, x24, #0x0
    1388:	mov	x0, x25
    138c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1390:	mov	x22, x0
    1394:	mov	x2, #0x0                   	// #0
    1398:	mov	x1, #0x0                   	// #0
    139c:	add	x0, x0, #0x1
    13a0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    13a4:	mov	x20, x0
    13a8:	mov	x1, x25
    13ac:	mov	x2, x22
    13b0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    13b4:	strb	wzr, [x20, x22]
    13b8:	cbz	x20, 13c8 <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0x140>
    13bc:	mov	x0, x20
    13c0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    13c4:	str	x0, [x19, #56]
    13c8:	mov	x0, x20
    13cc:	mov	x1, #0x0                   	// #0
    13d0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    13d4:	ldr	x2, [x19, #48]
    13d8:	mov	w0, #0x1                   	// #1
    13dc:	ldr	x1, [x19, #8]
    13e0:	add	x21, x21, x2
    13e4:	ldp	x23, x24, [sp, #32]
    13e8:	sub	x21, x21, x1
    13ec:	ldr	x25, [sp, #48]
    13f0:	str	x21, [x19, #48]
    13f4:	ldp	x21, x22, [sp, #16]
    13f8:	ldr	x30, [sp, #56]
    13fc:	ldp	x19, x20, [sp], #64
    1400:	ret
    1404:	nop

0000000000001408 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>:
    1408:	stp	x19, x20, [sp, #-96]!
    140c:	stp	x27, x30, [sp, #64]
    1410:	add	x27, x0, #0x70
    1414:	stp	x21, x22, [sp, #16]
    1418:	mov	x21, x0
    141c:	mov	x0, x27
    1420:	stp	x23, x24, [sp, #32]
    1424:	mov	x24, x1
    1428:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    142c:	mov	x0, x24
    1430:	bl	0 <_ZN11__sanitizer15SymbolizedStack3NewEm>
    1434:	mov	x1, x24
    1438:	mov	x23, x0
    143c:	mov	x0, x21
    1440:	bl	770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
    1444:	cbz	x0, 14e0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0xd8>
    1448:	mov	x2, x0
    144c:	add	x20, x23, #0x8
    1450:	mov	x0, x20
    1454:	ldr	w3, [x2, #24]
    1458:	ldp	x1, x2, [x2]
    145c:	sub	x2, x24, x2
    1460:	bl	0 <_ZN11__sanitizer11AddressInfo14FillModuleInfoEPKcmNS_10ModuleArchE>
    1464:	ldr	x19, [x21, #208]
    1468:	cbz	x19, 14e0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0xd8>
    146c:	add	x22, sp, #0x58
    1470:	stp	x25, x26, [sp, #48]
    1474:	adrp	x26, 1798 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>
    1478:	adrp	x25, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    147c:	add	x26, x26, #0x0
    1480:	add	x25, x25, #0x0
    1484:	b	1498 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x90>
    1488:	mov	x0, x22
    148c:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    1490:	ldr	x19, [x19, #8]
    1494:	cbz	x19, 1524 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x11c>
    1498:	mov	x1, x21
    149c:	mov	x0, x22
    14a0:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
    14a4:	ldr	x2, [x19]
    14a8:	mov	x1, x25
    14ac:	mov	x0, x19
    14b0:	ldr	x3, [x2]
    14b4:	cmp	x3, x26
    14b8:	b.ne	1500 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0xf8>  // b.any
    14bc:	ldp	x2, x3, [x20, #8]
    14c0:	ldr	w4, [x20, #24]
    14c4:	bl	1108 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
    14c8:	cbz	x0, 1488 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x80>
    14cc:	mov	x1, x23
    14d0:	bl	c08 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
    14d4:	mov	x0, x22
    14d8:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    14dc:	ldp	x25, x26, [sp, #48]
    14e0:	mov	x0, x27
    14e4:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    14e8:	mov	x0, x23
    14ec:	ldp	x21, x22, [sp, #16]
    14f0:	ldp	x23, x24, [sp, #32]
    14f4:	ldp	x27, x30, [sp, #64]
    14f8:	ldp	x19, x20, [sp], #96
    14fc:	ret
    1500:	mov	x2, x23
    1504:	mov	x1, x24
    1508:	blr	x3
    150c:	tst	w0, #0xff
    1510:	b.ne	14d4 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0xcc>  // b.any
    1514:	mov	x0, x22
    1518:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    151c:	ldr	x19, [x19, #8]
    1520:	cbnz	x19, 1498 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm+0x90>
    1524:	mov	x0, x27
    1528:	ldp	x25, x26, [sp, #48]
    152c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    1530:	mov	x0, x23
    1534:	ldp	x21, x22, [sp, #16]
    1538:	ldp	x23, x24, [sp, #32]
    153c:	ldp	x27, x30, [sp, #64]
    1540:	ldp	x19, x20, [sp], #96
    1544:	ret

0000000000001548 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE>:
    1548:	stp	x19, x20, [sp, #-96]!
    154c:	mov	x19, x2
    1550:	stp	x23, x24, [sp, #32]
    1554:	add	x24, x0, #0x70
    1558:	stp	x21, x22, [sp, #16]
    155c:	mov	x22, x1
    1560:	stp	x25, x26, [sp, #48]
    1564:	mov	x25, x0
    1568:	mov	x0, x24
    156c:	str	x30, [sp, #72]
    1570:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    1574:	mov	x1, x22
    1578:	mov	x0, x25
    157c:	bl	770 <_ZN11__sanitizer10Symbolizer20FindModuleForAddressEm>
    1580:	cbz	x0, 178c <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x244>
    1584:	mov	x1, x0
    1588:	mov	x0, x19
    158c:	add	x23, sp, #0x58
    1590:	ldp	x20, x21, [x1]
    1594:	ldr	w26, [x1, #24]
    1598:	str	x27, [sp, #64]
    159c:	bl	0 <_ZN11__sanitizer8DataInfo5ClearEv>
    15a0:	adrp	x27, 1288 <_ZN11__sanitizer14LLVMSymbolizer13SymbolizeDataEmPNS_8DataInfoE>
    15a4:	add	x27, x27, #0x0
    15a8:	mov	x0, x20
    15ac:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
    15b0:	ldr	x20, [x25, #208]
    15b4:	sub	x21, x22, x21
    15b8:	stp	x0, x21, [x19]
    15bc:	str	w26, [x19, #16]
    15c0:	adrp	x26, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    15c4:	add	x26, x26, #0x0
    15c8:	cbnz	x20, 15e0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x98>
    15cc:	b	1780 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x238>
    15d0:	mov	x0, x23
    15d4:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    15d8:	ldr	x20, [x20, #8]
    15dc:	cbz	x20, 1780 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x238>
    15e0:	mov	x1, x25
    15e4:	mov	x0, x23
    15e8:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeC1EPKS0_>
    15ec:	ldr	x2, [x20]
    15f0:	mov	x1, x26
    15f4:	mov	x0, x20
    15f8:	ldr	x3, [x2, #8]
    15fc:	cmp	x3, x27
    1600:	b.ne	175c <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x214>  // b.any
    1604:	ldp	x2, x3, [x19]
    1608:	ldr	w4, [x19, #16]
    160c:	bl	1108 <_ZN11__sanitizer14LLVMSymbolizer20FormatAndSendCommandEPKcS2_mNS_10ModuleArchE>
    1610:	mov	x21, x0
    1614:	cbz	x0, 15d0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x88>
    1618:	adrp	x25, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    161c:	add	x1, x25, #0x0
    1620:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1624:	mov	x20, x0
    1628:	mov	x2, #0x0                   	// #0
    162c:	mov	x1, #0x0                   	// #0
    1630:	add	x0, x0, #0x1
    1634:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1638:	str	x0, [x19, #40]
    163c:	mov	x2, x20
    1640:	mov	x1, x21
    1644:	add	x26, x21, x20
    1648:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    164c:	ldr	x0, [x19, #40]
    1650:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1654:	add	x1, x1, #0x0
    1658:	strb	wzr, [x0, x20]
    165c:	ldrb	w0, [x21, x20]
    1660:	cmp	w0, #0x0
    1664:	cinc	x26, x26, ne  // ne = any
    1668:	mov	x0, x26
    166c:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1670:	mov	x20, x0
    1674:	mov	x2, #0x0                   	// #0
    1678:	mov	x1, #0x0                   	// #0
    167c:	add	x0, x0, #0x1
    1680:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1684:	mov	x21, x0
    1688:	mov	x1, x26
    168c:	mov	x2, x20
    1690:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1694:	add	x27, x26, x20
    1698:	strb	wzr, [x21, x20]
    169c:	ldrb	w0, [x26, x20]
    16a0:	cmp	w0, #0x0
    16a4:	cinc	x27, x27, ne  // ne = any
    16a8:	cbz	x21, 16b8 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x170>
    16ac:	mov	x0, x21
    16b0:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    16b4:	str	x0, [x19, #48]
    16b8:	mov	x0, x21
    16bc:	mov	x1, #0x0                   	// #0
    16c0:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    16c4:	add	x1, x25, #0x0
    16c8:	mov	x0, x27
    16cc:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    16d0:	mov	x21, x0
    16d4:	mov	x2, #0x0                   	// #0
    16d8:	mov	x1, #0x0                   	// #0
    16dc:	add	x0, x0, #0x1
    16e0:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    16e4:	mov	x20, x0
    16e8:	mov	x1, x27
    16ec:	mov	x2, x21
    16f0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    16f4:	strb	wzr, [x20, x21]
    16f8:	cbz	x20, 1708 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x1c0>
    16fc:	mov	x0, x20
    1700:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1704:	str	x0, [x19, #56]
    1708:	mov	x0, x20
    170c:	mov	x1, #0x0                   	// #0
    1710:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1714:	ldr	x1, [x19, #48]
    1718:	ldr	x0, [x19, #8]
    171c:	add	x22, x22, x1
    1720:	sub	x22, x22, x0
    1724:	str	x22, [x19, #48]
    1728:	mov	x0, x23
    172c:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    1730:	ldr	x27, [sp, #64]
    1734:	mov	w19, #0x1                   	// #1
    1738:	mov	x0, x24
    173c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    1740:	mov	w0, w19
    1744:	ldp	x21, x22, [sp, #16]
    1748:	ldp	x23, x24, [sp, #32]
    174c:	ldp	x25, x26, [sp, #48]
    1750:	ldr	x30, [sp, #72]
    1754:	ldp	x19, x20, [sp], #96
    1758:	ret
    175c:	mov	x2, x19
    1760:	mov	x1, x22
    1764:	blr	x3
    1768:	tst	w0, #0xff
    176c:	b.ne	1728 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x1e0>  // b.any
    1770:	mov	x0, x23
    1774:	bl	0 <_ZN11__sanitizer10Symbolizer15SymbolizerScopeD1Ev>
    1778:	ldr	x20, [x20, #8]
    177c:	cbnz	x20, 15e0 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x98>
    1780:	mov	w19, #0x1                   	// #1
    1784:	ldr	x27, [sp, #64]
    1788:	b	1738 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x1f0>
    178c:	mov	w19, #0x0                   	// #0
    1790:	b	1738 <_ZN11__sanitizer10Symbolizer13SymbolizeDataEmPNS_8DataInfoE+0x1f0>
    1794:	nop

0000000000001798 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
    1798:	stp	x19, x20, [sp, #-32]!
    179c:	mov	x19, x2
    17a0:	mov	x20, x0
    17a4:	ldp	x4, x5, [x2, #16]
    17a8:	stp	x21, x30, [sp, #16]
    17ac:	ldr	w2, [x2, #32]
    17b0:	cbz	x4, 18ec <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x154>
    17b4:	add	x21, x0, #0x18
    17b8:	cbz	w2, 1840 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0xa8>
    17bc:	cmp	w2, #0x5
    17c0:	b.eq	1908 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x170>  // b.none
    17c4:	b.hi	1890 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0xf8>  // b.pmore
    17c8:	cmp	w2, #0x3
    17cc:	b.eq	18e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x148>  // b.none
    17d0:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    17d4:	cmp	w2, #0x4
    17d8:	add	x1, x1, #0x0
    17dc:	b.ne	187c <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0xe4>  // b.any
    17e0:	mov	x6, x5
    17e4:	mov	x0, x21
    17e8:	mov	x5, x1
    17ec:	adrp	x3, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    17f0:	mov	x1, #0x4000                	// #16384
    17f4:	add	x3, x3, #0x0
    17f8:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    17fc:	add	x2, x2, #0x0
    1800:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    1804:	mov	w1, #0x3fff                	// #16383
    1808:	cmp	w0, w1
    180c:	b.gt	1868 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0xd0>
    1810:	ldr	x0, [x20, #16]
    1814:	mov	x1, x21
    1818:	bl	f28 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
    181c:	mov	w1, #0x0                   	// #0
    1820:	cbz	x0, 1830 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x98>
    1824:	mov	x1, x19
    1828:	bl	c08 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
    182c:	mov	w1, #0x1                   	// #1
    1830:	mov	w0, w1
    1834:	ldp	x21, x30, [sp, #16]
    1838:	ldp	x19, x20, [sp], #32
    183c:	ret
    1840:	mov	x1, #0x4000                	// #16384
    1844:	mov	x0, x21
    1848:	adrp	x3, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    184c:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1850:	add	x3, x3, #0x0
    1854:	add	x2, x2, #0x0
    1858:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    185c:	mov	w1, #0x3fff                	// #16383
    1860:	cmp	w0, w1
    1864:	b.le	1810 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x78>
    1868:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    186c:	add	x0, x0, #0x0
    1870:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1874:	mov	w1, #0x0                   	// #0
    1878:	b	1830 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x98>
    187c:	cmp	w2, #0x1
    1880:	b.ne	18ac <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x114>  // b.any
    1884:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1888:	add	x1, x1, #0x0
    188c:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    1890:	cmp	w2, #0x7
    1894:	b.eq	18d4 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x13c>  // b.none
    1898:	cmp	w2, #0x8
    189c:	b.ne	18c0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x128>  // b.any
    18a0:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18a4:	add	x1, x1, #0x0
    18a8:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    18ac:	cmp	w2, #0x2
    18b0:	b.ne	1914 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x17c>  // b.any
    18b4:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18b8:	add	x1, x1, #0x0
    18bc:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    18c0:	cmp	w2, #0x6
    18c4:	b.ne	1914 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x17c>  // b.any
    18c8:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18cc:	add	x1, x1, #0x0
    18d0:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    18d4:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18d8:	add	x1, x1, #0x0
    18dc:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    18e0:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18e4:	add	x1, x1, #0x0
    18e8:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    18ec:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18f0:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    18f4:	add	x2, x2, #0x0
    18f8:	add	x0, x0, #0x0
    18fc:	mov	x3, #0x0                   	// #0
    1900:	mov	w1, #0x1b5                 	// #437
    1904:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1908:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    190c:	add	x1, x1, #0x0
    1910:	b	17e0 <_ZN11__sanitizer14LLVMSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x48>
    1914:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1918:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    191c:	add	x2, x2, #0x0
    1920:	add	x0, x0, #0x0
    1924:	mov	x4, #0x0                   	// #0
    1928:	mov	x3, #0x0                   	// #0
    192c:	mov	w1, #0x2b8                 	// #696
    1930:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1934:	nop

0000000000001938 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE>:
    1938:	stp	x19, x20, [sp, #-224]!
    193c:	mov	x20, x2
    1940:	ldp	x4, x5, [x2]
    1944:	ldr	w2, [x2, #16]
    1948:	stp	x21, x22, [sp, #16]
    194c:	str	x30, [sp, #80]
    1950:	cbz	x4, 1e48 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x510>
    1954:	mov	x19, x0
    1958:	add	x21, x0, #0x18
    195c:	cbz	w2, 19e4 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xac>
    1960:	cmp	w2, #0x5
    1964:	b.eq	1e88 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x550>  // b.none
    1968:	b.hi	1a34 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xfc>  // b.pmore
    196c:	cmp	w2, #0x3
    1970:	b.eq	1e3c <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x504>  // b.none
    1974:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1978:	cmp	w2, #0x4
    197c:	add	x1, x1, #0x0
    1980:	b.ne	1a20 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xe8>  // b.any
    1984:	nop
    1988:	mov	x6, x5
    198c:	mov	x0, x21
    1990:	mov	x5, x1
    1994:	adrp	x3, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1998:	mov	x1, #0x4000                	// #16384
    199c:	add	x3, x3, #0x0
    19a0:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    19a4:	add	x2, x2, #0x0
    19a8:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    19ac:	mov	w1, #0x3fff                	// #16383
    19b0:	cmp	w0, w1
    19b4:	b.gt	1a0c <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0xd4>
    19b8:	ldr	x0, [x19, #16]
    19bc:	mov	x1, x21
    19c0:	bl	f28 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
    19c4:	mov	x19, x0
    19c8:	mov	w1, #0x0                   	// #0
    19cc:	cbnz	x0, 1a78 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x140>
    19d0:	mov	w0, w1
    19d4:	ldp	x21, x22, [sp, #16]
    19d8:	ldr	x30, [sp, #80]
    19dc:	ldp	x19, x20, [sp], #224
    19e0:	ret
    19e4:	mov	x1, #0x4000                	// #16384
    19e8:	mov	x0, x21
    19ec:	adrp	x3, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    19f0:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    19f4:	add	x3, x3, #0x0
    19f8:	add	x2, x2, #0x0
    19fc:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
    1a00:	mov	w1, #0x3fff                	// #16383
    1a04:	cmp	w0, w1
    1a08:	b.le	19b8 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x80>
    1a0c:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a10:	add	x0, x0, #0x0
    1a14:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1a18:	mov	w1, #0x0                   	// #0
    1a1c:	b	19d0 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x98>
    1a20:	cmp	w2, #0x1
    1a24:	b.ne	1a50 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x118>  // b.any
    1a28:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a2c:	add	x1, x1, #0x0
    1a30:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1a34:	cmp	w2, #0x7
    1a38:	b.eq	1d74 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x43c>  // b.none
    1a3c:	cmp	w2, #0x8
    1a40:	b.ne	1a64 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x12c>  // b.any
    1a44:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a48:	add	x1, x1, #0x0
    1a4c:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1a50:	cmp	w2, #0x2
    1a54:	b.ne	1f04 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x5cc>  // b.any
    1a58:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a5c:	add	x1, x1, #0x0
    1a60:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1a64:	cmp	w2, #0x6
    1a68:	b.ne	1f04 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x5cc>  // b.any
    1a6c:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a70:	add	x1, x1, #0x0
    1a74:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1a78:	adrp	x22, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1a7c:	add	x22, x22, #0x0
    1a80:	mov	x1, x22
    1a84:	mov	x2, #0x2                   	// #2
    1a88:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1a8c:	cbz	w0, 1d5c <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x424>
    1a90:	ldrb	w0, [x19]
    1a94:	cbz	w0, 1d5c <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x424>
    1a98:	stp	x23, x24, [sp, #32]
    1a9c:	adrp	x23, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1aa0:	add	x24, x20, #0x18
    1aa4:	add	x23, x23, #0x0
    1aa8:	stp	x25, x26, [sp, #48]
    1aac:	adrp	x25, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ab0:	add	x26, sp, #0xa0
    1ab4:	add	x25, x25, #0x0
    1ab8:	stp	x27, x28, [sp, #64]
    1abc:	mov	x1, x23
    1ac0:	mov	x0, x19
    1ac4:	stp	xzr, xzr, [sp, #96]
    1ac8:	str	xzr, [sp, #112]
    1acc:	str	wzr, [sp, #120]
    1ad0:	strh	wzr, [sp, #124]
    1ad4:	strb	wzr, [sp, #126]
    1ad8:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1adc:	mov	x2, #0x0                   	// #0
    1ae0:	mov	x21, x0
    1ae4:	mov	x1, #0x0                   	// #0
    1ae8:	add	x0, x0, #0x1
    1aec:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1af0:	str	x0, [sp, #96]
    1af4:	mov	x2, x21
    1af8:	mov	x1, x19
    1afc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1b00:	add	x28, x19, x21
    1b04:	ldr	x0, [sp, #96]
    1b08:	mov	x1, x23
    1b0c:	strb	wzr, [x0, x21]
    1b10:	ldrb	w0, [x19, x21]
    1b14:	cmp	w0, #0x0
    1b18:	cinc	x28, x28, ne  // ne = any
    1b1c:	mov	x0, x28
    1b20:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1b24:	mov	x19, x0
    1b28:	mov	x2, #0x0                   	// #0
    1b2c:	mov	x1, #0x0                   	// #0
    1b30:	add	x0, x0, #0x1
    1b34:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1b38:	mov	x2, x19
    1b3c:	mov	x1, x28
    1b40:	str	x0, [sp, #104]
    1b44:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1b48:	ldr	x1, [sp, #104]
    1b4c:	add	x21, x28, x19
    1b50:	mov	x0, x26
    1b54:	strb	wzr, [x1, x19]
    1b58:	ldrb	w1, [x28, x19]
    1b5c:	cmp	w1, #0x0
    1b60:	cinc	x21, x21, ne  // ne = any
    1b64:	bl	0 <_ZN11__sanitizer11AddressInfoC1Ev>
    1b68:	mov	x1, x21
    1b6c:	mov	x0, x26
    1b70:	bl	148 <_ZN11__sanitizerL17ParseFileLineInfoEPNS_11AddressInfoEPKc>
    1b74:	mov	x28, x0
    1b78:	ldr	w3, [sp, #216]
    1b7c:	mov	x1, x22
    1b80:	ldr	x4, [sp, #208]
    1b84:	mov	x2, #0x2                   	// #2
    1b88:	str	x4, [sp, #112]
    1b8c:	str	w3, [sp, #120]
    1b90:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1b94:	cmp	w0, #0x0
    1b98:	cset	w2, ne  // ne = any
    1b9c:	mov	x1, x25
    1ba0:	mov	x0, x28
    1ba4:	strb	w2, [sp, #124]
    1ba8:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1bac:	mov	x19, x0
    1bb0:	mov	x2, #0x0                   	// #0
    1bb4:	mov	x1, #0x0                   	// #0
    1bb8:	add	x0, x0, #0x1
    1bbc:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1bc0:	mov	x27, x0
    1bc4:	mov	x2, x19
    1bc8:	mov	x1, x28
    1bcc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1bd0:	add	x21, x28, x19
    1bd4:	strb	wzr, [x27, x19]
    1bd8:	ldrb	w0, [x28, x19]
    1bdc:	cmp	w0, #0x0
    1be0:	cinc	x21, x21, ne  // ne = any
    1be4:	cbz	x27, 1bf4 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x2bc>
    1be8:	mov	x0, x27
    1bec:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1bf0:	str	x0, [sp, #128]
    1bf4:	mov	x0, x27
    1bf8:	mov	x1, #0x0                   	// #0
    1bfc:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1c00:	mov	x1, x22
    1c04:	mov	x2, #0x2                   	// #2
    1c08:	mov	x0, x21
    1c0c:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1c10:	cmp	w0, #0x0
    1c14:	mov	x1, x25
    1c18:	cset	w2, ne  // ne = any
    1c1c:	mov	x0, x21
    1c20:	strb	w2, [sp, #125]
    1c24:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1c28:	mov	x19, x0
    1c2c:	mov	x2, #0x0                   	// #0
    1c30:	mov	x1, #0x0                   	// #0
    1c34:	add	x0, x0, #0x1
    1c38:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1c3c:	mov	x27, x0
    1c40:	mov	x2, x19
    1c44:	mov	x1, x21
    1c48:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1c4c:	add	x28, x21, x19
    1c50:	strb	wzr, [x27, x19]
    1c54:	ldrb	w0, [x21, x19]
    1c58:	cmp	w0, #0x0
    1c5c:	cinc	x28, x28, ne  // ne = any
    1c60:	cbz	x27, 1c70 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x338>
    1c64:	mov	x0, x27
    1c68:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1c6c:	str	x0, [sp, #136]
    1c70:	mov	x0, x27
    1c74:	mov	x1, #0x0                   	// #0
    1c78:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1c7c:	mov	x1, x22
    1c80:	mov	x2, #0x2                   	// #2
    1c84:	mov	x0, x28
    1c88:	bl	0 <_ZN11__sanitizer16internal_strncmpEPKcS1_m>
    1c8c:	cmp	w0, #0x0
    1c90:	mov	x1, x23
    1c94:	cset	w2, ne  // ne = any
    1c98:	mov	x0, x28
    1c9c:	strb	w2, [sp, #126]
    1ca0:	bl	0 <_ZN11__sanitizer16internal_strcspnEPKcS1_>
    1ca4:	mov	x21, x0
    1ca8:	mov	x2, #0x0                   	// #0
    1cac:	mov	x1, #0x0                   	// #0
    1cb0:	add	x0, x0, #0x1
    1cb4:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
    1cb8:	mov	x27, x0
    1cbc:	mov	x2, x21
    1cc0:	mov	x1, x28
    1cc4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1cc8:	add	x19, x28, x21
    1ccc:	strb	wzr, [x27, x21]
    1cd0:	ldrb	w0, [x28, x21]
    1cd4:	cmp	w0, #0x0
    1cd8:	cinc	x19, x19, ne  // ne = any
    1cdc:	cbz	x27, 1cec <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x3b4>
    1ce0:	mov	x0, x27
    1ce4:	bl	0 <_ZN11__sanitizer14internal_atollEPKc>
    1ce8:	str	x0, [sp, #144]
    1cec:	mov	x0, x27
    1cf0:	mov	x1, #0x0                   	// #0
    1cf4:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
    1cf8:	ldr	x4, [x20, #32]
    1cfc:	mov	x0, #0x2493                	// #9363
    1d00:	movk	x0, #0x9249, lsl #16
    1d04:	movk	x0, #0x4924, lsl #32
    1d08:	lsr	x4, x4, #3
    1d0c:	movk	x0, #0x2492, lsl #48
    1d10:	ldr	x3, [x24, #16]
    1d14:	umulh	x4, x4, x0
    1d18:	cmp	x3, x4
    1d1c:	b.hi	1e70 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x538>  // b.pmore
    1d20:	add	x1, x3, #0x1
    1d24:	b.eq	1d80 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x448>  // b.none
    1d28:	ldr	x21, [x24]
    1d2c:	lsl	x0, x3, #3
    1d30:	sub	x0, x0, x3
    1d34:	str	x1, [x24, #16]
    1d38:	mov	x2, #0x38                  	// #56
    1d3c:	add	x1, sp, #0x60
    1d40:	add	x0, x21, x0, lsl #3
    1d44:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1d48:	ldrb	w0, [x19]
    1d4c:	cbnz	w0, 1abc <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x184>
    1d50:	ldp	x23, x24, [sp, #32]
    1d54:	ldp	x25, x26, [sp, #48]
    1d58:	ldp	x27, x28, [sp, #64]
    1d5c:	mov	w1, #0x1                   	// #1
    1d60:	mov	w0, w1
    1d64:	ldp	x21, x22, [sp, #16]
    1d68:	ldr	x30, [sp, #80]
    1d6c:	ldp	x19, x20, [sp], #224
    1d70:	ret
    1d74:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1d78:	add	x1, x1, #0x0
    1d7c:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1d80:	tst	x1, x3
    1d84:	b.eq	1dc0 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x488>  // b.none
    1d88:	clz	x4, x1
    1d8c:	mov	w0, #0x3f                  	// #63
    1d90:	sub	w0, w0, w4
    1d94:	mov	x2, #0x1                   	// #1
    1d98:	add	w4, w0, #0x1
    1d9c:	lsl	x4, x2, x4
    1da0:	cmp	x1, x4
    1da4:	b.cs	1ec8 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x590>  // b.hs, b.nlast
    1da8:	lsl	x0, x2, x0
    1dac:	cmp	x1, x0
    1db0:	b.ls	1ee4 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x5ac>  // b.plast
    1db4:	cmp	x3, x4
    1db8:	b.hi	1e94 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x55c>  // b.pmore
    1dbc:	mov	x1, x4
    1dc0:	adrp	x28, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1dc4:	lsl	x0, x1, #3
    1dc8:	sub	x1, x0, x1
    1dcc:	ldr	x28, [x28]
    1dd0:	lsl	x21, x1, #3
    1dd4:	ldr	x0, [x28]
    1dd8:	cbz	x0, 1eac <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x574>
    1ddc:	sub	x1, x0, #0x1
    1de0:	tst	x0, x1
    1de4:	b.ne	1eb8 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x580>  // b.any
    1de8:	add	x1, x21, x1
    1dec:	neg	x0, x0
    1df0:	and	x28, x1, x0
    1df4:	mov	w2, #0x0                   	// #0
    1df8:	mov	x0, x28
    1dfc:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e00:	add	x1, x1, #0x0
    1e04:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1e08:	ldr	x3, [x24, #16]
    1e0c:	mov	x21, x0
    1e10:	ldr	x1, [x24]
    1e14:	lsl	x2, x3, #3
    1e18:	sub	x2, x2, x3
    1e1c:	lsl	x2, x2, #3
    1e20:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1e24:	ldp	x0, x1, [x24]
    1e28:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1e2c:	stp	x21, x28, [x24]
    1e30:	ldr	x3, [x24, #16]
    1e34:	add	x1, x3, #0x1
    1e38:	b	1d2c <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x3f4>
    1e3c:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e40:	add	x1, x1, #0x0
    1e44:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1e48:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e4c:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e50:	add	x2, x2, #0x0
    1e54:	add	x0, x0, #0x0
    1e58:	mov	x3, #0x0                   	// #0
    1e5c:	mov	w1, #0x1b5                 	// #437
    1e60:	stp	x23, x24, [sp, #32]
    1e64:	stp	x25, x26, [sp, #48]
    1e68:	stp	x27, x28, [sp, #64]
    1e6c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1e70:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e74:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e78:	add	x2, x2, #0x0
    1e7c:	add	x0, x0, #0x0
    1e80:	mov	w1, #0x1cd                 	// #461
    1e84:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1e88:	adrp	x1, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e8c:	add	x1, x1, #0x0
    1e90:	b	1988 <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x50>
    1e94:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e98:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1e9c:	add	x2, x2, #0x0
    1ea0:	add	x0, x0, #0x0
    1ea4:	mov	w1, #0x20c                 	// #524
    1ea8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1eac:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1eb0:	str	x0, [x28]
    1eb4:	b	1ddc <_ZN11__sanitizer14LLVMSymbolizer14SymbolizeFrameEmPNS_9FrameInfoE+0x4a4>
    1eb8:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ebc:	add	x0, x0, #0x0
    1ec0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    1ec4:	bl	0 <_ZN11__sanitizer3DieEv>
    1ec8:	mov	x3, x1
    1ecc:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ed0:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ed4:	add	x2, x2, #0x0
    1ed8:	add	x0, x0, #0x0
    1edc:	mov	w1, #0x18a                 	// #394
    1ee0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1ee4:	mov	x4, x0
    1ee8:	mov	x3, x1
    1eec:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ef0:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ef4:	add	x2, x2, #0x0
    1ef8:	add	x0, x0, #0x0
    1efc:	mov	w1, #0x18b                 	// #395
    1f00:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1f04:	adrp	x2, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1f08:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1f0c:	add	x2, x2, #0x0
    1f10:	add	x0, x0, #0x0
    1f14:	mov	x4, #0x0                   	// #0
    1f18:	mov	x3, #0x0                   	// #0
    1f1c:	mov	w1, #0x2b8                 	// #696
    1f20:	stp	x23, x24, [sp, #32]
    1f24:	stp	x25, x26, [sp, #48]
    1f28:	stp	x27, x28, [sp, #64]
    1f2c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001f30 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc>:
    1f30:	stp	x19, x20, [sp, #-48]!
    1f34:	mov	x19, x0
    1f38:	ldr	w0, [x0, #16]
    1f3c:	str	x30, [sp, #24]
    1f40:	cmn	w0, #0x1
    1f44:	b.eq	200c <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xdc>  // b.none
    1f48:	ldr	w0, [x19, #20]
    1f4c:	cmn	w0, #0x1
    1f50:	b.eq	200c <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xdc>  // b.none
    1f54:	mov	x20, x1
    1f58:	mov	x0, x1
    1f5c:	str	x21, [sp, #16]
    1f60:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    1f64:	mov	x21, x0
    1f68:	cbnz	x0, 1fb4 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x84>
    1f6c:	mov	x20, x19
    1f70:	adrp	x0, 138 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>
    1f74:	add	x0, x0, #0x0
    1f78:	ldr	x1, [x20], #24
    1f7c:	ldr	x3, [x1, #8]
    1f80:	cmp	x3, x0
    1f84:	b.ne	2020 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xf0>  // b.any
    1f88:	mov	x0, x19
    1f8c:	mov	x1, x20
    1f90:	mov	x2, #0x4000                	// #16384
    1f94:	bl	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1f98:	and	w0, w0, #0xff
    1f9c:	ldr	x21, [sp, #16]
    1fa0:	cbz	w0, 200c <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xdc>
    1fa4:	mov	x0, x20
    1fa8:	ldr	x30, [sp, #24]
    1fac:	ldp	x19, x20, [sp], #48
    1fb0:	ret
    1fb4:	mov	x2, x0
    1fb8:	ldr	w0, [x19, #20]
    1fbc:	mov	x1, x20
    1fc0:	add	x3, sp, #0x28
    1fc4:	mov	x4, #0x0                   	// #0
    1fc8:	str	xzr, [sp, #40]
    1fcc:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
    1fd0:	tst	w0, #0xff
    1fd4:	b.eq	1fe4 <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0xb4>  // b.none
    1fd8:	ldr	x0, [sp, #40]
    1fdc:	cmp	x21, x0
    1fe0:	b.eq	1f6c <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x3c>  // b.none
    1fe4:	ldr	w1, [x19, #20]
    1fe8:	mov	x20, #0x0                   	// #0
    1fec:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    1ff0:	add	x0, x0, #0x0
    1ff4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1ff8:	mov	x0, x20
    1ffc:	ldr	x21, [sp, #16]
    2000:	ldr	x30, [sp, #24]
    2004:	ldp	x19, x20, [sp], #48
    2008:	ret
    200c:	mov	x20, #0x0                   	// #0
    2010:	mov	x0, x20
    2014:	ldr	x30, [sp, #24]
    2018:	ldp	x19, x20, [sp], #48
    201c:	ret
    2020:	mov	x0, x19
    2024:	mov	x1, x20
    2028:	mov	x2, #0x4000                	// #16384
    202c:	blr	x3
    2030:	and	w0, w0, #0xff
    2034:	b	1f9c <_ZN11__sanitizer17SymbolizerProcess15SendCommandImplEPKc+0x6c>

0000000000002038 <_ZN11__sanitizer17SymbolizerProcess7RestartEv>:
    2038:	stp	x19, x30, [sp, #-16]!
    203c:	mov	x19, x0
    2040:	ldr	w0, [x0, #16]
    2044:	cmn	w0, #0x1
    2048:	b.eq	2050 <_ZN11__sanitizer17SymbolizerProcess7RestartEv+0x18>  // b.none
    204c:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    2050:	ldr	w0, [x19, #20]
    2054:	cmn	w0, #0x1
    2058:	b.eq	2060 <_ZN11__sanitizer17SymbolizerProcess7RestartEv+0x28>  // b.none
    205c:	bl	0 <_ZN11__sanitizer9CloseFileEi>
    2060:	ldr	x1, [x19]
    2064:	mov	x0, x19
    2068:	ldp	x19, x30, [sp], #16
    206c:	ldr	x1, [x1]
    2070:	mov	x16, x1
    2074:	br	x16

0000000000002078 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm>:
    2078:	cbnz	x2, 2084 <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0xc>
    207c:	mov	w0, #0x1                   	// #1
    2080:	ret
    2084:	stp	x19, x20, [sp, #-48]!
    2088:	mov	x20, x0
    208c:	mov	x19, x2
    2090:	ldr	w0, [x0, #20]
    2094:	add	x3, sp, #0x28
    2098:	mov	x4, #0x0                   	// #0
    209c:	str	x30, [sp, #16]
    20a0:	str	xzr, [sp, #40]
    20a4:	bl	0 <_ZN11__sanitizer11WriteToFileEiPKvmPmPi>
    20a8:	tst	w0, #0xff
    20ac:	b.eq	20cc <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0x54>  // b.none
    20b0:	ldr	x0, [sp, #40]
    20b4:	cmp	x0, x19
    20b8:	b.ne	20cc <_ZN11__sanitizer17SymbolizerProcess17WriteToSymbolizerEPKcm+0x54>  // b.any
    20bc:	mov	w0, #0x1                   	// #1
    20c0:	ldr	x30, [sp, #16]
    20c4:	ldp	x19, x20, [sp], #48
    20c8:	ret
    20cc:	ldr	w1, [x20, #20]
    20d0:	adrp	x0, 0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm.part.0>
    20d4:	add	x0, x0, #0x0
    20d8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    20dc:	mov	w0, #0x0                   	// #0
    20e0:	ldr	x30, [sp, #16]
    20e4:	ldp	x19, x20, [sp], #48
    20e8:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool8DemangleEPKc>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm:

0000000000000000 <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm>:
   0:	cmp	x2, #0x1
   4:	mov	w0, #0x0                   	// #0
   8:	b.ls	1c <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm+0x1c>  // b.plast
   c:	add	x1, x1, x2
  10:	ldurb	w2, [x1, #-1]
  14:	cmp	w2, #0xa
  18:	b.eq	20 <_ZNK11__sanitizer21LLVMSymbolizerProcess18ReachedEndOfOutputEPKcm+0x20>  // b.none
  1c:	ret
  20:	ldurb	w0, [x1, #-2]
  24:	cmp	w0, #0xa
  28:	cset	w0, eq  // eq = none
  2c:	ret

Disassembly of section .text._ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>:
   0:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
   4:	adrp	x0, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
   8:	adrp	x4, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
   c:	add	x4, x4, #0x0
  10:	ldr	x5, [x3]
  14:	add	x3, x0, #0x0
  18:	adrp	x0, 0 <_ZNK11__sanitizer21LLVMSymbolizerProcess7GetArgVEPKcRA6_S2_>
  1c:	add	x0, x0, #0x0
  20:	ldrb	w5, [x5, #188]
  24:	stp	x4, xzr, [x2, #16]
  28:	cmp	w5, #0x0
  2c:	csel	x0, x0, x3, ne  // ne = any
  30:	stp	x1, x0, [x2]
  34:	ret

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

sanitizer_symbolizer_mac.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer_markup.cpp.o:     file format elf64-littleaarch64


sanitizer_symbolizer_posix_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>:
   0:	cmp	x2, #0x8
   4:	b.hi	10 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm+0x10>  // b.pmore
   8:	mov	w0, #0x0                   	// #0
   c:	ret
  10:	adrp	x3, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
  14:	str	x30, [sp, #-16]!
  18:	sub	x2, x2, #0x8
  1c:	add	x0, x1, x2
  20:	add	x1, x3, #0x0
  24:	mov	x2, #0x8                   	// #8
  28:	bl	0 <_ZN11__sanitizer15internal_memcmpEPKvS1_m>
  2c:	cmp	w0, #0x0
  30:	cset	w0, eq  // eq = none
  34:	ldr	x30, [sp], #16
  38:	ret
  3c:	nop

0000000000000040 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv>:
  40:	stp	x19, x20, [sp, #-160]!
  44:	mov	x19, x0
  48:	ldr	x0, [x0, #8]
  4c:	stp	x23, x24, [sp, #32]
  50:	str	x30, [sp, #56]
  54:	bl	0 <_ZN11__sanitizer10FileExistsEPKc>
  58:	ands	w24, w0, #0xff
  5c:	b.eq	114 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xd4>  // b.none
  60:	ldp	x2, x1, [x19]
  64:	stp	x21, x22, [sp, #16]
  68:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
  6c:	add	x0, x0, #0x0
  70:	ldr	x3, [x2, #24]
  74:	str	x25, [sp, #48]
  78:	cmp	x3, x0
  7c:	b.ne	154 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x114>  // b.any
  80:	ldr	x2, [x19, #16424]
  84:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
  88:	add	x0, x0, #0x0
  8c:	stp	x1, x0, [sp, #112]
  90:	stp	x2, xzr, [sp, #128]
  94:	add	x0, x19, #0x4, lsl #12
  98:	ldrb	w24, [x0, #34]
  9c:	cbnz	w24, 2d0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x290>
  a0:	add	x23, sp, #0x48
  a4:	mov	x22, #0x0                   	// #0
  a8:	mov	x20, x23
  ac:	mov	w21, #0x0                   	// #0
  b0:	mov	x0, x20
  b4:	bl	0 <pipe>
  b8:	cmn	w0, #0x1
  bc:	b.eq	18c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x14c>  // b.none
  c0:	ldr	w0, [x20]
  c4:	cmp	w0, #0x2
  c8:	b.le	e0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xa0>
  cc:	ldr	w0, [x20, #4]
  d0:	cmp	w0, #0x2
  d4:	b.le	e0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xa0>
  d8:	cbnz	x22, 1e8 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1a8>
  dc:	mov	x22, x20
  e0:	add	w21, w21, #0x1
  e4:	add	x20, x20, #0x8
  e8:	cmp	w21, #0x5
  ec:	b.ne	b0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x70>  // b.any
  f0:	cbnz	x22, 134 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xf4>
  f4:	adrp	x2, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
  f8:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
  fc:	add	x2, x2, #0x0
 100:	add	x0, x0, #0x0
 104:	mov	x4, #0x0                   	// #0
 108:	mov	x3, #0x0                   	// #0
 10c:	mov	w1, #0x84                  	// #132
 110:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 114:	add	x19, x19, #0x4, lsl #12
 118:	ldrb	w0, [x19, #33]
 11c:	cbz	w0, 164 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x124>
 120:	mov	w0, w24
 124:	ldp	x23, x24, [sp, #32]
 128:	ldr	x30, [sp, #56]
 12c:	ldp	x19, x20, [sp], #160
 130:	ret
 134:	adrp	x2, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 138:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 13c:	add	x2, x2, #0x0
 140:	add	x0, x0, #0x0
 144:	mov	x4, #0x0                   	// #0
 148:	mov	x3, #0x0                   	// #0
 14c:	mov	w1, #0x85                  	// #133
 150:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 154:	add	x2, sp, #0x70
 158:	mov	x0, x19
 15c:	blr	x3
 160:	b	94 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x54>
 164:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 168:	add	x0, x0, #0x0
 16c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 170:	mov	w0, #0x1                   	// #1
 174:	strb	w0, [x19, #33]
 178:	mov	w0, w24
 17c:	ldp	x23, x24, [sp, #32]
 180:	ldr	x30, [sp, #56]
 184:	ldp	x19, x20, [sp], #160
 188:	ret
 18c:	cbz	w21, 1b4 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x174>
 190:	mov	w19, #0x0                   	// #0
 194:	ldr	w0, [x23]
 198:	add	w19, w19, #0x1
 19c:	add	x23, x23, #0x8
 1a0:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 1a4:	ldur	w0, [x23, #-4]
 1a8:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 1ac:	cmp	w19, w21
 1b0:	b.ne	194 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x154>  // b.any
 1b4:	bl	0 <__errno_location>
 1b8:	mov	x1, x0
 1bc:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 1c0:	add	x0, x0, #0x0
 1c4:	ldr	w1, [x1]
 1c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 1cc:	mov	w0, w24
 1d0:	ldp	x21, x22, [sp, #16]
 1d4:	ldp	x23, x24, [sp, #32]
 1d8:	ldr	x25, [sp, #48]
 1dc:	ldr	x30, [sp, #56]
 1e0:	ldp	x19, x20, [sp], #160
 1e4:	ret
 1e8:	cbz	w21, 218 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1d8>
 1ec:	mov	w25, #0x0                   	// #0
 1f0:	cmp	x23, x22
 1f4:	b.eq	208 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1c8>  // b.none
 1f8:	ldr	w0, [x23]
 1fc:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 200:	ldr	w0, [x23, #4]
 204:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 208:	add	w25, w25, #0x1
 20c:	add	x23, x23, #0x8
 210:	cmp	w25, w21
 214:	b.ne	1f0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x1b0>  // b.any
 218:	ldr	w2, [x20]
 21c:	add	x1, sp, #0x70
 220:	ldp	w21, w3, [x22]
 224:	mov	w4, #0xffffffff            	// #-1
 228:	ldr	x0, [x19, #8]
 22c:	ldr	w22, [x20, #4]
 230:	bl	0 <_ZN11__sanitizer15StartSubprocessEPKcPKS1_iii>
 234:	mov	w20, w0
 238:	cmp	w0, #0x0
 23c:	b.lt	294 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x254>  // b.tstop
 240:	stp	w21, w22, [x19, #16]
 244:	b.eq	2b0 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x270>  // b.none
 248:	mov	w0, #0xa                   	// #10
 24c:	bl	0 <_ZN11__sanitizer14SleepForMillisEi>
 250:	mov	w0, w20
 254:	bl	0 <_ZN11__sanitizer16IsProcessRunningEi>
 258:	ands	w24, w0, #0xff
 25c:	b.eq	27c <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0x23c>  // b.none
 260:	mov	w0, w24
 264:	ldp	x21, x22, [sp, #16]
 268:	ldp	x23, x24, [sp, #32]
 26c:	ldr	x25, [sp, #48]
 270:	ldr	x30, [sp, #56]
 274:	ldp	x19, x20, [sp], #160
 278:	ret
 27c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 280:	add	x0, x0, #0x0
 284:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 288:	ldp	x21, x22, [sp, #16]
 28c:	ldr	x25, [sp, #48]
 290:	b	120 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xe0>
 294:	mov	w0, w21
 298:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 29c:	mov	w0, w22
 2a0:	bl	0 <_ZN11__sanitizer14internal_closeEi>
 2a4:	ldp	x21, x22, [sp, #16]
 2a8:	ldr	x25, [sp, #48]
 2ac:	b	120 <_ZN11__sanitizer17SymbolizerProcess25StartSymbolizerSubprocessEv+0xe0>
 2b0:	adrp	x2, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 2b4:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 2b8:	add	x2, x2, #0x0
 2bc:	add	x0, x0, #0x0
 2c0:	mov	x4, #0x0                   	// #0
 2c4:	mov	x3, #0x0                   	// #0
 2c8:	mov	w1, #0xbc                  	// #188
 2cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2d0:	adrp	x2, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 2d4:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 2d8:	add	x2, x2, #0x0
 2dc:	add	x0, x0, #0x0
 2e0:	mov	x4, #0x0                   	// #0
 2e4:	mov	x3, #0x0                   	// #0
 2e8:	mov	w1, #0xa6                  	// #166
 2ec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002f0 <_ZN11__sanitizer14DemangleCXXABIEPKc>:
 2f0:	adrp	x1, 0 <__cxa_demangle>
 2f4:	stp	x19, x30, [sp, #-16]!
 2f8:	mov	x19, x0
 2fc:	ldr	x1, [x1]
 300:	cbz	x1, 320 <_ZN11__sanitizer14DemangleCXXABIEPKc+0x30>
 304:	mov	x3, #0x0                   	// #0
 308:	mov	x2, #0x0                   	// #0
 30c:	mov	x1, #0x0                   	// #0
 310:	bl	0 <__cxa_demangle>
 314:	cbz	x0, 320 <_ZN11__sanitizer14DemangleCXXABIEPKc+0x30>
 318:	ldp	x19, x30, [sp], #16
 31c:	ret
 320:	mov	x0, x19
 324:	ldp	x19, x30, [sp], #16
 328:	ret
 32c:	nop

0000000000000330 <_ZN11__sanitizer13DemangleSwiftEPKc>:
 330:	cbz	x0, 39c <_ZN11__sanitizer13DemangleSwiftEPKc+0x6c>
 334:	stp	x19, x20, [sp, #-32]!
 338:	mov	x19, x0
 33c:	str	x30, [sp, #16]
 340:	ldrb	w1, [x0]
 344:	cmp	w1, #0x5f
 348:	b.ne	38c <_ZN11__sanitizer13DemangleSwiftEPKc+0x5c>  // b.any
 34c:	ldrb	w1, [x0, #1]
 350:	cmp	w1, #0x54
 354:	b.ne	38c <_ZN11__sanitizer13DemangleSwiftEPKc+0x5c>  // b.any
 358:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 35c:	ldr	x20, [x1]
 360:	cbz	x20, 38c <_ZN11__sanitizer13DemangleSwiftEPKc+0x5c>
 364:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 368:	mov	x1, x0
 36c:	mov	x16, x20
 370:	mov	x0, x19
 374:	ldr	x30, [sp, #16]
 378:	mov	w4, #0x0                   	// #0
 37c:	ldp	x19, x20, [sp], #32
 380:	mov	x3, #0x0                   	// #0
 384:	mov	x2, #0x0                   	// #0
 388:	br	x16
 38c:	mov	x0, #0x0                   	// #0
 390:	ldr	x30, [sp, #16]
 394:	ldp	x19, x20, [sp], #32
 398:	ret
 39c:	mov	x0, #0x0                   	// #0
 3a0:	ret
 3a4:	nop

00000000000003a8 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc>:
 3a8:	cbz	x0, 43c <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x94>
 3ac:	stp	x19, x20, [sp, #-32]!
 3b0:	mov	x19, x0
 3b4:	str	x30, [sp, #16]
 3b8:	ldrb	w1, [x0]
 3bc:	cmp	w1, #0x5f
 3c0:	b.ne	408 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x60>  // b.any
 3c4:	ldrb	w1, [x0, #1]
 3c8:	cmp	w1, #0x54
 3cc:	b.ne	408 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x60>  // b.any
 3d0:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 3d4:	ldr	x20, [x1]
 3d8:	cbz	x20, 408 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x60>
 3dc:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 3e0:	mov	x1, x0
 3e4:	mov	w4, #0x0                   	// #0
 3e8:	mov	x0, x19
 3ec:	mov	x3, #0x0                   	// #0
 3f0:	mov	x2, #0x0                   	// #0
 3f4:	blr	x20
 3f8:	cbz	x0, 408 <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x60>
 3fc:	ldr	x30, [sp, #16]
 400:	ldp	x19, x20, [sp], #32
 404:	ret
 408:	adrp	x0, 0 <__cxa_demangle>
 40c:	ldr	x0, [x0]
 410:	cbz	x0, 42c <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x84>
 414:	mov	x0, x19
 418:	mov	x3, #0x0                   	// #0
 41c:	mov	x2, #0x0                   	// #0
 420:	mov	x1, #0x0                   	// #0
 424:	bl	0 <__cxa_demangle>
 428:	cbnz	x0, 3fc <_ZN11__sanitizer19DemangleSwiftAndCXXEPKc+0x54>
 42c:	mov	x0, x19
 430:	ldr	x30, [sp, #16]
 434:	ldp	x19, x20, [sp], #32
 438:	ret
 43c:	mov	x0, #0x0                   	// #0
 440:	ret
 444:	nop

0000000000000448 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc>:
 448:	cbz	x1, 4e0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x98>
 44c:	stp	x19, x20, [sp, #-32]!
 450:	mov	x19, x1
 454:	str	x30, [sp, #16]
 458:	ldrb	w0, [x1]
 45c:	cmp	w0, #0x5f
 460:	b.ne	4ac <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>  // b.any
 464:	ldrb	w0, [x1, #1]
 468:	cmp	w0, #0x54
 46c:	b.ne	4ac <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>  // b.any
 470:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 474:	ldr	x20, [x0]
 478:	cbz	x20, 4ac <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>
 47c:	mov	x0, x1
 480:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
 484:	mov	w4, #0x0                   	// #0
 488:	mov	x1, x0
 48c:	mov	x3, #0x0                   	// #0
 490:	mov	x0, x19
 494:	mov	x2, #0x0                   	// #0
 498:	blr	x20
 49c:	cbz	x0, 4ac <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x64>
 4a0:	ldr	x30, [sp, #16]
 4a4:	ldp	x19, x20, [sp], #32
 4a8:	ret
 4ac:	adrp	x0, 0 <__cxa_demangle>
 4b0:	ldr	x0, [x0]
 4b4:	cbz	x0, 4d0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x88>
 4b8:	mov	x0, x19
 4bc:	mov	x3, #0x0                   	// #0
 4c0:	mov	x2, #0x0                   	// #0
 4c4:	mov	x1, #0x0                   	// #0
 4c8:	bl	0 <__cxa_demangle>
 4cc:	cbnz	x0, 4a0 <_ZN11__sanitizer10Symbolizer16PlatformDemangleEPKc+0x58>
 4d0:	mov	x0, x19
 4d4:	ldr	x30, [sp, #16]
 4d8:	ldp	x19, x20, [sp], #32
 4dc:	ret
 4e0:	mov	x0, #0x0                   	// #0
 4e4:	ret

00000000000004e8 <_ZN11__sanitizer10Symbolizer12PlatformInitEv>:
 4e8:	stp	x19, x20, [sp, #-128]!
 4ec:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 4f0:	ldr	x0, [x20]
 4f4:	stp	x21, x22, [sp, #16]
 4f8:	ldrb	w0, [x0]
 4fc:	str	x30, [sp, #48]
 500:	cbnz	w0, 58c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xa4>
 504:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 508:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 50c:	ldr	x0, [x0]
 510:	ldr	w0, [x0]
 514:	sxtw	x0, w0
 518:	cmp	x0, #0x1
 51c:	b.hi	570 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x88>  // b.pmore
 520:	mov	x19, #0x0                   	// #0
 524:	mov	x2, #0x0                   	// #0
 528:	dup	v0.2d, x19
 52c:	mov	x1, #0xf0                  	// #240
 530:	ldr	x0, [x22]
 534:	str	x2, [sp, #96]
 538:	stur	q0, [sp, #104]
 53c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 540:	ldp	x4, x5, [sp, #96]
 544:	mov	x19, x0
 548:	ldr	x2, [sp, #112]
 54c:	add	x1, sp, #0x40
 550:	stp	x4, x5, [sp, #64]
 554:	str	x2, [sp, #80]
 558:	bl	0 <_ZN11__sanitizer10SymbolizerC1ENS_13IntrusiveListINS_14SymbolizerToolEEE>
 55c:	mov	x0, x19
 560:	ldp	x21, x22, [sp, #16]
 564:	ldr	x30, [sp, #48]
 568:	ldp	x19, x20, [sp], #128
 56c:	ret
 570:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 574:	add	x0, x0, #0x0
 578:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 57c:	mov	x19, #0x0                   	// #0
 580:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 584:	mov	x2, #0x0                   	// #0
 588:	b	528 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x40>
 58c:	bl	0 <_ZN11__sanitizer22IsAllocatorOutOfMemoryEv>
 590:	tst	w0, #0xff
 594:	b.eq	5e8 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x100>  // b.none
 598:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 59c:	ldr	x0, [x0]
 5a0:	ldr	w0, [x0]
 5a4:	sxtw	x0, w0
 5a8:	cmp	x0, #0x1
 5ac:	b.hi	64c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x164>  // b.pmore
 5b0:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 5b4:	ldr	x0, [x22]
 5b8:	bl	0 <_ZN11__sanitizer22LibbacktraceSymbolizer3getEPNS_17LowLevelAllocatorE>
 5bc:	mov	x19, x0
 5c0:	cbz	x0, 66c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x184>
 5c4:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 5c8:	ldr	x0, [x0]
 5cc:	ldr	w0, [x0]
 5d0:	sxtw	x0, w0
 5d4:	cmp	x0, #0x1
 5d8:	b.hi	65c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x174>  // b.pmore
 5dc:	mov	x2, #0x1                   	// #1
 5e0:	str	xzr, [x19, #8]
 5e4:	b	528 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x40>
 5e8:	adrp	x1, 0 <__sanitizer_symbolize_data>
 5ec:	adrp	x0, 0 <__sanitizer_symbolize_code>
 5f0:	ldr	x1, [x1]
 5f4:	ldr	x0, [x0]
 5f8:	cmp	x1, #0x0
 5fc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
 600:	b.eq	5b0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xc8>  // b.none
 604:	adrp	x22, 0 <_ZN11__sanitizer10Symbolizer21symbolizer_allocator_E>
 608:	mov	x1, #0x4010                	// #16400
 60c:	ldr	x0, [x22]
 610:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 614:	mov	x19, x0
 618:	adrp	x1, 0 <_ZN11__sanitizer17current_verbosityE>
 61c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 620:	add	x0, x0, #0x0
 624:	ldr	x1, [x1]
 628:	stp	x0, xzr, [x19]
 62c:	ldr	w0, [x1]
 630:	sxtw	x0, w0
 634:	cmp	x0, #0x1
 638:	b.ls	5dc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xf4>  // b.plast
 63c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 640:	add	x0, x0, #0x0
 644:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 648:	b	5dc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xf4>
 64c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 650:	add	x0, x0, #0x0
 654:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 658:	b	5b0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xc8>
 65c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 660:	add	x0, x0, #0x0
 664:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 668:	b	5dc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0xf4>
 66c:	ldr	x0, [x20]
 670:	stp	x23, x24, [sp, #32]
 674:	ldr	x23, [x0, #8]
 678:	cbz	x23, 708 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x220>
 67c:	mov	x0, x23
 680:	bl	0 <_ZN11__sanitizer15StripModuleNameEPKc>
 684:	ldrb	w1, [x23]
 688:	mov	x21, x0
 68c:	cbz	w1, 7fc <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x314>
 690:	adrp	x19, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 694:	add	x19, x19, #0x0
 698:	mov	x1, x19
 69c:	mov	x0, x21
 6a0:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 6a4:	cbnz	w0, 714 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x22c>
 6a8:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 6ac:	ldr	x0, [x0]
 6b0:	ldr	w0, [x0]
 6b4:	sxtw	x0, w0
 6b8:	cmp	x0, #0x1
 6bc:	b.hi	6f4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x20c>  // b.pmore
 6c0:	ldr	x20, [x22]
 6c4:	mov	x1, #0x4018                	// #16408
 6c8:	mov	x0, x20
 6cc:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 6d0:	mov	x2, x20
 6d4:	mov	x1, x23
 6d8:	mov	x19, x0
 6dc:	bl	0 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE>
 6e0:	cbz	x19, 7f4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x30c>
 6e4:	mov	x2, #0x1                   	// #1
 6e8:	ldp	x23, x24, [sp, #32]
 6ec:	str	xzr, [x19, #8]
 6f0:	b	528 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x40>
 6f4:	mov	x1, x23
 6f8:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 6fc:	add	x0, x0, #0x0
 700:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 704:	b	6c0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1d8>
 708:	adrp	x21, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 70c:	add	x21, x21, #0x0
 710:	b	690 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1a8>
 714:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 718:	mov	x0, x21
 71c:	add	x1, x1, #0x0
 720:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 724:	cbz	w0, 93c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x454>
 728:	adrp	x24, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 72c:	add	x24, x24, #0x0
 730:	mov	x0, x21
 734:	mov	x1, x24
 738:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
 73c:	cbnz	w0, 82c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x344>
 740:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 744:	ldr	x0, [x0]
 748:	ldr	w0, [x0]
 74c:	sxtw	x0, w0
 750:	cmp	x0, #0x1
 754:	b.ls	768 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x280>  // b.plast
 758:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 75c:	mov	x1, x23
 760:	add	x0, x0, #0x0
 764:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 768:	ldr	x20, [x22]
 76c:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 770:	mov	x1, #0x38                  	// #56
 774:	mov	x0, x20
 778:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 77c:	ldr	x21, [x21]
 780:	mov	x19, x0
 784:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 788:	add	x0, x0, #0x0
 78c:	stp	x0, xzr, [x19]
 790:	ldr	x0, [x21]
 794:	stp	x23, x20, [x19, #16]
 798:	str	xzr, [x19, #32]
 79c:	stp	xzr, xzr, [x19, #40]
 7a0:	cbz	x0, 90c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x424>
 7a4:	sub	x1, x0, #0x1
 7a8:	tst	x1, x0
 7ac:	b.ne	918 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x430>  // b.any
 7b0:	add	x20, x0, #0x7f
 7b4:	neg	x0, x0
 7b8:	and	x20, x20, x0
 7bc:	mov	w2, #0x0                   	// #0
 7c0:	mov	x0, x20
 7c4:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 7c8:	add	x1, x1, #0x0
 7cc:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 7d0:	ldr	x1, [x19, #32]
 7d4:	mov	x23, x0
 7d8:	ldr	x2, [x19, #48]
 7dc:	lsl	x2, x2, #3
 7e0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 7e4:	ldp	x0, x1, [x19, #32]
 7e8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 7ec:	stp	x23, x20, [x19, #32]
 7f0:	b	6e4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1fc>
 7f4:	ldp	x23, x24, [sp, #32]
 7f8:	b	520 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x38>
 7fc:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 800:	ldr	x0, [x0]
 804:	ldr	w0, [x0]
 808:	sxtw	x0, w0
 80c:	cmp	x0, #0x1
 810:	b.ls	7f4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x30c>  // b.plast
 814:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 818:	add	x0, x0, #0x0
 81c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 820:	mov	x2, #0x0                   	// #0
 824:	ldp	x23, x24, [sp, #32]
 828:	b	528 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x40>
 82c:	cbnz	x23, 928 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x440>
 830:	mov	x0, x19
 834:	bl	0 <_ZN11__sanitizer16FindPathToBinaryEPKc>
 838:	mov	x21, x0
 83c:	cbz	x0, 88c <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x3a4>
 840:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 844:	ldr	x0, [x0]
 848:	ldr	w0, [x0]
 84c:	sxtw	x0, w0
 850:	cmp	x0, #0x1
 854:	b.ls	868 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x380>  // b.plast
 858:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 85c:	mov	x1, x21
 860:	add	x0, x0, #0x0
 864:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 868:	ldr	x20, [x22]
 86c:	mov	x1, #0x4018                	// #16408
 870:	mov	x0, x20
 874:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 878:	mov	x2, x20
 87c:	mov	x1, x21
 880:	mov	x19, x0
 884:	bl	0 <_ZN11__sanitizer14LLVMSymbolizerC1EPKcPNS_17LowLevelAllocatorE>
 888:	b	6e0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x1f8>
 88c:	ldr	x20, [x20]
 890:	ldrb	w0, [x20, #16]
 894:	cbz	w0, 7f4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x30c>
 898:	mov	x0, x24
 89c:	bl	0 <_ZN11__sanitizer16FindPathToBinaryEPKc>
 8a0:	mov	x20, x0
 8a4:	cbz	x0, 7f4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x30c>
 8a8:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 8ac:	ldr	x0, [x0]
 8b0:	ldr	w0, [x0]
 8b4:	sxtw	x0, w0
 8b8:	cmp	x0, #0x1
 8bc:	b.ls	8d0 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x3e8>  // b.plast
 8c0:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 8c4:	mov	x1, x20
 8c8:	add	x0, x0, #0x0
 8cc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 8d0:	ldr	x23, [x22]
 8d4:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
 8d8:	mov	x1, #0x38                  	// #56
 8dc:	mov	x0, x23
 8e0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
 8e4:	ldr	x21, [x21]
 8e8:	mov	x19, x0
 8ec:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 8f0:	add	x0, x0, #0x0
 8f4:	stp	x0, xzr, [x19]
 8f8:	ldr	x0, [x21]
 8fc:	stp	x20, x23, [x19, #16]
 900:	str	xzr, [x19, #32]
 904:	stp	xzr, xzr, [x19, #40]
 908:	cbnz	x0, 7a4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x2bc>
 90c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 910:	str	x0, [x21]
 914:	b	7a4 <_ZN11__sanitizer10Symbolizer12PlatformInitEv+0x2bc>
 918:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 91c:	add	x0, x0, #0x0
 920:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 924:	bl	0 <_ZN11__sanitizer3DieEv>
 928:	mov	x1, x23
 92c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 930:	add	x0, x0, #0x0
 934:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 938:	bl	0 <_ZN11__sanitizer3DieEv>
 93c:	adrp	x0, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 940:	add	x0, x0, #0x0
 944:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 948:	bl	0 <_ZN11__sanitizer3DieEv>
 94c:	nop

0000000000000950 <_ZN11__sanitizer10Symbolizer14LateInitializeEv>:
 950:	str	x30, [sp, #-16]!
 954:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
 958:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 95c:	mov	x0, #0x0                   	// #0
 960:	add	x1, x1, #0x0
 964:	bl	0 <dlsym>
 968:	ldr	x30, [sp], #16
 96c:	adrp	x1, 0 <_ZNK11__sanitizer16Addr2LineProcess18ReachedEndOfOutputEPKcm>
 970:	str	x0, [x1]
 974:	b	0 <dlerror>

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool14SymbolizeFrameEmPNS_9FrameInfoE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool5FlushEv:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool5FlushEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer14SymbolizerTool8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer14SymbolizerTool8DemangleEPKc>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_>:
   0:	adrp	x3, 0 <_ZNK11__sanitizer16Addr2LineProcess7GetArgVEPKcRA6_S2_>
   4:	add	x3, x3, #0x0
   8:	stp	x1, x3, [x2]
   c:	ldr	x0, [x0, #16424]
  10:	stp	x0, xzr, [x2, #16]
  14:	ret

Disassembly of section .text._ZN11__sanitizer13Addr2LinePool13SymbolizeDataEmPNS_8DataInfoE:

0000000000000000 <_ZN11__sanitizer13Addr2LinePool13SymbolizeDataEmPNS_8DataInfoE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer5FlushEv:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer5FlushEv>:
   0:	adrp	x0, 0 <__sanitizer_symbolize_flush>
   4:	ldr	x0, [x0]
   8:	cbz	x0, 10 <_ZN11__sanitizer18InternalSymbolizer5FlushEv+0x10>
   c:	b	0 <__sanitizer_symbolize_flush>
  10:	ret

Disassembly of section .text._ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_:

0000000000000000 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x2, 0 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>
   8:	adrp	x0, 0 <_ZNK11__sanitizer17SymbolizerProcess7GetArgVEPKcRA6_S2_>
   c:	add	x2, x2, #0x0
  10:	add	x0, x0, #0x0
  14:	mov	x4, #0x0                   	// #0
  18:	mov	x3, #0x0                   	// #0
  1c:	mov	w1, #0x62                  	// #98
  20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm:

0000000000000000 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>:
   0:	str	x30, [sp, #-16]!
   4:	adrp	x2, 0 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>
   8:	adrp	x0, 0 <_ZNK11__sanitizer17SymbolizerProcess18ReachedEndOfOutputEPKcm>
   c:	add	x2, x2, #0x0
  10:	add	x0, x0, #0x0
  14:	mov	x4, #0x0                   	// #0
  18:	mov	x3, #0x0                   	// #0
  1c:	mov	w1, #0x5c                  	// #92
  20:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x19, x2
   8:	mov	w3, #0x4000                	// #16384
   c:	stp	x21, x22, [sp, #16]
  10:	add	x22, x0, #0x10
  14:	mov	x21, x1
  18:	ldp	x0, x1, [x19]
  1c:	mov	x2, x22
  20:	str	x30, [sp, #32]
  24:	bl	0 <__sanitizer_symbolize_data>
  28:	mov	w20, w0
  2c:	tst	w0, #0xff
  30:	b.ne	48 <_ZN11__sanitizer18InternalSymbolizer13SymbolizeDataEmPNS_8DataInfoE+0x48>  // b.any
  34:	mov	w0, w20
  38:	ldp	x21, x22, [sp, #16]
  3c:	ldr	x30, [sp, #32]
  40:	ldp	x19, x20, [sp], #48
  44:	ret
  48:	mov	x0, x22
  4c:	mov	x1, x19
  50:	bl	0 <_ZN11__sanitizer24ParseSymbolizeDataOutputEPKcPNS_8DataInfoE>
  54:	ldr	x1, [x19, #48]
  58:	ldr	x0, [x19, #8]
  5c:	add	x1, x21, x1
  60:	ldp	x21, x22, [sp, #16]
  64:	sub	x1, x1, x0
  68:	str	x1, [x19, #48]
  6c:	mov	w0, w20
  70:	ldr	x30, [sp, #32]
  74:	ldp	x19, x20, [sp], #48
  78:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x19, x2
   8:	mov	w3, #0x4000                	// #16384
   c:	stp	x21, x30, [sp, #16]
  10:	add	x21, x0, #0x10
  14:	mov	x2, x21
  18:	ldp	x0, x1, [x19, #16]
  1c:	bl	0 <__sanitizer_symbolize_code>
  20:	mov	w20, w0
  24:	tst	w0, #0xff
  28:	b.ne	3c <_ZN11__sanitizer18InternalSymbolizer11SymbolizePCEmPNS_15SymbolizedStackE+0x3c>  // b.any
  2c:	mov	w0, w20
  30:	ldp	x21, x30, [sp, #16]
  34:	ldp	x19, x20, [sp], #32
  38:	ret
  3c:	mov	x1, x19
  40:	mov	x0, x21
  44:	bl	0 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
  48:	mov	w0, w20
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret

Disassembly of section .text._ZN11__sanitizer18InternalSymbolizer8DemangleEPKc:

0000000000000000 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc>:
   0:	adrp	x0, 0 <__sanitizer_symbolize_demangle>
   4:	stp	x19, x20, [sp, #-32]!
   8:	mov	x20, x1
   c:	ldr	x0, [x0]
  10:	str	x30, [sp, #24]
  14:	cbz	x0, 80 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x80>
  18:	str	x21, [sp, #16]
  1c:	mov	x21, #0x400                 	// #1024
  20:	mov	x2, #0x0                   	// #0
  24:	mov	x1, #0x0                   	// #0
  28:	mov	x0, x21
  2c:	bl	0 <_ZN11__sanitizer13InternalAllocEmPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEEm>
  30:	mov	x19, x0
  34:	mov	w2, w21
  38:	mov	x0, x20
  3c:	mov	x1, x19
  40:	bl	0 <__sanitizer_symbolize_demangle>
  44:	cmp	x21, w0, sxtw
  48:	sxtw	x0, w0
  4c:	b.cc	64 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x64>  // b.lo, b.ul, b.last
  50:	mov	x0, x19
  54:	ldr	x21, [sp, #16]
  58:	ldr	x30, [sp, #24]
  5c:	ldp	x19, x20, [sp], #32
  60:	ret
  64:	add	x21, x0, #0x1
  68:	mov	x1, #0x0                   	// #0
  6c:	mov	x0, x19
  70:	bl	0 <_ZN11__sanitizer12InternalFreeEPvPNS_30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32INS_4AP32EEEEE>
  74:	cmp	x21, #0x20, lsl #12
  78:	b.ls	20 <_ZN11__sanitizer18InternalSymbolizer8DemangleEPKc+0x20>  // b.plast
  7c:	ldr	x21, [sp, #16]
  80:	mov	x19, x20
  84:	mov	x0, x19
  88:	ldr	x30, [sp, #24]
  8c:	ldp	x19, x20, [sp], #32
  90:	ret

Disassembly of section .text._ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm:

0000000000000000 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x1
   8:	str	x30, [sp, #16]
   c:	bl	0 <_ZN11__sanitizer17SymbolizerProcess18ReadFromSymbolizerEPcm>
  10:	mov	w19, w0
  14:	tst	w0, #0xff
  18:	b.eq	24 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x24>  // b.none
  1c:	ldrb	w0, [x20]
  20:	cbnz	w0, 34 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x34>
  24:	mov	w0, w19
  28:	ldr	x30, [sp, #16]
  2c:	ldp	x19, x20, [sp], #32
  30:	ret
  34:	adrp	x1, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  38:	add	x0, x20, #0x1
  3c:	add	x1, x1, #0x0
  40:	bl	0 <_ZN11__sanitizer15internal_strstrEPKcS1_>
  44:	cbz	x0, 5c <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm+0x5c>
  48:	strb	wzr, [x0]
  4c:	mov	w0, w19
  50:	ldr	x30, [sp, #16]
  54:	ldp	x19, x20, [sp], #32
  58:	ret
  5c:	adrp	x2, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  60:	adrp	x0, 0 <_ZN11__sanitizer16Addr2LineProcess18ReadFromSymbolizerEPcm>
  64:	add	x2, x2, #0x0
  68:	add	x0, x0, #0x0
  6c:	mov	x4, #0x0                   	// #0
  70:	mov	x3, #0x0                   	// #0
  74:	mov	w1, #0xeb                  	// #235
  78:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE:

0000000000000000 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>:
   0:	stp	x19, x20, [sp, #-144]!
   4:	mov	x19, x0
   8:	mov	x20, #0x0                   	// #0
   c:	ldr	x0, [x0, #48]
  10:	stp	x21, x22, [sp, #16]
  14:	mov	x22, x2
  18:	stp	x23, x24, [sp, #32]
  1c:	stp	x25, x30, [sp, #48]
  20:	str	xzr, [sp, #72]
  24:	ldp	x21, x23, [x2, #16]
  28:	cbnz	x0, 40 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x40>
  2c:	b	ec <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0xec>
  30:	ldr	x0, [x19, #48]
  34:	add	x20, x20, #0x1
  38:	cmp	x0, x20
  3c:	b.ls	e4 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0xe4>  // b.plast
  40:	ldr	x1, [x19, #32]
  44:	mov	x0, x21
  48:	lsl	x24, x20, #3
  4c:	ldr	x1, [x1, x20, lsl #3]
  50:	ldr	x1, [x1, #16424]
  54:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  58:	cbnz	w0, 30 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x30>
  5c:	ldr	x4, [x19, #48]
  60:	ldr	x0, [x19, #32]
  64:	cmp	x4, x20
  68:	b.ls	180 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x180>  // b.plast
  6c:	ldr	x1, [x0, x24]
  70:	str	x1, [sp, #72]
  74:	cbz	x1, ec <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0xec>
  78:	ldr	x1, [x1, #16424]
  7c:	mov	x0, x21
  80:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  84:	sxtw	x4, w0
  88:	cbnz	w0, 164 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x164>
  8c:	add	x19, sp, #0x50
  90:	mov	x3, x23
  94:	mov	x4, #0xffffffffffffffff    	// #-1
  98:	mov	x1, #0x40                  	// #64
  9c:	mov	x0, x19
  a0:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
  a4:	add	x2, x2, #0x0
  a8:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  ac:	ldr	x0, [sp, #72]
  b0:	mov	x1, x19
  b4:	bl	0 <_ZN11__sanitizer17SymbolizerProcess11SendCommandEPKc>
  b8:	mov	w1, #0x0                   	// #0
  bc:	cbz	x0, cc <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0xcc>
  c0:	mov	x1, x22
  c4:	bl	0 <_ZN11__sanitizer22ParseSymbolizePCOutputEPKcPNS_15SymbolizedStackE>
  c8:	mov	w1, #0x1                   	// #1
  cc:	mov	w0, w1
  d0:	ldp	x21, x22, [sp, #16]
  d4:	ldp	x23, x24, [sp, #32]
  d8:	ldp	x25, x30, [sp, #48]
  dc:	ldp	x19, x20, [sp], #144
  e0:	ret
  e4:	ldr	x1, [sp, #72]
  e8:	cbnz	x1, 78 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x78>
  ec:	ldr	x0, [x19, #24]
  f0:	mov	x1, #0x4030                	// #16432
  f4:	add	x24, x19, #0x20
  f8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
  fc:	mov	x20, x0
 100:	ldr	x1, [x19, #16]
 104:	mov	w2, #0x0                   	// #0
 108:	bl	0 <_ZN11__sanitizer17SymbolizerProcessC2EPKcb>
 10c:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 110:	add	x0, x0, #0x0
 114:	str	x0, [x20]
 118:	mov	x0, x21
 11c:	bl	0 <_ZN11__sanitizer15internal_strdupEPKc>
 120:	str	x20, [sp, #72]
 124:	ldr	x4, [x19, #40]
 128:	ldr	x3, [x24, #16]
 12c:	str	x0, [x20, #16424]
 130:	lsr	x4, x4, #3
 134:	cmp	x3, x4
 138:	b.hi	250 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x250>  // b.pmore
 13c:	add	x20, x3, #0x1
 140:	b.eq	19c <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x19c>  // b.none
 144:	ldr	x25, [x19, #32]
 148:	str	x20, [x24, #16]
 14c:	add	x1, sp, #0x48
 150:	add	x0, x25, x3, lsl #3
 154:	mov	x2, #0x8                   	// #8
 158:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 15c:	ldr	x1, [sp, #72]
 160:	b	78 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x78>
 164:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 168:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 16c:	add	x2, x2, #0x0
 170:	add	x0, x0, #0x0
 174:	mov	x3, #0x0                   	// #0
 178:	mov	w1, #0x129                 	// #297
 17c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 180:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 184:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 188:	mov	x3, x20
 18c:	add	x2, x2, #0x0
 190:	add	x0, x0, #0x0
 194:	mov	w1, #0x1c5                 	// #453
 198:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 19c:	tst	x3, x20
 1a0:	b.eq	1dc <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x1dc>  // b.none
 1a4:	clz	x2, x20
 1a8:	mov	w0, #0x3f                  	// #63
 1ac:	sub	w0, w0, w2
 1b0:	mov	x2, #0x1                   	// #1
 1b4:	add	w4, w0, #0x1
 1b8:	lsl	x4, x2, x4
 1bc:	cmp	x4, x20
 1c0:	b.ls	29c <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x29c>  // b.plast
 1c4:	lsl	x0, x2, x0
 1c8:	cmp	x0, x20
 1cc:	b.cs	2b8 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x2b8>  // b.hs, b.nlast
 1d0:	cmp	x3, x4
 1d4:	b.hi	274 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x274>  // b.pmore
 1d8:	mov	x20, x4
 1dc:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
 1e0:	lsl	x20, x20, #3
 1e4:	ldr	x25, [x25]
 1e8:	ldr	x0, [x25]
 1ec:	cbz	x0, 268 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x268>
 1f0:	sub	x1, x0, #0x1
 1f4:	tst	x0, x1
 1f8:	b.ne	28c <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x28c>  // b.any
 1fc:	add	x20, x20, x1
 200:	neg	x0, x0
 204:	and	x20, x20, x0
 208:	mov	w2, #0x0                   	// #0
 20c:	mov	x0, x20
 210:	adrp	x1, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 214:	add	x1, x1, #0x0
 218:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 21c:	ldr	x2, [x24, #16]
 220:	mov	x25, x0
 224:	ldr	x1, [x19, #32]
 228:	lsl	x2, x2, #3
 22c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 230:	ldr	x1, [x24, #8]
 234:	ldr	x0, [x19, #32]
 238:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 23c:	ldr	x3, [x24, #16]
 240:	str	x25, [x19, #32]
 244:	str	x20, [x24, #8]
 248:	add	x20, x3, #0x1
 24c:	b	148 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x148>
 250:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 254:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 258:	add	x2, x2, #0x0
 25c:	add	x0, x0, #0x0
 260:	mov	w1, #0x1cd                 	// #461
 264:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 268:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 26c:	str	x0, [x25]
 270:	b	1f0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE+0x1f0>
 274:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 278:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 27c:	add	x2, x2, #0x0
 280:	add	x0, x0, #0x0
 284:	mov	w1, #0x20c                 	// #524
 288:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 28c:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 290:	add	x0, x0, #0x0
 294:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 298:	bl	0 <_ZN11__sanitizer3DieEv>
 29c:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 2a0:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 2a4:	mov	x3, x20
 2a8:	add	x2, x2, #0x0
 2ac:	add	x0, x0, #0x0
 2b0:	mov	w1, #0x18a                 	// #394
 2b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 2b8:	mov	x4, x0
 2bc:	adrp	x2, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 2c0:	adrp	x0, 0 <_ZN11__sanitizer13Addr2LinePool11SymbolizePCEmPNS_15SymbolizedStackE>
 2c4:	mov	x3, x20
 2c8:	add	x2, x2, #0x0
 2cc:	add	x0, x0, #0x0
 2d0:	mov	w1, #0x18b                 	// #395
 2d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_symbolizer_report.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>:
       0:	stp	x19, x20, [sp, #-96]!
       4:	stp	x23, x24, [sp, #32]
       8:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
       c:	mov	x23, x0
      10:	ldr	x19, [x24]
      14:	stp	x21, x22, [sp, #16]
      18:	mov	x22, x1
      1c:	stp	x25, x30, [sp, #48]
      20:	mov	x21, x2
      24:	ldr	x3, [x19]
      28:	str	xzr, [sp, #64]
      2c:	stp	xzr, xzr, [sp, #72]
      30:	cbz	x3, 128 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x128>
      34:	sub	x0, x3, #0x1
      38:	tst	x0, x3
      3c:	b.ne	190 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x190>  // b.any
      40:	add	x20, x3, #0x3ff
      44:	neg	x3, x3
      48:	and	x20, x20, x3
      4c:	mov	w2, #0x0                   	// #0
      50:	mov	x0, x20
      54:	adrp	x25, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
      58:	add	x1, x25, #0x0
      5c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
      60:	ldr	x1, [sp, #64]
      64:	mov	x19, x0
      68:	ldr	x2, [sp, #80]
      6c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
      70:	ldp	x0, x1, [sp, #64]
      74:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
      78:	stp	x19, x20, [sp, #64]
      7c:	ldr	x2, [sp, #80]
      80:	cmp	x2, #0x3ff
      84:	b.hi	a8 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0xa8>  // b.pmore
      88:	cmp	x20, #0x3ff
      8c:	b.ls	138 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x138>  // b.plast
      90:	mov	x3, #0x400                 	// #1024
      94:	add	x0, x19, x2
      98:	mov	w1, #0x0                   	// #0
      9c:	sub	x2, x3, x2
      a0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      a4:	ldr	x19, [sp, #64]
      a8:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
      ac:	add	x20, sp, #0x40
      b0:	mov	x2, x23
      b4:	ldr	q0, [x0]
      b8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
      bc:	mov	x0, x20
      c0:	add	x1, x1, #0x0
      c4:	str	q0, [sp, #80]
      c8:	strb	wzr, [x19]
      cc:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
      d0:	adrp	x4, 0 <_ZN11__sanitizer21common_flags_dont_useE>
      d4:	mov	x3, x22
      d8:	mov	w2, #0x0                   	// #0
      dc:	mov	x0, x20
      e0:	ldr	x4, [x4]
      e4:	adrp	x6, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
      e8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
      ec:	add	x6, x6, #0x0
      f0:	add	x1, x1, #0x0
      f4:	ldr	x5, [x4, #24]
      f8:	ldrb	w4, [x4, #189]
      fc:	bl	0 <_ZN11__sanitizer11RenderFrameEPNS_20InternalScopedStringEPKciRKNS_11AddressInfoEbS3_S3_>
     100:	ldr	x0, [sp, #64]
     104:	mov	x1, x21
     108:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
     10c:	ldp	x0, x1, [sp, #64]
     110:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     114:	ldp	x21, x22, [sp, #16]
     118:	ldp	x23, x24, [sp, #32]
     11c:	ldp	x25, x30, [sp, #48]
     120:	ldp	x19, x20, [sp], #96
     124:	ret
     128:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     12c:	mov	x3, x0
     130:	str	x0, [x19]
     134:	b	34 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x34>
     138:	ldr	x24, [x24]
     13c:	ldr	x0, [x24]
     140:	cbz	x0, 1a0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x1a0>
     144:	sub	x1, x0, #0x1
     148:	tst	x1, x0
     14c:	b.ne	190 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x190>  // b.any
     150:	add	x20, x0, #0x3ff
     154:	neg	x0, x0
     158:	and	x20, x20, x0
     15c:	add	x1, x25, #0x0
     160:	mov	w2, #0x0                   	// #0
     164:	mov	x0, x20
     168:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     16c:	mov	x19, x0
     170:	ldr	x1, [sp, #64]
     174:	ldr	x2, [sp, #80]
     178:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     17c:	ldp	x0, x1, [sp, #64]
     180:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     184:	stp	x19, x20, [sp, #64]
     188:	ldr	x2, [sp, #80]
     18c:	b	90 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x90>
     190:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     194:	add	x0, x0, #0x0
     198:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     19c:	bl	0 <_ZN11__sanitizer3DieEv>
     1a0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     1a4:	str	x0, [x24]
     1a8:	b	144 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0+0x144>
     1ac:	nop

00000000000001b0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_>:
     1b0:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     1b4:	ldr	x3, [x3]
     1b8:	ldrb	w3, [x3, #60]
     1bc:	cbnz	w3, 1c4 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_+0x14>
     1c0:	ret
     1c4:	b	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>

00000000000001c8 <_ZN11__sanitizer10ReportFile14SupportsColorsEv>:
     1c8:	stp	x19, x20, [sp, #-32]!
     1cc:	mov	x19, x0
     1d0:	mov	w1, #0x1                   	// #1
     1d4:	ldr	x20, [x0]
     1d8:	str	x30, [sp, #16]
     1dc:	ldxrb	w0, [x20]
     1e0:	stxrb	w2, w1, [x20]
     1e4:	cbnz	w2, 1dc <_ZN11__sanitizer10ReportFile14SupportsColorsEv+0x14>
     1e8:	dmb	ish
     1ec:	tst	w0, #0xff
     1f0:	b.eq	1fc <_ZN11__sanitizer10ReportFile14SupportsColorsEv+0x34>  // b.none
     1f4:	mov	x0, x20
     1f8:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     1fc:	mov	x0, x19
     200:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     204:	ldr	w0, [x19, #8]
     208:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
     20c:	dmb	ish
     210:	strb	wzr, [x20]
     214:	ldr	x30, [sp, #16]
     218:	ldp	x19, x20, [sp], #32
     21c:	ret

0000000000000220 <_ZN11__sanitizer15ColorizeReportsEv>:
     220:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     224:	stp	x19, x20, [sp, #-32]!
     228:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     22c:	ldr	x0, [x0]
     230:	add	x1, x1, #0x0
     234:	ldr	x19, [x0, #112]
     238:	str	x30, [sp, #16]
     23c:	mov	x0, x19
     240:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     244:	mov	w1, #0x1                   	// #1
     248:	cbnz	w0, 25c <_ZN11__sanitizer15ColorizeReportsEv+0x3c>
     24c:	mov	w0, w1
     250:	ldr	x30, [sp, #16]
     254:	ldp	x19, x20, [sp], #32
     258:	ret
     25c:	mov	x0, x19
     260:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     264:	add	x1, x1, #0x0
     268:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     26c:	mov	w1, #0x0                   	// #0
     270:	cbnz	w0, 24c <_ZN11__sanitizer15ColorizeReportsEv+0x2c>
     274:	adrp	x19, 0 <_ZN11__sanitizer11report_fileE>
     278:	mov	w1, #0x1                   	// #1
     27c:	ldr	x0, [x19]
     280:	ldr	x20, [x0]
     284:	ldxrb	w0, [x20]
     288:	stxrb	w2, w1, [x20]
     28c:	cbnz	w2, 284 <_ZN11__sanitizer15ColorizeReportsEv+0x64>
     290:	dmb	ish
     294:	tst	w0, #0xff
     298:	b.eq	2a4 <_ZN11__sanitizer15ColorizeReportsEv+0x84>  // b.none
     29c:	mov	x0, x20
     2a0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     2a4:	ldr	x19, [x19]
     2a8:	mov	x0, x19
     2ac:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     2b0:	ldr	w0, [x19, #8]
     2b4:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
     2b8:	dmb	ish
     2bc:	and	w1, w0, #0xff
     2c0:	strb	wzr, [x20]
     2c4:	mov	w0, w1
     2c8:	ldr	x30, [sp, #16]
     2cc:	ldp	x19, x20, [sp], #32
     2d0:	ret
     2d4:	nop

00000000000002d8 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_>:
     2d8:	stp	x19, x20, [sp, #-48]!
     2dc:	adrp	x19, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     2e0:	ldr	x19, [x19]
     2e4:	stp	x21, x22, [sp, #16]
     2e8:	mov	x21, x2
     2ec:	ldrb	w2, [x19, #60]
     2f0:	str	x30, [sp, #32]
     2f4:	cbz	w2, 360 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_+0x88>
     2f8:	ldr	w2, [x1, #8]
     2fc:	cbz	w2, 34c <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_+0x74>
     300:	mov	x20, x0
     304:	ldr	x0, [x1]
     308:	ldr	x22, [x0]
     30c:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     310:	sub	x22, x22, #0x4
     314:	mov	x1, x22
     318:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
     31c:	ldrb	w1, [x19, #60]
     320:	mov	x19, x0
     324:	cbz	w1, 338 <_ZN11__sanitizer18ReportErrorSummaryEPKcPKNS_10StackTraceES1_+0x60>
     328:	mov	x2, x21
     32c:	mov	x0, x20
     330:	add	x1, x19, #0x8
     334:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     338:	mov	x0, x19
     33c:	ldp	x21, x22, [sp, #16]
     340:	ldr	x30, [sp, #32]
     344:	ldp	x19, x20, [sp], #48
     348:	b	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
     34c:	ldp	x21, x22, [sp, #16]
     350:	mov	x1, #0x0                   	// #0
     354:	ldr	x30, [sp, #32]
     358:	ldp	x19, x20, [sp], #48
     35c:	b	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
     360:	ldp	x21, x22, [sp, #16]
     364:	ldr	x30, [sp, #32]
     368:	ldp	x19, x20, [sp], #48
     36c:	ret

0000000000000370 <_ZN11__sanitizer19ReportMmapWriteExecEi>:
     370:	and	w0, w0, #0x6
     374:	cmp	w0, #0x6
     378:	b.eq	380 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x10>  // b.none
     37c:	ret
     380:	stp	x29, x30, [sp, #-96]!
     384:	mov	x29, sp
     388:	stp	x19, x20, [sp, #16]
     38c:	mov	x20, x30
     390:	stp	x21, x22, [sp, #32]
     394:	adrp	x22, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     398:	add	x19, x22, #0x0
     39c:	stp	x23, x24, [sp, #48]
     3a0:	str	x25, [sp, #64]
     3a4:	bl	0 <_ZN11__sanitizer13GetThreadSelfEv>
     3a8:	mov	x21, x0
     3ac:	ldxr	x1, [x19]
     3b0:	cbnz	x1, 3bc <_ZN11__sanitizer19ReportMmapWriteExecEi+0x4c>
     3b4:	stlxr	w0, x21, [x19]
     3b8:	cbnz	w0, 3ac <_ZN11__sanitizer19ReportMmapWriteExecEi+0x3c>
     3bc:	dmb	ish
     3c0:	cbz	x1, 3dc <_ZN11__sanitizer19ReportMmapWriteExecEi+0x6c>
     3c4:	cmp	x21, x1
     3c8:	b.eq	694 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x324>  // b.none
     3cc:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
     3d0:	ldxr	x1, [x19]
     3d4:	cbz	x1, 3b4 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x44>
     3d8:	b	3bc <_ZN11__sanitizer19ReportMmapWriteExecEi+0x4c>
     3dc:	add	x0, x19, #0x8
     3e0:	mov	w2, #0x1                   	// #1
     3e4:	ldxrb	w1, [x0]
     3e8:	stxrb	w3, w2, [x0]
     3ec:	cbnz	w3, 3e4 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x74>
     3f0:	dmb	ish
     3f4:	tst	w1, #0xff
     3f8:	b.eq	400 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x90>  // b.none
     3fc:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     400:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
     404:	bl	220 <_ZN11__sanitizer15ColorizeReportsEv>
     408:	and	w24, w0, #0xff
     40c:	ldr	x19, [x23]
     410:	ldr	x0, [x19]
     414:	cbz	x0, 5fc <_ZN11__sanitizer19ReportMmapWriteExecEi+0x28c>
     418:	sub	x1, x0, #0x1
     41c:	tst	x1, x0
     420:	b.ne	678 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x308>  // b.any
     424:	add	x21, x0, #0x817
     428:	neg	x0, x0
     42c:	and	x21, x21, x0
     430:	mov	w2, #0x0                   	// #0
     434:	mov	x0, x21
     438:	adrp	x25, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     43c:	add	x1, x25, #0x0
     440:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     444:	mov	x2, #0x0                   	// #0
     448:	mov	x1, #0x0                   	// #0
     44c:	mov	x19, x0
     450:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     454:	mov	x1, #0x0                   	// #0
     458:	mov	x0, #0x0                   	// #0
     45c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     460:	cmp	x21, #0x817
     464:	b.ls	61c <_ZN11__sanitizer19ReportMmapWriteExecEi+0x2ac>  // b.plast
     468:	adrp	x23, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     46c:	mov	w1, #0x0                   	// #0
     470:	mov	x0, x19
     474:	mov	x2, #0x818                 	// #2072
     478:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     47c:	str	xzr, [x19, #2064]
     480:	ldr	x1, [x23]
     484:	add	x0, x19, #0x10
     488:	str	x0, [x19]
     48c:	stp	xzr, xzr, [x29, #80]
     490:	ldrb	w0, [x1, #33]
     494:	str	xzr, [x19, #8]
     498:	cbz	w0, 59c <_ZN11__sanitizer19ReportMmapWriteExecEi+0x22c>
     49c:	add	x2, x29, #0x58
     4a0:	add	x1, x29, #0x50
     4a4:	mov	w0, #0x0                   	// #0
     4a8:	bl	0 <_ZN11__sanitizer26GetThreadStackTopAndBottomEbPmS0_>
     4ac:	ldp	x5, x6, [x29, #80]
     4b0:	mov	x2, x20
     4b4:	mov	x3, x29
     4b8:	mov	x0, x19
     4bc:	mov	w7, #0x1                   	// #1
     4c0:	mov	x4, #0x0                   	// #0
     4c4:	mov	w1, #0x100                 	// #256
     4c8:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
     4cc:	cbz	w24, 5c4 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x254>
     4d0:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     4d4:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     4d8:	add	x1, x1, #0x0
     4dc:	add	x0, x24, #0x0
     4e0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     4e4:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     4e8:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     4ec:	add	x0, x0, #0x0
     4f0:	ldr	x1, [x1]
     4f4:	ldr	x1, [x1]
     4f8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     4fc:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     500:	add	x1, x1, #0x0
     504:	add	x0, x24, #0x0
     508:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     50c:	mov	x0, x19
     510:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
     514:	ldr	x23, [x23]
     518:	ldrb	w0, [x23, #60]
     51c:	cbz	w0, 568 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x1f8>
     520:	ldr	w0, [x19, #8]
     524:	cbz	w0, 608 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x298>
     528:	ldr	x0, [x19]
     52c:	ldr	x20, [x0]
     530:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     534:	sub	x20, x20, #0x4
     538:	mov	x1, x20
     53c:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
     540:	ldrb	w1, [x23, #60]
     544:	mov	x20, x0
     548:	cbz	w1, 560 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x1f0>
     54c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     550:	add	x1, x20, #0x8
     554:	add	x0, x0, #0x0
     558:	mov	x2, #0x0                   	// #0
     55c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     560:	mov	x0, x20
     564:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
     568:	mov	x1, x21
     56c:	mov	x0, x19
     570:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     574:	dmb	ish
     578:	add	x0, x22, #0x0
     57c:	strb	wzr, [x0, #8]
     580:	str	xzr, [x22]
     584:	ldp	x19, x20, [sp, #16]
     588:	ldp	x21, x22, [sp, #32]
     58c:	ldp	x23, x24, [sp, #48]
     590:	ldr	x25, [sp, #64]
     594:	ldp	x29, x30, [sp], #96
     598:	ret
     59c:	mov	x2, x20
     5a0:	mov	x0, x19
     5a4:	mov	w7, #0x0                   	// #0
     5a8:	mov	x6, #0x0                   	// #0
     5ac:	mov	x5, #0x0                   	// #0
     5b0:	mov	x4, #0x0                   	// #0
     5b4:	mov	x3, #0x0                   	// #0
     5b8:	mov	w1, #0x100                 	// #256
     5bc:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
     5c0:	cbnz	w24, 4d0 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x160>
     5c4:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     5c8:	add	x20, x1, #0x0
     5cc:	mov	x1, x20
     5d0:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     5d4:	add	x0, x24, #0x0
     5d8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     5dc:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     5e0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     5e4:	add	x0, x0, #0x0
     5e8:	ldr	x1, [x1]
     5ec:	ldr	x1, [x1]
     5f0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     5f4:	mov	x1, x20
     5f8:	b	504 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x194>
     5fc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     600:	str	x0, [x19]
     604:	b	418 <_ZN11__sanitizer19ReportMmapWriteExecEi+0xa8>
     608:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     60c:	mov	x1, #0x0                   	// #0
     610:	add	x0, x0, #0x0
     614:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
     618:	b	568 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x1f8>
     61c:	ldr	x23, [x23]
     620:	ldr	x0, [x23]
     624:	cbz	x0, 688 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x318>
     628:	sub	x1, x0, #0x1
     62c:	tst	x1, x0
     630:	b.ne	678 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x308>  // b.any
     634:	add	x23, x0, #0x817
     638:	neg	x0, x0
     63c:	and	x23, x23, x0
     640:	add	x1, x25, #0x0
     644:	mov	x0, x23
     648:	mov	w2, #0x0                   	// #0
     64c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     650:	mov	x25, x0
     654:	mov	x2, #0x0                   	// #0
     658:	mov	x1, x19
     65c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     660:	mov	x1, x21
     664:	mov	x0, x19
     668:	mov	x21, x23
     66c:	mov	x19, x25
     670:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     674:	b	468 <_ZN11__sanitizer19ReportMmapWriteExecEi+0xf8>
     678:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     67c:	add	x0, x0, #0x0
     680:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     684:	bl	0 <_ZN11__sanitizer3DieEv>
     688:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     68c:	str	x0, [x23]
     690:	b	628 <_ZN11__sanitizer19ReportMmapWriteExecEi+0x2b8>
     694:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     698:	ldr	x0, [x0]
     69c:	ldr	x19, [x0]
     6a0:	mov	x0, x19
     6a4:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     6a8:	mov	x1, x0
     6ac:	mov	x0, x19
     6b0:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
     6b4:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     6b8:	mov	x1, #0x2b                  	// #43
     6bc:	add	x0, x0, #0x0
     6c0:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
     6c4:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     6c8:	ldr	x0, [x0]
     6cc:	ldr	w0, [x0, #224]
     6d0:	bl	0 <_ZN11__sanitizer14internal__exitEi>
     6d4:	nop

00000000000006d8 <_ZN11__sanitizer23StartReportDeadlySignalEv>:
     6d8:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     6dc:	stp	x19, x30, [sp, #-16]!
     6e0:	ldr	x0, [x0]
     6e4:	ldr	x19, [x0]
     6e8:	mov	x0, x19
     6ec:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
     6f0:	mov	x1, x0
     6f4:	mov	x0, x19
     6f8:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
     6fc:	ldp	x19, x30, [sp], #16
     700:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     704:	add	x0, x0, #0x0
     708:	mov	x1, #0xe                   	// #14
     70c:	add	x0, x0, #0x30
     710:	b	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
     714:	nop

0000000000000718 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_>:
     718:	stp	x19, x20, [sp, #-272]!
     71c:	mov	x19, x0
     720:	stp	x21, x22, [sp, #16]
     724:	mov	w21, w1
     728:	mov	x22, x2
     72c:	stp	x23, x24, [sp, #32]
     730:	mov	x23, x3
     734:	stp	x25, x26, [sp, #48]
     738:	stp	x27, x28, [sp, #64]
     73c:	str	x30, [sp, #80]
     740:	bl	0 <_ZNK11__sanitizer13SignalContext15IsStackOverflowEv>
     744:	tst	w0, #0xff
     748:	b.eq	8d4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x1bc>  // b.none
     74c:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     750:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     754:	add	x1, x1, #0x0
     758:	ldr	x0, [x20]
     75c:	ldr	x24, [x0, #112]
     760:	mov	x0, x24
     764:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     768:	cbnz	w0, d30 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x618>
     76c:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     770:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     774:	add	x0, x24, #0x0
     778:	add	x1, x1, #0x0
     77c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     780:	adrp	x26, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     784:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     788:	add	x2, x26, #0x0
     78c:	ldp	x3, x4, [x19, #16]
     790:	mov	w7, w21
     794:	ldr	x0, [x0]
     798:	add	x2, x2, #0x40
     79c:	ldp	x6, x5, [x19, #32]
     7a0:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
     7a4:	ldr	x1, [x0]
     7a8:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     7ac:	add	x0, x0, #0x0
     7b0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     7b4:	add	x0, x24, #0x0
     7b8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     7bc:	add	x1, x1, #0x0
     7c0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     7c4:	ldr	x21, [x25]
     7c8:	ldr	x0, [x21]
     7cc:	cbz	x0, da8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x690>
     7d0:	sub	x1, x0, #0x1
     7d4:	tst	x1, x0
     7d8:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
     7dc:	add	x24, x0, #0x817
     7e0:	neg	x0, x0
     7e4:	and	x24, x24, x0
     7e8:	mov	w2, #0x0                   	// #0
     7ec:	mov	x0, x24
     7f0:	adrp	x28, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     7f4:	add	x1, x28, #0x0
     7f8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     7fc:	mov	x2, #0x0                   	// #0
     800:	mov	x1, #0x0                   	// #0
     804:	mov	x21, x0
     808:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     80c:	mov	x1, #0x0                   	// #0
     810:	mov	x0, #0x0                   	// #0
     814:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     818:	cmp	x24, #0x817
     81c:	b.ls	f90 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x878>  // b.plast
     820:	mov	x2, #0x818                 	// #2072
     824:	mov	w1, #0x0                   	// #0
     828:	mov	x0, x21
     82c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     830:	mov	x1, x23
     834:	mov	x2, x21
     838:	add	x0, x21, #0x10
     83c:	str	x0, [x21]
     840:	str	xzr, [x21, #8]
     844:	mov	x0, x19
     848:	str	xzr, [x21, #2064]
     84c:	blr	x22
     850:	mov	x0, x21
     854:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
     858:	ldr	x20, [x20]
     85c:	ldrb	w0, [x20, #60]
     860:	cbz	w0, 8ac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x194>
     864:	ldr	w0, [x21, #8]
     868:	cbz	w0, de8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6d0>
     86c:	ldr	x0, [x21]
     870:	ldr	x19, [x0]
     874:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     878:	sub	x19, x19, #0x4
     87c:	mov	x1, x19
     880:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
     884:	ldrb	w1, [x20, #60]
     888:	mov	x19, x0
     88c:	cbz	w1, 8a4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x18c>
     890:	add	x0, x26, #0x0
     894:	add	x1, x19, #0x8
     898:	add	x0, x0, #0x40
     89c:	mov	x2, #0x0                   	// #0
     8a0:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     8a4:	mov	x0, x19
     8a8:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
     8ac:	mov	x1, x24
     8b0:	mov	x0, x21
     8b4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     8b8:	ldp	x21, x22, [sp, #16]
     8bc:	ldp	x23, x24, [sp, #32]
     8c0:	ldp	x25, x26, [sp, #48]
     8c4:	ldp	x27, x28, [sp, #64]
     8c8:	ldr	x30, [sp, #80]
     8cc:	ldp	x19, x20, [sp], #272
     8d0:	ret
     8d4:	bl	220 <_ZN11__sanitizer15ColorizeReportsEv>
     8d8:	ands	w20, w0, #0xff
     8dc:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     8e0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     8e4:	add	x1, x1, #0x0
     8e8:	add	x0, x0, #0x0
     8ec:	csel	x1, x0, x1, ne  // ne = any
     8f0:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     8f4:	add	x0, x24, #0x0
     8f8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     8fc:	mov	x0, x19
     900:	bl	0 <_ZNK11__sanitizer13SignalContext8DescribeEv>
     904:	str	x0, [sp, #104]
     908:	ldrb	w1, [x19, #48]
     90c:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     910:	cbz	w1, db4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x69c>
     914:	mov	x1, x0
     918:	ldrb	w2, [x19, #56]
     91c:	str	x1, [sp, #128]
     920:	ldp	x0, x5, [x19, #24]
     924:	ldr	x1, [x1]
     928:	ldr	x4, [x19, #40]
     92c:	ldr	x1, [x1]
     930:	cbz	w2, e5c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x744>
     934:	ldr	x3, [x19, #16]
     938:	mov	x6, x5
     93c:	ldr	x2, [sp, #104]
     940:	mov	x5, x4
     944:	mov	w7, w21
     948:	mov	x4, x0
     94c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     950:	add	x0, x0, #0x0
     954:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     958:	cmp	w20, #0x0
     95c:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
     960:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     964:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     968:	add	x1, x1, #0x0
     96c:	add	x0, x0, #0x0
     970:	csel	x1, x0, x1, ne  // ne = any
     974:	add	x0, x24, #0x0
     978:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     97c:	ldr	x20, [x25]
     980:	ldr	x21, [x19, #24]
     984:	ldr	x0, [x20]
     988:	cbz	x0, e44 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x72c>
     98c:	cmp	x0, x21
     990:	b.hi	e34 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x71c>  // b.pmore
     994:	ldrb	w0, [x19, #48]
     998:	cbz	w0, 9f8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2e0>
     99c:	ldr	w0, [x19, #52]
     9a0:	cmp	w0, #0x2
     9a4:	b.eq	ddc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6c4>  // b.none
     9a8:	cmp	w0, #0x1
     9ac:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     9b0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     9b4:	add	x1, x1, #0x0
     9b8:	add	x0, x0, #0x0
     9bc:	csel	x1, x1, x0, eq  // eq = none
     9c0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     9c4:	add	x0, x0, #0x0
     9c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     9cc:	ldrb	w0, [x19, #56]
     9d0:	cbz	w0, e88 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x770>
     9d4:	ldr	x20, [x25]
     9d8:	ldr	x21, [x19, #16]
     9dc:	ldr	x0, [x20]
     9e0:	cbz	x0, f00 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x7e8>
     9e4:	cmp	x21, x0
     9e8:	b.cs	9f8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2e0>  // b.hs, b.nlast
     9ec:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     9f0:	add	x0, x0, #0x0
     9f4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     9f8:	add	x27, sp, #0xa0
     9fc:	adrp	x21, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     a00:	add	x26, sp, #0xc0
     a04:	add	x21, x21, #0x0
     a08:	mov	x0, x27
     a0c:	mov	w1, #0x1                   	// #1
     a10:	ldr	x20, [x19, #24]
     a14:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
     a18:	stp	xzr, xzr, [sp, #216]
     a1c:	str	xzr, [sp, #264]
     a20:	mov	x1, x26
     a24:	mov	x0, x27
     a28:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     a2c:	tst	w0, #0xff
     a30:	b.eq	a70 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x358>  // b.none
     a34:	ldr	x0, [sp, #192]
     a38:	cmp	x20, x0
     a3c:	b.cc	a20 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x308>  // b.lo, b.ul, b.last
     a40:	ldr	x0, [sp, #200]
     a44:	cmp	x20, x0
     a48:	b.cs	a20 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x308>  // b.hs, b.nlast
     a4c:	ldr	x0, [sp, #232]
     a50:	tbnz	w0, #2, a20 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x308>
     a54:	mov	x0, x21
     a58:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     a5c:	mov	x1, x26
     a60:	mov	x0, x27
     a64:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
     a68:	tst	w0, #0xff
     a6c:	b.ne	a34 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x31c>  // b.any
     a70:	mov	x0, x27
     a74:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
     a78:	ldr	x20, [x25]
     a7c:	ldr	x0, [x20]
     a80:	cbz	x0, e50 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x738>
     a84:	sub	x1, x0, #0x1
     a88:	tst	x1, x0
     a8c:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
     a90:	add	x27, x0, #0x817
     a94:	neg	x0, x0
     a98:	and	x27, x27, x0
     a9c:	mov	w2, #0x0                   	// #0
     aa0:	mov	x0, x27
     aa4:	adrp	x28, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     aa8:	add	x1, x28, #0x0
     aac:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     ab0:	mov	x2, #0x0                   	// #0
     ab4:	mov	x1, #0x0                   	// #0
     ab8:	mov	x21, x0
     abc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     ac0:	mov	x1, #0x0                   	// #0
     ac4:	mov	x0, #0x0                   	// #0
     ac8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     acc:	cmp	x27, #0x817
     ad0:	b.ls	fec <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x8d4>  // b.plast
     ad4:	mov	x2, #0x818                 	// #2072
     ad8:	mov	w1, #0x0                   	// #0
     adc:	mov	x0, x21
     ae0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     ae4:	mov	x1, x23
     ae8:	mov	x2, x21
     aec:	add	x0, x21, #0x10
     af0:	str	x0, [x21]
     af4:	str	xzr, [x21, #8]
     af8:	mov	x0, x19
     afc:	str	xzr, [x21, #2064]
     b00:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     b04:	blr	x22
     b08:	mov	x0, x21
     b0c:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
     b10:	ldr	x0, [x20]
     b14:	ldrb	w0, [x0, #240]
     b18:	cbz	w0, c94 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x57c>
     b1c:	ldr	x23, [x25]
     b20:	ldr	x22, [x19, #24]
     b24:	ldr	x0, [x23]
     b28:	cbz	x0, dfc <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6e4>
     b2c:	cmp	x22, x0
     b30:	b.cc	c94 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x57c>  // b.lo, b.ul, b.last
     b34:	str	xzr, [sp, #192]
     b38:	stp	xzr, xzr, [sp, #200]
     b3c:	sub	x1, x0, #0x1
     b40:	tst	x1, x0
     b44:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
     b48:	add	x3, x0, #0x3ff
     b4c:	neg	x0, x0
     b50:	and	x3, x3, x0
     b54:	add	x1, x28, #0x0
     b58:	mov	x0, x3
     b5c:	mov	w2, #0x0                   	// #0
     b60:	str	x3, [sp, #112]
     b64:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     b68:	mov	x23, x0
     b6c:	ldr	x1, [sp, #192]
     b70:	ldr	x2, [sp, #208]
     b74:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     b78:	ldp	x0, x1, [sp, #192]
     b7c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     b80:	ldr	x3, [sp, #112]
     b84:	stp	x23, x3, [sp, #192]
     b88:	ldr	x2, [sp, #208]
     b8c:	cmp	x2, #0x3ff
     b90:	b.ls	f6c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x854>  // b.plast
     b94:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     b98:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     b9c:	add	x1, x1, #0x0
     ba0:	ldr	q0, [x0]
     ba4:	mov	x0, x26
     ba8:	str	q0, [sp, #208]
     bac:	strb	wzr, [x23]
     bb0:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
     bb4:	mov	x0, x22
     bb8:	mov	x1, #0x10                  	// #16
     bbc:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
     bc0:	tst	w0, #0xff
     bc4:	b.eq	104c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x934>  // b.none
     bc8:	ldr	x0, [x20]
     bcc:	str	x0, [sp, #120]
     bd0:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     bd4:	add	x0, x0, #0x0
     bd8:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     bdc:	add	x23, x1, #0x0
     be0:	str	x0, [sp, #136]
     be4:	add	x0, x22, #0x10
     be8:	str	x0, [sp, #112]
     bec:	b	c28 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x510>
     bf0:	ldr	x3, [sp, #136]
     bf4:	adrp	x6, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     bf8:	asr	w4, w25, #4
     bfc:	add	x6, x6, #0x0
     c00:	and	w5, w25, #0xf
     c04:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     c08:	mov	x2, x23
     c0c:	add	x1, x0, #0x0
     c10:	mov	x0, x26
     c14:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
     c18:	add	x22, x22, #0x1
     c1c:	ldr	x0, [sp, #112]
     c20:	cmp	x22, x0
     c24:	b.eq	c70 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x558>  // b.none
     c28:	ldr	x0, [sp, #120]
     c2c:	ldrb	w25, [x22]
     c30:	ldr	x28, [x0, #112]
     c34:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     c38:	add	x1, x0, #0x0
     c3c:	mov	x0, x28
     c40:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     c44:	cbz	w0, bf0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x4d8>
     c48:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     c4c:	mov	x0, x28
     c50:	add	x1, x1, #0x0
     c54:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     c58:	cbz	w0, e98 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x780>
     c5c:	asr	w4, w25, #4
     c60:	and	w5, w25, #0xf
     c64:	mov	x3, x23
     c68:	mov	x6, x23
     c6c:	b	c04 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x4ec>
     c70:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     c74:	mov	x0, x26
     c78:	add	x1, x1, #0x0
     c7c:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
     c80:	ldr	x1, [sp, #192]
     c84:	add	x0, x24, #0x0
     c88:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     c8c:	ldp	x0, x1, [sp, #192]
     c90:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     c94:	ldr	x0, [x20]
     c98:	ldrb	w0, [x0, #241]
     c9c:	cbnz	w0, dd0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x6b8>
     ca0:	ldr	x0, [sp, #128]
     ca4:	ldr	x1, [x0]
     ca8:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     cac:	add	x0, x0, #0x0
     cb0:	ldr	x1, [x1]
     cb4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     cb8:	ldr	x20, [x20]
     cbc:	ldrb	w0, [x20, #60]
     cc0:	cbz	w0, d08 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5f0>
     cc4:	ldr	w0, [x21, #8]
     cc8:	cbz	w0, e24 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x70c>
     ccc:	ldr	x0, [x21]
     cd0:	ldr	x19, [x0]
     cd4:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
     cd8:	sub	x19, x19, #0x4
     cdc:	mov	x1, x19
     ce0:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
     ce4:	ldrb	w1, [x20, #60]
     ce8:	mov	x19, x0
     cec:	cbz	w1, d00 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5e8>
     cf0:	add	x1, x0, #0x8
     cf4:	mov	x2, #0x0                   	// #0
     cf8:	ldr	x0, [sp, #104]
     cfc:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d00:	mov	x0, x19
     d04:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
     d08:	mov	x1, x27
     d0c:	mov	x0, x21
     d10:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     d14:	ldp	x21, x22, [sp, #16]
     d18:	ldp	x23, x24, [sp, #32]
     d1c:	ldp	x25, x26, [sp, #48]
     d20:	ldp	x27, x28, [sp, #64]
     d24:	ldr	x30, [sp, #80]
     d28:	ldp	x19, x20, [sp], #272
     d2c:	ret
     d30:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d34:	mov	x0, x24
     d38:	add	x1, x1, #0x0
     d3c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
     d40:	cbz	w0, f0c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x7f4>
     d44:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d48:	add	x25, x1, #0x0
     d4c:	mov	x1, x25
     d50:	adrp	x24, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d54:	add	x0, x24, #0x0
     d58:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     d5c:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     d60:	adrp	x26, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d64:	ldp	x3, x4, [x19, #16]
     d68:	add	x2, x26, #0x0
     d6c:	ldr	x0, [x0]
     d70:	mov	w7, w21
     d74:	ldp	x6, x5, [x19, #32]
     d78:	add	x2, x2, #0x40
     d7c:	ldr	x1, [x0]
     d80:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     d84:	add	x0, x0, #0x0
     d88:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     d8c:	mov	x1, x25
     d90:	adrp	x25, 0 <_ZN11__sanitizer14PageSizeCachedE>
     d94:	add	x0, x24, #0x0
     d98:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     d9c:	ldr	x21, [x25]
     da0:	ldr	x0, [x21]
     da4:	cbnz	x0, 7d0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xb8>
     da8:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     dac:	str	x0, [x21]
     db0:	b	7d0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0xb8>
     db4:	mov	x1, x0
     db8:	str	x1, [sp, #128]
     dbc:	ldp	x0, x5, [x19, #24]
     dc0:	ldr	x1, [x1]
     dc4:	ldr	x4, [x19, #40]
     dc8:	ldr	x1, [x1]
     dcc:	b	934 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x21c>
     dd0:	ldr	x0, [x19, #8]
     dd4:	bl	0 <_ZN11__sanitizer13SignalContext16DumpAllRegistersEPv>
     dd8:	b	ca0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x588>
     ddc:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     de0:	add	x1, x1, #0x0
     de4:	b	9c0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2a8>
     de8:	add	x0, x26, #0x0
     dec:	mov	x1, #0x0                   	// #0
     df0:	add	x0, x0, #0x40
     df4:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
     df8:	b	8ac <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x194>
     dfc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     e00:	str	x0, [x23]
     e04:	cmp	x22, x0
     e08:	b.cc	c94 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x57c>  // b.lo, b.ul, b.last
     e0c:	str	xzr, [sp, #192]
     e10:	stp	xzr, xzr, [sp, #200]
     e14:	cbnz	x0, b3c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x424>
     e18:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     e1c:	str	x0, [x23]
     e20:	b	b3c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x424>
     e24:	ldr	x0, [sp, #104]
     e28:	mov	x1, #0x0                   	// #0
     e2c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
     e30:	b	d08 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x5f0>
     e34:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     e38:	add	x0, x0, #0x0
     e3c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     e40:	b	994 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x27c>
     e44:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     e48:	str	x0, [x20]
     e4c:	b	98c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x274>
     e50:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     e54:	str	x0, [x20]
     e58:	b	a84 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x36c>
     e5c:	ldr	x2, [sp, #104]
     e60:	mov	x3, x0
     e64:	mov	w6, w21
     e68:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     e6c:	add	x0, x0, #0x0
     e70:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     e74:	b	958 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x240>
     e78:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     e7c:	add	x0, x0, #0x0
     e80:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     e84:	bl	0 <_ZN11__sanitizer3DieEv>
     e88:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     e8c:	add	x0, x0, #0x0
     e90:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     e94:	b	9f8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2e0>
     e98:	adrp	x1, 0 <_ZN11__sanitizer11report_fileE>
     e9c:	mov	w3, #0x1                   	// #1
     ea0:	ldr	x0, [x1]
     ea4:	ldr	x2, [x0]
     ea8:	ldxrb	w0, [x2]
     eac:	stxrb	w4, w3, [x2]
     eb0:	cbnz	w4, ea8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x790>
     eb4:	dmb	ish
     eb8:	tst	w0, #0xff
     ebc:	b.eq	ed0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x7b8>  // b.none
     ec0:	mov	x0, x2
     ec4:	stp	x2, x1, [sp, #144]
     ec8:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     ecc:	ldp	x2, x1, [sp, #144]
     ed0:	ldr	x0, [x1]
     ed4:	stp	x0, x2, [sp, #144]
     ed8:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     edc:	ldr	x0, [sp, #144]
     ee0:	ldr	w0, [x0, #8]
     ee4:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
     ee8:	dmb	ish
     eec:	and	w0, w0, #0xff
     ef0:	ldr	x2, [sp, #152]
     ef4:	strb	wzr, [x2]
     ef8:	cbnz	w0, bf0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x4d8>
     efc:	b	c5c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x544>
     f00:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     f04:	str	x0, [x20]
     f08:	b	9e4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x2cc>
     f0c:	adrp	x1, 0 <_ZN11__sanitizer11report_fileE>
     f10:	mov	w2, #0x1                   	// #1
     f14:	ldr	x0, [x1]
     f18:	ldr	x25, [x0]
     f1c:	ldxrb	w0, [x25]
     f20:	stxrb	w3, w2, [x25]
     f24:	cbnz	w3, f1c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x804>
     f28:	dmb	ish
     f2c:	tst	w0, #0xff
     f30:	b.eq	f44 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x82c>  // b.none
     f34:	mov	x0, x25
     f38:	str	x1, [sp, #104]
     f3c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
     f40:	ldr	x1, [sp, #104]
     f44:	ldr	x24, [x1]
     f48:	mov	x0, x24
     f4c:	bl	0 <_ZN11__sanitizer10ReportFile17ReopenIfNecessaryEv>
     f50:	ldr	w0, [x24, #8]
     f54:	bl	0 <_ZN11__sanitizer21SupportsColoredOutputEi>
     f58:	dmb	ish
     f5c:	and	w0, w0, #0xff
     f60:	strb	wzr, [x25]
     f64:	cbnz	w0, 76c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x54>
     f68:	b	d44 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x62c>
     f6c:	cmp	x3, #0x3ff
     f70:	b.ls	1078 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x960>  // b.plast
     f74:	mov	x3, #0x400                 	// #1024
     f78:	add	x0, x23, x2
     f7c:	mov	w1, #0x0                   	// #0
     f80:	sub	x2, x3, x2
     f84:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     f88:	ldr	x23, [sp, #192]
     f8c:	b	b94 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x47c>
     f90:	ldr	x25, [x25]
     f94:	ldr	x0, [x25]
     f98:	cbz	x0, 1060 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x948>
     f9c:	sub	x1, x0, #0x1
     fa0:	tst	x1, x0
     fa4:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
     fa8:	add	x25, x0, #0x817
     fac:	neg	x0, x0
     fb0:	and	x25, x25, x0
     fb4:	add	x1, x28, #0x0
     fb8:	mov	x0, x25
     fbc:	mov	w2, #0x0                   	// #0
     fc0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     fc4:	mov	x27, x0
     fc8:	mov	x2, #0x0                   	// #0
     fcc:	mov	x1, x21
     fd0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     fd4:	mov	x1, x24
     fd8:	mov	x0, x21
     fdc:	mov	x24, x25
     fe0:	mov	x21, x27
     fe4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     fe8:	b	820 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x108>
     fec:	ldr	x20, [x25]
     ff0:	ldr	x0, [x20]
     ff4:	cbz	x0, 106c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x954>
     ff8:	sub	x1, x0, #0x1
     ffc:	tst	x1, x0
    1000:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
    1004:	add	x20, x0, #0x817
    1008:	neg	x0, x0
    100c:	and	x20, x20, x0
    1010:	add	x1, x28, #0x0
    1014:	mov	x0, x20
    1018:	mov	w2, #0x0                   	// #0
    101c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1020:	str	x0, [sp, #112]
    1024:	mov	x1, x21
    1028:	mov	x2, #0x0                   	// #0
    102c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1030:	ldr	x3, [sp, #112]
    1034:	mov	x1, x27
    1038:	mov	x0, x21
    103c:	mov	x27, x20
    1040:	mov	x21, x3
    1044:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1048:	b	ad4 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x3bc>
    104c:	mov	x0, x26
    1050:	adrp	x1, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1054:	add	x1, x1, #0x0
    1058:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
    105c:	b	c80 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x568>
    1060:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1064:	str	x0, [x25]
    1068:	b	f9c <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x884>
    106c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1070:	str	x0, [x20]
    1074:	b	ff8 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x8e0>
    1078:	ldr	x25, [x25]
    107c:	ldr	x0, [x25]
    1080:	cbz	x0, 10d0 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x9b8>
    1084:	sub	x1, x0, #0x1
    1088:	tst	x1, x0
    108c:	b.ne	e78 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x760>  // b.any
    1090:	add	x25, x0, #0x3ff
    1094:	neg	x0, x0
    1098:	and	x25, x25, x0
    109c:	add	x1, x28, #0x0
    10a0:	mov	w2, #0x0                   	// #0
    10a4:	mov	x0, x25
    10a8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    10ac:	mov	x23, x0
    10b0:	ldr	x1, [sp, #192]
    10b4:	ldr	x2, [sp, #208]
    10b8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    10bc:	ldp	x0, x1, [sp, #192]
    10c0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    10c4:	stp	x23, x25, [sp, #192]
    10c8:	ldr	x2, [sp, #208]
    10cc:	b	f74 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x85c>
    10d0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    10d4:	str	x0, [x25]
    10d8:	b	1084 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_+0x96c>
    10dc:	nop

00000000000010e0 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>:
    10e0:	stp	x19, x20, [sp, #-32]!
    10e4:	adrp	x19, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    10e8:	add	x19, x19, #0x0
    10ec:	str	x30, [sp, #16]
    10f0:	bl	0 <_ZN11__sanitizer13GetThreadSelfEv>
    10f4:	mov	x20, x0
    10f8:	ldxr	x1, [x19]
    10fc:	cbnz	x1, 1108 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x28>
    1100:	stlxr	w0, x20, [x19]
    1104:	cbnz	w0, 10f8 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x18>
    1108:	dmb	ish
    110c:	cbz	x1, 1128 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x48>
    1110:	cmp	x20, x1
    1114:	b.eq	1160 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x80>  // b.none
    1118:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
    111c:	ldxr	x1, [x19]
    1120:	cbz	x1, 1100 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x20>
    1124:	b	1108 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x28>
    1128:	add	x0, x19, #0x8
    112c:	mov	w2, #0x1                   	// #1
    1130:	ldxrb	w1, [x0]
    1134:	stxrb	w3, w2, [x0]
    1138:	cbnz	w3, 1130 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x50>
    113c:	dmb	ish
    1140:	tst	w1, #0xff
    1144:	b.eq	1154 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev+0x74>  // b.none
    1148:	ldr	x30, [sp, #16]
    114c:	ldp	x19, x20, [sp], #32
    1150:	b	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1154:	ldr	x30, [sp, #16]
    1158:	ldp	x19, x20, [sp], #32
    115c:	ret
    1160:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1164:	ldr	x0, [x0]
    1168:	ldr	x19, [x0]
    116c:	mov	x0, x19
    1170:	bl	0 <_ZN11__sanitizer15internal_strlenEPKc>
    1174:	mov	x1, x0
    1178:	mov	x0, x19
    117c:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
    1180:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1184:	mov	x1, #0x2b                  	// #43
    1188:	add	x0, x0, #0x0
    118c:	bl	0 <_ZN11__sanitizer22CatastrophicErrorWriteEPKcm>
    1190:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1194:	ldr	x0, [x0]
    1198:	ldr	w0, [x0, #224]
    119c:	bl	0 <_ZN11__sanitizer14internal__exitEi>

00000000000011a0 <_ZN11__sanitizer18HandleDeadlySignalEPvS0_jPFvRKNS_13SignalContextEPKvPNS_18BufferedStackTraceEES5_>:
    11a0:	stp	x19, x20, [sp, #-144]!
    11a4:	mov	w20, w2
    11a8:	stp	x21, x22, [sp, #16]
    11ac:	mov	x22, x4
    11b0:	mov	x21, x3
    11b4:	stp	x23, x24, [sp, #32]
    11b8:	mov	x23, x1
    11bc:	mov	x24, x0
    11c0:	str	x30, [sp, #48]
    11c4:	bl	6d8 <_ZN11__sanitizer23StartReportDeadlySignalEv>
    11c8:	add	x19, sp, #0x50
    11cc:	add	x0, sp, #0x48
    11d0:	bl	10e0 <_ZN11__sanitizer21ScopedErrorReportLockC1Ev>
    11d4:	stp	x24, x23, [sp, #80]
    11d8:	mov	x0, x19
    11dc:	bl	0 <_ZNK11__sanitizer13SignalContext10GetAddressEv>
    11e0:	mov	x1, x0
    11e4:	mov	x0, x19
    11e8:	str	x1, [sp, #96]
    11ec:	bl	0 <_ZNK11__sanitizer13SignalContext14IsMemoryAccessEv>
    11f0:	mov	w1, w0
    11f4:	mov	x0, x19
    11f8:	strb	w1, [sp, #128]
    11fc:	bl	0 <_ZNK11__sanitizer13SignalContext12GetWriteFlagEv>
    1200:	mov	w1, w0
    1204:	mov	x0, x19
    1208:	str	w1, [sp, #132]
    120c:	bl	0 <_ZNK11__sanitizer13SignalContext21IsTrueFaultingAddressEv>
    1210:	mov	w1, w0
    1214:	mov	x0, x19
    1218:	strb	w1, [sp, #136]
    121c:	bl	0 <_ZN11__sanitizer13SignalContext10InitPcSpBpEv>
    1220:	mov	x3, x22
    1224:	mov	x2, x21
    1228:	mov	w1, w20
    122c:	mov	x0, x19
    1230:	bl	718 <_ZN11__sanitizer18ReportDeadlySignalERKNS_13SignalContextEjPFvS2_PKvPNS_18BufferedStackTraceEES4_>
    1234:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1238:	add	x0, x0, #0x0
    123c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1240:	bl	0 <_ZN11__sanitizer3DieEv>
    1244:	nop

0000000000001248 <_ZN11__sanitizer21ScopedErrorReportLockD1Ev>:
    1248:	dmb	ish
    124c:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1250:	add	x1, x0, #0x0
    1254:	strb	wzr, [x1, #8]
    1258:	str	xzr, [x0]
    125c:	ret

0000000000001260 <_ZN11__sanitizer21ScopedErrorReportLock11CheckLockedEv>:
    1260:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1264:	add	x0, x0, #0x0
    1268:	ldrb	w3, [x0, #8]
    126c:	and	x3, x3, #0xff
    1270:	cmp	x3, #0x1
    1274:	b.ne	127c <_ZN11__sanitizer21ScopedErrorReportLock11CheckLockedEv+0x1c>  // b.any
    1278:	ret
    127c:	str	x30, [sp, #-16]!
    1280:	adrp	x2, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1284:	adrp	x0, 0 <_ZN11__sanitizer18ReportErrorSummaryEPKcRKNS_11AddressInfoES1_.part.0>
    1288:	add	x2, x2, #0x0
    128c:	add	x0, x0, #0x0
    1290:	mov	x4, #0x1                   	// #1
    1294:	mov	w1, #0x2b                  	// #43
    1298:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

sanitizer_symbolizer_win.cpp.o:     file format elf64-littleaarch64


sanitizer_unwind_linux_libcdep.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x19, x1
   8:	ldr	w4, [x1, #8]
   c:	ldr	x1, [x1]
  10:	stp	x21, x30, [sp, #16]
  14:	ldr	w3, [x1, #8]
  18:	cmp	x3, x4
  1c:	b.cs	94 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x94>  // b.hs, b.nlast
  20:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
  24:	bl	0 <_Unwind_GetIP>
  28:	mov	x20, x0
  2c:	ldr	x21, [x21]
  30:	ldr	x0, [x21]
  34:	cbz	x0, 74 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x74>
  38:	cmp	x20, x0
  3c:	b.cc	84 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x84>  // b.lo, b.ul, b.last
  40:	ldr	x1, [x19]
  44:	ldr	w3, [x19, #8]
  48:	ldr	w0, [x1, #8]
  4c:	add	w2, w0, #0x1
  50:	str	w2, [x1, #8]
  54:	add	x0, x1, w0, uxtw #3
  58:	cmp	w2, w3
  5c:	str	x20, [x0, #16]
  60:	b.eq	84 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x84>  // b.none
  64:	mov	w0, #0x0                   	// #0
  68:	ldp	x21, x30, [sp, #16]
  6c:	ldp	x19, x20, [sp], #32
  70:	ret
  74:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
  78:	str	x0, [x21]
  7c:	cmp	x20, x0
  80:	b.cs	40 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv+0x40>  // b.hs, b.nlast
  84:	mov	w0, #0x4                   	// #4
  88:	ldp	x21, x30, [sp, #16]
  8c:	ldp	x19, x20, [sp], #32
  90:	ret
  94:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
  98:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
  9c:	add	x2, x2, #0x0
  a0:	add	x0, x0, #0x0
  a4:	mov	w1, #0x50                  	// #80
  a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
  ac:	nop

00000000000000b0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj>:
  b0:	stp	x19, x20, [sp, #-48]!
  b4:	cmp	w2, #0x1
  b8:	str	x30, [sp, #16]
  bc:	b.ls	12c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x7c>  // b.plast
  c0:	mov	x19, x0
  c4:	add	w2, w2, #0x1
  c8:	cmp	w2, #0x100
  cc:	mov	x20, x1
  d0:	mov	w1, #0x100                 	// #256
  d4:	csel	w2, w2, w1, ls  // ls = plast
  d8:	str	wzr, [x19, #8]
  dc:	add	x1, sp, #0x20
  e0:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
  e4:	add	x0, x0, #0x0
  e8:	str	x19, [sp, #32]
  ec:	str	w2, [sp, #40]
  f0:	bl	0 <_Unwind_Backtrace>
  f4:	mov	x1, x20
  f8:	mov	x0, x19
  fc:	bl	0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>
 100:	mov	x1, x0
 104:	cbnz	x0, 114 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmj+0x64>
 108:	ldr	w0, [x19, #8]
 10c:	cmp	w0, #0x1
 110:	cset	x1, hi  // hi = pmore
 114:	mov	x0, x19
 118:	bl	0 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>
 11c:	ldr	x30, [sp, #16]
 120:	str	x20, [x19, #16]
 124:	ldp	x19, x20, [sp], #48
 128:	ret
 12c:	mov	w3, w2
 130:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 134:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 138:	add	x0, x0, #0x0
 13c:	add	x2, x2, #0x0
 140:	mov	x4, #0x2                   	// #2
 144:	mov	w1, #0x7f                  	// #127
 148:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 14c:	nop

0000000000000150 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj>:
 150:	stp	x19, x20, [sp, #-112]!
 154:	str	x30, [sp, #80]
 158:	cbz	x2, 37c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x22c>
 15c:	stp	x21, x22, [sp, #16]
 160:	cmp	w3, #0x1
 164:	stp	x23, x24, [sp, #32]
 168:	mov	w24, w3
 16c:	b.ls	3ac <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x25c>  // b.plast
 170:	adrp	x22, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 174:	mov	x21, x0
 178:	mov	x20, x1
 17c:	add	x1, x22, #0x0
 180:	ldr	x0, [x22]
 184:	cbz	x0, 3f4 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x2a4>
 188:	ldr	x0, [x1, #8]
 18c:	stp	x25, x26, [sp, #48]
 190:	mov	x19, x2
 194:	stp	x27, x28, [sp, #64]
 198:	blr	x0
 19c:	mov	x23, x0
 1a0:	cbz	x0, 3d4 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x284>
 1a4:	adrp	x26, 0 <_ZN11__sanitizer14PageSizeCachedE>
 1a8:	ldr	x20, [x26]
 1ac:	ldr	x3, [x20]
 1b0:	cbz	x3, 354 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x204>
 1b4:	sub	x0, x3, #0x1
 1b8:	tst	x0, x3
 1bc:	b.ne	36c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x21c>  // b.any
 1c0:	neg	x20, x3
 1c4:	mov	x27, #0x17ff                	// #6143
 1c8:	add	x3, x3, x27
 1cc:	mov	w2, #0x0                   	// #0
 1d0:	and	x20, x3, x20
 1d4:	adrp	x28, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 1d8:	mov	x0, x20
 1dc:	add	x1, x28, #0x0
 1e0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 1e4:	mov	x25, x0
 1e8:	mov	x2, #0x0                   	// #0
 1ec:	mov	x1, #0x0                   	// #0
 1f0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 1f4:	mov	x1, #0x0                   	// #0
 1f8:	mov	x0, #0x0                   	// #0
 1fc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 200:	cmp	x20, x27
 204:	b.ls	474 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x324>  // b.plast
 208:	mov	x2, #0x1800                	// #6144
 20c:	mov	w1, #0x0                   	// #0
 210:	mov	x0, x25
 214:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 218:	ldr	x6, [x22]
 21c:	add	x22, x22, #0x0
 220:	mov	x1, x19
 224:	mov	x5, x24
 228:	mov	x3, x25
 22c:	mov	x2, x23
 230:	mov	x4, #0x0                   	// #0
 234:	mov	x0, #0x0                   	// #0
 238:	blr	x6
 23c:	mov	x19, x0
 240:	ldr	x1, [x22, #16]
 244:	mov	x0, x23
 248:	blr	x1
 24c:	tbnz	x19, #63, 32c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1dc>
 250:	cmp	x19, #0x100
 254:	b.gt	4e0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x390>
 258:	str	wzr, [x21, #8]
 25c:	cmp	x19, #0x0
 260:	cbz	x19, 32c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1dc>
 264:	add	x0, x19, x19, lsl #1
 268:	add	x1, x19, #0x2
 26c:	mov	x2, #0x8                   	// #8
 270:	mov	x3, #0x18                  	// #24
 274:	lsl	x0, x0, #3
 278:	lsl	x1, x1, #3
 27c:	sub	x0, x0, #0x10
 280:	csel	x1, x1, x3, gt
 284:	csel	x0, x0, x2, gt
 288:	add	x2, x21, #0x10
 28c:	add	x0, x25, x0
 290:	add	x1, x21, x1
 294:	cmp	x2, x0
 298:	ccmp	x25, x1, #0x2, cc  // cc = lo, ul, last
 29c:	ccmp	x19, #0x7, #0x4, cs  // cs = hs, nlast
 2a0:	b.le	450 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x300>
 2a4:	cmp	x19, #0x0
 2a8:	adrp	x3, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 2ac:	csinc	x0, x19, xzr, gt
 2b0:	mov	x2, x25
 2b4:	sub	x0, x0, #0x1
 2b8:	mov	x1, x21
 2bc:	ldr	q0, [x3]
 2c0:	lsr	x3, x0, #1
 2c4:	add	x3, x21, x3, lsl #4
 2c8:	ld3	{v1.2d-v3.2d}, [x2], #48
 2cc:	add	v1.2d, v0.2d, v1.2d
 2d0:	str	q1, [x1, #16]!
 2d4:	cmp	x1, x3
 2d8:	b.ne	2c8 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x178>  // b.any
 2dc:	and	x0, x0, #0xfffffffffffffffe
 2e0:	add	x3, x0, #0x1
 2e4:	mov	w2, w0
 2e8:	add	x1, x0, x0, lsl #1
 2ec:	add	x2, x2, #0x2
 2f0:	cmp	x19, x3
 2f4:	add	w0, w0, #0x1
 2f8:	lsl	x1, x1, #3
 2fc:	ldr	x3, [x25, x1]
 300:	add	x3, x3, #0x2
 304:	str	x3, [x21, x2, lsl #3]
 308:	b.le	320 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1d0>
 30c:	add	x1, x25, x1
 310:	add	x0, x21, w0, uxtw #3
 314:	ldr	x1, [x1, #24]
 318:	add	x1, x1, #0x2
 31c:	str	x1, [x0, #16]
 320:	cmp	x19, #0x0
 324:	csinc	w19, w19, wzr, gt
 328:	str	w19, [x21, #8]
 32c:	mov	x0, x25
 330:	mov	x1, x20
 334:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 338:	ldp	x25, x26, [sp, #48]
 33c:	ldp	x27, x28, [sp, #64]
 340:	ldp	x21, x22, [sp, #16]
 344:	ldp	x23, x24, [sp, #32]
 348:	ldr	x30, [sp, #80]
 34c:	ldp	x19, x20, [sp], #112
 350:	ret
 354:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 358:	mov	x3, x0
 35c:	str	x0, [x20]
 360:	sub	x0, x3, #0x1
 364:	tst	x0, x3
 368:	b.eq	1c0 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x70>  // b.none
 36c:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 370:	add	x0, x0, #0x0
 374:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 378:	bl	0 <_ZN11__sanitizer3DieEv>
 37c:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 380:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 384:	add	x2, x2, #0x0
 388:	add	x0, x0, #0x0
 38c:	mov	x4, #0x0                   	// #0
 390:	mov	x3, #0x0                   	// #0
 394:	mov	w1, #0x98                  	// #152
 398:	stp	x21, x22, [sp, #16]
 39c:	stp	x23, x24, [sp, #32]
 3a0:	stp	x25, x26, [sp, #48]
 3a4:	stp	x27, x28, [sp, #64]
 3a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3ac:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 3b0:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 3b4:	mov	x3, x24
 3b8:	add	x2, x2, #0x0
 3bc:	add	x0, x0, #0x0
 3c0:	mov	x4, #0x2                   	// #2
 3c4:	mov	w1, #0x99                  	// #153
 3c8:	stp	x25, x26, [sp, #48]
 3cc:	stp	x27, x28, [sp, #64]
 3d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3d4:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 3d8:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 3dc:	add	x2, x2, #0x0
 3e0:	add	x0, x0, #0x0
 3e4:	mov	x4, #0x0                   	// #0
 3e8:	mov	x3, #0x0                   	// #0
 3ec:	mov	w1, #0xa0                  	// #160
 3f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3f4:	add	w3, w3, #0x1
 3f8:	mov	w1, #0x100                 	// #256
 3fc:	cmp	w3, #0x100
 400:	str	wzr, [x21, #8]
 404:	csel	w3, w3, w1, ls  // ls = plast
 408:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 40c:	add	x1, sp, #0x60
 410:	add	x0, x0, #0x0
 414:	str	x21, [sp, #96]
 418:	str	w3, [sp, #104]
 41c:	bl	0 <_Unwind_Backtrace>
 420:	mov	x1, x20
 424:	mov	x0, x21
 428:	bl	0 <_ZN11__sanitizer18BufferedStackTrace15LocatePcInTraceEm>
 42c:	mov	x1, x0
 430:	cbnz	x0, 440 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x2f0>
 434:	ldr	w0, [x21, #8]
 438:	cmp	w0, #0x1
 43c:	cset	x1, hi  // hi = pmore
 440:	mov	x0, x21
 444:	bl	0 <_ZN11__sanitizer18BufferedStackTrace14PopStackFramesEm>
 448:	str	x20, [x21, #16]
 44c:	b	340 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1f0>
 450:	mov	x3, x25
 454:	mov	x0, #0x0                   	// #0
 458:	ldr	x1, [x3], #24
 45c:	add	x1, x1, #0x2
 460:	str	x1, [x2, x0, lsl #3]
 464:	add	x0, x0, #0x1
 468:	cmp	x19, x0
 46c:	b.gt	458 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x308>
 470:	b	320 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x1d0>
 474:	ldr	x26, [x26]
 478:	ldr	x0, [x26]
 47c:	cbz	x0, 4d4 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x384>
 480:	sub	x1, x0, #0x1
 484:	tst	x1, x0
 488:	b.ne	36c <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x21c>  // b.any
 48c:	mov	x1, #0x17ff                	// #6143
 490:	add	x26, x0, x1
 494:	neg	x0, x0
 498:	add	x1, x28, #0x0
 49c:	and	x26, x26, x0
 4a0:	mov	w2, #0x0                   	// #0
 4a4:	mov	x0, x26
 4a8:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 4ac:	mov	x2, #0x0                   	// #0
 4b0:	mov	x27, x0
 4b4:	mov	x1, x25
 4b8:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
 4bc:	mov	x1, x20
 4c0:	mov	x0, x25
 4c4:	mov	x20, x26
 4c8:	mov	x25, x27
 4cc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
 4d0:	b	208 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0xb8>
 4d4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
 4d8:	str	x0, [x26]
 4dc:	b	480 <_ZN11__sanitizer18BufferedStackTrace10UnwindSlowEmPvj+0x330>
 4e0:	adrp	x2, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 4e4:	adrp	x0, 0 <_ZN11__sanitizer12_GLOBAL__N_112Unwind_TraceEP15_Unwind_ContextPv>
 4e8:	mov	x3, x19
 4ec:	add	x2, x2, #0x0
 4f0:	add	x0, x0, #0x0
 4f4:	mov	x4, #0x100                 	// #256
 4f8:	mov	w1, #0xa8                  	// #168
 4fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

sanitizer_unwind_win.cpp.o:     file format elf64-littleaarch64


lsan_common.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__lsanL11ResetTagsCbEmPv>:
       0:	stp	x19, x30, [sp, #-32]!
       4:	bl	0 <_ZN6__lsan12GetUserBeginEm>
       8:	mov	x1, x0
       c:	add	x19, sp, #0x18
      10:	mov	x0, x19
      14:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
      18:	mov	x0, x19
      1c:	bl	0 <_ZNK6__lsan12LsanMetadata9allocatedEv>
      20:	tst	w0, #0xff
      24:	b.ne	30 <_ZN6__lsanL11ResetTagsCbEmPv+0x30>  // b.any
      28:	ldp	x19, x30, [sp], #32
      2c:	ret
      30:	mov	x0, x19
      34:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
      38:	cmp	w0, #0x3
      3c:	b.eq	28 <_ZN6__lsanL11ResetTagsCbEmPv+0x28>  // b.none
      40:	mov	x0, x19
      44:	mov	w1, #0x0                   	// #0
      48:	bl	0 <_ZN6__lsan12LsanMetadata7set_tagENS_8ChunkTagE>
      4c:	ldp	x19, x30, [sp], #32
      50:	ret
      54:	nop

0000000000000058 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv>:
      58:	ldr	w2, [x0, #112]
      5c:	cmp	w2, #0x2
      60:	b.eq	68 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x10>  // b.none
      64:	ret
      68:	ldr	x4, [x1, #16]
      6c:	mov	x5, #0x0                   	// #0
      70:	mov	x2, x4
      74:	b	8c <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x34>
      78:	ldr	x7, [x6, x3, lsl #3]
      7c:	ldr	x6, [x0, #32]
      80:	cmp	w7, w6
      84:	b.lt	f0 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x98>  // b.tstop
      88:	mov	x2, x3
      8c:	cmp	x2, x5
      90:	b.ls	c4 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x6c>  // b.plast
      94:	add	x3, x2, x5
      98:	ldr	x6, [x1]
      9c:	cmp	x4, x3, lsr #1
      a0:	lsr	x3, x3, #1
      a4:	b.hi	78 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x20>  // b.pmore
      a8:	str	x30, [sp, #-16]!
      ac:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
      b0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
      b4:	add	x2, x2, #0x0
      b8:	add	x0, x0, #0x0
      bc:	mov	w1, #0x1c9                 	// #457
      c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
      c4:	cmp	x4, x5
      c8:	ldr	x0, [x0, #32]
      cc:	b.ls	e0 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x88>  // b.plast
      d0:	ldr	x1, [x1]
      d4:	ldr	x1, [x1, x5, lsl #3]
      d8:	cmp	x1, x0
      dc:	b.eq	64 <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0xc>  // b.none
      e0:	mov	x1, x0
      e4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
      e8:	add	x0, x0, #0x0
      ec:	b	0 <_ZN11__sanitizer6ReportEPKcz>
      f0:	add	x5, x3, #0x1
      f4:	b	8c <_ZN6__lsanL20ReportIfNotSuspendedEPN11__sanitizer17ThreadContextBaseEPv+0x34>

00000000000000f8 <_ZN6__lsanL15MarkInvalidPCCbEmPv>:
      f8:	stp	x19, x20, [sp, #-64]!
      fc:	str	x30, [sp, #24]
     100:	str	x0, [sp, #40]
     104:	cbz	x1, 1f8 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x100>
     108:	mov	x19, x1
     10c:	bl	0 <_ZN6__lsan12GetUserBeginEm>
     110:	mov	x1, x0
     114:	add	x20, sp, #0x38
     118:	mov	x0, x20
     11c:	str	x1, [sp, #40]
     120:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
     124:	mov	x0, x20
     128:	bl	0 <_ZNK6__lsan12LsanMetadata9allocatedEv>
     12c:	tst	w0, #0xff
     130:	b.ne	140 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x48>  // b.any
     134:	ldr	x30, [sp, #24]
     138:	ldp	x19, x20, [sp], #64
     13c:	ret
     140:	mov	x0, x20
     144:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     148:	cmp	w0, #0x2
     14c:	b.eq	134 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x3c>  // b.none
     150:	mov	x0, x20
     154:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     158:	cmp	w0, #0x3
     15c:	b.eq	134 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x3c>  // b.none
     160:	mov	x0, x20
     164:	str	x21, [sp, #16]
     168:	bl	0 <_ZNK6__lsan12LsanMetadata14stack_trace_idEv>
     16c:	mov	w1, w0
     170:	cbz	w0, 1b0 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0xb8>
     174:	ldr	x0, [x19, #8]
     178:	bl	0 <_ZN11__sanitizer20StackDepotReverseMap3GetEj>
     17c:	cmp	w1, #0x1
     180:	b.ls	1b0 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0xb8>  // b.plast
     184:	ldr	x21, [x0, #8]
     188:	cbz	x21, 1b0 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0xb8>
     18c:	ldrb	w0, [x19, #16]
     190:	cbnz	w0, 19c <_ZN6__lsanL15MarkInvalidPCCbEmPv+0xa4>
     194:	ldr	x21, [sp, #16]
     198:	b	134 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x3c>
     19c:	bl	0 <_ZN6__lsan9GetLinkerEv>
     1a0:	mov	x1, x21
     1a4:	bl	0 <_ZNK11__sanitizer12LoadedModule15containsAddressEm>
     1a8:	tst	w0, #0xff
     1ac:	b.eq	194 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x9c>  // b.none
     1b0:	mov	x0, x20
     1b4:	mov	w1, #0x2                   	// #2
     1b8:	bl	0 <_ZN6__lsan12LsanMetadata7set_tagENS_8ChunkTagE>
     1bc:	ldr	x19, [x19]
     1c0:	ldp	x4, x3, [x19, #8]
     1c4:	lsr	x4, x4, #3
     1c8:	cmp	x3, x4
     1cc:	b.hi	21c <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x124>  // b.pmore
     1d0:	add	x20, x3, #0x1
     1d4:	b.eq	234 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x13c>  // b.none
     1d8:	ldr	x21, [x19]
     1dc:	str	x20, [x19, #16]
     1e0:	add	x0, x21, x3, lsl #3
     1e4:	add	x1, sp, #0x28
     1e8:	mov	x2, #0x8                   	// #8
     1ec:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     1f0:	ldr	x21, [sp, #16]
     1f4:	b	134 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x3c>
     1f8:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     1fc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     200:	add	x2, x2, #0x0
     204:	add	x0, x0, #0x0
     208:	mov	x4, #0x0                   	// #0
     20c:	mov	x3, #0x0                   	// #0
     210:	mov	w1, #0x18c                 	// #396
     214:	str	x21, [sp, #16]
     218:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     21c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     220:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     224:	add	x2, x2, #0x0
     228:	add	x0, x0, #0x0
     22c:	mov	w1, #0x1cd                 	// #461
     230:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     234:	tst	x20, x3
     238:	b.eq	274 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x17c>  // b.none
     23c:	clz	x2, x20
     240:	mov	w1, #0x3f                  	// #63
     244:	sub	w2, w1, w2
     248:	mov	x1, #0x1                   	// #1
     24c:	add	w4, w2, #0x1
     250:	lsl	x4, x1, x4
     254:	cmp	x20, x4
     258:	b.cs	314 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x21c>  // b.hs, b.nlast
     25c:	lsl	x1, x1, x2
     260:	cmp	x20, x1
     264:	b.ls	330 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x238>  // b.plast
     268:	cmp	x3, x4
     26c:	b.hi	2ec <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x1f4>  // b.pmore
     270:	mov	x20, x4
     274:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     278:	lsl	x20, x20, #3
     27c:	ldr	x21, [x21]
     280:	ldr	x0, [x21]
     284:	cbz	x0, 2e0 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x1e8>
     288:	sub	x1, x0, #0x1
     28c:	tst	x1, x0
     290:	b.ne	304 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x20c>  // b.any
     294:	add	x20, x20, x1
     298:	neg	x0, x0
     29c:	and	x20, x20, x0
     2a0:	mov	w2, #0x0                   	// #0
     2a4:	mov	x0, x20
     2a8:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     2ac:	add	x1, x1, #0x0
     2b0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     2b4:	ldr	x1, [x19]
     2b8:	mov	x21, x0
     2bc:	ldr	x2, [x19, #16]
     2c0:	lsl	x2, x2, #3
     2c4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     2c8:	ldp	x0, x1, [x19]
     2cc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     2d0:	stp	x21, x20, [x19]
     2d4:	ldr	x3, [x19, #16]
     2d8:	add	x20, x3, #0x1
     2dc:	b	1dc <_ZN6__lsanL15MarkInvalidPCCbEmPv+0xe4>
     2e0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     2e4:	str	x0, [x21]
     2e8:	b	288 <_ZN6__lsanL15MarkInvalidPCCbEmPv+0x190>
     2ec:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     2f0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     2f4:	add	x2, x2, #0x0
     2f8:	add	x0, x0, #0x0
     2fc:	mov	w1, #0x20c                 	// #524
     300:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     304:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     308:	add	x0, x0, #0x0
     30c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     310:	bl	0 <_ZN11__sanitizer3DieEv>
     314:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     318:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     31c:	mov	x3, x20
     320:	add	x2, x2, #0x0
     324:	add	x0, x0, #0x0
     328:	mov	w1, #0x18a                 	// #394
     32c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     330:	mov	x4, x1
     334:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     338:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     33c:	mov	x3, x20
     340:	add	x2, x2, #0x0
     344:	add	x0, x0, #0x0
     348:	mov	w1, #0x18b                 	// #395
     34c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>:
     350:	stp	x29, x30, [sp, #-128]!
     354:	mov	x29, sp
     358:	stp	x27, x28, [sp, #80]
     35c:	adrp	x27, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     360:	add	x4, x27, #0x0
     364:	stp	x19, x20, [sp, #16]
     368:	ldrb	w5, [x4, #18]
     36c:	stp	x21, x22, [sp, #32]
     370:	mov	x22, x0
     374:	mov	x21, x1
     378:	stp	x23, x24, [sp, #48]
     37c:	ldrb	w0, [x4, #20]
     380:	stp	x25, x26, [sp, #64]
     384:	mov	x25, x2
     388:	cbz	w5, 4fc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x1ac>
     38c:	cbnz	w0, 4c4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x174>
     390:	mov	x19, x22
     394:	mov	x24, #0x1                   	// #1
     398:	add	x0, x19, #0x8
     39c:	cmp	x21, x0
     3a0:	b.cc	4a8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x158>  // b.lo, b.ul, b.last
     3a4:	clz	x23, x29
     3a8:	mov	w28, #0x3f                  	// #63
     3ac:	sub	w23, w28, w23
     3b0:	add	x26, x29, #0x78
     3b4:	add	w23, w23, #0x1
     3b8:	b	3cc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x7c>
     3bc:	add	x19, x19, x24
     3c0:	add	x0, x19, #0x8
     3c4:	cmp	x21, x0
     3c8:	b.cc	4a8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x158>  // b.lo, b.ul, b.last
     3cc:	ldr	x20, [x19]
     3d0:	mov	x0, #0x3fff                	// #16383
     3d4:	cmp	x20, x0
     3d8:	b.ls	3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>  // b.plast
     3dc:	lsr	x0, x20, x23
     3e0:	cbnz	x0, 3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>
     3e4:	mov	x0, x20
     3e8:	bl	0 <_ZN6__lsan15PointsIntoChunkEPv>
     3ec:	str	x0, [x29, #112]
     3f0:	cmp	x0, #0x0
     3f4:	ccmp	x22, x0, #0x4, ne  // ne = any
     3f8:	b.eq	3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>  // b.none
     3fc:	mov	x1, x0
     400:	mov	x0, x26
     404:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
     408:	mov	x0, x26
     40c:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     410:	cmp	w0, #0x2
     414:	b.eq	3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>  // b.none
     418:	mov	x0, x26
     41c:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     420:	cmp	w0, #0x3
     424:	b.eq	3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>  // b.none
     428:	add	x1, x27, #0x0
     42c:	ldrb	w0, [x1, #19]
     430:	cbnz	w0, 44c <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0xfc>
     434:	mov	x0, x19
     438:	str	x1, [x29, #104]
     43c:	bl	0 <_ZN6__lsan14WordIsPoisonedEm>
     440:	tst	w0, #0xff
     444:	ldr	x1, [x29, #104]
     448:	b.ne	550 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x200>  // b.any
     44c:	mov	x0, x26
     450:	mov	w1, #0x2                   	// #2
     454:	bl	0 <_ZN6__lsan12LsanMetadata7set_tagENS_8ChunkTagE>
     458:	add	x0, x27, #0x0
     45c:	ldrb	w0, [x0, #20]
     460:	cbnz	w0, 508 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x1b8>
     464:	cbz	x25, 3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>
     468:	ldp	x4, x0, [x25, #8]
     46c:	lsr	x4, x4, #3
     470:	cmp	x0, x4
     474:	b.hi	5a0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x250>  // b.pmore
     478:	add	x3, x0, #0x1
     47c:	b.eq	5bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x26c>  // b.none
     480:	ldr	x4, [x25]
     484:	str	x3, [x25, #16]
     488:	add	x0, x4, x0, lsl #3
     48c:	add	x1, x29, #0x70
     490:	add	x19, x19, x24
     494:	mov	x2, #0x8                   	// #8
     498:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     49c:	add	x0, x19, #0x8
     4a0:	cmp	x21, x0
     4a4:	b.cs	3cc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x7c>  // b.hs, b.nlast
     4a8:	ldp	x19, x20, [sp, #16]
     4ac:	ldp	x21, x22, [sp, #32]
     4b0:	ldp	x23, x24, [sp, #48]
     4b4:	ldp	x25, x26, [sp, #64]
     4b8:	ldp	x27, x28, [sp, #80]
     4bc:	ldp	x29, x30, [sp], #128
     4c0:	ret
     4c4:	mov	x24, #0x1                   	// #1
     4c8:	mov	x1, x3
     4cc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     4d0:	mov	x3, x21
     4d4:	add	x0, x0, #0x0
     4d8:	mov	x2, x22
     4dc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     4e0:	udiv	x0, x22, x24
     4e4:	add	x19, x22, x24
     4e8:	msub	x0, x0, x24, x22
     4ec:	cmp	x0, #0x0
     4f0:	sub	x19, x19, x0
     4f4:	csel	x19, x19, x22, ne  // ne = any
     4f8:	b	398 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x48>
     4fc:	mov	x24, #0x8                   	// #8
     500:	cbz	w0, 4e0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x190>
     504:	b	4c8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x178>
     508:	ldr	x3, [x29, #112]
     50c:	mov	x0, x26
     510:	str	x3, [x29, #96]
     514:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     518:	mov	x4, x0
     51c:	ldr	x1, [x29, #112]
     520:	mov	x0, x26
     524:	add	x4, x4, x1
     528:	str	x4, [x29, #104]
     52c:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     530:	mov	x5, x0
     534:	ldp	x3, x4, [x29, #96]
     538:	mov	x2, x20
     53c:	mov	x1, x19
     540:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     544:	add	x0, x0, #0x0
     548:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     54c:	b	464 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x114>
     550:	ldrb	w0, [x1, #20]
     554:	cbz	w0, 3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>
     558:	ldr	x3, [x29, #112]
     55c:	mov	x0, x26
     560:	str	x3, [x29, #96]
     564:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     568:	mov	x4, x0
     56c:	ldr	x1, [x29, #112]
     570:	mov	x0, x26
     574:	add	x4, x4, x1
     578:	str	x4, [x29, #104]
     57c:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     580:	mov	x5, x0
     584:	ldp	x3, x4, [x29, #96]
     588:	mov	x2, x20
     58c:	mov	x1, x19
     590:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     594:	add	x0, x0, #0x0
     598:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     59c:	b	3bc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x6c>
     5a0:	mov	x3, x0
     5a4:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     5a8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     5ac:	add	x2, x2, #0x0
     5b0:	add	x0, x0, #0x0
     5b4:	mov	w1, #0x1cd                 	// #461
     5b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     5bc:	tst	x3, x0
     5c0:	b.eq	5f8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x2a8>  // b.none
     5c4:	clz	x2, x3
     5c8:	mov	x1, #0x1                   	// #1
     5cc:	sub	w2, w28, w2
     5d0:	add	w4, w2, #0x1
     5d4:	lsl	x4, x1, x4
     5d8:	cmp	x3, x4
     5dc:	b.cs	698 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x348>  // b.hs, b.nlast
     5e0:	lsl	x1, x1, x2
     5e4:	cmp	x3, x1
     5e8:	b.ls	67c <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x32c>  // b.plast
     5ec:	cmp	x0, x4
     5f0:	b.hi	6b0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x360>  // b.pmore
     5f4:	mov	x3, x4
     5f8:	adrp	x1, 0 <_ZN11__sanitizer14PageSizeCachedE>
     5fc:	lsl	x20, x3, #3
     600:	ldr	x1, [x1]
     604:	ldr	x0, [x1]
     608:	cbz	x0, 668 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x318>
     60c:	sub	x1, x0, #0x1
     610:	tst	x1, x0
     614:	b.ne	6cc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x37c>  // b.any
     618:	add	x20, x20, x1
     61c:	neg	x0, x0
     620:	and	x20, x20, x0
     624:	mov	w2, #0x0                   	// #0
     628:	mov	x0, x20
     62c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     630:	add	x1, x1, #0x0
     634:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     638:	ldr	x1, [x25]
     63c:	str	x0, [x29, #104]
     640:	ldr	x2, [x25, #16]
     644:	lsl	x2, x2, #3
     648:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     64c:	ldp	x0, x1, [x25]
     650:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     654:	ldr	x0, [x25, #16]
     658:	ldr	x4, [x29, #104]
     65c:	add	x3, x0, #0x1
     660:	stp	x4, x20, [x25]
     664:	b	484 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x134>
     668:	str	x1, [x29, #104]
     66c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     670:	ldr	x1, [x29, #104]
     674:	str	x0, [x1]
     678:	b	60c <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0+0x2bc>
     67c:	mov	x4, x1
     680:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     684:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     688:	add	x2, x2, #0x0
     68c:	add	x0, x0, #0x0
     690:	mov	w1, #0x18b                 	// #395
     694:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     698:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     69c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     6a0:	add	x2, x2, #0x0
     6a4:	add	x0, x0, #0x0
     6a8:	mov	w1, #0x18a                 	// #394
     6ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6b0:	mov	x3, x0
     6b4:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     6b8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     6bc:	add	x2, x2, #0x0
     6c0:	add	x0, x0, #0x0
     6c4:	mov	w1, #0x20c                 	// #524
     6c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     6cc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     6d0:	add	x0, x0, #0x0
     6d4:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     6d8:	bl	0 <_ZN11__sanitizer3DieEv>
     6dc:	nop

00000000000006e0 <_ZN6__lsan24ForEachExtraStackRangeCbEmmPv>:
     6e0:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     6e4:	add	x3, x3, #0x0
     6e8:	b	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
     6ec:	nop

00000000000006f0 <_ZN6__lsanL16CollectIgnoredCbEmPv>:
     6f0:	stp	x19, x20, [sp, #-64]!
     6f4:	str	x30, [sp, #24]
     6f8:	str	x0, [sp, #40]
     6fc:	cbz	x1, 790 <_ZN6__lsanL16CollectIgnoredCbEmPv+0xa0>
     700:	mov	x19, x1
     704:	bl	0 <_ZN6__lsan12GetUserBeginEm>
     708:	mov	x1, x0
     70c:	add	x20, sp, #0x38
     710:	mov	x0, x20
     714:	str	x1, [sp, #40]
     718:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
     71c:	mov	x0, x20
     720:	bl	0 <_ZNK6__lsan12LsanMetadata9allocatedEv>
     724:	tst	w0, #0xff
     728:	b.ne	738 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x48>  // b.any
     72c:	ldr	x30, [sp, #24]
     730:	ldp	x19, x20, [sp], #64
     734:	ret
     738:	mov	x0, x20
     73c:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     740:	cmp	w0, #0x3
     744:	b.ne	72c <_ZN6__lsanL16CollectIgnoredCbEmPv+0x3c>  // b.any
     748:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     74c:	str	x21, [sp, #16]
     750:	ldrb	w0, [x0]
     754:	cbnz	w0, 7b4 <_ZN6__lsanL16CollectIgnoredCbEmPv+0xc4>
     758:	ldp	x4, x3, [x19, #8]
     75c:	lsr	x4, x4, #3
     760:	cmp	x3, x4
     764:	b.hi	89c <_ZN6__lsanL16CollectIgnoredCbEmPv+0x1ac>  // b.pmore
     768:	add	x20, x3, #0x1
     76c:	b.eq	7f0 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x100>  // b.none
     770:	ldr	x21, [x19]
     774:	str	x20, [x19, #16]
     778:	add	x0, x21, x3, lsl #3
     77c:	add	x1, sp, #0x28
     780:	mov	x2, #0x8                   	// #8
     784:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     788:	ldr	x21, [sp, #16]
     78c:	b	72c <_ZN6__lsanL16CollectIgnoredCbEmPv+0x3c>
     790:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     794:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     798:	add	x2, x2, #0x0
     79c:	add	x0, x0, #0x0
     7a0:	mov	x4, #0x0                   	// #0
     7a4:	mov	x3, #0x0                   	// #0
     7a8:	mov	w1, #0x170                 	// #368
     7ac:	str	x21, [sp, #16]
     7b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     7b4:	mov	x0, x20
     7b8:	ldr	x21, [sp, #40]
     7bc:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     7c0:	mov	x2, x0
     7c4:	mov	x0, x20
     7c8:	ldr	x20, [sp, #40]
     7cc:	add	x20, x2, x20
     7d0:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
     7d4:	mov	x2, x20
     7d8:	mov	x3, x0
     7dc:	mov	x1, x21
     7e0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     7e4:	add	x0, x0, #0x0
     7e8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     7ec:	b	758 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x68>
     7f0:	tst	x20, x3
     7f4:	b.eq	830 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x140>  // b.none
     7f8:	clz	x2, x20
     7fc:	mov	w0, #0x3f                  	// #63
     800:	sub	w0, w0, w2
     804:	mov	x2, #0x1                   	// #1
     808:	add	w4, w0, #0x1
     80c:	lsl	x4, x2, x4
     810:	cmp	x20, x4
     814:	b.cs	8e8 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x1f8>  // b.hs, b.nlast
     818:	lsl	x0, x2, x0
     81c:	cmp	x20, x0
     820:	b.ls	904 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x214>  // b.plast
     824:	cmp	x3, x4
     828:	b.hi	8c0 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x1d0>  // b.pmore
     82c:	mov	x20, x4
     830:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
     834:	lsl	x20, x20, #3
     838:	ldr	x21, [x21]
     83c:	ldr	x0, [x21]
     840:	cbz	x0, 8b4 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x1c4>
     844:	sub	x1, x0, #0x1
     848:	tst	x0, x1
     84c:	b.ne	8d8 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x1e8>  // b.any
     850:	add	x20, x20, x1
     854:	neg	x0, x0
     858:	and	x20, x20, x0
     85c:	mov	w2, #0x0                   	// #0
     860:	mov	x0, x20
     864:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     868:	add	x1, x1, #0x0
     86c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
     870:	ldr	x1, [x19]
     874:	mov	x21, x0
     878:	ldr	x2, [x19, #16]
     87c:	lsl	x2, x2, #3
     880:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     884:	ldp	x0, x1, [x19]
     888:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
     88c:	stp	x21, x20, [x19]
     890:	ldr	x3, [x19, #16]
     894:	add	x20, x3, #0x1
     898:	b	774 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x84>
     89c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8a0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8a4:	add	x2, x2, #0x0
     8a8:	add	x0, x0, #0x0
     8ac:	mov	w1, #0x1cd                 	// #461
     8b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     8b4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
     8b8:	str	x0, [x21]
     8bc:	b	844 <_ZN6__lsanL16CollectIgnoredCbEmPv+0x154>
     8c0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8c4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8c8:	add	x2, x2, #0x0
     8cc:	add	x0, x0, #0x0
     8d0:	mov	w1, #0x20c                 	// #524
     8d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     8d8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8dc:	add	x0, x0, #0x0
     8e0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
     8e4:	bl	0 <_ZN11__sanitizer3DieEv>
     8e8:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8ec:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     8f0:	mov	x3, x20
     8f4:	add	x2, x2, #0x0
     8f8:	add	x0, x0, #0x0
     8fc:	mov	w1, #0x18a                 	// #394
     900:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     904:	mov	x4, x0
     908:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     90c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     910:	mov	x3, x20
     914:	add	x2, x2, #0x0
     918:	add	x0, x0, #0x0
     91c:	mov	w1, #0x18b                 	// #395
     920:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     924:	nop

0000000000000928 <_ZN6__lsan23DisableCounterUnderflowEv>:
     928:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     92c:	ldr	x0, [x0]
     930:	ldrb	w0, [x0, #57]
     934:	cbnz	w0, 93c <_ZN6__lsan23DisableCounterUnderflowEv+0x14>
     938:	ret
     93c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     940:	add	x0, x0, #0x0
     944:	str	x30, [sp, #-16]!
     948:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     94c:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000950 <_ZN6__lsan5Flags11SetDefaultsEv>:
     950:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     954:	strb	wzr, [x0]
     958:	stur	xzr, [x0, #4]
     95c:	ldr	d0, [x1]
     960:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     964:	add	x1, x1, #0x0
     968:	strh	wzr, [x0, #20]
     96c:	str	x1, [x0, #24]
     970:	stur	d0, [x0, #12]
     974:	ret

0000000000000978 <_ZN6__lsan17RegisterLsanFlagsEPN11__sanitizer10FlagParserEPNS_5FlagsE>:
     978:	stp	x19, x20, [sp, #-48]!
     97c:	mov	x20, x0
     980:	mov	x19, x1
     984:	stp	x21, x22, [sp, #16]
     988:	adrp	x21, 0 <_ZN11__sanitizer10FlagParser5AllocE>
     98c:	mov	x1, #0x10                  	// #16
     990:	ldr	x21, [x21]
     994:	stp	x23, x30, [sp, #32]
     998:	adrp	x22, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     99c:	mov	x0, x21
     9a0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9a4:	mov	x2, x0
     9a8:	add	x22, x22, #0x0
     9ac:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     9b0:	add	x3, x3, #0x0
     9b4:	mov	x0, x20
     9b8:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     9bc:	stp	x22, x19, [x2]
     9c0:	add	x1, x1, #0x0
     9c4:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     9c8:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     9cc:	add	x23, x23, #0x0
     9d0:	mov	x0, x21
     9d4:	mov	x1, #0x10                  	// #16
     9d8:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     9dc:	mov	x2, x0
     9e0:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     9e4:	add	x0, x19, #0x4
     9e8:	add	x3, x3, #0x0
     9ec:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     9f0:	stp	x23, x0, [x2]
     9f4:	add	x1, x1, #0x0
     9f8:	mov	x0, x20
     9fc:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a00:	mov	x0, x21
     a04:	mov	x1, #0x10                  	// #16
     a08:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a0c:	mov	x2, x0
     a10:	add	x4, x19, #0x8
     a14:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a18:	add	x3, x3, #0x0
     a1c:	mov	x0, x20
     a20:	stp	x23, x4, [x2]
     a24:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a28:	add	x1, x1, #0x0
     a2c:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a30:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a34:	mov	x0, x21
     a38:	mov	x1, #0x10                  	// #16
     a3c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a40:	mov	x2, x0
     a44:	add	x4, x19, #0xc
     a48:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a4c:	add	x3, x3, #0x0
     a50:	mov	x0, x20
     a54:	stp	x22, x4, [x2]
     a58:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a5c:	add	x1, x1, #0x0
     a60:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a64:	add	x23, x23, #0x0
     a68:	mov	x0, x21
     a6c:	mov	x1, #0x10                  	// #16
     a70:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     a74:	mov	x2, x0
     a78:	add	x4, x19, #0xd
     a7c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a80:	add	x3, x3, #0x0
     a84:	mov	x0, x20
     a88:	stp	x22, x4, [x2]
     a8c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     a90:	add	x1, x1, #0x0
     a94:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     a98:	mov	x0, x21
     a9c:	mov	x1, #0x10                  	// #16
     aa0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     aa4:	mov	x2, x0
     aa8:	add	x4, x19, #0xe
     aac:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     ab0:	add	x3, x3, #0x0
     ab4:	mov	x0, x20
     ab8:	stp	x22, x4, [x2]
     abc:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     ac0:	add	x1, x1, #0x0
     ac4:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     ac8:	mov	x0, x21
     acc:	mov	x1, #0x10                  	// #16
     ad0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     ad4:	mov	x2, x0
     ad8:	add	x4, x19, #0xf
     adc:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     ae0:	add	x3, x3, #0x0
     ae4:	mov	x0, x20
     ae8:	stp	x22, x4, [x2]
     aec:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     af0:	add	x1, x1, #0x0
     af4:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     af8:	mov	x0, x21
     afc:	mov	x1, #0x10                  	// #16
     b00:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b04:	mov	x2, x0
     b08:	add	x4, x19, #0x10
     b0c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b10:	add	x3, x3, #0x0
     b14:	mov	x0, x20
     b18:	stp	x22, x4, [x2]
     b1c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b20:	add	x1, x1, #0x0
     b24:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b28:	mov	x0, x21
     b2c:	mov	x1, #0x10                  	// #16
     b30:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b34:	mov	x2, x0
     b38:	add	x4, x19, #0x11
     b3c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b40:	add	x3, x3, #0x0
     b44:	mov	x0, x20
     b48:	stp	x22, x4, [x2]
     b4c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b50:	add	x1, x1, #0x0
     b54:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b58:	mov	x0, x21
     b5c:	mov	x1, #0x10                  	// #16
     b60:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b64:	mov	x2, x0
     b68:	add	x4, x19, #0x12
     b6c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b70:	add	x3, x3, #0x0
     b74:	mov	x0, x20
     b78:	stp	x22, x4, [x2]
     b7c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     b80:	add	x1, x1, #0x0
     b84:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     b88:	mov	x0, x21
     b8c:	mov	x1, #0x10                  	// #16
     b90:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     b94:	mov	x2, x0
     b98:	add	x4, x19, #0x13
     b9c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     ba0:	add	x3, x3, #0x0
     ba4:	mov	x0, x20
     ba8:	stp	x22, x4, [x2]
     bac:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     bb0:	add	x1, x1, #0x0
     bb4:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     bb8:	mov	x0, x21
     bbc:	mov	x1, #0x10                  	// #16
     bc0:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     bc4:	mov	x2, x0
     bc8:	mov	x3, x23
     bcc:	add	x1, x19, #0x14
     bd0:	mov	x0, x20
     bd4:	stp	x22, x1, [x2]
     bd8:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     bdc:	add	x1, x1, #0x0
     be0:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     be4:	mov	x0, x21
     be8:	mov	x1, #0x10                  	// #16
     bec:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     bf0:	mov	x2, x0
     bf4:	add	x4, x19, #0x15
     bf8:	mov	x3, x23
     bfc:	mov	x0, x20
     c00:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c04:	stp	x22, x4, [x2]
     c08:	add	x1, x1, #0x0
     c0c:	add	x19, x19, #0x18
     c10:	bl	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c14:	mov	x0, x21
     c18:	mov	x1, #0x10                  	// #16
     c1c:	bl	0 <_ZN11__sanitizer17LowLevelAllocator8AllocateEm>
     c20:	mov	x2, x0
     c24:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c28:	add	x1, x1, #0x0
     c2c:	ldp	x21, x22, [sp, #16]
     c30:	mov	x0, x20
     c34:	ldp	x23, x30, [sp, #32]
     c38:	stp	x1, x19, [x2]
     c3c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c40:	ldp	x19, x20, [sp], #48
     c44:	add	x3, x3, #0x0
     c48:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c4c:	add	x1, x1, #0x0
     c50:	b	0 <_ZN11__sanitizer10FlagParser15RegisterHandlerEPKcPNS_15FlagHandlerBaseES2_>
     c54:	nop

0000000000000c58 <_ZN6__lsan22InitializeSuppressionsEv>:
     c58:	stp	x19, x20, [sp, #-32]!
     c5c:	stp	x21, x30, [sp, #16]
     c60:	adrp	x21, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c64:	add	x20, x21, #0x0
     c68:	ldr	x4, [x20, #32]
     c6c:	cbnz	x4, cd4 <_ZN6__lsan22InitializeSuppressionsEv+0x7c>
     c70:	add	x19, x20, #0x40
     c74:	mov	w2, #0x1                   	// #1
     c78:	mov	x0, x19
     c7c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     c80:	add	x1, x1, #0x0
     c84:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
     c88:	ldr	x1, [x20, #24]
     c8c:	mov	x0, x19
     c90:	str	x19, [x20, #32]
     c94:	bl	0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc>
     c98:	adrp	x0, 0 <__lsan_default_suppressions>
     c9c:	ldr	x0, [x0]
     ca0:	cbz	x0, cb8 <_ZN6__lsan22InitializeSuppressionsEv+0x60>
     ca4:	ldr	x19, [x20, #32]
     ca8:	bl	0 <__lsan_default_suppressions>
     cac:	mov	x1, x0
     cb0:	mov	x0, x19
     cb4:	bl	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc>
     cb8:	add	x21, x21, #0x0
     cbc:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     cc0:	add	x1, x1, #0x0
     cc4:	ldr	x0, [x21, #32]
     cc8:	ldp	x21, x30, [sp, #16]
     ccc:	ldp	x19, x20, [sp], #32
     cd0:	b	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc>
     cd4:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     cd8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     cdc:	add	x2, x2, #0x0
     ce0:	add	x0, x0, #0x0
     ce4:	mov	x3, #0x0                   	// #0
     ce8:	mov	w1, #0x56                  	// #86
     cec:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000cf0 <_ZN6__lsan14GetRootRegionsEv>:
     cf0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     cf4:	ldr	x0, [x0]
     cf8:	ret
     cfc:	nop

0000000000000d00 <_ZN6__lsan21InitializeRootRegionsEv>:
     d00:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     d04:	add	x0, x0, #0x0
     d08:	ldr	x1, [x0, #176]
     d0c:	cbnz	x1, d24 <_ZN6__lsan21InitializeRootRegionsEv+0x24>
     d10:	add	x1, x0, #0xc0
     d14:	str	x1, [x0, #176]
     d18:	str	xzr, [x0, #192]
     d1c:	stp	xzr, xzr, [x0, #200]
     d20:	ret
     d24:	str	x30, [sp, #-16]!
     d28:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     d2c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     d30:	add	x2, x2, #0x0
     d34:	add	x0, x0, #0x0
     d38:	mov	x4, #0x0                   	// #0
     d3c:	mov	x3, #0x0                   	// #0
     d40:	mov	w1, #0x69                  	// #105
     d44:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000d48 <_ZN6__lsan27MaybeCallLsanDefaultOptionsEv>:
     d48:	adrp	x0, 0 <__lsan_default_options>
     d4c:	ldr	x0, [x0]
     d50:	cbz	x0, d58 <_ZN6__lsan27MaybeCallLsanDefaultOptionsEv+0x10>
     d54:	b	0 <__lsan_default_options>
     d58:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     d5c:	add	x0, x0, #0x0
     d60:	ret
     d64:	nop

0000000000000d68 <_ZN6__lsan14InitCommonLsanEv>:
     d68:	stp	x19, x20, [sp, #-32]!
     d6c:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     d70:	add	x19, x20, #0x0
     d74:	ldr	x0, [x19, #176]
     d78:	str	x30, [sp, #24]
     d7c:	cbnz	x0, e24 <_ZN6__lsan14InitCommonLsanEv+0xbc>
     d80:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     d84:	add	x1, x19, #0xc0
     d88:	str	x1, [x19, #176]
     d8c:	ldr	x0, [x0]
     d90:	str	xzr, [x19, #192]
     d94:	stp	xzr, xzr, [x19, #200]
     d98:	ldrb	w0, [x0, #57]
     d9c:	cbnz	w0, dac <_ZN6__lsan14InitCommonLsanEv+0x44>
     da0:	ldr	x30, [sp, #24]
     da4:	ldp	x19, x20, [sp], #32
     da8:	ret
     dac:	ldr	x4, [x19, #32]
     db0:	str	x21, [sp, #16]
     db4:	cbnz	x4, e48 <_ZN6__lsan14InitCommonLsanEv+0xe0>
     db8:	add	x21, x19, #0x40
     dbc:	mov	w2, #0x1                   	// #1
     dc0:	mov	x0, x21
     dc4:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     dc8:	add	x1, x1, #0x0
     dcc:	bl	0 <_ZN11__sanitizer18SuppressionContextC1EPPKci>
     dd0:	ldr	x1, [x19, #24]
     dd4:	mov	x0, x21
     dd8:	str	x21, [x19, #32]
     ddc:	bl	0 <_ZN11__sanitizer18SuppressionContext13ParseFromFileEPKc>
     de0:	adrp	x0, 0 <__lsan_default_suppressions>
     de4:	ldr	x0, [x0]
     de8:	cbz	x0, e00 <_ZN6__lsan14InitCommonLsanEv+0x98>
     dec:	ldr	x19, [x19, #32]
     df0:	bl	0 <__lsan_default_suppressions>
     df4:	mov	x1, x0
     df8:	mov	x0, x19
     dfc:	bl	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc>
     e00:	add	x20, x20, #0x0
     e04:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e08:	add	x1, x1, #0x0
     e0c:	ldr	x0, [x20, #32]
     e10:	bl	0 <_ZN11__sanitizer18SuppressionContext5ParseEPKc>
     e14:	ldr	x21, [sp, #16]
     e18:	ldr	x30, [sp, #24]
     e1c:	ldp	x19, x20, [sp], #32
     e20:	b	0 <_ZN6__lsan33InitializePlatformSpecificModulesEv>
     e24:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e28:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e2c:	add	x2, x2, #0x0
     e30:	add	x0, x0, #0x0
     e34:	mov	x4, #0x0                   	// #0
     e38:	mov	x3, #0x0                   	// #0
     e3c:	mov	w1, #0x69                  	// #105
     e40:	str	x21, [sp, #16]
     e44:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     e48:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e4c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e50:	add	x2, x2, #0x0
     e54:	add	x0, x0, #0x0
     e58:	mov	x3, #0x0                   	// #0
     e5c:	mov	w1, #0x56                  	// #86
     e60:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     e64:	nop

0000000000000e68 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE>:
     e68:	stp	x29, x30, [sp, #-128]!
     e6c:	mov	x29, sp
     e70:	stp	x19, x20, [sp, #16]
     e74:	stp	x21, x22, [sp, #32]
     e78:	stp	x23, x24, [sp, #48]
     e7c:	mov	w24, w4
     e80:	sub	w4, w4, #0x1
     e84:	stp	x25, x26, [sp, #64]
     e88:	cmp	w4, #0x1
     e8c:	stp	x27, x28, [sp, #80]
     e90:	b.hi	10c8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x260>  // b.pmore
     e94:	mov	x21, x0
     e98:	adrp	x27, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
     e9c:	add	x0, x27, #0x0
     ea0:	mov	x20, x1
     ea4:	mov	x25, x2
     ea8:	ldrb	w1, [x0, #18]
     eac:	ldrb	w0, [x0, #20]
     eb0:	cbz	w1, fec <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x184>
     eb4:	cbnz	w0, 1010 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x1a8>
     eb8:	mov	x19, x21
     ebc:	mov	x23, #0x1                   	// #1
     ec0:	add	x0, x19, #0x8
     ec4:	cmp	x20, x0
     ec8:	b.cc	fd0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x168>  // b.lo, b.ul, b.last
     ecc:	clz	x22, x29
     ed0:	mov	w0, #0x3f                  	// #63
     ed4:	sub	w22, w0, w22
     ed8:	add	x26, x29, #0x78
     edc:	add	w22, w22, #0x1
     ee0:	b	ef4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x8c>
     ee4:	add	x19, x19, x23
     ee8:	add	x0, x19, #0x8
     eec:	cmp	x20, x0
     ef0:	b.cc	fd0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x168>  // b.lo, b.ul, b.last
     ef4:	ldr	x28, [x19]
     ef8:	mov	x0, #0x3fff                	// #16383
     efc:	cmp	x28, x0
     f00:	b.ls	ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>  // b.plast
     f04:	lsr	x0, x28, x22
     f08:	cbnz	x0, ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>
     f0c:	mov	x0, x28
     f10:	bl	0 <_ZN6__lsan15PointsIntoChunkEPv>
     f14:	str	x0, [x29, #112]
     f18:	cmp	x0, #0x0
     f1c:	ccmp	x0, x21, #0x4, ne  // ne = any
     f20:	b.eq	ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>  // b.none
     f24:	mov	x1, x0
     f28:	mov	x0, x26
     f2c:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
     f30:	mov	x0, x26
     f34:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     f38:	cmp	w0, #0x2
     f3c:	b.eq	ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>  // b.none
     f40:	mov	x0, x26
     f44:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
     f48:	cmp	w0, #0x3
     f4c:	b.eq	ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>  // b.none
     f50:	add	x1, x27, #0x0
     f54:	ldrb	w0, [x1, #19]
     f58:	cbnz	w0, f74 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x10c>
     f5c:	mov	x0, x19
     f60:	str	x1, [x29, #104]
     f64:	bl	0 <_ZN6__lsan14WordIsPoisonedEm>
     f68:	tst	w0, #0xff
     f6c:	ldr	x1, [x29, #104]
     f70:	b.ne	1078 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x210>  // b.any
     f74:	mov	x0, x26
     f78:	mov	w1, w24
     f7c:	bl	0 <_ZN6__lsan12LsanMetadata7set_tagENS_8ChunkTagE>
     f80:	add	x0, x27, #0x0
     f84:	ldrb	w0, [x0, #20]
     f88:	cbnz	w0, 1030 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x1c8>
     f8c:	cbz	x25, ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>
     f90:	ldp	x4, x0, [x25, #8]
     f94:	lsr	x4, x4, #3
     f98:	cmp	x0, x4
     f9c:	b.hi	10e8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x280>  // b.pmore
     fa0:	add	x3, x0, #0x1
     fa4:	b.eq	1104 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x29c>  // b.none
     fa8:	ldr	x4, [x25]
     fac:	str	x3, [x25, #16]
     fb0:	add	x0, x4, x0, lsl #3
     fb4:	add	x1, x29, #0x70
     fb8:	add	x19, x19, x23
     fbc:	mov	x2, #0x8                   	// #8
     fc0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
     fc4:	add	x0, x19, #0x8
     fc8:	cmp	x20, x0
     fcc:	b.cs	ef4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x8c>  // b.hs, b.nlast
     fd0:	ldp	x19, x20, [sp, #16]
     fd4:	ldp	x21, x22, [sp, #32]
     fd8:	ldp	x23, x24, [sp, #48]
     fdc:	ldp	x25, x26, [sp, #64]
     fe0:	ldp	x27, x28, [sp, #80]
     fe4:	ldp	x29, x30, [sp], #128
     fe8:	ret
     fec:	mov	x23, #0x8                   	// #8
     ff0:	cbnz	w0, 1014 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x1ac>
     ff4:	udiv	x0, x21, x23
     ff8:	add	x19, x21, x23
     ffc:	msub	x0, x0, x23, x21
    1000:	cmp	x0, #0x0
    1004:	sub	x19, x19, x0
    1008:	csel	x19, x19, x21, ne  // ne = any
    100c:	b	ec0 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x58>
    1010:	mov	x23, #0x1                   	// #1
    1014:	mov	x1, x3
    1018:	mov	x2, x21
    101c:	mov	x3, x20
    1020:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1024:	add	x0, x0, #0x0
    1028:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    102c:	b	ff4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x18c>
    1030:	ldr	x3, [x29, #112]
    1034:	mov	x0, x26
    1038:	str	x3, [x29, #96]
    103c:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    1040:	mov	x4, x0
    1044:	ldr	x1, [x29, #112]
    1048:	mov	x0, x26
    104c:	add	x4, x4, x1
    1050:	str	x4, [x29, #104]
    1054:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    1058:	mov	x5, x0
    105c:	ldp	x3, x4, [x29, #96]
    1060:	mov	x2, x28
    1064:	mov	x1, x19
    1068:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    106c:	add	x0, x0, #0x0
    1070:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1074:	b	f8c <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x124>
    1078:	ldrb	w0, [x1, #20]
    107c:	cbz	w0, ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>
    1080:	ldr	x3, [x29, #112]
    1084:	mov	x0, x26
    1088:	str	x3, [x29, #96]
    108c:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    1090:	mov	x4, x0
    1094:	ldr	x1, [x29, #112]
    1098:	mov	x0, x26
    109c:	add	x4, x4, x1
    10a0:	str	x4, [x29, #104]
    10a4:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    10a8:	mov	x5, x0
    10ac:	ldp	x3, x4, [x29, #96]
    10b0:	mov	x2, x28
    10b4:	mov	x1, x19
    10b8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    10bc:	add	x0, x0, #0x0
    10c0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    10c4:	b	ee4 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x7c>
    10c8:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    10cc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    10d0:	add	x2, x2, #0x0
    10d4:	add	x0, x0, #0x0
    10d8:	mov	x4, #0x0                   	// #0
    10dc:	mov	x3, #0x0                   	// #0
    10e0:	mov	w1, #0x9f                  	// #159
    10e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    10e8:	mov	x3, x0
    10ec:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    10f0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    10f4:	add	x2, x2, #0x0
    10f8:	add	x0, x0, #0x0
    10fc:	mov	w1, #0x1cd                 	// #461
    1100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1104:	tst	x0, x3
    1108:	b.eq	1144 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x2dc>  // b.none
    110c:	clz	x2, x3
    1110:	mov	w4, #0x3f                  	// #63
    1114:	sub	w2, w4, w2
    1118:	mov	x1, #0x1                   	// #1
    111c:	add	w4, w2, #0x1
    1120:	lsl	x4, x1, x4
    1124:	cmp	x4, x3
    1128:	b.ls	11e8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x380>  // b.plast
    112c:	lsl	x1, x1, x2
    1130:	cmp	x1, x3
    1134:	b.cs	11cc <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x364>  // b.hs, b.nlast
    1138:	cmp	x0, x4
    113c:	b.hi	1200 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x398>  // b.pmore
    1140:	mov	x3, x4
    1144:	adrp	x1, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1148:	lsl	x3, x3, #3
    114c:	ldr	x1, [x1]
    1150:	ldr	x0, [x1]
    1154:	cbz	x0, 11b8 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x350>
    1158:	sub	x1, x0, #0x1
    115c:	tst	x1, x0
    1160:	b.ne	121c <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x3b4>  // b.any
    1164:	add	x3, x3, x1
    1168:	neg	x0, x0
    116c:	and	x3, x3, x0
    1170:	mov	w2, #0x0                   	// #0
    1174:	mov	x0, x3
    1178:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    117c:	add	x1, x1, #0x0
    1180:	str	x3, [x29, #96]
    1184:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1188:	str	x0, [x29, #104]
    118c:	ldr	x1, [x25]
    1190:	ldr	x2, [x25, #16]
    1194:	lsl	x2, x2, #3
    1198:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    119c:	ldp	x0, x1, [x25]
    11a0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    11a4:	ldr	x0, [x25, #16]
    11a8:	ldp	x3, x4, [x29, #96]
    11ac:	stp	x4, x3, [x25]
    11b0:	add	x3, x0, #0x1
    11b4:	b	fac <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x144>
    11b8:	stp	x1, x3, [x29, #96]
    11bc:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    11c0:	ldp	x1, x3, [x29, #96]
    11c4:	str	x0, [x1]
    11c8:	b	1158 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE+0x2f0>
    11cc:	mov	x4, x1
    11d0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    11d4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    11d8:	add	x2, x2, #0x0
    11dc:	add	x0, x0, #0x0
    11e0:	mov	w1, #0x18b                 	// #395
    11e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    11e8:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    11ec:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    11f0:	add	x2, x2, #0x0
    11f4:	add	x0, x0, #0x0
    11f8:	mov	w1, #0x18a                 	// #394
    11fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1200:	mov	x3, x0
    1204:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1208:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    120c:	add	x2, x2, #0x0
    1210:	add	x0, x0, #0x0
    1214:	mov	w1, #0x20c                 	// #524
    1218:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    121c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1220:	add	x0, x0, #0x0
    1224:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    1228:	bl	0 <_ZN11__sanitizer3DieEv>
    122c:	nop

0000000000001230 <_ZN6__lsanL22MarkIndirectlyLeakedCbEmPv>:
    1230:	stp	x19, x20, [sp, #-48]!
    1234:	str	x30, [sp, #16]
    1238:	bl	0 <_ZN6__lsan12GetUserBeginEm>
    123c:	mov	x1, x0
    1240:	add	x20, sp, #0x28
    1244:	mov	x19, x0
    1248:	mov	x0, x20
    124c:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
    1250:	mov	x0, x20
    1254:	bl	0 <_ZNK6__lsan12LsanMetadata9allocatedEv>
    1258:	tst	w0, #0xff
    125c:	b.ne	126c <_ZN6__lsanL22MarkIndirectlyLeakedCbEmPv+0x3c>  // b.any
    1260:	ldr	x30, [sp, #16]
    1264:	ldp	x19, x20, [sp], #48
    1268:	ret
    126c:	mov	x0, x20
    1270:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
    1274:	cmp	w0, #0x2
    1278:	b.eq	1260 <_ZN6__lsanL22MarkIndirectlyLeakedCbEmPv+0x30>  // b.none
    127c:	mov	x0, x20
    1280:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    1284:	mov	w4, #0x1                   	// #1
    1288:	add	x1, x0, x19
    128c:	mov	x2, #0x0                   	// #0
    1290:	mov	x0, x19
    1294:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1298:	add	x3, x3, #0x0
    129c:	bl	e68 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE>
    12a0:	ldr	x30, [sp, #16]
    12a4:	ldp	x19, x20, [sp], #48
    12a8:	ret
    12ac:	nop

00000000000012b0 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE>:
    12b0:	stp	x19, x20, [sp, #-48]!
    12b4:	mov	x20, x0
    12b8:	mov	x19, x1
    12bc:	add	x0, sp, #0x20
    12c0:	add	x1, sp, #0x28
    12c4:	stp	x21, x30, [sp, #16]
    12c8:	mov	x21, x2
    12cc:	stp	xzr, xzr, [sp, #32]
    12d0:	bl	0 <_ZN6__lsan23GetAllocatorGlobalRangeEPmS0_>
    12d4:	ldr	x1, [sp, #32]
    12d8:	cmp	x1, x19
    12dc:	ccmp	x1, x20, #0x0, cc  // cc = lo, ul, last
    12e0:	b.cs	1308 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0x58>  // b.hs, b.nlast
    12e4:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    12e8:	mov	x2, x21
    12ec:	mov	x1, x19
    12f0:	mov	x0, x20
    12f4:	add	x3, x3, #0x0
    12f8:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    12fc:	ldp	x21, x30, [sp, #16]
    1300:	ldp	x19, x20, [sp], #48
    1304:	ret
    1308:	ldr	x0, [sp, #40]
    130c:	cmp	x1, x0
    1310:	b.hi	1360 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0xb0>  // b.pmore
    1314:	cmp	x19, x0
    1318:	b.cc	1380 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0xd0>  // b.lo, b.ul, b.last
    131c:	cmp	x1, x20
    1320:	b.hi	1344 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0x94>  // b.pmore
    1324:	cmp	x19, x0
    1328:	b.ls	12fc <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0x4c>  // b.plast
    132c:	mov	x2, x21
    1330:	mov	x1, x19
    1334:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1338:	add	x3, x3, #0x0
    133c:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    1340:	b	12fc <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0x4c>
    1344:	mov	x0, x20
    1348:	mov	x2, x21
    134c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1350:	add	x3, x3, #0x0
    1354:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    1358:	ldr	x0, [sp, #40]
    135c:	b	1324 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE+0x74>
    1360:	mov	x4, x0
    1364:	mov	x3, x1
    1368:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    136c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1370:	add	x2, x2, #0x0
    1374:	add	x0, x0, #0x0
    1378:	mov	w1, #0xc5                  	// #197
    137c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1380:	mov	x3, x0
    1384:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1388:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    138c:	mov	x4, x19
    1390:	add	x2, x2, #0x0
    1394:	add	x0, x0, #0x0
    1398:	mov	w1, #0xc6                  	// #198
    139c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000013a0 <_ZN6__lsan14ScanRootRegionEPN11__sanitizer18InternalMmapVectorImEERKNS_10RootRegionEmmb>:
    13a0:	stp	x19, x20, [sp, #-48]!
    13a4:	mov	x5, x1
    13a8:	mov	x6, x2
    13ac:	ldr	x1, [x1]
    13b0:	stp	x21, x22, [sp, #16]
    13b4:	and	w22, w4, #0xff
    13b8:	ldr	x4, [x5, #8]
    13bc:	cmp	x1, x2
    13c0:	csel	x20, x1, x2, cs  // cs = hs, nlast
    13c4:	str	x30, [sp, #32]
    13c8:	add	x2, x1, x4
    13cc:	cmp	x2, x3
    13d0:	csel	x21, x2, x3, ls  // ls = plast
    13d4:	cmp	x20, x21
    13d8:	b.cs	141c <_ZN6__lsan14ScanRootRegionEPN11__sanitizer18InternalMmapVectorImEERKNS_10RootRegionEmmb+0x7c>  // b.hs, b.nlast
    13dc:	mov	x19, x0
    13e0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    13e4:	ldrb	w0, [x0]
    13e8:	cbz	w0, 1418 <_ZN6__lsan14ScanRootRegionEPN11__sanitizer18InternalMmapVectorImEERKNS_10RootRegionEmmb+0x78>
    13ec:	cmp	w22, #0x0
    13f0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    13f4:	adrp	x5, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    13f8:	add	x0, x0, #0x0
    13fc:	add	x5, x5, #0x0
    1400:	mov	x4, x3
    1404:	csel	x5, x5, x0, ne  // ne = any
    1408:	mov	x3, x6
    140c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1410:	add	x0, x0, #0x0
    1414:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1418:	cbnz	w22, 142c <_ZN6__lsan14ScanRootRegionEPN11__sanitizer18InternalMmapVectorImEERKNS_10RootRegionEmmb+0x8c>
    141c:	ldp	x21, x22, [sp, #16]
    1420:	ldr	x30, [sp, #32]
    1424:	ldp	x19, x20, [sp], #48
    1428:	ret
    142c:	mov	x2, x19
    1430:	mov	x1, x21
    1434:	mov	x0, x20
    1438:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    143c:	ldp	x21, x22, [sp, #16]
    1440:	add	x3, x3, #0x0
    1444:	ldr	x30, [sp, #32]
    1448:	ldp	x19, x20, [sp], #48
    144c:	b	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>

0000000000001450 <_ZN6__lsan9ProcessPCEPN11__sanitizer18InternalMmapVectorImEE>:
    1450:	stp	x19, x20, [sp, #-80]!
    1454:	mov	x20, x0
    1458:	add	x19, sp, #0x20
    145c:	str	x30, [sp, #16]
    1460:	mov	x0, x19
    1464:	bl	0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev>
    1468:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    146c:	add	x1, x1, #0x0
    1470:	stp	x20, x19, [sp, #56]
    1474:	ldrb	w2, [x1, #15]
    1478:	cbz	w2, 1484 <_ZN6__lsan9ProcessPCEPN11__sanitizer18InternalMmapVectorImEE+0x34>
    147c:	ldrb	w2, [x1, #17]
    1480:	cbnz	w2, 14ac <_ZN6__lsan9ProcessPCEPN11__sanitizer18InternalMmapVectorImEE+0x5c>
    1484:	add	x1, sp, #0x38
    1488:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    148c:	add	x0, x0, #0x0
    1490:	strb	w2, [sp, #72]
    1494:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    1498:	ldp	x0, x1, [sp, #32]
    149c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    14a0:	ldr	x30, [sp, #16]
    14a4:	ldp	x19, x20, [sp], #80
    14a8:	ret
    14ac:	bl	0 <_ZN6__lsan9GetLinkerEv>
    14b0:	cmp	x0, #0x0
    14b4:	cset	w2, ne  // ne = any
    14b8:	b	1484 <_ZN6__lsan9ProcessPCEPN11__sanitizer18InternalMmapVectorImEE+0x34>
    14bc:	nop

00000000000014c0 <_ZN6__lsan16HasReportedLeaksEv>:
    14c0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    14c4:	ldrb	w0, [x0]
    14c8:	ret
    14cc:	nop

00000000000014d0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE>:
    14d0:	stp	x19, x20, [sp, #-144]!
    14d4:	cmp	w4, #0x1
    14d8:	stp	x21, x22, [sp, #16]
    14dc:	str	x30, [sp, #48]
    14e0:	b.hi	1668 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x198>  // b.pmore
    14e4:	ldr	x6, [x0, #24]
    14e8:	eor	w4, w4, #0x1
    14ec:	mov	x20, x0
    14f0:	mov	x22, x1
    14f4:	mov	x21, x3
    14f8:	and	w7, w4, #0x1
    14fc:	cbz	x6, 1838 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x368>
    1500:	ldr	x3, [x0, #8]
    1504:	mov	x19, #0x0                   	// #0
    1508:	mov	x5, x3
    150c:	b	1520 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x50>
    1510:	add	x19, x19, #0x1
    1514:	add	x5, x5, #0x20
    1518:	cmp	x19, x6
    151c:	b.eq	15f4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x124>  // b.none
    1520:	ldr	w4, [x5, #24]
    1524:	cmp	w4, w2
    1528:	b.ne	1510 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x40>  // b.any
    152c:	ldrb	w4, [x5, #28]
    1530:	cmp	w4, w7
    1534:	b.ne	1510 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x40>  // b.any
    1538:	ldr	x0, [x5, #8]
    153c:	add	x0, x0, #0x1
    1540:	str	x0, [x5, #8]
    1544:	ldr	x4, [x20, #24]
    1548:	cmp	x19, x4
    154c:	b.cs	1748 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x278>  // b.hs, b.nlast
    1550:	ldr	x0, [x5, #16]
    1554:	add	x0, x0, x21
    1558:	str	x0, [x5, #16]
    155c:	ldr	x0, [x20, #24]
    1560:	cmp	x19, x0
    1564:	b.eq	15f8 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x128>  // b.none
    1568:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    156c:	ldrb	w0, [x0]
    1570:	cbz	w0, 15e4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x114>
    1574:	ldr	x4, [x20, #24]
    1578:	stp	x23, x24, [sp, #32]
    157c:	cmp	x19, x4
    1580:	ldr	x1, [x20, #8]
    1584:	b.cs	174c <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x27c>  // b.hs, b.nlast
    1588:	ldr	x0, [x20, #40]
    158c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1590:	movk	x4, #0xaaab
    1594:	lsl	x19, x19, #5
    1598:	ldr	x3, [x20, #48]
    159c:	umulh	x0, x0, x4
    15a0:	ldr	w1, [x1, x19]
    15a4:	add	x23, x20, #0x20
    15a8:	str	w1, [sp, #88]
    15ac:	stp	x22, x21, [sp, #96]
    15b0:	lsr	x4, x0, #4
    15b4:	cmp	x3, x4
    15b8:	b.hi	176c <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x29c>  // b.pmore
    15bc:	add	x1, x3, #0x1
    15c0:	b.eq	168c <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x1bc>  // b.none
    15c4:	ldr	x21, [x20, #32]
    15c8:	add	x3, x3, x3, lsl #1
    15cc:	str	x1, [x23, #16]
    15d0:	mov	x2, #0x18                  	// #24
    15d4:	add	x0, x21, x3, lsl #3
    15d8:	add	x1, sp, #0x58
    15dc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    15e0:	ldp	x23, x24, [sp, #32]
    15e4:	ldp	x21, x22, [sp, #16]
    15e8:	ldr	x30, [sp, #48]
    15ec:	ldp	x19, x20, [sp], #144
    15f0:	ret
    15f4:	mov	x0, x19
    15f8:	mov	x1, #0x1388                	// #5000
    15fc:	cmp	x0, x1
    1600:	b.eq	15e4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x114>  // b.none
    1604:	ldr	x4, [x20, #16]
    1608:	stp	x23, x24, [sp, #32]
    160c:	ldr	w1, [x20]
    1610:	stp	xzr, xzr, [sp, #112]
    1614:	mov	x5, #0x1                   	// #1
    1618:	add	w8, w1, #0x1
    161c:	stp	xzr, xzr, [sp, #128]
    1620:	lsr	x4, x4, #5
    1624:	cmp	x4, x0
    1628:	str	w8, [x20]
    162c:	str	w1, [sp, #112]
    1630:	stp	x5, x21, [sp, #120]
    1634:	str	w2, [sp, #136]
    1638:	strb	w7, [sp, #140]
    163c:	b.cc	1768 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x298>  // b.lo, b.ul, b.last
    1640:	b.eq	1784 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x2b4>  // b.none
    1644:	add	x23, x20, #0x8
    1648:	add	x0, x6, #0x1
    164c:	str	x0, [x23, #16]
    1650:	add	x1, sp, #0x70
    1654:	add	x0, x3, x6, lsl #5
    1658:	mov	x2, #0x20                  	// #32
    165c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1660:	ldp	x23, x24, [sp, #32]
    1664:	b	1568 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x98>
    1668:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    166c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1670:	add	x2, x2, #0x0
    1674:	add	x0, x0, #0x0
    1678:	mov	x4, #0x0                   	// #0
    167c:	mov	x3, #0x0                   	// #0
    1680:	mov	w1, #0x29c                 	// #668
    1684:	stp	x23, x24, [sp, #32]
    1688:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    168c:	tst	x3, x1
    1690:	b.eq	16cc <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x1fc>  // b.none
    1694:	clz	x2, x1
    1698:	mov	w0, #0x3f                  	// #63
    169c:	sub	w2, w0, w2
    16a0:	mov	x0, #0x1                   	// #1
    16a4:	add	w4, w2, #0x1
    16a8:	lsl	x4, x0, x4
    16ac:	cmp	x4, x1
    16b0:	b.ls	18cc <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3fc>  // b.plast
    16b4:	lsl	x0, x0, x2
    16b8:	cmp	x0, x1
    16bc:	b.cs	18e8 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x418>  // b.hs, b.nlast
    16c0:	cmp	x3, x4
    16c4:	b.hi	18b4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3e4>  // b.pmore
    16c8:	mov	x1, x4
    16cc:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
    16d0:	add	x1, x1, x1, lsl #1
    16d4:	ldr	x21, [x21]
    16d8:	lsl	x19, x1, #3
    16dc:	ldr	x0, [x21]
    16e0:	cbz	x0, 1880 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3b0>
    16e4:	sub	x1, x0, #0x1
    16e8:	tst	x0, x1
    16ec:	b.ne	18a0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3d0>  // b.any
    16f0:	add	x19, x19, x1
    16f4:	neg	x0, x0
    16f8:	and	x19, x19, x0
    16fc:	mov	w2, #0x0                   	// #0
    1700:	mov	x0, x19
    1704:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1708:	add	x1, x1, #0x0
    170c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1710:	ldr	x2, [x23, #16]
    1714:	mov	x21, x0
    1718:	ldr	x1, [x20, #32]
    171c:	add	x2, x2, x2, lsl #1
    1720:	lsl	x2, x2, #3
    1724:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1728:	ldr	x1, [x23, #8]
    172c:	ldr	x0, [x20, #32]
    1730:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1734:	ldr	x3, [x23, #16]
    1738:	str	x21, [x20, #32]
    173c:	str	x19, [x23, #8]
    1740:	add	x1, x3, #0x1
    1744:	b	15c8 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0xf8>
    1748:	stp	x23, x24, [sp, #32]
    174c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1750:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1754:	mov	x3, x19
    1758:	add	x2, x2, #0x0
    175c:	add	x0, x0, #0x0
    1760:	mov	w1, #0x1c5                 	// #453
    1764:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1768:	mov	x3, x0
    176c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1770:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1774:	add	x2, x2, #0x0
    1778:	add	x0, x0, #0x0
    177c:	mov	w1, #0x1cd                 	// #461
    1780:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1784:	add	x3, x0, #0x1
    1788:	tst	x3, x0
    178c:	b.eq	1908 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x438>  // b.none
    1790:	clz	x2, x3
    1794:	mov	w1, #0x3f                  	// #63
    1798:	sub	w1, w1, w2
    179c:	add	w4, w1, #0x1
    17a0:	lsl	x4, x5, x4
    17a4:	cmp	x3, x4
    17a8:	b.cs	18d0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x400>  // b.hs, b.nlast
    17ac:	lsl	x5, x5, x1
    17b0:	cmp	x3, x5
    17b4:	b.ls	1910 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x440>  // b.plast
    17b8:	cmp	x4, x0
    17bc:	b.cc	18b0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3e0>  // b.lo, b.ul, b.last
    17c0:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
    17c4:	lsl	x23, x4, #5
    17c8:	ldr	x24, [x24]
    17cc:	ldr	x0, [x24]
    17d0:	cbz	x0, 1894 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3c4>
    17d4:	sub	x4, x0, #0x1
    17d8:	tst	x4, x0
    17dc:	b.ne	18a0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3d0>  // b.any
    17e0:	add	x4, x23, x4
    17e4:	neg	x0, x0
    17e8:	add	x23, x20, #0x8
    17ec:	and	x24, x4, x0
    17f0:	mov	w2, #0x0                   	// #0
    17f4:	mov	x0, x24
    17f8:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    17fc:	add	x1, x1, #0x0
    1800:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    1804:	str	x0, [sp, #72]
    1808:	ldr	x1, [x20, #8]
    180c:	ldr	x2, [x23, #16]
    1810:	lsl	x2, x2, #5
    1814:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    1818:	ldr	x0, [x20, #8]
    181c:	ldr	x1, [x23, #8]
    1820:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1824:	ldr	x3, [sp, #72]
    1828:	ldr	x6, [x23, #16]
    182c:	str	x3, [x20, #8]
    1830:	str	x24, [x23, #8]
    1834:	b	1648 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x178>
    1838:	ldr	w1, [x20]
    183c:	mov	x0, #0x1                   	// #1
    1840:	ldr	x19, [x20, #16]
    1844:	stp	x23, x24, [sp, #32]
    1848:	add	w3, w1, #0x1
    184c:	stp	xzr, xzr, [sp, #112]
    1850:	cmp	xzr, x19, lsr #5
    1854:	stp	xzr, xzr, [sp, #128]
    1858:	lsr	x19, x19, #5
    185c:	str	w3, [x20]
    1860:	str	w1, [sp, #112]
    1864:	stp	x0, x21, [sp, #120]
    1868:	str	w2, [sp, #136]
    186c:	strb	w7, [sp, #140]
    1870:	b.eq	188c <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x3bc>  // b.none
    1874:	mov	x19, #0x0                   	// #0
    1878:	ldr	x3, [x20, #8]
    187c:	b	1644 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x174>
    1880:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1884:	str	x0, [x21]
    1888:	b	16e4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x214>
    188c:	mov	x4, x0
    1890:	b	17c0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x2f0>
    1894:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1898:	str	x0, [x24]
    189c:	b	17d4 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x304>
    18a0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18a4:	add	x0, x0, #0x0
    18a8:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    18ac:	bl	0 <_ZN11__sanitizer3DieEv>
    18b0:	mov	x3, x0
    18b4:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18b8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18bc:	add	x2, x2, #0x0
    18c0:	add	x0, x0, #0x0
    18c4:	mov	w1, #0x20c                 	// #524
    18c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    18cc:	mov	x3, x1
    18d0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18d4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18d8:	add	x2, x2, #0x0
    18dc:	add	x0, x0, #0x0
    18e0:	mov	w1, #0x18a                 	// #394
    18e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    18e8:	mov	x4, x0
    18ec:	mov	x3, x1
    18f0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18f4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    18f8:	add	x2, x2, #0x0
    18fc:	add	x0, x0, #0x0
    1900:	mov	w1, #0x18b                 	// #395
    1904:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1908:	mov	x4, x3
    190c:	b	17c0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x2f0>
    1910:	mov	x4, x5
    1914:	b	18f0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE+0x420>

0000000000001918 <_ZN6__lsanL14CollectLeaksCbEmPv>:
    1918:	stp	x19, x20, [sp, #-64]!
    191c:	stp	x21, x22, [sp, #16]
    1920:	str	x30, [sp, #32]
    1924:	cbz	x1, 1a00 <_ZN6__lsanL14CollectLeaksCbEmPv+0xe8>
    1928:	mov	x19, x1
    192c:	bl	0 <_ZN6__lsan12GetUserBeginEm>
    1930:	mov	x1, x0
    1934:	add	x20, sp, #0x38
    1938:	mov	x21, x0
    193c:	mov	x0, x20
    1940:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
    1944:	mov	x0, x20
    1948:	bl	0 <_ZNK6__lsan12LsanMetadata9allocatedEv>
    194c:	tst	w0, #0xff
    1950:	b.ne	1964 <_ZN6__lsanL14CollectLeaksCbEmPv+0x4c>  // b.any
    1954:	ldp	x21, x22, [sp, #16]
    1958:	ldr	x30, [sp, #32]
    195c:	ldp	x19, x20, [sp], #64
    1960:	ret
    1964:	mov	x0, x20
    1968:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
    196c:	cbnz	w0, 19ec <_ZN6__lsanL14CollectLeaksCbEmPv+0xd4>
    1970:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1974:	ldr	w22, [x0]
    1978:	cbnz	w22, 19c8 <_ZN6__lsanL14CollectLeaksCbEmPv+0xb0>
    197c:	mov	x0, x20
    1980:	bl	0 <_ZNK6__lsan12LsanMetadata14stack_trace_idEv>
    1984:	mov	w22, w0
    1988:	mov	x0, x20
    198c:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    1990:	mov	x3, x0
    1994:	mov	x0, x20
    1998:	mov	x20, x3
    199c:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
    19a0:	mov	w4, w0
    19a4:	mov	x3, x20
    19a8:	mov	w2, w22
    19ac:	mov	x1, x21
    19b0:	mov	x0, x19
    19b4:	bl	14d0 <_ZN6__lsan10LeakReport14AddLeakedChunkEmjmNS_8ChunkTagE>
    19b8:	ldp	x21, x22, [sp, #16]
    19bc:	ldr	x30, [sp, #32]
    19c0:	ldp	x19, x20, [sp], #64
    19c4:	ret
    19c8:	mov	x0, x20
    19cc:	bl	0 <_ZNK6__lsan12LsanMetadata14stack_trace_idEv>
    19d0:	bl	0 <_ZN11__sanitizer13StackDepotGetEj>
    19d4:	cmp	w22, w1
    19d8:	csel	w22, w22, w1, cc  // cc = lo, ul, last
    19dc:	bfxil	x1, x22, #0, #32
    19e0:	bl	0 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE>
    19e4:	mov	w22, w0
    19e8:	b	1988 <_ZN6__lsanL14CollectLeaksCbEmPv+0x70>
    19ec:	mov	x0, x20
    19f0:	bl	0 <_ZNK6__lsan12LsanMetadata3tagEv>
    19f4:	cmp	w0, #0x1
    19f8:	b.ne	1954 <_ZN6__lsanL14CollectLeaksCbEmPv+0x3c>  // b.any
    19fc:	b	1970 <_ZN6__lsanL14CollectLeaksCbEmPv+0x58>
    1a00:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a04:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a08:	add	x2, x2, #0x0
    1a0c:	add	x0, x0, #0x0
    1a10:	mov	x4, #0x0                   	// #0
    1a14:	mov	x3, #0x0                   	// #0
    1a18:	mov	w1, #0x1e9                 	// #489
    1a1c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001a20 <_ZN6__lsan10LeakReport18PrintReportForLeakEm>:
    1a20:	stp	x19, x20, [sp, #-80]!
    1a24:	mov	x19, x0
    1a28:	mov	x20, x1
    1a2c:	stp	x21, x22, [sp, #16]
    1a30:	adrp	x21, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a34:	adrp	x22, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a38:	stp	x23, x24, [sp, #32]
    1a3c:	add	x21, x21, #0x0
    1a40:	add	x22, x22, #0x0
    1a44:	str	x30, [sp, #48]
    1a48:	bl	0 <_ZN11__sanitizer15ColorizeReportsEv>
    1a4c:	ands	w23, w0, #0xff
    1a50:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a54:	add	x1, x1, #0x0
    1a58:	mov	x0, x22
    1a5c:	csel	x1, x1, x21, ne  // ne = any
    1a60:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1a64:	ldr	x4, [x19, #24]
    1a68:	ldr	x2, [x19, #8]
    1a6c:	cmp	x20, x4
    1a70:	b.cs	1b90 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x170>  // b.hs, b.nlast
    1a74:	lsl	x24, x20, #5
    1a78:	adrp	x4, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a7c:	add	x2, x2, x24
    1a80:	add	x4, x4, #0x0
    1a84:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a88:	add	x1, x1, #0x0
    1a8c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1a90:	add	x0, x0, #0x0
    1a94:	ldrb	w5, [x2, #28]
    1a98:	ldp	x3, x2, [x2, #8]
    1a9c:	cmp	w5, #0x0
    1aa0:	csel	x1, x1, x4, ne  // ne = any
    1aa4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1aa8:	cmp	w23, #0x0
    1aac:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1ab0:	add	x1, x1, #0x0
    1ab4:	mov	x0, x22
    1ab8:	csel	x1, x1, x21, ne  // ne = any
    1abc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1ac0:	ldr	x4, [x19, #24]
    1ac4:	ldr	x0, [x19, #8]
    1ac8:	cmp	x20, x4
    1acc:	b.cs	1b90 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x170>  // b.hs, b.nlast
    1ad0:	add	x0, x0, x24
    1ad4:	ldr	w0, [x0, #24]
    1ad8:	cbz	w0, 1bd4 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x1b4>
    1adc:	bl	0 <_ZN11__sanitizer13StackDepotGetEj>
    1ae0:	mov	x2, x0
    1ae4:	mov	x3, x1
    1ae8:	add	x0, sp, #0x40
    1aec:	stp	x2, x3, [sp, #64]
    1af0:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
    1af4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1af8:	ldrb	w0, [x0]
    1afc:	cbnz	w0, 1b14 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0xf4>
    1b00:	ldp	x21, x22, [sp, #16]
    1b04:	ldp	x23, x24, [sp, #32]
    1b08:	ldr	x30, [sp, #48]
    1b0c:	ldp	x19, x20, [sp], #80
    1b10:	ret
    1b14:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1b18:	add	x0, x0, #0x0
    1b1c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1b20:	ldr	x4, [x19, #24]
    1b24:	ldr	x0, [x19, #8]
    1b28:	cmp	x20, x4
    1b2c:	b.cs	1b90 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x170>  // b.hs, b.nlast
    1b30:	ldr	x2, [x19, #48]
    1b34:	ldr	w22, [x0, x24]
    1b38:	cbz	x2, 1b70 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x150>
    1b3c:	ldr	x1, [x19, #32]
    1b40:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1b44:	add	x23, x23, #0x0
    1b48:	mov	x20, #0x0                   	// #0
    1b4c:	mov	x21, #0x0                   	// #0
    1b50:	ldr	w3, [x1, x20]
    1b54:	add	x4, x1, x20
    1b58:	cmp	w22, w3
    1b5c:	b.eq	1bac <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x18c>  // b.none
    1b60:	add	x21, x21, #0x1
    1b64:	add	x20, x20, #0x18
    1b68:	cmp	x21, x2
    1b6c:	b.cc	1b50 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x130>  // b.lo, b.ul, b.last
    1b70:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1b74:	add	x0, x0, #0x0
    1b78:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1b7c:	ldp	x21, x22, [sp, #16]
    1b80:	ldp	x23, x24, [sp, #32]
    1b84:	ldr	x30, [sp, #48]
    1b88:	ldp	x19, x20, [sp], #80
    1b8c:	ret
    1b90:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1b94:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1b98:	mov	x3, x20
    1b9c:	add	x2, x2, #0x0
    1ba0:	add	x0, x0, #0x0
    1ba4:	mov	w1, #0x1c5                 	// #453
    1ba8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1bac:	ldp	x1, x2, [x4, #8]
    1bb0:	mov	x0, x23
    1bb4:	add	x21, x21, #0x1
    1bb8:	add	x20, x20, #0x18
    1bbc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1bc0:	ldr	x2, [x19, #48]
    1bc4:	cmp	x21, x2
    1bc8:	b.cs	1b70 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x150>  // b.hs, b.nlast
    1bcc:	ldr	x1, [x19, #32]
    1bd0:	b	1b50 <_ZN6__lsan10LeakReport18PrintReportForLeakEm+0x130>
    1bd4:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1bd8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1bdc:	add	x2, x2, #0x0
    1be0:	add	x0, x0, #0x0
    1be4:	mov	x4, #0x0                   	// #0
    1be8:	mov	x3, #0x0                   	// #0
    1bec:	mov	w1, #0x1e2                 	// #482
    1bf0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1bf4:	nop

0000000000001bf8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm>:
    1bf8:	stp	x19, x20, [sp, #-80]!
    1bfc:	mov	x20, x0
    1c00:	ldr	x0, [x0, #24]
    1c04:	stp	x21, x22, [sp, #16]
    1c08:	mov	x21, #0x1388                	// #5000
    1c0c:	str	x30, [sp, #40]
    1c10:	cmp	x0, x21
    1c14:	b.hi	1f4c <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x354>  // b.pmore
    1c18:	mov	x19, x1
    1c1c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1c20:	add	x0, x0, #0x0
    1c24:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1c28:	ldr	x7, [x20, #24]
    1c2c:	cmp	x7, x21
    1c30:	b.eq	1f34 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x33c>  // b.none
    1c34:	ldr	x3, [x20, #8]
    1c38:	cbz	x7, 1ea8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2b0>
    1c3c:	mov	x0, x3
    1c40:	add	x2, x3, x7, lsl #5
    1c44:	mov	x21, #0x0                   	// #0
    1c48:	str	x23, [sp, #32]
    1c4c:	nop
    1c50:	ldrb	w1, [x0, #29]
    1c54:	add	x0, x0, #0x20
    1c58:	cmp	w1, #0x0
    1c5c:	cinc	x21, x21, eq  // eq = none
    1c60:	cmp	x2, x0
    1c64:	b.ne	1c50 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x58>  // b.any
    1c68:	cmp	x19, #0x0
    1c6c:	ccmp	x19, x21, #0x2, ne  // ne = any
    1c70:	b.cc	1ee0 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2e8>  // b.lo, b.ul, b.last
    1c74:	cmp	x7, #0x1
    1c78:	b.ls	1f2c <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x334>  // b.plast
    1c7c:	add	x6, sp, #0x30
    1c80:	mov	x12, #0x1                   	// #1
    1c84:	nop
    1c88:	mov	x5, x12
    1c8c:	nop
    1c90:	sub	x0, x5, #0x1
    1c94:	mov	x2, x5
    1c98:	lsr	x5, x0, #1
    1c9c:	add	x2, x3, x2, lsl #5
    1ca0:	add	x4, x3, x5, lsl #5
    1ca4:	ldrb	w1, [x2, #28]
    1ca8:	ldrb	w0, [x4, #28]
    1cac:	cmp	w1, w0
    1cb0:	b.eq	1eb8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2c0>  // b.none
    1cb4:	cbz	w0, 1ce4 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0xec>
    1cb8:	ldp	x0, x1, [x4]
    1cbc:	ldp	x10, x11, [x2]
    1cc0:	stp	x0, x1, [x2]
    1cc4:	ldp	x0, x1, [x4, #16]
    1cc8:	stp	x10, x11, [x6]
    1ccc:	ldp	x8, x9, [x2, #16]
    1cd0:	stp	x0, x1, [x2, #16]
    1cd4:	stp	x10, x11, [x4]
    1cd8:	stp	x8, x9, [x6, #16]
    1cdc:	stp	x8, x9, [x4, #16]
    1ce0:	cbnz	x5, 1c90 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x98>
    1ce4:	add	x12, x12, #0x1
    1ce8:	cmp	x7, x12
    1cec:	b.ne	1c88 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x90>  // b.any
    1cf0:	sub	x9, x7, #0x1
    1cf4:	add	x10, x3, x9, lsl #5
    1cf8:	ldp	x0, x1, [x10]
    1cfc:	mov	x2, #0x0                   	// #0
    1d00:	ldp	x12, x13, [x3]
    1d04:	stp	x0, x1, [x3]
    1d08:	lsl	x11, x2, #1
    1d0c:	ldp	x0, x1, [x10, #16]
    1d10:	stp	x12, x13, [x6]
    1d14:	add	x7, x11, #0x1
    1d18:	ldp	x4, x5, [x3, #16]
    1d1c:	stp	x0, x1, [x3, #16]
    1d20:	add	x11, x11, #0x2
    1d24:	stp	x12, x13, [x10]
    1d28:	cmp	x7, x9
    1d2c:	stp	x4, x5, [x6, #16]
    1d30:	stp	x4, x5, [x10, #16]
    1d34:	add	x4, x2, #0x1
    1d38:	b.cs	1dc0 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x1c8>  // b.hs, b.nlast
    1d3c:	nop
    1d40:	lsl	x5, x2, #5
    1d44:	lsl	x1, x7, #5
    1d48:	add	x12, x3, x5
    1d4c:	add	x8, x3, x1
    1d50:	ldrb	w0, [x12, #28]
    1d54:	ldrb	w13, [x8, #28]
    1d58:	cmp	w13, w0
    1d5c:	b.eq	1ecc <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2d4>  // b.none
    1d60:	cbz	w0, 1dc0 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x1c8>
    1d64:	cmp	x11, x9
    1d68:	b.cc	1dd0 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x1d8>  // b.lo, b.ul, b.last
    1d6c:	cmp	x7, x2
    1d70:	b.eq	1e40 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x248>  // b.none
    1d74:	add	x2, x3, x5
    1d78:	mov	x11, x7
    1d7c:	ldp	x0, x1, [x8]
    1d80:	ldp	x4, x5, [x2]
    1d84:	stp	x0, x1, [x2]
    1d88:	ldp	x0, x1, [x8, #16]
    1d8c:	stp	x4, x5, [x6]
    1d90:	ldp	x12, x13, [x2, #16]
    1d94:	stp	x0, x1, [x2, #16]
    1d98:	stp	x4, x5, [x8]
    1d9c:	stp	x12, x13, [x6, #16]
    1da0:	stp	x12, x13, [x8, #16]
    1da4:	mov	x2, x11
    1da8:	add	x4, x2, #0x1
    1dac:	lsl	x11, x2, #1
    1db0:	add	x7, x11, #0x1
    1db4:	add	x11, x11, #0x2
    1db8:	cmp	x7, x9
    1dbc:	b.cc	1d40 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x148>  // b.lo, b.ul, b.last
    1dc0:	cmp	x11, x9
    1dc4:	b.cs	1e40 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x248>  // b.hs, b.nlast
    1dc8:	mov	x7, x2
    1dcc:	lsl	x1, x2, #5
    1dd0:	add	x1, x3, x1
    1dd4:	add	x4, x3, x4, lsl #6
    1dd8:	ldrb	w0, [x1, #28]
    1ddc:	ldrb	w5, [x4, #28]
    1de0:	cmp	w5, w0
    1de4:	b.ne	1df8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x200>  // b.any
    1de8:	ldr	x0, [x4, #16]
    1dec:	ldr	x5, [x1, #16]
    1df0:	cmp	x5, x0
    1df4:	cset	w0, hi  // hi = pmore
    1df8:	cmp	w0, #0x0
    1dfc:	csel	x11, x11, x7, ne  // ne = any
    1e00:	csel	x4, x4, x1, ne  // ne = any
    1e04:	cmp	x11, x2
    1e08:	b.eq	1e40 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x248>  // b.none
    1e0c:	add	x2, x3, x2, lsl #5
    1e10:	cmp	x11, x9
    1e14:	ldp	x0, x1, [x4]
    1e18:	ldp	x12, x13, [x2]
    1e1c:	stp	x0, x1, [x2]
    1e20:	ldp	x0, x1, [x4, #16]
    1e24:	stp	x12, x13, [x6]
    1e28:	ldp	x14, x15, [x2, #16]
    1e2c:	stp	x0, x1, [x2, #16]
    1e30:	stp	x12, x13, [x4]
    1e34:	stp	x14, x15, [x6, #16]
    1e38:	stp	x14, x15, [x4, #16]
    1e3c:	b.cc	1da4 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x1ac>  // b.lo, b.ul, b.last
    1e40:	sub	x10, x10, #0x20
    1e44:	subs	x9, x9, #0x1
    1e48:	b.ne	1cf8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x100>  // b.any
    1e4c:	ldr	x7, [x20, #24]
    1e50:	mov	x23, #0x0                   	// #0
    1e54:	cbz	x7, 1e9c <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2a4>
    1e58:	mov	x23, #0x0                   	// #0
    1e5c:	mov	x22, #0x0                   	// #0
    1e60:	b	1e68 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x270>
    1e64:	ldr	x3, [x20, #8]
    1e68:	add	x3, x3, x22, lsl #5
    1e6c:	ldrb	w0, [x3, #29]
    1e70:	cbnz	w0, 1e90 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x298>
    1e74:	add	x23, x23, #0x1
    1e78:	mov	x1, x22
    1e7c:	mov	x0, x20
    1e80:	bl	1a20 <_ZN6__lsan10LeakReport18PrintReportForLeakEm>
    1e84:	cmp	x19, x23
    1e88:	b.eq	1e9c <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x2a4>  // b.none
    1e8c:	ldr	x7, [x20, #24]
    1e90:	add	x22, x22, #0x1
    1e94:	cmp	x22, x7
    1e98:	b.cc	1e64 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x26c>  // b.lo, b.ul, b.last
    1e9c:	cmp	x23, x21
    1ea0:	b.cc	1f0c <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x314>  // b.lo, b.ul, b.last
    1ea4:	ldr	x23, [sp, #32]
    1ea8:	ldp	x21, x22, [sp, #16]
    1eac:	ldr	x30, [sp, #40]
    1eb0:	ldp	x19, x20, [sp], #80
    1eb4:	ret
    1eb8:	ldr	x0, [x2, #16]
    1ebc:	ldr	x1, [x4, #16]
    1ec0:	cmp	x1, x0
    1ec4:	cset	w0, hi  // hi = pmore
    1ec8:	b	1cb4 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0xbc>
    1ecc:	ldr	x0, [x8, #16]
    1ed0:	ldr	x12, [x12, #16]
    1ed4:	cmp	x12, x0
    1ed8:	cset	w0, hi  // hi = pmore
    1edc:	b	1d60 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x168>
    1ee0:	mov	x1, x19
    1ee4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1ee8:	add	x0, x0, #0x0
    1eec:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1ef0:	ldr	x7, [x20, #24]
    1ef4:	ldr	x3, [x20, #8]
    1ef8:	cmp	x7, #0x1
    1efc:	b.ls	1e50 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x258>  // b.plast
    1f00:	add	x6, sp, #0x30
    1f04:	mov	x12, #0x1                   	// #1
    1f08:	b	1c88 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x90>
    1f0c:	sub	x1, x21, x23
    1f10:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1f14:	ldp	x21, x22, [sp, #16]
    1f18:	add	x0, x0, #0x0
    1f1c:	ldr	x23, [sp, #32]
    1f20:	ldr	x30, [sp, #40]
    1f24:	ldp	x19, x20, [sp], #80
    1f28:	b	0 <_ZN11__sanitizer6PrintfEPKcz>
    1f2c:	mov	x7, #0x1                   	// #1
    1f30:	b	1e58 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x260>
    1f34:	mov	x1, x7
    1f38:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1f3c:	add	x0, x0, #0x0
    1f40:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1f44:	ldr	x7, [x20, #24]
    1f48:	b	1c34 <_ZN6__lsan10LeakReport14ReportTopLeaksEm+0x3c>
    1f4c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1f50:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1f54:	add	x2, x2, #0x0
    1f58:	add	x0, x0, #0x0
    1f5c:	mov	x4, #0x0                   	// #0
    1f60:	mov	x3, #0x0                   	// #0
    1f64:	mov	w1, #0x2bb                 	// #699
    1f68:	str	x23, [sp, #32]
    1f6c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001f70 <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm>:
    1f70:	stp	x19, x20, [sp, #-48]!
    1f74:	ldr	x4, [x0, #24]
    1f78:	stp	x21, x22, [sp, #16]
    1f7c:	mov	x21, x0
    1f80:	ldr	x0, [x0, #8]
    1f84:	str	x30, [sp, #40]
    1f88:	cmp	x1, x4
    1f8c:	b.cs	2014 <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0xa4>  // b.hs, b.nlast
    1f90:	ldr	x4, [x21, #48]
    1f94:	lsl	x1, x1, #5
    1f98:	ldr	w22, [x0, x1]
    1f9c:	cbz	x4, 1fdc <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0x6c>
    1fa0:	ldr	x1, [x21, #32]
    1fa4:	str	x23, [sp, #32]
    1fa8:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    1fac:	add	x23, x23, #0x0
    1fb0:	mov	x19, #0x0                   	// #0
    1fb4:	mov	x20, #0x0                   	// #0
    1fb8:	ldr	w2, [x1, x19]
    1fbc:	add	x3, x1, x19
    1fc0:	cmp	w2, w22
    1fc4:	b.eq	1fec <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0x7c>  // b.none
    1fc8:	add	x20, x20, #0x1
    1fcc:	add	x19, x19, #0x18
    1fd0:	cmp	x20, x4
    1fd4:	b.cc	1fb8 <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0x48>  // b.lo, b.ul, b.last
    1fd8:	ldr	x23, [sp, #32]
    1fdc:	ldp	x21, x22, [sp, #16]
    1fe0:	ldr	x30, [sp, #40]
    1fe4:	ldp	x19, x20, [sp], #48
    1fe8:	ret
    1fec:	ldp	x1, x2, [x3, #8]
    1ff0:	mov	x0, x23
    1ff4:	add	x20, x20, #0x1
    1ff8:	add	x19, x19, #0x18
    1ffc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2000:	ldr	x4, [x21, #48]
    2004:	cmp	x20, x4
    2008:	b.cs	1fd8 <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0x68>  // b.hs, b.nlast
    200c:	ldr	x1, [x21, #32]
    2010:	b	1fb8 <_ZN6__lsan10LeakReport25PrintLeakedObjectsForLeakEm+0x48>
    2014:	mov	x3, x1
    2018:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    201c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2020:	add	x2, x2, #0x0
    2024:	add	x0, x0, #0x0
    2028:	mov	w1, #0x1c5                 	// #453
    202c:	str	x23, [sp, #32]
    2030:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2034:	nop

0000000000002038 <_ZN6__lsan10LeakReport12PrintSummaryEv>:
    2038:	stp	x19, x20, [sp, #-96]!
    203c:	mov	x1, #0x1388                	// #5000
    2040:	ldr	x19, [x0, #24]
    2044:	stp	x21, x22, [sp, #16]
    2048:	stp	x23, x24, [sp, #32]
    204c:	cmp	x19, x1
    2050:	str	x30, [sp, #48]
    2054:	b.hi	2178 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x140>  // b.pmore
    2058:	cbz	x19, 2198 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x160>
    205c:	ldr	x0, [x0, #8]
    2060:	mov	x20, #0x0                   	// #0
    2064:	add	x3, x0, x19, lsl #5
    2068:	mov	x19, #0x0                   	// #0
    206c:	nop
    2070:	ldrb	w1, [x0, #29]
    2074:	cbnz	w1, 2084 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x4c>
    2078:	ldp	x2, x1, [x0, #8]
    207c:	add	x20, x20, x2
    2080:	add	x19, x19, x1
    2084:	add	x0, x0, #0x20
    2088:	cmp	x3, x0
    208c:	b.ne	2070 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x38>  // b.any
    2090:	adrp	x23, 0 <_ZN11__sanitizer14PageSizeCachedE>
    2094:	str	xzr, [sp, #64]
    2098:	stp	xzr, xzr, [sp, #72]
    209c:	ldr	x21, [x23]
    20a0:	ldr	x0, [x21]
    20a4:	cbz	x0, 216c <_ZN6__lsan10LeakReport12PrintSummaryEv+0x134>
    20a8:	sub	x1, x0, #0x1
    20ac:	tst	x1, x0
    20b0:	b.ne	21f8 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x1c0>  // b.any
    20b4:	add	x22, x0, #0x3ff
    20b8:	neg	x0, x0
    20bc:	and	x22, x22, x0
    20c0:	mov	w2, #0x0                   	// #0
    20c4:	mov	x0, x22
    20c8:	adrp	x24, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    20cc:	add	x1, x24, #0x0
    20d0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    20d4:	ldr	x1, [sp, #64]
    20d8:	mov	x21, x0
    20dc:	ldr	x2, [sp, #80]
    20e0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    20e4:	ldp	x0, x1, [sp, #64]
    20e8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    20ec:	stp	x21, x22, [sp, #64]
    20f0:	ldr	x2, [sp, #80]
    20f4:	cmp	x2, #0x3ff
    20f8:	b.hi	211c <_ZN6__lsan10LeakReport12PrintSummaryEv+0xe4>  // b.pmore
    20fc:	cmp	x22, #0x3ff
    2100:	b.ls	21a0 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x168>  // b.plast
    2104:	mov	x3, #0x400                 	// #1024
    2108:	add	x0, x21, x2
    210c:	mov	w1, #0x0                   	// #0
    2110:	sub	x2, x3, x2
    2114:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    2118:	ldr	x21, [sp, #64]
    211c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2120:	mov	x3, x20
    2124:	mov	x2, x19
    2128:	ldr	q0, [x0]
    212c:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2130:	add	x0, sp, #0x40
    2134:	add	x1, x1, #0x0
    2138:	str	q0, [sp, #80]
    213c:	strb	wzr, [x21]
    2140:	bl	0 <_ZN11__sanitizer20InternalScopedString6appendEPKcz>
    2144:	ldr	x0, [sp, #64]
    2148:	mov	x1, #0x0                   	// #0
    214c:	bl	0 <_ZN11__sanitizer18ReportErrorSummaryEPKcS1_>
    2150:	ldp	x0, x1, [sp, #64]
    2154:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2158:	ldp	x21, x22, [sp, #16]
    215c:	ldp	x23, x24, [sp, #32]
    2160:	ldr	x30, [sp, #48]
    2164:	ldp	x19, x20, [sp], #96
    2168:	ret
    216c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    2170:	str	x0, [x21]
    2174:	b	20a8 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x70>
    2178:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    217c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2180:	add	x2, x2, #0x0
    2184:	add	x0, x0, #0x0
    2188:	mov	x4, #0x0                   	// #0
    218c:	mov	x3, #0x0                   	// #0
    2190:	mov	w1, #0x2ee                 	// #750
    2194:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2198:	mov	x20, #0x0                   	// #0
    219c:	b	2090 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x58>
    21a0:	ldr	x23, [x23]
    21a4:	ldr	x0, [x23]
    21a8:	cbz	x0, 2208 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x1d0>
    21ac:	sub	x1, x0, #0x1
    21b0:	tst	x1, x0
    21b4:	b.ne	21f8 <_ZN6__lsan10LeakReport12PrintSummaryEv+0x1c0>  // b.any
    21b8:	add	x22, x0, #0x3ff
    21bc:	neg	x0, x0
    21c0:	and	x22, x22, x0
    21c4:	add	x1, x24, #0x0
    21c8:	mov	w2, #0x0                   	// #0
    21cc:	mov	x0, x22
    21d0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    21d4:	mov	x21, x0
    21d8:	ldr	x1, [sp, #64]
    21dc:	ldr	x2, [sp, #80]
    21e0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    21e4:	ldp	x0, x1, [sp, #64]
    21e8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    21ec:	stp	x21, x22, [sp, #64]
    21f0:	ldr	x2, [sp, #80]
    21f4:	b	2104 <_ZN6__lsan10LeakReport12PrintSummaryEv+0xcc>
    21f8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    21fc:	add	x0, x0, #0x0
    2200:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    2204:	bl	0 <_ZN11__sanitizer3DieEv>
    2208:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    220c:	str	x0, [x23]
    2210:	b	21ac <_ZN6__lsan10LeakReport12PrintSummaryEv+0x174>
    2214:	nop

0000000000002218 <_ZN6__lsan10LeakReport17ApplySuppressionsEv>:
    2218:	stp	x19, x20, [sp, #-160]!
    221c:	stp	x23, x24, [sp, #32]
    2220:	mov	x24, x0
    2224:	ldr	x0, [x0, #24]
    2228:	str	x30, [sp, #80]
    222c:	str	xzr, [sp, #112]
    2230:	cbz	x0, 23f8 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x1e0>
    2234:	stp	x21, x22, [sp, #16]
    2238:	adrp	x22, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    223c:	add	x22, x22, #0x0
    2240:	add	x22, x22, #0x18
    2244:	stp	x27, x28, [sp, #64]
    2248:	add	x28, sp, #0x98
    224c:	stp	x25, x26, [sp, #48]
    2250:	ldr	x1, [sp, #112]
    2254:	ldr	x0, [x24, #8]
    2258:	lsl	x1, x1, #5
    225c:	str	x1, [sp, #120]
    2260:	add	x0, x0, x1
    2264:	ldr	w0, [x0, #24]
    2268:	bl	0 <_ZN11__sanitizer13StackDepotGetEj>
    226c:	str	x0, [sp, #104]
    2270:	mov	w25, w1
    2274:	cbz	w1, 235c <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x144>
    2278:	add	x27, sp, #0x90
    227c:	mov	x21, #0x0                   	// #0
    2280:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2284:	add	x0, x0, #0x0
    2288:	ldr	x1, [sp, #104]
    228c:	ldr	x20, [x0, #32]
    2290:	ldr	x19, [x1, x21, lsl #3]
    2294:	str	xzr, [sp, #136]
    2298:	sub	x19, x19, #0x4
    229c:	cbz	x20, 2364 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x14c>
    22a0:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    22a4:	str	xzr, [sp, #144]
    22a8:	mov	x3, x28
    22ac:	mov	x2, x27
    22b0:	mov	x1, x19
    22b4:	bl	0 <_ZN11__sanitizer10Symbolizer27GetModuleNameAndOffsetForPCEmPPKcPm>
    22b8:	tst	w0, #0xff
    22bc:	b.eq	22e0 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0xc8>  // b.none
    22c0:	ldr	x1, [sp, #144]
    22c4:	cbz	x1, 22e0 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0xc8>
    22c8:	add	x3, sp, #0x88
    22cc:	mov	x2, x22
    22d0:	mov	x0, x20
    22d4:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
    22d8:	tst	w0, #0xff
    22dc:	b.ne	2348 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x130>  // b.any
    22e0:	bl	0 <_ZN11__sanitizer10Symbolizer9GetOrInitEv>
    22e4:	add	x23, sp, #0x88
    22e8:	mov	x1, x19
    22ec:	bl	0 <_ZN11__sanitizer10Symbolizer11SymbolizePCEm>
    22f0:	mov	x19, x0
    22f4:	mov	x26, x0
    22f8:	cbnz	x0, 2324 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x10c>
    22fc:	b	2340 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x128>
    2300:	ldr	x1, [x26, #56]
    2304:	mov	x3, x23
    2308:	mov	x2, x22
    230c:	mov	x0, x20
    2310:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
    2314:	tst	w0, #0xff
    2318:	b.ne	2340 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x128>  // b.any
    231c:	ldr	x26, [x26]
    2320:	cbz	x26, 2340 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x128>
    2324:	ldr	x1, [x26, #40]
    2328:	mov	x3, x23
    232c:	mov	x2, x22
    2330:	mov	x0, x20
    2334:	bl	0 <_ZN11__sanitizer18SuppressionContext5MatchEPKcS2_PPNS_11SuppressionE>
    2338:	tst	w0, #0xff
    233c:	b.eq	2300 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0xe8>  // b.none
    2340:	mov	x0, x19
    2344:	bl	0 <_ZN11__sanitizer15SymbolizedStack8ClearAllEv>
    2348:	ldr	x0, [sp, #136]
    234c:	cbnz	x0, 2384 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x16c>
    2350:	add	x21, x21, #0x1
    2354:	cmp	x21, x25
    2358:	b.ne	2280 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x68>  // b.any
    235c:	ldr	x4, [x24, #24]
    2360:	b	23d8 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x1c0>
    2364:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2368:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    236c:	add	x2, x2, #0x0
    2370:	add	x0, x0, #0x0
    2374:	mov	x4, #0x0                   	// #0
    2378:	mov	x3, #0x0                   	// #0
    237c:	mov	w1, #0x60                  	// #96
    2380:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2384:	ldr	x4, [x24, #24]
    2388:	ldr	x2, [sp, #112]
    238c:	ldr	x1, [x24, #8]
    2390:	cmp	x4, x2
    2394:	b.ls	2408 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x1f0>  // b.plast
    2398:	ldr	x2, [sp, #120]
    239c:	ldr	w3, [x0, #16]
    23a0:	add	x1, x1, x2
    23a4:	ldr	x2, [x0, #24]
    23a8:	ldr	x4, [x1, #16]
    23ac:	add	x2, x2, x4
    23b0:	str	x2, [x0, #24]
    23b4:	ldr	x2, [sp, #112]
    23b8:	ldr	x4, [x24, #24]
    23bc:	cmp	x4, x2
    23c0:	b.ls	2408 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x1f0>  // b.plast
    23c4:	ldr	x5, [x1, #8]
    23c8:	mov	w2, #0x1                   	// #1
    23cc:	add	w3, w3, w5
    23d0:	str	w3, [x0, #16]
    23d4:	strb	w2, [x1, #29]
    23d8:	ldr	x0, [sp, #112]
    23dc:	add	x0, x0, #0x1
    23e0:	str	x0, [sp, #112]
    23e4:	cmp	x0, x4
    23e8:	b.cc	2250 <_ZN6__lsan10LeakReport17ApplySuppressionsEv+0x38>  // b.lo, b.ul, b.last
    23ec:	ldp	x21, x22, [sp, #16]
    23f0:	ldp	x25, x26, [sp, #48]
    23f4:	ldp	x27, x28, [sp, #64]
    23f8:	ldp	x23, x24, [sp, #32]
    23fc:	ldr	x30, [sp, #80]
    2400:	ldp	x19, x20, [sp], #160
    2404:	ret
    2408:	mov	x3, x2
    240c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2410:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2414:	add	x0, x0, #0x0
    2418:	add	x2, x2, #0x0
    241c:	mov	w1, #0x1c5                 	// #453
    2420:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2424:	nop

0000000000002428 <_ZN6__lsanL13CheckForLeaksEv>:
    2428:	adrp	x0, 0 <__lsan_is_turned_off>
    242c:	stp	x19, x20, [sp, #-160]!
    2430:	ldr	x0, [x0]
    2434:	stp	x21, x22, [sp, #16]
    2438:	str	x30, [sp, #48]
    243c:	cbz	x0, 2448 <_ZN6__lsanL13CheckForLeaksEv+0x20>
    2440:	bl	0 <__lsan_is_turned_off>
    2444:	cbnz	w0, 2574 <_ZN6__lsanL13CheckForLeaksEv+0x14c>
    2448:	bl	0 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv>
    244c:	add	x22, sp, #0x60
    2450:	movi	v0.4s, #0x0
    2454:	mov	x1, x22
    2458:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    245c:	add	x0, x0, #0x0
    2460:	strb	wzr, [sp, #96]
    2464:	str	wzr, [sp, #104]
    2468:	str	xzr, [sp, #112]
    246c:	stur	q0, [sp, #120]
    2470:	str	xzr, [sp, #136]
    2474:	str	q0, [sp, #144]
    2478:	bl	0 <_ZN6__lsan24LockStuffAndStopTheWorldEPFvRKN11__sanitizer20SuspendedThreadsListEPvES4_>
    247c:	ldrb	w21, [sp, #96]
    2480:	cbz	w21, 26b4 <_ZN6__lsanL13CheckForLeaksEv+0x28c>
    2484:	add	x0, x22, #0x8
    2488:	bl	2218 <_ZN6__lsan10LeakReport17ApplySuppressionsEv>
    248c:	ldr	x2, [sp, #128]
    2490:	cbz	x2, 24bc <_ZN6__lsanL13CheckForLeaksEv+0x94>
    2494:	ldr	x0, [sp, #112]
    2498:	mov	x19, #0x0                   	// #0
    249c:	add	x2, x0, x2, lsl #5
    24a0:	ldrb	w1, [x0, #29]
    24a4:	add	x0, x0, #0x20
    24a8:	cmp	w1, #0x0
    24ac:	cinc	x19, x19, eq  // eq = none
    24b0:	cmp	x2, x0
    24b4:	b.ne	24a0 <_ZN6__lsanL13CheckForLeaksEv+0x78>  // b.any
    24b8:	cbnz	x19, 24f4 <_ZN6__lsanL13CheckForLeaksEv+0xcc>
    24bc:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    24c0:	ldr	x0, [x0]
    24c4:	ldrb	w0, [x0, #185]
    24c8:	cbnz	w0, 258c <_ZN6__lsanL13CheckForLeaksEv+0x164>
    24cc:	mov	w21, #0x0                   	// #0
    24d0:	ldp	x0, x1, [sp, #136]
    24d4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    24d8:	ldp	x0, x1, [sp, #112]
    24dc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    24e0:	mov	w0, w21
    24e4:	ldp	x21, x22, [sp, #16]
    24e8:	ldr	x30, [sp, #48]
    24ec:	ldp	x19, x20, [sp], #160
    24f0:	ret
    24f4:	stp	x23, x24, [sp, #32]
    24f8:	bl	0 <_ZN11__sanitizer15ColorizeReportsEv>
    24fc:	and	w20, w0, #0xff
    2500:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2504:	add	x0, x0, #0x0
    2508:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    250c:	cbnz	w20, 2654 <_ZN6__lsanL13CheckForLeaksEv+0x22c>
    2510:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2514:	add	x20, x1, #0x0
    2518:	mov	x1, x20
    251c:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2520:	add	x0, x23, #0x0
    2524:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2528:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    252c:	add	x0, x0, #0x0
    2530:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2534:	mov	x1, x20
    2538:	add	x0, x23, #0x0
    253c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2540:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2544:	add	x1, x20, #0x0
    2548:	add	x0, x22, #0x8
    254c:	ldrsw	x1, [x1, #8]
    2550:	bl	1bf8 <_ZN6__lsan10LeakReport14ReportTopLeaksEm>
    2554:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    2558:	ldp	x23, x24, [sp, #32]
    255c:	ldr	x0, [x0]
    2560:	ldrb	w0, [x0, #185]
    2564:	cbnz	w0, 2594 <_ZN6__lsanL13CheckForLeaksEv+0x16c>
    2568:	add	x0, x22, #0x8
    256c:	bl	2038 <_ZN6__lsan10LeakReport12PrintSummaryEv>
    2570:	b	24d0 <_ZN6__lsanL13CheckForLeaksEv+0xa8>
    2574:	mov	w21, #0x0                   	// #0
    2578:	mov	w0, w21
    257c:	ldp	x21, x22, [sp, #16]
    2580:	ldr	x30, [sp, #48]
    2584:	ldp	x19, x20, [sp], #160
    2588:	ret
    258c:	mov	x19, #0x0                   	// #0
    2590:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2594:	add	x20, x20, #0x0
    2598:	str	xzr, [sp, #64]
    259c:	stp	xzr, xzr, [sp, #72]
    25a0:	ldr	x0, [x20, #32]
    25a4:	cbz	x0, 2690 <_ZN6__lsanL13CheckForLeaksEv+0x268>
    25a8:	add	x1, sp, #0x40
    25ac:	bl	0 <_ZN11__sanitizer18SuppressionContext10GetMatchedEPNS_18InternalMmapVectorIPNS_11SuppressionEEE>
    25b0:	ldr	x0, [sp, #80]
    25b4:	cbz	x0, 2680 <_ZN6__lsanL13CheckForLeaksEv+0x258>
    25b8:	stp	x23, x24, [sp, #32]
    25bc:	adrp	x24, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    25c0:	add	x1, x24, #0x0
    25c4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    25c8:	add	x0, x0, #0x0
    25cc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    25d0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    25d4:	add	x0, x0, #0x0
    25d8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    25dc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    25e0:	add	x0, x0, #0x0
    25e4:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    25e8:	ldr	x0, [sp, #80]
    25ec:	cbz	x0, 2630 <_ZN6__lsanL13CheckForLeaksEv+0x208>
    25f0:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    25f4:	add	x23, x23, #0x0
    25f8:	mov	x20, #0x0                   	// #0
    25fc:	nop
    2600:	ldr	x1, [sp, #64]
    2604:	mov	x0, x23
    2608:	ldr	x1, [x1, x20, lsl #3]
    260c:	add	x20, x20, #0x1
    2610:	ldr	x3, [x1, #8]
    2614:	ldr	x2, [x1, #24]
    2618:	ldr	w1, [x1, #16]
    261c:	mov	w1, w1
    2620:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2624:	ldr	x1, [sp, #80]
    2628:	cmp	x1, x20
    262c:	b.hi	2600 <_ZN6__lsanL13CheckForLeaksEv+0x1d8>  // b.pmore
    2630:	add	x1, x24, #0x0
    2634:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2638:	add	x0, x0, #0x0
    263c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2640:	ldp	x0, x1, [sp, #64]
    2644:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2648:	ldp	x23, x24, [sp, #32]
    264c:	cbz	x19, 24cc <_ZN6__lsanL13CheckForLeaksEv+0xa4>
    2650:	b	2568 <_ZN6__lsanL13CheckForLeaksEv+0x140>
    2654:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2658:	add	x1, x1, #0x0
    265c:	adrp	x23, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2660:	add	x0, x23, #0x0
    2664:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2668:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    266c:	add	x0, x0, #0x0
    2670:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2674:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2678:	add	x1, x1, #0x0
    267c:	b	2538 <_ZN6__lsanL13CheckForLeaksEv+0x110>
    2680:	ldp	x0, x1, [sp, #64]
    2684:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2688:	cbz	x19, 24cc <_ZN6__lsanL13CheckForLeaksEv+0xa4>
    268c:	b	2568 <_ZN6__lsanL13CheckForLeaksEv+0x140>
    2690:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2694:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2698:	add	x2, x2, #0x0
    269c:	add	x0, x0, #0x0
    26a0:	mov	x4, #0x0                   	// #0
    26a4:	mov	x3, #0x0                   	// #0
    26a8:	mov	w1, #0x60                  	// #96
    26ac:	stp	x23, x24, [sp, #32]
    26b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    26b4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    26b8:	add	x0, x0, #0x0
    26bc:	stp	x23, x24, [sp, #32]
    26c0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    26c4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    26c8:	add	x0, x0, #0x0
    26cc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    26d0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    26d4:	add	x0, x0, #0x0
    26d8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    26dc:	bl	0 <_ZN11__sanitizer3DieEv>

00000000000026e0 <_ZN6__lsan11DoLeakCheckEv>:
    26e0:	stp	x19, x20, [sp, #-32]!
    26e4:	adrp	x19, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    26e8:	add	x20, x19, #0x0
    26ec:	add	x0, x20, #0xe0
    26f0:	str	x30, [sp, #16]
    26f4:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    26f8:	ldrb	w0, [x20, #312]
    26fc:	cbnz	w0, 2718 <_ZN6__lsan11DoLeakCheckEv+0x38>
    2700:	mov	w0, #0x1                   	// #1
    2704:	strb	w0, [x20, #312]
    2708:	bl	2428 <_ZN6__lsanL13CheckForLeaksEv>
    270c:	strb	w0, [x20, #216]
    2710:	tst	w0, #0xff
    2714:	b.ne	272c <_ZN6__lsan11DoLeakCheckEv+0x4c>  // b.any
    2718:	add	x0, x19, #0x0
    271c:	ldr	x30, [sp, #16]
    2720:	add	x0, x0, #0xe0
    2724:	ldp	x19, x20, [sp], #32
    2728:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    272c:	bl	0 <_ZN6__lsan11HandleLeaksEv>
    2730:	add	x0, x19, #0x0
    2734:	ldr	x30, [sp, #16]
    2738:	add	x0, x0, #0xe0
    273c:	ldp	x19, x20, [sp], #32
    2740:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2744:	nop

0000000000002748 <_ZN6__lsan26DoRecoverableLeakCheckVoidEv>:
    2748:	stp	x19, x30, [sp, #-16]!
    274c:	adrp	x19, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2750:	add	x19, x19, #0x0
    2754:	add	x19, x19, #0xe0
    2758:	mov	x0, x19
    275c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    2760:	bl	2428 <_ZN6__lsanL13CheckForLeaksEv>
    2764:	mov	x0, x19
    2768:	ldp	x19, x30, [sp], #16
    276c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

0000000000002770 <_ZN6__lsan10LeakReport21UnsuppressedLeakCountEv>:
    2770:	mov	x1, x0
    2774:	ldr	x0, [x0, #24]
    2778:	cbz	x0, 27a0 <_ZN6__lsan10LeakReport21UnsuppressedLeakCountEv+0x30>
    277c:	ldr	x1, [x1, #8]
    2780:	add	x3, x1, x0, lsl #5
    2784:	mov	x0, #0x0                   	// #0
    2788:	ldrb	w2, [x1, #29]
    278c:	add	x1, x1, #0x20
    2790:	cmp	w2, #0x0
    2794:	cinc	x0, x0, eq  // eq = none
    2798:	cmp	x1, x3
    279c:	b.ne	2788 <_ZN6__lsan10LeakReport21UnsuppressedLeakCountEv+0x18>  // b.any
    27a0:	ret
    27a4:	nop

00000000000027a8 <__lsan_ignore_object>:
    27a8:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    27ac:	stp	x19, x20, [sp, #-32]!
    27b0:	mov	x19, x0
    27b4:	ldr	x2, [x2]
    27b8:	ldrb	w0, [x2, #57]
    27bc:	str	x30, [sp, #16]
    27c0:	cbnz	w0, 27d0 <__lsan_ignore_object+0x28>
    27c4:	ldr	x30, [sp, #16]
    27c8:	ldp	x19, x20, [sp], #32
    27cc:	ret
    27d0:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    27d4:	add	x0, x20, #0x0
    27d8:	add	x0, x0, #0xe0
    27dc:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    27e0:	mov	x0, x19
    27e4:	bl	0 <_ZN6__lsan18IgnoreObjectLockedEPKv>
    27e8:	cmp	w0, #0x2
    27ec:	b.eq	2854 <__lsan_ignore_object+0xac>  // b.none
    27f0:	cmp	w0, #0x1
    27f4:	b.ne	282c <__lsan_ignore_object+0x84>  // b.any
    27f8:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
    27fc:	ldr	x0, [x0]
    2800:	ldr	w0, [x0]
    2804:	cbz	w0, 2818 <__lsan_ignore_object+0x70>
    2808:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    280c:	mov	x1, x19
    2810:	add	x0, x0, #0x0
    2814:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2818:	add	x0, x20, #0x0
    281c:	ldr	x30, [sp, #16]
    2820:	add	x0, x0, #0xe0
    2824:	ldp	x19, x20, [sp], #32
    2828:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    282c:	cbnz	w0, 2818 <__lsan_ignore_object+0x70>
    2830:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
    2834:	ldr	x0, [x0]
    2838:	ldr	w0, [x0]
    283c:	cbz	w0, 2818 <__lsan_ignore_object+0x70>
    2840:	mov	x1, x19
    2844:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2848:	add	x0, x0, #0x0
    284c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2850:	b	2818 <__lsan_ignore_object+0x70>
    2854:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
    2858:	ldr	x0, [x0]
    285c:	ldr	w0, [x0]
    2860:	cbz	w0, 2818 <__lsan_ignore_object+0x70>
    2864:	mov	x1, x19
    2868:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    286c:	add	x0, x0, #0x0
    2870:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2874:	b	2818 <__lsan_ignore_object+0x70>

0000000000002878 <__lsan_register_root_region>:
    2878:	stp	x19, x20, [sp, #-80]!
    287c:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2880:	add	x19, x20, #0x0
    2884:	stp	x21, x22, [sp, #16]
    2888:	mov	x21, x0
    288c:	mov	x22, x1
    2890:	add	x0, x19, #0xe0
    2894:	stp	x23, x24, [sp, #32]
    2898:	str	x30, [sp, #48]
    289c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    28a0:	ldr	x19, [x19, #176]
    28a4:	cbz	x19, 29f0 <__lsan_register_root_region+0x178>
    28a8:	stp	x21, x22, [sp, #64]
    28ac:	ldr	x4, [x19, #8]
    28b0:	ldr	x3, [x19, #16]
    28b4:	lsr	x4, x4, #4
    28b8:	cmp	x3, x4
    28bc:	b.hi	2a10 <__lsan_register_root_region+0x198>  // b.pmore
    28c0:	add	x23, x3, #0x1
    28c4:	b.eq	2944 <__lsan_register_root_region+0xcc>  // b.none
    28c8:	ldr	x24, [x19]
    28cc:	str	x23, [x19, #16]
    28d0:	add	x0, x24, x3, lsl #4
    28d4:	add	x1, sp, #0x40
    28d8:	mov	x2, #0x10                  	// #16
    28dc:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    28e0:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
    28e4:	ldr	x0, [x0]
    28e8:	ldr	w0, [x0]
    28ec:	cbnz	w0, 2910 <__lsan_register_root_region+0x98>
    28f0:	add	x0, x20, #0x0
    28f4:	add	x0, x0, #0xe0
    28f8:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    28fc:	ldp	x21, x22, [sp, #16]
    2900:	ldp	x23, x24, [sp, #32]
    2904:	ldr	x30, [sp, #48]
    2908:	ldp	x19, x20, [sp], #80
    290c:	ret
    2910:	mov	x2, x22
    2914:	mov	x1, x21
    2918:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    291c:	add	x0, x0, #0x0
    2920:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2924:	add	x0, x20, #0x0
    2928:	add	x0, x0, #0xe0
    292c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2930:	ldp	x21, x22, [sp, #16]
    2934:	ldp	x23, x24, [sp, #32]
    2938:	ldr	x30, [sp, #48]
    293c:	ldp	x19, x20, [sp], #80
    2940:	ret
    2944:	tst	x3, x23
    2948:	b.eq	2984 <__lsan_register_root_region+0x10c>  // b.none
    294c:	clz	x4, x23
    2950:	mov	w0, #0x3f                  	// #63
    2954:	sub	w0, w0, w4
    2958:	mov	x2, #0x1                   	// #1
    295c:	add	w4, w0, #0x1
    2960:	lsl	x4, x2, x4
    2964:	cmp	x23, x4
    2968:	b.cs	2a5c <__lsan_register_root_region+0x1e4>  // b.hs, b.nlast
    296c:	lsl	x0, x2, x0
    2970:	cmp	x23, x0
    2974:	b.ls	2a78 <__lsan_register_root_region+0x200>  // b.plast
    2978:	cmp	x3, x4
    297c:	b.hi	2a28 <__lsan_register_root_region+0x1b0>  // b.pmore
    2980:	mov	x23, x4
    2984:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
    2988:	lsl	x23, x23, #4
    298c:	ldr	x24, [x24]
    2990:	ldr	x0, [x24]
    2994:	cbz	x0, 2a40 <__lsan_register_root_region+0x1c8>
    2998:	sub	x1, x0, #0x1
    299c:	tst	x1, x0
    29a0:	b.ne	2a4c <__lsan_register_root_region+0x1d4>  // b.any
    29a4:	add	x23, x23, x1
    29a8:	neg	x0, x0
    29ac:	and	x23, x23, x0
    29b0:	mov	w2, #0x0                   	// #0
    29b4:	mov	x0, x23
    29b8:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    29bc:	add	x1, x1, #0x0
    29c0:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    29c4:	ldr	x1, [x19]
    29c8:	mov	x24, x0
    29cc:	ldr	x2, [x19, #16]
    29d0:	lsl	x2, x2, #4
    29d4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    29d8:	ldp	x0, x1, [x19]
    29dc:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    29e0:	stp	x24, x23, [x19]
    29e4:	ldr	x3, [x19, #16]
    29e8:	add	x23, x3, #0x1
    29ec:	b	28cc <__lsan_register_root_region+0x54>
    29f0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    29f4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    29f8:	add	x2, x2, #0x0
    29fc:	add	x0, x0, #0x0
    2a00:	mov	x4, #0x0                   	// #0
    2a04:	mov	x3, #0x0                   	// #0
    2a08:	mov	w1, #0x333                 	// #819
    2a0c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2a10:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a14:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a18:	add	x2, x2, #0x0
    2a1c:	add	x0, x0, #0x0
    2a20:	mov	w1, #0x1cd                 	// #461
    2a24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2a28:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a2c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a30:	add	x2, x2, #0x0
    2a34:	add	x0, x0, #0x0
    2a38:	mov	w1, #0x20c                 	// #524
    2a3c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2a40:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    2a44:	str	x0, [x24]
    2a48:	b	2998 <__lsan_register_root_region+0x120>
    2a4c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a50:	add	x0, x0, #0x0
    2a54:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    2a58:	bl	0 <_ZN11__sanitizer3DieEv>
    2a5c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a60:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a64:	mov	x3, x23
    2a68:	add	x2, x2, #0x0
    2a6c:	add	x0, x0, #0x0
    2a70:	mov	w1, #0x18a                 	// #394
    2a74:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2a78:	mov	x4, x0
    2a7c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a80:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2a84:	mov	x3, x23
    2a88:	add	x2, x2, #0x0
    2a8c:	add	x0, x0, #0x0
    2a90:	mov	w1, #0x18b                 	// #395
    2a94:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000002a98 <__lsan_unregister_root_region>:
    2a98:	stp	x19, x20, [sp, #-48]!
    2a9c:	mov	x19, x0
    2aa0:	mov	x20, x1
    2aa4:	stp	x21, x22, [sp, #16]
    2aa8:	adrp	x21, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2aac:	add	x22, x21, #0x0
    2ab0:	add	x0, x22, #0xe0
    2ab4:	str	x30, [sp, #32]
    2ab8:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    2abc:	ldr	x0, [x22, #176]
    2ac0:	cbz	x0, 2b6c <__lsan_unregister_root_region+0xd4>
    2ac4:	ldr	x7, [x0, #16]
    2ac8:	cbz	x7, 2bac <__lsan_unregister_root_region+0x114>
    2acc:	ldr	x1, [x0]
    2ad0:	mov	x4, #0x0                   	// #0
    2ad4:	mov	x3, x1
    2ad8:	b	2aec <__lsan_unregister_root_region+0x54>
    2adc:	add	x4, x4, #0x1
    2ae0:	add	x3, x3, #0x10
    2ae4:	cmp	x7, x4
    2ae8:	b.eq	2bac <__lsan_unregister_root_region+0x114>  // b.none
    2aec:	ldp	x5, x6, [x3]
    2af0:	cmp	x6, x20
    2af4:	ccmp	x5, x19, #0x0, eq  // eq = none
    2af8:	b.ne	2adc <__lsan_unregister_root_region+0x44>  // b.any
    2afc:	add	x7, x1, x7, lsl #4
    2b00:	ldp	x4, x5, [x7, #-16]
    2b04:	stp	x4, x5, [x3]
    2b08:	ldr	x1, [x0, #16]
    2b0c:	cbz	x1, 2b8c <__lsan_unregister_root_region+0xf4>
    2b10:	adrp	x2, 0 <_ZN11__sanitizer17current_verbosityE>
    2b14:	sub	x1, x1, #0x1
    2b18:	str	x1, [x0, #16]
    2b1c:	ldr	x0, [x2]
    2b20:	ldr	w0, [x0]
    2b24:	cbnz	w0, 2b40 <__lsan_unregister_root_region+0xa8>
    2b28:	add	x0, x21, #0x0
    2b2c:	ldp	x21, x22, [sp, #16]
    2b30:	add	x0, x0, #0xe0
    2b34:	ldr	x30, [sp, #32]
    2b38:	ldp	x19, x20, [sp], #48
    2b3c:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2b40:	mov	x2, x20
    2b44:	mov	x1, x19
    2b48:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2b4c:	add	x0, x0, #0x0
    2b50:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2b54:	add	x0, x21, #0x0
    2b58:	ldp	x21, x22, [sp, #16]
    2b5c:	add	x0, x0, #0xe0
    2b60:	ldr	x30, [sp, #32]
    2b64:	ldp	x19, x20, [sp], #48
    2b68:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2b6c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2b70:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2b74:	add	x2, x2, #0x0
    2b78:	add	x0, x0, #0x0
    2b7c:	mov	x4, #0x0                   	// #0
    2b80:	mov	x3, #0x0                   	// #0
    2b84:	mov	w1, #0x33e                 	// #830
    2b88:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2b8c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2b90:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2b94:	add	x2, x2, #0x0
    2b98:	add	x0, x0, #0x0
    2b9c:	mov	x4, #0x0                   	// #0
    2ba0:	mov	x3, #0x0                   	// #0
    2ba4:	mov	w1, #0x1d9                 	// #473
    2ba8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2bac:	mov	x2, x20
    2bb0:	mov	x1, x19
    2bb4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2bb8:	add	x0, x0, #0x0
    2bbc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2bc0:	bl	0 <_ZN11__sanitizer3DieEv>
    2bc4:	nop

0000000000002bc8 <__lsan_disable>:
    2bc8:	b	0 <_ZN6__lsan19DisableInThisThreadEv>
    2bcc:	nop

0000000000002bd0 <__lsan_enable>:
    2bd0:	b	0 <_ZN6__lsan18EnableInThisThreadEv>
    2bd4:	nop

0000000000002bd8 <__lsan_do_leak_check>:
    2bd8:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    2bdc:	ldr	x0, [x0]
    2be0:	ldrb	w0, [x0, #57]
    2be4:	cbnz	w0, 2bec <__lsan_do_leak_check+0x14>
    2be8:	ret
    2bec:	stp	x19, x20, [sp, #-32]!
    2bf0:	adrp	x19, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2bf4:	add	x20, x19, #0x0
    2bf8:	add	x0, x20, #0xe0
    2bfc:	str	x30, [sp, #16]
    2c00:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    2c04:	ldrb	w0, [x20, #312]
    2c08:	cbnz	w0, 2c24 <__lsan_do_leak_check+0x4c>
    2c0c:	mov	w0, #0x1                   	// #1
    2c10:	strb	w0, [x20, #312]
    2c14:	bl	2428 <_ZN6__lsanL13CheckForLeaksEv>
    2c18:	strb	w0, [x20, #216]
    2c1c:	tst	w0, #0xff
    2c20:	b.ne	2c38 <__lsan_do_leak_check+0x60>  // b.any
    2c24:	add	x0, x19, #0x0
    2c28:	ldr	x30, [sp, #16]
    2c2c:	add	x0, x0, #0xe0
    2c30:	ldp	x19, x20, [sp], #32
    2c34:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2c38:	bl	0 <_ZN6__lsan11HandleLeaksEv>
    2c3c:	b	2c24 <__lsan_do_leak_check+0x4c>

0000000000002c40 <__lsan_do_recoverable_leak_check>:
    2c40:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    2c44:	stp	x19, x20, [sp, #-32]!
    2c48:	mov	w19, #0x0                   	// #0
    2c4c:	ldr	x1, [x1]
    2c50:	ldrb	w0, [x1, #57]
    2c54:	str	x30, [sp, #16]
    2c58:	cbnz	w0, 2c6c <__lsan_do_recoverable_leak_check+0x2c>
    2c5c:	mov	w0, w19
    2c60:	ldr	x30, [sp, #16]
    2c64:	ldp	x19, x20, [sp], #32
    2c68:	ret
    2c6c:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2c70:	add	x20, x20, #0x0
    2c74:	add	x20, x20, #0xe0
    2c78:	mov	x0, x20
    2c7c:	bl	0 <_ZN11__sanitizer13BlockingMutex4LockEv>
    2c80:	bl	2428 <_ZN6__lsanL13CheckForLeaksEv>
    2c84:	and	w19, w0, #0xff
    2c88:	mov	x0, x20
    2c8c:	bl	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>
    2c90:	mov	w0, w19
    2c94:	ldr	x30, [sp, #16]
    2c98:	ldp	x19, x20, [sp], #32
    2c9c:	ret

0000000000002ca0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv>:
    2ca0:	stp	x19, x20, [sp, #-352]!
    2ca4:	stp	x21, x22, [sp, #16]
    2ca8:	stp	x23, x24, [sp, #32]
    2cac:	stp	x25, x26, [sp, #48]
    2cb0:	stp	x27, x28, [sp, #64]
    2cb4:	str	x30, [sp, #80]
    2cb8:	cbz	x1, 348c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7ec>
    2cbc:	mov	x25, x1
    2cc0:	ldrb	w1, [x1]
    2cc4:	cbnz	w1, 352c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x88c>
    2cc8:	ldr	x1, [x0]
    2ccc:	mov	x19, x0
    2cd0:	ldr	x1, [x1, #16]
    2cd4:	blr	x1
    2cd8:	mov	x21, x0
    2cdc:	add	x0, sp, #0x200
    2ce0:	str	xzr, [sp, #272]
    2ce4:	stp	xzr, xzr, [x0, #-232]
    2ce8:	cbnz	x21, 322c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x58c>
    2cec:	mov	x20, #0x0                   	// #0
    2cf0:	str	x21, [sp, #288]
    2cf4:	b	2d0c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6c>
    2cf8:	mov	x1, x20
    2cfc:	mov	x0, x19
    2d00:	blr	x2
    2d04:	str	x0, [x21, x20, lsl #3]
    2d08:	add	x20, x20, #0x1
    2d0c:	ldr	x1, [x19]
    2d10:	mov	x0, x19
    2d14:	ldr	x1, [x1, #16]
    2d18:	blr	x1
    2d1c:	cmp	x0, x20
    2d20:	b.ls	2d58 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0xb8>  // b.plast
    2d24:	ldr	x0, [x19]
    2d28:	ldr	x4, [sp, #288]
    2d2c:	ldr	x2, [x0, #24]
    2d30:	cmp	x20, x4
    2d34:	ldr	x21, [sp, #272]
    2d38:	b.cc	2cf8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x58>  // b.lo, b.ul, b.last
    2d3c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2d40:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2d44:	mov	x3, x20
    2d48:	add	x2, x2, #0x0
    2d4c:	add	x0, x0, #0x0
    2d50:	mov	w1, #0x1c5                 	// #453
    2d54:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2d58:	ldr	x0, [sp, #272]
    2d5c:	mov	w2, #0x0                   	// #0
    2d60:	ldr	x1, [sp, #288]
    2d64:	add	x22, sp, #0x110
    2d68:	add	x23, sp, #0xd0
    2d6c:	bl	0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2d70:	bl	0 <_ZN6__lsan23GetThreadRegistryLockedEv>
    2d74:	mov	x2, x22
    2d78:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2d7c:	add	x1, x1, #0x0
    2d80:	bl	0 <_ZN11__sanitizer14ThreadRegistry30RunCallbackForEachThreadLockedEPFvPNS_17ThreadContextBaseEPvES3_>
    2d84:	ldp	x0, x1, [sp, #272]
    2d88:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2d8c:	str	xzr, [sp, #208]
    2d90:	mov	x1, x23
    2d94:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2d98:	add	x0, x0, #0x0
    2d9c:	stp	xzr, xzr, [sp, #216]
    2da0:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    2da4:	mov	x0, x23
    2da8:	bl	0 <_ZN6__lsan20ProcessGlobalRegionsEPN11__sanitizer18InternalMmapVectorImEE>
    2dac:	ldr	x1, [x19]
    2db0:	mov	x0, x19
    2db4:	ldr	x1, [x1, #8]
    2db8:	blr	x1
    2dbc:	str	x0, [sp, #112]
    2dc0:	cbnz	x0, 32b8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x618>
    2dc4:	mov	x21, #0x0                   	// #0
    2dc8:	mov	x26, #0x0                   	// #0
    2dcc:	str	xzr, [sp, #128]
    2dd0:	adrp	x1, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2dd4:	add	x1, x1, #0x0
    2dd8:	str	x1, [sp, #104]
    2ddc:	add	x0, x26, x21
    2de0:	ldr	x1, [x19]
    2de4:	str	x0, [sp, #136]
    2de8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2dec:	add	x0, x0, #0x0
    2df0:	str	x0, [sp, #120]
    2df4:	mov	x24, #0x0                   	// #0
    2df8:	ldr	x1, [x1, #16]
    2dfc:	mov	x0, x19
    2e00:	adrp	x20, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2e04:	blr	x1
    2e08:	cmp	x0, x24
    2e0c:	b.ls	2fa4 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x304>  // b.plast
    2e10:	ldr	x2, [x19]
    2e14:	mov	x1, x24
    2e18:	mov	x0, x19
    2e1c:	ldr	x2, [x2, #24]
    2e20:	blr	x2
    2e24:	mov	x21, x0
    2e28:	add	x1, x20, #0x0
    2e2c:	ldrb	w0, [x1, #21]
    2e30:	cbnz	w0, 344c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7ac>
    2e34:	add	x7, sp, #0xf0
    2e38:	add	x6, sp, #0xc8
    2e3c:	add	x5, sp, #0xc0
    2e40:	add	x4, sp, #0xb8
    2e44:	add	x3, sp, #0xb0
    2e48:	add	x2, sp, #0xa8
    2e4c:	add	x1, sp, #0xa0
    2e50:	mov	x0, x21
    2e54:	bl	0 <_ZN6__lsan21GetThreadRangesLockedEyPmS0_S0_S0_S0_S0_PPN11__sanitizer4DTLSE>
    2e58:	tst	w0, #0xff
    2e5c:	b.eq	3428 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x788>  // b.none
    2e60:	ldr	x4, [x19]
    2e64:	mov	x3, x22
    2e68:	mov	x2, x26
    2e6c:	mov	x1, x24
    2e70:	mov	x0, x19
    2e74:	ldr	x4, [x4]
    2e78:	blr	x4
    2e7c:	mov	w27, w0
    2e80:	cmp	w0, #0x1
    2e84:	b.eq	2ea8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x208>  // b.none
    2e88:	mov	x1, x21
    2e8c:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2e90:	add	x0, x0, #0x0
    2e94:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    2e98:	cmn	w27, #0x1
    2e9c:	b.eq	2f88 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2e8>  // b.none
    2ea0:	ldr	x0, [sp, #160]
    2ea4:	str	x0, [sp, #272]
    2ea8:	add	x0, x20, #0x0
    2eac:	cmp	w27, #0x0
    2eb0:	cset	w1, ne  // ne = any
    2eb4:	ldrb	w0, [x0, #14]
    2eb8:	tst	w1, w0
    2ebc:	b.ne	3474 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7d4>  // b.any
    2ec0:	add	x0, x20, #0x0
    2ec4:	ldrb	w1, [x0, #13]
    2ec8:	cbz	w1, 2f18 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x278>
    2ecc:	ldrb	w2, [x0, #21]
    2ed0:	ldr	x1, [sp, #160]
    2ed4:	ldr	x0, [sp, #272]
    2ed8:	cbnz	w2, 333c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x69c>
    2edc:	cmp	x1, x0
    2ee0:	b.hi	3384 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6e4>  // b.pmore
    2ee4:	ldr	x1, [sp, #168]
    2ee8:	cmp	x1, x0
    2eec:	b.ls	3384 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6e4>  // b.plast
    2ef0:	str	x0, [sp, #160]
    2ef4:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2ef8:	add	x3, x3, #0x0
    2efc:	mov	x2, x23
    2f00:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    2f04:	adrp	x1, 6e0 <_ZN6__lsan24ForEachExtraStackRangeCbEmmPv>
    2f08:	mov	x2, x23
    2f0c:	mov	x0, x21
    2f10:	add	x1, x1, #0x0
    2f14:	bl	0 <_ZN6__lsan22ForEachExtraStackRangeEyPFvmmPvES0_>
    2f18:	add	x1, x20, #0x0
    2f1c:	ldrb	w0, [x1, #15]
    2f20:	cbz	w0, 2f88 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2e8>
    2f24:	ldr	x0, [sp, #176]
    2f28:	cbz	x0, 2f68 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2c8>
    2f2c:	ldrb	w2, [x1, #21]
    2f30:	ldr	x1, [sp, #184]
    2f34:	cbnz	w2, 3510 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x870>
    2f38:	ldp	x2, x3, [sp, #192]
    2f3c:	cmp	x2, x3
    2f40:	b.eq	3460 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7c0>  // b.none
    2f44:	cmp	x1, x2
    2f48:	b.cc	3460 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7c0>  // b.lo, b.ul, b.last
    2f4c:	cmp	x3, x0
    2f50:	b.cc	3460 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7c0>  // b.lo, b.ul, b.last
    2f54:	cmp	x2, x0
    2f58:	b.hi	3618 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x978>  // b.pmore
    2f5c:	cmp	x1, x3
    2f60:	b.hi	345c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x7bc>  // b.pmore
    2f64:	nop
    2f68:	ldr	x0, [sp, #240]
    2f6c:	cbz	x0, 2f7c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2dc>
    2f70:	bl	0 <_ZN11__sanitizer17DTLSInDestructionEPNS_4DTLSE>
    2f74:	tst	w0, #0xff
    2f78:	b.eq	355c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x8bc>  // b.none
    2f7c:	add	x0, x20, #0x0
    2f80:	ldrb	w0, [x0, #21]
    2f84:	cbnz	w0, 3410 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x770>
    2f88:	add	x24, x24, #0x1
    2f8c:	ldr	x1, [x19]
    2f90:	mov	x0, x19
    2f94:	ldr	x1, [x1, #16]
    2f98:	blr	x1
    2f9c:	cmp	x0, x24
    2fa0:	b.hi	2e10 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x170>  // b.pmore
    2fa4:	ldr	x1, [sp, #112]
    2fa8:	add	x27, x20, #0x0
    2fac:	mov	x0, x26
    2fb0:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2fb4:	ldrb	w0, [x27, #16]
    2fb8:	cbz	w0, 3508 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x868>
    2fbc:	ldr	x0, [x27, #176]
    2fc0:	cbz	x0, 36c0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0xa20>
    2fc4:	ldr	x1, [x0, #16]
    2fc8:	cbz	x1, 3508 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x868>
    2fcc:	add	x26, sp, #0xf0
    2fd0:	adrp	x28, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2fd4:	mov	x21, #0x0                   	// #0
    2fd8:	add	x1, x28, #0x0
    2fdc:	str	x1, [sp, #120]
    2fe0:	ldr	x19, [x0]
    2fe4:	adrp	x24, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    2fe8:	add	x24, x24, #0x0
    2fec:	mov	x0, x26
    2ff0:	mov	w1, #0x1                   	// #1
    2ff4:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutC1Eb>
    2ff8:	add	x19, x19, x21, lsl #4
    2ffc:	stp	xzr, xzr, [sp, #296]
    3000:	str	xzr, [sp, #344]
    3004:	nop
    3008:	mov	x1, x22
    300c:	mov	x0, x26
    3010:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
    3014:	tst	w0, #0xff
    3018:	b.eq	30a8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x408>  // b.none
    301c:	ldp	x1, x2, [x19]
    3020:	ldp	x3, x4, [sp, #272]
    3024:	add	x2, x1, x2
    3028:	cmp	x3, x1
    302c:	csel	x28, x3, x1, cs  // cs = hs, nlast
    3030:	cmp	x4, x2
    3034:	csel	x8, x4, x2, ls  // ls = plast
    3038:	cmp	x28, x8
    303c:	b.cs	3008 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x368>  // b.hs, b.nlast
    3040:	ldrb	w0, [x27, #20]
    3044:	ldr	x6, [sp, #312]
    3048:	and	w6, w6, #0x1
    304c:	cbz	w0, 3078 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x3d8>
    3050:	cmp	w6, #0x0
    3054:	str	w6, [sp, #104]
    3058:	ldr	x0, [sp, #120]
    305c:	str	x8, [sp, #112]
    3060:	csel	x5, x24, x0, ne  // ne = any
    3064:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3068:	add	x0, x0, #0x0
    306c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3070:	ldr	w6, [sp, #104]
    3074:	ldr	x8, [sp, #112]
    3078:	cbz	w6, 3008 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x368>
    307c:	mov	x2, x23
    3080:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3084:	add	x3, x3, #0x0
    3088:	mov	x1, x8
    308c:	mov	x0, x28
    3090:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    3094:	mov	x1, x22
    3098:	mov	x0, x26
    309c:	bl	0 <_ZN11__sanitizer19MemoryMappingLayout4NextEPNS_19MemoryMappedSegmentE>
    30a0:	tst	w0, #0xff
    30a4:	b.ne	301c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x37c>  // b.any
    30a8:	mov	x0, x26
    30ac:	bl	0 <_ZN11__sanitizer19MemoryMappingLayoutD1Ev>
    30b0:	ldr	x0, [x27, #176]
    30b4:	add	x21, x21, #0x1
    30b8:	ldr	x1, [x0, #16]
    30bc:	cmp	x1, x21
    30c0:	b.hi	2fe0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x340>  // b.pmore
    30c4:	ldr	x1, [sp, #224]
    30c8:	adrp	x21, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    30cc:	add	x21, x21, #0x0
    30d0:	cbz	x1, 311c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x47c>
    30d4:	nop
    30d8:	ldr	x3, [sp, #208]
    30dc:	sub	x2, x1, #0x1
    30e0:	mov	x0, x22
    30e4:	add	x1, x3, x1, lsl #3
    30e8:	ldur	x19, [x1, #-8]
    30ec:	str	x2, [sp, #224]
    30f0:	mov	x1, x19
    30f4:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
    30f8:	mov	x0, x22
    30fc:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    3100:	add	x1, x19, x0
    3104:	mov	x3, x21
    3108:	mov	x2, x23
    310c:	mov	x0, x19
    3110:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    3114:	ldr	x1, [sp, #224]
    3118:	cbnz	x1, 30d8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x438>
    311c:	mov	x0, x26
    3120:	bl	0 <_ZN11__sanitizer20StackDepotReverseMapC1Ev>
    3124:	add	x0, x20, #0x0
    3128:	stp	x23, x26, [sp, #272]
    312c:	ldrb	w2, [x0, #15]
    3130:	cbz	w2, 313c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x49c>
    3134:	ldrb	w2, [x0, #17]
    3138:	cbnz	w2, 3638 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x998>
    313c:	mov	x1, x22
    3140:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3144:	add	x0, x0, #0x0
    3148:	strb	w2, [sp, #288]
    314c:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    3150:	ldp	x0, x1, [sp, #240]
    3154:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    3158:	add	x0, x20, #0x0
    315c:	ldrb	w0, [x0, #20]
    3160:	cbnz	w0, 3648 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x9a8>
    3164:	mov	x0, x23
    3168:	bl	0 <_ZN6__lsan34ProcessPlatformSpecificAllocationsEPN11__sanitizer18InternalMmapVectorImEE>
    316c:	ldr	x1, [sp, #224]
    3170:	adrp	x21, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3174:	add	x21, x21, #0x0
    3178:	cbz	x1, 31c4 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x524>
    317c:	nop
    3180:	ldr	x3, [sp, #208]
    3184:	sub	x2, x1, #0x1
    3188:	mov	x0, x22
    318c:	add	x1, x3, x1, lsl #3
    3190:	ldur	x19, [x1, #-8]
    3194:	str	x2, [sp, #224]
    3198:	mov	x1, x19
    319c:	bl	0 <_ZN6__lsan12LsanMetadataC1Em>
    31a0:	mov	x0, x22
    31a4:	bl	0 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>
    31a8:	add	x1, x19, x0
    31ac:	mov	x3, x21
    31b0:	mov	x2, x23
    31b4:	mov	x0, x19
    31b8:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    31bc:	ldr	x1, [sp, #224]
    31c0:	cbnz	x1, 3180 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x4e0>
    31c4:	add	x20, x20, #0x0
    31c8:	ldrb	w0, [x20, #20]
    31cc:	cbnz	w0, 3608 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x968>
    31d0:	mov	x1, #0x0                   	// #0
    31d4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    31d8:	add	x0, x0, #0x0
    31dc:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    31e0:	ldp	x0, x1, [sp, #208]
    31e4:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    31e8:	add	x1, x25, #0x8
    31ec:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    31f0:	add	x0, x0, #0x0
    31f4:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    31f8:	mov	x1, #0x0                   	// #0
    31fc:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3200:	add	x0, x0, #0x0
    3204:	bl	0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>
    3208:	mov	w0, #0x1                   	// #1
    320c:	strb	w0, [x25]
    3210:	ldp	x21, x22, [sp, #16]
    3214:	ldp	x23, x24, [sp, #32]
    3218:	ldp	x25, x26, [sp, #48]
    321c:	ldp	x27, x28, [sp, #64]
    3220:	ldr	x30, [sp, #80]
    3224:	ldp	x19, x20, [sp], #352
    3228:	ret
    322c:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
    3230:	lsl	x22, x21, #3
    3234:	ldr	x20, [x24]
    3238:	ldr	x0, [x20]
    323c:	cbz	x0, 3404 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x764>
    3240:	sub	x1, x0, #0x1
    3244:	tst	x1, x0
    3248:	b.ne	35f8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x958>  // b.any
    324c:	add	x1, x22, x1
    3250:	neg	x0, x0
    3254:	and	x20, x1, x0
    3258:	mov	w2, #0x0                   	// #0
    325c:	mov	x0, x20
    3260:	adrp	x27, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3264:	add	x1, x27, #0x0
    3268:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    326c:	ldr	x1, [sp, #272]
    3270:	mov	x23, x0
    3274:	ldr	x2, [sp, #288]
    3278:	lsl	x2, x2, #3
    327c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    3280:	ldp	x0, x1, [sp, #272]
    3284:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    3288:	stp	x23, x20, [sp, #272]
    328c:	ldr	x0, [sp, #288]
    3290:	cmp	x21, x0
    3294:	b.ls	2cec <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x4c>  // b.plast
    3298:	cmp	x21, x20, lsr #3
    329c:	b.hi	34ac <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x80c>  // b.pmore
    32a0:	sub	x2, x21, x0
    32a4:	mov	w1, #0x0                   	// #0
    32a8:	add	x0, x23, x0, lsl #3
    32ac:	lsl	x2, x2, #3
    32b0:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    32b4:	b	2cec <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x4c>
    32b8:	adrp	x24, 0 <_ZN11__sanitizer14PageSizeCachedE>
    32bc:	lsl	x21, x0, #3
    32c0:	ldr	x20, [x24]
    32c4:	ldr	x0, [x20]
    32c8:	cbz	x0, 35ec <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x94c>
    32cc:	sub	x1, x0, #0x1
    32d0:	tst	x1, x0
    32d4:	b.ne	35f8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x958>  // b.any
    32d8:	add	x1, x21, x1
    32dc:	neg	x0, x0
    32e0:	and	x20, x1, x0
    32e4:	mov	w2, #0x0                   	// #0
    32e8:	mov	x0, x20
    32ec:	adrp	x27, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    32f0:	add	x1, x27, #0x0
    32f4:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    32f8:	mov	x2, #0x0                   	// #0
    32fc:	mov	x1, #0x0                   	// #0
    3300:	mov	x26, x0
    3304:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    3308:	mov	x0, #0x0                   	// #0
    330c:	mov	x1, #0x0                   	// #0
    3310:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    3314:	ldr	x0, [sp, #112]
    3318:	cmp	x0, x20, lsr #3
    331c:	b.hi	3664 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x9c4>  // b.pmore
    3320:	mov	x2, x21
    3324:	mov	x0, x26
    3328:	mov	w1, #0x0                   	// #0
    332c:	str	x20, [sp, #112]
    3330:	str	x26, [sp, #128]
    3334:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
    3338:	b	2dd0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x130>
    333c:	ldr	x2, [sp, #168]
    3340:	mov	x3, x0
    3344:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3348:	add	x0, x0, #0x0
    334c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3350:	ldr	x1, [sp, #160]
    3354:	ldr	x0, [sp, #272]
    3358:	cmp	x0, x1
    335c:	b.cc	336c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6cc>  // b.lo, b.ul, b.last
    3360:	ldr	x1, [sp, #168]
    3364:	cmp	x0, x1
    3368:	b.cc	2ef0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x250>  // b.lo, b.ul, b.last
    336c:	add	x0, x20, #0x0
    3370:	ldrb	w0, [x0, #21]
    3374:	cbz	w0, 3384 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6e4>
    3378:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    337c:	add	x0, x0, #0x0
    3380:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3384:	adrp	x1, 0 <_ZN11__sanitizer14PageSizeCachedE>
    3388:	ldr	x28, [x1]
    338c:	ldr	x27, [x28]
    3390:	cbz	x27, 354c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x8ac>
    3394:	ldp	x0, x1, [sp, #160]
    3398:	mov	w28, #0x0                   	// #0
    339c:	cmp	x0, x1
    33a0:	b.cc	33c0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x720>  // b.lo, b.ul, b.last
    33a4:	b	33d8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x738>
    33a8:	ldr	x1, [sp, #168]
    33ac:	add	x0, x27, x0
    33b0:	str	x0, [sp, #160]
    33b4:	add	w28, w28, #0x1
    33b8:	cmp	x1, x0
    33bc:	b.ls	33d8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x738>  // b.plast
    33c0:	mov	x1, #0x1                   	// #1
    33c4:	bl	0 <_ZN11__sanitizer23IsAccessibleMemoryRangeEmm>
    33c8:	tst	w0, #0xff
    33cc:	ldr	x0, [sp, #160]
    33d0:	b.eq	33a8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x708>  // b.none
    33d4:	ldr	x1, [sp, #168]
    33d8:	add	x2, x20, #0x0
    33dc:	ldrb	w2, [x2, #21]
    33e0:	cbz	w2, 2ef4 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x254>
    33e4:	mov	x3, x1
    33e8:	mov	x2, x0
    33ec:	mov	w1, w28
    33f0:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    33f4:	add	x0, x0, #0x0
    33f8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    33fc:	ldp	x0, x1, [sp, #160]
    3400:	b	2ef4 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x254>
    3404:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    3408:	str	x0, [x20]
    340c:	b	3240 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x5a0>
    3410:	mov	x1, x21
    3414:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3418:	add	x24, x24, #0x1
    341c:	add	x0, x0, #0x0
    3420:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3424:	b	2f8c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2ec>
    3428:	add	x0, x20, #0x0
    342c:	ldrb	w0, [x0, #21]
    3430:	cbz	w0, 2f88 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2e8>
    3434:	mov	x1, x21
    3438:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    343c:	add	x24, x24, #0x1
    3440:	add	x0, x0, #0x0
    3444:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3448:	b	2f8c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2ec>
    344c:	ldr	x0, [sp, #104]
    3450:	mov	x1, x21
    3454:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3458:	b	2e34 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x194>
    345c:	mov	x0, x3
    3460:	mov	x2, x23
    3464:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3468:	add	x3, x3, #0x0
    346c:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    3470:	b	2f68 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2c8>
    3474:	ldp	x0, x1, [sp, #128]
    3478:	mov	x2, x23
    347c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3480:	add	x3, x3, #0x0
    3484:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    3488:	b	2ec0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x220>
    348c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3490:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3494:	add	x2, x2, #0x0
    3498:	add	x0, x0, #0x0
    349c:	mov	x4, #0x0                   	// #0
    34a0:	mov	x3, #0x0                   	// #0
    34a4:	mov	w1, #0x22c                 	// #556
    34a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    34ac:	ldr	x24, [x24]
    34b0:	ldr	x0, [x24]
    34b4:	cbz	x0, 3658 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x9b8>
    34b8:	sub	x1, x0, #0x1
    34bc:	tst	x1, x0
    34c0:	b.ne	35f8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x958>  // b.any
    34c4:	add	x22, x22, x1
    34c8:	neg	x0, x0
    34cc:	and	x22, x22, x0
    34d0:	add	x1, x27, #0x0
    34d4:	mov	w2, #0x0                   	// #0
    34d8:	mov	x0, x22
    34dc:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    34e0:	mov	x23, x0
    34e4:	ldr	x1, [sp, #272]
    34e8:	ldr	x2, [sp, #288]
    34ec:	lsl	x2, x2, #3
    34f0:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    34f4:	ldp	x0, x1, [sp, #272]
    34f8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    34fc:	stp	x23, x22, [sp, #272]
    3500:	ldr	x0, [sp, #288]
    3504:	b	32a0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x600>
    3508:	add	x26, sp, #0xf0
    350c:	b	30c4 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x424>
    3510:	mov	x2, x1
    3514:	mov	x1, x0
    3518:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    351c:	add	x0, x0, #0x0
    3520:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3524:	ldp	x0, x1, [sp, #176]
    3528:	b	2f38 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x298>
    352c:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3530:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3534:	add	x2, x2, #0x0
    3538:	add	x0, x0, #0x0
    353c:	mov	x4, #0x0                   	// #0
    3540:	mov	x3, #0x0                   	// #0
    3544:	mov	w1, #0x22d                 	// #557
    3548:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    354c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    3550:	mov	x27, x0
    3554:	str	x0, [x28]
    3558:	b	3394 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x6f4>
    355c:	ldr	x5, [sp, #240]
    3560:	ldr	x6, [x5]
    3564:	cbz	x6, 2f88 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2e8>
    3568:	adrp	x27, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    356c:	add	x21, x20, #0x0
    3570:	add	x0, x27, #0x0
    3574:	mov	x27, #0x0                   	// #0
    3578:	str	x0, [sp, #152]
    357c:	b	35a8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x908>
    3580:	mov	x1, x3
    3584:	mov	x0, x28
    3588:	ldr	x3, [sp, #120]
    358c:	mov	x2, x23
    3590:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    3594:	ldr	x5, [sp, #240]
    3598:	ldr	x6, [x5]
    359c:	add	x27, x27, #0x1
    35a0:	cmp	x27, x6
    35a4:	b.cs	2f88 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2e8>  // b.hs, b.nlast
    35a8:	ldr	x1, [x5, #8]
    35ac:	lsl	x0, x27, #4
    35b0:	add	x3, x1, x0
    35b4:	ldr	x28, [x1, x0]
    35b8:	ldr	x3, [x3, #8]
    35bc:	add	x3, x28, x3
    35c0:	cmp	x28, x3
    35c4:	b.cs	359c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x8fc>  // b.hs, b.nlast
    35c8:	ldrb	w0, [x21, #21]
    35cc:	cbz	w0, 3580 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x8e0>
    35d0:	ldr	x0, [sp, #152]
    35d4:	mov	x2, x28
    35d8:	mov	x1, x27
    35dc:	str	x3, [sp, #144]
    35e0:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    35e4:	ldr	x3, [sp, #144]
    35e8:	b	3580 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x8e0>
    35ec:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    35f0:	str	x0, [x20]
    35f4:	b	32cc <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x62c>
    35f8:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    35fc:	add	x0, x0, #0x0
    3600:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    3604:	bl	0 <_ZN11__sanitizer3DieEv>
    3608:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    360c:	add	x0, x0, #0x0
    3610:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3614:	b	31d0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x530>
    3618:	mov	x1, x2
    361c:	adrp	x3, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    3620:	mov	x2, x23
    3624:	add	x3, x3, #0x0
    3628:	bl	350 <_ZN6__lsan20ScanRangeForPointersEmmPN11__sanitizer18InternalMmapVectorImEEPKcNS_8ChunkTagE.constprop.0>
    362c:	ldr	x1, [sp, #184]
    3630:	ldr	x3, [sp, #200]
    3634:	b	2f5c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x2bc>
    3638:	bl	0 <_ZN6__lsan9GetLinkerEv>
    363c:	cmp	x0, #0x0
    3640:	cset	w2, ne  // ne = any
    3644:	b	313c <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x49c>
    3648:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    364c:	add	x0, x0, #0x0
    3650:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    3654:	b	3164 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x4c4>
    3658:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    365c:	str	x0, [x24]
    3660:	b	34b8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x818>
    3664:	ldr	x24, [x24]
    3668:	ldr	x0, [x24]
    366c:	cbz	x0, 36e0 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0xa40>
    3670:	sub	x1, x0, #0x1
    3674:	tst	x1, x0
    3678:	b.ne	35f8 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x958>  // b.any
    367c:	add	x1, x21, x1
    3680:	neg	x0, x0
    3684:	and	x24, x1, x0
    3688:	mov	w2, #0x0                   	// #0
    368c:	add	x1, x27, #0x0
    3690:	mov	x0, x24
    3694:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
    3698:	mov	x27, x0
    369c:	mov	x2, #0x0                   	// #0
    36a0:	mov	x1, x26
    36a4:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    36a8:	mov	x1, x20
    36ac:	mov	x0, x26
    36b0:	mov	x20, x24
    36b4:	mov	x26, x27
    36b8:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    36bc:	b	3320 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x680>
    36c0:	adrp	x2, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    36c4:	adrp	x0, 0 <_ZN6__lsanL11ResetTagsCbEmPv>
    36c8:	add	x2, x2, #0x0
    36cc:	add	x0, x0, #0x0
    36d0:	mov	x4, #0x0                   	// #0
    36d4:	mov	x3, #0x0                   	// #0
    36d8:	mov	w1, #0x152                 	// #338
    36dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    36e0:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    36e4:	str	x0, [x24]
    36e8:	b	3670 <_ZN6__lsanL21CheckForLeaksCallbackERKN11__sanitizer20SuspendedThreadsListEPv+0x9d0>

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE5ParseES2_>:
   0:	mov	x2, x0
   4:	mov	w0, #0x1                   	// #1
   8:	ldr	x2, [x2, #8]
   c:	str	x1, [x2]
  10:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIiE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	w3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>:
   0:	stp	x19, x30, [sp, #-16]!
   4:	adrp	x4, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
   8:	add	x4, x4, #0x0
   c:	ldr	x5, [x0, #8]
  10:	mov	x19, x2
  14:	adrp	x3, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  18:	add	x3, x3, #0x0
  1c:	mov	x0, x1
  20:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIbE6FormatEPcm>
  24:	ldrb	w5, [x5]
  28:	mov	x1, x19
  2c:	add	x2, x2, #0x0
  30:	cmp	w5, #0x0
  34:	csel	x3, x3, x4, ne  // ne = any
  38:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  3c:	cmp	x19, w0, sxtw
  40:	cset	w0, hi  // hi = pmore
  44:	ldp	x19, x30, [sp], #16
  48:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>:
   0:	mov	x3, x0
   4:	stp	x19, x30, [sp, #-16]!
   8:	mov	x19, x2
   c:	mov	x0, x1
  10:	mov	x1, x2
  14:	ldr	x3, [x3, #8]
  18:	adrp	x2, 0 <_ZN11__sanitizer11FlagHandlerIPKcE6FormatEPcm>
  1c:	add	x2, x2, #0x0
  20:	ldr	x3, [x3]
  24:	bl	0 <_ZN11__sanitizer17internal_snprintfEPcmPKcz>
  28:	cmp	x19, w0, sxtw
  2c:	cset	w0, hi  // hi = pmore
  30:	ldp	x19, x30, [sp], #16
  34:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIiE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	mov	x20, x0
   8:	mov	w2, #0xa                   	// #10
   c:	mov	x0, x1
  10:	mov	x19, x1
  14:	add	x1, sp, #0x28
  18:	str	x30, [sp, #16]
  1c:	bl	0 <_ZN11__sanitizer23internal_simple_strtollEPKcPS1_i>
  20:	ldr	x2, [x20, #8]
  24:	ldr	x1, [sp, #40]
  28:	str	w0, [x2]
  2c:	ldrb	w0, [x1]
  30:	cmp	w0, #0x0
  34:	cset	w20, eq  // eq = none
  38:	cbnz	w0, 4c <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc+0x4c>
  3c:	mov	w0, w20
  40:	ldr	x30, [sp, #16]
  44:	ldp	x19, x20, [sp], #48
  48:	ret
  4c:	mov	x1, x19
  50:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIiE5ParseEPKc>
  54:	add	x0, x0, #0x0
  58:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  5c:	mov	w0, w20
  60:	ldr	x30, [sp, #16]
  64:	ldp	x19, x20, [sp], #48
  68:	ret

Disassembly of section .text._ZN11__sanitizer11FlagHandlerIbE5ParseEPKc:

0000000000000000 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>:
   0:	mov	x2, x0
   4:	stp	x19, x20, [sp, #-32]!
   8:	mov	x19, x1
   c:	mov	x0, x19
  10:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  14:	add	x1, x1, #0x0
  18:	ldr	x20, [x2, #8]
  1c:	str	x30, [sp, #16]
  20:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  24:	cbnz	w0, 3c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x3c>
  28:	mov	w0, #0x1                   	// #1
  2c:	strb	wzr, [x20]
  30:	ldr	x30, [sp, #16]
  34:	ldp	x19, x20, [sp], #32
  38:	ret
  3c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  40:	mov	x0, x19
  44:	add	x1, x1, #0x0
  48:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  4c:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  50:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  54:	mov	x0, x19
  58:	add	x1, x1, #0x0
  5c:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  60:	cbz	w0, 28 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x28>
  64:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  68:	mov	x0, x19
  6c:	add	x1, x1, #0x0
  70:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  74:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  78:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  7c:	mov	x0, x19
  80:	add	x1, x1, #0x0
  84:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  88:	cbnz	w0, 9c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x9c>
  8c:	mov	w1, #0x1                   	// #1
  90:	mov	w0, #0x1                   	// #1
  94:	strb	w1, [x20]
  98:	b	30 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x30>
  9c:	adrp	x1, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  a0:	mov	x0, x19
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN11__sanitizer15internal_strcmpEPKcS1_>
  ac:	cbz	w0, 8c <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc+0x8c>
  b0:	mov	x1, x19
  b4:	adrp	x0, 0 <_ZN11__sanitizer11FlagHandlerIbE5ParseEPKc>
  b8:	add	x0, x0, #0x0
  bc:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
  c0:	mov	w0, #0x0                   	// #0
  c4:	ldr	x30, [sp, #16]
  c8:	ldp	x19, x20, [sp], #32
  cc:	ret

Disassembly of section .text._ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_:

0000000000000000 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_>:
   0:	cmp	x1, #0x1
   4:	mov	x4, #0x1                   	// #1
   8:	b.ls	fc <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0xfc>  // b.plast
   c:	nop
  10:	ldr	x5, [x0, x4, lsl #3]
  14:	mov	x2, x4
  18:	sub	x3, x2, #0x1
  1c:	mov	x6, x2
  20:	lsr	x2, x3, #1
  24:	ldr	x3, [x0, x2, lsl #3]
  28:	cmp	x3, x5
  2c:	b.cs	3c <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x3c>  // b.hs, b.nlast
  30:	str	x3, [x0, x6, lsl #3]
  34:	str	x5, [x0, x2, lsl #3]
  38:	cbnz	x2, 18 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x18>
  3c:	add	x2, x4, #0x1
  40:	cmp	x1, x2
  44:	b.eq	94 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x94>  // b.none
  48:	mov	x4, x2
  4c:	b	10 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x10>
  50:	cmp	x1, x4
  54:	b.cs	8c <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x8c>  // b.hs, b.nlast
  58:	lsl	x5, x5, #4
  5c:	add	x7, x0, x5
  60:	ldr	x3, [x0, x2, lsl #3]
  64:	ldr	x5, [x0, x5]
  68:	cmp	x5, x3
  6c:	b.ls	8c <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x8c>  // b.plast
  70:	cmp	x1, x2
  74:	b.eq	8c <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x8c>  // b.none
  78:	ldr	x3, [x0, x2, lsl #3]
  7c:	str	x5, [x0, x2, lsl #3]
  80:	str	x3, [x7]
  84:	cmp	x1, x4
  88:	b.cc	f4 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0xf4>  // b.lo, b.ul, b.last
  8c:	subs	x4, x4, #0x1
  90:	b.eq	fc <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0xfc>  // b.none
  94:	ldr	x3, [x0, x4, lsl #3]
  98:	mov	x2, #0x0                   	// #0
  9c:	ldr	x1, [x0]
  a0:	str	x3, [x0]
  a4:	str	x1, [x0, x4, lsl #3]
  a8:	lsl	x1, x2, #1
  ac:	add	x5, x2, #0x1
  b0:	add	x3, x1, #0x1
  b4:	add	x1, x1, #0x2
  b8:	cmp	x3, x4
  bc:	b.cs	50 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  c0:	ldr	x6, [x0, x3, lsl #3]
  c4:	add	x8, x0, x3, lsl #3
  c8:	ldr	x7, [x0, x2, lsl #3]
  cc:	cmp	x7, x6
  d0:	b.cs	50 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  d4:	cmp	x1, x4
  d8:	b.cc	100 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x100>  // b.lo, b.ul, b.last
  dc:	cmp	x3, x2
  e0:	b.eq	8c <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x8c>  // b.none
  e4:	mov	x1, x3
  e8:	ldr	x5, [x0, x2, lsl #3]
  ec:	str	x6, [x0, x2, lsl #3]
  f0:	str	x5, [x0, x3, lsl #3]
  f4:	mov	x2, x1
  f8:	b	a8 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0xa8>
  fc:	ret
 100:	lsl	x9, x5, #4
 104:	add	x7, x0, x5, lsl #4
 108:	ldr	x5, [x0, x9]
 10c:	cmp	x6, x5
 110:	b.cc	70 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x70>  // b.lo, b.ul, b.last
 114:	mov	x5, x6
 118:	mov	x7, x8
 11c:	mov	x1, x3
 120:	b	70 <_ZN11__sanitizer4SortIyNS_11CompareLessIyEEEEvPT_mT0_+0x70>

lsan_common_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x21, x0
   c:	ldrh	w0, [x0, #24]
  10:	str	x30, [sp, #48]
  14:	cbz	w0, 88 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv+0x88>
  18:	mov	x22, #0x1                   	// #1
  1c:	stp	x23, x24, [sp, #32]
  20:	mov	x23, #0xffffffff            	// #4294967295
  24:	mov	x24, x2
  28:	mov	x19, #0x0                   	// #0
  2c:	mov	x20, #0x0                   	// #0
  30:	movk	x23, #0x2, lsl #32
  34:	movk	x22, #0x2, lsl #32
  38:	ldr	x1, [x21, #16]
  3c:	add	x20, x20, #0x1
  40:	add	x3, x1, x19
  44:	ldr	x1, [x1, x19]
  48:	add	x19, x19, #0x38
  4c:	and	x1, x1, x23
  50:	cmp	x1, x22
  54:	b.ne	7c <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv+0x7c>  // b.any
  58:	ldr	x1, [x3, #40]
  5c:	mov	x2, x24
  60:	cbz	x1, 7c <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv+0x7c>
  64:	ldr	x0, [x21]
  68:	ldr	x3, [x3, #16]
  6c:	add	x0, x0, x3
  70:	add	x1, x1, x0
  74:	bl	0 <_ZN6__lsan15ScanGlobalRangeEmmPN11__sanitizer18InternalMmapVectorImEE>
  78:	ldrh	w0, [x21, #24]
  7c:	cmp	x20, w0, uxth
  80:	b.cc	38 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv+0x38>  // b.lo, b.ul, b.last
  84:	ldp	x23, x24, [sp, #32]
  88:	mov	w0, #0x0                   	// #0
  8c:	ldp	x21, x22, [sp, #16]
  90:	ldr	x30, [sp, #48]
  94:	ldp	x19, x20, [sp], #64
  98:	ret
  9c:	nop

00000000000000a0 <_ZN6__lsanL32LockStuffAndStopTheWorldCallbackEP12dl_phdr_infomPv>:
  a0:	stp	x19, x30, [sp, #-16]!
  a4:	mov	x19, x2
  a8:	bl	0 <_ZN6__lsan18LockThreadRegistryEv>
  ac:	bl	0 <_ZN6__lsan13LockAllocatorEv>
  b0:	ldp	x0, x1, [x19]
  b4:	bl	0 <_ZN11__sanitizer12StopTheWorldEPFvRKNS_20SuspendedThreadsListEPvES3_>
  b8:	bl	0 <_ZN6__lsan15UnlockAllocatorEv>
  bc:	bl	0 <_ZN6__lsan20UnlockThreadRegistryEv>
  c0:	mov	w0, #0x1                   	// #1
  c4:	ldp	x19, x30, [sp], #16
  c8:	ret
  cc:	nop

00000000000000d0 <_ZN6__lsan20DisabledInThisThreadEv>:
  d0:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
  d4:	ldr	x0, [x0]
  d8:	mrs	x1, tpidr_el0
  dc:	ldr	w0, [x1, x0]
  e0:	cmp	w0, #0x0
  e4:	cset	w0, gt
  e8:	ret
  ec:	nop

00000000000000f0 <_ZN6__lsan19DisableInThisThreadEv>:
  f0:	adrp	x1, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
  f4:	ldr	x1, [x1]
  f8:	mrs	x2, tpidr_el0
  fc:	ldr	w0, [x2, x1]
 100:	add	w0, w0, #0x1
 104:	str	w0, [x2, x1]
 108:	ret
 10c:	nop

0000000000000110 <_ZN6__lsan18EnableInThisThreadEv>:
 110:	stp	x19, x20, [sp, #-32]!
 114:	mrs	x20, tpidr_el0
 118:	adrp	x19, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 11c:	ldr	x19, [x19]
 120:	ldr	w0, [x20, x19]
 124:	str	x30, [sp, #16]
 128:	cbz	w0, 140 <_ZN6__lsan18EnableInThisThreadEv+0x30>
 12c:	sub	w0, w0, #0x1
 130:	str	w0, [x20, x19]
 134:	ldr	x30, [sp, #16]
 138:	ldp	x19, x20, [sp], #32
 13c:	ret
 140:	bl	0 <_ZN6__lsan23DisableCounterUnderflowEv>
 144:	ldr	w0, [x20, x19]
 148:	ldr	x30, [sp, #16]
 14c:	sub	w0, w0, #0x1
 150:	str	w0, [x20, x19]
 154:	ldp	x19, x20, [sp], #32
 158:	ret
 15c:	nop

0000000000000160 <_ZN6__lsan33InitializePlatformSpecificModulesEv>:
 160:	stp	x19, x20, [sp, #-192]!
 164:	add	x0, sp, #0x50
 168:	stp	x23, x24, [sp, #32]
 16c:	str	x30, [sp, #64]
 170:	strb	wzr, [sp, #104]
 174:	bl	0 <_ZN11__sanitizer13ListOfModules4initEv>
 178:	ldr	x23, [sp, #96]
 17c:	ldr	x19, [sp, #80]
 180:	add	x23, x23, x23, lsl #3
 184:	add	x23, x19, x23, lsl #3
 188:	cmp	x23, x19
 18c:	b.eq	2a4 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x144>  // b.none
 190:	stp	x21, x22, [sp, #16]
 194:	add	x21, sp, #0x70
 198:	stp	x25, x26, [sp, #48]
 19c:	adrp	x26, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 1a0:	add	x24, x26, #0x0
 1a4:	add	x20, x24, #0x40
 1a8:	add	x25, x21, #0x1c
 1ac:	nop
 1b0:	ldr	x22, [x19, #8]
 1b4:	mov	x0, #0x7                   	// #7
 1b8:	bl	0 <getauxval>
 1bc:	mov	x3, x0
 1c0:	cmp	x22, x3
 1c4:	mov	x0, x25
 1c8:	mov	x2, #0x10                  	// #16
 1cc:	mov	w1, #0x0                   	// #0
 1d0:	b.ne	24c <_ZN6__lsan33InitializePlatformSpecificModulesEv+0xec>  // b.any
 1d4:	ldr	x3, [x24]
 1d8:	cbnz	x3, 2d0 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x170>
 1dc:	ldp	x4, x5, [x19]
 1e0:	stp	x4, x5, [x20]
 1e4:	ldp	x4, x5, [x19, #16]
 1e8:	stp	x4, x5, [x20, #16]
 1ec:	ldp	x4, x5, [x19, #32]
 1f0:	stp	x4, x5, [x20, #32]
 1f4:	ldp	x4, x5, [x19, #48]
 1f8:	stp	x4, x5, [x20, #48]
 1fc:	ldr	x3, [x19, #64]
 200:	str	x3, [x20, #64]
 204:	str	x20, [x24]
 208:	str	xzr, [sp, #112]
 20c:	stp	xzr, xzr, [sp, #120]
 210:	str	wzr, [sp, #136]
 214:	strb	wzr, [sp, #156]
 218:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
 21c:	str	xzr, [sp, #160]
 220:	stp	xzr, xzr, [sp, #168]
 224:	ldp	x0, x1, [x21]
 228:	stp	x0, x1, [x19]
 22c:	ldp	x0, x1, [x21, #16]
 230:	stp	x0, x1, [x19, #16]
 234:	ldp	x0, x1, [x21, #32]
 238:	stp	x0, x1, [x19, #32]
 23c:	ldp	x0, x1, [x21, #48]
 240:	stp	x0, x1, [x19, #48]
 244:	ldr	x0, [x21, #64]
 248:	str	x0, [x19, #64]
 24c:	add	x19, x19, #0x48
 250:	cmp	x23, x19
 254:	b.ne	1b0 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x50>  // b.any
 258:	ldr	x0, [x26]
 25c:	ldp	x21, x22, [sp, #16]
 260:	ldp	x25, x26, [sp, #48]
 264:	cbz	x0, 2b0 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x150>
 268:	ldr	x20, [sp, #96]
 26c:	ldr	x19, [sp, #80]
 270:	add	x20, x20, x20, lsl #3
 274:	add	x20, x19, x20, lsl #3
 278:	cmp	x19, x20
 27c:	b.eq	294 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x134>  // b.none
 280:	mov	x0, x19
 284:	add	x19, x19, #0x48
 288:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 28c:	cmp	x20, x19
 290:	b.ne	280 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x120>  // b.any
 294:	ldp	x23, x24, [sp, #32]
 298:	ldr	x30, [sp, #64]
 29c:	ldp	x19, x20, [sp], #192
 2a0:	ret
 2a4:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 2a8:	ldr	x0, [x0]
 2ac:	cbnz	x0, 294 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x134>
 2b0:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 2b4:	ldr	x0, [x0]
 2b8:	ldr	w0, [x0]
 2bc:	cbz	w0, 268 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x108>
 2c0:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 2c4:	add	x0, x0, #0x0
 2c8:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 2cc:	b	268 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x108>
 2d0:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
 2d4:	ldr	x0, [x0]
 2d8:	ldr	w0, [x0]
 2dc:	cbnz	w0, 334 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x1d4>
 2e0:	mov	x0, x3
 2e4:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 2e8:	ldr	x20, [sp, #96]
 2ec:	str	xzr, [x26]
 2f0:	ldr	x0, [sp, #80]
 2f4:	add	x20, x20, x20, lsl #3
 2f8:	mov	x19, x0
 2fc:	add	x20, x0, x20, lsl #3
 300:	cmp	x0, x20
 304:	b.eq	31c <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x1bc>  // b.none
 308:	mov	x0, x19
 30c:	add	x19, x19, #0x48
 310:	bl	0 <_ZN11__sanitizer12LoadedModule5clearEv>
 314:	cmp	x20, x19
 318:	b.ne	308 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x1a8>  // b.any
 31c:	ldp	x21, x22, [sp, #16]
 320:	ldp	x23, x24, [sp, #32]
 324:	ldp	x25, x26, [sp, #48]
 328:	ldr	x30, [sp, #64]
 32c:	ldp	x19, x20, [sp], #192
 330:	ret
 334:	adrp	x1, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 338:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 33c:	add	x1, x1, #0x0
 340:	add	x0, x0, #0x0
 344:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 348:	ldr	x3, [x24]
 34c:	b	2e0 <_ZN6__lsan33InitializePlatformSpecificModulesEv+0x180>

0000000000000350 <_ZN6__lsan20ProcessGlobalRegionsEPN11__sanitizer18InternalMmapVectorImEE>:
 350:	adrp	x2, 0 <_ZN6__lsan10lsan_flagsE>
 354:	ldr	x2, [x2]
 358:	ldrb	w1, [x2, #12]
 35c:	cbnz	w1, 364 <_ZN6__lsan20ProcessGlobalRegionsEPN11__sanitizer18InternalMmapVectorImEE+0x14>
 360:	ret
 364:	mov	x1, x0
 368:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 36c:	add	x0, x0, #0x0
 370:	b	0 <dl_iterate_phdr>
 374:	nop

0000000000000378 <_ZN6__lsan9GetLinkerEv>:
 378:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 37c:	ldr	x0, [x0]
 380:	ret
 384:	nop

0000000000000388 <_ZN6__lsan34ProcessPlatformSpecificAllocationsEPN11__sanitizer18InternalMmapVectorImEE>:
 388:	ret
 38c:	nop

0000000000000390 <_ZN6__lsan11HandleLeaksEv>:
 390:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 394:	ldr	x0, [x0]
 398:	ldr	w0, [x0, #224]
 39c:	cbnz	w0, 3a4 <_ZN6__lsan11HandleLeaksEv+0x14>
 3a0:	ret
 3a4:	str	x30, [sp, #-16]!
 3a8:	bl	0 <_ZN11__sanitizer3DieEv>
 3ac:	nop

00000000000003b0 <_ZN6__lsan24LockStuffAndStopTheWorldEPFvRKN11__sanitizer20SuspendedThreadsListEPvES4_>:
 3b0:	mov	x3, x0
 3b4:	mov	x2, x1
 3b8:	str	x30, [sp, #-32]!
 3bc:	adrp	x0, 0 <_ZN6__lsanL28ProcessGlobalRegionsCallbackEP12dl_phdr_infomPv>
 3c0:	add	x0, x0, #0x0
 3c4:	add	x1, sp, #0x10
 3c8:	stp	x3, x2, [sp, #16]
 3cc:	bl	0 <dl_iterate_phdr>
 3d0:	ldr	x30, [sp], #32
 3d4:	ret

lsan_common_mac.cpp.o:     file format elf64-littleaarch64


lsan.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL18LsanOnDeadlySignaliPvS_>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x19, x1
   8:	mov	x20, x2
   c:	str	x30, [sp, #16]
  10:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
  14:	mov	x1, x20
  18:	mov	w2, w0
  1c:	mov	x0, x19
  20:	adrp	x3, 0 <_ZL18LsanOnDeadlySignaliPvS_>
  24:	ldr	x30, [sp, #16]
  28:	add	x3, x3, #0x0
  2c:	ldp	x19, x20, [sp], #32
  30:	mov	x4, #0x0                   	// #0
  34:	b	0 <_ZN11__sanitizer18HandleDeadlySignalEPvS0_jPFvRKNS_13SignalContextEPKvPNS_18BufferedStackTraceEES5_>

0000000000000038 <_ZL15InitializeFlagsv>:
  38:	stp	x19, x20, [sp, #-304]!
  3c:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
  40:	stp	x21, x22, [sp, #16]
  44:	add	x19, sp, #0x38
  48:	adrp	x22, 0 <_ZN6__lsan10lsan_flagsE>
  4c:	ldr	x21, [x20]
  50:	str	x30, [sp, #32]
  54:	mov	x0, x21
  58:	bl	0 <_ZN11__sanitizer11CommonFlags11SetDefaultsEv>
  5c:	mov	x1, x21
  60:	mov	x0, x19
  64:	bl	0 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>
  68:	adrp	x0, 0 <_ZL18LsanOnDeadlySignaliPvS_>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZN11__sanitizer6GetEnvEPKc>
  74:	mov	x5, x0
  78:	mov	w4, #0x1e                  	// #30
  7c:	mov	w2, #0x1                   	// #1
  80:	mov	w3, #0x17                  	// #23
  84:	mov	x1, x19
  88:	mov	x0, x21
  8c:	str	x5, [sp, #64]
  90:	str	w4, [sp, #92]
  94:	strb	w2, [sp, #113]
  98:	strb	w2, [sp, #177]
  9c:	str	w3, [sp, #280]
  a0:	bl	0 <_ZN11__sanitizer11CommonFlags8CopyFromERKS0_>
  a4:	ldr	x22, [x22]
  a8:	mov	x0, x22
  ac:	bl	0 <_ZN6__lsan5Flags11SetDefaultsEv>
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN11__sanitizer10FlagParserC1Ev>
  b8:	mov	x1, x22
  bc:	mov	x0, x19
  c0:	bl	0 <_ZN6__lsan17RegisterLsanFlagsEPN11__sanitizer10FlagParserEPNS_5FlagsE>
  c4:	mov	x1, x21
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN11__sanitizer19RegisterCommonFlagsEPNS_10FlagParserEPNS_11CommonFlagsE>
  d0:	bl	0 <_ZN6__lsan27MaybeCallLsanDefaultOptionsEv>
  d4:	mov	x1, x0
  d8:	mov	x2, #0x0                   	// #0
  dc:	mov	x0, x19
  e0:	bl	0 <_ZN11__sanitizer10FlagParser11ParseStringEPKcS2_>
  e4:	mov	x0, x19
  e8:	adrp	x1, 0 <_ZL18LsanOnDeadlySignaliPvS_>
  ec:	add	x1, x1, #0x0
  f0:	bl	0 <_ZN11__sanitizer10FlagParser18ParseStringFromEnvEPKc>
  f4:	adrp	x0, 0 <_ZN11__sanitizer17current_verbosityE>
  f8:	ldr	w1, [x21, #52]
  fc:	ldr	x0, [x0]
 100:	str	w1, [x0]
 104:	ldr	w0, [x0]
 108:	cbnz	w0, 134 <_ZL15InitializeFlagsv+0xfc>
 10c:	ldr	x0, [x20]
 110:	ldrb	w0, [x0, #122]
 114:	cbnz	w0, 144 <_ZL15InitializeFlagsv+0x10c>
 118:	ldr	x20, [x20]
 11c:	ldr	x0, [x20, #40]
 120:	bl	0 <__sanitizer_set_report_path>
 124:	ldp	x21, x22, [sp, #16]
 128:	ldr	x30, [sp, #32]
 12c:	ldp	x19, x20, [sp], #304
 130:	ret
 134:	bl	0 <_ZN11__sanitizer23ReportUnrecognizedFlagsEv>
 138:	ldr	x0, [x20]
 13c:	ldrb	w0, [x0, #122]
 140:	cbz	w0, 118 <_ZL15InitializeFlagsv+0xe0>
 144:	mov	x0, x19
 148:	bl	0 <_ZN11__sanitizer10FlagParser21PrintFlagDescriptionsEv>
 14c:	ldr	x20, [x20]
 150:	ldr	x0, [x20, #40]
 154:	bl	0 <__sanitizer_set_report_path>
 158:	ldp	x21, x22, [sp, #16]
 15c:	ldr	x30, [sp, #32]
 160:	ldp	x19, x20, [sp], #304
 164:	ret

0000000000000168 <_ZL13OnStackUnwindRKN11__sanitizer13SignalContextEPKvPNS_18BufferedStackTraceE>:
 168:	stp	x19, x20, [sp, #-48]!
 16c:	mov	x19, x0
 170:	mov	x20, x2
 174:	ldr	x0, [x0, #24]
 178:	stp	x21, x22, [sp, #16]
 17c:	str	x30, [sp, #32]
 180:	bl	0 <_ZN11__sanitizer10StackTrace20GetNextInstructionPcEm>
 184:	mov	x21, x0
 188:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 18c:	ldr	x22, [x19, #40]
 190:	ldr	x1, [x1]
 194:	ldr	x4, [x19, #8]
 198:	str	x22, [x20, #2064]
 19c:	ldrb	w0, [x1, #33]
 1a0:	cbnz	w0, 1d0 <_ZL13OnStackUnwindRKN11__sanitizer13SignalContextEPKvPNS_18BufferedStackTraceE+0x68>
 1a4:	mov	x2, x21
 1a8:	mov	x0, x20
 1ac:	ldp	x21, x22, [sp, #16]
 1b0:	mov	w7, #0x0                   	// #0
 1b4:	ldr	x30, [sp, #32]
 1b8:	mov	x6, #0x0                   	// #0
 1bc:	ldp	x19, x20, [sp], #48
 1c0:	mov	x5, #0x0                   	// #0
 1c4:	mov	x3, #0x0                   	// #0
 1c8:	mov	w1, #0x100                 	// #256
 1cc:	b	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 1d0:	bl	0 <_ZN6__lsan20CurrentThreadContextEv>
 1d4:	cbz	x0, 204 <_ZL13OnStackUnwindRKN11__sanitizer13SignalContextEPKvPNS_18BufferedStackTraceE+0x9c>
 1d8:	ldp	x6, x5, [x0, #144]
 1dc:	mov	x3, x22
 1e0:	mov	x2, x21
 1e4:	mov	x0, x20
 1e8:	ldp	x21, x22, [sp, #16]
 1ec:	mov	w7, #0x1                   	// #1
 1f0:	ldr	x30, [sp, #32]
 1f4:	mov	x4, #0x0                   	// #0
 1f8:	ldp	x19, x20, [sp], #48
 1fc:	mov	w1, #0x100                 	// #256
 200:	b	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 204:	mov	x6, #0x0                   	// #0
 208:	mov	x5, #0x0                   	// #0
 20c:	b	1dc <_ZL13OnStackUnwindRKN11__sanitizer13SignalContextEPKvPNS_18BufferedStackTraceE+0x74>

0000000000000210 <_ZN6__lsan14WordIsPoisonedEm>:
 210:	mov	w0, #0x0                   	// #0
 214:	ret

0000000000000218 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>:
 218:	stp	x19, x20, [sp, #-48]!
 21c:	tst	w4, #0xff
 220:	mov	x20, x1
 224:	str	x30, [sp, #32]
 228:	mov	w19, w5
 22c:	b.ne	258 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj+0x40>  // b.any
 230:	ldr	x30, [sp, #32]
 234:	mov	x4, x3
 238:	ldp	x19, x20, [sp], #48
 23c:	mov	x2, x1
 240:	mov	w7, #0x0                   	// #0
 244:	mov	w1, w5
 248:	mov	x6, #0x0                   	// #0
 24c:	mov	x5, #0x0                   	// #0
 250:	mov	x3, #0x0                   	// #0
 254:	b	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 258:	stp	x21, x22, [sp, #16]
 25c:	mov	x22, x2
 260:	mov	x21, x0
 264:	bl	0 <_ZN6__lsan20CurrentThreadContextEv>
 268:	cbz	x0, 298 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj+0x80>
 26c:	ldp	x6, x5, [x0, #144]
 270:	mov	x3, x22
 274:	mov	x2, x20
 278:	mov	w1, w19
 27c:	mov	x0, x21
 280:	mov	w7, #0x1                   	// #1
 284:	ldp	x21, x22, [sp, #16]
 288:	mov	x4, #0x0                   	// #0
 28c:	ldr	x30, [sp, #32]
 290:	ldp	x19, x20, [sp], #48
 294:	b	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 298:	mov	x6, #0x0                   	// #0
 29c:	mov	x5, #0x0                   	// #0
 2a0:	b	270 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj+0x58>
 2a4:	nop

00000000000002a8 <__lsan_init>:
 2a8:	stp	x19, x20, [sp, #-32]!
 2ac:	adrp	x19, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 2b0:	ldrb	w0, [x19]
 2b4:	str	x30, [sp, #16]
 2b8:	cbnz	w0, 3a0 <__lsan_init+0xf8>
 2bc:	add	x1, x19, #0x0
 2c0:	ldrb	w0, [x1, #1]
 2c4:	cbz	w0, 2d4 <__lsan_init+0x2c>
 2c8:	ldr	x30, [sp, #16]
 2cc:	ldp	x19, x20, [sp], #32
 2d0:	ret
 2d4:	adrp	x0, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 2d8:	adrp	x1, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 2dc:	add	x1, x1, #0x0
 2e0:	mov	w20, #0x1                   	// #1
 2e4:	ldr	x0, [x0]
 2e8:	strb	w20, [x19]
 2ec:	str	x1, [x0]
 2f0:	bl	0 <_ZN11__sanitizer15CacheBinaryNameEv>
 2f4:	bl	38 <_ZL15InitializeFlagsv>
 2f8:	bl	0 <_ZN6__lsan14InitCommonLsanEv>
 2fc:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
 300:	bl	0 <_ZN6__lsan19ReplaceSystemMallocEv>
 304:	bl	0 <_ZN11__sanitizer11InitTlsSizeEv>
 308:	bl	0 <_ZN6__lsan22InitializeInterceptorsEv>
 30c:	bl	0 <_ZN6__lsan24InitializeThreadRegistryEv>
 310:	adrp	x0, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 314:	add	x0, x0, #0x0
 318:	bl	0 <_ZN11__sanitizer27InstallDeadlySignalHandlersEPFviPvS0_E>
 31c:	mov	w2, w20
 320:	mov	x1, #0x0                   	// #0
 324:	mov	w0, #0x0                   	// #0
 328:	bl	0 <_ZN6__lsan12ThreadCreateEjmb>
 32c:	mov	w3, w0
 330:	cbnz	w0, 3c0 <__lsan_init+0x118>
 334:	bl	0 <_ZN11__sanitizer6GetTidEv>
 338:	mov	x1, x0
 33c:	mov	w2, #0x0                   	// #0
 340:	mov	w0, #0x0                   	// #0
 344:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 348:	bl	0 <_ZN6__lsan11ThreadStartEjyN11__sanitizer10ThreadTypeE>
 34c:	mov	w0, #0x0                   	// #0
 350:	bl	0 <_ZN6__lsan16SetCurrentThreadEj>
 354:	ldr	x0, [x20]
 358:	ldrb	w1, [x0, #57]
 35c:	cbz	w1, 374 <__lsan_init+0xcc>
 360:	ldrb	w0, [x0, #58]
 364:	cbz	w0, 374 <__lsan_init+0xcc>
 368:	adrp	x0, 0 <_ZN6__lsan11DoLeakCheckEv>
 36c:	ldr	x0, [x0]
 370:	bl	0 <_ZN11__sanitizer6AtexitEPFvvE>
 374:	ldr	x20, [x20]
 378:	ldrb	w0, [x20, #169]
 37c:	ldr	x1, [x20, #176]
 380:	bl	0 <_ZN11__sanitizer18InitializeCoverageEbPKc>
 384:	strb	wzr, [x19]
 388:	add	x0, x19, #0x0
 38c:	mov	w1, #0x1                   	// #1
 390:	ldr	x30, [sp, #16]
 394:	strb	w1, [x0, #1]
 398:	ldp	x19, x20, [sp], #32
 39c:	ret
 3a0:	adrp	x2, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 3a4:	adrp	x0, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 3a8:	add	x2, x2, #0x0
 3ac:	add	x0, x0, #0x0
 3b0:	mov	x4, #0x0                   	// #0
 3b4:	mov	x3, #0x0                   	// #0
 3b8:	mov	w1, #0x66                  	// #102
 3bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3c0:	adrp	x2, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 3c4:	adrp	x0, 0 <_ZL18LsanOnDeadlySignaliPvS_>
 3c8:	add	x2, x2, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	x4, #0x0                   	// #0
 3d4:	mov	w1, #0x76                  	// #118
 3d8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3dc:	nop

00000000000003e0 <__sanitizer_print_stack_trace>:
 3e0:	sub	sp, sp, #0x850
 3e4:	stp	x29, x30, [sp]
 3e8:	mov	x29, sp
 3ec:	stp	x19, x20, [sp, #16]
 3f0:	add	x19, x29, #0x38
 3f4:	add	x0, x19, #0x10
 3f8:	str	x0, [x29, #56]
 3fc:	str	xzr, [x29, #64]
 400:	str	xzr, [x29, #2120]
 404:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
 408:	adrp	x1, 0 <_ZN11__sanitizer21common_flags_dont_useE>
 40c:	mov	x20, x0
 410:	str	x29, [x29, #2120]
 414:	ldr	x1, [x1]
 418:	ldrb	w0, [x1, #33]
 41c:	cbnz	w0, 45c <__sanitizer_print_stack_trace+0x7c>
 420:	mov	x2, x20
 424:	mov	w7, #0x0                   	// #0
 428:	mov	x6, #0x0                   	// #0
 42c:	mov	x5, #0x0                   	// #0
 430:	mov	x4, #0x0                   	// #0
 434:	mov	x3, #0x0                   	// #0
 438:	mov	w1, #0x100                 	// #256
 43c:	mov	x0, x19
 440:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 444:	mov	x0, x19
 448:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 44c:	ldp	x29, x30, [sp]
 450:	ldp	x19, x20, [sp, #16]
 454:	add	sp, sp, #0x850
 458:	ret
 45c:	str	x21, [x29, #32]
 460:	mov	x21, x29
 464:	bl	0 <_ZN6__lsan20CurrentThreadContextEv>
 468:	cbz	x0, 4a8 <__sanitizer_print_stack_trace+0xc8>
 46c:	ldp	x6, x5, [x0, #144]
 470:	mov	x3, x21
 474:	mov	x2, x20
 478:	mov	w7, #0x1                   	// #1
 47c:	mov	x4, #0x0                   	// #0
 480:	mov	w1, #0x100                 	// #256
 484:	mov	x0, x19
 488:	bl	0 <_ZN11__sanitizer18BufferedStackTrace6UnwindEjmmPvmmb>
 48c:	mov	x0, x19
 490:	ldr	x21, [x29, #32]
 494:	bl	0 <_ZNK11__sanitizer10StackTrace5PrintEv>
 498:	ldp	x29, x30, [sp]
 49c:	ldp	x19, x20, [sp, #16]
 4a0:	add	sp, sp, #0x850
 4a4:	ret
 4a8:	mov	x6, #0x0                   	// #0
 4ac:	mov	x5, #0x0                   	// #0
 4b0:	b	470 <__sanitizer_print_stack_trace+0x90>

lsan_allocator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__lsan19InitializeAllocatorEv>:
       0:	stp	x19, x20, [sp, #-48]!
       4:	adrp	x20, 0 <_ZN11__sanitizer21common_flags_dont_useE>
       8:	adrp	x19, 0 <_ZN6__lsan19InitializeAllocatorEv>
       c:	ldr	x0, [x20]
      10:	stp	x21, x30, [sp, #16]
      14:	ldrb	w0, [x0, #59]
      18:	bl	0 <_ZN11__sanitizer25SetAllocatorMayReturnNullEb>
      1c:	add	x0, x19, #0x0
      20:	adrp	x3, 0 <_ZN6__lsan19InitializeAllocatorEv>
      24:	add	x21, x0, #0x80, lsl #12
      28:	add	x3, x3, #0x0
      2c:	mov	x2, #0x80000               	// #524288
      30:	mov	w1, #0x0                   	// #0
      34:	str	x3, [x21, #4144]
      38:	str	x3, [x21, #4152]
      3c:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      40:	strb	wzr, [x21]
      44:	adrp	x21, 0 <_ZN11__sanitizer14PageSizeCachedE>
      48:	mov	x2, #0xd80                 	// #3456
      4c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
      50:	mov	w1, #0x0                   	// #0
      54:	add	x0, x0, #0x0
      58:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      5c:	ldr	x21, [x21]
      60:	ldr	x2, [x21]
      64:	cbz	x2, d4 <_ZN6__lsan19InitializeAllocatorEv+0xd4>
      68:	adrp	x4, 0 <_ZN11__sanitizer22SecondaryAllocatorNameE>
      6c:	add	x19, x19, #0x0
      70:	add	x19, x19, #0x80, lsl #12
      74:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
      78:	ldr	x4, [x4]
      7c:	add	x0, x0, #0x0
      80:	str	x2, [x19, #3520]
      84:	mov	x3, #0x0                   	// #0
      88:	mov	x1, #0x800000              	// #8388608
      8c:	ldr	x2, [x4]
      90:	bl	0 <_ZN11__sanitizer20ReservedAddressRange4InitEmPKcm>
      94:	str	x0, [sp, #40]
      98:	cbz	x0, e4 <_ZN6__lsan19InitializeAllocatorEv+0xe4>
      9c:	ldr	x20, [x20]
      a0:	str	x0, [x19, #3528]
      a4:	mov	x0, #0x100000000           	// #4294967296
      a8:	ldr	x1, [x20, #152]
      ac:	cbz	x1, c0 <_ZN6__lsan19InitializeAllocatorEv+0xc0>
      b0:	lsl	x0, x1, #20
      b4:	mov	x1, #0x100000000           	// #4294967296
      b8:	cmp	x0, x1
      bc:	csel	x0, x0, x1, ls  // ls = plast
      c0:	adrp	x1, 0 <_ZN6__lsan19InitializeAllocatorEv>
      c4:	ldp	x21, x30, [sp, #16]
      c8:	str	x0, [x1]
      cc:	ldp	x19, x20, [sp], #48
      d0:	ret
      d4:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
      d8:	mov	x2, x0
      dc:	str	x0, [x21]
      e0:	b	68 <_ZN6__lsan19InitializeAllocatorEv+0x68>
      e4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
      e8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
      ec:	add	x2, x2, #0x0
      f0:	add	x0, x0, #0x0
      f4:	mov	x4, #0x0                   	// #0
      f8:	mov	x3, #0x0                   	// #0
      fc:	mov	w1, #0x25                  	// #37
     100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     104:	nop

0000000000000108 <_ZN6__lsan22GetAllocatorCacheRangeEPmS0_>:
     108:	stp	x19, x20, [sp, #-32]!
     10c:	mov	x20, x0
     110:	mov	x19, x1
     114:	str	x30, [sp, #16]
     118:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
     11c:	ldr	x30, [sp, #16]
     120:	str	x0, [x20]
     124:	mov	x1, #0xd820                	// #55328
     128:	add	x0, x0, x1
     12c:	str	x0, [x19]
     130:	ldp	x19, x20, [sp], #32
     134:	ret

0000000000000138 <_ZN6__lsan19GetMallocUsableSizeEPKv>:
     138:	stp	x19, x20, [sp, #-32]!
     13c:	mov	x19, x0
     140:	mov	x1, #0xffffffffffff        	// #281474976710655
     144:	str	x30, [sp, #16]
     148:	cmp	x19, x1
     14c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     150:	b.ls	1d4 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x9c>  // b.plast
     154:	add	x0, x0, #0x0
     158:	add	x20, x0, #0x80, lsl #12
     15c:	ldr	x2, [x20, #3520]
     160:	sub	x0, x2, #0x1
     164:	tst	x0, x19
     168:	b.ne	188 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x50>  // b.any
     16c:	sub	x19, x19, x2
     170:	add	x19, x19, #0x20
     174:	ldr	x0, [x19]
     178:	lsr	x0, x0, #10
     17c:	ldr	x30, [sp, #16]
     180:	ldp	x19, x20, [sp], #32
     184:	ret
     188:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     18c:	mov	x2, x19
     190:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     194:	add	x0, x0, #0x0
     198:	ldr	x1, [x1]
     19c:	ldr	x1, [x1]
     1a0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     1a4:	ldr	x2, [x20, #3520]
     1a8:	sub	x0, x2, #0x1
     1ac:	tst	x0, x19
     1b0:	b.eq	16c <_ZN6__lsan19GetMallocUsableSizeEPKv+0x34>  // b.none
     1b4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     1b8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     1bc:	add	x2, x2, #0x0
     1c0:	add	x0, x0, #0x0
     1c4:	mov	x4, #0x0                   	// #0
     1c8:	mov	x3, #0x0                   	// #0
     1cc:	mov	w1, #0xb1                  	// #177
     1d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     1d4:	lsr	x3, x19, #32
     1d8:	add	x2, x0, #0x0
     1dc:	ldr	x1, [x2, x3, lsl #3]
     1e0:	dmb	ish
     1e4:	cbz	x1, 154 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x1c>
     1e8:	lsr	w4, w19, #20
     1ec:	ldrb	w1, [x1, x4]
     1f0:	cbz	w1, 154 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x1c>
     1f4:	ldr	x0, [x2, x3, lsl #3]
     1f8:	dmb	ish
     1fc:	cbz	x0, 284 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x14c>
     200:	ldrb	w0, [x0, x4]
     204:	cbz	w0, 284 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x14c>
     208:	and	x0, x19, #0xfffffffffff00000
     20c:	ldr	x1, [x2, x3, lsl #3]
     210:	dmb	ish
     214:	cbz	x1, 27c <_ZN6__lsan19GetMallocUsableSizeEPKv+0x144>
     218:	ldrb	w3, [x1, x4]
     21c:	mov	w2, #0x200                 	// #512
     220:	cmp	w3, #0x35
     224:	and	x1, x3, #0xff
     228:	b.eq	254 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x11c>  // b.none
     22c:	lsl	w2, w3, #4
     230:	cmp	x1, #0x10
     234:	b.ls	254 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x11c>  // b.plast
     238:	sub	x1, x1, #0x10
     23c:	mov	x2, #0x100                 	// #256
     240:	and	x3, x1, #0x3
     244:	lsr	x1, x1, #2
     248:	lsl	x1, x2, x1
     24c:	lsr	x2, x1, #2
     250:	madd	w2, w2, w3, w1
     254:	sub	w19, w19, w0
     258:	add	x1, x0, #0x100, lsl #12
     25c:	mov	x0, #0x0                   	// #0
     260:	udiv	w19, w19, w2
     264:	add	x19, x19, #0x1
     268:	cmp	x1, x19, lsl #4
     26c:	lsl	x19, x19, #4
     270:	b.eq	17c <_ZN6__lsan19GetMallocUsableSizeEPKv+0x44>  // b.none
     274:	sub	x19, x1, x19
     278:	b	174 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x3c>
     27c:	mov	w2, #0x0                   	// #0
     280:	b	254 <_ZN6__lsan19GetMallocUsableSizeEPKv+0x11c>
     284:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     288:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     28c:	add	x2, x2, #0x0
     290:	add	x0, x0, #0x0
     294:	mov	x4, #0x0                   	// #0
     298:	mov	x3, #0x0                   	// #0
     29c:	mov	w1, #0x9c                  	// #156
     2a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     2a4:	nop

00000000000002a8 <_ZN6__lsan12lsan_mz_sizeEPKv>:
     2a8:	stp	x19, x20, [sp, #-32]!
     2ac:	mov	x19, x0
     2b0:	mov	x1, #0xffffffffffff        	// #281474976710655
     2b4:	str	x30, [sp, #16]
     2b8:	cmp	x19, x1
     2bc:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     2c0:	b.ls	344 <_ZN6__lsan12lsan_mz_sizeEPKv+0x9c>  // b.plast
     2c4:	add	x0, x0, #0x0
     2c8:	add	x20, x0, #0x80, lsl #12
     2cc:	ldr	x2, [x20, #3520]
     2d0:	sub	x0, x2, #0x1
     2d4:	tst	x0, x19
     2d8:	b.ne	2f8 <_ZN6__lsan12lsan_mz_sizeEPKv+0x50>  // b.any
     2dc:	sub	x19, x19, x2
     2e0:	add	x19, x19, #0x20
     2e4:	ldr	x0, [x19]
     2e8:	lsr	x0, x0, #10
     2ec:	ldr	x30, [sp, #16]
     2f0:	ldp	x19, x20, [sp], #32
     2f4:	ret
     2f8:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     2fc:	mov	x2, x19
     300:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     304:	add	x0, x0, #0x0
     308:	ldr	x1, [x1]
     30c:	ldr	x1, [x1]
     310:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     314:	ldr	x2, [x20, #3520]
     318:	sub	x0, x2, #0x1
     31c:	tst	x0, x19
     320:	b.eq	2dc <_ZN6__lsan12lsan_mz_sizeEPKv+0x34>  // b.none
     324:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     328:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     32c:	add	x2, x2, #0x0
     330:	add	x0, x0, #0x0
     334:	mov	x4, #0x0                   	// #0
     338:	mov	x3, #0x0                   	// #0
     33c:	mov	w1, #0xb1                  	// #177
     340:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     344:	lsr	x3, x19, #32
     348:	add	x2, x0, #0x0
     34c:	ldr	x1, [x2, x3, lsl #3]
     350:	dmb	ish
     354:	cbz	x1, 2c4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x1c>
     358:	lsr	w4, w19, #20
     35c:	ldrb	w1, [x1, x4]
     360:	cbz	w1, 2c4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x1c>
     364:	ldr	x0, [x2, x3, lsl #3]
     368:	dmb	ish
     36c:	cbz	x0, 3f4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x14c>
     370:	ldrb	w0, [x0, x4]
     374:	cbz	w0, 3f4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x14c>
     378:	and	x0, x19, #0xfffffffffff00000
     37c:	ldr	x1, [x2, x3, lsl #3]
     380:	dmb	ish
     384:	cbz	x1, 3ec <_ZN6__lsan12lsan_mz_sizeEPKv+0x144>
     388:	ldrb	w3, [x1, x4]
     38c:	mov	w2, #0x200                 	// #512
     390:	cmp	w3, #0x35
     394:	and	x1, x3, #0xff
     398:	b.eq	3c4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x11c>  // b.none
     39c:	lsl	w2, w3, #4
     3a0:	cmp	x1, #0x10
     3a4:	b.ls	3c4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x11c>  // b.plast
     3a8:	sub	x1, x1, #0x10
     3ac:	mov	x2, #0x100                 	// #256
     3b0:	and	x3, x1, #0x3
     3b4:	lsr	x1, x1, #2
     3b8:	lsl	x1, x2, x1
     3bc:	lsr	x2, x1, #2
     3c0:	madd	w2, w2, w3, w1
     3c4:	sub	w19, w19, w0
     3c8:	add	x1, x0, #0x100, lsl #12
     3cc:	mov	x0, #0x0                   	// #0
     3d0:	udiv	w19, w19, w2
     3d4:	add	x19, x19, #0x1
     3d8:	cmp	x1, x19, lsl #4
     3dc:	lsl	x19, x19, #4
     3e0:	b.eq	2ec <_ZN6__lsan12lsan_mz_sizeEPKv+0x44>  // b.none
     3e4:	sub	x19, x1, x19
     3e8:	b	2e4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x3c>
     3ec:	mov	w2, #0x0                   	// #0
     3f0:	b	3c4 <_ZN6__lsan12lsan_mz_sizeEPKv+0x11c>
     3f4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     3f8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     3fc:	add	x2, x2, #0x0
     400:	add	x0, x0, #0x0
     404:	mov	x4, #0x0                   	// #0
     408:	mov	x3, #0x0                   	// #0
     40c:	mov	w1, #0x9c                  	// #156
     410:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     414:	nop

0000000000000418 <_ZN6__lsan13LockAllocatorEv>:
     418:	stp	x19, x20, [sp, #-32]!
     41c:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
     420:	add	x20, x20, #0x0
     424:	add	x20, x20, #0x80, lsl #12
     428:	adrp	x19, 0 <_ZN6__lsan19InitializeAllocatorEv>
     42c:	add	x20, x20, #0xdc0
     430:	add	x19, x19, #0x0
     434:	stp	x21, x30, [sp, #16]
     438:	mov	w21, #0x1                   	// #1
     43c:	nop
     440:	ldxrb	w0, [x19]
     444:	stxrb	w1, w21, [x19]
     448:	cbnz	w1, 440 <_ZN6__lsan13LockAllocatorEv+0x28>
     44c:	dmb	ish
     450:	tst	w0, #0xff
     454:	b.eq	460 <_ZN6__lsan13LockAllocatorEv+0x48>  // b.none
     458:	mov	x0, x19
     45c:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
     460:	add	x19, x19, #0x40
     464:	cmp	x19, x20
     468:	b.ne	440 <_ZN6__lsan13LockAllocatorEv+0x28>  // b.any
     46c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     470:	add	x0, x0, #0x0
     474:	mov	w2, #0x1                   	// #1
     478:	ldxrb	w1, [x0]
     47c:	stxrb	w3, w2, [x0]
     480:	cbnz	w3, 478 <_ZN6__lsan13LockAllocatorEv+0x60>
     484:	dmb	ish
     488:	tst	w1, #0xff
     48c:	b.eq	49c <_ZN6__lsan13LockAllocatorEv+0x84>  // b.none
     490:	ldp	x21, x30, [sp, #16]
     494:	ldp	x19, x20, [sp], #32
     498:	b	0 <_ZN6__lsan19InitializeAllocatorEv>
     49c:	ldp	x21, x30, [sp, #16]
     4a0:	ldp	x19, x20, [sp], #32
     4a4:	ret

00000000000004a8 <_ZN6__lsan15UnlockAllocatorEv>:
     4a8:	dmb	ish
     4ac:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     4b0:	add	x0, x0, #0x0
     4b4:	add	x1, x0, #0x81, lsl #12
     4b8:	strb	wzr, [x1, #40]
     4bc:	mov	x1, #0x35                  	// #53
     4c0:	mov	x3, #0x2001                	// #8193
     4c4:	nop
     4c8:	dmb	ish
     4cc:	add	x2, x1, x3
     4d0:	lsl	x2, x2, #6
     4d4:	strb	wzr, [x0, x2]
     4d8:	sub	x1, x1, #0x1
     4dc:	cmn	x1, #0x1
     4e0:	b.ne	4c8 <_ZN6__lsan15UnlockAllocatorEv+0x20>  // b.any
     4e4:	ret

00000000000004e8 <_ZN6__lsan23GetAllocatorGlobalRangeEPmS0_>:
     4e8:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     4ec:	add	x2, x2, #0x0
     4f0:	add	x3, x2, #0x81, lsl #12
     4f4:	str	x2, [x0]
     4f8:	add	x3, x3, #0x80
     4fc:	str	x3, [x1]
     500:	ret
     504:	nop

0000000000000508 <_ZN6__lsan12GetUserBeginEm>:
     508:	ret
     50c:	nop

0000000000000510 <_ZN6__lsan12LsanMetadataC1Em>:
     510:	stp	x19, x20, [sp, #-32]!
     514:	mov	x19, x1
     518:	mov	x2, #0xffffffffffff        	// #281474976710655
     51c:	stp	x21, x30, [sp, #16]
     520:	cmp	x19, x2
     524:	mov	x21, x0
     528:	adrp	x1, 0 <_ZN6__lsan19InitializeAllocatorEv>
     52c:	b.ls	5ac <_ZN6__lsan12LsanMetadataC1Em+0x9c>  // b.plast
     530:	add	x1, x1, #0x0
     534:	add	x20, x1, #0x80, lsl #12
     538:	ldr	x2, [x20, #3520]
     53c:	sub	x0, x2, #0x1
     540:	tst	x0, x19
     544:	b.ne	560 <_ZN6__lsan12LsanMetadataC1Em+0x50>  // b.any
     548:	sub	x19, x19, x2
     54c:	add	x19, x19, #0x20
     550:	str	x19, [x21]
     554:	ldp	x21, x30, [sp, #16]
     558:	ldp	x19, x20, [sp], #32
     55c:	ret
     560:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     564:	mov	x2, x19
     568:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     56c:	add	x0, x0, #0x0
     570:	ldr	x1, [x1]
     574:	ldr	x1, [x1]
     578:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     57c:	ldr	x2, [x20, #3520]
     580:	sub	x0, x2, #0x1
     584:	tst	x0, x19
     588:	b.eq	548 <_ZN6__lsan12LsanMetadataC1Em+0x38>  // b.none
     58c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     590:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     594:	add	x2, x2, #0x0
     598:	add	x0, x0, #0x0
     59c:	mov	x4, #0x0                   	// #0
     5a0:	mov	x3, #0x0                   	// #0
     5a4:	mov	w1, #0xb1                  	// #177
     5a8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     5ac:	lsr	x3, x19, #32
     5b0:	add	x2, x1, #0x0
     5b4:	ldr	x0, [x2, x3, lsl #3]
     5b8:	dmb	ish
     5bc:	cbz	x0, 530 <_ZN6__lsan12LsanMetadataC1Em+0x20>
     5c0:	lsr	w4, w19, #20
     5c4:	ldrb	w0, [x0, x4]
     5c8:	cbz	w0, 530 <_ZN6__lsan12LsanMetadataC1Em+0x20>
     5cc:	ldr	x0, [x2, x3, lsl #3]
     5d0:	dmb	ish
     5d4:	cbz	x0, 678 <_ZN6__lsan12LsanMetadataC1Em+0x168>
     5d8:	ldrb	w0, [x0, x4]
     5dc:	cbz	w0, 678 <_ZN6__lsan12LsanMetadataC1Em+0x168>
     5e0:	and	x1, x19, #0xfffffffffff00000
     5e4:	ldr	x0, [x2, x3, lsl #3]
     5e8:	dmb	ish
     5ec:	cbz	x0, 670 <_ZN6__lsan12LsanMetadataC1Em+0x160>
     5f0:	ldrb	w0, [x0, x4]
     5f4:	mov	w3, #0x200                 	// #512
     5f8:	cmp	w0, #0x35
     5fc:	and	x2, x0, #0xff
     600:	b.eq	62c <_ZN6__lsan12LsanMetadataC1Em+0x11c>  // b.none
     604:	lsl	w3, w0, #4
     608:	cmp	x2, #0x10
     60c:	b.ls	62c <_ZN6__lsan12LsanMetadataC1Em+0x11c>  // b.plast
     610:	sub	x2, x2, #0x10
     614:	mov	x3, #0x100                 	// #256
     618:	and	x4, x2, #0x3
     61c:	lsr	x2, x2, #2
     620:	lsl	x2, x3, x2
     624:	lsr	x0, x2, #2
     628:	madd	w3, w0, w4, w2
     62c:	sub	w0, w19, w1
     630:	add	x1, x1, #0x100, lsl #12
     634:	udiv	w0, w0, w3
     638:	add	x0, x0, #0x1
     63c:	lsl	x0, x0, #4
     640:	sub	x2, x1, x0
     644:	str	x2, [x21]
     648:	cmp	x0, x1
     64c:	b.ne	554 <_ZN6__lsan12LsanMetadataC1Em+0x44>  // b.any
     650:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     654:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     658:	add	x2, x2, #0x0
     65c:	add	x0, x0, #0x0
     660:	mov	x4, #0x0                   	// #0
     664:	mov	x3, #0x0                   	// #0
     668:	mov	w1, #0x10f                 	// #271
     66c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     670:	mov	w3, #0x0                   	// #0
     674:	b	62c <_ZN6__lsan12LsanMetadataC1Em+0x11c>
     678:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     67c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     680:	add	x2, x2, #0x0
     684:	add	x0, x0, #0x0
     688:	mov	x4, #0x0                   	// #0
     68c:	mov	x3, #0x0                   	// #0
     690:	mov	w1, #0x9c                  	// #156
     694:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000698 <_ZNK6__lsan12LsanMetadata9allocatedEv>:
     698:	ldr	x0, [x0]
     69c:	ldrb	w0, [x0]
     6a0:	cmp	w0, #0x0
     6a4:	cset	w0, ne  // ne = any
     6a8:	ret
     6ac:	nop

00000000000006b0 <_ZNK6__lsan12LsanMetadata3tagEv>:
     6b0:	ldr	x0, [x0]
     6b4:	ldrb	w0, [x0, #1]
     6b8:	and	w0, w0, #0x3
     6bc:	ret

00000000000006c0 <_ZN6__lsan12LsanMetadata7set_tagENS_8ChunkTagE>:
     6c0:	ldr	x0, [x0]
     6c4:	ldrb	w2, [x0, #1]
     6c8:	bfxil	w2, w1, #0, #2
     6cc:	strb	w2, [x0, #1]
     6d0:	ret
     6d4:	nop

00000000000006d8 <_ZNK6__lsan12LsanMetadata14requested_sizeEv>:
     6d8:	ldr	x0, [x0]
     6dc:	ldr	x0, [x0]
     6e0:	lsr	x0, x0, #10
     6e4:	ret

00000000000006e8 <_ZNK6__lsan12LsanMetadata14stack_trace_idEv>:
     6e8:	ldr	x0, [x0]
     6ec:	ldr	w0, [x0, #8]
     6f0:	ret
     6f4:	nop

00000000000006f8 <_ZN6__lsan18IgnoreObjectLockedEPKv>:
     6f8:	stp	x19, x20, [sp, #-32]!
     6fc:	mov	x1, #0xffffffffffff        	// #281474976710655
     700:	mov	x19, x0
     704:	stp	x21, x30, [sp, #16]
     708:	cmp	x0, x1
     70c:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
     710:	b.ls	878 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x180>  // b.plast
     714:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     718:	add	x0, x0, #0x0
     71c:	mov	w2, #0x1                   	// #1
     720:	ldxrb	w1, [x0]
     724:	stxrb	w3, w2, [x0]
     728:	cbnz	w3, 720 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x28>
     72c:	dmb	ish
     730:	tst	w1, #0xff
     734:	b.eq	73c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x44>  // b.none
     738:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
     73c:	add	x2, x20, #0x0
     740:	add	x0, x2, #0x80, lsl #12
     744:	ldr	x1, [x0, #3576]
     748:	ldr	x0, [x0, #3528]
     74c:	cbz	x1, 85c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x164>
     750:	add	x2, x0, x1, lsl #3
     754:	mov	x3, #0x0                   	// #0
     758:	ldr	x1, [x0]
     75c:	cmp	x19, x1
     760:	b.cc	774 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x7c>  // b.lo, b.ul, b.last
     764:	sub	x5, x19, x3
     768:	sub	x4, x19, x1
     76c:	cmp	x5, x4
     770:	csel	x3, x3, x1, ls  // ls = plast
     774:	add	x0, x0, #0x8
     778:	cmp	x2, x0
     77c:	b.ne	758 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x60>  // b.any
     780:	cbz	x3, a40 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x348>
     784:	ldr	x4, [x3]
     788:	cmp	x4, x3
     78c:	b.hi	a54 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x35c>  // b.pmore
     790:	ldr	x0, [x3, #8]
     794:	add	x4, x4, x0
     798:	cmp	x4, x3
     79c:	b.ls	a6c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x374>  // b.plast
     7a0:	cmp	x19, x3
     7a4:	b.cc	968 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x270>  // b.lo, b.ul, b.last
     7a8:	cmp	x19, x4
     7ac:	b.cs	a40 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x348>  // b.hs, b.nlast
     7b0:	add	x0, x20, #0x0
     7b4:	add	x1, x0, #0x80, lsl #12
     7b8:	ldr	x21, [x1, #3520]
     7bc:	sub	x1, x21, #0x1
     7c0:	tst	x1, x3
     7c4:	b.ne	a84 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x38c>  // b.any
     7c8:	add	x21, x21, x3
     7cc:	dmb	ish
     7d0:	cmp	x19, x21
     7d4:	cset	w1, cc  // cc = lo, ul, last
     7d8:	cmp	x21, #0x0
     7dc:	csinc	w1, w1, wzr, ne  // ne = any
     7e0:	add	x0, x0, #0x81, lsl #12
     7e4:	strb	wzr, [x0, #40]
     7e8:	cbnz	w1, 868 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x170>
     7ec:	mov	x0, #0xffffffffffff        	// #281474976710655
     7f0:	cmp	x21, x0
     7f4:	b.ls	984 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x28c>  // b.plast
     7f8:	add	x20, x20, #0x0
     7fc:	add	x20, x20, #0x80, lsl #12
     800:	ldr	x0, [x20, #3520]
     804:	sub	x1, x0, #0x1
     808:	tst	x21, x1
     80c:	b.ne	91c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x224>  // b.any
     810:	sub	x0, x21, x0
     814:	add	x1, x0, #0x20
     818:	ldrb	w0, [x1]
     81c:	cbz	w0, 868 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x170>
     820:	ldr	x3, [x1]
     824:	add	x3, x21, x3, lsr #10
     828:	cmp	x3, x19
     82c:	b.ls	868 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x170>  // b.plast
     830:	ldrb	w2, [x1, #1]
     834:	mov	w0, #0x1                   	// #1
     838:	and	w3, w2, #0x3
     83c:	cmp	w3, #0x3
     840:	b.eq	86c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x174>  // b.none
     844:	orr	w2, w2, #0x3
     848:	strb	w2, [x1, #1]
     84c:	mov	w0, #0x0                   	// #0
     850:	ldp	x21, x30, [sp, #16]
     854:	ldp	x19, x20, [sp], #32
     858:	ret
     85c:	dmb	ish
     860:	add	x2, x2, #0x81, lsl #12
     864:	strb	wzr, [x2, #40]
     868:	mov	w0, #0x2                   	// #2
     86c:	ldp	x21, x30, [sp, #16]
     870:	ldp	x19, x20, [sp], #32
     874:	ret
     878:	lsr	x4, x0, #32
     87c:	add	x1, x20, #0x0
     880:	ldr	x0, [x1, x4, lsl #3]
     884:	dmb	ish
     888:	cbz	x0, 714 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x1c>
     88c:	lsr	w5, w19, #20
     890:	ldrb	w0, [x0, x5]
     894:	cbz	w0, 714 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x1c>
     898:	ldr	x0, [x1, x4, lsl #3]
     89c:	dmb	ish
     8a0:	cbz	x0, ab0 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3b8>
     8a4:	ldrb	w0, [x0, x5]
     8a8:	cbz	w0, ab0 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3b8>
     8ac:	and	x3, x19, #0xfffffffffff00000
     8b0:	ldr	x0, [x1, x4, lsl #3]
     8b4:	dmb	ish
     8b8:	sub	w1, w19, w3
     8bc:	cbz	x0, 900 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x208>
     8c0:	ldrb	w2, [x0, x5]
     8c4:	cmp	w2, #0x35
     8c8:	and	x0, x2, #0xff
     8cc:	b.eq	aa4 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3ac>  // b.none
     8d0:	cmp	x0, #0x10
     8d4:	b.ls	af8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x400>  // b.plast
     8d8:	sub	x0, x0, #0x10
     8dc:	mov	x2, #0x100                 	// #256
     8e0:	and	x4, x0, #0x3
     8e4:	lsr	x0, x0, #2
     8e8:	lsl	x2, x2, x0
     8ec:	lsr	x0, x2, #2
     8f0:	madd	x0, x0, x4, x2
     8f4:	udiv	w1, w1, w0
     8f8:	mul	w1, w1, w0
     8fc:	add	x3, x3, x1
     900:	cmp	x3, #0x0
     904:	mov	x21, x3
     908:	cset	w1, eq  // eq = none
     90c:	cmp	x19, x3
     910:	cset	w0, cc  // cc = lo, ul, last
     914:	orr	w1, w1, w0
     918:	b	7e8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0xf0>
     91c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     920:	mov	x2, x21
     924:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     928:	add	x0, x0, #0x0
     92c:	ldr	x1, [x1]
     930:	ldr	x1, [x1]
     934:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     938:	ldr	x0, [x20, #3520]
     93c:	sub	x1, x0, #0x1
     940:	tst	x21, x1
     944:	b.eq	810 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x118>  // b.none
     948:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     94c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     950:	add	x2, x2, #0x0
     954:	add	x0, x0, #0x0
     958:	mov	x4, #0x0                   	// #0
     95c:	mov	x3, #0x0                   	// #0
     960:	mov	w1, #0xb1                  	// #177
     964:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     968:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     96c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     970:	mov	x4, x19
     974:	add	x2, x2, #0x0
     978:	add	x0, x0, #0x0
     97c:	mov	w1, #0xc9                  	// #201
     980:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     984:	lsr	x2, x21, #32
     988:	add	x1, x20, #0x0
     98c:	ldr	x0, [x1, x2, lsl #3]
     990:	dmb	ish
     994:	cbz	x0, 7f8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x100>
     998:	lsr	w3, w21, #20
     99c:	ldrb	w0, [x0, x3]
     9a0:	cbz	w0, 7f8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x100>
     9a4:	ldr	x0, [x1, x2, lsl #3]
     9a8:	dmb	ish
     9ac:	cbz	x0, ad8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3e0>
     9b0:	ldrb	w0, [x0, x3]
     9b4:	cbz	w0, ad8 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3e0>
     9b8:	and	x0, x21, #0xfffffffffff00000
     9bc:	ldr	x1, [x1, x2, lsl #3]
     9c0:	dmb	ish
     9c4:	cbz	x1, ad0 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x3d8>
     9c8:	ldrb	w3, [x1, x3]
     9cc:	mov	w2, #0x200                 	// #512
     9d0:	cmp	w3, #0x35
     9d4:	and	x1, x3, #0xff
     9d8:	b.eq	a04 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x30c>  // b.none
     9dc:	lsl	w2, w3, #4
     9e0:	cmp	x1, #0x10
     9e4:	b.ls	a04 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x30c>  // b.plast
     9e8:	sub	x1, x1, #0x10
     9ec:	mov	x2, #0x100                 	// #256
     9f0:	and	x3, x1, #0x3
     9f4:	lsr	x1, x1, #2
     9f8:	lsl	x2, x2, x1
     9fc:	lsr	x1, x2, #2
     a00:	madd	w2, w1, w3, w2
     a04:	sub	w1, w21, w0
     a08:	add	x0, x0, #0x100, lsl #12
     a0c:	udiv	w1, w1, w2
     a10:	add	x1, x1, #0x1
     a14:	cmp	x0, x1, lsl #4
     a18:	lsl	x1, x1, #4
     a1c:	b.ne	b0c <_ZN6__lsan18IgnoreObjectLockedEPKv+0x414>  // b.any
     a20:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a24:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a28:	add	x2, x2, #0x0
     a2c:	add	x0, x0, #0x0
     a30:	mov	x4, #0x0                   	// #0
     a34:	mov	x3, #0x0                   	// #0
     a38:	mov	w1, #0x12e                 	// #302
     a3c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a40:	dmb	ish
     a44:	add	x20, x20, #0x0
     a48:	add	x20, x20, #0x81, lsl #12
     a4c:	strb	wzr, [x20, #40]
     a50:	b	868 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x170>
     a54:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a58:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a5c:	add	x2, x2, #0x0
     a60:	add	x0, x0, #0x0
     a64:	mov	w1, #0xc7                  	// #199
     a68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a6c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a70:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a74:	add	x2, x2, #0x0
     a78:	add	x0, x0, #0x0
     a7c:	mov	w1, #0xc8                  	// #200
     a80:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a84:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a88:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     a8c:	add	x2, x2, #0x0
     a90:	add	x0, x0, #0x0
     a94:	mov	x4, #0x0                   	// #0
     a98:	mov	x3, #0x0                   	// #0
     a9c:	mov	w1, #0x135                 	// #309
     aa0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     aa4:	and	x1, x1, #0xfffffe00
     aa8:	add	x3, x3, x1
     aac:	b	900 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x208>
     ab0:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     ab4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     ab8:	add	x2, x2, #0x0
     abc:	add	x0, x0, #0x0
     ac0:	mov	x4, #0x0                   	// #0
     ac4:	mov	x3, #0x0                   	// #0
     ac8:	mov	w1, #0xcc                  	// #204
     acc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ad0:	mov	w2, #0x0                   	// #0
     ad4:	b	a04 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x30c>
     ad8:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     adc:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     ae0:	add	x2, x2, #0x0
     ae4:	add	x0, x0, #0x0
     ae8:	mov	x4, #0x0                   	// #0
     aec:	mov	x3, #0x0                   	// #0
     af0:	mov	w1, #0x9c                  	// #156
     af4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     af8:	ubfiz	x2, x2, #4, #8
     afc:	udiv	w0, w1, w2
     b00:	mul	w0, w0, w2
     b04:	add	x3, x3, w0, uxtw
     b08:	b	900 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x208>
     b0c:	sub	x1, x0, x1
     b10:	b	818 <_ZN6__lsan18IgnoreObjectLockedEPKv+0x120>
     b14:	nop

0000000000000b18 <__sanitizer_get_current_allocated_bytes>:
     b18:	str	x30, [sp, #-32]!
     b1c:	mov	x2, #0x10                  	// #16
     b20:	mov	w1, #0x0                   	// #0
     b24:	add	x0, sp, x2
     b28:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     b2c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     b30:	add	x0, x0, #0x0
     b34:	mov	w2, #0x1                   	// #1
     b38:	ldxrb	w1, [x0]
     b3c:	stxrb	w3, w2, [x0]
     b40:	cbnz	w3, b38 <__sanitizer_get_current_allocated_bytes+0x20>
     b44:	dmb	ish
     b48:	tst	w1, #0xff
     b4c:	b.eq	b54 <__sanitizer_get_current_allocated_bytes+0x3c>  // b.none
     b50:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
     b54:	ldp	x2, x1, [sp, #16]
     b58:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     b5c:	add	x0, x0, #0x0
     b60:	mov	x3, x0
     b64:	nop
     b68:	ldr	x5, [x0, #16]
     b6c:	ldr	x4, [x0, #24]
     b70:	add	x2, x2, x5
     b74:	ldr	x0, [x0]
     b78:	add	x1, x1, x4
     b7c:	cmp	x0, x3
     b80:	b.ne	b68 <__sanitizer_get_current_allocated_bytes+0x50>  // b.any
     b84:	cmp	x2, #0x0
     b88:	csel	x2, x2, xzr, ge  // ge = tcont
     b8c:	cmp	x1, #0x0
     b90:	csel	x1, x1, xzr, ge  // ge = tcont
     b94:	stp	x2, x1, [sp, #16]
     b98:	dmb	ish
     b9c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     ba0:	add	x0, x0, #0x0
     ba4:	add	x0, x0, #0x81, lsl #12
     ba8:	strb	wzr, [x0, #80]
     bac:	ldr	x0, [sp, #16]
     bb0:	ldr	x30, [sp], #32
     bb4:	ret

0000000000000bb8 <__sanitizer_get_heap_size>:
     bb8:	str	x30, [sp, #-32]!
     bbc:	mov	x2, #0x10                  	// #16
     bc0:	mov	w1, #0x0                   	// #0
     bc4:	add	x0, sp, x2
     bc8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
     bcc:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     bd0:	add	x0, x0, #0x0
     bd4:	mov	w2, #0x1                   	// #1
     bd8:	ldxrb	w1, [x0]
     bdc:	stxrb	w3, w2, [x0]
     be0:	cbnz	w3, bd8 <__sanitizer_get_heap_size+0x20>
     be4:	dmb	ish
     be8:	tst	w1, #0xff
     bec:	b.eq	bf4 <__sanitizer_get_heap_size+0x3c>  // b.none
     bf0:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
     bf4:	ldp	x2, x1, [sp, #16]
     bf8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     bfc:	add	x0, x0, #0x0
     c00:	mov	x3, x0
     c04:	nop
     c08:	ldr	x5, [x0, #16]
     c0c:	ldr	x4, [x0, #24]
     c10:	add	x2, x2, x5
     c14:	ldr	x0, [x0]
     c18:	add	x1, x1, x4
     c1c:	cmp	x0, x3
     c20:	b.ne	c08 <__sanitizer_get_heap_size+0x50>  // b.any
     c24:	cmp	x2, #0x0
     c28:	csel	x2, x2, xzr, ge  // ge = tcont
     c2c:	cmp	x1, #0x0
     c30:	csel	x1, x1, xzr, ge  // ge = tcont
     c34:	stp	x2, x1, [sp, #16]
     c38:	dmb	ish
     c3c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     c40:	add	x0, x0, #0x0
     c44:	add	x0, x0, #0x81, lsl #12
     c48:	strb	wzr, [x0, #80]
     c4c:	ldr	x0, [sp, #24]
     c50:	ldr	x30, [sp], #32
     c54:	ret

0000000000000c58 <__sanitizer_get_free_bytes>:
     c58:	mov	x0, #0x0                   	// #0
     c5c:	ret

0000000000000c60 <__sanitizer_get_unmapped_bytes>:
     c60:	mov	x0, #0x0                   	// #0
     c64:	ret

0000000000000c68 <__sanitizer_get_estimated_allocated_size>:
     c68:	ret
     c6c:	nop

0000000000000c70 <__sanitizer_get_ownership>:
     c70:	stp	x19, x20, [sp, #-32]!
     c74:	mov	x19, x0
     c78:	mov	x1, #0xffffffffffff        	// #281474976710655
     c7c:	str	x30, [sp, #16]
     c80:	cmp	x19, x1
     c84:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     c88:	b.ls	d0c <__sanitizer_get_ownership+0x9c>  // b.plast
     c8c:	add	x0, x0, #0x0
     c90:	add	x20, x0, #0x80, lsl #12
     c94:	ldr	x2, [x20, #3520]
     c98:	sub	x0, x2, #0x1
     c9c:	tst	x0, x19
     ca0:	b.ne	cc0 <__sanitizer_get_ownership+0x50>  // b.any
     ca4:	sub	x19, x19, x2
     ca8:	add	x19, x19, #0x20
     cac:	cmp	x19, #0x0
     cb0:	cset	w0, ne  // ne = any
     cb4:	ldr	x30, [sp, #16]
     cb8:	ldp	x19, x20, [sp], #32
     cbc:	ret
     cc0:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     cc4:	mov	x2, x19
     cc8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     ccc:	add	x0, x0, #0x0
     cd0:	ldr	x1, [x1]
     cd4:	ldr	x1, [x1]
     cd8:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     cdc:	ldr	x2, [x20, #3520]
     ce0:	sub	x0, x2, #0x1
     ce4:	tst	x0, x19
     ce8:	b.eq	ca4 <__sanitizer_get_ownership+0x34>  // b.none
     cec:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     cf0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     cf4:	add	x2, x2, #0x0
     cf8:	add	x0, x0, #0x0
     cfc:	mov	x4, #0x0                   	// #0
     d00:	mov	x3, #0x0                   	// #0
     d04:	mov	w1, #0xb1                  	// #177
     d08:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     d0c:	lsr	x3, x19, #32
     d10:	add	x2, x0, #0x0
     d14:	ldr	x1, [x2, x3, lsl #3]
     d18:	dmb	ish
     d1c:	cbz	x1, c8c <__sanitizer_get_ownership+0x1c>
     d20:	lsr	w4, w19, #20
     d24:	ldrb	w1, [x1, x4]
     d28:	cbz	w1, c8c <__sanitizer_get_ownership+0x1c>
     d2c:	ldr	x0, [x2, x3, lsl #3]
     d30:	dmb	ish
     d34:	cbz	x0, dac <__sanitizer_get_ownership+0x13c>
     d38:	ldrb	w0, [x0, x4]
     d3c:	cbz	w0, dac <__sanitizer_get_ownership+0x13c>
     d40:	and	x0, x19, #0xfffffffffff00000
     d44:	ldr	x1, [x2, x3, lsl #3]
     d48:	dmb	ish
     d4c:	cbz	x1, da4 <__sanitizer_get_ownership+0x134>
     d50:	ldrb	w3, [x1, x4]
     d54:	mov	w2, #0x200                 	// #512
     d58:	cmp	w3, #0x35
     d5c:	and	x1, x3, #0xff
     d60:	b.eq	d8c <__sanitizer_get_ownership+0x11c>  // b.none
     d64:	lsl	w2, w3, #4
     d68:	cmp	x1, #0x10
     d6c:	b.ls	d8c <__sanitizer_get_ownership+0x11c>  // b.plast
     d70:	sub	x1, x1, #0x10
     d74:	mov	x2, #0x100                 	// #256
     d78:	and	x3, x1, #0x3
     d7c:	lsr	x1, x1, #2
     d80:	lsl	x1, x2, x1
     d84:	lsr	x2, x1, #2
     d88:	madd	w2, w2, w3, w1
     d8c:	sub	w19, w19, w0
     d90:	add	x0, x0, #0x100, lsl #12
     d94:	udiv	w19, w19, w2
     d98:	add	x19, x19, #0x1
     d9c:	sub	x19, x0, x19, lsl #4
     da0:	b	cac <__sanitizer_get_ownership+0x3c>
     da4:	mov	w2, #0x0                   	// #0
     da8:	b	d8c <__sanitizer_get_ownership+0x11c>
     dac:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     db0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     db4:	add	x2, x2, #0x0
     db8:	add	x0, x0, #0x0
     dbc:	mov	x4, #0x0                   	// #0
     dc0:	mov	x3, #0x0                   	// #0
     dc4:	mov	w1, #0x9c                  	// #156
     dc8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     dcc:	nop

0000000000000dd0 <__sanitizer_get_allocated_size>:
     dd0:	stp	x19, x20, [sp, #-32]!
     dd4:	mov	x19, x0
     dd8:	mov	x1, #0xffffffffffff        	// #281474976710655
     ddc:	str	x30, [sp, #16]
     de0:	cmp	x19, x1
     de4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     de8:	b.ls	e6c <__sanitizer_get_allocated_size+0x9c>  // b.plast
     dec:	add	x0, x0, #0x0
     df0:	add	x20, x0, #0x80, lsl #12
     df4:	ldr	x2, [x20, #3520]
     df8:	sub	x0, x2, #0x1
     dfc:	tst	x0, x19
     e00:	b.ne	e20 <__sanitizer_get_allocated_size+0x50>  // b.any
     e04:	sub	x19, x19, x2
     e08:	add	x19, x19, #0x20
     e0c:	ldr	x0, [x19]
     e10:	lsr	x0, x0, #10
     e14:	ldr	x30, [sp, #16]
     e18:	ldp	x19, x20, [sp], #32
     e1c:	ret
     e20:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
     e24:	mov	x2, x19
     e28:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     e2c:	add	x0, x0, #0x0
     e30:	ldr	x1, [x1]
     e34:	ldr	x1, [x1]
     e38:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
     e3c:	ldr	x2, [x20, #3520]
     e40:	sub	x0, x2, #0x1
     e44:	tst	x0, x19
     e48:	b.eq	e04 <__sanitizer_get_allocated_size+0x34>  // b.none
     e4c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     e50:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     e54:	add	x2, x2, #0x0
     e58:	add	x0, x0, #0x0
     e5c:	mov	x4, #0x0                   	// #0
     e60:	mov	x3, #0x0                   	// #0
     e64:	mov	w1, #0xb1                  	// #177
     e68:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     e6c:	lsr	x3, x19, #32
     e70:	add	x2, x0, #0x0
     e74:	ldr	x1, [x2, x3, lsl #3]
     e78:	dmb	ish
     e7c:	cbz	x1, dec <__sanitizer_get_allocated_size+0x1c>
     e80:	lsr	w4, w19, #20
     e84:	ldrb	w1, [x1, x4]
     e88:	cbz	w1, dec <__sanitizer_get_allocated_size+0x1c>
     e8c:	ldr	x0, [x2, x3, lsl #3]
     e90:	dmb	ish
     e94:	cbz	x0, f1c <__sanitizer_get_allocated_size+0x14c>
     e98:	ldrb	w0, [x0, x4]
     e9c:	cbz	w0, f1c <__sanitizer_get_allocated_size+0x14c>
     ea0:	and	x0, x19, #0xfffffffffff00000
     ea4:	ldr	x1, [x2, x3, lsl #3]
     ea8:	dmb	ish
     eac:	cbz	x1, f14 <__sanitizer_get_allocated_size+0x144>
     eb0:	ldrb	w3, [x1, x4]
     eb4:	mov	w2, #0x200                 	// #512
     eb8:	cmp	w3, #0x35
     ebc:	and	x1, x3, #0xff
     ec0:	b.eq	eec <__sanitizer_get_allocated_size+0x11c>  // b.none
     ec4:	lsl	w2, w3, #4
     ec8:	cmp	x1, #0x10
     ecc:	b.ls	eec <__sanitizer_get_allocated_size+0x11c>  // b.plast
     ed0:	sub	x1, x1, #0x10
     ed4:	mov	x2, #0x100                 	// #256
     ed8:	and	x3, x1, #0x3
     edc:	lsr	x1, x1, #2
     ee0:	lsl	x1, x2, x1
     ee4:	lsr	x2, x1, #2
     ee8:	madd	w2, w2, w3, w1
     eec:	sub	w19, w19, w0
     ef0:	add	x1, x0, #0x100, lsl #12
     ef4:	mov	x0, #0x0                   	// #0
     ef8:	udiv	w19, w19, w2
     efc:	add	x19, x19, #0x1
     f00:	cmp	x1, x19, lsl #4
     f04:	lsl	x19, x19, #4
     f08:	b.eq	e14 <__sanitizer_get_allocated_size+0x44>  // b.none
     f0c:	sub	x19, x1, x19
     f10:	b	e0c <__sanitizer_get_allocated_size+0x3c>
     f14:	mov	w2, #0x0                   	// #0
     f18:	b	eec <__sanitizer_get_allocated_size+0x11c>
     f1c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
     f20:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
     f24:	add	x2, x2, #0x0
     f28:	add	x0, x0, #0x0
     f2c:	mov	x4, #0x0                   	// #0
     f30:	mov	x3, #0x0                   	// #0
     f34:	mov	w1, #0x9c                  	// #156
     f38:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     f3c:	nop

0000000000000f40 <_ZN6__lsan15PointsIntoChunkEPv>:
     f40:	stp	x19, x20, [sp, #-48]!
     f44:	mov	x1, #0xffffffffffff        	// #281474976710655
     f48:	mov	x19, x0
     f4c:	stp	x23, x30, [sp, #32]
     f50:	cmp	x0, x1
     f54:	adrp	x23, 0 <_ZN6__lsan19InitializeAllocatorEv>
     f58:	b.ls	1134 <_ZN6__lsan15PointsIntoChunkEPv+0x1f4>  // b.plast
     f5c:	stp	x21, x22, [sp, #16]
     f60:	add	x21, x23, #0x0
     f64:	add	x0, x21, #0x81, lsl #12
     f68:	ldrb	w3, [x0, #40]
     f6c:	and	x3, x3, #0xff
     f70:	cmp	x3, #0x1
     f74:	b.ne	12d8 <_ZN6__lsan15PointsIntoChunkEPv+0x398>  // b.any
     f78:	add	x21, x21, #0x80, lsl #12
     f7c:	ldr	x20, [x21, #3576]
     f80:	cbz	x20, 112c <_ZN6__lsan15PointsIntoChunkEPv+0x1ec>
     f84:	ldrb	w0, [x21, #3584]
     f88:	ldr	x22, [x21, #3528]
     f8c:	cbz	w0, 1058 <_ZN6__lsan15PointsIntoChunkEPv+0x118>
     f90:	add	x0, x22, x20, lsl #3
     f94:	ldr	x1, [x22]
     f98:	ldur	x0, [x0, #-8]
     f9c:	ldr	x2, [x0, #8]
     fa0:	add	x0, x0, x2
     fa4:	cmp	x19, x0
     fa8:	ccmp	x19, x1, #0x0, cc  // cc = lo, ul, last
     fac:	b.cc	112c <_ZN6__lsan15PointsIntoChunkEPv+0x1ec>  // b.lo, b.ul, b.last
     fb0:	sub	x20, x20, #0x1
     fb4:	mov	x2, #0x0                   	// #0
     fb8:	b	fd4 <_ZN6__lsan15PointsIntoChunkEPv+0x94>
     fbc:	add	x1, x2, x20
     fc0:	lsr	x1, x1, #1
     fc4:	ldr	x0, [x22, x1, lsl #3]
     fc8:	cmp	x0, x19
     fcc:	b.hi	11c0 <_ZN6__lsan15PointsIntoChunkEPv+0x280>  // b.pmore
     fd0:	mov	x2, x1
     fd4:	sub	x0, x20, x2
     fd8:	cmp	x0, #0x1
     fdc:	b.hi	fbc <_ZN6__lsan15PointsIntoChunkEPv+0x7c>  // b.pmore
     fe0:	cmp	x2, x20
     fe4:	b.cs	1000 <_ZN6__lsan15PointsIntoChunkEPv+0xc0>  // b.hs, b.nlast
     fe8:	add	x3, x2, #0x1
     fec:	cmp	x3, x20
     ff0:	b.ne	1314 <_ZN6__lsan15PointsIntoChunkEPv+0x3d4>  // b.any
     ff4:	ldr	x0, [x22, x20, lsl #3]
     ff8:	cmp	x0, x19
     ffc:	csel	x2, x2, x20, hi  // hi = pmore
    1000:	ldr	x0, [x22, x2, lsl #3]
    1004:	ldp	x2, x1, [x0]
    1008:	add	x1, x2, x1
    100c:	cmp	x19, x1
    1010:	ccmp	x19, x2, #0x0, cc  // cc = lo, ul, last
    1014:	b.cc	112c <_ZN6__lsan15PointsIntoChunkEPv+0x1ec>  // b.lo, b.ul, b.last
    1018:	add	x1, x23, #0x0
    101c:	add	x1, x1, #0x80, lsl #12
    1020:	ldr	x20, [x1, #3520]
    1024:	sub	x1, x20, #0x1
    1028:	add	x20, x0, x20
    102c:	tst	x0, x1
    1030:	b.ne	12f4 <_ZN6__lsan15PointsIntoChunkEPv+0x3b4>  // b.any
    1034:	ldp	x21, x22, [sp, #16]
    1038:	cmp	x20, #0x0
    103c:	ccmp	x19, x20, #0x0, ne  // ne = any
    1040:	b.cs	10c4 <_ZN6__lsan15PointsIntoChunkEPv+0x184>  // b.hs, b.nlast
    1044:	mov	x20, #0x0                   	// #0
    1048:	mov	x0, x20
    104c:	ldp	x23, x30, [sp, #32]
    1050:	ldp	x19, x20, [sp], #48
    1054:	ret
    1058:	mov	x1, x20
    105c:	mov	w2, #0x0                   	// #0
    1060:	mov	x0, x22
    1064:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    1068:	ldr	x2, [x21, #3576]
    106c:	mov	x1, #0x0                   	// #0
    1070:	cbz	x2, 108c <_ZN6__lsan15PointsIntoChunkEPv+0x14c>
    1074:	nop
    1078:	ldr	x0, [x22, x1, lsl #3]
    107c:	str	x1, [x0, #24]
    1080:	add	x1, x1, #0x1
    1084:	cmp	x1, x2
    1088:	b.ne	1078 <_ZN6__lsan15PointsIntoChunkEPv+0x138>  // b.any
    108c:	add	x0, x23, #0x0
    1090:	mov	w1, #0x1                   	// #1
    1094:	add	x0, x0, #0x80, lsl #12
    1098:	ldr	x22, [x0, #3528]
    109c:	strb	w1, [x0, #3584]
    10a0:	add	x0, x22, x20, lsl #3
    10a4:	ldr	x1, [x22]
    10a8:	ldur	x0, [x0, #-8]
    10ac:	ldr	x2, [x0, #8]
    10b0:	add	x0, x0, x2
    10b4:	cmp	x19, x0
    10b8:	ccmp	x19, x1, #0x0, cc  // cc = lo, ul, last
    10bc:	b.cs	fb0 <_ZN6__lsan15PointsIntoChunkEPv+0x70>  // b.hs, b.nlast
    10c0:	b	112c <_ZN6__lsan15PointsIntoChunkEPv+0x1ec>
    10c4:	mov	x0, #0xffffffffffff        	// #281474976710655
    10c8:	cmp	x20, x0
    10cc:	b.ls	11c8 <_ZN6__lsan15PointsIntoChunkEPv+0x288>  // b.plast
    10d0:	add	x23, x23, #0x0
    10d4:	add	x23, x23, #0x80, lsl #12
    10d8:	ldr	x0, [x23, #3520]
    10dc:	sub	x1, x0, #0x1
    10e0:	tst	x1, x20
    10e4:	b.ne	1288 <_ZN6__lsan15PointsIntoChunkEPv+0x348>  // b.any
    10e8:	sub	x0, x20, x0
    10ec:	add	x0, x0, #0x20
    10f0:	ldrb	w1, [x0]
    10f4:	cbz	w1, 1044 <_ZN6__lsan15PointsIntoChunkEPv+0x104>
    10f8:	ldr	x0, [x0]
    10fc:	lsr	x0, x0, #10
    1100:	add	x1, x0, x20
    1104:	cmp	x1, x19
    1108:	b.hi	1048 <_ZN6__lsan15PointsIntoChunkEPv+0x108>  // b.pmore
    110c:	cmp	x0, #0x8
    1110:	b.ne	1044 <_ZN6__lsan15PointsIntoChunkEPv+0x104>  // b.any
    1114:	add	x0, x20, #0x8
    1118:	cmp	x19, x0
    111c:	b.ne	1044 <_ZN6__lsan15PointsIntoChunkEPv+0x104>  // b.any
    1120:	ldr	x0, [x20]
    1124:	cbz	x0, 1048 <_ZN6__lsan15PointsIntoChunkEPv+0x108>
    1128:	b	1044 <_ZN6__lsan15PointsIntoChunkEPv+0x104>
    112c:	ldp	x21, x22, [sp, #16]
    1130:	b	1044 <_ZN6__lsan15PointsIntoChunkEPv+0x104>
    1134:	lsr	x2, x0, #32
    1138:	add	x1, x23, #0x0
    113c:	ldr	x0, [x1, x2, lsl #3]
    1140:	dmb	ish
    1144:	cbz	x0, f5c <_ZN6__lsan15PointsIntoChunkEPv+0x1c>
    1148:	lsr	w3, w19, #20
    114c:	ldrb	w0, [x0, x3]
    1150:	cbz	w0, f5c <_ZN6__lsan15PointsIntoChunkEPv+0x1c>
    1154:	ldr	x0, [x1, x2, lsl #3]
    1158:	dmb	ish
    115c:	cbz	x0, 133c <_ZN6__lsan15PointsIntoChunkEPv+0x3fc>
    1160:	ldrb	w0, [x0, x3]
    1164:	cbz	w0, 133c <_ZN6__lsan15PointsIntoChunkEPv+0x3fc>
    1168:	and	x20, x19, #0xfffffffffff00000
    116c:	ldr	x0, [x1, x2, lsl #3]
    1170:	dmb	ish
    1174:	sub	w1, w19, w20
    1178:	cbz	x0, 1038 <_ZN6__lsan15PointsIntoChunkEPv+0xf8>
    117c:	ldrb	w2, [x0, x3]
    1180:	cmp	w2, #0x35
    1184:	and	x0, x2, #0xff
    1188:	b.eq	1330 <_ZN6__lsan15PointsIntoChunkEPv+0x3f0>  // b.none
    118c:	cmp	x0, #0x10
    1190:	b.ls	1388 <_ZN6__lsan15PointsIntoChunkEPv+0x448>  // b.plast
    1194:	sub	x0, x0, #0x10
    1198:	mov	x2, #0x100                 	// #256
    119c:	and	x3, x0, #0x3
    11a0:	lsr	x0, x0, #2
    11a4:	lsl	x2, x2, x0
    11a8:	lsr	x0, x2, #2
    11ac:	madd	x0, x0, x3, x2
    11b0:	udiv	w1, w1, w0
    11b4:	mul	w1, w1, w0
    11b8:	add	x20, x20, x1
    11bc:	b	1038 <_ZN6__lsan15PointsIntoChunkEPv+0xf8>
    11c0:	sub	x20, x1, #0x1
    11c4:	b	fd4 <_ZN6__lsan15PointsIntoChunkEPv+0x94>
    11c8:	lsr	x2, x20, #32
    11cc:	add	x1, x23, #0x0
    11d0:	ldr	x0, [x1, x2, lsl #3]
    11d4:	dmb	ish
    11d8:	cbz	x0, 10d0 <_ZN6__lsan15PointsIntoChunkEPv+0x190>
    11dc:	lsr	w3, w20, #20
    11e0:	ldrb	w0, [x0, x3]
    11e4:	cbz	w0, 10d0 <_ZN6__lsan15PointsIntoChunkEPv+0x190>
    11e8:	stp	x21, x22, [sp, #16]
    11ec:	ldr	x0, [x1, x2, lsl #3]
    11f0:	dmb	ish
    11f4:	cbz	x0, 1368 <_ZN6__lsan15PointsIntoChunkEPv+0x428>
    11f8:	ldrb	w0, [x0, x3]
    11fc:	cbz	w0, 1368 <_ZN6__lsan15PointsIntoChunkEPv+0x428>
    1200:	and	x0, x20, #0xfffffffffff00000
    1204:	ldr	x1, [x1, x2, lsl #3]
    1208:	dmb	ish
    120c:	cbz	x1, 1360 <_ZN6__lsan15PointsIntoChunkEPv+0x420>
    1210:	ldrb	w3, [x1, x3]
    1214:	mov	w2, #0x200                 	// #512
    1218:	cmp	w3, #0x35
    121c:	and	x1, x3, #0xff
    1220:	b.eq	124c <_ZN6__lsan15PointsIntoChunkEPv+0x30c>  // b.none
    1224:	lsl	w2, w3, #4
    1228:	cmp	x1, #0x10
    122c:	b.ls	124c <_ZN6__lsan15PointsIntoChunkEPv+0x30c>  // b.plast
    1230:	sub	x1, x1, #0x10
    1234:	mov	x2, #0x100                 	// #256
    1238:	and	x3, x1, #0x3
    123c:	lsr	x1, x1, #2
    1240:	lsl	x2, x2, x1
    1244:	lsr	x1, x2, #2
    1248:	madd	w2, w1, w3, w2
    124c:	sub	w1, w20, w0
    1250:	add	x0, x0, #0x100, lsl #12
    1254:	udiv	w1, w1, w2
    1258:	add	x1, x1, #0x1
    125c:	cmp	x0, x1, lsl #4
    1260:	lsl	x1, x1, #4
    1264:	b.ne	139c <_ZN6__lsan15PointsIntoChunkEPv+0x45c>  // b.any
    1268:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    126c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1270:	add	x2, x2, #0x0
    1274:	add	x0, x0, #0x0
    1278:	mov	x4, #0x0                   	// #0
    127c:	mov	x3, #0x0                   	// #0
    1280:	mov	w1, #0xff                  	// #255
    1284:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1288:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    128c:	mov	x2, x20
    1290:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1294:	add	x0, x0, #0x0
    1298:	ldr	x1, [x1]
    129c:	ldr	x1, [x1]
    12a0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    12a4:	ldr	x0, [x23, #3520]
    12a8:	sub	x1, x0, #0x1
    12ac:	tst	x1, x20
    12b0:	b.eq	10e8 <_ZN6__lsan15PointsIntoChunkEPv+0x1a8>  // b.none
    12b4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12b8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12bc:	add	x2, x2, #0x0
    12c0:	add	x0, x0, #0x0
    12c4:	mov	x4, #0x0                   	// #0
    12c8:	mov	x3, #0x0                   	// #0
    12cc:	mov	w1, #0xb1                  	// #177
    12d0:	stp	x21, x22, [sp, #16]
    12d4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12d8:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12dc:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12e0:	add	x2, x2, #0x0
    12e4:	add	x0, x0, #0x0
    12e8:	mov	x4, #0x1                   	// #1
    12ec:	mov	w1, #0x2b                  	// #43
    12f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12f4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12f8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    12fc:	add	x2, x2, #0x0
    1300:	add	x0, x0, #0x0
    1304:	mov	x4, #0x0                   	// #0
    1308:	mov	x3, #0x0                   	// #0
    130c:	mov	w1, #0x135                 	// #309
    1310:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1314:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1318:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    131c:	mov	x4, x20
    1320:	add	x2, x2, #0x0
    1324:	add	x0, x0, #0x0
    1328:	mov	w1, #0xf2                  	// #242
    132c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1330:	and	x1, x1, #0xfffffe00
    1334:	add	x20, x20, x1
    1338:	b	1038 <_ZN6__lsan15PointsIntoChunkEPv+0xf8>
    133c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1340:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1344:	add	x2, x2, #0x0
    1348:	add	x0, x0, #0x0
    134c:	mov	x4, #0x0                   	// #0
    1350:	mov	x3, #0x0                   	// #0
    1354:	mov	w1, #0xcc                  	// #204
    1358:	stp	x21, x22, [sp, #16]
    135c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1360:	mov	w2, #0x0                   	// #0
    1364:	b	124c <_ZN6__lsan15PointsIntoChunkEPv+0x30c>
    1368:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    136c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1370:	add	x2, x2, #0x0
    1374:	add	x0, x0, #0x0
    1378:	mov	x4, #0x0                   	// #0
    137c:	mov	x3, #0x0                   	// #0
    1380:	mov	w1, #0x9c                  	// #156
    1384:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1388:	ubfiz	x2, x2, #4, #8
    138c:	udiv	w0, w1, w2
    1390:	mul	w0, w0, w2
    1394:	add	x20, x20, w0, uxtw
    1398:	b	1038 <_ZN6__lsan15PointsIntoChunkEPv+0xf8>
    139c:	sub	x0, x0, x1
    13a0:	ldp	x21, x22, [sp, #16]
    13a4:	b	10f0 <_ZN6__lsan15PointsIntoChunkEPv+0x1b0>

00000000000013a8 <_ZN6__lsan12ForEachChunkEPFvmPvES0_>:
    13a8:	stp	x19, x20, [sp, #-96]!
    13ac:	mov	x19, #0x0                   	// #0
    13b0:	stp	x21, x22, [sp, #16]
    13b4:	mov	x21, x0
    13b8:	mov	x22, x1
    13bc:	stp	x23, x24, [sp, #32]
    13c0:	stp	x25, x26, [sp, #48]
    13c4:	mov	x26, #0x100                 	// #256
    13c8:	mov	x25, #0x100000              	// #1048576
    13cc:	stp	x27, x28, [sp, #64]
    13d0:	adrp	x28, 0 <_ZN6__lsan19InitializeAllocatorEv>
    13d4:	add	x27, x28, #0x0
    13d8:	str	x30, [sp, #80]
    13dc:	b	13f0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x48>
    13e0:	add	x19, x19, #0x1
    13e4:	mov	x0, #0x10000000            	// #268435456
    13e8:	cmp	x19, x0
    13ec:	b.eq	1494 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0xec>  // b.none
    13f0:	lsr	x1, x19, #12
    13f4:	ldr	x0, [x27, x1, lsl #3]
    13f8:	dmb	ish
    13fc:	cbz	x0, 13e0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x38>
    1400:	and	x3, x19, #0xfff
    1404:	ldrb	w0, [x0, x3]
    1408:	cbz	w0, 13e0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x38>
    140c:	ldr	x0, [x27, x1, lsl #3]
    1410:	dmb	ish
    1414:	cbz	x0, 13e0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x38>
    1418:	ldrb	w24, [x0, x3]
    141c:	cmp	w24, #0x35
    1420:	and	x0, x24, #0xff
    1424:	b.eq	1484 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0xdc>  // b.none
    1428:	cmp	x0, #0x10
    142c:	b.ls	1564 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x1bc>  // b.plast
    1430:	sub	x0, x0, #0x10
    1434:	and	x1, x0, #0x3
    1438:	lsr	x0, x0, #2
    143c:	lsl	x0, x26, x0
    1440:	lsr	x24, x0, #2
    1444:	madd	x24, x24, x1, x0
    1448:	add	x23, x24, #0x10
    144c:	udiv	x23, x25, x23
    1450:	mul	x23, x23, x24
    1454:	lsl	x20, x19, #20
    1458:	add	x23, x20, x23
    145c:	cmp	x23, x20
    1460:	b.ls	13e0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x38>  // b.plast
    1464:	nop
    1468:	mov	x0, x20
    146c:	mov	x1, x22
    1470:	add	x20, x20, x24
    1474:	blr	x21
    1478:	cmp	x23, x20
    147c:	b.hi	1468 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0xc0>  // b.pmore
    1480:	b	13e0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x38>
    1484:	mov	x23, #0x8200                	// #33280
    1488:	mov	x24, #0x200                 	// #512
    148c:	movk	x23, #0xf, lsl #16
    1490:	b	1454 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0xac>
    1494:	add	x19, x28, #0x0
    1498:	add	x19, x19, #0x80, lsl #12
    149c:	ldrb	w0, [x19, #3584]
    14a0:	ldr	x23, [x19, #3528]
    14a4:	ldr	x1, [x19, #3576]
    14a8:	cbnz	w0, 14f0 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x148>
    14ac:	mov	x0, x23
    14b0:	mov	w2, #0x0                   	// #0
    14b4:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    14b8:	ldr	x1, [x19, #3576]
    14bc:	mov	x0, #0x0                   	// #0
    14c0:	cbz	x1, 14dc <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x134>
    14c4:	nop
    14c8:	ldr	x2, [x23, x0, lsl #3]
    14cc:	str	x0, [x2, #24]
    14d0:	add	x0, x0, #0x1
    14d4:	cmp	x1, x0
    14d8:	b.ne	14c8 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x120>  // b.any
    14dc:	add	x0, x28, #0x0
    14e0:	mov	w2, #0x1                   	// #1
    14e4:	add	x0, x0, #0x80, lsl #12
    14e8:	ldr	x23, [x0, #3528]
    14ec:	strb	w2, [x0, #3584]
    14f0:	add	x28, x28, #0x0
    14f4:	mov	x19, #0x0                   	// #0
    14f8:	add	x28, x28, #0x80, lsl #12
    14fc:	cbz	x1, 1548 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x1a0>
    1500:	ldr	x0, [x28, #3520]
    1504:	ldr	x20, [x23, x19, lsl #3]
    1508:	sub	x1, x0, #0x1
    150c:	tst	x1, x20
    1510:	b.ne	1578 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x1d0>  // b.any
    1514:	add	x0, x20, x0
    1518:	mov	x1, x22
    151c:	blr	x21
    1520:	ldr	x3, [x23, x19, lsl #3]
    1524:	cmp	x3, x20
    1528:	b.ne	1598 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x1f0>  // b.any
    152c:	ldr	x3, [x3, #24]
    1530:	cmp	x19, x3
    1534:	b.ne	15b4 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x20c>  // b.any
    1538:	ldr	x0, [x28, #3576]
    153c:	add	x19, x19, #0x1
    1540:	cmp	x0, x19
    1544:	b.hi	1500 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0x158>  // b.pmore
    1548:	ldp	x21, x22, [sp, #16]
    154c:	ldp	x23, x24, [sp, #32]
    1550:	ldp	x25, x26, [sp, #48]
    1554:	ldp	x27, x28, [sp, #64]
    1558:	ldr	x30, [sp, #80]
    155c:	ldp	x19, x20, [sp], #96
    1560:	ret
    1564:	ubfiz	x24, x24, #4, #8
    1568:	add	x23, x24, #0x10
    156c:	udiv	x23, x25, x23
    1570:	mul	x23, x23, x24
    1574:	b	1454 <_ZN6__lsan12ForEachChunkEPFvmPvES0_+0xac>
    1578:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    157c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1580:	add	x2, x2, #0x0
    1584:	add	x0, x0, #0x0
    1588:	mov	x4, #0x0                   	// #0
    158c:	mov	x3, #0x0                   	// #0
    1590:	mov	w1, #0x135                 	// #309
    1594:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1598:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    159c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    15a0:	mov	x4, x20
    15a4:	add	x2, x2, #0x0
    15a8:	add	x0, x0, #0x0
    15ac:	mov	w1, #0x11f                 	// #287
    15b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    15b4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    15b8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    15bc:	mov	x4, x19
    15c0:	add	x2, x2, #0x0
    15c4:	add	x0, x0, #0x0
    15c8:	mov	w1, #0x120                 	// #288
    15cc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000015d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>:
    15d0:	stp	x19, x20, [sp, #-64]!
    15d4:	cmp	x1, #0x0
    15d8:	csinc	x19, x1, xzr, ne  // ne = any
    15dc:	stp	x21, x22, [sp, #16]
    15e0:	adrp	x21, 0 <_ZN6__lsan19InitializeAllocatorEv>
    15e4:	mov	x22, x0
    15e8:	ldr	x4, [x21]
    15ec:	str	x30, [sp, #56]
    15f0:	cmp	x4, x19
    15f4:	b.cs	162c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x5c>  // b.hs, b.nlast
    15f8:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    15fc:	tst	w0, #0xff
    1600:	b.eq	1874 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2a4>  // b.none
    1604:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1608:	mov	x1, x19
    160c:	add	x0, x0, #0x0
    1610:	mov	x20, #0x0                   	// #0
    1614:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1618:	mov	x0, x20
    161c:	ldp	x21, x22, [sp, #16]
    1620:	ldr	x30, [sp, #56]
    1624:	ldp	x19, x20, [sp], #64
    1628:	ret
    162c:	mov	x20, x2
    1630:	adrp	x21, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1634:	stp	x23, x24, [sp, #32]
    1638:	and	w23, w3, #0xff
    163c:	add	x24, x21, #0x0
    1640:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    1644:	mov	x1, x0
    1648:	mov	x3, x20
    164c:	mov	x0, x24
    1650:	mov	x2, x19
    1654:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    1658:	mov	x20, x0
    165c:	cbz	x0, 17c0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x1f0>
    1660:	cbnz	w23, 1730 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x160>
    1664:	mov	x0, #0xffffffffffff        	// #281474976710655
    1668:	cmp	x20, x0
    166c:	b.hi	169c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xcc>  // b.pmore
    1670:	lsr	x23, x20, #20
    1674:	str	x25, [sp, #48]
    1678:	lsr	x25, x20, #32
    167c:	add	x2, x21, #0x0
    1680:	ldr	x0, [x2, x25, lsl #3]
    1684:	dmb	ish
    1688:	cbz	x0, 1698 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xc8>
    168c:	and	x23, x23, #0xfff
    1690:	ldrb	w0, [x0, x23]
    1694:	cbnz	w0, 17d8 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x208>
    1698:	ldr	x25, [sp, #48]
    169c:	add	x21, x21, #0x0
    16a0:	add	x23, x21, #0x80, lsl #12
    16a4:	ldr	x21, [x23, #3520]
    16a8:	sub	x0, x21, #0x1
    16ac:	tst	x20, x0
    16b0:	b.ne	1770 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x1a0>  // b.any
    16b4:	sub	x21, x20, x21
    16b8:	add	x21, x21, #0x20
    16bc:	bl	0 <_ZN6__lsan20DisabledInThisThreadEv>
    16c0:	mov	w2, w0
    16c4:	ldrb	w3, [x21, #1]
    16c8:	neg	w2, w2
    16cc:	ldp	x0, x1, [x22]
    16d0:	bfxil	w3, w2, #0, #2
    16d4:	strb	w3, [x21, #1]
    16d8:	bl	0 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE>
    16dc:	str	w0, [x21, #8]
    16e0:	ldr	x2, [x21]
    16e4:	adrp	x1, 0 <__sanitizer_malloc_hook>
    16e8:	mov	w3, #0x1                   	// #1
    16ec:	ldr	x1, [x1]
    16f0:	bfi	x2, x19, #10, #54
    16f4:	str	x2, [x21]
    16f8:	strb	w3, [x21]
    16fc:	cbz	x1, 170c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x13c>
    1700:	mov	x1, x19
    1704:	mov	x0, x20
    1708:	bl	0 <__sanitizer_malloc_hook>
    170c:	mov	x1, x19
    1710:	mov	x0, x20
    1714:	bl	0 <_ZN11__sanitizer14RunMallocHooksEPKvm>
    1718:	mov	x0, x20
    171c:	ldp	x21, x22, [sp, #16]
    1720:	ldp	x23, x24, [sp, #32]
    1724:	ldr	x30, [sp, #56]
    1728:	ldp	x19, x20, [sp], #64
    172c:	ret
    1730:	mov	x1, #0xffffffffffff        	// #281474976710655
    1734:	cmp	x0, x1
    1738:	b.hi	169c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xcc>  // b.pmore
    173c:	lsr	x23, x0, #20
    1740:	str	x25, [sp, #48]
    1744:	lsr	x25, x0, #32
    1748:	ldr	x1, [x24, x25, lsl #3]
    174c:	dmb	ish
    1750:	cbz	x1, 167c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xac>
    1754:	and	x2, x23, #0xfff
    1758:	ldrb	w1, [x1, x2]
    175c:	cbz	w1, 167c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xac>
    1760:	mov	x2, x19
    1764:	mov	w1, #0x0                   	// #0
    1768:	bl	0 <memset>
    176c:	b	167c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xac>
    1770:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1774:	mov	x2, x20
    1778:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    177c:	add	x0, x0, #0x0
    1780:	ldr	x1, [x1]
    1784:	ldr	x1, [x1]
    1788:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    178c:	ldr	x21, [x23, #3520]
    1790:	sub	x0, x21, #0x1
    1794:	tst	x20, x0
    1798:	b.eq	16b4 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xe4>  // b.none
    179c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    17a0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    17a4:	add	x2, x2, #0x0
    17a8:	add	x0, x0, #0x0
    17ac:	mov	x4, #0x0                   	// #0
    17b0:	mov	x3, #0x0                   	// #0
    17b4:	mov	w1, #0xb1                  	// #177
    17b8:	str	x25, [sp, #48]
    17bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    17c0:	bl	0 <_ZN11__sanitizer23SetAllocatorOutOfMemoryEv>
    17c4:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    17c8:	tst	w0, #0xff
    17cc:	b.eq	18b4 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2e4>  // b.none
    17d0:	ldp	x23, x24, [sp, #32]
    17d4:	b	1618 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x48>
    17d8:	ldr	x0, [x2, x25, lsl #3]
    17dc:	dmb	ish
    17e0:	cbz	x0, 1894 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2c4>
    17e4:	ldrb	w0, [x0, x23]
    17e8:	cbz	w0, 1894 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2c4>
    17ec:	and	x1, x20, #0xfffffffffff00000
    17f0:	ldr	x0, [x2, x25, lsl #3]
    17f4:	dmb	ish
    17f8:	cbz	x0, 188c <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2bc>
    17fc:	ldrb	w3, [x0, x23]
    1800:	mov	w2, #0x200                 	// #512
    1804:	cmp	w3, #0x35
    1808:	and	x0, x3, #0xff
    180c:	b.eq	1838 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x268>  // b.none
    1810:	lsl	w2, w3, #4
    1814:	cmp	x0, #0x10
    1818:	b.ls	1838 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x268>  // b.plast
    181c:	sub	x0, x0, #0x10
    1820:	mov	x2, #0x100                 	// #256
    1824:	and	x3, x0, #0x3
    1828:	lsr	x0, x0, #2
    182c:	lsl	x2, x2, x0
    1830:	lsr	x0, x2, #2
    1834:	madd	w2, w0, w3, w2
    1838:	sub	w0, w20, w1
    183c:	add	x1, x1, #0x100, lsl #12
    1840:	udiv	w0, w0, w2
    1844:	add	x0, x0, #0x1
    1848:	cmp	x1, x0, lsl #4
    184c:	lsl	x0, x0, #4
    1850:	b.ne	18c4 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x2f4>  // b.any
    1854:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1858:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    185c:	add	x2, x2, #0x0
    1860:	add	x0, x0, #0x0
    1864:	mov	x4, #0x0                   	// #0
    1868:	mov	x3, #0x0                   	// #0
    186c:	mov	w1, #0x3f                  	// #63
    1870:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1874:	ldr	x1, [x21]
    1878:	mov	x2, x22
    187c:	mov	x0, x19
    1880:	stp	x23, x24, [sp, #32]
    1884:	str	x25, [sp, #48]
    1888:	bl	0 <_ZN11__sanitizer26ReportAllocationSizeTooBigEmmPKNS_10StackTraceE>
    188c:	mov	w2, #0x0                   	// #0
    1890:	b	1838 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0x268>
    1894:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1898:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    189c:	add	x2, x2, #0x0
    18a0:	add	x0, x0, #0x0
    18a4:	mov	x4, #0x0                   	// #0
    18a8:	mov	x3, #0x0                   	// #0
    18ac:	mov	w1, #0x9c                  	// #156
    18b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    18b4:	mov	x1, x22
    18b8:	mov	x0, x19
    18bc:	str	x25, [sp, #48]
    18c0:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>
    18c4:	sub	x21, x1, x0
    18c8:	ldr	x25, [sp, #48]
    18cc:	b	16bc <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb+0xec>

00000000000018d0 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE>:
    18d0:	stp	x19, x20, [sp, #-48]!
    18d4:	mov	x19, x1
    18d8:	str	x30, [sp, #24]
    18dc:	cbnz	x1, 1904 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x34>
    18e0:	str	x3, [sp, #40]
    18e4:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    18e8:	tst	w0, #0xff
    18ec:	mov	w0, #0x16                  	// #22
    18f0:	ldr	x3, [sp, #40]
    18f4:	b.eq	198c <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0xbc>  // b.none
    18f8:	ldr	x30, [sp, #24]
    18fc:	ldp	x19, x20, [sp], #48
    1900:	ret
    1904:	str	x21, [sp, #16]
    1908:	sub	x21, x1, #0x1
    190c:	mov	x20, x0
    1910:	orr	x0, x21, #0x7
    1914:	tst	x0, x1
    1918:	b.eq	1924 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x54>  // b.none
    191c:	ldr	x21, [sp, #16]
    1920:	b	18e0 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x10>
    1924:	mov	x1, x2
    1928:	mov	x0, x3
    192c:	mov	x2, x19
    1930:	mov	w3, #0x1                   	// #1
    1934:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1938:	mov	x1, x0
    193c:	cbz	x0, 1960 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x90>
    1940:	tst	x0, x21
    1944:	b.ne	196c <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x9c>  // b.any
    1948:	ldr	x21, [sp, #16]
    194c:	str	x1, [x20]
    1950:	mov	w0, #0x0                   	// #0
    1954:	ldr	x30, [sp, #24]
    1958:	ldp	x19, x20, [sp], #48
    195c:	ret
    1960:	mov	w0, #0xc                   	// #12
    1964:	ldr	x21, [sp, #16]
    1968:	b	18f8 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE+0x28>
    196c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1970:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1974:	add	x2, x2, #0x0
    1978:	add	x0, x0, #0x0
    197c:	mov	x4, #0x0                   	// #0
    1980:	mov	x3, #0x0                   	// #0
    1984:	mov	w1, #0x9e                  	// #158
    1988:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    198c:	mov	x1, x3
    1990:	mov	x0, x19
    1994:	str	x21, [sp, #16]
    1998:	bl	0 <_ZN11__sanitizer35ReportInvalidPosixMemalignAlignmentEmPKNS_10StackTraceE>
    199c:	nop

00000000000019a0 <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE>:
    19a0:	stp	x19, x20, [sp, #-48]!
    19a4:	mov	x19, x0
    19a8:	stp	x21, x22, [sp, #16]
    19ac:	mov	x21, x2
    19b0:	mov	x22, x1
    19b4:	str	x30, [sp, #32]
    19b8:	cbnz	x0, 19ec <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE+0x4c>
    19bc:	bl	0 <__errno_location>
    19c0:	mov	x20, #0x0                   	// #0
    19c4:	mov	w1, #0x16                  	// #22
    19c8:	str	w1, [x0]
    19cc:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    19d0:	tst	w0, #0xff
    19d4:	b.eq	1a1c <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE+0x7c>  // b.none
    19d8:	mov	x0, x20
    19dc:	ldp	x21, x22, [sp, #16]
    19e0:	ldr	x30, [sp, #32]
    19e4:	ldp	x19, x20, [sp], #48
    19e8:	ret
    19ec:	sub	x0, x0, #0x1
    19f0:	orr	x2, x19, x1
    19f4:	tst	x0, x2
    19f8:	b.ne	19bc <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE+0x1c>  // b.any
    19fc:	mov	x2, x19
    1a00:	mov	x0, x21
    1a04:	mov	w3, #0x1                   	// #1
    1a08:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1a0c:	mov	x20, x0
    1a10:	cbnz	x0, 19d8 <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE+0x38>
    1a14:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1a18:	b	19d8 <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE+0x38>
    1a1c:	mov	x2, x21
    1a20:	mov	x1, x19
    1a24:	mov	x0, x22
    1a28:	bl	0 <_ZN11__sanitizer34ReportInvalidAlignedAllocAlignmentEmmPKNS_10StackTraceE>
    1a2c:	nop

0000000000001a30 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>:
    1a30:	stp	x19, x20, [sp, #-32]!
    1a34:	mov	x19, x0
    1a38:	sub	x0, x0, #0x1
    1a3c:	stp	x21, x30, [sp, #16]
    1a40:	tst	x0, x19
    1a44:	mov	x21, x2
    1a48:	b.ne	1a74 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE+0x44>  // b.any
    1a4c:	mov	x2, x19
    1a50:	mov	x0, x21
    1a54:	mov	w3, #0x1                   	// #1
    1a58:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1a5c:	mov	x20, x0
    1a60:	cbz	x0, 1a9c <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE+0x6c>
    1a64:	mov	x0, x20
    1a68:	ldp	x21, x30, [sp, #16]
    1a6c:	ldp	x19, x20, [sp], #32
    1a70:	ret
    1a74:	bl	0 <__errno_location>
    1a78:	mov	x20, #0x0                   	// #0
    1a7c:	mov	w1, #0x16                  	// #22
    1a80:	str	w1, [x0]
    1a84:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    1a88:	tst	w0, #0xff
    1a8c:	b.ne	1a64 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE+0x34>  // b.any
    1a90:	mov	x1, x21
    1a94:	mov	x0, x19
    1a98:	bl	0 <_ZN11__sanitizer32ReportInvalidAllocationAlignmentEmPKNS_10StackTraceE>
    1a9c:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1aa0:	b	1a64 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE+0x34>
    1aa4:	nop

0000000000001aa8 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>:
    1aa8:	str	x30, [sp, #-32]!
    1aac:	mov	x2, x0
    1ab0:	mov	w3, #0x1                   	// #1
    1ab4:	mov	x0, x1
    1ab8:	mov	x1, x2
    1abc:	mov	x2, #0x1                   	// #1
    1ac0:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1ac4:	cbz	x0, 1ad0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE+0x28>
    1ac8:	ldr	x30, [sp], #32
    1acc:	ret
    1ad0:	str	x0, [sp, #24]
    1ad4:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1ad8:	ldr	x0, [sp, #24]
    1adc:	ldr	x30, [sp], #32
    1ae0:	ret
    1ae4:	nop

0000000000001ae8 <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE>:
    1ae8:	stp	x19, x30, [sp, #-32]!
    1aec:	mov	x19, x0
    1af0:	cbz	x1, 1afc <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE+0x14>
    1af4:	umulh	x0, x0, x1
    1af8:	cbnz	x0, 1b2c <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE+0x44>
    1afc:	mul	x1, x19, x1
    1b00:	mov	x0, x2
    1b04:	mov	w3, #0x1                   	// #1
    1b08:	mov	x2, #0x1                   	// #1
    1b0c:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1b10:	cbz	x0, 1b1c <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE+0x34>
    1b14:	ldp	x19, x30, [sp], #32
    1b18:	ret
    1b1c:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1b20:	mov	x0, #0x0                   	// #0
    1b24:	ldp	x19, x30, [sp], #32
    1b28:	ret
    1b2c:	stp	x1, x2, [sp, #16]
    1b30:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    1b34:	tst	w0, #0xff
    1b38:	ldp	x1, x2, [sp, #16]
    1b3c:	b.ne	1b1c <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE+0x34>  // b.any
    1b40:	mov	x0, x19
    1b44:	bl	0 <_ZN11__sanitizer20ReportCallocOverflowEmmPKNS_10StackTraceE>

0000000000001b48 <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE>:
    1b48:	stp	x19, x20, [sp, #-48]!
    1b4c:	adrp	x19, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1b50:	mov	x20, x1
    1b54:	ldr	x19, [x19]
    1b58:	stp	x21, x30, [sp, #16]
    1b5c:	mov	x21, x0
    1b60:	ldr	x2, [x19]
    1b64:	cbz	x2, 1b88 <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE+0x40>
    1b68:	mov	x1, x21
    1b6c:	mov	x0, x20
    1b70:	mov	w3, #0x1                   	// #1
    1b74:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1b78:	cbz	x0, 1ba8 <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE+0x60>
    1b7c:	ldp	x21, x30, [sp, #16]
    1b80:	ldp	x19, x20, [sp], #48
    1b84:	ret
    1b88:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1b8c:	mov	x2, x0
    1b90:	mov	x1, x21
    1b94:	mov	w3, #0x1                   	// #1
    1b98:	str	x0, [x19]
    1b9c:	mov	x0, x20
    1ba0:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1ba4:	cbnz	x0, 1b7c <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE+0x34>
    1ba8:	str	x0, [sp, #40]
    1bac:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1bb0:	ldp	x21, x30, [sp, #16]
    1bb4:	ldr	x0, [sp, #40]
    1bb8:	ldp	x19, x20, [sp], #48
    1bbc:	ret

0000000000001bc0 <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE>:
    1bc0:	stp	x19, x20, [sp, #-32]!
    1bc4:	adrp	x20, 0 <_ZN11__sanitizer14PageSizeCachedE>
    1bc8:	mov	x19, x0
    1bcc:	ldr	x20, [x20]
    1bd0:	stp	x21, x30, [sp, #16]
    1bd4:	mov	x21, x1
    1bd8:	ldr	x2, [x20]
    1bdc:	cbz	x2, 1c2c <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x6c>
    1be0:	sub	x3, x2, #0x1
    1be4:	tst	x2, x3
    1be8:	b.ne	1c44 <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x84>  // b.any
    1bec:	add	x3, x19, x3
    1bf0:	neg	x1, x2
    1bf4:	and	x1, x3, x1
    1bf8:	cmp	x19, x1
    1bfc:	b.hi	1c54 <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x94>  // b.pmore
    1c00:	cmp	x19, #0x0
    1c04:	mov	x0, x21
    1c08:	csel	x1, x1, x2, ne  // ne = any
    1c0c:	mov	w3, #0x1                   	// #1
    1c10:	bl	15d0 <_ZN6__lsan8AllocateERKN11__sanitizer10StackTraceEmmb>
    1c14:	mov	x20, x0
    1c18:	cbz	x0, 1c7c <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0xbc>
    1c1c:	mov	x0, x20
    1c20:	ldp	x21, x30, [sp, #16]
    1c24:	ldp	x19, x20, [sp], #32
    1c28:	ret
    1c2c:	bl	0 <_ZN11__sanitizer11GetPageSizeEv>
    1c30:	mov	x2, x0
    1c34:	str	x0, [x20]
    1c38:	sub	x3, x2, #0x1
    1c3c:	tst	x2, x3
    1c40:	b.eq	1bec <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x2c>  // b.none
    1c44:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1c48:	add	x0, x0, #0x0
    1c4c:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    1c50:	bl	0 <_ZN11__sanitizer3DieEv>
    1c54:	bl	0 <__errno_location>
    1c58:	mov	x20, #0x0                   	// #0
    1c5c:	mov	w1, #0xc                   	// #12
    1c60:	str	w1, [x0]
    1c64:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    1c68:	tst	w0, #0xff
    1c6c:	b.ne	1c1c <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x5c>  // b.any
    1c70:	mov	x1, x21
    1c74:	mov	x0, x19
    1c78:	bl	0 <_ZN11__sanitizer21ReportPvallocOverflowEmPKNS_10StackTraceE>
    1c7c:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    1c80:	b	1c1c <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE+0x5c>
    1c84:	nop

0000000000001c88 <_ZN6__lsan21AllocatorThreadFinishEv>:
    1c88:	stp	x19, x20, [sp, #-48]!
    1c8c:	mov	x20, #0x1                   	// #1
    1c90:	stp	x21, x22, [sp, #16]
    1c94:	adrp	x22, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1c98:	add	x22, x22, #0x0
    1c9c:	str	x30, [sp, #32]
    1ca0:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    1ca4:	mov	x21, x0
    1ca8:	add	x19, x0, #0x400
    1cac:	b	1cc4 <_ZN6__lsan21AllocatorThreadFinishEv+0x3c>
    1cb0:	mov	x3, x20
    1cb4:	mov	x2, x22
    1cb8:	mov	x1, x19
    1cbc:	mov	x0, x21
    1cc0:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    1cc4:	ldr	x0, [x19]
    1cc8:	cbnz	x0, 1cb0 <_ZN6__lsan21AllocatorThreadFinishEv+0x28>
    1ccc:	add	x20, x20, #0x1
    1cd0:	add	x19, x19, #0x400
    1cd4:	cmp	x20, #0x36
    1cd8:	b.ne	1cc4 <_ZN6__lsan21AllocatorThreadFinishEv+0x3c>  // b.any
    1cdc:	ldp	x21, x22, [sp, #16]
    1ce0:	ldr	x30, [sp, #32]
    1ce4:	ldp	x19, x20, [sp], #48
    1ce8:	ret
    1cec:	nop

0000000000001cf0 <_ZN6__lsan9lsan_freeEPv>:
    1cf0:	adrp	x1, 0 <__sanitizer_free_hook>
    1cf4:	stp	x19, x20, [sp, #-64]!
    1cf8:	mov	x19, x0
    1cfc:	ldr	x1, [x1]
    1d00:	str	x30, [sp, #40]
    1d04:	cbz	x1, 1d0c <_ZN6__lsan9lsan_freeEPv+0x1c>
    1d08:	bl	0 <__sanitizer_free_hook>
    1d0c:	mov	x0, x19
    1d10:	bl	0 <_ZN11__sanitizer12RunFreeHooksEPKv>
    1d14:	cbz	x19, 1f8c <_ZN6__lsan9lsan_freeEPv+0x29c>
    1d18:	stp	x21, x22, [sp, #16]
    1d1c:	mov	x0, #0xffffffffffff        	// #281474976710655
    1d20:	cmp	x19, x0
    1d24:	b.ls	1e28 <_ZN6__lsan9lsan_freeEPv+0x138>  // b.plast
    1d28:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1d2c:	add	x21, x20, #0x0
    1d30:	add	x21, x21, #0x80, lsl #12
    1d34:	ldr	x0, [x21, #3520]
    1d38:	sub	x1, x0, #0x1
    1d3c:	tst	x19, x1
    1d40:	b.ne	1f0c <_ZN6__lsan9lsan_freeEPv+0x21c>  // b.any
    1d44:	sub	x0, x19, x0
    1d48:	strb	wzr, [x0, #32]
    1d4c:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    1d50:	add	x0, x20, #0x0
    1d54:	add	x0, x0, #0x80, lsl #12
    1d58:	ldr	x4, [x0, #3520]
    1d5c:	sub	x0, x4, #0x1
    1d60:	tst	x19, x0
    1d64:	b.ne	2058 <_ZN6__lsan9lsan_freeEPv+0x368>  // b.any
    1d68:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1d6c:	sub	x19, x19, x4
    1d70:	add	x0, x0, #0x0
    1d74:	mov	w2, #0x1                   	// #1
    1d78:	ldxrb	w1, [x0]
    1d7c:	stxrb	w3, w2, [x0]
    1d80:	cbnz	w3, 1d78 <_ZN6__lsan9lsan_freeEPv+0x88>
    1d84:	dmb	ish
    1d88:	tst	w1, #0xff
    1d8c:	b.eq	1d94 <_ZN6__lsan9lsan_freeEPv+0xa4>  // b.none
    1d90:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    1d94:	add	x20, x20, #0x0
    1d98:	add	x0, x20, #0x80, lsl #12
    1d9c:	ldr	x1, [x19, #24]
    1da0:	ldr	x2, [x0, #3528]
    1da4:	ldr	x3, [x2, x1, lsl #3]
    1da8:	cmp	x3, x19
    1dac:	b.ne	207c <_ZN6__lsan9lsan_freeEPv+0x38c>  // b.any
    1db0:	ldr	x4, [x0, #3576]
    1db4:	cmp	x1, x4
    1db8:	b.cs	209c <_ZN6__lsan9lsan_freeEPv+0x3ac>  // b.hs, b.nlast
    1dbc:	sub	x4, x4, #0x1
    1dc0:	ldr	x3, [x19, #8]
    1dc4:	str	x4, [x0, #3576]
    1dc8:	ldr	x4, [x2, x4, lsl #3]
    1dcc:	str	x4, [x2, x1, lsl #3]
    1dd0:	ldr	x2, [x0, #4160]
    1dd4:	str	x1, [x4, #24]
    1dd8:	sub	x2, x2, x3
    1ddc:	str	x2, [x0, #4160]
    1de0:	ldr	x4, [x0, #3600]
    1de4:	strb	wzr, [x0, #3584]
    1de8:	ldr	x2, [x0, #3608]
    1dec:	add	x4, x4, #0x1
    1df0:	ldr	x1, [x0, #4168]
    1df4:	sub	x2, x2, x3
    1df8:	str	x4, [x0, #3600]
    1dfc:	sub	x1, x1, x3
    1e00:	str	x2, [x0, #3608]
    1e04:	str	x1, [x0, #4168]
    1e08:	dmb	ish
    1e0c:	add	x20, x20, #0x81, lsl #12
    1e10:	strb	wzr, [x20, #40]
    1e14:	ldp	x0, x1, [x19]
    1e18:	ldp	x21, x22, [sp, #16]
    1e1c:	ldr	x30, [sp, #40]
    1e20:	ldp	x19, x20, [sp], #64
    1e24:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    1e28:	lsr	x21, x19, #32
    1e2c:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1e30:	add	x1, x20, #0x0
    1e34:	ldr	x0, [x1, x21, lsl #3]
    1e38:	dmb	ish
    1e3c:	cbz	x0, 1e4c <_ZN6__lsan9lsan_freeEPv+0x15c>
    1e40:	lsr	w2, w19, #20
    1e44:	ldrb	w0, [x0, x2]
    1e48:	cbnz	w0, 1f98 <_ZN6__lsan9lsan_freeEPv+0x2a8>
    1e4c:	add	x22, x20, #0x0
    1e50:	add	x22, x22, #0x80, lsl #12
    1e54:	ldr	x0, [x22, #3520]
    1e58:	sub	x1, x0, #0x1
    1e5c:	tst	x19, x1
    1e60:	b.ne	1f5c <_ZN6__lsan9lsan_freeEPv+0x26c>  // b.any
    1e64:	sub	x0, x19, x0
    1e68:	strb	wzr, [x0, #32]
    1e6c:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    1e70:	add	x2, x20, #0x0
    1e74:	ldr	x1, [x2, x21, lsl #3]
    1e78:	dmb	ish
    1e7c:	cbz	x1, 1d50 <_ZN6__lsan9lsan_freeEPv+0x60>
    1e80:	lsr	w3, w19, #20
    1e84:	ldrb	w1, [x1, x3]
    1e88:	cbz	w1, 1d50 <_ZN6__lsan9lsan_freeEPv+0x60>
    1e8c:	str	x23, [sp, #32]
    1e90:	ldr	x1, [x2, x21, lsl #3]
    1e94:	dmb	ish
    1e98:	cbz	x1, 2038 <_ZN6__lsan9lsan_freeEPv+0x348>
    1e9c:	ldrb	w21, [x1, x3]
    1ea0:	cbz	x21, 2038 <_ZN6__lsan9lsan_freeEPv+0x348>
    1ea4:	cmp	x21, #0x35
    1ea8:	b.hi	20e4 <_ZN6__lsan9lsan_freeEPv+0x3f4>  // b.pmore
    1eac:	lsl	x23, x21, #10
    1eb0:	add	x22, x0, x23
    1eb4:	ldr	x1, [x22, #8]
    1eb8:	cbz	x1, 2104 <_ZN6__lsan9lsan_freeEPv+0x414>
    1ebc:	ldr	x2, [x22]
    1ec0:	cmp	x2, x1
    1ec4:	b.eq	21e0 <_ZN6__lsan9lsan_freeEPv+0x4f0>  // b.none
    1ec8:	add	x21, x2, x21, lsl #7
    1ecc:	add	x23, x0, x23
    1ed0:	add	x21, x21, #0x4
    1ed4:	add	x2, x2, #0x1
    1ed8:	mov	x3, #0xd800                	// #55296
    1edc:	add	x1, x0, x3
    1ee0:	ldr	x30, [sp, #40]
    1ee4:	str	x2, [x22]
    1ee8:	str	x19, [x0, x21, lsl #3]
    1eec:	ldr	x0, [x1, #16]
    1ef0:	ldr	x2, [x23, #16]
    1ef4:	ldp	x21, x22, [sp, #16]
    1ef8:	sub	x0, x0, x2
    1efc:	ldr	x23, [sp, #32]
    1f00:	str	x0, [x1, #16]
    1f04:	ldp	x19, x20, [sp], #64
    1f08:	ret
    1f0c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1f10:	mov	x2, x19
    1f14:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1f18:	add	x0, x0, #0x0
    1f1c:	ldr	x1, [x1]
    1f20:	ldr	x1, [x1]
    1f24:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1f28:	ldr	x0, [x21, #3520]
    1f2c:	sub	x1, x0, #0x1
    1f30:	tst	x19, x1
    1f34:	b.eq	1d44 <_ZN6__lsan9lsan_freeEPv+0x54>  // b.none
    1f38:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1f3c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1f40:	add	x2, x2, #0x0
    1f44:	add	x0, x0, #0x0
    1f48:	mov	x4, #0x0                   	// #0
    1f4c:	mov	x3, #0x0                   	// #0
    1f50:	mov	w1, #0xb1                  	// #177
    1f54:	str	x23, [sp, #32]
    1f58:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1f5c:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    1f60:	mov	x2, x19
    1f64:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    1f68:	add	x0, x0, #0x0
    1f6c:	ldr	x1, [x1]
    1f70:	ldr	x1, [x1]
    1f74:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    1f78:	ldr	x0, [x22, #3520]
    1f7c:	sub	x1, x0, #0x1
    1f80:	tst	x19, x1
    1f84:	b.eq	1e64 <_ZN6__lsan9lsan_freeEPv+0x174>  // b.none
    1f88:	b	1f38 <_ZN6__lsan9lsan_freeEPv+0x248>
    1f8c:	ldr	x30, [sp, #40]
    1f90:	ldp	x19, x20, [sp], #64
    1f94:	b	0 <_ZN6__lsan17GetAllocatorCacheEv>
    1f98:	str	x23, [sp, #32]
    1f9c:	ldr	x0, [x1, x21, lsl #3]
    1fa0:	dmb	ish
    1fa4:	cbz	x0, 20c4 <_ZN6__lsan9lsan_freeEPv+0x3d4>
    1fa8:	ldrb	w0, [x0, x2]
    1fac:	cbz	w0, 20c4 <_ZN6__lsan9lsan_freeEPv+0x3d4>
    1fb0:	and	x3, x19, #0xfffffffffff00000
    1fb4:	ldr	x0, [x1, x21, lsl #3]
    1fb8:	dmb	ish
    1fbc:	cbz	x0, 20bc <_ZN6__lsan9lsan_freeEPv+0x3cc>
    1fc0:	ldrb	w0, [x0, x2]
    1fc4:	mov	w2, #0x200                 	// #512
    1fc8:	cmp	w0, #0x35
    1fcc:	and	x1, x0, #0xff
    1fd0:	b.eq	1ffc <_ZN6__lsan9lsan_freeEPv+0x30c>  // b.none
    1fd4:	lsl	w2, w0, #4
    1fd8:	cmp	x1, #0x10
    1fdc:	b.ls	1ffc <_ZN6__lsan9lsan_freeEPv+0x30c>  // b.plast
    1fe0:	sub	x1, x1, #0x10
    1fe4:	mov	x2, #0x100                 	// #256
    1fe8:	and	x4, x1, #0x3
    1fec:	lsr	x1, x1, #2
    1ff0:	lsl	x1, x2, x1
    1ff4:	lsr	x0, x1, #2
    1ff8:	madd	w2, w0, w4, w1
    1ffc:	sub	w0, w19, w3
    2000:	add	x3, x3, #0x100, lsl #12
    2004:	udiv	w0, w0, w2
    2008:	add	x0, x0, #0x1
    200c:	cmp	x3, x0, lsl #4
    2010:	lsl	x0, x0, #4
    2014:	b.ne	2200 <_ZN6__lsan9lsan_freeEPv+0x510>  // b.any
    2018:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    201c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2020:	add	x2, x2, #0x0
    2024:	add	x0, x0, #0x0
    2028:	mov	x4, #0x0                   	// #0
    202c:	mov	x3, #0x0                   	// #0
    2030:	mov	w1, #0x49                  	// #73
    2034:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2038:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    203c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2040:	add	x2, x2, #0x0
    2044:	add	x0, x0, #0x0
    2048:	mov	x4, #0x0                   	// #0
    204c:	mov	x3, #0x0                   	// #0
    2050:	mov	w1, #0xa8                  	// #168
    2054:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2058:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    205c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2060:	add	x2, x2, #0x0
    2064:	add	x0, x0, #0x0
    2068:	mov	x4, #0x0                   	// #0
    206c:	mov	x3, #0x0                   	// #0
    2070:	mov	w1, #0x12d                 	// #301
    2074:	str	x23, [sp, #32]
    2078:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    207c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2080:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2084:	mov	x4, x19
    2088:	add	x2, x2, #0x0
    208c:	add	x0, x0, #0x0
    2090:	mov	w1, #0x8b                  	// #139
    2094:	str	x23, [sp, #32]
    2098:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    209c:	mov	x3, x1
    20a0:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20a4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20a8:	add	x2, x2, #0x0
    20ac:	add	x0, x0, #0x0
    20b0:	mov	w1, #0x8c                  	// #140
    20b4:	str	x23, [sp, #32]
    20b8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    20bc:	mov	w2, #0x0                   	// #0
    20c0:	b	1ffc <_ZN6__lsan9lsan_freeEPv+0x30c>
    20c4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20c8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20cc:	add	x2, x2, #0x0
    20d0:	add	x0, x0, #0x0
    20d4:	mov	x4, #0x0                   	// #0
    20d8:	mov	x3, #0x0                   	// #0
    20dc:	mov	w1, #0x9c                  	// #156
    20e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    20e4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20e8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    20ec:	mov	x3, x21
    20f0:	add	x2, x2, #0x0
    20f4:	add	x0, x0, #0x0
    20f8:	mov	x4, #0x36                  	// #54
    20fc:	mov	w1, #0xa9                  	// #169
    2100:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2104:	mov	x4, #0x1                   	// #1
    2108:	mov	x11, x4
    210c:	mov	x12, #0x7c                  	// #124
    2110:	mov	x10, #0x14                  	// #20
    2114:	mov	x9, #0x100                 	// #256
    2118:	mov	w8, #0x4000                	// #16384
    211c:	mov	x1, #0x3e                  	// #62
    2120:	add	x6, x0, x4, lsl #10
    2124:	lsl	x7, x4, #4
    2128:	mov	x5, x6
    212c:	mov	x2, #0x14                  	// #20
    2130:	mov	x3, x4
    2134:	add	x4, x4, #0x1
    2138:	stp	x12, x7, [x6, #8]
    213c:	cmp	x4, #0x36
    2140:	str	x2, [x5, #24]
    2144:	b.eq	21b4 <_ZN6__lsan9lsan_freeEPv+0x4c4>  // b.none
    2148:	cmp	x4, #0x35
    214c:	b.eq	21bc <_ZN6__lsan9lsan_freeEPv+0x4cc>  // b.none
    2150:	cmp	x4, #0x10
    2154:	b.ls	2120 <_ZN6__lsan9lsan_freeEPv+0x430>  // b.plast
    2158:	sub	x2, x3, #0xf
    215c:	add	x5, x5, #0x400
    2160:	and	x7, x2, #0x3
    2164:	mov	x3, x4
    2168:	lsr	x2, x2, #2
    216c:	add	x4, x4, #0x1
    2170:	lsl	x2, x9, x2
    2174:	lsr	x6, x2, #2
    2178:	madd	x6, x6, x7, x2
    217c:	str	x6, [x5, #16]
    2180:	udiv	w2, w8, w6
    2184:	cmp	x2, #0x0
    2188:	csel	x2, x2, x11, ne  // ne = any
    218c:	cmp	x2, #0x3e
    2190:	csel	x2, x2, x1, ls  // ls = plast
    2194:	add	x7, x2, #0x2
    2198:	lsl	x2, x2, #1
    219c:	str	x2, [x5, #8]
    21a0:	cmp	x6, x7, lsl #3
    21a4:	csel	x2, x10, xzr, cc  // cc = lo, ul, last
    21a8:	str	x2, [x5, #24]
    21ac:	cmp	x4, #0x36
    21b0:	b.ne	2148 <_ZN6__lsan9lsan_freeEPv+0x458>  // b.any
    21b4:	ldr	x1, [x22, #8]
    21b8:	b	1ebc <_ZN6__lsan9lsan_freeEPv+0x1cc>
    21bc:	adrp	x1, 0 <_ZN6__lsan19InitializeAllocatorEv>
    21c0:	ldr	q0, [x1]
    21c4:	mov	x1, #0xd400                	// #54272
    21c8:	add	x2, x0, x1
    21cc:	add	x1, x0, #0x8, lsl #12
    21d0:	stur	q0, [x2, #8]
    21d4:	str	xzr, [x1, #21528]
    21d8:	ldr	x1, [x22, #8]
    21dc:	b	1ebc <_ZN6__lsan9lsan_freeEPv+0x1cc>
    21e0:	add	x2, x20, #0x0
    21e4:	mov	x3, x21
    21e8:	mov	x1, x22
    21ec:	str	x0, [sp, #56]
    21f0:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    21f4:	ldr	x2, [x22]
    21f8:	ldr	x0, [sp, #56]
    21fc:	b	1ec8 <_ZN6__lsan9lsan_freeEPv+0x1d8>
    2200:	sub	x0, x3, x0
    2204:	strb	wzr, [x0]
    2208:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    220c:	ldr	x23, [sp, #32]
    2210:	b	1e70 <_ZN6__lsan9lsan_freeEPv+0x180>
    2214:	nop

0000000000002218 <_ZN6__lsan10DeallocateEPv>:
    2218:	adrp	x1, 0 <__sanitizer_free_hook>
    221c:	stp	x19, x20, [sp, #-64]!
    2220:	mov	x19, x0
    2224:	ldr	x1, [x1]
    2228:	str	x30, [sp, #40]
    222c:	cbz	x1, 2234 <_ZN6__lsan10DeallocateEPv+0x1c>
    2230:	bl	0 <__sanitizer_free_hook>
    2234:	mov	x0, x19
    2238:	bl	0 <_ZN11__sanitizer12RunFreeHooksEPKv>
    223c:	cbz	x19, 24b4 <_ZN6__lsan10DeallocateEPv+0x29c>
    2240:	stp	x21, x22, [sp, #16]
    2244:	mov	x0, #0xffffffffffff        	// #281474976710655
    2248:	cmp	x19, x0
    224c:	b.ls	2350 <_ZN6__lsan10DeallocateEPv+0x138>  // b.plast
    2250:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2254:	add	x21, x20, #0x0
    2258:	add	x21, x21, #0x80, lsl #12
    225c:	ldr	x0, [x21, #3520]
    2260:	sub	x1, x0, #0x1
    2264:	tst	x19, x1
    2268:	b.ne	2434 <_ZN6__lsan10DeallocateEPv+0x21c>  // b.any
    226c:	sub	x0, x19, x0
    2270:	strb	wzr, [x0, #32]
    2274:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2278:	add	x0, x20, #0x0
    227c:	add	x0, x0, #0x80, lsl #12
    2280:	ldr	x4, [x0, #3520]
    2284:	sub	x0, x4, #0x1
    2288:	tst	x19, x0
    228c:	b.ne	2580 <_ZN6__lsan10DeallocateEPv+0x368>  // b.any
    2290:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2294:	sub	x19, x19, x4
    2298:	add	x0, x0, #0x0
    229c:	mov	w2, #0x1                   	// #1
    22a0:	ldxrb	w1, [x0]
    22a4:	stxrb	w3, w2, [x0]
    22a8:	cbnz	w3, 22a0 <_ZN6__lsan10DeallocateEPv+0x88>
    22ac:	dmb	ish
    22b0:	tst	w1, #0xff
    22b4:	b.eq	22bc <_ZN6__lsan10DeallocateEPv+0xa4>  // b.none
    22b8:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    22bc:	add	x20, x20, #0x0
    22c0:	add	x0, x20, #0x80, lsl #12
    22c4:	ldr	x1, [x19, #24]
    22c8:	ldr	x2, [x0, #3528]
    22cc:	ldr	x3, [x2, x1, lsl #3]
    22d0:	cmp	x3, x19
    22d4:	b.ne	25a4 <_ZN6__lsan10DeallocateEPv+0x38c>  // b.any
    22d8:	ldr	x4, [x0, #3576]
    22dc:	cmp	x1, x4
    22e0:	b.cs	25c4 <_ZN6__lsan10DeallocateEPv+0x3ac>  // b.hs, b.nlast
    22e4:	sub	x4, x4, #0x1
    22e8:	ldr	x3, [x19, #8]
    22ec:	str	x4, [x0, #3576]
    22f0:	ldr	x4, [x2, x4, lsl #3]
    22f4:	str	x4, [x2, x1, lsl #3]
    22f8:	ldr	x2, [x0, #4160]
    22fc:	str	x1, [x4, #24]
    2300:	sub	x2, x2, x3
    2304:	str	x2, [x0, #4160]
    2308:	ldr	x4, [x0, #3600]
    230c:	strb	wzr, [x0, #3584]
    2310:	ldr	x2, [x0, #3608]
    2314:	add	x4, x4, #0x1
    2318:	ldr	x1, [x0, #4168]
    231c:	sub	x2, x2, x3
    2320:	str	x4, [x0, #3600]
    2324:	sub	x1, x1, x3
    2328:	str	x2, [x0, #3608]
    232c:	str	x1, [x0, #4168]
    2330:	dmb	ish
    2334:	add	x20, x20, #0x81, lsl #12
    2338:	strb	wzr, [x20, #40]
    233c:	ldp	x0, x1, [x19]
    2340:	ldp	x21, x22, [sp, #16]
    2344:	ldr	x30, [sp, #40]
    2348:	ldp	x19, x20, [sp], #64
    234c:	b	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2350:	lsr	x21, x19, #32
    2354:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2358:	add	x1, x20, #0x0
    235c:	ldr	x0, [x1, x21, lsl #3]
    2360:	dmb	ish
    2364:	cbz	x0, 2374 <_ZN6__lsan10DeallocateEPv+0x15c>
    2368:	lsr	w2, w19, #20
    236c:	ldrb	w0, [x0, x2]
    2370:	cbnz	w0, 24c0 <_ZN6__lsan10DeallocateEPv+0x2a8>
    2374:	add	x22, x20, #0x0
    2378:	add	x22, x22, #0x80, lsl #12
    237c:	ldr	x0, [x22, #3520]
    2380:	sub	x1, x0, #0x1
    2384:	tst	x19, x1
    2388:	b.ne	2484 <_ZN6__lsan10DeallocateEPv+0x26c>  // b.any
    238c:	sub	x0, x19, x0
    2390:	strb	wzr, [x0, #32]
    2394:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2398:	add	x2, x20, #0x0
    239c:	ldr	x1, [x2, x21, lsl #3]
    23a0:	dmb	ish
    23a4:	cbz	x1, 2278 <_ZN6__lsan10DeallocateEPv+0x60>
    23a8:	lsr	w3, w19, #20
    23ac:	ldrb	w1, [x1, x3]
    23b0:	cbz	w1, 2278 <_ZN6__lsan10DeallocateEPv+0x60>
    23b4:	str	x23, [sp, #32]
    23b8:	ldr	x1, [x2, x21, lsl #3]
    23bc:	dmb	ish
    23c0:	cbz	x1, 2560 <_ZN6__lsan10DeallocateEPv+0x348>
    23c4:	ldrb	w21, [x1, x3]
    23c8:	cbz	x21, 2560 <_ZN6__lsan10DeallocateEPv+0x348>
    23cc:	cmp	x21, #0x35
    23d0:	b.hi	260c <_ZN6__lsan10DeallocateEPv+0x3f4>  // b.pmore
    23d4:	lsl	x23, x21, #10
    23d8:	add	x22, x0, x23
    23dc:	ldr	x1, [x22, #8]
    23e0:	cbz	x1, 262c <_ZN6__lsan10DeallocateEPv+0x414>
    23e4:	ldr	x2, [x22]
    23e8:	cmp	x2, x1
    23ec:	b.eq	2708 <_ZN6__lsan10DeallocateEPv+0x4f0>  // b.none
    23f0:	add	x21, x2, x21, lsl #7
    23f4:	add	x23, x0, x23
    23f8:	add	x21, x21, #0x4
    23fc:	add	x2, x2, #0x1
    2400:	mov	x3, #0xd800                	// #55296
    2404:	add	x1, x0, x3
    2408:	ldr	x30, [sp, #40]
    240c:	str	x2, [x22]
    2410:	str	x19, [x0, x21, lsl #3]
    2414:	ldr	x0, [x1, #16]
    2418:	ldr	x2, [x23, #16]
    241c:	ldp	x21, x22, [sp, #16]
    2420:	sub	x0, x0, x2
    2424:	ldr	x23, [sp, #32]
    2428:	str	x0, [x1, #16]
    242c:	ldp	x19, x20, [sp], #64
    2430:	ret
    2434:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    2438:	mov	x2, x19
    243c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2440:	add	x0, x0, #0x0
    2444:	ldr	x1, [x1]
    2448:	ldr	x1, [x1]
    244c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2450:	ldr	x0, [x21, #3520]
    2454:	sub	x1, x0, #0x1
    2458:	tst	x19, x1
    245c:	b.eq	226c <_ZN6__lsan10DeallocateEPv+0x54>  // b.none
    2460:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2464:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2468:	add	x2, x2, #0x0
    246c:	add	x0, x0, #0x0
    2470:	mov	x4, #0x0                   	// #0
    2474:	mov	x3, #0x0                   	// #0
    2478:	mov	w1, #0xb1                  	// #177
    247c:	str	x23, [sp, #32]
    2480:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2484:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    2488:	mov	x2, x19
    248c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2490:	add	x0, x0, #0x0
    2494:	ldr	x1, [x1]
    2498:	ldr	x1, [x1]
    249c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    24a0:	ldr	x0, [x22, #3520]
    24a4:	sub	x1, x0, #0x1
    24a8:	tst	x19, x1
    24ac:	b.eq	238c <_ZN6__lsan10DeallocateEPv+0x174>  // b.none
    24b0:	b	2460 <_ZN6__lsan10DeallocateEPv+0x248>
    24b4:	ldr	x30, [sp, #40]
    24b8:	ldp	x19, x20, [sp], #64
    24bc:	b	0 <_ZN6__lsan17GetAllocatorCacheEv>
    24c0:	str	x23, [sp, #32]
    24c4:	ldr	x0, [x1, x21, lsl #3]
    24c8:	dmb	ish
    24cc:	cbz	x0, 25ec <_ZN6__lsan10DeallocateEPv+0x3d4>
    24d0:	ldrb	w0, [x0, x2]
    24d4:	cbz	w0, 25ec <_ZN6__lsan10DeallocateEPv+0x3d4>
    24d8:	and	x3, x19, #0xfffffffffff00000
    24dc:	ldr	x0, [x1, x21, lsl #3]
    24e0:	dmb	ish
    24e4:	cbz	x0, 25e4 <_ZN6__lsan10DeallocateEPv+0x3cc>
    24e8:	ldrb	w0, [x0, x2]
    24ec:	mov	w2, #0x200                 	// #512
    24f0:	cmp	w0, #0x35
    24f4:	and	x1, x0, #0xff
    24f8:	b.eq	2524 <_ZN6__lsan10DeallocateEPv+0x30c>  // b.none
    24fc:	lsl	w2, w0, #4
    2500:	cmp	x1, #0x10
    2504:	b.ls	2524 <_ZN6__lsan10DeallocateEPv+0x30c>  // b.plast
    2508:	sub	x1, x1, #0x10
    250c:	mov	x2, #0x100                 	// #256
    2510:	and	x4, x1, #0x3
    2514:	lsr	x1, x1, #2
    2518:	lsl	x1, x2, x1
    251c:	lsr	x0, x1, #2
    2520:	madd	w2, w0, w4, w1
    2524:	sub	w0, w19, w3
    2528:	add	x3, x3, #0x100, lsl #12
    252c:	udiv	w0, w0, w2
    2530:	add	x0, x0, #0x1
    2534:	cmp	x3, x0, lsl #4
    2538:	lsl	x0, x0, #4
    253c:	b.ne	2728 <_ZN6__lsan10DeallocateEPv+0x510>  // b.any
    2540:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2544:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2548:	add	x2, x2, #0x0
    254c:	add	x0, x0, #0x0
    2550:	mov	x4, #0x0                   	// #0
    2554:	mov	x3, #0x0                   	// #0
    2558:	mov	w1, #0x49                  	// #73
    255c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2560:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2564:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2568:	add	x2, x2, #0x0
    256c:	add	x0, x0, #0x0
    2570:	mov	x4, #0x0                   	// #0
    2574:	mov	x3, #0x0                   	// #0
    2578:	mov	w1, #0xa8                  	// #168
    257c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2580:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2584:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2588:	add	x2, x2, #0x0
    258c:	add	x0, x0, #0x0
    2590:	mov	x4, #0x0                   	// #0
    2594:	mov	x3, #0x0                   	// #0
    2598:	mov	w1, #0x12d                 	// #301
    259c:	str	x23, [sp, #32]
    25a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    25a4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25a8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25ac:	mov	x4, x19
    25b0:	add	x2, x2, #0x0
    25b4:	add	x0, x0, #0x0
    25b8:	mov	w1, #0x8b                  	// #139
    25bc:	str	x23, [sp, #32]
    25c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    25c4:	mov	x3, x1
    25c8:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25cc:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25d0:	add	x2, x2, #0x0
    25d4:	add	x0, x0, #0x0
    25d8:	mov	w1, #0x8c                  	// #140
    25dc:	str	x23, [sp, #32]
    25e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    25e4:	mov	w2, #0x0                   	// #0
    25e8:	b	2524 <_ZN6__lsan10DeallocateEPv+0x30c>
    25ec:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25f0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    25f4:	add	x2, x2, #0x0
    25f8:	add	x0, x0, #0x0
    25fc:	mov	x4, #0x0                   	// #0
    2600:	mov	x3, #0x0                   	// #0
    2604:	mov	w1, #0x9c                  	// #156
    2608:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    260c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2610:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2614:	mov	x3, x21
    2618:	add	x2, x2, #0x0
    261c:	add	x0, x0, #0x0
    2620:	mov	x4, #0x36                  	// #54
    2624:	mov	w1, #0xa9                  	// #169
    2628:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    262c:	mov	x4, #0x1                   	// #1
    2630:	mov	x11, x4
    2634:	mov	x12, #0x7c                  	// #124
    2638:	mov	x10, #0x14                  	// #20
    263c:	mov	x9, #0x100                 	// #256
    2640:	mov	w8, #0x4000                	// #16384
    2644:	mov	x1, #0x3e                  	// #62
    2648:	add	x6, x0, x4, lsl #10
    264c:	lsl	x7, x4, #4
    2650:	mov	x5, x6
    2654:	mov	x2, #0x14                  	// #20
    2658:	mov	x3, x4
    265c:	add	x4, x4, #0x1
    2660:	stp	x12, x7, [x6, #8]
    2664:	cmp	x4, #0x36
    2668:	str	x2, [x5, #24]
    266c:	b.eq	26dc <_ZN6__lsan10DeallocateEPv+0x4c4>  // b.none
    2670:	cmp	x4, #0x35
    2674:	b.eq	26e4 <_ZN6__lsan10DeallocateEPv+0x4cc>  // b.none
    2678:	cmp	x4, #0x10
    267c:	b.ls	2648 <_ZN6__lsan10DeallocateEPv+0x430>  // b.plast
    2680:	sub	x2, x3, #0xf
    2684:	add	x5, x5, #0x400
    2688:	and	x7, x2, #0x3
    268c:	mov	x3, x4
    2690:	lsr	x2, x2, #2
    2694:	add	x4, x4, #0x1
    2698:	lsl	x2, x9, x2
    269c:	lsr	x6, x2, #2
    26a0:	madd	x6, x6, x7, x2
    26a4:	str	x6, [x5, #16]
    26a8:	udiv	w2, w8, w6
    26ac:	cmp	x2, #0x0
    26b0:	csel	x2, x2, x11, ne  // ne = any
    26b4:	cmp	x2, #0x3e
    26b8:	csel	x2, x2, x1, ls  // ls = plast
    26bc:	add	x7, x2, #0x2
    26c0:	lsl	x2, x2, #1
    26c4:	str	x2, [x5, #8]
    26c8:	cmp	x6, x7, lsl #3
    26cc:	csel	x2, x10, xzr, cc  // cc = lo, ul, last
    26d0:	str	x2, [x5, #24]
    26d4:	cmp	x4, #0x36
    26d8:	b.ne	2670 <_ZN6__lsan10DeallocateEPv+0x458>  // b.any
    26dc:	ldr	x1, [x22, #8]
    26e0:	b	23e4 <_ZN6__lsan10DeallocateEPv+0x1cc>
    26e4:	adrp	x1, 0 <_ZN6__lsan19InitializeAllocatorEv>
    26e8:	ldr	q0, [x1]
    26ec:	mov	x1, #0xd400                	// #54272
    26f0:	add	x2, x0, x1
    26f4:	add	x1, x0, #0x8, lsl #12
    26f8:	stur	q0, [x2, #8]
    26fc:	str	xzr, [x1, #21528]
    2700:	ldr	x1, [x22, #8]
    2704:	b	23e4 <_ZN6__lsan10DeallocateEPv+0x1cc>
    2708:	add	x2, x20, #0x0
    270c:	mov	x3, x21
    2710:	mov	x1, x22
    2714:	str	x0, [sp, #56]
    2718:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    271c:	ldr	x2, [x22]
    2720:	ldr	x0, [sp, #56]
    2724:	b	23f0 <_ZN6__lsan10DeallocateEPv+0x1d8>
    2728:	sub	x0, x3, x0
    272c:	strb	wzr, [x0]
    2730:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2734:	ldr	x23, [sp, #32]
    2738:	b	2398 <_ZN6__lsan10DeallocateEPv+0x180>
    273c:	nop

0000000000002740 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm>:
    2740:	stp	x19, x20, [sp, #-96]!
    2744:	stp	x21, x22, [sp, #16]
    2748:	mov	x21, x2
    274c:	mov	x22, x3
    2750:	stp	x23, x24, [sp, #32]
    2754:	mov	x23, x0
    2758:	stp	x25, x26, [sp, #48]
    275c:	str	x30, [sp, #72]
    2760:	cbz	x1, 29d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x294>
    2764:	mov	x0, #0xffffffffffff        	// #281474976710655
    2768:	mov	x19, x1
    276c:	cmp	x1, x0
    2770:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2774:	b.ls	28c4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x184>  // b.plast
    2778:	add	x24, x20, #0x0
    277c:	add	x24, x24, #0x80, lsl #12
    2780:	ldr	x0, [x24, #3520]
    2784:	sub	x1, x0, #0x1
    2788:	tst	x19, x1
    278c:	b.ne	2984 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x244>  // b.any
    2790:	sub	x0, x19, x0
    2794:	adrp	x25, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2798:	ldr	x1, [x25]
    279c:	strb	wzr, [x0, #32]
    27a0:	cmp	x21, x1
    27a4:	b.ls	2ad4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x394>  // b.plast
    27a8:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    27ac:	lsr	x24, x19, #32
    27b0:	mov	x1, #0xffffffffffff        	// #281474976710655
    27b4:	cmp	x19, x1
    27b8:	b.ls	2d30 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x5f0>  // b.plast
    27bc:	add	x0, x20, #0x0
    27c0:	add	x0, x0, #0x80, lsl #12
    27c4:	ldr	x4, [x0, #3520]
    27c8:	sub	x0, x4, #0x1
    27cc:	tst	x19, x0
    27d0:	b.ne	2f40 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x800>  // b.any
    27d4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    27d8:	sub	x19, x19, x4
    27dc:	add	x0, x0, #0x0
    27e0:	mov	w2, #0x1                   	// #1
    27e4:	ldxrb	w1, [x0]
    27e8:	stxrb	w3, w2, [x0]
    27ec:	cbnz	w3, 27e4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa4>
    27f0:	dmb	ish
    27f4:	tst	w1, #0xff
    27f8:	b.eq	2800 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xc0>  // b.none
    27fc:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2800:	add	x20, x20, #0x0
    2804:	add	x0, x20, #0x80, lsl #12
    2808:	ldr	x1, [x19, #24]
    280c:	ldr	x2, [x0, #3528]
    2810:	ldr	x3, [x2, x1, lsl #3]
    2814:	cmp	x3, x19
    2818:	b.ne	2f00 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7c0>  // b.any
    281c:	ldr	x4, [x0, #3576]
    2820:	cmp	x1, x4
    2824:	b.cs	2f20 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7e0>  // b.hs, b.nlast
    2828:	sub	x4, x4, #0x1
    282c:	ldr	x3, [x19, #8]
    2830:	str	x4, [x0, #3576]
    2834:	ldr	x4, [x2, x4, lsl #3]
    2838:	str	x4, [x2, x1, lsl #3]
    283c:	ldr	x2, [x0, #4160]
    2840:	str	x1, [x4, #24]
    2844:	sub	x2, x2, x3
    2848:	str	x2, [x0, #4160]
    284c:	ldr	x4, [x0, #3600]
    2850:	strb	wzr, [x0, #3584]
    2854:	ldr	x2, [x0, #3608]
    2858:	add	x4, x4, #0x1
    285c:	ldr	x1, [x0, #4168]
    2860:	sub	x2, x2, x3
    2864:	str	x4, [x0, #3600]
    2868:	sub	x1, x1, x3
    286c:	str	x2, [x0, #3608]
    2870:	str	x1, [x0, #4168]
    2874:	dmb	ish
    2878:	add	x20, x20, #0x81, lsl #12
    287c:	strb	wzr, [x20, #40]
    2880:	ldp	x0, x1, [x19]
    2884:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2888:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    288c:	tst	w0, #0xff
    2890:	b.eq	3604 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xec4>  // b.none
    2894:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2898:	mov	x1, x21
    289c:	add	x0, x0, #0x0
    28a0:	mov	x22, #0x0                   	// #0
    28a4:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    28a8:	mov	x0, x22
    28ac:	ldp	x21, x22, [sp, #16]
    28b0:	ldp	x23, x24, [sp, #32]
    28b4:	ldp	x25, x26, [sp, #48]
    28b8:	ldr	x30, [sp, #72]
    28bc:	ldp	x19, x20, [sp], #96
    28c0:	ret
    28c4:	lsr	x24, x1, #32
    28c8:	add	x1, x20, #0x0
    28cc:	ldr	x0, [x1, x24, lsl #3]
    28d0:	dmb	ish
    28d4:	cbz	x0, 2778 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x38>
    28d8:	lsr	w2, w19, #20
    28dc:	ldrb	w0, [x0, x2]
    28e0:	cbz	w0, 2778 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x38>
    28e4:	str	x27, [sp, #64]
    28e8:	ldr	x0, [x1, x24, lsl #3]
    28ec:	dmb	ish
    28f0:	cbz	x0, 31d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa94>
    28f4:	ldrb	w0, [x0, x2]
    28f8:	cbz	w0, 31d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa94>
    28fc:	and	x3, x19, #0xfffffffffff00000
    2900:	ldr	x0, [x1, x24, lsl #3]
    2904:	dmb	ish
    2908:	cbz	x0, 31cc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa8c>
    290c:	ldrb	w0, [x0, x2]
    2910:	mov	w2, #0x200                 	// #512
    2914:	cmp	w0, #0x35
    2918:	and	x1, x0, #0xff
    291c:	b.eq	2948 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x208>  // b.none
    2920:	lsl	w2, w0, #4
    2924:	cmp	x1, #0x10
    2928:	b.ls	2948 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x208>  // b.plast
    292c:	sub	x1, x1, #0x10
    2930:	mov	x2, #0x100                 	// #256
    2934:	and	x4, x1, #0x3
    2938:	lsr	x1, x1, #2
    293c:	lsl	x1, x2, x1
    2940:	lsr	x0, x1, #2
    2944:	madd	w2, w0, w4, w1
    2948:	sub	w0, w19, w3
    294c:	add	x3, x3, #0x100, lsl #12
    2950:	udiv	w0, w0, w2
    2954:	add	x0, x0, #0x1
    2958:	cmp	x3, x0, lsl #4
    295c:	lsl	x0, x0, #4
    2960:	b.ne	2d0c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x5cc>  // b.any
    2964:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2968:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    296c:	add	x2, x2, #0x0
    2970:	add	x0, x0, #0x0
    2974:	mov	x4, #0x0                   	// #0
    2978:	mov	x3, #0x0                   	// #0
    297c:	mov	w1, #0x49                  	// #73
    2980:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2984:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    2988:	mov	x2, x19
    298c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2990:	add	x0, x0, #0x0
    2994:	ldr	x1, [x1]
    2998:	ldr	x1, [x1]
    299c:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    29a0:	ldr	x0, [x24, #3520]
    29a4:	sub	x1, x0, #0x1
    29a8:	tst	x19, x1
    29ac:	b.eq	2790 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x50>  // b.none
    29b0:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    29b4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    29b8:	add	x2, x2, #0x0
    29bc:	add	x0, x0, #0x0
    29c0:	mov	x4, #0x0                   	// #0
    29c4:	mov	x3, #0x0                   	// #0
    29c8:	mov	w1, #0xb1                  	// #177
    29cc:	str	x27, [sp, #64]
    29d0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    29d4:	adrp	x25, 0 <_ZN6__lsan19InitializeAllocatorEv>
    29d8:	ldr	x0, [x25]
    29dc:	cmp	x2, x0
    29e0:	b.hi	2ef8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7b8>  // b.pmore
    29e4:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    29e8:	adrp	x20, 0 <_ZN6__lsan19InitializeAllocatorEv>
    29ec:	mov	x1, x0
    29f0:	mov	x3, x22
    29f4:	mov	x2, x21
    29f8:	add	x0, x20, #0x0
    29fc:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2a00:	mov	x22, x0
    2a04:	cbz	x22, 28a8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x168>
    2a08:	mov	x0, #0xffffffffffff        	// #281474976710655
    2a0c:	cmp	x22, x0
    2a10:	b.hi	2e70 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x730>  // b.pmore
    2a14:	lsr	x2, x22, #32
    2a18:	add	x1, x20, #0x0
    2a1c:	ldr	x0, [x1, x2, lsl #3]
    2a20:	dmb	ish
    2a24:	cbz	x0, 2e70 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x730>
    2a28:	lsr	w3, w22, #20
    2a2c:	ldrb	w0, [x0, x3]
    2a30:	cbz	w0, 2e70 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x730>
    2a34:	str	x27, [sp, #64]
    2a38:	ldr	x0, [x1, x2, lsl #3]
    2a3c:	dmb	ish
    2a40:	cbz	x0, 31d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa94>
    2a44:	ldrb	w0, [x0, x3]
    2a48:	cbz	w0, 31d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa94>
    2a4c:	and	x0, x22, #0xfffffffffff00000
    2a50:	ldr	x1, [x1, x2, lsl #3]
    2a54:	dmb	ish
    2a58:	cbz	x1, 340c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xccc>
    2a5c:	ldrb	w3, [x1, x3]
    2a60:	mov	w2, #0x200                 	// #512
    2a64:	cmp	w3, #0x35
    2a68:	and	x1, x3, #0xff
    2a6c:	b.eq	2a98 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x358>  // b.none
    2a70:	lsl	w2, w3, #4
    2a74:	cmp	x1, #0x10
    2a78:	b.ls	2a98 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x358>  // b.plast
    2a7c:	sub	x1, x1, #0x10
    2a80:	mov	x2, #0x100                 	// #256
    2a84:	and	x3, x1, #0x3
    2a88:	lsr	x1, x1, #2
    2a8c:	lsl	x2, x2, x1
    2a90:	lsr	x1, x2, #2
    2a94:	madd	w2, w1, w3, w2
    2a98:	sub	w1, w22, w0
    2a9c:	add	x0, x0, #0x100, lsl #12
    2aa0:	udiv	w1, w1, w2
    2aa4:	add	x1, x1, #0x1
    2aa8:	cmp	x0, x1, lsl #4
    2aac:	lsl	x1, x1, #4
    2ab0:	b.ne	3618 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xed8>  // b.any
    2ab4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2ab8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2abc:	add	x2, x2, #0x0
    2ac0:	add	x0, x0, #0x0
    2ac4:	mov	x4, #0x0                   	// #0
    2ac8:	mov	x3, #0x0                   	// #0
    2acc:	mov	w1, #0x3f                  	// #63
    2ad0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2ad4:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2ad8:	mov	x25, x0
    2adc:	cbz	x21, 2f64 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x824>
    2ae0:	mov	x0, #0xffffffffffff        	// #281474976710655
    2ae4:	lsr	x24, x19, #32
    2ae8:	cmp	x19, x0
    2aec:	b.ls	2dc8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x688>  // b.plast
    2af0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2af4:	add	x0, x0, #0x0
    2af8:	mov	w2, #0x1                   	// #1
    2afc:	str	x27, [sp, #64]
    2b00:	ldxrb	w1, [x0]
    2b04:	stxrb	w3, w2, [x0]
    2b08:	cbnz	w3, 2b00 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x3c0>
    2b0c:	dmb	ish
    2b10:	tst	w1, #0xff
    2b14:	b.eq	2b1c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x3dc>  // b.none
    2b18:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2b1c:	add	x2, x20, #0x0
    2b20:	add	x0, x2, #0x80, lsl #12
    2b24:	ldr	x6, [x0, #3576]
    2b28:	ldr	x1, [x0, #3528]
    2b2c:	cbz	x6, 313c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x9fc>
    2b30:	add	x6, x1, x6, lsl #3
    2b34:	mov	x2, #0x0                   	// #0
    2b38:	ldr	x4, [x1]
    2b3c:	cmp	x19, x4
    2b40:	b.cc	2b54 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x414>  // b.lo, b.ul, b.last
    2b44:	sub	x5, x19, x2
    2b48:	sub	x3, x19, x4
    2b4c:	cmp	x5, x3
    2b50:	csel	x2, x2, x4, ls  // ls = plast
    2b54:	add	x1, x1, #0x8
    2b58:	cmp	x1, x6
    2b5c:	b.ne	2b38 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x3f8>  // b.any
    2b60:	cbz	x2, 31b8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa78>
    2b64:	ldr	x4, [x2]
    2b68:	cmp	x4, x2
    2b6c:	b.hi	314c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa0c>  // b.pmore
    2b70:	ldr	x0, [x2, #8]
    2b74:	add	x4, x4, x0
    2b78:	cmp	x4, x2
    2b7c:	b.ls	3168 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa28>  // b.plast
    2b80:	cmp	x19, x2
    2b84:	b.cc	3184 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa44>  // b.lo, b.ul, b.last
    2b88:	cmp	x19, x4
    2b8c:	b.cs	310c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x9cc>  // b.hs, b.nlast
    2b90:	add	x0, x20, #0x0
    2b94:	add	x1, x0, #0x80, lsl #12
    2b98:	ldr	x1, [x1, #3520]
    2b9c:	sub	x3, x1, #0x1
    2ba0:	tst	x3, x2
    2ba4:	b.ne	31f4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xab4>  // b.any
    2ba8:	dmb	ish
    2bac:	add	x0, x0, #0x81, lsl #12
    2bb0:	strb	wzr, [x0, #40]
    2bb4:	cmn	x1, x2
    2bb8:	b.eq	311c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x9dc>  // b.none
    2bbc:	mov	x0, #0xffffffffffff        	// #281474976710655
    2bc0:	cmp	x19, x0
    2bc4:	b.ls	3064 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x924>  // b.plast
    2bc8:	ldr	x27, [sp, #64]
    2bcc:	add	x0, x20, #0x0
    2bd0:	add	x0, x0, #0x80, lsl #12
    2bd4:	ldr	x1, [x0, #3520]
    2bd8:	sub	x2, x1, #0x1
    2bdc:	tst	x19, x2
    2be0:	b.ne	2f40 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x800>  // b.any
    2be4:	sub	x0, x19, x1
    2be8:	tst	x1, x2
    2bec:	ldr	x0, [x0, #16]
    2bf0:	b.ne	31a4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xa64>  // b.any
    2bf4:	add	x0, x0, x2
    2bf8:	neg	x2, x1
    2bfc:	and	x2, x0, x2
    2c00:	cmp	x2, x21
    2c04:	csel	x24, x2, x21, ls  // ls = plast
    2c08:	mov	x3, x22
    2c0c:	mov	x2, x21
    2c10:	mov	x1, x25
    2c14:	add	x0, x20, #0x0
    2c18:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2c1c:	mov	x22, x0
    2c20:	cbz	x0, 2c30 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4f0>
    2c24:	mov	x2, x24
    2c28:	mov	x1, x19
    2c2c:	bl	0 <_ZN11__sanitizer15internal_memcpyEPvPKvm>
    2c30:	mov	x0, #0xffffffffffff        	// #281474976710655
    2c34:	cmp	x19, x0
    2c38:	b.ls	3074 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x934>  // b.plast
    2c3c:	add	x0, x20, #0x0
    2c40:	add	x0, x0, #0x80, lsl #12
    2c44:	ldr	x4, [x0, #3520]
    2c48:	sub	x0, x4, #0x1
    2c4c:	tst	x19, x0
    2c50:	b.ne	2f40 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x800>  // b.any
    2c54:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2c58:	sub	x19, x19, x4
    2c5c:	add	x0, x0, #0x0
    2c60:	mov	w2, #0x1                   	// #1
    2c64:	ldxrb	w1, [x0]
    2c68:	stxrb	w3, w2, [x0]
    2c6c:	cbnz	w3, 2c64 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x524>
    2c70:	dmb	ish
    2c74:	tst	w1, #0xff
    2c78:	b.eq	2c80 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x540>  // b.none
    2c7c:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2c80:	add	x2, x20, #0x0
    2c84:	add	x0, x2, #0x80, lsl #12
    2c88:	ldr	x1, [x19, #24]
    2c8c:	ldr	x5, [x0, #3528]
    2c90:	ldr	x3, [x5, x1, lsl #3]
    2c94:	cmp	x3, x19
    2c98:	b.ne	2f00 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7c0>  // b.any
    2c9c:	ldr	x4, [x0, #3576]
    2ca0:	cmp	x1, x4
    2ca4:	b.cs	2f20 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7e0>  // b.hs, b.nlast
    2ca8:	sub	x4, x4, #0x1
    2cac:	ldr	x6, [x19, #8]
    2cb0:	str	x4, [x0, #3576]
    2cb4:	ldr	x4, [x5, x4, lsl #3]
    2cb8:	ldr	x3, [x0, #4160]
    2cbc:	str	x4, [x5, x1, lsl #3]
    2cc0:	str	x1, [x4, #24]
    2cc4:	sub	x3, x3, x6
    2cc8:	str	x3, [x0, #4160]
    2ccc:	ldr	x4, [x0, #3600]
    2cd0:	strb	wzr, [x0, #3584]
    2cd4:	ldr	x3, [x0, #3608]
    2cd8:	add	x4, x4, #0x1
    2cdc:	ldr	x1, [x0, #4168]
    2ce0:	sub	x3, x3, x6
    2ce4:	str	x4, [x0, #3600]
    2ce8:	sub	x1, x1, x6
    2cec:	str	x3, [x0, #3608]
    2cf0:	str	x1, [x0, #4168]
    2cf4:	dmb	ish
    2cf8:	add	x2, x2, #0x81, lsl #12
    2cfc:	strb	wzr, [x2, #40]
    2d00:	ldp	x0, x1, [x19]
    2d04:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    2d08:	b	2a04 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x2c4>
    2d0c:	sub	x0, x3, x0
    2d10:	adrp	x25, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2d14:	ldr	x1, [x25]
    2d18:	strb	wzr, [x0]
    2d1c:	cmp	x21, x1
    2d20:	b.ls	2db8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x678>  // b.plast
    2d24:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2d28:	ldr	x27, [sp, #64]
    2d2c:	nop
    2d30:	add	x2, x20, #0x0
    2d34:	ldr	x1, [x2, x24, lsl #3]
    2d38:	dmb	ish
    2d3c:	cbz	x1, 27bc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7c>
    2d40:	lsr	w3, w19, #20
    2d44:	ldrb	w1, [x1, x3]
    2d48:	cbz	w1, 27bc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7c>
    2d4c:	ldr	x1, [x2, x24, lsl #3]
    2d50:	dmb	ish
    2d54:	cbz	x1, 3214 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad4>
    2d58:	ldrb	w22, [x1, x3]
    2d5c:	cbz	x22, 3214 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad4>
    2d60:	cmp	x22, #0x35
    2d64:	b.hi	32cc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb8c>  // b.pmore
    2d68:	lsl	x24, x22, #10
    2d6c:	add	x26, x0, x24
    2d70:	ldr	x1, [x26, #8]
    2d74:	cbz	x1, 3308 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xbc8>
    2d78:	ldr	x2, [x26]
    2d7c:	cmp	x2, x1
    2d80:	b.eq	32e8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xba8>  // b.none
    2d84:	add	x1, x2, x22, lsl #7
    2d88:	add	x24, x0, x24
    2d8c:	add	x1, x1, #0x4
    2d90:	add	x2, x2, #0x1
    2d94:	mov	x5, #0xd800                	// #55296
    2d98:	add	x3, x0, x5
    2d9c:	str	x2, [x26]
    2da0:	str	x19, [x0, x1, lsl #3]
    2da4:	ldr	x0, [x3, #16]
    2da8:	ldr	x1, [x24, #16]
    2dac:	sub	x0, x0, x1
    2db0:	str	x0, [x3, #16]
    2db4:	b	2888 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x148>
    2db8:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2dbc:	mov	x25, x0
    2dc0:	ldr	x27, [sp, #64]
    2dc4:	cbz	x21, 2f74 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x834>
    2dc8:	add	x0, x20, #0x0
    2dcc:	ldr	x0, [x0, x24, lsl #3]
    2dd0:	dmb	ish
    2dd4:	cbz	x0, 2af0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x3b0>
    2dd8:	lsr	w1, w19, #20
    2ddc:	lsr	x2, x19, #20
    2de0:	ldrb	w0, [x0, x1]
    2de4:	cbz	w0, 2af0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x3b0>
    2de8:	add	x1, x20, #0x0
    2dec:	ldr	x0, [x1, x24, lsl #3]
    2df0:	dmb	ish
    2df4:	cbz	x0, 2bcc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x48c>
    2df8:	and	x2, x2, #0xfff
    2dfc:	ldrb	w0, [x0, x2]
    2e00:	cbz	w0, 2bcc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x48c>
    2e04:	ldr	x0, [x1, x24, lsl #3]
    2e08:	dmb	ish
    2e0c:	cbz	x0, 33e8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xca8>
    2e10:	ldrb	w0, [x0, x2]
    2e14:	cbz	w0, 33e8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xca8>
    2e18:	ldr	x24, [x1, x24, lsl #3]
    2e1c:	dmb	ish
    2e20:	cbz	x24, 2c08 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4c8>
    2e24:	ldrb	w0, [x24, x2]
    2e28:	cmp	w0, #0x35
    2e2c:	and	x1, x0, #0xff
    2e30:	b.eq	32d8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb98>  // b.none
    2e34:	ubfiz	x0, x0, #4, #8
    2e38:	cmp	x0, x21
    2e3c:	csel	x24, x0, x21, ls  // ls = plast
    2e40:	cmp	x1, #0x10
    2e44:	b.ls	2c08 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4c8>  // b.plast
    2e48:	sub	x1, x1, #0x10
    2e4c:	mov	x2, #0x100                 	// #256
    2e50:	and	x24, x1, #0x3
    2e54:	lsr	x1, x1, #2
    2e58:	lsl	x1, x2, x1
    2e5c:	lsr	x2, x1, #2
    2e60:	madd	x2, x2, x24, x1
    2e64:	cmp	x2, x21
    2e68:	csel	x24, x2, x21, ls  // ls = plast
    2e6c:	b	2c08 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4c8>
    2e70:	add	x20, x20, #0x0
    2e74:	add	x20, x20, #0x80, lsl #12
    2e78:	ldr	x19, [x20, #3520]
    2e7c:	sub	x0, x19, #0x1
    2e80:	tst	x22, x0
    2e84:	b.eq	2eb4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x774>  // b.none
    2e88:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
    2e8c:	mov	x2, x22
    2e90:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2e94:	add	x0, x0, #0x0
    2e98:	ldr	x1, [x1]
    2e9c:	ldr	x1, [x1]
    2ea0:	bl	0 <_ZN11__sanitizer6PrintfEPKcz>
    2ea4:	ldr	x19, [x20, #3520]
    2ea8:	sub	x0, x19, #0x1
    2eac:	tst	x22, x0
    2eb0:	b.ne	29b0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x270>  // b.any
    2eb4:	sub	x19, x22, x19
    2eb8:	add	x19, x19, #0x20
    2ebc:	bl	0 <_ZN6__lsan20DisabledInThisThreadEv>
    2ec0:	mov	w2, w0
    2ec4:	ldrb	w3, [x19, #1]
    2ec8:	neg	w2, w2
    2ecc:	ldp	x0, x1, [x23]
    2ed0:	bfxil	w3, w2, #0, #2
    2ed4:	strb	w3, [x19, #1]
    2ed8:	bl	0 <_ZN11__sanitizer13StackDepotPutENS_10StackTraceE>
    2edc:	str	w0, [x19, #8]
    2ee0:	ldr	x1, [x19]
    2ee4:	mov	w2, #0x1                   	// #1
    2ee8:	bfi	x1, x21, #10, #54
    2eec:	str	x1, [x19]
    2ef0:	strb	w2, [x19]
    2ef4:	b	28a8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x168>
    2ef8:	bl	0 <_ZN6__lsan17GetAllocatorCacheEv>
    2efc:	b	2888 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x148>
    2f00:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f04:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f08:	mov	x4, x19
    2f0c:	add	x2, x2, #0x0
    2f10:	add	x0, x0, #0x0
    2f14:	mov	w1, #0x8b                  	// #139
    2f18:	str	x27, [sp, #64]
    2f1c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2f20:	mov	x3, x1
    2f24:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f28:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f2c:	add	x2, x2, #0x0
    2f30:	add	x0, x0, #0x0
    2f34:	mov	w1, #0x8c                  	// #140
    2f38:	str	x27, [sp, #64]
    2f3c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2f40:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f44:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2f48:	add	x2, x2, #0x0
    2f4c:	add	x0, x0, #0x0
    2f50:	mov	x4, #0x0                   	// #0
    2f54:	mov	x3, #0x0                   	// #0
    2f58:	mov	w1, #0x12d                 	// #301
    2f5c:	str	x27, [sp, #64]
    2f60:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    2f64:	mov	x0, #0xffffffffffff        	// #281474976710655
    2f68:	cmp	x19, x0
    2f6c:	b.hi	2f90 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x850>  // b.pmore
    2f70:	lsr	x24, x19, #32
    2f74:	add	x1, x20, #0x0
    2f78:	ldr	x0, [x1, x24, lsl #3]
    2f7c:	dmb	ish
    2f80:	cbz	x0, 2f90 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x850>
    2f84:	lsr	w2, w19, #20
    2f88:	ldrb	w0, [x0, x2]
    2f8c:	cbnz	w0, 3238 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xaf8>
    2f90:	add	x0, x20, #0x0
    2f94:	add	x0, x0, #0x80, lsl #12
    2f98:	ldr	x0, [x0, #3520]
    2f9c:	sub	x1, x0, #0x1
    2fa0:	tst	x19, x1
    2fa4:	b.ne	2f40 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x800>  // b.any
    2fa8:	sub	x19, x19, x0
    2fac:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    2fb0:	add	x0, x0, #0x0
    2fb4:	mov	w2, #0x1                   	// #1
    2fb8:	ldxrb	w1, [x0]
    2fbc:	stxrb	w3, w2, [x0]
    2fc0:	cbnz	w3, 2fb8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x878>
    2fc4:	dmb	ish
    2fc8:	tst	w1, #0xff
    2fcc:	b.eq	2fd4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x894>  // b.none
    2fd0:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    2fd4:	add	x20, x20, #0x0
    2fd8:	add	x0, x20, #0x80, lsl #12
    2fdc:	ldr	x1, [x19, #24]
    2fe0:	ldr	x2, [x0, #3528]
    2fe4:	ldr	x3, [x2, x1, lsl #3]
    2fe8:	cmp	x3, x19
    2fec:	b.ne	2f00 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7c0>  // b.any
    2ff0:	ldr	x4, [x0, #3576]
    2ff4:	cmp	x1, x4
    2ff8:	b.cs	2f20 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x7e0>  // b.hs, b.nlast
    2ffc:	sub	x4, x4, #0x1
    3000:	ldr	x3, [x19, #8]
    3004:	str	x4, [x0, #3576]
    3008:	ldr	x4, [x2, x4, lsl #3]
    300c:	str	x4, [x2, x1, lsl #3]
    3010:	ldr	x2, [x0, #4160]
    3014:	str	x1, [x4, #24]
    3018:	sub	x2, x2, x3
    301c:	str	x2, [x0, #4160]
    3020:	ldr	x4, [x0, #3600]
    3024:	strb	wzr, [x0, #3584]
    3028:	ldr	x2, [x0, #3608]
    302c:	add	x4, x4, #0x1
    3030:	ldr	x1, [x0, #4168]
    3034:	sub	x2, x2, x3
    3038:	str	x4, [x0, #3600]
    303c:	sub	x1, x1, x3
    3040:	str	x2, [x0, #3608]
    3044:	str	x1, [x0, #4168]
    3048:	dmb	ish
    304c:	add	x20, x20, #0x81, lsl #12
    3050:	strb	wzr, [x20, #40]
    3054:	ldp	x0, x1, [x19]
    3058:	mov	x22, #0x0                   	// #0
    305c:	bl	0 <_ZN11__sanitizer10UnmapOrDieEPvm>
    3060:	b	28a8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x168>
    3064:	lsr	x2, x19, #20
    3068:	lsr	x24, x19, #32
    306c:	ldr	x27, [sp, #64]
    3070:	b	2de8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x6a8>
    3074:	lsr	x2, x19, #32
    3078:	add	x1, x20, #0x0
    307c:	ldr	x0, [x1, x2, lsl #3]
    3080:	dmb	ish
    3084:	cbz	x0, 2c3c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4fc>
    3088:	lsr	w3, w19, #20
    308c:	ldrb	w0, [x0, x3]
    3090:	cbz	w0, 2c3c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4fc>
    3094:	str	x27, [sp, #64]
    3098:	ldr	x0, [x1, x2, lsl #3]
    309c:	dmb	ish
    30a0:	cbz	x0, 3218 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad8>
    30a4:	ldrb	w24, [x0, x3]
    30a8:	cbz	x24, 3218 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad8>
    30ac:	mov	x3, x24
    30b0:	cmp	x24, #0x35
    30b4:	b.hi	32b0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb70>  // b.pmore
    30b8:	lsl	x26, x24, #10
    30bc:	add	x27, x25, x26
    30c0:	ldr	x2, [x27, #8]
    30c4:	cbz	x2, 3430 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xcf0>
    30c8:	ldr	x0, [x27]
    30cc:	cmp	x0, x2
    30d0:	b.eq	3414 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xcd4>  // b.none
    30d4:	add	x2, x0, x24, lsl #7
    30d8:	add	x26, x25, x26
    30dc:	add	x2, x2, #0x4
    30e0:	add	x0, x0, #0x1
    30e4:	mov	x3, #0xd800                	// #55296
    30e8:	add	x3, x25, x3
    30ec:	str	x0, [x27]
    30f0:	str	x19, [x25, x2, lsl #3]
    30f4:	ldr	x0, [x3, #16]
    30f8:	ldr	x1, [x26, #16]
    30fc:	ldr	x27, [sp, #64]
    3100:	sub	x0, x0, x1
    3104:	str	x0, [x3, #16]
    3108:	b	2a04 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x2c4>
    310c:	dmb	ish
    3110:	add	x20, x20, #0x0
    3114:	add	x20, x20, #0x81, lsl #12
    3118:	strb	wzr, [x20, #40]
    311c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3120:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3124:	add	x2, x2, #0x0
    3128:	add	x0, x0, #0x0
    312c:	mov	x4, #0x0                   	// #0
    3130:	mov	x3, #0x0                   	// #0
    3134:	mov	w1, #0x69                  	// #105
    3138:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    313c:	dmb	ish
    3140:	add	x2, x2, #0x81, lsl #12
    3144:	strb	wzr, [x2, #40]
    3148:	b	311c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x9dc>
    314c:	mov	x3, x2
    3150:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3154:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3158:	add	x0, x0, #0x0
    315c:	add	x2, x2, #0x0
    3160:	mov	w1, #0xc7                  	// #199
    3164:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    3168:	mov	x3, x2
    316c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3170:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3174:	add	x0, x0, #0x0
    3178:	add	x2, x2, #0x0
    317c:	mov	w1, #0xc8                  	// #200
    3180:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    3184:	mov	x3, x2
    3188:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    318c:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3190:	mov	x4, x19
    3194:	add	x2, x2, #0x0
    3198:	add	x0, x0, #0x0
    319c:	mov	w1, #0xc9                  	// #201
    31a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    31a4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    31a8:	add	x0, x0, #0x0
    31ac:	str	x27, [sp, #64]
    31b0:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
    31b4:	bl	0 <_ZN11__sanitizer3DieEv>
    31b8:	dmb	ish
    31bc:	add	x0, x20, #0x0
    31c0:	add	x0, x0, #0x81, lsl #12
    31c4:	strb	wzr, [x0, #40]
    31c8:	b	311c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x9dc>
    31cc:	mov	w2, #0x0                   	// #0
    31d0:	b	2948 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x208>
    31d4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    31d8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    31dc:	add	x2, x2, #0x0
    31e0:	add	x0, x0, #0x0
    31e4:	mov	x4, #0x0                   	// #0
    31e8:	mov	x3, #0x0                   	// #0
    31ec:	mov	w1, #0x9c                  	// #156
    31f0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    31f4:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    31f8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    31fc:	add	x2, x2, #0x0
    3200:	add	x0, x0, #0x0
    3204:	mov	x4, #0x0                   	// #0
    3208:	mov	x3, #0x0                   	// #0
    320c:	mov	w1, #0x135                 	// #309
    3210:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    3214:	str	x27, [sp, #64]
    3218:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    321c:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    3220:	add	x2, x2, #0x0
    3224:	add	x0, x0, #0x0
    3228:	mov	x4, #0x0                   	// #0
    322c:	mov	x3, #0x0                   	// #0
    3230:	mov	w1, #0xa8                  	// #168
    3234:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    3238:	ldr	x0, [x1, x24, lsl #3]
    323c:	dmb	ish
    3240:	cbz	x0, 3214 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad4>
    3244:	ldrb	w21, [x0, x2]
    3248:	cbz	x21, 3214 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xad4>
    324c:	cmp	x21, #0x35
    3250:	b.hi	32a8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb68>  // b.pmore
    3254:	lsl	x23, x21, #10
    3258:	add	x22, x25, x23
    325c:	ldr	x1, [x22, #8]
    3260:	cbz	x1, 3528 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xde8>
    3264:	ldr	x0, [x22]
    3268:	cmp	x0, x1
    326c:	b.eq	350c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xdcc>  // b.none
    3270:	add	x1, x0, x21, lsl #7
    3274:	add	x23, x25, x23
    3278:	add	x1, x1, #0x4
    327c:	add	x0, x0, #0x1
    3280:	mov	x4, #0xd800                	// #55296
    3284:	add	x2, x25, x4
    3288:	str	x0, [x22]
    328c:	mov	x22, #0x0                   	// #0
    3290:	str	x19, [x25, x1, lsl #3]
    3294:	ldr	x0, [x2, #16]
    3298:	ldr	x1, [x23, #16]
    329c:	sub	x0, x0, x1
    32a0:	str	x0, [x2, #16]
    32a4:	b	28a8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x168>
    32a8:	mov	x3, x21
    32ac:	str	x27, [sp, #64]
    32b0:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    32b4:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    32b8:	add	x2, x2, #0x0
    32bc:	add	x0, x0, #0x0
    32c0:	mov	x4, #0x36                  	// #54
    32c4:	mov	w1, #0xa9                  	// #169
    32c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    32cc:	mov	x3, x22
    32d0:	str	x27, [sp, #64]
    32d4:	b	32b0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb70>
    32d8:	cmp	x21, #0x200
    32dc:	mov	x2, #0x200                 	// #512
    32e0:	csel	x24, x21, x2, ls  // ls = plast
    32e4:	b	2c08 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x4c8>
    32e8:	add	x2, x20, #0x0
    32ec:	mov	x3, x22
    32f0:	mov	x1, x26
    32f4:	str	x0, [sp, #88]
    32f8:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    32fc:	ldr	x2, [x26]
    3300:	ldr	x0, [sp, #88]
    3304:	b	2d84 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x644>
    3308:	mov	x4, #0x1                   	// #1
    330c:	mov	x11, x4
    3310:	mov	x12, #0x7c                  	// #124
    3314:	mov	x10, #0x14                  	// #20
    3318:	mov	x9, #0x100                 	// #256
    331c:	mov	w8, #0x4000                	// #16384
    3320:	mov	x7, #0x3e                  	// #62
    3324:	nop
    3328:	add	x6, x0, x4, lsl #10
    332c:	lsl	x1, x4, #4
    3330:	mov	x5, x6
    3334:	mov	x2, #0x14                  	// #20
    3338:	mov	x3, x4
    333c:	add	x4, x4, #0x1
    3340:	stp	x12, x1, [x6, #8]
    3344:	cmp	x4, #0x36
    3348:	str	x2, [x5, #24]
    334c:	b.eq	33bc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xc7c>  // b.none
    3350:	cmp	x4, #0x35
    3354:	b.eq	33c4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xc84>  // b.none
    3358:	cmp	x4, #0x10
    335c:	b.ls	3328 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xbe8>  // b.plast
    3360:	sub	x2, x3, #0xf
    3364:	add	x5, x5, #0x400
    3368:	and	x1, x2, #0x3
    336c:	mov	x3, x4
    3370:	lsr	x2, x2, #2
    3374:	add	x4, x4, #0x1
    3378:	lsl	x2, x9, x2
    337c:	lsr	x6, x2, #2
    3380:	madd	x6, x6, x1, x2
    3384:	str	x6, [x5, #16]
    3388:	udiv	w2, w8, w6
    338c:	cmp	x2, #0x0
    3390:	csel	x2, x2, x11, ne  // ne = any
    3394:	cmp	x2, #0x3e
    3398:	csel	x2, x2, x7, ls  // ls = plast
    339c:	add	x1, x2, #0x2
    33a0:	lsl	x2, x2, #1
    33a4:	str	x2, [x5, #8]
    33a8:	cmp	x6, x1, lsl #3
    33ac:	csel	x2, x10, xzr, cc  // cc = lo, ul, last
    33b0:	str	x2, [x5, #24]
    33b4:	cmp	x4, #0x36
    33b8:	b.ne	3350 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xc10>  // b.any
    33bc:	ldr	x1, [x26, #8]
    33c0:	b	2d78 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x638>
    33c4:	adrp	x1, 0 <_ZN6__lsan19InitializeAllocatorEv>
    33c8:	mov	x2, #0xd400                	// #54272
    33cc:	add	x2, x0, x2
    33d0:	ldr	q0, [x1]
    33d4:	add	x1, x0, #0x8, lsl #12
    33d8:	stur	q0, [x2, #8]
    33dc:	str	xzr, [x1, #21528]
    33e0:	ldr	x1, [x26, #8]
    33e4:	b	2d78 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x638>
    33e8:	adrp	x2, 0 <_ZN6__lsan19InitializeAllocatorEv>
    33ec:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    33f0:	add	x2, x2, #0x0
    33f4:	add	x0, x0, #0x0
    33f8:	mov	x4, #0x0                   	// #0
    33fc:	mov	x3, #0x0                   	// #0
    3400:	mov	w1, #0xd7                  	// #215
    3404:	str	x27, [sp, #64]
    3408:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    340c:	mov	w2, #0x0                   	// #0
    3410:	b	2a98 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x358>
    3414:	mov	x0, x25
    3418:	mov	x3, x24
    341c:	add	x2, x20, #0x0
    3420:	mov	x1, x27
    3424:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    3428:	ldr	x0, [x27]
    342c:	b	30d4 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x994>
    3430:	mov	x2, #0x1                   	// #1
    3434:	mov	x11, x2
    3438:	mov	x12, #0x7c                  	// #124
    343c:	mov	x10, #0x14                  	// #20
    3440:	mov	x9, #0x100                 	// #256
    3444:	mov	w8, #0x4000                	// #16384
    3448:	mov	x7, #0x3e                  	// #62
    344c:	add	x5, x25, x2, lsl #10
    3450:	lsl	x6, x2, #4
    3454:	mov	x4, x5
    3458:	mov	x0, #0x14                  	// #20
    345c:	mov	x3, x2
    3460:	add	x2, x2, #0x1
    3464:	stp	x12, x6, [x5, #8]
    3468:	cmp	x2, #0x36
    346c:	str	x0, [x4, #24]
    3470:	b.eq	34e0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xda0>  // b.none
    3474:	cmp	x2, #0x35
    3478:	b.eq	34e8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xda8>  // b.none
    347c:	cmp	x2, #0x10
    3480:	b.ls	344c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xd0c>  // b.plast
    3484:	sub	x0, x3, #0xf
    3488:	add	x4, x4, #0x400
    348c:	and	x6, x0, #0x3
    3490:	mov	x3, x2
    3494:	lsr	x0, x0, #2
    3498:	add	x2, x2, #0x1
    349c:	lsl	x0, x9, x0
    34a0:	lsr	x5, x0, #2
    34a4:	madd	x5, x5, x6, x0
    34a8:	str	x5, [x4, #16]
    34ac:	udiv	w0, w8, w5
    34b0:	cmp	x0, #0x0
    34b4:	csel	x0, x0, x11, ne  // ne = any
    34b8:	cmp	x0, #0x3e
    34bc:	csel	x0, x0, x7, ls  // ls = plast
    34c0:	add	x6, x0, #0x2
    34c4:	lsl	x0, x0, #1
    34c8:	str	x0, [x4, #8]
    34cc:	cmp	x5, x6, lsl #3
    34d0:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
    34d4:	str	x0, [x4, #24]
    34d8:	cmp	x2, #0x36
    34dc:	b.ne	3474 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xd34>  // b.any
    34e0:	ldr	x2, [x27, #8]
    34e4:	b	30c8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x988>
    34e8:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    34ec:	ldr	q0, [x0]
    34f0:	mov	x0, #0xd400                	// #54272
    34f4:	add	x2, x25, x0
    34f8:	add	x0, x25, #0x8, lsl #12
    34fc:	stur	q0, [x2, #8]
    3500:	str	xzr, [x0, #21528]
    3504:	ldr	x2, [x27, #8]
    3508:	b	30c8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x988>
    350c:	mov	x0, x25
    3510:	add	x2, x20, #0x0
    3514:	mov	x3, x21
    3518:	mov	x1, x22
    351c:	bl	0 <_ZN6__lsan19InitializeAllocatorEv>
    3520:	ldr	x0, [x22]
    3524:	b	3270 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb30>
    3528:	mov	x2, #0x1                   	// #1
    352c:	mov	x10, x2
    3530:	mov	x11, #0x7c                  	// #124
    3534:	mov	x9, #0x14                  	// #20
    3538:	mov	x8, #0x100                 	// #256
    353c:	mov	w7, #0x4000                	// #16384
    3540:	mov	x6, #0x3e                  	// #62
    3544:	add	x1, x25, x2, lsl #10
    3548:	lsl	x5, x2, #4
    354c:	mov	x4, x1
    3550:	mov	x0, #0x14                  	// #20
    3554:	mov	x3, x2
    3558:	add	x2, x2, #0x1
    355c:	stp	x11, x5, [x1, #8]
    3560:	cmp	x2, #0x36
    3564:	str	x0, [x4, #24]
    3568:	b.eq	35d8 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xe98>  // b.none
    356c:	cmp	x2, #0x35
    3570:	b.eq	35e0 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xea0>  // b.none
    3574:	cmp	x2, #0x10
    3578:	b.ls	3544 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xe04>  // b.plast
    357c:	sub	x0, x3, #0xf
    3580:	add	x4, x4, #0x400
    3584:	and	x1, x0, #0x3
    3588:	mov	x3, x2
    358c:	lsr	x0, x0, #2
    3590:	add	x2, x2, #0x1
    3594:	lsl	x0, x8, x0
    3598:	lsr	x5, x0, #2
    359c:	madd	x5, x5, x1, x0
    35a0:	str	x5, [x4, #16]
    35a4:	udiv	w0, w7, w5
    35a8:	cmp	x0, #0x0
    35ac:	csel	x0, x0, x10, ne  // ne = any
    35b0:	cmp	x0, #0x3e
    35b4:	csel	x0, x0, x6, ls  // ls = plast
    35b8:	add	x1, x0, #0x2
    35bc:	lsl	x0, x0, #1
    35c0:	str	x0, [x4, #8]
    35c4:	cmp	x5, x1, lsl #3
    35c8:	csel	x0, x9, xzr, cc  // cc = lo, ul, last
    35cc:	str	x0, [x4, #24]
    35d0:	cmp	x2, #0x36
    35d4:	b.ne	356c <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xe2c>  // b.any
    35d8:	ldr	x1, [x22, #8]
    35dc:	b	3264 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb24>
    35e0:	adrp	x0, 0 <_ZN6__lsan19InitializeAllocatorEv>
    35e4:	mov	x1, #0xd400                	// #54272
    35e8:	add	x1, x25, x1
    35ec:	ldr	q0, [x0]
    35f0:	add	x0, x25, #0x8, lsl #12
    35f4:	stur	q0, [x1, #8]
    35f8:	str	xzr, [x0, #21528]
    35fc:	ldr	x1, [x22, #8]
    3600:	b	3264 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0xb24>
    3604:	ldr	x1, [x25]
    3608:	mov	x2, x23
    360c:	mov	x0, x21
    3610:	str	x27, [sp, #64]
    3614:	bl	0 <_ZN11__sanitizer26ReportAllocationSizeTooBigEmmPKNS_10StackTraceE>
    3618:	sub	x19, x0, x1
    361c:	ldr	x27, [sp, #64]
    3620:	b	2ebc <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm+0x77c>
    3624:	nop

0000000000003628 <_ZN6__lsan12lsan_reallocEPvmRKN11__sanitizer10StackTraceE>:
    3628:	mov	x4, x0
    362c:	str	x30, [sp, #-32]!
    3630:	mov	x3, x1
    3634:	mov	x0, x2
    3638:	mov	x1, x4
    363c:	mov	x2, x3
    3640:	mov	x3, #0x1                   	// #1
    3644:	bl	2740 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm>
    3648:	cbz	x0, 3654 <_ZN6__lsan12lsan_reallocEPvmRKN11__sanitizer10StackTraceE+0x2c>
    364c:	ldr	x30, [sp], #32
    3650:	ret
    3654:	str	x0, [sp, #24]
    3658:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    365c:	ldr	x0, [sp, #24]
    3660:	ldr	x30, [sp], #32
    3664:	ret

0000000000003668 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE>:
    3668:	stp	x19, x20, [sp, #-48]!
    366c:	mov	x19, x2
    3670:	stp	x21, x30, [sp, #16]
    3674:	mov	x21, x1
    3678:	mov	x1, x0
    367c:	cbz	x2, 3688 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE+0x20>
    3680:	umulh	x0, x21, x2
    3684:	cbnz	x0, 36b8 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE+0x50>
    3688:	mul	x2, x19, x21
    368c:	mov	x0, x3
    3690:	mov	x3, #0x1                   	// #1
    3694:	bl	2740 <_ZN6__lsan10ReallocateERKN11__sanitizer10StackTraceEPvmm>
    3698:	mov	x20, x0
    369c:	cbz	x0, 36b0 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE+0x48>
    36a0:	mov	x0, x20
    36a4:	ldp	x21, x30, [sp, #16]
    36a8:	ldp	x19, x20, [sp], #48
    36ac:	ret
    36b0:	bl	0 <_ZN11__sanitizer16SetErrnoToENOMEMEv>
    36b4:	b	36a0 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE+0x38>
    36b8:	str	x3, [sp, #40]
    36bc:	bl	0 <__errno_location>
    36c0:	mov	w1, #0xc                   	// #12
    36c4:	str	w1, [x0]
    36c8:	mov	x20, #0x0                   	// #0
    36cc:	bl	0 <_ZN11__sanitizer22AllocatorMayReturnNullEv>
    36d0:	tst	w0, #0xff
    36d4:	ldr	x3, [sp, #40]
    36d8:	b.ne	36a0 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE+0x38>  // b.any
    36dc:	mov	x2, x3
    36e0:	mov	x1, x19
    36e4:	mov	x0, x21
    36e8:	bl	0 <_ZN11__sanitizer26ReportReallocArrayOverflowEmmPKNS_10StackTraceE>

Disassembly of section .text._ZN11__sanitizer15StaticSpinMutex8LockSlowEv:

0000000000000000 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv>:
   0:	stp	x19, x20, [sp, #-32]!
   4:	mov	x20, x0
   8:	mov	w19, #0x0                   	// #0
   c:	stp	x21, x30, [sp, #16]
  10:	mov	w21, #0x1                   	// #1
  14:	nop
  18:	cmp	w19, #0x9
  1c:	b.gt	58 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x58>
  20:	ldrb	w0, [x20]
  24:	tst	w0, #0xff
  28:	b.ne	44 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x44>  // b.any
  2c:	ldxrb	w0, [x20]
  30:	stxrb	w1, w21, [x20]
  34:	cbnz	w1, 2c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x2c>
  38:	dmb	ish
  3c:	tst	w0, #0xff
  40:	b.eq	4c <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x4c>  // b.none
  44:	add	w19, w19, #0x1
  48:	b	18 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x18>
  4c:	ldp	x21, x30, [sp, #16]
  50:	ldp	x19, x20, [sp], #32
  54:	ret
  58:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
  5c:	b	20 <_ZN11__sanitizer15StaticSpinMutex8LockSlowEv+0x20>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0>:
   0:	stp	x19, x20, [sp, #-48]!
   4:	stp	x21, x22, [sp, #16]
   8:	mov	x21, x0
   c:	ldr	x0, [x2, #8]
  10:	stp	x23, x30, [sp, #32]
  14:	cbz	x0, c0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0+0xc0>
  18:	mov	x0, #0x2001                	// #8193
  1c:	add	x22, x1, x0
  20:	mov	x20, x2
  24:	mov	x19, x1
  28:	add	x23, x21, x22, lsl #6
  2c:	mov	w1, #0x1                   	// #1
  30:	ldxrb	w0, [x23]
  34:	stxrb	w2, w1, [x23]
  38:	cbnz	w2, 30 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0+0x30>
  3c:	dmb	ish
  40:	tst	w0, #0xff
  44:	b.eq	50 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0+0x50>  // b.none
  48:	mov	x0, x23
  4c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0>
  50:	ldr	x0, [x23, #8]
  54:	cbz	x0, 8c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0+0x8c>
  58:	add	x19, x21, x19, lsl #6
  5c:	add	x0, x0, #0x1
  60:	add	x19, x19, #0x80, lsl #12
  64:	ldr	x1, [x19, #80]
  68:	str	x1, [x20]
  6c:	stp	x0, x20, [x19, #72]
  70:	dmb	ish
  74:	lsl	x22, x22, #6
  78:	strb	wzr, [x21, x22]
  7c:	ldp	x21, x22, [sp, #16]
  80:	ldp	x23, x30, [sp, #32]
  84:	ldp	x19, x20, [sp], #48
  88:	ret
  8c:	add	x0, x21, x22, lsl #6
  90:	dup	v0.2d, x20
  94:	str	xzr, [x20]
  98:	mov	x1, #0x1                   	// #1
  9c:	str	x1, [x0, #8]
  a0:	str	q0, [x0, #16]
  a4:	dmb	ish
  a8:	lsl	x22, x22, #6
  ac:	strb	wzr, [x21, x22]
  b0:	ldp	x21, x22, [sp, #16]
  b4:	ldp	x23, x30, [sp, #32]
  b8:	ldp	x19, x20, [sp], #48
  bc:	ret
  c0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0>
  c4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE15DeallocateBatchEPNS_14AllocatorStatsEmPNS5_13TransferBatchE.isra.0>
  c8:	add	x2, x2, #0x0
  cc:	add	x0, x0, #0x0
  d0:	mov	x4, #0x0                   	// #0
  d4:	mov	x3, #0x0                   	// #0
  d8:	mov	w1, #0xb8                  	// #184
  dc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_:

0000000000000000 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_>:
   0:	cmp	x1, #0x1
   4:	mov	x4, #0x1                   	// #1
   8:	b.ls	fc <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xfc>  // b.plast
   c:	nop
  10:	ldr	x5, [x0, x4, lsl #3]
  14:	mov	x2, x4
  18:	sub	x3, x2, #0x1
  1c:	mov	x6, x2
  20:	lsr	x2, x3, #1
  24:	ldr	x3, [x0, x2, lsl #3]
  28:	cmp	x3, x5
  2c:	b.cs	3c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x3c>  // b.hs, b.nlast
  30:	str	x3, [x0, x6, lsl #3]
  34:	str	x5, [x0, x2, lsl #3]
  38:	cbnz	x2, 18 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x18>
  3c:	add	x2, x4, #0x1
  40:	cmp	x1, x2
  44:	b.eq	94 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x94>  // b.none
  48:	mov	x4, x2
  4c:	b	10 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x10>
  50:	cmp	x1, x4
  54:	b.cs	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.hs, b.nlast
  58:	lsl	x5, x5, #4
  5c:	add	x7, x0, x5
  60:	ldr	x3, [x0, x2, lsl #3]
  64:	ldr	x5, [x0, x5]
  68:	cmp	x5, x3
  6c:	b.ls	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.plast
  70:	cmp	x1, x2
  74:	b.eq	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.none
  78:	ldr	x3, [x0, x2, lsl #3]
  7c:	str	x5, [x0, x2, lsl #3]
  80:	str	x3, [x7]
  84:	cmp	x1, x4
  88:	b.cc	f4 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xf4>  // b.lo, b.ul, b.last
  8c:	subs	x4, x4, #0x1
  90:	b.eq	fc <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xfc>  // b.none
  94:	ldr	x3, [x0, x4, lsl #3]
  98:	mov	x2, #0x0                   	// #0
  9c:	ldr	x1, [x0]
  a0:	str	x3, [x0]
  a4:	str	x1, [x0, x4, lsl #3]
  a8:	lsl	x1, x2, #1
  ac:	add	x5, x2, #0x1
  b0:	add	x3, x1, #0x1
  b4:	add	x1, x1, #0x2
  b8:	cmp	x3, x4
  bc:	b.cs	50 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  c0:	ldr	x6, [x0, x3, lsl #3]
  c4:	add	x8, x0, x3, lsl #3
  c8:	ldr	x7, [x0, x2, lsl #3]
  cc:	cmp	x7, x6
  d0:	b.cs	50 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x50>  // b.hs, b.nlast
  d4:	cmp	x1, x4
  d8:	b.cc	100 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x100>  // b.lo, b.ul, b.last
  dc:	cmp	x3, x2
  e0:	b.eq	8c <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x8c>  // b.none
  e4:	mov	x1, x3
  e8:	ldr	x5, [x0, x2, lsl #3]
  ec:	str	x6, [x0, x2, lsl #3]
  f0:	str	x5, [x0, x3, lsl #3]
  f4:	mov	x2, x1
  f8:	b	a8 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0xa8>
  fc:	ret
 100:	lsl	x9, x5, #4
 104:	add	x7, x0, x5, lsl #4
 108:	ldr	x5, [x0, x9]
 10c:	cmp	x6, x5
 110:	b.cc	70 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x70>  // b.lo, b.ul, b.last
 114:	mov	x5, x6
 118:	mov	x7, x8
 11c:	mov	x1, x3
 120:	b	70 <_ZN11__sanitizer4SortImNS_11CompareLessImEEEEvPT_mT0_+0x70>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>:
   0:	adrp	x5, 0 <_ZN11__sanitizer20PrimaryAllocatorNameE>
   4:	sub	sp, sp, #0x210
   8:	ldr	x5, [x5]
   c:	stp	x25, x26, [sp, #48]
  10:	mov	x26, x2
  14:	mov	x25, x3
  18:	stp	x19, x20, [sp]
  1c:	mov	x19, x1
  20:	ldr	x2, [x5]
  24:	mov	x1, #0x100000              	// #1048576
  28:	stp	x21, x22, [sp, #16]
  2c:	mov	x21, x0
  30:	mov	x0, x1
  34:	str	x30, [sp, #80]
  38:	str	x4, [sp, #104]
  3c:	bl	0 <_ZN11__sanitizer28MmapAlignedOrDieOnFatalErrorEmmPKc>
  40:	ldr	x4, [sp, #104]
  44:	cbz	x0, 22c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x22c>
  48:	mov	x22, x0
  4c:	tst	x0, #0xfffff
  50:	ldr	x0, [x19, #24]
  54:	stp	x23, x24, [sp, #32]
  58:	stp	x27, x28, [sp, #64]
  5c:	add	x0, x0, #0x100, lsl #12
  60:	str	x0, [x19, #24]
  64:	b.ne	438 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x438>  // b.any
  68:	mov	x0, #0xfffffff             	// #268435455
  6c:	lsr	x19, x22, #20
  70:	cmp	x0, x22, lsr #20
  74:	b.cc	4a0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x4a0>  // b.lo, b.ul, b.last
  78:	and	w23, w4, #0xff
  7c:	lsr	x20, x22, #32
  80:	ldr	x0, [x21, x20, lsl #3]
  84:	dmb	ish
  88:	cbz	x0, 3f0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3f0>
  8c:	and	x3, x19, #0xfff
  90:	ldrb	w1, [x0, x3]
  94:	cbnz	x1, 4f8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x4f8>
  98:	strb	w23, [x0, x3]
  9c:	cmp	x4, #0x35
  a0:	b.eq	2c4 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x2c4>  // b.none
  a4:	lsl	x28, x4, #4
  a8:	cmp	x4, #0x10
  ac:	b.ls	cc <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0xcc>  // b.plast
  b0:	sub	x0, x4, #0x10
  b4:	mov	x28, #0x100                 	// #256
  b8:	and	x1, x0, #0x3
  bc:	lsr	x0, x0, #2
  c0:	lsl	x0, x28, x0
  c4:	lsr	x28, x0, #2
  c8:	madd	x28, x28, x1, x0
  cc:	add	x0, x28, #0x10
  d0:	mov	x27, #0x100000              	// #1048576
  d4:	udiv	x27, x27, x0
  d8:	cbz	x28, 3e0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3e0>
  dc:	mov	w23, #0x4000                	// #16384
  e0:	mov	x1, #0x40                  	// #64
  e4:	mov	x0, #0x3e                  	// #62
  e8:	mul	x27, x27, x28
  ec:	udiv	w23, w23, w28
  f0:	cmp	x23, x1
  f4:	csel	x23, x23, x1, ls  // ls = plast
  f8:	cmp	x23, #0x0
  fc:	csinc	x23, x23, xzr, ne  // ne = any
 100:	cmp	x23, x0
 104:	csel	x23, x23, x0, ls  // ls = plast
 108:	add	x27, x22, x27
 10c:	cmp	x22, x27
 110:	b.cs	3e0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3e0>  // b.hs, b.nlast
 114:	add	x24, sp, #0x90
 118:	add	x7, x26, x4, lsl #10
 11c:	mov	x1, #0x0                   	// #0
 120:	mov	x19, #0x1                   	// #1
 124:	str	x22, [sp, #144]
 128:	add	x22, x22, x28
 12c:	cmp	x22, x27
 130:	b.cs	280 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x280>  // b.hs, b.nlast
 134:	str	x22, [x24, x19, lsl #3]
 138:	cmp	x19, #0x2f
 13c:	add	x19, x19, #0x1
 140:	b.ne	128 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x128>  // b.any
 144:	mov	x2, #0xd800                	// #55296
 148:	mov	x19, #0x0                   	// #0
 14c:	add	x9, x26, x2
 150:	b	15c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x15c>
 154:	cmp	x19, #0x2f
 158:	b.hi	2bc <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x2bc>  // b.pmore
 15c:	ldr	x8, [x24, x19, lsl #3]
 160:	cbz	x1, 1ac <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x1ac>
 164:	ldr	x5, [x1, #8]
 168:	add	x6, x5, #0x1
 16c:	add	x5, x5, #0x2
 170:	str	x6, [x1, #8]
 174:	add	x19, x19, #0x1
 178:	cmp	x6, x23
 17c:	str	x8, [x1, x5, lsl #3]
 180:	b.ne	154 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x154>  // b.any
 184:	ldr	x5, [x25, #8]
 188:	cbnz	x5, 248 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x248>
 18c:	dup	v0.2d, x1
 190:	str	xzr, [x1]
 194:	mov	x0, #0x1                   	// #1
 198:	str	x0, [x25, #8]
 19c:	cmp	x19, #0x2f
 1a0:	str	q0, [x25, #16]
 1a4:	b.hi	268 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x268>  // b.pmore
 1a8:	ldr	x8, [x24, x19, lsl #3]
 1ac:	mov	x1, x8
 1b0:	ldr	x20, [x7, #24]
 1b4:	cbnz	x20, 1cc <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x1cc>
 1b8:	cbz	x1, 224 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x224>
 1bc:	mov	x5, #0x0                   	// #0
 1c0:	mov	x6, #0x1                   	// #1
 1c4:	str	xzr, [x1, #8]
 1c8:	b	16c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x16c>
 1cc:	cmp	x20, #0x35
 1d0:	b.hi	458 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x458>  // b.pmore
 1d4:	lsl	x5, x20, #10
 1d8:	add	x1, x26, x5
 1dc:	ldr	x0, [x26, x5]
 1e0:	cbz	x0, 4c0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x4c0>
 1e4:	lsl	x20, x20, #7
 1e8:	add	x3, x26, x5
 1ec:	add	x1, x20, x0
 1f0:	sub	x0, x0, #0x1
 1f4:	add	x1, x1, #0x2
 1f8:	str	x0, [x26, x5]
 1fc:	add	x20, x20, x0
 200:	add	x20, x20, #0x4
 204:	ldr	x2, [x26, x1, lsl #3]
 208:	ldr	x0, [x9, #16]
 20c:	ldr	x1, [x3, #16]
 210:	prfm	pldl1keep, [x2]
 214:	add	x0, x0, x1
 218:	ldr	x1, [x26, x20, lsl #3]
 21c:	str	x0, [x9, #16]
 220:	cbnz	x1, 1bc <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x1bc>
 224:	ldp	x23, x24, [sp, #32]
 228:	ldp	x27, x28, [sp, #64]
 22c:	mov	w0, #0x0                   	// #0
 230:	ldp	x19, x20, [sp]
 234:	ldp	x21, x22, [sp, #16]
 238:	ldp	x25, x26, [sp, #48]
 23c:	ldr	x30, [sp, #80]
 240:	add	sp, sp, #0x210
 244:	ret
 248:	ldr	x2, [x25, #24]
 24c:	str	xzr, [x1]
 250:	add	x5, x5, #0x1
 254:	cmp	x19, #0x2f
 258:	str	x1, [x2]
 25c:	str	x5, [x25, #8]
 260:	str	x1, [x25, #24]
 264:	b.ls	1a8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x1a8>  // b.plast
 268:	add	x22, x22, x28
 26c:	mov	x19, #0x0                   	// #0
 270:	cmp	x22, x27
 274:	mov	x1, #0x0                   	// #0
 278:	b.cc	134 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x134>  // b.lo, b.ul, b.last
 27c:	nop
 280:	cbnz	x19, 2d8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x2d8>
 284:	cbz	x1, 3e0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3e0>
 288:	ldr	x2, [x1, #8]
 28c:	cbz	x2, 518 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x518>
 290:	ldr	x0, [x25, #8]
 294:	cbnz	x0, 478 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x478>
 298:	dup	v0.2d, x1
 29c:	ldp	x23, x24, [sp, #32]
 2a0:	ldp	x27, x28, [sp, #64]
 2a4:	str	xzr, [x1]
 2a8:	mov	x1, #0x1                   	// #1
 2ac:	mov	w0, w1
 2b0:	str	x1, [x25, #8]
 2b4:	str	q0, [x25, #16]
 2b8:	b	230 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x230>
 2bc:	mov	x19, #0x0                   	// #0
 2c0:	b	128 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x128>
 2c4:	mov	x27, #0x8200                	// #33280
 2c8:	mov	x23, #0x20                  	// #32
 2cc:	movk	x27, #0xf, lsl #16
 2d0:	mov	x28, #0x200                 	// #512
 2d4:	b	108 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x108>
 2d8:	add	x28, x26, x4, lsl #10
 2dc:	mov	x0, #0xd800                	// #55296
 2e0:	add	x27, sp, #0x90
 2e4:	add	x4, x26, x0
 2e8:	mov	x20, #0x0                   	// #0
 2ec:	b	2f8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x2f8>
 2f0:	cmp	x19, x20
 2f4:	b.ls	28c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x28c>  // b.plast
 2f8:	ldr	x22, [x27, x20, lsl #3]
 2fc:	cbz	x1, 348 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x348>
 300:	ldr	x0, [x1, #8]
 304:	add	x2, x0, #0x1
 308:	add	x0, x0, #0x2
 30c:	str	x2, [x1, #8]
 310:	add	x20, x20, #0x1
 314:	cmp	x2, x23
 318:	str	x22, [x1, x0, lsl #3]
 31c:	b.ne	2f0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x2f0>  // b.any
 320:	ldr	x0, [x25, #8]
 324:	cbnz	x0, 3c0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3c0>
 328:	dup	v0.2d, x1
 32c:	str	xzr, [x1]
 330:	mov	x0, #0x1                   	// #1
 334:	str	x0, [x25, #8]
 338:	cmp	x19, x20
 33c:	str	q0, [x25, #16]
 340:	b.ls	3e0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3e0>  // b.plast
 344:	ldr	x22, [x27, x20, lsl #3]
 348:	mov	x1, x22
 34c:	ldr	x24, [x28, #24]
 350:	cbnz	x24, 368 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x368>
 354:	cbz	x1, 224 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x224>
 358:	mov	x0, #0x0                   	// #0
 35c:	mov	x2, #0x1                   	// #1
 360:	str	xzr, [x1, #8]
 364:	b	308 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x308>
 368:	cmp	x24, #0x35
 36c:	b.hi	560 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x560>  // b.pmore
 370:	lsl	x5, x24, #10
 374:	add	x1, x26, x5
 378:	ldr	x0, [x26, x5]
 37c:	cbz	x0, 568 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x568>
 380:	lsl	x24, x24, #7
 384:	add	x2, x26, x5
 388:	add	x1, x24, x0
 38c:	sub	x0, x0, #0x1
 390:	add	x1, x1, #0x2
 394:	str	x0, [x26, x5]
 398:	add	x24, x24, x0
 39c:	add	x0, x24, #0x4
 3a0:	ldr	x3, [x26, x1, lsl #3]
 3a4:	ldr	x1, [x2, #16]
 3a8:	ldr	x2, [x4, #16]
 3ac:	prfm	pldl1keep, [x3]
 3b0:	add	x2, x2, x1
 3b4:	ldr	x1, [x26, x0, lsl #3]
 3b8:	str	x2, [x4, #16]
 3bc:	b	354 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x354>
 3c0:	ldr	x3, [x25, #24]
 3c4:	str	xzr, [x1]
 3c8:	add	x0, x0, #0x1
 3cc:	cmp	x19, x20
 3d0:	str	x1, [x3]
 3d4:	str	x0, [x25, #8]
 3d8:	str	x1, [x25, #24]
 3dc:	b.hi	344 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x344>  // b.pmore
 3e0:	mov	w0, #0x1                   	// #1
 3e4:	ldp	x23, x24, [sp, #32]
 3e8:	ldp	x27, x28, [sp, #64]
 3ec:	b	230 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x230>
 3f0:	add	x24, x21, #0x80, lsl #12
 3f4:	mov	w1, #0x1                   	// #1
 3f8:	ldxrb	w0, [x24]
 3fc:	stxrb	w2, w1, [x24]
 400:	cbnz	w2, 3f8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x3f8>
 404:	dmb	ish
 408:	tst	w0, #0xff
 40c:	b.eq	420 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x420>  // b.none
 410:	mov	x0, x24
 414:	str	x4, [sp, #104]
 418:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 41c:	ldr	x4, [sp, #104]
 420:	ldr	x0, [x21, x20, lsl #3]
 424:	dmb	ish
 428:	cbz	x0, 538 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x538>
 42c:	dmb	ish
 430:	strb	wzr, [x24]
 434:	b	8c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x8c>
 438:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 43c:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 440:	add	x2, x2, #0x0
 444:	add	x0, x0, #0x0
 448:	mov	x4, #0x0                   	// #0
 44c:	mov	x3, #0x0                   	// #0
 450:	mov	w1, #0x131                 	// #305
 454:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 458:	mov	x3, x20
 45c:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 460:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 464:	add	x2, x2, #0x0
 468:	add	x0, x0, #0x0
 46c:	mov	x4, #0x36                  	// #54
 470:	mov	w1, #0x9a                  	// #154
 474:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 478:	ldr	x4, [x25, #24]
 47c:	add	x2, x0, #0x1
 480:	ldp	x23, x24, [sp, #32]
 484:	mov	w0, #0x1                   	// #1
 488:	ldp	x27, x28, [sp, #64]
 48c:	str	xzr, [x1]
 490:	str	x1, [x4]
 494:	str	x2, [x25, #8]
 498:	str	x1, [x25, #24]
 49c:	b	230 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x230>
 4a0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 4a4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 4a8:	mov	x3, x19
 4ac:	add	x2, x2, #0x0
 4b0:	add	x0, x0, #0x0
 4b4:	mov	x4, #0x10000000            	// #268435456
 4b8:	mov	w1, #0x121                 	// #289
 4bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4c0:	mov	x3, x20
 4c4:	mov	x2, x21
 4c8:	mov	x0, x26
 4cc:	stp	x8, x4, [sp, #104]
 4d0:	stp	x5, x9, [sp, #120]
 4d4:	str	x7, [sp, #136]
 4d8:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 4dc:	tst	w0, #0xff
 4e0:	b.eq	224 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x224>  // b.none
 4e4:	ldp	x5, x9, [sp, #120]
 4e8:	ldp	x8, x4, [sp, #104]
 4ec:	ldr	x7, [sp, #136]
 4f0:	ldr	x0, [x26, x5]
 4f4:	b	1e4 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x1e4>
 4f8:	mov	x4, x1
 4fc:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 500:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 504:	add	x2, x2, #0x0
 508:	add	x0, x0, #0x0
 50c:	mov	x3, #0x0                   	// #0
 510:	mov	w1, #0x47                  	// #71
 514:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 518:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 51c:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 520:	add	x2, x2, #0x0
 524:	add	x0, x0, #0x0
 528:	mov	x4, #0x0                   	// #0
 52c:	mov	x3, #0x0                   	// #0
 530:	mov	w1, #0x174                 	// #372
 534:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 538:	mov	w2, #0x0                   	// #0
 53c:	adrp	x1, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 540:	mov	x0, #0x1000                	// #4096
 544:	add	x1, x1, #0x0
 548:	str	x4, [sp, #104]
 54c:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
 550:	dmb	ish
 554:	str	x0, [x21, x20, lsl #3]
 558:	ldr	x4, [sp, #104]
 55c:	b	42c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x42c>
 560:	mov	x3, x24
 564:	b	45c <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x45c>
 568:	mov	x3, x24
 56c:	mov	x2, x21
 570:	mov	x0, x26
 574:	stp	x5, x4, [sp, #104]
 578:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm>
 57c:	tst	w0, #0xff
 580:	b.eq	224 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x224>  // b.none
 584:	ldp	x5, x4, [sp, #104]
 588:	ldr	x0, [x26, x5]
 58c:	b	380 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE16PopulateFreeListEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEPNS5_13SizeClassInfoEm+0x380>

Disassembly of section .text._ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm:

0000000000000000 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	mov	x20, x0
   8:	mov	x0, #0x2001                	// #8193
   c:	stp	x21, x22, [sp, #16]
  10:	add	x22, x3, x0
  14:	mov	x19, x3
  18:	lsl	x21, x22, #6
  1c:	stp	x23, x24, [sp, #32]
  20:	add	x23, x20, x21
  24:	stp	x25, x26, [sp, #48]
  28:	mov	x25, x2
  2c:	mov	x24, x1
  30:	mov	w1, #0x1                   	// #1
  34:	str	x30, [sp, #64]
  38:	ldxrb	w0, [x23]
  3c:	stxrb	w2, w1, [x23]
  40:	cbnz	w2, 38 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0x38>
  44:	dmb	ish
  48:	tst	w0, #0xff
  4c:	b.eq	58 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0x58>  // b.none
  50:	mov	x0, x23
  54:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm>
  58:	add	x21, x21, #0x8
  5c:	add	x26, x20, x21
  60:	ldr	x5, [x20, x21]
  64:	cbnz	x5, 90 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0x90>
  68:	mov	x3, x23
  6c:	mov	x2, x25
  70:	mov	x1, x24
  74:	mov	x4, x19
  78:	mov	x0, x20
  7c:	bl	0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm>
  80:	tst	w0, #0xff
  84:	b.eq	100 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0x100>  // b.none
  88:	ldr	x5, [x20, x21]
  8c:	cbz	x5, e0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0xe0>
  90:	add	x4, x20, x19, lsl #6
  94:	add	x4, x4, #0x80, lsl #12
  98:	ldr	x0, [x26, #8]
  9c:	ldr	x1, [x4, #80]
  a0:	ldr	x1, [x1]
  a4:	str	x1, [x4, #80]
  a8:	cbz	x1, d8 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0xd8>
  ac:	sub	x5, x5, #0x1
  b0:	str	x5, [x4, #72]
  b4:	dmb	ish
  b8:	lsl	x22, x22, #6
  bc:	strb	wzr, [x20, x22]
  c0:	ldp	x21, x22, [sp, #16]
  c4:	ldp	x23, x24, [sp, #32]
  c8:	ldp	x25, x26, [sp, #48]
  cc:	ldr	x30, [sp, #64]
  d0:	ldp	x19, x20, [sp], #80
  d4:	ret
  d8:	str	xzr, [x4, #88]
  dc:	b	ac <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0xac>
  e0:	adrp	x2, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm>
  e4:	adrp	x0, 0 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm>
  e8:	add	x2, x2, #0x0
  ec:	add	x0, x0, #0x0
  f0:	mov	x4, #0x0                   	// #0
  f4:	mov	x3, #0x0                   	// #0
  f8:	mov	w1, #0x41                  	// #65
  fc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 100:	mov	x0, #0x0                   	// #0
 104:	b	b4 <_ZN11__sanitizer20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEE13AllocateBatchEPNS_14AllocatorStatsEPNS_30SizeClassAllocator32LocalCacheIS5_EEm+0xb4>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>:
   0:	stp	x19, x20, [sp, #-64]!
   4:	mov	x19, x0
   8:	ldr	x0, [x1, #8]
   c:	stp	x21, x22, [sp, #16]
  10:	mov	x21, x1
  14:	stp	x23, x24, [sp, #32]
  18:	mov	x22, x2
  1c:	mov	x23, x3
  20:	str	x30, [sp, #48]
  24:	cbz	x0, 168 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x168>
  28:	mov	x3, #0xd800                	// #55296
  2c:	add	x24, x19, x3
  30:	mov	x1, x24
  34:	mov	x3, x23
  38:	mov	x2, x19
  3c:	mov	x0, x22
  40:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
  44:	mov	x20, x0
  48:	cbz	x0, 150 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x150>
  4c:	ldr	x5, [x0, #8]
  50:	cbz	x5, 244 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x244>
  54:	add	x2, x0, #0x10
  58:	add	x0, x21, #0x30
  5c:	cmp	x2, x0
  60:	sub	x1, x5, #0x1
  64:	ccmp	x21, x20, #0x2, cc  // cc = lo, ul, last
  68:	add	x0, x21, #0x20
  6c:	ccmp	x1, #0x9, #0x0, cs  // cs = hs, nlast
  70:	b.ls	134 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x134>  // b.plast
  74:	lsr	x1, x5, #1
  78:	mov	x4, #0x0                   	// #0
  7c:	lsl	x1, x1, #4
  80:	ldr	q0, [x2, x4]
  84:	str	q0, [x0, x4]
  88:	add	x4, x4, #0x10
  8c:	cmp	x1, x4
  90:	b.ne	80 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x80>  // b.any
  94:	and	x4, x5, #0xfffffffffffffffe
  98:	tbz	w5, #0, a8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xa8>
  9c:	add	x1, x4, #0x2
  a0:	ldr	x1, [x20, x1, lsl #3]
  a4:	str	x1, [x0, x4, lsl #3]
  a8:	add	x23, x19, x23, lsl #10
  ac:	str	x5, [x21]
  b0:	mov	w0, #0x1                   	// #1
  b4:	ldr	x21, [x23, #24]
  b8:	cbnz	x21, d0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xd0>
  bc:	ldp	x21, x22, [sp, #16]
  c0:	ldp	x23, x24, [sp, #32]
  c4:	ldr	x30, [sp, #48]
  c8:	ldp	x19, x20, [sp], #64
  cc:	ret
  d0:	cmp	x21, #0x35
  d4:	b.hi	364 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x364>  // b.pmore
  d8:	lsl	x23, x21, #10
  dc:	add	x1, x19, x23
  e0:	ldr	x2, [x1, #8]
  e4:	cbz	x2, 27c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x27c>
  e8:	ldr	x0, [x19, x23]
  ec:	cmp	x0, x2
  f0:	b.eq	264 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x264>  // b.none
  f4:	add	x2, x0, x21, lsl #7
  f8:	add	x3, x19, x23
  fc:	add	x2, x2, #0x4
 100:	add	x0, x0, #0x1
 104:	str	x0, [x19, x23]
 108:	mov	w0, #0x1                   	// #1
 10c:	ldr	x1, [x24, #16]
 110:	str	x20, [x19, x2, lsl #3]
 114:	ldp	x21, x22, [sp, #16]
 118:	ldr	x2, [x3, #16]
 11c:	ldr	x30, [sp, #48]
 120:	sub	x1, x1, x2
 124:	str	x1, [x24, #16]
 128:	ldp	x23, x24, [sp, #32]
 12c:	ldp	x19, x20, [sp], #64
 130:	ret
 134:	mov	x1, #0x0                   	// #0
 138:	ldr	x3, [x2, x1, lsl #3]
 13c:	str	x3, [x0, x1, lsl #3]
 140:	add	x1, x1, #0x1
 144:	cmp	x5, x1
 148:	b.ne	138 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x138>  // b.any
 14c:	b	a8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xa8>
 150:	mov	w0, #0x0                   	// #0
 154:	ldp	x21, x22, [sp, #16]
 158:	ldp	x23, x24, [sp, #32]
 15c:	ldr	x30, [sp, #48]
 160:	ldp	x19, x20, [sp], #64
 164:	ret
 168:	mov	x5, #0x1                   	// #1
 16c:	mov	x11, x5
 170:	mov	x12, #0x7c                  	// #124
 174:	mov	x10, #0x14                  	// #20
 178:	mov	x9, #0x100                 	// #256
 17c:	mov	w8, #0x4000                	// #16384
 180:	mov	x3, #0x3e                  	// #62
 184:	nop
 188:	add	x2, x19, x5, lsl #10
 18c:	lsl	x4, x5, #4
 190:	mov	x6, x2
 194:	mov	x0, #0x14                  	// #20
 198:	mov	x1, x5
 19c:	add	x5, x5, #0x1
 1a0:	stp	x12, x4, [x2, #8]
 1a4:	cmp	x5, #0x36
 1a8:	str	x0, [x6, #24]
 1ac:	b.eq	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x28>  // b.none
 1b0:	cmp	x5, #0x35
 1b4:	b.eq	224 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x224>  // b.none
 1b8:	cmp	x5, #0x10
 1bc:	b.ls	188 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x188>  // b.plast
 1c0:	sub	x4, x1, #0xf
 1c4:	add	x6, x6, #0x400
 1c8:	and	x0, x4, #0x3
 1cc:	mov	x1, x5
 1d0:	lsr	x4, x4, #2
 1d4:	add	x5, x5, #0x1
 1d8:	lsl	x4, x9, x4
 1dc:	lsr	x7, x4, #2
 1e0:	madd	x7, x7, x0, x4
 1e4:	str	x7, [x6, #16]
 1e8:	udiv	w4, w8, w7
 1ec:	cmp	x4, #0x0
 1f0:	csel	x4, x4, x11, ne  // ne = any
 1f4:	cmp	x4, #0x3e
 1f8:	csel	x4, x4, x3, ls  // ls = plast
 1fc:	add	x0, x4, #0x2
 200:	lsl	x4, x4, #1
 204:	str	x4, [x6, #8]
 208:	cmp	x7, x0, lsl #3
 20c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 210:	str	x0, [x6, #24]
 214:	cmp	x5, #0x36
 218:	b.eq	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x28>  // b.none
 21c:	cmp	x5, #0x35
 220:	b.ne	1b8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x1b8>  // b.any
 224:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 228:	ldr	q0, [x0]
 22c:	mov	x0, #0xd400                	// #54272
 230:	add	x1, x19, x0
 234:	add	x0, x19, #0x8, lsl #12
 238:	stur	q0, [x1, #8]
 23c:	str	xzr, [x0, #21528]
 240:	b	28 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x28>
 244:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 248:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 24c:	add	x2, x2, #0x0
 250:	add	x0, x0, #0x0
 254:	mov	x4, #0x0                   	// #0
 258:	mov	x3, #0x0                   	// #0
 25c:	mov	w1, #0xf0                  	// #240
 260:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 264:	mov	x0, x19
 268:	mov	x2, x22
 26c:	mov	x3, x21
 270:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 274:	ldr	x0, [x19, x23]
 278:	b	f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xf4>
 27c:	mov	x2, #0x1                   	// #1
 280:	mov	x11, x2
 284:	mov	x12, #0x7c                  	// #124
 288:	mov	x10, #0x14                  	// #20
 28c:	mov	x9, #0x100                 	// #256
 290:	mov	w8, #0x4000                	// #16384
 294:	mov	x7, #0x3e                  	// #62
 298:	add	x5, x19, x2, lsl #10
 29c:	lsl	x6, x2, #4
 2a0:	mov	x4, x5
 2a4:	mov	x0, #0x14                  	// #20
 2a8:	mov	x3, x2
 2ac:	add	x2, x2, #0x1
 2b0:	stp	x12, x6, [x5, #8]
 2b4:	cmp	x2, #0x36
 2b8:	str	x0, [x4, #24]
 2bc:	b.eq	32c <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x32c>  // b.none
 2c0:	cmp	x2, #0x35
 2c4:	b.eq	334 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x334>  // b.none
 2c8:	cmp	x2, #0x10
 2cc:	b.ls	298 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x298>  // b.plast
 2d0:	sub	x0, x3, #0xf
 2d4:	add	x4, x4, #0x400
 2d8:	and	x6, x0, #0x3
 2dc:	mov	x3, x2
 2e0:	lsr	x0, x0, #2
 2e4:	add	x2, x2, #0x1
 2e8:	lsl	x0, x9, x0
 2ec:	lsr	x5, x0, #2
 2f0:	madd	x5, x5, x6, x0
 2f4:	str	x5, [x4, #16]
 2f8:	udiv	w0, w8, w5
 2fc:	cmp	x0, #0x0
 300:	csel	x0, x0, x11, ne  // ne = any
 304:	cmp	x0, #0x3e
 308:	csel	x0, x0, x7, ls  // ls = plast
 30c:	add	x6, x0, #0x2
 310:	lsl	x0, x0, #1
 314:	str	x0, [x4, #8]
 318:	cmp	x5, x6, lsl #3
 31c:	csel	x0, x10, xzr, cc  // cc = lo, ul, last
 320:	str	x0, [x4, #24]
 324:	cmp	x2, #0x36
 328:	b.ne	2c0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x2c0>  // b.any
 32c:	ldr	x2, [x1, #8]
 330:	b	e8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xe8>
 334:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 338:	mov	x2, #0xd400                	// #54272
 33c:	add	x2, x19, x2
 340:	ldr	q0, [x0]
 344:	add	x0, x19, #0x8, lsl #12
 348:	stur	q0, [x2, #8]
 34c:	str	xzr, [x0, #21528]
 350:	ldr	x0, [x19, x23]
 354:	ldr	x2, [x1, #8]
 358:	cmp	x0, x2
 35c:	b.ne	f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0xf4>  // b.any
 360:	b	264 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m+0x264>
 364:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 368:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE6RefillEPNS7_8PerClassEPS6_m>
 36c:	mov	x3, x21
 370:	add	x2, x2, #0x0
 374:	add	x0, x0, #0x0
 378:	mov	x4, #0x36                  	// #54
 37c:	mov	w1, #0xa9                  	// #169
 380:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

Disassembly of section .text._ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm:

0000000000000000 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	cmp	x2, #0x0
   8:	stp	x21, x22, [sp, #16]
   c:	csinc	x22, x2, xzr, ne  // ne = any
  10:	stp	x23, x24, [sp, #32]
  14:	mov	x23, x0
  18:	adds	x0, x3, x22
  1c:	str	x30, [sp, #72]
  20:	b.cs	4d4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x4d4>  // b.hs, b.nlast
  24:	mov	x19, x3
  28:	mov	x21, x1
  2c:	cmp	x3, #0x8
  30:	b.hi	2a0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x2a0>  // b.pmore
  34:	cmp	x2, #0x20, lsl #12
  38:	b.hi	fc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xfc>  // b.pmore
  3c:	cmp	x22, #0x100
  40:	b.ls	2dc <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x2dc>  // b.plast
  44:	clz	x3, x22
  48:	mov	w20, #0x3f                  	// #63
  4c:	sub	w20, w20, w3
  50:	mov	w0, #0x1                   	// #1
  54:	sub	w2, w20, #0x2
  58:	lsl	w0, w0, w2
  5c:	sub	w0, w0, #0x1
  60:	tst	x0, x22
  64:	lsr	x3, x22, x2
  68:	and	x3, x3, #0x3
  6c:	cinc	x3, x3, ne  // ne = any
  70:	add	x20, x3, w20, sxtw #2
  74:	sub	x20, x20, #0x10
  78:	cmp	x20, #0x35
  7c:	b.hi	328 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x328>  // b.pmore
  80:	lsl	x22, x20, #10
  84:	add	x1, x21, x22
  88:	ldr	x0, [x21, x22]
  8c:	cbz	x0, 3a0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x3a0>
  90:	lsl	x20, x20, #7
  94:	add	x4, x21, x22
  98:	add	x1, x20, x0
  9c:	mov	x2, #0xd800                	// #55296
  a0:	add	x1, x1, #0x2
  a4:	sub	x0, x0, #0x1
  a8:	add	x2, x21, x2
  ac:	str	x0, [x21, x22]
  b0:	add	x20, x20, x0
  b4:	ldr	x3, [x21, x1, lsl #3]
  b8:	add	x20, x20, #0x4
  bc:	ldr	x0, [x4, #16]
  c0:	ldr	x1, [x2, #16]
  c4:	prfm	pldl1keep, [x3]
  c8:	add	x1, x1, x0
  cc:	ldr	x0, [x21, x20, lsl #3]
  d0:	str	x1, [x2, #16]
  d4:	cmp	x19, #0x8
  d8:	b.ls	e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xe8>  // b.plast
  dc:	sub	x19, x19, #0x1
  e0:	ands	x3, x0, x19
  e4:	b.ne	3c0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x3c0>  // b.any
  e8:	ldp	x21, x22, [sp, #16]
  ec:	ldp	x23, x24, [sp, #32]
  f0:	ldr	x30, [sp, #72]
  f4:	ldp	x19, x20, [sp], #80
  f8:	ret
  fc:	stp	x25, x26, [sp, #48]
 100:	sub	x25, x3, #0x1
 104:	tst	x3, x25
 108:	b.ne	37c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x37c>  // b.any
 10c:	add	x24, x23, #0x80, lsl #12
 110:	add	x24, x24, #0xc00
 114:	ldr	x1, [x24, #448]
 118:	sub	x0, x1, #0x1
 11c:	tst	x1, x0
 120:	b.ne	314 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x314>  // b.any
 124:	add	x20, x22, x0
 128:	neg	x0, x1
 12c:	and	x20, x20, x0
 130:	cmp	x19, x1
 134:	add	x20, x20, x1
 138:	add	x0, x20, x19
 13c:	csel	x20, x0, x20, hi  // hi = pmore
 140:	cmp	x22, x20
 144:	b.hi	350 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x350>  // b.pmore
 148:	adrp	x1, 0 <_ZN11__sanitizer22SecondaryAllocatorNameE>
 14c:	mov	x0, x20
 150:	ldr	x1, [x1]
 154:	ldr	x1, [x1]
 158:	bl	0 <_ZN11__sanitizer21MmapOrDieOnFatalErrorEmPKc>
 15c:	mov	x4, x0
 160:	cbz	x0, 3e4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x3e4>
 164:	ldr	x1, [x24, #448]
 168:	str	x27, [sp, #64]
 16c:	sub	x2, x1, #0x1
 170:	tst	x0, x2
 174:	b.ne	3f0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x3f0>  // b.any
 178:	add	x21, x0, x1
 17c:	ands	x3, x25, x21
 180:	b.eq	194 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x194>  // b.none
 184:	add	x0, x19, x21
 188:	sub	x21, x0, x3
 18c:	tst	x25, x21
 190:	b.ne	410 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x410>  // b.any
 194:	tst	x21, x2
 198:	b.ne	430 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x430>  // b.any
 19c:	add	x3, x21, x22
 1a0:	cmp	x4, x3
 1a4:	b.hi	450 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x450>  // b.pmore
 1a8:	add	x0, x4, x20
 1ac:	cmp	x0, x3
 1b0:	b.cc	468 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x468>  // b.lo, b.ul, b.last
 1b4:	sub	x25, x21, x1
 1b8:	add	x26, x23, #0x80, lsl #12
 1bc:	add	x26, x26, #0xdc0
 1c0:	mov	w2, #0x1                   	// #1
 1c4:	add	x0, x26, #0x268
 1c8:	stp	x4, x20, [x25]
 1cc:	str	x22, [x25, #16]
 1d0:	ldxrb	w1, [x0]
 1d4:	stxrb	w3, w2, [x0]
 1d8:	cbnz	w3, 1d0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x1d0>
 1dc:	dmb	ish
 1e0:	tst	w1, #0xff
 1e4:	b.eq	1ec <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x1ec>  // b.none
 1e8:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 1ec:	ldr	x1, [x24, #504]
 1f0:	add	x22, x24, #0x1c0
 1f4:	mov	x0, #0xfffff               	// #1048575
 1f8:	cmp	x1, x0
 1fc:	b.hi	484 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x484>  // b.pmore
 200:	ldr	x0, [x24, #496]
 204:	cmp	x1, x0
 208:	b.eq	4a4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x4a4>  // b.none
 20c:	clz	x2, x20
 210:	mov	w0, #0x3f                  	// #63
 214:	sub	w0, w0, w2
 218:	add	x2, x1, #0x1
 21c:	str	x2, [x24, #504]
 220:	add	x24, x24, #0x1c0
 224:	ldr	x2, [x24, #88]
 228:	add	x4, x23, #0x81, lsl #12
 22c:	ldr	x5, [x24, #8]
 230:	add	x23, x23, w0, sxtw #3
 234:	ldr	x3, [x24, #96]
 238:	add	x0, x20, x2
 23c:	ldr	x2, [x24, #72]
 240:	str	x1, [x25, #24]
 244:	add	x23, x23, #0x80, lsl #12
 248:	cmp	x3, x0
 24c:	str	x25, [x5, x1, lsl #3]
 250:	csel	x3, x3, x0, cs  // cs = hs, nlast
 254:	add	x2, x2, #0x1
 258:	strb	wzr, [x24, #64]
 25c:	str	x2, [x24, #72]
 260:	stp	x0, x3, [x24, #88]
 264:	ldr	x2, [x23, #3624]
 268:	ldr	x0, [x4, #64]
 26c:	add	x2, x2, #0x1
 270:	str	x2, [x23, #3624]
 274:	add	x0, x20, x0
 278:	str	x0, [x4, #64]
 27c:	ldr	x0, [x4, #72]
 280:	add	x20, x20, x0
 284:	str	x20, [x4, #72]
 288:	dmb	ish
 28c:	strb	wzr, [x4, #40]
 290:	mov	x0, x21
 294:	ldp	x25, x26, [sp, #48]
 298:	ldr	x27, [sp, #64]
 29c:	b	d4 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xd4>
 2a0:	stp	x25, x26, [sp, #48]
 2a4:	sub	x25, x3, #0x1
 2a8:	tst	x3, x25
 2ac:	b.ne	314 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x314>  // b.any
 2b0:	sub	x1, x0, #0x1
 2b4:	neg	x0, x3
 2b8:	and	x0, x1, x0
 2bc:	cmp	x3, #0x20, lsl #12
 2c0:	mov	x1, #0x20000               	// #131072
 2c4:	ccmp	x0, x1, #0x2, ls  // ls = plast
 2c8:	b.hi	10c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x10c>  // b.pmore
 2cc:	mov	x22, x0
 2d0:	cmp	x22, #0x100
 2d4:	ldp	x25, x26, [sp, #48]
 2d8:	b.hi	44 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x44>  // b.pmore
 2dc:	add	x20, x22, #0xf
 2e0:	cmp	xzr, x20, lsr #4
 2e4:	lsr	x20, x20, #4
 2e8:	b.ne	80 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x80>  // b.any
 2ec:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 2f0:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 2f4:	add	x2, x2, #0x0
 2f8:	add	x0, x0, #0x0
 2fc:	mov	x4, #0x0                   	// #0
 300:	mov	x3, #0x0                   	// #0
 304:	mov	w1, #0x99                  	// #153
 308:	stp	x25, x26, [sp, #48]
 30c:	str	x27, [sp, #64]
 310:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 314:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 318:	add	x0, x0, #0x0
 31c:	str	x27, [sp, #64]
 320:	bl	0 <_ZN11__sanitizer8RawWriteEPKc>
 324:	bl	0 <_ZN11__sanitizer3DieEv>
 328:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 32c:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 330:	mov	x3, x20
 334:	add	x2, x2, #0x0
 338:	add	x0, x0, #0x0
 33c:	mov	x4, #0x36                  	// #54
 340:	mov	w1, #0x9a                  	// #154
 344:	stp	x25, x26, [sp, #48]
 348:	str	x27, [sp, #64]
 34c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 350:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 354:	mov	x3, x19
 358:	mov	x2, x20
 35c:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 360:	ldr	x1, [x1]
 364:	add	x0, x0, #0x0
 368:	ldr	x1, [x1]
 36c:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 370:	mov	x0, #0x0                   	// #0
 374:	ldp	x25, x26, [sp, #48]
 378:	b	e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xe8>
 37c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 380:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 384:	add	x2, x2, #0x0
 388:	add	x0, x0, #0x0
 38c:	mov	x4, #0x0                   	// #0
 390:	mov	x3, #0x0                   	// #0
 394:	mov	w1, #0x56                  	// #86
 398:	str	x27, [sp, #64]
 39c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3a0:	mov	x2, x23
 3a4:	mov	x3, x20
 3a8:	mov	x0, x21
 3ac:	bl	0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 3b0:	tst	w0, #0xff
 3b4:	b.eq	3e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x3e8>  // b.none
 3b8:	ldr	x0, [x21, x22]
 3bc:	b	90 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x90>
 3c0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 3c4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 3c8:	add	x2, x2, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	x4, #0x0                   	// #0
 3d4:	mov	w1, #0x49                  	// #73
 3d8:	stp	x25, x26, [sp, #48]
 3dc:	str	x27, [sp, #64]
 3e0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 3e4:	ldp	x25, x26, [sp, #48]
 3e8:	mov	x0, #0x0                   	// #0
 3ec:	b	e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xe8>
 3f0:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 3f4:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 3f8:	add	x2, x2, #0x0
 3fc:	add	x0, x0, #0x0
 400:	mov	x4, #0x0                   	// #0
 404:	mov	x3, #0x0                   	// #0
 408:	mov	w1, #0x65                  	// #101
 40c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 410:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 414:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 418:	add	x2, x2, #0x0
 41c:	add	x0, x0, #0x0
 420:	mov	x4, #0x0                   	// #0
 424:	mov	x3, #0x0                   	// #0
 428:	mov	w1, #0x6b                  	// #107
 42c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 430:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 434:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 438:	add	x2, x2, #0x0
 43c:	add	x0, x0, #0x0
 440:	mov	x4, #0x0                   	// #0
 444:	mov	x3, #0x0                   	// #0
 448:	mov	w1, #0x6c                  	// #108
 44c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 450:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 454:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 458:	add	x2, x2, #0x0
 45c:	add	x0, x0, #0x0
 460:	mov	w1, #0x6d                  	// #109
 464:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 468:	mov	x4, x0
 46c:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 470:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 474:	add	x2, x2, #0x0
 478:	add	x0, x0, #0x0
 47c:	mov	w1, #0x6e                  	// #110
 480:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 484:	mov	x3, x1
 488:	adrp	x2, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 48c:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 490:	add	x2, x2, #0x0
 494:	add	x0, x0, #0x0
 498:	mov	x4, #0x100000              	// #1048576
 49c:	mov	w1, #0x2a                  	// #42
 4a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 4a4:	add	x4, x23, #0x80, lsl #12
 4a8:	add	x0, x26, #0x10
 4ac:	mov	x3, #0x0                   	// #0
 4b0:	mov	x2, #0x20000               	// #131072
 4b4:	ldr	x4, [x4, #3536]
 4b8:	add	x1, x4, x1, lsl #3
 4bc:	bl	0 <_ZN11__sanitizer20ReservedAddressRange8MapOrDieEmmPKc>
 4c0:	ldr	x0, [x24, #496]
 4c4:	ldr	x1, [x22, #56]
 4c8:	add	x0, x0, #0x4, lsl #12
 4cc:	str	x0, [x24, #496]
 4d0:	b	20c <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0x20c>
 4d4:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 4d8:	mov	x2, x22
 4dc:	adrp	x0, 0 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm>
 4e0:	add	x0, x0, #0x0
 4e4:	ldr	x1, [x1]
 4e8:	ldr	x1, [x1]
 4ec:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 4f0:	mov	x0, #0x0                   	// #0
 4f4:	b	e8 <_ZN11__sanitizer17CombinedAllocatorINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEENS_33LargeMmapAllocatorPtrArrayDynamicEE8AllocateEPNS_30SizeClassAllocator32LocalCacheIS6_EEmm+0xe8>

Disassembly of section .text._ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m:

0000000000000000 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>:
   0:	stp	x19, x20, [sp, #-80]!
   4:	stp	x23, x24, [sp, #32]
   8:	mov	x23, x1
   c:	add	x1, x0, x3, lsl #10
  10:	stp	x25, x26, [sp, #48]
  14:	mov	x24, x3
  18:	mov	x25, x2
  1c:	ldp	x20, x19, [x23]
  20:	stp	x21, x22, [sp, #16]
  24:	ldr	x26, [x1, #24]
  28:	str	x30, [sp, #72]
  2c:	lsr	x19, x19, #1
  30:	cmp	x19, x20
  34:	csel	x19, x19, x20, ls  // ls = plast
  38:	sub	x21, x20, x19
  3c:	cbnz	x26, f4 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0xf4>
  40:	add	x0, x21, #0x4
  44:	ldr	x2, [x23, x0, lsl #3]
  48:	cbz	x2, 180 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x180>
  4c:	add	x5, x21, #0x4
  50:	str	x19, [x2, #8]
  54:	add	x5, x23, x5, lsl #3
  58:	cbz	x19, c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0xc8>
  5c:	add	x0, x20, #0x6
  60:	add	x4, x20, #0x4
  64:	sub	x0, x0, x19
  68:	sub	x4, x4, x19
  6c:	add	x7, x2, #0x10
  70:	add	x1, x2, #0x20
  74:	add	x0, x23, x0, lsl #3
  78:	add	x4, x23, x4, lsl #3
  7c:	cmp	x7, x0
  80:	sub	x0, x19, #0x1
  84:	ccmp	x1, x4, #0x0, cc  // cc = lo, ul, last
  88:	ccmp	x0, #0x9, #0x0, ls  // ls = plast
  8c:	b.ls	160 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x160>  // b.plast
  90:	lsr	x6, x19, #1
  94:	mov	x0, #0x0                   	// #0
  98:	lsl	x6, x6, #4
  9c:	nop
  a0:	ldr	q0, [x4, x0]
  a4:	str	q0, [x7, x0]
  a8:	add	x0, x0, #0x10
  ac:	cmp	x0, x6
  b0:	b.ne	a0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0xa0>  // b.any
  b4:	and	x0, x19, #0xfffffffffffffffe
  b8:	tbz	w19, #0, c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0xc8>
  bc:	add	x4, x0, #0x2
  c0:	ldr	x0, [x5, x0, lsl #3]
  c4:	str	x0, [x2, x4, lsl #3]
  c8:	ldr	x3, [x23]
  cc:	mov	x0, x25
  d0:	ldp	x21, x22, [sp, #16]
  d4:	sub	x19, x3, x19
  d8:	ldp	x25, x26, [sp, #48]
  dc:	mov	x1, x24
  e0:	ldr	x30, [sp, #72]
  e4:	str	x19, [x23]
  e8:	ldp	x23, x24, [sp, #32]
  ec:	ldp	x19, x20, [sp], #80
  f0:	b	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>
  f4:	str	x27, [sp, #64]
  f8:	cmp	x26, #0x35
  fc:	b.hi	1a0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x1a0>  // b.pmore
 100:	lsl	x27, x26, #10
 104:	mov	x22, x0
 108:	add	x1, x0, x27
 10c:	ldr	x3, [x0, x27]
 110:	cbz	x3, 1c0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x1c0>
 114:	lsl	x26, x26, #7
 118:	add	x2, x22, x27
 11c:	add	x0, x26, x3
 120:	mov	x1, #0xd800                	// #55296
 124:	add	x0, x0, #0x2
 128:	sub	x3, x3, #0x1
 12c:	add	x1, x22, x1
 130:	str	x3, [x22, x27]
 134:	add	x26, x26, x3
 138:	ldr	x3, [x22, x0, lsl #3]
 13c:	add	x26, x26, #0x4
 140:	ldr	x2, [x2, #16]
 144:	ldr	x0, [x1, #16]
 148:	prfm	pldl1keep, [x3]
 14c:	add	x0, x0, x2
 150:	ldr	x2, [x22, x26, lsl #3]
 154:	ldr	x27, [sp, #64]
 158:	str	x0, [x1, #16]
 15c:	b	48 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x48>
 160:	mov	x0, #0x0                   	// #0
 164:	nop
 168:	ldr	x1, [x5, x0, lsl #3]
 16c:	str	x1, [x7, x0, lsl #3]
 170:	add	x0, x0, #0x1
 174:	cmp	x19, x0
 178:	b.ne	168 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x168>  // b.any
 17c:	b	c8 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0xc8>
 180:	str	x27, [sp, #64]
 184:	adrp	x1, 0 <_ZN11__sanitizer17SanitizerToolNameE>
 188:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>
 18c:	add	x0, x0, #0x0
 190:	ldr	x1, [x1]
 194:	ldr	x1, [x1]
 198:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
 19c:	bl	0 <_ZN11__sanitizer3DieEv>
 1a0:	adrp	x2, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>
 1a4:	adrp	x0, 0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>
 1a8:	mov	x3, x26
 1ac:	add	x2, x2, #0x0
 1b0:	add	x0, x0, #0x0
 1b4:	mov	x4, #0x36                  	// #54
 1b8:	mov	w1, #0x9a                  	// #154
 1bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
 1c0:	mov	x3, x26
 1c4:	bl	0 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m>
 1c8:	tst	w0, #0xff
 1cc:	b.eq	184 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x184>  // b.none
 1d0:	ldr	x3, [x22, x27]
 1d4:	b	114 <_ZN11__sanitizer30SizeClassAllocator32LocalCacheINS_20SizeClassAllocator32IN6__lsan4AP32INS_21LocalAddressSpaceViewEEEEEE5DrainEPNS7_8PerClassEPS6_m+0x114>

lsan_linux.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__lsan16GetCurrentThreadEv>:
   0:	mrs	x1, tpidr_el0
   4:	str	x30, [sp, #-16]!
   8:	adrp	x0, 0 <_ZN6__lsan16GetCurrentThreadEv>
   c:	ldr	x2, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x2
  18:	ldr	x30, [sp], #16
  1c:	ldr	w0, [x1, x0]
  20:	ret
  24:	nop

0000000000000028 <_ZN6__lsan16SetCurrentThreadEj>:
  28:	mrs	x1, tpidr_el0
  2c:	str	x30, [sp, #-16]!
  30:	mov	w2, w0
  34:	adrp	x0, 0 <_ZN6__lsan16GetCurrentThreadEv>
  38:	ldr	x3, [x0]
  3c:	add	x0, x0, #0x0
  40:	blr	x3
  44:	ldr	x30, [sp], #16
  48:	str	w2, [x1, x0]
  4c:	ret

0000000000000050 <_ZN6__lsan17GetAllocatorCacheEv>:
  50:	str	x30, [sp, #-16]!
  54:	mrs	x1, tpidr_el0
  58:	adrp	x0, 0 <_ZN6__lsan16GetCurrentThreadEv>
  5c:	ldr	x2, [x0]
  60:	add	x0, x0, #0x0
  64:	blr	x2
  68:	add	x0, x1, x0
  6c:	ldr	x30, [sp], #16
  70:	ret
  74:	nop

0000000000000078 <_ZN6__lsan19ReplaceSystemMallocEv>:
  78:	ret

lsan_interceptors.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__interceptor_mallopt>:
       0:	mov	w0, #0x0                   	// #0
       4:	ret

0000000000000008 <__interceptor_cfree>:
       8:	adrp	x1, 0 <lsan_init_is_running>
       c:	str	x30, [sp, #-32]!
      10:	ldr	x1, [x1]
      14:	ldrb	w1, [x1]
      18:	cbnz	w1, 48 <__interceptor_cfree+0x40>
      1c:	adrp	x1, 0 <lsan_inited>
      20:	ldr	x1, [x1]
      24:	ldrb	w1, [x1]
      28:	cbz	w1, 34 <__interceptor_cfree+0x2c>
      2c:	ldr	x30, [sp], #32
      30:	b	0 <_ZN6__lsan9lsan_freeEPv>
      34:	str	x0, [sp, #24]
      38:	bl	0 <__lsan_init>
      3c:	ldr	x0, [sp, #24]
      40:	ldr	x30, [sp], #32
      44:	b	0 <_ZN6__lsan9lsan_freeEPv>
      48:	adrp	x2, 0 <__interceptor_mallopt>
      4c:	adrp	x0, 0 <__interceptor_mallopt>
      50:	add	x2, x2, #0x0
      54:	add	x0, x0, #0x0
      58:	mov	x4, #0x0                   	// #0
      5c:	mov	x3, #0x0                   	// #0
      60:	mov	w1, #0x3b                  	// #59
      64:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000068 <__interceptor_malloc_usable_size>:
      68:	adrp	x1, 0 <lsan_init_is_running>
      6c:	str	x30, [sp, #-32]!
      70:	ldr	x1, [x1]
      74:	ldrb	w1, [x1]
      78:	cbnz	w1, a8 <__interceptor_malloc_usable_size+0x40>
      7c:	adrp	x1, 0 <lsan_inited>
      80:	ldr	x1, [x1]
      84:	ldrb	w1, [x1]
      88:	cbz	w1, 94 <__interceptor_malloc_usable_size+0x2c>
      8c:	ldr	x30, [sp], #32
      90:	b	0 <_ZN6__lsan19GetMallocUsableSizeEPKv>
      94:	str	x0, [sp, #24]
      98:	bl	0 <__lsan_init>
      9c:	ldr	x0, [sp, #24]
      a0:	ldr	x30, [sp], #32
      a4:	b	0 <_ZN6__lsan19GetMallocUsableSizeEPKv>
      a8:	adrp	x2, 0 <__interceptor_mallopt>
      ac:	adrp	x0, 0 <__interceptor_mallopt>
      b0:	add	x2, x2, #0x0
      b4:	add	x0, x0, #0x0
      b8:	mov	x4, #0x0                   	// #0
      bc:	mov	x3, #0x0                   	// #0
      c0:	mov	w1, #0x8b                  	// #139
      c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000000c8 <__interceptor_mallinfo>:
      c8:	str	x30, [sp, #-16]!
      cc:	mov	x0, x8
      d0:	mov	x2, #0x28                  	// #40
      d4:	mov	w1, #0x0                   	// #0
      d8:	bl	0 <_ZN11__sanitizer15internal_memsetEPvim>
      dc:	ldr	x30, [sp], #16
      e0:	ret
      e4:	nop

00000000000000e8 <__interceptor_strerror>:
      e8:	stp	x19, x30, [sp, #-16]!
      ec:	mov	w19, w0
      f0:	bl	0 <_ZN6__lsan19DisableInThisThreadEv>
      f4:	adrp	x1, 0 <__interceptor_mallopt>
      f8:	mov	w0, w19
      fc:	ldr	x1, [x1]
     100:	blr	x1
     104:	mov	x19, x0
     108:	bl	0 <_ZN6__lsan18EnableInThisThreadEv>
     10c:	mov	x0, x19
     110:	ldp	x19, x30, [sp], #16
     114:	ret

0000000000000118 <__interceptor_pthread_join>:
     118:	adrp	x2, 0 <lsan_init_is_running>
     11c:	stp	x19, x20, [sp, #-32]!
     120:	mov	x19, x0
     124:	ldr	x2, [x2]
     128:	stp	x21, x30, [sp, #16]
     12c:	ldrb	w0, [x2]
     130:	cbnz	w0, 1a0 <__interceptor_pthread_join+0x88>
     134:	adrp	x0, 0 <lsan_inited>
     138:	mov	x20, x1
     13c:	ldr	x0, [x0]
     140:	ldrb	w0, [x0]
     144:	cbz	w0, 180 <__interceptor_pthread_join+0x68>
     148:	mov	x0, x19
     14c:	bl	0 <_ZN6__lsan9ThreadTidEm>
     150:	adrp	x2, 0 <__interceptor_mallopt>
     154:	mov	w21, w0
     158:	mov	x1, x20
     15c:	mov	x0, x19
     160:	ldr	x2, [x2]
     164:	blr	x2
     168:	mov	w19, w0
     16c:	cbz	w0, 188 <__interceptor_pthread_join+0x70>
     170:	mov	w0, w19
     174:	ldp	x21, x30, [sp, #16]
     178:	ldp	x19, x20, [sp], #32
     17c:	ret
     180:	bl	0 <__lsan_init>
     184:	b	148 <__interceptor_pthread_join+0x30>
     188:	mov	w0, w21
     18c:	bl	0 <_ZN6__lsan10ThreadJoinEj>
     190:	mov	w0, w19
     194:	ldp	x21, x30, [sp, #16]
     198:	ldp	x19, x20, [sp], #32
     19c:	ret
     1a0:	adrp	x2, 0 <__interceptor_mallopt>
     1a4:	adrp	x0, 0 <__interceptor_mallopt>
     1a8:	add	x2, x2, #0x0
     1ac:	add	x0, x0, #0x0
     1b0:	mov	x4, #0x0                   	// #0
     1b4:	mov	x3, #0x0                   	// #0
     1b8:	mov	w1, #0x1d0                 	// #464
     1bc:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000001c0 <__interceptor__exit>:
     1c0:	stp	x19, x30, [sp, #-16]!
     1c4:	mov	w19, w0
     1c8:	cbz	w0, 1e4 <__interceptor__exit+0x24>
     1cc:	mov	w0, w19
     1d0:	adrp	x1, 0 <__interceptor_mallopt>
     1d4:	ldp	x19, x30, [sp], #16
     1d8:	ldr	x1, [x1]
     1dc:	mov	x16, x1
     1e0:	br	x16
     1e4:	bl	0 <_ZN6__lsan16HasReportedLeaksEv>
     1e8:	tst	w0, #0xff
     1ec:	b.eq	1cc <__interceptor__exit+0xc>  // b.none
     1f0:	adrp	x0, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     1f4:	adrp	x1, 0 <__interceptor_mallopt>
     1f8:	ldr	x0, [x0]
     1fc:	ldr	x1, [x1]
     200:	ldr	w19, [x0, #224]
     204:	mov	x16, x1
     208:	mov	w0, w19
     20c:	ldp	x19, x30, [sp], #16
     210:	br	x16
     214:	nop

0000000000000218 <__interceptor_signal>:
     218:	stp	x19, x20, [sp, #-32]!
     21c:	mov	x20, x1
     220:	mov	w19, w0
     224:	str	x30, [sp, #16]
     228:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
     22c:	cmp	w0, #0x2
     230:	b.eq	254 <__interceptor_signal+0x3c>  // b.none
     234:	mov	x1, x20
     238:	mov	w0, w19
     23c:	adrp	x2, 0 <__interceptor_mallopt>
     240:	ldr	x30, [sp, #16]
     244:	ldp	x19, x20, [sp], #32
     248:	ldr	x2, [x2]
     24c:	mov	x16, x2
     250:	br	x16
     254:	mov	x0, #0x0                   	// #0
     258:	ldr	x30, [sp, #16]
     25c:	ldp	x19, x20, [sp], #32
     260:	ret
     264:	nop

0000000000000268 <__interceptor_sigaction>:
     268:	stp	x19, x20, [sp, #-48]!
     26c:	mov	x20, x1
     270:	mov	w19, w0
     274:	stp	x21, x30, [sp, #16]
     278:	mov	x21, x2
     27c:	str	x2, [sp, #40]
     280:	bl	0 <_ZN11__sanitizer19GetHandleSignalModeEi>
     284:	cmp	w0, #0x2
     288:	b.eq	2b0 <__interceptor_sigaction+0x48>  // b.none
     28c:	adrp	x3, 0 <__interceptor_mallopt>
     290:	mov	x2, x21
     294:	mov	x1, x20
     298:	mov	w0, w19
     29c:	ldr	x3, [x3]
     2a0:	ldp	x21, x30, [sp, #16]
     2a4:	mov	x16, x3
     2a8:	ldp	x19, x20, [sp], #48
     2ac:	br	x16
     2b0:	mov	w0, #0x0                   	// #0
     2b4:	ldp	x21, x30, [sp, #16]
     2b8:	ldp	x19, x20, [sp], #48
     2bc:	ret

00000000000002c0 <__lsan_thread_start_func>:
     2c0:	adrp	x2, 0 <__interceptor_mallopt>
     2c4:	stp	x19, x20, [sp, #-48]!
     2c8:	mov	x20, x0
     2cc:	ldr	w0, [x2]
     2d0:	mov	x1, #0x4                   	// #4
     2d4:	stp	x21, x22, [sp, #16]
     2d8:	ldp	x21, x22, [x20]
     2dc:	str	x30, [sp, #32]
     2e0:	bl	0 <pthread_setspecific>
     2e4:	cbz	w0, 2f0 <__lsan_thread_start_func+0x30>
     2e8:	b	338 <__lsan_thread_start_func+0x78>
     2ec:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
     2f0:	ldr	x19, [x20, #16]
     2f4:	dmb	ish
     2f8:	cbz	w19, 2ec <__lsan_thread_start_func+0x2c>
     2fc:	mov	w0, w19
     300:	bl	0 <_ZN6__lsan16SetCurrentThreadEj>
     304:	bl	0 <_ZN11__sanitizer6GetTidEv>
     308:	mov	x1, x0
     30c:	mov	w2, #0x0                   	// #0
     310:	mov	w0, w19
     314:	bl	0 <_ZN6__lsan11ThreadStartEjyN11__sanitizer10ThreadTypeE>
     318:	dmb	ish
     31c:	str	xzr, [x20, #16]
     320:	mov	x0, x22
     324:	mov	x16, x21
     328:	ldp	x21, x22, [sp, #16]
     32c:	ldr	x30, [sp, #32]
     330:	ldp	x19, x20, [sp], #48
     334:	br	x16
     338:	adrp	x0, 0 <__interceptor_mallopt>
     33c:	add	x0, x0, #0x0
     340:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     344:	bl	0 <_ZN11__sanitizer3DieEv>

0000000000000348 <__interceptor_pthread_create>:
     348:	adrp	x4, 0 <lsan_init_is_running>
     34c:	stp	x19, x20, [sp, #-208]!
     350:	ldr	x4, [x4]
     354:	stp	x21, x22, [sp, #16]
     358:	mov	x21, x0
     35c:	ldrb	w0, [x4]
     360:	str	x30, [sp, #32]
     364:	cbnz	w0, 488 <__interceptor_pthread_create+0x140>
     368:	adrp	x0, 0 <lsan_inited>
     36c:	mov	x19, x1
     370:	mov	x22, x2
     374:	mov	x20, x3
     378:	ldr	x0, [x0]
     37c:	ldrb	w0, [x0]
     380:	cbz	w0, 3fc <__interceptor_pthread_create+0xb4>
     384:	bl	0 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv>
     388:	cbz	x19, 408 <__interceptor_pthread_create+0xc0>
     38c:	mov	x0, x19
     390:	bl	0 <_ZN11__sanitizer15AdjustStackSizeEPv>
     394:	add	x1, sp, #0x34
     398:	mov	x0, x19
     39c:	str	wzr, [sp, #52]
     3a0:	bl	0 <pthread_attr_getdetachstate>
     3a4:	stp	x22, x20, [sp, #56]
     3a8:	str	xzr, [sp, #72]
     3ac:	bl	0 <_ZN6__lsan19DisableInThisThreadEv>
     3b0:	adrp	x0, 0 <__interceptor_mallopt>
     3b4:	add	x3, sp, #0x38
     3b8:	mov	x1, x19
     3bc:	adrp	x2, 2c0 <__lsan_thread_start_func>
     3c0:	ldr	x4, [x0]
     3c4:	add	x2, x2, #0x0
     3c8:	mov	x0, x21
     3cc:	blr	x4
     3d0:	mov	w20, w0
     3d4:	bl	0 <_ZN6__lsan18EnableInThisThreadEv>
     3d8:	cbz	w20, 418 <__interceptor_pthread_create+0xd0>
     3dc:	add	x0, sp, #0x50
     3e0:	cmp	x19, x0
     3e4:	b.eq	46c <__interceptor_pthread_create+0x124>  // b.none
     3e8:	mov	w0, w20
     3ec:	ldp	x21, x22, [sp, #16]
     3f0:	ldr	x30, [sp, #32]
     3f4:	ldp	x19, x20, [sp], #208
     3f8:	ret
     3fc:	bl	0 <__lsan_init>
     400:	bl	0 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv>
     404:	cbnz	x19, 38c <__interceptor_pthread_create+0x44>
     408:	add	x0, sp, #0x50
     40c:	mov	x19, x0
     410:	bl	0 <pthread_attr_init>
     414:	b	38c <__interceptor_pthread_create+0x44>
     418:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
     41c:	mov	w22, w0
     420:	ldr	w0, [sp, #52]
     424:	ldr	x21, [x21]
     428:	bl	0 <_ZN11__sanitizer15IsStateDetachedEi>
     42c:	mov	w2, w0
     430:	mov	x1, x21
     434:	mov	w0, w22
     438:	bl	0 <_ZN6__lsan12ThreadCreateEjmb>
     43c:	sxtw	x1, w0
     440:	cbz	w0, 4a8 <__interceptor_pthread_create+0x160>
     444:	dmb	ish
     448:	str	x1, [sp, #72]
     44c:	b	454 <__interceptor_pthread_create+0x10c>
     450:	bl	0 <_ZN11__sanitizer20internal_sched_yieldEv>
     454:	ldr	x1, [sp, #72]
     458:	dmb	ish
     45c:	cbnz	x1, 450 <__interceptor_pthread_create+0x108>
     460:	add	x0, sp, #0x50
     464:	cmp	x19, x0
     468:	b.ne	3e8 <__interceptor_pthread_create+0xa0>  // b.any
     46c:	mov	x0, x19
     470:	bl	0 <pthread_attr_destroy>
     474:	mov	w0, w20
     478:	ldp	x21, x22, [sp, #16]
     47c:	ldr	x30, [sp, #32]
     480:	ldp	x19, x20, [sp], #208
     484:	ret
     488:	adrp	x2, 0 <__interceptor_mallopt>
     48c:	adrp	x0, 0 <__interceptor_mallopt>
     490:	add	x2, x2, #0x0
     494:	add	x0, x0, #0x0
     498:	mov	x4, #0x0                   	// #0
     49c:	mov	x3, #0x0                   	// #0
     4a0:	mov	w1, #0x1ab                 	// #427
     4a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     4a8:	adrp	x2, 0 <__interceptor_mallopt>
     4ac:	adrp	x0, 0 <__interceptor_mallopt>
     4b0:	add	x2, x2, #0x0
     4b4:	add	x0, x0, #0x0
     4b8:	mov	x4, #0x0                   	// #0
     4bc:	mov	x3, #0x0                   	// #0
     4c0:	mov	w1, #0x1c5                 	// #453
     4c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000004c8 <_ZL15thread_finalizePv>:
     4c8:	cmp	x0, #0x1
     4cc:	b.ls	4f0 <_ZL15thread_finalizePv+0x28>  // b.plast
     4d0:	adrp	x2, 0 <__interceptor_mallopt>
     4d4:	sub	x1, x0, #0x1
     4d8:	str	x30, [sp, #-16]!
     4dc:	ldr	w0, [x2]
     4e0:	bl	0 <pthread_setspecific>
     4e4:	cbnz	w0, 4f4 <_ZL15thread_finalizePv+0x2c>
     4e8:	ldr	x30, [sp], #16
     4ec:	ret
     4f0:	b	0 <_ZN6__lsan12ThreadFinishEv>
     4f4:	adrp	x0, 0 <__interceptor_mallopt>
     4f8:	add	x0, x0, #0x0
     4fc:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
     500:	bl	0 <_ZN11__sanitizer3DieEv>
     504:	nop

0000000000000508 <__interceptor_calloc.part.0>:
     508:	sub	sp, sp, #0x850
     50c:	adrp	x2, 0 <lsan_inited>
     510:	stp	x29, x30, [sp]
     514:	mov	x29, sp
     518:	ldr	x2, [x2]
     51c:	stp	x19, x20, [sp, #16]
     520:	mov	x19, x0
     524:	mov	x20, x1
     528:	ldrb	w0, [x2]
     52c:	str	x21, [sp, #32]
     530:	cbz	w0, 5b0 <__interceptor_calloc.part.0+0xa8>
     534:	add	x21, x29, #0x38
     538:	str	xzr, [x29, #64]
     53c:	add	x0, x21, #0x10
     540:	str	x0, [x29, #56]
     544:	str	xzr, [x29, #2120]
     548:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     54c:	mov	x1, x0
     550:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     554:	ldr	x2, [x2]
     558:	ldr	w5, [x2, #36]
     55c:	cbnz	w5, 56c <__interceptor_calloc.part.0+0x64>
     560:	str	w5, [x29, #64]
     564:	str	xzr, [x29, #2120]
     568:	b	58c <__interceptor_calloc.part.0+0x84>
     56c:	str	x29, [x29, #2120]
     570:	cmp	w5, #0x1
     574:	ldrb	w4, [x2, #34]
     578:	b.eq	5b8 <__interceptor_calloc.part.0+0xb0>  // b.none
     57c:	mov	x2, x29
     580:	mov	x0, x21
     584:	mov	x3, #0x0                   	// #0
     588:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     58c:	mov	x2, x21
     590:	mov	x1, x20
     594:	mov	x0, x19
     598:	bl	0 <_ZN6__lsan11lsan_callocEmmRKN11__sanitizer10StackTraceE>
     59c:	ldp	x29, x30, [sp]
     5a0:	ldp	x19, x20, [sp, #16]
     5a4:	ldr	x21, [sp, #32]
     5a8:	add	sp, sp, #0x850
     5ac:	ret
     5b0:	bl	0 <__lsan_init>
     5b4:	b	534 <__interceptor_calloc.part.0+0x2c>
     5b8:	str	w5, [x29, #64]
     5bc:	str	x0, [x29, #72]
     5c0:	b	58c <__interceptor_calloc.part.0+0x84>
     5c4:	nop

00000000000005c8 <__interceptor_calloc>:
     5c8:	adrp	x3, 0 <lsan_init_is_running>
     5cc:	ldr	x3, [x3]
     5d0:	ldrb	w3, [x3]
     5d4:	cbz	w3, 610 <__interceptor_calloc+0x48>
     5d8:	mov	x4, x1
     5dc:	adrp	x1, 0 <__interceptor_mallopt>
     5e0:	add	x1, x1, #0x0
     5e4:	mul	x2, x0, x4
     5e8:	adrp	x0, 0 <__interceptor_mallopt>
     5ec:	add	x3, x0, #0x0
     5f0:	ldr	x0, [x1, #56]
     5f4:	add	x2, x2, #0x7
     5f8:	add	x2, x0, x2, lsr #3
     5fc:	str	x2, [x1, #56]
     600:	cmp	x2, #0x3ff
     604:	add	x0, x3, x0, lsl #3
     608:	b.hi	614 <__interceptor_calloc+0x4c>  // b.pmore
     60c:	ret
     610:	b	508 <__interceptor_calloc.part.0>
     614:	str	x30, [sp, #-16]!
     618:	adrp	x2, 0 <__interceptor_mallopt>
     61c:	adrp	x0, 0 <__interceptor_mallopt>
     620:	add	x2, x2, #0x0
     624:	add	x0, x0, #0x0
     628:	mov	x4, #0x0                   	// #0
     62c:	mov	x3, #0x0                   	// #0
     630:	mov	w1, #0x48                  	// #72
     634:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000000638 <__interceptor_malloc>:
     638:	sub	sp, sp, #0x840
     63c:	adrp	x1, 0 <lsan_init_is_running>
     640:	stp	x29, x30, [sp]
     644:	mov	x29, sp
     648:	ldr	x1, [x1]
     64c:	stp	x19, x20, [sp, #16]
     650:	mov	x19, x0
     654:	ldrb	w0, [x1]
     658:	cbnz	w0, 70c <__interceptor_malloc+0xd4>
     65c:	adrp	x0, 0 <lsan_inited>
     660:	ldr	x0, [x0]
     664:	ldrb	w0, [x0]
     668:	cbz	w0, 6f8 <__interceptor_malloc+0xc0>
     66c:	add	x20, x29, #0x28
     670:	str	xzr, [x29, #48]
     674:	add	x0, x20, #0x10
     678:	str	x0, [x29, #40]
     67c:	str	xzr, [x29, #2104]
     680:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     684:	mov	x1, x0
     688:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     68c:	ldr	x2, [x2]
     690:	ldr	w5, [x2, #36]
     694:	cbz	w5, 6d4 <__interceptor_malloc+0x9c>
     698:	str	x29, [x29, #2104]
     69c:	cmp	w5, #0x1
     6a0:	ldrb	w4, [x2, #34]
     6a4:	b.eq	700 <__interceptor_malloc+0xc8>  // b.none
     6a8:	mov	x2, x29
     6ac:	mov	x3, #0x0                   	// #0
     6b0:	mov	x0, x20
     6b4:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     6b8:	mov	x1, x20
     6bc:	mov	x0, x19
     6c0:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
     6c4:	ldp	x29, x30, [sp]
     6c8:	ldp	x19, x20, [sp, #16]
     6cc:	add	sp, sp, #0x840
     6d0:	ret
     6d4:	str	w5, [x29, #48]
     6d8:	str	xzr, [x29, #2104]
     6dc:	mov	x1, x20
     6e0:	mov	x0, x19
     6e4:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
     6e8:	ldp	x29, x30, [sp]
     6ec:	ldp	x19, x20, [sp, #16]
     6f0:	add	sp, sp, #0x840
     6f4:	ret
     6f8:	bl	0 <__lsan_init>
     6fc:	b	66c <__interceptor_malloc+0x34>
     700:	str	w5, [x29, #48]
     704:	str	x0, [x29, #56]
     708:	b	6dc <__interceptor_malloc+0xa4>
     70c:	adrp	x2, 0 <__interceptor_mallopt>
     710:	adrp	x0, 0 <__interceptor_mallopt>
     714:	add	x2, x2, #0x0
     718:	add	x0, x0, #0x0
     71c:	mov	x4, #0x0                   	// #0
     720:	mov	x3, #0x0                   	// #0
     724:	mov	w1, #0x35                  	// #53
     728:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     72c:	nop

0000000000000730 <__interceptor_valloc>:
     730:	sub	sp, sp, #0x840
     734:	adrp	x1, 0 <lsan_init_is_running>
     738:	stp	x29, x30, [sp]
     73c:	mov	x29, sp
     740:	ldr	x1, [x1]
     744:	stp	x19, x20, [sp, #16]
     748:	mov	x19, x0
     74c:	ldrb	w0, [x1]
     750:	cbnz	w0, 804 <__interceptor_valloc+0xd4>
     754:	adrp	x0, 0 <lsan_inited>
     758:	ldr	x0, [x0]
     75c:	ldrb	w0, [x0]
     760:	cbz	w0, 7f0 <__interceptor_valloc+0xc0>
     764:	add	x20, x29, #0x28
     768:	str	xzr, [x29, #48]
     76c:	add	x0, x20, #0x10
     770:	str	x0, [x29, #40]
     774:	str	xzr, [x29, #2104]
     778:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     77c:	mov	x1, x0
     780:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     784:	ldr	x2, [x2]
     788:	ldr	w5, [x2, #36]
     78c:	cbz	w5, 7cc <__interceptor_valloc+0x9c>
     790:	str	x29, [x29, #2104]
     794:	cmp	w5, #0x1
     798:	ldrb	w4, [x2, #34]
     79c:	b.eq	7f8 <__interceptor_valloc+0xc8>  // b.none
     7a0:	mov	x2, x29
     7a4:	mov	x3, #0x0                   	// #0
     7a8:	mov	x0, x20
     7ac:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     7b0:	mov	x1, x20
     7b4:	mov	x0, x19
     7b8:	bl	0 <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE>
     7bc:	ldp	x29, x30, [sp]
     7c0:	ldp	x19, x20, [sp, #16]
     7c4:	add	sp, sp, #0x840
     7c8:	ret
     7cc:	str	w5, [x29, #48]
     7d0:	str	xzr, [x29, #2104]
     7d4:	mov	x1, x20
     7d8:	mov	x0, x19
     7dc:	bl	0 <_ZN6__lsan11lsan_vallocEmRKN11__sanitizer10StackTraceE>
     7e0:	ldp	x29, x30, [sp]
     7e4:	ldp	x19, x20, [sp, #16]
     7e8:	add	sp, sp, #0x840
     7ec:	ret
     7f0:	bl	0 <__lsan_init>
     7f4:	b	764 <__interceptor_valloc+0x34>
     7f8:	str	w5, [x29, #48]
     7fc:	str	x0, [x29, #56]
     800:	b	7d4 <__interceptor_valloc+0xa4>
     804:	adrp	x2, 0 <__interceptor_mallopt>
     808:	adrp	x0, 0 <__interceptor_mallopt>
     80c:	add	x2, x2, #0x0
     810:	add	x0, x0, #0x0
     814:	mov	x4, #0x0                   	// #0
     818:	mov	x3, #0x0                   	// #0
     81c:	mov	w1, #0x63                  	// #99
     820:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     824:	nop

0000000000000828 <__interceptor_pvalloc>:
     828:	sub	sp, sp, #0x840
     82c:	adrp	x1, 0 <lsan_init_is_running>
     830:	stp	x29, x30, [sp]
     834:	mov	x29, sp
     838:	ldr	x1, [x1]
     83c:	stp	x19, x20, [sp, #16]
     840:	mov	x19, x0
     844:	ldrb	w0, [x1]
     848:	cbnz	w0, 8fc <__interceptor_pvalloc+0xd4>
     84c:	adrp	x0, 0 <lsan_inited>
     850:	ldr	x0, [x0]
     854:	ldrb	w0, [x0]
     858:	cbz	w0, 8e8 <__interceptor_pvalloc+0xc0>
     85c:	add	x20, x29, #0x28
     860:	str	xzr, [x29, #48]
     864:	add	x0, x20, #0x10
     868:	str	x0, [x29, #40]
     86c:	str	xzr, [x29, #2104]
     870:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     874:	mov	x1, x0
     878:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     87c:	ldr	x2, [x2]
     880:	ldr	w5, [x2, #36]
     884:	cbz	w5, 8c4 <__interceptor_pvalloc+0x9c>
     888:	str	x29, [x29, #2104]
     88c:	cmp	w5, #0x1
     890:	ldrb	w4, [x2, #34]
     894:	b.eq	8f0 <__interceptor_pvalloc+0xc8>  // b.none
     898:	mov	x2, x29
     89c:	mov	x3, #0x0                   	// #0
     8a0:	mov	x0, x20
     8a4:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     8a8:	mov	x1, x20
     8ac:	mov	x0, x19
     8b0:	bl	0 <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE>
     8b4:	ldp	x29, x30, [sp]
     8b8:	ldp	x19, x20, [sp, #16]
     8bc:	add	sp, sp, #0x840
     8c0:	ret
     8c4:	str	w5, [x29, #48]
     8c8:	str	xzr, [x29, #2104]
     8cc:	mov	x1, x20
     8d0:	mov	x0, x19
     8d4:	bl	0 <_ZN6__lsan12lsan_pvallocEmRKN11__sanitizer10StackTraceE>
     8d8:	ldp	x29, x30, [sp]
     8dc:	ldp	x19, x20, [sp, #16]
     8e0:	add	sp, sp, #0x840
     8e4:	ret
     8e8:	bl	0 <__lsan_init>
     8ec:	b	85c <__interceptor_pvalloc+0x34>
     8f0:	str	w5, [x29, #48]
     8f4:	str	x0, [x29, #56]
     8f8:	b	8cc <__interceptor_pvalloc+0xa4>
     8fc:	adrp	x2, 0 <__interceptor_mallopt>
     900:	adrp	x0, 0 <__interceptor_mallopt>
     904:	add	x2, x2, #0x0
     908:	add	x0, x0, #0x0
     90c:	mov	x4, #0x0                   	// #0
     910:	mov	x3, #0x0                   	// #0
     914:	mov	w1, #0xab                  	// #171
     918:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     91c:	nop

0000000000000920 <__interceptor_realloc>:
     920:	sub	sp, sp, #0x850
     924:	adrp	x2, 0 <lsan_init_is_running>
     928:	stp	x29, x30, [sp]
     92c:	mov	x29, sp
     930:	ldr	x2, [x2]
     934:	stp	x19, x20, [sp, #16]
     938:	mov	x19, x0
     93c:	ldrb	w0, [x2]
     940:	str	x21, [sp, #32]
     944:	cbnz	w0, 9ec <__interceptor_realloc+0xcc>
     948:	adrp	x0, 0 <lsan_inited>
     94c:	mov	x20, x1
     950:	ldr	x0, [x0]
     954:	ldrb	w0, [x0]
     958:	cbz	w0, 9d8 <__interceptor_realloc+0xb8>
     95c:	add	x21, x29, #0x38
     960:	str	xzr, [x29, #64]
     964:	add	x0, x21, #0x10
     968:	str	x0, [x29, #56]
     96c:	str	xzr, [x29, #2120]
     970:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     974:	mov	x1, x0
     978:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     97c:	ldr	x2, [x2]
     980:	ldr	w5, [x2, #36]
     984:	cbz	w5, 9cc <__interceptor_realloc+0xac>
     988:	str	x29, [x29, #2120]
     98c:	cmp	w5, #0x1
     990:	ldrb	w4, [x2, #34]
     994:	b.eq	9e0 <__interceptor_realloc+0xc0>  // b.none
     998:	mov	x2, x29
     99c:	mov	x0, x21
     9a0:	mov	x3, #0x0                   	// #0
     9a4:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     9a8:	mov	x2, x21
     9ac:	mov	x1, x20
     9b0:	mov	x0, x19
     9b4:	bl	0 <_ZN6__lsan12lsan_reallocEPvmRKN11__sanitizer10StackTraceE>
     9b8:	ldp	x29, x30, [sp]
     9bc:	ldp	x19, x20, [sp, #16]
     9c0:	ldr	x21, [sp, #32]
     9c4:	add	sp, sp, #0x850
     9c8:	ret
     9cc:	str	w5, [x29, #64]
     9d0:	str	xzr, [x29, #2120]
     9d4:	b	9a8 <__interceptor_realloc+0x88>
     9d8:	bl	0 <__lsan_init>
     9dc:	b	95c <__interceptor_realloc+0x3c>
     9e0:	str	w5, [x29, #64]
     9e4:	str	x0, [x29, #72]
     9e8:	b	9a8 <__interceptor_realloc+0x88>
     9ec:	adrp	x2, 0 <__interceptor_mallopt>
     9f0:	adrp	x0, 0 <__interceptor_mallopt>
     9f4:	add	x2, x2, #0x0
     9f8:	add	x0, x0, #0x0
     9fc:	mov	x4, #0x0                   	// #0
     a00:	mov	x3, #0x0                   	// #0
     a04:	mov	w1, #0x51                  	// #81
     a08:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     a0c:	nop

0000000000000a10 <__interceptor_memalign>:
     a10:	sub	sp, sp, #0x850
     a14:	adrp	x2, 0 <lsan_init_is_running>
     a18:	stp	x29, x30, [sp]
     a1c:	mov	x29, sp
     a20:	ldr	x2, [x2]
     a24:	stp	x19, x20, [sp, #16]
     a28:	mov	x19, x0
     a2c:	ldrb	w0, [x2]
     a30:	str	x21, [sp, #32]
     a34:	cbnz	w0, adc <__interceptor_memalign+0xcc>
     a38:	adrp	x0, 0 <lsan_inited>
     a3c:	mov	x20, x1
     a40:	ldr	x0, [x0]
     a44:	ldrb	w0, [x0]
     a48:	cbz	w0, ac8 <__interceptor_memalign+0xb8>
     a4c:	add	x21, x29, #0x38
     a50:	str	xzr, [x29, #64]
     a54:	add	x0, x21, #0x10
     a58:	str	x0, [x29, #56]
     a5c:	str	xzr, [x29, #2120]
     a60:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     a64:	mov	x1, x0
     a68:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     a6c:	ldr	x2, [x2]
     a70:	ldr	w5, [x2, #36]
     a74:	cbz	w5, abc <__interceptor_memalign+0xac>
     a78:	str	x29, [x29, #2120]
     a7c:	cmp	w5, #0x1
     a80:	ldrb	w4, [x2, #34]
     a84:	b.eq	ad0 <__interceptor_memalign+0xc0>  // b.none
     a88:	mov	x2, x29
     a8c:	mov	x0, x21
     a90:	mov	x3, #0x0                   	// #0
     a94:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     a98:	mov	x2, x21
     a9c:	mov	x1, x20
     aa0:	mov	x0, x19
     aa4:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
     aa8:	ldp	x29, x30, [sp]
     aac:	ldp	x19, x20, [sp, #16]
     ab0:	ldr	x21, [sp, #32]
     ab4:	add	sp, sp, #0x850
     ab8:	ret
     abc:	str	w5, [x29, #64]
     ac0:	str	xzr, [x29, #2120]
     ac4:	b	a98 <__interceptor_memalign+0x88>
     ac8:	bl	0 <__lsan_init>
     acc:	b	a4c <__interceptor_memalign+0x3c>
     ad0:	str	w5, [x29, #64]
     ad4:	str	x0, [x29, #72]
     ad8:	b	a98 <__interceptor_memalign+0x88>
     adc:	adrp	x2, 0 <__interceptor_mallopt>
     ae0:	adrp	x0, 0 <__interceptor_mallopt>
     ae4:	add	x2, x2, #0x0
     ae8:	add	x0, x0, #0x0
     aec:	mov	x4, #0x0                   	// #0
     af0:	mov	x3, #0x0                   	// #0
     af4:	mov	w1, #0x6b                  	// #107
     af8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     afc:	nop

0000000000000b00 <__interceptor_aligned_alloc>:
     b00:	sub	sp, sp, #0x850
     b04:	adrp	x2, 0 <lsan_init_is_running>
     b08:	stp	x29, x30, [sp]
     b0c:	mov	x29, sp
     b10:	ldr	x2, [x2]
     b14:	stp	x19, x20, [sp, #16]
     b18:	mov	x19, x0
     b1c:	ldrb	w0, [x2]
     b20:	str	x21, [sp, #32]
     b24:	cbnz	w0, bcc <__interceptor_aligned_alloc+0xcc>
     b28:	adrp	x0, 0 <lsan_inited>
     b2c:	mov	x20, x1
     b30:	ldr	x0, [x0]
     b34:	ldrb	w0, [x0]
     b38:	cbz	w0, bb8 <__interceptor_aligned_alloc+0xb8>
     b3c:	add	x21, x29, #0x38
     b40:	str	xzr, [x29, #64]
     b44:	add	x0, x21, #0x10
     b48:	str	x0, [x29, #56]
     b4c:	str	xzr, [x29, #2120]
     b50:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     b54:	mov	x1, x0
     b58:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     b5c:	ldr	x2, [x2]
     b60:	ldr	w5, [x2, #36]
     b64:	cbz	w5, bac <__interceptor_aligned_alloc+0xac>
     b68:	str	x29, [x29, #2120]
     b6c:	cmp	w5, #0x1
     b70:	ldrb	w4, [x2, #34]
     b74:	b.eq	bc0 <__interceptor_aligned_alloc+0xc0>  // b.none
     b78:	mov	x2, x29
     b7c:	mov	x0, x21
     b80:	mov	x3, #0x0                   	// #0
     b84:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     b88:	mov	x2, x21
     b8c:	mov	x1, x20
     b90:	mov	x0, x19
     b94:	bl	0 <_ZN6__lsan18lsan_aligned_allocEmmRKN11__sanitizer10StackTraceE>
     b98:	ldp	x29, x30, [sp]
     b9c:	ldp	x19, x20, [sp, #16]
     ba0:	ldr	x21, [sp, #32]
     ba4:	add	sp, sp, #0x850
     ba8:	ret
     bac:	str	w5, [x29, #64]
     bb0:	str	xzr, [x29, #2120]
     bb4:	b	b88 <__interceptor_aligned_alloc+0x88>
     bb8:	bl	0 <__lsan_init>
     bbc:	b	b3c <__interceptor_aligned_alloc+0x3c>
     bc0:	str	w5, [x29, #64]
     bc4:	str	x0, [x29, #72]
     bc8:	b	b88 <__interceptor_aligned_alloc+0x88>
     bcc:	adrp	x2, 0 <__interceptor_mallopt>
     bd0:	adrp	x0, 0 <__interceptor_mallopt>
     bd4:	add	x2, x2, #0x0
     bd8:	add	x0, x0, #0x0
     bdc:	mov	x4, #0x0                   	// #0
     be0:	mov	x3, #0x0                   	// #0
     be4:	mov	w1, #0x80                  	// #128
     be8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     bec:	nop

0000000000000bf0 <__interceptor_posix_memalign>:
     bf0:	sub	sp, sp, #0x850
     bf4:	adrp	x3, 0 <lsan_init_is_running>
     bf8:	stp	x29, x30, [sp]
     bfc:	mov	x29, sp
     c00:	ldr	x3, [x3]
     c04:	stp	x19, x20, [sp, #16]
     c08:	mov	x19, x0
     c0c:	stp	x21, x22, [sp, #32]
     c10:	ldrb	w0, [x3]
     c14:	cbnz	w0, cc4 <__interceptor_posix_memalign+0xd4>
     c18:	adrp	x0, 0 <lsan_inited>
     c1c:	mov	x20, x1
     c20:	mov	x21, x2
     c24:	ldr	x0, [x0]
     c28:	ldrb	w0, [x0]
     c2c:	cbz	w0, cb0 <__interceptor_posix_memalign+0xc0>
     c30:	add	x22, x29, #0x38
     c34:	str	xzr, [x29, #64]
     c38:	add	x0, x22, #0x10
     c3c:	str	x0, [x29, #56]
     c40:	str	xzr, [x29, #2120]
     c44:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     c48:	mov	x1, x0
     c4c:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     c50:	ldr	x3, [x3]
     c54:	ldr	w5, [x3, #36]
     c58:	cbz	w5, ca4 <__interceptor_posix_memalign+0xb4>
     c5c:	str	x29, [x29, #2120]
     c60:	cmp	w5, #0x1
     c64:	ldrb	w4, [x3, #34]
     c68:	b.eq	cb8 <__interceptor_posix_memalign+0xc8>  // b.none
     c6c:	mov	x2, x29
     c70:	mov	x0, x22
     c74:	mov	x3, #0x0                   	// #0
     c78:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     c7c:	mov	x3, x22
     c80:	mov	x2, x21
     c84:	mov	x1, x20
     c88:	mov	x0, x19
     c8c:	bl	0 <_ZN6__lsan19lsan_posix_memalignEPPvmmRKN11__sanitizer10StackTraceE>
     c90:	ldp	x29, x30, [sp]
     c94:	ldp	x19, x20, [sp, #16]
     c98:	ldp	x21, x22, [sp, #32]
     c9c:	add	sp, sp, #0x850
     ca0:	ret
     ca4:	str	w5, [x29, #64]
     ca8:	str	xzr, [x29, #2120]
     cac:	b	c7c <__interceptor_posix_memalign+0x8c>
     cb0:	bl	0 <__lsan_init>
     cb4:	b	c30 <__interceptor_posix_memalign+0x40>
     cb8:	str	w5, [x29, #64]
     cbc:	str	x0, [x29, #72]
     cc0:	b	c7c <__interceptor_posix_memalign+0x8c>
     cc4:	adrp	x2, 0 <__interceptor_mallopt>
     cc8:	adrp	x0, 0 <__interceptor_mallopt>
     ccc:	add	x2, x2, #0x0
     cd0:	add	x0, x0, #0x0
     cd4:	mov	x4, #0x0                   	// #0
     cd8:	mov	x3, #0x0                   	// #0
     cdc:	mov	w1, #0x5d                  	// #93
     ce0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     ce4:	nop

0000000000000ce8 <__interceptor___libc_memalign>:
     ce8:	sub	sp, sp, #0x850
     cec:	adrp	x2, 0 <lsan_init_is_running>
     cf0:	stp	x29, x30, [sp]
     cf4:	mov	x29, sp
     cf8:	ldr	x2, [x2]
     cfc:	stp	x19, x20, [sp, #16]
     d00:	mov	x20, x0
     d04:	ldrb	w0, [x2]
     d08:	str	x21, [sp, #32]
     d0c:	cbnz	w0, dc4 <__interceptor___libc_memalign+0xdc>
     d10:	adrp	x0, 0 <lsan_inited>
     d14:	mov	x19, x1
     d18:	ldr	x0, [x0]
     d1c:	ldrb	w0, [x0]
     d20:	cbz	w0, db0 <__interceptor___libc_memalign+0xc8>
     d24:	add	x21, x29, #0x38
     d28:	str	xzr, [x29, #64]
     d2c:	add	x0, x21, #0x10
     d30:	str	x0, [x29, #56]
     d34:	str	xzr, [x29, #2120]
     d38:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     d3c:	mov	x1, x0
     d40:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     d44:	ldr	x2, [x2]
     d48:	ldr	w5, [x2, #36]
     d4c:	cbz	w5, da4 <__interceptor___libc_memalign+0xbc>
     d50:	str	x29, [x29, #2120]
     d54:	cmp	w5, #0x1
     d58:	ldrb	w4, [x2, #34]
     d5c:	b.eq	db8 <__interceptor___libc_memalign+0xd0>  // b.none
     d60:	mov	x2, x29
     d64:	mov	x0, x21
     d68:	mov	x3, #0x0                   	// #0
     d6c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     d70:	mov	x2, x21
     d74:	mov	x1, x19
     d78:	mov	x0, x20
     d7c:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
     d80:	mov	x1, x19
     d84:	mov	x19, x0
     d88:	bl	0 <_ZN11__sanitizer21DTLS_on_libc_memalignEPvm>
     d8c:	mov	x0, x19
     d90:	ldp	x29, x30, [sp]
     d94:	ldp	x19, x20, [sp, #16]
     d98:	ldr	x21, [sp, #32]
     d9c:	add	sp, sp, #0x850
     da0:	ret
     da4:	str	w5, [x29, #64]
     da8:	str	xzr, [x29, #2120]
     dac:	b	d70 <__interceptor___libc_memalign+0x88>
     db0:	bl	0 <__lsan_init>
     db4:	b	d24 <__interceptor___libc_memalign+0x3c>
     db8:	str	w5, [x29, #64]
     dbc:	str	x0, [x29, #72]
     dc0:	b	d70 <__interceptor___libc_memalign+0x88>
     dc4:	adrp	x2, 0 <__interceptor_mallopt>
     dc8:	adrp	x0, 0 <__interceptor_mallopt>
     dcc:	add	x2, x2, #0x0
     dd0:	add	x0, x0, #0x0
     dd4:	mov	x4, #0x0                   	// #0
     dd8:	mov	x3, #0x0                   	// #0
     ddc:	mov	w1, #0x72                  	// #114
     de0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     de4:	nop

0000000000000de8 <__interceptor_reallocarray>:
     de8:	sub	sp, sp, #0x850
     dec:	adrp	x3, 0 <lsan_init_is_running>
     df0:	stp	x29, x30, [sp]
     df4:	mov	x29, sp
     df8:	ldr	x3, [x3]
     dfc:	stp	x19, x20, [sp, #16]
     e00:	mov	x19, x0
     e04:	stp	x21, x22, [sp, #32]
     e08:	ldrb	w0, [x3]
     e0c:	cbnz	w0, ebc <__interceptor_reallocarray+0xd4>
     e10:	adrp	x0, 0 <lsan_inited>
     e14:	mov	x20, x1
     e18:	mov	x21, x2
     e1c:	ldr	x0, [x0]
     e20:	ldrb	w0, [x0]
     e24:	cbz	w0, ea8 <__interceptor_reallocarray+0xc0>
     e28:	add	x22, x29, #0x38
     e2c:	str	xzr, [x29, #64]
     e30:	add	x0, x22, #0x10
     e34:	str	x0, [x29, #56]
     e38:	str	xzr, [x29, #2120]
     e3c:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     e40:	mov	x1, x0
     e44:	adrp	x3, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     e48:	ldr	x3, [x3]
     e4c:	ldr	w5, [x3, #36]
     e50:	cbz	w5, e9c <__interceptor_reallocarray+0xb4>
     e54:	str	x29, [x29, #2120]
     e58:	cmp	w5, #0x1
     e5c:	ldrb	w4, [x3, #34]
     e60:	b.eq	eb0 <__interceptor_reallocarray+0xc8>  // b.none
     e64:	mov	x2, x29
     e68:	mov	x0, x22
     e6c:	mov	x3, #0x0                   	// #0
     e70:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     e74:	mov	x3, x22
     e78:	mov	x2, x21
     e7c:	mov	x1, x20
     e80:	mov	x0, x19
     e84:	bl	0 <_ZN6__lsan17lsan_reallocarrayEPvmmRKN11__sanitizer10StackTraceE>
     e88:	ldp	x29, x30, [sp]
     e8c:	ldp	x19, x20, [sp, #16]
     e90:	ldp	x21, x22, [sp, #32]
     e94:	add	sp, sp, #0x850
     e98:	ret
     e9c:	str	w5, [x29, #64]
     ea0:	str	xzr, [x29, #2120]
     ea4:	b	e74 <__interceptor_reallocarray+0x8c>
     ea8:	bl	0 <__lsan_init>
     eac:	b	e28 <__interceptor_reallocarray+0x40>
     eb0:	str	w5, [x29, #64]
     eb4:	str	x0, [x29, #72]
     eb8:	b	e74 <__interceptor_reallocarray+0x8c>
     ebc:	adrp	x2, 0 <__interceptor_mallopt>
     ec0:	adrp	x0, 0 <__interceptor_mallopt>
     ec4:	add	x2, x2, #0x0
     ec8:	add	x0, x0, #0x0
     ecc:	mov	x4, #0x0                   	// #0
     ed0:	mov	x3, #0x0                   	// #0
     ed4:	mov	w1, #0x57                  	// #87
     ed8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     edc:	nop

0000000000000ee0 <__interceptor_mcheck>:
     ee0:	mov	w0, #0x0                   	// #0
     ee4:	ret

0000000000000ee8 <__interceptor_mcheck_pedantic>:
     ee8:	mov	w0, #0x0                   	// #0
     eec:	ret

0000000000000ef0 <__interceptor_mprobe>:
     ef0:	mov	w0, #0x0                   	// #0
     ef4:	ret

0000000000000ef8 <_Znwm>:
     ef8:	sub	sp, sp, #0x840
     efc:	adrp	x1, 0 <lsan_init_is_running>
     f00:	stp	x29, x30, [sp]
     f04:	mov	x29, sp
     f08:	ldr	x1, [x1]
     f0c:	stp	x19, x20, [sp, #16]
     f10:	mov	x19, x0
     f14:	ldrb	w0, [x1]
     f18:	cbnz	w0, fb8 <_Znwm+0xc0>
     f1c:	adrp	x0, 0 <lsan_inited>
     f20:	ldr	x0, [x0]
     f24:	ldrb	w0, [x0]
     f28:	cbz	w0, fa4 <_Znwm+0xac>
     f2c:	add	x20, x29, #0x28
     f30:	str	xzr, [x29, #48]
     f34:	add	x0, x20, #0x10
     f38:	str	x0, [x29, #40]
     f3c:	str	xzr, [x29, #2104]
     f40:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
     f44:	mov	x1, x0
     f48:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
     f4c:	ldr	x2, [x2]
     f50:	ldr	w5, [x2, #36]
     f54:	cbz	w5, f98 <_Znwm+0xa0>
     f58:	str	x29, [x29, #2104]
     f5c:	cmp	w5, #0x1
     f60:	ldrb	w4, [x2, #34]
     f64:	b.eq	fac <_Znwm+0xb4>  // b.none
     f68:	mov	x2, x29
     f6c:	mov	x0, x20
     f70:	mov	x3, #0x0                   	// #0
     f74:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
     f78:	mov	x1, x20
     f7c:	mov	x0, x19
     f80:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
     f84:	cbz	x0, fd8 <_Znwm+0xe0>
     f88:	ldp	x29, x30, [sp]
     f8c:	ldp	x19, x20, [sp, #16]
     f90:	add	sp, sp, #0x840
     f94:	ret
     f98:	str	w5, [x29, #48]
     f9c:	str	xzr, [x29, #2104]
     fa0:	b	f78 <_Znwm+0x80>
     fa4:	bl	0 <__lsan_init>
     fa8:	b	f2c <_Znwm+0x34>
     fac:	str	w5, [x29, #48]
     fb0:	str	x0, [x29, #56]
     fb4:	b	f78 <_Znwm+0x80>
     fb8:	adrp	x2, 0 <__interceptor_mallopt>
     fbc:	adrp	x0, 0 <__interceptor_mallopt>
     fc0:	add	x2, x2, #0x0
     fc4:	add	x0, x0, #0x0
     fc8:	mov	x4, #0x0                   	// #0
     fcc:	mov	x3, #0x0                   	// #0
     fd0:	mov	w1, #0xe5                  	// #229
     fd4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
     fd8:	mov	x1, x20
     fdc:	mov	x0, x19
     fe0:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>
     fe4:	nop

0000000000000fe8 <_Znam>:
     fe8:	sub	sp, sp, #0x840
     fec:	adrp	x1, 0 <lsan_init_is_running>
     ff0:	stp	x29, x30, [sp]
     ff4:	mov	x29, sp
     ff8:	ldr	x1, [x1]
     ffc:	stp	x19, x20, [sp, #16]
    1000:	mov	x19, x0
    1004:	ldrb	w0, [x1]
    1008:	cbnz	w0, 10a8 <_Znam+0xc0>
    100c:	adrp	x0, 0 <lsan_inited>
    1010:	ldr	x0, [x0]
    1014:	ldrb	w0, [x0]
    1018:	cbz	w0, 1094 <_Znam+0xac>
    101c:	add	x20, x29, #0x28
    1020:	str	xzr, [x29, #48]
    1024:	add	x0, x20, #0x10
    1028:	str	x0, [x29, #40]
    102c:	str	xzr, [x29, #2104]
    1030:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1034:	mov	x1, x0
    1038:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    103c:	ldr	x2, [x2]
    1040:	ldr	w5, [x2, #36]
    1044:	cbz	w5, 1088 <_Znam+0xa0>
    1048:	str	x29, [x29, #2104]
    104c:	cmp	w5, #0x1
    1050:	ldrb	w4, [x2, #34]
    1054:	b.eq	109c <_Znam+0xb4>  // b.none
    1058:	mov	x2, x29
    105c:	mov	x0, x20
    1060:	mov	x3, #0x0                   	// #0
    1064:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1068:	mov	x1, x20
    106c:	mov	x0, x19
    1070:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
    1074:	cbz	x0, 10c8 <_Znam+0xe0>
    1078:	ldp	x29, x30, [sp]
    107c:	ldp	x19, x20, [sp, #16]
    1080:	add	sp, sp, #0x840
    1084:	ret
    1088:	str	w5, [x29, #48]
    108c:	str	xzr, [x29, #2104]
    1090:	b	1068 <_Znam+0x80>
    1094:	bl	0 <__lsan_init>
    1098:	b	101c <_Znam+0x34>
    109c:	str	w5, [x29, #48]
    10a0:	str	x0, [x29, #56]
    10a4:	b	1068 <_Znam+0x80>
    10a8:	adrp	x2, 0 <__interceptor_mallopt>
    10ac:	adrp	x0, 0 <__interceptor_mallopt>
    10b0:	add	x2, x2, #0x0
    10b4:	add	x0, x0, #0x0
    10b8:	mov	x4, #0x0                   	// #0
    10bc:	mov	x3, #0x0                   	// #0
    10c0:	mov	w1, #0xe7                  	// #231
    10c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    10c8:	mov	x1, x20
    10cc:	mov	x0, x19
    10d0:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>
    10d4:	nop

00000000000010d8 <_ZnwmRKSt9nothrow_t>:
    10d8:	sub	sp, sp, #0x840
    10dc:	adrp	x1, 0 <lsan_init_is_running>
    10e0:	stp	x29, x30, [sp]
    10e4:	mov	x29, sp
    10e8:	ldr	x1, [x1]
    10ec:	stp	x19, x20, [sp, #16]
    10f0:	mov	x19, x0
    10f4:	ldrb	w0, [x1]
    10f8:	cbnz	w0, 11ac <_ZnwmRKSt9nothrow_t+0xd4>
    10fc:	adrp	x0, 0 <lsan_inited>
    1100:	ldr	x0, [x0]
    1104:	ldrb	w0, [x0]
    1108:	cbz	w0, 1198 <_ZnwmRKSt9nothrow_t+0xc0>
    110c:	add	x20, x29, #0x28
    1110:	str	xzr, [x29, #48]
    1114:	add	x0, x20, #0x10
    1118:	str	x0, [x29, #40]
    111c:	str	xzr, [x29, #2104]
    1120:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    1124:	mov	x1, x0
    1128:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    112c:	ldr	x2, [x2]
    1130:	ldr	w5, [x2, #36]
    1134:	cbz	w5, 1174 <_ZnwmRKSt9nothrow_t+0x9c>
    1138:	str	x29, [x29, #2104]
    113c:	cmp	w5, #0x1
    1140:	ldrb	w4, [x2, #34]
    1144:	b.eq	11a0 <_ZnwmRKSt9nothrow_t+0xc8>  // b.none
    1148:	mov	x2, x29
    114c:	mov	x3, #0x0                   	// #0
    1150:	mov	x0, x20
    1154:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1158:	mov	x1, x20
    115c:	mov	x0, x19
    1160:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
    1164:	ldp	x29, x30, [sp]
    1168:	ldp	x19, x20, [sp, #16]
    116c:	add	sp, sp, #0x840
    1170:	ret
    1174:	str	w5, [x29, #48]
    1178:	str	xzr, [x29, #2104]
    117c:	mov	x1, x20
    1180:	mov	x0, x19
    1184:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
    1188:	ldp	x29, x30, [sp]
    118c:	ldp	x19, x20, [sp, #16]
    1190:	add	sp, sp, #0x840
    1194:	ret
    1198:	bl	0 <__lsan_init>
    119c:	b	110c <_ZnwmRKSt9nothrow_t+0x34>
    11a0:	str	w5, [x29, #48]
    11a4:	str	x0, [x29, #56]
    11a8:	b	117c <_ZnwmRKSt9nothrow_t+0xa4>
    11ac:	adrp	x2, 0 <__interceptor_mallopt>
    11b0:	adrp	x0, 0 <__interceptor_mallopt>
    11b4:	add	x2, x2, #0x0
    11b8:	add	x0, x0, #0x0
    11bc:	mov	x4, #0x0                   	// #0
    11c0:	mov	x3, #0x0                   	// #0
    11c4:	mov	w1, #0xea                  	// #234
    11c8:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    11cc:	nop

00000000000011d0 <_ZnamRKSt9nothrow_t>:
    11d0:	sub	sp, sp, #0x840
    11d4:	adrp	x1, 0 <lsan_init_is_running>
    11d8:	stp	x29, x30, [sp]
    11dc:	mov	x29, sp
    11e0:	ldr	x1, [x1]
    11e4:	stp	x19, x20, [sp, #16]
    11e8:	mov	x19, x0
    11ec:	ldrb	w0, [x1]
    11f0:	cbnz	w0, 12a4 <_ZnamRKSt9nothrow_t+0xd4>
    11f4:	adrp	x0, 0 <lsan_inited>
    11f8:	ldr	x0, [x0]
    11fc:	ldrb	w0, [x0]
    1200:	cbz	w0, 1290 <_ZnamRKSt9nothrow_t+0xc0>
    1204:	add	x20, x29, #0x28
    1208:	str	xzr, [x29, #48]
    120c:	add	x0, x20, #0x10
    1210:	str	x0, [x29, #40]
    1214:	str	xzr, [x29, #2104]
    1218:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    121c:	mov	x1, x0
    1220:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1224:	ldr	x2, [x2]
    1228:	ldr	w5, [x2, #36]
    122c:	cbz	w5, 126c <_ZnamRKSt9nothrow_t+0x9c>
    1230:	str	x29, [x29, #2104]
    1234:	cmp	w5, #0x1
    1238:	ldrb	w4, [x2, #34]
    123c:	b.eq	1298 <_ZnamRKSt9nothrow_t+0xc8>  // b.none
    1240:	mov	x2, x29
    1244:	mov	x3, #0x0                   	// #0
    1248:	mov	x0, x20
    124c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1250:	mov	x1, x20
    1254:	mov	x0, x19
    1258:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
    125c:	ldp	x29, x30, [sp]
    1260:	ldp	x19, x20, [sp, #16]
    1264:	add	sp, sp, #0x840
    1268:	ret
    126c:	str	w5, [x29, #48]
    1270:	str	xzr, [x29, #2104]
    1274:	mov	x1, x20
    1278:	mov	x0, x19
    127c:	bl	0 <_ZN6__lsan11lsan_mallocEmRKN11__sanitizer10StackTraceE>
    1280:	ldp	x29, x30, [sp]
    1284:	ldp	x19, x20, [sp, #16]
    1288:	add	sp, sp, #0x840
    128c:	ret
    1290:	bl	0 <__lsan_init>
    1294:	b	1204 <_ZnamRKSt9nothrow_t+0x34>
    1298:	str	w5, [x29, #48]
    129c:	str	x0, [x29, #56]
    12a0:	b	1274 <_ZnamRKSt9nothrow_t+0xa4>
    12a4:	adrp	x2, 0 <__interceptor_mallopt>
    12a8:	adrp	x0, 0 <__interceptor_mallopt>
    12ac:	add	x2, x2, #0x0
    12b0:	add	x0, x0, #0x0
    12b4:	mov	x4, #0x0                   	// #0
    12b8:	mov	x3, #0x0                   	// #0
    12bc:	mov	w1, #0xed                  	// #237
    12c0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    12c4:	nop

00000000000012c8 <_ZnwmSt11align_val_t>:
    12c8:	sub	sp, sp, #0x850
    12cc:	adrp	x2, 0 <lsan_init_is_running>
    12d0:	stp	x29, x30, [sp]
    12d4:	mov	x29, sp
    12d8:	ldr	x2, [x2]
    12dc:	stp	x19, x20, [sp, #16]
    12e0:	mov	x19, x0
    12e4:	ldrb	w0, [x2]
    12e8:	str	x21, [sp, #32]
    12ec:	cbnz	w0, 1398 <_ZnwmSt11align_val_t+0xd0>
    12f0:	adrp	x0, 0 <lsan_inited>
    12f4:	mov	x20, x1
    12f8:	ldr	x0, [x0]
    12fc:	ldrb	w0, [x0]
    1300:	cbz	w0, 1384 <_ZnwmSt11align_val_t+0xbc>
    1304:	add	x21, x29, #0x38
    1308:	str	xzr, [x29, #64]
    130c:	add	x0, x21, #0x10
    1310:	str	x0, [x29, #56]
    1314:	str	xzr, [x29, #2120]
    1318:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    131c:	mov	x1, x0
    1320:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1324:	ldr	x2, [x2]
    1328:	ldr	w5, [x2, #36]
    132c:	cbz	w5, 1378 <_ZnwmSt11align_val_t+0xb0>
    1330:	str	x29, [x29, #2120]
    1334:	cmp	w5, #0x1
    1338:	ldrb	w4, [x2, #34]
    133c:	b.eq	138c <_ZnwmSt11align_val_t+0xc4>  // b.none
    1340:	mov	x2, x29
    1344:	mov	x0, x21
    1348:	mov	x3, #0x0                   	// #0
    134c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1350:	mov	x0, x20
    1354:	mov	x2, x21
    1358:	mov	x1, x19
    135c:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
    1360:	cbz	x0, 13b8 <_ZnwmSt11align_val_t+0xf0>
    1364:	ldp	x29, x30, [sp]
    1368:	ldp	x19, x20, [sp, #16]
    136c:	ldr	x21, [sp, #32]
    1370:	add	sp, sp, #0x850
    1374:	ret
    1378:	str	w5, [x29, #64]
    137c:	str	xzr, [x29, #2120]
    1380:	b	1350 <_ZnwmSt11align_val_t+0x88>
    1384:	bl	0 <__lsan_init>
    1388:	b	1304 <_ZnwmSt11align_val_t+0x3c>
    138c:	str	w5, [x29, #64]
    1390:	str	x0, [x29, #72]
    1394:	b	1350 <_ZnwmSt11align_val_t+0x88>
    1398:	adrp	x2, 0 <__interceptor_mallopt>
    139c:	adrp	x0, 0 <__interceptor_mallopt>
    13a0:	add	x2, x2, #0x0
    13a4:	add	x0, x0, #0x0
    13a8:	mov	x4, #0x0                   	// #0
    13ac:	mov	x3, #0x0                   	// #0
    13b0:	mov	w1, #0xf0                  	// #240
    13b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    13b8:	mov	x1, x21
    13bc:	mov	x0, x19
    13c0:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>
    13c4:	nop

00000000000013c8 <_ZnamSt11align_val_t>:
    13c8:	sub	sp, sp, #0x850
    13cc:	adrp	x2, 0 <lsan_init_is_running>
    13d0:	stp	x29, x30, [sp]
    13d4:	mov	x29, sp
    13d8:	ldr	x2, [x2]
    13dc:	stp	x19, x20, [sp, #16]
    13e0:	mov	x19, x0
    13e4:	ldrb	w0, [x2]
    13e8:	str	x21, [sp, #32]
    13ec:	cbnz	w0, 1498 <_ZnamSt11align_val_t+0xd0>
    13f0:	adrp	x0, 0 <lsan_inited>
    13f4:	mov	x20, x1
    13f8:	ldr	x0, [x0]
    13fc:	ldrb	w0, [x0]
    1400:	cbz	w0, 1484 <_ZnamSt11align_val_t+0xbc>
    1404:	add	x21, x29, #0x38
    1408:	str	xzr, [x29, #64]
    140c:	add	x0, x21, #0x10
    1410:	str	x0, [x29, #56]
    1414:	str	xzr, [x29, #2120]
    1418:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    141c:	mov	x1, x0
    1420:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1424:	ldr	x2, [x2]
    1428:	ldr	w5, [x2, #36]
    142c:	cbz	w5, 1478 <_ZnamSt11align_val_t+0xb0>
    1430:	str	x29, [x29, #2120]
    1434:	cmp	w5, #0x1
    1438:	ldrb	w4, [x2, #34]
    143c:	b.eq	148c <_ZnamSt11align_val_t+0xc4>  // b.none
    1440:	mov	x2, x29
    1444:	mov	x0, x21
    1448:	mov	x3, #0x0                   	// #0
    144c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1450:	mov	x0, x20
    1454:	mov	x2, x21
    1458:	mov	x1, x19
    145c:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
    1460:	cbz	x0, 14b8 <_ZnamSt11align_val_t+0xf0>
    1464:	ldp	x29, x30, [sp]
    1468:	ldp	x19, x20, [sp, #16]
    146c:	ldr	x21, [sp, #32]
    1470:	add	sp, sp, #0x850
    1474:	ret
    1478:	str	w5, [x29, #64]
    147c:	str	xzr, [x29, #2120]
    1480:	b	1450 <_ZnamSt11align_val_t+0x88>
    1484:	bl	0 <__lsan_init>
    1488:	b	1404 <_ZnamSt11align_val_t+0x3c>
    148c:	str	w5, [x29, #64]
    1490:	str	x0, [x29, #72]
    1494:	b	1450 <_ZnamSt11align_val_t+0x88>
    1498:	adrp	x2, 0 <__interceptor_mallopt>
    149c:	adrp	x0, 0 <__interceptor_mallopt>
    14a0:	add	x2, x2, #0x0
    14a4:	add	x0, x0, #0x0
    14a8:	mov	x4, #0x0                   	// #0
    14ac:	mov	x3, #0x0                   	// #0
    14b0:	mov	w1, #0xf3                  	// #243
    14b4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    14b8:	mov	x1, x21
    14bc:	mov	x0, x19
    14c0:	bl	0 <_ZN11__sanitizer17ReportOutOfMemoryEmPKNS_10StackTraceE>
    14c4:	nop

00000000000014c8 <_ZnwmSt11align_val_tRKSt9nothrow_t>:
    14c8:	sub	sp, sp, #0x850
    14cc:	adrp	x2, 0 <lsan_init_is_running>
    14d0:	stp	x29, x30, [sp]
    14d4:	mov	x29, sp
    14d8:	ldr	x2, [x2]
    14dc:	stp	x19, x20, [sp, #16]
    14e0:	mov	x19, x0
    14e4:	ldrb	w0, [x2]
    14e8:	str	x21, [sp, #32]
    14ec:	cbnz	w0, 1594 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xcc>
    14f0:	adrp	x0, 0 <lsan_inited>
    14f4:	mov	x20, x1
    14f8:	ldr	x0, [x0]
    14fc:	ldrb	w0, [x0]
    1500:	cbz	w0, 1580 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xb8>
    1504:	add	x21, x29, #0x38
    1508:	str	xzr, [x29, #64]
    150c:	add	x0, x21, #0x10
    1510:	str	x0, [x29, #56]
    1514:	str	xzr, [x29, #2120]
    1518:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    151c:	mov	x1, x0
    1520:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1524:	ldr	x2, [x2]
    1528:	ldr	w5, [x2, #36]
    152c:	cbz	w5, 1574 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xac>
    1530:	str	x29, [x29, #2120]
    1534:	cmp	w5, #0x1
    1538:	ldrb	w4, [x2, #34]
    153c:	b.eq	1588 <_ZnwmSt11align_val_tRKSt9nothrow_t+0xc0>  // b.none
    1540:	mov	x2, x29
    1544:	mov	x0, x21
    1548:	mov	x3, #0x0                   	// #0
    154c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1550:	mov	x2, x21
    1554:	mov	x1, x19
    1558:	mov	x0, x20
    155c:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
    1560:	ldp	x29, x30, [sp]
    1564:	ldp	x19, x20, [sp, #16]
    1568:	ldr	x21, [sp, #32]
    156c:	add	sp, sp, #0x850
    1570:	ret
    1574:	str	w5, [x29, #64]
    1578:	str	xzr, [x29, #2120]
    157c:	b	1550 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x88>
    1580:	bl	0 <__lsan_init>
    1584:	b	1504 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x3c>
    1588:	str	w5, [x29, #64]
    158c:	str	x0, [x29, #72]
    1590:	b	1550 <_ZnwmSt11align_val_tRKSt9nothrow_t+0x88>
    1594:	adrp	x2, 0 <__interceptor_mallopt>
    1598:	adrp	x0, 0 <__interceptor_mallopt>
    159c:	add	x2, x2, #0x0
    15a0:	add	x0, x0, #0x0
    15a4:	mov	x4, #0x0                   	// #0
    15a8:	mov	x3, #0x0                   	// #0
    15ac:	mov	w1, #0xf6                  	// #246
    15b0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    15b4:	nop

00000000000015b8 <_ZnamSt11align_val_tRKSt9nothrow_t>:
    15b8:	sub	sp, sp, #0x850
    15bc:	adrp	x2, 0 <lsan_init_is_running>
    15c0:	stp	x29, x30, [sp]
    15c4:	mov	x29, sp
    15c8:	ldr	x2, [x2]
    15cc:	stp	x19, x20, [sp, #16]
    15d0:	mov	x19, x0
    15d4:	ldrb	w0, [x2]
    15d8:	str	x21, [sp, #32]
    15dc:	cbnz	w0, 1684 <_ZnamSt11align_val_tRKSt9nothrow_t+0xcc>
    15e0:	adrp	x0, 0 <lsan_inited>
    15e4:	mov	x20, x1
    15e8:	ldr	x0, [x0]
    15ec:	ldrb	w0, [x0]
    15f0:	cbz	w0, 1670 <_ZnamSt11align_val_tRKSt9nothrow_t+0xb8>
    15f4:	add	x21, x29, #0x38
    15f8:	str	xzr, [x29, #64]
    15fc:	add	x0, x21, #0x10
    1600:	str	x0, [x29, #56]
    1604:	str	xzr, [x29, #2120]
    1608:	bl	0 <_ZN11__sanitizer10StackTrace12GetCurrentPcEv>
    160c:	mov	x1, x0
    1610:	adrp	x2, 0 <_ZN11__sanitizer21common_flags_dont_useE>
    1614:	ldr	x2, [x2]
    1618:	ldr	w5, [x2, #36]
    161c:	cbz	w5, 1664 <_ZnamSt11align_val_tRKSt9nothrow_t+0xac>
    1620:	str	x29, [x29, #2120]
    1624:	cmp	w5, #0x1
    1628:	ldrb	w4, [x2, #34]
    162c:	b.eq	1678 <_ZnamSt11align_val_tRKSt9nothrow_t+0xc0>  // b.none
    1630:	mov	x2, x29
    1634:	mov	x0, x21
    1638:	mov	x3, #0x0                   	// #0
    163c:	bl	0 <_ZN11__sanitizer18BufferedStackTrace10UnwindImplEmmPvbj>
    1640:	mov	x2, x21
    1644:	mov	x1, x19
    1648:	mov	x0, x20
    164c:	bl	0 <_ZN6__lsan13lsan_memalignEmmRKN11__sanitizer10StackTraceE>
    1650:	ldp	x29, x30, [sp]
    1654:	ldp	x19, x20, [sp, #16]
    1658:	ldr	x21, [sp, #32]
    165c:	add	sp, sp, #0x850
    1660:	ret
    1664:	str	w5, [x29, #64]
    1668:	str	xzr, [x29, #2120]
    166c:	b	1640 <_ZnamSt11align_val_tRKSt9nothrow_t+0x88>
    1670:	bl	0 <__lsan_init>
    1674:	b	15f4 <_ZnamSt11align_val_tRKSt9nothrow_t+0x3c>
    1678:	str	w5, [x29, #64]
    167c:	str	x0, [x29, #72]
    1680:	b	1640 <_ZnamSt11align_val_tRKSt9nothrow_t+0x88>
    1684:	adrp	x2, 0 <__interceptor_mallopt>
    1688:	adrp	x0, 0 <__interceptor_mallopt>
    168c:	add	x2, x2, #0x0
    1690:	add	x0, x0, #0x0
    1694:	mov	x4, #0x0                   	// #0
    1698:	mov	x3, #0x0                   	// #0
    169c:	mov	w1, #0xf9                  	// #249
    16a0:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    16a4:	nop

00000000000016a8 <_ZdlPv>:
    16a8:	adrp	x1, 0 <lsan_init_is_running>
    16ac:	str	x30, [sp, #-32]!
    16b0:	ldr	x1, [x1]
    16b4:	ldrb	w1, [x1]
    16b8:	cbnz	w1, 16e8 <_ZdlPv+0x40>
    16bc:	adrp	x1, 0 <lsan_inited>
    16c0:	ldr	x1, [x1]
    16c4:	ldrb	w1, [x1]
    16c8:	cbz	w1, 16d4 <_ZdlPv+0x2c>
    16cc:	ldr	x30, [sp], #32
    16d0:	b	0 <_ZN6__lsan9lsan_freeEPv>
    16d4:	str	x0, [sp, #24]
    16d8:	bl	0 <__lsan_init>
    16dc:	ldr	x0, [sp, #24]
    16e0:	ldr	x30, [sp], #32
    16e4:	b	0 <_ZN6__lsan9lsan_freeEPv>
    16e8:	adrp	x2, 0 <__interceptor_mallopt>
    16ec:	adrp	x0, 0 <__interceptor_mallopt>
    16f0:	add	x2, x2, #0x0
    16f4:	add	x0, x0, #0x0
    16f8:	mov	x4, #0x0                   	// #0
    16fc:	mov	x3, #0x0                   	// #0
    1700:	mov	w1, #0xfc                  	// #252
    1704:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001708 <_ZdaPv>:
    1708:	adrp	x1, 0 <lsan_init_is_running>
    170c:	str	x30, [sp, #-32]!
    1710:	ldr	x1, [x1]
    1714:	ldrb	w1, [x1]
    1718:	cbnz	w1, 1748 <_ZdaPv+0x40>
    171c:	adrp	x1, 0 <lsan_inited>
    1720:	ldr	x1, [x1]
    1724:	ldrb	w1, [x1]
    1728:	cbz	w1, 1734 <_ZdaPv+0x2c>
    172c:	ldr	x30, [sp], #32
    1730:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1734:	str	x0, [sp, #24]
    1738:	bl	0 <__lsan_init>
    173c:	ldr	x0, [sp, #24]
    1740:	ldr	x30, [sp], #32
    1744:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1748:	adrp	x2, 0 <__interceptor_mallopt>
    174c:	adrp	x0, 0 <__interceptor_mallopt>
    1750:	add	x2, x2, #0x0
    1754:	add	x0, x0, #0x0
    1758:	mov	x4, #0x0                   	// #0
    175c:	mov	x3, #0x0                   	// #0
    1760:	mov	w1, #0xfe                  	// #254
    1764:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001768 <_ZdlPvRKSt9nothrow_t>:
    1768:	adrp	x1, 0 <lsan_init_is_running>
    176c:	str	x30, [sp, #-32]!
    1770:	ldr	x1, [x1]
    1774:	ldrb	w1, [x1]
    1778:	cbnz	w1, 17a8 <_ZdlPvRKSt9nothrow_t+0x40>
    177c:	adrp	x1, 0 <lsan_inited>
    1780:	ldr	x1, [x1]
    1784:	ldrb	w1, [x1]
    1788:	cbz	w1, 1794 <_ZdlPvRKSt9nothrow_t+0x2c>
    178c:	ldr	x30, [sp], #32
    1790:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1794:	str	x0, [sp, #24]
    1798:	bl	0 <__lsan_init>
    179c:	ldr	x0, [sp, #24]
    17a0:	ldr	x30, [sp], #32
    17a4:	b	0 <_ZN6__lsan9lsan_freeEPv>
    17a8:	adrp	x2, 0 <__interceptor_mallopt>
    17ac:	adrp	x0, 0 <__interceptor_mallopt>
    17b0:	add	x2, x2, #0x0
    17b4:	add	x0, x0, #0x0
    17b8:	mov	x4, #0x0                   	// #0
    17bc:	mov	x3, #0x0                   	// #0
    17c0:	mov	w1, #0x100                 	// #256
    17c4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000017c8 <_ZdaPvRKSt9nothrow_t>:
    17c8:	adrp	x1, 0 <lsan_init_is_running>
    17cc:	str	x30, [sp, #-32]!
    17d0:	ldr	x1, [x1]
    17d4:	ldrb	w1, [x1]
    17d8:	cbnz	w1, 1808 <_ZdaPvRKSt9nothrow_t+0x40>
    17dc:	adrp	x1, 0 <lsan_inited>
    17e0:	ldr	x1, [x1]
    17e4:	ldrb	w1, [x1]
    17e8:	cbz	w1, 17f4 <_ZdaPvRKSt9nothrow_t+0x2c>
    17ec:	ldr	x30, [sp], #32
    17f0:	b	0 <_ZN6__lsan9lsan_freeEPv>
    17f4:	str	x0, [sp, #24]
    17f8:	bl	0 <__lsan_init>
    17fc:	ldr	x0, [sp, #24]
    1800:	ldr	x30, [sp], #32
    1804:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1808:	adrp	x2, 0 <__interceptor_mallopt>
    180c:	adrp	x0, 0 <__interceptor_mallopt>
    1810:	add	x2, x2, #0x0
    1814:	add	x0, x0, #0x0
    1818:	mov	x4, #0x0                   	// #0
    181c:	mov	x3, #0x0                   	// #0
    1820:	mov	w1, #0x103                 	// #259
    1824:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001828 <_ZdlPvm>:
    1828:	adrp	x1, 0 <lsan_init_is_running>
    182c:	str	x30, [sp, #-32]!
    1830:	ldr	x1, [x1]
    1834:	ldrb	w1, [x1]
    1838:	cbnz	w1, 1868 <_ZdlPvm+0x40>
    183c:	adrp	x1, 0 <lsan_inited>
    1840:	ldr	x1, [x1]
    1844:	ldrb	w1, [x1]
    1848:	cbz	w1, 1854 <_ZdlPvm+0x2c>
    184c:	ldr	x30, [sp], #32
    1850:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1854:	str	x0, [sp, #24]
    1858:	bl	0 <__lsan_init>
    185c:	ldr	x0, [sp, #24]
    1860:	ldr	x30, [sp], #32
    1864:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1868:	adrp	x2, 0 <__interceptor_mallopt>
    186c:	adrp	x0, 0 <__interceptor_mallopt>
    1870:	add	x2, x2, #0x0
    1874:	add	x0, x0, #0x0
    1878:	mov	x4, #0x0                   	// #0
    187c:	mov	x3, #0x0                   	// #0
    1880:	mov	w1, #0x106                 	// #262
    1884:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001888 <_ZdaPvm>:
    1888:	adrp	x1, 0 <lsan_init_is_running>
    188c:	str	x30, [sp, #-32]!
    1890:	ldr	x1, [x1]
    1894:	ldrb	w1, [x1]
    1898:	cbnz	w1, 18c8 <_ZdaPvm+0x40>
    189c:	adrp	x1, 0 <lsan_inited>
    18a0:	ldr	x1, [x1]
    18a4:	ldrb	w1, [x1]
    18a8:	cbz	w1, 18b4 <_ZdaPvm+0x2c>
    18ac:	ldr	x30, [sp], #32
    18b0:	b	0 <_ZN6__lsan9lsan_freeEPv>
    18b4:	str	x0, [sp, #24]
    18b8:	bl	0 <__lsan_init>
    18bc:	ldr	x0, [sp, #24]
    18c0:	ldr	x30, [sp], #32
    18c4:	b	0 <_ZN6__lsan9lsan_freeEPv>
    18c8:	adrp	x2, 0 <__interceptor_mallopt>
    18cc:	adrp	x0, 0 <__interceptor_mallopt>
    18d0:	add	x2, x2, #0x0
    18d4:	add	x0, x0, #0x0
    18d8:	mov	x4, #0x0                   	// #0
    18dc:	mov	x3, #0x0                   	// #0
    18e0:	mov	w1, #0x109                 	// #265
    18e4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000018e8 <_ZdlPvSt11align_val_t>:
    18e8:	adrp	x1, 0 <lsan_init_is_running>
    18ec:	str	x30, [sp, #-32]!
    18f0:	ldr	x1, [x1]
    18f4:	ldrb	w1, [x1]
    18f8:	cbnz	w1, 1928 <_ZdlPvSt11align_val_t+0x40>
    18fc:	adrp	x1, 0 <lsan_inited>
    1900:	ldr	x1, [x1]
    1904:	ldrb	w1, [x1]
    1908:	cbz	w1, 1914 <_ZdlPvSt11align_val_t+0x2c>
    190c:	ldr	x30, [sp], #32
    1910:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1914:	str	x0, [sp, #24]
    1918:	bl	0 <__lsan_init>
    191c:	ldr	x0, [sp, #24]
    1920:	ldr	x30, [sp], #32
    1924:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1928:	adrp	x2, 0 <__interceptor_mallopt>
    192c:	adrp	x0, 0 <__interceptor_mallopt>
    1930:	add	x2, x2, #0x0
    1934:	add	x0, x0, #0x0
    1938:	mov	x4, #0x0                   	// #0
    193c:	mov	x3, #0x0                   	// #0
    1940:	mov	w1, #0x10c                 	// #268
    1944:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001948 <_ZdaPvSt11align_val_t>:
    1948:	adrp	x1, 0 <lsan_init_is_running>
    194c:	str	x30, [sp, #-32]!
    1950:	ldr	x1, [x1]
    1954:	ldrb	w1, [x1]
    1958:	cbnz	w1, 1988 <_ZdaPvSt11align_val_t+0x40>
    195c:	adrp	x1, 0 <lsan_inited>
    1960:	ldr	x1, [x1]
    1964:	ldrb	w1, [x1]
    1968:	cbz	w1, 1974 <_ZdaPvSt11align_val_t+0x2c>
    196c:	ldr	x30, [sp], #32
    1970:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1974:	str	x0, [sp, #24]
    1978:	bl	0 <__lsan_init>
    197c:	ldr	x0, [sp, #24]
    1980:	ldr	x30, [sp], #32
    1984:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1988:	adrp	x2, 0 <__interceptor_mallopt>
    198c:	adrp	x0, 0 <__interceptor_mallopt>
    1990:	add	x2, x2, #0x0
    1994:	add	x0, x0, #0x0
    1998:	mov	x4, #0x0                   	// #0
    199c:	mov	x3, #0x0                   	// #0
    19a0:	mov	w1, #0x10f                 	// #271
    19a4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000019a8 <_ZdlPvSt11align_val_tRKSt9nothrow_t>:
    19a8:	adrp	x1, 0 <lsan_init_is_running>
    19ac:	str	x30, [sp, #-32]!
    19b0:	ldr	x1, [x1]
    19b4:	ldrb	w1, [x1]
    19b8:	cbnz	w1, 19e8 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x40>
    19bc:	adrp	x1, 0 <lsan_inited>
    19c0:	ldr	x1, [x1]
    19c4:	ldrb	w1, [x1]
    19c8:	cbz	w1, 19d4 <_ZdlPvSt11align_val_tRKSt9nothrow_t+0x2c>
    19cc:	ldr	x30, [sp], #32
    19d0:	b	0 <_ZN6__lsan9lsan_freeEPv>
    19d4:	str	x0, [sp, #24]
    19d8:	bl	0 <__lsan_init>
    19dc:	ldr	x0, [sp, #24]
    19e0:	ldr	x30, [sp], #32
    19e4:	b	0 <_ZN6__lsan9lsan_freeEPv>
    19e8:	adrp	x2, 0 <__interceptor_mallopt>
    19ec:	adrp	x0, 0 <__interceptor_mallopt>
    19f0:	add	x2, x2, #0x0
    19f4:	add	x0, x0, #0x0
    19f8:	mov	x4, #0x0                   	// #0
    19fc:	mov	x3, #0x0                   	// #0
    1a00:	mov	w1, #0x112                 	// #274
    1a04:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001a08 <_ZdaPvSt11align_val_tRKSt9nothrow_t>:
    1a08:	adrp	x1, 0 <lsan_init_is_running>
    1a0c:	str	x30, [sp, #-32]!
    1a10:	ldr	x1, [x1]
    1a14:	ldrb	w1, [x1]
    1a18:	cbnz	w1, 1a48 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x40>
    1a1c:	adrp	x1, 0 <lsan_inited>
    1a20:	ldr	x1, [x1]
    1a24:	ldrb	w1, [x1]
    1a28:	cbz	w1, 1a34 <_ZdaPvSt11align_val_tRKSt9nothrow_t+0x2c>
    1a2c:	ldr	x30, [sp], #32
    1a30:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1a34:	str	x0, [sp, #24]
    1a38:	bl	0 <__lsan_init>
    1a3c:	ldr	x0, [sp, #24]
    1a40:	ldr	x30, [sp], #32
    1a44:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1a48:	adrp	x2, 0 <__interceptor_mallopt>
    1a4c:	adrp	x0, 0 <__interceptor_mallopt>
    1a50:	add	x2, x2, #0x0
    1a54:	add	x0, x0, #0x0
    1a58:	mov	x4, #0x0                   	// #0
    1a5c:	mov	x3, #0x0                   	// #0
    1a60:	mov	w1, #0x115                 	// #277
    1a64:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001a68 <_ZdlPvmSt11align_val_t>:
    1a68:	adrp	x1, 0 <lsan_init_is_running>
    1a6c:	str	x30, [sp, #-32]!
    1a70:	ldr	x1, [x1]
    1a74:	ldrb	w1, [x1]
    1a78:	cbnz	w1, 1aa8 <_ZdlPvmSt11align_val_t+0x40>
    1a7c:	adrp	x1, 0 <lsan_inited>
    1a80:	ldr	x1, [x1]
    1a84:	ldrb	w1, [x1]
    1a88:	cbz	w1, 1a94 <_ZdlPvmSt11align_val_t+0x2c>
    1a8c:	ldr	x30, [sp], #32
    1a90:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1a94:	str	x0, [sp, #24]
    1a98:	bl	0 <__lsan_init>
    1a9c:	ldr	x0, [sp, #24]
    1aa0:	ldr	x30, [sp], #32
    1aa4:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1aa8:	adrp	x2, 0 <__interceptor_mallopt>
    1aac:	adrp	x0, 0 <__interceptor_mallopt>
    1ab0:	add	x2, x2, #0x0
    1ab4:	add	x0, x0, #0x0
    1ab8:	mov	x4, #0x0                   	// #0
    1abc:	mov	x3, #0x0                   	// #0
    1ac0:	mov	w1, #0x118                 	// #280
    1ac4:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001ac8 <_ZdaPvmSt11align_val_t>:
    1ac8:	adrp	x1, 0 <lsan_init_is_running>
    1acc:	str	x30, [sp, #-32]!
    1ad0:	ldr	x1, [x1]
    1ad4:	ldrb	w1, [x1]
    1ad8:	cbnz	w1, 1b08 <_ZdaPvmSt11align_val_t+0x40>
    1adc:	adrp	x1, 0 <lsan_inited>
    1ae0:	ldr	x1, [x1]
    1ae4:	ldrb	w1, [x1]
    1ae8:	cbz	w1, 1af4 <_ZdaPvmSt11align_val_t+0x2c>
    1aec:	ldr	x30, [sp], #32
    1af0:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1af4:	str	x0, [sp, #24]
    1af8:	bl	0 <__lsan_init>
    1afc:	ldr	x0, [sp, #24]
    1b00:	ldr	x30, [sp], #32
    1b04:	b	0 <_ZN6__lsan9lsan_freeEPv>
    1b08:	adrp	x2, 0 <__interceptor_mallopt>
    1b0c:	adrp	x0, 0 <__interceptor_mallopt>
    1b10:	add	x2, x2, #0x0
    1b14:	add	x0, x0, #0x0
    1b18:	mov	x4, #0x0                   	// #0
    1b1c:	mov	x3, #0x0                   	// #0
    1b20:	mov	w1, #0x11b                 	// #283
    1b24:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

0000000000001b28 <_ZN11__sanitizer14real_sigactionEiPKvPv>:
    1b28:	adrp	x3, 0 <__interceptor_mallopt>
    1b2c:	ldr	x3, [x3]
    1b30:	mov	x16, x3
    1b34:	br	x16

0000000000001b38 <_ZN6__lsan22InitializeInterceptorsEv>:
    1b38:	stp	x19, x30, [sp, #-16]!
    1b3c:	adrp	x19, 0 <__interceptor_mallopt>
    1b40:	add	x19, x19, #0x0
    1b44:	ldrb	w0, [x19, #64]
    1b48:	cbnz	w0, 1df0 <_ZN6__lsan22InitializeInterceptorsEv+0x2b8>
    1b4c:	adrp	x3, 218 <__interceptor_signal>
    1b50:	adrp	x2, 218 <__interceptor_signal>
    1b54:	mov	w4, #0x1                   	// #1
    1b58:	add	x1, x19, #0x18
    1b5c:	ldr	x3, [x3]
    1b60:	adrp	x0, 0 <__interceptor_mallopt>
    1b64:	ldr	x2, [x2]
    1b68:	add	x0, x0, #0x0
    1b6c:	strb	w4, [x19, #64]
    1b70:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1b74:	adrp	x3, 268 <__interceptor_sigaction>
    1b78:	adrp	x2, 268 <__interceptor_sigaction>
    1b7c:	add	x1, x19, #0x20
    1b80:	adrp	x0, 0 <__interceptor_mallopt>
    1b84:	ldr	x3, [x3]
    1b88:	add	x0, x0, #0x0
    1b8c:	ldr	x2, [x2]
    1b90:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1b94:	adrp	x3, 638 <__interceptor_malloc>
    1b98:	adrp	x2, 638 <__interceptor_malloc>
    1b9c:	add	x1, x19, #0x48
    1ba0:	adrp	x0, 0 <__interceptor_mallopt>
    1ba4:	ldr	x3, [x3]
    1ba8:	add	x0, x0, #0x0
    1bac:	ldr	x2, [x2]
    1bb0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1bb4:	adrp	x3, 8 <__interceptor_cfree>
    1bb8:	adrp	x2, 8 <__interceptor_cfree>
    1bbc:	add	x1, x19, #0x50
    1bc0:	adrp	x0, 0 <__interceptor_mallopt>
    1bc4:	ldr	x3, [x3]
    1bc8:	add	x0, x0, #0x0
    1bcc:	ldr	x2, [x2]
    1bd0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1bd4:	adrp	x3, 8 <__interceptor_cfree>
    1bd8:	adrp	x2, 8 <__interceptor_cfree>
    1bdc:	add	x1, x19, #0x58
    1be0:	adrp	x0, 0 <__interceptor_mallopt>
    1be4:	ldr	x3, [x3]
    1be8:	add	x0, x0, #0x0
    1bec:	ldr	x2, [x2]
    1bf0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1bf4:	adrp	x3, 5c8 <__interceptor_calloc>
    1bf8:	adrp	x2, 5c8 <__interceptor_calloc>
    1bfc:	add	x1, x19, #0x60
    1c00:	adrp	x0, 0 <__interceptor_mallopt>
    1c04:	ldr	x3, [x3]
    1c08:	add	x0, x0, #0x0
    1c0c:	ldr	x2, [x2]
    1c10:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1c14:	adrp	x3, 920 <__interceptor_realloc>
    1c18:	adrp	x2, 920 <__interceptor_realloc>
    1c1c:	add	x1, x19, #0x68
    1c20:	adrp	x0, 0 <__interceptor_mallopt>
    1c24:	ldr	x3, [x3]
    1c28:	add	x0, x0, #0x0
    1c2c:	ldr	x2, [x2]
    1c30:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1c34:	adrp	x3, a10 <__interceptor_memalign>
    1c38:	adrp	x2, a10 <__interceptor_memalign>
    1c3c:	add	x1, x19, #0x70
    1c40:	adrp	x0, 0 <__interceptor_mallopt>
    1c44:	ldr	x3, [x3]
    1c48:	add	x0, x0, #0x0
    1c4c:	ldr	x2, [x2]
    1c50:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1c54:	adrp	x3, ce8 <__interceptor___libc_memalign>
    1c58:	adrp	x2, ce8 <__interceptor___libc_memalign>
    1c5c:	add	x1, x19, #0x78
    1c60:	adrp	x0, 0 <__interceptor_mallopt>
    1c64:	ldr	x3, [x3]
    1c68:	add	x0, x0, #0x0
    1c6c:	ldr	x2, [x2]
    1c70:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1c74:	adrp	x3, b00 <__interceptor_aligned_alloc>
    1c78:	adrp	x2, b00 <__interceptor_aligned_alloc>
    1c7c:	add	x1, x19, #0x80
    1c80:	adrp	x0, 0 <__interceptor_mallopt>
    1c84:	ldr	x3, [x3]
    1c88:	add	x0, x0, #0x0
    1c8c:	ldr	x2, [x2]
    1c90:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1c94:	adrp	x3, bf0 <__interceptor_posix_memalign>
    1c98:	adrp	x2, bf0 <__interceptor_posix_memalign>
    1c9c:	add	x1, x19, #0x88
    1ca0:	adrp	x0, 0 <__interceptor_mallopt>
    1ca4:	ldr	x3, [x3]
    1ca8:	add	x0, x0, #0x0
    1cac:	ldr	x2, [x2]
    1cb0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1cb4:	adrp	x3, 730 <__interceptor_valloc>
    1cb8:	adrp	x2, 730 <__interceptor_valloc>
    1cbc:	add	x1, x19, #0x90
    1cc0:	adrp	x0, 0 <__interceptor_mallopt>
    1cc4:	ldr	x3, [x3]
    1cc8:	add	x0, x0, #0x0
    1ccc:	ldr	x2, [x2]
    1cd0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1cd4:	adrp	x3, 828 <__interceptor_pvalloc>
    1cd8:	adrp	x2, 828 <__interceptor_pvalloc>
    1cdc:	add	x1, x19, #0x98
    1ce0:	adrp	x0, 0 <__interceptor_mallopt>
    1ce4:	ldr	x3, [x3]
    1ce8:	add	x0, x0, #0x0
    1cec:	ldr	x2, [x2]
    1cf0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1cf4:	adrp	x3, 68 <__interceptor_malloc_usable_size>
    1cf8:	adrp	x2, 68 <__interceptor_malloc_usable_size>
    1cfc:	add	x1, x19, #0xa0
    1d00:	adrp	x0, 0 <__interceptor_mallopt>
    1d04:	ldr	x3, [x3]
    1d08:	add	x0, x0, #0x0
    1d0c:	ldr	x2, [x2]
    1d10:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1d14:	adrp	x3, c8 <__interceptor_mallinfo>
    1d18:	adrp	x2, c8 <__interceptor_mallinfo>
    1d1c:	add	x1, x19, #0xa8
    1d20:	adrp	x0, 0 <__interceptor_mallopt>
    1d24:	ldr	x3, [x3]
    1d28:	add	x0, x0, #0x0
    1d2c:	ldr	x2, [x2]
    1d30:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1d34:	adrp	x3, 0 <__interceptor_mallopt>
    1d38:	adrp	x2, 0 <__interceptor_mallopt>
    1d3c:	add	x1, x19, #0xb0
    1d40:	adrp	x0, 0 <__interceptor_mallopt>
    1d44:	ldr	x3, [x3]
    1d48:	add	x0, x0, #0x0
    1d4c:	ldr	x2, [x2]
    1d50:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1d54:	adrp	x3, 348 <__interceptor_pthread_create>
    1d58:	adrp	x2, 348 <__interceptor_pthread_create>
    1d5c:	add	x1, x19, #0x30
    1d60:	adrp	x0, 0 <__interceptor_mallopt>
    1d64:	ldr	x3, [x3]
    1d68:	add	x0, x0, #0x0
    1d6c:	ldr	x2, [x2]
    1d70:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1d74:	adrp	x3, 118 <__interceptor_pthread_join>
    1d78:	adrp	x2, 118 <__interceptor_pthread_join>
    1d7c:	add	x1, x19, #0x8
    1d80:	adrp	x0, 0 <__interceptor_mallopt>
    1d84:	ldr	x3, [x3]
    1d88:	add	x0, x0, #0x0
    1d8c:	ldr	x2, [x2]
    1d90:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1d94:	adrp	x3, 1c0 <__interceptor__exit>
    1d98:	adrp	x2, 1c0 <__interceptor__exit>
    1d9c:	add	x1, x19, #0x10
    1da0:	adrp	x0, 0 <__interceptor_mallopt>
    1da4:	ldr	x3, [x3]
    1da8:	add	x0, x0, #0x0
    1dac:	ldr	x2, [x2]
    1db0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1db4:	adrp	x3, e8 <__interceptor_strerror>
    1db8:	adrp	x2, e8 <__interceptor_strerror>
    1dbc:	mov	x1, x19
    1dc0:	adrp	x0, 0 <__interceptor_mallopt>
    1dc4:	ldr	x3, [x3]
    1dc8:	add	x0, x0, #0x0
    1dcc:	ldr	x2, [x2]
    1dd0:	bl	0 <_ZN14__interception17InterceptFunctionEPKcPmmm>
    1dd4:	adrp	x1, 0 <__interceptor_mallopt>
    1dd8:	add	x0, x19, #0x28
    1ddc:	add	x1, x1, #0x0
    1de0:	bl	0 <pthread_key_create>
    1de4:	cbnz	w0, 1e10 <_ZN6__lsan22InitializeInterceptorsEv+0x2d8>
    1de8:	ldp	x19, x30, [sp], #16
    1dec:	ret
    1df0:	adrp	x2, 0 <__interceptor_mallopt>
    1df4:	adrp	x0, 0 <__interceptor_mallopt>
    1df8:	add	x2, x2, #0x0
    1dfc:	add	x0, x0, #0x0
    1e00:	mov	x4, #0x0                   	// #0
    1e04:	mov	x3, #0x0                   	// #0
    1e08:	mov	w1, #0x50                  	// #80
    1e0c:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>
    1e10:	adrp	x0, 0 <__interceptor_mallopt>
    1e14:	add	x0, x0, #0x0
    1e18:	bl	0 <_ZN11__sanitizer6ReportEPKcz>
    1e1c:	bl	0 <_ZN11__sanitizer3DieEv>

lsan_mac.cpp.o:     file format elf64-littleaarch64


lsan_malloc_mac.cpp.o:     file format elf64-littleaarch64


lsan_preinit.cpp.o:     file format elf64-littleaarch64


lsan_thread.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN6__lsan13ThreadContext9OnStartedEPv>:
   0:	ldr	x2, [x1]
   4:	str	x2, [x0, #144]
   8:	ldr	x2, [x1, #48]
   c:	ldr	x3, [x1, #8]
  10:	str	x3, [x0, #152]
  14:	ldr	x3, [x1, #32]
  18:	str	x3, [x0, #176]
  1c:	ldr	x3, [x1, #40]
  20:	str	x3, [x0, #184]
  24:	ldr	x3, [x1, #16]
  28:	str	x3, [x0, #160]
  2c:	ldr	x1, [x1, #24]
  30:	str	x1, [x0, #168]
  34:	str	x2, [x0, #192]
  38:	ret
  3c:	nop

0000000000000040 <_ZN6__lsanL15FindThreadByUidEPN11__sanitizer17ThreadContextBaseEPv>:
  40:	ldr	x2, [x0, #40]
  44:	cmp	x1, x2
  48:	b.eq	54 <_ZN6__lsanL15FindThreadByUidEPN11__sanitizer17ThreadContextBaseEPv+0x14>  // b.none
  4c:	mov	w0, #0x0                   	// #0
  50:	ret
  54:	ldr	w0, [x0, #112]
  58:	cmp	w0, #0x0
  5c:	cset	w0, ne  // ne = any
  60:	ret
  64:	nop

0000000000000068 <_ZN6__lsanL19CreateThreadContextEj>:
  68:	stp	x19, x30, [sp, #-16]!
  6c:	mov	w2, #0x0                   	// #0
  70:	mov	w19, w0
  74:	adrp	x1, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
  78:	mov	x0, #0xc8                  	// #200
  7c:	add	x1, x1, #0x0
  80:	bl	0 <_ZN11__sanitizer9MmapOrDieEmPKcb>
  84:	mov	w1, w19
  88:	mov	x19, x0
  8c:	bl	0 <_ZN11__sanitizer17ThreadContextBaseC2Ej>
  90:	movi	v0.4s, #0x0
  94:	adrp	x1, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
  98:	add	x1, x1, #0x0
  9c:	str	x1, [x19]
  a0:	str	xzr, [x19, #192]
  a4:	mov	x0, x19
  a8:	stp	q0, q0, [x19, #144]
  ac:	str	q0, [x19, #176]
  b0:	ldp	x19, x30, [sp], #16
  b4:	ret

00000000000000b8 <_ZN6__lsan13ThreadContext10OnFinishedEv>:
  b8:	str	x30, [sp, #-16]!
  bc:	bl	0 <_ZN6__lsan21AllocatorThreadFinishEv>
  c0:	ldr	x30, [sp], #16
  c4:	b	0 <_ZN11__sanitizer12DTLS_DestroyEv>

00000000000000c8 <_ZN6__lsan24InitializeThreadRegistryEv>:
  c8:	stp	x19, x30, [sp, #-16]!
  cc:	adrp	x19, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
  d0:	add	x19, x19, #0x0
  d4:	mov	x0, x19
  d8:	mov	w4, #0x0                   	// #0
  dc:	mov	w3, #0x40                  	// #64
  e0:	mov	w2, #0x2000                	// #8192
  e4:	adrp	x1, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
  e8:	add	x1, x1, #0x0
  ec:	bl	0 <_ZN11__sanitizer14ThreadRegistryC1EPFPNS_17ThreadContextBaseEjEjjj>
  f0:	str	x19, [x19, #208]
  f4:	ldp	x19, x30, [sp], #16
  f8:	ret
  fc:	nop

0000000000000100 <_ZN6__lsan13ThreadContextC1Ei>:
 100:	stp	x19, x30, [sp, #-16]!
 104:	mov	x19, x0
 108:	bl	0 <_ZN11__sanitizer17ThreadContextBaseC2Ej>
 10c:	movi	v0.4s, #0x0
 110:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 114:	add	x0, x0, #0x0
 118:	str	x0, [x19]
 11c:	str	xzr, [x19, #192]
 120:	stp	q0, q0, [x19, #144]
 124:	str	q0, [x19, #176]
 128:	ldp	x19, x30, [sp], #16
 12c:	ret

0000000000000130 <_ZN6__lsan12ThreadCreateEjmb>:
 130:	adrp	x5, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 134:	mov	w3, w0
 138:	mov	x4, #0x0                   	// #0
 13c:	ldr	x0, [x5]
 140:	b	0 <_ZN11__sanitizer14ThreadRegistry12CreateThreadEmbjPv>
 144:	nop

0000000000000148 <_ZN6__lsan11ThreadStartEjyN11__sanitizer10ThreadTypeE>:
 148:	stp	x19, x20, [sp, #-128]!
 14c:	cmp	w0, #0x0
 150:	mov	x20, x1
 154:	add	x19, sp, #0x48
 158:	add	x3, sp, #0x68
 15c:	mov	x1, x19
 160:	add	x4, sp, #0x40
 164:	stp	x21, x22, [sp, #16]
 168:	mov	w22, w0
 16c:	mov	w21, w2
 170:	cset	w0, eq  // eq = none
 174:	add	x2, sp, #0x38
 178:	str	x30, [sp, #32]
 17c:	stp	xzr, xzr, [sp, #56]
 180:	bl	0 <_ZN11__sanitizer20GetThreadStackAndTlsEbPmS0_S0_S0_>
 184:	add	x1, x19, #0x18
 188:	ldp	x5, x4, [sp, #56]
 18c:	add	x0, x19, #0x10
 190:	ldr	x3, [sp, #72]
 194:	ldr	x2, [sp, #104]
 198:	add	x3, x3, x5
 19c:	str	x3, [sp, #80]
 1a0:	add	x2, x2, x4
 1a4:	str	x2, [sp, #112]
 1a8:	bl	0 <_ZN6__lsan22GetAllocatorCacheRangeEPmS0_>
 1ac:	bl	0 <_ZN11__sanitizer8DTLS_GetEv>
 1b0:	mov	x5, x0
 1b4:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 1b8:	mov	w3, w21
 1bc:	mov	x2, x20
 1c0:	mov	x4, x19
 1c4:	ldr	x0, [x0]
 1c8:	mov	w1, w22
 1cc:	str	x5, [sp, #120]
 1d0:	bl	0 <_ZN11__sanitizer14ThreadRegistry11StartThreadEjyNS_10ThreadTypeEPv>
 1d4:	ldp	x21, x22, [sp, #16]
 1d8:	ldr	x30, [sp, #32]
 1dc:	ldp	x19, x20, [sp], #128
 1e0:	ret
 1e4:	nop

00000000000001e8 <_ZN6__lsan12ThreadFinishEv>:
 1e8:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 1ec:	stp	x19, x30, [sp, #-16]!
 1f0:	ldr	x19, [x0]
 1f4:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 1f8:	mov	w1, w0
 1fc:	mov	x0, x19
 200:	bl	0 <_ZN11__sanitizer14ThreadRegistry12FinishThreadEj>
 204:	ldp	x19, x30, [sp], #16
 208:	mov	w0, #0xffffffff            	// #-1
 20c:	b	0 <_ZN6__lsan16SetCurrentThreadEj>

0000000000000210 <_ZN6__lsan20CurrentThreadContextEv>:
 210:	stp	x19, x30, [sp, #-16]!
 214:	adrp	x19, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 218:	add	x19, x19, #0x0
 21c:	ldr	x0, [x19, #208]
 220:	cbz	x0, 248 <_ZN6__lsan20CurrentThreadContextEv+0x38>
 224:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 228:	cmn	w0, #0x1
 22c:	b.eq	248 <_ZN6__lsan20CurrentThreadContextEv+0x38>  // b.none
 230:	ldr	x19, [x19, #208]
 234:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 238:	ldr	x1, [x19, #152]
 23c:	ldp	x19, x30, [sp], #16
 240:	ldr	x0, [x1, w0, uxtw #3]
 244:	ret
 248:	mov	x0, #0x0                   	// #0
 24c:	ldp	x19, x30, [sp], #16
 250:	ret
 254:	nop

0000000000000258 <_ZN6__lsan9ThreadTidEm>:
 258:	adrp	x3, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 25c:	mov	x2, x0
 260:	adrp	x1, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 264:	add	x1, x1, #0x0
 268:	ldr	x0, [x3]
 26c:	b	0 <_ZN11__sanitizer14ThreadRegistry10FindThreadEPFbPNS_17ThreadContextBaseEPvES3_>

0000000000000270 <_ZN6__lsan10ThreadJoinEj>:
 270:	cmn	w0, #0x1
 274:	b.eq	28c <_ZN6__lsan10ThreadJoinEj+0x1c>  // b.none
 278:	mov	w1, w0
 27c:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 280:	mov	x2, #0x0                   	// #0
 284:	ldr	x0, [x0]
 288:	b	0 <_ZN11__sanitizer14ThreadRegistry10JoinThreadEjPv>
 28c:	str	x30, [sp, #-16]!
 290:	adrp	x2, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 294:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 298:	mov	x4, #0xffffffff            	// #4294967295
 29c:	add	x2, x2, #0x0
 2a0:	add	x0, x0, #0x0
 2a4:	mov	x3, x4
 2a8:	mov	w1, #0x76                  	// #118
 2ac:	bl	0 <_ZN11__sanitizer11CheckFailedEPKciS1_yy>

00000000000002b0 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv>:
 2b0:	stp	x19, x30, [sp, #-16]!
 2b4:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 2b8:	cbz	w0, 2c4 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv+0x14>
 2bc:	ldp	x19, x30, [sp], #16
 2c0:	ret
 2c4:	adrp	x19, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 2c8:	add	x19, x19, #0x0
 2cc:	ldr	x0, [x19, #208]
 2d0:	cbz	x0, 300 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv+0x50>
 2d4:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 2d8:	cmn	w0, #0x1
 2dc:	b.eq	300 <_ZN6__lsan27EnsureMainThreadIDIsCorrectEv+0x50>  // b.none
 2e0:	ldr	x19, [x19, #208]
 2e4:	bl	0 <_ZN6__lsan16GetCurrentThreadEv>
 2e8:	ldr	x1, [x19, #152]
 2ec:	ldr	x19, [x1, w0, uxtw #3]
 2f0:	bl	0 <_ZN11__sanitizer6GetTidEv>
 2f4:	str	x0, [x19, #32]
 2f8:	ldp	x19, x30, [sp], #16
 2fc:	ret
 300:	bl	0 <_ZN11__sanitizer6GetTidEv>
 304:	mov	x0, #0x0                   	// #0
 308:	str	xzr, [x0, #32]
 30c:	brk	#0x3e8

0000000000000310 <_ZN6__lsan21GetThreadRangesLockedEyPmS0_S0_S0_S0_S0_PPN11__sanitizer4DTLSE>:
 310:	adrp	x8, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 314:	mov	x9, x0
 318:	stp	x19, x20, [sp, #-64]!
 31c:	mov	x20, x5
 320:	mov	x19, x7
 324:	ldr	x0, [x8]
 328:	stp	x21, x22, [sp, #16]
 32c:	mov	x22, x3
 330:	mov	x21, x4
 334:	stp	x23, x24, [sp, #32]
 338:	mov	x24, x1
 33c:	mov	x23, x2
 340:	mov	x1, x9
 344:	stp	x25, x30, [sp, #48]
 348:	mov	x25, x6
 34c:	bl	0 <_ZN11__sanitizer14ThreadRegistry29FindThreadContextByOsIDLockedEy>
 350:	cbz	x0, 3a8 <_ZN6__lsan21GetThreadRangesLockedEyPmS0_S0_S0_S0_S0_PPN11__sanitizer4DTLSE+0x98>
 354:	mov	x8, x0
 358:	ldr	x0, [x0, #144]
 35c:	ldr	x1, [x8, #192]
 360:	str	x0, [x24]
 364:	mov	w0, #0x1                   	// #1
 368:	ldr	x2, [x8, #152]
 36c:	str	x2, [x23]
 370:	ldp	x23, x24, [sp, #32]
 374:	ldr	x2, [x8, #176]
 378:	str	x2, [x22]
 37c:	ldr	x2, [x8, #184]
 380:	str	x2, [x21]
 384:	ldp	x21, x22, [sp, #16]
 388:	ldr	x2, [x8, #160]
 38c:	str	x2, [x20]
 390:	ldr	x2, [x8, #168]
 394:	str	x2, [x25]
 398:	str	x1, [x19]
 39c:	ldp	x25, x30, [sp, #48]
 3a0:	ldp	x19, x20, [sp], #64
 3a4:	ret
 3a8:	mov	w0, #0x0                   	// #0
 3ac:	ldp	x21, x22, [sp, #16]
 3b0:	ldp	x23, x24, [sp, #32]
 3b4:	ldp	x25, x30, [sp, #48]
 3b8:	ldp	x19, x20, [sp], #64
 3bc:	ret

00000000000003c0 <_ZN6__lsan22ForEachExtraStackRangeEyPFvmmPvES0_>:
 3c0:	ret
 3c4:	nop

00000000000003c8 <_ZN6__lsan18LockThreadRegistryEv>:
 3c8:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 3cc:	ldr	x0, [x0]
 3d0:	add	x0, x0, #0x18
 3d4:	b	0 <_ZN11__sanitizer13BlockingMutex4LockEv>

00000000000003d8 <_ZN6__lsan20UnlockThreadRegistryEv>:
 3d8:	adrp	x0, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 3dc:	ldr	x0, [x0]
 3e0:	add	x0, x0, #0x18
 3e4:	b	0 <_ZN11__sanitizer13BlockingMutex6UnlockEv>

00000000000003e8 <_ZN6__lsan23GetThreadRegistryLockedEv>:
 3e8:	stp	x19, x30, [sp, #-16]!
 3ec:	adrp	x19, 0 <_ZN6__lsan13ThreadContext9OnStartedEPv>
 3f0:	add	x19, x19, #0x0
 3f4:	ldr	x0, [x19, #208]
 3f8:	add	x0, x0, #0x18
 3fc:	bl	0 <_ZN11__sanitizer13BlockingMutex11CheckLockedEv>
 400:	ldr	x0, [x19, #208]
 404:	ldp	x19, x30, [sp], #16
 408:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase6OnDeadEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase6OnDeadEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase8OnJoinedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase8OnJoinedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase9OnCreatedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase9OnCreatedEPv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase7OnResetEv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase7OnResetEv>:
   0:	ret

Disassembly of section .text._ZN11__sanitizer17ThreadContextBase10OnDetachedEPv:

0000000000000000 <_ZN11__sanitizer17ThreadContextBase10OnDetachedEPv>:
   0:	ret
