
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libmpc.so.3.1.0_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000004998 <.init>:
    4998:	stp	x29, x30, [sp, #-16]!
    499c:	mov	x29, sp
    49a0:	bl	5620 <mpfr_get_emin_min@plt+0x10>
    49a4:	ldp	x29, x30, [sp], #16
    49a8:	ret

Disassembly of section .plt:

00000000000049b0 <mpfr_set_underflow@plt-0x20>:
    49b0:	stp	x16, x30, [sp, #-16]!
    49b4:	adrp	x16, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    49b8:	ldr	x17, [x16, #4088]
    49bc:	add	x16, x16, #0xff8
    49c0:	br	x17
    49c4:	nop
    49c8:	nop
    49cc:	nop

00000000000049d0 <mpfr_set_underflow@plt>:
    49d0:	adrp	x16, 29000 <mpfr_set_underflow>
    49d4:	ldr	x17, [x16]
    49d8:	add	x16, x16, #0x0
    49dc:	br	x17

00000000000049e0 <__gmpz_get_si@plt>:
    49e0:	adrp	x16, 29000 <mpfr_set_underflow>
    49e4:	ldr	x17, [x16, #8]
    49e8:	add	x16, x16, #0x8
    49ec:	br	x17

00000000000049f0 <mpfr_set_ld@plt>:
    49f0:	adrp	x16, 29000 <mpfr_set_underflow>
    49f4:	ldr	x17, [x16, #16]
    49f8:	add	x16, x16, #0x10
    49fc:	br	x17

0000000000004a00 <mpfr_mul_ui@plt>:
    4a00:	adrp	x16, 29000 <mpfr_set_underflow>
    4a04:	ldr	x17, [x16, #24]
    4a08:	add	x16, x16, #0x18
    4a0c:	br	x17

0000000000004a10 <mpfr_mul_q@plt>:
    4a10:	adrp	x16, 29000 <mpfr_set_underflow>
    4a14:	ldr	x17, [x16, #32]
    4a18:	add	x16, x16, #0x20
    4a1c:	br	x17

0000000000004a20 <mpfr_set_si_2exp@plt>:
    4a20:	adrp	x16, 29000 <mpfr_set_underflow>
    4a24:	ldr	x17, [x16, #40]
    4a28:	add	x16, x16, #0x28
    4a2c:	br	x17

0000000000004a30 <__gmpz_scan1@plt>:
    4a30:	adrp	x16, 29000 <mpfr_set_underflow>
    4a34:	ldr	x17, [x16, #48]
    4a38:	add	x16, x16, #0x30
    4a3c:	br	x17

0000000000004a40 <strlen@plt>:
    4a40:	adrp	x16, 29000 <mpfr_set_underflow>
    4a44:	ldr	x17, [x16, #56]
    4a48:	add	x16, x16, #0x38
    4a4c:	br	x17

0000000000004a50 <mpc_clear@plt>:
    4a50:	adrp	x16, 29000 <mpfr_set_underflow>
    4a54:	ldr	x17, [x16, #64]
    4a58:	add	x16, x16, #0x40
    4a5c:	br	x17

0000000000004a60 <mpfr_cosh@plt>:
    4a60:	adrp	x16, 29000 <mpfr_set_underflow>
    4a64:	ldr	x17, [x16, #72]
    4a68:	add	x16, x16, #0x48
    4a6c:	br	x17

0000000000004a70 <mpfr_tanh@plt>:
    4a70:	adrp	x16, 29000 <mpfr_set_underflow>
    4a74:	ldr	x17, [x16, #80]
    4a78:	add	x16, x16, #0x50
    4a7c:	br	x17

0000000000004a80 <mpfr_set_nan@plt>:
    4a80:	adrp	x16, 29000 <mpfr_set_underflow>
    4a84:	ldr	x17, [x16, #88]
    4a88:	add	x16, x16, #0x58
    4a8c:	br	x17

0000000000004a90 <mpfr_clear_overflow@plt>:
    4a90:	adrp	x16, 29000 <mpfr_set_underflow>
    4a94:	ldr	x17, [x16, #96]
    4a98:	add	x16, x16, #0x60
    4a9c:	br	x17

0000000000004aa0 <mpfr_sub@plt>:
    4aa0:	adrp	x16, 29000 <mpfr_set_underflow>
    4aa4:	ldr	x17, [x16, #104]
    4aa8:	add	x16, x16, #0x68
    4aac:	br	x17

0000000000004ab0 <mpfr_mul_2si@plt>:
    4ab0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ab4:	ldr	x17, [x16, #112]
    4ab8:	add	x16, x16, #0x70
    4abc:	br	x17

0000000000004ac0 <mpfr_const_pi@plt>:
    4ac0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ac4:	ldr	x17, [x16, #120]
    4ac8:	add	x16, x16, #0x78
    4acc:	br	x17

0000000000004ad0 <mpfr_fmms@plt>:
    4ad0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ad4:	ldr	x17, [x16, #128]
    4ad8:	add	x16, x16, #0x80
    4adc:	br	x17

0000000000004ae0 <mpfr_init@plt>:
    4ae0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ae4:	ldr	x17, [x16, #136]
    4ae8:	add	x16, x16, #0x88
    4aec:	br	x17

0000000000004af0 <mpfr_tan@plt>:
    4af0:	adrp	x16, 29000 <mpfr_set_underflow>
    4af4:	ldr	x17, [x16, #144]
    4af8:	add	x16, x16, #0x90
    4afc:	br	x17

0000000000004b00 <mpfr_strtofr@plt>:
    4b00:	adrp	x16, 29000 <mpfr_set_underflow>
    4b04:	ldr	x17, [x16, #152]
    4b08:	add	x16, x16, #0x98
    4b0c:	br	x17

0000000000004b10 <__gmpz_sub_ui@plt>:
    4b10:	adrp	x16, 29000 <mpfr_set_underflow>
    4b14:	ldr	x17, [x16, #160]
    4b18:	add	x16, x16, #0xa0
    4b1c:	br	x17

0000000000004b20 <__gmp_get_memory_functions@plt>:
    4b20:	adrp	x16, 29000 <mpfr_set_underflow>
    4b24:	ldr	x17, [x16, #168]
    4b28:	add	x16, x16, #0xa8
    4b2c:	br	x17

0000000000004b30 <__gmpz_sqrt@plt>:
    4b30:	adrp	x16, 29000 <mpfr_set_underflow>
    4b34:	ldr	x17, [x16, #176]
    4b38:	add	x16, x16, #0xb0
    4b3c:	br	x17

0000000000004b40 <mpfr_set_erangeflag@plt>:
    4b40:	adrp	x16, 29000 <mpfr_set_underflow>
    4b44:	ldr	x17, [x16, #184]
    4b48:	add	x16, x16, #0xb8
    4b4c:	br	x17

0000000000004b50 <__gmpz_set_ui@plt>:
    4b50:	adrp	x16, 29000 <mpfr_set_underflow>
    4b54:	ldr	x17, [x16, #192]
    4b58:	add	x16, x16, #0xc0
    4b5c:	br	x17

0000000000004b60 <__cxa_finalize@plt>:
    4b60:	adrp	x16, 29000 <mpfr_set_underflow>
    4b64:	ldr	x17, [x16, #200]
    4b68:	add	x16, x16, #0xc8
    4b6c:	br	x17

0000000000004b70 <sprintf@plt>:
    4b70:	adrp	x16, 29000 <mpfr_set_underflow>
    4b74:	ldr	x17, [x16, #208]
    4b78:	add	x16, x16, #0xd0
    4b7c:	br	x17

0000000000004b80 <mpc_sqrt@plt>:
    4b80:	adrp	x16, 29000 <mpfr_set_underflow>
    4b84:	ldr	x17, [x16, #216]
    4b88:	add	x16, x16, #0xd8
    4b8c:	br	x17

0000000000004b90 <mpfr_get_d@plt>:
    4b90:	adrp	x16, 29000 <mpfr_set_underflow>
    4b94:	ldr	x17, [x16, #224]
    4b98:	add	x16, x16, #0xe0
    4b9c:	br	x17

0000000000004ba0 <mpfr_set_f@plt>:
    4ba0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ba4:	ldr	x17, [x16, #232]
    4ba8:	add	x16, x16, #0xe8
    4bac:	br	x17

0000000000004bb0 <mpfr_mul@plt>:
    4bb0:	adrp	x16, 29000 <mpfr_set_underflow>
    4bb4:	ldr	x17, [x16, #240]
    4bb8:	add	x16, x16, #0xf0
    4bbc:	br	x17

0000000000004bc0 <mpfr_neg@plt>:
    4bc0:	adrp	x16, 29000 <mpfr_set_underflow>
    4bc4:	ldr	x17, [x16, #248]
    4bc8:	add	x16, x16, #0xf8
    4bcc:	br	x17

0000000000004bd0 <mpfr_pow@plt>:
    4bd0:	adrp	x16, 29000 <mpfr_set_underflow>
    4bd4:	ldr	x17, [x16, #256]
    4bd8:	add	x16, x16, #0x100
    4bdc:	br	x17

0000000000004be0 <fputc@plt>:
    4be0:	adrp	x16, 29000 <mpfr_set_underflow>
    4be4:	ldr	x17, [x16, #264]
    4be8:	add	x16, x16, #0x108
    4bec:	br	x17

0000000000004bf0 <mpfr_nextbelow@plt>:
    4bf0:	adrp	x16, 29000 <mpfr_set_underflow>
    4bf4:	ldr	x17, [x16, #272]
    4bf8:	add	x16, x16, #0x110
    4bfc:	br	x17

0000000000004c00 <__gmpz_sub@plt>:
    4c00:	adrp	x16, 29000 <mpfr_set_underflow>
    4c04:	ldr	x17, [x16, #280]
    4c08:	add	x16, x16, #0x118
    4c0c:	br	x17

0000000000004c10 <mpfr_get_z@plt>:
    4c10:	adrp	x16, 29000 <mpfr_set_underflow>
    4c14:	ldr	x17, [x16, #288]
    4c18:	add	x16, x16, #0x120
    4c1c:	br	x17

0000000000004c20 <mpfr_sinh_cosh@plt>:
    4c20:	adrp	x16, 29000 <mpfr_set_underflow>
    4c24:	ldr	x17, [x16, #296]
    4c28:	add	x16, x16, #0x128
    4c2c:	br	x17

0000000000004c30 <mpc_alloc_str@plt>:
    4c30:	adrp	x16, 29000 <mpfr_set_underflow>
    4c34:	ldr	x17, [x16, #304]
    4c38:	add	x16, x16, #0x130
    4c3c:	br	x17

0000000000004c40 <mpc_set_prec@plt>:
    4c40:	adrp	x16, 29000 <mpfr_set_underflow>
    4c44:	ldr	x17, [x16, #312]
    4c48:	add	x16, x16, #0x138
    4c4c:	br	x17

0000000000004c50 <mpfr_set_exp@plt>:
    4c50:	adrp	x16, 29000 <mpfr_set_underflow>
    4c54:	ldr	x17, [x16, #320]
    4c58:	add	x16, x16, #0x140
    4c5c:	br	x17

0000000000004c60 <mpc_tan@plt>:
    4c60:	adrp	x16, 29000 <mpfr_set_underflow>
    4c64:	ldr	x17, [x16, #328]
    4c68:	add	x16, x16, #0x148
    4c6c:	br	x17

0000000000004c70 <mpfr_set_d@plt>:
    4c70:	adrp	x16, 29000 <mpfr_set_underflow>
    4c74:	ldr	x17, [x16, #336]
    4c78:	add	x16, x16, #0x150
    4c7c:	br	x17

0000000000004c80 <__gmpz_divisible_2exp_p@plt>:
    4c80:	adrp	x16, 29000 <mpfr_set_underflow>
    4c84:	ldr	x17, [x16, #344]
    4c88:	add	x16, x16, #0x158
    4c8c:	br	x17

0000000000004c90 <__ctype_tolower_loc@plt>:
    4c90:	adrp	x16, 29000 <mpfr_set_underflow>
    4c94:	ldr	x17, [x16, #352]
    4c98:	add	x16, x16, #0x160
    4c9c:	br	x17

0000000000004ca0 <__gmpz_fits_slong_p@plt>:
    4ca0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ca4:	ldr	x17, [x16, #360]
    4ca8:	add	x16, x16, #0x168
    4cac:	br	x17

0000000000004cb0 <localeconv@plt>:
    4cb0:	adrp	x16, 29000 <mpfr_set_underflow>
    4cb4:	ldr	x17, [x16, #368]
    4cb8:	add	x16, x16, #0x170
    4cbc:	br	x17

0000000000004cc0 <stpcpy@plt>:
    4cc0:	adrp	x16, 29000 <mpfr_set_underflow>
    4cc4:	ldr	x17, [x16, #376]
    4cc8:	add	x16, x16, #0x178
    4ccc:	br	x17

0000000000004cd0 <mpfr_set_prec@plt>:
    4cd0:	adrp	x16, 29000 <mpfr_set_underflow>
    4cd4:	ldr	x17, [x16, #384]
    4cd8:	add	x16, x16, #0x180
    4cdc:	br	x17

0000000000004ce0 <mpfr_fmma@plt>:
    4ce0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ce4:	ldr	x17, [x16, #392]
    4ce8:	add	x16, x16, #0x188
    4cec:	br	x17

0000000000004cf0 <mpfr_atan2@plt>:
    4cf0:	adrp	x16, 29000 <mpfr_set_underflow>
    4cf4:	ldr	x17, [x16, #400]
    4cf8:	add	x16, x16, #0x190
    4cfc:	br	x17

0000000000004d00 <mpfr_cmp_ui_2exp@plt>:
    4d00:	adrp	x16, 29000 <mpfr_set_underflow>
    4d04:	ldr	x17, [x16, #408]
    4d08:	add	x16, x16, #0x198
    4d0c:	br	x17

0000000000004d10 <__gmpz_divexact@plt>:
    4d10:	adrp	x16, 29000 <mpfr_set_underflow>
    4d14:	ldr	x17, [x16, #416]
    4d18:	add	x16, x16, #0x1a0
    4d1c:	br	x17

0000000000004d20 <mpc_add@plt>:
    4d20:	adrp	x16, 29000 <mpfr_set_underflow>
    4d24:	ldr	x17, [x16, #424]
    4d28:	add	x16, x16, #0x1a8
    4d2c:	br	x17

0000000000004d30 <mpc_set_ui@plt>:
    4d30:	adrp	x16, 29000 <mpfr_set_underflow>
    4d34:	ldr	x17, [x16, #432]
    4d38:	add	x16, x16, #0x1b0
    4d3c:	br	x17

0000000000004d40 <mpc_init2@plt>:
    4d40:	adrp	x16, 29000 <mpfr_set_underflow>
    4d44:	ldr	x17, [x16, #440]
    4d48:	add	x16, x16, #0x1b8
    4d4c:	br	x17

0000000000004d50 <__gmpz_set@plt>:
    4d50:	adrp	x16, 29000 <mpfr_set_underflow>
    4d54:	ldr	x17, [x16, #448]
    4d58:	add	x16, x16, #0x1c0
    4d5c:	br	x17

0000000000004d60 <mpfr_set_zero@plt>:
    4d60:	adrp	x16, 29000 <mpfr_set_underflow>
    4d64:	ldr	x17, [x16, #456]
    4d68:	add	x16, x16, #0x1c8
    4d6c:	br	x17

0000000000004d70 <mpc_ceil_log2@plt>:
    4d70:	adrp	x16, 29000 <mpfr_set_underflow>
    4d74:	ldr	x17, [x16, #464]
    4d78:	add	x16, x16, #0x1d0
    4d7c:	br	x17

0000000000004d80 <__gmpz_tstbit@plt>:
    4d80:	adrp	x16, 29000 <mpfr_set_underflow>
    4d84:	ldr	x17, [x16, #472]
    4d88:	add	x16, x16, #0x1d8
    4d8c:	br	x17

0000000000004d90 <__gmpz_mul@plt>:
    4d90:	adrp	x16, 29000 <mpfr_set_underflow>
    4d94:	ldr	x17, [x16, #480]
    4d98:	add	x16, x16, #0x1e0
    4d9c:	br	x17

0000000000004da0 <mpc_set_ld_ld@plt>:
    4da0:	adrp	x16, 29000 <mpfr_set_underflow>
    4da4:	ldr	x17, [x16, #488]
    4da8:	add	x16, x16, #0x1e8
    4dac:	br	x17

0000000000004db0 <mpfr_clear@plt>:
    4db0:	adrp	x16, 29000 <mpfr_set_underflow>
    4db4:	ldr	x17, [x16, #496]
    4db8:	add	x16, x16, #0x1f0
    4dbc:	br	x17

0000000000004dc0 <__gmpfr_set_sj@plt>:
    4dc0:	adrp	x16, 29000 <mpfr_set_underflow>
    4dc4:	ldr	x17, [x16, #504]
    4dc8:	add	x16, x16, #0x1f8
    4dcc:	br	x17

0000000000004dd0 <mpfr_log@plt>:
    4dd0:	adrp	x16, 29000 <mpfr_set_underflow>
    4dd4:	ldr	x17, [x16, #512]
    4dd8:	add	x16, x16, #0x200
    4ddc:	br	x17

0000000000004de0 <mpfr_atanh@plt>:
    4de0:	adrp	x16, 29000 <mpfr_set_underflow>
    4de4:	ldr	x17, [x16, #520]
    4de8:	add	x16, x16, #0x208
    4dec:	br	x17

0000000000004df0 <__gmpz_swap@plt>:
    4df0:	adrp	x16, 29000 <mpfr_set_underflow>
    4df4:	ldr	x17, [x16, #528]
    4df8:	add	x16, x16, #0x210
    4dfc:	br	x17

0000000000004e00 <mpc_log@plt>:
    4e00:	adrp	x16, 29000 <mpfr_set_underflow>
    4e04:	ldr	x17, [x16, #536]
    4e08:	add	x16, x16, #0x218
    4e0c:	br	x17

0000000000004e10 <mpfr_asinh@plt>:
    4e10:	adrp	x16, 29000 <mpfr_set_underflow>
    4e14:	ldr	x17, [x16, #544]
    4e18:	add	x16, x16, #0x220
    4e1c:	br	x17

0000000000004e20 <mpc_fix_inf@plt>:
    4e20:	adrp	x16, 29000 <mpfr_set_underflow>
    4e24:	ldr	x17, [x16, #552]
    4e28:	add	x16, x16, #0x228
    4e2c:	br	x17

0000000000004e30 <strcat@plt>:
    4e30:	adrp	x16, 29000 <mpfr_set_underflow>
    4e34:	ldr	x17, [x16, #560]
    4e38:	add	x16, x16, #0x230
    4e3c:	br	x17

0000000000004e40 <mpc_pow_usi@plt>:
    4e40:	adrp	x16, 29000 <mpfr_set_underflow>
    4e44:	ldr	x17, [x16, #568]
    4e48:	add	x16, x16, #0x238
    4e4c:	br	x17

0000000000004e50 <mpfr_nextabove@plt>:
    4e50:	adrp	x16, 29000 <mpfr_set_underflow>
    4e54:	ldr	x17, [x16, #576]
    4e58:	add	x16, x16, #0x240
    4e5c:	br	x17

0000000000004e60 <__gmpz_fdiv_q_2exp@plt>:
    4e60:	adrp	x16, 29000 <mpfr_set_underflow>
    4e64:	ldr	x17, [x16, #584]
    4e68:	add	x16, x16, #0x248
    4e6c:	br	x17

0000000000004e70 <mpfr_clear_underflow@plt>:
    4e70:	adrp	x16, 29000 <mpfr_set_underflow>
    4e74:	ldr	x17, [x16, #592]
    4e78:	add	x16, x16, #0x250
    4e7c:	br	x17

0000000000004e80 <mpfr_integer_p@plt>:
    4e80:	adrp	x16, 29000 <mpfr_set_underflow>
    4e84:	ldr	x17, [x16, #600]
    4e88:	add	x16, x16, #0x258
    4e8c:	br	x17

0000000000004e90 <mpfr_asin@plt>:
    4e90:	adrp	x16, 29000 <mpfr_set_underflow>
    4e94:	ldr	x17, [x16, #608]
    4e98:	add	x16, x16, #0x260
    4e9c:	br	x17

0000000000004ea0 <mpc_set_ld@plt>:
    4ea0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ea4:	ldr	x17, [x16, #616]
    4ea8:	add	x16, x16, #0x268
    4eac:	br	x17

0000000000004eb0 <mpfr_add@plt>:
    4eb0:	adrp	x16, 29000 <mpfr_set_underflow>
    4eb4:	ldr	x17, [x16, #624]
    4eb8:	add	x16, x16, #0x270
    4ebc:	br	x17

0000000000004ec0 <mpfr_clears@plt>:
    4ec0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ec4:	ldr	x17, [x16, #632]
    4ec8:	add	x16, x16, #0x278
    4ecc:	br	x17

0000000000004ed0 <mpfr_set@plt>:
    4ed0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ed4:	ldr	x17, [x16, #640]
    4ed8:	add	x16, x16, #0x280
    4edc:	br	x17

0000000000004ee0 <__gmpz_mul_2exp@plt>:
    4ee0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ee4:	ldr	x17, [x16, #648]
    4ee8:	add	x16, x16, #0x288
    4eec:	br	x17

0000000000004ef0 <mpc_norm@plt>:
    4ef0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ef4:	ldr	x17, [x16, #656]
    4ef8:	add	x16, x16, #0x290
    4efc:	br	x17

0000000000004f00 <mpc_mul_naive@plt>:
    4f00:	adrp	x16, 29000 <mpfr_set_underflow>
    4f04:	ldr	x17, [x16, #664]
    4f08:	add	x16, x16, #0x298
    4f0c:	br	x17

0000000000004f10 <mpfr_set_z@plt>:
    4f10:	adrp	x16, 29000 <mpfr_set_underflow>
    4f14:	ldr	x17, [x16, #672]
    4f18:	add	x16, x16, #0x2a0
    4f1c:	br	x17

0000000000004f20 <mpc_mul@plt>:
    4f20:	adrp	x16, 29000 <mpfr_set_underflow>
    4f24:	ldr	x17, [x16, #680]
    4f28:	add	x16, x16, #0x2a8
    4f2c:	br	x17

0000000000004f30 <mpfr_add_ui@plt>:
    4f30:	adrp	x16, 29000 <mpfr_set_underflow>
    4f34:	ldr	x17, [x16, #688]
    4f38:	add	x16, x16, #0x2b0
    4f3c:	br	x17

0000000000004f40 <mpc_set_nan@plt>:
    4f40:	adrp	x16, 29000 <mpfr_set_underflow>
    4f44:	ldr	x17, [x16, #696]
    4f48:	add	x16, x16, #0x2b8
    4f4c:	br	x17

0000000000004f50 <mpc_strtoc@plt>:
    4f50:	adrp	x16, 29000 <mpfr_set_underflow>
    4f54:	ldr	x17, [x16, #704]
    4f58:	add	x16, x16, #0x2c0
    4f5c:	br	x17

0000000000004f60 <__gmpz_addmul@plt>:
    4f60:	adrp	x16, 29000 <mpfr_set_underflow>
    4f64:	ldr	x17, [x16, #712]
    4f68:	add	x16, x16, #0x2c8
    4f6c:	br	x17

0000000000004f70 <getc@plt>:
    4f70:	adrp	x16, 29000 <mpfr_set_underflow>
    4f74:	ldr	x17, [x16, #720]
    4f78:	add	x16, x16, #0x2d0
    4f7c:	br	x17

0000000000004f80 <mpc_sqr@plt>:
    4f80:	adrp	x16, 29000 <mpfr_set_underflow>
    4f84:	ldr	x17, [x16, #728]
    4f88:	add	x16, x16, #0x2d8
    4f8c:	br	x17

0000000000004f90 <mpfr_mul_2ui@plt>:
    4f90:	adrp	x16, 29000 <mpfr_set_underflow>
    4f94:	ldr	x17, [x16, #736]
    4f98:	add	x16, x16, #0x2e0
    4f9c:	br	x17

0000000000004fa0 <mpc_sin@plt>:
    4fa0:	adrp	x16, 29000 <mpfr_set_underflow>
    4fa4:	ldr	x17, [x16, #744]
    4fa8:	add	x16, x16, #0x2e8
    4fac:	br	x17

0000000000004fb0 <mpc_conj@plt>:
    4fb0:	adrp	x16, 29000 <mpfr_set_underflow>
    4fb4:	ldr	x17, [x16, #752]
    4fb8:	add	x16, x16, #0x2f0
    4fbc:	br	x17

0000000000004fc0 <mpfr_ui_div@plt>:
    4fc0:	adrp	x16, 29000 <mpfr_set_underflow>
    4fc4:	ldr	x17, [x16, #760]
    4fc8:	add	x16, x16, #0x2f8
    4fcc:	br	x17

0000000000004fd0 <mpfr_sinh@plt>:
    4fd0:	adrp	x16, 29000 <mpfr_set_underflow>
    4fd4:	ldr	x17, [x16, #768]
    4fd8:	add	x16, x16, #0x300
    4fdc:	br	x17

0000000000004fe0 <mpc_set_d_d@plt>:
    4fe0:	adrp	x16, 29000 <mpfr_set_underflow>
    4fe4:	ldr	x17, [x16, #776]
    4fe8:	add	x16, x16, #0x308
    4fec:	br	x17

0000000000004ff0 <__gmpz_add_ui@plt>:
    4ff0:	adrp	x16, 29000 <mpfr_set_underflow>
    4ff4:	ldr	x17, [x16, #784]
    4ff8:	add	x16, x16, #0x310
    4ffc:	br	x17

0000000000005000 <__gmpq_clear@plt>:
    5000:	adrp	x16, 29000 <mpfr_set_underflow>
    5004:	ldr	x17, [x16, #792]
    5008:	add	x16, x16, #0x318
    500c:	br	x17

0000000000005010 <__gmon_start__@plt>:
    5010:	adrp	x16, 29000 <mpfr_set_underflow>
    5014:	ldr	x17, [x16, #800]
    5018:	add	x16, x16, #0x320
    501c:	br	x17

0000000000005020 <mpfr_acos@plt>:
    5020:	adrp	x16, 29000 <mpfr_set_underflow>
    5024:	ldr	x17, [x16, #808]
    5028:	add	x16, x16, #0x328
    502c:	br	x17

0000000000005030 <mpfr_cmp_si_2exp@plt>:
    5030:	adrp	x16, 29000 <mpfr_set_underflow>
    5034:	ldr	x17, [x16, #816]
    5038:	add	x16, x16, #0x330
    503c:	br	x17

0000000000005040 <mpc_free_str@plt>:
    5040:	adrp	x16, 29000 <mpfr_set_underflow>
    5044:	ldr	x17, [x16, #824]
    5048:	add	x16, x16, #0x338
    504c:	br	x17

0000000000005050 <abort@plt>:
    5050:	adrp	x16, 29000 <mpfr_set_underflow>
    5054:	ldr	x17, [x16, #832]
    5058:	add	x16, x16, #0x340
    505c:	br	x17

0000000000005060 <mpfr_sqr@plt>:
    5060:	adrp	x16, 29000 <mpfr_set_underflow>
    5064:	ldr	x17, [x16, #840]
    5068:	add	x16, x16, #0x348
    506c:	br	x17

0000000000005070 <mpc_set_si@plt>:
    5070:	adrp	x16, 29000 <mpfr_set_underflow>
    5074:	ldr	x17, [x16, #848]
    5078:	add	x16, x16, #0x350
    507c:	br	x17

0000000000005080 <mpfr_div_2si@plt>:
    5080:	adrp	x16, 29000 <mpfr_set_underflow>
    5084:	ldr	x17, [x16, #856]
    5088:	add	x16, x16, #0x358
    508c:	br	x17

0000000000005090 <mpc_set_ui_ui@plt>:
    5090:	adrp	x16, 29000 <mpfr_set_underflow>
    5094:	ldr	x17, [x16, #864]
    5098:	add	x16, x16, #0x360
    509c:	br	x17

00000000000050a0 <mpfr_cos@plt>:
    50a0:	adrp	x16, 29000 <mpfr_set_underflow>
    50a4:	ldr	x17, [x16, #872]
    50a8:	add	x16, x16, #0x368
    50ac:	br	x17

00000000000050b0 <mpfr_get_emin@plt>:
    50b0:	adrp	x16, 29000 <mpfr_set_underflow>
    50b4:	ldr	x17, [x16, #880]
    50b8:	add	x16, x16, #0x370
    50bc:	br	x17

00000000000050c0 <mpc_acos@plt>:
    50c0:	adrp	x16, 29000 <mpfr_set_underflow>
    50c4:	ldr	x17, [x16, #888]
    50c8:	add	x16, x16, #0x378
    50cc:	br	x17

00000000000050d0 <mpfr_sin@plt>:
    50d0:	adrp	x16, 29000 <mpfr_set_underflow>
    50d4:	ldr	x17, [x16, #896]
    50d8:	add	x16, x16, #0x380
    50dc:	br	x17

00000000000050e0 <mpfr_swap@plt>:
    50e0:	adrp	x16, 29000 <mpfr_set_underflow>
    50e4:	ldr	x17, [x16, #904]
    50e8:	add	x16, x16, #0x388
    50ec:	br	x17

00000000000050f0 <mpc_set_z@plt>:
    50f0:	adrp	x16, 29000 <mpfr_set_underflow>
    50f4:	ldr	x17, [x16, #912]
    50f8:	add	x16, x16, #0x390
    50fc:	br	x17

0000000000005100 <__gmpz_ui_pow_ui@plt>:
    5100:	adrp	x16, 29000 <mpfr_set_underflow>
    5104:	ldr	x17, [x16, #920]
    5108:	add	x16, x16, #0x398
    510c:	br	x17

0000000000005110 <mpfr_get_str@plt>:
    5110:	adrp	x16, 29000 <mpfr_set_underflow>
    5114:	ldr	x17, [x16, #928]
    5118:	add	x16, x16, #0x3a0
    511c:	br	x17

0000000000005120 <mpc_fix_zero@plt>:
    5120:	adrp	x16, 29000 <mpfr_set_underflow>
    5124:	ldr	x17, [x16, #936]
    5128:	add	x16, x16, #0x3a8
    512c:	br	x17

0000000000005130 <mpfr_acosh@plt>:
    5130:	adrp	x16, 29000 <mpfr_set_underflow>
    5134:	ldr	x17, [x16, #944]
    5138:	add	x16, x16, #0x3b0
    513c:	br	x17

0000000000005140 <mpfr_sub_ui@plt>:
    5140:	adrp	x16, 29000 <mpfr_set_underflow>
    5144:	ldr	x17, [x16, #952]
    5148:	add	x16, x16, #0x3b8
    514c:	br	x17

0000000000005150 <__gmpq_set_ui@plt>:
    5150:	adrp	x16, 29000 <mpfr_set_underflow>
    5154:	ldr	x17, [x16, #960]
    5158:	add	x16, x16, #0x3c0
    515c:	br	x17

0000000000005160 <mpfr_get_ld@plt>:
    5160:	adrp	x16, 29000 <mpfr_set_underflow>
    5164:	ldr	x17, [x16, #968]
    5168:	add	x16, x16, #0x3c8
    516c:	br	x17

0000000000005170 <mpfr_set_inf@plt>:
    5170:	adrp	x16, 29000 <mpfr_set_underflow>
    5174:	ldr	x17, [x16, #976]
    5178:	add	x16, x16, #0x3d0
    517c:	br	x17

0000000000005180 <mpfr_set_ui_2exp@plt>:
    5180:	adrp	x16, 29000 <mpfr_set_underflow>
    5184:	ldr	x17, [x16, #984]
    5188:	add	x16, x16, #0x3d8
    518c:	br	x17

0000000000005190 <mpc_sin_cos@plt>:
    5190:	adrp	x16, 29000 <mpfr_set_underflow>
    5194:	ldr	x17, [x16, #992]
    5198:	add	x16, x16, #0x3e0
    519c:	br	x17

00000000000051a0 <mpfr_div@plt>:
    51a0:	adrp	x16, 29000 <mpfr_set_underflow>
    51a4:	ldr	x17, [x16, #1000]
    51a8:	add	x16, x16, #0x3e8
    51ac:	br	x17

00000000000051b0 <mpc_mul_fr@plt>:
    51b0:	adrp	x16, 29000 <mpfr_set_underflow>
    51b4:	ldr	x17, [x16, #1008]
    51b8:	add	x16, x16, #0x3f0
    51bc:	br	x17

00000000000051c0 <__ctype_b_loc@plt>:
    51c0:	adrp	x16, 29000 <mpfr_set_underflow>
    51c4:	ldr	x17, [x16, #1016]
    51c8:	add	x16, x16, #0x3f8
    51cc:	br	x17

00000000000051d0 <__gmpz_clear@plt>:
    51d0:	adrp	x16, 29000 <mpfr_set_underflow>
    51d4:	ldr	x17, [x16, #1024]
    51d8:	add	x16, x16, #0x400
    51dc:	br	x17

00000000000051e0 <__gmpfr_out_str@plt>:
    51e0:	adrp	x16, 29000 <mpfr_set_underflow>
    51e4:	ldr	x17, [x16, #1032]
    51e8:	add	x16, x16, #0x408
    51ec:	br	x17

00000000000051f0 <mpc_abs@plt>:
    51f0:	adrp	x16, 29000 <mpfr_set_underflow>
    51f4:	ldr	x17, [x16, #1040]
    51f8:	add	x16, x16, #0x410
    51fc:	br	x17

0000000000005200 <mpfr_atan@plt>:
    5200:	adrp	x16, 29000 <mpfr_set_underflow>
    5204:	ldr	x17, [x16, #1048]
    5208:	add	x16, x16, #0x418
    520c:	br	x17

0000000000005210 <mpfr_nexttoward@plt>:
    5210:	adrp	x16, 29000 <mpfr_set_underflow>
    5214:	ldr	x17, [x16, #1056]
    5218:	add	x16, x16, #0x420
    521c:	br	x17

0000000000005220 <mpfr_set4@plt>:
    5220:	adrp	x16, 29000 <mpfr_set_underflow>
    5224:	ldr	x17, [x16, #1064]
    5228:	add	x16, x16, #0x428
    522c:	br	x17

0000000000005230 <mpfr_log1p@plt>:
    5230:	adrp	x16, 29000 <mpfr_set_underflow>
    5234:	ldr	x17, [x16, #1072]
    5238:	add	x16, x16, #0x430
    523c:	br	x17

0000000000005240 <mpfr_sgn@plt>:
    5240:	adrp	x16, 29000 <mpfr_set_underflow>
    5244:	ldr	x17, [x16, #1080]
    5248:	add	x16, x16, #0x438
    524c:	br	x17

0000000000005250 <mpfr_get_emax@plt>:
    5250:	adrp	x16, 29000 <mpfr_set_underflow>
    5254:	ldr	x17, [x16, #1088]
    5258:	add	x16, x16, #0x440
    525c:	br	x17

0000000000005260 <ungetc@plt>:
    5260:	adrp	x16, 29000 <mpfr_set_underflow>
    5264:	ldr	x17, [x16, #1096]
    5268:	add	x16, x16, #0x448
    526c:	br	x17

0000000000005270 <__gmpz_tdiv_q_2exp@plt>:
    5270:	adrp	x16, 29000 <mpfr_set_underflow>
    5274:	ldr	x17, [x16, #1104]
    5278:	add	x16, x16, #0x450
    527c:	br	x17

0000000000005280 <mpfr_exp@plt>:
    5280:	adrp	x16, 29000 <mpfr_set_underflow>
    5284:	ldr	x17, [x16, #1112]
    5288:	add	x16, x16, #0x458
    528c:	br	x17

0000000000005290 <mpc_pow@plt>:
    5290:	adrp	x16, 29000 <mpfr_set_underflow>
    5294:	ldr	x17, [x16, #1120]
    5298:	add	x16, x16, #0x460
    529c:	br	x17

00000000000052a0 <mpc_div@plt>:
    52a0:	adrp	x16, 29000 <mpfr_set_underflow>
    52a4:	ldr	x17, [x16, #1128]
    52a8:	add	x16, x16, #0x468
    52ac:	br	x17

00000000000052b0 <mpfr_add_si@plt>:
    52b0:	adrp	x16, 29000 <mpfr_set_underflow>
    52b4:	ldr	x17, [x16, #1136]
    52b8:	add	x16, x16, #0x470
    52bc:	br	x17

00000000000052c0 <mpfr_set_si@plt>:
    52c0:	adrp	x16, 29000 <mpfr_set_underflow>
    52c4:	ldr	x17, [x16, #1144]
    52c8:	add	x16, x16, #0x478
    52cc:	br	x17

00000000000052d0 <mpfr_sqrt_ui@plt>:
    52d0:	adrp	x16, 29000 <mpfr_set_underflow>
    52d4:	ldr	x17, [x16, #1152]
    52d8:	add	x16, x16, #0x480
    52dc:	br	x17

00000000000052e0 <mpfr_set_q@plt>:
    52e0:	adrp	x16, 29000 <mpfr_set_underflow>
    52e4:	ldr	x17, [x16, #1160]
    52e8:	add	x16, x16, #0x488
    52ec:	br	x17

00000000000052f0 <mpc_exp@plt>:
    52f0:	adrp	x16, 29000 <mpfr_set_underflow>
    52f4:	ldr	x17, [x16, #1168]
    52f8:	add	x16, x16, #0x490
    52fc:	br	x17

0000000000005300 <__gmpq_init@plt>:
    5300:	adrp	x16, 29000 <mpfr_set_underflow>
    5304:	ldr	x17, [x16, #1176]
    5308:	add	x16, x16, #0x498
    530c:	br	x17

0000000000005310 <mpc_set_si_si@plt>:
    5310:	adrp	x16, 29000 <mpfr_set_underflow>
    5314:	ldr	x17, [x16, #1184]
    5318:	add	x16, x16, #0x4a0
    531c:	br	x17

0000000000005320 <__gmpz_submul@plt>:
    5320:	adrp	x16, 29000 <mpfr_set_underflow>
    5324:	ldr	x17, [x16, #1192]
    5328:	add	x16, x16, #0x4a8
    532c:	br	x17

0000000000005330 <mpfr_free_str@plt>:
    5330:	adrp	x16, 29000 <mpfr_set_underflow>
    5334:	ldr	x17, [x16, #1200]
    5338:	add	x16, x16, #0x4b0
    533c:	br	x17

0000000000005340 <mpfr_underflow_p@plt>:
    5340:	adrp	x16, 29000 <mpfr_set_underflow>
    5344:	ldr	x17, [x16, #1208]
    5348:	add	x16, x16, #0x4b8
    534c:	br	x17

0000000000005350 <__gmpz_cmp@plt>:
    5350:	adrp	x16, 29000 <mpfr_set_underflow>
    5354:	ldr	x17, [x16, #1216]
    5358:	add	x16, x16, #0x4c0
    535c:	br	x17

0000000000005360 <mpc_cmp_si_si@plt>:
    5360:	adrp	x16, 29000 <mpfr_set_underflow>
    5364:	ldr	x17, [x16, #1224]
    5368:	add	x16, x16, #0x4c8
    536c:	br	x17

0000000000005370 <mpfr_div_2ui@plt>:
    5370:	adrp	x16, 29000 <mpfr_set_underflow>
    5374:	ldr	x17, [x16, #1232]
    5378:	add	x16, x16, #0x4d0
    537c:	br	x17

0000000000005380 <mpc_realloc_str@plt>:
    5380:	adrp	x16, 29000 <mpfr_set_underflow>
    5384:	ldr	x17, [x16, #1240]
    5388:	add	x16, x16, #0x4d8
    538c:	br	x17

0000000000005390 <strcpy@plt>:
    5390:	adrp	x16, 29000 <mpfr_set_underflow>
    5394:	ldr	x17, [x16, #1248]
    5398:	add	x16, x16, #0x4e0
    539c:	br	x17

00000000000053a0 <mpfr_sqrt@plt>:
    53a0:	adrp	x16, 29000 <mpfr_set_underflow>
    53a4:	ldr	x17, [x16, #1256]
    53a8:	add	x16, x16, #0x4e8
    53ac:	br	x17

00000000000053b0 <mpfr_mul_si@plt>:
    53b0:	adrp	x16, 29000 <mpfr_set_underflow>
    53b4:	ldr	x17, [x16, #1264]
    53b8:	add	x16, x16, #0x4f0
    53bc:	br	x17

00000000000053c0 <mpfr_prec_round@plt>:
    53c0:	adrp	x16, 29000 <mpfr_set_underflow>
    53c4:	ldr	x17, [x16, #1272]
    53c8:	add	x16, x16, #0x4f8
    53cc:	br	x17

00000000000053d0 <mpc_set_str@plt>:
    53d0:	adrp	x16, 29000 <mpfr_set_underflow>
    53d4:	ldr	x17, [x16, #1280]
    53d8:	add	x16, x16, #0x500
    53dc:	br	x17

00000000000053e0 <mpfr_min_prec@plt>:
    53e0:	adrp	x16, 29000 <mpfr_set_underflow>
    53e4:	ldr	x17, [x16, #1288]
    53e8:	add	x16, x16, #0x508
    53ec:	br	x17

00000000000053f0 <mpfr_cmp3@plt>:
    53f0:	adrp	x16, 29000 <mpfr_set_underflow>
    53f4:	ldr	x17, [x16, #1296]
    53f8:	add	x16, x16, #0x510
    53fc:	br	x17

0000000000005400 <mpfr_cmpabs@plt>:
    5400:	adrp	x16, 29000 <mpfr_set_underflow>
    5404:	ldr	x17, [x16, #1304]
    5408:	add	x16, x16, #0x518
    540c:	br	x17

0000000000005410 <mpc_init3@plt>:
    5410:	adrp	x16, 29000 <mpfr_set_underflow>
    5414:	ldr	x17, [x16, #1312]
    5418:	add	x16, x16, #0x520
    541c:	br	x17

0000000000005420 <__gmpz_add@plt>:
    5420:	adrp	x16, 29000 <mpfr_set_underflow>
    5424:	ldr	x17, [x16, #1320]
    5428:	add	x16, x16, #0x528
    542c:	br	x17

0000000000005430 <mpc_cos@plt>:
    5430:	adrp	x16, 29000 <mpfr_set_underflow>
    5434:	ldr	x17, [x16, #1328]
    5438:	add	x16, x16, #0x530
    543c:	br	x17

0000000000005440 <set_pi_over_2@plt>:
    5440:	adrp	x16, 29000 <mpfr_set_underflow>
    5444:	ldr	x17, [x16, #1336]
    5448:	add	x16, x16, #0x538
    544c:	br	x17

0000000000005450 <__gmpfr_set_uj@plt>:
    5450:	adrp	x16, 29000 <mpfr_set_underflow>
    5454:	ldr	x17, [x16, #1344]
    5458:	add	x16, x16, #0x540
    545c:	br	x17

0000000000005460 <mpc_atan@plt>:
    5460:	adrp	x16, 29000 <mpfr_set_underflow>
    5464:	ldr	x17, [x16, #1352]
    5468:	add	x16, x16, #0x548
    546c:	br	x17

0000000000005470 <__gmpn_perfect_square_p@plt>:
    5470:	adrp	x16, 29000 <mpfr_set_underflow>
    5474:	ldr	x17, [x16, #1360]
    5478:	add	x16, x16, #0x550
    547c:	br	x17

0000000000005480 <mpfr_ui_sub@plt>:
    5480:	adrp	x16, 29000 <mpfr_set_underflow>
    5484:	ldr	x17, [x16, #1368]
    5488:	add	x16, x16, #0x558
    548c:	br	x17

0000000000005490 <mpfr_init2@plt>:
    5490:	adrp	x16, 29000 <mpfr_set_underflow>
    5494:	ldr	x17, [x16, #1376]
    5498:	add	x16, x16, #0x560
    549c:	br	x17

00000000000054a0 <mpfr_can_round@plt>:
    54a0:	adrp	x16, 29000 <mpfr_set_underflow>
    54a4:	ldr	x17, [x16, #1384]
    54a8:	add	x16, x16, #0x568
    54ac:	br	x17

00000000000054b0 <mpc_set_d@plt>:
    54b0:	adrp	x16, 29000 <mpfr_set_underflow>
    54b4:	ldr	x17, [x16, #1392]
    54b8:	add	x16, x16, #0x570
    54bc:	br	x17

00000000000054c0 <mpfr_get_z_2exp@plt>:
    54c0:	adrp	x16, 29000 <mpfr_set_underflow>
    54c4:	ldr	x17, [x16, #1400]
    54c8:	add	x16, x16, #0x578
    54cc:	br	x17

00000000000054d0 <mpc_asin@plt>:
    54d0:	adrp	x16, 29000 <mpfr_set_underflow>
    54d4:	ldr	x17, [x16, #1408]
    54d8:	add	x16, x16, #0x580
    54dc:	br	x17

00000000000054e0 <mpfr_set_overflow@plt>:
    54e0:	adrp	x16, 29000 <mpfr_set_underflow>
    54e4:	ldr	x17, [x16, #1416]
    54e8:	add	x16, x16, #0x588
    54ec:	br	x17

00000000000054f0 <__gmpz_init@plt>:
    54f0:	adrp	x16, 29000 <mpfr_set_underflow>
    54f4:	ldr	x17, [x16, #1424]
    54f8:	add	x16, x16, #0x590
    54fc:	br	x17

0000000000005500 <__gmpz_sizeinbase@plt>:
    5500:	adrp	x16, 29000 <mpfr_set_underflow>
    5504:	ldr	x17, [x16, #1432]
    5508:	add	x16, x16, #0x598
    550c:	br	x17

0000000000005510 <__gmpz_set_si@plt>:
    5510:	adrp	x16, 29000 <mpfr_set_underflow>
    5514:	ldr	x17, [x16, #1440]
    5518:	add	x16, x16, #0x5a0
    551c:	br	x17

0000000000005520 <mpfr_number_p@plt>:
    5520:	adrp	x16, 29000 <mpfr_set_underflow>
    5524:	ldr	x17, [x16, #1448]
    5528:	add	x16, x16, #0x5a8
    552c:	br	x17

0000000000005530 <mpfr_overflow_p@plt>:
    5530:	adrp	x16, 29000 <mpfr_set_underflow>
    5534:	ldr	x17, [x16, #1456]
    5538:	add	x16, x16, #0x5b0
    553c:	br	x17

0000000000005540 <mpc_set_fr_fr@plt>:
    5540:	adrp	x16, 29000 <mpfr_set_underflow>
    5544:	ldr	x17, [x16, #1464]
    5548:	add	x16, x16, #0x5b8
    554c:	br	x17

0000000000005550 <mpfr_urandomb@plt>:
    5550:	adrp	x16, 29000 <mpfr_set_underflow>
    5554:	ldr	x17, [x16, #1472]
    5558:	add	x16, x16, #0x5c0
    555c:	br	x17

0000000000005560 <mpfr_set_ui@plt>:
    5560:	adrp	x16, 29000 <mpfr_set_underflow>
    5564:	ldr	x17, [x16, #1480]
    5568:	add	x16, x16, #0x5c8
    556c:	br	x17

0000000000005570 <mpfr_sin_cos@plt>:
    5570:	adrp	x16, 29000 <mpfr_set_underflow>
    5574:	ldr	x17, [x16, #1488]
    5578:	add	x16, x16, #0x5d0
    557c:	br	x17

0000000000005580 <mpc_div_2ui@plt>:
    5580:	adrp	x16, 29000 <mpfr_set_underflow>
    5584:	ldr	x17, [x16, #1496]
    5588:	add	x16, x16, #0x5d8
    558c:	br	x17

0000000000005590 <mpfr_inits2@plt>:
    5590:	adrp	x16, 29000 <mpfr_set_underflow>
    5594:	ldr	x17, [x16, #1504]
    5598:	add	x16, x16, #0x5e0
    559c:	br	x17

00000000000055a0 <mpfr_div_ui@plt>:
    55a0:	adrp	x16, 29000 <mpfr_set_underflow>
    55a4:	ldr	x17, [x16, #1512]
    55a8:	add	x16, x16, #0x5e8
    55ac:	br	x17

00000000000055b0 <mpc_fma_naive@plt>:
    55b0:	adrp	x16, 29000 <mpfr_set_underflow>
    55b4:	ldr	x17, [x16, #1520]
    55b8:	add	x16, x16, #0x5f0
    55bc:	br	x17

00000000000055c0 <__gmpq_mul_2exp@plt>:
    55c0:	adrp	x16, 29000 <mpfr_set_underflow>
    55c4:	ldr	x17, [x16, #1528]
    55c8:	add	x16, x16, #0x5f8
    55cc:	br	x17

00000000000055d0 <mpc_set@plt>:
    55d0:	adrp	x16, 29000 <mpfr_set_underflow>
    55d4:	ldr	x17, [x16, #1536]
    55d8:	add	x16, x16, #0x600
    55dc:	br	x17

00000000000055e0 <mpfr_hypot@plt>:
    55e0:	adrp	x16, 29000 <mpfr_set_underflow>
    55e4:	ldr	x17, [x16, #1544]
    55e8:	add	x16, x16, #0x608
    55ec:	br	x17

00000000000055f0 <fprintf@plt>:
    55f0:	adrp	x16, 29000 <mpfr_set_underflow>
    55f4:	ldr	x17, [x16, #1552]
    55f8:	add	x16, x16, #0x610
    55fc:	br	x17

0000000000005600 <mpc_ui_div@plt>:
    5600:	adrp	x16, 29000 <mpfr_set_underflow>
    5604:	ldr	x17, [x16, #1560]
    5608:	add	x16, x16, #0x618
    560c:	br	x17

0000000000005610 <mpfr_get_emin_min@plt>:
    5610:	adrp	x16, 29000 <mpfr_set_underflow>
    5614:	ldr	x17, [x16, #1568]
    5618:	add	x16, x16, #0x620
    561c:	br	x17

Disassembly of section .text:

0000000000005620 <mpc_abs@@Base-0xd8>:
    5620:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    5624:	ldr	x0, [x0, #4048]
    5628:	cbz	x0, 5630 <mpfr_get_emin_min@plt+0x20>
    562c:	b	5010 <__gmon_start__@plt>
    5630:	ret
    5634:	nop
    5638:	adrp	x0, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    563c:	add	x0, x0, #0x630
    5640:	adrp	x1, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    5644:	add	x1, x1, #0x630
    5648:	cmp	x1, x0
    564c:	b.eq	5664 <mpfr_get_emin_min@plt+0x54>  // b.none
    5650:	adrp	x1, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    5654:	ldr	x1, [x1, #3992]
    5658:	cbz	x1, 5664 <mpfr_get_emin_min@plt+0x54>
    565c:	mov	x16, x1
    5660:	br	x16
    5664:	ret
    5668:	adrp	x0, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    566c:	add	x0, x0, #0x630
    5670:	adrp	x1, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    5674:	add	x1, x1, #0x630
    5678:	sub	x1, x1, x0
    567c:	lsr	x2, x1, #63
    5680:	add	x1, x2, x1, asr #3
    5684:	cmp	xzr, x1, asr #1
    5688:	asr	x1, x1, #1
    568c:	b.eq	56a4 <mpfr_get_emin_min@plt+0x94>  // b.none
    5690:	adrp	x2, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    5694:	ldr	x2, [x2, #4064]
    5698:	cbz	x2, 56a4 <mpfr_get_emin_min@plt+0x94>
    569c:	mov	x16, x2
    56a0:	br	x16
    56a4:	ret
    56a8:	stp	x29, x30, [sp, #-32]!
    56ac:	mov	x29, sp
    56b0:	str	x19, [sp, #16]
    56b4:	adrp	x19, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    56b8:	ldrb	w0, [x19, #1584]
    56bc:	cbnz	w0, 56e4 <mpfr_get_emin_min@plt+0xd4>
    56c0:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    56c4:	ldr	x0, [x0, #4000]
    56c8:	cbz	x0, 56d8 <mpfr_get_emin_min@plt+0xc8>
    56cc:	adrp	x0, 29000 <mpc_ui_ui_sub@@Base+0x15148>
    56d0:	ldr	x0, [x0, #1576]
    56d4:	bl	4b60 <__cxa_finalize@plt>
    56d8:	bl	5638 <mpfr_get_emin_min@plt+0x28>
    56dc:	mov	w0, #0x1                   	// #1
    56e0:	strb	w0, [x19, #1584]
    56e4:	ldr	x19, [sp, #16]
    56e8:	ldp	x29, x30, [sp], #32
    56ec:	ret
    56f0:	b	5668 <mpfr_get_emin_min@plt+0x58>
    56f4:	nop

00000000000056f8 <mpc_abs@@Base>:
    56f8:	mov	w3, w2
    56fc:	add	x2, x1, #0x20
    5700:	b	55e0 <mpfr_hypot@plt>
    5704:	nop

0000000000005708 <mpc_acos@@Base>:
    5708:	stp	x29, x30, [sp, #-224]!
    570c:	mov	x29, sp
    5710:	stp	x21, x22, [sp, #32]
    5714:	mov	x21, x1
    5718:	ldr	x1, [x1, #16]
    571c:	stp	x19, x20, [sp, #16]
    5720:	mov	x19, #0x2                   	// #2
    5724:	str	w2, [sp, #104]
    5728:	movk	x19, #0x8000, lsl #48
    572c:	str	x0, [sp, #120]
    5730:	cmp	x1, x19
    5734:	ldr	x20, [x21, #48]
    5738:	b.eq	58fc <mpc_acos@@Base+0x1f4>  // b.none
    573c:	cmp	x20, x19
    5740:	b.eq	5938 <mpc_acos@@Base+0x230>  // b.none
    5744:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
    5748:	cmp	x1, x22
    574c:	ccmp	x20, x22, #0x4, ne  // ne = any
    5750:	b.eq	58a8 <mpc_acos@@Base+0x1a0>  // b.none
    5754:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    5758:	cmp	x20, x2
    575c:	b.eq	5c20 <mpc_acos@@Base+0x518>  // b.none
    5760:	cmp	x1, x2
    5764:	ldr	w1, [sp, #104]
    5768:	stp	x23, x24, [sp, #48]
    576c:	asr	w23, w1, #4
    5770:	b.eq	5b78 <mpc_acos@@Base+0x470>  // b.none
    5774:	ldr	x0, [sp, #120]
    5778:	add	x20, sp, #0xa0
    577c:	stp	x25, x26, [sp, #64]
    5780:	ldr	x2, [x0, #32]
    5784:	stp	x27, x28, [sp, #80]
    5788:	ldr	x0, [x0]
    578c:	mov	x1, x0
    5790:	mov	x0, x20
    5794:	str	x1, [sp, #112]
    5798:	bl	5410 <mpc_init3@plt>
    579c:	cmp	w23, #0x1
    57a0:	b.eq	59cc <mpc_acos@@Base+0x2c4>  // b.none
    57a4:	cmp	w23, #0x2
    57a8:	mov	w27, #0x30                  	// #48
    57ac:	b.eq	57c4 <mpc_acos@@Base+0xbc>  // b.none
    57b0:	ldr	w0, [sp, #104]
    57b4:	cmp	w23, #0x3
    57b8:	and	w27, w0, #0xfffffff0
    57bc:	mov	w0, #0x20                  	// #32
    57c0:	csel	w27, w27, w0, ne  // ne = any
    57c4:	ldr	x1, [sp, #112]
    57c8:	add	x22, sp, #0x80
    57cc:	mov	x0, x22
    57d0:	mov	w23, #0x0                   	// #0
    57d4:	mov	x19, x1
    57d8:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
    57dc:	mov	x28, #0x8000000000000001    	// #-9223372036854775807
    57e0:	bl	5490 <mpfr_init2@plt>
    57e4:	nop
    57e8:	add	w23, w23, #0x1
    57ec:	cmp	w23, #0x2
    57f0:	b.gt	5ed0 <mpc_acos@@Base+0x7c8>
    57f4:	mov	x0, x19
    57f8:	bl	4d70 <mpc_ceil_log2@plt>
    57fc:	add	x0, x0, #0x3
    5800:	add	x19, x19, x0
    5804:	mov	x0, x20
    5808:	mov	x1, x19
    580c:	bl	4cd0 <mpfr_set_prec@plt>
    5810:	mov	x1, x19
    5814:	mov	x0, x22
    5818:	bl	4cd0 <mpfr_set_prec@plt>
    581c:	mov	w2, #0x0                   	// #0
    5820:	mov	w1, #0x1                   	// #1
    5824:	mov	x0, x22
    5828:	bl	5440 <set_pi_over_2@plt>
    582c:	mov	x1, x21
    5830:	mov	w2, w27
    5834:	mov	x0, x20
    5838:	bl	54d0 <mpc_asin@plt>
    583c:	ldr	x1, [sp, #208]
    5840:	cmp	x1, x25
    5844:	b.ge	59f4 <mpc_acos@@Base+0x2ec>  // b.tcont
    5848:	mov	x0, #0x2                   	// #2
    584c:	movk	x0, #0x8000, lsl #48
    5850:	cmp	x1, x0
    5854:	b.eq	5b08 <mpc_acos@@Base+0x400>  // b.none
    5858:	ldr	x2, [x21, #48]
    585c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    5860:	cmp	x2, x0
    5864:	b.ge	5878 <mpc_acos@@Base+0x170>  // b.tcont
    5868:	mov	x0, #0x2                   	// #2
    586c:	movk	x0, #0x8000, lsl #48
    5870:	cmp	x2, x0
    5874:	b.eq	5b10 <mpc_acos@@Base+0x408>  // b.none
    5878:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    587c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    5880:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    5884:	add	x4, x4, #0x2d0
    5888:	ldr	x0, [x0, #4008]
    588c:	add	x2, x2, #0x310
    5890:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    5894:	add	x1, x1, #0x318
    5898:	mov	w3, #0xca                  	// #202
    589c:	ldr	x0, [x0]
    58a0:	bl	55f0 <fprintf@plt>
    58a4:	bl	5050 <abort@plt>
    58a8:	ldr	x2, [sp, #120]
    58ac:	cmp	x1, x22
    58b0:	add	x22, x2, #0x20
    58b4:	b.ne	5980 <mpc_acos@@Base+0x278>  // b.any
    58b8:	cmp	x20, x1
    58bc:	ldr	w1, [x21, #8]
    58c0:	b.eq	5cb0 <mpc_acos@@Base+0x5a8>  // b.none
    58c4:	cmp	w1, #0x0
    58c8:	b.le	5cf0 <mpc_acos@@Base+0x5e8>
    58cc:	ldr	x2, [sp, #120]
    58d0:	mov	w1, #0x1                   	// #1
    58d4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    58d8:	str	w1, [x2, #8]
    58dc:	str	x0, [x2, #16]
    58e0:	ldr	w0, [x21, #40]
    58e4:	tbnz	w0, #31, 5c10 <mpc_acos@@Base+0x508>
    58e8:	mov	x0, x22
    58ec:	mov	w1, #0xffffffff            	// #-1
    58f0:	mov	w19, #0x0                   	// #0
    58f4:	bl	5170 <mpfr_set_inf@plt>
    58f8:	b	596c <mpc_acos@@Base+0x264>
    58fc:	ldr	x1, [sp, #120]
    5900:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    5904:	cmp	x20, x0
    5908:	add	x22, x1, #0x20
    590c:	b.eq	5948 <mpc_acos@@Base+0x240>  // b.none
    5910:	ldr	x0, [sp, #120]
    5914:	mov	w19, #0x0                   	// #0
    5918:	bl	4a80 <mpfr_set_nan@plt>
    591c:	mov	x0, x22
    5920:	bl	4a80 <mpfr_set_nan@plt>
    5924:	mov	w0, w19
    5928:	ldp	x19, x20, [sp, #16]
    592c:	ldp	x21, x22, [sp, #32]
    5930:	ldp	x29, x30, [sp], #224
    5934:	ret
    5938:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    593c:	add	x22, x0, #0x20
    5940:	cmp	x1, x2
    5944:	b.ne	5b18 <mpc_acos@@Base+0x410>  // b.any
    5948:	ldr	w2, [x21, #40]
    594c:	mov	x0, x22
    5950:	mov	w1, #0xffffffff            	// #-1
    5954:	mov	w19, #0x0                   	// #0
    5958:	cmp	w2, #0x0
    595c:	cneg	w1, w1, lt  // lt = tstop
    5960:	bl	5170 <mpfr_set_inf@plt>
    5964:	ldr	x0, [sp, #120]
    5968:	bl	4a80 <mpfr_set_nan@plt>
    596c:	mov	w0, w19
    5970:	ldp	x19, x20, [sp, #16]
    5974:	ldp	x21, x22, [sp, #32]
    5978:	ldp	x29, x30, [sp], #224
    597c:	ret
    5980:	ldr	w1, [sp, #104]
    5984:	and	w2, w1, #0xf
    5988:	mov	w1, #0x1                   	// #1
    598c:	bl	5440 <set_pi_over_2@plt>
    5990:	mov	w19, w0
    5994:	ldr	w2, [x21, #40]
    5998:	mov	x0, x22
    599c:	mov	w1, #0xffffffff            	// #-1
    59a0:	cmp	w2, #0x0
    59a4:	cneg	w1, w1, lt  // lt = tstop
    59a8:	bl	5170 <mpfr_set_inf@plt>
    59ac:	cmp	w19, #0x0
    59b0:	b.ge	59ec <mpc_acos@@Base+0x2e4>  // b.tcont
    59b4:	mov	w19, #0x2                   	// #2
    59b8:	mov	w0, w19
    59bc:	ldp	x19, x20, [sp, #16]
    59c0:	ldp	x21, x22, [sp, #32]
    59c4:	ldp	x29, x30, [sp], #224
    59c8:	ret
    59cc:	ldr	x0, [x21, #48]
    59d0:	cmp	x0, x22
    59d4:	b.ge	5bf0 <mpc_acos@@Base+0x4e8>  // b.tcont
    59d8:	cmp	x0, x19
    59dc:	mov	w27, #0x20                  	// #32
    59e0:	b.ne	57c4 <mpc_acos@@Base+0xbc>  // b.any
    59e4:	bl	4b40 <mpfr_set_erangeflag@plt>
    59e8:	b	57c4 <mpc_acos@@Base+0xbc>
    59ec:	cset	w19, ne  // ne = any
    59f0:	b	596c <mpc_acos@@Base+0x264>
    59f4:	ldr	x2, [x21, #48]
    59f8:	ldr	w1, [sp, #200]
    59fc:	cmp	x2, x25
    5a00:	b.lt	5868 <mpc_acos@@Base+0x160>  // b.tstop
    5a04:	ldr	w2, [x21, #40]
    5a08:	mul	w1, w1, w2
    5a0c:	cmp	w1, #0x0
    5a10:	b.le	5878 <mpc_acos@@Base+0x170>
    5a14:	asr	w0, w0, #2
    5a18:	mov	w24, #0xffffffff            	// #-1
    5a1c:	cmp	w0, #0x2
    5a20:	b.eq	5a2c <mpc_acos@@Base+0x324>  // b.none
    5a24:	cmp	w0, #0x0
    5a28:	cset	w24, ne  // ne = any
    5a2c:	mov	x2, x20
    5a30:	mov	x1, x22
    5a34:	mov	x0, x20
    5a38:	mov	w3, #0x0                   	// #0
    5a3c:	ldr	x26, [sp, #176]
    5a40:	bl	4aa0 <mpfr_sub@plt>
    5a44:	ldr	x5, [sp, #176]
    5a48:	cmp	x5, x28
    5a4c:	b.eq	57e8 <mpc_acos@@Base+0xe0>  // b.none
    5a50:	cmp	x26, #0x1
    5a54:	mov	x0, #0x2                   	// #2
    5a58:	csinc	x4, x0, x26, le
    5a5c:	add	x1, x20, #0x20
    5a60:	sub	x26, x4, x5
    5a64:	mov	x0, x1
    5a68:	mov	w2, #0x0                   	// #0
    5a6c:	bl	4bc0 <mpfr_neg@plt>
    5a70:	ldr	x0, [sp, #104]
    5a74:	mov	w3, #0x1                   	// #1
    5a78:	mov	w2, #0x0                   	// #0
    5a7c:	tst	x0, #0xf
    5a80:	ldr	x0, [sp, #112]
    5a84:	cinc	x4, x0, eq  // eq = none
    5a88:	cmp	x26, #0x0
    5a8c:	csel	x1, x26, xzr, ge  // ge = tcont
    5a90:	mov	x0, x20
    5a94:	sub	x1, x19, x1
    5a98:	bl	54a0 <mpfr_can_round@plt>
    5a9c:	cbz	w0, 57e8 <mpc_acos@@Base+0xe0>
    5aa0:	ldr	w2, [sp, #104]
    5aa4:	mov	x1, x20
    5aa8:	ldr	x0, [sp, #120]
    5aac:	bl	55d0 <mpc_set@plt>
    5ab0:	and	w19, w0, #0x3
    5ab4:	cmp	w19, #0x2
    5ab8:	b.eq	5b64 <mpc_acos@@Base+0x45c>  // b.none
    5abc:	cmp	w19, #0x0
    5ac0:	mov	x0, x20
    5ac4:	cset	w19, ne  // ne = any
    5ac8:	bl	4a50 <mpc_clear@plt>
    5acc:	mov	x0, x22
    5ad0:	bl	4db0 <mpfr_clear@plt>
    5ad4:	cmp	w24, #0x1
    5ad8:	b.eq	5b50 <mpc_acos@@Base+0x448>  // b.none
    5adc:	cmp	w24, #0x0
    5ae0:	orr	w0, w19, #0x4
    5ae4:	csel	w19, w0, w19, ne  // ne = any
    5ae8:	mov	w0, w19
    5aec:	ldp	x19, x20, [sp, #16]
    5af0:	ldp	x21, x22, [sp, #32]
    5af4:	ldp	x23, x24, [sp, #48]
    5af8:	ldp	x25, x26, [sp, #64]
    5afc:	ldp	x27, x28, [sp, #80]
    5b00:	ldp	x29, x30, [sp], #224
    5b04:	ret
    5b08:	bl	4b40 <mpfr_set_erangeflag@plt>
    5b0c:	b	5858 <mpc_acos@@Base+0x150>
    5b10:	bl	4b40 <mpfr_set_erangeflag@plt>
    5b14:	b	5878 <mpc_acos@@Base+0x170>
    5b18:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    5b1c:	cmp	x1, x2
    5b20:	b.ne	5910 <mpc_acos@@Base+0x208>  // b.any
    5b24:	ldr	w1, [sp, #104]
    5b28:	and	w2, w1, #0xf
    5b2c:	mov	w1, #0x1                   	// #1
    5b30:	bl	5440 <set_pi_over_2@plt>
    5b34:	mov	w20, w0
    5b38:	mov	x0, x22
    5b3c:	bl	4a80 <mpfr_set_nan@plt>
    5b40:	cmp	w20, #0x0
    5b44:	cset	w19, ne  // ne = any
    5b48:	tbz	w20, #31, 596c <mpc_acos@@Base+0x264>
    5b4c:	b	59b4 <mpc_acos@@Base+0x2ac>
    5b50:	orr	w19, w19, #0x8
    5b54:	ldp	x23, x24, [sp, #48]
    5b58:	ldp	x25, x26, [sp, #64]
    5b5c:	ldp	x27, x28, [sp, #80]
    5b60:	b	596c <mpc_acos@@Base+0x264>
    5b64:	mov	x0, x20
    5b68:	bl	4a50 <mpc_clear@plt>
    5b6c:	mov	x0, x22
    5b70:	bl	4db0 <mpfr_clear@plt>
    5b74:	b	5ad4 <mpc_acos@@Base+0x3cc>
    5b78:	and	w2, w1, #0xf
    5b7c:	mov	w1, #0x1                   	// #1
    5b80:	bl	5440 <set_pi_over_2@plt>
    5b84:	mov	w22, w0
    5b88:	ldr	x0, [sp, #120]
    5b8c:	add	x1, x21, #0x20
    5b90:	cmp	w23, #0x2
    5b94:	add	x0, x0, #0x20
    5b98:	b.eq	5c08 <mpc_acos@@Base+0x500>  // b.none
    5b9c:	cmp	w23, #0x3
    5ba0:	mov	w2, #0x2                   	// #2
    5ba4:	csel	w23, w23, w2, ne  // ne = any
    5ba8:	mov	w2, w23
    5bac:	bl	4e10 <mpfr_asinh@plt>
    5bb0:	ldr	x1, [sp, #120]
    5bb4:	mov	w20, w0
    5bb8:	mov	w2, #0x0                   	// #0
    5bbc:	mov	x0, x1
    5bc0:	bl	4fb0 <mpc_conj@plt>
    5bc4:	cmp	w22, #0x0
    5bc8:	mov	w0, #0x2                   	// #2
    5bcc:	cset	w19, ne  // ne = any
    5bd0:	csel	w19, w19, w0, ge  // ge = tcont
    5bd4:	cmp	w20, #0x0
    5bd8:	orr	w0, w19, #0x4
    5bdc:	csel	w0, w0, w19, ne  // ne = any
    5be0:	orr	w19, w19, #0x8
    5be4:	csel	w19, w0, w19, le
    5be8:	ldp	x23, x24, [sp, #48]
    5bec:	b	596c <mpc_acos@@Base+0x264>
    5bf0:	ldr	w1, [x21, #40]
    5bf4:	mov	w27, #0x20                  	// #32
    5bf8:	mov	w0, #0x30                  	// #48
    5bfc:	cmp	w1, #0x0
    5c00:	csel	w27, w27, w0, le
    5c04:	b	57c4 <mpc_acos@@Base+0xbc>
    5c08:	mov	w23, #0x3                   	// #3
    5c0c:	b	5ba8 <mpc_acos@@Base+0x4a0>
    5c10:	mov	x0, x22
    5c14:	mov	w19, #0x0                   	// #0
    5c18:	bl	5170 <mpfr_set_inf@plt>
    5c1c:	b	596c <mpc_acos@@Base+0x264>
    5c20:	ldr	w19, [x21, #40]
    5c24:	mov	x0, x21
    5c28:	mov	x2, #0x0                   	// #0
    5c2c:	mov	x1, #0x1                   	// #1
    5c30:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    5c34:	cmp	w0, #0x0
    5c38:	b.le	5dac <mpc_acos@@Base+0x6a4>
    5c3c:	ldr	w0, [sp, #104]
    5c40:	asr	w2, w0, #4
    5c44:	ldr	x0, [sp, #120]
    5c48:	add	x0, x0, #0x20
    5c4c:	tbnz	w19, #31, 5e24 <mpc_acos@@Base+0x71c>
    5c50:	cmp	w2, #0x2
    5c54:	b.eq	5e48 <mpc_acos@@Base+0x740>  // b.none
    5c58:	cmp	w2, #0x3
    5c5c:	mov	w1, #0x2                   	// #2
    5c60:	csel	w2, w2, w1, ne  // ne = any
    5c64:	mov	x1, x21
    5c68:	bl	5130 <mpfr_acosh@plt>
    5c6c:	ldr	x3, [sp, #120]
    5c70:	mov	w2, #0x1                   	// #1
    5c74:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    5c78:	neg	w21, w0
    5c7c:	mov	w19, #0x0                   	// #0
    5c80:	mov	x0, x3
    5c84:	str	w2, [x3, #8]
    5c88:	mov	w2, #0x0                   	// #0
    5c8c:	str	x1, [x3, #16]
    5c90:	mov	x1, x3
    5c94:	bl	4fb0 <mpc_conj@plt>
    5c98:	cmp	w21, #0x0
    5c9c:	orr	w0, w19, #0x4
    5ca0:	csel	w0, w0, w19, ne  // ne = any
    5ca4:	orr	w19, w19, #0x8
    5ca8:	csel	w19, w0, w19, ge  // ge = tcont
    5cac:	b	596c <mpc_acos@@Base+0x264>
    5cb0:	ldr	w2, [sp, #104]
    5cb4:	cmp	w1, #0x0
    5cb8:	stp	x25, x26, [sp, #64]
    5cbc:	and	w26, w2, #0xf
    5cc0:	b.le	5d04 <mpc_acos@@Base+0x5fc>
    5cc4:	mov	w2, w26
    5cc8:	mov	w1, #0x1                   	// #1
    5ccc:	bl	5440 <set_pi_over_2@plt>
    5cd0:	mov	w19, w0
    5cd4:	ldr	x1, [sp, #120]
    5cd8:	mov	w3, #0x0                   	// #0
    5cdc:	mov	x2, #0x1                   	// #1
    5ce0:	mov	x0, x1
    5ce4:	bl	5370 <mpfr_div_2ui@plt>
    5ce8:	ldp	x25, x26, [sp, #64]
    5cec:	b	5994 <mpc_acos@@Base+0x28c>
    5cf0:	ldr	w1, [sp, #104]
    5cf4:	and	w1, w1, #0xf
    5cf8:	bl	4ac0 <mpfr_const_pi@plt>
    5cfc:	mov	w19, w0
    5d00:	b	5994 <mpc_acos@@Base+0x28c>
    5d04:	add	x20, sp, #0xa0
    5d08:	stp	x23, x24, [sp, #48]
    5d0c:	mov	x0, x20
    5d10:	bl	4ae0 <mpfr_init@plt>
    5d14:	ldr	x0, [sp, #120]
    5d18:	cmp	w26, #0x0
    5d1c:	ldr	x19, [x0]
    5d20:	cinc	x23, x19, eq  // eq = none
    5d24:	nop
    5d28:	mov	x0, x19
    5d2c:	bl	4d70 <mpc_ceil_log2@plt>
    5d30:	mov	x1, x0
    5d34:	mov	x0, x20
    5d38:	add	x19, x19, x1
    5d3c:	mov	x1, x19
    5d40:	bl	4cd0 <mpfr_set_prec@plt>
    5d44:	mov	w1, #0x3                   	// #3
    5d48:	mov	x0, x20
    5d4c:	bl	4ac0 <mpfr_const_pi@plt>
    5d50:	mov	x1, x20
    5d54:	mov	w3, #0x3                   	// #3
    5d58:	mov	x2, #0x3                   	// #3
    5d5c:	mov	x0, x20
    5d60:	bl	4a00 <mpfr_mul_ui@plt>
    5d64:	mov	x4, x23
    5d68:	mov	w3, w26
    5d6c:	sub	x1, x19, #0x1
    5d70:	mov	x0, x20
    5d74:	mov	w2, #0x3                   	// #3
    5d78:	bl	54a0 <mpfr_can_round@plt>
    5d7c:	cbz	w0, 5d28 <mpc_acos@@Base+0x620>
    5d80:	ldr	x0, [sp, #120]
    5d84:	mov	w3, w26
    5d88:	mov	x1, x20
    5d8c:	mov	x2, #0x2                   	// #2
    5d90:	bl	5370 <mpfr_div_2ui@plt>
    5d94:	mov	w19, w0
    5d98:	mov	x0, x20
    5d9c:	bl	4db0 <mpfr_clear@plt>
    5da0:	ldp	x23, x24, [sp, #48]
    5da4:	ldp	x25, x26, [sp, #64]
    5da8:	b	5994 <mpc_acos@@Base+0x28c>
    5dac:	stp	x23, x24, [sp, #48]
    5db0:	mov	x0, x21
    5db4:	ldr	w23, [sp, #104]
    5db8:	mov	x2, #0x0                   	// #0
    5dbc:	mov	x1, #0xffffffffffffffff    	// #-1
    5dc0:	and	w22, w23, #0xf
    5dc4:	bl	5030 <mpfr_cmp_si_2exp@plt>
    5dc8:	tbnz	w0, #31, 5e50 <mpc_acos@@Base+0x748>
    5dcc:	mov	x1, x21
    5dd0:	mov	w2, w22
    5dd4:	ldr	x21, [sp, #120]
    5dd8:	mov	x0, x21
    5ddc:	bl	5020 <mpfr_acos@plt>
    5de0:	mov	w22, w0
    5de4:	add	x1, x21, #0x20
    5de8:	mov	w2, #0x1                   	// #1
    5dec:	mov	w21, #0x0                   	// #0
    5df0:	str	x20, [x1, #16]
    5df4:	str	w2, [x1, #8]
    5df8:	tbnz	w19, #31, 5e0c <mpc_acos@@Base+0x704>
    5dfc:	ldr	x1, [sp, #120]
    5e00:	mov	w2, #0x0                   	// #0
    5e04:	mov	x0, x1
    5e08:	bl	4fb0 <mpc_conj@plt>
    5e0c:	cmp	w22, #0x0
    5e10:	mov	w0, #0x2                   	// #2
    5e14:	cset	w19, ne  // ne = any
    5e18:	csel	w19, w19, w0, ge  // ge = tcont
    5e1c:	ldp	x23, x24, [sp, #48]
    5e20:	b	5c98 <mpc_acos@@Base+0x590>
    5e24:	mov	x1, x21
    5e28:	bl	5130 <mpfr_acosh@plt>
    5e2c:	mov	w21, w0
    5e30:	mov	w1, #0x1                   	// #1
    5e34:	ldr	x0, [sp, #120]
    5e38:	mov	w19, #0x0                   	// #0
    5e3c:	str	w1, [x0, #8]
    5e40:	str	x20, [x0, #16]
    5e44:	b	5c98 <mpc_acos@@Base+0x590>
    5e48:	mov	w2, #0x3                   	// #3
    5e4c:	b	5c64 <mpc_acos@@Base+0x55c>
    5e50:	ldp	x6, x7, [x21]
    5e54:	add	x20, sp, #0xa0
    5e58:	ldp	x4, x5, [x21, #16]
    5e5c:	mov	w2, #0x0                   	// #0
    5e60:	mov	x1, x20
    5e64:	mov	x0, x20
    5e68:	stp	x6, x7, [sp, #160]
    5e6c:	stp	x4, x5, [sp, #176]
    5e70:	bl	4bc0 <mpfr_neg@plt>
    5e74:	ldr	x0, [sp, #120]
    5e78:	asr	w2, w23, #4
    5e7c:	add	x0, x0, #0x20
    5e80:	tbnz	w19, #31, 5eb8 <mpc_acos@@Base+0x7b0>
    5e84:	cmp	w2, #0x2
    5e88:	b.eq	5ec8 <mpc_acos@@Base+0x7c0>  // b.none
    5e8c:	cmp	w2, #0x3
    5e90:	mov	w1, #0x2                   	// #2
    5e94:	csel	w2, w2, w1, ne  // ne = any
    5e98:	mov	x1, x20
    5e9c:	bl	5130 <mpfr_acosh@plt>
    5ea0:	neg	w21, w0
    5ea4:	ldr	x0, [sp, #120]
    5ea8:	mov	w1, w22
    5eac:	bl	4ac0 <mpfr_const_pi@plt>
    5eb0:	mov	w22, w0
    5eb4:	b	5df8 <mpc_acos@@Base+0x6f0>
    5eb8:	mov	x1, x20
    5ebc:	bl	5130 <mpfr_acosh@plt>
    5ec0:	mov	w21, w0
    5ec4:	b	5ea4 <mpc_acos@@Base+0x79c>
    5ec8:	mov	w2, #0x3                   	// #3
    5ecc:	b	5e98 <mpc_acos@@Base+0x790>
    5ed0:	mov	x0, #0x2                   	// #2
    5ed4:	sdiv	x0, x19, x0
    5ed8:	b	5800 <mpc_acos@@Base+0xf8>
    5edc:	nop

0000000000005ee0 <mpc_acosh@@Base>:
    5ee0:	stp	x29, x30, [sp, #-160]!
    5ee4:	mov	x29, sp
    5ee8:	stp	x19, x20, [sp, #16]
    5eec:	mov	x19, x1
    5ef0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    5ef4:	stp	x21, x22, [sp, #32]
    5ef8:	mov	w21, w2
    5efc:	mov	x22, x0
    5f00:	ldr	x2, [x19, #16]
    5f04:	cmp	x2, x1
    5f08:	b.ne	5f1c <mpc_acosh@@Base+0x3c>  // b.any
    5f0c:	ldr	x2, [x19, #48]
    5f10:	add	x1, x1, #0x1
    5f14:	cmp	x2, x1
    5f18:	b.eq	6090 <mpc_acosh@@Base+0x1b0>  // b.none
    5f1c:	ldr	x2, [x22]
    5f20:	add	x20, sp, #0x60
    5f24:	ldr	x1, [x22, #32]
    5f28:	mov	x0, x20
    5f2c:	str	x23, [sp, #48]
    5f30:	bl	5410 <mpc_init3@plt>
    5f34:	ldr	w1, [x19, #40]
    5f38:	asr	w0, w21, #4
    5f3c:	tbnz	w1, #31, 6004 <mpc_acosh@@Base+0x124>
    5f40:	and	w1, w21, #0xf
    5f44:	mov	w2, #0x30                  	// #48
    5f48:	cmp	w1, #0x2
    5f4c:	b.eq	5f60 <mpc_acosh@@Base+0x80>  // b.none
    5f50:	cmp	w1, #0x3
    5f54:	ubfiz	w2, w21, #4, #4
    5f58:	mov	w1, #0x20                  	// #32
    5f5c:	csel	w2, w2, w1, ne  // ne = any
    5f60:	add	w2, w0, w2
    5f64:	mov	x1, x19
    5f68:	mov	x0, x20
    5f6c:	bl	50c0 <mpc_acos@plt>
    5f70:	ldp	x4, x5, [sp, #128]
    5f74:	mov	w23, w0
    5f78:	ldp	x8, x9, [sp, #96]
    5f7c:	stp	x4, x5, [sp, #96]
    5f80:	mov	x1, x20
    5f84:	ldp	x6, x7, [sp, #112]
    5f88:	mov	x0, x20
    5f8c:	ldp	x4, x5, [sp, #144]
    5f90:	mov	w2, #0x0                   	// #0
    5f94:	stp	x4, x5, [sp, #112]
    5f98:	mov	w19, #0x2                   	// #2
    5f9c:	stp	x8, x9, [sp, #128]
    5fa0:	stp	x6, x7, [sp, #144]
    5fa4:	bl	4bc0 <mpfr_neg@plt>
    5fa8:	asr	w0, w23, #2
    5fac:	tst	w0, #0xfffffffd
    5fb0:	b.ne	5fbc <mpc_acosh@@Base+0xdc>  // b.any
    5fb4:	cmp	w0, #0x0
    5fb8:	cset	w19, ne  // ne = any
    5fbc:	and	w23, w23, #0x3
    5fc0:	cmp	w23, #0x2
    5fc4:	b.eq	6078 <mpc_acosh@@Base+0x198>  // b.none
    5fc8:	cmp	w23, #0x0
    5fcc:	orr	w0, w19, #0x4
    5fd0:	csel	w19, w0, w19, ne  // ne = any
    5fd4:	mov	w2, w21
    5fd8:	mov	x1, x20
    5fdc:	mov	x0, x22
    5fe0:	bl	55d0 <mpc_set@plt>
    5fe4:	mov	x0, x20
    5fe8:	bl	4a50 <mpc_clear@plt>
    5fec:	ldr	x23, [sp, #48]
    5ff0:	mov	w0, w19
    5ff4:	ldp	x19, x20, [sp, #16]
    5ff8:	ldp	x21, x22, [sp, #32]
    5ffc:	ldp	x29, x30, [sp], #160
    6000:	ret
    6004:	cmp	w0, #0x2
    6008:	b.eq	60a4 <mpc_acosh@@Base+0x1c4>  // b.none
    600c:	cmp	w0, #0x3
    6010:	mov	w1, #0x2                   	// #2
    6014:	csel	w0, w0, w1, ne  // ne = any
    6018:	ubfiz	w2, w21, #4, #4
    601c:	mov	x1, x19
    6020:	add	w2, w2, w0
    6024:	mov	x0, x20
    6028:	bl	50c0 <mpc_acos@plt>
    602c:	asr	w19, w0, #2
    6030:	ldp	x10, x11, [sp, #96]
    6034:	add	x1, x20, #0x20
    6038:	ldp	x8, x9, [sp, #112]
    603c:	mov	w23, w0
    6040:	ldp	x6, x7, [sp, #128]
    6044:	mov	x0, x1
    6048:	ldp	x4, x5, [sp, #144]
    604c:	mov	w2, #0x0                   	// #0
    6050:	stp	x6, x7, [sp, #96]
    6054:	stp	x4, x5, [sp, #112]
    6058:	stp	x10, x11, [sp, #128]
    605c:	stp	x8, x9, [sp, #144]
    6060:	bl	4bc0 <mpfr_neg@plt>
    6064:	cmp	w19, #0x2
    6068:	b.eq	6074 <mpc_acosh@@Base+0x194>  // b.none
    606c:	cmp	w19, #0x0
    6070:	cset	w19, ne  // ne = any
    6074:	tbz	w23, #0, 6080 <mpc_acosh@@Base+0x1a0>
    6078:	orr	w19, w19, #0x8
    607c:	b	5fd4 <mpc_acosh@@Base+0xf4>
    6080:	tst	x23, #0x3
    6084:	orr	w0, w19, #0x4
    6088:	csel	w19, w0, w19, ne  // ne = any
    608c:	b	5fd4 <mpc_acosh@@Base+0xf4>
    6090:	bl	4a80 <mpfr_set_nan@plt>
    6094:	mov	w19, #0x0                   	// #0
    6098:	add	x0, x22, #0x20
    609c:	bl	4a80 <mpfr_set_nan@plt>
    60a0:	b	5ff0 <mpc_acosh@@Base+0x110>
    60a4:	mov	w0, #0x3                   	// #3
    60a8:	b	6018 <mpc_acosh@@Base+0x138>
    60ac:	nop

00000000000060b0 <mpc_add@@Base>:
    60b0:	stp	x29, x30, [sp, #-64]!
    60b4:	mov	x29, sp
    60b8:	stp	x19, x20, [sp, #16]
    60bc:	mov	w20, w3
    60c0:	and	w3, w3, #0xf
    60c4:	stp	x21, x22, [sp, #32]
    60c8:	mov	x21, x0
    60cc:	mov	x22, x1
    60d0:	str	x23, [sp, #48]
    60d4:	mov	x23, x2
    60d8:	bl	4eb0 <mpfr_add@plt>
    60dc:	mov	w19, w0
    60e0:	asr	w3, w20, #4
    60e4:	add	x2, x23, #0x20
    60e8:	add	x1, x22, #0x20
    60ec:	add	x0, x21, #0x20
    60f0:	bl	4eb0 <mpfr_add@plt>
    60f4:	cmp	w19, #0x0
    60f8:	mov	w2, #0x2                   	// #2
    60fc:	cset	w1, ne  // ne = any
    6100:	csel	w1, w1, w2, ge  // ge = tcont
    6104:	cmp	w0, #0x0
    6108:	orr	w3, w1, #0x4
    610c:	orr	w2, w1, #0x8
    6110:	csel	w1, w3, w1, ne  // ne = any
    6114:	csel	w1, w1, w2, ge  // ge = tcont
    6118:	mov	w0, w1
    611c:	ldp	x19, x20, [sp, #16]
    6120:	ldp	x21, x22, [sp, #32]
    6124:	ldr	x23, [sp, #48]
    6128:	ldp	x29, x30, [sp], #64
    612c:	ret

0000000000006130 <mpc_add_fr@@Base>:
    6130:	stp	x29, x30, [sp, #-48]!
    6134:	mov	x29, sp
    6138:	stp	x19, x20, [sp, #16]
    613c:	mov	x20, x1
    6140:	stp	x21, x22, [sp, #32]
    6144:	mov	w21, w3
    6148:	mov	x22, x0
    614c:	and	w3, w3, #0xf
    6150:	bl	4eb0 <mpfr_add@plt>
    6154:	ldr	w3, [x20, #40]
    6158:	mov	w19, w0
    615c:	asr	w2, w21, #4
    6160:	add	x1, x20, #0x20
    6164:	add	x0, x22, #0x20
    6168:	bl	5220 <mpfr_set4@plt>
    616c:	cmp	w19, #0x0
    6170:	mov	w2, #0x2                   	// #2
    6174:	cset	w1, ne  // ne = any
    6178:	csel	w1, w1, w2, ge  // ge = tcont
    617c:	cmp	w0, #0x0
    6180:	orr	w3, w1, #0x4
    6184:	orr	w2, w1, #0x8
    6188:	csel	w1, w3, w1, ne  // ne = any
    618c:	csel	w1, w1, w2, ge  // ge = tcont
    6190:	mov	w0, w1
    6194:	ldp	x19, x20, [sp, #16]
    6198:	ldp	x21, x22, [sp, #32]
    619c:	ldp	x29, x30, [sp], #48
    61a0:	ret
    61a4:	nop

00000000000061a8 <mpc_add_si@@Base>:
    61a8:	stp	x29, x30, [sp, #-48]!
    61ac:	mov	x29, sp
    61b0:	stp	x19, x20, [sp, #16]
    61b4:	mov	x20, x1
    61b8:	stp	x21, x22, [sp, #32]
    61bc:	mov	w21, w3
    61c0:	mov	x22, x0
    61c4:	and	w3, w3, #0xf
    61c8:	bl	52b0 <mpfr_add_si@plt>
    61cc:	ldr	w3, [x20, #40]
    61d0:	mov	w19, w0
    61d4:	asr	w2, w21, #4
    61d8:	add	x1, x20, #0x20
    61dc:	add	x0, x22, #0x20
    61e0:	bl	5220 <mpfr_set4@plt>
    61e4:	cmp	w19, #0x0
    61e8:	mov	w2, #0x2                   	// #2
    61ec:	cset	w1, ne  // ne = any
    61f0:	csel	w1, w1, w2, ge  // ge = tcont
    61f4:	cmp	w0, #0x0
    61f8:	orr	w3, w1, #0x4
    61fc:	orr	w2, w1, #0x8
    6200:	csel	w1, w3, w1, ne  // ne = any
    6204:	csel	w1, w1, w2, ge  // ge = tcont
    6208:	mov	w0, w1
    620c:	ldp	x19, x20, [sp, #16]
    6210:	ldp	x21, x22, [sp, #32]
    6214:	ldp	x29, x30, [sp], #48
    6218:	ret
    621c:	nop

0000000000006220 <mpc_add_ui@@Base>:
    6220:	stp	x29, x30, [sp, #-48]!
    6224:	mov	x29, sp
    6228:	stp	x19, x20, [sp, #16]
    622c:	mov	x20, x1
    6230:	stp	x21, x22, [sp, #32]
    6234:	mov	w21, w3
    6238:	mov	x22, x0
    623c:	and	w3, w3, #0xf
    6240:	bl	4f30 <mpfr_add_ui@plt>
    6244:	ldr	w3, [x20, #40]
    6248:	mov	w19, w0
    624c:	asr	w2, w21, #4
    6250:	add	x1, x20, #0x20
    6254:	add	x0, x22, #0x20
    6258:	bl	5220 <mpfr_set4@plt>
    625c:	cmp	w19, #0x0
    6260:	mov	w2, #0x2                   	// #2
    6264:	cset	w1, ne  // ne = any
    6268:	csel	w1, w1, w2, ge  // ge = tcont
    626c:	cmp	w0, #0x0
    6270:	orr	w3, w1, #0x4
    6274:	orr	w2, w1, #0x8
    6278:	csel	w1, w3, w1, ne  // ne = any
    627c:	csel	w1, w1, w2, ge  // ge = tcont
    6280:	mov	w0, w1
    6284:	ldp	x19, x20, [sp, #16]
    6288:	ldp	x21, x22, [sp, #32]
    628c:	ldp	x29, x30, [sp], #48
    6290:	ret
    6294:	nop

0000000000006298 <mpc_arg@@Base>:
    6298:	mov	w3, w2
    629c:	mov	x2, x1
    62a0:	add	x1, x1, #0x20
    62a4:	b	4cf0 <mpfr_atan2@plt>

00000000000062a8 <mpc_asin@@Base>:
    62a8:	stp	x29, x30, [sp, #-256]!
    62ac:	mov	x29, sp
    62b0:	stp	x19, x20, [sp, #16]
    62b4:	ldr	x19, [x1, #16]
    62b8:	stp	x21, x22, [sp, #32]
    62bc:	stp	x23, x24, [sp, #48]
    62c0:	mov	x24, x1
    62c4:	str	x0, [sp, #112]
    62c8:	str	w2, [sp, #128]
    62cc:	mov	x2, #0x2                   	// #2
    62d0:	movk	x2, #0x8000, lsl #48
    62d4:	cmp	x19, x2
    62d8:	ldr	x20, [x1, #48]
    62dc:	b.eq	66f4 <mpc_asin@@Base+0x44c>  // b.none
    62e0:	cmp	x20, x2
    62e4:	b.eq	67e0 <mpc_asin@@Base+0x538>  // b.none
    62e8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    62ec:	cmp	x20, x1
    62f0:	ccmp	x19, x1, #0x4, ne  // ne = any
    62f4:	b.eq	65bc <mpc_asin@@Base+0x314>  // b.none
    62f8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    62fc:	cmp	x20, x1
    6300:	b.eq	6888 <mpc_asin@@Base+0x5e0>  // b.none
    6304:	cmp	x19, x1
    6308:	ldr	w1, [sp, #128]
    630c:	asr	w1, w1, #4
    6310:	str	w1, [sp, #140]
    6314:	b.eq	682c <mpc_asin@@Base+0x584>  // b.none
    6318:	ldr	x0, [sp, #112]
    631c:	add	x3, x24, #0x20
    6320:	str	x3, [sp, #96]
    6324:	add	x3, sp, #0xa0
    6328:	stp	x27, x28, [sp, #80]
    632c:	add	x28, sp, #0xc0
    6330:	add	x20, x28, #0x20
    6334:	ldr	x1, [x0]
    6338:	stp	x25, x26, [sp, #64]
    633c:	mov	w22, #0x0                   	// #0
    6340:	ldr	x2, [x0, #32]
    6344:	mov	x0, x28
    6348:	str	x1, [sp, #120]
    634c:	cmp	x1, x2
    6350:	str	x3, [sp, #144]
    6354:	csel	x19, x1, x2, ge  // ge = tcont
    6358:	str	x2, [sp, #152]
    635c:	mov	x1, x19
    6360:	bl	4d40 <mpc_init2@plt>
    6364:	ldr	x0, [sp, #128]
    6368:	tst	x0, #0xf
    636c:	cset	x0, eq  // eq = none
    6370:	str	x0, [sp, #104]
    6374:	nop
    6378:	add	w22, w22, #0x1
    637c:	cmp	w22, #0x2
    6380:	b.gt	6b00 <mpc_asin@@Base+0x858>
    6384:	mov	x0, x19
    6388:	bl	4d70 <mpc_ceil_log2@plt>
    638c:	mov	x1, x0
    6390:	mov	x0, x28
    6394:	add	x1, x1, #0x3
    6398:	add	x19, x19, x1
    639c:	mov	x1, x19
    63a0:	bl	4cd0 <mpfr_set_prec@plt>
    63a4:	mov	x1, x19
    63a8:	mov	x0, x20
    63ac:	bl	4cd0 <mpfr_set_prec@plt>
    63b0:	cmp	w22, #0x1
    63b4:	b.eq	660c <mpc_asin@@Base+0x364>  // b.none
    63b8:	mov	x1, x24
    63bc:	mov	w2, #0x0                   	// #0
    63c0:	mov	x0, x28
    63c4:	bl	4f80 <mpc_sqr@plt>
    63c8:	mov	w3, #0x0                   	// #0
    63cc:	mov	x2, x28
    63d0:	mov	x1, #0x1                   	// #1
    63d4:	mov	x0, x28
    63d8:	ldr	x23, [sp, #208]
    63dc:	bl	5480 <mpfr_ui_sub@plt>
    63e0:	mov	x1, x20
    63e4:	mov	w2, #0x0                   	// #0
    63e8:	mov	x0, x20
    63ec:	bl	4bc0 <mpfr_neg@plt>
    63f0:	mov	x1, x28
    63f4:	mov	w2, #0x0                   	// #0
    63f8:	mov	x0, x28
    63fc:	ldr	x25, [sp, #208]
    6400:	ldr	x27, [sp, #240]
    6404:	bl	4b80 <mpc_sqrt@plt>
    6408:	ldr	x2, [sp, #96]
    640c:	mov	x1, x28
    6410:	mov	w3, #0x0                   	// #0
    6414:	mov	x0, x28
    6418:	ldr	x26, [sp, #208]
    641c:	ldr	x21, [sp, #240]
    6420:	bl	4aa0 <mpfr_sub@plt>
    6424:	mov	x2, x24
    6428:	mov	x1, x20
    642c:	mov	w3, #0x0                   	// #0
    6430:	mov	x0, x20
    6434:	bl	4eb0 <mpfr_add@plt>
    6438:	mov	x0, x28
    643c:	bl	5240 <mpfr_sgn@plt>
    6440:	cbz	w0, 6378 <mpc_asin@@Base+0xd0>
    6444:	mov	x0, x20
    6448:	bl	5240 <mpfr_sgn@plt>
    644c:	cbz	w0, 6378 <mpc_asin@@Base+0xd0>
    6450:	subs	x4, x23, x25
    6454:	sub	x3, x27, x19
    6458:	csel	x4, x4, xzr, pl  // pl = nfrst
    645c:	sub	x3, x3, #0x1
    6460:	add	x4, x4, x25
    6464:	mov	x1, x28
    6468:	sub	x4, x4, x19
    646c:	mov	w2, #0x0                   	// #0
    6470:	cmp	x3, x4
    6474:	mov	x0, x28
    6478:	csel	x3, x3, x4, ge  // ge = tcont
    647c:	cmp	x25, x27
    6480:	csel	x27, x25, x27, ge  // ge = tcont
    6484:	cmp	x26, x21
    6488:	lsl	x25, x3, #1
    648c:	csel	x4, x26, x21, le
    6490:	sub	x25, x25, x27
    6494:	add	x25, x25, #0x1
    6498:	ldr	x23, [sp, #208]
    649c:	add	x3, x25, x25, lsr #63
    64a0:	ldr	x25, [sp, #240]
    64a4:	asr	x3, x3, #1
    64a8:	sub	x3, x3, x4
    64ac:	sub	x26, x26, x23
    64b0:	sub	x21, x21, x25
    64b4:	adds	x3, x3, x19
    64b8:	csel	x3, x3, xzr, pl  // pl = nfrst
    64bc:	cmp	x21, x26
    64c0:	csel	x21, x21, x26, ge  // ge = tcont
    64c4:	add	x3, x3, #0x1
    64c8:	adds	x3, x21, x3
    64cc:	csel	x3, x3, xzr, pl  // pl = nfrst
    64d0:	cmp	x23, x25
    64d4:	add	x3, x3, #0x1
    64d8:	csel	x25, x23, x25, ge  // ge = tcont
    64dc:	sub	x23, x25, x19
    64e0:	add	x23, x23, x3
    64e4:	bl	4e00 <mpc_log@plt>
    64e8:	ldr	x21, [sp, #208]
    64ec:	sub	x3, x25, #0x1
    64f0:	ldr	x2, [sp, #240]
    64f4:	sub	x3, x23, x3
    64f8:	mov	x1, x20
    64fc:	mov	x0, x28
    6500:	cmp	x21, x2
    6504:	csel	x21, x21, x2, le
    6508:	sub	x21, x3, x21
    650c:	adds	x21, x21, x19
    6510:	csel	x21, x21, xzr, pl  // pl = nfrst
    6514:	add	x21, x21, #0x1
    6518:	bl	50e0 <mpfr_swap@plt>
    651c:	sub	x21, x19, x21
    6520:	mov	x1, x20
    6524:	mov	w2, #0x0                   	// #0
    6528:	mov	x0, x20
    652c:	bl	4bc0 <mpfr_neg@plt>
    6530:	ldr	x1, [sp, #104]
    6534:	mov	w3, #0x1                   	// #1
    6538:	ldr	x0, [sp, #120]
    653c:	mov	w2, #0x0                   	// #0
    6540:	add	x4, x0, x1
    6544:	mov	x1, x21
    6548:	mov	x0, x28
    654c:	bl	54a0 <mpfr_can_round@plt>
    6550:	cbz	w0, 6378 <mpc_asin@@Base+0xd0>
    6554:	ldr	w0, [sp, #140]
    6558:	mov	x1, x21
    655c:	mov	w3, #0x1                   	// #1
    6560:	mov	w2, #0x0                   	// #0
    6564:	cmp	w0, #0x0
    6568:	ldr	x0, [sp, #152]
    656c:	cinc	x4, x0, eq  // eq = none
    6570:	mov	x0, x20
    6574:	bl	54a0 <mpfr_can_round@plt>
    6578:	cbz	w0, 6378 <mpc_asin@@Base+0xd0>
    657c:	nop
    6580:	ldr	w2, [sp, #128]
    6584:	mov	x1, x28
    6588:	ldr	x0, [sp, #112]
    658c:	bl	55d0 <mpc_set@plt>
    6590:	mov	w19, w0
    6594:	mov	x0, x28
    6598:	bl	4a50 <mpc_clear@plt>
    659c:	ldp	x25, x26, [sp, #64]
    65a0:	ldp	x27, x28, [sp, #80]
    65a4:	mov	w0, w19
    65a8:	ldp	x19, x20, [sp, #16]
    65ac:	ldp	x21, x22, [sp, #32]
    65b0:	ldp	x23, x24, [sp, #48]
    65b4:	ldp	x29, x30, [sp], #256
    65b8:	ret
    65bc:	cmp	x19, x1
    65c0:	ldr	w1, [x24, #8]
    65c4:	b.eq	6790 <mpc_asin@@Base+0x4e8>  // b.none
    65c8:	cmp	w1, #0x0
    65cc:	mov	w20, #0x1                   	// #1
    65d0:	cneg	w1, w20, lt  // lt = tstop
    65d4:	mov	w19, #0x0                   	// #0
    65d8:	bl	4d60 <mpfr_set_zero@plt>
    65dc:	ldr	w1, [x24, #40]
    65e0:	ldr	x0, [sp, #112]
    65e4:	cmp	w1, #0x0
    65e8:	cneg	w1, w20, lt  // lt = tstop
    65ec:	add	x0, x0, #0x20
    65f0:	bl	5170 <mpfr_set_inf@plt>
    65f4:	mov	w0, w19
    65f8:	ldp	x19, x20, [sp, #16]
    65fc:	ldp	x21, x22, [sp, #32]
    6600:	ldp	x23, x24, [sp, #48]
    6604:	ldp	x29, x30, [sp], #256
    6608:	ret
    660c:	ldr	x0, [x24, #48]
    6610:	tbz	x0, #63, 63b8 <mpc_asin@@Base+0x110>
    6614:	add	x0, x0, x0, lsr #63
    6618:	ldr	x1, [sp, #192]
    661c:	neg	x0, x0, asr #1
    6620:	cmp	x0, x1
    6624:	b.lt	63b8 <mpc_asin@@Base+0x110>  // b.tstop
    6628:	mov	w1, #0x0                   	// #0
    662c:	mov	x0, x28
    6630:	bl	4ac0 <mpfr_const_pi@plt>
    6634:	mov	x1, x28
    6638:	mov	w3, #0x0                   	// #0
    663c:	mov	x2, #0x1                   	// #1
    6640:	mov	x0, x28
    6644:	bl	5370 <mpfr_div_2ui@plt>
    6648:	ldp	x5, x0, [sp, #104]
    664c:	mov	w3, w22
    6650:	ldr	x1, [sp, #192]
    6654:	mov	w2, #0x0                   	// #0
    6658:	ldr	x4, [x0]
    665c:	mov	x0, x28
    6660:	add	x4, x5, x4
    6664:	bl	54a0 <mpfr_can_round@plt>
    6668:	cbz	w0, 63b8 <mpc_asin@@Base+0x110>
    666c:	ldr	x1, [sp, #96]
    6670:	ldr	x4, [sp, #144]
    6674:	ldr	w0, [x24, #40]
    6678:	ldp	x2, x3, [x1]
    667c:	stp	x2, x3, [x4]
    6680:	ldp	x2, x3, [x1, #16]
    6684:	stp	x2, x3, [x4, #16]
    6688:	tbnz	w0, #31, 6818 <mpc_asin@@Base+0x570>
    668c:	ldr	x1, [sp, #144]
    6690:	mov	x0, x20
    6694:	mov	w2, #0x0                   	// #0
    6698:	bl	53a0 <mpfr_sqrt@plt>
    669c:	mov	w21, w0
    66a0:	ldr	w1, [x24, #40]
    66a4:	tbnz	w1, #31, 6734 <mpc_asin@@Base+0x48c>
    66a8:	cbnz	w21, 66c0 <mpc_asin@@Base+0x418>
    66ac:	ldr	w0, [x24, #40]
    66b0:	tbnz	w0, #31, 6748 <mpc_asin@@Base+0x4a0>
    66b4:	add	x0, x28, #0x20
    66b8:	bl	4e50 <mpfr_nextabove@plt>
    66bc:	b	6580 <mpc_asin@@Base+0x2d8>
    66c0:	ldr	w0, [sp, #140]
    66c4:	mov	w3, #0x1                   	// #1
    66c8:	ldr	x1, [sp, #224]
    66cc:	cmp	w0, #0x0
    66d0:	ldr	x0, [sp, #112]
    66d4:	sub	x1, x1, #0x1
    66d8:	mov	w2, #0x4                   	// #4
    66dc:	ldr	x4, [x0, #32]
    66e0:	mov	x0, x20
    66e4:	cinc	x4, x4, eq  // eq = none
    66e8:	bl	54a0 <mpfr_can_round@plt>
    66ec:	cbnz	w0, 6580 <mpc_asin@@Base+0x2d8>
    66f0:	b	63b8 <mpc_asin@@Base+0x110>
    66f4:	ldr	x1, [sp, #112]
    66f8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    66fc:	cmp	x20, x0
    6700:	add	x21, x1, #0x20
    6704:	b.eq	6754 <mpc_asin@@Base+0x4ac>  // b.none
    6708:	ldr	x0, [sp, #112]
    670c:	mov	w19, #0x0                   	// #0
    6710:	bl	4a80 <mpfr_set_nan@plt>
    6714:	mov	x0, x21
    6718:	bl	4a80 <mpfr_set_nan@plt>
    671c:	mov	w0, w19
    6720:	ldp	x19, x20, [sp, #16]
    6724:	ldp	x21, x22, [sp, #32]
    6728:	ldp	x23, x24, [sp, #48]
    672c:	ldp	x29, x30, [sp], #256
    6730:	ret
    6734:	mov	x1, x20
    6738:	mov	x0, x20
    673c:	mov	w2, #0x0                   	// #0
    6740:	bl	4bc0 <mpfr_neg@plt>
    6744:	b	66a8 <mpc_asin@@Base+0x400>
    6748:	add	x0, x28, #0x20
    674c:	bl	4bf0 <mpfr_nextbelow@plt>
    6750:	b	6580 <mpc_asin@@Base+0x2d8>
    6754:	ldr	x0, [sp, #112]
    6758:	mov	w19, #0x0                   	// #0
    675c:	bl	4a80 <mpfr_set_nan@plt>
    6760:	ldr	w2, [x24, #40]
    6764:	mov	x0, x21
    6768:	mov	w1, #0x1                   	// #1
    676c:	cmp	w2, #0x0
    6770:	cneg	w1, w1, lt  // lt = tstop
    6774:	bl	5170 <mpfr_set_inf@plt>
    6778:	mov	w0, w19
    677c:	ldp	x19, x20, [sp, #16]
    6780:	ldp	x21, x22, [sp, #32]
    6784:	ldp	x23, x24, [sp, #48]
    6788:	ldp	x29, x30, [sp], #256
    678c:	ret
    6790:	cmp	w1, #0x0
    6794:	ldr	w1, [sp, #128]
    6798:	mov	w22, #0x1                   	// #1
    679c:	and	w2, w1, #0xf
    67a0:	cneg	w1, w22, lt  // lt = tstop
    67a4:	bl	5440 <set_pi_over_2@plt>
    67a8:	mov	w21, w0
    67ac:	ldr	w1, [x24, #40]
    67b0:	ldr	x0, [sp, #112]
    67b4:	cmp	w1, #0x0
    67b8:	cneg	w1, w22, lt  // lt = tstop
    67bc:	add	x0, x0, #0x20
    67c0:	bl	5170 <mpfr_set_inf@plt>
    67c4:	cmp	x20, x19
    67c8:	b.eq	6948 <mpc_asin@@Base+0x6a0>  // b.none
    67cc:	cmp	w21, #0x0
    67d0:	mov	w0, #0x2                   	// #2
    67d4:	cset	w19, ne  // ne = any
    67d8:	csel	w19, w19, w0, ge  // ge = tcont
    67dc:	b	65a4 <mpc_asin@@Base+0x2fc>
    67e0:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    67e4:	add	x21, x0, #0x20
    67e8:	cmp	x19, x2
    67ec:	b.eq	6754 <mpc_asin@@Base+0x4ac>  // b.none
    67f0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    67f4:	cmp	x19, x2
    67f8:	b.ne	6708 <mpc_asin@@Base+0x460>  // b.any
    67fc:	ldr	w3, [x24, #8]
    6800:	mov	w2, #0x0                   	// #0
    6804:	mov	w19, #0x0                   	// #0
    6808:	bl	5220 <mpfr_set4@plt>
    680c:	mov	x0, x21
    6810:	bl	4a80 <mpfr_set_nan@plt>
    6814:	b	65a4 <mpc_asin@@Base+0x2fc>
    6818:	mov	x0, x4
    681c:	mov	x1, x4
    6820:	mov	w2, #0x0                   	// #0
    6824:	bl	4bc0 <mpfr_neg@plt>
    6828:	b	668c <mpc_asin@@Base+0x3e4>
    682c:	ldr	x3, [sp, #112]
    6830:	mov	w2, #0x1                   	// #1
    6834:	ldr	w1, [x24, #8]
    6838:	str	w2, [x3, #8]
    683c:	str	x19, [x3, #16]
    6840:	tbnz	w1, #31, 6938 <mpc_asin@@Base+0x690>
    6844:	ldr	w2, [sp, #140]
    6848:	add	x1, x24, #0x20
    684c:	ldr	x0, [sp, #112]
    6850:	add	x0, x0, #0x20
    6854:	bl	4e10 <mpfr_asinh@plt>
    6858:	mov	w19, w0
    685c:	mov	w1, #0x4                   	// #4
    6860:	cmp	w19, #0x0
    6864:	mov	w0, #0x8                   	// #8
    6868:	csel	w1, w19, w1, eq  // eq = none
    686c:	csel	w19, w1, w0, ge  // ge = tcont
    6870:	mov	w0, w19
    6874:	ldp	x19, x20, [sp, #16]
    6878:	ldp	x21, x22, [sp, #32]
    687c:	ldp	x23, x24, [sp, #48]
    6880:	ldp	x29, x30, [sp], #256
    6884:	ret
    6888:	ldr	w19, [x24, #40]
    688c:	mov	x0, x24
    6890:	mov	x2, #0x0                   	// #0
    6894:	mov	x1, #0x1                   	// #1
    6898:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    689c:	cmp	w0, #0x0
    68a0:	ldr	x0, [sp, #112]
    68a4:	add	x21, x0, #0x20
    68a8:	ldr	w0, [sp, #128]
    68ac:	and	w22, w0, #0xf
    68b0:	b.le	6990 <mpc_asin@@Base+0x6e8>
    68b4:	asr	w2, w0, #4
    68b8:	tbz	w19, #31, 6960 <mpc_asin@@Base+0x6b8>
    68bc:	cmp	w2, #0x2
    68c0:	b.eq	69f0 <mpc_asin@@Base+0x748>  // b.none
    68c4:	cmp	w2, #0x3
    68c8:	mov	w0, #0x2                   	// #2
    68cc:	csel	w2, w2, w0, ne  // ne = any
    68d0:	mov	x0, x21
    68d4:	mov	x1, x24
    68d8:	bl	5130 <mpfr_acosh@plt>
    68dc:	mov	w21, w0
    68e0:	ldr	w1, [x24, #8]
    68e4:	tbz	w1, #31, 69d8 <mpc_asin@@Base+0x730>
    68e8:	ldr	x0, [sp, #112]
    68ec:	mov	w2, w22
    68f0:	mov	w1, #0xffffffff            	// #-1
    68f4:	bl	5440 <set_pi_over_2@plt>
    68f8:	mov	w20, w0
    68fc:	ldr	x1, [sp, #112]
    6900:	neg	w21, w21
    6904:	mov	w2, #0x0                   	// #0
    6908:	mov	x0, x1
    690c:	bl	4fb0 <mpc_conj@plt>
    6910:	cmp	w20, #0x0
    6914:	mov	w0, #0x2                   	// #2
    6918:	cset	w19, ne  // ne = any
    691c:	csel	w19, w19, w0, ge  // ge = tcont
    6920:	cmp	w21, #0x0
    6924:	orr	w0, w19, #0x4
    6928:	csel	w0, w0, w19, ne  // ne = any
    692c:	orr	w19, w19, #0x8
    6930:	csel	w19, w0, w19, ge  // ge = tcont
    6934:	b	65a4 <mpc_asin@@Base+0x2fc>
    6938:	mov	x1, x3
    693c:	mov	w2, #0x0                   	// #0
    6940:	bl	4bc0 <mpfr_neg@plt>
    6944:	b	6844 <mpc_asin@@Base+0x59c>
    6948:	ldr	x1, [sp, #112]
    694c:	mov	w3, #0x0                   	// #0
    6950:	mov	x2, #0x1                   	// #1
    6954:	mov	x0, x1
    6958:	bl	5370 <mpfr_div_2ui@plt>
    695c:	b	67cc <mpc_asin@@Base+0x524>
    6960:	mov	x0, x21
    6964:	mov	x1, x24
    6968:	bl	5130 <mpfr_acosh@plt>
    696c:	mov	w21, w0
    6970:	ldr	w1, [x24, #8]
    6974:	tbnz	w1, #31, 69f8 <mpc_asin@@Base+0x750>
    6978:	ldr	x0, [sp, #112]
    697c:	mov	w2, w22
    6980:	mov	w1, #0x1                   	// #1
    6984:	bl	5440 <set_pi_over_2@plt>
    6988:	mov	w20, w0
    698c:	b	6910 <mpc_asin@@Base+0x668>
    6990:	mov	x0, x24
    6994:	mov	x2, #0x0                   	// #0
    6998:	mov	x1, #0xffffffffffffffff    	// #-1
    699c:	bl	5030 <mpfr_cmp_si_2exp@plt>
    69a0:	tbnz	w0, #31, 6a24 <mpc_asin@@Base+0x77c>
    69a4:	mov	w0, #0x1                   	// #1
    69a8:	str	w0, [x21, #8]
    69ac:	str	x20, [x21, #16]
    69b0:	tbnz	w19, #31, 6a10 <mpc_asin@@Base+0x768>
    69b4:	ldr	x0, [sp, #112]
    69b8:	mov	x1, x24
    69bc:	mov	w2, w22
    69c0:	bl	4e90 <mpfr_asin@plt>
    69c4:	cmp	w0, #0x0
    69c8:	cset	w19, ne  // ne = any
    69cc:	mov	w1, #0x2                   	// #2
    69d0:	csel	w19, w19, w1, ge  // ge = tcont
    69d4:	b	65a4 <mpc_asin@@Base+0x2fc>
    69d8:	ldr	x0, [sp, #112]
    69dc:	mov	w2, w22
    69e0:	mov	w1, #0x1                   	// #1
    69e4:	bl	5440 <set_pi_over_2@plt>
    69e8:	mov	w20, w0
    69ec:	b	68fc <mpc_asin@@Base+0x654>
    69f0:	mov	w2, #0x3                   	// #3
    69f4:	b	68d0 <mpc_asin@@Base+0x628>
    69f8:	ldr	x0, [sp, #112]
    69fc:	mov	w2, w22
    6a00:	mov	w1, #0xffffffff            	// #-1
    6a04:	bl	5440 <set_pi_over_2@plt>
    6a08:	mov	w20, w0
    6a0c:	b	6910 <mpc_asin@@Base+0x668>
    6a10:	mov	x1, x21
    6a14:	mov	x0, x21
    6a18:	mov	w2, #0x0                   	// #0
    6a1c:	bl	4bc0 <mpfr_neg@plt>
    6a20:	b	69b4 <mpc_asin@@Base+0x70c>
    6a24:	ldp	x8, x9, [x24]
    6a28:	stp	x27, x28, [sp, #80]
    6a2c:	add	x28, sp, #0xc0
    6a30:	ldp	x6, x7, [x24, #16]
    6a34:	mov	w2, #0x0                   	// #0
    6a38:	mov	x1, x28
    6a3c:	mov	x0, x28
    6a40:	stp	x8, x9, [sp, #192]
    6a44:	stp	x6, x7, [sp, #208]
    6a48:	bl	4bc0 <mpfr_neg@plt>
    6a4c:	ldr	w0, [sp, #128]
    6a50:	asr	w2, w0, #4
    6a54:	tbz	w19, #31, 6ab4 <mpc_asin@@Base+0x80c>
    6a58:	cmp	w2, #0x2
    6a5c:	b.eq	6b28 <mpc_asin@@Base+0x880>  // b.none
    6a60:	cmp	w2, #0x3
    6a64:	mov	w0, #0x2                   	// #2
    6a68:	csel	w2, w2, w0, ne  // ne = any
    6a6c:	mov	x1, x28
    6a70:	mov	x0, x21
    6a74:	bl	5130 <mpfr_acosh@plt>
    6a78:	mov	w21, w0
    6a7c:	ldr	w1, [x24, #8]
    6a80:	tbnz	w1, #31, 6ae8 <mpc_asin@@Base+0x840>
    6a84:	ldr	x0, [sp, #112]
    6a88:	mov	w2, w22
    6a8c:	mov	w1, #0x1                   	// #1
    6a90:	bl	5440 <set_pi_over_2@plt>
    6a94:	mov	w20, w0
    6a98:	ldr	x1, [sp, #112]
    6a9c:	mov	w2, #0x0                   	// #0
    6aa0:	neg	w21, w21
    6aa4:	mov	x0, x1
    6aa8:	bl	4fb0 <mpc_conj@plt>
    6aac:	ldp	x27, x28, [sp, #80]
    6ab0:	b	6910 <mpc_asin@@Base+0x668>
    6ab4:	mov	x1, x28
    6ab8:	mov	x0, x21
    6abc:	bl	5130 <mpfr_acosh@plt>
    6ac0:	mov	w21, w0
    6ac4:	ldr	w1, [x24, #8]
    6ac8:	tbnz	w1, #31, 6b30 <mpc_asin@@Base+0x888>
    6acc:	ldr	x0, [sp, #112]
    6ad0:	mov	w2, w22
    6ad4:	mov	w1, #0x1                   	// #1
    6ad8:	bl	5440 <set_pi_over_2@plt>
    6adc:	mov	w20, w0
    6ae0:	ldp	x27, x28, [sp, #80]
    6ae4:	b	6910 <mpc_asin@@Base+0x668>
    6ae8:	ldr	x0, [sp, #112]
    6aec:	mov	w2, w22
    6af0:	mov	w1, #0xffffffff            	// #-1
    6af4:	bl	5440 <set_pi_over_2@plt>
    6af8:	mov	w20, w0
    6afc:	b	6a98 <mpc_asin@@Base+0x7f0>
    6b00:	mov	x0, #0x2                   	// #2
    6b04:	sdiv	x1, x19, x0
    6b08:	mov	x0, x28
    6b0c:	add	x19, x19, x1
    6b10:	mov	x1, x19
    6b14:	bl	4cd0 <mpfr_set_prec@plt>
    6b18:	mov	x1, x19
    6b1c:	mov	x0, x20
    6b20:	bl	4cd0 <mpfr_set_prec@plt>
    6b24:	b	63b8 <mpc_asin@@Base+0x110>
    6b28:	mov	w2, #0x3                   	// #3
    6b2c:	b	6a6c <mpc_asin@@Base+0x7c4>
    6b30:	ldr	x0, [sp, #112]
    6b34:	mov	w2, w22
    6b38:	mov	w1, #0xffffffff            	// #-1
    6b3c:	bl	5440 <set_pi_over_2@plt>
    6b40:	mov	w20, w0
    6b44:	ldp	x27, x28, [sp, #80]
    6b48:	b	6910 <mpc_asin@@Base+0x668>
    6b4c:	nop

0000000000006b50 <mpc_asinh@@Base>:
    6b50:	mov	x3, x1
    6b54:	stp	x29, x30, [sp, #-208]!
    6b58:	mov	x29, sp
    6b5c:	ldp	x6, x7, [x3, #32]
    6b60:	stp	x6, x7, [sp, #80]
    6b64:	ldp	x8, x9, [x3]
    6b68:	stp	x21, x22, [sp, #32]
    6b6c:	mov	x21, x0
    6b70:	ldp	x4, x5, [x3, #16]
    6b74:	add	x22, sp, #0x50
    6b78:	ldp	x6, x7, [x3, #48]
    6b7c:	mov	x1, x22
    6b80:	mov	x0, x22
    6b84:	stp	x19, x20, [sp, #16]
    6b88:	mov	w19, w2
    6b8c:	mov	w2, #0x0                   	// #0
    6b90:	stp	x6, x7, [sp, #96]
    6b94:	add	x20, sp, #0x90
    6b98:	stp	x8, x9, [sp, #112]
    6b9c:	stp	x4, x5, [sp, #128]
    6ba0:	bl	4bc0 <mpfr_neg@plt>
    6ba4:	mov	x0, x20
    6ba8:	ldr	x2, [x21]
    6bac:	ldr	x1, [x21, #32]
    6bb0:	bl	5410 <mpc_init3@plt>
    6bb4:	asr	w2, w19, #4
    6bb8:	cmp	w2, #0x2
    6bbc:	b.eq	6c74 <mpc_asinh@@Base+0x124>  // b.none
    6bc0:	cmp	w2, #0x3
    6bc4:	mov	w0, #0x2                   	// #2
    6bc8:	csel	w2, w2, w0, ne  // ne = any
    6bcc:	ubfiz	w19, w19, #4, #4
    6bd0:	mov	x1, x22
    6bd4:	add	w2, w19, w2
    6bd8:	mov	x0, x20
    6bdc:	bl	54d0 <mpc_asin@plt>
    6be0:	mov	w19, w0
    6be4:	ldp	x10, x11, [sp, #144]
    6be8:	add	x1, x20, #0x20
    6bec:	ldp	x8, x9, [sp, #160]
    6bf0:	mov	x0, x1
    6bf4:	ldp	x6, x7, [sp, #176]
    6bf8:	mov	w2, #0x0                   	// #0
    6bfc:	ldp	x4, x5, [sp, #192]
    6c00:	stp	x6, x7, [sp, #144]
    6c04:	stp	x4, x5, [sp, #160]
    6c08:	stp	x10, x11, [sp, #176]
    6c0c:	stp	x8, x9, [sp, #192]
    6c10:	bl	4bc0 <mpfr_neg@plt>
    6c14:	mov	x1, x20
    6c18:	mov	w2, #0x0                   	// #0
    6c1c:	mov	x0, x21
    6c20:	bl	55d0 <mpc_set@plt>
    6c24:	mov	x0, x20
    6c28:	bl	4a50 <mpc_clear@plt>
    6c2c:	asr	w0, w19, #2
    6c30:	cmp	w0, #0x2
    6c34:	b.eq	6c40 <mpc_asinh@@Base+0xf0>  // b.none
    6c38:	cmp	w0, #0x0
    6c3c:	cset	w0, ne  // ne = any
    6c40:	tbz	w19, #0, 6c58 <mpc_asinh@@Base+0x108>
    6c44:	orr	w0, w0, #0x8
    6c48:	ldp	x19, x20, [sp, #16]
    6c4c:	ldp	x21, x22, [sp, #32]
    6c50:	ldp	x29, x30, [sp], #208
    6c54:	ret
    6c58:	tst	x19, #0x3
    6c5c:	orr	w1, w0, #0x4
    6c60:	csel	w0, w1, w0, ne  // ne = any
    6c64:	ldp	x19, x20, [sp, #16]
    6c68:	ldp	x21, x22, [sp, #32]
    6c6c:	ldp	x29, x30, [sp], #208
    6c70:	ret
    6c74:	mov	w2, #0x3                   	// #3
    6c78:	b	6bcc <mpc_asinh@@Base+0x7c>
    6c7c:	nop

0000000000006c80 <set_pi_over_2@@Base>:
    6c80:	stp	x29, x30, [sp, #-32]!
    6c84:	mov	x29, sp
    6c88:	stp	x19, x20, [sp, #16]
    6c8c:	mov	x19, x0
    6c90:	tbnz	w1, #31, 6cc4 <set_pi_over_2@@Base+0x44>
    6c94:	mov	w1, w2
    6c98:	bl	4ac0 <mpfr_const_pi@plt>
    6c9c:	mov	x1, x19
    6ca0:	mov	w20, w0
    6ca4:	mov	w3, #0x0                   	// #0
    6ca8:	mov	x0, x19
    6cac:	mov	x2, #0x1                   	// #1
    6cb0:	bl	5370 <mpfr_div_2ui@plt>
    6cb4:	mov	w0, w20
    6cb8:	ldp	x19, x20, [sp, #16]
    6cbc:	ldp	x29, x30, [sp], #32
    6cc0:	ret
    6cc4:	cmp	w2, #0x2
    6cc8:	b.eq	6d20 <set_pi_over_2@@Base+0xa0>  // b.none
    6ccc:	cmp	w2, #0x3
    6cd0:	mov	w0, #0x2                   	// #2
    6cd4:	csel	w2, w2, w0, ne  // ne = any
    6cd8:	mov	w1, w2
    6cdc:	mov	x0, x19
    6ce0:	bl	4ac0 <mpfr_const_pi@plt>
    6ce4:	mov	w20, w0
    6ce8:	mov	w3, #0x0                   	// #0
    6cec:	mov	x1, x19
    6cf0:	mov	x0, x19
    6cf4:	mov	x2, #0x1                   	// #1
    6cf8:	bl	5370 <mpfr_div_2ui@plt>
    6cfc:	neg	w20, w20
    6d00:	mov	x1, x19
    6d04:	mov	x0, x19
    6d08:	mov	w2, #0x0                   	// #0
    6d0c:	bl	4bc0 <mpfr_neg@plt>
    6d10:	mov	w0, w20
    6d14:	ldp	x19, x20, [sp, #16]
    6d18:	ldp	x29, x30, [sp], #32
    6d1c:	ret
    6d20:	mov	w2, #0x3                   	// #3
    6d24:	b	6cd8 <set_pi_over_2@@Base+0x58>

0000000000006d28 <mpc_atan@@Base>:
    6d28:	stp	x29, x30, [sp, #-304]!
    6d2c:	mov	x3, #0x2                   	// #2
    6d30:	movk	x3, #0x8000, lsl #48
    6d34:	mov	x29, sp
    6d38:	str	w2, [sp, #104]
    6d3c:	ldr	x2, [x1, #16]
    6d40:	stp	x19, x20, [sp, #16]
    6d44:	ldr	w20, [x1, #8]
    6d48:	stp	x21, x22, [sp, #32]
    6d4c:	cmp	x2, x3
    6d50:	ldr	w22, [x1, #40]
    6d54:	stp	x25, x26, [sp, #64]
    6d58:	mov	x26, x1
    6d5c:	str	x0, [sp, #136]
    6d60:	b.eq	737c <mpc_atan@@Base+0x654>  // b.none
    6d64:	ldr	x19, [x1, #48]
    6d68:	stp	x23, x24, [sp, #48]
    6d6c:	lsr	w23, w20, #31
    6d70:	cmp	x19, x3
    6d74:	b.eq	6df4 <mpc_atan@@Base+0xcc>  // b.none
    6d78:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    6d7c:	cmp	x2, x3
    6d80:	ccmp	x19, x3, #0x4, ne  // ne = any
    6d84:	b.eq	7050 <mpc_atan@@Base+0x328>  // b.none
    6d88:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    6d8c:	cmp	x19, x3
    6d90:	b.eq	72f0 <mpc_atan@@Base+0x5c8>  // b.none
    6d94:	cmp	x2, x3
    6d98:	add	x24, x1, #0x20
    6d9c:	b.ne	6e30 <mpc_atan@@Base+0x108>  // b.any
    6da0:	mov	x2, #0x0                   	// #0
    6da4:	tbnz	w22, #31, 7368 <mpc_atan@@Base+0x640>
    6da8:	mov	x0, x24
    6dac:	mov	x1, #0x1                   	// #1
    6db0:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    6db4:	mov	w25, w0
    6db8:	cmp	w25, #0x0
    6dbc:	b.lt	7578 <mpc_atan@@Base+0x850>  // b.tstop
    6dc0:	b.ne	73c0 <mpc_atan@@Base+0x698>  // b.any
    6dc4:	cmp	w20, #0x0
    6dc8:	mov	w19, #0x1                   	// #1
    6dcc:	ldr	x20, [sp, #136]
    6dd0:	cneg	w1, w19, lt  // lt = tstop
    6dd4:	mov	x0, x20
    6dd8:	bl	4d60 <mpfr_set_zero@plt>
    6ddc:	cmp	w22, #0x0
    6de0:	add	x0, x20, #0x20
    6de4:	cneg	w1, w19, lt  // lt = tstop
    6de8:	bl	5170 <mpfr_set_inf@plt>
    6dec:	ldp	x23, x24, [sp, #48]
    6df0:	b	6e18 <mpc_atan@@Base+0xf0>
    6df4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    6df8:	cmp	x2, x1
    6dfc:	b.eq	70a4 <mpc_atan@@Base+0x37c>  // b.none
    6e00:	bl	4a80 <mpfr_set_nan@plt>
    6e04:	mov	w25, #0x0                   	// #0
    6e08:	ldr	x0, [sp, #136]
    6e0c:	add	x0, x0, #0x20
    6e10:	bl	4a80 <mpfr_set_nan@plt>
    6e14:	ldp	x23, x24, [sp, #48]
    6e18:	mov	w0, w25
    6e1c:	ldp	x19, x20, [sp, #16]
    6e20:	ldp	x21, x22, [sp, #32]
    6e24:	ldp	x25, x26, [sp, #64]
    6e28:	ldp	x29, x30, [sp], #304
    6e2c:	ret
    6e30:	add	x21, sp, #0xf0
    6e34:	add	x22, sp, #0xd0
    6e38:	add	x20, sp, #0xb0
    6e3c:	add	x19, sp, #0x90
    6e40:	mov	x4, x21
    6e44:	mov	x3, x22
    6e48:	mov	x2, x20
    6e4c:	mov	x1, x19
    6e50:	mov	x5, #0x0                   	// #0
    6e54:	mov	x0, #0x1                   	// #1
    6e58:	stp	x27, x28, [sp, #80]
    6e5c:	bl	5590 <mpfr_inits2@plt>
    6e60:	add	x27, sp, #0x110
    6e64:	ldp	x6, x7, [x26]
    6e68:	mov	x1, x27
    6e6c:	ldp	x4, x5, [x26, #16]
    6e70:	mov	w2, #0x0                   	// #0
    6e74:	mov	x0, x27
    6e78:	stp	x6, x7, [sp, #272]
    6e7c:	stp	x4, x5, [sp, #288]
    6e80:	bl	4bc0 <mpfr_neg@plt>
    6e84:	ldr	x0, [sp, #136]
    6e88:	ldr	x1, [x26, #16]
    6e8c:	ldr	x2, [x0]
    6e90:	stp	x1, x2, [sp, #112]
    6e94:	ldr	x0, [x26, #48]
    6e98:	mov	x23, x2
    6e9c:	cmp	x0, #0x0
    6ea0:	b.gt	6eb4 <mpc_atan@@Base+0x18c>
    6ea4:	neg	x1, x0
    6ea8:	sub	x0, x2, x0
    6eac:	cmp	x1, x2
    6eb0:	csel	x23, x0, x2, ge  // ge = tcont
    6eb4:	ldr	x1, [sp, #112]
    6eb8:	mov	x25, #0x8000000000000003    	// #-9223372036854775805
    6ebc:	cmp	x1, x25
    6ec0:	b.ge	734c <mpc_atan@@Base+0x624>  // b.tcont
    6ec4:	mov	x0, #0x2                   	// #2
    6ec8:	movk	x0, #0x8000, lsl #48
    6ecc:	cmp	x1, x0
    6ed0:	b.eq	75fc <mpc_atan@@Base+0x8d4>  // b.none
    6ed4:	mov	w0, #0x2                   	// #2
    6ed8:	str	w0, [sp, #128]
    6edc:	mov	w0, #0x3                   	// #3
    6ee0:	str	w0, [sp, #132]
    6ee4:	mov	x28, #0x8000000000000003    	// #-9223372036854775805
    6ee8:	b	6fec <mpc_atan@@Base+0x2c4>
    6eec:	mov	x0, #0x2                   	// #2
    6ef0:	movk	x0, #0x8000, lsl #48
    6ef4:	cmp	x25, x0
    6ef8:	b.eq	70f0 <mpc_atan@@Base+0x3c8>  // b.none
    6efc:	mov	x0, x24
    6f00:	mov	x2, #0x0                   	// #0
    6f04:	mov	x1, #0x1                   	// #1
    6f08:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    6f0c:	cbnz	w0, 7630 <mpc_atan@@Base+0x908>
    6f10:	mov	x25, #0x2                   	// #2
    6f14:	mov	x2, x19
    6f18:	mov	x1, x26
    6f1c:	mov	w3, #0x2                   	// #2
    6f20:	mov	x0, x22
    6f24:	bl	4cf0 <mpfr_atan2@plt>
    6f28:	ldr	w3, [sp, #132]
    6f2c:	mov	x1, x24
    6f30:	mov	x0, x19
    6f34:	mov	x2, #0x1                   	// #1
    6f38:	bl	4f30 <mpfr_add_ui@plt>
    6f3c:	ldr	x0, [sp, #160]
    6f40:	cmp	x0, x28
    6f44:	b.ge	70dc <mpc_atan@@Base+0x3b4>  // b.tcont
    6f48:	mov	x1, #0x2                   	// #2
    6f4c:	movk	x1, #0x8000, lsl #48
    6f50:	cmp	x0, x1
    6f54:	b.eq	70f8 <mpc_atan@@Base+0x3d0>  // b.none
    6f58:	mov	x0, x24
    6f5c:	mov	x2, #0x0                   	// #0
    6f60:	mov	x1, #0xffffffffffffffff    	// #-1
    6f64:	bl	5030 <mpfr_cmp_si_2exp@plt>
    6f68:	cbnz	w0, 7690 <mpc_atan@@Base+0x968>
    6f6c:	mov	x2, x19
    6f70:	mov	x1, x27
    6f74:	mov	w3, #0x3                   	// #3
    6f78:	mov	x0, x20
    6f7c:	bl	4cf0 <mpfr_atan2@plt>
    6f80:	mov	x2, x20
    6f84:	mov	x1, x22
    6f88:	mov	w3, #0x2                   	// #2
    6f8c:	mov	x0, x22
    6f90:	bl	4aa0 <mpfr_sub@plt>
    6f94:	ldr	x0, [sp, #112]
    6f98:	mov	w3, #0x2                   	// #2
    6f9c:	ldr	x1, [sp, #224]
    6fa0:	add	x0, x0, #0x5
    6fa4:	sub	x25, x0, x25
    6fa8:	mov	x2, #0x1                   	// #1
    6fac:	subs	x25, x25, x1
    6fb0:	mov	x0, x22
    6fb4:	csel	x25, x25, xzr, pl  // pl = nfrst
    6fb8:	mov	x1, x22
    6fbc:	add	x25, x25, #0x1
    6fc0:	bl	5370 <mpfr_div_2ui@plt>
    6fc4:	ldr	x0, [sp, #104]
    6fc8:	sub	x1, x23, x25
    6fcc:	mov	w3, #0x3                   	// #3
    6fd0:	mov	w2, #0x2                   	// #2
    6fd4:	tst	x0, #0xf
    6fd8:	ldr	x0, [sp, #120]
    6fdc:	cinc	x4, x0, eq  // eq = none
    6fe0:	mov	x0, x22
    6fe4:	bl	54a0 <mpfr_can_round@plt>
    6fe8:	cbnz	w0, 7100 <mpc_atan@@Base+0x3d8>
    6fec:	mov	x0, x23
    6ff0:	bl	4d70 <mpc_ceil_log2@plt>
    6ff4:	mov	x1, x0
    6ff8:	mov	x0, x19
    6ffc:	add	x1, x1, #0x2
    7000:	add	x23, x23, x1
    7004:	mov	x1, x23
    7008:	bl	4cd0 <mpfr_set_prec@plt>
    700c:	mov	x1, x23
    7010:	mov	x0, x20
    7014:	bl	4cd0 <mpfr_set_prec@plt>
    7018:	mov	x1, x23
    701c:	mov	x0, x22
    7020:	bl	4cd0 <mpfr_set_prec@plt>
    7024:	ldr	w3, [sp, #128]
    7028:	mov	x2, x24
    702c:	mov	x0, x19
    7030:	mov	x1, #0x1                   	// #1
    7034:	bl	5480 <mpfr_ui_sub@plt>
    7038:	ldr	x25, [sp, #160]
    703c:	cmp	x25, x28
    7040:	b.lt	6eec <mpc_atan@@Base+0x1c4>  // b.tstop
    7044:	ldr	w0, [sp, #152]
    7048:	cbnz	w0, 6f14 <mpc_atan@@Base+0x1ec>
    704c:	b	6efc <mpc_atan@@Base+0x1d4>
    7050:	ldr	w1, [sp, #104]
    7054:	and	w2, w1, #0xf
    7058:	neg	w1, w23
    705c:	bl	5440 <set_pi_over_2@plt>
    7060:	mov	w19, w0
    7064:	ldr	x1, [sp, #136]
    7068:	mov	w3, #0x1                   	// #1
    706c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    7070:	str	w3, [x1, #40]
    7074:	str	x2, [x1, #48]
    7078:	tbnz	w22, #31, 75d4 <mpc_atan@@Base+0x8ac>
    707c:	cmp	w19, #0x0
    7080:	b.lt	732c <mpc_atan@@Base+0x604>  // b.tstop
    7084:	cset	w25, ne  // ne = any
    7088:	mov	w0, w25
    708c:	ldp	x19, x20, [sp, #16]
    7090:	ldp	x21, x22, [sp, #32]
    7094:	ldp	x23, x24, [sp, #48]
    7098:	ldp	x25, x26, [sp, #64]
    709c:	ldp	x29, x30, [sp], #304
    70a0:	ret
    70a4:	ldr	w1, [sp, #104]
    70a8:	and	w2, w1, #0xf
    70ac:	neg	w1, w23
    70b0:	bl	5440 <set_pi_over_2@plt>
    70b4:	cmp	w0, #0x0
    70b8:	ldr	x1, [sp, #136]
    70bc:	mov	w3, #0x1                   	// #1
    70c0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    70c4:	cset	w25, ne  // ne = any
    70c8:	str	w3, [x1, #40]
    70cc:	str	x2, [x1, #48]
    70d0:	tbnz	w0, #31, 732c <mpc_atan@@Base+0x604>
    70d4:	ldp	x23, x24, [sp, #48]
    70d8:	b	6e18 <mpc_atan@@Base+0xf0>
    70dc:	ldr	w1, [sp, #152]
    70e0:	cbz	w1, 6f58 <mpc_atan@@Base+0x230>
    70e4:	cmp	x25, x0
    70e8:	csel	x25, x25, x0, le
    70ec:	b	6f6c <mpc_atan@@Base+0x244>
    70f0:	bl	4b40 <mpfr_set_erangeflag@plt>
    70f4:	b	6efc <mpc_atan@@Base+0x1d4>
    70f8:	bl	4b40 <mpfr_set_erangeflag@plt>
    70fc:	b	6f58 <mpc_atan@@Base+0x230>
    7100:	ldr	x0, [sp, #136]
    7104:	mov	x23, #0x2                   	// #2
    7108:	mov	x27, #0x8000000000000001    	// #-9223372036854775807
    710c:	ldr	x25, [x0, #32]
    7110:	ldr	w0, [sp, #104]
    7114:	cmp	wzr, w0, lsr #4
    7118:	cinc	x28, x25, eq  // eq = none
    711c:	nop
    7120:	mov	x0, x25
    7124:	bl	4d70 <mpc_ceil_log2@plt>
    7128:	mov	x1, x0
    712c:	mov	x0, x19
    7130:	add	x1, x1, x23
    7134:	add	x25, x25, x1
    7138:	mov	x1, x25
    713c:	bl	4cd0 <mpfr_set_prec@plt>
    7140:	mov	x1, x25
    7144:	mov	x0, x20
    7148:	bl	4cd0 <mpfr_set_prec@plt>
    714c:	mov	x1, x25
    7150:	mov	x0, x21
    7154:	bl	4cd0 <mpfr_set_prec@plt>
    7158:	mov	w3, #0x4                   	// #4
    715c:	mov	x1, x24
    7160:	mov	x2, #0x1                   	// #1
    7164:	mov	x0, x19
    7168:	bl	4f30 <mpfr_add_ui@plt>
    716c:	mov	x1, x19
    7170:	mov	w2, #0x2                   	// #2
    7174:	mov	x0, x19
    7178:	bl	5060 <mpfr_sqr@plt>
    717c:	mov	x1, x26
    7180:	mov	w2, #0x2                   	// #2
    7184:	mov	x0, x21
    7188:	bl	5060 <mpfr_sqr@plt>
    718c:	mov	w3, #0x2                   	// #2
    7190:	mov	x2, x21
    7194:	mov	x1, x19
    7198:	mov	x0, x19
    719c:	bl	4eb0 <mpfr_add@plt>
    71a0:	mov	x1, x19
    71a4:	mov	w2, #0x2                   	// #2
    71a8:	mov	x0, x19
    71ac:	bl	4dd0 <mpfr_log@plt>
    71b0:	mov	w3, #0x1                   	// #1
    71b4:	mov	x2, x24
    71b8:	mov	x1, #0x1                   	// #1
    71bc:	mov	x0, x20
    71c0:	bl	5480 <mpfr_ui_sub@plt>
    71c4:	mov	x1, x20
    71c8:	mov	w2, #0x1                   	// #1
    71cc:	mov	x0, x20
    71d0:	bl	5060 <mpfr_sqr@plt>
    71d4:	mov	x0, x21
    71d8:	bl	4bf0 <mpfr_nextbelow@plt>
    71dc:	mov	w3, #0x1                   	// #1
    71e0:	mov	x2, x21
    71e4:	mov	x1, x20
    71e8:	mov	x0, x20
    71ec:	bl	4eb0 <mpfr_add@plt>
    71f0:	mov	x1, x20
    71f4:	mov	w2, #0x1                   	// #1
    71f8:	mov	x0, x20
    71fc:	bl	4dd0 <mpfr_log@plt>
    7200:	mov	x2, x20
    7204:	mov	x1, x19
    7208:	mov	x0, x21
    720c:	mov	w3, #0x2                   	// #2
    7210:	bl	4aa0 <mpfr_sub@plt>
    7214:	ldr	x2, [sp, #256]
    7218:	cmp	x2, x27
    721c:	b.eq	7120 <mpc_atan@@Base+0x3f8>  // b.none
    7220:	ldr	x0, [sp, #160]
    7224:	mov	x23, #0x3                   	// #3
    7228:	ldr	x1, [sp, #192]
    722c:	sub	x23, x23, x2
    7230:	cmp	x1, x0
    7234:	csel	x0, x1, x0, ge  // ge = tcont
    7238:	sub	x0, x0, x2
    723c:	add	x0, x0, #0x1
    7240:	cmp	x0, x23
    7244:	b.gt	72e0 <mpc_atan@@Base+0x5b8>
    7248:	cmp	x23, #0x0
    724c:	csinv	x23, x23, xzr, ge  // ge = tcont
    7250:	add	x23, x23, #0x2
    7254:	mov	x1, x21
    7258:	mov	x0, x21
    725c:	mov	w3, #0x0                   	// #0
    7260:	mov	x2, #0x2                   	// #2
    7264:	bl	5370 <mpfr_div_2ui@plt>
    7268:	ldr	x0, [sp, #256]
    726c:	cmp	x0, x27
    7270:	b.eq	7660 <mpc_atan@@Base+0x938>  // b.none
    7274:	mov	x4, x28
    7278:	sub	x1, x25, x23
    727c:	mov	x0, x21
    7280:	mov	w3, #0x3                   	// #3
    7284:	mov	w2, #0x2                   	// #2
    7288:	bl	54a0 <mpfr_can_round@plt>
    728c:	cbz	w0, 7120 <mpc_atan@@Base+0x3f8>
    7290:	ldr	w3, [sp, #104]
    7294:	mov	x2, x21
    7298:	ldr	x0, [sp, #136]
    729c:	mov	x1, x22
    72a0:	bl	5540 <mpc_set_fr_fr@plt>
    72a4:	mov	w25, w0
    72a8:	mov	x3, x21
    72ac:	mov	x2, x22
    72b0:	mov	x1, x20
    72b4:	mov	x0, x19
    72b8:	mov	x4, #0x0                   	// #0
    72bc:	bl	4ec0 <mpfr_clears@plt>
    72c0:	mov	w0, w25
    72c4:	ldp	x19, x20, [sp, #16]
    72c8:	ldp	x21, x22, [sp, #32]
    72cc:	ldp	x23, x24, [sp, #48]
    72d0:	ldp	x25, x26, [sp, #64]
    72d4:	ldp	x27, x28, [sp, #80]
    72d8:	ldp	x29, x30, [sp], #304
    72dc:	ret
    72e0:	cmp	x0, #0x0
    72e4:	csinv	x23, x0, xzr, ge  // ge = tcont
    72e8:	add	x23, x23, #0x2
    72ec:	b	7254 <mpc_atan@@Base+0x52c>
    72f0:	ldr	w2, [sp, #104]
    72f4:	and	w2, w2, #0xf
    72f8:	bl	5200 <mpfr_atan@plt>
    72fc:	ldr	x1, [sp, #136]
    7300:	mov	w2, #0x1                   	// #1
    7304:	mov	w20, w0
    7308:	str	w2, [x1, #40]
    730c:	str	x19, [x1, #48]
    7310:	tbz	w22, #31, 7324 <mpc_atan@@Base+0x5fc>
    7314:	ldr	x1, [sp, #136]
    7318:	mov	w2, #0x0                   	// #0
    731c:	mov	x0, x1
    7320:	bl	4fb0 <mpc_conj@plt>
    7324:	cmp	w20, #0x0
    7328:	b.ge	7084 <mpc_atan@@Base+0x35c>  // b.tcont
    732c:	mov	w25, #0x2                   	// #2
    7330:	mov	w0, w25
    7334:	ldp	x19, x20, [sp, #16]
    7338:	ldp	x21, x22, [sp, #32]
    733c:	ldp	x23, x24, [sp, #48]
    7340:	ldp	x25, x26, [sp, #64]
    7344:	ldp	x29, x30, [sp], #304
    7348:	ret
    734c:	ldr	w0, [x26, #8]
    7350:	cmp	w0, #0x0
    7354:	b.gt	75b4 <mpc_atan@@Base+0x88c>
    7358:	tbz	w0, #31, 6ed4 <mpc_atan@@Base+0x1ac>
    735c:	mov	w0, #0x2                   	// #2
    7360:	stp	w0, w0, [sp, #128]
    7364:	b	6ee4 <mpc_atan@@Base+0x1bc>
    7368:	mov	x0, x24
    736c:	mov	x1, #0xffffffffffffffff    	// #-1
    7370:	bl	5030 <mpfr_cmp_si_2exp@plt>
    7374:	neg	w25, w0
    7378:	b	6db8 <mpc_atan@@Base+0x90>
    737c:	bl	4a80 <mpfr_set_nan@plt>
    7380:	ldr	x0, [x26, #48]
    7384:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    7388:	and	x0, x0, #0xfffffffffffffffd
    738c:	cmp	x0, x1
    7390:	b.ne	75e8 <mpc_atan@@Base+0x8c0>  // b.any
    7394:	ldr	x1, [sp, #136]
    7398:	mov	w2, #0x1                   	// #1
    739c:	mov	w25, #0x0                   	// #0
    73a0:	str	w2, [x1, #40]
    73a4:	str	x0, [x1, #48]
    73a8:	tbz	w22, #31, 6e18 <mpc_atan@@Base+0xf0>
    73ac:	ldr	x1, [sp, #136]
    73b0:	mov	w2, #0x0                   	// #0
    73b4:	mov	x0, x1
    73b8:	bl	4fb0 <mpc_conj@plt>
    73bc:	b	6e18 <mpc_atan@@Base+0xf0>
    73c0:	add	x21, sp, #0xf0
    73c4:	stp	x27, x28, [sp, #80]
    73c8:	mov	x0, x21
    73cc:	add	x27, sp, #0x110
    73d0:	bl	4ae0 <mpfr_init@plt>
    73d4:	mov	x0, x27
    73d8:	bl	4ae0 <mpfr_init@plt>
    73dc:	ldr	x0, [sp, #136]
    73e0:	cmp	w22, #0x0
    73e4:	mov	w25, #0x2                   	// #2
    73e8:	ldr	x28, [x0, #32]
    73ec:	mov	w0, #0x3                   	// #3
    73f0:	csel	w25, w25, w0, ge  // ge = tcont
    73f4:	ldr	w0, [sp, #104]
    73f8:	mov	x20, x28
    73fc:	asr	w26, w0, #4
    7400:	mov	x0, x20
    7404:	bl	4d70 <mpc_ceil_log2@plt>
    7408:	mov	x1, x0
    740c:	mov	x0, x21
    7410:	add	x1, x1, #0x2
    7414:	add	x20, x20, x1
    7418:	mov	x1, x20
    741c:	bl	4cd0 <mpfr_set_prec@plt>
    7420:	mov	x1, x20
    7424:	mov	x0, x27
    7428:	bl	4cd0 <mpfr_set_prec@plt>
    742c:	mov	w3, w25
    7430:	mov	x2, x24
    7434:	mov	x1, #0x1                   	// #1
    7438:	mov	x0, x21
    743c:	bl	4fc0 <mpfr_ui_div@plt>
    7440:	mov	w22, w0
    7444:	mov	x1, x21
    7448:	mov	w2, #0x2                   	// #2
    744c:	mov	x0, x27
    7450:	ldr	x19, [sp, #256]
    7454:	bl	5060 <mpfr_sqr@plt>
    7458:	mov	x0, x27
    745c:	mov	x2, #0x0                   	// #0
    7460:	mov	x1, #0x1                   	// #1
    7464:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    7468:	cmp	w0, #0x0
    746c:	b.gt	76c0 <mpc_atan@@Base+0x998>
    7470:	mov	x0, x27
    7474:	mov	x2, #0x0                   	// #0
    7478:	mov	x1, #0x1                   	// #1
    747c:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    7480:	cbz	w0, 7400 <mpc_atan@@Base+0x6d8>
    7484:	mov	w3, #0x1                   	// #1
    7488:	mov	x2, x27
    748c:	mov	x1, #0x1                   	// #1
    7490:	mov	x0, x27
    7494:	bl	5480 <mpfr_ui_sub@plt>
    7498:	mov	w2, w25
    749c:	mov	x1, x21
    74a0:	mov	x0, x21
    74a4:	bl	4de0 <mpfr_atanh@plt>
    74a8:	ldr	x2, [sp, #256]
    74ac:	orr	w22, w22, w0
    74b0:	ldr	x1, [sp, #288]
    74b4:	sub	x19, x19, x2
    74b8:	add	x19, x19, #0x1
    74bc:	mov	x0, #0x1                   	// #1
    74c0:	subs	x19, x19, x1
    74c4:	csinc	x19, x0, x19, mi  // mi = first
    74c8:	cbz	w22, 74ec <mpc_atan@@Base+0x7c4>
    74cc:	cmp	w26, #0x0
    74d0:	sub	x1, x20, x19
    74d4:	cinc	x4, x28, eq  // eq = none
    74d8:	mov	w2, w25
    74dc:	mov	x0, x21
    74e0:	mov	w3, #0x1                   	// #1
    74e4:	bl	54a0 <mpfr_can_round@plt>
    74e8:	cbz	w0, 7400 <mpc_atan@@Base+0x6d8>
    74ec:	ldr	x19, [sp, #136]
    74f0:	neg	w1, w23
    74f4:	ldr	w0, [sp, #104]
    74f8:	and	w2, w0, #0xf
    74fc:	mov	x0, x19
    7500:	bl	5440 <set_pi_over_2@plt>
    7504:	mov	w20, w0
    7508:	ldr	w3, [sp, #248]
    750c:	mov	w2, w26
    7510:	mov	x1, x21
    7514:	add	x0, x19, #0x20
    7518:	bl	5220 <mpfr_set4@plt>
    751c:	mov	w19, w0
    7520:	mov	x0, x21
    7524:	bl	4db0 <mpfr_clear@plt>
    7528:	mov	x0, x27
    752c:	bl	4db0 <mpfr_clear@plt>
    7530:	ldp	x27, x28, [sp, #80]
    7534:	cmp	w20, #0x0
    7538:	cset	w25, ne  // ne = any
    753c:	mov	w0, #0x2                   	// #2
    7540:	csel	w25, w25, w0, ge  // ge = tcont
    7544:	cmp	w19, #0x0
    7548:	mov	w2, w25
    754c:	orr	w1, w25, #0x4
    7550:	orr	w25, w25, #0x8
    7554:	csel	w1, w1, w2, ne  // ne = any
    7558:	csel	w25, w1, w25, ge  // ge = tcont
    755c:	mov	w0, w25
    7560:	ldp	x19, x20, [sp, #16]
    7564:	ldp	x21, x22, [sp, #32]
    7568:	ldp	x23, x24, [sp, #48]
    756c:	ldp	x25, x26, [sp, #64]
    7570:	ldp	x29, x30, [sp], #304
    7574:	ret
    7578:	ldr	x2, [sp, #136]
    757c:	mov	w1, #0x1                   	// #1
    7580:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    7584:	str	w1, [x2, #8]
    7588:	str	x0, [x2, #16]
    758c:	tbnz	w20, #31, 75c0 <mpc_atan@@Base+0x898>
    7590:	ldr	w0, [sp, #104]
    7594:	mov	x1, x24
    7598:	mov	w25, #0x0                   	// #0
    759c:	asr	w2, w0, #4
    75a0:	ldr	x0, [sp, #136]
    75a4:	add	x0, x0, #0x20
    75a8:	bl	4de0 <mpfr_atanh@plt>
    75ac:	mov	w19, w0
    75b0:	b	7544 <mpc_atan@@Base+0x81c>
    75b4:	mov	w0, #0x3                   	// #3
    75b8:	stp	w0, w0, [sp, #128]
    75bc:	b	6ee4 <mpc_atan@@Base+0x1bc>
    75c0:	ldr	x0, [sp, #136]
    75c4:	mov	w2, #0x0                   	// #0
    75c8:	mov	x1, x0
    75cc:	bl	4bc0 <mpfr_neg@plt>
    75d0:	b	7590 <mpc_atan@@Base+0x868>
    75d4:	ldr	x1, [sp, #136]
    75d8:	mov	w2, #0x0                   	// #0
    75dc:	mov	x0, x1
    75e0:	bl	4fb0 <mpc_conj@plt>
    75e4:	b	707c <mpc_atan@@Base+0x354>
    75e8:	ldr	x0, [sp, #136]
    75ec:	mov	w25, #0x0                   	// #0
    75f0:	add	x0, x0, #0x20
    75f4:	bl	4a80 <mpfr_set_nan@plt>
    75f8:	b	6e18 <mpc_atan@@Base+0xf0>
    75fc:	bl	4b40 <mpfr_set_erangeflag@plt>
    7600:	ldr	x0, [x26, #16]
    7604:	cmp	x0, x25
    7608:	b.ge	76f0 <mpc_atan@@Base+0x9c8>  // b.tcont
    760c:	ldr	x1, [sp, #112]
    7610:	cmp	x0, x1
    7614:	b.ne	6ed4 <mpc_atan@@Base+0x1ac>  // b.any
    7618:	bl	4b40 <mpfr_set_erangeflag@plt>
    761c:	mov	w0, #0x2                   	// #2
    7620:	str	w0, [sp, #128]
    7624:	mov	w0, #0x3                   	// #3
    7628:	str	w0, [sp, #132]
    762c:	b	6ee4 <mpc_atan@@Base+0x1bc>
    7630:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    7634:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    7638:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    763c:	add	x4, x4, #0x360
    7640:	ldr	x0, [x0, #4008]
    7644:	add	x2, x2, #0x358
    7648:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    764c:	add	x1, x1, #0x318
    7650:	mov	w3, #0x113                 	// #275
    7654:	ldr	x0, [x0]
    7658:	bl	55f0 <fprintf@plt>
    765c:	bl	5050 <abort@plt>
    7660:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    7664:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    7668:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    766c:	add	x4, x4, #0x3b0
    7670:	ldr	x0, [x0, #4008]
    7674:	add	x2, x2, #0x358
    7678:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    767c:	add	x1, x1, #0x318
    7680:	mov	w3, #0x17b                 	// #379
    7684:	ldr	x0, [x0]
    7688:	bl	55f0 <fprintf@plt>
    768c:	bl	5050 <abort@plt>
    7690:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    7694:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    7698:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    769c:	add	x4, x4, #0x388
    76a0:	ldr	x0, [x0, #4008]
    76a4:	add	x2, x2, #0x358
    76a8:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    76ac:	add	x1, x1, #0x318
    76b0:	mov	w3, #0x122                 	// #290
    76b4:	ldr	x0, [x0]
    76b8:	bl	55f0 <fprintf@plt>
    76bc:	bl	5050 <abort@plt>
    76c0:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    76c4:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    76c8:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    76cc:	add	x4, x4, #0x340
    76d0:	ldr	x0, [x0, #4008]
    76d4:	add	x2, x2, #0x358
    76d8:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    76dc:	add	x1, x1, #0x318
    76e0:	mov	w3, #0xba                  	// #186
    76e4:	ldr	x0, [x0]
    76e8:	bl	55f0 <fprintf@plt>
    76ec:	bl	5050 <abort@plt>
    76f0:	ldr	w0, [x26, #8]
    76f4:	b	7358 <mpc_atan@@Base+0x630>

00000000000076f8 <mpc_atanh@@Base>:
    76f8:	mov	x3, x1
    76fc:	stp	x29, x30, [sp, #-208]!
    7700:	mov	x29, sp
    7704:	ldp	x6, x7, [x3, #32]
    7708:	stp	x6, x7, [sp, #80]
    770c:	ldp	x8, x9, [x3]
    7710:	stp	x19, x20, [sp, #16]
    7714:	mov	x20, x0
    7718:	ldp	x4, x5, [x3, #16]
    771c:	stp	x21, x22, [sp, #32]
    7720:	add	x22, sp, #0x50
    7724:	ldp	x6, x7, [x3, #48]
    7728:	mov	w21, w2
    772c:	mov	x1, x22
    7730:	mov	w2, #0x0                   	// #0
    7734:	mov	x0, x22
    7738:	stp	x6, x7, [sp, #96]
    773c:	add	x19, sp, #0x90
    7740:	stp	x8, x9, [sp, #112]
    7744:	stp	x4, x5, [sp, #128]
    7748:	bl	4bc0 <mpfr_neg@plt>
    774c:	mov	x0, x19
    7750:	ldr	x2, [x20]
    7754:	ldr	x1, [x20, #32]
    7758:	bl	5410 <mpc_init3@plt>
    775c:	asr	w0, w21, #4
    7760:	cmp	w0, #0x2
    7764:	b.eq	781c <mpc_atanh@@Base+0x124>  // b.none
    7768:	cmp	w0, #0x3
    776c:	mov	w1, #0x2                   	// #2
    7770:	csel	w0, w0, w1, ne  // ne = any
    7774:	ubfiz	w2, w21, #4, #4
    7778:	mov	x1, x22
    777c:	add	w2, w2, w0
    7780:	mov	x0, x19
    7784:	bl	5460 <mpc_atan@plt>
    7788:	mov	w22, w0
    778c:	ldp	x10, x11, [sp, #144]
    7790:	add	x1, x19, #0x20
    7794:	ldp	x8, x9, [sp, #160]
    7798:	mov	x0, x1
    779c:	ldp	x6, x7, [sp, #176]
    77a0:	mov	w2, #0x0                   	// #0
    77a4:	ldp	x4, x5, [sp, #192]
    77a8:	stp	x6, x7, [sp, #144]
    77ac:	stp	x4, x5, [sp, #160]
    77b0:	stp	x10, x11, [sp, #176]
    77b4:	stp	x8, x9, [sp, #192]
    77b8:	bl	4bc0 <mpfr_neg@plt>
    77bc:	mov	w2, w21
    77c0:	mov	x1, x19
    77c4:	mov	x0, x20
    77c8:	bl	55d0 <mpc_set@plt>
    77cc:	mov	x0, x19
    77d0:	bl	4a50 <mpc_clear@plt>
    77d4:	asr	w0, w22, #2
    77d8:	cmp	w0, #0x2
    77dc:	b.eq	77e8 <mpc_atanh@@Base+0xf0>  // b.none
    77e0:	cmp	w0, #0x0
    77e4:	cset	w0, ne  // ne = any
    77e8:	tbz	w22, #0, 7800 <mpc_atanh@@Base+0x108>
    77ec:	orr	w0, w0, #0x8
    77f0:	ldp	x19, x20, [sp, #16]
    77f4:	ldp	x21, x22, [sp, #32]
    77f8:	ldp	x29, x30, [sp], #208
    77fc:	ret
    7800:	tst	x22, #0x3
    7804:	orr	w1, w0, #0x4
    7808:	csel	w0, w1, w0, ne  // ne = any
    780c:	ldp	x19, x20, [sp, #16]
    7810:	ldp	x21, x22, [sp, #32]
    7814:	ldp	x29, x30, [sp], #208
    7818:	ret
    781c:	mov	w0, #0x3                   	// #3
    7820:	b	7774 <mpc_atanh@@Base+0x7c>
    7824:	nop

0000000000007828 <mpc_clear@@Base>:
    7828:	stp	x29, x30, [sp, #-32]!
    782c:	mov	x29, sp
    7830:	str	x19, [sp, #16]
    7834:	mov	x19, x0
    7838:	bl	4db0 <mpfr_clear@plt>
    783c:	add	x0, x19, #0x20
    7840:	ldr	x19, [sp, #16]
    7844:	ldp	x29, x30, [sp], #32
    7848:	b	4db0 <mpfr_clear@plt>
    784c:	nop

0000000000007850 <mpc_cmp@@Base>:
    7850:	stp	x29, x30, [sp, #-48]!
    7854:	mov	w2, #0x1                   	// #1
    7858:	mov	x29, sp
    785c:	stp	x19, x20, [sp, #16]
    7860:	mov	x20, x0
    7864:	str	x21, [sp, #32]
    7868:	mov	x21, x1
    786c:	bl	53f0 <mpfr_cmp3@plt>
    7870:	mov	w19, w0
    7874:	add	x1, x21, #0x20
    7878:	add	x0, x20, #0x20
    787c:	mov	w2, #0x1                   	// #1
    7880:	bl	53f0 <mpfr_cmp3@plt>
    7884:	cmp	w19, #0x0
    7888:	mov	w2, #0x2                   	// #2
    788c:	cset	w1, ne  // ne = any
    7890:	csel	w1, w1, w2, ge  // ge = tcont
    7894:	cmp	w0, #0x0
    7898:	orr	w2, w1, #0x4
    789c:	csel	w2, w2, w1, ne  // ne = any
    78a0:	orr	w1, w1, #0x8
    78a4:	csel	w1, w2, w1, ge  // ge = tcont
    78a8:	mov	w0, w1
    78ac:	ldp	x19, x20, [sp, #16]
    78b0:	ldr	x21, [sp, #32]
    78b4:	ldp	x29, x30, [sp], #48
    78b8:	ret
    78bc:	nop

00000000000078c0 <mpc_cmp_abs@@Base>:
    78c0:	stp	x29, x30, [sp, #-272]!
    78c4:	mov	x29, sp
    78c8:	stp	x19, x20, [sp, #16]
    78cc:	mov	x20, x0
    78d0:	mov	x0, #0x2                   	// #2
    78d4:	movk	x0, #0x8000, lsl #48
    78d8:	ldr	x2, [x20, #16]
    78dc:	cmp	x2, x0
    78e0:	b.eq	794c <mpc_cmp_abs@@Base+0x8c>  // b.none
    78e4:	ldr	x3, [x20, #48]
    78e8:	cmp	x3, x0
    78ec:	b.eq	794c <mpc_cmp_abs@@Base+0x8c>  // b.none
    78f0:	stp	x21, x22, [sp, #32]
    78f4:	mov	x21, x1
    78f8:	ldr	x1, [x1, #16]
    78fc:	cmp	x1, x0
    7900:	b.eq	7948 <mpc_cmp_abs@@Base+0x88>  // b.none
    7904:	ldr	x4, [x21, #48]
    7908:	cmp	x4, x0
    790c:	b.eq	7948 <mpc_cmp_abs@@Base+0x88>  // b.none
    7910:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7914:	cmp	x4, x0
    7918:	cset	w19, eq  // eq = none
    791c:	cmp	x1, x0
    7920:	csinc	w19, w19, wzr, ne  // ne = any
    7924:	cmp	x2, x0
    7928:	ccmp	x3, x0, #0x4, ne  // ne = any
    792c:	b.ne	798c <mpc_cmp_abs@@Base+0xcc>  // b.any
    7930:	eor	w19, w19, #0x1
    7934:	mov	w0, w19
    7938:	ldp	x19, x20, [sp, #16]
    793c:	ldp	x21, x22, [sp, #32]
    7940:	ldp	x29, x30, [sp], #272
    7944:	ret
    7948:	ldp	x21, x22, [sp, #32]
    794c:	add	x20, sp, #0xd0
    7950:	mov	x0, x20
    7954:	bl	4ae0 <mpfr_init@plt>
    7958:	mov	x0, x20
    795c:	bl	4a80 <mpfr_set_nan@plt>
    7960:	mov	x1, x20
    7964:	mov	w2, #0x1                   	// #1
    7968:	mov	x0, x20
    796c:	bl	53f0 <mpfr_cmp3@plt>
    7970:	mov	w19, w0
    7974:	mov	x0, x20
    7978:	bl	4db0 <mpfr_clear@plt>
    797c:	mov	w0, w19
    7980:	ldp	x19, x20, [sp, #16]
    7984:	ldp	x29, x30, [sp], #272
    7988:	ret
    798c:	cbnz	w19, 7c0c <mpc_cmp_abs@@Base+0x34c>
    7990:	ldp	x2, x3, [x20]
    7994:	stp	x2, x3, [sp, #144]
    7998:	ldr	w0, [x20, #8]
    799c:	ldp	x2, x3, [x21]
    79a0:	stp	x2, x3, [sp, #208]
    79a4:	ldp	x2, x3, [x20, #16]
    79a8:	stp	x2, x3, [sp, #160]
    79ac:	ldp	x2, x3, [x21, #16]
    79b0:	stp	x2, x3, [sp, #224]
    79b4:	ldp	x2, x3, [x20, #32]
    79b8:	stp	x2, x3, [sp, #176]
    79bc:	ldp	x2, x3, [x21, #32]
    79c0:	stp	x2, x3, [sp, #240]
    79c4:	ldp	x2, x3, [x20, #48]
    79c8:	stp	x2, x3, [sp, #192]
    79cc:	ldp	x2, x3, [x21, #48]
    79d0:	stp	x23, x24, [sp, #48]
    79d4:	add	x23, sp, #0x90
    79d8:	stp	x2, x3, [sp, #256]
    79dc:	tbnz	w0, #31, 7bd8 <mpc_cmp_abs@@Base+0x318>
    79e0:	ldr	w0, [x20, #40]
    79e4:	tbnz	w0, #31, 7bc4 <mpc_cmp_abs@@Base+0x304>
    79e8:	ldr	w0, [x21, #8]
    79ec:	add	x24, sp, #0xd0
    79f0:	tbnz	w0, #31, 7bb0 <mpc_cmp_abs@@Base+0x2f0>
    79f4:	ldr	w0, [x21, #40]
    79f8:	tbnz	w0, #31, 7b9c <mpc_cmp_abs@@Base+0x2dc>
    79fc:	add	x19, x23, #0x20
    7a00:	mov	x0, x23
    7a04:	mov	x1, x19
    7a08:	mov	w2, #0x1                   	// #1
    7a0c:	bl	53f0 <mpfr_cmp3@plt>
    7a10:	cmp	w0, #0x0
    7a14:	b.le	7a24 <mpc_cmp_abs@@Base+0x164>
    7a18:	mov	x1, x19
    7a1c:	mov	x0, x23
    7a20:	bl	50e0 <mpfr_swap@plt>
    7a24:	add	x19, x24, #0x20
    7a28:	mov	x0, x24
    7a2c:	mov	x1, x19
    7a30:	mov	w2, #0x1                   	// #1
    7a34:	bl	53f0 <mpfr_cmp3@plt>
    7a38:	cmp	w0, #0x0
    7a3c:	b.le	7a4c <mpc_cmp_abs@@Base+0x18c>
    7a40:	mov	x1, x19
    7a44:	mov	x0, x24
    7a48:	bl	50e0 <mpfr_swap@plt>
    7a4c:	mov	x1, x24
    7a50:	mov	x0, x23
    7a54:	mov	w2, #0x1                   	// #1
    7a58:	bl	53f0 <mpfr_cmp3@plt>
    7a5c:	cbz	w0, 7b70 <mpc_cmp_abs@@Base+0x2b0>
    7a60:	add	x1, x24, #0x20
    7a64:	add	x0, x23, #0x20
    7a68:	mov	w2, #0x1                   	// #1
    7a6c:	bl	53f0 <mpfr_cmp3@plt>
    7a70:	cbz	w0, 7bec <mpc_cmp_abs@@Base+0x32c>
    7a74:	add	x22, sp, #0x50
    7a78:	add	x21, sp, #0x70
    7a7c:	mov	x0, x22
    7a80:	stp	x25, x26, [sp, #64]
    7a84:	bl	4ae0 <mpfr_init@plt>
    7a88:	mov	x0, x21
    7a8c:	bl	4ae0 <mpfr_init@plt>
    7a90:	ldr	x3, [sp, #144]
    7a94:	mov	x4, #0x1387                	// #4999
    7a98:	ldr	x0, [sp, #176]
    7a9c:	mov	x20, #0x32                  	// #50
    7aa0:	ldr	x2, [sp, #208]
    7aa4:	cmp	x0, x3
    7aa8:	ldr	x1, [sp, #240]
    7aac:	csel	x0, x0, x3, ge  // ge = tcont
    7ab0:	cmp	x1, x2
    7ab4:	csel	x1, x1, x2, ge  // ge = tcont
    7ab8:	cmp	x0, x1
    7abc:	csel	x0, x0, x1, ge  // ge = tcont
    7ac0:	cmp	x0, x4
    7ac4:	b.le	7af4 <mpc_cmp_abs@@Base+0x234>
    7ac8:	mov	x20, #0xd70b                	// #55051
    7acc:	movk	x20, #0x70a3, lsl #16
    7ad0:	movk	x20, #0xa3d, lsl #32
    7ad4:	movk	x20, #0xa3d7, lsl #48
    7ad8:	smulh	x20, x0, x20
    7adc:	add	x20, x20, x0
    7ae0:	asr	x20, x20, #6
    7ae4:	sub	x20, x20, x0, asr #63
    7ae8:	b	7af4 <mpc_cmp_abs@@Base+0x234>
    7aec:	cbz	w26, 7bf8 <mpc_cmp_abs@@Base+0x338>
    7af0:	cbz	w25, 7c04 <mpc_cmp_abs@@Base+0x344>
    7af4:	mov	x1, x20
    7af8:	mov	x0, x22
    7afc:	bl	4cd0 <mpfr_set_prec@plt>
    7b00:	mov	x1, x20
    7b04:	mov	x0, x21
    7b08:	bl	4cd0 <mpfr_set_prec@plt>
    7b0c:	lsl	x20, x20, #1
    7b10:	mov	x1, x23
    7b14:	mov	w2, #0x3                   	// #3
    7b18:	mov	x0, x22
    7b1c:	bl	4ef0 <mpc_norm@plt>
    7b20:	mov	x1, x24
    7b24:	mov	w2, #0x3                   	// #3
    7b28:	mov	w26, w0
    7b2c:	mov	x0, x21
    7b30:	bl	4ef0 <mpc_norm@plt>
    7b34:	mov	w25, w0
    7b38:	mov	x1, x21
    7b3c:	mov	x0, x22
    7b40:	mov	w2, #0x1                   	// #1
    7b44:	bl	53f0 <mpfr_cmp3@plt>
    7b48:	mov	w19, w0
    7b4c:	cbz	w0, 7aec <mpc_cmp_abs@@Base+0x22c>
    7b50:	mov	x0, x22
    7b54:	bl	4db0 <mpfr_clear@plt>
    7b58:	mov	x0, x21
    7b5c:	bl	4db0 <mpfr_clear@plt>
    7b60:	ldp	x21, x22, [sp, #32]
    7b64:	ldp	x23, x24, [sp, #48]
    7b68:	ldp	x25, x26, [sp, #64]
    7b6c:	b	797c <mpc_cmp_abs@@Base+0xbc>
    7b70:	add	x1, x24, #0x20
    7b74:	add	x0, x23, #0x20
    7b78:	mov	w2, #0x1                   	// #1
    7b7c:	bl	53f0 <mpfr_cmp3@plt>
    7b80:	mov	w19, w0
    7b84:	mov	w0, w19
    7b88:	ldp	x19, x20, [sp, #16]
    7b8c:	ldp	x21, x22, [sp, #32]
    7b90:	ldp	x23, x24, [sp, #48]
    7b94:	ldp	x29, x30, [sp], #272
    7b98:	ret
    7b9c:	add	x1, x24, #0x20
    7ba0:	mov	w2, #0x0                   	// #0
    7ba4:	mov	x0, x1
    7ba8:	bl	4bc0 <mpfr_neg@plt>
    7bac:	b	79fc <mpc_cmp_abs@@Base+0x13c>
    7bb0:	mov	x1, x24
    7bb4:	mov	x0, x24
    7bb8:	mov	w2, #0x0                   	// #0
    7bbc:	bl	4bc0 <mpfr_neg@plt>
    7bc0:	b	79f4 <mpc_cmp_abs@@Base+0x134>
    7bc4:	add	x1, x23, #0x20
    7bc8:	mov	w2, #0x0                   	// #0
    7bcc:	mov	x0, x1
    7bd0:	bl	4bc0 <mpfr_neg@plt>
    7bd4:	b	79e8 <mpc_cmp_abs@@Base+0x128>
    7bd8:	mov	x1, x23
    7bdc:	mov	x0, x23
    7be0:	mov	w2, #0x0                   	// #0
    7be4:	bl	4bc0 <mpfr_neg@plt>
    7be8:	b	79e0 <mpc_cmp_abs@@Base+0x120>
    7bec:	mov	x1, x24
    7bf0:	mov	x0, x23
    7bf4:	b	7b78 <mpc_cmp_abs@@Base+0x2b8>
    7bf8:	cmp	w25, #0x0
    7bfc:	csetm	w19, ne  // ne = any
    7c00:	b	7b50 <mpc_cmp_abs@@Base+0x290>
    7c04:	mov	w19, #0x1                   	// #1
    7c08:	b	7b50 <mpc_cmp_abs@@Base+0x290>
    7c0c:	mov	w19, #0xffffffff            	// #-1
    7c10:	ldp	x21, x22, [sp, #32]
    7c14:	b	797c <mpc_cmp_abs@@Base+0xbc>

0000000000007c18 <mpc_cmp_si_si@@Base>:
    7c18:	stp	x29, x30, [sp, #-48]!
    7c1c:	mov	x29, sp
    7c20:	stp	x19, x20, [sp, #16]
    7c24:	mov	x20, x0
    7c28:	str	x21, [sp, #32]
    7c2c:	mov	x21, x2
    7c30:	mov	x2, #0x0                   	// #0
    7c34:	bl	5030 <mpfr_cmp_si_2exp@plt>
    7c38:	mov	x1, x21
    7c3c:	mov	w19, w0
    7c40:	mov	x2, #0x0                   	// #0
    7c44:	add	x0, x20, #0x20
    7c48:	bl	5030 <mpfr_cmp_si_2exp@plt>
    7c4c:	cmp	w19, #0x0
    7c50:	mov	w2, #0x2                   	// #2
    7c54:	cset	w1, ne  // ne = any
    7c58:	csel	w1, w1, w2, ge  // ge = tcont
    7c5c:	cmp	w0, #0x0
    7c60:	orr	w2, w1, #0x4
    7c64:	csel	w2, w2, w1, ne  // ne = any
    7c68:	orr	w1, w1, #0x8
    7c6c:	csel	w1, w2, w1, ge  // ge = tcont
    7c70:	mov	w0, w1
    7c74:	ldp	x19, x20, [sp, #16]
    7c78:	ldr	x21, [sp, #32]
    7c7c:	ldp	x29, x30, [sp], #48
    7c80:	ret
    7c84:	nop

0000000000007c88 <mpc_conj@@Base>:
    7c88:	stp	x29, x30, [sp, #-48]!
    7c8c:	mov	x29, sp
    7c90:	ldr	w3, [x1, #8]
    7c94:	stp	x21, x22, [sp, #32]
    7c98:	mov	w21, w2
    7c9c:	mov	x22, x0
    7ca0:	and	w2, w2, #0xf
    7ca4:	stp	x19, x20, [sp, #16]
    7ca8:	mov	x20, x1
    7cac:	bl	5220 <mpfr_set4@plt>
    7cb0:	mov	w19, w0
    7cb4:	asr	w2, w21, #4
    7cb8:	add	x1, x20, #0x20
    7cbc:	add	x0, x22, #0x20
    7cc0:	bl	4bc0 <mpfr_neg@plt>
    7cc4:	cmp	w19, #0x0
    7cc8:	mov	w2, #0x2                   	// #2
    7ccc:	cset	w1, ne  // ne = any
    7cd0:	csel	w1, w1, w2, ge  // ge = tcont
    7cd4:	cmp	w0, #0x0
    7cd8:	orr	w3, w1, #0x4
    7cdc:	orr	w2, w1, #0x8
    7ce0:	csel	w1, w3, w1, ne  // ne = any
    7ce4:	csel	w1, w1, w2, ge  // ge = tcont
    7ce8:	mov	w0, w1
    7cec:	ldp	x19, x20, [sp, #16]
    7cf0:	ldp	x21, x22, [sp, #32]
    7cf4:	ldp	x29, x30, [sp], #48
    7cf8:	ret
    7cfc:	nop

0000000000007d00 <mpc_cos@@Base>:
    7d00:	stp	x29, x30, [sp, #-16]!
    7d04:	mov	x3, x1
    7d08:	mov	w4, w2
    7d0c:	mov	x29, sp
    7d10:	mov	x1, x0
    7d14:	mov	x2, x3
    7d18:	mov	w3, #0x0                   	// #0
    7d1c:	mov	x0, #0x0                   	// #0
    7d20:	bl	5190 <mpc_sin_cos@plt>
    7d24:	asr	w0, w0, #4
    7d28:	ldp	x29, x30, [sp], #16
    7d2c:	ret

0000000000007d30 <mpc_cosh@@Base>:
    7d30:	mov	x3, x1
    7d34:	stp	x29, x30, [sp, #-112]!
    7d38:	mov	x29, sp
    7d3c:	ldp	x6, x7, [x3, #32]
    7d40:	stp	x6, x7, [sp, #48]
    7d44:	ldp	x8, x9, [x3]
    7d48:	stp	x19, x20, [sp, #16]
    7d4c:	add	x19, sp, #0x30
    7d50:	ldp	x4, x5, [x3, #16]
    7d54:	mov	x20, x0
    7d58:	ldp	x6, x7, [x3, #48]
    7d5c:	mov	x1, x19
    7d60:	mov	x0, x19
    7d64:	str	x21, [sp, #32]
    7d68:	mov	w21, w2
    7d6c:	mov	w2, #0x0                   	// #0
    7d70:	stp	x6, x7, [sp, #64]
    7d74:	stp	x8, x9, [sp, #80]
    7d78:	stp	x4, x5, [sp, #96]
    7d7c:	bl	4bc0 <mpfr_neg@plt>
    7d80:	mov	w2, w21
    7d84:	mov	x1, x19
    7d88:	mov	x0, x20
    7d8c:	bl	5430 <mpc_cos@plt>
    7d90:	ldp	x19, x20, [sp, #16]
    7d94:	ldr	x21, [sp, #32]
    7d98:	ldp	x29, x30, [sp], #112
    7d9c:	ret

0000000000007da0 <mpc_div_2si@@Base>:
    7da0:	stp	x29, x30, [sp, #-64]!
    7da4:	mov	x29, sp
    7da8:	stp	x19, x20, [sp, #16]
    7dac:	mov	w20, w3
    7db0:	and	w3, w3, #0xf
    7db4:	stp	x21, x22, [sp, #32]
    7db8:	mov	x21, x0
    7dbc:	mov	x22, x1
    7dc0:	str	x23, [sp, #48]
    7dc4:	mov	x23, x2
    7dc8:	bl	5080 <mpfr_div_2si@plt>
    7dcc:	mov	w19, w0
    7dd0:	asr	w3, w20, #4
    7dd4:	mov	x2, x23
    7dd8:	add	x1, x22, #0x20
    7ddc:	add	x0, x21, #0x20
    7de0:	bl	5080 <mpfr_div_2si@plt>
    7de4:	cmp	w19, #0x0
    7de8:	mov	w2, #0x2                   	// #2
    7dec:	cset	w1, ne  // ne = any
    7df0:	csel	w1, w1, w2, ge  // ge = tcont
    7df4:	cmp	w0, #0x0
    7df8:	orr	w3, w1, #0x4
    7dfc:	orr	w2, w1, #0x8
    7e00:	csel	w1, w3, w1, ne  // ne = any
    7e04:	csel	w1, w1, w2, ge  // ge = tcont
    7e08:	mov	w0, w1
    7e0c:	ldp	x19, x20, [sp, #16]
    7e10:	ldp	x21, x22, [sp, #32]
    7e14:	ldr	x23, [sp, #48]
    7e18:	ldp	x29, x30, [sp], #64
    7e1c:	ret

0000000000007e20 <mpc_div_2ui@@Base>:
    7e20:	stp	x29, x30, [sp, #-64]!
    7e24:	mov	x29, sp
    7e28:	stp	x19, x20, [sp, #16]
    7e2c:	mov	w20, w3
    7e30:	and	w3, w3, #0xf
    7e34:	stp	x21, x22, [sp, #32]
    7e38:	mov	x21, x0
    7e3c:	mov	x22, x1
    7e40:	str	x23, [sp, #48]
    7e44:	mov	x23, x2
    7e48:	bl	5370 <mpfr_div_2ui@plt>
    7e4c:	mov	w19, w0
    7e50:	asr	w3, w20, #4
    7e54:	mov	x2, x23
    7e58:	add	x1, x22, #0x20
    7e5c:	add	x0, x21, #0x20
    7e60:	bl	5370 <mpfr_div_2ui@plt>
    7e64:	cmp	w19, #0x0
    7e68:	mov	w2, #0x2                   	// #2
    7e6c:	cset	w1, ne  // ne = any
    7e70:	csel	w1, w1, w2, ge  // ge = tcont
    7e74:	cmp	w0, #0x0
    7e78:	orr	w3, w1, #0x4
    7e7c:	orr	w2, w1, #0x8
    7e80:	csel	w1, w3, w1, ne  // ne = any
    7e84:	csel	w1, w1, w2, ge  // ge = tcont
    7e88:	mov	w0, w1
    7e8c:	ldp	x19, x20, [sp, #16]
    7e90:	ldp	x21, x22, [sp, #32]
    7e94:	ldr	x23, [sp, #48]
    7e98:	ldp	x29, x30, [sp], #64
    7e9c:	ret

0000000000007ea0 <mpc_div@@Base>:
    7ea0:	stp	x29, x30, [sp, #-480]!
    7ea4:	mov	x29, sp
    7ea8:	stp	x19, x20, [sp, #16]
    7eac:	mov	x20, x2
    7eb0:	mov	x19, x1
    7eb4:	stp	x23, x24, [sp, #48]
    7eb8:	mov	x23, x0
    7ebc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    7ec0:	ldr	x0, [x2, #16]
    7ec4:	and	w2, w3, #0xf
    7ec8:	stp	x21, x22, [sp, #32]
    7ecc:	mov	w22, w3
    7ed0:	cmp	x0, x1
    7ed4:	str	w2, [sp, #112]
    7ed8:	asr	w2, w3, #4
    7edc:	str	w2, [sp, #152]
    7ee0:	b.eq	842c <mpc_div@@Base+0x58c>  // b.none
    7ee4:	ldr	x1, [x19, #16]
    7ee8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7eec:	cmp	x1, x0
    7ef0:	b.eq	8360 <mpc_div@@Base+0x4c0>  // b.none
    7ef4:	ldr	x1, [x19, #48]
    7ef8:	cmp	x1, x0
    7efc:	b.eq	8360 <mpc_div@@Base+0x4c0>  // b.none
    7f00:	mov	x0, x19
    7f04:	bl	5520 <mpfr_number_p@plt>
    7f08:	cbz	w0, 7f38 <mpc_div@@Base+0x98>
    7f0c:	add	x21, x19, #0x20
    7f10:	mov	x0, x21
    7f14:	bl	5520 <mpfr_number_p@plt>
    7f18:	cbz	w0, 7f38 <mpc_div@@Base+0x98>
    7f1c:	ldr	x1, [x20, #16]
    7f20:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    7f24:	cmp	x1, x0
    7f28:	b.eq	849c <mpc_div@@Base+0x5fc>  // b.none
    7f2c:	ldr	x1, [x20, #48]
    7f30:	cmp	x1, x0
    7f34:	b.eq	849c <mpc_div@@Base+0x5fc>  // b.none
    7f38:	mov	x0, x19
    7f3c:	bl	5520 <mpfr_number_p@plt>
    7f40:	cbz	w0, 7f54 <mpc_div@@Base+0xb4>
    7f44:	add	x21, x19, #0x20
    7f48:	mov	x0, x21
    7f4c:	bl	5520 <mpfr_number_p@plt>
    7f50:	cbnz	w0, 7f74 <mpc_div@@Base+0xd4>
    7f54:	mov	x0, x23
    7f58:	bl	4f40 <mpc_set_nan@plt>
    7f5c:	mov	w0, #0x0                   	// #0
    7f60:	ldp	x19, x20, [sp, #16]
    7f64:	ldp	x21, x22, [sp, #32]
    7f68:	ldp	x23, x24, [sp, #48]
    7f6c:	ldp	x29, x30, [sp], #480
    7f70:	ret
    7f74:	mov	x0, x20
    7f78:	bl	5520 <mpfr_number_p@plt>
    7f7c:	cbz	w0, 7f54 <mpc_div@@Base+0xb4>
    7f80:	stp	x27, x28, [sp, #80]
    7f84:	add	x28, x20, #0x20
    7f88:	mov	x0, x28
    7f8c:	bl	5520 <mpfr_number_p@plt>
    7f90:	cbz	w0, 8950 <mpc_div@@Base+0xab0>
    7f94:	ldr	x24, [x20, #48]
    7f98:	stp	x25, x26, [sp, #64]
    7f9c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    7fa0:	cmp	x24, x2
    7fa4:	b.eq	8d08 <mpc_div@@Base+0xe68>  // b.none
    7fa8:	ldr	x0, [x20, #16]
    7fac:	cmp	x0, x2
    7fb0:	b.eq	8a74 <mpc_div@@Base+0xbd4>  // b.none
    7fb4:	ldr	x3, [x23]
    7fb8:	mov	x1, #0x2                   	// #2
    7fbc:	ldr	x27, [x23, #32]
    7fc0:	add	x26, sp, #0x160
    7fc4:	mov	x0, x26
    7fc8:	add	x21, sp, #0x1a0
    7fcc:	cmp	x27, x3
    7fd0:	add	x25, sp, #0x140
    7fd4:	csel	x27, x27, x3, ge  // ge = tcont
    7fd8:	str	x21, [sp, #128]
    7fdc:	str	wzr, [sp, #136]
    7fe0:	mov	w24, #0x0                   	// #0
    7fe4:	str	wzr, [sp, #156]
    7fe8:	str	x2, [sp, #160]
    7fec:	bl	4d40 <mpc_init2@plt>
    7ff0:	mov	x0, x25
    7ff4:	bl	4ae0 <mpfr_init@plt>
    7ff8:	ldp	x4, x5, [x20]
    7ffc:	stp	x4, x5, [sp, #416]
    8000:	add	x1, x21, #0x20
    8004:	ldp	x4, x5, [x20, #16]
    8008:	stp	x4, x5, [sp, #432]
    800c:	mov	w2, #0x0                   	// #0
    8010:	ldp	x4, x5, [x20, #32]
    8014:	stp	x4, x5, [sp, #448]
    8018:	mov	x0, x1
    801c:	ldp	x4, x5, [x28, #16]
    8020:	stp	x4, x5, [sp, #464]
    8024:	mov	x28, x20
    8028:	bl	4bc0 <mpfr_neg@plt>
    802c:	bl	5340 <mpfr_underflow_p@plt>
    8030:	str	w0, [sp, #184]
    8034:	bl	5530 <mpfr_overflow_p@plt>
    8038:	str	x19, [sp, #168]
    803c:	mov	w19, w24
    8040:	str	x23, [sp, #144]
    8044:	str	w22, [sp, #180]
    8048:	str	w0, [sp, #188]
    804c:	nop
    8050:	add	w19, w19, #0x1
    8054:	cmp	w19, #0x2
    8058:	b.gt	91c8 <mpc_div@@Base+0x1328>
    805c:	mov	x0, x27
    8060:	bl	4d70 <mpc_ceil_log2@plt>
    8064:	add	x0, x0, #0x5
    8068:	add	x27, x27, x0
    806c:	mov	x0, x26
    8070:	mov	x1, x27
    8074:	bl	4c40 <mpc_set_prec@plt>
    8078:	mov	x1, x27
    807c:	mov	x0, x25
    8080:	bl	4cd0 <mpfr_set_prec@plt>
    8084:	bl	4e70 <mpfr_clear_underflow@plt>
    8088:	bl	4a90 <mpfr_clear_overflow@plt>
    808c:	mov	x1, x28
    8090:	mov	w2, #0x2                   	// #2
    8094:	mov	x0, x25
    8098:	bl	4ef0 <mpc_norm@plt>
    809c:	mov	w22, w0
    80a0:	bl	5340 <mpfr_underflow_p@plt>
    80a4:	mov	w23, w0
    80a8:	bl	5530 <mpfr_overflow_p@plt>
    80ac:	str	w0, [sp, #120]
    80b0:	cbz	w23, 80c4 <mpc_div@@Base+0x224>
    80b4:	mov	w0, #0x1                   	// #1
    80b8:	str	w0, [sp, #328]
    80bc:	ldr	x0, [sp, #160]
    80c0:	str	x0, [sp, #336]
    80c4:	bl	4e70 <mpfr_clear_underflow@plt>
    80c8:	mov	w21, #0xffffffff            	// #-1
    80cc:	bl	4a90 <mpfr_clear_overflow@plt>
    80d0:	ldr	x2, [sp, #128]
    80d4:	mov	x0, x26
    80d8:	ldr	x1, [sp, #168]
    80dc:	mov	w3, #0x11                  	// #17
    80e0:	bl	4f20 <mpc_mul@plt>
    80e4:	and	w1, w0, #0x3
    80e8:	cmp	w1, #0x2
    80ec:	b.eq	80f8 <mpc_div@@Base+0x258>  // b.none
    80f0:	cmp	w1, #0x0
    80f4:	cset	w21, ne  // ne = any
    80f8:	asr	w0, w0, #2
    80fc:	mov	w24, #0xffffffff            	// #-1
    8100:	cmp	w0, #0x2
    8104:	b.eq	8110 <mpc_div@@Base+0x270>  // b.none
    8108:	cmp	w0, #0x0
    810c:	cset	w24, ne  // ne = any
    8110:	bl	5340 <mpfr_underflow_p@plt>
    8114:	str	w0, [sp, #104]
    8118:	bl	5530 <mpfr_overflow_p@plt>
    811c:	str	w0, [sp, #176]
    8120:	cbnz	w0, 89ec <mpc_div@@Base+0xb4c>
    8124:	cbnz	w22, 86e8 <mpc_div@@Base+0x848>
    8128:	cmp	w21, #0x0
    812c:	ccmp	w24, #0x0, #0x4, ne  // ne = any
    8130:	b.eq	8700 <mpc_div@@Base+0x860>  // b.none
    8134:	mov	x2, x25
    8138:	mov	x0, x25
    813c:	mov	w3, #0x1                   	// #1
    8140:	mov	x1, #0x1                   	// #1
    8144:	bl	4fc0 <mpfr_ui_div@plt>
    8148:	cbz	w0, 8170 <mpc_div@@Base+0x2d0>
    814c:	ldr	x2, [sp, #160]
    8150:	ldr	x0, [sp, #368]
    8154:	ldr	x1, [sp, #400]
    8158:	cmp	x0, x2
    815c:	cset	w0, ne  // ne = any
    8160:	cmp	x1, x2
    8164:	orr	w21, w21, w0
    8168:	cset	w0, ne  // ne = any
    816c:	orr	w24, w24, w0
    8170:	bl	4e70 <mpfr_clear_underflow@plt>
    8174:	bl	4a90 <mpfr_clear_overflow@plt>
    8178:	mov	x2, x25
    817c:	mov	x1, x26
    8180:	mov	w3, #0x1                   	// #1
    8184:	mov	x0, x26
    8188:	bl	4bb0 <mpfr_mul@plt>
    818c:	orr	w21, w21, w0
    8190:	bl	5340 <mpfr_underflow_p@plt>
    8194:	mov	w20, w0
    8198:	str	w0, [sp, #156]
    819c:	bl	5530 <mpfr_overflow_p@plt>
    81a0:	str	w0, [sp, #136]
    81a4:	orr	w0, w20, w0
    81a8:	cmp	w0, #0x0
    81ac:	ccmp	w21, #0x0, #0x4, eq  // eq = none
    81b0:	b.ne	87b8 <mpc_div@@Base+0x918>  // b.any
    81b4:	bl	4e70 <mpfr_clear_underflow@plt>
    81b8:	add	x20, x26, #0x20
    81bc:	bl	4a90 <mpfr_clear_overflow@plt>
    81c0:	mov	x1, x20
    81c4:	mov	x2, x25
    81c8:	mov	w3, #0x1                   	// #1
    81cc:	mov	x0, x20
    81d0:	bl	4bb0 <mpfr_mul@plt>
    81d4:	orr	w24, w24, w0
    81d8:	bl	5340 <mpfr_underflow_p@plt>
    81dc:	mov	w21, w0
    81e0:	bl	5530 <mpfr_overflow_p@plt>
    81e4:	mov	w22, w0
    81e8:	cmp	w24, #0x0
    81ec:	ccmp	w21, #0x0, #0x0, ne  // ne = any
    81f0:	b.ne	86d0 <mpc_div@@Base+0x830>  // b.any
    81f4:	cbz	w0, 8818 <mpc_div@@Base+0x978>
    81f8:	mov	w5, w22
    81fc:	ldr	w22, [sp, #180]
    8200:	str	w23, [sp, #112]
    8204:	mov	w28, #0x0                   	// #0
    8208:	ldr	x23, [sp, #144]
    820c:	mov	x1, x26
    8210:	mov	w2, w22
    8214:	mov	x0, x23
    8218:	str	w5, [sp, #152]
    821c:	bl	55d0 <mpc_set@plt>
    8220:	mov	w1, w0
    8224:	and	w0, w0, #0x3
    8228:	ldr	w5, [sp, #152]
    822c:	cmp	w0, #0x2
    8230:	mov	w21, #0xffffffff            	// #-1
    8234:	b.eq	8240 <mpc_div@@Base+0x3a0>  // b.none
    8238:	cmp	w0, #0x0
    823c:	cset	w21, ne  // ne = any
    8240:	asr	w1, w1, #2
    8244:	mov	w24, #0xffffffff            	// #-1
    8248:	cmp	w1, #0x2
    824c:	b.eq	8258 <mpc_div@@Base+0x3b8>  // b.none
    8250:	cmp	w1, #0x0
    8254:	cset	w24, ne  // ne = any
    8258:	ldr	w0, [sp, #136]
    825c:	cbnz	w0, 8874 <mpc_div@@Base+0x9d4>
    8260:	ldr	w0, [sp, #112]
    8264:	cmp	w0, #0x0
    8268:	ldr	w0, [sp, #104]
    826c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    8270:	b.eq	8874 <mpc_div@@Base+0x9d4>  // b.none
    8274:	ldr	w0, [sp, #156]
    8278:	cbnz	w0, 8290 <mpc_div@@Base+0x3f0>
    827c:	ldr	w0, [sp, #120]
    8280:	cmp	w0, #0x0
    8284:	ldr	w0, [sp, #176]
    8288:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    828c:	b.ne	82b8 <mpc_div@@Base+0x418>  // b.any
    8290:	ldr	w3, [sp, #360]
    8294:	mov	w2, #0xffffffff            	// #-1
    8298:	mov	w21, #0x1                   	// #1
    829c:	mov	x0, x23
    82a0:	cmp	w3, #0x0
    82a4:	str	w5, [sp, #104]
    82a8:	csel	w1, w2, w21, lt  // lt = tstop
    82ac:	csel	w21, w21, w2, lt  // lt = tstop
    82b0:	bl	4d60 <mpfr_set_zero@plt>
    82b4:	ldr	w5, [sp, #104]
    82b8:	cbz	w5, 88f0 <mpc_div@@Base+0xa50>
    82bc:	nop
    82c0:	ldr	x2, [sp, #400]
    82c4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    82c8:	add	x0, x23, #0x20
    82cc:	cmp	x2, x1
    82d0:	b.ge	89dc <mpc_div@@Base+0xb3c>  // b.tcont
    82d4:	mov	x3, #0x2                   	// #2
    82d8:	mov	w1, #0x0                   	// #0
    82dc:	movk	x3, #0x8000, lsl #48
    82e0:	cmp	x2, x3
    82e4:	b.eq	8f1c <mpc_div@@Base+0x107c>  // b.none
    82e8:	bl	5170 <mpfr_set_inf@plt>
    82ec:	ldr	x0, [sp, #400]
    82f0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    82f4:	cmp	x0, x1
    82f8:	b.ge	89e4 <mpc_div@@Base+0xb44>  // b.tcont
    82fc:	mov	x1, #0x2                   	// #2
    8300:	mov	w24, #0x0                   	// #0
    8304:	movk	x1, #0x8000, lsl #48
    8308:	cmp	x0, x1
    830c:	b.eq	8f34 <mpc_div@@Base+0x1094>  // b.none
    8310:	mov	x0, x26
    8314:	bl	4a50 <mpc_clear@plt>
    8318:	mov	x0, x25
    831c:	bl	4db0 <mpfr_clear@plt>
    8320:	ldr	w0, [sp, #184]
    8324:	cbnz	w0, 8a6c <mpc_div@@Base+0xbcc>
    8328:	ldr	w0, [sp, #188]
    832c:	cbnz	w0, 8a64 <mpc_div@@Base+0xbc4>
    8330:	cmp	w21, #0x0
    8334:	mov	w1, #0x2                   	// #2
    8338:	cset	w0, ne  // ne = any
    833c:	csel	w0, w0, w1, ge  // ge = tcont
    8340:	cmp	w24, #0x0
    8344:	orr	w1, w0, #0x4
    8348:	csel	w1, w1, w0, ne  // ne = any
    834c:	orr	w0, w0, #0x8
    8350:	csel	w0, w1, w0, ge  // ge = tcont
    8354:	ldp	x25, x26, [sp, #64]
    8358:	ldp	x27, x28, [sp, #80]
    835c:	b	7f60 <mpc_div@@Base+0xc0>
    8360:	mov	x0, x20
    8364:	bl	5520 <mpfr_number_p@plt>
    8368:	cbz	w0, 7f00 <mpc_div@@Base+0x60>
    836c:	add	x21, x20, #0x20
    8370:	mov	x0, x21
    8374:	bl	5520 <mpfr_number_p@plt>
    8378:	cbz	w0, 7f00 <mpc_div@@Base+0x60>
    837c:	ldr	x1, [x19, #16]
    8380:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8384:	mov	w24, #0x0                   	// #0
    8388:	cmp	x1, x0
    838c:	b.ne	83a0 <mpc_div@@Base+0x500>  // b.any
    8390:	ldr	w0, [x19, #8]
    8394:	mov	w24, #0x1                   	// #1
    8398:	cmp	w0, #0x0
    839c:	cneg	w24, w24, lt  // lt = tstop
    83a0:	ldr	x1, [x19, #48]
    83a4:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    83a8:	mov	w22, #0x0                   	// #0
    83ac:	cmp	x1, x0
    83b0:	b.eq	8ba8 <mpc_div@@Base+0xd08>  // b.none
    83b4:	ldr	x0, [x20, #16]
    83b8:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    83bc:	ldr	x3, [x20, #48]
    83c0:	cmp	x0, x1
    83c4:	b.eq	892c <mpc_div@@Base+0xa8c>  // b.none
    83c8:	ldr	w2, [x20, #8]
    83cc:	tbnz	w2, #31, 8e68 <mpc_div@@Base+0xfc8>
    83d0:	cmp	x3, x1
    83d4:	mov	w19, w24
    83d8:	b.eq	8408 <mpc_div@@Base+0x568>  // b.none
    83dc:	ldr	w1, [x20, #40]
    83e0:	tbnz	w1, #31, 8fa0 <mpc_div@@Base+0x1100>
    83e4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    83e8:	add	w19, w19, w22
    83ec:	cmp	x0, x2
    83f0:	b.eq	9030 <mpc_div@@Base+0x1190>  // b.none
    83f4:	ldr	w2, [x20, #8]
    83f8:	cmp	w2, #0x0
    83fc:	cneg	w22, w22, lt  // lt = tstop
    8400:	tbnz	w1, #31, 8948 <mpc_div@@Base+0xaa8>
    8404:	sub	w22, w22, w24
    8408:	cbz	w19, 8e5c <mpc_div@@Base+0xfbc>
    840c:	mov	w1, w19
    8410:	mov	x0, x23
    8414:	bl	5170 <mpfr_set_inf@plt>
    8418:	add	x0, x23, #0x20
    841c:	cbnz	w22, 8c60 <mpc_div@@Base+0xdc0>
    8420:	bl	4a80 <mpfr_set_nan@plt>
    8424:	mov	w0, #0x0                   	// #0
    8428:	b	7f60 <mpc_div@@Base+0xc0>
    842c:	ldr	x1, [x20, #48]
    8430:	cmp	x1, x0
    8434:	b.ne	7ee4 <mpc_div@@Base+0x44>  // b.any
    8438:	ldr	w1, [x20, #8]
    843c:	mov	w2, #0x1                   	// #1
    8440:	add	x20, sp, #0x1a0
    8444:	cmp	w1, #0x0
    8448:	mov	x0, x20
    844c:	cneg	w21, w2, lt  // lt = tstop
    8450:	mov	x1, #0x1                   	// #1
    8454:	bl	5490 <mpfr_init2@plt>
    8458:	mov	w1, w21
    845c:	mov	x0, x20
    8460:	bl	5170 <mpfr_set_inf@plt>
    8464:	ldr	w3, [sp, #112]
    8468:	mov	x2, x19
    846c:	mov	x1, x20
    8470:	mov	x0, x23
    8474:	bl	4bb0 <mpfr_mul@plt>
    8478:	ldr	w3, [sp, #152]
    847c:	add	x2, x19, #0x20
    8480:	mov	x1, x20
    8484:	add	x0, x23, #0x20
    8488:	bl	4bb0 <mpfr_mul@plt>
    848c:	mov	x0, x20
    8490:	bl	4db0 <mpfr_clear@plt>
    8494:	mov	w0, #0x0                   	// #0
    8498:	b	7f60 <mpc_div@@Base+0xc0>
    849c:	add	x24, sp, #0xc0
    84a0:	mov	x1, #0x2                   	// #2
    84a4:	mov	x0, x24
    84a8:	add	x22, sp, #0xe0
    84ac:	stp	x25, x26, [sp, #64]
    84b0:	add	x25, sp, #0x140
    84b4:	add	x26, sp, #0x160
    84b8:	stp	x27, x28, [sp, #80]
    84bc:	bl	5490 <mpfr_init2@plt>
    84c0:	mov	x0, x22
    84c4:	mov	x1, #0x2                   	// #2
    84c8:	bl	5490 <mpfr_init2@plt>
    84cc:	mov	x0, x25
    84d0:	mov	x1, #0x2                   	// #2
    84d4:	bl	5490 <mpfr_init2@plt>
    84d8:	add	x28, sp, #0x100
    84dc:	add	x0, sp, #0x1a0
    84e0:	mov	x1, #0x2                   	// #2
    84e4:	mov	x27, x0
    84e8:	mov	x0, x26
    84ec:	str	x27, [sp, #128]
    84f0:	bl	5490 <mpfr_init2@plt>
    84f4:	mov	x0, x27
    84f8:	mov	x1, #0x2                   	// #2
    84fc:	bl	5490 <mpfr_init2@plt>
    8500:	add	x27, sp, #0x120
    8504:	ldr	x1, [x19]
    8508:	mov	w4, #0x1                   	// #1
    850c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    8510:	mov	x0, x28
    8514:	str	w4, [sp, #424]
    8518:	str	x2, [sp, #432]
    851c:	bl	5490 <mpfr_init2@plt>
    8520:	ldr	x1, [x19, #32]
    8524:	mov	x0, x27
    8528:	bl	5490 <mpfr_init2@plt>
    852c:	ldr	x5, [x20, #16]
    8530:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    8534:	mov	x0, x24
    8538:	mov	w3, #0x0                   	// #0
    853c:	cmp	x5, x1
    8540:	mov	x2, #0x0                   	// #0
    8544:	cset	x1, eq  // eq = none
    8548:	bl	5180 <mpfr_set_ui_2exp@plt>
    854c:	ldr	x1, [x20, #16]
    8550:	mov	x0, #0x2                   	// #2
    8554:	movk	x0, #0x8000, lsl #48
    8558:	mov	w4, #0x1                   	// #1
    855c:	cmp	x1, x0
    8560:	b.eq	885c <mpc_div@@Base+0x9bc>  // b.none
    8564:	ldr	w3, [x20, #8]
    8568:	mov	x1, x24
    856c:	mov	x0, x24
    8570:	mov	w2, #0x0                   	// #0
    8574:	bl	5220 <mpfr_set4@plt>
    8578:	ldr	x1, [x20, #48]
    857c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    8580:	mov	w3, #0x0                   	// #0
    8584:	mov	x2, #0x0                   	// #0
    8588:	cmp	x1, x0
    858c:	mov	x0, x22
    8590:	cset	x1, eq  // eq = none
    8594:	bl	5180 <mpfr_set_ui_2exp@plt>
    8598:	ldr	x1, [x20, #48]
    859c:	mov	x0, #0x2                   	// #2
    85a0:	movk	x0, #0x8000, lsl #48
    85a4:	cmp	x1, x0
    85a8:	b.eq	89b4 <mpc_div@@Base+0xb14>  // b.none
    85ac:	ldr	w3, [x20, #40]
    85b0:	mov	x1, x22
    85b4:	mov	x0, x22
    85b8:	mov	w2, #0x0                   	// #0
    85bc:	bl	5220 <mpfr_set4@plt>
    85c0:	mov	x2, x24
    85c4:	mov	x1, x19
    85c8:	mov	w3, #0x0                   	// #0
    85cc:	mov	x0, x28
    85d0:	bl	4bb0 <mpfr_mul@plt>
    85d4:	mov	x2, x22
    85d8:	mov	x1, x21
    85dc:	mov	w3, #0x0                   	// #0
    85e0:	mov	x0, x27
    85e4:	bl	4bb0 <mpfr_mul@plt>
    85e8:	mov	x2, x27
    85ec:	mov	x1, x28
    85f0:	mov	w3, #0x0                   	// #0
    85f4:	mov	x0, x25
    85f8:	bl	4eb0 <mpfr_add@plt>
    85fc:	mov	x1, x21
    8600:	mov	x2, x24
    8604:	mov	w3, #0x0                   	// #0
    8608:	mov	x0, x27
    860c:	bl	4bb0 <mpfr_mul@plt>
    8610:	mov	x1, x19
    8614:	mov	x2, x22
    8618:	mov	w3, #0x0                   	// #0
    861c:	mov	x0, x28
    8620:	bl	4bb0 <mpfr_mul@plt>
    8624:	mov	x1, x27
    8628:	mov	x2, x28
    862c:	mov	x0, x26
    8630:	mov	w3, #0x0                   	// #0
    8634:	bl	4aa0 <mpfr_sub@plt>
    8638:	ldr	x1, [sp, #336]
    863c:	mov	x0, #0x2                   	// #2
    8640:	movk	x0, #0x8000, lsl #48
    8644:	cmp	x1, x0
    8648:	b.eq	899c <mpc_div@@Base+0xafc>  // b.none
    864c:	ldr	w3, [sp, #328]
    8650:	mov	x0, x23
    8654:	ldr	x1, [sp, #128]
    8658:	mov	w2, #0x0                   	// #0
    865c:	bl	5220 <mpfr_set4@plt>
    8660:	ldr	x2, [sp, #368]
    8664:	mov	x1, #0x2                   	// #2
    8668:	movk	x1, #0x8000, lsl #48
    866c:	add	x0, x23, #0x20
    8670:	cmp	x2, x1
    8674:	b.eq	8988 <mpc_div@@Base+0xae8>  // b.none
    8678:	ldr	w3, [sp, #360]
    867c:	mov	w2, #0x0                   	// #0
    8680:	ldr	x1, [sp, #128]
    8684:	bl	5220 <mpfr_set4@plt>
    8688:	mov	x0, x24
    868c:	bl	4db0 <mpfr_clear@plt>
    8690:	mov	x0, x22
    8694:	bl	4db0 <mpfr_clear@plt>
    8698:	mov	x0, x25
    869c:	bl	4db0 <mpfr_clear@plt>
    86a0:	mov	x0, x26
    86a4:	bl	4db0 <mpfr_clear@plt>
    86a8:	ldr	x0, [sp, #128]
    86ac:	bl	4db0 <mpfr_clear@plt>
    86b0:	mov	x0, x28
    86b4:	bl	4db0 <mpfr_clear@plt>
    86b8:	mov	x0, x27
    86bc:	bl	4db0 <mpfr_clear@plt>
    86c0:	mov	w0, #0x0                   	// #0
    86c4:	ldp	x25, x26, [sp, #64]
    86c8:	ldp	x27, x28, [sp, #80]
    86cc:	b	7f60 <mpc_div@@Base+0xc0>
    86d0:	mov	w5, w22
    86d4:	mov	w28, w21
    86d8:	ldr	w22, [sp, #180]
    86dc:	str	w23, [sp, #112]
    86e0:	ldr	x23, [sp, #144]
    86e4:	b	820c <mpc_div@@Base+0x36c>
    86e8:	mov	x2, x25
    86ec:	mov	x0, x25
    86f0:	mov	w3, #0x1                   	// #1
    86f4:	mov	x1, #0x1                   	// #1
    86f8:	bl	4fc0 <mpfr_ui_div@plt>
    86fc:	b	814c <mpc_div@@Base+0x2ac>
    8700:	bl	4e70 <mpfr_clear_underflow@plt>
    8704:	bl	4a90 <mpfr_clear_overflow@plt>
    8708:	mov	x2, x25
    870c:	mov	x1, x26
    8710:	mov	w3, #0x1                   	// #1
    8714:	mov	x0, x26
    8718:	bl	51a0 <mpfr_div@plt>
    871c:	orr	w21, w21, w0
    8720:	bl	5340 <mpfr_underflow_p@plt>
    8724:	mov	w20, w0
    8728:	str	w0, [sp, #156]
    872c:	bl	5530 <mpfr_overflow_p@plt>
    8730:	str	w0, [sp, #136]
    8734:	orr	w0, w20, w0
    8738:	cmp	w0, #0x0
    873c:	ccmp	w21, #0x0, #0x4, eq  // eq = none
    8740:	b.ne	8958 <mpc_div@@Base+0xab8>  // b.any
    8744:	bl	4e70 <mpfr_clear_underflow@plt>
    8748:	add	x20, x26, #0x20
    874c:	bl	4a90 <mpfr_clear_overflow@plt>
    8750:	mov	x1, x20
    8754:	mov	x2, x25
    8758:	mov	w3, #0x1                   	// #1
    875c:	mov	x0, x20
    8760:	bl	51a0 <mpfr_div@plt>
    8764:	orr	w24, w24, w0
    8768:	bl	5340 <mpfr_underflow_p@plt>
    876c:	mov	w21, w0
    8770:	bl	5530 <mpfr_overflow_p@plt>
    8774:	mov	w22, w0
    8778:	cmp	w24, #0x0
    877c:	ccmp	w21, #0x0, #0x0, ne  // ne = any
    8780:	b.ne	86d0 <mpc_div@@Base+0x830>  // b.any
    8784:	cbnz	w0, 81f8 <mpc_div@@Base+0x358>
    8788:	ldr	x1, [sp, #144]
    878c:	mov	w3, #0x1                   	// #1
    8790:	ldr	w0, [sp, #152]
    8794:	mov	w2, #0x0                   	// #0
    8798:	cmp	w0, #0x0
    879c:	mov	x0, x20
    87a0:	ldr	x4, [x1, #32]
    87a4:	sub	x1, x27, #0x4
    87a8:	cinc	x4, x4, eq  // eq = none
    87ac:	bl	54a0 <mpfr_can_round@plt>
    87b0:	cbnz	w0, 81f8 <mpc_div@@Base+0x358>
    87b4:	b	87ec <mpc_div@@Base+0x94c>
    87b8:	ldr	w0, [sp, #112]
    87bc:	sub	x1, x27, #0x4
    87c0:	mov	w3, #0x1                   	// #1
    87c4:	mov	w2, #0x0                   	// #0
    87c8:	cmp	w0, #0x0
    87cc:	ldr	x0, [sp, #144]
    87d0:	ldr	x4, [x0]
    87d4:	mov	x0, x26
    87d8:	cinc	x4, x4, eq  // eq = none
    87dc:	bl	54a0 <mpfr_can_round@plt>
    87e0:	cbnz	w0, 81b4 <mpc_div@@Base+0x314>
    87e4:	str	wzr, [sp, #136]
    87e8:	str	wzr, [sp, #156]
    87ec:	ldr	w0, [sp, #120]
    87f0:	ldr	w1, [sp, #104]
    87f4:	orr	w0, w23, w0
    87f8:	orr	w0, w0, w1
    87fc:	cbz	w0, 8050 <mpc_div@@Base+0x1b0>
    8800:	ldr	w22, [sp, #180]
    8804:	mov	w5, #0x0                   	// #0
    8808:	mov	w28, #0x0                   	// #0
    880c:	str	w23, [sp, #112]
    8810:	ldr	x23, [sp, #144]
    8814:	b	820c <mpc_div@@Base+0x36c>
    8818:	ldr	w0, [sp, #152]
    881c:	sub	x1, x27, #0x4
    8820:	mov	w3, #0x1                   	// #1
    8824:	mov	w2, #0x0                   	// #0
    8828:	cmp	w0, #0x0
    882c:	mov	x0, x20
    8830:	ldr	x20, [sp, #144]
    8834:	ldr	x4, [x20, #32]
    8838:	cinc	x4, x4, eq  // eq = none
    883c:	bl	54a0 <mpfr_can_round@plt>
    8840:	cbz	w0, 87ec <mpc_div@@Base+0x94c>
    8844:	mov	w5, w22
    8848:	mov	w28, #0x0                   	// #0
    884c:	ldr	w22, [sp, #180]
    8850:	str	w23, [sp, #112]
    8854:	mov	x23, x20
    8858:	b	820c <mpc_div@@Base+0x36c>
    885c:	mov	w3, w4
    8860:	mov	x1, x24
    8864:	mov	x0, x24
    8868:	mov	w2, #0x0                   	// #0
    886c:	bl	5220 <mpfr_set4@plt>
    8870:	b	8578 <mpc_div@@Base+0x6d8>
    8874:	ldr	x0, [sp, #368]
    8878:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    887c:	cmp	x0, x1
    8880:	b.ge	89d4 <mpc_div@@Base+0xb34>  // b.tcont
    8884:	mov	x2, #0x2                   	// #2
    8888:	mov	w1, #0x0                   	// #0
    888c:	movk	x2, #0x8000, lsl #48
    8890:	cmp	x0, x2
    8894:	b.eq	8f3c <mpc_div@@Base+0x109c>  // b.none
    8898:	mov	x0, x23
    889c:	str	w5, [sp, #152]
    88a0:	bl	5170 <mpfr_set_inf@plt>
    88a4:	ldr	x0, [sp, #368]
    88a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    88ac:	ldr	w5, [sp, #152]
    88b0:	cmp	x0, x1
    88b4:	b.ge	89cc <mpc_div@@Base+0xb2c>  // b.tcont
    88b8:	mov	x1, #0x2                   	// #2
    88bc:	mov	w21, #0x0                   	// #0
    88c0:	movk	x1, #0x8000, lsl #48
    88c4:	cmp	x0, x1
    88c8:	b.ne	88d8 <mpc_div@@Base+0xa38>  // b.any
    88cc:	str	w5, [sp, #152]
    88d0:	bl	4b40 <mpfr_set_erangeflag@plt>
    88d4:	ldr	w5, [sp, #152]
    88d8:	cbnz	w5, 82c0 <mpc_div@@Base+0x420>
    88dc:	ldr	w0, [sp, #112]
    88e0:	cmp	w0, #0x0
    88e4:	ldr	w0, [sp, #104]
    88e8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    88ec:	b.eq	82c0 <mpc_div@@Base+0x420>  // b.none
    88f0:	cbnz	w28, 8908 <mpc_div@@Base+0xa68>
    88f4:	ldr	w0, [sp, #120]
    88f8:	cmp	w0, #0x0
    88fc:	ldr	w0, [sp, #176]
    8900:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    8904:	b.ne	8310 <mpc_div@@Base+0x470>  // b.any
    8908:	ldr	w3, [sp, #392]
    890c:	mov	w2, #0xffffffff            	// #-1
    8910:	mov	w24, #0x1                   	// #1
    8914:	add	x0, x23, #0x20
    8918:	cmp	w3, #0x0
    891c:	csel	w1, w2, w24, lt  // lt = tstop
    8920:	csel	w24, w24, w2, lt  // lt = tstop
    8924:	bl	4d60 <mpfr_set_zero@plt>
    8928:	b	8310 <mpc_div@@Base+0x470>
    892c:	cmp	x3, x0
    8930:	b.eq	903c <mpc_div@@Base+0x119c>  // b.none
    8934:	ldr	w1, [x20, #40]
    8938:	mov	w19, #0x0                   	// #0
    893c:	tbz	w1, #31, 83e4 <mpc_div@@Base+0x544>
    8940:	neg	w19, w22
    8944:	mov	w22, #0x0                   	// #0
    8948:	add	w22, w22, w24
    894c:	b	8408 <mpc_div@@Base+0x568>
    8950:	ldp	x27, x28, [sp, #80]
    8954:	b	7f54 <mpc_div@@Base+0xb4>
    8958:	ldr	w0, [sp, #112]
    895c:	sub	x1, x27, #0x4
    8960:	mov	w3, #0x1                   	// #1
    8964:	mov	w2, #0x0                   	// #0
    8968:	cmp	w0, #0x0
    896c:	ldr	x0, [sp, #144]
    8970:	ldr	x4, [x0]
    8974:	mov	x0, x26
    8978:	cinc	x4, x4, eq  // eq = none
    897c:	bl	54a0 <mpfr_can_round@plt>
    8980:	cbnz	w0, 8744 <mpc_div@@Base+0x8a4>
    8984:	b	87e4 <mpc_div@@Base+0x944>
    8988:	ldr	x1, [sp, #128]
    898c:	mov	w3, #0x1                   	// #1
    8990:	mov	w2, #0x0                   	// #0
    8994:	bl	5220 <mpfr_set4@plt>
    8998:	b	8688 <mpc_div@@Base+0x7e8>
    899c:	ldr	x1, [sp, #128]
    89a0:	mov	x0, x23
    89a4:	mov	w3, #0x1                   	// #1
    89a8:	mov	w2, #0x0                   	// #0
    89ac:	bl	5220 <mpfr_set4@plt>
    89b0:	b	8660 <mpc_div@@Base+0x7c0>
    89b4:	mov	x1, x22
    89b8:	mov	x0, x22
    89bc:	mov	w3, #0x1                   	// #1
    89c0:	mov	w2, #0x0                   	// #0
    89c4:	bl	5220 <mpfr_set4@plt>
    89c8:	b	85c0 <mpc_div@@Base+0x720>
    89cc:	ldr	w21, [sp, #360]
    89d0:	b	88d8 <mpc_div@@Base+0xa38>
    89d4:	ldr	w1, [sp, #360]
    89d8:	b	8898 <mpc_div@@Base+0x9f8>
    89dc:	ldr	w1, [sp, #392]
    89e0:	b	82e8 <mpc_div@@Base+0x448>
    89e4:	ldr	w24, [sp, #392]
    89e8:	b	8310 <mpc_div@@Base+0x470>
    89ec:	ldr	x0, [sp, #368]
    89f0:	str	w23, [sp, #112]
    89f4:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
    89f8:	ldr	w22, [sp, #180]
    89fc:	cmp	x0, x19
    8a00:	ldr	x23, [sp, #144]
    8a04:	b.ge	8c70 <mpc_div@@Base+0xdd0>  // b.tcont
    8a08:	mov	x1, #0x2                   	// #2
    8a0c:	movk	x1, #0x8000, lsl #48
    8a10:	cmp	x0, x1
    8a14:	b.eq	904c <mpc_div@@Base+0x11ac>  // b.none
    8a18:	ldr	x0, [sp, #400]
    8a1c:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
    8a20:	cmp	x0, x19
    8a24:	b.ge	8cb4 <mpc_div@@Base+0xe14>  // b.tcont
    8a28:	mov	x1, #0x2                   	// #2
    8a2c:	movk	x1, #0x8000, lsl #48
    8a30:	cmp	x0, x1
    8a34:	b.eq	8a5c <mpc_div@@Base+0xbbc>  // b.none
    8a38:	mov	w5, #0x0                   	// #0
    8a3c:	mov	w2, w22
    8a40:	mov	x1, x26
    8a44:	mov	x0, x23
    8a48:	str	w5, [sp, #152]
    8a4c:	bl	55d0 <mpc_set@plt>
    8a50:	mov	w28, #0x0                   	// #0
    8a54:	ldr	w5, [sp, #152]
    8a58:	b	8258 <mpc_div@@Base+0x3b8>
    8a5c:	bl	4b40 <mpfr_set_erangeflag@plt>
    8a60:	b	8a38 <mpc_div@@Base+0xb98>
    8a64:	bl	54e0 <mpfr_set_overflow@plt>
    8a68:	b	8330 <mpc_div@@Base+0x490>
    8a6c:	bl	49d0 <mpfr_set_underflow@plt>
    8a70:	b	8328 <mpc_div@@Base+0x488>
    8a74:	cmp	x23, x19
    8a78:	ldr	w2, [x19, #8]
    8a7c:	cset	w0, eq  // eq = none
    8a80:	cmp	x20, x23
    8a84:	csinc	w0, w0, wzr, ne  // ne = any
    8a88:	ldr	w1, [x19, #40]
    8a8c:	cmp	w0, #0x0
    8a90:	add	x5, sp, #0x1a0
    8a94:	csel	x4, x5, x23, ne  // ne = any
    8a98:	cmp	w2, #0x0
    8a9c:	ldr	w2, [x20, #8]
    8aa0:	mov	w22, #0x1                   	// #1
    8aa4:	cneg	w27, w22, lt  // lt = tstop
    8aa8:	cmp	w1, #0x0
    8aac:	cneg	w26, w22, lt  // lt = tstop
    8ab0:	ldr	w1, [x20, #40]
    8ab4:	cmp	w2, #0x0
    8ab8:	add	x25, x4, #0x20
    8abc:	cneg	w2, w22, lt  // lt = tstop
    8ac0:	str	w2, [sp, #104]
    8ac4:	cmp	w1, #0x0
    8ac8:	cneg	w22, w22, lt  // lt = tstop
    8acc:	ldr	x24, [x19, #16]
    8ad0:	cbnz	w0, 8e7c <mpc_div@@Base+0xfdc>
    8ad4:	ldp	x10, x11, [x28, #16]
    8ad8:	add	x2, sp, #0x160
    8adc:	ldp	x6, x7, [x20, #32]
    8ae0:	mov	x1, x21
    8ae4:	ldr	w3, [sp, #112]
    8ae8:	mov	x21, x2
    8aec:	mov	x0, x4
    8af0:	stp	x6, x7, [sp, #352]
    8af4:	stp	x10, x11, [sp, #368]
    8af8:	bl	51a0 <mpfr_div@plt>
    8afc:	mov	x1, x21
    8b00:	mov	w2, #0x0                   	// #0
    8b04:	mov	w20, w0
    8b08:	mov	x0, x21
    8b0c:	bl	4bc0 <mpfr_neg@plt>
    8b10:	ldr	w3, [sp, #152]
    8b14:	mov	x1, x19
    8b18:	mov	x2, x21
    8b1c:	mov	x0, x25
    8b20:	bl	51a0 <mpfr_div@plt>
    8b24:	mov	w19, w0
    8b28:	ldr	x1, [x23, #16]
    8b2c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8b30:	cmp	x1, x0
    8b34:	b.ne	8b5c <mpc_div@@Base+0xcbc>  // b.any
    8b38:	ldr	w0, [sp, #104]
    8b3c:	mov	w3, #0x1                   	// #1
    8b40:	mov	x1, x23
    8b44:	mov	w2, #0x0                   	// #0
    8b48:	cmp	w27, w0
    8b4c:	mov	x0, x23
    8b50:	ccmp	w26, w22, #0x4, ne  // ne = any
    8b54:	cneg	w3, w3, ne  // ne = any
    8b58:	bl	5220 <mpfr_set4@plt>
    8b5c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8b60:	cmp	x24, x0
    8b64:	b.ne	8b8c <mpc_div@@Base+0xcec>  // b.any
    8b68:	ldr	w0, [sp, #104]
    8b6c:	add	x1, x23, #0x20
    8b70:	mov	w3, #0x1                   	// #1
    8b74:	mov	w2, #0x0                   	// #0
    8b78:	cmp	w0, w26
    8b7c:	mov	x0, x1
    8b80:	ccmp	w27, w22, #0x0, ne  // ne = any
    8b84:	cneg	w3, w3, eq  // eq = none
    8b88:	bl	5220 <mpfr_set4@plt>
    8b8c:	cmp	w20, #0x0
    8b90:	mov	w0, #0x2                   	// #2
    8b94:	cset	w1, ne  // ne = any
    8b98:	csel	w0, w1, w0, ge  // ge = tcont
    8b9c:	cmp	w19, #0x0
    8ba0:	orr	w1, w0, #0x4
    8ba4:	b	8348 <mpc_div@@Base+0x4a8>
    8ba8:	ldr	w0, [x19, #40]
    8bac:	mov	w22, #0x1                   	// #1
    8bb0:	cmp	w0, #0x0
    8bb4:	cneg	w22, w22, lt  // lt = tstop
    8bb8:	cbz	w24, 83b4 <mpc_div@@Base+0x514>
    8bbc:	add	x0, sp, #0x1a0
    8bc0:	mov	x1, #0x2                   	// #2
    8bc4:	stp	x25, x26, [sp, #64]
    8bc8:	str	x0, [sp, #128]
    8bcc:	bl	5490 <mpfr_init2@plt>
    8bd0:	cmp	w24, #0x1
    8bd4:	mov	w3, #0x0                   	// #0
    8bd8:	b.eq	8fb8 <mpc_div@@Base+0x1118>  // b.none
    8bdc:	cmp	w22, #0x1
    8be0:	b.eq	8df0 <mpc_div@@Base+0xf50>  // b.none
    8be4:	ldr	x25, [sp, #128]
    8be8:	mov	x2, x21
    8bec:	mov	x1, x20
    8bf0:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
    8bf4:	mov	x0, x25
    8bf8:	bl	4eb0 <mpfr_add@plt>
    8bfc:	ldr	x24, [sp, #432]
    8c00:	cmp	x24, x22
    8c04:	b.eq	90b0 <mpc_div@@Base+0x1210>  // b.none
    8c08:	ldr	w0, [sp, #424]
    8c0c:	mov	x2, x20
    8c10:	mov	x1, x21
    8c14:	mov	w19, #0xffffffff            	// #-1
    8c18:	cmp	w0, #0x0
    8c1c:	mov	w3, #0x0                   	// #0
    8c20:	cneg	w19, w19, lt  // lt = tstop
    8c24:	mov	x0, x25
    8c28:	bl	4aa0 <mpfr_sub@plt>
    8c2c:	ldr	x0, [sp, #432]
    8c30:	cmp	x0, x22
    8c34:	b.eq	909c <mpc_div@@Base+0x11fc>  // b.none
    8c38:	ldr	w0, [sp, #424]
    8c3c:	tbnz	w0, #31, 90f0 <mpc_div@@Base+0x1250>
    8c40:	ldr	x0, [sp, #128]
    8c44:	mov	w22, #0x1                   	// #1
    8c48:	bl	4db0 <mpfr_clear@plt>
    8c4c:	cbnz	w19, 8e54 <mpc_div@@Base+0xfb4>
    8c50:	mov	x0, x23
    8c54:	bl	4a80 <mpfr_set_nan@plt>
    8c58:	ldp	x25, x26, [sp, #64]
    8c5c:	add	x0, x23, #0x20
    8c60:	mov	w1, w22
    8c64:	bl	5170 <mpfr_set_inf@plt>
    8c68:	mov	w0, #0x0                   	// #0
    8c6c:	b	7f60 <mpc_div@@Base+0xc0>
    8c70:	ldr	w20, [sp, #360]
    8c74:	cmp	w20, #0x0
    8c78:	b.gt	8f54 <mpc_div@@Base+0x10b4>
    8c7c:	b.eq	8a18 <mpc_div@@Base+0xb78>  // b.none
    8c80:	mov	x0, x26
    8c84:	bl	4bf0 <mpfr_nextbelow@plt>
    8c88:	ldr	x1, [sp, #368]
    8c8c:	mov	x0, x26
    8c90:	cmp	x1, x19
    8c94:	cset	w19, eq  // eq = none
    8c98:	bl	4e50 <mpfr_nextabove@plt>
    8c9c:	cbz	w19, 8a18 <mpc_div@@Base+0xb78>
    8ca0:	mov	w1, w20
    8ca4:	mov	x0, x26
    8ca8:	str	w19, [sp, #136]
    8cac:	bl	5170 <mpfr_set_inf@plt>
    8cb0:	b	8a18 <mpc_div@@Base+0xb78>
    8cb4:	ldr	w20, [sp, #392]
    8cb8:	cmp	w20, #0x0
    8cbc:	b.gt	8f74 <mpc_div@@Base+0x10d4>
    8cc0:	b.eq	8a38 <mpc_div@@Base+0xb98>  // b.none
    8cc4:	add	x27, x26, #0x20
    8cc8:	mov	x0, x27
    8ccc:	bl	4bf0 <mpfr_nextbelow@plt>
    8cd0:	ldr	x1, [sp, #400]
    8cd4:	mov	x0, x27
    8cd8:	cmp	x1, x19
    8cdc:	cset	w5, eq  // eq = none
    8ce0:	str	w5, [sp, #152]
    8ce4:	bl	4e50 <mpfr_nextabove@plt>
    8ce8:	ldr	w5, [sp, #152]
    8cec:	cbz	w5, 8a38 <mpc_div@@Base+0xb98>
    8cf0:	mov	w1, w20
    8cf4:	add	x0, x26, #0x20
    8cf8:	str	w5, [sp, #152]
    8cfc:	bl	5170 <mpfr_set_inf@plt>
    8d00:	ldr	w5, [sp, #152]
    8d04:	b	8a3c <mpc_div@@Base+0xb9c>
    8d08:	ldr	w1, [x19, #8]
    8d0c:	mov	w28, #0x1                   	// #1
    8d10:	ldr	w0, [x19, #40]
    8d14:	add	x22, x23, #0x20
    8d18:	cmp	w1, #0x0
    8d1c:	ldr	w1, [x20, #8]
    8d20:	cneg	w2, w28, lt  // lt = tstop
    8d24:	cmp	w0, #0x0
    8d28:	ldr	w0, [x20, #40]
    8d2c:	cneg	w25, w28, lt  // lt = tstop
    8d30:	ldr	w3, [sp, #152]
    8d34:	cmp	w1, #0x0
    8d38:	cneg	w26, w28, lt  // lt = tstop
    8d3c:	cmp	w0, #0x0
    8d40:	mov	x1, x21
    8d44:	cneg	w27, w28, lt  // lt = tstop
    8d48:	mov	x0, x22
    8d4c:	str	w2, [sp, #104]
    8d50:	mov	x2, x20
    8d54:	bl	51a0 <mpfr_div@plt>
    8d58:	ldr	w3, [sp, #112]
    8d5c:	mov	x1, x19
    8d60:	mov	w21, w0
    8d64:	mov	x2, x20
    8d68:	mov	x0, x23
    8d6c:	bl	51a0 <mpfr_div@plt>
    8d70:	mov	w19, w0
    8d74:	ldr	x1, [x23, #16]
    8d78:	cmp	x1, x24
    8d7c:	b.ne	8da0 <mpc_div@@Base+0xf00>  // b.any
    8d80:	ldr	w0, [sp, #104]
    8d84:	mov	x1, x23
    8d88:	mov	w2, #0x0                   	// #0
    8d8c:	cmp	w0, w26
    8d90:	mov	x0, x23
    8d94:	ccmp	w25, w27, #0x4, ne  // ne = any
    8d98:	cneg	w3, w28, ne  // ne = any
    8d9c:	bl	5220 <mpfr_set4@plt>
    8da0:	ldr	x1, [x23, #48]
    8da4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    8da8:	cmp	x1, x0
    8dac:	b.ne	8dd4 <mpc_div@@Base+0xf34>  // b.any
    8db0:	ldr	w0, [sp, #104]
    8db4:	cmp	w26, w25
    8db8:	mov	w3, #0x1                   	// #1
    8dbc:	mov	x1, x22
    8dc0:	ccmp	w0, w27, #0x0, ne  // ne = any
    8dc4:	mov	w2, #0x0                   	// #0
    8dc8:	cneg	w3, w3, eq  // eq = none
    8dcc:	mov	x0, x22
    8dd0:	bl	5220 <mpfr_set4@plt>
    8dd4:	cmp	w19, #0x0
    8dd8:	mov	w0, #0x2                   	// #2
    8ddc:	cset	w1, ne  // ne = any
    8de0:	csel	w0, w1, w0, ge  // ge = tcont
    8de4:	cmp	w21, #0x0
    8de8:	orr	w1, w0, #0x4
    8dec:	b	8348 <mpc_div@@Base+0x4a8>
    8df0:	ldr	x25, [sp, #128]
    8df4:	mov	x2, x20
    8df8:	mov	x1, x21
    8dfc:	mov	x24, #0x8000000000000001    	// #-9223372036854775807
    8e00:	mov	x0, x25
    8e04:	bl	4aa0 <mpfr_sub@plt>
    8e08:	ldr	x19, [sp, #432]
    8e0c:	cmp	x19, x24
    8e10:	b.eq	9130 <mpc_div@@Base+0x1290>  // b.none
    8e14:	ldr	w0, [sp, #424]
    8e18:	mov	x2, x21
    8e1c:	mov	x1, x20
    8e20:	mov	w3, #0x0                   	// #0
    8e24:	cmp	w0, #0x0
    8e28:	mov	x0, x25
    8e2c:	cneg	w19, w22, lt  // lt = tstop
    8e30:	bl	4eb0 <mpfr_add@plt>
    8e34:	ldr	x0, [sp, #432]
    8e38:	cmp	x0, x24
    8e3c:	b.eq	909c <mpc_div@@Base+0x11fc>  // b.none
    8e40:	ldr	w0, [sp, #424]
    8e44:	tbnz	w0, #31, 9018 <mpc_div@@Base+0x1178>
    8e48:	ldr	x0, [sp, #128]
    8e4c:	bl	4db0 <mpfr_clear@plt>
    8e50:	cbz	w19, 8c50 <mpc_div@@Base+0xdb0>
    8e54:	ldp	x25, x26, [sp, #64]
    8e58:	b	840c <mpc_div@@Base+0x56c>
    8e5c:	mov	x0, x23
    8e60:	bl	4a80 <mpfr_set_nan@plt>
    8e64:	b	8418 <mpc_div@@Base+0x578>
    8e68:	cmp	x3, x1
    8e6c:	neg	w19, w24
    8e70:	b.ne	83dc <mpc_div@@Base+0x53c>  // b.any
    8e74:	neg	w22, w22
    8e78:	b	8408 <mpc_div@@Base+0x568>
    8e7c:	ldr	x1, [x23]
    8e80:	add	x9, sp, #0x160
    8e84:	ldr	x2, [x23, #32]
    8e88:	mov	x0, x5
    8e8c:	stp	x9, x5, [sp, #120]
    8e90:	str	x4, [sp, #136]
    8e94:	bl	5410 <mpc_init3@plt>
    8e98:	ldp	x10, x11, [x28, #16]
    8e9c:	mov	x1, x21
    8ea0:	ldp	x6, x7, [x20, #32]
    8ea4:	stp	x6, x7, [sp, #352]
    8ea8:	ldr	w3, [sp, #112]
    8eac:	ldr	x9, [sp, #120]
    8eb0:	stp	x10, x11, [sp, #368]
    8eb4:	ldr	x4, [sp, #136]
    8eb8:	mov	x21, x9
    8ebc:	mov	x2, x9
    8ec0:	mov	x0, x4
    8ec4:	bl	51a0 <mpfr_div@plt>
    8ec8:	mov	w20, w0
    8ecc:	mov	x1, x21
    8ed0:	mov	x0, x21
    8ed4:	mov	w2, #0x0                   	// #0
    8ed8:	bl	4bc0 <mpfr_neg@plt>
    8edc:	ldr	w3, [sp, #152]
    8ee0:	mov	x2, x21
    8ee4:	mov	x1, x19
    8ee8:	mov	x0, x25
    8eec:	bl	51a0 <mpfr_div@plt>
    8ef0:	mov	w19, w0
    8ef4:	ldr	x5, [sp, #128]
    8ef8:	mov	x0, x23
    8efc:	mov	w2, #0x0                   	// #0
    8f00:	str	x5, [sp, #112]
    8f04:	mov	x1, x5
    8f08:	bl	55d0 <mpc_set@plt>
    8f0c:	ldr	x5, [sp, #112]
    8f10:	mov	x0, x5
    8f14:	bl	4a50 <mpc_clear@plt>
    8f18:	b	8b28 <mpc_div@@Base+0xc88>
    8f1c:	str	x0, [sp, #104]
    8f20:	str	w1, [sp, #112]
    8f24:	bl	4b40 <mpfr_set_erangeflag@plt>
    8f28:	ldr	w1, [sp, #112]
    8f2c:	ldr	x0, [sp, #104]
    8f30:	b	82e8 <mpc_div@@Base+0x448>
    8f34:	bl	4b40 <mpfr_set_erangeflag@plt>
    8f38:	b	8310 <mpc_div@@Base+0x470>
    8f3c:	str	w5, [sp, #128]
    8f40:	str	w1, [sp, #152]
    8f44:	bl	4b40 <mpfr_set_erangeflag@plt>
    8f48:	ldr	w5, [sp, #128]
    8f4c:	ldr	w1, [sp, #152]
    8f50:	b	8898 <mpc_div@@Base+0x9f8>
    8f54:	mov	x0, x26
    8f58:	bl	4e50 <mpfr_nextabove@plt>
    8f5c:	ldr	x1, [sp, #368]
    8f60:	mov	x0, x26
    8f64:	cmp	x1, x19
    8f68:	cset	w19, eq  // eq = none
    8f6c:	bl	4bf0 <mpfr_nextbelow@plt>
    8f70:	b	8c9c <mpc_div@@Base+0xdfc>
    8f74:	add	x27, x26, #0x20
    8f78:	mov	x0, x27
    8f7c:	bl	4e50 <mpfr_nextabove@plt>
    8f80:	ldr	x1, [sp, #400]
    8f84:	mov	x0, x27
    8f88:	cmp	x1, x19
    8f8c:	cset	w5, eq  // eq = none
    8f90:	str	w5, [sp, #152]
    8f94:	bl	4bf0 <mpfr_nextbelow@plt>
    8f98:	ldr	w5, [sp, #152]
    8f9c:	b	8cec <mpc_div@@Base+0xe4c>
    8fa0:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    8fa4:	sub	w19, w19, w22
    8fa8:	cmp	x0, x3
    8fac:	b.ne	83f8 <mpc_div@@Base+0x558>  // b.any
    8fb0:	mov	w22, #0x0                   	// #0
    8fb4:	b	8948 <mpc_div@@Base+0xaa8>
    8fb8:	mov	x2, x21
    8fbc:	mov	x1, x20
    8fc0:	cmp	w22, #0x1
    8fc4:	b.eq	9054 <mpc_div@@Base+0x11b4>  // b.none
    8fc8:	ldr	x25, [sp, #128]
    8fcc:	mov	x22, #0x8000000000000001    	// #-9223372036854775807
    8fd0:	mov	x0, x25
    8fd4:	bl	4aa0 <mpfr_sub@plt>
    8fd8:	ldr	x19, [sp, #432]
    8fdc:	cmp	x19, x22
    8fe0:	b.eq	9108 <mpc_div@@Base+0x1268>  // b.none
    8fe4:	ldr	w0, [sp, #424]
    8fe8:	mov	x2, x21
    8fec:	mov	x1, x20
    8ff0:	mov	w3, #0x0                   	// #0
    8ff4:	cmp	w0, #0x0
    8ff8:	mov	x0, x25
    8ffc:	cneg	w19, w24, lt  // lt = tstop
    9000:	bl	4eb0 <mpfr_add@plt>
    9004:	ldr	x0, [sp, #432]
    9008:	cmp	x0, x22
    900c:	b.eq	909c <mpc_div@@Base+0x11fc>  // b.none
    9010:	ldr	w0, [sp, #424]
    9014:	tbnz	w0, #31, 9170 <mpc_div@@Base+0x12d0>
    9018:	ldr	x0, [sp, #128]
    901c:	bl	4db0 <mpfr_clear@plt>
    9020:	cbz	w19, 9158 <mpc_div@@Base+0x12b8>
    9024:	mov	w22, #0xffffffff            	// #-1
    9028:	ldp	x25, x26, [sp, #64]
    902c:	b	840c <mpc_div@@Base+0x56c>
    9030:	mov	w22, #0x0                   	// #0
    9034:	sub	w22, w22, w24
    9038:	b	8408 <mpc_div@@Base+0x568>
    903c:	mov	x0, x23
    9040:	bl	4a80 <mpfr_set_nan@plt>
    9044:	add	x0, x23, #0x20
    9048:	b	8420 <mpc_div@@Base+0x580>
    904c:	bl	4b40 <mpfr_set_erangeflag@plt>
    9050:	b	8a18 <mpc_div@@Base+0xb78>
    9054:	ldr	x26, [sp, #128]
    9058:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    905c:	mov	x0, x26
    9060:	bl	4eb0 <mpfr_add@plt>
    9064:	ldr	x19, [sp, #432]
    9068:	cmp	x19, x25
    906c:	b.eq	9188 <mpc_div@@Base+0x12e8>  // b.none
    9070:	ldr	w0, [sp, #424]
    9074:	mov	x2, x21
    9078:	mov	x1, x20
    907c:	mov	w3, #0x0                   	// #0
    9080:	cmp	w0, #0x0
    9084:	mov	x0, x26
    9088:	cneg	w19, w24, lt  // lt = tstop
    908c:	bl	4aa0 <mpfr_sub@plt>
    9090:	ldr	x0, [sp, #432]
    9094:	cmp	x0, x25
    9098:	b.ne	8e40 <mpc_div@@Base+0xfa0>  // b.any
    909c:	ldr	x0, [sp, #128]
    90a0:	mov	w22, #0x0                   	// #0
    90a4:	bl	4db0 <mpfr_clear@plt>
    90a8:	ldp	x25, x26, [sp, #64]
    90ac:	b	840c <mpc_div@@Base+0x56c>
    90b0:	ldr	x0, [sp, #128]
    90b4:	mov	x2, x20
    90b8:	mov	x1, x21
    90bc:	mov	w3, #0x0                   	// #0
    90c0:	mov	w19, #0x0                   	// #0
    90c4:	bl	4aa0 <mpfr_sub@plt>
    90c8:	ldr	x0, [sp, #432]
    90cc:	cmp	x0, x24
    90d0:	b.ne	8c38 <mpc_div@@Base+0xd98>  // b.any
    90d4:	ldr	x0, [sp, #128]
    90d8:	bl	4db0 <mpfr_clear@plt>
    90dc:	mov	x0, x23
    90e0:	bl	4a80 <mpfr_set_nan@plt>
    90e4:	add	x0, x23, #0x20
    90e8:	ldp	x25, x26, [sp, #64]
    90ec:	b	8420 <mpc_div@@Base+0x580>
    90f0:	ldr	x0, [sp, #128]
    90f4:	mov	w22, #0xffffffff            	// #-1
    90f8:	bl	4db0 <mpfr_clear@plt>
    90fc:	cbz	w19, 8c50 <mpc_div@@Base+0xdb0>
    9100:	ldp	x25, x26, [sp, #64]
    9104:	b	840c <mpc_div@@Base+0x56c>
    9108:	ldr	x0, [sp, #128]
    910c:	mov	x2, x21
    9110:	mov	x1, x20
    9114:	mov	w3, #0x0                   	// #0
    9118:	bl	4eb0 <mpfr_add@plt>
    911c:	ldr	x0, [sp, #432]
    9120:	cmp	x0, x19
    9124:	b.eq	90d4 <mpc_div@@Base+0x1234>  // b.none
    9128:	mov	w19, #0x0                   	// #0
    912c:	b	9010 <mpc_div@@Base+0x1170>
    9130:	ldr	x0, [sp, #128]
    9134:	mov	x2, x21
    9138:	mov	x1, x20
    913c:	mov	w3, #0x0                   	// #0
    9140:	bl	4eb0 <mpfr_add@plt>
    9144:	ldr	x0, [sp, #432]
    9148:	cmp	x0, x19
    914c:	b.eq	90d4 <mpc_div@@Base+0x1234>  // b.none
    9150:	mov	w19, #0x0                   	// #0
    9154:	b	8e40 <mpc_div@@Base+0xfa0>
    9158:	mov	x0, x23
    915c:	bl	4a80 <mpfr_set_nan@plt>
    9160:	add	x0, x23, #0x20
    9164:	mov	w22, #0xffffffff            	// #-1
    9168:	ldp	x25, x26, [sp, #64]
    916c:	b	8c60 <mpc_div@@Base+0xdc0>
    9170:	ldr	x0, [sp, #128]
    9174:	bl	4db0 <mpfr_clear@plt>
    9178:	cbz	w19, 91b0 <mpc_div@@Base+0x1310>
    917c:	mov	w22, #0x1                   	// #1
    9180:	ldp	x25, x26, [sp, #64]
    9184:	b	840c <mpc_div@@Base+0x56c>
    9188:	ldr	x0, [sp, #128]
    918c:	mov	x2, x21
    9190:	mov	x1, x20
    9194:	mov	w3, #0x0                   	// #0
    9198:	bl	4aa0 <mpfr_sub@plt>
    919c:	ldr	x0, [sp, #432]
    91a0:	cmp	x0, x19
    91a4:	b.eq	90d4 <mpc_div@@Base+0x1234>  // b.none
    91a8:	mov	w19, #0x0                   	// #0
    91ac:	b	8e40 <mpc_div@@Base+0xfa0>
    91b0:	mov	x0, x23
    91b4:	bl	4a80 <mpfr_set_nan@plt>
    91b8:	add	x0, x23, #0x20
    91bc:	mov	w22, #0x1                   	// #1
    91c0:	ldp	x25, x26, [sp, #64]
    91c4:	b	8c60 <mpc_div@@Base+0xdc0>
    91c8:	mov	x0, #0x2                   	// #2
    91cc:	sdiv	x0, x27, x0
    91d0:	b	8068 <mpc_div@@Base+0x1c8>
    91d4:	nop

00000000000091d8 <mpc_div_fr@@Base>:
    91d8:	stp	x29, x30, [sp, #-112]!
    91dc:	mov	x29, sp
    91e0:	stp	x21, x22, [sp, #32]
    91e4:	mov	x22, x0
    91e8:	str	x25, [sp, #64]
    91ec:	mov	x25, x22
    91f0:	stp	x19, x20, [sp, #16]
    91f4:	mov	x20, x1
    91f8:	add	x19, sp, #0x50
    91fc:	ldr	x1, [x25], #32
    9200:	mov	x0, x19
    9204:	stp	x23, x24, [sp, #48]
    9208:	mov	x23, x2
    920c:	mov	w24, w3
    9210:	bl	5490 <mpfr_init2@plt>
    9214:	and	w3, w24, #0xf
    9218:	mov	x2, x23
    921c:	mov	x1, x20
    9220:	mov	x0, x19
    9224:	bl	51a0 <mpfr_div@plt>
    9228:	mov	w21, w0
    922c:	asr	w3, w24, #4
    9230:	mov	x2, x23
    9234:	add	x1, x20, #0x20
    9238:	mov	x0, x25
    923c:	bl	51a0 <mpfr_div@plt>
    9240:	mov	w20, w0
    9244:	ldr	w3, [sp, #88]
    9248:	mov	x1, x19
    924c:	mov	w2, #0x0                   	// #0
    9250:	mov	x0, x22
    9254:	bl	5220 <mpfr_set4@plt>
    9258:	mov	x0, x19
    925c:	bl	4db0 <mpfr_clear@plt>
    9260:	cmp	w21, #0x0
    9264:	mov	w0, #0x2                   	// #2
    9268:	cset	w1, ne  // ne = any
    926c:	csel	w0, w1, w0, ge  // ge = tcont
    9270:	cmp	w20, #0x0
    9274:	orr	w2, w0, #0x4
    9278:	orr	w1, w0, #0x8
    927c:	csel	w0, w2, w0, ne  // ne = any
    9280:	csel	w0, w0, w1, ge  // ge = tcont
    9284:	ldp	x19, x20, [sp, #16]
    9288:	ldp	x21, x22, [sp, #32]
    928c:	ldp	x23, x24, [sp, #48]
    9290:	ldr	x25, [sp, #64]
    9294:	ldp	x29, x30, [sp], #112
    9298:	ret
    929c:	nop

00000000000092a0 <mpc_div_ui@@Base>:
    92a0:	stp	x29, x30, [sp, #-64]!
    92a4:	mov	x29, sp
    92a8:	stp	x19, x20, [sp, #16]
    92ac:	mov	w20, w3
    92b0:	and	w3, w3, #0xf
    92b4:	stp	x21, x22, [sp, #32]
    92b8:	mov	x21, x0
    92bc:	mov	x22, x1
    92c0:	str	x23, [sp, #48]
    92c4:	mov	x23, x2
    92c8:	bl	55a0 <mpfr_div_ui@plt>
    92cc:	mov	w19, w0
    92d0:	asr	w3, w20, #4
    92d4:	mov	x2, x23
    92d8:	add	x1, x22, #0x20
    92dc:	add	x0, x21, #0x20
    92e0:	bl	55a0 <mpfr_div_ui@plt>
    92e4:	cmp	w19, #0x0
    92e8:	mov	w2, #0x2                   	// #2
    92ec:	cset	w1, ne  // ne = any
    92f0:	csel	w1, w1, w2, ge  // ge = tcont
    92f4:	cmp	w0, #0x0
    92f8:	orr	w3, w1, #0x4
    92fc:	orr	w2, w1, #0x8
    9300:	csel	w1, w3, w1, ne  // ne = any
    9304:	csel	w1, w1, w2, ge  // ge = tcont
    9308:	mov	w0, w1
    930c:	ldp	x19, x20, [sp, #16]
    9310:	ldp	x21, x22, [sp, #32]
    9314:	ldr	x23, [sp, #48]
    9318:	ldp	x29, x30, [sp], #64
    931c:	ret

0000000000009320 <mpc_exp@@Base>:
    9320:	stp	x29, x30, [sp, #-208]!
    9324:	mov	x4, #0x2                   	// #2
    9328:	movk	x4, #0x8000, lsl #48
    932c:	mov	x29, sp
    9330:	stp	x19, x20, [sp, #16]
    9334:	ldr	x20, [x1, #16]
    9338:	stp	x23, x24, [sp, #48]
    933c:	mov	x24, x0
    9340:	cmp	x20, x4
    9344:	ldr	x3, [x1, #48]
    9348:	b.eq	95f8 <mpc_exp@@Base+0x2d8>  // b.none
    934c:	mov	x23, x1
    9350:	cmp	x3, x4
    9354:	b.eq	95c0 <mpc_exp@@Base+0x2a0>  // b.none
    9358:	stp	x25, x26, [sp, #64]
    935c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    9360:	mov	w26, w2
    9364:	stp	x27, x28, [sp, #80]
    9368:	cmp	x3, x25
    936c:	add	x28, x0, #0x20
    9370:	b.eq	9694 <mpc_exp@@Base+0x374>  // b.none
    9374:	cmp	x20, x25
    9378:	b.eq	96e8 <mpc_exp@@Base+0x3c8>  // b.none
    937c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    9380:	cmp	x20, x0
    9384:	b.eq	9764 <mpc_exp@@Base+0x444>  // b.none
    9388:	cmp	x3, x0
    938c:	b.eq	982c <mpc_exp@@Base+0x50c>  // b.none
    9390:	asr	w27, w2, #4
    9394:	neg	x4, x3
    9398:	ldr	x2, [x24]
    939c:	stp	x21, x22, [sp, #32]
    93a0:	add	x22, sp, #0x70
    93a4:	ldr	x19, [x24, #32]
    93a8:	mov	x0, x22
    93ac:	mov	x1, #0x2                   	// #2
    93b0:	add	x21, sp, #0x90
    93b4:	cmp	x19, x2
    93b8:	csel	x19, x19, x2, ge  // ge = tcont
    93bc:	cmp	x20, #0x0
    93c0:	csneg	x3, xzr, x20, ge  // ge = tcont
    93c4:	and	w2, w26, #0xf
    93c8:	cmp	x4, x3
    93cc:	stp	w2, w27, [sp, #96]
    93d0:	csel	x3, x4, x3, ge  // ge = tcont
    93d4:	add	x20, sp, #0xb0
    93d8:	add	x19, x3, x19
    93dc:	add	x26, x23, #0x20
    93e0:	bl	5490 <mpfr_init2@plt>
    93e4:	mov	x0, x21
    93e8:	mov	x1, #0x2                   	// #2
    93ec:	bl	5490 <mpfr_init2@plt>
    93f0:	mov	x0, x20
    93f4:	mov	x1, #0x2                   	// #2
    93f8:	bl	5490 <mpfr_init2@plt>
    93fc:	bl	5340 <mpfr_underflow_p@plt>
    9400:	str	w0, [sp, #104]
    9404:	bl	5530 <mpfr_overflow_p@plt>
    9408:	str	w0, [sp, #108]
    940c:	cmp	w27, #0x0
    9410:	cset	x27, eq  // eq = none
    9414:	nop
    9418:	mov	x0, x19
    941c:	bl	4d70 <mpc_ceil_log2@plt>
    9420:	mov	x1, x0
    9424:	mov	x0, x22
    9428:	add	x1, x1, #0x5
    942c:	add	x19, x19, x1
    9430:	mov	x1, x19
    9434:	bl	4cd0 <mpfr_set_prec@plt>
    9438:	mov	x1, x19
    943c:	mov	x0, x21
    9440:	bl	4cd0 <mpfr_set_prec@plt>
    9444:	mov	x1, x19
    9448:	mov	x0, x20
    944c:	bl	4cd0 <mpfr_set_prec@plt>
    9450:	bl	4a90 <mpfr_clear_overflow@plt>
    9454:	bl	4e70 <mpfr_clear_underflow@plt>
    9458:	mov	x1, x23
    945c:	mov	w2, #0x0                   	// #0
    9460:	mov	x0, x22
    9464:	bl	5280 <mpfr_exp@plt>
    9468:	mov	x2, x26
    946c:	mov	x1, x21
    9470:	mov	w3, #0x0                   	// #0
    9474:	mov	x0, x20
    9478:	bl	5570 <mpfr_sin_cos@plt>
    947c:	mov	x2, x22
    9480:	mov	x1, x21
    9484:	mov	w3, #0x0                   	// #0
    9488:	mov	x0, x21
    948c:	bl	4bb0 <mpfr_mul@plt>
    9490:	bl	5530 <mpfr_overflow_p@plt>
    9494:	cbnz	w0, 94d0 <mpc_exp@@Base+0x1b0>
    9498:	ldr	x0, [sp, #128]
    949c:	sub	x1, x19, #0x2
    94a0:	mov	w3, #0x1                   	// #1
    94a4:	mov	w2, #0x0                   	// #0
    94a8:	cmp	x0, x25
    94ac:	b.eq	94d0 <mpc_exp@@Base+0x1b0>  // b.none
    94b0:	ldr	w0, [sp, #96]
    94b4:	ldr	x4, [x24]
    94b8:	cmp	w0, #0x0
    94bc:	mov	x0, x21
    94c0:	cinc	x4, x4, eq  // eq = none
    94c4:	bl	54a0 <mpfr_can_round@plt>
    94c8:	cbz	w0, 9418 <mpc_exp@@Base+0xf8>
    94cc:	nop
    94d0:	mov	x2, x22
    94d4:	mov	x1, x20
    94d8:	mov	w3, #0x0                   	// #0
    94dc:	mov	x0, x20
    94e0:	bl	4bb0 <mpfr_mul@plt>
    94e4:	bl	5530 <mpfr_overflow_p@plt>
    94e8:	cbnz	w0, 9518 <mpc_exp@@Base+0x1f8>
    94ec:	ldr	x2, [sp, #128]
    94f0:	sub	x1, x19, #0x2
    94f4:	mov	x0, x20
    94f8:	mov	w3, #0x1                   	// #1
    94fc:	cmp	x2, x25
    9500:	b.eq	9518 <mpc_exp@@Base+0x1f8>  // b.none
    9504:	ldr	x4, [x24, #32]
    9508:	mov	w2, #0x0                   	// #0
    950c:	add	x4, x27, x4
    9510:	bl	54a0 <mpfr_can_round@plt>
    9514:	cbz	w0, 9418 <mpc_exp@@Base+0xf8>
    9518:	ldr	w2, [sp, #96]
    951c:	mov	x1, x21
    9520:	ldr	w3, [sp, #152]
    9524:	mov	x0, x24
    9528:	bl	5220 <mpfr_set4@plt>
    952c:	mov	w23, w0
    9530:	ldr	w2, [sp, #100]
    9534:	mov	x1, x20
    9538:	ldr	w3, [sp, #184]
    953c:	mov	x0, x28
    9540:	bl	5220 <mpfr_set4@plt>
    9544:	mov	w19, w0
    9548:	bl	5530 <mpfr_overflow_p@plt>
    954c:	cbnz	w0, 9660 <mpc_exp@@Base+0x340>
    9550:	bl	5340 <mpfr_underflow_p@plt>
    9554:	cbnz	w0, 9740 <mpc_exp@@Base+0x420>
    9558:	mov	x0, x22
    955c:	bl	4db0 <mpfr_clear@plt>
    9560:	mov	x0, x21
    9564:	bl	4db0 <mpfr_clear@plt>
    9568:	mov	x0, x20
    956c:	bl	4db0 <mpfr_clear@plt>
    9570:	ldr	w0, [sp, #104]
    9574:	cbnz	w0, 968c <mpc_exp@@Base+0x36c>
    9578:	ldr	w0, [sp, #108]
    957c:	cbnz	w0, 9684 <mpc_exp@@Base+0x364>
    9580:	cmp	w23, #0x0
    9584:	mov	w1, #0x2                   	// #2
    9588:	cset	w0, ne  // ne = any
    958c:	csel	w0, w0, w1, ge  // ge = tcont
    9590:	cmp	w19, #0x0
    9594:	orr	w2, w0, #0x4
    9598:	orr	w1, w0, #0x8
    959c:	csel	w0, w2, w0, ne  // ne = any
    95a0:	csel	w0, w0, w1, ge  // ge = tcont
    95a4:	ldp	x19, x20, [sp, #16]
    95a8:	ldp	x21, x22, [sp, #32]
    95ac:	ldp	x23, x24, [sp, #48]
    95b0:	ldp	x25, x26, [sp, #64]
    95b4:	ldp	x27, x28, [sp, #80]
    95b8:	ldp	x29, x30, [sp], #208
    95bc:	ret
    95c0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    95c4:	cmp	x20, x1
    95c8:	b.ne	9610 <mpc_exp@@Base+0x2f0>  // b.any
    95cc:	ldr	w1, [x23, #8]
    95d0:	tbnz	w1, #31, 9640 <mpc_exp@@Base+0x320>
    95d4:	mov	w1, #0x1                   	// #1
    95d8:	bl	5170 <mpfr_set_inf@plt>
    95dc:	add	x0, x24, #0x20
    95e0:	bl	4a80 <mpfr_set_nan@plt>
    95e4:	mov	w0, #0x0                   	// #0
    95e8:	ldp	x19, x20, [sp, #16]
    95ec:	ldp	x23, x24, [sp, #48]
    95f0:	ldp	x29, x30, [sp], #208
    95f4:	ret
    95f8:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    95fc:	cmp	x3, x2
    9600:	b.ne	9610 <mpc_exp@@Base+0x2f0>  // b.any
    9604:	mov	w2, #0x0                   	// #0
    9608:	bl	55d0 <mpc_set@plt>
    960c:	b	95e8 <mpc_exp@@Base+0x2c8>
    9610:	stp	x27, x28, [sp, #80]
    9614:	add	x28, x24, #0x20
    9618:	mov	x0, x24
    961c:	bl	4a80 <mpfr_set_nan@plt>
    9620:	mov	x0, x28
    9624:	bl	4a80 <mpfr_set_nan@plt>
    9628:	mov	w0, #0x0                   	// #0
    962c:	ldp	x19, x20, [sp, #16]
    9630:	ldp	x23, x24, [sp, #48]
    9634:	ldp	x27, x28, [sp, #80]
    9638:	ldp	x29, x30, [sp], #208
    963c:	ret
    9640:	mov	w3, #0x0                   	// #0
    9644:	mov	x2, #0x0                   	// #0
    9648:	mov	x1, #0x0                   	// #0
    964c:	bl	5090 <mpc_set_ui_ui@plt>
    9650:	ldp	x19, x20, [sp, #16]
    9654:	ldp	x23, x24, [sp, #48]
    9658:	ldp	x29, x30, [sp], #208
    965c:	ret
    9660:	ldr	w1, [sp, #96]
    9664:	mov	x0, x24
    9668:	bl	4e20 <mpc_fix_inf@plt>
    966c:	mov	w23, w0
    9670:	ldr	w1, [sp, #100]
    9674:	mov	x0, x28
    9678:	bl	4e20 <mpc_fix_inf@plt>
    967c:	mov	w19, w0
    9680:	b	9558 <mpc_exp@@Base+0x238>
    9684:	bl	54e0 <mpfr_set_overflow@plt>
    9688:	b	9580 <mpc_exp@@Base+0x260>
    968c:	bl	49d0 <mpfr_set_underflow@plt>
    9690:	b	9578 <mpc_exp@@Base+0x258>
    9694:	and	w2, w2, #0xf
    9698:	bl	5280 <mpfr_exp@plt>
    969c:	ldr	w3, [x23, #40]
    96a0:	asr	w2, w26, #4
    96a4:	mov	w19, w0
    96a8:	add	x1, x23, #0x20
    96ac:	mov	x0, x28
    96b0:	bl	5220 <mpfr_set4@plt>
    96b4:	mov	w2, w0
    96b8:	cmp	w19, #0x0
    96bc:	mov	w0, #0x2                   	// #2
    96c0:	cset	w1, ne  // ne = any
    96c4:	csel	w0, w1, w0, ge  // ge = tcont
    96c8:	cmp	w2, #0x0
    96cc:	orr	w1, w0, #0x4
    96d0:	csel	w1, w1, w0, ne  // ne = any
    96d4:	orr	w0, w0, #0x8
    96d8:	csel	w0, w1, w0, ge  // ge = tcont
    96dc:	ldp	x25, x26, [sp, #64]
    96e0:	ldp	x27, x28, [sp, #80]
    96e4:	b	95e8 <mpc_exp@@Base+0x2c8>
    96e8:	add	x23, x1, #0x20
    96ec:	and	w2, w2, #0xf
    96f0:	mov	x1, x23
    96f4:	bl	50a0 <mpfr_cos@plt>
    96f8:	asr	w2, w26, #4
    96fc:	mov	x1, x23
    9700:	mov	w19, w0
    9704:	mov	x0, x28
    9708:	bl	50d0 <mpfr_sin@plt>
    970c:	mov	w2, w0
    9710:	cmp	w19, #0x0
    9714:	mov	w0, #0x2                   	// #2
    9718:	cset	w1, ne  // ne = any
    971c:	csel	w0, w1, w0, ge  // ge = tcont
    9720:	cmp	w2, #0x0
    9724:	orr	w1, w0, #0x4
    9728:	orr	w3, w0, #0x8
    972c:	csel	w1, w1, w0, ne  // ne = any
    9730:	csel	w0, w1, w3, ge  // ge = tcont
    9734:	ldp	x25, x26, [sp, #64]
    9738:	ldp	x27, x28, [sp, #80]
    973c:	b	95e8 <mpc_exp@@Base+0x2c8>
    9740:	ldr	w1, [sp, #96]
    9744:	mov	x0, x24
    9748:	bl	5120 <mpc_fix_zero@plt>
    974c:	mov	w23, w0
    9750:	ldr	w1, [sp, #100]
    9754:	mov	x0, x28
    9758:	bl	5120 <mpc_fix_zero@plt>
    975c:	mov	w19, w0
    9760:	b	9558 <mpc_exp@@Base+0x238>
    9764:	stp	x21, x22, [sp, #32]
    9768:	add	x22, sp, #0x70
    976c:	mov	x0, x22
    9770:	mov	x1, #0x2                   	// #2
    9774:	bl	5490 <mpfr_init2@plt>
    9778:	ldr	w0, [x23, #8]
    977c:	tbz	w0, #31, 9834 <mpc_exp@@Base+0x514>
    9780:	ldr	x0, [x23, #48]
    9784:	mov	w3, #0x1                   	// #1
    9788:	str	w3, [sp, #120]
    978c:	str	x25, [sp, #128]
    9790:	cmp	x0, x20
    9794:	b.eq	989c <mpc_exp@@Base+0x57c>  // b.none
    9798:	add	x20, sp, #0x90
    979c:	add	x21, sp, #0xb0
    97a0:	mov	x0, x20
    97a4:	mov	x1, #0x2                   	// #2
    97a8:	bl	5490 <mpfr_init2@plt>
    97ac:	mov	x0, x21
    97b0:	mov	x1, #0x2                   	// #2
    97b4:	bl	5490 <mpfr_init2@plt>
    97b8:	add	x2, x23, #0x20
    97bc:	mov	x1, x20
    97c0:	mov	w3, #0x0                   	// #0
    97c4:	mov	x0, x21
    97c8:	bl	5570 <mpfr_sin_cos@plt>
    97cc:	ldr	w3, [sp, #152]
    97d0:	mov	x1, x22
    97d4:	mov	w2, #0x0                   	// #0
    97d8:	mov	x0, x24
    97dc:	bl	5220 <mpfr_set4@plt>
    97e0:	mov	w19, w0
    97e4:	ldr	w3, [sp, #184]
    97e8:	mov	x1, x22
    97ec:	mov	w2, #0x0                   	// #0
    97f0:	mov	x0, x28
    97f4:	bl	5220 <mpfr_set4@plt>
    97f8:	mov	w23, w0
    97fc:	mov	x0, x21
    9800:	bl	4db0 <mpfr_clear@plt>
    9804:	mov	x0, x20
    9808:	bl	4db0 <mpfr_clear@plt>
    980c:	mov	x0, x22
    9810:	bl	4db0 <mpfr_clear@plt>
    9814:	cmp	w19, #0x0
    9818:	mov	w0, #0x2                   	// #2
    981c:	cset	w1, ne  // ne = any
    9820:	csel	w0, w1, w0, ge  // ge = tcont
    9824:	cmp	w23, #0x0
    9828:	b	9594 <mpc_exp@@Base+0x274>
    982c:	ldp	x25, x26, [sp, #64]
    9830:	b	9618 <mpc_exp@@Base+0x2f8>
    9834:	mov	x0, x22
    9838:	mov	w1, #0x1                   	// #1
    983c:	bl	5170 <mpfr_set_inf@plt>
    9840:	ldr	x0, [x23, #48]
    9844:	cmp	x0, x20
    9848:	b.ne	9798 <mpc_exp@@Base+0x478>  // b.any
    984c:	ldr	w20, [x23, #8]
    9850:	mov	x0, x24
    9854:	ldr	w3, [sp, #120]
    9858:	mov	x1, x22
    985c:	mov	w2, #0x0                   	// #0
    9860:	bl	5220 <mpfr_set4@plt>
    9864:	mov	w19, w0
    9868:	tbnz	w20, #31, 98b0 <mpc_exp@@Base+0x590>
    986c:	mov	x0, x28
    9870:	bl	4a80 <mpfr_set_nan@plt>
    9874:	mov	x0, x22
    9878:	bl	4db0 <mpfr_clear@plt>
    987c:	cmp	w19, #0x0
    9880:	mov	w0, #0x2                   	// #2
    9884:	cset	w1, ne  // ne = any
    9888:	csel	w0, w1, w0, ge  // ge = tcont
    988c:	ldp	x21, x22, [sp, #32]
    9890:	ldp	x25, x26, [sp, #64]
    9894:	ldp	x27, x28, [sp, #80]
    9898:	b	95e8 <mpc_exp@@Base+0x2c8>
    989c:	mov	x0, x24
    98a0:	mov	x1, x22
    98a4:	mov	w2, #0x0                   	// #0
    98a8:	bl	5220 <mpfr_set4@plt>
    98ac:	mov	w19, w0
    98b0:	ldr	w3, [sp, #120]
    98b4:	mov	x0, x28
    98b8:	mov	x1, x22
    98bc:	mov	w2, #0x0                   	// #0
    98c0:	bl	5220 <mpfr_set4@plt>
    98c4:	mov	w23, w0
    98c8:	b	980c <mpc_exp@@Base+0x4ec>
    98cc:	nop

00000000000098d0 <mpc_fma_naive@@Base>:
    98d0:	stp	x29, x30, [sp, #-272]!
    98d4:	mov	x29, sp
    98d8:	stp	x19, x20, [sp, #16]
    98dc:	mov	x20, x2
    98e0:	mov	x19, x3
    98e4:	stp	x23, x24, [sp, #48]
    98e8:	add	x23, x2, #0x20
    98ec:	add	x24, sp, #0x70
    98f0:	ldr	x2, [x1]
    98f4:	stp	x21, x22, [sp, #32]
    98f8:	mov	x21, x1
    98fc:	stp	x27, x28, [sp, #80]
    9900:	add	x28, x1, #0x20
    9904:	mov	x22, x0
    9908:	ldr	x1, [x20]
    990c:	mov	x0, x24
    9910:	stp	x25, x26, [sp, #64]
    9914:	add	x25, sp, #0x90
    9918:	add	x1, x2, x1
    991c:	str	w4, [sp, #108]
    9920:	bl	5490 <mpfr_init2@plt>
    9924:	ldr	x2, [x21]
    9928:	mov	x0, x25
    992c:	ldr	x1, [x20, #32]
    9930:	add	x26, sp, #0xb0
    9934:	add	x27, sp, #0xd0
    9938:	add	x1, x2, x1
    993c:	bl	5490 <mpfr_init2@plt>
    9940:	ldr	x2, [x21, #32]
    9944:	mov	x0, x26
    9948:	ldr	x1, [x20]
    994c:	add	x1, x2, x1
    9950:	bl	5490 <mpfr_init2@plt>
    9954:	ldr	x2, [x21, #32]
    9958:	mov	x0, x27
    995c:	ldr	x1, [x20, #32]
    9960:	add	x1, x2, x1
    9964:	bl	5490 <mpfr_init2@plt>
    9968:	mov	x2, x20
    996c:	mov	x1, x21
    9970:	mov	w3, #0x1                   	// #1
    9974:	mov	x0, x24
    9978:	bl	4bb0 <mpfr_mul@plt>
    997c:	mov	x2, x23
    9980:	mov	x1, x21
    9984:	mov	w3, #0x1                   	// #1
    9988:	mov	x0, x25
    998c:	bl	4bb0 <mpfr_mul@plt>
    9990:	mov	x1, x28
    9994:	mov	x2, x20
    9998:	mov	w3, #0x1                   	// #1
    999c:	mov	x0, x26
    99a0:	bl	4bb0 <mpfr_mul@plt>
    99a4:	mov	x2, x23
    99a8:	mov	x1, x28
    99ac:	mov	x0, x27
    99b0:	mov	w3, #0x1                   	// #1
    99b4:	bl	4bb0 <mpfr_mul@plt>
    99b8:	ldr	x2, [sp, #128]
    99bc:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
    99c0:	ldr	x28, [sp, #208]
    99c4:	cmp	x2, x4
    99c8:	b.le	9c4c <mpc_fma_naive@@Base+0x37c>
    99cc:	ldr	x0, [sp, #224]
    99d0:	ldr	x1, [sp, #112]
    99d4:	cmp	x0, x4
    99d8:	b.le	9be8 <mpc_fma_naive@@Base+0x318>
    99dc:	cmp	x2, x0
    99e0:	sub	x8, x2, x1
    99e4:	sub	x7, x0, x28
    99e8:	csel	x3, x2, x0, ge  // ge = tcont
    99ec:	ldr	x6, [x19, #16]
    99f0:	cmp	x8, x7
    99f4:	csel	x5, x8, x7, le
    99f8:	add	x3, x3, #0x1
    99fc:	sub	x3, x3, x5
    9a00:	cmp	x6, x4
    9a04:	ldr	x5, [x19]
    9a08:	b.le	9bfc <mpc_fma_naive@@Base+0x32c>
    9a0c:	cmp	x2, x6
    9a10:	sub	x5, x6, x5
    9a14:	csel	x2, x2, x6, ge  // ge = tcont
    9a18:	cmp	x8, x5
    9a1c:	add	x2, x2, #0x1
    9a20:	csel	x1, x8, x5, le
    9a24:	sub	x1, x2, x1
    9a28:	cmp	x0, x6
    9a2c:	csel	x28, x0, x6, ge  // ge = tcont
    9a30:	cmp	x7, x5
    9a34:	add	x28, x28, #0x1
    9a38:	csel	x5, x7, x5, le
    9a3c:	sub	x28, x28, x5
    9a40:	ldr	w0, [sp, #108]
    9a44:	cmp	x28, x1
    9a48:	add	x20, sp, #0xf0
    9a4c:	and	w21, w0, #0xf
    9a50:	csel	x0, x28, x1, le
    9a54:	cmp	x0, x3
    9a58:	b.ge	9c88 <mpc_fma_naive@@Base+0x3b8>  // b.tcont
    9a5c:	cmp	x28, x1
    9a60:	b.lt	9cc4 <mpc_fma_naive@@Base+0x3f4>  // b.tstop
    9a64:	mov	x0, x20
    9a68:	bl	5490 <mpfr_init2@plt>
    9a6c:	mov	x2, x19
    9a70:	mov	x1, x24
    9a74:	mov	w3, #0x1                   	// #1
    9a78:	mov	x0, x20
    9a7c:	bl	4eb0 <mpfr_add@plt>
    9a80:	mov	w3, w21
    9a84:	mov	x2, x27
    9a88:	mov	x1, x20
    9a8c:	mov	x0, x22
    9a90:	bl	4aa0 <mpfr_sub@plt>
    9a94:	mov	w21, w0
    9a98:	ldr	x4, [sp, #160]
    9a9c:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
    9aa0:	ldr	x7, [x19, #32]
    9aa4:	cmp	x4, x5
    9aa8:	ldr	x2, [sp, #176]
    9aac:	ldr	x3, [sp, #192]
    9ab0:	b.le	9c20 <mpc_fma_naive@@Base+0x350>
    9ab4:	cmp	x3, x5
    9ab8:	ldr	x6, [sp, #144]
    9abc:	b.le	9d78 <mpc_fma_naive@@Base+0x4a8>
    9ac0:	cmp	x4, x3
    9ac4:	sub	x0, x4, x6
    9ac8:	sub	x9, x3, x2
    9acc:	csel	x1, x4, x3, ge  // ge = tcont
    9ad0:	ldr	x8, [x19, #48]
    9ad4:	cmp	x0, x9
    9ad8:	csel	x10, x0, x9, le
    9adc:	add	x1, x1, #0x1
    9ae0:	sub	x10, x1, x10
    9ae4:	cmp	x8, x5
    9ae8:	b.le	9ddc <mpc_fma_naive@@Base+0x50c>
    9aec:	cmp	x4, x8
    9af0:	sub	x7, x8, x7
    9af4:	csel	x4, x4, x8, ge  // ge = tcont
    9af8:	cmp	x0, x7
    9afc:	add	x4, x4, #0x1
    9b00:	csel	x1, x0, x7, le
    9b04:	sub	x1, x4, x1
    9b08:	mov	x6, x10
    9b0c:	cmp	x3, x8
    9b10:	csel	x2, x3, x8, ge  // ge = tcont
    9b14:	cmp	x9, x7
    9b18:	add	x2, x2, #0x1
    9b1c:	csel	x7, x9, x7, le
    9b20:	sub	x2, x2, x7
    9b24:	ldr	w3, [sp, #108]
    9b28:	cmp	x2, x1
    9b2c:	csel	x0, x2, x1, le
    9b30:	add	x19, x19, #0x20
    9b34:	add	x22, x22, #0x20
    9b38:	cmp	x0, x6
    9b3c:	asr	w23, w3, #4
    9b40:	b.ge	9d3c <mpc_fma_naive@@Base+0x46c>  // b.tcont
    9b44:	cmp	x2, x1
    9b48:	b.lt	9d00 <mpc_fma_naive@@Base+0x430>  // b.tstop
    9b4c:	mov	x0, x20
    9b50:	bl	4cd0 <mpfr_set_prec@plt>
    9b54:	mov	x2, x19
    9b58:	mov	x1, x25
    9b5c:	mov	w3, #0x1                   	// #1
    9b60:	mov	x0, x20
    9b64:	bl	4eb0 <mpfr_add@plt>
    9b68:	mov	w3, w23
    9b6c:	mov	x2, x26
    9b70:	mov	x1, x20
    9b74:	mov	x0, x22
    9b78:	bl	4eb0 <mpfr_add@plt>
    9b7c:	mov	w19, w0
    9b80:	mov	x0, x24
    9b84:	bl	4db0 <mpfr_clear@plt>
    9b88:	mov	x0, x25
    9b8c:	bl	4db0 <mpfr_clear@plt>
    9b90:	mov	x0, x26
    9b94:	bl	4db0 <mpfr_clear@plt>
    9b98:	mov	x0, x27
    9b9c:	bl	4db0 <mpfr_clear@plt>
    9ba0:	mov	x0, x20
    9ba4:	bl	4db0 <mpfr_clear@plt>
    9ba8:	cmp	w21, #0x0
    9bac:	mov	w0, #0x2                   	// #2
    9bb0:	cset	w1, ne  // ne = any
    9bb4:	csel	w0, w1, w0, ge  // ge = tcont
    9bb8:	cmp	w19, #0x0
    9bbc:	orr	w2, w0, #0x4
    9bc0:	orr	w1, w0, #0x8
    9bc4:	csel	w0, w2, w0, ne  // ne = any
    9bc8:	csel	w0, w0, w1, ge  // ge = tcont
    9bcc:	ldp	x19, x20, [sp, #16]
    9bd0:	ldp	x21, x22, [sp, #32]
    9bd4:	ldp	x23, x24, [sp, #48]
    9bd8:	ldp	x25, x26, [sp, #64]
    9bdc:	ldp	x27, x28, [sp, #80]
    9be0:	ldp	x29, x30, [sp], #272
    9be4:	ret
    9be8:	ldr	x6, [x19, #16]
    9bec:	mov	x3, x1
    9bf0:	ldr	x5, [x19]
    9bf4:	cmp	x6, x4
    9bf8:	b.gt	9db0 <mpc_fma_naive@@Base+0x4e0>
    9bfc:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    9c00:	cmp	x0, x2
    9c04:	b.le	9c68 <mpc_fma_naive@@Base+0x398>
    9c08:	ldr	x6, [x19, #16]
    9c0c:	cmp	x6, x2
    9c10:	b.le	9a40 <mpc_fma_naive@@Base+0x170>
    9c14:	sub	x5, x6, x5
    9c18:	sub	x7, x0, x28
    9c1c:	b	9a28 <mpc_fma_naive@@Base+0x158>
    9c20:	mov	x6, x2
    9c24:	cmp	x3, x5
    9c28:	b.le	9de8 <mpc_fma_naive@@Base+0x518>
    9c2c:	ldr	x8, [x19, #48]
    9c30:	mov	x1, x7
    9c34:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    9c38:	cmp	x8, x0
    9c3c:	b.le	9b24 <mpc_fma_naive@@Base+0x254>
    9c40:	sub	x7, x8, x7
    9c44:	sub	x9, x3, x2
    9c48:	b	9b0c <mpc_fma_naive@@Base+0x23c>
    9c4c:	ldr	x1, [x19]
    9c50:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    9c54:	ldr	x0, [sp, #224]
    9c58:	mov	x3, x28
    9c5c:	mov	x5, x1
    9c60:	cmp	x0, x2
    9c64:	b.gt	9c08 <mpc_fma_naive@@Base+0x338>
    9c68:	ldr	w0, [sp, #108]
    9c6c:	mov	x28, x5
    9c70:	cmp	x28, x1
    9c74:	add	x20, sp, #0xf0
    9c78:	and	w21, w0, #0xf
    9c7c:	csel	x0, x28, x1, le
    9c80:	cmp	x0, x3
    9c84:	b.lt	9a5c <mpc_fma_naive@@Base+0x18c>  // b.tstop
    9c88:	mov	x1, x3
    9c8c:	mov	x0, x20
    9c90:	bl	5490 <mpfr_init2@plt>
    9c94:	mov	x2, x27
    9c98:	mov	x1, x24
    9c9c:	mov	w3, #0x1                   	// #1
    9ca0:	mov	x0, x20
    9ca4:	bl	4aa0 <mpfr_sub@plt>
    9ca8:	mov	w3, w21
    9cac:	mov	x2, x19
    9cb0:	mov	x1, x20
    9cb4:	mov	x0, x22
    9cb8:	bl	4eb0 <mpfr_add@plt>
    9cbc:	mov	w21, w0
    9cc0:	b	9a98 <mpc_fma_naive@@Base+0x1c8>
    9cc4:	mov	x1, x28
    9cc8:	mov	x0, x20
    9ccc:	bl	5490 <mpfr_init2@plt>
    9cd0:	mov	x2, x27
    9cd4:	mov	x1, x19
    9cd8:	mov	w3, #0x1                   	// #1
    9cdc:	mov	x0, x20
    9ce0:	bl	4aa0 <mpfr_sub@plt>
    9ce4:	mov	w3, w21
    9ce8:	mov	x2, x24
    9cec:	mov	x1, x20
    9cf0:	mov	x0, x22
    9cf4:	bl	4eb0 <mpfr_add@plt>
    9cf8:	mov	w21, w0
    9cfc:	b	9a98 <mpc_fma_naive@@Base+0x1c8>
    9d00:	mov	x1, x28
    9d04:	mov	x0, x20
    9d08:	bl	4cd0 <mpfr_set_prec@plt>
    9d0c:	mov	x1, x19
    9d10:	mov	x2, x26
    9d14:	mov	w3, #0x1                   	// #1
    9d18:	mov	x0, x20
    9d1c:	bl	4eb0 <mpfr_add@plt>
    9d20:	mov	w3, w23
    9d24:	mov	x2, x25
    9d28:	mov	x1, x20
    9d2c:	mov	x0, x22
    9d30:	bl	4eb0 <mpfr_add@plt>
    9d34:	mov	w19, w0
    9d38:	b	9b80 <mpc_fma_naive@@Base+0x2b0>
    9d3c:	mov	x1, x6
    9d40:	mov	x0, x20
    9d44:	bl	4cd0 <mpfr_set_prec@plt>
    9d48:	mov	x2, x26
    9d4c:	mov	x1, x25
    9d50:	mov	w3, #0x1                   	// #1
    9d54:	mov	x0, x20
    9d58:	bl	4eb0 <mpfr_add@plt>
    9d5c:	mov	x2, x19
    9d60:	mov	w3, w23
    9d64:	mov	x1, x20
    9d68:	mov	x0, x22
    9d6c:	bl	4eb0 <mpfr_add@plt>
    9d70:	mov	w19, w0
    9d74:	b	9b80 <mpc_fma_naive@@Base+0x2b0>
    9d78:	ldr	x3, [x19, #48]
    9d7c:	mov	x2, x7
    9d80:	mov	x1, x6
    9d84:	cmp	x3, x5
    9d88:	b.le	9b24 <mpc_fma_naive@@Base+0x254>
    9d8c:	sub	x1, x4, x6
    9d90:	cmp	x4, x3
    9d94:	sub	x0, x3, x2
    9d98:	csel	x4, x4, x3, ge  // ge = tcont
    9d9c:	cmp	x0, x1
    9da0:	add	x4, x4, #0x1
    9da4:	csel	x0, x0, x1, le
    9da8:	sub	x1, x4, x0
    9dac:	b	9b24 <mpc_fma_naive@@Base+0x254>
    9db0:	sub	x0, x2, x1
    9db4:	sub	x3, x6, x5
    9db8:	cmp	x2, x6
    9dbc:	mov	x28, x5
    9dc0:	csel	x2, x2, x6, ge  // ge = tcont
    9dc4:	cmp	x0, x3
    9dc8:	csel	x0, x0, x3, le
    9dcc:	add	x2, x2, #0x1
    9dd0:	mov	x3, x1
    9dd4:	sub	x1, x2, x0
    9dd8:	b	9a40 <mpc_fma_naive@@Base+0x170>
    9ddc:	mov	x1, x6
    9de0:	mov	x6, x10
    9de4:	b	9c34 <mpc_fma_naive@@Base+0x364>
    9de8:	mov	x2, x7
    9dec:	mov	x1, x7
    9df0:	b	9b24 <mpc_fma_naive@@Base+0x254>
    9df4:	nop

0000000000009df8 <mpc_fma@@Base>:
    9df8:	stp	x29, x30, [sp, #-208]!
    9dfc:	mov	x29, sp
    9e00:	stp	x19, x20, [sp, #16]
    9e04:	mov	x19, x2
    9e08:	mov	x20, x3
    9e0c:	stp	x21, x22, [sp, #32]
    9e10:	mov	x21, x0
    9e14:	mov	w22, w4
    9e18:	mov	x0, x1
    9e1c:	stp	x23, x24, [sp, #48]
    9e20:	stp	x27, x28, [sp, #80]
    9e24:	mov	x27, x1
    9e28:	bl	5520 <mpfr_number_p@plt>
    9e2c:	cbz	w0, 9e3c <mpc_fma@@Base+0x44>
    9e30:	add	x0, x27, #0x20
    9e34:	bl	5520 <mpfr_number_p@plt>
    9e38:	cbnz	w0, 9e74 <mpc_fma@@Base+0x7c>
    9e3c:	mov	w4, w22
    9e40:	mov	x3, x20
    9e44:	mov	x2, x19
    9e48:	mov	x1, x27
    9e4c:	mov	x0, x21
    9e50:	bl	55b0 <mpc_fma_naive@plt>
    9e54:	mov	w23, w0
    9e58:	mov	w0, w23
    9e5c:	ldp	x19, x20, [sp, #16]
    9e60:	ldp	x21, x22, [sp, #32]
    9e64:	ldp	x23, x24, [sp, #48]
    9e68:	ldp	x27, x28, [sp, #80]
    9e6c:	ldp	x29, x30, [sp], #208
    9e70:	ret
    9e74:	mov	x0, x19
    9e78:	bl	5520 <mpfr_number_p@plt>
    9e7c:	cbz	w0, 9e3c <mpc_fma@@Base+0x44>
    9e80:	add	x0, x19, #0x20
    9e84:	bl	5520 <mpfr_number_p@plt>
    9e88:	cbz	w0, 9e3c <mpc_fma@@Base+0x44>
    9e8c:	mov	x0, x20
    9e90:	bl	5520 <mpfr_number_p@plt>
    9e94:	cbz	w0, 9e3c <mpc_fma@@Base+0x44>
    9e98:	add	x0, x20, #0x20
    9e9c:	bl	5520 <mpfr_number_p@plt>
    9ea0:	cbz	w0, 9e3c <mpc_fma@@Base+0x44>
    9ea4:	ldr	x0, [x21]
    9ea8:	stp	x25, x26, [sp, #64]
    9eac:	add	x28, sp, #0x90
    9eb0:	ldr	x25, [x21, #32]
    9eb4:	mov	x23, x0
    9eb8:	str	x0, [sp, #128]
    9ebc:	bl	4d70 <mpc_ceil_log2@plt>
    9ec0:	add	x23, x0, x23
    9ec4:	mov	x0, x25
    9ec8:	bl	4d70 <mpc_ceil_log2@plt>
    9ecc:	add	x24, x0, x25
    9ed0:	add	x2, x28, #0x20
    9ed4:	add	x23, x23, #0xa
    9ed8:	add	x24, x24, #0xa
    9edc:	mov	x1, x23
    9ee0:	mov	x0, x28
    9ee4:	str	x2, [sp, #120]
    9ee8:	mov	x2, x24
    9eec:	bl	5410 <mpc_init3@plt>
    9ef0:	cmp	wzr, w22, lsr #4
    9ef4:	mov	w0, #0x2                   	// #2
    9ef8:	stp	wzr, w0, [sp, #112]
    9efc:	cinc	x0, x25, eq  // eq = none
    9f00:	mov	x2, x19
    9f04:	mov	x1, x27
    9f08:	mov	w3, #0x11                  	// #17
    9f0c:	str	x0, [sp, #136]
    9f10:	mov	x0, x28
    9f14:	bl	4f20 <mpc_mul@plt>
    9f18:	ldr	x6, [sp, #160]
    9f1c:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    9f20:	mov	w26, #0x0                   	// #0
    9f24:	cmp	x6, x25
    9f28:	b.eq	a014 <mpc_fma@@Base+0x21c>  // b.none
    9f2c:	ldr	x4, [sp, #192]
    9f30:	cmp	x4, x25
    9f34:	b.eq	a014 <mpc_fma@@Base+0x21c>  // b.none
    9f38:	mov	x2, x20
    9f3c:	mov	x1, x28
    9f40:	mov	x0, x28
    9f44:	mov	w3, #0x11                  	// #17
    9f48:	stp	x6, x4, [sp, #96]
    9f4c:	bl	4d20 <mpc_add@plt>
    9f50:	ldr	x0, [sp, #160]
    9f54:	ldp	x6, x4, [sp, #96]
    9f58:	cmp	x0, x25
    9f5c:	b.eq	a014 <mpc_fma@@Base+0x21c>  // b.none
    9f60:	ldr	x1, [sp, #192]
    9f64:	cmp	x1, x25
    9f68:	b.eq	a014 <mpc_fma@@Base+0x21c>  // b.none
    9f6c:	subs	x6, x6, x0
    9f70:	csel	x6, x6, xzr, pl  // pl = nfrst
    9f74:	subs	x4, x4, x1
    9f78:	add	x7, x6, #0x1
    9f7c:	csel	x4, x4, xzr, pl  // pl = nfrst
    9f80:	add	x6, x4, #0x1
    9f84:	cmp	x23, x7
    9f88:	b.ge	a058 <mpc_fma@@Base+0x260>  // b.tcont
    9f8c:	cmp	x24, x6
    9f90:	b.ge	a0d0 <mpc_fma@@Base+0x2d8>  // b.tcont
    9f94:	mov	w26, #0x0                   	// #0
    9f98:	mov	w3, #0x1                   	// #1
    9f9c:	str	wzr, [sp, #112]
    9fa0:	ldr	w0, [sp, #116]
    9fa4:	cmp	w26, #0x0
    9fa8:	cset	w1, eq  // eq = none
    9fac:	cmp	w0, #0x1
    9fb0:	b.eq	a028 <mpc_fma@@Base+0x230>  // b.none
    9fb4:	cmp	w1, #0x0
    9fb8:	add	x0, x23, x7
    9fbc:	ccmp	x7, #0x1, #0x4, ne  // ne = any
    9fc0:	add	x4, x24, x6
    9fc4:	csel	x23, x0, x23, gt
    9fc8:	cmp	w3, #0x0
    9fcc:	ccmp	x6, #0x1, #0x4, ne  // ne = any
    9fd0:	mov	w1, #0x1                   	// #1
    9fd4:	csel	x24, x4, x24, gt
    9fd8:	mov	x0, x28
    9fdc:	str	w1, [sp, #116]
    9fe0:	mov	x1, x23
    9fe4:	bl	4cd0 <mpfr_set_prec@plt>
    9fe8:	ldr	x0, [sp, #120]
    9fec:	mov	x1, x24
    9ff0:	bl	4cd0 <mpfr_set_prec@plt>
    9ff4:	mov	x2, x19
    9ff8:	mov	x1, x27
    9ffc:	mov	x0, x28
    a000:	mov	w3, #0x11                  	// #17
    a004:	bl	4f20 <mpc_mul@plt>
    a008:	ldr	x6, [sp, #160]
    a00c:	cmp	x6, x25
    a010:	b.ne	9f2c <mpc_fma@@Base+0x134>  // b.any
    a014:	ldr	w0, [sp, #112]
    a018:	cmp	w26, #0x0
    a01c:	cset	w1, eq  // eq = none
    a020:	cmp	w0, #0x0
    a024:	cset	w3, eq  // eq = none
    a028:	mov	x0, x28
    a02c:	str	w1, [sp, #96]
    a030:	str	w3, [sp, #104]
    a034:	bl	4a50 <mpc_clear@plt>
    a038:	ldr	w1, [sp, #96]
    a03c:	mov	w23, #0x0                   	// #0
    a040:	ldr	w3, [sp, #104]
    a044:	cmp	w1, #0x0
    a048:	ccmp	w3, #0x0, #0x0, eq  // eq = none
    a04c:	b.ne	a0fc <mpc_fma@@Base+0x304>  // b.any
    a050:	ldp	x25, x26, [sp, #64]
    a054:	b	9e58 <mpc_fma@@Base+0x60>
    a058:	tst	x22, #0xf
    a05c:	sub	x1, x23, x7
    a060:	ldr	x0, [sp, #128]
    a064:	mov	w3, #0x1                   	// #1
    a068:	mov	w2, #0x0                   	// #0
    a06c:	stp	x7, x6, [sp, #96]
    a070:	cinc	x4, x0, eq  // eq = none
    a074:	mov	x0, x28
    a078:	bl	54a0 <mpfr_can_round@plt>
    a07c:	ldp	x7, x6, [sp, #96]
    a080:	str	wzr, [sp, #112]
    a084:	mov	w26, w0
    a088:	mov	w3, #0x1                   	// #1
    a08c:	cmp	x24, x6
    a090:	b.lt	9fa0 <mpc_fma@@Base+0x1a8>  // b.tstop
    a094:	ldr	x0, [sp, #120]
    a098:	sub	x1, x24, x6
    a09c:	ldr	x4, [sp, #136]
    a0a0:	mov	w2, #0x0                   	// #0
    a0a4:	stp	x6, x7, [sp, #96]
    a0a8:	bl	54a0 <mpfr_can_round@plt>
    a0ac:	str	w0, [sp, #112]
    a0b0:	cmp	w26, #0x0
    a0b4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    a0b8:	ldp	x6, x7, [sp, #96]
    a0bc:	b.ne	a120 <mpc_fma@@Base+0x328>  // b.any
    a0c0:	ldr	w0, [sp, #112]
    a0c4:	cmp	w0, #0x0
    a0c8:	cset	w3, eq  // eq = none
    a0cc:	b	9fa0 <mpc_fma@@Base+0x1a8>
    a0d0:	ldr	x0, [sp, #120]
    a0d4:	sub	x1, x24, x6
    a0d8:	ldr	x4, [sp, #136]
    a0dc:	mov	w3, #0x1                   	// #1
    a0e0:	mov	w2, #0x0                   	// #0
    a0e4:	stp	x6, x7, [sp, #96]
    a0e8:	mov	w26, #0x0                   	// #0
    a0ec:	bl	54a0 <mpfr_can_round@plt>
    a0f0:	str	w0, [sp, #112]
    a0f4:	ldp	x6, x7, [sp, #96]
    a0f8:	b	a0c0 <mpc_fma@@Base+0x2c8>
    a0fc:	mov	w4, w22
    a100:	mov	x3, x20
    a104:	mov	x2, x19
    a108:	mov	x1, x27
    a10c:	mov	x0, x21
    a110:	bl	55b0 <mpc_fma_naive@plt>
    a114:	mov	w23, w0
    a118:	ldp	x25, x26, [sp, #64]
    a11c:	b	9e58 <mpc_fma@@Base+0x60>
    a120:	mov	w2, w22
    a124:	mov	x1, x28
    a128:	mov	x0, x21
    a12c:	bl	55d0 <mpc_set@plt>
    a130:	mov	w23, w0
    a134:	mov	x0, x28
    a138:	bl	4a50 <mpc_clear@plt>
    a13c:	ldp	x25, x26, [sp, #64]
    a140:	b	9e58 <mpc_fma@@Base+0x60>
    a144:	nop

000000000000a148 <mpc_fr_div@@Base>:
    a148:	stp	x29, x30, [sp, #-128]!
    a14c:	mov	x29, sp
    a150:	ldp	x6, x7, [x1]
    a154:	stp	x19, x20, [sp, #16]
    a158:	add	x19, sp, #0x40
    a15c:	ldp	x4, x5, [x1, #16]
    a160:	str	x23, [sp, #48]
    a164:	add	x23, sp, #0x60
    a168:	mov	x20, x0
    a16c:	mov	x0, x23
    a170:	stp	x21, x22, [sp, #32]
    a174:	mov	x21, x2
    a178:	mov	w22, w3
    a17c:	stp	x6, x7, [sp, #64]
    a180:	stp	x4, x5, [sp, #80]
    a184:	bl	4ae0 <mpfr_init@plt>
    a188:	mov	w3, w22
    a18c:	mov	x2, x21
    a190:	mov	x1, x19
    a194:	mov	w5, #0x1                   	// #1
    a198:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
    a19c:	mov	x0, x20
    a1a0:	str	w5, [sp, #104]
    a1a4:	str	x4, [sp, #112]
    a1a8:	bl	52a0 <mpc_div@plt>
    a1ac:	mov	w19, w0
    a1b0:	mov	x0, x23
    a1b4:	bl	4db0 <mpfr_clear@plt>
    a1b8:	mov	w0, w19
    a1bc:	ldp	x19, x20, [sp, #16]
    a1c0:	ldp	x21, x22, [sp, #32]
    a1c4:	ldr	x23, [sp, #48]
    a1c8:	ldp	x29, x30, [sp], #128
    a1cc:	ret

000000000000a1d0 <mpc_fr_sub@@Base>:
    a1d0:	stp	x29, x30, [sp, #-48]!
    a1d4:	mov	x29, sp
    a1d8:	stp	x19, x20, [sp, #16]
    a1dc:	mov	w20, w3
    a1e0:	and	w3, w3, #0xf
    a1e4:	stp	x21, x22, [sp, #32]
    a1e8:	mov	x22, x2
    a1ec:	mov	x21, x0
    a1f0:	bl	4aa0 <mpfr_sub@plt>
    a1f4:	mov	w19, w0
    a1f8:	asr	w2, w20, #4
    a1fc:	add	x1, x22, #0x20
    a200:	add	x0, x21, #0x20
    a204:	bl	4bc0 <mpfr_neg@plt>
    a208:	cmp	w19, #0x0
    a20c:	mov	w2, #0x2                   	// #2
    a210:	cset	w1, ne  // ne = any
    a214:	csel	w1, w1, w2, ge  // ge = tcont
    a218:	cmp	w0, #0x0
    a21c:	orr	w2, w1, #0x4
    a220:	csel	w2, w2, w1, ne  // ne = any
    a224:	orr	w1, w1, #0x8
    a228:	csel	w1, w2, w1, ge  // ge = tcont
    a22c:	mov	w0, w1
    a230:	ldp	x19, x20, [sp, #16]
    a234:	ldp	x21, x22, [sp, #32]
    a238:	ldp	x29, x30, [sp], #48
    a23c:	ret

000000000000a240 <mpc_get_prec2@@Base>:
    a240:	ldr	x3, [x2]
    a244:	str	x3, [x0]
    a248:	ldr	x0, [x2, #32]
    a24c:	str	x0, [x1]
    a250:	ret
    a254:	nop

000000000000a258 <mpc_get_prec@@Base>:
    a258:	ldr	x1, [x0]
    a25c:	ldr	x0, [x0, #32]
    a260:	cmp	x0, x1
    a264:	csel	x0, x1, xzr, eq  // eq = none
    a268:	ret
    a26c:	nop

000000000000a270 <mpc_get_version@@Base>:
    a270:	adrp	x0, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a274:	add	x0, x0, #0x3c8
    a278:	ret
    a27c:	nop
    a280:	stp	x29, x30, [sp, #-80]!
    a284:	mov	x29, sp
    a288:	stp	x21, x22, [sp, #32]
    a28c:	mov	x21, x2
    a290:	mov	w22, w0
    a294:	ldr	x2, [x2, #16]
    a298:	stp	x19, x20, [sp, #16]
    a29c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    a2a0:	cmp	x2, x0
    a2a4:	b.eq	a414 <mpc_get_version@@Base+0x1a4>  // b.none
    a2a8:	mov	w5, w3
    a2ac:	mov	x4, x21
    a2b0:	mov	x3, x1
    a2b4:	mov	w2, w22
    a2b8:	add	x1, sp, #0x48
    a2bc:	mov	x0, #0x0                   	// #0
    a2c0:	bl	5110 <mpfr_get_str@plt>
    a2c4:	mov	x19, x0
    a2c8:	cbz	x0, a4b4 <mpc_get_version@@Base+0x244>
    a2cc:	mov	x0, x21
    a2d0:	ldr	x21, [sp, #72]
    a2d4:	bl	5520 <mpfr_number_p@plt>
    a2d8:	mov	w20, w0
    a2dc:	mov	x0, x19
    a2e0:	bl	4a40 <strlen@plt>
    a2e4:	mov	x3, x0
    a2e8:	cbz	w20, a478 <mpc_get_version@@Base+0x208>
    a2ec:	stp	x23, x24, [sp, #48]
    a2f0:	sub	x21, x21, #0x1
    a2f4:	cmp	w22, #0x10
    a2f8:	ldrb	w23, [x19]
    a2fc:	lsl	x1, x21, #2
    a300:	csel	x21, x1, x21, eq  // eq = none
    a304:	add	x0, x0, #0x2
    a308:	sub	w23, w23, #0x2b
    a30c:	cmp	x21, #0x0
    a310:	and	w23, w23, #0xfffffffd
    a314:	and	w23, w23, #0xff
    a318:	cbz	x21, a34c <mpc_get_version@@Base+0xdc>
    a31c:	add	x0, x3, #0x5
    a320:	mov	x1, x21
    a324:	b.lt	a454 <mpc_get_version@@Base+0x1e4>  // b.tstop
    a328:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    a32c:	cmp	x1, #0x9
    a330:	movk	x3, #0xcccd
    a334:	b.le	a34c <mpc_get_version@@Base+0xdc>
    a338:	umulh	x2, x1, x3
    a33c:	cmp	x1, #0x63
    a340:	add	x0, x0, #0x1
    a344:	lsr	x1, x2, #3
    a348:	b.gt	a338 <mpc_get_version@@Base+0xc8>
    a34c:	bl	4c30 <mpc_alloc_str@plt>
    a350:	mov	x20, x0
    a354:	ldrb	w1, [x19]
    a358:	strb	w1, [x0]
    a35c:	cbz	w23, a3f8 <mpc_get_version@@Base+0x188>
    a360:	add	x24, x19, #0x1
    a364:	add	x23, x0, #0x1
    a368:	bl	4cb0 <localeconv@plt>
    a36c:	mov	x2, x0
    a370:	mov	x1, x24
    a374:	mov	x0, x20
    a378:	ldr	x2, [x2]
    a37c:	ldrb	w2, [x2]
    a380:	strb	w2, [x23]
    a384:	strb	wzr, [x23, #1]
    a388:	bl	4e30 <strcat@plt>
    a38c:	cbz	x21, a40c <mpc_get_version@@Base+0x19c>
    a390:	mov	x0, x19
    a394:	bl	4a40 <strlen@plt>
    a398:	add	x1, x0, #0x1
    a39c:	cmp	w22, #0xa
    a3a0:	add	x2, x20, x1
    a3a4:	add	x0, x2, #0x1
    a3a8:	b.eq	a49c <mpc_get_version@@Base+0x22c>  // b.none
    a3ac:	cmp	w22, #0x10
    a3b0:	b.eq	a490 <mpc_get_version@@Base+0x220>  // b.none
    a3b4:	cmp	w22, #0x2
    a3b8:	b.eq	a490 <mpc_get_version@@Base+0x220>  // b.none
    a3bc:	mov	w1, #0x40                  	// #64
    a3c0:	strb	w1, [x2]
    a3c4:	strb	wzr, [x2, #1]
    a3c8:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a3cc:	mov	x2, x21
    a3d0:	add	x1, x1, #0x3e8
    a3d4:	bl	4b70 <sprintf@plt>
    a3d8:	ldp	x23, x24, [sp, #48]
    a3dc:	mov	x0, x19
    a3e0:	bl	5330 <mpfr_free_str@plt>
    a3e4:	mov	x0, x20
    a3e8:	ldp	x19, x20, [sp, #16]
    a3ec:	ldp	x21, x22, [sp, #32]
    a3f0:	ldp	x29, x30, [sp], #80
    a3f4:	ret
    a3f8:	ldrb	w0, [x19, #1]
    a3fc:	add	x24, x19, #0x2
    a400:	add	x23, x20, #0x2
    a404:	strb	w0, [x20, #1]
    a408:	b	a368 <mpc_get_version@@Base+0xf8>
    a40c:	ldp	x23, x24, [sp, #48]
    a410:	b	a3dc <mpc_get_version@@Base+0x16c>
    a414:	mov	x0, #0x3                   	// #3
    a418:	bl	4c30 <mpc_alloc_str@plt>
    a41c:	ldr	w1, [x21, #8]
    a420:	mov	x20, x0
    a424:	mov	w2, #0x2b                  	// #43
    a428:	mov	w0, #0x2d                  	// #45
    a42c:	cmp	w1, #0x0
    a430:	mov	w1, #0x30                  	// #48
    a434:	csel	w0, w0, w2, lt  // lt = tstop
    a438:	strb	w0, [x20]
    a43c:	sturh	w1, [x20, #1]
    a440:	mov	x0, x20
    a444:	ldp	x19, x20, [sp, #16]
    a448:	ldp	x21, x22, [sp, #32]
    a44c:	ldp	x29, x30, [sp], #80
    a450:	ret
    a454:	cmn	x21, #0xa
    a458:	b.ge	a4a8 <mpc_get_version@@Base+0x238>  // b.tcont
    a45c:	mov	x2, #0x6666666666666666    	// #7378697629483820646
    a460:	asr	x1, x21, #63
    a464:	movk	x2, #0x6667
    a468:	add	x0, x3, #0x6
    a46c:	smulh	x2, x21, x2
    a470:	sub	x1, x1, x2, asr #2
    a474:	b	a328 <mpc_get_version@@Base+0xb8>
    a478:	add	x0, x0, #0x1
    a47c:	bl	4c30 <mpc_alloc_str@plt>
    a480:	mov	x1, x19
    a484:	mov	x20, x0
    a488:	bl	5390 <strcpy@plt>
    a48c:	b	a3dc <mpc_get_version@@Base+0x16c>
    a490:	mov	w1, #0x70                  	// #112
    a494:	strb	w1, [x2]
    a498:	b	a3c4 <mpc_get_version@@Base+0x154>
    a49c:	mov	w3, #0x65                  	// #101
    a4a0:	strb	w3, [x20, x1]
    a4a4:	b	a3c4 <mpc_get_version@@Base+0x154>
    a4a8:	add	x3, x3, #0x6
    a4ac:	csel	x0, x3, x0, eq  // eq = none
    a4b0:	b	a34c <mpc_get_version@@Base+0xdc>
    a4b4:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    a4b8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a4bc:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a4c0:	add	x4, x4, #0x3d0
    a4c4:	ldr	x0, [x0, #4008]
    a4c8:	add	x2, x2, #0x3e0
    a4cc:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a4d0:	add	x1, x1, #0x318
    a4d4:	mov	w3, #0xc8                  	// #200
    a4d8:	stp	x23, x24, [sp, #48]
    a4dc:	ldr	x0, [x0]
    a4e0:	bl	55f0 <fprintf@plt>
    a4e4:	bl	5050 <abort@plt>

000000000000a4e8 <mpc_get_dc@@Base>:
    a4e8:	stp	x29, x30, [sp, #-48]!
    a4ec:	mov	x29, sp
    a4f0:	stp	x19, x20, [sp, #16]
    a4f4:	mov	w20, w1
    a4f8:	mov	x19, x0
    a4fc:	asr	w1, w1, #4
    a500:	add	x0, x0, #0x20
    a504:	str	d8, [sp, #32]
    a508:	bl	4b90 <mpfr_get_d@plt>
    a50c:	fmov	d8, d0
    a510:	and	w1, w20, #0xf
    a514:	mov	x0, x19
    a518:	bl	4b90 <mpfr_get_d@plt>
    a51c:	fmov	d1, d8
    a520:	movi	d2, #0x0
    a524:	ldp	x19, x20, [sp, #16]
    a528:	fmadd	d0, d8, d2, d0
    a52c:	ldr	d8, [sp, #32]
    a530:	ldp	x29, x30, [sp], #48
    a534:	ret

000000000000a538 <mpc_get_ldc@@Base>:
    a538:	stp	x29, x30, [sp, #-64]!
    a53c:	mov	x29, sp
    a540:	stp	x19, x20, [sp, #16]
    a544:	mov	w20, w1
    a548:	mov	x19, x0
    a54c:	asr	w1, w1, #4
    a550:	add	x0, x0, #0x20
    a554:	bl	5160 <mpfr_get_ld@plt>
    a558:	str	q0, [sp, #32]
    a55c:	and	w1, w20, #0xf
    a560:	mov	x0, x19
    a564:	bl	5160 <mpfr_get_ld@plt>
    a568:	str	q0, [sp, #48]
    a56c:	movi	v1.2d, #0x0
    a570:	ldr	q2, [sp, #32]
    a574:	mov	v0.16b, v2.16b
    a578:	bl	14a68 <mpc_ui_ui_sub@@Base+0xbb0>
    a57c:	ldr	q4, [sp, #48]
    a580:	mov	v1.16b, v4.16b
    a584:	bl	13f40 <mpc_ui_ui_sub@@Base+0x88>
    a588:	ldr	q2, [sp, #32]
    a58c:	ldp	x19, x20, [sp, #16]
    a590:	mov	v1.16b, v2.16b
    a594:	ldp	x29, x30, [sp], #64
    a598:	ret
    a59c:	nop

000000000000a5a0 <mpc_get_str@@Base>:
    a5a0:	stp	x29, x30, [sp, #-48]!
    a5a4:	sub	w4, w0, #0x2
    a5a8:	cmp	w4, #0x22
    a5ac:	mov	x29, sp
    a5b0:	stp	x19, x20, [sp, #16]
    a5b4:	b.hi	a670 <mpc_get_str@@Base+0xd0>  // b.pmore
    a5b8:	mov	w20, w3
    a5bc:	mov	w19, w0
    a5c0:	and	w3, w3, #0xf
    a5c4:	stp	x21, x22, [sp, #32]
    a5c8:	mov	x21, x1
    a5cc:	mov	x22, x2
    a5d0:	bl	a280 <mpc_get_version@@Base+0x10>
    a5d4:	asr	w3, w20, #4
    a5d8:	mov	x1, x21
    a5dc:	add	x2, x22, #0x20
    a5e0:	mov	x21, x0
    a5e4:	mov	w0, w19
    a5e8:	bl	a280 <mpc_get_version@@Base+0x10>
    a5ec:	mov	x20, x0
    a5f0:	mov	x0, x21
    a5f4:	bl	4a40 <strlen@plt>
    a5f8:	mov	x19, x0
    a5fc:	mov	x0, x20
    a600:	bl	4a40 <strlen@plt>
    a604:	add	x0, x19, x0
    a608:	add	x0, x0, #0x4
    a60c:	bl	4c30 <mpc_alloc_str@plt>
    a610:	mov	x19, x0
    a614:	cbz	x0, a684 <mpc_get_str@@Base+0xe4>
    a618:	mov	w2, #0x28                  	// #40
    a61c:	strb	w2, [x0], #1
    a620:	mov	x1, x21
    a624:	bl	4cc0 <stpcpy@plt>
    a628:	mov	x2, x0
    a62c:	mov	w3, #0x20                  	// #32
    a630:	mov	x1, x20
    a634:	add	x0, x0, #0x1
    a638:	strb	w3, [x2]
    a63c:	bl	4cc0 <stpcpy@plt>
    a640:	mov	x1, x0
    a644:	mov	w2, #0x29                  	// #41
    a648:	mov	x0, x21
    a64c:	strh	w2, [x1]
    a650:	bl	5040 <mpc_free_str@plt>
    a654:	mov	x0, x20
    a658:	bl	5040 <mpc_free_str@plt>
    a65c:	mov	x0, x19
    a660:	ldp	x19, x20, [sp, #16]
    a664:	ldp	x21, x22, [sp, #32]
    a668:	ldp	x29, x30, [sp], #48
    a66c:	ret
    a670:	mov	x19, #0x0                   	// #0
    a674:	mov	x0, x19
    a678:	ldp	x19, x20, [sp, #16]
    a67c:	ldp	x29, x30, [sp], #48
    a680:	ret
    a684:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    a688:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a68c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a690:	add	x4, x4, #0x3f0
    a694:	ldr	x0, [x0, #4008]
    a698:	add	x2, x2, #0x3e0
    a69c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    a6a0:	add	x1, x1, #0x318
    a6a4:	mov	w3, #0xe0                  	// #224
    a6a8:	ldr	x0, [x0]
    a6ac:	bl	55f0 <fprintf@plt>
    a6b0:	bl	5050 <abort@plt>
    a6b4:	nop

000000000000a6b8 <mpc_imag@@Base>:
    a6b8:	mov	x3, x1
    a6bc:	add	x1, x1, #0x20
    a6c0:	ldr	w3, [x3, #40]
    a6c4:	b	5220 <mpfr_set4@plt>

000000000000a6c8 <mpc_init2@@Base>:
    a6c8:	stp	x29, x30, [sp, #-32]!
    a6cc:	mov	x29, sp
    a6d0:	stp	x19, x20, [sp, #16]
    a6d4:	mov	x19, x0
    a6d8:	mov	x20, x1
    a6dc:	bl	5490 <mpfr_init2@plt>
    a6e0:	mov	x1, x20
    a6e4:	add	x0, x19, #0x20
    a6e8:	ldp	x19, x20, [sp, #16]
    a6ec:	ldp	x29, x30, [sp], #32
    a6f0:	b	5490 <mpfr_init2@plt>
    a6f4:	nop

000000000000a6f8 <mpc_init3@@Base>:
    a6f8:	stp	x29, x30, [sp, #-32]!
    a6fc:	mov	x29, sp
    a700:	stp	x19, x20, [sp, #16]
    a704:	mov	x20, x2
    a708:	mov	x19, x0
    a70c:	bl	5490 <mpfr_init2@plt>
    a710:	mov	x1, x20
    a714:	add	x0, x19, #0x20
    a718:	ldp	x19, x20, [sp, #16]
    a71c:	ldp	x29, x30, [sp], #32
    a720:	b	5490 <mpfr_init2@plt>
    a724:	nop
    a728:	stp	x29, x30, [sp, #-48]!
    a72c:	mov	x29, sp
    a730:	stp	x19, x20, [sp, #16]
    a734:	stp	x21, x22, [sp, #32]
    a738:	mov	x21, x0
    a73c:	bl	4f70 <getc@plt>
    a740:	cmn	w0, #0x1
    a744:	b.eq	a7a4 <mpc_init3@@Base+0xac>  // b.none
    a748:	mov	w19, w0
    a74c:	mov	x20, #0x0                   	// #0
    a750:	bl	51c0 <__ctype_b_loc@plt>
    a754:	mov	x22, x0
    a758:	b	a770 <mpc_init3@@Base+0x78>
    a75c:	bl	4f70 <getc@plt>
    a760:	add	x20, x20, #0x1
    a764:	mov	w19, w0
    a768:	cmn	w0, #0x1
    a76c:	b.eq	a790 <mpc_init3@@Base+0x98>  // b.none
    a770:	ldr	x2, [x22]
    a774:	ubfiz	x1, x19, #1, #8
    a778:	mov	x0, x21
    a77c:	ldrh	w1, [x2, x1]
    a780:	tbnz	w1, #13, a75c <mpc_init3@@Base+0x64>
    a784:	mov	x1, x21
    a788:	mov	w0, w19
    a78c:	bl	5260 <ungetc@plt>
    a790:	mov	x0, x20
    a794:	ldp	x19, x20, [sp, #16]
    a798:	ldp	x21, x22, [sp, #32]
    a79c:	ldp	x29, x30, [sp], #48
    a7a0:	ret
    a7a4:	mov	x20, #0x0                   	// #0
    a7a8:	b	a790 <mpc_init3@@Base+0x98>
    a7ac:	nop
    a7b0:	stp	x29, x30, [sp, #-112]!
    a7b4:	mov	x29, sp
    a7b8:	stp	x21, x22, [sp, #32]
    a7bc:	stp	x23, x24, [sp, #48]
    a7c0:	mov	x23, x0
    a7c4:	mov	x0, #0x64                  	// #100
    a7c8:	bl	4c30 <mpc_alloc_str@plt>
    a7cc:	mov	x22, x0
    a7d0:	mov	x0, x23
    a7d4:	bl	4f70 <getc@plt>
    a7d8:	cmp	w0, #0xa
    a7dc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    a7e0:	b.eq	aa30 <mpc_init3@@Base+0x338>  // b.none
    a7e4:	stp	x19, x20, [sp, #16]
    a7e8:	mov	w19, w0
    a7ec:	mov	x20, #0x0                   	// #0
    a7f0:	stp	x25, x26, [sp, #64]
    a7f4:	bl	51c0 <__ctype_b_loc@plt>
    a7f8:	mov	x25, #0x64                  	// #100
    a7fc:	mov	x24, x0
    a800:	b	a81c <mpc_init3@@Base+0x124>
    a804:	mov	x0, x23
    a808:	bl	4f70 <getc@plt>
    a80c:	cmp	w0, #0xa
    a810:	mov	w19, w0
    a814:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    a818:	b.eq	a884 <mpc_init3@@Base+0x18c>  // b.none
    a81c:	ldr	x0, [x24]
    a820:	ubfiz	x2, x19, #1, #8
    a824:	mov	x21, x20
    a828:	and	w3, w19, #0xff
    a82c:	add	x20, x20, #0x1
    a830:	ldrh	w2, [x0, x2]
    a834:	tbnz	w2, #13, a890 <mpc_init3@@Base+0x198>
    a838:	sub	w0, w19, #0x28
    a83c:	cmp	w0, #0x1
    a840:	b.ls	a890 <mpc_init3@@Base+0x198>  // b.plast
    a844:	strb	w3, [x22, x21]
    a848:	cmp	x25, x20
    a84c:	b.ne	a804 <mpc_init3@@Base+0x10c>  // b.any
    a850:	lsl	x19, x25, #1
    a854:	mov	x1, x25
    a858:	mov	x2, x19
    a85c:	mov	x0, x22
    a860:	bl	5380 <mpc_realloc_str@plt>
    a864:	mov	x22, x0
    a868:	mov	x0, x23
    a86c:	mov	x25, x19
    a870:	bl	4f70 <getc@plt>
    a874:	cmp	w0, #0xa
    a878:	mov	w19, w0
    a87c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    a880:	b.ne	a81c <mpc_init3@@Base+0x124>  // b.any
    a884:	add	x0, x21, #0x2
    a888:	mov	x21, x20
    a88c:	mov	x20, x0
    a890:	mov	x1, x25
    a894:	mov	x0, x22
    a898:	mov	x2, x20
    a89c:	bl	5380 <mpc_realloc_str@plt>
    a8a0:	strb	wzr, [x0, x21]
    a8a4:	mov	x22, x0
    a8a8:	add	x25, x0, x21
    a8ac:	cbz	x21, a8e8 <mpc_init3@@Base+0x1f0>
    a8b0:	cmp	w19, #0x28
    a8b4:	b.eq	a904 <mpc_init3@@Base+0x20c>  // b.none
    a8b8:	cmn	w19, #0x1
    a8bc:	b.eq	a8e8 <mpc_init3@@Base+0x1f0>  // b.none
    a8c0:	mov	x1, x23
    a8c4:	mov	w0, w19
    a8c8:	bl	5260 <ungetc@plt>
    a8cc:	mov	x0, x22
    a8d0:	ldp	x19, x20, [sp, #16]
    a8d4:	ldp	x21, x22, [sp, #32]
    a8d8:	ldp	x23, x24, [sp, #48]
    a8dc:	ldp	x25, x26, [sp, #64]
    a8e0:	ldp	x29, x30, [sp], #112
    a8e4:	ret
    a8e8:	ldp	x19, x20, [sp, #16]
    a8ec:	ldp	x25, x26, [sp, #64]
    a8f0:	mov	x0, x22
    a8f4:	ldp	x21, x22, [sp, #32]
    a8f8:	ldp	x23, x24, [sp, #48]
    a8fc:	ldp	x29, x30, [sp], #112
    a900:	ret
    a904:	cmp	x21, #0x3
    a908:	b.eq	a9f0 <mpc_init3@@Base+0x2f8>  // b.none
    a90c:	cmp	x21, #0x5
    a910:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a914:	ldrb	w0, [x0]
    a918:	cmp	w0, #0x40
    a91c:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a920:	bl	4c90 <__ctype_tolower_loc@plt>
    a924:	ldrb	w1, [x22, #1]
    a928:	ldr	x0, [x0]
    a92c:	ldr	w1, [x0, x1, lsl #2]
    a930:	cmp	w1, #0x6e
    a934:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a938:	ldrb	w1, [x22, #2]
    a93c:	ldr	w1, [x0, x1, lsl #2]
    a940:	cmp	w1, #0x61
    a944:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a948:	ldrb	w1, [x22, #3]
    a94c:	ldr	w0, [x0, x1, lsl #2]
    a950:	cmp	w0, #0x6e
    a954:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a958:	ldrb	w0, [x22, #4]
    a95c:	cmp	w0, #0x40
    a960:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    a964:	mov	x0, #0x64                  	// #100
    a968:	stp	x27, x28, [sp, #80]
    a96c:	bl	4c30 <mpc_alloc_str@plt>
    a970:	mov	x27, #0x64                  	// #100
    a974:	mov	x26, x0
    a978:	mov	x28, #0x0                   	// #0
    a97c:	mov	x0, x23
    a980:	str	x26, [sp, #104]
    a984:	bl	4f70 <getc@plt>
    a988:	mov	w19, w0
    a98c:	b	a9a0 <mpc_init3@@Base+0x2a8>
    a990:	mov	x0, x23
    a994:	mov	x28, x26
    a998:	bl	4f70 <getc@plt>
    a99c:	mov	w19, w0
    a9a0:	ldr	x1, [x24]
    a9a4:	ubfiz	x0, x19, #1, #8
    a9a8:	cmp	w19, #0x5f
    a9ac:	and	w2, w19, #0xff
    a9b0:	add	x26, x28, #0x1
    a9b4:	ldrh	w0, [x1, x0]
    a9b8:	and	w0, w0, #0x8
    a9bc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    a9c0:	b.eq	aa70 <mpc_init3@@Base+0x378>  // b.none
    a9c4:	ldr	x0, [sp, #104]
    a9c8:	cmp	x27, x26
    a9cc:	strb	w2, [x0, x28]
    a9d0:	b.ne	a990 <mpc_init3@@Base+0x298>  // b.any
    a9d4:	lsl	x19, x27, #1
    a9d8:	mov	x1, x27
    a9dc:	mov	x2, x19
    a9e0:	mov	x27, x19
    a9e4:	bl	5380 <mpc_realloc_str@plt>
    a9e8:	str	x0, [sp, #104]
    a9ec:	b	a990 <mpc_init3@@Base+0x298>
    a9f0:	bl	4c90 <__ctype_tolower_loc@plt>
    a9f4:	ldrb	w1, [x22]
    a9f8:	ldr	x0, [x0]
    a9fc:	ldr	w1, [x0, x1, lsl #2]
    aa00:	cmp	w1, #0x6e
    aa04:	b.eq	aa4c <mpc_init3@@Base+0x354>  // b.none
    aa08:	mov	x1, x23
    aa0c:	mov	w0, #0x28                  	// #40
    aa10:	bl	5260 <ungetc@plt>
    aa14:	mov	x0, x22
    aa18:	ldp	x19, x20, [sp, #16]
    aa1c:	ldp	x21, x22, [sp, #32]
    aa20:	ldp	x23, x24, [sp, #48]
    aa24:	ldp	x25, x26, [sp, #64]
    aa28:	ldp	x29, x30, [sp], #112
    aa2c:	ret
    aa30:	mov	x0, x22
    aa34:	mov	x2, #0x1                   	// #1
    aa38:	mov	x1, #0x64                  	// #100
    aa3c:	bl	5380 <mpc_realloc_str@plt>
    aa40:	mov	x22, x0
    aa44:	strb	wzr, [x0]
    aa48:	b	a8f0 <mpc_init3@@Base+0x1f8>
    aa4c:	ldrb	w1, [x22, #1]
    aa50:	ldr	w1, [x0, x1, lsl #2]
    aa54:	cmp	w1, #0x61
    aa58:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    aa5c:	ldrb	w1, [x22, #2]
    aa60:	ldr	w0, [x0, x1, lsl #2]
    aa64:	cmp	w0, #0x6e
    aa68:	b.ne	aa08 <mpc_init3@@Base+0x310>  // b.any
    aa6c:	b	a964 <mpc_init3@@Base+0x26c>
    aa70:	ldr	x0, [sp, #104]
    aa74:	mov	x2, x26
    aa78:	mov	x1, x27
    aa7c:	bl	5380 <mpc_realloc_str@plt>
    aa80:	strb	wzr, [x0, x28]
    aa84:	cmn	w19, #0x1
    aa88:	mov	x24, x0
    aa8c:	b.eq	aa9c <mpc_init3@@Base+0x3a4>  // b.none
    aa90:	mov	w0, w19
    aa94:	mov	x1, x23
    aa98:	bl	5260 <ungetc@plt>
    aa9c:	mov	x0, x24
    aaa0:	bl	4a40 <strlen@plt>
    aaa4:	add	x19, x0, x21
    aaa8:	add	x26, x19, #0x1
    aaac:	cmp	x26, x20
    aab0:	b.cs	ab14 <mpc_init3@@Base+0x41c>  // b.hs, b.nlast
    aab4:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    aab8:	mov	x0, x25
    aabc:	mov	x2, x24
    aac0:	add	x1, x1, #0x408
    aac4:	bl	4b70 <sprintf@plt>
    aac8:	tbnz	w0, #31, ab58 <mpc_init3@@Base+0x460>
    aacc:	add	x0, x21, w0, sxtw
    aad0:	cmp	x0, x26
    aad4:	b.ne	ab88 <mpc_init3@@Base+0x490>  // b.any
    aad8:	mov	x0, x23
    aadc:	bl	4f70 <getc@plt>
    aae0:	mov	w21, w0
    aae4:	cmp	w0, #0x29
    aae8:	b.eq	ab34 <mpc_init3@@Base+0x43c>  // b.none
    aaec:	cmn	w0, #0x1
    aaf0:	b.eq	aafc <mpc_init3@@Base+0x404>  // b.none
    aaf4:	mov	x1, x23
    aaf8:	bl	5260 <ungetc@plt>
    aafc:	mov	x0, x24
    ab00:	bl	5040 <mpc_free_str@plt>
    ab04:	ldp	x19, x20, [sp, #16]
    ab08:	ldp	x25, x26, [sp, #64]
    ab0c:	ldp	x27, x28, [sp, #80]
    ab10:	b	a8f0 <mpc_init3@@Base+0x1f8>
    ab14:	add	x2, x19, #0x2
    ab18:	mov	x1, x20
    ab1c:	mov	x0, x22
    ab20:	mov	x20, x2
    ab24:	bl	5380 <mpc_realloc_str@plt>
    ab28:	mov	x22, x0
    ab2c:	add	x25, x0, x21
    ab30:	b	aab4 <mpc_init3@@Base+0x3bc>
    ab34:	mov	x0, x22
    ab38:	add	x2, x19, #0x3
    ab3c:	mov	x1, x20
    ab40:	bl	5380 <mpc_realloc_str@plt>
    ab44:	add	x19, x0, x19
    ab48:	strb	w21, [x0, x26]
    ab4c:	mov	x22, x0
    ab50:	strb	wzr, [x19, #2]
    ab54:	b	aafc <mpc_init3@@Base+0x404>
    ab58:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ab5c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ab60:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ab64:	add	x4, x4, #0x410
    ab68:	ldr	x0, [x0, #4008]
    ab6c:	add	x2, x2, #0x420
    ab70:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ab74:	add	x1, x1, #0x318
    ab78:	mov	w3, #0x88                  	// #136
    ab7c:	ldr	x0, [x0]
    ab80:	bl	55f0 <fprintf@plt>
    ab84:	bl	5050 <abort@plt>
    ab88:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ab8c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ab90:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ab94:	add	x4, x4, #0x430
    ab98:	ldr	x0, [x0, #4008]
    ab9c:	add	x2, x2, #0x420
    aba0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    aba4:	add	x1, x1, #0x318
    aba8:	mov	w3, #0x8a                  	// #138
    abac:	ldr	x0, [x0]
    abb0:	bl	55f0 <fprintf@plt>
    abb4:	bl	5050 <abort@plt>

000000000000abb8 <mpc_inp_str@@Base>:
    abb8:	stp	x29, x30, [sp, #-112]!
    abbc:	mov	x29, sp
    abc0:	stp	x19, x20, [sp, #16]
    abc4:	stp	x21, x22, [sp, #32]
    abc8:	mov	x22, x0
    abcc:	mov	x21, x2
    abd0:	stp	x23, x24, [sp, #48]
    abd4:	mov	w23, w3
    abd8:	mov	w24, w4
    abdc:	stp	x27, x28, [sp, #80]
    abe0:	mov	x28, x1
    abe4:	cbz	x1, ad9c <mpc_inp_str@@Base+0x1e4>
    abe8:	mov	x0, x28
    abec:	bl	a728 <mpc_init3@@Base+0x30>
    abf0:	mov	x27, x0
    abf4:	mov	x0, x28
    abf8:	bl	4f70 <getc@plt>
    abfc:	cmn	w0, #0x1
    ac00:	b.eq	adec <mpc_inp_str@@Base+0x234>  // b.none
    ac04:	cmp	w0, #0x28
    ac08:	b.eq	acb0 <mpc_inp_str@@Base+0xf8>  // b.none
    ac0c:	mov	x1, x28
    ac10:	bl	5260 <ungetc@plt>
    ac14:	mov	x0, x28
    ac18:	bl	a7b0 <mpc_init3@@Base+0xb8>
    ac1c:	mov	x19, x0
    ac20:	bl	4a40 <strlen@plt>
    ac24:	mov	x20, x0
    ac28:	mov	w2, w23
    ac2c:	mov	w3, w24
    ac30:	mov	x1, x19
    ac34:	mov	x0, x22
    ac38:	bl	53d0 <mpc_set_str@plt>
    ac3c:	mov	w23, w0
    ac40:	mov	x0, x19
    ac44:	bl	5040 <mpc_free_str@plt>
    ac48:	cmn	w23, #0x1
    ac4c:	b.eq	ac98 <mpc_inp_str@@Base+0xe0>  // b.none
    ac50:	cbz	x21, ac5c <mpc_inp_str@@Base+0xa4>
    ac54:	add	x27, x27, x20
    ac58:	str	x27, [x21]
    ac5c:	mov	w0, w23
    ac60:	ldp	x19, x20, [sp, #16]
    ac64:	ldp	x21, x22, [sp, #32]
    ac68:	ldp	x23, x24, [sp, #48]
    ac6c:	ldp	x27, x28, [sp, #80]
    ac70:	ldp	x29, x30, [sp], #112
    ac74:	ret
    ac78:	cmn	w19, #0x1
    ac7c:	b.eq	ac8c <mpc_inp_str@@Base+0xd4>  // b.none
    ac80:	mov	x1, x28
    ac84:	mov	w0, w19
    ac88:	bl	5260 <ungetc@plt>
    ac8c:	mov	x0, x25
    ac90:	bl	5040 <mpc_free_str@plt>
    ac94:	ldp	x25, x26, [sp, #64]
    ac98:	mov	x0, x22
    ac9c:	bl	4a80 <mpfr_set_nan@plt>
    aca0:	mov	w23, #0xffffffff            	// #-1
    aca4:	add	x0, x22, #0x20
    aca8:	bl	4a80 <mpfr_set_nan@plt>
    acac:	b	ac50 <mpc_inp_str@@Base+0x98>
    acb0:	mov	x0, x28
    acb4:	stp	x25, x26, [sp, #64]
    acb8:	bl	a728 <mpc_init3@@Base+0x30>
    acbc:	mov	x27, x0
    acc0:	mov	x0, x28
    acc4:	bl	a7b0 <mpc_init3@@Base+0xb8>
    acc8:	mov	x25, x0
    accc:	bl	4a40 <strlen@plt>
    acd0:	mov	x20, x0
    acd4:	mov	x0, x28
    acd8:	bl	4f70 <getc@plt>
    acdc:	mov	w19, w0
    ace0:	bl	51c0 <__ctype_b_loc@plt>
    ace4:	ldr	x0, [x0]
    ace8:	add	x20, x20, #0x1
    acec:	ldrh	w0, [x0, w19, sxtw #1]
    acf0:	tbz	w0, #13, ac78 <mpc_inp_str@@Base+0xc0>
    acf4:	mov	x1, x28
    acf8:	mov	w0, w19
    acfc:	bl	5260 <ungetc@plt>
    ad00:	mov	x0, x28
    ad04:	bl	a728 <mpc_init3@@Base+0x30>
    ad08:	add	x27, x27, x0
    ad0c:	mov	x0, x28
    ad10:	bl	a7b0 <mpc_init3@@Base+0xb8>
    ad14:	mov	x26, x0
    ad18:	bl	4a40 <strlen@plt>
    ad1c:	add	x20, x20, x0
    ad20:	add	x0, x20, #0x2
    ad24:	str	x0, [sp, #104]
    ad28:	bl	4c30 <mpc_alloc_str@plt>
    ad2c:	mov	x19, x0
    ad30:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ad34:	mov	x3, x26
    ad38:	mov	x2, x25
    ad3c:	add	x1, x1, #0x440
    ad40:	bl	4b70 <sprintf@plt>
    ad44:	tbnz	w0, #31, adf4 <mpc_inp_str@@Base+0x23c>
    ad48:	add	x3, x20, #0x1
    ad4c:	cmp	x3, w0, sxtw
    ad50:	b.ne	ae24 <mpc_inp_str@@Base+0x26c>  // b.any
    ad54:	mov	x0, x25
    ad58:	str	x3, [sp, #96]
    ad5c:	bl	5040 <mpc_free_str@plt>
    ad60:	mov	x0, x26
    ad64:	bl	5040 <mpc_free_str@plt>
    ad68:	mov	x0, x28
    ad6c:	bl	a728 <mpc_init3@@Base+0x30>
    ad70:	mov	x1, x0
    ad74:	mov	x0, x28
    ad78:	add	x27, x27, x1
    ad7c:	bl	4f70 <getc@plt>
    ad80:	mov	w25, w0
    ad84:	cmp	w0, #0x29
    ad88:	b.eq	adbc <mpc_inp_str@@Base+0x204>  // b.none
    ad8c:	cmn	w0, #0x1
    ad90:	b.ne	adac <mpc_inp_str@@Base+0x1f4>  // b.any
    ad94:	ldp	x25, x26, [sp, #64]
    ad98:	b	ac28 <mpc_inp_str@@Base+0x70>
    ad9c:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ada0:	ldr	x0, [x0, #4040]
    ada4:	ldr	x28, [x0]
    ada8:	b	abe8 <mpc_inp_str@@Base+0x30>
    adac:	mov	x1, x28
    adb0:	bl	5260 <ungetc@plt>
    adb4:	ldp	x25, x26, [sp, #64]
    adb8:	b	ac28 <mpc_inp_str@@Base+0x70>
    adbc:	ldr	x26, [sp, #104]
    adc0:	add	x2, x20, #0x3
    adc4:	mov	x0, x19
    adc8:	mov	x1, x26
    adcc:	bl	5380 <mpc_realloc_str@plt>
    add0:	ldr	x3, [sp, #96]
    add4:	mov	x19, x0
    add8:	mov	x20, x3
    addc:	strb	w25, [x0, x3]
    ade0:	strb	wzr, [x0, x26]
    ade4:	ldp	x25, x26, [sp, #64]
    ade8:	b	ac28 <mpc_inp_str@@Base+0x70>
    adec:	mov	x20, #0x0                   	// #0
    adf0:	b	ac98 <mpc_inp_str@@Base+0xe0>
    adf4:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    adf8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    adfc:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ae00:	add	x4, x4, #0x410
    ae04:	ldr	x0, [x0, #4008]
    ae08:	add	x2, x2, #0x420
    ae0c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ae10:	add	x1, x1, #0x318
    ae14:	mov	w3, #0xca                  	// #202
    ae18:	ldr	x0, [x0]
    ae1c:	bl	55f0 <fprintf@plt>
    ae20:	bl	5050 <abort@plt>
    ae24:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ae28:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ae2c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ae30:	add	x4, x4, #0x448
    ae34:	ldr	x0, [x0, #4008]
    ae38:	add	x2, x2, #0x420
    ae3c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ae40:	add	x1, x1, #0x318
    ae44:	mov	w3, #0xcc                  	// #204
    ae48:	ldr	x0, [x0]
    ae4c:	bl	55f0 <fprintf@plt>
    ae50:	bl	5050 <abort@plt>
    ae54:	nop

000000000000ae58 <mpc_log@@Base>:
    ae58:	stp	x29, x30, [sp, #-192]!
    ae5c:	mov	x29, sp
    ae60:	stp	x19, x20, [sp, #16]
    ae64:	mov	x20, x0
    ae68:	mov	x19, x1
    ae6c:	mov	x0, x1
    ae70:	stp	x21, x22, [sp, #32]
    ae74:	mov	w22, w2
    ae78:	stp	x23, x24, [sp, #48]
    ae7c:	add	x24, x20, #0x20
    ae80:	bl	5520 <mpfr_number_p@plt>
    ae84:	cbnz	w0, af30 <mpc_log@@Base+0xd8>
    ae88:	ldr	x1, [x19, #16]
    ae8c:	mov	x0, #0x2                   	// #2
    ae90:	movk	x0, #0x8000, lsl #48
    ae94:	cmp	x1, x0
    ae98:	ldr	x2, [x19, #48]
    ae9c:	b.eq	af60 <mpc_log@@Base+0x108>  // b.none
    aea0:	cmp	x2, x0
    aea4:	b.ne	aee0 <mpc_log@@Base+0x88>  // b.any
    aea8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    aeac:	cmp	x1, x0
    aeb0:	mov	x0, x20
    aeb4:	b.eq	af70 <mpc_log@@Base+0x118>  // b.none
    aeb8:	bl	4a80 <mpfr_set_nan@plt>
    aebc:	mov	x0, x24
    aec0:	mov	w21, #0x0                   	// #0
    aec4:	bl	4a80 <mpfr_set_nan@plt>
    aec8:	mov	w0, w21
    aecc:	ldp	x19, x20, [sp, #16]
    aed0:	ldp	x21, x22, [sp, #32]
    aed4:	ldp	x23, x24, [sp, #48]
    aed8:	ldp	x29, x30, [sp], #192
    aedc:	ret
    aee0:	asr	w3, w22, #4
    aee4:	mov	x2, x19
    aee8:	add	x1, x19, #0x20
    aeec:	mov	x0, x24
    aef0:	bl	4cf0 <mpfr_atan2@plt>
    aef4:	mov	w21, w0
    aef8:	mov	w1, #0x1                   	// #1
    aefc:	mov	x0, x20
    af00:	bl	5170 <mpfr_set_inf@plt>
    af04:	cmp	w21, #0x0
    af08:	mov	w1, #0x4                   	// #4
    af0c:	csel	w1, w21, w1, eq  // eq = none
    af10:	mov	w21, #0x8                   	// #8
    af14:	csel	w21, w1, w21, ge  // ge = tcont
    af18:	mov	w0, w21
    af1c:	ldp	x19, x20, [sp, #16]
    af20:	ldp	x21, x22, [sp, #32]
    af24:	ldp	x23, x24, [sp, #48]
    af28:	ldp	x29, x30, [sp], #192
    af2c:	ret
    af30:	stp	x25, x26, [sp, #64]
    af34:	add	x25, x19, #0x20
    af38:	mov	x0, x25
    af3c:	bl	5520 <mpfr_number_p@plt>
    af40:	cbnz	w0, af7c <mpc_log@@Base+0x124>
    af44:	ldr	x1, [x19, #16]
    af48:	mov	x0, #0x2                   	// #2
    af4c:	movk	x0, #0x8000, lsl #48
    af50:	cmp	x1, x0
    af54:	ldr	x2, [x19, #48]
    af58:	ldp	x25, x26, [sp, #64]
    af5c:	b.ne	aea0 <mpc_log@@Base+0x48>  // b.any
    af60:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    af64:	cmp	x2, x0
    af68:	mov	x0, x20
    af6c:	b.ne	aeb8 <mpc_log@@Base+0x60>  // b.any
    af70:	mov	w1, #0x1                   	// #1
    af74:	bl	5170 <mpfr_set_inf@plt>
    af78:	b	aebc <mpc_log@@Base+0x64>
    af7c:	mov	x0, x19
    af80:	stp	x27, x28, [sp, #80]
    af84:	bl	5240 <mpfr_sgn@plt>
    af88:	asr	w28, w22, #4
    af8c:	mov	w21, w0
    af90:	mov	x0, x25
    af94:	bl	5240 <mpfr_sgn@plt>
    af98:	cbz	w0, afe8 <mpc_log@@Base+0x190>
    af9c:	and	w22, w22, #0xf
    afa0:	cbnz	w21, b064 <mpc_log@@Base+0x20c>
    afa4:	cmp	w0, #0x0
    afa8:	b.le	b340 <mpc_log@@Base+0x4e8>
    afac:	mov	w2, w22
    afb0:	mov	x1, x25
    afb4:	mov	x0, x20
    afb8:	bl	4dd0 <mpfr_log@plt>
    afbc:	mov	w1, w28
    afc0:	mov	w20, w0
    afc4:	mov	x0, x24
    afc8:	bl	4ac0 <mpfr_const_pi@plt>
    afcc:	mov	x1, x24
    afd0:	mov	w19, w0
    afd4:	mov	w3, #0x0                   	// #0
    afd8:	mov	x0, x24
    afdc:	mov	x2, #0x1                   	// #1
    afe0:	bl	5370 <mpfr_div_2ui@plt>
    afe4:	b	b2fc <mpc_log@@Base+0x4a4>
    afe8:	cmp	w21, #0x0
    afec:	cbz	w21, b434 <mpc_log@@Base+0x5dc>
    aff0:	and	w22, w22, #0xf
    aff4:	b.gt	b3c4 <mpc_log@@Base+0x56c>
    aff8:	ldr	w0, [x19, #40]
    affc:	tbnz	w0, #31, b45c <mpc_log@@Base+0x604>
    b000:	ldp	x6, x7, [x19]
    b004:	add	x21, sp, #0xa0
    b008:	ldp	x4, x5, [x19, #16]
    b00c:	mov	x1, x21
    b010:	mov	w2, #0x0                   	// #0
    b014:	mov	x0, x21
    b018:	stp	x6, x7, [sp, #160]
    b01c:	stp	x4, x5, [sp, #176]
    b020:	bl	4bc0 <mpfr_neg@plt>
    b024:	mov	w2, w22
    b028:	mov	x1, x21
    b02c:	mov	x0, x20
    b030:	bl	4dd0 <mpfr_log@plt>
    b034:	mov	w1, w28
    b038:	mov	w22, w0
    b03c:	mov	x0, x24
    b040:	bl	4ac0 <mpfr_const_pi@plt>
    b044:	mov	w19, w0
    b048:	cmp	w22, #0x0
    b04c:	mov	w0, #0x2                   	// #2
    b050:	cset	w21, ne  // ne = any
    b054:	csel	w21, w21, w0, ge  // ge = tcont
    b058:	cmp	w19, #0x0
    b05c:	orr	w1, w21, #0x4
    b060:	b	b314 <mpc_log@@Base+0x4bc>
    b064:	add	x21, sp, #0xa0
    b068:	mov	x27, #0x1                   	// #1
    b06c:	mov	x0, x21
    b070:	mov	w26, #0x1                   	// #1
    b074:	mov	x1, #0x2                   	// #2
    b078:	ldr	x23, [x20]
    b07c:	bl	5490 <mpfr_init2@plt>
    b080:	b	b0e4 <mpc_log@@Base+0x28c>
    b084:	bl	4dd0 <mpfr_log@plt>
    b088:	ldr	x4, [sp, #176]
    b08c:	mov	w3, #0x1                   	// #1
    b090:	mov	x5, #0x8000000000000001    	// #-9223372036854775807
    b094:	mov	x0, x21
    b098:	sub	w1, w3, w4
    b09c:	cmp	x4, x5
    b0a0:	mov	w2, #0x0                   	// #0
    b0a4:	b.eq	b130 <mpc_log@@Base+0x2d8>  // b.none
    b0a8:	cmp	x4, #0x0
    b0ac:	sxtw	x1, w1
    b0b0:	csel	x1, x1, x27, lt  // lt = tstop
    b0b4:	cmp	w22, #0x0
    b0b8:	ldr	x4, [x20]
    b0bc:	sub	x1, x23, x1
    b0c0:	cinc	x4, x4, eq  // eq = none
    b0c4:	bl	54a0 <mpfr_can_round@plt>
    b0c8:	cmp	w0, #0x0
    b0cc:	cset	w2, eq  // eq = none
    b0d0:	cmp	w26, #0x1
    b0d4:	cset	w1, le
    b0d8:	mov	w26, #0x2                   	// #2
    b0dc:	tst	w2, w1
    b0e0:	b.eq	b2c0 <mpc_log@@Base+0x468>  // b.none
    b0e4:	mov	x0, x23
    b0e8:	bl	4d70 <mpc_ceil_log2@plt>
    b0ec:	mov	x1, x0
    b0f0:	mov	x0, x21
    b0f4:	add	x1, x1, #0x4
    b0f8:	add	x23, x23, x1
    b0fc:	mov	x1, x23
    b100:	bl	4cd0 <mpfr_set_prec@plt>
    b104:	mov	x1, x19
    b108:	mov	w2, #0x0                   	// #0
    b10c:	mov	x0, x21
    b110:	bl	51f0 <mpc_abs@plt>
    b114:	ldr	x3, [sp, #176]
    b118:	mov	x4, #0x8000000000000003    	// #-9223372036854775805
    b11c:	mov	x1, x21
    b120:	mov	x0, x21
    b124:	cmp	x3, x4
    b128:	mov	w2, #0x0                   	// #0
    b12c:	b.ne	b084 <mpc_log@@Base+0x22c>  // b.any
    b130:	add	x23, sp, #0x80
    b134:	mov	x1, #0x2                   	// #2
    b138:	mov	x0, x23
    b13c:	ldr	x26, [x20]
    b140:	bl	5490 <mpfr_init2@plt>
    b144:	mov	x1, x25
    b148:	mov	x0, x19
    b14c:	bl	5400 <mpfr_cmpabs@plt>
    b150:	cmp	w0, #0x0
    b154:	csel	x1, x25, x19, ge  // ge = tcont
    b158:	csel	x27, x19, x25, ge  // ge = tcont
    b15c:	str	x1, [sp, #120]
    b160:	b	b19c <mpc_log@@Base+0x344>
    b164:	ldr	x1, [sp, #176]
    b168:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    b16c:	cmp	x1, x0
    b170:	b.eq	b3f4 <mpc_log@@Base+0x59c>  // b.none
    b174:	ldr	w0, [sp, #104]
    b178:	cmp	w22, #0x0
    b17c:	ldr	x4, [x20]
    b180:	mov	w3, #0x1                   	// #1
    b184:	sub	x1, x26, w0, sxtw
    b188:	mov	w2, #0x0                   	// #0
    b18c:	mov	x0, x21
    b190:	cinc	x4, x4, eq  // eq = none
    b194:	bl	54a0 <mpfr_can_round@plt>
    b198:	cbnz	w0, b4d4 <mpc_log@@Base+0x67c>
    b19c:	mov	x0, x26
    b1a0:	bl	4d70 <mpc_ceil_log2@plt>
    b1a4:	mov	x1, x0
    b1a8:	mov	w2, #0x5                   	// #5
    b1ac:	add	x1, x1, #0x4
    b1b0:	mov	x0, x23
    b1b4:	add	x26, x26, x1
    b1b8:	str	w2, [sp, #104]
    b1bc:	mov	x1, x26
    b1c0:	bl	4cd0 <mpfr_set_prec@plt>
    b1c4:	mov	x1, x26
    b1c8:	mov	x0, x21
    b1cc:	bl	4cd0 <mpfr_set_prec@plt>
    b1d0:	ldr	x1, [sp, #120]
    b1d4:	mov	w3, #0x3                   	// #3
    b1d8:	mov	x2, x27
    b1dc:	mov	x0, x23
    b1e0:	bl	51a0 <mpfr_div@plt>
    b1e4:	mov	x1, x23
    b1e8:	mov	w2, #0x3                   	// #3
    b1ec:	mov	x0, x23
    b1f0:	bl	5060 <mpfr_sqr@plt>
    b1f4:	mov	x1, x23
    b1f8:	mov	w2, #0x3                   	// #3
    b1fc:	mov	x0, x23
    b200:	bl	5230 <mpfr_log1p@plt>
    b204:	mov	x1, x23
    b208:	mov	w3, #0x3                   	// #3
    b20c:	mov	x2, #0x1                   	// #1
    b210:	mov	x0, x23
    b214:	bl	5370 <mpfr_div_2ui@plt>
    b218:	mov	w3, #0x1                   	// #1
    b21c:	mov	x1, x27
    b220:	mov	w2, #0x0                   	// #0
    b224:	mov	x0, x21
    b228:	bl	5220 <mpfr_set4@plt>
    b22c:	mov	x1, x21
    b230:	mov	w2, #0x0                   	// #0
    b234:	mov	x0, x21
    b238:	bl	4dd0 <mpfr_log@plt>
    b23c:	ldr	w4, [sp, #168]
    b240:	mov	x2, x23
    b244:	str	w4, [sp, #108]
    b248:	mov	x1, x21
    b24c:	ldr	x4, [sp, #176]
    b250:	mov	x0, x21
    b254:	mov	w3, #0x0                   	// #0
    b258:	str	x4, [sp, #112]
    b25c:	bl	4eb0 <mpfr_add@plt>
    b260:	ldr	w4, [sp, #108]
    b264:	tbz	w4, #31, b294 <mpc_log@@Base+0x43c>
    b268:	ldr	x4, [sp, #112]
    b26c:	ldr	x1, [sp, #144]
    b270:	sub	x2, x4, #0x1
    b274:	ldr	x0, [sp, #176]
    b278:	add	x3, x1, #0x4
    b27c:	add	w1, w1, #0x7
    b280:	sub	x2, x2, x0
    b284:	sub	w0, w4, w0
    b288:	cmp	x3, x2
    b28c:	csinc	w0, w1, w0, ge  // ge = tcont
    b290:	str	w0, [sp, #104]
    b294:	mov	x0, x27
    b298:	mov	x2, #0x0                   	// #0
    b29c:	mov	x1, #0xffffffffffffffff    	// #-1
    b2a0:	bl	5030 <mpfr_cmp_si_2exp@plt>
    b2a4:	cbz	w0, b164 <mpc_log@@Base+0x30c>
    b2a8:	mov	x0, x27
    b2ac:	mov	x2, #0x0                   	// #0
    b2b0:	mov	x1, #0x1                   	// #1
    b2b4:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    b2b8:	cbz	w0, b164 <mpc_log@@Base+0x30c>
    b2bc:	b	b174 <mpc_log@@Base+0x31c>
    b2c0:	cbz	w0, b130 <mpc_log@@Base+0x2d8>
    b2c4:	mov	x2, x19
    b2c8:	mov	w3, w28
    b2cc:	mov	x1, x25
    b2d0:	mov	x0, x24
    b2d4:	bl	4cf0 <mpfr_atan2@plt>
    b2d8:	mov	w19, w0
    b2dc:	ldr	w3, [sp, #168]
    b2e0:	mov	x0, x20
    b2e4:	mov	w2, w22
    b2e8:	mov	x1, x21
    b2ec:	bl	5220 <mpfr_set4@plt>
    b2f0:	mov	w20, w0
    b2f4:	mov	x0, x21
    b2f8:	bl	4db0 <mpfr_clear@plt>
    b2fc:	cmp	w20, #0x0
    b300:	mov	w0, #0x2                   	// #2
    b304:	cset	w21, ne  // ne = any
    b308:	csel	w21, w21, w0, ge  // ge = tcont
    b30c:	cmp	w19, #0x0
    b310:	orr	w1, w21, #0x4
    b314:	csel	w1, w1, w21, ne  // ne = any
    b318:	orr	w21, w21, #0x8
    b31c:	csel	w21, w1, w21, ge  // ge = tcont
    b320:	mov	w0, w21
    b324:	ldp	x19, x20, [sp, #16]
    b328:	ldp	x21, x22, [sp, #32]
    b32c:	ldp	x23, x24, [sp, #48]
    b330:	ldp	x25, x26, [sp, #64]
    b334:	ldp	x27, x28, [sp, #80]
    b338:	ldp	x29, x30, [sp], #192
    b33c:	ret
    b340:	ldp	x4, x5, [x25, #16]
    b344:	add	x21, sp, #0xa0
    b348:	ldp	x6, x7, [x19, #32]
    b34c:	mov	x1, x21
    b350:	mov	w2, #0x0                   	// #0
    b354:	mov	x0, x21
    b358:	stp	x6, x7, [sp, #160]
    b35c:	stp	x4, x5, [sp, #176]
    b360:	bl	4bc0 <mpfr_neg@plt>
    b364:	mov	x0, x20
    b368:	mov	w2, w22
    b36c:	mov	x1, x21
    b370:	bl	4dd0 <mpfr_log@plt>
    b374:	cmp	w28, #0x2
    b378:	mov	w20, w0
    b37c:	b.eq	b4cc <mpc_log@@Base+0x674>  // b.none
    b380:	cmp	w28, #0x3
    b384:	mov	w0, #0x2                   	// #2
    b388:	csel	w28, w28, w0, ne  // ne = any
    b38c:	mov	w1, w28
    b390:	mov	x0, x24
    b394:	bl	4ac0 <mpfr_const_pi@plt>
    b398:	neg	w19, w0
    b39c:	mov	w3, #0x0                   	// #0
    b3a0:	mov	x1, x24
    b3a4:	mov	x0, x24
    b3a8:	mov	x2, #0x1                   	// #1
    b3ac:	bl	5370 <mpfr_div_2ui@plt>
    b3b0:	mov	x1, x24
    b3b4:	mov	x0, x24
    b3b8:	mov	w2, #0x0                   	// #0
    b3bc:	bl	4bc0 <mpfr_neg@plt>
    b3c0:	b	b2fc <mpc_log@@Base+0x4a4>
    b3c4:	mov	w2, w22
    b3c8:	mov	x1, x19
    b3cc:	mov	x0, x20
    b3d0:	bl	4dd0 <mpfr_log@plt>
    b3d4:	ldr	w3, [x19, #40]
    b3d8:	mov	w22, w0
    b3dc:	mov	w2, w28
    b3e0:	mov	x1, x25
    b3e4:	mov	x0, x24
    b3e8:	bl	5220 <mpfr_set4@plt>
    b3ec:	mov	w19, w0
    b3f0:	b	b048 <mpc_log@@Base+0x1f0>
    b3f4:	mov	x0, x23
    b3f8:	bl	4db0 <mpfr_clear@plt>
    b3fc:	mov	x2, x19
    b400:	mov	w3, w28
    b404:	mov	x1, x25
    b408:	mov	x0, x24
    b40c:	bl	4cf0 <mpfr_atan2@plt>
    b410:	mov	w19, w0
    b414:	bl	5610 <mpfr_get_emin_min@plt>
    b418:	sub	x2, x0, #0x2
    b41c:	mov	w3, w22
    b420:	mov	x0, x20
    b424:	mov	x1, #0x1                   	// #1
    b428:	bl	5180 <mpfr_set_ui_2exp@plt>
    b42c:	mov	w20, w0
    b430:	b	b2f4 <mpc_log@@Base+0x49c>
    b434:	mov	x2, x19
    b438:	mov	w3, w28
    b43c:	mov	x1, x25
    b440:	mov	x0, x24
    b444:	bl	4cf0 <mpfr_atan2@plt>
    b448:	mov	w19, w0
    b44c:	mov	w1, #0xffffffff            	// #-1
    b450:	mov	x0, x20
    b454:	bl	5170 <mpfr_set_inf@plt>
    b458:	b	b058 <mpc_log@@Base+0x200>
    b45c:	cmp	w28, #0x2
    b460:	b.eq	b4e0 <mpc_log@@Base+0x688>  // b.none
    b464:	cmp	w28, #0x3
    b468:	mov	w0, #0x2                   	// #2
    b46c:	csel	w28, w28, w0, ne  // ne = any
    b470:	ldp	x6, x7, [x19]
    b474:	add	x21, sp, #0xa0
    b478:	ldp	x4, x5, [x19, #16]
    b47c:	mov	x1, x21
    b480:	mov	x0, x21
    b484:	mov	w2, #0x0                   	// #0
    b488:	stp	x6, x7, [sp, #160]
    b48c:	stp	x4, x5, [sp, #176]
    b490:	bl	4bc0 <mpfr_neg@plt>
    b494:	mov	w2, w22
    b498:	mov	x1, x21
    b49c:	mov	x0, x20
    b4a0:	bl	4dd0 <mpfr_log@plt>
    b4a4:	mov	w1, w28
    b4a8:	mov	w22, w0
    b4ac:	mov	x0, x24
    b4b0:	bl	4ac0 <mpfr_const_pi@plt>
    b4b4:	mov	x1, x20
    b4b8:	neg	w19, w0
    b4bc:	mov	w2, #0x0                   	// #0
    b4c0:	mov	x0, x20
    b4c4:	bl	4fb0 <mpc_conj@plt>
    b4c8:	b	b048 <mpc_log@@Base+0x1f0>
    b4cc:	mov	w28, #0x3                   	// #3
    b4d0:	b	b38c <mpc_log@@Base+0x534>
    b4d4:	mov	x0, x23
    b4d8:	bl	4db0 <mpfr_clear@plt>
    b4dc:	b	b2c4 <mpc_log@@Base+0x46c>
    b4e0:	mov	w28, #0x3                   	// #3
    b4e4:	b	b470 <mpc_log@@Base+0x618>
    b4e8:	stp	x29, x30, [sp, #-32]!
    b4ec:	mov	w3, #0x0                   	// #0
    b4f0:	mov	x2, #0x0                   	// #0
    b4f4:	mov	x29, sp
    b4f8:	mov	x1, #0xa                   	// #10
    b4fc:	str	x19, [sp, #16]
    b500:	mov	x19, x0
    b504:	bl	5180 <mpfr_set_ui_2exp@plt>
    b508:	mov	x1, x19
    b50c:	mov	x0, x19
    b510:	ldr	x19, [sp, #16]
    b514:	mov	w2, #0x0                   	// #0
    b518:	ldp	x29, x30, [sp], #32
    b51c:	b	4dd0 <mpfr_log@plt>

000000000000b520 <mpc_log10@@Base>:
    b520:	stp	x29, x30, [sp, #-272]!
    b524:	mov	x29, sp
    b528:	stp	x23, x24, [sp, #48]
    b52c:	add	x23, sp, #0xb0
    b530:	stp	x25, x26, [sp, #64]
    b534:	mov	w26, w2
    b538:	mov	x25, x1
    b53c:	mov	x1, #0x2                   	// #2
    b540:	stp	x19, x20, [sp, #16]
    b544:	add	x20, sp, #0xd0
    b548:	stp	x21, x22, [sp, #32]
    b54c:	mov	x22, x0
    b550:	mov	x0, x23
    b554:	stp	x27, x28, [sp, #80]
    b558:	bl	5490 <mpfr_init2@plt>
    b55c:	asr	w27, w26, #4
    b560:	mov	x0, x20
    b564:	mov	x1, #0x2                   	// #2
    b568:	str	w27, [sp, #136]
    b56c:	bl	4d40 <mpc_init2@plt>
    b570:	and	w0, w26, #0xf
    b574:	stp	w0, wzr, [sp, #104]
    b578:	ldr	x0, [x22]
    b57c:	add	x1, sp, #0x90
    b580:	ldr	x19, [x22, #32]
    b584:	add	x24, x20, #0x20
    b588:	mov	w21, #0x0                   	// #0
    b58c:	str	x1, [sp, #120]
    b590:	cmp	x19, x0
    b594:	add	x1, sp, #0xa0
    b598:	csel	x19, x19, x0, ge  // ge = tcont
    b59c:	cmp	w27, #0x0
    b5a0:	cset	x0, eq  // eq = none
    b5a4:	str	x0, [sp, #112]
    b5a8:	str	x1, [sp, #128]
    b5ac:	add	w21, w21, #0x1
    b5b0:	cmp	w21, #0x2
    b5b4:	b.le	b7ec <mpc_log10@@Base+0x2cc>
    b5b8:	add	x0, x19, x19, lsr #63
    b5bc:	asr	x0, x0, #1
    b5c0:	add	x19, x19, x0
    b5c4:	mov	x0, x23
    b5c8:	mov	x1, x19
    b5cc:	bl	4cd0 <mpfr_set_prec@plt>
    b5d0:	mov	x1, x19
    b5d4:	mov	x0, x20
    b5d8:	bl	4c40 <mpc_set_prec@plt>
    b5dc:	mov	w2, w26
    b5e0:	mov	x1, x25
    b5e4:	mov	x0, x20
    b5e8:	bl	4e00 <mpc_log@plt>
    b5ec:	mov	w28, w0
    b5f0:	mov	x0, x24
    b5f4:	bl	5520 <mpfr_number_p@plt>
    b5f8:	cbz	w0, b6fc <mpc_log10@@Base+0x1dc>
    b5fc:	ldr	x0, [sp, #256]
    b600:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    b604:	cmp	x0, x1
    b608:	b.eq	b6fc <mpc_log10@@Base+0x1dc>  // b.none
    b60c:	mov	x0, x23
    b610:	bl	b4e8 <mpc_log@@Base+0x690>
    b614:	mov	x2, x23
    b618:	mov	x1, x24
    b61c:	mov	w3, #0x0                   	// #0
    b620:	mov	x0, x24
    b624:	bl	51a0 <mpfr_div@plt>
    b628:	sub	x27, x19, #0x2
    b62c:	ldr	x4, [x22, #32]
    b630:	mov	x1, x27
    b634:	ldr	x0, [sp, #112]
    b638:	mov	w3, #0x1                   	// #1
    b63c:	mov	w2, #0x0                   	// #0
    b640:	add	x4, x0, x4
    b644:	mov	x0, x24
    b648:	bl	54a0 <mpfr_can_round@plt>
    b64c:	cbz	w0, b5ac <mpc_log10@@Base+0x8c>
    b650:	mov	x0, x20
    b654:	bl	5520 <mpfr_number_p@plt>
    b658:	cbz	w0, b674 <mpc_log10@@Base+0x154>
    b65c:	ldr	x0, [sp, #224]
    b660:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    b664:	cmp	x0, x1
    b668:	b.eq	b674 <mpc_log10@@Base+0x154>  // b.none
    b66c:	str	wzr, [sp, #140]
    b670:	b	b78c <mpc_log10@@Base+0x26c>
    b674:	ldr	w3, [sp, #216]
    b678:	mov	x1, x20
    b67c:	ldr	w2, [sp, #104]
    b680:	mov	x0, x22
    b684:	mov	w21, #0x0                   	// #0
    b688:	bl	5220 <mpfr_set4@plt>
    b68c:	and	w1, w28, #0x3
    b690:	ldr	w3, [sp, #248]
    b694:	add	x0, x22, #0x20
    b698:	cmp	w1, #0x2
    b69c:	b.eq	ba30 <mpc_log10@@Base+0x510>  // b.none
    b6a0:	ldr	w2, [sp, #136]
    b6a4:	cmp	w1, #0x0
    b6a8:	add	x1, x20, #0x20
    b6ac:	cset	w21, ne  // ne = any
    b6b0:	bl	5220 <mpfr_set4@plt>
    b6b4:	mov	w19, w0
    b6b8:	mov	x0, x23
    b6bc:	bl	4db0 <mpfr_clear@plt>
    b6c0:	mov	x0, x20
    b6c4:	bl	4a50 <mpc_clear@plt>
    b6c8:	cmp	w21, #0x0
    b6cc:	cset	w0, ne  // ne = any
    b6d0:	tbnz	w19, #31, b94c <mpc_log10@@Base+0x42c>
    b6d4:	cmp	w19, #0x0
    b6d8:	orr	w1, w0, #0x4
    b6dc:	csel	w0, w1, w0, ne  // ne = any
    b6e0:	ldp	x19, x20, [sp, #16]
    b6e4:	ldp	x21, x22, [sp, #32]
    b6e8:	ldp	x23, x24, [sp, #48]
    b6ec:	ldp	x25, x26, [sp, #64]
    b6f0:	ldp	x27, x28, [sp, #80]
    b6f4:	ldp	x29, x30, [sp], #272
    b6f8:	ret
    b6fc:	mov	x0, x20
    b700:	bl	5520 <mpfr_number_p@plt>
    b704:	cbnz	w0, b768 <mpc_log10@@Base+0x248>
    b708:	ldr	w3, [sp, #216]
    b70c:	mov	x1, x20
    b710:	ldr	w2, [sp, #104]
    b714:	mov	x0, x22
    b718:	bl	5220 <mpfr_set4@plt>
    b71c:	and	w1, w28, #0x3
    b720:	ldr	w3, [sp, #248]
    b724:	add	x0, x22, #0x20
    b728:	cmp	w1, #0x2
    b72c:	b.ne	b8f0 <mpc_log10@@Base+0x3d0>  // b.any
    b730:	ldr	w2, [sp, #136]
    b734:	add	x1, x20, #0x20
    b738:	bl	5220 <mpfr_set4@plt>
    b73c:	asr	w0, w28, #2
    b740:	cmp	w0, #0x2
    b744:	b.eq	ba60 <mpc_log10@@Base+0x540>  // b.none
    b748:	cmp	w0, #0x0
    b74c:	mov	x0, x23
    b750:	cset	w19, ne  // ne = any
    b754:	bl	4db0 <mpfr_clear@plt>
    b758:	mov	x0, x20
    b75c:	bl	4a50 <mpc_clear@plt>
    b760:	mov	w0, #0x2                   	// #2
    b764:	b	b6d4 <mpc_log10@@Base+0x1b4>
    b768:	ldr	x0, [sp, #224]
    b76c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    b770:	cmp	x0, x1
    b774:	b.eq	b8c4 <mpc_log10@@Base+0x3a4>  // b.none
    b778:	mov	w0, #0x1                   	// #1
    b77c:	sub	x27, x19, #0x2
    b780:	str	w0, [sp, #140]
    b784:	mov	x0, x23
    b788:	bl	b4e8 <mpc_log@@Base+0x690>
    b78c:	mov	x2, x23
    b790:	mov	x1, x20
    b794:	mov	w3, #0x0                   	// #0
    b798:	mov	x0, x20
    b79c:	bl	51a0 <mpfr_div@plt>
    b7a0:	ldr	w0, [sp, #104]
    b7a4:	mov	x1, x27
    b7a8:	ldr	x4, [x22]
    b7ac:	cmp	w0, #0x0
    b7b0:	mov	w3, #0x1                   	// #1
    b7b4:	mov	x0, x20
    b7b8:	cinc	x4, x4, eq  // eq = none
    b7bc:	mov	w2, #0x0                   	// #0
    b7c0:	bl	54a0 <mpfr_can_round@plt>
    b7c4:	ldr	w1, [sp, #108]
    b7c8:	orr	w1, w0, w1
    b7cc:	cbnz	w1, b92c <mpc_log10@@Base+0x40c>
    b7d0:	mov	x0, x25
    b7d4:	bl	4e80 <mpfr_integer_p@plt>
    b7d8:	cbnz	w0, b7fc <mpc_log10@@Base+0x2dc>
    b7dc:	str	wzr, [sp, #108]
    b7e0:	add	w21, w21, #0x1
    b7e4:	cmp	w21, #0x2
    b7e8:	b.gt	b5b8 <mpc_log10@@Base+0x98>
    b7ec:	mov	x0, x19
    b7f0:	bl	4d70 <mpc_ceil_log2@plt>
    b7f4:	add	x0, x0, #0x4
    b7f8:	b	b5c0 <mpc_log10@@Base+0xa0>
    b7fc:	add	x27, x25, #0x20
    b800:	mov	x0, x27
    b804:	bl	4e80 <mpfr_integer_p@plt>
    b808:	cbz	w0, b7dc <mpc_log10@@Base+0x2bc>
    b80c:	ldr	x0, [sp, #120]
    b810:	bl	54f0 <__gmpz_init@plt>
    b814:	ldr	x0, [sp, #128]
    b818:	bl	54f0 <__gmpz_init@plt>
    b81c:	ldr	x0, [sp, #120]
    b820:	mov	x1, x25
    b824:	mov	w2, #0x0                   	// #0
    b828:	bl	4c10 <mpfr_get_z@plt>
    b82c:	ldr	x0, [sp, #128]
    b830:	mov	x1, x27
    b834:	mov	w2, #0x0                   	// #0
    b838:	bl	4c10 <mpfr_get_z@plt>
    b83c:	ldr	x27, [sp, #120]
    b840:	mov	x2, x27
    b844:	mov	x1, x27
    b848:	mov	x0, x27
    b84c:	bl	4d90 <__gmpz_mul@plt>
    b850:	ldr	x1, [sp, #128]
    b854:	mov	x2, x1
    b858:	mov	x0, x1
    b85c:	bl	4d90 <__gmpz_mul@plt>
    b860:	ldr	x2, [sp, #128]
    b864:	mov	x1, x27
    b868:	mov	x0, x27
    b86c:	bl	5420 <__gmpz_add@plt>
    b870:	str	x27, [sp, #120]
    b874:	mov	x0, x27
    b878:	mov	x1, #0x0                   	// #0
    b87c:	bl	4a30 <__gmpz_scan1@plt>
    b880:	mov	x27, x0
    b884:	ldr	x0, [sp, #120]
    b888:	mov	w1, #0xa                   	// #10
    b88c:	bl	5500 <__gmpz_sizeinbase@plt>
    b890:	add	x1, x27, #0x1
    b894:	cmp	x1, x0
    b898:	b.eq	b96c <mpc_log10@@Base+0x44c>  // b.none
    b89c:	add	x1, x27, #0x2
    b8a0:	cmp	x1, x0
    b8a4:	b.eq	b96c <mpc_log10@@Base+0x44c>  // b.none
    b8a8:	ldr	x0, [sp, #120]
    b8ac:	mov	w1, #0x1                   	// #1
    b8b0:	str	w1, [sp, #108]
    b8b4:	bl	51d0 <__gmpz_clear@plt>
    b8b8:	ldr	x0, [sp, #128]
    b8bc:	bl	51d0 <__gmpz_clear@plt>
    b8c0:	b	b5ac <mpc_log10@@Base+0x8c>
    b8c4:	ldr	w3, [sp, #216]
    b8c8:	mov	x1, x20
    b8cc:	ldr	w2, [sp, #104]
    b8d0:	mov	x0, x22
    b8d4:	mov	w21, #0x1                   	// #1
    b8d8:	bl	5220 <mpfr_set4@plt>
    b8dc:	and	w1, w28, #0x3
    b8e0:	ldr	w3, [sp, #248]
    b8e4:	add	x0, x22, #0x20
    b8e8:	cmp	w1, #0x2
    b8ec:	b.eq	ba30 <mpc_log10@@Base+0x510>  // b.none
    b8f0:	ldr	w2, [sp, #136]
    b8f4:	cmp	w1, #0x0
    b8f8:	cset	w21, ne  // ne = any
    b8fc:	add	x1, x20, #0x20
    b900:	bl	5220 <mpfr_set4@plt>
    b904:	asr	w0, w28, #2
    b908:	cmp	w0, #0x2
    b90c:	b.eq	b934 <mpc_log10@@Base+0x414>  // b.none
    b910:	cmp	w0, #0x0
    b914:	mov	x0, x23
    b918:	cset	w19, ne  // ne = any
    b91c:	bl	4db0 <mpfr_clear@plt>
    b920:	mov	x0, x20
    b924:	bl	4a50 <mpc_clear@plt>
    b928:	b	b6c8 <mpc_log10@@Base+0x1a8>
    b92c:	cbz	w0, b5ac <mpc_log10@@Base+0x8c>
    b930:	b	b9c8 <mpc_log10@@Base+0x4a8>
    b934:	mov	x0, x23
    b938:	bl	4db0 <mpfr_clear@plt>
    b93c:	mov	x0, x20
    b940:	bl	4a50 <mpc_clear@plt>
    b944:	cmp	w21, #0x0
    b948:	cset	w0, ne  // ne = any
    b94c:	orr	w0, w0, #0x8
    b950:	ldp	x19, x20, [sp, #16]
    b954:	ldp	x21, x22, [sp, #32]
    b958:	ldp	x23, x24, [sp, #48]
    b95c:	ldp	x25, x26, [sp, #64]
    b960:	ldp	x27, x28, [sp, #80]
    b964:	ldp	x29, x30, [sp], #272
    b968:	ret
    b96c:	ldr	x1, [sp, #120]
    b970:	mov	x2, x27
    b974:	mov	x0, x1
    b978:	bl	4e60 <__gmpz_fdiv_q_2exp@plt>
    b97c:	ldr	x0, [sp, #128]
    b980:	mov	x1, #0x5                   	// #5
    b984:	mov	x2, x27
    b988:	bl	5100 <__gmpz_ui_pow_ui@plt>
    b98c:	ldp	x1, x0, [sp, #120]
    b990:	bl	5350 <__gmpz_cmp@plt>
    b994:	cbnz	w0, b8a8 <mpc_log10@@Base+0x388>
    b998:	mov	x0, x20
    b99c:	mov	x1, #0x40                  	// #64
    b9a0:	bl	4cd0 <mpfr_set_prec@plt>
    b9a4:	mov	x1, x27
    b9a8:	mov	w3, #0x0                   	// #0
    b9ac:	mov	x2, #0xffffffffffffffff    	// #-1
    b9b0:	mov	x0, x20
    b9b4:	bl	5180 <mpfr_set_ui_2exp@plt>
    b9b8:	ldr	x0, [sp, #120]
    b9bc:	bl	51d0 <__gmpz_clear@plt>
    b9c0:	ldr	x0, [sp, #128]
    b9c4:	bl	51d0 <__gmpz_clear@plt>
    b9c8:	ldr	w2, [sp, #104]
    b9cc:	mov	x1, x20
    b9d0:	ldr	w3, [sp, #216]
    b9d4:	mov	x0, x22
    b9d8:	bl	5220 <mpfr_set4@plt>
    b9dc:	mov	w21, w0
    b9e0:	ldr	w2, [sp, #136]
    b9e4:	add	x0, x22, #0x20
    b9e8:	ldr	w3, [sp, #248]
    b9ec:	add	x1, x20, #0x20
    b9f0:	bl	5220 <mpfr_set4@plt>
    b9f4:	mov	w19, w0
    b9f8:	ldr	w0, [sp, #140]
    b9fc:	cbz	w0, ba78 <mpc_log10@@Base+0x558>
    ba00:	asr	w0, w28, #2
    ba04:	cmp	w0, #0x2
    ba08:	b.eq	ba98 <mpc_log10@@Base+0x578>  // b.none
    ba0c:	cmp	w0, #0x0
    ba10:	mov	x0, x23
    ba14:	cset	w19, ne  // ne = any
    ba18:	bl	4db0 <mpfr_clear@plt>
    ba1c:	mov	x0, x20
    ba20:	bl	4a50 <mpc_clear@plt>
    ba24:	tbz	w21, #31, b6c8 <mpc_log10@@Base+0x1a8>
    ba28:	mov	w0, #0x2                   	// #2
    ba2c:	b	b6d4 <mpc_log10@@Base+0x1b4>
    ba30:	ldr	w2, [sp, #136]
    ba34:	add	x1, x20, #0x20
    ba38:	bl	5220 <mpfr_set4@plt>
    ba3c:	mov	w19, w0
    ba40:	cbnz	w21, b73c <mpc_log10@@Base+0x21c>
    ba44:	mov	x0, x23
    ba48:	bl	4db0 <mpfr_clear@plt>
    ba4c:	mov	x0, x20
    ba50:	bl	4a50 <mpc_clear@plt>
    ba54:	mov	w0, #0x2                   	// #2
    ba58:	tbz	w19, #31, b6d4 <mpc_log10@@Base+0x1b4>
    ba5c:	b	b94c <mpc_log10@@Base+0x42c>
    ba60:	mov	x0, x23
    ba64:	bl	4db0 <mpfr_clear@plt>
    ba68:	mov	x0, x20
    ba6c:	bl	4a50 <mpc_clear@plt>
    ba70:	mov	w0, #0xa                   	// #10
    ba74:	b	b6e0 <mpc_log10@@Base+0x1c0>
    ba78:	mov	x0, x23
    ba7c:	bl	4db0 <mpfr_clear@plt>
    ba80:	mov	x0, x20
    ba84:	bl	4a50 <mpc_clear@plt>
    ba88:	mov	w0, #0x2                   	// #2
    ba8c:	tbz	w21, #31, b6c8 <mpc_log10@@Base+0x1a8>
    ba90:	tbz	w19, #31, b6d4 <mpc_log10@@Base+0x1b4>
    ba94:	b	b94c <mpc_log10@@Base+0x42c>
    ba98:	mov	x0, x23
    ba9c:	bl	4db0 <mpfr_clear@plt>
    baa0:	mov	x0, x20
    baa4:	bl	4a50 <mpc_clear@plt>
    baa8:	mov	w0, #0xa                   	// #10
    baac:	tbz	w21, #31, b944 <mpc_log10@@Base+0x424>
    bab0:	b	b6e0 <mpc_log10@@Base+0x1c0>
    bab4:	nop

000000000000bab8 <mpc_alloc_str@@Base>:
    bab8:	stp	x29, x30, [sp, #-48]!
    babc:	mov	x2, #0x0                   	// #0
    bac0:	mov	x1, #0x0                   	// #0
    bac4:	mov	x29, sp
    bac8:	str	x19, [sp, #16]
    bacc:	mov	x19, x0
    bad0:	add	x0, sp, #0x28
    bad4:	bl	4b20 <__gmp_get_memory_functions@plt>
    bad8:	ldr	x1, [sp, #40]
    badc:	mov	x0, x19
    bae0:	blr	x1
    bae4:	ldr	x19, [sp, #16]
    bae8:	ldp	x29, x30, [sp], #48
    baec:	ret

000000000000baf0 <mpc_realloc_str@@Base>:
    baf0:	stp	x29, x30, [sp, #-64]!
    baf4:	mov	x29, sp
    baf8:	stp	x19, x20, [sp, #16]
    bafc:	mov	x19, x0
    bb00:	mov	x20, x1
    bb04:	mov	x0, #0x0                   	// #0
    bb08:	add	x1, sp, #0x38
    bb0c:	str	x21, [sp, #32]
    bb10:	mov	x21, x2
    bb14:	mov	x2, #0x0                   	// #0
    bb18:	bl	4b20 <__gmp_get_memory_functions@plt>
    bb1c:	ldr	x3, [sp, #56]
    bb20:	mov	x2, x21
    bb24:	mov	x1, x20
    bb28:	mov	x0, x19
    bb2c:	blr	x3
    bb30:	ldp	x19, x20, [sp, #16]
    bb34:	ldr	x21, [sp, #32]
    bb38:	ldp	x29, x30, [sp], #64
    bb3c:	ret

000000000000bb40 <mpc_free_str@@Base>:
    bb40:	stp	x29, x30, [sp, #-48]!
    bb44:	mov	x1, #0x0                   	// #0
    bb48:	add	x2, sp, #0x28
    bb4c:	mov	x29, sp
    bb50:	str	x19, [sp, #16]
    bb54:	mov	x19, x0
    bb58:	mov	x0, #0x0                   	// #0
    bb5c:	bl	4b20 <__gmp_get_memory_functions@plt>
    bb60:	mov	x0, x19
    bb64:	bl	4a40 <strlen@plt>
    bb68:	ldr	x2, [sp, #40]
    bb6c:	mov	x1, x0
    bb70:	add	x1, x1, #0x1
    bb74:	mov	x0, x19
    bb78:	blr	x2
    bb7c:	ldr	x19, [sp, #16]
    bb80:	ldp	x29, x30, [sp], #48
    bb84:	ret

000000000000bb88 <mpc_mul_2si@@Base>:
    bb88:	stp	x29, x30, [sp, #-64]!
    bb8c:	mov	x29, sp
    bb90:	stp	x19, x20, [sp, #16]
    bb94:	mov	w20, w3
    bb98:	and	w3, w3, #0xf
    bb9c:	stp	x21, x22, [sp, #32]
    bba0:	mov	x21, x0
    bba4:	mov	x22, x1
    bba8:	str	x23, [sp, #48]
    bbac:	mov	x23, x2
    bbb0:	bl	4ab0 <mpfr_mul_2si@plt>
    bbb4:	mov	w19, w0
    bbb8:	asr	w3, w20, #4
    bbbc:	mov	x2, x23
    bbc0:	add	x1, x22, #0x20
    bbc4:	add	x0, x21, #0x20
    bbc8:	bl	4ab0 <mpfr_mul_2si@plt>
    bbcc:	cmp	w19, #0x0
    bbd0:	mov	w2, #0x2                   	// #2
    bbd4:	cset	w1, ne  // ne = any
    bbd8:	csel	w1, w1, w2, ge  // ge = tcont
    bbdc:	cmp	w0, #0x0
    bbe0:	orr	w3, w1, #0x4
    bbe4:	orr	w2, w1, #0x8
    bbe8:	csel	w1, w3, w1, ne  // ne = any
    bbec:	csel	w1, w1, w2, ge  // ge = tcont
    bbf0:	mov	w0, w1
    bbf4:	ldp	x19, x20, [sp, #16]
    bbf8:	ldp	x21, x22, [sp, #32]
    bbfc:	ldr	x23, [sp, #48]
    bc00:	ldp	x29, x30, [sp], #64
    bc04:	ret

000000000000bc08 <mpc_mul_2ui@@Base>:
    bc08:	stp	x29, x30, [sp, #-64]!
    bc0c:	mov	x29, sp
    bc10:	stp	x19, x20, [sp, #16]
    bc14:	mov	w20, w3
    bc18:	and	w3, w3, #0xf
    bc1c:	stp	x21, x22, [sp, #32]
    bc20:	mov	x21, x0
    bc24:	mov	x22, x1
    bc28:	str	x23, [sp, #48]
    bc2c:	mov	x23, x2
    bc30:	bl	4f90 <mpfr_mul_2ui@plt>
    bc34:	mov	w19, w0
    bc38:	asr	w3, w20, #4
    bc3c:	mov	x2, x23
    bc40:	add	x1, x22, #0x20
    bc44:	add	x0, x21, #0x20
    bc48:	bl	4f90 <mpfr_mul_2ui@plt>
    bc4c:	cmp	w19, #0x0
    bc50:	mov	w2, #0x2                   	// #2
    bc54:	cset	w1, ne  // ne = any
    bc58:	csel	w1, w1, w2, ge  // ge = tcont
    bc5c:	cmp	w0, #0x0
    bc60:	orr	w3, w1, #0x4
    bc64:	orr	w2, w1, #0x8
    bc68:	csel	w1, w3, w1, ne  // ne = any
    bc6c:	csel	w1, w1, w2, ge  // ge = tcont
    bc70:	mov	w0, w1
    bc74:	ldp	x19, x20, [sp, #16]
    bc78:	ldp	x21, x22, [sp, #32]
    bc7c:	ldr	x23, [sp, #48]
    bc80:	ldp	x29, x30, [sp], #64
    bc84:	ret

000000000000bc88 <mpc_mul_naive@@Base>:
    bc88:	stp	x29, x30, [sp, #-160]!
    bc8c:	mov	x29, sp
    bc90:	stp	x19, x20, [sp, #16]
    bc94:	mov	x20, x2
    bc98:	mov	x19, x1
    bc9c:	ldr	x2, [x1, #16]
    bca0:	stp	x21, x22, [sp, #32]
    bca4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    bca8:	stp	x23, x24, [sp, #48]
    bcac:	cmp	x2, x1
    bcb0:	stp	x25, x26, [sp, #64]
    bcb4:	stp	x27, x28, [sp, #80]
    bcb8:	b.le	be50 <mpc_mul_naive@@Base+0x1c8>
    bcbc:	mov	x28, x0
    bcc0:	ldr	x0, [x19, #48]
    bcc4:	cmp	x0, x1
    bcc8:	b.le	be50 <mpc_mul_naive@@Base+0x1c8>
    bccc:	ldr	x0, [x20, #16]
    bcd0:	cmp	x0, x1
    bcd4:	b.le	be50 <mpc_mul_naive@@Base+0x1c8>
    bcd8:	ldr	x0, [x20, #48]
    bcdc:	cmp	x0, x1
    bce0:	b.le	be50 <mpc_mul_naive@@Base+0x1c8>
    bce4:	cmp	x19, x28
    bce8:	mov	w21, w3
    bcec:	cset	w23, eq  // eq = none
    bcf0:	cmp	x20, x28
    bcf4:	csinc	w23, w23, wzr, ne  // ne = any
    bcf8:	cbnz	w23, be38 <mpc_mul_naive@@Base+0x1b0>
    bcfc:	ldp	x0, x1, [x28]
    bd00:	stp	x0, x1, [sp, #96]
    bd04:	add	x22, sp, #0x60
    bd08:	ldp	x0, x1, [x28, #16]
    bd0c:	stp	x0, x1, [sp, #112]
    bd10:	ldp	x0, x1, [x28, #32]
    bd14:	stp	x0, x1, [sp, #128]
    bd18:	ldp	x0, x1, [x28, #48]
    bd1c:	stp	x0, x1, [sp, #144]
    bd20:	add	x26, x19, #0x20
    bd24:	add	x25, x20, #0x20
    bd28:	and	w27, w21, #0xf
    bd2c:	mov	x3, x26
    bd30:	mov	x4, x25
    bd34:	mov	w5, w27
    bd38:	mov	x2, x20
    bd3c:	mov	x1, x19
    bd40:	mov	x0, x22
    bd44:	mov	w24, #0x2                   	// #2
    bd48:	bl	4ad0 <mpfr_fmms@plt>
    bd4c:	tbnz	w0, #31, bd74 <mpc_mul_naive@@Base+0xec>
    bd50:	mov	w5, w27
    bd54:	mov	x4, x25
    bd58:	mov	x3, x26
    bd5c:	mov	x2, x20
    bd60:	mov	x1, x19
    bd64:	mov	x0, x22
    bd68:	bl	4ad0 <mpfr_fmms@plt>
    bd6c:	cmp	w0, #0x0
    bd70:	cset	w24, ne  // ne = any
    bd74:	asr	w21, w21, #4
    bd78:	add	x27, x22, #0x20
    bd7c:	mov	w5, w21
    bd80:	mov	x0, x27
    bd84:	mov	x4, x20
    bd88:	mov	x3, x26
    bd8c:	mov	x2, x25
    bd90:	mov	x1, x19
    bd94:	bl	4ce0 <mpfr_fmma@plt>
    bd98:	tbz	w0, #31, bdd4 <mpc_mul_naive@@Base+0x14c>
    bd9c:	orr	w24, w24, #0x8
    bda0:	mov	x0, x28
    bda4:	mov	x1, x22
    bda8:	mov	w2, #0x0                   	// #0
    bdac:	bl	55d0 <mpc_set@plt>
    bdb0:	cbnz	w23, be10 <mpc_mul_naive@@Base+0x188>
    bdb4:	mov	w0, w24
    bdb8:	ldp	x19, x20, [sp, #16]
    bdbc:	ldp	x21, x22, [sp, #32]
    bdc0:	ldp	x23, x24, [sp, #48]
    bdc4:	ldp	x25, x26, [sp, #64]
    bdc8:	ldp	x27, x28, [sp, #80]
    bdcc:	ldp	x29, x30, [sp], #160
    bdd0:	ret
    bdd4:	mov	x2, x25
    bdd8:	mov	x1, x19
    bddc:	mov	w5, w21
    bde0:	mov	x4, x20
    bde4:	mov	x3, x26
    bde8:	mov	x0, x27
    bdec:	bl	4ce0 <mpfr_fmma@plt>
    bdf0:	cmp	w0, #0x0
    bdf4:	orr	w0, w24, #0x4
    bdf8:	mov	x1, x22
    bdfc:	csel	w24, w0, w24, ne  // ne = any
    be00:	mov	w2, #0x0                   	// #0
    be04:	mov	x0, x28
    be08:	bl	55d0 <mpc_set@plt>
    be0c:	cbz	w23, bdb4 <mpc_mul_naive@@Base+0x12c>
    be10:	mov	x0, x22
    be14:	bl	4a50 <mpc_clear@plt>
    be18:	mov	w0, w24
    be1c:	ldp	x19, x20, [sp, #16]
    be20:	ldp	x21, x22, [sp, #32]
    be24:	ldp	x23, x24, [sp, #48]
    be28:	ldp	x25, x26, [sp, #64]
    be2c:	ldp	x27, x28, [sp, #80]
    be30:	ldp	x29, x30, [sp], #160
    be34:	ret
    be38:	ldr	x1, [x28]
    be3c:	add	x22, sp, #0x60
    be40:	ldr	x2, [x28, #32]
    be44:	mov	x0, x22
    be48:	bl	5410 <mpc_init3@plt>
    be4c:	b	bd20 <mpc_mul_naive@@Base+0x98>
    be50:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    be54:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    be58:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    be5c:	add	x4, x4, #0x458
    be60:	ldr	x0, [x0, #4008]
    be64:	add	x2, x2, #0x4e8
    be68:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    be6c:	add	x1, x1, #0x318
    be70:	mov	w3, #0x174                 	// #372
    be74:	ldr	x0, [x0]
    be78:	bl	55f0 <fprintf@plt>
    be7c:	bl	5050 <abort@plt>
    be80:	stp	x29, x30, [sp, #-144]!
    be84:	cmp	x0, x1
    be88:	mov	x29, sp
    be8c:	stp	x19, x20, [sp, #16]
    be90:	mov	x19, x0
    be94:	mov	x20, x2
    be98:	stp	x21, x22, [sp, #32]
    be9c:	mov	w21, w3
    bea0:	stp	x23, x24, [sp, #48]
    bea4:	cset	w23, eq  // eq = none
    bea8:	cmp	x0, x2
    beac:	stp	x25, x26, [sp, #64]
    beb0:	csinc	w23, w23, wzr, ne  // ne = any
    beb4:	mov	x25, x1
    beb8:	cbnz	w23, c024 <mpc_mul_naive@@Base+0x39c>
    bebc:	ldp	x0, x1, [x0]
    bec0:	stp	x0, x1, [sp, #80]
    bec4:	add	x26, sp, #0x50
    bec8:	ldp	x0, x1, [x19, #16]
    becc:	stp	x0, x1, [sp, #96]
    bed0:	ldp	x0, x1, [x19, #32]
    bed4:	stp	x0, x1, [sp, #112]
    bed8:	ldp	x0, x1, [x19, #48]
    bedc:	stp	x0, x1, [sp, #128]
    bee0:	ldr	w2, [x20, #8]
    bee4:	ldr	w0, [x25, #40]
    bee8:	tbnz	w2, #31, bfb0 <mpc_mul_naive@@Base+0x328>
    beec:	mov	w22, #0x0                   	// #0
    bef0:	tbnz	w0, #31, bfb8 <mpc_mul_naive@@Base+0x330>
    bef4:	and	w3, w21, #0xf
    bef8:	add	x20, x20, #0x20
    befc:	cmp	w3, #0x2
    bf00:	add	x1, x25, #0x20
    bf04:	b.eq	bfe8 <mpc_mul_naive@@Base+0x360>  // b.none
    bf08:	cmp	w3, #0x3
    bf0c:	mov	w0, #0x2                   	// #2
    bf10:	csel	w3, w3, w0, ne  // ne = any
    bf14:	mov	x2, x20
    bf18:	mov	x0, x26
    bf1c:	bl	4bb0 <mpfr_mul@plt>
    bf20:	asr	w21, w21, #4
    bf24:	mov	x1, x26
    bf28:	mov	w2, #0x0                   	// #0
    bf2c:	mov	w24, w0
    bf30:	mov	x0, x26
    bf34:	bl	4bc0 <mpfr_neg@plt>
    bf38:	mov	w3, w21
    bf3c:	mov	x2, x20
    bf40:	mov	x1, x25
    bf44:	add	x0, x26, #0x20
    bf48:	bl	4bb0 <mpfr_mul@plt>
    bf4c:	mov	w20, w0
    bf50:	mov	x1, x26
    bf54:	mov	x0, x19
    bf58:	mov	w2, #0x0                   	// #0
    bf5c:	bl	55d0 <mpc_set@plt>
    bf60:	ldr	x1, [x19, #48]
    bf64:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    bf68:	cmp	x1, x0
    bf6c:	b.eq	bff0 <mpc_mul_naive@@Base+0x368>  // b.none
    bf70:	cbnz	w23, c018 <mpc_mul_naive@@Base+0x390>
    bf74:	cmp	w24, #0x0
    bf78:	mov	w0, #0x2                   	// #2
    bf7c:	cset	w1, ne  // ne = any
    bf80:	csel	w0, w1, w0, le
    bf84:	cmp	w20, #0x0
    bf88:	orr	w1, w0, #0x4
    bf8c:	csel	w1, w1, w0, ne  // ne = any
    bf90:	orr	w0, w0, #0x8
    bf94:	csel	w0, w1, w0, ge  // ge = tcont
    bf98:	ldp	x19, x20, [sp, #16]
    bf9c:	ldp	x21, x22, [sp, #32]
    bfa0:	ldp	x23, x24, [sp, #48]
    bfa4:	ldp	x25, x26, [sp, #64]
    bfa8:	ldp	x29, x30, [sp], #144
    bfac:	ret
    bfb0:	mov	w22, #0x0                   	// #0
    bfb4:	tbnz	w0, #31, bef4 <mpc_mul_naive@@Base+0x26c>
    bfb8:	ldr	w0, [x25, #8]
    bfbc:	and	w3, w21, #0xf
    bfc0:	ldr	w1, [x20, #40]
    bfc4:	add	x20, x20, #0x20
    bfc8:	mvn	w22, w0
    bfcc:	cmp	w1, #0x0
    bfd0:	lsr	w0, w0, #31
    bfd4:	lsr	w22, w22, #31
    bfd8:	add	x1, x25, #0x20
    bfdc:	csel	w22, w22, w0, lt  // lt = tstop
    bfe0:	cmp	w3, #0x2
    bfe4:	b.ne	bf08 <mpc_mul_naive@@Base+0x280>  // b.any
    bfe8:	mov	w3, #0x3                   	// #3
    bfec:	b	bf14 <mpc_mul_naive@@Base+0x28c>
    bff0:	cmp	w21, #0x3
    bff4:	add	x1, x19, #0x20
    bff8:	csinc	w0, w22, wzr, ne  // ne = any
    bffc:	mov	w3, #0x1                   	// #1
    c000:	cmp	w0, #0x0
    c004:	mov	w2, #0x0                   	// #0
    c008:	cneg	w3, w3, ne  // ne = any
    c00c:	mov	x0, x1
    c010:	bl	5220 <mpfr_set4@plt>
    c014:	cbz	w23, bf74 <mpc_mul_naive@@Base+0x2ec>
    c018:	mov	x0, x26
    c01c:	bl	4a50 <mpc_clear@plt>
    c020:	b	bf74 <mpc_mul_naive@@Base+0x2ec>
    c024:	ldr	x1, [x19]
    c028:	add	x26, sp, #0x50
    c02c:	ldr	x2, [x19, #32]
    c030:	mov	x0, x26
    c034:	bl	5410 <mpc_init3@plt>
    c038:	b	bee0 <mpc_mul_naive@@Base+0x258>
    c03c:	nop

000000000000c040 <mpc_mul_karatsuba@@Base>:
    c040:	stp	x29, x30, [sp, #-400]!
    c044:	mov	x4, x0
    c048:	cmp	x0, x1
    c04c:	mov	x29, sp
    c050:	str	x0, [sp, #152]
    c054:	cset	w0, eq  // eq = none
    c058:	cmp	x4, x2
    c05c:	stp	x19, x20, [sp, #16]
    c060:	csinc	w0, w0, wzr, ne  // ne = any
    c064:	stp	x21, x22, [sp, #32]
    c068:	stp	x23, x24, [sp, #48]
    c06c:	stp	x25, x26, [sp, #64]
    c070:	stp	x27, x28, [sp, #80]
    c074:	str	x2, [sp, #136]
    c078:	str	x1, [sp, #176]
    c07c:	str	w3, [sp, #192]
    c080:	str	w0, [sp, #196]
    c084:	cbnz	w0, c55c <mpc_mul_karatsuba@@Base+0x51c>
    c088:	ldr	x2, [sp, #152]
    c08c:	ldp	x0, x1, [x2]
    c090:	stp	x0, x1, [sp, #336]
    c094:	ldp	x0, x1, [x2, #16]
    c098:	stp	x0, x1, [sp, #352]
    c09c:	ldp	x0, x1, [x2, #32]
    c0a0:	stp	x0, x1, [sp, #368]
    c0a4:	ldp	x0, x1, [x2, #48]
    c0a8:	stp	x0, x1, [sp, #384]
    c0ac:	ldr	x0, [sp, #176]
    c0b0:	str	x0, [sp, #104]
    c0b4:	add	x24, x0, #0x20
    c0b8:	mov	x1, x24
    c0bc:	bl	5400 <mpfr_cmpabs@plt>
    c0c0:	ldr	x1, [sp, #136]
    c0c4:	mov	x28, x1
    c0c8:	add	x26, x1, #0x20
    c0cc:	tbnz	w0, #31, c538 <mpc_mul_karatsuba@@Base+0x4f8>
    c0d0:	ldr	x0, [sp, #136]
    c0d4:	mov	x1, x26
    c0d8:	bl	5400 <mpfr_cmpabs@plt>
    c0dc:	tbnz	w0, #31, c470 <mpc_mul_karatsuba@@Base+0x430>
    c0e0:	ldr	x0, [sp, #152]
    c0e4:	mov	w1, #0x1                   	// #1
    c0e8:	str	x24, [sp, #104]
    c0ec:	str	w1, [sp, #116]
    c0f0:	str	w1, [sp, #144]
    c0f4:	ldr	w1, [sp, #192]
    c0f8:	ldr	x19, [x0, #32]
    c0fc:	and	w1, w1, #0xf
    c100:	ldr	x24, [sp, #176]
    c104:	str	w1, [sp, #148]
    c108:	ldr	x21, [x0]
    c10c:	str	x21, [sp, #184]
    c110:	str	wzr, [sp, #200]
    c114:	ldr	x2, [x24]
    c118:	add	x25, sp, #0xf0
    c11c:	ldr	x1, [x26]
    c120:	mov	x0, x25
    c124:	add	x27, sp, #0x110
    c128:	add	x20, sp, #0xd0
    c12c:	add	x1, x2, x1
    c130:	str	x1, [sp, #160]
    c134:	bl	5490 <mpfr_init2@plt>
    c138:	add	x22, sp, #0x130
    c13c:	ldr	x0, [sp, #104]
    c140:	ldr	x1, [x28]
    c144:	ldr	x2, [x0]
    c148:	mov	x0, x27
    c14c:	add	x1, x2, x1
    c150:	str	x1, [sp, #168]
    c154:	bl	5490 <mpfr_init2@plt>
    c158:	mov	x0, x20
    c15c:	mov	x1, #0x2                   	// #2
    c160:	bl	5490 <mpfr_init2@plt>
    c164:	mov	x0, x22
    c168:	mov	x1, #0x2                   	// #2
    c16c:	bl	5490 <mpfr_init2@plt>
    c170:	mov	x0, x25
    c174:	mov	x2, x26
    c178:	mov	x1, x24
    c17c:	mov	w3, #0x0                   	// #0
    c180:	bl	4bb0 <mpfr_mul@plt>
    c184:	cbnz	w0, c4d8 <mpc_mul_karatsuba@@Base+0x498>
    c188:	ldr	w0, [sp, #116]
    c18c:	cmn	w0, #0x1
    c190:	b.eq	c7d8 <mpc_mul_karatsuba@@Base+0x798>  // b.none
    c194:	ldr	x1, [sp, #104]
    c198:	mov	x2, x28
    c19c:	mov	x0, x27
    c1a0:	mov	w3, #0x0                   	// #0
    c1a4:	bl	4bb0 <mpfr_mul@plt>
    c1a8:	str	w0, [sp, #204]
    c1ac:	cbnz	w0, c4d8 <mpc_mul_karatsuba@@Base+0x498>
    c1b0:	ldr	w0, [sp, #144]
    c1b4:	cmn	w0, #0x1
    c1b8:	b.eq	c814 <mpc_mul_karatsuba@@Base+0x7d4>  // b.none
    c1bc:	mov	x1, x27
    c1c0:	mov	x0, x25
    c1c4:	bl	5400 <mpfr_cmpabs@plt>
    c1c8:	mov	w23, w0
    c1cc:	cmp	w0, #0x0
    c1d0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c1d4:	ldr	x0, [sp, #256]
    c1d8:	b.le	c770 <mpc_mul_karatsuba@@Base+0x730>
    c1dc:	cmp	x0, x1
    c1e0:	b.lt	c570 <mpc_mul_karatsuba@@Base+0x530>  // b.tstop
    c1e4:	ldr	w23, [sp, #248]
    c1e8:	lsl	w23, w23, #1
    c1ec:	ldr	x0, [sp, #288]
    c1f0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c1f4:	cmp	x0, x1
    c1f8:	b.lt	c758 <mpc_mul_karatsuba@@Base+0x718>  // b.tstop
    c1fc:	ldr	w0, [sp, #280]
    c200:	sub	w23, w23, w0
    c204:	ldr	x0, [x24, #16]
    c208:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c20c:	cmp	x0, x1
    c210:	b.ge	c6ec <mpc_mul_karatsuba@@Base+0x6ac>  // b.tcont
    c214:	mov	x1, #0x2                   	// #2
    c218:	movk	x1, #0x8000, lsl #48
    c21c:	cmp	x0, x1
    c220:	b.eq	c900 <mpc_mul_karatsuba@@Base+0x8c0>  // b.none
    c224:	ldr	x0, [x28, #16]
    c228:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c22c:	cmp	x0, x1
    c230:	b.ge	c244 <mpc_mul_karatsuba@@Base+0x204>  // b.tcont
    c234:	mov	x1, #0x2                   	// #2
    c238:	movk	x1, #0x8000, lsl #48
    c23c:	cmp	x0, x1
    c240:	b.eq	c8b0 <mpc_mul_karatsuba@@Base+0x870>  // b.none
    c244:	mov	w2, #0x0                   	// #0
    c248:	cmp	x19, x21
    c24c:	mov	w0, #0x2                   	// #2
    c250:	csel	x21, x19, x21, ge  // ge = tcont
    c254:	cmp	w2, #0x0
    c258:	mov	w1, #0x3                   	// #3
    c25c:	str	w0, [sp, #112]
    c260:	csel	w0, w0, w1, gt
    c264:	stp	x24, x26, [sp, #120]
    c268:	mov	w24, w0
    c26c:	nop
    c270:	mov	x0, x21
    c274:	bl	4d70 <mpc_ceil_log2@plt>
    c278:	mov	x1, x0
    c27c:	mov	x0, x20
    c280:	add	x1, x1, #0x3
    c284:	add	x21, x21, x1
    c288:	mov	x1, x21
    c28c:	bl	4cd0 <mpfr_set_prec@plt>
    c290:	mov	x1, x21
    c294:	mov	x0, x22
    c298:	bl	4cd0 <mpfr_set_prec@plt>
    c29c:	ldr	w0, [sp, #116]
    c2a0:	mov	w3, #0x4                   	// #4
    c2a4:	ldr	x1, [sp, #104]
    c2a8:	cmn	w0, #0x1
    c2ac:	mov	x0, x20
    c2b0:	ldr	x2, [sp, #120]
    c2b4:	b.eq	c6b8 <mpc_mul_karatsuba@@Base+0x678>  // b.none
    c2b8:	bl	4eb0 <mpfr_add@plt>
    c2bc:	mov	w19, w0
    c2c0:	ldr	w0, [sp, #144]
    c2c4:	mov	x1, x28
    c2c8:	mov	w3, #0x4                   	// #4
    c2cc:	cmn	w0, #0x1
    c2d0:	mov	x0, x22
    c2d4:	ldr	x2, [sp, #128]
    c2d8:	b.eq	c69c <mpc_mul_karatsuba@@Base+0x65c>  // b.none
    c2dc:	bl	4aa0 <mpfr_sub@plt>
    c2e0:	orr	w19, w19, w0
    c2e4:	cbz	w19, c624 <mpc_mul_karatsuba@@Base+0x5e4>
    c2e8:	mov	x2, x22
    c2ec:	mov	x1, x20
    c2f0:	mov	x0, x20
    c2f4:	mov	w3, #0x4                   	// #4
    c2f8:	mov	x23, x21
    c2fc:	bl	4bb0 <mpfr_mul@plt>
    c300:	orr	w19, w0, w19
    c304:	mov	x1, x25
    c308:	mov	w3, w24
    c30c:	mov	x2, x27
    c310:	mov	x0, x22
    c314:	bl	4aa0 <mpfr_sub@plt>
    c318:	orr	w19, w0, w19
    c31c:	ldr	x1, [sp, #224]
    c320:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    c324:	cmp	x1, x0
    c328:	b.ge	c58c <mpc_mul_karatsuba@@Base+0x54c>  // b.tcont
    c32c:	mov	x0, #0x2                   	// #2
    c330:	movk	x0, #0x8000, lsl #48
    c334:	cmp	x1, x0
    c338:	b.eq	c6dc <mpc_mul_karatsuba@@Base+0x69c>  // b.none
    c33c:	ldr	x0, [sp, #320]
    c340:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c344:	cmp	x0, x1
    c348:	b.ge	c5a8 <mpc_mul_karatsuba@@Base+0x568>  // b.tcont
    c34c:	mov	x1, #0x2                   	// #2
    c350:	mov	w26, #0x3                   	// #3
    c354:	movk	x1, #0x8000, lsl #48
    c358:	cmp	x0, x1
    c35c:	b.eq	c6e4 <mpc_mul_karatsuba@@Base+0x6a4>  // b.none
    c360:	mov	w3, w26
    c364:	mov	x2, x22
    c368:	mov	x1, x20
    c36c:	mov	x0, x20
    c370:	bl	4eb0 <mpfr_add@plt>
    c374:	orr	w0, w19, w0
    c378:	cbnz	w0, c5d4 <mpc_mul_karatsuba@@Base+0x594>
    c37c:	ldr	w0, [sp, #192]
    c380:	and	w19, w0, #0xf
    c384:	asr	w23, w0, #4
    c388:	ldr	w0, [sp, #200]
    c38c:	cbz	w0, c828 <mpc_mul_karatsuba@@Base+0x7e8>
    c390:	ldr	w0, [sp, #200]
    c394:	add	x21, sp, #0x150
    c398:	cmp	w0, #0x1
    c39c:	b.eq	c8c4 <mpc_mul_karatsuba@@Base+0x884>  // b.none
    c3a0:	mov	w2, w19
    c3a4:	mov	x0, x21
    c3a8:	mov	x1, x20
    c3ac:	bl	4bc0 <mpfr_neg@plt>
    c3b0:	mov	w19, w0
    c3b4:	cbz	w0, c874 <mpc_mul_karatsuba@@Base+0x834>
    c3b8:	cmp	w23, #0x2
    c3bc:	mov	w3, #0x3                   	// #3
    c3c0:	b.eq	c3d0 <mpc_mul_karatsuba@@Base+0x390>  // b.none
    c3c4:	cmp	w23, w3
    c3c8:	mov	w3, #0x2                   	// #2
    c3cc:	csel	w3, w23, w3, ne  // ne = any
    c3d0:	add	x24, x21, #0x20
    c3d4:	mov	x2, x27
    c3d8:	mov	x1, x25
    c3dc:	mov	x0, x24
    c3e0:	bl	4eb0 <mpfr_add@plt>
    c3e4:	mov	w2, w23
    c3e8:	mov	x1, x24
    c3ec:	neg	w23, w0
    c3f0:	mov	x0, x24
    c3f4:	bl	4bc0 <mpfr_neg@plt>
    c3f8:	ldr	x0, [sp, #152]
    c3fc:	mov	x1, x21
    c400:	mov	w2, #0x0                   	// #0
    c404:	bl	55d0 <mpc_set@plt>
    c408:	mov	x0, x20
    c40c:	bl	4db0 <mpfr_clear@plt>
    c410:	mov	x0, x25
    c414:	bl	4db0 <mpfr_clear@plt>
    c418:	mov	x0, x27
    c41c:	bl	4db0 <mpfr_clear@plt>
    c420:	mov	x0, x22
    c424:	bl	4db0 <mpfr_clear@plt>
    c428:	ldr	w0, [sp, #196]
    c42c:	cbnz	w0, c914 <mpc_mul_karatsuba@@Base+0x8d4>
    c430:	cmp	w19, #0x0
    c434:	mov	w0, #0x2                   	// #2
    c438:	cset	w1, ne  // ne = any
    c43c:	csel	w0, w1, w0, ge  // ge = tcont
    c440:	cmp	w23, #0x0
    c444:	orr	w1, w0, #0x4
    c448:	csel	w1, w1, w0, ne  // ne = any
    c44c:	orr	w0, w0, #0x8
    c450:	csel	w0, w1, w0, ge  // ge = tcont
    c454:	ldp	x19, x20, [sp, #16]
    c458:	ldp	x21, x22, [sp, #32]
    c45c:	ldp	x23, x24, [sp, #48]
    c460:	ldp	x25, x26, [sp, #64]
    c464:	ldp	x27, x28, [sp, #80]
    c468:	ldp	x29, x30, [sp], #400
    c46c:	ret
    c470:	mov	x28, x26
    c474:	str	x24, [sp, #104]
    c478:	ldr	x26, [sp, #136]
    c47c:	mov	w0, #0xffffffff            	// #-1
    c480:	ldr	x24, [sp, #176]
    c484:	str	w0, [sp, #144]
    c488:	mov	w0, #0x1                   	// #1
    c48c:	str	w0, [sp, #116]
    c490:	ldr	x0, [sp, #152]
    c494:	ldr	w1, [sp, #192]
    c498:	ldr	x19, [x0, #32]
    c49c:	asr	w1, w1, #4
    c4a0:	str	w1, [sp, #148]
    c4a4:	str	x19, [sp, #184]
    c4a8:	ldr	x21, [x0]
    c4ac:	mov	w0, #0x1                   	// #1
    c4b0:	str	w0, [sp, #200]
    c4b4:	ldr	w0, [sp, #148]
    c4b8:	cmp	w0, #0x2
    c4bc:	b.eq	c794 <mpc_mul_karatsuba@@Base+0x754>  // b.none
    c4c0:	ldr	w1, [sp, #148]
    c4c4:	mov	w0, #0x2                   	// #2
    c4c8:	cmp	w1, #0x3
    c4cc:	csel	w0, w1, w0, ne  // ne = any
    c4d0:	str	w0, [sp, #148]
    c4d4:	b	c114 <mpc_mul_karatsuba@@Base+0xd4>
    c4d8:	mov	x0, x20
    c4dc:	bl	4db0 <mpfr_clear@plt>
    c4e0:	mov	x0, x25
    c4e4:	bl	4db0 <mpfr_clear@plt>
    c4e8:	mov	x0, x27
    c4ec:	bl	4db0 <mpfr_clear@plt>
    c4f0:	mov	x0, x22
    c4f4:	bl	4db0 <mpfr_clear@plt>
    c4f8:	ldr	w0, [sp, #196]
    c4fc:	cbz	w0, c508 <mpc_mul_karatsuba@@Base+0x4c8>
    c500:	add	x0, sp, #0x150
    c504:	bl	4a50 <mpc_clear@plt>
    c508:	ldr	w3, [sp, #192]
    c50c:	ldr	x2, [sp, #136]
    c510:	ldr	x0, [sp, #152]
    c514:	ldr	x1, [sp, #176]
    c518:	bl	4f00 <mpc_mul_naive@plt>
    c51c:	ldp	x19, x20, [sp, #16]
    c520:	ldp	x21, x22, [sp, #32]
    c524:	ldp	x23, x24, [sp, #48]
    c528:	ldp	x25, x26, [sp, #64]
    c52c:	ldp	x27, x28, [sp, #80]
    c530:	ldp	x29, x30, [sp], #400
    c534:	ret
    c538:	ldr	x0, [sp, #136]
    c53c:	mov	x1, x26
    c540:	bl	5400 <mpfr_cmpabs@plt>
    c544:	tbnz	w0, #31, c7a0 <mpc_mul_karatsuba@@Base+0x760>
    c548:	mov	w0, #0x1                   	// #1
    c54c:	str	w0, [sp, #144]
    c550:	mov	w0, #0xffffffff            	// #-1
    c554:	str	w0, [sp, #116]
    c558:	b	c490 <mpc_mul_karatsuba@@Base+0x450>
    c55c:	ldr	x1, [x4]
    c560:	add	x0, sp, #0x150
    c564:	ldr	x2, [x4, #32]
    c568:	bl	5410 <mpc_init3@plt>
    c56c:	b	c0ac <mpc_mul_karatsuba@@Base+0x6c>
    c570:	mov	x1, #0x2                   	// #2
    c574:	mov	w23, #0x0                   	// #0
    c578:	movk	x1, #0x8000, lsl #48
    c57c:	cmp	x0, x1
    c580:	b.ne	c1ec <mpc_mul_karatsuba@@Base+0x1ac>  // b.any
    c584:	bl	4b40 <mpfr_set_erangeflag@plt>
    c588:	b	c1ec <mpc_mul_karatsuba@@Base+0x1ac>
    c58c:	ldr	w0, [sp, #216]
    c590:	mov	w26, w24
    c594:	cbnz	w0, c360 <mpc_mul_karatsuba@@Base+0x320>
    c598:	ldr	x0, [sp, #320]
    c59c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c5a0:	cmp	x0, x1
    c5a4:	b.lt	c34c <mpc_mul_karatsuba@@Base+0x30c>  // b.tstop
    c5a8:	ldr	w0, [sp, #312]
    c5ac:	mov	x2, x22
    c5b0:	mov	x1, x20
    c5b4:	cmp	w0, #0x0
    c5b8:	mov	x0, x20
    c5bc:	cset	w3, le
    c5c0:	add	w26, w3, #0x2
    c5c4:	mov	w3, w26
    c5c8:	bl	4eb0 <mpfr_add@plt>
    c5cc:	orr	w0, w19, w0
    c5d0:	cbz	w0, c37c <mpc_mul_karatsuba@@Base+0x33c>
    c5d4:	ldr	w0, [sp, #148]
    c5d8:	mov	w2, w26
    c5dc:	sub	x1, x23, #0x3
    c5e0:	mov	w3, #0x1                   	// #1
    c5e4:	cmp	w0, #0x0
    c5e8:	ldr	x0, [sp, #184]
    c5ec:	cinc	x4, x0, eq  // eq = none
    c5f0:	mov	x0, x20
    c5f4:	bl	54a0 <mpfr_can_round@plt>
    c5f8:	cbz	w0, c6c4 <mpc_mul_karatsuba@@Base+0x684>
    c5fc:	ldr	x0, [sp, #224]
    c600:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c604:	cmp	x0, x1
    c608:	b.ge	c868 <mpc_mul_karatsuba@@Base+0x828>  // b.tcont
    c60c:	mov	x1, #0x2                   	// #2
    c610:	movk	x1, #0x8000, lsl #48
    c614:	cmp	x0, x1
    c618:	b.ne	c37c <mpc_mul_karatsuba@@Base+0x33c>  // b.any
    c61c:	bl	4b40 <mpfr_set_erangeflag@plt>
    c620:	b	c37c <mpc_mul_karatsuba@@Base+0x33c>
    c624:	lsl	x23, x21, #1
    c628:	mov	w2, #0x0                   	// #0
    c62c:	mov	x1, x23
    c630:	mov	x0, x20
    c634:	bl	53c0 <mpfr_prec_round@plt>
    c638:	mov	x2, x22
    c63c:	mov	x1, x20
    c640:	mov	x0, x20
    c644:	mov	w3, #0x4                   	// #4
    c648:	bl	4bb0 <mpfr_mul@plt>
    c64c:	mov	w19, w0
    c650:	cbnz	w0, c304 <mpc_mul_karatsuba@@Base+0x2c4>
    c654:	ldr	x1, [sp, #256]
    c658:	ldr	x0, [sp, #288]
    c65c:	ldr	x2, [sp, #168]
    c660:	subs	x1, x1, x0
    c664:	ldr	x0, [sp, #160]
    c668:	cneg	x1, x1, mi  // mi = first
    c66c:	cmp	x0, x2
    c670:	csel	x0, x0, x2, ge  // ge = tcont
    c674:	add	x1, x1, x0
    c678:	add	x1, x1, #0x1
    c67c:	cmp	x23, x1
    c680:	csel	x1, x23, x1, le
    c684:	cmp	x1, x21
    c688:	b.le	c304 <mpc_mul_karatsuba@@Base+0x2c4>
    c68c:	mov	x0, x22
    c690:	mov	w2, #0x0                   	// #0
    c694:	bl	53c0 <mpfr_prec_round@plt>
    c698:	b	c304 <mpc_mul_karatsuba@@Base+0x2c4>
    c69c:	bl	4eb0 <mpfr_add@plt>
    c6a0:	orr	w19, w19, w0
    c6a4:	mov	x1, x22
    c6a8:	mov	x0, x22
    c6ac:	mov	w2, #0x0                   	// #0
    c6b0:	bl	4bc0 <mpfr_neg@plt>
    c6b4:	b	c2e4 <mpc_mul_karatsuba@@Base+0x2a4>
    c6b8:	bl	4aa0 <mpfr_sub@plt>
    c6bc:	mov	w19, w0
    c6c0:	b	c2c0 <mpc_mul_karatsuba@@Base+0x280>
    c6c4:	ldr	w0, [sp, #112]
    c6c8:	cmp	w0, #0x1
    c6cc:	b.eq	c4d8 <mpc_mul_karatsuba@@Base+0x498>  // b.none
    c6d0:	mov	w0, #0x1                   	// #1
    c6d4:	str	w0, [sp, #112]
    c6d8:	b	c270 <mpc_mul_karatsuba@@Base+0x230>
    c6dc:	bl	4b40 <mpfr_set_erangeflag@plt>
    c6e0:	b	c33c <mpc_mul_karatsuba@@Base+0x2fc>
    c6e4:	bl	4b40 <mpfr_set_erangeflag@plt>
    c6e8:	b	c360 <mpc_mul_karatsuba@@Base+0x320>
    c6ec:	ldr	x0, [x28, #16]
    c6f0:	cmp	x0, x1
    c6f4:	b.lt	c234 <mpc_mul_karatsuba@@Base+0x1f4>  // b.tstop
    c6f8:	ldr	w2, [x24, #8]
    c6fc:	ldr	w1, [sp, #116]
    c700:	ldr	w4, [sp, #144]
    c704:	ldr	w0, [x28, #8]
    c708:	mul	w2, w1, w2
    c70c:	mul	w2, w2, w4
    c710:	mul	w2, w2, w0
    c714:	mul	w23, w23, w2
    c718:	tbz	w23, #31, c248 <mpc_mul_karatsuba@@Base+0x208>
    c71c:	mov	x1, x27
    c720:	mov	x0, x25
    c724:	str	w2, [sp, #112]
    c728:	bl	50e0 <mpfr_swap@plt>
    c72c:	ldr	x1, [sp, #104]
    c730:	mov	x0, x24
    c734:	ldp	w2, w3, [sp, #112]
    c738:	mov	x24, x28
    c73c:	ldr	w4, [sp, #144]
    c740:	mov	x28, x0
    c744:	str	x26, [sp, #104]
    c748:	mov	x26, x1
    c74c:	str	w4, [sp, #116]
    c750:	str	w3, [sp, #144]
    c754:	b	c248 <mpc_mul_karatsuba@@Base+0x208>
    c758:	mov	x1, #0x2                   	// #2
    c75c:	movk	x1, #0x8000, lsl #48
    c760:	cmp	x0, x1
    c764:	b.ne	c204 <mpc_mul_karatsuba@@Base+0x1c4>  // b.any
    c768:	bl	4b40 <mpfr_set_erangeflag@plt>
    c76c:	b	c204 <mpc_mul_karatsuba@@Base+0x1c4>
    c770:	b.ne	c7ec <mpc_mul_karatsuba@@Base+0x7ac>  // b.any
    c774:	cmp	x0, x1
    c778:	b.ge	c8a8 <mpc_mul_karatsuba@@Base+0x868>  // b.tcont
    c77c:	mov	x1, #0x2                   	// #2
    c780:	movk	x1, #0x8000, lsl #48
    c784:	cmp	x0, x1
    c788:	b.ne	c1ec <mpc_mul_karatsuba@@Base+0x1ac>  // b.any
    c78c:	bl	4b40 <mpfr_set_erangeflag@plt>
    c790:	b	c1ec <mpc_mul_karatsuba@@Base+0x1ac>
    c794:	mov	w0, #0x3                   	// #3
    c798:	str	w0, [sp, #148]
    c79c:	b	c114 <mpc_mul_karatsuba@@Base+0xd4>
    c7a0:	ldr	x0, [sp, #152]
    c7a4:	mov	w1, #0xffffffff            	// #-1
    c7a8:	ldr	w2, [sp, #192]
    c7ac:	mov	x28, x26
    c7b0:	str	w1, [sp, #116]
    c7b4:	ldr	x21, [x0]
    c7b8:	and	w2, w2, #0xf
    c7bc:	stp	w1, w2, [sp, #144]
    c7c0:	mov	w1, #0x2                   	// #2
    c7c4:	str	x21, [sp, #184]
    c7c8:	str	w1, [sp, #200]
    c7cc:	ldr	x19, [x0, #32]
    c7d0:	ldr	x26, [sp, #136]
    c7d4:	b	c4b4 <mpc_mul_karatsuba@@Base+0x474>
    c7d8:	mov	x1, x25
    c7dc:	mov	x0, x25
    c7e0:	mov	w2, #0x0                   	// #0
    c7e4:	bl	4bc0 <mpfr_neg@plt>
    c7e8:	b	c194 <mpc_mul_karatsuba@@Base+0x154>
    c7ec:	cmp	x0, x1
    c7f0:	b.lt	c88c <mpc_mul_karatsuba@@Base+0x84c>  // b.tstop
    c7f4:	ldr	w23, [sp, #248]
    c7f8:	ldr	x0, [sp, #288]
    c7fc:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
    c800:	cmp	x0, x1
    c804:	b.lt	c758 <mpc_mul_karatsuba@@Base+0x718>  // b.tstop
    c808:	ldr	w0, [sp, #280]
    c80c:	sub	w23, w23, w0, lsl #1
    c810:	b	c204 <mpc_mul_karatsuba@@Base+0x1c4>
    c814:	mov	x1, x27
    c818:	mov	x0, x27
    c81c:	mov	w2, #0x0                   	// #0
    c820:	bl	4bc0 <mpfr_neg@plt>
    c824:	b	c1bc <mpc_mul_karatsuba@@Base+0x17c>
    c828:	ldr	w3, [sp, #216]
    c82c:	add	x21, sp, #0x150
    c830:	mov	w2, w19
    c834:	mov	x1, x20
    c838:	mov	x0, x21
    c83c:	bl	5220 <mpfr_set4@plt>
    c840:	mov	w19, w0
    c844:	mov	w3, w23
    c848:	mov	x2, x27
    c84c:	mov	x1, x25
    c850:	add	x0, x21, #0x20
    c854:	cbnz	w19, c8b8 <mpc_mul_karatsuba@@Base+0x878>
    c858:	bl	4eb0 <mpfr_add@plt>
    c85c:	ldr	w19, [sp, #204]
    c860:	mov	w23, w0
    c864:	b	c3f8 <mpc_mul_karatsuba@@Base+0x3b8>
    c868:	ldr	w0, [sp, #216]
    c86c:	str	w0, [sp, #204]
    c870:	b	c37c <mpc_mul_karatsuba@@Base+0x33c>
    c874:	ldr	w0, [sp, #204]
    c878:	cmp	w23, #0x2
    c87c:	mov	w3, #0x3                   	// #3
    c880:	neg	w19, w0
    c884:	b.ne	c3c4 <mpc_mul_karatsuba@@Base+0x384>  // b.any
    c888:	b	c3d0 <mpc_mul_karatsuba@@Base+0x390>
    c88c:	mov	x1, #0x2                   	// #2
    c890:	mov	w23, #0x0                   	// #0
    c894:	movk	x1, #0x8000, lsl #48
    c898:	cmp	x0, x1
    c89c:	b.ne	c7f8 <mpc_mul_karatsuba@@Base+0x7b8>  // b.any
    c8a0:	bl	4b40 <mpfr_set_erangeflag@plt>
    c8a4:	b	c7f8 <mpc_mul_karatsuba@@Base+0x7b8>
    c8a8:	ldr	w23, [sp, #248]
    c8ac:	b	c1ec <mpc_mul_karatsuba@@Base+0x1ac>
    c8b0:	bl	4b40 <mpfr_set_erangeflag@plt>
    c8b4:	b	c244 <mpc_mul_karatsuba@@Base+0x204>
    c8b8:	bl	4eb0 <mpfr_add@plt>
    c8bc:	mov	w23, w0
    c8c0:	b	c3f8 <mpc_mul_karatsuba@@Base+0x3b8>
    c8c4:	mov	w2, w23
    c8c8:	mov	x1, x20
    c8cc:	add	x0, x21, #0x20
    c8d0:	bl	4bc0 <mpfr_neg@plt>
    c8d4:	mov	w3, w19
    c8d8:	mov	w23, w0
    c8dc:	mov	x2, x27
    c8e0:	mov	x1, x25
    c8e4:	mov	x0, x21
    c8e8:	cbnz	w23, c908 <mpc_mul_karatsuba@@Base+0x8c8>
    c8ec:	bl	4eb0 <mpfr_add@plt>
    c8f0:	mov	w19, w0
    c8f4:	ldr	w1, [sp, #204]
    c8f8:	neg	w23, w1
    c8fc:	b	c3f8 <mpc_mul_karatsuba@@Base+0x3b8>
    c900:	bl	4b40 <mpfr_set_erangeflag@plt>
    c904:	b	c224 <mpc_mul_karatsuba@@Base+0x1e4>
    c908:	bl	4eb0 <mpfr_add@plt>
    c90c:	mov	w19, w0
    c910:	b	c3f8 <mpc_mul_karatsuba@@Base+0x3b8>
    c914:	mov	x0, x21
    c918:	bl	4a50 <mpc_clear@plt>
    c91c:	b	c430 <mpc_mul_karatsuba@@Base+0x3f0>
    c920:	stp	x29, x30, [sp, #-32]!
    c924:	mov	w3, #0x1                   	// #1
    c928:	mov	x5, #0x2                   	// #2
    c92c:	mov	x29, sp
    c930:	stp	x19, x20, [sp, #16]
    c934:	mov	x19, x0
    c938:	ldr	w0, [x1, #8]
    c93c:	ldr	w6, [x1, #40]
    c940:	movk	x5, #0x8000, lsl #48
    c944:	ldr	w4, [x2, #8]
    c948:	cmp	w0, #0x0
    c94c:	ldr	w7, [x2, #40]
    c950:	cneg	w12, w3, lt  // lt = tstop
    c954:	cmp	w6, #0x0
    c958:	ldr	x6, [x1, #16]
    c95c:	cneg	w11, w3, lt  // lt = tstop
    c960:	cmp	w4, #0x0
    c964:	cneg	w4, w3, lt  // lt = tstop
    c968:	cmp	w7, #0x0
    c96c:	cneg	w10, w3, lt  // lt = tstop
    c970:	cmp	x6, x5
    c974:	ldr	x7, [x2, #16]
    c978:	ldr	x8, [x1, #48]
    c97c:	ldr	x9, [x2, #48]
    c980:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    c984:	cmp	x8, x5
    c988:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    c98c:	cmp	x7, x5
    c990:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    c994:	cmp	x9, x5
    c998:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    c99c:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    c9a0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    c9a4:	cmp	x6, x2
    c9a8:	b.eq	caf8 <mpc_mul_karatsuba@@Base+0xab8>  // b.none
    c9ac:	cmp	x9, x0
    c9b0:	b.eq	cab8 <mpc_mul_karatsuba@@Base+0xa78>  // b.none
    c9b4:	cmp	x6, x0
    c9b8:	cset	w5, ne  // ne = any
    c9bc:	cmp	w5, #0x0
    c9c0:	ccmp	x7, x2, #0x0, eq  // eq = none
    c9c4:	b.eq	cc10 <mpc_mul_karatsuba@@Base+0xbd0>  // b.none
    c9c8:	cmp	x7, x2
    c9cc:	b.eq	cba4 <mpc_mul_karatsuba@@Base+0xb64>  // b.none
    c9d0:	mneg	w1, w11, w10
    c9d4:	cmp	x7, x0
    c9d8:	b.eq	cb80 <mpc_mul_karatsuba@@Base+0xb40>  // b.none
    c9dc:	cmp	x9, x2
    c9e0:	cset	w0, ne  // ne = any
    c9e4:	cmp	w5, #0x0
    c9e8:	ccmp	w0, #0x0, #0x0, eq  // eq = none
    c9ec:	b.eq	cb80 <mpc_mul_karatsuba@@Base+0xb40>  // b.none
    c9f0:	mul	w20, w11, w4
    c9f4:	cbz	w0, cb90 <mpc_mul_karatsuba@@Base+0xb50>
    c9f8:	orr	w0, w20, w1
    c9fc:	cbnz	w0, ca6c <mpc_mul_karatsuba@@Base+0xa2c>
    ca00:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    ca04:	add	x0, x6, x2
    ca08:	cmp	x0, #0x1
    ca0c:	add	x5, x8, x2
    ca10:	mov	x2, #0x8000000000000003    	// #-9223372036854775805
    ca14:	ccmp	x6, x2, #0x0, hi  // hi = pmore
    ca18:	cset	w0, eq  // eq = none
    ca1c:	cmp	x5, #0x1
    ca20:	ccmp	x8, x2, #0x0, hi  // hi = pmore
    ca24:	cset	w1, eq  // eq = none
    ca28:	cmp	x9, x2
    ca2c:	cset	w3, eq  // eq = none
    ca30:	cmp	x7, x2
    ca34:	cset	w2, eq  // eq = none
    ca38:	cmp	w2, #0x0
    ca3c:	ccmp	w3, #0x0, #0x0, eq  // eq = none
    ca40:	b.eq	cad8 <mpc_mul_karatsuba@@Base+0xa98>  // b.none
    ca44:	mul	w0, w12, w0
    ca48:	mul	w1, w11, w1
    ca4c:	mul	w5, w0, w4
    ca50:	mul	w20, w1, w4
    ca54:	mul	w0, w0, w10
    ca58:	mul	w1, w1, w10
    ca5c:	mul	w4, w5, w2
    ca60:	mul	w20, w20, w2
    ca64:	madd	w20, w0, w3, w20
    ca68:	msub	w1, w1, w3, w4
    ca6c:	mov	x0, x19
    ca70:	cbz	w1, ca94 <mpc_mul_karatsuba@@Base+0xa54>
    ca74:	bl	5170 <mpfr_set_inf@plt>
    ca78:	add	x0, x19, #0x20
    ca7c:	cbnz	w20, caa0 <mpc_mul_karatsuba@@Base+0xa60>
    ca80:	bl	4a80 <mpfr_set_nan@plt>
    ca84:	mov	w0, #0x0                   	// #0
    ca88:	ldp	x19, x20, [sp, #16]
    ca8c:	ldp	x29, x30, [sp], #32
    ca90:	ret
    ca94:	bl	4a80 <mpfr_set_nan@plt>
    ca98:	add	x0, x19, #0x20
    ca9c:	cbz	w20, ca80 <mpc_mul_karatsuba@@Base+0xa40>
    caa0:	mov	w1, w20
    caa4:	bl	5170 <mpfr_set_inf@plt>
    caa8:	mov	w0, #0x0                   	// #0
    caac:	ldp	x19, x20, [sp, #16]
    cab0:	ldp	x29, x30, [sp], #32
    cab4:	ret
    cab8:	cmp	x7, x9
    cabc:	b.ne	cbfc <mpc_mul_karatsuba@@Base+0xbbc>  // b.any
    cac0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    cac4:	add	x0, x8, x0
    cac8:	cmp	x0, #0x1
    cacc:	mov	w0, #0x0                   	// #0
    cad0:	ccmp	x8, x2, #0x0, hi  // hi = pmore
    cad4:	cset	w1, eq  // eq = none
    cad8:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    cadc:	add	x7, x7, x2
    cae0:	cmp	x7, #0x1
    cae4:	add	x9, x9, x2
    cae8:	cset	w2, hi  // hi = pmore
    caec:	cmp	x9, #0x1
    caf0:	cset	w3, hi  // hi = pmore
    caf4:	b	ca44 <mpc_mul_karatsuba@@Base+0xa04>
    caf8:	cmp	x7, x0
    cafc:	b.eq	cbc4 <mpc_mul_karatsuba@@Base+0xb84>  // b.none
    cb00:	cmp	x8, x6
    cb04:	cset	w2, ne  // ne = any
    cb08:	cmp	w2, #0x0
    cb0c:	ccmp	x9, x0, #0x0, eq  // eq = none
    cb10:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    cb14:	cmp	x9, x6
    cb18:	cset	w1, ne  // ne = any
    cb1c:	cmp	x8, x0
    cb20:	cset	w0, ne  // ne = any
    cb24:	cmp	w1, #0x0
    cb28:	ccmp	w0, #0x0, #0x0, eq  // eq = none
    cb2c:	b.eq	cbe0 <mpc_mul_karatsuba@@Base+0xba0>  // b.none
    cb30:	cmp	w1, #0x0
    cb34:	mul	w1, w12, w4
    cb38:	ccmp	w2, #0x0, #0x4, ne  // ne = any
    cb3c:	b.ne	cb4c <mpc_mul_karatsuba@@Base+0xb0c>  // b.any
    cb40:	mul	w3, w11, w10
    cb44:	cmp	w3, w1
    cb48:	b.eq	cc40 <mpc_mul_karatsuba@@Base+0xc00>  // b.none
    cb4c:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    cb50:	cmp	x9, x3
    cb54:	b.eq	cb80 <mpc_mul_karatsuba@@Base+0xb40>  // b.none
    cb58:	cmp	w0, #0x0
    cb5c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    cb60:	ccmp	x7, x0, #0x0, eq  // eq = none
    cb64:	b.eq	cb80 <mpc_mul_karatsuba@@Base+0xb40>  // b.none
    cb68:	mul	w20, w12, w10
    cb6c:	cbnz	w2, c9f8 <mpc_mul_karatsuba@@Base+0x9b8>
    cb70:	mul	w0, w11, w4
    cb74:	cmp	w0, w20
    cb78:	b.eq	c9f8 <mpc_mul_karatsuba@@Base+0x9b8>  // b.none
    cb7c:	nop
    cb80:	mov	w0, w1
    cb84:	mov	w20, #0x0                   	// #0
    cb88:	cbnz	w0, ca6c <mpc_mul_karatsuba@@Base+0xa2c>
    cb8c:	b	ca00 <mpc_mul_karatsuba@@Base+0x9c0>
    cb90:	mul	w0, w12, w10
    cb94:	cmp	w0, w20
    cb98:	b.ne	cb80 <mpc_mul_karatsuba@@Base+0xb40>  // b.any
    cb9c:	orr	w0, w20, w1
    cba0:	b	c9fc <mpc_mul_karatsuba@@Base+0x9bc>
    cba4:	mul	w0, w12, w4
    cba8:	mul	w1, w11, w10
    cbac:	cmp	w0, w1
    cbb0:	b.eq	cbfc <mpc_mul_karatsuba@@Base+0xbbc>  // b.none
    cbb4:	cmp	x9, x7
    cbb8:	mneg	w1, w11, w10
    cbbc:	cset	w0, ne  // ne = any
    cbc0:	b	c9f0 <mpc_mul_karatsuba@@Base+0x9b0>
    cbc4:	cmp	x9, x7
    cbc8:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    cbcc:	cmp	x8, x6
    cbd0:	cset	w2, ne  // ne = any
    cbd4:	cmp	w2, #0x0
    cbd8:	ccmp	x7, x7, #0x0, eq  // eq = none
    cbdc:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    cbe0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    cbe4:	cmp	x7, x0
    cbe8:	mov	w1, #0x0                   	// #0
    cbec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    cbf0:	ccmp	x8, x0, #0x0, eq  // eq = none
    cbf4:	b.ne	cb68 <mpc_mul_karatsuba@@Base+0xb28>  // b.any
    cbf8:	b	ca00 <mpc_mul_karatsuba@@Base+0x9c0>
    cbfc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    cc00:	cmp	x9, x0
    cc04:	cset	w0, ne  // ne = any
    cc08:	mov	w1, #0x0                   	// #0
    cc0c:	b	c9f0 <mpc_mul_karatsuba@@Base+0x9b0>
    cc10:	cmp	x9, x2
    cc14:	mov	w1, #0x0                   	// #0
    cc18:	cset	w0, ne  // ne = any
    cc1c:	b.ne	c9f0 <mpc_mul_karatsuba@@Base+0x9b0>  // b.any
    cc20:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    cc24:	add	x0, x8, x0
    cc28:	cmp	x0, #0x1
    cc2c:	mov	w2, w3
    cc30:	ccmp	x8, x9, #0x0, hi  // hi = pmore
    cc34:	mov	w0, #0x0                   	// #0
    cc38:	cset	w1, eq  // eq = none
    cc3c:	b	ca44 <mpc_mul_karatsuba@@Base+0xa04>
    cc40:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    cc44:	cmp	x9, x0
    cc48:	b.eq	ca00 <mpc_mul_karatsuba@@Base+0x9c0>  // b.none
    cc4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    cc50:	cmp	x8, x0
    cc54:	cset	w2, ne  // ne = any
    cc58:	b	cbe0 <mpc_mul_karatsuba@@Base+0xba0>
    cc5c:	nop
    cc60:	stp	x29, x30, [sp, #-80]!
    cc64:	mov	x29, sp
    cc68:	ldr	w7, [x1, #8]
    cc6c:	ldr	w6, [x1, #40]
    cc70:	cmp	w7, #0x0
    cc74:	ldr	w5, [x2, #8]
    cc78:	ldr	w4, [x2, #40]
    cc7c:	stp	x19, x20, [sp, #16]
    cc80:	mov	w19, #0x1                   	// #1
    cc84:	mov	x20, x0
    cc88:	stp	x25, x26, [sp, #64]
    cc8c:	cneg	w25, w19, lt  // lt = tstop
    cc90:	cmp	w6, #0x0
    cc94:	stp	x23, x24, [sp, #48]
    cc98:	cneg	w24, w19, lt  // lt = tstop
    cc9c:	cmp	w5, #0x0
    cca0:	cneg	w23, w19, lt  // lt = tstop
    cca4:	cmp	w4, #0x0
    cca8:	cneg	w26, w19, lt  // lt = tstop
    ccac:	stp	x21, x22, [sp, #32]
    ccb0:	mov	w21, w3
    ccb4:	bl	51b0 <mpc_mul_fr@plt>
    ccb8:	mov	w22, w0
    ccbc:	ldr	x1, [x20, #16]
    ccc0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ccc4:	cmp	x1, x0
    ccc8:	b.eq	ccf8 <mpc_mul_karatsuba@@Base+0xcb8>  // b.none
    cccc:	ldr	x1, [x20, #48]
    ccd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ccd4:	cmp	x1, x0
    ccd8:	b.eq	cd34 <mpc_mul_karatsuba@@Base+0xcf4>  // b.none
    ccdc:	mov	w0, w22
    cce0:	ldp	x19, x20, [sp, #16]
    cce4:	ldp	x21, x22, [sp, #32]
    cce8:	ldp	x23, x24, [sp, #48]
    ccec:	ldp	x25, x26, [sp, #64]
    ccf0:	ldp	x29, x30, [sp], #80
    ccf4:	ret
    ccf8:	and	w0, w21, #0xf
    ccfc:	mov	w3, #0xffffffff            	// #-1
    cd00:	cmp	w0, #0x3
    cd04:	b.eq	cd14 <mpc_mul_karatsuba@@Base+0xcd4>  // b.none
    cd08:	cmp	w25, w23
    cd0c:	ccmp	w24, w26, #0x0, ne  // ne = any
    cd10:	cneg	w3, w19, eq  // eq = none
    cd14:	mov	x1, x20
    cd18:	mov	x0, x20
    cd1c:	mov	w2, #0x0                   	// #0
    cd20:	bl	5220 <mpfr_set4@plt>
    cd24:	ldr	x1, [x20, #48]
    cd28:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    cd2c:	cmp	x1, x0
    cd30:	b.ne	ccdc <mpc_mul_karatsuba@@Base+0xc9c>  // b.any
    cd34:	asr	w21, w21, #4
    cd38:	add	x1, x20, #0x20
    cd3c:	cmp	w21, #0x3
    cd40:	mov	w3, #0xffffffff            	// #-1
    cd44:	b.eq	cd58 <mpc_mul_karatsuba@@Base+0xd18>  // b.none
    cd48:	cmp	w25, w26
    cd4c:	mov	w3, #0x1                   	// #1
    cd50:	ccmp	w24, w23, #0x4, ne  // ne = any
    cd54:	cneg	w3, w3, ne  // ne = any
    cd58:	mov	x0, x1
    cd5c:	mov	w2, #0x0                   	// #0
    cd60:	bl	5220 <mpfr_set4@plt>
    cd64:	mov	w0, w22
    cd68:	ldp	x19, x20, [sp, #16]
    cd6c:	ldp	x21, x22, [sp, #32]
    cd70:	ldp	x23, x24, [sp, #48]
    cd74:	ldp	x25, x26, [sp, #64]
    cd78:	ldp	x29, x30, [sp], #80
    cd7c:	ret

000000000000cd80 <mpc_mul@@Base>:
    cd80:	stp	x29, x30, [sp, #-32]!
    cd84:	mov	x6, #0x8000000000000003    	// #-9223372036854775805
    cd88:	mov	x4, x1
    cd8c:	mov	x29, sp
    cd90:	ldr	x7, [x1, #16]
    cd94:	str	x19, [sp, #16]
    cd98:	mov	x5, x2
    cd9c:	mov	x19, x0
    cda0:	cmp	x7, x6
    cda4:	b.eq	ce24 <mpc_mul@@Base+0xa4>  // b.none
    cda8:	ldr	x9, [x1, #48]
    cdac:	cmp	x9, x6
    cdb0:	b.eq	ce24 <mpc_mul@@Base+0xa4>  // b.none
    cdb4:	ldr	x8, [x2, #16]
    cdb8:	cmp	x8, x6
    cdbc:	b.eq	ce0c <mpc_mul@@Base+0x8c>  // b.none
    cdc0:	ldr	x10, [x2, #48]
    cdc4:	cmp	x10, x6
    cdc8:	b.eq	ce0c <mpc_mul@@Base+0x8c>  // b.none
    cdcc:	mov	x6, #0x2                   	// #2
    cdd0:	movk	x6, #0x8000, lsl #48
    cdd4:	cmp	x10, x6
    cdd8:	ccmp	x8, x6, #0x4, ne  // ne = any
    cddc:	cset	w12, eq  // eq = none
    cde0:	cmp	x7, x6
    cde4:	ccmp	x9, x6, #0x4, ne  // ne = any
    cde8:	csinc	w6, w12, wzr, ne  // ne = any
    cdec:	cbz	w6, ce3c <mpc_mul@@Base+0xbc>
    cdf0:	bl	4a80 <mpfr_set_nan@plt>
    cdf4:	add	x0, x19, #0x20
    cdf8:	bl	4a80 <mpfr_set_nan@plt>
    cdfc:	mov	w0, #0x0                   	// #0
    ce00:	ldr	x19, [sp, #16]
    ce04:	ldp	x29, x30, [sp], #32
    ce08:	ret
    ce0c:	mov	x0, x19
    ce10:	mov	x2, x4
    ce14:	ldr	x19, [sp, #16]
    ce18:	mov	x1, x5
    ce1c:	ldp	x29, x30, [sp], #32
    ce20:	b	c920 <mpc_mul_karatsuba@@Base+0x8e0>
    ce24:	mov	x0, x19
    ce28:	mov	x2, x5
    ce2c:	ldr	x19, [sp, #16]
    ce30:	mov	x1, x4
    ce34:	ldp	x29, x30, [sp], #32
    ce38:	b	c920 <mpc_mul_karatsuba@@Base+0x8e0>
    ce3c:	mov	x6, #0x8000000000000001    	// #-9223372036854775807
    ce40:	cmp	x9, x6
    ce44:	b.eq	cf1c <mpc_mul@@Base+0x19c>  // b.none
    ce48:	cmp	x10, x6
    ce4c:	b.eq	cf30 <mpc_mul@@Base+0x1b0>  // b.none
    ce50:	cmp	x7, x6
    ce54:	b.eq	cf3c <mpc_mul@@Base+0x1bc>  // b.none
    ce58:	cmp	x8, x6
    ce5c:	b.eq	cf50 <mpc_mul@@Base+0x1d0>  // b.none
    ce60:	ldr	x1, [x1]
    ce64:	subs	x7, x7, x9
    ce68:	ldr	x0, [x4, #32]
    ce6c:	cneg	x7, x7, mi  // mi = first
    ce70:	mov	w11, w3
    ce74:	cmp	x0, x1
    ce78:	csel	x0, x0, x1, ge  // ge = tcont
    ce7c:	add	x0, x0, x0, lsr #63
    ce80:	cmp	x7, x0, asr #1
    ce84:	b.gt	cf00 <mpc_mul@@Base+0x180>
    ce88:	ldr	x1, [x2]
    ce8c:	subs	x8, x8, x10
    ce90:	ldr	x0, [x2, #32]
    ce94:	cneg	x8, x8, mi  // mi = first
    ce98:	cmp	x0, x1
    ce9c:	csel	x0, x0, x1, ge  // ge = tcont
    cea0:	add	x0, x0, x0, lsr #63
    cea4:	cmp	x8, x0, asr #1
    cea8:	b.gt	cf00 <mpc_mul@@Base+0x180>
    ceac:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ceb0:	mov	w10, #0x17                  	// #23
    ceb4:	ldr	x9, [x19]
    ceb8:	adrp	x6, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    cebc:	ldr	x0, [x0, #4056]
    cec0:	adrp	x7, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    cec4:	ldr	x5, [x19, #32]
    cec8:	mov	x1, x4
    cecc:	ldr	w8, [x0]
    ced0:	mov	x0, x19
    ced4:	ldr	x19, [sp, #16]
    ced8:	cmp	x5, x9
    cedc:	ldp	x29, x30, [sp], #32
    cee0:	smull	x8, w8, w10
    cee4:	ldr	x7, [x7, #4016]
    cee8:	csel	x5, x5, x9, ge  // ge = tcont
    ceec:	ldr	x4, [x6, #4032]
    cef0:	cmp	x5, x8
    cef4:	csel	x4, x4, x7, le
    cef8:	mov	x16, x4
    cefc:	br	x16
    cf00:	mov	x0, x19
    cf04:	mov	w3, w11
    cf08:	ldr	x19, [sp, #16]
    cf0c:	mov	x2, x5
    cf10:	ldp	x29, x30, [sp], #32
    cf14:	mov	x1, x4
    cf18:	b	4f00 <mpc_mul_naive@plt>
    cf1c:	ldr	x19, [sp, #16]
    cf20:	mov	x2, x1
    cf24:	ldp	x29, x30, [sp], #32
    cf28:	mov	x1, x5
    cf2c:	b	cc60 <mpc_mul_karatsuba@@Base+0xc20>
    cf30:	ldr	x19, [sp, #16]
    cf34:	ldp	x29, x30, [sp], #32
    cf38:	b	cc60 <mpc_mul_karatsuba@@Base+0xc20>
    cf3c:	ldr	x19, [sp, #16]
    cf40:	mov	x2, x1
    cf44:	ldp	x29, x30, [sp], #32
    cf48:	mov	x1, x5
    cf4c:	b	be80 <mpc_mul_naive@@Base+0x1f8>
    cf50:	ldr	x19, [sp, #16]
    cf54:	ldp	x29, x30, [sp], #32
    cf58:	b	be80 <mpc_mul_naive@@Base+0x1f8>
    cf5c:	nop

000000000000cf60 <mpc_mul_fr@@Base>:
    cf60:	stp	x29, x30, [sp, #-128]!
    cf64:	mov	w4, w3
    cf68:	cmp	x0, x2
    cf6c:	mov	x29, sp
    cf70:	stp	x19, x20, [sp, #16]
    cf74:	and	w3, w3, #0xf
    cf78:	mov	x19, x0
    cf7c:	stp	x21, x22, [sp, #32]
    cf80:	asr	w20, w4, #4
    cf84:	stp	x23, x24, [sp, #48]
    cf88:	add	x24, x0, #0x20
    cf8c:	str	x25, [sp, #64]
    cf90:	add	x25, x1, #0x20
    cf94:	b.eq	d024 <mpc_mul_fr@@Base+0xc4>  // b.none
    cf98:	ldp	x4, x5, [x0]
    cf9c:	add	x23, sp, #0x60
    cfa0:	ldp	x6, x7, [x19, #16]
    cfa4:	mov	x22, x2
    cfa8:	mov	x0, x23
    cfac:	stp	x4, x5, [sp, #96]
    cfb0:	stp	x6, x7, [sp, #112]
    cfb4:	bl	4bb0 <mpfr_mul@plt>
    cfb8:	mov	w21, w0
    cfbc:	mov	w3, w20
    cfc0:	mov	x2, x22
    cfc4:	mov	x1, x25
    cfc8:	mov	x0, x24
    cfcc:	bl	4bb0 <mpfr_mul@plt>
    cfd0:	mov	w20, w0
    cfd4:	ldr	w3, [sp, #104]
    cfd8:	mov	x1, x23
    cfdc:	mov	x0, x19
    cfe0:	mov	w2, #0x0                   	// #0
    cfe4:	bl	5220 <mpfr_set4@plt>
    cfe8:	cmp	w21, #0x0
    cfec:	mov	w0, #0x2                   	// #2
    cff0:	cset	w1, ne  // ne = any
    cff4:	csel	w0, w1, w0, ge  // ge = tcont
    cff8:	cmp	w20, #0x0
    cffc:	orr	w1, w0, #0x4
    d000:	csel	w1, w1, w0, ne  // ne = any
    d004:	orr	w0, w0, #0x8
    d008:	csel	w0, w1, w0, ge  // ge = tcont
    d00c:	ldp	x19, x20, [sp, #16]
    d010:	ldp	x21, x22, [sp, #32]
    d014:	ldp	x23, x24, [sp, #48]
    d018:	ldr	x25, [sp, #64]
    d01c:	ldp	x29, x30, [sp], #128
    d020:	ret
    d024:	mov	x21, x1
    d028:	add	x22, sp, #0x60
    d02c:	ldr	x1, [x19]
    d030:	mov	x0, x22
    d034:	str	w3, [sp, #92]
    d038:	bl	5490 <mpfr_init2@plt>
    d03c:	ldr	w3, [sp, #92]
    d040:	mov	x2, x19
    d044:	mov	x1, x21
    d048:	mov	x0, x22
    d04c:	bl	4bb0 <mpfr_mul@plt>
    d050:	mov	w21, w0
    d054:	mov	w3, w20
    d058:	mov	x1, x25
    d05c:	mov	x2, x19
    d060:	mov	x0, x24
    d064:	bl	4bb0 <mpfr_mul@plt>
    d068:	mov	w20, w0
    d06c:	ldr	w3, [sp, #104]
    d070:	mov	x1, x22
    d074:	mov	w2, #0x0                   	// #0
    d078:	mov	x0, x19
    d07c:	bl	5220 <mpfr_set4@plt>
    d080:	mov	x0, x22
    d084:	bl	4db0 <mpfr_clear@plt>
    d088:	b	cfe8 <mpc_mul_fr@@Base+0x88>
    d08c:	nop

000000000000d090 <mpc_mul_i@@Base>:
    d090:	stp	x29, x30, [sp, #-112]!
    d094:	mov	x29, sp
    d098:	stp	x19, x20, [sp, #16]
    d09c:	mov	x20, x1
    d0a0:	mov	x19, x0
    d0a4:	stp	x21, x22, [sp, #32]
    d0a8:	mov	w22, w2
    d0ac:	ldr	x2, [x1]
    d0b0:	stp	x23, x24, [sp, #48]
    d0b4:	add	x23, x0, #0x20
    d0b8:	ldr	x1, [x0, #32]
    d0bc:	cmp	x2, x1
    d0c0:	b.eq	d168 <mpc_mul_i@@Base+0xd8>  // b.none
    d0c4:	cmp	x20, x19
    d0c8:	add	x24, x20, #0x20
    d0cc:	and	w2, w3, #0xf
    d0d0:	asr	w21, w3, #4
    d0d4:	b.eq	d1c0 <mpc_mul_i@@Base+0x130>  // b.none
    d0d8:	tbnz	w22, #31, d13c <mpc_mul_i@@Base+0xac>
    d0dc:	mov	x1, x24
    d0e0:	mov	x0, x19
    d0e4:	bl	4bc0 <mpfr_neg@plt>
    d0e8:	mov	w22, w0
    d0ec:	ldr	w3, [x20, #8]
    d0f0:	mov	x1, x20
    d0f4:	mov	w2, w21
    d0f8:	mov	x0, x23
    d0fc:	bl	5220 <mpfr_set4@plt>
    d100:	mov	w20, w0
    d104:	cmp	w22, #0x0
    d108:	mov	w0, #0x2                   	// #2
    d10c:	cset	w1, ne  // ne = any
    d110:	csel	w0, w1, w0, ge  // ge = tcont
    d114:	cmp	w20, #0x0
    d118:	orr	w1, w0, #0x4
    d11c:	csel	w1, w1, w0, ne  // ne = any
    d120:	orr	w0, w0, #0x8
    d124:	csel	w0, w1, w0, ge  // ge = tcont
    d128:	ldp	x19, x20, [sp, #16]
    d12c:	ldp	x21, x22, [sp, #32]
    d130:	ldp	x23, x24, [sp, #48]
    d134:	ldp	x29, x30, [sp], #112
    d138:	ret
    d13c:	ldr	w3, [x20, #40]
    d140:	mov	x1, x24
    d144:	mov	x0, x19
    d148:	bl	5220 <mpfr_set4@plt>
    d14c:	mov	w22, w0
    d150:	mov	x1, x20
    d154:	mov	w2, w21
    d158:	mov	x0, x23
    d15c:	bl	4bc0 <mpfr_neg@plt>
    d160:	mov	w20, w0
    d164:	b	d104 <mpc_mul_i@@Base+0x74>
    d168:	ldr	x1, [x0]
    d16c:	ldr	x2, [x20, #32]
    d170:	cmp	x2, x1
    d174:	b.ne	d0c4 <mpc_mul_i@@Base+0x34>  // b.any
    d178:	cmp	x20, x0
    d17c:	b.eq	d260 <mpc_mul_i@@Base+0x1d0>  // b.none
    d180:	ldr	w3, [x20, #40]
    d184:	add	x1, x20, #0x20
    d188:	mov	w2, #0x0                   	// #0
    d18c:	bl	5220 <mpfr_set4@plt>
    d190:	ldr	w3, [x20, #8]
    d194:	mov	x1, x20
    d198:	mov	x0, x23
    d19c:	mov	w2, #0x0                   	// #0
    d1a0:	bl	5220 <mpfr_set4@plt>
    d1a4:	mov	w2, #0x0                   	// #0
    d1a8:	tbnz	w22, #31, d24c <mpc_mul_i@@Base+0x1bc>
    d1ac:	mov	x1, x19
    d1b0:	mov	x0, x19
    d1b4:	bl	4bc0 <mpfr_neg@plt>
    d1b8:	mov	w0, #0x0                   	// #0
    d1bc:	b	d128 <mpc_mul_i@@Base+0x98>
    d1c0:	ldr	x1, [x19]
    d1c4:	add	x20, sp, #0x50
    d1c8:	mov	x0, x20
    d1cc:	str	w2, [sp, #76]
    d1d0:	bl	5490 <mpfr_init2@plt>
    d1d4:	ldr	w2, [sp, #76]
    d1d8:	tbnz	w22, #31, d220 <mpc_mul_i@@Base+0x190>
    d1dc:	mov	x1, x24
    d1e0:	mov	x0, x20
    d1e4:	bl	4bc0 <mpfr_neg@plt>
    d1e8:	mov	w22, w0
    d1ec:	ldr	w3, [x19, #8]
    d1f0:	mov	w2, w21
    d1f4:	mov	x0, x23
    d1f8:	mov	x1, x19
    d1fc:	bl	5220 <mpfr_set4@plt>
    d200:	mov	w20, w0
    d204:	mov	x0, x19
    d208:	bl	4db0 <mpfr_clear@plt>
    d20c:	ldp	x0, x1, [sp, #80]
    d210:	stp	x0, x1, [x19]
    d214:	ldp	x0, x1, [sp, #96]
    d218:	stp	x0, x1, [x19, #16]
    d21c:	b	d104 <mpc_mul_i@@Base+0x74>
    d220:	ldr	w3, [x19, #40]
    d224:	mov	x1, x24
    d228:	mov	x0, x20
    d22c:	bl	5220 <mpfr_set4@plt>
    d230:	mov	w22, w0
    d234:	mov	w2, w21
    d238:	mov	x0, x23
    d23c:	mov	x1, x19
    d240:	bl	4bc0 <mpfr_neg@plt>
    d244:	mov	w20, w0
    d248:	b	d204 <mpc_mul_i@@Base+0x174>
    d24c:	mov	x1, x23
    d250:	mov	x0, x23
    d254:	bl	4bc0 <mpfr_neg@plt>
    d258:	mov	w0, #0x0                   	// #0
    d25c:	b	d128 <mpc_mul_i@@Base+0x98>
    d260:	mov	x1, x23
    d264:	bl	50e0 <mpfr_swap@plt>
    d268:	b	d1a4 <mpc_mul_i@@Base+0x114>
    d26c:	nop

000000000000d270 <mpc_mul_si@@Base>:
    d270:	stp	x29, x30, [sp, #-64]!
    d274:	mov	x29, sp
    d278:	stp	x19, x20, [sp, #16]
    d27c:	mov	w20, w3
    d280:	and	w3, w3, #0xf
    d284:	stp	x21, x22, [sp, #32]
    d288:	mov	x21, x0
    d28c:	mov	x22, x1
    d290:	str	x23, [sp, #48]
    d294:	mov	x23, x2
    d298:	bl	53b0 <mpfr_mul_si@plt>
    d29c:	mov	w19, w0
    d2a0:	asr	w3, w20, #4
    d2a4:	mov	x2, x23
    d2a8:	add	x1, x22, #0x20
    d2ac:	add	x0, x21, #0x20
    d2b0:	bl	53b0 <mpfr_mul_si@plt>
    d2b4:	cmp	w19, #0x0
    d2b8:	mov	w2, #0x2                   	// #2
    d2bc:	cset	w1, ne  // ne = any
    d2c0:	csel	w1, w1, w2, ge  // ge = tcont
    d2c4:	cmp	w0, #0x0
    d2c8:	orr	w3, w1, #0x4
    d2cc:	orr	w2, w1, #0x8
    d2d0:	csel	w1, w3, w1, ne  // ne = any
    d2d4:	csel	w1, w1, w2, ge  // ge = tcont
    d2d8:	mov	w0, w1
    d2dc:	ldp	x19, x20, [sp, #16]
    d2e0:	ldp	x21, x22, [sp, #32]
    d2e4:	ldr	x23, [sp, #48]
    d2e8:	ldp	x29, x30, [sp], #64
    d2ec:	ret

000000000000d2f0 <mpc_mul_ui@@Base>:
    d2f0:	stp	x29, x30, [sp, #-64]!
    d2f4:	mov	x29, sp
    d2f8:	stp	x19, x20, [sp, #16]
    d2fc:	mov	w20, w3
    d300:	and	w3, w3, #0xf
    d304:	stp	x21, x22, [sp, #32]
    d308:	mov	x21, x0
    d30c:	mov	x22, x1
    d310:	str	x23, [sp, #48]
    d314:	mov	x23, x2
    d318:	bl	4a00 <mpfr_mul_ui@plt>
    d31c:	mov	w19, w0
    d320:	asr	w3, w20, #4
    d324:	mov	x2, x23
    d328:	add	x1, x22, #0x20
    d32c:	add	x0, x21, #0x20
    d330:	bl	4a00 <mpfr_mul_ui@plt>
    d334:	cmp	w19, #0x0
    d338:	mov	w2, #0x2                   	// #2
    d33c:	cset	w1, ne  // ne = any
    d340:	csel	w1, w1, w2, ge  // ge = tcont
    d344:	cmp	w0, #0x0
    d348:	orr	w3, w1, #0x4
    d34c:	orr	w2, w1, #0x8
    d350:	csel	w1, w3, w1, ne  // ne = any
    d354:	csel	w1, w1, w2, ge  // ge = tcont
    d358:	mov	w0, w1
    d35c:	ldp	x19, x20, [sp, #16]
    d360:	ldp	x21, x22, [sp, #32]
    d364:	ldr	x23, [sp, #48]
    d368:	ldp	x29, x30, [sp], #64
    d36c:	ret

000000000000d370 <mpc_neg@@Base>:
    d370:	stp	x29, x30, [sp, #-48]!
    d374:	mov	x29, sp
    d378:	stp	x19, x20, [sp, #16]
    d37c:	mov	w20, w2
    d380:	and	w2, w2, #0xf
    d384:	stp	x21, x22, [sp, #32]
    d388:	mov	x21, x0
    d38c:	mov	x22, x1
    d390:	bl	4bc0 <mpfr_neg@plt>
    d394:	mov	w19, w0
    d398:	asr	w2, w20, #4
    d39c:	add	x1, x22, #0x20
    d3a0:	add	x0, x21, #0x20
    d3a4:	bl	4bc0 <mpfr_neg@plt>
    d3a8:	cmp	w19, #0x0
    d3ac:	mov	w2, #0x2                   	// #2
    d3b0:	cset	w1, ne  // ne = any
    d3b4:	csel	w1, w1, w2, ge  // ge = tcont
    d3b8:	cmp	w0, #0x0
    d3bc:	orr	w2, w1, #0x4
    d3c0:	csel	w2, w2, w1, ne  // ne = any
    d3c4:	orr	w1, w1, #0x8
    d3c8:	csel	w1, w2, w1, ge  // ge = tcont
    d3cc:	mov	w0, w1
    d3d0:	ldp	x19, x20, [sp, #16]
    d3d4:	ldp	x21, x22, [sp, #32]
    d3d8:	ldp	x29, x30, [sp], #48
    d3dc:	ret

000000000000d3e0 <mpc_norm@@Base>:
    d3e0:	stp	x29, x30, [sp, #-208]!
    d3e4:	mov	x29, sp
    d3e8:	stp	x19, x20, [sp, #16]
    d3ec:	mov	x19, x1
    d3f0:	stp	x25, x26, [sp, #64]
    d3f4:	mov	x25, x0
    d3f8:	mov	w26, w2
    d3fc:	mov	x0, x1
    d400:	bl	5520 <mpfr_number_p@plt>
    d404:	cbz	w0, d550 <mpc_norm@@Base+0x170>
    d408:	add	x0, x19, #0x20
    d40c:	str	x0, [sp, #96]
    d410:	bl	5520 <mpfr_number_p@plt>
    d414:	cbz	w0, d550 <mpc_norm@@Base+0x170>
    d418:	ldr	x1, [x19, #16]
    d41c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d420:	ldr	x2, [x19, #48]
    d424:	cmp	x1, x0
    d428:	b.eq	d778 <mpc_norm@@Base+0x398>  // b.none
    d42c:	cmp	x2, x0
    d430:	b.eq	d7ac <mpc_norm@@Base+0x3cc>  // b.none
    d434:	stp	x23, x24, [sp, #48]
    d438:	add	x24, sp, #0x70
    d43c:	mov	x0, x24
    d440:	add	x23, sp, #0x90
    d444:	stp	x21, x22, [sp, #32]
    d448:	add	x22, sp, #0xb0
    d44c:	stp	x27, x28, [sp, #80]
    d450:	mov	w27, #0x0                   	// #0
    d454:	ldr	x28, [x25]
    d458:	bl	4ae0 <mpfr_init@plt>
    d45c:	mov	x0, x23
    d460:	bl	4ae0 <mpfr_init@plt>
    d464:	mov	x0, x22
    d468:	bl	4ae0 <mpfr_init@plt>
    d46c:	bl	5340 <mpfr_underflow_p@plt>
    d470:	str	w0, [sp, #104]
    d474:	bl	5530 <mpfr_overflow_p@plt>
    d478:	str	w0, [sp, #108]
    d47c:	bl	4e70 <mpfr_clear_underflow@plt>
    d480:	bl	4a90 <mpfr_clear_overflow@plt>
    d484:	nop
    d488:	mov	x0, x28
    d48c:	bl	4d70 <mpc_ceil_log2@plt>
    d490:	ldr	x20, [x19]
    d494:	add	x0, x0, #0x3
    d498:	add	x28, x28, x0
    d49c:	mov	x0, x24
    d4a0:	ldr	x21, [x19, #32]
    d4a4:	lsl	x20, x20, #1
    d4a8:	cbz	w27, d5d4 <mpc_norm@@Base+0x1f4>
    d4ac:	mov	x1, x20
    d4b0:	lsl	x21, x21, #1
    d4b4:	bl	4cd0 <mpfr_set_prec@plt>
    d4b8:	mov	x1, x21
    d4bc:	mov	x0, x23
    d4c0:	bl	4cd0 <mpfr_set_prec@plt>
    d4c4:	mov	x1, x19
    d4c8:	mov	w2, #0x3                   	// #3
    d4cc:	mov	x0, x24
    d4d0:	bl	5060 <mpfr_sqr@plt>
    d4d4:	ldr	x1, [sp, #96]
    d4d8:	mov	w27, w0
    d4dc:	mov	w2, #0x3                   	// #3
    d4e0:	mov	x0, x23
    d4e4:	bl	5060 <mpfr_sqr@plt>
    d4e8:	orr	w27, w27, w0
    d4ec:	cbnz	w27, d578 <mpc_norm@@Base+0x198>
    d4f0:	mov	w3, w26
    d4f4:	mov	x0, x25
    d4f8:	mov	x2, x23
    d4fc:	mov	x1, x24
    d500:	bl	4eb0 <mpfr_add@plt>
    d504:	mov	w19, w0
    d508:	ldr	w0, [sp, #104]
    d50c:	cbnz	w0, d67c <mpc_norm@@Base+0x29c>
    d510:	ldr	w0, [sp, #108]
    d514:	cbnz	w0, d674 <mpc_norm@@Base+0x294>
    d518:	mov	x0, x24
    d51c:	bl	4db0 <mpfr_clear@plt>
    d520:	mov	x0, x23
    d524:	bl	4db0 <mpfr_clear@plt>
    d528:	mov	x0, x22
    d52c:	bl	4db0 <mpfr_clear@plt>
    d530:	mov	w0, w19
    d534:	ldp	x19, x20, [sp, #16]
    d538:	ldp	x21, x22, [sp, #32]
    d53c:	ldp	x23, x24, [sp, #48]
    d540:	ldp	x25, x26, [sp, #64]
    d544:	ldp	x27, x28, [sp, #80]
    d548:	ldp	x29, x30, [sp], #208
    d54c:	ret
    d550:	mov	x1, x19
    d554:	mov	w2, w26
    d558:	mov	x0, x25
    d55c:	bl	51f0 <mpc_abs@plt>
    d560:	mov	w19, w0
    d564:	mov	w0, w19
    d568:	ldp	x19, x20, [sp, #16]
    d56c:	ldp	x25, x26, [sp, #64]
    d570:	ldp	x29, x30, [sp], #208
    d574:	ret
    d578:	mov	x1, x28
    d57c:	mov	x0, x22
    d580:	bl	4cd0 <mpfr_set_prec@plt>
    d584:	mov	x2, x23
    d588:	mov	x1, x24
    d58c:	mov	x0, x22
    d590:	mov	w3, #0x3                   	// #3
    d594:	bl	4eb0 <mpfr_add@plt>
    d598:	bl	5530 <mpfr_overflow_p@plt>
    d59c:	cbz	w0, d684 <mpc_norm@@Base+0x2a4>
    d5a0:	mov	w3, #0x0                   	// #0
    d5a4:	mov	x2, #0x0                   	// #0
    d5a8:	mov	x1, #0x1                   	// #1
    d5ac:	mov	x0, x25
    d5b0:	bl	5180 <mpfr_set_ui_2exp@plt>
    d5b4:	bl	5250 <mpfr_get_emax@plt>
    d5b8:	mov	x2, x0
    d5bc:	mov	w3, w26
    d5c0:	mov	x1, x25
    d5c4:	mov	x0, x25
    d5c8:	bl	4f90 <mpfr_mul_2ui@plt>
    d5cc:	mov	w19, w0
    d5d0:	b	d508 <mpc_norm@@Base+0x128>
    d5d4:	cmp	x20, x28
    d5d8:	lsl	x21, x21, #1
    d5dc:	csel	x20, x20, x28, le
    d5e0:	cmp	x21, x28
    d5e4:	csel	x21, x21, x28, le
    d5e8:	mov	x1, x20
    d5ec:	bl	4cd0 <mpfr_set_prec@plt>
    d5f0:	mov	x1, x21
    d5f4:	mov	x0, x23
    d5f8:	bl	4cd0 <mpfr_set_prec@plt>
    d5fc:	mov	x1, x19
    d600:	mov	w2, #0x3                   	// #3
    d604:	mov	x0, x24
    d608:	bl	5060 <mpfr_sqr@plt>
    d60c:	ldr	x1, [sp, #96]
    d610:	mov	w27, w0
    d614:	mov	w2, #0x3                   	// #3
    d618:	mov	x0, x23
    d61c:	bl	5060 <mpfr_sqr@plt>
    d620:	orr	w0, w0, w27
    d624:	cbz	w0, d4f0 <mpc_norm@@Base+0x110>
    d628:	mov	x1, x28
    d62c:	mov	x0, x22
    d630:	bl	4cd0 <mpfr_set_prec@plt>
    d634:	mov	w27, #0x1                   	// #1
    d638:	mov	x2, x23
    d63c:	mov	x1, x24
    d640:	mov	w3, #0x3                   	// #3
    d644:	mov	x0, x22
    d648:	bl	4eb0 <mpfr_add@plt>
    d64c:	cmp	w26, #0x0
    d650:	sub	x1, x28, #0x2
    d654:	ldr	x4, [x25]
    d658:	mov	x0, x22
    d65c:	mov	w3, #0x2                   	// #2
    d660:	mov	w2, #0x3                   	// #3
    d664:	cinc	x4, x4, eq  // eq = none
    d668:	bl	54a0 <mpfr_can_round@plt>
    d66c:	cbz	w0, d488 <mpc_norm@@Base+0xa8>
    d670:	b	d598 <mpc_norm@@Base+0x1b8>
    d674:	bl	54e0 <mpfr_set_overflow@plt>
    d678:	b	d518 <mpc_norm@@Base+0x138>
    d67c:	bl	49d0 <mpfr_set_underflow@plt>
    d680:	b	d510 <mpc_norm@@Base+0x130>
    d684:	bl	5340 <mpfr_underflow_p@plt>
    d688:	cbz	w0, d7c4 <mpc_norm@@Base+0x3e4>
    d68c:	bl	50b0 <mpfr_get_emin@plt>
    d690:	mov	x27, x0
    d694:	ldr	x2, [sp, #128]
    d698:	cmn	x2, #0x9
    d69c:	b.lt	d6ac <mpc_norm@@Base+0x2cc>  // b.tstop
    d6a0:	sub	x20, x2, x20, lsl #1
    d6a4:	cmp	x20, x0
    d6a8:	b.gt	d828 <mpc_norm@@Base+0x448>
    d6ac:	ldr	x0, [sp, #160]
    d6b0:	cmn	x0, #0x9
    d6b4:	b.lt	d6c4 <mpc_norm@@Base+0x2e4>  // b.tstop
    d6b8:	sub	x0, x0, x21, lsl #1
    d6bc:	cmp	x0, x27
    d6c0:	b.gt	d864 <mpc_norm@@Base+0x484>
    d6c4:	ldr	x1, [x19, #48]
    d6c8:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
    d6cc:	ldr	x0, [x19, #16]
    d6d0:	neg	x3, x1
    d6d4:	cmp	x2, x4
    d6d8:	and	x1, x1, #0x1
    d6dc:	neg	x2, x0
    d6e0:	and	x21, x0, #0x1
    d6e4:	add	x21, x21, x1
    d6e8:	lsr	x0, x3, #1
    d6ec:	add	x0, x0, x2, lsr #1
    d6f0:	mov	w3, #0x0                   	// #0
    d6f4:	add	x21, x0, x21, lsr #1
    d6f8:	lsl	x20, x21, #1
    d6fc:	b.eq	d7e0 <mpc_norm@@Base+0x400>  // b.none
    d700:	mov	x2, x20
    d704:	mov	x1, x24
    d708:	mov	x0, x24
    d70c:	bl	4f90 <mpfr_mul_2ui@plt>
    d710:	ldr	x1, [sp, #160]
    d714:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    d718:	mov	w3, #0x0                   	// #0
    d71c:	cmp	x1, x0
    d720:	b.eq	d804 <mpc_norm@@Base+0x424>  // b.none
    d724:	mov	x2, x20
    d728:	mov	x1, x23
    d72c:	mov	x0, x23
    d730:	bl	4f90 <mpfr_mul_2ui@plt>
    d734:	mov	w3, w26
    d738:	mov	x2, x23
    d73c:	mov	x1, x24
    d740:	mov	x0, x25
    d744:	bl	4eb0 <mpfr_add@plt>
    d748:	mov	w19, w0
    d74c:	bl	4e70 <mpfr_clear_underflow@plt>
    d750:	mov	x2, x20
    d754:	mov	w3, w26
    d758:	mov	x1, x25
    d75c:	mov	x0, x25
    d760:	bl	5370 <mpfr_div_2ui@plt>
    d764:	mov	w20, w0
    d768:	bl	5340 <mpfr_underflow_p@plt>
    d76c:	cmp	w0, #0x0
    d770:	csel	w19, w19, w20, eq  // eq = none
    d774:	b	d508 <mpc_norm@@Base+0x128>
    d778:	cmp	x2, x1
    d77c:	b.ne	d794 <mpc_norm@@Base+0x3b4>  // b.any
    d780:	mov	w0, #0x1                   	// #1
    d784:	mov	w19, #0x0                   	// #0
    d788:	str	w0, [x25, #8]
    d78c:	str	x2, [x25, #16]
    d790:	b	d564 <mpc_norm@@Base+0x184>
    d794:	ldr	x1, [sp, #96]
    d798:	mov	w2, w26
    d79c:	mov	x0, x25
    d7a0:	bl	5060 <mpfr_sqr@plt>
    d7a4:	mov	w19, w0
    d7a8:	b	d564 <mpc_norm@@Base+0x184>
    d7ac:	mov	x1, x19
    d7b0:	mov	w2, w26
    d7b4:	mov	x0, x25
    d7b8:	bl	5060 <mpfr_sqr@plt>
    d7bc:	mov	w19, w0
    d7c0:	b	d564 <mpc_norm@@Base+0x184>
    d7c4:	ldr	w3, [sp, #184]
    d7c8:	mov	w2, w26
    d7cc:	mov	x0, x25
    d7d0:	mov	x1, x22
    d7d4:	bl	5220 <mpfr_set4@plt>
    d7d8:	mov	w19, w0
    d7dc:	b	d508 <mpc_norm@@Base+0x128>
    d7e0:	mov	x1, x19
    d7e4:	mov	x2, x21
    d7e8:	mov	x0, x24
    d7ec:	bl	4f90 <mpfr_mul_2ui@plt>
    d7f0:	mov	x1, x24
    d7f4:	mov	x0, x24
    d7f8:	mov	w2, #0x0                   	// #0
    d7fc:	bl	5060 <mpfr_sqr@plt>
    d800:	b	d710 <mpc_norm@@Base+0x330>
    d804:	ldr	x1, [sp, #96]
    d808:	mov	x2, x21
    d80c:	mov	x0, x23
    d810:	bl	4f90 <mpfr_mul_2ui@plt>
    d814:	mov	x1, x23
    d818:	mov	x0, x23
    d81c:	mov	w2, #0x0                   	// #0
    d820:	bl	5060 <mpfr_sqr@plt>
    d824:	b	d734 <mpc_norm@@Base+0x354>
    d828:	mov	x0, x23
    d82c:	mov	x1, #0x1                   	// #1
    d830:	bl	4cd0 <mpfr_set_prec@plt>
    d834:	sub	x2, x27, #0x1
    d838:	mov	x0, x23
    d83c:	mov	w3, #0x1                   	// #1
    d840:	mov	x1, #0x1                   	// #1
    d844:	bl	5180 <mpfr_set_ui_2exp@plt>
    d848:	mov	w3, w26
    d84c:	mov	x2, x23
    d850:	mov	x1, x24
    d854:	mov	x0, x25
    d858:	bl	4eb0 <mpfr_add@plt>
    d85c:	mov	w19, w0
    d860:	b	d508 <mpc_norm@@Base+0x128>
    d864:	mov	x0, x24
    d868:	mov	x1, #0x1                   	// #1
    d86c:	bl	4cd0 <mpfr_set_prec@plt>
    d870:	sub	x2, x27, #0x1
    d874:	mov	x0, x24
    d878:	mov	w3, #0x1                   	// #1
    d87c:	mov	x1, #0x1                   	// #1
    d880:	b	d844 <mpc_norm@@Base+0x464>
    d884:	nop

000000000000d888 <mpc_out_str@@Base>:
    d888:	stp	x29, x30, [sp, #-64]!
    d88c:	mov	x29, sp
    d890:	stp	x19, x20, [sp, #16]
    d894:	mov	x19, x0
    d898:	stp	x21, x22, [sp, #32]
    d89c:	mov	w22, w1
    d8a0:	stp	x23, x24, [sp, #48]
    d8a4:	mov	x23, x2
    d8a8:	mov	x24, x3
    d8ac:	cbz	x0, d92c <mpc_out_str@@Base+0xa4>
    d8b0:	and	w20, w4, #0xf
    d8b4:	mov	x1, x19
    d8b8:	mov	w0, #0x28                  	// #40
    d8bc:	bl	4be0 <fputc@plt>
    d8c0:	mov	w4, w20
    d8c4:	mov	x3, x24
    d8c8:	mov	x2, x23
    d8cc:	mov	w1, w22
    d8d0:	mov	x0, x19
    d8d4:	bl	51e0 <__gmpfr_out_str@plt>
    d8d8:	mov	x1, x19
    d8dc:	mov	x21, x0
    d8e0:	mov	w0, #0x20                  	// #32
    d8e4:	bl	4be0 <fputc@plt>
    d8e8:	mov	w4, w20
    d8ec:	add	x3, x24, #0x20
    d8f0:	mov	x2, x23
    d8f4:	mov	w1, w22
    d8f8:	mov	x0, x19
    d8fc:	bl	51e0 <__gmpfr_out_str@plt>
    d900:	mov	x1, x19
    d904:	mov	x20, x0
    d908:	mov	w0, #0x29                  	// #41
    d90c:	bl	4be0 <fputc@plt>
    d910:	add	x0, x21, x20
    d914:	add	x0, x0, #0x3
    d918:	ldp	x19, x20, [sp, #16]
    d91c:	ldp	x21, x22, [sp, #32]
    d920:	ldp	x23, x24, [sp, #48]
    d924:	ldp	x29, x30, [sp], #64
    d928:	ret
    d92c:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    d930:	ldr	x0, [x0, #4024]
    d934:	ldr	x19, [x0]
    d938:	b	d8b0 <mpc_out_str@@Base+0x28>
    d93c:	nop
    d940:	ldr	x3, [x0, #16]
    d944:	mov	x4, x0
    d948:	add	x3, x1, x3
    d94c:	cmp	x3, #0x0
    d950:	b.le	d9c8 <mpc_out_str@@Base+0x140>
    d954:	ldr	x2, [x4]
    d958:	mov	w0, #0x0                   	// #0
    d95c:	cmp	x3, x2
    d960:	b.gt	d9c4 <mpc_out_str@@Base+0x13c>
    d964:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    d968:	sub	x1, x2, #0x1
    d96c:	ldr	x2, [x4, #24]
    d970:	ldr	x0, [x0, #4056]
    d974:	ldr	w5, [x0]
    d978:	sxtw	x0, w5
    d97c:	sdiv	x1, x1, x0
    d980:	sdiv	x4, x3, x0
    d984:	madd	x1, x1, x0, x0
    d988:	sub	x1, x1, x3
    d98c:	msub	x3, x4, x0, x3
    d990:	sdiv	x1, x1, x0
    d994:	ldr	x0, [x2, x1, lsl #3]
    d998:	cbnz	x3, d9d0 <mpc_out_str@@Base+0x148>
    d99c:	mvn	x3, x0
    d9a0:	and	w3, w3, #0x1
    d9a4:	mov	w0, #0x0                   	// #0
    d9a8:	cbz	w3, d9b8 <mpc_out_str@@Base+0x130>
    d9ac:	b	d9c4 <mpc_out_str@@Base+0x13c>
    d9b0:	ldr	x0, [x2, x1, lsl #3]
    d9b4:	cbnz	x0, d9c8 <mpc_out_str@@Base+0x140>
    d9b8:	subs	x1, x1, #0x1
    d9bc:	b.pl	d9b0 <mpc_out_str@@Base+0x128>  // b.nfrst
    d9c0:	mov	w0, #0x1                   	// #1
    d9c4:	ret
    d9c8:	mov	w0, #0x0                   	// #0
    d9cc:	ret
    d9d0:	sub	w3, w3, #0x1
    d9d4:	sub	w5, w5, #0x1
    d9d8:	mov	x4, #0x1                   	// #1
    d9dc:	lsl	x0, x0, x3
    d9e0:	lsl	x5, x4, x5
    d9e4:	cmp	x0, x5
    d9e8:	cset	w3, ne  // ne = any
    d9ec:	b	d9a4 <mpc_out_str@@Base+0x11c>
    d9f0:	stp	x29, x30, [sp, #-80]!
    d9f4:	mov	x29, sp
    d9f8:	stp	x19, x20, [sp, #16]
    d9fc:	add	x19, sp, #0x40
    da00:	mov	x20, x3
    da04:	stp	x21, x22, [sp, #32]
    da08:	mov	w22, w1
    da0c:	mov	x21, x0
    da10:	mov	x0, x19
    da14:	str	x23, [sp, #48]
    da18:	mov	w23, w2
    da1c:	bl	54f0 <__gmpz_init@plt>
    da20:	mov	x1, x20
    da24:	mov	x0, x19
    da28:	bl	54c0 <mpfr_get_z_2exp@plt>
    da2c:	mov	x20, x0
    da30:	mov	x1, #0x0                   	// #0
    da34:	mov	x0, x19
    da38:	bl	4a30 <__gmpz_scan1@plt>
    da3c:	mov	x2, x0
    da40:	add	x20, x0, x20
    da44:	mov	x1, x19
    da48:	mov	x0, x19
    da4c:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    da50:	cmp	x20, #0x1
    da54:	mov	w0, #0x0                   	// #0
    da58:	b.le	daec <mpc_out_str@@Base+0x264>
    da5c:	ldr	x2, [x21, #16]
    da60:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    da64:	cmp	x2, x1
    da68:	b.eq	dbd8 <mpc_out_str@@Base+0x350>  // b.none
    da6c:	ldr	x2, [x21, #48]
    da70:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    da74:	cmp	x2, x1
    da78:	b.eq	da98 <mpc_out_str@@Base+0x210>  // b.none
    da7c:	mov	x0, x19
    da80:	bl	51d0 <__gmpz_clear@plt>
    da84:	ldp	x19, x20, [sp, #16]
    da88:	ldp	x21, x22, [sp, #32]
    da8c:	ldr	x23, [sp, #48]
    da90:	ldp	x29, x30, [sp], #80
    da94:	ret
    da98:	tst	w0, #0xfffffffd
    da9c:	b.ne	dba8 <mpc_out_str@@Base+0x320>  // b.any
    daa0:	cmp	w0, #0x0
    daa4:	ccmp	w23, w22, #0x0, eq  // eq = none
    daa8:	b.eq	dac0 <mpc_out_str@@Base+0x238>  // b.none
    daac:	eor	w22, w23, w22
    dab0:	cmp	w0, #0x2
    dab4:	and	w22, w22, #0x1
    dab8:	csel	w22, w22, wzr, eq  // eq = none
    dabc:	cbz	w22, da7c <mpc_out_str@@Base+0x1f4>
    dac0:	add	x1, x21, #0x20
    dac4:	mov	w2, #0x1                   	// #1
    dac8:	mov	x0, x1
    dacc:	bl	4bc0 <mpfr_neg@plt>
    dad0:	mov	x0, x19
    dad4:	bl	51d0 <__gmpz_clear@plt>
    dad8:	ldp	x19, x20, [sp, #16]
    dadc:	ldp	x21, x22, [sp, #32]
    dae0:	ldr	x23, [sp, #48]
    dae4:	ldp	x29, x30, [sp], #80
    dae8:	ret
    daec:	b.eq	db94 <mpc_out_str@@Base+0x30c>  // b.none
    daf0:	cbnz	x20, da7c <mpc_out_str@@Base+0x1f4>
    daf4:	mov	x1, #0x1                   	// #1
    daf8:	mov	x0, x19
    dafc:	bl	4d80 <__gmpz_tstbit@plt>
    db00:	mov	w20, w0
    db04:	mov	x1, #0x0                   	// #0
    db08:	mov	x0, x19
    db0c:	bl	4d80 <__gmpz_tstbit@plt>
    db10:	add	w0, w0, w20, lsl #1
    db14:	ldr	w2, [sp, #68]
    db18:	mov	w1, #0x4                   	// #4
    db1c:	ldr	x3, [x21, #16]
    db20:	cmp	w2, #0x0
    db24:	sub	w1, w1, w0
    db28:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    db2c:	csel	w0, w1, w0, lt  // lt = tstop
    db30:	cmp	x3, x2
    db34:	b.ne	da6c <mpc_out_str@@Base+0x1e4>  // b.any
    db38:	and	w1, w0, #0xfffffffd
    db3c:	cmp	w1, #0x1
    db40:	b.ne	dbd8 <mpc_out_str@@Base+0x350>  // b.any
    db44:	eor	w1, w22, #0x1
    db48:	cmp	w0, #0x3
    db4c:	and	w1, w1, #0x1
    db50:	csel	w1, w1, wzr, eq  // eq = none
    db54:	cbnz	w1, db68 <mpc_out_str@@Base+0x2e0>
    db58:	cmp	w0, #0x1
    db5c:	and	w22, w22, #0x1
    db60:	csel	w22, w22, wzr, eq  // eq = none
    db64:	cbz	w22, da7c <mpc_out_str@@Base+0x1f4>
    db68:	mov	x1, x21
    db6c:	mov	w2, #0x1                   	// #1
    db70:	mov	x0, x21
    db74:	bl	4bc0 <mpfr_neg@plt>
    db78:	mov	x0, x19
    db7c:	bl	51d0 <__gmpz_clear@plt>
    db80:	ldp	x19, x20, [sp, #16]
    db84:	ldp	x21, x22, [sp, #32]
    db88:	ldr	x23, [sp, #48]
    db8c:	ldp	x29, x30, [sp], #80
    db90:	ret
    db94:	mov	x0, x19
    db98:	mov	x1, #0x0                   	// #0
    db9c:	bl	4d80 <__gmpz_tstbit@plt>
    dba0:	lsl	w0, w0, #1
    dba4:	b	da5c <mpc_out_str@@Base+0x1d4>
    dba8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    dbac:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbb0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbb4:	add	x4, x4, #0x518
    dbb8:	ldr	x0, [x0, #4008]
    dbbc:	add	x2, x2, #0x510
    dbc0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbc4:	add	x1, x1, #0x318
    dbc8:	mov	w3, #0x93                  	// #147
    dbcc:	ldr	x0, [x0]
    dbd0:	bl	55f0 <fprintf@plt>
    dbd4:	bl	5050 <abort@plt>
    dbd8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    dbdc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbe0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbe4:	add	x4, x4, #0x4f0
    dbe8:	ldr	x0, [x0, #4008]
    dbec:	add	x2, x2, #0x510
    dbf0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    dbf4:	add	x1, x1, #0x318
    dbf8:	mov	w3, #0x89                  	// #137
    dbfc:	ldr	x0, [x0]
    dc00:	bl	55f0 <fprintf@plt>
    dc04:	bl	5050 <abort@plt>

000000000000dc08 <mpc_pow@@Base>:
    dc08:	sub	sp, sp, #0x240
    dc0c:	stp	x29, x30, [sp]
    dc10:	mov	x29, sp
    dc14:	stp	x25, x26, [sp, #64]
    dc18:	mov	x26, x2
    dc1c:	stp	x27, x28, [sp, #80]
    dc20:	mov	x28, x1
    dc24:	str	x0, [sp, #112]
    dc28:	str	w3, [sp, #152]
    dc2c:	bl	5340 <mpfr_underflow_p@plt>
    dc30:	str	w0, [sp, #180]
    dc34:	bl	5530 <mpfr_overflow_p@plt>
    dc38:	str	w0, [sp, #256]
    dc3c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    dc40:	ldr	x2, [x26, #48]
    dc44:	str	x2, [sp, #160]
    dc48:	ldr	x0, [x28, #48]
    dc4c:	str	x0, [sp, #168]
    dc50:	cmp	x2, x1
    dc54:	b.ne	dc64 <mpc_pow@@Base+0x5c>  // b.any
    dc58:	ldr	x0, [x26, #16]
    dc5c:	cmp	x0, x2
    dc60:	b.eq	df4c <mpc_pow@@Base+0x344>  // b.none
    dc64:	mov	x0, x28
    dc68:	stp	x19, x20, [sp, #16]
    dc6c:	bl	5520 <mpfr_number_p@plt>
    dc70:	cbz	w0, dc84 <mpc_pow@@Base+0x7c>
    dc74:	add	x0, x28, #0x20
    dc78:	str	x0, [sp, #192]
    dc7c:	bl	5520 <mpfr_number_p@plt>
    dc80:	cbnz	w0, dcf0 <mpc_pow@@Base+0xe8>
    dc84:	add	x19, sp, #0x200
    dc88:	mov	x1, #0x2                   	// #2
    dc8c:	mov	x0, x19
    dc90:	bl	4d40 <mpc_init2@plt>
    dc94:	mov	x1, x28
    dc98:	mov	x0, x19
    dc9c:	mov	w2, #0x0                   	// #0
    dca0:	bl	4e00 <mpc_log@plt>
    dca4:	mov	x1, x19
    dca8:	mov	w3, #0x0                   	// #0
    dcac:	mov	x2, x26
    dcb0:	mov	x0, x19
    dcb4:	bl	4f20 <mpc_mul@plt>
    dcb8:	ldr	w2, [sp, #152]
    dcbc:	mov	x1, x19
    dcc0:	ldr	x0, [sp, #112]
    dcc4:	bl	52f0 <mpc_exp@plt>
    dcc8:	str	w0, [sp, #104]
    dccc:	mov	x0, x19
    dcd0:	bl	4a50 <mpc_clear@plt>
    dcd4:	ldp	x19, x20, [sp, #16]
    dcd8:	ldr	w0, [sp, #104]
    dcdc:	ldp	x29, x30, [sp]
    dce0:	ldp	x25, x26, [sp, #64]
    dce4:	ldp	x27, x28, [sp, #80]
    dce8:	add	sp, sp, #0x240
    dcec:	ret
    dcf0:	mov	x0, x26
    dcf4:	bl	5520 <mpfr_number_p@plt>
    dcf8:	cbz	w0, dc84 <mpc_pow@@Base+0x7c>
    dcfc:	add	x0, x26, #0x20
    dd00:	bl	5520 <mpfr_number_p@plt>
    dd04:	cbz	w0, dc84 <mpc_pow@@Base+0x7c>
    dd08:	ldr	x1, [sp, #168]
    dd0c:	mov	x19, #0x8000000000000001    	// #-9223372036854775807
    dd10:	cmp	x1, x19
    dd14:	b.ne	e050 <mpc_pow@@Base+0x448>  // b.any
    dd18:	ldr	x0, [x28, #16]
    dd1c:	cmp	x0, x1
    dd20:	b.eq	dc84 <mpc_pow@@Base+0x7c>  // b.none
    dd24:	ldr	w3, [sp, #152]
    dd28:	mov	x0, x28
    dd2c:	mov	x2, #0x0                   	// #0
    dd30:	mov	x1, #0x1                   	// #1
    dd34:	stp	x21, x22, [sp, #32]
    dd38:	asr	w3, w3, #4
    dd3c:	str	w3, [sp, #260]
    dd40:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    dd44:	cbz	w0, ee74 <mpc_pow@@Base+0x126c>
    dd48:	ldp	x0, x1, [sp, #160]
    dd4c:	cmp	x0, x1
    dd50:	b.eq	ec58 <mpc_pow@@Base+0x1050>  // b.none
    dd54:	mov	x0, x28
    dd58:	mov	x2, #0x0                   	// #0
    dd5c:	mov	x1, #0xffffffffffffffff    	// #-1
    dd60:	stp	x23, x24, [sp, #48]
    dd64:	str	wzr, [sp, #104]
    dd68:	bl	5030 <mpfr_cmp_si_2exp@plt>
    dd6c:	cbz	w0, ee5c <mpc_pow@@Base+0x1254>
    dd70:	mov	x0, x28
    dd74:	str	wzr, [sp, #156]
    dd78:	bl	5240 <mpfr_sgn@plt>
    dd7c:	tbnz	w0, #31, ed1c <mpc_pow@@Base+0x1114>
    dd80:	ldr	x25, [sp, #112]
    dd84:	add	x2, sp, #0x140
    dd88:	mov	x1, #0x40                  	// #64
    dd8c:	str	x2, [sp, #208]
    dd90:	add	x2, sp, #0x170
    dd94:	mov	w3, #0xfffffffe            	// #-2
    dd98:	ldr	x24, [x25]
    dd9c:	add	x27, sp, #0x200
    dda0:	ldr	x23, [x25, #32]
    dda4:	mov	x0, x27
    dda8:	add	x22, sp, #0x1c0
    ddac:	str	w3, [sp, #108]
    ddb0:	cmp	x24, x23
    ddb4:	str	x2, [sp, #272]
    ddb8:	csel	x19, x24, x23, ge  // ge = tcont
    ddbc:	add	x20, sp, #0x150
    ddc0:	add	x19, x19, #0xc
    ddc4:	add	x21, sp, #0x160
    ddc8:	cmp	x19, x1
    ddcc:	csel	x19, x19, x1, ge  // ge = tcont
    ddd0:	add	x1, sp, #0x180
    ddd4:	str	x1, [sp, #184]
    ddd8:	mov	x1, x19
    dddc:	bl	4d40 <mpc_init2@plt>
    dde0:	mov	x1, x19
    dde4:	mov	x0, x22
    dde8:	bl	4d40 <mpc_init2@plt>
    ddec:	stp	x26, x28, [sp, #136]
    ddf0:	ldr	w1, [sp, #152]
    ddf4:	ldr	x0, [x25]
    ddf8:	ands	w1, w1, #0xf
    ddfc:	cinc	x3, x24, eq  // eq = none
    de00:	str	x3, [sp, #248]
    de04:	ldr	w3, [sp, #260]
    de08:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    de0c:	str	w1, [sp, #304]
    de10:	ldr	x1, [x25, #32]
    de14:	cmp	w3, #0x0
    de18:	ldr	x3, [x28, #16]
    de1c:	cinc	x4, x23, eq  // eq = none
    de20:	cmp	x1, x0
    de24:	str	x4, [sp, #240]
    de28:	csel	x0, x1, x0, ge  // ge = tcont
    de2c:	cmp	x3, x2
    de30:	str	x0, [sp, #216]
    de34:	cset	w0, eq  // eq = none
    de38:	str	w0, [sp, #316]
    de3c:	ldr	x28, [sp, #272]
    de40:	b	df00 <mpc_pow@@Base+0x2f8>
    de44:	bl	4a90 <mpfr_clear_overflow@plt>
    de48:	bl	4e70 <mpfr_clear_underflow@plt>
    de4c:	mov	x1, x22
    de50:	mov	w2, #0x0                   	// #0
    de54:	mov	x0, x27
    de58:	bl	52f0 <mpc_exp@plt>
    de5c:	mov	w23, w0
    de60:	bl	5340 <mpfr_underflow_p@plt>
    de64:	cbnz	w0, e7e8 <mpc_pow@@Base+0xbe0>
    de68:	bl	5530 <mpfr_overflow_p@plt>
    de6c:	str	w0, [sp, #176]
    de70:	cbnz	w0, e7e8 <mpc_pow@@Base+0xbe0>
    de74:	ldr	x0, [sp, #528]
    de78:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    de7c:	ldr	x1, [sp, #560]
    de80:	cmp	x0, x2
    de84:	b.eq	e19c <mpc_pow@@Base+0x594>  // b.none
    de88:	cmp	x1, x2
    de8c:	b.eq	e190 <mpc_pow@@Base+0x588>  // b.none
    de90:	cmp	x0, x1
    de94:	b.le	e1a8 <mpc_pow@@Base+0x5a0>
    de98:	sub	x0, x0, x1
    de9c:	stp	x0, xzr, [sp, #120]
    dea0:	ldr	w0, [sp, #156]
    dea4:	cbnz	w0, e130 <mpc_pow@@Base+0x528>
    dea8:	ldr	x1, [sp, #128]
    deac:	add	x0, x24, #0x3
    deb0:	add	x0, x0, x1
    deb4:	cmp	x0, x19
    deb8:	b.lt	e104 <mpc_pow@@Base+0x4fc>  // b.tstop
    debc:	mov	x0, x27
    dec0:	bl	5520 <mpfr_number_p@plt>
    dec4:	cbz	w0, efd4 <mpc_pow@@Base+0x13cc>
    dec8:	ldr	w0, [sp, #104]
    decc:	cbz	w0, e154 <mpc_pow@@Base+0x54c>
    ded0:	ldr	w0, [sp, #108]
    ded4:	cmn	w0, #0x2
    ded8:	b.eq	e1b8 <mpc_pow@@Base+0x5b0>  // b.none
    dedc:	add	x19, x19, x19, asr #1
    dee0:	mov	w0, #0xffffffff            	// #-1
    dee4:	str	w0, [sp, #108]
    dee8:	mov	x1, x19
    deec:	mov	x0, x22
    def0:	bl	4c40 <mpc_set_prec@plt>
    def4:	mov	x1, x19
    def8:	mov	x0, x27
    defc:	bl	4c40 <mpc_set_prec@plt>
    df00:	ldr	x1, [sp, #144]
    df04:	mov	w2, #0x0                   	// #0
    df08:	mov	x0, x22
    df0c:	bl	4e00 <mpc_log@plt>
    df10:	ldr	x2, [sp, #136]
    df14:	mov	x1, x22
    df18:	mov	x0, x22
    df1c:	mov	w3, #0x0                   	// #0
    df20:	bl	4f20 <mpc_mul@plt>
    df24:	ldr	x24, [sp, #464]
    df28:	ldr	x0, [sp, #496]
    df2c:	cmp	x24, x0
    df30:	csel	x24, x24, x0, ge  // ge = tcont
    df34:	cmp	x24, #0x0
    df38:	csel	x24, x24, xzr, ge  // ge = tcont
    df3c:	cmp	x19, x24
    df40:	b.gt	de44 <mpc_pow@@Base+0x23c>
    df44:	add	x19, x19, #0x40
    df48:	b	dee8 <mpc_pow@@Base+0x2e0>
    df4c:	ldr	x1, [sp, #168]
    df50:	cmp	x1, x0
    df54:	b.ne	df64 <mpc_pow@@Base+0x35c>  // b.any
    df58:	ldr	x0, [x28, #16]
    df5c:	cmp	x0, x1
    df60:	b.eq	eab4 <mpc_pow@@Base+0xeac>  // b.none
    df64:	add	x27, sp, #0x200
    df68:	stp	x19, x20, [sp, #16]
    df6c:	mov	x0, x27
    df70:	bl	4ae0 <mpfr_init@plt>
    df74:	mov	x1, x28
    df78:	mov	w2, #0x0                   	// #0
    df7c:	mov	x0, x27
    df80:	bl	4ef0 <mpc_norm@plt>
    df84:	mov	x2, #0x0                   	// #0
    df88:	mov	w19, w0
    df8c:	mov	x1, #0x1                   	// #1
    df90:	mov	x0, x27
    df94:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    df98:	cmp	w0, #0x0
    df9c:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    dfa0:	csneg	w0, w0, w19, eq  // eq = none
    dfa4:	cmp	w0, #0x0
    dfa8:	b.lt	e044 <mpc_pow@@Base+0x43c>  // b.tstop
    dfac:	b.ne	e010 <mpc_pow@@Base+0x408>  // b.any
    dfb0:	ldr	w0, [x26, #8]
    dfb4:	ldr	w1, [x28, #40]
    dfb8:	lsr	w0, w0, #31
    dfbc:	cmp	w0, w1, lsr #31
    dfc0:	b.eq	e018 <mpc_pow@@Base+0x410>  // b.none
    dfc4:	ldr	w3, [sp, #152]
    dfc8:	mov	x2, #0x0                   	// #0
    dfcc:	ldr	x0, [sp, #112]
    dfd0:	mov	x1, #0x1                   	// #1
    dfd4:	bl	5090 <mpc_set_ui_ui@plt>
    dfd8:	str	w0, [sp, #104]
    dfdc:	ldr	x1, [sp, #112]
    dfe0:	mov	w2, #0x0                   	// #0
    dfe4:	mov	x0, x1
    dfe8:	bl	4fb0 <mpc_conj@plt>
    dfec:	mov	x0, x27
    dff0:	bl	4db0 <mpfr_clear@plt>
    dff4:	ldr	w0, [sp, #104]
    dff8:	ldp	x29, x30, [sp]
    dffc:	ldp	x19, x20, [sp, #16]
    e000:	ldp	x25, x26, [sp, #64]
    e004:	ldp	x27, x28, [sp, #80]
    e008:	add	sp, sp, #0x240
    e00c:	ret
    e010:	ldr	w0, [x26, #40]
    e014:	tbnz	w0, #31, dfc4 <mpc_pow@@Base+0x3bc>
    e018:	ldr	x0, [sp, #112]
    e01c:	mov	x2, #0x0                   	// #0
    e020:	ldr	w19, [sp, #152]
    e024:	mov	x1, #0x1                   	// #1
    e028:	mov	w3, w19
    e02c:	bl	5090 <mpc_set_ui_ui@plt>
    e030:	str	w0, [sp, #104]
    e034:	asr	w3, w19, #4
    e038:	cmp	w3, #0x3
    e03c:	b.ne	dfec <mpc_pow@@Base+0x3e4>  // b.any
    e040:	b	dfdc <mpc_pow@@Base+0x3d4>
    e044:	ldr	w0, [x26, #40]
    e048:	tbz	w0, #31, dfc4 <mpc_pow@@Base+0x3bc>
    e04c:	b	e018 <mpc_pow@@Base+0x410>
    e050:	ldr	w3, [sp, #152]
    e054:	mov	x0, x28
    e058:	mov	x2, #0x1                   	// #1
    e05c:	mov	x1, #0x0                   	// #0
    e060:	stp	x21, x22, [sp, #32]
    e064:	asr	w3, w3, #4
    e068:	stp	x23, x24, [sp, #48]
    e06c:	str	w3, [sp, #260]
    e070:	bl	5360 <mpc_cmp_si_si@plt>
    e074:	cbz	w0, e08c <mpc_pow@@Base+0x484>
    e078:	mov	x0, x28
    e07c:	mov	x2, #0xffffffffffffffff    	// #-1
    e080:	mov	x1, #0x0                   	// #0
    e084:	bl	5360 <mpc_cmp_si_si@plt>
    e088:	cbnz	w0, eecc <mpc_pow@@Base+0x12c4>
    e08c:	mov	x0, x26
    e090:	bl	4e80 <mpfr_integer_p@plt>
    e094:	cbnz	w0, ec34 <mpc_pow@@Base+0x102c>
    e098:	ldr	x1, [sp, #192]
    e09c:	mov	x0, x28
    e0a0:	bl	5400 <mpfr_cmpabs@plt>
    e0a4:	str	w0, [sp, #104]
    e0a8:	cbnz	w0, eb28 <mpc_pow@@Base+0xf20>
    e0ac:	ldr	x1, [sp, #160]
    e0b0:	str	wzr, [sp, #156]
    e0b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e0b8:	cmp	x1, x0
    e0bc:	b.ne	dd80 <mpc_pow@@Base+0x178>  // b.any
    e0c0:	mov	x0, x26
    e0c4:	bl	4e80 <mpfr_integer_p@plt>
    e0c8:	str	w0, [sp, #156]
    e0cc:	cbz	w0, efbc <mpc_pow@@Base+0x13b4>
    e0d0:	mov	x0, x26
    e0d4:	mov	x1, #0x0                   	// #0
    e0d8:	str	wzr, [sp, #156]
    e0dc:	bl	d940 <mpc_out_str@@Base+0xb8>
    e0e0:	cbnz	w0, dd80 <mpc_pow@@Base+0x178>
    e0e4:	mov	x0, x26
    e0e8:	mov	x1, #0xffffffffffffffff    	// #-1
    e0ec:	bl	d940 <mpc_out_str@@Base+0xb8>
    e0f0:	str	w0, [sp, #156]
    e0f4:	cbz	w0, eefc <mpc_pow@@Base+0x12f4>
    e0f8:	mov	w0, #0x1                   	// #1
    e0fc:	str	w0, [sp, #156]
    e100:	b	dd80 <mpc_pow@@Base+0x178>
    e104:	ldr	x4, [sp, #248]
    e108:	sub	x1, x19, x24
    e10c:	ldr	x0, [sp, #128]
    e110:	sub	x1, x1, #0x3
    e114:	mov	w3, #0x1                   	// #1
    e118:	mov	w2, #0x0                   	// #0
    e11c:	sub	x1, x1, x0
    e120:	mov	x0, x27
    e124:	bl	54a0 <mpfr_can_round@plt>
    e128:	cbz	w0, debc <mpc_pow@@Base+0x2b4>
    e12c:	nop
    e130:	ldr	w0, [sp, #104]
    e134:	cbnz	w0, eb34 <mpc_pow@@Base+0xf2c>
    e138:	ldr	x1, [sp, #120]
    e13c:	add	x0, x24, #0x3
    e140:	add	x0, x0, x1
    e144:	cmp	x0, x19
    e148:	b.lt	e1dc <mpc_pow@@Base+0x5d4>  // b.tstop
    e14c:	ldr	w0, [sp, #156]
    e150:	cbz	w0, efc8 <mpc_pow@@Base+0x13c0>
    e154:	add	x0, x27, #0x20
    e158:	bl	5520 <mpfr_number_p@plt>
    e15c:	cbnz	w0, ded0 <mpc_pow@@Base+0x2c8>
    e160:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    e164:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    e168:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    e16c:	add	x4, x4, #0x568
    e170:	ldr	x0, [x0, #4008]
    e174:	add	x2, x2, #0x510
    e178:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    e17c:	add	x1, x1, #0x318
    e180:	mov	w3, #0x2d8                 	// #728
    e184:	ldr	x0, [x0]
    e188:	bl	55f0 <fprintf@plt>
    e18c:	bl	5050 <abort@plt>
    e190:	str	xzr, [sp, #120]
    e194:	str	xzr, [sp, #128]
    e198:	b	dea0 <mpc_pow@@Base+0x298>
    e19c:	cmp	x1, x0
    e1a0:	b.eq	e190 <mpc_pow@@Base+0x588>  // b.none
    e1a4:	mov	x0, x1
    e1a8:	sub	x0, x1, x0
    e1ac:	str	xzr, [sp, #120]
    e1b0:	str	x0, [sp, #128]
    e1b4:	b	dea0 <mpc_pow@@Base+0x298>
    e1b8:	ldr	x1, [sp, #160]
    e1bc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e1c0:	cmp	x1, x0
    e1c4:	b.eq	e2dc <mpc_pow@@Base+0x6d4>  // b.none
    e1c8:	ldp	x1, x0, [sp, #120]
    e1cc:	add	x0, x0, x1
    e1d0:	add	x0, x0, #0x40
    e1d4:	add	x19, x19, x0
    e1d8:	b	dee8 <mpc_pow@@Base+0x2e0>
    e1dc:	ldr	x4, [sp, #240]
    e1e0:	sub	x1, x19, x24
    e1e4:	ldr	x2, [sp, #120]
    e1e8:	add	x25, x27, #0x20
    e1ec:	sub	x1, x1, #0x3
    e1f0:	mov	x0, x25
    e1f4:	sub	x1, x1, x2
    e1f8:	mov	w3, #0x1                   	// #1
    e1fc:	mov	w2, #0x0                   	// #0
    e200:	bl	54a0 <mpfr_can_round@plt>
    e204:	cbz	w0, e14c <mpc_pow@@Base+0x544>
    e208:	ldr	w0, [sp, #156]
    e20c:	ldp	x26, x28, [sp, #136]
    e210:	cbz	w0, ef08 <mpc_pow@@Base+0x1300>
    e214:	ldr	w2, [sp, #260]
    e218:	mov	x1, x25
    e21c:	ldr	w3, [sp, #552]
    e220:	ldr	x0, [sp, #112]
    e224:	add	x0, x0, #0x20
    e228:	bl	5220 <mpfr_set4@plt>
    e22c:	ldr	w1, [sp, #316]
    e230:	mov	w19, w0
    e234:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    e238:	cmp	w1, #0x0
    e23c:	ldr	x1, [sp, #160]
    e240:	ccmp	x1, x0, #0x0, ne  // ne = any
    e244:	b.eq	e2a0 <mpc_pow@@Base+0x698>  // b.none
    e248:	ldr	x2, [sp, #112]
    e24c:	mov	w1, #0x1                   	// #1
    e250:	cmp	w19, #0x0
    e254:	str	w1, [x2, #8]
    e258:	str	x0, [x2, #16]
    e25c:	b.lt	e2d0 <mpc_pow@@Base+0x6c8>  // b.tstop
    e260:	b.eq	e270 <mpc_pow@@Base+0x668>  // b.none
    e264:	mov	w0, #0x4                   	// #4
    e268:	str	w0, [sp, #104]
    e26c:	nop
    e270:	mov	x0, x22
    e274:	bl	4a50 <mpc_clear@plt>
    e278:	mov	x0, x27
    e27c:	bl	4a50 <mpc_clear@plt>
    e280:	ldr	w0, [sp, #180]
    e284:	cbnz	w0, eae4 <mpc_pow@@Base+0xedc>
    e288:	ldr	w0, [sp, #256]
    e28c:	cbnz	w0, ead0 <mpc_pow@@Base+0xec8>
    e290:	ldp	x19, x20, [sp, #16]
    e294:	ldp	x21, x22, [sp, #32]
    e298:	ldp	x23, x24, [sp, #48]
    e29c:	b	dcd8 <mpc_pow@@Base+0xd0>
    e2a0:	ldr	x4, [sp, #112]
    e2a4:	mov	w2, #0x1                   	// #1
    e2a8:	ldr	w1, [x28, #8]
    e2ac:	mov	x3, x26
    e2b0:	str	w2, [x4, #8]
    e2b4:	mov	w2, #0x0                   	// #0
    e2b8:	str	x0, [x4, #16]
    e2bc:	lsr	w1, w1, #31
    e2c0:	mov	x0, x4
    e2c4:	bl	d9f0 <mpc_out_str@@Base+0x168>
    e2c8:	cmp	w19, #0x0
    e2cc:	b.ge	e260 <mpc_pow@@Base+0x658>  // b.tcont
    e2d0:	mov	w0, #0x8                   	// #8
    e2d4:	str	w0, [sp, #104]
    e2d8:	b	e270 <mpc_pow@@Base+0x668>
    e2dc:	ldr	x0, [sp, #216]
    e2e0:	ldr	x2, [sp, #112]
    e2e4:	lsl	x0, x0, #1
    e2e8:	str	x0, [sp, #216]
    e2ec:	ldr	x0, [sp, #144]
    e2f0:	ldr	x1, [sp, #136]
    e2f4:	ldr	w3, [x0, #8]
    e2f8:	str	w3, [sp, #308]
    e2fc:	cmp	x1, x2
    e300:	ldr	x3, [x0, #16]
    e304:	str	x3, [sp, #264]
    e308:	ldr	w0, [x0, #40]
    e30c:	str	w0, [sp, #312]
    e310:	b.eq	e880 <mpc_pow@@Base+0xc78>  // b.none
    e314:	add	x0, x2, #0x20
    e318:	cmp	x1, x0
    e31c:	b.eq	e880 <mpc_pow@@Base+0xc78>  // b.none
    e320:	ldr	x26, [sp, #208]
    e324:	add	x23, sp, #0x190
    e328:	mov	x25, #0x8000000000000001    	// #-9223372036854775807
    e32c:	mov	x0, x26
    e330:	bl	54f0 <__gmpz_init@plt>
    e334:	mov	x0, x20
    e338:	bl	54f0 <__gmpz_init@plt>
    e33c:	mov	x0, x21
    e340:	bl	54f0 <__gmpz_init@plt>
    e344:	mov	x0, x28
    e348:	bl	54f0 <__gmpz_init@plt>
    e34c:	ldr	x0, [sp, #184]
    e350:	bl	54f0 <__gmpz_init@plt>
    e354:	mov	x0, x23
    e358:	bl	54f0 <__gmpz_init@plt>
    e35c:	ldr	x1, [sp, #136]
    e360:	mov	x0, x26
    e364:	bl	54c0 <mpfr_get_z_2exp@plt>
    e368:	mov	x24, x0
    e36c:	mov	x1, #0x0                   	// #0
    e370:	mov	x0, x26
    e374:	bl	4a30 <__gmpz_scan1@plt>
    e378:	mov	x2, x0
    e37c:	add	x3, x2, x24
    e380:	mov	x0, x26
    e384:	mov	x1, x26
    e388:	str	x3, [sp, #232]
    e38c:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e390:	ldr	x0, [sp, #264]
    e394:	cmp	x0, x25
    e398:	b.eq	e934 <mpc_pow@@Base+0xd2c>  // b.none
    e39c:	ldr	x24, [sp, #144]
    e3a0:	mov	x0, x28
    e3a4:	mov	x1, x24
    e3a8:	bl	54c0 <mpfr_get_z_2exp@plt>
    e3ac:	mov	x1, x24
    e3b0:	mov	x24, x0
    e3b4:	ldr	x1, [x1, #48]
    e3b8:	cmp	x1, x25
    e3bc:	b.eq	e924 <mpc_pow@@Base+0xd1c>  // b.none
    e3c0:	ldp	x0, x1, [sp, #184]
    e3c4:	bl	54c0 <mpfr_get_z_2exp@plt>
    e3c8:	mov	x25, x0
    e3cc:	cmp	x24, x0
    e3d0:	b.ge	eaec <mpc_pow@@Base+0xee4>  // b.tcont
    e3d4:	sub	x2, x25, x24
    e3d8:	ldr	x25, [sp, #184]
    e3dc:	mov	x1, x25
    e3e0:	mov	x0, x25
    e3e4:	bl	4ee0 <__gmpz_mul_2exp@plt>
    e3e8:	mov	w1, #0x2                   	// #2
    e3ec:	mov	x0, x25
    e3f0:	bl	5500 <__gmpz_sizeinbase@plt>
    e3f4:	ldr	x1, [sp, #216]
    e3f8:	cmp	x1, x0
    e3fc:	b.lt	e490 <mpc_pow@@Base+0x888>  // b.tstop
    e400:	ldr	w0, [sp, #372]
    e404:	cbz	w0, ea8c <mpc_pow@@Base+0xe84>
    e408:	mov	x0, x28
    e40c:	mov	x1, #0x0                   	// #0
    e410:	bl	4a30 <__gmpz_scan1@plt>
    e414:	ldr	w26, [sp, #388]
    e418:	mov	x25, x0
    e41c:	cbnz	w26, ea48 <mpc_pow@@Base+0xe40>
    e420:	add	x24, x0, x24
    e424:	mov	x2, x0
    e428:	mov	x1, x28
    e42c:	mov	x0, x28
    e430:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e434:	ldr	x0, [sp, #232]
    e438:	tbz	x0, #63, e5cc <mpc_pow@@Base+0x9c4>
    e43c:	ldr	x26, [sp, #184]
    e440:	ldr	x25, [sp, #232]
    e444:	nop
    e448:	tbnz	w24, #0, e794 <mpc_pow@@Base+0xb8c>
    e44c:	ldr	w0, [sp, #388]
    e450:	cbnz	w0, e4d4 <mpc_pow@@Base+0x8cc>
    e454:	ldr	w0, [sp, #372]
    e458:	tbz	w0, #31, f004 <mpc_pow@@Base+0x13fc>
    e45c:	mov	x1, x28
    e460:	mov	x0, x21
    e464:	bl	4d50 <__gmpz_set@plt>
    e468:	ldr	w0, [sp, #356]
    e46c:	neg	w1, w0
    e470:	str	w1, [sp, #356]
    e474:	sxtw	x1, w1
    e478:	tbz	w0, #31, e874 <mpc_pow@@Base+0xc6c>
    e47c:	ldr	x0, [sp, #360]
    e480:	bl	5470 <__gmpn_perfect_square_p@plt>
    e484:	cbnz	w0, e7bc <mpc_pow@@Base+0xbb4>
    e488:	mov	w0, #0xffffffff            	// #-1
    e48c:	str	w0, [sp, #108]
    e490:	ldr	x0, [sp, #208]
    e494:	bl	51d0 <__gmpz_clear@plt>
    e498:	mov	x0, x20
    e49c:	bl	51d0 <__gmpz_clear@plt>
    e4a0:	mov	x0, x21
    e4a4:	bl	51d0 <__gmpz_clear@plt>
    e4a8:	mov	x0, x28
    e4ac:	bl	51d0 <__gmpz_clear@plt>
    e4b0:	ldr	x0, [sp, #184]
    e4b4:	bl	51d0 <__gmpz_clear@plt>
    e4b8:	mov	x0, x23
    e4bc:	bl	51d0 <__gmpz_clear@plt>
    e4c0:	ldr	w0, [sp, #176]
    e4c4:	cbz	w0, e1c8 <mpc_pow@@Base+0x5c0>
    e4c8:	add	x0, sp, #0x1a0
    e4cc:	bl	4db0 <mpfr_clear@plt>
    e4d0:	b	e1c8 <mpc_pow@@Base+0x5c0>
    e4d4:	mov	x0, x26
    e4d8:	mov	x1, #0x1                   	// #1
    e4dc:	bl	4c80 <__gmpz_divisible_2exp_p@plt>
    e4e0:	cbz	w0, e488 <mpc_pow@@Base+0x880>
    e4e4:	mov	x2, x28
    e4e8:	mov	x1, x28
    e4ec:	mov	x0, x20
    e4f0:	bl	4d90 <__gmpz_mul@plt>
    e4f4:	mov	x1, x26
    e4f8:	mov	x2, x26
    e4fc:	mov	x0, x20
    e500:	bl	4f60 <__gmpz_addmul@plt>
    e504:	ldrsw	x1, [sp, #340]
    e508:	cmp	x1, #0x0
    e50c:	b.le	eb20 <mpc_pow@@Base+0xf18>
    e510:	ldr	x0, [sp, #344]
    e514:	bl	5470 <__gmpn_perfect_square_p@plt>
    e518:	cbz	w0, e488 <mpc_pow@@Base+0x880>
    e51c:	mov	x1, x20
    e520:	mov	x0, x20
    e524:	bl	4b30 <__gmpz_sqrt@plt>
    e528:	mov	x2, x20
    e52c:	mov	x1, x28
    e530:	mov	x0, x20
    e534:	bl	5420 <__gmpz_add@plt>
    e538:	mov	x0, x20
    e53c:	mov	x1, #0x1                   	// #1
    e540:	bl	4c80 <__gmpz_divisible_2exp_p@plt>
    e544:	cbz	w0, e488 <mpc_pow@@Base+0x880>
    e548:	mov	x1, x20
    e54c:	mov	x0, x20
    e550:	mov	x2, #0x1                   	// #1
    e554:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e558:	ldrsw	x1, [sp, #340]
    e55c:	cmp	x1, #0x0
    e560:	b.le	efb4 <mpc_pow@@Base+0x13ac>
    e564:	ldr	x0, [sp, #344]
    e568:	bl	5470 <__gmpn_perfect_square_p@plt>
    e56c:	cbz	w0, e488 <mpc_pow@@Base+0x880>
    e570:	mov	x1, x20
    e574:	mov	x0, x20
    e578:	bl	4b30 <__gmpz_sqrt@plt>
    e57c:	mov	x1, x26
    e580:	mov	x0, x21
    e584:	mov	x2, #0x1                   	// #1
    e588:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e58c:	mov	x2, x20
    e590:	mov	x1, x21
    e594:	mov	x0, x21
    e598:	bl	4d10 <__gmpz_divexact@plt>
    e59c:	nop
    e5a0:	mov	x1, x28
    e5a4:	mov	x0, x20
    e5a8:	add	x24, x24, x24, lsr #63
    e5ac:	bl	4df0 <__gmpz_swap@plt>
    e5b0:	mov	x1, x26
    e5b4:	mov	x0, x21
    e5b8:	bl	4df0 <__gmpz_swap@plt>
    e5bc:	asr	x24, x24, #1
    e5c0:	adds	x25, x25, #0x1
    e5c4:	b.ne	e448 <mpc_pow@@Base+0x840>  // b.any
    e5c8:	str	x25, [sp, #232]
    e5cc:	ldr	w0, [sp, #324]
    e5d0:	tbnz	w0, #31, e8b4 <mpc_pow@@Base+0xcac>
    e5d4:	ldr	x0, [sp, #208]
    e5d8:	mov	w1, #0x2                   	// #2
    e5dc:	mov	x25, x24
    e5e0:	bl	5500 <__gmpz_sizeinbase@plt>
    e5e4:	sub	x26, x0, #0x2
    e5e8:	mov	x1, x28
    e5ec:	mov	x0, x20
    e5f0:	bl	4d50 <__gmpz_set@plt>
    e5f4:	ldr	x1, [sp, #184]
    e5f8:	mov	x0, x21
    e5fc:	bl	4d50 <__gmpz_set@plt>
    e600:	str	x24, [sp, #224]
    e604:	stp	x19, x22, [sp, #280]
    e608:	str	x27, [sp, #296]
    e60c:	mov	x27, x20
    e610:	ldp	x22, x19, [sp, #208]
    e614:	b	e658 <mpc_pow@@Base+0xa50>
    e618:	add	x25, x0, x25
    e61c:	mov	x2, x0
    e620:	mov	x1, x27
    e624:	mov	x0, x27
    e628:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e62c:	mov	x0, x27
    e630:	mov	w1, #0x2                   	// #2
    e634:	bl	5500 <__gmpz_sizeinbase@plt>
    e638:	cmp	x19, x0
    e63c:	b.lt	e7d8 <mpc_pow@@Base+0xbd0>  // b.tstop
    e640:	mov	x0, x21
    e644:	mov	w1, #0x2                   	// #2
    e648:	sub	x26, x26, #0x1
    e64c:	bl	5500 <__gmpz_sizeinbase@plt>
    e650:	cmp	x19, x0
    e654:	b.lt	e7d8 <mpc_pow@@Base+0xbd0>  // b.tstop
    e658:	cmn	x26, #0x1
    e65c:	b.eq	e964 <mpc_pow@@Base+0xd5c>  // b.none
    e660:	mov	x2, x21
    e664:	mov	x1, x27
    e668:	mov	x0, x23
    e66c:	bl	4d90 <__gmpz_mul@plt>
    e670:	mov	x2, x27
    e674:	mov	x1, x27
    e678:	mov	x0, x27
    e67c:	bl	4d90 <__gmpz_mul@plt>
    e680:	mov	x2, x21
    e684:	mov	x1, x21
    e688:	mov	x0, x27
    e68c:	bl	5320 <__gmpz_submul@plt>
    e690:	mov	x2, #0x1                   	// #1
    e694:	mov	x1, x23
    e698:	mov	x0, x21
    e69c:	bl	4ee0 <__gmpz_mul_2exp@plt>
    e6a0:	lsl	x25, x25, #1
    e6a4:	mov	x1, x26
    e6a8:	mov	x0, x22
    e6ac:	bl	4d80 <__gmpz_tstbit@plt>
    e6b0:	cbnz	w0, e738 <mpc_pow@@Base+0xb30>
    e6b4:	ldr	w0, [sp, #340]
    e6b8:	cbz	w0, e714 <mpc_pow@@Base+0xb0c>
    e6bc:	mov	x0, x27
    e6c0:	mov	x1, #0x0                   	// #0
    e6c4:	bl	4a30 <__gmpz_scan1@plt>
    e6c8:	ldr	w24, [sp, #356]
    e6cc:	mov	x20, x0
    e6d0:	cbz	w24, e618 <mpc_pow@@Base+0xa10>
    e6d4:	mov	x0, x21
    e6d8:	mov	x1, #0x0                   	// #0
    e6dc:	bl	4a30 <__gmpz_scan1@plt>
    e6e0:	mov	x4, x0
    e6e4:	cmp	x0, x20
    e6e8:	mov	x1, x27
    e6ec:	csel	x2, x4, x20, ls  // ls = plast
    e6f0:	mov	x0, x27
    e6f4:	add	x25, x2, x25
    e6f8:	str	x2, [sp, #200]
    e6fc:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e700:	ldr	x2, [sp, #200]
    e704:	mov	x1, x21
    e708:	mov	x0, x21
    e70c:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e710:	b	e62c <mpc_pow@@Base+0xa24>
    e714:	mov	x0, x21
    e718:	mov	x1, #0x0                   	// #0
    e71c:	bl	4a30 <__gmpz_scan1@plt>
    e720:	mov	x2, x0
    e724:	add	x25, x0, x25
    e728:	mov	x1, x21
    e72c:	mov	x0, x21
    e730:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    e734:	b	e62c <mpc_pow@@Base+0xa24>
    e738:	ldr	x0, [sp, #224]
    e73c:	mov	x2, x28
    e740:	mov	x1, x27
    e744:	add	x25, x25, x0
    e748:	mov	x0, x23
    e74c:	bl	4d90 <__gmpz_mul@plt>
    e750:	ldr	x20, [sp, #184]
    e754:	mov	x1, x21
    e758:	mov	x0, x23
    e75c:	mov	x2, x20
    e760:	bl	5320 <__gmpz_submul@plt>
    e764:	mov	x2, x28
    e768:	mov	x1, x21
    e76c:	mov	x0, x21
    e770:	bl	4d90 <__gmpz_mul@plt>
    e774:	mov	x2, x20
    e778:	mov	x1, x27
    e77c:	mov	x0, x21
    e780:	bl	4f60 <__gmpz_addmul@plt>
    e784:	mov	x1, x23
    e788:	mov	x0, x27
    e78c:	bl	4df0 <__gmpz_swap@plt>
    e790:	b	e6b4 <mpc_pow@@Base+0xaac>
    e794:	mov	x1, x28
    e798:	mov	x0, x28
    e79c:	mov	x2, #0x1                   	// #1
    e7a0:	bl	4ee0 <__gmpz_mul_2exp@plt>
    e7a4:	sub	x24, x24, #0x1
    e7a8:	mov	x1, x26
    e7ac:	mov	x0, x26
    e7b0:	mov	x2, #0x1                   	// #1
    e7b4:	bl	4ee0 <__gmpz_mul_2exp@plt>
    e7b8:	b	e44c <mpc_pow@@Base+0x844>
    e7bc:	mov	x1, x21
    e7c0:	mov	x0, x21
    e7c4:	bl	4b30 <__gmpz_sqrt@plt>
    e7c8:	mov	x0, x20
    e7cc:	mov	x1, #0x0                   	// #0
    e7d0:	bl	4b50 <__gmpz_set_ui@plt>
    e7d4:	b	e5a0 <mpc_pow@@Base+0x998>
    e7d8:	mov	x20, x27
    e7dc:	ldp	x19, x22, [sp, #280]
    e7e0:	ldr	x27, [sp, #296]
    e7e4:	b	e490 <mpc_pow@@Base+0x888>
    e7e8:	ldr	x0, [sp, #112]
    e7ec:	mov	x1, x27
    e7f0:	mov	w2, #0x0                   	// #0
    e7f4:	mov	w19, #0xffffffff            	// #-1
    e7f8:	bl	55d0 <mpc_set@plt>
    e7fc:	ands	w0, w23, #0x3
    e800:	asr	w23, w23, #2
    e804:	cset	w20, ne  // ne = any
    e808:	cmp	w0, #0x2
    e80c:	csel	w20, w20, w19, ne  // ne = any
    e810:	cmp	w23, #0x2
    e814:	b.eq	e820 <mpc_pow@@Base+0xc18>  // b.none
    e818:	cmp	w23, #0x0
    e81c:	cset	w19, ne  // ne = any
    e820:	ldr	x0, [sp, #112]
    e824:	ldr	x1, [x0, #16]
    e828:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e82c:	cmp	x1, x0
    e830:	b.eq	ed08 <mpc_pow@@Base+0x1100>  // b.none
    e834:	ldr	x0, [sp, #112]
    e838:	ldr	x1, [x0, #48]
    e83c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
    e840:	cmp	x1, x0
    e844:	b.eq	ecf0 <mpc_pow@@Base+0x10e8>  // b.none
    e848:	cmp	w20, #0x0
    e84c:	mov	w0, #0x2                   	// #2
    e850:	cset	w1, ne  // ne = any
    e854:	csel	w2, w1, w0, ge  // ge = tcont
    e858:	cmp	w19, #0x0
    e85c:	orr	w0, w2, #0x4
    e860:	orr	w1, w2, #0x8
    e864:	csel	w0, w0, w2, ne  // ne = any
    e868:	csel	w0, w0, w1, ge  // ge = tcont
    e86c:	str	w0, [sp, #104]
    e870:	b	e270 <mpc_pow@@Base+0x668>
    e874:	mvn	x1, x1
    e878:	lsr	x0, x1, #63
    e87c:	b	e484 <mpc_pow@@Base+0x87c>
    e880:	ldr	x24, [sp, #136]
    e884:	mov	w2, #0x1                   	// #1
    e888:	add	x23, sp, #0x1a0
    e88c:	str	w2, [sp, #176]
    e890:	mov	x0, x23
    e894:	ldr	x1, [x24]
    e898:	bl	5490 <mpfr_init2@plt>
    e89c:	ldr	w3, [x24, #8]
    e8a0:	mov	x0, x23
    e8a4:	mov	x1, x24
    e8a8:	mov	w2, #0x0                   	// #0
    e8ac:	bl	5220 <mpfr_set4@plt>
    e8b0:	b	e320 <mpc_pow@@Base+0x718>
    e8b4:	mov	x2, x28
    e8b8:	mov	x1, x28
    e8bc:	mov	x0, x20
    e8c0:	bl	4d90 <__gmpz_mul@plt>
    e8c4:	ldr	x1, [sp, #184]
    e8c8:	mov	x0, x20
    e8cc:	mov	x2, x1
    e8d0:	bl	4f60 <__gmpz_addmul@plt>
    e8d4:	mov	x1, #0x0                   	// #0
    e8d8:	mov	x0, x20
    e8dc:	bl	4a30 <__gmpz_scan1@plt>
    e8e0:	mov	x25, x0
    e8e4:	mov	w1, #0x2                   	// #2
    e8e8:	mov	x0, x20
    e8ec:	bl	5500 <__gmpz_sizeinbase@plt>
    e8f0:	add	x1, x25, #0x1
    e8f4:	cmp	x0, x1
    e8f8:	b.ne	e488 <mpc_pow@@Base+0x880>  // b.any
    e8fc:	ldr	w1, [sp, #324]
    e900:	neg	x24, x24
    e904:	ldr	w0, [sp, #388]
    e908:	sub	x24, x24, x25
    e90c:	neg	w1, w1
    e910:	str	w1, [sp, #324]
    e914:	neg	w0, w0
    e918:	str	w0, [sp, #388]
    e91c:	b	e5d4 <mpc_pow@@Base+0x9cc>
    e920:	mov	x24, #0x0                   	// #0
    e924:	ldr	x0, [sp, #184]
    e928:	mov	x1, #0x0                   	// #0
    e92c:	bl	4b50 <__gmpz_set_ui@plt>
    e930:	b	e400 <mpc_pow@@Base+0x7f8>
    e934:	mov	x0, x28
    e938:	mov	x1, #0x0                   	// #0
    e93c:	bl	4b50 <__gmpz_set_ui@plt>
    e940:	ldr	x0, [sp, #144]
    e944:	ldr	x1, [sp, #264]
    e948:	ldr	x0, [x0, #48]
    e94c:	cmp	x0, x1
    e950:	b.eq	e920 <mpc_pow@@Base+0xd18>  // b.none
    e954:	ldp	x0, x1, [sp, #184]
    e958:	bl	54c0 <mpfr_get_z_2exp@plt>
    e95c:	mov	x24, x0
    e960:	b	e400 <mpc_pow@@Base+0x7f8>
    e964:	ldp	x19, x22, [sp, #280]
    e968:	mov	x20, x27
    e96c:	str	x19, [sp, #200]
    e970:	ldr	x19, [sp, #216]
    e974:	ldr	x24, [sp, #232]
    e978:	ldr	x27, [sp, #296]
    e97c:	nop
    e980:	cbz	x24, ed68 <mpc_pow@@Base+0x1160>
    e984:	mov	x2, x21
    e988:	mov	x1, x20
    e98c:	mov	x0, x23
    e990:	bl	4d90 <__gmpz_mul@plt>
    e994:	mov	x2, x20
    e998:	mov	x1, x20
    e99c:	mov	x0, x20
    e9a0:	bl	4d90 <__gmpz_mul@plt>
    e9a4:	mov	x2, x21
    e9a8:	mov	x1, x21
    e9ac:	mov	x0, x20
    e9b0:	bl	5320 <__gmpz_submul@plt>
    e9b4:	mov	x2, #0x1                   	// #1
    e9b8:	mov	x1, x23
    e9bc:	mov	x0, x21
    e9c0:	bl	4ee0 <__gmpz_mul_2exp@plt>
    e9c4:	mov	x1, #0x0                   	// #0
    e9c8:	mov	x0, x20
    e9cc:	bl	4a30 <__gmpz_scan1@plt>
    e9d0:	mov	x26, x0
    e9d4:	mov	x1, #0x0                   	// #0
    e9d8:	mov	x0, x21
    e9dc:	bl	4a30 <__gmpz_scan1@plt>
    e9e0:	mov	x2, x0
    e9e4:	cmp	x26, x2
    e9e8:	mov	x1, x20
    e9ec:	csel	x26, x26, x2, ls  // ls = plast
    e9f0:	mov	x0, x20
    e9f4:	mov	x2, x26
    e9f8:	lsl	x25, x25, #1
    e9fc:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    ea00:	add	x25, x26, x25
    ea04:	mov	x2, x26
    ea08:	mov	x1, x21
    ea0c:	mov	x0, x21
    ea10:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    ea14:	mov	x0, x20
    ea18:	mov	w1, #0x2                   	// #2
    ea1c:	bl	5500 <__gmpz_sizeinbase@plt>
    ea20:	cmp	x19, x0
    ea24:	b.lt	ea40 <mpc_pow@@Base+0xe38>  // b.tstop
    ea28:	mov	x0, x21
    ea2c:	mov	w1, #0x2                   	// #2
    ea30:	sub	x24, x24, #0x1
    ea34:	bl	5500 <__gmpz_sizeinbase@plt>
    ea38:	cmp	x19, x0
    ea3c:	b.ge	e980 <mpc_pow@@Base+0xd78>  // b.tcont
    ea40:	ldr	x19, [sp, #200]
    ea44:	b	e490 <mpc_pow@@Base+0x888>
    ea48:	ldr	x26, [sp, #184]
    ea4c:	mov	x1, #0x0                   	// #0
    ea50:	mov	x0, x26
    ea54:	bl	4a30 <__gmpz_scan1@plt>
    ea58:	cmp	x0, x25
    ea5c:	mov	x2, x0
    ea60:	csel	x25, x2, x25, ls  // ls = plast
    ea64:	mov	x1, x28
    ea68:	mov	x0, x28
    ea6c:	mov	x2, x25
    ea70:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    ea74:	add	x24, x25, x24
    ea78:	mov	x2, x25
    ea7c:	mov	x1, x26
    ea80:	mov	x0, x26
    ea84:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    ea88:	b	e434 <mpc_pow@@Base+0x82c>
    ea8c:	ldr	x25, [sp, #184]
    ea90:	mov	x1, #0x0                   	// #0
    ea94:	mov	x0, x25
    ea98:	bl	4a30 <__gmpz_scan1@plt>
    ea9c:	mov	x1, x25
    eaa0:	mov	x2, x0
    eaa4:	add	x24, x0, x24
    eaa8:	mov	x0, x25
    eaac:	bl	5270 <__gmpz_tdiv_q_2exp@plt>
    eab0:	b	e434 <mpc_pow@@Base+0x82c>
    eab4:	ldr	x0, [sp, #112]
    eab8:	mov	w3, #0x0                   	// #0
    eabc:	mov	x2, #0x0                   	// #0
    eac0:	mov	x1, #0x1                   	// #1
    eac4:	str	wzr, [sp, #104]
    eac8:	bl	5090 <mpc_set_ui_ui@plt>
    eacc:	b	dcd8 <mpc_pow@@Base+0xd0>
    ead0:	bl	54e0 <mpfr_set_overflow@plt>
    ead4:	ldp	x19, x20, [sp, #16]
    ead8:	ldp	x21, x22, [sp, #32]
    eadc:	ldp	x23, x24, [sp, #48]
    eae0:	b	dcd8 <mpc_pow@@Base+0xd0>
    eae4:	bl	49d0 <mpfr_set_underflow@plt>
    eae8:	b	e288 <mpc_pow@@Base+0x680>
    eaec:	b.le	e400 <mpc_pow@@Base+0x7f8>
    eaf0:	sub	x2, x24, x25
    eaf4:	mov	x1, x28
    eaf8:	mov	x0, x28
    eafc:	bl	4ee0 <__gmpz_mul_2exp@plt>
    eb00:	mov	w1, #0x2                   	// #2
    eb04:	mov	x0, x28
    eb08:	bl	5500 <__gmpz_sizeinbase@plt>
    eb0c:	ldr	x1, [sp, #216]
    eb10:	cmp	x1, x0
    eb14:	b.lt	e490 <mpc_pow@@Base+0x888>  // b.tstop
    eb18:	mov	x24, x25
    eb1c:	b	e400 <mpc_pow@@Base+0x7f8>
    eb20:	cset	w0, eq  // eq = none
    eb24:	b	e518 <mpc_pow@@Base+0x910>
    eb28:	str	wzr, [sp, #104]
    eb2c:	str	wzr, [sp, #156]
    eb30:	b	dd80 <mpc_pow@@Base+0x178>
    eb34:	ldp	x26, x28, [sp, #136]
    eb38:	add	x23, sp, #0x1a0
    eb3c:	mov	x0, x23
    eb40:	ldr	w19, [x28, #40]
    eb44:	ldr	w20, [x28, #8]
    eb48:	bl	4ae0 <mpfr_init@plt>
    eb4c:	mov	x1, x28
    eb50:	mov	w2, #0x0                   	// #0
    eb54:	mov	x0, x23
    eb58:	bl	4ef0 <mpc_norm@plt>
    eb5c:	mov	x2, #0x0                   	// #0
    eb60:	mov	w21, w0
    eb64:	mov	x1, #0x1                   	// #1
    eb68:	mov	x0, x23
    eb6c:	bl	4d00 <mpfr_cmp_ui_2exp@plt>
    eb70:	cmp	w0, #0x0
    eb74:	ccmp	w21, #0x0, #0x4, eq  // eq = none
    eb78:	lsr	w19, w19, #31
    eb7c:	csneg	w0, w0, w21, eq  // eq = none
    eb80:	cmp	w0, #0x0
    eb84:	b.lt	ef48 <mpc_pow@@Base+0x1340>  // b.tstop
    eb88:	b.ne	efa8 <mpc_pow@@Base+0x13a0>  // b.any
    eb8c:	ldr	w21, [x26, #8]
    eb90:	eor	w21, w19, w21, lsr #31
    eb94:	ldr	x1, [x26]
    eb98:	mov	x0, x23
    eb9c:	bl	4cd0 <mpfr_set_prec@plt>
    eba0:	ldr	w3, [x26, #8]
    eba4:	mov	x1, x26
    eba8:	mov	w2, #0x0                   	// #0
    ebac:	mov	x0, x23
    ebb0:	bl	5220 <mpfr_set4@plt>
    ebb4:	ldr	w2, [sp, #304]
    ebb8:	mov	x1, x27
    ebbc:	ldr	w3, [sp, #520]
    ebc0:	ldr	x0, [sp, #112]
    ebc4:	bl	5220 <mpfr_set4@plt>
    ebc8:	mov	w24, w0
    ebcc:	ldr	x1, [sp, #160]
    ebd0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ebd4:	cmp	x1, x0
    ebd8:	b.eq	ef58 <mpc_pow@@Base+0x1350>  // b.none
    ebdc:	cmp	w24, #0x0
    ebe0:	mov	w1, #0x2                   	// #2
    ebe4:	ldr	x4, [sp, #112]
    ebe8:	cset	w2, ne  // ne = any
    ebec:	csel	w1, w2, w1, ge  // ge = tcont
    ebf0:	str	w1, [sp, #104]
    ebf4:	ldr	w1, [sp, #260]
    ebf8:	mov	w0, #0x1                   	// #1
    ebfc:	mov	x3, #0x8000000000000001    	// #-9223372036854775807
    ec00:	str	w0, [x4, #40]
    ec04:	str	x3, [x4, #48]
    ec08:	and	w0, w21, w0
    ec0c:	cmp	w1, #0x3
    ec10:	csinc	w0, w0, wzr, ne  // ne = any
    ec14:	cbz	w0, ec28 <mpc_pow@@Base+0x1020>
    ec18:	mov	x1, x4
    ec1c:	mov	x0, x4
    ec20:	mov	w2, #0x0                   	// #0
    ec24:	bl	4fb0 <mpc_conj@plt>
    ec28:	mov	x0, x23
    ec2c:	bl	4db0 <mpfr_clear@plt>
    ec30:	b	e270 <mpc_pow@@Base+0x668>
    ec34:	mov	x0, x26
    ec38:	mov	x1, #0x0                   	// #0
    ec3c:	bl	d940 <mpc_out_str@@Base+0xb8>
    ec40:	str	w0, [sp, #156]
    ec44:	cbz	w0, eefc <mpc_pow@@Base+0x12f4>
    ec48:	mov	w0, #0x1                   	// #1
    ec4c:	str	wzr, [sp, #104]
    ec50:	str	w0, [sp, #156]
    ec54:	b	dd80 <mpc_pow@@Base+0x178>
    ec58:	mov	x0, x26
    ec5c:	bl	4e80 <mpfr_integer_p@plt>
    ec60:	cbnz	w0, ec70 <mpc_pow@@Base+0x1068>
    ec64:	mov	x0, x28
    ec68:	bl	5240 <mpfr_sgn@plt>
    ec6c:	tbnz	w0, #31, dd54 <mpc_pow@@Base+0x14c>
    ec70:	ldr	x21, [sp, #112]
    ec74:	mov	x1, x28
    ec78:	ldr	w0, [sp, #152]
    ec7c:	mov	x2, x26
    ec80:	ldr	w19, [x26, #8]
    ec84:	and	w3, w0, #0xf
    ec88:	ldr	w20, [x28, #40]
    ec8c:	mov	x0, x21
    ec90:	bl	4bd0 <mpfr_pow@plt>
    ec94:	add	x1, x21, #0x20
    ec98:	cmp	w0, #0x0
    ec9c:	cset	w4, ne  // ne = any
    eca0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
    eca4:	mov	w3, #0x1                   	// #1
    eca8:	lsr	w19, w19, #31
    ecac:	str	x2, [x1, #16]
    ecb0:	mov	w2, #0x2                   	// #2
    ecb4:	csel	w2, w4, w2, ge  // ge = tcont
    ecb8:	str	w2, [sp, #104]
    ecbc:	ldr	w2, [sp, #260]
    ecc0:	lsr	w20, w20, #31
    ecc4:	str	w3, [x1, #8]
    ecc8:	eor	w0, w19, w20
    eccc:	cmp	w2, #0x3
    ecd0:	csel	w0, w0, w3, ne  // ne = any
    ecd4:	cbz	w0, ece4 <mpc_pow@@Base+0x10dc>
    ecd8:	ldr	w2, [sp, #260]
    ecdc:	mov	x0, x1
    ece0:	bl	4bc0 <mpfr_neg@plt>
    ece4:	ldp	x19, x20, [sp, #16]
    ece8:	ldp	x21, x22, [sp, #32]
    ecec:	b	dcd8 <mpc_pow@@Base+0xd0>
    ecf0:	ldr	w1, [sp, #260]
    ecf4:	ldr	x0, [sp, #112]
    ecf8:	add	x0, x0, #0x20
    ecfc:	bl	4e20 <mpc_fix_inf@plt>
    ed00:	mov	w19, w0
    ed04:	b	e848 <mpc_pow@@Base+0xc40>
    ed08:	ldr	w1, [sp, #304]
    ed0c:	ldr	x0, [sp, #112]
    ed10:	bl	4e20 <mpc_fix_inf@plt>
    ed14:	mov	w20, w0
    ed18:	b	e834 <mpc_pow@@Base+0xc2c>
    ed1c:	mov	x0, x26
    ed20:	mov	x1, #0x1                   	// #1
    ed24:	bl	d940 <mpc_out_str@@Base+0xb8>
    ed28:	str	w0, [sp, #156]
    ed2c:	cbz	w0, dd80 <mpc_pow@@Base+0x178>
    ed30:	mov	w1, #0x1                   	// #1
    ed34:	str	w1, [sp, #156]
    ed38:	ldr	x1, [sp, #160]
    ed3c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ed40:	cmp	x1, x0
    ed44:	b.eq	dd80 <mpc_pow@@Base+0x178>  // b.none
    ed48:	mov	x0, x28
    ed4c:	mov	x2, #0x0                   	// #0
    ed50:	mov	x1, #0xffffffffffffffff    	// #-1
    ed54:	bl	5030 <mpfr_cmp_si_2exp@plt>
    ed58:	cmp	w0, #0x0
    ed5c:	cset	w0, eq  // eq = none
    ed60:	str	w0, [sp, #156]
    ed64:	b	dd80 <mpc_pow@@Base+0x178>
    ed68:	ldr	w2, [sp, #304]
    ed6c:	mov	x1, x20
    ed70:	ldr	x19, [sp, #112]
    ed74:	ldr	x26, [sp, #136]
    ed78:	mov	x0, x19
    ed7c:	bl	4f10 <mpfr_set_z@plt>
    ed80:	cmp	w0, #0x0
    ed84:	cset	w2, ne  // ne = any
    ed88:	mov	w1, #0x2                   	// #2
    ed8c:	csel	w24, w2, w1, ge  // ge = tcont
    ed90:	ldr	w2, [sp, #260]
    ed94:	add	x19, x19, #0x20
    ed98:	mov	x1, x21
    ed9c:	mov	x0, x19
    eda0:	str	w24, [sp, #104]
    eda4:	bl	4f10 <mpfr_set_z@plt>
    eda8:	tbz	w0, #31, ef20 <mpc_pow@@Base+0x1318>
    edac:	orr	w0, w24, #0x8
    edb0:	str	w0, [sp, #104]
    edb4:	ldr	w3, [sp, #304]
    edb8:	mov	x2, x25
    edbc:	ldr	x24, [sp, #112]
    edc0:	mov	x1, x24
    edc4:	mov	x0, x24
    edc8:	bl	4ab0 <mpfr_mul_2si@plt>
    edcc:	ldr	w3, [sp, #260]
    edd0:	mov	x1, x19
    edd4:	mov	x2, x25
    edd8:	mov	x0, x19
    eddc:	bl	4ab0 <mpfr_mul_2si@plt>
    ede0:	ldr	x0, [sp, #208]
    ede4:	bl	51d0 <__gmpz_clear@plt>
    ede8:	mov	x0, x20
    edec:	bl	51d0 <__gmpz_clear@plt>
    edf0:	mov	x0, x21
    edf4:	bl	51d0 <__gmpz_clear@plt>
    edf8:	ldr	x0, [sp, #272]
    edfc:	bl	51d0 <__gmpz_clear@plt>
    ee00:	ldr	x0, [sp, #184]
    ee04:	bl	51d0 <__gmpz_clear@plt>
    ee08:	mov	x0, x23
    ee0c:	bl	51d0 <__gmpz_clear@plt>
    ee10:	ldr	x1, [sp, #264]
    ee14:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    ee18:	cmp	x1, x0
    ee1c:	b.ne	ee48 <mpc_pow@@Base+0x1240>  // b.any
    ee20:	ldr	w0, [sp, #176]
    ee24:	add	x3, sp, #0x1a0
    ee28:	cmp	w0, #0x0
    ee2c:	ldr	w0, [sp, #312]
    ee30:	csel	x3, x3, x26, ne  // ne = any
    ee34:	lsr	w2, w0, #31
    ee38:	ldr	w0, [sp, #308]
    ee3c:	lsr	w1, w0, #31
    ee40:	mov	x0, x24
    ee44:	bl	d9f0 <mpc_out_str@@Base+0x168>
    ee48:	ldr	w0, [sp, #176]
    ee4c:	cbz	w0, e270 <mpc_pow@@Base+0x668>
    ee50:	add	x0, sp, #0x1a0
    ee54:	bl	4db0 <mpfr_clear@plt>
    ee58:	b	e270 <mpc_pow@@Base+0x668>
    ee5c:	mov	x0, x26
    ee60:	bl	4e80 <mpfr_integer_p@plt>
    ee64:	cmp	w0, #0x0
    ee68:	cset	w0, ne  // ne = any
    ee6c:	str	w0, [sp, #104]
    ee70:	b	dd70 <mpc_pow@@Base+0x168>
    ee74:	ldr	w2, [sp, #152]
    ee78:	mov	x1, #0x1                   	// #1
    ee7c:	ldr	x21, [sp, #112]
    ee80:	ldr	w19, [x26, #8]
    ee84:	ldr	w20, [x28, #40]
    ee88:	mov	x0, x21
    ee8c:	bl	4d30 <mpc_set_ui@plt>
    ee90:	str	w0, [sp, #104]
    ee94:	ldr	w1, [sp, #260]
    ee98:	lsr	w19, w19, #31
    ee9c:	lsr	w20, w20, #31
    eea0:	eor	w19, w19, w20
    eea4:	cmp	w1, #0x3
    eea8:	csinc	w19, w19, wzr, ne  // ne = any
    eeac:	cbz	w19, ece4 <mpc_pow@@Base+0x10dc>
    eeb0:	mov	x1, x21
    eeb4:	mov	x0, x21
    eeb8:	mov	w2, #0x0                   	// #0
    eebc:	bl	4fb0 <mpc_conj@plt>
    eec0:	ldp	x19, x20, [sp, #16]
    eec4:	ldp	x21, x22, [sp, #32]
    eec8:	b	dcd8 <mpc_pow@@Base+0xd0>
    eecc:	mov	x0, x28
    eed0:	bl	5240 <mpfr_sgn@plt>
    eed4:	str	w0, [sp, #104]
    eed8:	cbnz	w0, e098 <mpc_pow@@Base+0x490>
    eedc:	ldr	x0, [sp, #160]
    eee0:	cmp	x0, x19
    eee4:	b.eq	e08c <mpc_pow@@Base+0x484>  // b.none
    eee8:	ldr	x1, [sp, #192]
    eeec:	mov	x0, x28
    eef0:	str	wzr, [sp, #156]
    eef4:	bl	5400 <mpfr_cmpabs@plt>
    eef8:	b	dd80 <mpc_pow@@Base+0x178>
    eefc:	mov	w0, #0x1                   	// #1
    ef00:	str	w0, [sp, #104]
    ef04:	b	dd80 <mpc_pow@@Base+0x178>
    ef08:	ldr	w2, [sp, #152]
    ef0c:	mov	x1, x27
    ef10:	ldr	x0, [sp, #112]
    ef14:	bl	55d0 <mpc_set@plt>
    ef18:	str	w0, [sp, #104]
    ef1c:	b	e270 <mpc_pow@@Base+0x668>
    ef20:	ldr	w2, [sp, #260]
    ef24:	mov	x1, x21
    ef28:	mov	x0, x19
    ef2c:	bl	4f10 <mpfr_set_z@plt>
    ef30:	cmp	w0, #0x0
    ef34:	ldr	w2, [sp, #104]
    ef38:	orr	w1, w2, #0x4
    ef3c:	csel	w0, w1, w2, ne  // ne = any
    ef40:	str	w0, [sp, #104]
    ef44:	b	edb4 <mpc_pow@@Base+0x11ac>
    ef48:	ldr	w21, [x26, #40]
    ef4c:	mvn	w21, w21
    ef50:	lsr	w21, w21, #31
    ef54:	b	eb94 <mpc_pow@@Base+0xf8c>
    ef58:	ldr	w0, [sp, #316]
    ef5c:	cmp	w0, #0x0
    ef60:	ldr	x0, [sp, #168]
    ef64:	ccmp	x0, x1, #0x4, eq  // eq = none
    ef68:	b.ne	ebdc <mpc_pow@@Base+0xfd4>  // b.any
    ef6c:	ldr	x0, [sp, #112]
    ef70:	mov	w5, #0x1                   	// #1
    ef74:	lsr	w1, w20, #31
    ef78:	mov	w2, w19
    ef7c:	mov	x3, x23
    ef80:	str	w5, [x0, #40]
    ef84:	ldr	x5, [sp, #160]
    ef88:	str	x5, [x0, #48]
    ef8c:	bl	d9f0 <mpc_out_str@@Base+0x168>
    ef90:	cmp	w24, #0x0
    ef94:	mov	w0, #0x2                   	// #2
    ef98:	cset	w1, ne  // ne = any
    ef9c:	csel	w0, w1, w0, ge  // ge = tcont
    efa0:	str	w0, [sp, #104]
    efa4:	b	ec28 <mpc_pow@@Base+0x1020>
    efa8:	ldr	w21, [x26, #40]
    efac:	lsr	w21, w21, #31
    efb0:	b	eb94 <mpc_pow@@Base+0xf8c>
    efb4:	cset	w0, eq  // eq = none
    efb8:	b	e56c <mpc_pow@@Base+0x964>
    efbc:	ldr	w0, [sp, #156]
    efc0:	str	w0, [sp, #104]
    efc4:	b	dd80 <mpc_pow@@Base+0x178>
    efc8:	mov	x0, x27
    efcc:	bl	5520 <mpfr_number_p@plt>
    efd0:	cbnz	w0, e154 <mpc_pow@@Base+0x54c>
    efd4:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    efd8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    efdc:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    efe0:	add	x4, x4, #0x538
    efe4:	ldr	x0, [x0, #4008]
    efe8:	add	x2, x2, #0x510
    efec:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    eff0:	add	x1, x1, #0x318
    eff4:	mov	w3, #0x2d6                 	// #726
    eff8:	ldr	x0, [x0]
    effc:	bl	55f0 <fprintf@plt>
    f000:	bl	5050 <abort@plt>
    f004:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    f008:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    f00c:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    f010:	add	x4, x4, #0x598
    f014:	ldr	x0, [x0, #4008]
    f018:	add	x2, x2, #0x510
    f01c:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    f020:	add	x1, x1, #0x318
    f024:	mov	w3, #0x3c                  	// #60
    f028:	ldr	x0, [x0]
    f02c:	bl	55f0 <fprintf@plt>
    f030:	bl	5050 <abort@plt>
    f034:	nop

000000000000f038 <mpc_pow_fr@@Base>:
    f038:	stp	x29, x30, [sp, #-128]!
    f03c:	mov	x29, sp
    f040:	ldp	x6, x7, [x2]
    f044:	stp	x19, x20, [sp, #16]
    f048:	add	x19, sp, #0x40
    f04c:	ldp	x4, x5, [x2, #16]
    f050:	str	x23, [sp, #48]
    f054:	add	x23, sp, #0x60
    f058:	mov	x20, x0
    f05c:	mov	x0, x23
    f060:	stp	x21, x22, [sp, #32]
    f064:	mov	x21, x1
    f068:	mov	w22, w3
    f06c:	mov	x1, #0x1                   	// #1
    f070:	stp	x6, x7, [sp, #64]
    f074:	stp	x4, x5, [sp, #80]
    f078:	bl	5490 <mpfr_init2@plt>
    f07c:	mov	w3, w22
    f080:	mov	x1, x21
    f084:	mov	x2, x19
    f088:	mov	w5, #0x1                   	// #1
    f08c:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
    f090:	mov	x0, x20
    f094:	str	w5, [sp, #104]
    f098:	str	x4, [sp, #112]
    f09c:	bl	5290 <mpc_pow@plt>
    f0a0:	mov	w19, w0
    f0a4:	mov	x0, x23
    f0a8:	bl	4db0 <mpfr_clear@plt>
    f0ac:	mov	w0, w19
    f0b0:	ldp	x19, x20, [sp, #16]
    f0b4:	ldp	x21, x22, [sp, #32]
    f0b8:	ldr	x23, [sp, #48]
    f0bc:	ldp	x29, x30, [sp], #128
    f0c0:	ret
    f0c4:	nop

000000000000f0c8 <mpc_pow_ld@@Base>:
    f0c8:	stp	x29, x30, [sp, #-128]!
    f0cc:	mov	x29, sp
    f0d0:	stp	x19, x20, [sp, #16]
    f0d4:	add	x19, sp, #0x40
    f0d8:	mov	x20, x0
    f0dc:	mov	x0, x19
    f0e0:	stp	x21, x22, [sp, #32]
    f0e4:	mov	x21, x1
    f0e8:	mov	w22, w2
    f0ec:	mov	x1, #0x71                  	// #113
    f0f0:	mov	x2, #0x1                   	// #1
    f0f4:	str	q0, [sp, #48]
    f0f8:	bl	5410 <mpc_init3@plt>
    f0fc:	ldr	q0, [sp, #48]
    f100:	mov	x0, x19
    f104:	mov	w1, #0x0                   	// #0
    f108:	bl	4ea0 <mpc_set_ld@plt>
    f10c:	mov	w3, w22
    f110:	mov	x2, x19
    f114:	mov	x1, x21
    f118:	mov	x0, x20
    f11c:	bl	5290 <mpc_pow@plt>
    f120:	mov	w20, w0
    f124:	mov	x0, x19
    f128:	bl	4a50 <mpc_clear@plt>
    f12c:	mov	w0, w20
    f130:	ldp	x19, x20, [sp, #16]
    f134:	ldp	x21, x22, [sp, #32]
    f138:	ldp	x29, x30, [sp], #128
    f13c:	ret

000000000000f140 <mpc_pow_d@@Base>:
    f140:	stp	x29, x30, [sp, #-128]!
    f144:	mov	x29, sp
    f148:	str	d8, [sp, #48]
    f14c:	fmov	d8, d0
    f150:	stp	x19, x20, [sp, #16]
    f154:	add	x19, sp, #0x40
    f158:	mov	x20, x0
    f15c:	mov	x0, x19
    f160:	stp	x21, x22, [sp, #32]
    f164:	mov	x21, x1
    f168:	mov	w22, w2
    f16c:	mov	x1, #0x35                  	// #53
    f170:	mov	x2, #0x1                   	// #1
    f174:	bl	5410 <mpc_init3@plt>
    f178:	fmov	d0, d8
    f17c:	mov	x0, x19
    f180:	mov	w1, #0x0                   	// #0
    f184:	bl	54b0 <mpc_set_d@plt>
    f188:	mov	x1, x21
    f18c:	mov	w3, w22
    f190:	mov	x2, x19
    f194:	mov	x0, x20
    f198:	bl	5290 <mpc_pow@plt>
    f19c:	mov	w1, w0
    f1a0:	mov	x0, x19
    f1a4:	mov	w19, w1
    f1a8:	bl	4a50 <mpc_clear@plt>
    f1ac:	mov	w0, w19
    f1b0:	ldr	d8, [sp, #48]
    f1b4:	ldp	x19, x20, [sp, #16]
    f1b8:	ldp	x21, x22, [sp, #32]
    f1bc:	ldp	x29, x30, [sp], #128
    f1c0:	ret
    f1c4:	nop

000000000000f1c8 <mpc_pow_si@@Base>:
    f1c8:	mov	w4, w3
    f1cc:	tbnz	x2, #63, f1d8 <mpc_pow_si@@Base+0x10>
    f1d0:	mov	w3, #0x1                   	// #1
    f1d4:	b	4e40 <mpc_pow_usi@plt>
    f1d8:	neg	x2, x2
    f1dc:	mov	w3, #0xffffffff            	// #-1
    f1e0:	b	4e40 <mpc_pow_usi@plt>
    f1e4:	nop
    f1e8:	stp	x29, x30, [sp, #-128]!
    f1ec:	mov	x29, sp
    f1f0:	stp	x19, x20, [sp, #16]
    f1f4:	add	x19, sp, #0x40
    f1f8:	mov	x20, x0
    f1fc:	mov	x0, x19
    f200:	stp	x21, x22, [sp, #32]
    f204:	mov	x21, x1
    f208:	mov	w22, w4
    f20c:	mov	x1, #0x40                  	// #64
    f210:	stp	x23, x24, [sp, #48]
    f214:	mov	w24, w3
    f218:	mov	x23, x2
    f21c:	mov	x2, #0x1                   	// #1
    f220:	bl	5410 <mpc_init3@plt>
    f224:	cmp	w24, #0x0
    f228:	b.le	f274 <mpc_pow_si@@Base+0xac>
    f22c:	mov	x1, x23
    f230:	mov	x0, x19
    f234:	mov	w2, #0x0                   	// #0
    f238:	bl	4d30 <mpc_set_ui@plt>
    f23c:	mov	w3, w22
    f240:	mov	x1, x21
    f244:	mov	x2, x19
    f248:	mov	x0, x20
    f24c:	bl	5290 <mpc_pow@plt>
    f250:	mov	w20, w0
    f254:	mov	x0, x19
    f258:	bl	4a50 <mpc_clear@plt>
    f25c:	mov	w0, w20
    f260:	ldp	x19, x20, [sp, #16]
    f264:	ldp	x21, x22, [sp, #32]
    f268:	ldp	x23, x24, [sp, #48]
    f26c:	ldp	x29, x30, [sp], #128
    f270:	ret
    f274:	neg	x1, x23
    f278:	mov	x0, x19
    f27c:	mov	w2, #0x0                   	// #0
    f280:	bl	5070 <mpc_set_si@plt>
    f284:	b	f23c <mpc_pow_si@@Base+0x74>

000000000000f288 <mpc_pow_usi@@Base>:
    f288:	stp	x29, x30, [sp, #-304]!
    f28c:	mov	x29, sp
    f290:	stp	x19, x20, [sp, #16]
    f294:	mov	x20, x1
    f298:	mov	x19, x2
    f29c:	stp	x21, x22, [sp, #32]
    f2a0:	mov	x21, x0
    f2a4:	mov	w22, w3
    f2a8:	mov	x0, x1
    f2ac:	stp	x23, x24, [sp, #48]
    f2b0:	mov	w23, w4
    f2b4:	bl	5520 <mpfr_number_p@plt>
    f2b8:	cbz	w0, f53c <mpc_pow_usi@@Base+0x2b4>
    f2bc:	add	x0, x20, #0x20
    f2c0:	bl	5520 <mpfr_number_p@plt>
    f2c4:	cbz	w0, f53c <mpc_pow_usi@@Base+0x2b4>
    f2c8:	ldr	x24, [x20, #16]
    f2cc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
    f2d0:	cmp	x24, x0
    f2d4:	b.eq	f53c <mpc_pow_usi@@Base+0x2b4>  // b.none
    f2d8:	stp	x25, x26, [sp, #64]
    f2dc:	cmp	x19, #0x0
    f2e0:	ldr	x25, [x20, #48]
    f2e4:	ccmp	x25, x0, #0x4, ne  // ne = any
    f2e8:	b.eq	f538 <mpc_pow_usi@@Base+0x2b0>  // b.none
    f2ec:	cmp	x19, #0x1
    f2f0:	b.eq	f570 <mpc_pow_usi@@Base+0x2e8>  // b.none
    f2f4:	cmp	w22, #0x0
    f2f8:	ccmp	x19, #0x2, #0x0, gt
    f2fc:	b.eq	f6ac <mpc_pow_usi@@Base+0x424>  // b.none
    f300:	cmp	x24, x25
    f304:	csel	x26, x24, x25, ge  // ge = tcont
    f308:	bl	5250 <mpfr_get_emax@plt>
    f30c:	sdiv	x0, x0, x19
    f310:	cmp	x26, x0
    f314:	b.gt	f5b4 <mpc_pow_usi@@Base+0x32c>
    f318:	cmp	x24, x25
    f31c:	neg	x25, x25
    f320:	csneg	x24, x25, x24, ge  // ge = tcont
    f324:	bl	50b0 <mpfr_get_emin@plt>
    f328:	neg	x0, x0
    f32c:	sdiv	x0, x0, x19
    f330:	cmp	x0, x24
    f334:	b.lt	f5b4 <mpc_pow_usi@@Base+0x32c>  // b.tstop
    f338:	and	x0, x19, x19, lsr #1
    f33c:	stp	x27, x28, [sp, #80]
    f340:	cmp	x19, #0x3
    f344:	str	x0, [sp, #112]
    f348:	b.ls	f734 <mpc_pow_usi@@Base+0x4ac>  // b.plast
    f34c:	mov	x0, x19
    f350:	mov	x24, #0x0                   	// #0
    f354:	nop
    f358:	str	x24, [sp, #104]
    f35c:	lsr	x0, x0, #1
    f360:	cmp	x0, #0x3
    f364:	add	x24, x24, #0x1
    f368:	b.hi	f358 <mpc_pow_usi@@Base+0xd0>  // b.pmore
    f36c:	ldr	x0, [sp, #104]
    f370:	lsr	x26, x19, x24
    f374:	add	x0, x0, #0x3
    f378:	str	x0, [sp, #136]
    f37c:	ldr	x2, [x21]
    f380:	add	x28, sp, #0xb0
    f384:	ldr	x1, [x21, #32]
    f388:	mov	x0, x28
    f38c:	cmp	x1, x2
    f390:	csel	x1, x1, x2, ge  // ge = tcont
    f394:	ldr	x2, [sp, #136]
    f398:	add	x1, x1, x2
    f39c:	add	x1, x1, #0x20
    f3a0:	str	x1, [sp, #128]
    f3a4:	bl	4d40 <mpc_init2@plt>
    f3a8:	ldr	x0, [sp, #112]
    f3ac:	cbnz	x0, f700 <mpc_pow_usi@@Base+0x478>
    f3b0:	and	x0, x26, #0x1
    f3b4:	cmp	wzr, w23, lsr #4
    f3b8:	str	x0, [sp, #160]
    f3bc:	cset	x0, eq  // eq = none
    f3c0:	add	x27, sp, #0xf0
    f3c4:	str	x0, [sp, #168]
    f3c8:	mov	w0, #0x2                   	// #2
    f3cc:	str	w0, [sp, #148]
    f3d0:	add	x0, x24, #0x5
    f3d4:	str	x0, [sp, #152]
    f3d8:	mov	x1, x20
    f3dc:	mov	x0, x28
    f3e0:	mov	w2, #0x0                   	// #0
    f3e4:	bl	4f80 <mpc_sqr@plt>
    f3e8:	ldr	x0, [sp, #112]
    f3ec:	cbnz	x0, f604 <mpc_pow_usi@@Base+0x37c>
    f3f0:	mov	x26, x24
    f3f4:	ldr	x25, [sp, #104]
    f3f8:	cbnz	x24, f438 <mpc_pow_usi@@Base+0x1b0>
    f3fc:	b	f460 <mpc_pow_usi@@Base+0x1d8>
    f400:	sub	w0, w25, #0x1
    f404:	cmp	x25, #0x0
    f408:	b.le	f414 <mpc_pow_usi@@Base+0x18c>
    f40c:	lsr	x0, x19, x0
    f410:	tbnz	w0, #0, f5d8 <mpc_pow_usi@@Base+0x350>
    f414:	mov	x26, x25
    f418:	mov	x2, x20
    f41c:	mov	x1, x28
    f420:	mov	x0, x28
    f424:	mov	w3, #0x0                   	// #0
    f428:	bl	4f20 <mpc_mul@plt>
    f42c:	cmp	x26, #0x0
    f430:	sub	x25, x26, #0x1
    f434:	b.le	f460 <mpc_pow_usi@@Base+0x1d8>
    f438:	mov	x1, x28
    f43c:	mov	x0, x28
    f440:	mov	w2, #0x0                   	// #0
    f444:	bl	4f80 <mpc_sqr@plt>
    f448:	lsr	x1, x19, x25
    f44c:	tbnz	w1, #0, f400 <mpc_pow_usi@@Base+0x178>
    f450:	mov	x26, x25
    f454:	cmp	x26, #0x0
    f458:	sub	x25, x26, #0x1
    f45c:	b.gt	f438 <mpc_pow_usi@@Base+0x1b0>
    f460:	tbnz	w22, #31, f634 <mpc_pow_usi@@Base+0x3ac>
    f464:	ldr	x0, [sp, #192]
    f468:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
    f46c:	cmp	x0, x1
    f470:	b.eq	f500 <mpc_pow_usi@@Base+0x278>  // b.none
    f474:	ldr	x6, [sp, #224]
    f478:	cmp	x6, x1
    f47c:	b.eq	f500 <mpc_pow_usi@@Base+0x278>  // b.none
    f480:	sub	x6, x0, x6
    f484:	cmp	x6, #0x0
    f488:	b.le	f64c <mpc_pow_usi@@Base+0x3c4>
    f48c:	ldr	x1, [sp, #152]
    f490:	ldr	x0, [sp, #136]
    f494:	add	x0, x0, x6
    f498:	add	x0, x0, #0x3
    f49c:	mov	x25, x0
    f4a0:	tst	x23, #0xf
    f4a4:	mov	w3, #0x1                   	// #1
    f4a8:	ldr	x4, [x21]
    f4ac:	mov	w2, #0x0                   	// #0
    f4b0:	ldr	x0, [sp, #128]
    f4b4:	cinc	x4, x4, eq  // eq = none
    f4b8:	str	x6, [sp, #120]
    f4bc:	sub	x1, x0, x1
    f4c0:	mov	x0, x28
    f4c4:	bl	54a0 <mpfr_can_round@plt>
    f4c8:	ldr	x6, [sp, #120]
    f4cc:	cbnz	w0, f668 <mpc_pow_usi@@Base+0x3e0>
    f4d0:	ldr	w0, [sp, #148]
    f4d4:	cmp	w0, #0x1
    f4d8:	b.eq	f500 <mpc_pow_usi@@Base+0x278>  // b.none
    f4dc:	ldr	x2, [x21]
    f4e0:	cmp	x6, #0x0
    f4e4:	ldr	x1, [x21, #32]
    f4e8:	cneg	x0, x6, lt  // lt = tstop
    f4ec:	cmp	x1, x2
    f4f0:	csel	x1, x1, x2, ge  // ge = tcont
    f4f4:	cmp	x0, x1
    f4f8:	b.lt	f6c8 <mpc_pow_usi@@Base+0x440>  // b.tstop
    f4fc:	nop
    f500:	mov	x2, x19
    f504:	mov	w4, w23
    f508:	mov	w3, w22
    f50c:	mov	x1, x20
    f510:	mov	x0, x21
    f514:	bl	f1e8 <mpc_pow_si@@Base+0x20>
    f518:	mov	w19, w0
    f51c:	mov	x0, x28
    f520:	bl	4a50 <mpc_clear@plt>
    f524:	ldr	x0, [sp, #112]
    f528:	cbnz	x0, f710 <mpc_pow_usi@@Base+0x488>
    f52c:	ldp	x25, x26, [sp, #64]
    f530:	ldp	x27, x28, [sp, #80]
    f534:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f538:	ldp	x25, x26, [sp, #64]
    f53c:	mov	x2, x19
    f540:	mov	w4, w23
    f544:	mov	w3, w22
    f548:	mov	x1, x20
    f54c:	mov	x0, x21
    f550:	bl	f1e8 <mpc_pow_si@@Base+0x20>
    f554:	mov	w19, w0
    f558:	mov	w0, w19
    f55c:	ldp	x19, x20, [sp, #16]
    f560:	ldp	x21, x22, [sp, #32]
    f564:	ldp	x23, x24, [sp, #48]
    f568:	ldp	x29, x30, [sp], #304
    f56c:	ret
    f570:	cmp	w22, #0x0
    f574:	b.le	f594 <mpc_pow_usi@@Base+0x30c>
    f578:	mov	w2, w23
    f57c:	mov	x1, x20
    f580:	mov	x0, x21
    f584:	bl	55d0 <mpc_set@plt>
    f588:	mov	w19, w0
    f58c:	ldp	x25, x26, [sp, #64]
    f590:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f594:	mov	x1, x19
    f598:	mov	w3, w23
    f59c:	mov	x2, x20
    f5a0:	mov	x0, x21
    f5a4:	bl	5600 <mpc_ui_div@plt>
    f5a8:	mov	w19, w0
    f5ac:	ldp	x25, x26, [sp, #64]
    f5b0:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f5b4:	mov	x2, x19
    f5b8:	mov	w4, w23
    f5bc:	mov	w3, w22
    f5c0:	mov	x1, x20
    f5c4:	mov	x0, x21
    f5c8:	bl	f1e8 <mpc_pow_si@@Base+0x20>
    f5cc:	mov	w19, w0
    f5d0:	ldp	x25, x26, [sp, #64]
    f5d4:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f5d8:	mov	x1, x28
    f5dc:	mov	x0, x28
    f5e0:	mov	w2, #0x0                   	// #0
    f5e4:	bl	4f80 <mpc_sqr@plt>
    f5e8:	sub	x26, x26, #0x2
    f5ec:	mov	x2, x27
    f5f0:	mov	x1, x28
    f5f4:	mov	x0, x28
    f5f8:	mov	w3, #0x0                   	// #0
    f5fc:	bl	4f20 <mpc_mul@plt>
    f600:	b	f42c <mpc_pow_usi@@Base+0x1a4>
    f604:	mov	x2, x20
    f608:	mov	x1, x28
    f60c:	mov	x0, x27
    f610:	mov	w3, #0x0                   	// #0
    f614:	bl	4f20 <mpc_mul@plt>
    f618:	ldr	x0, [sp, #160]
    f61c:	cbz	x0, f3f0 <mpc_pow_usi@@Base+0x168>
    f620:	mov	x1, x27
    f624:	mov	x0, x28
    f628:	mov	w2, #0x0                   	// #0
    f62c:	bl	55d0 <mpc_set@plt>
    f630:	b	f3f0 <mpc_pow_usi@@Base+0x168>
    f634:	mov	x2, x28
    f638:	mov	x0, x28
    f63c:	mov	w3, #0x0                   	// #0
    f640:	mov	x1, #0x1                   	// #1
    f644:	bl	5600 <mpc_ui_div@plt>
    f648:	b	f464 <mpc_pow_usi@@Base+0x1dc>
    f64c:	ldr	x0, [sp, #136]
    f650:	sub	x1, x0, x6
    f654:	add	x1, x1, #0x3
    f658:	b.eq	f490 <mpc_pow_usi@@Base+0x208>  // b.none
    f65c:	ldr	x0, [sp, #152]
    f660:	mov	x25, x0
    f664:	b	f4a0 <mpc_pow_usi@@Base+0x218>
    f668:	ldr	x0, [sp, #128]
    f66c:	mov	w3, #0x1                   	// #1
    f670:	ldr	x4, [x21, #32]
    f674:	sub	x1, x0, x25
    f678:	ldr	x0, [sp, #168]
    f67c:	mov	w2, #0x0                   	// #0
    f680:	add	x4, x0, x4
    f684:	add	x0, x28, #0x20
    f688:	bl	54a0 <mpfr_can_round@plt>
    f68c:	ldr	x6, [sp, #120]
    f690:	cbz	w0, f4d0 <mpc_pow_usi@@Base+0x248>
    f694:	mov	w2, w23
    f698:	mov	x0, x21
    f69c:	mov	x1, x28
    f6a0:	bl	55d0 <mpc_set@plt>
    f6a4:	mov	w19, w0
    f6a8:	b	f51c <mpc_pow_usi@@Base+0x294>
    f6ac:	mov	w2, w23
    f6b0:	mov	x1, x20
    f6b4:	mov	x0, x21
    f6b8:	bl	4f80 <mpc_sqr@plt>
    f6bc:	mov	w19, w0
    f6c0:	ldp	x25, x26, [sp, #64]
    f6c4:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f6c8:	ldr	x2, [x20]
    f6cc:	mov	x0, x28
    f6d0:	ldr	x1, [x20, #32]
    f6d4:	cmp	x1, x2
    f6d8:	csel	x1, x1, x2, ge  // ge = tcont
    f6dc:	ldr	x2, [sp, #128]
    f6e0:	add	x1, x2, x1
    f6e4:	str	x1, [sp, #128]
    f6e8:	bl	4c40 <mpc_set_prec@plt>
    f6ec:	ldr	x0, [sp, #112]
    f6f0:	cbnz	x0, f724 <mpc_pow_usi@@Base+0x49c>
    f6f4:	mov	w0, #0x1                   	// #1
    f6f8:	str	w0, [sp, #148]
    f6fc:	b	f3d8 <mpc_pow_usi@@Base+0x150>
    f700:	ldr	x1, [sp, #128]
    f704:	add	x0, sp, #0xf0
    f708:	bl	4d40 <mpc_init2@plt>
    f70c:	b	f3b0 <mpc_pow_usi@@Base+0x128>
    f710:	add	x0, sp, #0xf0
    f714:	bl	4a50 <mpc_clear@plt>
    f718:	ldp	x25, x26, [sp, #64]
    f71c:	ldp	x27, x28, [sp, #80]
    f720:	b	f558 <mpc_pow_usi@@Base+0x2d0>
    f724:	ldr	x1, [sp, #128]
    f728:	mov	x0, x27
    f72c:	bl	4c40 <mpc_set_prec@plt>
    f730:	b	f6f4 <mpc_pow_usi@@Base+0x46c>
    f734:	mov	x0, #0xffffffffffffffff    	// #-1
    f738:	mov	x26, x19
    f73c:	mov	x24, #0x0                   	// #0
    f740:	str	x0, [sp, #104]
    f744:	mov	x0, #0x2                   	// #2
    f748:	str	x0, [sp, #136]
    f74c:	b	f37c <mpc_pow_usi@@Base+0xf4>

000000000000f750 <mpc_pow_ui@@Base>:
    f750:	mov	w4, w3
    f754:	mov	w3, #0x1                   	// #1
    f758:	b	4e40 <mpc_pow_usi@plt>
    f75c:	nop

000000000000f760 <mpc_pow_z@@Base>:
    f760:	stp	x29, x30, [sp, #-128]!
    f764:	mov	x29, sp
    f768:	stp	x19, x20, [sp, #16]
    f76c:	mov	x19, x2
    f770:	stp	x21, x22, [sp, #32]
    f774:	mov	x22, x0
    f778:	mov	x0, x2
    f77c:	stp	x23, x24, [sp, #48]
    f780:	mov	x23, x1
    f784:	mov	w24, w3
    f788:	mov	w1, #0x2                   	// #2
    f78c:	bl	5500 <__gmpz_sizeinbase@plt>
    f790:	ldr	w1, [x19, #4]
    f794:	mov	x21, x0
    f798:	tbnz	w1, #31, f804 <mpc_pow_z@@Base+0xa4>
    f79c:	cmp	w1, #0x1
    f7a0:	b.le	f838 <mpc_pow_z@@Base+0xd8>
    f7a4:	cmp	x21, #0x0
    f7a8:	add	x20, sp, #0x40
    f7ac:	mov	x2, #0x1                   	// #1
    f7b0:	mov	x0, x20
    f7b4:	csel	x1, x21, x2, gt
    f7b8:	bl	5410 <mpc_init3@plt>
    f7bc:	mov	x1, x19
    f7c0:	mov	w2, #0x0                   	// #0
    f7c4:	mov	x0, x20
    f7c8:	bl	50f0 <mpc_set_z@plt>
    f7cc:	mov	w3, w24
    f7d0:	mov	x2, x20
    f7d4:	mov	x1, x23
    f7d8:	mov	x0, x22
    f7dc:	bl	5290 <mpc_pow@plt>
    f7e0:	mov	w19, w0
    f7e4:	mov	x0, x20
    f7e8:	bl	4a50 <mpc_clear@plt>
    f7ec:	mov	w0, w19
    f7f0:	ldp	x19, x20, [sp, #16]
    f7f4:	ldp	x21, x22, [sp, #32]
    f7f8:	ldp	x23, x24, [sp, #48]
    f7fc:	ldp	x29, x30, [sp], #128
    f800:	ret
    f804:	mov	x0, x19
    f808:	bl	4ca0 <__gmpz_fits_slong_p@plt>
    f80c:	cbz	w0, f7a4 <mpc_pow_z@@Base+0x44>
    f810:	mov	x0, x19
    f814:	bl	49e0 <__gmpz_get_si@plt>
    f818:	mov	w4, w24
    f81c:	neg	x2, x0
    f820:	mov	x1, x23
    f824:	mov	x0, x22
    f828:	mov	w3, #0xffffffff            	// #-1
    f82c:	bl	4e40 <mpc_pow_usi@plt>
    f830:	mov	w19, w0
    f834:	b	f7ec <mpc_pow_z@@Base+0x8c>
    f838:	ldr	x2, [x19, #8]
    f83c:	cmp	w1, #0x0
    f840:	mov	w4, w24
    f844:	mov	x1, x23
    f848:	mov	x0, x22
    f84c:	mov	w3, #0x1                   	// #1
    f850:	ldr	x2, [x2]
    f854:	csel	x2, x2, xzr, ne  // ne = any
    f858:	bl	4e40 <mpc_pow_usi@plt>
    f85c:	mov	w19, w0
    f860:	mov	w0, w19
    f864:	ldp	x19, x20, [sp, #16]
    f868:	ldp	x21, x22, [sp, #32]
    f86c:	ldp	x23, x24, [sp, #48]
    f870:	ldp	x29, x30, [sp], #128
    f874:	ret

000000000000f878 <mpc_proj@@Base>:
    f878:	stp	x29, x30, [sp, #-32]!
    f87c:	mov	x3, #0x8000000000000003    	// #-9223372036854775805
    f880:	mov	x29, sp
    f884:	ldr	x4, [x1, #16]
    f888:	stp	x19, x20, [sp, #16]
    f88c:	mov	x19, x1
    f890:	mov	x20, x0
    f894:	cmp	x4, x3
    f898:	b.eq	f8a8 <mpc_proj@@Base+0x30>  // b.none
    f89c:	ldr	x4, [x1, #48]
    f8a0:	cmp	x4, x3
    f8a4:	b.ne	f8dc <mpc_proj@@Base+0x64>  // b.any
    f8a8:	mov	x0, x20
    f8ac:	mov	w1, #0x1                   	// #1
    f8b0:	bl	5170 <mpfr_set_inf@plt>
    f8b4:	ldr	w2, [x19, #40]
    f8b8:	add	x0, x20, #0x20
    f8bc:	mov	w1, #0x1                   	// #1
    f8c0:	cmp	w2, #0x0
    f8c4:	cneg	w1, w1, lt  // lt = tstop
    f8c8:	bl	4d60 <mpfr_set_zero@plt>
    f8cc:	mov	w0, #0x0                   	// #0
    f8d0:	ldp	x19, x20, [sp, #16]
    f8d4:	ldp	x29, x30, [sp], #32
    f8d8:	ret
    f8dc:	ldp	x19, x20, [sp, #16]
    f8e0:	ldp	x29, x30, [sp], #32
    f8e4:	b	55d0 <mpc_set@plt>

000000000000f8e8 <mpc_real@@Base>:
    f8e8:	ldr	w3, [x1, #8]
    f8ec:	b	5220 <mpfr_set4@plt>

000000000000f8f0 <mpc_rootofunity@@Base>:
    f8f0:	stp	x29, x30, [sp, #-240]!
    f8f4:	mov	x29, sp
    f8f8:	stp	x27, x28, [sp, #80]
    f8fc:	mov	x27, x0
    f900:	cbz	x1, fa60 <mpc_rootofunity@@Base+0x170>
    f904:	udiv	x6, x2, x1
    f908:	mov	w8, w3
    f90c:	mov	x4, x1
    f910:	stp	x19, x20, [sp, #16]
    f914:	msub	x6, x6, x1, x2
    f918:	mov	x5, x6
    f91c:	b	f924 <mpc_rootofunity@@Base+0x34>
    f920:	mov	x4, x2
    f924:	udiv	x2, x5, x4
    f928:	msub	x2, x2, x4, x5
    f92c:	mov	x5, x4
    f930:	cbnz	x2, f920 <mpc_rootofunity@@Base+0x30>
    f934:	udiv	x19, x1, x4
    f938:	cmp	x19, #0x1
    f93c:	b.eq	fa34 <mpc_rootofunity@@Base+0x144>  // b.none
    f940:	udiv	x20, x6, x4
    f944:	cmp	x19, #0x2
    f948:	b.eq	fa7c <mpc_rootofunity@@Base+0x18c>  // b.none
    f94c:	cmp	x19, #0x4
    f950:	b.eq	fb00 <mpc_rootofunity@@Base+0x210>  // b.none
    f954:	cmp	x19, #0x3
    f958:	ccmp	x19, #0x6, #0x4, ne  // ne = any
    f95c:	b.ne	faa8 <mpc_rootofunity@@Base+0x1b8>  // b.any
    f960:	cmp	x19, #0x3
    f964:	b.eq	fd34 <mpc_rootofunity@@Base+0x444>  // b.none
    f968:	cmp	x19, #0x6
    f96c:	b.ne	fd40 <mpc_rootofunity@@Base+0x450>  // b.any
    f970:	and	x0, x20, #0xfffffffffffffffb
    f974:	mov	x1, #0x1                   	// #1
    f978:	cmp	x0, x1
    f97c:	b.ne	fd40 <mpc_rootofunity@@Base+0x450>  // b.any
    f980:	stp	x21, x22, [sp, #32]
    f984:	and	w3, w8, #0xf
    f988:	mov	x2, #0x0                   	// #0
    f98c:	mov	x0, x27
    f990:	str	w8, [sp, #104]
    f994:	bl	4a20 <mpfr_set_si_2exp@plt>
    f998:	ldr	w8, [sp, #104]
    f99c:	add	x22, x27, #0x20
    f9a0:	mov	w21, w0
    f9a4:	cmp	x20, #0x1
    f9a8:	asr	w2, w8, #4
    f9ac:	b.eq	fe28 <mpc_rootofunity@@Base+0x538>  // b.none
    f9b0:	cmp	w2, #0x2
    f9b4:	b.eq	fd14 <mpc_rootofunity@@Base+0x424>  // b.none
    f9b8:	cmp	w2, #0x3
    f9bc:	mov	w0, #0x2                   	// #2
    f9c0:	csel	w2, w2, w0, ne  // ne = any
    f9c4:	mov	x1, #0x3                   	// #3
    f9c8:	mov	x0, x22
    f9cc:	bl	52d0 <mpfr_sqrt_ui@plt>
    f9d0:	mov	w19, w0
    f9d4:	mov	w3, #0x0                   	// #0
    f9d8:	mov	x1, x27
    f9dc:	mov	x2, #0x1                   	// #1
    f9e0:	mov	x0, x27
    f9e4:	bl	5580 <mpc_div_2ui@plt>
    f9e8:	neg	w19, w19
    f9ec:	mov	x1, x22
    f9f0:	mov	x0, x22
    f9f4:	mov	w2, #0x0                   	// #0
    f9f8:	bl	4bc0 <mpfr_neg@plt>
    f9fc:	cmp	w21, #0x0
    fa00:	mov	w0, #0x2                   	// #2
    fa04:	cset	w1, ne  // ne = any
    fa08:	csel	w0, w1, w0, ge  // ge = tcont
    fa0c:	cmp	w19, #0x0
    fa10:	orr	w2, w0, #0x4
    fa14:	orr	w1, w0, #0x8
    fa18:	csel	w0, w2, w0, ne  // ne = any
    fa1c:	csel	w0, w0, w1, ge  // ge = tcont
    fa20:	ldp	x19, x20, [sp, #16]
    fa24:	ldp	x21, x22, [sp, #32]
    fa28:	ldp	x27, x28, [sp, #80]
    fa2c:	ldp	x29, x30, [sp], #240
    fa30:	ret
    fa34:	cmp	x6, x4
    fa38:	b.cs	1009c <mpc_rootofunity@@Base+0x7ac>  // b.hs, b.nlast
    fa3c:	mov	x1, x19
    fa40:	mov	w3, w8
    fa44:	mov	x0, x27
    fa48:	mov	x2, #0x0                   	// #0
    fa4c:	bl	5090 <mpc_set_ui_ui@plt>
    fa50:	ldp	x19, x20, [sp, #16]
    fa54:	ldp	x27, x28, [sp, #80]
    fa58:	ldp	x29, x30, [sp], #240
    fa5c:	ret
    fa60:	bl	4a80 <mpfr_set_nan@plt>
    fa64:	add	x0, x27, #0x20
    fa68:	bl	4a80 <mpfr_set_nan@plt>
    fa6c:	mov	w0, #0x0                   	// #0
    fa70:	ldp	x27, x28, [sp, #80]
    fa74:	ldp	x29, x30, [sp], #240
    fa78:	ret
    fa7c:	cmp	x20, #0x1
    fa80:	b.ne	1000c <mpc_rootofunity@@Base+0x71c>  // b.any
    fa84:	mov	w3, w8
    fa88:	mov	x0, x27
    fa8c:	mov	x2, #0x0                   	// #0
    fa90:	mov	x1, #0xffffffffffffffff    	// #-1
    fa94:	bl	5310 <mpc_set_si_si@plt>
    fa98:	ldp	x19, x20, [sp, #16]
    fa9c:	ldp	x27, x28, [sp, #80]
    faa0:	ldp	x29, x30, [sp], #240
    faa4:	ret
    faa8:	cmp	x19, #0xc
    faac:	b.eq	fd7c <mpc_rootofunity@@Base+0x48c>  // b.none
    fab0:	cmp	x19, #0x8
    fab4:	b.ne	fb30 <mpc_rootofunity@@Base+0x240>  // b.any
    fab8:	stp	x21, x22, [sp, #32]
    fabc:	and	x0, x20, #0xfffffffffffffff9
    fac0:	cmp	x0, #0x1
    fac4:	b.eq	fe50 <mpc_rootofunity@@Base+0x560>  // b.none
    fac8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    facc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fad0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fad4:	add	x4, x4, #0x658
    fad8:	ldr	x0, [x0, #4008]
    fadc:	add	x2, x2, #0x5b8
    fae0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fae4:	add	x1, x1, #0x318
    fae8:	mov	w3, #0x86                  	// #134
    faec:	stp	x23, x24, [sp, #48]
    faf0:	ldr	x0, [x0]
    faf4:	stp	x25, x26, [sp, #64]
    faf8:	bl	55f0 <fprintf@plt>
    fafc:	bl	5050 <abort@plt>
    fb00:	and	x0, x20, #0xfffffffffffffffd
    fb04:	cmp	x0, #0x1
    fb08:	b.ne	10060 <mpc_rootofunity@@Base+0x770>  // b.any
    fb0c:	mov	w3, w8
    fb10:	cmp	x20, #0x1
    fb14:	b.eq	fd1c <mpc_rootofunity@@Base+0x42c>  // b.none
    fb18:	mov	x0, x27
    fb1c:	mov	x2, #0xffffffffffffffff    	// #-1
    fb20:	mov	x1, #0x0                   	// #0
    fb24:	bl	5310 <mpc_set_si_si@plt>
    fb28:	ldp	x19, x20, [sp, #16]
    fb2c:	b	fa54 <mpc_rootofunity@@Base+0x164>
    fb30:	stp	x21, x22, [sp, #32]
    fb34:	add	x22, sp, #0x90
    fb38:	mov	x0, x22
    fb3c:	ldr	x2, [x27]
    fb40:	mov	x1, #0x43                  	// #67
    fb44:	ldr	x21, [x27, #32]
    fb48:	stp	x23, x24, [sp, #48]
    fb4c:	add	x24, sp, #0xb0
    fb50:	cmp	x21, x2
    fb54:	stp	x25, x26, [sp, #64]
    fb58:	csel	x21, x21, x2, ge  // ge = tcont
    fb5c:	asr	w2, w8, #4
    fb60:	stp	w2, w8, [sp, #104]
    fb64:	mov	w28, w2
    fb68:	add	x23, sp, #0xd0
    fb6c:	add	x26, sp, #0x70
    fb70:	mov	x25, #0x4                   	// #4
    fb74:	bl	5490 <mpfr_init2@plt>
    fb78:	mov	x0, x24
    fb7c:	mov	x1, #0x43                  	// #67
    fb80:	bl	5490 <mpfr_init2@plt>
    fb84:	mov	x1, #0x43                  	// #67
    fb88:	mov	x0, x23
    fb8c:	bl	5490 <mpfr_init2@plt>
    fb90:	mov	x0, x26
    fb94:	bl	5300 <__gmpq_init@plt>
    fb98:	mov	x2, x19
    fb9c:	mov	x1, x20
    fba0:	mov	x0, x26
    fba4:	bl	5150 <__gmpq_set_ui@plt>
    fba8:	mov	x1, x26
    fbac:	mov	x0, x26
    fbb0:	mov	x2, #0x1                   	// #1
    fbb4:	bl	55c0 <__gmpq_mul_2exp@plt>
    fbb8:	ldr	w8, [sp, #108]
    fbbc:	cmp	w28, #0x0
    fbc0:	cset	x28, eq  // eq = none
    fbc4:	ands	w19, w8, #0xf
    fbc8:	cset	x20, eq  // eq = none
    fbcc:	nop
    fbd0:	mov	x0, x21
    fbd4:	bl	4d70 <mpc_ceil_log2@plt>
    fbd8:	mov	x1, x0
    fbdc:	mov	x0, x22
    fbe0:	add	x1, x1, #0x5
    fbe4:	add	x21, x21, x1
    fbe8:	mov	x1, x21
    fbec:	bl	4cd0 <mpfr_set_prec@plt>
    fbf0:	mov	x1, x21
    fbf4:	mov	x0, x24
    fbf8:	bl	4cd0 <mpfr_set_prec@plt>
    fbfc:	mov	x1, x21
    fc00:	mov	x0, x23
    fc04:	bl	4cd0 <mpfr_set_prec@plt>
    fc08:	mov	w1, #0x0                   	// #0
    fc0c:	mov	x0, x22
    fc10:	bl	4ac0 <mpfr_const_pi@plt>
    fc14:	mov	x2, x26
    fc18:	mov	x1, x22
    fc1c:	mov	w3, #0x0                   	// #0
    fc20:	mov	x0, x22
    fc24:	bl	4a10 <mpfr_mul_q@plt>
    fc28:	mov	x2, x22
    fc2c:	mov	x1, x23
    fc30:	mov	w3, #0x0                   	// #0
    fc34:	mov	x0, x24
    fc38:	bl	5570 <mpfr_sin_cos@plt>
    fc3c:	ldr	x1, [sp, #224]
    fc40:	mov	x0, x23
    fc44:	ldr	x4, [x27]
    fc48:	sub	x1, x25, x1
    fc4c:	sub	x1, x21, x1
    fc50:	mov	w3, #0x1                   	// #1
    fc54:	add	x4, x20, x4
    fc58:	mov	w2, #0x0                   	// #0
    fc5c:	bl	54a0 <mpfr_can_round@plt>
    fc60:	cbz	w0, fbd0 <mpc_rootofunity@@Base+0x2e0>
    fc64:	ldr	x1, [sp, #192]
    fc68:	mov	x0, x24
    fc6c:	ldr	x4, [x27, #32]
    fc70:	sub	x1, x25, x1
    fc74:	sub	x1, x21, x1
    fc78:	mov	w3, #0x1                   	// #1
    fc7c:	add	x4, x28, x4
    fc80:	mov	w2, #0x0                   	// #0
    fc84:	bl	54a0 <mpfr_can_round@plt>
    fc88:	cbz	w0, fbd0 <mpc_rootofunity@@Base+0x2e0>
    fc8c:	ldr	w3, [sp, #216]
    fc90:	mov	w2, w19
    fc94:	mov	x1, x23
    fc98:	mov	x0, x27
    fc9c:	bl	5220 <mpfr_set4@plt>
    fca0:	mov	w20, w0
    fca4:	ldr	w2, [sp, #104]
    fca8:	mov	x1, x24
    fcac:	ldr	w3, [sp, #184]
    fcb0:	add	x0, x27, #0x20
    fcb4:	bl	5220 <mpfr_set4@plt>
    fcb8:	mov	w19, w0
    fcbc:	mov	x0, x22
    fcc0:	bl	4db0 <mpfr_clear@plt>
    fcc4:	mov	x0, x24
    fcc8:	bl	4db0 <mpfr_clear@plt>
    fccc:	mov	x0, x23
    fcd0:	bl	4db0 <mpfr_clear@plt>
    fcd4:	mov	x0, x26
    fcd8:	bl	5000 <__gmpq_clear@plt>
    fcdc:	cmp	w20, #0x0
    fce0:	mov	w0, #0x2                   	// #2
    fce4:	cset	w1, ne  // ne = any
    fce8:	csel	w0, w1, w0, ge  // ge = tcont
    fcec:	cmp	w19, #0x0
    fcf0:	orr	w2, w0, #0x4
    fcf4:	orr	w1, w0, #0x8
    fcf8:	csel	w0, w2, w0, ne  // ne = any
    fcfc:	csel	w0, w0, w1, ge  // ge = tcont
    fd00:	ldp	x19, x20, [sp, #16]
    fd04:	ldp	x21, x22, [sp, #32]
    fd08:	ldp	x23, x24, [sp, #48]
    fd0c:	ldp	x25, x26, [sp, #64]
    fd10:	b	fa54 <mpc_rootofunity@@Base+0x164>
    fd14:	mov	w2, #0x3                   	// #3
    fd18:	b	f9c4 <mpc_rootofunity@@Base+0xd4>
    fd1c:	mov	x2, x20
    fd20:	mov	x0, x27
    fd24:	mov	x1, #0x0                   	// #0
    fd28:	bl	5090 <mpc_set_ui_ui@plt>
    fd2c:	ldp	x19, x20, [sp, #16]
    fd30:	b	fa54 <mpc_rootofunity@@Base+0x164>
    fd34:	sub	x0, x20, #0x1
    fd38:	cmp	x0, #0x1
    fd3c:	b.ls	ff60 <mpc_rootofunity@@Base+0x670>  // b.plast
    fd40:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    fd44:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fd48:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fd4c:	add	x4, x4, #0x5e8
    fd50:	ldr	x0, [x0, #4008]
    fd54:	add	x2, x2, #0x5b8
    fd58:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fd5c:	add	x1, x1, #0x318
    fd60:	mov	w3, #0x55                  	// #85
    fd64:	stp	x21, x22, [sp, #32]
    fd68:	ldr	x0, [x0]
    fd6c:	stp	x23, x24, [sp, #48]
    fd70:	stp	x25, x26, [sp, #64]
    fd74:	bl	55f0 <fprintf@plt>
    fd78:	bl	5050 <abort@plt>
    fd7c:	stp	x21, x22, [sp, #32]
    fd80:	and	x0, x20, #0xfffffffffffffffb
    fd84:	cmp	x0, #0x1
    fd88:	b.eq	fd98 <mpc_rootofunity@@Base+0x4a8>  // b.none
    fd8c:	sub	x0, x20, #0x7
    fd90:	tst	x0, #0xfffffffffffffffb
    fd94:	b.ne	ffd4 <mpc_rootofunity@@Base+0x6e4>  // b.any
    fd98:	and	x22, x20, #0xfffffffffffffffd
    fd9c:	and	w2, w8, #0xf
    fda0:	cmp	x22, #0x5
    fda4:	b.ne	fdbc <mpc_rootofunity@@Base+0x4cc>  // b.any
    fda8:	cmp	w2, #0x2
    fdac:	b.eq	ffcc <mpc_rootofunity@@Base+0x6dc>  // b.none
    fdb0:	cmp	w2, #0x3
    fdb4:	mov	w0, #0x2                   	// #2
    fdb8:	csel	w2, w2, w0, ne  // ne = any
    fdbc:	mov	x0, x27
    fdc0:	mov	x1, #0x3                   	// #3
    fdc4:	str	w8, [sp, #104]
    fdc8:	bl	52d0 <mpfr_sqrt_ui@plt>
    fdcc:	ldr	w8, [sp, #104]
    fdd0:	mov	w21, w0
    fdd4:	cmp	x20, #0x5
    fdd8:	add	x0, x27, #0x20
    fddc:	asr	w3, w8, #4
    fde0:	b.hi	ff00 <mpc_rootofunity@@Base+0x610>  // b.pmore
    fde4:	mov	x2, #0x0                   	// #0
    fde8:	mov	x1, #0x1                   	// #1
    fdec:	bl	5180 <mpfr_set_ui_2exp@plt>
    fdf0:	mov	w19, w0
    fdf4:	mov	x1, x27
    fdf8:	mov	x0, x27
    fdfc:	mov	w3, #0x0                   	// #0
    fe00:	mov	x2, #0x1                   	// #1
    fe04:	bl	5580 <mpc_div_2ui@plt>
    fe08:	cmp	x22, #0x5
    fe0c:	b.ne	f9fc <mpc_rootofunity@@Base+0x10c>  // b.any
    fe10:	neg	w21, w21
    fe14:	mov	x1, x27
    fe18:	mov	x0, x27
    fe1c:	mov	w2, #0x0                   	// #0
    fe20:	bl	4bc0 <mpfr_neg@plt>
    fe24:	b	f9fc <mpc_rootofunity@@Base+0x10c>
    fe28:	mov	x0, x22
    fe2c:	mov	x1, #0x3                   	// #3
    fe30:	bl	52d0 <mpfr_sqrt_ui@plt>
    fe34:	mov	w19, w0
    fe38:	mov	x2, x20
    fe3c:	mov	x1, x27
    fe40:	mov	x0, x27
    fe44:	mov	w3, #0x0                   	// #0
    fe48:	bl	5580 <mpc_div_2ui@plt>
    fe4c:	b	f9fc <mpc_rootofunity@@Base+0x10c>
    fe50:	sub	x0, x20, #0x3
    fe54:	and	w2, w8, #0xf
    fe58:	ands	x21, x0, #0xfffffffffffffffd
    fe5c:	b.ne	ff14 <mpc_rootofunity@@Base+0x624>  // b.any
    fe60:	cmp	w2, #0x2
    fe64:	b.eq	ffc4 <mpc_rootofunity@@Base+0x6d4>  // b.none
    fe68:	cmp	w2, #0x3
    fe6c:	mov	w0, #0x2                   	// #2
    fe70:	csel	w2, w2, w0, ne  // ne = any
    fe74:	asr	w19, w8, #4
    fe78:	cmp	x20, #0x4
    fe7c:	add	x22, x27, #0x20
    fe80:	b.ls	ff74 <mpc_rootofunity@@Base+0x684>  // b.plast
    fe84:	cmp	w19, #0x2
    fe88:	b.eq	ff6c <mpc_rootofunity@@Base+0x67c>  // b.none
    fe8c:	cmp	w19, #0x3
    fe90:	mov	w0, #0x2                   	// #2
    fe94:	csel	w19, w19, w0, ne  // ne = any
    fe98:	mov	x1, #0x2                   	// #2
    fe9c:	mov	x0, x27
    fea0:	bl	52d0 <mpfr_sqrt_ui@plt>
    fea4:	mov	w2, w19
    fea8:	mov	x1, #0x2                   	// #2
    feac:	mov	w19, w0
    feb0:	mov	x0, x22
    feb4:	bl	52d0 <mpfr_sqrt_ui@plt>
    feb8:	mov	w20, w0
    febc:	mov	x1, x27
    fec0:	mov	x0, x27
    fec4:	mov	w3, #0x0                   	// #0
    fec8:	mov	x2, #0x1                   	// #1
    fecc:	bl	5580 <mpc_div_2ui@plt>
    fed0:	cbz	x21, 10048 <mpc_rootofunity@@Base+0x758>
    fed4:	neg	w20, w20
    fed8:	mov	x1, x22
    fedc:	mov	x0, x22
    fee0:	mov	w2, #0x0                   	// #0
    fee4:	bl	4bc0 <mpfr_neg@plt>
    fee8:	cmp	w19, #0x0
    feec:	mov	w1, #0x2                   	// #2
    fef0:	cset	w0, ne  // ne = any
    fef4:	csel	w0, w0, w1, ge  // ge = tcont
    fef8:	cmp	w20, #0x0
    fefc:	b	fa10 <mpc_rootofunity@@Base+0x120>
    ff00:	mov	x2, #0x0                   	// #0
    ff04:	mov	x1, #0xffffffffffffffff    	// #-1
    ff08:	bl	4a20 <mpfr_set_si_2exp@plt>
    ff0c:	mov	w19, w0
    ff10:	b	fdf4 <mpc_rootofunity@@Base+0x504>
    ff14:	asr	w19, w8, #4
    ff18:	cmp	x20, #0x4
    ff1c:	add	x22, x27, #0x20
    ff20:	b.hi	fe84 <mpc_rootofunity@@Base+0x594>  // b.pmore
    ff24:	mov	x0, x27
    ff28:	mov	x1, #0x2                   	// #2
    ff2c:	bl	52d0 <mpfr_sqrt_ui@plt>
    ff30:	mov	w2, w19
    ff34:	mov	x1, #0x2                   	// #2
    ff38:	mov	w19, w0
    ff3c:	mov	x0, x22
    ff40:	bl	52d0 <mpfr_sqrt_ui@plt>
    ff44:	mov	w20, w0
    ff48:	mov	x1, x27
    ff4c:	mov	x0, x27
    ff50:	mov	w3, #0x0                   	// #0
    ff54:	mov	x2, #0x1                   	// #1
    ff58:	bl	5580 <mpc_div_2ui@plt>
    ff5c:	b	fee8 <mpc_rootofunity@@Base+0x5f8>
    ff60:	mov	x1, #0xffffffffffffffff    	// #-1
    ff64:	stp	x21, x22, [sp, #32]
    ff68:	b	f984 <mpc_rootofunity@@Base+0x94>
    ff6c:	mov	w19, #0x3                   	// #3
    ff70:	b	fe98 <mpc_rootofunity@@Base+0x5a8>
    ff74:	mov	x0, x27
    ff78:	mov	x1, #0x2                   	// #2
    ff7c:	bl	52d0 <mpfr_sqrt_ui@plt>
    ff80:	mov	w2, w19
    ff84:	mov	x1, #0x2                   	// #2
    ff88:	mov	w19, w0
    ff8c:	mov	x0, x22
    ff90:	bl	52d0 <mpfr_sqrt_ui@plt>
    ff94:	mov	w20, w0
    ff98:	mov	w3, #0x0                   	// #0
    ff9c:	mov	x1, x27
    ffa0:	mov	x0, x27
    ffa4:	mov	x2, #0x1                   	// #1
    ffa8:	bl	5580 <mpc_div_2ui@plt>
    ffac:	neg	w19, w19
    ffb0:	mov	x1, x27
    ffb4:	mov	x0, x27
    ffb8:	mov	w2, #0x0                   	// #0
    ffbc:	bl	4bc0 <mpfr_neg@plt>
    ffc0:	b	fee8 <mpc_rootofunity@@Base+0x5f8>
    ffc4:	mov	w2, #0x3                   	// #3
    ffc8:	b	fe74 <mpc_rootofunity@@Base+0x584>
    ffcc:	mov	w2, #0x3                   	// #3
    ffd0:	b	fdbc <mpc_rootofunity@@Base+0x4cc>
    ffd4:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
    ffd8:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ffdc:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    ffe0:	add	x4, x4, #0x630
    ffe4:	ldr	x0, [x0, #4008]
    ffe8:	add	x2, x2, #0x5b8
    ffec:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
    fff0:	add	x1, x1, #0x318
    fff4:	mov	w3, #0x6f                  	// #111
    fff8:	stp	x23, x24, [sp, #48]
    fffc:	ldr	x0, [x0]
   10000:	stp	x25, x26, [sp, #64]
   10004:	bl	55f0 <fprintf@plt>
   10008:	bl	5050 <abort@plt>
   1000c:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   10010:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10014:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10018:	add	x4, x4, #0x5c8
   1001c:	ldr	x0, [x0, #4008]
   10020:	add	x2, x2, #0x5b8
   10024:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10028:	add	x1, x1, #0x318
   1002c:	mov	w3, #0x46                  	// #70
   10030:	stp	x21, x22, [sp, #32]
   10034:	ldr	x0, [x0]
   10038:	stp	x23, x24, [sp, #48]
   1003c:	stp	x25, x26, [sp, #64]
   10040:	bl	55f0 <fprintf@plt>
   10044:	bl	5050 <abort@plt>
   10048:	neg	w19, w19
   1004c:	mov	x1, x27
   10050:	mov	x0, x27
   10054:	mov	w2, #0x0                   	// #0
   10058:	bl	4bc0 <mpfr_neg@plt>
   1005c:	b	fed4 <mpc_rootofunity@@Base+0x5e4>
   10060:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   10064:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10068:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   1006c:	add	x4, x4, #0x5d0
   10070:	ldr	x0, [x0, #4008]
   10074:	add	x2, x2, #0x5b8
   10078:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   1007c:	add	x1, x1, #0x318
   10080:	mov	w3, #0x4d                  	// #77
   10084:	stp	x21, x22, [sp, #32]
   10088:	ldr	x0, [x0]
   1008c:	stp	x23, x24, [sp, #48]
   10090:	stp	x25, x26, [sp, #64]
   10094:	bl	55f0 <fprintf@plt>
   10098:	bl	5050 <abort@plt>
   1009c:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   100a0:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   100a4:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   100a8:	add	x4, x4, #0x5b0
   100ac:	ldr	x0, [x0, #4008]
   100b0:	add	x2, x2, #0x5b8
   100b4:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   100b8:	add	x1, x1, #0x318
   100bc:	mov	w3, #0x40                  	// #64
   100c0:	stp	x21, x22, [sp, #32]
   100c4:	ldr	x0, [x0]
   100c8:	stp	x23, x24, [sp, #48]
   100cc:	stp	x25, x26, [sp, #64]
   100d0:	bl	55f0 <fprintf@plt>
   100d4:	bl	5050 <abort@plt>

00000000000100d8 <mpc_urandom@@Base>:
   100d8:	stp	x29, x30, [sp, #-48]!
   100dc:	mov	x29, sp
   100e0:	stp	x19, x20, [sp, #16]
   100e4:	mov	x20, x0
   100e8:	str	x21, [sp, #32]
   100ec:	mov	x21, x1
   100f0:	bl	5550 <mpfr_urandomb@plt>
   100f4:	mov	w19, w0
   100f8:	mov	x1, x21
   100fc:	add	x0, x20, #0x20
   10100:	bl	5550 <mpfr_urandomb@plt>
   10104:	cmp	w19, #0x0
   10108:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1010c:	cset	w0, ne  // ne = any
   10110:	ldp	x19, x20, [sp, #16]
   10114:	ldr	x21, [sp, #32]
   10118:	ldp	x29, x30, [sp], #48
   1011c:	ret

0000000000010120 <mpc_set@@Base>:
   10120:	stp	x29, x30, [sp, #-48]!
   10124:	mov	x29, sp
   10128:	ldr	w3, [x1, #8]
   1012c:	stp	x19, x20, [sp, #16]
   10130:	mov	x19, x1
   10134:	stp	x21, x22, [sp, #32]
   10138:	mov	w21, w2
   1013c:	mov	x22, x0
   10140:	and	w2, w2, #0xf
   10144:	bl	5220 <mpfr_set4@plt>
   10148:	ldr	w3, [x19, #40]
   1014c:	mov	w20, w0
   10150:	asr	w2, w21, #4
   10154:	add	x1, x19, #0x20
   10158:	add	x0, x22, #0x20
   1015c:	bl	5220 <mpfr_set4@plt>
   10160:	cmp	w20, #0x0
   10164:	mov	w2, #0x2                   	// #2
   10168:	cset	w1, ne  // ne = any
   1016c:	csel	w1, w1, w2, ge  // ge = tcont
   10170:	cmp	w0, #0x0
   10174:	orr	w3, w1, #0x4
   10178:	orr	w2, w1, #0x8
   1017c:	csel	w1, w3, w1, ne  // ne = any
   10180:	csel	w1, w1, w2, ge  // ge = tcont
   10184:	mov	w0, w1
   10188:	ldp	x19, x20, [sp, #16]
   1018c:	ldp	x21, x22, [sp, #32]
   10190:	ldp	x29, x30, [sp], #48
   10194:	ret

0000000000010198 <mpc_set_prec@@Base>:
   10198:	stp	x29, x30, [sp, #-32]!
   1019c:	mov	x29, sp
   101a0:	stp	x19, x20, [sp, #16]
   101a4:	mov	x19, x0
   101a8:	mov	x20, x1
   101ac:	bl	4cd0 <mpfr_set_prec@plt>
   101b0:	mov	x1, x20
   101b4:	add	x0, x19, #0x20
   101b8:	ldp	x19, x20, [sp, #16]
   101bc:	ldp	x29, x30, [sp], #32
   101c0:	b	4cd0 <mpfr_set_prec@plt>
   101c4:	nop

00000000000101c8 <mpc_set_str@@Base>:
   101c8:	stp	x29, x30, [sp, #-48]!
   101cc:	mov	w4, w3
   101d0:	mov	w3, w2
   101d4:	mov	x29, sp
   101d8:	add	x2, sp, #0x28
   101dc:	stp	x19, x20, [sp, #16]
   101e0:	mov	x20, x0
   101e4:	bl	4f50 <mpc_strtoc@plt>
   101e8:	cmn	w0, #0x1
   101ec:	b.eq	1022c <mpc_set_str@@Base+0x64>  // b.none
   101f0:	mov	w19, w0
   101f4:	bl	51c0 <__ctype_b_loc@plt>
   101f8:	ldr	x4, [x0]
   101fc:	ldr	x1, [sp, #40]
   10200:	b	10208 <mpc_set_str@@Base+0x40>
   10204:	str	x1, [sp, #40]
   10208:	ldrb	w2, [x1], #1
   1020c:	ubfiz	x3, x2, #1, #8
   10210:	ldrh	w3, [x4, x3]
   10214:	tbnz	w3, #13, 10204 <mpc_set_str@@Base+0x3c>
   10218:	cbnz	w2, 1022c <mpc_set_str@@Base+0x64>
   1021c:	mov	w0, w19
   10220:	ldp	x19, x20, [sp, #16]
   10224:	ldp	x29, x30, [sp], #48
   10228:	ret
   1022c:	mov	x0, x20
   10230:	bl	4a80 <mpfr_set_nan@plt>
   10234:	add	x0, x20, #0x20
   10238:	mov	w19, #0xffffffff            	// #-1
   1023c:	bl	4a80 <mpfr_set_nan@plt>
   10240:	b	1021c <mpc_set_str@@Base+0x54>
   10244:	nop

0000000000010248 <mpc_set_fr@@Base>:
   10248:	stp	x29, x30, [sp, #-32]!
   1024c:	and	w2, w2, #0xf
   10250:	mov	x29, sp
   10254:	str	x19, [sp, #16]
   10258:	mov	x19, x0
   1025c:	bl	4ed0 <mpfr_set@plt>
   10260:	cmp	w0, #0x0
   10264:	cset	w2, ne  // ne = any
   10268:	mov	w3, #0x1                   	// #1
   1026c:	mov	w0, #0x2                   	// #2
   10270:	csel	w0, w2, w0, ge  // ge = tcont
   10274:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10278:	str	w3, [x19, #40]
   1027c:	str	x2, [x19, #48]
   10280:	ldr	x19, [sp, #16]
   10284:	ldp	x29, x30, [sp], #32
   10288:	ret
   1028c:	nop

0000000000010290 <mpc_set_d@@Base>:
   10290:	stp	x29, x30, [sp, #-32]!
   10294:	and	w1, w1, #0xf
   10298:	mov	x29, sp
   1029c:	str	x19, [sp, #16]
   102a0:	mov	x19, x0
   102a4:	bl	4c70 <mpfr_set_d@plt>
   102a8:	cmp	w0, #0x0
   102ac:	cset	w2, ne  // ne = any
   102b0:	mov	w3, #0x1                   	// #1
   102b4:	mov	w0, #0x2                   	// #2
   102b8:	csel	w0, w2, w0, ge  // ge = tcont
   102bc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   102c0:	str	w3, [x19, #40]
   102c4:	str	x2, [x19, #48]
   102c8:	ldr	x19, [sp, #16]
   102cc:	ldp	x29, x30, [sp], #32
   102d0:	ret
   102d4:	nop

00000000000102d8 <mpc_set_ld@@Base>:
   102d8:	stp	x29, x30, [sp, #-32]!
   102dc:	and	w1, w1, #0xf
   102e0:	mov	x29, sp
   102e4:	str	x19, [sp, #16]
   102e8:	mov	x19, x0
   102ec:	bl	49f0 <mpfr_set_ld@plt>
   102f0:	cmp	w0, #0x0
   102f4:	cset	w2, ne  // ne = any
   102f8:	mov	w3, #0x1                   	// #1
   102fc:	mov	w0, #0x2                   	// #2
   10300:	csel	w0, w2, w0, ge  // ge = tcont
   10304:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10308:	str	w3, [x19, #40]
   1030c:	str	x2, [x19, #48]
   10310:	ldr	x19, [sp, #16]
   10314:	ldp	x29, x30, [sp], #32
   10318:	ret
   1031c:	nop

0000000000010320 <mpc_set_ui@@Base>:
   10320:	stp	x29, x30, [sp, #-32]!
   10324:	and	w2, w2, #0xf
   10328:	mov	x29, sp
   1032c:	str	x19, [sp, #16]
   10330:	mov	x19, x0
   10334:	bl	5560 <mpfr_set_ui@plt>
   10338:	cmp	w0, #0x0
   1033c:	cset	w2, ne  // ne = any
   10340:	mov	w3, #0x1                   	// #1
   10344:	mov	w0, #0x2                   	// #2
   10348:	csel	w0, w2, w0, ge  // ge = tcont
   1034c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10350:	str	w3, [x19, #40]
   10354:	str	x2, [x19, #48]
   10358:	ldr	x19, [sp, #16]
   1035c:	ldp	x29, x30, [sp], #32
   10360:	ret
   10364:	nop

0000000000010368 <mpc_set_si@@Base>:
   10368:	stp	x29, x30, [sp, #-32]!
   1036c:	and	w2, w2, #0xf
   10370:	mov	x29, sp
   10374:	str	x19, [sp, #16]
   10378:	mov	x19, x0
   1037c:	bl	52c0 <mpfr_set_si@plt>
   10380:	cmp	w0, #0x0
   10384:	cset	w2, ne  // ne = any
   10388:	mov	w3, #0x1                   	// #1
   1038c:	mov	w0, #0x2                   	// #2
   10390:	csel	w0, w2, w0, ge  // ge = tcont
   10394:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10398:	str	w3, [x19, #40]
   1039c:	str	x2, [x19, #48]
   103a0:	ldr	x19, [sp, #16]
   103a4:	ldp	x29, x30, [sp], #32
   103a8:	ret
   103ac:	nop

00000000000103b0 <mpc_set_z@@Base>:
   103b0:	stp	x29, x30, [sp, #-32]!
   103b4:	and	w2, w2, #0xf
   103b8:	mov	x29, sp
   103bc:	str	x19, [sp, #16]
   103c0:	mov	x19, x0
   103c4:	bl	4f10 <mpfr_set_z@plt>
   103c8:	cmp	w0, #0x0
   103cc:	cset	w2, ne  // ne = any
   103d0:	mov	w3, #0x1                   	// #1
   103d4:	mov	w0, #0x2                   	// #2
   103d8:	csel	w0, w2, w0, ge  // ge = tcont
   103dc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   103e0:	str	w3, [x19, #40]
   103e4:	str	x2, [x19, #48]
   103e8:	ldr	x19, [sp, #16]
   103ec:	ldp	x29, x30, [sp], #32
   103f0:	ret
   103f4:	nop

00000000000103f8 <mpc_set_q@@Base>:
   103f8:	stp	x29, x30, [sp, #-32]!
   103fc:	and	w2, w2, #0xf
   10400:	mov	x29, sp
   10404:	str	x19, [sp, #16]
   10408:	mov	x19, x0
   1040c:	bl	52e0 <mpfr_set_q@plt>
   10410:	cmp	w0, #0x0
   10414:	cset	w2, ne  // ne = any
   10418:	mov	w3, #0x1                   	// #1
   1041c:	mov	w0, #0x2                   	// #2
   10420:	csel	w0, w2, w0, ge  // ge = tcont
   10424:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10428:	str	w3, [x19, #40]
   1042c:	str	x2, [x19, #48]
   10430:	ldr	x19, [sp, #16]
   10434:	ldp	x29, x30, [sp], #32
   10438:	ret
   1043c:	nop

0000000000010440 <mpc_set_f@@Base>:
   10440:	stp	x29, x30, [sp, #-32]!
   10444:	and	w2, w2, #0xf
   10448:	mov	x29, sp
   1044c:	str	x19, [sp, #16]
   10450:	mov	x19, x0
   10454:	bl	4ba0 <mpfr_set_f@plt>
   10458:	cmp	w0, #0x0
   1045c:	cset	w2, ne  // ne = any
   10460:	mov	w3, #0x1                   	// #1
   10464:	mov	w0, #0x2                   	// #2
   10468:	csel	w0, w2, w0, ge  // ge = tcont
   1046c:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10470:	str	w3, [x19, #40]
   10474:	str	x2, [x19, #48]
   10478:	ldr	x19, [sp, #16]
   1047c:	ldp	x29, x30, [sp], #32
   10480:	ret
   10484:	nop

0000000000010488 <mpc_set_uj@@Base>:
   10488:	stp	x29, x30, [sp, #-32]!
   1048c:	and	w2, w2, #0xf
   10490:	mov	x29, sp
   10494:	str	x19, [sp, #16]
   10498:	mov	x19, x0
   1049c:	bl	5450 <__gmpfr_set_uj@plt>
   104a0:	cmp	w0, #0x0
   104a4:	cset	w2, ne  // ne = any
   104a8:	mov	w3, #0x1                   	// #1
   104ac:	mov	w0, #0x2                   	// #2
   104b0:	csel	w0, w2, w0, ge  // ge = tcont
   104b4:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   104b8:	str	w3, [x19, #40]
   104bc:	str	x2, [x19, #48]
   104c0:	ldr	x19, [sp, #16]
   104c4:	ldp	x29, x30, [sp], #32
   104c8:	ret
   104cc:	nop

00000000000104d0 <mpc_set_sj@@Base>:
   104d0:	stp	x29, x30, [sp, #-32]!
   104d4:	and	w2, w2, #0xf
   104d8:	mov	x29, sp
   104dc:	str	x19, [sp, #16]
   104e0:	mov	x19, x0
   104e4:	bl	4dc0 <__gmpfr_set_sj@plt>
   104e8:	cmp	w0, #0x0
   104ec:	cset	w2, ne  // ne = any
   104f0:	mov	w3, #0x1                   	// #1
   104f4:	mov	w0, #0x2                   	// #2
   104f8:	csel	w0, w2, w0, ge  // ge = tcont
   104fc:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   10500:	str	w3, [x19, #40]
   10504:	str	x2, [x19, #48]
   10508:	ldr	x19, [sp, #16]
   1050c:	ldp	x29, x30, [sp], #32
   10510:	ret
   10514:	nop

0000000000010518 <mpc_set_dc@@Base>:
   10518:	b	4fe0 <mpc_set_d_d@plt>
   1051c:	nop

0000000000010520 <mpc_set_ldc@@Base>:
   10520:	b	4da0 <mpc_set_ld_ld@plt>
   10524:	nop

0000000000010528 <mpc_set_nan@@Base>:
   10528:	stp	x29, x30, [sp, #-32]!
   1052c:	mov	x29, sp
   10530:	str	x19, [sp, #16]
   10534:	mov	x19, x0
   10538:	bl	4a80 <mpfr_set_nan@plt>
   1053c:	add	x0, x19, #0x20
   10540:	ldr	x19, [sp, #16]
   10544:	ldp	x29, x30, [sp], #32
   10548:	b	4a80 <mpfr_set_nan@plt>
   1054c:	nop

0000000000010550 <mpc_set_d_d@@Base>:
   10550:	stp	x29, x30, [sp, #-48]!
   10554:	mov	x29, sp
   10558:	str	d8, [sp, #40]
   1055c:	fmov	d8, d1
   10560:	stp	x19, x20, [sp, #16]
   10564:	mov	w20, w1
   10568:	and	w1, w1, #0xf
   1056c:	str	x21, [sp, #32]
   10570:	mov	x21, x0
   10574:	bl	4c70 <mpfr_set_d@plt>
   10578:	fmov	d0, d8
   1057c:	mov	w19, w0
   10580:	asr	w1, w20, #4
   10584:	add	x0, x21, #0x20
   10588:	bl	4c70 <mpfr_set_d@plt>
   1058c:	cmp	w19, #0x0
   10590:	mov	w2, #0x2                   	// #2
   10594:	cset	w1, ne  // ne = any
   10598:	ldr	d8, [sp, #40]
   1059c:	csel	w1, w1, w2, ge  // ge = tcont
   105a0:	cmp	w0, #0x0
   105a4:	orr	w3, w1, #0x4
   105a8:	orr	w2, w1, #0x8
   105ac:	csel	w1, w3, w1, ne  // ne = any
   105b0:	csel	w1, w1, w2, ge  // ge = tcont
   105b4:	mov	w0, w1
   105b8:	ldp	x19, x20, [sp, #16]
   105bc:	ldr	x21, [sp, #32]
   105c0:	ldp	x29, x30, [sp], #48
   105c4:	ret

00000000000105c8 <mpc_set_f_f@@Base>:
   105c8:	stp	x29, x30, [sp, #-48]!
   105cc:	mov	x29, sp
   105d0:	stp	x19, x20, [sp, #16]
   105d4:	mov	w20, w3
   105d8:	stp	x21, x22, [sp, #32]
   105dc:	mov	x22, x2
   105e0:	mov	x21, x0
   105e4:	and	w2, w3, #0xf
   105e8:	bl	4ba0 <mpfr_set_f@plt>
   105ec:	asr	w2, w20, #4
   105f0:	mov	w19, w0
   105f4:	mov	x1, x22
   105f8:	add	x0, x21, #0x20
   105fc:	bl	4ba0 <mpfr_set_f@plt>
   10600:	cmp	w19, #0x0
   10604:	mov	w2, #0x2                   	// #2
   10608:	cset	w1, ne  // ne = any
   1060c:	csel	w1, w1, w2, ge  // ge = tcont
   10610:	cmp	w0, #0x0
   10614:	orr	w2, w1, #0x4
   10618:	csel	w2, w2, w1, ne  // ne = any
   1061c:	orr	w1, w1, #0x8
   10620:	csel	w1, w2, w1, ge  // ge = tcont
   10624:	mov	w0, w1
   10628:	ldp	x19, x20, [sp, #16]
   1062c:	ldp	x21, x22, [sp, #32]
   10630:	ldp	x29, x30, [sp], #48
   10634:	ret

0000000000010638 <mpc_set_fr_fr@@Base>:
   10638:	stp	x29, x30, [sp, #-48]!
   1063c:	mov	x29, sp
   10640:	stp	x19, x20, [sp, #16]
   10644:	mov	w20, w3
   10648:	stp	x21, x22, [sp, #32]
   1064c:	mov	x22, x2
   10650:	mov	x21, x0
   10654:	and	w2, w3, #0xf
   10658:	bl	4ed0 <mpfr_set@plt>
   1065c:	asr	w2, w20, #4
   10660:	mov	w19, w0
   10664:	mov	x1, x22
   10668:	add	x0, x21, #0x20
   1066c:	bl	4ed0 <mpfr_set@plt>
   10670:	cmp	w19, #0x0
   10674:	mov	w2, #0x2                   	// #2
   10678:	cset	w1, ne  // ne = any
   1067c:	csel	w1, w1, w2, ge  // ge = tcont
   10680:	cmp	w0, #0x0
   10684:	orr	w2, w1, #0x4
   10688:	csel	w2, w2, w1, ne  // ne = any
   1068c:	orr	w1, w1, #0x8
   10690:	csel	w1, w2, w1, ge  // ge = tcont
   10694:	mov	w0, w1
   10698:	ldp	x19, x20, [sp, #16]
   1069c:	ldp	x21, x22, [sp, #32]
   106a0:	ldp	x29, x30, [sp], #48
   106a4:	ret

00000000000106a8 <mpc_set_ld_ld@@Base>:
   106a8:	stp	x29, x30, [sp, #-64]!
   106ac:	mov	x29, sp
   106b0:	stp	x19, x20, [sp, #16]
   106b4:	mov	w20, w1
   106b8:	and	w1, w1, #0xf
   106bc:	str	x21, [sp, #32]
   106c0:	mov	x21, x0
   106c4:	str	q1, [sp, #48]
   106c8:	bl	49f0 <mpfr_set_ld@plt>
   106cc:	ldr	q2, [sp, #48]
   106d0:	mov	w19, w0
   106d4:	asr	w1, w20, #4
   106d8:	add	x0, x21, #0x20
   106dc:	mov	v0.16b, v2.16b
   106e0:	bl	49f0 <mpfr_set_ld@plt>
   106e4:	cmp	w19, #0x0
   106e8:	mov	w2, #0x2                   	// #2
   106ec:	cset	w1, ne  // ne = any
   106f0:	csel	w1, w1, w2, ge  // ge = tcont
   106f4:	cmp	w0, #0x0
   106f8:	orr	w2, w1, #0x4
   106fc:	csel	w2, w2, w1, ne  // ne = any
   10700:	orr	w1, w1, #0x8
   10704:	csel	w1, w2, w1, ge  // ge = tcont
   10708:	mov	w0, w1
   1070c:	ldp	x19, x20, [sp, #16]
   10710:	ldr	x21, [sp, #32]
   10714:	ldp	x29, x30, [sp], #64
   10718:	ret
   1071c:	nop

0000000000010720 <mpc_set_q_q@@Base>:
   10720:	stp	x29, x30, [sp, #-48]!
   10724:	mov	x29, sp
   10728:	stp	x19, x20, [sp, #16]
   1072c:	mov	w20, w3
   10730:	stp	x21, x22, [sp, #32]
   10734:	mov	x22, x2
   10738:	mov	x21, x0
   1073c:	and	w2, w3, #0xf
   10740:	bl	52e0 <mpfr_set_q@plt>
   10744:	asr	w2, w20, #4
   10748:	mov	w19, w0
   1074c:	mov	x1, x22
   10750:	add	x0, x21, #0x20
   10754:	bl	52e0 <mpfr_set_q@plt>
   10758:	cmp	w19, #0x0
   1075c:	mov	w2, #0x2                   	// #2
   10760:	cset	w1, ne  // ne = any
   10764:	csel	w1, w1, w2, ge  // ge = tcont
   10768:	cmp	w0, #0x0
   1076c:	orr	w2, w1, #0x4
   10770:	csel	w2, w2, w1, ne  // ne = any
   10774:	orr	w1, w1, #0x8
   10778:	csel	w1, w2, w1, ge  // ge = tcont
   1077c:	mov	w0, w1
   10780:	ldp	x19, x20, [sp, #16]
   10784:	ldp	x21, x22, [sp, #32]
   10788:	ldp	x29, x30, [sp], #48
   1078c:	ret

0000000000010790 <mpc_set_si_si@@Base>:
   10790:	stp	x29, x30, [sp, #-48]!
   10794:	mov	x29, sp
   10798:	stp	x19, x20, [sp, #16]
   1079c:	mov	w20, w3
   107a0:	stp	x21, x22, [sp, #32]
   107a4:	mov	x22, x2
   107a8:	mov	x21, x0
   107ac:	and	w2, w3, #0xf
   107b0:	bl	52c0 <mpfr_set_si@plt>
   107b4:	asr	w2, w20, #4
   107b8:	mov	w19, w0
   107bc:	mov	x1, x22
   107c0:	add	x0, x21, #0x20
   107c4:	bl	52c0 <mpfr_set_si@plt>
   107c8:	cmp	w19, #0x0
   107cc:	mov	w2, #0x2                   	// #2
   107d0:	cset	w1, ne  // ne = any
   107d4:	csel	w1, w1, w2, ge  // ge = tcont
   107d8:	cmp	w0, #0x0
   107dc:	orr	w2, w1, #0x4
   107e0:	csel	w2, w2, w1, ne  // ne = any
   107e4:	orr	w1, w1, #0x8
   107e8:	csel	w1, w2, w1, ge  // ge = tcont
   107ec:	mov	w0, w1
   107f0:	ldp	x19, x20, [sp, #16]
   107f4:	ldp	x21, x22, [sp, #32]
   107f8:	ldp	x29, x30, [sp], #48
   107fc:	ret

0000000000010800 <mpc_set_ui_ui@@Base>:
   10800:	stp	x29, x30, [sp, #-48]!
   10804:	mov	x29, sp
   10808:	stp	x19, x20, [sp, #16]
   1080c:	mov	w20, w3
   10810:	stp	x21, x22, [sp, #32]
   10814:	mov	x22, x2
   10818:	mov	x21, x0
   1081c:	and	w2, w3, #0xf
   10820:	bl	5560 <mpfr_set_ui@plt>
   10824:	asr	w2, w20, #4
   10828:	mov	w19, w0
   1082c:	mov	x1, x22
   10830:	add	x0, x21, #0x20
   10834:	bl	5560 <mpfr_set_ui@plt>
   10838:	cmp	w19, #0x0
   1083c:	mov	w2, #0x2                   	// #2
   10840:	cset	w1, ne  // ne = any
   10844:	csel	w1, w1, w2, ge  // ge = tcont
   10848:	cmp	w0, #0x0
   1084c:	orr	w2, w1, #0x4
   10850:	csel	w2, w2, w1, ne  // ne = any
   10854:	orr	w1, w1, #0x8
   10858:	csel	w1, w2, w1, ge  // ge = tcont
   1085c:	mov	w0, w1
   10860:	ldp	x19, x20, [sp, #16]
   10864:	ldp	x21, x22, [sp, #32]
   10868:	ldp	x29, x30, [sp], #48
   1086c:	ret

0000000000010870 <mpc_set_z_z@@Base>:
   10870:	stp	x29, x30, [sp, #-48]!
   10874:	mov	x29, sp
   10878:	stp	x19, x20, [sp, #16]
   1087c:	mov	w20, w3
   10880:	stp	x21, x22, [sp, #32]
   10884:	mov	x22, x2
   10888:	mov	x21, x0
   1088c:	and	w2, w3, #0xf
   10890:	bl	4f10 <mpfr_set_z@plt>
   10894:	asr	w2, w20, #4
   10898:	mov	w19, w0
   1089c:	mov	x1, x22
   108a0:	add	x0, x21, #0x20
   108a4:	bl	4f10 <mpfr_set_z@plt>
   108a8:	cmp	w19, #0x0
   108ac:	mov	w2, #0x2                   	// #2
   108b0:	cset	w1, ne  // ne = any
   108b4:	csel	w1, w1, w2, ge  // ge = tcont
   108b8:	cmp	w0, #0x0
   108bc:	orr	w2, w1, #0x4
   108c0:	csel	w2, w2, w1, ne  // ne = any
   108c4:	orr	w1, w1, #0x8
   108c8:	csel	w1, w2, w1, ge  // ge = tcont
   108cc:	mov	w0, w1
   108d0:	ldp	x19, x20, [sp, #16]
   108d4:	ldp	x21, x22, [sp, #32]
   108d8:	ldp	x29, x30, [sp], #48
   108dc:	ret

00000000000108e0 <mpc_set_uj_uj@@Base>:
   108e0:	stp	x29, x30, [sp, #-48]!
   108e4:	mov	x29, sp
   108e8:	stp	x19, x20, [sp, #16]
   108ec:	mov	w20, w3
   108f0:	stp	x21, x22, [sp, #32]
   108f4:	mov	x22, x2
   108f8:	mov	x21, x0
   108fc:	and	w2, w3, #0xf
   10900:	bl	5450 <__gmpfr_set_uj@plt>
   10904:	asr	w2, w20, #4
   10908:	mov	w19, w0
   1090c:	mov	x1, x22
   10910:	add	x0, x21, #0x20
   10914:	bl	5450 <__gmpfr_set_uj@plt>
   10918:	cmp	w19, #0x0
   1091c:	mov	w2, #0x2                   	// #2
   10920:	cset	w1, ne  // ne = any
   10924:	csel	w1, w1, w2, ge  // ge = tcont
   10928:	cmp	w0, #0x0
   1092c:	orr	w2, w1, #0x4
   10930:	csel	w2, w2, w1, ne  // ne = any
   10934:	orr	w1, w1, #0x8
   10938:	csel	w1, w2, w1, ge  // ge = tcont
   1093c:	mov	w0, w1
   10940:	ldp	x19, x20, [sp, #16]
   10944:	ldp	x21, x22, [sp, #32]
   10948:	ldp	x29, x30, [sp], #48
   1094c:	ret

0000000000010950 <mpc_set_sj_sj@@Base>:
   10950:	stp	x29, x30, [sp, #-48]!
   10954:	mov	x29, sp
   10958:	stp	x19, x20, [sp, #16]
   1095c:	mov	w20, w3
   10960:	stp	x21, x22, [sp, #32]
   10964:	mov	x22, x2
   10968:	mov	x21, x0
   1096c:	and	w2, w3, #0xf
   10970:	bl	4dc0 <__gmpfr_set_sj@plt>
   10974:	asr	w2, w20, #4
   10978:	mov	w19, w0
   1097c:	mov	x1, x22
   10980:	add	x0, x21, #0x20
   10984:	bl	4dc0 <__gmpfr_set_sj@plt>
   10988:	cmp	w19, #0x0
   1098c:	mov	w2, #0x2                   	// #2
   10990:	cset	w1, ne  // ne = any
   10994:	csel	w1, w1, w2, ge  // ge = tcont
   10998:	cmp	w0, #0x0
   1099c:	orr	w2, w1, #0x4
   109a0:	csel	w2, w2, w1, ne  // ne = any
   109a4:	orr	w1, w1, #0x8
   109a8:	csel	w1, w2, w1, ge  // ge = tcont
   109ac:	mov	w0, w1
   109b0:	ldp	x19, x20, [sp, #16]
   109b4:	ldp	x21, x22, [sp, #32]
   109b8:	ldp	x29, x30, [sp], #48
   109bc:	ret

00000000000109c0 <mpc_sin@@Base>:
   109c0:	stp	x29, x30, [sp, #-16]!
   109c4:	mov	w3, w2
   109c8:	mov	w4, #0x0                   	// #0
   109cc:	mov	x29, sp
   109d0:	mov	x2, x1
   109d4:	mov	x1, #0x0                   	// #0
   109d8:	bl	5190 <mpc_sin_cos@plt>
   109dc:	and	w0, w0, #0xf
   109e0:	ldp	x29, x30, [sp], #16
   109e4:	ret

00000000000109e8 <mpc_fix_inf@@Base>:
   109e8:	stp	x29, x30, [sp, #-48]!
   109ec:	mov	x29, sp
   109f0:	str	x19, [sp, #16]
   109f4:	mov	x19, x0
   109f8:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   109fc:	ldr	x2, [x19, #16]
   10a00:	cmp	x2, x0
   10a04:	b.ne	10aa8 <mpc_fix_inf@@Base+0xc0>  // b.any
   10a08:	ldr	w0, [x19, #8]
   10a0c:	cmp	w1, #0x1
   10a10:	b.eq	10a3c <mpc_fix_inf@@Base+0x54>  // b.none
   10a14:	cmp	w0, #0x0
   10a18:	ccmp	w1, #0x2, #0x0, lt  // lt = tstop
   10a1c:	b.eq	10a7c <mpc_fix_inf@@Base+0x94>  // b.none
   10a20:	cmp	w1, #0x3
   10a24:	cset	w1, ne  // ne = any
   10a28:	orr	w1, w1, w0, lsr #31
   10a2c:	cbz	w1, 10a3c <mpc_fix_inf@@Base+0x54>
   10a30:	ldr	x19, [sp, #16]
   10a34:	ldp	x29, x30, [sp], #48
   10a38:	ret
   10a3c:	tbnz	w0, #31, 10a7c <mpc_fix_inf@@Base+0x94>
   10a40:	mov	x0, x19
   10a44:	bl	4bf0 <mpfr_nextbelow@plt>
   10a48:	ldr	x1, [x19, #16]
   10a4c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10a50:	cmp	x1, x0
   10a54:	b.ge	10a94 <mpc_fix_inf@@Base+0xac>  // b.tcont
   10a58:	mov	x2, #0x2                   	// #2
   10a5c:	mov	w0, #0x0                   	// #0
   10a60:	movk	x2, #0x8000, lsl #48
   10a64:	cmp	x1, x2
   10a68:	b.ne	10a30 <mpc_fix_inf@@Base+0x48>  // b.any
   10a6c:	str	w0, [sp, #44]
   10a70:	bl	4b40 <mpfr_set_erangeflag@plt>
   10a74:	ldr	w0, [sp, #44]
   10a78:	b	10a30 <mpc_fix_inf@@Base+0x48>
   10a7c:	mov	x0, x19
   10a80:	bl	4e50 <mpfr_nextabove@plt>
   10a84:	ldr	x1, [x19, #16]
   10a88:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10a8c:	cmp	x1, x0
   10a90:	b.lt	10a58 <mpc_fix_inf@@Base+0x70>  // b.tstop
   10a94:	ldr	w0, [x19, #8]
   10a98:	ldr	x19, [sp, #16]
   10a9c:	neg	w0, w0
   10aa0:	ldp	x29, x30, [sp], #48
   10aa4:	ret
   10aa8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   10aac:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10ab0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10ab4:	add	x4, x4, #0x680
   10ab8:	ldr	x0, [x0, #4008]
   10abc:	add	x2, x2, #0x690
   10ac0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   10ac4:	add	x1, x1, #0x318
   10ac8:	mov	w3, #0x115                 	// #277
   10acc:	ldr	x0, [x0]
   10ad0:	bl	55f0 <fprintf@plt>
   10ad4:	bl	5050 <abort@plt>

0000000000010ad8 <mpc_fix_zero@@Base>:
   10ad8:	stp	x29, x30, [sp, #-16]!
   10adc:	mov	x29, sp
   10ae0:	ldr	w2, [x0, #8]
   10ae4:	tbnz	w2, #31, 10b14 <mpc_fix_zero@@Base+0x3c>
   10ae8:	cmp	w1, #0x2
   10aec:	mov	w1, #0xffffffff            	// #-1
   10af0:	b.eq	10b00 <mpc_fix_zero@@Base+0x28>  // b.none
   10af4:	mov	w0, w1
   10af8:	ldp	x29, x30, [sp], #16
   10afc:	ret
   10b00:	bl	4e50 <mpfr_nextabove@plt>
   10b04:	mov	w1, #0x1                   	// #1
   10b08:	mov	w0, w1
   10b0c:	ldp	x29, x30, [sp], #16
   10b10:	ret
   10b14:	cmp	w1, #0x3
   10b18:	mov	w1, #0x1                   	// #1
   10b1c:	b.ne	10af4 <mpc_fix_zero@@Base+0x1c>  // b.any
   10b20:	bl	4bf0 <mpfr_nextbelow@plt>
   10b24:	mov	w1, #0xffffffff            	// #-1
   10b28:	mov	w0, w1
   10b2c:	ldp	x29, x30, [sp], #16
   10b30:	ret
   10b34:	nop

0000000000010b38 <mpc_sin_cos@@Base>:
   10b38:	stp	x29, x30, [sp, #-384]!
   10b3c:	mov	x29, sp
   10b40:	stp	x19, x20, [sp, #16]
   10b44:	stp	x25, x26, [sp, #64]
   10b48:	mov	x26, x0
   10b4c:	mov	x0, x2
   10b50:	stp	x27, x28, [sp, #80]
   10b54:	mov	x27, x2
   10b58:	str	x1, [sp, #104]
   10b5c:	str	w3, [sp, #120]
   10b60:	str	w4, [sp, #136]
   10b64:	bl	5520 <mpfr_number_p@plt>
   10b68:	cbz	w0, 10eb4 <mpc_sin_cos@@Base+0x37c>
   10b6c:	add	x0, x27, #0x20
   10b70:	str	x0, [sp, #112]
   10b74:	bl	5520 <mpfr_number_p@plt>
   10b78:	cbz	w0, 10eb4 <mpc_sin_cos@@Base+0x37c>
   10b7c:	ldr	x0, [x27, #48]
   10b80:	stp	x21, x22, [sp, #32]
   10b84:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10b88:	cmp	x0, x1
   10b8c:	b.eq	114fc <mpc_sin_cos@@Base+0x9c4>  // b.none
   10b90:	ldr	x2, [x27, #16]
   10b94:	cmp	x2, x1
   10b98:	b.eq	11274 <mpc_sin_cos@@Base+0x73c>  // b.none
   10b9c:	stp	x23, x24, [sp, #48]
   10ba0:	mov	x19, #0x2                   	// #2
   10ba4:	cbz	x26, 10bdc <mpc_sin_cos@@Base+0xa4>
   10ba8:	mov	x5, x19
   10bac:	ldr	x4, [x26]
   10bb0:	ldr	x19, [x26, #32]
   10bb4:	ldr	x3, [x27]
   10bb8:	cmp	x19, x4
   10bbc:	ldr	x1, [x27, #32]
   10bc0:	csel	x19, x19, x4, ge  // ge = tcont
   10bc4:	cmp	x19, x5
   10bc8:	csel	x19, x19, x5, ge  // ge = tcont
   10bcc:	cmp	x1, x3
   10bd0:	csel	x1, x1, x3, ge  // ge = tcont
   10bd4:	cmp	x1, x19
   10bd8:	b.le	111ac <mpc_sin_cos@@Base+0x674>
   10bdc:	ldr	x0, [sp, #104]
   10be0:	cbz	x0, 10bfc <mpc_sin_cos@@Base+0xc4>
   10be4:	ldr	x1, [x0]
   10be8:	ldr	x0, [x0, #32]
   10bec:	cmp	x0, x1
   10bf0:	csel	x0, x0, x1, ge  // ge = tcont
   10bf4:	cmp	x19, x0
   10bf8:	csel	x19, x19, x0, ge  // ge = tcont
   10bfc:	add	x20, sp, #0xa0
   10c00:	mov	x1, #0x2                   	// #2
   10c04:	mov	x0, x20
   10c08:	add	x21, sp, #0xc0
   10c0c:	bl	5490 <mpfr_init2@plt>
   10c10:	add	x24, sp, #0xe0
   10c14:	mov	x0, x21
   10c18:	mov	x1, #0x2                   	// #2
   10c1c:	bl	5490 <mpfr_init2@plt>
   10c20:	add	x23, sp, #0x100
   10c24:	mov	x0, x24
   10c28:	mov	x1, #0x2                   	// #2
   10c2c:	bl	5490 <mpfr_init2@plt>
   10c30:	add	x25, sp, #0x120
   10c34:	mov	x0, x23
   10c38:	mov	x1, #0x2                   	// #2
   10c3c:	bl	5490 <mpfr_init2@plt>
   10c40:	add	x28, sp, #0x140
   10c44:	mov	x0, x25
   10c48:	mov	x1, #0x2                   	// #2
   10c4c:	bl	5490 <mpfr_init2@plt>
   10c50:	ldr	w0, [sp, #120]
   10c54:	mov	x1, #0x2                   	// #2
   10c58:	asr	w22, w0, #4
   10c5c:	mov	x0, x28
   10c60:	str	w22, [sp, #152]
   10c64:	bl	5490 <mpfr_init2@plt>
   10c68:	ldr	w2, [sp, #136]
   10c6c:	cmp	w22, #0x0
   10c70:	ldr	w0, [sp, #120]
   10c74:	mov	w22, #0x0                   	// #0
   10c78:	asr	w1, w2, #4
   10c7c:	and	w0, w0, #0xf
   10c80:	str	w0, [sp, #124]
   10c84:	cset	x0, eq  // eq = none
   10c88:	cmp	w1, #0x0
   10c8c:	str	x0, [sp, #144]
   10c90:	cset	x0, eq  // eq = none
   10c94:	str	x0, [sp, #128]
   10c98:	and	w0, w2, #0xf
   10c9c:	str	w0, [sp, #140]
   10ca0:	str	w1, [sp, #156]
   10ca4:	nop
   10ca8:	add	w22, w22, #0x1
   10cac:	cmp	w22, #0x2
   10cb0:	b.gt	11930 <mpc_sin_cos@@Base+0xdf8>
   10cb4:	mov	x0, x19
   10cb8:	bl	4d70 <mpc_ceil_log2@plt>
   10cbc:	add	x0, x0, #0x5
   10cc0:	add	x19, x19, x0
   10cc4:	mov	x0, x20
   10cc8:	mov	x1, x19
   10ccc:	bl	4cd0 <mpfr_set_prec@plt>
   10cd0:	mov	x1, x19
   10cd4:	mov	x0, x21
   10cd8:	bl	4cd0 <mpfr_set_prec@plt>
   10cdc:	mov	x1, x19
   10ce0:	mov	x0, x24
   10ce4:	bl	4cd0 <mpfr_set_prec@plt>
   10ce8:	mov	x1, x19
   10cec:	mov	x0, x23
   10cf0:	bl	4cd0 <mpfr_set_prec@plt>
   10cf4:	mov	x1, x19
   10cf8:	mov	x0, x25
   10cfc:	bl	4cd0 <mpfr_set_prec@plt>
   10d00:	mov	x1, x19
   10d04:	mov	x0, x28
   10d08:	bl	4cd0 <mpfr_set_prec@plt>
   10d0c:	mov	x2, x27
   10d10:	mov	x1, x21
   10d14:	mov	w3, #0x0                   	// #0
   10d18:	mov	x0, x20
   10d1c:	bl	5570 <mpfr_sin_cos@plt>
   10d20:	ldr	x2, [sp, #112]
   10d24:	mov	x1, x23
   10d28:	mov	x0, x24
   10d2c:	mov	w3, #0x0                   	// #0
   10d30:	bl	4c20 <mpfr_sinh_cosh@plt>
   10d34:	cbz	x26, 11040 <mpc_sin_cos@@Base+0x508>
   10d38:	mov	x2, x23
   10d3c:	mov	x1, x20
   10d40:	mov	w3, #0x0                   	// #0
   10d44:	mov	x0, x25
   10d48:	bl	4bb0 <mpfr_mul@plt>
   10d4c:	mov	x0, x25
   10d50:	bl	5520 <mpfr_number_p@plt>
   10d54:	cbz	w0, 10d80 <mpc_sin_cos@@Base+0x248>
   10d58:	ldr	w0, [sp, #124]
   10d5c:	sub	x1, x19, #0x2
   10d60:	ldr	x4, [x26]
   10d64:	cmp	w0, #0x0
   10d68:	mov	w3, #0x1                   	// #1
   10d6c:	mov	x0, x25
   10d70:	cinc	x4, x4, eq  // eq = none
   10d74:	mov	w2, #0x0                   	// #0
   10d78:	bl	54a0 <mpfr_can_round@plt>
   10d7c:	cbz	w0, 10ca8 <mpc_sin_cos@@Base+0x170>
   10d80:	mov	x2, x24
   10d84:	mov	x1, x21
   10d88:	mov	w3, #0x0                   	// #0
   10d8c:	mov	x0, x28
   10d90:	bl	4bb0 <mpfr_mul@plt>
   10d94:	mov	x0, x28
   10d98:	bl	5520 <mpfr_number_p@plt>
   10d9c:	cbnz	w0, 1114c <mpc_sin_cos@@Base+0x614>
   10da0:	ldr	x0, [sp, #104]
   10da4:	cbnz	x0, 1109c <mpc_sin_cos@@Base+0x564>
   10da8:	ldr	w3, [sp, #296]
   10dac:	mov	x1, x25
   10db0:	ldr	w0, [sp, #120]
   10db4:	and	w19, w0, #0xf
   10db8:	mov	x0, x26
   10dbc:	mov	w2, w19
   10dc0:	bl	5220 <mpfr_set4@plt>
   10dc4:	ldr	x1, [sp, #304]
   10dc8:	mov	w22, w0
   10dcc:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10dd0:	cmp	x1, x0
   10dd4:	b.eq	11714 <mpc_sin_cos@@Base+0xbdc>  // b.none
   10dd8:	ldr	w2, [sp, #152]
   10ddc:	add	x26, x26, #0x20
   10de0:	ldr	w3, [sp, #328]
   10de4:	mov	x1, x28
   10de8:	mov	x0, x26
   10dec:	bl	5220 <mpfr_set4@plt>
   10df0:	ldr	x2, [sp, #336]
   10df4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   10df8:	cmp	x2, x1
   10dfc:	b.eq	115ec <mpc_sin_cos@@Base+0xab4>  // b.none
   10e00:	cmp	w22, #0x0
   10e04:	mov	w1, #0x2                   	// #2
   10e08:	cset	w19, ne  // ne = any
   10e0c:	csel	w19, w19, w1, ge  // ge = tcont
   10e10:	cmp	w0, #0x0
   10e14:	ldr	x0, [sp, #104]
   10e18:	orr	w1, w19, #0x4
   10e1c:	csel	w1, w1, w19, ne  // ne = any
   10e20:	orr	w19, w19, #0x8
   10e24:	csel	w19, w1, w19, ge  // ge = tcont
   10e28:	cbz	x0, 1104c <mpc_sin_cos@@Base+0x514>
   10e2c:	ldr	w0, [sp, #136]
   10e30:	mov	x1, x21
   10e34:	ldr	w3, [sp, #200]
   10e38:	and	w26, w0, #0xf
   10e3c:	ldr	x0, [sp, #104]
   10e40:	mov	w2, w26
   10e44:	bl	5220 <mpfr_set4@plt>
   10e48:	mov	w22, w0
   10e4c:	ldr	x1, [sp, #208]
   10e50:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   10e54:	cmp	x1, x0
   10e58:	b.eq	11738 <mpc_sin_cos@@Base+0xc00>  // b.none
   10e5c:	ldr	w2, [sp, #156]
   10e60:	mov	x1, x20
   10e64:	ldr	w3, [sp, #168]
   10e68:	ldr	x0, [sp, #104]
   10e6c:	add	x26, x0, #0x20
   10e70:	mov	x0, x26
   10e74:	bl	5220 <mpfr_set4@plt>
   10e78:	ldr	x2, [sp, #176]
   10e7c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   10e80:	cmp	x2, x1
   10e84:	b.eq	11728 <mpc_sin_cos@@Base+0xbf0>  // b.none
   10e88:	cmp	w22, #0x0
   10e8c:	mov	w2, #0x2                   	// #2
   10e90:	cset	w1, ne  // ne = any
   10e94:	csel	w1, w1, w2, ge  // ge = tcont
   10e98:	cmp	w0, #0x0
   10e9c:	orr	w2, w1, #0x4
   10ea0:	csel	w2, w2, w1, ne  // ne = any
   10ea4:	orr	w1, w1, #0x8
   10ea8:	csel	w1, w2, w1, ge  // ge = tcont
   10eac:	orr	w19, w19, w1, lsl #4
   10eb0:	b	1104c <mpc_sin_cos@@Base+0x514>
   10eb4:	ldr	x0, [sp, #104]
   10eb8:	cmp	x27, x26
   10ebc:	cset	w19, eq  // eq = none
   10ec0:	cmp	x27, x0
   10ec4:	csinc	w19, w19, wzr, ne  // ne = any
   10ec8:	cbnz	w19, 11184 <mpc_sin_cos@@Base+0x64c>
   10ecc:	ldp	x0, x1, [x27]
   10ed0:	stp	x0, x1, [sp, #320]
   10ed4:	ldp	x0, x1, [x27, #16]
   10ed8:	stp	x0, x1, [sp, #336]
   10edc:	ldp	x0, x1, [x27, #32]
   10ee0:	stp	x0, x1, [sp, #352]
   10ee4:	ldp	x0, x1, [x27, #48]
   10ee8:	stp	x0, x1, [sp, #368]
   10eec:	cbz	x26, 10f94 <mpc_sin_cos@@Base+0x45c>
   10ef0:	ldr	x0, [sp, #336]
   10ef4:	mov	x1, #0x2                   	// #2
   10ef8:	movk	x1, #0x8000, lsl #48
   10efc:	cmp	x0, x1
   10f00:	b.eq	111f8 <mpc_sin_cos@@Base+0x6c0>  // b.none
   10f04:	ldr	x2, [sp, #368]
   10f08:	cmp	x2, x1
   10f0c:	b.eq	111f8 <mpc_sin_cos@@Base+0x6c0>  // b.none
   10f10:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   10f14:	cmp	x0, x1
   10f18:	b.eq	115c4 <mpc_sin_cos@@Base+0xa8c>  // b.none
   10f1c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10f20:	cmp	x0, x1
   10f24:	b.eq	1141c <mpc_sin_cos@@Base+0x8e4>  // b.none
   10f28:	stp	x21, x22, [sp, #32]
   10f2c:	add	x21, sp, #0x100
   10f30:	mov	x0, x21
   10f34:	add	x20, sp, #0x120
   10f38:	mov	x1, #0x2                   	// #2
   10f3c:	bl	5490 <mpfr_init2@plt>
   10f40:	mov	x0, x20
   10f44:	mov	x1, #0x2                   	// #2
   10f48:	bl	5490 <mpfr_init2@plt>
   10f4c:	mov	w3, #0x1                   	// #1
   10f50:	add	x2, sp, #0x140
   10f54:	mov	x1, x20
   10f58:	mov	x0, x21
   10f5c:	bl	5570 <mpfr_sin_cos@plt>
   10f60:	ldr	w1, [sp, #264]
   10f64:	mov	x0, x26
   10f68:	bl	5170 <mpfr_set_inf@plt>
   10f6c:	ldr	w2, [sp, #296]
   10f70:	add	x0, x26, #0x20
   10f74:	ldr	w1, [sp, #360]
   10f78:	mul	w1, w2, w1
   10f7c:	bl	5170 <mpfr_set_inf@plt>
   10f80:	mov	x0, x21
   10f84:	bl	4db0 <mpfr_clear@plt>
   10f88:	mov	x0, x20
   10f8c:	bl	4db0 <mpfr_clear@plt>
   10f90:	ldp	x21, x22, [sp, #32]
   10f94:	ldr	x0, [sp, #104]
   10f98:	cbz	x0, 11020 <mpc_sin_cos@@Base+0x4e8>
   10f9c:	ldr	x0, [sp, #336]
   10fa0:	mov	x20, #0x2                   	// #2
   10fa4:	movk	x20, #0x8000, lsl #48
   10fa8:	cmp	x0, x20
   10fac:	ldr	x1, [sp, #368]
   10fb0:	b.eq	1123c <mpc_sin_cos@@Base+0x704>  // b.none
   10fb4:	ldr	x2, [sp, #104]
   10fb8:	stp	x21, x22, [sp, #32]
   10fbc:	cmp	x1, x20
   10fc0:	add	x21, x2, #0x20
   10fc4:	b.eq	111d0 <mpc_sin_cos@@Base+0x698>  // b.none
   10fc8:	mov	x22, #0x8000000000000003    	// #-9223372036854775805
   10fcc:	cmp	x0, x22
   10fd0:	b.eq	113b0 <mpc_sin_cos@@Base+0x878>  // b.none
   10fd4:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   10fd8:	cmp	x0, x1
   10fdc:	b.ne	11430 <mpc_sin_cos@@Base+0x8f8>  // b.any
   10fe0:	ldr	w4, [sp, #328]
   10fe4:	add	x1, sp, #0x140
   10fe8:	ldr	w3, [sp, #360]
   10fec:	mov	w20, #0x1                   	// #1
   10ff0:	mvn	w4, w4
   10ff4:	ldr	w0, [sp, #136]
   10ff8:	lsr	w3, w3, #31
   10ffc:	cmp	w3, w4, lsr #31
   11000:	asr	w2, w0, #4
   11004:	cneg	w3, w20, ne  // ne = any
   11008:	mov	x0, x21
   1100c:	bl	5220 <mpfr_set4@plt>
   11010:	ldr	x0, [sp, #104]
   11014:	mov	w1, w20
   11018:	bl	5170 <mpfr_set_inf@plt>
   1101c:	ldp	x21, x22, [sp, #32]
   11020:	cbnz	w19, 11174 <mpc_sin_cos@@Base+0x63c>
   11024:	mov	w19, #0x0                   	// #0
   11028:	mov	w0, w19
   1102c:	ldp	x19, x20, [sp, #16]
   11030:	ldp	x25, x26, [sp, #64]
   11034:	ldp	x27, x28, [sp, #80]
   11038:	ldp	x29, x30, [sp], #384
   1103c:	ret
   11040:	ldr	x0, [sp, #104]
   11044:	cbnz	x0, 1109c <mpc_sin_cos@@Base+0x564>
   11048:	mov	w19, #0x0                   	// #0
   1104c:	mov	x0, x20
   11050:	bl	4db0 <mpfr_clear@plt>
   11054:	mov	x0, x21
   11058:	bl	4db0 <mpfr_clear@plt>
   1105c:	mov	x0, x24
   11060:	bl	4db0 <mpfr_clear@plt>
   11064:	mov	x0, x23
   11068:	bl	4db0 <mpfr_clear@plt>
   1106c:	mov	x0, x25
   11070:	bl	4db0 <mpfr_clear@plt>
   11074:	mov	x0, x28
   11078:	bl	4db0 <mpfr_clear@plt>
   1107c:	ldp	x21, x22, [sp, #32]
   11080:	ldp	x23, x24, [sp, #48]
   11084:	mov	w0, w19
   11088:	ldp	x19, x20, [sp, #16]
   1108c:	ldp	x25, x26, [sp, #64]
   11090:	ldp	x27, x28, [sp, #80]
   11094:	ldp	x29, x30, [sp], #384
   11098:	ret
   1109c:	mov	x2, x23
   110a0:	mov	x1, x21
   110a4:	mov	w3, #0x0                   	// #0
   110a8:	mov	x0, x21
   110ac:	bl	4bb0 <mpfr_mul@plt>
   110b0:	mov	x0, x21
   110b4:	bl	5520 <mpfr_number_p@plt>
   110b8:	cbz	w0, 110e8 <mpc_sin_cos@@Base+0x5b0>
   110bc:	ldr	w0, [sp, #140]
   110c0:	sub	x1, x19, #0x2
   110c4:	mov	w3, #0x1                   	// #1
   110c8:	mov	w2, #0x0                   	// #0
   110cc:	cmp	w0, #0x0
   110d0:	ldr	x0, [sp, #104]
   110d4:	ldr	x4, [x0]
   110d8:	mov	x0, x21
   110dc:	cinc	x4, x4, eq  // eq = none
   110e0:	bl	54a0 <mpfr_can_round@plt>
   110e4:	cbz	w0, 10ca8 <mpc_sin_cos@@Base+0x170>
   110e8:	mov	x2, x24
   110ec:	mov	x1, x20
   110f0:	mov	w3, #0x0                   	// #0
   110f4:	mov	x0, x20
   110f8:	bl	4bb0 <mpfr_mul@plt>
   110fc:	mov	x1, x20
   11100:	mov	w2, #0x0                   	// #0
   11104:	mov	x0, x20
   11108:	bl	4bc0 <mpfr_neg@plt>
   1110c:	mov	x0, x20
   11110:	bl	5520 <mpfr_number_p@plt>
   11114:	cbz	w0, 11140 <mpc_sin_cos@@Base+0x608>
   11118:	ldr	x0, [sp, #104]
   1111c:	sub	x1, x19, #0x2
   11120:	mov	w3, #0x1                   	// #1
   11124:	mov	w2, #0x0                   	// #0
   11128:	ldr	x4, [x0, #32]
   1112c:	ldr	x0, [sp, #128]
   11130:	add	x4, x0, x4
   11134:	mov	x0, x20
   11138:	bl	54a0 <mpfr_can_round@plt>
   1113c:	cbz	w0, 10ca8 <mpc_sin_cos@@Base+0x170>
   11140:	cbnz	x26, 10da8 <mpc_sin_cos@@Base+0x270>
   11144:	mov	w19, #0x0                   	// #0
   11148:	b	10e2c <mpc_sin_cos@@Base+0x2f4>
   1114c:	ldr	x4, [x26, #32]
   11150:	sub	x1, x19, #0x2
   11154:	ldr	x0, [sp, #144]
   11158:	mov	w3, #0x1                   	// #1
   1115c:	mov	w2, #0x0                   	// #0
   11160:	add	x4, x0, x4
   11164:	mov	x0, x28
   11168:	bl	54a0 <mpfr_can_round@plt>
   1116c:	cbnz	w0, 10da0 <mpc_sin_cos@@Base+0x268>
   11170:	b	10ca8 <mpc_sin_cos@@Base+0x170>
   11174:	add	x0, sp, #0x140
   11178:	mov	w19, #0x0                   	// #0
   1117c:	bl	4a50 <mpc_clear@plt>
   11180:	b	11028 <mpc_sin_cos@@Base+0x4f0>
   11184:	ldr	x1, [x27]
   11188:	add	x28, sp, #0x140
   1118c:	ldr	x2, [x27, #32]
   11190:	mov	x0, x28
   11194:	bl	5410 <mpc_init3@plt>
   11198:	mov	x0, x28
   1119c:	mov	x1, x27
   111a0:	mov	w2, #0x0                   	// #0
   111a4:	bl	55d0 <mpc_set@plt>
   111a8:	b	10eec <mpc_sin_cos@@Base+0x3b4>
   111ac:	cmp	x0, x2
   111b0:	csel	x0, x0, x2, ge  // ge = tcont
   111b4:	tbz	x0, #63, 10bdc <mpc_sin_cos@@Base+0xa4>
   111b8:	neg	x0, x0, lsl #1
   111bc:	add	x1, x0, x5
   111c0:	add	x0, x0, #0x3
   111c4:	cmp	x1, x19
   111c8:	csel	x19, x0, x19, ge  // ge = tcont
   111cc:	b	10bdc <mpc_sin_cos@@Base+0xa4>
   111d0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   111d4:	cmp	x0, x1
   111d8:	b.eq	11878 <mpc_sin_cos@@Base+0xd40>  // b.none
   111dc:	mov	x0, x21
   111e0:	bl	4a80 <mpfr_set_nan@plt>
   111e4:	ldr	x0, [sp, #104]
   111e8:	bl	4a80 <mpfr_set_nan@plt>
   111ec:	ldp	x21, x22, [sp, #32]
   111f0:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   111f4:	b	11174 <mpc_sin_cos@@Base+0x63c>
   111f8:	ldr	w2, [sp, #120]
   111fc:	add	x28, sp, #0x140
   11200:	mov	x1, x28
   11204:	mov	x0, x26
   11208:	bl	55d0 <mpc_set@plt>
   1120c:	ldr	x0, [sp, #368]
   11210:	mov	x1, #0x2                   	// #2
   11214:	movk	x1, #0x8000, lsl #48
   11218:	cmp	x0, x1
   1121c:	b.eq	11374 <mpc_sin_cos@@Base+0x83c>  // b.none
   11220:	and	x0, x0, #0xfffffffffffffffd
   11224:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   11228:	cmp	x0, x1
   1122c:	b.eq	10f94 <mpc_sin_cos@@Base+0x45c>  // b.none
   11230:	add	x0, x26, #0x20
   11234:	bl	4a80 <mpfr_set_nan@plt>
   11238:	b	10f94 <mpc_sin_cos@@Base+0x45c>
   1123c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   11240:	cmp	x1, x0
   11244:	b.eq	11704 <mpc_sin_cos@@Base+0xbcc>  // b.none
   11248:	ldr	x0, [sp, #104]
   1124c:	bl	4a80 <mpfr_set_nan@plt>
   11250:	ldr	x0, [sp, #104]
   11254:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   11258:	ldr	x2, [sp, #368]
   1125c:	add	x0, x0, #0x20
   11260:	cmp	x2, x1
   11264:	b.eq	116e8 <mpc_sin_cos@@Base+0xbb0>  // b.none
   11268:	bl	4a80 <mpfr_set_nan@plt>
   1126c:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   11270:	b	11174 <mpc_sin_cos@@Base+0x63c>
   11274:	ldr	x0, [sp, #104]
   11278:	cmp	x27, x26
   1127c:	cset	w20, eq  // eq = none
   11280:	cmp	x27, x0
   11284:	csinc	w20, w20, wzr, ne  // ne = any
   11288:	cbnz	w20, 1177c <mpc_sin_cos@@Base+0xc44>
   1128c:	ldp	x0, x1, [x27]
   11290:	stp	x0, x1, [sp, #320]
   11294:	ldp	x0, x1, [x27, #16]
   11298:	stp	x0, x1, [sp, #336]
   1129c:	ldp	x0, x1, [x27, #32]
   112a0:	stp	x0, x1, [sp, #352]
   112a4:	ldp	x0, x1, [x27, #48]
   112a8:	stp	x0, x1, [sp, #368]
   112ac:	mov	w19, #0x0                   	// #0
   112b0:	cbz	x26, 112e4 <mpc_sin_cos@@Base+0x7ac>
   112b4:	ldr	w3, [sp, #328]
   112b8:	add	x19, sp, #0x140
   112bc:	mov	x1, x19
   112c0:	mov	w2, #0x0                   	// #0
   112c4:	mov	x0, x26
   112c8:	bl	5220 <mpfr_set4@plt>
   112cc:	ldr	w0, [sp, #120]
   112d0:	add	x1, x19, #0x20
   112d4:	asr	w2, w0, #4
   112d8:	add	x0, x26, #0x20
   112dc:	bl	4fd0 <mpfr_sinh@plt>
   112e0:	mov	w19, w0
   112e4:	ldr	x0, [sp, #104]
   112e8:	mov	w21, #0x0                   	// #0
   112ec:	cbz	x0, 11340 <mpc_sin_cos@@Base+0x808>
   112f0:	ldr	w1, [sp, #136]
   112f4:	mov	x21, x0
   112f8:	and	w2, w1, #0xf
   112fc:	add	x1, sp, #0x160
   11300:	bl	4a60 <mpfr_cosh@plt>
   11304:	add	x1, x21, #0x20
   11308:	ldr	w3, [sp, #328]
   1130c:	ldr	w2, [sp, #360]
   11310:	mov	w5, #0x1                   	// #1
   11314:	mvn	w3, w3
   11318:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   1131c:	str	w5, [x1, #8]
   11320:	mov	w21, w0
   11324:	str	x4, [x1, #16]
   11328:	lsr	w2, w2, #31
   1132c:	cmp	w2, w3, lsr #31
   11330:	b.eq	11340 <mpc_sin_cos@@Base+0x808>  // b.none
   11334:	mov	x0, x1
   11338:	mov	w2, #0x0                   	// #0
   1133c:	bl	4bc0 <mpfr_neg@plt>
   11340:	cbnz	w20, 11770 <mpc_sin_cos@@Base+0xc38>
   11344:	cmp	w19, #0x0
   11348:	mov	w0, #0x4                   	// #4
   1134c:	csel	w0, w19, w0, eq  // eq = none
   11350:	mov	w19, #0x8                   	// #8
   11354:	csel	w19, w0, w19, ge  // ge = tcont
   11358:	cmp	w21, #0x0
   1135c:	orr	w0, w19, #0x10
   11360:	csel	w0, w0, w19, ne  // ne = any
   11364:	orr	w19, w19, #0x20
   11368:	csel	w19, w0, w19, ge  // ge = tcont
   1136c:	ldp	x21, x22, [sp, #32]
   11370:	b	11084 <mpc_sin_cos@@Base+0x54c>
   11374:	ldr	x1, [sp, #336]
   11378:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1137c:	cmp	x1, x0
   11380:	b.ne	115fc <mpc_sin_cos@@Base+0xac4>  // b.any
   11384:	ldr	x0, [sp, #104]
   11388:	stp	x21, x22, [sp, #32]
   1138c:	add	x21, x0, #0x20
   11390:	cbz	x0, 1181c <mpc_sin_cos@@Base+0xce4>
   11394:	ldr	w3, [sp, #328]
   11398:	mov	x1, x28
   1139c:	ldr	w0, [sp, #136]
   113a0:	asr	w2, w0, #4
   113a4:	mov	x0, x21
   113a8:	bl	5220 <mpfr_set4@plt>
   113ac:	b	111e4 <mpc_sin_cos@@Base+0x6ac>
   113b0:	ldr	w20, [sp, #328]
   113b4:	cmp	x1, x0
   113b8:	ldr	w22, [sp, #360]
   113bc:	mvn	w20, w20
   113c0:	lsr	w22, w22, #31
   113c4:	lsr	w20, w20, #31
   113c8:	b.ne	11608 <mpc_sin_cos@@Base+0xad0>  // b.any
   113cc:	ldr	x0, [sp, #104]
   113d0:	cmp	w20, w22
   113d4:	mov	w1, #0x1                   	// #1
   113d8:	cneg	w1, w1, ne  // ne = any
   113dc:	bl	5170 <mpfr_set_inf@plt>
   113e0:	ldr	x1, [sp, #368]
   113e4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   113e8:	cmp	x1, x0
   113ec:	b.ne	1174c <mpc_sin_cos@@Base+0xc14>  // b.any
   113f0:	ldr	w0, [sp, #136]
   113f4:	cmp	w20, w22
   113f8:	add	x1, sp, #0x160
   113fc:	mov	w3, #0x1                   	// #1
   11400:	cneg	w3, w3, ne  // ne = any
   11404:	asr	w2, w0, #4
   11408:	mov	x0, x21
   1140c:	bl	5220 <mpfr_set4@plt>
   11410:	ldp	x21, x22, [sp, #32]
   11414:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   11418:	b	11174 <mpc_sin_cos@@Base+0x63c>
   1141c:	ldr	w2, [sp, #120]
   11420:	mov	x0, x26
   11424:	add	x1, sp, #0x140
   11428:	bl	55d0 <mpc_set@plt>
   1142c:	b	10f94 <mpc_sin_cos@@Base+0x45c>
   11430:	add	x25, sp, #0x120
   11434:	mov	x1, #0x2                   	// #2
   11438:	mov	x0, x25
   1143c:	stp	x23, x24, [sp, #48]
   11440:	bl	5490 <mpfr_init2@plt>
   11444:	add	x23, sp, #0x100
   11448:	mov	x1, #0x2                   	// #2
   1144c:	mov	x0, x23
   11450:	bl	5490 <mpfr_init2@plt>
   11454:	mov	x1, x25
   11458:	mov	x0, x23
   1145c:	add	x2, sp, #0x140
   11460:	mov	w3, #0x0                   	// #0
   11464:	bl	5570 <mpfr_sin_cos@plt>
   11468:	ldr	x0, [sp, #304]
   1146c:	cmp	x0, x22
   11470:	b.lt	11614 <mpc_sin_cos@@Base+0xadc>  // b.tstop
   11474:	ldr	w1, [sp, #296]
   11478:	ldr	x0, [sp, #104]
   1147c:	bl	5170 <mpfr_set_inf@plt>
   11480:	ldr	x0, [sp, #368]
   11484:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   11488:	cmp	x0, x1
   1148c:	b.ge	11768 <mpc_sin_cos@@Base+0xc30>  // b.tcont
   11490:	mov	x1, #0x2                   	// #2
   11494:	mov	w22, #0x0                   	// #0
   11498:	movk	x1, #0x8000, lsl #48
   1149c:	cmp	x0, x1
   114a0:	b.eq	118d4 <mpc_sin_cos@@Base+0xd9c>  // b.none
   114a4:	ldr	x0, [sp, #272]
   114a8:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   114ac:	cmp	x0, x1
   114b0:	b.ge	11760 <mpc_sin_cos@@Base+0xc28>  // b.tcont
   114b4:	mov	x1, #0x2                   	// #2
   114b8:	mov	w20, #0x0                   	// #0
   114bc:	movk	x1, #0x8000, lsl #48
   114c0:	cmp	x0, x1
   114c4:	b.eq	118cc <mpc_sin_cos@@Base+0xd94>  // b.none
   114c8:	cmp	w22, w20
   114cc:	mov	w1, #0x1                   	// #1
   114d0:	cneg	w1, w1, eq  // eq = none
   114d4:	mov	x0, x21
   114d8:	bl	5170 <mpfr_set_inf@plt>
   114dc:	mov	x0, x23
   114e0:	bl	4db0 <mpfr_clear@plt>
   114e4:	mov	x0, x25
   114e8:	bl	4db0 <mpfr_clear@plt>
   114ec:	ldp	x21, x22, [sp, #32]
   114f0:	ldp	x23, x24, [sp, #48]
   114f4:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   114f8:	b	11174 <mpc_sin_cos@@Base+0x63c>
   114fc:	ldr	w0, [sp, #120]
   11500:	ldr	w22, [x27, #40]
   11504:	and	w20, w0, #0xf
   11508:	ldr	w0, [sp, #136]
   1150c:	and	w19, w0, #0xf
   11510:	cbz	x26, 11630 <mpc_sin_cos@@Base+0xaf8>
   11514:	ldr	x1, [x26]
   11518:	add	x25, sp, #0x120
   1151c:	mov	x0, x25
   11520:	bl	5490 <mpfr_init2@plt>
   11524:	ldr	x0, [sp, #104]
   11528:	cbz	x0, 1183c <mpc_sin_cos@@Base+0xd04>
   1152c:	ldr	x0, [sp, #104]
   11530:	add	x28, sp, #0x140
   11534:	ldr	x1, [x0]
   11538:	mov	x0, x28
   1153c:	bl	5490 <mpfr_init2@plt>
   11540:	mov	w2, w20
   11544:	mov	x1, x27
   11548:	mov	x0, x25
   1154c:	bl	50d0 <mpfr_sin@plt>
   11550:	mov	w2, w19
   11554:	mov	w21, w0
   11558:	mov	x1, x27
   1155c:	mov	x0, x28
   11560:	bl	50a0 <mpfr_cos@plt>
   11564:	mov	w20, w0
   11568:	ldr	w3, [sp, #296]
   1156c:	mov	x1, x25
   11570:	mov	x0, x26
   11574:	mov	w2, #0x0                   	// #0
   11578:	bl	5220 <mpfr_set4@plt>
   1157c:	ldr	w1, [sp, #328]
   11580:	add	x0, x26, #0x20
   11584:	tbnz	w22, #31, 117bc <mpc_sin_cos@@Base+0xc84>
   11588:	tbnz	w1, #31, 118f0 <mpc_sin_cos@@Base+0xdb8>
   1158c:	mov	w1, #0x1                   	// #1
   11590:	bl	4d60 <mpfr_set_zero@plt>
   11594:	ldr	x0, [sp, #104]
   11598:	cbnz	x0, 11900 <mpc_sin_cos@@Base+0xdc8>
   1159c:	mov	x0, x25
   115a0:	bl	4db0 <mpfr_clear@plt>
   115a4:	mov	x0, x28
   115a8:	bl	4db0 <mpfr_clear@plt>
   115ac:	cmp	w21, #0x0
   115b0:	mov	w0, #0x2                   	// #2
   115b4:	cset	w19, ne  // ne = any
   115b8:	csel	w19, w19, w0, ge  // ge = tcont
   115bc:	ldp	x21, x22, [sp, #32]
   115c0:	b	11084 <mpc_sin_cos@@Base+0x54c>
   115c4:	mov	x0, x26
   115c8:	bl	4a80 <mpfr_set_nan@plt>
   115cc:	ldr	x1, [sp, #368]
   115d0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   115d4:	add	x0, x26, #0x20
   115d8:	and	x1, x1, #0xfffffffffffffffd
   115dc:	cmp	x1, x2
   115e0:	b.eq	117a4 <mpc_sin_cos@@Base+0xc6c>  // b.none
   115e4:	bl	4a80 <mpfr_set_nan@plt>
   115e8:	b	10f94 <mpc_sin_cos@@Base+0x45c>
   115ec:	ldr	w1, [sp, #152]
   115f0:	mov	x0, x26
   115f4:	bl	4e20 <mpc_fix_inf@plt>
   115f8:	b	10e00 <mpc_sin_cos@@Base+0x2c8>
   115fc:	mov	x0, x26
   11600:	bl	4a80 <mpfr_set_nan@plt>
   11604:	b	10f94 <mpc_sin_cos@@Base+0x45c>
   11608:	ldr	x0, [sp, #104]
   1160c:	bl	4a80 <mpfr_set_nan@plt>
   11610:	b	113e0 <mpc_sin_cos@@Base+0x8a8>
   11614:	cmp	x0, x20
   11618:	mov	w1, #0x0                   	// #0
   1161c:	b.ne	11478 <mpc_sin_cos@@Base+0x940>  // b.any
   11620:	str	w1, [sp, #112]
   11624:	bl	4b40 <mpfr_set_erangeflag@plt>
   11628:	ldr	w1, [sp, #112]
   1162c:	b	11478 <mpc_sin_cos@@Base+0x940>
   11630:	add	x25, sp, #0x120
   11634:	mov	x1, #0x2                   	// #2
   11638:	mov	x0, x25
   1163c:	bl	5490 <mpfr_init2@plt>
   11640:	ldr	x0, [sp, #104]
   11644:	cbz	x0, 11880 <mpc_sin_cos@@Base+0xd48>
   11648:	ldr	x21, [sp, #104]
   1164c:	add	x28, sp, #0x140
   11650:	mov	x0, x28
   11654:	ldr	x1, [x21]
   11658:	bl	5490 <mpfr_init2@plt>
   1165c:	mov	w2, w20
   11660:	mov	x1, x27
   11664:	mov	x0, x25
   11668:	bl	50d0 <mpfr_sin@plt>
   1166c:	mov	w2, w19
   11670:	mov	x1, x27
   11674:	mov	x0, x28
   11678:	bl	50a0 <mpfr_cos@plt>
   1167c:	ldr	w3, [sp, #328]
   11680:	mov	w20, w0
   11684:	mov	x1, x28
   11688:	mov	x0, x21
   1168c:	mov	w2, #0x0                   	// #0
   11690:	bl	5220 <mpfr_set4@plt>
   11694:	add	x0, x21, #0x20
   11698:	tbnz	w22, #31, 11828 <mpc_sin_cos@@Base+0xcf0>
   1169c:	ldr	w1, [sp, #296]
   116a0:	tbnz	w1, #31, 11830 <mpc_sin_cos@@Base+0xcf8>
   116a4:	mov	w1, #0xffffffff            	// #-1
   116a8:	bl	4d60 <mpfr_set_zero@plt>
   116ac:	mov	x0, x25
   116b0:	mov	w21, #0x0                   	// #0
   116b4:	bl	4db0 <mpfr_clear@plt>
   116b8:	mov	x0, x28
   116bc:	bl	4db0 <mpfr_clear@plt>
   116c0:	cmp	w21, #0x0
   116c4:	cset	w19, ne  // ne = any
   116c8:	cmp	w20, #0x0
   116cc:	mov	w1, w19
   116d0:	orr	w0, w19, #0x10
   116d4:	orr	w19, w19, #0x20
   116d8:	csel	w0, w0, w1, ne  // ne = any
   116dc:	csel	w19, w0, w19, ge  // ge = tcont
   116e0:	ldp	x21, x22, [sp, #32]
   116e4:	b	11084 <mpc_sin_cos@@Base+0x54c>
   116e8:	ldr	w3, [sp, #360]
   116ec:	ldr	w1, [sp, #136]
   116f0:	asr	w2, w1, #4
   116f4:	add	x1, sp, #0x160
   116f8:	bl	5220 <mpfr_set4@plt>
   116fc:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   11700:	b	11174 <mpc_sin_cos@@Base+0x63c>
   11704:	ldr	x0, [sp, #104]
   11708:	mov	w1, #0x1                   	// #1
   1170c:	bl	5170 <mpfr_set_inf@plt>
   11710:	b	11250 <mpc_sin_cos@@Base+0x718>
   11714:	mov	w1, w19
   11718:	mov	x0, x26
   1171c:	bl	4e20 <mpc_fix_inf@plt>
   11720:	mov	w22, w0
   11724:	b	10dd8 <mpc_sin_cos@@Base+0x2a0>
   11728:	ldr	w1, [sp, #156]
   1172c:	mov	x0, x26
   11730:	bl	4e20 <mpc_fix_inf@plt>
   11734:	b	10e88 <mpc_sin_cos@@Base+0x350>
   11738:	ldr	x0, [sp, #104]
   1173c:	mov	w1, w26
   11740:	bl	4e20 <mpc_fix_inf@plt>
   11744:	mov	w22, w0
   11748:	b	10e5c <mpc_sin_cos@@Base+0x324>
   1174c:	mov	x0, x21
   11750:	bl	4a80 <mpfr_set_nan@plt>
   11754:	ldp	x21, x22, [sp, #32]
   11758:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   1175c:	b	11174 <mpc_sin_cos@@Base+0x63c>
   11760:	ldr	w20, [sp, #264]
   11764:	b	114c8 <mpc_sin_cos@@Base+0x990>
   11768:	ldr	w22, [sp, #360]
   1176c:	b	114a4 <mpc_sin_cos@@Base+0x96c>
   11770:	add	x0, sp, #0x140
   11774:	bl	4a50 <mpc_clear@plt>
   11778:	b	11344 <mpc_sin_cos@@Base+0x80c>
   1177c:	ldr	x1, [x27]
   11780:	add	x19, sp, #0x140
   11784:	ldr	x2, [x27, #32]
   11788:	mov	x0, x19
   1178c:	bl	5410 <mpc_init3@plt>
   11790:	mov	x0, x19
   11794:	mov	x1, x27
   11798:	mov	w2, #0x0                   	// #0
   1179c:	bl	55d0 <mpc_set@plt>
   117a0:	b	112ac <mpc_sin_cos@@Base+0x774>
   117a4:	ldr	w3, [sp, #360]
   117a8:	ldr	w1, [sp, #120]
   117ac:	asr	w2, w1, #4
   117b0:	add	x1, sp, #0x160
   117b4:	bl	5220 <mpfr_set4@plt>
   117b8:	b	10f94 <mpc_sin_cos@@Base+0x45c>
   117bc:	tbnz	w1, #31, 118dc <mpc_sin_cos@@Base+0xda4>
   117c0:	mov	w1, #0xffffffff            	// #-1
   117c4:	bl	4d60 <mpfr_set_zero@plt>
   117c8:	ldr	x0, [sp, #104]
   117cc:	cbz	x0, 1159c <mpc_sin_cos@@Base+0xa64>
   117d0:	ldr	w3, [sp, #328]
   117d4:	mov	x1, x28
   117d8:	ldr	x19, [sp, #104]
   117dc:	mov	w2, #0x0                   	// #0
   117e0:	mov	x0, x19
   117e4:	bl	5220 <mpfr_set4@plt>
   117e8:	ldr	w2, [sp, #296]
   117ec:	mov	w1, #0x1                   	// #1
   117f0:	add	x0, x19, #0x20
   117f4:	cmp	w2, #0x0
   117f8:	cneg	w1, w1, lt  // lt = tstop
   117fc:	bl	4d60 <mpfr_set_zero@plt>
   11800:	mov	w19, #0x2                   	// #2
   11804:	mov	x0, x25
   11808:	bl	4db0 <mpfr_clear@plt>
   1180c:	mov	x0, x28
   11810:	bl	4db0 <mpfr_clear@plt>
   11814:	tbnz	w21, #31, 116c8 <mpc_sin_cos@@Base+0xb90>
   11818:	b	116c0 <mpc_sin_cos@@Base+0xb88>
   1181c:	ldp	x21, x22, [sp, #32]
   11820:	cbz	w19, 11024 <mpc_sin_cos@@Base+0x4ec>
   11824:	b	11174 <mpc_sin_cos@@Base+0x63c>
   11828:	ldr	w1, [sp, #296]
   1182c:	tbnz	w1, #31, 116a4 <mpc_sin_cos@@Base+0xb6c>
   11830:	mov	w21, #0x0                   	// #0
   11834:	mov	w1, #0x1                   	// #1
   11838:	b	117fc <mpc_sin_cos@@Base+0xcc4>
   1183c:	add	x28, sp, #0x140
   11840:	mov	x1, #0x2                   	// #2
   11844:	mov	x0, x28
   11848:	bl	5490 <mpfr_init2@plt>
   1184c:	mov	w2, w20
   11850:	mov	x1, x27
   11854:	mov	x0, x25
   11858:	bl	50d0 <mpfr_sin@plt>
   1185c:	mov	w2, w19
   11860:	mov	w21, w0
   11864:	mov	x1, x27
   11868:	mov	x0, x28
   1186c:	bl	50a0 <mpfr_cos@plt>
   11870:	mov	w20, w0
   11874:	b	11568 <mpc_sin_cos@@Base+0xa30>
   11878:	add	x28, sp, #0x140
   1187c:	b	11394 <mpc_sin_cos@@Base+0x85c>
   11880:	add	x21, sp, #0x140
   11884:	mov	x1, #0x2                   	// #2
   11888:	mov	x0, x21
   1188c:	bl	5490 <mpfr_init2@plt>
   11890:	mov	w2, w20
   11894:	mov	x1, x27
   11898:	mov	x0, x25
   1189c:	bl	50d0 <mpfr_sin@plt>
   118a0:	mov	w2, w19
   118a4:	mov	x1, x27
   118a8:	mov	x0, x21
   118ac:	bl	50a0 <mpfr_cos@plt>
   118b0:	mov	x0, x25
   118b4:	mov	w19, #0x0                   	// #0
   118b8:	bl	4db0 <mpfr_clear@plt>
   118bc:	mov	x0, x21
   118c0:	bl	4db0 <mpfr_clear@plt>
   118c4:	ldp	x21, x22, [sp, #32]
   118c8:	b	11084 <mpc_sin_cos@@Base+0x54c>
   118cc:	bl	4b40 <mpfr_set_erangeflag@plt>
   118d0:	b	114c8 <mpc_sin_cos@@Base+0x990>
   118d4:	bl	4b40 <mpfr_set_erangeflag@plt>
   118d8:	b	114a4 <mpc_sin_cos@@Base+0x96c>
   118dc:	mov	w1, #0x1                   	// #1
   118e0:	bl	4d60 <mpfr_set_zero@plt>
   118e4:	ldr	x0, [sp, #104]
   118e8:	cbz	x0, 1159c <mpc_sin_cos@@Base+0xa64>
   118ec:	b	117d0 <mpc_sin_cos@@Base+0xc98>
   118f0:	mov	w1, #0xffffffff            	// #-1
   118f4:	bl	4d60 <mpfr_set_zero@plt>
   118f8:	ldr	x0, [sp, #104]
   118fc:	cbz	x0, 1159c <mpc_sin_cos@@Base+0xa64>
   11900:	ldr	w3, [sp, #328]
   11904:	mov	x1, x28
   11908:	ldr	x19, [sp, #104]
   1190c:	mov	w2, #0x0                   	// #0
   11910:	mov	x0, x19
   11914:	bl	5220 <mpfr_set4@plt>
   11918:	ldr	w2, [sp, #296]
   1191c:	mov	w1, #0x1                   	// #1
   11920:	add	x0, x19, #0x20
   11924:	cmn	w2, #0x1
   11928:	cneg	w1, w1, gt
   1192c:	b	117fc <mpc_sin_cos@@Base+0xcc4>
   11930:	mov	x0, #0x2                   	// #2
   11934:	sdiv	x0, x19, x0
   11938:	b	10cc0 <mpc_sin_cos@@Base+0x188>
   1193c:	nop

0000000000011940 <mpc_sinh@@Base>:
   11940:	stp	x29, x30, [sp, #-160]!
   11944:	mov	x3, x1
   11948:	mov	x29, sp
   1194c:	stp	x19, x20, [sp, #16]
   11950:	mov	x19, x0
   11954:	ubfiz	w0, w2, #4, #4
   11958:	ldp	x10, x11, [x3, #16]
   1195c:	stp	x10, x11, [sp, #80]
   11960:	add	w2, w0, w2, asr #4
   11964:	ldp	x10, x11, [x3, #32]
   11968:	stp	x10, x11, [sp, #32]
   1196c:	add	x1, sp, #0x20
   11970:	ldp	x4, x5, [x3]
   11974:	stp	x4, x5, [sp, #64]
   11978:	add	x0, sp, #0x60
   1197c:	ldp	x10, x11, [x19, #32]
   11980:	stp	x10, x11, [sp, #96]
   11984:	ldp	x6, x7, [x19]
   11988:	stp	x6, x7, [sp, #128]
   1198c:	ldp	x4, x5, [x19, #16]
   11990:	stp	x4, x5, [sp, #144]
   11994:	ldp	x10, x11, [x3, #48]
   11998:	stp	x10, x11, [sp, #48]
   1199c:	ldp	x8, x9, [x19, #48]
   119a0:	stp	x8, x9, [sp, #112]
   119a4:	bl	4fa0 <mpc_sin@plt>
   119a8:	mov	w1, w0
   119ac:	ldp	x2, x3, [sp, #96]
   119b0:	stp	x2, x3, [x19, #32]
   119b4:	asr	w0, w0, #2
   119b8:	ldp	x4, x5, [sp, #128]
   119bc:	stp	x4, x5, [x19]
   119c0:	cmp	w0, #0x2
   119c4:	ldp	x2, x3, [sp, #112]
   119c8:	stp	x2, x3, [x19, #48]
   119cc:	ldp	x4, x5, [sp, #144]
   119d0:	stp	x4, x5, [x19, #16]
   119d4:	b.eq	119e0 <mpc_sinh@@Base+0xa0>  // b.none
   119d8:	cmp	w0, #0x0
   119dc:	cset	w0, ne  // ne = any
   119e0:	and	w1, w1, #0x3
   119e4:	cmp	w1, #0x2
   119e8:	b.eq	11a04 <mpc_sinh@@Base+0xc4>  // b.none
   119ec:	cmp	w1, #0x0
   119f0:	orr	w1, w0, #0x4
   119f4:	csel	w0, w1, w0, ne  // ne = any
   119f8:	ldp	x19, x20, [sp, #16]
   119fc:	ldp	x29, x30, [sp], #160
   11a00:	ret
   11a04:	orr	w0, w0, #0x8
   11a08:	ldp	x19, x20, [sp, #16]
   11a0c:	ldp	x29, x30, [sp], #160
   11a10:	ret
   11a14:	nop
   11a18:	stp	x29, x30, [sp, #-208]!
   11a1c:	mov	x29, sp
   11a20:	stp	x27, x28, [sp, #80]
   11a24:	mov	x27, x1
   11a28:	ldr	x1, [x1]
   11a2c:	stp	x21, x22, [sp, #32]
   11a30:	mov	x21, x2
   11a34:	add	x22, sp, #0x90
   11a38:	stp	x19, x20, [sp, #16]
   11a3c:	lsl	x1, x1, #1
   11a40:	mov	x20, x0
   11a44:	mov	x0, x22
   11a48:	stp	x23, x24, [sp, #48]
   11a4c:	mov	w24, w3
   11a50:	bl	5490 <mpfr_init2@plt>
   11a54:	ldr	x1, [x21]
   11a58:	add	x23, sp, #0xb0
   11a5c:	mov	x0, x23
   11a60:	lsl	x1, x1, #1
   11a64:	bl	5490 <mpfr_init2@plt>
   11a68:	mov	x1, x27
   11a6c:	mov	w2, #0x0                   	// #0
   11a70:	mov	x0, x22
   11a74:	bl	5060 <mpfr_sqr@plt>
   11a78:	mov	x1, x21
   11a7c:	mov	w2, #0x0                   	// #0
   11a80:	mov	x0, x23
   11a84:	bl	5060 <mpfr_sqr@plt>
   11a88:	mov	w3, w24
   11a8c:	mov	x2, x23
   11a90:	mov	x1, x22
   11a94:	mov	x0, x20
   11a98:	bl	4aa0 <mpfr_sub@plt>
   11a9c:	ldr	x4, [x20, #16]
   11aa0:	mov	x5, #0x8000000000000003    	// #-9223372036854775805
   11aa4:	cmp	x4, x5
   11aa8:	b.eq	11b24 <mpc_sinh@@Base+0x1e4>  // b.none
   11aac:	ldr	x1, [sp, #160]
   11ab0:	mov	w19, w0
   11ab4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   11ab8:	cmp	x1, x0
   11abc:	ldr	x2, [sp, #192]
   11ac0:	b.eq	11b08 <mpc_sinh@@Base+0x1c8>  // b.none
   11ac4:	cmp	x2, x0
   11ac8:	b.eq	11d4c <mpc_sinh@@Base+0x40c>  // b.none
   11acc:	mov	x0, #0x2                   	// #2
   11ad0:	movk	x0, #0x8000, lsl #48
   11ad4:	cmp	x4, x0
   11ad8:	b.eq	11b78 <mpc_sinh@@Base+0x238>  // b.none
   11adc:	mov	x0, x22
   11ae0:	bl	4db0 <mpfr_clear@plt>
   11ae4:	mov	x0, x23
   11ae8:	bl	4db0 <mpfr_clear@plt>
   11aec:	mov	w0, w19
   11af0:	ldp	x19, x20, [sp, #16]
   11af4:	ldp	x21, x22, [sp, #32]
   11af8:	ldp	x23, x24, [sp, #48]
   11afc:	ldp	x27, x28, [sp, #80]
   11b00:	ldp	x29, x30, [sp], #208
   11b04:	ret
   11b08:	cmp	x2, x1
   11b0c:	b.eq	11b78 <mpc_sinh@@Base+0x238>  // b.none
   11b10:	ldr	w1, [sp, #152]
   11b14:	mov	w0, #0x1                   	// #1
   11b18:	cmn	w1, #0x1
   11b1c:	cneg	w19, w0, gt
   11b20:	b	11adc <mpc_sinh@@Base+0x19c>
   11b24:	ldr	w0, [x20, #8]
   11b28:	tbnz	w0, #31, 11b60 <mpc_sinh@@Base+0x220>
   11b2c:	mov	x0, x20
   11b30:	mov	w3, #0x0                   	// #0
   11b34:	mov	x2, #0x0                   	// #0
   11b38:	mov	x1, #0x1                   	// #1
   11b3c:	bl	5180 <mpfr_set_ui_2exp@plt>
   11b40:	bl	5250 <mpfr_get_emax@plt>
   11b44:	mov	x2, x0
   11b48:	mov	w3, w24
   11b4c:	mov	x1, x20
   11b50:	mov	x0, x20
   11b54:	bl	4f90 <mpfr_mul_2ui@plt>
   11b58:	mov	w19, w0
   11b5c:	b	11adc <mpc_sinh@@Base+0x19c>
   11b60:	mov	x0, x20
   11b64:	mov	w3, #0x0                   	// #0
   11b68:	mov	x2, #0x0                   	// #0
   11b6c:	mov	x1, #0xffffffffffffffff    	// #-1
   11b70:	bl	4a20 <mpfr_set_si_2exp@plt>
   11b74:	b	11b40 <mpc_sinh@@Base+0x200>
   11b78:	ldr	x2, [x21, #16]
   11b7c:	mov	x1, #0x0                   	// #0
   11b80:	mov	x0, x27
   11b84:	stp	x25, x26, [sp, #64]
   11b88:	mov	x19, x2
   11b8c:	str	x2, [sp, #104]
   11b90:	add	x25, sp, #0x70
   11b94:	ldr	x28, [x27, #16]
   11b98:	bl	4c50 <mpfr_set_exp@plt>
   11b9c:	mov	x1, #0x0                   	// #0
   11ba0:	mov	x0, x21
   11ba4:	bl	4c50 <mpfr_set_exp@plt>
   11ba8:	add	x26, sp, #0x80
   11bac:	mov	x0, x25
   11bb0:	bl	54f0 <__gmpz_init@plt>
   11bb4:	mov	x0, x26
   11bb8:	bl	54f0 <__gmpz_init@plt>
   11bbc:	mov	x1, x28
   11bc0:	mov	x0, x25
   11bc4:	bl	5510 <__gmpz_set_si@plt>
   11bc8:	mov	x2, #0x1                   	// #1
   11bcc:	mov	x1, x25
   11bd0:	mov	x0, x25
   11bd4:	bl	4ee0 <__gmpz_mul_2exp@plt>
   11bd8:	mov	x1, x19
   11bdc:	mov	x0, x26
   11be0:	bl	5510 <__gmpz_set_si@plt>
   11be4:	mov	x1, x26
   11be8:	mov	x0, x26
   11bec:	mov	x2, #0x1                   	// #1
   11bf0:	bl	4ee0 <__gmpz_mul_2exp@plt>
   11bf4:	mov	x1, x27
   11bf8:	mov	w2, #0x0                   	// #0
   11bfc:	mov	x0, x22
   11c00:	bl	5060 <mpfr_sqr@plt>
   11c04:	ldr	x2, [sp, #160]
   11c08:	mov	x1, x25
   11c0c:	mov	x0, x25
   11c10:	neg	x2, x2
   11c14:	bl	4b10 <__gmpz_sub_ui@plt>
   11c18:	mov	x1, #0x0                   	// #0
   11c1c:	mov	x0, x22
   11c20:	bl	4c50 <mpfr_set_exp@plt>
   11c24:	mov	x1, x21
   11c28:	mov	w2, #0x0                   	// #0
   11c2c:	mov	x0, x23
   11c30:	bl	5060 <mpfr_sqr@plt>
   11c34:	ldr	x2, [sp, #192]
   11c38:	mov	x1, x26
   11c3c:	mov	x0, x26
   11c40:	neg	x2, x2
   11c44:	bl	4b10 <__gmpz_sub_ui@plt>
   11c48:	mov	x1, #0x0                   	// #0
   11c4c:	mov	x0, x23
   11c50:	bl	4c50 <mpfr_set_exp@plt>
   11c54:	ldr	x1, [x20, #16]
   11c58:	mov	x0, #0x2                   	// #2
   11c5c:	movk	x0, #0x8000, lsl #48
   11c60:	cmp	x1, x0
   11c64:	b.eq	11da0 <mpc_sinh@@Base+0x460>  // b.none
   11c68:	bl	50b0 <mpfr_get_emin@plt>
   11c6c:	mov	x19, x0
   11c70:	mov	x1, x26
   11c74:	mov	x0, x25
   11c78:	bl	5350 <__gmpz_cmp@plt>
   11c7c:	cmp	w0, #0x0
   11c80:	mov	x1, x19
   11c84:	b.le	11d60 <mpc_sinh@@Base+0x420>
   11c88:	mov	x0, x23
   11c8c:	bl	4c50 <mpfr_set_exp@plt>
   11c90:	neg	x2, x19
   11c94:	mov	x1, x26
   11c98:	mov	x0, x26
   11c9c:	bl	4ff0 <__gmpz_add_ui@plt>
   11ca0:	mov	x2, x26
   11ca4:	mov	x1, x25
   11ca8:	mov	x0, x25
   11cac:	bl	4c00 <__gmpz_sub@plt>
   11cb0:	mov	x0, x25
   11cb4:	bl	49e0 <__gmpz_get_si@plt>
   11cb8:	mov	x1, x0
   11cbc:	mov	x0, x22
   11cc0:	bl	4c50 <mpfr_set_exp@plt>
   11cc4:	mov	x1, x26
   11cc8:	mov	x0, x25
   11ccc:	bl	4d50 <__gmpz_set@plt>
   11cd0:	mov	w3, w24
   11cd4:	mov	x2, x23
   11cd8:	mov	x1, x22
   11cdc:	mov	x0, x20
   11ce0:	bl	4aa0 <mpfr_sub@plt>
   11ce4:	mov	w19, w0
   11ce8:	ldr	x4, [sp, #120]
   11cec:	mov	w3, w24
   11cf0:	ldr	w2, [sp, #116]
   11cf4:	mov	x1, x20
   11cf8:	mov	x0, x20
   11cfc:	ldr	x4, [x4]
   11d00:	cmp	w2, #0x0
   11d04:	neg	w2, w2
   11d08:	str	w2, [sp, #116]
   11d0c:	csel	x2, x4, xzr, ne  // ne = any
   11d10:	bl	5370 <mpfr_div_2ui@plt>
   11d14:	cmp	w0, #0x0
   11d18:	csel	w19, w19, w0, eq  // eq = none
   11d1c:	mov	x0, x25
   11d20:	bl	51d0 <__gmpz_clear@plt>
   11d24:	mov	x0, x26
   11d28:	bl	51d0 <__gmpz_clear@plt>
   11d2c:	mov	x1, x28
   11d30:	mov	x0, x27
   11d34:	bl	4c50 <mpfr_set_exp@plt>
   11d38:	ldr	x1, [sp, #104]
   11d3c:	mov	x0, x21
   11d40:	bl	4c50 <mpfr_set_exp@plt>
   11d44:	ldp	x25, x26, [sp, #64]
   11d48:	b	11adc <mpc_sinh@@Base+0x19c>
   11d4c:	ldr	w1, [sp, #184]
   11d50:	mov	w0, #0xffffffff            	// #-1
   11d54:	cmp	w1, w0
   11d58:	cneg	w19, w0, gt
   11d5c:	b	11adc <mpc_sinh@@Base+0x19c>
   11d60:	mov	x0, x22
   11d64:	bl	4c50 <mpfr_set_exp@plt>
   11d68:	neg	x2, x19
   11d6c:	mov	x1, x25
   11d70:	mov	x0, x25
   11d74:	bl	4ff0 <__gmpz_add_ui@plt>
   11d78:	mov	x1, x26
   11d7c:	mov	x2, x25
   11d80:	mov	x0, x26
   11d84:	bl	4c00 <__gmpz_sub@plt>
   11d88:	mov	x0, x26
   11d8c:	bl	49e0 <__gmpz_get_si@plt>
   11d90:	mov	x1, x0
   11d94:	mov	x0, x23
   11d98:	bl	4c50 <mpfr_set_exp@plt>
   11d9c:	b	11cd0 <mpc_sinh@@Base+0x390>
   11da0:	bl	5250 <mpfr_get_emax@plt>
   11da4:	mov	x19, x0
   11da8:	mov	x1, x26
   11dac:	mov	x0, x25
   11db0:	bl	5350 <__gmpz_cmp@plt>
   11db4:	mov	x1, x19
   11db8:	tbnz	w0, #31, 11e48 <mpc_sinh@@Base+0x508>
   11dbc:	mov	x0, x22
   11dc0:	bl	4c50 <mpfr_set_exp@plt>
   11dc4:	mov	x2, x19
   11dc8:	mov	x1, x25
   11dcc:	mov	x0, x25
   11dd0:	bl	4b10 <__gmpz_sub_ui@plt>
   11dd4:	mov	x1, x26
   11dd8:	mov	x0, x26
   11ddc:	mov	x2, x25
   11de0:	bl	4c00 <__gmpz_sub@plt>
   11de4:	ldr	x1, [sp, #136]
   11de8:	ldr	w0, [sp, #132]
   11dec:	cmp	w0, #0x0
   11df0:	mov	x0, x23
   11df4:	ldr	x1, [x1]
   11df8:	csel	x1, x1, xzr, ne  // ne = any
   11dfc:	bl	4c50 <mpfr_set_exp@plt>
   11e00:	mov	w3, w24
   11e04:	mov	x2, x23
   11e08:	mov	x1, x22
   11e0c:	mov	x0, x20
   11e10:	bl	4aa0 <mpfr_sub@plt>
   11e14:	mov	w19, w0
   11e18:	ldr	x2, [sp, #120]
   11e1c:	mov	w3, w24
   11e20:	ldr	w4, [sp, #116]
   11e24:	mov	x1, x20
   11e28:	mov	x0, x20
   11e2c:	cmp	w4, #0x0
   11e30:	ldr	x2, [x2]
   11e34:	csel	x2, x2, xzr, ne  // ne = any
   11e38:	bl	4f90 <mpfr_mul_2ui@plt>
   11e3c:	cmp	w0, #0x0
   11e40:	csel	w19, w19, w0, eq  // eq = none
   11e44:	b	11d1c <mpc_sinh@@Base+0x3dc>
   11e48:	mov	x0, x23
   11e4c:	bl	4c50 <mpfr_set_exp@plt>
   11e50:	mov	x2, x19
   11e54:	mov	x1, x26
   11e58:	mov	x0, x26
   11e5c:	bl	4b10 <__gmpz_sub_ui@plt>
   11e60:	mov	x2, x26
   11e64:	mov	x1, x25
   11e68:	mov	x0, x25
   11e6c:	bl	4c00 <__gmpz_sub@plt>
   11e70:	ldr	x1, [sp, #120]
   11e74:	ldr	w0, [sp, #116]
   11e78:	cmp	w0, #0x0
   11e7c:	mov	x0, x22
   11e80:	ldr	x1, [x1]
   11e84:	csel	x1, x1, xzr, ne  // ne = any
   11e88:	bl	4c50 <mpfr_set_exp@plt>
   11e8c:	mov	x1, x26
   11e90:	mov	x0, x25
   11e94:	bl	4d50 <__gmpz_set@plt>
   11e98:	b	11e00 <mpc_sinh@@Base+0x4c0>
   11e9c:	nop

0000000000011ea0 <mpc_sqr@@Base>:
   11ea0:	stp	x29, x30, [sp, #-208]!
   11ea4:	mov	x29, sp
   11ea8:	stp	x19, x20, [sp, #16]
   11eac:	mov	x20, x0
   11eb0:	mov	x19, x1
   11eb4:	mov	x0, x1
   11eb8:	stp	x21, x22, [sp, #32]
   11ebc:	stp	x23, x24, [sp, #48]
   11ec0:	mov	w24, w2
   11ec4:	bl	5520 <mpfr_number_p@plt>
   11ec8:	cbnz	w0, 11f68 <mpc_sqr@@Base+0xc8>
   11ecc:	ldr	x0, [x19, #16]
   11ed0:	mov	x1, #0x2                   	// #2
   11ed4:	movk	x1, #0x8000, lsl #48
   11ed8:	add	x21, x20, #0x20
   11edc:	cmp	x0, x1
   11ee0:	b.eq	11f40 <mpc_sqr@@Base+0xa0>  // b.none
   11ee4:	ldr	x2, [x19, #48]
   11ee8:	cmp	x2, x1
   11eec:	b.eq	11f40 <mpc_sqr@@Base+0xa0>  // b.none
   11ef0:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   11ef4:	cmp	x0, x1
   11ef8:	b.eq	120ac <mpc_sqr@@Base+0x20c>  // b.none
   11efc:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   11f00:	cmp	x0, x1
   11f04:	b.eq	1207c <mpc_sqr@@Base+0x1dc>  // b.none
   11f08:	ldr	w2, [x19, #8]
   11f0c:	mov	x0, x21
   11f10:	ldr	w1, [x19, #40]
   11f14:	mul	w1, w2, w1
   11f18:	bl	5170 <mpfr_set_inf@plt>
   11f1c:	mov	x0, x20
   11f20:	mov	w1, #0xffffffff            	// #-1
   11f24:	bl	5170 <mpfr_set_inf@plt>
   11f28:	mov	w0, #0x0                   	// #0
   11f2c:	ldp	x19, x20, [sp, #16]
   11f30:	ldp	x21, x22, [sp, #32]
   11f34:	ldp	x23, x24, [sp, #48]
   11f38:	ldp	x29, x30, [sp], #208
   11f3c:	ret
   11f40:	mov	x0, x20
   11f44:	bl	4a80 <mpfr_set_nan@plt>
   11f48:	mov	x0, x21
   11f4c:	bl	4a80 <mpfr_set_nan@plt>
   11f50:	mov	w0, #0x0                   	// #0
   11f54:	ldp	x19, x20, [sp, #16]
   11f58:	ldp	x21, x22, [sp, #32]
   11f5c:	ldp	x23, x24, [sp, #48]
   11f60:	ldp	x29, x30, [sp], #208
   11f64:	ret
   11f68:	stp	x25, x26, [sp, #64]
   11f6c:	add	x25, x19, #0x20
   11f70:	mov	x0, x25
   11f74:	bl	5520 <mpfr_number_p@plt>
   11f78:	cbz	w0, 120a4 <mpc_sqr@@Base+0x204>
   11f7c:	ldr	x21, [x19, #48]
   11f80:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   11f84:	cmp	x21, x1
   11f88:	b.eq	12328 <mpc_sqr@@Base+0x488>  // b.none
   11f8c:	ldr	x0, [x19, #16]
   11f90:	cmp	x0, x1
   11f94:	b.eq	12270 <mpc_sqr@@Base+0x3d0>  // b.none
   11f98:	stp	x27, x28, [sp, #80]
   11f9c:	cmp	x19, x20
   11fa0:	add	x28, sp, #0xb0
   11fa4:	ldr	x1, [x19]
   11fa8:	ldr	x22, [x20]
   11fac:	ldr	x26, [x20, #32]
   11fb0:	b.eq	122e8 <mpc_sqr@@Base+0x448>  // b.none
   11fb4:	ldp	x2, x3, [x19]
   11fb8:	stp	x2, x3, [sp, #176]
   11fbc:	ldp	x2, x3, [x19, #16]
   11fc0:	stp	x2, x3, [sp, #192]
   11fc4:	subs	x0, x0, x21
   11fc8:	ldr	x2, [x19, #32]
   11fcc:	cneg	x0, x0, mi  // mi = first
   11fd0:	cmp	x2, x1
   11fd4:	csel	x2, x2, x1, ge  // ge = tcont
   11fd8:	add	x2, x2, x2, lsr #63
   11fdc:	cmp	x0, x2, asr #1
   11fe0:	b.le	120e8 <mpc_sqr@@Base+0x248>
   11fe4:	and	w3, w24, #0xf
   11fe8:	mov	x2, x25
   11fec:	mov	x1, x28
   11ff0:	mov	x0, x20
   11ff4:	bl	11a18 <mpc_sinh@@Base+0xd8>
   11ff8:	mov	w22, w0
   11ffc:	bl	5340 <mpfr_underflow_p@plt>
   12000:	asr	w24, w24, #4
   12004:	mov	w23, w0
   12008:	bl	4e70 <mpfr_clear_underflow@plt>
   1200c:	mov	x2, x25
   12010:	mov	w3, w24
   12014:	mov	x1, x28
   12018:	add	x26, x20, #0x20
   1201c:	mov	x0, x26
   12020:	bl	4bb0 <mpfr_mul@plt>
   12024:	mov	w21, w0
   12028:	bl	5340 <mpfr_underflow_p@plt>
   1202c:	cbz	w0, 12088 <mpc_sqr@@Base+0x1e8>
   12030:	cbnz	w23, 1223c <mpc_sqr@@Base+0x39c>
   12034:	cmp	x19, x20
   12038:	b.eq	1231c <mpc_sqr@@Base+0x47c>  // b.none
   1203c:	cmp	w22, #0x0
   12040:	mov	w0, #0x2                   	// #2
   12044:	cset	w1, ne  // ne = any
   12048:	csel	w0, w1, w0, ge  // ge = tcont
   1204c:	cmp	w21, #0x0
   12050:	orr	w1, w0, #0x4
   12054:	csel	w1, w1, w0, ne  // ne = any
   12058:	orr	w0, w0, #0x8
   1205c:	csel	w0, w1, w0, ge  // ge = tcont
   12060:	ldp	x19, x20, [sp, #16]
   12064:	ldp	x21, x22, [sp, #32]
   12068:	ldp	x23, x24, [sp, #48]
   1206c:	ldp	x25, x26, [sp, #64]
   12070:	ldp	x27, x28, [sp, #80]
   12074:	ldp	x29, x30, [sp], #208
   12078:	ret
   1207c:	mov	x0, x21
   12080:	bl	4a80 <mpfr_set_nan@plt>
   12084:	b	11f1c <mpc_sqr@@Base+0x7c>
   12088:	mov	w3, w24
   1208c:	mov	x1, x26
   12090:	mov	x0, x26
   12094:	mov	x2, #0x1                   	// #1
   12098:	bl	4f90 <mpfr_mul_2ui@plt>
   1209c:	orr	w21, w21, w0
   120a0:	b	12030 <mpc_sqr@@Base+0x190>
   120a4:	ldp	x25, x26, [sp, #64]
   120a8:	b	11ecc <mpc_sqr@@Base+0x2c>
   120ac:	cmp	x2, x0
   120b0:	b.eq	123a4 <mpc_sqr@@Base+0x504>  // b.none
   120b4:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   120b8:	cmp	x2, x0
   120bc:	b.eq	1237c <mpc_sqr@@Base+0x4dc>  // b.none
   120c0:	ldr	w2, [x19, #8]
   120c4:	mov	x0, x21
   120c8:	ldr	w1, [x19, #40]
   120cc:	mul	w1, w2, w1
   120d0:	bl	5170 <mpfr_set_inf@plt>
   120d4:	mov	x0, x20
   120d8:	mov	w1, #0x1                   	// #1
   120dc:	bl	5170 <mpfr_set_inf@plt>
   120e0:	mov	w0, #0x0                   	// #0
   120e4:	b	11f54 <mpc_sqr@@Base+0xb4>
   120e8:	cmp	x26, x22
   120ec:	and	w1, w24, #0xf
   120f0:	add	x23, sp, #0x70
   120f4:	csel	x22, x26, x22, ge  // ge = tcont
   120f8:	mov	x0, x23
   120fc:	add	x26, sp, #0x90
   12100:	str	w1, [sp, #100]
   12104:	bl	4ae0 <mpfr_init@plt>
   12108:	mov	x0, x26
   1210c:	bl	4ae0 <mpfr_init@plt>
   12110:	mov	x27, #0x8000000000000003    	// #-9223372036854775805
   12114:	bl	50b0 <mpfr_get_emin@plt>
   12118:	str	x0, [sp, #104]
   1211c:	nop
   12120:	mov	x0, x22
   12124:	bl	4d70 <mpc_ceil_log2@plt>
   12128:	mov	x1, x0
   1212c:	mov	x0, x23
   12130:	add	x1, x1, #0x5
   12134:	add	x22, x22, x1
   12138:	mov	x1, x22
   1213c:	bl	4cd0 <mpfr_set_prec@plt>
   12140:	mov	x1, x22
   12144:	mov	x0, x26
   12148:	bl	4cd0 <mpfr_set_prec@plt>
   1214c:	mov	x2, x25
   12150:	mov	x1, x28
   12154:	mov	w3, #0x4                   	// #4
   12158:	mov	x0, x23
   1215c:	bl	4eb0 <mpfr_add@plt>
   12160:	mov	w21, w0
   12164:	mov	x2, x25
   12168:	mov	x1, x28
   1216c:	mov	w3, #0x4                   	// #4
   12170:	mov	x0, x26
   12174:	bl	4aa0 <mpfr_sub@plt>
   12178:	mov	w4, w0
   1217c:	orr	w21, w21, w4
   12180:	mov	x2, x26
   12184:	ldr	x4, [sp, #128]
   12188:	mov	x1, x23
   1218c:	mov	x0, x23
   12190:	mov	w3, #0x4                   	// #4
   12194:	cmp	x4, x27
   12198:	b.lt	12244 <mpc_sqr@@Base+0x3a4>  // b.tstop
   1219c:	ldr	w4, [sp, #120]
   121a0:	cbz	w4, 12258 <mpc_sqr@@Base+0x3b8>
   121a4:	ldr	x4, [sp, #160]
   121a8:	cmp	x4, x27
   121ac:	b.lt	12244 <mpc_sqr@@Base+0x3a4>  // b.tstop
   121b0:	ldr	w4, [sp, #152]
   121b4:	cbz	w4, 12258 <mpc_sqr@@Base+0x3b8>
   121b8:	bl	4bb0 <mpfr_mul@plt>
   121bc:	mov	w5, w0
   121c0:	ldr	x4, [sp, #128]
   121c4:	orr	w21, w21, w5
   121c8:	ldr	x5, [sp, #104]
   121cc:	cmp	x4, x27
   121d0:	sub	x1, x22, #0x3
   121d4:	mov	x0, x23
   121d8:	ccmp	x4, x5, #0x4, ne  // ne = any
   121dc:	mov	w3, #0x1                   	// #1
   121e0:	mov	w2, #0x4                   	// #4
   121e4:	b.eq	12388 <mpc_sqr@@Base+0x4e8>  // b.none
   121e8:	ldr	w4, [sp, #100]
   121ec:	cmp	w4, #0x0
   121f0:	ldr	x4, [x20]
   121f4:	cinc	x4, x4, eq  // eq = none
   121f8:	bl	54a0 <mpfr_can_round@plt>
   121fc:	cmp	w21, #0x0
   12200:	cset	w1, eq  // eq = none
   12204:	orr	w1, w1, w0
   12208:	cbz	w1, 12120 <mpc_sqr@@Base+0x280>
   1220c:	ldr	w2, [sp, #100]
   12210:	mov	x1, x23
   12214:	ldr	w3, [sp, #120]
   12218:	mov	x0, x20
   1221c:	bl	5220 <mpfr_set4@plt>
   12220:	cmp	w0, #0x0
   12224:	csel	w22, w0, w21, ne  // ne = any
   12228:	mov	x0, x23
   1222c:	bl	4db0 <mpfr_clear@plt>
   12230:	mov	x0, x26
   12234:	bl	4db0 <mpfr_clear@plt>
   12238:	b	11ffc <mpc_sqr@@Base+0x15c>
   1223c:	bl	49d0 <mpfr_set_underflow@plt>
   12240:	b	12034 <mpc_sqr@@Base+0x194>
   12244:	mov	x0, #0x2                   	// #2
   12248:	movk	x0, #0x8000, lsl #48
   1224c:	cmp	x4, x0
   12250:	b.ne	12258 <mpc_sqr@@Base+0x3b8>  // b.any
   12254:	bl	4b40 <mpfr_set_erangeflag@plt>
   12258:	mov	w1, #0x1                   	// #1
   1225c:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   12260:	mov	w22, #0x0                   	// #0
   12264:	str	w1, [x20, #8]
   12268:	str	x0, [x20, #16]
   1226c:	b	12228 <mpc_sqr@@Base+0x388>
   12270:	ldr	w0, [x19, #8]
   12274:	and	w2, w24, #0xf
   12278:	ldr	w22, [x19, #40]
   1227c:	cmp	w2, #0x2
   12280:	mvn	w19, w0
   12284:	lsr	w22, w22, #31
   12288:	lsr	w19, w19, #31
   1228c:	b.eq	12314 <mpc_sqr@@Base+0x474>  // b.none
   12290:	cmp	w2, #0x3
   12294:	mov	w0, #0x2                   	// #2
   12298:	csel	w2, w2, w0, ne  // ne = any
   1229c:	mov	x1, x25
   122a0:	mov	x0, x20
   122a4:	bl	5060 <mpfr_sqr@plt>
   122a8:	mov	w21, w0
   122ac:	mov	w2, #0x0                   	// #0
   122b0:	mov	x1, x20
   122b4:	mov	x0, x20
   122b8:	bl	4bc0 <mpfr_neg@plt>
   122bc:	mov	w2, #0x1                   	// #1
   122c0:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   122c4:	str	w2, [x20, #40]
   122c8:	cmp	w19, w22
   122cc:	str	x0, [x20, #48]
   122d0:	b.eq	123d4 <mpc_sqr@@Base+0x534>  // b.none
   122d4:	cmp	w21, #0x0
   122d8:	b.le	123c8 <mpc_sqr@@Base+0x528>
   122dc:	mov	w0, #0x2                   	// #2
   122e0:	ldp	x25, x26, [sp, #64]
   122e4:	b	11f54 <mpc_sqr@@Base+0xb4>
   122e8:	mov	x0, x28
   122ec:	bl	5490 <mpfr_init2@plt>
   122f0:	ldr	w3, [x19, #8]
   122f4:	mov	x1, x19
   122f8:	mov	x0, x28
   122fc:	mov	w2, #0x0                   	// #0
   12300:	bl	5220 <mpfr_set4@plt>
   12304:	ldr	x1, [x19]
   12308:	ldr	x0, [x19, #16]
   1230c:	ldr	x21, [x19, #48]
   12310:	b	11fc4 <mpc_sqr@@Base+0x124>
   12314:	mov	w2, #0x3                   	// #3
   12318:	b	1229c <mpc_sqr@@Base+0x3fc>
   1231c:	mov	x0, x28
   12320:	bl	4db0 <mpfr_clear@plt>
   12324:	b	1203c <mpc_sqr@@Base+0x19c>
   12328:	ldr	w0, [x19, #8]
   1232c:	mov	x1, x19
   12330:	ldr	w22, [x19, #40]
   12334:	and	w2, w24, #0xf
   12338:	mvn	w19, w0
   1233c:	mov	x0, x20
   12340:	bl	5060 <mpfr_sqr@plt>
   12344:	str	x21, [x20, #48]
   12348:	mov	w2, #0x1                   	// #1
   1234c:	str	w2, [x20, #40]
   12350:	lsr	w19, w19, #31
   12354:	lsr	w22, w22, #31
   12358:	add	x1, x20, #0x20
   1235c:	cmp	w19, w22
   12360:	mov	w19, w0
   12364:	b.eq	123e8 <mpc_sqr@@Base+0x548>  // b.none
   12368:	cmp	w19, #0x0
   1236c:	cset	w0, ne  // ne = any
   12370:	tbnz	w19, #31, 122dc <mpc_sqr@@Base+0x43c>
   12374:	ldp	x25, x26, [sp, #64]
   12378:	b	11f54 <mpc_sqr@@Base+0xb4>
   1237c:	mov	x0, x21
   12380:	bl	4a80 <mpfr_set_nan@plt>
   12384:	b	120d4 <mpc_sqr@@Base+0x234>
   12388:	ldr	w3, [sp, #100]
   1238c:	mov	x2, x25
   12390:	mov	x1, x28
   12394:	mov	x0, x20
   12398:	bl	11a18 <mpc_sinh@@Base+0xd8>
   1239c:	mov	w22, w0
   123a0:	b	12228 <mpc_sqr@@Base+0x388>
   123a4:	ldr	w2, [x19, #8]
   123a8:	mov	x0, x21
   123ac:	ldr	w1, [x19, #40]
   123b0:	mul	w1, w2, w1
   123b4:	bl	5170 <mpfr_set_inf@plt>
   123b8:	mov	x0, x20
   123bc:	bl	4a80 <mpfr_set_nan@plt>
   123c0:	mov	w0, #0x0                   	// #0
   123c4:	b	11f54 <mpc_sqr@@Base+0xb4>
   123c8:	cset	w0, ne  // ne = any
   123cc:	ldp	x25, x26, [sp, #64]
   123d0:	b	11f54 <mpc_sqr@@Base+0xb4>
   123d4:	mov	x1, x20
   123d8:	mov	x0, x20
   123dc:	mov	w2, #0x0                   	// #0
   123e0:	bl	4fb0 <mpc_conj@plt>
   123e4:	b	122d4 <mpc_sqr@@Base+0x434>
   123e8:	mov	x1, x20
   123ec:	mov	x0, x20
   123f0:	mov	w2, #0x0                   	// #0
   123f4:	bl	4fb0 <mpc_conj@plt>
   123f8:	b	12368 <mpc_sqr@@Base+0x4c8>
   123fc:	nop

0000000000012400 <mpc_sqrt@@Base>:
   12400:	stp	x29, x30, [sp, #-240]!
   12404:	mov	x29, sp
   12408:	stp	x21, x22, [sp, #32]
   1240c:	mov	x21, x1
   12410:	stp	x19, x20, [sp, #16]
   12414:	add	x20, x1, #0x20
   12418:	mov	w19, w2
   1241c:	stp	x27, x28, [sp, #80]
   12420:	mov	w27, #0x2                   	// #2
   12424:	str	x0, [sp, #104]
   12428:	mov	x0, x1
   1242c:	str	x20, [sp, #120]
   12430:	bl	5240 <mpfr_sgn@plt>
   12434:	str	w0, [sp, #100]
   12438:	mov	x0, x20
   1243c:	bl	5240 <mpfr_sgn@plt>
   12440:	ldr	w1, [x21, #40]
   12444:	mov	w2, #0x3                   	// #3
   12448:	cmp	w1, #0x0
   1244c:	csetm	w3, lt  // lt = tstop
   12450:	csel	w27, w27, w2, ge  // ge = tcont
   12454:	stp	w3, w0, [sp, #140]
   12458:	mov	x0, x21
   1245c:	bl	5520 <mpfr_number_p@plt>
   12460:	cbnz	w0, 12560 <mpc_sqrt@@Base+0x160>
   12464:	ldr	x1, [x21, #48]
   12468:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   1246c:	cmp	x1, x0
   12470:	b.eq	12b94 <mpc_sqrt@@Base+0x794>  // b.none
   12474:	ldr	x2, [x21, #16]
   12478:	cmp	x2, x0
   1247c:	b.eq	12508 <mpc_sqrt@@Base+0x108>  // b.none
   12480:	mov	x0, #0x2                   	// #2
   12484:	movk	x0, #0x8000, lsl #48
   12488:	cmp	x1, x0
   1248c:	ccmp	x2, x0, #0x4, ne  // ne = any
   12490:	b.eq	12a5c <mpc_sqrt@@Base+0x65c>  // b.none
   12494:	ldr	w0, [sp, #144]
   12498:	cbnz	w0, 12574 <mpc_sqrt@@Base+0x174>
   1249c:	ldr	w0, [sp, #100]
   124a0:	cmp	w0, #0x0
   124a4:	cbz	w0, 12c5c <mpc_sqrt@@Base+0x85c>
   124a8:	b.le	1293c <mpc_sqrt@@Base+0x53c>
   124ac:	and	w2, w19, #0xf
   124b0:	mov	x1, x21
   124b4:	ldr	x19, [sp, #104]
   124b8:	mov	x0, x19
   124bc:	bl	53a0 <mpfr_sqrt@plt>
   124c0:	add	x1, x19, #0x20
   124c4:	mov	w20, w0
   124c8:	ldr	w0, [sp, #140]
   124cc:	mov	w3, #0x1                   	// #1
   124d0:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   124d4:	str	w3, [x1, #8]
   124d8:	str	x2, [x1, #16]
   124dc:	cbnz	w0, 12d54 <mpc_sqrt@@Base+0x954>
   124e0:	cmp	w20, #0x0
   124e4:	mov	w0, #0x2                   	// #2
   124e8:	cset	w19, ne  // ne = any
   124ec:	csel	w19, w19, w0, ge  // ge = tcont
   124f0:	mov	w0, w19
   124f4:	ldp	x19, x20, [sp, #16]
   124f8:	ldp	x21, x22, [sp, #32]
   124fc:	ldp	x27, x28, [sp, #80]
   12500:	ldp	x29, x30, [sp], #240
   12504:	ret
   12508:	ldr	w0, [x21, #8]
   1250c:	tbnz	w0, #31, 12874 <mpc_sqrt@@Base+0x474>
   12510:	ldr	x0, [sp, #120]
   12514:	bl	5520 <mpfr_number_p@plt>
   12518:	cbz	w0, 12bb8 <mpc_sqrt@@Base+0x7b8>
   1251c:	ldr	x19, [sp, #104]
   12520:	mov	w1, #0x1                   	// #1
   12524:	mov	x0, x19
   12528:	bl	5170 <mpfr_set_inf@plt>
   1252c:	ldr	w0, [sp, #140]
   12530:	mov	w2, #0x1                   	// #1
   12534:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   12538:	str	w2, [x19, #40]
   1253c:	str	x1, [x19, #48]
   12540:	cbnz	w0, 12c78 <mpc_sqrt@@Base+0x878>
   12544:	mov	w19, #0x0                   	// #0
   12548:	mov	w0, w19
   1254c:	ldp	x19, x20, [sp, #16]
   12550:	ldp	x21, x22, [sp, #32]
   12554:	ldp	x27, x28, [sp, #80]
   12558:	ldp	x29, x30, [sp], #240
   1255c:	ret
   12560:	ldr	x0, [sp, #120]
   12564:	bl	5520 <mpfr_number_p@plt>
   12568:	cbz	w0, 12464 <mpc_sqrt@@Base+0x64>
   1256c:	ldr	w0, [sp, #144]
   12570:	cbz	w0, 1249c <mpc_sqrt@@Base+0x9c>
   12574:	asr	w0, w19, #4
   12578:	str	w0, [sp, #160]
   1257c:	and	w0, w19, #0xf
   12580:	str	w0, [sp, #164]
   12584:	ldr	x0, [sp, #104]
   12588:	stp	x23, x24, [sp, #48]
   1258c:	add	x0, x0, #0x20
   12590:	str	x0, [sp, #168]
   12594:	ldr	w0, [sp, #100]
   12598:	cbz	w0, 128b0 <mpc_sqrt@@Base+0x4b0>
   1259c:	ldr	x22, [sp, #104]
   125a0:	stp	x25, x26, [sp, #64]
   125a4:	add	x25, sp, #0xb0
   125a8:	mov	x0, x25
   125ac:	add	x24, sp, #0xd0
   125b0:	ldr	x1, [x22]
   125b4:	ldr	x20, [x22, #32]
   125b8:	cmp	x20, x1
   125bc:	csel	x20, x20, x1, ge  // ge = tcont
   125c0:	bl	4ae0 <mpfr_init@plt>
   125c4:	mov	x0, x24
   125c8:	bl	4ae0 <mpfr_init@plt>
   125cc:	ldr	w0, [sp, #100]
   125d0:	cmp	w0, #0x0
   125d4:	b.le	12c0c <mpc_sqrt@@Base+0x80c>
   125d8:	ldr	w0, [sp, #160]
   125dc:	str	w0, [sp, #148]
   125e0:	cmp	w0, #0x1
   125e4:	ldr	x26, [x22]
   125e8:	b.ne	12600 <mpc_sqrt@@Base+0x200>  // b.any
   125ec:	ldr	w0, [sp, #144]
   125f0:	cmp	w0, #0x0
   125f4:	cset	w0, gt
   125f8:	add	w0, w0, #0x2
   125fc:	str	w0, [sp, #148]
   12600:	ldr	w0, [sp, #164]
   12604:	str	w0, [sp, #112]
   12608:	ldr	x0, [sp, #104]
   1260c:	ldr	x0, [x0, #32]
   12610:	str	x0, [sp, #128]
   12614:	mov	w23, #0x0                   	// #0
   12618:	add	w23, w23, #0x1
   1261c:	cmp	w23, #0x2
   12620:	b.gt	13050 <mpc_sqrt@@Base+0xc50>
   12624:	mov	x0, x20
   12628:	bl	4d70 <mpc_ceil_log2@plt>
   1262c:	add	x0, x0, #0x4
   12630:	add	x20, x20, x0
   12634:	mov	x0, x25
   12638:	mov	x1, x20
   1263c:	bl	4cd0 <mpfr_set_prec@plt>
   12640:	mov	x1, x20
   12644:	mov	x0, x24
   12648:	bl	4cd0 <mpfr_set_prec@plt>
   1264c:	mov	x1, x21
   12650:	mov	w2, #0x3                   	// #3
   12654:	mov	x0, x25
   12658:	bl	51f0 <mpc_abs@plt>
   1265c:	mov	w19, w0
   12660:	ldr	w0, [sp, #100]
   12664:	mov	x2, x21
   12668:	mov	x1, x25
   1266c:	mov	w3, #0x3                   	// #3
   12670:	tbnz	w0, #31, 129e0 <mpc_sqrt@@Base+0x5e0>
   12674:	mov	x0, x25
   12678:	bl	4eb0 <mpfr_add@plt>
   1267c:	orr	w19, w19, w0
   12680:	mov	w3, #0x3                   	// #3
   12684:	mov	x1, x25
   12688:	mov	x2, #0x1                   	// #1
   1268c:	mov	x0, x25
   12690:	bl	5370 <mpfr_div_2ui@plt>
   12694:	orr	w19, w19, w0
   12698:	mov	x1, x25
   1269c:	mov	w2, #0x3                   	// #3
   126a0:	mov	x0, x25
   126a4:	bl	53a0 <mpfr_sqrt@plt>
   126a8:	orr	w19, w19, w0
   126ac:	mov	x0, x25
   126b0:	bl	53e0 <mpfr_min_prec@plt>
   126b4:	mov	x22, x0
   126b8:	cmp	x0, x26
   126bc:	sub	x1, x20, #0x2
   126c0:	ldr	w0, [sp, #112]
   126c4:	b.gt	12a0c <mpc_sqrt@@Base+0x60c>
   126c8:	cbnz	w0, 129f0 <mpc_sqrt@@Base+0x5f0>
   126cc:	mov	x4, x26
   126d0:	mov	x0, x25
   126d4:	mov	w3, #0x0                   	// #0
   126d8:	mov	w2, #0x3                   	// #3
   126dc:	bl	54a0 <mpfr_can_round@plt>
   126e0:	mov	w28, w0
   126e4:	cmp	w19, #0x0
   126e8:	ccmp	w28, #0x0, #0x0, ne  // ne = any
   126ec:	b.eq	12618 <mpc_sqrt@@Base+0x218>  // b.none
   126f0:	ldr	x1, [sp, #120]
   126f4:	mov	w3, w27
   126f8:	mov	x2, x25
   126fc:	mov	x0, x24
   12700:	bl	51a0 <mpfr_div@plt>
   12704:	mov	w4, w0
   12708:	cmp	w19, #0x0
   1270c:	cset	w0, ne  // ne = any
   12710:	str	w0, [sp, #116]
   12714:	cmp	w4, #0x0
   12718:	ccmp	w0, #0x0, #0x4, eq  // eq = none
   1271c:	b.eq	12730 <mpc_sqrt@@Base+0x330>  // b.none
   12720:	ldr	w0, [sp, #140]
   12724:	cmp	w0, #0x0
   12728:	mov	w0, #0x1                   	// #1
   1272c:	cneg	w4, w0, ne  // ne = any
   12730:	mov	x1, x24
   12734:	mov	x2, #0x1                   	// #1
   12738:	mov	w3, w27
   1273c:	mov	x0, x24
   12740:	str	w4, [sp, #136]
   12744:	bl	5370 <mpfr_div_2ui@plt>
   12748:	ldr	w4, [sp, #136]
   1274c:	orr	w0, w4, w0
   12750:	str	w0, [sp, #136]
   12754:	mov	x0, x24
   12758:	bl	53e0 <mpfr_min_prec@plt>
   1275c:	str	x0, [sp, #152]
   12760:	ldr	x2, [sp, #128]
   12764:	sub	x1, x20, #0x3
   12768:	cmp	x0, x2
   1276c:	ldr	w0, [sp, #148]
   12770:	b.gt	12a40 <mpc_sqrt@@Base+0x640>
   12774:	ldr	x4, [sp, #128]
   12778:	cbnz	w0, 12a2c <mpc_sqrt@@Base+0x62c>
   1277c:	mov	w2, w27
   12780:	mov	x0, x24
   12784:	mov	w3, #0x0                   	// #0
   12788:	bl	54a0 <mpfr_can_round@plt>
   1278c:	ldr	w1, [sp, #116]
   12790:	cmp	w28, #0x0
   12794:	ccmp	w1, #0x0, #0x4, eq  // eq = none
   12798:	b.ne	12618 <mpc_sqrt@@Base+0x218>  // b.any
   1279c:	ldr	w1, [sp, #136]
   127a0:	cmp	w1, #0x0
   127a4:	cset	w4, ne  // ne = any
   127a8:	cmp	w0, #0x0
   127ac:	ccmp	w4, #0x0, #0x4, eq  // eq = none
   127b0:	b.ne	12618 <mpc_sqrt@@Base+0x218>  // b.any
   127b4:	ldr	w0, [sp, #100]
   127b8:	cmp	w0, #0x0
   127bc:	b.gt	12bd0 <mpc_sqrt@@Base+0x7d0>
   127c0:	ldr	w0, [sp, #144]
   127c4:	str	w4, [sp, #120]
   127c8:	cmp	w0, #0x0
   127cc:	b.le	12d24 <mpc_sqrt@@Base+0x924>
   127d0:	ldr	w2, [sp, #164]
   127d4:	mov	x1, x24
   127d8:	ldr	w3, [sp, #216]
   127dc:	ldr	x0, [sp, #104]
   127e0:	bl	5220 <mpfr_set4@plt>
   127e4:	mov	w20, w0
   127e8:	ldr	w2, [sp, #160]
   127ec:	mov	x1, x25
   127f0:	ldr	w3, [sp, #184]
   127f4:	ldr	x0, [sp, #168]
   127f8:	bl	5220 <mpfr_set4@plt>
   127fc:	mov	w23, w0
   12800:	ldr	w4, [sp, #120]
   12804:	ldr	x1, [sp, #128]
   12808:	ldr	x0, [sp, #152]
   1280c:	cmp	x0, x1
   12810:	ldr	w0, [sp, #116]
   12814:	cset	w21, le
   12818:	cmp	w0, #0x0
   1281c:	and	w21, w4, w21
   12820:	ccmp	x22, x26, #0x0, ne  // ne = any
   12824:	b.gt	12ad8 <mpc_sqrt@@Base+0x6d8>
   12828:	ldr	w0, [sp, #112]
   1282c:	cbz	w0, 12c90 <mpc_sqrt@@Base+0x890>
   12830:	ldr	w0, [sp, #100]
   12834:	cmp	w0, #0x0
   12838:	b.le	12a8c <mpc_sqrt@@Base+0x68c>
   1283c:	ldr	w0, [sp, #112]
   12840:	cmp	w0, #0x2
   12844:	b.eq	12e58 <mpc_sqrt@@Base+0xa58>  // b.none
   12848:	cbz	w21, 12ecc <mpc_sqrt@@Base+0xacc>
   1284c:	ldr	w0, [sp, #148]
   12850:	mov	w20, #0xffffffff            	// #-1
   12854:	cbnz	w0, 12df0 <mpc_sqrt@@Base+0x9f0>
   12858:	mov	x0, x25
   1285c:	ldr	w23, [sp, #136]
   12860:	bl	4db0 <mpfr_clear@plt>
   12864:	mov	w19, #0x2                   	// #2
   12868:	mov	x0, x24
   1286c:	bl	4db0 <mpfr_clear@plt>
   12870:	b	12b60 <mpc_sqrt@@Base+0x760>
   12874:	ldr	x0, [sp, #120]
   12878:	bl	5520 <mpfr_number_p@plt>
   1287c:	mov	w19, w0
   12880:	ldr	x2, [sp, #104]
   12884:	add	x20, x2, #0x20
   12888:	cbz	w0, 12c44 <mpc_sqrt@@Base+0x844>
   1288c:	mov	w1, #0x1                   	// #1
   12890:	str	w1, [x2, #8]
   12894:	ldr	w1, [sp, #140]
   12898:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1289c:	str	x0, [x2, #16]
   128a0:	mov	w19, #0x0                   	// #0
   128a4:	mov	x0, x20
   128a8:	bl	5170 <mpfr_set_inf@plt>
   128ac:	b	124f0 <mpc_sqrt@@Base+0xf0>
   128b0:	ldr	x0, [sp, #120]
   128b4:	add	x24, sp, #0xd0
   128b8:	ldp	x6, x7, [x21, #32]
   128bc:	mov	x1, x24
   128c0:	ldp	x4, x5, [x0, #16]
   128c4:	mov	w3, #0x0                   	// #0
   128c8:	mov	x0, x24
   128cc:	mov	x2, #0x1                   	// #1
   128d0:	stp	x6, x7, [sp, #208]
   128d4:	stp	x4, x5, [sp, #224]
   128d8:	bl	5370 <mpfr_div_2ui@plt>
   128dc:	ldr	w0, [sp, #144]
   128e0:	cmp	w0, #0x0
   128e4:	b.le	12d68 <mpc_sqrt@@Base+0x968>
   128e8:	ldr	w2, [sp, #164]
   128ec:	mov	x1, x24
   128f0:	ldr	x0, [sp, #104]
   128f4:	bl	53a0 <mpfr_sqrt@plt>
   128f8:	mov	w21, w0
   128fc:	ldr	w2, [sp, #160]
   12900:	mov	x1, x24
   12904:	ldr	x0, [sp, #168]
   12908:	bl	53a0 <mpfr_sqrt@plt>
   1290c:	mov	w20, w0
   12910:	cmp	w21, #0x0
   12914:	mov	w0, #0x2                   	// #2
   12918:	cset	w19, ne  // ne = any
   1291c:	csel	w19, w19, w0, ge  // ge = tcont
   12920:	cmp	w20, #0x0
   12924:	orr	w0, w19, #0x4
   12928:	csel	w0, w0, w19, ne  // ne = any
   1292c:	orr	w19, w19, #0x8
   12930:	csel	w19, w0, w19, ge  // ge = tcont
   12934:	ldp	x23, x24, [sp, #48]
   12938:	b	124f0 <mpc_sqrt@@Base+0xf0>
   1293c:	ldr	x1, [x21]
   12940:	stp	x25, x26, [sp, #64]
   12944:	add	x25, sp, #0xb0
   12948:	ldr	x2, [sp, #104]
   1294c:	mov	x0, x25
   12950:	add	x22, x2, #0x20
   12954:	bl	5490 <mpfr_init2@plt>
   12958:	mov	w2, #0x0                   	// #0
   1295c:	mov	x1, x21
   12960:	mov	x0, x25
   12964:	bl	4bc0 <mpfr_neg@plt>
   12968:	ldr	w0, [sp, #140]
   1296c:	asr	w2, w19, #4
   12970:	cbz	w0, 12ddc <mpc_sqrt@@Base+0x9dc>
   12974:	cmp	w2, #0x2
   12978:	b.eq	12d1c <mpc_sqrt@@Base+0x91c>  // b.none
   1297c:	cmp	w2, #0x3
   12980:	mov	w0, #0x2                   	// #2
   12984:	csel	w2, w2, w0, ne  // ne = any
   12988:	mov	x1, x25
   1298c:	mov	x0, x22
   12990:	bl	53a0 <mpfr_sqrt@plt>
   12994:	neg	w20, w0
   12998:	mov	x1, x22
   1299c:	mov	x0, x22
   129a0:	mov	w2, #0x0                   	// #0
   129a4:	bl	4bc0 <mpfr_neg@plt>
   129a8:	ldr	x2, [sp, #104]
   129ac:	mov	w0, #0x1                   	// #1
   129b0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   129b4:	mov	w19, #0x8                   	// #8
   129b8:	str	w0, [x2, #8]
   129bc:	mov	x0, x25
   129c0:	str	x1, [x2, #16]
   129c4:	bl	4db0 <mpfr_clear@plt>
   129c8:	cmp	w20, #0x0
   129cc:	b.lt	12dd4 <mpc_sqrt@@Base+0x9d4>  // b.tstop
   129d0:	mov	w19, #0x4                   	// #4
   129d4:	ldp	x25, x26, [sp, #64]
   129d8:	b.ne	124f0 <mpc_sqrt@@Base+0xf0>  // b.any
   129dc:	b	12544 <mpc_sqrt@@Base+0x144>
   129e0:	mov	x0, x25
   129e4:	bl	4aa0 <mpfr_sub@plt>
   129e8:	orr	w19, w19, w0
   129ec:	b	12680 <mpc_sqrt@@Base+0x280>
   129f0:	mov	w3, #0x3                   	// #3
   129f4:	mov	x4, x26
   129f8:	mov	w2, w3
   129fc:	mov	x0, x25
   12a00:	bl	54a0 <mpfr_can_round@plt>
   12a04:	mov	w28, w0
   12a08:	b	126e4 <mpc_sqrt@@Base+0x2e4>
   12a0c:	cmp	w0, #0x0
   12a10:	mov	w3, #0x2                   	// #2
   12a14:	cinc	x4, x26, eq  // eq = none
   12a18:	mov	x0, x25
   12a1c:	mov	w2, #0x3                   	// #3
   12a20:	bl	54a0 <mpfr_can_round@plt>
   12a24:	mov	w28, w0
   12a28:	b	126e4 <mpc_sqrt@@Base+0x2e4>
   12a2c:	mov	w3, w27
   12a30:	mov	w2, w27
   12a34:	mov	x0, x24
   12a38:	bl	54a0 <mpfr_can_round@plt>
   12a3c:	b	1278c <mpc_sqrt@@Base+0x38c>
   12a40:	cmp	w0, #0x0
   12a44:	mov	w3, #0x1                   	// #1
   12a48:	cinc	x4, x2, eq  // eq = none
   12a4c:	mov	x0, x24
   12a50:	mov	w2, w27
   12a54:	bl	54a0 <mpfr_can_round@plt>
   12a58:	b	1278c <mpc_sqrt@@Base+0x38c>
   12a5c:	ldr	x19, [sp, #104]
   12a60:	mov	x0, x19
   12a64:	bl	4a80 <mpfr_set_nan@plt>
   12a68:	add	x0, x19, #0x20
   12a6c:	mov	w19, #0x0                   	// #0
   12a70:	bl	4a80 <mpfr_set_nan@plt>
   12a74:	mov	w0, w19
   12a78:	ldp	x19, x20, [sp, #16]
   12a7c:	ldp	x21, x22, [sp, #32]
   12a80:	ldp	x27, x28, [sp, #80]
   12a84:	ldp	x29, x30, [sp], #240
   12a88:	ret
   12a8c:	ldr	w0, [sp, #144]
   12a90:	cmp	w0, #0x0
   12a94:	ldr	w0, [sp, #112]
   12a98:	b.le	12f24 <mpc_sqrt@@Base+0xb24>
   12a9c:	cmp	w0, #0x2
   12aa0:	mov	w23, #0xffffffff            	// #-1
   12aa4:	b.ne	12ad8 <mpc_sqrt@@Base+0x6d8>  // b.any
   12aa8:	ldr	x0, [sp, #104]
   12aac:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12ab0:	ldr	x0, [x0, #48]
   12ab4:	cmp	x0, x1
   12ab8:	b.ge	12fe0 <mpc_sqrt@@Base+0xbe0>  // b.tcont
   12abc:	mov	x1, #0x2                   	// #2
   12ac0:	movk	x1, #0x8000, lsl #48
   12ac4:	cmp	x0, x1
   12ac8:	b.eq	13040 <mpc_sqrt@@Base+0xc40>  // b.none
   12acc:	ldr	x0, [sp, #168]
   12ad0:	mov	w23, #0x1                   	// #1
   12ad4:	bl	4bf0 <mpfr_nextbelow@plt>
   12ad8:	cbz	w21, 12b40 <mpc_sqrt@@Base+0x740>
   12adc:	ldr	w0, [sp, #148]
   12ae0:	cbz	w0, 12ca4 <mpc_sqrt@@Base+0x8a4>
   12ae4:	ldr	w0, [sp, #100]
   12ae8:	cmp	w0, #0x0
   12aec:	b.gt	12df0 <mpc_sqrt@@Base+0x9f0>
   12af0:	ldr	w0, [sp, #144]
   12af4:	cmp	w0, #0x0
   12af8:	b.le	12ee4 <mpc_sqrt@@Base+0xae4>
   12afc:	ldr	w0, [sp, #148]
   12b00:	ldr	w20, [sp, #136]
   12b04:	cmp	w27, w0
   12b08:	b.eq	12b40 <mpc_sqrt@@Base+0x740>  // b.none
   12b0c:	ldr	x0, [sp, #104]
   12b10:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12b14:	neg	w20, w20
   12b18:	ldr	x0, [x0, #16]
   12b1c:	cmp	x0, x1
   12b20:	b.ge	12f98 <mpc_sqrt@@Base+0xb98>  // b.tcont
   12b24:	mov	x1, #0x2                   	// #2
   12b28:	movk	x1, #0x8000, lsl #48
   12b2c:	cmp	x0, x1
   12b30:	b.eq	13038 <mpc_sqrt@@Base+0xc38>  // b.none
   12b34:	ldr	x0, [sp, #104]
   12b38:	bl	4e50 <mpfr_nextabove@plt>
   12b3c:	nop
   12b40:	mov	x0, x25
   12b44:	bl	4db0 <mpfr_clear@plt>
   12b48:	mov	x0, x24
   12b4c:	mov	w19, #0x2                   	// #2
   12b50:	bl	4db0 <mpfr_clear@plt>
   12b54:	tbnz	w20, #31, 12b60 <mpc_sqrt@@Base+0x760>
   12b58:	cmp	w20, #0x0
   12b5c:	cset	w19, ne  // ne = any
   12b60:	cmp	w23, #0x0
   12b64:	orr	w0, w19, #0x4
   12b68:	csel	w0, w0, w19, ne  // ne = any
   12b6c:	orr	w19, w19, #0x8
   12b70:	csel	w19, w0, w19, ge  // ge = tcont
   12b74:	mov	w0, w19
   12b78:	ldp	x19, x20, [sp, #16]
   12b7c:	ldp	x21, x22, [sp, #32]
   12b80:	ldp	x23, x24, [sp, #48]
   12b84:	ldp	x25, x26, [sp, #64]
   12b88:	ldp	x27, x28, [sp, #80]
   12b8c:	ldp	x29, x30, [sp], #240
   12b90:	ret
   12b94:	ldr	x19, [sp, #104]
   12b98:	mov	w1, #0x1                   	// #1
   12b9c:	mov	x0, x19
   12ba0:	bl	5170 <mpfr_set_inf@plt>
   12ba4:	ldr	w1, [sp, #140]
   12ba8:	add	x0, x19, #0x20
   12bac:	mov	w19, #0x0                   	// #0
   12bb0:	bl	5170 <mpfr_set_inf@plt>
   12bb4:	b	124f0 <mpc_sqrt@@Base+0xf0>
   12bb8:	ldr	x0, [sp, #104]
   12bbc:	mov	w2, w19
   12bc0:	mov	x1, x21
   12bc4:	bl	55d0 <mpc_set@plt>
   12bc8:	mov	w19, w0
   12bcc:	b	124f0 <mpc_sqrt@@Base+0xf0>
   12bd0:	ldr	w2, [sp, #164]
   12bd4:	mov	x1, x25
   12bd8:	ldr	w3, [sp, #184]
   12bdc:	ldr	x0, [sp, #104]
   12be0:	str	w4, [sp, #120]
   12be4:	bl	5220 <mpfr_set4@plt>
   12be8:	mov	w20, w0
   12bec:	ldr	w2, [sp, #160]
   12bf0:	mov	x1, x24
   12bf4:	ldr	w3, [sp, #216]
   12bf8:	ldr	x0, [sp, #168]
   12bfc:	bl	5220 <mpfr_set4@plt>
   12c00:	mov	w23, w0
   12c04:	ldr	w4, [sp, #120]
   12c08:	b	12804 <mpc_sqrt@@Base+0x404>
   12c0c:	ldr	w0, [sp, #144]
   12c10:	cmp	w0, #0x0
   12c14:	ldr	x0, [sp, #104]
   12c18:	ldr	x1, [x0]
   12c1c:	str	x1, [sp, #128]
   12c20:	ldr	x26, [x0, #32]
   12c24:	b.le	12cc4 <mpc_sqrt@@Base+0x8c4>
   12c28:	ldp	w2, w1, [sp, #160]
   12c2c:	mov	w0, #0x3                   	// #3
   12c30:	str	w2, [sp, #112]
   12c34:	cmp	w1, #0x1
   12c38:	csel	w0, w1, w0, ne  // ne = any
   12c3c:	str	w0, [sp, #148]
   12c40:	b	12614 <mpc_sqrt@@Base+0x214>
   12c44:	ldr	x0, [sp, #104]
   12c48:	bl	4a80 <mpfr_set_nan@plt>
   12c4c:	ldr	w1, [sp, #140]
   12c50:	mov	x0, x20
   12c54:	bl	5170 <mpfr_set_inf@plt>
   12c58:	b	124f0 <mpc_sqrt@@Base+0xf0>
   12c5c:	ldr	x0, [sp, #104]
   12c60:	mov	w3, #0x0                   	// #0
   12c64:	mov	x2, #0x0                   	// #0
   12c68:	mov	x1, #0x0                   	// #0
   12c6c:	bl	5090 <mpc_set_ui_ui@plt>
   12c70:	ldr	w0, [sp, #140]
   12c74:	cbz	w0, 12544 <mpc_sqrt@@Base+0x144>
   12c78:	ldr	x1, [sp, #104]
   12c7c:	mov	w2, #0x0                   	// #0
   12c80:	mov	w19, #0x0                   	// #0
   12c84:	mov	x0, x1
   12c88:	bl	4fb0 <mpc_conj@plt>
   12c8c:	b	124f0 <mpc_sqrt@@Base+0xf0>
   12c90:	ldr	w0, [sp, #100]
   12c94:	cmp	w0, #0x0
   12c98:	b.le	12e3c <mpc_sqrt@@Base+0xa3c>
   12c9c:	mov	w20, w19
   12ca0:	b	12ad8 <mpc_sqrt@@Base+0x6d8>
   12ca4:	ldr	w0, [sp, #100]
   12ca8:	cmp	w0, #0x0
   12cac:	b.gt	12e34 <mpc_sqrt@@Base+0xa34>
   12cb0:	ldr	w0, [sp, #144]
   12cb4:	cmp	w0, #0x0
   12cb8:	ldr	w0, [sp, #136]
   12cbc:	cneg	w20, w0, le
   12cc0:	b	12b40 <mpc_sqrt@@Base+0x740>
   12cc4:	mov	w1, #0x3                   	// #3
   12cc8:	str	w1, [sp, #112]
   12ccc:	asr	w0, w19, #4
   12cd0:	cmp	w0, #0x2
   12cd4:	b.eq	12cec <mpc_sqrt@@Base+0x8ec>  // b.none
   12cd8:	mov	w1, w0
   12cdc:	cmp	w0, #0x3
   12ce0:	mov	w0, #0x2                   	// #2
   12ce4:	csel	w0, w1, w0, ne  // ne = any
   12ce8:	str	w0, [sp, #112]
   12cec:	mov	w0, #0x3                   	// #3
   12cf0:	str	w0, [sp, #148]
   12cf4:	and	w1, w19, #0xf
   12cf8:	cmp	w1, #0x2
   12cfc:	b.eq	12614 <mpc_sqrt@@Base+0x214>  // b.none
   12d00:	mov	w0, #0xd                   	// #13
   12d04:	and	w19, w19, w0
   12d08:	cmp	w19, #0x1
   12d0c:	mov	w0, #0x2                   	// #2
   12d10:	csel	w0, w1, w0, ne  // ne = any
   12d14:	str	w0, [sp, #148]
   12d18:	b	12614 <mpc_sqrt@@Base+0x214>
   12d1c:	mov	w2, #0x3                   	// #3
   12d20:	b	12988 <mpc_sqrt@@Base+0x588>
   12d24:	ldr	w2, [sp, #164]
   12d28:	mov	x1, x24
   12d2c:	ldr	x0, [sp, #104]
   12d30:	bl	4bc0 <mpfr_neg@plt>
   12d34:	mov	w20, w0
   12d38:	ldr	w2, [sp, #160]
   12d3c:	mov	x1, x25
   12d40:	ldr	x0, [sp, #168]
   12d44:	bl	4bc0 <mpfr_neg@plt>
   12d48:	mov	w23, w0
   12d4c:	ldr	w4, [sp, #120]
   12d50:	b	12804 <mpc_sqrt@@Base+0x404>
   12d54:	ldr	x1, [sp, #104]
   12d58:	mov	w2, #0x0                   	// #0
   12d5c:	mov	x0, x1
   12d60:	bl	4fb0 <mpc_conj@plt>
   12d64:	b	124e0 <mpc_sqrt@@Base+0xe0>
   12d68:	mov	x1, x24
   12d6c:	mov	w2, #0x0                   	// #0
   12d70:	mov	x0, x24
   12d74:	bl	4bc0 <mpfr_neg@plt>
   12d78:	ldr	w2, [sp, #164]
   12d7c:	mov	x1, x24
   12d80:	ldr	x0, [sp, #104]
   12d84:	bl	53a0 <mpfr_sqrt@plt>
   12d88:	mov	w21, w0
   12d8c:	ldr	w1, [sp, #160]
   12d90:	cmp	w1, #0x2
   12d94:	b.eq	12e4c <mpc_sqrt@@Base+0xa4c>  // b.none
   12d98:	cmp	w1, #0x3
   12d9c:	mov	w0, #0x2                   	// #2
   12da0:	csel	w0, w1, w0, ne  // ne = any
   12da4:	str	w0, [sp, #160]
   12da8:	ldr	w2, [sp, #160]
   12dac:	mov	x1, x24
   12db0:	ldr	x19, [sp, #168]
   12db4:	mov	x0, x19
   12db8:	bl	53a0 <mpfr_sqrt@plt>
   12dbc:	mov	x1, x19
   12dc0:	neg	w20, w0
   12dc4:	mov	w2, #0x0                   	// #0
   12dc8:	mov	x0, x19
   12dcc:	bl	4bc0 <mpfr_neg@plt>
   12dd0:	b	12910 <mpc_sqrt@@Base+0x510>
   12dd4:	ldp	x25, x26, [sp, #64]
   12dd8:	b	124f0 <mpc_sqrt@@Base+0xf0>
   12ddc:	mov	x0, x22
   12de0:	mov	x1, x25
   12de4:	bl	53a0 <mpfr_sqrt@plt>
   12de8:	mov	w20, w0
   12dec:	b	129a8 <mpc_sqrt@@Base+0x5a8>
   12df0:	ldr	w0, [sp, #148]
   12df4:	ldr	w23, [sp, #136]
   12df8:	cmp	w27, w0
   12dfc:	b.eq	12b40 <mpc_sqrt@@Base+0x740>  // b.none
   12e00:	ldr	x0, [sp, #104]
   12e04:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12e08:	neg	w23, w23
   12e0c:	ldr	x0, [x0, #48]
   12e10:	cmp	x0, x1
   12e14:	b.ge	12eb0 <mpc_sqrt@@Base+0xab0>  // b.tcont
   12e18:	mov	x1, #0x2                   	// #2
   12e1c:	movk	x1, #0x8000, lsl #48
   12e20:	cmp	x0, x1
   12e24:	b.eq	13000 <mpc_sqrt@@Base+0xc00>  // b.none
   12e28:	ldr	x0, [sp, #168]
   12e2c:	bl	4e50 <mpfr_nextabove@plt>
   12e30:	b	12b40 <mpc_sqrt@@Base+0x740>
   12e34:	ldr	w23, [sp, #136]
   12e38:	b	12b40 <mpc_sqrt@@Base+0x740>
   12e3c:	ldr	w0, [sp, #144]
   12e40:	cmp	w0, #0x0
   12e44:	cneg	w23, w19, le
   12e48:	b	12ad8 <mpc_sqrt@@Base+0x6d8>
   12e4c:	mov	w0, #0x3                   	// #3
   12e50:	str	w0, [sp, #160]
   12e54:	b	12da8 <mpc_sqrt@@Base+0x9a8>
   12e58:	ldr	x0, [sp, #104]
   12e5c:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12e60:	ldr	x0, [x0, #16]
   12e64:	cmp	x0, x1
   12e68:	b.ge	12f7c <mpc_sqrt@@Base+0xb7c>  // b.tcont
   12e6c:	mov	x1, #0x2                   	// #2
   12e70:	movk	x1, #0x8000, lsl #48
   12e74:	cmp	x0, x1
   12e78:	b.eq	13028 <mpc_sqrt@@Base+0xc28>  // b.none
   12e7c:	ldr	x0, [sp, #104]
   12e80:	bl	4bf0 <mpfr_nextbelow@plt>
   12e84:	cbz	w21, 12f64 <mpc_sqrt@@Base+0xb64>
   12e88:	ldr	w0, [sp, #148]
   12e8c:	mov	w20, #0x1                   	// #1
   12e90:	cbnz	w0, 12df0 <mpc_sqrt@@Base+0x9f0>
   12e94:	mov	x0, x25
   12e98:	ldr	w23, [sp, #136]
   12e9c:	bl	4db0 <mpfr_clear@plt>
   12ea0:	mov	w20, #0x1                   	// #1
   12ea4:	mov	x0, x24
   12ea8:	bl	4db0 <mpfr_clear@plt>
   12eac:	b	12b58 <mpc_sqrt@@Base+0x758>
   12eb0:	ldr	x0, [sp, #104]
   12eb4:	ldr	w0, [x0, #40]
   12eb8:	cmp	w0, #0x0
   12ebc:	b.le	12e28 <mpc_sqrt@@Base+0xa28>
   12ec0:	ldr	x0, [sp, #168]
   12ec4:	bl	4bf0 <mpfr_nextbelow@plt>
   12ec8:	b	12b40 <mpc_sqrt@@Base+0x740>
   12ecc:	mov	x0, x25
   12ed0:	bl	4db0 <mpfr_clear@plt>
   12ed4:	mov	x0, x24
   12ed8:	mov	w19, #0x2                   	// #2
   12edc:	bl	4db0 <mpfr_clear@plt>
   12ee0:	b	12b60 <mpc_sqrt@@Base+0x760>
   12ee4:	ldr	w0, [sp, #148]
   12ee8:	cmp	w27, w0
   12eec:	b.eq	12fd4 <mpc_sqrt@@Base+0xbd4>  // b.none
   12ef0:	ldr	x0, [sp, #104]
   12ef4:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12ef8:	ldr	x0, [x0, #16]
   12efc:	cmp	x0, x1
   12f00:	b.ge	12fb4 <mpc_sqrt@@Base+0xbb4>  // b.tcont
   12f04:	mov	x1, #0x2                   	// #2
   12f08:	movk	x1, #0x8000, lsl #48
   12f0c:	cmp	x0, x1
   12f10:	b.eq	13030 <mpc_sqrt@@Base+0xc30>  // b.none
   12f14:	ldr	x0, [sp, #104]
   12f18:	ldr	w20, [sp, #136]
   12f1c:	bl	4e50 <mpfr_nextabove@plt>
   12f20:	b	12b40 <mpc_sqrt@@Base+0x740>
   12f24:	cmp	w0, #0x2
   12f28:	mov	w23, #0x1                   	// #1
   12f2c:	b.ne	12ad8 <mpc_sqrt@@Base+0x6d8>  // b.any
   12f30:	ldr	x0, [sp, #104]
   12f34:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   12f38:	ldr	x0, [x0, #48]
   12f3c:	cmp	x0, x1
   12f40:	b.ge	13008 <mpc_sqrt@@Base+0xc08>  // b.tcont
   12f44:	mov	x1, #0x2                   	// #2
   12f48:	movk	x1, #0x8000, lsl #48
   12f4c:	cmp	x0, x1
   12f50:	b.eq	13048 <mpc_sqrt@@Base+0xc48>  // b.none
   12f54:	ldr	x0, [sp, #168]
   12f58:	mov	w23, #0xffffffff            	// #-1
   12f5c:	bl	4bf0 <mpfr_nextbelow@plt>
   12f60:	b	12ad8 <mpc_sqrt@@Base+0x6d8>
   12f64:	mov	x0, x25
   12f68:	bl	4db0 <mpfr_clear@plt>
   12f6c:	mov	x0, x24
   12f70:	mov	w19, #0x1                   	// #1
   12f74:	bl	4db0 <mpfr_clear@plt>
   12f78:	b	12b60 <mpc_sqrt@@Base+0x760>
   12f7c:	ldr	x0, [sp, #104]
   12f80:	ldr	w0, [x0, #8]
   12f84:	cmp	w0, #0x0
   12f88:	b.le	12e7c <mpc_sqrt@@Base+0xa7c>
   12f8c:	ldr	x0, [sp, #104]
   12f90:	bl	4e50 <mpfr_nextabove@plt>
   12f94:	b	12e84 <mpc_sqrt@@Base+0xa84>
   12f98:	ldr	x0, [sp, #104]
   12f9c:	ldr	w0, [x0, #8]
   12fa0:	cmp	w0, #0x0
   12fa4:	b.le	12b34 <mpc_sqrt@@Base+0x734>
   12fa8:	ldr	x0, [sp, #104]
   12fac:	bl	4bf0 <mpfr_nextbelow@plt>
   12fb0:	b	12b40 <mpc_sqrt@@Base+0x740>
   12fb4:	ldr	x0, [sp, #104]
   12fb8:	ldr	w0, [x0, #8]
   12fbc:	cmp	w0, #0x0
   12fc0:	b.le	12f14 <mpc_sqrt@@Base+0xb14>
   12fc4:	ldr	x0, [sp, #104]
   12fc8:	ldr	w20, [sp, #136]
   12fcc:	bl	4bf0 <mpfr_nextbelow@plt>
   12fd0:	b	12b40 <mpc_sqrt@@Base+0x740>
   12fd4:	ldr	w0, [sp, #136]
   12fd8:	neg	w20, w0
   12fdc:	b	12b40 <mpc_sqrt@@Base+0x740>
   12fe0:	ldr	x0, [sp, #104]
   12fe4:	ldr	w0, [x0, #40]
   12fe8:	cmp	w0, #0x0
   12fec:	b.le	12acc <mpc_sqrt@@Base+0x6cc>
   12ff0:	ldr	x0, [sp, #168]
   12ff4:	mov	w23, #0x1                   	// #1
   12ff8:	bl	4e50 <mpfr_nextabove@plt>
   12ffc:	b	12ad8 <mpc_sqrt@@Base+0x6d8>
   13000:	bl	4b40 <mpfr_set_erangeflag@plt>
   13004:	b	12e28 <mpc_sqrt@@Base+0xa28>
   13008:	ldr	x0, [sp, #104]
   1300c:	ldr	w0, [x0, #40]
   13010:	cmp	w0, #0x0
   13014:	b.le	12f54 <mpc_sqrt@@Base+0xb54>
   13018:	ldr	x0, [sp, #168]
   1301c:	mov	w23, #0xffffffff            	// #-1
   13020:	bl	4e50 <mpfr_nextabove@plt>
   13024:	b	12ad8 <mpc_sqrt@@Base+0x6d8>
   13028:	bl	4b40 <mpfr_set_erangeflag@plt>
   1302c:	b	12e7c <mpc_sqrt@@Base+0xa7c>
   13030:	bl	4b40 <mpfr_set_erangeflag@plt>
   13034:	b	12f14 <mpc_sqrt@@Base+0xb14>
   13038:	bl	4b40 <mpfr_set_erangeflag@plt>
   1303c:	b	12b34 <mpc_sqrt@@Base+0x734>
   13040:	bl	4b40 <mpfr_set_erangeflag@plt>
   13044:	b	12acc <mpc_sqrt@@Base+0x6cc>
   13048:	bl	4b40 <mpfr_set_erangeflag@plt>
   1304c:	b	12f54 <mpc_sqrt@@Base+0xb54>
   13050:	mov	x0, #0x2                   	// #2
   13054:	sdiv	x0, x20, x0
   13058:	b	12630 <mpc_sqrt@@Base+0x230>
   1305c:	nop
   13060:	stp	x29, x30, [sp, #-32]!
   13064:	mov	x29, sp
   13068:	str	x19, [sp, #16]
   1306c:	mov	x19, x0
   13070:	bl	51c0 <__ctype_b_loc@plt>
   13074:	ldr	x0, [x0]
   13078:	ldr	x1, [x19]
   1307c:	b	13084 <mpc_sqrt@@Base+0xc84>
   13080:	str	x1, [x19]
   13084:	ldrb	w2, [x1], #1
   13088:	ldrh	w2, [x0, x2, lsl #1]
   1308c:	tbnz	w2, #13, 13080 <mpc_sqrt@@Base+0xc80>
   13090:	ldr	x19, [sp, #16]
   13094:	ldp	x29, x30, [sp], #32
   13098:	ret
   1309c:	nop

00000000000130a0 <mpc_strtoc@@Base>:
   130a0:	stp	x29, x30, [sp, #-112]!
   130a4:	cmp	w3, #0x24
   130a8:	ccmp	w3, #0x1, #0x4, le
   130ac:	mov	x29, sp
   130b0:	stp	x19, x20, [sp, #16]
   130b4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   130b8:	mov	x19, x0
   130bc:	stp	x21, x22, [sp, #32]
   130c0:	mov	x21, x1
   130c4:	mov	x22, x2
   130c8:	stp	x25, x26, [sp, #64]
   130cc:	add	x25, x0, #0x20
   130d0:	b.eq	13234 <mpc_strtoc@@Base+0x194>  // b.none
   130d4:	stp	x23, x24, [sp, #48]
   130d8:	add	x24, sp, #0x60
   130dc:	mov	w26, w4
   130e0:	mov	x0, x24
   130e4:	mov	w20, w3
   130e8:	str	x1, [sp, #96]
   130ec:	bl	13060 <mpc_sqrt@@Base+0xc60>
   130f0:	ldr	x1, [sp, #96]
   130f4:	and	w4, w26, #0xf
   130f8:	ldrb	w0, [x1]
   130fc:	cmp	w0, #0x28
   13100:	b.eq	13184 <mpc_strtoc@@Base+0xe4>  // b.none
   13104:	add	x2, sp, #0x68
   13108:	mov	w3, w20
   1310c:	mov	x0, x19
   13110:	bl	4b00 <mpfr_strtofr@plt>
   13114:	ldp	x2, x1, [sp, #96]
   13118:	mov	w23, w0
   1311c:	cmp	x1, x2
   13120:	b.eq	13254 <mpc_strtoc@@Base+0x1b4>  // b.none
   13124:	mov	w2, #0x1                   	// #1
   13128:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1312c:	mov	w20, #0x0                   	// #0
   13130:	str	w2, [x19, #40]
   13134:	str	x0, [x19, #48]
   13138:	str	x1, [sp, #96]
   1313c:	cbz	x22, 13148 <mpc_strtoc@@Base+0xa8>
   13140:	ldr	x0, [sp, #96]
   13144:	str	x0, [x22]
   13148:	cmp	w23, #0x0
   1314c:	mov	w0, #0x2                   	// #2
   13150:	cset	w1, ne  // ne = any
   13154:	csel	w0, w1, w0, ge  // ge = tcont
   13158:	cmp	w20, #0x0
   1315c:	ldp	x23, x24, [sp, #48]
   13160:	orr	w2, w0, #0x4
   13164:	orr	w1, w0, #0x8
   13168:	csel	w0, w2, w0, ne  // ne = any
   1316c:	csel	w0, w0, w1, ge  // ge = tcont
   13170:	ldp	x19, x20, [sp, #16]
   13174:	ldp	x21, x22, [sp, #32]
   13178:	ldp	x25, x26, [sp, #64]
   1317c:	ldp	x29, x30, [sp], #112
   13180:	ret
   13184:	stp	x27, x28, [sp, #80]
   13188:	add	x27, sp, #0x68
   1318c:	add	x1, x1, #0x1
   13190:	mov	x2, x27
   13194:	mov	w3, w20
   13198:	mov	x0, x19
   1319c:	str	x1, [sp, #96]
   131a0:	bl	4b00 <mpfr_strtofr@plt>
   131a4:	add	x25, x19, #0x20
   131a8:	ldp	x1, x28, [sp, #96]
   131ac:	mov	w23, w0
   131b0:	cmp	x28, x1
   131b4:	b.eq	1322c <mpc_strtoc@@Base+0x18c>  // b.none
   131b8:	str	x28, [sp, #96]
   131bc:	bl	51c0 <__ctype_b_loc@plt>
   131c0:	ldrb	w1, [x28]
   131c4:	ldr	x0, [x0]
   131c8:	ldrh	w0, [x0, x1, lsl #1]
   131cc:	tbz	w0, #13, 1322c <mpc_strtoc@@Base+0x18c>
   131d0:	mov	x0, x24
   131d4:	bl	13060 <mpc_sqrt@@Base+0xc60>
   131d8:	ldr	x1, [sp, #96]
   131dc:	mov	w3, w20
   131e0:	mov	x2, x27
   131e4:	asr	w4, w26, #4
   131e8:	mov	x0, x25
   131ec:	bl	4b00 <mpfr_strtofr@plt>
   131f0:	mov	w20, w0
   131f4:	ldp	x2, x1, [sp, #96]
   131f8:	cmp	x1, x2
   131fc:	b.eq	1322c <mpc_strtoc@@Base+0x18c>  // b.none
   13200:	mov	x0, x24
   13204:	str	x1, [sp, #96]
   13208:	bl	13060 <mpc_sqrt@@Base+0xc60>
   1320c:	ldr	x1, [sp, #96]
   13210:	ldrb	w0, [x1]
   13214:	cmp	w0, #0x29
   13218:	b.ne	1322c <mpc_strtoc@@Base+0x18c>  // b.any
   1321c:	add	x1, x1, #0x1
   13220:	str	x1, [sp, #96]
   13224:	ldp	x27, x28, [sp, #80]
   13228:	b	1313c <mpc_strtoc@@Base+0x9c>
   1322c:	ldp	x23, x24, [sp, #48]
   13230:	ldp	x27, x28, [sp, #80]
   13234:	cbz	x22, 1323c <mpc_strtoc@@Base+0x19c>
   13238:	str	x21, [x22]
   1323c:	mov	x0, x19
   13240:	bl	4a80 <mpfr_set_nan@plt>
   13244:	mov	x0, x25
   13248:	bl	4a80 <mpfr_set_nan@plt>
   1324c:	mov	w0, #0xffffffff            	// #-1
   13250:	b	13170 <mpc_strtoc@@Base+0xd0>
   13254:	add	x25, x19, #0x20
   13258:	ldp	x23, x24, [sp, #48]
   1325c:	cbnz	x22, 13238 <mpc_strtoc@@Base+0x198>
   13260:	b	1323c <mpc_strtoc@@Base+0x19c>
   13264:	nop

0000000000013268 <mpc_sub@@Base>:
   13268:	stp	x29, x30, [sp, #-64]!
   1326c:	mov	x29, sp
   13270:	stp	x19, x20, [sp, #16]
   13274:	mov	w20, w3
   13278:	and	w3, w3, #0xf
   1327c:	stp	x21, x22, [sp, #32]
   13280:	mov	x21, x0
   13284:	mov	x22, x1
   13288:	str	x23, [sp, #48]
   1328c:	mov	x23, x2
   13290:	bl	4aa0 <mpfr_sub@plt>
   13294:	mov	w19, w0
   13298:	asr	w3, w20, #4
   1329c:	add	x2, x23, #0x20
   132a0:	add	x1, x22, #0x20
   132a4:	add	x0, x21, #0x20
   132a8:	bl	4aa0 <mpfr_sub@plt>
   132ac:	cmp	w19, #0x0
   132b0:	mov	w2, #0x2                   	// #2
   132b4:	cset	w1, ne  // ne = any
   132b8:	csel	w1, w1, w2, ge  // ge = tcont
   132bc:	cmp	w0, #0x0
   132c0:	orr	w3, w1, #0x4
   132c4:	orr	w2, w1, #0x8
   132c8:	csel	w1, w3, w1, ne  // ne = any
   132cc:	csel	w1, w1, w2, ge  // ge = tcont
   132d0:	mov	w0, w1
   132d4:	ldp	x19, x20, [sp, #16]
   132d8:	ldp	x21, x22, [sp, #32]
   132dc:	ldr	x23, [sp, #48]
   132e0:	ldp	x29, x30, [sp], #64
   132e4:	ret

00000000000132e8 <mpc_sub_fr@@Base>:
   132e8:	stp	x29, x30, [sp, #-48]!
   132ec:	mov	x29, sp
   132f0:	stp	x19, x20, [sp, #16]
   132f4:	mov	x20, x1
   132f8:	stp	x21, x22, [sp, #32]
   132fc:	mov	w21, w3
   13300:	mov	x22, x0
   13304:	and	w3, w3, #0xf
   13308:	bl	4aa0 <mpfr_sub@plt>
   1330c:	ldr	w3, [x20, #40]
   13310:	mov	w19, w0
   13314:	asr	w2, w21, #4
   13318:	add	x1, x20, #0x20
   1331c:	add	x0, x22, #0x20
   13320:	bl	5220 <mpfr_set4@plt>
   13324:	cmp	w19, #0x0
   13328:	mov	w2, #0x2                   	// #2
   1332c:	cset	w1, ne  // ne = any
   13330:	csel	w1, w1, w2, ge  // ge = tcont
   13334:	cmp	w0, #0x0
   13338:	orr	w3, w1, #0x4
   1333c:	orr	w2, w1, #0x8
   13340:	csel	w1, w3, w1, ne  // ne = any
   13344:	csel	w1, w1, w2, ge  // ge = tcont
   13348:	mov	w0, w1
   1334c:	ldp	x19, x20, [sp, #16]
   13350:	ldp	x21, x22, [sp, #32]
   13354:	ldp	x29, x30, [sp], #48
   13358:	ret
   1335c:	nop

0000000000013360 <mpc_sub_ui@@Base>:
   13360:	stp	x29, x30, [sp, #-48]!
   13364:	mov	x29, sp
   13368:	stp	x19, x20, [sp, #16]
   1336c:	mov	x20, x1
   13370:	stp	x21, x22, [sp, #32]
   13374:	mov	w21, w3
   13378:	mov	x22, x0
   1337c:	and	w3, w3, #0xf
   13380:	bl	5140 <mpfr_sub_ui@plt>
   13384:	ldr	w3, [x20, #40]
   13388:	mov	w19, w0
   1338c:	asr	w2, w21, #4
   13390:	add	x1, x20, #0x20
   13394:	add	x0, x22, #0x20
   13398:	bl	5220 <mpfr_set4@plt>
   1339c:	cmp	w19, #0x0
   133a0:	mov	w2, #0x2                   	// #2
   133a4:	cset	w1, ne  // ne = any
   133a8:	csel	w1, w1, w2, ge  // ge = tcont
   133ac:	cmp	w0, #0x0
   133b0:	orr	w3, w1, #0x4
   133b4:	orr	w2, w1, #0x8
   133b8:	csel	w1, w3, w1, ne  // ne = any
   133bc:	csel	w1, w1, w2, ge  // ge = tcont
   133c0:	mov	w0, w1
   133c4:	ldp	x19, x20, [sp, #16]
   133c8:	ldp	x21, x22, [sp, #32]
   133cc:	ldp	x29, x30, [sp], #48
   133d0:	ret
   133d4:	nop

00000000000133d8 <mpc_swap@@Base>:
   133d8:	stp	x29, x30, [sp, #-32]!
   133dc:	mov	x29, sp
   133e0:	stp	x19, x20, [sp, #16]
   133e4:	mov	x19, x0
   133e8:	mov	x20, x1
   133ec:	bl	50e0 <mpfr_swap@plt>
   133f0:	add	x1, x20, #0x20
   133f4:	add	x0, x19, #0x20
   133f8:	ldp	x19, x20, [sp, #16]
   133fc:	ldp	x29, x30, [sp], #32
   13400:	b	50e0 <mpfr_swap@plt>
   13404:	nop

0000000000013408 <mpc_tan@@Base>:
   13408:	stp	x29, x30, [sp, #-256]!
   1340c:	mov	x29, sp
   13410:	stp	x19, x20, [sp, #16]
   13414:	stp	x25, x26, [sp, #64]
   13418:	mov	x26, x0
   1341c:	mov	x25, x1
   13420:	mov	x0, x1
   13424:	str	w2, [sp, #96]
   13428:	bl	5520 <mpfr_number_p@plt>
   1342c:	cbnz	w0, 13514 <mpc_tan@@Base+0x10c>
   13430:	ldr	x0, [x25, #16]
   13434:	mov	x1, #0x2                   	// #2
   13438:	movk	x1, #0x8000, lsl #48
   1343c:	cmp	x0, x1
   13440:	ldr	x2, [x25, #48]
   13444:	b.eq	134d0 <mpc_tan@@Base+0xc8>  // b.none
   13448:	cmp	x2, x1
   1344c:	b.eq	139e0 <mpc_tan@@Base+0x5d8>  // b.none
   13450:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13454:	add	x20, x26, #0x20
   13458:	cmp	x0, x1
   1345c:	b.ne	13914 <mpc_tan@@Base+0x50c>  // b.any
   13460:	cmp	x2, x0
   13464:	b.ne	13b6c <mpc_tan@@Base+0x764>  // b.any
   13468:	ldr	w1, [x25, #8]
   1346c:	mov	w3, #0x1                   	// #1
   13470:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13474:	str	w3, [x26, #8]
   13478:	cmp	w1, #0x0
   1347c:	str	x0, [x26, #16]
   13480:	mov	x1, x26
   13484:	cneg	w3, w3, lt  // lt = tstop
   13488:	mov	x0, x26
   1348c:	mov	w2, #0x0                   	// #0
   13490:	bl	5220 <mpfr_set4@plt>
   13494:	ldr	w0, [x25, #40]
   13498:	ldr	w1, [sp, #96]
   1349c:	asr	w3, w1, #4
   134a0:	tbnz	w0, #31, 13be0 <mpc_tan@@Base+0x7d8>
   134a4:	mov	x0, x20
   134a8:	mov	x2, #0x0                   	// #0
   134ac:	mov	x1, #0x1                   	// #1
   134b0:	bl	5180 <mpfr_set_ui_2exp@plt>
   134b4:	cmp	w0, #0x0
   134b8:	mov	w19, #0x8                   	// #8
   134bc:	b.lt	13800 <mpc_tan@@Base+0x3f8>  // b.tstop
   134c0:	mov	w19, #0x0                   	// #0
   134c4:	b.eq	13800 <mpc_tan@@Base+0x3f8>  // b.none
   134c8:	mov	w19, #0x4                   	// #4
   134cc:	b	13800 <mpc_tan@@Base+0x3f8>
   134d0:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   134d4:	cmp	x2, x0
   134d8:	b.ne	139f0 <mpc_tan@@Base+0x5e8>  // b.any
   134dc:	ldr	w1, [x25, #40]
   134e0:	mov	x0, x26
   134e4:	ldr	w3, [sp, #96]
   134e8:	mov	x2, #0x1                   	// #1
   134ec:	cmp	w1, #0x0
   134f0:	mov	x1, #0x0                   	// #0
   134f4:	cneg	x2, x2, lt  // lt = tstop
   134f8:	bl	5310 <mpc_set_si_si@plt>
   134fc:	mov	w19, w0
   13500:	mov	w0, w19
   13504:	ldp	x19, x20, [sp, #16]
   13508:	ldp	x25, x26, [sp, #64]
   1350c:	ldp	x29, x30, [sp], #256
   13510:	ret
   13514:	add	x19, x25, #0x20
   13518:	mov	x0, x19
   1351c:	bl	5520 <mpfr_number_p@plt>
   13520:	cbz	w0, 13430 <mpc_tan@@Base+0x28>
   13524:	ldr	w2, [sp, #96]
   13528:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   1352c:	ldr	x1, [x25, #16]
   13530:	asr	w2, w2, #4
   13534:	str	w2, [sp, #116]
   13538:	cmp	x1, x0
   1353c:	b.eq	13c94 <mpc_tan@@Base+0x88c>  // b.none
   13540:	ldr	x1, [x25, #48]
   13544:	cmp	x1, x0
   13548:	b.eq	13bf4 <mpc_tan@@Base+0x7ec>  // b.none
   1354c:	stp	x21, x22, [sp, #32]
   13550:	add	x21, sp, #0x80
   13554:	mov	x0, x21
   13558:	ldr	x2, [x26]
   1355c:	stp	x23, x24, [sp, #48]
   13560:	add	x24, sp, #0xc0
   13564:	ldr	x22, [x26, #32]
   13568:	mov	x1, #0x2                   	// #2
   1356c:	stp	x27, x28, [sp, #80]
   13570:	add	x28, x21, #0x20
   13574:	cmp	x22, x2
   13578:	csel	x22, x22, x2, ge  // ge = tcont
   1357c:	add	x2, x24, #0x20
   13580:	str	x2, [sp, #104]
   13584:	mov	x23, #0x7                   	// #7
   13588:	mov	x19, #0x8000000000000003    	// #-9223372036854775805
   1358c:	bl	4d40 <mpc_init2@plt>
   13590:	mov	x0, x24
   13594:	mov	x1, #0x2                   	// #2
   13598:	bl	4d40 <mpc_init2@plt>
   1359c:	ldr	w0, [sp, #116]
   135a0:	cmp	w0, #0x0
   135a4:	cset	x0, eq  // eq = none
   135a8:	str	x0, [sp, #120]
   135ac:	nop
   135b0:	mov	x0, x22
   135b4:	bl	4d70 <mpc_ceil_log2@plt>
   135b8:	mov	x1, x0
   135bc:	mov	x0, x21
   135c0:	add	x23, x1, x23
   135c4:	add	x22, x22, x23
   135c8:	mov	x1, x22
   135cc:	bl	4c40 <mpc_set_prec@plt>
   135d0:	mov	x1, x22
   135d4:	mov	x0, x24
   135d8:	bl	4c40 <mpc_set_prec@plt>
   135dc:	mov	w4, #0x11                  	// #17
   135e0:	mov	x2, x25
   135e4:	mov	w3, w4
   135e8:	mov	x1, x24
   135ec:	mov	x0, x21
   135f0:	bl	5190 <mpc_sin_cos@plt>
   135f4:	ldr	x0, [sp, #144]
   135f8:	cmp	x0, x19
   135fc:	b.ge	13868 <mpc_tan@@Base+0x460>  // b.tcont
   13600:	mov	x1, #0x2                   	// #2
   13604:	movk	x1, #0x8000, lsl #48
   13608:	cmp	x0, x1
   1360c:	b.eq	1390c <mpc_tan@@Base+0x504>  // b.none
   13610:	mov	x0, x21
   13614:	bl	4bf0 <mpfr_nextbelow@plt>
   13618:	ldr	x0, [sp, #176]
   1361c:	cmp	x0, x19
   13620:	b.ge	1382c <mpc_tan@@Base+0x424>  // b.tcont
   13624:	mov	x1, #0x2                   	// #2
   13628:	movk	x1, #0x8000, lsl #48
   1362c:	cmp	x0, x1
   13630:	b.eq	13904 <mpc_tan@@Base+0x4fc>  // b.none
   13634:	mov	x0, x28
   13638:	bl	4bf0 <mpfr_nextbelow@plt>
   1363c:	ldr	x0, [sp, #208]
   13640:	cmp	x0, x19
   13644:	b.ge	13850 <mpc_tan@@Base+0x448>  // b.tcont
   13648:	mov	x1, #0x2                   	// #2
   1364c:	movk	x1, #0x8000, lsl #48
   13650:	cmp	x0, x1
   13654:	b.eq	138f4 <mpc_tan@@Base+0x4ec>  // b.none
   13658:	mov	x0, x24
   1365c:	bl	4bf0 <mpfr_nextbelow@plt>
   13660:	ldr	x0, [sp, #240]
   13664:	cmp	x0, x19
   13668:	b.ge	13814 <mpc_tan@@Base+0x40c>  // b.tcont
   1366c:	mov	x1, #0x2                   	// #2
   13670:	movk	x1, #0x8000, lsl #48
   13674:	cmp	x0, x1
   13678:	b.eq	138fc <mpc_tan@@Base+0x4f4>  // b.none
   1367c:	ldr	x0, [sp, #104]
   13680:	bl	4bf0 <mpfr_nextbelow@plt>
   13684:	ldr	x27, [sp, #144]
   13688:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   1368c:	cmp	x27, x4
   13690:	b.eq	13cd8 <mpc_tan@@Base+0x8d0>  // b.none
   13694:	cmp	x27, x19
   13698:	b.eq	13b84 <mpc_tan@@Base+0x77c>  // b.none
   1369c:	ldr	x0, [sp, #176]
   136a0:	cmp	x0, x19
   136a4:	b.eq	13a30 <mpc_tan@@Base+0x628>  // b.none
   136a8:	ldr	x23, [sp, #208]
   136ac:	cmp	x23, x19
   136b0:	b.eq	13c50 <mpc_tan@@Base+0x848>  // b.none
   136b4:	ldr	x20, [sp, #240]
   136b8:	cmp	x20, x19
   136bc:	b.eq	13a30 <mpc_tan@@Base+0x628>  // b.none
   136c0:	mov	x2, x24
   136c4:	mov	x1, x21
   136c8:	mov	x0, x21
   136cc:	mov	w3, #0x11                  	// #17
   136d0:	bl	52a0 <mpc_div@plt>
   136d4:	ldr	x2, [sp, #144]
   136d8:	mov	x4, #0x8000000000000001    	// #-9223372036854775807
   136dc:	cmp	x2, x4
   136e0:	b.eq	13880 <mpc_tan@@Base+0x478>  // b.none
   136e4:	ldr	x3, [sp, #176]
   136e8:	cmp	x3, x4
   136ec:	b.eq	13880 <mpc_tan@@Base+0x478>  // b.none
   136f0:	tst	x0, #0x3
   136f4:	asr	w1, w0, #2
   136f8:	b.eq	13888 <mpc_tan@@Base+0x480>  // b.none
   136fc:	cmp	x2, x19
   13700:	b.ge	138ac <mpc_tan@@Base+0x4a4>  // b.tcont
   13704:	mov	x0, #0x2                   	// #2
   13708:	movk	x0, #0x8000, lsl #48
   1370c:	cmp	x2, x0
   13710:	b.eq	13bd0 <mpc_tan@@Base+0x7c8>  // b.none
   13714:	mov	x0, x21
   13718:	str	w1, [sp, #112]
   1371c:	bl	4bf0 <mpfr_nextbelow@plt>
   13720:	ldr	w1, [sp, #112]
   13724:	cbz	w1, 1374c <mpc_tan@@Base+0x344>
   13728:	ldr	x3, [sp, #176]
   1372c:	cmp	x3, x19
   13730:	b.ge	13894 <mpc_tan@@Base+0x48c>  // b.tcont
   13734:	mov	x0, #0x2                   	// #2
   13738:	movk	x0, #0x8000, lsl #48
   1373c:	cmp	x3, x0
   13740:	b.eq	13bc8 <mpc_tan@@Base+0x7c0>  // b.none
   13744:	mov	x0, x28
   13748:	bl	4bf0 <mpfr_nextbelow@plt>
   1374c:	ldr	x2, [sp, #144]
   13750:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13754:	cmp	x2, x0
   13758:	b.eq	13d08 <mpc_tan@@Base+0x900>  // b.none
   1375c:	sub	x20, x23, x20, lsl #1
   13760:	neg	x23, x23
   13764:	cmp	x20, x23
   13768:	sub	x2, x27, x2
   1376c:	csel	x20, x20, x23, ge  // ge = tcont
   13770:	mov	x23, #0x7                   	// #7
   13774:	add	x20, x20, x2
   13778:	cmp	x20, #0x1
   1377c:	b.le	13790 <mpc_tan@@Base+0x388>
   13780:	cmp	x20, #0x2
   13784:	add	x20, x20, #0x5
   13788:	mov	x23, #0x8                   	// #8
   1378c:	csel	x23, x20, x23, ne  // ne = any
   13790:	mov	x0, x21
   13794:	bl	5520 <mpfr_number_p@plt>
   13798:	cbz	w0, 137c4 <mpc_tan@@Base+0x3bc>
   1379c:	ldr	x0, [sp, #96]
   137a0:	sub	x1, x22, x23
   137a4:	ldr	x4, [x26]
   137a8:	mov	w3, #0x1                   	// #1
   137ac:	tst	x0, #0xf
   137b0:	mov	w2, #0x0                   	// #0
   137b4:	mov	x0, x21
   137b8:	cinc	x4, x4, eq  // eq = none
   137bc:	bl	54a0 <mpfr_can_round@plt>
   137c0:	cbz	w0, 135b0 <mpc_tan@@Base+0x1a8>
   137c4:	mov	x0, x28
   137c8:	bl	5520 <mpfr_number_p@plt>
   137cc:	cbnz	w0, 138cc <mpc_tan@@Base+0x4c4>
   137d0:	ldr	w2, [sp, #96]
   137d4:	mov	x0, x26
   137d8:	mov	x1, x21
   137dc:	bl	55d0 <mpc_set@plt>
   137e0:	mov	w19, w0
   137e4:	mov	x0, x21
   137e8:	bl	4a50 <mpc_clear@plt>
   137ec:	mov	x0, x24
   137f0:	bl	4a50 <mpc_clear@plt>
   137f4:	ldp	x21, x22, [sp, #32]
   137f8:	ldp	x23, x24, [sp, #48]
   137fc:	ldp	x27, x28, [sp, #80]
   13800:	mov	w0, w19
   13804:	ldp	x19, x20, [sp, #16]
   13808:	ldp	x25, x26, [sp, #64]
   1380c:	ldp	x29, x30, [sp], #256
   13810:	ret
   13814:	ldr	w0, [sp, #232]
   13818:	cmp	w0, #0x0
   1381c:	b.le	1367c <mpc_tan@@Base+0x274>
   13820:	ldr	x0, [sp, #104]
   13824:	bl	4e50 <mpfr_nextabove@plt>
   13828:	b	13684 <mpc_tan@@Base+0x27c>
   1382c:	ldr	w0, [sp, #168]
   13830:	cmp	w0, #0x0
   13834:	b.le	13634 <mpc_tan@@Base+0x22c>
   13838:	mov	x0, x28
   1383c:	bl	4e50 <mpfr_nextabove@plt>
   13840:	ldr	x0, [sp, #208]
   13844:	cmp	x0, x19
   13848:	b.lt	13648 <mpc_tan@@Base+0x240>  // b.tstop
   1384c:	nop
   13850:	ldr	w0, [sp, #200]
   13854:	cmp	w0, #0x0
   13858:	b.le	13658 <mpc_tan@@Base+0x250>
   1385c:	mov	x0, x24
   13860:	bl	4e50 <mpfr_nextabove@plt>
   13864:	b	13660 <mpc_tan@@Base+0x258>
   13868:	ldr	w0, [sp, #136]
   1386c:	cmp	w0, #0x0
   13870:	b.le	13610 <mpc_tan@@Base+0x208>
   13874:	mov	x0, x21
   13878:	bl	4e50 <mpfr_nextabove@plt>
   1387c:	b	13618 <mpc_tan@@Base+0x210>
   13880:	mov	x23, x22
   13884:	b	135b0 <mpc_tan@@Base+0x1a8>
   13888:	cbz	w1, 1375c <mpc_tan@@Base+0x354>
   1388c:	cmp	x3, x19
   13890:	b.lt	13734 <mpc_tan@@Base+0x32c>  // b.tstop
   13894:	ldr	w0, [sp, #168]
   13898:	cmp	w0, #0x0
   1389c:	b.le	13744 <mpc_tan@@Base+0x33c>
   138a0:	mov	x0, x28
   138a4:	bl	4e50 <mpfr_nextabove@plt>
   138a8:	b	1374c <mpc_tan@@Base+0x344>
   138ac:	ldr	w0, [sp, #136]
   138b0:	cmp	w0, #0x0
   138b4:	b.le	13714 <mpc_tan@@Base+0x30c>
   138b8:	mov	x0, x21
   138bc:	str	w1, [sp, #112]
   138c0:	bl	4e50 <mpfr_nextabove@plt>
   138c4:	ldr	w1, [sp, #112]
   138c8:	b	13724 <mpc_tan@@Base+0x31c>
   138cc:	ldr	x4, [x26, #32]
   138d0:	sub	x1, x22, #0x6
   138d4:	ldr	x0, [sp, #120]
   138d8:	mov	w3, #0x1                   	// #1
   138dc:	mov	w2, #0x0                   	// #0
   138e0:	add	x4, x0, x4
   138e4:	mov	x0, x28
   138e8:	bl	54a0 <mpfr_can_round@plt>
   138ec:	cbnz	w0, 137d0 <mpc_tan@@Base+0x3c8>
   138f0:	b	135b0 <mpc_tan@@Base+0x1a8>
   138f4:	bl	4b40 <mpfr_set_erangeflag@plt>
   138f8:	b	13658 <mpc_tan@@Base+0x250>
   138fc:	bl	4b40 <mpfr_set_erangeflag@plt>
   13900:	b	1367c <mpc_tan@@Base+0x274>
   13904:	bl	4b40 <mpfr_set_erangeflag@plt>
   13908:	b	13634 <mpc_tan@@Base+0x22c>
   1390c:	bl	4b40 <mpfr_set_erangeflag@plt>
   13910:	b	13610 <mpc_tan@@Base+0x208>
   13914:	stp	x21, x22, [sp, #32]
   13918:	add	x21, sp, #0x80
   1391c:	mov	x0, x21
   13920:	stp	x23, x24, [sp, #48]
   13924:	bl	4ae0 <mpfr_init@plt>
   13928:	add	x24, sp, #0xc0
   1392c:	mov	x0, x24
   13930:	bl	4ae0 <mpfr_init@plt>
   13934:	mov	x1, x21
   13938:	mov	x2, x25
   1393c:	mov	w3, #0x0                   	// #0
   13940:	mov	x0, x24
   13944:	bl	5570 <mpfr_sin_cos@plt>
   13948:	ldr	w0, [sp, #200]
   1394c:	mov	w3, #0x1                   	// #1
   13950:	ldr	w1, [sp, #136]
   13954:	mov	x2, #0x8000000000000001    	// #-9223372036854775807
   13958:	str	w3, [x26, #8]
   1395c:	lsr	w0, w0, #31
   13960:	str	x2, [x26, #16]
   13964:	cmp	w0, w1, lsr #31
   13968:	mov	w2, #0x0                   	// #0
   1396c:	mov	x1, x26
   13970:	cneg	w3, w3, ne  // ne = any
   13974:	mov	x0, x26
   13978:	bl	5220 <mpfr_set4@plt>
   1397c:	ldr	w0, [x25, #40]
   13980:	ldr	w1, [sp, #96]
   13984:	asr	w3, w1, #4
   13988:	tbnz	w0, #31, 13a18 <mpc_tan@@Base+0x610>
   1398c:	mov	x0, x20
   13990:	mov	x2, #0x0                   	// #0
   13994:	mov	x1, #0x1                   	// #1
   13998:	bl	5180 <mpfr_set_ui_2exp@plt>
   1399c:	mov	w19, w0
   139a0:	cmp	w19, #0x0
   139a4:	mov	w1, #0x4                   	// #4
   139a8:	csel	w1, w19, w1, eq  // eq = none
   139ac:	mov	x0, x24
   139b0:	mov	w19, #0x8                   	// #8
   139b4:	csel	w19, w1, w19, ge  // ge = tcont
   139b8:	bl	4db0 <mpfr_clear@plt>
   139bc:	mov	x0, x21
   139c0:	bl	4db0 <mpfr_clear@plt>
   139c4:	mov	w0, w19
   139c8:	ldp	x19, x20, [sp, #16]
   139cc:	ldp	x21, x22, [sp, #32]
   139d0:	ldp	x23, x24, [sp, #48]
   139d4:	ldp	x25, x26, [sp, #64]
   139d8:	ldp	x29, x30, [sp], #256
   139dc:	ret
   139e0:	mov	x0, x25
   139e4:	bl	5240 <mpfr_sgn@plt>
   139e8:	mov	w19, w0
   139ec:	cbz	w0, 13c3c <mpc_tan@@Base+0x834>
   139f0:	mov	x0, x26
   139f4:	bl	4a80 <mpfr_set_nan@plt>
   139f8:	add	x0, x26, #0x20
   139fc:	mov	w19, #0x0                   	// #0
   13a00:	bl	4a80 <mpfr_set_nan@plt>
   13a04:	mov	w0, w19
   13a08:	ldp	x19, x20, [sp, #16]
   13a0c:	ldp	x25, x26, [sp, #64]
   13a10:	ldp	x29, x30, [sp], #256
   13a14:	ret
   13a18:	mov	x0, x20
   13a1c:	mov	x2, #0x0                   	// #0
   13a20:	mov	x1, #0xffffffffffffffff    	// #-1
   13a24:	bl	4a20 <mpfr_set_si_2exp@plt>
   13a28:	mov	w19, w0
   13a2c:	b	139a0 <mpc_tan@@Base+0x598>
   13a30:	mov	w0, #0x1                   	// #1
   13a34:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   13a38:	str	w0, [x26, #8]
   13a3c:	mov	x0, #0x8000000000000003    	// #-9223372036854775805
   13a40:	str	x1, [x26, #16]
   13a44:	cmp	x27, x0
   13a48:	b.ge	13b90 <mpc_tan@@Base+0x788>  // b.tcont
   13a4c:	mov	x0, #0x2                   	// #2
   13a50:	movk	x0, #0x8000, lsl #48
   13a54:	cmp	x27, x0
   13a58:	b.eq	13cd0 <mpc_tan@@Base+0x8c8>  // b.none
   13a5c:	ldr	x0, [sp, #208]
   13a60:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13a64:	cmp	x0, x1
   13a68:	b.ge	13c34 <mpc_tan@@Base+0x82c>  // b.tcont
   13a6c:	mov	x1, #0x2                   	// #2
   13a70:	mov	w22, #0xffffffff            	// #-1
   13a74:	movk	x1, #0x8000, lsl #48
   13a78:	cmp	x0, x1
   13a7c:	b.eq	13cc8 <mpc_tan@@Base+0x8c0>  // b.none
   13a80:	ldr	x0, [x25, #48]
   13a84:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13a88:	add	x19, x26, #0x20
   13a8c:	cmp	x0, x1
   13a90:	b.ge	13b30 <mpc_tan@@Base+0x728>  // b.tcont
   13a94:	mov	x1, #0x2                   	// #2
   13a98:	movk	x1, #0x8000, lsl #48
   13a9c:	cmp	x0, x1
   13aa0:	b.eq	13cc0 <mpc_tan@@Base+0x8b8>  // b.none
   13aa4:	mov	x0, x19
   13aa8:	mov	w20, #0xffffffff            	// #-1
   13aac:	mov	w3, #0x0                   	// #0
   13ab0:	mov	x2, #0x0                   	// #0
   13ab4:	mov	x1, #0xffffffffffffffff    	// #-1
   13ab8:	bl	4a20 <mpfr_set_si_2exp@plt>
   13abc:	ldr	w2, [sp, #116]
   13ac0:	cmp	w2, #0x1
   13ac4:	b.eq	13b58 <mpc_tan@@Base+0x750>  // b.none
   13ac8:	ldr	w1, [x26, #40]
   13acc:	cmp	w2, #0x2
   13ad0:	lsr	w0, w1, #31
   13ad4:	csel	w0, w0, wzr, eq  // eq = none
   13ad8:	cbnz	w0, 13b58 <mpc_tan@@Base+0x750>
   13adc:	cmp	w1, #0x0
   13ae0:	ccmp	w2, #0x3, #0x0, ge  // ge = tcont
   13ae4:	b.eq	13b58 <mpc_tan@@Base+0x750>  // b.none
   13ae8:	ldr	x1, [x26, #16]
   13aec:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13af0:	cmp	x1, x0
   13af4:	b.eq	13c7c <mpc_tan@@Base+0x874>  // b.none
   13af8:	ldr	x1, [x26, #48]
   13afc:	mov	x0, #0x8000000000000001    	// #-9223372036854775807
   13b00:	cmp	x1, x0
   13b04:	b.eq	13c68 <mpc_tan@@Base+0x860>  // b.none
   13b08:	cmp	w22, #0x0
   13b0c:	mov	w0, #0x2                   	// #2
   13b10:	cset	w19, ne  // ne = any
   13b14:	csel	w19, w19, w0, ge  // ge = tcont
   13b18:	cmp	w20, #0x0
   13b1c:	orr	w0, w19, #0x4
   13b20:	orr	w1, w19, #0x8
   13b24:	csel	w0, w0, w19, ne  // ne = any
   13b28:	csel	w19, w0, w1, ge  // ge = tcont
   13b2c:	b	137e4 <mpc_tan@@Base+0x3dc>
   13b30:	ldr	w0, [x25, #40]
   13b34:	cmp	w0, #0x0
   13b38:	b.le	13aa4 <mpc_tan@@Base+0x69c>
   13b3c:	mov	x0, x19
   13b40:	mov	w3, #0x0                   	// #0
   13b44:	mov	x2, #0x0                   	// #0
   13b48:	mov	x1, #0x1                   	// #1
   13b4c:	mov	w20, #0x1                   	// #1
   13b50:	bl	5180 <mpfr_set_ui_2exp@plt>
   13b54:	b	13abc <mpc_tan@@Base+0x6b4>
   13b58:	neg	w20, w20
   13b5c:	mov	x1, x26
   13b60:	mov	x0, x19
   13b64:	bl	5210 <mpfr_nexttoward@plt>
   13b68:	b	13ae8 <mpc_tan@@Base+0x6e0>
   13b6c:	mov	x0, x26
   13b70:	bl	4a80 <mpfr_set_nan@plt>
   13b74:	mov	x0, x20
   13b78:	mov	w19, #0x0                   	// #0
   13b7c:	bl	4a80 <mpfr_set_nan@plt>
   13b80:	b	13800 <mpc_tan@@Base+0x3f8>
   13b84:	mov	w0, #0x1                   	// #1
   13b88:	str	w0, [x26, #8]
   13b8c:	str	x4, [x26, #16]
   13b90:	ldr	x0, [sp, #208]
   13b94:	mov	x1, #0x8000000000000003    	// #-9223372036854775805
   13b98:	cmp	x0, x1
   13b9c:	b.lt	13a6c <mpc_tan@@Base+0x664>  // b.tstop
   13ba0:	ldr	w0, [sp, #136]
   13ba4:	ldr	w1, [sp, #200]
   13ba8:	mul	w0, w0, w1
   13bac:	tbz	w0, #31, 13c34 <mpc_tan@@Base+0x82c>
   13bb0:	mov	x1, x26
   13bb4:	mov	x0, x26
   13bb8:	mov	w2, #0x0                   	// #0
   13bbc:	mov	w22, #0x1                   	// #1
   13bc0:	bl	4bc0 <mpfr_neg@plt>
   13bc4:	b	13a80 <mpc_tan@@Base+0x678>
   13bc8:	bl	4b40 <mpfr_set_erangeflag@plt>
   13bcc:	b	13744 <mpc_tan@@Base+0x33c>
   13bd0:	str	w1, [sp, #112]
   13bd4:	bl	4b40 <mpfr_set_erangeflag@plt>
   13bd8:	ldr	w1, [sp, #112]
   13bdc:	b	13714 <mpc_tan@@Base+0x30c>
   13be0:	mov	x0, x20
   13be4:	mov	x2, #0x0                   	// #0
   13be8:	mov	x1, #0xffffffffffffffff    	// #-1
   13bec:	bl	4a20 <mpfr_set_si_2exp@plt>
   13bf0:	b	134b4 <mpc_tan@@Base+0xac>
   13bf4:	ldr	w0, [sp, #96]
   13bf8:	mov	x1, x25
   13bfc:	and	w2, w0, #0xf
   13c00:	mov	x0, x26
   13c04:	bl	4af0 <mpfr_tan@plt>
   13c08:	mov	w20, w0
   13c0c:	ldr	w3, [x25, #40]
   13c10:	mov	x1, x19
   13c14:	ldr	w2, [sp, #116]
   13c18:	add	x0, x26, #0x20
   13c1c:	bl	5220 <mpfr_set4@plt>
   13c20:	cmp	w20, #0x0
   13c24:	mov	w0, #0x2                   	// #2
   13c28:	cset	w19, ne  // ne = any
   13c2c:	csel	w19, w19, w0, ge  // ge = tcont
   13c30:	b	13800 <mpc_tan@@Base+0x3f8>
   13c34:	mov	w22, #0xffffffff            	// #-1
   13c38:	b	13a80 <mpc_tan@@Base+0x678>
   13c3c:	ldr	w2, [sp, #96]
   13c40:	mov	x1, x25
   13c44:	mov	x0, x26
   13c48:	bl	55d0 <mpc_set@plt>
   13c4c:	b	13800 <mpc_tan@@Base+0x3f8>
   13c50:	mov	w0, #0x1                   	// #1
   13c54:	str	w0, [x26, #8]
   13c58:	str	x4, [x26, #16]
   13c5c:	cmp	x27, x19
   13c60:	b.lt	13a4c <mpc_tan@@Base+0x644>  // b.tstop
   13c64:	b	13ba0 <mpc_tan@@Base+0x798>
   13c68:	ldr	w1, [sp, #116]
   13c6c:	mov	x0, x19
   13c70:	bl	5120 <mpc_fix_zero@plt>
   13c74:	mov	w20, w0
   13c78:	b	13b08 <mpc_tan@@Base+0x700>
   13c7c:	ldr	w0, [sp, #96]
   13c80:	and	w1, w0, #0xf
   13c84:	mov	x0, x26
   13c88:	bl	5120 <mpc_fix_zero@plt>
   13c8c:	mov	w22, w0
   13c90:	b	13af8 <mpc_tan@@Base+0x6f0>
   13c94:	ldr	w3, [x25, #8]
   13c98:	mov	x1, x25
   13c9c:	ldr	w0, [sp, #96]
   13ca0:	and	w2, w0, #0xf
   13ca4:	mov	x0, x26
   13ca8:	bl	5220 <mpfr_set4@plt>
   13cac:	ldr	w2, [sp, #116]
   13cb0:	mov	x1, x19
   13cb4:	add	x0, x26, #0x20
   13cb8:	bl	4a70 <mpfr_tanh@plt>
   13cbc:	b	134b4 <mpc_tan@@Base+0xac>
   13cc0:	bl	4b40 <mpfr_set_erangeflag@plt>
   13cc4:	b	13aa4 <mpc_tan@@Base+0x69c>
   13cc8:	bl	4b40 <mpfr_set_erangeflag@plt>
   13ccc:	b	13a80 <mpc_tan@@Base+0x678>
   13cd0:	bl	4b40 <mpfr_set_erangeflag@plt>
   13cd4:	b	13a5c <mpc_tan@@Base+0x654>
   13cd8:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   13cdc:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13ce0:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13ce4:	add	x4, x4, #0x6a0
   13ce8:	ldr	x0, [x0, #4008]
   13cec:	add	x2, x2, #0x6c8
   13cf0:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13cf4:	add	x1, x1, #0x318
   13cf8:	mov	w3, #0xc9                  	// #201
   13cfc:	ldr	x0, [x0]
   13d00:	bl	55f0 <fprintf@plt>
   13d04:	bl	5050 <abort@plt>
   13d08:	adrp	x0, 28000 <mpc_ui_ui_sub@@Base+0x14148>
   13d0c:	adrp	x4, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13d10:	adrp	x2, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13d14:	add	x4, x4, #0x6a0
   13d18:	ldr	x0, [x0, #4008]
   13d1c:	add	x2, x2, #0x6c8
   13d20:	adrp	x1, 15000 <mpc_ui_ui_sub@@Base+0x1148>
   13d24:	add	x1, x1, #0x318
   13d28:	mov	w3, #0x107                 	// #263
   13d2c:	ldr	x0, [x0]
   13d30:	bl	55f0 <fprintf@plt>
   13d34:	bl	5050 <abort@plt>

0000000000013d38 <mpc_tanh@@Base>:
   13d38:	stp	x29, x30, [sp, #-160]!
   13d3c:	mov	x3, x1
   13d40:	mov	x29, sp
   13d44:	stp	x19, x20, [sp, #16]
   13d48:	mov	x19, x0
   13d4c:	ubfiz	w0, w2, #4, #4
   13d50:	ldp	x10, x11, [x3, #16]
   13d54:	stp	x10, x11, [sp, #80]
   13d58:	add	w2, w0, w2, asr #4
   13d5c:	ldp	x10, x11, [x3, #32]
   13d60:	stp	x10, x11, [sp, #32]
   13d64:	add	x1, sp, #0x20
   13d68:	ldp	x4, x5, [x3]
   13d6c:	stp	x4, x5, [sp, #64]
   13d70:	add	x0, sp, #0x60
   13d74:	ldp	x10, x11, [x19, #32]
   13d78:	stp	x10, x11, [sp, #96]
   13d7c:	ldp	x6, x7, [x19]
   13d80:	stp	x6, x7, [sp, #128]
   13d84:	ldp	x4, x5, [x19, #16]
   13d88:	stp	x4, x5, [sp, #144]
   13d8c:	ldp	x10, x11, [x3, #48]
   13d90:	stp	x10, x11, [sp, #48]
   13d94:	ldp	x8, x9, [x19, #48]
   13d98:	stp	x8, x9, [sp, #112]
   13d9c:	bl	4c60 <mpc_tan@plt>
   13da0:	mov	w1, w0
   13da4:	ldp	x2, x3, [sp, #96]
   13da8:	stp	x2, x3, [x19, #32]
   13dac:	asr	w0, w0, #2
   13db0:	ldp	x4, x5, [sp, #128]
   13db4:	stp	x4, x5, [x19]
   13db8:	cmp	w0, #0x2
   13dbc:	ldp	x2, x3, [sp, #112]
   13dc0:	stp	x2, x3, [x19, #48]
   13dc4:	ldp	x4, x5, [sp, #144]
   13dc8:	stp	x4, x5, [x19, #16]
   13dcc:	b.eq	13dd8 <mpc_tanh@@Base+0xa0>  // b.none
   13dd0:	cmp	w0, #0x0
   13dd4:	cset	w0, ne  // ne = any
   13dd8:	and	w1, w1, #0x3
   13ddc:	cmp	w1, #0x2
   13de0:	b.eq	13dfc <mpc_tanh@@Base+0xc4>  // b.none
   13de4:	cmp	w1, #0x0
   13de8:	orr	w1, w0, #0x4
   13dec:	csel	w0, w1, w0, ne  // ne = any
   13df0:	ldp	x19, x20, [sp, #16]
   13df4:	ldp	x29, x30, [sp], #160
   13df8:	ret
   13dfc:	orr	w0, w0, #0x8
   13e00:	ldp	x19, x20, [sp, #16]
   13e04:	ldp	x29, x30, [sp], #160
   13e08:	ret
   13e0c:	nop

0000000000013e10 <mpc_ceil_log2@@Base>:
   13e10:	mov	x1, x0
   13e14:	mov	x0, #0x0                   	// #0
   13e18:	cmp	x1, #0x1
   13e1c:	b.le	13e34 <mpc_ceil_log2@@Base+0x24>
   13e20:	add	x1, x1, #0x1
   13e24:	add	x0, x0, #0x1
   13e28:	asr	x1, x1, #1
   13e2c:	cmp	x1, #0x1
   13e30:	b.ne	13e20 <mpc_ceil_log2@@Base+0x10>  // b.any
   13e34:	ret

0000000000013e38 <mpc_ui_div@@Base>:
   13e38:	stp	x29, x30, [sp, #-128]!
   13e3c:	mov	x29, sp
   13e40:	stp	x19, x20, [sp, #16]
   13e44:	add	x19, sp, #0x40
   13e48:	mov	w20, w3
   13e4c:	stp	x21, x22, [sp, #32]
   13e50:	mov	x22, x2
   13e54:	mov	x21, x0
   13e58:	mov	x0, x19
   13e5c:	str	x23, [sp, #48]
   13e60:	mov	x23, x1
   13e64:	mov	x1, #0x40                  	// #64
   13e68:	bl	4d40 <mpc_init2@plt>
   13e6c:	mov	w2, w20
   13e70:	mov	x1, x23
   13e74:	mov	x0, x19
   13e78:	bl	4d30 <mpc_set_ui@plt>
   13e7c:	mov	w3, w20
   13e80:	mov	x2, x22
   13e84:	mov	x1, x19
   13e88:	mov	x0, x21
   13e8c:	bl	52a0 <mpc_div@plt>
   13e90:	mov	w20, w0
   13e94:	mov	x0, x19
   13e98:	bl	4a50 <mpc_clear@plt>
   13e9c:	mov	w0, w20
   13ea0:	ldp	x19, x20, [sp, #16]
   13ea4:	ldp	x21, x22, [sp, #32]
   13ea8:	ldr	x23, [sp, #48]
   13eac:	ldp	x29, x30, [sp], #128
   13eb0:	ret
   13eb4:	nop

0000000000013eb8 <mpc_ui_ui_sub@@Base>:
   13eb8:	stp	x29, x30, [sp, #-64]!
   13ebc:	mov	x29, sp
   13ec0:	stp	x19, x20, [sp, #16]
   13ec4:	mov	x20, x3
   13ec8:	and	w3, w4, #0xf
   13ecc:	stp	x21, x22, [sp, #32]
   13ed0:	mov	w21, w4
   13ed4:	mov	x22, x0
   13ed8:	str	x23, [sp, #48]
   13edc:	mov	x23, x2
   13ee0:	mov	x2, x20
   13ee4:	bl	5480 <mpfr_ui_sub@plt>
   13ee8:	asr	w3, w21, #4
   13eec:	mov	w19, w0
   13ef0:	add	x2, x20, #0x20
   13ef4:	mov	x1, x23
   13ef8:	add	x0, x22, #0x20
   13efc:	bl	5480 <mpfr_ui_sub@plt>
   13f00:	cmp	w19, #0x0
   13f04:	mov	w2, #0x2                   	// #2
   13f08:	cset	w1, ne  // ne = any
   13f0c:	csel	w1, w1, w2, ge  // ge = tcont
   13f10:	cmp	w0, #0x0
   13f14:	orr	w2, w1, #0x4
   13f18:	csel	w2, w2, w1, ne  // ne = any
   13f1c:	orr	w1, w1, #0x8
   13f20:	csel	w1, w2, w1, ge  // ge = tcont
   13f24:	mov	w0, w1
   13f28:	ldp	x19, x20, [sp, #16]
   13f2c:	ldp	x21, x22, [sp, #32]
   13f30:	ldr	x23, [sp, #48]
   13f34:	ldp	x29, x30, [sp], #64
   13f38:	ret
   13f3c:	nop
   13f40:	stp	x29, x30, [sp, #-48]!
   13f44:	mov	x29, sp
   13f48:	str	q0, [sp, #16]
   13f4c:	str	q1, [sp, #32]
   13f50:	ldp	x6, x1, [sp, #16]
   13f54:	ldp	x0, x3, [sp, #32]
   13f58:	mrs	x15, fpcr
   13f5c:	lsr	x7, x1, #63
   13f60:	mov	x10, x0
   13f64:	ubfiz	x4, x3, #3, #48
   13f68:	lsr	x5, x3, #63
   13f6c:	mov	x12, x7
   13f70:	ubfiz	x2, x1, #3, #48
   13f74:	orr	x4, x4, x0, lsr #61
   13f78:	ubfx	x8, x1, #48, #15
   13f7c:	ubfx	x0, x3, #48, #15
   13f80:	and	w7, w7, #0xff
   13f84:	mov	x16, x12
   13f88:	cmp	x12, x5
   13f8c:	and	w11, w5, #0xff
   13f90:	orr	x2, x2, x6, lsr #61
   13f94:	mov	x1, x8
   13f98:	lsl	x9, x6, #3
   13f9c:	mov	x3, x0
   13fa0:	lsl	x13, x10, #3
   13fa4:	b.eq	14150 <mpc_ui_ui_sub@@Base+0x298>  // b.none
   13fa8:	sub	w0, w8, w0
   13fac:	cmp	w0, #0x0
   13fb0:	b.le	140fc <mpc_ui_ui_sub@@Base+0x244>
   13fb4:	cbz	x3, 141b0 <mpc_ui_ui_sub@@Base+0x2f8>
   13fb8:	orr	x4, x4, #0x8000000000000
   13fbc:	mov	x3, #0x7fff                	// #32767
   13fc0:	cmp	x1, x3
   13fc4:	b.eq	143b4 <mpc_ui_ui_sub@@Base+0x4fc>  // b.none
   13fc8:	cmp	w0, #0x74
   13fcc:	b.gt	14438 <mpc_ui_ui_sub@@Base+0x580>
   13fd0:	cmp	w0, #0x3f
   13fd4:	b.gt	14598 <mpc_ui_ui_sub@@Base+0x6e0>
   13fd8:	mov	w3, #0x40                  	// #64
   13fdc:	sub	w3, w3, w0
   13fe0:	lsr	x6, x13, x0
   13fe4:	lsl	x13, x13, x3
   13fe8:	cmp	x13, #0x0
   13fec:	cset	x5, ne  // ne = any
   13ff0:	lsl	x3, x4, x3
   13ff4:	orr	x3, x3, x6
   13ff8:	lsr	x0, x4, x0
   13ffc:	orr	x3, x3, x5
   14000:	sub	x2, x2, x0
   14004:	subs	x9, x9, x3
   14008:	sbc	x2, x2, xzr
   1400c:	and	x3, x2, #0x7ffffffffffff
   14010:	tbz	x2, #51, 141f0 <mpc_ui_ui_sub@@Base+0x338>
   14014:	cbz	x3, 1441c <mpc_ui_ui_sub@@Base+0x564>
   14018:	clz	x0, x3
   1401c:	sub	w0, w0, #0xc
   14020:	neg	w2, w0
   14024:	lsl	x4, x3, x0
   14028:	lsl	x3, x9, x0
   1402c:	lsr	x9, x9, x2
   14030:	orr	x2, x9, x4
   14034:	cmp	x1, w0, sxtw
   14038:	sxtw	x4, w0
   1403c:	b.gt	143fc <mpc_ui_ui_sub@@Base+0x544>
   14040:	sub	w1, w0, w1
   14044:	add	w0, w1, #0x1
   14048:	cmp	w0, #0x3f
   1404c:	b.gt	14560 <mpc_ui_ui_sub@@Base+0x6a8>
   14050:	mov	w1, #0x40                  	// #64
   14054:	sub	w1, w1, w0
   14058:	lsr	x4, x3, x0
   1405c:	lsl	x3, x3, x1
   14060:	cmp	x3, #0x0
   14064:	lsl	x9, x2, x1
   14068:	cset	x1, ne  // ne = any
   1406c:	orr	x9, x9, x4
   14070:	lsr	x2, x2, x0
   14074:	orr	x9, x9, x1
   14078:	orr	x8, x9, x2
   1407c:	cbz	x8, 14204 <mpc_ui_ui_sub@@Base+0x34c>
   14080:	and	x0, x9, #0x7
   14084:	mov	x1, #0x0                   	// #0
   14088:	mov	w5, #0x1                   	// #1
   1408c:	cbz	x0, 14448 <mpc_ui_ui_sub@@Base+0x590>
   14090:	and	x3, x15, #0xc00000
   14094:	cmp	x3, #0x400, lsl #12
   14098:	b.eq	1438c <mpc_ui_ui_sub@@Base+0x4d4>  // b.none
   1409c:	cmp	x3, #0x800, lsl #12
   140a0:	b.eq	1436c <mpc_ui_ui_sub@@Base+0x4b4>  // b.none
   140a4:	cbz	x3, 14398 <mpc_ui_ui_sub@@Base+0x4e0>
   140a8:	and	x3, x2, #0x8000000000000
   140ac:	mov	w0, #0x10                  	// #16
   140b0:	cbz	w5, 140b8 <mpc_ui_ui_sub@@Base+0x200>
   140b4:	orr	w0, w0, #0x8
   140b8:	cbz	x3, 143d0 <mpc_ui_ui_sub@@Base+0x518>
   140bc:	add	x1, x1, #0x1
   140c0:	mov	x3, #0x7fff                	// #32767
   140c4:	cmp	x1, x3
   140c8:	b.eq	142b4 <mpc_ui_ui_sub@@Base+0x3fc>  // b.none
   140cc:	and	w1, w1, #0x7fff
   140d0:	extr	x8, x2, x9, #3
   140d4:	ubfx	x2, x2, #3, #48
   140d8:	mov	x5, #0x0                   	// #0
   140dc:	orr	w1, w1, w7, lsl #15
   140e0:	bfxil	x5, x2, #0, #48
   140e4:	fmov	d0, x8
   140e8:	bfi	x5, x1, #48, #16
   140ec:	fmov	v0.d[1], x5
   140f0:	cbnz	w0, 14310 <mpc_ui_ui_sub@@Base+0x458>
   140f4:	ldp	x29, x30, [sp], #48
   140f8:	ret
   140fc:	mov	x14, x5
   14100:	b.eq	1421c <mpc_ui_ui_sub@@Base+0x364>  // b.none
   14104:	cbnz	x8, 144a0 <mpc_ui_ui_sub@@Base+0x5e8>
   14108:	orr	x1, x2, x9
   1410c:	cbz	x1, 141cc <mpc_ui_ui_sub@@Base+0x314>
   14110:	cmn	w0, #0x1
   14114:	b.eq	148bc <mpc_ui_ui_sub@@Base+0xa04>  // b.none
   14118:	mov	x1, #0x7fff                	// #32767
   1411c:	mvn	w0, w0
   14120:	cmp	x3, x1
   14124:	b.ne	144b4 <mpc_ui_ui_sub@@Base+0x5fc>  // b.any
   14128:	orr	x0, x4, x13
   1412c:	cbnz	x0, 14814 <mpc_ui_ui_sub@@Base+0x95c>
   14130:	mov	x16, x14
   14134:	nop
   14138:	mov	x4, #0x0                   	// #0
   1413c:	fmov	d0, x4
   14140:	lsl	x16, x16, #63
   14144:	orr	x5, x16, #0x7fff000000000000
   14148:	fmov	v0.d[1], x5
   1414c:	b	140f4 <mpc_ui_ui_sub@@Base+0x23c>
   14150:	sub	w5, w8, w0
   14154:	cmp	w5, #0x0
   14158:	b.le	14324 <mpc_ui_ui_sub@@Base+0x46c>
   1415c:	cbz	x0, 14264 <mpc_ui_ui_sub@@Base+0x3ac>
   14160:	orr	x4, x4, #0x8000000000000
   14164:	mov	x0, #0x7fff                	// #32767
   14168:	cmp	x1, x0
   1416c:	b.eq	143b4 <mpc_ui_ui_sub@@Base+0x4fc>  // b.none
   14170:	cmp	w5, #0x74
   14174:	b.gt	14548 <mpc_ui_ui_sub@@Base+0x690>
   14178:	cmp	w5, #0x3f
   1417c:	b.gt	14648 <mpc_ui_ui_sub@@Base+0x790>
   14180:	mov	w0, #0x40                  	// #64
   14184:	sub	w0, w0, w5
   14188:	lsr	x6, x13, x5
   1418c:	lsl	x13, x13, x0
   14190:	cmp	x13, #0x0
   14194:	lsl	x0, x4, x0
   14198:	cset	x3, ne  // ne = any
   1419c:	orr	x0, x0, x6
   141a0:	lsr	x4, x4, x5
   141a4:	orr	x0, x0, x3
   141a8:	add	x2, x2, x4
   141ac:	b	14554 <mpc_ui_ui_sub@@Base+0x69c>
   141b0:	orr	x3, x4, x13
   141b4:	cbz	x3, 14524 <mpc_ui_ui_sub@@Base+0x66c>
   141b8:	subs	w0, w0, #0x1
   141bc:	b.ne	13fbc <mpc_ui_ui_sub@@Base+0x104>  // b.any
   141c0:	subs	x9, x9, x13
   141c4:	sbc	x2, x2, x4
   141c8:	b	1400c <mpc_ui_ui_sub@@Base+0x154>
   141cc:	mov	x0, #0x7fff                	// #32767
   141d0:	cmp	x3, x0
   141d4:	b.eq	14908 <mpc_ui_ui_sub@@Base+0xa50>  // b.none
   141d8:	mov	w7, w11
   141dc:	mov	x2, x4
   141e0:	mov	x9, x13
   141e4:	mov	x1, x3
   141e8:	mov	x12, x5
   141ec:	nop
   141f0:	orr	x8, x9, x2
   141f4:	and	x0, x9, #0x7
   141f8:	mov	w5, #0x0                   	// #0
   141fc:	cbnz	x1, 1408c <mpc_ui_ui_sub@@Base+0x1d4>
   14200:	cbnz	x8, 14080 <mpc_ui_ui_sub@@Base+0x1c8>
   14204:	mov	x2, #0x0                   	// #0
   14208:	mov	x1, #0x0                   	// #0
   1420c:	mov	w0, #0x0                   	// #0
   14210:	and	x2, x2, #0xffffffffffff
   14214:	and	w1, w1, #0x7fff
   14218:	b	140d8 <mpc_ui_ui_sub@@Base+0x220>
   1421c:	add	x5, x8, #0x1
   14220:	tst	x5, #0x7ffe
   14224:	b.ne	144f4 <mpc_ui_ui_sub@@Base+0x63c>  // b.any
   14228:	orr	x5, x2, x9
   1422c:	orr	x8, x4, x13
   14230:	cbnz	x1, 146b4 <mpc_ui_ui_sub@@Base+0x7fc>
   14234:	cbz	x5, 1475c <mpc_ui_ui_sub@@Base+0x8a4>
   14238:	cbz	x8, 14770 <mpc_ui_ui_sub@@Base+0x8b8>
   1423c:	subs	x5, x9, x13
   14240:	cmp	x9, x13
   14244:	sbc	x3, x2, x4
   14248:	tbz	x3, #51, 1493c <mpc_ui_ui_sub@@Base+0xa84>
   1424c:	subs	x9, x13, x9
   14250:	mov	w7, w11
   14254:	sbc	x2, x4, x2
   14258:	mov	x12, x14
   1425c:	orr	x8, x9, x2
   14260:	b	1407c <mpc_ui_ui_sub@@Base+0x1c4>
   14264:	orr	x0, x4, x13
   14268:	cbz	x0, 1473c <mpc_ui_ui_sub@@Base+0x884>
   1426c:	subs	w5, w5, #0x1
   14270:	b.ne	14164 <mpc_ui_ui_sub@@Base+0x2ac>  // b.any
   14274:	adds	x9, x9, x13
   14278:	adc	x2, x4, x2
   1427c:	nop
   14280:	tbz	x2, #51, 141f0 <mpc_ui_ui_sub@@Base+0x338>
   14284:	add	x1, x1, #0x1
   14288:	mov	x0, #0x7fff                	// #32767
   1428c:	cmp	x1, x0
   14290:	b.eq	1477c <mpc_ui_ui_sub@@Base+0x8c4>  // b.none
   14294:	and	x0, x9, #0x1
   14298:	and	x3, x2, #0xfff7ffffffffffff
   1429c:	orr	x9, x0, x9, lsr #1
   142a0:	mov	w5, #0x0                   	// #0
   142a4:	orr	x9, x9, x2, lsl #63
   142a8:	lsr	x2, x3, #1
   142ac:	and	x0, x9, #0x7
   142b0:	b	1408c <mpc_ui_ui_sub@@Base+0x1d4>
   142b4:	and	x3, x15, #0xc00000
   142b8:	cbz	x3, 142f0 <mpc_ui_ui_sub@@Base+0x438>
   142bc:	cmp	x3, #0x400, lsl #12
   142c0:	b.eq	142e8 <mpc_ui_ui_sub@@Base+0x430>  // b.none
   142c4:	cmp	x3, #0x800, lsl #12
   142c8:	csel	w12, w12, wzr, eq  // eq = none
   142cc:	cbnz	w12, 142f0 <mpc_ui_ui_sub@@Base+0x438>
   142d0:	mov	w1, #0x14                  	// #20
   142d4:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
   142d8:	orr	w0, w0, w1
   142dc:	mov	x8, #0xffffffffffffffff    	// #-1
   142e0:	mov	x1, #0x7ffe                	// #32766
   142e4:	b	14210 <mpc_ui_ui_sub@@Base+0x358>
   142e8:	cbnz	x12, 142d0 <mpc_ui_ui_sub@@Base+0x418>
   142ec:	nop
   142f0:	mov	w1, #0x14                  	// #20
   142f4:	and	x16, x7, #0xff
   142f8:	orr	w0, w0, w1
   142fc:	mov	x4, #0x0                   	// #0
   14300:	fmov	d0, x4
   14304:	lsl	x16, x16, #63
   14308:	orr	x5, x16, #0x7fff000000000000
   1430c:	fmov	v0.d[1], x5
   14310:	str	q0, [sp, #16]
   14314:	bl	15250 <mpc_ui_ui_sub@@Base+0x1398>
   14318:	ldr	q0, [sp, #16]
   1431c:	ldp	x29, x30, [sp], #48
   14320:	ret
   14324:	b.eq	14464 <mpc_ui_ui_sub@@Base+0x5ac>  // b.none
   14328:	cbnz	x8, 145e8 <mpc_ui_ui_sub@@Base+0x730>
   1432c:	orr	x0, x2, x9
   14330:	cbz	x0, 14854 <mpc_ui_ui_sub@@Base+0x99c>
   14334:	cmn	w5, #0x1
   14338:	b.eq	149b4 <mpc_ui_ui_sub@@Base+0xafc>  // b.none
   1433c:	mov	x0, #0x7fff                	// #32767
   14340:	mvn	w5, w5
   14344:	cmp	x3, x0
   14348:	b.ne	145fc <mpc_ui_ui_sub@@Base+0x744>  // b.any
   1434c:	orr	x0, x4, x13
   14350:	cbz	x0, 14138 <mpc_ui_ui_sub@@Base+0x280>
   14354:	lsr	x5, x4, #50
   14358:	mov	x9, x13
   1435c:	eor	x5, x5, #0x1
   14360:	mov	x2, x4
   14364:	and	w5, w5, #0x1
   14368:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   1436c:	mov	w0, #0x10                  	// #16
   14370:	cbz	x12, 1437c <mpc_ui_ui_sub@@Base+0x4c4>
   14374:	adds	x9, x9, #0x8
   14378:	cinc	x2, x2, cs  // cs = hs, nlast
   1437c:	and	x3, x2, #0x8000000000000
   14380:	cbz	w5, 140b8 <mpc_ui_ui_sub@@Base+0x200>
   14384:	orr	w0, w0, #0x8
   14388:	b	140b8 <mpc_ui_ui_sub@@Base+0x200>
   1438c:	mov	w0, #0x10                  	// #16
   14390:	cbnz	x12, 1437c <mpc_ui_ui_sub@@Base+0x4c4>
   14394:	b	14374 <mpc_ui_ui_sub@@Base+0x4bc>
   14398:	and	x3, x9, #0xf
   1439c:	mov	w0, #0x10                  	// #16
   143a0:	cmp	x3, #0x4
   143a4:	b.eq	1437c <mpc_ui_ui_sub@@Base+0x4c4>  // b.none
   143a8:	adds	x9, x9, #0x4
   143ac:	cinc	x2, x2, cs  // cs = hs, nlast
   143b0:	b	1437c <mpc_ui_ui_sub@@Base+0x4c4>
   143b4:	orr	x0, x2, x9
   143b8:	cbz	x0, 14138 <mpc_ui_ui_sub@@Base+0x280>
   143bc:	lsr	x5, x2, #50
   143c0:	eor	x5, x5, #0x1
   143c4:	and	w5, w5, #0x1
   143c8:	mov	w0, w5
   143cc:	mov	x1, #0x7fff                	// #32767
   143d0:	mov	x3, #0x7fff                	// #32767
   143d4:	extr	x8, x2, x9, #3
   143d8:	cmp	x1, x3
   143dc:	lsr	x2, x2, #3
   143e0:	b.ne	14210 <mpc_ui_ui_sub@@Base+0x358>  // b.any
   143e4:	orr	x1, x8, x2
   143e8:	cbz	x1, 14a54 <mpc_ui_ui_sub@@Base+0xb9c>
   143ec:	orr	x2, x2, #0x800000000000
   143f0:	mov	w1, #0x7fff                	// #32767
   143f4:	and	x2, x2, #0xffffffffffff
   143f8:	b	140d8 <mpc_ui_ui_sub@@Base+0x220>
   143fc:	mov	x9, x3
   14400:	and	x2, x2, #0xfff7ffffffffffff
   14404:	sub	x1, x1, x4
   14408:	orr	x8, x9, x2
   1440c:	and	x0, x9, #0x7
   14410:	mov	w5, #0x0                   	// #0
   14414:	cbz	x1, 14200 <mpc_ui_ui_sub@@Base+0x348>
   14418:	b	1408c <mpc_ui_ui_sub@@Base+0x1d4>
   1441c:	clz	x2, x9
   14420:	add	w0, w2, #0x34
   14424:	cmp	w0, #0x3f
   14428:	b.le	14020 <mpc_ui_ui_sub@@Base+0x168>
   1442c:	sub	w2, w2, #0xc
   14430:	lsl	x2, x9, x2
   14434:	b	14034 <mpc_ui_ui_sub@@Base+0x17c>
   14438:	orr	x4, x4, x13
   1443c:	cmp	x4, #0x0
   14440:	cset	x3, ne  // ne = any
   14444:	b	14004 <mpc_ui_ui_sub@@Base+0x14c>
   14448:	and	x3, x2, #0x8000000000000
   1444c:	mov	w0, #0x0                   	// #0
   14450:	cbz	w5, 140b8 <mpc_ui_ui_sub@@Base+0x200>
   14454:	mov	w0, #0x0                   	// #0
   14458:	tbz	w15, #11, 140b8 <mpc_ui_ui_sub@@Base+0x200>
   1445c:	orr	w0, w0, #0x8
   14460:	b	140b8 <mpc_ui_ui_sub@@Base+0x200>
   14464:	add	x0, x8, #0x1
   14468:	tst	x0, #0x7ffe
   1446c:	b.ne	14674 <mpc_ui_ui_sub@@Base+0x7bc>  // b.any
   14470:	orr	x0, x2, x9
   14474:	cbnz	x8, 14830 <mpc_ui_ui_sub@@Base+0x978>
   14478:	orr	x8, x4, x13
   1447c:	cbz	x0, 14884 <mpc_ui_ui_sub@@Base+0x9cc>
   14480:	cbz	x8, 14770 <mpc_ui_ui_sub@@Base+0x8b8>
   14484:	adds	x9, x9, x13
   14488:	adc	x2, x4, x2
   1448c:	tbz	x2, #51, 1425c <mpc_ui_ui_sub@@Base+0x3a4>
   14490:	and	x2, x2, #0xfff7ffffffffffff
   14494:	and	x0, x9, #0x7
   14498:	mov	x1, #0x1                   	// #1
   1449c:	b	1408c <mpc_ui_ui_sub@@Base+0x1d4>
   144a0:	mov	x1, #0x7fff                	// #32767
   144a4:	neg	w0, w0
   144a8:	orr	x2, x2, #0x8000000000000
   144ac:	cmp	x3, x1
   144b0:	b.eq	14128 <mpc_ui_ui_sub@@Base+0x270>  // b.none
   144b4:	cmp	w0, #0x74
   144b8:	b.gt	145c4 <mpc_ui_ui_sub@@Base+0x70c>
   144bc:	cmp	w0, #0x3f
   144c0:	b.gt	147e0 <mpc_ui_ui_sub@@Base+0x928>
   144c4:	mov	w1, #0x40                  	// #64
   144c8:	sub	w1, w1, w0
   144cc:	lsr	x5, x9, x0
   144d0:	lsl	x9, x9, x1
   144d4:	cmp	x9, #0x0
   144d8:	lsl	x9, x2, x1
   144dc:	cset	x1, ne  // ne = any
   144e0:	orr	x9, x9, x5
   144e4:	lsr	x0, x2, x0
   144e8:	orr	x9, x9, x1
   144ec:	sub	x4, x4, x0
   144f0:	b	145d0 <mpc_ui_ui_sub@@Base+0x718>
   144f4:	subs	x5, x9, x13
   144f8:	cmp	x9, x13
   144fc:	sbc	x3, x2, x4
   14500:	tbnz	x3, #51, 1469c <mpc_ui_ui_sub@@Base+0x7e4>
   14504:	orr	x8, x5, x3
   14508:	cbnz	x8, 147c8 <mpc_ui_ui_sub@@Base+0x910>
   1450c:	and	x15, x15, #0xc00000
   14510:	mov	x2, #0x0                   	// #0
   14514:	cmp	x15, #0x800, lsl #12
   14518:	mov	x1, #0x0                   	// #0
   1451c:	cset	w7, eq  // eq = none
   14520:	b	14210 <mpc_ui_ui_sub@@Base+0x358>
   14524:	mov	x0, #0x7fff                	// #32767
   14528:	cmp	x8, x0
   1452c:	b.ne	141f0 <mpc_ui_ui_sub@@Base+0x338>  // b.any
   14530:	orr	x0, x2, x9
   14534:	cbnz	x0, 143bc <mpc_ui_ui_sub@@Base+0x504>
   14538:	mov	x2, #0x0                   	// #0
   1453c:	mov	x8, #0x0                   	// #0
   14540:	mov	w0, #0x0                   	// #0
   14544:	b	143e4 <mpc_ui_ui_sub@@Base+0x52c>
   14548:	orr	x4, x4, x13
   1454c:	cmp	x4, #0x0
   14550:	cset	x0, ne  // ne = any
   14554:	adds	x9, x0, x9
   14558:	cinc	x2, x2, cs  // cs = hs, nlast
   1455c:	b	14280 <mpc_ui_ui_sub@@Base+0x3c8>
   14560:	mov	w4, #0x80                  	// #128
   14564:	sub	w4, w4, w0
   14568:	cmp	w0, #0x40
   1456c:	sub	w9, w1, #0x3f
   14570:	lsl	x0, x2, x4
   14574:	orr	x0, x3, x0
   14578:	csel	x3, x0, x3, ne  // ne = any
   1457c:	lsr	x9, x2, x9
   14580:	cmp	x3, #0x0
   14584:	mov	x2, #0x0                   	// #0
   14588:	cset	x0, ne  // ne = any
   1458c:	orr	x9, x0, x9
   14590:	mov	x8, x9
   14594:	b	1407c <mpc_ui_ui_sub@@Base+0x1c4>
   14598:	mov	w5, #0x80                  	// #128
   1459c:	sub	w5, w5, w0
   145a0:	subs	w0, w0, #0x40
   145a4:	lsl	x5, x4, x5
   145a8:	orr	x5, x13, x5
   145ac:	csel	x13, x5, x13, ne  // ne = any
   145b0:	lsr	x4, x4, x0
   145b4:	cmp	x13, #0x0
   145b8:	cset	x3, ne  // ne = any
   145bc:	orr	x3, x3, x4
   145c0:	b	14004 <mpc_ui_ui_sub@@Base+0x14c>
   145c4:	orr	x2, x2, x9
   145c8:	cmp	x2, #0x0
   145cc:	cset	x9, ne  // ne = any
   145d0:	subs	x9, x13, x9
   145d4:	mov	w7, w11
   145d8:	sbc	x2, x4, xzr
   145dc:	mov	x1, x3
   145e0:	mov	x12, x14
   145e4:	b	1400c <mpc_ui_ui_sub@@Base+0x154>
   145e8:	mov	x0, #0x7fff                	// #32767
   145ec:	neg	w5, w5
   145f0:	orr	x2, x2, #0x8000000000000
   145f4:	cmp	x3, x0
   145f8:	b.eq	1434c <mpc_ui_ui_sub@@Base+0x494>  // b.none
   145fc:	cmp	w5, #0x74
   14600:	b.gt	147d0 <mpc_ui_ui_sub@@Base+0x918>
   14604:	cmp	w5, #0x3f
   14608:	b.gt	14890 <mpc_ui_ui_sub@@Base+0x9d8>
   1460c:	mov	w1, #0x40                  	// #64
   14610:	sub	w1, w1, w5
   14614:	lsr	x6, x9, x5
   14618:	lsl	x9, x9, x1
   1461c:	cmp	x9, #0x0
   14620:	cset	x0, ne  // ne = any
   14624:	lsl	x9, x2, x1
   14628:	orr	x9, x9, x6
   1462c:	lsr	x5, x2, x5
   14630:	orr	x9, x9, x0
   14634:	add	x4, x4, x5
   14638:	adds	x9, x9, x13
   1463c:	mov	x1, x3
   14640:	cinc	x2, x4, cs  // cs = hs, nlast
   14644:	b	14280 <mpc_ui_ui_sub@@Base+0x3c8>
   14648:	mov	w0, #0x80                  	// #128
   1464c:	sub	w0, w0, w5
   14650:	subs	w5, w5, #0x40
   14654:	lsl	x0, x4, x0
   14658:	orr	x0, x13, x0
   1465c:	csel	x13, x0, x13, ne  // ne = any
   14660:	lsr	x4, x4, x5
   14664:	cmp	x13, #0x0
   14668:	cset	x0, ne  // ne = any
   1466c:	orr	x0, x0, x4
   14670:	b	14554 <mpc_ui_ui_sub@@Base+0x69c>
   14674:	mov	x1, #0x7fff                	// #32767
   14678:	cmp	x0, x1
   1467c:	b.eq	148d8 <mpc_ui_ui_sub@@Base+0xa20>  // b.none
   14680:	adds	x9, x9, x13
   14684:	mov	x1, x0
   14688:	adc	x2, x4, x2
   1468c:	ubfx	x0, x9, #1, #3
   14690:	extr	x9, x2, x9, #1
   14694:	lsr	x2, x2, #1
   14698:	b	1408c <mpc_ui_ui_sub@@Base+0x1d4>
   1469c:	cmp	x13, x9
   146a0:	mov	w7, w11
   146a4:	sbc	x3, x4, x2
   146a8:	sub	x9, x13, x9
   146ac:	mov	x12, x14
   146b0:	b	14014 <mpc_ui_ui_sub@@Base+0x15c>
   146b4:	mov	x12, #0x7fff                	// #32767
   146b8:	cmp	x1, x12
   146bc:	b.eq	146e8 <mpc_ui_ui_sub@@Base+0x830>  // b.none
   146c0:	cmp	x3, x12
   146c4:	b.eq	14918 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   146c8:	cbnz	x5, 14700 <mpc_ui_ui_sub@@Base+0x848>
   146cc:	mov	w5, w0
   146d0:	cbnz	x8, 149f8 <mpc_ui_ui_sub@@Base+0xb40>
   146d4:	mov	w7, #0x0                   	// #0
   146d8:	mov	x2, #0xffffffffffff        	// #281474976710655
   146dc:	mov	w0, #0x1                   	// #1
   146e0:	mov	x8, #0xffffffffffffffff    	// #-1
   146e4:	b	143ec <mpc_ui_ui_sub@@Base+0x534>
   146e8:	cbz	x5, 14a14 <mpc_ui_ui_sub@@Base+0xb5c>
   146ec:	lsr	x0, x2, #50
   146f0:	cmp	x3, x1
   146f4:	eor	x0, x0, #0x1
   146f8:	and	w0, w0, #0x1
   146fc:	b.eq	14918 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   14700:	cbz	x8, 14934 <mpc_ui_ui_sub@@Base+0xa7c>
   14704:	bfi	x6, x2, #61, #3
   14708:	lsr	x3, x2, #3
   1470c:	tbz	x2, #50, 14728 <mpc_ui_ui_sub@@Base+0x870>
   14710:	lsr	x1, x4, #3
   14714:	tbnz	x4, #50, 14728 <mpc_ui_ui_sub@@Base+0x870>
   14718:	mov	x6, x10
   1471c:	mov	w7, w11
   14720:	bfi	x6, x4, #61, #3
   14724:	mov	x3, x1
   14728:	extr	x2, x3, x6, #61
   1472c:	bfi	x6, x2, #61, #3
   14730:	lsr	x2, x2, #3
   14734:	mov	x8, x6
   14738:	b	143e4 <mpc_ui_ui_sub@@Base+0x52c>
   1473c:	mov	x0, #0x7fff                	// #32767
   14740:	cmp	x8, x0
   14744:	b.ne	141f0 <mpc_ui_ui_sub@@Base+0x338>  // b.any
   14748:	orr	x0, x2, x9
   1474c:	cbz	x0, 14538 <mpc_ui_ui_sub@@Base+0x680>
   14750:	lsr	x5, x2, #50
   14754:	eor	w5, w5, #0x1
   14758:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   1475c:	cbz	x8, 14870 <mpc_ui_ui_sub@@Base+0x9b8>
   14760:	mov	w7, w11
   14764:	mov	x2, x4
   14768:	mov	x9, x13
   1476c:	mov	x12, x14
   14770:	mov	x1, #0x0                   	// #0
   14774:	mov	x3, #0x0                   	// #0
   14778:	b	14454 <mpc_ui_ui_sub@@Base+0x59c>
   1477c:	ands	x3, x15, #0xc00000
   14780:	b.eq	1480c <mpc_ui_ui_sub@@Base+0x954>  // b.none
   14784:	cmp	x3, #0x400, lsl #12
   14788:	eor	w0, w7, #0x1
   1478c:	cset	w1, eq  // eq = none
   14790:	tst	w1, w0
   14794:	b.ne	14a30 <mpc_ui_ui_sub@@Base+0xb78>  // b.any
   14798:	cmp	x3, #0x800, lsl #12
   1479c:	b.eq	149dc <mpc_ui_ui_sub@@Base+0xb24>  // b.none
   147a0:	cmp	x3, #0x400, lsl #12
   147a4:	mov	w0, #0x14                  	// #20
   147a8:	b.ne	142b8 <mpc_ui_ui_sub@@Base+0x400>  // b.any
   147ac:	mov	x2, #0xffffffffffffffff    	// #-1
   147b0:	mov	x1, #0x7ffe                	// #32766
   147b4:	mov	x9, x2
   147b8:	mov	w5, #0x0                   	// #0
   147bc:	mov	w0, #0x14                  	// #20
   147c0:	cbnz	x12, 1437c <mpc_ui_ui_sub@@Base+0x4c4>
   147c4:	b	14374 <mpc_ui_ui_sub@@Base+0x4bc>
   147c8:	mov	x9, x5
   147cc:	b	14014 <mpc_ui_ui_sub@@Base+0x15c>
   147d0:	orr	x2, x2, x9
   147d4:	cmp	x2, #0x0
   147d8:	cset	x9, ne  // ne = any
   147dc:	b	14638 <mpc_ui_ui_sub@@Base+0x780>
   147e0:	mov	w1, #0x80                  	// #128
   147e4:	sub	w1, w1, w0
   147e8:	subs	w0, w0, #0x40
   147ec:	lsl	x1, x2, x1
   147f0:	orr	x1, x9, x1
   147f4:	csel	x9, x1, x9, ne  // ne = any
   147f8:	lsr	x2, x2, x0
   147fc:	cmp	x9, #0x0
   14800:	cset	x9, ne  // ne = any
   14804:	orr	x9, x9, x2
   14808:	b	145d0 <mpc_ui_ui_sub@@Base+0x718>
   1480c:	mov	w0, #0x14                  	// #20
   14810:	b	142fc <mpc_ui_ui_sub@@Base+0x444>
   14814:	lsr	x5, x4, #50
   14818:	mov	w7, w11
   1481c:	eor	x5, x5, #0x1
   14820:	mov	x9, x13
   14824:	and	w5, w5, #0x1
   14828:	mov	x2, x4
   1482c:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   14830:	mov	x8, #0x7fff                	// #32767
   14834:	cmp	x1, x8
   14838:	b.eq	14958 <mpc_ui_ui_sub@@Base+0xaa0>  // b.none
   1483c:	cmp	x3, x8
   14840:	b.eq	149cc <mpc_ui_ui_sub@@Base+0xb14>  // b.none
   14844:	cbnz	x0, 14970 <mpc_ui_ui_sub@@Base+0xab8>
   14848:	mov	x2, x4
   1484c:	mov	x9, x13
   14850:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   14854:	mov	x0, #0x7fff                	// #32767
   14858:	cmp	x3, x0
   1485c:	b.eq	14a08 <mpc_ui_ui_sub@@Base+0xb50>  // b.none
   14860:	mov	x2, x4
   14864:	mov	x9, x13
   14868:	mov	x1, x3
   1486c:	b	141f0 <mpc_ui_ui_sub@@Base+0x338>
   14870:	and	x15, x15, #0xc00000
   14874:	mov	x2, #0x0                   	// #0
   14878:	cmp	x15, #0x800, lsl #12
   1487c:	cset	w7, eq  // eq = none
   14880:	b	14210 <mpc_ui_ui_sub@@Base+0x358>
   14884:	mov	x2, x4
   14888:	mov	x9, x13
   1488c:	b	1407c <mpc_ui_ui_sub@@Base+0x1c4>
   14890:	mov	w0, #0x80                  	// #128
   14894:	sub	w0, w0, w5
   14898:	subs	w5, w5, #0x40
   1489c:	lsl	x0, x2, x0
   148a0:	orr	x0, x9, x0
   148a4:	csel	x9, x0, x9, ne  // ne = any
   148a8:	lsr	x2, x2, x5
   148ac:	cmp	x9, #0x0
   148b0:	cset	x9, ne  // ne = any
   148b4:	orr	x9, x9, x2
   148b8:	b	14638 <mpc_ui_ui_sub@@Base+0x780>
   148bc:	cmp	x13, x9
   148c0:	mov	w7, w11
   148c4:	sbc	x2, x4, x2
   148c8:	sub	x9, x13, x9
   148cc:	mov	x1, x3
   148d0:	mov	x12, x5
   148d4:	b	1400c <mpc_ui_ui_sub@@Base+0x154>
   148d8:	ands	x3, x15, #0xc00000
   148dc:	b.eq	1480c <mpc_ui_ui_sub@@Base+0x954>  // b.none
   148e0:	cmp	x3, #0x400, lsl #12
   148e4:	eor	w0, w7, #0x1
   148e8:	csel	w0, w0, wzr, eq  // eq = none
   148ec:	cbnz	w0, 14a30 <mpc_ui_ui_sub@@Base+0xb78>
   148f0:	cmp	x3, #0x800, lsl #12
   148f4:	b.ne	147a0 <mpc_ui_ui_sub@@Base+0x8e8>  // b.any
   148f8:	cbz	x12, 149e0 <mpc_ui_ui_sub@@Base+0xb28>
   148fc:	mov	w0, #0x14                  	// #20
   14900:	mov	x16, #0x1                   	// #1
   14904:	b	142fc <mpc_ui_ui_sub@@Base+0x444>
   14908:	orr	x0, x4, x13
   1490c:	cbnz	x0, 14814 <mpc_ui_ui_sub@@Base+0x95c>
   14910:	mov	w7, w11
   14914:	b	14538 <mpc_ui_ui_sub@@Base+0x680>
   14918:	cbz	x8, 14a24 <mpc_ui_ui_sub@@Base+0xb6c>
   1491c:	tst	x4, #0x4000000000000
   14920:	csinc	w0, w0, wzr, ne  // ne = any
   14924:	cbnz	x5, 14704 <mpc_ui_ui_sub@@Base+0x84c>
   14928:	mov	w7, w11
   1492c:	mov	x2, x4
   14930:	mov	x9, x13
   14934:	mov	w5, w0
   14938:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   1493c:	orr	x8, x5, x3
   14940:	cbz	x8, 14870 <mpc_ui_ui_sub@@Base+0x9b8>
   14944:	and	x0, x5, #0x7
   14948:	mov	x9, x5
   1494c:	mov	x2, x3
   14950:	mov	w5, #0x1                   	// #1
   14954:	b	1408c <mpc_ui_ui_sub@@Base+0x1d4>
   14958:	cbz	x0, 149c4 <mpc_ui_ui_sub@@Base+0xb0c>
   1495c:	lsr	x5, x2, #50
   14960:	cmp	x3, x1
   14964:	eor	x5, x5, #0x1
   14968:	and	w5, w5, #0x1
   1496c:	b.eq	14a3c <mpc_ui_ui_sub@@Base+0xb84>  // b.none
   14970:	orr	x13, x4, x13
   14974:	cbz	x13, 143c8 <mpc_ui_ui_sub@@Base+0x510>
   14978:	bfi	x6, x2, #61, #3
   1497c:	lsr	x0, x2, #3
   14980:	tbz	x2, #50, 1499c <mpc_ui_ui_sub@@Base+0xae4>
   14984:	lsr	x1, x4, #3
   14988:	tbnz	x4, #50, 1499c <mpc_ui_ui_sub@@Base+0xae4>
   1498c:	and	x6, x10, #0x1fffffffffffffff
   14990:	mov	w7, w11
   14994:	orr	x6, x6, x4, lsl #61
   14998:	mov	x0, x1
   1499c:	extr	x2, x0, x6, #61
   149a0:	mov	w0, w5
   149a4:	bfi	x6, x2, #61, #3
   149a8:	lsr	x2, x2, #3
   149ac:	mov	x8, x6
   149b0:	b	143e4 <mpc_ui_ui_sub@@Base+0x52c>
   149b4:	adds	x9, x9, x13
   149b8:	mov	x1, x3
   149bc:	adc	x2, x4, x2
   149c0:	b	14280 <mpc_ui_ui_sub@@Base+0x3c8>
   149c4:	cmp	x3, x1
   149c8:	b.ne	14848 <mpc_ui_ui_sub@@Base+0x990>  // b.any
   149cc:	orr	x1, x4, x13
   149d0:	cbnz	x1, 14a44 <mpc_ui_ui_sub@@Base+0xb8c>
   149d4:	cbz	x0, 14538 <mpc_ui_ui_sub@@Base+0x680>
   149d8:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   149dc:	cbnz	x16, 148fc <mpc_ui_ui_sub@@Base+0xa44>
   149e0:	mov	x2, #0xffffffffffffffff    	// #-1
   149e4:	mov	w7, #0x0                   	// #0
   149e8:	mov	x9, x2
   149ec:	mov	x1, #0x7ffe                	// #32766
   149f0:	mov	w0, #0x14                  	// #20
   149f4:	b	140bc <mpc_ui_ui_sub@@Base+0x204>
   149f8:	mov	w7, w11
   149fc:	mov	x2, x4
   14a00:	mov	x9, x13
   14a04:	b	143c8 <mpc_ui_ui_sub@@Base+0x510>
   14a08:	orr	x0, x4, x13
   14a0c:	cbz	x0, 14538 <mpc_ui_ui_sub@@Base+0x680>
   14a10:	b	14354 <mpc_ui_ui_sub@@Base+0x49c>
   14a14:	cmp	x3, x1
   14a18:	b.eq	14918 <mpc_ui_ui_sub@@Base+0xa60>  // b.none
   14a1c:	mov	w5, #0x0                   	// #0
   14a20:	b	146d0 <mpc_ui_ui_sub@@Base+0x818>
   14a24:	cbnz	x5, 14934 <mpc_ui_ui_sub@@Base+0xa7c>
   14a28:	mov	w5, w0
   14a2c:	b	146d0 <mpc_ui_ui_sub@@Base+0x818>
   14a30:	mov	w0, #0x14                  	// #20
   14a34:	mov	x16, #0x0                   	// #0
   14a38:	b	142fc <mpc_ui_ui_sub@@Base+0x444>
   14a3c:	orr	x1, x4, x13
   14a40:	cbz	x1, 143c8 <mpc_ui_ui_sub@@Base+0x510>
   14a44:	tst	x4, #0x4000000000000
   14a48:	csinc	w5, w5, wzr, ne  // ne = any
   14a4c:	cbnz	x0, 14978 <mpc_ui_ui_sub@@Base+0xac0>
   14a50:	b	14848 <mpc_ui_ui_sub@@Base+0x990>
   14a54:	mov	x8, #0x0                   	// #0
   14a58:	mov	w1, #0x7fff                	// #32767
   14a5c:	mov	x2, #0x0                   	// #0
   14a60:	b	140d8 <mpc_ui_ui_sub@@Base+0x220>
   14a64:	nop
   14a68:	stp	x29, x30, [sp, #-80]!
   14a6c:	mov	x29, sp
   14a70:	str	q0, [sp, #48]
   14a74:	str	q1, [sp, #64]
   14a78:	ldp	x1, x0, [sp, #48]
   14a7c:	ldp	x6, x2, [sp, #64]
   14a80:	mrs	x11, fpcr
   14a84:	lsr	x3, x0, #63
   14a88:	ubfx	x7, x0, #0, #48
   14a8c:	and	w12, w3, #0xff
   14a90:	mov	x14, x3
   14a94:	ubfx	x3, x0, #48, #15
   14a98:	cbz	w3, 14e40 <mpc_ui_ui_sub@@Base+0xf88>
   14a9c:	mov	w4, #0x7fff                	// #32767
   14aa0:	cmp	w3, w4
   14aa4:	b.eq	14ee4 <mpc_ui_ui_sub@@Base+0x102c>  // b.none
   14aa8:	and	x3, x3, #0xffff
   14aac:	extr	x4, x7, x1, #61
   14ab0:	mov	x18, #0xffffffffffffc001    	// #-16383
   14ab4:	orr	x7, x4, #0x8000000000000
   14ab8:	add	x3, x3, x18
   14abc:	lsl	x5, x1, #3
   14ac0:	mov	x16, #0x0                   	// #0
   14ac4:	mov	x1, #0x0                   	// #0
   14ac8:	mov	w0, #0x0                   	// #0
   14acc:	lsr	x8, x2, #63
   14ad0:	ubfx	x4, x2, #0, #48
   14ad4:	and	w15, w8, #0xff
   14ad8:	mov	x13, x8
   14adc:	ubfx	x9, x2, #48, #15
   14ae0:	cbz	w9, 14ea0 <mpc_ui_ui_sub@@Base+0xfe8>
   14ae4:	mov	w8, #0x7fff                	// #32767
   14ae8:	cmp	w9, w8
   14aec:	b.eq	14b70 <mpc_ui_ui_sub@@Base+0xcb8>  // b.none
   14af0:	and	x9, x9, #0xffff
   14af4:	mov	x17, #0xffffffffffffc001    	// #-16383
   14af8:	add	x9, x9, x17
   14afc:	extr	x2, x4, x6, #61
   14b00:	add	x9, x9, x3
   14b04:	lsl	x6, x6, #3
   14b08:	orr	x4, x2, #0x8000000000000
   14b0c:	mov	x2, #0x0                   	// #0
   14b10:	eor	w8, w12, w15
   14b14:	cmp	x1, #0xa
   14b18:	and	w10, w8, #0xff
   14b1c:	add	x3, x9, #0x1
   14b20:	and	x8, x8, #0xff
   14b24:	b.le	14ba8 <mpc_ui_ui_sub@@Base+0xcf0>
   14b28:	cmp	x1, #0xb
   14b2c:	b.eq	15240 <mpc_ui_ui_sub@@Base+0x1388>  // b.none
   14b30:	mov	w15, w12
   14b34:	mov	x13, x14
   14b38:	mov	w10, w15
   14b3c:	cmp	x16, #0x2
   14b40:	b.eq	14f04 <mpc_ui_ui_sub@@Base+0x104c>  // b.none
   14b44:	mov	x4, x7
   14b48:	mov	x6, x5
   14b4c:	mov	x2, x16
   14b50:	mov	x8, x13
   14b54:	cmp	x2, #0x3
   14b58:	b.ne	14bc4 <mpc_ui_ui_sub@@Base+0xd0c>  // b.any
   14b5c:	orr	x4, x4, #0x800000000000
   14b60:	mov	x5, x6
   14b64:	and	x4, x4, #0xffffffffffff
   14b68:	mov	w1, #0x7fff                	// #32767
   14b6c:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   14b70:	mov	x8, #0x7fff                	// #32767
   14b74:	orr	x2, x4, x6
   14b78:	add	x9, x3, x8
   14b7c:	cbnz	x2, 14bfc <mpc_ui_ui_sub@@Base+0xd44>
   14b80:	eor	w8, w12, w15
   14b84:	orr	x1, x1, #0x2
   14b88:	and	w10, w8, #0xff
   14b8c:	cmp	x1, #0xa
   14b90:	add	x3, x3, #0x8, lsl #12
   14b94:	and	x8, x8, #0xff
   14b98:	mov	x6, #0x0                   	// #0
   14b9c:	b.gt	151b4 <mpc_ui_ui_sub@@Base+0x12fc>
   14ba0:	mov	x4, #0x0                   	// #0
   14ba4:	mov	x2, #0x2                   	// #2
   14ba8:	cmp	x1, #0x2
   14bac:	b.gt	14c24 <mpc_ui_ui_sub@@Base+0xd6c>
   14bb0:	sub	x1, x1, #0x1
   14bb4:	cmp	x1, #0x1
   14bb8:	b.hi	14c60 <mpc_ui_ui_sub@@Base+0xda8>  // b.pmore
   14bbc:	cmp	x2, #0x2
   14bc0:	b.eq	14f04 <mpc_ui_ui_sub@@Base+0x104c>  // b.none
   14bc4:	cmp	x2, #0x1
   14bc8:	b.ne	14dc0 <mpc_ui_ui_sub@@Base+0xf08>  // b.any
   14bcc:	mov	w1, #0x0                   	// #0
   14bd0:	mov	x4, #0x0                   	// #0
   14bd4:	mov	x5, #0x0                   	// #0
   14bd8:	mov	x3, #0x0                   	// #0
   14bdc:	orr	w1, w1, w10, lsl #15
   14be0:	bfxil	x3, x4, #0, #48
   14be4:	fmov	d0, x5
   14be8:	bfi	x3, x1, #48, #16
   14bec:	fmov	v0.d[1], x3
   14bf0:	cbnz	w0, 15030 <mpc_ui_ui_sub@@Base+0x1178>
   14bf4:	ldp	x29, x30, [sp], #80
   14bf8:	ret
   14bfc:	tst	x4, #0x800000000000
   14c00:	eor	w8, w12, w15
   14c04:	orr	x1, x1, #0x3
   14c08:	csinc	w0, w0, wzr, ne  // ne = any
   14c0c:	and	w10, w8, #0xff
   14c10:	add	x3, x3, #0x8, lsl #12
   14c14:	cmp	x1, #0xa
   14c18:	and	x8, x8, #0xff
   14c1c:	mov	x2, #0x3                   	// #3
   14c20:	b.gt	15234 <mpc_ui_ui_sub@@Base+0x137c>
   14c24:	mov	x12, #0x1                   	// #1
   14c28:	mov	x14, #0x530                 	// #1328
   14c2c:	lsl	x1, x12, x1
   14c30:	tst	x1, x14
   14c34:	b.ne	14e34 <mpc_ui_ui_sub@@Base+0xf7c>  // b.any
   14c38:	mov	x14, #0x240                 	// #576
   14c3c:	tst	x1, x14
   14c40:	b.ne	14e1c <mpc_ui_ui_sub@@Base+0xf64>  // b.any
   14c44:	mov	x12, #0x88                  	// #136
   14c48:	tst	x1, x12
   14c4c:	b.eq	14c60 <mpc_ui_ui_sub@@Base+0xda8>  // b.none
   14c50:	mov	x7, x4
   14c54:	mov	x5, x6
   14c58:	mov	x16, x2
   14c5c:	b	14b38 <mpc_ui_ui_sub@@Base+0xc80>
   14c60:	lsr	x13, x5, #32
   14c64:	and	x12, x6, #0xffffffff
   14c68:	and	x15, x5, #0xffffffff
   14c6c:	lsr	x6, x6, #32
   14c70:	and	x18, x4, #0xffffffff
   14c74:	lsr	x2, x4, #32
   14c78:	mul	x4, x13, x12
   14c7c:	stp	x21, x22, [sp, #32]
   14c80:	lsr	x22, x7, #32
   14c84:	and	x5, x7, #0xffffffff
   14c88:	mul	x16, x12, x15
   14c8c:	madd	x7, x6, x15, x4
   14c90:	stp	x19, x20, [sp, #16]
   14c94:	mul	x1, x13, x18
   14c98:	mul	x17, x15, x18
   14c9c:	and	x30, x16, #0xffffffff
   14ca0:	madd	x15, x2, x15, x1
   14ca4:	add	x16, x7, x16, lsr #32
   14ca8:	mul	x21, x22, x12
   14cac:	cmp	x4, x16
   14cb0:	mul	x20, x22, x18
   14cb4:	mov	x14, #0x100000000           	// #4294967296
   14cb8:	mul	x19, x13, x6
   14cbc:	add	x15, x15, x17, lsr #32
   14cc0:	mul	x12, x12, x5
   14cc4:	and	x17, x17, #0xffffffff
   14cc8:	mul	x18, x5, x18
   14ccc:	add	x4, x19, x14
   14cd0:	madd	x7, x6, x5, x21
   14cd4:	csel	x19, x4, x19, hi  // hi = pmore
   14cd8:	madd	x5, x2, x5, x20
   14cdc:	cmp	x1, x15
   14ce0:	mul	x13, x13, x2
   14ce4:	add	x17, x17, x15, lsl #32
   14ce8:	mul	x6, x6, x22
   14cec:	add	x7, x7, x12, lsr #32
   14cf0:	add	x5, x5, x18, lsr #32
   14cf4:	add	x4, x13, x14
   14cf8:	mul	x2, x2, x22
   14cfc:	csel	x13, x4, x13, hi  // hi = pmore
   14d00:	and	x1, x18, #0xffffffff
   14d04:	cmp	x21, x7
   14d08:	add	x4, x6, x14
   14d0c:	add	x30, x30, x16, lsl #32
   14d10:	csel	x6, x4, x6, hi  // hi = pmore
   14d14:	add	x13, x13, x15, lsr #32
   14d18:	cmp	x20, x5
   14d1c:	add	x1, x1, x5, lsl #32
   14d20:	add	x16, x17, x16, lsr #32
   14d24:	add	x14, x2, x14
   14d28:	csel	x2, x14, x2, hi  // hi = pmore
   14d2c:	add	x16, x19, x16
   14d30:	adds	x1, x1, x13
   14d34:	and	x12, x12, #0xffffffff
   14d38:	cset	x13, cs  // cs = hs, nlast
   14d3c:	cmp	x16, x17
   14d40:	cset	x4, cc  // cc = lo, ul, last
   14d44:	add	x12, x12, x7, lsl #32
   14d48:	adds	x1, x1, x4
   14d4c:	lsr	x5, x5, #32
   14d50:	cset	x4, cs  // cs = hs, nlast
   14d54:	cmp	x13, #0x0
   14d58:	ccmp	x4, #0x0, #0x0, eq  // eq = none
   14d5c:	add	x7, x6, x7, lsr #32
   14d60:	cinc	x5, x5, ne  // ne = any
   14d64:	adds	x6, x16, x12
   14d68:	cset	x4, cs  // cs = hs, nlast
   14d6c:	adds	x1, x1, x7
   14d70:	cset	x7, cs  // cs = hs, nlast
   14d74:	adds	x4, x1, x4
   14d78:	cset	x1, cs  // cs = hs, nlast
   14d7c:	cmp	x7, #0x0
   14d80:	orr	x30, x30, x6, lsl #13
   14d84:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   14d88:	cinc	x1, x2, ne  // ne = any
   14d8c:	cmp	x30, #0x0
   14d90:	add	x1, x1, x5
   14d94:	cset	x2, ne  // ne = any
   14d98:	orr	x6, x2, x6, lsr #51
   14d9c:	orr	x6, x6, x4, lsl #13
   14da0:	extr	x4, x1, x4, #51
   14da4:	tbz	x1, #39, 150b8 <mpc_ui_ui_sub@@Base+0x1200>
   14da8:	ldp	x19, x20, [sp, #16]
   14dac:	and	x1, x6, #0x1
   14db0:	ldp	x21, x22, [sp, #32]
   14db4:	orr	x6, x1, x6, lsr #1
   14db8:	orr	x6, x6, x4, lsl #63
   14dbc:	lsr	x4, x4, #1
   14dc0:	mov	x1, #0x3fff                	// #16383
   14dc4:	add	x2, x3, x1
   14dc8:	cmp	x2, #0x0
   14dcc:	b.le	14f64 <mpc_ui_ui_sub@@Base+0x10ac>
   14dd0:	tst	x6, #0x7
   14dd4:	b.eq	14df4 <mpc_ui_ui_sub@@Base+0xf3c>  // b.none
   14dd8:	and	x1, x11, #0xc00000
   14ddc:	orr	w0, w0, #0x10
   14de0:	cmp	x1, #0x400, lsl #12
   14de4:	b.eq	151ac <mpc_ui_ui_sub@@Base+0x12f4>  // b.none
   14de8:	cmp	x1, #0x800, lsl #12
   14dec:	b.eq	15154 <mpc_ui_ui_sub@@Base+0x129c>  // b.none
   14df0:	cbz	x1, 1513c <mpc_ui_ui_sub@@Base+0x1284>
   14df4:	tbz	x4, #52, 14e00 <mpc_ui_ui_sub@@Base+0xf48>
   14df8:	and	x4, x4, #0xffefffffffffffff
   14dfc:	add	x2, x3, #0x4, lsl #12
   14e00:	mov	x1, #0x7ffe                	// #32766
   14e04:	cmp	x2, x1
   14e08:	b.gt	1508c <mpc_ui_ui_sub@@Base+0x11d4>
   14e0c:	and	w1, w2, #0x7fff
   14e10:	extr	x5, x4, x6, #3
   14e14:	ubfx	x4, x4, #3, #48
   14e18:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   14e1c:	mov	w0, w12
   14e20:	mov	w10, #0x0                   	// #0
   14e24:	mov	x4, #0xffffffffffff        	// #281474976710655
   14e28:	mov	x5, #0xffffffffffffffff    	// #-1
   14e2c:	mov	w1, #0x7fff                	// #32767
   14e30:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   14e34:	mov	w15, w10
   14e38:	mov	x13, x8
   14e3c:	b	14b38 <mpc_ui_ui_sub@@Base+0xc80>
   14e40:	orr	x5, x7, x1
   14e44:	cbz	x5, 14f4c <mpc_ui_ui_sub@@Base+0x1094>
   14e48:	cbz	x7, 15068 <mpc_ui_ui_sub@@Base+0x11b0>
   14e4c:	clz	x0, x7
   14e50:	sub	x4, x0, #0xf
   14e54:	add	w5, w4, #0x3
   14e58:	mov	w3, #0x3d                  	// #61
   14e5c:	sub	w3, w3, w4
   14e60:	lsl	x4, x7, x5
   14e64:	lsr	x3, x1, x3
   14e68:	orr	x7, x3, x4
   14e6c:	lsl	x5, x1, x5
   14e70:	lsr	x8, x2, #63
   14e74:	mov	x3, #0xffffffffffffc011    	// #-16367
   14e78:	ubfx	x4, x2, #0, #48
   14e7c:	sub	x3, x3, x0
   14e80:	and	w15, w8, #0xff
   14e84:	mov	x13, x8
   14e88:	ubfx	x9, x2, #48, #15
   14e8c:	mov	x1, #0x0                   	// #0
   14e90:	mov	x16, #0x0                   	// #0
   14e94:	mov	w0, #0x0                   	// #0
   14e98:	cbnz	w9, 14ae4 <mpc_ui_ui_sub@@Base+0xc2c>
   14e9c:	nop
   14ea0:	orr	x2, x4, x6
   14ea4:	cbz	x2, 14f14 <mpc_ui_ui_sub@@Base+0x105c>
   14ea8:	cbz	x4, 15044 <mpc_ui_ui_sub@@Base+0x118c>
   14eac:	clz	x9, x4
   14eb0:	sub	x2, x9, #0xf
   14eb4:	add	w10, w2, #0x3
   14eb8:	mov	w8, #0x3d                  	// #61
   14ebc:	sub	w8, w8, w2
   14ec0:	lsl	x2, x4, x10
   14ec4:	lsr	x8, x6, x8
   14ec8:	orr	x4, x8, x2
   14ecc:	lsl	x6, x6, x10
   14ed0:	sub	x9, x3, x9
   14ed4:	mov	x10, #0xffffffffffffc011    	// #-16367
   14ed8:	mov	x2, #0x0                   	// #0
   14edc:	add	x9, x9, x10
   14ee0:	b	14b10 <mpc_ui_ui_sub@@Base+0xc58>
   14ee4:	orr	x5, x7, x1
   14ee8:	cbnz	x5, 14f2c <mpc_ui_ui_sub@@Base+0x1074>
   14eec:	mov	x7, #0x0                   	// #0
   14ef0:	mov	x1, #0x8                   	// #8
   14ef4:	mov	x3, #0x7fff                	// #32767
   14ef8:	mov	x16, #0x2                   	// #2
   14efc:	mov	w0, #0x0                   	// #0
   14f00:	b	14acc <mpc_ui_ui_sub@@Base+0xc14>
   14f04:	mov	w1, #0x7fff                	// #32767
   14f08:	mov	x4, #0x0                   	// #0
   14f0c:	mov	x5, #0x0                   	// #0
   14f10:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   14f14:	orr	x1, x1, #0x1
   14f18:	mov	x9, x3
   14f1c:	mov	x4, #0x0                   	// #0
   14f20:	mov	x6, #0x0                   	// #0
   14f24:	mov	x2, #0x1                   	// #1
   14f28:	b	14b10 <mpc_ui_ui_sub@@Base+0xc58>
   14f2c:	lsr	x0, x7, #47
   14f30:	mov	x5, x1
   14f34:	eor	x0, x0, #0x1
   14f38:	mov	x1, #0xc                   	// #12
   14f3c:	and	w0, w0, #0x1
   14f40:	mov	x3, #0x7fff                	// #32767
   14f44:	mov	x16, #0x3                   	// #3
   14f48:	b	14acc <mpc_ui_ui_sub@@Base+0xc14>
   14f4c:	mov	x7, #0x0                   	// #0
   14f50:	mov	x1, #0x4                   	// #4
   14f54:	mov	x3, #0x0                   	// #0
   14f58:	mov	x16, #0x1                   	// #1
   14f5c:	mov	w0, #0x0                   	// #0
   14f60:	b	14acc <mpc_ui_ui_sub@@Base+0xc14>
   14f64:	mov	x1, #0x1                   	// #1
   14f68:	sub	x2, x1, x2
   14f6c:	cmp	x2, #0x74
   14f70:	b.gt	14fe8 <mpc_ui_ui_sub@@Base+0x1130>
   14f74:	cmp	x2, #0x3f
   14f78:	b.le	150c8 <mpc_ui_ui_sub@@Base+0x1210>
   14f7c:	mov	w1, #0x80                  	// #128
   14f80:	sub	w1, w1, w2
   14f84:	cmp	x2, #0x40
   14f88:	sub	w2, w2, #0x40
   14f8c:	lsl	x1, x4, x1
   14f90:	orr	x1, x6, x1
   14f94:	csel	x6, x1, x6, ne  // ne = any
   14f98:	lsr	x2, x4, x2
   14f9c:	cmp	x6, #0x0
   14fa0:	cset	x5, ne  // ne = any
   14fa4:	orr	x5, x5, x2
   14fa8:	ands	x2, x5, #0x7
   14fac:	b.eq	150fc <mpc_ui_ui_sub@@Base+0x1244>  // b.none
   14fb0:	mov	x2, #0x0                   	// #0
   14fb4:	and	x11, x11, #0xc00000
   14fb8:	orr	w0, w0, #0x10
   14fbc:	cmp	x11, #0x400, lsl #12
   14fc0:	b.eq	1520c <mpc_ui_ui_sub@@Base+0x1354>  // b.none
   14fc4:	cmp	x11, #0x800, lsl #12
   14fc8:	b.eq	15220 <mpc_ui_ui_sub@@Base+0x1368>  // b.none
   14fcc:	cbz	x11, 15164 <mpc_ui_ui_sub@@Base+0x12ac>
   14fd0:	tbnz	x2, #51, 1517c <mpc_ui_ui_sub@@Base+0x12c4>
   14fd4:	ubfx	x4, x2, #3, #48
   14fd8:	extr	x5, x2, x5, #3
   14fdc:	orr	w0, w0, #0x8
   14fe0:	mov	w1, #0x0                   	// #0
   14fe4:	b	15018 <mpc_ui_ui_sub@@Base+0x1160>
   14fe8:	orr	x5, x6, x4
   14fec:	cbz	x5, 1500c <mpc_ui_ui_sub@@Base+0x1154>
   14ff0:	and	x11, x11, #0xc00000
   14ff4:	orr	w0, w0, #0x10
   14ff8:	cmp	x11, #0x400, lsl #12
   14ffc:	sub	x5, x1, x8
   15000:	b.eq	1500c <mpc_ui_ui_sub@@Base+0x1154>  // b.none
   15004:	cmp	x11, #0x800, lsl #12
   15008:	csel	x5, x8, xzr, eq  // eq = none
   1500c:	orr	w0, w0, #0x8
   15010:	mov	w1, #0x0                   	// #0
   15014:	mov	x4, #0x0                   	// #0
   15018:	mov	x3, #0x0                   	// #0
   1501c:	fmov	d0, x5
   15020:	bfxil	x3, x4, #0, #48
   15024:	bfi	x3, x1, #48, #15
   15028:	bfi	x3, x10, #63, #1
   1502c:	fmov	v0.d[1], x3
   15030:	str	q0, [sp, #48]
   15034:	bl	15250 <mpc_ui_ui_sub@@Base+0x1398>
   15038:	ldr	q0, [sp, #48]
   1503c:	ldp	x29, x30, [sp], #80
   15040:	ret
   15044:	clz	x9, x6
   15048:	add	x2, x9, #0x31
   1504c:	add	x9, x9, #0x40
   15050:	cmp	x2, #0x3c
   15054:	b.le	14eb4 <mpc_ui_ui_sub@@Base+0xffc>
   15058:	sub	w2, w2, #0x3d
   1505c:	lsl	x4, x6, x2
   15060:	mov	x6, #0x0                   	// #0
   15064:	b	14ed0 <mpc_ui_ui_sub@@Base+0x1018>
   15068:	clz	x3, x1
   1506c:	add	x4, x3, #0x31
   15070:	add	x0, x3, #0x40
   15074:	cmp	x4, #0x3c
   15078:	b.le	14e54 <mpc_ui_ui_sub@@Base+0xf9c>
   1507c:	sub	w4, w4, #0x3d
   15080:	mov	x5, #0x0                   	// #0
   15084:	lsl	x7, x1, x4
   15088:	b	14e70 <mpc_ui_ui_sub@@Base+0xfb8>
   1508c:	and	x5, x11, #0xc00000
   15090:	cmp	x5, #0x400, lsl #12
   15094:	b.eq	15190 <mpc_ui_ui_sub@@Base+0x12d8>  // b.none
   15098:	cmp	x5, #0x800, lsl #12
   1509c:	b.eq	15120 <mpc_ui_ui_sub@@Base+0x1268>  // b.none
   150a0:	cbz	x5, 15114 <mpc_ui_ui_sub@@Base+0x125c>
   150a4:	mov	x4, #0xffffffffffff        	// #281474976710655
   150a8:	mov	x5, #0xffffffffffffffff    	// #-1
   150ac:	mov	w2, #0x14                  	// #20
   150b0:	orr	w0, w0, w2
   150b4:	b	15018 <mpc_ui_ui_sub@@Base+0x1160>
   150b8:	mov	x3, x9
   150bc:	ldp	x19, x20, [sp, #16]
   150c0:	ldp	x21, x22, [sp, #32]
   150c4:	b	14dc0 <mpc_ui_ui_sub@@Base+0xf08>
   150c8:	mov	w1, #0x40                  	// #64
   150cc:	sub	w1, w1, w2
   150d0:	lsr	x3, x6, x2
   150d4:	lsl	x6, x6, x1
   150d8:	cmp	x6, #0x0
   150dc:	lsl	x5, x4, x1
   150e0:	cset	x1, ne  // ne = any
   150e4:	orr	x5, x5, x3
   150e8:	lsr	x2, x4, x2
   150ec:	orr	x5, x5, x1
   150f0:	tst	x5, #0x7
   150f4:	b.ne	14fb4 <mpc_ui_ui_sub@@Base+0x10fc>  // b.any
   150f8:	tbnz	x2, #51, 1522c <mpc_ui_ui_sub@@Base+0x1374>
   150fc:	ubfx	x4, x2, #3, #48
   15100:	extr	x5, x2, x5, #3
   15104:	mov	w1, #0x0                   	// #0
   15108:	tbz	w11, #11, 14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   1510c:	orr	w0, w0, #0x8
   15110:	b	15018 <mpc_ui_ui_sub@@Base+0x1160>
   15114:	mov	w1, #0x7fff                	// #32767
   15118:	mov	x4, #0x0                   	// #0
   1511c:	b	150ac <mpc_ui_ui_sub@@Base+0x11f4>
   15120:	cmp	x8, #0x0
   15124:	mov	w2, #0x7fff                	// #32767
   15128:	mov	x4, #0xffffffffffff        	// #281474976710655
   1512c:	csel	w1, w1, w2, eq  // eq = none
   15130:	csel	x4, x4, xzr, eq  // eq = none
   15134:	csetm	x5, eq  // eq = none
   15138:	b	150ac <mpc_ui_ui_sub@@Base+0x11f4>
   1513c:	and	x1, x6, #0xf
   15140:	cmp	x1, #0x4
   15144:	b.eq	14df4 <mpc_ui_ui_sub@@Base+0xf3c>  // b.none
   15148:	adds	x6, x6, #0x4
   1514c:	cinc	x4, x4, cs  // cs = hs, nlast
   15150:	b	14df4 <mpc_ui_ui_sub@@Base+0xf3c>
   15154:	cbz	x8, 14df4 <mpc_ui_ui_sub@@Base+0xf3c>
   15158:	adds	x6, x6, #0x8
   1515c:	cinc	x4, x4, cs  // cs = hs, nlast
   15160:	b	14df4 <mpc_ui_ui_sub@@Base+0xf3c>
   15164:	and	x1, x5, #0xf
   15168:	cmp	x1, #0x4
   1516c:	b.eq	15178 <mpc_ui_ui_sub@@Base+0x12c0>  // b.none
   15170:	adds	x5, x5, #0x4
   15174:	cinc	x2, x2, cs  // cs = hs, nlast
   15178:	tbz	x2, #51, 14fd4 <mpc_ui_ui_sub@@Base+0x111c>
   1517c:	orr	w0, w0, #0x8
   15180:	mov	w1, #0x1                   	// #1
   15184:	mov	x4, #0x0                   	// #0
   15188:	mov	x5, #0x0                   	// #0
   1518c:	b	15018 <mpc_ui_ui_sub@@Base+0x1160>
   15190:	cmp	x8, #0x0
   15194:	mov	w2, #0x7fff                	// #32767
   15198:	mov	x4, #0xffffffffffff        	// #281474976710655
   1519c:	csel	w1, w1, w2, ne  // ne = any
   151a0:	csel	x4, x4, xzr, ne  // ne = any
   151a4:	csetm	x5, ne  // ne = any
   151a8:	b	150ac <mpc_ui_ui_sub@@Base+0x11f4>
   151ac:	cbnz	x8, 14df4 <mpc_ui_ui_sub@@Base+0xf3c>
   151b0:	b	15158 <mpc_ui_ui_sub@@Base+0x12a0>
   151b4:	mov	x4, #0x2                   	// #2
   151b8:	cmp	x1, #0xf
   151bc:	b.ne	151e0 <mpc_ui_ui_sub@@Base+0x1328>  // b.any
   151c0:	tbz	x7, #47, 151f8 <mpc_ui_ui_sub@@Base+0x1340>
   151c4:	tbnz	x2, #47, 151f8 <mpc_ui_ui_sub@@Base+0x1340>
   151c8:	orr	x4, x2, #0x800000000000
   151cc:	mov	w10, w15
   151d0:	and	x4, x4, #0xffffffffffff
   151d4:	mov	x5, x6
   151d8:	mov	w1, #0x7fff                	// #32767
   151dc:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   151e0:	cmp	x1, #0xb
   151e4:	b.ne	14b30 <mpc_ui_ui_sub@@Base+0xc78>  // b.any
   151e8:	mov	x7, x2
   151ec:	mov	x5, x6
   151f0:	mov	x16, x4
   151f4:	b	14b38 <mpc_ui_ui_sub@@Base+0xc80>
   151f8:	orr	x4, x7, #0x800000000000
   151fc:	mov	w10, w12
   15200:	and	x4, x4, #0xffffffffffff
   15204:	mov	w1, #0x7fff                	// #32767
   15208:	b	14bd8 <mpc_ui_ui_sub@@Base+0xd20>
   1520c:	cbnz	x8, 15178 <mpc_ui_ui_sub@@Base+0x12c0>
   15210:	adds	x5, x5, #0x8
   15214:	cinc	x2, x2, cs  // cs = hs, nlast
   15218:	tbnz	x2, #51, 1517c <mpc_ui_ui_sub@@Base+0x12c4>
   1521c:	b	14fd4 <mpc_ui_ui_sub@@Base+0x111c>
   15220:	cbnz	x8, 15210 <mpc_ui_ui_sub@@Base+0x1358>
   15224:	tbnz	x2, #51, 1517c <mpc_ui_ui_sub@@Base+0x12c4>
   15228:	b	14fd4 <mpc_ui_ui_sub@@Base+0x111c>
   1522c:	orr	w0, w0, #0x10
   15230:	b	1517c <mpc_ui_ui_sub@@Base+0x12c4>
   15234:	mov	x2, x4
   15238:	mov	x4, #0x3                   	// #3
   1523c:	b	151b8 <mpc_ui_ui_sub@@Base+0x1300>
   15240:	mov	w10, w15
   15244:	mov	x8, x13
   15248:	b	14b54 <mpc_ui_ui_sub@@Base+0xc9c>
   1524c:	nop
   15250:	tbz	w0, #0, 15260 <mpc_ui_ui_sub@@Base+0x13a8>
   15254:	movi	v1.2s, #0x0
   15258:	fdiv	s0, s1, s1
   1525c:	mrs	x1, fpsr
   15260:	tbz	w0, #1, 15274 <mpc_ui_ui_sub@@Base+0x13bc>
   15264:	fmov	s1, #1.000000000000000000e+00
   15268:	movi	v2.2s, #0x0
   1526c:	fdiv	s0, s1, s2
   15270:	mrs	x1, fpsr
   15274:	tbz	w0, #2, 15294 <mpc_ui_ui_sub@@Base+0x13dc>
   15278:	mov	w2, #0xc5ae                	// #50606
   1527c:	mov	w1, #0x7f7fffff            	// #2139095039
   15280:	movk	w2, #0x749d, lsl #16
   15284:	fmov	s1, w1
   15288:	fmov	s2, w2
   1528c:	fadd	s0, s1, s2
   15290:	mrs	x1, fpsr
   15294:	tbz	w0, #3, 152a4 <mpc_ui_ui_sub@@Base+0x13ec>
   15298:	movi	v1.2s, #0x80, lsl #16
   1529c:	fmul	s0, s1, s1
   152a0:	mrs	x1, fpsr
   152a4:	tbz	w0, #4, 152bc <mpc_ui_ui_sub@@Base+0x1404>
   152a8:	mov	w0, #0x7f7fffff            	// #2139095039
   152ac:	fmov	s2, #1.000000000000000000e+00
   152b0:	fmov	s1, w0
   152b4:	fsub	s0, s1, s2
   152b8:	mrs	x0, fpsr
   152bc:	ret

Disassembly of section .fini:

00000000000152c0 <.fini>:
   152c0:	stp	x29, x30, [sp, #-16]!
   152c4:	mov	x29, sp
   152c8:	ldp	x29, x30, [sp], #16
   152cc:	ret
