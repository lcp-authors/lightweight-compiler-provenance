
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//macbless.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <find_inode>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldrb	w0, [x1]
  14:	tbnz	w0, #3, 28 <find_inode+0x28>
  18:	mov	w0, #0x0                   	// #0
  1c:	ldp	x19, x20, [sp, #16]
  20:	ldp	x29, x30, [sp], #48
  24:	ret
  28:	ldr	x0, [x2, #8]
  2c:	mov	x20, x1
  30:	mov	x1, x19
  34:	str	x21, [sp, #32]
  38:	mov	x21, x2
  3c:	bl	0 <grub_strcmp>
  40:	ldrb	w3, [x20]
  44:	cbz	w0, 80 <find_inode+0x80>
  48:	tbnz	w3, #2, a8 <find_inode+0xa8>
  4c:	ldr	x21, [sp, #32]
  50:	mov	w0, #0x0                   	// #0
  54:	ldp	x19, x20, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	ldrb	w0, [x19]
  64:	mov	w1, #0x0                   	// #0
  68:	sub	w5, w0, #0x41
  6c:	cmp	w5, #0x1a
  70:	add	w2, w0, #0x20
  74:	csel	w0, w2, w0, cc  // cc = lo, ul, last
  78:	cmp	w1, w0
  7c:	b.ne	4c <find_inode+0x4c>  // b.any
  80:	and	w3, w3, #0x1
  84:	ldr	x0, [x20, #8]
  88:	add	w3, w3, #0x1
  8c:	str	x0, [x21]
  90:	mov	w0, #0x0                   	// #0
  94:	str	w3, [x21, #16]
  98:	ldp	x19, x20, [sp, #16]
  9c:	ldr	x21, [sp, #32]
  a0:	ldp	x29, x30, [sp], #48
  a4:	ret
  a8:	ldr	x6, [x21, #8]
  ac:	ldrb	w1, [x6]
  b0:	cbnz	w1, cc <find_inode+0xcc>
  b4:	b	60 <find_inode+0x60>
  b8:	csel	w2, w2, w0, cc  // cc = lo, ul, last
  bc:	cmp	w2, w8
  c0:	b.ne	fc <find_inode+0xfc>  // b.any
  c4:	ldrb	w1, [x6, #1]!
  c8:	cbz	w1, 60 <find_inode+0x60>
  cc:	ldrb	w0, [x19]
  d0:	sub	w7, w1, #0x41
  d4:	cmp	w7, #0x1a
  d8:	add	w4, w1, #0x20
  dc:	sub	w5, w0, #0x41
  e0:	csel	w8, w4, w1, cc  // cc = lo, ul, last
  e4:	add	x19, x19, #0x1
  e8:	add	w2, w0, #0x20
  ec:	cmp	w5, #0x1a
  f0:	cbnz	w0, b8 <find_inode+0xb8>
  f4:	ldr	x21, [sp, #32]
  f8:	b	50 <find_inode+0x50>
  fc:	cmp	w7, #0x1a
 100:	csel	w1, w4, w1, cc  // cc = lo, ul, last
 104:	b	6c <find_inode+0x6c>

0000000000000108 <grub_mac_bless_inode.part.0>:
 108:	sub	sp, sp, #0x240
 10c:	mov	x3, #0x200                 	// #512
 110:	add	x4, sp, #0x40
 114:	stp	x29, x30, [sp]
 118:	mov	x29, sp
 11c:	str	x21, [sp, #32]
 120:	mov	x21, x0
 124:	ldr	x0, [x0]
 128:	stp	x19, x20, [sp, #16]
 12c:	mov	w19, w1
 130:	mov	w20, w2
 134:	mov	x1, #0x2                   	// #2
 138:	mov	x2, #0x0                   	// #0
 13c:	bl	0 <grub_disk_read>
 140:	cbnz	w0, 198 <grub_mac_bless_inode.part.0+0x90>
 144:	ldrh	w3, [sp, #64]
 148:	mov	w2, #0x4244                	// #16964
 14c:	mov	x1, #0x2                   	// #2
 150:	lsr	w4, w3, #8
 154:	orr	w3, w4, w3, lsl #8
 158:	cmp	w2, w3, sxth
 15c:	sxth	w3, w3
 160:	b.eq	1ac <grub_mac_bless_inode.part.0+0xa4>  // b.none
 164:	mov	w0, #0x482b                	// #18475
 168:	cmp	w3, w0
 16c:	mov	w0, #0x4858                	// #18520
 170:	ccmp	w3, w0, #0x4, ne  // ne = any
 174:	b.ne	234 <grub_mac_bless_inode.part.0+0x12c>  // b.any
 178:	rev	w19, w19
 17c:	cbnz	w20, 22c <grub_mac_bless_inode.part.0+0x124>
 180:	str	w19, [sp, #144]
 184:	ldr	x0, [x21]
 188:	add	x4, sp, #0x40
 18c:	mov	x3, #0x200                 	// #512
 190:	mov	x2, #0x0                   	// #0
 194:	bl	0 <grub_disk_write>
 198:	ldp	x29, x30, [sp]
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldr	x21, [sp, #32]
 1a4:	add	sp, sp, #0x240
 1a8:	ret
 1ac:	ldrh	w1, [sp, #188]
 1b0:	mov	w2, #0x482b                	// #18475
 1b4:	lsr	w3, w1, #8
 1b8:	orr	w1, w3, w1, lsl #8
 1bc:	cmp	w2, w1, sxth
 1c0:	b.ne	198 <grub_mac_bless_inode.part.0+0x90>  // b.any
 1c4:	ldrh	w0, [sp, #92]
 1c8:	add	x4, sp, #0x40
 1cc:	ldrh	w6, [sp, #190]
 1d0:	mov	x3, #0x200                 	// #512
 1d4:	ldr	w1, [sp, #84]
 1d8:	mov	x2, #0x0                   	// #0
 1dc:	lsr	w5, w0, #8
 1e0:	orr	w5, w5, w0, lsl #8
 1e4:	rev	w1, w1
 1e8:	lsr	w0, w6, #8
 1ec:	and	x5, x5, #0xffff
 1f0:	orr	w6, w0, w6, lsl #8
 1f4:	add	x5, x5, #0x2
 1f8:	and	w6, w6, #0xffff
 1fc:	asr	w1, w1, #9
 200:	ldr	x0, [x21]
 204:	smaddl	x1, w1, w6, x5
 208:	str	x1, [sp, #56]
 20c:	bl	0 <grub_disk_read>
 210:	cbnz	w0, 198 <grub_mac_bless_inode.part.0+0x90>
 214:	ldrh	w3, [sp, #64]
 218:	ldr	x1, [sp, #56]
 21c:	lsr	w0, w3, #8
 220:	orr	w3, w0, w3, lsl #8
 224:	sxth	w3, w3
 228:	b	164 <grub_mac_bless_inode.part.0+0x5c>
 22c:	str	w19, [sp, #148]
 230:	b	184 <grub_mac_bless_inode.part.0+0x7c>
 234:	adrp	x1, 0 <find_inode>
 238:	mov	w0, #0x9                   	// #9
 23c:	ldr	x1, [x1]
 240:	bl	0 <grub_error>
 244:	ldp	x29, x30, [sp]
 248:	ldp	x19, x20, [sp, #16]
 24c:	ldr	x21, [sp, #32]
 250:	add	sp, sp, #0x240
 254:	ret
	...

0000000000000260 <grub_mac_bless_inode>:
 260:	cmp	w3, #0x0
 264:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 268:	b.ne	28c <grub_mac_bless_inode+0x2c>  // b.any
 26c:	orr	w4, w3, w2
 270:	cbz	w4, 27c <grub_mac_bless_inode+0x1c>
 274:	mov	w2, w3
 278:	b	108 <grub_mac_bless_inode.part.0>
 27c:	adrp	x1, 0 <find_inode>
 280:	mov	w0, #0x18                  	// #24
 284:	ldr	x1, [x1]
 288:	b	0 <grub_error>
 28c:	adrp	x1, 0 <find_inode>
 290:	mov	w0, #0x12                  	// #18
 294:	ldr	x1, [x1]
 298:	b	0 <grub_error>
 29c:	nop
	...

00000000000002b0 <grub_mac_bless_file>:
 2b0:	stp	x29, x30, [sp, #-96]!
 2b4:	mov	x29, sp
 2b8:	stp	x21, x22, [sp, #32]
 2bc:	mov	x21, x1
 2c0:	mov	w22, w2
 2c4:	str	x23, [sp, #48]
 2c8:	mov	x23, x0
 2cc:	bl	0 <grub_fs_probe>
 2d0:	cbz	x0, 404 <grub_mac_bless_file+0x154>
 2d4:	adrp	x1, 0 <find_inode>
 2d8:	stp	x19, x20, [sp, #16]
 2dc:	mov	x20, x0
 2e0:	ldr	x1, [x1]
 2e4:	ldr	x0, [x0, #16]
 2e8:	bl	0 <grub_strcmp>
 2ec:	cbz	w0, 304 <grub_mac_bless_file+0x54>
 2f0:	adrp	x1, 0 <find_inode>
 2f4:	ldr	x0, [x20, #16]
 2f8:	ldr	x1, [x1]
 2fc:	bl	0 <grub_strcmp>
 300:	cbnz	w0, 400 <grub_mac_bless_file+0x150>
 304:	mov	x0, x21
 308:	bl	0 <grub_strdup>
 30c:	mov	x19, x0
 310:	cbz	x0, 3e0 <grub_mac_bless_file+0x130>
 314:	bl	0 <grub_strlen>
 318:	sub	x3, x0, #0x1
 31c:	add	x3, x19, x3
 320:	cmp	x19, x3
 324:	b.ne	338 <grub_mac_bless_file+0x88>  // b.any
 328:	b	344 <grub_mac_bless_file+0x94>
 32c:	strb	wzr, [x3], #-1
 330:	cmp	x19, x3
 334:	b.eq	344 <grub_mac_bless_file+0x94>  // b.none
 338:	ldrb	w4, [x3]
 33c:	cmp	w4, #0x2f
 340:	b.eq	32c <grub_mac_bless_file+0x7c>  // b.none
 344:	mov	x0, x19
 348:	mov	w1, #0x2f                  	// #47
 34c:	bl	0 <grub_strrchr>
 350:	str	wzr, [sp, #88]
 354:	cbz	x0, 46c <grub_mac_bless_file+0x1bc>
 358:	strb	wzr, [x0], #1
 35c:	adrp	x2, 0 <find_inode>
 360:	adrp	x1, 0 <find_inode>
 364:	add	x3, sp, #0x48
 368:	str	x0, [sp, #80]
 36c:	mov	x0, x23
 370:	ldr	x2, [x2]
 374:	ldrb	w5, [x19]
 378:	ldr	x4, [x20, #24]
 37c:	cmp	w5, #0x0
 380:	ldr	x1, [x1]
 384:	csel	x1, x19, x1, ne  // ne = any
 388:	blr	x4
 38c:	ldr	w0, [sp, #88]
 390:	cbz	w0, 43c <grub_mac_bless_file+0x18c>
 394:	mov	x0, x19
 398:	bl	0 <grub_free>
 39c:	ldr	w0, [sp, #88]
 3a0:	cmp	w0, #0x2
 3a4:	cset	w0, eq  // eq = none
 3a8:	cmp	w22, #0x0
 3ac:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 3b0:	b.ne	498 <grub_mac_bless_file+0x1e8>  // b.any
 3b4:	orr	w0, w0, w22
 3b8:	cbz	w0, 424 <grub_mac_bless_file+0x174>
 3bc:	ldr	w1, [sp, #72]
 3c0:	mov	w2, w22
 3c4:	mov	x0, x23
 3c8:	bl	108 <grub_mac_bless_inode.part.0>
 3cc:	ldp	x19, x20, [sp, #16]
 3d0:	ldp	x21, x22, [sp, #32]
 3d4:	ldr	x23, [sp, #48]
 3d8:	ldp	x29, x30, [sp], #96
 3dc:	ret
 3e0:	adrp	x0, 0 <find_inode>
 3e4:	ldp	x19, x20, [sp, #16]
 3e8:	ldr	x0, [x0]
 3ec:	ldr	w0, [x0]
 3f0:	ldp	x21, x22, [sp, #32]
 3f4:	ldr	x23, [sp, #48]
 3f8:	ldp	x29, x30, [sp], #96
 3fc:	ret
 400:	ldp	x19, x20, [sp, #16]
 404:	adrp	x1, 0 <find_inode>
 408:	mov	w0, #0x9                   	// #9
 40c:	ldr	x1, [x1]
 410:	bl	0 <grub_error>
 414:	ldp	x21, x22, [sp, #32]
 418:	ldr	x23, [sp, #48]
 41c:	ldp	x29, x30, [sp], #96
 420:	ret
 424:	adrp	x1, 0 <find_inode>
 428:	mov	w0, #0x18                  	// #24
 42c:	ldr	x1, [x1]
 430:	bl	0 <grub_error>
 434:	ldp	x19, x20, [sp, #16]
 438:	b	3f0 <grub_mac_bless_file+0x140>
 43c:	mov	x0, x19
 440:	bl	0 <grub_free>
 444:	adrp	x1, 0 <find_inode>
 448:	mov	x2, x21
 44c:	mov	w0, #0x5                   	// #5
 450:	ldr	x1, [x1]
 454:	bl	0 <grub_error>
 458:	ldp	x19, x20, [sp, #16]
 45c:	ldp	x21, x22, [sp, #32]
 460:	ldr	x23, [sp, #48]
 464:	ldp	x29, x30, [sp], #96
 468:	ret
 46c:	adrp	x2, 0 <find_inode>
 470:	adrp	x1, 0 <find_inode>
 474:	ldr	x4, [x20, #24]
 478:	add	x0, x19, #0x1
 47c:	ldr	x2, [x2]
 480:	str	x0, [sp, #80]
 484:	ldr	x1, [x1]
 488:	add	x3, sp, #0x48
 48c:	mov	x0, x23
 490:	blr	x4
 494:	b	38c <grub_mac_bless_file+0xdc>
 498:	adrp	x1, 0 <find_inode>
 49c:	mov	w0, #0x12                  	// #18
 4a0:	ldr	x1, [x1]
 4a4:	bl	0 <grub_error>
 4a8:	ldp	x19, x20, [sp, #16]
 4ac:	b	3f0 <grub_mac_bless_file+0x140>
	...

00000000000004f8 <grub_cmd_macbless>:
 4f8:	cmp	w1, #0x1
 4fc:	b.eq	510 <grub_cmd_macbless+0x18>  // b.none
 500:	adrp	x1, 0 <find_inode>
 504:	mov	w0, #0x12                  	// #18
 508:	ldr	x1, [x1]
 50c:	b	0 <grub_error>
 510:	stp	x29, x30, [sp, #-48]!
 514:	mov	x29, sp
 518:	stp	x19, x20, [sp, #16]
 51c:	mov	x20, x0
 520:	mov	x19, x2
 524:	ldr	x0, [x2]
 528:	stp	x21, x22, [sp, #32]
 52c:	bl	0 <grub_file_get_device_name>
 530:	mov	x22, x0
 534:	bl	0 <grub_device_open>
 538:	mov	x21, x0
 53c:	ldr	x0, [x19]
 540:	mov	w1, #0x29                  	// #41
 544:	bl	0 <grub_strchr>
 548:	add	x1, x0, #0x1
 54c:	cbz	x0, 59c <grub_cmd_macbless+0xa4>
 550:	ldrb	w0, [x1]
 554:	cbz	w0, 5a4 <grub_cmd_macbless+0xac>
 558:	cbz	x21, 5b0 <grub_cmd_macbless+0xb8>
 55c:	ldr	x2, [x20, #16]
 560:	mov	x0, x21
 564:	ldrb	w2, [x2, #3]
 568:	cmp	w2, #0x74
 56c:	cset	w2, eq  // eq = none
 570:	bl	2b0 <grub_mac_bless_file>
 574:	mov	w19, w0
 578:	mov	x0, x21
 57c:	bl	0 <grub_device_close>
 580:	mov	x0, x22
 584:	bl	0 <grub_free>
 588:	mov	w0, w19
 58c:	ldp	x19, x20, [sp, #16]
 590:	ldp	x21, x22, [sp, #32]
 594:	ldp	x29, x30, [sp], #48
 598:	ret
 59c:	ldr	x1, [x19]
 5a0:	cbnz	x1, 550 <grub_cmd_macbless+0x58>
 5a4:	cbz	x21, 5b0 <grub_cmd_macbless+0xb8>
 5a8:	mov	x0, x21
 5ac:	bl	0 <grub_device_close>
 5b0:	mov	x0, x22
 5b4:	bl	0 <grub_free>
 5b8:	adrp	x1, 0 <find_inode>
 5bc:	mov	w0, #0x12                  	// #18
 5c0:	ldp	x19, x20, [sp, #16]
 5c4:	ldp	x21, x22, [sp, #32]
 5c8:	ldp	x29, x30, [sp], #48
 5cc:	ldr	x1, [x1]
 5d0:	b	0 <grub_error>
 5d4:	nop
	...

00000000000005e8 <grub_mod_init>:
 5e8:	stp	x29, x30, [sp, #-32]!
 5ec:	adrp	x3, 0 <find_inode>
 5f0:	adrp	x2, 0 <find_inode>
 5f4:	adrp	x0, 0 <find_inode>
 5f8:	adrp	x1, 0 <find_inode>
 5fc:	mov	x29, sp
 600:	ldr	x3, [x3]
 604:	str	x19, [sp, #16]
 608:	ldr	x2, [x2]
 60c:	mov	w4, #0x0                   	// #0
 610:	ldr	x0, [x0]
 614:	ldr	x19, [x1]
 618:	mov	x1, x19
 61c:	bl	0 <grub_register_command_prio>
 620:	adrp	x4, 0 <find_inode>
 624:	mov	x1, x19
 628:	adrp	x5, 0 <find_inode>
 62c:	adrp	x3, 0 <find_inode>
 630:	ldr	x19, [x4]
 634:	adrp	x2, 0 <find_inode>
 638:	ldr	x3, [x3]
 63c:	mov	w4, #0x0                   	// #0
 640:	ldr	x2, [x2]
 644:	str	x0, [x19]
 648:	ldr	x0, [x5]
 64c:	bl	0 <grub_register_command_prio>
 650:	str	x0, [x19, #8]
 654:	ldr	x19, [sp, #16]
 658:	ldp	x29, x30, [sp], #32
 65c:	ret
	...

00000000000006a0 <grub_mod_fini>:
 6a0:	stp	x29, x30, [sp, #-32]!
 6a4:	adrp	x0, 0 <find_inode>
 6a8:	mov	x29, sp
 6ac:	str	x19, [sp, #16]
 6b0:	ldr	x19, [x0]
 6b4:	ldr	x0, [x19]
 6b8:	bl	0 <grub_unregister_command>
 6bc:	ldr	x0, [x19, #8]
 6c0:	ldr	x19, [sp, #16]
 6c4:	ldp	x29, x30, [sp], #32
 6c8:	b	0 <grub_unregister_command>
 6cc:	nop
	...
