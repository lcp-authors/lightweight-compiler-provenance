
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x11edc>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xd4>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	nop
    1068:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    106c:	add	x0, x0, #0x1e8
    1070:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    1074:	add	x1, x1, #0x1e8
    1078:	cmp	x1, x0
    107c:	b.eq	1094 <ioctl@plt+0x54>  // b.none
    1080:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1084:	ldr	x1, [x1, #4000]
    1088:	cbz	x1, 1094 <ioctl@plt+0x54>
    108c:	mov	x16, x1
    1090:	br	x16
    1094:	ret
    1098:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    109c:	add	x0, x0, #0x1e8
    10a0:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    10a4:	add	x1, x1, #0x1e8
    10a8:	sub	x1, x1, x0
    10ac:	lsr	x2, x1, #63
    10b0:	add	x1, x2, x1, asr #3
    10b4:	cmp	xzr, x1, asr #1
    10b8:	asr	x1, x1, #1
    10bc:	b.eq	10d4 <ioctl@plt+0x94>  // b.none
    10c0:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x11edc>
    10c4:	ldr	x2, [x2, #4064]
    10c8:	cbz	x2, 10d4 <ioctl@plt+0x94>
    10cc:	mov	x16, x2
    10d0:	br	x16
    10d4:	ret
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x29, sp
    10e0:	str	x19, [sp, #16]
    10e4:	adrp	x19, 14000 <PyInit_fcntl@@Base+0x12edc>
    10e8:	ldrb	w0, [x19, #488]
    10ec:	cbnz	w0, 1114 <ioctl@plt+0xd4>
    10f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    10f4:	ldr	x0, [x0, #4016]
    10f8:	cbz	x0, 1108 <ioctl@plt+0xc8>
    10fc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1100:	ldr	x0, [x0, #216]
    1104:	bl	ef0 <__cxa_finalize@plt>
    1108:	bl	1068 <ioctl@plt+0x28>
    110c:	mov	w0, #0x1                   	// #1
    1110:	strb	w0, [x19, #488]
    1114:	ldr	x19, [sp, #16]
    1118:	ldp	x29, x30, [sp], #32
    111c:	ret
    1120:	b	1098 <ioctl@plt+0x58>

0000000000001124 <PyInit_fcntl@@Base>:
    1124:	stp	x29, x30, [sp, #-32]!
    1128:	str	x19, [sp, #16]
    112c:	mov	x29, sp
    1130:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1134:	add	x0, x0, #0xe0
    1138:	mov	w1, #0x3f5                 	// #1013
    113c:	bl	fa0 <PyModule_Create2@plt>
    1140:	mov	x19, x0
    1144:	cbz	x0, 15b4 <PyInit_fcntl@@Base+0x490>
    1148:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    114c:	add	x1, x1, #0x5a
    1150:	mov	w2, #0x1                   	// #1
    1154:	mov	x0, x19
    1158:	bl	eb0 <PyModule_AddIntConstant@plt>
    115c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1160:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1164:	add	x1, x1, #0x62
    1168:	mov	w2, #0x2                   	// #2
    116c:	mov	x0, x19
    1170:	bl	eb0 <PyModule_AddIntConstant@plt>
    1174:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1178:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    117c:	add	x1, x1, #0x6a
    1180:	mov	w2, #0x4                   	// #4
    1184:	mov	x0, x19
    1188:	bl	eb0 <PyModule_AddIntConstant@plt>
    118c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1190:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1194:	add	x1, x1, #0x72
    1198:	mov	w2, #0x8                   	// #8
    119c:	mov	x0, x19
    11a0:	bl	eb0 <PyModule_AddIntConstant@plt>
    11a4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    11a8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11ac:	add	x1, x1, #0x7a
    11b0:	mov	w2, #0x20                  	// #32
    11b4:	mov	x0, x19
    11b8:	bl	eb0 <PyModule_AddIntConstant@plt>
    11bc:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    11c0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11c4:	add	x1, x1, #0x84
    11c8:	mov	w2, #0x40                  	// #64
    11cc:	mov	x0, x19
    11d0:	bl	eb0 <PyModule_AddIntConstant@plt>
    11d4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    11d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11dc:	add	x1, x1, #0x8e
    11e0:	mov	w2, #0x80                  	// #128
    11e4:	mov	x0, x19
    11e8:	bl	eb0 <PyModule_AddIntConstant@plt>
    11ec:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    11f0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11f4:	add	x1, x1, #0x99
    11f8:	mov	w2, #0xc0                  	// #192
    11fc:	mov	x0, x19
    1200:	bl	eb0 <PyModule_AddIntConstant@plt>
    1204:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1208:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    120c:	add	x1, x1, #0xa1
    1210:	mov	x0, x19
    1214:	mov	x2, xzr
    1218:	bl	eb0 <PyModule_AddIntConstant@plt>
    121c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1220:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1224:	add	x1, x1, #0xa9
    1228:	mov	w2, #0x406                 	// #1030
    122c:	mov	x0, x19
    1230:	bl	eb0 <PyModule_AddIntConstant@plt>
    1234:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1238:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    123c:	add	x1, x1, #0xb9
    1240:	mov	w2, #0x1                   	// #1
    1244:	mov	x0, x19
    1248:	bl	eb0 <PyModule_AddIntConstant@plt>
    124c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1250:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1254:	add	x1, x1, #0xc1
    1258:	mov	w2, #0x2                   	// #2
    125c:	mov	x0, x19
    1260:	bl	eb0 <PyModule_AddIntConstant@plt>
    1264:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1268:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    126c:	add	x1, x1, #0xc9
    1270:	mov	w2, #0x3                   	// #3
    1274:	mov	x0, x19
    1278:	bl	eb0 <PyModule_AddIntConstant@plt>
    127c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1280:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1284:	add	x1, x1, #0xd1
    1288:	mov	w2, #0x4                   	// #4
    128c:	mov	x0, x19
    1290:	bl	eb0 <PyModule_AddIntConstant@plt>
    1294:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1298:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    129c:	add	x1, x1, #0xd9
    12a0:	mov	w2, #0x5                   	// #5
    12a4:	mov	x0, x19
    12a8:	bl	eb0 <PyModule_AddIntConstant@plt>
    12ac:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    12b0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12b4:	add	x1, x1, #0xe1
    12b8:	mov	w2, #0x6                   	// #6
    12bc:	mov	x0, x19
    12c0:	bl	eb0 <PyModule_AddIntConstant@plt>
    12c4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    12c8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12cc:	add	x1, x1, #0xe9
    12d0:	mov	w2, #0x7                   	// #7
    12d4:	mov	x0, x19
    12d8:	bl	eb0 <PyModule_AddIntConstant@plt>
    12dc:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    12e0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12e4:	add	x1, x1, #0xf2
    12e8:	mov	w2, #0x9                   	// #9
    12ec:	mov	x0, x19
    12f0:	bl	eb0 <PyModule_AddIntConstant@plt>
    12f4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    12f8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12fc:	add	x1, x1, #0xfb
    1300:	mov	w2, #0x8                   	// #8
    1304:	mov	x0, x19
    1308:	bl	eb0 <PyModule_AddIntConstant@plt>
    130c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1310:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1314:	add	x1, x1, #0x104
    1318:	mov	w2, #0xb                   	// #11
    131c:	mov	x0, x19
    1320:	bl	eb0 <PyModule_AddIntConstant@plt>
    1324:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1328:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    132c:	add	x1, x1, #0x10d
    1330:	mov	w2, #0xa                   	// #10
    1334:	mov	x0, x19
    1338:	bl	eb0 <PyModule_AddIntConstant@plt>
    133c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1340:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1344:	add	x1, x1, #0x116
    1348:	mov	x0, x19
    134c:	mov	x2, xzr
    1350:	bl	eb0 <PyModule_AddIntConstant@plt>
    1354:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1358:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    135c:	add	x1, x1, #0x11e
    1360:	mov	w2, #0x1                   	// #1
    1364:	mov	x0, x19
    1368:	bl	eb0 <PyModule_AddIntConstant@plt>
    136c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1370:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1374:	add	x1, x1, #0x126
    1378:	mov	w2, #0x2                   	// #2
    137c:	mov	x0, x19
    1380:	bl	eb0 <PyModule_AddIntConstant@plt>
    1384:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1388:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    138c:	add	x1, x1, #0x12e
    1390:	mov	w2, #0x5                   	// #5
    1394:	mov	x0, x19
    1398:	bl	eb0 <PyModule_AddIntConstant@plt>
    139c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    13a0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13a4:	add	x1, x1, #0x138
    13a8:	mov	w2, #0x6                   	// #6
    13ac:	mov	x0, x19
    13b0:	bl	eb0 <PyModule_AddIntConstant@plt>
    13b4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    13b8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13bc:	add	x1, x1, #0x142
    13c0:	mov	w2, #0x7                   	// #7
    13c4:	mov	x0, x19
    13c8:	bl	eb0 <PyModule_AddIntConstant@plt>
    13cc:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    13d0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13d4:	add	x1, x1, #0x14d
    13d8:	mov	w2, #0x2000                	// #8192
    13dc:	mov	x0, x19
    13e0:	bl	eb0 <PyModule_AddIntConstant@plt>
    13e4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    13e8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13ec:	add	x1, x1, #0x154
    13f0:	mov	w2, #0x400                 	// #1024
    13f4:	mov	x0, x19
    13f8:	bl	eb0 <PyModule_AddIntConstant@plt>
    13fc:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1400:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1404:	add	x1, x1, #0x15f
    1408:	mov	w2, #0x401                 	// #1025
    140c:	mov	x0, x19
    1410:	bl	eb0 <PyModule_AddIntConstant@plt>
    1414:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1418:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    141c:	add	x1, x1, #0x16a
    1420:	mov	w2, #0x402                 	// #1026
    1424:	mov	x0, x19
    1428:	bl	eb0 <PyModule_AddIntConstant@plt>
    142c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1430:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1434:	add	x1, x1, #0x173
    1438:	mov	w2, #0x4                   	// #4
    143c:	mov	x0, x19
    1440:	bl	eb0 <PyModule_AddIntConstant@plt>
    1444:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1448:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    144c:	add	x1, x1, #0x17b
    1450:	mov	w2, #0x8                   	// #8
    1454:	mov	x0, x19
    1458:	bl	eb0 <PyModule_AddIntConstant@plt>
    145c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1460:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1464:	add	x1, x1, #0xae
    1468:	mov	w2, #0x1                   	// #1
    146c:	mov	x0, x19
    1470:	bl	eb0 <PyModule_AddIntConstant@plt>
    1474:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1478:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    147c:	add	x1, x1, #0x183
    1480:	mov	w2, #0x1                   	// #1
    1484:	mov	x0, x19
    1488:	bl	eb0 <PyModule_AddIntConstant@plt>
    148c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1490:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1494:	add	x1, x1, #0x18d
    1498:	mov	w2, #0x2                   	// #2
    149c:	mov	x0, x19
    14a0:	bl	eb0 <PyModule_AddIntConstant@plt>
    14a4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    14a8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14ac:	add	x1, x1, #0x197
    14b0:	mov	w2, #0x4                   	// #4
    14b4:	mov	x0, x19
    14b8:	bl	eb0 <PyModule_AddIntConstant@plt>
    14bc:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    14c0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14c4:	add	x1, x1, #0x1a1
    14c8:	mov	w2, #0x8                   	// #8
    14cc:	mov	x0, x19
    14d0:	bl	eb0 <PyModule_AddIntConstant@plt>
    14d4:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    14d8:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14dc:	add	x1, x1, #0x1ab
    14e0:	mov	w2, #0x10                  	// #16
    14e4:	mov	x0, x19
    14e8:	bl	eb0 <PyModule_AddIntConstant@plt>
    14ec:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    14f0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14f4:	add	x1, x1, #0x1b5
    14f8:	mov	w2, #0x20                  	// #32
    14fc:	mov	x0, x19
    1500:	bl	eb0 <PyModule_AddIntConstant@plt>
    1504:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1508:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    150c:	add	x1, x1, #0x1bf
    1510:	mov	w2, #0x80000000            	// #-2147483648
    1514:	mov	x0, x19
    1518:	bl	eb0 <PyModule_AddIntConstant@plt>
    151c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1520:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1524:	add	x1, x1, #0x1cc
    1528:	mov	w2, #0x409                 	// #1033
    152c:	mov	x0, x19
    1530:	bl	eb0 <PyModule_AddIntConstant@plt>
    1534:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1538:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    153c:	add	x1, x1, #0x1d8
    1540:	mov	w2, #0x40a                 	// #1034
    1544:	mov	x0, x19
    1548:	bl	eb0 <PyModule_AddIntConstant@plt>
    154c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1550:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1554:	add	x1, x1, #0x1e4
    1558:	mov	w2, #0x1                   	// #1
    155c:	mov	x0, x19
    1560:	bl	eb0 <PyModule_AddIntConstant@plt>
    1564:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1568:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    156c:	add	x1, x1, #0x1f0
    1570:	mov	w2, #0x2                   	// #2
    1574:	mov	x0, x19
    1578:	bl	eb0 <PyModule_AddIntConstant@plt>
    157c:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1580:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1584:	add	x1, x1, #0x1fe
    1588:	mov	w2, #0x4                   	// #4
    158c:	mov	x0, x19
    1590:	bl	eb0 <PyModule_AddIntConstant@plt>
    1594:	cbnz	w0, 15b0 <PyInit_fcntl@@Base+0x48c>
    1598:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    159c:	add	x1, x1, #0x20a
    15a0:	mov	w2, #0x8                   	// #8
    15a4:	mov	x0, x19
    15a8:	bl	eb0 <PyModule_AddIntConstant@plt>
    15ac:	cbz	w0, 15b4 <PyInit_fcntl@@Base+0x490>
    15b0:	mov	x19, xzr
    15b4:	mov	x0, x19
    15b8:	ldr	x19, [sp, #16]
    15bc:	ldp	x29, x30, [sp], #32
    15c0:	ret
    15c4:	stp	x29, x30, [sp, #-64]!
    15c8:	str	x28, [sp, #16]
    15cc:	stp	x22, x21, [sp, #32]
    15d0:	stp	x20, x19, [sp, #48]
    15d4:	mov	x29, sp
    15d8:	sub	sp, sp, #0x410
    15dc:	and	x8, x2, #0xfffffffffffffffe
    15e0:	mov	x21, x2
    15e4:	cmp	x8, #0x2
    15e8:	mov	x22, x1
    15ec:	b.eq	160c <PyInit_fcntl@@Base+0x4e8>  // b.none
    15f0:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    15f4:	add	x0, x0, #0xef8
    15f8:	mov	w2, #0x2                   	// #2
    15fc:	mov	w3, #0x3                   	// #3
    1600:	mov	x1, x21
    1604:	bl	f80 <_PyArg_CheckPositional@plt>
    1608:	cbz	w0, 165c <PyInit_fcntl@@Base+0x538>
    160c:	ldr	x0, [x22]
    1610:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1614:	tbnz	w0, #31, 165c <PyInit_fcntl@@Base+0x538>
    1618:	ldr	x8, [x22, #8]
    161c:	mov	w19, w0
    1620:	ldr	x0, [x8, #8]
    1624:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1628:	ldr	x8, [x8, #4008]
    162c:	cmp	x0, x8
    1630:	b.eq	1644 <PyInit_fcntl@@Base+0x520>  // b.none
    1634:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1638:	ldr	x1, [x1, #4008]
    163c:	bl	1010 <PyType_IsSubtype@plt>
    1640:	cbz	w0, 1678 <PyInit_fcntl@@Base+0x554>
    1644:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1648:	ldr	x8, [x8, #4032]
    164c:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1650:	add	x1, x1, #0xf0a
    1654:	ldr	x0, [x8]
    1658:	bl	f10 <PyErr_SetString@plt>
    165c:	mov	x0, xzr
    1660:	add	sp, sp, #0x410
    1664:	ldp	x20, x19, [sp, #48]
    1668:	ldp	x22, x21, [sp, #32]
    166c:	ldr	x28, [sp, #16]
    1670:	ldp	x29, x30, [sp], #64
    1674:	ret
    1678:	ldr	x0, [x22, #8]
    167c:	bl	1030 <_PyLong_AsInt@plt>
    1680:	mov	w20, w0
    1684:	cmn	w0, #0x1
    1688:	b.eq	16ec <PyInit_fcntl@@Base+0x5c8>  // b.none
    168c:	cmp	x21, #0x3
    1690:	b.ge	16a4 <PyInit_fcntl@@Base+0x580>  // b.tcont
    1694:	mov	x21, xzr
    1698:	str	wzr, [x29, #28]
    169c:	cbnz	x21, 16b0 <PyInit_fcntl@@Base+0x58c>
    16a0:	b	1714 <PyInit_fcntl@@Base+0x5f0>
    16a4:	ldr	x21, [x22, #16]
    16a8:	str	wzr, [x29, #28]
    16ac:	cbz	x21, 1714 <PyInit_fcntl@@Base+0x5f0>
    16b0:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    16b4:	add	x1, x1, #0xf2f
    16b8:	sub	x2, x29, #0x8
    16bc:	sub	x3, x29, #0x10
    16c0:	mov	x0, x21
    16c4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    16c8:	cbz	w0, 16f8 <PyInit_fcntl@@Base+0x5d4>
    16cc:	ldur	x2, [x29, #-16]
    16d0:	cmp	x2, #0x401
    16d4:	b.cc	175c <PyInit_fcntl@@Base+0x638>  // b.lo, b.ul, b.last
    16d8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    16dc:	ldr	x8, [x8, #4024]
    16e0:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    16e4:	add	x1, x1, #0xf32
    16e8:	b	1654 <PyInit_fcntl@@Base+0x530>
    16ec:	bl	f90 <PyErr_Occurred@plt>
    16f0:	cbnz	x0, 165c <PyInit_fcntl@@Base+0x538>
    16f4:	b	168c <PyInit_fcntl@@Base+0x568>
    16f8:	bl	f50 <PyErr_Clear@plt>
    16fc:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1700:	add	x1, x1, #0xf4c
    1704:	add	x2, x29, #0x1c
    1708:	mov	x0, x21
    170c:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1710:	cbz	w0, 165c <PyInit_fcntl@@Base+0x538>
    1714:	bl	fe0 <PyEval_SaveThread@plt>
    1718:	ldr	w2, [x29, #28]
    171c:	mov	x22, x0
    1720:	mov	w0, w19
    1724:	mov	w1, w20
    1728:	bl	fd0 <fcntl64@plt>
    172c:	mov	w21, w0
    1730:	mov	x0, x22
    1734:	bl	ec0 <PyEval_RestoreThread@plt>
    1738:	cmn	w21, #0x1
    173c:	b.ne	17b0 <PyInit_fcntl@@Base+0x68c>  // b.any
    1740:	bl	1020 <__errno_location@plt>
    1744:	ldr	w8, [x0]
    1748:	cmp	w8, #0x4
    174c:	b.ne	17d4 <PyInit_fcntl@@Base+0x6b0>  // b.any
    1750:	bl	1000 <PyErr_CheckSignals@plt>
    1754:	cbz	w0, 1714 <PyInit_fcntl@@Base+0x5f0>
    1758:	b	165c <PyInit_fcntl@@Base+0x538>
    175c:	ldur	x1, [x29, #-8]
    1760:	mov	x0, sp
    1764:	bl	ea0 <memcpy@plt>
    1768:	bl	fe0 <PyEval_SaveThread@plt>
    176c:	mov	x22, x0
    1770:	mov	x2, sp
    1774:	mov	w0, w19
    1778:	mov	w1, w20
    177c:	bl	fd0 <fcntl64@plt>
    1780:	mov	w21, w0
    1784:	mov	x0, x22
    1788:	bl	ec0 <PyEval_RestoreThread@plt>
    178c:	cmn	w21, #0x1
    1790:	b.ne	17c0 <PyInit_fcntl@@Base+0x69c>  // b.any
    1794:	bl	1020 <__errno_location@plt>
    1798:	ldr	w8, [x0]
    179c:	cmp	w8, #0x4
    17a0:	b.ne	17d4 <PyInit_fcntl@@Base+0x6b0>  // b.any
    17a4:	bl	1000 <PyErr_CheckSignals@plt>
    17a8:	cbz	w0, 1768 <PyInit_fcntl@@Base+0x644>
    17ac:	b	165c <PyInit_fcntl@@Base+0x538>
    17b0:	tbnz	w21, #31, 17d4 <PyInit_fcntl@@Base+0x6b0>
    17b4:	mov	w0, w21
    17b8:	bl	f40 <PyLong_FromLong@plt>
    17bc:	b	1660 <PyInit_fcntl@@Base+0x53c>
    17c0:	tbnz	w21, #31, 17d4 <PyInit_fcntl@@Base+0x6b0>
    17c4:	ldur	x1, [x29, #-16]
    17c8:	mov	x0, sp
    17cc:	bl	f00 <PyBytes_FromStringAndSize@plt>
    17d0:	b	1660 <PyInit_fcntl@@Base+0x53c>
    17d4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    17d8:	ldr	x8, [x8, #4040]
    17dc:	ldr	x0, [x8]
    17e0:	bl	ed0 <PyErr_SetFromErrno@plt>
    17e4:	b	1660 <PyInit_fcntl@@Base+0x53c>
    17e8:	stp	x29, x30, [sp, #-80]!
    17ec:	str	x28, [sp, #16]
    17f0:	stp	x24, x23, [sp, #32]
    17f4:	stp	x22, x21, [sp, #48]
    17f8:	stp	x20, x19, [sp, #64]
    17fc:	mov	x29, sp
    1800:	sub	sp, sp, #0x460
    1804:	sub	x8, x2, #0x2
    1808:	mov	x21, x2
    180c:	cmp	x8, #0x3
    1810:	mov	x23, x1
    1814:	b.cc	1834 <PyInit_fcntl@@Base+0x710>  // b.lo, b.ul, b.last
    1818:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    181c:	add	x0, x0, #0xfd4
    1820:	mov	w2, #0x2                   	// #2
    1824:	mov	w3, #0x4                   	// #4
    1828:	mov	x1, x21
    182c:	bl	f80 <_PyArg_CheckPositional@plt>
    1830:	cbz	w0, 1884 <PyInit_fcntl@@Base+0x760>
    1834:	ldr	x0, [x23]
    1838:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    183c:	tbnz	w0, #31, 1884 <PyInit_fcntl@@Base+0x760>
    1840:	ldr	x8, [x23, #8]
    1844:	mov	w19, w0
    1848:	ldr	x0, [x8, #8]
    184c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1850:	ldr	x8, [x8, #4008]
    1854:	cmp	x0, x8
    1858:	b.eq	186c <PyInit_fcntl@@Base+0x748>  // b.none
    185c:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1860:	ldr	x1, [x1, #4008]
    1864:	bl	1010 <PyType_IsSubtype@plt>
    1868:	cbz	w0, 18a4 <PyInit_fcntl@@Base+0x780>
    186c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1870:	ldr	x8, [x8, #4032]
    1874:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1878:	add	x1, x1, #0xf0a
    187c:	ldr	x0, [x8]
    1880:	bl	f10 <PyErr_SetString@plt>
    1884:	mov	x0, xzr
    1888:	add	sp, sp, #0x460
    188c:	ldp	x20, x19, [sp, #64]
    1890:	ldp	x22, x21, [sp, #48]
    1894:	ldp	x24, x23, [sp, #32]
    1898:	ldr	x28, [sp, #16]
    189c:	ldp	x29, x30, [sp], #80
    18a0:	ret
    18a4:	ldr	x0, [x23, #8]
    18a8:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    18ac:	mov	x20, x0
    18b0:	cmn	w20, #0x1
    18b4:	b.eq	1934 <PyInit_fcntl@@Base+0x810>  // b.none
    18b8:	cmp	x21, #0x3
    18bc:	b.ge	18c8 <PyInit_fcntl@@Base+0x7a4>  // b.tcont
    18c0:	mov	x22, xzr
    18c4:	b	18d4 <PyInit_fcntl@@Base+0x7b0>
    18c8:	ldr	x22, [x23, #16]
    18cc:	cmp	x21, #0x3
    18d0:	b.ne	1940 <PyInit_fcntl@@Base+0x81c>  // b.any
    18d4:	mov	w21, #0x1                   	// #1
    18d8:	stur	wzr, [x29, #-4]
    18dc:	cbz	x22, 1a88 <PyInit_fcntl@@Base+0x964>
    18e0:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    18e4:	add	x1, x1, #0xfae
    18e8:	sub	x2, x29, #0x58
    18ec:	mov	x0, x22
    18f0:	sub	x24, x29, #0x58
    18f4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    18f8:	cbz	w0, 1954 <PyInit_fcntl@@Base+0x830>
    18fc:	ldr	x22, [x24, #16]
    1900:	ldr	x23, [x24]
    1904:	cmp	x22, #0x401
    1908:	cbz	w21, 19d4 <PyInit_fcntl@@Base+0x8b0>
    190c:	b.lt	19f4 <PyInit_fcntl@@Base+0x8d0>  // b.tstop
    1910:	add	x8, sp, #0x4
    1914:	cmp	x8, x23
    1918:	b.eq	1a0c <PyInit_fcntl@@Base+0x8e8>  // b.none
    191c:	and	x1, x20, #0xffffffff
    1920:	mov	w0, w19
    1924:	mov	x2, x23
    1928:	bl	1040 <ioctl@plt>
    192c:	mov	w19, w0
    1930:	b	1a4c <PyInit_fcntl@@Base+0x928>
    1934:	bl	f90 <PyErr_Occurred@plt>
    1938:	cbnz	x0, 1884 <PyInit_fcntl@@Base+0x760>
    193c:	b	18b8 <PyInit_fcntl@@Base+0x794>
    1940:	ldr	x0, [x23, #24]
    1944:	bl	fc0 <PyObject_IsTrue@plt>
    1948:	mov	w21, w0
    194c:	tbz	w0, #31, 18d8 <PyInit_fcntl@@Base+0x7b4>
    1950:	b	1884 <PyInit_fcntl@@Base+0x760>
    1954:	bl	f50 <PyErr_Clear@plt>
    1958:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    195c:	add	x1, x1, #0xfd1
    1960:	sub	x2, x29, #0x58
    1964:	mov	x0, x22
    1968:	bl	f30 <_PyArg_Parse_SizeT@plt>
    196c:	cbz	w0, 1a6c <PyInit_fcntl@@Base+0x948>
    1970:	ldr	x21, [x24, #16]
    1974:	cmp	x21, #0x401
    1978:	b.ge	19d8 <PyInit_fcntl@@Base+0x8b4>  // b.tcont
    197c:	ldr	x1, [x24]
    1980:	add	x0, sp, #0x4
    1984:	mov	x2, x21
    1988:	add	x22, sp, #0x4
    198c:	bl	ea0 <memcpy@plt>
    1990:	strb	wzr, [x22, x21]
    1994:	bl	fe0 <PyEval_SaveThread@plt>
    1998:	mov	x22, x0
    199c:	and	x1, x20, #0xffffffff
    19a0:	add	x2, sp, #0x4
    19a4:	mov	w0, w19
    19a8:	bl	1040 <ioctl@plt>
    19ac:	mov	w19, w0
    19b0:	mov	x0, x22
    19b4:	bl	ec0 <PyEval_RestoreThread@plt>
    19b8:	sub	x0, x29, #0x58
    19bc:	bl	ee0 <PyBuffer_Release@plt>
    19c0:	tbnz	w19, #31, 1abc <PyInit_fcntl@@Base+0x998>
    19c4:	add	x0, sp, #0x4
    19c8:	mov	x1, x21
    19cc:	bl	f00 <PyBytes_FromStringAndSize@plt>
    19d0:	b	1888 <PyInit_fcntl@@Base+0x764>
    19d4:	b.lt	19f4 <PyInit_fcntl@@Base+0x8d0>  // b.tstop
    19d8:	sub	x0, x29, #0x58
    19dc:	bl	ee0 <PyBuffer_Release@plt>
    19e0:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    19e4:	ldr	x8, [x8, #4024]
    19e8:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    19ec:	add	x1, x1, #0xfb7
    19f0:	b	187c <PyInit_fcntl@@Base+0x758>
    19f4:	add	x0, sp, #0x4
    19f8:	mov	x1, x23
    19fc:	mov	x2, x22
    1a00:	add	x24, sp, #0x4
    1a04:	bl	ea0 <memcpy@plt>
    1a08:	strb	wzr, [x24, x22]
    1a0c:	bl	fe0 <PyEval_SaveThread@plt>
    1a10:	mov	x24, x0
    1a14:	and	x1, x20, #0xffffffff
    1a18:	add	x2, sp, #0x4
    1a1c:	mov	w0, w19
    1a20:	bl	1040 <ioctl@plt>
    1a24:	mov	w19, w0
    1a28:	mov	x0, x24
    1a2c:	bl	ec0 <PyEval_RestoreThread@plt>
    1a30:	cbz	w21, 1a4c <PyInit_fcntl@@Base+0x928>
    1a34:	cmp	x22, #0x400
    1a38:	b.gt	1a4c <PyInit_fcntl@@Base+0x928>
    1a3c:	add	x1, sp, #0x4
    1a40:	mov	x0, x23
    1a44:	mov	x2, x22
    1a48:	bl	ea0 <memcpy@plt>
    1a4c:	sub	x0, x29, #0x58
    1a50:	bl	ee0 <PyBuffer_Release@plt>
    1a54:	tbnz	w19, #31, 1abc <PyInit_fcntl@@Base+0x998>
    1a58:	cbnz	w21, 1ab0 <PyInit_fcntl@@Base+0x98c>
    1a5c:	add	x0, sp, #0x4
    1a60:	mov	x1, x22
    1a64:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1a68:	b	1888 <PyInit_fcntl@@Base+0x764>
    1a6c:	bl	f50 <PyErr_Clear@plt>
    1a70:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1a74:	add	x1, x1, #0xfda
    1a78:	sub	x2, x29, #0x4
    1a7c:	mov	x0, x22
    1a80:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1a84:	cbz	w0, 1884 <PyInit_fcntl@@Base+0x760>
    1a88:	bl	fe0 <PyEval_SaveThread@plt>
    1a8c:	ldur	w2, [x29, #-4]
    1a90:	mov	x21, x0
    1a94:	and	x1, x20, #0xffffffff
    1a98:	mov	w0, w19
    1a9c:	bl	1040 <ioctl@plt>
    1aa0:	mov	w19, w0
    1aa4:	mov	x0, x21
    1aa8:	bl	ec0 <PyEval_RestoreThread@plt>
    1aac:	tbnz	w19, #31, 1abc <PyInit_fcntl@@Base+0x998>
    1ab0:	mov	w0, w19
    1ab4:	bl	f40 <PyLong_FromLong@plt>
    1ab8:	b	1888 <PyInit_fcntl@@Base+0x764>
    1abc:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1ac0:	ldr	x8, [x8, #4040]
    1ac4:	ldr	x0, [x8]
    1ac8:	bl	ed0 <PyErr_SetFromErrno@plt>
    1acc:	b	1884 <PyInit_fcntl@@Base+0x760>
    1ad0:	stp	x29, x30, [sp, #-48]!
    1ad4:	stp	x22, x21, [sp, #16]
    1ad8:	stp	x20, x19, [sp, #32]
    1adc:	mov	x29, sp
    1ae0:	cmp	x2, #0x2
    1ae4:	mov	x20, x1
    1ae8:	b.eq	1b0c <PyInit_fcntl@@Base+0x9e8>  // b.none
    1aec:	mov	x8, x2
    1af0:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    1af4:	add	x0, x0, #0xefe
    1af8:	mov	w2, #0x2                   	// #2
    1afc:	mov	w3, #0x2                   	// #2
    1b00:	mov	x1, x8
    1b04:	bl	f80 <_PyArg_CheckPositional@plt>
    1b08:	cbz	w0, 1bd8 <PyInit_fcntl@@Base+0xab4>
    1b0c:	ldr	x0, [x20]
    1b10:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1b14:	tbnz	w0, #31, 1bd8 <PyInit_fcntl@@Base+0xab4>
    1b18:	ldr	x8, [x20, #8]
    1b1c:	mov	w19, w0
    1b20:	ldr	x0, [x8, #8]
    1b24:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1b28:	ldr	x8, [x8, #4008]
    1b2c:	cmp	x0, x8
    1b30:	b.eq	1b44 <PyInit_fcntl@@Base+0xa20>  // b.none
    1b34:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1b38:	ldr	x1, [x1, #4008]
    1b3c:	bl	1010 <PyType_IsSubtype@plt>
    1b40:	cbz	w0, 1b70 <PyInit_fcntl@@Base+0xa4c>
    1b44:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1b48:	ldr	x8, [x8, #4032]
    1b4c:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1b50:	add	x1, x1, #0xf0a
    1b54:	ldr	x0, [x8]
    1b58:	bl	f10 <PyErr_SetString@plt>
    1b5c:	mov	x0, xzr
    1b60:	ldp	x20, x19, [sp, #32]
    1b64:	ldp	x22, x21, [sp, #16]
    1b68:	ldp	x29, x30, [sp], #48
    1b6c:	ret
    1b70:	ldr	x0, [x20, #8]
    1b74:	bl	1030 <_PyLong_AsInt@plt>
    1b78:	cmn	w0, #0x1
    1b7c:	b.eq	1bd0 <PyInit_fcntl@@Base+0xaac>  // b.none
    1b80:	mov	w20, w0
    1b84:	bl	fe0 <PyEval_SaveThread@plt>
    1b88:	mov	x22, x0
    1b8c:	mov	w0, w19
    1b90:	mov	w1, w20
    1b94:	bl	f20 <flock@plt>
    1b98:	mov	w21, w0
    1b9c:	mov	x0, x22
    1ba0:	bl	ec0 <PyEval_RestoreThread@plt>
    1ba4:	cmn	w21, #0x1
    1ba8:	b.ne	1c54 <PyInit_fcntl@@Base+0xb30>  // b.any
    1bac:	bl	1020 <__errno_location@plt>
    1bb0:	ldr	w8, [x0]
    1bb4:	cmp	w8, #0x4
    1bb8:	b.ne	1c38 <PyInit_fcntl@@Base+0xb14>  // b.any
    1bbc:	bl	1000 <PyErr_CheckSignals@plt>
    1bc0:	mov	w8, w0
    1bc4:	mov	x0, xzr
    1bc8:	cbz	w8, 1b84 <PyInit_fcntl@@Base+0xa60>
    1bcc:	b	1b60 <PyInit_fcntl@@Base+0xa3c>
    1bd0:	bl	f90 <PyErr_Occurred@plt>
    1bd4:	cbz	x0, 1c0c <PyInit_fcntl@@Base+0xae8>
    1bd8:	mov	x0, xzr
    1bdc:	ldp	x20, x19, [sp, #32]
    1be0:	ldp	x22, x21, [sp, #16]
    1be4:	ldp	x29, x30, [sp], #48
    1be8:	ret
    1bec:	bl	1020 <__errno_location@plt>
    1bf0:	ldr	w8, [x0]
    1bf4:	cmp	w8, #0x4
    1bf8:	b.ne	1c38 <PyInit_fcntl@@Base+0xb14>  // b.any
    1bfc:	bl	1000 <PyErr_CheckSignals@plt>
    1c00:	mov	w8, w0
    1c04:	mov	x0, xzr
    1c08:	cbnz	w8, 1b60 <PyInit_fcntl@@Base+0xa3c>
    1c0c:	bl	fe0 <PyEval_SaveThread@plt>
    1c10:	mov	x21, x0
    1c14:	mov	w1, #0xffffffff            	// #-1
    1c18:	mov	w0, w19
    1c1c:	bl	f20 <flock@plt>
    1c20:	mov	w20, w0
    1c24:	mov	x0, x21
    1c28:	bl	ec0 <PyEval_RestoreThread@plt>
    1c2c:	cmn	w20, #0x1
    1c30:	b.eq	1bec <PyInit_fcntl@@Base+0xac8>  // b.none
    1c34:	tbz	w20, #31, 1c58 <PyInit_fcntl@@Base+0xb34>
    1c38:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1c3c:	ldr	x8, [x8, #4040]
    1c40:	ldp	x20, x19, [sp, #32]
    1c44:	ldp	x22, x21, [sp, #16]
    1c48:	ldr	x0, [x8]
    1c4c:	ldp	x29, x30, [sp], #48
    1c50:	b	ed0 <PyErr_SetFromErrno@plt>
    1c54:	tbnz	w21, #31, 1c38 <PyInit_fcntl@@Base+0xb14>
    1c58:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1c5c:	ldr	x0, [x0, #4056]
    1c60:	ldr	x8, [x0]
    1c64:	add	x8, x8, #0x1
    1c68:	str	x8, [x0]
    1c6c:	ldp	x20, x19, [sp, #32]
    1c70:	ldp	x22, x21, [sp, #16]
    1c74:	ldp	x29, x30, [sp], #48
    1c78:	ret
    1c7c:	sub	sp, sp, #0x70
    1c80:	stp	x29, x30, [sp, #32]
    1c84:	str	x25, [sp, #48]
    1c88:	stp	x24, x23, [sp, #64]
    1c8c:	stp	x22, x21, [sp, #80]
    1c90:	stp	x20, x19, [sp, #96]
    1c94:	add	x29, sp, #0x20
    1c98:	sub	x8, x2, #0x2
    1c9c:	mov	x24, x2
    1ca0:	cmp	x8, #0x4
    1ca4:	mov	x23, x1
    1ca8:	b.cc	1cc8 <PyInit_fcntl@@Base+0xba4>  // b.lo, b.ul, b.last
    1cac:	adrp	x0, 1000 <PyErr_CheckSignals@plt>
    1cb0:	add	x0, x0, #0xf04
    1cb4:	mov	w2, #0x2                   	// #2
    1cb8:	mov	w3, #0x5                   	// #5
    1cbc:	mov	x1, x24
    1cc0:	bl	f80 <_PyArg_CheckPositional@plt>
    1cc4:	cbz	w0, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1cc8:	ldr	x0, [x23]
    1ccc:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1cd0:	tbnz	w0, #31, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1cd4:	ldr	x8, [x23, #8]
    1cd8:	mov	w19, w0
    1cdc:	ldr	x0, [x8, #8]
    1ce0:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1ce4:	ldr	x8, [x8, #4008]
    1ce8:	cmp	x0, x8
    1cec:	b.eq	1d04 <PyInit_fcntl@@Base+0xbe0>  // b.none
    1cf0:	adrp	x25, 13000 <PyInit_fcntl@@Base+0x11edc>
    1cf4:	ldr	x25, [x25, #4008]
    1cf8:	mov	x1, x25
    1cfc:	bl	1010 <PyType_IsSubtype@plt>
    1d00:	cbz	w0, 1d3c <PyInit_fcntl@@Base+0xc18>
    1d04:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1d08:	ldr	x8, [x8, #4032]
    1d0c:	adrp	x1, 1000 <PyErr_CheckSignals@plt>
    1d10:	add	x1, x1, #0xf0a
    1d14:	ldr	x0, [x8]
    1d18:	bl	f10 <PyErr_SetString@plt>
    1d1c:	mov	x0, xzr
    1d20:	ldp	x20, x19, [sp, #96]
    1d24:	ldp	x22, x21, [sp, #80]
    1d28:	ldp	x24, x23, [sp, #64]
    1d2c:	ldr	x25, [sp, #48]
    1d30:	ldp	x29, x30, [sp, #32]
    1d34:	add	sp, sp, #0x70
    1d38:	ret
    1d3c:	ldr	x0, [x23, #8]
    1d40:	bl	1030 <_PyLong_AsInt@plt>
    1d44:	mov	w20, w0
    1d48:	cmn	w0, #0x1
    1d4c:	b.eq	1d90 <PyInit_fcntl@@Base+0xc6c>  // b.none
    1d50:	cmp	x24, #0x3
    1d54:	b.ge	1d60 <PyInit_fcntl@@Base+0xc3c>  // b.tcont
    1d58:	mov	x21, xzr
    1d5c:	b	1d6c <PyInit_fcntl@@Base+0xc48>
    1d60:	ldr	x21, [x23, #16]
    1d64:	cmp	x24, #0x3
    1d68:	b.ne	1dc0 <PyInit_fcntl@@Base+0xc9c>  // b.any
    1d6c:	mov	x22, xzr
    1d70:	mov	w23, wzr
    1d74:	cmp	w20, #0x8
    1d78:	b.ne	1d9c <PyInit_fcntl@@Base+0xc78>  // b.any
    1d7c:	mov	w8, #0x2                   	// #2
    1d80:	strh	w8, [sp]
    1d84:	stp	xzr, xzr, [sp, #8]
    1d88:	cbnz	x22, 1e24 <PyInit_fcntl@@Base+0xd00>
    1d8c:	b	1e38 <PyInit_fcntl@@Base+0xd14>
    1d90:	bl	f90 <PyErr_Occurred@plt>
    1d94:	cbnz	x0, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1d98:	b	1d50 <PyInit_fcntl@@Base+0xc2c>
    1d9c:	tbnz	w20, #0, 1e04 <PyInit_fcntl@@Base+0xce0>
    1da0:	tbnz	w20, #1, 1e14 <PyInit_fcntl@@Base+0xcf0>
    1da4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1da8:	ldr	x8, [x8, #4024]
    1dac:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1db0:	add	x1, x1, #0x3e
    1db4:	ldr	x0, [x8]
    1db8:	bl	f10 <PyErr_SetString@plt>
    1dbc:	b	1d1c <PyInit_fcntl@@Base+0xbf8>
    1dc0:	ldr	x22, [x23, #24]
    1dc4:	cmp	x24, #0x5
    1dc8:	b.lt	1d70 <PyInit_fcntl@@Base+0xc4c>  // b.tstop
    1dcc:	ldr	x8, [x23, #32]
    1dd0:	ldr	x0, [x8, #8]
    1dd4:	cmp	x0, x25
    1dd8:	b.eq	1d04 <PyInit_fcntl@@Base+0xbe0>  // b.none
    1ddc:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1de0:	ldr	x1, [x1, #4008]
    1de4:	bl	1010 <PyType_IsSubtype@plt>
    1de8:	cbnz	w0, 1d04 <PyInit_fcntl@@Base+0xbe0>
    1dec:	ldr	x0, [x23, #32]
    1df0:	bl	1030 <_PyLong_AsInt@plt>
    1df4:	cmn	w0, #0x1
    1df8:	b.eq	1ed8 <PyInit_fcntl@@Base+0xdb4>  // b.none
    1dfc:	mov	w23, w0
    1e00:	b	1d74 <PyInit_fcntl@@Base+0xc50>
    1e04:	strh	wzr, [sp]
    1e08:	stp	xzr, xzr, [sp, #8]
    1e0c:	cbnz	x22, 1e24 <PyInit_fcntl@@Base+0xd00>
    1e10:	b	1e38 <PyInit_fcntl@@Base+0xd14>
    1e14:	mov	w8, #0x1                   	// #1
    1e18:	strh	w8, [sp]
    1e1c:	stp	xzr, xzr, [sp, #8]
    1e20:	cbz	x22, 1e38 <PyInit_fcntl@@Base+0xd14>
    1e24:	mov	x0, x22
    1e28:	bl	fb0 <PyLong_AsLong@plt>
    1e2c:	str	x0, [sp, #8]
    1e30:	bl	f90 <PyErr_Occurred@plt>
    1e34:	cbnz	x0, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1e38:	cbz	x21, 1e50 <PyInit_fcntl@@Base+0xd2c>
    1e3c:	mov	x0, x21
    1e40:	bl	fb0 <PyLong_AsLong@plt>
    1e44:	str	x0, [sp, #16]
    1e48:	bl	f90 <PyErr_Occurred@plt>
    1e4c:	cbnz	x0, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1e50:	tst	w20, #0x4
    1e54:	mov	w8, #0x6                   	// #6
    1e58:	cinc	w20, w8, eq  // eq = none
    1e5c:	strh	w23, [sp, #2]
    1e60:	bl	fe0 <PyEval_SaveThread@plt>
    1e64:	mov	x22, x0
    1e68:	mov	x2, sp
    1e6c:	mov	w0, w19
    1e70:	mov	w1, w20
    1e74:	bl	fd0 <fcntl64@plt>
    1e78:	mov	w21, w0
    1e7c:	mov	x0, x22
    1e80:	bl	ec0 <PyEval_RestoreThread@plt>
    1e84:	cmn	w21, #0x1
    1e88:	b.ne	1ea8 <PyInit_fcntl@@Base+0xd84>  // b.any
    1e8c:	bl	1020 <__errno_location@plt>
    1e90:	ldr	w8, [x0]
    1e94:	cmp	w8, #0x4
    1e98:	b.ne	1ec4 <PyInit_fcntl@@Base+0xda0>  // b.any
    1e9c:	bl	1000 <PyErr_CheckSignals@plt>
    1ea0:	cbz	w0, 1e60 <PyInit_fcntl@@Base+0xd3c>
    1ea4:	b	1d1c <PyInit_fcntl@@Base+0xbf8>
    1ea8:	tbnz	w21, #31, 1ec4 <PyInit_fcntl@@Base+0xda0>
    1eac:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1eb0:	ldr	x0, [x0, #4056]
    1eb4:	ldr	x8, [x0]
    1eb8:	add	x8, x8, #0x1
    1ebc:	str	x8, [x0]
    1ec0:	b	1d20 <PyInit_fcntl@@Base+0xbfc>
    1ec4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1ec8:	ldr	x8, [x8, #4040]
    1ecc:	ldr	x0, [x8]
    1ed0:	bl	ed0 <PyErr_SetFromErrno@plt>
    1ed4:	b	1d20 <PyInit_fcntl@@Base+0xbfc>
    1ed8:	bl	f90 <PyErr_Occurred@plt>
    1edc:	cbnz	x0, 1d1c <PyInit_fcntl@@Base+0xbf8>
    1ee0:	mov	w23, #0xffffffff            	// #-1
    1ee4:	b	1d74 <PyInit_fcntl@@Base+0xc50>

Disassembly of section .fini:

0000000000001ee8 <.fini>:
    1ee8:	stp	x29, x30, [sp, #-16]!
    1eec:	mov	x29, sp
    1ef0:	ldp	x29, x30, [sp], #16
    1ef4:	ret
