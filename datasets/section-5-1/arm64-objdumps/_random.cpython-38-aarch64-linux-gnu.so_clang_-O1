
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001138 <.init>:
    1138:	stp	x29, x30, [sp, #-16]!
    113c:	mov	x29, sp
    1140:	bl	1380 <_PyTime_GetMonotonicClock@plt+0x10>
    1144:	ldp	x29, x30, [sp], #16
    1148:	ret

Disassembly of section .plt:

0000000000001150 <memcpy@plt-0x20>:
    1150:	stp	x16, x30, [sp, #-16]!
    1154:	adrp	x16, 12000 <PyInit__random@@Base+0x10bac>
    1158:	ldr	x17, [x16, #4088]
    115c:	add	x16, x16, #0xff8
    1160:	br	x17
    1164:	nop
    1168:	nop
    116c:	nop

0000000000001170 <memcpy@plt>:
    1170:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16]
    1178:	add	x16, x16, #0x0
    117c:	br	x17

0000000000001180 <PyMem_Free@plt>:
    1180:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #8]
    1188:	add	x16, x16, #0x8
    118c:	br	x17

0000000000001190 <__cxa_finalize@plt>:
    1190:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #16]
    1198:	add	x16, x16, #0x10
    119c:	br	x17

00000000000011a0 <_PyTime_GetSystemClock@plt>:
    11a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #24]
    11a8:	add	x16, x16, #0x18
    11ac:	br	x17

00000000000011b0 <_Py_Dealloc@plt>:
    11b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #32]
    11b8:	add	x16, x16, #0x20
    11bc:	br	x17

00000000000011c0 <PyErr_NoMemory@plt>:
    11c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #40]
    11c8:	add	x16, x16, #0x28
    11cc:	br	x17

00000000000011d0 <PyLong_FromSize_t@plt>:
    11d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #48]
    11d8:	add	x16, x16, #0x30
    11dc:	br	x17

00000000000011e0 <_PyLong_NumBits@plt>:
    11e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #56]
    11e8:	add	x16, x16, #0x38
    11ec:	br	x17

00000000000011f0 <getpid@plt>:
    11f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11f4:	ldr	x17, [x16, #64]
    11f8:	add	x16, x16, #0x40
    11fc:	br	x17

0000000000001200 <PyErr_SetString@plt>:
    1200:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1204:	ldr	x17, [x16, #72]
    1208:	add	x16, x16, #0x48
    120c:	br	x17

0000000000001210 <_PyLong_FromByteArray@plt>:
    1210:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1214:	ldr	x17, [x16, #80]
    1218:	add	x16, x16, #0x50
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1224:	ldr	x17, [x16, #88]
    1228:	add	x16, x16, #0x58
    122c:	br	x17

0000000000001230 <PyType_Ready@plt>:
    1230:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16, #96]
    1238:	add	x16, x16, #0x60
    123c:	br	x17

0000000000001240 <PyLong_FromLong@plt>:
    1240:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #104]
    1248:	add	x16, x16, #0x68
    124c:	br	x17

0000000000001250 <PyErr_Clear@plt>:
    1250:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #112]
    1258:	add	x16, x16, #0x70
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #120]
    1268:	add	x16, x16, #0x78
    126c:	br	x17

0000000000001270 <PyTuple_New@plt>:
    1270:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #128]
    1278:	add	x16, x16, #0x80
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #136]
    1288:	add	x16, x16, #0x88
    128c:	br	x17

0000000000001290 <PyErr_Occurred@plt>:
    1290:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #144]
    1298:	add	x16, x16, #0x90
    129c:	br	x17

00000000000012a0 <PyModule_Create2@plt>:
    12a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #152]
    12a8:	add	x16, x16, #0x98
    12ac:	br	x17

00000000000012b0 <PyLong_AsLong@plt>:
    12b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #160]
    12b8:	add	x16, x16, #0xa0
    12bc:	br	x17

00000000000012c0 <PyObject_Hash@plt>:
    12c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #168]
    12c8:	add	x16, x16, #0xa8
    12cc:	br	x17

00000000000012d0 <PyLong_AsUnsignedLong@plt>:
    12d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #176]
    12d8:	add	x16, x16, #0xb0
    12dc:	br	x17

00000000000012e0 <PyLong_FromUnsignedLong@plt>:
    12e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #184]
    12e8:	add	x16, x16, #0xb8
    12ec:	br	x17

00000000000012f0 <PyModule_AddObject@plt>:
    12f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #192]
    12f8:	add	x16, x16, #0xc0
    12fc:	br	x17

0000000000001300 <PyType_IsSubtype@plt>:
    1300:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #200]
    1308:	add	x16, x16, #0xc8
    130c:	br	x17

0000000000001310 <_PyLong_AsByteArray@plt>:
    1310:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #208]
    1318:	add	x16, x16, #0xd0
    131c:	br	x17

0000000000001320 <PyTuple_Size@plt>:
    1320:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #216]
    1328:	add	x16, x16, #0xd8
    132c:	br	x17

0000000000001330 <_PyOS_URandomNonblock@plt>:
    1330:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #224]
    1338:	add	x16, x16, #0xe0
    133c:	br	x17

0000000000001340 <_PyArg_NoKeywords@plt>:
    1340:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #232]
    1348:	add	x16, x16, #0xe8
    134c:	br	x17

0000000000001350 <_PyLong_AsInt@plt>:
    1350:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #240]
    1358:	add	x16, x16, #0xf0
    135c:	br	x17

0000000000001360 <PyMem_Malloc@plt>:
    1360:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #248]
    1368:	add	x16, x16, #0xf8
    136c:	br	x17

0000000000001370 <_PyTime_GetMonotonicClock@plt>:
    1370:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #256]
    1378:	add	x16, x16, #0x100
    137c:	br	x17

Disassembly of section .text:

0000000000001380 <PyInit__random@@Base-0xd4>:
    1380:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1384:	ldr	x0, [x0, #4040]
    1388:	cbz	x0, 1390 <_PyTime_GetMonotonicClock@plt+0x20>
    138c:	b	1260 <__gmon_start__@plt>
    1390:	ret
    1394:	nop
    1398:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    139c:	add	x0, x0, #0x3d8
    13a0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13a4:	add	x1, x1, #0x3d8
    13a8:	cmp	x1, x0
    13ac:	b.eq	13c4 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    13b0:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    13b4:	ldr	x1, [x1, #4000]
    13b8:	cbz	x1, 13c4 <_PyTime_GetMonotonicClock@plt+0x54>
    13bc:	mov	x16, x1
    13c0:	br	x16
    13c4:	ret
    13c8:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    13cc:	add	x0, x0, #0x3d8
    13d0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13d4:	add	x1, x1, #0x3d8
    13d8:	sub	x1, x1, x0
    13dc:	lsr	x2, x1, #63
    13e0:	add	x1, x2, x1, asr #3
    13e4:	cmp	xzr, x1, asr #1
    13e8:	asr	x1, x1, #1
    13ec:	b.eq	1404 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13f0:	adrp	x2, 12000 <PyInit__random@@Base+0x10bac>
    13f4:	ldr	x2, [x2, #4064]
    13f8:	cbz	x2, 1404 <_PyTime_GetMonotonicClock@plt+0x94>
    13fc:	mov	x16, x2
    1400:	br	x16
    1404:	ret
    1408:	stp	x29, x30, [sp, #-32]!
    140c:	mov	x29, sp
    1410:	str	x19, [sp, #16]
    1414:	adrp	x19, 13000 <PyInit__random@@Base+0x11bac>
    1418:	ldrb	w0, [x19, #984]
    141c:	cbnz	w0, 1444 <_PyTime_GetMonotonicClock@plt+0xd4>
    1420:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1424:	ldr	x0, [x0, #4016]
    1428:	cbz	x0, 1438 <_PyTime_GetMonotonicClock@plt+0xc8>
    142c:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1430:	ldr	x0, [x0, #264]
    1434:	bl	1190 <__cxa_finalize@plt>
    1438:	bl	1398 <_PyTime_GetMonotonicClock@plt+0x28>
    143c:	mov	w0, #0x1                   	// #1
    1440:	strb	w0, [x19, #984]
    1444:	ldr	x19, [sp, #16]
    1448:	ldp	x29, x30, [sp], #32
    144c:	ret
    1450:	b	13c8 <_PyTime_GetMonotonicClock@plt+0x58>

0000000000001454 <PyInit__random@@Base>:
    1454:	stp	x29, x30, [sp, #-32]!
    1458:	stp	x20, x19, [sp, #16]
    145c:	mov	x29, sp
    1460:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1464:	add	x0, x0, #0x110
    1468:	bl	1230 <PyType_Ready@plt>
    146c:	tbnz	w0, #31, 14b0 <PyInit__random@@Base+0x5c>
    1470:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1474:	add	x0, x0, #0x2b0
    1478:	mov	w1, #0x3f5                 	// #1013
    147c:	bl	12a0 <PyModule_Create2@plt>
    1480:	mov	x19, x0
    1484:	cbz	x0, 14b4 <PyInit__random@@Base+0x60>
    1488:	adrp	x20, 13000 <PyInit__random@@Base+0x11bac>
    148c:	add	x20, x20, #0x110
    1490:	mov	x0, x20
    1494:	bl	14c4 <PyInit__random@@Base+0x70>
    1498:	adrp	x1, 1000 <memcpy@plt-0x170>
    149c:	add	x1, x1, #0xea0
    14a0:	mov	x0, x19
    14a4:	mov	x2, x20
    14a8:	bl	12f0 <PyModule_AddObject@plt>
    14ac:	b	14b4 <PyInit__random@@Base+0x60>
    14b0:	mov	x19, xzr
    14b4:	mov	x0, x19
    14b8:	ldp	x20, x19, [sp, #16]
    14bc:	ldp	x29, x30, [sp], #32
    14c0:	ret
    14c4:	ldr	x8, [x0]
    14c8:	add	x8, x8, #0x1
    14cc:	str	x8, [x0]
    14d0:	ret
    14d4:	stp	x29, x30, [sp, #-32]!
    14d8:	stp	x20, x19, [sp, #16]
    14dc:	mov	x29, sp
    14e0:	adrp	x8, 13000 <PyInit__random@@Base+0x11bac>
    14e4:	add	x8, x8, #0x110
    14e8:	mov	x19, x0
    14ec:	cmp	x0, x8
    14f0:	mov	x20, x1
    14f4:	b.ne	1510 <PyInit__random@@Base+0xbc>  // b.any
    14f8:	cbz	x2, 1510 <PyInit__random@@Base+0xbc>
    14fc:	adrp	x0, 1000 <memcpy@plt-0x170>
    1500:	add	x0, x0, #0xea0
    1504:	mov	x1, x2
    1508:	bl	1340 <_PyArg_NoKeywords@plt>
    150c:	cbz	w0, 1548 <PyInit__random@@Base+0xf4>
    1510:	ldr	x8, [x19, #304]
    1514:	mov	x0, x19
    1518:	mov	x1, xzr
    151c:	blr	x8
    1520:	mov	x19, x0
    1524:	cbz	x0, 154c <PyInit__random@@Base+0xf8>
    1528:	mov	x0, x19
    152c:	mov	x1, x20
    1530:	bl	1924 <PyInit__random@@Base+0x4d0>
    1534:	cbz	x0, 1540 <PyInit__random@@Base+0xec>
    1538:	bl	1cb0 <PyInit__random@@Base+0x85c>
    153c:	b	154c <PyInit__random@@Base+0xf8>
    1540:	mov	x0, x19
    1544:	bl	1cb0 <PyInit__random@@Base+0x85c>
    1548:	mov	x19, xzr
    154c:	mov	x0, x19
    1550:	ldp	x20, x19, [sp, #16]
    1554:	ldp	x29, x30, [sp], #32
    1558:	ret
    155c:	stp	x29, x30, [sp, #-16]!
    1560:	mov	x29, sp
    1564:	bl	17bc <PyInit__random@@Base+0x368>
    1568:	ldp	x29, x30, [sp], #16
    156c:	ret
    1570:	stp	x29, x30, [sp, #-48]!
    1574:	str	x21, [sp, #16]
    1578:	stp	x20, x19, [sp, #32]
    157c:	mov	x29, sp
    1580:	mov	x21, x2
    1584:	mov	x20, x1
    1588:	cmp	x2, #0x2
    158c:	mov	x19, x0
    1590:	b.cc	15b0 <PyInit__random@@Base+0x15c>  // b.lo, b.ul, b.last
    1594:	adrp	x0, 1000 <memcpy@plt-0x170>
    1598:	add	x0, x0, #0xea7
    159c:	mov	w3, #0x1                   	// #1
    15a0:	mov	x1, x21
    15a4:	mov	x2, xzr
    15a8:	bl	1280 <_PyArg_CheckPositional@plt>
    15ac:	cbz	w0, 15d4 <PyInit__random@@Base+0x180>
    15b0:	cmp	x21, #0x1
    15b4:	b.lt	15c0 <PyInit__random@@Base+0x16c>  // b.tstop
    15b8:	ldr	x1, [x20]
    15bc:	b	15c8 <PyInit__random@@Base+0x174>
    15c0:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    15c4:	ldr	x1, [x1, #4048]
    15c8:	mov	x0, x19
    15cc:	bl	1910 <PyInit__random@@Base+0x4bc>
    15d0:	b	15d8 <PyInit__random@@Base+0x184>
    15d4:	mov	x0, xzr
    15d8:	ldp	x20, x19, [sp, #32]
    15dc:	ldr	x21, [sp, #16]
    15e0:	ldp	x29, x30, [sp], #48
    15e4:	ret
    15e8:	stp	x29, x30, [sp, #-16]!
    15ec:	mov	x29, sp
    15f0:	bl	1cdc <PyInit__random@@Base+0x888>
    15f4:	ldp	x29, x30, [sp], #16
    15f8:	ret
    15fc:	stp	x29, x30, [sp, #-64]!
    1600:	stp	x28, x23, [sp, #16]
    1604:	stp	x22, x21, [sp, #32]
    1608:	stp	x20, x19, [sp, #48]
    160c:	mov	x29, sp
    1610:	sub	sp, sp, #0x9c0
    1614:	ldr	x8, [x1, #8]
    1618:	ldrb	w8, [x8, #171]
    161c:	tbnz	w8, #2, 1634 <PyInit__random@@Base+0x1e0>
    1620:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1624:	ldr	x8, [x8, #4032]
    1628:	adrp	x1, 1000 <memcpy@plt-0x170>
    162c:	add	x1, x1, #0xeca
    1630:	b	16cc <PyInit__random@@Base+0x278>
    1634:	mov	x19, x0
    1638:	mov	x0, x1
    163c:	mov	x20, x1
    1640:	bl	1320 <PyTuple_Size@plt>
    1644:	cmp	x0, #0x271
    1648:	b.ne	1690 <PyInit__random@@Base+0x23c>  // b.any
    164c:	ldr	x0, [x20, #24]
    1650:	mov	x22, xzr
    1654:	add	x21, x20, #0x20
    1658:	mov	x23, sp
    165c:	b	1674 <PyInit__random@@Base+0x220>
    1660:	str	w20, [x23, x22, lsl #2]
    1664:	ldr	x0, [x21, x22, lsl #3]
    1668:	add	x22, x22, #0x1
    166c:	cmp	x22, #0x270
    1670:	b.eq	16a4 <PyInit__random@@Base+0x250>  // b.none
    1674:	bl	12d0 <PyLong_AsUnsignedLong@plt>
    1678:	mov	x20, x0
    167c:	cmn	x0, #0x1
    1680:	b.ne	1660 <PyInit__random@@Base+0x20c>  // b.any
    1684:	bl	1290 <PyErr_Occurred@plt>
    1688:	cbz	x0, 1660 <PyInit__random@@Base+0x20c>
    168c:	b	16d4 <PyInit__random@@Base+0x280>
    1690:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1694:	ldr	x8, [x8, #4024]
    1698:	adrp	x1, 1000 <memcpy@plt-0x170>
    169c:	add	x1, x1, #0xee7
    16a0:	b	16cc <PyInit__random@@Base+0x278>
    16a4:	bl	12b0 <PyLong_AsLong@plt>
    16a8:	mov	x20, x0
    16ac:	cmn	x0, #0x1
    16b0:	b.eq	171c <PyInit__random@@Base+0x2c8>  // b.none
    16b4:	cmp	x20, #0x271
    16b8:	b.cc	16f4 <PyInit__random@@Base+0x2a0>  // b.lo, b.ul, b.last
    16bc:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    16c0:	ldr	x8, [x8, #4024]
    16c4:	adrp	x1, 1000 <memcpy@plt-0x170>
    16c8:	add	x1, x1, #0xf06
    16cc:	ldr	x0, [x8]
    16d0:	bl	1200 <PyErr_SetString@plt>
    16d4:	mov	x19, xzr
    16d8:	mov	x0, x19
    16dc:	add	sp, sp, #0x9c0
    16e0:	ldp	x20, x19, [sp, #48]
    16e4:	ldp	x22, x21, [sp, #32]
    16e8:	ldp	x28, x23, [sp, #16]
    16ec:	ldp	x29, x30, [sp], #64
    16f0:	ret
    16f4:	add	x0, x19, #0x14
    16f8:	mov	x1, sp
    16fc:	mov	w2, #0x9c0                 	// #2496
    1700:	str	w20, [x19, #16]
    1704:	bl	1170 <memcpy@plt>
    1708:	adrp	x19, 12000 <PyInit__random@@Base+0x10bac>
    170c:	ldr	x19, [x19, #4048]
    1710:	mov	x0, x19
    1714:	bl	14c4 <PyInit__random@@Base+0x70>
    1718:	b	16d8 <PyInit__random@@Base+0x284>
    171c:	bl	1290 <PyErr_Occurred@plt>
    1720:	cbnz	x0, 16d4 <PyInit__random@@Base+0x280>
    1724:	b	16b4 <PyInit__random@@Base+0x260>
    1728:	stp	x29, x30, [sp, #-32]!
    172c:	stp	x20, x19, [sp, #16]
    1730:	mov	x29, sp
    1734:	adrp	x9, 12000 <PyInit__random@@Base+0x10bac>
    1738:	ldr	x8, [x1, #8]
    173c:	ldr	x9, [x9, #4008]
    1740:	cmp	x8, x9
    1744:	b.eq	1764 <PyInit__random@@Base+0x310>  // b.none
    1748:	mov	x20, x1
    174c:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    1750:	ldr	x1, [x1, #4008]
    1754:	mov	x19, x0
    1758:	mov	x0, x8
    175c:	bl	1300 <PyType_IsSubtype@plt>
    1760:	cbz	w0, 178c <PyInit__random@@Base+0x338>
    1764:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1768:	ldr	x8, [x8, #4032]
    176c:	adrp	x1, 1000 <memcpy@plt-0x170>
    1770:	add	x1, x1, #0xf14
    1774:	ldr	x0, [x8]
    1778:	bl	1200 <PyErr_SetString@plt>
    177c:	mov	x0, xzr
    1780:	ldp	x20, x19, [sp, #16]
    1784:	ldp	x29, x30, [sp], #32
    1788:	ret
    178c:	mov	x0, x20
    1790:	bl	1350 <_PyLong_AsInt@plt>
    1794:	mov	w20, w0
    1798:	cmn	w0, #0x1
    179c:	b.eq	17b0 <PyInit__random@@Base+0x35c>  // b.none
    17a0:	mov	x0, x19
    17a4:	mov	w1, w20
    17a8:	bl	1d5c <PyInit__random@@Base+0x908>
    17ac:	b	1780 <PyInit__random@@Base+0x32c>
    17b0:	bl	1290 <PyErr_Occurred@plt>
    17b4:	cbnz	x0, 177c <PyInit__random@@Base+0x328>
    17b8:	b	17a0 <PyInit__random@@Base+0x34c>
    17bc:	stp	x29, x30, [sp, #-32]!
    17c0:	stp	x20, x19, [sp, #16]
    17c4:	mov	x29, sp
    17c8:	mov	x19, x0
    17cc:	bl	1814 <PyInit__random@@Base+0x3c0>
    17d0:	lsr	w20, w0, #5
    17d4:	mov	x0, x19
    17d8:	bl	1814 <PyInit__random@@Base+0x3c0>
    17dc:	mov	x9, #0x4190000000000000    	// #4724276009111650304
    17e0:	lsr	w8, w0, #6
    17e4:	ucvtf	d0, w20
    17e8:	fmov	d1, x9
    17ec:	fmul	d0, d0, d1
    17f0:	ucvtf	d1, w8
    17f4:	mov	x8, #0x3ca0000000000000    	// #4368491638549381120
    17f8:	fadd	d0, d0, d1
    17fc:	fmov	d1, x8
    1800:	fmul	d0, d0, d1
    1804:	bl	1220 <PyFloat_FromDouble@plt>
    1808:	ldp	x20, x19, [sp, #16]
    180c:	ldp	x29, x30, [sp], #32
    1810:	ret
    1814:	ldr	w8, [x0, #16]
    1818:	cmp	w8, #0x270
    181c:	b.lt	18d4 <PyInit__random@@Base+0x480>  // b.tstop
    1820:	adrp	x8, 2000 <PyInit__random@@Base+0xbac>
    1824:	mov	x9, xzr
    1828:	add	x8, x8, #0x1bc
    182c:	add	x10, x0, x9
    1830:	ldp	w12, w11, [x10, #20]
    1834:	ldr	w13, [x10, #1608]
    1838:	add	x9, x9, #0x4
    183c:	cmp	x9, #0x38c
    1840:	and	x14, x11, #0x1
    1844:	ldr	w14, [x8, x14, lsl #2]
    1848:	and	w12, w12, #0x80000000
    184c:	and	w11, w11, #0x7ffffffe
    1850:	orr	w11, w11, w12
    1854:	eor	w12, w14, w13
    1858:	eor	w11, w12, w11, lsr #1
    185c:	str	w11, [x10, #20]
    1860:	b.ne	182c <PyInit__random@@Base+0x3d8>  // b.any
    1864:	mov	x9, xzr
    1868:	add	x10, x0, x9
    186c:	ldr	w11, [x10, #932]
    1870:	ldr	w12, [x10, #928]
    1874:	ldr	w13, [x10, #20]
    1878:	add	x9, x9, #0x4
    187c:	and	x14, x11, #0x1
    1880:	ldr	w14, [x8, x14, lsl #2]
    1884:	and	w12, w12, #0x80000000
    1888:	and	w11, w11, #0x7ffffffe
    188c:	orr	w11, w11, w12
    1890:	eor	w12, w14, w13
    1894:	eor	w11, w12, w11, lsr #1
    1898:	cmp	x9, #0x630
    189c:	str	w11, [x10, #928]
    18a0:	b.ne	1868 <PyInit__random@@Base+0x414>  // b.any
    18a4:	ldr	w9, [x0, #20]
    18a8:	ldr	w10, [x0, #2512]
    18ac:	ldr	w11, [x0, #1604]
    18b0:	str	wzr, [x0, #16]
    18b4:	and	x12, x9, #0x1
    18b8:	ldr	w8, [x8, x12, lsl #2]
    18bc:	and	w10, w10, #0x80000000
    18c0:	and	w9, w9, #0x7ffffffe
    18c4:	orr	w9, w9, w10
    18c8:	eor	w8, w8, w11
    18cc:	eor	w8, w8, w9, lsr #1
    18d0:	str	w8, [x0, #2512]
    18d4:	ldrsw	x8, [x0, #16]
    18d8:	add	w9, w8, #0x1
    18dc:	add	x8, x0, x8, lsl #2
    18e0:	str	w9, [x0, #16]
    18e4:	ldr	w8, [x8, #20]
    18e8:	mov	w9, #0x5680                	// #22144
    18ec:	movk	w9, #0x9d2c, lsl #16
    18f0:	eor	w8, w8, w8, lsr #11
    18f4:	and	w9, w9, w8, lsl #7
    18f8:	eor	w8, w9, w8
    18fc:	mov	w9, #0xefc60000            	// #-272236544
    1900:	and	w9, w9, w8, lsl #15
    1904:	eor	w8, w9, w8
    1908:	eor	w0, w8, w8, lsr #18
    190c:	ret
    1910:	stp	x29, x30, [sp, #-16]!
    1914:	mov	x29, sp
    1918:	bl	1924 <PyInit__random@@Base+0x4d0>
    191c:	ldp	x29, x30, [sp], #16
    1920:	ret
    1924:	stp	x29, x30, [sp, #-64]!
    1928:	str	x23, [sp, #16]
    192c:	stp	x22, x21, [sp, #32]
    1930:	stp	x20, x19, [sp, #48]
    1934:	mov	x29, sp
    1938:	mov	x19, x0
    193c:	cbz	x1, 1980 <PyInit__random@@Base+0x52c>
    1940:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1944:	ldr	x8, [x8, #4048]
    1948:	cmp	x1, x8
    194c:	b.eq	1980 <PyInit__random@@Base+0x52c>  // b.none
    1950:	ldr	x8, [x1, #8]
    1954:	ldrb	w8, [x8, #171]
    1958:	tbnz	w8, #0, 19ac <PyInit__random@@Base+0x558>
    195c:	mov	x0, x1
    1960:	bl	12c0 <PyObject_Hash@plt>
    1964:	cmn	x0, #0x1
    1968:	b.eq	19d0 <PyInit__random@@Base+0x57c>  // b.none
    196c:	bl	11d0 <PyLong_FromSize_t@plt>
    1970:	mov	x20, x0
    1974:	mov	w8, #0x1                   	// #1
    1978:	cbz	w8, 1a00 <PyInit__random@@Base+0x5ac>
    197c:	b	19dc <PyInit__random@@Base+0x588>
    1980:	mov	x0, x19
    1984:	bl	1aa8 <PyInit__random@@Base+0x654>
    1988:	tbz	w0, #31, 1998 <PyInit__random@@Base+0x544>
    198c:	bl	1250 <PyErr_Clear@plt>
    1990:	mov	x0, x19
    1994:	bl	1af8 <PyInit__random@@Base+0x6a4>
    1998:	adrp	x19, 12000 <PyInit__random@@Base+0x10bac>
    199c:	ldr	x19, [x19, #4048]
    19a0:	mov	x0, x19
    19a4:	bl	14c4 <PyInit__random@@Base+0x70>
    19a8:	b	1a18 <PyInit__random@@Base+0x5c4>
    19ac:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    19b0:	ldr	x8, [x8, #4056]
    19b4:	mov	x0, x1
    19b8:	ldr	x8, [x8, #96]
    19bc:	ldr	x8, [x8, #64]
    19c0:	blr	x8
    19c4:	mov	x20, x0
    19c8:	cbnz	x20, 19e0 <PyInit__random@@Base+0x58c>
    19cc:	b	1a00 <PyInit__random@@Base+0x5ac>
    19d0:	mov	x20, xzr
    19d4:	mov	w8, wzr
    19d8:	cbz	w8, 1a00 <PyInit__random@@Base+0x5ac>
    19dc:	cbz	x20, 1a00 <PyInit__random@@Base+0x5ac>
    19e0:	mov	x0, x20
    19e4:	bl	11e0 <_PyLong_NumBits@plt>
    19e8:	cbz	x0, 1a44 <PyInit__random@@Base+0x5f0>
    19ec:	mov	x21, x0
    19f0:	cmn	x0, #0x1
    19f4:	b.ne	1a34 <PyInit__random@@Base+0x5e0>  // b.any
    19f8:	bl	1290 <PyErr_Occurred@plt>
    19fc:	cbz	x0, 1a30 <PyInit__random@@Base+0x5dc>
    1a00:	mov	x21, xzr
    1a04:	mov	x19, xzr
    1a08:	mov	x0, x20
    1a0c:	bl	1c48 <PyInit__random@@Base+0x7f4>
    1a10:	mov	x0, x21
    1a14:	bl	1180 <PyMem_Free@plt>
    1a18:	mov	x0, x19
    1a1c:	ldp	x20, x19, [sp, #48]
    1a20:	ldp	x22, x21, [sp, #32]
    1a24:	ldr	x23, [sp, #16]
    1a28:	ldp	x29, x30, [sp], #64
    1a2c:	ret
    1a30:	cbz	x21, 1a44 <PyInit__random@@Base+0x5f0>
    1a34:	sub	x8, x21, #0x1
    1a38:	lsr	x8, x8, #5
    1a3c:	add	x22, x8, #0x1
    1a40:	b	1a48 <PyInit__random@@Base+0x5f4>
    1a44:	mov	w22, #0x1                   	// #1
    1a48:	lsl	x23, x22, #2
    1a4c:	mov	x0, x23
    1a50:	bl	1360 <PyMem_Malloc@plt>
    1a54:	mov	x21, x0
    1a58:	cbz	x0, 1aa0 <PyInit__random@@Base+0x64c>
    1a5c:	mov	w3, #0x1                   	// #1
    1a60:	mov	x0, x20
    1a64:	mov	x1, x21
    1a68:	mov	x2, x23
    1a6c:	mov	w4, wzr
    1a70:	bl	1310 <_PyLong_AsByteArray@plt>
    1a74:	cmn	w0, #0x1
    1a78:	b.eq	1a04 <PyInit__random@@Base+0x5b0>  // b.none
    1a7c:	mov	x0, x19
    1a80:	mov	x1, x21
    1a84:	mov	x2, x22
    1a88:	bl	1b4c <PyInit__random@@Base+0x6f8>
    1a8c:	adrp	x19, 12000 <PyInit__random@@Base+0x10bac>
    1a90:	ldr	x19, [x19, #4048]
    1a94:	mov	x0, x19
    1a98:	bl	14c4 <PyInit__random@@Base+0x70>
    1a9c:	b	1a08 <PyInit__random@@Base+0x5b4>
    1aa0:	bl	11c0 <PyErr_NoMemory@plt>
    1aa4:	b	1a04 <PyInit__random@@Base+0x5b0>
    1aa8:	stp	x29, x30, [sp, #-32]!
    1aac:	stp	x28, x19, [sp, #16]
    1ab0:	mov	x29, sp
    1ab4:	sub	sp, sp, #0x9c0
    1ab8:	mov	x19, x0
    1abc:	mov	x0, sp
    1ac0:	mov	w1, #0x9c0                 	// #2496
    1ac4:	bl	1330 <_PyOS_URandomNonblock@plt>
    1ac8:	tbnz	w0, #31, 1ae4 <PyInit__random@@Base+0x690>
    1acc:	mov	x1, sp
    1ad0:	mov	w2, #0x270                 	// #624
    1ad4:	mov	x0, x19
    1ad8:	bl	1b4c <PyInit__random@@Base+0x6f8>
    1adc:	mov	w0, wzr
    1ae0:	b	1ae8 <PyInit__random@@Base+0x694>
    1ae4:	mov	w0, #0xffffffff            	// #-1
    1ae8:	add	sp, sp, #0x9c0
    1aec:	ldp	x28, x19, [sp, #16]
    1af0:	ldp	x29, x30, [sp], #32
    1af4:	ret
    1af8:	sub	sp, sp, #0x40
    1afc:	stp	x29, x30, [sp, #32]
    1b00:	str	x19, [sp, #48]
    1b04:	add	x29, sp, #0x20
    1b08:	mov	x19, x0
    1b0c:	bl	11a0 <_PyTime_GetSystemClock@plt>
    1b10:	lsr	x8, x0, #32
    1b14:	stp	w0, w8, [sp, #12]
    1b18:	bl	11f0 <getpid@plt>
    1b1c:	str	w0, [sp, #20]
    1b20:	bl	1370 <_PyTime_GetMonotonicClock@plt>
    1b24:	lsr	x8, x0, #32
    1b28:	stp	w0, w8, [sp, #24]
    1b2c:	add	x1, sp, #0xc
    1b30:	mov	w2, #0x5                   	// #5
    1b34:	mov	x0, x19
    1b38:	bl	1b4c <PyInit__random@@Base+0x6f8>
    1b3c:	ldr	x19, [sp, #48]
    1b40:	ldp	x29, x30, [sp, #32]
    1b44:	add	sp, sp, #0x40
    1b48:	ret
    1b4c:	stp	x29, x30, [sp, #-48]!
    1b50:	str	x21, [sp, #16]
    1b54:	stp	x20, x19, [sp, #32]
    1b58:	mov	x29, sp
    1b5c:	mov	x20, x2
    1b60:	mov	x21, x1
    1b64:	mov	x19, x0
    1b68:	bl	1c60 <PyInit__random@@Base+0x80c>
    1b6c:	cmp	x20, #0x270
    1b70:	mov	w9, #0x270                 	// #624
    1b74:	mov	w10, #0x660d                	// #26125
    1b78:	mov	x11, xzr
    1b7c:	mov	w8, #0x1                   	// #1
    1b80:	csel	x9, x20, x9, hi  // hi = pmore
    1b84:	movk	w10, #0x19, lsl #16
    1b88:	b	1b9c <PyInit__random@@Base+0x748>
    1b8c:	cmp	x11, x20
    1b90:	csel	x11, x11, xzr, cc  // cc = lo, ul, last
    1b94:	subs	x9, x9, #0x1
    1b98:	b.eq	1be0 <PyInit__random@@Base+0x78c>  // b.none
    1b9c:	add	x12, x19, x8, lsl #2
    1ba0:	ldp	w15, w14, [x12, #16]
    1ba4:	ldr	w13, [x21, x11, lsl #2]
    1ba8:	add	x8, x8, #0x1
    1bac:	cmp	x8, #0x270
    1bb0:	eor	w15, w15, w15, lsr #30
    1bb4:	mul	w15, w15, w10
    1bb8:	add	w13, w13, w11
    1bbc:	eor	w14, w15, w14
    1bc0:	add	w13, w13, w14
    1bc4:	add	x11, x11, #0x1
    1bc8:	str	w13, [x12, #20]
    1bcc:	b.cc	1b8c <PyInit__random@@Base+0x738>  // b.lo, b.ul, b.last
    1bd0:	ldr	w8, [x19, #2512]
    1bd4:	str	w8, [x19, #20]
    1bd8:	mov	w8, #0x1                   	// #1
    1bdc:	b	1b8c <PyInit__random@@Base+0x738>
    1be0:	mov	w10, #0x8b65                	// #35685
    1be4:	mov	x9, #0xfffffffffffffd91    	// #-623
    1be8:	movk	w10, #0x5d58, lsl #16
    1bec:	b	1bf8 <PyInit__random@@Base+0x7a4>
    1bf0:	adds	x9, x9, #0x1
    1bf4:	b.cs	1c30 <PyInit__random@@Base+0x7dc>  // b.hs, b.nlast
    1bf8:	add	x11, x19, x8, lsl #2
    1bfc:	ldp	w12, w13, [x11, #16]
    1c00:	eor	w12, w12, w12, lsr #30
    1c04:	mul	w12, w12, w10
    1c08:	eor	w12, w12, w13
    1c0c:	sub	w12, w12, w8
    1c10:	add	x8, x8, #0x1
    1c14:	cmp	x8, #0x270
    1c18:	str	w12, [x11, #20]
    1c1c:	b.cc	1bf0 <PyInit__random@@Base+0x79c>  // b.lo, b.ul, b.last
    1c20:	ldr	w8, [x19, #2512]
    1c24:	str	w8, [x19, #20]
    1c28:	mov	w8, #0x1                   	// #1
    1c2c:	b	1bf0 <PyInit__random@@Base+0x79c>
    1c30:	mov	w8, #0x80000000            	// #-2147483648
    1c34:	str	w8, [x19, #20]
    1c38:	ldp	x20, x19, [sp, #32]
    1c3c:	ldr	x21, [sp, #16]
    1c40:	ldp	x29, x30, [sp], #48
    1c44:	ret
    1c48:	cbz	x0, 1c5c <PyInit__random@@Base+0x808>
    1c4c:	stp	x29, x30, [sp, #-16]!
    1c50:	mov	x29, sp
    1c54:	bl	1cb0 <PyInit__random@@Base+0x85c>
    1c58:	ldp	x29, x30, [sp], #16
    1c5c:	ret
    1c60:	mov	w8, #0xd6aa                	// #54954
    1c64:	mov	w11, #0x8965                	// #35173
    1c68:	movk	w8, #0x12b, lsl #16
    1c6c:	mov	w9, #0x1                   	// #1
    1c70:	mov	w10, #0x6                   	// #6
    1c74:	movk	w11, #0x6c07, lsl #16
    1c78:	str	w8, [x0, #20]
    1c7c:	eor	w8, w8, w8, lsr #30
    1c80:	mul	w12, w8, w11
    1c84:	add	w8, w12, w9
    1c88:	add	w12, w10, w12
    1c8c:	sub	w12, w12, #0x5
    1c90:	str	w12, [x0, x10, lsl #2]
    1c94:	add	x10, x10, #0x1
    1c98:	cmp	x10, #0x275
    1c9c:	add	x9, x9, #0x1
    1ca0:	b.ne	1c7c <PyInit__random@@Base+0x828>  // b.any
    1ca4:	mov	w8, #0x270                 	// #624
    1ca8:	str	w8, [x0, #16]
    1cac:	ret
    1cb0:	stp	x29, x30, [sp, #-16]!
    1cb4:	mov	x29, sp
    1cb8:	ldr	x8, [x0]
    1cbc:	subs	x8, x8, #0x1
    1cc0:	str	x8, [x0]
    1cc4:	b.eq	1cd0 <PyInit__random@@Base+0x87c>  // b.none
    1cc8:	ldp	x29, x30, [sp], #16
    1ccc:	ret
    1cd0:	bl	11b0 <_Py_Dealloc@plt>
    1cd4:	ldp	x29, x30, [sp], #16
    1cd8:	ret
    1cdc:	stp	x29, x30, [sp, #-48]!
    1ce0:	stp	x22, x21, [sp, #16]
    1ce4:	stp	x20, x19, [sp, #32]
    1ce8:	mov	x29, sp
    1cec:	mov	x20, x0
    1cf0:	mov	w0, #0x271                 	// #625
    1cf4:	bl	1270 <PyTuple_New@plt>
    1cf8:	mov	x19, x0
    1cfc:	cbz	x0, 1d48 <PyInit__random@@Base+0x8f4>
    1d00:	mov	x21, xzr
    1d04:	add	x22, x20, #0x14
    1d08:	ldr	w0, [x22, x21, lsl #2]
    1d0c:	bl	12e0 <PyLong_FromUnsignedLong@plt>
    1d10:	cbz	x0, 1d3c <PyInit__random@@Base+0x8e8>
    1d14:	add	x8, x19, x21, lsl #3
    1d18:	add	x21, x21, #0x1
    1d1c:	cmp	x21, #0x270
    1d20:	str	x0, [x8, #24]
    1d24:	b.ne	1d08 <PyInit__random@@Base+0x8b4>  // b.any
    1d28:	ldrsw	x0, [x20, #16]
    1d2c:	bl	1240 <PyLong_FromLong@plt>
    1d30:	cbz	x0, 1d3c <PyInit__random@@Base+0x8e8>
    1d34:	str	x0, [x19, #5016]
    1d38:	b	1d48 <PyInit__random@@Base+0x8f4>
    1d3c:	mov	x0, x19
    1d40:	bl	1cb0 <PyInit__random@@Base+0x85c>
    1d44:	mov	x19, xzr
    1d48:	mov	x0, x19
    1d4c:	ldp	x20, x19, [sp, #32]
    1d50:	ldp	x22, x21, [sp, #16]
    1d54:	ldp	x29, x30, [sp], #48
    1d58:	ret
    1d5c:	stp	x29, x30, [sp, #-96]!
    1d60:	str	x27, [sp, #16]
    1d64:	stp	x26, x25, [sp, #32]
    1d68:	stp	x24, x23, [sp, #48]
    1d6c:	stp	x22, x21, [sp, #64]
    1d70:	stp	x20, x19, [sp, #80]
    1d74:	mov	x29, sp
    1d78:	cmp	w1, #0x0
    1d7c:	b.le	1dac <PyInit__random@@Base+0x958>
    1d80:	mov	w22, w1
    1d84:	mov	x19, x0
    1d88:	cmp	w1, #0x20
    1d8c:	b.gt	1dc8 <PyInit__random@@Base+0x974>
    1d90:	mov	x0, x19
    1d94:	bl	1814 <PyInit__random@@Base+0x3c0>
    1d98:	neg	w8, w22
    1d9c:	lsr	w0, w0, w8
    1da0:	bl	12e0 <PyLong_FromUnsignedLong@plt>
    1da4:	mov	x19, x0
    1da8:	b	1e68 <PyInit__random@@Base+0xa14>
    1dac:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1db0:	ldr	x8, [x8, #4024]
    1db4:	adrp	x1, 1000 <memcpy@plt-0x170>
    1db8:	add	x1, x1, #0xf39
    1dbc:	ldr	x0, [x8]
    1dc0:	bl	1200 <PyErr_SetString@plt>
    1dc4:	b	1e64 <PyInit__random@@Base+0xa10>
    1dc8:	sub	w23, w22, #0x1
    1dcc:	add	w8, w22, #0x1e
    1dd0:	cmp	w23, #0x0
    1dd4:	csel	w8, w8, w23, lt  // lt = tstop
    1dd8:	asr	w24, w8, #5
    1ddc:	lsl	w8, w24, #2
    1de0:	add	w8, w8, #0x4
    1de4:	sxtw	x21, w8
    1de8:	mov	x0, x21
    1dec:	bl	1360 <PyMem_Malloc@plt>
    1df0:	cbz	x0, 1e60 <PyInit__random@@Base+0xa0c>
    1df4:	mov	x20, x0
    1df8:	cmn	w23, #0x1f
    1dfc:	b.lt	1e3c <PyInit__random@@Base+0x9e8>  // b.tstop
    1e00:	add	w23, w24, #0x1
    1e04:	neg	w24, w22
    1e08:	mov	w25, #0x20                  	// #32
    1e0c:	mov	x26, x20
    1e10:	subs	w27, w22, #0x20
    1e14:	csel	w8, w22, w25, gt
    1e18:	mov	x0, x19
    1e1c:	add	w22, w8, w24
    1e20:	bl	1814 <PyInit__random@@Base+0x3c0>
    1e24:	lsr	w8, w0, w22
    1e28:	subs	x23, x23, #0x1
    1e2c:	str	w8, [x26], #4
    1e30:	add	w24, w24, #0x20
    1e34:	mov	w22, w27
    1e38:	b.ne	1e10 <PyInit__random@@Base+0x9bc>  // b.any
    1e3c:	mov	w2, #0x1                   	// #1
    1e40:	mov	x0, x20
    1e44:	mov	x1, x21
    1e48:	mov	w3, wzr
    1e4c:	bl	1210 <_PyLong_FromByteArray@plt>
    1e50:	mov	x19, x0
    1e54:	mov	x0, x20
    1e58:	bl	1180 <PyMem_Free@plt>
    1e5c:	b	1e68 <PyInit__random@@Base+0xa14>
    1e60:	bl	11c0 <PyErr_NoMemory@plt>
    1e64:	mov	x19, xzr
    1e68:	mov	x0, x19
    1e6c:	ldp	x20, x19, [sp, #80]
    1e70:	ldp	x22, x21, [sp, #64]
    1e74:	ldp	x24, x23, [sp, #48]
    1e78:	ldp	x26, x25, [sp, #32]
    1e7c:	ldr	x27, [sp, #16]
    1e80:	ldp	x29, x30, [sp], #96
    1e84:	ret

Disassembly of section .fini:

0000000000001e88 <.fini>:
    1e88:	stp	x29, x30, [sp, #-16]!
    1e8c:	mov	x29, sp
    1e90:	ldp	x29, x30, [sp], #16
    1e94:	ret
