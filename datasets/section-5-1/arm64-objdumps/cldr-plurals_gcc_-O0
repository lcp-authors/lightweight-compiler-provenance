
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cldr-plurals_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004012e0 <_init>:
  4012e0:	stp	x29, x30, [sp, #-16]!
  4012e4:	mov	x29, sp
  4012e8:	bl	4016b0 <call_weak_fn>
  4012ec:	ldp	x29, x30, [sp], #16
  4012f0:	ret

Disassembly of section .plt:

0000000000401300 <.plt>:
  401300:	stp	x16, x30, [sp, #-16]!
  401304:	adrp	x16, 416000 <__FRAME_END__+0xf7a4>
  401308:	ldr	x17, [x16, #4088]
  40130c:	add	x16, x16, #0xff8
  401310:	br	x17
  401314:	nop
  401318:	nop
  40131c:	nop

0000000000401320 <memcpy@plt>:
  401320:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401324:	ldr	x17, [x16]
  401328:	add	x16, x16, #0x0
  40132c:	br	x17

0000000000401330 <strlen@plt>:
  401330:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401334:	ldr	x17, [x16, #8]
  401338:	add	x16, x16, #0x8
  40133c:	br	x17

0000000000401340 <exit@plt>:
  401340:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401344:	ldr	x17, [x16, #16]
  401348:	add	x16, x16, #0x10
  40134c:	br	x17

0000000000401350 <error@plt>:
  401350:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401354:	ldr	x17, [x16, #24]
  401358:	add	x16, x16, #0x18
  40135c:	br	x17

0000000000401360 <set_program_name@plt>:
  401360:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401364:	ldr	x17, [x16, #32]
  401368:	add	x16, x16, #0x20
  40136c:	br	x17

0000000000401370 <xmlHasProp@plt>:
  401370:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401374:	ldr	x17, [x16, #40]
  401378:	add	x16, x16, #0x28
  40137c:	br	x17

0000000000401380 <sprintf@plt>:
  401380:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401384:	ldr	x17, [x16, #48]
  401388:	add	x16, x16, #0x30
  40138c:	br	x17

0000000000401390 <xmlFreeDoc@plt>:
  401390:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401394:	ldr	x17, [x16, #56]
  401398:	add	x16, x16, #0x38
  40139c:	br	x17

00000000004013a0 <__cxa_atexit@plt>:
  4013a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013a4:	ldr	x17, [x16, #64]
  4013a8:	add	x16, x16, #0x40
  4013ac:	br	x17

00000000004013b0 <fputc@plt>:
  4013b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013b4:	ldr	x17, [x16, #72]
  4013b8:	add	x16, x16, #0x48
  4013bc:	br	x17

00000000004013c0 <fileno@plt>:
  4013c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013c4:	ldr	x17, [x16, #80]
  4013c8:	add	x16, x16, #0x50
  4013cc:	br	x17

00000000004013d0 <fclose@plt>:
  4013d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013d4:	ldr	x17, [x16, #88]
  4013d8:	add	x16, x16, #0x58
  4013dc:	br	x17

00000000004013e0 <fopen@plt>:
  4013e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013e4:	ldr	x17, [x16, #96]
  4013e8:	add	x16, x16, #0x60
  4013ec:	br	x17

00000000004013f0 <malloc@plt>:
  4013f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4013f4:	ldr	x17, [x16, #104]
  4013f8:	add	x16, x16, #0x68
  4013fc:	br	x17

0000000000401400 <xrealloc@plt>:
  401400:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401404:	ldr	x17, [x16, #112]
  401408:	add	x16, x16, #0x70
  40140c:	br	x17

0000000000401410 <xmlGetProp@plt>:
  401410:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401414:	ldr	x17, [x16, #120]
  401418:	add	x16, x16, #0x78
  40141c:	br	x17

0000000000401420 <xmlCheckVersion@plt>:
  401420:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401424:	ldr	x17, [x16, #128]
  401428:	add	x16, x16, #0x80
  40142c:	br	x17

0000000000401430 <strncmp@plt>:
  401430:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401434:	ldr	x17, [x16, #136]
  401438:	add	x16, x16, #0x88
  40143c:	br	x17

0000000000401440 <bindtextdomain@plt>:
  401440:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401444:	ldr	x17, [x16, #144]
  401448:	add	x16, x16, #0x90
  40144c:	br	x17

0000000000401450 <__libc_start_main@plt>:
  401450:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401454:	ldr	x17, [x16, #152]
  401458:	add	x16, x16, #0x98
  40145c:	br	x17

0000000000401460 <memset@plt>:
  401460:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401464:	ldr	x17, [x16, #160]
  401468:	add	x16, x16, #0xa0
  40146c:	br	x17

0000000000401470 <xmalloc@plt>:
  401470:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401474:	ldr	x17, [x16, #168]
  401478:	add	x16, x16, #0xa8
  40147c:	br	x17

0000000000401480 <xstrdup@plt>:
  401480:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401484:	ldr	x17, [x16, #176]
  401488:	add	x16, x16, #0xb0
  40148c:	br	x17

0000000000401490 <xmlStrlen@plt>:
  401490:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401494:	ldr	x17, [x16, #184]
  401498:	add	x16, x16, #0xb8
  40149c:	br	x17

00000000004014a0 <close_stdout@plt>:
  4014a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014a4:	ldr	x17, [x16, #192]
  4014a8:	add	x16, x16, #0xc0
  4014ac:	br	x17

00000000004014b0 <xmlNodeGetContent@plt>:
  4014b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014b4:	ldr	x17, [x16, #200]
  4014b8:	add	x16, x16, #0xc8
  4014bc:	br	x17

00000000004014c0 <xmlReadFd@plt>:
  4014c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014c4:	ldr	x17, [x16, #208]
  4014c8:	add	x16, x16, #0xd0
  4014cc:	br	x17

00000000004014d0 <strrchr@plt>:
  4014d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014d4:	ldr	x17, [x16, #216]
  4014d8:	add	x16, x16, #0xd8
  4014dc:	br	x17

00000000004014e0 <__gmon_start__@plt>:
  4014e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014e4:	ldr	x17, [x16, #224]
  4014e8:	add	x16, x16, #0xe0
  4014ec:	br	x17

00000000004014f0 <abort@plt>:
  4014f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4014f4:	ldr	x17, [x16, #232]
  4014f8:	add	x16, x16, #0xe8
  4014fc:	br	x17

0000000000401500 <puts@plt>:
  401500:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401504:	ldr	x17, [x16, #240]
  401508:	add	x16, x16, #0xf0
  40150c:	br	x17

0000000000401510 <textdomain@plt>:
  401510:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401514:	ldr	x17, [x16, #248]
  401518:	add	x16, x16, #0xf8
  40151c:	br	x17

0000000000401520 <getopt_long@plt>:
  401520:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401524:	ldr	x17, [x16, #256]
  401528:	add	x16, x16, #0x100
  40152c:	br	x17

0000000000401530 <strcmp@plt>:
  401530:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401534:	ldr	x17, [x16, #264]
  401538:	add	x16, x16, #0x108
  40153c:	br	x17

0000000000401540 <basename@plt>:
  401540:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401544:	ldr	x17, [x16, #272]
  401548:	add	x16, x16, #0x110
  40154c:	br	x17

0000000000401550 <getline@plt>:
  401550:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401554:	ldr	x17, [x16, #280]
  401558:	add	x16, x16, #0x118
  40155c:	br	x17

0000000000401560 <proper_name@plt>:
  401560:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401564:	ldr	x17, [x16, #288]
  401568:	add	x16, x16, #0x120
  40156c:	br	x17

0000000000401570 <dgettext@plt>:
  401570:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401574:	ldr	x17, [x16, #296]
  401578:	add	x16, x16, #0x128
  40157c:	br	x17

0000000000401580 <free@plt>:
  401580:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401584:	ldr	x17, [x16, #304]
  401588:	add	x16, x16, #0x130
  40158c:	br	x17

0000000000401590 <u8_mbtouc@plt>:
  401590:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401594:	ldr	x17, [x16, #312]
  401598:	add	x16, x16, #0x138
  40159c:	br	x17

00000000004015a0 <fwrite@plt>:
  4015a0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015a4:	ldr	x17, [x16, #320]
  4015a8:	add	x16, x16, #0x140
  4015ac:	br	x17

00000000004015b0 <xmlGetLineNo@plt>:
  4015b0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015b4:	ldr	x17, [x16, #328]
  4015b8:	add	x16, x16, #0x148
  4015bc:	br	x17

00000000004015c0 <c_isspace@plt>:
  4015c0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015c4:	ldr	x17, [x16, #336]
  4015c8:	add	x16, x16, #0x150
  4015cc:	br	x17

00000000004015d0 <xmlStrncmp@plt>:
  4015d0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015d4:	ldr	x17, [x16, #344]
  4015d8:	add	x16, x16, #0x158
  4015dc:	br	x17

00000000004015e0 <printf@plt>:
  4015e0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015e4:	ldr	x17, [x16, #352]
  4015e8:	add	x16, x16, #0x160
  4015ec:	br	x17

00000000004015f0 <xmlStrEqual@plt>:
  4015f0:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  4015f4:	ldr	x17, [x16, #360]
  4015f8:	add	x16, x16, #0x168
  4015fc:	br	x17

0000000000401600 <xmlDocGetRootElement@plt>:
  401600:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401604:	ldr	x17, [x16, #368]
  401608:	add	x16, x16, #0x170
  40160c:	br	x17

0000000000401610 <putchar@plt>:
  401610:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401614:	ldr	x17, [x16, #376]
  401618:	add	x16, x16, #0x178
  40161c:	br	x17

0000000000401620 <gettext@plt>:
  401620:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401624:	ldr	x17, [x16, #384]
  401628:	add	x16, x16, #0x180
  40162c:	br	x17

0000000000401630 <error_at_line@plt>:
  401630:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401634:	ldr	x17, [x16, #392]
  401638:	add	x16, x16, #0x188
  40163c:	br	x17

0000000000401640 <fprintf@plt>:
  401640:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401644:	ldr	x17, [x16, #400]
  401648:	add	x16, x16, #0x190
  40164c:	br	x17

0000000000401650 <setlocale@plt>:
  401650:	adrp	x16, 417000 <memcpy@GLIBC_2.17>
  401654:	ldr	x17, [x16, #408]
  401658:	add	x16, x16, #0x198
  40165c:	br	x17

Disassembly of section .text:

0000000000401660 <_start>:
  401660:	mov	x29, #0x0                   	// #0
  401664:	mov	x30, #0x0                   	// #0
  401668:	mov	x5, x0
  40166c:	ldr	x1, [sp]
  401670:	add	x2, sp, #0x8
  401674:	mov	x6, sp
  401678:	movz	x0, #0x0, lsl #48
  40167c:	movk	x0, #0x0, lsl #32
  401680:	movk	x0, #0x40, lsl #16
  401684:	movk	x0, #0x5114
  401688:	movz	x3, #0x0, lsl #48
  40168c:	movk	x3, #0x0, lsl #32
  401690:	movk	x3, #0x40, lsl #16
  401694:	movk	x3, #0x5580
  401698:	movz	x4, #0x0, lsl #48
  40169c:	movk	x4, #0x0, lsl #32
  4016a0:	movk	x4, #0x40, lsl #16
  4016a4:	movk	x4, #0x5600
  4016a8:	bl	401450 <__libc_start_main@plt>
  4016ac:	bl	4014f0 <abort@plt>

00000000004016b0 <call_weak_fn>:
  4016b0:	adrp	x0, 416000 <__FRAME_END__+0xf7a4>
  4016b4:	ldr	x0, [x0, #4064]
  4016b8:	cbz	x0, 4016c0 <call_weak_fn+0x10>
  4016bc:	b	4014e0 <__gmon_start__@plt>
  4016c0:	ret

00000000004016c4 <deregister_tm_clones>:
  4016c4:	stp	x29, x30, [sp, #-32]!
  4016c8:	mov	x29, sp
  4016cc:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4016d0:	add	x0, x0, #0x1c0
  4016d4:	str	x0, [sp, #24]
  4016d8:	ldr	x0, [sp, #24]
  4016dc:	str	x0, [sp, #24]
  4016e0:	ldr	x1, [sp, #24]
  4016e4:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4016e8:	add	x0, x0, #0x1c0
  4016ec:	cmp	x1, x0
  4016f0:	b.eq	40172c <deregister_tm_clones+0x68>  // b.none
  4016f4:	adrp	x0, 405000 <usage+0x8>
  4016f8:	add	x0, x0, #0x630
  4016fc:	ldr	x0, [x0]
  401700:	str	x0, [sp, #16]
  401704:	ldr	x0, [sp, #16]
  401708:	str	x0, [sp, #16]
  40170c:	ldr	x0, [sp, #16]
  401710:	cmp	x0, #0x0
  401714:	b.eq	401730 <deregister_tm_clones+0x6c>  // b.none
  401718:	ldr	x1, [sp, #16]
  40171c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  401720:	add	x0, x0, #0x1c0
  401724:	blr	x1
  401728:	b	401730 <deregister_tm_clones+0x6c>
  40172c:	nop
  401730:	ldp	x29, x30, [sp], #32
  401734:	ret

0000000000401738 <register_tm_clones>:
  401738:	stp	x29, x30, [sp, #-48]!
  40173c:	mov	x29, sp
  401740:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  401744:	add	x0, x0, #0x1c0
  401748:	str	x0, [sp, #40]
  40174c:	ldr	x0, [sp, #40]
  401750:	str	x0, [sp, #40]
  401754:	ldr	x1, [sp, #40]
  401758:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  40175c:	add	x0, x0, #0x1c0
  401760:	sub	x0, x1, x0
  401764:	asr	x0, x0, #3
  401768:	lsr	x1, x0, #63
  40176c:	add	x0, x1, x0
  401770:	asr	x0, x0, #1
  401774:	str	x0, [sp, #32]
  401778:	ldr	x0, [sp, #32]
  40177c:	cmp	x0, #0x0
  401780:	b.eq	4017c0 <register_tm_clones+0x88>  // b.none
  401784:	adrp	x0, 405000 <usage+0x8>
  401788:	add	x0, x0, #0x638
  40178c:	ldr	x0, [x0]
  401790:	str	x0, [sp, #24]
  401794:	ldr	x0, [sp, #24]
  401798:	str	x0, [sp, #24]
  40179c:	ldr	x0, [sp, #24]
  4017a0:	cmp	x0, #0x0
  4017a4:	b.eq	4017c4 <register_tm_clones+0x8c>  // b.none
  4017a8:	ldr	x2, [sp, #24]
  4017ac:	ldr	x1, [sp, #32]
  4017b0:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4017b4:	add	x0, x0, #0x1c0
  4017b8:	blr	x2
  4017bc:	b	4017c4 <register_tm_clones+0x8c>
  4017c0:	nop
  4017c4:	ldp	x29, x30, [sp], #48
  4017c8:	ret

00000000004017cc <__do_global_dtors_aux>:
  4017cc:	stp	x29, x30, [sp, #-16]!
  4017d0:	mov	x29, sp
  4017d4:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4017d8:	add	x0, x0, #0x1f0
  4017dc:	ldrb	w0, [x0]
  4017e0:	and	x0, x0, #0xff
  4017e4:	cmp	x0, #0x0
  4017e8:	b.ne	401804 <__do_global_dtors_aux+0x38>  // b.any
  4017ec:	bl	4016c4 <deregister_tm_clones>
  4017f0:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4017f4:	add	x0, x0, #0x1f0
  4017f8:	mov	w1, #0x1                   	// #1
  4017fc:	strb	w1, [x0]
  401800:	b	401808 <__do_global_dtors_aux+0x3c>
  401804:	nop
  401808:	ldp	x29, x30, [sp], #16
  40180c:	ret

0000000000401810 <frame_dummy>:
  401810:	stp	x29, x30, [sp, #-16]!
  401814:	mov	x29, sp
  401818:	bl	401738 <register_tm_clones>
  40181c:	nop
  401820:	ldp	x29, x30, [sp], #16
  401824:	ret

0000000000401828 <new_rule>:
  401828:	stp	x29, x30, [sp, #-48]!
  40182c:	mov	x29, sp
  401830:	str	x0, [sp, #24]
  401834:	str	x1, [sp, #16]
  401838:	mov	x0, #0x10                  	// #16
  40183c:	bl	401470 <xmalloc@plt>
  401840:	str	x0, [sp, #40]
  401844:	ldr	x0, [sp, #40]
  401848:	ldr	x1, [sp, #24]
  40184c:	str	x1, [x0]
  401850:	ldr	x0, [sp, #40]
  401854:	ldr	x1, [sp, #16]
  401858:	str	x1, [x0, #8]
  40185c:	ldr	x0, [sp, #40]
  401860:	ldp	x29, x30, [sp], #48
  401864:	ret

0000000000401868 <new_leaf_condition>:
  401868:	stp	x29, x30, [sp, #-48]!
  40186c:	mov	x29, sp
  401870:	str	x0, [sp, #24]
  401874:	mov	x0, #0x18                  	// #24
  401878:	bl	401470 <xmalloc@plt>
  40187c:	str	x0, [sp, #40]
  401880:	ldr	x0, [sp, #40]
  401884:	mov	w1, #0x2                   	// #2
  401888:	str	w1, [x0]
  40188c:	ldr	x0, [sp, #40]
  401890:	ldr	x1, [sp, #24]
  401894:	str	x1, [x0, #8]
  401898:	ldr	x0, [sp, #40]
  40189c:	ldp	x29, x30, [sp], #48
  4018a0:	ret

00000000004018a4 <new_branch_condition>:
  4018a4:	stp	x29, x30, [sp, #-64]!
  4018a8:	mov	x29, sp
  4018ac:	str	w0, [sp, #44]
  4018b0:	str	x1, [sp, #32]
  4018b4:	str	x2, [sp, #24]
  4018b8:	mov	x0, #0x18                  	// #24
  4018bc:	bl	401470 <xmalloc@plt>
  4018c0:	str	x0, [sp, #56]
  4018c4:	ldr	x0, [sp, #56]
  4018c8:	ldr	w1, [sp, #44]
  4018cc:	str	w1, [x0]
  4018d0:	ldr	x0, [sp, #56]
  4018d4:	ldr	x1, [sp, #32]
  4018d8:	str	x1, [x0, #8]
  4018dc:	ldr	x0, [sp, #56]
  4018e0:	ldr	x1, [sp, #24]
  4018e4:	str	x1, [x0, #16]
  4018e8:	ldr	x0, [sp, #56]
  4018ec:	ldp	x29, x30, [sp], #64
  4018f0:	ret

00000000004018f4 <new_relation>:
  4018f4:	stp	x29, x30, [sp, #-64]!
  4018f8:	mov	x29, sp
  4018fc:	str	x0, [sp, #40]
  401900:	str	w1, [sp, #36]
  401904:	str	x2, [sp, #24]
  401908:	mov	x0, #0x18                  	// #24
  40190c:	bl	401470 <xmalloc@plt>
  401910:	str	x0, [sp, #56]
  401914:	ldr	x0, [sp, #56]
  401918:	ldr	x1, [sp, #40]
  40191c:	str	x1, [x0]
  401920:	ldr	x0, [sp, #56]
  401924:	ldr	w1, [sp, #36]
  401928:	str	w1, [x0, #8]
  40192c:	ldr	x0, [sp, #56]
  401930:	ldr	x1, [sp, #24]
  401934:	str	x1, [x0, #16]
  401938:	ldr	x0, [sp, #56]
  40193c:	ldp	x29, x30, [sp], #64
  401940:	ret

0000000000401944 <new_expression>:
  401944:	stp	x29, x30, [sp, #-48]!
  401948:	mov	x29, sp
  40194c:	str	w0, [sp, #28]
  401950:	str	w1, [sp, #24]
  401954:	mov	x0, #0x8                   	// #8
  401958:	bl	401470 <xmalloc@plt>
  40195c:	str	x0, [sp, #40]
  401960:	ldr	x0, [sp, #40]
  401964:	ldr	w1, [sp, #28]
  401968:	str	w1, [x0]
  40196c:	ldr	x0, [sp, #40]
  401970:	ldr	w1, [sp, #24]
  401974:	str	w1, [x0, #4]
  401978:	ldr	x0, [sp, #40]
  40197c:	ldp	x29, x30, [sp], #48
  401980:	ret

0000000000401984 <add_range>:
  401984:	stp	x29, x30, [sp, #-32]!
  401988:	mov	x29, sp
  40198c:	str	x0, [sp, #24]
  401990:	str	x1, [sp, #16]
  401994:	ldr	x0, [sp, #24]
  401998:	ldr	x1, [x0, #8]
  40199c:	ldr	x0, [sp, #24]
  4019a0:	ldr	x0, [x0, #16]
  4019a4:	cmp	x1, x0
  4019a8:	b.ne	4019f0 <add_range+0x6c>  // b.any
  4019ac:	ldr	x0, [sp, #24]
  4019b0:	ldr	x0, [x0, #16]
  4019b4:	lsl	x0, x0, #1
  4019b8:	add	x1, x0, #0x1
  4019bc:	ldr	x0, [sp, #24]
  4019c0:	str	x1, [x0, #16]
  4019c4:	ldr	x0, [sp, #24]
  4019c8:	ldr	x2, [x0]
  4019cc:	ldr	x0, [sp, #24]
  4019d0:	ldr	x0, [x0, #16]
  4019d4:	lsl	x0, x0, #3
  4019d8:	mov	x1, x0
  4019dc:	mov	x0, x2
  4019e0:	bl	401400 <xrealloc@plt>
  4019e4:	mov	x1, x0
  4019e8:	ldr	x0, [sp, #24]
  4019ec:	str	x1, [x0]
  4019f0:	ldr	x0, [sp, #24]
  4019f4:	ldr	x1, [x0]
  4019f8:	ldr	x0, [sp, #24]
  4019fc:	ldr	x0, [x0, #8]
  401a00:	add	x3, x0, #0x1
  401a04:	ldr	x2, [sp, #24]
  401a08:	str	x3, [x2, #8]
  401a0c:	lsl	x0, x0, #3
  401a10:	add	x0, x1, x0
  401a14:	ldr	x1, [sp, #16]
  401a18:	str	x1, [x0]
  401a1c:	ldr	x0, [sp, #24]
  401a20:	ldp	x29, x30, [sp], #32
  401a24:	ret

0000000000401a28 <new_range>:
  401a28:	stp	x29, x30, [sp, #-48]!
  401a2c:	mov	x29, sp
  401a30:	str	x0, [sp, #24]
  401a34:	str	x1, [sp, #16]
  401a38:	mov	x0, #0x10                  	// #16
  401a3c:	bl	401470 <xmalloc@plt>
  401a40:	str	x0, [sp, #40]
  401a44:	ldr	x0, [sp, #40]
  401a48:	ldr	x1, [sp, #24]
  401a4c:	str	x1, [x0]
  401a50:	ldr	x0, [sp, #40]
  401a54:	ldr	x1, [sp, #16]
  401a58:	str	x1, [x0, #8]
  401a5c:	ldr	x0, [sp, #40]
  401a60:	ldp	x29, x30, [sp], #48
  401a64:	ret

0000000000401a68 <yydestruct>:
  401a68:	stp	x29, x30, [sp, #-48]!
  401a6c:	mov	x29, sp
  401a70:	str	x0, [sp, #40]
  401a74:	str	w1, [sp, #36]
  401a78:	str	x2, [sp, #24]
  401a7c:	str	x3, [sp, #16]
  401a80:	ldr	x0, [sp, #40]
  401a84:	cmp	x0, #0x0
  401a88:	b.ne	401a98 <yydestruct+0x30>  // b.any
  401a8c:	adrp	x0, 405000 <usage+0x8>
  401a90:	add	x0, x0, #0x8e8
  401a94:	str	x0, [sp, #40]
  401a98:	ldr	w0, [sp, #36]
  401a9c:	cmp	w0, #0x1e
  401aa0:	b.eq	401c1c <yydestruct+0x1b4>  // b.none
  401aa4:	ldr	w0, [sp, #36]
  401aa8:	cmp	w0, #0x1e
  401aac:	b.gt	401c2c <yydestruct+0x1c4>
  401ab0:	ldr	w0, [sp, #36]
  401ab4:	cmp	w0, #0x1d
  401ab8:	b.eq	401c0c <yydestruct+0x1a4>  // b.none
  401abc:	ldr	w0, [sp, #36]
  401ac0:	cmp	w0, #0x1d
  401ac4:	b.gt	401c2c <yydestruct+0x1c4>
  401ac8:	ldr	w0, [sp, #36]
  401acc:	cmp	w0, #0x1c
  401ad0:	b.eq	401bfc <yydestruct+0x194>  // b.none
  401ad4:	ldr	w0, [sp, #36]
  401ad8:	cmp	w0, #0x1c
  401adc:	b.gt	401c2c <yydestruct+0x1c4>
  401ae0:	ldr	w0, [sp, #36]
  401ae4:	cmp	w0, #0x1b
  401ae8:	b.eq	401bec <yydestruct+0x184>  // b.none
  401aec:	ldr	w0, [sp, #36]
  401af0:	cmp	w0, #0x1b
  401af4:	b.gt	401c2c <yydestruct+0x1c4>
  401af8:	ldr	w0, [sp, #36]
  401afc:	cmp	w0, #0x1a
  401b00:	b.eq	401bdc <yydestruct+0x174>  // b.none
  401b04:	ldr	w0, [sp, #36]
  401b08:	cmp	w0, #0x1a
  401b0c:	b.gt	401c2c <yydestruct+0x1c4>
  401b10:	ldr	w0, [sp, #36]
  401b14:	cmp	w0, #0x19
  401b18:	b.eq	401bcc <yydestruct+0x164>  // b.none
  401b1c:	ldr	w0, [sp, #36]
  401b20:	cmp	w0, #0x19
  401b24:	b.gt	401c2c <yydestruct+0x1c4>
  401b28:	ldr	w0, [sp, #36]
  401b2c:	cmp	w0, #0x18
  401b30:	b.eq	401bbc <yydestruct+0x154>  // b.none
  401b34:	ldr	w0, [sp, #36]
  401b38:	cmp	w0, #0x18
  401b3c:	b.gt	401c2c <yydestruct+0x1c4>
  401b40:	ldr	w0, [sp, #36]
  401b44:	cmp	w0, #0xd
  401b48:	b.eq	401c34 <yydestruct+0x1cc>  // b.none
  401b4c:	ldr	w0, [sp, #36]
  401b50:	cmp	w0, #0xd
  401b54:	b.gt	401c2c <yydestruct+0x1c4>
  401b58:	ldr	w0, [sp, #36]
  401b5c:	cmp	w0, #0xc
  401b60:	b.eq	401bac <yydestruct+0x144>  // b.none
  401b64:	ldr	w0, [sp, #36]
  401b68:	cmp	w0, #0xc
  401b6c:	b.gt	401c2c <yydestruct+0x1c4>
  401b70:	ldr	w0, [sp, #36]
  401b74:	cmp	w0, #0xa
  401b78:	b.eq	401b8c <yydestruct+0x124>  // b.none
  401b7c:	ldr	w0, [sp, #36]
  401b80:	cmp	w0, #0xb
  401b84:	b.eq	401b9c <yydestruct+0x134>  // b.none
  401b88:	b	401c2c <yydestruct+0x1c4>
  401b8c:	ldr	x0, [sp, #24]
  401b90:	ldr	x0, [x0]
  401b94:	bl	401580 <free@plt>
  401b98:	b	401c38 <yydestruct+0x1d0>
  401b9c:	ldr	x0, [sp, #24]
  401ba0:	ldr	x0, [x0]
  401ba4:	bl	401580 <free@plt>
  401ba8:	b	401c38 <yydestruct+0x1d0>
  401bac:	ldr	x0, [sp, #24]
  401bb0:	ldr	x0, [x0]
  401bb4:	bl	401580 <free@plt>
  401bb8:	b	401c38 <yydestruct+0x1d0>
  401bbc:	ldr	x0, [sp, #24]
  401bc0:	ldr	x0, [x0]
  401bc4:	bl	402f08 <cldr_plural_condition_free>
  401bc8:	b	401c38 <yydestruct+0x1d0>
  401bcc:	ldr	x0, [sp, #24]
  401bd0:	ldr	x0, [x0]
  401bd4:	bl	402f08 <cldr_plural_condition_free>
  401bd8:	b	401c38 <yydestruct+0x1d0>
  401bdc:	ldr	x0, [sp, #24]
  401be0:	ldr	x0, [x0]
  401be4:	bl	402f80 <cldr_plural_relation_free>
  401be8:	b	401c38 <yydestruct+0x1d0>
  401bec:	ldr	x0, [sp, #24]
  401bf0:	ldr	x0, [x0]
  401bf4:	bl	401580 <free@plt>
  401bf8:	b	401c38 <yydestruct+0x1d0>
  401bfc:	ldr	x0, [sp, #24]
  401c00:	ldr	x0, [x0]
  401c04:	bl	402e9c <cldr_plural_range_list_free>
  401c08:	b	401c38 <yydestruct+0x1d0>
  401c0c:	ldr	x0, [sp, #24]
  401c10:	ldr	x0, [x0]
  401c14:	bl	402e4c <cldr_plural_range_free>
  401c18:	b	401c38 <yydestruct+0x1d0>
  401c1c:	ldr	x0, [sp, #24]
  401c20:	ldr	x0, [x0]
  401c24:	bl	402e4c <cldr_plural_range_free>
  401c28:	b	401c38 <yydestruct+0x1d0>
  401c2c:	nop
  401c30:	b	401c38 <yydestruct+0x1d0>
  401c34:	nop
  401c38:	nop
  401c3c:	ldp	x29, x30, [sp], #48
  401c40:	ret

0000000000401c44 <yyparse>:
  401c44:	sub	sp, sp, #0x8a0
  401c48:	stp	x29, x30, [sp]
  401c4c:	mov	x29, sp
  401c50:	str	x19, [sp, #16]
  401c54:	str	x0, [sp, #40]
  401c58:	str	wzr, [sp, #2140]
  401c5c:	str	wzr, [sp, #2136]
  401c60:	add	x0, sp, #0x678
  401c64:	str	x0, [sp, #2184]
  401c68:	ldr	x0, [sp, #2184]
  401c6c:	str	x0, [sp, #2176]
  401c70:	add	x0, sp, #0x38
  401c74:	str	x0, [sp, #2168]
  401c78:	ldr	x0, [sp, #2168]
  401c7c:	str	x0, [sp, #2160]
  401c80:	mov	x0, #0xc8                  	// #200
  401c84:	str	x0, [sp, #2152]
  401c88:	str	wzr, [sp, #2196]
  401c8c:	str	wzr, [sp, #2192]
  401c90:	str	wzr, [sp, #2200]
  401c94:	mov	w0, #0xfffffffe            	// #-2
  401c98:	str	w0, [sp, #2204]
  401c9c:	b	401cac <yyparse+0x68>
  401ca0:	ldr	x0, [sp, #2176]
  401ca4:	add	x0, x0, #0x2
  401ca8:	str	x0, [sp, #2176]
  401cac:	ldr	w0, [sp, #2196]
  401cb0:	sxth	w1, w0
  401cb4:	ldr	x0, [sp, #2176]
  401cb8:	strh	w1, [x0]
  401cbc:	ldr	x0, [sp, #2152]
  401cc0:	lsl	x0, x0, #1
  401cc4:	sub	x0, x0, #0x2
  401cc8:	ldr	x1, [sp, #2184]
  401ccc:	add	x0, x1, x0
  401cd0:	ldr	x1, [sp, #2176]
  401cd4:	cmp	x1, x0
  401cd8:	b.cc	401e5c <yyparse+0x218>  // b.lo, b.ul, b.last
  401cdc:	ldr	x1, [sp, #2176]
  401ce0:	ldr	x0, [sp, #2184]
  401ce4:	sub	x0, x1, x0
  401ce8:	asr	x0, x0, #1
  401cec:	add	x0, x0, #0x1
  401cf0:	str	x0, [sp, #2128]
  401cf4:	ldr	x1, [sp, #2152]
  401cf8:	mov	x0, #0x270f                	// #9999
  401cfc:	cmp	x1, x0
  401d00:	b.hi	402618 <yyparse+0x9d4>  // b.pmore
  401d04:	ldr	x0, [sp, #2152]
  401d08:	lsl	x0, x0, #1
  401d0c:	str	x0, [sp, #2152]
  401d10:	ldr	x1, [sp, #2152]
  401d14:	mov	x0, #0x2710                	// #10000
  401d18:	cmp	x1, x0
  401d1c:	b.ls	401d28 <yyparse+0xe4>  // b.plast
  401d20:	mov	x0, #0x2710                	// #10000
  401d24:	str	x0, [sp, #2152]
  401d28:	ldr	x0, [sp, #2184]
  401d2c:	str	x0, [sp, #2120]
  401d30:	ldr	x1, [sp, #2152]
  401d34:	mov	x0, x1
  401d38:	lsl	x0, x0, #2
  401d3c:	add	x0, x0, x1
  401d40:	lsl	x0, x0, #1
  401d44:	add	x0, x0, #0x7
  401d48:	bl	4013f0 <malloc@plt>
  401d4c:	str	x0, [sp, #2112]
  401d50:	ldr	x0, [sp, #2112]
  401d54:	cmp	x0, #0x0
  401d58:	b.eq	402620 <yyparse+0x9dc>  // b.none
  401d5c:	ldr	x2, [sp, #2112]
  401d60:	ldr	x0, [sp, #2128]
  401d64:	lsl	x0, x0, #1
  401d68:	ldr	x1, [sp, #2184]
  401d6c:	mov	x3, x2
  401d70:	mov	x2, x0
  401d74:	mov	x0, x3
  401d78:	bl	401320 <memcpy@plt>
  401d7c:	ldr	x0, [sp, #2112]
  401d80:	str	x0, [sp, #2184]
  401d84:	ldr	x0, [sp, #2152]
  401d88:	lsl	x0, x0, #1
  401d8c:	add	x0, x0, #0x7
  401d90:	str	x0, [sp, #2104]
  401d94:	ldr	x0, [sp, #2104]
  401d98:	and	x0, x0, #0xfffffffffffffff8
  401d9c:	ldr	x1, [sp, #2112]
  401da0:	add	x0, x1, x0
  401da4:	str	x0, [sp, #2112]
  401da8:	ldr	x2, [sp, #2112]
  401dac:	ldr	x0, [sp, #2128]
  401db0:	lsl	x0, x0, #3
  401db4:	ldr	x1, [sp, #2168]
  401db8:	mov	x3, x2
  401dbc:	mov	x2, x0
  401dc0:	mov	x0, x3
  401dc4:	bl	401320 <memcpy@plt>
  401dc8:	ldr	x0, [sp, #2112]
  401dcc:	str	x0, [sp, #2168]
  401dd0:	ldr	x0, [sp, #2152]
  401dd4:	lsl	x0, x0, #3
  401dd8:	add	x0, x0, #0x7
  401ddc:	str	x0, [sp, #2096]
  401de0:	ldr	x0, [sp, #2096]
  401de4:	and	x0, x0, #0xfffffffffffffff8
  401de8:	ldr	x1, [sp, #2112]
  401dec:	add	x0, x1, x0
  401df0:	str	x0, [sp, #2112]
  401df4:	add	x0, sp, #0x678
  401df8:	ldr	x1, [sp, #2120]
  401dfc:	cmp	x1, x0
  401e00:	b.eq	401e0c <yyparse+0x1c8>  // b.none
  401e04:	ldr	x0, [sp, #2120]
  401e08:	bl	401580 <free@plt>
  401e0c:	ldr	x0, [sp, #2128]
  401e10:	lsl	x0, x0, #1
  401e14:	sub	x0, x0, #0x2
  401e18:	ldr	x1, [sp, #2184]
  401e1c:	add	x0, x1, x0
  401e20:	str	x0, [sp, #2176]
  401e24:	ldr	x0, [sp, #2128]
  401e28:	lsl	x0, x0, #3
  401e2c:	sub	x0, x0, #0x8
  401e30:	ldr	x1, [sp, #2168]
  401e34:	add	x0, x1, x0
  401e38:	str	x0, [sp, #2160]
  401e3c:	ldr	x0, [sp, #2152]
  401e40:	lsl	x0, x0, #1
  401e44:	sub	x0, x0, #0x2
  401e48:	ldr	x1, [sp, #2184]
  401e4c:	add	x0, x1, x0
  401e50:	ldr	x1, [sp, #2176]
  401e54:	cmp	x1, x0
  401e58:	b.cs	402600 <yyparse+0x9bc>  // b.hs, b.nlast
  401e5c:	ldr	w0, [sp, #2196]
  401e60:	cmp	w0, #0x7
  401e64:	b.eq	4025f4 <yyparse+0x9b0>  // b.none
  401e68:	nop
  401e6c:	adrp	x0, 405000 <usage+0x8>
  401e70:	add	x1, x0, #0x750
  401e74:	ldrsw	x0, [sp, #2196]
  401e78:	ldrsb	w0, [x1, x0]
  401e7c:	str	w0, [sp, #2148]
  401e80:	ldr	w0, [sp, #2148]
  401e84:	cmn	w0, #0x14
  401e88:	b.eq	401fa8 <yyparse+0x364>  // b.none
  401e8c:	ldr	w0, [sp, #2204]
  401e90:	cmn	w0, #0x2
  401e94:	b.ne	401ea8 <yyparse+0x264>  // b.any
  401e98:	add	x0, sp, #0x808
  401e9c:	ldr	x1, [sp, #40]
  401ea0:	bl	402758 <yylex>
  401ea4:	str	w0, [sp, #2204]
  401ea8:	ldr	w0, [sp, #2204]
  401eac:	cmp	w0, #0x0
  401eb0:	b.gt	401ec4 <yyparse+0x280>
  401eb4:	str	wzr, [sp, #2140]
  401eb8:	ldr	w0, [sp, #2140]
  401ebc:	str	w0, [sp, #2204]
  401ec0:	b	401eec <yyparse+0x2a8>
  401ec4:	ldr	w0, [sp, #2204]
  401ec8:	cmp	w0, #0x10c
  401ecc:	b.hi	401ee4 <yyparse+0x2a0>  // b.pmore
  401ed0:	adrp	x0, 405000 <usage+0x8>
  401ed4:	add	x1, x0, #0x640
  401ed8:	ldrsw	x0, [sp, #2204]
  401edc:	ldrb	w0, [x1, x0]
  401ee0:	b	401ee8 <yyparse+0x2a4>
  401ee4:	mov	w0, #0x2                   	// #2
  401ee8:	str	w0, [sp, #2140]
  401eec:	ldr	w1, [sp, #2148]
  401ef0:	ldr	w0, [sp, #2140]
  401ef4:	add	w0, w1, w0
  401ef8:	str	w0, [sp, #2148]
  401efc:	ldr	w0, [sp, #2148]
  401f00:	cmp	w0, #0x0
  401f04:	b.lt	401fb0 <yyparse+0x36c>  // b.tstop
  401f08:	ldr	w0, [sp, #2148]
  401f0c:	cmp	w0, #0x37
  401f10:	b.gt	401fb0 <yyparse+0x36c>
  401f14:	adrp	x0, 405000 <usage+0x8>
  401f18:	add	x1, x0, #0x828
  401f1c:	ldrsw	x0, [sp, #2148]
  401f20:	ldrsb	w0, [x1, x0]
  401f24:	mov	w1, w0
  401f28:	ldr	w0, [sp, #2140]
  401f2c:	cmp	w0, w1
  401f30:	b.ne	401fb0 <yyparse+0x36c>  // b.any
  401f34:	adrp	x0, 405000 <usage+0x8>
  401f38:	add	x1, x0, #0x7f0
  401f3c:	ldrsw	x0, [sp, #2148]
  401f40:	ldrb	w0, [x1, x0]
  401f44:	str	w0, [sp, #2148]
  401f48:	ldr	w0, [sp, #2148]
  401f4c:	cmp	w0, #0x0
  401f50:	b.gt	401f64 <yyparse+0x320>
  401f54:	ldr	w0, [sp, #2148]
  401f58:	neg	w0, w0
  401f5c:	str	w0, [sp, #2148]
  401f60:	b	401fd8 <yyparse+0x394>
  401f64:	ldr	w0, [sp, #2192]
  401f68:	cmp	w0, #0x0
  401f6c:	b.eq	401f7c <yyparse+0x338>  // b.none
  401f70:	ldr	w0, [sp, #2192]
  401f74:	sub	w0, w0, #0x1
  401f78:	str	w0, [sp, #2192]
  401f7c:	mov	w0, #0xfffffffe            	// #-2
  401f80:	str	w0, [sp, #2204]
  401f84:	ldr	w0, [sp, #2148]
  401f88:	str	w0, [sp, #2196]
  401f8c:	ldr	x0, [sp, #2160]
  401f90:	add	x0, x0, #0x8
  401f94:	str	x0, [sp, #2160]
  401f98:	ldr	x0, [sp, #2160]
  401f9c:	ldr	x1, [sp, #2056]
  401fa0:	str	x1, [x0]
  401fa4:	b	401ca0 <yyparse+0x5c>
  401fa8:	nop
  401fac:	b	401fb4 <yyparse+0x370>
  401fb0:	nop
  401fb4:	adrp	x0, 405000 <usage+0x8>
  401fb8:	add	x1, x0, #0x788
  401fbc:	ldrsw	x0, [sp, #2196]
  401fc0:	ldrb	w0, [x1, x0]
  401fc4:	str	w0, [sp, #2148]
  401fc8:	ldr	w0, [sp, #2148]
  401fcc:	cmp	w0, #0x0
  401fd0:	b.eq	402420 <yyparse+0x7dc>  // b.none
  401fd4:	nop
  401fd8:	adrp	x0, 405000 <usage+0x8>
  401fdc:	add	x1, x0, #0x8c0
  401fe0:	ldrsw	x0, [sp, #2148]
  401fe4:	ldrb	w0, [x1, x0]
  401fe8:	str	w0, [sp, #2136]
  401fec:	mov	w1, #0x1                   	// #1
  401ff0:	ldr	w0, [sp, #2136]
  401ff4:	sub	w0, w1, w0
  401ff8:	sxtw	x0, w0
  401ffc:	lsl	x0, x0, #3
  402000:	ldr	x1, [sp, #2160]
  402004:	add	x0, x1, x0
  402008:	ldr	x0, [x0]
  40200c:	str	x0, [sp, #48]
  402010:	ldr	w0, [sp, #2148]
  402014:	sub	w0, w0, #0x4
  402018:	cmp	w0, #0x1c
  40201c:	b.hi	40232c <yyparse+0x6e8>  // b.pmore
  402020:	adrp	x1, 405000 <usage+0x8>
  402024:	add	x1, x1, #0x98c
  402028:	ldr	w0, [x1, w0, uxtw #2]
  40202c:	adr	x1, 402038 <yyparse+0x3f4>
  402030:	add	x0, x1, w0, sxtw #2
  402034:	br	x0
  402038:	ldr	x0, [sp, #2160]
  40203c:	sub	x0, x0, #0x18
  402040:	ldr	x2, [x0]
  402044:	ldr	x0, [sp, #2160]
  402048:	sub	x0, x0, #0x8
  40204c:	ldr	x0, [x0]
  402050:	mov	x1, x0
  402054:	mov	x0, x2
  402058:	bl	401828 <new_rule>
  40205c:	str	x0, [sp, #2080]
  402060:	ldr	x0, [sp, #40]
  402064:	ldr	x0, [x0, #16]
  402068:	str	x0, [sp, #2072]
  40206c:	ldr	x0, [sp, #2072]
  402070:	ldr	x1, [x0, #8]
  402074:	ldr	x0, [sp, #2072]
  402078:	ldr	x0, [x0, #16]
  40207c:	cmp	x1, x0
  402080:	b.ne	4020c8 <yyparse+0x484>  // b.any
  402084:	ldr	x0, [sp, #2072]
  402088:	ldr	x0, [x0, #16]
  40208c:	lsl	x0, x0, #1
  402090:	add	x1, x0, #0x1
  402094:	ldr	x0, [sp, #2072]
  402098:	str	x1, [x0, #16]
  40209c:	ldr	x0, [sp, #2072]
  4020a0:	ldr	x2, [x0]
  4020a4:	ldr	x0, [sp, #2072]
  4020a8:	ldr	x0, [x0, #16]
  4020ac:	lsl	x0, x0, #3
  4020b0:	mov	x1, x0
  4020b4:	mov	x0, x2
  4020b8:	bl	401400 <xrealloc@plt>
  4020bc:	mov	x1, x0
  4020c0:	ldr	x0, [sp, #2072]
  4020c4:	str	x1, [x0]
  4020c8:	ldr	x0, [sp, #2072]
  4020cc:	ldr	x1, [x0]
  4020d0:	ldr	x0, [sp, #2072]
  4020d4:	ldr	x0, [x0, #8]
  4020d8:	add	x3, x0, #0x1
  4020dc:	ldr	x2, [sp, #2072]
  4020e0:	str	x3, [x2, #8]
  4020e4:	lsl	x0, x0, #3
  4020e8:	add	x0, x1, x0
  4020ec:	ldr	x1, [sp, #2080]
  4020f0:	str	x1, [x0]
  4020f4:	b	402330 <yyparse+0x6ec>
  4020f8:	ldr	x0, [sp, #2160]
  4020fc:	ldr	x0, [x0]
  402100:	str	x0, [sp, #48]
  402104:	b	402330 <yyparse+0x6ec>
  402108:	ldr	x0, [sp, #2160]
  40210c:	sub	x0, x0, #0x10
  402110:	ldr	x1, [x0]
  402114:	ldr	x0, [sp, #2160]
  402118:	ldr	x0, [x0]
  40211c:	mov	x2, x0
  402120:	mov	w0, #0x1                   	// #1
  402124:	bl	4018a4 <new_branch_condition>
  402128:	str	x0, [sp, #48]
  40212c:	b	402330 <yyparse+0x6ec>
  402130:	ldr	x0, [sp, #2160]
  402134:	ldr	x0, [x0]
  402138:	bl	401868 <new_leaf_condition>
  40213c:	str	x0, [sp, #48]
  402140:	b	402330 <yyparse+0x6ec>
  402144:	ldr	x0, [sp, #2160]
  402148:	sub	x0, x0, #0x10
  40214c:	ldr	x19, [x0]
  402150:	ldr	x0, [sp, #2160]
  402154:	ldr	x0, [x0]
  402158:	bl	401868 <new_leaf_condition>
  40215c:	mov	x2, x0
  402160:	mov	x1, x19
  402164:	mov	w0, #0x0                   	// #0
  402168:	bl	4018a4 <new_branch_condition>
  40216c:	str	x0, [sp, #48]
  402170:	b	402330 <yyparse+0x6ec>
  402174:	ldr	x0, [sp, #2160]
  402178:	sub	x0, x0, #0x10
  40217c:	ldr	x3, [x0]
  402180:	ldr	x0, [sp, #2160]
  402184:	ldr	x0, [x0]
  402188:	mov	x2, x0
  40218c:	mov	w1, #0x0                   	// #0
  402190:	mov	x0, x3
  402194:	bl	4018f4 <new_relation>
  402198:	str	x0, [sp, #48]
  40219c:	b	402330 <yyparse+0x6ec>
  4021a0:	ldr	x0, [sp, #2160]
  4021a4:	sub	x0, x0, #0x10
  4021a8:	ldr	x3, [x0]
  4021ac:	ldr	x0, [sp, #2160]
  4021b0:	ldr	x0, [x0]
  4021b4:	mov	x2, x0
  4021b8:	mov	w1, #0x1                   	// #1
  4021bc:	mov	x0, x3
  4021c0:	bl	4018f4 <new_relation>
  4021c4:	str	x0, [sp, #48]
  4021c8:	b	402330 <yyparse+0x6ec>
  4021cc:	ldr	x0, [sp, #2160]
  4021d0:	ldr	w0, [x0]
  4021d4:	mov	w1, #0x0                   	// #0
  4021d8:	bl	401944 <new_expression>
  4021dc:	str	x0, [sp, #48]
  4021e0:	b	402330 <yyparse+0x6ec>
  4021e4:	ldr	x0, [sp, #2160]
  4021e8:	sub	x0, x0, #0x10
  4021ec:	ldr	w2, [x0]
  4021f0:	ldr	x0, [sp, #2160]
  4021f4:	ldr	x0, [x0]
  4021f8:	ldr	w0, [x0, #8]
  4021fc:	mov	w1, w0
  402200:	mov	w0, w2
  402204:	bl	401944 <new_expression>
  402208:	str	x0, [sp, #48]
  40220c:	b	402330 <yyparse+0x6ec>
  402210:	mov	x0, #0x18                  	// #24
  402214:	bl	401470 <xmalloc@plt>
  402218:	str	x0, [sp, #2088]
  40221c:	mov	x2, #0x18                  	// #24
  402220:	mov	w1, #0x0                   	// #0
  402224:	ldr	x0, [sp, #2088]
  402228:	bl	401460 <memset@plt>
  40222c:	ldr	x0, [sp, #2160]
  402230:	ldr	x0, [x0]
  402234:	mov	x1, x0
  402238:	ldr	x0, [sp, #2088]
  40223c:	bl	401984 <add_range>
  402240:	str	x0, [sp, #48]
  402244:	b	402330 <yyparse+0x6ec>
  402248:	ldr	x0, [sp, #2160]
  40224c:	sub	x0, x0, #0x10
  402250:	ldr	x2, [x0]
  402254:	ldr	x0, [sp, #2160]
  402258:	ldr	x0, [x0]
  40225c:	mov	x1, x0
  402260:	mov	x0, x2
  402264:	bl	401984 <add_range>
  402268:	str	x0, [sp, #48]
  40226c:	b	402330 <yyparse+0x6ec>
  402270:	ldr	x0, [sp, #2160]
  402274:	ldr	x0, [x0]
  402278:	str	x0, [sp, #48]
  40227c:	b	402330 <yyparse+0x6ec>
  402280:	ldr	x0, [sp, #2160]
  402284:	ldr	x2, [x0]
  402288:	ldr	x0, [sp, #2160]
  40228c:	ldr	x0, [x0]
  402290:	mov	x1, x0
  402294:	mov	x0, x2
  402298:	bl	401a28 <new_range>
  40229c:	str	x0, [sp, #48]
  4022a0:	b	402330 <yyparse+0x6ec>
  4022a4:	ldr	x0, [sp, #2160]
  4022a8:	sub	x0, x0, #0x10
  4022ac:	ldr	x2, [x0]
  4022b0:	ldr	x0, [sp, #2160]
  4022b4:	ldr	x0, [x0]
  4022b8:	mov	x1, x0
  4022bc:	mov	x0, x2
  4022c0:	bl	401a28 <new_range>
  4022c4:	str	x0, [sp, #48]
  4022c8:	b	402330 <yyparse+0x6ec>
  4022cc:	ldr	x0, [sp, #2160]
  4022d0:	ldr	x0, [x0]
  4022d4:	bl	401580 <free@plt>
  4022d8:	b	402330 <yyparse+0x6ec>
  4022dc:	ldr	x0, [sp, #2160]
  4022e0:	sub	x0, x0, #0x10
  4022e4:	ldr	x0, [x0]
  4022e8:	bl	401580 <free@plt>
  4022ec:	ldr	x0, [sp, #2160]
  4022f0:	ldr	x0, [x0]
  4022f4:	bl	401580 <free@plt>
  4022f8:	b	402330 <yyparse+0x6ec>
  4022fc:	ldr	x0, [sp, #2160]
  402300:	ldr	x0, [x0]
  402304:	bl	401580 <free@plt>
  402308:	b	402330 <yyparse+0x6ec>
  40230c:	ldr	x0, [sp, #2160]
  402310:	sub	x0, x0, #0x10
  402314:	ldr	x0, [x0]
  402318:	bl	401580 <free@plt>
  40231c:	ldr	x0, [sp, #2160]
  402320:	ldr	x0, [x0]
  402324:	bl	401580 <free@plt>
  402328:	b	402330 <yyparse+0x6ec>
  40232c:	nop
  402330:	ldrsw	x0, [sp, #2136]
  402334:	lsl	x0, x0, #3
  402338:	neg	x0, x0
  40233c:	ldr	x1, [sp, #2160]
  402340:	add	x0, x1, x0
  402344:	str	x0, [sp, #2160]
  402348:	ldrsw	x0, [sp, #2136]
  40234c:	lsl	x0, x0, #1
  402350:	neg	x0, x0
  402354:	ldr	x1, [sp, #2176]
  402358:	add	x0, x1, x0
  40235c:	str	x0, [sp, #2176]
  402360:	str	wzr, [sp, #2136]
  402364:	ldr	x0, [sp, #2160]
  402368:	add	x0, x0, #0x8
  40236c:	str	x0, [sp, #2160]
  402370:	ldr	x0, [sp, #2160]
  402374:	ldr	x1, [sp, #48]
  402378:	str	x1, [x0]
  40237c:	adrp	x0, 405000 <usage+0x8>
  402380:	add	x1, x0, #0x898
  402384:	ldrsw	x0, [sp, #2148]
  402388:	ldrb	w0, [x1, x0]
  40238c:	sub	w0, w0, #0x15
  402390:	str	w0, [sp, #2068]
  402394:	adrp	x0, 405000 <usage+0x8>
  402398:	add	x1, x0, #0x7c0
  40239c:	ldrsw	x0, [sp, #2068]
  4023a0:	ldrsb	w0, [x1, x0]
  4023a4:	mov	w1, w0
  4023a8:	ldr	x0, [sp, #2176]
  4023ac:	ldrsh	w0, [x0]
  4023b0:	add	w0, w1, w0
  4023b4:	str	w0, [sp, #2064]
  4023b8:	ldr	w0, [sp, #2064]
  4023bc:	cmp	w0, #0x0
  4023c0:	b.lt	402408 <yyparse+0x7c4>  // b.tstop
  4023c4:	ldr	w0, [sp, #2064]
  4023c8:	cmp	w0, #0x37
  4023cc:	b.gt	402408 <yyparse+0x7c4>
  4023d0:	adrp	x0, 405000 <usage+0x8>
  4023d4:	add	x1, x0, #0x828
  4023d8:	ldrsw	x0, [sp, #2064]
  4023dc:	ldrsb	w0, [x1, x0]
  4023e0:	sxth	w1, w0
  4023e4:	ldr	x0, [sp, #2176]
  4023e8:	ldrsh	w0, [x0]
  4023ec:	cmp	w1, w0
  4023f0:	b.ne	402408 <yyparse+0x7c4>  // b.any
  4023f4:	adrp	x0, 405000 <usage+0x8>
  4023f8:	add	x1, x0, #0x7f0
  4023fc:	ldrsw	x0, [sp, #2064]
  402400:	ldrb	w0, [x1, x0]
  402404:	b	402418 <yyparse+0x7d4>
  402408:	adrp	x0, 405000 <usage+0x8>
  40240c:	add	x1, x0, #0x7d8
  402410:	ldrsw	x0, [sp, #2068]
  402414:	ldrsb	w0, [x1, x0]
  402418:	str	w0, [sp, #2196]
  40241c:	b	401ca0 <yyparse+0x5c>
  402420:	nop
  402424:	ldr	w0, [sp, #2204]
  402428:	cmn	w0, #0x2
  40242c:	b.eq	402458 <yyparse+0x814>  // b.none
  402430:	ldr	w0, [sp, #2204]
  402434:	cmp	w0, #0x10c
  402438:	b.hi	402450 <yyparse+0x80c>  // b.pmore
  40243c:	adrp	x0, 405000 <usage+0x8>
  402440:	add	x1, x0, #0x640
  402444:	ldrsw	x0, [sp, #2204]
  402448:	ldrb	w0, [x1, x0]
  40244c:	b	40245c <yyparse+0x818>
  402450:	mov	w0, #0x2                   	// #2
  402454:	b	40245c <yyparse+0x818>
  402458:	mov	w0, #0xfffffffe            	// #-2
  40245c:	str	w0, [sp, #2140]
  402460:	ldr	w0, [sp, #2192]
  402464:	cmp	w0, #0x0
  402468:	b.ne	402498 <yyparse+0x854>  // b.any
  40246c:	ldr	w0, [sp, #2200]
  402470:	add	w0, w0, #0x1
  402474:	str	w0, [sp, #2200]
  402478:	adrp	x0, 405000 <usage+0x8>
  40247c:	add	x1, x0, #0x8f8
  402480:	adrp	x0, 405000 <usage+0x8>
  402484:	add	x0, x0, #0x908
  402488:	bl	401570 <dgettext@plt>
  40248c:	mov	x1, x0
  402490:	ldr	x0, [sp, #40]
  402494:	bl	402e10 <yyerror>
  402498:	ldr	w0, [sp, #2192]
  40249c:	cmp	w0, #0x3
  4024a0:	b.ne	4024e4 <yyparse+0x8a0>  // b.any
  4024a4:	ldr	w0, [sp, #2204]
  4024a8:	cmp	w0, #0x0
  4024ac:	b.gt	4024c0 <yyparse+0x87c>
  4024b0:	ldr	w0, [sp, #2204]
  4024b4:	cmp	w0, #0x0
  4024b8:	b.ne	4024e4 <yyparse+0x8a0>  // b.any
  4024bc:	b	40260c <yyparse+0x9c8>
  4024c0:	add	x0, sp, #0x808
  4024c4:	ldr	x3, [sp, #40]
  4024c8:	mov	x2, x0
  4024cc:	ldr	w1, [sp, #2140]
  4024d0:	adrp	x0, 405000 <usage+0x8>
  4024d4:	add	x0, x0, #0x918
  4024d8:	bl	401a68 <yydestruct>
  4024dc:	mov	w0, #0xfffffffe            	// #-2
  4024e0:	str	w0, [sp, #2204]
  4024e4:	nop
  4024e8:	mov	w0, #0x3                   	// #3
  4024ec:	str	w0, [sp, #2192]
  4024f0:	adrp	x0, 405000 <usage+0x8>
  4024f4:	add	x1, x0, #0x750
  4024f8:	ldrsw	x0, [sp, #2196]
  4024fc:	ldrsb	w0, [x1, x0]
  402500:	str	w0, [sp, #2148]
  402504:	ldr	w0, [sp, #2148]
  402508:	cmn	w0, #0x14
  40250c:	b.eq	40256c <yyparse+0x928>  // b.none
  402510:	ldr	w0, [sp, #2148]
  402514:	add	w0, w0, #0x1
  402518:	str	w0, [sp, #2148]
  40251c:	ldr	w0, [sp, #2148]
  402520:	cmp	w0, #0x0
  402524:	b.lt	40256c <yyparse+0x928>  // b.tstop
  402528:	ldr	w0, [sp, #2148]
  40252c:	cmp	w0, #0x37
  402530:	b.gt	40256c <yyparse+0x928>
  402534:	adrp	x0, 405000 <usage+0x8>
  402538:	add	x1, x0, #0x828
  40253c:	ldrsw	x0, [sp, #2148]
  402540:	ldrsb	w0, [x1, x0]
  402544:	cmp	w0, #0x1
  402548:	b.ne	40256c <yyparse+0x928>  // b.any
  40254c:	adrp	x0, 405000 <usage+0x8>
  402550:	add	x1, x0, #0x7f0
  402554:	ldrsw	x0, [sp, #2148]
  402558:	ldrb	w0, [x1, x0]
  40255c:	str	w0, [sp, #2148]
  402560:	ldr	w0, [sp, #2148]
  402564:	cmp	w0, #0x0
  402568:	b.gt	4025cc <yyparse+0x988>
  40256c:	ldr	x1, [sp, #2176]
  402570:	ldr	x0, [sp, #2184]
  402574:	cmp	x1, x0
  402578:	b.eq	402608 <yyparse+0x9c4>  // b.none
  40257c:	adrp	x0, 405000 <usage+0x8>
  402580:	add	x1, x0, #0x860
  402584:	ldrsw	x0, [sp, #2196]
  402588:	ldrb	w0, [x1, x0]
  40258c:	ldr	x3, [sp, #40]
  402590:	ldr	x2, [sp, #2160]
  402594:	mov	w1, w0
  402598:	adrp	x0, 405000 <usage+0x8>
  40259c:	add	x0, x0, #0x930
  4025a0:	bl	401a68 <yydestruct>
  4025a4:	ldr	x0, [sp, #2160]
  4025a8:	sub	x0, x0, #0x8
  4025ac:	str	x0, [sp, #2160]
  4025b0:	ldr	x0, [sp, #2176]
  4025b4:	sub	x0, x0, #0x2
  4025b8:	str	x0, [sp, #2176]
  4025bc:	ldr	x0, [sp, #2176]
  4025c0:	ldrsh	w0, [x0]
  4025c4:	str	w0, [sp, #2196]
  4025c8:	b	4024f0 <yyparse+0x8ac>
  4025cc:	nop
  4025d0:	ldr	x0, [sp, #2160]
  4025d4:	add	x0, x0, #0x8
  4025d8:	str	x0, [sp, #2160]
  4025dc:	ldr	x0, [sp, #2160]
  4025e0:	ldr	x1, [sp, #2056]
  4025e4:	str	x1, [x0]
  4025e8:	ldr	w0, [sp, #2148]
  4025ec:	str	w0, [sp, #2196]
  4025f0:	b	401ca0 <yyparse+0x5c>
  4025f4:	nop
  4025f8:	str	wzr, [sp, #2144]
  4025fc:	b	40264c <yyparse+0xa08>
  402600:	nop
  402604:	b	40260c <yyparse+0x9c8>
  402608:	nop
  40260c:	mov	w0, #0x1                   	// #1
  402610:	str	w0, [sp, #2144]
  402614:	b	40264c <yyparse+0xa08>
  402618:	nop
  40261c:	b	402624 <yyparse+0x9e0>
  402620:	nop
  402624:	adrp	x0, 405000 <usage+0x8>
  402628:	add	x1, x0, #0x940
  40262c:	adrp	x0, 405000 <usage+0x8>
  402630:	add	x0, x0, #0x908
  402634:	bl	401570 <dgettext@plt>
  402638:	mov	x1, x0
  40263c:	ldr	x0, [sp, #40]
  402640:	bl	402e10 <yyerror>
  402644:	mov	w0, #0x2                   	// #2
  402648:	str	w0, [sp, #2144]
  40264c:	ldr	w0, [sp, #2204]
  402650:	cmn	w0, #0x2
  402654:	b.eq	40269c <yyparse+0xa58>  // b.none
  402658:	ldr	w0, [sp, #2204]
  40265c:	cmp	w0, #0x10c
  402660:	b.hi	402678 <yyparse+0xa34>  // b.pmore
  402664:	adrp	x0, 405000 <usage+0x8>
  402668:	add	x1, x0, #0x640
  40266c:	ldrsw	x0, [sp, #2204]
  402670:	ldrb	w0, [x1, x0]
  402674:	b	40267c <yyparse+0xa38>
  402678:	mov	w0, #0x2                   	// #2
  40267c:	str	w0, [sp, #2140]
  402680:	add	x0, sp, #0x808
  402684:	ldr	x3, [sp, #40]
  402688:	mov	x2, x0
  40268c:	ldr	w1, [sp, #2140]
  402690:	adrp	x0, 405000 <usage+0x8>
  402694:	add	x0, x0, #0x958
  402698:	bl	401a68 <yydestruct>
  40269c:	ldrsw	x0, [sp, #2136]
  4026a0:	lsl	x0, x0, #3
  4026a4:	neg	x0, x0
  4026a8:	ldr	x1, [sp, #2160]
  4026ac:	add	x0, x1, x0
  4026b0:	str	x0, [sp, #2160]
  4026b4:	ldrsw	x0, [sp, #2136]
  4026b8:	lsl	x0, x0, #1
  4026bc:	neg	x0, x0
  4026c0:	ldr	x1, [sp, #2176]
  4026c4:	add	x0, x1, x0
  4026c8:	str	x0, [sp, #2176]
  4026cc:	b	40271c <yyparse+0xad8>
  4026d0:	ldr	x0, [sp, #2176]
  4026d4:	ldrsh	w0, [x0]
  4026d8:	mov	w2, w0
  4026dc:	adrp	x0, 405000 <usage+0x8>
  4026e0:	add	x1, x0, #0x860
  4026e4:	sxtw	x0, w2
  4026e8:	ldrb	w0, [x1, x0]
  4026ec:	ldr	x3, [sp, #40]
  4026f0:	ldr	x2, [sp, #2160]
  4026f4:	mov	w1, w0
  4026f8:	adrp	x0, 405000 <usage+0x8>
  4026fc:	add	x0, x0, #0x978
  402700:	bl	401a68 <yydestruct>
  402704:	ldr	x0, [sp, #2160]
  402708:	sub	x0, x0, #0x8
  40270c:	str	x0, [sp, #2160]
  402710:	ldr	x0, [sp, #2176]
  402714:	sub	x0, x0, #0x2
  402718:	str	x0, [sp, #2176]
  40271c:	ldr	x1, [sp, #2176]
  402720:	ldr	x0, [sp, #2184]
  402724:	cmp	x1, x0
  402728:	b.ne	4026d0 <yyparse+0xa8c>  // b.any
  40272c:	add	x0, sp, #0x678
  402730:	ldr	x1, [sp, #2184]
  402734:	cmp	x1, x0
  402738:	b.eq	402744 <yyparse+0xb00>  // b.none
  40273c:	ldr	x0, [sp, #2184]
  402740:	bl	401580 <free@plt>
  402744:	ldr	w0, [sp, #2144]
  402748:	ldr	x19, [sp, #16]
  40274c:	ldp	x29, x30, [sp]
  402750:	add	sp, sp, #0x8a0
  402754:	ret

0000000000402758 <yylex>:
  402758:	stp	x29, x30, [sp, #-96]!
  40275c:	mov	x29, sp
  402760:	str	x0, [sp, #24]
  402764:	str	x1, [sp, #16]
  402768:	ldr	x0, [sp, #16]
  40276c:	ldr	x0, [x0]
  402770:	str	x0, [sp, #88]
  402774:	ldr	x0, [sp, #88]
  402778:	ldrb	w0, [x0]
  40277c:	cmp	w0, #0x0
  402780:	b.ne	402798 <yylex+0x40>  // b.any
  402784:	ldr	x0, [sp, #16]
  402788:	ldr	x1, [sp, #88]
  40278c:	str	x1, [x0]
  402790:	mov	w0, #0x0                   	// #0
  402794:	b	402e08 <yylex+0x6b0>
  402798:	ldr	x0, [sp, #88]
  40279c:	ldrb	w0, [x0]
  4027a0:	cmp	w0, #0x20
  4027a4:	b.eq	4027b8 <yylex+0x60>  // b.none
  4027a8:	ldr	x0, [sp, #88]
  4027ac:	ldrb	w0, [x0]
  4027b0:	cmp	w0, #0x9
  4027b4:	b.ne	4027c8 <yylex+0x70>  // b.any
  4027b8:	ldr	x0, [sp, #88]
  4027bc:	add	x0, x0, #0x1
  4027c0:	str	x0, [sp, #88]
  4027c4:	b	402774 <yylex+0x1c>
  4027c8:	nop
  4027cc:	ldr	x0, [sp, #16]
  4027d0:	ldr	x1, [x0, #8]
  4027d4:	ldr	x0, [sp, #88]
  4027d8:	sub	x0, x1, x0
  4027dc:	mov	x1, x0
  4027e0:	add	x0, sp, #0x28
  4027e4:	mov	x2, x1
  4027e8:	ldr	x1, [sp, #88]
  4027ec:	bl	401590 <u8_mbtouc@plt>
  4027f0:	str	w0, [sp, #44]
  4027f4:	ldr	w1, [sp, #40]
  4027f8:	mov	w0, #0x2026                	// #8230
  4027fc:	cmp	w1, w0
  402800:	b.ne	402820 <yylex+0xc8>  // b.any
  402804:	ldrsw	x0, [sp, #44]
  402808:	ldr	x1, [sp, #88]
  40280c:	add	x1, x1, x0
  402810:	ldr	x0, [sp, #16]
  402814:	str	x1, [x0]
  402818:	mov	w0, #0x105                 	// #261
  40281c:	b	402e08 <yylex+0x6b0>
  402820:	mov	x2, #0x3                   	// #3
  402824:	ldr	x1, [sp, #88]
  402828:	adrp	x0, 405000 <usage+0x8>
  40282c:	add	x0, x0, #0xa00
  402830:	bl	401430 <strncmp@plt>
  402834:	cmp	w0, #0x0
  402838:	b.ne	402854 <yylex+0xfc>  // b.any
  40283c:	ldr	x0, [sp, #88]
  402840:	add	x1, x0, #0x3
  402844:	ldr	x0, [sp, #16]
  402848:	str	x1, [x0]
  40284c:	mov	w0, #0x105                 	// #261
  402850:	b	402e08 <yylex+0x6b0>
  402854:	mov	x2, #0x2                   	// #2
  402858:	ldr	x1, [sp, #88]
  40285c:	adrp	x0, 405000 <usage+0x8>
  402860:	add	x0, x0, #0xa08
  402864:	bl	401430 <strncmp@plt>
  402868:	cmp	w0, #0x0
  40286c:	b.ne	402888 <yylex+0x130>  // b.any
  402870:	ldr	x0, [sp, #88]
  402874:	add	x1, x0, #0x2
  402878:	ldr	x0, [sp, #16]
  40287c:	str	x1, [x0]
  402880:	mov	w0, #0x104                 	// #260
  402884:	b	402e08 <yylex+0x6b0>
  402888:	mov	x2, #0x5                   	// #5
  40288c:	ldr	x1, [sp, #88]
  402890:	adrp	x0, 405000 <usage+0x8>
  402894:	add	x0, x0, #0xa10
  402898:	bl	401430 <strncmp@plt>
  40289c:	cmp	w0, #0x0
  4028a0:	b.ne	4028bc <yylex+0x164>  // b.any
  4028a4:	ldr	x0, [sp, #88]
  4028a8:	add	x1, x0, #0x5
  4028ac:	ldr	x0, [sp, #16]
  4028b0:	str	x1, [x0]
  4028b4:	mov	w0, #0x106                 	// #262
  4028b8:	b	402e08 <yylex+0x6b0>
  4028bc:	mov	x2, #0x8                   	// #8
  4028c0:	ldr	x1, [sp, #88]
  4028c4:	adrp	x0, 405000 <usage+0x8>
  4028c8:	add	x0, x0, #0xa18
  4028cc:	bl	401430 <strncmp@plt>
  4028d0:	cmp	w0, #0x0
  4028d4:	b.ne	4028f0 <yylex+0x198>  // b.any
  4028d8:	ldr	x0, [sp, #88]
  4028dc:	add	x1, x0, #0x8
  4028e0:	ldr	x0, [sp, #16]
  4028e4:	str	x1, [x0]
  4028e8:	mov	w0, #0x107                 	// #263
  4028ec:	b	402e08 <yylex+0x6b0>
  4028f0:	mov	x2, #0x8                   	// #8
  4028f4:	ldr	x1, [sp, #88]
  4028f8:	adrp	x0, 405000 <usage+0x8>
  4028fc:	add	x0, x0, #0xa28
  402900:	bl	401430 <strncmp@plt>
  402904:	cmp	w0, #0x0
  402908:	b.ne	402924 <yylex+0x1cc>  // b.any
  40290c:	ldr	x0, [sp, #88]
  402910:	add	x1, x0, #0x8
  402914:	ldr	x0, [sp, #16]
  402918:	str	x1, [x0]
  40291c:	mov	w0, #0x108                 	// #264
  402920:	b	402e08 <yylex+0x6b0>
  402924:	ldr	x0, [sp, #88]
  402928:	add	x1, x0, #0x1
  40292c:	str	x1, [sp, #88]
  402930:	ldrb	w0, [x0]
  402934:	str	w0, [sp, #84]
  402938:	ldr	w0, [sp, #84]
  40293c:	cmp	w0, #0x7a
  402940:	b.gt	402df4 <yylex+0x69c>
  402944:	ldr	w0, [sp, #84]
  402948:	cmp	w0, #0x61
  40294c:	b.ge	402b40 <yylex+0x3e8>  // b.tcont
  402950:	ldr	w0, [sp, #84]
  402954:	cmp	w0, #0x21
  402958:	b.eq	402dc0 <yylex+0x668>  // b.none
  40295c:	ldr	w0, [sp, #84]
  402960:	cmp	w0, #0x21
  402964:	b.lt	402df4 <yylex+0x69c>  // b.tstop
  402968:	ldr	w0, [sp, #84]
  40296c:	sub	w0, w0, #0x30
  402970:	cmp	w0, #0x9
  402974:	b.hi	402df4 <yylex+0x69c>  // b.pmore
  402978:	ldr	w0, [sp, #84]
  40297c:	sub	w0, w0, #0x30
  402980:	sxtw	x0, w0
  402984:	str	x0, [sp, #64]
  402988:	b	4029cc <yylex+0x274>
  40298c:	ldr	x1, [sp, #64]
  402990:	mov	x0, x1
  402994:	lsl	x0, x0, #2
  402998:	add	x0, x0, x1
  40299c:	lsl	x0, x0, #1
  4029a0:	str	x0, [sp, #64]
  4029a4:	ldr	x0, [sp, #88]
  4029a8:	ldrb	w0, [x0]
  4029ac:	sub	w0, w0, #0x30
  4029b0:	sxtw	x0, w0
  4029b4:	ldr	x1, [sp, #64]
  4029b8:	add	x0, x1, x0
  4029bc:	str	x0, [sp, #64]
  4029c0:	ldr	x0, [sp, #88]
  4029c4:	add	x0, x0, #0x1
  4029c8:	str	x0, [sp, #88]
  4029cc:	ldr	x0, [sp, #88]
  4029d0:	ldrb	w0, [x0]
  4029d4:	cmp	w0, #0x2f
  4029d8:	b.ls	4029ec <yylex+0x294>  // b.plast
  4029dc:	ldr	x0, [sp, #88]
  4029e0:	ldrb	w0, [x0]
  4029e4:	cmp	w0, #0x39
  4029e8:	b.ls	40298c <yylex+0x234>  // b.plast
  4029ec:	mov	x0, #0x18                  	// #24
  4029f0:	bl	401470 <xmalloc@plt>
  4029f4:	mov	x1, x0
  4029f8:	ldr	x0, [sp, #24]
  4029fc:	str	x1, [x0]
  402a00:	ldr	x0, [sp, #88]
  402a04:	ldrb	w0, [x0]
  402a08:	cmp	w0, #0x2e
  402a0c:	b.ne	402b18 <yylex+0x3c0>  // b.any
  402a10:	ldr	x0, [sp, #88]
  402a14:	add	x0, x0, #0x1
  402a18:	ldrb	w0, [x0]
  402a1c:	cmp	w0, #0x2f
  402a20:	b.ls	402b18 <yylex+0x3c0>  // b.plast
  402a24:	ldr	x0, [sp, #88]
  402a28:	add	x0, x0, #0x1
  402a2c:	ldrb	w0, [x0]
  402a30:	cmp	w0, #0x39
  402a34:	b.hi	402b18 <yylex+0x3c0>  // b.pmore
  402a38:	ldr	d0, [sp, #64]
  402a3c:	ucvtf	d0, d0
  402a40:	str	d0, [sp, #56]
  402a44:	mov	w0, #0xa                   	// #10
  402a48:	str	w0, [sp, #52]
  402a4c:	str	wzr, [sp, #48]
  402a50:	ldr	x0, [sp, #88]
  402a54:	add	x0, x0, #0x1
  402a58:	str	x0, [sp, #88]
  402a5c:	b	402ab8 <yylex+0x360>
  402a60:	ldr	x0, [sp, #88]
  402a64:	ldrb	w0, [x0]
  402a68:	sub	w0, w0, #0x30
  402a6c:	scvtf	d1, w0
  402a70:	ldr	w0, [sp, #52]
  402a74:	scvtf	d0, w0
  402a78:	fdiv	d0, d1, d0
  402a7c:	ldr	d1, [sp, #56]
  402a80:	fadd	d0, d1, d0
  402a84:	str	d0, [sp, #56]
  402a88:	ldr	w1, [sp, #52]
  402a8c:	mov	w0, w1
  402a90:	lsl	w0, w0, #2
  402a94:	add	w0, w0, w1
  402a98:	lsl	w0, w0, #1
  402a9c:	str	w0, [sp, #52]
  402aa0:	ldr	w0, [sp, #48]
  402aa4:	add	w0, w0, #0x1
  402aa8:	str	w0, [sp, #48]
  402aac:	ldr	x0, [sp, #88]
  402ab0:	add	x0, x0, #0x1
  402ab4:	str	x0, [sp, #88]
  402ab8:	ldr	x0, [sp, #88]
  402abc:	ldrb	w0, [x0]
  402ac0:	cmp	w0, #0x2f
  402ac4:	b.ls	402ad8 <yylex+0x380>  // b.plast
  402ac8:	ldr	x0, [sp, #88]
  402acc:	ldrb	w0, [x0]
  402ad0:	cmp	w0, #0x39
  402ad4:	b.ls	402a60 <yylex+0x308>  // b.plast
  402ad8:	ldr	x0, [sp, #24]
  402adc:	ldr	x0, [x0]
  402ae0:	mov	w1, #0x1                   	// #1
  402ae4:	str	w1, [x0]
  402ae8:	ldr	x0, [sp, #24]
  402aec:	ldr	x0, [x0]
  402af0:	ldr	d0, [sp, #56]
  402af4:	str	d0, [x0, #8]
  402af8:	ldr	x0, [sp, #24]
  402afc:	ldr	x0, [x0]
  402b00:	ldr	w1, [sp, #48]
  402b04:	str	w1, [x0, #16]
  402b08:	mov	w0, #0x10b                 	// #267
  402b0c:	str	w0, [sp, #84]
  402b10:	nop
  402b14:	b	402df8 <yylex+0x6a0>
  402b18:	ldr	x0, [sp, #24]
  402b1c:	ldr	x0, [x0]
  402b20:	str	wzr, [x0]
  402b24:	ldr	x0, [sp, #24]
  402b28:	ldr	x0, [x0]
  402b2c:	ldr	x1, [sp, #64]
  402b30:	str	w1, [x0, #8]
  402b34:	mov	w0, #0x10a                 	// #266
  402b38:	str	w0, [sp, #84]
  402b3c:	b	402df8 <yylex+0x6a0>
  402b40:	str	xzr, [sp, #72]
  402b44:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402b48:	add	x0, x0, #0x1f8
  402b4c:	ldr	x0, [x0]
  402b50:	ldr	x1, [sp, #72]
  402b54:	cmp	x1, x0
  402b58:	b.cc	402bb0 <yylex+0x458>  // b.lo, b.ul, b.last
  402b5c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402b60:	add	x0, x0, #0x1f8
  402b64:	ldr	x0, [x0]
  402b68:	add	x0, x0, #0x5
  402b6c:	lsl	x1, x0, #1
  402b70:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402b74:	add	x0, x0, #0x1f8
  402b78:	str	x1, [x0]
  402b7c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402b80:	add	x0, x0, #0x200
  402b84:	ldr	x2, [x0]
  402b88:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402b8c:	add	x0, x0, #0x1f8
  402b90:	ldr	x0, [x0]
  402b94:	mov	x1, x0
  402b98:	mov	x0, x2
  402b9c:	bl	401400 <xrealloc@plt>
  402ba0:	mov	x1, x0
  402ba4:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402ba8:	add	x0, x0, #0x200
  402bac:	str	x1, [x0]
  402bb0:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402bb4:	add	x0, x0, #0x200
  402bb8:	ldr	x1, [x0]
  402bbc:	ldr	x0, [sp, #72]
  402bc0:	add	x2, x0, #0x1
  402bc4:	str	x2, [sp, #72]
  402bc8:	add	x0, x1, x0
  402bcc:	ldr	w1, [sp, #84]
  402bd0:	and	w1, w1, #0xff
  402bd4:	strb	w1, [x0]
  402bd8:	ldr	x0, [sp, #88]
  402bdc:	ldrb	w0, [x0]
  402be0:	str	w0, [sp, #84]
  402be4:	ldr	w0, [sp, #84]
  402be8:	sub	w0, w0, #0x61
  402bec:	cmp	w0, #0x19
  402bf0:	b.hi	402c04 <yylex+0x4ac>  // b.pmore
  402bf4:	ldr	x0, [sp, #88]
  402bf8:	add	x0, x0, #0x1
  402bfc:	str	x0, [sp, #88]
  402c00:	b	402b44 <yylex+0x3ec>
  402c04:	nop
  402c08:	nop
  402c0c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c10:	add	x0, x0, #0x1f8
  402c14:	ldr	x0, [x0]
  402c18:	ldr	x1, [sp, #72]
  402c1c:	cmp	x1, x0
  402c20:	b.cc	402c78 <yylex+0x520>  // b.lo, b.ul, b.last
  402c24:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c28:	add	x0, x0, #0x1f8
  402c2c:	ldr	x0, [x0]
  402c30:	add	x0, x0, #0x5
  402c34:	lsl	x1, x0, #1
  402c38:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c3c:	add	x0, x0, #0x1f8
  402c40:	str	x1, [x0]
  402c44:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c48:	add	x0, x0, #0x200
  402c4c:	ldr	x2, [x0]
  402c50:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c54:	add	x0, x0, #0x1f8
  402c58:	ldr	x0, [x0]
  402c5c:	mov	x1, x0
  402c60:	mov	x0, x2
  402c64:	bl	401400 <xrealloc@plt>
  402c68:	mov	x1, x0
  402c6c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c70:	add	x0, x0, #0x200
  402c74:	str	x1, [x0]
  402c78:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402c7c:	add	x0, x0, #0x200
  402c80:	ldr	x1, [x0]
  402c84:	ldr	x0, [sp, #72]
  402c88:	add	x0, x1, x0
  402c8c:	strb	wzr, [x0]
  402c90:	ldr	x0, [sp, #72]
  402c94:	cmp	x0, #0x1
  402c98:	b.ne	402d1c <yylex+0x5c4>  // b.any
  402c9c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402ca0:	add	x0, x0, #0x200
  402ca4:	ldr	x0, [x0]
  402ca8:	ldrb	w0, [x0]
  402cac:	sub	w0, w0, #0x66
  402cb0:	cmp	w0, #0x11
  402cb4:	cset	w1, hi  // hi = pmore
  402cb8:	and	w1, w1, #0xff
  402cbc:	cmp	w1, #0x0
  402cc0:	b.ne	402d24 <yylex+0x5cc>  // b.any
  402cc4:	mov	x1, #0x1                   	// #1
  402cc8:	lsl	x1, x1, x0
  402ccc:	mov	x0, #0x4109                	// #16649
  402cd0:	movk	x0, #0x3, lsl #16
  402cd4:	and	x0, x1, x0
  402cd8:	cmp	x0, #0x0
  402cdc:	cset	w0, ne  // ne = any
  402ce0:	and	w0, w0, #0xff
  402ce4:	cmp	w0, #0x0
  402ce8:	b.eq	402d24 <yylex+0x5cc>  // b.none
  402cec:	ldr	x0, [sp, #16]
  402cf0:	ldr	x1, [sp, #88]
  402cf4:	str	x1, [x0]
  402cf8:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402cfc:	add	x0, x0, #0x200
  402d00:	ldr	x0, [x0]
  402d04:	ldrb	w0, [x0]
  402d08:	mov	w1, w0
  402d0c:	ldr	x0, [sp, #24]
  402d10:	str	w1, [x0]
  402d14:	mov	w0, #0x10c                 	// #268
  402d18:	b	402e08 <yylex+0x6b0>
  402d1c:	nop
  402d20:	b	402d28 <yylex+0x5d0>
  402d24:	nop
  402d28:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402d2c:	add	x0, x0, #0x200
  402d30:	ldr	x2, [x0]
  402d34:	adrp	x0, 405000 <usage+0x8>
  402d38:	add	x1, x0, #0xa38
  402d3c:	mov	x0, x2
  402d40:	bl	401530 <strcmp@plt>
  402d44:	cmp	w0, #0x0
  402d48:	b.ne	402d60 <yylex+0x608>  // b.any
  402d4c:	ldr	x0, [sp, #16]
  402d50:	ldr	x1, [sp, #88]
  402d54:	str	x1, [x0]
  402d58:	mov	w0, #0x102                 	// #258
  402d5c:	b	402e08 <yylex+0x6b0>
  402d60:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402d64:	add	x0, x0, #0x200
  402d68:	ldr	x2, [x0]
  402d6c:	adrp	x0, 405000 <usage+0x8>
  402d70:	add	x1, x0, #0xa40
  402d74:	mov	x0, x2
  402d78:	bl	401530 <strcmp@plt>
  402d7c:	cmp	w0, #0x0
  402d80:	b.ne	402d98 <yylex+0x640>  // b.any
  402d84:	ldr	x0, [sp, #16]
  402d88:	ldr	x1, [sp, #88]
  402d8c:	str	x1, [x0]
  402d90:	mov	w0, #0x103                 	// #259
  402d94:	b	402e08 <yylex+0x6b0>
  402d98:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402d9c:	add	x0, x0, #0x200
  402da0:	ldr	x0, [x0]
  402da4:	bl	401480 <xstrdup@plt>
  402da8:	mov	x1, x0
  402dac:	ldr	x0, [sp, #24]
  402db0:	str	x1, [x0]
  402db4:	mov	w0, #0x109                 	// #265
  402db8:	str	w0, [sp, #84]
  402dbc:	b	402df8 <yylex+0x6a0>
  402dc0:	ldr	x0, [sp, #88]
  402dc4:	ldrb	w0, [x0]
  402dc8:	cmp	w0, #0x3d
  402dcc:	b.ne	402de8 <yylex+0x690>  // b.any
  402dd0:	ldr	x0, [sp, #88]
  402dd4:	add	x0, x0, #0x1
  402dd8:	str	x0, [sp, #88]
  402ddc:	mov	w0, #0x21                  	// #33
  402de0:	str	w0, [sp, #84]
  402de4:	b	402df8 <yylex+0x6a0>
  402de8:	mov	w0, #0x100                 	// #256
  402dec:	str	w0, [sp, #84]
  402df0:	b	402df8 <yylex+0x6a0>
  402df4:	nop
  402df8:	ldr	x0, [sp, #16]
  402dfc:	ldr	x1, [sp, #88]
  402e00:	str	x1, [x0]
  402e04:	ldr	w0, [sp, #84]
  402e08:	ldp	x29, x30, [sp], #96
  402e0c:	ret

0000000000402e10 <yyerror>:
  402e10:	stp	x29, x30, [sp, #-32]!
  402e14:	mov	x29, sp
  402e18:	str	x0, [sp, #24]
  402e1c:	str	x1, [sp, #16]
  402e20:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  402e24:	add	x0, x0, #0x1c0
  402e28:	ldr	x3, [x0]
  402e2c:	ldr	x2, [sp, #16]
  402e30:	adrp	x0, 405000 <usage+0x8>
  402e34:	add	x1, x0, #0xa48
  402e38:	mov	x0, x3
  402e3c:	bl	401640 <fprintf@plt>
  402e40:	nop
  402e44:	ldp	x29, x30, [sp], #32
  402e48:	ret

0000000000402e4c <cldr_plural_range_free>:
  402e4c:	stp	x29, x30, [sp, #-32]!
  402e50:	mov	x29, sp
  402e54:	str	x0, [sp, #24]
  402e58:	ldr	x0, [sp, #24]
  402e5c:	ldr	x1, [x0]
  402e60:	ldr	x0, [sp, #24]
  402e64:	ldr	x0, [x0, #8]
  402e68:	cmp	x1, x0
  402e6c:	b.eq	402e7c <cldr_plural_range_free+0x30>  // b.none
  402e70:	ldr	x0, [sp, #24]
  402e74:	ldr	x0, [x0]
  402e78:	bl	401580 <free@plt>
  402e7c:	ldr	x0, [sp, #24]
  402e80:	ldr	x0, [x0, #8]
  402e84:	bl	401580 <free@plt>
  402e88:	ldr	x0, [sp, #24]
  402e8c:	bl	401580 <free@plt>
  402e90:	nop
  402e94:	ldp	x29, x30, [sp], #32
  402e98:	ret

0000000000402e9c <cldr_plural_range_list_free>:
  402e9c:	stp	x29, x30, [sp, #-32]!
  402ea0:	mov	x29, sp
  402ea4:	str	x0, [sp, #24]
  402ea8:	b	402ecc <cldr_plural_range_list_free+0x30>
  402eac:	ldr	x0, [sp, #24]
  402eb0:	ldr	x1, [x0]
  402eb4:	ldr	x0, [sp, #24]
  402eb8:	ldr	x0, [x0, #8]
  402ebc:	lsl	x0, x0, #3
  402ec0:	add	x0, x1, x0
  402ec4:	ldr	x0, [x0]
  402ec8:	bl	402e4c <cldr_plural_range_free>
  402ecc:	ldr	x0, [sp, #24]
  402ed0:	ldr	x0, [x0, #8]
  402ed4:	sub	x2, x0, #0x1
  402ed8:	ldr	x1, [sp, #24]
  402edc:	str	x2, [x1, #8]
  402ee0:	cmp	x0, #0x0
  402ee4:	b.ne	402eac <cldr_plural_range_list_free+0x10>  // b.any
  402ee8:	ldr	x0, [sp, #24]
  402eec:	ldr	x0, [x0]
  402ef0:	bl	401580 <free@plt>
  402ef4:	ldr	x0, [sp, #24]
  402ef8:	bl	401580 <free@plt>
  402efc:	nop
  402f00:	ldp	x29, x30, [sp], #32
  402f04:	ret

0000000000402f08 <cldr_plural_condition_free>:
  402f08:	stp	x29, x30, [sp, #-32]!
  402f0c:	mov	x29, sp
  402f10:	str	x0, [sp, #24]
  402f14:	ldr	x0, [sp, #24]
  402f18:	ldr	w0, [x0]
  402f1c:	cmp	w0, #0x0
  402f20:	b.eq	402f34 <cldr_plural_condition_free+0x2c>  // b.none
  402f24:	ldr	x0, [sp, #24]
  402f28:	ldr	w0, [x0]
  402f2c:	cmp	w0, #0x1
  402f30:	b.ne	402f50 <cldr_plural_condition_free+0x48>  // b.any
  402f34:	ldr	x0, [sp, #24]
  402f38:	ldr	x0, [x0, #8]
  402f3c:	bl	402f08 <cldr_plural_condition_free>
  402f40:	ldr	x0, [sp, #24]
  402f44:	ldr	x0, [x0, #16]
  402f48:	bl	402f08 <cldr_plural_condition_free>
  402f4c:	b	402f6c <cldr_plural_condition_free+0x64>
  402f50:	ldr	x0, [sp, #24]
  402f54:	ldr	w0, [x0]
  402f58:	cmp	w0, #0x2
  402f5c:	b.ne	402f6c <cldr_plural_condition_free+0x64>  // b.any
  402f60:	ldr	x0, [sp, #24]
  402f64:	ldr	x0, [x0, #8]
  402f68:	bl	402f80 <cldr_plural_relation_free>
  402f6c:	ldr	x0, [sp, #24]
  402f70:	bl	401580 <free@plt>
  402f74:	nop
  402f78:	ldp	x29, x30, [sp], #32
  402f7c:	ret

0000000000402f80 <cldr_plural_relation_free>:
  402f80:	stp	x29, x30, [sp, #-32]!
  402f84:	mov	x29, sp
  402f88:	str	x0, [sp, #24]
  402f8c:	ldr	x0, [sp, #24]
  402f90:	ldr	x0, [x0]
  402f94:	bl	401580 <free@plt>
  402f98:	ldr	x0, [sp, #24]
  402f9c:	ldr	x0, [x0, #16]
  402fa0:	bl	402e9c <cldr_plural_range_list_free>
  402fa4:	ldr	x0, [sp, #24]
  402fa8:	bl	401580 <free@plt>
  402fac:	nop
  402fb0:	ldp	x29, x30, [sp], #32
  402fb4:	ret

0000000000402fb8 <cldr_plural_rule_free>:
  402fb8:	stp	x29, x30, [sp, #-32]!
  402fbc:	mov	x29, sp
  402fc0:	str	x0, [sp, #24]
  402fc4:	ldr	x0, [sp, #24]
  402fc8:	ldr	x0, [x0]
  402fcc:	bl	401580 <free@plt>
  402fd0:	ldr	x0, [sp, #24]
  402fd4:	ldr	x0, [x0, #8]
  402fd8:	bl	402f08 <cldr_plural_condition_free>
  402fdc:	ldr	x0, [sp, #24]
  402fe0:	bl	401580 <free@plt>
  402fe4:	nop
  402fe8:	ldp	x29, x30, [sp], #32
  402fec:	ret

0000000000402ff0 <cldr_plural_rule_list_free>:
  402ff0:	stp	x29, x30, [sp, #-32]!
  402ff4:	mov	x29, sp
  402ff8:	str	x0, [sp, #24]
  402ffc:	b	403020 <cldr_plural_rule_list_free+0x30>
  403000:	ldr	x0, [sp, #24]
  403004:	ldr	x1, [x0]
  403008:	ldr	x0, [sp, #24]
  40300c:	ldr	x0, [x0, #8]
  403010:	lsl	x0, x0, #3
  403014:	add	x0, x1, x0
  403018:	ldr	x0, [x0]
  40301c:	bl	402fb8 <cldr_plural_rule_free>
  403020:	ldr	x0, [sp, #24]
  403024:	ldr	x0, [x0, #8]
  403028:	sub	x2, x0, #0x1
  40302c:	ldr	x1, [sp, #24]
  403030:	str	x2, [x1, #8]
  403034:	cmp	x0, #0x0
  403038:	b.ne	403000 <cldr_plural_rule_list_free+0x10>  // b.any
  40303c:	ldr	x0, [sp, #24]
  403040:	ldr	x0, [x0]
  403044:	bl	401580 <free@plt>
  403048:	ldr	x0, [sp, #24]
  40304c:	bl	401580 <free@plt>
  403050:	nop
  403054:	ldp	x29, x30, [sp], #32
  403058:	ret

000000000040305c <cldr_plural_parse>:
  40305c:	stp	x29, x30, [sp, #-64]!
  403060:	mov	x29, sp
  403064:	str	x0, [sp, #24]
  403068:	add	x0, sp, #0x28
  40306c:	mov	x2, #0x18                  	// #24
  403070:	mov	w1, #0x0                   	// #0
  403074:	bl	401460 <memset@plt>
  403078:	ldr	x0, [sp, #24]
  40307c:	str	x0, [sp, #40]
  403080:	ldr	x0, [sp, #24]
  403084:	bl	401330 <strlen@plt>
  403088:	mov	x1, x0
  40308c:	ldr	x0, [sp, #24]
  403090:	add	x0, x0, x1
  403094:	str	x0, [sp, #48]
  403098:	mov	x0, #0x18                  	// #24
  40309c:	bl	401470 <xmalloc@plt>
  4030a0:	str	x0, [sp, #56]
  4030a4:	ldr	x0, [sp, #56]
  4030a8:	mov	x2, #0x18                  	// #24
  4030ac:	mov	w1, #0x0                   	// #0
  4030b0:	bl	401460 <memset@plt>
  4030b4:	add	x0, sp, #0x28
  4030b8:	bl	401c44 <yyparse>
  4030bc:	cmp	w0, #0x0
  4030c0:	b.eq	4030cc <cldr_plural_parse+0x70>  // b.none
  4030c4:	mov	x0, #0x0                   	// #0
  4030c8:	b	4030d0 <cldr_plural_parse+0x74>
  4030cc:	ldr	x0, [sp, #56]
  4030d0:	ldp	x29, x30, [sp], #64
  4030d4:	ret

00000000004030d8 <eval_relation>:
  4030d8:	sub	sp, sp, #0x40
  4030dc:	str	x0, [sp, #8]
  4030e0:	ldr	x0, [sp, #8]
  4030e4:	ldr	x0, [x0]
  4030e8:	ldr	w0, [x0]
  4030ec:	sub	w0, w0, #0x66
  4030f0:	cmp	w0, #0x11
  4030f4:	cset	w1, hi  // hi = pmore
  4030f8:	and	w1, w1, #0xff
  4030fc:	cmp	w1, #0x0
  403100:	b.ne	40340c <eval_relation+0x334>  // b.any
  403104:	mov	x1, #0x1                   	// #1
  403108:	lsl	x0, x1, x0
  40310c:	mov	x1, #0x4001                	// #16385
  403110:	movk	x1, #0x3, lsl #16
  403114:	and	x1, x0, x1
  403118:	cmp	x1, #0x0
  40311c:	cset	w1, ne  // ne = any
  403120:	and	w1, w1, #0xff
  403124:	cmp	w1, #0x0
  403128:	b.ne	403250 <eval_relation+0x178>  // b.any
  40312c:	mov	x1, #0x108                 	// #264
  403130:	and	x0, x0, x1
  403134:	cmp	x0, #0x0
  403138:	cset	w0, ne  // ne = any
  40313c:	and	w0, w0, #0xff
  403140:	cmp	w0, #0x0
  403144:	b.eq	40340c <eval_relation+0x334>  // b.none
  403148:	str	xzr, [sp, #56]
  40314c:	b	403224 <eval_relation+0x14c>
  403150:	ldr	x0, [sp, #8]
  403154:	ldr	x0, [x0, #16]
  403158:	ldr	x1, [x0]
  40315c:	ldr	x0, [sp, #56]
  403160:	lsl	x0, x0, #3
  403164:	add	x0, x1, x0
  403168:	ldr	x0, [x0]
  40316c:	str	x0, [sp, #40]
  403170:	ldr	x0, [sp, #40]
  403174:	ldr	x0, [x0]
  403178:	ldr	w0, [x0]
  40317c:	cmp	w0, #0x1
  403180:	b.ne	4031dc <eval_relation+0x104>  // b.any
  403184:	ldr	x0, [sp, #40]
  403188:	ldr	x0, [x0]
  40318c:	ldr	d0, [x0, #8]
  403190:	fcvtzs	w0, d0
  403194:	str	w0, [sp, #36]
  403198:	ldr	x0, [sp, #40]
  40319c:	ldr	x0, [x0]
  4031a0:	str	wzr, [x0]
  4031a4:	ldr	x0, [sp, #40]
  4031a8:	ldr	x0, [x0]
  4031ac:	ldr	d1, [x0, #8]
  4031b0:	ldr	w0, [sp, #36]
  4031b4:	scvtf	d0, w0
  4031b8:	fcmp	d1, d0
  4031bc:	b.eq	4031cc <eval_relation+0xf4>  // b.none
  4031c0:	ldr	w0, [sp, #36]
  4031c4:	add	w0, w0, #0x1
  4031c8:	b	4031d0 <eval_relation+0xf8>
  4031cc:	ldr	w0, [sp, #36]
  4031d0:	ldr	x1, [sp, #40]
  4031d4:	ldr	x1, [x1]
  4031d8:	str	w0, [x1, #8]
  4031dc:	ldr	x0, [sp, #40]
  4031e0:	ldr	x0, [x0, #8]
  4031e4:	ldr	w0, [x0]
  4031e8:	cmp	w0, #0x1
  4031ec:	b.ne	403218 <eval_relation+0x140>  // b.any
  4031f0:	ldr	x0, [sp, #40]
  4031f4:	ldr	x0, [x0, #8]
  4031f8:	str	wzr, [x0]
  4031fc:	ldr	x0, [sp, #40]
  403200:	ldr	x0, [x0, #8]
  403204:	ldr	d0, [x0, #8]
  403208:	ldr	x0, [sp, #40]
  40320c:	ldr	x0, [x0, #8]
  403210:	fcvtzs	w1, d0
  403214:	str	w1, [x0, #8]
  403218:	ldr	x0, [sp, #56]
  40321c:	add	x0, x0, #0x1
  403220:	str	x0, [sp, #56]
  403224:	ldr	x0, [sp, #8]
  403228:	ldr	x0, [x0, #16]
  40322c:	ldr	x0, [x0, #8]
  403230:	ldr	x1, [sp, #56]
  403234:	cmp	x1, x0
  403238:	b.cc	403150 <eval_relation+0x78>  // b.lo, b.ul, b.last
  40323c:	ldr	x0, [sp, #8]
  403240:	ldr	x0, [x0]
  403244:	mov	w1, #0x69                  	// #105
  403248:	str	w1, [x0]
  40324c:	b	40340c <eval_relation+0x334>
  403250:	str	xzr, [sp, #48]
  403254:	b	4033ec <eval_relation+0x314>
  403258:	ldr	x0, [sp, #8]
  40325c:	ldr	x0, [x0, #16]
  403260:	ldr	x1, [x0]
  403264:	ldr	x0, [sp, #48]
  403268:	lsl	x0, x0, #3
  40326c:	add	x0, x1, x0
  403270:	ldr	x0, [x0]
  403274:	str	x0, [sp, #24]
  403278:	ldr	x0, [sp, #8]
  40327c:	ldr	w0, [x0, #8]
  403280:	cmp	w0, #0x0
  403284:	b.ne	403328 <eval_relation+0x250>  // b.any
  403288:	ldr	x0, [sp, #24]
  40328c:	ldr	x0, [x0]
  403290:	ldr	w0, [x0]
  403294:	cmp	w0, #0x0
  403298:	b.ne	4032b0 <eval_relation+0x1d8>  // b.any
  40329c:	ldr	x0, [sp, #24]
  4032a0:	ldr	x0, [x0]
  4032a4:	ldr	w0, [x0, #8]
  4032a8:	cmp	w0, #0x0
  4032ac:	b.eq	4032d8 <eval_relation+0x200>  // b.none
  4032b0:	ldr	x0, [sp, #24]
  4032b4:	ldr	x0, [x0]
  4032b8:	ldr	w0, [x0]
  4032bc:	cmp	w0, #0x1
  4032c0:	b.ne	4033d8 <eval_relation+0x300>  // b.any
  4032c4:	ldr	x0, [sp, #24]
  4032c8:	ldr	x0, [x0]
  4032cc:	ldr	d0, [x0, #8]
  4032d0:	fcmp	d0, #0.0
  4032d4:	b.ne	4033d8 <eval_relation+0x300>  // b.any
  4032d8:	ldr	x0, [sp, #24]
  4032dc:	ldr	x0, [x0, #8]
  4032e0:	ldr	w0, [x0]
  4032e4:	cmp	w0, #0x0
  4032e8:	b.ne	403300 <eval_relation+0x228>  // b.any
  4032ec:	ldr	x0, [sp, #24]
  4032f0:	ldr	x0, [x0, #8]
  4032f4:	ldr	w0, [x0, #8]
  4032f8:	cmp	w0, #0x0
  4032fc:	b.eq	403328 <eval_relation+0x250>  // b.none
  403300:	ldr	x0, [sp, #24]
  403304:	ldr	x0, [x0, #8]
  403308:	ldr	w0, [x0]
  40330c:	cmp	w0, #0x1
  403310:	b.ne	4033d8 <eval_relation+0x300>  // b.any
  403314:	ldr	x0, [sp, #24]
  403318:	ldr	x0, [x0, #8]
  40331c:	ldr	d0, [x0, #8]
  403320:	fcmp	d0, #0.0
  403324:	b.ne	4033d8 <eval_relation+0x300>  // b.any
  403328:	ldr	x0, [sp, #8]
  40332c:	ldr	w0, [x0, #8]
  403330:	cmp	w0, #0x1
  403334:	b.ne	4033e0 <eval_relation+0x308>  // b.any
  403338:	ldr	x0, [sp, #24]
  40333c:	ldr	x0, [x0]
  403340:	ldr	w0, [x0]
  403344:	cmp	w0, #0x0
  403348:	b.ne	403360 <eval_relation+0x288>  // b.any
  40334c:	ldr	x0, [sp, #24]
  403350:	ldr	x0, [x0]
  403354:	ldr	w0, [x0, #8]
  403358:	cmp	w0, #0x0
  40335c:	b.eq	4033d8 <eval_relation+0x300>  // b.none
  403360:	ldr	x0, [sp, #24]
  403364:	ldr	x0, [x0]
  403368:	ldr	w0, [x0]
  40336c:	cmp	w0, #0x1
  403370:	b.ne	403388 <eval_relation+0x2b0>  // b.any
  403374:	ldr	x0, [sp, #24]
  403378:	ldr	x0, [x0]
  40337c:	ldr	d0, [x0, #8]
  403380:	fcmp	d0, #0.0
  403384:	b.eq	4033d8 <eval_relation+0x300>  // b.none
  403388:	ldr	x0, [sp, #24]
  40338c:	ldr	x0, [x0, #8]
  403390:	ldr	w0, [x0]
  403394:	cmp	w0, #0x0
  403398:	b.ne	4033b0 <eval_relation+0x2d8>  // b.any
  40339c:	ldr	x0, [sp, #24]
  4033a0:	ldr	x0, [x0, #8]
  4033a4:	ldr	w0, [x0, #8]
  4033a8:	cmp	w0, #0x0
  4033ac:	b.eq	4033d8 <eval_relation+0x300>  // b.none
  4033b0:	ldr	x0, [sp, #24]
  4033b4:	ldr	x0, [x0, #8]
  4033b8:	ldr	w0, [x0]
  4033bc:	cmp	w0, #0x1
  4033c0:	b.ne	4033e0 <eval_relation+0x308>  // b.any
  4033c4:	ldr	x0, [sp, #24]
  4033c8:	ldr	x0, [x0, #8]
  4033cc:	ldr	d0, [x0, #8]
  4033d0:	fcmp	d0, #0.0
  4033d4:	b.ne	4033e0 <eval_relation+0x308>  // b.any
  4033d8:	mov	w0, #0x4                   	// #4
  4033dc:	b	403410 <eval_relation+0x338>
  4033e0:	ldr	x0, [sp, #48]
  4033e4:	add	x0, x0, #0x1
  4033e8:	str	x0, [sp, #48]
  4033ec:	ldr	x0, [sp, #8]
  4033f0:	ldr	x0, [x0, #16]
  4033f4:	ldr	x0, [x0, #8]
  4033f8:	ldr	x1, [sp, #48]
  4033fc:	cmp	x1, x0
  403400:	b.cc	403258 <eval_relation+0x180>  // b.lo, b.ul, b.last
  403404:	mov	w0, #0x3                   	// #3
  403408:	b	403410 <eval_relation+0x338>
  40340c:	mov	w0, #0x2                   	// #2
  403410:	add	sp, sp, #0x40
  403414:	ret

0000000000403418 <eval_condition>:
  403418:	stp	x29, x30, [sp, #-80]!
  40341c:	mov	x29, sp
  403420:	str	x0, [sp, #24]
  403424:	ldr	x0, [sp, #24]
  403428:	ldr	w0, [x0]
  40342c:	cmp	w0, #0x0
  403430:	b.ne	4035ac <eval_condition+0x194>  // b.any
  403434:	ldr	x0, [sp, #24]
  403438:	ldr	x0, [x0, #8]
  40343c:	bl	403418 <eval_condition>
  403440:	ldr	x0, [sp, #24]
  403444:	ldr	x0, [x0, #16]
  403448:	bl	403418 <eval_condition>
  40344c:	ldr	x0, [sp, #24]
  403450:	ldr	x0, [x0, #8]
  403454:	ldr	w0, [x0]
  403458:	cmp	w0, #0x4
  40345c:	b.eq	403474 <eval_condition+0x5c>  // b.none
  403460:	ldr	x0, [sp, #24]
  403464:	ldr	x0, [x0, #16]
  403468:	ldr	w0, [x0]
  40346c:	cmp	w0, #0x4
  403470:	b.ne	40349c <eval_condition+0x84>  // b.any
  403474:	ldr	x0, [sp, #24]
  403478:	ldr	x0, [x0, #8]
  40347c:	bl	402f08 <cldr_plural_condition_free>
  403480:	ldr	x0, [sp, #24]
  403484:	ldr	x0, [x0, #16]
  403488:	bl	402f08 <cldr_plural_condition_free>
  40348c:	ldr	x0, [sp, #24]
  403490:	mov	w1, #0x4                   	// #4
  403494:	str	w1, [x0]
  403498:	b	403778 <eval_condition+0x360>
  40349c:	ldr	x0, [sp, #24]
  4034a0:	ldr	x0, [x0, #8]
  4034a4:	ldr	w0, [x0]
  4034a8:	cmp	w0, #0x3
  4034ac:	b.ne	4034ec <eval_condition+0xd4>  // b.any
  4034b0:	ldr	x0, [sp, #24]
  4034b4:	ldr	x0, [x0, #16]
  4034b8:	ldr	w0, [x0]
  4034bc:	cmp	w0, #0x3
  4034c0:	b.ne	4034ec <eval_condition+0xd4>  // b.any
  4034c4:	ldr	x0, [sp, #24]
  4034c8:	ldr	x0, [x0, #8]
  4034cc:	bl	402f08 <cldr_plural_condition_free>
  4034d0:	ldr	x0, [sp, #24]
  4034d4:	ldr	x0, [x0, #16]
  4034d8:	bl	402f08 <cldr_plural_condition_free>
  4034dc:	ldr	x0, [sp, #24]
  4034e0:	mov	w1, #0x3                   	// #3
  4034e4:	str	w1, [x0]
  4034e8:	b	403778 <eval_condition+0x360>
  4034ec:	ldr	x0, [sp, #24]
  4034f0:	ldr	x0, [x0, #8]
  4034f4:	ldr	w0, [x0]
  4034f8:	cmp	w0, #0x3
  4034fc:	b.ne	40354c <eval_condition+0x134>  // b.any
  403500:	ldr	x0, [sp, #24]
  403504:	ldr	x0, [x0, #16]
  403508:	str	x0, [sp, #40]
  40350c:	ldr	x0, [sp, #24]
  403510:	ldr	x0, [x0, #8]
  403514:	bl	402f08 <cldr_plural_condition_free>
  403518:	ldr	x0, [sp, #24]
  40351c:	ldr	x0, [x0, #16]
  403520:	ldr	w1, [x0]
  403524:	ldr	x0, [sp, #24]
  403528:	str	w1, [x0]
  40352c:	ldr	x0, [sp, #24]
  403530:	ldr	x0, [x0, #16]
  403534:	ldr	x2, [sp, #24]
  403538:	ldp	x0, x1, [x0, #8]
  40353c:	stp	x0, x1, [x2, #8]
  403540:	ldr	x0, [sp, #40]
  403544:	bl	401580 <free@plt>
  403548:	b	403778 <eval_condition+0x360>
  40354c:	ldr	x0, [sp, #24]
  403550:	ldr	x0, [x0, #16]
  403554:	ldr	w0, [x0]
  403558:	cmp	w0, #0x3
  40355c:	b.ne	403778 <eval_condition+0x360>  // b.any
  403560:	ldr	x0, [sp, #24]
  403564:	ldr	x0, [x0, #8]
  403568:	str	x0, [sp, #48]
  40356c:	ldr	x0, [sp, #24]
  403570:	ldr	x0, [x0, #16]
  403574:	bl	402f08 <cldr_plural_condition_free>
  403578:	ldr	x0, [sp, #24]
  40357c:	ldr	x0, [x0, #8]
  403580:	ldr	w1, [x0]
  403584:	ldr	x0, [sp, #24]
  403588:	str	w1, [x0]
  40358c:	ldr	x0, [sp, #24]
  403590:	ldr	x0, [x0, #8]
  403594:	ldr	x2, [sp, #24]
  403598:	ldp	x0, x1, [x0, #8]
  40359c:	stp	x0, x1, [x2, #8]
  4035a0:	ldr	x0, [sp, #48]
  4035a4:	bl	401580 <free@plt>
  4035a8:	b	403778 <eval_condition+0x360>
  4035ac:	ldr	x0, [sp, #24]
  4035b0:	ldr	w0, [x0]
  4035b4:	cmp	w0, #0x1
  4035b8:	b.ne	403734 <eval_condition+0x31c>  // b.any
  4035bc:	ldr	x0, [sp, #24]
  4035c0:	ldr	x0, [x0, #8]
  4035c4:	bl	403418 <eval_condition>
  4035c8:	ldr	x0, [sp, #24]
  4035cc:	ldr	x0, [x0, #16]
  4035d0:	bl	403418 <eval_condition>
  4035d4:	ldr	x0, [sp, #24]
  4035d8:	ldr	x0, [x0, #8]
  4035dc:	ldr	w0, [x0]
  4035e0:	cmp	w0, #0x3
  4035e4:	b.eq	4035fc <eval_condition+0x1e4>  // b.none
  4035e8:	ldr	x0, [sp, #24]
  4035ec:	ldr	x0, [x0, #16]
  4035f0:	ldr	w0, [x0]
  4035f4:	cmp	w0, #0x3
  4035f8:	b.ne	403624 <eval_condition+0x20c>  // b.any
  4035fc:	ldr	x0, [sp, #24]
  403600:	ldr	x0, [x0, #8]
  403604:	bl	402f08 <cldr_plural_condition_free>
  403608:	ldr	x0, [sp, #24]
  40360c:	ldr	x0, [x0, #16]
  403610:	bl	402f08 <cldr_plural_condition_free>
  403614:	ldr	x0, [sp, #24]
  403618:	mov	w1, #0x3                   	// #3
  40361c:	str	w1, [x0]
  403620:	b	403778 <eval_condition+0x360>
  403624:	ldr	x0, [sp, #24]
  403628:	ldr	x0, [x0, #8]
  40362c:	ldr	w0, [x0]
  403630:	cmp	w0, #0x4
  403634:	b.ne	403674 <eval_condition+0x25c>  // b.any
  403638:	ldr	x0, [sp, #24]
  40363c:	ldr	x0, [x0, #16]
  403640:	ldr	w0, [x0]
  403644:	cmp	w0, #0x4
  403648:	b.ne	403674 <eval_condition+0x25c>  // b.any
  40364c:	ldr	x0, [sp, #24]
  403650:	ldr	x0, [x0, #8]
  403654:	bl	402f08 <cldr_plural_condition_free>
  403658:	ldr	x0, [sp, #24]
  40365c:	ldr	x0, [x0, #16]
  403660:	bl	402f08 <cldr_plural_condition_free>
  403664:	ldr	x0, [sp, #24]
  403668:	mov	w1, #0x4                   	// #4
  40366c:	str	w1, [x0]
  403670:	b	403778 <eval_condition+0x360>
  403674:	ldr	x0, [sp, #24]
  403678:	ldr	x0, [x0, #8]
  40367c:	ldr	w0, [x0]
  403680:	cmp	w0, #0x4
  403684:	b.ne	4036d4 <eval_condition+0x2bc>  // b.any
  403688:	ldr	x0, [sp, #24]
  40368c:	ldr	x0, [x0, #16]
  403690:	str	x0, [sp, #56]
  403694:	ldr	x0, [sp, #24]
  403698:	ldr	x0, [x0, #8]
  40369c:	bl	402f08 <cldr_plural_condition_free>
  4036a0:	ldr	x0, [sp, #24]
  4036a4:	ldr	x0, [x0, #16]
  4036a8:	ldr	w1, [x0]
  4036ac:	ldr	x0, [sp, #24]
  4036b0:	str	w1, [x0]
  4036b4:	ldr	x0, [sp, #24]
  4036b8:	ldr	x0, [x0, #16]
  4036bc:	ldr	x2, [sp, #24]
  4036c0:	ldp	x0, x1, [x0, #8]
  4036c4:	stp	x0, x1, [x2, #8]
  4036c8:	ldr	x0, [sp, #56]
  4036cc:	bl	401580 <free@plt>
  4036d0:	b	403778 <eval_condition+0x360>
  4036d4:	ldr	x0, [sp, #24]
  4036d8:	ldr	x0, [x0, #16]
  4036dc:	ldr	w0, [x0]
  4036e0:	cmp	w0, #0x4
  4036e4:	b.ne	403778 <eval_condition+0x360>  // b.any
  4036e8:	ldr	x0, [sp, #24]
  4036ec:	ldr	x0, [x0, #8]
  4036f0:	str	x0, [sp, #64]
  4036f4:	ldr	x0, [sp, #24]
  4036f8:	ldr	x0, [x0, #16]
  4036fc:	bl	402f08 <cldr_plural_condition_free>
  403700:	ldr	x0, [sp, #24]
  403704:	ldr	x0, [x0, #8]
  403708:	ldr	w1, [x0]
  40370c:	ldr	x0, [sp, #24]
  403710:	str	w1, [x0]
  403714:	ldr	x0, [sp, #24]
  403718:	ldr	x0, [x0, #8]
  40371c:	ldr	x2, [sp, #24]
  403720:	ldp	x0, x1, [x0, #8]
  403724:	stp	x0, x1, [x2, #8]
  403728:	ldr	x0, [sp, #64]
  40372c:	bl	401580 <free@plt>
  403730:	b	403778 <eval_condition+0x360>
  403734:	ldr	x0, [sp, #24]
  403738:	ldr	x0, [x0, #8]
  40373c:	bl	4030d8 <eval_relation>
  403740:	str	w0, [sp, #76]
  403744:	ldr	w0, [sp, #76]
  403748:	cmp	w0, #0x3
  40374c:	b.eq	40375c <eval_condition+0x344>  // b.none
  403750:	ldr	w0, [sp, #76]
  403754:	cmp	w0, #0x4
  403758:	b.ne	403778 <eval_condition+0x360>  // b.any
  40375c:	ldr	x0, [sp, #24]
  403760:	ldr	x0, [x0, #8]
  403764:	bl	402f80 <cldr_plural_relation_free>
  403768:	ldr	x0, [sp, #24]
  40376c:	ldr	w1, [sp, #76]
  403770:	str	w1, [x0]
  403774:	b	403778 <eval_condition+0x360>
  403778:	nop
  40377c:	ldp	x29, x30, [sp], #80
  403780:	ret

0000000000403784 <find_largest_modulus>:
  403784:	stp	x29, x30, [sp, #-48]!
  403788:	mov	x29, sp
  40378c:	str	x0, [sp, #24]
  403790:	ldr	x0, [sp, #24]
  403794:	ldr	w0, [x0]
  403798:	cmp	w0, #0x0
  40379c:	b.eq	4037b0 <find_largest_modulus+0x2c>  // b.none
  4037a0:	ldr	x0, [sp, #24]
  4037a4:	ldr	w0, [x0]
  4037a8:	cmp	w0, #0x1
  4037ac:	b.ne	4037e8 <find_largest_modulus+0x64>  // b.any
  4037b0:	ldr	x0, [sp, #24]
  4037b4:	ldr	x0, [x0, #8]
  4037b8:	bl	403784 <find_largest_modulus>
  4037bc:	str	w0, [sp, #44]
  4037c0:	ldr	x0, [sp, #24]
  4037c4:	ldr	x0, [x0, #16]
  4037c8:	bl	403784 <find_largest_modulus>
  4037cc:	str	w0, [sp, #40]
  4037d0:	ldr	w0, [sp, #44]
  4037d4:	ldr	w2, [sp, #40]
  4037d8:	ldr	w1, [sp, #40]
  4037dc:	cmp	w2, w0
  4037e0:	csel	w0, w1, w0, ge  // ge = tcont
  4037e4:	b	403810 <find_largest_modulus+0x8c>
  4037e8:	ldr	x0, [sp, #24]
  4037ec:	ldr	w0, [x0]
  4037f0:	cmp	w0, #0x2
  4037f4:	b.ne	40380c <find_largest_modulus+0x88>  // b.any
  4037f8:	ldr	x0, [sp, #24]
  4037fc:	ldr	x0, [x0, #8]
  403800:	ldr	x0, [x0]
  403804:	ldr	w0, [x0, #4]
  403808:	b	403810 <find_largest_modulus+0x8c>
  40380c:	mov	w0, #0x0                   	// #0
  403810:	ldp	x29, x30, [sp], #48
  403814:	ret

0000000000403818 <find_largest_number>:
  403818:	stp	x29, x30, [sp, #-64]!
  40381c:	mov	x29, sp
  403820:	str	x0, [sp, #24]
  403824:	ldr	x0, [sp, #24]
  403828:	ldr	w0, [x0]
  40382c:	cmp	w0, #0x0
  403830:	b.eq	403844 <find_largest_number+0x2c>  // b.none
  403834:	ldr	x0, [sp, #24]
  403838:	ldr	w0, [x0]
  40383c:	cmp	w0, #0x1
  403840:	b.ne	40387c <find_largest_number+0x64>  // b.any
  403844:	ldr	x0, [sp, #24]
  403848:	ldr	x0, [x0, #8]
  40384c:	bl	403818 <find_largest_number>
  403850:	str	w0, [sp, #36]
  403854:	ldr	x0, [sp, #24]
  403858:	ldr	x0, [x0, #16]
  40385c:	bl	403818 <find_largest_number>
  403860:	str	w0, [sp, #32]
  403864:	ldr	w0, [sp, #36]
  403868:	ldr	w2, [sp, #32]
  40386c:	ldr	w1, [sp, #32]
  403870:	cmp	w2, w0
  403874:	csel	w0, w1, w0, ge  // ge = tcont
  403878:	b	403960 <find_largest_number+0x148>
  40387c:	ldr	x0, [sp, #24]
  403880:	ldr	w0, [x0]
  403884:	cmp	w0, #0x2
  403888:	b.ne	40395c <find_largest_number+0x144>  // b.any
  40388c:	str	wzr, [sp, #60]
  403890:	str	xzr, [sp, #48]
  403894:	b	403938 <find_largest_number+0x120>
  403898:	ldr	x0, [sp, #24]
  40389c:	ldr	x0, [x0, #8]
  4038a0:	ldr	x0, [x0, #16]
  4038a4:	ldr	x1, [x0]
  4038a8:	ldr	x0, [sp, #48]
  4038ac:	lsl	x0, x0, #3
  4038b0:	add	x0, x1, x0
  4038b4:	ldr	x0, [x0]
  4038b8:	ldr	x0, [x0, #8]
  4038bc:	str	x0, [sp, #40]
  4038c0:	ldr	x0, [sp, #40]
  4038c4:	ldr	w0, [x0]
  4038c8:	cmp	w0, #0x0
  4038cc:	b.ne	4038f4 <find_largest_number+0xdc>  // b.any
  4038d0:	ldr	x0, [sp, #40]
  4038d4:	ldr	w0, [x0, #8]
  4038d8:	ldr	w1, [sp, #60]
  4038dc:	cmp	w1, w0
  4038e0:	b.ge	4038f4 <find_largest_number+0xdc>  // b.tcont
  4038e4:	ldr	x0, [sp, #40]
  4038e8:	ldr	w0, [x0, #8]
  4038ec:	str	w0, [sp, #60]
  4038f0:	b	40392c <find_largest_number+0x114>
  4038f4:	ldr	x0, [sp, #40]
  4038f8:	ldr	w0, [x0]
  4038fc:	cmp	w0, #0x1
  403900:	b.ne	40392c <find_largest_number+0x114>  // b.any
  403904:	ldr	x0, [sp, #40]
  403908:	ldr	d1, [x0, #8]
  40390c:	ldr	w0, [sp, #60]
  403910:	scvtf	d0, w0
  403914:	fcmpe	d1, d0
  403918:	b.le	40392c <find_largest_number+0x114>
  40391c:	ldr	x0, [sp, #40]
  403920:	ldr	d0, [x0, #8]
  403924:	fcvtzs	w0, d0
  403928:	str	w0, [sp, #60]
  40392c:	ldr	x0, [sp, #48]
  403930:	add	x0, x0, #0x1
  403934:	str	x0, [sp, #48]
  403938:	ldr	x0, [sp, #24]
  40393c:	ldr	x0, [x0, #8]
  403940:	ldr	x0, [x0, #16]
  403944:	ldr	x0, [x0, #8]
  403948:	ldr	x1, [sp, #48]
  40394c:	cmp	x1, x0
  403950:	b.cc	403898 <find_largest_number+0x80>  // b.lo, b.ul, b.last
  403954:	ldr	w0, [sp, #60]
  403958:	b	403960 <find_largest_number+0x148>
  40395c:	mov	w0, #0x0                   	// #0
  403960:	ldp	x29, x30, [sp], #64
  403964:	ret

0000000000403968 <apply_condition>:
  403968:	stp	x29, x30, [sp, #-64]!
  40396c:	mov	x29, sp
  403970:	str	x0, [sp, #24]
  403974:	str	w1, [sp, #20]
  403978:	ldr	x0, [sp, #24]
  40397c:	ldr	w0, [x0]
  403980:	cmp	w0, #0x0
  403984:	b.ne	4039d8 <apply_condition+0x70>  // b.any
  403988:	ldr	x0, [sp, #24]
  40398c:	ldr	x0, [x0, #8]
  403990:	ldr	w1, [sp, #20]
  403994:	bl	403968 <apply_condition>
  403998:	and	w0, w0, #0xff
  40399c:	cmp	w0, #0x0
  4039a0:	b.eq	4039c8 <apply_condition+0x60>  // b.none
  4039a4:	ldr	x0, [sp, #24]
  4039a8:	ldr	x0, [x0, #16]
  4039ac:	ldr	w1, [sp, #20]
  4039b0:	bl	403968 <apply_condition>
  4039b4:	and	w0, w0, #0xff
  4039b8:	cmp	w0, #0x0
  4039bc:	b.eq	4039c8 <apply_condition+0x60>  // b.none
  4039c0:	mov	w0, #0x1                   	// #1
  4039c4:	b	4039cc <apply_condition+0x64>
  4039c8:	mov	w0, #0x0                   	// #0
  4039cc:	and	w0, w0, #0x1
  4039d0:	and	w0, w0, #0xff
  4039d4:	b	403b40 <apply_condition+0x1d8>
  4039d8:	ldr	x0, [sp, #24]
  4039dc:	ldr	w0, [x0]
  4039e0:	cmp	w0, #0x1
  4039e4:	b.ne	403a38 <apply_condition+0xd0>  // b.any
  4039e8:	ldr	x0, [sp, #24]
  4039ec:	ldr	x0, [x0, #8]
  4039f0:	ldr	w1, [sp, #20]
  4039f4:	bl	403968 <apply_condition>
  4039f8:	and	w0, w0, #0xff
  4039fc:	cmp	w0, #0x0
  403a00:	b.ne	403a20 <apply_condition+0xb8>  // b.any
  403a04:	ldr	x0, [sp, #24]
  403a08:	ldr	x0, [x0, #16]
  403a0c:	ldr	w1, [sp, #20]
  403a10:	bl	403968 <apply_condition>
  403a14:	and	w0, w0, #0xff
  403a18:	cmp	w0, #0x0
  403a1c:	b.eq	403a28 <apply_condition+0xc0>  // b.none
  403a20:	mov	w0, #0x1                   	// #1
  403a24:	b	403a2c <apply_condition+0xc4>
  403a28:	mov	w0, #0x0                   	// #0
  403a2c:	and	w0, w0, #0x1
  403a30:	and	w0, w0, #0xff
  403a34:	b	403b40 <apply_condition+0x1d8>
  403a38:	ldr	x0, [sp, #24]
  403a3c:	ldr	w0, [x0]
  403a40:	cmp	w0, #0x2
  403a44:	b.ne	403b3c <apply_condition+0x1d4>  // b.any
  403a48:	ldr	x0, [sp, #24]
  403a4c:	ldr	x0, [x0, #8]
  403a50:	str	x0, [sp, #40]
  403a54:	ldr	w0, [sp, #20]
  403a58:	str	w0, [sp, #60]
  403a5c:	ldr	x0, [sp, #40]
  403a60:	ldr	x0, [x0]
  403a64:	ldr	w0, [x0, #4]
  403a68:	cmp	w0, #0x0
  403a6c:	b.le	403a90 <apply_condition+0x128>
  403a70:	ldr	x0, [sp, #40]
  403a74:	ldr	x0, [x0]
  403a78:	ldr	w1, [x0, #4]
  403a7c:	ldr	w0, [sp, #60]
  403a80:	sdiv	w2, w0, w1
  403a84:	mul	w1, w2, w1
  403a88:	sub	w0, w0, w1
  403a8c:	str	w0, [sp, #60]
  403a90:	str	xzr, [sp, #48]
  403a94:	b	403b0c <apply_condition+0x1a4>
  403a98:	ldr	x0, [sp, #40]
  403a9c:	ldr	x0, [x0, #16]
  403aa0:	ldr	x1, [x0]
  403aa4:	ldr	x0, [sp, #48]
  403aa8:	lsl	x0, x0, #3
  403aac:	add	x0, x1, x0
  403ab0:	ldr	x0, [x0]
  403ab4:	str	x0, [sp, #32]
  403ab8:	ldr	x0, [sp, #32]
  403abc:	ldr	x0, [x0]
  403ac0:	ldr	w0, [x0, #8]
  403ac4:	ldr	w1, [sp, #60]
  403ac8:	cmp	w1, w0
  403acc:	b.lt	403b00 <apply_condition+0x198>  // b.tstop
  403ad0:	ldr	x0, [sp, #32]
  403ad4:	ldr	x0, [x0, #8]
  403ad8:	ldr	w0, [x0, #8]
  403adc:	ldr	w1, [sp, #60]
  403ae0:	cmp	w1, w0
  403ae4:	b.gt	403b00 <apply_condition+0x198>
  403ae8:	ldr	x0, [sp, #40]
  403aec:	ldr	w0, [x0, #8]
  403af0:	cmp	w0, #0x0
  403af4:	cset	w0, eq  // eq = none
  403af8:	and	w0, w0, #0xff
  403afc:	b	403b40 <apply_condition+0x1d8>
  403b00:	ldr	x0, [sp, #48]
  403b04:	add	x0, x0, #0x1
  403b08:	str	x0, [sp, #48]
  403b0c:	ldr	x0, [sp, #40]
  403b10:	ldr	x0, [x0, #16]
  403b14:	ldr	x0, [x0, #8]
  403b18:	ldr	x1, [sp, #48]
  403b1c:	cmp	x1, x0
  403b20:	b.cc	403a98 <apply_condition+0x130>  // b.lo, b.ul, b.last
  403b24:	ldr	x0, [sp, #40]
  403b28:	ldr	w0, [x0, #8]
  403b2c:	cmp	w0, #0x0
  403b30:	cset	w0, ne  // ne = any
  403b34:	and	w0, w0, #0xff
  403b38:	b	403b40 <apply_condition+0x1d8>
  403b3c:	mov	w0, #0x0                   	// #0
  403b40:	ldp	x29, x30, [sp], #64
  403b44:	ret

0000000000403b48 <print_expression>:
  403b48:	stp	x29, x30, [sp, #-48]!
  403b4c:	mov	x29, sp
  403b50:	str	x0, [sp, #40]
  403b54:	strb	w1, [sp, #39]
  403b58:	str	x2, [sp, #24]
  403b5c:	ldr	x0, [sp, #40]
  403b60:	ldr	w0, [x0, #4]
  403b64:	cmp	w0, #0x0
  403b68:	b.ne	403b7c <print_expression+0x34>  // b.any
  403b6c:	ldr	x1, [sp, #24]
  403b70:	mov	w0, #0x6e                  	// #110
  403b74:	bl	4013b0 <fputc@plt>
  403b78:	b	403bb4 <print_expression+0x6c>
  403b7c:	ldrb	w0, [sp, #39]
  403b80:	cmp	w0, #0x0
  403b84:	b.eq	403b94 <print_expression+0x4c>  // b.none
  403b88:	adrp	x0, 405000 <usage+0x8>
  403b8c:	add	x0, x0, #0xa50
  403b90:	b	403b9c <print_expression+0x54>
  403b94:	adrp	x0, 405000 <usage+0x8>
  403b98:	add	x0, x0, #0xa58
  403b9c:	ldr	x1, [sp, #40]
  403ba0:	ldr	w1, [x1, #4]
  403ba4:	mov	w2, w1
  403ba8:	mov	x1, x0
  403bac:	ldr	x0, [sp, #24]
  403bb0:	bl	401640 <fprintf@plt>
  403bb4:	nop
  403bb8:	ldp	x29, x30, [sp], #48
  403bbc:	ret

0000000000403bc0 <print_relation>:
  403bc0:	stp	x29, x30, [sp, #-80]!
  403bc4:	mov	x29, sp
  403bc8:	str	x0, [sp, #40]
  403bcc:	str	w1, [sp, #36]
  403bd0:	strb	w2, [sp, #35]
  403bd4:	str	x3, [sp, #24]
  403bd8:	ldr	x0, [sp, #40]
  403bdc:	ldr	w0, [x0, #8]
  403be0:	cmp	w0, #0x0
  403be4:	b.ne	403e60 <print_relation+0x2a0>  // b.any
  403be8:	ldr	w0, [sp, #36]
  403bec:	cmp	w0, #0x0
  403bf0:	b.ne	403c14 <print_relation+0x54>  // b.any
  403bf4:	ldr	x0, [sp, #40]
  403bf8:	ldr	x0, [x0, #16]
  403bfc:	ldr	x0, [x0, #8]
  403c00:	cmp	x0, #0x1
  403c04:	b.ls	403c14 <print_relation+0x54>  // b.plast
  403c08:	ldr	x1, [sp, #24]
  403c0c:	mov	w0, #0x28                  	// #40
  403c10:	bl	4013b0 <fputc@plt>
  403c14:	str	xzr, [sp, #72]
  403c18:	b	403e18 <print_relation+0x258>
  403c1c:	ldr	x0, [sp, #40]
  403c20:	ldr	x0, [x0, #16]
  403c24:	ldr	x1, [x0]
  403c28:	ldr	x0, [sp, #72]
  403c2c:	lsl	x0, x0, #3
  403c30:	add	x0, x1, x0
  403c34:	ldr	x0, [x0]
  403c38:	str	x0, [sp, #48]
  403c3c:	ldr	x0, [sp, #72]
  403c40:	cmp	x0, #0x0
  403c44:	b.eq	403c60 <print_relation+0xa0>  // b.none
  403c48:	ldr	x3, [sp, #24]
  403c4c:	mov	x2, #0x4                   	// #4
  403c50:	mov	x1, #0x1                   	// #1
  403c54:	adrp	x0, 405000 <usage+0x8>
  403c58:	add	x0, x0, #0xa60
  403c5c:	bl	4015a0 <fwrite@plt>
  403c60:	ldr	x0, [sp, #48]
  403c64:	ldr	x0, [x0]
  403c68:	ldr	w1, [x0, #8]
  403c6c:	ldr	x0, [sp, #48]
  403c70:	ldr	x0, [x0, #8]
  403c74:	ldr	w0, [x0, #8]
  403c78:	cmp	w1, w0
  403c7c:	b.ne	403ce8 <print_relation+0x128>  // b.any
  403c80:	ldr	x0, [sp, #40]
  403c84:	ldr	x0, [x0]
  403c88:	ldr	x2, [sp, #24]
  403c8c:	ldrb	w1, [sp, #35]
  403c90:	bl	403b48 <print_expression>
  403c94:	ldrb	w0, [sp, #35]
  403c98:	cmp	w0, #0x0
  403c9c:	b.eq	403cc0 <print_relation+0x100>  // b.none
  403ca0:	ldr	x0, [sp, #40]
  403ca4:	ldr	x0, [x0, #16]
  403ca8:	ldr	x0, [x0, #8]
  403cac:	cmp	x0, #0x1
  403cb0:	b.ne	403cc0 <print_relation+0x100>  // b.any
  403cb4:	adrp	x0, 405000 <usage+0x8>
  403cb8:	add	x0, x0, #0xa68
  403cbc:	b	403cc8 <print_relation+0x108>
  403cc0:	adrp	x0, 405000 <usage+0x8>
  403cc4:	add	x0, x0, #0xa70
  403cc8:	ldr	x1, [sp, #48]
  403ccc:	ldr	x1, [x1]
  403cd0:	ldr	w1, [x1, #8]
  403cd4:	mov	w2, w1
  403cd8:	mov	x1, x0
  403cdc:	ldr	x0, [sp, #24]
  403ce0:	bl	401640 <fprintf@plt>
  403ce4:	b	403e0c <print_relation+0x24c>
  403ce8:	ldr	x0, [sp, #48]
  403cec:	ldr	x0, [x0]
  403cf0:	ldr	w0, [x0, #8]
  403cf4:	cmp	w0, #0x0
  403cf8:	b.ne	403d34 <print_relation+0x174>  // b.any
  403cfc:	ldr	x0, [sp, #40]
  403d00:	ldr	x0, [x0]
  403d04:	ldr	x2, [sp, #24]
  403d08:	mov	w1, #0x0                   	// #0
  403d0c:	bl	403b48 <print_expression>
  403d10:	ldr	x0, [sp, #48]
  403d14:	ldr	x0, [x0, #8]
  403d18:	ldr	w0, [x0, #8]
  403d1c:	mov	w2, w0
  403d20:	adrp	x0, 405000 <usage+0x8>
  403d24:	add	x1, x0, #0xa78
  403d28:	ldr	x0, [sp, #24]
  403d2c:	bl	401640 <fprintf@plt>
  403d30:	b	403e0c <print_relation+0x24c>
  403d34:	ldr	w0, [sp, #36]
  403d38:	cmp	w0, #0x1
  403d3c:	b.eq	403d54 <print_relation+0x194>  // b.none
  403d40:	ldr	x0, [sp, #40]
  403d44:	ldr	x0, [x0, #16]
  403d48:	ldr	x0, [x0, #8]
  403d4c:	cmp	x0, #0x1
  403d50:	b.ls	403d60 <print_relation+0x1a0>  // b.plast
  403d54:	ldr	x1, [sp, #24]
  403d58:	mov	w0, #0x28                  	// #40
  403d5c:	bl	4013b0 <fputc@plt>
  403d60:	ldr	x0, [sp, #40]
  403d64:	ldr	x0, [x0]
  403d68:	ldr	x2, [sp, #24]
  403d6c:	mov	w1, #0x0                   	// #0
  403d70:	bl	403b48 <print_expression>
  403d74:	ldr	x0, [sp, #48]
  403d78:	ldr	x0, [x0]
  403d7c:	ldr	w0, [x0, #8]
  403d80:	mov	w2, w0
  403d84:	adrp	x0, 405000 <usage+0x8>
  403d88:	add	x1, x0, #0xa80
  403d8c:	ldr	x0, [sp, #24]
  403d90:	bl	401640 <fprintf@plt>
  403d94:	ldr	x3, [sp, #24]
  403d98:	mov	x2, #0x4                   	// #4
  403d9c:	mov	x1, #0x1                   	// #1
  403da0:	adrp	x0, 405000 <usage+0x8>
  403da4:	add	x0, x0, #0xa88
  403da8:	bl	4015a0 <fwrite@plt>
  403dac:	ldr	x0, [sp, #40]
  403db0:	ldr	x0, [x0]
  403db4:	ldr	x2, [sp, #24]
  403db8:	mov	w1, #0x0                   	// #0
  403dbc:	bl	403b48 <print_expression>
  403dc0:	ldr	x0, [sp, #48]
  403dc4:	ldr	x0, [x0, #8]
  403dc8:	ldr	w0, [x0, #8]
  403dcc:	mov	w2, w0
  403dd0:	adrp	x0, 405000 <usage+0x8>
  403dd4:	add	x1, x0, #0xa78
  403dd8:	ldr	x0, [sp, #24]
  403ddc:	bl	401640 <fprintf@plt>
  403de0:	ldr	w0, [sp, #36]
  403de4:	cmp	w0, #0x1
  403de8:	b.eq	403e00 <print_relation+0x240>  // b.none
  403dec:	ldr	x0, [sp, #40]
  403df0:	ldr	x0, [x0, #16]
  403df4:	ldr	x0, [x0, #8]
  403df8:	cmp	x0, #0x1
  403dfc:	b.ls	403e0c <print_relation+0x24c>  // b.plast
  403e00:	ldr	x1, [sp, #24]
  403e04:	mov	w0, #0x29                  	// #41
  403e08:	bl	4013b0 <fputc@plt>
  403e0c:	ldr	x0, [sp, #72]
  403e10:	add	x0, x0, #0x1
  403e14:	str	x0, [sp, #72]
  403e18:	ldr	x0, [sp, #40]
  403e1c:	ldr	x0, [x0, #16]
  403e20:	ldr	x0, [x0, #8]
  403e24:	ldr	x1, [sp, #72]
  403e28:	cmp	x1, x0
  403e2c:	b.cc	403c1c <print_relation+0x5c>  // b.lo, b.ul, b.last
  403e30:	ldr	w0, [sp, #36]
  403e34:	cmp	w0, #0x0
  403e38:	b.ne	4040d4 <print_relation+0x514>  // b.any
  403e3c:	ldr	x0, [sp, #40]
  403e40:	ldr	x0, [x0, #16]
  403e44:	ldr	x0, [x0, #8]
  403e48:	cmp	x0, #0x1
  403e4c:	b.ls	4040d4 <print_relation+0x514>  // b.plast
  403e50:	ldr	x1, [sp, #24]
  403e54:	mov	w0, #0x29                  	// #41
  403e58:	bl	4013b0 <fputc@plt>
  403e5c:	b	4040d4 <print_relation+0x514>
  403e60:	ldr	w0, [sp, #36]
  403e64:	cmp	w0, #0x1
  403e68:	b.ne	403e8c <print_relation+0x2cc>  // b.any
  403e6c:	ldr	x0, [sp, #40]
  403e70:	ldr	x0, [x0, #16]
  403e74:	ldr	x0, [x0, #8]
  403e78:	cmp	x0, #0x1
  403e7c:	b.ls	403e8c <print_relation+0x2cc>  // b.plast
  403e80:	ldr	x1, [sp, #24]
  403e84:	mov	w0, #0x28                  	// #40
  403e88:	bl	4013b0 <fputc@plt>
  403e8c:	str	xzr, [sp, #64]
  403e90:	b	404090 <print_relation+0x4d0>
  403e94:	ldr	x0, [sp, #40]
  403e98:	ldr	x0, [x0, #16]
  403e9c:	ldr	x1, [x0]
  403ea0:	ldr	x0, [sp, #64]
  403ea4:	lsl	x0, x0, #3
  403ea8:	add	x0, x1, x0
  403eac:	ldr	x0, [x0]
  403eb0:	str	x0, [sp, #56]
  403eb4:	ldr	x0, [sp, #64]
  403eb8:	cmp	x0, #0x0
  403ebc:	b.eq	403ed8 <print_relation+0x318>  // b.none
  403ec0:	ldr	x3, [sp, #24]
  403ec4:	mov	x2, #0x4                   	// #4
  403ec8:	mov	x1, #0x1                   	// #1
  403ecc:	adrp	x0, 405000 <usage+0x8>
  403ed0:	add	x0, x0, #0xa88
  403ed4:	bl	4015a0 <fwrite@plt>
  403ed8:	ldr	x0, [sp, #56]
  403edc:	ldr	x0, [x0]
  403ee0:	ldr	w1, [x0, #8]
  403ee4:	ldr	x0, [sp, #56]
  403ee8:	ldr	x0, [x0, #8]
  403eec:	ldr	w0, [x0, #8]
  403ef0:	cmp	w1, w0
  403ef4:	b.ne	403f60 <print_relation+0x3a0>  // b.any
  403ef8:	ldr	x0, [sp, #40]
  403efc:	ldr	x0, [x0]
  403f00:	ldr	x2, [sp, #24]
  403f04:	ldrb	w1, [sp, #35]
  403f08:	bl	403b48 <print_expression>
  403f0c:	ldrb	w0, [sp, #35]
  403f10:	cmp	w0, #0x0
  403f14:	b.eq	403f38 <print_relation+0x378>  // b.none
  403f18:	ldr	x0, [sp, #40]
  403f1c:	ldr	x0, [x0, #16]
  403f20:	ldr	x0, [x0, #8]
  403f24:	cmp	x0, #0x1
  403f28:	b.ne	403f38 <print_relation+0x378>  // b.any
  403f2c:	adrp	x0, 405000 <usage+0x8>
  403f30:	add	x0, x0, #0xa90
  403f34:	b	403f40 <print_relation+0x380>
  403f38:	adrp	x0, 405000 <usage+0x8>
  403f3c:	add	x0, x0, #0xa98
  403f40:	ldr	x1, [sp, #56]
  403f44:	ldr	x1, [x1]
  403f48:	ldr	w1, [x1, #8]
  403f4c:	mov	w2, w1
  403f50:	mov	x1, x0
  403f54:	ldr	x0, [sp, #24]
  403f58:	bl	401640 <fprintf@plt>
  403f5c:	b	404084 <print_relation+0x4c4>
  403f60:	ldr	x0, [sp, #56]
  403f64:	ldr	x0, [x0]
  403f68:	ldr	w0, [x0, #8]
  403f6c:	cmp	w0, #0x0
  403f70:	b.ne	403fac <print_relation+0x3ec>  // b.any
  403f74:	ldr	x0, [sp, #40]
  403f78:	ldr	x0, [x0]
  403f7c:	ldr	x2, [sp, #24]
  403f80:	mov	w1, #0x0                   	// #0
  403f84:	bl	403b48 <print_expression>
  403f88:	ldr	x0, [sp, #56]
  403f8c:	ldr	x0, [x0, #8]
  403f90:	ldr	w0, [x0, #8]
  403f94:	mov	w2, w0
  403f98:	adrp	x0, 405000 <usage+0x8>
  403f9c:	add	x1, x0, #0xaa0
  403fa0:	ldr	x0, [sp, #24]
  403fa4:	bl	401640 <fprintf@plt>
  403fa8:	b	404084 <print_relation+0x4c4>
  403fac:	ldr	w0, [sp, #36]
  403fb0:	cmp	w0, #0x0
  403fb4:	b.eq	403fcc <print_relation+0x40c>  // b.none
  403fb8:	ldr	x0, [sp, #40]
  403fbc:	ldr	x0, [x0, #16]
  403fc0:	ldr	x0, [x0, #8]
  403fc4:	cmp	x0, #0x1
  403fc8:	b.ls	403fd8 <print_relation+0x418>  // b.plast
  403fcc:	ldr	x1, [sp, #24]
  403fd0:	mov	w0, #0x28                  	// #40
  403fd4:	bl	4013b0 <fputc@plt>
  403fd8:	ldr	x0, [sp, #40]
  403fdc:	ldr	x0, [x0]
  403fe0:	ldr	x2, [sp, #24]
  403fe4:	mov	w1, #0x0                   	// #0
  403fe8:	bl	403b48 <print_expression>
  403fec:	ldr	x0, [sp, #56]
  403ff0:	ldr	x0, [x0]
  403ff4:	ldr	w0, [x0, #8]
  403ff8:	mov	w2, w0
  403ffc:	adrp	x0, 405000 <usage+0x8>
  404000:	add	x1, x0, #0xaa8
  404004:	ldr	x0, [sp, #24]
  404008:	bl	401640 <fprintf@plt>
  40400c:	ldr	x3, [sp, #24]
  404010:	mov	x2, #0x4                   	// #4
  404014:	mov	x1, #0x1                   	// #1
  404018:	adrp	x0, 405000 <usage+0x8>
  40401c:	add	x0, x0, #0xa60
  404020:	bl	4015a0 <fwrite@plt>
  404024:	ldr	x0, [sp, #40]
  404028:	ldr	x0, [x0]
  40402c:	ldr	x2, [sp, #24]
  404030:	mov	w1, #0x0                   	// #0
  404034:	bl	403b48 <print_expression>
  404038:	ldr	x0, [sp, #56]
  40403c:	ldr	x0, [x0, #8]
  404040:	ldr	w0, [x0, #8]
  404044:	mov	w2, w0
  404048:	adrp	x0, 405000 <usage+0x8>
  40404c:	add	x1, x0, #0xaa0
  404050:	ldr	x0, [sp, #24]
  404054:	bl	401640 <fprintf@plt>
  404058:	ldr	w0, [sp, #36]
  40405c:	cmp	w0, #0x0
  404060:	b.eq	404078 <print_relation+0x4b8>  // b.none
  404064:	ldr	x0, [sp, #40]
  404068:	ldr	x0, [x0, #16]
  40406c:	ldr	x0, [x0, #8]
  404070:	cmp	x0, #0x1
  404074:	b.ls	404084 <print_relation+0x4c4>  // b.plast
  404078:	ldr	x1, [sp, #24]
  40407c:	mov	w0, #0x29                  	// #41
  404080:	bl	4013b0 <fputc@plt>
  404084:	ldr	x0, [sp, #64]
  404088:	add	x0, x0, #0x1
  40408c:	str	x0, [sp, #64]
  404090:	ldr	x0, [sp, #40]
  404094:	ldr	x0, [x0, #16]
  404098:	ldr	x0, [x0, #8]
  40409c:	ldr	x1, [sp, #64]
  4040a0:	cmp	x1, x0
  4040a4:	b.cc	403e94 <print_relation+0x2d4>  // b.lo, b.ul, b.last
  4040a8:	ldr	w0, [sp, #36]
  4040ac:	cmp	w0, #0x1
  4040b0:	b.ne	4040d4 <print_relation+0x514>  // b.any
  4040b4:	ldr	x0, [sp, #40]
  4040b8:	ldr	x0, [x0, #16]
  4040bc:	ldr	x0, [x0, #8]
  4040c0:	cmp	x0, #0x1
  4040c4:	b.ls	4040d4 <print_relation+0x514>  // b.plast
  4040c8:	ldr	x1, [sp, #24]
  4040cc:	mov	w0, #0x29                  	// #41
  4040d0:	bl	4013b0 <fputc@plt>
  4040d4:	nop
  4040d8:	ldp	x29, x30, [sp], #80
  4040dc:	ret

00000000004040e0 <print_condition>:
  4040e0:	stp	x29, x30, [sp, #-48]!
  4040e4:	mov	x29, sp
  4040e8:	str	x0, [sp, #40]
  4040ec:	str	w1, [sp, #36]
  4040f0:	strb	w2, [sp, #35]
  4040f4:	str	x3, [sp, #24]
  4040f8:	ldr	x0, [sp, #40]
  4040fc:	ldr	w0, [x0]
  404100:	cmp	w0, #0x0
  404104:	b.ne	404188 <print_condition+0xa8>  // b.any
  404108:	ldr	w0, [sp, #36]
  40410c:	cmp	w0, #0x1
  404110:	b.ne	404120 <print_condition+0x40>  // b.any
  404114:	ldr	x1, [sp, #24]
  404118:	mov	w0, #0x28                  	// #40
  40411c:	bl	4013b0 <fputc@plt>
  404120:	ldr	x0, [sp, #40]
  404124:	ldr	x0, [x0, #8]
  404128:	ldr	x3, [sp, #24]
  40412c:	mov	w2, #0x0                   	// #0
  404130:	mov	w1, #0x0                   	// #0
  404134:	bl	4040e0 <print_condition>
  404138:	ldr	x3, [sp, #24]
  40413c:	mov	x2, #0x4                   	// #4
  404140:	mov	x1, #0x1                   	// #1
  404144:	adrp	x0, 405000 <usage+0x8>
  404148:	add	x0, x0, #0xa88
  40414c:	bl	4015a0 <fwrite@plt>
  404150:	ldr	x0, [sp, #40]
  404154:	ldr	x0, [x0, #16]
  404158:	ldr	x3, [sp, #24]
  40415c:	mov	w2, #0x0                   	// #0
  404160:	mov	w1, #0x0                   	// #0
  404164:	bl	4040e0 <print_condition>
  404168:	ldr	w0, [sp, #36]
  40416c:	cmp	w0, #0x1
  404170:	b.ne	404180 <print_condition+0xa0>  // b.any
  404174:	ldr	x1, [sp, #24]
  404178:	mov	w0, #0x29                  	// #41
  40417c:	bl	4013b0 <fputc@plt>
  404180:	mov	w0, #0x1                   	// #1
  404184:	b	40424c <print_condition+0x16c>
  404188:	ldr	x0, [sp, #40]
  40418c:	ldr	w0, [x0]
  404190:	cmp	w0, #0x1
  404194:	b.ne	404218 <print_condition+0x138>  // b.any
  404198:	ldr	w0, [sp, #36]
  40419c:	cmp	w0, #0x0
  4041a0:	b.ne	4041b0 <print_condition+0xd0>  // b.any
  4041a4:	ldr	x1, [sp, #24]
  4041a8:	mov	w0, #0x28                  	// #40
  4041ac:	bl	4013b0 <fputc@plt>
  4041b0:	ldr	x0, [sp, #40]
  4041b4:	ldr	x0, [x0, #8]
  4041b8:	ldr	x3, [sp, #24]
  4041bc:	mov	w2, #0x0                   	// #0
  4041c0:	mov	w1, #0x1                   	// #1
  4041c4:	bl	4040e0 <print_condition>
  4041c8:	ldr	x3, [sp, #24]
  4041cc:	mov	x2, #0x4                   	// #4
  4041d0:	mov	x1, #0x1                   	// #1
  4041d4:	adrp	x0, 405000 <usage+0x8>
  4041d8:	add	x0, x0, #0xa60
  4041dc:	bl	4015a0 <fwrite@plt>
  4041e0:	ldr	x0, [sp, #40]
  4041e4:	ldr	x0, [x0, #16]
  4041e8:	ldr	x3, [sp, #24]
  4041ec:	mov	w2, #0x0                   	// #0
  4041f0:	mov	w1, #0x1                   	// #1
  4041f4:	bl	4040e0 <print_condition>
  4041f8:	ldr	w0, [sp, #36]
  4041fc:	cmp	w0, #0x0
  404200:	b.ne	404210 <print_condition+0x130>  // b.any
  404204:	ldr	x1, [sp, #24]
  404208:	mov	w0, #0x29                  	// #41
  40420c:	bl	4013b0 <fputc@plt>
  404210:	mov	w0, #0x1                   	// #1
  404214:	b	40424c <print_condition+0x16c>
  404218:	ldr	x0, [sp, #40]
  40421c:	ldr	w0, [x0]
  404220:	cmp	w0, #0x2
  404224:	b.ne	404248 <print_condition+0x168>  // b.any
  404228:	ldr	x0, [sp, #40]
  40422c:	ldr	x0, [x0, #8]
  404230:	ldr	x3, [sp, #24]
  404234:	ldrb	w2, [sp, #35]
  404238:	ldr	w1, [sp, #36]
  40423c:	bl	403bc0 <print_relation>
  404240:	mov	w0, #0x1                   	// #1
  404244:	b	40424c <print_condition+0x16c>
  404248:	mov	w0, #0x0                   	// #0
  40424c:	ldp	x29, x30, [sp], #48
  404250:	ret

0000000000404254 <print_condition_negation>:
  404254:	stp	x29, x30, [sp, #-32]!
  404258:	mov	x29, sp
  40425c:	str	x0, [sp, #24]
  404260:	str	x1, [sp, #16]
  404264:	ldr	x0, [sp, #24]
  404268:	ldr	w0, [x0]
  40426c:	cmp	w0, #0x2
  404270:	b.ne	404310 <print_condition_negation+0xbc>  // b.any
  404274:	ldr	x0, [sp, #24]
  404278:	ldr	x0, [x0, #8]
  40427c:	ldr	w0, [x0, #8]
  404280:	cmp	w0, #0x0
  404284:	b.ne	404310 <print_condition_negation+0xbc>  // b.any
  404288:	ldr	x0, [sp, #24]
  40428c:	ldr	x0, [x0, #8]
  404290:	ldr	x0, [x0, #16]
  404294:	ldr	x0, [x0, #8]
  404298:	cmp	x0, #0x1
  40429c:	b.ne	404310 <print_condition_negation+0xbc>  // b.any
  4042a0:	ldr	x0, [sp, #24]
  4042a4:	ldr	x0, [x0, #8]
  4042a8:	ldr	x0, [x0, #16]
  4042ac:	ldr	x0, [x0]
  4042b0:	ldr	x0, [x0]
  4042b4:	ldr	x1, [x0]
  4042b8:	ldr	x0, [sp, #24]
  4042bc:	ldr	x0, [x0, #8]
  4042c0:	ldr	x0, [x0, #16]
  4042c4:	ldr	x0, [x0]
  4042c8:	ldr	x0, [x0]
  4042cc:	ldr	x0, [x0, #8]
  4042d0:	cmp	x1, x0
  4042d4:	b.ne	404310 <print_condition_negation+0xbc>  // b.any
  4042d8:	ldr	x0, [sp, #24]
  4042dc:	ldr	x0, [x0, #8]
  4042e0:	ldr	x0, [x0, #16]
  4042e4:	ldr	x0, [x0]
  4042e8:	ldr	x0, [x0]
  4042ec:	ldr	x0, [x0]
  4042f0:	ldr	w0, [x0, #8]
  4042f4:	mov	w2, w0
  4042f8:	adrp	x0, 405000 <usage+0x8>
  4042fc:	add	x1, x0, #0xab0
  404300:	ldr	x0, [sp, #16]
  404304:	bl	401640 <fprintf@plt>
  404308:	mov	w0, #0x1                   	// #1
  40430c:	b	404314 <print_condition_negation+0xc0>
  404310:	mov	w0, #0x0                   	// #0
  404314:	ldp	x29, x30, [sp], #32
  404318:	ret

000000000040431c <print_condition_greater>:
  40431c:	stp	x29, x30, [sp, #-64]!
  404320:	mov	x29, sp
  404324:	str	x0, [sp, #24]
  404328:	str	x1, [sp, #16]
  40432c:	ldr	x0, [sp, #24]
  404330:	ldr	w0, [x0]
  404334:	cmp	w0, #0x2
  404338:	b.ne	40446c <print_condition_greater+0x150>  // b.any
  40433c:	ldr	x0, [sp, #24]
  404340:	ldr	x0, [x0, #8]
  404344:	ldr	w0, [x0, #8]
  404348:	cmp	w0, #0x0
  40434c:	b.ne	40446c <print_condition_greater+0x150>  // b.any
  404350:	mov	w0, #0xffffffff            	// #-1
  404354:	str	w0, [sp, #60]
  404358:	str	xzr, [sp, #48]
  40435c:	b	4043e4 <print_condition_greater+0xc8>
  404360:	ldr	x0, [sp, #24]
  404364:	ldr	x0, [x0, #8]
  404368:	ldr	x0, [x0, #16]
  40436c:	ldr	x1, [x0]
  404370:	ldr	x0, [sp, #48]
  404374:	lsl	x0, x0, #3
  404378:	add	x0, x1, x0
  40437c:	ldr	x0, [x0]
  404380:	str	x0, [sp, #40]
  404384:	ldr	x0, [sp, #40]
  404388:	ldr	x0, [x0]
  40438c:	ldr	w0, [x0]
  404390:	cmp	w0, #0x0
  404394:	b.ne	404400 <print_condition_greater+0xe4>  // b.any
  404398:	ldr	x0, [sp, #40]
  40439c:	ldr	x0, [x0, #8]
  4043a0:	ldr	w0, [x0]
  4043a4:	cmp	w0, #0x0
  4043a8:	b.ne	404400 <print_condition_greater+0xe4>  // b.any
  4043ac:	ldr	x0, [sp, #40]
  4043b0:	ldr	x0, [x0]
  4043b4:	ldr	w1, [x0, #8]
  4043b8:	ldr	w0, [sp, #60]
  4043bc:	add	w0, w0, #0x1
  4043c0:	cmp	w1, w0
  4043c4:	b.ne	404400 <print_condition_greater+0xe4>  // b.any
  4043c8:	ldr	x0, [sp, #40]
  4043cc:	ldr	x0, [x0, #8]
  4043d0:	ldr	w0, [x0, #8]
  4043d4:	str	w0, [sp, #60]
  4043d8:	ldr	x0, [sp, #48]
  4043dc:	add	x0, x0, #0x1
  4043e0:	str	x0, [sp, #48]
  4043e4:	ldr	x0, [sp, #24]
  4043e8:	ldr	x0, [x0, #8]
  4043ec:	ldr	x0, [x0, #16]
  4043f0:	ldr	x0, [x0, #8]
  4043f4:	ldr	x1, [sp, #48]
  4043f8:	cmp	x1, x0
  4043fc:	b.cc	404360 <print_condition_greater+0x44>  // b.lo, b.ul, b.last
  404400:	ldr	x0, [sp, #24]
  404404:	ldr	x0, [x0, #8]
  404408:	ldr	x0, [x0, #16]
  40440c:	ldr	x0, [x0, #8]
  404410:	ldr	x1, [sp, #48]
  404414:	cmp	x1, x0
  404418:	b.ne	40446c <print_condition_greater+0x150>  // b.any
  40441c:	ldr	x0, [sp, #24]
  404420:	ldr	x0, [x0, #8]
  404424:	ldr	x0, [x0, #16]
  404428:	ldr	x1, [x0]
  40442c:	ldr	x0, [sp, #48]
  404430:	lsl	x0, x0, #3
  404434:	sub	x0, x0, #0x8
  404438:	add	x0, x1, x0
  40443c:	ldr	x0, [x0]
  404440:	str	x0, [sp, #32]
  404444:	ldr	x0, [sp, #32]
  404448:	ldr	x0, [x0, #8]
  40444c:	ldr	w0, [x0, #8]
  404450:	mov	w2, w0
  404454:	adrp	x0, 405000 <usage+0x8>
  404458:	add	x1, x0, #0xad0
  40445c:	ldr	x0, [sp, #16]
  404460:	bl	401640 <fprintf@plt>
  404464:	mov	w0, #0x1                   	// #1
  404468:	b	404470 <print_condition_greater+0x154>
  40446c:	mov	w0, #0x0                   	// #0
  404470:	ldp	x29, x30, [sp], #64
  404474:	ret

0000000000404478 <cldr_plural_rule_list_print>:
  404478:	stp	x29, x30, [sp, #-160]!
  40447c:	mov	x29, sp
  404480:	str	x0, [sp, #24]
  404484:	str	x1, [sp, #16]
  404488:	str	wzr, [sp, #132]
  40448c:	str	xzr, [sp, #152]
  404490:	b	4044c8 <cldr_plural_rule_list_print+0x50>
  404494:	ldr	x0, [sp, #24]
  404498:	ldr	x1, [x0]
  40449c:	ldr	x0, [sp, #152]
  4044a0:	lsl	x0, x0, #3
  4044a4:	add	x0, x1, x0
  4044a8:	ldr	x0, [x0]
  4044ac:	str	x0, [sp, #40]
  4044b0:	ldr	x0, [sp, #40]
  4044b4:	ldr	x0, [x0, #8]
  4044b8:	bl	403418 <eval_condition>
  4044bc:	ldr	x0, [sp, #152]
  4044c0:	add	x0, x0, #0x1
  4044c4:	str	x0, [sp, #152]
  4044c8:	ldr	x0, [sp, #24]
  4044cc:	ldr	x0, [x0, #8]
  4044d0:	ldr	x1, [sp, #152]
  4044d4:	cmp	x1, x0
  4044d8:	b.cc	404494 <cldr_plural_rule_list_print+0x1c>  // b.lo, b.ul, b.last
  4044dc:	str	xzr, [sp, #152]
  4044e0:	b	404554 <cldr_plural_rule_list_print+0xdc>
  4044e4:	ldr	x0, [sp, #24]
  4044e8:	ldr	x1, [x0]
  4044ec:	ldr	x0, [sp, #152]
  4044f0:	lsl	x0, x0, #3
  4044f4:	add	x0, x1, x0
  4044f8:	ldr	x0, [x0]
  4044fc:	str	x0, [sp, #56]
  404500:	ldr	x0, [sp, #56]
  404504:	ldr	x0, [x0, #8]
  404508:	bl	403784 <find_largest_modulus>
  40450c:	str	w0, [sp, #52]
  404510:	ldr	x0, [sp, #56]
  404514:	ldr	x0, [x0, #8]
  404518:	bl	403818 <find_largest_number>
  40451c:	str	w0, [sp, #48]
  404520:	ldr	w1, [sp, #52]
  404524:	ldr	w0, [sp, #48]
  404528:	cmp	w1, w0
  40452c:	b.lt	404548 <cldr_plural_rule_list_print+0xd0>  // b.tstop
  404530:	ldr	w1, [sp, #52]
  404534:	ldr	w0, [sp, #132]
  404538:	cmp	w1, w0
  40453c:	b.le	404548 <cldr_plural_rule_list_print+0xd0>
  404540:	ldr	w0, [sp, #52]
  404544:	str	w0, [sp, #132]
  404548:	ldr	x0, [sp, #152]
  40454c:	add	x0, x0, #0x1
  404550:	str	x0, [sp, #152]
  404554:	ldr	x0, [sp, #24]
  404558:	ldr	x0, [x0, #8]
  40455c:	ldr	x1, [sp, #152]
  404560:	cmp	x1, x0
  404564:	b.cc	4044e4 <cldr_plural_rule_list_print+0x6c>  // b.lo, b.ul, b.last
  404568:	ldr	w0, [sp, #132]
  40456c:	cmp	w0, #0x0
  404570:	b.le	4046f4 <cldr_plural_rule_list_print+0x27c>
  404574:	ldrsw	x0, [sp, #132]
  404578:	bl	401470 <xmalloc@plt>
  40457c:	str	x0, [sp, #96]
  404580:	ldrsw	x0, [sp, #132]
  404584:	mov	x2, x0
  404588:	mov	w1, #0x0                   	// #0
  40458c:	ldr	x0, [sp, #96]
  404590:	bl	401460 <memset@plt>
  404594:	str	xzr, [sp, #152]
  404598:	b	404684 <cldr_plural_rule_list_print+0x20c>
  40459c:	ldr	x0, [sp, #24]
  4045a0:	ldr	x1, [x0]
  4045a4:	ldr	x0, [sp, #152]
  4045a8:	lsl	x0, x0, #3
  4045ac:	add	x0, x1, x0
  4045b0:	ldr	x0, [x0]
  4045b4:	str	x0, [sp, #88]
  4045b8:	str	wzr, [sp, #128]
  4045bc:	b	40460c <cldr_plural_rule_list_print+0x194>
  4045c0:	ldr	x0, [sp, #88]
  4045c4:	ldr	x2, [x0, #8]
  4045c8:	ldr	w0, [sp, #128]
  4045cc:	add	w0, w0, #0x1
  4045d0:	mov	w1, w0
  4045d4:	mov	x0, x2
  4045d8:	bl	403968 <apply_condition>
  4045dc:	strb	w0, [sp, #87]
  4045e0:	ldrb	w0, [sp, #87]
  4045e4:	cmp	w0, #0x0
  4045e8:	b.eq	404600 <cldr_plural_rule_list_print+0x188>  // b.none
  4045ec:	ldrsw	x0, [sp, #128]
  4045f0:	ldr	x1, [sp, #96]
  4045f4:	add	x0, x1, x0
  4045f8:	mov	w1, #0x1                   	// #1
  4045fc:	strb	w1, [x0]
  404600:	ldr	w0, [sp, #128]
  404604:	add	w0, w0, #0x1
  404608:	str	w0, [sp, #128]
  40460c:	ldr	w1, [sp, #128]
  404610:	ldr	w0, [sp, #132]
  404614:	cmp	w1, w0
  404618:	b.lt	4045c0 <cldr_plural_rule_list_print+0x148>  // b.tstop
  40461c:	str	wzr, [sp, #128]
  404620:	b	404650 <cldr_plural_rule_list_print+0x1d8>
  404624:	ldrsw	x0, [sp, #128]
  404628:	ldr	x1, [sp, #96]
  40462c:	add	x0, x1, x0
  404630:	ldrb	w0, [x0]
  404634:	eor	w0, w0, #0x1
  404638:	and	w0, w0, #0xff
  40463c:	cmp	w0, #0x0
  404640:	b.ne	404664 <cldr_plural_rule_list_print+0x1ec>  // b.any
  404644:	ldr	w0, [sp, #128]
  404648:	add	w0, w0, #0x1
  40464c:	str	w0, [sp, #128]
  404650:	ldr	w1, [sp, #128]
  404654:	ldr	w0, [sp, #132]
  404658:	cmp	w1, w0
  40465c:	b.lt	404624 <cldr_plural_rule_list_print+0x1ac>  // b.tstop
  404660:	b	404668 <cldr_plural_rule_list_print+0x1f0>
  404664:	nop
  404668:	ldr	w1, [sp, #128]
  40466c:	ldr	w0, [sp, #132]
  404670:	cmp	w1, w0
  404674:	b.eq	40469c <cldr_plural_rule_list_print+0x224>  // b.none
  404678:	ldr	x0, [sp, #152]
  40467c:	add	x0, x0, #0x1
  404680:	str	x0, [sp, #152]
  404684:	ldr	x0, [sp, #24]
  404688:	ldr	x0, [x0, #8]
  40468c:	ldr	x1, [sp, #152]
  404690:	cmp	x1, x0
  404694:	b.cc	40459c <cldr_plural_rule_list_print+0x124>  // b.lo, b.ul, b.last
  404698:	b	4046a0 <cldr_plural_rule_list_print+0x228>
  40469c:	nop
  4046a0:	ldr	x0, [sp, #96]
  4046a4:	bl	401580 <free@plt>
  4046a8:	b	4046e0 <cldr_plural_rule_list_print+0x268>
  4046ac:	ldr	x0, [sp, #24]
  4046b0:	ldr	x1, [x0]
  4046b4:	ldr	x0, [sp, #24]
  4046b8:	ldr	x0, [x0, #8]
  4046bc:	sub	x2, x0, #0x1
  4046c0:	ldr	x0, [sp, #24]
  4046c4:	str	x2, [x0, #8]
  4046c8:	ldr	x0, [sp, #24]
  4046cc:	ldr	x0, [x0, #8]
  4046d0:	lsl	x0, x0, #3
  4046d4:	add	x0, x1, x0
  4046d8:	ldr	x0, [x0]
  4046dc:	bl	402fb8 <cldr_plural_rule_free>
  4046e0:	ldr	x0, [sp, #24]
  4046e4:	ldr	x0, [x0, #8]
  4046e8:	ldr	x1, [sp, #152]
  4046ec:	cmp	x1, x0
  4046f0:	b.cc	4046ac <cldr_plural_rule_list_print+0x234>  // b.lo, b.ul, b.last
  4046f4:	str	xzr, [sp, #152]
  4046f8:	mov	x0, #0x1                   	// #1
  4046fc:	str	x0, [sp, #136]
  404700:	b	40476c <cldr_plural_rule_list_print+0x2f4>
  404704:	ldr	x0, [sp, #24]
  404708:	ldr	x1, [x0]
  40470c:	ldr	x0, [sp, #152]
  404710:	lsl	x0, x0, #3
  404714:	add	x0, x1, x0
  404718:	ldr	x0, [x0]
  40471c:	ldr	x0, [x0, #8]
  404720:	ldr	w0, [x0]
  404724:	cmp	w0, #0x3
  404728:	b.eq	404760 <cldr_plural_rule_list_print+0x2e8>  // b.none
  40472c:	ldr	x0, [sp, #24]
  404730:	ldr	x1, [x0]
  404734:	ldr	x0, [sp, #152]
  404738:	lsl	x0, x0, #3
  40473c:	add	x0, x1, x0
  404740:	ldr	x0, [x0]
  404744:	ldr	x0, [x0, #8]
  404748:	ldr	w0, [x0]
  40474c:	cmp	w0, #0x4
  404750:	b.eq	404760 <cldr_plural_rule_list_print+0x2e8>  // b.none
  404754:	ldr	x0, [sp, #136]
  404758:	add	x0, x0, #0x1
  40475c:	str	x0, [sp, #136]
  404760:	ldr	x0, [sp, #152]
  404764:	add	x0, x0, #0x1
  404768:	str	x0, [sp, #152]
  40476c:	ldr	x0, [sp, #24]
  404770:	ldr	x0, [x0, #8]
  404774:	ldr	x1, [sp, #152]
  404778:	cmp	x1, x0
  40477c:	b.cc	404704 <cldr_plural_rule_list_print+0x28c>  // b.lo, b.ul, b.last
  404780:	ldr	x0, [sp, #136]
  404784:	cmp	x0, #0x1
  404788:	b.ne	4047a8 <cldr_plural_rule_list_print+0x330>  // b.any
  40478c:	ldr	x3, [sp, #16]
  404790:	mov	x2, #0x16                  	// #22
  404794:	mov	x1, #0x1                   	// #1
  404798:	adrp	x0, 405000 <usage+0x8>
  40479c:	add	x0, x0, #0xaf0
  4047a0:	bl	4015a0 <fwrite@plt>
  4047a4:	b	404a60 <cldr_plural_rule_list_print+0x5e8>
  4047a8:	ldr	x0, [sp, #136]
  4047ac:	cmp	x0, #0x2
  4047b0:	b.ne	40489c <cldr_plural_rule_list_print+0x424>  // b.any
  4047b4:	str	xzr, [sp, #120]
  4047b8:	b	404818 <cldr_plural_rule_list_print+0x3a0>
  4047bc:	ldr	x0, [sp, #24]
  4047c0:	ldr	x1, [x0]
  4047c4:	ldr	x0, [sp, #120]
  4047c8:	lsl	x0, x0, #3
  4047cc:	add	x0, x1, x0
  4047d0:	ldr	x0, [x0]
  4047d4:	ldr	x0, [x0, #8]
  4047d8:	ldr	w0, [x0]
  4047dc:	cmp	w0, #0x3
  4047e0:	b.eq	40480c <cldr_plural_rule_list_print+0x394>  // b.none
  4047e4:	ldr	x0, [sp, #24]
  4047e8:	ldr	x1, [x0]
  4047ec:	ldr	x0, [sp, #120]
  4047f0:	lsl	x0, x0, #3
  4047f4:	add	x0, x1, x0
  4047f8:	ldr	x0, [x0]
  4047fc:	ldr	x0, [x0, #8]
  404800:	ldr	w0, [x0]
  404804:	cmp	w0, #0x4
  404808:	b.ne	404830 <cldr_plural_rule_list_print+0x3b8>  // b.any
  40480c:	ldr	x0, [sp, #120]
  404810:	add	x0, x0, #0x1
  404814:	str	x0, [sp, #120]
  404818:	ldr	x0, [sp, #24]
  40481c:	ldr	x0, [x0, #8]
  404820:	ldr	x1, [sp, #120]
  404824:	cmp	x1, x0
  404828:	b.cc	4047bc <cldr_plural_rule_list_print+0x344>  // b.lo, b.ul, b.last
  40482c:	b	404834 <cldr_plural_rule_list_print+0x3bc>
  404830:	nop
  404834:	ldr	x0, [sp, #24]
  404838:	ldr	x1, [x0]
  40483c:	ldr	x0, [sp, #120]
  404840:	lsl	x0, x0, #3
  404844:	add	x0, x1, x0
  404848:	ldr	x0, [x0]
  40484c:	ldr	x0, [x0, #8]
  404850:	str	x0, [sp, #72]
  404854:	str	xzr, [sp, #120]
  404858:	b	404890 <cldr_plural_rule_list_print+0x418>
  40485c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  404860:	add	x0, x0, #0x1b0
  404864:	ldr	x1, [sp, #120]
  404868:	ldr	x2, [x0, x1, lsl #3]
  40486c:	ldr	x1, [sp, #16]
  404870:	ldr	x0, [sp, #72]
  404874:	blr	x2
  404878:	and	w0, w0, #0xff
  40487c:	cmp	w0, #0x0
  404880:	b.ne	404a5c <cldr_plural_rule_list_print+0x5e4>  // b.any
  404884:	ldr	x0, [sp, #120]
  404888:	add	x0, x0, #0x1
  40488c:	str	x0, [sp, #120]
  404890:	ldr	x0, [sp, #120]
  404894:	cmp	x0, #0x1
  404898:	b.ls	40485c <cldr_plural_rule_list_print+0x3e4>  // b.plast
  40489c:	ldr	x2, [sp, #136]
  4048a0:	adrp	x0, 405000 <usage+0x8>
  4048a4:	add	x1, x0, #0xb08
  4048a8:	ldr	x0, [sp, #16]
  4048ac:	bl	401640 <fprintf@plt>
  4048b0:	str	xzr, [sp, #152]
  4048b4:	str	xzr, [sp, #144]
  4048b8:	b	4049fc <cldr_plural_rule_list_print+0x584>
  4048bc:	ldr	x0, [sp, #24]
  4048c0:	ldr	x1, [x0]
  4048c4:	ldr	x0, [sp, #152]
  4048c8:	lsl	x0, x0, #3
  4048cc:	add	x0, x1, x0
  4048d0:	ldr	x0, [x0]
  4048d4:	str	x0, [sp, #64]
  4048d8:	ldr	x0, [sp, #64]
  4048dc:	ldr	x4, [x0, #8]
  4048e0:	ldr	x0, [sp, #136]
  4048e4:	cmp	x0, #0x2
  4048e8:	cset	w0, eq  // eq = none
  4048ec:	and	w0, w0, #0xff
  4048f0:	ldr	x3, [sp, #16]
  4048f4:	mov	w2, w0
  4048f8:	mov	w1, #0x4                   	// #4
  4048fc:	mov	x0, x4
  404900:	bl	4040e0 <print_condition>
  404904:	and	w0, w0, #0xff
  404908:	cmp	w0, #0x0
  40490c:	b.eq	4049f0 <cldr_plural_rule_list_print+0x578>  // b.none
  404910:	ldr	x0, [sp, #24]
  404914:	ldr	x0, [x0, #8]
  404918:	cmp	x0, #0x1
  40491c:	b.ls	4049f0 <cldr_plural_rule_list_print+0x578>  // b.plast
  404920:	strb	wzr, [sp, #119]
  404924:	ldr	x0, [sp, #152]
  404928:	add	x0, x0, #0x1
  40492c:	str	x0, [sp, #104]
  404930:	b	404998 <cldr_plural_rule_list_print+0x520>
  404934:	ldr	x0, [sp, #24]
  404938:	ldr	x1, [x0]
  40493c:	ldr	x0, [sp, #104]
  404940:	lsl	x0, x0, #3
  404944:	add	x0, x1, x0
  404948:	ldr	x0, [x0]
  40494c:	ldr	x0, [x0, #8]
  404950:	ldr	w0, [x0]
  404954:	cmp	w0, #0x3
  404958:	b.eq	40498c <cldr_plural_rule_list_print+0x514>  // b.none
  40495c:	ldr	x0, [sp, #24]
  404960:	ldr	x1, [x0]
  404964:	ldr	x0, [sp, #104]
  404968:	lsl	x0, x0, #3
  40496c:	add	x0, x1, x0
  404970:	ldr	x0, [x0]
  404974:	ldr	x0, [x0, #8]
  404978:	ldr	w0, [x0]
  40497c:	cmp	w0, #0x4
  404980:	b.eq	40498c <cldr_plural_rule_list_print+0x514>  // b.none
  404984:	mov	w0, #0x1                   	// #1
  404988:	strb	w0, [sp, #119]
  40498c:	ldr	x0, [sp, #104]
  404990:	add	x0, x0, #0x1
  404994:	str	x0, [sp, #104]
  404998:	ldr	x0, [sp, #24]
  40499c:	ldr	x0, [x0, #8]
  4049a0:	ldr	x1, [sp, #104]
  4049a4:	cmp	x1, x0
  4049a8:	b.cc	404934 <cldr_plural_rule_list_print+0x4bc>  // b.lo, b.ul, b.last
  4049ac:	ldr	x0, [sp, #24]
  4049b0:	ldr	x0, [x0, #8]
  4049b4:	sub	x0, x0, #0x1
  4049b8:	ldr	x1, [sp, #152]
  4049bc:	cmp	x1, x0
  4049c0:	b.cs	4049f0 <cldr_plural_rule_list_print+0x578>  // b.hs, b.nlast
  4049c4:	ldrb	w0, [sp, #119]
  4049c8:	cmp	w0, #0x0
  4049cc:	b.eq	4049f0 <cldr_plural_rule_list_print+0x578>  // b.none
  4049d0:	ldr	x0, [sp, #144]
  4049d4:	add	x1, x0, #0x1
  4049d8:	str	x1, [sp, #144]
  4049dc:	mov	x2, x0
  4049e0:	adrp	x0, 405000 <usage+0x8>
  4049e4:	add	x1, x0, #0xb20
  4049e8:	ldr	x0, [sp, #16]
  4049ec:	bl	401640 <fprintf@plt>
  4049f0:	ldr	x0, [sp, #152]
  4049f4:	add	x0, x0, #0x1
  4049f8:	str	x0, [sp, #152]
  4049fc:	ldr	x0, [sp, #24]
  404a00:	ldr	x0, [x0, #8]
  404a04:	ldr	x1, [sp, #152]
  404a08:	cmp	x1, x0
  404a0c:	b.cc	4048bc <cldr_plural_rule_list_print+0x444>  // b.lo, b.ul, b.last
  404a10:	ldr	x0, [sp, #24]
  404a14:	ldr	x0, [x0, #8]
  404a18:	cmp	x0, #0x1
  404a1c:	b.ls	404a40 <cldr_plural_rule_list_print+0x5c8>  // b.plast
  404a20:	ldr	x0, [sp, #144]
  404a24:	add	x0, x0, #0x1
  404a28:	mov	x3, x0
  404a2c:	ldr	x2, [sp, #144]
  404a30:	adrp	x0, 405000 <usage+0x8>
  404a34:	add	x1, x0, #0xb30
  404a38:	ldr	x0, [sp, #16]
  404a3c:	bl	401640 <fprintf@plt>
  404a40:	ldr	x3, [sp, #16]
  404a44:	mov	x2, #0x3                   	// #3
  404a48:	mov	x1, #0x1                   	// #1
  404a4c:	adrp	x0, 405000 <usage+0x8>
  404a50:	add	x0, x0, #0xb40
  404a54:	bl	4015a0 <fwrite@plt>
  404a58:	b	404a60 <cldr_plural_rule_list_print+0x5e8>
  404a5c:	nop
  404a60:	ldp	x29, x30, [sp], #160
  404a64:	ret

0000000000404a68 <extract_rules>:
  404a68:	stp	x29, x30, [sp, #-192]!
  404a6c:	mov	x29, sp
  404a70:	str	x19, [sp, #16]
  404a74:	str	x0, [sp, #56]
  404a78:	str	x1, [sp, #48]
  404a7c:	str	x2, [sp, #40]
  404a80:	str	x3, [sp, #32]
  404a84:	str	xzr, [sp, #176]
  404a88:	str	xzr, [sp, #168]
  404a8c:	str	xzr, [sp, #160]
  404a90:	ldr	x0, [sp, #56]
  404a94:	bl	4013c0 <fileno@plt>
  404a98:	mov	w3, #0x940                 	// #2368
  404a9c:	mov	x2, #0x0                   	// #0
  404aa0:	ldr	x1, [sp, #40]
  404aa4:	bl	4014c0 <xmlReadFd@plt>
  404aa8:	str	x0, [sp, #128]
  404aac:	ldr	x0, [sp, #128]
  404ab0:	cmp	x0, #0x0
  404ab4:	b.ne	404ad8 <extract_rules+0x70>  // b.any
  404ab8:	adrp	x0, 405000 <usage+0x8>
  404abc:	add	x0, x0, #0xb48
  404ac0:	bl	401620 <gettext@plt>
  404ac4:	ldr	x3, [sp, #40]
  404ac8:	mov	x2, x0
  404acc:	mov	w1, #0x0                   	// #0
  404ad0:	mov	w0, #0x1                   	// #1
  404ad4:	bl	401350 <error@plt>
  404ad8:	ldr	x0, [sp, #128]
  404adc:	bl	401600 <xmlDocGetRootElement@plt>
  404ae0:	str	x0, [sp, #120]
  404ae4:	ldr	x0, [sp, #120]
  404ae8:	cmp	x0, #0x0
  404aec:	b.eq	404b10 <extract_rules+0xa8>  // b.none
  404af0:	ldr	x0, [sp, #120]
  404af4:	ldr	x2, [x0, #16]
  404af8:	adrp	x0, 405000 <usage+0x8>
  404afc:	add	x1, x0, #0xb68
  404b00:	mov	x0, x2
  404b04:	bl	4015f0 <xmlStrEqual@plt>
  404b08:	cmp	w0, #0x0
  404b0c:	b.ne	404b50 <extract_rules+0xe8>  // b.any
  404b10:	ldr	x0, [sp, #120]
  404b14:	bl	4015b0 <xmlGetLineNo@plt>
  404b18:	mov	w19, w0
  404b1c:	adrp	x0, 405000 <usage+0x8>
  404b20:	add	x0, x0, #0xb80
  404b24:	bl	401620 <gettext@plt>
  404b28:	mov	x1, x0
  404b2c:	adrp	x0, 405000 <usage+0x8>
  404b30:	add	x5, x0, #0xb68
  404b34:	mov	x4, x1
  404b38:	mov	w3, w19
  404b3c:	ldr	x2, [sp, #40]
  404b40:	mov	w1, #0x0                   	// #0
  404b44:	mov	w0, #0x0                   	// #0
  404b48:	bl	401630 <error_at_line@plt>
  404b4c:	b	404fe0 <extract_rules+0x578>
  404b50:	ldr	x0, [sp, #120]
  404b54:	ldr	x0, [x0, #24]
  404b58:	str	x0, [sp, #184]
  404b5c:	b	404b9c <extract_rules+0x134>
  404b60:	ldr	x0, [sp, #184]
  404b64:	ldr	w0, [x0, #8]
  404b68:	cmp	w0, #0x1
  404b6c:	b.ne	404b90 <extract_rules+0x128>  // b.any
  404b70:	ldr	x0, [sp, #184]
  404b74:	ldr	x2, [x0, #16]
  404b78:	adrp	x0, 405000 <usage+0x8>
  404b7c:	add	x1, x0, #0xba0
  404b80:	mov	x0, x2
  404b84:	bl	4015f0 <xmlStrEqual@plt>
  404b88:	cmp	w0, #0x0
  404b8c:	b.ne	404bac <extract_rules+0x144>  // b.any
  404b90:	ldr	x0, [sp, #184]
  404b94:	ldr	x0, [x0, #48]
  404b98:	str	x0, [sp, #184]
  404b9c:	ldr	x0, [sp, #184]
  404ba0:	cmp	x0, #0x0
  404ba4:	b.ne	404b60 <extract_rules+0xf8>  // b.any
  404ba8:	b	404bb0 <extract_rules+0x148>
  404bac:	nop
  404bb0:	ldr	x0, [sp, #184]
  404bb4:	cmp	x0, #0x0
  404bb8:	b.ne	404bf0 <extract_rules+0x188>  // b.any
  404bbc:	adrp	x0, 405000 <usage+0x8>
  404bc0:	add	x0, x0, #0xba8
  404bc4:	bl	401620 <gettext@plt>
  404bc8:	mov	x1, x0
  404bcc:	adrp	x0, 405000 <usage+0x8>
  404bd0:	add	x4, x0, #0xba0
  404bd4:	adrp	x0, 405000 <usage+0x8>
  404bd8:	add	x3, x0, #0xb68
  404bdc:	mov	x2, x1
  404be0:	mov	w1, #0x0                   	// #0
  404be4:	mov	w0, #0x0                   	// #0
  404be8:	bl	401350 <error@plt>
  404bec:	b	404fe0 <extract_rules+0x578>
  404bf0:	ldr	x0, [sp, #32]
  404bf4:	bl	401330 <strlen@plt>
  404bf8:	str	x0, [sp, #112]
  404bfc:	ldr	x0, [sp, #184]
  404c00:	ldr	x0, [x0, #24]
  404c04:	str	x0, [sp, #184]
  404c08:	b	404f9c <extract_rules+0x534>
  404c0c:	strb	wzr, [sp, #143]
  404c10:	ldr	x0, [sp, #184]
  404c14:	ldr	w0, [x0, #8]
  404c18:	cmp	w0, #0x1
  404c1c:	b.ne	404f84 <extract_rules+0x51c>  // b.any
  404c20:	ldr	x0, [sp, #184]
  404c24:	ldr	x2, [x0, #16]
  404c28:	adrp	x0, 405000 <usage+0x8>
  404c2c:	add	x1, x0, #0xbe0
  404c30:	mov	x0, x2
  404c34:	bl	4015f0 <xmlStrEqual@plt>
  404c38:	cmp	w0, #0x0
  404c3c:	b.eq	404f84 <extract_rules+0x51c>  // b.none
  404c40:	adrp	x0, 405000 <usage+0x8>
  404c44:	add	x1, x0, #0xbf0
  404c48:	ldr	x0, [sp, #184]
  404c4c:	bl	401370 <xmlHasProp@plt>
  404c50:	cmp	x0, #0x0
  404c54:	b.ne	404ca0 <extract_rules+0x238>  // b.any
  404c58:	ldr	x0, [sp, #184]
  404c5c:	bl	4015b0 <xmlGetLineNo@plt>
  404c60:	mov	w19, w0
  404c64:	adrp	x0, 405000 <usage+0x8>
  404c68:	add	x0, x0, #0xbf8
  404c6c:	bl	401620 <gettext@plt>
  404c70:	mov	x1, x0
  404c74:	adrp	x0, 405000 <usage+0x8>
  404c78:	add	x6, x0, #0xbf0
  404c7c:	adrp	x0, 405000 <usage+0x8>
  404c80:	add	x5, x0, #0xbe0
  404c84:	mov	x4, x1
  404c88:	mov	w3, w19
  404c8c:	ldr	x2, [sp, #40]
  404c90:	mov	w1, #0x0                   	// #0
  404c94:	mov	w0, #0x0                   	// #0
  404c98:	bl	401630 <error_at_line@plt>
  404c9c:	b	404f90 <extract_rules+0x528>
  404ca0:	adrp	x0, 405000 <usage+0x8>
  404ca4:	add	x1, x0, #0xbf0
  404ca8:	ldr	x0, [sp, #184]
  404cac:	bl	401410 <xmlGetProp@plt>
  404cb0:	str	x0, [sp, #96]
  404cb4:	ldr	x0, [sp, #96]
  404cb8:	str	x0, [sp, #152]
  404cbc:	b	404d80 <extract_rules+0x318>
  404cc0:	ldr	x0, [sp, #152]
  404cc4:	add	x0, x0, #0x1
  404cc8:	str	x0, [sp, #152]
  404ccc:	ldr	x0, [sp, #152]
  404cd0:	ldrb	w0, [x0]
  404cd4:	bl	4015c0 <c_isspace@plt>
  404cd8:	and	w0, w0, #0xff
  404cdc:	cmp	w0, #0x0
  404ce0:	b.ne	404cc0 <extract_rules+0x258>  // b.any
  404ce4:	ldr	x0, [sp, #112]
  404ce8:	mov	w2, w0
  404cec:	ldr	x1, [sp, #32]
  404cf0:	ldr	x0, [sp, #152]
  404cf4:	bl	4015d0 <xmlStrncmp@plt>
  404cf8:	cmp	w0, #0x0
  404cfc:	b.ne	404d50 <extract_rules+0x2e8>  // b.any
  404d00:	ldr	x1, [sp, #152]
  404d04:	ldr	x0, [sp, #112]
  404d08:	add	x0, x1, x0
  404d0c:	ldrb	w0, [x0]
  404d10:	cmp	w0, #0x0
  404d14:	b.eq	404d38 <extract_rules+0x2d0>  // b.none
  404d18:	ldr	x1, [sp, #152]
  404d1c:	ldr	x0, [sp, #112]
  404d20:	add	x0, x1, x0
  404d24:	ldrb	w0, [x0]
  404d28:	bl	4015c0 <c_isspace@plt>
  404d2c:	and	w0, w0, #0xff
  404d30:	cmp	w0, #0x0
  404d34:	b.eq	404d50 <extract_rules+0x2e8>  // b.none
  404d38:	mov	w0, #0x1                   	// #1
  404d3c:	strb	w0, [sp, #143]
  404d40:	b	404d90 <extract_rules+0x328>
  404d44:	ldr	x0, [sp, #152]
  404d48:	add	x0, x0, #0x1
  404d4c:	str	x0, [sp, #152]
  404d50:	ldr	x0, [sp, #152]
  404d54:	ldrb	w0, [x0]
  404d58:	cmp	w0, #0x0
  404d5c:	b.eq	404d80 <extract_rules+0x318>  // b.none
  404d60:	ldr	x0, [sp, #152]
  404d64:	ldrb	w0, [x0]
  404d68:	bl	4015c0 <c_isspace@plt>
  404d6c:	and	w0, w0, #0xff
  404d70:	eor	w0, w0, #0x1
  404d74:	and	w0, w0, #0xff
  404d78:	cmp	w0, #0x0
  404d7c:	b.ne	404d44 <extract_rules+0x2dc>  // b.any
  404d80:	ldr	x0, [sp, #152]
  404d84:	ldrb	w0, [x0]
  404d88:	cmp	w0, #0x0
  404d8c:	b.ne	404ccc <extract_rules+0x264>  // b.any
  404d90:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  404d94:	add	x0, x0, #0x1e8
  404d98:	ldr	x1, [x0]
  404d9c:	ldr	x0, [sp, #96]
  404da0:	blr	x1
  404da4:	ldrb	w0, [sp, #143]
  404da8:	eor	w0, w0, #0x1
  404dac:	and	w0, w0, #0xff
  404db0:	cmp	w0, #0x0
  404db4:	b.ne	404f8c <extract_rules+0x524>  // b.any
  404db8:	ldr	x0, [sp, #184]
  404dbc:	ldr	x0, [x0, #24]
  404dc0:	str	x0, [sp, #144]
  404dc4:	b	404f74 <extract_rules+0x50c>
  404dc8:	ldr	x0, [sp, #144]
  404dcc:	ldr	w0, [x0, #8]
  404dd0:	cmp	w0, #0x1
  404dd4:	b.ne	404f64 <extract_rules+0x4fc>  // b.any
  404dd8:	ldr	x0, [sp, #144]
  404ddc:	ldr	x2, [x0, #16]
  404de0:	adrp	x0, 405000 <usage+0x8>
  404de4:	add	x1, x0, #0xc28
  404de8:	mov	x0, x2
  404dec:	bl	4015f0 <xmlStrEqual@plt>
  404df0:	cmp	w0, #0x0
  404df4:	b.eq	404f64 <extract_rules+0x4fc>  // b.none
  404df8:	adrp	x0, 405000 <usage+0x8>
  404dfc:	add	x1, x0, #0xc38
  404e00:	ldr	x0, [sp, #144]
  404e04:	bl	401370 <xmlHasProp@plt>
  404e08:	cmp	x0, #0x0
  404e0c:	b.ne	404e58 <extract_rules+0x3f0>  // b.any
  404e10:	ldr	x0, [sp, #144]
  404e14:	bl	4015b0 <xmlGetLineNo@plt>
  404e18:	mov	w19, w0
  404e1c:	adrp	x0, 405000 <usage+0x8>
  404e20:	add	x0, x0, #0xbf8
  404e24:	bl	401620 <gettext@plt>
  404e28:	mov	x1, x0
  404e2c:	adrp	x0, 405000 <usage+0x8>
  404e30:	add	x6, x0, #0xc38
  404e34:	adrp	x0, 405000 <usage+0x8>
  404e38:	add	x5, x0, #0xc28
  404e3c:	mov	x4, x1
  404e40:	mov	w3, w19
  404e44:	ldr	x2, [sp, #40]
  404e48:	mov	w1, #0x0                   	// #0
  404e4c:	mov	w0, #0x0                   	// #0
  404e50:	bl	401630 <error_at_line@plt>
  404e54:	b	404f90 <extract_rules+0x528>
  404e58:	adrp	x0, 405000 <usage+0x8>
  404e5c:	add	x1, x0, #0xc38
  404e60:	ldr	x0, [sp, #144]
  404e64:	bl	401410 <xmlGetProp@plt>
  404e68:	str	x0, [sp, #88]
  404e6c:	ldr	x0, [sp, #144]
  404e70:	bl	4014b0 <xmlNodeGetContent@plt>
  404e74:	str	x0, [sp, #80]
  404e78:	ldr	x0, [sp, #88]
  404e7c:	bl	401490 <xmlStrlen@plt>
  404e80:	sxtw	x19, w0
  404e84:	ldr	x0, [sp, #80]
  404e88:	bl	401490 <xmlStrlen@plt>
  404e8c:	sxtw	x0, w0
  404e90:	add	x0, x19, x0
  404e94:	add	x0, x0, #0x4
  404e98:	str	x0, [sp, #72]
  404e9c:	ldr	x1, [sp, #160]
  404ea0:	ldr	x0, [sp, #72]
  404ea4:	add	x0, x1, x0
  404ea8:	add	x0, x0, #0x1
  404eac:	ldr	x1, [sp, #168]
  404eb0:	cmp	x1, x0
  404eb4:	b.cs	404f04 <extract_rules+0x49c>  // b.hs, b.nlast
  404eb8:	ldr	x0, [sp, #168]
  404ebc:	lsl	x0, x0, #1
  404ec0:	str	x0, [sp, #168]
  404ec4:	ldr	x1, [sp, #160]
  404ec8:	ldr	x0, [sp, #72]
  404ecc:	add	x0, x1, x0
  404ed0:	add	x0, x0, #0x1
  404ed4:	ldr	x1, [sp, #168]
  404ed8:	cmp	x1, x0
  404edc:	b.cs	404ef4 <extract_rules+0x48c>  // b.hs, b.nlast
  404ee0:	ldr	x1, [sp, #160]
  404ee4:	ldr	x0, [sp, #72]
  404ee8:	add	x0, x1, x0
  404eec:	add	x0, x0, #0x1
  404ef0:	str	x0, [sp, #168]
  404ef4:	ldr	x1, [sp, #168]
  404ef8:	ldr	x0, [sp, #176]
  404efc:	bl	401400 <xrealloc@plt>
  404f00:	str	x0, [sp, #176]
  404f04:	ldr	x1, [sp, #176]
  404f08:	ldr	x0, [sp, #160]
  404f0c:	add	x4, x1, x0
  404f10:	ldr	x3, [sp, #80]
  404f14:	ldr	x2, [sp, #88]
  404f18:	adrp	x0, 405000 <usage+0x8>
  404f1c:	add	x1, x0, #0xc40
  404f20:	mov	x0, x4
  404f24:	bl	401380 <sprintf@plt>
  404f28:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  404f2c:	add	x0, x0, #0x1e8
  404f30:	ldr	x1, [x0]
  404f34:	ldr	x0, [sp, #88]
  404f38:	blr	x1
  404f3c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  404f40:	add	x0, x0, #0x1e8
  404f44:	ldr	x1, [x0]
  404f48:	ldr	x0, [sp, #80]
  404f4c:	blr	x1
  404f50:	ldr	x1, [sp, #160]
  404f54:	ldr	x0, [sp, #72]
  404f58:	add	x0, x1, x0
  404f5c:	str	x0, [sp, #160]
  404f60:	b	404f68 <extract_rules+0x500>
  404f64:	nop
  404f68:	ldr	x0, [sp, #144]
  404f6c:	ldr	x0, [x0, #48]
  404f70:	str	x0, [sp, #144]
  404f74:	ldr	x0, [sp, #144]
  404f78:	cmp	x0, #0x0
  404f7c:	b.ne	404dc8 <extract_rules+0x360>  // b.any
  404f80:	b	404f90 <extract_rules+0x528>
  404f84:	nop
  404f88:	b	404f90 <extract_rules+0x528>
  404f8c:	nop
  404f90:	ldr	x0, [sp, #184]
  404f94:	ldr	x0, [x0, #48]
  404f98:	str	x0, [sp, #184]
  404f9c:	ldr	x0, [sp, #184]
  404fa0:	cmp	x0, #0x0
  404fa4:	b.ne	404c0c <extract_rules+0x1a4>  // b.any
  404fa8:	ldr	x0, [sp, #176]
  404fac:	cmp	x0, #0x0
  404fb0:	b.eq	404fdc <extract_rules+0x574>  // b.none
  404fb4:	mov	w1, #0x3b                  	// #59
  404fb8:	ldr	x0, [sp, #176]
  404fbc:	bl	4014d0 <strrchr@plt>
  404fc0:	str	x0, [sp, #104]
  404fc4:	ldr	x0, [sp, #104]
  404fc8:	cmp	x0, #0x0
  404fcc:	b.eq	404fdc <extract_rules+0x574>  // b.none
  404fd0:	ldr	x0, [sp, #104]
  404fd4:	strb	wzr, [x0]
  404fd8:	b	404fe0 <extract_rules+0x578>
  404fdc:	nop
  404fe0:	ldr	x0, [sp, #128]
  404fe4:	bl	401390 <xmlFreeDoc@plt>
  404fe8:	ldr	x0, [sp, #176]
  404fec:	ldr	x19, [sp, #16]
  404ff0:	ldp	x29, x30, [sp], #192
  404ff4:	ret

0000000000404ff8 <usage>:
  404ff8:	stp	x29, x30, [sp, #-48]!
  404ffc:	mov	x29, sp
  405000:	str	x19, [sp, #16]
  405004:	str	w0, [sp, #44]
  405008:	ldr	w0, [sp, #44]
  40500c:	cmp	w0, #0x0
  405010:	b.eq	40504c <usage+0x54>  // b.none
  405014:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405018:	add	x0, x0, #0x1c0
  40501c:	ldr	x19, [x0]
  405020:	adrp	x0, 405000 <usage+0x8>
  405024:	add	x0, x0, #0xc50
  405028:	bl	401620 <gettext@plt>
  40502c:	mov	x1, x0
  405030:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405034:	add	x0, x0, #0x1e0
  405038:	ldr	x0, [x0]
  40503c:	mov	x2, x0
  405040:	mov	x0, x19
  405044:	bl	401640 <fprintf@plt>
  405048:	b	40510c <usage+0x114>
  40504c:	adrp	x0, 405000 <usage+0x8>
  405050:	add	x0, x0, #0xc78
  405054:	bl	401620 <gettext@plt>
  405058:	mov	x2, x0
  40505c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405060:	add	x0, x0, #0x1e0
  405064:	ldr	x0, [x0]
  405068:	mov	x1, x0
  40506c:	mov	x0, x2
  405070:	bl	4015e0 <printf@plt>
  405074:	mov	w0, #0xa                   	// #10
  405078:	bl	401610 <putchar@plt>
  40507c:	adrp	x0, 405000 <usage+0x8>
  405080:	add	x0, x0, #0xca8
  405084:	bl	401620 <gettext@plt>
  405088:	bl	4015e0 <printf@plt>
  40508c:	mov	w0, #0xa                   	// #10
  405090:	bl	401610 <putchar@plt>
  405094:	adrp	x0, 405000 <usage+0x8>
  405098:	add	x0, x0, #0xdb8
  40509c:	bl	401620 <gettext@plt>
  4050a0:	bl	4015e0 <printf@plt>
  4050a4:	mov	w0, #0xa                   	// #10
  4050a8:	bl	401610 <putchar@plt>
  4050ac:	adrp	x0, 405000 <usage+0x8>
  4050b0:	add	x0, x0, #0xe28
  4050b4:	bl	401620 <gettext@plt>
  4050b8:	bl	4015e0 <printf@plt>
  4050bc:	adrp	x0, 405000 <usage+0x8>
  4050c0:	add	x0, x0, #0xe70
  4050c4:	bl	401620 <gettext@plt>
  4050c8:	bl	4015e0 <printf@plt>
  4050cc:	adrp	x0, 405000 <usage+0x8>
  4050d0:	add	x0, x0, #0xeb0
  4050d4:	bl	401620 <gettext@plt>
  4050d8:	bl	4015e0 <printf@plt>
  4050dc:	mov	w0, #0xa                   	// #10
  4050e0:	bl	401610 <putchar@plt>
  4050e4:	adrp	x0, 405000 <usage+0x8>
  4050e8:	add	x0, x0, #0xef8
  4050ec:	bl	401620 <gettext@plt>
  4050f0:	mov	x3, x0
  4050f4:	adrp	x0, 405000 <usage+0x8>
  4050f8:	add	x2, x0, #0xf38
  4050fc:	adrp	x0, 405000 <usage+0x8>
  405100:	add	x1, x0, #0xf50
  405104:	mov	x0, x3
  405108:	bl	4015e0 <printf@plt>
  40510c:	ldr	w0, [sp, #44]
  405110:	bl	401340 <exit@plt>

0000000000405114 <main>:
  405114:	stp	x29, x30, [sp, #-128]!
  405118:	mov	x29, sp
  40511c:	str	x19, [sp, #16]
  405120:	str	w0, [sp, #44]
  405124:	str	x1, [sp, #32]
  405128:	strb	wzr, [sp, #127]
  40512c:	strb	wzr, [sp, #126]
  405130:	strb	wzr, [sp, #125]
  405134:	ldr	x0, [sp, #32]
  405138:	ldr	x0, [x0]
  40513c:	bl	401360 <set_program_name@plt>
  405140:	adrp	x0, 406000 <long_options+0x68>
  405144:	add	x1, x0, #0x18
  405148:	mov	w0, #0x6                   	// #6
  40514c:	bl	401650 <setlocale@plt>
  405150:	adrp	x0, 406000 <long_options+0x68>
  405154:	add	x1, x0, #0x20
  405158:	adrp	x0, 406000 <long_options+0x68>
  40515c:	add	x0, x0, #0x38
  405160:	bl	401440 <bindtextdomain@plt>
  405164:	adrp	x0, 406000 <long_options+0x68>
  405168:	add	x1, x0, #0x20
  40516c:	adrp	x0, 406000 <long_options+0x68>
  405170:	add	x0, x0, #0x48
  405174:	bl	401440 <bindtextdomain@plt>
  405178:	adrp	x0, 406000 <long_options+0x68>
  40517c:	add	x0, x0, #0x38
  405180:	bl	401510 <textdomain@plt>
  405184:	adrp	x0, 401000 <_init-0x2e0>
  405188:	add	x0, x0, #0x4a0
  40518c:	bl	405608 <atexit>
  405190:	b	40520c <main+0xf8>
  405194:	ldr	w0, [sp, #120]
  405198:	cmp	w0, #0x68
  40519c:	b.eq	4051ec <main+0xd8>  // b.none
  4051a0:	ldr	w0, [sp, #120]
  4051a4:	cmp	w0, #0x68
  4051a8:	b.gt	405204 <main+0xf0>
  4051ac:	ldr	w0, [sp, #120]
  4051b0:	cmp	w0, #0x63
  4051b4:	b.eq	4051e0 <main+0xcc>  // b.none
  4051b8:	ldr	w0, [sp, #120]
  4051bc:	cmp	w0, #0x63
  4051c0:	b.gt	405204 <main+0xf0>
  4051c4:	ldr	w0, [sp, #120]
  4051c8:	cmp	w0, #0x0
  4051cc:	b.eq	40520c <main+0xf8>  // b.none
  4051d0:	ldr	w0, [sp, #120]
  4051d4:	cmp	w0, #0x56
  4051d8:	b.eq	4051f8 <main+0xe4>  // b.none
  4051dc:	b	405204 <main+0xf0>
  4051e0:	mov	w0, #0x1                   	// #1
  4051e4:	strb	w0, [sp, #127]
  4051e8:	b	40520c <main+0xf8>
  4051ec:	mov	w0, #0x1                   	// #1
  4051f0:	strb	w0, [sp, #126]
  4051f4:	b	40520c <main+0xf8>
  4051f8:	mov	w0, #0x1                   	// #1
  4051fc:	strb	w0, [sp, #125]
  405200:	b	40520c <main+0xf8>
  405204:	mov	w0, #0x1                   	// #1
  405208:	bl	404ff8 <usage>
  40520c:	mov	x4, #0x0                   	// #0
  405210:	adrp	x0, 405000 <usage+0x8>
  405214:	add	x3, x0, #0xf98
  405218:	adrp	x0, 406000 <long_options+0x68>
  40521c:	add	x2, x0, #0x58
  405220:	ldr	x1, [sp, #32]
  405224:	ldr	w0, [sp, #44]
  405228:	bl	401520 <getopt_long@plt>
  40522c:	str	w0, [sp, #120]
  405230:	ldr	w0, [sp, #120]
  405234:	cmn	w0, #0x1
  405238:	b.ne	405194 <main+0x80>  // b.any
  40523c:	ldrb	w0, [sp, #125]
  405240:	cmp	w0, #0x0
  405244:	b.eq	4052d0 <main+0x1bc>  // b.none
  405248:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  40524c:	add	x0, x0, #0x1e0
  405250:	ldr	x0, [x0]
  405254:	bl	401540 <basename@plt>
  405258:	mov	x1, x0
  40525c:	adrp	x0, 406000 <long_options+0x68>
  405260:	add	x3, x0, #0x60
  405264:	adrp	x0, 406000 <long_options+0x68>
  405268:	add	x2, x0, #0x38
  40526c:	adrp	x0, 406000 <long_options+0x68>
  405270:	add	x0, x0, #0x68
  405274:	bl	4015e0 <printf@plt>
  405278:	adrp	x0, 406000 <long_options+0x68>
  40527c:	add	x0, x0, #0x78
  405280:	bl	401620 <gettext@plt>
  405284:	mov	x3, x0
  405288:	adrp	x0, 406000 <long_options+0x68>
  40528c:	add	x2, x0, #0x158
  405290:	adrp	x0, 406000 <long_options+0x68>
  405294:	add	x1, x0, #0x180
  405298:	mov	x0, x3
  40529c:	bl	4015e0 <printf@plt>
  4052a0:	adrp	x0, 406000 <long_options+0x68>
  4052a4:	add	x0, x0, #0x190
  4052a8:	bl	401620 <gettext@plt>
  4052ac:	mov	x19, x0
  4052b0:	adrp	x0, 406000 <long_options+0x68>
  4052b4:	add	x0, x0, #0x1a0
  4052b8:	bl	401560 <proper_name@plt>
  4052bc:	mov	x1, x0
  4052c0:	mov	x0, x19
  4052c4:	bl	4015e0 <printf@plt>
  4052c8:	mov	w0, #0x0                   	// #0
  4052cc:	bl	401340 <exit@plt>
  4052d0:	ldrb	w0, [sp, #126]
  4052d4:	cmp	w0, #0x0
  4052d8:	b.eq	4052e4 <main+0x1d0>  // b.none
  4052dc:	mov	w0, #0x0                   	// #0
  4052e0:	bl	404ff8 <usage>
  4052e4:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  4052e8:	add	x0, x0, #0x1c8
  4052ec:	ldr	w0, [x0]
  4052f0:	add	w0, w0, #0x2
  4052f4:	ldr	w1, [sp, #44]
  4052f8:	cmp	w1, w0
  4052fc:	b.ne	405458 <main+0x344>  // b.any
  405300:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405304:	add	x0, x0, #0x1c8
  405308:	ldr	w0, [x0]
  40530c:	sxtw	x0, w0
  405310:	lsl	x0, x0, #3
  405314:	ldr	x1, [sp, #32]
  405318:	add	x0, x1, x0
  40531c:	ldr	x0, [x0]
  405320:	str	x0, [sp, #96]
  405324:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405328:	add	x0, x0, #0x1c8
  40532c:	ldr	w0, [x0]
  405330:	sxtw	x0, w0
  405334:	add	x0, x0, #0x1
  405338:	lsl	x0, x0, #3
  40533c:	ldr	x1, [sp, #32]
  405340:	add	x0, x1, x0
  405344:	ldr	x0, [x0]
  405348:	str	x0, [sp, #88]
  40534c:	mov	w0, #0x51ad                	// #20909
  405350:	bl	401420 <xmlCheckVersion@plt>
  405354:	adrp	x0, 406000 <long_options+0x68>
  405358:	add	x1, x0, #0x1b0
  40535c:	ldr	x0, [sp, #88]
  405360:	bl	4013e0 <fopen@plt>
  405364:	str	x0, [sp, #80]
  405368:	ldr	x0, [sp, #80]
  40536c:	cmp	x0, #0x0
  405370:	b.ne	405394 <main+0x280>  // b.any
  405374:	adrp	x0, 406000 <long_options+0x68>
  405378:	add	x0, x0, #0x1b8
  40537c:	bl	401620 <gettext@plt>
  405380:	ldr	x3, [sp, #88]
  405384:	mov	x2, x0
  405388:	mov	w1, #0x0                   	// #0
  40538c:	mov	w0, #0x1                   	// #1
  405390:	bl	401350 <error@plt>
  405394:	ldr	x3, [sp, #96]
  405398:	ldr	x2, [sp, #88]
  40539c:	ldr	x1, [sp, #88]
  4053a0:	ldr	x0, [sp, #80]
  4053a4:	bl	404a68 <extract_rules>
  4053a8:	str	x0, [sp, #72]
  4053ac:	ldr	x0, [sp, #80]
  4053b0:	bl	4013d0 <fclose@plt>
  4053b4:	ldr	x0, [sp, #72]
  4053b8:	cmp	x0, #0x0
  4053bc:	b.ne	4053e0 <main+0x2cc>  // b.any
  4053c0:	adrp	x0, 406000 <long_options+0x68>
  4053c4:	add	x0, x0, #0x1d0
  4053c8:	bl	401620 <gettext@plt>
  4053cc:	ldr	x3, [sp, #96]
  4053d0:	mov	x2, x0
  4053d4:	mov	w1, #0x0                   	// #0
  4053d8:	mov	w0, #0x1                   	// #1
  4053dc:	bl	401350 <error@plt>
  4053e0:	ldrb	w0, [sp, #127]
  4053e4:	cmp	w0, #0x0
  4053e8:	b.eq	4053f8 <main+0x2e4>  // b.none
  4053ec:	ldr	x0, [sp, #72]
  4053f0:	bl	401500 <puts@plt>
  4053f4:	b	40544c <main+0x338>
  4053f8:	ldr	x0, [sp, #72]
  4053fc:	bl	40305c <cldr_plural_parse>
  405400:	str	x0, [sp, #64]
  405404:	ldr	x0, [sp, #64]
  405408:	cmp	x0, #0x0
  40540c:	b.ne	40542c <main+0x318>  // b.any
  405410:	adrp	x0, 406000 <long_options+0x68>
  405414:	add	x0, x0, #0x1f0
  405418:	bl	401620 <gettext@plt>
  40541c:	mov	x2, x0
  405420:	mov	w1, #0x0                   	// #0
  405424:	mov	w0, #0x1                   	// #1
  405428:	bl	401350 <error@plt>
  40542c:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405430:	add	x0, x0, #0x1d0
  405434:	ldr	x0, [x0]
  405438:	mov	x1, x0
  40543c:	ldr	x0, [sp, #64]
  405440:	bl	404478 <cldr_plural_rule_list_print>
  405444:	ldr	x0, [sp, #64]
  405448:	bl	402ff0 <cldr_plural_rule_list_free>
  40544c:	ldr	x0, [sp, #72]
  405450:	bl	401580 <free@plt>
  405454:	b	405570 <main+0x45c>
  405458:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  40545c:	add	x0, x0, #0x1c8
  405460:	ldr	w0, [x0]
  405464:	ldr	w1, [sp, #44]
  405468:	cmp	w1, w0
  40546c:	b.ne	405530 <main+0x41c>  // b.any
  405470:	str	xzr, [sp, #56]
  405474:	str	xzr, [sp, #48]
  405478:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  40547c:	add	x0, x0, #0x1d8
  405480:	ldr	x2, [x0]
  405484:	add	x1, sp, #0x30
  405488:	add	x0, sp, #0x38
  40548c:	bl	401550 <getline@plt>
  405490:	str	w0, [sp, #116]
  405494:	ldr	w0, [sp, #116]
  405498:	cmp	w0, #0x0
  40549c:	b.lt	405520 <main+0x40c>  // b.tstop
  4054a0:	ldr	w0, [sp, #116]
  4054a4:	cmp	w0, #0x0
  4054a8:	b.le	4054e4 <main+0x3d0>
  4054ac:	ldr	x1, [sp, #56]
  4054b0:	ldrsw	x0, [sp, #116]
  4054b4:	sub	x0, x0, #0x1
  4054b8:	add	x0, x1, x0
  4054bc:	ldrb	w0, [x0]
  4054c0:	cmp	w0, #0xa
  4054c4:	b.ne	4054e4 <main+0x3d0>  // b.any
  4054c8:	ldr	x1, [sp, #56]
  4054cc:	ldr	w0, [sp, #116]
  4054d0:	sub	w0, w0, #0x1
  4054d4:	str	w0, [sp, #116]
  4054d8:	ldrsw	x0, [sp, #116]
  4054dc:	add	x0, x1, x0
  4054e0:	strb	wzr, [x0]
  4054e4:	ldr	x0, [sp, #56]
  4054e8:	bl	40305c <cldr_plural_parse>
  4054ec:	str	x0, [sp, #104]
  4054f0:	ldr	x0, [sp, #104]
  4054f4:	cmp	x0, #0x0
  4054f8:	b.eq	405478 <main+0x364>  // b.none
  4054fc:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405500:	add	x0, x0, #0x1d0
  405504:	ldr	x0, [x0]
  405508:	mov	x1, x0
  40550c:	ldr	x0, [sp, #104]
  405510:	bl	404478 <cldr_plural_rule_list_print>
  405514:	ldr	x0, [sp, #104]
  405518:	bl	402ff0 <cldr_plural_rule_list_free>
  40551c:	b	405478 <main+0x364>
  405520:	nop
  405524:	ldr	x0, [sp, #56]
  405528:	bl	401580 <free@plt>
  40552c:	b	405570 <main+0x45c>
  405530:	adrp	x0, 406000 <long_options+0x68>
  405534:	add	x0, x0, #0x208
  405538:	bl	401620 <gettext@plt>
  40553c:	mov	x2, x0
  405540:	adrp	x0, 417000 <memcpy@GLIBC_2.17>
  405544:	add	x0, x0, #0x1c8
  405548:	ldr	w0, [x0]
  40554c:	sxtw	x0, w0
  405550:	lsl	x0, x0, #3
  405554:	ldr	x1, [sp, #32]
  405558:	add	x0, x1, x0
  40555c:	ldr	x0, [x0]
  405560:	mov	x3, x0
  405564:	mov	w1, #0x0                   	// #0
  405568:	mov	w0, #0x1                   	// #1
  40556c:	bl	401350 <error@plt>
  405570:	mov	w0, #0x0                   	// #0
  405574:	ldr	x19, [sp, #16]
  405578:	ldp	x29, x30, [sp], #128
  40557c:	ret

0000000000405580 <__libc_csu_init>:
  405580:	stp	x29, x30, [sp, #-64]!
  405584:	mov	x29, sp
  405588:	stp	x19, x20, [sp, #16]
  40558c:	adrp	x20, 416000 <__FRAME_END__+0xf7a4>
  405590:	add	x20, x20, #0xd80
  405594:	stp	x21, x22, [sp, #32]
  405598:	adrp	x21, 416000 <__FRAME_END__+0xf7a4>
  40559c:	add	x21, x21, #0xd78
  4055a0:	sub	x20, x20, x21
  4055a4:	mov	w22, w0
  4055a8:	stp	x23, x24, [sp, #48]
  4055ac:	mov	x23, x1
  4055b0:	mov	x24, x2
  4055b4:	bl	4012e0 <_init>
  4055b8:	cmp	xzr, x20, asr #3
  4055bc:	b.eq	4055e8 <__libc_csu_init+0x68>  // b.none
  4055c0:	asr	x20, x20, #3
  4055c4:	mov	x19, #0x0                   	// #0
  4055c8:	ldr	x3, [x21, x19, lsl #3]
  4055cc:	mov	x2, x24
  4055d0:	add	x19, x19, #0x1
  4055d4:	mov	x1, x23
  4055d8:	mov	w0, w22
  4055dc:	blr	x3
  4055e0:	cmp	x20, x19
  4055e4:	b.ne	4055c8 <__libc_csu_init+0x48>  // b.any
  4055e8:	ldp	x19, x20, [sp, #16]
  4055ec:	ldp	x21, x22, [sp, #32]
  4055f0:	ldp	x23, x24, [sp, #48]
  4055f4:	ldp	x29, x30, [sp], #64
  4055f8:	ret
  4055fc:	nop

0000000000405600 <__libc_csu_fini>:
  405600:	ret
  405604:	nop

0000000000405608 <atexit>:
  405608:	adrp	x2, 417000 <memcpy@GLIBC_2.17>
  40560c:	mov	x1, #0x0                   	// #0
  405610:	ldr	x2, [x2, #424]
  405614:	b	4013a0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000405618 <_fini>:
  405618:	stp	x29, x30, [sp, #-16]!
  40561c:	mov	x29, sp
  405620:	ldp	x29, x30, [sp], #16
  405624:	ret
