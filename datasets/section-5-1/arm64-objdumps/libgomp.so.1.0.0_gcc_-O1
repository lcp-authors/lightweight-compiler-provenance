
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libgomp.so.1.0.0_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008588 <.init>:
    8588:	stp	x29, x30, [sp, #-16]!
    858c:	mov	x29, sp
    8590:	bl	8b20 <fprintf@plt+0x10>
    8594:	ldp	x29, x30, [sp], #16
    8598:	ret

Disassembly of section .plt:

00000000000085a0 <memcpy@plt-0x20>:
    85a0:	stp	x16, x30, [sp, #-16]!
    85a4:	adrp	x16, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    85a8:	ldr	x17, [x16, #4088]
    85ac:	add	x16, x16, #0xff8
    85b0:	br	x17
    85b4:	nop
    85b8:	nop
    85bc:	nop

00000000000085c0 <memcpy@plt>:
    85c0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16]
    85c8:	add	x16, x16, #0x0
    85cc:	br	x17

00000000000085d0 <memmove@plt>:
    85d0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #8]
    85d8:	add	x16, x16, #0x8
    85dc:	br	x17

00000000000085e0 <strtoul@plt>:
    85e0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #16]
    85e8:	add	x16, x16, #0x10
    85ec:	br	x17

00000000000085f0 <strlen@plt>:
    85f0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #24]
    85f8:	add	x16, x16, #0x18
    85fc:	br	x17

0000000000008600 <fputs@plt>:
    8600:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #32]
    8608:	add	x16, x16, #0x20
    860c:	br	x17

0000000000008610 <exit@plt>:
    8610:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #40]
    8618:	add	x16, x16, #0x28
    861c:	br	x17

0000000000008620 <acc_wait_all@plt>:
    8620:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #48]
    8628:	add	x16, x16, #0x30
    862c:	br	x17

0000000000008630 <secure_getenv@plt>:
    8630:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #56]
    8638:	add	x16, x16, #0x38
    863c:	br	x17

0000000000008640 <pthread_key_create@plt>:
    8640:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #64]
    8648:	add	x16, x16, #0x40
    864c:	br	x17

0000000000008650 <acc_copyout_finalize@plt>:
    8650:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #72]
    8658:	add	x16, x16, #0x48
    865c:	br	x17

0000000000008660 <__cxa_finalize@plt>:
    8660:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #80]
    8668:	add	x16, x16, #0x50
    866c:	br	x17

0000000000008670 <sprintf@plt>:
    8670:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #88]
    8678:	add	x16, x16, #0x58
    867c:	br	x17

0000000000008680 <getloadavg@plt>:
    8680:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #96]
    8688:	add	x16, x16, #0x60
    868c:	br	x17

0000000000008690 <__cxa_atexit@plt>:
    8690:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #104]
    8698:	add	x16, x16, #0x68
    869c:	br	x17

00000000000086a0 <pthread_attr_init@plt>:
    86a0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #112]
    86a8:	add	x16, x16, #0x70
    86ac:	br	x17

00000000000086b0 <fputc@plt>:
    86b0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #120]
    86b8:	add	x16, x16, #0x78
    86bc:	br	x17

00000000000086c0 <clock_gettime@plt>:
    86c0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #128]
    86c8:	add	x16, x16, #0x80
    86cc:	br	x17

00000000000086d0 <acc_copyin@plt>:
    86d0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #136]
    86d8:	add	x16, x16, #0x88
    86dc:	br	x17

00000000000086e0 <acc_delete_finalize@plt>:
    86e0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #144]
    86e8:	add	x16, x16, #0x90
    86ec:	br	x17

00000000000086f0 <__ctype_tolower_loc@plt>:
    86f0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #152]
    86f8:	add	x16, x16, #0x98
    86fc:	br	x17

0000000000008700 <acc_create@plt>:
    8700:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #160]
    8708:	add	x16, x16, #0xa0
    870c:	br	x17

0000000000008710 <acc_unmap_data@plt>:
    8710:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #168]
    8718:	add	x16, x16, #0xa8
    871c:	br	x17

0000000000008720 <acc_wait_async@plt>:
    8720:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #176]
    8728:	add	x16, x16, #0xb0
    872c:	br	x17

0000000000008730 <fclose@plt>:
    8730:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #184]
    8738:	add	x16, x16, #0xb8
    873c:	br	x17

0000000000008740 <getpid@plt>:
    8740:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #192]
    8748:	add	x16, x16, #0xc0
    874c:	br	x17

0000000000008750 <fopen@plt>:
    8750:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #200]
    8758:	add	x16, x16, #0xc8
    875c:	br	x17

0000000000008760 <malloc@plt>:
    8760:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #208]
    8768:	add	x16, x16, #0xd0
    876c:	br	x17

0000000000008770 <acc_async_test@plt>:
    8770:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #216]
    8778:	add	x16, x16, #0xd8
    877c:	br	x17

0000000000008780 <pthread_attr_destroy@plt>:
    8780:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #224]
    8788:	add	x16, x16, #0xe0
    878c:	br	x17

0000000000008790 <strncmp@plt>:
    8790:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #232]
    8798:	add	x16, x16, #0xe8
    879c:	br	x17

00000000000087a0 <aligned_alloc@plt>:
    87a0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #240]
    87a8:	add	x16, x16, #0xf0
    87ac:	br	x17

00000000000087b0 <pthread_detach@plt>:
    87b0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #248]
    87b8:	add	x16, x16, #0xf8
    87bc:	br	x17

00000000000087c0 <memset@plt>:
    87c0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #256]
    87c8:	add	x16, x16, #0x100
    87cc:	br	x17

00000000000087d0 <pthread_attr_setstacksize@plt>:
    87d0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #264]
    87d8:	add	x16, x16, #0x108
    87dc:	br	x17

00000000000087e0 <calloc@plt>:
    87e0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #272]
    87e8:	add	x16, x16, #0x110
    87ec:	br	x17

00000000000087f0 <acc_is_present@plt>:
    87f0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #280]
    87f8:	add	x16, x16, #0x118
    87fc:	br	x17

0000000000008800 <strcasecmp@plt>:
    8800:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #288]
    8808:	add	x16, x16, #0x120
    880c:	br	x17

0000000000008810 <realloc@plt>:
    8810:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #296]
    8818:	add	x16, x16, #0x128
    881c:	br	x17

0000000000008820 <strdup@plt>:
    8820:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #304]
    8828:	add	x16, x16, #0x130
    882c:	br	x17

0000000000008830 <strerror@plt>:
    8830:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #312]
    8838:	add	x16, x16, #0x138
    883c:	br	x17

0000000000008840 <pthread_create@plt>:
    8840:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #320]
    8848:	add	x16, x16, #0x140
    884c:	br	x17

0000000000008850 <__gmon_start__@plt>:
    8850:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #328]
    8858:	add	x16, x16, #0x148
    885c:	br	x17

0000000000008860 <pthread_join@plt>:
    8860:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #336]
    8868:	add	x16, x16, #0x150
    886c:	br	x17

0000000000008870 <abort@plt>:
    8870:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #344]
    8878:	add	x16, x16, #0x158
    887c:	br	x17

0000000000008880 <pthread_exit@plt>:
    8880:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #352]
    8888:	add	x16, x16, #0x160
    888c:	br	x17

0000000000008890 <memcmp@plt>:
    8890:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #360]
    8898:	add	x16, x16, #0x168
    889c:	br	x17

00000000000088a0 <strcmp@plt>:
    88a0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #368]
    88a8:	add	x16, x16, #0x170
    88ac:	br	x17

00000000000088b0 <__ctype_b_loc@plt>:
    88b0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #376]
    88b8:	add	x16, x16, #0x178
    88bc:	br	x17

00000000000088c0 <strtol@plt>:
    88c0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #384]
    88c8:	add	x16, x16, #0x180
    88cc:	br	x17

00000000000088d0 <acc_wait_all_async@plt>:
    88d0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #392]
    88d8:	add	x16, x16, #0x188
    88dc:	br	x17

00000000000088e0 <acc_deviceptr@plt>:
    88e0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #400]
    88e8:	add	x16, x16, #0x190
    88ec:	br	x17

00000000000088f0 <clock_getres@plt>:
    88f0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #408]
    88f8:	add	x16, x16, #0x198
    88fc:	br	x17

0000000000008900 <free@plt>:
    8900:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #416]
    8908:	add	x16, x16, #0x1a0
    890c:	br	x17

0000000000008910 <acc_delete@plt>:
    8910:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #424]
    8918:	add	x16, x16, #0x1a8
    891c:	br	x17

0000000000008920 <GOMP_offload_unregister_ver@plt>:
    8920:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #432]
    8928:	add	x16, x16, #0x1b0
    892c:	br	x17

0000000000008930 <pthread_key_delete@plt>:
    8930:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #440]
    8938:	add	x16, x16, #0x1b8
    893c:	br	x17

0000000000008940 <strncasecmp@plt>:
    8940:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #448]
    8948:	add	x16, x16, #0x1c0
    894c:	br	x17

0000000000008950 <pthread_once@plt>:
    8950:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #456]
    8958:	add	x16, x16, #0x1c8
    895c:	br	x17

0000000000008960 <pthread_getaffinity_np@plt>:
    8960:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #464]
    8968:	add	x16, x16, #0x1d0
    896c:	br	x17

0000000000008970 <acc_init@plt>:
    8970:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #472]
    8978:	add	x16, x16, #0x1d8
    897c:	br	x17

0000000000008980 <acc_copyout@plt>:
    8980:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #480]
    8988:	add	x16, x16, #0x1e0
    898c:	br	x17

0000000000008990 <acc_wait@plt>:
    8990:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #488]
    8998:	add	x16, x16, #0x1e8
    899c:	br	x17

00000000000089a0 <strchr@plt>:
    89a0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #496]
    89a8:	add	x16, x16, #0x1f0
    89ac:	br	x17

00000000000089b0 <pthread_setspecific@plt>:
    89b0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #504]
    89b8:	add	x16, x16, #0x1f8
    89bc:	br	x17

00000000000089c0 <strtoull@plt>:
    89c0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #512]
    89c8:	add	x16, x16, #0x200
    89cc:	br	x17

00000000000089d0 <fwrite@plt>:
    89d0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #520]
    89d8:	add	x16, x16, #0x208
    89dc:	br	x17

00000000000089e0 <__sched_cpucount@plt>:
    89e0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #528]
    89e8:	add	x16, x16, #0x210
    89ec:	br	x17

00000000000089f0 <acc_update_self@plt>:
    89f0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #536]
    89f8:	add	x16, x16, #0x218
    89fc:	br	x17

0000000000008a00 <pthread_attr_getstacksize@plt>:
    8a00:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #544]
    8a08:	add	x16, x16, #0x220
    8a0c:	br	x17

0000000000008a10 <GOMP_offload_register_ver@plt>:
    8a10:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #552]
    8a18:	add	x16, x16, #0x228
    8a1c:	br	x17

0000000000008a20 <GOACC_enter_exit_data@plt>:
    8a20:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #560]
    8a28:	add	x16, x16, #0x230
    8a2c:	br	x17

0000000000008a30 <sysconf@plt>:
    8a30:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #568]
    8a38:	add	x16, x16, #0x238
    8a3c:	br	x17

0000000000008a40 <gethostname@plt>:
    8a40:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #576]
    8a48:	add	x16, x16, #0x240
    8a4c:	br	x17

0000000000008a50 <omp_get_team_num@plt>:
    8a50:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #584]
    8a58:	add	x16, x16, #0x248
    8a5c:	br	x17

0000000000008a60 <pthread_attr_setaffinity_np@plt>:
    8a60:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #592]
    8a68:	add	x16, x16, #0x250
    8a6c:	br	x17

0000000000008a70 <pthread_setaffinity_np@plt>:
    8a70:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #600]
    8a78:	add	x16, x16, #0x258
    8a7c:	br	x17

0000000000008a80 <omp_get_num_teams@plt>:
    8a80:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #608]
    8a88:	add	x16, x16, #0x260
    8a8c:	br	x17

0000000000008a90 <pthread_self@plt>:
    8a90:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #616]
    8a98:	add	x16, x16, #0x268
    8a9c:	br	x17

0000000000008aa0 <vfprintf@plt>:
    8aa0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #624]
    8aa8:	add	x16, x16, #0x270
    8aac:	br	x17

0000000000008ab0 <__assert_fail@plt>:
    8ab0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #632]
    8ab8:	add	x16, x16, #0x278
    8abc:	br	x17

0000000000008ac0 <__errno_location@plt>:
    8ac0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #640]
    8ac8:	add	x16, x16, #0x280
    8acc:	br	x17

0000000000008ad0 <getenv@plt>:
    8ad0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #648]
    8ad8:	add	x16, x16, #0x288
    8adc:	br	x17

0000000000008ae0 <syscall@plt>:
    8ae0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #656]
    8ae8:	add	x16, x16, #0x290
    8aec:	br	x17

0000000000008af0 <__getdelim@plt>:
    8af0:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #664]
    8af8:	add	x16, x16, #0x298
    8afc:	br	x17

0000000000008b00 <acc_update_device@plt>:
    8b00:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #672]
    8b08:	add	x16, x16, #0x2a0
    8b0c:	br	x17

0000000000008b10 <fprintf@plt>:
    8b10:	adrp	x16, 41000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #680]
    8b18:	add	x16, x16, #0x2a8
    8b1c:	br	x17

Disassembly of section .text:

0000000000008b20 <GOMP_atomic_start@@GOMP_1.0-0x200>:
    8b20:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8b24:	ldr	x0, [x0, #4056]
    8b28:	cbz	x0, 8b30 <fprintf@plt+0x20>
    8b2c:	b	8850 <__gmon_start__@plt>
    8b30:	ret
    8b34:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8b38:	add	x0, x0, #0x548
    8b3c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8b40:	add	x1, x1, #0x548
    8b44:	cmp	x0, x1
    8b48:	b.eq	8b74 <fprintf@plt+0x64>  // b.none
    8b4c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8b50:	ldr	x1, [x1, #4024]
    8b54:	cbz	x1, 8b74 <fprintf@plt+0x64>
    8b58:	stp	x29, x30, [sp, #-16]!
    8b5c:	mov	x29, sp
    8b60:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8b64:	add	x0, x0, #0x548
    8b68:	blr	x1
    8b6c:	ldp	x29, x30, [sp], #16
    8b70:	ret
    8b74:	ret
    8b78:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8b7c:	add	x0, x0, #0x548
    8b80:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8b84:	add	x1, x1, #0x548
    8b88:	sub	x0, x0, x1
    8b8c:	lsr	x1, x0, #63
    8b90:	add	x0, x1, x0, asr #3
    8b94:	cmp	xzr, x0, asr #1
    8b98:	b.eq	8bc8 <fprintf@plt+0xb8>  // b.none
    8b9c:	asr	x1, x0, #1
    8ba0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8ba4:	ldr	x2, [x2, #4064]
    8ba8:	cbz	x2, 8bc8 <fprintf@plt+0xb8>
    8bac:	stp	x29, x30, [sp, #-16]!
    8bb0:	mov	x29, sp
    8bb4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8bb8:	add	x0, x0, #0x548
    8bbc:	blr	x2
    8bc0:	ldp	x29, x30, [sp], #16
    8bc4:	ret
    8bc8:	ret
    8bcc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8bd0:	ldrb	w0, [x0, #1352]
    8bd4:	cbnz	w0, 8c10 <fprintf@plt+0x100>
    8bd8:	stp	x29, x30, [sp, #-16]!
    8bdc:	mov	x29, sp
    8be0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8be4:	ldr	x0, [x0, #4032]
    8be8:	cbz	x0, 8bf8 <fprintf@plt+0xe8>
    8bec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8bf0:	ldr	x0, [x0, #688]
    8bf4:	bl	8660 <__cxa_finalize@plt>
    8bf8:	bl	8b34 <fprintf@plt+0x24>
    8bfc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8c00:	mov	w1, #0x1                   	// #1
    8c04:	strb	w1, [x0, #1352]
    8c08:	ldp	x29, x30, [sp], #16
    8c0c:	ret
    8c10:	ret
    8c14:	stp	x29, x30, [sp, #-16]!
    8c18:	mov	x29, sp
    8c1c:	bl	8b78 <fprintf@plt+0x68>
    8c20:	ldp	x29, x30, [sp], #16
    8c24:	ret
    8c28:	stp	x29, x30, [sp, #-32]!
    8c2c:	mov	x29, sp
    8c30:	str	x19, [sp, #16]
    8c34:	mov	x19, x0
    8c38:	bl	8760 <malloc@plt>
    8c3c:	cbz	x0, 8c4c <fprintf@plt+0x13c>
    8c40:	ldr	x19, [sp, #16]
    8c44:	ldp	x29, x30, [sp], #32
    8c48:	ret
    8c4c:	mov	x1, x19
    8c50:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8c54:	add	x0, x0, #0x768
    8c58:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
    8c5c:	stp	x29, x30, [sp, #-32]!
    8c60:	mov	x29, sp
    8c64:	str	x19, [sp, #16]
    8c68:	mov	x19, x0
    8c6c:	mov	x1, x0
    8c70:	mov	x0, #0x1                   	// #1
    8c74:	bl	87e0 <calloc@plt>
    8c78:	cbz	x0, 8c88 <fprintf@plt+0x178>
    8c7c:	ldr	x19, [sp, #16]
    8c80:	ldp	x29, x30, [sp], #32
    8c84:	ret
    8c88:	mov	x1, x19
    8c8c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8c90:	add	x0, x0, #0x768
    8c94:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
    8c98:	stp	x29, x30, [sp, #-32]!
    8c9c:	mov	x29, sp
    8ca0:	str	x19, [sp, #16]
    8ca4:	mov	x19, x1
    8ca8:	bl	8810 <realloc@plt>
    8cac:	cbz	x0, 8cbc <fprintf@plt+0x1ac>
    8cb0:	ldr	x19, [sp, #16]
    8cb4:	ldp	x29, x30, [sp], #32
    8cb8:	ret
    8cbc:	mov	x1, x19
    8cc0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8cc4:	add	x0, x0, #0x768
    8cc8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
    8ccc:	stp	x29, x30, [sp, #-32]!
    8cd0:	mov	x29, sp
    8cd4:	str	x19, [sp, #16]
    8cd8:	mov	x19, x1
    8cdc:	cmp	x0, #0x8
    8ce0:	mov	x2, #0x8                   	// #8
    8ce4:	csel	x0, x0, x2, cs  // cs = hs, nlast
    8ce8:	bl	87a0 <aligned_alloc@plt>
    8cec:	cbz	x0, 8cfc <fprintf@plt+0x1ec>
    8cf0:	ldr	x19, [sp, #16]
    8cf4:	ldp	x29, x30, [sp], #32
    8cf8:	ret
    8cfc:	mov	x1, x19
    8d00:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8d04:	add	x0, x0, #0x768
    8d08:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
    8d0c:	stp	x29, x30, [sp, #-16]!
    8d10:	mov	x29, sp
    8d14:	bl	8900 <free@plt>
    8d18:	ldp	x29, x30, [sp], #16
    8d1c:	ret

0000000000008d20 <GOMP_atomic_start@@GOMP_1.0>:
    8d20:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8d24:	add	x0, x0, #0x54c
    8d28:	mov	w2, #0x1                   	// #1
    8d2c:	ldaxr	w1, [x0]
    8d30:	cbnz	w1, 8d3c <GOMP_atomic_start@@GOMP_1.0+0x1c>
    8d34:	stxr	w3, w2, [x0]
    8d38:	cbnz	w3, 8d2c <GOMP_atomic_start@@GOMP_1.0+0xc>
    8d3c:	cmp	w1, #0x0
    8d40:	b.ne	8d48 <GOMP_atomic_start@@GOMP_1.0+0x28>  // b.any
    8d44:	ret
    8d48:	stp	x29, x30, [sp, #-16]!
    8d4c:	mov	x29, sp
    8d50:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8d54:	add	x0, x0, #0x54c
    8d58:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    8d5c:	ldp	x29, x30, [sp], #16
    8d60:	ret

0000000000008d64 <GOMP_atomic_end@@GOMP_1.0>:
    8d64:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8d68:	add	x0, x0, #0x54c
    8d6c:	ldxr	w1, [x0]
    8d70:	stlxr	w2, wzr, [x0]
    8d74:	cbnz	w2, 8d6c <GOMP_atomic_end@@GOMP_1.0+0x8>
    8d78:	tbnz	w1, #31, 8d80 <GOMP_atomic_end@@GOMP_1.0+0x1c>
    8d7c:	ret
    8d80:	stp	x29, x30, [sp, #-16]!
    8d84:	mov	x29, sp
    8d88:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8d8c:	add	x0, x0, #0x54c
    8d90:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    8d94:	ldp	x29, x30, [sp], #16
    8d98:	ret

0000000000008d9c <GOMP_barrier@@GOMP_1.0>:
    8d9c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8da0:	ldr	x0, [x0, #4016]
    8da4:	mrs	x1, tpidr_el0
    8da8:	add	x0, x1, x0
    8dac:	ldr	x0, [x0, #16]
    8db0:	cbz	x0, 8dcc <GOMP_barrier@@GOMP_1.0+0x30>
    8db4:	stp	x29, x30, [sp, #-16]!
    8db8:	mov	x29, sp
    8dbc:	add	x0, x0, #0x80
    8dc0:	bl	1bbc4 <omp_get_num_procs@@OMP_1.0+0x750>
    8dc4:	ldp	x29, x30, [sp], #16
    8dc8:	ret
    8dcc:	ret

0000000000008dd0 <GOMP_barrier_cancel@@GOMP_4.0>:
    8dd0:	stp	x29, x30, [sp, #-16]!
    8dd4:	mov	x29, sp
    8dd8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    8ddc:	ldr	x0, [x0, #4016]
    8de0:	mrs	x1, tpidr_el0
    8de4:	add	x0, x1, x0
    8de8:	ldr	x0, [x0, #16]
    8dec:	add	x0, x0, #0x80
    8df0:	bl	1be5c <omp_get_num_procs@@OMP_1.0+0x9e8>
    8df4:	ldp	x29, x30, [sp], #16
    8df8:	ret

0000000000008dfc <GOMP_critical_start@@GOMP_1.0>:
    8dfc:	dmb	ish
    8e00:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8e04:	add	x0, x0, #0x550
    8e08:	mov	w2, #0x1                   	// #1
    8e0c:	ldaxr	w1, [x0]
    8e10:	cbnz	w1, 8e1c <GOMP_critical_start@@GOMP_1.0+0x20>
    8e14:	stxr	w3, w2, [x0]
    8e18:	cbnz	w3, 8e0c <GOMP_critical_start@@GOMP_1.0+0x10>
    8e1c:	cmp	w1, #0x0
    8e20:	b.ne	8e28 <GOMP_critical_start@@GOMP_1.0+0x2c>  // b.any
    8e24:	ret
    8e28:	stp	x29, x30, [sp, #-16]!
    8e2c:	mov	x29, sp
    8e30:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8e34:	add	x0, x0, #0x550
    8e38:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    8e3c:	ldp	x29, x30, [sp], #16
    8e40:	ret

0000000000008e44 <GOMP_critical_end@@GOMP_1.0>:
    8e44:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8e48:	add	x0, x0, #0x550
    8e4c:	ldxr	w1, [x0]
    8e50:	stlxr	w2, wzr, [x0]
    8e54:	cbnz	w2, 8e4c <GOMP_critical_end@@GOMP_1.0+0x8>
    8e58:	tbnz	w1, #31, 8e60 <GOMP_critical_end@@GOMP_1.0+0x1c>
    8e5c:	ret
    8e60:	stp	x29, x30, [sp, #-16]!
    8e64:	mov	x29, sp
    8e68:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    8e6c:	add	x0, x0, #0x550
    8e70:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    8e74:	ldp	x29, x30, [sp], #16
    8e78:	ret

0000000000008e7c <GOMP_critical_name_start@@GOMP_1.0>:
    8e7c:	mov	w2, #0x1                   	// #1
    8e80:	ldaxr	w1, [x0]
    8e84:	cbnz	w1, 8e90 <GOMP_critical_name_start@@GOMP_1.0+0x14>
    8e88:	stxr	w3, w2, [x0]
    8e8c:	cbnz	w3, 8e80 <GOMP_critical_name_start@@GOMP_1.0+0x4>
    8e90:	cmp	w1, #0x0
    8e94:	b.ne	8e9c <GOMP_critical_name_start@@GOMP_1.0+0x20>  // b.any
    8e98:	ret
    8e9c:	stp	x29, x30, [sp, #-16]!
    8ea0:	mov	x29, sp
    8ea4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    8ea8:	ldp	x29, x30, [sp], #16
    8eac:	ret

0000000000008eb0 <GOMP_critical_name_end@@GOMP_1.0>:
    8eb0:	ldxr	w1, [x0]
    8eb4:	stlxr	w2, wzr, [x0]
    8eb8:	cbnz	w2, 8eb0 <GOMP_critical_name_end@@GOMP_1.0>
    8ebc:	tbnz	w1, #31, 8ec4 <GOMP_critical_name_end@@GOMP_1.0+0x14>
    8ec0:	ret
    8ec4:	stp	x29, x30, [sp, #-16]!
    8ec8:	mov	x29, sp
    8ecc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    8ed0:	ldp	x29, x30, [sp], #16
    8ed4:	ret
    8ed8:	stp	x29, x30, [sp, #-48]!
    8edc:	mov	x29, sp
    8ee0:	stp	x19, x20, [sp, #16]
    8ee4:	stp	x21, x22, [sp, #32]
    8ee8:	mov	x20, x0
    8eec:	mov	x22, x1
    8ef0:	bl	8ad0 <getenv@plt>
    8ef4:	cbz	x0, 8f68 <GOMP_critical_name_end@@GOMP_1.0+0xb8>
    8ef8:	mov	x19, x0
    8efc:	bl	88b0 <__ctype_b_loc@plt>
    8f00:	mov	x21, x0
    8f04:	ldr	x3, [x0]
    8f08:	ldrb	w2, [x19]
    8f0c:	ldrh	w2, [x3, x2, lsl #1]
    8f10:	tbz	w2, #13, 8f1c <GOMP_critical_name_end@@GOMP_1.0+0x6c>
    8f14:	add	x19, x19, #0x1
    8f18:	b	8f08 <GOMP_critical_name_end@@GOMP_1.0+0x58>
    8f1c:	mov	x2, #0x4                   	// #4
    8f20:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8f24:	add	x1, x1, #0x798
    8f28:	mov	x0, x19
    8f2c:	bl	8940 <strncasecmp@plt>
    8f30:	cbnz	w0, 8f84 <GOMP_critical_name_end@@GOMP_1.0+0xd4>
    8f34:	mov	w0, #0x1                   	// #1
    8f38:	strb	w0, [x22]
    8f3c:	add	x19, x19, #0x4
    8f40:	ldr	x3, [x21]
    8f44:	ldrb	w1, [x19]
    8f48:	and	x0, x1, #0xff
    8f4c:	ldrh	w0, [x3, x0, lsl #1]
    8f50:	tbz	w0, #13, 8f64 <GOMP_critical_name_end@@GOMP_1.0+0xb4>
    8f54:	ldrb	w1, [x19, #1]!
    8f58:	and	x2, x1, #0xff
    8f5c:	ldrh	w2, [x3, x2, lsl #1]
    8f60:	tbnz	w2, #13, 8f54 <GOMP_critical_name_end@@GOMP_1.0+0xa4>
    8f64:	cbnz	w1, 8fa8 <GOMP_critical_name_end@@GOMP_1.0+0xf8>
    8f68:	ldp	x19, x20, [sp, #16]
    8f6c:	ldp	x21, x22, [sp, #32]
    8f70:	ldp	x29, x30, [sp], #48
    8f74:	ret
    8f78:	adrp	x19, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8f7c:	add	x19, x19, #0x790
    8f80:	b	8f40 <GOMP_critical_name_end@@GOMP_1.0+0x90>
    8f84:	mov	x2, #0x5                   	// #5
    8f88:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8f8c:	add	x1, x1, #0x7a0
    8f90:	mov	x0, x19
    8f94:	bl	8940 <strncasecmp@plt>
    8f98:	cbnz	w0, 8f78 <GOMP_critical_name_end@@GOMP_1.0+0xc8>
    8f9c:	strb	wzr, [x22]
    8fa0:	add	x19, x19, #0x5
    8fa4:	b	8f40 <GOMP_critical_name_end@@GOMP_1.0+0x90>
    8fa8:	mov	x1, x20
    8fac:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    8fb0:	add	x0, x0, #0x7a8
    8fb4:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    8fb8:	b	8f68 <GOMP_critical_name_end@@GOMP_1.0+0xb8>
    8fbc:	stp	x29, x30, [sp, #-80]!
    8fc0:	mov	x29, sp
    8fc4:	stp	x19, x20, [sp, #16]
    8fc8:	stp	x21, x22, [sp, #32]
    8fcc:	stp	x23, x24, [sp, #48]
    8fd0:	mov	x20, x0
    8fd4:	mov	x22, x1
    8fd8:	and	w24, w2, #0xff
    8fdc:	tst	w3, #0xff
    8fe0:	b.eq	9000 <GOMP_critical_name_end@@GOMP_1.0+0x150>  // b.none
    8fe4:	bl	8630 <secure_getenv@plt>
    8fe8:	mov	x19, x0
    8fec:	cbz	x19, 90bc <GOMP_critical_name_end@@GOMP_1.0+0x20c>
    8ff0:	bl	88b0 <__ctype_b_loc@plt>
    8ff4:	mov	x21, x0
    8ff8:	ldr	x4, [x0]
    8ffc:	b	9010 <GOMP_critical_name_end@@GOMP_1.0+0x160>
    9000:	bl	8ad0 <getenv@plt>
    9004:	mov	x19, x0
    9008:	b	8fec <GOMP_critical_name_end@@GOMP_1.0+0x13c>
    900c:	add	x19, x19, #0x1
    9010:	ldrb	w2, [x19]
    9014:	and	x3, x2, #0xff
    9018:	ldrh	w3, [x4, x3, lsl #1]
    901c:	tbnz	w3, #13, 900c <GOMP_critical_name_end@@GOMP_1.0+0x15c>
    9020:	cbnz	w2, 904c <GOMP_critical_name_end@@GOMP_1.0+0x19c>
    9024:	mov	x1, x20
    9028:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    902c:	add	x0, x0, #0x7a8
    9030:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9034:	mov	w0, #0x0                   	// #0
    9038:	ldp	x19, x20, [sp, #16]
    903c:	ldp	x21, x22, [sp, #32]
    9040:	ldp	x23, x24, [sp, #48]
    9044:	ldp	x29, x30, [sp], #80
    9048:	ret
    904c:	bl	8ac0 <__errno_location@plt>
    9050:	mov	x23, x0
    9054:	str	wzr, [x0]
    9058:	mov	w2, #0xa                   	// #10
    905c:	add	x1, sp, #0x48
    9060:	mov	x0, x19
    9064:	bl	85e0 <strtoul@plt>
    9068:	ldr	w1, [x23]
    906c:	cbnz	w1, 9024 <GOMP_critical_name_end@@GOMP_1.0+0x174>
    9070:	neg	w24, w24
    9074:	cmp	x0, w24, sxtw
    9078:	b.le	9024 <GOMP_critical_name_end@@GOMP_1.0+0x174>
    907c:	ldr	x4, [x21]
    9080:	ldr	x2, [sp, #72]
    9084:	ldrb	w1, [x2]
    9088:	ldrb	w3, [x2]
    908c:	ldrh	w3, [x4, x3, lsl #1]
    9090:	tbz	w3, #13, 90ac <GOMP_critical_name_end@@GOMP_1.0+0x1fc>
    9094:	add	x2, x2, #0x1
    9098:	str	x2, [sp, #72]
    909c:	ldrb	w1, [x2], #1
    90a0:	and	x3, x1, #0xff
    90a4:	ldrh	w3, [x4, x3, lsl #1]
    90a8:	tbnz	w3, #13, 9098 <GOMP_critical_name_end@@GOMP_1.0+0x1e8>
    90ac:	cbnz	w1, 9024 <GOMP_critical_name_end@@GOMP_1.0+0x174>
    90b0:	str	x0, [x22]
    90b4:	mov	w0, #0x1                   	// #1
    90b8:	b	9038 <GOMP_critical_name_end@@GOMP_1.0+0x188>
    90bc:	mov	w0, #0x0                   	// #0
    90c0:	b	9038 <GOMP_critical_name_end@@GOMP_1.0+0x188>
    90c4:	stp	x29, x30, [sp, #-48]!
    90c8:	mov	x29, sp
    90cc:	stp	x19, x20, [sp, #16]
    90d0:	mov	x20, x0
    90d4:	mov	x19, x1
    90d8:	add	x1, sp, #0x28
    90dc:	bl	8fbc <GOMP_critical_name_end@@GOMP_1.0+0x10c>
    90e0:	ands	w0, w0, #0xff
    90e4:	b.eq	90fc <GOMP_critical_name_end@@GOMP_1.0+0x24c>  // b.none
    90e8:	ldr	x1, [sp, #40]
    90ec:	mov	x2, #0x7fffffff            	// #2147483647
    90f0:	cmp	x1, x2
    90f4:	b.hi	9108 <GOMP_critical_name_end@@GOMP_1.0+0x258>  // b.pmore
    90f8:	str	w1, [x19]
    90fc:	ldp	x19, x20, [sp, #16]
    9100:	ldp	x29, x30, [sp], #48
    9104:	ret
    9108:	mov	x1, x20
    910c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9110:	add	x0, x0, #0x7a8
    9114:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9118:	mov	w0, #0x0                   	// #0
    911c:	b	90fc <GOMP_critical_name_end@@GOMP_1.0+0x24c>
    9120:	stp	x29, x30, [sp, #-176]!
    9124:	mov	x29, sp
    9128:	stp	x21, x22, [sp, #32]
    912c:	stp	x23, x24, [sp, #48]
    9130:	str	x0, [sp, #136]
    9134:	str	x1, [sp, #128]
    9138:	str	x2, [sp, #144]
    913c:	str	x3, [sp, #152]
    9140:	ldr	x0, [x0]
    9144:	str	x0, [sp, #168]
    9148:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    914c:	ldr	x1, [x0, #1568]
    9150:	str	x1, [sp, #112]
    9154:	cbz	x1, 9168 <GOMP_critical_name_end@@GOMP_1.0+0x2b8>
    9158:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    915c:	ldr	x0, [x0, #1608]
    9160:	ldr	x0, [x1, x0, lsl #3]
    9164:	str	x0, [sp, #112]
    9168:	ldr	x0, [sp, #128]
    916c:	strb	wzr, [x0]
    9170:	bl	88b0 <__ctype_b_loc@plt>
    9174:	mov	x21, x0
    9178:	ldr	x3, [x0]
    917c:	b	9188 <GOMP_critical_name_end@@GOMP_1.0+0x2d8>
    9180:	add	x0, x0, #0x1
    9184:	str	x0, [sp, #168]
    9188:	ldr	x0, [sp, #168]
    918c:	ldrb	w1, [x0]
    9190:	and	x2, x1, #0xff
    9194:	ldrh	w2, [x3, x2, lsl #1]
    9198:	tbnz	w2, #13, 9180 <GOMP_critical_name_end@@GOMP_1.0+0x2d0>
    919c:	cmp	w1, #0x21
    91a0:	b.eq	9224 <GOMP_critical_name_end@@GOMP_1.0+0x374>  // b.none
    91a4:	ldr	x0, [sp, #168]
    91a8:	ldrb	w1, [x0]
    91ac:	mov	w23, #0x0                   	// #0
    91b0:	cmp	w1, #0x7b
    91b4:	b.ne	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>  // b.any
    91b8:	stp	x19, x20, [sp, #16]
    91bc:	stp	x25, x26, [sp, #64]
    91c0:	stp	x27, x28, [sp, #80]
    91c4:	add	x25, x0, #0x1
    91c8:	str	x25, [sp, #168]
    91cc:	ldr	x2, [x21]
    91d0:	ldrb	w1, [x0, #1]
    91d4:	ldrh	w1, [x2, x1, lsl #1]
    91d8:	tbz	w1, #13, 91f8 <GOMP_critical_name_end@@GOMP_1.0+0x348>
    91dc:	add	x0, x0, #0x2
    91e0:	mov	x25, x0
    91e4:	str	x0, [sp, #168]
    91e8:	add	x0, x0, #0x1
    91ec:	ldrb	w1, [x25]
    91f0:	ldrh	w1, [x2, x1, lsl #1]
    91f4:	tbnz	w1, #13, 91e0 <GOMP_critical_name_end@@GOMP_1.0+0x330>
    91f8:	str	wzr, [sp, #124]
    91fc:	mov	w28, #0x0                   	// #0
    9200:	mov	w0, #0x1                   	// #1
    9204:	adrp	x27, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9208:	add	x26, sp, #0xa8
    920c:	mov	x1, #0x1                   	// #1
    9210:	str	x1, [sp, #104]
    9214:	cmp	w0, w28
    9218:	b.le	9500 <GOMP_critical_name_end@@GOMP_1.0+0x650>
    921c:	str	x25, [sp, #168]
    9220:	b	9414 <GOMP_critical_name_end@@GOMP_1.0+0x564>
    9224:	mov	w1, #0x1                   	// #1
    9228:	ldr	x2, [sp, #128]
    922c:	strb	w1, [x2]
    9230:	add	x1, x0, #0x1
    9234:	str	x1, [sp, #168]
    9238:	ldr	x2, [x21]
    923c:	ldrb	w1, [x0, #1]
    9240:	ldrh	w1, [x2, x1, lsl #1]
    9244:	tbz	w1, #13, 91a4 <GOMP_critical_name_end@@GOMP_1.0+0x2f4>
    9248:	add	x0, x0, #0x2
    924c:	str	x0, [sp, #168]
    9250:	ldrb	w1, [x0]
    9254:	add	x0, x0, #0x1
    9258:	ldrh	w1, [x2, x1, lsl #1]
    925c:	tbnz	w1, #13, 924c <GOMP_critical_name_end@@GOMP_1.0+0x39c>
    9260:	b	91a4 <GOMP_critical_name_end@@GOMP_1.0+0x2f4>
    9264:	ldr	x1, [x27, #1568]
    9268:	cmp	x1, #0x0
    926c:	ldr	w1, [sp, #124]
    9270:	csinc	w1, w1, wzr, eq  // eq = none
    9274:	str	w1, [sp, #124]
    9278:	add	x1, x0, #0x1
    927c:	str	x1, [sp, #168]
    9280:	ldr	x2, [x21]
    9284:	ldrb	w1, [x0, #1]
    9288:	ldrh	w1, [x2, x1, lsl #1]
    928c:	tbz	w1, #13, 9428 <GOMP_critical_name_end@@GOMP_1.0+0x578>
    9290:	add	x0, x0, #0x2
    9294:	str	x0, [sp, #168]
    9298:	ldrb	w1, [x0]
    929c:	add	x0, x0, #0x1
    92a0:	ldrh	w1, [x2, x1, lsl #1]
    92a4:	tbnz	w1, #13, 9294 <GOMP_critical_name_end@@GOMP_1.0+0x3e4>
    92a8:	b	9428 <GOMP_critical_name_end@@GOMP_1.0+0x578>
    92ac:	add	x0, x2, x3
    92b0:	str	x0, [sp, #168]
    92b4:	ldrb	w1, [x2, #1]
    92b8:	ldrh	w1, [x4, x1, lsl #1]
    92bc:	tbz	w1, #13, 92dc <GOMP_critical_name_end@@GOMP_1.0+0x42c>
    92c0:	add	x2, x2, #0x2
    92c4:	mov	x0, x2
    92c8:	str	x2, [sp, #168]
    92cc:	add	x2, x2, #0x1
    92d0:	ldrb	w1, [x0]
    92d4:	ldrh	w1, [x4, x1, lsl #1]
    92d8:	tbnz	w1, #13, 92c4 <GOMP_critical_name_end@@GOMP_1.0+0x414>
    92dc:	str	wzr, [x19]
    92e0:	mov	w2, #0xa                   	// #10
    92e4:	mov	x1, x26
    92e8:	bl	85e0 <strtoul@plt>
    92ec:	mov	x22, x0
    92f0:	ldr	w0, [x19]
    92f4:	cmp	w0, #0x0
    92f8:	cset	w23, ne  // ne = any
    92fc:	cmp	x22, #0x0
    9300:	csinc	w23, w23, wzr, ne  // ne = any
    9304:	cbnz	w23, 96f4 <GOMP_critical_name_end@@GOMP_1.0+0x844>
    9308:	ldr	x4, [x21]
    930c:	ldr	x2, [sp, #168]
    9310:	ldrb	w1, [x2]
    9314:	and	x0, x1, #0xff
    9318:	ldrh	w0, [x4, x0, lsl #1]
    931c:	tbz	w0, #13, 933c <GOMP_critical_name_end@@GOMP_1.0+0x48c>
    9320:	add	x0, x2, #0x1
    9324:	mov	x2, x0
    9328:	str	x0, [sp, #168]
    932c:	ldrb	w1, [x0], #1
    9330:	and	x3, x1, #0xff
    9334:	ldrh	w3, [x4, x3, lsl #1]
    9338:	tbnz	w3, #13, 9324 <GOMP_critical_name_end@@GOMP_1.0+0x474>
    933c:	mov	x3, #0x1                   	// #1
    9340:	cmp	w1, #0x3a
    9344:	b.eq	9364 <GOMP_critical_name_end@@GOMP_1.0+0x4b4>  // b.none
    9348:	cmp	w24, #0x0
    934c:	ccmp	x22, #0x1, #0x4, ne  // ne = any
    9350:	b.eq	9494 <GOMP_critical_name_end@@GOMP_1.0+0x5e4>  // b.none
    9354:	ldp	x19, x20, [sp, #16]
    9358:	ldp	x25, x26, [sp, #64]
    935c:	ldp	x27, x28, [sp, #80]
    9360:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9364:	add	x0, x2, x3
    9368:	str	x0, [sp, #168]
    936c:	ldrb	w1, [x2, #1]
    9370:	ldrh	w1, [x4, x1, lsl #1]
    9374:	tbz	w1, #13, 9394 <GOMP_critical_name_end@@GOMP_1.0+0x4e4>
    9378:	add	x2, x2, #0x2
    937c:	mov	x0, x2
    9380:	str	x2, [sp, #168]
    9384:	add	x2, x2, #0x1
    9388:	ldrb	w1, [x0]
    938c:	ldrh	w1, [x4, x1, lsl #1]
    9390:	tbnz	w1, #13, 937c <GOMP_critical_name_end@@GOMP_1.0+0x4cc>
    9394:	str	wzr, [x19]
    9398:	mov	w2, #0xa                   	// #10
    939c:	mov	x1, x26
    93a0:	bl	88c0 <strtol@plt>
    93a4:	mov	x3, x0
    93a8:	ldr	w0, [x19]
    93ac:	cbnz	w0, 9730 <GOMP_critical_name_end@@GOMP_1.0+0x880>
    93b0:	ldr	x2, [x21]
    93b4:	ldr	x0, [sp, #168]
    93b8:	ldrb	w1, [x0]
    93bc:	ldrh	w1, [x2, x1, lsl #1]
    93c0:	tbz	w1, #13, 9348 <GOMP_critical_name_end@@GOMP_1.0+0x498>
    93c4:	add	x0, x0, #0x1
    93c8:	str	x0, [sp, #168]
    93cc:	ldrb	w1, [x0]
    93d0:	add	x0, x0, #0x1
    93d4:	ldrh	w1, [x2, x1, lsl #1]
    93d8:	tbnz	w1, #13, 93c8 <GOMP_critical_name_end@@GOMP_1.0+0x518>
    93dc:	b	9348 <GOMP_critical_name_end@@GOMP_1.0+0x498>
    93e0:	ldr	x1, [sp, #96]
    93e4:	ldr	x0, [sp, #112]
    93e8:	bl	1d338 <omp_pause_resource_all_@@OMP_5.0+0x614>
    93ec:	ands	w23, w0, #0xff
    93f0:	b.eq	94d8 <GOMP_critical_name_end@@GOMP_1.0+0x628>  // b.none
    93f4:	ldr	x0, [sp, #168]
    93f8:	ldrb	w1, [x0]
    93fc:	cmp	w1, #0x7d
    9400:	b.eq	94e8 <GOMP_critical_name_end@@GOMP_1.0+0x638>  // b.none
    9404:	cmp	w1, #0x2c
    9408:	b.ne	9708 <GOMP_critical_name_end@@GOMP_1.0+0x858>  // b.any
    940c:	add	x0, x0, #0x1
    9410:	str	x0, [sp, #168]
    9414:	ldr	x0, [sp, #168]
    9418:	ldrb	w20, [x0]
    941c:	cmp	w20, #0x21
    9420:	cset	w24, eq  // eq = none
    9424:	b.eq	9264 <GOMP_critical_name_end@@GOMP_1.0+0x3b4>  // b.none
    9428:	bl	8ac0 <__errno_location@plt>
    942c:	mov	x19, x0
    9430:	str	wzr, [x0]
    9434:	mov	w2, #0xa                   	// #10
    9438:	mov	x1, x26
    943c:	ldr	x0, [sp, #168]
    9440:	bl	85e0 <strtoul@plt>
    9444:	str	x0, [sp, #96]
    9448:	ldr	w0, [x19]
    944c:	cbnz	w0, 96d0 <GOMP_critical_name_end@@GOMP_1.0+0x820>
    9450:	ldr	x4, [x21]
    9454:	ldr	x2, [sp, #168]
    9458:	ldrb	w1, [x2]
    945c:	and	x0, x1, #0xff
    9460:	ldrh	w0, [x4, x0, lsl #1]
    9464:	tbz	w0, #13, 9484 <GOMP_critical_name_end@@GOMP_1.0+0x5d4>
    9468:	add	x0, x2, #0x1
    946c:	mov	x2, x0
    9470:	str	x0, [sp, #168]
    9474:	ldrb	w1, [x0], #1
    9478:	and	x3, x1, #0xff
    947c:	ldrh	w3, [x4, x3, lsl #1]
    9480:	tbnz	w3, #13, 946c <GOMP_critical_name_end@@GOMP_1.0+0x5bc>
    9484:	mov	x3, #0x1                   	// #1
    9488:	ldr	x22, [sp, #104]
    948c:	cmp	w1, #0x3a
    9490:	b.eq	92ac <GOMP_critical_name_end@@GOMP_1.0+0x3fc>  // b.none
    9494:	ldr	x0, [x27, #1568]
    9498:	cbz	x0, 93f4 <GOMP_critical_name_end@@GOMP_1.0+0x544>
    949c:	cmp	w24, w28
    94a0:	b.ne	93f4 <GOMP_critical_name_end@@GOMP_1.0+0x544>  // b.any
    94a4:	cmp	w20, #0x21
    94a8:	b.eq	93e0 <GOMP_critical_name_end@@GOMP_1.0+0x530>  // b.none
    94ac:	mov	w4, #0x0                   	// #0
    94b0:	mov	x2, x22
    94b4:	ldr	x1, [sp, #96]
    94b8:	ldr	x0, [sp, #112]
    94bc:	bl	1ce24 <omp_pause_resource_all_@@OMP_5.0+0x100>
    94c0:	ands	w23, w0, #0xff
    94c4:	b.ne	93f4 <GOMP_critical_name_end@@GOMP_1.0+0x544>  // b.any
    94c8:	ldp	x19, x20, [sp, #16]
    94cc:	ldp	x25, x26, [sp, #64]
    94d0:	ldp	x27, x28, [sp, #80]
    94d4:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    94d8:	ldp	x19, x20, [sp, #16]
    94dc:	ldp	x25, x26, [sp, #64]
    94e0:	ldp	x27, x28, [sp, #80]
    94e4:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    94e8:	add	w28, w28, #0x1
    94ec:	ldr	w0, [sp, #124]
    94f0:	cmp	w0, #0x0
    94f4:	cset	w0, ne  // ne = any
    94f8:	add	w0, w0, #0x1
    94fc:	b	9214 <GOMP_critical_name_end@@GOMP_1.0+0x364>
    9500:	ldr	x1, [sp, #168]
    9504:	add	x0, x1, #0x1
    9508:	str	x0, [sp, #168]
    950c:	ldr	x3, [x21]
    9510:	ldrb	w4, [x1, #1]
    9514:	and	x2, x4, #0xff
    9518:	ldrh	w2, [x3, x2, lsl #1]
    951c:	tbz	w2, #13, 953c <GOMP_critical_name_end@@GOMP_1.0+0x68c>
    9520:	add	x1, x1, #0x2
    9524:	mov	x0, x1
    9528:	str	x1, [sp, #168]
    952c:	ldrb	w4, [x1], #1
    9530:	and	x2, x4, #0xff
    9534:	ldrh	w2, [x3, x2, lsl #1]
    9538:	tbnz	w2, #13, 9524 <GOMP_critical_name_end@@GOMP_1.0+0x674>
    953c:	mov	x2, #0x1                   	// #1
    9540:	mov	x19, x2
    9544:	cmp	w4, #0x3a
    9548:	b.eq	957c <GOMP_critical_name_end@@GOMP_1.0+0x6cc>  // b.none
    954c:	ldr	x0, [sp, #168]
    9550:	ldr	x1, [sp, #136]
    9554:	str	x0, [x1]
    9558:	ldr	x0, [sp, #144]
    955c:	str	x19, [x0]
    9560:	ldr	x0, [sp, #152]
    9564:	str	x2, [x0]
    9568:	mov	w23, #0x1                   	// #1
    956c:	ldp	x19, x20, [sp, #16]
    9570:	ldp	x25, x26, [sp, #64]
    9574:	ldp	x27, x28, [sp, #80]
    9578:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    957c:	add	x19, x0, x2
    9580:	str	x19, [sp, #168]
    9584:	ldrb	w1, [x0, #1]
    9588:	ldrh	w1, [x3, x1, lsl #1]
    958c:	tbz	w1, #13, 95ac <GOMP_critical_name_end@@GOMP_1.0+0x6fc>
    9590:	add	x0, x0, #0x2
    9594:	mov	x19, x0
    9598:	str	x0, [sp, #168]
    959c:	add	x0, x0, #0x1
    95a0:	ldrb	w1, [x19]
    95a4:	ldrh	w1, [x3, x1, lsl #1]
    95a8:	tbnz	w1, #13, 9594 <GOMP_critical_name_end@@GOMP_1.0+0x6e4>
    95ac:	bl	8ac0 <__errno_location@plt>
    95b0:	mov	x20, x0
    95b4:	str	wzr, [x0]
    95b8:	mov	w2, #0xa                   	// #10
    95bc:	add	x1, sp, #0xa8
    95c0:	mov	x0, x19
    95c4:	bl	85e0 <strtoul@plt>
    95c8:	mov	x19, x0
    95cc:	ldr	w0, [x20]
    95d0:	mov	w23, #0x0                   	// #0
    95d4:	cbnz	w0, 9740 <GOMP_critical_name_end@@GOMP_1.0+0x890>
    95d8:	sub	x1, x19, #0x1
    95dc:	mov	x0, #0xfffe                	// #65534
    95e0:	cmp	x1, x0
    95e4:	b.hi	9750 <GOMP_critical_name_end@@GOMP_1.0+0x8a0>  // b.pmore
    95e8:	ldr	x3, [x21]
    95ec:	ldr	x1, [sp, #168]
    95f0:	ldrb	w0, [x1]
    95f4:	and	x2, x0, #0xff
    95f8:	ldrh	w2, [x3, x2, lsl #1]
    95fc:	tbz	w2, #13, 961c <GOMP_critical_name_end@@GOMP_1.0+0x76c>
    9600:	add	x2, x1, #0x1
    9604:	mov	x1, x2
    9608:	str	x2, [sp, #168]
    960c:	ldrb	w0, [x2], #1
    9610:	and	x4, x0, #0xff
    9614:	ldrh	w4, [x3, x4, lsl #1]
    9618:	tbnz	w4, #13, 9604 <GOMP_critical_name_end@@GOMP_1.0+0x754>
    961c:	mov	x2, #0x1                   	// #1
    9620:	cmp	w0, #0x3a
    9624:	b.eq	9654 <GOMP_critical_name_end@@GOMP_1.0+0x7a4>  // b.none
    9628:	cmp	x19, #0x1
    962c:	cset	w1, ne  // ne = any
    9630:	ldr	x0, [sp, #128]
    9634:	ldrb	w0, [x0]
    9638:	mov	w23, #0x0                   	// #0
    963c:	tst	w1, w0
    9640:	b.eq	954c <GOMP_critical_name_end@@GOMP_1.0+0x69c>  // b.none
    9644:	ldp	x19, x20, [sp, #16]
    9648:	ldp	x25, x26, [sp, #64]
    964c:	ldp	x27, x28, [sp, #80]
    9650:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9654:	add	x0, x1, x2
    9658:	str	x0, [sp, #168]
    965c:	ldrb	w2, [x1, #1]
    9660:	ldrh	w2, [x3, x2, lsl #1]
    9664:	tbz	w2, #13, 9684 <GOMP_critical_name_end@@GOMP_1.0+0x7d4>
    9668:	add	x1, x1, #0x2
    966c:	mov	x0, x1
    9670:	str	x1, [sp, #168]
    9674:	add	x1, x1, #0x1
    9678:	ldrb	w2, [x0]
    967c:	ldrh	w2, [x3, x2, lsl #1]
    9680:	tbnz	w2, #13, 966c <GOMP_critical_name_end@@GOMP_1.0+0x7bc>
    9684:	str	wzr, [x20]
    9688:	mov	w2, #0xa                   	// #10
    968c:	add	x1, sp, #0xa8
    9690:	bl	88c0 <strtol@plt>
    9694:	mov	x2, x0
    9698:	ldr	w0, [x20]
    969c:	cbnz	w0, 971c <GOMP_critical_name_end@@GOMP_1.0+0x86c>
    96a0:	ldr	x3, [x21]
    96a4:	ldr	x0, [sp, #168]
    96a8:	ldrb	w1, [x0]
    96ac:	ldrh	w1, [x3, x1, lsl #1]
    96b0:	tbz	w1, #13, 9628 <GOMP_critical_name_end@@GOMP_1.0+0x778>
    96b4:	add	x0, x0, #0x1
    96b8:	str	x0, [sp, #168]
    96bc:	ldrb	w1, [x0]
    96c0:	add	x0, x0, #0x1
    96c4:	ldrh	w1, [x3, x1, lsl #1]
    96c8:	tbnz	w1, #13, 96b8 <GOMP_critical_name_end@@GOMP_1.0+0x808>
    96cc:	b	9628 <GOMP_critical_name_end@@GOMP_1.0+0x778>
    96d0:	mov	w23, #0x0                   	// #0
    96d4:	ldp	x19, x20, [sp, #16]
    96d8:	ldp	x25, x26, [sp, #64]
    96dc:	ldp	x27, x28, [sp, #80]
    96e0:	mov	w0, w23
    96e4:	ldp	x21, x22, [sp, #32]
    96e8:	ldp	x23, x24, [sp, #48]
    96ec:	ldp	x29, x30, [sp], #176
    96f0:	ret
    96f4:	mov	w23, #0x0                   	// #0
    96f8:	ldp	x19, x20, [sp, #16]
    96fc:	ldp	x25, x26, [sp, #64]
    9700:	ldp	x27, x28, [sp, #80]
    9704:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9708:	mov	w23, #0x0                   	// #0
    970c:	ldp	x19, x20, [sp, #16]
    9710:	ldp	x25, x26, [sp, #64]
    9714:	ldp	x27, x28, [sp, #80]
    9718:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    971c:	mov	w23, #0x0                   	// #0
    9720:	ldp	x19, x20, [sp, #16]
    9724:	ldp	x25, x26, [sp, #64]
    9728:	ldp	x27, x28, [sp, #80]
    972c:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9730:	ldp	x19, x20, [sp, #16]
    9734:	ldp	x25, x26, [sp, #64]
    9738:	ldp	x27, x28, [sp, #80]
    973c:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9740:	ldp	x19, x20, [sp, #16]
    9744:	ldp	x25, x26, [sp, #64]
    9748:	ldp	x27, x28, [sp, #80]
    974c:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9750:	ldp	x19, x20, [sp, #16]
    9754:	ldp	x25, x26, [sp, #64]
    9758:	ldp	x27, x28, [sp, #80]
    975c:	b	96e0 <GOMP_critical_name_end@@GOMP_1.0+0x830>
    9760:	stp	x29, x30, [sp, #-80]!
    9764:	mov	x29, sp
    9768:	stp	x19, x20, [sp, #16]
    976c:	stp	x21, x22, [sp, #32]
    9770:	mov	x20, x0
    9774:	mov	x21, x1
    9778:	bl	8ad0 <getenv@plt>
    977c:	cbz	x0, 9900 <GOMP_critical_name_end@@GOMP_1.0+0xa50>
    9780:	mov	x19, x0
    9784:	bl	88b0 <__ctype_b_loc@plt>
    9788:	mov	x22, x0
    978c:	ldr	x4, [x0]
    9790:	b	9798 <GOMP_critical_name_end@@GOMP_1.0+0x8e8>
    9794:	add	x19, x19, #0x1
    9798:	ldrb	w2, [x19]
    979c:	and	x3, x2, #0xff
    97a0:	ldrh	w3, [x4, x3, lsl #1]
    97a4:	tbnz	w3, #13, 9794 <GOMP_critical_name_end@@GOMP_1.0+0x8e4>
    97a8:	cbnz	w2, 97d0 <GOMP_critical_name_end@@GOMP_1.0+0x920>
    97ac:	mov	x1, x20
    97b0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    97b4:	add	x0, x0, #0x7a8
    97b8:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    97bc:	mov	w0, #0x0                   	// #0
    97c0:	ldp	x19, x20, [sp, #16]
    97c4:	ldp	x21, x22, [sp, #32]
    97c8:	ldp	x29, x30, [sp], #80
    97cc:	ret
    97d0:	stp	x23, x24, [sp, #48]
    97d4:	bl	8ac0 <__errno_location@plt>
    97d8:	mov	x23, x0
    97dc:	str	wzr, [x0]
    97e0:	mov	w2, #0xa                   	// #10
    97e4:	add	x1, sp, #0x48
    97e8:	mov	x0, x19
    97ec:	bl	85e0 <strtoul@plt>
    97f0:	mov	x24, x0
    97f4:	ldr	w0, [x23]
    97f8:	cbnz	w0, 98e8 <GOMP_critical_name_end@@GOMP_1.0+0xa38>
    97fc:	ldr	x23, [x22]
    9800:	ldr	x19, [sp, #72]
    9804:	ldrb	w1, [x19]
    9808:	ldrb	w22, [x19]
    980c:	ldrh	w0, [x23, x22, lsl #1]
    9810:	tbz	w0, #13, 9830 <GOMP_critical_name_end@@GOMP_1.0+0x980>
    9814:	add	x2, x19, #0x1
    9818:	mov	x19, x2
    981c:	str	x2, [sp, #72]
    9820:	ldrb	w1, [x2], #1
    9824:	and	x22, x1, #0xff
    9828:	ldrh	w3, [x23, x22, lsl #1]
    982c:	tbnz	w3, #13, 9818 <GOMP_critical_name_end@@GOMP_1.0+0x968>
    9830:	cbz	w1, 98c4 <GOMP_critical_name_end@@GOMP_1.0+0xa14>
    9834:	bl	86f0 <__ctype_tolower_loc@plt>
    9838:	ldr	x0, [x0]
    983c:	ldr	w0, [x0, x22, lsl #2]
    9840:	cmp	w0, #0x6b
    9844:	b.eq	98b4 <GOMP_critical_name_end@@GOMP_1.0+0xa04>  // b.none
    9848:	b.gt	98a4 <GOMP_critical_name_end@@GOMP_1.0+0x9f4>
    984c:	cmp	w0, #0x62
    9850:	b.eq	98bc <GOMP_critical_name_end@@GOMP_1.0+0xa0c>  // b.none
    9854:	mov	x2, #0x1e                  	// #30
    9858:	cmp	w0, #0x67
    985c:	b.ne	989c <GOMP_critical_name_end@@GOMP_1.0+0x9ec>  // b.any
    9860:	add	x0, x19, #0x1
    9864:	str	x0, [sp, #72]
    9868:	ldrb	w0, [x19, #1]
    986c:	ldrb	w1, [x19, #1]
    9870:	ldrh	w1, [x23, x1, lsl #1]
    9874:	tbz	w1, #13, 9890 <GOMP_critical_name_end@@GOMP_1.0+0x9e0>
    9878:	add	x19, x19, #0x2
    987c:	str	x19, [sp, #72]
    9880:	ldrb	w0, [x19], #1
    9884:	and	x1, x0, #0xff
    9888:	ldrh	w1, [x23, x1, lsl #1]
    988c:	tbnz	w1, #13, 987c <GOMP_critical_name_end@@GOMP_1.0+0x9cc>
    9890:	cbz	w0, 98c8 <GOMP_critical_name_end@@GOMP_1.0+0xa18>
    9894:	ldp	x23, x24, [sp, #48]
    9898:	b	97ac <GOMP_critical_name_end@@GOMP_1.0+0x8fc>
    989c:	ldp	x23, x24, [sp, #48]
    98a0:	b	97ac <GOMP_critical_name_end@@GOMP_1.0+0x8fc>
    98a4:	cmp	w0, #0x6d
    98a8:	b.ne	98f0 <GOMP_critical_name_end@@GOMP_1.0+0xa40>  // b.any
    98ac:	mov	x2, #0x14                  	// #20
    98b0:	b	9860 <GOMP_critical_name_end@@GOMP_1.0+0x9b0>
    98b4:	mov	x2, #0xa                   	// #10
    98b8:	b	9860 <GOMP_critical_name_end@@GOMP_1.0+0x9b0>
    98bc:	mov	x2, #0x0                   	// #0
    98c0:	b	9860 <GOMP_critical_name_end@@GOMP_1.0+0x9b0>
    98c4:	mov	x2, #0xa                   	// #10
    98c8:	lsl	x0, x24, x2
    98cc:	lsr	x2, x0, x2
    98d0:	cmp	x2, x24
    98d4:	b.ne	98f8 <GOMP_critical_name_end@@GOMP_1.0+0xa48>  // b.any
    98d8:	str	x0, [x21]
    98dc:	mov	w0, #0x1                   	// #1
    98e0:	ldp	x23, x24, [sp, #48]
    98e4:	b	97c0 <GOMP_critical_name_end@@GOMP_1.0+0x910>
    98e8:	ldp	x23, x24, [sp, #48]
    98ec:	b	97ac <GOMP_critical_name_end@@GOMP_1.0+0x8fc>
    98f0:	ldp	x23, x24, [sp, #48]
    98f4:	b	97ac <GOMP_critical_name_end@@GOMP_1.0+0x8fc>
    98f8:	ldp	x23, x24, [sp, #48]
    98fc:	b	97ac <GOMP_critical_name_end@@GOMP_1.0+0x8fc>
    9900:	mov	w0, #0x0                   	// #0
    9904:	b	97c0 <GOMP_critical_name_end@@GOMP_1.0+0x910>
    9908:	stp	x29, x30, [sp, #-192]!
    990c:	mov	x29, sp
    9910:	stp	x19, x20, [sp, #16]
    9914:	stp	x21, x22, [sp, #32]
    9918:	stp	x23, x24, [sp, #48]
    991c:	stp	x25, x26, [sp, #64]
    9920:	stp	x27, x28, [sp, #80]
    9924:	str	xzr, [sp, #176]
    9928:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    992c:	add	x0, x0, #0x808
    9930:	bl	8ad0 <getenv@plt>
    9934:	cbz	x0, 9bd4 <GOMP_critical_name_end@@GOMP_1.0+0xd24>
    9938:	mov	x19, x0
    993c:	bl	88b0 <__ctype_b_loc@plt>
    9940:	mov	x21, x0
    9944:	ldr	x20, [x0]
    9948:	b	9950 <GOMP_critical_name_end@@GOMP_1.0+0xaa0>
    994c:	add	x19, x19, #0x1
    9950:	ldrb	w0, [x19]
    9954:	ldrh	w0, [x20, x0, lsl #1]
    9958:	tbnz	w0, #13, 994c <GOMP_critical_name_end@@GOMP_1.0+0xa9c>
    995c:	mov	x2, #0x9                   	// #9
    9960:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9964:	add	x1, x1, #0x818
    9968:	mov	x0, x19
    996c:	bl	8940 <strncasecmp@plt>
    9970:	cbnz	w0, 9a80 <GOMP_critical_name_end@@GOMP_1.0+0xbd0>
    9974:	add	x1, x19, #0x9
    9978:	mov	w22, #0x1                   	// #1
    997c:	ldrb	w2, [x1]
    9980:	ldrb	w0, [x1]
    9984:	ldrh	w0, [x20, x0, lsl #1]
    9988:	tbz	w0, #13, 999c <GOMP_critical_name_end@@GOMP_1.0+0xaec>
    998c:	ldrb	w2, [x1, #1]!
    9990:	and	x0, x2, #0xff
    9994:	ldrh	w0, [x20, x0, lsl #1]
    9998:	tbnz	w0, #13, 998c <GOMP_critical_name_end@@GOMP_1.0+0xadc>
    999c:	cmp	w2, #0x3a
    99a0:	b.ne	9bc8 <GOMP_critical_name_end@@GOMP_1.0+0xd18>  // b.any
    99a4:	add	x19, x1, #0x1
    99a8:	ldrb	w0, [x1, #1]
    99ac:	ldrh	w0, [x20, x0, lsl #1]
    99b0:	tbz	w0, #13, 99c0 <GOMP_critical_name_end@@GOMP_1.0+0xb10>
    99b4:	ldrb	w0, [x19, #1]!
    99b8:	ldrh	w0, [x20, x0, lsl #1]
    99bc:	tbnz	w0, #13, 99b4 <GOMP_critical_name_end@@GOMP_1.0+0xb04>
    99c0:	mov	x2, #0x6                   	// #6
    99c4:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    99c8:	add	x1, x1, #0x838
    99cc:	mov	x0, x19
    99d0:	bl	8940 <strncasecmp@plt>
    99d4:	cbnz	w0, 9aac <GOMP_critical_name_end@@GOMP_1.0+0xbfc>
    99d8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    99dc:	mov	w1, #0x1                   	// #1
    99e0:	str	w1, [x0, #704]
    99e4:	add	x19, x19, #0x6
    99e8:	cmp	w22, #0x1
    99ec:	b.eq	9a04 <GOMP_critical_name_end@@GOMP_1.0+0xb54>  // b.none
    99f0:	cbnz	w22, 9a18 <GOMP_critical_name_end@@GOMP_1.0+0xb68>
    99f4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    99f8:	ldr	w0, [x0, #704]
    99fc:	cmp	w0, #0x1
    9a00:	b.ne	9a18 <GOMP_critical_name_end@@GOMP_1.0+0xb68>  // b.any
    9a04:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9a08:	add	x0, x0, #0x2b8
    9a0c:	ldr	w1, [x0, #8]
    9a10:	orr	w1, w1, #0x80000000
    9a14:	str	w1, [x0, #8]
    9a18:	ldr	x2, [x21]
    9a1c:	ldrb	w1, [x19]
    9a20:	ldrb	w0, [x19]
    9a24:	ldrh	w0, [x2, x0, lsl #1]
    9a28:	tbz	w0, #13, 9a3c <GOMP_critical_name_end@@GOMP_1.0+0xb8c>
    9a2c:	ldrb	w1, [x19, #1]!
    9a30:	and	x0, x1, #0xff
    9a34:	ldrh	w0, [x2, x0, lsl #1]
    9a38:	tbnz	w0, #13, 9a2c <GOMP_critical_name_end@@GOMP_1.0+0xb7c>
    9a3c:	cbz	w1, 9b30 <GOMP_critical_name_end@@GOMP_1.0+0xc80>
    9a40:	cmp	w1, #0x2c
    9a44:	b.ne	9bc8 <GOMP_critical_name_end@@GOMP_1.0+0xd18>  // b.any
    9a48:	add	x20, x19, #0x1
    9a4c:	ldrb	w1, [x19, #1]
    9a50:	ldrb	w0, [x19, #1]
    9a54:	ldrh	w0, [x2, x0, lsl #1]
    9a58:	tbz	w0, #13, 9a6c <GOMP_critical_name_end@@GOMP_1.0+0xbbc>
    9a5c:	ldrb	w1, [x20, #1]!
    9a60:	and	x0, x1, #0xff
    9a64:	ldrh	w0, [x2, x0, lsl #1]
    9a68:	tbnz	w0, #13, 9a5c <GOMP_critical_name_end@@GOMP_1.0+0xbac>
    9a6c:	cbnz	w1, 9b50 <GOMP_critical_name_end@@GOMP_1.0+0xca0>
    9a70:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9a74:	add	x0, x0, #0x890
    9a78:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9a7c:	b	9bd4 <GOMP_critical_name_end@@GOMP_1.0+0xd24>
    9a80:	mov	x2, #0xc                   	// #12
    9a84:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9a88:	add	x1, x1, #0x828
    9a8c:	mov	x0, x19
    9a90:	bl	8940 <strncasecmp@plt>
    9a94:	cbnz	w0, 9aa4 <GOMP_critical_name_end@@GOMP_1.0+0xbf4>
    9a98:	add	x1, x19, #0xc
    9a9c:	mov	w22, #0xffffffff            	// #-1
    9aa0:	b	997c <GOMP_critical_name_end@@GOMP_1.0+0xacc>
    9aa4:	mov	w22, #0x0                   	// #0
    9aa8:	b	99c0 <GOMP_critical_name_end@@GOMP_1.0+0xb10>
    9aac:	mov	x2, #0x7                   	// #7
    9ab0:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9ab4:	add	x1, x1, #0x840
    9ab8:	mov	x0, x19
    9abc:	bl	8940 <strncasecmp@plt>
    9ac0:	cbnz	w0, 9ad8 <GOMP_critical_name_end@@GOMP_1.0+0xc28>
    9ac4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9ac8:	mov	w1, #0x2                   	// #2
    9acc:	str	w1, [x0, #704]
    9ad0:	add	x19, x19, #0x7
    9ad4:	b	99e8 <GOMP_critical_name_end@@GOMP_1.0+0xb38>
    9ad8:	mov	x2, #0x6                   	// #6
    9adc:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9ae0:	add	x1, x1, #0x848
    9ae4:	mov	x0, x19
    9ae8:	bl	8940 <strncasecmp@plt>
    9aec:	cbnz	w0, 9b04 <GOMP_critical_name_end@@GOMP_1.0+0xc54>
    9af0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9af4:	mov	w1, #0x3                   	// #3
    9af8:	str	w1, [x0, #704]
    9afc:	add	x19, x19, #0x6
    9b00:	b	99e8 <GOMP_critical_name_end@@GOMP_1.0+0xb38>
    9b04:	mov	x2, #0x4                   	// #4
    9b08:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9b0c:	add	x1, x1, #0x850
    9b10:	mov	x0, x19
    9b14:	bl	8940 <strncasecmp@plt>
    9b18:	cbnz	w0, 9bc8 <GOMP_critical_name_end@@GOMP_1.0+0xd18>
    9b1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9b20:	mov	w1, #0x4                   	// #4
    9b24:	str	w1, [x0, #704]
    9b28:	add	x19, x19, #0x4
    9b2c:	b	99e8 <GOMP_critical_name_end@@GOMP_1.0+0xb38>
    9b30:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9b34:	add	x0, x0, #0x2b8
    9b38:	ldr	w1, [x0, #8]
    9b3c:	and	w1, w1, #0x7fffffff
    9b40:	cmp	w1, #0x1
    9b44:	cset	w1, ne  // ne = any
    9b48:	str	w1, [x0, #12]
    9b4c:	b	9bd4 <GOMP_critical_name_end@@GOMP_1.0+0xd24>
    9b50:	bl	8ac0 <__errno_location@plt>
    9b54:	mov	x19, x0
    9b58:	str	wzr, [x0]
    9b5c:	mov	w2, #0xa                   	// #10
    9b60:	add	x1, sp, #0xa8
    9b64:	mov	x0, x20
    9b68:	bl	85e0 <strtoul@plt>
    9b6c:	ldr	w1, [x19]
    9b70:	cbnz	w1, 9a70 <GOMP_critical_name_end@@GOMP_1.0+0xbc0>
    9b74:	ldr	x4, [x21]
    9b78:	b	9b84 <GOMP_critical_name_end@@GOMP_1.0+0xcd4>
    9b7c:	add	x1, x1, #0x1
    9b80:	str	x1, [sp, #168]
    9b84:	ldr	x1, [sp, #168]
    9b88:	ldrb	w3, [x1]
    9b8c:	ldrb	w2, [x1]
    9b90:	ldrh	w2, [x4, x2, lsl #1]
    9b94:	tbnz	w2, #13, 9b7c <GOMP_critical_name_end@@GOMP_1.0+0xccc>
    9b98:	cbnz	w3, 9a70 <GOMP_critical_name_end@@GOMP_1.0+0xbc0>
    9b9c:	cmp	x0, w0, sxtw
    9ba0:	b.ne	9a70 <GOMP_critical_name_end@@GOMP_1.0+0xbc0>  // b.any
    9ba4:	cbnz	x0, 9bbc <GOMP_critical_name_end@@GOMP_1.0+0xd0c>
    9ba8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9bac:	ldr	w0, [x0, #704]
    9bb0:	and	w0, w0, #0x7fffffff
    9bb4:	cmp	w0, #0x1
    9bb8:	cset	x0, ne  // ne = any
    9bbc:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9bc0:	str	w0, [x1, #708]
    9bc4:	b	9bd4 <GOMP_critical_name_end@@GOMP_1.0+0xd24>
    9bc8:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9bcc:	add	x0, x0, #0x858
    9bd0:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9bd4:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9bd8:	add	x19, x19, #0x2b8
    9bdc:	add	x1, x19, #0x18
    9be0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9be4:	add	x0, x0, #0x8d8
    9be8:	bl	8ed8 <GOMP_critical_name_end@@GOMP_1.0+0x28>
    9bec:	add	x1, x19, #0x19
    9bf0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9bf4:	add	x0, x0, #0x8e8
    9bf8:	bl	8ed8 <GOMP_critical_name_end@@GOMP_1.0+0x28>
    9bfc:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9c00:	add	x20, x20, #0x554
    9c04:	mov	x1, x20
    9c08:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c0c:	add	x0, x0, #0x8f8
    9c10:	bl	8ed8 <GOMP_critical_name_end@@GOMP_1.0+0x28>
    9c14:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9c18:	add	x1, x1, #0x5f0
    9c1c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c20:	add	x0, x0, #0x910
    9c24:	bl	8ed8 <GOMP_critical_name_end@@GOMP_1.0+0x28>
    9c28:	mov	w3, #0x0                   	// #0
    9c2c:	mov	w2, #0x1                   	// #1
    9c30:	add	x1, x19, #0x10
    9c34:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c38:	add	x0, x0, #0x928
    9c3c:	bl	90c4 <GOMP_critical_name_end@@GOMP_1.0+0x214>
    9c40:	mov	w3, #0x0                   	// #0
    9c44:	mov	w2, #0x1                   	// #1
    9c48:	add	x1, x20, #0x4
    9c4c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c50:	add	x0, x0, #0x940
    9c54:	bl	90c4 <GOMP_critical_name_end@@GOMP_1.0+0x214>
    9c58:	mov	w3, #0x0                   	// #0
    9c5c:	mov	w2, #0x1                   	// #1
    9c60:	add	x1, x19, #0x28
    9c64:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c68:	add	x0, x0, #0x958
    9c6c:	bl	8fbc <GOMP_critical_name_end@@GOMP_1.0+0x10c>
    9c70:	mov	w3, #0x0                   	// #0
    9c74:	mov	w2, #0x0                   	// #0
    9c78:	add	x1, sp, #0xb8
    9c7c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9c80:	add	x0, x0, #0x970
    9c84:	bl	8fbc <GOMP_critical_name_end@@GOMP_1.0+0x10c>
    9c88:	and	w0, w0, #0xff
    9c8c:	cbz	w0, 9cac <GOMP_critical_name_end@@GOMP_1.0+0xdfc>
    9c90:	ldr	x0, [sp, #184]
    9c94:	mov	x1, #0x7fffffff            	// #2147483647
    9c98:	cmp	x0, x1
    9c9c:	mov	x1, #0xffffffff            	// #4294967295
    9ca0:	csel	x0, x0, x1, ls  // ls = plast
    9ca4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9ca8:	str	w0, [x1, #716]
    9cac:	mov	w3, #0x1                   	// #1
    9cb0:	mov	w2, w3
    9cb4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9cb8:	add	x1, x1, #0x600
    9cbc:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9cc0:	add	x0, x0, #0x988
    9cc4:	bl	90c4 <GOMP_critical_name_end@@GOMP_1.0+0x214>
    9cc8:	bl	1b260 <omp_test_nest_lock@OMP_1.0+0x388>
    9ccc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9cd0:	add	x1, x0, #0x2b8
    9cd4:	ldr	x0, [x0, #696]
    9cd8:	str	x0, [x1, #48]
    9cdc:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9ce0:	add	x0, x0, #0x998
    9ce4:	bl	8ad0 <getenv@plt>
    9ce8:	mov	x20, x0
    9cec:	cbz	x0, 9d38 <GOMP_critical_name_end@@GOMP_1.0+0xe88>
    9cf0:	bl	88b0 <__ctype_b_loc@plt>
    9cf4:	mov	x19, x0
    9cf8:	ldr	x2, [x0]
    9cfc:	ldrb	w0, [x20]
    9d00:	and	x1, x0, #0xff
    9d04:	ldrh	w1, [x2, x1, lsl #1]
    9d08:	tbz	w1, #13, 9d14 <GOMP_critical_name_end@@GOMP_1.0+0xe64>
    9d0c:	add	x20, x20, #0x1
    9d10:	b	9cfc <GOMP_critical_name_end@@GOMP_1.0+0xe4c>
    9d14:	mov	x23, #0x0                   	// #0
    9d18:	cbnz	w0, 9d7c <GOMP_critical_name_end@@GOMP_1.0+0xecc>
    9d1c:	mov	x0, x23
    9d20:	bl	8900 <free@plt>
    9d24:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9d28:	add	x1, x1, #0x998
    9d2c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9d30:	add	x0, x0, #0x7a8
    9d34:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9d38:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9d3c:	add	x1, x0, #0x2b8
    9d40:	ldr	x1, [x1, #48]
    9d44:	str	x1, [x0, #696]
    9d48:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9d4c:	add	x0, x0, #0x9e8
    9d50:	bl	8ad0 <getenv@plt>
    9d54:	mov	x21, x0
    9d58:	cbz	x0, a148 <GOMP_critical_name_end@@GOMP_1.0+0x1298>
    9d5c:	bl	88b0 <__ctype_b_loc@plt>
    9d60:	ldr	x19, [x0]
    9d64:	ldrb	w1, [x21]
    9d68:	and	x0, x1, #0xff
    9d6c:	ldrh	w0, [x19, x0, lsl #1]
    9d70:	tbz	w0, #13, 9f50 <GOMP_critical_name_end@@GOMP_1.0+0x10a0>
    9d74:	add	x21, x21, #0x1
    9d78:	b	9d64 <GOMP_critical_name_end@@GOMP_1.0+0xeb4>
    9d7c:	bl	8ac0 <__errno_location@plt>
    9d80:	mov	x22, x0
    9d84:	str	wzr, [x0]
    9d88:	mov	w2, #0xa                   	// #10
    9d8c:	add	x1, sp, #0xa8
    9d90:	mov	x0, x20
    9d94:	bl	85e0 <strtoul@plt>
    9d98:	mov	x20, x0
    9d9c:	ldr	w0, [x22]
    9da0:	cbnz	w0, 9f38 <GOMP_critical_name_end@@GOMP_1.0+0x1088>
    9da4:	cmp	x20, #0x0
    9da8:	b.le	9f40 <GOMP_critical_name_end@@GOMP_1.0+0x1090>
    9dac:	ldr	x3, [x19]
    9db0:	ldr	x0, [sp, #168]
    9db4:	ldrb	w1, [x0]
    9db8:	ldrb	w2, [x0]
    9dbc:	ldrh	w2, [x3, x2, lsl #1]
    9dc0:	tbz	w2, #13, 9ddc <GOMP_critical_name_end@@GOMP_1.0+0xf2c>
    9dc4:	add	x0, x0, #0x1
    9dc8:	str	x0, [sp, #168]
    9dcc:	ldrb	w1, [x0], #1
    9dd0:	and	x2, x1, #0xff
    9dd4:	ldrh	w2, [x3, x2, lsl #1]
    9dd8:	tbnz	w2, #13, 9dc8 <GOMP_critical_name_end@@GOMP_1.0+0xf18>
    9ddc:	cbz	w1, 9f2c <GOMP_critical_name_end@@GOMP_1.0+0x107c>
    9de0:	cmp	w1, #0x2c
    9de4:	b.ne	9f48 <GOMP_critical_name_end@@GOMP_1.0+0x1098>  // b.any
    9de8:	mov	x26, #0x0                   	// #0
    9dec:	mov	x24, #0x0                   	// #0
    9df0:	mov	x23, #0x0                   	// #0
    9df4:	add	x28, sp, #0xa8
    9df8:	mov	w27, #0xa                   	// #10
    9dfc:	b	9eb8 <GOMP_critical_name_end@@GOMP_1.0+0x1008>
    9e00:	mov	x1, #0x80                  	// #128
    9e04:	mov	x0, x23
    9e08:	bl	8810 <realloc@plt>
    9e0c:	cbz	x0, 9eec <GOMP_critical_name_end@@GOMP_1.0+0x103c>
    9e10:	str	x20, [x0]
    9e14:	mov	x23, x0
    9e18:	mov	x26, #0x10                  	// #16
    9e1c:	mov	x24, #0x1                   	// #1
    9e20:	ldr	x1, [x19]
    9e24:	ldrb	w0, [x25, #1]
    9e28:	ldrb	w2, [x25, #1]
    9e2c:	ldrh	w2, [x1, x2, lsl #1]
    9e30:	tbz	w2, #13, 9e44 <GOMP_critical_name_end@@GOMP_1.0+0xf94>
    9e34:	ldrb	w0, [x21, #1]!
    9e38:	and	x2, x0, #0xff
    9e3c:	ldrh	w2, [x1, x2, lsl #1]
    9e40:	tbnz	w2, #13, 9e34 <GOMP_critical_name_end@@GOMP_1.0+0xf84>
    9e44:	cbz	w0, 9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9e48:	str	wzr, [x22]
    9e4c:	mov	w2, w27
    9e50:	mov	x1, x28
    9e54:	mov	x0, x21
    9e58:	bl	85e0 <strtoul@plt>
    9e5c:	mov	x20, x0
    9e60:	ldr	w0, [x22]
    9e64:	cbnz	w0, 9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9e68:	cmp	x20, #0x0
    9e6c:	b.le	9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9e70:	add	x4, x24, #0x1
    9e74:	str	x20, [x23, x24, lsl #3]
    9e78:	ldr	x3, [x19]
    9e7c:	ldr	x0, [sp, #168]
    9e80:	ldrb	w1, [x0]
    9e84:	ldrb	w2, [x0]
    9e88:	ldrh	w2, [x3, x2, lsl #1]
    9e8c:	tbz	w2, #13, 9ea8 <GOMP_critical_name_end@@GOMP_1.0+0xff8>
    9e90:	add	x0, x0, #0x1
    9e94:	str	x0, [sp, #168]
    9e98:	ldrb	w1, [x0], #1
    9e9c:	and	x2, x1, #0xff
    9ea0:	ldrh	w2, [x3, x2, lsl #1]
    9ea4:	tbnz	w2, #13, 9e94 <GOMP_critical_name_end@@GOMP_1.0+0xfe4>
    9ea8:	cbz	w1, 9f0c <GOMP_critical_name_end@@GOMP_1.0+0x105c>
    9eac:	cmp	w1, #0x2c
    9eb0:	b.ne	9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>  // b.any
    9eb4:	mov	x24, x4
    9eb8:	ldr	x25, [sp, #168]
    9ebc:	add	x21, x25, #0x1
    9ec0:	cmp	x24, x26
    9ec4:	b.ne	9e20 <GOMP_critical_name_end@@GOMP_1.0+0xf70>  // b.any
    9ec8:	cbz	x26, 9e00 <GOMP_critical_name_end@@GOMP_1.0+0xf50>
    9ecc:	lsl	x20, x26, #1
    9ed0:	lsl	x1, x26, #4
    9ed4:	mov	x0, x23
    9ed8:	bl	8810 <realloc@plt>
    9edc:	cbz	x0, 9eec <GOMP_critical_name_end@@GOMP_1.0+0x103c>
    9ee0:	mov	x26, x20
    9ee4:	mov	x23, x0
    9ee8:	b	9e20 <GOMP_critical_name_end@@GOMP_1.0+0xf70>
    9eec:	mov	x0, x23
    9ef0:	bl	8900 <free@plt>
    9ef4:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9ef8:	add	x1, x1, #0x998
    9efc:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    9f00:	add	x0, x0, #0x9a8
    9f04:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    9f08:	b	9d38 <GOMP_critical_name_end@@GOMP_1.0+0xe88>
    9f0c:	ldr	x1, [x23]
    9f10:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f14:	str	x1, [x0, #696]
    9f18:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f1c:	str	x23, [x0, #1504]
    9f20:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f24:	str	x4, [x0, #1624]
    9f28:	b	9d48 <GOMP_critical_name_end@@GOMP_1.0+0xe98>
    9f2c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f30:	str	x20, [x0, #696]
    9f34:	b	9d48 <GOMP_critical_name_end@@GOMP_1.0+0xe98>
    9f38:	mov	x23, #0x0                   	// #0
    9f3c:	b	9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9f40:	mov	x23, #0x0                   	// #0
    9f44:	b	9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9f48:	mov	x23, #0x0                   	// #0
    9f4c:	b	9d1c <GOMP_critical_name_end@@GOMP_1.0+0xe6c>
    9f50:	cbz	w1, a1cc <GOMP_critical_name_end@@GOMP_1.0+0x131c>
    9f54:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f58:	add	x20, x20, #0x2b8
    9f5c:	add	x20, x20, #0x38
    9f60:	mov	w22, #0x0                   	// #0
    9f64:	ldrb	w23, [x20, #7]
    9f68:	mov	x2, x23
    9f6c:	mov	x1, x20
    9f70:	mov	x0, x21
    9f74:	bl	8940 <strncasecmp@plt>
    9f78:	cbz	w0, 9f94 <GOMP_critical_name_end@@GOMP_1.0+0x10e4>
    9f7c:	add	w22, w22, #0x1
    9f80:	add	x20, x20, #0xc
    9f84:	cmp	w22, #0x5
    9f88:	b.ne	9f64 <GOMP_critical_name_end@@GOMP_1.0+0x10b4>  // b.any
    9f8c:	mov	x25, #0x0                   	// #0
    9f90:	b	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>
    9f94:	sxtw	x0, w22
    9f98:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    9f9c:	add	x1, x1, #0x2b8
    9fa0:	mov	x2, #0xc                   	// #12
    9fa4:	madd	x0, x0, x2, x1
    9fa8:	ldrb	w26, [x0, #64]
    9fac:	add	x20, x21, x23
    9fb0:	cmp	w22, #0x5
    9fb4:	b.eq	a1d4 <GOMP_critical_name_end@@GOMP_1.0+0x1324>  // b.none
    9fb8:	ldrb	w1, [x21, x23]
    9fbc:	ldrb	w0, [x21, x23]
    9fc0:	ldrh	w0, [x19, x0, lsl #1]
    9fc4:	tbz	w0, #13, 9fd8 <GOMP_critical_name_end@@GOMP_1.0+0x1128>
    9fc8:	ldrb	w1, [x20, #1]!
    9fcc:	and	x0, x1, #0xff
    9fd0:	ldrh	w0, [x19, x0, lsl #1]
    9fd4:	tbnz	w0, #13, 9fc8 <GOMP_critical_name_end@@GOMP_1.0+0x1118>
    9fd8:	cbz	w1, a170 <GOMP_critical_name_end@@GOMP_1.0+0x12c0>
    9fdc:	cmp	w1, #0x2c
    9fe0:	ccmp	w26, #0x1, #0x0, eq  // eq = none
    9fe4:	b.hi	9ff0 <GOMP_critical_name_end@@GOMP_1.0+0x1140>  // b.pmore
    9fe8:	mov	x25, #0x0                   	// #0
    9fec:	b	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>
    9ff0:	mov	x27, #0x0                   	// #0
    9ff4:	mov	x21, #0x0                   	// #0
    9ff8:	mov	x25, #0x0                   	// #0
    9ffc:	adrp	x28, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a000:	add	x28, x28, #0x2b8
    a004:	add	x0, x28, #0x38
    a008:	str	x0, [sp, #96]
    a00c:	b	a0c8 <GOMP_critical_name_end@@GOMP_1.0+0x1218>
    a010:	cbz	x27, a030 <GOMP_critical_name_end@@GOMP_1.0+0x1180>
    a014:	lsl	x27, x27, #1
    a018:	mov	x1, x27
    a01c:	mov	x0, x25
    a020:	bl	8810 <realloc@plt>
    a024:	cbz	x0, a054 <GOMP_critical_name_end@@GOMP_1.0+0x11a4>
    a028:	mov	x25, x0
    a02c:	b	a0d8 <GOMP_critical_name_end@@GOMP_1.0+0x1228>
    a030:	mov	x1, #0x10                  	// #16
    a034:	mov	x0, x25
    a038:	bl	8810 <realloc@plt>
    a03c:	cbz	x0, a054 <GOMP_critical_name_end@@GOMP_1.0+0x11a4>
    a040:	strb	w26, [x0]
    a044:	mov	x25, x0
    a048:	mov	x27, #0x10                  	// #16
    a04c:	mov	x24, #0x1                   	// #1
    a050:	b	a0d8 <GOMP_critical_name_end@@GOMP_1.0+0x1228>
    a054:	mov	x0, x25
    a058:	bl	8900 <free@plt>
    a05c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a060:	add	x1, x1, #0x9e8
    a064:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a068:	add	x0, x0, #0x9a8
    a06c:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a070:	b	a148 <GOMP_critical_name_end@@GOMP_1.0+0x1298>
    a074:	sbfiz	x0, x21, #1, #32
    a078:	add	x0, x0, w21, sxtw
    a07c:	ldr	x1, [sp, #96]
    a080:	add	x0, x1, x0, lsl #2
    a084:	ldrb	w26, [x0, #8]
    a088:	add	x20, x22, x23
    a08c:	cmp	w21, #0x5
    a090:	b.eq	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>  // b.none
    a094:	add	x21, x24, #0x1
    a098:	strb	w26, [x25, x24]
    a09c:	ldrb	w0, [x22, x23]
    a0a0:	and	x1, x0, #0xff
    a0a4:	ldrh	w1, [x19, x1, lsl #1]
    a0a8:	tbz	w1, #13, a0bc <GOMP_critical_name_end@@GOMP_1.0+0x120c>
    a0ac:	ldrb	w0, [x20, #1]!
    a0b0:	and	x1, x0, #0xff
    a0b4:	ldrh	w1, [x19, x1, lsl #1]
    a0b8:	tbnz	w1, #13, a0ac <GOMP_critical_name_end@@GOMP_1.0+0x11fc>
    a0bc:	cbz	w0, a150 <GOMP_critical_name_end@@GOMP_1.0+0x12a0>
    a0c0:	cmp	w0, #0x2c
    a0c4:	b.ne	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>  // b.any
    a0c8:	add	x22, x20, #0x1
    a0cc:	mov	x24, x21
    a0d0:	cmp	x21, x27
    a0d4:	b.eq	a010 <GOMP_critical_name_end@@GOMP_1.0+0x1160>  // b.none
    a0d8:	ldrb	w0, [x20, #1]
    a0dc:	and	x1, x0, #0xff
    a0e0:	ldrh	w1, [x19, x1, lsl #1]
    a0e4:	tbz	w1, #13, a0f8 <GOMP_critical_name_end@@GOMP_1.0+0x1248>
    a0e8:	ldrb	w0, [x22, #1]!
    a0ec:	and	x1, x0, #0xff
    a0f0:	ldrh	w1, [x19, x1, lsl #1]
    a0f4:	tbnz	w1, #13, a0e8 <GOMP_critical_name_end@@GOMP_1.0+0x1238>
    a0f8:	cbz	w0, a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>
    a0fc:	add	x20, x28, #0x50
    a100:	mov	w21, #0x2                   	// #2
    a104:	ldrb	w23, [x20, #7]
    a108:	mov	x2, x23
    a10c:	mov	x1, x20
    a110:	mov	x0, x22
    a114:	bl	8940 <strncasecmp@plt>
    a118:	cbz	w0, a074 <GOMP_critical_name_end@@GOMP_1.0+0x11c4>
    a11c:	add	w21, w21, #0x1
    a120:	add	x20, x20, #0xc
    a124:	cmp	w21, #0x5
    a128:	b.ne	a104 <GOMP_critical_name_end@@GOMP_1.0+0x1254>  // b.any
    a12c:	mov	x0, x25
    a130:	bl	8900 <free@plt>
    a134:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a138:	add	x1, x1, #0x9e8
    a13c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a140:	add	x0, x0, #0x7a8
    a144:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a148:	str	wzr, [sp, #108]
    a14c:	b	a18c <GOMP_critical_name_end@@GOMP_1.0+0x12dc>
    a150:	ldrb	w1, [x25]
    a154:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a158:	strb	w1, [x0, #722]
    a15c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a160:	str	x25, [x0, #1544]
    a164:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a168:	str	x21, [x0, #1528]
    a16c:	b	a178 <GOMP_critical_name_end@@GOMP_1.0+0x12c8>
    a170:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a174:	strb	w26, [x0, #722]
    a178:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a17c:	ldrb	w0, [x0, #722]
    a180:	cmp	w0, #0x0
    a184:	cset	w0, eq  // eq = none
    a188:	str	w0, [sp, #108]
    a18c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a190:	add	x0, x0, #0x9f8
    a194:	bl	8ad0 <getenv@plt>
    a198:	str	x0, [sp, #144]
    a19c:	cbz	x0, a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a1a0:	bl	88b0 <__ctype_b_loc@plt>
    a1a4:	mov	x21, x0
    a1a8:	ldr	x20, [x0]
    a1ac:	ldr	x19, [sp, #144]
    a1b0:	ldrb	w1, [x19]
    a1b4:	and	x0, x1, #0xff
    a1b8:	ldrh	w0, [x20, x0, lsl #1]
    a1bc:	tbz	w0, #13, a1dc <GOMP_critical_name_end@@GOMP_1.0+0x132c>
    a1c0:	add	x19, x19, #0x1
    a1c4:	str	x19, [sp, #144]
    a1c8:	b	a1ac <GOMP_critical_name_end@@GOMP_1.0+0x12fc>
    a1cc:	mov	x25, #0x0                   	// #0
    a1d0:	b	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>
    a1d4:	mov	x25, #0x0                   	// #0
    a1d8:	b	a12c <GOMP_critical_name_end@@GOMP_1.0+0x127c>
    a1dc:	cbz	w1, a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a1e0:	mov	x2, #0x7                   	// #7
    a1e4:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a1e8:	add	x1, x1, #0xa08
    a1ec:	mov	x0, x19
    a1f0:	bl	8940 <strncasecmp@plt>
    a1f4:	cbnz	w0, a304 <GOMP_critical_name_end@@GOMP_1.0+0x1454>
    a1f8:	add	x19, x19, #0x7
    a1fc:	str	x19, [sp, #144]
    a200:	mov	w19, #0x1                   	// #1
    a204:	ldr	x1, [sp, #144]
    a208:	mov	x2, x1
    a20c:	ldrb	w3, [x2], #1
    a210:	and	x0, x3, #0xff
    a214:	ldrh	w0, [x20, x0, lsl #1]
    a218:	tbz	w0, #13, a234 <GOMP_critical_name_end@@GOMP_1.0+0x1384>
    a21c:	mov	x1, x2
    a220:	str	x2, [sp, #144]
    a224:	ldrb	w3, [x2], #1
    a228:	and	x0, x3, #0xff
    a22c:	ldrh	w0, [x20, x0, lsl #1]
    a230:	tbnz	w0, #13, a21c <GOMP_critical_name_end@@GOMP_1.0+0x136c>
    a234:	cbz	w3, a3dc <GOMP_critical_name_end@@GOMP_1.0+0x152c>
    a238:	add	x22, x1, #0x1
    a23c:	str	x22, [sp, #144]
    a240:	ldrb	w0, [x1]
    a244:	cmp	w0, #0x28
    a248:	b.ne	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>  // b.any
    a24c:	ldrb	w0, [x1, #1]
    a250:	ldrh	w0, [x20, x0, lsl #1]
    a254:	tbz	w0, #13, a274 <GOMP_critical_name_end@@GOMP_1.0+0x13c4>
    a258:	add	x1, x1, #0x2
    a25c:	mov	x22, x1
    a260:	str	x1, [sp, #144]
    a264:	add	x1, x1, #0x1
    a268:	ldrb	w0, [x22]
    a26c:	ldrh	w0, [x20, x0, lsl #1]
    a270:	tbnz	w0, #13, a25c <GOMP_critical_name_end@@GOMP_1.0+0x13ac>
    a274:	bl	8ac0 <__errno_location@plt>
    a278:	mov	x20, x0
    a27c:	str	wzr, [x0]
    a280:	mov	w2, #0xa                   	// #10
    a284:	add	x1, sp, #0x98
    a288:	mov	x0, x22
    a28c:	bl	85e0 <strtoul@plt>
    a290:	mov	x1, x0
    a294:	ldr	w0, [x20]
    a298:	cbnz	w0, a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a29c:	ldr	x6, [sp, #152]
    a2a0:	str	x6, [sp, #144]
    a2a4:	ldr	x5, [x21]
    a2a8:	ldrb	w3, [x6]
    a2ac:	ldrb	w0, [x6]
    a2b0:	ldrh	w0, [x5, x0, lsl #1]
    a2b4:	tbz	w0, #13, a2d4 <GOMP_critical_name_end@@GOMP_1.0+0x1424>
    a2b8:	add	x2, x6, #0x1
    a2bc:	mov	x6, x2
    a2c0:	str	x2, [sp, #144]
    a2c4:	ldrb	w3, [x2], #1
    a2c8:	and	x4, x3, #0xff
    a2cc:	ldrh	w4, [x5, x4, lsl #1]
    a2d0:	tbnz	w4, #13, a2bc <GOMP_critical_name_end@@GOMP_1.0+0x140c>
    a2d4:	cmp	w3, #0x29
    a2d8:	b.ne	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>  // b.any
    a2dc:	add	x6, x6, #0x1
    a2e0:	str	x6, [sp, #144]
    a2e4:	ldr	x2, [sp, #144]
    a2e8:	ldrb	w3, [x2]
    a2ec:	ldrb	w0, [x2]
    a2f0:	ldrh	w0, [x5, x0, lsl #1]
    a2f4:	tbz	w0, #13, a374 <GOMP_critical_name_end@@GOMP_1.0+0x14c4>
    a2f8:	add	x2, x2, #0x1
    a2fc:	str	x2, [sp, #144]
    a300:	b	a2e4 <GOMP_critical_name_end@@GOMP_1.0+0x1434>
    a304:	mov	x2, #0x5                   	// #5
    a308:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a30c:	add	x1, x1, #0xa10
    a310:	mov	x0, x19
    a314:	bl	8940 <strncasecmp@plt>
    a318:	cbnz	w0, a32c <GOMP_critical_name_end@@GOMP_1.0+0x147c>
    a31c:	add	x19, x19, #0x5
    a320:	str	x19, [sp, #144]
    a324:	mov	w19, #0x2                   	// #2
    a328:	b	a204 <GOMP_critical_name_end@@GOMP_1.0+0x1354>
    a32c:	mov	x2, #0x7                   	// #7
    a330:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a334:	add	x1, x1, #0xa18
    a338:	mov	x0, x19
    a33c:	bl	8940 <strncasecmp@plt>
    a340:	cbnz	w0, a354 <GOMP_critical_name_end@@GOMP_1.0+0x14a4>
    a344:	add	x19, x19, #0x7
    a348:	str	x19, [sp, #144]
    a34c:	mov	w19, #0x3                   	// #3
    a350:	b	a204 <GOMP_critical_name_end@@GOMP_1.0+0x1354>
    a354:	str	x19, [sp, #152]
    a358:	mov	x19, #0x0                   	// #0
    a35c:	mov	w24, #0x0                   	// #0
    a360:	add	x23, sp, #0xa8
    a364:	add	x22, sp, #0xa0
    a368:	add	x21, sp, #0x8f
    a36c:	add	x20, sp, #0x98
    a370:	b	a450 <GOMP_critical_name_end@@GOMP_1.0+0x15a0>
    a374:	cbz	w3, a3e0 <GOMP_critical_name_end@@GOMP_1.0+0x1530>
    a378:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a37c:	ldr	x0, [x19, #1568]
    a380:	bl	8900 <free@plt>
    a384:	str	xzr, [x19, #1568]
    a388:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a38c:	str	xzr, [x0, #1608]
    a390:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a394:	add	x1, x1, #0x9f8
    a398:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a39c:	add	x0, x0, #0x7a8
    a3a0:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a3a4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a3a8:	add	x0, x0, #0xa80
    a3ac:	bl	8ad0 <getenv@plt>
    a3b0:	str	x0, [sp, #120]
    a3b4:	cbz	x0, a858 <GOMP_critical_name_end@@GOMP_1.0+0x19a8>
    a3b8:	bl	88b0 <__ctype_b_loc@plt>
    a3bc:	mov	x23, x0
    a3c0:	str	xzr, [sp, #96]
    a3c4:	mov	w26, #0x0                   	// #0
    a3c8:	mov	x27, #0xffff                	// #65535
    a3cc:	adrp	x24, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a3d0:	add	x25, sp, #0xa8
    a3d4:	ldr	x19, [sp, #120]
    a3d8:	b	a658 <GOMP_critical_name_end@@GOMP_1.0+0x17a8>
    a3dc:	mov	x1, #0xffffffffffffffff    	// #-1
    a3e0:	ldr	w0, [sp, #108]
    a3e4:	cbnz	w0, a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a3e8:	mov	w2, #0x0                   	// #0
    a3ec:	mov	w0, w19
    a3f0:	bl	1d604 <omp_pause_resource_all_@@OMP_5.0+0x8e0>
    a3f4:	ands	w0, w0, #0xff
    a3f8:	str	w0, [sp, #108]
    a3fc:	b.eq	a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>  // b.none
    a400:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a404:	ldrb	w0, [x0, #722]
    a408:	cbnz	w0, a648 <GOMP_critical_name_end@@GOMP_1.0+0x1798>
    a40c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a410:	mov	w1, #0x1                   	// #1
    a414:	strb	w1, [x0, #722]
    a418:	mov	w0, #0x1                   	// #1
    a41c:	str	w0, [sp, #108]
    a420:	b	a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a424:	ldr	x0, [sp, #160]
    a428:	add	x19, x19, x0
    a42c:	cmp	x19, #0x10, lsl #12
    a430:	b.hi	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>  // b.pmore
    a434:	ldr	x0, [sp, #152]
    a438:	ldrb	w1, [x0]
    a43c:	cbz	w1, a484 <GOMP_critical_name_end@@GOMP_1.0+0x15d4>
    a440:	cmp	w1, #0x2c
    a444:	b.ne	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>  // b.any
    a448:	add	x0, x0, #0x1
    a44c:	str	x0, [sp, #152]
    a450:	mov	x3, x23
    a454:	mov	x2, x22
    a458:	mov	x1, x21
    a45c:	mov	x0, x20
    a460:	bl	9120 <GOMP_critical_name_end@@GOMP_1.0+0x270>
    a464:	and	w0, w0, #0xff
    a468:	cbz	w0, a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a46c:	ldrb	w0, [sp, #143]
    a470:	cbz	w0, a424 <GOMP_critical_name_end@@GOMP_1.0+0x1574>
    a474:	cbnz	w24, a42c <GOMP_critical_name_end@@GOMP_1.0+0x157c>
    a478:	add	x19, x19, #0x1
    a47c:	mov	w24, w0
    a480:	b	a42c <GOMP_critical_name_end@@GOMP_1.0+0x157c>
    a484:	ldr	w0, [sp, #108]
    a488:	cbnz	w0, a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a48c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a490:	str	xzr, [x0, #1608]
    a494:	mov	w1, #0x0                   	// #0
    a498:	mov	x0, x19
    a49c:	bl	1cd64 <omp_pause_resource_all_@@OMP_5.0+0x40>
    a4a0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a4a4:	str	x0, [x1, #1568]
    a4a8:	cbz	x0, a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a4ac:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a4b0:	add	x25, sp, #0xa8
    a4b4:	add	x24, sp, #0xa0
    a4b8:	add	x23, sp, #0x8f
    a4bc:	add	x22, sp, #0x90
    a4c0:	b	a558 <GOMP_critical_name_end@@GOMP_1.0+0x16a8>
    a4c4:	mov	x19, #0x0                   	// #0
    a4c8:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a4cc:	ldr	x0, [x20, #1608]
    a4d0:	cmp	x19, x0
    a4d4:	b.cs	a4f8 <GOMP_critical_name_end@@GOMP_1.0+0x1648>  // b.hs, b.nlast
    a4d8:	ldr	x2, [x21, #1568]
    a4dc:	ldr	x1, [x2, x0, lsl #3]
    a4e0:	ldr	x0, [x2, x19, lsl #3]
    a4e4:	bl	1d4a4 <omp_pause_resource_all_@@OMP_5.0+0x780>
    a4e8:	and	w0, w0, #0xff
    a4ec:	cbnz	w0, a4f8 <GOMP_critical_name_end@@GOMP_1.0+0x1648>
    a4f0:	add	x19, x19, #0x1
    a4f4:	b	a4cc <GOMP_critical_name_end@@GOMP_1.0+0x161c>
    a4f8:	ldr	x1, [x20, #1608]
    a4fc:	cmp	x19, x1
    a500:	b.eq	a5ac <GOMP_critical_name_end@@GOMP_1.0+0x16fc>  // b.none
    a504:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a508:	ldr	x0, [x21, #1568]
    a50c:	lsl	x3, x19, #3
    a510:	ldr	x26, [x0, x3]
    a514:	sub	x1, x1, #0x1
    a518:	sub	x2, x1, x19
    a51c:	add	x1, x3, #0x8
    a520:	lsl	x2, x2, #3
    a524:	add	x1, x0, x1
    a528:	add	x0, x0, x19, lsl #3
    a52c:	bl	85d0 <memmove@plt>
    a530:	ldr	x0, [x20, #1608]
    a534:	sub	x0, x0, #0x1
    a538:	str	x0, [x20, #1608]
    a53c:	ldr	x1, [x21, #1568]
    a540:	str	x26, [x1, x0, lsl #3]
    a544:	ldr	x0, [sp, #144]
    a548:	ldrb	w1, [x0]
    a54c:	cbz	w1, a618 <GOMP_critical_name_end@@GOMP_1.0+0x1768>
    a550:	add	x0, x0, #0x1
    a554:	str	x0, [sp, #144]
    a558:	ldr	x1, [x20, #1608]
    a55c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a560:	ldr	x0, [x0, #1568]
    a564:	ldr	x0, [x0, x1, lsl #3]
    a568:	bl	1ce04 <omp_pause_resource_all_@@OMP_5.0+0xe0>
    a56c:	mov	x3, x25
    a570:	mov	x2, x24
    a574:	mov	x1, x23
    a578:	mov	x0, x22
    a57c:	bl	9120 <GOMP_critical_name_end@@GOMP_1.0+0x270>
    a580:	and	w0, w0, #0xff
    a584:	cbz	w0, a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a588:	ldrb	w0, [sp, #143]
    a58c:	cbnz	w0, a4c4 <GOMP_critical_name_end@@GOMP_1.0+0x1614>
    a590:	ldr	x0, [sp, #160]
    a594:	cmp	x0, #0x1
    a598:	b.ne	a5fc <GOMP_critical_name_end@@GOMP_1.0+0x174c>  // b.any
    a59c:	ldr	x0, [x20, #1608]
    a5a0:	add	x0, x0, #0x1
    a5a4:	str	x0, [x20, #1608]
    a5a8:	b	a544 <GOMP_critical_name_end@@GOMP_1.0+0x1694>
    a5ac:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a5b0:	add	x0, x0, #0xa20
    a5b4:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a5b8:	b	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a5bc:	add	x19, x19, #0x1
    a5c0:	ldr	x0, [sp, #160]
    a5c4:	sub	x1, x0, #0x1
    a5c8:	cmp	x19, x1
    a5cc:	b.cs	a608 <GOMP_critical_name_end@@GOMP_1.0+0x1758>  // b.hs, b.nlast
    a5d0:	ldr	x3, [x21, #1568]
    a5d4:	ldr	x0, [x20, #1608]
    a5d8:	add	x0, x19, x0
    a5dc:	add	x4, x0, #0x1
    a5e0:	ldr	x2, [sp, #168]
    a5e4:	ldr	x1, [x3, x0, lsl #3]
    a5e8:	ldr	x0, [x3, x4, lsl #3]
    a5ec:	bl	1d3b0 <omp_pause_resource_all_@@OMP_5.0+0x68c>
    a5f0:	and	w0, w0, #0xff
    a5f4:	cbnz	w0, a5bc <GOMP_critical_name_end@@GOMP_1.0+0x170c>
    a5f8:	b	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a5fc:	mov	x19, #0x0                   	// #0
    a600:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a604:	b	a5c0 <GOMP_critical_name_end@@GOMP_1.0+0x1710>
    a608:	ldr	x1, [x20, #1608]
    a60c:	add	x0, x1, x0
    a610:	str	x0, [x20, #1608]
    a614:	b	a544 <GOMP_critical_name_end@@GOMP_1.0+0x1694>
    a618:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a61c:	ldr	x0, [x0, #1608]
    a620:	cbz	x0, a638 <GOMP_critical_name_end@@GOMP_1.0+0x1788>
    a624:	mov	w0, #0x0                   	// #0
    a628:	bl	1d4c8 <omp_pause_resource_all_@@OMP_5.0+0x7a4>
    a62c:	and	w0, w0, #0xff
    a630:	cbnz	w0, a400 <GOMP_critical_name_end@@GOMP_1.0+0x1550>
    a634:	b	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a638:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a63c:	add	x0, x0, #0xa60
    a640:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a644:	b	a378 <GOMP_critical_name_end@@GOMP_1.0+0x14c8>
    a648:	mov	w0, #0x1                   	// #1
    a64c:	str	w0, [sp, #108]
    a650:	b	a3a4 <GOMP_critical_name_end@@GOMP_1.0+0x14f4>
    a654:	add	x19, x19, #0x1
    a658:	ldrb	w1, [x19]
    a65c:	ldr	x0, [x23]
    a660:	ldrh	w0, [x0, x1, lsl #1]
    a664:	tbnz	w0, #13, a654 <GOMP_critical_name_end@@GOMP_1.0+0x17a4>
    a668:	bl	8ac0 <__errno_location@plt>
    a66c:	mov	x28, x0
    a670:	str	wzr, [x0]
    a674:	mov	w2, #0x0                   	// #0
    a678:	mov	x1, x25
    a67c:	mov	x0, x19
    a680:	bl	85e0 <strtoul@plt>
    a684:	mov	x21, x0
    a688:	ldr	w0, [x28]
    a68c:	cmp	w0, #0x0
    a690:	ccmp	x21, x27, #0x2, eq  // eq = none
    a694:	b.hi	a84c <GOMP_critical_name_end@@GOMP_1.0+0x199c>  // b.pmore
    a698:	ldr	x19, [sp, #168]
    a69c:	ldrb	w0, [x19]
    a6a0:	cmp	w0, #0x2d
    a6a4:	b.eq	a730 <GOMP_critical_name_end@@GOMP_1.0+0x1880>  // b.none
    a6a8:	mov	x0, #0x1                   	// #1
    a6ac:	mov	x22, x0
    a6b0:	mov	x20, #0x0                   	// #0
    a6b4:	cbnz	w26, a780 <GOMP_critical_name_end@@GOMP_1.0+0x18d0>
    a6b8:	ldr	x1, [sp, #96]
    a6bc:	add	x0, x1, x0
    a6c0:	str	x0, [sp, #96]
    a6c4:	ldr	x1, [x23]
    a6c8:	ldrb	w0, [x19]
    a6cc:	and	x2, x0, #0xff
    a6d0:	ldrh	w2, [x1, x2, lsl #1]
    a6d4:	tbz	w2, #13, a6e8 <GOMP_critical_name_end@@GOMP_1.0+0x1838>
    a6d8:	ldrb	w0, [x19, #1]!
    a6dc:	and	x2, x0, #0xff
    a6e0:	ldrh	w2, [x1, x2, lsl #1]
    a6e4:	tbnz	w2, #13, a6d8 <GOMP_critical_name_end@@GOMP_1.0+0x1828>
    a6e8:	cmp	w0, #0x2c
    a6ec:	b.eq	a810 <GOMP_critical_name_end@@GOMP_1.0+0x1960>  // b.none
    a6f0:	cbnz	w0, a658 <GOMP_critical_name_end@@GOMP_1.0+0x17a8>
    a6f4:	add	w26, w26, #0x1
    a6f8:	cmp	w26, #0x2
    a6fc:	b.eq	a818 <GOMP_critical_name_end@@GOMP_1.0+0x1968>  // b.none
    a700:	cmp	w26, #0x1
    a704:	b.ne	a3d4 <GOMP_critical_name_end@@GOMP_1.0+0x1524>  // b.any
    a708:	ldr	w0, [sp, #108]
    a70c:	cbnz	w0, a858 <GOMP_critical_name_end@@GOMP_1.0+0x19a8>
    a710:	str	xzr, [x24, #1608]
    a714:	mov	w1, #0x1                   	// #1
    a718:	ldr	x0, [sp, #96]
    a71c:	bl	1cd64 <omp_pause_resource_all_@@OMP_5.0+0x40>
    a720:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a724:	str	x0, [x1, #1568]
    a728:	cbnz	x0, a3d4 <GOMP_critical_name_end@@GOMP_1.0+0x1524>
    a72c:	b	a858 <GOMP_critical_name_end@@GOMP_1.0+0x19a8>
    a730:	mov	w2, #0x0                   	// #0
    a734:	mov	x1, x25
    a738:	add	x0, x19, #0x1
    a73c:	bl	85e0 <strtoul@plt>
    a740:	mov	x20, x0
    a744:	ldr	w0, [x28]
    a748:	cbnz	w0, a84c <GOMP_critical_name_end@@GOMP_1.0+0x199c>
    a74c:	cmp	x20, x27
    a750:	ccmp	x21, x20, #0x2, ls  // ls = plast
    a754:	b.hi	a84c <GOMP_critical_name_end@@GOMP_1.0+0x199c>  // b.pmore
    a758:	ldr	x19, [sp, #168]
    a75c:	ldrb	w0, [x19]
    a760:	mov	x22, #0x1                   	// #1
    a764:	cmp	w0, #0x3a
    a768:	b.eq	a788 <GOMP_critical_name_end@@GOMP_1.0+0x18d8>  // b.none
    a76c:	sub	x20, x20, x21
    a770:	udiv	x20, x20, x22
    a774:	add	x0, x20, #0x1
    a778:	cbz	w26, a6b8 <GOMP_critical_name_end@@GOMP_1.0+0x1808>
    a77c:	cbz	x0, a6c4 <GOMP_critical_name_end@@GOMP_1.0+0x1814>
    a780:	adrp	x28, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a784:	b	a7d8 <GOMP_critical_name_end@@GOMP_1.0+0x1928>
    a788:	mov	w2, #0x0                   	// #0
    a78c:	mov	x1, x25
    a790:	add	x0, x19, x22
    a794:	bl	85e0 <strtoul@plt>
    a798:	mov	x22, x0
    a79c:	ldr	w0, [x28]
    a7a0:	cbnz	w0, a84c <GOMP_critical_name_end@@GOMP_1.0+0x199c>
    a7a4:	sub	x1, x22, #0x1
    a7a8:	mov	x0, #0xfffe                	// #65534
    a7ac:	cmp	x1, x0
    a7b0:	b.hi	a84c <GOMP_critical_name_end@@GOMP_1.0+0x199c>  // b.pmore
    a7b4:	ldr	x19, [sp, #168]
    a7b8:	b	a76c <GOMP_critical_name_end@@GOMP_1.0+0x18bc>
    a7bc:	ldr	x0, [x24, #1608]
    a7c0:	add	x0, x0, #0x1
    a7c4:	str	x0, [x24, #1608]
    a7c8:	add	x21, x21, x22
    a7cc:	sub	x20, x20, #0x1
    a7d0:	cmn	x20, #0x1
    a7d4:	b.eq	a6c4 <GOMP_critical_name_end@@GOMP_1.0+0x1814>  // b.none
    a7d8:	ldr	x1, [x24, #1608]
    a7dc:	ldr	x0, [x28, #1568]
    a7e0:	ldr	x0, [x0, x1, lsl #3]
    a7e4:	str	x0, [sp, #112]
    a7e8:	bl	1ce04 <omp_pause_resource_all_@@OMP_5.0+0xe0>
    a7ec:	mov	w4, #0x1                   	// #1
    a7f0:	mov	x3, #0x0                   	// #0
    a7f4:	mov	x2, #0x1                   	// #1
    a7f8:	mov	x1, x21
    a7fc:	ldr	x0, [sp, #112]
    a800:	bl	1ce24 <omp_pause_resource_all_@@OMP_5.0+0x100>
    a804:	and	w0, w0, #0xff
    a808:	cbz	w0, a7c8 <GOMP_critical_name_end@@GOMP_1.0+0x1918>
    a80c:	b	a7bc <GOMP_critical_name_end@@GOMP_1.0+0x190c>
    a810:	add	x19, x19, #0x1
    a814:	b	a658 <GOMP_critical_name_end@@GOMP_1.0+0x17a8>
    a818:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a81c:	ldr	x0, [x0, #1608]
    a820:	cbz	x0, a838 <GOMP_critical_name_end@@GOMP_1.0+0x1988>
    a824:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a828:	ldrb	w0, [x0, #722]
    a82c:	cbz	w0, a8a8 <GOMP_critical_name_end@@GOMP_1.0+0x19f8>
    a830:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
    a834:	b	a864 <GOMP_critical_name_end@@GOMP_1.0+0x19b4>
    a838:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a83c:	ldr	x0, [x19, #1568]
    a840:	bl	8900 <free@plt>
    a844:	str	xzr, [x19, #1568]
    a848:	b	a858 <GOMP_critical_name_end@@GOMP_1.0+0x19a8>
    a84c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a850:	add	x0, x0, #0xa98
    a854:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a858:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a85c:	ldrb	w0, [x0, #722]
    a860:	cbnz	w0, a830 <GOMP_critical_name_end@@GOMP_1.0+0x1980>
    a864:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a868:	add	x0, x0, #0xad0
    a86c:	bl	8ad0 <getenv@plt>
    a870:	mov	x19, x0
    a874:	cbz	x0, a888 <GOMP_critical_name_end@@GOMP_1.0+0x19d8>
    a878:	bl	85f0 <strlen@plt>
    a87c:	mov	x1, x0
    a880:	mov	x0, x19
    a884:	bl	27aa0 <acc_set_cuda_stream@@OACC_2.0+0x5ec>
    a888:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a88c:	add	x0, x0, #0xae8
    a890:	bl	8ad0 <getenv@plt>
    a894:	mov	x19, x0
    a898:	cbz	x0, a964 <GOMP_critical_name_end@@GOMP_1.0+0x1ab4>
    a89c:	bl	88b0 <__ctype_b_loc@plt>
    a8a0:	ldr	x21, [x0]
    a8a4:	b	a8bc <GOMP_critical_name_end@@GOMP_1.0+0x1a0c>
    a8a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    a8ac:	mov	w1, #0x1                   	// #1
    a8b0:	strb	w1, [x0, #722]
    a8b4:	b	a830 <GOMP_critical_name_end@@GOMP_1.0+0x1980>
    a8b8:	add	x19, x19, #0x1
    a8bc:	ldrb	w0, [x19]
    a8c0:	ldrh	w0, [x21, x0, lsl #1]
    a8c4:	tbnz	w0, #13, a8b8 <GOMP_critical_name_end@@GOMP_1.0+0x1a08>
    a8c8:	mov	x2, #0x6                   	// #6
    a8cc:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a8d0:	add	x1, x1, #0xaf8
    a8d4:	mov	x0, x19
    a8d8:	bl	8940 <strncasecmp@plt>
    a8dc:	cbnz	w0, a924 <GOMP_critical_name_end@@GOMP_1.0+0x1a74>
    a8e0:	add	x19, x19, #0x6
    a8e4:	mov	w20, #0x1                   	// #1
    a8e8:	ldrb	w0, [x19]
    a8ec:	and	x1, x0, #0xff
    a8f0:	ldrh	w1, [x21, x1, lsl #1]
    a8f4:	tbz	w1, #13, a908 <GOMP_critical_name_end@@GOMP_1.0+0x1a58>
    a8f8:	ldrb	w0, [x19, #1]!
    a8fc:	and	x1, x0, #0xff
    a900:	ldrh	w1, [x21, x1, lsl #1]
    a904:	tbnz	w1, #13, a8f8 <GOMP_critical_name_end@@GOMP_1.0+0x1a48>
    a908:	cbnz	w0, a958 <GOMP_critical_name_end@@GOMP_1.0+0x1aa8>
    a90c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a910:	add	x0, x0, #0xb40
    a914:	bl	8ad0 <getenv@plt>
    a918:	mov	x19, x0
    a91c:	cbnz	x0, a97c <GOMP_critical_name_end@@GOMP_1.0+0x1acc>
    a920:	b	ab20 <GOMP_critical_name_end@@GOMP_1.0+0x1c70>
    a924:	mov	x2, #0x7                   	// #7
    a928:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a92c:	add	x1, x1, #0xb00
    a930:	mov	x0, x19
    a934:	bl	8940 <strncasecmp@plt>
    a938:	mov	w20, w0
    a93c:	cbnz	w0, a948 <GOMP_critical_name_end@@GOMP_1.0+0x1a98>
    a940:	add	x19, x19, #0x7
    a944:	b	a8e8 <GOMP_critical_name_end@@GOMP_1.0+0x1a38>
    a948:	mov	w20, #0xffffffff            	// #-1
    a94c:	adrp	x19, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a950:	add	x19, x19, #0x790
    a954:	b	a8e8 <GOMP_critical_name_end@@GOMP_1.0+0x1a38>
    a958:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a95c:	add	x0, x0, #0xb08
    a960:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    a964:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a968:	add	x0, x0, #0xb40
    a96c:	bl	8ad0 <getenv@plt>
    a970:	mov	x19, x0
    a974:	cbz	x0, b598 <GOMP_critical_name_end@@GOMP_1.0+0x26e8>
    a978:	mov	w20, #0xffffffff            	// #-1
    a97c:	bl	88b0 <__ctype_b_loc@plt>
    a980:	mov	x21, x0
    a984:	ldr	x0, [x0]
    a988:	ldrb	w1, [x19]
    a98c:	and	x2, x1, #0xff
    a990:	ldrh	w2, [x0, x2, lsl #1]
    a994:	tbz	w2, #13, a9a0 <GOMP_critical_name_end@@GOMP_1.0+0x1af0>
    a998:	add	x19, x19, #0x1
    a99c:	b	a988 <GOMP_critical_name_end@@GOMP_1.0+0x1ad8>
    a9a0:	cbz	w1, ab0c <GOMP_critical_name_end@@GOMP_1.0+0x1c5c>
    a9a4:	mov	x2, #0x8                   	// #8
    a9a8:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a9ac:	add	x1, x1, #0xb50
    a9b0:	mov	x0, x19
    a9b4:	bl	8940 <strncasecmp@plt>
    a9b8:	cbz	w0, a9d4 <GOMP_critical_name_end@@GOMP_1.0+0x1b24>
    a9bc:	mov	x2, #0x8                   	// #8
    a9c0:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    a9c4:	add	x1, x1, #0xb60
    a9c8:	mov	x0, x19
    a9cc:	bl	8940 <strncasecmp@plt>
    a9d0:	cbnz	w0, aa24 <GOMP_critical_name_end@@GOMP_1.0+0x1b74>
    a9d4:	add	x19, x19, #0x8
    a9d8:	str	x19, [sp, #168]
    a9dc:	mov	x4, #0x1                   	// #1
    a9e0:	mov	x22, #0xffffffffffffffff    	// #-1
    a9e4:	ldr	x0, [x21]
    a9e8:	ldr	x1, [sp, #168]
    a9ec:	ldrb	w2, [x1], #1
    a9f0:	and	x3, x2, #0xff
    a9f4:	ldrh	w3, [x0, x3, lsl #1]
    a9f8:	tbz	w3, #13, aa10 <GOMP_critical_name_end@@GOMP_1.0+0x1b60>
    a9fc:	str	x1, [sp, #168]
    aa00:	ldrb	w2, [x1], #1
    aa04:	and	x3, x2, #0xff
    aa08:	ldrh	w3, [x0, x3, lsl #1]
    aa0c:	tbnz	w3, #13, a9fc <GOMP_critical_name_end@@GOMP_1.0+0x1b4c>
    aa10:	cbnz	w2, ab0c <GOMP_critical_name_end@@GOMP_1.0+0x1c5c>
    aa14:	umulh	x0, x22, x4
    aa18:	cbz	x0, aaf0 <GOMP_critical_name_end@@GOMP_1.0+0x1c40>
    aa1c:	mov	x22, #0xffffffffffffffff    	// #-1
    aa20:	b	aaf4 <GOMP_critical_name_end@@GOMP_1.0+0x1c44>
    aa24:	bl	8ac0 <__errno_location@plt>
    aa28:	mov	x23, x0
    aa2c:	str	wzr, [x0]
    aa30:	mov	w2, #0xa                   	// #10
    aa34:	add	x1, sp, #0xa8
    aa38:	mov	x0, x19
    aa3c:	bl	89c0 <strtoull@plt>
    aa40:	mov	x22, x0
    aa44:	ldr	w0, [x23]
    aa48:	cbnz	w0, ab0c <GOMP_critical_name_end@@GOMP_1.0+0x1c5c>
    aa4c:	ldr	x3, [x21]
    aa50:	ldr	x23, [sp, #168]
    aa54:	ldrb	w2, [x23]
    aa58:	ldrb	w19, [x23]
    aa5c:	ldrh	w0, [x3, x19, lsl #1]
    aa60:	tbz	w0, #13, aa80 <GOMP_critical_name_end@@GOMP_1.0+0x1bd0>
    aa64:	add	x1, x23, #0x1
    aa68:	mov	x23, x1
    aa6c:	str	x1, [sp, #168]
    aa70:	ldrb	w2, [x1], #1
    aa74:	and	x19, x2, #0xff
    aa78:	ldrh	w0, [x3, x19, lsl #1]
    aa7c:	tbnz	w0, #13, aa68 <GOMP_critical_name_end@@GOMP_1.0+0x1bb8>
    aa80:	cbz	w2, aaec <GOMP_critical_name_end@@GOMP_1.0+0x1c3c>
    aa84:	bl	86f0 <__ctype_tolower_loc@plt>
    aa88:	ldr	x0, [x0]
    aa8c:	ldr	w0, [x0, x19, lsl #2]
    aa90:	cmp	w0, #0x6d
    aa94:	b.eq	aad4 <GOMP_critical_name_end@@GOMP_1.0+0x1c24>  // b.none
    aa98:	b.gt	aabc <GOMP_critical_name_end@@GOMP_1.0+0x1c0c>
    aa9c:	cmp	w0, #0x67
    aaa0:	b.eq	aae0 <GOMP_critical_name_end@@GOMP_1.0+0x1c30>  // b.none
    aaa4:	mov	x4, #0x3e8                 	// #1000
    aaa8:	cmp	w0, #0x6b
    aaac:	b.ne	ab0c <GOMP_critical_name_end@@GOMP_1.0+0x1c5c>  // b.any
    aab0:	add	x23, x23, #0x1
    aab4:	str	x23, [sp, #168]
    aab8:	b	a9e4 <GOMP_critical_name_end@@GOMP_1.0+0x1b34>
    aabc:	cmp	w0, #0x74
    aac0:	b.ne	ab0c <GOMP_critical_name_end@@GOMP_1.0+0x1c5c>  // b.any
    aac4:	mov	x4, #0x1000                	// #4096
    aac8:	movk	x4, #0xd4a5, lsl #16
    aacc:	movk	x4, #0xe8, lsl #32
    aad0:	b	aab0 <GOMP_critical_name_end@@GOMP_1.0+0x1c00>
    aad4:	mov	x4, #0x4240                	// #16960
    aad8:	movk	x4, #0xf, lsl #16
    aadc:	b	aab0 <GOMP_critical_name_end@@GOMP_1.0+0x1c00>
    aae0:	mov	x4, #0xca00                	// #51712
    aae4:	movk	x4, #0x3b9a, lsl #16
    aae8:	b	aab0 <GOMP_critical_name_end@@GOMP_1.0+0x1c00>
    aaec:	mov	x4, #0x1                   	// #1
    aaf0:	mul	x22, x22, x4
    aaf4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    aaf8:	str	x22, [x0, #1584]
    aafc:	cmp	w20, #0x0
    ab00:	b.gt	ab3c <GOMP_critical_name_end@@GOMP_1.0+0x1c8c>
    ab04:	tbz	w20, #31, ab48 <GOMP_critical_name_end@@GOMP_1.0+0x1c98>
    ab08:	b	b5ac <GOMP_critical_name_end@@GOMP_1.0+0x26fc>
    ab0c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ab10:	add	x1, x1, #0xb40
    ab14:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ab18:	add	x0, x0, #0x7a8
    ab1c:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    ab20:	cmp	w20, #0x0
    ab24:	b.le	abf4 <GOMP_critical_name_end@@GOMP_1.0+0x1d44>
    ab28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab2c:	mov	x1, #0xac00                	// #44032
    ab30:	movk	x1, #0xfc23, lsl #16
    ab34:	movk	x1, #0x6, lsl #32
    ab38:	str	x1, [x0, #1584]
    ab3c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab40:	mov	x1, #0x3e8                 	// #1000
    ab44:	str	x1, [x0, #1600]
    ab48:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab4c:	ldr	x0, [x0, #1584]
    ab50:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab54:	ldr	x1, [x1, #1600]
    ab58:	cmp	x1, x0
    ab5c:	b.ls	ab68 <GOMP_critical_name_end@@GOMP_1.0+0x1cb8>  // b.plast
    ab60:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab64:	str	x0, [x1, #1600]
    ab68:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ab6c:	add	x0, x0, #0x660
    ab70:	bl	86a0 <pthread_attr_init@plt>
    ab74:	add	x1, sp, #0xb0
    ab78:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ab7c:	add	x0, x0, #0xb70
    ab80:	bl	9760 <GOMP_critical_name_end@@GOMP_1.0+0x8b0>
    ab84:	and	w0, w0, #0xff
    ab88:	cbnz	w0, aba4 <GOMP_critical_name_end@@GOMP_1.0+0x1cf4>
    ab8c:	add	x1, sp, #0xb0
    ab90:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ab94:	add	x0, x0, #0xb80
    ab98:	bl	9760 <GOMP_critical_name_end@@GOMP_1.0+0x8b0>
    ab9c:	and	w0, w0, #0xff
    aba0:	cbz	w0, abc0 <GOMP_critical_name_end@@GOMP_1.0+0x1d10>
    aba4:	ldr	x1, [sp, #176]
    aba8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    abac:	add	x0, x0, #0x660
    abb0:	bl	87d0 <pthread_attr_setstacksize@plt>
    abb4:	cmp	w0, #0x16
    abb8:	b.eq	abfc <GOMP_critical_name_end@@GOMP_1.0+0x1d4c>  // b.none
    abbc:	cbnz	w0, ac30 <GOMP_critical_name_end@@GOMP_1.0+0x1d80>
    abc0:	ldr	x21, [sp, #176]
    abc4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    abc8:	add	x0, x0, #0xc00
    abcc:	bl	8ad0 <getenv@plt>
    abd0:	mov	x19, x0
    abd4:	cbz	x0, ac94 <GOMP_critical_name_end@@GOMP_1.0+0x1de4>
    abd8:	bl	88b0 <__ctype_b_loc@plt>
    abdc:	ldr	x23, [x0]
    abe0:	ldrb	w0, [x19]
    abe4:	ldrh	w0, [x23, x0, lsl #1]
    abe8:	tbz	w0, #13, ac48 <GOMP_critical_name_end@@GOMP_1.0+0x1d98>
    abec:	add	x19, x19, #0x1
    abf0:	b	abe0 <GOMP_critical_name_end@@GOMP_1.0+0x1d30>
    abf4:	tbz	w20, #31, ab48 <GOMP_critical_name_end@@GOMP_1.0+0x1c98>
    abf8:	b	b59c <GOMP_critical_name_end@@GOMP_1.0+0x26ec>
    abfc:	ldr	x1, [sp, #176]
    ac00:	mov	x0, #0x1ffff               	// #131071
    ac04:	cmp	x1, x0
    ac08:	b.hi	ac20 <GOMP_critical_name_end@@GOMP_1.0+0x1d70>  // b.pmore
    ac0c:	mov	x1, #0x80                  	// #128
    ac10:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ac14:	add	x0, x0, #0xb90
    ac18:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    ac1c:	b	abc0 <GOMP_critical_name_end@@GOMP_1.0+0x1d10>
    ac20:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ac24:	add	x0, x0, #0xbb8
    ac28:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    ac2c:	b	abc0 <GOMP_critical_name_end@@GOMP_1.0+0x1d10>
    ac30:	bl	8830 <strerror@plt>
    ac34:	mov	x1, x0
    ac38:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ac3c:	add	x0, x0, #0xbe0
    ac40:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    ac44:	b	abc0 <GOMP_critical_name_end@@GOMP_1.0+0x1d10>
    ac48:	mov	x2, #0x4                   	// #4
    ac4c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ac50:	add	x1, x1, #0x798
    ac54:	mov	x0, x19
    ac58:	bl	8940 <strncasecmp@plt>
    ac5c:	cbnz	w0, ad14 <GOMP_critical_name_end@@GOMP_1.0+0x1e64>
    ac60:	add	x19, x19, #0x4
    ac64:	mov	w22, #0x0                   	// #0
    ac68:	mov	w24, #0x1                   	// #1
    ac6c:	ldrb	w0, [x19]
    ac70:	and	x1, x0, #0xff
    ac74:	ldrh	w1, [x23, x1, lsl #1]
    ac78:	tbz	w1, #13, ac8c <GOMP_critical_name_end@@GOMP_1.0+0x1ddc>
    ac7c:	ldrb	w0, [x19, #1]!
    ac80:	and	x1, x0, #0xff
    ac84:	ldrh	w1, [x23, x1, lsl #1]
    ac88:	tbnz	w1, #13, ac7c <GOMP_critical_name_end@@GOMP_1.0+0x1dcc>
    ac8c:	cbnz	w0, ad78 <GOMP_critical_name_end@@GOMP_1.0+0x1ec8>
    ac90:	cbnz	w24, ad88 <GOMP_critical_name_end@@GOMP_1.0+0x1ed8>
    ac94:	mov	w3, #0x0                   	// #0
    ac98:	mov	w2, #0x1                   	// #1
    ac9c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    aca0:	add	x1, x1, #0x650
    aca4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    aca8:	add	x0, x0, #0xf58
    acac:	bl	90c4 <GOMP_critical_name_end@@GOMP_1.0+0x214>
    acb0:	and	w0, w0, #0xff
    acb4:	cbnz	w0, acc0 <GOMP_critical_name_end@@GOMP_1.0+0x1e10>
    acb8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    acbc:	str	wzr, [x0, #1616]
    acc0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    acc4:	add	x0, x0, #0xf68
    acc8:	bl	8ad0 <getenv@plt>
    accc:	cbz	x0, acd8 <GOMP_critical_name_end@@GOMP_1.0+0x1e28>
    acd0:	ldrb	w1, [x0]
    acd4:	cbnz	w1, b4fc <GOMP_critical_name_end@@GOMP_1.0+0x264c>
    acd8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    acdc:	str	xzr, [x0, #1512]
    ace0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ace4:	add	x0, x0, #0xf78
    ace8:	bl	8ad0 <getenv@plt>
    acec:	mov	x20, x0
    acf0:	cbz	x0, b578 <GOMP_critical_name_end@@GOMP_1.0+0x26c8>
    acf4:	ldrb	w0, [x0]
    acf8:	mov	x21, #0x1                   	// #1
    acfc:	cbz	w0, b578 <GOMP_critical_name_end@@GOMP_1.0+0x26c8>
    ad00:	add	x24, sp, #0xa8
    ad04:	mov	w23, #0xa                   	// #10
    ad08:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ad0c:	add	x22, x22, #0x60c
    ad10:	b	b510 <GOMP_critical_name_end@@GOMP_1.0+0x2660>
    ad14:	mov	x2, #0x5                   	// #5
    ad18:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ad1c:	add	x1, x1, #0x7a0
    ad20:	mov	x0, x19
    ad24:	bl	8940 <strncasecmp@plt>
    ad28:	cbnz	w0, ad3c <GOMP_critical_name_end@@GOMP_1.0+0x1e8c>
    ad2c:	add	x19, x19, #0x5
    ad30:	mov	w22, #0x0                   	// #0
    ad34:	mov	w24, #0x0                   	// #0
    ad38:	b	ac6c <GOMP_critical_name_end@@GOMP_1.0+0x1dbc>
    ad3c:	mov	x2, #0x7                   	// #7
    ad40:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ad44:	add	x1, x1, #0xc10
    ad48:	mov	x0, x19
    ad4c:	bl	8940 <strncasecmp@plt>
    ad50:	cbnz	w0, ad64 <GOMP_critical_name_end@@GOMP_1.0+0x1eb4>
    ad54:	add	x19, x19, #0x7
    ad58:	mov	w22, #0x1                   	// #1
    ad5c:	mov	w24, w22
    ad60:	b	ac6c <GOMP_critical_name_end@@GOMP_1.0+0x1dbc>
    ad64:	mov	w22, #0x0                   	// #0
    ad68:	mov	w24, #0x0                   	// #0
    ad6c:	adrp	x19, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ad70:	add	x19, x19, #0x790
    ad74:	b	ac6c <GOMP_critical_name_end@@GOMP_1.0+0x1dbc>
    ad78:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ad7c:	add	x0, x0, #0xc18
    ad80:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
    ad84:	b	ac90 <GOMP_critical_name_end@@GOMP_1.0+0x1de0>
    ad88:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ad8c:	ldr	x19, [x19, #4040]
    ad90:	ldr	x3, [x19]
    ad94:	mov	x2, #0x22                  	// #34
    ad98:	mov	x1, #0x1                   	// #1
    ad9c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ada0:	add	x0, x0, #0xc50
    ada4:	bl	89d0 <fwrite@plt>
    ada8:	ldr	x3, [x19]
    adac:	mov	x2, #0x15                  	// #21
    adb0:	mov	x1, #0x1                   	// #1
    adb4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    adb8:	add	x0, x0, #0xc78
    adbc:	bl	89d0 <fwrite@plt>
    adc0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    adc4:	ldrb	w1, [x0, #720]
    adc8:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    adcc:	add	x0, x0, #0x7e0
    add0:	adrp	x2, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    add4:	add	x2, x2, #0x7d8
    add8:	cmp	w1, #0x0
    addc:	csel	x2, x2, x0, ne  // ne = any
    ade0:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ade4:	add	x1, x1, #0xc90
    ade8:	ldr	x0, [x19]
    adec:	bl	8b10 <fprintf@plt>
    adf0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    adf4:	ldrb	w1, [x0, #721]
    adf8:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    adfc:	add	x0, x0, #0x7e0
    ae00:	adrp	x2, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ae04:	add	x2, x2, #0x7d8
    ae08:	cmp	w1, #0x0
    ae0c:	csel	x2, x2, x0, ne  // ne = any
    ae10:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ae14:	add	x1, x1, #0xca8
    ae18:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ae1c:	ldr	x0, [x0, #4040]
    ae20:	ldr	x0, [x0]
    ae24:	bl	8b10 <fprintf@plt>
    ae28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ae2c:	ldr	x2, [x0, #696]
    ae30:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ae34:	add	x1, x1, #0xcc0
    ae38:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ae3c:	ldr	x0, [x0, #4040]
    ae40:	ldr	x0, [x0]
    ae44:	bl	8b10 <fprintf@plt>
    ae48:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ae4c:	ldr	x0, [x0, #1624]
    ae50:	cmp	x0, #0x1
    ae54:	b.ls	ae98 <GOMP_critical_name_end@@GOMP_1.0+0x1fe8>  // b.plast
    ae58:	mov	x23, #0x1                   	// #1
    ae5c:	adrp	x25, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ae60:	adrp	x24, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    ae64:	add	x24, x24, #0xce0
    ae68:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ae6c:	ldr	x19, [x19, #4040]
    ae70:	adrp	x26, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ae74:	ldr	x0, [x25, #1504]
    ae78:	ldr	x2, [x0, x23, lsl #3]
    ae7c:	mov	x1, x24
    ae80:	ldr	x0, [x19]
    ae84:	bl	8b10 <fprintf@plt>
    ae88:	add	x23, x23, #0x1
    ae8c:	ldr	x0, [x26, #1624]
    ae90:	cmp	x23, x0
    ae94:	b.cc	ae74 <GOMP_critical_name_end@@GOMP_1.0+0x1fc4>  // b.lo, b.ul, b.last
    ae98:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ae9c:	ldr	x19, [x19, #4040]
    aea0:	ldr	x3, [x19]
    aea4:	mov	x2, #0x2                   	// #2
    aea8:	mov	x1, #0x1                   	// #1
    aeac:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    aeb0:	add	x0, x0, #0xe50
    aeb4:	bl	89d0 <fwrite@plt>
    aeb8:	ldr	x3, [x19]
    aebc:	mov	x2, #0x12                  	// #18
    aec0:	mov	x1, #0x1                   	// #1
    aec4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    aec8:	add	x0, x0, #0xce8
    aecc:	bl	89d0 <fwrite@plt>
    aed0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    aed4:	ldr	w0, [x0, #704]
    aed8:	tbnz	w0, #31, af60 <GOMP_critical_name_end@@GOMP_1.0+0x20b0>
    aedc:	cmp	w0, #0x1
    aee0:	b.eq	afd8 <GOMP_critical_name_end@@GOMP_1.0+0x2128>  // b.none
    aee4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    aee8:	ldr	w1, [x0, #704]
    aeec:	and	w0, w1, #0x7fffffff
    aef0:	cmp	w0, #0x3
    aef4:	b.eq	b0fc <GOMP_critical_name_end@@GOMP_1.0+0x224c>  // b.none
    aef8:	tst	w1, #0x7ffffffc
    aefc:	b.ne	b084 <GOMP_critical_name_end@@GOMP_1.0+0x21d4>  // b.any
    af00:	cmp	w0, #0x2
    af04:	b.eq	b0b0 <GOMP_critical_name_end@@GOMP_1.0+0x2200>  // b.none
    af08:	cmp	w0, #0x3
    af0c:	b.eq	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.none
    af10:	cbnz	w0, affc <GOMP_critical_name_end@@GOMP_1.0+0x214c>
    af14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    af18:	ldr	x0, [x0, #4040]
    af1c:	ldr	x3, [x0]
    af20:	mov	x2, #0x7                   	// #7
    af24:	mov	x1, #0x1                   	// #1
    af28:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    af2c:	add	x0, x0, #0xd20
    af30:	bl	89d0 <fwrite@plt>
    af34:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    af38:	ldr	w2, [x0, #708]
    af3c:	cmp	w2, #0x1
    af40:	b.eq	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.none
    af44:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    af48:	add	x1, x1, #0xd28
    af4c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    af50:	ldr	x0, [x0, #4040]
    af54:	ldr	x0, [x0]
    af58:	bl	8b10 <fprintf@plt>
    af5c:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    af60:	mov	w1, #0x80000001            	// #-2147483647
    af64:	cmp	w0, w1
    af68:	b.ne	afb4 <GOMP_critical_name_end@@GOMP_1.0+0x2104>  // b.any
    af6c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    af70:	ldr	x0, [x0, #4040]
    af74:	ldr	x3, [x0]
    af78:	mov	x2, #0x6                   	// #6
    af7c:	mov	x1, #0x1                   	// #1
    af80:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    af84:	add	x0, x0, #0xd30
    af88:	bl	89d0 <fwrite@plt>
    af8c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    af90:	ldr	w2, [x0, #708]
    af94:	cbz	w2, b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    af98:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    af9c:	add	x1, x1, #0xd28
    afa0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    afa4:	ldr	x0, [x0, #4040]
    afa8:	ldr	x0, [x0]
    afac:	bl	8b10 <fprintf@plt>
    afb0:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    afb4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    afb8:	ldr	x0, [x0, #4040]
    afbc:	ldr	x3, [x0]
    afc0:	mov	x2, #0xa                   	// #10
    afc4:	mov	x1, #0x1                   	// #1
    afc8:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    afcc:	add	x0, x0, #0xd00
    afd0:	bl	89d0 <fwrite@plt>
    afd4:	b	aee4 <GOMP_critical_name_end@@GOMP_1.0+0x2034>
    afd8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    afdc:	ldr	x0, [x0, #4040]
    afe0:	ldr	x3, [x0]
    afe4:	mov	x2, #0xd                   	// #13
    afe8:	mov	x1, #0x1                   	// #1
    afec:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    aff0:	add	x0, x0, #0xd10
    aff4:	bl	89d0 <fwrite@plt>
    aff8:	b	aee4 <GOMP_critical_name_end@@GOMP_1.0+0x2034>
    affc:	cmp	w0, #0x1
    b000:	b.eq	af6c <GOMP_critical_name_end@@GOMP_1.0+0x20bc>  // b.none
    b004:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b008:	ldr	x19, [x19, #4040]
    b00c:	ldr	x3, [x19]
    b010:	mov	x2, #0x2                   	// #2
    b014:	mov	x1, #0x1                   	// #1
    b018:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b01c:	add	x0, x0, #0xe50
    b020:	bl	89d0 <fwrite@plt>
    b024:	ldr	x3, [x19]
    b028:	mov	x2, #0x13                  	// #19
    b02c:	mov	x1, #0x1                   	// #1
    b030:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b034:	add	x0, x0, #0xd50
    b038:	bl	89d0 <fwrite@plt>
    b03c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b040:	ldrb	w0, [x0, #722]
    b044:	cmp	w0, #0x2
    b048:	b.eq	b1bc <GOMP_critical_name_end@@GOMP_1.0+0x230c>  // b.none
    b04c:	b.ls	b148 <GOMP_critical_name_end@@GOMP_1.0+0x2298>  // b.plast
    b050:	cmp	w0, #0x3
    b054:	b.eq	b1e0 <GOMP_critical_name_end@@GOMP_1.0+0x2330>  // b.none
    b058:	cmp	w0, #0x4
    b05c:	b.ne	b190 <GOMP_critical_name_end@@GOMP_1.0+0x22e0>  // b.any
    b060:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b064:	ldr	x0, [x0, #4040]
    b068:	ldr	x3, [x0]
    b06c:	mov	x2, #0x6                   	// #6
    b070:	mov	x1, #0x1                   	// #1
    b074:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b078:	add	x0, x0, #0xd78
    b07c:	bl	89d0 <fwrite@plt>
    b080:	b	b190 <GOMP_critical_name_end@@GOMP_1.0+0x22e0>
    b084:	cmp	w0, #0x4
    b088:	b.ne	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.any
    b08c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b090:	ldr	x0, [x0, #4040]
    b094:	ldr	x3, [x0]
    b098:	mov	x2, #0x4                   	// #4
    b09c:	mov	x1, #0x1                   	// #1
    b0a0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b0a4:	add	x0, x0, #0xd48
    b0a8:	bl	89d0 <fwrite@plt>
    b0ac:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    b0b0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b0b4:	ldr	x0, [x0, #4040]
    b0b8:	ldr	x3, [x0]
    b0bc:	mov	x2, #0x7                   	// #7
    b0c0:	mov	x1, #0x1                   	// #1
    b0c4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b0c8:	add	x0, x0, #0xd38
    b0cc:	bl	89d0 <fwrite@plt>
    b0d0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b0d4:	ldr	w2, [x0, #708]
    b0d8:	cmp	w2, #0x1
    b0dc:	b.eq	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.none
    b0e0:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b0e4:	add	x1, x1, #0xd28
    b0e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b0ec:	ldr	x0, [x0, #4040]
    b0f0:	ldr	x0, [x0]
    b0f4:	bl	8b10 <fprintf@plt>
    b0f8:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    b0fc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b100:	ldr	x0, [x0, #4040]
    b104:	ldr	x3, [x0]
    b108:	mov	x2, #0x6                   	// #6
    b10c:	mov	x1, #0x1                   	// #1
    b110:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b114:	add	x0, x0, #0xd40
    b118:	bl	89d0 <fwrite@plt>
    b11c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b120:	ldr	w2, [x0, #708]
    b124:	cmp	w2, #0x1
    b128:	b.eq	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>  // b.none
    b12c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b130:	add	x1, x1, #0xd28
    b134:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b138:	ldr	x0, [x0, #4040]
    b13c:	ldr	x0, [x0]
    b140:	bl	8b10 <fprintf@plt>
    b144:	b	b004 <GOMP_critical_name_end@@GOMP_1.0+0x2154>
    b148:	cbz	w0, b170 <GOMP_critical_name_end@@GOMP_1.0+0x22c0>
    b14c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b150:	ldr	x0, [x0, #4040]
    b154:	ldr	x3, [x0]
    b158:	mov	x2, #0x4                   	// #4
    b15c:	mov	x1, #0x1                   	// #1
    b160:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b164:	add	x0, x0, #0x7d8
    b168:	bl	89d0 <fwrite@plt>
    b16c:	b	b190 <GOMP_critical_name_end@@GOMP_1.0+0x22e0>
    b170:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b174:	ldr	x0, [x0, #4040]
    b178:	ldr	x3, [x0]
    b17c:	mov	x2, #0x5                   	// #5
    b180:	mov	x1, #0x1                   	// #1
    b184:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b188:	add	x0, x0, #0x7e0
    b18c:	bl	89d0 <fwrite@plt>
    b190:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b194:	ldr	x0, [x0, #1528]
    b198:	mov	x19, #0x1                   	// #1
    b19c:	cmp	x0, x19
    b1a0:	b.ls	b28c <GOMP_critical_name_end@@GOMP_1.0+0x23dc>  // b.plast
    b1a4:	adrp	x25, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b1a8:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b1ac:	ldr	x26, [x23, #4040]
    b1b0:	adrp	x24, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b1b4:	add	x24, x24, #0xd88
    b1b8:	b	b22c <GOMP_critical_name_end@@GOMP_1.0+0x237c>
    b1bc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b1c0:	ldr	x0, [x0, #4040]
    b1c4:	ldr	x3, [x0]
    b1c8:	mov	x2, #0x6                   	// #6
    b1cc:	mov	x1, #0x1                   	// #1
    b1d0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b1d4:	add	x0, x0, #0xd68
    b1d8:	bl	89d0 <fwrite@plt>
    b1dc:	b	b190 <GOMP_critical_name_end@@GOMP_1.0+0x22e0>
    b1e0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b1e4:	ldr	x0, [x0, #4040]
    b1e8:	ldr	x3, [x0]
    b1ec:	mov	x2, #0x5                   	// #5
    b1f0:	mov	x1, #0x1                   	// #1
    b1f4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b1f8:	add	x0, x0, #0xd70
    b1fc:	bl	89d0 <fwrite@plt>
    b200:	b	b190 <GOMP_critical_name_end@@GOMP_1.0+0x22e0>
    b204:	ldr	x3, [x26]
    b208:	mov	x2, #0x6                   	// #6
    b20c:	mov	x1, #0x1                   	// #1
    b210:	mov	x0, x24
    b214:	bl	89d0 <fwrite@plt>
    b218:	add	x19, x19, #0x1
    b21c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b220:	ldr	x0, [x0, #1528]
    b224:	cmp	x0, x19
    b228:	b.ls	b28c <GOMP_critical_name_end@@GOMP_1.0+0x23dc>  // b.plast
    b22c:	ldr	x0, [x25, #1544]
    b230:	ldrb	w0, [x0, x19]
    b234:	cmp	w0, #0x3
    b238:	b.eq	b204 <GOMP_critical_name_end@@GOMP_1.0+0x2354>  // b.none
    b23c:	cmp	w0, #0x4
    b240:	b.eq	b26c <GOMP_critical_name_end@@GOMP_1.0+0x23bc>  // b.none
    b244:	cmp	w0, #0x2
    b248:	b.ne	b218 <GOMP_critical_name_end@@GOMP_1.0+0x2368>  // b.any
    b24c:	ldr	x0, [x23, #4040]
    b250:	ldr	x3, [x0]
    b254:	mov	x2, #0x7                   	// #7
    b258:	mov	x1, #0x1                   	// #1
    b25c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b260:	add	x0, x0, #0xd80
    b264:	bl	89d0 <fwrite@plt>
    b268:	b	b218 <GOMP_critical_name_end@@GOMP_1.0+0x2368>
    b26c:	ldr	x0, [x23, #4040]
    b270:	ldr	x3, [x0]
    b274:	mov	x2, #0x7                   	// #7
    b278:	mov	x1, #0x1                   	// #1
    b27c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b280:	add	x0, x0, #0xd90
    b284:	bl	89d0 <fwrite@plt>
    b288:	b	b218 <GOMP_critical_name_end@@GOMP_1.0+0x2368>
    b28c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b290:	ldr	x19, [x19, #4040]
    b294:	ldr	x3, [x19]
    b298:	mov	x2, #0x2                   	// #2
    b29c:	mov	x1, #0x1                   	// #1
    b2a0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b2a4:	add	x0, x0, #0xe50
    b2a8:	bl	89d0 <fwrite@plt>
    b2ac:	ldr	x3, [x19]
    b2b0:	mov	x2, #0x10                  	// #16
    b2b4:	mov	x1, #0x1                   	// #1
    b2b8:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b2bc:	add	x0, x0, #0xd98
    b2c0:	bl	89d0 <fwrite@plt>
    b2c4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b2c8:	ldr	x0, [x0, #1608]
    b2cc:	cbz	x0, b338 <GOMP_critical_name_end@@GOMP_1.0+0x2488>
    b2d0:	mov	x19, #0x0                   	// #0
    b2d4:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b2d8:	ldr	x28, [x26, #4040]
    b2dc:	mov	w27, #0x7b                  	// #123
    b2e0:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b2e4:	adrp	x25, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b2e8:	add	x25, x25, #0x7f0
    b2ec:	adrp	x24, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b2f0:	add	x24, x24, #0x7e8
    b2f4:	ldr	x1, [x28]
    b2f8:	mov	w0, w27
    b2fc:	bl	86b0 <fputc@plt>
    b300:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b304:	ldr	x0, [x0, #1568]
    b308:	ldr	x0, [x0, x19, lsl #3]
    b30c:	bl	1d798 <omp_pause_resource_all_@@OMP_5.0+0xa74>
    b310:	add	x19, x19, #0x1
    b314:	ldr	x0, [x23, #1608]
    b318:	cmp	x0, x19
    b31c:	ldr	x0, [x26, #4040]
    b320:	ldr	x1, [x0]
    b324:	csel	x0, x24, x25, eq  // eq = none
    b328:	bl	8600 <fputs@plt>
    b32c:	ldr	x0, [x23, #1608]
    b330:	cmp	x0, x19
    b334:	b.hi	b2f4 <GOMP_critical_name_end@@GOMP_1.0+0x2444>  // b.pmore
    b338:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b33c:	ldr	x19, [x19, #4040]
    b340:	ldr	x3, [x19]
    b344:	mov	x2, #0x2                   	// #2
    b348:	mov	x1, #0x1                   	// #1
    b34c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b350:	add	x0, x0, #0xe50
    b354:	bl	89d0 <fwrite@plt>
    b358:	mov	x2, x21
    b35c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b360:	add	x1, x1, #0xdb0
    b364:	ldr	x0, [x19]
    b368:	bl	8b10 <fprintf@plt>
    b36c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b370:	add	x0, x0, #0x800
    b374:	adrp	x2, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b378:	add	x2, x2, #0x7f8
    b37c:	cmp	w20, #0x0
    b380:	csel	x2, x2, x0, gt
    b384:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b388:	add	x1, x1, #0xdd0
    b38c:	ldr	x0, [x19]
    b390:	bl	8b10 <fprintf@plt>
    b394:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b398:	add	x19, x19, #0x2b8
    b39c:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b3a0:	ldr	x20, [x20, #4040]
    b3a4:	ldr	w2, [x19, #20]
    b3a8:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b3ac:	add	x1, x1, #0xdf0
    b3b0:	ldr	x0, [x20]
    b3b4:	bl	8b10 <fprintf@plt>
    b3b8:	ldr	x2, [x19, #40]
    b3bc:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b3c0:	add	x1, x1, #0xe10
    b3c4:	ldr	x0, [x20]
    b3c8:	bl	8b10 <fprintf@plt>
    b3cc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b3d0:	ldrb	w1, [x0, #1364]
    b3d4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b3d8:	add	x0, x0, #0x7e0
    b3dc:	adrp	x2, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b3e0:	add	x2, x2, #0x7d8
    b3e4:	cmp	w1, #0x0
    b3e8:	csel	x2, x2, x0, ne  // ne = any
    b3ec:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b3f0:	add	x1, x1, #0xe38
    b3f4:	ldr	x0, [x20]
    b3f8:	bl	8b10 <fprintf@plt>
    b3fc:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b400:	ldr	x19, [x19, #4040]
    b404:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b408:	ldr	w2, [x0, #712]
    b40c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b410:	add	x1, x1, #0xe58
    b414:	ldr	x0, [x19]
    b418:	bl	8b10 <fprintf@plt>
    b41c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b420:	ldr	w2, [x0, #1368]
    b424:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b428:	add	x1, x1, #0xe78
    b42c:	ldr	x0, [x19]
    b430:	bl	8b10 <fprintf@plt>
    b434:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b438:	ldrb	w1, [x0, #1520]
    b43c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b440:	add	x0, x0, #0x7e0
    b444:	adrp	x2, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b448:	add	x2, x2, #0x7d8
    b44c:	cmp	w1, #0x0
    b450:	csel	x2, x2, x0, ne  // ne = any
    b454:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b458:	add	x1, x1, #0xe98
    b45c:	ldr	x0, [x19]
    b460:	bl	8b10 <fprintf@plt>
    b464:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b468:	ldr	x2, [x0, #824]
    b46c:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b470:	add	x1, x1, #0xeb8
    b474:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b478:	ldr	x0, [x0, #4040]
    b47c:	ldr	x0, [x0]
    b480:	bl	8b10 <fprintf@plt>
    b484:	cbnz	w22, b4ac <GOMP_critical_name_end@@GOMP_1.0+0x25fc>
    b488:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b48c:	ldr	x0, [x0, #4040]
    b490:	ldr	x3, [x0]
    b494:	mov	x2, #0x1f                  	// #31
    b498:	mov	x1, #0x1                   	// #1
    b49c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b4a0:	add	x0, x0, #0xf38
    b4a4:	bl	89d0 <fwrite@plt>
    b4a8:	b	ac94 <GOMP_critical_name_end@@GOMP_1.0+0x1de4>
    b4ac:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b4b0:	ldr	x19, [x19, #4040]
    b4b4:	ldr	x3, [x19]
    b4b8:	mov	x2, #0x19                  	// #25
    b4bc:	mov	x1, #0x1                   	// #1
    b4c0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b4c4:	add	x0, x0, #0xed8
    b4c8:	bl	89d0 <fwrite@plt>
    b4cc:	mov	x2, x21
    b4d0:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b4d4:	add	x1, x1, #0xef8
    b4d8:	ldr	x0, [x19]
    b4dc:	bl	8b10 <fprintf@plt>
    b4e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b4e4:	ldr	x2, [x0, #1584]
    b4e8:	adrp	x1, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b4ec:	add	x1, x1, #0xf18
    b4f0:	ldr	x0, [x19]
    b4f4:	bl	8b10 <fprintf@plt>
    b4f8:	b	b488 <GOMP_critical_name_end@@GOMP_1.0+0x25d8>
    b4fc:	bl	8820 <strdup@plt>
    b500:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b504:	str	x0, [x1, #1512]
    b508:	b	ace0 <GOMP_critical_name_end@@GOMP_1.0+0x1e30>
    b50c:	add	x21, x21, #0x1
    b510:	ldrb	w0, [x20]
    b514:	cmp	w0, #0x3a
    b518:	b.eq	b558 <GOMP_critical_name_end@@GOMP_1.0+0x26a8>  // b.none
    b51c:	bl	8ac0 <__errno_location@plt>
    b520:	mov	x19, x0
    b524:	str	wzr, [x0]
    b528:	mov	w2, w23
    b52c:	mov	x1, x24
    b530:	mov	x0, x20
    b534:	bl	88c0 <strtol@plt>
    b538:	ldr	w1, [x19]
    b53c:	cmp	w1, #0x0
    b540:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    b544:	b.lt	b578 <GOMP_critical_name_end@@GOMP_1.0+0x26c8>  // b.tstop
    b548:	tst	x0, #0xffffffff00000000
    b54c:	b.ne	b578 <GOMP_critical_name_end@@GOMP_1.0+0x26c8>  // b.any
    b550:	str	w0, [x22, x21, lsl #2]
    b554:	ldr	x20, [sp, #168]
    b558:	ldrb	w1, [x20]
    b55c:	cmp	w1, #0x0
    b560:	ccmp	w21, #0x3, #0x4, ne  // ne = any
    b564:	b.eq	b578 <GOMP_critical_name_end@@GOMP_1.0+0x26c8>  // b.none
    b568:	cbz	w21, b50c <GOMP_critical_name_end@@GOMP_1.0+0x265c>
    b56c:	add	x20, x20, #0x1
    b570:	cmp	w1, #0x3a
    b574:	b.eq	b50c <GOMP_critical_name_end@@GOMP_1.0+0x265c>  // b.none
    b578:	bl	257c8 <acc_on_device@@OACC_2.0+0x10>
    b57c:	ldp	x19, x20, [sp, #16]
    b580:	ldp	x21, x22, [sp, #32]
    b584:	ldp	x23, x24, [sp, #48]
    b588:	ldp	x25, x26, [sp, #64]
    b58c:	ldp	x27, x28, [sp, #80]
    b590:	ldp	x29, x30, [sp], #192
    b594:	ret
    b598:	mov	w20, #0xffffffff            	// #-1
    b59c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b5a0:	mov	x1, #0x93e0                	// #37856
    b5a4:	movk	x1, #0x4, lsl #16
    b5a8:	str	x1, [x0, #1584]
    b5ac:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b5b0:	mov	x1, #0x64                  	// #100
    b5b4:	str	x1, [x0, #1600]
    b5b8:	b	ab48 <GOMP_critical_name_end@@GOMP_1.0+0x1c98>
    b5bc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b5c0:	ldr	w0, [x0, #1536]
    b5c4:	cbnz	w0, b5cc <GOMP_critical_name_end@@GOMP_1.0+0x271c>
    b5c8:	ret
    b5cc:	stp	x29, x30, [sp, #-48]!
    b5d0:	mov	x29, sp
    b5d4:	ldp	x4, x5, [x2]
    b5d8:	stp	x4, x5, [sp, #16]
    b5dc:	ldp	x2, x3, [x2, #16]
    b5e0:	stp	x2, x3, [sp, #32]
    b5e4:	add	x2, sp, #0x10
    b5e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b5ec:	ldr	x0, [x0, #4040]
    b5f0:	ldr	x0, [x0]
    b5f4:	bl	8aa0 <vfprintf@plt>
    b5f8:	ldp	x29, x30, [sp], #48
    b5fc:	ret
    b600:	stp	x29, x30, [sp, #-256]!
    b604:	mov	x29, sp
    b608:	str	x2, [sp, #208]
    b60c:	str	x3, [sp, #216]
    b610:	str	x4, [sp, #224]
    b614:	str	x5, [sp, #232]
    b618:	str	x6, [sp, #240]
    b61c:	str	x7, [sp, #248]
    b620:	str	q0, [sp, #80]
    b624:	str	q1, [sp, #96]
    b628:	str	q2, [sp, #112]
    b62c:	str	q3, [sp, #128]
    b630:	str	q4, [sp, #144]
    b634:	str	q5, [sp, #160]
    b638:	str	q6, [sp, #176]
    b63c:	str	q7, [sp, #192]
    b640:	add	x2, sp, #0x100
    b644:	str	x2, [sp, #48]
    b648:	str	x2, [sp, #56]
    b64c:	add	x2, sp, #0xd0
    b650:	str	x2, [sp, #64]
    b654:	mov	w2, #0xffffffd0            	// #-48
    b658:	str	w2, [sp, #72]
    b65c:	mov	w2, #0xffffff80            	// #-128
    b660:	str	w2, [sp, #76]
    b664:	ldp	x2, x3, [sp, #48]
    b668:	stp	x2, x3, [sp, #16]
    b66c:	ldp	x2, x3, [sp, #64]
    b670:	stp	x2, x3, [sp, #32]
    b674:	add	x2, sp, #0x10
    b678:	bl	b5bc <GOMP_critical_name_end@@GOMP_1.0+0x270c>
    b67c:	ldp	x29, x30, [sp], #256
    b680:	ret
    b684:	stp	x29, x30, [sp, #-80]!
    b688:	mov	x29, sp
    b68c:	stp	x19, x20, [sp, #16]
    b690:	str	x21, [sp, #32]
    b694:	mov	x21, x0
    b698:	mov	x20, x1
    b69c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b6a0:	ldr	x19, [x19, #4040]
    b6a4:	ldr	x3, [x19]
    b6a8:	mov	x2, #0xa                   	// #10
    b6ac:	mov	x1, #0x1                   	// #1
    b6b0:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
    b6b4:	add	x0, x0, #0xfb0
    b6b8:	bl	89d0 <fwrite@plt>
    b6bc:	ldp	x0, x1, [x20]
    b6c0:	stp	x0, x1, [sp, #48]
    b6c4:	ldp	x0, x1, [x20, #16]
    b6c8:	stp	x0, x1, [sp, #64]
    b6cc:	add	x2, sp, #0x30
    b6d0:	mov	x1, x21
    b6d4:	ldr	x0, [x19]
    b6d8:	bl	8aa0 <vfprintf@plt>
    b6dc:	ldr	x1, [x19]
    b6e0:	mov	w0, #0xa                   	// #10
    b6e4:	bl	86b0 <fputc@plt>
    b6e8:	ldp	x19, x20, [sp, #16]
    b6ec:	ldr	x21, [sp, #32]
    b6f0:	ldp	x29, x30, [sp], #80
    b6f4:	ret
    b6f8:	stp	x29, x30, [sp, #-272]!
    b6fc:	mov	x29, sp
    b700:	str	x1, [sp, #216]
    b704:	str	x2, [sp, #224]
    b708:	str	x3, [sp, #232]
    b70c:	str	x4, [sp, #240]
    b710:	str	x5, [sp, #248]
    b714:	str	x6, [sp, #256]
    b718:	str	x7, [sp, #264]
    b71c:	str	q0, [sp, #80]
    b720:	str	q1, [sp, #96]
    b724:	str	q2, [sp, #112]
    b728:	str	q3, [sp, #128]
    b72c:	str	q4, [sp, #144]
    b730:	str	q5, [sp, #160]
    b734:	str	q6, [sp, #176]
    b738:	str	q7, [sp, #192]
    b73c:	add	x1, sp, #0x110
    b740:	str	x1, [sp, #48]
    b744:	str	x1, [sp, #56]
    b748:	add	x1, sp, #0xd0
    b74c:	str	x1, [sp, #64]
    b750:	mov	w1, #0xffffffc8            	// #-56
    b754:	str	w1, [sp, #72]
    b758:	mov	w1, #0xffffff80            	// #-128
    b75c:	str	w1, [sp, #76]
    b760:	ldp	x2, x3, [sp, #48]
    b764:	stp	x2, x3, [sp, #16]
    b768:	ldp	x2, x3, [sp, #64]
    b76c:	stp	x2, x3, [sp, #32]
    b770:	add	x1, sp, #0x10
    b774:	bl	b684 <GOMP_critical_name_end@@GOMP_1.0+0x27d4>
    b778:	ldp	x29, x30, [sp], #272
    b77c:	ret
    b780:	stp	x29, x30, [sp, #-48]!
    b784:	mov	x29, sp
    b788:	ldp	x2, x3, [x1]
    b78c:	stp	x2, x3, [sp, #16]
    b790:	ldp	x2, x3, [x1, #16]
    b794:	stp	x2, x3, [sp, #32]
    b798:	add	x1, sp, #0x10
    b79c:	bl	b684 <GOMP_critical_name_end@@GOMP_1.0+0x27d4>
    b7a0:	mov	w0, #0x1                   	// #1
    b7a4:	bl	8610 <exit@plt>
    b7a8:	stp	x29, x30, [sp, #-272]!
    b7ac:	mov	x29, sp
    b7b0:	str	x1, [sp, #216]
    b7b4:	str	x2, [sp, #224]
    b7b8:	str	x3, [sp, #232]
    b7bc:	str	x4, [sp, #240]
    b7c0:	str	x5, [sp, #248]
    b7c4:	str	x6, [sp, #256]
    b7c8:	str	x7, [sp, #264]
    b7cc:	str	q0, [sp, #80]
    b7d0:	str	q1, [sp, #96]
    b7d4:	str	q2, [sp, #112]
    b7d8:	str	q3, [sp, #128]
    b7dc:	str	q4, [sp, #144]
    b7e0:	str	q5, [sp, #160]
    b7e4:	str	q6, [sp, #176]
    b7e8:	str	q7, [sp, #192]
    b7ec:	add	x1, sp, #0x110
    b7f0:	str	x1, [sp, #48]
    b7f4:	str	x1, [sp, #56]
    b7f8:	add	x1, sp, #0xd0
    b7fc:	str	x1, [sp, #64]
    b800:	mov	w1, #0xffffffc8            	// #-56
    b804:	str	w1, [sp, #72]
    b808:	mov	w1, #0xffffff80            	// #-128
    b80c:	str	w1, [sp, #76]
    b810:	ldp	x2, x3, [sp, #48]
    b814:	stp	x2, x3, [sp, #16]
    b818:	ldp	x2, x3, [sp, #64]
    b81c:	stp	x2, x3, [sp, #32]
    b820:	add	x1, sp, #0x10
    b824:	bl	b780 <GOMP_critical_name_end@@GOMP_1.0+0x28d0>

000000000000b828 <omp_set_num_threads@@OMP_1.0>:
    b828:	stp	x29, x30, [sp, #-32]!
    b82c:	mov	x29, sp
    b830:	str	x19, [sp, #16]
    b834:	mov	w19, w0
    b838:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b83c:	ldr	x0, [x0, #4016]
    b840:	mrs	x1, tpidr_el0
    b844:	add	x0, x1, x0
    b848:	ldr	x0, [x0, #80]
    b84c:	cbz	x0, b870 <omp_set_num_threads@@OMP_1.0+0x48>
    b850:	add	x0, x0, #0x90
    b854:	cmp	w19, #0x0
    b858:	csinc	w19, w19, wzr, gt
    b85c:	sxtw	x19, w19
    b860:	str	x19, [x0]
    b864:	ldr	x19, [sp, #16]
    b868:	ldp	x29, x30, [sp], #32
    b86c:	ret
    b870:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
    b874:	b	b854 <omp_set_num_threads@@OMP_1.0+0x2c>

000000000000b878 <omp_set_dynamic@@OMP_1.0>:
    b878:	stp	x29, x30, [sp, #-32]!
    b87c:	mov	x29, sp
    b880:	str	x19, [sp, #16]
    b884:	mov	w19, w0
    b888:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b88c:	ldr	x0, [x0, #4016]
    b890:	mrs	x1, tpidr_el0
    b894:	add	x0, x1, x0
    b898:	ldr	x1, [x0, #80]
    b89c:	cbz	x1, b8bc <omp_set_dynamic@@OMP_1.0+0x44>
    b8a0:	add	x1, x1, #0x90
    b8a4:	cmp	w19, #0x0
    b8a8:	cset	w0, ne  // ne = any
    b8ac:	strb	w0, [x1, #24]
    b8b0:	ldr	x19, [sp, #16]
    b8b4:	ldp	x29, x30, [sp], #32
    b8b8:	ret
    b8bc:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
    b8c0:	mov	x1, x0
    b8c4:	b	b8a4 <omp_set_dynamic@@OMP_1.0+0x2c>

000000000000b8c8 <omp_get_dynamic@@OMP_1.0>:
    b8c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b8cc:	ldr	x0, [x0, #4016]
    b8d0:	mrs	x1, tpidr_el0
    b8d4:	add	x0, x1, x0
    b8d8:	ldr	x1, [x0, #80]
    b8dc:	add	x2, x1, #0x90
    b8e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b8e4:	add	x0, x0, #0x2b8
    b8e8:	cmp	x1, #0x0
    b8ec:	csel	x0, x0, x2, eq  // eq = none
    b8f0:	ldrb	w0, [x0, #24]
    b8f4:	ret

000000000000b8f8 <omp_set_nested@@OMP_1.0>:
    b8f8:	stp	x29, x30, [sp, #-32]!
    b8fc:	mov	x29, sp
    b900:	str	x19, [sp, #16]
    b904:	mov	w19, w0
    b908:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b90c:	ldr	x0, [x0, #4016]
    b910:	mrs	x1, tpidr_el0
    b914:	add	x0, x1, x0
    b918:	ldr	x1, [x0, #80]
    b91c:	cbz	x1, b93c <omp_set_nested@@OMP_1.0+0x44>
    b920:	add	x1, x1, #0x90
    b924:	cmp	w19, #0x0
    b928:	cset	w0, ne  // ne = any
    b92c:	strb	w0, [x1, #25]
    b930:	ldr	x19, [sp, #16]
    b934:	ldp	x29, x30, [sp], #32
    b938:	ret
    b93c:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
    b940:	mov	x1, x0
    b944:	b	b924 <omp_set_nested@@OMP_1.0+0x2c>

000000000000b948 <omp_get_nested@@OMP_1.0>:
    b948:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b94c:	ldr	x0, [x0, #4016]
    b950:	mrs	x1, tpidr_el0
    b954:	add	x0, x1, x0
    b958:	ldr	x1, [x0, #80]
    b95c:	add	x2, x1, #0x90
    b960:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    b964:	add	x0, x0, #0x2b8
    b968:	cmp	x1, #0x0
    b96c:	csel	x0, x0, x2, eq  // eq = none
    b970:	ldrb	w0, [x0, #25]
    b974:	ret

000000000000b978 <omp_set_schedule@@OMP_3.0>:
    b978:	stp	x29, x30, [sp, #-32]!
    b97c:	mov	x29, sp
    b980:	stp	x19, x20, [sp, #16]
    b984:	mov	w19, w0
    b988:	mov	w20, w1
    b98c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    b990:	ldr	x0, [x0, #4016]
    b994:	mrs	x1, tpidr_el0
    b998:	add	x0, x1, x0
    b99c:	ldr	x0, [x0, #80]
    b9a0:	cbz	x0, b9d4 <omp_set_schedule@@OMP_3.0+0x5c>
    b9a4:	add	x0, x0, #0x90
    b9a8:	and	w1, w19, #0x7fffffff
    b9ac:	tst	w19, #0x7ffffffc
    b9b0:	b.ne	b9dc <omp_set_schedule@@OMP_3.0+0x64>  // b.any
    b9b4:	tst	w19, #0x7ffffffe
    b9b8:	b.ne	b9f4 <omp_set_schedule@@OMP_3.0+0x7c>  // b.any
    b9bc:	cmp	w1, #0x1
    b9c0:	b.ne	b9e8 <omp_set_schedule@@OMP_3.0+0x70>  // b.any
    b9c4:	cmp	w20, #0x0
    b9c8:	csel	w20, w20, wzr, ge  // ge = tcont
    b9cc:	str	w20, [x0, #12]
    b9d0:	b	b9e4 <omp_set_schedule@@OMP_3.0+0x6c>
    b9d4:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
    b9d8:	b	b9a8 <omp_set_schedule@@OMP_3.0+0x30>
    b9dc:	cmp	w1, #0x4
    b9e0:	b.ne	b9e8 <omp_set_schedule@@OMP_3.0+0x70>  // b.any
    b9e4:	str	w19, [x0, #8]
    b9e8:	ldp	x19, x20, [sp, #16]
    b9ec:	ldp	x29, x30, [sp], #32
    b9f0:	ret
    b9f4:	cmp	w20, #0x0
    b9f8:	csinc	w20, w20, wzr, gt
    b9fc:	str	w20, [x0, #12]
    ba00:	b	b9e4 <omp_set_schedule@@OMP_3.0+0x6c>

000000000000ba04 <omp_get_schedule@@OMP_3.0>:
    ba04:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ba08:	ldr	x2, [x2, #4016]
    ba0c:	mrs	x3, tpidr_el0
    ba10:	add	x2, x3, x2
    ba14:	ldr	x3, [x2, #80]
    ba18:	add	x4, x3, #0x90
    ba1c:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ba20:	add	x2, x2, #0x2b8
    ba24:	cmp	x3, #0x0
    ba28:	csel	x2, x2, x4, eq  // eq = none
    ba2c:	ldr	w3, [x2, #8]
    ba30:	str	w3, [x0]
    ba34:	ldr	w0, [x2, #12]
    ba38:	str	w0, [x1]
    ba3c:	ret

000000000000ba40 <omp_get_max_threads@@OMP_1.0>:
    ba40:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ba44:	ldr	x0, [x0, #4016]
    ba48:	mrs	x1, tpidr_el0
    ba4c:	add	x0, x1, x0
    ba50:	ldr	x1, [x0, #80]
    ba54:	add	x2, x1, #0x90
    ba58:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ba5c:	add	x0, x0, #0x2b8
    ba60:	cmp	x1, #0x0
    ba64:	csel	x0, x0, x2, eq  // eq = none
    ba68:	ldr	w0, [x0]
    ba6c:	ret

000000000000ba70 <omp_get_thread_limit@@OMP_3.0>:
    ba70:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ba74:	ldr	x0, [x0, #4016]
    ba78:	mrs	x1, tpidr_el0
    ba7c:	add	x0, x1, x0
    ba80:	ldr	x1, [x0, #80]
    ba84:	add	x2, x1, #0x90
    ba88:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    ba8c:	add	x0, x0, #0x2b8
    ba90:	cmp	x1, #0x0
    ba94:	csel	x0, x0, x2, eq  // eq = none
    ba98:	ldr	w0, [x0, #20]
    ba9c:	cmp	w0, #0x0
    baa0:	mov	w1, #0x7fffffff            	// #2147483647
    baa4:	csel	w0, w0, w1, ge  // ge = tcont
    baa8:	ret

000000000000baac <omp_set_max_active_levels@@OMP_3.0>:
    baac:	tbnz	w0, #31, babc <omp_set_max_active_levels@@OMP_3.0+0x10>
    bab0:	sxtw	x0, w0
    bab4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bab8:	str	x0, [x1, #736]
    babc:	ret

000000000000bac0 <omp_get_max_active_levels@@OMP_3.0>:
    bac0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bac4:	ldr	w0, [x0, #736]
    bac8:	ret

000000000000bacc <omp_get_cancellation@@OMP_4.0>:
    bacc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bad0:	ldrb	w0, [x0, #1364]
    bad4:	ret

000000000000bad8 <omp_get_max_task_priority@@OMP_4.5>:
    bad8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    badc:	ldr	w0, [x0, #1368]
    bae0:	ret

000000000000bae4 <omp_get_proc_bind@@OMP_4.0>:
    bae4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bae8:	ldr	x0, [x0, #4016]
    baec:	mrs	x1, tpidr_el0
    baf0:	add	x0, x1, x0
    baf4:	ldr	x1, [x0, #80]
    baf8:	add	x2, x1, #0x90
    bafc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bb00:	add	x0, x0, #0x2b8
    bb04:	cmp	x1, #0x0
    bb08:	csel	x0, x0, x2, eq  // eq = none
    bb0c:	ldrb	w0, [x0, #26]
    bb10:	ret

000000000000bb14 <omp_get_initial_device@@OMP_4.5>:
    bb14:	mov	w0, #0xfffffffe            	// #-2
    bb18:	ret

000000000000bb1c <omp_get_num_places@@OMP_4.5>:
    bb1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bb20:	ldr	w0, [x0, #1608]
    bb24:	ret

000000000000bb28 <omp_get_place_num@@OMP_4.5>:
    bb28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bb2c:	ldr	x0, [x0, #1568]
    bb30:	cbz	x0, bb94 <omp_get_place_num@@OMP_4.5+0x6c>
    bb34:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bb38:	ldr	x0, [x0, #4016]
    bb3c:	mrs	x1, tpidr_el0
    bb40:	add	x0, x1, x0
    bb44:	ldr	w0, [x0, #92]
    bb48:	cbz	w0, bb68 <omp_get_place_num@@OMP_4.5+0x40>
    bb4c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bb50:	ldr	x0, [x0, #4016]
    bb54:	mrs	x1, tpidr_el0
    bb58:	add	x0, x1, x0
    bb5c:	ldr	w0, [x0, #92]
    bb60:	sub	w0, w0, #0x1
    bb64:	ret
    bb68:	stp	x29, x30, [sp, #-16]!
    bb6c:	mov	x29, sp
    bb70:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
    bb74:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bb78:	ldr	x0, [x0, #4016]
    bb7c:	mrs	x1, tpidr_el0
    bb80:	add	x0, x1, x0
    bb84:	ldr	w0, [x0, #92]
    bb88:	sub	w0, w0, #0x1
    bb8c:	ldp	x29, x30, [sp], #16
    bb90:	ret
    bb94:	mov	w0, #0xffffffff            	// #-1
    bb98:	ret

000000000000bb9c <omp_get_partition_num_places@@OMP_4.5>:
    bb9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bba0:	ldr	x0, [x0, #1568]
    bba4:	cbz	x0, bc00 <omp_get_partition_num_places@@OMP_4.5+0x64>
    bba8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bbac:	ldr	x0, [x0, #4016]
    bbb0:	mrs	x1, tpidr_el0
    bbb4:	add	x0, x1, x0
    bbb8:	ldr	w0, [x0, #92]
    bbbc:	cbz	w0, bbd8 <omp_get_partition_num_places@@OMP_4.5+0x3c>
    bbc0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bbc4:	ldr	x0, [x0, #4016]
    bbc8:	mrs	x1, tpidr_el0
    bbcc:	add	x0, x1, x0
    bbd0:	ldr	w0, [x0, #56]
    bbd4:	ret
    bbd8:	stp	x29, x30, [sp, #-16]!
    bbdc:	mov	x29, sp
    bbe0:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
    bbe4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bbe8:	ldr	x0, [x0, #4016]
    bbec:	mrs	x1, tpidr_el0
    bbf0:	add	x0, x1, x0
    bbf4:	ldr	w0, [x0, #56]
    bbf8:	ldp	x29, x30, [sp], #16
    bbfc:	ret
    bc00:	mov	w0, #0x0                   	// #0
    bc04:	ret

000000000000bc08 <omp_get_partition_place_nums@@OMP_4.5>:
    bc08:	stp	x29, x30, [sp, #-32]!
    bc0c:	mov	x29, sp
    bc10:	str	x19, [sp, #16]
    bc14:	mov	x19, x0
    bc18:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bc1c:	ldr	x0, [x0, #1568]
    bc20:	cbz	x0, bc84 <omp_get_partition_place_nums@@OMP_4.5+0x7c>
    bc24:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bc28:	ldr	x0, [x0, #4016]
    bc2c:	mrs	x1, tpidr_el0
    bc30:	add	x0, x1, x0
    bc34:	ldr	w0, [x0, #92]
    bc38:	cbz	w0, bc90 <omp_get_partition_place_nums@@OMP_4.5+0x88>
    bc3c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bc40:	ldr	x0, [x0, #4016]
    bc44:	mrs	x1, tpidr_el0
    bc48:	add	x0, x1, x0
    bc4c:	ldr	w0, [x0, #56]
    bc50:	cbz	w0, bc84 <omp_get_partition_place_nums@@OMP_4.5+0x7c>
    bc54:	mov	x1, #0x0                   	// #0
    bc58:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bc5c:	ldr	x3, [x3, #4016]
    bc60:	mrs	x2, tpidr_el0
    bc64:	add	x3, x2, x3
    bc68:	ldr	w2, [x3, #52]
    bc6c:	add	w2, w2, w1
    bc70:	str	w2, [x19, x1, lsl #2]
    bc74:	add	x1, x1, #0x1
    bc78:	ldr	w2, [x3, #56]
    bc7c:	cmp	w2, w1
    bc80:	b.hi	bc68 <omp_get_partition_place_nums@@OMP_4.5+0x60>  // b.pmore
    bc84:	ldr	x19, [sp, #16]
    bc88:	ldp	x29, x30, [sp], #32
    bc8c:	ret
    bc90:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
    bc94:	b	bc3c <omp_get_partition_place_nums@@OMP_4.5+0x34>

000000000000bc98 <omp_set_default_device@@OMP_4.0>:
    bc98:	stp	x29, x30, [sp, #-32]!
    bc9c:	mov	x29, sp
    bca0:	str	x19, [sp, #16]
    bca4:	mov	w19, w0
    bca8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bcac:	ldr	x0, [x0, #4016]
    bcb0:	mrs	x1, tpidr_el0
    bcb4:	add	x0, x1, x0
    bcb8:	ldr	x0, [x0, #80]
    bcbc:	cbz	x0, bcdc <omp_set_default_device@@OMP_4.0+0x44>
    bcc0:	add	x0, x0, #0x90
    bcc4:	cmp	w19, #0x0
    bcc8:	csel	w19, w19, wzr, ge  // ge = tcont
    bccc:	str	w19, [x0, #16]
    bcd0:	ldr	x19, [sp, #16]
    bcd4:	ldp	x29, x30, [sp], #32
    bcd8:	ret
    bcdc:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
    bce0:	b	bcc4 <omp_set_default_device@@OMP_4.0+0x2c>

000000000000bce4 <omp_get_default_device@@OMP_4.0>:
    bce4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bce8:	ldr	x0, [x0, #4016]
    bcec:	mrs	x1, tpidr_el0
    bcf0:	add	x0, x1, x0
    bcf4:	ldr	x1, [x0, #80]
    bcf8:	add	x2, x1, #0x90
    bcfc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    bd00:	add	x0, x0, #0x2b8
    bd04:	cmp	x1, #0x0
    bd08:	csel	x0, x0, x2, eq  // eq = none
    bd0c:	ldr	w0, [x0, #16]
    bd10:	ret

000000000000bd14 <omp_get_num_devices@@OMP_4.0>:
    bd14:	stp	x29, x30, [sp, #-16]!
    bd18:	mov	x29, sp
    bd1c:	bl	1f19c <omp_get_place_proc_ids@@OMP_4.5+0x1874>
    bd20:	ldp	x29, x30, [sp], #16
    bd24:	ret

000000000000bd28 <omp_is_initial_device@@OMP_4.0>:
    bd28:	mov	w0, #0x1                   	// #1
    bd2c:	ret
    bd30:	mov	x7, x0
    bd34:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bd38:	ldr	x2, [x2, #4016]
    bd3c:	mrs	x3, tpidr_el0
    bd40:	add	x2, x3, x2
    bd44:	ldr	x4, [x2, #16]
    bd48:	ldr	x3, [x2, #24]
    bd4c:	cbz	x4, bee8 <omp_is_initial_device@@OMP_4.0+0x1c0>
    bd50:	ldr	w6, [x4]
    bd54:	ldr	x2, [x2, #72]
    bd58:	cmn	x2, #0x1
    bd5c:	b.eq	bee0 <omp_is_initial_device@@OMP_4.0+0x1b8>  // b.none
    bd60:	cmp	x6, #0x1
    bd64:	b.eq	bf08 <omp_is_initial_device@@OMP_4.0+0x1e0>  // b.none
    bd68:	ldr	x4, [x3, #8]
    bd6c:	cbnz	x4, be30 <omp_is_initial_device@@OMP_4.0+0x108>
    bd70:	mov	w0, #0x1                   	// #1
    bd74:	cbnz	x2, bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    bd78:	ldr	x5, [x3, #24]
    bd7c:	mov	x0, #0x1                   	// #1
    bd80:	cmp	x5, #0x0
    bd84:	cneg	x4, x0, gt
    bd88:	ldr	x8, [x3, #72]
    bd8c:	ldr	x0, [x3, #16]
    bd90:	sub	x0, x0, x8
    bd94:	add	x3, x5, x4
    bd98:	add	x0, x0, x3
    bd9c:	sdiv	x0, x0, x5
    bda0:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bda4:	ldr	x3, [x3, #4016]
    bda8:	mrs	x4, tpidr_el0
    bdac:	add	x3, x4, x3
    bdb0:	ldr	w4, [x3, #40]
    bdb4:	udiv	x3, x0, x6
    bdb8:	msub	x6, x3, x6, x0
    bdbc:	cmp	x4, x6
    bdc0:	b.cs	bdcc <omp_is_initial_device@@OMP_4.0+0xa4>  // b.hs, b.nlast
    bdc4:	add	x3, x3, #0x1
    bdc8:	mov	x6, x2
    bdcc:	madd	x2, x3, x4, x6
    bdd0:	add	x3, x3, x2
    bdd4:	cmp	x2, x3
    bdd8:	b.cc	bdf8 <omp_is_initial_device@@OMP_4.0+0xd0>  // b.lo, b.ul, b.last
    bddc:	mov	x0, #0x1                   	// #1
    bde0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bde4:	ldr	x1, [x1, #4016]
    bde8:	mrs	x2, tpidr_el0
    bdec:	add	x1, x2, x1
    bdf0:	str	x0, [x1, #72]
    bdf4:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    bdf8:	madd	x2, x2, x5, x8
    bdfc:	str	x2, [x7]
    be00:	madd	x5, x3, x5, x8
    be04:	str	x5, [x1]
    be08:	mov	x1, #0x1                   	// #1
    be0c:	cmp	x0, x3
    be10:	cneg	x1, x1, eq  // eq = none
    be14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    be18:	ldr	x0, [x0, #4016]
    be1c:	mrs	x2, tpidr_el0
    be20:	add	x0, x2, x0
    be24:	str	x1, [x0, #72]
    be28:	mov	w0, #0x0                   	// #0
    be2c:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    be30:	ldr	x8, [x3, #24]
    be34:	mov	x5, #0x1                   	// #1
    be38:	cmp	x8, #0x0
    be3c:	cneg	x5, x5, gt
    be40:	ldr	x9, [x3, #72]
    be44:	ldr	x3, [x3, #16]
    be48:	sub	x3, x3, x9
    be4c:	add	x5, x8, x5
    be50:	add	x3, x3, x5
    be54:	sdiv	x3, x3, x8
    be58:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    be5c:	ldr	x0, [x0, #4016]
    be60:	mrs	x5, tpidr_el0
    be64:	add	x0, x5, x0
    be68:	ldr	w0, [x0, #40]
    be6c:	madd	x2, x2, x6, x0
    be70:	mul	x2, x2, x4
    be74:	mov	w0, #0x1                   	// #1
    be78:	cmp	x3, x2
    be7c:	b.ls	bf40 <omp_is_initial_device@@OMP_4.0+0x218>  // b.plast
    be80:	add	x4, x4, x2
    be84:	madd	x2, x2, x8, x9
    be88:	str	x2, [x7]
    be8c:	cmp	x3, x4
    be90:	csel	x0, x3, x4, ls  // ls = plast
    be94:	madd	x8, x0, x8, x9
    be98:	str	x8, [x1]
    be9c:	b.ls	bec4 <omp_is_initial_device@@OMP_4.0+0x19c>  // b.plast
    bea0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bea4:	ldr	x0, [x0, #4016]
    bea8:	mrs	x1, tpidr_el0
    beac:	add	x0, x1, x0
    beb0:	ldr	x1, [x0, #72]
    beb4:	add	x1, x1, #0x1
    beb8:	str	x1, [x0, #72]
    bebc:	mov	w0, #0x0                   	// #0
    bec0:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    bec4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bec8:	ldr	x0, [x0, #4016]
    becc:	add	x0, x5, x0
    bed0:	mov	x1, #0xffffffffffffffff    	// #-1
    bed4:	str	x1, [x0, #72]
    bed8:	mov	w0, #0x0                   	// #0
    bedc:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    bee0:	mov	w0, #0xffffffff            	// #-1
    bee4:	b	bf40 <omp_is_initial_device@@OMP_4.0+0x218>
    bee8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    beec:	ldr	x0, [x0, #4016]
    bef0:	mrs	x2, tpidr_el0
    bef4:	add	x0, x2, x0
    bef8:	ldr	x2, [x0, #72]
    befc:	mov	w0, #0xffffffff            	// #-1
    bf00:	cmn	x2, #0x1
    bf04:	b.eq	bf40 <omp_is_initial_device@@OMP_4.0+0x218>  // b.none
    bf08:	ldr	x0, [x3, #72]
    bf0c:	str	x0, [x7]
    bf10:	ldr	x0, [x3, #16]
    bf14:	str	x0, [x1]
    bf18:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bf1c:	ldr	x0, [x0, #4016]
    bf20:	mrs	x1, tpidr_el0
    bf24:	add	x0, x1, x0
    bf28:	mov	x1, #0xffffffffffffffff    	// #-1
    bf2c:	str	x1, [x0, #72]
    bf30:	ldr	x1, [x3, #72]
    bf34:	ldr	x0, [x3, #16]
    bf38:	cmp	x1, x0
    bf3c:	cset	w0, eq  // eq = none
    bf40:	ret
    bf44:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bf48:	ldr	x2, [x2, #4016]
    bf4c:	mrs	x3, tpidr_el0
    bf50:	add	x2, x3, x2
    bf54:	ldr	x3, [x2, #24]
    bf58:	ldr	x4, [x3, #72]
    bf5c:	ldr	x2, [x3, #16]
    bf60:	cmp	x2, x4
    bf64:	b.eq	bfa4 <omp_is_initial_device@@OMP_4.0+0x27c>  // b.none
    bf68:	ldr	x6, [x3, #8]
    bf6c:	sub	x2, x2, x4
    bf70:	ldr	x7, [x3, #24]
    bf74:	cmp	x6, x2
    bf78:	csel	x5, x6, x2, le
    bf7c:	tbnz	x7, #63, bf98 <omp_is_initial_device@@OMP_4.0+0x270>
    bf80:	add	x2, x5, x4
    bf84:	str	x2, [x3, #72]
    bf88:	str	x4, [x0]
    bf8c:	str	x2, [x1]
    bf90:	mov	w0, #0x1                   	// #1
    bf94:	ret
    bf98:	cmp	x6, x2
    bf9c:	csel	x5, x6, x2, ge  // ge = tcont
    bfa0:	b	bf80 <omp_is_initial_device@@OMP_4.0+0x258>
    bfa4:	mov	w0, #0x0                   	// #0
    bfa8:	b	bf94 <omp_is_initial_device@@OMP_4.0+0x26c>
    bfac:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    bfb0:	ldr	x2, [x2, #4016]
    bfb4:	mrs	x3, tpidr_el0
    bfb8:	add	x2, x3, x2
    bfbc:	ldr	x2, [x2, #24]
    bfc0:	ldr	x4, [x2, #16]
    bfc4:	ldr	x6, [x2, #24]
    bfc8:	ldr	x3, [x2, #8]
    bfcc:	ldr	w5, [x2, #4]
    bfd0:	cbz	w5, c048 <omp_is_initial_device@@OMP_4.0+0x320>
    bfd4:	add	x2, x2, #0x48
    bfd8:	ldxr	x5, [x2]
    bfdc:	add	x7, x5, x3
    bfe0:	stlxr	w8, x7, [x2]
    bfe4:	cbnz	w8, bfd8 <omp_is_initial_device@@OMP_4.0+0x2b0>
    bfe8:	dmb	ish
    bfec:	cmp	x6, #0x0
    bff0:	b.le	c020 <omp_is_initial_device@@OMP_4.0+0x2f8>
    bff4:	mov	w2, #0x0                   	// #0
    bff8:	cmp	x4, x5
    bffc:	b.le	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>
    c000:	add	x3, x3, x5
    c004:	str	x5, [x0]
    c008:	cmp	x4, x3
    c00c:	csel	x3, x4, x3, le
    c010:	str	x3, [x1]
    c014:	mov	w2, #0x1                   	// #1
    c018:	mov	w0, w2
    c01c:	ret
    c020:	mov	w2, #0x0                   	// #0
    c024:	cmp	x4, x5
    c028:	b.ge	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>  // b.tcont
    c02c:	add	x3, x3, x5
    c030:	str	x5, [x0]
    c034:	cmp	x4, x3
    c038:	csel	x3, x4, x3, ge  // ge = tcont
    c03c:	str	x3, [x1]
    c040:	mov	w2, #0x1                   	// #1
    c044:	b	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>
    c048:	add	x2, x2, #0x48
    c04c:	ldr	x5, [x2]
    c050:	sub	x7, x4, x5
    c054:	cmp	x5, x4
    c058:	b.eq	c0b0 <omp_is_initial_device@@OMP_4.0+0x388>  // b.none
    c05c:	tbnz	x6, #63, c0a4 <omp_is_initial_device@@OMP_4.0+0x37c>
    c060:	cmp	x3, x7
    c064:	csel	x3, x3, x7, le
    c068:	add	x8, x5, x3
    c06c:	ldxr	x7, [x2]
    c070:	cmp	x7, x5
    c074:	b.ne	c080 <omp_is_initial_device@@OMP_4.0+0x358>  // b.any
    c078:	stlxr	w9, x8, [x2]
    c07c:	cbnz	w9, c06c <omp_is_initial_device@@OMP_4.0+0x344>
    c080:	dmb	ish
    c084:	cmp	x5, x7
    c088:	b.ne	c09c <omp_is_initial_device@@OMP_4.0+0x374>  // b.any
    c08c:	str	x7, [x0]
    c090:	str	x8, [x1]
    c094:	mov	w2, #0x1                   	// #1
    c098:	b	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>
    c09c:	mov	x5, x7
    c0a0:	b	c050 <omp_is_initial_device@@OMP_4.0+0x328>
    c0a4:	cmp	x3, x7
    c0a8:	csel	x3, x3, x7, ge  // ge = tcont
    c0ac:	b	c068 <omp_is_initial_device@@OMP_4.0+0x340>
    c0b0:	mov	w2, #0x0                   	// #0
    c0b4:	b	c018 <omp_is_initial_device@@OMP_4.0+0x2f0>
    c0b8:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c0bc:	ldr	x2, [x2, #4016]
    c0c0:	mrs	x3, tpidr_el0
    c0c4:	add	x2, x3, x2
    c0c8:	ldr	x4, [x2, #24]
    c0cc:	ldr	x2, [x2, #16]
    c0d0:	mov	x5, #0x1                   	// #1
    c0d4:	cbz	x2, c0dc <omp_is_initial_device@@OMP_4.0+0x3b4>
    c0d8:	ldr	w5, [x2]
    c0dc:	ldr	x6, [x4, #72]
    c0e0:	ldr	x2, [x4, #16]
    c0e4:	mov	w3, #0x0                   	// #0
    c0e8:	cmp	x6, x2
    c0ec:	b.eq	c130 <omp_is_initial_device@@OMP_4.0+0x408>  // b.none
    c0f0:	ldr	x7, [x4, #24]
    c0f4:	sub	x8, x2, x6
    c0f8:	sdiv	x8, x8, x7
    c0fc:	sub	x3, x8, #0x1
    c100:	add	x3, x3, x5
    c104:	udiv	x3, x3, x5
    c108:	ldr	x5, [x4, #8]
    c10c:	cmp	x5, x3
    c110:	csel	x3, x5, x3, cs  // cs = hs, nlast
    c114:	madd	x7, x7, x3, x6
    c118:	cmp	x3, x8
    c11c:	csel	x2, x7, x2, ls  // ls = plast
    c120:	str	x2, [x4, #72]
    c124:	str	x6, [x0]
    c128:	str	x2, [x1]
    c12c:	mov	w3, #0x1                   	// #1
    c130:	mov	w0, w3
    c134:	ret
    c138:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c13c:	ldr	x3, [x3, #4016]
    c140:	mrs	x2, tpidr_el0
    c144:	add	x3, x2, x3
    c148:	ldr	x2, [x3, #24]
    c14c:	ldr	x3, [x3, #16]
    c150:	mov	x8, #0x1                   	// #1
    c154:	cbz	x3, c15c <omp_is_initial_device@@OMP_4.0+0x434>
    c158:	ldr	w8, [x3]
    c15c:	add	x7, x2, #0x48
    c160:	ldr	x3, [x7]
    c164:	ldr	x6, [x2, #16]
    c168:	ldr	x10, [x2, #24]
    c16c:	ldr	x9, [x2, #8]
    c170:	sub	x12, x8, #0x1
    c174:	mov	x11, x6
    c178:	cmp	x3, x6
    c17c:	b.eq	c1dc <omp_is_initial_device@@OMP_4.0+0x4b4>  // b.none
    c180:	sub	x4, x6, x3
    c184:	sdiv	x4, x4, x10
    c188:	add	x2, x12, x4
    c18c:	udiv	x2, x2, x8
    c190:	cmp	x9, x2
    c194:	csel	x2, x9, x2, cs  // cs = hs, nlast
    c198:	madd	x5, x10, x2, x3
    c19c:	cmp	x2, x4
    c1a0:	csel	x2, x5, x11, ls  // ls = plast
    c1a4:	ldxr	x4, [x7]
    c1a8:	cmp	x4, x3
    c1ac:	b.ne	c1b8 <omp_is_initial_device@@OMP_4.0+0x490>  // b.any
    c1b0:	stlxr	w5, x2, [x7]
    c1b4:	cbnz	w5, c1a4 <omp_is_initial_device@@OMP_4.0+0x47c>
    c1b8:	dmb	ish
    c1bc:	cmp	x3, x4
    c1c0:	b.ne	c1d4 <omp_is_initial_device@@OMP_4.0+0x4ac>  // b.any
    c1c4:	str	x4, [x0]
    c1c8:	str	x2, [x1]
    c1cc:	mov	w0, #0x1                   	// #1
    c1d0:	ret
    c1d4:	mov	x3, x4
    c1d8:	b	c178 <omp_is_initial_device@@OMP_4.0+0x450>
    c1dc:	mov	w0, #0x0                   	// #0
    c1e0:	b	c1d0 <omp_is_initial_device@@OMP_4.0+0x4a8>
    c1e4:	mov	x7, x0
    c1e8:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c1ec:	ldr	x2, [x2, #4016]
    c1f0:	mrs	x3, tpidr_el0
    c1f4:	add	x2, x3, x2
    c1f8:	ldr	x3, [x2, #16]
    c1fc:	ldr	x2, [x2, #24]
    c200:	cbz	x3, c3fc <omp_is_initial_device@@OMP_4.0+0x6d4>
    c204:	ldr	w6, [x3]
    c208:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c20c:	ldr	x4, [x4, #4016]
    c210:	mrs	x5, tpidr_el0
    c214:	add	x4, x5, x4
    c218:	ldr	x3, [x4, #72]
    c21c:	cmn	x3, #0x1
    c220:	b.eq	c3f4 <omp_is_initial_device@@OMP_4.0+0x6cc>  // b.none
    c224:	cmp	x6, #0x1
    c228:	b.eq	c41c <omp_is_initial_device@@OMP_4.0+0x6f4>  // b.none
    c22c:	ldr	x5, [x2, #8]
    c230:	cbnz	x5, c31c <omp_is_initial_device@@OMP_4.0+0x5f4>
    c234:	mov	w0, #0x1                   	// #1
    c238:	cbnz	x3, c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c23c:	ldr	w0, [x2, #4]
    c240:	cbnz	w0, c2b8 <omp_is_initial_device@@OMP_4.0+0x590>
    c244:	ldr	x5, [x2, #24]
    c248:	ldr	x0, [x2, #16]
    c24c:	add	x0, x5, x0
    c250:	ldr	x4, [x2, #72]
    c254:	mvn	x4, x4
    c258:	add	x0, x0, x4
    c25c:	udiv	x0, x0, x5
    c260:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c264:	ldr	x4, [x4, #4016]
    c268:	mrs	x5, tpidr_el0
    c26c:	add	x4, x5, x4
    c270:	ldr	w5, [x4, #40]
    c274:	udiv	x4, x0, x6
    c278:	msub	x6, x4, x6, x0
    c27c:	cmp	x5, x6
    c280:	b.cs	c28c <omp_is_initial_device@@OMP_4.0+0x564>  // b.hs, b.nlast
    c284:	add	x4, x4, #0x1
    c288:	mov	x6, x3
    c28c:	madd	x3, x4, x5, x6
    c290:	add	x4, x4, x3
    c294:	cmp	x3, x4
    c298:	b.cc	c2dc <omp_is_initial_device@@OMP_4.0+0x5b4>  // b.lo, b.ul, b.last
    c29c:	mov	x0, #0x1                   	// #1
    c2a0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c2a4:	ldr	x1, [x1, #4016]
    c2a8:	mrs	x2, tpidr_el0
    c2ac:	add	x1, x2, x1
    c2b0:	str	x0, [x1, #72]
    c2b4:	b	c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c2b8:	ldr	x4, [x2, #24]
    c2bc:	ldr	x0, [x2, #72]
    c2c0:	sub	x0, x0, #0x1
    c2c4:	ldr	x5, [x2, #16]
    c2c8:	add	x5, x4, x5
    c2cc:	sub	x0, x0, x5
    c2d0:	neg	x4, x4
    c2d4:	udiv	x0, x0, x4
    c2d8:	b	c260 <omp_is_initial_device@@OMP_4.0+0x538>
    c2dc:	ldr	x5, [x2, #24]
    c2e0:	ldr	x2, [x2, #72]
    c2e4:	madd	x3, x5, x3, x2
    c2e8:	str	x3, [x7]
    c2ec:	madd	x5, x5, x4, x2
    c2f0:	str	x5, [x1]
    c2f4:	mov	x1, #0x1                   	// #1
    c2f8:	cmp	x0, x4
    c2fc:	cneg	x1, x1, eq  // eq = none
    c300:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c304:	ldr	x0, [x0, #4016]
    c308:	mrs	x2, tpidr_el0
    c30c:	add	x0, x2, x0
    c310:	str	x1, [x0, #72]
    c314:	mov	w0, #0x0                   	// #0
    c318:	b	c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c31c:	ldr	w0, [x2, #4]
    c320:	cbnz	w0, c3b4 <omp_is_initial_device@@OMP_4.0+0x68c>
    c324:	ldr	x8, [x2, #24]
    c328:	ldr	x4, [x2, #16]
    c32c:	add	x4, x8, x4
    c330:	ldr	x0, [x2, #72]
    c334:	mvn	x0, x0
    c338:	add	x4, x4, x0
    c33c:	udiv	x4, x4, x8
    c340:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c344:	ldr	x0, [x0, #4016]
    c348:	mrs	x8, tpidr_el0
    c34c:	add	x0, x8, x0
    c350:	ldr	w0, [x0, #40]
    c354:	madd	x3, x3, x6, x0
    c358:	mul	x3, x3, x5
    c35c:	mov	w0, #0x1                   	// #1
    c360:	cmp	x4, x3
    c364:	b.ls	c454 <omp_is_initial_device@@OMP_4.0+0x72c>  // b.plast
    c368:	add	x5, x5, x3
    c36c:	ldr	x6, [x2, #24]
    c370:	ldr	x2, [x2, #72]
    c374:	madd	x3, x6, x3, x2
    c378:	str	x3, [x7]
    c37c:	cmp	x4, x5
    c380:	csel	x0, x4, x5, ls  // ls = plast
    c384:	madd	x0, x0, x6, x2
    c388:	str	x0, [x1]
    c38c:	b.ls	c3d8 <omp_is_initial_device@@OMP_4.0+0x6b0>  // b.plast
    c390:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c394:	ldr	x0, [x0, #4016]
    c398:	mrs	x1, tpidr_el0
    c39c:	add	x0, x1, x0
    c3a0:	ldr	x1, [x0, #72]
    c3a4:	add	x1, x1, #0x1
    c3a8:	str	x1, [x0, #72]
    c3ac:	mov	w0, #0x0                   	// #0
    c3b0:	b	c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c3b4:	ldr	x0, [x2, #24]
    c3b8:	ldr	x4, [x2, #72]
    c3bc:	sub	x4, x4, #0x1
    c3c0:	ldr	x8, [x2, #16]
    c3c4:	add	x8, x0, x8
    c3c8:	sub	x4, x4, x8
    c3cc:	neg	x0, x0
    c3d0:	udiv	x4, x4, x0
    c3d4:	b	c340 <omp_is_initial_device@@OMP_4.0+0x618>
    c3d8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c3dc:	ldr	x0, [x0, #4016]
    c3e0:	add	x0, x8, x0
    c3e4:	mov	x1, #0xffffffffffffffff    	// #-1
    c3e8:	str	x1, [x0, #72]
    c3ec:	mov	w0, #0x0                   	// #0
    c3f0:	b	c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c3f4:	mov	w0, #0xffffffff            	// #-1
    c3f8:	b	c454 <omp_is_initial_device@@OMP_4.0+0x72c>
    c3fc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c400:	ldr	x0, [x0, #4016]
    c404:	mrs	x3, tpidr_el0
    c408:	add	x0, x3, x0
    c40c:	ldr	x3, [x0, #72]
    c410:	mov	w0, #0xffffffff            	// #-1
    c414:	cmn	x3, #0x1
    c418:	b.eq	c454 <omp_is_initial_device@@OMP_4.0+0x72c>  // b.none
    c41c:	ldr	x0, [x2, #72]
    c420:	str	x0, [x7]
    c424:	ldr	x0, [x2, #16]
    c428:	str	x0, [x1]
    c42c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c430:	ldr	x0, [x0, #4016]
    c434:	mrs	x1, tpidr_el0
    c438:	add	x0, x1, x0
    c43c:	mov	x1, #0xffffffffffffffff    	// #-1
    c440:	str	x1, [x0, #72]
    c444:	ldr	x1, [x2, #72]
    c448:	ldr	x0, [x2, #16]
    c44c:	cmp	x1, x0
    c450:	cset	w0, eq  // eq = none
    c454:	ret
    c458:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c45c:	ldr	x2, [x2, #4016]
    c460:	mrs	x3, tpidr_el0
    c464:	add	x2, x3, x2
    c468:	ldr	x2, [x2, #24]
    c46c:	ldr	x4, [x2, #72]
    c470:	ldr	x3, [x2, #16]
    c474:	cmp	x3, x4
    c478:	b.eq	c4b8 <omp_is_initial_device@@OMP_4.0+0x790>  // b.none
    c47c:	ldr	x6, [x2, #8]
    c480:	sub	x3, x3, x4
    c484:	ldr	w7, [x2, #4]
    c488:	cmp	x6, x3
    c48c:	csel	x5, x6, x3, ls  // ls = plast
    c490:	tbnz	w7, #1, c4ac <omp_is_initial_device@@OMP_4.0+0x784>
    c494:	add	x3, x5, x4
    c498:	str	x3, [x2, #72]
    c49c:	str	x4, [x0]
    c4a0:	str	x3, [x1]
    c4a4:	mov	w0, #0x1                   	// #1
    c4a8:	ret
    c4ac:	cmp	x6, x3
    c4b0:	csel	x5, x6, x3, cs  // cs = hs, nlast
    c4b4:	b	c494 <omp_is_initial_device@@OMP_4.0+0x76c>
    c4b8:	mov	w0, #0x0                   	// #0
    c4bc:	b	c4a8 <omp_is_initial_device@@OMP_4.0+0x780>
    c4c0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c4c4:	ldr	x2, [x2, #4016]
    c4c8:	mrs	x3, tpidr_el0
    c4cc:	add	x2, x3, x2
    c4d0:	ldr	x2, [x2, #24]
    c4d4:	ldr	x4, [x2, #16]
    c4d8:	ldr	x3, [x2, #8]
    c4dc:	ldr	w5, [x2, #4]
    c4e0:	tbz	w5, #0, c558 <omp_is_initial_device@@OMP_4.0+0x830>
    c4e4:	add	x5, x2, #0x48
    c4e8:	ldxr	x6, [x5]
    c4ec:	add	x7, x6, x3
    c4f0:	stlxr	w8, x7, [x5]
    c4f4:	cbnz	w8, c4e8 <omp_is_initial_device@@OMP_4.0+0x7c0>
    c4f8:	dmb	ish
    c4fc:	ldr	w2, [x2, #4]
    c500:	tbnz	w2, #1, c530 <omp_is_initial_device@@OMP_4.0+0x808>
    c504:	mov	w2, #0x0                   	// #0
    c508:	cmp	x4, x6
    c50c:	b.ls	c528 <omp_is_initial_device@@OMP_4.0+0x800>  // b.plast
    c510:	add	x3, x3, x6
    c514:	str	x6, [x0]
    c518:	cmp	x4, x3
    c51c:	csel	x3, x4, x3, ls  // ls = plast
    c520:	str	x3, [x1]
    c524:	mov	w2, #0x1                   	// #1
    c528:	mov	w0, w2
    c52c:	ret
    c530:	mov	w2, #0x0                   	// #0
    c534:	cmp	x4, x6
    c538:	b.cs	c528 <omp_is_initial_device@@OMP_4.0+0x800>  // b.hs, b.nlast
    c53c:	add	x2, x3, x6
    c540:	str	x6, [x0]
    c544:	cmp	x4, x2
    c548:	csel	x3, x4, x2, cs  // cs = hs, nlast
    c54c:	str	x3, [x1]
    c550:	mov	w2, #0x1                   	// #1
    c554:	b	c528 <omp_is_initial_device@@OMP_4.0+0x800>
    c558:	add	x6, x2, #0x48
    c55c:	ldr	x5, [x6]
    c560:	sub	x7, x4, x5
    c564:	cmp	x5, x4
    c568:	b.eq	c5c4 <omp_is_initial_device@@OMP_4.0+0x89c>  // b.none
    c56c:	ldr	w8, [x2, #4]
    c570:	tbnz	w8, #1, c5b8 <omp_is_initial_device@@OMP_4.0+0x890>
    c574:	cmp	x3, x7
    c578:	csel	x3, x3, x7, ls  // ls = plast
    c57c:	add	x8, x5, x3
    c580:	ldxr	x7, [x6]
    c584:	cmp	x7, x5
    c588:	b.ne	c594 <omp_is_initial_device@@OMP_4.0+0x86c>  // b.any
    c58c:	stlxr	w9, x8, [x6]
    c590:	cbnz	w9, c580 <omp_is_initial_device@@OMP_4.0+0x858>
    c594:	dmb	ish
    c598:	cmp	x5, x7
    c59c:	b.ne	c5b0 <omp_is_initial_device@@OMP_4.0+0x888>  // b.any
    c5a0:	str	x7, [x0]
    c5a4:	str	x8, [x1]
    c5a8:	mov	w2, #0x1                   	// #1
    c5ac:	b	c528 <omp_is_initial_device@@OMP_4.0+0x800>
    c5b0:	mov	x5, x7
    c5b4:	b	c560 <omp_is_initial_device@@OMP_4.0+0x838>
    c5b8:	cmp	x3, x7
    c5bc:	csel	x3, x3, x7, cs  // cs = hs, nlast
    c5c0:	b	c57c <omp_is_initial_device@@OMP_4.0+0x854>
    c5c4:	mov	w2, #0x0                   	// #0
    c5c8:	b	c528 <omp_is_initial_device@@OMP_4.0+0x800>
    c5cc:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c5d0:	ldr	x3, [x3, #4016]
    c5d4:	mrs	x2, tpidr_el0
    c5d8:	add	x3, x2, x3
    c5dc:	ldr	x2, [x3, #24]
    c5e0:	ldr	x3, [x3, #16]
    c5e4:	mov	x6, #0x1                   	// #1
    c5e8:	cbz	x3, c5f0 <omp_is_initial_device@@OMP_4.0+0x8c8>
    c5ec:	ldr	w6, [x3]
    c5f0:	ldr	x7, [x2, #72]
    c5f4:	ldr	x3, [x2, #16]
    c5f8:	mov	w4, #0x0                   	// #0
    c5fc:	cmp	x7, x3
    c600:	b.eq	c650 <omp_is_initial_device@@OMP_4.0+0x928>  // b.none
    c604:	ldr	w4, [x2, #4]
    c608:	cbnz	w4, c658 <omp_is_initial_device@@OMP_4.0+0x930>
    c60c:	sub	x4, x3, x7
    c610:	ldr	x5, [x2, #24]
    c614:	udiv	x4, x4, x5
    c618:	sub	x5, x6, #0x1
    c61c:	add	x5, x5, x4
    c620:	udiv	x5, x5, x6
    c624:	ldr	x6, [x2, #8]
    c628:	cmp	x6, x5
    c62c:	csel	x5, x6, x5, cs  // cs = hs, nlast
    c630:	cmp	x4, x5
    c634:	b.cc	c640 <omp_is_initial_device@@OMP_4.0+0x918>  // b.lo, b.ul, b.last
    c638:	ldr	x3, [x2, #24]
    c63c:	madd	x3, x5, x3, x7
    c640:	str	x3, [x2, #72]
    c644:	str	x7, [x0]
    c648:	str	x3, [x1]
    c64c:	mov	w4, #0x1                   	// #1
    c650:	mov	w0, w4
    c654:	ret
    c658:	sub	x4, x7, x3
    c65c:	ldr	x5, [x2, #24]
    c660:	neg	x5, x5
    c664:	udiv	x4, x4, x5
    c668:	b	c618 <omp_is_initial_device@@OMP_4.0+0x8f0>
    c66c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c670:	ldr	x2, [x2, #4016]
    c674:	mrs	x3, tpidr_el0
    c678:	add	x2, x3, x2
    c67c:	ldr	x4, [x2, #24]
    c680:	ldr	x2, [x2, #16]
    c684:	mov	x10, #0x1                   	// #1
    c688:	cbz	x2, c690 <omp_is_initial_device@@OMP_4.0+0x968>
    c68c:	ldr	w10, [x2]
    c690:	add	x8, x4, #0x48
    c694:	ldr	x3, [x8]
    c698:	ldr	x7, [x4, #16]
    c69c:	ldr	x9, [x4, #24]
    c6a0:	ldr	x11, [x4, #8]
    c6a4:	neg	x14, x9
    c6a8:	sub	x13, x10, #0x1
    c6ac:	mov	x12, x7
    c6b0:	cmp	x3, x7
    c6b4:	b.eq	c728 <omp_is_initial_device@@OMP_4.0+0xa00>  // b.none
    c6b8:	ldr	w2, [x4, #4]
    c6bc:	cbnz	w2, c71c <omp_is_initial_device@@OMP_4.0+0x9f4>
    c6c0:	sub	x5, x7, x3
    c6c4:	udiv	x5, x5, x9
    c6c8:	add	x2, x13, x5
    c6cc:	udiv	x2, x2, x10
    c6d0:	cmp	x11, x2
    c6d4:	csel	x2, x11, x2, cs  // cs = hs, nlast
    c6d8:	madd	x6, x2, x9, x3
    c6dc:	cmp	x5, x2
    c6e0:	csel	x2, x6, x12, cs  // cs = hs, nlast
    c6e4:	ldxr	x5, [x8]
    c6e8:	cmp	x5, x3
    c6ec:	b.ne	c6f8 <omp_is_initial_device@@OMP_4.0+0x9d0>  // b.any
    c6f0:	stlxr	w6, x2, [x8]
    c6f4:	cbnz	w6, c6e4 <omp_is_initial_device@@OMP_4.0+0x9bc>
    c6f8:	dmb	ish
    c6fc:	cmp	x3, x5
    c700:	b.ne	c714 <omp_is_initial_device@@OMP_4.0+0x9ec>  // b.any
    c704:	str	x5, [x0]
    c708:	str	x2, [x1]
    c70c:	mov	w0, #0x1                   	// #1
    c710:	ret
    c714:	mov	x3, x5
    c718:	b	c6b0 <omp_is_initial_device@@OMP_4.0+0x988>
    c71c:	sub	x5, x3, x7
    c720:	udiv	x5, x5, x14
    c724:	b	c6c8 <omp_is_initial_device@@OMP_4.0+0x9a0>
    c728:	mov	w0, #0x0                   	// #0
    c72c:	b	c710 <omp_is_initial_device@@OMP_4.0+0x9e8>
    c730:	stp	x29, x30, [sp, #-16]!
    c734:	mov	x29, sp
    c738:	mov	x2, x0
    c73c:	and	x0, x0, #0x7fffffff
    c740:	tst	x2, #0x7ffffffc
    c744:	b.ne	c750 <omp_is_initial_device@@OMP_4.0+0xa28>  // b.any
    c748:	cbz	x0, c758 <omp_is_initial_device@@OMP_4.0+0xa30>
    c74c:	b	c7a0 <omp_is_initial_device@@OMP_4.0+0xa78>
    c750:	cmp	x0, #0x4
    c754:	b.ne	c7c0 <omp_is_initial_device@@OMP_4.0+0xa98>  // b.any
    c758:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c75c:	ldr	x0, [x0, #4016]
    c760:	mrs	x2, tpidr_el0
    c764:	add	x0, x2, x0
    c768:	ldr	x0, [x0, #80]
    c76c:	add	x3, x0, #0x90
    c770:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    c774:	add	x2, x2, #0x2b8
    c778:	cmp	x0, #0x0
    c77c:	csel	x2, x2, x3, eq  // eq = none
    c780:	ldr	w3, [x2, #8]
    c784:	and	w0, w3, #0x7fffffff
    c788:	tst	w3, #0x7ffffffc
    c78c:	b.ne	c7a8 <omp_is_initial_device@@OMP_4.0+0xa80>  // b.any
    c790:	cbz	w0, c7bc <omp_is_initial_device@@OMP_4.0+0xa94>
    c794:	mov	w0, w0
    c798:	ldrsw	x2, [x2, #12]
    c79c:	str	x2, [x1]
    c7a0:	ldp	x29, x30, [sp], #16
    c7a4:	ret
    c7a8:	cmp	w0, #0x4
    c7ac:	b.ne	c7bc <omp_is_initial_device@@OMP_4.0+0xa94>  // b.any
    c7b0:	str	xzr, [x1]
    c7b4:	mov	x0, #0x1                   	// #1
    c7b8:	b	c7a0 <omp_is_initial_device@@OMP_4.0+0xa78>
    c7bc:	bl	8870 <abort@plt>
    c7c0:	bl	8870 <abort@plt>
    c7c4:	stp	x29, x30, [sp, #-80]!
    c7c8:	mov	x29, sp
    c7cc:	stp	x19, x20, [sp, #16]
    c7d0:	stp	x21, x22, [sp, #32]
    c7d4:	stp	x23, x24, [sp, #48]
    c7d8:	stp	x25, x26, [sp, #64]
    c7dc:	mov	x21, x0
    c7e0:	mov	x22, x1
    c7e4:	mov	w0, w2
    c7e8:	mov	x24, x3
    c7ec:	mov	x19, x4
    c7f0:	mov	x25, x5
    c7f4:	mov	w26, w6
    c7f8:	mov	x20, x7
    c7fc:	mov	w1, #0x0                   	// #0
    c800:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
    c804:	mov	w23, w0
    c808:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
    c80c:	mov	x4, x0
    c810:	str	w26, [x0, #256]
    c814:	str	x20, [x0, #264]
    c818:	cmp	x25, #0x0
    c81c:	ccmp	x24, x19, #0x4, gt
    c820:	b.gt	c834 <omp_is_initial_device@@OMP_4.0+0xb0c>
    c824:	cmp	x25, #0x0
    c828:	ccmp	x24, x19, #0x0, lt  // lt = tstop
    c82c:	csel	x19, x19, x24, ge  // ge = tcont
    c830:	b	c838 <omp_is_initial_device@@OMP_4.0+0xb10>
    c834:	mov	x19, x24
    c838:	str	x19, [x4, #272]
    c83c:	str	x25, [x4, #280]
    c840:	str	x24, [x4, #328]
    c844:	cmp	w26, #0x2
    c848:	b.eq	c87c <omp_is_initial_device@@OMP_4.0+0xb54>  // b.none
    c84c:	mov	x5, #0x0                   	// #0
    c850:	ldr	w3, [sp, #80]
    c854:	mov	w2, w23
    c858:	mov	x1, x22
    c85c:	mov	x0, x21
    c860:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
    c864:	ldp	x19, x20, [sp, #16]
    c868:	ldp	x21, x22, [sp, #32]
    c86c:	ldp	x23, x24, [sp, #48]
    c870:	ldp	x25, x26, [sp, #64]
    c874:	ldp	x29, x30, [sp], #80
    c878:	ret
    c87c:	mul	x20, x25, x20
    c880:	str	x20, [x4, #264]
    c884:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c888:	ldr	x0, [x0, #4016]
    c88c:	mrs	x1, tpidr_el0
    c890:	add	x0, x1, x0
    c894:	ldr	x1, [x0, #16]
    c898:	mov	x0, #0x1                   	// #1
    c89c:	cbz	x1, c8a4 <omp_is_initial_device@@OMP_4.0+0xb7c>
    c8a0:	ldr	w0, [x1]
    c8a4:	cmp	x25, #0x0
    c8a8:	b.le	c8e0 <omp_is_initial_device@@OMP_4.0+0xbb8>
    c8ac:	orr	x2, x20, x0
    c8b0:	mov	x1, #0x7fffffff            	// #2147483647
    c8b4:	cmp	x2, x1
    c8b8:	b.hi	c8d8 <omp_is_initial_device@@OMP_4.0+0xbb0>  // b.pmore
    c8bc:	madd	x20, x0, x20, x20
    c8c0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    c8c4:	sub	x20, x0, x20
    c8c8:	cmp	x19, x20
    c8cc:	cset	w0, lt  // lt = tstop
    c8d0:	str	w0, [x4, #260]
    c8d4:	b	c84c <omp_is_initial_device@@OMP_4.0+0xb24>
    c8d8:	str	wzr, [x4, #260]
    c8dc:	b	c84c <omp_is_initial_device@@OMP_4.0+0xb24>
    c8e0:	neg	x2, x20
    c8e4:	orr	x3, x0, x2
    c8e8:	mov	x1, #0x7fffffff            	// #2147483647
    c8ec:	cmp	x3, x1
    c8f0:	b.hi	c914 <omp_is_initial_device@@OMP_4.0+0xbec>  // b.pmore
    c8f4:	madd	x2, x0, x2, x2
    c8f8:	mov	x0, #0x2                   	// #2
    c8fc:	movk	x0, #0x8000, lsl #48
    c900:	add	x2, x2, x0
    c904:	cmp	x19, x2
    c908:	cset	w0, ge  // ge = tcont
    c90c:	str	w0, [x4, #260]
    c910:	b	c84c <omp_is_initial_device@@OMP_4.0+0xb24>
    c914:	str	wzr, [x4, #260]
    c918:	b	c84c <omp_is_initial_device@@OMP_4.0+0xb24>

000000000000c91c <GOMP_loop_static_start@@GOMP_1.0>:
    c91c:	stp	x29, x30, [sp, #-64]!
    c920:	mov	x29, sp
    c924:	stp	x19, x20, [sp, #16]
    c928:	stp	x21, x22, [sp, #32]
    c92c:	stp	x23, x24, [sp, #48]
    c930:	mov	x20, x0
    c934:	mov	x19, x1
    c938:	mov	x21, x2
    c93c:	mov	x24, x3
    c940:	mov	x22, x4
    c944:	mov	x23, x5
    c948:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c94c:	ldr	x0, [x0, #4016]
    c950:	mrs	x1, tpidr_el0
    c954:	add	x0, x1, x0
    c958:	str	xzr, [x0, #72]
    c95c:	mov	x0, #0x0                   	// #0
    c960:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    c964:	and	w0, w0, #0xff
    c968:	cbz	w0, c9fc <GOMP_loop_static_start@@GOMP_1.0+0xe0>
    c96c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c970:	ldr	x0, [x0, #4016]
    c974:	mrs	x1, tpidr_el0
    c978:	add	x0, x1, x0
    c97c:	ldr	x0, [x0, #24]
    c980:	mov	w1, #0x1                   	// #1
    c984:	str	w1, [x0]
    c988:	str	x24, [x0, #8]
    c98c:	cmp	x21, #0x0
    c990:	ccmp	x20, x19, #0x4, gt
    c994:	b.gt	c9a8 <GOMP_loop_static_start@@GOMP_1.0+0x8c>
    c998:	cmp	x21, #0x0
    c99c:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    c9a0:	csel	x19, x19, x20, ge  // ge = tcont
    c9a4:	b	c9ac <GOMP_loop_static_start@@GOMP_1.0+0x90>
    c9a8:	mov	x19, x20
    c9ac:	str	x19, [x0, #16]
    c9b0:	str	x21, [x0, #24]
    c9b4:	str	x20, [x0, #72]
    c9b8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c9bc:	ldr	x0, [x0, #4016]
    c9c0:	mrs	x1, tpidr_el0
    c9c4:	add	x0, x1, x0
    c9c8:	ldr	x0, [x0, #32]
    c9cc:	cbz	x0, c9fc <GOMP_loop_static_start@@GOMP_1.0+0xe0>
    c9d0:	add	x0, x0, #0x50
    c9d4:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    c9d8:	ldr	x1, [x1, #4016]
    c9dc:	mrs	x2, tpidr_el0
    c9e0:	add	x1, x2, x1
    c9e4:	ldr	x2, [x1, #24]
    c9e8:	ldxr	x1, [x0]
    c9ec:	stlxr	w3, x2, [x0]
    c9f0:	cbnz	w3, c9e8 <GOMP_loop_static_start@@GOMP_1.0+0xcc>
    c9f4:	cmp	x1, #0x1
    c9f8:	b.ne	ca24 <GOMP_loop_static_start@@GOMP_1.0+0x108>  // b.any
    c9fc:	mov	x1, x23
    ca00:	mov	x0, x22
    ca04:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    ca08:	cmp	w0, #0x0
    ca0c:	cset	w0, eq  // eq = none
    ca10:	ldp	x19, x20, [sp, #16]
    ca14:	ldp	x21, x22, [sp, #32]
    ca18:	ldp	x23, x24, [sp, #48]
    ca1c:	ldp	x29, x30, [sp], #64
    ca20:	ret
    ca24:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ca28:	b	c9fc <GOMP_loop_static_start@@GOMP_1.0+0xe0>

000000000000ca2c <GOMP_loop_dynamic_start@@GOMP_1.0>:
    ca2c:	stp	x29, x30, [sp, #-64]!
    ca30:	mov	x29, sp
    ca34:	stp	x19, x20, [sp, #16]
    ca38:	stp	x21, x22, [sp, #32]
    ca3c:	stp	x23, x24, [sp, #48]
    ca40:	mov	x24, x0
    ca44:	mov	x20, x1
    ca48:	mov	x23, x2
    ca4c:	mov	x19, x3
    ca50:	mov	x21, x4
    ca54:	mov	x22, x5
    ca58:	mov	x0, #0x0                   	// #0
    ca5c:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    ca60:	and	w3, w0, #0xff
    ca64:	cbnz	w3, ca88 <GOMP_loop_dynamic_start@@GOMP_1.0+0x5c>
    ca68:	mov	x1, x22
    ca6c:	mov	x0, x21
    ca70:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
    ca74:	ldp	x19, x20, [sp, #16]
    ca78:	ldp	x21, x22, [sp, #32]
    ca7c:	ldp	x23, x24, [sp, #48]
    ca80:	ldp	x29, x30, [sp], #64
    ca84:	ret
    ca88:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ca8c:	ldr	x0, [x0, #4016]
    ca90:	mrs	x1, tpidr_el0
    ca94:	add	x0, x1, x0
    ca98:	ldr	x1, [x0, #24]
    ca9c:	mov	w0, #0x2                   	// #2
    caa0:	str	w0, [x1]
    caa4:	str	x19, [x1, #8]
    caa8:	cmp	x23, #0x0
    caac:	ccmp	x24, x20, #0x4, gt
    cab0:	b.gt	cbb4 <GOMP_loop_dynamic_start@@GOMP_1.0+0x188>
    cab4:	cmp	x23, #0x0
    cab8:	ccmp	x24, x20, #0x0, lt  // lt = tstop
    cabc:	csel	x20, x20, x24, ge  // ge = tcont
    cac0:	str	x20, [x1, #16]
    cac4:	str	x23, [x1, #24]
    cac8:	str	x24, [x1, #72]
    cacc:	mul	x19, x23, x19
    cad0:	str	x19, [x1, #8]
    cad4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cad8:	ldr	x0, [x0, #4016]
    cadc:	mrs	x2, tpidr_el0
    cae0:	add	x0, x2, x0
    cae4:	ldr	x0, [x0, #16]
    cae8:	mov	x2, #0x1                   	// #1
    caec:	cbz	x0, caf4 <GOMP_loop_dynamic_start@@GOMP_1.0+0xc8>
    caf0:	ldr	w2, [x0]
    caf4:	cmp	x23, #0x0
    caf8:	b.le	cb78 <GOMP_loop_dynamic_start@@GOMP_1.0+0x14c>
    cafc:	orr	x3, x19, x2
    cb00:	mov	x0, #0x7fffffff            	// #2147483647
    cb04:	cmp	x3, x0
    cb08:	b.hi	cb70 <GOMP_loop_dynamic_start@@GOMP_1.0+0x144>  // b.pmore
    cb0c:	madd	x19, x2, x19, x19
    cb10:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    cb14:	sub	x19, x0, x19
    cb18:	cmp	x20, x19
    cb1c:	cset	w0, lt  // lt = tstop
    cb20:	str	w0, [x1, #4]
    cb24:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cb28:	ldr	x0, [x0, #4016]
    cb2c:	mrs	x1, tpidr_el0
    cb30:	add	x0, x1, x0
    cb34:	ldr	x0, [x0, #32]
    cb38:	cbz	x0, ca68 <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>
    cb3c:	add	x0, x0, #0x50
    cb40:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cb44:	ldr	x1, [x1, #4016]
    cb48:	mrs	x2, tpidr_el0
    cb4c:	add	x1, x2, x1
    cb50:	ldr	x2, [x1, #24]
    cb54:	ldxr	x1, [x0]
    cb58:	stlxr	w3, x2, [x0]
    cb5c:	cbnz	w3, cb54 <GOMP_loop_dynamic_start@@GOMP_1.0+0x128>
    cb60:	cmp	x1, #0x1
    cb64:	b.eq	ca68 <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>  // b.none
    cb68:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    cb6c:	b	ca68 <GOMP_loop_dynamic_start@@GOMP_1.0+0x3c>
    cb70:	str	wzr, [x1, #4]
    cb74:	b	cb24 <GOMP_loop_dynamic_start@@GOMP_1.0+0xf8>
    cb78:	neg	x0, x19
    cb7c:	orr	x4, x2, x0
    cb80:	mov	x3, #0x7fffffff            	// #2147483647
    cb84:	cmp	x4, x3
    cb88:	b.hi	cbac <GOMP_loop_dynamic_start@@GOMP_1.0+0x180>  // b.pmore
    cb8c:	madd	x0, x2, x0, x0
    cb90:	mov	x2, #0x2                   	// #2
    cb94:	movk	x2, #0x8000, lsl #48
    cb98:	add	x0, x0, x2
    cb9c:	cmp	x20, x0
    cba0:	cset	w0, ge  // ge = tcont
    cba4:	str	w0, [x1, #4]
    cba8:	b	cb24 <GOMP_loop_dynamic_start@@GOMP_1.0+0xf8>
    cbac:	str	wzr, [x1, #4]
    cbb0:	b	cb24 <GOMP_loop_dynamic_start@@GOMP_1.0+0xf8>
    cbb4:	str	x24, [x1, #16]
    cbb8:	str	x23, [x1, #24]
    cbbc:	str	x24, [x1, #72]
    cbc0:	mul	x19, x23, x19
    cbc4:	str	x19, [x1, #8]
    cbc8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cbcc:	ldr	x0, [x0, #4016]
    cbd0:	mrs	x2, tpidr_el0
    cbd4:	add	x0, x2, x0
    cbd8:	ldr	x0, [x0, #16]
    cbdc:	mov	x20, x24
    cbe0:	mov	x2, #0x1                   	// #1
    cbe4:	cbnz	x0, caf0 <GOMP_loop_dynamic_start@@GOMP_1.0+0xc4>
    cbe8:	b	cafc <GOMP_loop_dynamic_start@@GOMP_1.0+0xd0>

000000000000cbec <GOMP_loop_guided_start@@GOMP_1.0>:
    cbec:	stp	x29, x30, [sp, #-64]!
    cbf0:	mov	x29, sp
    cbf4:	stp	x19, x20, [sp, #16]
    cbf8:	stp	x21, x22, [sp, #32]
    cbfc:	stp	x23, x24, [sp, #48]
    cc00:	mov	x20, x0
    cc04:	mov	x19, x1
    cc08:	mov	x21, x2
    cc0c:	mov	x24, x3
    cc10:	mov	x22, x4
    cc14:	mov	x23, x5
    cc18:	mov	x0, #0x0                   	// #0
    cc1c:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    cc20:	and	w0, w0, #0xff
    cc24:	cbz	w0, ccb8 <GOMP_loop_guided_start@@GOMP_1.0+0xcc>
    cc28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cc2c:	ldr	x0, [x0, #4016]
    cc30:	mrs	x1, tpidr_el0
    cc34:	add	x0, x1, x0
    cc38:	ldr	x0, [x0, #24]
    cc3c:	mov	w1, #0x3                   	// #3
    cc40:	str	w1, [x0]
    cc44:	str	x24, [x0, #8]
    cc48:	cmp	x21, #0x0
    cc4c:	ccmp	x20, x19, #0x4, gt
    cc50:	b.gt	cc64 <GOMP_loop_guided_start@@GOMP_1.0+0x78>
    cc54:	cmp	x21, #0x0
    cc58:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    cc5c:	csel	x19, x19, x20, ge  // ge = tcont
    cc60:	b	cc68 <GOMP_loop_guided_start@@GOMP_1.0+0x7c>
    cc64:	mov	x19, x20
    cc68:	str	x19, [x0, #16]
    cc6c:	str	x21, [x0, #24]
    cc70:	str	x20, [x0, #72]
    cc74:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cc78:	ldr	x0, [x0, #4016]
    cc7c:	mrs	x1, tpidr_el0
    cc80:	add	x0, x1, x0
    cc84:	ldr	x0, [x0, #32]
    cc88:	cbz	x0, ccb8 <GOMP_loop_guided_start@@GOMP_1.0+0xcc>
    cc8c:	add	x0, x0, #0x50
    cc90:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cc94:	ldr	x1, [x1, #4016]
    cc98:	mrs	x2, tpidr_el0
    cc9c:	add	x1, x2, x1
    cca0:	ldr	x2, [x1, #24]
    cca4:	ldxr	x1, [x0]
    cca8:	stlxr	w3, x2, [x0]
    ccac:	cbnz	w3, cca4 <GOMP_loop_guided_start@@GOMP_1.0+0xb8>
    ccb0:	cmp	x1, #0x1
    ccb4:	b.ne	ccd8 <GOMP_loop_guided_start@@GOMP_1.0+0xec>  // b.any
    ccb8:	mov	x1, x23
    ccbc:	mov	x0, x22
    ccc0:	bl	c138 <omp_is_initial_device@@OMP_4.0+0x410>
    ccc4:	ldp	x19, x20, [sp, #16]
    ccc8:	ldp	x21, x22, [sp, #32]
    cccc:	ldp	x23, x24, [sp, #48]
    ccd0:	ldp	x29, x30, [sp], #64
    ccd4:	ret
    ccd8:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ccdc:	b	ccb8 <GOMP_loop_guided_start@@GOMP_1.0+0xcc>

000000000000cce0 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    cce0:	stp	x29, x30, [sp, #-16]!
    cce4:	mov	x29, sp
    cce8:	mov	x5, x4
    ccec:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ccf0:	ldr	x4, [x4, #4016]
    ccf4:	mrs	x6, tpidr_el0
    ccf8:	add	x4, x6, x4
    ccfc:	ldr	x4, [x4, #80]
    cd00:	add	x7, x4, #0x90
    cd04:	adrp	x6, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    cd08:	add	x6, x6, #0x2b8
    cd0c:	cmp	x4, #0x0
    cd10:	csel	x6, x6, x7, eq  // eq = none
    cd14:	ldr	w4, [x6, #8]
    cd18:	and	w7, w4, #0x7fffffff
    cd1c:	cmp	w7, #0x3
    cd20:	b.eq	cd84 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa4>  // b.none
    cd24:	tst	w4, #0x7ffffffc
    cd28:	b.ne	cd50 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x70>  // b.any
    cd2c:	cmp	w7, #0x1
    cd30:	b.eq	cd6c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x8c>  // b.none
    cd34:	cmp	w7, #0x2
    cd38:	b.ne	cd98 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xb8>  // b.any
    cd3c:	mov	x4, x3
    cd40:	ldrsw	x3, [x6, #12]
    cd44:	bl	ca2c <GOMP_loop_dynamic_start@@GOMP_1.0>
    cd48:	and	w0, w0, #0xff
    cd4c:	b	cd7c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x9c>
    cd50:	cmp	w7, #0x4
    cd54:	b.ne	cd98 <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xb8>  // b.any
    cd58:	mov	x4, x3
    cd5c:	mov	x3, #0x0                   	// #0
    cd60:	bl	c91c <GOMP_loop_static_start@@GOMP_1.0>
    cd64:	and	w0, w0, #0xff
    cd68:	b	cd7c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x9c>
    cd6c:	mov	x4, x3
    cd70:	ldrsw	x3, [x6, #12]
    cd74:	bl	c91c <GOMP_loop_static_start@@GOMP_1.0>
    cd78:	and	w0, w0, #0xff
    cd7c:	ldp	x29, x30, [sp], #16
    cd80:	ret
    cd84:	mov	x4, x3
    cd88:	ldrsw	x3, [x6, #12]
    cd8c:	bl	cbec <GOMP_loop_guided_start@@GOMP_1.0>
    cd90:	and	w0, w0, #0xff
    cd94:	b	cd7c <GOMP_loop_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x9c>
    cd98:	bl	8870 <abort@plt>

000000000000cd9c <GOMP_loop_ordered_static_start@@GOMP_1.0>:
    cd9c:	stp	x29, x30, [sp, #-64]!
    cda0:	mov	x29, sp
    cda4:	stp	x19, x20, [sp, #16]
    cda8:	stp	x21, x22, [sp, #32]
    cdac:	stp	x23, x24, [sp, #48]
    cdb0:	mov	x20, x0
    cdb4:	mov	x19, x1
    cdb8:	mov	x21, x2
    cdbc:	mov	x24, x3
    cdc0:	mov	x22, x4
    cdc4:	mov	x23, x5
    cdc8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cdcc:	ldr	x0, [x0, #4016]
    cdd0:	mrs	x1, tpidr_el0
    cdd4:	add	x0, x1, x0
    cdd8:	str	xzr, [x0, #72]
    cddc:	mov	x0, #0x1                   	// #1
    cde0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    cde4:	and	w0, w0, #0xff
    cde8:	cbz	w0, ce80 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xe4>
    cdec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cdf0:	ldr	x0, [x0, #4016]
    cdf4:	mrs	x1, tpidr_el0
    cdf8:	add	x0, x1, x0
    cdfc:	ldr	x0, [x0, #24]
    ce00:	mov	w1, #0x1                   	// #1
    ce04:	str	w1, [x0]
    ce08:	str	x24, [x0, #8]
    ce0c:	cmp	x21, #0x0
    ce10:	ccmp	x20, x19, #0x4, gt
    ce14:	b.gt	ce28 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x8c>
    ce18:	cmp	x21, #0x0
    ce1c:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    ce20:	csel	x19, x19, x20, ge  // ge = tcont
    ce24:	b	ce2c <GOMP_loop_ordered_static_start@@GOMP_1.0+0x90>
    ce28:	mov	x19, x20
    ce2c:	str	x19, [x0, #16]
    ce30:	str	x21, [x0, #24]
    ce34:	str	x20, [x0, #72]
    ce38:	bl	105b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x34c>
    ce3c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ce40:	ldr	x0, [x0, #4016]
    ce44:	mrs	x1, tpidr_el0
    ce48:	add	x0, x1, x0
    ce4c:	ldr	x0, [x0, #32]
    ce50:	cbz	x0, ce80 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xe4>
    ce54:	add	x0, x0, #0x50
    ce58:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ce5c:	ldr	x1, [x1, #4016]
    ce60:	mrs	x2, tpidr_el0
    ce64:	add	x1, x2, x1
    ce68:	ldr	x2, [x1, #24]
    ce6c:	ldxr	x1, [x0]
    ce70:	stlxr	w3, x2, [x0]
    ce74:	cbnz	w3, ce6c <GOMP_loop_ordered_static_start@@GOMP_1.0+0xd0>
    ce78:	cmp	x1, #0x1
    ce7c:	b.ne	cea8 <GOMP_loop_ordered_static_start@@GOMP_1.0+0x10c>  // b.any
    ce80:	mov	x1, x23
    ce84:	mov	x0, x22
    ce88:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    ce8c:	cmp	w0, #0x0
    ce90:	cset	w0, eq  // eq = none
    ce94:	ldp	x19, x20, [sp, #16]
    ce98:	ldp	x21, x22, [sp, #32]
    ce9c:	ldp	x23, x24, [sp, #48]
    cea0:	ldp	x29, x30, [sp], #64
    cea4:	ret
    cea8:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ceac:	b	ce80 <GOMP_loop_ordered_static_start@@GOMP_1.0+0xe4>

000000000000ceb0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>:
    ceb0:	stp	x29, x30, [sp, #-64]!
    ceb4:	mov	x29, sp
    ceb8:	stp	x19, x20, [sp, #16]
    cebc:	stp	x21, x22, [sp, #32]
    cec0:	stp	x23, x24, [sp, #48]
    cec4:	mov	x24, x0
    cec8:	mov	x20, x1
    cecc:	mov	x23, x2
    ced0:	mov	x19, x3
    ced4:	mov	x21, x4
    ced8:	mov	x22, x5
    cedc:	mov	x0, #0x1                   	// #1
    cee0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    cee4:	and	w3, w0, #0xff
    cee8:	cbnz	w3, cf78 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xc8>
    ceec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cef0:	ldr	x0, [x0, #4016]
    cef4:	mrs	x1, tpidr_el0
    cef8:	add	x0, x1, x0
    cefc:	ldr	x0, [x0, #24]
    cf00:	add	x0, x0, #0x40
    cf04:	mov	w2, #0x1                   	// #1
    cf08:	ldaxr	w1, [x0]
    cf0c:	cbnz	w1, cf18 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x68>
    cf10:	stxr	w3, w2, [x0]
    cf14:	cbnz	w3, cf08 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x58>
    cf18:	cmp	w1, #0x0
    cf1c:	b.ne	d0e0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x230>  // b.any
    cf20:	mov	x1, x22
    cf24:	mov	x0, x21
    cf28:	bl	bf44 <omp_is_initial_device@@OMP_4.0+0x21c>
    cf2c:	mov	w19, w0
    cf30:	tst	w0, #0xff
    cf34:	b.ne	d0e8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x238>  // b.any
    cf38:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cf3c:	ldr	x0, [x0, #4016]
    cf40:	mrs	x1, tpidr_el0
    cf44:	add	x0, x1, x0
    cf48:	ldr	x0, [x0, #24]
    cf4c:	add	x0, x0, #0x40
    cf50:	ldxr	w1, [x0]
    cf54:	stlxr	w2, wzr, [x0]
    cf58:	cbnz	w2, cf50 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xa0>
    cf5c:	tbnz	w1, #31, d0f0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x240>
    cf60:	mov	w0, w19
    cf64:	ldp	x19, x20, [sp, #16]
    cf68:	ldp	x21, x22, [sp, #32]
    cf6c:	ldp	x23, x24, [sp, #48]
    cf70:	ldp	x29, x30, [sp], #64
    cf74:	ret
    cf78:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cf7c:	ldr	x0, [x0, #4016]
    cf80:	mrs	x1, tpidr_el0
    cf84:	add	x0, x1, x0
    cf88:	ldr	x1, [x0, #24]
    cf8c:	mov	w0, #0x2                   	// #2
    cf90:	str	w0, [x1]
    cf94:	str	x19, [x1, #8]
    cf98:	cmp	x23, #0x0
    cf9c:	ccmp	x24, x20, #0x4, gt
    cfa0:	b.gt	d0f8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x248>
    cfa4:	cmp	x23, #0x0
    cfa8:	ccmp	x24, x20, #0x0, lt  // lt = tstop
    cfac:	csel	x20, x20, x24, ge  // ge = tcont
    cfb0:	str	x20, [x1, #16]
    cfb4:	str	x23, [x1, #24]
    cfb8:	str	x24, [x1, #72]
    cfbc:	mul	x19, x23, x19
    cfc0:	str	x19, [x1, #8]
    cfc4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    cfc8:	ldr	x0, [x0, #4016]
    cfcc:	mrs	x2, tpidr_el0
    cfd0:	add	x0, x2, x0
    cfd4:	ldr	x0, [x0, #16]
    cfd8:	mov	x2, #0x1                   	// #1
    cfdc:	cbz	x0, cfe4 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x134>
    cfe0:	ldr	w2, [x0]
    cfe4:	cmp	x23, #0x0
    cfe8:	b.le	d09c <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1ec>
    cfec:	orr	x3, x2, x19
    cff0:	mov	x0, #0x7fffffff            	// #2147483647
    cff4:	cmp	x3, x0
    cff8:	b.hi	d094 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1e4>  // b.pmore
    cffc:	madd	x19, x2, x19, x19
    d000:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    d004:	sub	x19, x0, x19
    d008:	cmp	x20, x19
    d00c:	cset	w0, lt  // lt = tstop
    d010:	str	w0, [x1, #4]
    d014:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d018:	ldr	x0, [x0, #4016]
    d01c:	mrs	x1, tpidr_el0
    d020:	add	x0, x1, x0
    d024:	ldr	x0, [x0, #24]
    d028:	add	x0, x0, #0x40
    d02c:	mov	w2, #0x1                   	// #1
    d030:	ldaxr	w1, [x0]
    d034:	cbnz	w1, d040 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x190>
    d038:	stxr	w3, w2, [x0]
    d03c:	cbnz	w3, d030 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x180>
    d040:	cmp	w1, #0x0
    d044:	b.ne	d0d8 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x228>  // b.any
    d048:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d04c:	ldr	x0, [x0, #4016]
    d050:	mrs	x1, tpidr_el0
    d054:	add	x0, x1, x0
    d058:	ldr	x0, [x0, #32]
    d05c:	cbz	x0, cf20 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x70>
    d060:	add	x0, x0, #0x50
    d064:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d068:	ldr	x1, [x1, #4016]
    d06c:	mrs	x2, tpidr_el0
    d070:	add	x1, x2, x1
    d074:	ldr	x2, [x1, #24]
    d078:	ldxr	x1, [x0]
    d07c:	stlxr	w3, x2, [x0]
    d080:	cbnz	w3, d078 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x1c8>
    d084:	cmp	x1, #0x1
    d088:	b.eq	cf20 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x70>  // b.none
    d08c:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    d090:	b	cf20 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x70>
    d094:	str	wzr, [x1, #4]
    d098:	b	d014 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x164>
    d09c:	neg	x0, x19
    d0a0:	orr	x4, x2, x0
    d0a4:	mov	x3, #0x7fffffff            	// #2147483647
    d0a8:	cmp	x4, x3
    d0ac:	b.hi	d0d0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x220>  // b.pmore
    d0b0:	madd	x0, x2, x0, x0
    d0b4:	mov	x2, #0x2                   	// #2
    d0b8:	movk	x2, #0x8000, lsl #48
    d0bc:	add	x0, x0, x2
    d0c0:	cmp	x0, x20
    d0c4:	cset	w0, le
    d0c8:	str	w0, [x1, #4]
    d0cc:	b	d014 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x164>
    d0d0:	str	wzr, [x1, #4]
    d0d4:	b	d014 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x164>
    d0d8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d0dc:	b	d048 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x198>
    d0e0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d0e4:	b	cf20 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x70>
    d0e8:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    d0ec:	b	cf38 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x88>
    d0f0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    d0f4:	b	cf60 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0xb0>
    d0f8:	str	x24, [x1, #16]
    d0fc:	str	x23, [x1, #24]
    d100:	str	x24, [x1, #72]
    d104:	mul	x19, x23, x19
    d108:	str	x19, [x1, #8]
    d10c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d110:	ldr	x0, [x0, #4016]
    d114:	mrs	x2, tpidr_el0
    d118:	add	x0, x2, x0
    d11c:	ldr	x0, [x0, #16]
    d120:	mov	x20, x24
    d124:	mov	x2, #0x1                   	// #1
    d128:	cbnz	x0, cfe0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x130>
    d12c:	b	cfec <GOMP_loop_ordered_dynamic_start@@GOMP_1.0+0x13c>

000000000000d130 <GOMP_loop_ordered_guided_start@@GOMP_1.0>:
    d130:	stp	x29, x30, [sp, #-64]!
    d134:	mov	x29, sp
    d138:	stp	x19, x20, [sp, #16]
    d13c:	stp	x21, x22, [sp, #32]
    d140:	stp	x23, x24, [sp, #48]
    d144:	mov	x20, x0
    d148:	mov	x19, x1
    d14c:	mov	x21, x2
    d150:	mov	x24, x3
    d154:	mov	x22, x4
    d158:	mov	x23, x5
    d15c:	mov	x0, #0x1                   	// #1
    d160:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    d164:	and	w0, w0, #0xff
    d168:	cbz	w0, d298 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x168>
    d16c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d170:	ldr	x0, [x0, #4016]
    d174:	mrs	x1, tpidr_el0
    d178:	add	x0, x1, x0
    d17c:	ldr	x0, [x0, #24]
    d180:	mov	w1, #0x3                   	// #3
    d184:	str	w1, [x0]
    d188:	str	x24, [x0, #8]
    d18c:	cmp	x21, #0x0
    d190:	ccmp	x20, x19, #0x4, gt
    d194:	b.gt	d1a8 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x78>
    d198:	cmp	x21, #0x0
    d19c:	ccmp	x20, x19, #0x0, lt  // lt = tstop
    d1a0:	csel	x19, x19, x20, ge  // ge = tcont
    d1a4:	b	d1ac <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x7c>
    d1a8:	mov	x19, x20
    d1ac:	str	x19, [x0, #16]
    d1b0:	str	x21, [x0, #24]
    d1b4:	str	x20, [x0, #72]
    d1b8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d1bc:	ldr	x0, [x0, #4016]
    d1c0:	mrs	x1, tpidr_el0
    d1c4:	add	x0, x1, x0
    d1c8:	ldr	x0, [x0, #24]
    d1cc:	add	x0, x0, #0x40
    d1d0:	mov	w2, #0x1                   	// #1
    d1d4:	ldaxr	w1, [x0]
    d1d8:	cbnz	w1, d1e4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xb4>
    d1dc:	stxr	w3, w2, [x0]
    d1e0:	cbnz	w3, d1d4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xa4>
    d1e4:	cmp	w1, #0x0
    d1e8:	b.ne	d288 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x158>  // b.any
    d1ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d1f0:	ldr	x0, [x0, #4016]
    d1f4:	mrs	x1, tpidr_el0
    d1f8:	add	x0, x1, x0
    d1fc:	ldr	x0, [x0, #32]
    d200:	cbz	x0, d230 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x100>
    d204:	add	x0, x0, #0x50
    d208:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d20c:	ldr	x1, [x1, #4016]
    d210:	mrs	x2, tpidr_el0
    d214:	add	x1, x2, x1
    d218:	ldr	x2, [x1, #24]
    d21c:	ldxr	x1, [x0]
    d220:	stlxr	w3, x2, [x0]
    d224:	cbnz	w3, d21c <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xec>
    d228:	cmp	x1, #0x1
    d22c:	b.ne	d290 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x160>  // b.any
    d230:	mov	x1, x23
    d234:	mov	x0, x22
    d238:	bl	c0b8 <omp_is_initial_device@@OMP_4.0+0x390>
    d23c:	mov	w19, w0
    d240:	tst	w0, #0xff
    d244:	b.ne	d2d4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x1a4>  // b.any
    d248:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d24c:	ldr	x0, [x0, #4016]
    d250:	mrs	x1, tpidr_el0
    d254:	add	x0, x1, x0
    d258:	ldr	x0, [x0, #24]
    d25c:	add	x0, x0, #0x40
    d260:	ldxr	w1, [x0]
    d264:	stlxr	w2, wzr, [x0]
    d268:	cbnz	w2, d260 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x130>
    d26c:	tbnz	w1, #31, d2dc <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x1ac>
    d270:	mov	w0, w19
    d274:	ldp	x19, x20, [sp, #16]
    d278:	ldp	x21, x22, [sp, #32]
    d27c:	ldp	x23, x24, [sp, #48]
    d280:	ldp	x29, x30, [sp], #64
    d284:	ret
    d288:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d28c:	b	d1ec <GOMP_loop_ordered_guided_start@@GOMP_1.0+0xbc>
    d290:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    d294:	b	d230 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x100>
    d298:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d29c:	ldr	x0, [x0, #4016]
    d2a0:	mrs	x1, tpidr_el0
    d2a4:	add	x0, x1, x0
    d2a8:	ldr	x0, [x0, #24]
    d2ac:	add	x0, x0, #0x40
    d2b0:	mov	w2, #0x1                   	// #1
    d2b4:	ldaxr	w1, [x0]
    d2b8:	cbnz	w1, d2c4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x194>
    d2bc:	stxr	w3, w2, [x0]
    d2c0:	cbnz	w3, d2b4 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x184>
    d2c4:	cmp	w1, #0x0
    d2c8:	b.eq	d230 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x100>  // b.none
    d2cc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d2d0:	b	d230 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x100>
    d2d4:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    d2d8:	b	d248 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x118>
    d2dc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    d2e0:	b	d270 <GOMP_loop_ordered_guided_start@@GOMP_1.0+0x140>

000000000000d2e4 <GOMP_loop_ordered_runtime_start@@GOMP_1.0>:
    d2e4:	stp	x29, x30, [sp, #-16]!
    d2e8:	mov	x29, sp
    d2ec:	mov	x5, x4
    d2f0:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d2f4:	ldr	x4, [x4, #4016]
    d2f8:	mrs	x6, tpidr_el0
    d2fc:	add	x4, x6, x4
    d300:	ldr	x4, [x4, #80]
    d304:	add	x7, x4, #0x90
    d308:	adrp	x6, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    d30c:	add	x6, x6, #0x2b8
    d310:	cmp	x4, #0x0
    d314:	csel	x6, x6, x7, eq  // eq = none
    d318:	ldr	w4, [x6, #8]
    d31c:	and	w7, w4, #0x7fffffff
    d320:	cmp	w7, #0x3
    d324:	b.eq	d388 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0xa4>  // b.none
    d328:	tst	w4, #0x7ffffffc
    d32c:	b.ne	d354 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x70>  // b.any
    d330:	cmp	w7, #0x1
    d334:	b.eq	d370 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x8c>  // b.none
    d338:	cmp	w7, #0x2
    d33c:	b.ne	d39c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0xb8>  // b.any
    d340:	mov	x4, x3
    d344:	ldrsw	x3, [x6, #12]
    d348:	bl	ceb0 <GOMP_loop_ordered_dynamic_start@@GOMP_1.0>
    d34c:	and	w0, w0, #0xff
    d350:	b	d380 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x9c>
    d354:	cmp	w7, #0x4
    d358:	b.ne	d39c <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0xb8>  // b.any
    d35c:	mov	x4, x3
    d360:	mov	x3, #0x0                   	// #0
    d364:	bl	cd9c <GOMP_loop_ordered_static_start@@GOMP_1.0>
    d368:	and	w0, w0, #0xff
    d36c:	b	d380 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x9c>
    d370:	mov	x4, x3
    d374:	ldrsw	x3, [x6, #12]
    d378:	bl	cd9c <GOMP_loop_ordered_static_start@@GOMP_1.0>
    d37c:	and	w0, w0, #0xff
    d380:	ldp	x29, x30, [sp], #16
    d384:	ret
    d388:	mov	x4, x3
    d38c:	ldrsw	x3, [x6, #12]
    d390:	bl	d130 <GOMP_loop_ordered_guided_start@@GOMP_1.0>
    d394:	and	w0, w0, #0xff
    d398:	b	d380 <GOMP_loop_ordered_runtime_start@@GOMP_1.0+0x9c>
    d39c:	bl	8870 <abort@plt>

000000000000d3a0 <GOMP_loop_ordered_start@@GOMP_5.0>:
    d3a0:	stp	x29, x30, [sp, #-96]!
    d3a4:	mov	x29, sp
    d3a8:	stp	x19, x20, [sp, #16]
    d3ac:	stp	x21, x22, [sp, #32]
    d3b0:	stp	x23, x24, [sp, #48]
    d3b4:	stp	x25, x26, [sp, #64]
    d3b8:	mov	x25, x0
    d3bc:	mov	x21, x1
    d3c0:	mov	x26, x2
    d3c4:	mov	x19, x3
    d3c8:	str	x4, [sp, #88]
    d3cc:	mov	x23, x5
    d3d0:	mov	x24, x6
    d3d4:	mov	x20, x7
    d3d8:	ldr	x22, [sp, #96]
    d3dc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d3e0:	ldr	x0, [x0, #4016]
    d3e4:	mrs	x1, tpidr_el0
    d3e8:	add	x0, x1, x0
    d3ec:	str	xzr, [x0, #72]
    d3f0:	cbz	x7, d3f8 <GOMP_loop_ordered_start@@GOMP_5.0+0x58>
    d3f4:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    d3f8:	mov	x0, #0x1                   	// #1
    d3fc:	cbz	x22, d408 <GOMP_loop_ordered_start@@GOMP_5.0+0x68>
    d400:	ldr	x0, [x22]
    d404:	add	x0, x0, #0x1
    d408:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    d40c:	and	w0, w0, #0xff
    d410:	cbnz	w0, d480 <GOMP_loop_ordered_start@@GOMP_5.0+0xe0>
    d414:	cbz	x20, d438 <GOMP_loop_ordered_start@@GOMP_5.0+0x98>
    d418:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d41c:	ldr	x0, [x0, #4016]
    d420:	mrs	x1, tpidr_el0
    d424:	add	x0, x1, x0
    d428:	ldr	x0, [x0, #24]
    d42c:	ldr	x1, [x0, #88]
    d430:	mov	x0, x20
    d434:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
    d438:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d43c:	ldr	x0, [x0, #4016]
    d440:	mrs	x1, tpidr_el0
    d444:	add	x0, x1, x0
    d448:	ldr	x0, [x0, #24]
    d44c:	ldr	w19, [x0]
    d450:	cmp	x19, #0x1
    d454:	b.eq	d754 <GOMP_loop_ordered_start@@GOMP_5.0+0x3b4>  // b.none
    d458:	add	x0, x0, #0x40
    d45c:	mov	w2, #0x1                   	// #1
    d460:	ldaxr	w1, [x0]
    d464:	cbnz	w1, d470 <GOMP_loop_ordered_start@@GOMP_5.0+0xd0>
    d468:	stxr	w3, w2, [x0]
    d46c:	cbnz	w3, d460 <GOMP_loop_ordered_start@@GOMP_5.0+0xc0>
    d470:	cmp	w1, #0x0
    d474:	b.eq	d594 <GOMP_loop_ordered_start@@GOMP_5.0+0x1f4>  // b.none
    d478:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d47c:	b	d594 <GOMP_loop_ordered_start@@GOMP_5.0+0x1f4>
    d480:	add	x1, sp, #0x58
    d484:	mov	x0, x19
    d488:	bl	c730 <omp_is_initial_device@@OMP_4.0+0xa08>
    d48c:	mov	x19, x0
    d490:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d494:	ldr	x0, [x0, #4016]
    d498:	mrs	x1, tpidr_el0
    d49c:	add	x0, x1, x0
    d4a0:	ldr	x0, [x0, #24]
    d4a4:	mov	w2, w19
    d4a8:	ldr	x1, [sp, #88]
    d4ac:	str	w19, [x0]
    d4b0:	str	x1, [x0, #8]
    d4b4:	cmp	x26, #0x0
    d4b8:	ccmp	x25, x21, #0x4, gt
    d4bc:	b.gt	d5fc <GOMP_loop_ordered_start@@GOMP_5.0+0x25c>
    d4c0:	cmp	x26, #0x0
    d4c4:	ccmp	x25, x21, #0x0, lt  // lt = tstop
    d4c8:	csel	x21, x21, x25, ge  // ge = tcont
    d4cc:	str	x21, [x0, #16]
    d4d0:	str	x26, [x0, #24]
    d4d4:	str	x25, [x0, #72]
    d4d8:	cmp	w2, #0x2
    d4dc:	b.eq	d604 <GOMP_loop_ordered_start@@GOMP_5.0+0x264>  // b.none
    d4e0:	cbz	x20, d514 <GOMP_loop_ordered_start@@GOMP_5.0+0x174>
    d4e4:	mov	x0, x20
    d4e8:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    d4ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d4f0:	ldr	x0, [x0, #4016]
    d4f4:	mrs	x1, tpidr_el0
    d4f8:	add	x0, x1, x0
    d4fc:	ldr	x1, [x0, #80]
    d500:	ldr	x1, [x1, #40]
    d504:	mov	w2, #0x1                   	// #1
    d508:	strb	w2, [x1, #50]
    d50c:	ldr	x0, [x0, #24]
    d510:	str	x20, [x0, #88]
    d514:	cmp	x19, #0x1
    d518:	b.eq	d6a8 <GOMP_loop_ordered_start@@GOMP_5.0+0x308>  // b.none
    d51c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d520:	ldr	x0, [x0, #4016]
    d524:	mrs	x1, tpidr_el0
    d528:	add	x0, x1, x0
    d52c:	ldr	x0, [x0, #24]
    d530:	add	x0, x0, #0x40
    d534:	mov	w2, #0x1                   	// #1
    d538:	ldaxr	w1, [x0]
    d53c:	cbnz	w1, d548 <GOMP_loop_ordered_start@@GOMP_5.0+0x1a8>
    d540:	stxr	w3, w2, [x0]
    d544:	cbnz	w3, d538 <GOMP_loop_ordered_start@@GOMP_5.0+0x198>
    d548:	cmp	w1, #0x0
    d54c:	b.ne	d6b0 <GOMP_loop_ordered_start@@GOMP_5.0+0x310>  // b.any
    d550:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d554:	ldr	x0, [x0, #4016]
    d558:	mrs	x1, tpidr_el0
    d55c:	add	x0, x1, x0
    d560:	ldr	x0, [x0, #32]
    d564:	cbz	x0, d594 <GOMP_loop_ordered_start@@GOMP_5.0+0x1f4>
    d568:	add	x0, x0, #0x50
    d56c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d570:	ldr	x1, [x1, #4016]
    d574:	mrs	x2, tpidr_el0
    d578:	add	x1, x2, x1
    d57c:	ldr	x2, [x1, #24]
    d580:	ldxr	x1, [x0]
    d584:	stlxr	w3, x2, [x0]
    d588:	cbnz	w3, d580 <GOMP_loop_ordered_start@@GOMP_5.0+0x1e0>
    d58c:	cmp	x1, #0x1
    d590:	b.ne	d6b8 <GOMP_loop_ordered_start@@GOMP_5.0+0x318>  // b.any
    d594:	cbz	x22, d5d4 <GOMP_loop_ordered_start@@GOMP_5.0+0x234>
    d598:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d59c:	ldr	x1, [x1, #4016]
    d5a0:	mrs	x0, tpidr_el0
    d5a4:	add	x1, x0, x1
    d5a8:	ldr	x0, [x1, #24]
    d5ac:	ldr	x0, [x0, #32]
    d5b0:	ldr	x2, [x1, #16]
    d5b4:	mov	x1, #0x4                   	// #4
    d5b8:	cbz	x2, d5c4 <GOMP_loop_ordered_start@@GOMP_5.0+0x224>
    d5bc:	ldr	w1, [x2]
    d5c0:	lsl	x1, x1, #2
    d5c4:	add	x0, x0, x1
    d5c8:	add	x0, x0, #0x7
    d5cc:	and	x0, x0, #0xfffffffffffffff8
    d5d0:	str	x0, [x22]
    d5d4:	cmp	x19, #0x2
    d5d8:	b.eq	d6ec <GOMP_loop_ordered_start@@GOMP_5.0+0x34c>  // b.none
    d5dc:	b.le	d6c0 <GOMP_loop_ordered_start@@GOMP_5.0+0x320>
    d5e0:	cmp	x19, #0x3
    d5e4:	b.ne	d6e0 <GOMP_loop_ordered_start@@GOMP_5.0+0x340>  // b.any
    d5e8:	mov	x1, x24
    d5ec:	mov	x0, x23
    d5f0:	bl	c0b8 <omp_is_initial_device@@OMP_4.0+0x390>
    d5f4:	and	w19, w0, #0xff
    d5f8:	b	d6fc <GOMP_loop_ordered_start@@GOMP_5.0+0x35c>
    d5fc:	mov	x21, x25
    d600:	b	d4cc <GOMP_loop_ordered_start@@GOMP_5.0+0x12c>
    d604:	mul	x1, x1, x26
    d608:	str	x1, [x0, #8]
    d60c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d610:	ldr	x2, [x2, #4016]
    d614:	mrs	x3, tpidr_el0
    d618:	add	x2, x3, x2
    d61c:	ldr	x2, [x2, #16]
    d620:	mov	x3, #0x1                   	// #1
    d624:	cbz	x2, d62c <GOMP_loop_ordered_start@@GOMP_5.0+0x28c>
    d628:	ldr	w3, [x2]
    d62c:	cmp	x26, #0x0
    d630:	b.le	d66c <GOMP_loop_ordered_start@@GOMP_5.0+0x2cc>
    d634:	orr	x4, x1, x3
    d638:	mov	x2, #0x7fffffff            	// #2147483647
    d63c:	cmp	x4, x2
    d640:	b.hi	d664 <GOMP_loop_ordered_start@@GOMP_5.0+0x2c4>  // b.pmore
    d644:	madd	x1, x3, x1, x1
    d648:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    d64c:	sub	x1, x2, x1
    d650:	cmp	x21, x1
    d654:	cset	w1, lt  // lt = tstop
    d658:	str	w1, [x0, #4]
    d65c:	cbnz	x20, d4e4 <GOMP_loop_ordered_start@@GOMP_5.0+0x144>
    d660:	b	d51c <GOMP_loop_ordered_start@@GOMP_5.0+0x17c>
    d664:	str	wzr, [x0, #4]
    d668:	b	d65c <GOMP_loop_ordered_start@@GOMP_5.0+0x2bc>
    d66c:	neg	x2, x1
    d670:	orr	x4, x3, x2
    d674:	mov	x1, #0x7fffffff            	// #2147483647
    d678:	cmp	x4, x1
    d67c:	b.hi	d6a0 <GOMP_loop_ordered_start@@GOMP_5.0+0x300>  // b.pmore
    d680:	madd	x1, x3, x2, x2
    d684:	mov	x2, #0x2                   	// #2
    d688:	movk	x2, #0x8000, lsl #48
    d68c:	add	x1, x1, x2
    d690:	cmp	x21, x1
    d694:	cset	w1, ge  // ge = tcont
    d698:	str	w1, [x0, #4]
    d69c:	b	d65c <GOMP_loop_ordered_start@@GOMP_5.0+0x2bc>
    d6a0:	str	wzr, [x0, #4]
    d6a4:	b	d65c <GOMP_loop_ordered_start@@GOMP_5.0+0x2bc>
    d6a8:	bl	105b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x34c>
    d6ac:	b	d550 <GOMP_loop_ordered_start@@GOMP_5.0+0x1b0>
    d6b0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    d6b4:	b	d550 <GOMP_loop_ordered_start@@GOMP_5.0+0x1b0>
    d6b8:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    d6bc:	b	d594 <GOMP_loop_ordered_start@@GOMP_5.0+0x1f4>
    d6c0:	cmp	x19, #0x1
    d6c4:	b.ne	d6e8 <GOMP_loop_ordered_start@@GOMP_5.0+0x348>  // b.any
    d6c8:	mov	x1, x24
    d6cc:	mov	x0, x23
    d6d0:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    d6d4:	cmp	w0, #0x0
    d6d8:	cset	w19, eq  // eq = none
    d6dc:	b	d728 <GOMP_loop_ordered_start@@GOMP_5.0+0x388>
    d6e0:	cmp	x19, #0x4
    d6e4:	b.eq	d6c8 <GOMP_loop_ordered_start@@GOMP_5.0+0x328>  // b.none
    d6e8:	bl	8870 <abort@plt>
    d6ec:	mov	x1, x24
    d6f0:	mov	x0, x23
    d6f4:	bl	bf44 <omp_is_initial_device@@OMP_4.0+0x21c>
    d6f8:	and	w19, w0, #0xff
    d6fc:	cbnz	w19, d744 <GOMP_loop_ordered_start@@GOMP_5.0+0x3a4>
    d700:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d704:	ldr	x0, [x0, #4016]
    d708:	mrs	x1, tpidr_el0
    d70c:	add	x0, x1, x0
    d710:	ldr	x0, [x0, #24]
    d714:	add	x0, x0, #0x40
    d718:	ldxr	w1, [x0]
    d71c:	stlxr	w2, wzr, [x0]
    d720:	cbnz	w2, d718 <GOMP_loop_ordered_start@@GOMP_5.0+0x378>
    d724:	tbnz	w1, #31, d74c <GOMP_loop_ordered_start@@GOMP_5.0+0x3ac>
    d728:	mov	w0, w19
    d72c:	ldp	x19, x20, [sp, #16]
    d730:	ldp	x21, x22, [sp, #32]
    d734:	ldp	x23, x24, [sp, #48]
    d738:	ldp	x25, x26, [sp, #64]
    d73c:	ldp	x29, x30, [sp], #96
    d740:	ret
    d744:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    d748:	b	d700 <GOMP_loop_ordered_start@@GOMP_5.0+0x360>
    d74c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    d750:	b	d728 <GOMP_loop_ordered_start@@GOMP_5.0+0x388>
    d754:	cbnz	x22, d598 <GOMP_loop_ordered_start@@GOMP_5.0+0x1f8>
    d758:	b	d6c8 <GOMP_loop_ordered_start@@GOMP_5.0+0x328>

000000000000d75c <GOMP_loop_doacross_static_start@@GOMP_4.5>:
    d75c:	stp	x29, x30, [sp, #-64]!
    d760:	mov	x29, sp
    d764:	stp	x19, x20, [sp, #16]
    d768:	stp	x21, x22, [sp, #32]
    d76c:	stp	x23, x24, [sp, #48]
    d770:	mov	w23, w0
    d774:	mov	x21, x1
    d778:	mov	x22, x2
    d77c:	mov	x19, x3
    d780:	mov	x20, x4
    d784:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d788:	ldr	x3, [x3, #4016]
    d78c:	mrs	x4, tpidr_el0
    d790:	add	x3, x4, x3
    d794:	str	xzr, [x3, #72]
    d798:	mov	x0, #0x0                   	// #0
    d79c:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    d7a0:	and	w3, w0, #0xff
    d7a4:	cbnz	w3, d7d0 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x74>
    d7a8:	mov	x1, x20
    d7ac:	mov	x0, x19
    d7b0:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    d7b4:	cmp	w0, #0x0
    d7b8:	cset	w0, eq  // eq = none
    d7bc:	ldp	x19, x20, [sp, #16]
    d7c0:	ldp	x21, x22, [sp, #32]
    d7c4:	ldp	x23, x24, [sp, #48]
    d7c8:	ldp	x29, x30, [sp], #64
    d7cc:	ret
    d7d0:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d7d4:	ldr	x24, [x24, #4016]
    d7d8:	mrs	x0, tpidr_el0
    d7dc:	add	x24, x0, x24
    d7e0:	ldr	x0, [x24, #24]
    d7e4:	ldr	x1, [x21]
    d7e8:	mov	w2, #0x1                   	// #1
    d7ec:	str	w2, [x0]
    d7f0:	str	x22, [x0, #8]
    d7f4:	cmp	x1, #0x0
    d7f8:	csel	x1, x1, xzr, ge  // ge = tcont
    d7fc:	str	x1, [x0, #16]
    d800:	mov	x1, #0x1                   	// #1
    d804:	str	x1, [x0, #24]
    d808:	str	xzr, [x0, #72]
    d80c:	mov	x3, #0x0                   	// #0
    d810:	mov	x2, x22
    d814:	mov	x1, x21
    d818:	mov	w0, w23
    d81c:	bl	1078c <GOMP_ordered_end@@GOMP_1.0+0x4>
    d820:	ldr	x0, [x24, #32]
    d824:	cbz	x0, d7a8 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>
    d828:	add	x0, x0, #0x50
    d82c:	ldr	x2, [x24, #24]
    d830:	ldxr	x1, [x0]
    d834:	stlxr	w3, x2, [x0]
    d838:	cbnz	w3, d830 <GOMP_loop_doacross_static_start@@GOMP_4.5+0xd4>
    d83c:	cmp	x1, #0x1
    d840:	b.eq	d7a8 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
    d844:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    d848:	b	d7a8 <GOMP_loop_doacross_static_start@@GOMP_4.5+0x4c>

000000000000d84c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>:
    d84c:	stp	x29, x30, [sp, #-64]!
    d850:	mov	x29, sp
    d854:	stp	x19, x20, [sp, #16]
    d858:	stp	x21, x22, [sp, #32]
    d85c:	str	x23, [sp, #48]
    d860:	mov	w22, w0
    d864:	mov	x21, x1
    d868:	mov	x19, x2
    d86c:	mov	x23, x3
    d870:	mov	x20, x4
    d874:	mov	x0, #0x0                   	// #0
    d878:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    d87c:	and	w2, w0, #0xff
    d880:	cbnz	w2, d8a4 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x58>
    d884:	mov	x1, x20
    d888:	mov	x0, x23
    d88c:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
    d890:	ldp	x19, x20, [sp, #16]
    d894:	ldp	x21, x22, [sp, #32]
    d898:	ldr	x23, [sp, #48]
    d89c:	ldp	x29, x30, [sp], #64
    d8a0:	ret
    d8a4:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d8a8:	ldr	x1, [x1, #4016]
    d8ac:	mrs	x0, tpidr_el0
    d8b0:	add	x1, x0, x1
    d8b4:	ldr	x2, [x1, #24]
    d8b8:	ldr	x0, [x21]
    d8bc:	mov	w3, #0x2                   	// #2
    d8c0:	str	w3, [x2]
    d8c4:	str	x19, [x2, #8]
    d8c8:	cmp	x0, #0x0
    d8cc:	csel	x0, x0, xzr, ge  // ge = tcont
    d8d0:	str	x0, [x2, #16]
    d8d4:	mov	x3, #0x1                   	// #1
    d8d8:	str	x3, [x2, #24]
    d8dc:	str	xzr, [x2, #72]
    d8e0:	ldr	x3, [x1, #16]
    d8e4:	mov	x1, #0x1                   	// #1
    d8e8:	cbz	x3, d8f0 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xa4>
    d8ec:	ldr	w1, [x3]
    d8f0:	orr	x4, x19, x1
    d8f4:	mov	x3, #0x7fffffff            	// #2147483647
    d8f8:	cmp	x4, x3
    d8fc:	b.hi	d978 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x12c>  // b.pmore
    d900:	madd	x1, x1, x19, x19
    d904:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
    d908:	sub	x1, x3, x1
    d90c:	cmp	x1, x0
    d910:	cset	w0, gt
    d914:	str	w0, [x2, #4]
    d918:	mov	x3, #0x0                   	// #0
    d91c:	mov	x2, x19
    d920:	mov	x1, x21
    d924:	mov	w0, w22
    d928:	bl	1078c <GOMP_ordered_end@@GOMP_1.0+0x4>
    d92c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d930:	ldr	x0, [x0, #4016]
    d934:	mrs	x1, tpidr_el0
    d938:	add	x0, x1, x0
    d93c:	ldr	x0, [x0, #32]
    d940:	cbz	x0, d884 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x38>
    d944:	add	x0, x0, #0x50
    d948:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d94c:	ldr	x1, [x1, #4016]
    d950:	mrs	x2, tpidr_el0
    d954:	add	x1, x2, x1
    d958:	ldr	x2, [x1, #24]
    d95c:	ldxr	x1, [x0]
    d960:	stlxr	w3, x2, [x0]
    d964:	cbnz	w3, d95c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x110>
    d968:	cmp	x1, #0x1
    d96c:	b.eq	d884 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x38>  // b.none
    d970:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    d974:	b	d884 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0x38>
    d978:	mov	w0, #0x0                   	// #0
    d97c:	b	d914 <GOMP_loop_doacross_dynamic_start@@GOMP_4.5+0xc8>

000000000000d980 <GOMP_loop_doacross_guided_start@@GOMP_4.5>:
    d980:	stp	x29, x30, [sp, #-64]!
    d984:	mov	x29, sp
    d988:	stp	x19, x20, [sp, #16]
    d98c:	stp	x21, x22, [sp, #32]
    d990:	stp	x23, x24, [sp, #48]
    d994:	mov	w22, w0
    d998:	mov	x23, x1
    d99c:	mov	x21, x2
    d9a0:	mov	x19, x3
    d9a4:	mov	x20, x4
    d9a8:	mov	x0, #0x0                   	// #0
    d9ac:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    d9b0:	and	w3, w0, #0xff
    d9b4:	cbnz	w3, d9d8 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x58>
    d9b8:	mov	x1, x20
    d9bc:	mov	x0, x19
    d9c0:	bl	c138 <omp_is_initial_device@@OMP_4.0+0x410>
    d9c4:	ldp	x19, x20, [sp, #16]
    d9c8:	ldp	x21, x22, [sp, #32]
    d9cc:	ldp	x23, x24, [sp, #48]
    d9d0:	ldp	x29, x30, [sp], #64
    d9d4:	ret
    d9d8:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    d9dc:	ldr	x24, [x24, #4016]
    d9e0:	mrs	x0, tpidr_el0
    d9e4:	add	x24, x0, x24
    d9e8:	ldr	x0, [x24, #24]
    d9ec:	ldr	x1, [x23]
    d9f0:	mov	w2, #0x3                   	// #3
    d9f4:	str	w2, [x0]
    d9f8:	str	x21, [x0, #8]
    d9fc:	cmp	x1, #0x0
    da00:	csel	x1, x1, xzr, ge  // ge = tcont
    da04:	str	x1, [x0, #16]
    da08:	mov	x1, #0x1                   	// #1
    da0c:	str	x1, [x0, #24]
    da10:	str	xzr, [x0, #72]
    da14:	mov	x3, #0x0                   	// #0
    da18:	mov	x2, x21
    da1c:	mov	x1, x23
    da20:	mov	w0, w22
    da24:	bl	1078c <GOMP_ordered_end@@GOMP_1.0+0x4>
    da28:	ldr	x0, [x24, #32]
    da2c:	cbz	x0, d9b8 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>
    da30:	add	x0, x0, #0x50
    da34:	ldr	x2, [x24, #24]
    da38:	ldxr	x1, [x0]
    da3c:	stlxr	w3, x2, [x0]
    da40:	cbnz	w3, da38 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0xb8>
    da44:	cmp	x1, #0x1
    da48:	b.eq	d9b8 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
    da4c:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    da50:	b	d9b8 <GOMP_loop_doacross_guided_start@@GOMP_4.5+0x38>

000000000000da54 <GOMP_loop_doacross_runtime_start@@GOMP_4.5>:
    da54:	stp	x29, x30, [sp, #-16]!
    da58:	mov	x29, sp
    da5c:	mov	x4, x3
    da60:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    da64:	ldr	x3, [x3, #4016]
    da68:	mrs	x5, tpidr_el0
    da6c:	add	x3, x5, x3
    da70:	ldr	x3, [x3, #80]
    da74:	add	x6, x3, #0x90
    da78:	adrp	x5, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    da7c:	add	x5, x5, #0x2b8
    da80:	cmp	x3, #0x0
    da84:	csel	x5, x5, x6, eq  // eq = none
    da88:	ldr	w3, [x5, #8]
    da8c:	and	w6, w3, #0x7fffffff
    da90:	cmp	w6, #0x3
    da94:	b.eq	daf8 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xa4>  // b.none
    da98:	tst	w3, #0x7ffffffc
    da9c:	b.ne	dac4 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x70>  // b.any
    daa0:	cmp	w6, #0x1
    daa4:	b.eq	dae0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x8c>  // b.none
    daa8:	cmp	w6, #0x2
    daac:	b.ne	db0c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xb8>  // b.any
    dab0:	mov	x3, x2
    dab4:	ldrsw	x2, [x5, #12]
    dab8:	bl	d84c <GOMP_loop_doacross_dynamic_start@@GOMP_4.5>
    dabc:	and	w0, w0, #0xff
    dac0:	b	daf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x9c>
    dac4:	cmp	w6, #0x4
    dac8:	b.ne	db0c <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0xb8>  // b.any
    dacc:	mov	x3, x2
    dad0:	mov	x2, #0x0                   	// #0
    dad4:	bl	d75c <GOMP_loop_doacross_static_start@@GOMP_4.5>
    dad8:	and	w0, w0, #0xff
    dadc:	b	daf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x9c>
    dae0:	mov	x3, x2
    dae4:	ldrsw	x2, [x5, #12]
    dae8:	bl	d75c <GOMP_loop_doacross_static_start@@GOMP_4.5>
    daec:	and	w0, w0, #0xff
    daf0:	ldp	x29, x30, [sp], #16
    daf4:	ret
    daf8:	mov	x3, x2
    dafc:	ldrsw	x2, [x5, #12]
    db00:	bl	d980 <GOMP_loop_doacross_guided_start@@GOMP_4.5>
    db04:	and	w0, w0, #0xff
    db08:	b	daf0 <GOMP_loop_doacross_runtime_start@@GOMP_4.5+0x9c>
    db0c:	bl	8870 <abort@plt>

000000000000db10 <GOMP_loop_static_next@@GOMP_1.0>:
    db10:	stp	x29, x30, [sp, #-16]!
    db14:	mov	x29, sp
    db18:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    db1c:	cmp	w0, #0x0
    db20:	cset	w0, eq  // eq = none
    db24:	ldp	x29, x30, [sp], #16
    db28:	ret

000000000000db2c <GOMP_loop_dynamic_next@@GOMP_1.0>:
    db2c:	stp	x29, x30, [sp, #-16]!
    db30:	mov	x29, sp
    db34:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
    db38:	ldp	x29, x30, [sp], #16
    db3c:	ret

000000000000db40 <GOMP_loop_guided_next@@GOMP_1.0>:
    db40:	stp	x29, x30, [sp, #-16]!
    db44:	mov	x29, sp
    db48:	bl	c138 <omp_is_initial_device@@OMP_4.0+0x410>
    db4c:	ldp	x29, x30, [sp], #16
    db50:	ret

000000000000db54 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    db54:	stp	x29, x30, [sp, #-16]!
    db58:	mov	x29, sp
    db5c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    db60:	ldr	x2, [x2, #4016]
    db64:	mrs	x3, tpidr_el0
    db68:	add	x2, x3, x2
    db6c:	ldr	x2, [x2, #24]
    db70:	ldr	w2, [x2]
    db74:	cmp	w2, #0x2
    db78:	b.eq	dbb8 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x64>  // b.none
    db7c:	b.ls	db94 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x40>  // b.plast
    db80:	cmp	w2, #0x3
    db84:	b.ne	dbac <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.any
    db88:	bl	c138 <omp_is_initial_device@@OMP_4.0+0x410>
    db8c:	and	w0, w0, #0xff
    db90:	b	dba4 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x50>
    db94:	cmp	w2, #0x1
    db98:	b.ne	dbb4 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x60>  // b.any
    db9c:	bl	db10 <GOMP_loop_static_next@@GOMP_1.0>
    dba0:	and	w0, w0, #0xff
    dba4:	ldp	x29, x30, [sp], #16
    dba8:	ret
    dbac:	cmp	w2, #0x4
    dbb0:	b.eq	db9c <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x48>  // b.none
    dbb4:	bl	8870 <abort@plt>
    dbb8:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
    dbbc:	and	w0, w0, #0xff
    dbc0:	b	dba4 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x50>

000000000000dbc4 <GOMP_loop_start@@GOMP_5.0>:
    dbc4:	stp	x29, x30, [sp, #-96]!
    dbc8:	mov	x29, sp
    dbcc:	stp	x19, x20, [sp, #16]
    dbd0:	stp	x21, x22, [sp, #32]
    dbd4:	stp	x23, x24, [sp, #48]
    dbd8:	stp	x25, x26, [sp, #64]
    dbdc:	mov	x22, x0
    dbe0:	mov	x21, x1
    dbe4:	mov	x23, x2
    dbe8:	mov	x25, x3
    dbec:	str	x4, [sp, #88]
    dbf0:	mov	x20, x5
    dbf4:	mov	x24, x6
    dbf8:	mov	x19, x7
    dbfc:	ldr	x26, [sp, #96]
    dc00:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dc04:	ldr	x0, [x0, #4016]
    dc08:	mrs	x1, tpidr_el0
    dc0c:	add	x0, x1, x0
    dc10:	str	xzr, [x0, #72]
    dc14:	cbz	x7, dd6c <GOMP_loop_start@@GOMP_5.0+0x1a8>
    dc18:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    dc1c:	mov	x0, #0x0                   	// #0
    dc20:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    dc24:	and	w0, w0, #0xff
    dc28:	cbnz	w0, dd7c <GOMP_loop_start@@GOMP_5.0+0x1b8>
    dc2c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dc30:	ldr	x0, [x0, #4016]
    dc34:	mrs	x1, tpidr_el0
    dc38:	add	x0, x1, x0
    dc3c:	ldr	x0, [x0, #24]
    dc40:	ldr	x1, [x0, #88]
    dc44:	mov	x0, x19
    dc48:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
    dc4c:	cbz	x26, dc6c <GOMP_loop_start@@GOMP_5.0+0xa8>
    dc50:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dc54:	ldr	x0, [x0, #4016]
    dc58:	mrs	x1, tpidr_el0
    dc5c:	add	x0, x1, x0
    dc60:	ldr	x0, [x0, #24]
    dc64:	ldr	x0, [x0, #32]
    dc68:	str	x0, [x26]
    dc6c:	mov	w0, #0x1                   	// #1
    dc70:	cbz	x20, dc84 <GOMP_loop_start@@GOMP_5.0+0xc0>
    dc74:	mov	x1, x24
    dc78:	mov	x0, x20
    dc7c:	bl	db54 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    dc80:	and	w0, w0, #0xff
    dc84:	ldp	x19, x20, [sp, #16]
    dc88:	ldp	x21, x22, [sp, #32]
    dc8c:	ldp	x23, x24, [sp, #48]
    dc90:	ldp	x25, x26, [sp, #64]
    dc94:	ldp	x29, x30, [sp], #96
    dc98:	ret
    dc9c:	mov	x21, x22
    dca0:	b	ddc0 <GOMP_loop_start@@GOMP_5.0+0x1fc>
    dca4:	mul	x2, x2, x23
    dca8:	str	x2, [x1, #8]
    dcac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dcb0:	ldr	x0, [x0, #4016]
    dcb4:	mrs	x3, tpidr_el0
    dcb8:	add	x0, x3, x0
    dcbc:	ldr	x0, [x0, #16]
    dcc0:	mov	x3, #0x1                   	// #1
    dcc4:	cbz	x0, dccc <GOMP_loop_start@@GOMP_5.0+0x108>
    dcc8:	ldr	w3, [x0]
    dccc:	cmp	x23, #0x0
    dcd0:	b.le	dd08 <GOMP_loop_start@@GOMP_5.0+0x144>
    dcd4:	orr	x4, x2, x3
    dcd8:	mov	x0, #0x7fffffff            	// #2147483647
    dcdc:	cmp	x4, x0
    dce0:	b.hi	dd00 <GOMP_loop_start@@GOMP_5.0+0x13c>  // b.pmore
    dce4:	madd	x2, x3, x2, x2
    dce8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    dcec:	sub	x2, x0, x2
    dcf0:	cmp	x21, x2
    dcf4:	cset	w0, lt  // lt = tstop
    dcf8:	str	w0, [x1, #4]
    dcfc:	b	ddd4 <GOMP_loop_start@@GOMP_5.0+0x210>
    dd00:	str	wzr, [x1, #4]
    dd04:	b	ddd4 <GOMP_loop_start@@GOMP_5.0+0x210>
    dd08:	neg	x0, x2
    dd0c:	orr	x4, x3, x0
    dd10:	mov	x2, #0x7fffffff            	// #2147483647
    dd14:	cmp	x4, x2
    dd18:	b.hi	dd3c <GOMP_loop_start@@GOMP_5.0+0x178>  // b.pmore
    dd1c:	madd	x0, x3, x0, x0
    dd20:	mov	x2, #0x2                   	// #2
    dd24:	movk	x2, #0x8000, lsl #48
    dd28:	add	x0, x0, x2
    dd2c:	cmp	x21, x0
    dd30:	cset	w0, ge  // ge = tcont
    dd34:	str	w0, [x1, #4]
    dd38:	b	ddd4 <GOMP_loop_start@@GOMP_5.0+0x210>
    dd3c:	str	wzr, [x1, #4]
    dd40:	b	ddd4 <GOMP_loop_start@@GOMP_5.0+0x210>
    dd44:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dd48:	ldr	x0, [x0, #4016]
    dd4c:	mrs	x1, tpidr_el0
    dd50:	add	x0, x1, x0
    dd54:	ldr	x0, [x0, #24]
    dd58:	mov	w1, #0x0                   	// #0
    dd5c:	add	x0, x0, #0x60
    dd60:	bl	87c0 <memset@plt>
    dd64:	str	x0, [x26]
    dd68:	b	de3c <GOMP_loop_start@@GOMP_5.0+0x278>
    dd6c:	mov	x0, #0x0                   	// #0
    dd70:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    dd74:	and	w0, w0, #0xff
    dd78:	cbz	w0, dc4c <GOMP_loop_start@@GOMP_5.0+0x88>
    dd7c:	add	x1, sp, #0x58
    dd80:	mov	x0, x25
    dd84:	bl	c730 <omp_is_initial_device@@OMP_4.0+0xa08>
    dd88:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dd8c:	ldr	x1, [x1, #4016]
    dd90:	mrs	x2, tpidr_el0
    dd94:	add	x1, x2, x1
    dd98:	ldr	x1, [x1, #24]
    dd9c:	ldr	x2, [sp, #88]
    dda0:	str	w0, [x1]
    dda4:	str	x2, [x1, #8]
    dda8:	cmp	x23, #0x0
    ddac:	ccmp	x22, x21, #0x4, gt
    ddb0:	b.gt	dc9c <GOMP_loop_start@@GOMP_5.0+0xd8>
    ddb4:	cmp	x23, #0x0
    ddb8:	ccmp	x22, x21, #0x0, lt  // lt = tstop
    ddbc:	csel	x21, x21, x22, ge  // ge = tcont
    ddc0:	str	x21, [x1, #16]
    ddc4:	str	x23, [x1, #24]
    ddc8:	str	x22, [x1, #72]
    ddcc:	cmp	w0, #0x2
    ddd0:	b.eq	dca4 <GOMP_loop_start@@GOMP_5.0+0xe0>  // b.none
    ddd4:	cbz	x19, de08 <GOMP_loop_start@@GOMP_5.0+0x244>
    ddd8:	mov	x0, x19
    dddc:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    dde0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dde4:	ldr	x0, [x0, #4016]
    dde8:	mrs	x1, tpidr_el0
    ddec:	add	x0, x1, x0
    ddf0:	ldr	x1, [x0, #80]
    ddf4:	ldr	x1, [x1, #40]
    ddf8:	mov	w2, #0x1                   	// #1
    ddfc:	strb	w2, [x1, #50]
    de00:	ldr	x0, [x0, #24]
    de04:	str	x19, [x0, #88]
    de08:	cbz	x26, de3c <GOMP_loop_start@@GOMP_5.0+0x278>
    de0c:	ldr	x2, [x26]
    de10:	cmp	x2, #0x20
    de14:	b.ls	dd44 <GOMP_loop_start@@GOMP_5.0+0x180>  // b.plast
    de18:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    de1c:	ldr	x0, [x0, #4016]
    de20:	mrs	x1, tpidr_el0
    de24:	add	x0, x1, x0
    de28:	ldr	x19, [x0, #24]
    de2c:	mov	x0, x2
    de30:	bl	8c5c <fprintf@plt+0x14c>
    de34:	str	x0, [x19, #32]
    de38:	str	x0, [x26]
    de3c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    de40:	ldr	x0, [x0, #4016]
    de44:	mrs	x1, tpidr_el0
    de48:	add	x0, x1, x0
    de4c:	ldr	x0, [x0, #32]
    de50:	cbz	x0, dc6c <GOMP_loop_start@@GOMP_5.0+0xa8>
    de54:	add	x0, x0, #0x50
    de58:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    de5c:	ldr	x1, [x1, #4016]
    de60:	mrs	x2, tpidr_el0
    de64:	add	x1, x2, x1
    de68:	ldr	x2, [x1, #24]
    de6c:	ldxr	x1, [x0]
    de70:	stlxr	w3, x2, [x0]
    de74:	cbnz	w3, de6c <GOMP_loop_start@@GOMP_5.0+0x2a8>
    de78:	cmp	x1, #0x1
    de7c:	b.eq	dc6c <GOMP_loop_start@@GOMP_5.0+0xa8>  // b.none
    de80:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    de84:	b	dc6c <GOMP_loop_start@@GOMP_5.0+0xa8>

000000000000de88 <GOMP_loop_doacross_start@@GOMP_5.0>:
    de88:	stp	x29, x30, [sp, #-96]!
    de8c:	mov	x29, sp
    de90:	stp	x19, x20, [sp, #16]
    de94:	stp	x21, x22, [sp, #32]
    de98:	stp	x23, x24, [sp, #48]
    de9c:	stp	x25, x26, [sp, #64]
    dea0:	mov	w24, w0
    dea4:	mov	x23, x1
    dea8:	mov	x25, x2
    deac:	str	x3, [sp, #88]
    deb0:	mov	x21, x4
    deb4:	mov	x22, x5
    deb8:	mov	x20, x6
    debc:	mov	x19, x7
    dec0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dec4:	ldr	x1, [x1, #4016]
    dec8:	mrs	x3, tpidr_el0
    decc:	add	x1, x3, x1
    ded0:	str	xzr, [x1, #72]
    ded4:	cbz	x6, e09c <GOMP_loop_doacross_start@@GOMP_5.0+0x214>
    ded8:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    dedc:	mov	x0, #0x0                   	// #0
    dee0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    dee4:	and	w0, w0, #0xff
    dee8:	cbz	w0, e078 <GOMP_loop_doacross_start@@GOMP_5.0+0x1f0>
    deec:	mov	x26, #0x0                   	// #0
    def0:	cbz	x19, def8 <GOMP_loop_doacross_start@@GOMP_5.0+0x70>
    def4:	ldr	x26, [x19]
    def8:	add	x1, sp, #0x58
    defc:	mov	x0, x25
    df00:	bl	c730 <omp_is_initial_device@@OMP_4.0+0xa08>
    df04:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    df08:	ldr	x1, [x1, #4016]
    df0c:	mrs	x2, tpidr_el0
    df10:	add	x1, x2, x1
    df14:	ldr	x1, [x1, #24]
    df18:	ldr	x2, [x23]
    df1c:	ldr	x3, [sp, #88]
    df20:	str	w0, [x1]
    df24:	str	x3, [x1, #8]
    df28:	cmp	x2, #0x0
    df2c:	csel	x2, x2, xzr, ge  // ge = tcont
    df30:	str	x2, [x1, #16]
    df34:	mov	x4, #0x1                   	// #1
    df38:	str	x4, [x1, #24]
    df3c:	str	xzr, [x1, #72]
    df40:	cmp	w0, #0x2
    df44:	b.eq	e01c <GOMP_loop_doacross_start@@GOMP_5.0+0x194>  // b.none
    df48:	mov	x3, x26
    df4c:	ldr	x2, [sp, #88]
    df50:	mov	x1, x23
    df54:	mov	w0, w24
    df58:	bl	1078c <GOMP_ordered_end@@GOMP_1.0+0x4>
    df5c:	cbz	x20, df90 <GOMP_loop_doacross_start@@GOMP_5.0+0x108>
    df60:	mov	x0, x20
    df64:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    df68:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    df6c:	ldr	x0, [x0, #4016]
    df70:	mrs	x1, tpidr_el0
    df74:	add	x0, x1, x0
    df78:	ldr	x1, [x0, #80]
    df7c:	ldr	x1, [x1, #40]
    df80:	mov	w2, #0x1                   	// #1
    df84:	strb	w2, [x1, #50]
    df88:	ldr	x0, [x0, #24]
    df8c:	str	x20, [x0, #88]
    df90:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    df94:	ldr	x0, [x0, #4016]
    df98:	mrs	x1, tpidr_el0
    df9c:	add	x0, x1, x0
    dfa0:	ldr	x0, [x0, #32]
    dfa4:	cbz	x0, dfd4 <GOMP_loop_doacross_start@@GOMP_5.0+0x14c>
    dfa8:	add	x0, x0, #0x50
    dfac:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dfb0:	ldr	x1, [x1, #4016]
    dfb4:	mrs	x2, tpidr_el0
    dfb8:	add	x1, x2, x1
    dfbc:	ldr	x2, [x1, #24]
    dfc0:	ldxr	x1, [x0]
    dfc4:	stlxr	w3, x2, [x0]
    dfc8:	cbnz	w3, dfc0 <GOMP_loop_doacross_start@@GOMP_5.0+0x138>
    dfcc:	cmp	x1, #0x1
    dfd0:	b.ne	e070 <GOMP_loop_doacross_start@@GOMP_5.0+0x1e8>  // b.any
    dfd4:	cbz	x19, dff8 <GOMP_loop_doacross_start@@GOMP_5.0+0x170>
    dfd8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    dfdc:	ldr	x0, [x0, #4016]
    dfe0:	mrs	x1, tpidr_el0
    dfe4:	add	x0, x1, x0
    dfe8:	ldr	x0, [x0, #24]
    dfec:	ldr	x0, [x0, #32]
    dff0:	ldr	x0, [x0, #48]
    dff4:	str	x0, [x19]
    dff8:	mov	x1, x22
    dffc:	mov	x0, x21
    e000:	bl	db54 <GOMP_loop_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    e004:	ldp	x19, x20, [sp, #16]
    e008:	ldp	x21, x22, [sp, #32]
    e00c:	ldp	x23, x24, [sp, #48]
    e010:	ldp	x25, x26, [sp, #64]
    e014:	ldp	x29, x30, [sp], #96
    e018:	ret
    e01c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e020:	ldr	x0, [x0, #4016]
    e024:	mrs	x4, tpidr_el0
    e028:	add	x0, x4, x0
    e02c:	ldr	x4, [x0, #16]
    e030:	mov	x0, #0x1                   	// #1
    e034:	cbz	x4, e03c <GOMP_loop_doacross_start@@GOMP_5.0+0x1b4>
    e038:	ldr	w0, [x4]
    e03c:	orr	x5, x3, x0
    e040:	mov	x4, #0x7fffffff            	// #2147483647
    e044:	cmp	x5, x4
    e048:	b.hi	e068 <GOMP_loop_doacross_start@@GOMP_5.0+0x1e0>  // b.pmore
    e04c:	madd	x3, x0, x3, x3
    e050:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    e054:	sub	x3, x0, x3
    e058:	cmp	x2, x3
    e05c:	cset	w0, lt  // lt = tstop
    e060:	str	w0, [x1, #4]
    e064:	b	df48 <GOMP_loop_doacross_start@@GOMP_5.0+0xc0>
    e068:	str	wzr, [x1, #4]
    e06c:	b	df48 <GOMP_loop_doacross_start@@GOMP_5.0+0xc0>
    e070:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    e074:	b	dfd4 <GOMP_loop_doacross_start@@GOMP_5.0+0x14c>
    e078:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e07c:	ldr	x0, [x0, #4016]
    e080:	mrs	x1, tpidr_el0
    e084:	add	x0, x1, x0
    e088:	ldr	x0, [x0, #24]
    e08c:	ldr	x1, [x0, #88]
    e090:	mov	x0, x20
    e094:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
    e098:	b	dfd4 <GOMP_loop_doacross_start@@GOMP_5.0+0x14c>
    e09c:	mov	x0, #0x0                   	// #0
    e0a0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    e0a4:	and	w0, w0, #0xff
    e0a8:	cbnz	w0, deec <GOMP_loop_doacross_start@@GOMP_5.0+0x64>
    e0ac:	b	dfd4 <GOMP_loop_doacross_start@@GOMP_5.0+0x14c>

000000000000e0b0 <GOMP_loop_ordered_static_next@@GOMP_1.0>:
    e0b0:	stp	x29, x30, [sp, #-32]!
    e0b4:	mov	x29, sp
    e0b8:	stp	x19, x20, [sp, #16]
    e0bc:	mov	x19, x0
    e0c0:	mov	x20, x1
    e0c4:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
    e0c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e0cc:	ldr	x0, [x0, #4016]
    e0d0:	mrs	x1, tpidr_el0
    e0d4:	add	x0, x1, x0
    e0d8:	ldr	x2, [x0, #24]
    e0dc:	add	x2, x2, #0x40
    e0e0:	mov	w0, #0x1                   	// #1
    e0e4:	ldaxr	w1, [x2]
    e0e8:	cbnz	w1, e0f4 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x44>
    e0ec:	stxr	w3, w0, [x2]
    e0f0:	cbnz	w3, e0e4 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x34>
    e0f4:	cmp	w1, #0x0
    e0f8:	b.ne	e14c <GOMP_loop_ordered_static_next@@GOMP_1.0+0x9c>  // b.any
    e0fc:	mov	x1, x20
    e100:	mov	x0, x19
    e104:	bl	bd30 <omp_is_initial_device@@OMP_4.0+0x8>
    e108:	mov	w19, w0
    e10c:	tbz	w0, #31, e158 <GOMP_loop_ordered_static_next@@GOMP_1.0+0xa8>
    e110:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e114:	ldr	x0, [x0, #4016]
    e118:	mrs	x1, tpidr_el0
    e11c:	add	x0, x1, x0
    e120:	ldr	x1, [x0, #24]
    e124:	add	x1, x1, #0x40
    e128:	ldxr	w0, [x1]
    e12c:	stlxr	w2, wzr, [x1]
    e130:	cbnz	w2, e128 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x78>
    e134:	tbnz	w0, #31, e160 <GOMP_loop_ordered_static_next@@GOMP_1.0+0xb0>
    e138:	cmp	w19, #0x0
    e13c:	cset	w0, eq  // eq = none
    e140:	ldp	x19, x20, [sp, #16]
    e144:	ldp	x29, x30, [sp], #32
    e148:	ret
    e14c:	mov	x0, x2
    e150:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    e154:	b	e0fc <GOMP_loop_ordered_static_next@@GOMP_1.0+0x4c>
    e158:	bl	10620 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3bc>
    e15c:	b	e110 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x60>
    e160:	mov	x0, x1
    e164:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    e168:	b	e138 <GOMP_loop_ordered_static_next@@GOMP_1.0+0x88>

000000000000e16c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>:
    e16c:	stp	x29, x30, [sp, #-32]!
    e170:	mov	x29, sp
    e174:	stp	x19, x20, [sp, #16]
    e178:	mov	x19, x0
    e17c:	mov	x20, x1
    e180:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
    e184:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e188:	ldr	x0, [x0, #4016]
    e18c:	mrs	x1, tpidr_el0
    e190:	add	x0, x1, x0
    e194:	ldr	x2, [x0, #24]
    e198:	add	x2, x2, #0x40
    e19c:	mov	w0, #0x1                   	// #1
    e1a0:	ldaxr	w1, [x2]
    e1a4:	cbnz	w1, e1b0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x44>
    e1a8:	stxr	w3, w0, [x2]
    e1ac:	cbnz	w3, e1a0 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x34>
    e1b0:	cmp	w1, #0x0
    e1b4:	b.ne	e20c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xa0>  // b.any
    e1b8:	mov	x1, x20
    e1bc:	mov	x0, x19
    e1c0:	bl	bf44 <omp_is_initial_device@@OMP_4.0+0x21c>
    e1c4:	mov	w19, w0
    e1c8:	tst	w0, #0xff
    e1cc:	b.eq	e218 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xac>  // b.none
    e1d0:	bl	10468 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x204>
    e1d4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e1d8:	ldr	x0, [x0, #4016]
    e1dc:	mrs	x1, tpidr_el0
    e1e0:	add	x0, x1, x0
    e1e4:	ldr	x0, [x0, #24]
    e1e8:	add	x0, x0, #0x40
    e1ec:	ldxr	w1, [x0]
    e1f0:	stlxr	w2, wzr, [x0]
    e1f4:	cbnz	w2, e1ec <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x80>
    e1f8:	tbnz	w1, #31, e220 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0xb4>
    e1fc:	mov	w0, w19
    e200:	ldp	x19, x20, [sp, #16]
    e204:	ldp	x29, x30, [sp], #32
    e208:	ret
    e20c:	mov	x0, x2
    e210:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    e214:	b	e1b8 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x4c>
    e218:	bl	103ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x148>
    e21c:	b	e1d4 <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x68>
    e220:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    e224:	b	e1fc <GOMP_loop_ordered_dynamic_next@@GOMP_1.0+0x90>

000000000000e228 <GOMP_loop_ordered_guided_next@@GOMP_1.0>:
    e228:	stp	x29, x30, [sp, #-32]!
    e22c:	mov	x29, sp
    e230:	stp	x19, x20, [sp, #16]
    e234:	mov	x19, x0
    e238:	mov	x20, x1
    e23c:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
    e240:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e244:	ldr	x0, [x0, #4016]
    e248:	mrs	x1, tpidr_el0
    e24c:	add	x0, x1, x0
    e250:	ldr	x2, [x0, #24]
    e254:	add	x2, x2, #0x40
    e258:	mov	w0, #0x1                   	// #1
    e25c:	ldaxr	w1, [x2]
    e260:	cbnz	w1, e26c <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x44>
    e264:	stxr	w3, w0, [x2]
    e268:	cbnz	w3, e25c <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x34>
    e26c:	cmp	w1, #0x0
    e270:	b.ne	e2c8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xa0>  // b.any
    e274:	mov	x1, x20
    e278:	mov	x0, x19
    e27c:	bl	c0b8 <omp_is_initial_device@@OMP_4.0+0x390>
    e280:	mov	w19, w0
    e284:	tst	w0, #0xff
    e288:	b.eq	e2d4 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xac>  // b.none
    e28c:	bl	10468 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x204>
    e290:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e294:	ldr	x0, [x0, #4016]
    e298:	mrs	x1, tpidr_el0
    e29c:	add	x0, x1, x0
    e2a0:	ldr	x0, [x0, #24]
    e2a4:	add	x0, x0, #0x40
    e2a8:	ldxr	w1, [x0]
    e2ac:	stlxr	w2, wzr, [x0]
    e2b0:	cbnz	w2, e2a8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x80>
    e2b4:	tbnz	w1, #31, e2dc <GOMP_loop_ordered_guided_next@@GOMP_1.0+0xb4>
    e2b8:	mov	w0, w19
    e2bc:	ldp	x19, x20, [sp, #16]
    e2c0:	ldp	x29, x30, [sp], #32
    e2c4:	ret
    e2c8:	mov	x0, x2
    e2cc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    e2d0:	b	e274 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x4c>
    e2d4:	bl	103ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x148>
    e2d8:	b	e290 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x68>
    e2dc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    e2e0:	b	e2b8 <GOMP_loop_ordered_guided_next@@GOMP_1.0+0x90>

000000000000e2e4 <GOMP_loop_ordered_runtime_next@@GOMP_1.0>:
    e2e4:	stp	x29, x30, [sp, #-16]!
    e2e8:	mov	x29, sp
    e2ec:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e2f0:	ldr	x2, [x2, #4016]
    e2f4:	mrs	x3, tpidr_el0
    e2f8:	add	x2, x3, x2
    e2fc:	ldr	x2, [x2, #24]
    e300:	ldr	w2, [x2]
    e304:	cmp	w2, #0x2
    e308:	b.eq	e348 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x64>  // b.none
    e30c:	b.ls	e324 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x40>  // b.plast
    e310:	cmp	w2, #0x3
    e314:	b.ne	e33c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x58>  // b.any
    e318:	bl	e228 <GOMP_loop_ordered_guided_next@@GOMP_1.0>
    e31c:	and	w0, w0, #0xff
    e320:	b	e334 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x50>
    e324:	cmp	w2, #0x1
    e328:	b.ne	e344 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x60>  // b.any
    e32c:	bl	e0b0 <GOMP_loop_ordered_static_next@@GOMP_1.0>
    e330:	and	w0, w0, #0xff
    e334:	ldp	x29, x30, [sp], #16
    e338:	ret
    e33c:	cmp	w2, #0x4
    e340:	b.eq	e32c <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x48>  // b.none
    e344:	bl	8870 <abort@plt>
    e348:	bl	e16c <GOMP_loop_ordered_dynamic_next@@GOMP_1.0>
    e34c:	and	w0, w0, #0xff
    e350:	b	e334 <GOMP_loop_ordered_runtime_next@@GOMP_1.0+0x50>

000000000000e354 <GOMP_parallel_loop_static_start@@GOMP_1.0>:
    e354:	sub	sp, sp, #0x20
    e358:	stp	x29, x30, [sp, #16]
    e35c:	add	x29, sp, #0x10
    e360:	str	wzr, [sp]
    e364:	mov	x7, x6
    e368:	mov	w6, #0x1                   	// #1
    e36c:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e370:	ldp	x29, x30, [sp, #16]
    e374:	add	sp, sp, #0x20
    e378:	ret

000000000000e37c <GOMP_parallel_loop_dynamic_start@@GOMP_1.0>:
    e37c:	sub	sp, sp, #0x20
    e380:	stp	x29, x30, [sp, #16]
    e384:	add	x29, sp, #0x10
    e388:	str	wzr, [sp]
    e38c:	mov	x7, x6
    e390:	mov	w6, #0x2                   	// #2
    e394:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e398:	ldp	x29, x30, [sp, #16]
    e39c:	add	sp, sp, #0x20
    e3a0:	ret

000000000000e3a4 <GOMP_parallel_loop_guided_start@@GOMP_1.0>:
    e3a4:	sub	sp, sp, #0x20
    e3a8:	stp	x29, x30, [sp, #16]
    e3ac:	add	x29, sp, #0x10
    e3b0:	str	wzr, [sp]
    e3b4:	mov	x7, x6
    e3b8:	mov	w6, #0x3                   	// #3
    e3bc:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e3c0:	ldp	x29, x30, [sp, #16]
    e3c4:	add	sp, sp, #0x20
    e3c8:	ret

000000000000e3cc <GOMP_parallel_loop_runtime_start@@GOMP_1.0>:
    e3cc:	sub	sp, sp, #0x20
    e3d0:	stp	x29, x30, [sp, #16]
    e3d4:	add	x29, sp, #0x10
    e3d8:	adrp	x6, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e3dc:	ldr	x6, [x6, #4016]
    e3e0:	mrs	x7, tpidr_el0
    e3e4:	add	x6, x7, x6
    e3e8:	ldr	x7, [x6, #80]
    e3ec:	add	x8, x7, #0x90
    e3f0:	adrp	x6, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    e3f4:	add	x6, x6, #0x2b8
    e3f8:	cmp	x7, #0x0
    e3fc:	csel	x6, x6, x8, eq  // eq = none
    e400:	ldrsw	x7, [x6, #12]
    e404:	ldr	w6, [x6, #8]
    e408:	str	wzr, [sp]
    e40c:	and	w6, w6, #0x7fffffff
    e410:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e414:	ldp	x29, x30, [sp, #16]
    e418:	add	sp, sp, #0x20
    e41c:	ret

000000000000e420 <GOMP_parallel_loop_static@@GOMP_4.0>:
    e420:	sub	sp, sp, #0x30
    e424:	stp	x29, x30, [sp, #16]
    e428:	add	x29, sp, #0x10
    e42c:	stp	x19, x20, [sp, #32]
    e430:	mov	x19, x0
    e434:	mov	x20, x1
    e438:	str	w7, [sp]
    e43c:	mov	x7, x6
    e440:	mov	w6, #0x1                   	// #1
    e444:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e448:	mov	x0, x20
    e44c:	blr	x19
    e450:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
    e454:	ldp	x19, x20, [sp, #32]
    e458:	ldp	x29, x30, [sp, #16]
    e45c:	add	sp, sp, #0x30
    e460:	ret

000000000000e464 <GOMP_parallel_loop_dynamic@@GOMP_4.0>:
    e464:	sub	sp, sp, #0x30
    e468:	stp	x29, x30, [sp, #16]
    e46c:	add	x29, sp, #0x10
    e470:	stp	x19, x20, [sp, #32]
    e474:	mov	x19, x0
    e478:	mov	x20, x1
    e47c:	str	w7, [sp]
    e480:	mov	x7, x6
    e484:	mov	w6, #0x2                   	// #2
    e488:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e48c:	mov	x0, x20
    e490:	blr	x19
    e494:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
    e498:	ldp	x19, x20, [sp, #32]
    e49c:	ldp	x29, x30, [sp, #16]
    e4a0:	add	sp, sp, #0x30
    e4a4:	ret

000000000000e4a8 <GOMP_parallel_loop_guided@@GOMP_4.0>:
    e4a8:	sub	sp, sp, #0x30
    e4ac:	stp	x29, x30, [sp, #16]
    e4b0:	add	x29, sp, #0x10
    e4b4:	stp	x19, x20, [sp, #32]
    e4b8:	mov	x19, x0
    e4bc:	mov	x20, x1
    e4c0:	str	w7, [sp]
    e4c4:	mov	x7, x6
    e4c8:	mov	w6, #0x3                   	// #3
    e4cc:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e4d0:	mov	x0, x20
    e4d4:	blr	x19
    e4d8:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
    e4dc:	ldp	x19, x20, [sp, #32]
    e4e0:	ldp	x29, x30, [sp, #16]
    e4e4:	add	sp, sp, #0x30
    e4e8:	ret

000000000000e4ec <GOMP_parallel_loop_maybe_nonmonotonic_runtime@@GOMP_5.0>:
    e4ec:	sub	sp, sp, #0x30
    e4f0:	stp	x29, x30, [sp, #16]
    e4f4:	add	x29, sp, #0x10
    e4f8:	stp	x19, x20, [sp, #32]
    e4fc:	mov	x19, x0
    e500:	mov	x20, x1
    e504:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e508:	ldr	x0, [x0, #4016]
    e50c:	mrs	x1, tpidr_el0
    e510:	add	x0, x1, x0
    e514:	ldr	x0, [x0, #80]
    e518:	add	x1, x0, #0x90
    e51c:	adrp	x8, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    e520:	add	x8, x8, #0x2b8
    e524:	cmp	x0, #0x0
    e528:	csel	x8, x8, x1, eq  // eq = none
    e52c:	ldrsw	x7, [x8, #12]
    e530:	ldr	w0, [x8, #8]
    e534:	str	w6, [sp]
    e538:	and	w6, w0, #0x7fffffff
    e53c:	mov	x1, x20
    e540:	mov	x0, x19
    e544:	bl	c7c4 <omp_is_initial_device@@OMP_4.0+0xa9c>
    e548:	mov	x0, x20
    e54c:	blr	x19
    e550:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
    e554:	ldp	x19, x20, [sp, #32]
    e558:	ldp	x29, x30, [sp, #16]
    e55c:	add	sp, sp, #0x30
    e560:	ret

000000000000e564 <GOMP_loop_end@@GOMP_1.0>:
    e564:	stp	x29, x30, [sp, #-16]!
    e568:	mov	x29, sp
    e56c:	bl	1a80c <omp_in_final@@OMP_3.1+0x1c2c>
    e570:	ldp	x29, x30, [sp], #16
    e574:	ret

000000000000e578 <GOMP_loop_end_cancel@@GOMP_4.0>:
    e578:	stp	x29, x30, [sp, #-16]!
    e57c:	mov	x29, sp
    e580:	bl	1a91c <omp_in_final@@OMP_3.1+0x1d3c>
    e584:	ldp	x29, x30, [sp], #16
    e588:	ret

000000000000e58c <GOMP_loop_end_nowait@@GOMP_1.0>:
    e58c:	stp	x29, x30, [sp, #-16]!
    e590:	mov	x29, sp
    e594:	bl	1aa00 <omp_in_final@@OMP_3.1+0x1e20>
    e598:	ldp	x29, x30, [sp], #16
    e59c:	ret
    e5a0:	stp	x29, x30, [sp, #-16]!
    e5a4:	mov	x29, sp
    e5a8:	mov	x2, x0
    e5ac:	and	x0, x0, #0x7fffffff
    e5b0:	tst	x2, #0x7ffffffc
    e5b4:	b.ne	e5c0 <GOMP_loop_end_nowait@@GOMP_1.0+0x34>  // b.any
    e5b8:	cbz	x0, e5c8 <GOMP_loop_end_nowait@@GOMP_1.0+0x3c>
    e5bc:	b	e610 <GOMP_loop_end_nowait@@GOMP_1.0+0x84>
    e5c0:	cmp	x0, #0x4
    e5c4:	b.ne	e630 <GOMP_loop_end_nowait@@GOMP_1.0+0xa4>  // b.any
    e5c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e5cc:	ldr	x0, [x0, #4016]
    e5d0:	mrs	x2, tpidr_el0
    e5d4:	add	x0, x2, x0
    e5d8:	ldr	x0, [x0, #80]
    e5dc:	add	x3, x0, #0x90
    e5e0:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    e5e4:	add	x2, x2, #0x2b8
    e5e8:	cmp	x0, #0x0
    e5ec:	csel	x2, x2, x3, eq  // eq = none
    e5f0:	ldr	w3, [x2, #8]
    e5f4:	and	w0, w3, #0x7fffffff
    e5f8:	tst	w3, #0x7ffffffc
    e5fc:	b.ne	e618 <GOMP_loop_end_nowait@@GOMP_1.0+0x8c>  // b.any
    e600:	cbz	w0, e62c <GOMP_loop_end_nowait@@GOMP_1.0+0xa0>
    e604:	mov	w0, w0
    e608:	ldrsw	x2, [x2, #12]
    e60c:	str	x2, [x1]
    e610:	ldp	x29, x30, [sp], #16
    e614:	ret
    e618:	cmp	w0, #0x4
    e61c:	b.ne	e62c <GOMP_loop_end_nowait@@GOMP_1.0+0xa0>  // b.any
    e620:	str	xzr, [x1]
    e624:	mov	x0, #0x1                   	// #1
    e628:	b	e610 <GOMP_loop_end_nowait@@GOMP_1.0+0x84>
    e62c:	bl	8870 <abort@plt>
    e630:	bl	8870 <abort@plt>

000000000000e634 <GOMP_loop_ull_static_start@@GOMP_2.0>:
    e634:	stp	x29, x30, [sp, #-80]!
    e638:	mov	x29, sp
    e63c:	stp	x19, x20, [sp, #16]
    e640:	stp	x21, x22, [sp, #32]
    e644:	stp	x23, x24, [sp, #48]
    e648:	str	x25, [sp, #64]
    e64c:	and	w25, w0, #0xff
    e650:	mov	x19, x1
    e654:	mov	x22, x2
    e658:	mov	x23, x3
    e65c:	mov	x24, x4
    e660:	mov	x20, x5
    e664:	mov	x21, x6
    e668:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e66c:	ldr	x0, [x0, #4016]
    e670:	mrs	x1, tpidr_el0
    e674:	add	x0, x1, x0
    e678:	str	xzr, [x0, #72]
    e67c:	mov	x0, #0x0                   	// #0
    e680:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    e684:	and	w0, w0, #0xff
    e688:	cbz	w0, e758 <GOMP_loop_ull_static_start@@GOMP_2.0+0x124>
    e68c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e690:	ldr	x0, [x0, #4016]
    e694:	mrs	x1, tpidr_el0
    e698:	add	x0, x1, x0
    e69c:	ldr	x0, [x0, #24]
    e6a0:	mov	w1, #0x1                   	// #1
    e6a4:	str	w1, [x0]
    e6a8:	str	x24, [x0, #8]
    e6ac:	cmp	w25, #0x0
    e6b0:	ccmp	x19, x22, #0x0, ne  // ne = any
    e6b4:	b.hi	e704 <GOMP_loop_ull_static_start@@GOMP_2.0+0xd0>  // b.pmore
    e6b8:	eor	w1, w25, w1
    e6bc:	cmp	x19, x22
    e6c0:	cset	w2, cc  // cc = lo, ul, last
    e6c4:	tst	w2, w1
    e6c8:	b.ne	e6f4 <GOMP_loop_ull_static_start@@GOMP_2.0+0xc0>  // b.any
    e6cc:	str	x22, [x0, #16]
    e6d0:	str	x23, [x0, #24]
    e6d4:	str	x19, [x0, #72]
    e6d8:	str	wzr, [x0, #4]
    e6dc:	cbnz	w25, e714 <GOMP_loop_ull_static_start@@GOMP_2.0+0xe0>
    e6e0:	mov	w1, #0x2                   	// #2
    e6e4:	str	w1, [x0, #4]
    e6e8:	b	e714 <GOMP_loop_ull_static_start@@GOMP_2.0+0xe0>
    e6ec:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    e6f0:	b	e758 <GOMP_loop_ull_static_start@@GOMP_2.0+0x124>
    e6f4:	str	x19, [x0, #16]
    e6f8:	str	x23, [x0, #24]
    e6fc:	str	x19, [x0, #72]
    e700:	b	e6e0 <GOMP_loop_ull_static_start@@GOMP_2.0+0xac>
    e704:	str	x19, [x0, #16]
    e708:	str	x23, [x0, #24]
    e70c:	str	x19, [x0, #72]
    e710:	str	wzr, [x0, #4]
    e714:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e718:	ldr	x0, [x0, #4016]
    e71c:	mrs	x1, tpidr_el0
    e720:	add	x0, x1, x0
    e724:	ldr	x0, [x0, #32]
    e728:	cbz	x0, e758 <GOMP_loop_ull_static_start@@GOMP_2.0+0x124>
    e72c:	add	x0, x0, #0x50
    e730:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e734:	ldr	x1, [x1, #4016]
    e738:	mrs	x2, tpidr_el0
    e73c:	add	x1, x2, x1
    e740:	ldr	x2, [x1, #24]
    e744:	ldxr	x1, [x0]
    e748:	stlxr	w3, x2, [x0]
    e74c:	cbnz	w3, e744 <GOMP_loop_ull_static_start@@GOMP_2.0+0x110>
    e750:	cmp	x1, #0x1
    e754:	b.ne	e6ec <GOMP_loop_ull_static_start@@GOMP_2.0+0xb8>  // b.any
    e758:	mov	x1, x21
    e75c:	mov	x0, x20
    e760:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
    e764:	cmp	w0, #0x0
    e768:	cset	w0, eq  // eq = none
    e76c:	ldp	x19, x20, [sp, #16]
    e770:	ldp	x21, x22, [sp, #32]
    e774:	ldp	x23, x24, [sp, #48]
    e778:	ldr	x25, [sp, #64]
    e77c:	ldp	x29, x30, [sp], #80
    e780:	ret

000000000000e784 <GOMP_loop_ull_dynamic_start@@GOMP_2.0>:
    e784:	stp	x29, x30, [sp, #-80]!
    e788:	mov	x29, sp
    e78c:	stp	x19, x20, [sp, #16]
    e790:	stp	x21, x22, [sp, #32]
    e794:	stp	x23, x24, [sp, #48]
    e798:	str	x25, [sp, #64]
    e79c:	and	w25, w0, #0xff
    e7a0:	mov	x20, x1
    e7a4:	mov	x24, x2
    e7a8:	mov	x19, x3
    e7ac:	mov	x23, x4
    e7b0:	mov	x21, x5
    e7b4:	mov	x22, x6
    e7b8:	mov	x0, #0x0                   	// #0
    e7bc:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    e7c0:	and	w0, w0, #0xff
    e7c4:	cbnz	w0, e7ec <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x68>
    e7c8:	mov	x1, x22
    e7cc:	mov	x0, x21
    e7d0:	bl	c4c0 <omp_is_initial_device@@OMP_4.0+0x798>
    e7d4:	ldp	x19, x20, [sp, #16]
    e7d8:	ldp	x21, x22, [sp, #32]
    e7dc:	ldp	x23, x24, [sp, #48]
    e7e0:	ldr	x25, [sp, #64]
    e7e4:	ldp	x29, x30, [sp], #80
    e7e8:	ret
    e7ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e7f0:	ldr	x0, [x0, #4016]
    e7f4:	mrs	x1, tpidr_el0
    e7f8:	add	x0, x1, x0
    e7fc:	ldr	x1, [x0, #24]
    e800:	mov	w0, #0x2                   	// #2
    e804:	str	w0, [x1]
    e808:	str	x23, [x1, #8]
    e80c:	cmp	w25, #0x0
    e810:	ccmp	x20, x24, #0x0, ne  // ne = any
    e814:	b.hi	e870 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xec>  // b.pmore
    e818:	eor	w0, w25, #0x1
    e81c:	cmp	x20, x24
    e820:	cset	w2, cc  // cc = lo, ul, last
    e824:	tst	w2, w0
    e828:	b.ne	e91c <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x198>  // b.any
    e82c:	str	x24, [x1, #16]
    e830:	str	x19, [x1, #24]
    e834:	str	x20, [x1, #72]
    e838:	str	wzr, [x1, #4]
    e83c:	mul	x19, x19, x23
    e840:	str	x19, [x1, #8]
    e844:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e848:	ldr	x0, [x0, #4016]
    e84c:	mrs	x2, tpidr_el0
    e850:	add	x0, x2, x0
    e854:	ldr	x0, [x0, #16]
    e858:	cbz	x0, e864 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0xe0>
    e85c:	mov	x20, x24
    e860:	b	e8a4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x120>
    e864:	mov	x20, x24
    e868:	mov	x2, #0x1                   	// #1
    e86c:	b	e8a8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x124>
    e870:	str	x20, [x1, #16]
    e874:	str	x19, [x1, #24]
    e878:	str	x20, [x1, #72]
    e87c:	str	wzr, [x1, #4]
    e880:	mul	x19, x19, x23
    e884:	str	x19, [x1, #8]
    e888:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e88c:	ldr	x0, [x0, #4016]
    e890:	mrs	x2, tpidr_el0
    e894:	add	x0, x2, x0
    e898:	ldr	x0, [x0, #16]
    e89c:	mov	x2, #0x1                   	// #1
    e8a0:	cbz	x0, e8ac <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x128>
    e8a4:	ldr	w2, [x0]
    e8a8:	cbz	w25, e950 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1cc>
    e8ac:	orr	x3, x2, x19
    e8b0:	mov	x0, #0x7fffffff            	// #2147483647
    e8b4:	cmp	x3, x0
    e8b8:	b.hi	e8d0 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x14c>  // b.pmore
    e8bc:	madd	x19, x2, x19, x19
    e8c0:	mvn	x19, x19
    e8c4:	cmp	x19, x20
    e8c8:	cset	w0, hi  // hi = pmore
    e8cc:	str	w0, [x1, #4]
    e8d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e8d4:	ldr	x0, [x0, #4016]
    e8d8:	mrs	x1, tpidr_el0
    e8dc:	add	x0, x1, x0
    e8e0:	ldr	x0, [x0, #32]
    e8e4:	cbz	x0, e7c8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>
    e8e8:	add	x0, x0, #0x50
    e8ec:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e8f0:	ldr	x1, [x1, #4016]
    e8f4:	mrs	x2, tpidr_el0
    e8f8:	add	x1, x2, x1
    e8fc:	ldr	x2, [x1, #24]
    e900:	ldxr	x1, [x0]
    e904:	stlxr	w3, x2, [x0]
    e908:	cbnz	w3, e900 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x17c>
    e90c:	cmp	x1, #0x1
    e910:	b.eq	e7c8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>  // b.none
    e914:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    e918:	b	e7c8 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x44>
    e91c:	str	x20, [x1, #16]
    e920:	str	x19, [x1, #24]
    e924:	str	x20, [x1, #72]
    e928:	str	wzr, [x1, #4]
    e92c:	mul	x19, x19, x23
    e930:	str	x19, [x1, #8]
    e934:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e938:	ldr	x0, [x0, #4016]
    e93c:	mrs	x2, tpidr_el0
    e940:	add	x0, x2, x0
    e944:	ldr	x0, [x0, #16]
    e948:	mov	x2, #0x1                   	// #1
    e94c:	cbnz	x0, e8a4 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x120>
    e950:	neg	x0, x19
    e954:	orr	x4, x2, x0
    e958:	mov	x3, #0x7fffffff            	// #2147483647
    e95c:	cmp	x4, x3
    e960:	b.hi	e978 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x1f4>  // b.pmore
    e964:	madd	x0, x2, x0, x0
    e968:	add	x0, x0, #0x1
    e96c:	cmp	x0, x20
    e970:	cset	w0, cc  // cc = lo, ul, last
    e974:	str	w0, [x1, #4]
    e978:	ldr	w0, [x1, #4]
    e97c:	orr	w0, w0, #0x2
    e980:	str	w0, [x1, #4]
    e984:	b	e8d0 <GOMP_loop_ull_dynamic_start@@GOMP_2.0+0x14c>

000000000000e988 <GOMP_loop_ull_guided_start@@GOMP_2.0>:
    e988:	stp	x29, x30, [sp, #-80]!
    e98c:	mov	x29, sp
    e990:	stp	x19, x20, [sp, #16]
    e994:	stp	x21, x22, [sp, #32]
    e998:	stp	x23, x24, [sp, #48]
    e99c:	str	x25, [sp, #64]
    e9a0:	and	w25, w0, #0xff
    e9a4:	mov	x19, x1
    e9a8:	mov	x22, x2
    e9ac:	mov	x23, x3
    e9b0:	mov	x24, x4
    e9b4:	mov	x20, x5
    e9b8:	mov	x21, x6
    e9bc:	mov	x0, #0x0                   	// #0
    e9c0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    e9c4:	and	w0, w0, #0xff
    e9c8:	cbz	w0, ea98 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x110>
    e9cc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    e9d0:	ldr	x0, [x0, #4016]
    e9d4:	mrs	x1, tpidr_el0
    e9d8:	add	x0, x1, x0
    e9dc:	ldr	x0, [x0, #24]
    e9e0:	mov	w1, #0x3                   	// #3
    e9e4:	str	w1, [x0]
    e9e8:	str	x24, [x0, #8]
    e9ec:	cmp	w25, #0x0
    e9f0:	ccmp	x19, x22, #0x0, ne  // ne = any
    e9f4:	b.hi	ea44 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xbc>  // b.pmore
    e9f8:	eor	w1, w25, #0x1
    e9fc:	cmp	x19, x22
    ea00:	cset	w2, cc  // cc = lo, ul, last
    ea04:	tst	w2, w1
    ea08:	b.ne	ea34 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xac>  // b.any
    ea0c:	str	x22, [x0, #16]
    ea10:	str	x23, [x0, #24]
    ea14:	str	x19, [x0, #72]
    ea18:	str	wzr, [x0, #4]
    ea1c:	cbnz	w25, ea54 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xcc>
    ea20:	mov	w1, #0x2                   	// #2
    ea24:	str	w1, [x0, #4]
    ea28:	b	ea54 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xcc>
    ea2c:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ea30:	b	ea98 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x110>
    ea34:	str	x19, [x0, #16]
    ea38:	str	x23, [x0, #24]
    ea3c:	str	x19, [x0, #72]
    ea40:	b	ea20 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x98>
    ea44:	str	x19, [x0, #16]
    ea48:	str	x23, [x0, #24]
    ea4c:	str	x19, [x0, #72]
    ea50:	str	wzr, [x0, #4]
    ea54:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ea58:	ldr	x0, [x0, #4016]
    ea5c:	mrs	x1, tpidr_el0
    ea60:	add	x0, x1, x0
    ea64:	ldr	x0, [x0, #32]
    ea68:	cbz	x0, ea98 <GOMP_loop_ull_guided_start@@GOMP_2.0+0x110>
    ea6c:	add	x0, x0, #0x50
    ea70:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ea74:	ldr	x1, [x1, #4016]
    ea78:	mrs	x2, tpidr_el0
    ea7c:	add	x1, x2, x1
    ea80:	ldr	x2, [x1, #24]
    ea84:	ldxr	x1, [x0]
    ea88:	stlxr	w3, x2, [x0]
    ea8c:	cbnz	w3, ea84 <GOMP_loop_ull_guided_start@@GOMP_2.0+0xfc>
    ea90:	cmp	x1, #0x1
    ea94:	b.ne	ea2c <GOMP_loop_ull_guided_start@@GOMP_2.0+0xa4>  // b.any
    ea98:	mov	x1, x21
    ea9c:	mov	x0, x20
    eaa0:	bl	c66c <omp_is_initial_device@@OMP_4.0+0x944>
    eaa4:	ldp	x19, x20, [sp, #16]
    eaa8:	ldp	x21, x22, [sp, #32]
    eaac:	ldp	x23, x24, [sp, #48]
    eab0:	ldr	x25, [sp, #64]
    eab4:	ldp	x29, x30, [sp], #80
    eab8:	ret

000000000000eabc <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0>:
    eabc:	stp	x29, x30, [sp, #-16]!
    eac0:	mov	x29, sp
    eac4:	and	w0, w0, #0xff
    eac8:	mov	x6, x5
    eacc:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ead0:	ldr	x5, [x5, #4016]
    ead4:	mrs	x7, tpidr_el0
    ead8:	add	x5, x7, x5
    eadc:	ldr	x5, [x5, #80]
    eae0:	add	x8, x5, #0x90
    eae4:	adrp	x7, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    eae8:	add	x7, x7, #0x2b8
    eaec:	cmp	x5, #0x0
    eaf0:	csel	x7, x7, x8, eq  // eq = none
    eaf4:	ldr	w5, [x7, #8]
    eaf8:	and	w8, w5, #0x7fffffff
    eafc:	cmp	w8, #0x3
    eb00:	b.eq	eb64 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa8>  // b.none
    eb04:	tst	w5, #0x7ffffffc
    eb08:	b.ne	eb30 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x74>  // b.any
    eb0c:	cmp	w8, #0x1
    eb10:	b.eq	eb4c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0x90>  // b.none
    eb14:	cmp	w8, #0x2
    eb18:	b.ne	eb78 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xbc>  // b.any
    eb1c:	mov	x5, x4
    eb20:	ldrsw	x4, [x7, #12]
    eb24:	bl	e784 <GOMP_loop_ull_dynamic_start@@GOMP_2.0>
    eb28:	and	w0, w0, #0xff
    eb2c:	b	eb5c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa0>
    eb30:	cmp	w8, #0x4
    eb34:	b.ne	eb78 <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xbc>  // b.any
    eb38:	mov	x5, x4
    eb3c:	mov	x4, #0x0                   	// #0
    eb40:	bl	e634 <GOMP_loop_ull_static_start@@GOMP_2.0>
    eb44:	and	w0, w0, #0xff
    eb48:	b	eb5c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa0>
    eb4c:	mov	x5, x4
    eb50:	ldrsw	x4, [x7, #12]
    eb54:	bl	e634 <GOMP_loop_ull_static_start@@GOMP_2.0>
    eb58:	and	w0, w0, #0xff
    eb5c:	ldp	x29, x30, [sp], #16
    eb60:	ret
    eb64:	mov	x5, x4
    eb68:	ldrsw	x4, [x7, #12]
    eb6c:	bl	e988 <GOMP_loop_ull_guided_start@@GOMP_2.0>
    eb70:	and	w0, w0, #0xff
    eb74:	b	eb5c <GOMP_loop_ull_maybe_nonmonotonic_runtime_start@@GOMP_5.0+0xa0>
    eb78:	bl	8870 <abort@plt>

000000000000eb7c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>:
    eb7c:	stp	x29, x30, [sp, #-80]!
    eb80:	mov	x29, sp
    eb84:	stp	x19, x20, [sp, #16]
    eb88:	stp	x21, x22, [sp, #32]
    eb8c:	stp	x23, x24, [sp, #48]
    eb90:	str	x25, [sp, #64]
    eb94:	and	w25, w0, #0xff
    eb98:	mov	x19, x1
    eb9c:	mov	x22, x2
    eba0:	mov	x23, x3
    eba4:	mov	x24, x4
    eba8:	mov	x20, x5
    ebac:	mov	x21, x6
    ebb0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ebb4:	ldr	x0, [x0, #4016]
    ebb8:	mrs	x1, tpidr_el0
    ebbc:	add	x0, x1, x0
    ebc0:	str	xzr, [x0, #72]
    ebc4:	mov	x0, #0x1                   	// #1
    ebc8:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    ebcc:	and	w0, w0, #0xff
    ebd0:	cbz	w0, eca4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x128>
    ebd4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ebd8:	ldr	x0, [x0, #4016]
    ebdc:	mrs	x1, tpidr_el0
    ebe0:	add	x0, x1, x0
    ebe4:	ldr	x0, [x0, #24]
    ebe8:	mov	w1, #0x1                   	// #1
    ebec:	str	w1, [x0]
    ebf0:	str	x24, [x0, #8]
    ebf4:	cmp	w25, #0x0
    ebf8:	ccmp	x19, x22, #0x0, ne  // ne = any
    ebfc:	b.hi	ec4c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xd0>  // b.pmore
    ec00:	eor	w1, w25, w1
    ec04:	cmp	x19, x22
    ec08:	cset	w2, cc  // cc = lo, ul, last
    ec0c:	tst	w2, w1
    ec10:	b.ne	ec3c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xc0>  // b.any
    ec14:	str	x22, [x0, #16]
    ec18:	str	x23, [x0, #24]
    ec1c:	str	x19, [x0, #72]
    ec20:	str	wzr, [x0, #4]
    ec24:	cbnz	w25, ec5c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xe0>
    ec28:	mov	w1, #0x2                   	// #2
    ec2c:	str	w1, [x0, #4]
    ec30:	b	ec5c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xe0>
    ec34:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ec38:	b	eca4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x128>
    ec3c:	str	x19, [x0, #16]
    ec40:	str	x23, [x0, #24]
    ec44:	str	x19, [x0, #72]
    ec48:	b	ec28 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xac>
    ec4c:	str	x19, [x0, #16]
    ec50:	str	x23, [x0, #24]
    ec54:	str	x19, [x0, #72]
    ec58:	str	wzr, [x0, #4]
    ec5c:	bl	105b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x34c>
    ec60:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ec64:	ldr	x0, [x0, #4016]
    ec68:	mrs	x1, tpidr_el0
    ec6c:	add	x0, x1, x0
    ec70:	ldr	x0, [x0, #32]
    ec74:	cbz	x0, eca4 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x128>
    ec78:	add	x0, x0, #0x50
    ec7c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ec80:	ldr	x1, [x1, #4016]
    ec84:	mrs	x2, tpidr_el0
    ec88:	add	x1, x2, x1
    ec8c:	ldr	x2, [x1, #24]
    ec90:	ldxr	x1, [x0]
    ec94:	stlxr	w3, x2, [x0]
    ec98:	cbnz	w3, ec90 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0x114>
    ec9c:	cmp	x1, #0x1
    eca0:	b.ne	ec34 <GOMP_loop_ull_ordered_static_start@@GOMP_2.0+0xb8>  // b.any
    eca4:	mov	x1, x21
    eca8:	mov	x0, x20
    ecac:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
    ecb0:	cmp	w0, #0x0
    ecb4:	cset	w0, eq  // eq = none
    ecb8:	ldp	x19, x20, [sp, #16]
    ecbc:	ldp	x21, x22, [sp, #32]
    ecc0:	ldp	x23, x24, [sp, #48]
    ecc4:	ldr	x25, [sp, #64]
    ecc8:	ldp	x29, x30, [sp], #80
    eccc:	ret

000000000000ecd0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>:
    ecd0:	stp	x29, x30, [sp, #-80]!
    ecd4:	mov	x29, sp
    ecd8:	stp	x19, x20, [sp, #16]
    ecdc:	stp	x21, x22, [sp, #32]
    ece0:	stp	x23, x24, [sp, #48]
    ece4:	str	x25, [sp, #64]
    ece8:	and	w25, w0, #0xff
    ecec:	mov	x20, x1
    ecf0:	mov	x24, x2
    ecf4:	mov	x19, x3
    ecf8:	mov	x23, x4
    ecfc:	mov	x21, x5
    ed00:	mov	x22, x6
    ed04:	mov	x0, #0x1                   	// #1
    ed08:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    ed0c:	and	w0, w0, #0xff
    ed10:	cbnz	w0, eda4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xd4>
    ed14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ed18:	ldr	x0, [x0, #4016]
    ed1c:	mrs	x1, tpidr_el0
    ed20:	add	x0, x1, x0
    ed24:	ldr	x0, [x0, #24]
    ed28:	add	x0, x0, #0x40
    ed2c:	mov	w2, #0x1                   	// #1
    ed30:	ldaxr	w1, [x0]
    ed34:	cbnz	w1, ed40 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x70>
    ed38:	stxr	w3, w2, [x0]
    ed3c:	cbnz	w3, ed30 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x60>
    ed40:	cmp	w1, #0x0
    ed44:	b.ne	ee30 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x160>  // b.any
    ed48:	mov	x1, x22
    ed4c:	mov	x0, x21
    ed50:	bl	c458 <omp_is_initial_device@@OMP_4.0+0x730>
    ed54:	mov	w19, w0
    ed58:	tst	w0, #0xff
    ed5c:	b.ne	ee38 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x168>  // b.any
    ed60:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ed64:	ldr	x0, [x0, #4016]
    ed68:	mrs	x1, tpidr_el0
    ed6c:	add	x0, x1, x0
    ed70:	ldr	x0, [x0, #24]
    ed74:	add	x0, x0, #0x40
    ed78:	ldxr	w1, [x0]
    ed7c:	stlxr	w2, wzr, [x0]
    ed80:	cbnz	w2, ed78 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xa8>
    ed84:	tbnz	w1, #31, ee40 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x170>
    ed88:	mov	w0, w19
    ed8c:	ldp	x19, x20, [sp, #16]
    ed90:	ldp	x21, x22, [sp, #32]
    ed94:	ldp	x23, x24, [sp, #48]
    ed98:	ldr	x25, [sp, #64]
    ed9c:	ldp	x29, x30, [sp], #80
    eda0:	ret
    eda4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    eda8:	ldr	x0, [x0, #4016]
    edac:	mrs	x1, tpidr_el0
    edb0:	add	x0, x1, x0
    edb4:	ldr	x1, [x0, #24]
    edb8:	mov	w0, #0x2                   	// #2
    edbc:	str	w0, [x1]
    edc0:	str	x23, [x1, #8]
    edc4:	cmp	w25, #0x0
    edc8:	ccmp	x20, x24, #0x0, ne  // ne = any
    edcc:	b.hi	ee48 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x178>  // b.pmore
    edd0:	eor	w0, w25, #0x1
    edd4:	cmp	x20, x24
    edd8:	cset	w2, cc  // cc = lo, ul, last
    eddc:	tst	w2, w0
    ede0:	b.ne	ef28 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x258>  // b.any
    ede4:	str	x24, [x1, #16]
    ede8:	str	x19, [x1, #24]
    edec:	str	x20, [x1, #72]
    edf0:	str	wzr, [x1, #4]
    edf4:	mul	x19, x19, x23
    edf8:	str	x19, [x1, #8]
    edfc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ee00:	ldr	x0, [x0, #4016]
    ee04:	mrs	x2, tpidr_el0
    ee08:	add	x0, x2, x0
    ee0c:	ldr	x0, [x0, #16]
    ee10:	cbz	x0, ee1c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x14c>
    ee14:	mov	x20, x24
    ee18:	b	ee7c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1ac>
    ee1c:	mov	x20, x24
    ee20:	mov	x2, #0x1                   	// #1
    ee24:	b	ee80 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1b0>
    ee28:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    ee2c:	b	eedc <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x20c>
    ee30:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    ee34:	b	ed48 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x78>
    ee38:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    ee3c:	b	ed60 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x90>
    ee40:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    ee44:	b	ed88 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0xb8>
    ee48:	str	x20, [x1, #16]
    ee4c:	str	x19, [x1, #24]
    ee50:	str	x20, [x1, #72]
    ee54:	str	wzr, [x1, #4]
    ee58:	mul	x19, x19, x23
    ee5c:	str	x19, [x1, #8]
    ee60:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ee64:	ldr	x0, [x0, #4016]
    ee68:	mrs	x2, tpidr_el0
    ee6c:	add	x0, x2, x0
    ee70:	ldr	x0, [x0, #16]
    ee74:	mov	x2, #0x1                   	// #1
    ee78:	cbz	x0, ee84 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1b4>
    ee7c:	ldr	w2, [x0]
    ee80:	cbz	w25, ef5c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x28c>
    ee84:	orr	x3, x2, x19
    ee88:	mov	x0, #0x7fffffff            	// #2147483647
    ee8c:	cmp	x3, x0
    ee90:	b.hi	eea8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1d8>  // b.pmore
    ee94:	madd	x19, x2, x19, x19
    ee98:	mvn	x19, x19
    ee9c:	cmp	x19, x20
    eea0:	cset	w0, hi  // hi = pmore
    eea4:	str	w0, [x1, #4]
    eea8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    eeac:	ldr	x0, [x0, #4016]
    eeb0:	mrs	x1, tpidr_el0
    eeb4:	add	x0, x1, x0
    eeb8:	ldr	x0, [x0, #24]
    eebc:	add	x0, x0, #0x40
    eec0:	mov	w2, #0x1                   	// #1
    eec4:	ldaxr	w1, [x0]
    eec8:	cbnz	w1, eed4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x204>
    eecc:	stxr	w3, w2, [x0]
    eed0:	cbnz	w3, eec4 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1f4>
    eed4:	cmp	w1, #0x0
    eed8:	b.ne	ee28 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x158>  // b.any
    eedc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    eee0:	ldr	x0, [x0, #4016]
    eee4:	mrs	x1, tpidr_el0
    eee8:	add	x0, x1, x0
    eeec:	ldr	x0, [x0, #32]
    eef0:	cbz	x0, ed48 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x78>
    eef4:	add	x0, x0, #0x50
    eef8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    eefc:	ldr	x1, [x1, #4016]
    ef00:	mrs	x2, tpidr_el0
    ef04:	add	x1, x2, x1
    ef08:	ldr	x2, [x1, #24]
    ef0c:	ldxr	x1, [x0]
    ef10:	stlxr	w3, x2, [x0]
    ef14:	cbnz	w3, ef0c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x23c>
    ef18:	cmp	x1, #0x1
    ef1c:	b.eq	ed48 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x78>  // b.none
    ef20:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    ef24:	b	ed48 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x78>
    ef28:	str	x20, [x1, #16]
    ef2c:	str	x19, [x1, #24]
    ef30:	str	x20, [x1, #72]
    ef34:	str	wzr, [x1, #4]
    ef38:	mul	x19, x19, x23
    ef3c:	str	x19, [x1, #8]
    ef40:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ef44:	ldr	x0, [x0, #4016]
    ef48:	mrs	x2, tpidr_el0
    ef4c:	add	x0, x2, x0
    ef50:	ldr	x0, [x0, #16]
    ef54:	mov	x2, #0x1                   	// #1
    ef58:	cbnz	x0, ee7c <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1ac>
    ef5c:	neg	x0, x19
    ef60:	orr	x4, x2, x0
    ef64:	mov	x3, #0x7fffffff            	// #2147483647
    ef68:	cmp	x4, x3
    ef6c:	b.hi	ef84 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x2b4>  // b.pmore
    ef70:	madd	x0, x2, x0, x0
    ef74:	add	x0, x0, #0x1
    ef78:	cmp	x0, x20
    ef7c:	cset	w0, cc  // cc = lo, ul, last
    ef80:	str	w0, [x1, #4]
    ef84:	ldr	w0, [x1, #4]
    ef88:	orr	w0, w0, #0x2
    ef8c:	str	w0, [x1, #4]
    ef90:	b	eea8 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0+0x1d8>

000000000000ef94 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>:
    ef94:	stp	x29, x30, [sp, #-80]!
    ef98:	mov	x29, sp
    ef9c:	stp	x19, x20, [sp, #16]
    efa0:	stp	x21, x22, [sp, #32]
    efa4:	stp	x23, x24, [sp, #48]
    efa8:	str	x25, [sp, #64]
    efac:	and	w25, w0, #0xff
    efb0:	mov	x19, x1
    efb4:	mov	x22, x2
    efb8:	mov	x23, x3
    efbc:	mov	x24, x4
    efc0:	mov	x20, x5
    efc4:	mov	x21, x6
    efc8:	mov	x0, #0x1                   	// #1
    efcc:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    efd0:	and	w0, w0, #0xff
    efd4:	cbz	w0, f048 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xb4>
    efd8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    efdc:	ldr	x0, [x0, #4016]
    efe0:	mrs	x1, tpidr_el0
    efe4:	add	x0, x1, x0
    efe8:	ldr	x0, [x0, #24]
    efec:	mov	w1, #0x3                   	// #3
    eff0:	str	w1, [x0]
    eff4:	str	x24, [x0, #8]
    eff8:	cmp	w25, #0x0
    effc:	ccmp	x19, x22, #0x0, ne  // ne = any
    f000:	b.hi	f0a4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x110>  // b.pmore
    f004:	eor	w1, w25, #0x1
    f008:	cmp	x19, x22
    f00c:	cset	w2, cc  // cc = lo, ul, last
    f010:	tst	w2, w1
    f014:	b.ne	f094 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x100>  // b.any
    f018:	str	x22, [x0, #16]
    f01c:	str	x23, [x0, #24]
    f020:	str	x19, [x0, #72]
    f024:	str	wzr, [x0, #4]
    f028:	cbnz	w25, f0b4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x120>
    f02c:	mov	w1, #0x2                   	// #2
    f030:	str	w1, [x0, #4]
    f034:	b	f0b4 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x120>
    f038:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    f03c:	b	f0e8 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x154>
    f040:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    f044:	b	f12c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>
    f048:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f04c:	ldr	x0, [x0, #4016]
    f050:	mrs	x1, tpidr_el0
    f054:	add	x0, x1, x0
    f058:	ldr	x0, [x0, #24]
    f05c:	add	x0, x0, #0x40
    f060:	mov	w2, #0x1                   	// #1
    f064:	ldaxr	w1, [x0]
    f068:	cbnz	w1, f074 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xe0>
    f06c:	stxr	w3, w2, [x0]
    f070:	cbnz	w3, f064 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xd0>
    f074:	cmp	w1, #0x0
    f078:	b.eq	f12c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>  // b.none
    f07c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    f080:	b	f12c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>
    f084:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    f088:	b	f144 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1b0>
    f08c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    f090:	b	f16c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1d8>
    f094:	str	x19, [x0, #16]
    f098:	str	x23, [x0, #24]
    f09c:	str	x19, [x0, #72]
    f0a0:	b	f02c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x98>
    f0a4:	str	x19, [x0, #16]
    f0a8:	str	x23, [x0, #24]
    f0ac:	str	x19, [x0, #72]
    f0b0:	str	wzr, [x0, #4]
    f0b4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f0b8:	ldr	x0, [x0, #4016]
    f0bc:	mrs	x1, tpidr_el0
    f0c0:	add	x0, x1, x0
    f0c4:	ldr	x0, [x0, #24]
    f0c8:	add	x0, x0, #0x40
    f0cc:	mov	w2, #0x1                   	// #1
    f0d0:	ldaxr	w1, [x0]
    f0d4:	cbnz	w1, f0e0 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x14c>
    f0d8:	stxr	w3, w2, [x0]
    f0dc:	cbnz	w3, f0d0 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x13c>
    f0e0:	cmp	w1, #0x0
    f0e4:	b.ne	f038 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xa4>  // b.any
    f0e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f0ec:	ldr	x0, [x0, #4016]
    f0f0:	mrs	x1, tpidr_el0
    f0f4:	add	x0, x1, x0
    f0f8:	ldr	x0, [x0, #32]
    f0fc:	cbz	x0, f12c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x198>
    f100:	add	x0, x0, #0x50
    f104:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f108:	ldr	x1, [x1, #4016]
    f10c:	mrs	x2, tpidr_el0
    f110:	add	x1, x2, x1
    f114:	ldr	x2, [x1, #24]
    f118:	ldxr	x1, [x0]
    f11c:	stlxr	w3, x2, [x0]
    f120:	cbnz	w3, f118 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x184>
    f124:	cmp	x1, #0x1
    f128:	b.ne	f040 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xac>  // b.any
    f12c:	mov	x1, x21
    f130:	mov	x0, x20
    f134:	bl	c5cc <omp_is_initial_device@@OMP_4.0+0x8a4>
    f138:	mov	w19, w0
    f13c:	tst	w0, #0xff
    f140:	b.ne	f084 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xf0>  // b.any
    f144:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f148:	ldr	x0, [x0, #4016]
    f14c:	mrs	x1, tpidr_el0
    f150:	add	x0, x1, x0
    f154:	ldr	x0, [x0, #24]
    f158:	add	x0, x0, #0x40
    f15c:	ldxr	w1, [x0]
    f160:	stlxr	w2, wzr, [x0]
    f164:	cbnz	w2, f15c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0x1c8>
    f168:	tbnz	w1, #31, f08c <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0+0xf8>
    f16c:	mov	w0, w19
    f170:	ldp	x19, x20, [sp, #16]
    f174:	ldp	x21, x22, [sp, #32]
    f178:	ldp	x23, x24, [sp, #48]
    f17c:	ldr	x25, [sp, #64]
    f180:	ldp	x29, x30, [sp], #80
    f184:	ret

000000000000f188 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0>:
    f188:	stp	x29, x30, [sp, #-16]!
    f18c:	mov	x29, sp
    f190:	and	w0, w0, #0xff
    f194:	mov	x6, x5
    f198:	adrp	x5, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f19c:	ldr	x5, [x5, #4016]
    f1a0:	mrs	x7, tpidr_el0
    f1a4:	add	x5, x7, x5
    f1a8:	ldr	x5, [x5, #80]
    f1ac:	add	x8, x5, #0x90
    f1b0:	adrp	x7, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    f1b4:	add	x7, x7, #0x2b8
    f1b8:	cmp	x5, #0x0
    f1bc:	csel	x7, x7, x8, eq  // eq = none
    f1c0:	ldr	w5, [x7, #8]
    f1c4:	and	w8, w5, #0x7fffffff
    f1c8:	cmp	w8, #0x3
    f1cc:	b.eq	f230 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xa8>  // b.none
    f1d0:	tst	w5, #0x7ffffffc
    f1d4:	b.ne	f1fc <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x74>  // b.any
    f1d8:	cmp	w8, #0x1
    f1dc:	b.eq	f218 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0x90>  // b.none
    f1e0:	cmp	w8, #0x2
    f1e4:	b.ne	f244 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xbc>  // b.any
    f1e8:	mov	x5, x4
    f1ec:	ldrsw	x4, [x7, #12]
    f1f0:	bl	ecd0 <GOMP_loop_ull_ordered_dynamic_start@@GOMP_2.0>
    f1f4:	and	w0, w0, #0xff
    f1f8:	b	f228 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xa0>
    f1fc:	cmp	w8, #0x4
    f200:	b.ne	f244 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xbc>  // b.any
    f204:	mov	x5, x4
    f208:	mov	x4, #0x0                   	// #0
    f20c:	bl	eb7c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
    f210:	and	w0, w0, #0xff
    f214:	b	f228 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xa0>
    f218:	mov	x5, x4
    f21c:	ldrsw	x4, [x7, #12]
    f220:	bl	eb7c <GOMP_loop_ull_ordered_static_start@@GOMP_2.0>
    f224:	and	w0, w0, #0xff
    f228:	ldp	x29, x30, [sp], #16
    f22c:	ret
    f230:	mov	x5, x4
    f234:	ldrsw	x4, [x7, #12]
    f238:	bl	ef94 <GOMP_loop_ull_ordered_guided_start@@GOMP_2.0>
    f23c:	and	w0, w0, #0xff
    f240:	b	f228 <GOMP_loop_ull_ordered_runtime_start@@GOMP_2.0+0xa0>
    f244:	bl	8870 <abort@plt>

000000000000f248 <GOMP_loop_ull_ordered_start@@GOMP_5.0>:
    f248:	stp	x29, x30, [sp, #-112]!
    f24c:	mov	x29, sp
    f250:	stp	x19, x20, [sp, #16]
    f254:	stp	x21, x22, [sp, #32]
    f258:	stp	x23, x24, [sp, #48]
    f25c:	stp	x25, x26, [sp, #64]
    f260:	str	x27, [sp, #80]
    f264:	and	w27, w0, #0xff
    f268:	mov	x21, x1
    f26c:	mov	x25, x2
    f270:	mov	x26, x3
    f274:	mov	x19, x4
    f278:	str	x5, [sp, #104]
    f27c:	mov	x22, x6
    f280:	mov	x23, x7
    f284:	ldr	x24, [sp, #112]
    f288:	ldr	x20, [sp, #120]
    f28c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f290:	ldr	x0, [x0, #4016]
    f294:	mrs	x1, tpidr_el0
    f298:	add	x0, x1, x0
    f29c:	str	xzr, [x0, #72]
    f2a0:	cbz	x24, f2a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x60>
    f2a4:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    f2a8:	mov	x0, #0x1                   	// #1
    f2ac:	cbz	x20, f2b8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x70>
    f2b0:	ldr	x0, [x20]
    f2b4:	add	x0, x0, #0x1
    f2b8:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    f2bc:	and	w0, w0, #0xff
    f2c0:	cbnz	w0, f330 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xe8>
    f2c4:	cbz	x24, f2e8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xa0>
    f2c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f2cc:	ldr	x0, [x0, #4016]
    f2d0:	mrs	x1, tpidr_el0
    f2d4:	add	x0, x1, x0
    f2d8:	ldr	x0, [x0, #24]
    f2dc:	ldr	x1, [x0, #88]
    f2e0:	mov	x0, x24
    f2e4:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
    f2e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f2ec:	ldr	x0, [x0, #4016]
    f2f0:	mrs	x1, tpidr_el0
    f2f4:	add	x0, x1, x0
    f2f8:	ldr	x0, [x0, #24]
    f2fc:	ldr	w19, [x0]
    f300:	cmp	x19, #0x1
    f304:	b.eq	f5a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x360>  // b.none
    f308:	add	x0, x0, #0x40
    f30c:	mov	w2, #0x1                   	// #1
    f310:	ldaxr	w1, [x0]
    f314:	cbnz	w1, f320 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xd8>
    f318:	stxr	w3, w2, [x0]
    f31c:	cbnz	w3, f310 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0xc8>
    f320:	cmp	w1, #0x0
    f324:	b.eq	f45c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x214>  // b.none
    f328:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    f32c:	b	f45c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x214>
    f330:	add	x1, sp, #0x68
    f334:	mov	x0, x19
    f338:	bl	e5a0 <GOMP_loop_end_nowait@@GOMP_1.0+0x14>
    f33c:	mov	x19, x0
    f340:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f344:	ldr	x0, [x0, #4016]
    f348:	mrs	x1, tpidr_el0
    f34c:	add	x0, x1, x0
    f350:	ldr	x0, [x0, #24]
    f354:	ldr	x1, [sp, #104]
    f358:	str	w19, [x0]
    f35c:	str	x1, [x0, #8]
    f360:	cmp	w27, #0x0
    f364:	ccmp	x21, x25, #0x0, ne  // ne = any
    f368:	b.hi	f618 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3d0>  // b.pmore
    f36c:	eor	w2, w27, #0x1
    f370:	cmp	x21, x25
    f374:	cset	w4, cc  // cc = lo, ul, last
    f378:	tst	w4, w2
    f37c:	b.ne	f5b0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x368>  // b.any
    f380:	str	x25, [x0, #16]
    f384:	str	x26, [x0, #24]
    f388:	str	x21, [x0, #72]
    f38c:	str	wzr, [x0, #4]
    f390:	cmp	w19, #0x2
    f394:	b.eq	f4c4 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x27c>  // b.none
    f398:	cbnz	w27, f3a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x160>
    f39c:	ldr	w1, [x0, #4]
    f3a0:	orr	w1, w1, #0x2
    f3a4:	str	w1, [x0, #4]
    f3a8:	cbz	x24, f3dc <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x194>
    f3ac:	mov	x0, x24
    f3b0:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    f3b4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f3b8:	ldr	x0, [x0, #4016]
    f3bc:	mrs	x1, tpidr_el0
    f3c0:	add	x0, x1, x0
    f3c4:	ldr	x1, [x0, #80]
    f3c8:	ldr	x1, [x1, #40]
    f3cc:	mov	w2, #0x1                   	// #1
    f3d0:	strb	w2, [x1, #50]
    f3d4:	ldr	x0, [x0, #24]
    f3d8:	str	x24, [x0, #88]
    f3dc:	cmp	x19, #0x1
    f3e0:	b.eq	f4f8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2b0>  // b.none
    f3e4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f3e8:	ldr	x0, [x0, #4016]
    f3ec:	mrs	x1, tpidr_el0
    f3f0:	add	x0, x1, x0
    f3f4:	ldr	x0, [x0, #24]
    f3f8:	add	x0, x0, #0x40
    f3fc:	mov	w2, #0x1                   	// #1
    f400:	ldaxr	w1, [x0]
    f404:	cbnz	w1, f410 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1c8>
    f408:	stxr	w3, w2, [x0]
    f40c:	cbnz	w3, f400 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1b8>
    f410:	cmp	w1, #0x0
    f414:	b.ne	f500 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2b8>  // b.any
    f418:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f41c:	ldr	x0, [x0, #4016]
    f420:	mrs	x1, tpidr_el0
    f424:	add	x0, x1, x0
    f428:	ldr	x0, [x0, #32]
    f42c:	cbz	x0, f45c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x214>
    f430:	add	x0, x0, #0x50
    f434:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f438:	ldr	x1, [x1, #4016]
    f43c:	mrs	x2, tpidr_el0
    f440:	add	x1, x2, x1
    f444:	ldr	x2, [x1, #24]
    f448:	ldxr	x1, [x0]
    f44c:	stlxr	w3, x2, [x0]
    f450:	cbnz	w3, f448 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x200>
    f454:	cmp	x1, #0x1
    f458:	b.ne	f508 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2c0>  // b.any
    f45c:	cbz	x20, f49c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x254>
    f460:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f464:	ldr	x1, [x1, #4016]
    f468:	mrs	x0, tpidr_el0
    f46c:	add	x1, x0, x1
    f470:	ldr	x0, [x1, #24]
    f474:	ldr	x0, [x0, #32]
    f478:	ldr	x2, [x1, #16]
    f47c:	mov	x1, #0x4                   	// #4
    f480:	cbz	x2, f48c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x244>
    f484:	ldr	w1, [x2]
    f488:	lsl	x1, x1, #2
    f48c:	add	x0, x0, x1
    f490:	add	x0, x0, #0x7
    f494:	and	x0, x0, #0xfffffffffffffff8
    f498:	str	x0, [x20]
    f49c:	cmp	x19, #0x2
    f4a0:	b.eq	f53c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f4>  // b.none
    f4a4:	b.le	f510 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2c8>
    f4a8:	cmp	x19, #0x3
    f4ac:	b.ne	f530 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2e8>  // b.any
    f4b0:	mov	x1, x23
    f4b4:	mov	x0, x22
    f4b8:	bl	c5cc <omp_is_initial_device@@OMP_4.0+0x8a4>
    f4bc:	and	w19, w0, #0xff
    f4c0:	b	f54c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x304>
    f4c4:	mul	x26, x1, x26
    f4c8:	str	x26, [x0, #8]
    f4cc:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f4d0:	ldr	x2, [x2, #4016]
    f4d4:	mrs	x1, tpidr_el0
    f4d8:	add	x1, x1, x2
    f4dc:	ldr	x1, [x1, #16]
    f4e0:	cbz	x1, f4ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2a4>
    f4e4:	mov	x21, x25
    f4e8:	b	f650 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x408>
    f4ec:	mov	x21, x25
    f4f0:	mov	x1, #0x1                   	// #1
    f4f4:	b	f654 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x40c>
    f4f8:	bl	105b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x34c>
    f4fc:	b	f418 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d0>
    f500:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
    f504:	b	f418 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x1d0>
    f508:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    f50c:	b	f45c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x214>
    f510:	cmp	x19, #0x1
    f514:	b.ne	f538 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2f0>  // b.any
    f518:	mov	x1, x23
    f51c:	mov	x0, x22
    f520:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
    f524:	cmp	w0, #0x0
    f528:	cset	w19, eq  // eq = none
    f52c:	b	f578 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x330>
    f530:	cmp	x19, #0x4
    f534:	b.eq	f518 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d0>  // b.none
    f538:	bl	8870 <abort@plt>
    f53c:	mov	x1, x23
    f540:	mov	x0, x22
    f544:	bl	c458 <omp_is_initial_device@@OMP_4.0+0x730>
    f548:	and	w19, w0, #0xff
    f54c:	cbnz	w19, f598 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x350>
    f550:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f554:	ldr	x0, [x0, #4016]
    f558:	mrs	x1, tpidr_el0
    f55c:	add	x0, x1, x0
    f560:	ldr	x0, [x0, #24]
    f564:	add	x0, x0, #0x40
    f568:	ldxr	w1, [x0]
    f56c:	stlxr	w2, wzr, [x0]
    f570:	cbnz	w2, f568 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x320>
    f574:	tbnz	w1, #31, f5a0 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x358>
    f578:	mov	w0, w19
    f57c:	ldp	x19, x20, [sp, #16]
    f580:	ldp	x21, x22, [sp, #32]
    f584:	ldp	x23, x24, [sp, #48]
    f588:	ldp	x25, x26, [sp, #64]
    f58c:	ldr	x27, [sp, #80]
    f590:	ldp	x29, x30, [sp], #112
    f594:	ret
    f598:	bl	102d4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x70>
    f59c:	b	f550 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x308>
    f5a0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
    f5a4:	b	f578 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x330>
    f5a8:	cbnz	x20, f460 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x218>
    f5ac:	b	f518 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x2d0>
    f5b0:	str	x21, [x0, #16]
    f5b4:	str	x26, [x0, #24]
    f5b8:	str	x21, [x0, #72]
    f5bc:	str	wzr, [x0, #4]
    f5c0:	cmp	w19, #0x2
    f5c4:	b.ne	f39c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x154>  // b.any
    f5c8:	mul	x26, x1, x26
    f5cc:	str	x26, [x0, #8]
    f5d0:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f5d4:	ldr	x2, [x2, #4016]
    f5d8:	mrs	x1, tpidr_el0
    f5dc:	add	x1, x1, x2
    f5e0:	ldr	x1, [x1, #16]
    f5e4:	cbnz	x1, f650 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x408>
    f5e8:	mov	x1, #0x1                   	// #1
    f5ec:	neg	x2, x26
    f5f0:	orr	x4, x1, x2
    f5f4:	mov	x3, #0x7fffffff            	// #2147483647
    f5f8:	cmp	x4, x3
    f5fc:	b.hi	f39c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x154>  // b.pmore
    f600:	madd	x2, x1, x2, x2
    f604:	add	x1, x2, #0x1
    f608:	cmp	x1, x21
    f60c:	cset	w1, cc  // cc = lo, ul, last
    f610:	str	w1, [x0, #4]
    f614:	b	f39c <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x154>
    f618:	str	x21, [x0, #16]
    f61c:	str	x26, [x0, #24]
    f620:	str	x21, [x0, #72]
    f624:	str	wzr, [x0, #4]
    f628:	cmp	w19, #0x2
    f62c:	b.ne	f3a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x160>  // b.any
    f630:	mul	x26, x1, x26
    f634:	str	x26, [x0, #8]
    f638:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f63c:	ldr	x1, [x1, #4016]
    f640:	mrs	x2, tpidr_el0
    f644:	add	x1, x2, x1
    f648:	ldr	x1, [x1, #16]
    f64c:	cbz	x1, f680 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x438>
    f650:	ldr	w1, [x1]
    f654:	cbz	w27, f5ec <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x3a4>
    f658:	orr	x3, x1, x26
    f65c:	mov	x2, #0x7fffffff            	// #2147483647
    f660:	cmp	x3, x2
    f664:	b.hi	f3a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x160>  // b.pmore
    f668:	madd	x26, x1, x26, x26
    f66c:	mvn	x1, x26
    f670:	cmp	x1, x21
    f674:	cset	w1, hi  // hi = pmore
    f678:	str	w1, [x0, #4]
    f67c:	b	f3a8 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x160>
    f680:	mov	x1, #0x1                   	// #1
    f684:	b	f658 <GOMP_loop_ull_ordered_start@@GOMP_5.0+0x410>

000000000000f688 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>:
    f688:	stp	x29, x30, [sp, #-64]!
    f68c:	mov	x29, sp
    f690:	stp	x19, x20, [sp, #16]
    f694:	stp	x21, x22, [sp, #32]
    f698:	stp	x23, x24, [sp, #48]
    f69c:	mov	w23, w0
    f6a0:	mov	x21, x1
    f6a4:	mov	x22, x2
    f6a8:	mov	x19, x3
    f6ac:	mov	x20, x4
    f6b0:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f6b4:	ldr	x3, [x3, #4016]
    f6b8:	mrs	x4, tpidr_el0
    f6bc:	add	x3, x4, x3
    f6c0:	str	xzr, [x3, #72]
    f6c4:	mov	x0, #0x0                   	// #0
    f6c8:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    f6cc:	and	w3, w0, #0xff
    f6d0:	cbnz	w3, f6fc <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x74>
    f6d4:	mov	x1, x20
    f6d8:	mov	x0, x19
    f6dc:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
    f6e0:	cmp	w0, #0x0
    f6e4:	cset	w0, eq  // eq = none
    f6e8:	ldp	x19, x20, [sp, #16]
    f6ec:	ldp	x21, x22, [sp, #32]
    f6f0:	ldp	x23, x24, [sp, #48]
    f6f4:	ldp	x29, x30, [sp], #64
    f6f8:	ret
    f6fc:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f700:	ldr	x24, [x24, #4016]
    f704:	mrs	x0, tpidr_el0
    f708:	add	x24, x0, x24
    f70c:	ldr	x0, [x24, #24]
    f710:	ldr	x1, [x21]
    f714:	mov	w2, #0x1                   	// #1
    f718:	str	w2, [x0]
    f71c:	str	x22, [x0, #8]
    f720:	str	x1, [x0, #16]
    f724:	mov	x1, #0x1                   	// #1
    f728:	str	x1, [x0, #24]
    f72c:	str	xzr, [x0, #72]
    f730:	str	wzr, [x0, #4]
    f734:	mov	x3, #0x0                   	// #0
    f738:	mov	x2, x22
    f73c:	mov	x1, x21
    f740:	mov	w0, w23
    f744:	bl	10dc4 <GOMP_doacross_wait@@GOMP_4.5+0x274>
    f748:	ldr	x0, [x24, #32]
    f74c:	cbz	x0, f6d4 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>
    f750:	add	x0, x0, #0x50
    f754:	ldr	x2, [x24, #24]
    f758:	ldxr	x1, [x0]
    f75c:	stlxr	w3, x2, [x0]
    f760:	cbnz	w3, f758 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0xd0>
    f764:	cmp	x1, #0x1
    f768:	b.eq	f6d4 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>  // b.none
    f76c:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    f770:	b	f6d4 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5+0x4c>

000000000000f774 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>:
    f774:	stp	x29, x30, [sp, #-64]!
    f778:	mov	x29, sp
    f77c:	stp	x19, x20, [sp, #16]
    f780:	stp	x21, x22, [sp, #32]
    f784:	str	x23, [sp, #48]
    f788:	mov	w23, w0
    f78c:	mov	x22, x1
    f790:	mov	x19, x2
    f794:	mov	x20, x3
    f798:	mov	x21, x4
    f79c:	mov	x0, #0x0                   	// #0
    f7a0:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    f7a4:	and	w2, w0, #0xff
    f7a8:	cbnz	w2, f7cc <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x58>
    f7ac:	mov	x1, x21
    f7b0:	mov	x0, x20
    f7b4:	bl	c4c0 <omp_is_initial_device@@OMP_4.0+0x798>
    f7b8:	ldp	x19, x20, [sp, #16]
    f7bc:	ldp	x21, x22, [sp, #32]
    f7c0:	ldr	x23, [sp, #48]
    f7c4:	ldp	x29, x30, [sp], #64
    f7c8:	ret
    f7cc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f7d0:	ldr	x1, [x1, #4016]
    f7d4:	mrs	x0, tpidr_el0
    f7d8:	add	x1, x0, x1
    f7dc:	ldr	x0, [x1, #24]
    f7e0:	ldr	x2, [x22]
    f7e4:	mov	w3, #0x2                   	// #2
    f7e8:	str	w3, [x0]
    f7ec:	str	x19, [x0, #8]
    f7f0:	str	x2, [x0, #16]
    f7f4:	mov	x3, #0x1                   	// #1
    f7f8:	str	x3, [x0, #24]
    f7fc:	str	xzr, [x0, #72]
    f800:	str	wzr, [x0, #4]
    f804:	ldr	x3, [x1, #16]
    f808:	mov	x1, #0x1                   	// #1
    f80c:	cbz	x3, f814 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xa0>
    f810:	ldr	w1, [x3]
    f814:	orr	x4, x1, x19
    f818:	mov	x3, #0x7fffffff            	// #2147483647
    f81c:	cmp	x4, x3
    f820:	b.hi	f838 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0xc4>  // b.pmore
    f824:	madd	x1, x1, x19, x19
    f828:	mvn	x1, x1
    f82c:	cmp	x2, x1
    f830:	cset	w1, cc  // cc = lo, ul, last
    f834:	str	w1, [x0, #4]
    f838:	mov	x3, #0x0                   	// #0
    f83c:	mov	x2, x19
    f840:	mov	x1, x22
    f844:	mov	w0, w23
    f848:	bl	10dc4 <GOMP_doacross_wait@@GOMP_4.5+0x274>
    f84c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f850:	ldr	x0, [x0, #4016]
    f854:	mrs	x1, tpidr_el0
    f858:	add	x0, x1, x0
    f85c:	ldr	x0, [x0, #32]
    f860:	cbz	x0, f7ac <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x38>
    f864:	add	x0, x0, #0x50
    f868:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f86c:	ldr	x1, [x1, #4016]
    f870:	mrs	x2, tpidr_el0
    f874:	add	x1, x2, x1
    f878:	ldr	x2, [x1, #24]
    f87c:	ldxr	x1, [x0]
    f880:	stlxr	w3, x2, [x0]
    f884:	cbnz	w3, f87c <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x108>
    f888:	cmp	x1, #0x1
    f88c:	b.eq	f7ac <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x38>  // b.none
    f890:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    f894:	b	f7ac <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5+0x38>

000000000000f898 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>:
    f898:	stp	x29, x30, [sp, #-64]!
    f89c:	mov	x29, sp
    f8a0:	stp	x19, x20, [sp, #16]
    f8a4:	stp	x21, x22, [sp, #32]
    f8a8:	stp	x23, x24, [sp, #48]
    f8ac:	mov	w22, w0
    f8b0:	mov	x21, x1
    f8b4:	mov	x23, x2
    f8b8:	mov	x19, x3
    f8bc:	mov	x20, x4
    f8c0:	mov	x0, #0x0                   	// #0
    f8c4:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    f8c8:	and	w3, w0, #0xff
    f8cc:	cbnz	w3, f8f0 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x58>
    f8d0:	mov	x1, x20
    f8d4:	mov	x0, x19
    f8d8:	bl	c66c <omp_is_initial_device@@OMP_4.0+0x944>
    f8dc:	ldp	x19, x20, [sp, #16]
    f8e0:	ldp	x21, x22, [sp, #32]
    f8e4:	ldp	x23, x24, [sp, #48]
    f8e8:	ldp	x29, x30, [sp], #64
    f8ec:	ret
    f8f0:	adrp	x24, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f8f4:	ldr	x24, [x24, #4016]
    f8f8:	mrs	x0, tpidr_el0
    f8fc:	add	x24, x0, x24
    f900:	ldr	x3, [x24, #24]
    f904:	ldr	x0, [x21]
    f908:	mov	w1, #0x3                   	// #3
    f90c:	str	w1, [x3]
    f910:	str	x23, [x3, #8]
    f914:	str	x0, [x3, #16]
    f918:	mov	x0, #0x1                   	// #1
    f91c:	str	x0, [x3, #24]
    f920:	str	xzr, [x3, #72]
    f924:	str	wzr, [x3, #4]
    f928:	mov	x3, #0x0                   	// #0
    f92c:	mov	x2, x23
    f930:	mov	x1, x21
    f934:	mov	w0, w22
    f938:	bl	10dc4 <GOMP_doacross_wait@@GOMP_4.5+0x274>
    f93c:	ldr	x0, [x24, #32]
    f940:	cbz	x0, f8d0 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>
    f944:	add	x0, x0, #0x50
    f948:	ldr	x2, [x24, #24]
    f94c:	ldxr	x1, [x0]
    f950:	stlxr	w3, x2, [x0]
    f954:	cbnz	w3, f94c <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0xb4>
    f958:	cmp	x1, #0x1
    f95c:	b.eq	f8d0 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>  // b.none
    f960:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    f964:	b	f8d0 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5+0x38>

000000000000f968 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5>:
    f968:	stp	x29, x30, [sp, #-16]!
    f96c:	mov	x29, sp
    f970:	mov	x4, x3
    f974:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    f978:	ldr	x3, [x3, #4016]
    f97c:	mrs	x5, tpidr_el0
    f980:	add	x3, x5, x3
    f984:	ldr	x3, [x3, #80]
    f988:	add	x6, x3, #0x90
    f98c:	adrp	x5, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
    f990:	add	x5, x5, #0x2b8
    f994:	cmp	x3, #0x0
    f998:	csel	x5, x5, x6, eq  // eq = none
    f99c:	ldr	w3, [x5, #8]
    f9a0:	and	w6, w3, #0x7fffffff
    f9a4:	cmp	w6, #0x3
    f9a8:	b.eq	fa0c <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xa4>  // b.none
    f9ac:	tst	w3, #0x7ffffffc
    f9b0:	b.ne	f9d8 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x70>  // b.any
    f9b4:	cmp	w6, #0x1
    f9b8:	b.eq	f9f4 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x8c>  // b.none
    f9bc:	cmp	w6, #0x2
    f9c0:	b.ne	fa20 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xb8>  // b.any
    f9c4:	mov	x3, x2
    f9c8:	ldrsw	x2, [x5, #12]
    f9cc:	bl	f774 <GOMP_loop_ull_doacross_dynamic_start@@GOMP_4.5>
    f9d0:	and	w0, w0, #0xff
    f9d4:	b	fa04 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x9c>
    f9d8:	cmp	w6, #0x4
    f9dc:	b.ne	fa20 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0xb8>  // b.any
    f9e0:	mov	x3, x2
    f9e4:	mov	x2, #0x0                   	// #0
    f9e8:	bl	f688 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
    f9ec:	and	w0, w0, #0xff
    f9f0:	b	fa04 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x9c>
    f9f4:	mov	x3, x2
    f9f8:	ldrsw	x2, [x5, #12]
    f9fc:	bl	f688 <GOMP_loop_ull_doacross_static_start@@GOMP_4.5>
    fa00:	and	w0, w0, #0xff
    fa04:	ldp	x29, x30, [sp], #16
    fa08:	ret
    fa0c:	mov	x3, x2
    fa10:	ldrsw	x2, [x5, #12]
    fa14:	bl	f898 <GOMP_loop_ull_doacross_guided_start@@GOMP_4.5>
    fa18:	and	w0, w0, #0xff
    fa1c:	b	fa04 <GOMP_loop_ull_doacross_runtime_start@@GOMP_4.5+0x9c>
    fa20:	bl	8870 <abort@plt>

000000000000fa24 <GOMP_loop_ull_static_next@@GOMP_2.0>:
    fa24:	stp	x29, x30, [sp, #-16]!
    fa28:	mov	x29, sp
    fa2c:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
    fa30:	cmp	w0, #0x0
    fa34:	cset	w0, eq  // eq = none
    fa38:	ldp	x29, x30, [sp], #16
    fa3c:	ret

000000000000fa40 <GOMP_loop_ull_dynamic_next@@GOMP_2.0>:
    fa40:	stp	x29, x30, [sp, #-16]!
    fa44:	mov	x29, sp
    fa48:	bl	c4c0 <omp_is_initial_device@@OMP_4.0+0x798>
    fa4c:	ldp	x29, x30, [sp], #16
    fa50:	ret

000000000000fa54 <GOMP_loop_ull_guided_next@@GOMP_2.0>:
    fa54:	stp	x29, x30, [sp, #-16]!
    fa58:	mov	x29, sp
    fa5c:	bl	c66c <omp_is_initial_device@@OMP_4.0+0x944>
    fa60:	ldp	x29, x30, [sp], #16
    fa64:	ret

000000000000fa68 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>:
    fa68:	stp	x29, x30, [sp, #-16]!
    fa6c:	mov	x29, sp
    fa70:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fa74:	ldr	x2, [x2, #4016]
    fa78:	mrs	x3, tpidr_el0
    fa7c:	add	x2, x3, x2
    fa80:	ldr	x2, [x2, #24]
    fa84:	ldr	w2, [x2]
    fa88:	cmp	w2, #0x2
    fa8c:	b.eq	facc <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x64>  // b.none
    fa90:	b.ls	faa8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x40>  // b.plast
    fa94:	cmp	w2, #0x3
    fa98:	b.ne	fac0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x58>  // b.any
    fa9c:	bl	c66c <omp_is_initial_device@@OMP_4.0+0x944>
    faa0:	and	w0, w0, #0xff
    faa4:	b	fab8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x50>
    faa8:	cmp	w2, #0x1
    faac:	b.ne	fac8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x60>  // b.any
    fab0:	bl	fa24 <GOMP_loop_ull_static_next@@GOMP_2.0>
    fab4:	and	w0, w0, #0xff
    fab8:	ldp	x29, x30, [sp], #16
    fabc:	ret
    fac0:	cmp	w2, #0x4
    fac4:	b.eq	fab0 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x48>  // b.none
    fac8:	bl	8870 <abort@plt>
    facc:	bl	c4c0 <omp_is_initial_device@@OMP_4.0+0x798>
    fad0:	and	w0, w0, #0xff
    fad4:	b	fab8 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0+0x50>

000000000000fad8 <GOMP_loop_ull_start@@GOMP_5.0>:
    fad8:	stp	x29, x30, [sp, #-112]!
    fadc:	mov	x29, sp
    fae0:	stp	x19, x20, [sp, #16]
    fae4:	stp	x21, x22, [sp, #32]
    fae8:	stp	x23, x24, [sp, #48]
    faec:	stp	x25, x26, [sp, #64]
    faf0:	str	x27, [sp, #80]
    faf4:	and	w27, w0, #0xff
    faf8:	mov	x19, x1
    fafc:	mov	x22, x2
    fb00:	mov	x23, x3
    fb04:	mov	x24, x4
    fb08:	str	x5, [sp, #104]
    fb0c:	mov	x20, x6
    fb10:	mov	x21, x7
    fb14:	ldr	x25, [sp, #112]
    fb18:	ldr	x26, [sp, #120]
    fb1c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fb20:	ldr	x0, [x0, #4016]
    fb24:	mrs	x1, tpidr_el0
    fb28:	add	x0, x1, x0
    fb2c:	str	xzr, [x0, #72]
    fb30:	cbz	x25, fce0 <GOMP_loop_ull_start@@GOMP_5.0+0x208>
    fb34:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    fb38:	mov	x0, #0x0                   	// #0
    fb3c:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    fb40:	and	w0, w0, #0xff
    fb44:	cbnz	w0, fcf0 <GOMP_loop_ull_start@@GOMP_5.0+0x218>
    fb48:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fb4c:	ldr	x0, [x0, #4016]
    fb50:	mrs	x1, tpidr_el0
    fb54:	add	x0, x1, x0
    fb58:	ldr	x0, [x0, #24]
    fb5c:	ldr	x1, [x0, #88]
    fb60:	mov	x0, x25
    fb64:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
    fb68:	cbz	x26, fb88 <GOMP_loop_ull_start@@GOMP_5.0+0xb0>
    fb6c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fb70:	ldr	x0, [x0, #4016]
    fb74:	mrs	x1, tpidr_el0
    fb78:	add	x0, x1, x0
    fb7c:	ldr	x0, [x0, #24]
    fb80:	ldr	x0, [x0, #32]
    fb84:	str	x0, [x26]
    fb88:	mov	x1, x21
    fb8c:	mov	x0, x20
    fb90:	bl	fa68 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    fb94:	ldp	x19, x20, [sp, #16]
    fb98:	ldp	x21, x22, [sp, #32]
    fb9c:	ldp	x23, x24, [sp, #48]
    fba0:	ldp	x25, x26, [sp, #64]
    fba4:	ldr	x27, [sp, #80]
    fba8:	ldp	x29, x30, [sp], #112
    fbac:	ret
    fbb0:	mul	x23, x2, x23
    fbb4:	str	x23, [x1, #8]
    fbb8:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fbbc:	ldr	x2, [x2, #4016]
    fbc0:	mrs	x0, tpidr_el0
    fbc4:	add	x0, x0, x2
    fbc8:	ldr	x0, [x0, #16]
    fbcc:	cbz	x0, fbd8 <GOMP_loop_ull_start@@GOMP_5.0+0x100>
    fbd0:	mov	x19, x22
    fbd4:	b	fcb0 <GOMP_loop_ull_start@@GOMP_5.0+0x1d8>
    fbd8:	mov	x19, x22
    fbdc:	mov	x2, #0x1                   	// #1
    fbe0:	b	fcb4 <GOMP_loop_ull_start@@GOMP_5.0+0x1dc>
    fbe4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fbe8:	ldr	x0, [x0, #4016]
    fbec:	mrs	x1, tpidr_el0
    fbf0:	add	x0, x1, x0
    fbf4:	ldr	x0, [x0, #24]
    fbf8:	mov	w1, #0x0                   	// #0
    fbfc:	add	x0, x0, #0x60
    fc00:	bl	87c0 <memset@plt>
    fc04:	str	x0, [x26]
    fc08:	b	fdcc <GOMP_loop_ull_start@@GOMP_5.0+0x2f4>
    fc0c:	str	x19, [x1, #16]
    fc10:	str	x23, [x1, #24]
    fc14:	str	x19, [x1, #72]
    fc18:	str	wzr, [x1, #4]
    fc1c:	cmp	w0, #0x2
    fc20:	b.ne	fd58 <GOMP_loop_ull_start@@GOMP_5.0+0x280>  // b.any
    fc24:	mul	x23, x2, x23
    fc28:	str	x23, [x1, #8]
    fc2c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fc30:	ldr	x2, [x2, #4016]
    fc34:	mrs	x0, tpidr_el0
    fc38:	add	x0, x0, x2
    fc3c:	ldr	x0, [x0, #16]
    fc40:	mov	x2, #0x1                   	// #1
    fc44:	cbnz	x0, fcb0 <GOMP_loop_ull_start@@GOMP_5.0+0x1d8>
    fc48:	neg	x0, x23
    fc4c:	orr	x4, x2, x0
    fc50:	mov	x3, #0x7fffffff            	// #2147483647
    fc54:	cmp	x4, x3
    fc58:	b.hi	fd58 <GOMP_loop_ull_start@@GOMP_5.0+0x280>  // b.pmore
    fc5c:	madd	x0, x2, x0, x0
    fc60:	add	x0, x0, #0x1
    fc64:	cmp	x0, x19
    fc68:	cset	w0, cc  // cc = lo, ul, last
    fc6c:	str	w0, [x1, #4]
    fc70:	b	fd58 <GOMP_loop_ull_start@@GOMP_5.0+0x280>
    fc74:	str	x19, [x1, #16]
    fc78:	str	x23, [x1, #24]
    fc7c:	str	x19, [x1, #72]
    fc80:	str	wzr, [x1, #4]
    fc84:	cmp	w0, #0x2
    fc88:	b.ne	fd64 <GOMP_loop_ull_start@@GOMP_5.0+0x28c>  // b.any
    fc8c:	mul	x23, x2, x23
    fc90:	str	x23, [x1, #8]
    fc94:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fc98:	ldr	x0, [x0, #4016]
    fc9c:	mrs	x2, tpidr_el0
    fca0:	add	x0, x2, x0
    fca4:	ldr	x0, [x0, #16]
    fca8:	mov	x2, #0x1                   	// #1
    fcac:	cbz	x0, fcb8 <GOMP_loop_ull_start@@GOMP_5.0+0x1e0>
    fcb0:	ldr	w2, [x0]
    fcb4:	cbz	w27, fc48 <GOMP_loop_ull_start@@GOMP_5.0+0x170>
    fcb8:	orr	x3, x2, x23
    fcbc:	mov	x0, #0x7fffffff            	// #2147483647
    fcc0:	cmp	x3, x0
    fcc4:	b.hi	fd64 <GOMP_loop_ull_start@@GOMP_5.0+0x28c>  // b.pmore
    fcc8:	madd	x23, x2, x23, x23
    fccc:	mvn	x2, x23
    fcd0:	cmp	x2, x19
    fcd4:	cset	w0, hi  // hi = pmore
    fcd8:	str	w0, [x1, #4]
    fcdc:	b	fd64 <GOMP_loop_ull_start@@GOMP_5.0+0x28c>
    fce0:	mov	x0, #0x0                   	// #0
    fce4:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    fce8:	and	w0, w0, #0xff
    fcec:	cbz	w0, fb68 <GOMP_loop_ull_start@@GOMP_5.0+0x90>
    fcf0:	add	x1, sp, #0x68
    fcf4:	mov	x0, x24
    fcf8:	bl	e5a0 <GOMP_loop_end_nowait@@GOMP_1.0+0x14>
    fcfc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fd00:	ldr	x1, [x1, #4016]
    fd04:	mrs	x2, tpidr_el0
    fd08:	add	x1, x2, x1
    fd0c:	ldr	x1, [x1, #24]
    fd10:	ldr	x2, [sp, #104]
    fd14:	str	w0, [x1]
    fd18:	str	x2, [x1, #8]
    fd1c:	cmp	w27, #0x0
    fd20:	ccmp	x19, x22, #0x0, ne  // ne = any
    fd24:	b.hi	fc74 <GOMP_loop_ull_start@@GOMP_5.0+0x19c>  // b.pmore
    fd28:	eor	w3, w27, #0x1
    fd2c:	cmp	x19, x22
    fd30:	cset	w4, cc  // cc = lo, ul, last
    fd34:	tst	w4, w3
    fd38:	b.ne	fc0c <GOMP_loop_ull_start@@GOMP_5.0+0x134>  // b.any
    fd3c:	str	x22, [x1, #16]
    fd40:	str	x23, [x1, #24]
    fd44:	str	x19, [x1, #72]
    fd48:	str	wzr, [x1, #4]
    fd4c:	cmp	w0, #0x2
    fd50:	b.eq	fbb0 <GOMP_loop_ull_start@@GOMP_5.0+0xd8>  // b.none
    fd54:	cbnz	w27, fd64 <GOMP_loop_ull_start@@GOMP_5.0+0x28c>
    fd58:	ldr	w0, [x1, #4]
    fd5c:	orr	w0, w0, #0x2
    fd60:	str	w0, [x1, #4]
    fd64:	cbz	x25, fd98 <GOMP_loop_ull_start@@GOMP_5.0+0x2c0>
    fd68:	mov	x0, x25
    fd6c:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    fd70:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fd74:	ldr	x0, [x0, #4016]
    fd78:	mrs	x1, tpidr_el0
    fd7c:	add	x0, x1, x0
    fd80:	ldr	x1, [x0, #80]
    fd84:	ldr	x1, [x1, #40]
    fd88:	mov	w2, #0x1                   	// #1
    fd8c:	strb	w2, [x1, #50]
    fd90:	ldr	x0, [x0, #24]
    fd94:	str	x25, [x0, #88]
    fd98:	cbz	x26, fdcc <GOMP_loop_ull_start@@GOMP_5.0+0x2f4>
    fd9c:	ldr	x2, [x26]
    fda0:	cmp	x2, #0x20
    fda4:	b.ls	fbe4 <GOMP_loop_ull_start@@GOMP_5.0+0x10c>  // b.plast
    fda8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fdac:	ldr	x0, [x0, #4016]
    fdb0:	mrs	x1, tpidr_el0
    fdb4:	add	x0, x1, x0
    fdb8:	ldr	x19, [x0, #24]
    fdbc:	mov	x0, x2
    fdc0:	bl	8c5c <fprintf@plt+0x14c>
    fdc4:	str	x0, [x19, #32]
    fdc8:	str	x0, [x26]
    fdcc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fdd0:	ldr	x0, [x0, #4016]
    fdd4:	mrs	x1, tpidr_el0
    fdd8:	add	x0, x1, x0
    fddc:	ldr	x0, [x0, #32]
    fde0:	cbz	x0, fb88 <GOMP_loop_ull_start@@GOMP_5.0+0xb0>
    fde4:	add	x0, x0, #0x50
    fde8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fdec:	ldr	x1, [x1, #4016]
    fdf0:	mrs	x2, tpidr_el0
    fdf4:	add	x1, x2, x1
    fdf8:	ldr	x2, [x1, #24]
    fdfc:	ldxr	x1, [x0]
    fe00:	stlxr	w3, x2, [x0]
    fe04:	cbnz	w3, fdfc <GOMP_loop_ull_start@@GOMP_5.0+0x324>
    fe08:	cmp	x1, #0x1
    fe0c:	b.eq	fb88 <GOMP_loop_ull_start@@GOMP_5.0+0xb0>  // b.none
    fe10:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    fe14:	b	fb88 <GOMP_loop_ull_start@@GOMP_5.0+0xb0>

000000000000fe18 <GOMP_loop_ull_doacross_start@@GOMP_5.0>:
    fe18:	stp	x29, x30, [sp, #-96]!
    fe1c:	mov	x29, sp
    fe20:	stp	x19, x20, [sp, #16]
    fe24:	stp	x21, x22, [sp, #32]
    fe28:	stp	x23, x24, [sp, #48]
    fe2c:	stp	x25, x26, [sp, #64]
    fe30:	mov	w24, w0
    fe34:	mov	x23, x1
    fe38:	mov	x25, x2
    fe3c:	str	x3, [sp, #88]
    fe40:	mov	x21, x4
    fe44:	mov	x22, x5
    fe48:	mov	x20, x6
    fe4c:	mov	x19, x7
    fe50:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fe54:	ldr	x1, [x1, #4016]
    fe58:	mrs	x3, tpidr_el0
    fe5c:	add	x1, x3, x1
    fe60:	str	xzr, [x1, #72]
    fe64:	cbz	x6, 1001c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x204>
    fe68:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
    fe6c:	mov	x0, #0x0                   	// #0
    fe70:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
    fe74:	and	w0, w0, #0xff
    fe78:	cbz	w0, fff8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1e0>
    fe7c:	mov	x26, #0x0                   	// #0
    fe80:	cbz	x19, fe88 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x70>
    fe84:	ldr	x26, [x19]
    fe88:	add	x1, sp, #0x58
    fe8c:	mov	x0, x25
    fe90:	bl	e5a0 <GOMP_loop_end_nowait@@GOMP_1.0+0x14>
    fe94:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fe98:	ldr	x1, [x1, #4016]
    fe9c:	mrs	x2, tpidr_el0
    fea0:	add	x1, x2, x1
    fea4:	ldr	x1, [x1, #24]
    fea8:	ldr	x3, [x23]
    feac:	ldr	x2, [sp, #88]
    feb0:	str	w0, [x1]
    feb4:	str	x2, [x1, #8]
    feb8:	str	x3, [x1, #16]
    febc:	mov	x4, #0x1                   	// #1
    fec0:	str	x4, [x1, #24]
    fec4:	str	xzr, [x1, #72]
    fec8:	str	wzr, [x1, #4]
    fecc:	cmp	w0, #0x2
    fed0:	b.eq	ffa8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x190>  // b.none
    fed4:	mov	x3, x26
    fed8:	ldr	x2, [sp, #88]
    fedc:	mov	x1, x23
    fee0:	mov	w0, w24
    fee4:	bl	10dc4 <GOMP_doacross_wait@@GOMP_4.5+0x274>
    fee8:	cbz	x20, ff1c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x104>
    feec:	mov	x0, x20
    fef0:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
    fef4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fef8:	ldr	x0, [x0, #4016]
    fefc:	mrs	x1, tpidr_el0
    ff00:	add	x0, x1, x0
    ff04:	ldr	x1, [x0, #80]
    ff08:	ldr	x1, [x1, #40]
    ff0c:	mov	w2, #0x1                   	// #1
    ff10:	strb	w2, [x1, #50]
    ff14:	ldr	x0, [x0, #24]
    ff18:	str	x20, [x0, #88]
    ff1c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ff20:	ldr	x0, [x0, #4016]
    ff24:	mrs	x1, tpidr_el0
    ff28:	add	x0, x1, x0
    ff2c:	ldr	x0, [x0, #32]
    ff30:	cbz	x0, ff60 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x148>
    ff34:	add	x0, x0, #0x50
    ff38:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ff3c:	ldr	x1, [x1, #4016]
    ff40:	mrs	x2, tpidr_el0
    ff44:	add	x1, x2, x1
    ff48:	ldr	x2, [x1, #24]
    ff4c:	ldxr	x1, [x0]
    ff50:	stlxr	w3, x2, [x0]
    ff54:	cbnz	w3, ff4c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x134>
    ff58:	cmp	x1, #0x1
    ff5c:	b.ne	fff0 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1d8>  // b.any
    ff60:	cbz	x19, ff84 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x16c>
    ff64:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ff68:	ldr	x0, [x0, #4016]
    ff6c:	mrs	x1, tpidr_el0
    ff70:	add	x0, x1, x0
    ff74:	ldr	x0, [x0, #24]
    ff78:	ldr	x0, [x0, #32]
    ff7c:	ldr	x0, [x0, #48]
    ff80:	str	x0, [x19]
    ff84:	mov	x1, x22
    ff88:	mov	x0, x21
    ff8c:	bl	fa68 <GOMP_loop_ull_maybe_nonmonotonic_runtime_next@@GOMP_5.0>
    ff90:	ldp	x19, x20, [sp, #16]
    ff94:	ldp	x21, x22, [sp, #32]
    ff98:	ldp	x23, x24, [sp, #48]
    ff9c:	ldp	x25, x26, [sp, #64]
    ffa0:	ldp	x29, x30, [sp], #96
    ffa4:	ret
    ffa8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    ffac:	ldr	x0, [x0, #4016]
    ffb0:	mrs	x4, tpidr_el0
    ffb4:	add	x0, x4, x0
    ffb8:	ldr	x4, [x0, #16]
    ffbc:	mov	x0, #0x1                   	// #1
    ffc0:	cbz	x4, ffc8 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x1b0>
    ffc4:	ldr	w0, [x4]
    ffc8:	orr	x5, x0, x2
    ffcc:	mov	x4, #0x7fffffff            	// #2147483647
    ffd0:	cmp	x5, x4
    ffd4:	b.hi	fed4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xbc>  // b.pmore
    ffd8:	madd	x2, x0, x2, x2
    ffdc:	mvn	x2, x2
    ffe0:	cmp	x3, x2
    ffe4:	cset	w0, cc  // cc = lo, ul, last
    ffe8:	str	w0, [x1, #4]
    ffec:	b	fed4 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0xbc>
    fff0:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
    fff4:	b	ff60 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x148>
    fff8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
    fffc:	ldr	x0, [x0, #4016]
   10000:	mrs	x1, tpidr_el0
   10004:	add	x0, x1, x0
   10008:	ldr	x0, [x0, #24]
   1000c:	ldr	x1, [x0, #88]
   10010:	mov	x0, x20
   10014:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
   10018:	b	ff60 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x148>
   1001c:	mov	x0, #0x0                   	// #0
   10020:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
   10024:	and	w0, w0, #0xff
   10028:	cbnz	w0, fe7c <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x64>
   1002c:	b	ff60 <GOMP_loop_ull_doacross_start@@GOMP_5.0+0x148>

0000000000010030 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>:
   10030:	stp	x29, x30, [sp, #-32]!
   10034:	mov	x29, sp
   10038:	stp	x19, x20, [sp, #16]
   1003c:	mov	x19, x0
   10040:	mov	x20, x1
   10044:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
   10048:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1004c:	ldr	x0, [x0, #4016]
   10050:	mrs	x1, tpidr_el0
   10054:	add	x0, x1, x0
   10058:	ldr	x2, [x0, #24]
   1005c:	add	x2, x2, #0x40
   10060:	mov	w0, #0x1                   	// #1
   10064:	ldaxr	w1, [x2]
   10068:	cbnz	w1, 10074 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x44>
   1006c:	stxr	w3, w0, [x2]
   10070:	cbnz	w3, 10064 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x34>
   10074:	cmp	w1, #0x0
   10078:	b.ne	100cc <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x9c>  // b.any
   1007c:	mov	x1, x20
   10080:	mov	x0, x19
   10084:	bl	c1e4 <omp_is_initial_device@@OMP_4.0+0x4bc>
   10088:	mov	w19, w0
   1008c:	tbz	w0, #31, 100d8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0xa8>
   10090:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10094:	ldr	x0, [x0, #4016]
   10098:	mrs	x1, tpidr_el0
   1009c:	add	x0, x1, x0
   100a0:	ldr	x1, [x0, #24]
   100a4:	add	x1, x1, #0x40
   100a8:	ldxr	w0, [x1]
   100ac:	stlxr	w2, wzr, [x1]
   100b0:	cbnz	w2, 100a8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x78>
   100b4:	tbnz	w0, #31, 100e0 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0xb0>
   100b8:	cmp	w19, #0x0
   100bc:	cset	w0, eq  // eq = none
   100c0:	ldp	x19, x20, [sp, #16]
   100c4:	ldp	x29, x30, [sp], #32
   100c8:	ret
   100cc:	mov	x0, x2
   100d0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   100d4:	b	1007c <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x4c>
   100d8:	bl	10620 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3bc>
   100dc:	b	10090 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x60>
   100e0:	mov	x0, x1
   100e4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   100e8:	b	100b8 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0+0x88>

00000000000100ec <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>:
   100ec:	stp	x29, x30, [sp, #-32]!
   100f0:	mov	x29, sp
   100f4:	stp	x19, x20, [sp, #16]
   100f8:	mov	x19, x0
   100fc:	mov	x20, x1
   10100:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
   10104:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10108:	ldr	x0, [x0, #4016]
   1010c:	mrs	x1, tpidr_el0
   10110:	add	x0, x1, x0
   10114:	ldr	x2, [x0, #24]
   10118:	add	x2, x2, #0x40
   1011c:	mov	w0, #0x1                   	// #1
   10120:	ldaxr	w1, [x2]
   10124:	cbnz	w1, 10130 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x44>
   10128:	stxr	w3, w0, [x2]
   1012c:	cbnz	w3, 10120 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x34>
   10130:	cmp	w1, #0x0
   10134:	b.ne	1018c <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xa0>  // b.any
   10138:	mov	x1, x20
   1013c:	mov	x0, x19
   10140:	bl	c458 <omp_is_initial_device@@OMP_4.0+0x730>
   10144:	mov	w19, w0
   10148:	tst	w0, #0xff
   1014c:	b.eq	10198 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xac>  // b.none
   10150:	bl	10468 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x204>
   10154:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10158:	ldr	x0, [x0, #4016]
   1015c:	mrs	x1, tpidr_el0
   10160:	add	x0, x1, x0
   10164:	ldr	x0, [x0, #24]
   10168:	add	x0, x0, #0x40
   1016c:	ldxr	w1, [x0]
   10170:	stlxr	w2, wzr, [x0]
   10174:	cbnz	w2, 1016c <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x80>
   10178:	tbnz	w1, #31, 101a0 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0xb4>
   1017c:	mov	w0, w19
   10180:	ldp	x19, x20, [sp, #16]
   10184:	ldp	x29, x30, [sp], #32
   10188:	ret
   1018c:	mov	x0, x2
   10190:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   10194:	b	10138 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x4c>
   10198:	bl	103ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x148>
   1019c:	b	10154 <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x68>
   101a0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   101a4:	b	1017c <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0+0x90>

00000000000101a8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>:
   101a8:	stp	x29, x30, [sp, #-32]!
   101ac:	mov	x29, sp
   101b0:	stp	x19, x20, [sp, #16]
   101b4:	mov	x19, x0
   101b8:	mov	x20, x1
   101bc:	bl	106c8 <GOMP_ordered_start@@GOMP_1.0>
   101c0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   101c4:	ldr	x0, [x0, #4016]
   101c8:	mrs	x1, tpidr_el0
   101cc:	add	x0, x1, x0
   101d0:	ldr	x2, [x0, #24]
   101d4:	add	x2, x2, #0x40
   101d8:	mov	w0, #0x1                   	// #1
   101dc:	ldaxr	w1, [x2]
   101e0:	cbnz	w1, 101ec <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x44>
   101e4:	stxr	w3, w0, [x2]
   101e8:	cbnz	w3, 101dc <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x34>
   101ec:	cmp	w1, #0x0
   101f0:	b.ne	10248 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xa0>  // b.any
   101f4:	mov	x1, x20
   101f8:	mov	x0, x19
   101fc:	bl	c5cc <omp_is_initial_device@@OMP_4.0+0x8a4>
   10200:	mov	w19, w0
   10204:	tst	w0, #0xff
   10208:	b.eq	10254 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xac>  // b.none
   1020c:	bl	10468 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x204>
   10210:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10214:	ldr	x0, [x0, #4016]
   10218:	mrs	x1, tpidr_el0
   1021c:	add	x0, x1, x0
   10220:	ldr	x0, [x0, #24]
   10224:	add	x0, x0, #0x40
   10228:	ldxr	w1, [x0]
   1022c:	stlxr	w2, wzr, [x0]
   10230:	cbnz	w2, 10228 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x80>
   10234:	tbnz	w1, #31, 1025c <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0xb4>
   10238:	mov	w0, w19
   1023c:	ldp	x19, x20, [sp, #16]
   10240:	ldp	x29, x30, [sp], #32
   10244:	ret
   10248:	mov	x0, x2
   1024c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   10250:	b	101f4 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x4c>
   10254:	bl	103ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x148>
   10258:	b	10210 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x68>
   1025c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   10260:	b	10238 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0+0x90>

0000000000010264 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0>:
   10264:	stp	x29, x30, [sp, #-16]!
   10268:	mov	x29, sp
   1026c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10270:	ldr	x2, [x2, #4016]
   10274:	mrs	x3, tpidr_el0
   10278:	add	x2, x3, x2
   1027c:	ldr	x2, [x2, #24]
   10280:	ldr	w2, [x2]
   10284:	cmp	w2, #0x2
   10288:	b.eq	102c8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x64>  // b.none
   1028c:	b.ls	102a4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x40>  // b.plast
   10290:	cmp	w2, #0x3
   10294:	b.ne	102bc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x58>  // b.any
   10298:	bl	101a8 <GOMP_loop_ull_ordered_guided_next@@GOMP_2.0>
   1029c:	and	w0, w0, #0xff
   102a0:	b	102b4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x50>
   102a4:	cmp	w2, #0x1
   102a8:	b.ne	102c4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x60>  // b.any
   102ac:	bl	10030 <GOMP_loop_ull_ordered_static_next@@GOMP_2.0>
   102b0:	and	w0, w0, #0xff
   102b4:	ldp	x29, x30, [sp], #16
   102b8:	ret
   102bc:	cmp	w2, #0x4
   102c0:	b.eq	102ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x48>  // b.none
   102c4:	bl	8870 <abort@plt>
   102c8:	bl	100ec <GOMP_loop_ull_ordered_dynamic_next@@GOMP_2.0>
   102cc:	and	w0, w0, #0xff
   102d0:	b	102b4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x50>
   102d4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   102d8:	ldr	x0, [x0, #4016]
   102dc:	mrs	x1, tpidr_el0
   102e0:	add	x0, x1, x0
   102e4:	ldr	x2, [x0, #16]
   102e8:	cbz	x2, 1034c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xe8>
   102ec:	ldr	w3, [x2]
   102f0:	cmp	w3, #0x1
   102f4:	b.eq	1034c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xe8>  // b.none
   102f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   102fc:	ldr	x0, [x0, #4016]
   10300:	add	x0, x1, x0
   10304:	ldr	x0, [x0, #24]
   10308:	ldr	w1, [x0, #48]
   1030c:	ldr	w4, [x0, #40]
   10310:	add	w1, w1, w4
   10314:	sub	w4, w1, w3
   10318:	cmp	w3, w1
   1031c:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10320:	ldr	x3, [x3, #4016]
   10324:	mrs	x5, tpidr_el0
   10328:	add	x3, x5, x3
   1032c:	ldr	w5, [x3, #40]
   10330:	csel	w1, w4, w1, ls  // ls = plast
   10334:	ldr	x3, [x0, #32]
   10338:	str	w5, [x3, x1, lsl #2]
   1033c:	ldr	w1, [x0, #40]
   10340:	add	w3, w1, #0x1
   10344:	str	w3, [x0, #40]
   10348:	cbz	w1, 10350 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xec>
   1034c:	ret
   10350:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10354:	ldr	x0, [x0, #4016]
   10358:	mrs	x1, tpidr_el0
   1035c:	add	x0, x1, x0
   10360:	ldr	w1, [x0, #40]
   10364:	ldr	x0, [x2, #80]
   10368:	ldr	x0, [x0, x1, lsl #3]
   1036c:	ldr	w1, [x0]
   10370:	add	w2, w1, #0x1
   10374:	and	w2, w2, #0x7fffffff
   10378:	ldxr	w3, [x0]
   1037c:	cmp	w3, w1
   10380:	b.ne	1038c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x128>  // b.any
   10384:	stlxr	w4, w2, [x0]
   10388:	cmp	w4, #0x0
   1038c:	mov	w1, w3
   10390:	b.ne	10370 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x10c>  // b.any
   10394:	tbz	w3, #31, 1034c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0xe8>
   10398:	stp	x29, x30, [sp, #-16]!
   1039c:	mov	x29, sp
   103a0:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   103a4:	ldp	x29, x30, [sp], #16
   103a8:	ret
   103ac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   103b0:	ldr	x0, [x0, #4016]
   103b4:	mrs	x1, tpidr_el0
   103b8:	add	x0, x1, x0
   103bc:	ldr	x1, [x0, #16]
   103c0:	cbz	x1, 10450 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1ec>
   103c4:	ldr	w0, [x1]
   103c8:	cmp	w0, #0x1
   103cc:	b.eq	10450 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1ec>  // b.none
   103d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   103d4:	ldr	x0, [x0, #4016]
   103d8:	mrs	x2, tpidr_el0
   103dc:	add	x0, x2, x0
   103e0:	ldr	x0, [x0, #24]
   103e4:	mov	w2, #0xffffffff            	// #-1
   103e8:	str	w2, [x0, #44]
   103ec:	ldr	w2, [x0, #40]
   103f0:	sub	w2, w2, #0x1
   103f4:	str	w2, [x0, #40]
   103f8:	cbz	w2, 10450 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1ec>
   103fc:	ldr	w2, [x0, #48]
   10400:	add	w2, w2, #0x1
   10404:	ldr	w3, [x1]
   10408:	cmp	w3, w2
   1040c:	csel	w2, w2, wzr, ne  // ne = any
   10410:	str	w2, [x0, #48]
   10414:	ldr	x0, [x0, #32]
   10418:	ldr	w2, [x0, w2, uxtw #2]
   1041c:	ldr	x0, [x1, #80]
   10420:	ldr	x0, [x0, x2, lsl #3]
   10424:	ldr	w1, [x0]
   10428:	add	w2, w1, #0x1
   1042c:	and	w2, w2, #0x7fffffff
   10430:	ldxr	w3, [x0]
   10434:	cmp	w3, w1
   10438:	b.ne	10444 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1e0>  // b.any
   1043c:	stlxr	w4, w2, [x0]
   10440:	cmp	w4, #0x0
   10444:	mov	w1, w3
   10448:	b.ne	10428 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1c4>  // b.any
   1044c:	tbnz	w3, #31, 10454 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x1f0>
   10450:	ret
   10454:	stp	x29, x30, [sp, #-16]!
   10458:	mov	x29, sp
   1045c:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   10460:	ldp	x29, x30, [sp], #16
   10464:	ret
   10468:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1046c:	ldr	x0, [x0, #4016]
   10470:	mrs	x1, tpidr_el0
   10474:	add	x0, x1, x0
   10478:	ldr	x0, [x0, #16]
   1047c:	cbz	x0, 105ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x348>
   10480:	ldr	w1, [x0]
   10484:	cmp	w1, #0x1
   10488:	b.eq	105ac <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x348>  // b.none
   1048c:	stp	x29, x30, [sp, #-16]!
   10490:	mov	x29, sp
   10494:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10498:	ldr	x1, [x1, #4016]
   1049c:	mrs	x2, tpidr_el0
   104a0:	add	x1, x2, x1
   104a4:	ldr	x2, [x1, #24]
   104a8:	mov	w1, #0xffffffff            	// #-1
   104ac:	str	w1, [x2, #44]
   104b0:	ldr	w1, [x2, #40]
   104b4:	cmp	w1, #0x1
   104b8:	b.eq	10554 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2f0>  // b.none
   104bc:	ldr	w3, [x0]
   104c0:	cmp	w1, w3
   104c4:	b.cs	104f8 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x294>  // b.hs, b.nlast
   104c8:	ldr	w4, [x2, #48]
   104cc:	add	w1, w1, w4
   104d0:	sub	w4, w1, w3
   104d4:	cmp	w3, w1
   104d8:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   104dc:	ldr	x3, [x3, #4016]
   104e0:	mrs	x5, tpidr_el0
   104e4:	add	x3, x5, x3
   104e8:	ldr	w5, [x3, #40]
   104ec:	csel	w1, w4, w1, ls  // ls = plast
   104f0:	ldr	x3, [x2, #32]
   104f4:	str	w5, [x3, x1, lsl #2]
   104f8:	ldr	w1, [x2, #48]
   104fc:	add	w1, w1, #0x1
   10500:	ldr	w3, [x0]
   10504:	cmp	w3, w1
   10508:	csel	w1, w1, wzr, ne  // ne = any
   1050c:	str	w1, [x2, #48]
   10510:	ldr	x2, [x2, #32]
   10514:	ldr	w1, [x2, w1, uxtw #2]
   10518:	ldr	x0, [x0, #80]
   1051c:	ldr	x0, [x0, x1, lsl #3]
   10520:	ldr	w1, [x0]
   10524:	add	w2, w1, #0x1
   10528:	and	w2, w2, #0x7fffffff
   1052c:	ldxr	w3, [x0]
   10530:	cmp	w3, w1
   10534:	b.ne	10540 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2dc>  // b.any
   10538:	stlxr	w4, w2, [x0]
   1053c:	cmp	w4, #0x0
   10540:	mov	w1, w3
   10544:	b.ne	10524 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2c0>  // b.any
   10548:	tbnz	w3, #31, 105a4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x340>
   1054c:	ldp	x29, x30, [sp], #16
   10550:	ret
   10554:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10558:	ldr	x1, [x1, #4016]
   1055c:	mrs	x2, tpidr_el0
   10560:	add	x1, x2, x1
   10564:	ldr	w1, [x1, #40]
   10568:	ldr	x0, [x0, #80]
   1056c:	ldr	x0, [x0, x1, lsl #3]
   10570:	ldr	w1, [x0]
   10574:	add	w2, w1, #0x1
   10578:	and	w2, w2, #0x7fffffff
   1057c:	ldxr	w3, [x0]
   10580:	cmp	w3, w1
   10584:	b.ne	10590 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x32c>  // b.any
   10588:	stlxr	w4, w2, [x0]
   1058c:	cmp	w4, #0x0
   10590:	mov	w1, w3
   10594:	b.ne	10574 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x310>  // b.any
   10598:	tbz	w3, #31, 1054c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2e8>
   1059c:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   105a0:	b	1054c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2e8>
   105a4:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   105a8:	b	1054c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x2e8>
   105ac:	ret
   105b0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   105b4:	ldr	x0, [x0, #4016]
   105b8:	mrs	x1, tpidr_el0
   105bc:	add	x0, x1, x0
   105c0:	ldr	x0, [x0, #16]
   105c4:	cbz	x0, 10608 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3a4>
   105c8:	ldr	w1, [x0]
   105cc:	cmp	w1, #0x1
   105d0:	b.eq	10608 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3a4>  // b.none
   105d4:	ldr	x0, [x0, #80]
   105d8:	ldr	x0, [x0]
   105dc:	ldr	w1, [x0]
   105e0:	add	w2, w1, #0x1
   105e4:	and	w2, w2, #0x7fffffff
   105e8:	ldxr	w3, [x0]
   105ec:	cmp	w3, w1
   105f0:	b.ne	105fc <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x398>  // b.any
   105f4:	stlxr	w4, w2, [x0]
   105f8:	cmp	w4, #0x0
   105fc:	mov	w1, w3
   10600:	b.ne	105e0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x37c>  // b.any
   10604:	tbnz	w3, #31, 1060c <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x3a8>
   10608:	ret
   1060c:	stp	x29, x30, [sp, #-16]!
   10610:	mov	x29, sp
   10614:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   10618:	ldp	x29, x30, [sp], #16
   1061c:	ret
   10620:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10624:	ldr	x0, [x0, #4016]
   10628:	mrs	x1, tpidr_el0
   1062c:	add	x0, x1, x0
   10630:	ldr	x1, [x0, #16]
   10634:	cbz	x1, 106b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x44c>
   10638:	ldr	w0, [x1]
   1063c:	cmp	w0, #0x1
   10640:	b.eq	106b0 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x44c>  // b.none
   10644:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10648:	ldr	x0, [x0, #4016]
   1064c:	mrs	x2, tpidr_el0
   10650:	add	x0, x2, x0
   10654:	ldr	x2, [x0, #24]
   10658:	ldr	w0, [x0, #40]
   1065c:	mov	w3, #0xffffffff            	// #-1
   10660:	str	w3, [x2, #44]
   10664:	add	w0, w0, #0x1
   10668:	ldr	w3, [x1]
   1066c:	cmp	w3, w0
   10670:	csel	w0, w0, wzr, ne  // ne = any
   10674:	ldr	x2, [x2, #32]
   10678:	str	w0, [x2]
   1067c:	ldr	x1, [x1, #80]
   10680:	ldr	x0, [x1, w0, uxtw #3]
   10684:	ldr	w1, [x0]
   10688:	add	w2, w1, #0x1
   1068c:	and	w2, w2, #0x7fffffff
   10690:	ldxr	w3, [x0]
   10694:	cmp	w3, w1
   10698:	b.ne	106a4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x440>  // b.any
   1069c:	stlxr	w4, w2, [x0]
   106a0:	cmp	w4, #0x0
   106a4:	mov	w1, w3
   106a8:	b.ne	10688 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x424>  // b.any
   106ac:	tbnz	w3, #31, 106b4 <GOMP_loop_ull_ordered_runtime_next@@GOMP_2.0+0x450>
   106b0:	ret
   106b4:	stp	x29, x30, [sp, #-16]!
   106b8:	mov	x29, sp
   106bc:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   106c0:	ldp	x29, x30, [sp], #16
   106c4:	ret

00000000000106c8 <GOMP_ordered_start@@GOMP_1.0>:
   106c8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   106cc:	ldr	x0, [x0, #4016]
   106d0:	mrs	x1, tpidr_el0
   106d4:	add	x0, x1, x0
   106d8:	ldr	x0, [x0, #16]
   106dc:	cbz	x0, 10784 <GOMP_ordered_start@@GOMP_1.0+0xbc>
   106e0:	ldr	w1, [x0]
   106e4:	cmp	w1, #0x1
   106e8:	b.eq	10784 <GOMP_ordered_start@@GOMP_1.0+0xbc>  // b.none
   106ec:	stp	x29, x30, [sp, #-32]!
   106f0:	mov	x29, sp
   106f4:	str	x19, [sp, #16]
   106f8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   106fc:	ldr	x1, [x1, #4016]
   10700:	mrs	x2, tpidr_el0
   10704:	add	x1, x2, x1
   10708:	ldr	x19, [x1, #24]
   1070c:	dmb	ish
   10710:	ldr	w1, [x1, #40]
   10714:	ldr	w2, [x19, #44]
   10718:	cmp	w2, w1
   1071c:	b.ne	1072c <GOMP_ordered_start@@GOMP_1.0+0x64>  // b.any
   10720:	ldr	x19, [sp, #16]
   10724:	ldp	x29, x30, [sp], #32
   10728:	ret
   1072c:	ldr	x0, [x0, #80]
   10730:	ldr	x0, [x0, w1, uxtw #3]
   10734:	ldr	w1, [x0]
   10738:	tst	x1, #0x7fffffff
   1073c:	b.eq	1077c <GOMP_ordered_start@@GOMP_1.0+0xb4>  // b.none
   10740:	sub	w3, w1, #0x1
   10744:	ldaxr	w2, [x0]
   10748:	cmp	w2, w1
   1074c:	b.ne	10758 <GOMP_ordered_start@@GOMP_1.0+0x90>  // b.any
   10750:	stxr	w4, w3, [x0]
   10754:	cmp	w4, #0x0
   10758:	mov	w1, w2
   1075c:	b.ne	10738 <GOMP_ordered_start@@GOMP_1.0+0x70>  // b.any
   10760:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10764:	ldr	x0, [x0, #4016]
   10768:	mrs	x1, tpidr_el0
   1076c:	add	x0, x1, x0
   10770:	ldr	w0, [x0, #40]
   10774:	str	w0, [x19, #44]
   10778:	b	10720 <GOMP_ordered_start@@GOMP_1.0+0x58>
   1077c:	bl	1b504 <omp_get_num_procs@@OMP_1.0+0x90>
   10780:	b	10760 <GOMP_ordered_start@@GOMP_1.0+0x98>
   10784:	ret

0000000000010788 <GOMP_ordered_end@@GOMP_1.0>:
   10788:	ret
   1078c:	stp	x29, x30, [sp, #-368]!
   10790:	mov	x29, sp
   10794:	stp	x21, x22, [sp, #32]
   10798:	stp	x23, x24, [sp, #48]
   1079c:	stp	x25, x26, [sp, #64]
   107a0:	stp	x27, x28, [sp, #80]
   107a4:	mov	x21, x1
   107a8:	mov	x26, x2
   107ac:	mov	x24, x3
   107b0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   107b4:	ldr	x1, [x1, #4016]
   107b8:	mrs	x2, tpidr_el0
   107bc:	add	x1, x2, x1
   107c0:	ldr	x2, [x1, #16]
   107c4:	ldr	x28, [x1, #24]
   107c8:	cbz	x2, 108d0 <GOMP_ordered_end@@GOMP_1.0+0x148>
   107cc:	stp	x19, x20, [sp, #16]
   107d0:	mov	w20, w0
   107d4:	add	x0, x3, #0x77
   107d8:	ldr	w23, [x2]
   107dc:	cmp	w23, #0x1
   107e0:	b.eq	108c4 <GOMP_ordered_end@@GOMP_1.0+0x13c>  // b.none
   107e4:	mov	x1, #0x0                   	// #0
   107e8:	mov	w19, #0x0                   	// #0
   107ec:	cbz	w20, 10800 <GOMP_ordered_end@@GOMP_1.0+0x78>
   107f0:	mov	w5, #0x1                   	// #1
   107f4:	mov	w4, #0x40                  	// #64
   107f8:	add	x6, sp, #0x70
   107fc:	b	10918 <GOMP_ordered_end@@GOMP_1.0+0x190>
   10800:	mov	w19, w20
   10804:	ldr	w1, [x28]
   10808:	mov	w23, w23
   1080c:	cmp	w1, #0x1
   10810:	b.eq	1082c <GOMP_ordered_end@@GOMP_1.0+0xa4>  // b.none
   10814:	cmp	w1, #0x3
   10818:	b.eq	10950 <GOMP_ordered_end@@GOMP_1.0+0x1c8>  // b.none
   1081c:	ldr	x23, [x21]
   10820:	sub	x23, x23, #0x1
   10824:	sdiv	x23, x23, x26
   10828:	add	x23, x23, #0x1
   1082c:	cmp	w19, #0x40
   10830:	b.hi	10958 <GOMP_ordered_end@@GOMP_1.0+0x1d0>  // b.pmore
   10834:	ubfiz	x27, x20, #2, #32
   10838:	mov	x25, #0x8                   	// #8
   1083c:	add	x25, x25, #0x3f
   10840:	and	x25, x25, #0xffffffffffffffc0
   10844:	mul	x1, x23, x25
   10848:	str	x1, [sp, #104]
   1084c:	add	x1, x1, x27
   10850:	add	x0, x1, x0
   10854:	bl	8c28 <fprintf@plt+0x118>
   10858:	mov	x22, x0
   1085c:	str	x26, [x0]
   10860:	str	x25, [x0, #8]
   10864:	str	w20, [x0, #16]
   10868:	strb	wzr, [x0, #20]
   1086c:	add	x0, x27, #0x77
   10870:	add	x0, x22, x0
   10874:	and	x0, x0, #0xffffffffffffffc0
   10878:	str	x0, [x22, #24]
   1087c:	cbnz	x24, 10964 <GOMP_ordered_end@@GOMP_1.0+0x1dc>
   10880:	str	xzr, [x22, #48]
   10884:	cmp	w19, #0x40
   10888:	b.ls	10980 <GOMP_ordered_end@@GOMP_1.0+0x1f8>  // b.plast
   1088c:	ubfiz	x20, x20, #3, #32
   10890:	mov	x24, #0x0                   	// #0
   10894:	mov	x19, #0x0                   	// #0
   10898:	cbz	x23, 109f0 <GOMP_ordered_end@@GOMP_1.0+0x268>
   1089c:	ldr	x0, [x22, #24]
   108a0:	mov	x2, x20
   108a4:	mov	w1, #0x0                   	// #0
   108a8:	add	x0, x0, x24
   108ac:	bl	87c0 <memset@plt>
   108b0:	add	x19, x19, #0x1
   108b4:	add	x24, x24, x25
   108b8:	cmp	x23, x19
   108bc:	b.ne	1089c <GOMP_ordered_end@@GOMP_1.0+0x114>  // b.any
   108c0:	b	109f0 <GOMP_ordered_end@@GOMP_1.0+0x268>
   108c4:	ldp	x19, x20, [sp, #16]
   108c8:	b	108d0 <GOMP_ordered_end@@GOMP_1.0+0x148>
   108cc:	ldp	x19, x20, [sp, #16]
   108d0:	cbnz	x24, 108f0 <GOMP_ordered_end@@GOMP_1.0+0x168>
   108d4:	str	xzr, [x28, #32]
   108d8:	ldp	x21, x22, [sp, #32]
   108dc:	ldp	x23, x24, [sp, #48]
   108e0:	ldp	x25, x26, [sp, #64]
   108e4:	ldp	x27, x28, [sp, #80]
   108e8:	ldp	x29, x30, [sp], #368
   108ec:	ret
   108f0:	add	x0, x24, #0x38
   108f4:	bl	8c5c <fprintf@plt+0x14c>
   108f8:	add	x1, x0, #0x38
   108fc:	str	x1, [x0, #48]
   10900:	str	x0, [x28, #32]
   10904:	b	108d8 <GOMP_ordered_end@@GOMP_1.0+0x150>
   10908:	mov	w19, #0x41                  	// #65
   1090c:	add	x1, x1, #0x1
   10910:	cmp	w20, w1
   10914:	b.ls	10804 <GOMP_ordered_end@@GOMP_1.0+0x7c>  // b.plast
   10918:	ldr	x3, [x21, x1, lsl #3]
   1091c:	cbz	x3, 108cc <GOMP_ordered_end@@GOMP_1.0+0x144>
   10920:	cmp	w19, #0x40
   10924:	b.hi	1090c <GOMP_ordered_end@@GOMP_1.0+0x184>  // b.pmore
   10928:	sub	x2, x3, #0x1
   1092c:	clz	x2, x2
   10930:	sub	w2, w4, w2
   10934:	cmp	x3, #0x1
   10938:	csel	w2, w2, w5, ne  // ne = any
   1093c:	add	w19, w19, w2
   10940:	cmp	w19, #0x40
   10944:	b.hi	10908 <GOMP_ordered_end@@GOMP_1.0+0x180>  // b.pmore
   10948:	str	w2, [x6, x1, lsl #2]
   1094c:	b	1090c <GOMP_ordered_end@@GOMP_1.0+0x184>
   10950:	ldr	x23, [x21]
   10954:	b	1082c <GOMP_ordered_end@@GOMP_1.0+0xa4>
   10958:	ubfiz	x25, x20, #3, #32
   1095c:	mov	x27, #0x0                   	// #0
   10960:	b	1083c <GOMP_ordered_end@@GOMP_1.0+0xb4>
   10964:	ldr	x1, [sp, #104]
   10968:	add	x0, x0, x1
   1096c:	str	x0, [x22, #48]
   10970:	mov	x2, x24
   10974:	mov	w1, #0x0                   	// #0
   10978:	bl	87c0 <memset@plt>
   1097c:	b	10884 <GOMP_ordered_end@@GOMP_1.0+0xfc>
   10980:	mov	w0, #0x1                   	// #1
   10984:	strb	w0, [x22, #20]
   10988:	cbz	w20, 109cc <GOMP_ordered_end@@GOMP_1.0+0x244>
   1098c:	sub	w0, w20, #0x1
   10990:	mvn	x5, x0
   10994:	lsl	x5, x5, #2
   10998:	lsl	x0, x0, #2
   1099c:	add	x4, x0, #0x38
   109a0:	add	x4, x22, x4
   109a4:	add	x3, sp, #0x70
   109a8:	add	x3, x3, x0
   109ac:	mov	x0, #0x0                   	// #0
   109b0:	mov	w1, #0x0                   	// #0
   109b4:	str	w1, [x4, x0]
   109b8:	ldr	w2, [x3, x0]
   109bc:	add	w1, w1, w2
   109c0:	sub	x0, x0, #0x4
   109c4:	cmp	x0, x5
   109c8:	b.ne	109b4 <GOMP_ordered_end@@GOMP_1.0+0x22c>  // b.any
   109cc:	cbz	x23, 109f0 <GOMP_ordered_end@@GOMP_1.0+0x268>
   109d0:	mov	x1, #0x0                   	// #0
   109d4:	mov	x0, #0x0                   	// #0
   109d8:	ldr	x2, [x22, #24]
   109dc:	str	xzr, [x2, x1]
   109e0:	add	x0, x0, #0x1
   109e4:	add	x1, x1, x25
   109e8:	cmp	x23, x0
   109ec:	b.ne	109d8 <GOMP_ordered_end@@GOMP_1.0+0x250>  // b.any
   109f0:	ldr	w0, [x28]
   109f4:	cmp	x26, #0x0
   109f8:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   109fc:	b.eq	10a0c <GOMP_ordered_end@@GOMP_1.0+0x284>  // b.none
   10a00:	str	x22, [x28, #32]
   10a04:	ldp	x19, x20, [sp, #16]
   10a08:	b	108d8 <GOMP_ordered_end@@GOMP_1.0+0x150>
   10a0c:	ldr	x1, [x21]
   10a10:	udiv	x0, x1, x23
   10a14:	msub	x23, x0, x23, x1
   10a18:	madd	x1, x0, x23, x23
   10a1c:	str	x1, [x22, #40]
   10a20:	str	x0, [x22]
   10a24:	str	x23, [x22, #32]
   10a28:	b	10a00 <GOMP_ordered_end@@GOMP_1.0+0x278>

0000000000010a2c <GOMP_doacross_post@@GOMP_4.5>:
   10a2c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10a30:	ldr	x1, [x1, #4016]
   10a34:	mrs	x2, tpidr_el0
   10a38:	add	x1, x2, x1
   10a3c:	ldr	x1, [x1, #24]
   10a40:	ldr	x2, [x1, #32]
   10a44:	cbz	x2, 10ad4 <GOMP_doacross_post@@GOMP_4.5+0xa8>
   10a48:	ldr	x4, [x2, #24]
   10a4c:	cbz	x4, 10ad4 <GOMP_doacross_post@@GOMP_4.5+0xa8>
   10a50:	ldr	w1, [x1]
   10a54:	cmp	w1, #0x1
   10a58:	b.ne	10adc <GOMP_doacross_post@@GOMP_4.5+0xb0>  // b.any
   10a5c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10a60:	ldr	x1, [x1, #4016]
   10a64:	mrs	x3, tpidr_el0
   10a68:	add	x1, x3, x1
   10a6c:	ldr	w7, [x1, #40]
   10a70:	ldr	x1, [x2, #8]
   10a74:	madd	x7, x7, x1, x4
   10a78:	ldrb	w1, [x2, #20]
   10a7c:	cbz	w1, 10b04 <GOMP_doacross_post@@GOMP_4.5+0xd8>
   10a80:	ldr	w1, [x2, #56]
   10a84:	ldr	x3, [x0]
   10a88:	lsl	x3, x3, x1
   10a8c:	ldr	w6, [x2, #16]
   10a90:	cmp	w6, #0x1
   10a94:	b.ls	10abc <GOMP_doacross_post@@GOMP_4.5+0x90>  // b.plast
   10a98:	mov	x1, #0x1                   	// #1
   10a9c:	add	x4, x2, #0x38
   10aa0:	ldr	w5, [x4, x1, lsl #2]
   10aa4:	ldr	x2, [x0, x1, lsl #3]
   10aa8:	lsl	x2, x2, x5
   10aac:	orr	x3, x3, x2
   10ab0:	add	x1, x1, #0x1
   10ab4:	cmp	w6, w1
   10ab8:	b.hi	10aa0 <GOMP_doacross_post@@GOMP_4.5+0x74>  // b.pmore
   10abc:	add	x3, x3, #0x1
   10ac0:	ldar	x0, [x7]
   10ac4:	cmp	x0, x3
   10ac8:	b.eq	10afc <GOMP_doacross_post@@GOMP_4.5+0xd0>  // b.none
   10acc:	stlr	x3, [x7]
   10ad0:	ret
   10ad4:	dmb	ish
   10ad8:	b	10ad0 <GOMP_doacross_post@@GOMP_4.5+0xa4>
   10adc:	cmp	w1, #0x3
   10ae0:	b.eq	10af4 <GOMP_doacross_post@@GOMP_4.5+0xc8>  // b.none
   10ae4:	ldr	x1, [x0]
   10ae8:	ldr	x7, [x2]
   10aec:	sdiv	x7, x1, x7
   10af0:	b	10a70 <GOMP_doacross_post@@GOMP_4.5+0x44>
   10af4:	ldr	x7, [x0]
   10af8:	b	10a70 <GOMP_doacross_post@@GOMP_4.5+0x44>
   10afc:	dmb	ish
   10b00:	b	10ad0 <GOMP_doacross_post@@GOMP_4.5+0xa4>
   10b04:	dmb	ishld
   10b08:	ldr	w2, [x2, #16]
   10b0c:	sub	w1, w2, #0x1
   10b10:	cbz	w2, 10ad0 <GOMP_doacross_post@@GOMP_4.5+0xa4>
   10b14:	ubfiz	x1, x1, #3, #32
   10b18:	b	10b28 <GOMP_doacross_post@@GOMP_4.5+0xfc>
   10b1c:	sub	x1, x1, #0x8
   10b20:	cmn	x1, #0x8
   10b24:	b.eq	10ad0 <GOMP_doacross_post@@GOMP_4.5+0xa4>  // b.none
   10b28:	ldr	x2, [x0, x1]
   10b2c:	add	x2, x2, #0x1
   10b30:	add	x3, x7, x1
   10b34:	ldr	x4, [x3]
   10b38:	cmp	x2, x4
   10b3c:	b.eq	10b1c <GOMP_doacross_post@@GOMP_4.5+0xf0>  // b.none
   10b40:	ldr	x2, [x0, x1]
   10b44:	add	x2, x2, #0x1
   10b48:	stlr	x2, [x3]
   10b4c:	b	10b1c <GOMP_doacross_post@@GOMP_4.5+0xf0>

0000000000010b50 <GOMP_doacross_wait@@GOMP_4.5>:
   10b50:	sub	sp, sp, #0x60
   10b54:	str	x1, [sp, #40]
   10b58:	str	x2, [sp, #48]
   10b5c:	str	x3, [sp, #56]
   10b60:	str	x4, [sp, #64]
   10b64:	str	x5, [sp, #72]
   10b68:	str	x6, [sp, #80]
   10b6c:	str	x7, [sp, #88]
   10b70:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10b74:	ldr	x1, [x1, #4016]
   10b78:	mrs	x2, tpidr_el0
   10b7c:	add	x1, x2, x1
   10b80:	ldr	x1, [x1, #24]
   10b84:	ldr	x5, [x1, #32]
   10b88:	cbz	x5, 10bc4 <GOMP_doacross_wait@@GOMP_4.5+0x74>
   10b8c:	ldr	x2, [x5, #24]
   10b90:	cbz	x2, 10bc4 <GOMP_doacross_wait@@GOMP_4.5+0x74>
   10b94:	ldr	w3, [x1]
   10b98:	cmp	w3, #0x1
   10b9c:	b.ne	10c64 <GOMP_doacross_wait@@GOMP_4.5+0x114>  // b.any
   10ba0:	ldr	x1, [x1, #8]
   10ba4:	cbnz	x1, 10be4 <GOMP_doacross_wait@@GOMP_4.5+0x94>
   10ba8:	ldr	x1, [x5, #40]
   10bac:	cmp	x1, x0
   10bb0:	b.le	10bcc <GOMP_doacross_wait@@GOMP_4.5+0x7c>
   10bb4:	ldr	x6, [x5]
   10bb8:	add	x6, x6, #0x1
   10bbc:	sdiv	x6, x0, x6
   10bc0:	b	10c08 <GOMP_doacross_wait@@GOMP_4.5+0xb8>
   10bc4:	dmb	ish
   10bc8:	b	10cfc <GOMP_doacross_wait@@GOMP_4.5+0x1ac>
   10bcc:	sub	x1, x0, x1
   10bd0:	ldr	x6, [x5]
   10bd4:	sdiv	x6, x1, x6
   10bd8:	ldr	x1, [x5, #32]
   10bdc:	add	x6, x6, x1
   10be0:	b	10c08 <GOMP_doacross_wait@@GOMP_4.5+0xb8>
   10be4:	sdiv	x1, x0, x1
   10be8:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10bec:	ldr	x3, [x3, #4016]
   10bf0:	mrs	x4, tpidr_el0
   10bf4:	add	x3, x4, x3
   10bf8:	ldr	x3, [x3, #16]
   10bfc:	ldr	w3, [x3]
   10c00:	sdiv	x6, x1, x3
   10c04:	msub	x6, x6, x3, x1
   10c08:	ldr	x1, [x5, #8]
   10c0c:	madd	x6, x6, x1, x2
   10c10:	ldrb	w1, [x5, #20]
   10c14:	add	x8, sp, #0x20
   10c18:	mov	w7, #0xffffffc8            	// #-56
   10c1c:	add	x3, x0, #0x1
   10c20:	cbz	w1, 10d94 <GOMP_doacross_wait@@GOMP_4.5+0x244>
   10c24:	ldr	w2, [x5, #56]
   10c28:	lsl	x2, x0, x2
   10c2c:	add	x0, sp, #0x60
   10c30:	str	x0, [sp]
   10c34:	str	x0, [sp, #8]
   10c38:	add	x0, sp, #0x20
   10c3c:	str	x0, [sp, #16]
   10c40:	mov	w0, #0xffffffc8            	// #-56
   10c44:	str	w0, [sp, #24]
   10c48:	str	wzr, [sp, #28]
   10c4c:	ldr	w0, [x5, #16]
   10c50:	cmp	w0, #0x1
   10c54:	b.ls	10ce0 <GOMP_doacross_wait@@GOMP_4.5+0x190>  // b.plast
   10c58:	ldr	x7, [sp, #8]
   10c5c:	mov	w0, #0x1                   	// #1
   10c60:	b	10cbc <GOMP_doacross_wait@@GOMP_4.5+0x16c>
   10c64:	mov	x6, x0
   10c68:	cmp	w3, #0x3
   10c6c:	b.eq	10c08 <GOMP_doacross_wait@@GOMP_4.5+0xb8>  // b.none
   10c70:	ldr	x1, [x5]
   10c74:	sdiv	x6, x0, x1
   10c78:	b	10c08 <GOMP_doacross_wait@@GOMP_4.5+0xb8>
   10c7c:	add	w4, w1, #0x8
   10c80:	str	w4, [sp, #24]
   10c84:	cmp	w4, #0x0
   10c88:	b.le	10cd8 <GOMP_doacross_wait@@GOMP_4.5+0x188>
   10c8c:	add	x1, x3, #0xf
   10c90:	and	x1, x1, #0xfffffffffffffff8
   10c94:	str	x1, [sp]
   10c98:	add	x1, x5, w0, uxtw #2
   10c9c:	ldr	w4, [x1, #56]
   10ca0:	ldr	x1, [x3]
   10ca4:	lsl	x1, x1, x4
   10ca8:	orr	x2, x2, x1
   10cac:	add	w0, w0, #0x1
   10cb0:	ldr	w1, [x5, #16]
   10cb4:	cmp	w1, w0
   10cb8:	b.ls	10ce0 <GOMP_doacross_wait@@GOMP_4.5+0x190>  // b.plast
   10cbc:	ldr	w1, [sp, #24]
   10cc0:	ldr	x3, [sp]
   10cc4:	tbnz	w1, #31, 10c7c <GOMP_doacross_wait@@GOMP_4.5+0x12c>
   10cc8:	add	x1, x3, #0xf
   10ccc:	and	x1, x1, #0xfffffffffffffff8
   10cd0:	str	x1, [sp]
   10cd4:	b	10c98 <GOMP_doacross_wait@@GOMP_4.5+0x148>
   10cd8:	add	x3, x7, w1, sxtw
   10cdc:	b	10c98 <GOMP_doacross_wait@@GOMP_4.5+0x148>
   10ce0:	ldar	x0, [x6]
   10ce4:	cmp	x2, x0
   10ce8:	b.cc	10d04 <GOMP_doacross_wait@@GOMP_4.5+0x1b4>  // b.lo, b.ul, b.last
   10cec:	ldr	x0, [x6]
   10cf0:	cmp	x0, x2
   10cf4:	b.ls	10cec <GOMP_doacross_wait@@GOMP_4.5+0x19c>  // b.plast
   10cf8:	dmb	ish
   10cfc:	add	sp, sp, #0x60
   10d00:	ret
   10d04:	dmb	ish
   10d08:	b	10cfc <GOMP_doacross_wait@@GOMP_4.5+0x1ac>
   10d0c:	add	w4, w2, #0x8
   10d10:	str	w4, [sp, #24]
   10d14:	cmp	w4, #0x0
   10d18:	b.le	10d78 <GOMP_doacross_wait@@GOMP_4.5+0x228>
   10d1c:	add	x2, x1, #0xf
   10d20:	and	x2, x2, #0xfffffffffffffff8
   10d24:	str	x2, [sp]
   10d28:	ldr	x1, [x1]
   10d2c:	add	x1, x1, #0x1
   10d30:	add	x2, x6, w0, uxtw #3
   10d34:	ldr	x2, [x2]
   10d38:	cmp	x1, x2
   10d3c:	b.cc	10d84 <GOMP_doacross_wait@@GOMP_4.5+0x234>  // b.lo, b.ul, b.last
   10d40:	b.hi	10d88 <GOMP_doacross_wait@@GOMP_4.5+0x238>  // b.pmore
   10d44:	add	w0, w0, #0x1
   10d48:	ldr	w1, [x5, #16]
   10d4c:	cmp	w1, w0
   10d50:	b.ls	10d88 <GOMP_doacross_wait@@GOMP_4.5+0x238>  // b.plast
   10d54:	mov	x1, x3
   10d58:	cbz	w0, 10d30 <GOMP_doacross_wait@@GOMP_4.5+0x1e0>
   10d5c:	ldr	w2, [sp, #24]
   10d60:	ldr	x1, [sp]
   10d64:	tbnz	w2, #31, 10d0c <GOMP_doacross_wait@@GOMP_4.5+0x1bc>
   10d68:	add	x2, x1, #0xf
   10d6c:	and	x2, x2, #0xfffffffffffffff8
   10d70:	str	x2, [sp]
   10d74:	b	10d28 <GOMP_doacross_wait@@GOMP_4.5+0x1d8>
   10d78:	ldr	x1, [sp, #8]
   10d7c:	add	x1, x1, w2, sxtw
   10d80:	b	10d28 <GOMP_doacross_wait@@GOMP_4.5+0x1d8>
   10d84:	ldr	w0, [x5, #16]
   10d88:	ldr	w1, [x5, #16]
   10d8c:	cmp	w1, w0
   10d90:	b.eq	10dbc <GOMP_doacross_wait@@GOMP_4.5+0x26c>  // b.none
   10d94:	add	x0, sp, #0x60
   10d98:	str	x0, [sp]
   10d9c:	str	x0, [sp, #8]
   10da0:	str	x8, [sp, #16]
   10da4:	str	w7, [sp, #24]
   10da8:	str	wzr, [sp, #28]
   10dac:	ldr	w0, [x5, #16]
   10db0:	cbz	w0, 10d88 <GOMP_doacross_wait@@GOMP_4.5+0x238>
   10db4:	mov	w0, #0x0                   	// #0
   10db8:	b	10d54 <GOMP_doacross_wait@@GOMP_4.5+0x204>
   10dbc:	dmb	ish
   10dc0:	b	10cfc <GOMP_doacross_wait@@GOMP_4.5+0x1ac>
   10dc4:	stp	x29, x30, [sp, #-368]!
   10dc8:	mov	x29, sp
   10dcc:	stp	x19, x20, [sp, #16]
   10dd0:	stp	x21, x22, [sp, #32]
   10dd4:	stp	x25, x26, [sp, #64]
   10dd8:	stp	x27, x28, [sp, #80]
   10ddc:	mov	w20, w0
   10de0:	mov	x21, x1
   10de4:	mov	x25, x3
   10de8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   10dec:	ldr	x0, [x0, #4016]
   10df0:	mrs	x1, tpidr_el0
   10df4:	add	x0, x1, x0
   10df8:	ldr	x1, [x0, #16]
   10dfc:	ldr	x28, [x0, #24]
   10e00:	cbz	x1, 10f04 <GOMP_doacross_wait@@GOMP_4.5+0x3b4>
   10e04:	stp	x23, x24, [sp, #48]
   10e08:	mov	x26, x2
   10e0c:	ldr	w23, [x1]
   10e10:	cmp	w23, #0x1
   10e14:	b.eq	10ef8 <GOMP_doacross_wait@@GOMP_4.5+0x3a8>  // b.none
   10e18:	mov	x0, #0x0                   	// #0
   10e1c:	mov	w19, #0x0                   	// #0
   10e20:	cbz	w20, 10e34 <GOMP_doacross_wait@@GOMP_4.5+0x2e4>
   10e24:	mov	w4, #0x1                   	// #1
   10e28:	mov	w3, #0x40                  	// #64
   10e2c:	add	x5, sp, #0x70
   10e30:	b	10f4c <GOMP_doacross_wait@@GOMP_4.5+0x3fc>
   10e34:	mov	w19, w20
   10e38:	ldr	w0, [x28]
   10e3c:	mov	w23, w23
   10e40:	cmp	w0, #0x1
   10e44:	b.eq	10e60 <GOMP_doacross_wait@@GOMP_4.5+0x310>  // b.none
   10e48:	cmp	w0, #0x3
   10e4c:	b.eq	10f84 <GOMP_doacross_wait@@GOMP_4.5+0x434>  // b.none
   10e50:	ldr	x23, [x21]
   10e54:	sub	x23, x23, #0x1
   10e58:	udiv	x23, x23, x26
   10e5c:	add	x23, x23, #0x1
   10e60:	cmp	w19, #0x40
   10e64:	b.hi	10f8c <GOMP_doacross_wait@@GOMP_4.5+0x43c>  // b.pmore
   10e68:	ubfiz	x27, x20, #2, #32
   10e6c:	mov	x24, #0x8                   	// #8
   10e70:	add	x24, x24, #0x3f
   10e74:	and	x24, x24, #0xffffffffffffffc0
   10e78:	mul	x0, x23, x24
   10e7c:	str	x0, [sp, #104]
   10e80:	add	x27, x27, #0x77
   10e84:	add	x0, x0, x27
   10e88:	bl	8c28 <fprintf@plt+0x118>
   10e8c:	mov	x22, x0
   10e90:	str	x26, [x0]
   10e94:	str	x24, [x0, #8]
   10e98:	str	w20, [x0, #16]
   10e9c:	strb	wzr, [x0, #20]
   10ea0:	str	xzr, [x0, #40]
   10ea4:	add	x27, x0, x27
   10ea8:	and	x27, x27, #0xffffffffffffffc0
   10eac:	str	x27, [x0, #24]
   10eb0:	cbnz	x25, 10f98 <GOMP_doacross_wait@@GOMP_4.5+0x448>
   10eb4:	str	xzr, [x0, #48]
   10eb8:	cmp	w19, #0x40
   10ebc:	b.ls	10fb4 <GOMP_doacross_wait@@GOMP_4.5+0x464>  // b.plast
   10ec0:	ubfiz	x20, x20, #3, #32
   10ec4:	mov	x25, #0x0                   	// #0
   10ec8:	mov	x19, #0x0                   	// #0
   10ecc:	cbz	x23, 11024 <GOMP_doacross_wait@@GOMP_4.5+0x4d4>
   10ed0:	ldr	x0, [x22, #24]
   10ed4:	mov	x2, x20
   10ed8:	mov	w1, #0x0                   	// #0
   10edc:	add	x0, x0, x25
   10ee0:	bl	87c0 <memset@plt>
   10ee4:	add	x19, x19, #0x1
   10ee8:	add	x25, x25, x24
   10eec:	cmp	x23, x19
   10ef0:	b.ne	10ed0 <GOMP_doacross_wait@@GOMP_4.5+0x380>  // b.any
   10ef4:	b	11024 <GOMP_doacross_wait@@GOMP_4.5+0x4d4>
   10ef8:	ldp	x23, x24, [sp, #48]
   10efc:	b	10f04 <GOMP_doacross_wait@@GOMP_4.5+0x3b4>
   10f00:	ldp	x23, x24, [sp, #48]
   10f04:	cbnz	x25, 10f24 <GOMP_doacross_wait@@GOMP_4.5+0x3d4>
   10f08:	str	xzr, [x28, #32]
   10f0c:	ldp	x19, x20, [sp, #16]
   10f10:	ldp	x21, x22, [sp, #32]
   10f14:	ldp	x25, x26, [sp, #64]
   10f18:	ldp	x27, x28, [sp, #80]
   10f1c:	ldp	x29, x30, [sp], #368
   10f20:	ret
   10f24:	add	x0, x25, #0x38
   10f28:	bl	8c5c <fprintf@plt+0x14c>
   10f2c:	add	x1, x0, #0x38
   10f30:	str	x1, [x0, #48]
   10f34:	str	x0, [x28, #32]
   10f38:	b	10f0c <GOMP_doacross_wait@@GOMP_4.5+0x3bc>
   10f3c:	mov	w19, #0x41                  	// #65
   10f40:	add	x0, x0, #0x1
   10f44:	cmp	w20, w0
   10f48:	b.ls	10e38 <GOMP_doacross_wait@@GOMP_4.5+0x2e8>  // b.plast
   10f4c:	ldr	x2, [x21, x0, lsl #3]
   10f50:	cbz	x2, 10f00 <GOMP_doacross_wait@@GOMP_4.5+0x3b0>
   10f54:	cmp	w19, #0x40
   10f58:	b.hi	10f40 <GOMP_doacross_wait@@GOMP_4.5+0x3f0>  // b.pmore
   10f5c:	sub	x1, x2, #0x1
   10f60:	clz	x1, x1
   10f64:	sub	w1, w3, w1
   10f68:	cmp	x2, #0x1
   10f6c:	csel	w1, w1, w4, ne  // ne = any
   10f70:	add	w19, w19, w1
   10f74:	cmp	w19, #0x40
   10f78:	b.hi	10f3c <GOMP_doacross_wait@@GOMP_4.5+0x3ec>  // b.pmore
   10f7c:	str	w1, [x5, x0, lsl #2]
   10f80:	b	10f40 <GOMP_doacross_wait@@GOMP_4.5+0x3f0>
   10f84:	ldr	x23, [x21]
   10f88:	b	10e60 <GOMP_doacross_wait@@GOMP_4.5+0x310>
   10f8c:	ubfiz	x24, x20, #3, #32
   10f90:	mov	x27, #0x0                   	// #0
   10f94:	b	10e70 <GOMP_doacross_wait@@GOMP_4.5+0x320>
   10f98:	ldr	x0, [sp, #104]
   10f9c:	add	x0, x27, x0
   10fa0:	str	x0, [x22, #48]
   10fa4:	mov	x2, x25
   10fa8:	mov	w1, #0x0                   	// #0
   10fac:	bl	87c0 <memset@plt>
   10fb0:	b	10eb8 <GOMP_doacross_wait@@GOMP_4.5+0x368>
   10fb4:	mov	w0, #0x1                   	// #1
   10fb8:	strb	w0, [x22, #20]
   10fbc:	cbz	w20, 11000 <GOMP_doacross_wait@@GOMP_4.5+0x4b0>
   10fc0:	sub	w0, w20, #0x1
   10fc4:	mvn	x5, x0
   10fc8:	lsl	x5, x5, #2
   10fcc:	lsl	x0, x0, #2
   10fd0:	add	x4, x0, #0x38
   10fd4:	add	x4, x22, x4
   10fd8:	add	x3, sp, #0x70
   10fdc:	add	x3, x3, x0
   10fe0:	mov	x0, #0x0                   	// #0
   10fe4:	mov	w1, #0x0                   	// #0
   10fe8:	str	w1, [x4, x0]
   10fec:	ldr	w2, [x3, x0]
   10ff0:	add	w1, w1, w2
   10ff4:	sub	x0, x0, #0x4
   10ff8:	cmp	x0, x5
   10ffc:	b.ne	10fe8 <GOMP_doacross_wait@@GOMP_4.5+0x498>  // b.any
   11000:	cbz	x23, 11024 <GOMP_doacross_wait@@GOMP_4.5+0x4d4>
   11004:	mov	x1, #0x0                   	// #0
   11008:	mov	x0, #0x0                   	// #0
   1100c:	ldr	x2, [x22, #24]
   11010:	str	xzr, [x2, x1]
   11014:	add	x0, x0, #0x1
   11018:	add	x1, x1, x24
   1101c:	cmp	x23, x0
   11020:	b.ne	1100c <GOMP_doacross_wait@@GOMP_4.5+0x4bc>  // b.any
   11024:	ldr	w0, [x28]
   11028:	cmp	x26, #0x0
   1102c:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   11030:	b.eq	11040 <GOMP_doacross_wait@@GOMP_4.5+0x4f0>  // b.none
   11034:	str	x22, [x28, #32]
   11038:	ldp	x23, x24, [sp, #48]
   1103c:	b	10f0c <GOMP_doacross_wait@@GOMP_4.5+0x3bc>
   11040:	ldr	x1, [x21]
   11044:	udiv	x0, x1, x23
   11048:	msub	x23, x0, x23, x1
   1104c:	madd	x1, x0, x23, x23
   11050:	str	x1, [x22, #40]
   11054:	str	x0, [x22]
   11058:	str	x23, [x22, #32]
   1105c:	b	11034 <GOMP_doacross_wait@@GOMP_4.5+0x4e4>

0000000000011060 <GOMP_doacross_ull_post@@GOMP_4.5>:
   11060:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11064:	ldr	x1, [x1, #4016]
   11068:	mrs	x2, tpidr_el0
   1106c:	add	x1, x2, x1
   11070:	ldr	x1, [x1, #24]
   11074:	ldr	x2, [x1, #32]
   11078:	cbz	x2, 11108 <GOMP_doacross_ull_post@@GOMP_4.5+0xa8>
   1107c:	ldr	x4, [x2, #24]
   11080:	cbz	x4, 11108 <GOMP_doacross_ull_post@@GOMP_4.5+0xa8>
   11084:	ldr	w1, [x1]
   11088:	cmp	w1, #0x1
   1108c:	b.ne	11110 <GOMP_doacross_ull_post@@GOMP_4.5+0xb0>  // b.any
   11090:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11094:	ldr	x1, [x1, #4016]
   11098:	mrs	x3, tpidr_el0
   1109c:	add	x1, x3, x1
   110a0:	ldr	w7, [x1, #40]
   110a4:	ldrb	w1, [x2, #20]
   110a8:	cbz	w1, 11138 <GOMP_doacross_ull_post@@GOMP_4.5+0xd8>
   110ac:	ldr	x1, [x2, #8]
   110b0:	madd	x7, x7, x1, x4
   110b4:	ldr	w1, [x2, #56]
   110b8:	ldr	x3, [x0]
   110bc:	lsl	x3, x3, x1
   110c0:	ldr	w6, [x2, #16]
   110c4:	cmp	w6, #0x1
   110c8:	b.ls	110f0 <GOMP_doacross_ull_post@@GOMP_4.5+0x90>  // b.plast
   110cc:	mov	x1, #0x1                   	// #1
   110d0:	add	x4, x2, #0x38
   110d4:	ldr	w5, [x4, x1, lsl #2]
   110d8:	ldr	x2, [x0, x1, lsl #3]
   110dc:	lsl	x2, x2, x5
   110e0:	orr	x3, x3, x2
   110e4:	add	x1, x1, #0x1
   110e8:	cmp	w6, w1
   110ec:	b.hi	110d4 <GOMP_doacross_ull_post@@GOMP_4.5+0x74>  // b.pmore
   110f0:	add	x3, x3, #0x1
   110f4:	ldar	x0, [x7]
   110f8:	cmp	x0, x3
   110fc:	b.eq	11130 <GOMP_doacross_ull_post@@GOMP_4.5+0xd0>  // b.none
   11100:	stlr	x3, [x7]
   11104:	ret
   11108:	dmb	ish
   1110c:	b	11104 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>
   11110:	cmp	w1, #0x3
   11114:	b.eq	11128 <GOMP_doacross_ull_post@@GOMP_4.5+0xc8>  // b.none
   11118:	ldr	x1, [x0]
   1111c:	ldr	x7, [x2]
   11120:	udiv	x7, x1, x7
   11124:	b	110a4 <GOMP_doacross_ull_post@@GOMP_4.5+0x44>
   11128:	ldr	x7, [x0]
   1112c:	b	110a4 <GOMP_doacross_ull_post@@GOMP_4.5+0x44>
   11130:	dmb	ish
   11134:	b	11104 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>
   11138:	dmb	ishld
   1113c:	ldr	x3, [x2, #24]
   11140:	ldr	x1, [x2, #8]
   11144:	mul	x7, x7, x1
   11148:	ldr	w1, [x2, #16]
   1114c:	sub	w2, w1, #0x1
   11150:	cbz	w1, 11104 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>
   11154:	ubfiz	x2, x2, #3, #32
   11158:	add	x1, x0, x2
   1115c:	add	x7, x2, x7
   11160:	add	x3, x3, x7
   11164:	b	1117c <GOMP_doacross_ull_post@@GOMP_4.5+0x11c>
   11168:	sub	x2, x1, #0x8
   1116c:	sub	x3, x3, #0x8
   11170:	cmp	x1, x0
   11174:	b.eq	11104 <GOMP_doacross_ull_post@@GOMP_4.5+0xa4>  // b.none
   11178:	mov	x1, x2
   1117c:	ldr	x2, [x1]
   11180:	add	x2, x2, #0x1
   11184:	ldr	x4, [x3]
   11188:	cmp	x2, x4
   1118c:	b.eq	11168 <GOMP_doacross_ull_post@@GOMP_4.5+0x108>  // b.none
   11190:	ldr	x2, [x1]
   11194:	add	x2, x2, #0x1
   11198:	stlr	x2, [x3]
   1119c:	b	11168 <GOMP_doacross_ull_post@@GOMP_4.5+0x108>

00000000000111a0 <GOMP_doacross_ull_wait@@GOMP_4.5>:
   111a0:	sub	sp, sp, #0x60
   111a4:	str	x1, [sp, #40]
   111a8:	str	x2, [sp, #48]
   111ac:	str	x3, [sp, #56]
   111b0:	str	x4, [sp, #64]
   111b4:	str	x5, [sp, #72]
   111b8:	str	x6, [sp, #80]
   111bc:	str	x7, [sp, #88]
   111c0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   111c4:	ldr	x1, [x1, #4016]
   111c8:	mrs	x2, tpidr_el0
   111cc:	add	x1, x2, x1
   111d0:	ldr	x1, [x1, #24]
   111d4:	ldr	x3, [x1, #32]
   111d8:	cbz	x3, 11214 <GOMP_doacross_ull_wait@@GOMP_4.5+0x74>
   111dc:	ldr	x7, [x3, #24]
   111e0:	cbz	x7, 11214 <GOMP_doacross_ull_wait@@GOMP_4.5+0x74>
   111e4:	ldr	w2, [x1]
   111e8:	cmp	w2, #0x1
   111ec:	b.ne	112a8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x108>  // b.any
   111f0:	ldr	x5, [x1, #8]
   111f4:	cbnz	x5, 11234 <GOMP_doacross_ull_wait@@GOMP_4.5+0x94>
   111f8:	ldr	x1, [x3, #40]
   111fc:	cmp	x1, x0
   11200:	b.ls	1121c <GOMP_doacross_ull_wait@@GOMP_4.5+0x7c>  // b.plast
   11204:	ldr	x4, [x3]
   11208:	add	x4, x4, #0x1
   1120c:	udiv	x5, x0, x4
   11210:	b	11258 <GOMP_doacross_ull_wait@@GOMP_4.5+0xb8>
   11214:	dmb	ish
   11218:	b	11340 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   1121c:	sub	x1, x0, x1
   11220:	ldr	x4, [x3]
   11224:	udiv	x4, x1, x4
   11228:	ldr	x5, [x3, #32]
   1122c:	add	x5, x4, x5
   11230:	b	11258 <GOMP_doacross_ull_wait@@GOMP_4.5+0xb8>
   11234:	udiv	x4, x0, x5
   11238:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1123c:	ldr	x1, [x1, #4016]
   11240:	mrs	x2, tpidr_el0
   11244:	add	x1, x2, x1
   11248:	ldr	x1, [x1, #16]
   1124c:	ldr	w1, [x1]
   11250:	udiv	x5, x4, x1
   11254:	msub	x5, x5, x1, x4
   11258:	ldrb	w1, [x3, #20]
   1125c:	cbz	w1, 11350 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1b0>
   11260:	ldr	x4, [x3, #8]
   11264:	madd	x5, x5, x4, x7
   11268:	ldr	w2, [x3, #56]
   1126c:	lsl	x2, x0, x2
   11270:	add	x0, sp, #0x60
   11274:	str	x0, [sp]
   11278:	str	x0, [sp, #8]
   1127c:	add	x0, sp, #0x20
   11280:	str	x0, [sp, #16]
   11284:	mov	w0, #0xffffffc8            	// #-56
   11288:	str	w0, [sp, #24]
   1128c:	str	wzr, [sp, #28]
   11290:	ldr	w0, [x3, #16]
   11294:	cmp	w0, #0x1
   11298:	b.ls	11324 <GOMP_doacross_ull_wait@@GOMP_4.5+0x184>  // b.plast
   1129c:	ldr	x7, [sp, #8]
   112a0:	mov	w0, #0x1                   	// #1
   112a4:	b	11300 <GOMP_doacross_ull_wait@@GOMP_4.5+0x160>
   112a8:	mov	x5, x0
   112ac:	cmp	w2, #0x3
   112b0:	b.eq	11258 <GOMP_doacross_ull_wait@@GOMP_4.5+0xb8>  // b.none
   112b4:	ldr	x4, [x3]
   112b8:	udiv	x5, x0, x4
   112bc:	b	11258 <GOMP_doacross_ull_wait@@GOMP_4.5+0xb8>
   112c0:	add	w6, w1, #0x8
   112c4:	str	w6, [sp, #24]
   112c8:	cmp	w6, #0x0
   112cc:	b.le	1131c <GOMP_doacross_ull_wait@@GOMP_4.5+0x17c>
   112d0:	add	x1, x4, #0xf
   112d4:	and	x1, x1, #0xfffffffffffffff8
   112d8:	str	x1, [sp]
   112dc:	add	x1, x3, w0, uxtw #2
   112e0:	ldr	w6, [x1, #56]
   112e4:	ldr	x1, [x4]
   112e8:	lsl	x1, x1, x6
   112ec:	orr	x2, x2, x1
   112f0:	add	w0, w0, #0x1
   112f4:	ldr	w1, [x3, #16]
   112f8:	cmp	w1, w0
   112fc:	b.ls	11324 <GOMP_doacross_ull_wait@@GOMP_4.5+0x184>  // b.plast
   11300:	ldr	w1, [sp, #24]
   11304:	ldr	x4, [sp]
   11308:	tbnz	w1, #31, 112c0 <GOMP_doacross_ull_wait@@GOMP_4.5+0x120>
   1130c:	add	x1, x4, #0xf
   11310:	and	x1, x1, #0xfffffffffffffff8
   11314:	str	x1, [sp]
   11318:	b	112dc <GOMP_doacross_ull_wait@@GOMP_4.5+0x13c>
   1131c:	add	x4, x7, w1, sxtw
   11320:	b	112dc <GOMP_doacross_ull_wait@@GOMP_4.5+0x13c>
   11324:	ldar	x0, [x5]
   11328:	cmp	x2, x0
   1132c:	b.cc	11348 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a8>  // b.lo, b.ul, b.last
   11330:	ldr	x0, [x5]
   11334:	cmp	x0, x2
   11338:	b.ls	11330 <GOMP_doacross_ull_wait@@GOMP_4.5+0x190>  // b.plast
   1133c:	dmb	ish
   11340:	add	sp, sp, #0x60
   11344:	ret
   11348:	dmb	ish
   1134c:	b	11340 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   11350:	ldr	x4, [x3, #8]
   11354:	mul	x4, x5, x4
   11358:	add	x9, sp, #0x20
   1135c:	mov	w8, #0xffffffc8            	// #-56
   11360:	add	x6, x0, #0x1
   11364:	b	113f4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x254>
   11368:	add	w5, w2, #0x8
   1136c:	str	w5, [sp, #24]
   11370:	cmp	w5, #0x0
   11374:	b.le	113d8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x238>
   11378:	add	x2, x1, #0xf
   1137c:	and	x2, x2, #0xfffffffffffffff8
   11380:	str	x2, [sp]
   11384:	ldr	x1, [x1]
   11388:	add	x1, x1, #0x1
   1138c:	add	x2, x7, w0, uxtw #3
   11390:	add	x2, x2, x4
   11394:	ldr	x2, [x2]
   11398:	cmp	x1, x2
   1139c:	b.cc	113e4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x244>  // b.lo, b.ul, b.last
   113a0:	b.hi	113e8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x248>  // b.pmore
   113a4:	add	w0, w0, #0x1
   113a8:	ldr	w1, [x3, #16]
   113ac:	cmp	w1, w0
   113b0:	b.ls	113e8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x248>  // b.plast
   113b4:	mov	x1, x6
   113b8:	cbz	w0, 1138c <GOMP_doacross_ull_wait@@GOMP_4.5+0x1ec>
   113bc:	ldr	w2, [sp, #24]
   113c0:	ldr	x1, [sp]
   113c4:	tbnz	w2, #31, 11368 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1c8>
   113c8:	add	x2, x1, #0xf
   113cc:	and	x2, x2, #0xfffffffffffffff8
   113d0:	str	x2, [sp]
   113d4:	b	11384 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1e4>
   113d8:	ldr	x1, [sp, #8]
   113dc:	add	x1, x1, w2, sxtw
   113e0:	b	11384 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1e4>
   113e4:	ldr	w0, [x3, #16]
   113e8:	ldr	w1, [x3, #16]
   113ec:	cmp	w1, w0
   113f0:	b.eq	1141c <GOMP_doacross_ull_wait@@GOMP_4.5+0x27c>  // b.none
   113f4:	add	x0, sp, #0x60
   113f8:	str	x0, [sp]
   113fc:	str	x0, [sp, #8]
   11400:	str	x9, [sp, #16]
   11404:	str	w8, [sp, #24]
   11408:	str	wzr, [sp, #28]
   1140c:	ldr	w0, [x3, #16]
   11410:	cbz	w0, 113e8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x248>
   11414:	mov	w0, #0x0                   	// #0
   11418:	b	113b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x214>
   1141c:	dmb	ish
   11420:	b	11340 <GOMP_doacross_ull_wait@@GOMP_4.5+0x1a0>
   11424:	stp	x29, x30, [sp, #-48]!
   11428:	mov	x29, sp
   1142c:	stp	x19, x20, [sp, #16]
   11430:	str	x21, [sp, #32]
   11434:	mov	w21, w1
   11438:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1143c:	ldr	x2, [x2, #4016]
   11440:	mrs	x3, tpidr_el0
   11444:	add	x2, x3, x2
   11448:	ldr	x1, [x2, #80]
   1144c:	add	x2, x1, #0x90
   11450:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   11454:	add	x19, x19, #0x2b8
   11458:	cmp	x1, #0x0
   1145c:	csel	x19, x19, x2, eq  // eq = none
   11460:	mov	w20, w0
   11464:	cmp	w0, #0x1
   11468:	b.eq	114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>  // b.none
   1146c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11470:	ldr	x1, [x1, #4016]
   11474:	add	x1, x3, x1
   11478:	ldr	w1, [x1, #48]
   1147c:	cbz	w1, 1148c <GOMP_doacross_ull_wait@@GOMP_4.5+0x2ec>
   11480:	ldrb	w2, [x19, #25]
   11484:	mov	w20, #0x1                   	// #1
   11488:	cbz	w2, 114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>
   1148c:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   11490:	ldr	x2, [x2, #736]
   11494:	mov	w20, #0x1                   	// #1
   11498:	cmp	x2, w1, uxtw
   1149c:	b.ls	114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>  // b.plast
   114a0:	mov	w20, w0
   114a4:	cbnz	w0, 114ac <GOMP_doacross_ull_wait@@GOMP_4.5+0x30c>
   114a8:	ldr	w20, [x19]
   114ac:	ldrb	w0, [x19, #24]
   114b0:	cbnz	w0, 114d8 <GOMP_doacross_ull_wait@@GOMP_4.5+0x338>
   114b4:	ldr	w0, [x19, #20]
   114b8:	cmp	w20, #0x1
   114bc:	ccmn	w0, #0x1, #0x4, ne  // ne = any
   114c0:	b.ne	114f4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x354>  // b.any
   114c4:	mov	w0, w20
   114c8:	ldp	x19, x20, [sp, #16]
   114cc:	ldr	x21, [sp, #32]
   114d0:	ldp	x29, x30, [sp], #48
   114d4:	ret
   114d8:	bl	1b3e8 <omp_test_nest_lock@OMP_1.0+0x510>
   114dc:	cmp	w20, w0
   114e0:	csel	w20, w20, w0, ls  // ls = plast
   114e4:	cmp	w21, #0x0
   114e8:	ccmp	w20, w21, #0x0, ne  // ne = any
   114ec:	csel	w20, w20, w21, ls  // ls = plast
   114f0:	b	114b4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x314>
   114f4:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   114f8:	ldr	x1, [x1, #4016]
   114fc:	mrs	x2, tpidr_el0
   11500:	add	x1, x2, x1
   11504:	ldr	x6, [x1, #96]
   11508:	ldr	x1, [x1, #16]
   1150c:	cmp	x1, #0x0
   11510:	ccmp	x6, #0x0, #0x4, ne  // ne = any
   11514:	b.eq	1157c <GOMP_doacross_ull_wait@@GOMP_4.5+0x3dc>  // b.none
   11518:	mov	x9, #0x1                   	// #1
   1151c:	mov	w8, w20
   11520:	mov	w5, w20
   11524:	mov	w7, #0x1                   	// #1
   11528:	add	x4, x6, #0x18
   1152c:	ldr	x1, [x6, #24]
   11530:	ldr	w3, [x19, #20]
   11534:	sub	x2, x9, x1
   11538:	add	x2, x2, w3, uxtw
   1153c:	sub	w0, w7, w1
   11540:	add	w0, w0, w3
   11544:	cmp	x2, x8
   11548:	csel	w20, w0, w5, cc  // cc = lo, ul, last
   1154c:	sub	x2, x1, #0x1
   11550:	csel	w0, w0, w5, cc  // cc = lo, ul, last
   11554:	add	x0, x2, x0
   11558:	ldxr	x2, [x4]
   1155c:	cmp	x2, x1
   11560:	b.ne	1156c <GOMP_doacross_ull_wait@@GOMP_4.5+0x3cc>  // b.any
   11564:	stlxr	w3, x0, [x4]
   11568:	cbnz	w3, 11558 <GOMP_doacross_ull_wait@@GOMP_4.5+0x3b8>
   1156c:	dmb	ish
   11570:	cmp	x2, x1
   11574:	b.ne	1152c <GOMP_doacross_ull_wait@@GOMP_4.5+0x38c>  // b.any
   11578:	b	114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>
   1157c:	cmp	w20, w0
   11580:	csel	w20, w20, w0, ls  // ls = plast
   11584:	cbz	x6, 114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>
   11588:	mov	w0, w20
   1158c:	str	x0, [x6, #24]
   11590:	b	114c4 <GOMP_doacross_ull_wait@@GOMP_4.5+0x324>

0000000000011594 <GOMP_parallel_start@@GOMP_1.0>:
   11594:	stp	x29, x30, [sp, #-48]!
   11598:	mov	x29, sp
   1159c:	stp	x19, x20, [sp, #16]
   115a0:	str	x21, [sp, #32]
   115a4:	mov	x19, x0
   115a8:	mov	x20, x1
   115ac:	mov	w0, w2
   115b0:	mov	w1, #0x0                   	// #0
   115b4:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
   115b8:	mov	w21, w0
   115bc:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   115c0:	mov	x5, #0x0                   	// #0
   115c4:	mov	x4, x0
   115c8:	mov	w3, #0x0                   	// #0
   115cc:	mov	w2, w21
   115d0:	mov	x1, x20
   115d4:	mov	x0, x19
   115d8:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
   115dc:	ldp	x19, x20, [sp, #16]
   115e0:	ldr	x21, [sp, #32]
   115e4:	ldp	x29, x30, [sp], #48
   115e8:	ret

00000000000115ec <GOMP_parallel_end@@GOMP_1.0>:
   115ec:	stp	x29, x30, [sp, #-32]!
   115f0:	mov	x29, sp
   115f4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   115f8:	ldr	x0, [x0, #4016]
   115fc:	mrs	x1, tpidr_el0
   11600:	add	x0, x1, x0
   11604:	ldr	x1, [x0, #80]
   11608:	add	x2, x1, #0x90
   1160c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   11610:	add	x0, x0, #0x2b8
   11614:	cmp	x1, #0x0
   11618:	csel	x0, x0, x2, eq  // eq = none
   1161c:	ldr	w0, [x0, #20]
   11620:	cmn	w0, #0x1
   11624:	b.ne	11634 <GOMP_parallel_end@@GOMP_1.0+0x48>  // b.any
   11628:	bl	1a06c <omp_in_final@@OMP_3.1+0x148c>
   1162c:	ldp	x29, x30, [sp], #32
   11630:	ret
   11634:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11638:	ldr	x0, [x0, #4016]
   1163c:	mrs	x1, tpidr_el0
   11640:	add	x0, x1, x0
   11644:	ldr	x0, [x0, #16]
   11648:	cbz	x0, 116b4 <GOMP_parallel_end@@GOMP_1.0+0xc8>
   1164c:	str	x19, [sp, #16]
   11650:	ldr	w19, [x0]
   11654:	bl	1a06c <omp_in_final@@OMP_3.1+0x148c>
   11658:	cmp	w19, #0x1
   1165c:	b.ls	116dc <GOMP_parallel_end@@GOMP_1.0+0xf0>  // b.plast
   11660:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11664:	ldr	x0, [x0, #4016]
   11668:	mrs	x1, tpidr_el0
   1166c:	add	x0, x1, x0
   11670:	ldr	x0, [x0, #16]
   11674:	cbz	x0, 116bc <GOMP_parallel_end@@GOMP_1.0+0xd0>
   11678:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1167c:	ldr	x0, [x0, #4016]
   11680:	mrs	x1, tpidr_el0
   11684:	add	x0, x1, x0
   11688:	ldr	x0, [x0, #96]
   1168c:	mov	x1, #0x1                   	// #1
   11690:	sub	x19, x1, w19, uxtw
   11694:	add	x0, x0, #0x18
   11698:	ldxr	x1, [x0]
   1169c:	add	x1, x1, x19
   116a0:	stlxr	w2, x1, [x0]
   116a4:	cbnz	w2, 11698 <GOMP_parallel_end@@GOMP_1.0+0xac>
   116a8:	dmb	ish
   116ac:	ldr	x19, [sp, #16]
   116b0:	b	1162c <GOMP_parallel_end@@GOMP_1.0+0x40>
   116b4:	bl	1a06c <omp_in_final@@OMP_3.1+0x148c>
   116b8:	b	1162c <GOMP_parallel_end@@GOMP_1.0+0x40>
   116bc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   116c0:	ldr	x0, [x0, #4016]
   116c4:	add	x0, x1, x0
   116c8:	ldr	x0, [x0, #96]
   116cc:	mov	x1, #0x1                   	// #1
   116d0:	str	x1, [x0, #24]
   116d4:	ldr	x19, [sp, #16]
   116d8:	b	1162c <GOMP_parallel_end@@GOMP_1.0+0x40>
   116dc:	ldr	x19, [sp, #16]
   116e0:	b	1162c <GOMP_parallel_end@@GOMP_1.0+0x40>

00000000000116e4 <GOMP_parallel@@GOMP_4.0>:
   116e4:	stp	x29, x30, [sp, #-48]!
   116e8:	mov	x29, sp
   116ec:	stp	x19, x20, [sp, #16]
   116f0:	stp	x21, x22, [sp, #32]
   116f4:	mov	x19, x0
   116f8:	mov	x20, x1
   116fc:	mov	w0, w2
   11700:	mov	w22, w3
   11704:	mov	w1, #0x0                   	// #0
   11708:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
   1170c:	mov	w21, w0
   11710:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   11714:	mov	x5, #0x0                   	// #0
   11718:	mov	x4, x0
   1171c:	mov	w3, w22
   11720:	mov	w2, w21
   11724:	mov	x1, x20
   11728:	mov	x0, x19
   1172c:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
   11730:	mov	x0, x20
   11734:	blr	x19
   11738:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
   1173c:	ldp	x19, x20, [sp, #16]
   11740:	ldp	x21, x22, [sp, #32]
   11744:	ldp	x29, x30, [sp], #48
   11748:	ret

000000000001174c <GOMP_parallel_reductions@@GOMP_5.0>:
   1174c:	stp	x29, x30, [sp, #-64]!
   11750:	mov	x29, sp
   11754:	stp	x19, x20, [sp, #16]
   11758:	stp	x21, x22, [sp, #32]
   1175c:	str	x23, [sp, #48]
   11760:	mov	x22, x0
   11764:	mov	x20, x1
   11768:	mov	w0, w2
   1176c:	mov	w23, w3
   11770:	mov	w1, #0x0                   	// #0
   11774:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
   11778:	mov	w19, w0
   1177c:	mov	w1, w0
   11780:	ldr	x0, [x20]
   11784:	bl	187d0 <GOMP_task_reduction_remap@@GOMP_5.0+0x1a4>
   11788:	mov	x21, x0
   1178c:	mov	w0, w19
   11790:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   11794:	mov	x5, x21
   11798:	mov	x4, x0
   1179c:	mov	w3, w23
   117a0:	mov	w2, w19
   117a4:	mov	x1, x20
   117a8:	mov	x0, x22
   117ac:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
   117b0:	mov	x0, x20
   117b4:	blr	x22
   117b8:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
   117bc:	mov	x0, x21
   117c0:	bl	8900 <free@plt>
   117c4:	mov	w0, w19
   117c8:	ldp	x19, x20, [sp, #16]
   117cc:	ldp	x21, x22, [sp, #32]
   117d0:	ldr	x23, [sp, #48]
   117d4:	ldp	x29, x30, [sp], #64
   117d8:	ret

00000000000117dc <GOMP_cancellation_point@@GOMP_4.0>:
   117dc:	mov	w1, w0
   117e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   117e4:	ldrb	w0, [x0, #1364]
   117e8:	cbz	w0, 1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>
   117ec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   117f0:	ldr	x0, [x0, #4016]
   117f4:	mrs	x2, tpidr_el0
   117f8:	add	x0, x2, x0
   117fc:	ldr	x2, [x0, #16]
   11800:	tst	w1, #0x6
   11804:	b.eq	11820 <GOMP_cancellation_point@@GOMP_4.0+0x44>  // b.none
   11808:	mov	w0, #0x0                   	// #0
   1180c:	cbz	x2, 1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>
   11810:	ldr	w0, [x2, #1332]
   11814:	cmp	w0, #0x0
   11818:	cset	w0, ne  // ne = any
   1181c:	ret
   11820:	tbz	w1, #3, 11860 <GOMP_cancellation_point@@GOMP_4.0+0x84>
   11824:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11828:	ldr	x0, [x0, #4016]
   1182c:	mrs	x1, tpidr_el0
   11830:	add	x0, x1, x0
   11834:	ldr	x0, [x0, #80]
   11838:	ldr	x1, [x0, #40]
   1183c:	cbz	x1, 11860 <GOMP_cancellation_point@@GOMP_4.0+0x84>
   11840:	ldrb	w0, [x1, #49]
   11844:	cbnz	w0, 1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>
   11848:	ldrb	w0, [x1, #50]
   1184c:	cbz	w0, 11860 <GOMP_cancellation_point@@GOMP_4.0+0x84>
   11850:	ldr	x0, [x1]
   11854:	cbz	x0, 11860 <GOMP_cancellation_point@@GOMP_4.0+0x84>
   11858:	ldrb	w0, [x0, #49]
   1185c:	cbnz	w0, 1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>
   11860:	mov	w0, #0x0                   	// #0
   11864:	cbz	x2, 1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>
   11868:	ldr	w0, [x2, #132]
   1186c:	ubfx	x0, x0, #2, #1
   11870:	b	1181c <GOMP_cancellation_point@@GOMP_4.0+0x40>

0000000000011874 <GOMP_cancel@@GOMP_4.0>:
   11874:	stp	x29, x30, [sp, #-48]!
   11878:	mov	x29, sp
   1187c:	stp	x19, x20, [sp, #16]
   11880:	and	w19, w1, #0xff
   11884:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   11888:	ldrb	w1, [x1, #1364]
   1188c:	cbz	w1, 11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   11890:	cbz	w19, 11938 <GOMP_cancel@@GOMP_4.0+0xc4>
   11894:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11898:	ldr	x1, [x1, #4016]
   1189c:	mrs	x2, tpidr_el0
   118a0:	add	x1, x2, x1
   118a4:	ldr	x20, [x1, #16]
   118a8:	tst	w0, #0x6
   118ac:	b.ne	11950 <GOMP_cancel@@GOMP_4.0+0xdc>  // b.any
   118b0:	tbz	w0, #3, 11984 <GOMP_cancel@@GOMP_4.0+0x110>
   118b4:	str	x21, [sp, #32]
   118b8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   118bc:	ldr	x0, [x0, #4016]
   118c0:	mrs	x1, tpidr_el0
   118c4:	add	x0, x1, x0
   118c8:	ldr	x0, [x0, #80]
   118cc:	ldr	x21, [x0, #40]
   118d0:	mov	w1, w19
   118d4:	cbz	x21, 1199c <GOMP_cancel@@GOMP_4.0+0x128>
   118d8:	ldrb	w0, [x21, #50]
   118dc:	cbz	w0, 118ec <GOMP_cancel@@GOMP_4.0+0x78>
   118e0:	ldr	x0, [x21]
   118e4:	cmp	x0, #0x0
   118e8:	csel	x21, x21, x0, eq  // eq = none
   118ec:	ldrb	w1, [x21, #49]
   118f0:	cbnz	w1, 119a4 <GOMP_cancel@@GOMP_4.0+0x130>
   118f4:	add	x20, x20, #0x500
   118f8:	mov	w0, #0x1                   	// #1
   118fc:	ldaxr	w1, [x20]
   11900:	cbnz	w1, 1190c <GOMP_cancel@@GOMP_4.0+0x98>
   11904:	stxr	w2, w0, [x20]
   11908:	cbnz	w2, 118fc <GOMP_cancel@@GOMP_4.0+0x88>
   1190c:	cmp	w1, #0x0
   11910:	b.ne	11964 <GOMP_cancel@@GOMP_4.0+0xf0>  // b.any
   11914:	mov	w0, #0x1                   	// #1
   11918:	strb	w0, [x21, #49]
   1191c:	ldxr	w0, [x20]
   11920:	stlxr	w1, wzr, [x20]
   11924:	cbnz	w1, 1191c <GOMP_cancel@@GOMP_4.0+0xa8>
   11928:	mov	w1, w19
   1192c:	tbnz	w0, #31, 11970 <GOMP_cancel@@GOMP_4.0+0xfc>
   11930:	ldr	x21, [sp, #32]
   11934:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   11938:	bl	117dc <GOMP_cancellation_point@@GOMP_4.0>
   1193c:	and	w1, w0, #0xff
   11940:	mov	w0, w1
   11944:	ldp	x19, x20, [sp, #16]
   11948:	ldp	x29, x30, [sp], #48
   1194c:	ret
   11950:	mov	w1, w19
   11954:	cbz	x20, 11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   11958:	mov	w0, #0x1                   	// #1
   1195c:	str	w0, [x20, #1332]
   11960:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   11964:	mov	x0, x20
   11968:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1196c:	b	11914 <GOMP_cancel@@GOMP_4.0+0xa0>
   11970:	mov	x0, x20
   11974:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   11978:	mov	w1, w19
   1197c:	ldr	x21, [sp, #32]
   11980:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   11984:	mov	w0, #0x1                   	// #1
   11988:	str	w0, [x20, #1336]
   1198c:	mov	x0, x20
   11990:	bl	1be9c <omp_get_num_procs@@OMP_1.0+0xa28>
   11994:	mov	w1, w19
   11998:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   1199c:	ldr	x21, [sp, #32]
   119a0:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>
   119a4:	ldr	x21, [sp, #32]
   119a8:	b	11940 <GOMP_cancel@@GOMP_4.0+0xcc>

00000000000119ac <omp_get_num_threads@@OMP_1.0>:
   119ac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   119b0:	ldr	x0, [x0, #4016]
   119b4:	mrs	x1, tpidr_el0
   119b8:	add	x0, x1, x0
   119bc:	ldr	x1, [x0, #16]
   119c0:	mov	w0, #0x1                   	// #1
   119c4:	cbz	x1, 119cc <omp_get_num_threads@@OMP_1.0+0x20>
   119c8:	ldr	w0, [x1]
   119cc:	ret

00000000000119d0 <omp_get_thread_num@@OMP_1.0>:
   119d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   119d4:	ldr	x0, [x0, #4016]
   119d8:	mrs	x1, tpidr_el0
   119dc:	add	x0, x1, x0
   119e0:	ldr	w0, [x0, #40]
   119e4:	ret

00000000000119e8 <omp_in_parallel@@OMP_1.0>:
   119e8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   119ec:	ldr	x0, [x0, #4016]
   119f0:	mrs	x1, tpidr_el0
   119f4:	add	x0, x1, x0
   119f8:	ldr	w0, [x0, #48]
   119fc:	cmp	w0, #0x0
   11a00:	cset	w0, ne  // ne = any
   11a04:	ret

0000000000011a08 <omp_get_level@@OMP_3.0>:
   11a08:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11a0c:	ldr	x0, [x0, #4016]
   11a10:	mrs	x1, tpidr_el0
   11a14:	add	x0, x1, x0
   11a18:	ldr	w0, [x0, #44]
   11a1c:	ret

0000000000011a20 <omp_get_ancestor_thread_num@@OMP_3.0>:
   11a20:	tbnz	w0, #31, 11a90 <omp_get_ancestor_thread_num@@OMP_3.0+0x70>
   11a24:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11a28:	ldr	x1, [x1, #4016]
   11a2c:	mrs	x2, tpidr_el0
   11a30:	add	x1, x2, x1
   11a34:	ldr	w2, [x1, #44]
   11a38:	cmp	w2, w0
   11a3c:	b.cc	11a98 <omp_get_ancestor_thread_num@@OMP_3.0+0x78>  // b.lo, b.ul, b.last
   11a40:	sub	w2, w2, w0
   11a44:	cmp	w2, #0x0
   11a48:	b.le	11a78 <omp_get_ancestor_thread_num@@OMP_3.0+0x58>
   11a4c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11a50:	ldr	x0, [x0, #4016]
   11a54:	mrs	x1, tpidr_el0
   11a58:	add	x0, x1, x0
   11a5c:	add	x0, x0, #0x10
   11a60:	ldr	x0, [x0]
   11a64:	add	x0, x0, #0x8
   11a68:	subs	w2, w2, #0x1
   11a6c:	b.ne	11a60 <omp_get_ancestor_thread_num@@OMP_3.0+0x40>  // b.any
   11a70:	ldr	w0, [x0, #24]
   11a74:	ret
   11a78:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11a7c:	ldr	x0, [x0, #4016]
   11a80:	mrs	x1, tpidr_el0
   11a84:	add	x0, x1, x0
   11a88:	add	x0, x0, #0x10
   11a8c:	b	11a70 <omp_get_ancestor_thread_num@@OMP_3.0+0x50>
   11a90:	mov	w0, #0xffffffff            	// #-1
   11a94:	b	11a74 <omp_get_ancestor_thread_num@@OMP_3.0+0x54>
   11a98:	mov	w0, #0xffffffff            	// #-1
   11a9c:	b	11a74 <omp_get_ancestor_thread_num@@OMP_3.0+0x54>

0000000000011aa0 <omp_get_team_size@@OMP_3.0>:
   11aa0:	tbnz	w0, #31, 11b1c <omp_get_team_size@@OMP_3.0+0x7c>
   11aa4:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11aa8:	ldr	x1, [x1, #4016]
   11aac:	mrs	x2, tpidr_el0
   11ab0:	add	x1, x2, x1
   11ab4:	ldr	w2, [x1, #44]
   11ab8:	cmp	w2, w0
   11abc:	b.cc	11b24 <omp_get_team_size@@OMP_3.0+0x84>  // b.lo, b.ul, b.last
   11ac0:	sub	w2, w2, w0
   11ac4:	cmp	w2, #0x0
   11ac8:	b.le	11b04 <omp_get_team_size@@OMP_3.0+0x64>
   11acc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11ad0:	ldr	x0, [x0, #4016]
   11ad4:	mrs	x1, tpidr_el0
   11ad8:	add	x0, x1, x0
   11adc:	add	x0, x0, #0x10
   11ae0:	ldr	x0, [x0]
   11ae4:	add	x0, x0, #0x8
   11ae8:	subs	w2, w2, #0x1
   11aec:	b.ne	11ae0 <omp_get_team_size@@OMP_3.0+0x40>  // b.any
   11af0:	ldr	x1, [x0]
   11af4:	mov	w0, #0x1                   	// #1
   11af8:	cbz	x1, 11b00 <omp_get_team_size@@OMP_3.0+0x60>
   11afc:	ldr	w0, [x1]
   11b00:	ret
   11b04:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11b08:	ldr	x0, [x0, #4016]
   11b0c:	mrs	x1, tpidr_el0
   11b10:	add	x0, x1, x0
   11b14:	add	x0, x0, #0x10
   11b18:	b	11af0 <omp_get_team_size@@OMP_3.0+0x50>
   11b1c:	mov	w0, #0xffffffff            	// #-1
   11b20:	b	11b00 <omp_get_team_size@@OMP_3.0+0x60>
   11b24:	mov	w0, #0xffffffff            	// #-1
   11b28:	b	11b00 <omp_get_team_size@@OMP_3.0+0x60>

0000000000011b2c <omp_get_active_level@@OMP_3.0>:
   11b2c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11b30:	ldr	x0, [x0, #4016]
   11b34:	mrs	x1, tpidr_el0
   11b38:	add	x0, x1, x0
   11b3c:	ldr	w0, [x0, #48]
   11b40:	ret

0000000000011b44 <GOMP_sections_start@@GOMP_1.0>:
   11b44:	stp	x29, x30, [sp, #-48]!
   11b48:	mov	x29, sp
   11b4c:	str	x19, [sp, #16]
   11b50:	mov	w19, w0
   11b54:	mov	x0, #0x0                   	// #0
   11b58:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
   11b5c:	and	w0, w0, #0xff
   11b60:	cbz	w0, 11bd4 <GOMP_sections_start@@GOMP_1.0+0x90>
   11b64:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11b68:	ldr	x2, [x2, #4016]
   11b6c:	mrs	x0, tpidr_el0
   11b70:	add	x2, x0, x2
   11b74:	ldr	x1, [x2, #24]
   11b78:	mov	w0, #0x2                   	// #2
   11b7c:	str	w0, [x1]
   11b80:	mov	x3, #0x1                   	// #1
   11b84:	str	x3, [x1, #8]
   11b88:	mov	w0, w19
   11b8c:	add	x0, x0, x3
   11b90:	str	x0, [x1, #16]
   11b94:	str	x3, [x1, #24]
   11b98:	str	x3, [x1, #72]
   11b9c:	str	w3, [x1, #4]
   11ba0:	ldr	x0, [x2, #32]
   11ba4:	cbz	x0, 11bd4 <GOMP_sections_start@@GOMP_1.0+0x90>
   11ba8:	add	x0, x0, #0x50
   11bac:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11bb0:	ldr	x1, [x1, #4016]
   11bb4:	mrs	x2, tpidr_el0
   11bb8:	add	x1, x2, x1
   11bbc:	ldr	x2, [x1, #24]
   11bc0:	ldxr	x1, [x0]
   11bc4:	stlxr	w3, x2, [x0]
   11bc8:	cbnz	w3, 11bc0 <GOMP_sections_start@@GOMP_1.0+0x7c>
   11bcc:	cmp	x1, #0x1
   11bd0:	b.ne	11bf8 <GOMP_sections_start@@GOMP_1.0+0xb4>  // b.any
   11bd4:	add	x1, sp, #0x20
   11bd8:	add	x0, sp, #0x28
   11bdc:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
   11be0:	ands	w0, w0, #0xff
   11be4:	ldr	x0, [sp, #40]
   11be8:	csel	x0, x0, xzr, ne  // ne = any
   11bec:	ldr	x19, [sp, #16]
   11bf0:	ldp	x29, x30, [sp], #48
   11bf4:	ret
   11bf8:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
   11bfc:	b	11bd4 <GOMP_sections_start@@GOMP_1.0+0x90>

0000000000011c00 <GOMP_sections2_start@@GOMP_5.0>:
   11c00:	stp	x29, x30, [sp, #-80]!
   11c04:	mov	x29, sp
   11c08:	stp	x19, x20, [sp, #16]
   11c0c:	stp	x21, x22, [sp, #32]
   11c10:	mov	w21, w0
   11c14:	mov	x19, x2
   11c18:	cbz	x1, 11ca8 <GOMP_sections2_start@@GOMP_5.0+0xa8>
   11c1c:	mov	x20, x1
   11c20:	bl	18ad8 <GOMP_task_reduction_remap@@GOMP_5.0+0x4ac>
   11c24:	mov	x0, #0x0                   	// #0
   11c28:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
   11c2c:	and	w1, w0, #0xff
   11c30:	cbnz	w1, 11cf8 <GOMP_sections2_start@@GOMP_5.0+0xf8>
   11c34:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11c38:	ldr	x0, [x0, #4016]
   11c3c:	mrs	x1, tpidr_el0
   11c40:	add	x0, x1, x0
   11c44:	ldr	x0, [x0, #24]
   11c48:	ldr	x1, [x0, #88]
   11c4c:	mov	x0, x20
   11c50:	bl	1890c <GOMP_task_reduction_remap@@GOMP_5.0+0x2e0>
   11c54:	cbz	x19, 11dd0 <GOMP_sections2_start@@GOMP_5.0+0x1d0>
   11c58:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11c5c:	ldr	x0, [x0, #4016]
   11c60:	mrs	x1, tpidr_el0
   11c64:	add	x0, x1, x0
   11c68:	ldr	x0, [x0, #24]
   11c6c:	ldr	x0, [x0, #32]
   11c70:	str	x0, [x19]
   11c74:	b	11dd0 <GOMP_sections2_start@@GOMP_5.0+0x1d0>
   11c78:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11c7c:	ldr	x0, [x0, #4016]
   11c80:	mrs	x1, tpidr_el0
   11c84:	add	x0, x1, x0
   11c88:	ldr	x0, [x0, #24]
   11c8c:	mov	w1, #0x0                   	// #0
   11c90:	add	x0, x0, #0x60
   11c94:	bl	87c0 <memset@plt>
   11c98:	str	x0, [x19]
   11c9c:	b	11d8c <GOMP_sections2_start@@GOMP_5.0+0x18c>
   11ca0:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
   11ca4:	b	11dd0 <GOMP_sections2_start@@GOMP_5.0+0x1d0>
   11ca8:	mov	x0, #0x0                   	// #0
   11cac:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
   11cb0:	and	w0, w0, #0xff
   11cb4:	cbz	w0, 11c54 <GOMP_sections2_start@@GOMP_5.0+0x54>
   11cb8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11cbc:	ldr	x0, [x0, #4016]
   11cc0:	mrs	x1, tpidr_el0
   11cc4:	add	x0, x1, x0
   11cc8:	ldr	x1, [x0, #24]
   11ccc:	mov	w0, #0x2                   	// #2
   11cd0:	str	w0, [x1]
   11cd4:	mov	x2, #0x1                   	// #1
   11cd8:	str	x2, [x1, #8]
   11cdc:	mov	w0, w21
   11ce0:	add	x0, x0, x2
   11ce4:	str	x0, [x1, #16]
   11ce8:	str	x2, [x1, #24]
   11cec:	str	x2, [x1, #72]
   11cf0:	str	w2, [x1, #4]
   11cf4:	b	11d58 <GOMP_sections2_start@@GOMP_5.0+0x158>
   11cf8:	str	x23, [sp, #48]
   11cfc:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11d00:	ldr	x22, [x22, #4016]
   11d04:	mrs	x0, tpidr_el0
   11d08:	add	x22, x0, x22
   11d0c:	ldr	x1, [x22, #24]
   11d10:	mov	w0, #0x2                   	// #2
   11d14:	str	w0, [x1]
   11d18:	mov	x23, #0x1                   	// #1
   11d1c:	str	x23, [x1, #8]
   11d20:	mov	w0, w21
   11d24:	add	x0, x0, x23
   11d28:	str	x0, [x1, #16]
   11d2c:	str	x23, [x1, #24]
   11d30:	str	x23, [x1, #72]
   11d34:	str	w23, [x1, #4]
   11d38:	mov	x0, x20
   11d3c:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   11d40:	ldr	x0, [x22, #80]
   11d44:	ldr	x0, [x0, #40]
   11d48:	strb	w23, [x0, #50]
   11d4c:	ldr	x0, [x22, #24]
   11d50:	str	x20, [x0, #88]
   11d54:	ldr	x23, [sp, #48]
   11d58:	cbz	x19, 11d8c <GOMP_sections2_start@@GOMP_5.0+0x18c>
   11d5c:	ldr	x2, [x19]
   11d60:	cmp	x2, #0x20
   11d64:	b.ls	11c78 <GOMP_sections2_start@@GOMP_5.0+0x78>  // b.plast
   11d68:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11d6c:	ldr	x0, [x0, #4016]
   11d70:	mrs	x1, tpidr_el0
   11d74:	add	x0, x1, x0
   11d78:	ldr	x20, [x0, #24]
   11d7c:	mov	x0, x2
   11d80:	bl	8c5c <fprintf@plt+0x14c>
   11d84:	str	x0, [x20, #32]
   11d88:	str	x0, [x19]
   11d8c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11d90:	ldr	x0, [x0, #4016]
   11d94:	mrs	x1, tpidr_el0
   11d98:	add	x0, x1, x0
   11d9c:	ldr	x0, [x0, #32]
   11da0:	cbz	x0, 11dd0 <GOMP_sections2_start@@GOMP_5.0+0x1d0>
   11da4:	add	x0, x0, #0x50
   11da8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11dac:	ldr	x1, [x1, #4016]
   11db0:	mrs	x2, tpidr_el0
   11db4:	add	x1, x2, x1
   11db8:	ldr	x2, [x1, #24]
   11dbc:	ldxr	x1, [x0]
   11dc0:	stlxr	w3, x2, [x0]
   11dc4:	cbnz	w3, 11dbc <GOMP_sections2_start@@GOMP_5.0+0x1bc>
   11dc8:	cmp	x1, #0x1
   11dcc:	b.ne	11ca0 <GOMP_sections2_start@@GOMP_5.0+0xa0>  // b.any
   11dd0:	add	x1, sp, #0x40
   11dd4:	add	x0, sp, #0x48
   11dd8:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
   11ddc:	ands	w0, w0, #0xff
   11de0:	ldr	x0, [sp, #72]
   11de4:	csel	x0, x0, xzr, ne  // ne = any
   11de8:	ldp	x19, x20, [sp, #16]
   11dec:	ldp	x21, x22, [sp, #32]
   11df0:	ldp	x29, x30, [sp], #80
   11df4:	ret

0000000000011df8 <GOMP_sections_next@@GOMP_1.0>:
   11df8:	stp	x29, x30, [sp, #-32]!
   11dfc:	mov	x29, sp
   11e00:	add	x1, sp, #0x10
   11e04:	add	x0, sp, #0x18
   11e08:	bl	bfac <omp_is_initial_device@@OMP_4.0+0x284>
   11e0c:	ands	w0, w0, #0xff
   11e10:	ldr	x0, [sp, #24]
   11e14:	csel	x0, x0, xzr, ne  // ne = any
   11e18:	ldp	x29, x30, [sp], #32
   11e1c:	ret

0000000000011e20 <GOMP_parallel_sections_start@@GOMP_1.0>:
   11e20:	stp	x29, x30, [sp, #-48]!
   11e24:	mov	x29, sp
   11e28:	stp	x19, x20, [sp, #16]
   11e2c:	stp	x21, x22, [sp, #32]
   11e30:	mov	x20, x0
   11e34:	mov	x21, x1
   11e38:	mov	w0, w2
   11e3c:	mov	w19, w3
   11e40:	mov	w1, w3
   11e44:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
   11e48:	mov	w22, w0
   11e4c:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   11e50:	mov	x4, x0
   11e54:	mov	w0, #0x2                   	// #2
   11e58:	str	w0, [x4, #256]
   11e5c:	mov	x3, #0x1                   	// #1
   11e60:	str	x3, [x4, #264]
   11e64:	mov	w19, w19
   11e68:	add	x19, x19, x3
   11e6c:	str	x19, [x4, #272]
   11e70:	str	x3, [x4, #280]
   11e74:	str	x3, [x4, #328]
   11e78:	str	w3, [x4, #260]
   11e7c:	mov	x5, #0x0                   	// #0
   11e80:	mov	w3, #0x0                   	// #0
   11e84:	mov	w2, w22
   11e88:	mov	x1, x21
   11e8c:	mov	x0, x20
   11e90:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
   11e94:	ldp	x19, x20, [sp, #16]
   11e98:	ldp	x21, x22, [sp, #32]
   11e9c:	ldp	x29, x30, [sp], #48
   11ea0:	ret

0000000000011ea4 <GOMP_parallel_sections@@GOMP_4.0>:
   11ea4:	stp	x29, x30, [sp, #-64]!
   11ea8:	mov	x29, sp
   11eac:	stp	x19, x20, [sp, #16]
   11eb0:	stp	x21, x22, [sp, #32]
   11eb4:	str	x23, [sp, #48]
   11eb8:	mov	x20, x0
   11ebc:	mov	x21, x1
   11ec0:	mov	w0, w2
   11ec4:	mov	w19, w3
   11ec8:	mov	w23, w4
   11ecc:	mov	w1, w3
   11ed0:	bl	11424 <GOMP_doacross_ull_wait@@GOMP_4.5+0x284>
   11ed4:	mov	w22, w0
   11ed8:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   11edc:	mov	x4, x0
   11ee0:	mov	w0, #0x2                   	// #2
   11ee4:	str	w0, [x4, #256]
   11ee8:	mov	x0, #0x1                   	// #1
   11eec:	str	x0, [x4, #264]
   11ef0:	mov	w19, w19
   11ef4:	add	x19, x19, x0
   11ef8:	str	x19, [x4, #272]
   11efc:	str	x0, [x4, #280]
   11f00:	str	x0, [x4, #328]
   11f04:	str	w0, [x4, #260]
   11f08:	mov	x5, #0x0                   	// #0
   11f0c:	mov	w3, w23
   11f10:	mov	w2, w22
   11f14:	mov	x1, x21
   11f18:	mov	x0, x20
   11f1c:	bl	18fa0 <omp_in_final@@OMP_3.1+0x3c0>
   11f20:	mov	x0, x21
   11f24:	blr	x20
   11f28:	bl	115ec <GOMP_parallel_end@@GOMP_1.0>
   11f2c:	ldp	x19, x20, [sp, #16]
   11f30:	ldp	x21, x22, [sp, #32]
   11f34:	ldr	x23, [sp, #48]
   11f38:	ldp	x29, x30, [sp], #64
   11f3c:	ret

0000000000011f40 <GOMP_sections_end@@GOMP_1.0>:
   11f40:	stp	x29, x30, [sp, #-16]!
   11f44:	mov	x29, sp
   11f48:	bl	1a80c <omp_in_final@@OMP_3.1+0x1c2c>
   11f4c:	ldp	x29, x30, [sp], #16
   11f50:	ret

0000000000011f54 <GOMP_sections_end_cancel@@GOMP_4.0>:
   11f54:	stp	x29, x30, [sp, #-16]!
   11f58:	mov	x29, sp
   11f5c:	bl	1a91c <omp_in_final@@OMP_3.1+0x1d3c>
   11f60:	ldp	x29, x30, [sp], #16
   11f64:	ret

0000000000011f68 <GOMP_sections_end_nowait@@GOMP_1.0>:
   11f68:	stp	x29, x30, [sp, #-16]!
   11f6c:	mov	x29, sp
   11f70:	bl	1aa00 <omp_in_final@@OMP_3.1+0x1e20>
   11f74:	ldp	x29, x30, [sp], #16
   11f78:	ret

0000000000011f7c <GOMP_single_start@@GOMP_1.0>:
   11f7c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11f80:	ldr	x0, [x0, #4016]
   11f84:	mrs	x1, tpidr_el0
   11f88:	add	x0, x1, x0
   11f8c:	ldr	x0, [x0, #16]
   11f90:	cbz	x0, 11fd4 <GOMP_single_start@@GOMP_1.0+0x58>
   11f94:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11f98:	ldr	x1, [x1, #4016]
   11f9c:	mrs	x2, tpidr_el0
   11fa0:	add	x1, x2, x1
   11fa4:	ldr	x2, [x1, #64]
   11fa8:	add	x3, x2, #0x1
   11fac:	str	x3, [x1, #64]
   11fb0:	add	x0, x0, #0x70
   11fb4:	ldxr	x1, [x0]
   11fb8:	cmp	x1, x2
   11fbc:	b.ne	11fc8 <GOMP_single_start@@GOMP_1.0+0x4c>  // b.any
   11fc0:	stlxr	w4, x3, [x0]
   11fc4:	cbnz	w4, 11fb4 <GOMP_single_start@@GOMP_1.0+0x38>
   11fc8:	dmb	ish
   11fcc:	cset	w0, eq  // eq = none
   11fd0:	ret
   11fd4:	mov	w0, #0x1                   	// #1
   11fd8:	b	11fd0 <GOMP_single_start@@GOMP_1.0+0x54>

0000000000011fdc <GOMP_single_copy_start@@GOMP_1.0>:
   11fdc:	stp	x29, x30, [sp, #-32]!
   11fe0:	mov	x29, sp
   11fe4:	str	x19, [sp, #16]
   11fe8:	mov	x0, #0x0                   	// #0
   11fec:	bl	1a64c <omp_in_final@@OMP_3.1+0x1a6c>
   11ff0:	and	w0, w0, #0xff
   11ff4:	cbz	w0, 12058 <GOMP_single_copy_start@@GOMP_1.0+0x7c>
   11ff8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   11ffc:	ldr	x0, [x0, #4016]
   12000:	mrs	x1, tpidr_el0
   12004:	add	x0, x1, x0
   12008:	ldr	x19, [x0, #32]
   1200c:	cbz	x19, 12040 <GOMP_single_copy_start@@GOMP_1.0+0x64>
   12010:	add	x0, x19, #0x50
   12014:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   12018:	ldr	x1, [x1, #4016]
   1201c:	mrs	x2, tpidr_el0
   12020:	add	x1, x2, x1
   12024:	ldr	x2, [x1, #24]
   12028:	ldxr	x1, [x0]
   1202c:	stlxr	w3, x2, [x0]
   12030:	cbnz	w3, 12028 <GOMP_single_copy_start@@GOMP_1.0+0x4c>
   12034:	mov	x19, #0x0                   	// #0
   12038:	cmp	x1, #0x1
   1203c:	b.ne	12050 <GOMP_single_copy_start@@GOMP_1.0+0x74>  // b.any
   12040:	mov	x0, x19
   12044:	ldr	x19, [sp, #16]
   12048:	ldp	x29, x30, [sp], #32
   1204c:	ret
   12050:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
   12054:	b	12040 <GOMP_single_copy_start@@GOMP_1.0+0x64>
   12058:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1205c:	ldr	x19, [x19, #4016]
   12060:	mrs	x0, tpidr_el0
   12064:	add	x19, x0, x19
   12068:	ldr	x0, [x19, #16]
   1206c:	add	x0, x0, #0x80
   12070:	bl	1bbc4 <omp_get_num_procs@@OMP_1.0+0x750>
   12074:	ldr	x0, [x19, #24]
   12078:	ldr	x19, [x0, #72]
   1207c:	bl	1aa00 <omp_in_final@@OMP_3.1+0x1e20>
   12080:	b	12040 <GOMP_single_copy_start@@GOMP_1.0+0x64>

0000000000012084 <GOMP_single_copy_end@@GOMP_1.0>:
   12084:	stp	x29, x30, [sp, #-16]!
   12088:	mov	x29, sp
   1208c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   12090:	ldr	x1, [x1, #4016]
   12094:	mrs	x2, tpidr_el0
   12098:	add	x1, x2, x1
   1209c:	ldr	x1, [x1, #16]
   120a0:	cbz	x1, 120c4 <GOMP_single_copy_end@@GOMP_1.0+0x40>
   120a4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   120a8:	ldr	x2, [x2, #4016]
   120ac:	mrs	x3, tpidr_el0
   120b0:	add	x2, x3, x2
   120b4:	ldr	x2, [x2, #24]
   120b8:	str	x0, [x2, #72]
   120bc:	add	x0, x1, #0x80
   120c0:	bl	1bbc4 <omp_get_num_procs@@OMP_1.0+0x750>
   120c4:	bl	1aa00 <omp_in_final@@OMP_3.1+0x1e20>
   120c8:	ldp	x29, x30, [sp], #16
   120cc:	ret
   120d0:	mov	x5, x0
   120d4:	ldr	x6, [x1]
   120d8:	eor	x3, x6, x6, lsr #32
   120dc:	ldr	w8, [x0, #24]
   120e0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   120e4:	add	x0, x0, #0x38
   120e8:	ubfiz	x2, x8, #4, #32
   120ec:	add	x1, x0, x2
   120f0:	ldr	w7, [x0, x2]
   120f4:	ldr	w10, [x1, #12]
   120f8:	and	x2, x3, #0xffffffff
   120fc:	ldr	w1, [x1, #4]
   12100:	mul	x1, x1, x2
   12104:	lsr	x0, x1, #32
   12108:	sub	w1, w3, w0
   1210c:	add	w1, w0, w1, lsr #1
   12110:	lsr	w1, w1, w10
   12114:	msub	w1, w1, w7, w3
   12118:	add	x0, x5, w1, uxtw #3
   1211c:	ldr	x0, [x0, #32]
   12120:	cbz	x0, 121a0 <GOMP_single_copy_end@@GOMP_1.0+0x11c>
   12124:	cmp	x0, #0x1
   12128:	b.eq	12138 <GOMP_single_copy_end@@GOMP_1.0+0xb4>  // b.none
   1212c:	ldr	x4, [x0]
   12130:	cmp	x6, x4
   12134:	b.eq	121a0 <GOMP_single_copy_end@@GOMP_1.0+0x11c>  // b.none
   12138:	ldr	x4, [x5]
   1213c:	ubfiz	x8, x8, #4, #32
   12140:	adrp	x9, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   12144:	add	x9, x9, #0x38
   12148:	add	x8, x9, x8
   1214c:	ldr	w0, [x8, #8]
   12150:	mul	x0, x0, x2
   12154:	lsr	x0, x0, #32
   12158:	add	w8, w3, #0x1
   1215c:	sub	w2, w3, w0
   12160:	add	w2, w0, w2, lsr #1
   12164:	lsr	w2, w2, w10
   12168:	sub	w7, w7, #0x2
   1216c:	msub	w2, w2, w7, w8
   12170:	add	w1, w1, w2
   12174:	sub	w3, w1, w4
   12178:	cmp	x4, w1, uxtw
   1217c:	csel	w1, w3, w1, ls  // ls = plast
   12180:	add	x3, x5, w1, uxtw #3
   12184:	ldr	x0, [x3, #32]
   12188:	cbz	x0, 121a0 <GOMP_single_copy_end@@GOMP_1.0+0x11c>
   1218c:	cmp	x0, #0x1
   12190:	b.eq	12170 <GOMP_single_copy_end@@GOMP_1.0+0xec>  // b.none
   12194:	ldr	x3, [x0]
   12198:	cmp	x6, x3
   1219c:	b.ne	12170 <GOMP_single_copy_end@@GOMP_1.0+0xec>  // b.any
   121a0:	ret
   121a4:	cbz	x1, 12210 <GOMP_single_copy_end@@GOMP_1.0+0x18c>
   121a8:	stp	x29, x30, [sp, #-48]!
   121ac:	mov	x29, sp
   121b0:	stp	x19, x20, [sp, #16]
   121b4:	str	x21, [sp, #32]
   121b8:	mov	x19, x0
   121bc:	mov	x0, x1
   121c0:	ldr	x21, [x1, #24]
   121c4:	ldr	x20, [x1, #32]
   121c8:	ldr	x2, [x1, #8]
   121cc:	cbz	x2, 121e4 <GOMP_single_copy_end@@GOMP_1.0+0x160>
   121d0:	stur	xzr, [x2, #-112]
   121d4:	ldr	x2, [x2]
   121d8:	ldr	x1, [x0, #8]
   121dc:	cmp	x2, x1
   121e0:	b.ne	121d0 <GOMP_single_copy_end@@GOMP_1.0+0x14c>  // b.any
   121e4:	bl	8900 <free@plt>
   121e8:	mov	x1, x21
   121ec:	mov	x0, x19
   121f0:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   121f4:	mov	x1, x20
   121f8:	mov	x0, x19
   121fc:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   12200:	ldp	x19, x20, [sp, #16]
   12204:	ldr	x21, [sp, #32]
   12208:	ldp	x29, x30, [sp], #48
   1220c:	ret
   12210:	ret
   12214:	stp	x29, x30, [sp, #-48]!
   12218:	mov	x29, sp
   1221c:	stp	x19, x20, [sp, #16]
   12220:	stp	x21, x22, [sp, #32]
   12224:	mov	w3, #0x1e                  	// #30
   12228:	mov	w20, #0x0                   	// #0
   1222c:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   12230:	add	x2, x2, #0x38
   12234:	cmp	w3, w20
   12238:	b.eq	12264 <GOMP_single_copy_end@@GOMP_1.0+0x1e0>  // b.none
   1223c:	sub	w1, w3, w20
   12240:	add	w1, w20, w1, lsr #1
   12244:	ubfiz	x4, x1, #4, #32
   12248:	ldr	w4, [x2, x4]
   1224c:	cmp	x0, x4
   12250:	b.hi	1225c <GOMP_single_copy_end@@GOMP_1.0+0x1d8>  // b.pmore
   12254:	mov	w3, w1
   12258:	b	12234 <GOMP_single_copy_end@@GOMP_1.0+0x1b0>
   1225c:	add	w20, w1, #0x1
   12260:	b	12234 <GOMP_single_copy_end@@GOMP_1.0+0x1b0>
   12264:	ubfiz	x1, x20, #4, #32
   12268:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1226c:	add	x2, x2, #0x38
   12270:	ldr	w22, [x2, x1]
   12274:	cmp	x0, x22
   12278:	b.hi	122c4 <GOMP_single_copy_end@@GOMP_1.0+0x240>  // b.pmore
   1227c:	add	x21, x22, #0x4
   12280:	lsl	x21, x21, #3
   12284:	mov	x0, x21
   12288:	bl	8c28 <fprintf@plt+0x118>
   1228c:	mov	x19, x0
   12290:	str	x22, [x0]
   12294:	str	xzr, [x0, #8]
   12298:	str	xzr, [x0, #16]
   1229c:	str	w20, [x0, #24]
   122a0:	sub	x2, x21, #0x20
   122a4:	mov	w1, #0x0                   	// #0
   122a8:	add	x0, x0, #0x20
   122ac:	bl	87c0 <memset@plt>
   122b0:	mov	x0, x19
   122b4:	ldp	x19, x20, [sp, #16]
   122b8:	ldp	x21, x22, [sp, #32]
   122bc:	ldp	x29, x30, [sp], #48
   122c0:	ret
   122c4:	bl	8870 <abort@plt>
   122c8:	mov	x5, x0
   122cc:	ldr	w7, [x0, #24]
   122d0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   122d4:	add	x0, x0, #0x38
   122d8:	ubfiz	x3, x7, #4, #32
   122dc:	add	x2, x0, x3
   122e0:	ldr	w6, [x0, x3]
   122e4:	ldr	w8, [x2, #12]
   122e8:	mov	w9, w1
   122ec:	ldr	w2, [x2, #4]
   122f0:	mul	x2, x2, x9
   122f4:	lsr	x4, x2, #32
   122f8:	sub	w2, w1, w4
   122fc:	add	w2, w4, w2, lsr #1
   12300:	lsr	w2, w2, w8
   12304:	msub	w2, w2, w6, w1
   12308:	add	x4, x5, #0x20
   1230c:	add	x0, x4, w2, uxtw #3
   12310:	ldr	x3, [x4, w2, uxtw #3]
   12314:	cbz	x3, 12394 <GOMP_single_copy_end@@GOMP_1.0+0x310>
   12318:	stp	x29, x30, [sp, #-16]!
   1231c:	mov	x29, sp
   12320:	cmp	x3, #0x1
   12324:	b.eq	12388 <GOMP_single_copy_end@@GOMP_1.0+0x304>  // b.none
   12328:	ldr	x5, [x5]
   1232c:	ubfiz	x7, x7, #4, #32
   12330:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   12334:	add	x0, x0, #0x38
   12338:	add	x0, x0, x7
   1233c:	ldr	w3, [x0, #8]
   12340:	mul	x3, x3, x9
   12344:	lsr	x3, x3, #32
   12348:	add	w0, w1, #0x1
   1234c:	sub	w1, w1, w3
   12350:	add	w3, w3, w1, lsr #1
   12354:	lsr	w3, w3, w8
   12358:	sub	w6, w6, #0x2
   1235c:	msub	w3, w3, w6, w0
   12360:	add	w2, w2, w3
   12364:	sub	w0, w2, w5
   12368:	cmp	x5, w2, uxtw
   1236c:	csel	w2, w0, w2, ls  // ls = plast
   12370:	add	x0, x4, w2, uxtw #3
   12374:	ldr	x1, [x4, w2, uxtw #3]
   12378:	cbz	x1, 1238c <GOMP_single_copy_end@@GOMP_1.0+0x308>
   1237c:	cmp	x1, #0x1
   12380:	b.ne	12360 <GOMP_single_copy_end@@GOMP_1.0+0x2dc>  // b.any
   12384:	bl	8870 <abort@plt>
   12388:	bl	8870 <abort@plt>
   1238c:	ldp	x29, x30, [sp], #16
   12390:	ret
   12394:	ret
   12398:	stp	x29, x30, [sp, #-96]!
   1239c:	mov	x29, sp
   123a0:	stp	x19, x20, [sp, #16]
   123a4:	stp	x21, x22, [sp, #32]
   123a8:	mov	x20, x1
   123ac:	mov	w21, w2
   123b0:	ldr	x5, [x1]
   123b4:	eor	x22, x5, x5, lsr #32
   123b8:	ldr	x19, [x0]
   123bc:	ldr	x6, [x19]
   123c0:	cmp	w2, #0x1
   123c4:	b.eq	12464 <GOMP_single_copy_end@@GOMP_1.0+0x3e0>  // b.none
   123c8:	ldr	w2, [x19, #24]
   123cc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   123d0:	add	x0, x0, #0x38
   123d4:	ubfiz	x1, x2, #4, #32
   123d8:	add	x3, x0, x1
   123dc:	ldr	w4, [x0, x1]
   123e0:	ldr	w8, [x3, #12]
   123e4:	and	x5, x22, #0xffffffff
   123e8:	ldr	w1, [x3, #4]
   123ec:	mul	x1, x1, x5
   123f0:	lsr	x1, x1, #32
   123f4:	sub	w3, w22, w1
   123f8:	add	w3, w1, w3, lsr #1
   123fc:	lsr	w3, w3, w8
   12400:	msub	w3, w3, w4, w22
   12404:	add	x0, x19, w3, uxtw #3
   12408:	ldr	x0, [x0, #32]
   1240c:	cbz	x0, 125e8 <GOMP_single_copy_end@@GOMP_1.0+0x564>
   12410:	cmp	x0, #0x1
   12414:	b.eq	12540 <GOMP_single_copy_end@@GOMP_1.0+0x4bc>  // b.none
   12418:	ldr	x7, [x0]
   1241c:	ldr	x1, [x20]
   12420:	mov	x0, #0x0                   	// #0
   12424:	cmp	x7, x1
   12428:	b.eq	12550 <GOMP_single_copy_end@@GOMP_1.0+0x4cc>  // b.none
   1242c:	ubfiz	x7, x2, #4, #32
   12430:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   12434:	add	x2, x2, #0x38
   12438:	add	x2, x2, x7
   1243c:	ldr	w1, [x2, #8]
   12440:	mul	x1, x1, x5
   12444:	lsr	x1, x1, #32
   12448:	add	w2, w22, #0x1
   1244c:	sub	w5, w22, w1
   12450:	add	w5, w1, w5, lsr #1
   12454:	lsr	w5, w5, w8
   12458:	sub	w4, w4, #0x2
   1245c:	msub	w5, w5, w4, w2
   12460:	b	12574 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>
   12464:	stp	x23, x24, [sp, #48]
   12468:	mov	x24, x0
   1246c:	ldr	x0, [x19, #8]
   12470:	add	x1, x6, x6, lsl #1
   12474:	cmp	x1, x0, lsl #2
   12478:	b.ls	12484 <GOMP_single_copy_end@@GOMP_1.0+0x400>  // b.plast
   1247c:	ldp	x23, x24, [sp, #48]
   12480:	b	123c8 <GOMP_single_copy_end@@GOMP_1.0+0x344>
   12484:	stp	x25, x26, [sp, #64]
   12488:	str	x27, [sp, #80]
   1248c:	add	x23, x19, #0x20
   12490:	add	x26, x23, x6, lsl #3
   12494:	ldr	x1, [x19, #16]
   12498:	sub	x1, x0, x1
   1249c:	lsl	x0, x1, #1
   124a0:	cmp	x6, x1, lsl #1
   124a4:	b.cc	124d0 <GOMP_single_copy_end@@GOMP_1.0+0x44c>  // b.lo, b.ul, b.last
   124a8:	lsl	x1, x1, #3
   124ac:	cmp	x1, #0x20
   124b0:	mov	x2, #0x20                  	// #32
   124b4:	csel	x1, x1, x2, cs  // cs = hs, nlast
   124b8:	cmp	x6, x1
   124bc:	b.hi	124d0 <GOMP_single_copy_end@@GOMP_1.0+0x44c>  // b.pmore
   124c0:	sub	x0, x6, #0x1
   124c4:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   124c8:	mov	x27, x0
   124cc:	b	124d8 <GOMP_single_copy_end@@GOMP_1.0+0x454>
   124d0:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   124d4:	mov	x27, x0
   124d8:	ldr	x0, [x19, #8]
   124dc:	ldr	x1, [x19, #16]
   124e0:	sub	x0, x0, x1
   124e4:	str	x0, [x27, #8]
   124e8:	b	1250c <GOMP_single_copy_end@@GOMP_1.0+0x488>
   124ec:	ldr	x1, [x25]
   124f0:	eor	x1, x1, x1, lsr #32
   124f4:	mov	x0, x27
   124f8:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0x244>
   124fc:	str	x25, [x0]
   12500:	add	x23, x23, #0x8
   12504:	cmp	x26, x23
   12508:	b.ls	1251c <GOMP_single_copy_end@@GOMP_1.0+0x498>  // b.plast
   1250c:	ldr	x25, [x23]
   12510:	cmp	x25, #0x1
   12514:	b.ls	12500 <GOMP_single_copy_end@@GOMP_1.0+0x47c>  // b.plast
   12518:	b	124ec <GOMP_single_copy_end@@GOMP_1.0+0x468>
   1251c:	mov	x0, x19
   12520:	bl	8900 <free@plt>
   12524:	str	x27, [x24]
   12528:	ldr	x6, [x27]
   1252c:	mov	x19, x27
   12530:	ldp	x23, x24, [sp, #48]
   12534:	ldp	x25, x26, [sp, #64]
   12538:	ldr	x27, [sp, #80]
   1253c:	b	123c8 <GOMP_single_copy_end@@GOMP_1.0+0x344>
   12540:	ubfiz	x0, x3, #3, #32
   12544:	add	x0, x0, #0x20
   12548:	add	x0, x19, x0
   1254c:	b	1242c <GOMP_single_copy_end@@GOMP_1.0+0x3a8>
   12550:	ubfiz	x0, x3, #3, #32
   12554:	add	x0, x0, #0x20
   12558:	add	x0, x19, x0
   1255c:	b	125b4 <GOMP_single_copy_end@@GOMP_1.0+0x530>
   12560:	ubfiz	x1, x3, #3, #32
   12564:	add	x1, x1, #0x20
   12568:	add	x1, x19, x1
   1256c:	cmp	x0, #0x0
   12570:	csel	x0, x1, x0, eq  // eq = none
   12574:	add	w3, w3, w5
   12578:	sub	w1, w3, w6
   1257c:	cmp	x6, w3, uxtw
   12580:	csel	w3, w1, w3, ls  // ls = plast
   12584:	add	x1, x19, w3, uxtw #3
   12588:	ldr	x4, [x1, #32]
   1258c:	cbz	x4, 125c4 <GOMP_single_copy_end@@GOMP_1.0+0x540>
   12590:	cmp	x4, #0x1
   12594:	b.eq	12560 <GOMP_single_copy_end@@GOMP_1.0+0x4dc>  // b.none
   12598:	ldr	x2, [x4]
   1259c:	ldr	x1, [x20]
   125a0:	cmp	x2, x1
   125a4:	b.ne	12574 <GOMP_single_copy_end@@GOMP_1.0+0x4f0>  // b.any
   125a8:	ubfiz	x0, x3, #3, #32
   125ac:	add	x0, x0, #0x20
   125b0:	add	x0, x19, x0
   125b4:	ldp	x19, x20, [sp, #16]
   125b8:	ldp	x21, x22, [sp, #32]
   125bc:	ldp	x29, x30, [sp], #96
   125c0:	ret
   125c4:	cbz	w21, 125e0 <GOMP_single_copy_end@@GOMP_1.0+0x55c>
   125c8:	cbz	x0, 125ec <GOMP_single_copy_end@@GOMP_1.0+0x568>
   125cc:	ldr	x1, [x19, #16]
   125d0:	sub	x1, x1, #0x1
   125d4:	str	x1, [x19, #16]
   125d8:	str	xzr, [x0]
   125dc:	b	125b4 <GOMP_single_copy_end@@GOMP_1.0+0x530>
   125e0:	mov	x0, x4
   125e4:	b	125b4 <GOMP_single_copy_end@@GOMP_1.0+0x530>
   125e8:	cbz	w21, 125b4 <GOMP_single_copy_end@@GOMP_1.0+0x530>
   125ec:	ldr	x0, [x19, #8]
   125f0:	add	x0, x0, #0x1
   125f4:	str	x0, [x19, #8]
   125f8:	ubfiz	x0, x3, #3, #32
   125fc:	add	x0, x0, #0x20
   12600:	add	x0, x19, x0
   12604:	b	125b4 <GOMP_single_copy_end@@GOMP_1.0+0x530>
   12608:	stp	x29, x30, [sp, #-96]!
   1260c:	mov	x29, sp
   12610:	stp	x19, x20, [sp, #16]
   12614:	stp	x25, x26, [sp, #64]
   12618:	stp	x27, x28, [sp, #80]
   1261c:	mov	x20, x0
   12620:	mov	x27, x1
   12624:	ldr	x3, [x2]
   12628:	cbz	x3, 12690 <GOMP_single_copy_end@@GOMP_1.0+0x60c>
   1262c:	ldr	x4, [x2, #8]
   12630:	add	x0, x0, #0xd0
   12634:	mov	x25, #0x0                   	// #0
   12638:	add	x2, x2, #0x10
   1263c:	ldr	x1, [x2, x25, lsl #3]
   12640:	str	x1, [x0]
   12644:	cmp	x4, x25
   12648:	cset	w1, ls  // ls = plast
   1264c:	strb	w1, [x0, #32]
   12650:	add	x25, x25, #0x1
   12654:	add	x0, x0, #0x28
   12658:	cmp	x3, x25
   1265c:	b.ne	1263c <GOMP_single_copy_end@@GOMP_1.0+0x5b8>  // b.any
   12660:	str	x25, [x20, #72]
   12664:	str	xzr, [x20, #80]
   12668:	ldr	x0, [x27, #56]
   1266c:	cbz	x0, 1276c <GOMP_single_copy_end@@GOMP_1.0+0x6e8>
   12670:	cbz	x25, 128ec <GOMP_single_copy_end@@GOMP_1.0+0x868>
   12674:	stp	x21, x22, [sp, #32]
   12678:	stp	x23, x24, [sp, #48]
   1267c:	add	x22, x20, #0xd0
   12680:	add	x25, x25, x25, lsl #2
   12684:	add	x25, x22, x25, lsl #3
   12688:	add	x27, x27, #0x38
   1268c:	b	12910 <GOMP_single_copy_end@@GOMP_1.0+0x88c>
   12690:	ldr	x25, [x2, #8]
   12694:	ldr	x8, [x2, #16]
   12698:	ldr	x0, [x2, #24]
   1269c:	add	x8, x8, x0
   126a0:	ldr	x6, [x2, #32]
   126a4:	add	x6, x6, x8
   126a8:	cmp	x25, x6
   126ac:	b.ls	1271c <GOMP_single_copy_end@@GOMP_1.0+0x698>  // b.plast
   126b0:	mov	x4, x6
   126b4:	mov	x3, #0x0                   	// #0
   126b8:	add	x7, x2, #0x28
   126bc:	b	126f4 <GOMP_single_copy_end@@GOMP_1.0+0x670>
   126c0:	sub	x5, x1, #0x2
   126c4:	cmp	x5, #0x2
   126c8:	b.hi	12708 <GOMP_single_copy_end@@GOMP_1.0+0x684>  // b.pmore
   126cc:	ldr	x5, [x0]
   126d0:	lsl	x0, x3, #2
   126d4:	add	x1, x0, x3
   126d8:	add	x1, x20, x1, lsl #3
   126dc:	str	x5, [x1, #208]
   126e0:	strb	wzr, [x1, #240]
   126e4:	add	x3, x3, #0x1
   126e8:	add	x4, x4, #0x1
   126ec:	cmp	x25, x4
   126f0:	b.eq	12968 <GOMP_single_copy_end@@GOMP_1.0+0x8e4>  // b.none
   126f4:	ldr	x0, [x7, x4, lsl #3]
   126f8:	ldr	x1, [x0, #8]
   126fc:	cmp	x1, #0x1
   12700:	b.ne	126c0 <GOMP_single_copy_end@@GOMP_1.0+0x63c>  // b.any
   12704:	b	126e8 <GOMP_single_copy_end@@GOMP_1.0+0x664>
   12708:	stp	x21, x22, [sp, #32]
   1270c:	stp	x23, x24, [sp, #48]
   12710:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
   12714:	add	x0, x0, #0xfc0
   12718:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1271c:	cbz	x6, 12728 <GOMP_single_copy_end@@GOMP_1.0+0x6a4>
   12720:	mov	x3, #0x0                   	// #0
   12724:	b	1296c <GOMP_single_copy_end@@GOMP_1.0+0x8e8>
   12728:	mov	x3, x6
   1272c:	b	129ac <GOMP_single_copy_end@@GOMP_1.0+0x928>
   12730:	add	x6, x6, #0x1
   12734:	cmp	x25, x6
   12738:	b.ls	12660 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>  // b.plast
   1273c:	ldr	x0, [x2, x6, lsl #3]
   12740:	ldr	x1, [x0, #8]
   12744:	cmp	x1, #0x1
   12748:	b.ne	12730 <GOMP_single_copy_end@@GOMP_1.0+0x6ac>  // b.any
   1274c:	ldr	x4, [x0]
   12750:	lsl	x0, x3, #2
   12754:	add	x1, x0, x3
   12758:	add	x1, x20, x1, lsl #3
   1275c:	str	x4, [x1, #208]
   12760:	strb	w5, [x1, #240]
   12764:	add	x3, x3, #0x1
   12768:	b	12730 <GOMP_single_copy_end@@GOMP_1.0+0x6ac>
   1276c:	lsl	x0, x25, #1
   12770:	cmp	x0, #0xc
   12774:	mov	x1, #0xc                   	// #12
   12778:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1277c:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   12780:	str	x0, [x27, #56]
   12784:	b	12670 <GOMP_single_copy_end@@GOMP_1.0+0x5ec>
   12788:	ldrb	w0, [x19, #32]
   1278c:	cmp	w0, #0x0
   12790:	csel	x23, x23, x19, ne  // ne = any
   12794:	ldr	x21, [x19, #24]
   12798:	ldr	x0, [x21, #48]
   1279c:	cbz	x0, 12818 <GOMP_single_copy_end@@GOMP_1.0+0x794>
   127a0:	ldr	x1, [x0]
   127a4:	cbz	x1, 127b8 <GOMP_single_copy_end@@GOMP_1.0+0x734>
   127a8:	add	x2, x1, #0x1
   127ac:	ldr	x2, [x0, x2, lsl #3]
   127b0:	cmp	x2, x20
   127b4:	b.eq	127e8 <GOMP_single_copy_end@@GOMP_1.0+0x764>  // b.none
   127b8:	ldr	x2, [x0, #8]
   127bc:	cmp	x1, x2
   127c0:	b.eq	12850 <GOMP_single_copy_end@@GOMP_1.0+0x7cc>  // b.none
   127c4:	ldr	x1, [x21, #48]
   127c8:	ldr	x0, [x1]
   127cc:	add	x2, x0, #0x1
   127d0:	str	x2, [x1]
   127d4:	add	x0, x0, #0x2
   127d8:	str	x20, [x1, x0, lsl #3]
   127dc:	ldr	x0, [x20, #80]
   127e0:	add	x0, x0, #0x1
   127e4:	str	x0, [x20, #80]
   127e8:	ldr	x0, [x19, #8]
   127ec:	mov	x1, x19
   127f0:	cbz	x0, 12878 <GOMP_single_copy_end@@GOMP_1.0+0x7f4>
   127f4:	mov	x19, x0
   127f8:	ldrb	w0, [x19, #34]
   127fc:	cbnz	w0, 12878 <GOMP_single_copy_end@@GOMP_1.0+0x7f4>
   12800:	ldrb	w0, [x24, #32]
   12804:	cbz	w0, 12788 <GOMP_single_copy_end@@GOMP_1.0+0x704>
   12808:	ldrb	w0, [x19, #32]
   1280c:	cbnz	w0, 127e8 <GOMP_single_copy_end@@GOMP_1.0+0x764>
   12810:	mov	x23, x19
   12814:	b	12794 <GOMP_single_copy_end@@GOMP_1.0+0x710>
   12818:	mov	x0, x28
   1281c:	bl	8c28 <fprintf@plt+0x118>
   12820:	str	x0, [x21, #48]
   12824:	mov	x1, #0x1                   	// #1
   12828:	str	x1, [x0]
   1282c:	ldr	x0, [x21, #48]
   12830:	mov	x1, #0x6                   	// #6
   12834:	str	x1, [x0, #8]
   12838:	ldr	x0, [x21, #48]
   1283c:	str	x20, [x0, #16]
   12840:	ldr	x0, [x20, #80]
   12844:	add	x0, x0, #0x1
   12848:	str	x0, [x20, #80]
   1284c:	b	127e8 <GOMP_single_copy_end@@GOMP_1.0+0x764>
   12850:	add	x2, x2, #0x1
   12854:	lsl	x2, x2, #1
   12858:	str	x2, [x0, #8]
   1285c:	ldr	x0, [x21, #48]
   12860:	ldr	x1, [x0, #8]
   12864:	add	x1, x1, #0x2
   12868:	lsl	x1, x1, #3
   1286c:	bl	8c98 <fprintf@plt+0x188>
   12870:	str	x0, [x21, #48]
   12874:	b	127c4 <GOMP_single_copy_end@@GOMP_1.0+0x740>
   12878:	ldr	x0, [x26]
   1287c:	str	x0, [x24, #8]
   12880:	str	x24, [x0, #16]
   12884:	str	x24, [x26]
   12888:	ldrb	w0, [x24, #32]
   1288c:	eor	w0, w0, #0x1
   12890:	cmp	x23, #0x0
   12894:	cset	w2, ne  // ne = any
   12898:	tst	w2, w0
   1289c:	b.eq	12904 <GOMP_single_copy_end@@GOMP_1.0+0x880>  // b.none
   128a0:	cmp	x23, x1
   128a4:	b.eq	128d8 <GOMP_single_copy_end@@GOMP_1.0+0x854>  // b.none
   128a8:	ldr	x2, [x23, #8]
   128ac:	ldr	x0, [x23, #16]
   128b0:	str	x0, [x2, #16]
   128b4:	ldr	x2, [x23, #8]
   128b8:	str	x2, [x0, #8]
   128bc:	ldr	x0, [x1, #8]
   128c0:	str	x0, [x23, #8]
   128c4:	str	x1, [x23, #16]
   128c8:	str	x23, [x1, #8]
   128cc:	ldr	x0, [x23, #8]
   128d0:	cbz	x0, 128d8 <GOMP_single_copy_end@@GOMP_1.0+0x854>
   128d4:	str	x23, [x0, #16]
   128d8:	mov	w0, #0x1                   	// #1
   128dc:	strb	w0, [x23, #34]
   128e0:	b	12904 <GOMP_single_copy_end@@GOMP_1.0+0x880>
   128e4:	ldp	x21, x22, [sp, #32]
   128e8:	ldp	x23, x24, [sp, #48]
   128ec:	ldp	x19, x20, [sp, #16]
   128f0:	ldp	x25, x26, [sp, #64]
   128f4:	ldp	x27, x28, [sp, #80]
   128f8:	ldp	x29, x30, [sp], #96
   128fc:	ret
   12900:	str	x22, [x0]
   12904:	add	x22, x22, #0x28
   12908:	cmp	x25, x22
   1290c:	b.eq	128e4 <GOMP_single_copy_end@@GOMP_1.0+0x860>  // b.none
   12910:	mov	x24, x22
   12914:	str	xzr, [x22, #8]
   12918:	str	xzr, [x22, #16]
   1291c:	str	x20, [x22, #24]
   12920:	strb	wzr, [x22, #33]
   12924:	strb	wzr, [x22, #34]
   12928:	mov	w2, #0x1                   	// #1
   1292c:	mov	x1, x22
   12930:	mov	x0, x27
   12934:	bl	12398 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   12938:	mov	x26, x0
   1293c:	ldr	x19, [x0]
   12940:	cbz	x19, 12900 <GOMP_single_copy_end@@GOMP_1.0+0x87c>
   12944:	ldr	x0, [x19, #24]
   12948:	mov	x1, #0x0                   	// #0
   1294c:	mov	x23, #0x0                   	// #0
   12950:	mov	x28, #0x40                  	// #64
   12954:	cmp	x0, x20
   12958:	b.ne	127f8 <GOMP_single_copy_end@@GOMP_1.0+0x774>  // b.any
   1295c:	mov	w0, #0x1                   	// #1
   12960:	strb	w0, [x22, #33]
   12964:	b	12904 <GOMP_single_copy_end@@GOMP_1.0+0x880>
   12968:	cbz	x6, 129b4 <GOMP_single_copy_end@@GOMP_1.0+0x930>
   1296c:	add	x1, x3, x3, lsl #2
   12970:	add	x1, x20, x1, lsl #3
   12974:	mov	x0, #0x0                   	// #0
   12978:	add	x5, x2, #0x28
   1297c:	ldr	x4, [x5, x0, lsl #3]
   12980:	str	x4, [x1, #208]
   12984:	cmp	x8, x0
   12988:	cset	w4, ls  // ls = plast
   1298c:	strb	w4, [x1, #240]
   12990:	add	x0, x0, #0x1
   12994:	add	x1, x1, #0x28
   12998:	cmp	x6, x0
   1299c:	b.hi	1297c <GOMP_single_copy_end@@GOMP_1.0+0x8f8>  // b.pmore
   129a0:	cmp	x6, #0x0
   129a4:	csinc	x0, x6, xzr, ne  // ne = any
   129a8:	add	x3, x3, x0
   129ac:	cmp	x25, x6
   129b0:	b.ls	12660 <GOMP_single_copy_end@@GOMP_1.0+0x5dc>  // b.plast
   129b4:	add	x2, x2, #0x28
   129b8:	mov	w5, #0x1                   	// #1
   129bc:	b	1273c <GOMP_single_copy_end@@GOMP_1.0+0x6b8>
   129c0:	stp	x29, x30, [sp, #-80]!
   129c4:	mov	x29, sp
   129c8:	stp	x21, x22, [sp, #32]
   129cc:	stp	x23, x24, [sp, #48]
   129d0:	mov	x22, x0
   129d4:	ldr	x23, [x0]
   129d8:	ldr	x0, [x0, #72]
   129dc:	cbz	x0, 12ab8 <GOMP_single_copy_end@@GOMP_1.0+0xa34>
   129e0:	stp	x19, x20, [sp, #16]
   129e4:	stp	x25, x26, [sp, #64]
   129e8:	add	x19, x22, #0xd8
   129ec:	mov	x20, #0x0                   	// #0
   129f0:	add	x24, x23, #0x38
   129f4:	mov	x25, #0x1                   	// #1
   129f8:	b	12a20 <GOMP_single_copy_end@@GOMP_1.0+0x99c>
   129fc:	ldr	x0, [x21, #8]
   12a00:	cbz	x0, 12a40 <GOMP_single_copy_end@@GOMP_1.0+0x9bc>
   12a04:	ldr	x1, [x21]
   12a08:	str	x1, [x0, #8]
   12a0c:	add	x20, x20, #0x1
   12a10:	add	x19, x19, #0x28
   12a14:	ldr	x1, [x22, #72]
   12a18:	cmp	x1, x20
   12a1c:	b.ls	12ab0 <GOMP_single_copy_end@@GOMP_1.0+0xa2c>  // b.plast
   12a20:	mov	x21, x19
   12a24:	ldrb	w1, [x19, #25]
   12a28:	cbnz	w1, 12a0c <GOMP_single_copy_end@@GOMP_1.0+0x988>
   12a2c:	ldr	x0, [x19]
   12a30:	cbz	x0, 129fc <GOMP_single_copy_end@@GOMP_1.0+0x978>
   12a34:	ldr	x1, [x19, #8]
   12a38:	str	x1, [x0, #16]
   12a3c:	b	129fc <GOMP_single_copy_end@@GOMP_1.0+0x978>
   12a40:	sub	x26, x19, #0x8
   12a44:	mov	w2, #0x0                   	// #0
   12a48:	mov	x1, x26
   12a4c:	mov	x0, x24
   12a50:	bl	12398 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   12a54:	ldr	x1, [x0]
   12a58:	cmp	x1, x26
   12a5c:	b.ne	12a70 <GOMP_single_copy_end@@GOMP_1.0+0x9ec>  // b.any
   12a60:	ldr	x1, [x21]
   12a64:	cbz	x1, 12a74 <GOMP_single_copy_end@@GOMP_1.0+0x9f0>
   12a68:	str	x1, [x0]
   12a6c:	b	12a0c <GOMP_single_copy_end@@GOMP_1.0+0x988>
   12a70:	bl	8870 <abort@plt>
   12a74:	ldr	x1, [x23, #56]
   12a78:	add	x3, x1, #0x20
   12a7c:	cmp	x0, x3
   12a80:	b.cc	12aac <GOMP_single_copy_end@@GOMP_1.0+0xa28>  // b.lo, b.ul, b.last
   12a84:	ldr	x2, [x1]
   12a88:	add	x2, x3, x2, lsl #3
   12a8c:	cmp	x0, x2
   12a90:	ccmp	x19, #0x9, #0x4, cc  // cc = lo, ul, last
   12a94:	b.eq	12aac <GOMP_single_copy_end@@GOMP_1.0+0xa28>  // b.none
   12a98:	str	x25, [x0]
   12a9c:	ldr	x0, [x1, #16]
   12aa0:	add	x0, x0, #0x1
   12aa4:	str	x0, [x1, #16]
   12aa8:	b	12a0c <GOMP_single_copy_end@@GOMP_1.0+0x988>
   12aac:	bl	8870 <abort@plt>
   12ab0:	ldp	x19, x20, [sp, #16]
   12ab4:	ldp	x25, x26, [sp, #64]
   12ab8:	ldp	x21, x22, [sp, #32]
   12abc:	ldp	x23, x24, [sp, #48]
   12ac0:	ldp	x29, x30, [sp], #80
   12ac4:	ret
   12ac8:	ldxr	w1, [x0]
   12acc:	stlxr	w2, wzr, [x0]
   12ad0:	cbnz	w2, 12ac8 <GOMP_single_copy_end@@GOMP_1.0+0xa44>
   12ad4:	tbnz	w1, #31, 12adc <GOMP_single_copy_end@@GOMP_1.0+0xa58>
   12ad8:	ret
   12adc:	stp	x29, x30, [sp, #-16]!
   12ae0:	mov	x29, sp
   12ae4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   12ae8:	ldp	x29, x30, [sp], #16
   12aec:	ret
   12af0:	stp	x29, x30, [sp, #-80]!
   12af4:	mov	x29, sp
   12af8:	stp	x19, x20, [sp, #16]
   12afc:	str	x21, [sp, #32]
   12b00:	mov	x19, x0
   12b04:	mov	x20, x2
   12b08:	cbz	x1, 12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12b0c:	mov	x0, x1
   12b10:	ldr	x1, [x1, #8]
   12b14:	cbnz	x1, 12bfc <GOMP_single_copy_end@@GOMP_1.0+0xb78>
   12b18:	add	x2, x19, #0x70
   12b1c:	ldr	x1, [x0, #24]
   12b20:	cmp	x2, x1
   12b24:	b.eq	12cc0 <GOMP_single_copy_end@@GOMP_1.0+0xc3c>  // b.none
   12b28:	ldr	x3, [x19, #112]
   12b2c:	cmp	x1, x3
   12b30:	b.eq	12b40 <GOMP_single_copy_end@@GOMP_1.0+0xabc>  // b.none
   12b34:	ldr	w1, [x3, #88]
   12b38:	cmp	w1, #0x2
   12b3c:	b.eq	12ccc <GOMP_single_copy_end@@GOMP_1.0+0xc48>  // b.none
   12b40:	ldrb	w1, [x19, #207]
   12b44:	cbnz	w1, 12d04 <GOMP_single_copy_end@@GOMP_1.0+0xc80>
   12b48:	ldr	x21, [x19, #40]
   12b4c:	cbz	x21, 12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12b50:	ldr	x0, [x21, #8]
   12b54:	cbnz	x0, 12d40 <GOMP_single_copy_end@@GOMP_1.0+0xcbc>
   12b58:	add	x1, x19, #0x80
   12b5c:	ldr	x0, [x21, #24]
   12b60:	cmp	x1, x0
   12b64:	b.eq	12e04 <GOMP_single_copy_end@@GOMP_1.0+0xd80>  // b.none
   12b68:	ldr	x2, [x19, #128]
   12b6c:	cmp	x0, x2
   12b70:	b.eq	12b80 <GOMP_single_copy_end@@GOMP_1.0+0xafc>  // b.none
   12b74:	ldr	w0, [x2, #72]
   12b78:	cmp	w0, #0x2
   12b7c:	b.eq	12e10 <GOMP_single_copy_end@@GOMP_1.0+0xd8c>  // b.none
   12b80:	ldrb	w0, [x19, #207]
   12b84:	cbnz	w0, 12e48 <GOMP_single_copy_end@@GOMP_1.0+0xdc4>
   12b88:	ldr	x0, [x20, #1288]
   12b8c:	cbnz	x0, 12e84 <GOMP_single_copy_end@@GOMP_1.0+0xe00>
   12b90:	add	x1, x19, #0x60
   12b94:	ldr	x2, [x19, #104]
   12b98:	ldr	x0, [x19, #96]
   12b9c:	str	x0, [x2]
   12ba0:	ldr	x2, [x19, #104]
   12ba4:	str	x2, [x0, #8]
   12ba8:	ldr	x0, [x20, #1304]
   12bac:	cmp	x1, x0
   12bb0:	b.eq	12e98 <GOMP_single_copy_end@@GOMP_1.0+0xe14>  // b.none
   12bb4:	str	xzr, [x19, #96]
   12bb8:	str	xzr, [x19, #104]
   12bbc:	mov	w0, #0x3                   	// #3
   12bc0:	str	w0, [x19, #200]
   12bc4:	ldr	w0, [x20, #1324]
   12bc8:	sub	w0, w0, #0x1
   12bcc:	str	w0, [x20, #1324]
   12bd0:	cbnz	w0, 12be0 <GOMP_single_copy_end@@GOMP_1.0+0xb5c>
   12bd4:	ldr	w0, [x20, #132]
   12bd8:	and	w0, w0, #0xfffffffe
   12bdc:	str	w0, [x20, #132]
   12be0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   12be4:	ldrb	w0, [x0, #1364]
   12be8:	cbnz	w0, 12eac <GOMP_single_copy_end@@GOMP_1.0+0xe28>
   12bec:	ldp	x19, x20, [sp, #16]
   12bf0:	ldr	x21, [sp, #32]
   12bf4:	ldp	x29, x30, [sp], #80
   12bf8:	ret
   12bfc:	ldr	w1, [x19, #88]
   12c00:	str	w1, [sp, #56]
   12c04:	add	x1, sp, #0x38
   12c08:	add	x0, x0, #0x8
   12c0c:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   12c10:	add	x2, x19, #0x70
   12c14:	ldr	x1, [x0, #8]
   12c18:	cmp	x2, x1
   12c1c:	b.eq	12c6c <GOMP_single_copy_end@@GOMP_1.0+0xbe8>  // b.none
   12c20:	ldr	x3, [x19, #112]
   12c24:	cmp	x1, x3
   12c28:	b.eq	12c38 <GOMP_single_copy_end@@GOMP_1.0+0xbb4>  // b.none
   12c2c:	ldr	w1, [x3, #88]
   12c30:	cmp	w1, #0x2
   12c34:	b.eq	12c78 <GOMP_single_copy_end@@GOMP_1.0+0xbf4>  // b.none
   12c38:	ldrb	w1, [x19, #207]
   12c3c:	cbz	w1, 12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12c40:	ldr	x1, [x0, #16]
   12c44:	cmp	x2, x1
   12c48:	b.ne	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>  // b.any
   12c4c:	ldr	x1, [x19, #120]
   12c50:	cmp	x2, x1
   12c54:	b.eq	12c64 <GOMP_single_copy_end@@GOMP_1.0+0xbe0>  // b.none
   12c58:	ldr	w2, [x1, #88]
   12c5c:	cmp	w2, #0x2
   12c60:	b.eq	12cb0 <GOMP_single_copy_end@@GOMP_1.0+0xc2c>  // b.none
   12c64:	str	xzr, [x0, #16]
   12c68:	b	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12c6c:	ldr	x1, [x19, #112]
   12c70:	str	x1, [x0, #8]
   12c74:	b	12c38 <GOMP_single_copy_end@@GOMP_1.0+0xbb4>
   12c78:	ldr	x1, [x19, #120]
   12c7c:	str	x3, [x1]
   12c80:	ldr	x1, [x19, #120]
   12c84:	str	x1, [x3, #8]
   12c88:	ldr	x1, [x0, #8]
   12c8c:	str	x1, [x19, #112]
   12c90:	ldr	x1, [x1, #8]
   12c94:	str	x1, [x19, #120]
   12c98:	ldr	x1, [x0, #8]
   12c9c:	ldr	x1, [x1, #8]
   12ca0:	str	x2, [x1]
   12ca4:	ldr	x1, [x0, #8]
   12ca8:	str	x2, [x1, #8]
   12cac:	b	12c38 <GOMP_single_copy_end@@GOMP_1.0+0xbb4>
   12cb0:	ldrb	w2, [x1, #95]
   12cb4:	cbz	w2, 12c64 <GOMP_single_copy_end@@GOMP_1.0+0xbe0>
   12cb8:	str	x1, [x0, #16]
   12cbc:	b	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12cc0:	ldr	x1, [x19, #112]
   12cc4:	str	x1, [x0, #24]
   12cc8:	b	12b40 <GOMP_single_copy_end@@GOMP_1.0+0xabc>
   12ccc:	ldr	x1, [x19, #120]
   12cd0:	str	x3, [x1]
   12cd4:	ldr	x1, [x19, #120]
   12cd8:	str	x1, [x3, #8]
   12cdc:	ldr	x3, [x0, #24]
   12ce0:	str	x3, [x19, #112]
   12ce4:	ldr	x3, [x3, #8]
   12ce8:	str	x3, [x19, #120]
   12cec:	ldr	x3, [x0, #24]
   12cf0:	ldr	x3, [x3, #8]
   12cf4:	str	x2, [x3]
   12cf8:	ldr	x1, [x0, #24]
   12cfc:	str	x2, [x1, #8]
   12d00:	b	12b40 <GOMP_single_copy_end@@GOMP_1.0+0xabc>
   12d04:	ldr	x1, [x0, #32]
   12d08:	cmp	x2, x1
   12d0c:	b.ne	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>  // b.any
   12d10:	ldr	x1, [x19, #120]
   12d14:	cmp	x2, x1
   12d18:	b.eq	12d28 <GOMP_single_copy_end@@GOMP_1.0+0xca4>  // b.none
   12d1c:	ldr	w2, [x1, #88]
   12d20:	cmp	w2, #0x2
   12d24:	b.eq	12d30 <GOMP_single_copy_end@@GOMP_1.0+0xcac>  // b.none
   12d28:	str	xzr, [x0, #32]
   12d2c:	b	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12d30:	ldrb	w2, [x1, #95]
   12d34:	cbz	w2, 12d28 <GOMP_single_copy_end@@GOMP_1.0+0xca4>
   12d38:	str	x1, [x0, #32]
   12d3c:	b	12b48 <GOMP_single_copy_end@@GOMP_1.0+0xac4>
   12d40:	ldr	w0, [x19, #88]
   12d44:	str	w0, [sp, #56]
   12d48:	add	x1, sp, #0x38
   12d4c:	add	x0, x21, #0x8
   12d50:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   12d54:	add	x2, x19, #0x80
   12d58:	ldr	x1, [x0, #8]
   12d5c:	cmp	x2, x1
   12d60:	b.eq	12db0 <GOMP_single_copy_end@@GOMP_1.0+0xd2c>  // b.none
   12d64:	ldr	x3, [x19, #128]
   12d68:	cmp	x1, x3
   12d6c:	b.eq	12d7c <GOMP_single_copy_end@@GOMP_1.0+0xcf8>  // b.none
   12d70:	ldr	w1, [x3, #72]
   12d74:	cmp	w1, #0x2
   12d78:	b.eq	12dbc <GOMP_single_copy_end@@GOMP_1.0+0xd38>  // b.none
   12d7c:	ldrb	w1, [x19, #207]
   12d80:	cbz	w1, 12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12d84:	ldr	x1, [x0, #16]
   12d88:	cmp	x2, x1
   12d8c:	b.ne	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>  // b.any
   12d90:	ldr	x1, [x19, #136]
   12d94:	cmp	x2, x1
   12d98:	b.eq	12da8 <GOMP_single_copy_end@@GOMP_1.0+0xd24>  // b.none
   12d9c:	ldr	w2, [x1, #72]
   12da0:	cmp	w2, #0x2
   12da4:	b.eq	12df4 <GOMP_single_copy_end@@GOMP_1.0+0xd70>  // b.none
   12da8:	str	xzr, [x0, #16]
   12dac:	b	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12db0:	ldr	x1, [x19, #128]
   12db4:	str	x1, [x0, #8]
   12db8:	b	12d7c <GOMP_single_copy_end@@GOMP_1.0+0xcf8>
   12dbc:	ldr	x1, [x19, #136]
   12dc0:	str	x3, [x1]
   12dc4:	ldr	x1, [x19, #136]
   12dc8:	str	x1, [x3, #8]
   12dcc:	ldr	x1, [x0, #8]
   12dd0:	str	x1, [x19, #128]
   12dd4:	ldr	x1, [x1, #8]
   12dd8:	str	x1, [x19, #136]
   12ddc:	ldr	x1, [x0, #8]
   12de0:	ldr	x1, [x1, #8]
   12de4:	str	x2, [x1]
   12de8:	ldr	x1, [x0, #8]
   12dec:	str	x2, [x1, #8]
   12df0:	b	12d7c <GOMP_single_copy_end@@GOMP_1.0+0xcf8>
   12df4:	ldrb	w2, [x1, #79]
   12df8:	cbz	w2, 12da8 <GOMP_single_copy_end@@GOMP_1.0+0xd24>
   12dfc:	str	x1, [x0, #16]
   12e00:	b	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12e04:	ldr	x0, [x19, #128]
   12e08:	str	x0, [x21, #24]
   12e0c:	b	12b80 <GOMP_single_copy_end@@GOMP_1.0+0xafc>
   12e10:	ldr	x0, [x19, #136]
   12e14:	str	x2, [x0]
   12e18:	ldr	x0, [x19, #136]
   12e1c:	str	x0, [x2, #8]
   12e20:	ldr	x2, [x21, #24]
   12e24:	str	x2, [x19, #128]
   12e28:	ldr	x2, [x2, #8]
   12e2c:	str	x2, [x19, #136]
   12e30:	ldr	x2, [x21, #24]
   12e34:	ldr	x2, [x2, #8]
   12e38:	str	x1, [x2]
   12e3c:	ldr	x0, [x21, #24]
   12e40:	str	x1, [x0, #8]
   12e44:	b	12b80 <GOMP_single_copy_end@@GOMP_1.0+0xafc>
   12e48:	ldr	x0, [x21, #32]
   12e4c:	cmp	x1, x0
   12e50:	b.ne	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>  // b.any
   12e54:	ldr	x0, [x19, #136]
   12e58:	cmp	x1, x0
   12e5c:	b.eq	12e6c <GOMP_single_copy_end@@GOMP_1.0+0xde8>  // b.none
   12e60:	ldr	w1, [x0, #72]
   12e64:	cmp	w1, #0x2
   12e68:	b.eq	12e74 <GOMP_single_copy_end@@GOMP_1.0+0xdf0>  // b.none
   12e6c:	str	xzr, [x21, #32]
   12e70:	b	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12e74:	ldrb	w1, [x0, #79]
   12e78:	cbz	w1, 12e6c <GOMP_single_copy_end@@GOMP_1.0+0xde8>
   12e7c:	str	x0, [x21, #32]
   12e80:	b	12b88 <GOMP_single_copy_end@@GOMP_1.0+0xb04>
   12e84:	add	x2, x19, #0x60
   12e88:	add	x1, x20, #0x508
   12e8c:	mov	w0, #0x0                   	// #0
   12e90:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   12e94:	b	12bb4 <GOMP_single_copy_end@@GOMP_1.0+0xb30>
   12e98:	ldr	x0, [x19, #96]
   12e9c:	cmp	x1, x0
   12ea0:	csel	x0, x0, xzr, ne  // ne = any
   12ea4:	str	x0, [x20, #1304]
   12ea8:	b	12bb4 <GOMP_single_copy_end@@GOMP_1.0+0xb30>
   12eac:	ldrb	w1, [x19, #206]
   12eb0:	cbnz	w1, 12ee4 <GOMP_single_copy_end@@GOMP_1.0+0xe60>
   12eb4:	ldr	w2, [x20, #132]
   12eb8:	tbnz	w2, #2, 12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12ebc:	mov	w0, w1
   12ec0:	cbz	x21, 12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12ec4:	ldrb	w0, [x21, #49]
   12ec8:	cbnz	w0, 12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12ecc:	ldrb	w1, [x21, #50]
   12ed0:	cbz	w1, 12eec <GOMP_single_copy_end@@GOMP_1.0+0xe68>
   12ed4:	ldr	x1, [x21]
   12ed8:	cbz	x1, 12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12edc:	ldrb	w0, [x1, #49]
   12ee0:	b	12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12ee4:	mov	w0, #0x0                   	// #0
   12ee8:	b	12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12eec:	mov	w0, w1
   12ef0:	b	12bec <GOMP_single_copy_end@@GOMP_1.0+0xb68>
   12ef4:	stp	x29, x30, [sp, #-160]!
   12ef8:	mov	x29, sp
   12efc:	stp	x23, x24, [sp, #48]
   12f00:	stp	x25, x26, [sp, #64]
   12f04:	mov	x24, x0
   12f08:	ldr	x23, [x0]
   12f0c:	ldr	x0, [x0, #48]
   12f10:	ldr	x26, [x0]
   12f14:	cbz	x26, 13488 <GOMP_single_copy_end@@GOMP_1.0+0x1404>
   12f18:	stp	x19, x20, [sp, #16]
   12f1c:	stp	x21, x22, [sp, #32]
   12f20:	stp	x27, x28, [sp, #80]
   12f24:	mov	x20, x1
   12f28:	mov	x25, #0x0                   	// #0
   12f2c:	mov	x21, #0x0                   	// #0
   12f30:	add	x0, sp, #0x88
   12f34:	str	x0, [sp, #104]
   12f38:	b	13148 <GOMP_single_copy_end@@GOMP_1.0+0x10c4>
   12f3c:	add	x1, x23, #0x8
   12f40:	str	x1, [sp, #112]
   12f44:	cbz	x0, 12fb0 <GOMP_single_copy_end@@GOMP_1.0+0xf2c>
   12f48:	str	w28, [sp, #136]
   12f4c:	ldr	x1, [sp, #104]
   12f50:	ldr	x0, [sp, #112]
   12f54:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   12f58:	cbz	x0, 13000 <GOMP_single_copy_end@@GOMP_1.0+0xf7c>
   12f5c:	add	x1, x19, #0x70
   12f60:	ldr	x2, [x0, #8]
   12f64:	cbz	x2, 13044 <GOMP_single_copy_end@@GOMP_1.0+0xfc0>
   12f68:	ldr	x3, [x0, #16]
   12f6c:	cmp	x3, #0x0
   12f70:	ccmp	w27, #0x0, #0x0, ne  // ne = any
   12f74:	b.eq	13034 <GOMP_single_copy_end@@GOMP_1.0+0xfb0>  // b.none
   12f78:	str	x2, [x19, #112]
   12f7c:	ldr	x2, [x2, #8]
   12f80:	str	x2, [x19, #120]
   12f84:	str	x1, [x0, #8]
   12f88:	ldr	x2, [x19, #112]
   12f8c:	str	x1, [x2, #8]
   12f90:	ldr	x2, [x19, #120]
   12f94:	str	x1, [x2]
   12f98:	ldr	x2, [x0, #16]
   12f9c:	cmp	x2, #0x0
   12fa0:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   12fa4:	b.eq	13084 <GOMP_single_copy_end@@GOMP_1.0+0x1000>  // b.none
   12fa8:	str	x1, [x0, #16]
   12fac:	b	13084 <GOMP_single_copy_end@@GOMP_1.0+0x1000>
   12fb0:	ldr	x0, [x23, #24]
   12fb4:	cbz	x0, 13000 <GOMP_single_copy_end@@GOMP_1.0+0xf7c>
   12fb8:	mov	x0, #0x28                  	// #40
   12fbc:	bl	8c28 <fprintf@plt+0x118>
   12fc0:	mov	x1, x0
   12fc4:	str	xzr, [x0, #24]
   12fc8:	str	xzr, [x0, #32]
   12fcc:	str	wzr, [x0]
   12fd0:	add	x2, x23, #0x8
   12fd4:	ldr	x0, [x23, #24]
   12fd8:	str	x0, [x1, #8]
   12fdc:	str	x2, [sp, #120]
   12fe0:	ldr	x0, [x23, #32]
   12fe4:	str	x0, [x1, #16]
   12fe8:	ldr	x0, [sp, #112]
   12fec:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   12ff0:	ldr	x2, [sp, #120]
   12ff4:	str	xzr, [x2, #16]
   12ff8:	ldr	x0, [x23, #8]
   12ffc:	cbnz	x0, 12f48 <GOMP_single_copy_end@@GOMP_1.0+0xec4>
   13000:	mov	x0, #0x28                  	// #40
   13004:	bl	8c28 <fprintf@plt+0x118>
   13008:	str	xzr, [x0, #24]
   1300c:	str	xzr, [x0, #32]
   13010:	str	w28, [x0]
   13014:	str	xzr, [x0, #8]
   13018:	mov	x28, x0
   1301c:	str	xzr, [x0, #16]
   13020:	mov	x1, x0
   13024:	ldr	x0, [sp, #112]
   13028:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   1302c:	mov	x0, x28
   13030:	b	12f5c <GOMP_single_copy_end@@GOMP_1.0+0xed8>
   13034:	ldr	x2, [x3]
   13038:	str	x2, [x19, #112]
   1303c:	str	x3, [x19, #120]
   13040:	b	12f88 <GOMP_single_copy_end@@GOMP_1.0+0xf04>
   13044:	str	x1, [x19, #112]
   13048:	str	x1, [x19, #120]
   1304c:	str	x1, [x0, #8]
   13050:	b	12f98 <GOMP_single_copy_end@@GOMP_1.0+0xf14>
   13054:	str	x1, [x19, #112]
   13058:	ldr	x1, [x1, #8]
   1305c:	str	x1, [x19, #120]
   13060:	str	x0, [x23, #24]
   13064:	ldr	x1, [x19, #112]
   13068:	str	x0, [x1, #8]
   1306c:	ldr	x1, [x19, #120]
   13070:	str	x0, [x1]
   13074:	ldr	x1, [x23, #32]
   13078:	cmp	x1, #0x0
   1307c:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   13080:	b.ne	131c0 <GOMP_single_copy_end@@GOMP_1.0+0x113c>  // b.any
   13084:	ldr	x0, [x23, #64]
   13088:	cbz	x0, 1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   1308c:	ldrb	w1, [x0]
   13090:	cbnz	w1, 131c8 <GOMP_single_copy_end@@GOMP_1.0+0x1144>
   13094:	ldrb	w1, [x0, #1]
   13098:	cbnz	w1, 13208 <GOMP_single_copy_end@@GOMP_1.0+0x1184>
   1309c:	cbz	x22, 130e8 <GOMP_single_copy_end@@GOMP_1.0+0x1064>
   130a0:	ldr	w27, [x19, #88]
   130a4:	ldr	x0, [x22, #8]
   130a8:	cmp	w27, #0x0
   130ac:	ccmp	x0, #0x0, #0x0, le
   130b0:	b.ne	13248 <GOMP_single_copy_end@@GOMP_1.0+0x11c4>  // b.any
   130b4:	add	x0, x19, #0x80
   130b8:	ldr	x1, [x22, #24]
   130bc:	cbz	x1, 13320 <GOMP_single_copy_end@@GOMP_1.0+0x129c>
   130c0:	str	x1, [x19, #128]
   130c4:	ldr	x1, [x1, #8]
   130c8:	str	x1, [x19, #136]
   130cc:	str	x0, [x22, #24]
   130d0:	ldr	x1, [x19, #128]
   130d4:	str	x0, [x1, #8]
   130d8:	ldr	x1, [x19, #136]
   130dc:	str	x0, [x1]
   130e0:	ldrb	w0, [x22, #48]
   130e4:	cbnz	w0, 13330 <GOMP_single_copy_end@@GOMP_1.0+0x12ac>
   130e8:	ldr	w22, [x19, #88]
   130ec:	ldr	x0, [x20, #1288]
   130f0:	cmp	w22, #0x0
   130f4:	ccmp	x0, #0x0, #0x0, le
   130f8:	b.ne	1336c <GOMP_single_copy_end@@GOMP_1.0+0x12e8>  // b.any
   130fc:	add	x1, x19, #0x60
   13100:	ldr	x0, [x20, #1304]
   13104:	cbz	x0, 13438 <GOMP_single_copy_end@@GOMP_1.0+0x13b4>
   13108:	str	x0, [x19, #96]
   1310c:	ldr	x2, [x0, #8]
   13110:	str	x2, [x19, #104]
   13114:	str	x1, [x0, #8]
   13118:	ldr	x0, [x19, #104]
   1311c:	str	x1, [x0]
   13120:	ldr	w0, [x20, #1320]
   13124:	add	w0, w0, #0x1
   13128:	str	w0, [x20, #1320]
   1312c:	ldr	w0, [x20, #1324]
   13130:	add	w0, w0, #0x1
   13134:	str	w0, [x20, #1324]
   13138:	add	x25, x25, #0x1
   1313c:	add	x21, x21, #0x1
   13140:	cmp	x26, x21
   13144:	b.eq	13448 <GOMP_single_copy_end@@GOMP_1.0+0x13c4>  // b.none
   13148:	ldr	x0, [x24, #48]
   1314c:	add	x1, x21, #0x2
   13150:	ldr	x19, [x0, x1, lsl #3]
   13154:	ldr	x0, [x19, #80]
   13158:	sub	x0, x0, #0x1
   1315c:	str	x0, [x19, #80]
   13160:	cbnz	x0, 1313c <GOMP_single_copy_end@@GOMP_1.0+0x10b8>
   13164:	ldr	x22, [x19, #40]
   13168:	cbz	x23, 1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   1316c:	ldr	w28, [x19, #88]
   13170:	ldrb	w27, [x19, #207]
   13174:	ldr	x0, [x23, #8]
   13178:	cmp	w28, #0x0
   1317c:	ccmp	x0, #0x0, #0x0, le
   13180:	b.ne	12f3c <GOMP_single_copy_end@@GOMP_1.0+0xeb8>  // b.any
   13184:	add	x0, x19, #0x70
   13188:	ldr	x1, [x23, #24]
   1318c:	cbz	x1, 131b0 <GOMP_single_copy_end@@GOMP_1.0+0x112c>
   13190:	ldr	x2, [x23, #32]
   13194:	cmp	x2, #0x0
   13198:	ccmp	w27, #0x0, #0x0, ne  // ne = any
   1319c:	b.ne	13054 <GOMP_single_copy_end@@GOMP_1.0+0xfd0>  // b.any
   131a0:	ldr	x1, [x2]
   131a4:	str	x1, [x19, #112]
   131a8:	str	x2, [x19, #120]
   131ac:	b	13064 <GOMP_single_copy_end@@GOMP_1.0+0xfe0>
   131b0:	str	x0, [x19, #112]
   131b4:	str	x0, [x19, #120]
   131b8:	str	x0, [x23, #24]
   131bc:	b	13074 <GOMP_single_copy_end@@GOMP_1.0+0xff0>
   131c0:	str	x0, [x23, #32]
   131c4:	b	13084 <GOMP_single_copy_end@@GOMP_1.0+0x1000>
   131c8:	strb	wzr, [x0]
   131cc:	ldr	x1, [x23, #64]
   131d0:	add	x0, x1, #0x10
   131d4:	ldr	w1, [x1, #16]
   131d8:	add	w2, w1, #0x1
   131dc:	and	w2, w2, #0x7fffffff
   131e0:	ldxr	w3, [x0]
   131e4:	cmp	w3, w1
   131e8:	b.ne	131f4 <GOMP_single_copy_end@@GOMP_1.0+0x1170>  // b.any
   131ec:	stlxr	w4, w2, [x0]
   131f0:	cmp	w4, #0x0
   131f4:	mov	w1, w3
   131f8:	b.ne	131d8 <GOMP_single_copy_end@@GOMP_1.0+0x1154>  // b.any
   131fc:	tbz	w3, #31, 1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   13200:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   13204:	b	1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   13208:	strb	wzr, [x0, #1]
   1320c:	ldr	x1, [x23, #64]
   13210:	add	x0, x1, #0x10
   13214:	ldr	w1, [x1, #16]
   13218:	add	w2, w1, #0x1
   1321c:	and	w2, w2, #0x7fffffff
   13220:	ldxr	w3, [x0]
   13224:	cmp	w3, w1
   13228:	b.ne	13234 <GOMP_single_copy_end@@GOMP_1.0+0x11b0>  // b.any
   1322c:	stlxr	w4, w2, [x0]
   13230:	cmp	w4, #0x0
   13234:	mov	w1, w3
   13238:	b.ne	13218 <GOMP_single_copy_end@@GOMP_1.0+0x1194>  // b.any
   1323c:	tbz	w3, #31, 1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   13240:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   13244:	b	1309c <GOMP_single_copy_end@@GOMP_1.0+0x1018>
   13248:	add	x1, x22, #0x8
   1324c:	str	x1, [sp, #112]
   13250:	cbz	x0, 13298 <GOMP_single_copy_end@@GOMP_1.0+0x1214>
   13254:	str	w27, [sp, #136]
   13258:	ldr	x1, [sp, #104]
   1325c:	ldr	x0, [sp, #112]
   13260:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   13264:	cbz	x0, 132dc <GOMP_single_copy_end@@GOMP_1.0+0x1258>
   13268:	add	x1, x19, #0x80
   1326c:	ldr	x2, [x0, #8]
   13270:	cbz	x2, 13310 <GOMP_single_copy_end@@GOMP_1.0+0x128c>
   13274:	str	x2, [x19, #128]
   13278:	ldr	x2, [x2, #8]
   1327c:	str	x2, [x19, #136]
   13280:	str	x1, [x0, #8]
   13284:	ldr	x0, [x19, #128]
   13288:	str	x1, [x0, #8]
   1328c:	ldr	x0, [x19, #136]
   13290:	str	x1, [x0]
   13294:	b	130e0 <GOMP_single_copy_end@@GOMP_1.0+0x105c>
   13298:	ldr	x0, [x22, #24]
   1329c:	cbz	x0, 132dc <GOMP_single_copy_end@@GOMP_1.0+0x1258>
   132a0:	mov	x0, #0x28                  	// #40
   132a4:	bl	8c28 <fprintf@plt+0x118>
   132a8:	mov	x1, x0
   132ac:	str	xzr, [x0, #24]
   132b0:	str	xzr, [x0, #32]
   132b4:	str	wzr, [x0]
   132b8:	ldr	x0, [x22, #24]
   132bc:	str	x0, [x1, #8]
   132c0:	ldr	x0, [x22, #32]
   132c4:	str	x0, [x1, #16]
   132c8:	ldr	x0, [sp, #112]
   132cc:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   132d0:	str	xzr, [x22, #24]
   132d4:	ldr	x0, [x22, #8]
   132d8:	cbnz	x0, 13254 <GOMP_single_copy_end@@GOMP_1.0+0x11d0>
   132dc:	mov	x0, #0x28                  	// #40
   132e0:	bl	8c28 <fprintf@plt+0x118>
   132e4:	mov	x28, x0
   132e8:	str	xzr, [x0, #24]
   132ec:	str	xzr, [x0, #32]
   132f0:	str	w27, [x0]
   132f4:	str	xzr, [x0, #8]
   132f8:	str	xzr, [x0, #16]
   132fc:	mov	x1, x0
   13300:	ldr	x0, [sp, #112]
   13304:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   13308:	mov	x0, x28
   1330c:	b	13268 <GOMP_single_copy_end@@GOMP_1.0+0x11e4>
   13310:	str	x1, [x19, #128]
   13314:	str	x1, [x19, #136]
   13318:	str	x1, [x0, #8]
   1331c:	b	130e0 <GOMP_single_copy_end@@GOMP_1.0+0x105c>
   13320:	str	x0, [x19, #128]
   13324:	str	x0, [x19, #136]
   13328:	str	x0, [x22, #24]
   1332c:	b	130e0 <GOMP_single_copy_end@@GOMP_1.0+0x105c>
   13330:	strb	wzr, [x22, #48]
   13334:	add	x0, x22, #0x34
   13338:	ldr	w1, [x22, #52]
   1333c:	add	w2, w1, #0x1
   13340:	and	w2, w2, #0x7fffffff
   13344:	ldxr	w3, [x0]
   13348:	cmp	w3, w1
   1334c:	b.ne	13358 <GOMP_single_copy_end@@GOMP_1.0+0x12d4>  // b.any
   13350:	stlxr	w4, w2, [x0]
   13354:	cmp	w4, #0x0
   13358:	mov	w1, w3
   1335c:	b.ne	1333c <GOMP_single_copy_end@@GOMP_1.0+0x12b8>  // b.any
   13360:	tbz	w3, #31, 130e8 <GOMP_single_copy_end@@GOMP_1.0+0x1064>
   13364:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   13368:	b	130e8 <GOMP_single_copy_end@@GOMP_1.0+0x1064>
   1336c:	add	x28, x20, #0x508
   13370:	cbz	x0, 133b0 <GOMP_single_copy_end@@GOMP_1.0+0x132c>
   13374:	str	w22, [sp, #136]
   13378:	ldr	x1, [sp, #104]
   1337c:	mov	x0, x28
   13380:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   13384:	cbz	x0, 133f4 <GOMP_single_copy_end@@GOMP_1.0+0x1370>
   13388:	add	x2, x19, #0x60
   1338c:	ldr	x1, [x0, #8]
   13390:	cbz	x1, 13428 <GOMP_single_copy_end@@GOMP_1.0+0x13a4>
   13394:	str	x1, [x19, #96]
   13398:	ldr	x0, [x1, #8]
   1339c:	str	x0, [x19, #104]
   133a0:	str	x2, [x1, #8]
   133a4:	ldr	x0, [x19, #104]
   133a8:	str	x2, [x0]
   133ac:	b	13120 <GOMP_single_copy_end@@GOMP_1.0+0x109c>
   133b0:	ldr	x0, [x20, #1304]
   133b4:	cbz	x0, 133f4 <GOMP_single_copy_end@@GOMP_1.0+0x1370>
   133b8:	mov	x0, #0x28                  	// #40
   133bc:	bl	8c28 <fprintf@plt+0x118>
   133c0:	mov	x1, x0
   133c4:	str	xzr, [x0, #24]
   133c8:	str	xzr, [x0, #32]
   133cc:	str	wzr, [x0]
   133d0:	ldr	x0, [x28, #16]
   133d4:	str	x0, [x1, #8]
   133d8:	ldr	x0, [x28, #24]
   133dc:	str	x0, [x1, #16]
   133e0:	mov	x0, x28
   133e4:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   133e8:	str	xzr, [x28, #16]
   133ec:	ldr	x0, [x20, #1288]
   133f0:	cbnz	x0, 13374 <GOMP_single_copy_end@@GOMP_1.0+0x12f0>
   133f4:	mov	x0, #0x28                  	// #40
   133f8:	bl	8c28 <fprintf@plt+0x118>
   133fc:	mov	x27, x0
   13400:	str	xzr, [x0, #24]
   13404:	str	xzr, [x0, #32]
   13408:	str	w22, [x0]
   1340c:	str	xzr, [x0, #8]
   13410:	str	xzr, [x0, #16]
   13414:	mov	x1, x0
   13418:	mov	x0, x28
   1341c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   13420:	mov	x0, x27
   13424:	b	13388 <GOMP_single_copy_end@@GOMP_1.0+0x1304>
   13428:	str	x2, [x19, #96]
   1342c:	str	x2, [x19, #104]
   13430:	str	x2, [x0, #8]
   13434:	b	13120 <GOMP_single_copy_end@@GOMP_1.0+0x109c>
   13438:	str	x1, [x19, #96]
   1343c:	str	x1, [x19, #104]
   13440:	str	x1, [x20, #1304]
   13444:	b	13120 <GOMP_single_copy_end@@GOMP_1.0+0x109c>
   13448:	ldr	x0, [x24, #48]
   1344c:	bl	8900 <free@plt>
   13450:	str	xzr, [x24, #48]
   13454:	cmp	x25, #0x1
   13458:	b.ls	13498 <GOMP_single_copy_end@@GOMP_1.0+0x1414>  // b.plast
   1345c:	ldr	w0, [x20, #132]
   13460:	orr	w0, w0, #0x1
   13464:	str	w0, [x20, #132]
   13468:	ldp	x19, x20, [sp, #16]
   1346c:	ldp	x21, x22, [sp, #32]
   13470:	ldp	x27, x28, [sp, #80]
   13474:	mov	x0, x25
   13478:	ldp	x23, x24, [sp, #48]
   1347c:	ldp	x25, x26, [sp, #64]
   13480:	ldp	x29, x30, [sp], #160
   13484:	ret
   13488:	bl	8900 <free@plt>
   1348c:	str	xzr, [x24, #48]
   13490:	mov	x25, x26
   13494:	b	13474 <GOMP_single_copy_end@@GOMP_1.0+0x13f0>
   13498:	ldp	x19, x20, [sp, #16]
   1349c:	ldp	x21, x22, [sp, #32]
   134a0:	ldp	x27, x28, [sp, #80]
   134a4:	b	13474 <GOMP_single_copy_end@@GOMP_1.0+0x13f0>
   134a8:	stp	x29, x30, [sp, #-112]!
   134ac:	mov	x29, sp
   134b0:	stp	x19, x20, [sp, #16]
   134b4:	stp	x21, x22, [sp, #32]
   134b8:	stp	x23, x24, [sp, #48]
   134bc:	mov	x20, x0
   134c0:	mov	x19, x1
   134c4:	ldr	x22, [x1]
   134c8:	cbz	x22, 1354c <GOMP_single_copy_end@@GOMP_1.0+0x14c8>
   134cc:	mov	x0, x22
   134d0:	ldr	x1, [x0, #8]!
   134d4:	add	x0, x0, #0x8
   134d8:	cbnz	x1, 1365c <GOMP_single_copy_end@@GOMP_1.0+0x15d8>
   134dc:	add	x1, x19, #0x70
   134e0:	ldr	x3, [x19, #120]
   134e4:	ldr	x2, [x19, #112]
   134e8:	str	x2, [x3]
   134ec:	ldr	x3, [x19, #120]
   134f0:	str	x3, [x2, #8]
   134f4:	ldr	x2, [x0, #8]
   134f8:	cmp	x1, x2
   134fc:	b.eq	13674 <GOMP_single_copy_end@@GOMP_1.0+0x15f0>  // b.none
   13500:	ldrb	w3, [x19, #207]
   13504:	ldr	x2, [x0, #8]
   13508:	cbz	x2, 13690 <GOMP_single_copy_end@@GOMP_1.0+0x160c>
   1350c:	ldr	x4, [x0, #16]
   13510:	cmp	x4, #0x0
   13514:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   13518:	b.eq	136a0 <GOMP_single_copy_end@@GOMP_1.0+0x161c>  // b.none
   1351c:	str	x2, [x19, #112]
   13520:	ldr	x2, [x2, #8]
   13524:	str	x2, [x19, #120]
   13528:	str	x1, [x0, #8]
   1352c:	ldr	x2, [x19, #112]
   13530:	str	x1, [x2, #8]
   13534:	ldr	x2, [x19, #120]
   13538:	str	x1, [x2]
   1353c:	ldr	x2, [x0, #16]
   13540:	cmp	x2, #0x0
   13544:	ccmp	w3, #0x0, #0x4, eq  // eq = none
   13548:	b.ne	136b0 <GOMP_single_copy_end@@GOMP_1.0+0x162c>  // b.any
   1354c:	ldr	x21, [x19, #40]
   13550:	cbz	x21, 135b0 <GOMP_single_copy_end@@GOMP_1.0+0x152c>
   13554:	mov	x0, x21
   13558:	ldr	x1, [x0, #8]!
   1355c:	add	x0, x0, #0x8
   13560:	cbnz	x1, 136b8 <GOMP_single_copy_end@@GOMP_1.0+0x1634>
   13564:	add	x1, x19, #0x80
   13568:	ldr	x3, [x19, #136]
   1356c:	ldr	x2, [x19, #128]
   13570:	str	x2, [x3]
   13574:	ldr	x3, [x19, #136]
   13578:	str	x3, [x2, #8]
   1357c:	ldr	x2, [x0, #8]
   13580:	cmp	x1, x2
   13584:	b.eq	136d0 <GOMP_single_copy_end@@GOMP_1.0+0x164c>  // b.none
   13588:	ldr	x2, [x0, #8]
   1358c:	cbz	x2, 136e4 <GOMP_single_copy_end@@GOMP_1.0+0x1660>
   13590:	str	x2, [x19, #128]
   13594:	ldr	x2, [x2, #8]
   13598:	str	x2, [x19, #136]
   1359c:	str	x1, [x0, #8]
   135a0:	ldr	x0, [x19, #128]
   135a4:	str	x1, [x0, #8]
   135a8:	ldr	x0, [x19, #136]
   135ac:	str	x1, [x0]
   135b0:	ldr	w23, [x19, #88]
   135b4:	ldr	x0, [x20, #1288]
   135b8:	cmp	x0, #0x0
   135bc:	ccmp	w23, #0x0, #0x0, eq  // eq = none
   135c0:	b.gt	136f4 <GOMP_single_copy_end@@GOMP_1.0+0x1670>
   135c4:	add	x0, x19, #0x60
   135c8:	ldr	x1, [x20, #1304]
   135cc:	cbz	x1, 137d4 <GOMP_single_copy_end@@GOMP_1.0+0x1750>
   135d0:	str	x1, [x19, #96]
   135d4:	ldr	x1, [x1, #8]
   135d8:	str	x1, [x19, #104]
   135dc:	str	x0, [x20, #1304]
   135e0:	ldr	x1, [x19, #96]
   135e4:	str	x0, [x1, #8]
   135e8:	ldr	x1, [x19, #104]
   135ec:	str	x0, [x1]
   135f0:	mov	w0, #0x2                   	// #2
   135f4:	str	w0, [x19, #200]
   135f8:	cbz	x22, 13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   135fc:	ldr	x0, [x22, #64]
   13600:	cbz	x0, 13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   13604:	ldrb	w1, [x0]
   13608:	cbnz	w1, 137e4 <GOMP_single_copy_end@@GOMP_1.0+0x1760>
   1360c:	ldrb	w1, [x0, #1]
   13610:	cbnz	w1, 13824 <GOMP_single_copy_end@@GOMP_1.0+0x17a0>
   13614:	cbz	x21, 13620 <GOMP_single_copy_end@@GOMP_1.0+0x159c>
   13618:	ldrb	w0, [x21, #48]
   1361c:	cbnz	w0, 13864 <GOMP_single_copy_end@@GOMP_1.0+0x17e0>
   13620:	ldr	w0, [x20, #1324]
   13624:	add	w0, w0, #0x1
   13628:	str	w0, [x20, #1324]
   1362c:	ldr	w0, [x20, #132]
   13630:	orr	w0, w0, #0x1
   13634:	str	w0, [x20, #132]
   13638:	ldr	w1, [x20]
   1363c:	ldr	w0, [x20, #1328]
   13640:	cmp	w1, w0
   13644:	b.hi	138a0 <GOMP_single_copy_end@@GOMP_1.0+0x181c>  // b.pmore
   13648:	ldp	x19, x20, [sp, #16]
   1364c:	ldp	x21, x22, [sp, #32]
   13650:	ldp	x23, x24, [sp, #48]
   13654:	ldp	x29, x30, [sp], #112
   13658:	ret
   1365c:	ldr	w0, [x19, #88]
   13660:	str	w0, [sp, #88]
   13664:	add	x1, sp, #0x58
   13668:	add	x0, x22, #0x8
   1366c:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   13670:	b	134dc <GOMP_single_copy_end@@GOMP_1.0+0x1458>
   13674:	ldr	x2, [x19, #112]
   13678:	cmp	x1, x2
   1367c:	b.eq	13688 <GOMP_single_copy_end@@GOMP_1.0+0x1604>  // b.none
   13680:	str	x2, [x0, #8]
   13684:	b	13500 <GOMP_single_copy_end@@GOMP_1.0+0x147c>
   13688:	str	xzr, [x0, #8]
   1368c:	ldrb	w3, [x19, #207]
   13690:	str	x1, [x19, #112]
   13694:	str	x1, [x19, #120]
   13698:	str	x1, [x0, #8]
   1369c:	b	1353c <GOMP_single_copy_end@@GOMP_1.0+0x14b8>
   136a0:	ldr	x2, [x4]
   136a4:	str	x2, [x19, #112]
   136a8:	str	x4, [x19, #120]
   136ac:	b	1352c <GOMP_single_copy_end@@GOMP_1.0+0x14a8>
   136b0:	str	x1, [x0, #16]
   136b4:	b	1354c <GOMP_single_copy_end@@GOMP_1.0+0x14c8>
   136b8:	ldr	w0, [x19, #88]
   136bc:	str	w0, [sp, #88]
   136c0:	add	x1, sp, #0x58
   136c4:	add	x0, x21, #0x8
   136c8:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   136cc:	b	13564 <GOMP_single_copy_end@@GOMP_1.0+0x14e0>
   136d0:	ldr	x2, [x19, #128]
   136d4:	cmp	x1, x2
   136d8:	b.eq	136e4 <GOMP_single_copy_end@@GOMP_1.0+0x1660>  // b.none
   136dc:	str	x2, [x0, #8]
   136e0:	b	13588 <GOMP_single_copy_end@@GOMP_1.0+0x1504>
   136e4:	str	x1, [x19, #128]
   136e8:	str	x1, [x19, #136]
   136ec:	str	x1, [x0, #8]
   136f0:	b	135b0 <GOMP_single_copy_end@@GOMP_1.0+0x152c>
   136f4:	str	x25, [sp, #64]
   136f8:	add	x25, x20, #0x508
   136fc:	cbz	x0, 13748 <GOMP_single_copy_end@@GOMP_1.0+0x16c4>
   13700:	str	w23, [sp, #88]
   13704:	add	x1, sp, #0x58
   13708:	mov	x0, x25
   1370c:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   13710:	cbz	x0, 1378c <GOMP_single_copy_end@@GOMP_1.0+0x1708>
   13714:	add	x1, x19, #0x60
   13718:	ldr	x2, [x0, #8]
   1371c:	cbz	x2, 137c0 <GOMP_single_copy_end@@GOMP_1.0+0x173c>
   13720:	str	x2, [x19, #96]
   13724:	ldr	x2, [x2, #8]
   13728:	str	x2, [x19, #104]
   1372c:	str	x1, [x0, #8]
   13730:	ldr	x0, [x19, #96]
   13734:	str	x1, [x0, #8]
   13738:	ldr	x0, [x19, #104]
   1373c:	str	x1, [x0]
   13740:	ldr	x25, [sp, #64]
   13744:	b	135f0 <GOMP_single_copy_end@@GOMP_1.0+0x156c>
   13748:	ldr	x0, [x20, #1304]
   1374c:	cbz	x0, 1378c <GOMP_single_copy_end@@GOMP_1.0+0x1708>
   13750:	mov	x0, #0x28                  	// #40
   13754:	bl	8c28 <fprintf@plt+0x118>
   13758:	mov	x1, x0
   1375c:	str	xzr, [x0, #24]
   13760:	str	xzr, [x0, #32]
   13764:	str	wzr, [x0]
   13768:	ldr	x0, [x25, #16]
   1376c:	str	x0, [x1, #8]
   13770:	ldr	x0, [x25, #24]
   13774:	str	x0, [x1, #16]
   13778:	mov	x0, x25
   1377c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   13780:	str	xzr, [x25, #16]
   13784:	ldr	x0, [x20, #1288]
   13788:	cbnz	x0, 13700 <GOMP_single_copy_end@@GOMP_1.0+0x167c>
   1378c:	mov	x0, #0x28                  	// #40
   13790:	bl	8c28 <fprintf@plt+0x118>
   13794:	mov	x24, x0
   13798:	str	xzr, [x0, #24]
   1379c:	str	xzr, [x0, #32]
   137a0:	str	w23, [x0]
   137a4:	str	xzr, [x0, #8]
   137a8:	str	xzr, [x0, #16]
   137ac:	mov	x1, x0
   137b0:	mov	x0, x25
   137b4:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   137b8:	mov	x0, x24
   137bc:	b	13714 <GOMP_single_copy_end@@GOMP_1.0+0x1690>
   137c0:	str	x1, [x19, #96]
   137c4:	str	x1, [x19, #104]
   137c8:	str	x1, [x0, #8]
   137cc:	ldr	x25, [sp, #64]
   137d0:	b	135f0 <GOMP_single_copy_end@@GOMP_1.0+0x156c>
   137d4:	str	x0, [x19, #96]
   137d8:	str	x0, [x19, #104]
   137dc:	str	x0, [x20, #1304]
   137e0:	b	135f0 <GOMP_single_copy_end@@GOMP_1.0+0x156c>
   137e4:	strb	wzr, [x0]
   137e8:	ldr	x1, [x22, #64]
   137ec:	add	x0, x1, #0x10
   137f0:	ldr	w1, [x1, #16]
   137f4:	add	w2, w1, #0x1
   137f8:	and	w2, w2, #0x7fffffff
   137fc:	ldxr	w3, [x0]
   13800:	cmp	w3, w1
   13804:	b.ne	13810 <GOMP_single_copy_end@@GOMP_1.0+0x178c>  // b.any
   13808:	stlxr	w4, w2, [x0]
   1380c:	cmp	w4, #0x0
   13810:	mov	w1, w3
   13814:	b.ne	137f4 <GOMP_single_copy_end@@GOMP_1.0+0x1770>  // b.any
   13818:	tbz	w3, #31, 13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   1381c:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   13820:	b	13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   13824:	strb	wzr, [x0, #1]
   13828:	ldr	x1, [x22, #64]
   1382c:	add	x0, x1, #0x10
   13830:	ldr	w1, [x1, #16]
   13834:	add	w2, w1, #0x1
   13838:	and	w2, w2, #0x7fffffff
   1383c:	ldxr	w3, [x0]
   13840:	cmp	w3, w1
   13844:	b.ne	13850 <GOMP_single_copy_end@@GOMP_1.0+0x17cc>  // b.any
   13848:	stlxr	w4, w2, [x0]
   1384c:	cmp	w4, #0x0
   13850:	mov	w1, w3
   13854:	b.ne	13834 <GOMP_single_copy_end@@GOMP_1.0+0x17b0>  // b.any
   13858:	tbz	w3, #31, 13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   1385c:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   13860:	b	13614 <GOMP_single_copy_end@@GOMP_1.0+0x1590>
   13864:	strb	wzr, [x21, #48]
   13868:	add	x0, x21, #0x34
   1386c:	ldr	w1, [x21, #52]
   13870:	add	w2, w1, #0x1
   13874:	and	w2, w2, #0x7fffffff
   13878:	ldxr	w3, [x0]
   1387c:	cmp	w3, w1
   13880:	b.ne	1388c <GOMP_single_copy_end@@GOMP_1.0+0x1808>  // b.any
   13884:	stlxr	w4, w2, [x0]
   13888:	cmp	w4, #0x0
   1388c:	mov	w1, w3
   13890:	b.ne	13870 <GOMP_single_copy_end@@GOMP_1.0+0x17ec>  // b.any
   13894:	tbz	w3, #31, 13620 <GOMP_single_copy_end@@GOMP_1.0+0x159c>
   13898:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   1389c:	b	13620 <GOMP_single_copy_end@@GOMP_1.0+0x159c>
   138a0:	mov	w1, #0x1                   	// #1
   138a4:	add	x0, x20, #0x80
   138a8:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   138ac:	b	13648 <GOMP_single_copy_end@@GOMP_1.0+0x15c4>
   138b0:	mov	x3, x0
   138b4:	str	x1, [x3], #144
   138b8:	ldp	x4, x5, [x2]
   138bc:	stp	x4, x5, [x0, #144]
   138c0:	ldp	x4, x5, [x2, #16]
   138c4:	stp	x4, x5, [x3, #16]
   138c8:	ldr	x1, [x2, #32]
   138cc:	str	x1, [x3, #32]
   138d0:	str	wzr, [x0, #200]
   138d4:	str	xzr, [x0, #64]
   138d8:	strb	wzr, [x0, #204]
   138dc:	strb	wzr, [x0, #205]
   138e0:	strb	wzr, [x0, #206]
   138e4:	strb	wzr, [x0, #207]
   138e8:	str	xzr, [x0, #8]
   138ec:	str	xzr, [x0, #24]
   138f0:	str	xzr, [x0, #32]
   138f4:	str	xzr, [x0, #40]
   138f8:	str	xzr, [x0, #48]
   138fc:	str	xzr, [x0, #56]
   13900:	str	xzr, [x0, #72]
   13904:	ret
   13908:	stp	x29, x30, [sp, #-32]!
   1390c:	mov	x29, sp
   13910:	str	x19, [sp, #16]
   13914:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13918:	ldr	x0, [x0, #4016]
   1391c:	mrs	x1, tpidr_el0
   13920:	add	x0, x1, x0
   13924:	ldr	x19, [x0, #80]
   13928:	ldr	x0, [x19, #56]
   1392c:	cbnz	x0, 13954 <GOMP_single_copy_end@@GOMP_1.0+0x18d0>
   13930:	ldr	x2, [x19]
   13934:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13938:	ldr	x0, [x0, #4016]
   1393c:	mrs	x1, tpidr_el0
   13940:	add	x0, x1, x0
   13944:	str	x2, [x0, #80]
   13948:	ldr	x19, [sp, #16]
   1394c:	ldp	x29, x30, [sp], #32
   13950:	ret
   13954:	bl	8900 <free@plt>
   13958:	b	13930 <GOMP_single_copy_end@@GOMP_1.0+0x18ac>
   1395c:	stp	x29, x30, [sp, #-48]!
   13960:	mov	x29, sp
   13964:	stp	x19, x20, [sp, #16]
   13968:	str	x21, [sp, #32]
   1396c:	mov	w0, #0x1                   	// #1
   13970:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   13974:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13978:	ldr	x1, [x1, #4016]
   1397c:	mrs	x2, tpidr_el0
   13980:	add	x1, x2, x1
   13984:	ldr	x21, [x1, #80]
   13988:	cbz	x21, 13a14 <GOMP_single_copy_end@@GOMP_1.0+0x1990>
   1398c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13990:	ldr	x2, [x2, #4016]
   13994:	mrs	x20, tpidr_el0
   13998:	add	x20, x20, x2
   1399c:	ldp	x4, x5, [x20, #16]
   139a0:	stp	x4, x5, [x0, #8]
   139a4:	ldp	x4, x5, [x20, #32]
   139a8:	stp	x4, x5, [x0, #24]
   139ac:	ldp	x4, x5, [x20, #48]
   139b0:	stp	x4, x5, [x0, #40]
   139b4:	ldp	x2, x3, [x20, #64]
   139b8:	stp	x2, x3, [x0, #56]
   139bc:	str	x0, [x20, #16]
   139c0:	str	wzr, [x20, #40]
   139c4:	add	x1, x0, #0x100
   139c8:	str	x1, [x20, #24]
   139cc:	str	xzr, [x20, #32]
   139d0:	str	xzr, [x20, #64]
   139d4:	str	xzr, [x20, #72]
   139d8:	add	x19, x0, #0x540
   139dc:	str	x19, [x20, #80]
   139e0:	add	x2, x21, #0x90
   139e4:	mov	x1, #0x0                   	// #0
   139e8:	mov	x0, x19
   139ec:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   139f0:	str	x21, [x20, #80]
   139f4:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   139f8:	mov	x0, x21
   139fc:	bl	8900 <free@plt>
   13a00:	str	x19, [x20, #80]
   13a04:	ldp	x19, x20, [sp, #16]
   13a08:	ldr	x21, [sp, #32]
   13a0c:	ldp	x29, x30, [sp], #48
   13a10:	ret
   13a14:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13a18:	ldr	x19, [x19, #4016]
   13a1c:	mrs	x2, tpidr_el0
   13a20:	add	x19, x2, x19
   13a24:	ldp	x4, x5, [x19, #16]
   13a28:	stp	x4, x5, [x0, #8]
   13a2c:	ldp	x4, x5, [x19, #32]
   13a30:	stp	x4, x5, [x0, #24]
   13a34:	ldp	x4, x5, [x19, #48]
   13a38:	stp	x4, x5, [x0, #40]
   13a3c:	ldp	x2, x3, [x19, #64]
   13a40:	stp	x2, x3, [x0, #56]
   13a44:	str	x0, [x19, #16]
   13a48:	str	wzr, [x19, #40]
   13a4c:	add	x1, x0, #0x100
   13a50:	str	x1, [x19, #24]
   13a54:	str	xzr, [x19, #32]
   13a58:	str	xzr, [x19, #64]
   13a5c:	str	xzr, [x19, #72]
   13a60:	add	x0, x0, #0x540
   13a64:	str	x0, [x19, #80]
   13a68:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   13a6c:	add	x2, x2, #0x2b8
   13a70:	mov	x1, #0x0                   	// #0
   13a74:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   13a78:	mov	x1, x19
   13a7c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   13a80:	ldr	w0, [x0, #1696]
   13a84:	bl	89b0 <pthread_setspecific@plt>
   13a88:	b	13a04 <GOMP_single_copy_end@@GOMP_1.0+0x1980>

0000000000013a8c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1>:
   13a8c:	stp	x29, x30, [sp, #-48]!
   13a90:	mov	x29, sp
   13a94:	stp	x19, x20, [sp, #16]
   13a98:	stp	x21, x22, [sp, #32]
   13a9c:	mov	x19, x0
   13aa0:	ldr	x22, [x0, #56]
   13aa4:	ldr	x21, [x0, #64]
   13aa8:	add	x20, x21, #0x500
   13aac:	mov	w0, #0x1                   	// #1
   13ab0:	ldaxr	w1, [x20]
   13ab4:	cbnz	w1, 13ac0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x34>
   13ab8:	stxr	w2, w0, [x20]
   13abc:	cbnz	w2, 13ab0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x24>
   13ac0:	cmp	w1, #0x0
   13ac4:	b.ne	13b08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7c>  // b.any
   13ac8:	ldr	w0, [x19, #44]
   13acc:	cmp	w0, #0x3
   13ad0:	b.eq	13b14 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x88>  // b.none
   13ad4:	mov	w0, #0x5                   	// #5
   13ad8:	str	w0, [x19, #44]
   13adc:	mov	x1, x22
   13ae0:	mov	x0, x21
   13ae4:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   13ae8:	ldxr	w0, [x20]
   13aec:	stlxr	w1, wzr, [x20]
   13af0:	cbnz	w1, 13ae8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c>
   13af4:	tbnz	w0, #31, 13b38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xac>
   13af8:	ldp	x19, x20, [sp, #16]
   13afc:	ldp	x21, x22, [sp, #32]
   13b00:	ldp	x29, x30, [sp], #48
   13b04:	ret
   13b08:	mov	x0, x20
   13b0c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   13b10:	b	13ac8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3c>
   13b14:	mov	w0, #0x5                   	// #5
   13b18:	str	w0, [x19, #44]
   13b1c:	ldxr	w0, [x20]
   13b20:	stlxr	w1, wzr, [x20]
   13b24:	cbnz	w1, 13b1c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x90>
   13b28:	tbz	w0, #31, 13af8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6c>
   13b2c:	mov	x0, x20
   13b30:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   13b34:	b	13af8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6c>
   13b38:	mov	x0, x20
   13b3c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   13b40:	b	13af8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6c>
   13b44:	stp	x29, x30, [sp, #-192]!
   13b48:	mov	x29, sp
   13b4c:	stp	x19, x20, [sp, #16]
   13b50:	stp	x21, x22, [sp, #32]
   13b54:	stp	x23, x24, [sp, #48]
   13b58:	stp	x25, x26, [sp, #64]
   13b5c:	stp	x27, x28, [sp, #80]
   13b60:	str	x0, [sp, #112]
   13b64:	mov	x28, x1
   13b68:	mov	x21, x2
   13b6c:	str	x3, [sp, #104]
   13b70:	mov	x25, x4
   13b74:	mov	x23, x5
   13b78:	str	w6, [sp, #132]
   13b7c:	str	x7, [sp, #120]
   13b80:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13b84:	ldr	x0, [x0, #4016]
   13b88:	mrs	x1, tpidr_el0
   13b8c:	add	x0, x1, x0
   13b90:	ldr	x24, [x0, #16]
   13b94:	cmp	x24, #0x0
   13b98:	cset	w20, ne  // ne = any
   13b9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   13ba0:	ldrb	w0, [x0, #1364]
   13ba4:	ands	w20, w20, w0
   13ba8:	b.ne	13c00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x174>  // b.any
   13bac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13bb0:	ldr	x0, [x0, #4016]
   13bb4:	mrs	x1, tpidr_el0
   13bb8:	add	x0, x1, x0
   13bbc:	ldr	x26, [x0, #80]
   13bc0:	ldr	x27, [x26, #40]
   13bc4:	ldr	x0, [sp, #120]
   13bc8:	cbz	x0, 13c50 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1c4>
   13bcc:	ldr	x0, [x0]
   13bd0:	cbz	x0, 13c44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1b8>
   13bd4:	mov	x22, x0
   13bd8:	add	x0, x0, x0, lsl #2
   13bdc:	lsl	x0, x0, #3
   13be0:	str	x0, [sp, #96]
   13be4:	cbz	x28, 13dc8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x33c>
   13be8:	cbz	x21, 13dd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x348>
   13bec:	mov	x1, #0x0                   	// #0
   13bf0:	mov	x2, #0x0                   	// #0
   13bf4:	mov	x20, #0x0                   	// #0
   13bf8:	mov	x4, #0x1                   	// #1
   13bfc:	b	13c68 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1dc>
   13c00:	ldr	w0, [x24, #132]
   13c04:	tbnz	w0, #2, 13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   13c08:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13c0c:	ldr	x0, [x0, #4016]
   13c10:	add	x0, x1, x0
   13c14:	ldr	x0, [x0, #80]
   13c18:	ldr	x0, [x0, #40]
   13c1c:	cbz	x0, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x120>
   13c20:	ldrb	w20, [x0, #49]
   13c24:	cbnz	w20, 13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   13c28:	ldrb	w1, [x0, #50]
   13c2c:	cbz	w1, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x120>
   13c30:	ldr	x0, [x0]
   13c34:	cbz	x0, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x120>
   13c38:	ldrb	w20, [x0, #49]
   13c3c:	cbz	w20, 13bac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x120>
   13c40:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   13c44:	ldr	x0, [sp, #120]
   13c48:	ldr	x0, [x0, #8]
   13c4c:	b	13bd4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x148>
   13c50:	mov	x22, #0x0                   	// #0
   13c54:	str	xzr, [sp, #96]
   13c58:	b	13be4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x158>
   13c5c:	add	x1, x1, #0x1
   13c60:	cmp	x21, x1
   13c64:	b.eq	13ca4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x218>  // b.none
   13c68:	ldrh	w0, [x23, x1, lsl #1]
   13c6c:	and	w3, w0, #0xff
   13c70:	cmp	w3, #0xc
   13c74:	b.ne	13c5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1d0>  // b.any
   13c78:	lsr	w0, w0, #8
   13c7c:	lsl	x0, x4, x0
   13c80:	cmp	x20, x0
   13c84:	csel	x20, x20, x0, cs  // cs = hs, nlast
   13c88:	sub	x2, x2, #0x1
   13c8c:	add	x2, x2, x0
   13c90:	neg	x0, x0
   13c94:	and	x0, x0, x2
   13c98:	ldr	x2, [x25, x1, lsl #3]
   13c9c:	add	x2, x0, x2
   13ca0:	b	13c5c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1d0>
   13ca4:	add	x0, x20, x2
   13ca8:	sub	x0, x0, #0x1
   13cac:	cmp	x20, #0x0
   13cb0:	csel	x0, x0, x20, ne  // ne = any
   13cb4:	add	x1, x21, x21, lsl #3
   13cb8:	lsl	x1, x1, #1
   13cbc:	add	x1, x1, #0x120
   13cc0:	ldr	x2, [sp, #96]
   13cc4:	add	x0, x2, x0
   13cc8:	add	x0, x1, x0
   13ccc:	bl	8c28 <fprintf@plt+0x118>
   13cd0:	mov	x19, x0
   13cd4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   13cd8:	ldr	x0, [x0, #4016]
   13cdc:	mrs	x1, tpidr_el0
   13ce0:	add	x0, x1, x0
   13ce4:	ldr	x1, [x0, #80]
   13ce8:	add	x2, x1, #0x90
   13cec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   13cf0:	add	x0, x0, #0x2b8
   13cf4:	cmp	x1, #0x0
   13cf8:	csel	x2, x0, x2, eq  // eq = none
   13cfc:	mov	x1, x26
   13d00:	mov	x0, x19
   13d04:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   13d08:	str	wzr, [x19, #88]
   13d0c:	mov	w0, #0x2                   	// #2
   13d10:	str	w0, [x19, #200]
   13d14:	ldrb	w0, [x26, #204]
   13d18:	strb	w0, [x19, #204]
   13d1c:	str	x27, [x19, #40]
   13d20:	add	x0, x22, x22, lsl #2
   13d24:	lsl	x0, x0, #3
   13d28:	add	x0, x0, #0xd0
   13d2c:	add	x22, x19, x0
   13d30:	ldr	x1, [sp, #112]
   13d34:	str	x1, [x19, x0]
   13d38:	str	x28, [x22, #8]
   13d3c:	str	x21, [x22, #16]
   13d40:	ldr	x0, [sp, #192]
   13d44:	str	x0, [x22, #72]
   13d48:	lsl	x28, x21, #3
   13d4c:	mov	x2, x28
   13d50:	ldr	x1, [sp, #104]
   13d54:	add	x0, x22, #0x50
   13d58:	bl	85c0 <memcpy@plt>
   13d5c:	add	x0, x28, #0x50
   13d60:	add	x0, x22, x0
   13d64:	str	x0, [x22, #24]
   13d68:	mov	x2, x28
   13d6c:	mov	x1, x25
   13d70:	bl	85c0 <memcpy@plt>
   13d74:	ldr	x0, [x22, #24]
   13d78:	add	x0, x0, x28
   13d7c:	str	x0, [x22, #32]
   13d80:	lsl	x28, x21, #1
   13d84:	mov	x2, x28
   13d88:	mov	x1, x23
   13d8c:	bl	85c0 <memcpy@plt>
   13d90:	cbz	x20, 13e58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3cc>
   13d94:	ldr	x0, [x22, #32]
   13d98:	add	x28, x0, x28
   13d9c:	sub	x0, x20, #0x1
   13da0:	ands	x0, x28, x0
   13da4:	sub	x20, x20, x0
   13da8:	add	x20, x28, x20
   13dac:	csel	x28, x20, x28, ne  // ne = any
   13db0:	cbz	x21, 13e58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3cc>
   13db4:	mov	x20, #0x0                   	// #0
   13db8:	mov	x2, #0x0                   	// #0
   13dbc:	add	x0, x22, #0x50
   13dc0:	str	x0, [sp, #152]
   13dc4:	b	13dec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x360>
   13dc8:	mov	x0, #0x0                   	// #0
   13dcc:	mov	x20, #0x0                   	// #0
   13dd0:	b	13cb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x228>
   13dd4:	mov	x0, x21
   13dd8:	mov	x20, x21
   13ddc:	b	13cb4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x228>
   13de0:	add	x20, x20, #0x1
   13de4:	cmp	x21, x20
   13de8:	b.eq	13e58 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3cc>  // b.none
   13dec:	ldrh	w0, [x23, x20, lsl #1]
   13df0:	and	w1, w0, #0xff
   13df4:	cmp	w1, #0xc
   13df8:	b.ne	13de0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x354>  // b.any
   13dfc:	lsr	w0, w0, #8
   13e00:	mov	x1, #0x1                   	// #1
   13e04:	lsl	x0, x1, x0
   13e08:	sub	x2, x2, #0x1
   13e0c:	add	x2, x2, x0
   13e10:	neg	x0, x0
   13e14:	and	x0, x0, x2
   13e18:	str	x0, [sp, #144]
   13e1c:	add	x1, x28, x0
   13e20:	mov	x3, x1
   13e24:	ldr	x2, [x25, x20, lsl #3]
   13e28:	ldr	x1, [sp, #104]
   13e2c:	ldr	x1, [x1, x20, lsl #3]
   13e30:	str	x3, [sp, #136]
   13e34:	mov	x0, x3
   13e38:	bl	85c0 <memcpy@plt>
   13e3c:	ldr	x2, [sp, #152]
   13e40:	ldr	x1, [sp, #136]
   13e44:	str	x1, [x2, x20, lsl #3]
   13e48:	ldr	x2, [x25, x20, lsl #3]
   13e4c:	ldr	x0, [sp, #144]
   13e50:	add	x2, x0, x2
   13e54:	b	13de0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x354>
   13e58:	ldr	w0, [sp, #132]
   13e5c:	str	w0, [x22, #40]
   13e60:	ldr	w0, [sp, #200]
   13e64:	str	w0, [x22, #44]
   13e68:	str	x19, [x22, #56]
   13e6c:	str	x24, [x22, #64]
   13e70:	str	xzr, [x19, #184]
   13e74:	str	x22, [x19, #192]
   13e78:	strb	wzr, [x19, #205]
   13e7c:	add	x21, x24, #0x500
   13e80:	mov	w0, #0x1                   	// #1
   13e84:	ldaxr	w1, [x21]
   13e88:	cbnz	w1, 13e94 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x408>
   13e8c:	stxr	w2, w0, [x21]
   13e90:	cbnz	w2, 13e84 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x3f8>
   13e94:	cmp	w1, #0x0
   13e98:	b.ne	13fe4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x558>  // b.any
   13e9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   13ea0:	ldrb	w20, [x0, #1364]
   13ea4:	cbnz	w20, 13ff0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x564>
   13ea8:	ldr	x0, [sp, #96]
   13eac:	cbnz	x0, 14054 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c8>
   13eb0:	ldr	w0, [sp, #200]
   13eb4:	cbz	w0, 1409c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x610>
   13eb8:	cbz	x27, 13ec8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x43c>
   13ebc:	ldr	x0, [x27, #56]
   13ec0:	add	x0, x0, #0x1
   13ec4:	str	x0, [x27, #56]
   13ec8:	ldr	x0, [sp, #112]
   13ecc:	cbz	x0, 13ed8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x44c>
   13ed0:	ldr	w0, [x0, #8]
   13ed4:	tbnz	w0, #2, 140e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x654>
   13ed8:	ldr	x0, [x26, #8]
   13edc:	cbnz	x0, 14330 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8a4>
   13ee0:	add	x0, x19, #0x70
   13ee4:	ldr	x1, [x26, #24]
   13ee8:	cbz	x1, 143bc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x930>
   13eec:	str	x1, [x19, #112]
   13ef0:	ldr	x1, [x1, #8]
   13ef4:	str	x1, [x19, #120]
   13ef8:	str	x0, [x26, #24]
   13efc:	ldr	x1, [x19, #112]
   13f00:	str	x0, [x1, #8]
   13f04:	ldr	x1, [x19, #120]
   13f08:	str	x0, [x1]
   13f0c:	cbz	x27, 13f44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4b8>
   13f10:	ldr	x0, [x27, #8]
   13f14:	cbnz	x0, 143cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x940>
   13f18:	add	x0, x19, #0x80
   13f1c:	ldr	x1, [x27, #24]
   13f20:	cbz	x1, 14458 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9cc>
   13f24:	str	x1, [x19, #128]
   13f28:	ldr	x1, [x1, #8]
   13f2c:	str	x1, [x19, #136]
   13f30:	str	x0, [x27, #24]
   13f34:	ldr	x1, [x19, #128]
   13f38:	str	x0, [x1, #8]
   13f3c:	ldr	x1, [x19, #136]
   13f40:	str	x0, [x1]
   13f44:	ldr	x0, [x24, #1288]
   13f48:	cbnz	x0, 14468 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9dc>
   13f4c:	add	x1, x19, #0x60
   13f50:	ldr	x0, [x24, #1304]
   13f54:	cbz	x0, 144ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa60>
   13f58:	str	x0, [x19, #96]
   13f5c:	ldr	x2, [x0, #8]
   13f60:	str	x2, [x19, #104]
   13f64:	str	x1, [x0, #8]
   13f68:	ldr	x0, [x19, #104]
   13f6c:	str	x1, [x0]
   13f70:	ldr	w0, [x24, #1320]
   13f74:	add	w0, w0, #0x1
   13f78:	str	w0, [x24, #1320]
   13f7c:	ldr	w0, [x24, #1324]
   13f80:	add	w0, w0, #0x1
   13f84:	str	w0, [x24, #1324]
   13f88:	ldr	w0, [x24, #132]
   13f8c:	orr	w0, w0, #0x1
   13f90:	str	w0, [x24, #132]
   13f94:	ldrb	w19, [x26, #204]
   13f98:	eor	w19, w19, #0x1
   13f9c:	ldr	w0, [x24, #1328]
   13fa0:	add	w19, w19, w0
   13fa4:	ldr	w22, [x24]
   13fa8:	ldxr	w0, [x21]
   13fac:	stlxr	w1, wzr, [x21]
   13fb0:	cbnz	w1, 13fa8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x51c>
   13fb4:	tbnz	w0, #31, 144fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa70>
   13fb8:	mov	w20, #0x1                   	// #1
   13fbc:	cmp	w19, w22
   13fc0:	b.cc	14508 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa7c>  // b.lo, b.ul, b.last
   13fc4:	mov	w0, w20
   13fc8:	ldp	x19, x20, [sp, #16]
   13fcc:	ldp	x21, x22, [sp, #32]
   13fd0:	ldp	x23, x24, [sp, #48]
   13fd4:	ldp	x25, x26, [sp, #64]
   13fd8:	ldp	x27, x28, [sp, #80]
   13fdc:	ldp	x29, x30, [sp], #192
   13fe0:	ret
   13fe4:	mov	x0, x21
   13fe8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   13fec:	b	13e9c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x410>
   13ff0:	ldr	w0, [x24, #132]
   13ff4:	tbnz	w0, #2, 1401c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x590>
   13ff8:	cbz	x27, 13ea8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x41c>
   13ffc:	ldrb	w0, [x27, #49]
   14000:	cbnz	w0, 1401c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x590>
   14004:	ldrb	w0, [x27, #50]
   14008:	cbz	w0, 13ea8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x41c>
   1400c:	ldr	x0, [x27]
   14010:	cbz	x0, 13ea8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x41c>
   14014:	ldrb	w0, [x0, #49]
   14018:	cbz	w0, 13ea8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x41c>
   1401c:	ldxr	w0, [x21]
   14020:	stlxr	w1, wzr, [x21]
   14024:	cbnz	w1, 1401c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x590>
   14028:	tbnz	w0, #31, 14040 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5b4>
   1402c:	ldr	x0, [x19, #56]
   14030:	cbnz	x0, 1404c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5c0>
   14034:	mov	x0, x19
   14038:	bl	8900 <free@plt>
   1403c:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   14040:	mov	x0, x21
   14044:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14048:	b	1402c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5a0>
   1404c:	bl	8900 <free@plt>
   14050:	b	14034 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5a8>
   14054:	ldr	x2, [sp, #120]
   14058:	mov	x1, x26
   1405c:	mov	x0, x19
   14060:	bl	12608 <GOMP_single_copy_end@@GOMP_1.0+0x584>
   14064:	ldr	x0, [x19, #80]
   14068:	cbz	x0, 13eb0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x424>
   1406c:	cbz	x27, 1407c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5f0>
   14070:	ldr	x0, [x27, #56]
   14074:	add	x0, x0, #0x1
   14078:	str	x0, [x27, #56]
   1407c:	ldxr	w0, [x21]
   14080:	stlxr	w1, wzr, [x21]
   14084:	cbnz	w1, 1407c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x5f0>
   14088:	mov	w20, #0x1                   	// #1
   1408c:	tbz	w0, #31, 13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   14090:	mov	x0, x21
   14094:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14098:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   1409c:	mov	x0, x19
   140a0:	bl	129c0 <GOMP_single_copy_end@@GOMP_1.0+0x93c>
   140a4:	ldxr	w0, [x21]
   140a8:	stlxr	w1, wzr, [x21]
   140ac:	cbnz	w1, 140a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x618>
   140b0:	tbnz	w0, #31, 140cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x640>
   140b4:	ldr	x0, [x19, #56]
   140b8:	cbnz	x0, 140d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x64c>
   140bc:	mov	x0, x19
   140c0:	bl	8900 <free@plt>
   140c4:	mov	w20, #0x0                   	// #0
   140c8:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   140cc:	mov	x0, x21
   140d0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   140d4:	b	140b4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x628>
   140d8:	bl	8900 <free@plt>
   140dc:	b	140bc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x630>
   140e0:	ldr	x0, [x26, #8]
   140e4:	cbnz	x0, 141e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x754>
   140e8:	add	x1, x19, #0x70
   140ec:	ldr	x0, [x26, #24]
   140f0:	cbz	x0, 14264 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7d8>
   140f4:	str	x0, [x19, #112]
   140f8:	ldr	x2, [x0, #8]
   140fc:	str	x2, [x19, #120]
   14100:	str	x1, [x0, #8]
   14104:	ldr	x0, [x19, #120]
   14108:	str	x1, [x0]
   1410c:	cbz	x27, 1413c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b0>
   14110:	ldr	x0, [x27, #8]
   14114:	cbnz	x0, 14274 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7e8>
   14118:	add	x1, x19, #0x80
   1411c:	ldr	x0, [x27, #24]
   14120:	cbz	x0, 142f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x86c>
   14124:	str	x0, [x19, #128]
   14128:	ldr	x2, [x0, #8]
   1412c:	str	x2, [x19, #136]
   14130:	str	x1, [x0, #8]
   14134:	ldr	x0, [x19, #136]
   14138:	str	x1, [x0]
   1413c:	str	xzr, [x19, #96]
   14140:	str	xzr, [x19, #104]
   14144:	mov	w0, #0x3                   	// #3
   14148:	str	w0, [x19, #200]
   1414c:	ldr	w0, [x24, #1320]
   14150:	add	w0, w0, #0x1
   14154:	str	w0, [x24, #1320]
   14158:	ldxr	w0, [x21]
   1415c:	stlxr	w1, wzr, [x21]
   14160:	cbnz	w1, 14158 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6cc>
   14164:	tbnz	w0, #31, 14308 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x87c>
   14168:	adrp	x20, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1416c:	ldr	x20, [x20, #4016]
   14170:	mrs	x0, tpidr_el0
   14174:	add	x20, x0, x20
   14178:	str	x19, [x20, #80]
   1417c:	ldr	x0, [x19, #192]
   14180:	bl	2216c <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   14184:	str	x26, [x20, #80]
   14188:	mov	w0, #0x1                   	// #1
   1418c:	ldaxr	w1, [x21]
   14190:	cbnz	w1, 1419c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x710>
   14194:	stxr	w2, w0, [x21]
   14198:	cbnz	w2, 1418c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x700>
   1419c:	cmp	w1, #0x0
   141a0:	b.ne	14314 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x888>  // b.any
   141a4:	mov	w0, #0x4                   	// #4
   141a8:	str	w0, [x19, #200]
   141ac:	ldr	w0, [x22, #44]
   141b0:	cmp	w0, #0x5
   141b4:	b.eq	14320 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x894>  // b.none
   141b8:	mov	w0, #0x4                   	// #4
   141bc:	str	w0, [x22, #44]
   141c0:	ldxr	w0, [x21]
   141c4:	stlxr	w1, wzr, [x21]
   141c8:	cbnz	w1, 141c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x734>
   141cc:	mov	w20, #0x1                   	// #1
   141d0:	tbz	w0, #31, 13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   141d4:	mov	x0, x21
   141d8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   141dc:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   141e0:	add	x23, x26, #0x8
   141e4:	str	wzr, [sp, #168]
   141e8:	add	x1, sp, #0xa8
   141ec:	mov	x0, x23
   141f0:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   141f4:	cbz	x0, 14220 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x794>
   141f8:	add	x2, x19, #0x70
   141fc:	ldr	x1, [x0, #8]
   14200:	cbz	x1, 14254 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x7c8>
   14204:	str	x1, [x19, #112]
   14208:	ldr	x0, [x1, #8]
   1420c:	str	x0, [x19, #120]
   14210:	str	x2, [x1, #8]
   14214:	ldr	x0, [x19, #120]
   14218:	str	x2, [x0]
   1421c:	b	1410c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x680>
   14220:	mov	x0, #0x28                  	// #40
   14224:	bl	8c28 <fprintf@plt+0x118>
   14228:	mov	x20, x0
   1422c:	str	xzr, [x0, #24]
   14230:	str	xzr, [x0, #32]
   14234:	str	wzr, [x0]
   14238:	str	xzr, [x0, #8]
   1423c:	str	xzr, [x0, #16]
   14240:	mov	x1, x0
   14244:	mov	x0, x23
   14248:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   1424c:	mov	x0, x20
   14250:	b	141f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x76c>
   14254:	str	x2, [x19, #112]
   14258:	str	x2, [x19, #120]
   1425c:	str	x2, [x0, #8]
   14260:	b	1410c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x680>
   14264:	str	x1, [x19, #112]
   14268:	str	x1, [x19, #120]
   1426c:	str	x1, [x26, #24]
   14270:	b	1410c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x680>
   14274:	add	x27, x27, #0x8
   14278:	str	wzr, [sp, #168]
   1427c:	add	x1, sp, #0xa8
   14280:	mov	x0, x27
   14284:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   14288:	mov	x20, x0
   1428c:	cbz	x0, 142b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x82c>
   14290:	add	x0, x19, #0x80
   14294:	ldr	x1, [x20, #8]
   14298:	cbz	x1, 142e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x85c>
   1429c:	str	x1, [x19, #128]
   142a0:	ldr	x2, [x1, #8]
   142a4:	str	x2, [x19, #136]
   142a8:	str	x0, [x1, #8]
   142ac:	ldr	x1, [x19, #136]
   142b0:	str	x0, [x1]
   142b4:	b	1413c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b0>
   142b8:	mov	x0, #0x28                  	// #40
   142bc:	bl	8c28 <fprintf@plt+0x118>
   142c0:	mov	x20, x0
   142c4:	str	xzr, [x0, #24]
   142c8:	str	xzr, [x0, #32]
   142cc:	str	wzr, [x0]
   142d0:	str	xzr, [x0, #8]
   142d4:	str	xzr, [x0, #16]
   142d8:	mov	x1, x0
   142dc:	mov	x0, x27
   142e0:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   142e4:	b	14290 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x804>
   142e8:	str	x0, [x19, #128]
   142ec:	str	x0, [x19, #136]
   142f0:	str	x0, [x20, #8]
   142f4:	b	1413c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b0>
   142f8:	str	x1, [x19, #128]
   142fc:	str	x1, [x19, #136]
   14300:	str	x1, [x27, #24]
   14304:	b	1413c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6b0>
   14308:	mov	x0, x21
   1430c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14310:	b	14168 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x6dc>
   14314:	mov	x0, x21
   14318:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1431c:	b	141a4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x718>
   14320:	mov	x1, x19
   14324:	mov	x0, x24
   14328:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   1432c:	b	141c0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x734>
   14330:	add	x22, x26, #0x8
   14334:	str	wzr, [sp, #168]
   14338:	add	x1, sp, #0xa8
   1433c:	mov	x0, x22
   14340:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   14344:	cbz	x0, 14378 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8ec>
   14348:	add	x1, x19, #0x70
   1434c:	ldr	x2, [x0, #8]
   14350:	cbz	x2, 143ac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x920>
   14354:	str	x2, [x19, #112]
   14358:	ldr	x2, [x2, #8]
   1435c:	str	x2, [x19, #120]
   14360:	str	x1, [x0, #8]
   14364:	ldr	x0, [x19, #112]
   14368:	str	x1, [x0, #8]
   1436c:	ldr	x0, [x19, #120]
   14370:	str	x1, [x0]
   14374:	b	13f0c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x480>
   14378:	mov	x0, #0x28                  	// #40
   1437c:	bl	8c28 <fprintf@plt+0x118>
   14380:	mov	x20, x0
   14384:	str	xzr, [x0, #24]
   14388:	str	xzr, [x0, #32]
   1438c:	str	wzr, [x0]
   14390:	str	xzr, [x0, #8]
   14394:	str	xzr, [x0, #16]
   14398:	mov	x1, x0
   1439c:	mov	x0, x22
   143a0:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   143a4:	mov	x0, x20
   143a8:	b	14348 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x8bc>
   143ac:	str	x1, [x19, #112]
   143b0:	str	x1, [x19, #120]
   143b4:	str	x1, [x0, #8]
   143b8:	b	13f0c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x480>
   143bc:	str	x0, [x19, #112]
   143c0:	str	x0, [x19, #120]
   143c4:	str	x0, [x26, #24]
   143c8:	b	13f0c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x480>
   143cc:	add	x27, x27, #0x8
   143d0:	str	wzr, [sp, #168]
   143d4:	add	x1, sp, #0xa8
   143d8:	mov	x0, x27
   143dc:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   143e0:	cbz	x0, 14414 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x988>
   143e4:	add	x1, x19, #0x80
   143e8:	ldr	x2, [x0, #8]
   143ec:	cbz	x2, 14448 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9bc>
   143f0:	str	x2, [x19, #128]
   143f4:	ldr	x2, [x2, #8]
   143f8:	str	x2, [x19, #136]
   143fc:	str	x1, [x0, #8]
   14400:	ldr	x0, [x19, #128]
   14404:	str	x1, [x0, #8]
   14408:	ldr	x0, [x19, #136]
   1440c:	str	x1, [x0]
   14410:	b	13f44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4b8>
   14414:	mov	x0, #0x28                  	// #40
   14418:	bl	8c28 <fprintf@plt+0x118>
   1441c:	mov	x20, x0
   14420:	str	xzr, [x0, #24]
   14424:	str	xzr, [x0, #32]
   14428:	str	wzr, [x0]
   1442c:	str	xzr, [x0, #8]
   14430:	str	xzr, [x0, #16]
   14434:	mov	x1, x0
   14438:	mov	x0, x27
   1443c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   14440:	mov	x0, x20
   14444:	b	143e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x958>
   14448:	str	x1, [x19, #128]
   1444c:	str	x1, [x19, #136]
   14450:	str	x1, [x0, #8]
   14454:	b	13f44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4b8>
   14458:	str	x0, [x19, #128]
   1445c:	str	x0, [x19, #136]
   14460:	str	x0, [x27, #24]
   14464:	b	13f44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4b8>
   14468:	add	x22, x24, #0x508
   1446c:	str	wzr, [sp, #168]
   14470:	add	x1, sp, #0xa8
   14474:	mov	x0, x22
   14478:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   1447c:	cbz	x0, 144a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa1c>
   14480:	add	x2, x19, #0x60
   14484:	ldr	x1, [x0, #8]
   14488:	cbz	x1, 144dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa50>
   1448c:	str	x1, [x19, #96]
   14490:	ldr	x0, [x1, #8]
   14494:	str	x0, [x19, #104]
   14498:	str	x2, [x1, #8]
   1449c:	ldr	x0, [x19, #104]
   144a0:	str	x2, [x0]
   144a4:	b	13f70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4e4>
   144a8:	mov	x0, #0x28                  	// #40
   144ac:	bl	8c28 <fprintf@plt+0x118>
   144b0:	mov	x20, x0
   144b4:	str	xzr, [x0, #24]
   144b8:	str	xzr, [x0, #32]
   144bc:	str	wzr, [x0]
   144c0:	str	xzr, [x0, #8]
   144c4:	str	xzr, [x0, #16]
   144c8:	mov	x1, x0
   144cc:	mov	x0, x22
   144d0:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   144d4:	mov	x0, x20
   144d8:	b	14480 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x9f4>
   144dc:	str	x2, [x19, #96]
   144e0:	str	x2, [x19, #104]
   144e4:	str	x2, [x0, #8]
   144e8:	b	13f70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4e4>
   144ec:	str	x1, [x19, #96]
   144f0:	str	x1, [x19, #104]
   144f4:	str	x1, [x24, #1304]
   144f8:	b	13f70 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x4e4>
   144fc:	mov	x0, x21
   14500:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14504:	b	13fb8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x52c>
   14508:	mov	w1, w20
   1450c:	add	x0, x24, #0x80
   14510:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   14514:	b	13fc4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x538>
   14518:	stp	x29, x30, [sp, #-128]!
   1451c:	mov	x29, sp
   14520:	stp	x19, x20, [sp, #16]
   14524:	stp	x21, x22, [sp, #32]
   14528:	stp	x27, x28, [sp, #80]
   1452c:	mov	w19, w0
   14530:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14534:	ldr	x0, [x0, #4016]
   14538:	mrs	x1, tpidr_el0
   1453c:	add	x0, x1, x0
   14540:	ldr	x20, [x0, #16]
   14544:	ldr	x27, [x0, #80]
   14548:	add	x21, x20, #0x500
   1454c:	mov	w0, #0x1                   	// #1
   14550:	ldaxr	w1, [x21]
   14554:	cbnz	w1, 14560 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xad4>
   14558:	stxr	w2, w0, [x21]
   1455c:	cbnz	w2, 14550 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xac4>
   14560:	cmp	w1, #0x0
   14564:	b.ne	145ac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb20>  // b.any
   14568:	tbz	w19, #0, 145f0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb64>
   1456c:	ldr	w0, [x20, #1320]
   14570:	cbz	w0, 145b8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb2c>
   14574:	stp	x23, x24, [sp, #48]
   14578:	stp	x25, x26, [sp, #64]
   1457c:	ldr	w0, [x20, #132]
   14580:	orr	w0, w0, #0x2
   14584:	str	w0, [x20, #132]
   14588:	mov	w24, #0x0                   	// #0
   1458c:	mov	x22, #0x0                   	// #0
   14590:	and	w19, w19, #0xfffffff8
   14594:	add	w28, w19, #0x8
   14598:	mrs	x26, tpidr_el0
   1459c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   145a0:	ldr	x0, [x0, #4016]
   145a4:	add	x26, x26, x0
   145a8:	b	148e8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe5c>
   145ac:	mov	x0, x21
   145b0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   145b4:	b	14568 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xadc>
   145b8:	and	w0, w19, #0xfffffff8
   145bc:	add	w0, w0, #0x8
   145c0:	str	w0, [x20, #132]
   145c4:	ldxr	w0, [x21]
   145c8:	stlxr	w1, wzr, [x21]
   145cc:	cbnz	w1, 145c4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb38>
   145d0:	tbnz	w0, #31, 145e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb58>
   145d4:	mov	w1, #0x0                   	// #0
   145d8:	add	x0, x20, #0x80
   145dc:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   145e0:	b	14b08 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x107c>
   145e4:	mov	x0, x21
   145e8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   145ec:	b	145d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb48>
   145f0:	stp	x23, x24, [sp, #48]
   145f4:	stp	x25, x26, [sp, #64]
   145f8:	b	14588 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xafc>
   145fc:	add	x4, sp, #0x7f
   14600:	mov	x3, #0x0                   	// #0
   14604:	mov	w2, #0x3e7                 	// #999
   14608:	add	x1, x20, #0x508
   1460c:	mov	w0, #0x0                   	// #0
   14610:	bl	27770 <acc_set_cuda_stream@@OACC_2.0+0x2bc>
   14614:	mov	x19, x0
   14618:	cbnz	x0, 1463c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbb0>
   1461c:	ldr	x0, [x20, #1288]
   14620:	ldr	x19, [x0, #8]
   14624:	sub	x19, x19, #0x60
   14628:	b	1463c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbb0>
   1462c:	mov	w0, #0x1                   	// #1
   14630:	strb	w0, [sp, #127]
   14634:	ldr	x19, [x20, #1304]
   14638:	sub	x19, x19, #0x60
   1463c:	mov	x2, x20
   14640:	ldr	x1, [x19]
   14644:	mov	x0, x19
   14648:	bl	12af0 <GOMP_single_copy_end@@GOMP_1.0+0xa6c>
   1464c:	ands	w23, w0, #0xff
   14650:	b.ne	1466c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbe0>  // b.any
   14654:	ldr	w0, [x20, #1328]
   14658:	add	w0, w0, #0x1
   1465c:	str	w0, [x20, #1328]
   14660:	mov	w0, #0x1                   	// #1
   14664:	strb	w0, [x19, #204]
   14668:	b	148f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe6c>
   1466c:	cbz	x22, 14964 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xed8>
   14670:	ldr	x0, [x22, #56]
   14674:	cbnz	x0, 14684 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbf8>
   14678:	mov	x0, x22
   1467c:	bl	8900 <free@plt>
   14680:	b	14964 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xed8>
   14684:	bl	8900 <free@plt>
   14688:	b	14678 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xbec>
   1468c:	mov	x0, x21
   14690:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14694:	b	14908 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe7c>
   14698:	mov	w1, w24
   1469c:	add	x0, x20, #0x80
   146a0:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   146a4:	b	1490c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe80>
   146a8:	bl	8900 <free@plt>
   146ac:	b	14918 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe8c>
   146b0:	ldr	x0, [x19, #192]
   146b4:	bl	2216c <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   146b8:	and	w0, w0, #0xff
   146bc:	cbz	w0, 14938 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xeac>
   146c0:	str	x27, [x26, #80]
   146c4:	mov	w0, #0x1                   	// #1
   146c8:	ldaxr	w1, [x21]
   146cc:	cbnz	w1, 146d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc4c>
   146d0:	stxr	w2, w0, [x21]
   146d4:	cbnz	w2, 146c8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc3c>
   146d8:	cmp	w1, #0x0
   146dc:	b.ne	14718 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc8c>  // b.any
   146e0:	mov	w0, #0x4                   	// #4
   146e4:	str	w0, [x19, #200]
   146e8:	ldr	w0, [x20, #1328]
   146ec:	sub	w0, w0, #0x1
   146f0:	str	w0, [x20, #1328]
   146f4:	ldr	x0, [x19, #192]
   146f8:	ldr	w1, [x0, #44]
   146fc:	cmp	w1, #0x5
   14700:	b.eq	14724 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc98>  // b.none
   14704:	mov	w1, #0x4                   	// #4
   14708:	str	w1, [x0, #44]
   1470c:	mov	w24, #0x0                   	// #0
   14710:	mov	x19, #0x0                   	// #0
   14714:	b	148e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe58>
   14718:	mov	x0, x21
   1471c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14720:	b	146e0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc54>
   14724:	mov	x1, x19
   14728:	mov	x0, x20
   1472c:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   14730:	mov	w24, #0x0                   	// #0
   14734:	mov	x19, #0x0                   	// #0
   14738:	b	148e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe58>
   1473c:	mov	x0, x21
   14740:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14744:	mov	w24, #0x0                   	// #0
   14748:	b	14964 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xed8>
   1474c:	ldr	x1, [x25, #64]
   14750:	ldr	x0, [x1, #8]
   14754:	sub	x0, x0, #0x1
   14758:	str	x0, [x1, #8]
   1475c:	cbnz	x0, 149a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf1c>
   14760:	ldr	x0, [x25, #64]
   14764:	ldrb	w1, [x0, #1]
   14768:	cbz	w1, 149a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf1c>
   1476c:	strb	wzr, [x0, #1]
   14770:	ldr	x1, [x25, #64]
   14774:	add	x0, x1, #0x10
   14778:	ldr	w1, [x1, #16]
   1477c:	add	w2, w1, #0x1
   14780:	and	w2, w2, #0x7fffffff
   14784:	ldxr	w3, [x0]
   14788:	cmp	w3, w1
   1478c:	b.ne	14798 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd0c>  // b.any
   14790:	stlxr	w4, w2, [x0]
   14794:	cmp	w4, #0x0
   14798:	mov	w1, w3
   1479c:	b.ne	1477c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcf0>  // b.any
   147a0:	tbz	w3, #31, 149a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf1c>
   147a4:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   147a8:	b	149a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf1c>
   147ac:	add	x0, x25, #0x8
   147b0:	str	x0, [sp, #104]
   147b4:	add	x2, x19, #0x70
   147b8:	mov	x1, x0
   147bc:	mov	w0, #0x1                   	// #1
   147c0:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   147c4:	ldr	x0, [x25, #8]
   147c8:	cbnz	x0, 149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   147cc:	ldr	x0, [sp, #104]
   147d0:	stlr	xzr, [x0]
   147d4:	b	147f4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd68>
   147d8:	ldr	x0, [x19, #112]
   147dc:	cmp	x1, x0
   147e0:	b.eq	147ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd60>  // b.none
   147e4:	str	x0, [x25, #24]
   147e8:	b	149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   147ec:	add	x0, x25, #0x18
   147f0:	stlr	xzr, [x0]
   147f4:	ldr	x0, [x25, #64]
   147f8:	cbz	x0, 149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   147fc:	ldrb	w1, [x0]
   14800:	cbz	w1, 149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   14804:	strb	wzr, [x0]
   14808:	ldr	x1, [x25, #64]
   1480c:	add	x0, x1, #0x10
   14810:	ldr	w1, [x1, #16]
   14814:	add	w2, w1, #0x1
   14818:	and	w2, w2, #0x7fffffff
   1481c:	ldxr	w3, [x0]
   14820:	cmp	w3, w1
   14824:	b.ne	14830 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xda4>  // b.any
   14828:	stlxr	w4, w2, [x0]
   1482c:	cmp	w4, #0x0
   14830:	mov	w1, w3
   14834:	b.ne	14814 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd88>  // b.any
   14838:	tbz	w3, #31, 149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   1483c:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   14840:	b	149d4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf48>
   14844:	add	x0, x19, #0x8
   14848:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   1484c:	str	xzr, [x19, #8]
   14850:	b	14a00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf74>
   14854:	add	x2, x19, #0x80
   14858:	add	x1, x25, #0x8
   1485c:	mov	w0, #0x2                   	// #2
   14860:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   14864:	ldr	x0, [x25, #8]
   14868:	cmp	x0, #0x0
   1486c:	cset	w1, eq  // eq = none
   14870:	b	14a38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfac>
   14874:	ldr	x0, [x19, #128]
   14878:	cmp	x2, x0
   1487c:	b.eq	14888 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdfc>  // b.none
   14880:	str	x0, [x25, #24]
   14884:	b	14a38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfac>
   14888:	str	xzr, [x25, #24]
   1488c:	mov	w1, #0x1                   	// #1
   14890:	b	14a38 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfac>
   14894:	add	x0, x25, #0x38
   14898:	stlr	xzr, [x0]
   1489c:	b	14a54 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfc8>
   148a0:	cbnz	w23, 148b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe24>
   148a4:	ldr	w0, [x20, #1328]
   148a8:	sub	w0, w0, #0x1
   148ac:	str	w0, [x20, #1328]
   148b0:	cmp	x22, #0x1
   148b4:	b.ls	148cc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe40>  // b.plast
   148b8:	ldr	w0, [x20]
   148bc:	ldr	w1, [x20, #1328]
   148c0:	sub	w24, w0, w1
   148c4:	cmp	x22, w24, sxtw
   148c8:	csel	w24, w22, w24, cc  // cc = lo, ul, last
   148cc:	ldr	w0, [x20, #1320]
   148d0:	sub	w0, w0, #0x1
   148d4:	str	w0, [x20, #1320]
   148d8:	cbnz	w0, 148e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe58>
   148dc:	ldr	w0, [x20, #132]
   148e0:	tbnz	w0, #1, 14a9c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1010>
   148e4:	mov	x22, x19
   148e8:	ldr	x0, [x20, #1288]
   148ec:	cbnz	x0, 145fc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb70>
   148f0:	ldr	x19, [x20, #1304]
   148f4:	cbnz	x19, 1462c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xba0>
   148f8:	ldxr	w0, [x21]
   148fc:	stlxr	w1, wzr, [x21]
   14900:	cbnz	w1, 148f8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe6c>
   14904:	tbnz	w0, #31, 1468c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc00>
   14908:	cbnz	w24, 14698 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc0c>
   1490c:	cbz	x22, 14920 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe94>
   14910:	ldr	x0, [x22, #56]
   14914:	cbnz	x0, 146a8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc1c>
   14918:	mov	x0, x22
   1491c:	bl	8900 <free@plt>
   14920:	cbz	x19, 14b00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1074>
   14924:	str	x19, [x26, #80]
   14928:	ldr	x1, [x19, #184]
   1492c:	cbz	x1, 146b0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xc24>
   14930:	ldr	x0, [x19, #192]
   14934:	blr	x1
   14938:	str	x27, [x26, #80]
   1493c:	mov	w0, #0x1                   	// #1
   14940:	ldaxr	w1, [x21]
   14944:	cbnz	w1, 14950 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xec4>
   14948:	stxr	w2, w0, [x21]
   1494c:	cbnz	w2, 14940 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xeb4>
   14950:	cmp	w1, #0x0
   14954:	cset	w23, eq  // eq = none
   14958:	b.ne	1473c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcb0>  // b.any
   1495c:	mov	w23, #0x0                   	// #0
   14960:	mov	w24, #0x0                   	// #0
   14964:	ldr	x22, [x19, #72]
   14968:	cbz	x22, 14998 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf0c>
   1496c:	ldr	x0, [x19]
   14970:	cbz	x0, 14af0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1064>
   14974:	mov	x0, x19
   14978:	bl	129c0 <GOMP_single_copy_end@@GOMP_1.0+0x93c>
   1497c:	ldr	x0, [x19, #48]
   14980:	mov	x22, #0x0                   	// #0
   14984:	cbz	x0, 14998 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf0c>
   14988:	mov	x1, x20
   1498c:	mov	x0, x19
   14990:	bl	12ef4 <GOMP_single_copy_end@@GOMP_1.0+0xe70>
   14994:	mov	x22, x0
   14998:	ldr	x25, [x19]
   1499c:	cbz	x25, 149dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf50>
   149a0:	ldrb	w0, [x19, #207]
   149a4:	cbnz	w0, 1474c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xcc0>
   149a8:	ldr	x0, [x25, #8]
   149ac:	cbnz	x0, 147ac <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd20>
   149b0:	add	x1, x19, #0x70
   149b4:	ldr	x2, [x19, #120]
   149b8:	ldr	x0, [x19, #112]
   149bc:	str	x0, [x2]
   149c0:	ldr	x2, [x19, #120]
   149c4:	str	x2, [x0, #8]
   149c8:	ldr	x0, [x25, #24]
   149cc:	cmp	x1, x0
   149d0:	b.eq	147d8 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xd4c>  // b.none
   149d4:	str	xzr, [x19, #112]
   149d8:	str	xzr, [x19, #120]
   149dc:	ldr	x1, [x19, #8]
   149e0:	cbnz	x1, 14844 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdb8>
   149e4:	ldr	x0, [x19, #24]
   149e8:	cbz	x0, 14a00 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf74>
   149ec:	stur	xzr, [x0, #-112]
   149f0:	ldr	x0, [x0]
   149f4:	ldr	x1, [x19, #24]
   149f8:	cmp	x0, x1
   149fc:	b.ne	149ec <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf60>  // b.any
   14a00:	ldr	x25, [x19, #40]
   14a04:	cbz	x25, 148a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe14>
   14a08:	ldr	x0, [x25, #8]
   14a0c:	cbnz	x0, 14854 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xdc8>
   14a10:	add	x2, x19, #0x80
   14a14:	ldr	x1, [x19, #136]
   14a18:	ldr	x0, [x19, #128]
   14a1c:	str	x0, [x1]
   14a20:	ldr	x1, [x19, #136]
   14a24:	str	x1, [x0, #8]
   14a28:	ldr	x0, [x25, #24]
   14a2c:	mov	w1, #0x0                   	// #0
   14a30:	cmp	x2, x0
   14a34:	b.eq	14874 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xde8>  // b.none
   14a38:	str	xzr, [x19, #128]
   14a3c:	str	xzr, [x19, #136]
   14a40:	ldr	x0, [x25, #56]
   14a44:	cmp	x0, #0x1
   14a48:	b.ls	14894 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe08>  // b.plast
   14a4c:	sub	x0, x0, #0x1
   14a50:	str	x0, [x25, #56]
   14a54:	cbz	w1, 148a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe14>
   14a58:	ldrb	w0, [x25, #48]
   14a5c:	cbz	w0, 148a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe14>
   14a60:	strb	wzr, [x25, #48]
   14a64:	add	x0, x25, #0x34
   14a68:	ldr	w1, [x25, #52]
   14a6c:	add	w2, w1, #0x1
   14a70:	and	w2, w2, #0x7fffffff
   14a74:	ldxr	w3, [x0]
   14a78:	cmp	w3, w1
   14a7c:	b.ne	14a88 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xffc>  // b.any
   14a80:	stlxr	w4, w2, [x0]
   14a84:	cmp	w4, #0x0
   14a88:	mov	w1, w3
   14a8c:	b.ne	14a6c <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xfe0>  // b.any
   14a90:	tbz	w3, #31, 148a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe14>
   14a94:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   14a98:	b	148a0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe14>
   14a9c:	str	w28, [x20, #132]
   14aa0:	ldxr	w0, [x21]
   14aa4:	stlxr	w1, wzr, [x21]
   14aa8:	cbnz	w1, 14aa0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1014>
   14aac:	tbnz	w0, #31, 14ae4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1058>
   14ab0:	mov	w1, #0x0                   	// #0
   14ab4:	add	x0, x20, #0x80
   14ab8:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   14abc:	mov	w0, #0x1                   	// #1
   14ac0:	ldaxr	w1, [x21]
   14ac4:	cbnz	w1, 14ad0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1044>
   14ac8:	stxr	w2, w0, [x21]
   14acc:	cbnz	w2, 14ac0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1034>
   14ad0:	cmp	w1, #0x0
   14ad4:	b.eq	148e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe58>  // b.none
   14ad8:	mov	x0, x21
   14adc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14ae0:	b	148e4 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xe58>
   14ae4:	mov	x0, x21
   14ae8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14aec:	b	14ab0 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0x1024>
   14af0:	ldr	x0, [x19, #48]
   14af4:	mov	x22, #0x0                   	// #0
   14af8:	cbnz	x0, 14988 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xefc>
   14afc:	b	149dc <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xf50>
   14b00:	ldp	x23, x24, [sp, #48]
   14b04:	ldp	x25, x26, [sp, #64]
   14b08:	ldp	x19, x20, [sp, #16]
   14b0c:	ldp	x21, x22, [sp, #32]
   14b10:	ldp	x27, x28, [sp, #80]
   14b14:	ldp	x29, x30, [sp], #128
   14b18:	ret

0000000000014b1c <GOMP_taskwait@@GOMP_2.0>:
   14b1c:	stp	x29, x30, [sp, #-160]!
   14b20:	mov	x29, sp
   14b24:	stp	x19, x20, [sp, #16]
   14b28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14b2c:	ldr	x0, [x0, #4016]
   14b30:	mrs	x1, tpidr_el0
   14b34:	add	x0, x1, x0
   14b38:	ldr	x20, [x0, #80]
   14b3c:	cbz	x20, 14b80 <GOMP_taskwait@@GOMP_2.0+0x64>
   14b40:	stp	x25, x26, [sp, #64]
   14b44:	stp	x27, x28, [sp, #80]
   14b48:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14b4c:	ldr	x0, [x0, #4016]
   14b50:	add	x0, x1, x0
   14b54:	ldr	x25, [x0, #16]
   14b58:	add	x27, x20, #0x8
   14b5c:	ldr	x0, [x20, #8]
   14b60:	cbnz	x0, 14b8c <GOMP_taskwait@@GOMP_2.0+0x70>
   14b64:	add	x0, x20, #0x18
   14b68:	ldar	x0, [x0]
   14b6c:	cmp	x0, #0x0
   14b70:	cset	w26, eq  // eq = none
   14b74:	cbz	w26, 14b9c <GOMP_taskwait@@GOMP_2.0+0x80>
   14b78:	ldp	x25, x26, [sp, #64]
   14b7c:	ldp	x27, x28, [sp, #80]
   14b80:	ldp	x19, x20, [sp, #16]
   14b84:	ldp	x29, x30, [sp], #160
   14b88:	ret
   14b8c:	ldar	x0, [x27]
   14b90:	cmp	x0, #0x0
   14b94:	cset	w26, eq  // eq = none
   14b98:	b	14b74 <GOMP_taskwait@@GOMP_2.0+0x58>
   14b9c:	stp	x21, x22, [sp, #32]
   14ba0:	stp	x23, x24, [sp, #48]
   14ba4:	stp	xzr, xzr, [sp, #136]
   14ba8:	str	xzr, [sp, #152]
   14bac:	strb	wzr, [sp, #135]
   14bb0:	add	x21, x25, #0x500
   14bb4:	mov	w0, #0x1                   	// #1
   14bb8:	ldaxr	w1, [x21]
   14bbc:	cbnz	w1, 14bc8 <GOMP_taskwait@@GOMP_2.0+0xac>
   14bc0:	stxr	w2, w0, [x21]
   14bc4:	cbnz	w2, 14bb8 <GOMP_taskwait@@GOMP_2.0+0x9c>
   14bc8:	cmp	w1, #0x0
   14bcc:	b.ne	14bf8 <GOMP_taskwait@@GOMP_2.0+0xdc>  // b.any
   14bd0:	mov	w24, #0x0                   	// #0
   14bd4:	mov	x22, #0x0                   	// #0
   14bd8:	add	x0, sp, #0x87
   14bdc:	str	x0, [sp, #112]
   14be0:	add	x0, sp, #0x98
   14be4:	str	x0, [sp, #104]
   14be8:	add	x28, sp, #0x88
   14bec:	add	x0, x28, #0x10
   14bf0:	str	x0, [sp, #120]
   14bf4:	b	14ebc <GOMP_taskwait@@GOMP_2.0+0x3a0>
   14bf8:	mov	x0, x21
   14bfc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14c00:	b	14bd0 <GOMP_taskwait@@GOMP_2.0+0xb4>
   14c04:	str	xzr, [x20, #64]
   14c08:	ldxr	w0, [x21]
   14c0c:	stlxr	w1, wzr, [x21]
   14c10:	cbnz	w1, 14c08 <GOMP_taskwait@@GOMP_2.0+0xec>
   14c14:	tbnz	w0, #31, 14c40 <GOMP_taskwait@@GOMP_2.0+0x124>
   14c18:	cbz	x22, 150ac <GOMP_taskwait@@GOMP_2.0+0x590>
   14c1c:	ldr	x0, [x22, #56]
   14c20:	cbnz	x0, 14c4c <GOMP_taskwait@@GOMP_2.0+0x130>
   14c24:	mov	x0, x22
   14c28:	bl	8900 <free@plt>
   14c2c:	ldp	x21, x22, [sp, #32]
   14c30:	ldp	x23, x24, [sp, #48]
   14c34:	ldp	x25, x26, [sp, #64]
   14c38:	ldp	x27, x28, [sp, #80]
   14c3c:	b	14b80 <GOMP_taskwait@@GOMP_2.0+0x64>
   14c40:	mov	x0, x21
   14c44:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14c48:	b	14c18 <GOMP_taskwait@@GOMP_2.0+0xfc>
   14c4c:	bl	8900 <free@plt>
   14c50:	b	14c24 <GOMP_taskwait@@GOMP_2.0+0x108>
   14c54:	mov	x2, x25
   14c58:	mov	x1, x20
   14c5c:	mov	x0, x19
   14c60:	bl	12af0 <GOMP_single_copy_end@@GOMP_1.0+0xa6c>
   14c64:	and	w0, w0, #0xff
   14c68:	cbz	w0, 14efc <GOMP_taskwait@@GOMP_2.0+0x3e0>
   14c6c:	cbz	x22, 14f80 <GOMP_taskwait@@GOMP_2.0+0x464>
   14c70:	ldr	x0, [x22, #56]
   14c74:	cbnz	x0, 14c84 <GOMP_taskwait@@GOMP_2.0+0x168>
   14c78:	mov	x0, x22
   14c7c:	bl	8900 <free@plt>
   14c80:	b	14f80 <GOMP_taskwait@@GOMP_2.0+0x464>
   14c84:	bl	8900 <free@plt>
   14c88:	b	14c78 <GOMP_taskwait@@GOMP_2.0+0x15c>
   14c8c:	strb	wzr, [sp, #137]
   14c90:	str	wzr, [sp, #152]
   14c94:	str	x28, [x20, #64]
   14c98:	b	14ef0 <GOMP_taskwait@@GOMP_2.0+0x3d4>
   14c9c:	mov	x0, x21
   14ca0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   14ca4:	b	14f0c <GOMP_taskwait@@GOMP_2.0+0x3f0>
   14ca8:	mov	w1, w24
   14cac:	add	x0, x25, #0x80
   14cb0:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   14cb4:	b	14f10 <GOMP_taskwait@@GOMP_2.0+0x3f4>
   14cb8:	bl	8900 <free@plt>
   14cbc:	b	14f1c <GOMP_taskwait@@GOMP_2.0+0x400>
   14cc0:	ldr	x0, [x19, #192]
   14cc4:	bl	2216c <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   14cc8:	and	w0, w0, #0xff
   14ccc:	cbz	w0, 14f4c <GOMP_taskwait@@GOMP_2.0+0x430>
   14cd0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14cd4:	ldr	x0, [x0, #4016]
   14cd8:	mrs	x1, tpidr_el0
   14cdc:	add	x0, x1, x0
   14ce0:	str	x20, [x0, #80]
   14ce4:	mov	w0, #0x1                   	// #1
   14ce8:	ldaxr	w1, [x21]
   14cec:	cbnz	w1, 14cf8 <GOMP_taskwait@@GOMP_2.0+0x1dc>
   14cf0:	stxr	w2, w0, [x21]
   14cf4:	cbnz	w2, 14ce8 <GOMP_taskwait@@GOMP_2.0+0x1cc>
   14cf8:	cmp	w1, #0x0
   14cfc:	b.ne	14d2c <GOMP_taskwait@@GOMP_2.0+0x210>  // b.any
   14d00:	mov	w0, #0x4                   	// #4
   14d04:	str	w0, [x19, #200]
   14d08:	ldr	x0, [x19, #192]
   14d0c:	ldr	w1, [x0, #44]
   14d10:	cmp	w1, #0x5
   14d14:	b.eq	14d38 <GOMP_taskwait@@GOMP_2.0+0x21c>  // b.none
   14d18:	mov	w1, #0x4                   	// #4
   14d1c:	str	w1, [x0, #44]
   14d20:	mov	w24, #0x0                   	// #0
   14d24:	mov	x19, #0x0                   	// #0
   14d28:	b	14eb8 <GOMP_taskwait@@GOMP_2.0+0x39c>
   14d2c:	mov	x0, x21
   14d30:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14d34:	b	14d00 <GOMP_taskwait@@GOMP_2.0+0x1e4>
   14d38:	mov	x1, x19
   14d3c:	mov	x0, x25
   14d40:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   14d44:	mov	w24, #0x0                   	// #0
   14d48:	mov	x19, #0x0                   	// #0
   14d4c:	b	14eb8 <GOMP_taskwait@@GOMP_2.0+0x39c>
   14d50:	ldr	w1, [sp, #152]
   14d54:	tst	x1, #0x7fffffff
   14d58:	b.eq	14dac <GOMP_taskwait@@GOMP_2.0+0x290>  // b.none
   14d5c:	sub	w2, w1, #0x1
   14d60:	ldr	x3, [sp, #104]
   14d64:	ldaxr	w0, [x3]
   14d68:	cmp	w0, w1
   14d6c:	b.ne	14d78 <GOMP_taskwait@@GOMP_2.0+0x25c>  // b.any
   14d70:	stxr	w4, w2, [x3]
   14d74:	cmp	w4, #0x0
   14d78:	mov	w1, w0
   14d7c:	b.ne	14d54 <GOMP_taskwait@@GOMP_2.0+0x238>  // b.any
   14d80:	mov	w0, #0x1                   	// #1
   14d84:	ldaxr	w1, [x21]
   14d88:	cbnz	w1, 14d94 <GOMP_taskwait@@GOMP_2.0+0x278>
   14d8c:	stxr	w2, w0, [x21]
   14d90:	cbnz	w2, 14d84 <GOMP_taskwait@@GOMP_2.0+0x268>
   14d94:	cmp	w1, #0x0
   14d98:	mov	w24, #0x0                   	// #0
   14d9c:	b.eq	14eb8 <GOMP_taskwait@@GOMP_2.0+0x39c>  // b.none
   14da0:	mov	x0, x21
   14da4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14da8:	b	14eb8 <GOMP_taskwait@@GOMP_2.0+0x39c>
   14dac:	ldr	x0, [sp, #120]
   14db0:	bl	1b504 <omp_get_num_procs@@OMP_1.0+0x90>
   14db4:	b	14d80 <GOMP_taskwait@@GOMP_2.0+0x264>
   14db8:	mov	x0, x21
   14dbc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   14dc0:	mov	w24, #0x0                   	// #0
   14dc4:	b	14f80 <GOMP_taskwait@@GOMP_2.0+0x464>
   14dc8:	ldr	x0, [x20, #8]
   14dcc:	cbnz	x0, 14e00 <GOMP_taskwait@@GOMP_2.0+0x2e4>
   14dd0:	add	x1, x19, #0x70
   14dd4:	ldr	x2, [x19, #120]
   14dd8:	ldr	x0, [x19, #112]
   14ddc:	str	x0, [x2]
   14de0:	ldr	x2, [x19, #120]
   14de4:	str	x2, [x0, #8]
   14de8:	ldr	x0, [x20, #24]
   14dec:	cmp	x1, x0
   14df0:	b.eq	14e14 <GOMP_taskwait@@GOMP_2.0+0x2f8>  // b.none
   14df4:	str	xzr, [x19, #112]
   14df8:	str	xzr, [x19, #120]
   14dfc:	b	14fbc <GOMP_taskwait@@GOMP_2.0+0x4a0>
   14e00:	add	x2, x19, #0x70
   14e04:	mov	x1, x27
   14e08:	mov	w0, #0x1                   	// #1
   14e0c:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   14e10:	b	14df4 <GOMP_taskwait@@GOMP_2.0+0x2d8>
   14e14:	ldr	x0, [x19, #112]
   14e18:	cmp	x1, x0
   14e1c:	csel	x0, x0, xzr, ne  // ne = any
   14e20:	str	x0, [x20, #24]
   14e24:	b	14df4 <GOMP_taskwait@@GOMP_2.0+0x2d8>
   14e28:	add	x0, x19, #0x8
   14e2c:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   14e30:	str	xzr, [x19, #8]
   14e34:	b	14fe0 <GOMP_taskwait@@GOMP_2.0+0x4c4>
   14e38:	add	x2, x19, #0x80
   14e3c:	add	x1, x23, #0x8
   14e40:	mov	w0, #0x2                   	// #2
   14e44:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   14e48:	ldr	x0, [x23, #8]
   14e4c:	cmp	x0, #0x0
   14e50:	cset	w1, eq  // eq = none
   14e54:	b	15018 <GOMP_taskwait@@GOMP_2.0+0x4fc>
   14e58:	ldr	x0, [x19, #128]
   14e5c:	cmp	x2, x0
   14e60:	b.eq	14e6c <GOMP_taskwait@@GOMP_2.0+0x350>  // b.none
   14e64:	str	x0, [x23, #24]
   14e68:	b	15018 <GOMP_taskwait@@GOMP_2.0+0x4fc>
   14e6c:	str	xzr, [x23, #24]
   14e70:	mov	w1, #0x1                   	// #1
   14e74:	b	15018 <GOMP_taskwait@@GOMP_2.0+0x4fc>
   14e78:	add	x0, x23, #0x38
   14e7c:	stlr	xzr, [x0]
   14e80:	b	15034 <GOMP_taskwait@@GOMP_2.0+0x518>
   14e84:	ldr	w0, [x25, #1320]
   14e88:	sub	w0, w0, #0x1
   14e8c:	str	w0, [x25, #1320]
   14e90:	cmp	x22, #0x1
   14e94:	b.ls	14eb8 <GOMP_taskwait@@GOMP_2.0+0x39c>  // b.plast
   14e98:	ldr	w0, [x25]
   14e9c:	ldr	w1, [x25, #1328]
   14ea0:	sub	w0, w0, w1
   14ea4:	ldrb	w1, [x20, #204]
   14ea8:	eor	w1, w1, #0x1
   14eac:	sub	w24, w0, w1
   14eb0:	cmp	x22, w24, sxtw
   14eb4:	csel	w24, w22, w24, cc  // cc = lo, ul, last
   14eb8:	mov	x22, x19
   14ebc:	ldr	x0, [x20, #8]
   14ec0:	cbnz	x0, 1507c <GOMP_taskwait@@GOMP_2.0+0x560>
   14ec4:	ldr	x0, [x20, #24]
   14ec8:	cbz	x0, 14c04 <GOMP_taskwait@@GOMP_2.0+0xe8>
   14ecc:	mov	w0, #0x1                   	// #1
   14ed0:	strb	w0, [sp, #135]
   14ed4:	ldr	x19, [x20, #24]
   14ed8:	sub	x19, x19, #0x70
   14edc:	ldr	w0, [x19, #200]
   14ee0:	cmp	w0, #0x2
   14ee4:	b.eq	14c54 <GOMP_taskwait@@GOMP_2.0+0x138>  // b.none
   14ee8:	ldr	x0, [x20, #64]
   14eec:	cbz	x0, 14c8c <GOMP_taskwait@@GOMP_2.0+0x170>
   14ef0:	mov	w0, #0x1                   	// #1
   14ef4:	strb	w0, [sp, #136]
   14ef8:	mov	x19, #0x0                   	// #0
   14efc:	ldxr	w0, [x21]
   14f00:	stlxr	w1, wzr, [x21]
   14f04:	cbnz	w1, 14efc <GOMP_taskwait@@GOMP_2.0+0x3e0>
   14f08:	tbnz	w0, #31, 14c9c <GOMP_taskwait@@GOMP_2.0+0x180>
   14f0c:	cbnz	w24, 14ca8 <GOMP_taskwait@@GOMP_2.0+0x18c>
   14f10:	cbz	x22, 14f24 <GOMP_taskwait@@GOMP_2.0+0x408>
   14f14:	ldr	x0, [x22, #56]
   14f18:	cbnz	x0, 14cb8 <GOMP_taskwait@@GOMP_2.0+0x19c>
   14f1c:	mov	x0, x22
   14f20:	bl	8900 <free@plt>
   14f24:	cbz	x19, 14d50 <GOMP_taskwait@@GOMP_2.0+0x234>
   14f28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14f2c:	ldr	x0, [x0, #4016]
   14f30:	mrs	x1, tpidr_el0
   14f34:	add	x0, x1, x0
   14f38:	str	x19, [x0, #80]
   14f3c:	ldr	x1, [x19, #184]
   14f40:	cbz	x1, 14cc0 <GOMP_taskwait@@GOMP_2.0+0x1a4>
   14f44:	ldr	x0, [x19, #192]
   14f48:	blr	x1
   14f4c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   14f50:	ldr	x0, [x0, #4016]
   14f54:	mrs	x1, tpidr_el0
   14f58:	add	x0, x1, x0
   14f5c:	str	x20, [x0, #80]
   14f60:	mov	w0, #0x1                   	// #1
   14f64:	ldaxr	w1, [x21]
   14f68:	cbnz	w1, 14f74 <GOMP_taskwait@@GOMP_2.0+0x458>
   14f6c:	stxr	w2, w0, [x21]
   14f70:	cbnz	w2, 14f64 <GOMP_taskwait@@GOMP_2.0+0x448>
   14f74:	cmp	w1, #0x0
   14f78:	mov	w24, #0x0                   	// #0
   14f7c:	b.ne	14db8 <GOMP_taskwait@@GOMP_2.0+0x29c>  // b.any
   14f80:	ldr	x22, [x19, #72]
   14f84:	cbz	x22, 14fb4 <GOMP_taskwait@@GOMP_2.0+0x498>
   14f88:	ldr	x0, [x19]
   14f8c:	cbz	x0, 14f98 <GOMP_taskwait@@GOMP_2.0+0x47c>
   14f90:	mov	x0, x19
   14f94:	bl	129c0 <GOMP_single_copy_end@@GOMP_1.0+0x93c>
   14f98:	ldr	x0, [x19, #48]
   14f9c:	mov	x22, #0x0                   	// #0
   14fa0:	cbz	x0, 14fb4 <GOMP_taskwait@@GOMP_2.0+0x498>
   14fa4:	mov	x1, x25
   14fa8:	mov	x0, x19
   14fac:	bl	12ef4 <GOMP_single_copy_end@@GOMP_1.0+0xe70>
   14fb0:	mov	x22, x0
   14fb4:	ldrb	w0, [sp, #135]
   14fb8:	cbnz	w0, 14dc8 <GOMP_taskwait@@GOMP_2.0+0x2ac>
   14fbc:	ldr	x1, [x19, #8]
   14fc0:	cbnz	x1, 14e28 <GOMP_taskwait@@GOMP_2.0+0x30c>
   14fc4:	ldr	x0, [x19, #24]
   14fc8:	cbz	x0, 14fe0 <GOMP_taskwait@@GOMP_2.0+0x4c4>
   14fcc:	stur	xzr, [x0, #-112]
   14fd0:	ldr	x0, [x0]
   14fd4:	ldr	x1, [x19, #24]
   14fd8:	cmp	x0, x1
   14fdc:	b.ne	14fcc <GOMP_taskwait@@GOMP_2.0+0x4b0>  // b.any
   14fe0:	ldr	x23, [x19, #40]
   14fe4:	cbz	x23, 14e84 <GOMP_taskwait@@GOMP_2.0+0x368>
   14fe8:	ldr	x0, [x23, #8]
   14fec:	cbnz	x0, 14e38 <GOMP_taskwait@@GOMP_2.0+0x31c>
   14ff0:	add	x2, x19, #0x80
   14ff4:	ldr	x1, [x19, #136]
   14ff8:	ldr	x0, [x19, #128]
   14ffc:	str	x0, [x1]
   15000:	ldr	x1, [x19, #136]
   15004:	str	x1, [x0, #8]
   15008:	ldr	x0, [x23, #24]
   1500c:	mov	w1, w26
   15010:	cmp	x2, x0
   15014:	b.eq	14e58 <GOMP_taskwait@@GOMP_2.0+0x33c>  // b.none
   15018:	str	xzr, [x19, #128]
   1501c:	str	xzr, [x19, #136]
   15020:	ldr	x0, [x23, #56]
   15024:	cmp	x0, #0x1
   15028:	b.ls	14e78 <GOMP_taskwait@@GOMP_2.0+0x35c>  // b.plast
   1502c:	sub	x0, x0, #0x1
   15030:	str	x0, [x23, #56]
   15034:	cbz	w1, 14e84 <GOMP_taskwait@@GOMP_2.0+0x368>
   15038:	ldrb	w0, [x23, #48]
   1503c:	cbz	w0, 14e84 <GOMP_taskwait@@GOMP_2.0+0x368>
   15040:	strb	wzr, [x23, #48]
   15044:	add	x0, x23, #0x34
   15048:	ldr	w1, [x23, #52]
   1504c:	add	w2, w1, #0x1
   15050:	and	w2, w2, #0x7fffffff
   15054:	ldxr	w3, [x0]
   15058:	cmp	w3, w1
   1505c:	b.ne	15068 <GOMP_taskwait@@GOMP_2.0+0x54c>  // b.any
   15060:	stlxr	w4, w2, [x0]
   15064:	cmp	w4, #0x0
   15068:	mov	w1, w3
   1506c:	b.ne	1504c <GOMP_taskwait@@GOMP_2.0+0x530>  // b.any
   15070:	tbz	w3, #31, 14e84 <GOMP_taskwait@@GOMP_2.0+0x368>
   15074:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   15078:	b	14e84 <GOMP_taskwait@@GOMP_2.0+0x368>
   1507c:	ldr	x4, [sp, #112]
   15080:	add	x3, x25, #0x508
   15084:	mov	w2, #0x0                   	// #0
   15088:	mov	x1, x27
   1508c:	mov	w0, #0x1                   	// #1
   15090:	bl	27770 <acc_set_cuda_stream@@OACC_2.0+0x2bc>
   15094:	mov	x19, x0
   15098:	cbnz	x0, 14edc <GOMP_taskwait@@GOMP_2.0+0x3c0>
   1509c:	ldr	x0, [x20, #8]
   150a0:	ldr	x19, [x0, #8]
   150a4:	sub	x19, x19, #0x70
   150a8:	b	14edc <GOMP_taskwait@@GOMP_2.0+0x3c0>
   150ac:	ldp	x21, x22, [sp, #32]
   150b0:	ldp	x23, x24, [sp, #48]
   150b4:	ldp	x25, x26, [sp, #64]
   150b8:	ldp	x27, x28, [sp, #80]
   150bc:	b	14b80 <GOMP_taskwait@@GOMP_2.0+0x64>
   150c0:	stp	x29, x30, [sp, #-240]!
   150c4:	mov	x29, sp
   150c8:	stp	x19, x20, [sp, #16]
   150cc:	stp	x23, x24, [sp, #48]
   150d0:	stp	x25, x26, [sp, #64]
   150d4:	stp	x27, x28, [sp, #80]
   150d8:	mov	x19, x0
   150dc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   150e0:	ldr	x1, [x1, #4016]
   150e4:	mrs	x0, tpidr_el0
   150e8:	add	x0, x0, x1
   150ec:	ldr	x23, [x0, #80]
   150f0:	ldr	x28, [x0, #16]
   150f4:	ldr	x0, [x19]
   150f8:	ldr	x27, [x19, #8]
   150fc:	cbz	x0, 15178 <GOMP_taskwait@@GOMP_2.0+0x65c>
   15100:	str	x0, [sp, #104]
   15104:	add	x1, x28, #0x500
   15108:	str	x1, [sp, #128]
   1510c:	mov	w2, #0x1                   	// #1
   15110:	mov	x3, x1
   15114:	ldaxr	w1, [x3]
   15118:	cbnz	w1, 15124 <GOMP_taskwait@@GOMP_2.0+0x608>
   1511c:	stxr	w4, w2, [x3]
   15120:	cbnz	w4, 15114 <GOMP_taskwait@@GOMP_2.0+0x5f8>
   15124:	cmp	w1, #0x0
   15128:	b.ne	1515c <GOMP_taskwait@@GOMP_2.0+0x640>  // b.any
   1512c:	stp	x21, x22, [sp, #32]
   15130:	str	x0, [sp, #112]
   15134:	mov	x26, #0x2                   	// #2
   15138:	add	x26, x19, x26, lsl #3
   1513c:	mov	x21, #0x0                   	// #0
   15140:	mov	x22, #0x0                   	// #0
   15144:	add	x0, sp, #0xc8
   15148:	str	x0, [sp, #120]
   1514c:	mov	w24, #0x1                   	// #1
   15150:	add	x0, sp, #0x98
   15154:	str	x0, [sp, #136]
   15158:	b	15394 <GOMP_taskwait@@GOMP_2.0+0x878>
   1515c:	str	x0, [sp, #112]
   15160:	mov	x26, #0x2                   	// #2
   15164:	ldr	x0, [sp, #128]
   15168:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1516c:	mov	x0, x27
   15170:	ldr	x27, [sp, #104]
   15174:	b	151bc <GOMP_taskwait@@GOMP_2.0+0x6a0>
   15178:	ldr	x0, [x19, #16]
   1517c:	ldr	x1, [x19, #24]
   15180:	add	x0, x0, x1
   15184:	ldr	x1, [x19, #32]
   15188:	add	x1, x1, x0
   1518c:	str	x1, [sp, #112]
   15190:	add	x1, x28, #0x500
   15194:	str	x1, [sp, #128]
   15198:	mov	w2, #0x1                   	// #1
   1519c:	mov	x3, x1
   151a0:	ldaxr	w1, [x3]
   151a4:	cbnz	w1, 151b0 <GOMP_taskwait@@GOMP_2.0+0x694>
   151a8:	stxr	w4, w2, [x3]
   151ac:	cbnz	w4, 151a0 <GOMP_taskwait@@GOMP_2.0+0x684>
   151b0:	cmp	w1, #0x0
   151b4:	mov	x26, #0x5                   	// #5
   151b8:	b.ne	151d0 <GOMP_taskwait@@GOMP_2.0+0x6b4>  // b.any
   151bc:	cbz	x27, 15400 <GOMP_taskwait@@GOMP_2.0+0x8e4>
   151c0:	stp	x21, x22, [sp, #32]
   151c4:	str	x27, [sp, #104]
   151c8:	mov	x27, x0
   151cc:	b	15138 <GOMP_taskwait@@GOMP_2.0+0x61c>
   151d0:	str	x27, [sp, #104]
   151d4:	mov	x27, x0
   151d8:	b	15164 <GOMP_taskwait@@GOMP_2.0+0x648>
   151dc:	ldr	x1, [x0, #8]
   151e0:	cmp	x1, #0x1
   151e4:	b.eq	151f8 <GOMP_taskwait@@GOMP_2.0+0x6dc>  // b.none
   151e8:	sub	x2, x1, #0x2
   151ec:	cmp	x2, #0x2
   151f0:	b.hi	15204 <GOMP_taskwait@@GOMP_2.0+0x6e8>  // b.pmore
   151f4:	strb	wzr, [sp, #232]
   151f8:	ldr	x0, [x0]
   151fc:	str	x0, [sp, #200]
   15200:	b	153b4 <GOMP_taskwait@@GOMP_2.0+0x898>
   15204:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
   15208:	add	x0, x0, #0xfc0
   1520c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   15210:	ldr	w0, [x20, #88]
   15214:	str	w0, [sp, #152]
   15218:	ldr	x1, [sp, #136]
   1521c:	add	x0, x23, #0x8
   15220:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   15224:	ldr	x1, [x0, #16]
   15228:	cbz	x1, 15264 <GOMP_taskwait@@GOMP_2.0+0x748>
   1522c:	ldr	x2, [x20, #120]
   15230:	ldr	x3, [x20, #112]
   15234:	str	x3, [x2]
   15238:	ldr	x2, [x20, #112]
   1523c:	ldr	x3, [x20, #120]
   15240:	str	x3, [x2, #8]
   15244:	str	x1, [x20, #120]
   15248:	ldr	x2, [x1]
   1524c:	str	x2, [x20, #112]
   15250:	str	x25, [x1]
   15254:	ldr	x1, [x20, #112]
   15258:	str	x25, [x1, #8]
   1525c:	str	x25, [x0, #16]
   15260:	b	152e4 <GOMP_taskwait@@GOMP_2.0+0x7c8>
   15264:	ldr	x1, [x0, #8]
   15268:	cmp	x25, x1
   1526c:	b.eq	1525c <GOMP_taskwait@@GOMP_2.0+0x740>  // b.none
   15270:	ldr	x2, [x20, #120]
   15274:	ldr	x1, [x20, #112]
   15278:	str	x1, [x2]
   1527c:	ldr	x2, [x20, #120]
   15280:	str	x2, [x1, #8]
   15284:	ldr	x1, [x0, #8]
   15288:	ldr	x1, [x1, #8]
   1528c:	str	x1, [x20, #120]
   15290:	ldr	x1, [x0, #8]
   15294:	str	x1, [x20, #112]
   15298:	str	x25, [x0, #8]
   1529c:	ldr	x1, [x20, #120]
   152a0:	str	x25, [x1]
   152a4:	ldr	x1, [x20, #112]
   152a8:	str	x25, [x1, #8]
   152ac:	b	1525c <GOMP_taskwait@@GOMP_2.0+0x740>
   152b0:	ldr	x1, [x20, #120]
   152b4:	ldr	x2, [x20, #112]
   152b8:	str	x2, [x1]
   152bc:	ldr	x1, [x20, #112]
   152c0:	ldr	x2, [x20, #120]
   152c4:	str	x2, [x1, #8]
   152c8:	str	x0, [x20, #120]
   152cc:	ldr	x1, [x0]
   152d0:	str	x1, [x20, #112]
   152d4:	str	x25, [x0]
   152d8:	ldr	x0, [x20, #112]
   152dc:	str	x25, [x0, #8]
   152e0:	str	x25, [x23, #32]
   152e4:	ldr	x19, [x19, #8]
   152e8:	cbz	x19, 15384 <GOMP_taskwait@@GOMP_2.0+0x868>
   152ec:	ldrb	w0, [sp, #232]
   152f0:	cbz	w0, 152fc <GOMP_taskwait@@GOMP_2.0+0x7e0>
   152f4:	ldrb	w0, [x19, #32]
   152f8:	cbnz	w0, 152e4 <GOMP_taskwait@@GOMP_2.0+0x7c8>
   152fc:	ldr	x20, [x19, #24]
   15300:	ldrb	w0, [x20, #207]
   15304:	cbnz	w0, 152e4 <GOMP_taskwait@@GOMP_2.0+0x7c8>
   15308:	strb	w24, [x20, #207]
   1530c:	add	x21, x21, #0x1
   15310:	ldr	x0, [x20, #80]
   15314:	cbnz	x0, 152e4 <GOMP_taskwait@@GOMP_2.0+0x7c8>
   15318:	ldr	w0, [x20, #200]
   1531c:	cmp	w0, #0x2
   15320:	b.ne	152e4 <GOMP_taskwait@@GOMP_2.0+0x7c8>  // b.any
   15324:	add	x25, x20, #0x70
   15328:	ldr	x0, [x23, #8]
   1532c:	cbnz	x0, 15210 <GOMP_taskwait@@GOMP_2.0+0x6f4>
   15330:	ldr	x0, [x23, #32]
   15334:	cbnz	x0, 152b0 <GOMP_taskwait@@GOMP_2.0+0x794>
   15338:	ldr	x0, [x23, #24]
   1533c:	cmp	x25, x0
   15340:	b.eq	152e0 <GOMP_taskwait@@GOMP_2.0+0x7c4>  // b.none
   15344:	ldr	x1, [x20, #120]
   15348:	ldr	x0, [x20, #112]
   1534c:	str	x0, [x1]
   15350:	ldr	x1, [x20, #120]
   15354:	str	x1, [x0, #8]
   15358:	ldr	x1, [x23, #24]
   1535c:	ldr	x1, [x1, #8]
   15360:	str	x1, [x20, #120]
   15364:	ldr	x1, [x23, #24]
   15368:	str	x1, [x20, #112]
   1536c:	str	x25, [x23, #24]
   15370:	ldr	x0, [x20, #120]
   15374:	str	x25, [x0]
   15378:	ldr	x0, [x20, #112]
   1537c:	str	x25, [x0, #8]
   15380:	b	152e0 <GOMP_taskwait@@GOMP_2.0+0x7c4>
   15384:	add	x22, x22, #0x1
   15388:	ldr	x0, [sp, #104]
   1538c:	cmp	x22, x0
   15390:	b.eq	153cc <GOMP_taskwait@@GOMP_2.0+0x8b0>  // b.none
   15394:	ldr	x0, [x26, x22, lsl #3]
   15398:	str	x0, [sp, #200]
   1539c:	cmp	x22, x27
   153a0:	cset	w1, cs  // cs = hs, nlast
   153a4:	strb	w1, [sp, #232]
   153a8:	ldr	x1, [sp, #112]
   153ac:	cmp	x1, x22
   153b0:	b.ls	151dc <GOMP_taskwait@@GOMP_2.0+0x6c0>  // b.plast
   153b4:	ldr	x1, [sp, #120]
   153b8:	ldr	x0, [x23, #56]
   153bc:	bl	120d0 <GOMP_single_copy_end@@GOMP_1.0+0x4c>
   153c0:	mov	x19, x0
   153c4:	cbnz	x0, 152ec <GOMP_taskwait@@GOMP_2.0+0x7d0>
   153c8:	b	15384 <GOMP_taskwait@@GOMP_2.0+0x868>
   153cc:	cbz	x21, 153fc <GOMP_taskwait@@GOMP_2.0+0x8e0>
   153d0:	stp	xzr, xzr, [sp, #176]
   153d4:	str	xzr, [sp, #192]
   153d8:	str	x21, [sp, #184]
   153dc:	add	x0, sp, #0xb0
   153e0:	str	x0, [x23, #64]
   153e4:	mov	w21, #0x0                   	// #0
   153e8:	mov	x20, #0x0                   	// #0
   153ec:	add	x24, sp, #0x98
   153f0:	add	x22, sp, #0xc0
   153f4:	mov	x25, x22
   153f8:	b	156d4 <GOMP_taskwait@@GOMP_2.0+0xbb8>
   153fc:	ldp	x21, x22, [sp, #32]
   15400:	ldr	x1, [sp, #128]
   15404:	ldxr	w0, [x1]
   15408:	stlxr	w2, wzr, [x1]
   1540c:	cbnz	w2, 15404 <GOMP_taskwait@@GOMP_2.0+0x8e8>
   15410:	tbnz	w0, #31, 1542c <GOMP_taskwait@@GOMP_2.0+0x910>
   15414:	ldp	x19, x20, [sp, #16]
   15418:	ldp	x23, x24, [sp, #48]
   1541c:	ldp	x25, x26, [sp, #64]
   15420:	ldp	x27, x28, [sp, #80]
   15424:	ldp	x29, x30, [sp], #240
   15428:	ret
   1542c:	ldr	x0, [sp, #128]
   15430:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   15434:	b	15414 <GOMP_taskwait@@GOMP_2.0+0x8f8>
   15438:	str	xzr, [x23, #64]
   1543c:	ldr	x1, [sp, #128]
   15440:	ldxr	w0, [x1]
   15444:	stlxr	w2, wzr, [x1]
   15448:	cbnz	w2, 15440 <GOMP_taskwait@@GOMP_2.0+0x924>
   1544c:	tbnz	w0, #31, 1546c <GOMP_taskwait@@GOMP_2.0+0x950>
   15450:	cbz	x20, 158d0 <GOMP_taskwait@@GOMP_2.0+0xdb4>
   15454:	ldr	x0, [x20, #56]
   15458:	cbnz	x0, 15478 <GOMP_taskwait@@GOMP_2.0+0x95c>
   1545c:	mov	x0, x20
   15460:	bl	8900 <free@plt>
   15464:	ldp	x21, x22, [sp, #32]
   15468:	b	15414 <GOMP_taskwait@@GOMP_2.0+0x8f8>
   1546c:	ldr	x0, [sp, #128]
   15470:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   15474:	b	15450 <GOMP_taskwait@@GOMP_2.0+0x934>
   15478:	bl	8900 <free@plt>
   1547c:	b	1545c <GOMP_taskwait@@GOMP_2.0+0x940>
   15480:	mov	x4, x24
   15484:	mov	x3, #0x0                   	// #0
   15488:	mov	w2, #0x3e7                 	// #999
   1548c:	mov	x1, x26
   15490:	mov	w0, #0x1                   	// #1
   15494:	bl	27770 <acc_set_cuda_stream@@OACC_2.0+0x2bc>
   15498:	mov	x19, x0
   1549c:	cbnz	x0, 156f0 <GOMP_taskwait@@GOMP_2.0+0xbd4>
   154a0:	ldr	x0, [x23, #8]
   154a4:	ldr	x19, [x0, #8]
   154a8:	sub	x19, x19, #0x70
   154ac:	b	156f0 <GOMP_taskwait@@GOMP_2.0+0xbd4>
   154b0:	mov	x2, x28
   154b4:	mov	x1, x23
   154b8:	mov	x0, x19
   154bc:	bl	12af0 <GOMP_single_copy_end@@GOMP_1.0+0xa6c>
   154c0:	and	w0, w0, #0xff
   154c4:	cbz	w0, 15708 <GOMP_taskwait@@GOMP_2.0+0xbec>
   154c8:	cbz	x20, 15794 <GOMP_taskwait@@GOMP_2.0+0xc78>
   154cc:	ldr	x0, [x20, #56]
   154d0:	cbnz	x0, 154e0 <GOMP_taskwait@@GOMP_2.0+0x9c4>
   154d4:	mov	x0, x20
   154d8:	bl	8900 <free@plt>
   154dc:	b	15794 <GOMP_taskwait@@GOMP_2.0+0xc78>
   154e0:	bl	8900 <free@plt>
   154e4:	b	154d4 <GOMP_taskwait@@GOMP_2.0+0x9b8>
   154e8:	ldr	x0, [sp, #128]
   154ec:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   154f0:	b	1571c <GOMP_taskwait@@GOMP_2.0+0xc00>
   154f4:	mov	w1, w21
   154f8:	add	x0, x28, #0x80
   154fc:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   15500:	b	15720 <GOMP_taskwait@@GOMP_2.0+0xc04>
   15504:	bl	8900 <free@plt>
   15508:	b	1572c <GOMP_taskwait@@GOMP_2.0+0xc10>
   1550c:	ldr	x0, [x19, #192]
   15510:	bl	2216c <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   15514:	and	w0, w0, #0xff
   15518:	cbz	w0, 1575c <GOMP_taskwait@@GOMP_2.0+0xc40>
   1551c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15520:	ldr	x1, [x1, #4016]
   15524:	mrs	x0, tpidr_el0
   15528:	add	x0, x0, x1
   1552c:	str	x23, [x0, #80]
   15530:	mov	w0, #0x1                   	// #1
   15534:	ldr	x2, [sp, #128]
   15538:	ldaxr	w1, [x2]
   1553c:	cbnz	w1, 15548 <GOMP_taskwait@@GOMP_2.0+0xa2c>
   15540:	stxr	w3, w0, [x2]
   15544:	cbnz	w3, 15538 <GOMP_taskwait@@GOMP_2.0+0xa1c>
   15548:	cmp	w1, #0x0
   1554c:	b.ne	1557c <GOMP_taskwait@@GOMP_2.0+0xa60>  // b.any
   15550:	mov	w0, #0x4                   	// #4
   15554:	str	w0, [x19, #200]
   15558:	ldr	x0, [x19, #192]
   1555c:	ldr	w1, [x0, #44]
   15560:	cmp	w1, #0x5
   15564:	b.eq	15588 <GOMP_taskwait@@GOMP_2.0+0xa6c>  // b.none
   15568:	mov	w1, #0x4                   	// #4
   1556c:	str	w1, [x0, #44]
   15570:	mov	w21, #0x0                   	// #0
   15574:	mov	x20, #0x0                   	// #0
   15578:	b	156cc <GOMP_taskwait@@GOMP_2.0+0xbb0>
   1557c:	ldr	x0, [sp, #128]
   15580:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   15584:	b	15550 <GOMP_taskwait@@GOMP_2.0+0xa34>
   15588:	mov	x1, x19
   1558c:	mov	x0, x28
   15590:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   15594:	b	15570 <GOMP_taskwait@@GOMP_2.0+0xa54>
   15598:	ldr	w1, [sp, #192]
   1559c:	tst	x1, #0x7fffffff
   155a0:	b.eq	155f4 <GOMP_taskwait@@GOMP_2.0+0xad8>  // b.none
   155a4:	sub	w2, w1, #0x1
   155a8:	ldaxr	w0, [x22]
   155ac:	cmp	w0, w1
   155b0:	b.ne	155bc <GOMP_taskwait@@GOMP_2.0+0xaa0>  // b.any
   155b4:	stxr	w3, w2, [x22]
   155b8:	cmp	w3, #0x0
   155bc:	mov	w1, w0
   155c0:	b.ne	1559c <GOMP_taskwait@@GOMP_2.0+0xa80>  // b.any
   155c4:	mov	w0, #0x1                   	// #1
   155c8:	ldr	x2, [sp, #128]
   155cc:	ldaxr	w1, [x2]
   155d0:	cbnz	w1, 155dc <GOMP_taskwait@@GOMP_2.0+0xac0>
   155d4:	stxr	w3, w0, [x2]
   155d8:	cbnz	w3, 155cc <GOMP_taskwait@@GOMP_2.0+0xab0>
   155dc:	cmp	w1, #0x0
   155e0:	mov	w21, #0x0                   	// #0
   155e4:	b.eq	156c8 <GOMP_taskwait@@GOMP_2.0+0xbac>  // b.none
   155e8:	ldr	x0, [sp, #128]
   155ec:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   155f0:	b	156c8 <GOMP_taskwait@@GOMP_2.0+0xbac>
   155f4:	mov	x0, x25
   155f8:	bl	1b504 <omp_get_num_procs@@OMP_1.0+0x90>
   155fc:	b	155c4 <GOMP_taskwait@@GOMP_2.0+0xaa8>
   15600:	ldr	x0, [sp, #128]
   15604:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   15608:	mov	w21, #0x0                   	// #0
   1560c:	b	15794 <GOMP_taskwait@@GOMP_2.0+0xc78>
   15610:	add	x2, x19, #0x70
   15614:	mov	x1, x26
   15618:	mov	w0, #0x1                   	// #1
   1561c:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   15620:	b	15808 <GOMP_taskwait@@GOMP_2.0+0xcec>
   15624:	ldr	x0, [x19, #112]
   15628:	cmp	x1, x0
   1562c:	csel	x0, x0, xzr, ne  // ne = any
   15630:	str	x0, [x23, #24]
   15634:	b	15808 <GOMP_taskwait@@GOMP_2.0+0xcec>
   15638:	add	x0, x19, #0x8
   1563c:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   15640:	str	xzr, [x19, #8]
   15644:	b	15834 <GOMP_taskwait@@GOMP_2.0+0xd18>
   15648:	add	x2, x19, #0x80
   1564c:	add	x1, x26, #0x8
   15650:	mov	w0, #0x2                   	// #2
   15654:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   15658:	ldr	x0, [x26, #8]
   1565c:	cmp	x0, #0x0
   15660:	cset	w1, eq  // eq = none
   15664:	b	1586c <GOMP_taskwait@@GOMP_2.0+0xd50>
   15668:	ldr	x0, [x19, #128]
   1566c:	cmp	x2, x0
   15670:	b.eq	1567c <GOMP_taskwait@@GOMP_2.0+0xb60>  // b.none
   15674:	str	x0, [x26, #24]
   15678:	b	1586c <GOMP_taskwait@@GOMP_2.0+0xd50>
   1567c:	str	xzr, [x26, #24]
   15680:	mov	w1, #0x1                   	// #1
   15684:	b	1586c <GOMP_taskwait@@GOMP_2.0+0xd50>
   15688:	add	x0, x26, #0x38
   1568c:	stlr	xzr, [x0]
   15690:	b	15888 <GOMP_taskwait@@GOMP_2.0+0xd6c>
   15694:	ldr	w0, [x28, #1320]
   15698:	sub	w0, w0, #0x1
   1569c:	str	w0, [x28, #1320]
   156a0:	cmp	x20, #0x1
   156a4:	b.ls	156c8 <GOMP_taskwait@@GOMP_2.0+0xbac>  // b.plast
   156a8:	ldr	w0, [x28]
   156ac:	ldr	w1, [x28, #1328]
   156b0:	sub	w0, w0, w1
   156b4:	ldrb	w1, [x23, #204]
   156b8:	eor	w1, w1, #0x1
   156bc:	sub	w21, w0, w1
   156c0:	cmp	x20, w21, sxtw
   156c4:	csel	w21, w20, w21, cc  // cc = lo, ul, last
   156c8:	mov	x20, x19
   156cc:	ldr	x0, [sp, #184]
   156d0:	cbz	x0, 15438 <GOMP_taskwait@@GOMP_2.0+0x91c>
   156d4:	add	x26, x23, #0x8
   156d8:	ldr	x0, [x23, #8]
   156dc:	cbnz	x0, 15480 <GOMP_taskwait@@GOMP_2.0+0x964>
   156e0:	mov	w0, #0x1                   	// #1
   156e4:	strb	w0, [sp, #152]
   156e8:	ldr	x19, [x23, #24]
   156ec:	sub	x19, x19, #0x70
   156f0:	ldr	w0, [x19, #200]
   156f4:	cmp	w0, #0x2
   156f8:	b.eq	154b0 <GOMP_taskwait@@GOMP_2.0+0x994>  // b.none
   156fc:	mov	w0, #0x1                   	// #1
   15700:	strb	w0, [sp, #177]
   15704:	mov	x19, #0x0                   	// #0
   15708:	ldr	x1, [sp, #128]
   1570c:	ldxr	w0, [x1]
   15710:	stlxr	w2, wzr, [x1]
   15714:	cbnz	w2, 1570c <GOMP_taskwait@@GOMP_2.0+0xbf0>
   15718:	tbnz	w0, #31, 154e8 <GOMP_taskwait@@GOMP_2.0+0x9cc>
   1571c:	cbnz	w21, 154f4 <GOMP_taskwait@@GOMP_2.0+0x9d8>
   15720:	cbz	x20, 15734 <GOMP_taskwait@@GOMP_2.0+0xc18>
   15724:	ldr	x0, [x20, #56]
   15728:	cbnz	x0, 15504 <GOMP_taskwait@@GOMP_2.0+0x9e8>
   1572c:	mov	x0, x20
   15730:	bl	8900 <free@plt>
   15734:	cbz	x19, 15598 <GOMP_taskwait@@GOMP_2.0+0xa7c>
   15738:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1573c:	ldr	x0, [x0, #4016]
   15740:	mrs	x1, tpidr_el0
   15744:	add	x0, x1, x0
   15748:	str	x19, [x0, #80]
   1574c:	ldr	x1, [x19, #184]
   15750:	cbz	x1, 1550c <GOMP_taskwait@@GOMP_2.0+0x9f0>
   15754:	ldr	x0, [x19, #192]
   15758:	blr	x1
   1575c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15760:	ldr	x0, [x0, #4016]
   15764:	mrs	x1, tpidr_el0
   15768:	add	x0, x1, x0
   1576c:	str	x23, [x0, #80]
   15770:	mov	w0, #0x1                   	// #1
   15774:	ldr	x2, [sp, #128]
   15778:	ldaxr	w1, [x2]
   1577c:	cbnz	w1, 15788 <GOMP_taskwait@@GOMP_2.0+0xc6c>
   15780:	stxr	w3, w0, [x2]
   15784:	cbnz	w3, 15778 <GOMP_taskwait@@GOMP_2.0+0xc5c>
   15788:	cmp	w1, #0x0
   1578c:	mov	w21, #0x0                   	// #0
   15790:	b.ne	15600 <GOMP_taskwait@@GOMP_2.0+0xae4>  // b.any
   15794:	ldr	x20, [x19, #72]
   15798:	cbz	x20, 157c8 <GOMP_taskwait@@GOMP_2.0+0xcac>
   1579c:	ldr	x0, [x19]
   157a0:	cbz	x0, 157ac <GOMP_taskwait@@GOMP_2.0+0xc90>
   157a4:	mov	x0, x19
   157a8:	bl	129c0 <GOMP_single_copy_end@@GOMP_1.0+0x93c>
   157ac:	ldr	x0, [x19, #48]
   157b0:	mov	x20, #0x0                   	// #0
   157b4:	cbz	x0, 157c8 <GOMP_taskwait@@GOMP_2.0+0xcac>
   157b8:	mov	x1, x28
   157bc:	mov	x0, x19
   157c0:	bl	12ef4 <GOMP_single_copy_end@@GOMP_1.0+0xe70>
   157c4:	mov	x20, x0
   157c8:	ldrb	w0, [x19, #207]
   157cc:	cbz	w0, 157dc <GOMP_taskwait@@GOMP_2.0+0xcc0>
   157d0:	ldr	x0, [sp, #184]
   157d4:	sub	x0, x0, #0x1
   157d8:	str	x0, [sp, #184]
   157dc:	ldr	x0, [x23, #8]
   157e0:	cbnz	x0, 15610 <GOMP_taskwait@@GOMP_2.0+0xaf4>
   157e4:	add	x1, x19, #0x70
   157e8:	ldr	x2, [x19, #120]
   157ec:	ldr	x0, [x19, #112]
   157f0:	str	x0, [x2]
   157f4:	ldr	x2, [x19, #120]
   157f8:	str	x2, [x0, #8]
   157fc:	ldr	x0, [x23, #24]
   15800:	cmp	x1, x0
   15804:	b.eq	15624 <GOMP_taskwait@@GOMP_2.0+0xb08>  // b.none
   15808:	str	xzr, [x19, #112]
   1580c:	str	xzr, [x19, #120]
   15810:	ldr	x1, [x19, #8]
   15814:	cbnz	x1, 15638 <GOMP_taskwait@@GOMP_2.0+0xb1c>
   15818:	ldr	x1, [x19, #24]
   1581c:	cbz	x1, 15834 <GOMP_taskwait@@GOMP_2.0+0xd18>
   15820:	stur	xzr, [x1, #-112]
   15824:	ldr	x1, [x1]
   15828:	ldr	x0, [x19, #24]
   1582c:	cmp	x1, x0
   15830:	b.ne	15820 <GOMP_taskwait@@GOMP_2.0+0xd04>  // b.any
   15834:	ldr	x26, [x19, #40]
   15838:	cbz	x26, 15694 <GOMP_taskwait@@GOMP_2.0+0xb78>
   1583c:	ldr	x0, [x26, #8]
   15840:	cbnz	x0, 15648 <GOMP_taskwait@@GOMP_2.0+0xb2c>
   15844:	add	x2, x19, #0x80
   15848:	ldr	x1, [x19, #136]
   1584c:	ldr	x0, [x19, #128]
   15850:	str	x0, [x1]
   15854:	ldr	x1, [x19, #136]
   15858:	str	x1, [x0, #8]
   1585c:	ldr	x0, [x26, #24]
   15860:	mov	w1, #0x0                   	// #0
   15864:	cmp	x2, x0
   15868:	b.eq	15668 <GOMP_taskwait@@GOMP_2.0+0xb4c>  // b.none
   1586c:	str	xzr, [x19, #128]
   15870:	str	xzr, [x19, #136]
   15874:	ldr	x0, [x26, #56]
   15878:	cmp	x0, #0x1
   1587c:	b.ls	15688 <GOMP_taskwait@@GOMP_2.0+0xb6c>  // b.plast
   15880:	sub	x0, x0, #0x1
   15884:	str	x0, [x26, #56]
   15888:	cbz	w1, 15694 <GOMP_taskwait@@GOMP_2.0+0xb78>
   1588c:	ldrb	w0, [x26, #48]
   15890:	cbz	w0, 15694 <GOMP_taskwait@@GOMP_2.0+0xb78>
   15894:	strb	wzr, [x26, #48]
   15898:	add	x0, x26, #0x34
   1589c:	ldr	w1, [x26, #52]
   158a0:	add	w2, w1, #0x1
   158a4:	and	w2, w2, #0x7fffffff
   158a8:	ldxr	w3, [x0]
   158ac:	cmp	w3, w1
   158b0:	b.ne	158bc <GOMP_taskwait@@GOMP_2.0+0xda0>  // b.any
   158b4:	stlxr	w4, w2, [x0]
   158b8:	cmp	w4, #0x0
   158bc:	mov	w1, w3
   158c0:	b.ne	158a0 <GOMP_taskwait@@GOMP_2.0+0xd84>  // b.any
   158c4:	tbz	w3, #31, 15694 <GOMP_taskwait@@GOMP_2.0+0xb78>
   158c8:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   158cc:	b	15694 <GOMP_taskwait@@GOMP_2.0+0xb78>
   158d0:	ldp	x21, x22, [sp, #32]
   158d4:	b	15414 <GOMP_taskwait@@GOMP_2.0+0x8f8>

00000000000158d8 <GOMP_task@@GOMP_2.0>:
   158d8:	stp	x29, x30, [sp, #-336]!
   158dc:	mov	x29, sp
   158e0:	stp	x19, x20, [sp, #16]
   158e4:	stp	x21, x22, [sp, #32]
   158e8:	stp	x23, x24, [sp, #48]
   158ec:	stp	x25, x26, [sp, #64]
   158f0:	stp	x27, x28, [sp, #80]
   158f4:	mov	x25, x0
   158f8:	mov	x26, x1
   158fc:	mov	x22, x2
   15900:	str	x3, [x29, #112]
   15904:	mov	x24, x4
   15908:	and	w5, w5, #0xff
   1590c:	mov	w20, w6
   15910:	str	x7, [x29, #120]
   15914:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15918:	ldr	x0, [x0, #4016]
   1591c:	mrs	x1, tpidr_el0
   15920:	add	x0, x1, x0
   15924:	ldr	x19, [x0, #16]
   15928:	cmp	x19, #0x0
   1592c:	cset	w1, ne  // ne = any
   15930:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   15934:	ldrb	w0, [x0, #1364]
   15938:	tst	w1, w0
   1593c:	b.ne	159f4 <GOMP_task@@GOMP_2.0+0x11c>  // b.any
   15940:	mov	w23, #0x0                   	// #0
   15944:	tbz	w20, #4, 15960 <GOMP_task@@GOMP_2.0+0x88>
   15948:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1594c:	ldr	w23, [x0, #1368]
   15950:	ldr	w0, [x29, #336]
   15954:	cmp	w23, w0
   15958:	ldr	w0, [x29, #336]
   1595c:	csel	w23, w23, w0, le
   15960:	eor	w5, w5, #0x1
   15964:	cmp	x19, #0x0
   15968:	cset	w0, eq  // eq = none
   1596c:	orr	w5, w0, w5
   15970:	cbnz	w5, 159a4 <GOMP_task@@GOMP_2.0+0xcc>
   15974:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15978:	ldr	x0, [x0, #4016]
   1597c:	mrs	x1, tpidr_el0
   15980:	add	x0, x1, x0
   15984:	ldr	x21, [x0, #80]
   15988:	cbz	x21, 15994 <GOMP_task@@GOMP_2.0+0xbc>
   1598c:	ldrb	w0, [x21, #205]
   15990:	cbnz	w0, 161bc <GOMP_task@@GOMP_2.0+0x8e4>
   15994:	ldr	w1, [x19]
   15998:	ldr	w0, [x19, #1320]
   1599c:	cmp	w0, w1, lsl #6
   159a0:	b.ls	15ab4 <GOMP_task@@GOMP_2.0+0x1dc>  // b.plast
   159a4:	tbz	w20, #3, 159d0 <GOMP_task@@GOMP_2.0+0xf8>
   159a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   159ac:	ldr	x0, [x0, #4016]
   159b0:	mrs	x1, tpidr_el0
   159b4:	add	x0, x1, x0
   159b8:	ldr	x21, [x0, #80]
   159bc:	cbz	x21, 15a3c <GOMP_task@@GOMP_2.0+0x164>
   159c0:	ldr	x0, [x21, #56]
   159c4:	cbz	x0, 16160 <GOMP_task@@GOMP_2.0+0x888>
   159c8:	ldr	x0, [x29, #120]
   159cc:	bl	150c0 <GOMP_taskwait@@GOMP_2.0+0x5a4>
   159d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   159d4:	ldr	x0, [x0, #4016]
   159d8:	mrs	x1, tpidr_el0
   159dc:	add	x0, x1, x0
   159e0:	ldr	x21, [x0, #80]
   159e4:	cbnz	x21, 16174 <GOMP_task@@GOMP_2.0+0x89c>
   159e8:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   159ec:	add	x2, x2, #0x2b8
   159f0:	b	16178 <GOMP_task@@GOMP_2.0+0x8a0>
   159f4:	ldr	w0, [x19, #132]
   159f8:	tbnz	w0, #2, 16140 <GOMP_task@@GOMP_2.0+0x868>
   159fc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15a00:	ldr	x0, [x0, #4016]
   15a04:	mrs	x1, tpidr_el0
   15a08:	add	x0, x1, x0
   15a0c:	ldr	x0, [x0, #80]
   15a10:	ldr	x0, [x0, #40]
   15a14:	cbz	x0, 15940 <GOMP_task@@GOMP_2.0+0x68>
   15a18:	ldrb	w1, [x0, #49]
   15a1c:	cbnz	w1, 16140 <GOMP_task@@GOMP_2.0+0x868>
   15a20:	ldrb	w1, [x0, #50]
   15a24:	cbz	w1, 15940 <GOMP_task@@GOMP_2.0+0x68>
   15a28:	ldr	x0, [x0]
   15a2c:	cbz	x0, 15940 <GOMP_task@@GOMP_2.0+0x68>
   15a30:	ldrb	w0, [x0, #49]
   15a34:	cbz	w0, 15940 <GOMP_task@@GOMP_2.0+0x68>
   15a38:	b	16140 <GOMP_task@@GOMP_2.0+0x868>
   15a3c:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   15a40:	add	x2, x2, #0x2b8
   15a44:	b	16178 <GOMP_task@@GOMP_2.0+0x8a0>
   15a48:	mov	x20, sp
   15a4c:	ldr	x0, [x29, #112]
   15a50:	add	x0, x0, x24
   15a54:	add	x0, x0, #0xe
   15a58:	and	x0, x0, #0xfffffffffffffff0
   15a5c:	sub	sp, sp, x0
   15a60:	sub	x0, x24, #0x1
   15a64:	add	x0, sp, x0
   15a68:	neg	x24, x24
   15a6c:	and	x24, x0, x24
   15a70:	mov	x1, x26
   15a74:	mov	x0, x24
   15a78:	blr	x22
   15a7c:	mov	x0, x24
   15a80:	blr	x25
   15a84:	mov	sp, x20
   15a88:	b	160d8 <GOMP_task@@GOMP_2.0+0x800>
   15a8c:	mov	x0, x19
   15a90:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   15a94:	b	16108 <GOMP_task@@GOMP_2.0+0x830>
   15a98:	add	x0, x29, #0x88
   15a9c:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   15aa0:	str	xzr, [x29, #136]
   15aa4:	b	1612c <GOMP_task@@GOMP_2.0+0x854>
   15aa8:	mov	x0, x19
   15aac:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   15ab0:	b	1613c <GOMP_task@@GOMP_2.0+0x864>
   15ab4:	ldr	x28, [x21, #40]
   15ab8:	str	xzr, [x29, #104]
   15abc:	tbz	w20, #3, 15ad8 <GOMP_task@@GOMP_2.0+0x200>
   15ac0:	ldr	x0, [x29, #120]
   15ac4:	ldr	x0, [x0]
   15ac8:	cbz	x0, 15d28 <GOMP_task@@GOMP_2.0+0x450>
   15acc:	add	x0, x0, x0, lsl #2
   15ad0:	lsl	x0, x0, #3
   15ad4:	str	x0, [x29, #104]
   15ad8:	add	x1, x24, #0xcf
   15adc:	ldr	x0, [x29, #104]
   15ae0:	ldr	x2, [x29, #112]
   15ae4:	add	x0, x0, x2
   15ae8:	str	x1, [x29, #96]
   15aec:	add	x0, x0, x1
   15af0:	bl	8c28 <fprintf@plt+0x118>
   15af4:	mov	x27, x0
   15af8:	ldr	x0, [x29, #104]
   15afc:	add	x0, x27, x0
   15b00:	ldr	x1, [x29, #96]
   15b04:	add	x0, x0, x1
   15b08:	neg	x24, x24
   15b0c:	and	x24, x0, x24
   15b10:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15b14:	ldr	x0, [x0, #4016]
   15b18:	mrs	x1, tpidr_el0
   15b1c:	add	x0, x1, x0
   15b20:	ldr	x1, [x0, #80]
   15b24:	add	x2, x1, #0x90
   15b28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   15b2c:	add	x0, x0, #0x2b8
   15b30:	cmp	x1, #0x0
   15b34:	csel	x2, x0, x2, eq  // eq = none
   15b38:	mov	x1, x21
   15b3c:	mov	x0, x27
   15b40:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   15b44:	str	w23, [x27, #88]
   15b48:	mov	w0, #0x1                   	// #1
   15b4c:	str	w0, [x27, #200]
   15b50:	ldrb	w0, [x21, #204]
   15b54:	strb	w0, [x27, #204]
   15b58:	str	x28, [x27, #40]
   15b5c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15b60:	ldr	x0, [x0, #4016]
   15b64:	mrs	x1, tpidr_el0
   15b68:	add	x0, x1, x0
   15b6c:	str	x27, [x0, #80]
   15b70:	cbz	x22, 15d40 <GOMP_task@@GOMP_2.0+0x468>
   15b74:	mov	x1, x26
   15b78:	mov	x0, x24
   15b7c:	blr	x22
   15b80:	mov	w0, #0x1                   	// #1
   15b84:	strb	w0, [x27, #206]
   15b88:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   15b8c:	ldr	x0, [x0, #4016]
   15b90:	mrs	x1, tpidr_el0
   15b94:	add	x0, x1, x0
   15b98:	str	x21, [x0, #80]
   15b9c:	mov	w0, #0x2                   	// #2
   15ba0:	str	w0, [x27, #200]
   15ba4:	str	x25, [x27, #184]
   15ba8:	str	x24, [x27, #192]
   15bac:	ubfx	x20, x20, #1, #1
   15bb0:	strb	w20, [x27, #205]
   15bb4:	add	x22, x19, #0x500
   15bb8:	mov	w0, #0x1                   	// #1
   15bbc:	ldaxr	w1, [x22]
   15bc0:	cbnz	w1, 15bcc <GOMP_task@@GOMP_2.0+0x2f4>
   15bc4:	stxr	w2, w0, [x22]
   15bc8:	cbnz	w2, 15bbc <GOMP_task@@GOMP_2.0+0x2e4>
   15bcc:	cmp	w1, #0x0
   15bd0:	b.ne	15d54 <GOMP_task@@GOMP_2.0+0x47c>  // b.any
   15bd4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   15bd8:	ldrb	w0, [x0, #1364]
   15bdc:	cbnz	w0, 15d60 <GOMP_task@@GOMP_2.0+0x488>
   15be0:	cbz	x28, 15bf0 <GOMP_task@@GOMP_2.0+0x318>
   15be4:	ldr	x0, [x28, #56]
   15be8:	add	x0, x0, #0x1
   15bec:	str	x0, [x28, #56]
   15bf0:	ldr	x0, [x29, #104]
   15bf4:	cbz	x0, 15c10 <GOMP_task@@GOMP_2.0+0x338>
   15bf8:	ldr	x2, [x29, #120]
   15bfc:	mov	x1, x21
   15c00:	mov	x0, x27
   15c04:	bl	12608 <GOMP_single_copy_end@@GOMP_1.0+0x584>
   15c08:	ldr	x0, [x27, #80]
   15c0c:	cbnz	x0, 15dcc <GOMP_task@@GOMP_2.0+0x4f4>
   15c10:	ldr	x0, [x21, #8]
   15c14:	cmp	w23, #0x0
   15c18:	cset	w20, gt
   15c1c:	cmp	x0, #0x0
   15c20:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   15c24:	b.ne	15de8 <GOMP_task@@GOMP_2.0+0x510>  // b.any
   15c28:	add	x0, x27, #0x70
   15c2c:	ldr	x1, [x21, #24]
   15c30:	cbz	x1, 15ebc <GOMP_task@@GOMP_2.0+0x5e4>
   15c34:	str	x1, [x27, #112]
   15c38:	ldr	x1, [x1, #8]
   15c3c:	str	x1, [x27, #120]
   15c40:	str	x0, [x21, #24]
   15c44:	ldr	x1, [x27, #112]
   15c48:	str	x0, [x1, #8]
   15c4c:	ldr	x1, [x27, #120]
   15c50:	str	x0, [x1]
   15c54:	cbz	x28, 15c94 <GOMP_task@@GOMP_2.0+0x3bc>
   15c58:	ldr	x0, [x28, #8]
   15c5c:	cmp	x0, #0x0
   15c60:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   15c64:	b.ne	15ecc <GOMP_task@@GOMP_2.0+0x5f4>  // b.any
   15c68:	add	x0, x27, #0x80
   15c6c:	ldr	x1, [x28, #24]
   15c70:	cbz	x1, 15fa0 <GOMP_task@@GOMP_2.0+0x6c8>
   15c74:	str	x1, [x27, #128]
   15c78:	ldr	x1, [x1, #8]
   15c7c:	str	x1, [x27, #136]
   15c80:	str	x0, [x28, #24]
   15c84:	ldr	x1, [x27, #128]
   15c88:	str	x0, [x1, #8]
   15c8c:	ldr	x1, [x27, #136]
   15c90:	str	x0, [x1]
   15c94:	ldr	x0, [x19, #1288]
   15c98:	cmp	x0, #0x0
   15c9c:	ccmp	w20, #0x0, #0x0, eq  // eq = none
   15ca0:	b.ne	15fb0 <GOMP_task@@GOMP_2.0+0x6d8>  // b.any
   15ca4:	add	x1, x27, #0x60
   15ca8:	ldr	x0, [x19, #1304]
   15cac:	cbz	x0, 1607c <GOMP_task@@GOMP_2.0+0x7a4>
   15cb0:	str	x0, [x27, #96]
   15cb4:	ldr	x2, [x0, #8]
   15cb8:	str	x2, [x27, #104]
   15cbc:	str	x1, [x0, #8]
   15cc0:	ldr	x0, [x27, #104]
   15cc4:	str	x1, [x0]
   15cc8:	ldr	w0, [x19, #1320]
   15ccc:	add	w0, w0, #0x1
   15cd0:	str	w0, [x19, #1320]
   15cd4:	ldr	w0, [x19, #1324]
   15cd8:	add	w0, w0, #0x1
   15cdc:	str	w0, [x19, #1324]
   15ce0:	ldr	w0, [x19, #132]
   15ce4:	orr	w0, w0, #0x1
   15ce8:	str	w0, [x19, #132]
   15cec:	ldrb	w20, [x21, #204]
   15cf0:	eor	w20, w20, #0x1
   15cf4:	ldr	w0, [x19, #1328]
   15cf8:	add	w20, w20, w0
   15cfc:	ldr	w21, [x19]
   15d00:	ldxr	w0, [x22]
   15d04:	stlxr	w1, wzr, [x22]
   15d08:	cbnz	w1, 15d00 <GOMP_task@@GOMP_2.0+0x428>
   15d0c:	tbnz	w0, #31, 1608c <GOMP_task@@GOMP_2.0+0x7b4>
   15d10:	cmp	w20, w21
   15d14:	b.cs	16140 <GOMP_task@@GOMP_2.0+0x868>  // b.hs, b.nlast
   15d18:	mov	w1, #0x1                   	// #1
   15d1c:	add	x0, x19, #0x80
   15d20:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   15d24:	b	16140 <GOMP_task@@GOMP_2.0+0x868>
   15d28:	ldr	x0, [x29, #120]
   15d2c:	ldr	x0, [x0, #8]
   15d30:	add	x0, x0, x0, lsl #2
   15d34:	lsl	x0, x0, #3
   15d38:	str	x0, [x29, #104]
   15d3c:	b	15ad8 <GOMP_task@@GOMP_2.0+0x200>
   15d40:	ldr	x2, [x29, #112]
   15d44:	mov	x1, x26
   15d48:	mov	x0, x24
   15d4c:	bl	85c0 <memcpy@plt>
   15d50:	b	15b88 <GOMP_task@@GOMP_2.0+0x2b0>
   15d54:	mov	x0, x22
   15d58:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   15d5c:	b	15bd4 <GOMP_task@@GOMP_2.0+0x2fc>
   15d60:	ldrb	w0, [x27, #206]
   15d64:	cbnz	w0, 15be0 <GOMP_task@@GOMP_2.0+0x308>
   15d68:	ldr	w0, [x19, #132]
   15d6c:	tbnz	w0, #2, 15d94 <GOMP_task@@GOMP_2.0+0x4bc>
   15d70:	cbz	x28, 15bf0 <GOMP_task@@GOMP_2.0+0x318>
   15d74:	ldrb	w0, [x28, #49]
   15d78:	cbnz	w0, 15d94 <GOMP_task@@GOMP_2.0+0x4bc>
   15d7c:	ldrb	w0, [x28, #50]
   15d80:	cbz	w0, 15be4 <GOMP_task@@GOMP_2.0+0x30c>
   15d84:	ldr	x0, [x28]
   15d88:	cbz	x0, 15be4 <GOMP_task@@GOMP_2.0+0x30c>
   15d8c:	ldrb	w0, [x0, #49]
   15d90:	cbz	w0, 15be4 <GOMP_task@@GOMP_2.0+0x30c>
   15d94:	ldxr	w0, [x22]
   15d98:	stlxr	w1, wzr, [x22]
   15d9c:	cbnz	w1, 15d94 <GOMP_task@@GOMP_2.0+0x4bc>
   15da0:	tbnz	w0, #31, 15db8 <GOMP_task@@GOMP_2.0+0x4e0>
   15da4:	ldr	x0, [x27, #56]
   15da8:	cbnz	x0, 15dc4 <GOMP_task@@GOMP_2.0+0x4ec>
   15dac:	mov	x0, x27
   15db0:	bl	8900 <free@plt>
   15db4:	b	16140 <GOMP_task@@GOMP_2.0+0x868>
   15db8:	mov	x0, x22
   15dbc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   15dc0:	b	15da4 <GOMP_task@@GOMP_2.0+0x4cc>
   15dc4:	bl	8900 <free@plt>
   15dc8:	b	15dac <GOMP_task@@GOMP_2.0+0x4d4>
   15dcc:	ldxr	w0, [x22]
   15dd0:	stlxr	w1, wzr, [x22]
   15dd4:	cbnz	w1, 15dcc <GOMP_task@@GOMP_2.0+0x4f4>
   15dd8:	tbz	w0, #31, 16140 <GOMP_task@@GOMP_2.0+0x868>
   15ddc:	mov	x0, x22
   15de0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   15de4:	b	16140 <GOMP_task@@GOMP_2.0+0x868>
   15de8:	add	x24, x21, #0x8
   15dec:	cbz	x0, 15e34 <GOMP_task@@GOMP_2.0+0x55c>
   15df0:	str	w23, [x29, #128]
   15df4:	add	x1, x29, #0x80
   15df8:	mov	x0, x24
   15dfc:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   15e00:	cbz	x0, 15e78 <GOMP_task@@GOMP_2.0+0x5a0>
   15e04:	add	x1, x27, #0x70
   15e08:	ldr	x2, [x0, #8]
   15e0c:	cbz	x2, 15eac <GOMP_task@@GOMP_2.0+0x5d4>
   15e10:	str	x2, [x27, #112]
   15e14:	ldr	x2, [x2, #8]
   15e18:	str	x2, [x27, #120]
   15e1c:	str	x1, [x0, #8]
   15e20:	ldr	x0, [x27, #112]
   15e24:	str	x1, [x0, #8]
   15e28:	ldr	x0, [x27, #120]
   15e2c:	str	x1, [x0]
   15e30:	b	15c54 <GOMP_task@@GOMP_2.0+0x37c>
   15e34:	ldr	x0, [x21, #24]
   15e38:	cbz	x0, 15e78 <GOMP_task@@GOMP_2.0+0x5a0>
   15e3c:	mov	x0, #0x28                  	// #40
   15e40:	bl	8c28 <fprintf@plt+0x118>
   15e44:	mov	x1, x0
   15e48:	str	xzr, [x0, #24]
   15e4c:	str	xzr, [x0, #32]
   15e50:	str	wzr, [x0]
   15e54:	ldr	x0, [x24, #16]
   15e58:	str	x0, [x1, #8]
   15e5c:	ldr	x0, [x24, #24]
   15e60:	str	x0, [x1, #16]
   15e64:	mov	x0, x24
   15e68:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   15e6c:	str	xzr, [x24, #16]
   15e70:	ldr	x0, [x21, #8]
   15e74:	cbnz	x0, 15df0 <GOMP_task@@GOMP_2.0+0x518>
   15e78:	mov	x0, #0x28                  	// #40
   15e7c:	bl	8c28 <fprintf@plt+0x118>
   15e80:	mov	x25, x0
   15e84:	str	xzr, [x0, #24]
   15e88:	str	xzr, [x0, #32]
   15e8c:	str	w23, [x0]
   15e90:	str	xzr, [x0, #8]
   15e94:	str	xzr, [x0, #16]
   15e98:	mov	x1, x0
   15e9c:	mov	x0, x24
   15ea0:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   15ea4:	mov	x0, x25
   15ea8:	b	15e04 <GOMP_task@@GOMP_2.0+0x52c>
   15eac:	str	x1, [x27, #112]
   15eb0:	str	x1, [x27, #120]
   15eb4:	str	x1, [x0, #8]
   15eb8:	b	15c54 <GOMP_task@@GOMP_2.0+0x37c>
   15ebc:	str	x0, [x27, #112]
   15ec0:	str	x0, [x27, #120]
   15ec4:	str	x0, [x21, #24]
   15ec8:	b	15c54 <GOMP_task@@GOMP_2.0+0x37c>
   15ecc:	add	x24, x28, #0x8
   15ed0:	cbz	x0, 15f18 <GOMP_task@@GOMP_2.0+0x640>
   15ed4:	str	w23, [x29, #128]
   15ed8:	add	x1, x29, #0x80
   15edc:	mov	x0, x24
   15ee0:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   15ee4:	cbz	x0, 15f5c <GOMP_task@@GOMP_2.0+0x684>
   15ee8:	add	x1, x27, #0x80
   15eec:	ldr	x2, [x0, #8]
   15ef0:	cbz	x2, 15f90 <GOMP_task@@GOMP_2.0+0x6b8>
   15ef4:	str	x2, [x27, #128]
   15ef8:	ldr	x2, [x2, #8]
   15efc:	str	x2, [x27, #136]
   15f00:	str	x1, [x0, #8]
   15f04:	ldr	x0, [x27, #128]
   15f08:	str	x1, [x0, #8]
   15f0c:	ldr	x0, [x27, #136]
   15f10:	str	x1, [x0]
   15f14:	b	15c94 <GOMP_task@@GOMP_2.0+0x3bc>
   15f18:	ldr	x0, [x28, #24]
   15f1c:	cbz	x0, 15f5c <GOMP_task@@GOMP_2.0+0x684>
   15f20:	mov	x0, #0x28                  	// #40
   15f24:	bl	8c28 <fprintf@plt+0x118>
   15f28:	mov	x1, x0
   15f2c:	str	xzr, [x0, #24]
   15f30:	str	xzr, [x0, #32]
   15f34:	str	wzr, [x0]
   15f38:	ldr	x0, [x24, #16]
   15f3c:	str	x0, [x1, #8]
   15f40:	ldr	x0, [x24, #24]
   15f44:	str	x0, [x1, #16]
   15f48:	mov	x0, x24
   15f4c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   15f50:	str	xzr, [x24, #16]
   15f54:	ldr	x0, [x28, #8]
   15f58:	cbnz	x0, 15ed4 <GOMP_task@@GOMP_2.0+0x5fc>
   15f5c:	mov	x0, #0x28                  	// #40
   15f60:	bl	8c28 <fprintf@plt+0x118>
   15f64:	mov	x25, x0
   15f68:	str	xzr, [x0, #24]
   15f6c:	str	xzr, [x0, #32]
   15f70:	str	w23, [x0]
   15f74:	str	xzr, [x0, #8]
   15f78:	str	xzr, [x0, #16]
   15f7c:	mov	x1, x0
   15f80:	mov	x0, x24
   15f84:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   15f88:	mov	x0, x25
   15f8c:	b	15ee8 <GOMP_task@@GOMP_2.0+0x610>
   15f90:	str	x1, [x27, #128]
   15f94:	str	x1, [x27, #136]
   15f98:	str	x1, [x0, #8]
   15f9c:	b	15c94 <GOMP_task@@GOMP_2.0+0x3bc>
   15fa0:	str	x0, [x27, #128]
   15fa4:	str	x0, [x27, #136]
   15fa8:	str	x0, [x28, #24]
   15fac:	b	15c94 <GOMP_task@@GOMP_2.0+0x3bc>
   15fb0:	add	x24, x19, #0x508
   15fb4:	cbz	x0, 15ff4 <GOMP_task@@GOMP_2.0+0x71c>
   15fb8:	str	w23, [x29, #128]
   15fbc:	add	x1, x29, #0x80
   15fc0:	mov	x0, x24
   15fc4:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   15fc8:	cbz	x0, 16038 <GOMP_task@@GOMP_2.0+0x760>
   15fcc:	add	x2, x27, #0x60
   15fd0:	ldr	x1, [x0, #8]
   15fd4:	cbz	x1, 1606c <GOMP_task@@GOMP_2.0+0x794>
   15fd8:	str	x1, [x27, #96]
   15fdc:	ldr	x0, [x1, #8]
   15fe0:	str	x0, [x27, #104]
   15fe4:	str	x2, [x1, #8]
   15fe8:	ldr	x0, [x27, #104]
   15fec:	str	x2, [x0]
   15ff0:	b	15cc8 <GOMP_task@@GOMP_2.0+0x3f0>
   15ff4:	ldr	x0, [x19, #1304]
   15ff8:	cbz	x0, 16038 <GOMP_task@@GOMP_2.0+0x760>
   15ffc:	mov	x0, #0x28                  	// #40
   16000:	bl	8c28 <fprintf@plt+0x118>
   16004:	mov	x1, x0
   16008:	str	xzr, [x0, #24]
   1600c:	str	xzr, [x0, #32]
   16010:	str	wzr, [x0]
   16014:	ldr	x0, [x24, #16]
   16018:	str	x0, [x1, #8]
   1601c:	ldr	x0, [x24, #24]
   16020:	str	x0, [x1, #16]
   16024:	mov	x0, x24
   16028:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   1602c:	str	xzr, [x24, #16]
   16030:	ldr	x0, [x19, #1288]
   16034:	cbnz	x0, 15fb8 <GOMP_task@@GOMP_2.0+0x6e0>
   16038:	mov	x0, #0x28                  	// #40
   1603c:	bl	8c28 <fprintf@plt+0x118>
   16040:	mov	x20, x0
   16044:	str	xzr, [x0, #24]
   16048:	str	xzr, [x0, #32]
   1604c:	str	w23, [x0]
   16050:	str	xzr, [x0, #8]
   16054:	str	xzr, [x0, #16]
   16058:	mov	x1, x0
   1605c:	mov	x0, x24
   16060:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   16064:	mov	x0, x20
   16068:	b	15fcc <GOMP_task@@GOMP_2.0+0x6f4>
   1606c:	str	x2, [x27, #96]
   16070:	str	x2, [x27, #104]
   16074:	str	x2, [x0, #8]
   16078:	b	15cc8 <GOMP_task@@GOMP_2.0+0x3f0>
   1607c:	str	x1, [x27, #96]
   16080:	str	x1, [x27, #104]
   16084:	str	x1, [x19, #1304]
   16088:	b	15cc8 <GOMP_task@@GOMP_2.0+0x3f0>
   1608c:	mov	x0, x22
   16090:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   16094:	b	15d10 <GOMP_task@@GOMP_2.0+0x438>
   16098:	mov	w1, #0x1                   	// #1
   1609c:	strb	w1, [x29, #333]
   160a0:	str	w23, [x29, #216]
   160a4:	ldrb	w1, [x0, #204]
   160a8:	strb	w1, [x29, #332]
   160ac:	ldr	x0, [x0, #40]
   160b0:	str	x0, [x29, #168]
   160b4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   160b8:	ldr	x0, [x0, #4016]
   160bc:	mrs	x1, tpidr_el0
   160c0:	add	x0, x1, x0
   160c4:	add	x1, x29, #0x80
   160c8:	str	x1, [x0, #80]
   160cc:	cbnz	x22, 15a48 <GOMP_task@@GOMP_2.0+0x170>
   160d0:	mov	x0, x26
   160d4:	blr	x25
   160d8:	ldr	x0, [x29, #136]
   160dc:	cbnz	x0, 160e8 <GOMP_task@@GOMP_2.0+0x810>
   160e0:	ldr	x0, [x29, #152]
   160e4:	cbz	x0, 1613c <GOMP_task@@GOMP_2.0+0x864>
   160e8:	add	x19, x19, #0x500
   160ec:	mov	w0, #0x1                   	// #1
   160f0:	ldaxr	w1, [x19]
   160f4:	cbnz	w1, 16100 <GOMP_task@@GOMP_2.0+0x828>
   160f8:	stxr	w2, w0, [x19]
   160fc:	cbnz	w2, 160f0 <GOMP_task@@GOMP_2.0+0x818>
   16100:	cmp	w1, #0x0
   16104:	b.ne	15a8c <GOMP_task@@GOMP_2.0+0x1b4>  // b.any
   16108:	ldr	x1, [x29, #136]
   1610c:	cbnz	x1, 15a98 <GOMP_task@@GOMP_2.0+0x1c0>
   16110:	ldr	x0, [x29, #152]
   16114:	cbz	x0, 1612c <GOMP_task@@GOMP_2.0+0x854>
   16118:	stur	xzr, [x0, #-112]
   1611c:	ldr	x0, [x0]
   16120:	ldr	x1, [x29, #152]
   16124:	cmp	x0, x1
   16128:	b.ne	16118 <GOMP_task@@GOMP_2.0+0x840>  // b.any
   1612c:	ldxr	w0, [x19]
   16130:	stlxr	w1, wzr, [x19]
   16134:	cbnz	w1, 1612c <GOMP_task@@GOMP_2.0+0x854>
   16138:	tbnz	w0, #31, 15aa8 <GOMP_task@@GOMP_2.0+0x1d0>
   1613c:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   16140:	mov	sp, x29
   16144:	ldp	x19, x20, [sp, #16]
   16148:	ldp	x21, x22, [sp, #32]
   1614c:	ldp	x23, x24, [sp, #48]
   16150:	ldp	x25, x26, [sp, #64]
   16154:	ldp	x27, x28, [sp, #80]
   16158:	ldp	x29, x30, [sp], #336
   1615c:	ret
   16160:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16164:	ldr	x0, [x0, #4016]
   16168:	mrs	x1, tpidr_el0
   1616c:	add	x0, x1, x0
   16170:	ldr	x21, [x0, #80]
   16174:	add	x2, x21, #0x90
   16178:	mov	x1, x21
   1617c:	add	x0, x29, #0x80
   16180:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   16184:	mov	w0, #0x1                   	// #1
   16188:	str	w0, [x29, #328]
   1618c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16190:	ldr	x0, [x0, #4016]
   16194:	mrs	x1, tpidr_el0
   16198:	add	x0, x1, x0
   1619c:	ldr	x0, [x0, #80]
   161a0:	cbz	x0, 161d8 <GOMP_task@@GOMP_2.0+0x900>
   161a4:	ldrb	w1, [x0, #205]
   161a8:	cbnz	w1, 16098 <GOMP_task@@GOMP_2.0+0x7c0>
   161ac:	ubfx	x20, x20, #1, #1
   161b0:	strb	w20, [x29, #333]
   161b4:	str	w23, [x29, #216]
   161b8:	b	160a4 <GOMP_task@@GOMP_2.0+0x7cc>
   161bc:	tbnz	w20, #3, 159c0 <GOMP_task@@GOMP_2.0+0xe8>
   161c0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   161c4:	ldr	x0, [x0, #4016]
   161c8:	mrs	x1, tpidr_el0
   161cc:	add	x0, x1, x0
   161d0:	ldr	x21, [x0, #80]
   161d4:	b	16174 <GOMP_task@@GOMP_2.0+0x89c>
   161d8:	ubfx	x20, x20, #1, #1
   161dc:	strb	w20, [x29, #333]
   161e0:	str	w23, [x29, #216]
   161e4:	b	160b4 <GOMP_task@@GOMP_2.0+0x7dc>

00000000000161e8 <GOMP_taskwait_depend@@GOMP_5.0>:
   161e8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   161ec:	ldr	x1, [x1, #4016]
   161f0:	mrs	x2, tpidr_el0
   161f4:	add	x1, x2, x1
   161f8:	ldr	x1, [x1, #16]
   161fc:	cmp	x1, #0x0
   16200:	cset	w3, ne  // ne = any
   16204:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16208:	ldrb	w2, [x2, #1364]
   1620c:	tst	w3, w2
   16210:	b.ne	16248 <GOMP_taskwait_depend@@GOMP_5.0+0x60>  // b.any
   16214:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16218:	ldr	x1, [x1, #4016]
   1621c:	mrs	x2, tpidr_el0
   16220:	add	x1, x2, x1
   16224:	ldr	x1, [x1, #80]
   16228:	cbz	x1, 16290 <GOMP_taskwait_depend@@GOMP_5.0+0xa8>
   1622c:	ldr	x1, [x1, #56]
   16230:	cbz	x1, 16290 <GOMP_taskwait_depend@@GOMP_5.0+0xa8>
   16234:	stp	x29, x30, [sp, #-16]!
   16238:	mov	x29, sp
   1623c:	bl	150c0 <GOMP_taskwait@@GOMP_2.0+0x5a4>
   16240:	ldp	x29, x30, [sp], #16
   16244:	ret
   16248:	ldr	w1, [x1, #132]
   1624c:	tbnz	w1, #2, 16290 <GOMP_taskwait_depend@@GOMP_5.0+0xa8>
   16250:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16254:	ldr	x1, [x1, #4016]
   16258:	mrs	x2, tpidr_el0
   1625c:	add	x1, x2, x1
   16260:	ldr	x1, [x1, #80]
   16264:	ldr	x2, [x1, #40]
   16268:	cbz	x2, 1622c <GOMP_taskwait_depend@@GOMP_5.0+0x44>
   1626c:	ldrb	w3, [x2, #49]
   16270:	cbnz	w3, 16290 <GOMP_taskwait_depend@@GOMP_5.0+0xa8>
   16274:	ldrb	w3, [x2, #50]
   16278:	cbz	w3, 1622c <GOMP_taskwait_depend@@GOMP_5.0+0x44>
   1627c:	ldr	x2, [x2]
   16280:	cbz	x2, 1622c <GOMP_taskwait_depend@@GOMP_5.0+0x44>
   16284:	ldrb	w2, [x2, #49]
   16288:	cbz	w2, 1622c <GOMP_taskwait_depend@@GOMP_5.0+0x44>
   1628c:	ret
   16290:	ret

0000000000016294 <GOMP_taskyield@@GOMP_3.0>:
   16294:	ret

0000000000016298 <GOMP_taskgroup_start@@GOMP_4.0>:
   16298:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1629c:	ldr	x0, [x0, #4016]
   162a0:	mrs	x1, tpidr_el0
   162a4:	add	x0, x1, x0
   162a8:	ldr	x0, [x0, #16]
   162ac:	cbz	x0, 1631c <GOMP_taskgroup_start@@GOMP_4.0+0x84>
   162b0:	stp	x29, x30, [sp, #-32]!
   162b4:	mov	x29, sp
   162b8:	stp	x19, x20, [sp, #16]
   162bc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   162c0:	ldr	x0, [x0, #4016]
   162c4:	add	x0, x1, x0
   162c8:	ldr	x20, [x0, #80]
   162cc:	ldr	x19, [x20, #40]
   162d0:	mov	x0, #0x40                  	// #64
   162d4:	bl	8c28 <fprintf@plt+0x118>
   162d8:	mov	x1, x0
   162dc:	str	x19, [x1], #8
   162e0:	str	xzr, [x0, #8]
   162e4:	str	xzr, [x1, #16]
   162e8:	str	xzr, [x1, #24]
   162ec:	cbz	x19, 162f4 <GOMP_taskgroup_start@@GOMP_4.0+0x5c>
   162f0:	ldr	x19, [x19, #40]
   162f4:	str	x19, [x0, #40]
   162f8:	strb	wzr, [x0, #48]
   162fc:	strb	wzr, [x0, #49]
   16300:	strb	wzr, [x0, #50]
   16304:	str	xzr, [x0, #56]
   16308:	str	wzr, [x0, #52]
   1630c:	str	x0, [x20, #40]
   16310:	ldp	x19, x20, [sp, #16]
   16314:	ldp	x29, x30, [sp], #32
   16318:	ret
   1631c:	ret

0000000000016320 <GOMP_taskgroup_end@@GOMP_4.0>:
   16320:	stp	x29, x30, [sp, #-128]!
   16324:	mov	x29, sp
   16328:	stp	x23, x24, [sp, #48]
   1632c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16330:	ldr	x0, [x0, #4016]
   16334:	mrs	x1, tpidr_el0
   16338:	add	x0, x1, x0
   1633c:	ldr	x24, [x0, #16]
   16340:	cbz	x24, 16468 <GOMP_taskgroup_end@@GOMP_4.0+0x148>
   16344:	stp	x19, x20, [sp, #16]
   16348:	stp	x25, x26, [sp, #64]
   1634c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16350:	ldr	x0, [x0, #4016]
   16354:	add	x0, x1, x0
   16358:	ldr	x25, [x0, #80]
   1635c:	ldr	x20, [x25, #40]
   16360:	cbz	x20, 163c0 <GOMP_taskgroup_end@@GOMP_4.0+0xa0>
   16364:	add	x0, x20, #0x38
   16368:	ldar	x0, [x0]
   1636c:	cbz	x0, 16450 <GOMP_taskgroup_end@@GOMP_4.0+0x130>
   16370:	stp	x21, x22, [sp, #32]
   16374:	stp	x27, x28, [sp, #80]
   16378:	add	x21, x24, #0x500
   1637c:	mov	w0, #0x1                   	// #1
   16380:	ldaxr	w1, [x21]
   16384:	cbnz	w1, 16390 <GOMP_taskgroup_end@@GOMP_4.0+0x70>
   16388:	stxr	w2, w0, [x21]
   1638c:	cbnz	w2, 16380 <GOMP_taskgroup_end@@GOMP_4.0+0x60>
   16390:	cmp	w1, #0x0
   16394:	b.ne	163e8 <GOMP_taskgroup_end@@GOMP_4.0+0xc8>  // b.any
   16398:	mov	w23, #0x0                   	// #0
   1639c:	mov	x22, #0x0                   	// #0
   163a0:	mov	w28, #0x0                   	// #0
   163a4:	mrs	x27, tpidr_el0
   163a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   163ac:	ldr	x0, [x0, #4016]
   163b0:	add	x27, x27, x0
   163b4:	add	x0, sp, #0x7f
   163b8:	str	x0, [sp, #96]
   163bc:	b	16678 <GOMP_taskgroup_end@@GOMP_4.0+0x358>
   163c0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   163c4:	ldr	x0, [x0, #4016]
   163c8:	add	x0, x1, x0
   163cc:	ldr	w0, [x0, #44]
   163d0:	cbnz	w0, 16364 <GOMP_taskgroup_end@@GOMP_4.0+0x44>
   163d4:	add	x0, x24, #0x80
   163d8:	bl	1bbc4 <omp_get_num_procs@@OMP_1.0+0x750>
   163dc:	ldp	x19, x20, [sp, #16]
   163e0:	ldp	x25, x26, [sp, #64]
   163e4:	b	16468 <GOMP_taskgroup_end@@GOMP_4.0+0x148>
   163e8:	mov	x0, x21
   163ec:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   163f0:	b	16398 <GOMP_taskgroup_end@@GOMP_4.0+0x78>
   163f4:	ldr	x4, [sp, #96]
   163f8:	add	x3, x24, #0x508
   163fc:	mov	w2, w28
   16400:	add	x1, x25, #0x8
   16404:	mov	w0, #0x1                   	// #1
   16408:	bl	27770 <acc_set_cuda_stream@@OACC_2.0+0x2bc>
   1640c:	mov	x19, x0
   16410:	cbnz	x0, 164c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a8>
   16414:	ldr	x0, [x25, #8]
   16418:	ldr	x19, [x0, #8]
   1641c:	sub	x19, x19, #0x70
   16420:	b	164c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a8>
   16424:	ldxr	w0, [x21]
   16428:	stlxr	w1, wzr, [x21]
   1642c:	cbnz	w1, 16424 <GOMP_taskgroup_end@@GOMP_4.0+0x104>
   16430:	tbnz	w0, #31, 16474 <GOMP_taskgroup_end@@GOMP_4.0+0x154>
   16434:	cbz	x22, 16990 <GOMP_taskgroup_end@@GOMP_4.0+0x670>
   16438:	ldr	x0, [x22, #56]
   1643c:	cbnz	x0, 16480 <GOMP_taskgroup_end@@GOMP_4.0+0x160>
   16440:	mov	x0, x22
   16444:	bl	8900 <free@plt>
   16448:	ldp	x21, x22, [sp, #32]
   1644c:	ldp	x27, x28, [sp, #80]
   16450:	ldr	x0, [x20]
   16454:	str	x0, [x25, #40]
   16458:	mov	x0, x20
   1645c:	bl	8900 <free@plt>
   16460:	ldp	x19, x20, [sp, #16]
   16464:	ldp	x25, x26, [sp, #64]
   16468:	ldp	x23, x24, [sp, #48]
   1646c:	ldp	x29, x30, [sp], #128
   16470:	ret
   16474:	mov	x0, x21
   16478:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1647c:	b	16434 <GOMP_taskgroup_end@@GOMP_4.0+0x114>
   16480:	bl	8900 <free@plt>
   16484:	b	16440 <GOMP_taskgroup_end@@GOMP_4.0+0x120>
   16488:	ldr	x4, [sp, #96]
   1648c:	add	x3, x24, #0x508
   16490:	mov	w2, w28
   16494:	add	x1, x20, #0x8
   16498:	mov	w0, #0x2                   	// #2
   1649c:	bl	27770 <acc_set_cuda_stream@@OACC_2.0+0x2bc>
   164a0:	mov	x19, x0
   164a4:	cbnz	x0, 164c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a8>
   164a8:	ldr	x0, [x20, #8]
   164ac:	ldr	x19, [x0, #8]
   164b0:	sub	x19, x19, #0x80
   164b4:	b	164c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a8>
   164b8:	mov	w0, #0x1                   	// #1
   164bc:	strb	w0, [sp, #127]
   164c0:	ldr	x19, [x20, #24]
   164c4:	sub	x19, x19, #0x80
   164c8:	ldr	w0, [x19, #200]
   164cc:	cmp	w0, #0x2
   164d0:	b.eq	166b4 <GOMP_taskgroup_end@@GOMP_4.0+0x394>  // b.none
   164d4:	mov	w0, #0x1                   	// #1
   164d8:	strb	w0, [x20, #48]
   164dc:	mov	x19, #0x0                   	// #0
   164e0:	ldxr	w0, [x21]
   164e4:	stlxr	w1, wzr, [x21]
   164e8:	cbnz	w1, 164e0 <GOMP_taskgroup_end@@GOMP_4.0+0x1c0>
   164ec:	tbnz	w0, #31, 166ec <GOMP_taskgroup_end@@GOMP_4.0+0x3cc>
   164f0:	cbnz	w23, 166f8 <GOMP_taskgroup_end@@GOMP_4.0+0x3d8>
   164f4:	cbz	x22, 16508 <GOMP_taskgroup_end@@GOMP_4.0+0x1e8>
   164f8:	ldr	x0, [x22, #56]
   164fc:	cbnz	x0, 16708 <GOMP_taskgroup_end@@GOMP_4.0+0x3e8>
   16500:	mov	x0, x22
   16504:	bl	8900 <free@plt>
   16508:	cbz	x19, 16790 <GOMP_taskgroup_end@@GOMP_4.0+0x470>
   1650c:	str	x19, [x27, #80]
   16510:	ldr	x1, [x19, #184]
   16514:	cbz	x1, 16710 <GOMP_taskgroup_end@@GOMP_4.0+0x3f0>
   16518:	ldr	x0, [x19, #192]
   1651c:	blr	x1
   16520:	str	x25, [x27, #80]
   16524:	mov	w0, #0x1                   	// #1
   16528:	ldaxr	w1, [x21]
   1652c:	cbnz	w1, 16538 <GOMP_taskgroup_end@@GOMP_4.0+0x218>
   16530:	stxr	w2, w0, [x21]
   16534:	cbnz	w2, 16528 <GOMP_taskgroup_end@@GOMP_4.0+0x208>
   16538:	cmp	w1, #0x0
   1653c:	mov	w23, w28
   16540:	b.ne	167f4 <GOMP_taskgroup_end@@GOMP_4.0+0x4d4>  // b.any
   16544:	ldr	x22, [x19, #72]
   16548:	cbz	x22, 16578 <GOMP_taskgroup_end@@GOMP_4.0+0x258>
   1654c:	ldr	x0, [x19]
   16550:	cbz	x0, 1699c <GOMP_taskgroup_end@@GOMP_4.0+0x67c>
   16554:	mov	x0, x19
   16558:	bl	129c0 <GOMP_single_copy_end@@GOMP_1.0+0x93c>
   1655c:	ldr	x0, [x19, #48]
   16560:	mov	x22, #0x0                   	// #0
   16564:	cbz	x0, 16578 <GOMP_taskgroup_end@@GOMP_4.0+0x258>
   16568:	mov	x1, x24
   1656c:	mov	x0, x19
   16570:	bl	12ef4 <GOMP_single_copy_end@@GOMP_1.0+0xe70>
   16574:	mov	x22, x0
   16578:	ldr	x26, [x19]
   1657c:	cbz	x26, 165bc <GOMP_taskgroup_end@@GOMP_4.0+0x29c>
   16580:	ldrb	w0, [x19, #207]
   16584:	cbnz	w0, 16800 <GOMP_taskgroup_end@@GOMP_4.0+0x4e0>
   16588:	ldr	x0, [x26, #8]
   1658c:	cbnz	x0, 16860 <GOMP_taskgroup_end@@GOMP_4.0+0x540>
   16590:	add	x1, x19, #0x70
   16594:	ldr	x2, [x19, #120]
   16598:	ldr	x0, [x19, #112]
   1659c:	str	x0, [x2]
   165a0:	ldr	x2, [x19, #120]
   165a4:	str	x2, [x0, #8]
   165a8:	ldr	x0, [x26, #24]
   165ac:	cmp	x1, x0
   165b0:	b.eq	1688c <GOMP_taskgroup_end@@GOMP_4.0+0x56c>  // b.none
   165b4:	str	xzr, [x19, #112]
   165b8:	str	xzr, [x19, #120]
   165bc:	ldr	x1, [x19, #8]
   165c0:	cbnz	x1, 168f8 <GOMP_taskgroup_end@@GOMP_4.0+0x5d8>
   165c4:	ldr	x0, [x19, #24]
   165c8:	cbz	x0, 165e0 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   165cc:	stur	xzr, [x0, #-112]
   165d0:	ldr	x0, [x0]
   165d4:	ldr	x1, [x19, #24]
   165d8:	cmp	x0, x1
   165dc:	b.ne	165cc <GOMP_taskgroup_end@@GOMP_4.0+0x2ac>  // b.any
   165e0:	ldr	x26, [x19, #40]
   165e4:	cbz	x26, 16640 <GOMP_taskgroup_end@@GOMP_4.0+0x320>
   165e8:	ldr	x0, [x26, #8]
   165ec:	cbnz	x0, 16908 <GOMP_taskgroup_end@@GOMP_4.0+0x5e8>
   165f0:	add	x2, x19, #0x80
   165f4:	ldr	x1, [x19, #136]
   165f8:	ldr	x0, [x19, #128]
   165fc:	str	x0, [x1]
   16600:	ldr	x1, [x19, #136]
   16604:	str	x1, [x0, #8]
   16608:	ldr	x0, [x26, #24]
   1660c:	mov	w1, w28
   16610:	cmp	x2, x0
   16614:	b.eq	16928 <GOMP_taskgroup_end@@GOMP_4.0+0x608>  // b.none
   16618:	str	xzr, [x19, #128]
   1661c:	str	xzr, [x19, #136]
   16620:	ldr	x0, [x26, #56]
   16624:	cmp	x0, #0x1
   16628:	b.ls	16948 <GOMP_taskgroup_end@@GOMP_4.0+0x628>  // b.plast
   1662c:	sub	x0, x0, #0x1
   16630:	str	x0, [x26, #56]
   16634:	cbz	w1, 16640 <GOMP_taskgroup_end@@GOMP_4.0+0x320>
   16638:	ldrb	w0, [x26, #48]
   1663c:	cbnz	w0, 16954 <GOMP_taskgroup_end@@GOMP_4.0+0x634>
   16640:	ldr	w0, [x24, #1320]
   16644:	sub	w0, w0, #0x1
   16648:	str	w0, [x24, #1320]
   1664c:	cmp	x22, #0x1
   16650:	b.ls	16674 <GOMP_taskgroup_end@@GOMP_4.0+0x354>  // b.plast
   16654:	ldr	w0, [x24]
   16658:	ldr	w1, [x24, #1328]
   1665c:	sub	w0, w0, w1
   16660:	ldrb	w1, [x25, #204]
   16664:	eor	w1, w1, #0x1
   16668:	sub	w23, w0, w1
   1666c:	cmp	x22, w23, sxtw
   16670:	csel	w23, w22, w23, cc  // cc = lo, ul, last
   16674:	mov	x22, x19
   16678:	ldr	x0, [x20, #8]
   1667c:	cbnz	x0, 16488 <GOMP_taskgroup_end@@GOMP_4.0+0x168>
   16680:	ldr	x0, [x20, #24]
   16684:	cbnz	x0, 164b8 <GOMP_taskgroup_end@@GOMP_4.0+0x198>
   16688:	ldr	x0, [x20, #56]
   1668c:	cbz	x0, 16424 <GOMP_taskgroup_end@@GOMP_4.0+0x104>
   16690:	ldr	x0, [x25, #8]
   16694:	cbnz	x0, 163f4 <GOMP_taskgroup_end@@GOMP_4.0+0xd4>
   16698:	ldr	x0, [x25, #24]
   1669c:	cbz	x0, 164d4 <GOMP_taskgroup_end@@GOMP_4.0+0x1b4>
   166a0:	mov	w0, #0x1                   	// #1
   166a4:	strb	w0, [sp, #127]
   166a8:	ldr	x19, [x25, #24]
   166ac:	sub	x19, x19, #0x70
   166b0:	b	164c8 <GOMP_taskgroup_end@@GOMP_4.0+0x1a8>
   166b4:	mov	x2, x24
   166b8:	ldr	x1, [x19]
   166bc:	mov	x0, x19
   166c0:	bl	12af0 <GOMP_single_copy_end@@GOMP_1.0+0xa6c>
   166c4:	and	w0, w0, #0xff
   166c8:	cbz	w0, 164e0 <GOMP_taskgroup_end@@GOMP_4.0+0x1c0>
   166cc:	cbz	x22, 16544 <GOMP_taskgroup_end@@GOMP_4.0+0x224>
   166d0:	ldr	x0, [x22, #56]
   166d4:	cbnz	x0, 166e4 <GOMP_taskgroup_end@@GOMP_4.0+0x3c4>
   166d8:	mov	x0, x22
   166dc:	bl	8900 <free@plt>
   166e0:	b	16544 <GOMP_taskgroup_end@@GOMP_4.0+0x224>
   166e4:	bl	8900 <free@plt>
   166e8:	b	166d8 <GOMP_taskgroup_end@@GOMP_4.0+0x3b8>
   166ec:	mov	x0, x21
   166f0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   166f4:	b	164f0 <GOMP_taskgroup_end@@GOMP_4.0+0x1d0>
   166f8:	mov	w1, w23
   166fc:	add	x0, x24, #0x80
   16700:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   16704:	b	164f4 <GOMP_taskgroup_end@@GOMP_4.0+0x1d4>
   16708:	bl	8900 <free@plt>
   1670c:	b	16500 <GOMP_taskgroup_end@@GOMP_4.0+0x1e0>
   16710:	ldr	x0, [x19, #192]
   16714:	bl	2216c <GOMP_target_enter_exit_data@@GOMP_4.5+0x284>
   16718:	and	w0, w0, #0xff
   1671c:	cbz	w0, 16520 <GOMP_taskgroup_end@@GOMP_4.0+0x200>
   16720:	str	x25, [x27, #80]
   16724:	mov	w0, #0x1                   	// #1
   16728:	ldaxr	w1, [x21]
   1672c:	cbnz	w1, 16738 <GOMP_taskgroup_end@@GOMP_4.0+0x418>
   16730:	stxr	w2, w0, [x21]
   16734:	cbnz	w2, 16728 <GOMP_taskgroup_end@@GOMP_4.0+0x408>
   16738:	cmp	w1, #0x0
   1673c:	b.ne	1676c <GOMP_taskgroup_end@@GOMP_4.0+0x44c>  // b.any
   16740:	mov	w0, #0x4                   	// #4
   16744:	str	w0, [x19, #200]
   16748:	ldr	x0, [x19, #192]
   1674c:	ldr	w1, [x0, #44]
   16750:	cmp	w1, #0x5
   16754:	b.eq	16778 <GOMP_taskgroup_end@@GOMP_4.0+0x458>  // b.none
   16758:	mov	w1, #0x4                   	// #4
   1675c:	str	w1, [x0, #44]
   16760:	mov	w23, w28
   16764:	mov	x19, #0x0                   	// #0
   16768:	b	16674 <GOMP_taskgroup_end@@GOMP_4.0+0x354>
   1676c:	mov	x0, x21
   16770:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   16774:	b	16740 <GOMP_taskgroup_end@@GOMP_4.0+0x420>
   16778:	mov	x1, x19
   1677c:	mov	x0, x24
   16780:	bl	134a8 <GOMP_single_copy_end@@GOMP_1.0+0x1424>
   16784:	mov	w23, w28
   16788:	mov	x19, #0x0                   	// #0
   1678c:	b	16674 <GOMP_taskgroup_end@@GOMP_4.0+0x354>
   16790:	add	x0, x20, #0x34
   16794:	ldr	w1, [x20, #52]
   16798:	tst	x1, #0x7fffffff
   1679c:	b.eq	167ec <GOMP_taskgroup_end@@GOMP_4.0+0x4cc>  // b.none
   167a0:	sub	w3, w1, #0x1
   167a4:	ldaxr	w2, [x0]
   167a8:	cmp	w2, w1
   167ac:	b.ne	167b8 <GOMP_taskgroup_end@@GOMP_4.0+0x498>  // b.any
   167b0:	stxr	w4, w3, [x0]
   167b4:	cmp	w4, #0x0
   167b8:	mov	w1, w2
   167bc:	b.ne	16798 <GOMP_taskgroup_end@@GOMP_4.0+0x478>  // b.any
   167c0:	mov	w0, #0x1                   	// #1
   167c4:	ldaxr	w1, [x21]
   167c8:	cbnz	w1, 167d4 <GOMP_taskgroup_end@@GOMP_4.0+0x4b4>
   167cc:	stxr	w2, w0, [x21]
   167d0:	cbnz	w2, 167c4 <GOMP_taskgroup_end@@GOMP_4.0+0x4a4>
   167d4:	cmp	w1, #0x0
   167d8:	mov	w23, w28
   167dc:	b.eq	16674 <GOMP_taskgroup_end@@GOMP_4.0+0x354>  // b.none
   167e0:	mov	x0, x21
   167e4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   167e8:	b	16674 <GOMP_taskgroup_end@@GOMP_4.0+0x354>
   167ec:	bl	1b504 <omp_get_num_procs@@OMP_1.0+0x90>
   167f0:	b	167c0 <GOMP_taskgroup_end@@GOMP_4.0+0x4a0>
   167f4:	mov	x0, x21
   167f8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   167fc:	b	16544 <GOMP_taskgroup_end@@GOMP_4.0+0x224>
   16800:	ldr	x1, [x26, #64]
   16804:	ldr	x0, [x1, #8]
   16808:	sub	x0, x0, #0x1
   1680c:	str	x0, [x1, #8]
   16810:	cbnz	x0, 16588 <GOMP_taskgroup_end@@GOMP_4.0+0x268>
   16814:	ldr	x0, [x26, #64]
   16818:	ldrb	w1, [x0, #1]
   1681c:	cbz	w1, 16588 <GOMP_taskgroup_end@@GOMP_4.0+0x268>
   16820:	strb	wzr, [x0, #1]
   16824:	ldr	x1, [x26, #64]
   16828:	add	x0, x1, #0x10
   1682c:	ldr	w1, [x1, #16]
   16830:	add	w2, w1, #0x1
   16834:	and	w2, w2, #0x7fffffff
   16838:	ldxr	w3, [x0]
   1683c:	cmp	w3, w1
   16840:	b.ne	1684c <GOMP_taskgroup_end@@GOMP_4.0+0x52c>  // b.any
   16844:	stlxr	w4, w2, [x0]
   16848:	cmp	w4, #0x0
   1684c:	mov	w1, w3
   16850:	b.ne	16830 <GOMP_taskgroup_end@@GOMP_4.0+0x510>  // b.any
   16854:	tbz	w3, #31, 16588 <GOMP_taskgroup_end@@GOMP_4.0+0x268>
   16858:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   1685c:	b	16588 <GOMP_taskgroup_end@@GOMP_4.0+0x268>
   16860:	add	x0, x26, #0x8
   16864:	str	x0, [sp, #104]
   16868:	add	x2, x19, #0x70
   1686c:	mov	x1, x0
   16870:	mov	w0, #0x1                   	// #1
   16874:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   16878:	ldr	x0, [x26, #8]
   1687c:	cbnz	x0, 165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   16880:	ldr	x0, [sp, #104]
   16884:	stlr	xzr, [x0]
   16888:	b	168a8 <GOMP_taskgroup_end@@GOMP_4.0+0x588>
   1688c:	ldr	x0, [x19, #112]
   16890:	cmp	x1, x0
   16894:	b.eq	168a0 <GOMP_taskgroup_end@@GOMP_4.0+0x580>  // b.none
   16898:	str	x0, [x26, #24]
   1689c:	b	165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   168a0:	add	x0, x26, #0x18
   168a4:	stlr	xzr, [x0]
   168a8:	ldr	x0, [x26, #64]
   168ac:	cbz	x0, 165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   168b0:	ldrb	w1, [x0]
   168b4:	cbz	w1, 165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   168b8:	strb	wzr, [x0]
   168bc:	ldr	x1, [x26, #64]
   168c0:	add	x0, x1, #0x10
   168c4:	ldr	w1, [x1, #16]
   168c8:	add	w2, w1, #0x1
   168cc:	and	w2, w2, #0x7fffffff
   168d0:	ldxr	w3, [x0]
   168d4:	cmp	w3, w1
   168d8:	b.ne	168e4 <GOMP_taskgroup_end@@GOMP_4.0+0x5c4>  // b.any
   168dc:	stlxr	w4, w2, [x0]
   168e0:	cmp	w4, #0x0
   168e4:	mov	w1, w3
   168e8:	b.ne	168c8 <GOMP_taskgroup_end@@GOMP_4.0+0x5a8>  // b.any
   168ec:	tbz	w3, #31, 165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   168f0:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   168f4:	b	165b4 <GOMP_taskgroup_end@@GOMP_4.0+0x294>
   168f8:	add	x0, x19, #0x8
   168fc:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16900:	str	xzr, [x19, #8]
   16904:	b	165e0 <GOMP_taskgroup_end@@GOMP_4.0+0x2c0>
   16908:	add	x2, x19, #0x80
   1690c:	add	x1, x26, #0x8
   16910:	mov	w0, #0x2                   	// #2
   16914:	bl	2794c <acc_set_cuda_stream@@OACC_2.0+0x498>
   16918:	ldr	x0, [x26, #8]
   1691c:	cmp	x0, #0x0
   16920:	cset	w1, eq  // eq = none
   16924:	b	16618 <GOMP_taskgroup_end@@GOMP_4.0+0x2f8>
   16928:	ldr	x0, [x19, #128]
   1692c:	cmp	x2, x0
   16930:	b.eq	1693c <GOMP_taskgroup_end@@GOMP_4.0+0x61c>  // b.none
   16934:	str	x0, [x26, #24]
   16938:	b	16618 <GOMP_taskgroup_end@@GOMP_4.0+0x2f8>
   1693c:	str	xzr, [x26, #24]
   16940:	mov	w1, #0x1                   	// #1
   16944:	b	16618 <GOMP_taskgroup_end@@GOMP_4.0+0x2f8>
   16948:	add	x0, x26, #0x38
   1694c:	stlr	xzr, [x0]
   16950:	b	16634 <GOMP_taskgroup_end@@GOMP_4.0+0x314>
   16954:	strb	wzr, [x26, #48]
   16958:	add	x0, x26, #0x34
   1695c:	ldr	w1, [x26, #52]
   16960:	add	w2, w1, #0x1
   16964:	and	w2, w2, #0x7fffffff
   16968:	ldxr	w3, [x0]
   1696c:	cmp	w3, w1
   16970:	b.ne	1697c <GOMP_taskgroup_end@@GOMP_4.0+0x65c>  // b.any
   16974:	stlxr	w4, w2, [x0]
   16978:	cmp	w4, #0x0
   1697c:	mov	w1, w3
   16980:	b.ne	16960 <GOMP_taskgroup_end@@GOMP_4.0+0x640>  // b.any
   16984:	tbz	w3, #31, 16640 <GOMP_taskgroup_end@@GOMP_4.0+0x320>
   16988:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   1698c:	b	16640 <GOMP_taskgroup_end@@GOMP_4.0+0x320>
   16990:	ldp	x21, x22, [sp, #32]
   16994:	ldp	x27, x28, [sp, #80]
   16998:	b	16450 <GOMP_taskgroup_end@@GOMP_4.0+0x130>
   1699c:	ldr	x0, [x19, #48]
   169a0:	mov	x22, #0x0                   	// #0
   169a4:	cbnz	x0, 16568 <GOMP_taskgroup_end@@GOMP_4.0+0x248>
   169a8:	b	165bc <GOMP_taskgroup_end@@GOMP_4.0+0x29c>

00000000000169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>:
   169ac:	stp	x29, x30, [sp, #-112]!
   169b0:	mov	x29, sp
   169b4:	stp	x19, x20, [sp, #16]
   169b8:	stp	x21, x22, [sp, #32]
   169bc:	stp	x23, x24, [sp, #48]
   169c0:	stp	x25, x26, [sp, #64]
   169c4:	stp	x27, x28, [sp, #80]
   169c8:	mov	x27, x0
   169cc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   169d0:	ldr	x0, [x0, #4016]
   169d4:	mrs	x1, tpidr_el0
   169d8:	add	x0, x1, x0
   169dc:	ldr	x2, [x0, #16]
   169e0:	cbz	x2, 16a58 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xac>
   169e4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   169e8:	ldr	x0, [x0, #4016]
   169ec:	mrs	x1, tpidr_el0
   169f0:	add	x0, x1, x0
   169f4:	ldr	x28, [x0, #80]
   169f8:	ldr	x0, [x28, #40]
   169fc:	ldr	x22, [x0, #40]
   16a00:	mov	x19, x27
   16a04:	mov	x21, #0x0                   	// #0
   16a08:	ldr	w23, [x2]
   16a0c:	ldr	x20, [x19, #8]
   16a10:	mul	x20, x23, x20
   16a14:	mov	x1, x20
   16a18:	ldr	x0, [x19, #16]
   16a1c:	bl	8ccc <fprintf@plt+0x1bc>
   16a20:	mov	x24, x0
   16a24:	mov	x2, x20
   16a28:	mov	w1, #0x0                   	// #0
   16a2c:	bl	87c0 <memset@plt>
   16a30:	str	x24, [x19, #16]
   16a34:	add	x20, x20, x24
   16a38:	str	x20, [x19, #48]
   16a3c:	str	xzr, [x19, #40]
   16a40:	ldr	x0, [x19]
   16a44:	add	x21, x21, x0
   16a48:	ldr	x25, [x19, #32]
   16a4c:	cbz	x25, 16a78 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0xcc>
   16a50:	mov	x19, x25
   16a54:	b	16a0c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x60>
   16a58:	bl	1395c <GOMP_single_copy_end@@GOMP_1.0+0x18d8>
   16a5c:	bl	16298 <GOMP_taskgroup_start@@GOMP_4.0>
   16a60:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16a64:	ldr	x1, [x1, #4016]
   16a68:	mrs	x0, tpidr_el0
   16a6c:	add	x0, x0, x1
   16a70:	ldr	x2, [x0, #16]
   16a74:	b	169e4 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x38>
   16a78:	mov	x26, x22
   16a7c:	str	x22, [x19, #32]
   16a80:	cbz	x22, 16b70 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1c4>
   16a84:	ldr	x19, [x22, #40]
   16a88:	cbz	x19, 16b70 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1c4>
   16a8c:	ldr	x0, [x19, #8]
   16a90:	ldr	x1, [x19, #16]
   16a94:	sub	x0, x0, x1
   16a98:	add	x0, x0, x21
   16a9c:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   16aa0:	str	x0, [sp, #104]
   16aa4:	ldr	x1, [x19, #8]
   16aa8:	ldr	x2, [x19, #16]
   16aac:	sub	x1, x1, x2
   16ab0:	str	x1, [x0, #8]
   16ab4:	ldr	x21, [x19], #32
   16ab8:	add	x21, x19, x21, lsl #3
   16abc:	b	16acc <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x120>
   16ac0:	add	x19, x19, #0x8
   16ac4:	cmp	x21, x19
   16ac8:	b.ls	16b7c <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x1d0>  // b.plast
   16acc:	ldr	x20, [x19]
   16ad0:	cmp	x20, #0x1
   16ad4:	b.ls	16ac0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x114>  // b.plast
   16ad8:	ldr	x1, [x20]
   16adc:	eor	x1, x1, x1, lsr #32
   16ae0:	ldr	x0, [sp, #104]
   16ae4:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0x244>
   16ae8:	str	x20, [x0]
   16aec:	b	16ac0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x114>
   16af0:	ldr	x0, [x22, #32]
   16af4:	cmp	x26, x0
   16af8:	b.eq	16b44 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x198>  // b.none
   16afc:	mov	x22, x0
   16b00:	ldr	x0, [x22]
   16b04:	cbz	x0, 16af0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x144>
   16b08:	add	x20, x22, #0x38
   16b0c:	mov	x21, x25
   16b10:	str	x22, [x20, #16]
   16b14:	mov	x19, x20
   16b18:	mov	w2, w23
   16b1c:	mov	x1, x19
   16b20:	mov	x0, x24
   16b24:	bl	12398 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   16b28:	str	x19, [x0]
   16b2c:	add	x21, x21, #0x1
   16b30:	add	x20, x20, #0x18
   16b34:	ldr	x0, [x22]
   16b38:	cmp	x21, x0
   16b3c:	b.cc	16b10 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x164>  // b.lo, b.ul, b.last
   16b40:	b	16af0 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x144>
   16b44:	ldr	x0, [sp, #104]
   16b48:	str	x0, [x22, #40]
   16b4c:	ldr	x0, [x28, #40]
   16b50:	str	x27, [x0, #40]
   16b54:	ldp	x19, x20, [sp, #16]
   16b58:	ldp	x21, x22, [sp, #32]
   16b5c:	ldp	x23, x24, [sp, #48]
   16b60:	ldp	x25, x26, [sp, #64]
   16b64:	ldp	x27, x28, [sp, #80]
   16b68:	ldp	x29, x30, [sp], #112
   16b6c:	ret
   16b70:	mov	x0, x21
   16b74:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   16b78:	str	x0, [sp, #104]
   16b7c:	mov	x22, x27
   16b80:	add	x24, sp, #0x68
   16b84:	mov	w23, #0x1                   	// #1
   16b88:	b	16b00 <GOMP_taskgroup_reduction_register@@GOMP_5.0+0x154>

0000000000016b8c <GOMP_taskloop@@GOMP_4.5>:
   16b8c:	stp	x29, x30, [sp, #-416]!
   16b90:	mov	x29, sp
   16b94:	stp	x19, x20, [sp, #16]
   16b98:	stp	x21, x22, [sp, #32]
   16b9c:	stp	x23, x24, [sp, #48]
   16ba0:	stp	x25, x26, [sp, #64]
   16ba4:	stp	x27, x28, [sp, #80]
   16ba8:	str	x0, [x29, #184]
   16bac:	mov	x22, x1
   16bb0:	str	x2, [x29, #168]
   16bb4:	str	x3, [x29, #160]
   16bb8:	mov	x23, x4
   16bbc:	mov	w24, w5
   16bc0:	mov	w21, w7
   16bc4:	ldr	x20, [x29, #416]
   16bc8:	ldr	x19, [x29, #424]
   16bcc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16bd0:	ldr	x0, [x0, #4016]
   16bd4:	mrs	x1, tpidr_el0
   16bd8:	add	x0, x1, x0
   16bdc:	ldr	x28, [x0, #16]
   16be0:	cbz	x28, 16bec <GOMP_taskloop@@GOMP_4.5+0x60>
   16be4:	ldr	w0, [x28, #132]
   16be8:	tbnz	w0, #2, 177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   16bec:	ldr	x0, [x29, #432]
   16bf0:	cmp	x0, #0x0
   16bf4:	b.le	16c60 <GOMP_taskloop@@GOMP_4.5+0xd4>
   16bf8:	cmp	x20, x19
   16bfc:	b.ge	177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>  // b.tcont
   16c00:	sub	x0, x0, #0x1
   16c04:	sub	x19, x19, x20
   16c08:	add	x0, x19, x0
   16c0c:	ldr	x1, [x29, #432]
   16c10:	sdiv	x1, x0, x1
   16c14:	str	x1, [x29, #192]
   16c18:	tbz	w24, #9, 16ca0 <GOMP_taskloop@@GOMP_4.5+0x114>
   16c1c:	udiv	x0, x1, x6
   16c20:	str	x0, [x29, #200]
   16c24:	cmp	x0, #0x1
   16c28:	b.ls	16ce4 <GOMP_taskloop@@GOMP_4.5+0x158>  // b.plast
   16c2c:	cmp	x6, x0
   16c30:	b.hi	16c74 <GOMP_taskloop@@GOMP_4.5+0xe8>  // b.pmore
   16c34:	mul	x0, x6, x0
   16c38:	ldr	x2, [x29, #432]
   16c3c:	mul	x19, x6, x2
   16c40:	cmp	x1, x0
   16c44:	b.eq	16cf0 <GOMP_taskloop@@GOMP_4.5+0x164>  // b.none
   16c48:	add	x19, x19, x2
   16c4c:	udiv	x0, x1, x6
   16c50:	msub	x6, x0, x6, x1
   16c54:	sub	x0, x6, #0x1
   16c58:	str	x0, [x29, #192]
   16c5c:	b	16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16c60:	cmp	x20, x19
   16c64:	b.le	177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   16c68:	ldr	x0, [x29, #432]
   16c6c:	add	x0, x0, #0x1
   16c70:	b	16c04 <GOMP_taskloop@@GOMP_4.5+0x78>
   16c74:	ldr	x0, [x29, #192]
   16c78:	ldr	x1, [x29, #200]
   16c7c:	udiv	x19, x0, x1
   16c80:	msub	x0, x19, x1, x0
   16c84:	ldr	x1, [x29, #432]
   16c88:	mul	x19, x19, x1
   16c8c:	cbz	x0, 16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16c90:	add	x19, x19, x1
   16c94:	sub	x0, x0, #0x1
   16c98:	str	x0, [x29, #192]
   16c9c:	b	16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16ca0:	cbnz	x6, 16cb0 <GOMP_taskloop@@GOMP_4.5+0x124>
   16ca4:	mov	x6, #0x1                   	// #1
   16ca8:	cbz	x28, 16cb0 <GOMP_taskloop@@GOMP_4.5+0x124>
   16cac:	ldr	w6, [x28]
   16cb0:	ldr	x0, [x29, #192]
   16cb4:	cmp	x6, x0
   16cb8:	b.cs	16cf8 <GOMP_taskloop@@GOMP_4.5+0x16c>  // b.hs, b.nlast
   16cbc:	udiv	x19, x0, x6
   16cc0:	msub	x0, x19, x6, x0
   16cc4:	ldr	x1, [x29, #432]
   16cc8:	mul	x19, x19, x1
   16ccc:	str	x6, [x29, #200]
   16cd0:	cbz	x0, 16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16cd4:	add	x19, x19, x1
   16cd8:	sub	x0, x0, #0x1
   16cdc:	str	x0, [x29, #192]
   16ce0:	b	16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16ce4:	mov	x0, #0x1                   	// #1
   16ce8:	str	x0, [x29, #200]
   16cec:	b	16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16cf0:	str	x0, [x29, #192]
   16cf4:	b	16d04 <GOMP_taskloop@@GOMP_4.5+0x178>
   16cf8:	ldr	x19, [x29, #432]
   16cfc:	ldr	x0, [x29, #192]
   16d00:	str	x0, [x29, #200]
   16d04:	and	w0, w24, #0x800
   16d08:	str	w0, [x29, #176]
   16d0c:	tbz	w24, #11, 16de8 <GOMP_taskloop@@GOMP_4.5+0x25c>
   16d10:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16d14:	ldrb	w0, [x0, #1364]
   16d18:	cbnz	w0, 16d84 <GOMP_taskloop@@GOMP_4.5+0x1f8>
   16d1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16d20:	ldr	w7, [x0, #1368]
   16d24:	cmp	w7, w21
   16d28:	csel	w0, w7, w21, le
   16d2c:	str	w0, [x29, #180]
   16d30:	tst	x24, #0x400
   16d34:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   16d38:	b.ne	16dfc <GOMP_taskloop@@GOMP_4.5+0x270>  // b.any
   16d3c:	ldr	x0, [x29, #168]
   16d40:	cbnz	x0, 16ebc <GOMP_taskloop@@GOMP_4.5+0x330>
   16d44:	mov	x21, #0x0                   	// #0
   16d48:	ldr	x0, [x29, #200]
   16d4c:	cbz	x0, 177d0 <GOMP_taskloop@@GOMP_4.5+0xc44>
   16d50:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16d54:	ldr	x23, [x23, #4016]
   16d58:	mrs	x0, tpidr_el0
   16d5c:	add	x23, x0, x23
   16d60:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16d64:	add	x0, x0, #0x2b8
   16d68:	add	x26, x29, #0xd0
   16d6c:	mov	w27, #0x1                   	// #1
   16d70:	add	x1, x26, #0x8
   16d74:	str	x1, [x29, #160]
   16d78:	str	x28, [x29, #168]
   16d7c:	mov	x28, x0
   16d80:	b	170dc <GOMP_taskloop@@GOMP_4.5+0x550>
   16d84:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16d88:	ldr	x0, [x0, #4016]
   16d8c:	mrs	x1, tpidr_el0
   16d90:	add	x0, x1, x0
   16d94:	ldr	x25, [x0, #80]
   16d98:	cbz	x25, 177f8 <GOMP_taskloop@@GOMP_4.5+0xc6c>
   16d9c:	ldr	x0, [x25, #40]
   16da0:	cbz	x0, 16dc4 <GOMP_taskloop@@GOMP_4.5+0x238>
   16da4:	ldrb	w1, [x0, #49]
   16da8:	cbnz	w1, 177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   16dac:	ldrb	w1, [x0, #50]
   16db0:	cbz	w1, 16dc4 <GOMP_taskloop@@GOMP_4.5+0x238>
   16db4:	ldr	x0, [x0]
   16db8:	cbz	x0, 16dc4 <GOMP_taskloop@@GOMP_4.5+0x238>
   16dbc:	ldrb	w0, [x0, #49]
   16dc0:	cbnz	w0, 177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   16dc4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16dc8:	ldr	w0, [x0, #1368]
   16dcc:	cmp	w0, w21
   16dd0:	csel	w0, w0, w21, le
   16dd4:	str	w0, [x29, #180]
   16dd8:	tst	x24, #0x400
   16ddc:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   16de0:	b.eq	16d3c <GOMP_taskloop@@GOMP_4.5+0x1b0>  // b.none
   16de4:	b	16e14 <GOMP_taskloop@@GOMP_4.5+0x288>
   16de8:	bl	16298 <GOMP_taskgroup_start@@GOMP_4.0>
   16dec:	tbz	w24, #12, 16d1c <GOMP_taskloop@@GOMP_4.5+0x190>
   16df0:	ldr	x0, [x22, #16]
   16df4:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   16df8:	b	16d1c <GOMP_taskloop@@GOMP_4.5+0x190>
   16dfc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16e00:	ldr	x0, [x0, #4016]
   16e04:	mrs	x1, tpidr_el0
   16e08:	add	x0, x1, x0
   16e0c:	ldr	x25, [x0, #80]
   16e10:	cbz	x25, 16e1c <GOMP_taskloop@@GOMP_4.5+0x290>
   16e14:	ldrb	w0, [x25, #205]
   16e18:	cbnz	w0, 16d3c <GOMP_taskloop@@GOMP_4.5+0x1b0>
   16e1c:	ldr	w1, [x28, #1320]
   16e20:	ldr	x0, [x29, #200]
   16e24:	add	x1, x1, x0
   16e28:	ldr	w0, [x28]
   16e2c:	lsl	w0, w0, #6
   16e30:	cmp	x1, x0
   16e34:	b.hi	16d3c <GOMP_taskloop@@GOMP_4.5+0x1b0>  // b.pmore
   16e38:	mov	x0, sp
   16e3c:	str	x0, [x29, #104]
   16e40:	ldr	x1, [x29, #200]
   16e44:	lsl	x0, x1, #3
   16e48:	add	x0, x0, #0xf
   16e4c:	and	x0, x0, #0xfffffffffffffff0
   16e50:	sub	sp, sp, x0
   16e54:	mov	x0, sp
   16e58:	str	x0, [x29, #152]
   16e5c:	ldr	x27, [x25, #40]
   16e60:	cbz	x1, 172a0 <GOMP_taskloop@@GOMP_4.5+0x714>
   16e64:	ubfx	x0, x24, #1, #1
   16e68:	mov	x2, x0
   16e6c:	mov	x24, #0x0                   	// #0
   16e70:	add	x0, x23, #0xcf
   16e74:	str	x0, [x29, #144]
   16e78:	ldr	x1, [x29, #160]
   16e7c:	add	x0, x1, x0
   16e80:	str	x0, [x29, #136]
   16e84:	neg	x0, x23
   16e88:	str	x0, [x29, #128]
   16e8c:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16e90:	ldr	x26, [x26, #4016]
   16e94:	mrs	x0, tpidr_el0
   16e98:	add	x26, x0, x26
   16e9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16ea0:	add	x0, x0, #0x2b8
   16ea4:	str	x0, [x29, #120]
   16ea8:	str	x28, [x29, #96]
   16eac:	str	x22, [x29, #112]
   16eb0:	mov	w22, w2
   16eb4:	ldr	x28, [x29, #168]
   16eb8:	b	1721c <GOMP_taskloop@@GOMP_4.5+0x690>
   16ebc:	mov	x0, sp
   16ec0:	str	x0, [x29, #144]
   16ec4:	ldr	x3, [x29, #200]
   16ec8:	add	x0, x3, x3, lsl #1
   16ecc:	add	x0, x3, x0, lsl #2
   16ed0:	lsl	x2, x0, #4
   16ed4:	mov	x1, sp
   16ed8:	sub	x0, x1, x0, lsl #4
   16edc:	mov	sp, x0
   16ee0:	mov	x21, sp
   16ee4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16ee8:	ldr	x0, [x0, #4016]
   16eec:	mrs	x1, tpidr_el0
   16ef0:	add	x0, x1, x0
   16ef4:	ldr	x0, [x0, #80]
   16ef8:	str	x0, [x29, #152]
   16efc:	ldr	x0, [x29, #160]
   16f00:	add	x0, x0, x23
   16f04:	sub	x0, x0, #0x1
   16f08:	neg	x25, x23
   16f0c:	and	x0, x0, x25
   16f10:	str	x0, [x29, #160]
   16f14:	sub	x23, x23, #0x1
   16f18:	madd	x0, x0, x3, x23
   16f1c:	add	x0, x0, #0xf
   16f20:	and	x0, x0, #0xfffffffffffffff0
   16f24:	sub	sp, sp, x0
   16f28:	add	x23, sp, x23
   16f2c:	and	x25, x23, x25
   16f30:	cbz	x3, 17094 <GOMP_taskloop@@GOMP_4.5+0x508>
   16f34:	add	x1, x21, x2
   16f38:	mov	x27, x25
   16f3c:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16f40:	ldr	x26, [x26, #4016]
   16f44:	mrs	x0, tpidr_el0
   16f48:	add	x26, x0, x26
   16f4c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   16f50:	add	x0, x0, #0x2b8
   16f54:	ubfx	x2, x24, #1, #1
   16f58:	str	x19, [x29, #136]
   16f5c:	str	x28, [x29, #128]
   16f60:	str	x25, [x29, #120]
   16f64:	str	x21, [x29, #112]
   16f68:	ldr	w23, [x29, #180]
   16f6c:	ldr	x24, [x29, #168]
   16f70:	str	x20, [x29, #416]
   16f74:	mov	x20, x1
   16f78:	mov	x25, x0
   16f7c:	mov	w28, w2
   16f80:	b	17844 <GOMP_taskloop@@GOMP_4.5+0xcb8>
   16f84:	ldr	x19, [x29, #136]
   16f88:	ldr	x28, [x29, #128]
   16f8c:	ldr	x25, [x29, #120]
   16f90:	ldr	x23, [x29, #112]
   16f94:	ldr	x20, [x29, #416]
   16f98:	mov	x21, #0x0                   	// #0
   16f9c:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   16fa0:	ldr	x26, [x26, #4016]
   16fa4:	mrs	x0, tpidr_el0
   16fa8:	add	x26, x0, x26
   16fac:	add	x28, x28, #0x500
   16fb0:	mov	w27, #0x1                   	// #1
   16fb4:	ldr	x24, [x29, #432]
   16fb8:	b	17010 <GOMP_taskloop@@GOMP_4.5+0x484>
   16fbc:	mov	x0, x28
   16fc0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   16fc4:	b	17070 <GOMP_taskloop@@GOMP_4.5+0x4e4>
   16fc8:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   16fcc:	str	xzr, [x22, #8]
   16fd0:	b	16fe8 <GOMP_taskloop@@GOMP_4.5+0x45c>
   16fd4:	stur	xzr, [x0, #-112]
   16fd8:	ldr	x0, [x0]
   16fdc:	ldr	x1, [x22, #24]
   16fe0:	cmp	x0, x1
   16fe4:	b.ne	16fd4 <GOMP_taskloop@@GOMP_4.5+0x448>  // b.any
   16fe8:	ldxr	w0, [x28]
   16fec:	stlxr	w1, wzr, [x28]
   16ff0:	cbnz	w1, 16fe8 <GOMP_taskloop@@GOMP_4.5+0x45c>
   16ff4:	tbnz	w0, #31, 17088 <GOMP_taskloop@@GOMP_4.5+0x4fc>
   16ff8:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   16ffc:	add	x21, x21, #0x1
   17000:	add	x23, x23, #0xd0
   17004:	ldr	x0, [x29, #200]
   17008:	cmp	x0, x21
   1700c:	b.eq	17094 <GOMP_taskloop@@GOMP_4.5+0x508>  // b.none
   17010:	mov	x22, x23
   17014:	str	x23, [x26, #80]
   17018:	str	x20, [x25]
   1701c:	add	x20, x20, x19
   17020:	str	x20, [x25, #8]
   17024:	sub	x0, x19, x24
   17028:	ldr	x1, [x29, #192]
   1702c:	cmp	x1, x21
   17030:	csel	x19, x0, x19, eq  // eq = none
   17034:	mov	x0, x25
   17038:	ldr	x1, [x29, #184]
   1703c:	blr	x1
   17040:	ldr	x0, [x29, #160]
   17044:	add	x25, x25, x0
   17048:	ldr	x0, [x23, #8]
   1704c:	cbnz	x0, 17058 <GOMP_taskloop@@GOMP_4.5+0x4cc>
   17050:	ldr	x0, [x23, #24]
   17054:	cbz	x0, 16ff8 <GOMP_taskloop@@GOMP_4.5+0x46c>
   17058:	ldaxr	w1, [x28]
   1705c:	cbnz	w1, 17068 <GOMP_taskloop@@GOMP_4.5+0x4dc>
   17060:	stxr	w0, w27, [x28]
   17064:	cbnz	w0, 17058 <GOMP_taskloop@@GOMP_4.5+0x4cc>
   17068:	cmp	w1, #0x0
   1706c:	b.ne	16fbc <GOMP_taskloop@@GOMP_4.5+0x430>  // b.any
   17070:	add	x0, x23, #0x8
   17074:	ldr	x1, [x22, #8]
   17078:	cbnz	x1, 16fc8 <GOMP_taskloop@@GOMP_4.5+0x43c>
   1707c:	ldr	x0, [x22, #24]
   17080:	cbnz	x0, 16fd4 <GOMP_taskloop@@GOMP_4.5+0x448>
   17084:	b	16fe8 <GOMP_taskloop@@GOMP_4.5+0x45c>
   17088:	mov	x0, x28
   1708c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   17090:	b	16ff8 <GOMP_taskloop@@GOMP_4.5+0x46c>
   17094:	ldr	x0, [x29, #144]
   17098:	mov	sp, x0
   1709c:	b	177d0 <GOMP_taskloop@@GOMP_4.5+0xc44>
   170a0:	mov	x0, x25
   170a4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   170a8:	b	1718c <GOMP_taskloop@@GOMP_4.5+0x600>
   170ac:	ldr	x0, [x29, #160]
   170b0:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   170b4:	str	xzr, [x29, #216]
   170b8:	ldxr	w0, [x25]
   170bc:	stlxr	w1, wzr, [x25]
   170c0:	cbnz	w1, 170b8 <GOMP_taskloop@@GOMP_4.5+0x52c>
   170c4:	tbnz	w0, #31, 171b4 <GOMP_taskloop@@GOMP_4.5+0x628>
   170c8:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   170cc:	add	x21, x21, #0x1
   170d0:	ldr	x0, [x29, #200]
   170d4:	cmp	x0, x21
   170d8:	b.eq	177d0 <GOMP_taskloop@@GOMP_4.5+0xc44>  // b.none
   170dc:	ldr	x1, [x23, #80]
   170e0:	add	x2, x1, #0x90
   170e4:	cmp	x1, #0x0
   170e8:	csel	x2, x28, x2, eq  // eq = none
   170ec:	mov	x0, x26
   170f0:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   170f4:	ldr	w0, [x29, #180]
   170f8:	str	w0, [x29, #296]
   170fc:	str	w27, [x29, #408]
   17100:	ldr	x0, [x23, #80]
   17104:	cbz	x0, 1789c <GOMP_taskloop@@GOMP_4.5+0xd10>
   17108:	ldrb	w2, [x0, #205]
   1710c:	ubfx	x1, x24, #1, #1
   17110:	cmp	w2, #0x0
   17114:	csinc	w1, w1, wzr, eq  // eq = none
   17118:	strb	w1, [x29, #413]
   1711c:	ldrb	w1, [x0, #204]
   17120:	strb	w1, [x29, #412]
   17124:	ldr	x0, [x0, #40]
   17128:	str	x0, [x29, #248]
   1712c:	str	x26, [x23, #80]
   17130:	str	x20, [x22]
   17134:	add	x20, x20, x19
   17138:	str	x20, [x22, #8]
   1713c:	ldr	x0, [x29, #432]
   17140:	sub	x0, x19, x0
   17144:	ldr	x1, [x29, #192]
   17148:	cmp	x1, x21
   1714c:	csel	x19, x0, x19, eq  // eq = none
   17150:	mov	x0, x22
   17154:	ldr	x1, [x29, #184]
   17158:	blr	x1
   1715c:	ldr	x0, [x29, #216]
   17160:	cbnz	x0, 1716c <GOMP_taskloop@@GOMP_4.5+0x5e0>
   17164:	ldr	x0, [x29, #232]
   17168:	cbz	x0, 170c8 <GOMP_taskloop@@GOMP_4.5+0x53c>
   1716c:	ldr	x0, [x29, #168]
   17170:	add	x25, x0, #0x500
   17174:	ldaxr	w1, [x25]
   17178:	cbnz	w1, 17184 <GOMP_taskloop@@GOMP_4.5+0x5f8>
   1717c:	stxr	w0, w27, [x25]
   17180:	cbnz	w0, 17174 <GOMP_taskloop@@GOMP_4.5+0x5e8>
   17184:	cmp	w1, #0x0
   17188:	b.ne	170a0 <GOMP_taskloop@@GOMP_4.5+0x514>  // b.any
   1718c:	ldr	x1, [x29, #216]
   17190:	cbnz	x1, 170ac <GOMP_taskloop@@GOMP_4.5+0x520>
   17194:	ldr	x0, [x29, #232]
   17198:	cbz	x0, 170b8 <GOMP_taskloop@@GOMP_4.5+0x52c>
   1719c:	stur	xzr, [x0, #-112]
   171a0:	ldr	x0, [x0]
   171a4:	ldr	x1, [x29, #232]
   171a8:	cmp	x0, x1
   171ac:	b.ne	1719c <GOMP_taskloop@@GOMP_4.5+0x610>  // b.any
   171b0:	b	170b8 <GOMP_taskloop@@GOMP_4.5+0x52c>
   171b4:	mov	x0, x25
   171b8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   171bc:	b	170c8 <GOMP_taskloop@@GOMP_4.5+0x53c>
   171c0:	ldr	x2, [x29, #160]
   171c4:	ldr	x1, [x29, #112]
   171c8:	mov	x0, x23
   171cc:	bl	85c0 <memcpy@plt>
   171d0:	str	x20, [x23]
   171d4:	add	x20, x20, x19
   171d8:	str	x20, [x23, #8]
   171dc:	ldr	x0, [x29, #432]
   171e0:	sub	x0, x19, x0
   171e4:	ldr	x1, [x29, #192]
   171e8:	cmp	x1, x24
   171ec:	csel	x19, x0, x19, eq  // eq = none
   171f0:	str	x25, [x26, #80]
   171f4:	mov	w0, #0x2                   	// #2
   171f8:	str	w0, [x21, #200]
   171fc:	ldr	x0, [x29, #184]
   17200:	str	x0, [x21, #184]
   17204:	str	x23, [x21, #192]
   17208:	strb	w22, [x21, #205]
   1720c:	add	x24, x24, #0x1
   17210:	ldr	x0, [x29, #200]
   17214:	cmp	x0, x24
   17218:	b.eq	1729c <GOMP_taskloop@@GOMP_4.5+0x710>  // b.none
   1721c:	ldr	x0, [x29, #136]
   17220:	bl	8c28 <fprintf@plt+0x118>
   17224:	mov	x21, x0
   17228:	ldr	x0, [x29, #152]
   1722c:	str	x21, [x0, x24, lsl #3]
   17230:	ldr	x0, [x29, #144]
   17234:	add	x23, x21, x0
   17238:	ldr	x0, [x29, #128]
   1723c:	and	x23, x23, x0
   17240:	ldr	x0, [x26, #80]
   17244:	add	x2, x0, #0x90
   17248:	cmp	x0, #0x0
   1724c:	ldr	x0, [x29, #120]
   17250:	csel	x2, x0, x2, eq  // eq = none
   17254:	mov	x1, x25
   17258:	mov	x0, x21
   1725c:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   17260:	ldr	w0, [x29, #180]
   17264:	str	w0, [x21, #88]
   17268:	mov	w0, #0x1                   	// #1
   1726c:	str	w0, [x21, #200]
   17270:	ldrb	w0, [x25, #204]
   17274:	strb	w0, [x21, #204]
   17278:	str	x27, [x21, #40]
   1727c:	str	x21, [x26, #80]
   17280:	cbz	x28, 171c0 <GOMP_taskloop@@GOMP_4.5+0x634>
   17284:	ldr	x1, [x29, #112]
   17288:	mov	x0, x23
   1728c:	blr	x28
   17290:	mov	w0, #0x1                   	// #1
   17294:	strb	w0, [x21, #206]
   17298:	b	171d0 <GOMP_taskloop@@GOMP_4.5+0x644>
   1729c:	ldr	x28, [x29, #96]
   172a0:	add	x26, x28, #0x500
   172a4:	mov	w0, #0x1                   	// #1
   172a8:	ldaxr	w1, [x26]
   172ac:	cbnz	w1, 172b8 <GOMP_taskloop@@GOMP_4.5+0x72c>
   172b0:	stxr	w2, w0, [x26]
   172b4:	cbnz	w2, 172a8 <GOMP_taskloop@@GOMP_4.5+0x71c>
   172b8:	cmp	w1, #0x0
   172bc:	b.ne	17318 <GOMP_taskloop@@GOMP_4.5+0x78c>  // b.any
   172c0:	ldr	x0, [x29, #168]
   172c4:	cmp	x0, #0x0
   172c8:	cset	w1, eq  // eq = none
   172cc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   172d0:	ldrb	w0, [x0, #1364]
   172d4:	tst	w1, w0
   172d8:	b.ne	17324 <GOMP_taskloop@@GOMP_4.5+0x798>  // b.any
   172dc:	cbz	x27, 172f0 <GOMP_taskloop@@GOMP_4.5+0x764>
   172e0:	ldr	x0, [x27, #56]
   172e4:	ldr	x1, [x29, #200]
   172e8:	add	x0, x0, x1
   172ec:	str	x0, [x27, #56]
   172f0:	mov	x20, #0x0                   	// #0
   172f4:	add	x24, x29, #0xd0
   172f8:	ldr	x0, [x29, #200]
   172fc:	cbz	x0, 17740 <GOMP_taskloop@@GOMP_4.5+0xbb4>
   17300:	str	x26, [x29, #168]
   17304:	ldr	w23, [x29, #180]
   17308:	ldr	x26, [x29, #152]
   1730c:	str	x24, [x29, #192]
   17310:	ldr	x24, [x29, #200]
   17314:	b	175d4 <GOMP_taskloop@@GOMP_4.5+0xa48>
   17318:	mov	x0, x26
   1731c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   17320:	b	172c0 <GOMP_taskloop@@GOMP_4.5+0x734>
   17324:	ldr	w0, [x28, #132]
   17328:	tbnz	w0, #2, 17350 <GOMP_taskloop@@GOMP_4.5+0x7c4>
   1732c:	cbz	x27, 172f0 <GOMP_taskloop@@GOMP_4.5+0x764>
   17330:	ldrb	w0, [x27, #49]
   17334:	cbnz	w0, 17350 <GOMP_taskloop@@GOMP_4.5+0x7c4>
   17338:	ldrb	w0, [x27, #50]
   1733c:	cbz	w0, 172e0 <GOMP_taskloop@@GOMP_4.5+0x754>
   17340:	ldr	x0, [x27]
   17344:	cbz	x0, 172e0 <GOMP_taskloop@@GOMP_4.5+0x754>
   17348:	ldrb	w0, [x0, #49]
   1734c:	cbz	w0, 172e0 <GOMP_taskloop@@GOMP_4.5+0x754>
   17350:	mov	x0, x26
   17354:	bl	12ac8 <GOMP_single_copy_end@@GOMP_1.0+0xa44>
   17358:	ldr	x0, [x29, #200]
   1735c:	cbz	x0, 1738c <GOMP_taskloop@@GOMP_4.5+0x800>
   17360:	mov	x19, #0x0                   	// #0
   17364:	ldr	x0, [x29, #152]
   17368:	ldr	x20, [x0, x19, lsl #3]
   1736c:	ldr	x0, [x20, #56]
   17370:	cbnz	x0, 173a0 <GOMP_taskloop@@GOMP_4.5+0x814>
   17374:	mov	x0, x20
   17378:	bl	8900 <free@plt>
   1737c:	add	x19, x19, #0x1
   17380:	ldr	x0, [x29, #200]
   17384:	cmp	x0, x19
   17388:	b.ne	17364 <GOMP_taskloop@@GOMP_4.5+0x7d8>  // b.any
   1738c:	ldr	w0, [x29, #176]
   17390:	cbz	w0, 173a8 <GOMP_taskloop@@GOMP_4.5+0x81c>
   17394:	ldr	x0, [x29, #104]
   17398:	mov	sp, x0
   1739c:	b	177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   173a0:	bl	8900 <free@plt>
   173a4:	b	17374 <GOMP_taskloop@@GOMP_4.5+0x7e8>
   173a8:	bl	16320 <GOMP_taskgroup_end@@GOMP_4.0>
   173ac:	b	17394 <GOMP_taskloop@@GOMP_4.5+0x808>
   173b0:	add	x1, x25, #0x8
   173b4:	str	x1, [x29, #184]
   173b8:	cbz	x0, 17400 <GOMP_taskloop@@GOMP_4.5+0x874>
   173bc:	str	w23, [x29, #208]
   173c0:	ldr	x1, [x29, #192]
   173c4:	ldr	x0, [x29, #184]
   173c8:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   173cc:	cbz	x0, 17444 <GOMP_taskloop@@GOMP_4.5+0x8b8>
   173d0:	add	x1, x19, #0x70
   173d4:	ldr	x2, [x0, #8]
   173d8:	cbz	x2, 17478 <GOMP_taskloop@@GOMP_4.5+0x8ec>
   173dc:	str	x2, [x19, #112]
   173e0:	ldr	x2, [x2, #8]
   173e4:	str	x2, [x19, #120]
   173e8:	str	x1, [x0, #8]
   173ec:	ldr	x0, [x19, #112]
   173f0:	str	x1, [x0, #8]
   173f4:	ldr	x0, [x19, #120]
   173f8:	str	x1, [x0]
   173fc:	b	1761c <GOMP_taskloop@@GOMP_4.5+0xa90>
   17400:	ldr	x0, [x25, #24]
   17404:	cbz	x0, 17444 <GOMP_taskloop@@GOMP_4.5+0x8b8>
   17408:	mov	x0, #0x28                  	// #40
   1740c:	bl	8c28 <fprintf@plt+0x118>
   17410:	mov	x1, x0
   17414:	str	xzr, [x0, #24]
   17418:	str	xzr, [x0, #32]
   1741c:	str	wzr, [x0]
   17420:	ldr	x0, [x25, #24]
   17424:	str	x0, [x1, #8]
   17428:	ldr	x0, [x25, #32]
   1742c:	str	x0, [x1, #16]
   17430:	ldr	x0, [x29, #184]
   17434:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   17438:	str	xzr, [x25, #24]
   1743c:	ldr	x0, [x25, #8]
   17440:	cbnz	x0, 173bc <GOMP_taskloop@@GOMP_4.5+0x830>
   17444:	mov	x0, #0x28                  	// #40
   17448:	bl	8c28 <fprintf@plt+0x118>
   1744c:	mov	x22, x0
   17450:	str	xzr, [x0, #24]
   17454:	str	xzr, [x0, #32]
   17458:	str	w23, [x0]
   1745c:	str	xzr, [x0, #8]
   17460:	str	xzr, [x0, #16]
   17464:	mov	x1, x0
   17468:	ldr	x0, [x29, #184]
   1746c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   17470:	mov	x0, x22
   17474:	b	173d0 <GOMP_taskloop@@GOMP_4.5+0x844>
   17478:	str	x1, [x19, #112]
   1747c:	str	x1, [x19, #120]
   17480:	str	x1, [x0, #8]
   17484:	b	1761c <GOMP_taskloop@@GOMP_4.5+0xa90>
   17488:	str	x0, [x19, #112]
   1748c:	str	x0, [x19, #120]
   17490:	str	x0, [x25, #24]
   17494:	b	1761c <GOMP_taskloop@@GOMP_4.5+0xa90>
   17498:	add	x1, x27, #0x8
   1749c:	str	x1, [x29, #184]
   174a0:	cbz	x0, 174e8 <GOMP_taskloop@@GOMP_4.5+0x95c>
   174a4:	str	w23, [x29, #208]
   174a8:	ldr	x1, [x29, #192]
   174ac:	ldr	x0, [x29, #184]
   174b0:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   174b4:	cbz	x0, 1752c <GOMP_taskloop@@GOMP_4.5+0x9a0>
   174b8:	add	x1, x19, #0x80
   174bc:	ldr	x2, [x0, #8]
   174c0:	cbz	x2, 17560 <GOMP_taskloop@@GOMP_4.5+0x9d4>
   174c4:	str	x2, [x19, #128]
   174c8:	ldr	x2, [x2, #8]
   174cc:	str	x2, [x19, #136]
   174d0:	str	x1, [x0, #8]
   174d4:	ldr	x0, [x19, #128]
   174d8:	str	x1, [x0, #8]
   174dc:	ldr	x0, [x19, #136]
   174e0:	str	x1, [x0]
   174e4:	b	1757c <GOMP_taskloop@@GOMP_4.5+0x9f0>
   174e8:	ldr	x0, [x27, #24]
   174ec:	cbz	x0, 1752c <GOMP_taskloop@@GOMP_4.5+0x9a0>
   174f0:	mov	x0, #0x28                  	// #40
   174f4:	bl	8c28 <fprintf@plt+0x118>
   174f8:	mov	x1, x0
   174fc:	str	xzr, [x0, #24]
   17500:	str	xzr, [x0, #32]
   17504:	str	wzr, [x0]
   17508:	ldr	x0, [x27, #24]
   1750c:	str	x0, [x1, #8]
   17510:	ldr	x0, [x27, #32]
   17514:	str	x0, [x1, #16]
   17518:	ldr	x0, [x29, #184]
   1751c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   17520:	str	xzr, [x27, #24]
   17524:	ldr	x0, [x27, #8]
   17528:	cbnz	x0, 174a4 <GOMP_taskloop@@GOMP_4.5+0x918>
   1752c:	mov	x0, #0x28                  	// #40
   17530:	bl	8c28 <fprintf@plt+0x118>
   17534:	mov	x22, x0
   17538:	str	xzr, [x0, #24]
   1753c:	str	xzr, [x0, #32]
   17540:	str	w23, [x0]
   17544:	str	xzr, [x0, #8]
   17548:	str	xzr, [x0, #16]
   1754c:	mov	x1, x0
   17550:	ldr	x0, [x29, #184]
   17554:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   17558:	mov	x0, x22
   1755c:	b	174b8 <GOMP_taskloop@@GOMP_4.5+0x92c>
   17560:	str	x1, [x19, #128]
   17564:	str	x1, [x19, #136]
   17568:	str	x1, [x0, #8]
   1756c:	b	1757c <GOMP_taskloop@@GOMP_4.5+0x9f0>
   17570:	str	x0, [x19, #128]
   17574:	str	x0, [x19, #136]
   17578:	str	x0, [x27, #24]
   1757c:	ldr	x0, [x28, #1288]
   17580:	cmp	x0, #0x0
   17584:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   17588:	b.ne	17660 <GOMP_taskloop@@GOMP_4.5+0xad4>  // b.any
   1758c:	add	x1, x19, #0x60
   17590:	ldr	x0, [x28, #1304]
   17594:	cbz	x0, 1772c <GOMP_taskloop@@GOMP_4.5+0xba0>
   17598:	str	x0, [x19, #96]
   1759c:	ldr	x2, [x0, #8]
   175a0:	str	x2, [x19, #104]
   175a4:	str	x1, [x0, #8]
   175a8:	ldr	x0, [x19, #104]
   175ac:	str	x1, [x0]
   175b0:	ldr	w0, [x28, #1320]
   175b4:	add	w0, w0, #0x1
   175b8:	str	w0, [x28, #1320]
   175bc:	ldr	w0, [x28, #1324]
   175c0:	add	w0, w0, #0x1
   175c4:	str	w0, [x28, #1324]
   175c8:	add	x20, x20, #0x1
   175cc:	cmp	x24, x20
   175d0:	b.eq	1773c <GOMP_taskloop@@GOMP_4.5+0xbb0>  // b.none
   175d4:	ldr	x19, [x26, x20, lsl #3]
   175d8:	ldr	x0, [x25, #8]
   175dc:	cmp	w23, #0x0
   175e0:	cset	w21, gt
   175e4:	cmp	x0, #0x0
   175e8:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   175ec:	b.ne	173b0 <GOMP_taskloop@@GOMP_4.5+0x824>  // b.any
   175f0:	add	x0, x19, #0x70
   175f4:	ldr	x1, [x25, #24]
   175f8:	cbz	x1, 17488 <GOMP_taskloop@@GOMP_4.5+0x8fc>
   175fc:	str	x1, [x19, #112]
   17600:	ldr	x1, [x1, #8]
   17604:	str	x1, [x19, #120]
   17608:	str	x0, [x25, #24]
   1760c:	ldr	x1, [x19, #112]
   17610:	str	x0, [x1, #8]
   17614:	ldr	x1, [x19, #120]
   17618:	str	x0, [x1]
   1761c:	cbz	x27, 1757c <GOMP_taskloop@@GOMP_4.5+0x9f0>
   17620:	ldr	x0, [x27, #8]
   17624:	cmp	x0, #0x0
   17628:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   1762c:	b.ne	17498 <GOMP_taskloop@@GOMP_4.5+0x90c>  // b.any
   17630:	add	x0, x19, #0x80
   17634:	ldr	x1, [x27, #24]
   17638:	cbz	x1, 17570 <GOMP_taskloop@@GOMP_4.5+0x9e4>
   1763c:	str	x1, [x19, #128]
   17640:	ldr	x1, [x1, #8]
   17644:	str	x1, [x19, #136]
   17648:	str	x0, [x27, #24]
   1764c:	ldr	x1, [x19, #128]
   17650:	str	x0, [x1, #8]
   17654:	ldr	x1, [x19, #136]
   17658:	str	x0, [x1]
   1765c:	b	1757c <GOMP_taskloop@@GOMP_4.5+0x9f0>
   17660:	add	x22, x28, #0x508
   17664:	cbz	x0, 176a4 <GOMP_taskloop@@GOMP_4.5+0xb18>
   17668:	str	w23, [x29, #208]
   1766c:	ldr	x1, [x29, #192]
   17670:	mov	x0, x22
   17674:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   17678:	cbz	x0, 176e8 <GOMP_taskloop@@GOMP_4.5+0xb5c>
   1767c:	add	x2, x19, #0x60
   17680:	ldr	x1, [x0, #8]
   17684:	cbz	x1, 1771c <GOMP_taskloop@@GOMP_4.5+0xb90>
   17688:	str	x1, [x19, #96]
   1768c:	ldr	x0, [x1, #8]
   17690:	str	x0, [x19, #104]
   17694:	str	x2, [x1, #8]
   17698:	ldr	x0, [x19, #104]
   1769c:	str	x2, [x0]
   176a0:	b	175b0 <GOMP_taskloop@@GOMP_4.5+0xa24>
   176a4:	ldr	x0, [x28, #1304]
   176a8:	cbz	x0, 176e8 <GOMP_taskloop@@GOMP_4.5+0xb5c>
   176ac:	mov	x0, #0x28                  	// #40
   176b0:	bl	8c28 <fprintf@plt+0x118>
   176b4:	mov	x1, x0
   176b8:	str	xzr, [x0, #24]
   176bc:	str	xzr, [x0, #32]
   176c0:	str	wzr, [x0]
   176c4:	ldr	x0, [x22, #16]
   176c8:	str	x0, [x1, #8]
   176cc:	ldr	x0, [x22, #24]
   176d0:	str	x0, [x1, #16]
   176d4:	mov	x0, x22
   176d8:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   176dc:	str	xzr, [x22, #16]
   176e0:	ldr	x0, [x28, #1288]
   176e4:	cbnz	x0, 17668 <GOMP_taskloop@@GOMP_4.5+0xadc>
   176e8:	mov	x0, #0x28                  	// #40
   176ec:	bl	8c28 <fprintf@plt+0x118>
   176f0:	mov	x21, x0
   176f4:	str	xzr, [x0, #24]
   176f8:	str	xzr, [x0, #32]
   176fc:	str	w23, [x0]
   17700:	str	xzr, [x0, #8]
   17704:	str	xzr, [x0, #16]
   17708:	mov	x1, x0
   1770c:	mov	x0, x22
   17710:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   17714:	mov	x0, x21
   17718:	b	1767c <GOMP_taskloop@@GOMP_4.5+0xaf0>
   1771c:	str	x2, [x19, #96]
   17720:	str	x2, [x19, #104]
   17724:	str	x2, [x0, #8]
   17728:	b	175b0 <GOMP_taskloop@@GOMP_4.5+0xa24>
   1772c:	str	x1, [x19, #96]
   17730:	str	x1, [x19, #104]
   17734:	str	x1, [x28, #1304]
   17738:	b	175b0 <GOMP_taskloop@@GOMP_4.5+0xa24>
   1773c:	ldr	x26, [x29, #168]
   17740:	ldr	w0, [x28, #132]
   17744:	orr	w0, w0, #0x1
   17748:	str	w0, [x28, #132]
   1774c:	ldr	w2, [x28, #1328]
   17750:	ldrb	w0, [x25, #204]
   17754:	eor	w0, w0, #0x1
   17758:	ldr	w1, [x28]
   1775c:	add	w3, w2, w0
   17760:	cmp	w3, w1
   17764:	b.cs	177b8 <GOMP_taskloop@@GOMP_4.5+0xc2c>  // b.hs, b.nlast
   17768:	sub	w1, w1, w2
   1776c:	sub	w19, w1, w0
   17770:	ldr	x0, [x29, #200]
   17774:	cmp	x0, w19, sxtw
   17778:	csel	w19, w0, w19, cc  // cc = lo, ul, last
   1777c:	ldxr	w0, [x26]
   17780:	stlxr	w1, wzr, [x26]
   17784:	cbnz	w1, 1777c <GOMP_taskloop@@GOMP_4.5+0xbf0>
   17788:	tbnz	w0, #31, 177a4 <GOMP_taskloop@@GOMP_4.5+0xc18>
   1778c:	cbz	w19, 177c8 <GOMP_taskloop@@GOMP_4.5+0xc3c>
   17790:	mov	w1, w19
   17794:	add	x0, x28, #0x80
   17798:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   1779c:	b	177c8 <GOMP_taskloop@@GOMP_4.5+0xc3c>
   177a0:	mov	w19, #0x0                   	// #0
   177a4:	mov	x0, x26
   177a8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   177ac:	b	1778c <GOMP_taskloop@@GOMP_4.5+0xc00>
   177b0:	bl	16320 <GOMP_taskgroup_end@@GOMP_4.0>
   177b4:	b	177d8 <GOMP_taskloop@@GOMP_4.5+0xc4c>
   177b8:	ldxr	w0, [x26]
   177bc:	stlxr	w1, wzr, [x26]
   177c0:	cbnz	w1, 177b8 <GOMP_taskloop@@GOMP_4.5+0xc2c>
   177c4:	tbnz	w0, #31, 177a0 <GOMP_taskloop@@GOMP_4.5+0xc14>
   177c8:	ldr	x0, [x29, #104]
   177cc:	mov	sp, x0
   177d0:	ldr	w0, [x29, #176]
   177d4:	cbz	w0, 177b0 <GOMP_taskloop@@GOMP_4.5+0xc24>
   177d8:	mov	sp, x29
   177dc:	ldp	x19, x20, [sp, #16]
   177e0:	ldp	x21, x22, [sp, #32]
   177e4:	ldp	x23, x24, [sp, #48]
   177e8:	ldp	x25, x26, [sp, #64]
   177ec:	ldp	x27, x28, [sp, #80]
   177f0:	ldp	x29, x30, [sp], #416
   177f4:	ret
   177f8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   177fc:	ldr	w0, [x0, #1368]
   17800:	cmp	w0, w21
   17804:	csel	w0, w0, w21, le
   17808:	str	w0, [x29, #180]
   1780c:	tst	x24, #0x400
   17810:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   17814:	b.eq	16d3c <GOMP_taskloop@@GOMP_4.5+0x1b0>  // b.none
   17818:	b	16e1c <GOMP_taskloop@@GOMP_4.5+0x290>
   1781c:	strb	w28, [x21, #205]
   17820:	str	x19, [x26, #80]
   17824:	mov	x1, x22
   17828:	mov	x0, x27
   1782c:	blr	x24
   17830:	ldr	x0, [x29, #160]
   17834:	add	x27, x27, x0
   17838:	add	x21, x21, #0xd0
   1783c:	cmp	x20, x21
   17840:	b.eq	16f84 <GOMP_taskloop@@GOMP_4.5+0x3f8>  // b.none
   17844:	mov	x19, x21
   17848:	ldr	x0, [x26, #80]
   1784c:	add	x2, x0, #0x90
   17850:	cmp	x0, #0x0
   17854:	csel	x2, x25, x2, eq  // eq = none
   17858:	ldr	x1, [x29, #152]
   1785c:	mov	x0, x21
   17860:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   17864:	str	w23, [x21, #88]
   17868:	mov	w0, #0x1                   	// #1
   1786c:	str	w0, [x21, #200]
   17870:	ldr	x0, [x26, #80]
   17874:	cbz	x0, 1781c <GOMP_taskloop@@GOMP_4.5+0xc90>
   17878:	ldrb	w1, [x0, #205]
   1787c:	cmp	w1, #0x0
   17880:	csinc	w1, w28, wzr, eq  // eq = none
   17884:	strb	w1, [x21, #205]
   17888:	ldrb	w1, [x0, #204]
   1788c:	strb	w1, [x21, #204]
   17890:	ldr	x0, [x0, #40]
   17894:	str	x0, [x21, #40]
   17898:	b	17820 <GOMP_taskloop@@GOMP_4.5+0xc94>
   1789c:	ubfx	x0, x24, #1, #1
   178a0:	strb	w0, [x29, #413]
   178a4:	b	1712c <GOMP_taskloop@@GOMP_4.5+0x5a0>

00000000000178a8 <GOMP_taskloop_ull@@GOMP_4.5>:
   178a8:	stp	x29, x30, [sp, #-432]!
   178ac:	mov	x29, sp
   178b0:	stp	x19, x20, [sp, #16]
   178b4:	stp	x21, x22, [sp, #32]
   178b8:	stp	x23, x24, [sp, #48]
   178bc:	stp	x25, x26, [sp, #64]
   178c0:	stp	x27, x28, [sp, #80]
   178c4:	str	x0, [x29, #200]
   178c8:	mov	x22, x1
   178cc:	str	x2, [x29, #184]
   178d0:	str	x3, [x29, #176]
   178d4:	mov	x23, x4
   178d8:	mov	w24, w5
   178dc:	mov	w21, w7
   178e0:	ldr	x20, [x29, #432]
   178e4:	ldr	x19, [x29, #440]
   178e8:	ldr	x0, [x29, #448]
   178ec:	sub	x2, x0, #0x1
   178f0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   178f4:	ldr	x0, [x0, #4016]
   178f8:	mrs	x1, tpidr_el0
   178fc:	add	x0, x1, x0
   17900:	ldr	x28, [x0, #16]
   17904:	cbz	x28, 17910 <GOMP_taskloop_ull@@GOMP_4.5+0x68>
   17908:	ldr	w0, [x28, #132]
   1790c:	tbnz	w0, #2, 18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   17910:	tbz	w24, #8, 1798c <GOMP_taskloop_ull@@GOMP_4.5+0xe4>
   17914:	cmp	x20, x19
   17918:	b.cs	18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>  // b.hs, b.nlast
   1791c:	sub	x0, x19, x20
   17920:	add	x2, x0, x2
   17924:	ldr	x0, [x29, #448]
   17928:	udiv	x0, x2, x0
   1792c:	str	x0, [x29, #208]
   17930:	tbz	w24, #9, 179f4 <GOMP_taskloop_ull@@GOMP_4.5+0x14c>
   17934:	ldr	x0, [x29, #208]
   17938:	udiv	x0, x0, x6
   1793c:	str	x0, [x29, #216]
   17940:	cmp	x0, #0x1
   17944:	b.ls	179b8 <GOMP_taskloop_ull@@GOMP_4.5+0x110>  // b.plast
   17948:	ldr	x0, [x29, #216]
   1794c:	cmp	x6, x0
   17950:	ccmn	x0, #0x1, #0x4, ls  // ls = plast
   17954:	b.eq	179c8 <GOMP_taskloop_ull@@GOMP_4.5+0x120>  // b.none
   17958:	mul	x0, x6, x0
   1795c:	ldr	x1, [x29, #448]
   17960:	mul	x19, x1, x6
   17964:	ldr	x1, [x29, #208]
   17968:	cmp	x1, x0
   1796c:	b.eq	17a38 <GOMP_taskloop_ull@@GOMP_4.5+0x190>  // b.none
   17970:	ldr	x0, [x29, #448]
   17974:	add	x19, x19, x0
   17978:	udiv	x0, x1, x6
   1797c:	msub	x6, x0, x6, x1
   17980:	sub	x0, x6, #0x1
   17984:	str	x0, [x29, #208]
   17988:	b	17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   1798c:	cmp	x20, x19
   17990:	b.ls	18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>  // b.plast
   17994:	sub	x0, x20, x19
   17998:	ldr	x1, [x29, #448]
   1799c:	mvn	x1, x1
   179a0:	add	x0, x0, x1
   179a4:	ldr	x1, [x29, #448]
   179a8:	neg	x1, x1
   179ac:	udiv	x0, x0, x1
   179b0:	str	x0, [x29, #208]
   179b4:	b	17930 <GOMP_taskloop_ull@@GOMP_4.5+0x88>
   179b8:	sub	x19, x19, x20
   179bc:	mov	x0, #0x1                   	// #1
   179c0:	str	x0, [x29, #216]
   179c4:	b	17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   179c8:	ldr	x0, [x29, #208]
   179cc:	ldr	x1, [x29, #216]
   179d0:	udiv	x19, x0, x1
   179d4:	msub	x0, x19, x1, x0
   179d8:	ldr	x1, [x29, #448]
   179dc:	mul	x19, x19, x1
   179e0:	cbz	x0, 17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   179e4:	add	x19, x19, x1
   179e8:	sub	x0, x0, #0x1
   179ec:	str	x0, [x29, #208]
   179f0:	b	17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   179f4:	cbnz	x6, 17a04 <GOMP_taskloop_ull@@GOMP_4.5+0x15c>
   179f8:	mov	x6, #0x1                   	// #1
   179fc:	cbz	x28, 17a04 <GOMP_taskloop_ull@@GOMP_4.5+0x15c>
   17a00:	ldr	w6, [x28]
   17a04:	ldr	x0, [x29, #208]
   17a08:	cmp	x0, x6
   17a0c:	b.ls	17a40 <GOMP_taskloop_ull@@GOMP_4.5+0x198>  // b.plast
   17a10:	udiv	x19, x0, x6
   17a14:	msub	x0, x19, x6, x0
   17a18:	ldr	x1, [x29, #448]
   17a1c:	mul	x19, x19, x1
   17a20:	str	x6, [x29, #216]
   17a24:	cbz	x0, 17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   17a28:	add	x19, x19, x1
   17a2c:	sub	x0, x0, #0x1
   17a30:	str	x0, [x29, #208]
   17a34:	b	17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   17a38:	str	x0, [x29, #208]
   17a3c:	b	17a4c <GOMP_taskloop_ull@@GOMP_4.5+0x1a4>
   17a40:	ldr	x19, [x29, #448]
   17a44:	ldr	x0, [x29, #208]
   17a48:	str	x0, [x29, #216]
   17a4c:	and	w0, w24, #0x800
   17a50:	str	w0, [x29, #192]
   17a54:	tbz	w24, #11, 17b30 <GOMP_taskloop_ull@@GOMP_4.5+0x288>
   17a58:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17a5c:	ldrb	w0, [x0, #1364]
   17a60:	cbnz	w0, 17acc <GOMP_taskloop_ull@@GOMP_4.5+0x224>
   17a64:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17a68:	ldr	w7, [x0, #1368]
   17a6c:	cmp	w7, w21
   17a70:	csel	w0, w7, w21, le
   17a74:	str	w0, [x29, #196]
   17a78:	tst	x24, #0x400
   17a7c:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   17a80:	b.ne	17b44 <GOMP_taskloop_ull@@GOMP_4.5+0x29c>  // b.any
   17a84:	ldr	x0, [x29, #184]
   17a88:	cbnz	x0, 17c04 <GOMP_taskloop_ull@@GOMP_4.5+0x35c>
   17a8c:	mov	x21, #0x0                   	// #0
   17a90:	ldr	x0, [x29, #216]
   17a94:	cbz	x0, 18518 <GOMP_taskloop_ull@@GOMP_4.5+0xc70>
   17a98:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17a9c:	ldr	x23, [x23, #4016]
   17aa0:	mrs	x0, tpidr_el0
   17aa4:	add	x23, x0, x23
   17aa8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17aac:	add	x0, x0, #0x2b8
   17ab0:	add	x26, x29, #0xe0
   17ab4:	mov	w27, #0x1                   	// #1
   17ab8:	add	x1, x26, #0x8
   17abc:	str	x1, [x29, #176]
   17ac0:	str	x28, [x29, #184]
   17ac4:	mov	x28, x0
   17ac8:	b	17e24 <GOMP_taskloop_ull@@GOMP_4.5+0x57c>
   17acc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17ad0:	ldr	x0, [x0, #4016]
   17ad4:	mrs	x1, tpidr_el0
   17ad8:	add	x0, x1, x0
   17adc:	ldr	x25, [x0, #80]
   17ae0:	cbz	x25, 18540 <GOMP_taskloop_ull@@GOMP_4.5+0xc98>
   17ae4:	ldr	x0, [x25, #40]
   17ae8:	cbz	x0, 17b0c <GOMP_taskloop_ull@@GOMP_4.5+0x264>
   17aec:	ldrb	w1, [x0, #49]
   17af0:	cbnz	w1, 18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   17af4:	ldrb	w1, [x0, #50]
   17af8:	cbz	w1, 17b0c <GOMP_taskloop_ull@@GOMP_4.5+0x264>
   17afc:	ldr	x0, [x0]
   17b00:	cbz	x0, 17b0c <GOMP_taskloop_ull@@GOMP_4.5+0x264>
   17b04:	ldrb	w0, [x0, #49]
   17b08:	cbnz	w0, 18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   17b0c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17b10:	ldr	w0, [x0, #1368]
   17b14:	cmp	w0, w21
   17b18:	csel	w0, w0, w21, le
   17b1c:	str	w0, [x29, #196]
   17b20:	tst	x24, #0x400
   17b24:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   17b28:	b.eq	17a84 <GOMP_taskloop_ull@@GOMP_4.5+0x1dc>  // b.none
   17b2c:	b	17b5c <GOMP_taskloop_ull@@GOMP_4.5+0x2b4>
   17b30:	bl	16298 <GOMP_taskgroup_start@@GOMP_4.0>
   17b34:	tbz	w24, #12, 17a64 <GOMP_taskloop_ull@@GOMP_4.5+0x1bc>
   17b38:	ldr	x0, [x22, #16]
   17b3c:	bl	169ac <GOMP_taskgroup_reduction_register@@GOMP_5.0>
   17b40:	b	17a64 <GOMP_taskloop_ull@@GOMP_4.5+0x1bc>
   17b44:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17b48:	ldr	x0, [x0, #4016]
   17b4c:	mrs	x1, tpidr_el0
   17b50:	add	x0, x1, x0
   17b54:	ldr	x25, [x0, #80]
   17b58:	cbz	x25, 17b64 <GOMP_taskloop_ull@@GOMP_4.5+0x2bc>
   17b5c:	ldrb	w0, [x25, #205]
   17b60:	cbnz	w0, 17a84 <GOMP_taskloop_ull@@GOMP_4.5+0x1dc>
   17b64:	ldr	w1, [x28, #1320]
   17b68:	ldr	x0, [x29, #216]
   17b6c:	add	x1, x1, x0
   17b70:	ldr	w0, [x28]
   17b74:	lsl	w0, w0, #6
   17b78:	cmp	x1, x0
   17b7c:	b.hi	17a84 <GOMP_taskloop_ull@@GOMP_4.5+0x1dc>  // b.pmore
   17b80:	mov	x0, sp
   17b84:	str	x0, [x29, #112]
   17b88:	ldr	x1, [x29, #216]
   17b8c:	lsl	x0, x1, #3
   17b90:	add	x0, x0, #0xf
   17b94:	and	x0, x0, #0xfffffffffffffff0
   17b98:	sub	sp, sp, x0
   17b9c:	mov	x0, sp
   17ba0:	str	x0, [x29, #168]
   17ba4:	ldr	x27, [x25, #40]
   17ba8:	cbz	x1, 17fe8 <GOMP_taskloop_ull@@GOMP_4.5+0x740>
   17bac:	ubfx	x0, x24, #1, #1
   17bb0:	str	x0, [x29, #160]
   17bb4:	mov	x24, #0x0                   	// #0
   17bb8:	add	x0, x23, #0xcf
   17bbc:	str	x0, [x29, #152]
   17bc0:	ldr	x1, [x29, #176]
   17bc4:	add	x0, x1, x0
   17bc8:	str	x0, [x29, #144]
   17bcc:	neg	x0, x23
   17bd0:	str	x0, [x29, #136]
   17bd4:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17bd8:	ldr	x26, [x26, #4016]
   17bdc:	mrs	x0, tpidr_el0
   17be0:	add	x26, x0, x26
   17be4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17be8:	add	x0, x0, #0x2b8
   17bec:	str	x0, [x29, #128]
   17bf0:	str	x28, [x29, #104]
   17bf4:	str	x22, [x29, #120]
   17bf8:	ldr	x22, [x29, #208]
   17bfc:	ldr	x28, [x29, #184]
   17c00:	b	17f64 <GOMP_taskloop_ull@@GOMP_4.5+0x6bc>
   17c04:	mov	x0, sp
   17c08:	str	x0, [x29, #160]
   17c0c:	ldr	x3, [x29, #216]
   17c10:	add	x0, x3, x3, lsl #1
   17c14:	add	x0, x3, x0, lsl #2
   17c18:	lsl	x2, x0, #4
   17c1c:	mov	x1, sp
   17c20:	sub	x0, x1, x0, lsl #4
   17c24:	mov	sp, x0
   17c28:	mov	x21, sp
   17c2c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17c30:	ldr	x0, [x0, #4016]
   17c34:	mrs	x1, tpidr_el0
   17c38:	add	x0, x1, x0
   17c3c:	ldr	x0, [x0, #80]
   17c40:	str	x0, [x29, #168]
   17c44:	ldr	x0, [x29, #176]
   17c48:	add	x0, x0, x23
   17c4c:	sub	x0, x0, #0x1
   17c50:	neg	x25, x23
   17c54:	and	x0, x0, x25
   17c58:	str	x0, [x29, #176]
   17c5c:	sub	x23, x23, #0x1
   17c60:	madd	x0, x0, x3, x23
   17c64:	add	x0, x0, #0xf
   17c68:	and	x0, x0, #0xfffffffffffffff0
   17c6c:	sub	sp, sp, x0
   17c70:	add	x23, sp, x23
   17c74:	and	x25, x23, x25
   17c78:	cbz	x3, 17ddc <GOMP_taskloop_ull@@GOMP_4.5+0x534>
   17c7c:	add	x1, x21, x2
   17c80:	mov	x27, x25
   17c84:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17c88:	ldr	x26, [x26, #4016]
   17c8c:	mrs	x0, tpidr_el0
   17c90:	add	x26, x0, x26
   17c94:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   17c98:	add	x0, x0, #0x2b8
   17c9c:	ubfx	x2, x24, #1, #1
   17ca0:	str	x19, [x29, #152]
   17ca4:	str	x28, [x29, #144]
   17ca8:	str	x25, [x29, #136]
   17cac:	str	x21, [x29, #128]
   17cb0:	ldr	w23, [x29, #196]
   17cb4:	ldr	x24, [x29, #184]
   17cb8:	str	x20, [x29, #432]
   17cbc:	mov	x20, x1
   17cc0:	mov	x25, x0
   17cc4:	mov	w28, w2
   17cc8:	b	1858c <GOMP_taskloop_ull@@GOMP_4.5+0xce4>
   17ccc:	ldr	x19, [x29, #152]
   17cd0:	ldr	x28, [x29, #144]
   17cd4:	ldr	x25, [x29, #136]
   17cd8:	ldr	x23, [x29, #128]
   17cdc:	ldr	x20, [x29, #432]
   17ce0:	mov	x21, #0x0                   	// #0
   17ce4:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   17ce8:	ldr	x26, [x26, #4016]
   17cec:	mrs	x0, tpidr_el0
   17cf0:	add	x26, x0, x26
   17cf4:	add	x28, x28, #0x500
   17cf8:	mov	w27, #0x1                   	// #1
   17cfc:	ldr	x24, [x29, #448]
   17d00:	b	17d58 <GOMP_taskloop_ull@@GOMP_4.5+0x4b0>
   17d04:	mov	x0, x28
   17d08:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   17d0c:	b	17db8 <GOMP_taskloop_ull@@GOMP_4.5+0x510>
   17d10:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   17d14:	str	xzr, [x22, #8]
   17d18:	b	17d30 <GOMP_taskloop_ull@@GOMP_4.5+0x488>
   17d1c:	stur	xzr, [x0, #-112]
   17d20:	ldr	x0, [x0]
   17d24:	ldr	x1, [x22, #24]
   17d28:	cmp	x0, x1
   17d2c:	b.ne	17d1c <GOMP_taskloop_ull@@GOMP_4.5+0x474>  // b.any
   17d30:	ldxr	w0, [x28]
   17d34:	stlxr	w1, wzr, [x28]
   17d38:	cbnz	w1, 17d30 <GOMP_taskloop_ull@@GOMP_4.5+0x488>
   17d3c:	tbnz	w0, #31, 17dd0 <GOMP_taskloop_ull@@GOMP_4.5+0x528>
   17d40:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   17d44:	add	x21, x21, #0x1
   17d48:	add	x23, x23, #0xd0
   17d4c:	ldr	x0, [x29, #216]
   17d50:	cmp	x0, x21
   17d54:	b.eq	17ddc <GOMP_taskloop_ull@@GOMP_4.5+0x534>  // b.none
   17d58:	mov	x22, x23
   17d5c:	str	x23, [x26, #80]
   17d60:	str	x20, [x25]
   17d64:	add	x20, x20, x19
   17d68:	str	x20, [x25, #8]
   17d6c:	sub	x0, x19, x24
   17d70:	ldr	x1, [x29, #208]
   17d74:	cmp	x1, x21
   17d78:	csel	x19, x0, x19, eq  // eq = none
   17d7c:	mov	x0, x25
   17d80:	ldr	x1, [x29, #200]
   17d84:	blr	x1
   17d88:	ldr	x0, [x29, #176]
   17d8c:	add	x25, x25, x0
   17d90:	ldr	x0, [x23, #8]
   17d94:	cbnz	x0, 17da0 <GOMP_taskloop_ull@@GOMP_4.5+0x4f8>
   17d98:	ldr	x0, [x23, #24]
   17d9c:	cbz	x0, 17d40 <GOMP_taskloop_ull@@GOMP_4.5+0x498>
   17da0:	ldaxr	w1, [x28]
   17da4:	cbnz	w1, 17db0 <GOMP_taskloop_ull@@GOMP_4.5+0x508>
   17da8:	stxr	w0, w27, [x28]
   17dac:	cbnz	w0, 17da0 <GOMP_taskloop_ull@@GOMP_4.5+0x4f8>
   17db0:	cmp	w1, #0x0
   17db4:	b.ne	17d04 <GOMP_taskloop_ull@@GOMP_4.5+0x45c>  // b.any
   17db8:	add	x0, x23, #0x8
   17dbc:	ldr	x1, [x22, #8]
   17dc0:	cbnz	x1, 17d10 <GOMP_taskloop_ull@@GOMP_4.5+0x468>
   17dc4:	ldr	x0, [x22, #24]
   17dc8:	cbnz	x0, 17d1c <GOMP_taskloop_ull@@GOMP_4.5+0x474>
   17dcc:	b	17d30 <GOMP_taskloop_ull@@GOMP_4.5+0x488>
   17dd0:	mov	x0, x28
   17dd4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   17dd8:	b	17d40 <GOMP_taskloop_ull@@GOMP_4.5+0x498>
   17ddc:	ldr	x0, [x29, #160]
   17de0:	mov	sp, x0
   17de4:	b	18518 <GOMP_taskloop_ull@@GOMP_4.5+0xc70>
   17de8:	mov	x0, x25
   17dec:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   17df0:	b	17ed4 <GOMP_taskloop_ull@@GOMP_4.5+0x62c>
   17df4:	ldr	x0, [x29, #176]
   17df8:	bl	121a4 <GOMP_single_copy_end@@GOMP_1.0+0x120>
   17dfc:	str	xzr, [x29, #232]
   17e00:	ldxr	w0, [x25]
   17e04:	stlxr	w1, wzr, [x25]
   17e08:	cbnz	w1, 17e00 <GOMP_taskloop_ull@@GOMP_4.5+0x558>
   17e0c:	tbnz	w0, #31, 17efc <GOMP_taskloop_ull@@GOMP_4.5+0x654>
   17e10:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   17e14:	add	x21, x21, #0x1
   17e18:	ldr	x0, [x29, #216]
   17e1c:	cmp	x0, x21
   17e20:	b.eq	18518 <GOMP_taskloop_ull@@GOMP_4.5+0xc70>  // b.none
   17e24:	ldr	x1, [x23, #80]
   17e28:	add	x2, x1, #0x90
   17e2c:	cmp	x1, #0x0
   17e30:	csel	x2, x28, x2, eq  // eq = none
   17e34:	mov	x0, x26
   17e38:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   17e3c:	ldr	w0, [x29, #196]
   17e40:	str	w0, [x29, #312]
   17e44:	str	w27, [x29, #424]
   17e48:	ldr	x0, [x23, #80]
   17e4c:	cbz	x0, 185e4 <GOMP_taskloop_ull@@GOMP_4.5+0xd3c>
   17e50:	ldrb	w2, [x0, #205]
   17e54:	ubfx	x1, x24, #1, #1
   17e58:	cmp	w2, #0x0
   17e5c:	csinc	w1, w1, wzr, eq  // eq = none
   17e60:	strb	w1, [x29, #429]
   17e64:	ldrb	w1, [x0, #204]
   17e68:	strb	w1, [x29, #428]
   17e6c:	ldr	x0, [x0, #40]
   17e70:	str	x0, [x29, #264]
   17e74:	str	x26, [x23, #80]
   17e78:	str	x20, [x22]
   17e7c:	add	x20, x20, x19
   17e80:	str	x20, [x22, #8]
   17e84:	ldr	x0, [x29, #448]
   17e88:	sub	x0, x19, x0
   17e8c:	ldr	x1, [x29, #208]
   17e90:	cmp	x1, x21
   17e94:	csel	x19, x0, x19, eq  // eq = none
   17e98:	mov	x0, x22
   17e9c:	ldr	x1, [x29, #200]
   17ea0:	blr	x1
   17ea4:	ldr	x0, [x29, #232]
   17ea8:	cbnz	x0, 17eb4 <GOMP_taskloop_ull@@GOMP_4.5+0x60c>
   17eac:	ldr	x0, [x29, #248]
   17eb0:	cbz	x0, 17e10 <GOMP_taskloop_ull@@GOMP_4.5+0x568>
   17eb4:	ldr	x0, [x29, #184]
   17eb8:	add	x25, x0, #0x500
   17ebc:	ldaxr	w1, [x25]
   17ec0:	cbnz	w1, 17ecc <GOMP_taskloop_ull@@GOMP_4.5+0x624>
   17ec4:	stxr	w0, w27, [x25]
   17ec8:	cbnz	w0, 17ebc <GOMP_taskloop_ull@@GOMP_4.5+0x614>
   17ecc:	cmp	w1, #0x0
   17ed0:	b.ne	17de8 <GOMP_taskloop_ull@@GOMP_4.5+0x540>  // b.any
   17ed4:	ldr	x1, [x29, #232]
   17ed8:	cbnz	x1, 17df4 <GOMP_taskloop_ull@@GOMP_4.5+0x54c>
   17edc:	ldr	x0, [x29, #248]
   17ee0:	cbz	x0, 17e00 <GOMP_taskloop_ull@@GOMP_4.5+0x558>
   17ee4:	stur	xzr, [x0, #-112]
   17ee8:	ldr	x0, [x0]
   17eec:	ldr	x1, [x29, #248]
   17ef0:	cmp	x0, x1
   17ef4:	b.ne	17ee4 <GOMP_taskloop_ull@@GOMP_4.5+0x63c>  // b.any
   17ef8:	b	17e00 <GOMP_taskloop_ull@@GOMP_4.5+0x558>
   17efc:	mov	x0, x25
   17f00:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   17f04:	b	17e10 <GOMP_taskloop_ull@@GOMP_4.5+0x568>
   17f08:	ldr	x2, [x29, #176]
   17f0c:	ldr	x1, [x29, #120]
   17f10:	mov	x0, x23
   17f14:	bl	85c0 <memcpy@plt>
   17f18:	str	x20, [x23]
   17f1c:	add	x20, x20, x19
   17f20:	str	x20, [x23, #8]
   17f24:	ldr	x0, [x29, #448]
   17f28:	sub	x0, x19, x0
   17f2c:	cmp	x22, x24
   17f30:	csel	x19, x0, x19, eq  // eq = none
   17f34:	str	x25, [x26, #80]
   17f38:	mov	w0, #0x2                   	// #2
   17f3c:	str	w0, [x21, #200]
   17f40:	ldr	x0, [x29, #200]
   17f44:	str	x0, [x21, #184]
   17f48:	str	x23, [x21, #192]
   17f4c:	ldrb	w0, [x29, #160]
   17f50:	strb	w0, [x21, #205]
   17f54:	add	x24, x24, #0x1
   17f58:	ldr	x0, [x29, #216]
   17f5c:	cmp	x0, x24
   17f60:	b.eq	17fe4 <GOMP_taskloop_ull@@GOMP_4.5+0x73c>  // b.none
   17f64:	ldr	x0, [x29, #144]
   17f68:	bl	8c28 <fprintf@plt+0x118>
   17f6c:	mov	x21, x0
   17f70:	ldr	x0, [x29, #168]
   17f74:	str	x21, [x0, x24, lsl #3]
   17f78:	ldr	x0, [x29, #152]
   17f7c:	add	x23, x21, x0
   17f80:	ldr	x0, [x29, #136]
   17f84:	and	x23, x23, x0
   17f88:	ldr	x0, [x26, #80]
   17f8c:	add	x2, x0, #0x90
   17f90:	cmp	x0, #0x0
   17f94:	ldr	x0, [x29, #128]
   17f98:	csel	x2, x0, x2, eq  // eq = none
   17f9c:	mov	x1, x25
   17fa0:	mov	x0, x21
   17fa4:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   17fa8:	ldr	w0, [x29, #196]
   17fac:	str	w0, [x21, #88]
   17fb0:	mov	w0, #0x1                   	// #1
   17fb4:	str	w0, [x21, #200]
   17fb8:	ldrb	w0, [x25, #204]
   17fbc:	strb	w0, [x21, #204]
   17fc0:	str	x27, [x21, #40]
   17fc4:	str	x21, [x26, #80]
   17fc8:	cbz	x28, 17f08 <GOMP_taskloop_ull@@GOMP_4.5+0x660>
   17fcc:	ldr	x1, [x29, #120]
   17fd0:	mov	x0, x23
   17fd4:	blr	x28
   17fd8:	mov	w0, #0x1                   	// #1
   17fdc:	strb	w0, [x21, #206]
   17fe0:	b	17f18 <GOMP_taskloop_ull@@GOMP_4.5+0x670>
   17fe4:	ldr	x28, [x29, #104]
   17fe8:	add	x26, x28, #0x500
   17fec:	mov	w0, #0x1                   	// #1
   17ff0:	ldaxr	w1, [x26]
   17ff4:	cbnz	w1, 18000 <GOMP_taskloop_ull@@GOMP_4.5+0x758>
   17ff8:	stxr	w2, w0, [x26]
   17ffc:	cbnz	w2, 17ff0 <GOMP_taskloop_ull@@GOMP_4.5+0x748>
   18000:	cmp	w1, #0x0
   18004:	b.ne	18060 <GOMP_taskloop_ull@@GOMP_4.5+0x7b8>  // b.any
   18008:	ldr	x0, [x29, #184]
   1800c:	cmp	x0, #0x0
   18010:	cset	w1, eq  // eq = none
   18014:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   18018:	ldrb	w0, [x0, #1364]
   1801c:	tst	w1, w0
   18020:	b.ne	1806c <GOMP_taskloop_ull@@GOMP_4.5+0x7c4>  // b.any
   18024:	cbz	x27, 18038 <GOMP_taskloop_ull@@GOMP_4.5+0x790>
   18028:	ldr	x0, [x27, #56]
   1802c:	ldr	x1, [x29, #216]
   18030:	add	x0, x0, x1
   18034:	str	x0, [x27, #56]
   18038:	mov	x20, #0x0                   	// #0
   1803c:	add	x24, x29, #0xe0
   18040:	ldr	x0, [x29, #216]
   18044:	cbz	x0, 18488 <GOMP_taskloop_ull@@GOMP_4.5+0xbe0>
   18048:	str	x26, [x29, #184]
   1804c:	ldr	w23, [x29, #196]
   18050:	ldr	x26, [x29, #168]
   18054:	str	x24, [x29, #208]
   18058:	ldr	x24, [x29, #216]
   1805c:	b	1831c <GOMP_taskloop_ull@@GOMP_4.5+0xa74>
   18060:	mov	x0, x26
   18064:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   18068:	b	18008 <GOMP_taskloop_ull@@GOMP_4.5+0x760>
   1806c:	ldr	w0, [x28, #132]
   18070:	tbnz	w0, #2, 18098 <GOMP_taskloop_ull@@GOMP_4.5+0x7f0>
   18074:	cbz	x27, 18038 <GOMP_taskloop_ull@@GOMP_4.5+0x790>
   18078:	ldrb	w0, [x27, #49]
   1807c:	cbnz	w0, 18098 <GOMP_taskloop_ull@@GOMP_4.5+0x7f0>
   18080:	ldrb	w0, [x27, #50]
   18084:	cbz	w0, 18028 <GOMP_taskloop_ull@@GOMP_4.5+0x780>
   18088:	ldr	x0, [x27]
   1808c:	cbz	x0, 18028 <GOMP_taskloop_ull@@GOMP_4.5+0x780>
   18090:	ldrb	w0, [x0, #49]
   18094:	cbz	w0, 18028 <GOMP_taskloop_ull@@GOMP_4.5+0x780>
   18098:	mov	x0, x26
   1809c:	bl	12ac8 <GOMP_single_copy_end@@GOMP_1.0+0xa44>
   180a0:	ldr	x0, [x29, #216]
   180a4:	cbz	x0, 180d4 <GOMP_taskloop_ull@@GOMP_4.5+0x82c>
   180a8:	mov	x19, #0x0                   	// #0
   180ac:	ldr	x0, [x29, #168]
   180b0:	ldr	x20, [x0, x19, lsl #3]
   180b4:	ldr	x0, [x20, #56]
   180b8:	cbnz	x0, 180e8 <GOMP_taskloop_ull@@GOMP_4.5+0x840>
   180bc:	mov	x0, x20
   180c0:	bl	8900 <free@plt>
   180c4:	add	x19, x19, #0x1
   180c8:	ldr	x0, [x29, #216]
   180cc:	cmp	x0, x19
   180d0:	b.ne	180ac <GOMP_taskloop_ull@@GOMP_4.5+0x804>  // b.any
   180d4:	ldr	w0, [x29, #192]
   180d8:	cbz	w0, 180f0 <GOMP_taskloop_ull@@GOMP_4.5+0x848>
   180dc:	ldr	x0, [x29, #112]
   180e0:	mov	sp, x0
   180e4:	b	18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   180e8:	bl	8900 <free@plt>
   180ec:	b	180bc <GOMP_taskloop_ull@@GOMP_4.5+0x814>
   180f0:	bl	16320 <GOMP_taskgroup_end@@GOMP_4.0>
   180f4:	b	180dc <GOMP_taskloop_ull@@GOMP_4.5+0x834>
   180f8:	add	x1, x25, #0x8
   180fc:	str	x1, [x29, #200]
   18100:	cbz	x0, 18148 <GOMP_taskloop_ull@@GOMP_4.5+0x8a0>
   18104:	str	w23, [x29, #224]
   18108:	ldr	x1, [x29, #208]
   1810c:	ldr	x0, [x29, #200]
   18110:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   18114:	cbz	x0, 1818c <GOMP_taskloop_ull@@GOMP_4.5+0x8e4>
   18118:	add	x1, x19, #0x70
   1811c:	ldr	x2, [x0, #8]
   18120:	cbz	x2, 181c0 <GOMP_taskloop_ull@@GOMP_4.5+0x918>
   18124:	str	x2, [x19, #112]
   18128:	ldr	x2, [x2, #8]
   1812c:	str	x2, [x19, #120]
   18130:	str	x1, [x0, #8]
   18134:	ldr	x0, [x19, #112]
   18138:	str	x1, [x0, #8]
   1813c:	ldr	x0, [x19, #120]
   18140:	str	x1, [x0]
   18144:	b	18364 <GOMP_taskloop_ull@@GOMP_4.5+0xabc>
   18148:	ldr	x0, [x25, #24]
   1814c:	cbz	x0, 1818c <GOMP_taskloop_ull@@GOMP_4.5+0x8e4>
   18150:	mov	x0, #0x28                  	// #40
   18154:	bl	8c28 <fprintf@plt+0x118>
   18158:	mov	x1, x0
   1815c:	str	xzr, [x0, #24]
   18160:	str	xzr, [x0, #32]
   18164:	str	wzr, [x0]
   18168:	ldr	x0, [x25, #24]
   1816c:	str	x0, [x1, #8]
   18170:	ldr	x0, [x25, #32]
   18174:	str	x0, [x1, #16]
   18178:	ldr	x0, [x29, #200]
   1817c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   18180:	str	xzr, [x25, #24]
   18184:	ldr	x0, [x25, #8]
   18188:	cbnz	x0, 18104 <GOMP_taskloop_ull@@GOMP_4.5+0x85c>
   1818c:	mov	x0, #0x28                  	// #40
   18190:	bl	8c28 <fprintf@plt+0x118>
   18194:	mov	x22, x0
   18198:	str	xzr, [x0, #24]
   1819c:	str	xzr, [x0, #32]
   181a0:	str	w23, [x0]
   181a4:	str	xzr, [x0, #8]
   181a8:	str	xzr, [x0, #16]
   181ac:	mov	x1, x0
   181b0:	ldr	x0, [x29, #200]
   181b4:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   181b8:	mov	x0, x22
   181bc:	b	18118 <GOMP_taskloop_ull@@GOMP_4.5+0x870>
   181c0:	str	x1, [x19, #112]
   181c4:	str	x1, [x19, #120]
   181c8:	str	x1, [x0, #8]
   181cc:	b	18364 <GOMP_taskloop_ull@@GOMP_4.5+0xabc>
   181d0:	str	x0, [x19, #112]
   181d4:	str	x0, [x19, #120]
   181d8:	str	x0, [x25, #24]
   181dc:	b	18364 <GOMP_taskloop_ull@@GOMP_4.5+0xabc>
   181e0:	add	x1, x27, #0x8
   181e4:	str	x1, [x29, #200]
   181e8:	cbz	x0, 18230 <GOMP_taskloop_ull@@GOMP_4.5+0x988>
   181ec:	str	w23, [x29, #224]
   181f0:	ldr	x1, [x29, #208]
   181f4:	ldr	x0, [x29, #200]
   181f8:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   181fc:	cbz	x0, 18274 <GOMP_taskloop_ull@@GOMP_4.5+0x9cc>
   18200:	add	x1, x19, #0x80
   18204:	ldr	x2, [x0, #8]
   18208:	cbz	x2, 182a8 <GOMP_taskloop_ull@@GOMP_4.5+0xa00>
   1820c:	str	x2, [x19, #128]
   18210:	ldr	x2, [x2, #8]
   18214:	str	x2, [x19, #136]
   18218:	str	x1, [x0, #8]
   1821c:	ldr	x0, [x19, #128]
   18220:	str	x1, [x0, #8]
   18224:	ldr	x0, [x19, #136]
   18228:	str	x1, [x0]
   1822c:	b	182c4 <GOMP_taskloop_ull@@GOMP_4.5+0xa1c>
   18230:	ldr	x0, [x27, #24]
   18234:	cbz	x0, 18274 <GOMP_taskloop_ull@@GOMP_4.5+0x9cc>
   18238:	mov	x0, #0x28                  	// #40
   1823c:	bl	8c28 <fprintf@plt+0x118>
   18240:	mov	x1, x0
   18244:	str	xzr, [x0, #24]
   18248:	str	xzr, [x0, #32]
   1824c:	str	wzr, [x0]
   18250:	ldr	x0, [x27, #24]
   18254:	str	x0, [x1, #8]
   18258:	ldr	x0, [x27, #32]
   1825c:	str	x0, [x1, #16]
   18260:	ldr	x0, [x29, #200]
   18264:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   18268:	str	xzr, [x27, #24]
   1826c:	ldr	x0, [x27, #8]
   18270:	cbnz	x0, 181ec <GOMP_taskloop_ull@@GOMP_4.5+0x944>
   18274:	mov	x0, #0x28                  	// #40
   18278:	bl	8c28 <fprintf@plt+0x118>
   1827c:	mov	x22, x0
   18280:	str	xzr, [x0, #24]
   18284:	str	xzr, [x0, #32]
   18288:	str	w23, [x0]
   1828c:	str	xzr, [x0, #8]
   18290:	str	xzr, [x0, #16]
   18294:	mov	x1, x0
   18298:	ldr	x0, [x29, #200]
   1829c:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   182a0:	mov	x0, x22
   182a4:	b	18200 <GOMP_taskloop_ull@@GOMP_4.5+0x958>
   182a8:	str	x1, [x19, #128]
   182ac:	str	x1, [x19, #136]
   182b0:	str	x1, [x0, #8]
   182b4:	b	182c4 <GOMP_taskloop_ull@@GOMP_4.5+0xa1c>
   182b8:	str	x0, [x19, #128]
   182bc:	str	x0, [x19, #136]
   182c0:	str	x0, [x27, #24]
   182c4:	ldr	x0, [x28, #1288]
   182c8:	cmp	x0, #0x0
   182cc:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   182d0:	b.ne	183a8 <GOMP_taskloop_ull@@GOMP_4.5+0xb00>  // b.any
   182d4:	add	x1, x19, #0x60
   182d8:	ldr	x0, [x28, #1304]
   182dc:	cbz	x0, 18474 <GOMP_taskloop_ull@@GOMP_4.5+0xbcc>
   182e0:	str	x0, [x19, #96]
   182e4:	ldr	x2, [x0, #8]
   182e8:	str	x2, [x19, #104]
   182ec:	str	x1, [x0, #8]
   182f0:	ldr	x0, [x19, #104]
   182f4:	str	x1, [x0]
   182f8:	ldr	w0, [x28, #1320]
   182fc:	add	w0, w0, #0x1
   18300:	str	w0, [x28, #1320]
   18304:	ldr	w0, [x28, #1324]
   18308:	add	w0, w0, #0x1
   1830c:	str	w0, [x28, #1324]
   18310:	add	x20, x20, #0x1
   18314:	cmp	x24, x20
   18318:	b.eq	18484 <GOMP_taskloop_ull@@GOMP_4.5+0xbdc>  // b.none
   1831c:	ldr	x19, [x26, x20, lsl #3]
   18320:	ldr	x0, [x25, #8]
   18324:	cmp	w23, #0x0
   18328:	cset	w21, gt
   1832c:	cmp	x0, #0x0
   18330:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   18334:	b.ne	180f8 <GOMP_taskloop_ull@@GOMP_4.5+0x850>  // b.any
   18338:	add	x0, x19, #0x70
   1833c:	ldr	x1, [x25, #24]
   18340:	cbz	x1, 181d0 <GOMP_taskloop_ull@@GOMP_4.5+0x928>
   18344:	str	x1, [x19, #112]
   18348:	ldr	x1, [x1, #8]
   1834c:	str	x1, [x19, #120]
   18350:	str	x0, [x25, #24]
   18354:	ldr	x1, [x19, #112]
   18358:	str	x0, [x1, #8]
   1835c:	ldr	x1, [x19, #120]
   18360:	str	x0, [x1]
   18364:	cbz	x27, 182c4 <GOMP_taskloop_ull@@GOMP_4.5+0xa1c>
   18368:	ldr	x0, [x27, #8]
   1836c:	cmp	x0, #0x0
   18370:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   18374:	b.ne	181e0 <GOMP_taskloop_ull@@GOMP_4.5+0x938>  // b.any
   18378:	add	x0, x19, #0x80
   1837c:	ldr	x1, [x27, #24]
   18380:	cbz	x1, 182b8 <GOMP_taskloop_ull@@GOMP_4.5+0xa10>
   18384:	str	x1, [x19, #128]
   18388:	ldr	x1, [x1, #8]
   1838c:	str	x1, [x19, #136]
   18390:	str	x0, [x27, #24]
   18394:	ldr	x1, [x19, #128]
   18398:	str	x0, [x1, #8]
   1839c:	ldr	x1, [x19, #136]
   183a0:	str	x0, [x1]
   183a4:	b	182c4 <GOMP_taskloop_ull@@GOMP_4.5+0xa1c>
   183a8:	add	x22, x28, #0x508
   183ac:	cbz	x0, 183ec <GOMP_taskloop_ull@@GOMP_4.5+0xb44>
   183b0:	str	w23, [x29, #224]
   183b4:	ldr	x1, [x29, #208]
   183b8:	mov	x0, x22
   183bc:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   183c0:	cbz	x0, 18430 <GOMP_taskloop_ull@@GOMP_4.5+0xb88>
   183c4:	add	x2, x19, #0x60
   183c8:	ldr	x1, [x0, #8]
   183cc:	cbz	x1, 18464 <GOMP_taskloop_ull@@GOMP_4.5+0xbbc>
   183d0:	str	x1, [x19, #96]
   183d4:	ldr	x0, [x1, #8]
   183d8:	str	x0, [x19, #104]
   183dc:	str	x2, [x1, #8]
   183e0:	ldr	x0, [x19, #104]
   183e4:	str	x2, [x0]
   183e8:	b	182f8 <GOMP_taskloop_ull@@GOMP_4.5+0xa50>
   183ec:	ldr	x0, [x28, #1304]
   183f0:	cbz	x0, 18430 <GOMP_taskloop_ull@@GOMP_4.5+0xb88>
   183f4:	mov	x0, #0x28                  	// #40
   183f8:	bl	8c28 <fprintf@plt+0x118>
   183fc:	mov	x1, x0
   18400:	str	xzr, [x0, #24]
   18404:	str	xzr, [x0, #32]
   18408:	str	wzr, [x0]
   1840c:	ldr	x0, [x22, #16]
   18410:	str	x0, [x1, #8]
   18414:	ldr	x0, [x22, #24]
   18418:	str	x0, [x1, #16]
   1841c:	mov	x0, x22
   18420:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   18424:	str	xzr, [x22, #16]
   18428:	ldr	x0, [x28, #1288]
   1842c:	cbnz	x0, 183b0 <GOMP_taskloop_ull@@GOMP_4.5+0xb08>
   18430:	mov	x0, #0x28                  	// #40
   18434:	bl	8c28 <fprintf@plt+0x118>
   18438:	mov	x21, x0
   1843c:	str	xzr, [x0, #24]
   18440:	str	xzr, [x0, #32]
   18444:	str	w23, [x0]
   18448:	str	xzr, [x0, #8]
   1844c:	str	xzr, [x0, #16]
   18450:	mov	x1, x0
   18454:	mov	x0, x22
   18458:	bl	27824 <acc_set_cuda_stream@@OACC_2.0+0x370>
   1845c:	mov	x0, x21
   18460:	b	183c4 <GOMP_taskloop_ull@@GOMP_4.5+0xb1c>
   18464:	str	x2, [x19, #96]
   18468:	str	x2, [x19, #104]
   1846c:	str	x2, [x0, #8]
   18470:	b	182f8 <GOMP_taskloop_ull@@GOMP_4.5+0xa50>
   18474:	str	x1, [x19, #96]
   18478:	str	x1, [x19, #104]
   1847c:	str	x1, [x28, #1304]
   18480:	b	182f8 <GOMP_taskloop_ull@@GOMP_4.5+0xa50>
   18484:	ldr	x26, [x29, #184]
   18488:	ldr	w0, [x28, #132]
   1848c:	orr	w0, w0, #0x1
   18490:	str	w0, [x28, #132]
   18494:	ldr	w2, [x28, #1328]
   18498:	ldrb	w0, [x25, #204]
   1849c:	eor	w0, w0, #0x1
   184a0:	ldr	w1, [x28]
   184a4:	add	w3, w2, w0
   184a8:	cmp	w3, w1
   184ac:	b.cs	18500 <GOMP_taskloop_ull@@GOMP_4.5+0xc58>  // b.hs, b.nlast
   184b0:	sub	w1, w1, w2
   184b4:	sub	w19, w1, w0
   184b8:	ldr	x0, [x29, #216]
   184bc:	cmp	x0, w19, sxtw
   184c0:	csel	w19, w0, w19, cc  // cc = lo, ul, last
   184c4:	ldxr	w0, [x26]
   184c8:	stlxr	w1, wzr, [x26]
   184cc:	cbnz	w1, 184c4 <GOMP_taskloop_ull@@GOMP_4.5+0xc1c>
   184d0:	tbnz	w0, #31, 184ec <GOMP_taskloop_ull@@GOMP_4.5+0xc44>
   184d4:	cbz	w19, 18510 <GOMP_taskloop_ull@@GOMP_4.5+0xc68>
   184d8:	mov	w1, w19
   184dc:	add	x0, x28, #0x80
   184e0:	bl	1b958 <omp_get_num_procs@@OMP_1.0+0x4e4>
   184e4:	b	18510 <GOMP_taskloop_ull@@GOMP_4.5+0xc68>
   184e8:	mov	w19, #0x0                   	// #0
   184ec:	mov	x0, x26
   184f0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   184f4:	b	184d4 <GOMP_taskloop_ull@@GOMP_4.5+0xc2c>
   184f8:	bl	16320 <GOMP_taskgroup_end@@GOMP_4.0>
   184fc:	b	18520 <GOMP_taskloop_ull@@GOMP_4.5+0xc78>
   18500:	ldxr	w0, [x26]
   18504:	stlxr	w1, wzr, [x26]
   18508:	cbnz	w1, 18500 <GOMP_taskloop_ull@@GOMP_4.5+0xc58>
   1850c:	tbnz	w0, #31, 184e8 <GOMP_taskloop_ull@@GOMP_4.5+0xc40>
   18510:	ldr	x0, [x29, #112]
   18514:	mov	sp, x0
   18518:	ldr	w0, [x29, #192]
   1851c:	cbz	w0, 184f8 <GOMP_taskloop_ull@@GOMP_4.5+0xc50>
   18520:	mov	sp, x29
   18524:	ldp	x19, x20, [sp, #16]
   18528:	ldp	x21, x22, [sp, #32]
   1852c:	ldp	x23, x24, [sp, #48]
   18530:	ldp	x25, x26, [sp, #64]
   18534:	ldp	x27, x28, [sp, #80]
   18538:	ldp	x29, x30, [sp], #432
   1853c:	ret
   18540:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   18544:	ldr	w0, [x0, #1368]
   18548:	cmp	w0, w21
   1854c:	csel	w0, w0, w21, le
   18550:	str	w0, [x29, #196]
   18554:	tst	x24, #0x400
   18558:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   1855c:	b.eq	17a84 <GOMP_taskloop_ull@@GOMP_4.5+0x1dc>  // b.none
   18560:	b	17b64 <GOMP_taskloop_ull@@GOMP_4.5+0x2bc>
   18564:	strb	w28, [x21, #205]
   18568:	str	x19, [x26, #80]
   1856c:	mov	x1, x22
   18570:	mov	x0, x27
   18574:	blr	x24
   18578:	ldr	x0, [x29, #176]
   1857c:	add	x27, x27, x0
   18580:	add	x21, x21, #0xd0
   18584:	cmp	x20, x21
   18588:	b.eq	17ccc <GOMP_taskloop_ull@@GOMP_4.5+0x424>  // b.none
   1858c:	mov	x19, x21
   18590:	ldr	x0, [x26, #80]
   18594:	add	x2, x0, #0x90
   18598:	cmp	x0, #0x0
   1859c:	csel	x2, x25, x2, eq  // eq = none
   185a0:	ldr	x1, [x29, #168]
   185a4:	mov	x0, x21
   185a8:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   185ac:	str	w23, [x21, #88]
   185b0:	mov	w0, #0x1                   	// #1
   185b4:	str	w0, [x21, #200]
   185b8:	ldr	x0, [x26, #80]
   185bc:	cbz	x0, 18564 <GOMP_taskloop_ull@@GOMP_4.5+0xcbc>
   185c0:	ldrb	w1, [x0, #205]
   185c4:	cmp	w1, #0x0
   185c8:	csinc	w1, w28, wzr, eq  // eq = none
   185cc:	strb	w1, [x21, #205]
   185d0:	ldrb	w1, [x0, #204]
   185d4:	strb	w1, [x21, #204]
   185d8:	ldr	x0, [x0, #40]
   185dc:	str	x0, [x21, #40]
   185e0:	b	18568 <GOMP_taskloop_ull@@GOMP_4.5+0xcc0>
   185e4:	ubfx	x0, x24, #1, #1
   185e8:	strb	w0, [x29, #429]
   185ec:	b	17e74 <GOMP_taskloop_ull@@GOMP_4.5+0x5cc>

00000000000185f0 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>:
   185f0:	stp	x29, x30, [sp, #-32]!
   185f4:	mov	x29, sp
   185f8:	str	x19, [sp, #16]
   185fc:	mov	x19, x0
   18600:	ldr	x0, [x0, #40]
   18604:	bl	8900 <free@plt>
   18608:	ldr	x0, [x19, #16]
   1860c:	bl	8d0c <fprintf@plt+0x1fc>
   18610:	ldr	x19, [x19, #32]
   18614:	cbz	x19, 18620 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x30>
   18618:	ldr	x0, [x19, #40]
   1861c:	cbz	x0, 18608 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0+0x18>
   18620:	ldr	x19, [sp, #16]
   18624:	ldp	x29, x30, [sp], #32
   18628:	ret

000000000001862c <GOMP_task_reduction_remap@@GOMP_5.0>:
   1862c:	stp	x29, x30, [sp, #-96]!
   18630:	mov	x29, sp
   18634:	stp	x21, x22, [sp, #32]
   18638:	stp	x23, x24, [sp, #48]
   1863c:	stp	x25, x26, [sp, #64]
   18640:	mov	x22, x0
   18644:	mov	x24, x1
   18648:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1864c:	ldr	x0, [x0, #4016]
   18650:	mrs	x1, tpidr_el0
   18654:	add	x0, x1, x0
   18658:	ldr	w23, [x0, #40]
   1865c:	ldr	x0, [x0, #80]
   18660:	ldr	x0, [x0, #40]
   18664:	ldr	x26, [x0, #40]
   18668:	ldr	x25, [x26, #40]
   1866c:	cbz	x22, 187ac <GOMP_task_reduction_remap@@GOMP_5.0+0x180>
   18670:	stp	x19, x20, [sp, #16]
   18674:	str	x27, [sp, #80]
   18678:	mov	x19, x2
   1867c:	mov	x20, #0x0                   	// #0
   18680:	mov	w23, w23
   18684:	mov	x27, #0x0                   	// #0
   18688:	b	186ec <GOMP_task_reduction_remap@@GOMP_5.0+0xc0>
   1868c:	ldr	x1, [x19]
   18690:	mov	x2, x26
   18694:	b	186a0 <GOMP_task_reduction_remap@@GOMP_5.0+0x74>
   18698:	ldr	x2, [x2, #32]
   1869c:	cbz	x2, 187c0 <GOMP_task_reduction_remap@@GOMP_5.0+0x194>
   186a0:	ldr	x0, [x2, #16]
   186a4:	cmp	x1, x0
   186a8:	b.cc	18698 <GOMP_task_reduction_remap@@GOMP_5.0+0x6c>  // b.lo, b.ul, b.last
   186ac:	ldr	x3, [x2, #48]
   186b0:	cmp	x1, x3
   186b4:	b.cs	18698 <GOMP_task_reduction_remap@@GOMP_5.0+0x6c>  // b.hs, b.nlast
   186b8:	ldr	x3, [x2, #8]
   186bc:	sub	x1, x1, x0
   186c0:	udiv	x4, x1, x3
   186c4:	msub	x1, x4, x3, x1
   186c8:	madd	x0, x23, x3, x0
   186cc:	add	x0, x0, x1
   186d0:	str	x0, [x21]
   186d4:	cmp	x24, x20
   186d8:	b.hi	18730 <GOMP_task_reduction_remap@@GOMP_5.0+0x104>  // b.pmore
   186dc:	add	x20, x20, #0x1
   186e0:	add	x19, x19, #0x8
   186e4:	cmp	x22, x20
   186e8:	b.eq	187a4 <GOMP_task_reduction_remap@@GOMP_5.0+0x178>  // b.none
   186ec:	mov	x21, x19
   186f0:	mov	x1, x19
   186f4:	mov	x0, x25
   186f8:	bl	120d0 <GOMP_single_copy_end@@GOMP_1.0+0x4c>
   186fc:	cbz	x0, 1868c <GOMP_task_reduction_remap@@GOMP_5.0+0x60>
   18700:	ldr	x3, [x0, #16]
   18704:	ldr	x1, [x3, #16]
   18708:	ldr	x2, [x0, #8]
   1870c:	add	x2, x1, x2
   18710:	ldr	x1, [x3, #8]
   18714:	madd	x1, x23, x1, x2
   18718:	str	x1, [x19]
   1871c:	cmp	x24, x20
   18720:	b.ls	186dc <GOMP_task_reduction_remap@@GOMP_5.0+0xb0>  // b.plast
   18724:	ldr	x0, [x0]
   18728:	str	x0, [x19, x22, lsl #3]
   1872c:	b	186dc <GOMP_task_reduction_remap@@GOMP_5.0+0xb0>
   18730:	ldr	x4, [x2]
   18734:	sub	x4, x4, #0x1
   18738:	mov	x5, x27
   1873c:	b	18750 <GOMP_task_reduction_remap@@GOMP_5.0+0x124>
   18740:	b.eq	18780 <GOMP_task_reduction_remap@@GOMP_5.0+0x154>  // b.none
   18744:	sub	x4, x3, #0x1
   18748:	cmp	x4, x5
   1874c:	b.cc	18794 <GOMP_task_reduction_remap@@GOMP_5.0+0x168>  // b.lo, b.ul, b.last
   18750:	add	x0, x5, x4
   18754:	lsr	x3, x0, #1
   18758:	and	x0, x0, #0xfffffffffffffffe
   1875c:	add	x0, x0, x3
   18760:	lsl	x0, x0, #3
   18764:	mov	x6, x0
   18768:	add	x0, x2, x0
   1876c:	ldr	x0, [x0, #64]
   18770:	cmp	x0, x1
   18774:	b.cs	18740 <GOMP_task_reduction_remap@@GOMP_5.0+0x114>  // b.hs, b.nlast
   18778:	add	x5, x3, #0x1
   1877c:	b	18748 <GOMP_task_reduction_remap@@GOMP_5.0+0x11c>
   18780:	add	x2, x2, x6
   18784:	ldr	x0, [x2, #56]
   18788:	str	x0, [x21, x22, lsl #3]
   1878c:	cmp	x5, x4
   18790:	b.ls	186dc <GOMP_task_reduction_remap@@GOMP_5.0+0xb0>  // b.plast
   18794:	ldr	x1, [x21]
   18798:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
   1879c:	add	x0, x0, #0xfe8
   187a0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   187a4:	ldp	x19, x20, [sp, #16]
   187a8:	ldr	x27, [sp, #80]
   187ac:	ldp	x21, x22, [sp, #32]
   187b0:	ldp	x23, x24, [sp, #48]
   187b4:	ldp	x25, x26, [sp, #64]
   187b8:	ldp	x29, x30, [sp], #96
   187bc:	ret
   187c0:	ldr	x1, [x21]
   187c4:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
   187c8:	add	x0, x0, #0xfe8
   187cc:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   187d0:	stp	x29, x30, [sp, #-112]!
   187d4:	mov	x29, sp
   187d8:	stp	x19, x20, [sp, #16]
   187dc:	stp	x21, x22, [sp, #32]
   187e0:	stp	x23, x24, [sp, #48]
   187e4:	stp	x25, x26, [sp, #64]
   187e8:	str	x27, [sp, #80]
   187ec:	mov	x27, x0
   187f0:	mov	w22, w1
   187f4:	mov	x0, #0x40                  	// #64
   187f8:	bl	8c28 <fprintf@plt+0x118>
   187fc:	mov	x26, x0
   18800:	str	xzr, [x0], #8
   18804:	str	xzr, [x26, #8]
   18808:	str	xzr, [x0, #16]
   1880c:	str	xzr, [x0, #24]
   18810:	str	xzr, [x26, #40]
   18814:	strb	wzr, [x26, #48]
   18818:	strb	wzr, [x26, #49]
   1881c:	strb	wzr, [x26, #50]
   18820:	str	xzr, [x26, #56]
   18824:	str	wzr, [x26, #52]
   18828:	mov	x23, x27
   1882c:	mov	x21, #0x0                   	// #0
   18830:	mov	w22, w22
   18834:	ldr	x19, [x23, #8]
   18838:	mul	x19, x22, x19
   1883c:	mov	x1, x19
   18840:	ldr	x0, [x23, #16]
   18844:	bl	8ccc <fprintf@plt+0x1bc>
   18848:	mov	x20, x0
   1884c:	mov	x2, x19
   18850:	mov	w1, #0x0                   	// #0
   18854:	bl	87c0 <memset@plt>
   18858:	str	x20, [x23, #16]
   1885c:	add	x19, x19, x20
   18860:	str	x19, [x23, #48]
   18864:	str	xzr, [x23, #40]
   18868:	ldr	x0, [x23]
   1886c:	add	x21, x21, x0
   18870:	ldr	x23, [x23, #32]
   18874:	cbnz	x23, 18834 <GOMP_task_reduction_remap@@GOMP_5.0+0x208>
   18878:	mov	x0, x21
   1887c:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   18880:	str	x0, [sp, #104]
   18884:	mov	x22, x27
   18888:	add	x25, sp, #0x68
   1888c:	mov	w24, #0x1                   	// #1
   18890:	ldr	x0, [x22]
   18894:	cbz	x0, 188d0 <GOMP_task_reduction_remap@@GOMP_5.0+0x2a4>
   18898:	add	x20, x22, #0x38
   1889c:	mov	x21, x23
   188a0:	str	x22, [x20, #16]
   188a4:	mov	x19, x20
   188a8:	mov	w2, w24
   188ac:	mov	x1, x19
   188b0:	mov	x0, x25
   188b4:	bl	12398 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   188b8:	str	x19, [x0]
   188bc:	add	x21, x21, #0x1
   188c0:	add	x20, x20, #0x18
   188c4:	ldr	x1, [x22]
   188c8:	cmp	x21, x1
   188cc:	b.cc	188a0 <GOMP_task_reduction_remap@@GOMP_5.0+0x274>  // b.lo, b.ul, b.last
   188d0:	ldr	x0, [x22, #32]
   188d4:	cbz	x0, 188e0 <GOMP_task_reduction_remap@@GOMP_5.0+0x2b4>
   188d8:	mov	x22, x0
   188dc:	b	18890 <GOMP_task_reduction_remap@@GOMP_5.0+0x264>
   188e0:	ldr	x0, [sp, #104]
   188e4:	str	x0, [x22, #40]
   188e8:	str	x27, [x26, #40]
   188ec:	mov	x0, x26
   188f0:	ldp	x19, x20, [sp, #16]
   188f4:	ldp	x21, x22, [sp, #32]
   188f8:	ldp	x23, x24, [sp, #48]
   188fc:	ldp	x25, x26, [sp, #64]
   18900:	ldr	x27, [sp, #80]
   18904:	ldp	x29, x30, [sp], #112
   18908:	ret
   1890c:	stp	x29, x30, [sp, #-112]!
   18910:	mov	x29, sp
   18914:	stp	x19, x20, [sp, #16]
   18918:	stp	x21, x22, [sp, #32]
   1891c:	stp	x23, x24, [sp, #48]
   18920:	stp	x25, x26, [sp, #64]
   18924:	stp	x27, x28, [sp, #80]
   18928:	mov	x27, x0
   1892c:	mov	x22, x1
   18930:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18934:	ldr	x0, [x0, #4016]
   18938:	mrs	x1, tpidr_el0
   1893c:	add	x0, x1, x0
   18940:	ldr	x28, [x0, #80]
   18944:	ldr	x0, [x0, #16]
   18948:	ldr	x1, [x28, #40]
   1894c:	ldr	x23, [x1, #40]
   18950:	mov	x19, x27
   18954:	mov	x21, #0x0                   	// #0
   18958:	ldr	w24, [x0]
   1895c:	cbnz	x22, 189ac <GOMP_task_reduction_remap@@GOMP_5.0+0x380>
   18960:	ldr	x20, [x19, #8]
   18964:	mul	x20, x24, x20
   18968:	mov	x1, x20
   1896c:	ldr	x0, [x19, #16]
   18970:	bl	8ccc <fprintf@plt+0x1bc>
   18974:	mov	x25, x0
   18978:	mov	x2, x20
   1897c:	mov	w1, #0x0                   	// #0
   18980:	bl	87c0 <memset@plt>
   18984:	str	x25, [x19, #16]
   18988:	add	x20, x20, x25
   1898c:	str	x20, [x19, #48]
   18990:	str	xzr, [x19, #40]
   18994:	ldr	x0, [x19]
   18998:	add	x21, x21, x0
   1899c:	ldr	x25, [x19, #32]
   189a0:	cbz	x25, 189c4 <GOMP_task_reduction_remap@@GOMP_5.0+0x398>
   189a4:	mov	x19, x25
   189a8:	b	1895c <GOMP_task_reduction_remap@@GOMP_5.0+0x330>
   189ac:	ldr	x0, [x22, #16]
   189b0:	str	x0, [x19, #16]
   189b4:	ldr	x0, [x22, #48]
   189b8:	str	x0, [x19, #48]
   189bc:	ldr	x22, [x22, #32]
   189c0:	b	18990 <GOMP_task_reduction_remap@@GOMP_5.0+0x364>
   189c4:	mov	x26, x23
   189c8:	str	x23, [x19, #32]
   189cc:	cbz	x23, 18abc <GOMP_task_reduction_remap@@GOMP_5.0+0x490>
   189d0:	ldr	x19, [x23, #40]
   189d4:	cbz	x19, 18abc <GOMP_task_reduction_remap@@GOMP_5.0+0x490>
   189d8:	ldr	x0, [x19, #8]
   189dc:	ldr	x1, [x19, #16]
   189e0:	sub	x0, x0, x1
   189e4:	add	x0, x0, x21
   189e8:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   189ec:	str	x0, [sp, #104]
   189f0:	ldr	x1, [x19, #8]
   189f4:	ldr	x2, [x19, #16]
   189f8:	sub	x1, x1, x2
   189fc:	str	x1, [x0, #8]
   18a00:	ldr	x21, [x19], #32
   18a04:	add	x21, x19, x21, lsl #3
   18a08:	b	18a18 <GOMP_task_reduction_remap@@GOMP_5.0+0x3ec>
   18a0c:	add	x19, x19, #0x8
   18a10:	cmp	x21, x19
   18a14:	b.ls	18ac8 <GOMP_task_reduction_remap@@GOMP_5.0+0x49c>  // b.plast
   18a18:	ldr	x20, [x19]
   18a1c:	cmp	x20, #0x1
   18a20:	b.ls	18a0c <GOMP_task_reduction_remap@@GOMP_5.0+0x3e0>  // b.plast
   18a24:	ldr	x1, [x20]
   18a28:	eor	x1, x1, x1, lsr #32
   18a2c:	ldr	x0, [sp, #104]
   18a30:	bl	122c8 <GOMP_single_copy_end@@GOMP_1.0+0x244>
   18a34:	str	x20, [x0]
   18a38:	b	18a0c <GOMP_task_reduction_remap@@GOMP_5.0+0x3e0>
   18a3c:	ldr	x0, [x22, #32]
   18a40:	cmp	x26, x0
   18a44:	b.eq	18a90 <GOMP_task_reduction_remap@@GOMP_5.0+0x464>  // b.none
   18a48:	mov	x22, x0
   18a4c:	ldr	x0, [x22]
   18a50:	cbz	x0, 18a3c <GOMP_task_reduction_remap@@GOMP_5.0+0x410>
   18a54:	add	x20, x22, #0x38
   18a58:	mov	x21, x25
   18a5c:	str	x22, [x20, #16]
   18a60:	mov	x19, x20
   18a64:	mov	w2, w23
   18a68:	mov	x1, x19
   18a6c:	mov	x0, x24
   18a70:	bl	12398 <GOMP_single_copy_end@@GOMP_1.0+0x314>
   18a74:	str	x19, [x0]
   18a78:	add	x21, x21, #0x1
   18a7c:	add	x20, x20, #0x18
   18a80:	ldr	x0, [x22]
   18a84:	cmp	x21, x0
   18a88:	b.cc	18a5c <GOMP_task_reduction_remap@@GOMP_5.0+0x430>  // b.lo, b.ul, b.last
   18a8c:	b	18a3c <GOMP_task_reduction_remap@@GOMP_5.0+0x410>
   18a90:	ldr	x0, [sp, #104]
   18a94:	str	x0, [x22, #40]
   18a98:	ldr	x0, [x28, #40]
   18a9c:	str	x27, [x0, #40]
   18aa0:	ldp	x19, x20, [sp, #16]
   18aa4:	ldp	x21, x22, [sp, #32]
   18aa8:	ldp	x23, x24, [sp, #48]
   18aac:	ldp	x25, x26, [sp, #64]
   18ab0:	ldp	x27, x28, [sp, #80]
   18ab4:	ldp	x29, x30, [sp], #112
   18ab8:	ret
   18abc:	mov	x0, x21
   18ac0:	bl	12214 <GOMP_single_copy_end@@GOMP_1.0+0x190>
   18ac4:	str	x0, [sp, #104]
   18ac8:	mov	x22, x27
   18acc:	add	x24, sp, #0x68
   18ad0:	mov	w23, #0x1                   	// #1
   18ad4:	b	18a4c <GOMP_task_reduction_remap@@GOMP_5.0+0x420>
   18ad8:	stp	x29, x30, [sp, #-32]!
   18adc:	mov	x29, sp
   18ae0:	stp	x19, x20, [sp, #16]
   18ae4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18ae8:	ldr	x0, [x0, #4016]
   18aec:	mrs	x1, tpidr_el0
   18af0:	add	x0, x1, x0
   18af4:	ldr	x0, [x0, #16]
   18af8:	cbz	x0, 18b64 <GOMP_task_reduction_remap@@GOMP_5.0+0x538>
   18afc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18b00:	ldr	x0, [x0, #4016]
   18b04:	mrs	x1, tpidr_el0
   18b08:	add	x0, x1, x0
   18b0c:	ldr	x20, [x0, #80]
   18b10:	ldr	x19, [x20, #40]
   18b14:	mov	x0, #0x40                  	// #64
   18b18:	bl	8c28 <fprintf@plt+0x118>
   18b1c:	mov	x1, x0
   18b20:	str	x19, [x1], #8
   18b24:	str	xzr, [x0, #8]
   18b28:	str	xzr, [x1, #16]
   18b2c:	str	xzr, [x1, #24]
   18b30:	cbz	x19, 18b38 <GOMP_task_reduction_remap@@GOMP_5.0+0x50c>
   18b34:	ldr	x19, [x19, #40]
   18b38:	str	x19, [x0, #40]
   18b3c:	strb	wzr, [x0, #48]
   18b40:	strb	wzr, [x0, #49]
   18b44:	str	xzr, [x0, #56]
   18b48:	str	wzr, [x0, #52]
   18b4c:	str	x0, [x20, #40]
   18b50:	mov	w1, #0x1                   	// #1
   18b54:	strb	w1, [x0, #50]
   18b58:	ldp	x19, x20, [sp, #16]
   18b5c:	ldp	x29, x30, [sp], #32
   18b60:	ret
   18b64:	bl	1395c <GOMP_single_copy_end@@GOMP_1.0+0x18d8>
   18b68:	b	18afc <GOMP_task_reduction_remap@@GOMP_5.0+0x4d0>

0000000000018b6c <GOMP_workshare_task_reduction_unregister@@GOMP_5.0>:
   18b6c:	stp	x29, x30, [sp, #-48]!
   18b70:	mov	x29, sp
   18b74:	stp	x19, x20, [sp, #16]
   18b78:	stp	x21, x22, [sp, #32]
   18b7c:	and	w20, w0, #0xff
   18b80:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18b84:	ldr	x19, [x19, #4016]
   18b88:	mrs	x0, tpidr_el0
   18b8c:	add	x19, x0, x19
   18b90:	ldr	x22, [x19, #16]
   18b94:	ldr	x0, [x19, #80]
   18b98:	ldr	x0, [x0, #40]
   18b9c:	ldr	x21, [x0, #40]
   18ba0:	bl	16320 <GOMP_taskgroup_end@@GOMP_4.0>
   18ba4:	ldr	w0, [x19, #40]
   18ba8:	cbnz	w0, 18bc8 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x5c>
   18bac:	mov	x0, x21
   18bb0:	bl	185f0 <GOMP_taskgroup_reduction_unregister@@GOMP_5.0>
   18bb4:	cbz	w20, 18bd4 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x68>
   18bb8:	ldp	x19, x20, [sp, #16]
   18bbc:	ldp	x21, x22, [sp, #32]
   18bc0:	ldp	x29, x30, [sp], #48
   18bc4:	ret
   18bc8:	ldr	x0, [x21, #40]
   18bcc:	bl	8900 <free@plt>
   18bd0:	b	18bb4 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x48>
   18bd4:	add	x0, x22, #0x80
   18bd8:	bl	1bbc4 <omp_get_num_procs@@OMP_1.0+0x750>
   18bdc:	b	18bb8 <GOMP_workshare_task_reduction_unregister@@GOMP_5.0+0x4c>

0000000000018be0 <omp_in_final@@OMP_3.1>:
   18be0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18be4:	ldr	x0, [x0, #4016]
   18be8:	mrs	x1, tpidr_el0
   18bec:	add	x0, x1, x0
   18bf0:	ldr	x1, [x0, #80]
   18bf4:	mov	w0, #0x0                   	// #0
   18bf8:	cbz	x1, 18c00 <omp_in_final@@OMP_3.1+0x20>
   18bfc:	ldrb	w0, [x1, #205]
   18c00:	ret
   18c04:	stp	x29, x30, [sp, #-16]!
   18c08:	mov	x29, sp
   18c0c:	add	x0, x0, #0x40
   18c10:	bl	1b910 <omp_get_num_procs@@OMP_1.0+0x49c>
   18c14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18c18:	ldr	x0, [x0, #3992]
   18c1c:	mrs	x1, tpidr_el0
   18c20:	add	x0, x1, x0
   18c24:	str	xzr, [x0, #96]
   18c28:	str	xzr, [x0, #80]
   18c2c:	bl	8a90 <pthread_self@plt>
   18c30:	bl	87b0 <pthread_detach@plt>
   18c34:	mov	x0, #0x0                   	// #0
   18c38:	bl	8880 <pthread_exit@plt>
   18c3c:	stp	x29, x30, [sp, #-16]!
   18c40:	mov	x29, sp
   18c44:	add	x0, x0, #0x40
   18c48:	bl	1b910 <omp_get_num_procs@@OMP_1.0+0x49c>
   18c4c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18c50:	ldr	x0, [x0, #3992]
   18c54:	mrs	x1, tpidr_el0
   18c58:	add	x0, x1, x0
   18c5c:	str	xzr, [x0, #96]
   18c60:	str	xzr, [x0, #80]
   18c64:	mov	x0, #0x0                   	// #0
   18c68:	bl	8880 <pthread_exit@plt>
   18c6c:	stp	x29, x30, [sp, #-64]!
   18c70:	mov	x29, sp
   18c74:	stp	x19, x20, [sp, #16]
   18c78:	stp	x21, x22, [sp, #32]
   18c7c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18c80:	ldr	x1, [x1, #3992]
   18c84:	mrs	x2, tpidr_el0
   18c88:	add	x1, x2, x1
   18c8c:	str	wzr, [x1, #88]
   18c90:	ldr	x20, [x0]
   18c94:	ldr	x21, [x0, #8]
   18c98:	ldr	x2, [x0, #88]
   18c9c:	str	x2, [x1, #96]
   18ca0:	ldp	x4, x5, [x0, #16]
   18ca4:	stp	x4, x5, [x1, #16]
   18ca8:	ldp	x4, x5, [x0, #32]
   18cac:	stp	x4, x5, [x1, #32]
   18cb0:	ldp	x4, x5, [x0, #48]
   18cb4:	stp	x4, x5, [x1, #48]
   18cb8:	ldp	x4, x5, [x0, #64]
   18cbc:	stp	x4, x5, [x1, #64]
   18cc0:	ldr	x2, [x0, #80]
   18cc4:	str	x2, [x1, #80]
   18cc8:	ldr	w2, [x0, #96]
   18ccc:	str	w2, [x1, #92]
   18cd0:	ldr	x2, [x1, #16]
   18cd4:	ldr	w3, [x1, #40]
   18cd8:	ldr	x2, [x2, #80]
   18cdc:	add	x1, x1, #0x58
   18ce0:	str	x1, [x2, x3, lsl #3]
   18ce4:	ldrb	w0, [x0, #100]
   18ce8:	cbz	w0, 18d6c <omp_in_final@@OMP_3.1+0x18c>
   18cec:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18cf0:	ldr	x0, [x0, #3992]
   18cf4:	mrs	x1, tpidr_el0
   18cf8:	add	x0, x1, x0
   18cfc:	ldr	x22, [x0, #80]
   18d00:	ldr	x19, [x0, #16]
   18d04:	add	x19, x19, #0x80
   18d08:	mov	x0, x19
   18d0c:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   18d10:	mov	x0, x21
   18d14:	blr	x20
   18d18:	mov	x0, x19
   18d1c:	bl	1bc04 <omp_get_num_procs@@OMP_1.0+0x790>
   18d20:	ldr	x0, [x22, #56]
   18d24:	cbnz	x0, 18d64 <omp_in_final@@OMP_3.1+0x184>
   18d28:	mov	x0, x19
   18d2c:	bl	1b910 <omp_get_num_procs@@OMP_1.0+0x49c>
   18d30:	bl	8a90 <pthread_self@plt>
   18d34:	bl	87b0 <pthread_detach@plt>
   18d38:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18d3c:	ldr	x0, [x0, #3992]
   18d40:	mrs	x1, tpidr_el0
   18d44:	add	x0, x1, x0
   18d48:	str	xzr, [x0, #96]
   18d4c:	str	xzr, [x0, #80]
   18d50:	mov	x0, #0x0                   	// #0
   18d54:	ldp	x19, x20, [sp, #16]
   18d58:	ldp	x21, x22, [sp, #32]
   18d5c:	ldp	x29, x30, [sp], #64
   18d60:	ret
   18d64:	bl	8900 <free@plt>
   18d68:	b	18d28 <omp_in_final@@OMP_3.1+0x148>
   18d6c:	stp	x23, x24, [sp, #48]
   18d70:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18d74:	ldr	x0, [x0, #3992]
   18d78:	mrs	x1, tpidr_el0
   18d7c:	add	x0, x1, x0
   18d80:	ldr	w2, [x0, #40]
   18d84:	ldr	x24, [x0, #96]
   18d88:	ldr	x1, [x24], #64
   18d8c:	str	x0, [x1, x2, lsl #3]
   18d90:	mov	x0, x24
   18d94:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   18d98:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18d9c:	ldr	x19, [x19, #3992]
   18da0:	mrs	x0, tpidr_el0
   18da4:	add	x19, x0, x19
   18da8:	ldr	x23, [x19, #16]
   18dac:	ldr	x22, [x19, #80]
   18db0:	mov	x0, x21
   18db4:	blr	x20
   18db8:	add	x0, x23, #0x80
   18dbc:	bl	1bc04 <omp_get_num_procs@@OMP_1.0+0x790>
   18dc0:	ldr	x0, [x22, #56]
   18dc4:	cbnz	x0, 18de8 <omp_in_final@@OMP_3.1+0x208>
   18dc8:	mov	x0, x24
   18dcc:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   18dd0:	ldr	x20, [x19]
   18dd4:	ldr	x21, [x19, #8]
   18dd8:	str	xzr, [x19]
   18ddc:	cbnz	x20, 18da8 <omp_in_final@@OMP_3.1+0x1c8>
   18de0:	ldp	x23, x24, [sp, #48]
   18de4:	b	18d30 <omp_in_final@@OMP_3.1+0x150>
   18de8:	bl	8900 <free@plt>
   18dec:	b	18dc8 <omp_in_final@@OMP_3.1+0x1e8>
   18df0:	stp	x29, x30, [sp, #-48]!
   18df4:	mov	x29, sp
   18df8:	stp	x19, x20, [sp, #16]
   18dfc:	mov	w20, w0
   18e00:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18e04:	ldr	x0, [x0, #3992]
   18e08:	mrs	x1, tpidr_el0
   18e0c:	add	x0, x1, x0
   18e10:	ldr	x0, [x0, #16]
   18e14:	cbz	x0, 18f10 <omp_in_final@@OMP_3.1+0x330>
   18e18:	mov	w1, w20
   18e1c:	ubfiz	x0, x20, #3, #32
   18e20:	sub	x0, x0, x1
   18e24:	lsl	x0, x0, #2
   18e28:	sub	x0, x0, x1
   18e2c:	lsl	x0, x0, #3
   18e30:	add	x0, x0, #0x540
   18e34:	bl	8c28 <fprintf@plt+0x118>
   18e38:	mov	x19, x0
   18e3c:	str	w20, [x0, #128]
   18e40:	str	w20, [x0, #192]
   18e44:	str	w20, [x0, #196]
   18e48:	str	wzr, [x0, #132]
   18e4c:	str	wzr, [x0, #1280]
   18e50:	str	w20, [x0]
   18e54:	mov	w0, #0x8                   	// #8
   18e58:	str	w0, [x19, #4]
   18e5c:	str	xzr, [x19, #112]
   18e60:	add	x0, x19, #0x100
   18e64:	str	x0, [x19, #88]
   18e68:	mov	w2, w20
   18e6c:	mov	x1, #0x0                   	// #0
   18e70:	bl	1a588 <omp_in_final@@OMP_3.1+0x19a8>
   18e74:	str	xzr, [x19, #312]
   18e78:	str	xzr, [x19, #104]
   18e7c:	add	x0, x19, #0x180
   18e80:	str	x0, [x19, #96]
   18e84:	add	x0, x19, #0x200
   18e88:	str	x0, [x19, #464]
   18e8c:	add	x0, x19, #0x280
   18e90:	str	x0, [x19, #592]
   18e94:	add	x0, x19, #0x300
   18e98:	str	x0, [x19, #720]
   18e9c:	add	x0, x19, #0x380
   18ea0:	str	x0, [x19, #848]
   18ea4:	add	x0, x19, #0x400
   18ea8:	str	x0, [x19, #976]
   18eac:	add	x0, x19, #0x480
   18eb0:	str	x0, [x19, #1104]
   18eb4:	str	xzr, [x19, #1232]
   18eb8:	str	wzr, [x19, #72]
   18ebc:	mov	w1, w20
   18ec0:	add	x0, x1, w20, uxtw #1
   18ec4:	add	x0, x1, x0, lsl #2
   18ec8:	lsl	x0, x0, #4
   18ecc:	add	x0, x0, #0x540
   18ed0:	add	x1, x19, x0
   18ed4:	str	x1, [x19, #80]
   18ed8:	add	x1, x19, #0x48
   18edc:	str	x1, [x19, x0]
   18ee0:	str	xzr, [x19, #1288]
   18ee4:	str	xzr, [x19, #1304]
   18ee8:	str	xzr, [x19, #1312]
   18eec:	str	wzr, [x19, #1320]
   18ef0:	str	wzr, [x19, #1324]
   18ef4:	str	wzr, [x19, #1328]
   18ef8:	str	wzr, [x19, #1332]
   18efc:	str	wzr, [x19, #1336]
   18f00:	mov	x0, x19
   18f04:	ldp	x19, x20, [sp, #16]
   18f08:	ldp	x29, x30, [sp], #48
   18f0c:	ret
   18f10:	str	x21, [sp, #32]
   18f14:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18f18:	ldr	x0, [x0, #3992]
   18f1c:	add	x0, x1, x0
   18f20:	ldr	x21, [x0, #96]
   18f24:	cbz	x21, 18f44 <omp_in_final@@OMP_3.1+0x364>
   18f28:	ldr	x19, [x21, #16]
   18f2c:	cbz	x19, 18f98 <omp_in_final@@OMP_3.1+0x3b8>
   18f30:	ldr	w0, [x19]
   18f34:	cmp	w20, w0
   18f38:	b.eq	18f8c <omp_in_final@@OMP_3.1+0x3ac>  // b.none
   18f3c:	ldr	x21, [sp, #32]
   18f40:	b	18e18 <omp_in_final@@OMP_3.1+0x238>
   18f44:	mov	x0, #0xc0                  	// #192
   18f48:	bl	8c28 <fprintf@plt+0x118>
   18f4c:	mov	x21, x0
   18f50:	str	xzr, [x0]
   18f54:	str	wzr, [x0, #8]
   18f58:	str	wzr, [x0, #12]
   18f5c:	str	xzr, [x0, #16]
   18f60:	mov	w0, w20
   18f64:	str	x0, [x21, #24]
   18f68:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18f6c:	ldr	x1, [x1, #3992]
   18f70:	mrs	x0, tpidr_el0
   18f74:	add	x1, x0, x1
   18f78:	str	x21, [x1, #96]
   18f7c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   18f80:	ldr	w0, [x0, #1696]
   18f84:	bl	89b0 <pthread_setspecific@plt>
   18f88:	b	18f28 <omp_in_final@@OMP_3.1+0x348>
   18f8c:	str	xzr, [x21, #16]
   18f90:	ldr	x21, [sp, #32]
   18f94:	b	18e54 <omp_in_final@@OMP_3.1+0x274>
   18f98:	ldr	x21, [sp, #32]
   18f9c:	b	18e18 <omp_in_final@@OMP_3.1+0x238>
   18fa0:	stp	x29, x30, [sp, #-320]!
   18fa4:	mov	x29, sp
   18fa8:	stp	x19, x20, [sp, #16]
   18fac:	stp	x21, x22, [sp, #32]
   18fb0:	stp	x23, x24, [sp, #48]
   18fb4:	stp	x25, x26, [sp, #64]
   18fb8:	stp	x27, x28, [sp, #80]
   18fbc:	str	x0, [x29, #200]
   18fc0:	str	x1, [x29, #192]
   18fc4:	str	w2, [x29, #228]
   18fc8:	mov	w20, w3
   18fcc:	mov	x22, x4
   18fd0:	str	x5, [x29, #136]
   18fd4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   18fd8:	ldr	x0, [x0, #3992]
   18fdc:	mrs	x1, tpidr_el0
   18fe0:	add	x0, x1, x0
   18fe4:	ldr	w1, [x0, #44]
   18fe8:	str	w1, [x29, #176]
   18fec:	cmp	w1, #0x0
   18ff0:	cset	w1, ne  // ne = any
   18ff4:	str	w1, [x29, #180]
   18ff8:	ldr	x25, [x0, #96]
   18ffc:	ldr	x2, [x0, #80]
   19000:	str	x2, [x29, #208]
   19004:	add	x1, x2, #0x90
   19008:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1900c:	add	x0, x0, #0x2b8
   19010:	cmp	x2, #0x0
   19014:	csel	x0, x0, x1, eq  // eq = none
   19018:	str	x0, [x29, #232]
   1901c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19020:	ldr	x0, [x0, #1568]
   19024:	cbnz	x0, 191b0 <omp_in_final@@OMP_3.1+0x5d0>
   19028:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1902c:	ldr	x0, [x0, #3992]
   19030:	mrs	x1, tpidr_el0
   19034:	add	x0, x1, x0
   19038:	ldp	x4, x5, [x0, #16]
   1903c:	stp	x4, x5, [x22, #8]
   19040:	ldp	x4, x5, [x0, #32]
   19044:	stp	x4, x5, [x22, #24]
   19048:	ldp	x4, x5, [x0, #48]
   1904c:	stp	x4, x5, [x22, #40]
   19050:	ldp	x4, x5, [x0, #64]
   19054:	stp	x4, x5, [x22, #56]
   19058:	str	x22, [x0, #16]
   1905c:	str	wzr, [x0, #40]
   19060:	ldr	w2, [x0, #44]
   19064:	add	w2, w2, #0x1
   19068:	str	w2, [x0, #44]
   1906c:	ldr	w0, [x29, #228]
   19070:	cmp	w0, #0x1
   19074:	b.ls	19094 <omp_in_final@@OMP_3.1+0x4b4>  // b.plast
   19078:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1907c:	ldr	x0, [x0, #3992]
   19080:	mrs	x1, tpidr_el0
   19084:	add	x0, x1, x0
   19088:	ldr	w1, [x0, #48]
   1908c:	add	w1, w1, #0x1
   19090:	str	w1, [x0, #48]
   19094:	add	x3, x22, #0x100
   19098:	str	x3, [x29, #168]
   1909c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   190a0:	ldr	x1, [x1, #3992]
   190a4:	mrs	x0, tpidr_el0
   190a8:	add	x1, x0, x1
   190ac:	str	x3, [x1, #24]
   190b0:	str	xzr, [x1, #32]
   190b4:	str	xzr, [x1, #64]
   190b8:	str	xzr, [x1, #72]
   190bc:	add	x0, x22, #0x540
   190c0:	str	x0, [x1, #80]
   190c4:	ldr	x1, [x29, #232]
   190c8:	ldr	x1, [x1]
   190cc:	str	x1, [x29, #216]
   190d0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   190d4:	ldr	x1, [x1, #1504]
   190d8:	cbnz	x1, 19244 <omp_in_final@@OMP_3.1+0x664>
   190dc:	ldr	x1, [x29, #232]
   190e0:	ldrb	w3, [x1, #26]
   190e4:	str	w3, [x29, #164]
   190e8:	cbz	w3, 190fc <omp_in_final@@OMP_3.1+0x51c>
   190ec:	and	w1, w20, #0x7
   190f0:	tst	x20, #0x7
   190f4:	csel	w1, w1, w3, ne  // ne = any
   190f8:	str	w1, [x29, #164]
   190fc:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19100:	ldr	x1, [x1, #1544]
   19104:	ldr	w3, [x29, #164]
   19108:	str	w3, [x29, #224]
   1910c:	cbnz	x1, 19264 <omp_in_final@@OMP_3.1+0x684>
   19110:	ldr	x2, [x29, #232]
   19114:	ldr	x1, [x29, #208]
   19118:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   1911c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19120:	ldr	x0, [x0, #3992]
   19124:	mrs	x1, tpidr_el0
   19128:	add	x0, x1, x0
   1912c:	ldr	x0, [x0, #80]
   19130:	ldr	x1, [x29, #136]
   19134:	str	x1, [x0, #40]
   19138:	ldr	x0, [x29, #216]
   1913c:	str	x0, [x22, #1488]
   19140:	ldrb	w0, [x29, #224]
   19144:	strb	w0, [x22, #1514]
   19148:	ldr	w0, [x29, #228]
   1914c:	cmp	w0, #0x1
   19150:	b.eq	19e58 <omp_in_final@@OMP_3.1+0x1278>  // b.none
   19154:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19158:	ldr	x0, [x0, #1568]
   1915c:	cbnz	x0, 19288 <omp_in_final@@OMP_3.1+0x6a8>
   19160:	str	wzr, [x29, #148]
   19164:	str	wzr, [x29, #160]
   19168:	str	wzr, [x29, #124]
   1916c:	str	wzr, [x29, #128]
   19170:	str	wzr, [x29, #164]
   19174:	ldr	w0, [x29, #176]
   19178:	cbnz	w0, 19fb8 <omp_in_final@@OMP_3.1+0x13d8>
   1917c:	ldr	w0, [x25, #12]
   19180:	str	w0, [x29, #132]
   19184:	ldr	w1, [x29, #228]
   19188:	mov	w28, w1
   1918c:	cmp	w1, w0
   19190:	b.ls	1943c <omp_in_final@@OMP_3.1+0x85c>  // b.plast
   19194:	mov	w28, w0
   19198:	cbnz	w0, 19414 <omp_in_final@@OMP_3.1+0x834>
   1919c:	str	w1, [x25, #64]
   191a0:	str	w1, [x25, #128]
   191a4:	str	w1, [x25, #132]
   191a8:	str	wzr, [x25, #68]
   191ac:	b	1943c <omp_in_final@@OMP_3.1+0x85c>
   191b0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   191b4:	ldr	x1, [x1, #3992]
   191b8:	mrs	x0, tpidr_el0
   191bc:	add	x0, x0, x1
   191c0:	ldr	w0, [x0, #92]
   191c4:	cbnz	w0, 19028 <omp_in_final@@OMP_3.1+0x448>
   191c8:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
   191cc:	ldr	w0, [x29, #228]
   191d0:	cmp	w0, #0x1
   191d4:	cset	w1, eq  // eq = none
   191d8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   191dc:	ldrb	w0, [x0, #1520]
   191e0:	tst	w1, w0
   191e4:	b.eq	19028 <omp_in_final@@OMP_3.1+0x448>  // b.none
   191e8:	bl	8a90 <pthread_self@plt>
   191ec:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   191f0:	ldr	x1, [x1, #3992]
   191f4:	mrs	x21, tpidr_el0
   191f8:	add	x21, x21, x1
   191fc:	add	x23, x21, #0x10
   19200:	ldr	w2, [x21, #92]
   19204:	mov	x1, x23
   19208:	bl	2853c <omp_display_affinity@@OMP_5.0+0x98>
   1920c:	ldp	x2, x3, [x21, #16]
   19210:	stp	x2, x3, [x22, #8]
   19214:	ldp	x2, x3, [x21, #32]
   19218:	stp	x2, x3, [x22, #24]
   1921c:	ldp	x2, x3, [x21, #48]
   19220:	stp	x2, x3, [x22, #40]
   19224:	ldp	x2, x3, [x21, #64]
   19228:	stp	x2, x3, [x22, #56]
   1922c:	str	x22, [x21, #16]
   19230:	str	wzr, [x21, #40]
   19234:	ldr	w2, [x21, #44]
   19238:	add	w2, w2, #0x1
   1923c:	str	w2, [x21, #44]
   19240:	b	19094 <omp_in_final@@OMP_3.1+0x4b4>
   19244:	mov	w4, w2
   19248:	adrp	x3, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1924c:	ldr	x3, [x3, #1624]
   19250:	cmp	x3, w2, uxtw
   19254:	b.ls	190dc <omp_in_final@@OMP_3.1+0x4fc>  // b.plast
   19258:	ldr	x1, [x1, x4, lsl #3]
   1925c:	str	x1, [x29, #216]
   19260:	b	190dc <omp_in_final@@OMP_3.1+0x4fc>
   19264:	adrp	x3, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19268:	ldr	x3, [x3, #1528]
   1926c:	ldr	w4, [x29, #164]
   19270:	str	w4, [x29, #224]
   19274:	cmp	x3, w2, uxtw
   19278:	b.ls	19110 <omp_in_final@@OMP_3.1+0x530>  // b.plast
   1927c:	ldrb	w1, [x1, w2, uxtw]
   19280:	str	w1, [x29, #224]
   19284:	b	19110 <omp_in_final@@OMP_3.1+0x530>
   19288:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1928c:	ldr	x1, [x1, #3992]
   19290:	mrs	x0, tpidr_el0
   19294:	add	x0, x0, x1
   19298:	ldr	w0, [x0, #92]
   1929c:	sub	w0, w0, #0x1
   192a0:	str	w0, [x29, #160]
   192a4:	ldr	w0, [x29, #164]
   192a8:	cmp	w0, #0x3
   192ac:	b.eq	192d0 <omp_in_final@@OMP_3.1+0x6f0>  // b.none
   192b0:	cmp	w0, #0x4
   192b4:	b.eq	1930c <omp_in_final@@OMP_3.1+0x72c>  // b.none
   192b8:	cmp	w0, #0x1
   192bc:	b.eq	192d0 <omp_in_final@@OMP_3.1+0x6f0>  // b.none
   192c0:	str	wzr, [x29, #148]
   192c4:	str	wzr, [x29, #124]
   192c8:	str	wzr, [x29, #128]
   192cc:	b	19174 <omp_in_final@@OMP_3.1+0x594>
   192d0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   192d4:	ldr	x1, [x1, #3992]
   192d8:	mrs	x0, tpidr_el0
   192dc:	add	x0, x0, x1
   192e0:	ldr	w0, [x0, #56]
   192e4:	ldr	w1, [x29, #228]
   192e8:	cmp	w0, w1
   192ec:	b.cs	19400 <omp_in_final@@OMP_3.1+0x820>  // b.hs, b.nlast
   192f0:	udiv	w2, w1, w0
   192f4:	str	w2, [x29, #128]
   192f8:	msub	w0, w2, w0, w1
   192fc:	str	w0, [x29, #124]
   19300:	mov	w0, #0x1                   	// #1
   19304:	str	w0, [x29, #148]
   19308:	b	19174 <omp_in_final@@OMP_3.1+0x594>
   1930c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19310:	ldr	x1, [x1, #3992]
   19314:	mrs	x0, tpidr_el0
   19318:	add	x0, x0, x1
   1931c:	ldr	w0, [x0, #56]
   19320:	ldr	w1, [x29, #228]
   19324:	cmp	w0, w1
   19328:	b.cc	193c4 <omp_in_final@@OMP_3.1+0x7e4>  // b.lo, b.ul, b.last
   1932c:	udiv	w3, w0, w1
   19330:	str	w3, [x29, #128]
   19334:	add	w2, w3, #0x1
   19338:	msub	w0, w3, w1, w0
   1933c:	madd	w0, w3, w0, w0
   19340:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19344:	ldr	x3, [x3, #3992]
   19348:	mrs	x1, tpidr_el0
   1934c:	add	x1, x1, x3
   19350:	ldr	w1, [x1, #52]
   19354:	add	w0, w0, w1
   19358:	str	w0, [x29, #124]
   1935c:	ldr	w3, [x29, #160]
   19360:	cmp	w3, w0
   19364:	b.cs	193a0 <omp_in_final@@OMP_3.1+0x7c0>  // b.hs, b.nlast
   19368:	sub	w0, w3, w1
   1936c:	udiv	w1, w0, w2
   19370:	msub	w0, w1, w2, w0
   19374:	sub	w0, w3, w0
   19378:	str	w0, [x29, #160]
   1937c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19380:	ldr	x1, [x1, #3992]
   19384:	mrs	x0, tpidr_el0
   19388:	add	x0, x0, x1
   1938c:	str	w2, [x0, #56]
   19390:	ldr	w1, [x29, #160]
   19394:	str	w1, [x0, #52]
   19398:	str	wzr, [x29, #148]
   1939c:	b	19174 <omp_in_final@@OMP_3.1+0x594>
   193a0:	ldr	w3, [x29, #160]
   193a4:	ldr	w0, [x29, #124]
   193a8:	sub	w1, w3, w0
   193ac:	ldr	w2, [x29, #128]
   193b0:	udiv	w0, w1, w2
   193b4:	msub	w0, w0, w2, w1
   193b8:	sub	w0, w3, w0
   193bc:	str	w0, [x29, #160]
   193c0:	b	1937c <omp_in_final@@OMP_3.1+0x79c>
   193c4:	ldr	w2, [x29, #228]
   193c8:	udiv	w1, w2, w0
   193cc:	str	w1, [x29, #128]
   193d0:	msub	w0, w1, w0, w2
   193d4:	str	w0, [x29, #124]
   193d8:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   193dc:	ldr	x1, [x1, #3992]
   193e0:	mrs	x0, tpidr_el0
   193e4:	add	x0, x0, x1
   193e8:	ldr	w1, [x29, #160]
   193ec:	str	w1, [x0, #52]
   193f0:	mov	w1, #0x1                   	// #1
   193f4:	str	w1, [x0, #56]
   193f8:	str	w1, [x29, #148]
   193fc:	b	19174 <omp_in_final@@OMP_3.1+0x594>
   19400:	mov	w0, #0x1                   	// #1
   19404:	str	w0, [x29, #148]
   19408:	str	wzr, [x29, #124]
   1940c:	str	w0, [x29, #128]
   19410:	b	19174 <omp_in_final@@OMP_3.1+0x594>
   19414:	ldr	w0, [x25, #64]
   19418:	ldr	w2, [x29, #228]
   1941c:	sub	w0, w2, w0
   19420:	add	x1, x25, #0x80
   19424:	ldaxr	w3, [x1]
   19428:	add	w3, w3, w0
   1942c:	stlxr	w4, w3, [x1]
   19430:	cbnz	w4, 19424 <omp_in_final@@OMP_3.1+0x844>
   19434:	str	w2, [x25, #64]
   19438:	ldr	w28, [x29, #132]
   1943c:	ldr	w1, [x29, #228]
   19440:	str	w1, [x25, #12]
   19444:	ldr	w0, [x25, #8]
   19448:	cmp	w0, w1
   1944c:	b.ls	194b4 <omp_in_final@@OMP_3.1+0x8d4>  // b.plast
   19450:	cmp	w28, #0x1
   19454:	b.ls	19af8 <omp_in_final@@OMP_3.1+0xf18>  // b.plast
   19458:	ldr	w2, [x29, #132]
   1945c:	ubfiz	x0, x2, #3, #32
   19460:	str	x0, [x29, #104]
   19464:	ldr	w0, [x29, #228]
   19468:	sub	w0, w0, w2
   1946c:	lsl	x0, x0, #3
   19470:	str	x0, [x29, #96]
   19474:	ldr	w0, [x29, #176]
   19478:	str	w0, [x29, #144]
   1947c:	str	wzr, [x29, #120]
   19480:	str	xzr, [x29, #152]
   19484:	mov	w20, #0x1                   	// #1
   19488:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1948c:	ldr	x26, [x26, #3992]
   19490:	mrs	x1, tpidr_el0
   19494:	add	x26, x1, x26
   19498:	adrp	x27, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1949c:	sub	w0, w2, #0x1
   194a0:	str	w0, [x29, #116]
   194a4:	str	w20, [x29, #112]
   194a8:	str	x19, [x29, #184]
   194ac:	ldr	x24, [x29, #136]
   194b0:	b	198b0 <omp_in_final@@OMP_3.1+0xcd0>
   194b4:	ldr	w0, [x29, #228]
   194b8:	add	w1, w0, #0x1
   194bc:	str	w1, [x25, #8]
   194c0:	ubfiz	x1, x1, #3, #32
   194c4:	ldr	x0, [x25]
   194c8:	bl	8c98 <fprintf@plt+0x188>
   194cc:	str	x0, [x25]
   194d0:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   194d4:	ldr	x1, [x1, #3992]
   194d8:	mrs	x2, tpidr_el0
   194dc:	add	x1, x2, x1
   194e0:	str	x1, [x0]
   194e4:	b	19450 <omp_in_final@@OMP_3.1+0x870>
   194e8:	ldr	w0, [x29, #128]
   194ec:	ldr	w1, [x29, #148]
   194f0:	cmp	w0, w1
   194f4:	b.eq	19540 <omp_in_final@@OMP_3.1+0x960>  // b.none
   194f8:	ldr	w0, [x29, #148]
   194fc:	add	w0, w0, #0x1
   19500:	str	w0, [x29, #148]
   19504:	ldr	x0, [x29, #152]
   19508:	cbnz	x0, 198e4 <omp_in_final@@OMP_3.1+0xd04>
   1950c:	ldr	w0, [x29, #164]
   19510:	cmp	w0, #0x1
   19514:	b.ne	19654 <omp_in_final@@OMP_3.1+0xa74>  // b.any
   19518:	ldr	x0, [x25]
   1951c:	ldr	x19, [x0, w20, uxtw #3]
   19520:	ldr	w0, [x19, #92]
   19524:	cmp	w0, w21
   19528:	b.ls	19670 <omp_in_final@@OMP_3.1+0xa90>  // b.plast
   1952c:	add	w1, w21, w23
   19530:	cmp	w0, w1
   19534:	b.hi	19670 <omp_in_final@@OMP_3.1+0xa90>  // b.pmore
   19538:	str	xzr, [x29, #152]
   1953c:	b	19938 <omp_in_final@@OMP_3.1+0xd58>
   19540:	ldr	w0, [x29, #160]
   19544:	add	w2, w0, #0x1
   19548:	ldr	w1, [x22, #44]
   1954c:	ldr	w0, [x22, #48]
   19550:	add	w0, w1, w0
   19554:	cmp	w0, w2
   19558:	csel	w0, w2, w1, ne  // ne = any
   1955c:	str	w0, [x29, #160]
   19560:	ldr	w0, [x29, #228]
   19564:	ldr	w1, [x29, #124]
   19568:	sub	w0, w0, w1
   1956c:	cmp	w0, w20
   19570:	b.eq	19644 <omp_in_final@@OMP_3.1+0xa64>  // b.none
   19574:	mov	w0, #0x1                   	// #1
   19578:	str	w0, [x29, #148]
   1957c:	b	19504 <omp_in_final@@OMP_3.1+0x924>
   19580:	ldr	w0, [x29, #148]
   19584:	cbnz	w0, 195d0 <omp_in_final@@OMP_3.1+0x9f0>
   19588:	ldr	w3, [x29, #128]
   1958c:	ldr	w2, [x29, #160]
   19590:	add	w1, w3, w2
   19594:	ldr	w4, [x29, #124]
   19598:	cmp	w4, w2
   1959c:	cinc	w2, w1, hi  // hi = pmore
   195a0:	ldr	w1, [x22, #44]
   195a4:	ldr	w0, [x22, #48]
   195a8:	add	w0, w1, w0
   195ac:	cmp	w0, w2
   195b0:	csel	w21, w2, w1, ne  // ne = any
   195b4:	str	w21, [x29, #160]
   195b8:	add	w23, w3, #0x1
   195bc:	cmp	w4, w21
   195c0:	b.hi	198dc <omp_in_final@@OMP_3.1+0xcfc>  // b.pmore
   195c4:	ldr	w23, [x29, #128]
   195c8:	ldr	w21, [x29, #160]
   195cc:	b	198dc <omp_in_final@@OMP_3.1+0xcfc>
   195d0:	ldr	w0, [x29, #128]
   195d4:	ldr	w1, [x29, #148]
   195d8:	cmp	w0, w1
   195dc:	b.eq	195f8 <omp_in_final@@OMP_3.1+0xa18>  // b.none
   195e0:	ldr	w0, [x29, #148]
   195e4:	add	w0, w0, #0x1
   195e8:	str	w0, [x29, #148]
   195ec:	ldr	w21, [x29, #160]
   195f0:	mov	w23, #0x1                   	// #1
   195f4:	b	198dc <omp_in_final@@OMP_3.1+0xcfc>
   195f8:	ldr	w0, [x29, #160]
   195fc:	add	w2, w0, #0x1
   19600:	ldr	w1, [x22, #44]
   19604:	ldr	w0, [x22, #48]
   19608:	add	w0, w1, w0
   1960c:	cmp	w0, w2
   19610:	csel	w21, w2, w1, ne  // ne = any
   19614:	str	w21, [x29, #160]
   19618:	ldr	w0, [x29, #228]
   1961c:	ldr	w1, [x29, #124]
   19620:	sub	w0, w0, w1
   19624:	cmp	w0, w20
   19628:	mov	w23, #0x1                   	// #1
   1962c:	str	w23, [x29, #148]
   19630:	ldr	w0, [x29, #128]
   19634:	ldr	w1, [x29, #112]
   19638:	csel	w0, w0, w1, ne  // ne = any
   1963c:	str	w0, [x29, #128]
   19640:	b	198dc <omp_in_final@@OMP_3.1+0xcfc>
   19644:	mov	w0, #0x1                   	// #1
   19648:	str	w0, [x29, #148]
   1964c:	str	w0, [x29, #128]
   19650:	b	19504 <omp_in_final@@OMP_3.1+0x924>
   19654:	ldr	x0, [x25]
   19658:	ldr	x1, [x0, w20, uxtw #3]
   1965c:	ldr	w0, [x29, #160]
   19660:	add	w0, w0, #0x1
   19664:	ldr	w1, [x1, #92]
   19668:	cmp	w1, w0
   1966c:	b.eq	19518 <omp_in_final@@OMP_3.1+0x938>  // b.none
   19670:	ldr	w0, [x22, #48]
   19674:	cmp	w0, #0x40
   19678:	b.hi	196dc <omp_in_final@@OMP_3.1+0xafc>  // b.pmore
   1967c:	ubfiz	x0, x0, #3, #32
   19680:	add	x0, x0, #0xf
   19684:	and	x0, x0, #0xffffffff0
   19688:	sub	sp, sp, x0
   1968c:	mov	x0, sp
   19690:	str	x0, [x29, #152]
   19694:	ldr	w2, [x22, #48]
   19698:	lsl	x2, x2, #3
   1969c:	mov	w1, #0x0                   	// #0
   196a0:	ldr	x19, [x29, #152]
   196a4:	mov	x0, x19
   196a8:	bl	87c0 <memset@plt>
   196ac:	ldr	w0, [x29, #132]
   196b0:	cmp	w20, w0
   196b4:	b.cs	19748 <omp_in_final@@OMP_3.1+0xb68>  // b.hs, b.nlast
   196b8:	mov	w1, w20
   196bc:	ubfiz	x0, x20, #3, #32
   196c0:	ldr	w2, [x29, #116]
   196c4:	sub	w5, w2, w20
   196c8:	add	x1, x1, #0x1
   196cc:	add	x5, x5, x1
   196d0:	lsl	x5, x5, #3
   196d4:	mov	x6, x19
   196d8:	b	19700 <omp_in_final@@OMP_3.1+0xb20>
   196dc:	ubfiz	x0, x0, #3, #32
   196e0:	bl	8c28 <fprintf@plt+0x118>
   196e4:	str	x0, [x29, #152]
   196e8:	b	19694 <omp_in_final@@OMP_3.1+0xab4>
   196ec:	ldr	x1, [x25]
   196f0:	str	xzr, [x1, x0]
   196f4:	add	x0, x0, #0x8
   196f8:	cmp	x0, x5
   196fc:	b.eq	19748 <omp_in_final@@OMP_3.1+0xb68>  // b.none
   19700:	ldr	x1, [x25]
   19704:	ldr	x3, [x1, x0]
   19708:	ldr	w2, [x3, #92]
   1970c:	ldr	w1, [x22, #44]
   19710:	cmp	w2, w1
   19714:	b.ls	196ec <omp_in_final@@OMP_3.1+0xb0c>  // b.plast
   19718:	ldr	w4, [x22, #48]
   1971c:	add	w4, w1, w4
   19720:	cmp	w2, w4
   19724:	b.hi	196ec <omp_in_final@@OMP_3.1+0xb0c>  // b.pmore
   19728:	mvn	w1, w1
   1972c:	add	w1, w1, w2
   19730:	ldr	x2, [x6, x1, lsl #3]
   19734:	str	x2, [x3, #8]
   19738:	ldr	x2, [x25]
   1973c:	ldr	x2, [x2, x0]
   19740:	str	x2, [x6, x1, lsl #3]
   19744:	b	196ec <omp_in_final@@OMP_3.1+0xb0c>
   19748:	ldr	w0, [x29, #228]
   1974c:	ldr	w1, [x29, #132]
   19750:	cmp	w0, w1
   19754:	b.hi	1976c <omp_in_final@@OMP_3.1+0xb8c>  // b.pmore
   19758:	ldr	w0, [x29, #132]
   1975c:	sub	w0, w0, w20
   19760:	str	w0, [x29, #144]
   19764:	ldr	w28, [x29, #228]
   19768:	b	198e4 <omp_in_final@@OMP_3.1+0xd04>
   1976c:	ldr	x0, [x25]
   19770:	ldr	x2, [x29, #96]
   19774:	mov	w1, #0x0                   	// #0
   19778:	ldr	x3, [x29, #104]
   1977c:	add	x0, x0, x3
   19780:	bl	87c0 <memset@plt>
   19784:	b	19758 <omp_in_final@@OMP_3.1+0xb78>
   19788:	mov	w0, #0x1                   	// #1
   1978c:	str	w0, [x29, #120]
   19790:	ldr	w0, [x29, #164]
   19794:	cmp	w0, #0x1
   19798:	b.ne	198a4 <omp_in_final@@OMP_3.1+0xcc4>  // b.any
   1979c:	add	w4, w21, w23
   197a0:	cmp	w4, w21
   197a4:	b.ls	197d8 <omp_in_final@@OMP_3.1+0xbf8>  // b.plast
   197a8:	sub	w2, w21, w1
   197ac:	mov	w0, w21
   197b0:	ldr	x5, [x29, #152]
   197b4:	ldr	x3, [x5, w2, uxtw #3]
   197b8:	cbnz	x3, 197dc <omp_in_final@@OMP_3.1+0xbfc>
   197bc:	add	w0, w0, #0x1
   197c0:	add	w2, w2, #0x1
   197c4:	cmp	w4, w0
   197c8:	b.ne	197b4 <omp_in_final@@OMP_3.1+0xbd4>  // b.any
   197cc:	mov	w0, #0x1                   	// #1
   197d0:	str	w0, [x29, #120]
   197d4:	b	198a4 <omp_in_final@@OMP_3.1+0xcc4>
   197d8:	mov	w0, w21
   197dc:	cmp	w4, w0
   197e0:	b.ne	19908 <omp_in_final@@OMP_3.1+0xd28>  // b.any
   197e4:	mov	w0, #0x1                   	// #1
   197e8:	str	w0, [x29, #120]
   197ec:	b	198a4 <omp_in_final@@OMP_3.1+0xcc4>
   197f0:	ldr	x0, [x25]
   197f4:	ldr	x19, [x0, w20, uxtw #3]
   197f8:	ldr	w1, [x29, #176]
   197fc:	str	x22, [x19, #16]
   19800:	ldr	x0, [x29, #168]
   19804:	str	x0, [x19, #24]
   19808:	str	xzr, [x19, #32]
   1980c:	str	w20, [x19, #40]
   19810:	ldr	w0, [x22, #36]
   19814:	add	w0, w0, #0x1
   19818:	str	w0, [x19, #44]
   1981c:	ldr	w0, [x26, #48]
   19820:	str	w0, [x19, #48]
   19824:	str	w21, [x19, #52]
   19828:	str	w23, [x19, #56]
   1982c:	str	xzr, [x19, #64]
   19830:	str	xzr, [x19, #72]
   19834:	mov	w23, w20
   19838:	ubfiz	x21, x20, #1, #32
   1983c:	add	x0, x21, x23
   19840:	add	x0, x23, x0, lsl #2
   19844:	add	x0, x22, x0, lsl #4
   19848:	add	x0, x0, #0x540
   1984c:	str	x0, [x19, #80]
   19850:	str	w1, [x19, #92]
   19854:	ldr	x2, [x29, #232]
   19858:	ldr	x1, [x29, #208]
   1985c:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   19860:	add	x0, x21, x23
   19864:	add	x0, x23, x0, lsl #2
   19868:	add	x0, x22, x0, lsl #4
   1986c:	ldr	x1, [x29, #216]
   19870:	str	x1, [x0, #1488]
   19874:	mov	x21, x0
   19878:	ldrb	w0, [x29, #224]
   1987c:	strb	w0, [x21, #1514]
   19880:	ldr	x0, [x19, #80]
   19884:	str	x24, [x0, #40]
   19888:	ldr	x0, [x29, #200]
   1988c:	str	x0, [x19]
   19890:	ldr	x0, [x29, #192]
   19894:	str	x0, [x19, #8]
   19898:	ldr	x0, [x22, #80]
   1989c:	add	x19, x19, #0x58
   198a0:	str	x19, [x0, x23, lsl #3]
   198a4:	add	w20, w20, #0x1
   198a8:	cmp	w28, w20
   198ac:	b.ls	19944 <omp_in_final@@OMP_3.1+0xd64>  // b.plast
   198b0:	ldr	w21, [x26, #52]
   198b4:	ldr	w23, [x26, #56]
   198b8:	ldr	x0, [x27, #1568]
   198bc:	cbz	x0, 197f0 <omp_in_final@@OMP_3.1+0xc10>
   198c0:	ldr	w0, [x29, #164]
   198c4:	cmp	w0, #0x3
   198c8:	b.eq	194e8 <omp_in_final@@OMP_3.1+0x908>  // b.none
   198cc:	cmp	w0, #0x4
   198d0:	b.eq	19580 <omp_in_final@@OMP_3.1+0x9a0>  // b.none
   198d4:	cmp	w0, #0x1
   198d8:	b.eq	194e8 <omp_in_final@@OMP_3.1+0x908>  // b.none
   198dc:	ldr	x0, [x29, #152]
   198e0:	cbz	x0, 19654 <omp_in_final@@OMP_3.1+0xa74>
   198e4:	ldr	w0, [x29, #144]
   198e8:	cbz	w0, 199a8 <omp_in_final@@OMP_3.1+0xdc8>
   198ec:	ldr	w1, [x22, #44]
   198f0:	ldr	w3, [x29, #160]
   198f4:	sub	w0, w3, w1
   198f8:	ldr	x2, [x29, #152]
   198fc:	ldr	x2, [x2, x0, lsl #3]
   19900:	mov	w0, w3
   19904:	cbz	x2, 19788 <omp_in_final@@OMP_3.1+0xba8>
   19908:	sub	w0, w0, w1
   1990c:	ldr	x2, [x29, #152]
   19910:	ldr	x19, [x2, x0, lsl #3]
   19914:	ldr	x1, [x19, #8]
   19918:	str	x1, [x2, x0, lsl #3]
   1991c:	ldr	w0, [x29, #144]
   19920:	sub	w0, w0, #0x1
   19924:	str	w0, [x29, #144]
   19928:	ldr	x0, [x25]
   1992c:	str	x19, [x0, w20, uxtw #3]
   19930:	mov	w0, #0x1                   	// #1
   19934:	str	w0, [x29, #120]
   19938:	ldr	w0, [x29, #160]
   1993c:	add	w1, w0, #0x1
   19940:	b	197fc <omp_in_final@@OMP_3.1+0xc1c>
   19944:	ldr	x19, [x29, #184]
   19948:	ldr	x0, [x29, #152]
   1994c:	cbnz	x0, 199b8 <omp_in_final@@OMP_3.1+0xdd8>
   19950:	ldr	w0, [x29, #228]
   19954:	cmp	w20, w0
   19958:	b.eq	19e84 <omp_in_final@@OMP_3.1+0x12a4>  // b.none
   1995c:	str	xzr, [x29, #152]
   19960:	ldr	w0, [x29, #144]
   19964:	ldr	w1, [x29, #228]
   19968:	add	w0, w0, w1
   1996c:	ldr	w1, [x29, #132]
   19970:	cmp	w0, w1
   19974:	b.ls	19fd4 <omp_in_final@@OMP_3.1+0x13f4>  // b.plast
   19978:	mov	w0, w0
   1997c:	ldr	w1, [x29, #132]
   19980:	sub	x0, x0, w1, uxtw
   19984:	cbz	w1, 19fac <omp_in_final@@OMP_3.1+0x13cc>
   19988:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1998c:	add	x1, x1, #0x330
   19990:	ldxr	x2, [x1]
   19994:	add	x2, x2, x0
   19998:	stlxr	w3, x2, [x1]
   1999c:	cbnz	w3, 19990 <omp_in_final@@OMP_3.1+0xdb0>
   199a0:	dmb	ish
   199a4:	b	19fd4 <omp_in_final@@OMP_3.1+0x13f4>
   199a8:	ldr	x19, [x29, #184]
   199ac:	mov	w0, #0x1                   	// #1
   199b0:	str	w0, [x29, #120]
   199b4:	b	19948 <omp_in_final@@OMP_3.1+0xd68>
   199b8:	ldr	w0, [x29, #228]
   199bc:	ldr	w1, [x29, #132]
   199c0:	cmp	w0, w1
   199c4:	b.hi	19a04 <omp_in_final@@OMP_3.1+0xe24>  // b.pmore
   199c8:	sub	w0, w1, w0
   199cc:	ldr	w1, [x29, #144]
   199d0:	cmp	w0, w1
   199d4:	cset	w0, eq  // eq = none
   199d8:	cbz	w0, 19a14 <omp_in_final@@OMP_3.1+0xe34>
   199dc:	ldr	w0, [x22, #48]
   199e0:	ldr	w1, [x29, #176]
   199e4:	str	w1, [x29, #144]
   199e8:	cmp	w0, #0x40
   199ec:	b.ls	19950 <omp_in_final@@OMP_3.1+0xd70>  // b.plast
   199f0:	ldr	x0, [x29, #152]
   199f4:	bl	8900 <free@plt>
   199f8:	ldr	w0, [x29, #176]
   199fc:	str	w0, [x29, #144]
   19a00:	b	19950 <omp_in_final@@OMP_3.1+0xd70>
   19a04:	ldr	w0, [x29, #132]
   19a08:	cmp	w20, w0
   19a0c:	cset	w0, eq  // eq = none
   19a10:	b	199d8 <omp_in_final@@OMP_3.1+0xdf8>
   19a14:	ldr	w0, [x29, #164]
   19a18:	cmp	w0, #0x3
   19a1c:	b.eq	19a6c <omp_in_final@@OMP_3.1+0xe8c>  // b.none
   19a20:	cmp	w0, #0x4
   19a24:	b.eq	19abc <omp_in_final@@OMP_3.1+0xedc>  // b.none
   19a28:	cmp	w0, #0x1
   19a2c:	b.eq	19a6c <omp_in_final@@OMP_3.1+0xe8c>  // b.none
   19a30:	ldr	w0, [x29, #144]
   19a34:	cbz	w0, 19a64 <omp_in_final@@OMP_3.1+0xe84>
   19a38:	ldr	w0, [x29, #144]
   19a3c:	ldr	w1, [x29, #228]
   19a40:	add	w0, w0, w1
   19a44:	ldr	w1, [x25, #64]
   19a48:	sub	w1, w0, w1
   19a4c:	add	x2, x25, #0x80
   19a50:	ldaxr	w3, [x2]
   19a54:	add	w3, w3, w1
   19a58:	stlxr	w4, w3, [x2]
   19a5c:	cbnz	w4, 19a50 <omp_in_final@@OMP_3.1+0xe70>
   19a60:	str	w0, [x25, #64]
   19a64:	mov	w20, #0x1                   	// #1
   19a68:	b	19960 <omp_in_final@@OMP_3.1+0xd80>
   19a6c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19a70:	ldr	x1, [x1, #3992]
   19a74:	mrs	x0, tpidr_el0
   19a78:	add	x0, x0, x1
   19a7c:	ldr	w0, [x0, #56]
   19a80:	ldr	w1, [x29, #228]
   19a84:	cmp	w0, w1
   19a88:	b.cs	19a94 <omp_in_final@@OMP_3.1+0xeb4>  // b.hs, b.nlast
   19a8c:	udiv	w0, w1, w0
   19a90:	str	w0, [x29, #128]
   19a94:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19a98:	ldr	x1, [x1, #3992]
   19a9c:	mrs	x0, tpidr_el0
   19aa0:	add	x0, x0, x1
   19aa4:	ldr	w0, [x0, #92]
   19aa8:	sub	w0, w0, #0x1
   19aac:	str	w0, [x29, #160]
   19ab0:	mov	w0, #0x1                   	// #1
   19ab4:	str	w0, [x29, #148]
   19ab8:	b	19a30 <omp_in_final@@OMP_3.1+0xe50>
   19abc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19ac0:	ldr	x1, [x1, #3992]
   19ac4:	mrs	x0, tpidr_el0
   19ac8:	add	x0, x0, x1
   19acc:	ldr	w0, [x0, #52]
   19ad0:	str	w0, [x29, #160]
   19ad4:	ldr	w0, [x29, #148]
   19ad8:	cbz	w0, 19a30 <omp_in_final@@OMP_3.1+0xe50>
   19adc:	ldr	w0, [x22, #48]
   19ae0:	ldr	w1, [x29, #228]
   19ae4:	udiv	w0, w1, w0
   19ae8:	str	w0, [x29, #128]
   19aec:	mov	w0, #0x1                   	// #1
   19af0:	str	w0, [x29, #148]
   19af4:	b	19a30 <omp_in_final@@OMP_3.1+0xe50>
   19af8:	ldr	w0, [x29, #176]
   19afc:	str	w0, [x29, #144]
   19b00:	str	wzr, [x29, #120]
   19b04:	str	xzr, [x29, #152]
   19b08:	mov	w20, #0x1                   	// #1
   19b0c:	b	19960 <omp_in_final@@OMP_3.1+0xd80>
   19b10:	add	x0, x29, #0x100
   19b14:	bl	86a0 <pthread_attr_init@plt>
   19b18:	add	x1, x29, #0xf8
   19b1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19b20:	add	x0, x0, #0x660
   19b24:	bl	8a00 <pthread_attr_getstacksize@plt>
   19b28:	cbz	w0, 19b5c <omp_in_final@@OMP_3.1+0xf7c>
   19b2c:	ldr	w2, [x29, #228]
   19b30:	sub	w1, w2, w20
   19b34:	lsl	x0, x1, #3
   19b38:	sub	x0, x0, x1
   19b3c:	mov	x1, sp
   19b40:	sub	x0, x1, x0, lsl #4
   19b44:	mov	sp, x0
   19b48:	mov	x19, sp
   19b4c:	cmp	w2, w20
   19b50:	b.ls	19e78 <omp_in_final@@OMP_3.1+0x1298>  // b.plast
   19b54:	add	x26, x29, #0x100
   19b58:	b	1a010 <omp_in_final@@OMP_3.1+0x1430>
   19b5c:	ldr	x1, [x29, #248]
   19b60:	add	x0, x29, #0x100
   19b64:	bl	87d0 <pthread_attr_setstacksize@plt>
   19b68:	b	19b2c <omp_in_final@@OMP_3.1+0xf4c>
   19b6c:	ldr	w0, [x29, #128]
   19b70:	ldr	w1, [x29, #148]
   19b74:	cmp	w0, w1
   19b78:	b.eq	19b8c <omp_in_final@@OMP_3.1+0xfac>  // b.none
   19b7c:	ldr	w0, [x29, #148]
   19b80:	add	w0, w0, #0x1
   19b84:	str	w0, [x29, #148]
   19b88:	b	19d74 <omp_in_final@@OMP_3.1+0x1194>
   19b8c:	ldr	w0, [x29, #160]
   19b90:	add	w2, w0, #0x1
   19b94:	ldr	w1, [x22, #44]
   19b98:	ldr	w0, [x22, #48]
   19b9c:	add	w0, w1, w0
   19ba0:	cmp	w0, w2
   19ba4:	csel	w0, w2, w1, ne  // ne = any
   19ba8:	str	w0, [x29, #160]
   19bac:	mov	w0, #0x1                   	// #1
   19bb0:	str	w0, [x29, #148]
   19bb4:	ldr	w0, [x29, #116]
   19bb8:	cmp	w0, w20
   19bbc:	b.ne	19d74 <omp_in_final@@OMP_3.1+0x1194>  // b.any
   19bc0:	mov	w0, #0x1                   	// #1
   19bc4:	str	w0, [x29, #128]
   19bc8:	b	19d74 <omp_in_final@@OMP_3.1+0x1194>
   19bcc:	ldr	w0, [x29, #148]
   19bd0:	cbnz	w0, 19c18 <omp_in_final@@OMP_3.1+0x1038>
   19bd4:	ldr	w2, [x29, #128]
   19bd8:	ldr	w3, [x29, #160]
   19bdc:	add	w1, w2, w3
   19be0:	ldr	w4, [x29, #124]
   19be4:	cmp	w4, w3
   19be8:	cinc	w3, w1, hi  // hi = pmore
   19bec:	ldr	w1, [x22, #44]
   19bf0:	ldr	w0, [x22, #48]
   19bf4:	add	w0, w1, w0
   19bf8:	cmp	w0, w3
   19bfc:	csel	w0, w3, w1, ne  // ne = any
   19c00:	str	w0, [x29, #160]
   19c04:	str	w0, [x19, #52]
   19c08:	cmp	w4, w0
   19c0c:	cinc	w0, w2, hi  // hi = pmore
   19c10:	str	w0, [x19, #56]
   19c14:	b	19d74 <omp_in_final@@OMP_3.1+0x1194>
   19c18:	ldr	w0, [x29, #128]
   19c1c:	ldr	w1, [x29, #148]
   19c20:	cmp	w0, w1
   19c24:	b.eq	19c48 <omp_in_final@@OMP_3.1+0x1068>  // b.none
   19c28:	ldr	w0, [x29, #148]
   19c2c:	add	w0, w0, #0x1
   19c30:	str	w0, [x29, #148]
   19c34:	ldr	w0, [x29, #160]
   19c38:	str	w0, [x19, #52]
   19c3c:	mov	w0, #0x1                   	// #1
   19c40:	str	w0, [x19, #56]
   19c44:	b	19d74 <omp_in_final@@OMP_3.1+0x1194>
   19c48:	ldr	w0, [x29, #160]
   19c4c:	add	w2, w0, #0x1
   19c50:	ldr	w1, [x22, #44]
   19c54:	ldr	w0, [x22, #48]
   19c58:	add	w0, w1, w0
   19c5c:	cmp	w0, w2
   19c60:	csel	w0, w2, w1, ne  // ne = any
   19c64:	str	w0, [x29, #160]
   19c68:	mov	w0, #0x1                   	// #1
   19c6c:	str	w0, [x29, #148]
   19c70:	ldr	w0, [x29, #116]
   19c74:	cmp	w0, w20
   19c78:	b.ne	19c34 <omp_in_final@@OMP_3.1+0x1054>  // b.any
   19c7c:	mov	w0, #0x1                   	// #1
   19c80:	str	w0, [x29, #128]
   19c84:	b	19c34 <omp_in_final@@OMP_3.1+0x1054>
   19c88:	ldr	w1, [x29, #160]
   19c8c:	ldr	x0, [x29, #184]
   19c90:	bl	1cd3c <omp_pause_resource_all_@@OMP_5.0+0x18>
   19c94:	ldr	x0, [x29, #200]
   19c98:	str	x0, [x19]
   19c9c:	ldr	x0, [x29, #192]
   19ca0:	str	x0, [x19, #8]
   19ca4:	str	x22, [x19, #16]
   19ca8:	str	x26, [x19, #24]
   19cac:	str	xzr, [x19, #32]
   19cb0:	str	w20, [x19, #40]
   19cb4:	ldr	w0, [x22, #36]
   19cb8:	add	w0, w0, #0x1
   19cbc:	str	w0, [x19, #44]
   19cc0:	ldr	w0, [x23, #48]
   19cc4:	str	w0, [x19, #48]
   19cc8:	str	xzr, [x19, #64]
   19ccc:	str	xzr, [x19, #72]
   19cd0:	str	x21, [x19, #80]
   19cd4:	ldr	x2, [x29, #232]
   19cd8:	ldr	x1, [x29, #208]
   19cdc:	mov	x0, x21
   19ce0:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   19ce4:	ldr	x0, [x29, #216]
   19ce8:	str	x0, [x21, #144]
   19cec:	ldrb	w0, [x29, #224]
   19cf0:	strb	w0, [x21, #170]
   19cf4:	ldr	x0, [x19, #80]
   19cf8:	str	x27, [x0, #40]
   19cfc:	str	x25, [x19, #88]
   19d00:	ldrb	w0, [x29, #180]
   19d04:	strb	w0, [x19, #100]
   19d08:	mov	x3, x19
   19d0c:	ldr	x2, [x29, #168]
   19d10:	ldr	x1, [x29, #184]
   19d14:	add	x0, x19, #0x68
   19d18:	bl	8840 <pthread_create@plt>
   19d1c:	add	x19, x19, #0x70
   19d20:	cbnz	w0, 19d98 <omp_in_final@@OMP_3.1+0x11b8>
   19d24:	add	w20, w20, #0x1
   19d28:	add	x24, x24, #0x8
   19d2c:	add	x21, x21, #0xd0
   19d30:	ldr	w0, [x29, #228]
   19d34:	cmp	w0, w20
   19d38:	b.eq	19dac <omp_in_final@@OMP_3.1+0x11cc>  // b.none
   19d3c:	ldr	w0, [x23, #52]
   19d40:	str	w0, [x19, #52]
   19d44:	ldr	w0, [x23, #56]
   19d48:	str	w0, [x19, #56]
   19d4c:	str	wzr, [x19, #96]
   19d50:	ldr	x0, [x28, #1568]
   19d54:	cbz	x0, 19c94 <omp_in_final@@OMP_3.1+0x10b4>
   19d58:	ldr	w0, [x29, #164]
   19d5c:	cmp	w0, #0x3
   19d60:	b.eq	19b6c <omp_in_final@@OMP_3.1+0xf8c>  // b.none
   19d64:	cmp	w0, #0x4
   19d68:	b.eq	19bcc <omp_in_final@@OMP_3.1+0xfec>  // b.none
   19d6c:	cmp	w0, #0x1
   19d70:	b.eq	19b6c <omp_in_final@@OMP_3.1+0xf8c>  // b.none
   19d74:	ldr	w0, [x29, #160]
   19d78:	add	w0, w0, #0x1
   19d7c:	str	w0, [x19, #96]
   19d80:	ldr	x0, [x29, #152]
   19d84:	cbz	x0, 19c88 <omp_in_final@@OMP_3.1+0x10a8>
   19d88:	ldr	x0, [x25]
   19d8c:	ldr	x0, [x0, x24]
   19d90:	cbnz	x0, 19d24 <omp_in_final@@OMP_3.1+0x1144>
   19d94:	b	19c88 <omp_in_final@@OMP_3.1+0x10a8>
   19d98:	bl	8830 <strerror@plt>
   19d9c:	mov	x1, x0
   19da0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   19da4:	add	x0, x0, #0x218
   19da8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   19dac:	ldr	x26, [x29, #184]
   19db0:	add	x0, x29, #0x100
   19db4:	cmp	x26, x0
   19db8:	b.eq	19e78 <omp_in_final@@OMP_3.1+0x1298>  // b.none
   19dbc:	ldr	w0, [x29, #176]
   19dc0:	cbz	w0, 19e88 <omp_in_final@@OMP_3.1+0x12a8>
   19dc4:	add	x0, x22, #0x80
   19dc8:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   19dcc:	ldr	w0, [x29, #144]
   19dd0:	cmp	w0, #0x0
   19dd4:	ldr	w0, [x29, #228]
   19dd8:	ldr	w1, [x29, #132]
   19ddc:	ccmp	w0, w1, #0x0, eq  // eq = none
   19de0:	b.cs	19e44 <omp_in_final@@OMP_3.1+0x1264>  // b.hs, b.nlast
   19de4:	ldr	w2, [x29, #228]
   19de8:	mov	w0, w2
   19dec:	ldr	w1, [x29, #132]
   19df0:	sub	x0, x0, w1, uxtw
   19df4:	ldr	w3, [x29, #144]
   19df8:	neg	w1, w3
   19dfc:	cmp	w3, #0x0
   19e00:	csel	x1, x1, x0, ne  // ne = any
   19e04:	ldr	w0, [x25, #64]
   19e08:	mov	w3, w2
   19e0c:	sub	w0, w2, w0
   19e10:	add	x2, x25, #0x80
   19e14:	ldaxr	w4, [x2]
   19e18:	add	w4, w4, w0
   19e1c:	stlxr	w5, w4, [x2]
   19e20:	cbnz	w5, 19e14 <omp_in_final@@OMP_3.1+0x1234>
   19e24:	str	w3, [x25, #64]
   19e28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19e2c:	add	x0, x0, #0x330
   19e30:	ldxr	x2, [x0]
   19e34:	add	x2, x2, x1
   19e38:	stlxr	w3, x2, [x0]
   19e3c:	cbnz	w3, 19e30 <omp_in_final@@OMP_3.1+0x1250>
   19e40:	dmb	ish
   19e44:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19e48:	ldrb	w0, [x0, #1520]
   19e4c:	cbnz	w0, 19e94 <omp_in_final@@OMP_3.1+0x12b4>
   19e50:	ldr	x0, [x29, #152]
   19e54:	cbnz	x0, 19f80 <omp_in_final@@OMP_3.1+0x13a0>
   19e58:	mov	sp, x29
   19e5c:	ldp	x19, x20, [sp, #16]
   19e60:	ldp	x21, x22, [sp, #32]
   19e64:	ldp	x23, x24, [sp, #48]
   19e68:	ldp	x25, x26, [sp, #64]
   19e6c:	ldp	x27, x28, [sp, #80]
   19e70:	ldp	x29, x30, [sp], #320
   19e74:	ret
   19e78:	add	x0, x29, #0x100
   19e7c:	bl	8780 <pthread_attr_destroy@plt>
   19e80:	b	19dbc <omp_in_final@@OMP_3.1+0x11dc>
   19e84:	str	xzr, [x29, #152]
   19e88:	add	x0, x25, #0x40
   19e8c:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   19e90:	b	19dcc <omp_in_final@@OMP_3.1+0x11ec>
   19e94:	ldr	w0, [x29, #180]
   19e98:	cmp	w0, #0x0
   19e9c:	ldr	w0, [x29, #120]
   19ea0:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   19ea4:	ldr	w0, [x29, #228]
   19ea8:	ldr	w1, [x29, #132]
   19eac:	ccmp	w0, w1, #0x0, eq  // eq = none
   19eb0:	b.eq	19e50 <omp_in_final@@OMP_3.1+0x1270>  // b.none
   19eb4:	bl	8a90 <pthread_self@plt>
   19eb8:	mov	x20, x0
   19ebc:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19ec0:	ldr	x2, [x2, #3992]
   19ec4:	mrs	x1, tpidr_el0
   19ec8:	add	x1, x1, x2
   19ecc:	ldr	w2, [x1, #92]
   19ed0:	add	x1, x1, #0x10
   19ed4:	bl	2853c <omp_display_affinity@@OMP_5.0+0x98>
   19ed8:	ldr	w0, [x29, #176]
   19edc:	cbz	w0, 19f5c <omp_in_final@@OMP_3.1+0x137c>
   19ee0:	ldr	w0, [x29, #228]
   19ee4:	sub	w0, w0, #0x1
   19ee8:	mov	x1, #0x70                  	// #112
   19eec:	mov	x2, #0x10                  	// #16
   19ef0:	msub	x0, x0, x1, x2
   19ef4:	add	x19, x19, x0
   19ef8:	mov	w20, #0x1                   	// #1
   19efc:	ldr	w0, [x29, #228]
   19f00:	cmp	w20, w0
   19f04:	b.cs	19e50 <omp_in_final@@OMP_3.1+0x1270>  // b.hs, b.nlast
   19f08:	ldr	w2, [x19, #80]
   19f0c:	mov	x1, x19
   19f10:	ldr	x0, [x19, #88]
   19f14:	bl	2853c <omp_display_affinity@@OMP_5.0+0x98>
   19f18:	add	w20, w20, #0x1
   19f1c:	add	x19, x19, #0x70
   19f20:	b	19efc <omp_in_final@@OMP_3.1+0x131c>
   19f24:	ldr	x0, [x25]
   19f28:	ldr	x1, [x0, x23]
   19f2c:	add	x0, x1, x20
   19f30:	cmp	x19, x1
   19f34:	ldr	w2, [x1, #92]
   19f38:	add	x1, x1, #0x10
   19f3c:	csel	x0, x0, x24, ne  // ne = any
   19f40:	bl	2853c <omp_display_affinity@@OMP_5.0+0x98>
   19f44:	add	w21, w21, #0x1
   19f48:	add	x23, x23, #0x8
   19f4c:	ldr	w0, [x29, #228]
   19f50:	cmp	w21, w0
   19f54:	b.cs	19e50 <omp_in_final@@OMP_3.1+0x1270>  // b.hs, b.nlast
   19f58:	b	19f24 <omp_in_final@@OMP_3.1+0x1344>
   19f5c:	mov	x23, #0x8                   	// #8
   19f60:	mov	w21, #0x1                   	// #1
   19f64:	mrs	x19, tpidr_el0
   19f68:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   19f6c:	ldr	x0, [x0, #3992]
   19f70:	add	x19, x19, x0
   19f74:	mov	x24, x20
   19f78:	sub	x20, x20, x19
   19f7c:	b	19f4c <omp_in_final@@OMP_3.1+0x136c>
   19f80:	ldr	w0, [x22, #48]
   19f84:	cmp	w0, #0x40
   19f88:	b.ls	19e58 <omp_in_final@@OMP_3.1+0x1278>  // b.plast
   19f8c:	ldr	x0, [x29, #152]
   19f90:	bl	8900 <free@plt>
   19f94:	b	19e58 <omp_in_final@@OMP_3.1+0x1278>
   19f98:	ldr	w0, [x29, #228]
   19f9c:	str	wzr, [x29, #120]
   19fa0:	str	xzr, [x29, #152]
   19fa4:	str	wzr, [x29, #144]
   19fa8:	mov	w20, #0x1                   	// #1
   19fac:	sub	x0, x0, #0x1
   19fb0:	str	wzr, [x29, #132]
   19fb4:	b	19988 <omp_in_final@@OMP_3.1+0xda8>
   19fb8:	ldr	w0, [x29, #228]
   19fbc:	cbnz	w0, 19f98 <omp_in_final@@OMP_3.1+0x13b8>
   19fc0:	str	w0, [x29, #144]
   19fc4:	str	w0, [x29, #132]
   19fc8:	str	wzr, [x29, #120]
   19fcc:	str	xzr, [x29, #152]
   19fd0:	mov	w20, #0x1                   	// #1
   19fd4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   19fd8:	ldr	x0, [x0, #1568]
   19fdc:	cbnz	x0, 19b10 <omp_in_final@@OMP_3.1+0xf30>
   19fe0:	ldr	w2, [x29, #228]
   19fe4:	sub	w1, w2, w20
   19fe8:	lsl	x0, x1, #3
   19fec:	sub	x0, x0, x1
   19ff0:	mov	x1, sp
   19ff4:	sub	x0, x1, x0, lsl #4
   19ff8:	mov	sp, x0
   19ffc:	mov	x19, sp
   1a000:	adrp	x26, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a004:	add	x26, x26, #0x660
   1a008:	cmp	w2, w20
   1a00c:	b.ls	19dbc <omp_in_final@@OMP_3.1+0x11dc>  // b.plast
   1a010:	mov	w21, w20
   1a014:	ubfiz	x24, x20, #3, #32
   1a018:	mov	x0, x21
   1a01c:	add	x21, x21, w20, uxtw #1
   1a020:	add	x21, x0, x21, lsl #2
   1a024:	add	x21, x22, x21, lsl #4
   1a028:	add	x21, x21, #0x540
   1a02c:	adrp	x23, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a030:	ldr	x23, [x23, #3992]
   1a034:	mrs	x0, tpidr_el0
   1a038:	add	x23, x0, x23
   1a03c:	adrp	x28, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a040:	adrp	x27, 18000 <GOMP_taskloop_ull@@GOMP_4.5+0x758>
   1a044:	add	x27, x27, #0xc6c
   1a048:	ldr	w0, [x29, #228]
   1a04c:	ldr	w1, [x29, #124]
   1a050:	sub	w0, w0, w1
   1a054:	str	w0, [x29, #116]
   1a058:	str	x26, [x29, #184]
   1a05c:	ldr	x26, [x29, #168]
   1a060:	str	x27, [x29, #168]
   1a064:	ldr	x27, [x29, #136]
   1a068:	b	19d3c <omp_in_final@@OMP_3.1+0x115c>
   1a06c:	stp	x29, x30, [sp, #-64]!
   1a070:	mov	x29, sp
   1a074:	stp	x19, x20, [sp, #16]
   1a078:	stp	x21, x22, [sp, #32]
   1a07c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a080:	ldr	x0, [x0, #3992]
   1a084:	mrs	x1, tpidr_el0
   1a088:	add	x0, x1, x0
   1a08c:	ldr	x19, [x0, #16]
   1a090:	add	x21, x19, #0x80
   1a094:	mov	x0, x21
   1a098:	bl	1bc04 <omp_get_num_procs@@OMP_1.0+0x790>
   1a09c:	ldr	w0, [x19, #1336]
   1a0a0:	cbnz	w0, 1a158 <omp_in_final@@OMP_3.1+0x1578>
   1a0a4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a0a8:	ldr	x0, [x0, #3992]
   1a0ac:	mrs	x1, tpidr_el0
   1a0b0:	add	x0, x1, x0
   1a0b4:	ldr	x0, [x0, #24]
   1a0b8:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a0bc:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   1a0c0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a0c4:	ldr	x0, [x0, #3992]
   1a0c8:	mrs	x1, tpidr_el0
   1a0cc:	add	x0, x1, x0
   1a0d0:	ldp	x4, x5, [x19, #8]
   1a0d4:	stp	x4, x5, [x0, #16]
   1a0d8:	ldp	x4, x5, [x19, #24]
   1a0dc:	stp	x4, x5, [x0, #32]
   1a0e0:	ldp	x4, x5, [x19, #40]
   1a0e4:	stp	x4, x5, [x0, #48]
   1a0e8:	ldp	x2, x3, [x19, #56]
   1a0ec:	stp	x2, x3, [x0, #64]
   1a0f0:	ldr	w0, [x0, #44]
   1a0f4:	cbnz	w0, 1a1e0 <omp_in_final@@OMP_3.1+0x1600>
   1a0f8:	ldr	x20, [x19, #312]
   1a0fc:	cbnz	x20, 1a214 <omp_in_final@@OMP_3.1+0x1634>
   1a100:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a104:	ldr	x0, [x0, #3992]
   1a108:	mrs	x1, tpidr_el0
   1a10c:	add	x0, x1, x0
   1a110:	ldr	x0, [x0, #16]
   1a114:	cbnz	x0, 1a228 <omp_in_final@@OMP_3.1+0x1648>
   1a118:	ldr	w0, [x19]
   1a11c:	cmp	w0, #0x1
   1a120:	b.eq	1a228 <omp_in_final@@OMP_3.1+0x1648>  // b.none
   1a124:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a128:	ldr	x0, [x0, #3992]
   1a12c:	mrs	x1, tpidr_el0
   1a130:	add	x0, x1, x0
   1a134:	ldr	x20, [x0, #96]
   1a138:	ldr	x0, [x20, #16]
   1a13c:	cbz	x0, 1a144 <omp_in_final@@OMP_3.1+0x1564>
   1a140:	bl	8900 <free@plt>
   1a144:	str	x19, [x20, #16]
   1a148:	ldp	x19, x20, [sp, #16]
   1a14c:	ldp	x21, x22, [sp, #32]
   1a150:	ldp	x29, x30, [sp], #64
   1a154:	ret
   1a158:	stp	x23, x24, [sp, #48]
   1a15c:	ldr	x23, [x19, #88]
   1a160:	mov	x24, #0x1                   	// #1
   1a164:	b	1a184 <omp_in_final@@OMP_3.1+0x15a4>
   1a168:	mov	x0, x22
   1a16c:	bl	1bf90 <omp_get_num_procs@@OMP_1.0+0xb1c>
   1a170:	mov	x20, x0
   1a174:	cbz	x0, 1a1b0 <omp_in_final@@OMP_3.1+0x15d0>
   1a178:	mov	x0, x23
   1a17c:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a180:	mov	x23, x20
   1a184:	add	x22, x23, #0x50
   1a188:	ldar	x0, [x22]
   1a18c:	mov	x20, x0
   1a190:	cmp	x0, #0x2
   1a194:	b.hi	1a178 <omp_in_final@@OMP_3.1+0x1598>  // b.pmore
   1a198:	ldaxr	x0, [x22]
   1a19c:	cbnz	x0, 1a1a8 <omp_in_final@@OMP_3.1+0x15c8>
   1a1a0:	stxr	w1, x24, [x22]
   1a1a4:	cbnz	w1, 1a198 <omp_in_final@@OMP_3.1+0x15b8>
   1a1a8:	cmp	x0, #0x0
   1a1ac:	b.ne	1a168 <omp_in_final@@OMP_3.1+0x1588>  // b.any
   1a1b0:	ldxr	x0, [x22]
   1a1b4:	stlxr	w1, x23, [x22]
   1a1b8:	cbnz	w1, 1a1b0 <omp_in_final@@OMP_3.1+0x15d0>
   1a1bc:	cmp	x0, #0x1
   1a1c0:	b.ne	1a1d4 <omp_in_final@@OMP_3.1+0x15f4>  // b.any
   1a1c4:	mov	x0, x23
   1a1c8:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a1cc:	ldp	x23, x24, [sp, #48]
   1a1d0:	b	1a0bc <omp_in_final@@OMP_3.1+0x14dc>
   1a1d4:	mov	x0, x22
   1a1d8:	bl	1c0a4 <omp_get_num_procs@@OMP_1.0+0xc30>
   1a1dc:	b	1a1c4 <omp_in_final@@OMP_3.1+0x15e4>
   1a1e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a1e4:	add	x0, x0, #0x330
   1a1e8:	ldr	w2, [x19]
   1a1ec:	mov	x1, #0x1                   	// #1
   1a1f0:	sub	x1, x1, x2
   1a1f4:	ldxr	x2, [x0]
   1a1f8:	add	x2, x2, x1
   1a1fc:	stlxr	w3, x2, [x0]
   1a200:	cbnz	w3, 1a1f4 <omp_in_final@@OMP_3.1+0x1614>
   1a204:	dmb	ish
   1a208:	mov	x0, x21
   1a20c:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   1a210:	b	1a0f8 <omp_in_final@@OMP_3.1+0x1518>
   1a214:	mov	x0, x20
   1a218:	ldr	x20, [x20, #56]
   1a21c:	bl	8900 <free@plt>
   1a220:	cbnz	x20, 1a214 <omp_in_final@@OMP_3.1+0x1634>
   1a224:	b	1a100 <omp_in_final@@OMP_3.1+0x1520>
   1a228:	mov	x0, x19
   1a22c:	bl	8900 <free@plt>
   1a230:	b	1a148 <omp_in_final@@OMP_3.1+0x1568>
   1a234:	stp	x29, x30, [sp, #-32]!
   1a238:	mov	x29, sp
   1a23c:	stp	x19, x20, [sp, #16]
   1a240:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a244:	ldr	x0, [x0, #3992]
   1a248:	mrs	x1, tpidr_el0
   1a24c:	add	x0, x1, x0
   1a250:	ldr	x19, [x0, #96]
   1a254:	cbz	x19, 1a308 <omp_in_final@@OMP_3.1+0x1728>
   1a258:	ldr	w0, [x19, #12]
   1a25c:	cbz	w0, 1a2d8 <omp_in_final@@OMP_3.1+0x16f8>
   1a260:	cmp	w0, #0x1
   1a264:	b.ls	1a29c <omp_in_final@@OMP_3.1+0x16bc>  // b.plast
   1a268:	mov	x1, #0x8                   	// #8
   1a26c:	mov	w0, #0x1                   	// #1
   1a270:	adrp	x3, 18000 <GOMP_taskloop_ull@@GOMP_4.5+0x758>
   1a274:	add	x3, x3, #0xc04
   1a278:	ldr	x2, [x19]
   1a27c:	ldr	x2, [x2, x1]
   1a280:	str	x3, [x2]
   1a284:	str	x19, [x2, #8]
   1a288:	add	w0, w0, #0x1
   1a28c:	add	x1, x1, #0x8
   1a290:	ldr	w2, [x19, #12]
   1a294:	cmp	w2, w0
   1a298:	b.hi	1a278 <omp_in_final@@OMP_3.1+0x1698>  // b.pmore
   1a29c:	add	x20, x19, #0x40
   1a2a0:	mov	x0, x20
   1a2a4:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   1a2a8:	mov	x0, x20
   1a2ac:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   1a2b0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a2b4:	add	x0, x0, #0x330
   1a2b8:	ldr	w2, [x19, #12]
   1a2bc:	mov	x1, #0x1                   	// #1
   1a2c0:	sub	x1, x1, x2
   1a2c4:	ldxr	x2, [x0]
   1a2c8:	add	x2, x2, x1
   1a2cc:	stlxr	w3, x2, [x0]
   1a2d0:	cbnz	w3, 1a2c4 <omp_in_final@@OMP_3.1+0x16e4>
   1a2d4:	dmb	ish
   1a2d8:	ldr	x0, [x19, #16]
   1a2dc:	cbz	x0, 1a2e4 <omp_in_final@@OMP_3.1+0x1704>
   1a2e0:	bl	8900 <free@plt>
   1a2e4:	ldr	x0, [x19]
   1a2e8:	bl	8900 <free@plt>
   1a2ec:	mov	x0, x19
   1a2f0:	bl	8900 <free@plt>
   1a2f4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a2f8:	ldr	x0, [x0, #3992]
   1a2fc:	mrs	x1, tpidr_el0
   1a300:	add	x0, x1, x0
   1a304:	str	xzr, [x0, #96]
   1a308:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a30c:	ldr	x0, [x0, #3992]
   1a310:	mrs	x1, tpidr_el0
   1a314:	add	x0, x1, x0
   1a318:	ldr	w0, [x0, #44]
   1a31c:	cbnz	w0, 1a334 <omp_in_final@@OMP_3.1+0x1754>
   1a320:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a324:	ldr	x0, [x0, #3992]
   1a328:	add	x0, x1, x0
   1a32c:	ldr	x0, [x0, #16]
   1a330:	cbnz	x0, 1a364 <omp_in_final@@OMP_3.1+0x1784>
   1a334:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a338:	ldr	x0, [x0, #3992]
   1a33c:	mrs	x1, tpidr_el0
   1a340:	add	x0, x1, x0
   1a344:	ldr	x19, [x0, #80]
   1a348:	cbz	x19, 1a358 <omp_in_final@@OMP_3.1+0x1778>
   1a34c:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   1a350:	mov	x0, x19
   1a354:	bl	8900 <free@plt>
   1a358:	ldp	x19, x20, [sp, #16]
   1a35c:	ldp	x29, x30, [sp], #32
   1a360:	ret
   1a364:	bl	1a06c <omp_in_final@@OMP_3.1+0x148c>
   1a368:	b	1a334 <omp_in_final@@OMP_3.1+0x1754>
   1a36c:	stp	x29, x30, [sp, #-16]!
   1a370:	mov	x29, sp
   1a374:	adrp	x1, 1a000 <omp_in_final@@OMP_3.1+0x1420>
   1a378:	add	x1, x1, #0x234
   1a37c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a380:	add	x0, x0, #0x6a0
   1a384:	bl	8640 <pthread_key_create@plt>
   1a388:	cbnz	w0, 1a394 <omp_in_final@@OMP_3.1+0x17b4>
   1a38c:	ldp	x29, x30, [sp], #16
   1a390:	ret
   1a394:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1a398:	add	x0, x0, #0x238
   1a39c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1a3a0:	stp	x29, x30, [sp, #-16]!
   1a3a4:	mov	x29, sp
   1a3a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a3ac:	ldr	w0, [x0, #1696]
   1a3b0:	bl	8930 <pthread_key_delete@plt>
   1a3b4:	ldp	x29, x30, [sp], #16
   1a3b8:	ret
   1a3bc:	stp	x29, x30, [sp, #-64]!
   1a3c0:	mov	x29, sp
   1a3c4:	stp	x19, x20, [sp, #16]
   1a3c8:	stp	x21, x22, [sp, #32]
   1a3cc:	stp	x23, x24, [sp, #48]
   1a3d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a3d4:	ldr	x0, [x0, #3992]
   1a3d8:	mrs	x1, tpidr_el0
   1a3dc:	add	x0, x1, x0
   1a3e0:	ldr	x20, [x0, #96]
   1a3e4:	ldr	w0, [x0, #44]
   1a3e8:	cbnz	w0, 1a528 <omp_in_final@@OMP_3.1+0x1948>
   1a3ec:	cbz	x20, 1a510 <omp_in_final@@OMP_3.1+0x1930>
   1a3f0:	ldr	w0, [x20, #12]
   1a3f4:	cbz	w0, 1a4dc <omp_in_final@@OMP_3.1+0x18fc>
   1a3f8:	ubfiz	x1, x0, #3, #32
   1a3fc:	add	x1, x1, #0xf
   1a400:	and	x1, x1, #0xffffffff0
   1a404:	sub	sp, sp, x1
   1a408:	mov	x23, sp
   1a40c:	cmp	w0, #0x1
   1a410:	b.ls	1a474 <omp_in_final@@OMP_3.1+0x1894>  // b.plast
   1a414:	mov	x21, #0x1                   	// #1
   1a418:	adrp	x24, 18000 <GOMP_taskloop_ull@@GOMP_4.5+0x758>
   1a41c:	add	x24, x24, #0xc3c
   1a420:	adrp	x22, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a424:	ldr	x22, [x22, #3992]
   1a428:	mrs	x0, tpidr_el0
   1a42c:	add	x22, x0, x22
   1a430:	b	1a44c <omp_in_final@@OMP_3.1+0x186c>
   1a434:	bl	8a90 <pthread_self@plt>
   1a438:	str	x0, [x23, x21, lsl #3]
   1a43c:	add	x21, x21, #0x1
   1a440:	ldr	w0, [x20, #12]
   1a444:	cmp	w0, w21
   1a448:	b.ls	1a474 <omp_in_final@@OMP_3.1+0x1894>  // b.plast
   1a44c:	ldr	x0, [x20]
   1a450:	ldr	x19, [x0, x21, lsl #3]
   1a454:	str	x24, [x19]
   1a458:	str	x20, [x19, #8]
   1a45c:	cmp	x22, x19
   1a460:	b.eq	1a434 <omp_in_final@@OMP_3.1+0x1854>  // b.none
   1a464:	bl	8a90 <pthread_self@plt>
   1a468:	sub	x19, x19, x22
   1a46c:	add	x0, x19, x0
   1a470:	b	1a438 <omp_in_final@@OMP_3.1+0x1858>
   1a474:	add	x19, x20, #0x40
   1a478:	mov	x0, x19
   1a47c:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   1a480:	mov	x0, x19
   1a484:	bl	1b8d0 <omp_get_num_procs@@OMP_1.0+0x45c>
   1a488:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a48c:	add	x0, x0, #0x330
   1a490:	ldr	w2, [x20, #12]
   1a494:	mov	x1, #0x1                   	// #1
   1a498:	sub	x1, x1, x2
   1a49c:	ldxr	x2, [x0]
   1a4a0:	add	x2, x2, x1
   1a4a4:	stlxr	w3, x2, [x0]
   1a4a8:	cbnz	w3, 1a49c <omp_in_final@@OMP_3.1+0x18bc>
   1a4ac:	dmb	ish
   1a4b0:	ldr	w0, [x20, #12]
   1a4b4:	cmp	w0, #0x1
   1a4b8:	b.ls	1a4dc <omp_in_final@@OMP_3.1+0x18fc>  // b.plast
   1a4bc:	mov	x19, #0x1                   	// #1
   1a4c0:	mov	x1, #0x0                   	// #0
   1a4c4:	ldr	x0, [x23, x19, lsl #3]
   1a4c8:	bl	8860 <pthread_join@plt>
   1a4cc:	add	x19, x19, #0x1
   1a4d0:	ldr	w0, [x20, #12]
   1a4d4:	cmp	w0, w19
   1a4d8:	b.hi	1a4c0 <omp_in_final@@OMP_3.1+0x18e0>  // b.pmore
   1a4dc:	ldr	x0, [x20, #16]
   1a4e0:	cbz	x0, 1a4e8 <omp_in_final@@OMP_3.1+0x1908>
   1a4e4:	bl	8900 <free@plt>
   1a4e8:	ldr	x0, [x20]
   1a4ec:	bl	8900 <free@plt>
   1a4f0:	mov	x0, x20
   1a4f4:	bl	8900 <free@plt>
   1a4f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a4fc:	ldr	x0, [x0, #3992]
   1a500:	mrs	x1, tpidr_el0
   1a504:	add	x0, x1, x0
   1a508:	str	xzr, [x0, #96]
   1a50c:	mov	w0, #0x0                   	// #0
   1a510:	mov	sp, x29
   1a514:	ldp	x19, x20, [sp, #16]
   1a518:	ldp	x21, x22, [sp, #32]
   1a51c:	ldp	x23, x24, [sp, #48]
   1a520:	ldp	x29, x30, [sp], #64
   1a524:	ret
   1a528:	mov	w0, #0xffffffff            	// #-1
   1a52c:	b	1a510 <omp_in_final@@OMP_3.1+0x1930>
   1a530:	stp	x29, x30, [sp, #-32]!
   1a534:	mov	x29, sp
   1a538:	str	x19, [sp, #16]
   1a53c:	mov	x0, #0xd0                  	// #208
   1a540:	bl	8c28 <fprintf@plt+0x118>
   1a544:	mov	x19, x0
   1a548:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a54c:	add	x2, x2, #0x2b8
   1a550:	mov	x1, #0x0                   	// #0
   1a554:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   1a558:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a55c:	ldr	x1, [x1, #3992]
   1a560:	mrs	x0, tpidr_el0
   1a564:	add	x1, x0, x1
   1a568:	str	x19, [x1, #80]
   1a56c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1a570:	ldr	w0, [x0, #1696]
   1a574:	bl	89b0 <pthread_setspecific@plt>
   1a578:	add	x0, x19, #0x90
   1a57c:	ldr	x19, [sp, #16]
   1a580:	ldp	x29, x30, [sp], #32
   1a584:	ret
   1a588:	stp	x29, x30, [sp, #-32]!
   1a58c:	mov	x29, sp
   1a590:	stp	x19, x20, [sp, #16]
   1a594:	mov	x19, x0
   1a598:	str	wzr, [x0, #64]
   1a59c:	cbnz	x1, 1a5bc <omp_in_final@@OMP_3.1+0x19dc>
   1a5a0:	add	x0, x0, #0x60
   1a5a4:	str	x0, [x19, #32]
   1a5a8:	str	xzr, [x19, #80]
   1a5ac:	str	wzr, [x19, #68]
   1a5b0:	ldp	x19, x20, [sp, #16]
   1a5b4:	ldp	x29, x30, [sp], #32
   1a5b8:	ret
   1a5bc:	ubfiz	x20, x2, #2, #32
   1a5c0:	cmp	x1, #0x1
   1a5c4:	add	x20, x20, #0x7
   1a5c8:	sub	x0, x1, #0x1
   1a5cc:	and	x20, x20, #0xfffffffffffffff8
   1a5d0:	add	x20, x20, x0
   1a5d4:	ubfiz	x2, x2, #2, #32
   1a5d8:	csel	x20, x2, x20, eq  // eq = none
   1a5dc:	cmp	x20, #0x20
   1a5e0:	b.hi	1a610 <omp_in_final@@OMP_3.1+0x1a30>  // b.pmore
   1a5e4:	add	x0, x19, #0x60
   1a5e8:	str	x0, [x19, #32]
   1a5ec:	mov	x2, x20
   1a5f0:	mov	w1, #0x0                   	// #0
   1a5f4:	ldr	x0, [x19, #32]
   1a5f8:	bl	87c0 <memset@plt>
   1a5fc:	str	wzr, [x19, #40]
   1a600:	mov	w0, #0xffffffff            	// #-1
   1a604:	str	w0, [x19, #44]
   1a608:	str	wzr, [x19, #48]
   1a60c:	b	1a5a8 <omp_in_final@@OMP_3.1+0x19c8>
   1a610:	mov	x0, x20
   1a614:	bl	8c28 <fprintf@plt+0x118>
   1a618:	str	x0, [x19, #32]
   1a61c:	b	1a5ec <omp_in_final@@OMP_3.1+0x1a0c>
   1a620:	mov	x1, x0
   1a624:	ldr	x0, [x0, #32]
   1a628:	add	x1, x1, #0x60
   1a62c:	cmp	x0, x1
   1a630:	b.eq	1a648 <omp_in_final@@OMP_3.1+0x1a68>  // b.none
   1a634:	stp	x29, x30, [sp, #-16]!
   1a638:	mov	x29, sp
   1a63c:	bl	8900 <free@plt>
   1a640:	ldp	x29, x30, [sp], #16
   1a644:	ret
   1a648:	ret
   1a64c:	stp	x29, x30, [sp, #-48]!
   1a650:	mov	x29, sp
   1a654:	stp	x19, x20, [sp, #16]
   1a658:	mov	x19, x0
   1a65c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a660:	ldr	x1, [x1, #4016]
   1a664:	mrs	x2, tpidr_el0
   1a668:	add	x1, x2, x1
   1a66c:	ldr	x20, [x1, #16]
   1a670:	cbz	x20, 1a6fc <omp_in_final@@OMP_3.1+0x1b1c>
   1a674:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a678:	ldr	x2, [x2, #4016]
   1a67c:	mrs	x1, tpidr_el0
   1a680:	add	x2, x1, x2
   1a684:	ldr	x1, [x2, #24]
   1a688:	str	x1, [x2, #32]
   1a68c:	add	x0, x1, #0x50
   1a690:	ldar	x1, [x0]
   1a694:	cmp	x1, #0x2
   1a698:	b.hi	1a73c <omp_in_final@@OMP_3.1+0x1b5c>  // b.pmore
   1a69c:	mov	x1, #0x1                   	// #1
   1a6a0:	ldaxr	x2, [x0]
   1a6a4:	cbnz	x2, 1a6b0 <omp_in_final@@OMP_3.1+0x1ad0>
   1a6a8:	stxr	w3, x1, [x0]
   1a6ac:	cbnz	w3, 1a6a0 <omp_in_final@@OMP_3.1+0x1ac0>
   1a6b0:	cmp	x2, #0x0
   1a6b4:	b.ne	1a730 <omp_in_final@@OMP_3.1+0x1b50>  // b.any
   1a6b8:	str	x21, [sp, #32]
   1a6bc:	ldr	x21, [x20, #96]
   1a6c0:	cbz	x21, 1a760 <omp_in_final@@OMP_3.1+0x1b80>
   1a6c4:	ldr	x0, [x21, #80]
   1a6c8:	str	x0, [x20, #96]
   1a6cc:	ldr	w2, [x20]
   1a6d0:	mov	x1, x19
   1a6d4:	mov	x0, x21
   1a6d8:	bl	1a588 <omp_in_final@@OMP_3.1+0x19a8>
   1a6dc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a6e0:	ldr	x0, [x0, #4016]
   1a6e4:	mrs	x1, tpidr_el0
   1a6e8:	add	x0, x1, x0
   1a6ec:	str	x21, [x0, #24]
   1a6f0:	mov	w0, #0x1                   	// #1
   1a6f4:	ldr	x21, [sp, #32]
   1a6f8:	b	1a754 <omp_in_final@@OMP_3.1+0x1b74>
   1a6fc:	mov	x0, #0x80                  	// #128
   1a700:	bl	8c28 <fprintf@plt+0x118>
   1a704:	mov	x20, x0
   1a708:	mov	w2, #0x1                   	// #1
   1a70c:	mov	x1, x19
   1a710:	bl	1a588 <omp_in_final@@OMP_3.1+0x19a8>
   1a714:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a718:	ldr	x1, [x1, #4016]
   1a71c:	mrs	x2, tpidr_el0
   1a720:	add	x1, x2, x1
   1a724:	str	x20, [x1, #24]
   1a728:	mov	w0, #0x1                   	// #1
   1a72c:	b	1a754 <omp_in_final@@OMP_3.1+0x1b74>
   1a730:	bl	1bf90 <omp_get_num_procs@@OMP_1.0+0xb1c>
   1a734:	mov	x1, x0
   1a738:	cbz	x0, 1a6b8 <omp_in_final@@OMP_3.1+0x1ad8>
   1a73c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a740:	ldr	x0, [x0, #4016]
   1a744:	mrs	x2, tpidr_el0
   1a748:	add	x0, x2, x0
   1a74c:	str	x1, [x0, #24]
   1a750:	mov	w0, #0x0                   	// #0
   1a754:	ldp	x19, x20, [sp, #16]
   1a758:	ldp	x29, x30, [sp], #48
   1a75c:	ret
   1a760:	ldr	x0, [x20, #104]
   1a764:	cbz	x0, 1a780 <omp_in_final@@OMP_3.1+0x1ba0>
   1a768:	ldr	x21, [x0, #80]
   1a76c:	cbz	x21, 1a780 <omp_in_final@@OMP_3.1+0x1ba0>
   1a770:	str	xzr, [x0, #80]
   1a774:	ldr	x0, [x21, #80]
   1a778:	str	x0, [x20, #96]
   1a77c:	b	1a6cc <omp_in_final@@OMP_3.1+0x1aec>
   1a780:	ldr	w1, [x20, #4]
   1a784:	lsl	w1, w1, #1
   1a788:	str	w1, [x20, #4]
   1a78c:	mov	w1, w1
   1a790:	lsl	x1, x1, #7
   1a794:	mov	x0, #0x40                  	// #64
   1a798:	bl	8ccc <fprintf@plt+0x1bc>
   1a79c:	mov	x21, x0
   1a7a0:	ldr	x0, [x20, #312]
   1a7a4:	str	x0, [x21, #56]
   1a7a8:	str	x21, [x20, #312]
   1a7ac:	add	x0, x21, #0x80
   1a7b0:	str	x0, [x20, #96]
   1a7b4:	ldr	w0, [x20, #4]
   1a7b8:	sub	w0, w0, #0x1
   1a7bc:	cmp	w0, #0x1
   1a7c0:	b.ls	1a804 <omp_in_final@@OMP_3.1+0x1c24>  // b.plast
   1a7c4:	mov	w2, #0x1                   	// #1
   1a7c8:	mov	w1, w2
   1a7cc:	add	w2, w2, #0x1
   1a7d0:	ubfiz	x1, x1, #7, #32
   1a7d4:	add	x1, x21, x1
   1a7d8:	ubfiz	x0, x2, #7, #32
   1a7dc:	add	x0, x21, x0
   1a7e0:	str	x0, [x1, #80]
   1a7e4:	ldr	w0, [x20, #4]
   1a7e8:	sub	w0, w0, #0x1
   1a7ec:	cmp	w2, w0
   1a7f0:	b.cc	1a7c8 <omp_in_final@@OMP_3.1+0x1be8>  // b.lo, b.ul, b.last
   1a7f4:	ubfiz	x2, x2, #7, #32
   1a7f8:	add	x2, x21, x2
   1a7fc:	str	xzr, [x2, #80]
   1a800:	b	1a6cc <omp_in_final@@OMP_3.1+0x1aec>
   1a804:	mov	w2, #0x1                   	// #1
   1a808:	b	1a7f4 <omp_in_final@@OMP_3.1+0x1c14>
   1a80c:	stp	x29, x30, [sp, #-48]!
   1a810:	mov	x29, sp
   1a814:	stp	x19, x20, [sp, #16]
   1a818:	stp	x21, x22, [sp, #32]
   1a81c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a820:	ldr	x0, [x0, #4016]
   1a824:	mrs	x1, tpidr_el0
   1a828:	add	x0, x1, x0
   1a82c:	ldr	x21, [x0, #16]
   1a830:	cbz	x21, 1a8f4 <omp_in_final@@OMP_3.1+0x1d14>
   1a834:	add	x22, x21, #0x80
   1a838:	add	x0, x21, #0x84
   1a83c:	ldar	w19, [x0]
   1a840:	and	w19, w19, #0xfffffffc
   1a844:	add	x0, x21, #0xc0
   1a848:	ldaxr	w1, [x0]
   1a84c:	sub	w1, w1, #0x1
   1a850:	stlxr	w2, w1, [x0]
   1a854:	cbnz	w2, 1a848 <omp_in_final@@OMP_3.1+0x1c68>
   1a858:	orr	w0, w19, #0x1
   1a85c:	cmp	w1, #0x0
   1a860:	csel	w19, w0, w19, eq  // eq = none
   1a864:	tbz	w19, #0, 1a8c4 <omp_in_final@@OMP_3.1+0x1ce4>
   1a868:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a86c:	ldr	x0, [x0, #4016]
   1a870:	mrs	x1, tpidr_el0
   1a874:	add	x0, x1, x0
   1a878:	ldr	x20, [x0, #32]
   1a87c:	cbz	x20, 1a8c4 <omp_in_final@@OMP_3.1+0x1ce4>
   1a880:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a884:	ldr	x0, [x0, #4016]
   1a888:	add	x0, x1, x0
   1a88c:	ldr	x0, [x0, #24]
   1a890:	str	x0, [x21, #88]
   1a894:	mov	x0, x20
   1a898:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a89c:	add	x0, x21, #0x68
   1a8a0:	ldr	x1, [x21, #104]
   1a8a4:	str	x1, [x20, #80]
   1a8a8:	ldxr	x2, [x0]
   1a8ac:	cmp	x2, x1
   1a8b0:	b.ne	1a8bc <omp_in_final@@OMP_3.1+0x1cdc>  // b.any
   1a8b4:	stlxr	w3, x20, [x0]
   1a8b8:	cbnz	w3, 1a8a8 <omp_in_final@@OMP_3.1+0x1cc8>
   1a8bc:	dmb	ish
   1a8c0:	b.ne	1a8a0 <omp_in_final@@OMP_3.1+0x1cc0>  // b.any
   1a8c4:	mov	w1, w19
   1a8c8:	mov	x0, x22
   1a8cc:	bl	1b9e0 <omp_get_num_procs@@OMP_1.0+0x56c>
   1a8d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a8d4:	ldr	x0, [x0, #4016]
   1a8d8:	mrs	x1, tpidr_el0
   1a8dc:	add	x0, x1, x0
   1a8e0:	str	xzr, [x0, #32]
   1a8e4:	ldp	x19, x20, [sp, #16]
   1a8e8:	ldp	x21, x22, [sp, #32]
   1a8ec:	ldp	x29, x30, [sp], #48
   1a8f0:	ret
   1a8f4:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a8f8:	ldr	x19, [x19, #4016]
   1a8fc:	add	x19, x1, x19
   1a900:	ldr	x20, [x19, #24]
   1a904:	mov	x0, x20
   1a908:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a90c:	mov	x0, x20
   1a910:	bl	8900 <free@plt>
   1a914:	str	xzr, [x19, #24]
   1a918:	b	1a8e4 <omp_in_final@@OMP_3.1+0x1d04>
   1a91c:	stp	x29, x30, [sp, #-48]!
   1a920:	mov	x29, sp
   1a924:	stp	x19, x20, [sp, #16]
   1a928:	stp	x21, x22, [sp, #32]
   1a92c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a930:	ldr	x0, [x0, #4016]
   1a934:	mrs	x1, tpidr_el0
   1a938:	add	x0, x1, x0
   1a93c:	ldr	x20, [x0, #16]
   1a940:	add	x22, x20, #0x80
   1a944:	add	x0, x20, #0x84
   1a948:	ldar	w19, [x0]
   1a94c:	and	w19, w19, #0xfffffffc
   1a950:	add	x0, x20, #0xc0
   1a954:	ldaxr	w1, [x0]
   1a958:	sub	w1, w1, #0x1
   1a95c:	stlxr	w2, w1, [x0]
   1a960:	cbnz	w2, 1a954 <omp_in_final@@OMP_3.1+0x1d74>
   1a964:	orr	w0, w19, #0x1
   1a968:	cmp	w1, #0x0
   1a96c:	csel	w19, w0, w19, eq  // eq = none
   1a970:	tbz	w19, #0, 1a9d0 <omp_in_final@@OMP_3.1+0x1df0>
   1a974:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a978:	ldr	x0, [x0, #4016]
   1a97c:	mrs	x1, tpidr_el0
   1a980:	add	x0, x1, x0
   1a984:	ldr	x21, [x0, #32]
   1a988:	cbz	x21, 1a9d0 <omp_in_final@@OMP_3.1+0x1df0>
   1a98c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a990:	ldr	x0, [x0, #4016]
   1a994:	add	x0, x1, x0
   1a998:	ldr	x0, [x0, #24]
   1a99c:	str	x0, [x20, #88]
   1a9a0:	mov	x0, x21
   1a9a4:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1a9a8:	add	x0, x20, #0x68
   1a9ac:	ldr	x1, [x20, #104]
   1a9b0:	str	x1, [x21, #80]
   1a9b4:	ldxr	x2, [x0]
   1a9b8:	cmp	x2, x1
   1a9bc:	b.ne	1a9c8 <omp_in_final@@OMP_3.1+0x1de8>  // b.any
   1a9c0:	stlxr	w3, x21, [x0]
   1a9c4:	cbnz	w3, 1a9b4 <omp_in_final@@OMP_3.1+0x1dd4>
   1a9c8:	dmb	ish
   1a9cc:	b.ne	1a9ac <omp_in_final@@OMP_3.1+0x1dcc>  // b.any
   1a9d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1a9d4:	ldr	x0, [x0, #4016]
   1a9d8:	mrs	x1, tpidr_el0
   1a9dc:	add	x0, x1, x0
   1a9e0:	str	xzr, [x0, #32]
   1a9e4:	mov	w1, w19
   1a9e8:	mov	x0, x22
   1a9ec:	bl	1bc54 <omp_get_num_procs@@OMP_1.0+0x7e0>
   1a9f0:	ldp	x19, x20, [sp, #16]
   1a9f4:	ldp	x21, x22, [sp, #32]
   1a9f8:	ldp	x29, x30, [sp], #48
   1a9fc:	ret
   1aa00:	stp	x29, x30, [sp, #-32]!
   1aa04:	mov	x29, sp
   1aa08:	stp	x19, x20, [sp, #16]
   1aa0c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aa10:	ldr	x0, [x0, #4016]
   1aa14:	mrs	x1, tpidr_el0
   1aa18:	add	x0, x1, x0
   1aa1c:	ldr	x20, [x0, #16]
   1aa20:	ldr	x19, [x0, #24]
   1aa24:	cbz	x20, 1aa84 <omp_in_final@@OMP_3.1+0x1ea4>
   1aa28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aa2c:	ldr	x0, [x0, #4016]
   1aa30:	mrs	x1, tpidr_el0
   1aa34:	add	x0, x1, x0
   1aa38:	ldr	x0, [x0, #32]
   1aa3c:	cbz	x0, 1aa78 <omp_in_final@@OMP_3.1+0x1e98>
   1aa40:	add	x0, x19, #0x44
   1aa44:	ldxr	w1, [x0]
   1aa48:	add	w1, w1, #0x1
   1aa4c:	stlxr	w2, w1, [x0]
   1aa50:	cbnz	w2, 1aa44 <omp_in_final@@OMP_3.1+0x1e64>
   1aa54:	dmb	ish
   1aa58:	ldr	w0, [x20]
   1aa5c:	cmp	w0, w1
   1aa60:	b.eq	1aaac <omp_in_final@@OMP_3.1+0x1ecc>  // b.none
   1aa64:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aa68:	ldr	x0, [x0, #4016]
   1aa6c:	mrs	x1, tpidr_el0
   1aa70:	add	x0, x1, x0
   1aa74:	str	xzr, [x0, #32]
   1aa78:	ldp	x19, x20, [sp, #16]
   1aa7c:	ldp	x29, x30, [sp], #32
   1aa80:	ret
   1aa84:	mov	x0, x19
   1aa88:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1aa8c:	mov	x0, x19
   1aa90:	bl	8900 <free@plt>
   1aa94:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aa98:	ldr	x0, [x0, #4016]
   1aa9c:	mrs	x1, tpidr_el0
   1aaa0:	add	x0, x1, x0
   1aaa4:	str	xzr, [x0, #24]
   1aaa8:	b	1aa78 <omp_in_final@@OMP_3.1+0x1e98>
   1aaac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aab0:	ldr	x0, [x0, #4016]
   1aab4:	mrs	x1, tpidr_el0
   1aab8:	add	x0, x1, x0
   1aabc:	ldr	x1, [x0, #24]
   1aac0:	str	x1, [x20, #88]
   1aac4:	ldr	x19, [x0, #32]
   1aac8:	mov	x0, x19
   1aacc:	bl	1a620 <omp_in_final@@OMP_3.1+0x1a40>
   1aad0:	add	x0, x20, #0x68
   1aad4:	ldr	x1, [x20, #104]
   1aad8:	str	x1, [x19, #80]
   1aadc:	ldxr	x2, [x0]
   1aae0:	cmp	x2, x1
   1aae4:	b.ne	1aaf0 <omp_in_final@@OMP_3.1+0x1f10>  // b.any
   1aae8:	stlxr	w3, x19, [x0]
   1aaec:	cbnz	w3, 1aadc <omp_in_final@@OMP_3.1+0x1efc>
   1aaf0:	dmb	ish
   1aaf4:	b.eq	1aa64 <omp_in_final@@OMP_3.1+0x1e84>  // b.none
   1aaf8:	b	1aad4 <omp_in_final@@OMP_3.1+0x1ef4>

000000000001aafc <omp_init_lock@@OMP_3.0>:
   1aafc:	str	wzr, [x0]
   1ab00:	ret

000000000001ab04 <omp_destroy_lock@OMP_1.0>:
   1ab04:	ret

000000000001ab08 <omp_set_lock@@OMP_3.0>:
   1ab08:	mov	w2, #0x1                   	// #1
   1ab0c:	ldaxr	w1, [x0]
   1ab10:	cbnz	w1, 1ab1c <omp_set_lock@@OMP_3.0+0x14>
   1ab14:	stxr	w3, w2, [x0]
   1ab18:	cbnz	w3, 1ab0c <omp_set_lock@@OMP_3.0+0x4>
   1ab1c:	cmp	w1, #0x0
   1ab20:	b.ne	1ab28 <omp_set_lock@@OMP_3.0+0x20>  // b.any
   1ab24:	ret
   1ab28:	stp	x29, x30, [sp, #-16]!
   1ab2c:	mov	x29, sp
   1ab30:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1ab34:	ldp	x29, x30, [sp], #16
   1ab38:	ret

000000000001ab3c <omp_unset_lock@@OMP_3.0>:
   1ab3c:	ldxr	w1, [x0]
   1ab40:	stlxr	w2, wzr, [x0]
   1ab44:	cbnz	w2, 1ab3c <omp_unset_lock@@OMP_3.0>
   1ab48:	tbnz	w1, #31, 1ab50 <omp_unset_lock@@OMP_3.0+0x14>
   1ab4c:	ret
   1ab50:	stp	x29, x30, [sp, #-16]!
   1ab54:	mov	x29, sp
   1ab58:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1ab5c:	ldp	x29, x30, [sp], #16
   1ab60:	ret

000000000001ab64 <omp_test_lock@OMP_1.0>:
   1ab64:	mov	w1, #0x1                   	// #1
   1ab68:	ldaxr	w2, [x0]
   1ab6c:	cbnz	w2, 1ab78 <omp_test_lock@OMP_1.0+0x14>
   1ab70:	stxr	w3, w1, [x0]
   1ab74:	cbnz	w3, 1ab68 <omp_test_lock@OMP_1.0+0x4>
   1ab78:	cmp	w2, #0x0
   1ab7c:	cset	w0, eq  // eq = none
   1ab80:	ret

000000000001ab84 <omp_init_nest_lock@@OMP_3.0>:
   1ab84:	stp	xzr, xzr, [x0]
   1ab88:	ret

000000000001ab8c <omp_destroy_nest_lock@@OMP_3.0>:
   1ab8c:	ret

000000000001ab90 <omp_set_nest_lock@@OMP_3.0>:
   1ab90:	stp	x29, x30, [sp, #-32]!
   1ab94:	mov	x29, sp
   1ab98:	stp	x19, x20, [sp, #16]
   1ab9c:	mov	x19, x0
   1aba0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aba4:	ldr	x0, [x0, #4016]
   1aba8:	mrs	x1, tpidr_el0
   1abac:	add	x0, x1, x0
   1abb0:	ldr	x20, [x0, #80]
   1abb4:	cbz	x20, 1ac00 <omp_set_nest_lock@@OMP_3.0+0x70>
   1abb8:	add	x20, x20, #0x90
   1abbc:	ldr	x0, [x19, #8]
   1abc0:	cmp	x0, x20
   1abc4:	b.eq	1abe8 <omp_set_nest_lock@@OMP_3.0+0x58>  // b.none
   1abc8:	mov	w0, #0x1                   	// #1
   1abcc:	ldaxr	w1, [x19]
   1abd0:	cbnz	w1, 1abdc <omp_set_nest_lock@@OMP_3.0+0x4c>
   1abd4:	stxr	w2, w0, [x19]
   1abd8:	cbnz	w2, 1abcc <omp_set_nest_lock@@OMP_3.0+0x3c>
   1abdc:	cmp	w1, #0x0
   1abe0:	b.ne	1ac0c <omp_set_nest_lock@@OMP_3.0+0x7c>  // b.any
   1abe4:	str	x20, [x19, #8]
   1abe8:	ldr	w0, [x19, #4]
   1abec:	add	w0, w0, #0x1
   1abf0:	str	w0, [x19, #4]
   1abf4:	ldp	x19, x20, [sp, #16]
   1abf8:	ldp	x29, x30, [sp], #32
   1abfc:	ret
   1ac00:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   1ac04:	mov	x20, x0
   1ac08:	b	1abbc <omp_set_nest_lock@@OMP_3.0+0x2c>
   1ac0c:	mov	x0, x19
   1ac10:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1ac14:	b	1abe4 <omp_set_nest_lock@@OMP_3.0+0x54>

000000000001ac18 <omp_unset_nest_lock@@OMP_3.0>:
   1ac18:	ldr	w1, [x0, #4]
   1ac1c:	sub	w1, w1, #0x1
   1ac20:	str	w1, [x0, #4]
   1ac24:	cbnz	w1, 1ac40 <omp_unset_nest_lock@@OMP_3.0+0x28>
   1ac28:	str	xzr, [x0, #8]
   1ac2c:	mov	x1, x0
   1ac30:	ldxr	w2, [x1]
   1ac34:	stlxr	w3, wzr, [x1]
   1ac38:	cbnz	w3, 1ac30 <omp_unset_nest_lock@@OMP_3.0+0x18>
   1ac3c:	tbnz	w2, #31, 1ac44 <omp_unset_nest_lock@@OMP_3.0+0x2c>
   1ac40:	ret
   1ac44:	stp	x29, x30, [sp, #-16]!
   1ac48:	mov	x29, sp
   1ac4c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1ac50:	ldp	x29, x30, [sp], #16
   1ac54:	ret

000000000001ac58 <omp_test_nest_lock@@OMP_3.0>:
   1ac58:	stp	x29, x30, [sp, #-32]!
   1ac5c:	mov	x29, sp
   1ac60:	str	x19, [sp, #16]
   1ac64:	mov	x19, x0
   1ac68:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ac6c:	ldr	x0, [x0, #4016]
   1ac70:	mrs	x1, tpidr_el0
   1ac74:	add	x0, x1, x0
   1ac78:	ldr	x0, [x0, #80]
   1ac7c:	cbz	x0, 1acc4 <omp_test_nest_lock@@OMP_3.0+0x6c>
   1ac80:	add	x0, x0, #0x90
   1ac84:	ldr	x1, [x19, #8]
   1ac88:	cmp	x1, x0
   1ac8c:	b.eq	1accc <omp_test_nest_lock@@OMP_3.0+0x74>  // b.none
   1ac90:	mov	w1, #0x1                   	// #1
   1ac94:	ldaxr	w2, [x19]
   1ac98:	cbnz	w2, 1aca4 <omp_test_nest_lock@@OMP_3.0+0x4c>
   1ac9c:	stxr	w3, w1, [x19]
   1aca0:	cbnz	w3, 1ac94 <omp_test_nest_lock@@OMP_3.0+0x3c>
   1aca4:	cmp	w2, #0x0
   1aca8:	b.ne	1acdc <omp_test_nest_lock@@OMP_3.0+0x84>  // b.any
   1acac:	str	x0, [x19, #8]
   1acb0:	mov	w0, w1
   1acb4:	str	w1, [x19, #4]
   1acb8:	ldr	x19, [sp, #16]
   1acbc:	ldp	x29, x30, [sp], #32
   1acc0:	ret
   1acc4:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   1acc8:	b	1ac84 <omp_test_nest_lock@@OMP_3.0+0x2c>
   1accc:	ldr	w0, [x19, #4]
   1acd0:	add	w0, w0, #0x1
   1acd4:	str	w0, [x19, #4]
   1acd8:	b	1acb8 <omp_test_nest_lock@@OMP_3.0+0x60>
   1acdc:	mov	w0, #0x0                   	// #0
   1ace0:	b	1acb8 <omp_test_nest_lock@@OMP_3.0+0x60>

000000000001ace4 <omp_init_nest_lock@OMP_1.0>:
   1ace4:	str	xzr, [x0]
   1ace8:	ret

000000000001acec <omp_destroy_nest_lock@OMP_1.0>:
   1acec:	ret

000000000001acf0 <omp_set_nest_lock@OMP_1.0>:
   1acf0:	stp	x29, x30, [sp, #-64]!
   1acf4:	mov	x29, sp
   1acf8:	stp	x19, x20, [sp, #16]
   1acfc:	stp	x21, x22, [sp, #32]
   1ad00:	stp	x23, x24, [sp, #48]
   1ad04:	mov	x19, x0
   1ad08:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ad0c:	ldr	x0, [x0, #4000]
   1ad10:	mrs	x1, tpidr_el0
   1ad14:	ldr	w20, [x1, x0]
   1ad18:	cbz	w20, 1ad68 <omp_set_nest_lock@OMP_1.0+0x78>
   1ad1c:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ad20:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ad24:	add	x21, x0, #0x330
   1ad28:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ad2c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ad30:	mov	x22, x19
   1ad34:	ldaxr	w0, [x19]
   1ad38:	cbnz	w0, 1ad44 <omp_set_nest_lock@OMP_1.0+0x54>
   1ad3c:	stxr	w3, w20, [x19]
   1ad40:	cbnz	w3, 1ad34 <omp_set_nest_lock@OMP_1.0+0x44>
   1ad44:	cmp	w0, #0x0
   1ad48:	b.ne	1ad88 <omp_set_nest_lock@OMP_1.0+0x98>  // b.any
   1ad4c:	mov	w0, #0x1                   	// #1
   1ad50:	str	w0, [x19, #4]
   1ad54:	ldp	x19, x20, [sp, #16]
   1ad58:	ldp	x21, x22, [sp, #32]
   1ad5c:	ldp	x23, x24, [sp, #48]
   1ad60:	ldp	x29, x30, [sp], #64
   1ad64:	ret
   1ad68:	mov	x0, #0xb2                  	// #178
   1ad6c:	bl	8ae0 <syscall@plt>
   1ad70:	mov	w20, w0
   1ad74:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ad78:	ldr	x1, [x1, #4000]
   1ad7c:	mrs	x2, tpidr_el0
   1ad80:	str	w0, [x2, x1]
   1ad84:	b	1ad1c <omp_set_nest_lock@OMP_1.0+0x2c>
   1ad88:	mov	w24, w0
   1ad8c:	cmp	w20, w0
   1ad90:	b.eq	1ae30 <omp_set_nest_lock@OMP_1.0+0x140>  // b.none
   1ad94:	ldr	x3, [x23, #1584]
   1ad98:	ldr	x4, [x21]
   1ad9c:	ldr	x0, [x2, #744]
   1ada0:	cmp	x4, x0
   1ada4:	b.hi	1ae40 <omp_set_nest_lock@OMP_1.0+0x150>  // b.pmore
   1ada8:	cbz	x3, 1adc8 <omp_set_nest_lock@OMP_1.0+0xd8>
   1adac:	mov	x0, #0x0                   	// #0
   1adb0:	ldr	w4, [x22]
   1adb4:	cmp	w24, w4
   1adb8:	b.ne	1ad30 <omp_set_nest_lock@OMP_1.0+0x40>  // b.any
   1adbc:	add	x0, x0, #0x1
   1adc0:	cmp	x0, x3
   1adc4:	b.ne	1adb0 <omp_set_nest_lock@OMP_1.0+0xc0>  // b.any
   1adc8:	mov	x4, #0x0                   	// #0
   1adcc:	mov	w3, w24
   1add0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1add4:	ldr	w2, [x0, #832]
   1add8:	mov	x1, x22
   1addc:	mov	x0, #0x62                  	// #98
   1ade0:	bl	8ae0 <syscall@plt>
   1ade4:	tbz	w0, #31, 1ad28 <omp_set_nest_lock@OMP_1.0+0x38>
   1ade8:	bl	8ac0 <__errno_location@plt>
   1adec:	ldr	w0, [x0]
   1adf0:	cmp	w0, #0x26
   1adf4:	b.ne	1ad28 <omp_set_nest_lock@OMP_1.0+0x38>  // b.any
   1adf8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1adfc:	ldr	w2, [x0, #832]
   1ae00:	and	w2, w2, #0xffffff7f
   1ae04:	str	w2, [x0, #832]
   1ae08:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ae0c:	ldr	w0, [x1, #836]
   1ae10:	and	w0, w0, #0xffffff7f
   1ae14:	str	w0, [x1, #836]
   1ae18:	mov	x4, #0x0                   	// #0
   1ae1c:	mov	w3, w24
   1ae20:	mov	x1, x22
   1ae24:	mov	x0, #0x62                  	// #98
   1ae28:	bl	8ae0 <syscall@plt>
   1ae2c:	b	1ad28 <omp_set_nest_lock@OMP_1.0+0x38>
   1ae30:	ldr	w0, [x19, #4]
   1ae34:	add	w0, w0, #0x1
   1ae38:	str	w0, [x19, #4]
   1ae3c:	b	1ad54 <omp_set_nest_lock@OMP_1.0+0x64>
   1ae40:	ldr	x3, [x1, #1600]
   1ae44:	b	1ada8 <omp_set_nest_lock@OMP_1.0+0xb8>

000000000001ae48 <omp_unset_nest_lock@OMP_1.0>:
   1ae48:	stp	x29, x30, [sp, #-32]!
   1ae4c:	mov	x29, sp
   1ae50:	str	x19, [sp, #16]
   1ae54:	mov	x19, x0
   1ae58:	ldr	w0, [x0, #4]
   1ae5c:	sub	w0, w0, #0x1
   1ae60:	str	w0, [x19, #4]
   1ae64:	cbz	w0, 1ae74 <omp_unset_nest_lock@OMP_1.0+0x2c>
   1ae68:	ldr	x19, [sp, #16]
   1ae6c:	ldp	x29, x30, [sp], #32
   1ae70:	ret
   1ae74:	stlr	wzr, [x19]
   1ae78:	mov	w3, #0x1                   	// #1
   1ae7c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ae80:	ldr	w2, [x0, #836]
   1ae84:	mov	x1, x19
   1ae88:	mov	x0, #0x62                  	// #98
   1ae8c:	bl	8ae0 <syscall@plt>
   1ae90:	tbz	w0, #31, 1ae68 <omp_unset_nest_lock@OMP_1.0+0x20>
   1ae94:	bl	8ac0 <__errno_location@plt>
   1ae98:	ldr	w0, [x0]
   1ae9c:	cmp	w0, #0x26
   1aea0:	b.ne	1ae68 <omp_unset_nest_lock@OMP_1.0+0x20>  // b.any
   1aea4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1aea8:	ldr	w0, [x1, #832]
   1aeac:	and	w0, w0, #0xffffff7f
   1aeb0:	str	w0, [x1, #832]
   1aeb4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1aeb8:	ldr	w2, [x0, #836]
   1aebc:	and	w2, w2, #0xffffff7f
   1aec0:	str	w2, [x0, #836]
   1aec4:	mov	w3, #0x1                   	// #1
   1aec8:	mov	x1, x19
   1aecc:	mov	x0, #0x62                  	// #98
   1aed0:	bl	8ae0 <syscall@plt>
   1aed4:	b	1ae68 <omp_unset_nest_lock@OMP_1.0+0x20>

000000000001aed8 <omp_test_nest_lock@OMP_1.0>:
   1aed8:	stp	x29, x30, [sp, #-32]!
   1aedc:	mov	x29, sp
   1aee0:	str	x19, [sp, #16]
   1aee4:	mov	x19, x0
   1aee8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1aeec:	ldr	x0, [x0, #4000]
   1aef0:	mrs	x1, tpidr_el0
   1aef4:	ldr	w1, [x1, x0]
   1aef8:	cbz	w1, 1af28 <omp_test_nest_lock@OMP_1.0+0x50>
   1aefc:	ldaxr	w0, [x19]
   1af00:	cbnz	w0, 1af0c <omp_test_nest_lock@OMP_1.0+0x34>
   1af04:	stxr	w2, w1, [x19]
   1af08:	cbnz	w2, 1aefc <omp_test_nest_lock@OMP_1.0+0x24>
   1af0c:	cmp	w0, #0x0
   1af10:	b.ne	1af48 <omp_test_nest_lock@OMP_1.0+0x70>  // b.any
   1af14:	mov	w0, #0x1                   	// #1
   1af18:	str	w0, [x19, #4]
   1af1c:	ldr	x19, [sp, #16]
   1af20:	ldp	x29, x30, [sp], #32
   1af24:	ret
   1af28:	mov	x0, #0xb2                  	// #178
   1af2c:	bl	8ae0 <syscall@plt>
   1af30:	mov	w1, w0
   1af34:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1af38:	ldr	x2, [x2, #4000]
   1af3c:	mrs	x3, tpidr_el0
   1af40:	str	w0, [x3, x2]
   1af44:	b	1aefc <omp_test_nest_lock@OMP_1.0+0x24>
   1af48:	cmp	w1, w0
   1af4c:	b.eq	1af58 <omp_test_nest_lock@OMP_1.0+0x80>  // b.none
   1af50:	mov	w0, #0x0                   	// #0
   1af54:	b	1af1c <omp_test_nest_lock@OMP_1.0+0x44>
   1af58:	ldr	w0, [x19, #4]
   1af5c:	add	w0, w0, #0x1
   1af60:	str	w0, [x19, #4]
   1af64:	b	1af1c <omp_test_nest_lock@OMP_1.0+0x44>
   1af68:	stp	x29, x30, [sp, #-48]!
   1af6c:	mov	x29, sp
   1af70:	stp	x19, x20, [sp, #16]
   1af74:	mov	x19, x0
   1af78:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1af7c:	add	x3, x0, #0x630
   1af80:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1af84:	add	x2, x0, #0x330
   1af88:	adrp	x6, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1af8c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1af90:	add	x0, x0, #0x640
   1af94:	mov	w7, #0x1                   	// #1
   1af98:	cmp	w1, #0x1
   1af9c:	b.ne	1b054 <omp_test_nest_lock@OMP_1.0+0x17c>  // b.any
   1afa0:	ldr	x4, [x2]
   1afa4:	ldr	x1, [x6, #744]
   1afa8:	cmp	x4, x1
   1afac:	csel	x1, x0, x3, hi  // hi = pmore
   1afb0:	ldr	x4, [x1]
   1afb4:	cbz	x4, 1afd4 <omp_test_nest_lock@OMP_1.0+0xfc>
   1afb8:	mov	x1, #0x0                   	// #0
   1afbc:	ldr	w5, [x19]
   1afc0:	cmp	w5, #0x1
   1afc4:	b.ne	1b12c <omp_test_nest_lock@OMP_1.0+0x254>  // b.any
   1afc8:	add	x1, x1, #0x1
   1afcc:	cmp	x1, x4
   1afd0:	b.ne	1afbc <omp_test_nest_lock@OMP_1.0+0xe4>  // b.any
   1afd4:	mov	w1, #0xffffffff            	// #-1
   1afd8:	ldaxr	w0, [x19]
   1afdc:	stxr	w2, w1, [x19]
   1afe0:	cbnz	w2, 1afd8 <omp_test_nest_lock@OMP_1.0+0x100>
   1afe4:	cbz	w0, 1b144 <omp_test_nest_lock@OMP_1.0+0x26c>
   1afe8:	str	x21, [sp, #32]
   1afec:	mov	x4, #0x0                   	// #0
   1aff0:	mov	w3, #0xffffffff            	// #-1
   1aff4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1aff8:	ldr	w2, [x0, #832]
   1affc:	mov	x1, x19
   1b000:	mov	x0, #0x62                  	// #98
   1b004:	bl	8ae0 <syscall@plt>
   1b008:	tbz	w0, #31, 1b058 <omp_test_nest_lock@OMP_1.0+0x180>
   1b00c:	bl	8ac0 <__errno_location@plt>
   1b010:	ldr	w0, [x0]
   1b014:	cmp	w0, #0x26
   1b018:	b.ne	1b058 <omp_test_nest_lock@OMP_1.0+0x180>  // b.any
   1b01c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b020:	add	x1, x0, #0x340
   1b024:	ldr	w2, [x0, #832]
   1b028:	and	w2, w2, #0xffffff7f
   1b02c:	str	w2, [x0, #832]
   1b030:	ldr	w0, [x1, #4]
   1b034:	and	w0, w0, #0xffffff7f
   1b038:	str	w0, [x1, #4]
   1b03c:	mov	x4, #0x0                   	// #0
   1b040:	mov	w3, #0xffffffff            	// #-1
   1b044:	mov	x1, x19
   1b048:	mov	x0, #0x62                  	// #98
   1b04c:	bl	8ae0 <syscall@plt>
   1b050:	b	1b058 <omp_test_nest_lock@OMP_1.0+0x180>
   1b054:	str	x21, [sp, #32]
   1b058:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b05c:	add	x21, x21, #0x630
   1b060:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b064:	add	x20, x20, #0x330
   1b068:	mov	w4, #0xffffffff            	// #-1
   1b06c:	adrp	x5, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b070:	adrp	x3, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b074:	add	x3, x3, #0x640
   1b078:	ldaxr	w0, [x19]
   1b07c:	stxr	w1, w4, [x19]
   1b080:	cbnz	w1, 1b078 <omp_test_nest_lock@OMP_1.0+0x1a0>
   1b084:	cbz	w0, 1b124 <omp_test_nest_lock@OMP_1.0+0x24c>
   1b088:	ldr	x1, [x20]
   1b08c:	ldr	x0, [x5, #744]
   1b090:	cmp	x1, x0
   1b094:	csel	x0, x3, x21, hi  // hi = pmore
   1b098:	ldr	x2, [x0]
   1b09c:	cbz	x2, 1b0bc <omp_test_nest_lock@OMP_1.0+0x1e4>
   1b0a0:	mov	x0, #0x0                   	// #0
   1b0a4:	ldr	w1, [x19]
   1b0a8:	cmn	w1, #0x1
   1b0ac:	b.ne	1b078 <omp_test_nest_lock@OMP_1.0+0x1a0>  // b.any
   1b0b0:	add	x0, x0, #0x1
   1b0b4:	cmp	x0, x2
   1b0b8:	b.ne	1b0a4 <omp_test_nest_lock@OMP_1.0+0x1cc>  // b.any
   1b0bc:	mov	x4, #0x0                   	// #0
   1b0c0:	mov	w3, #0xffffffff            	// #-1
   1b0c4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b0c8:	ldr	w2, [x0, #832]
   1b0cc:	mov	x1, x19
   1b0d0:	mov	x0, #0x62                  	// #98
   1b0d4:	bl	8ae0 <syscall@plt>
   1b0d8:	tbz	w0, #31, 1b068 <omp_test_nest_lock@OMP_1.0+0x190>
   1b0dc:	bl	8ac0 <__errno_location@plt>
   1b0e0:	ldr	w0, [x0]
   1b0e4:	cmp	w0, #0x26
   1b0e8:	b.ne	1b068 <omp_test_nest_lock@OMP_1.0+0x190>  // b.any
   1b0ec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b0f0:	add	x1, x0, #0x340
   1b0f4:	ldr	w2, [x0, #832]
   1b0f8:	and	w2, w2, #0xffffff7f
   1b0fc:	str	w2, [x0, #832]
   1b100:	ldr	w0, [x1, #4]
   1b104:	and	w0, w0, #0xffffff7f
   1b108:	str	w0, [x1, #4]
   1b10c:	mov	x4, #0x0                   	// #0
   1b110:	mov	w3, #0xffffffff            	// #-1
   1b114:	mov	x1, x19
   1b118:	mov	x0, #0x62                  	// #98
   1b11c:	bl	8ae0 <syscall@plt>
   1b120:	b	1b068 <omp_test_nest_lock@OMP_1.0+0x190>
   1b124:	ldr	x21, [sp, #32]
   1b128:	b	1b144 <omp_test_nest_lock@OMP_1.0+0x26c>
   1b12c:	ldaxr	w1, [x19]
   1b130:	cbnz	w1, 1b13c <omp_test_nest_lock@OMP_1.0+0x264>
   1b134:	stxr	w4, w7, [x19]
   1b138:	cbnz	w4, 1b12c <omp_test_nest_lock@OMP_1.0+0x254>
   1b13c:	cmp	w1, #0x0
   1b140:	b.ne	1af98 <omp_test_nest_lock@OMP_1.0+0xc0>  // b.any
   1b144:	ldp	x19, x20, [sp, #16]
   1b148:	ldp	x29, x30, [sp], #48
   1b14c:	ret
   1b150:	stp	x29, x30, [sp, #-32]!
   1b154:	mov	x29, sp
   1b158:	str	x19, [sp, #16]
   1b15c:	mov	x19, x0
   1b160:	mov	w3, #0x1                   	// #1
   1b164:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b168:	ldr	w2, [x0, #836]
   1b16c:	mov	x1, x19
   1b170:	mov	x0, #0x62                  	// #98
   1b174:	bl	8ae0 <syscall@plt>
   1b178:	tbnz	w0, #31, 1b188 <omp_test_nest_lock@OMP_1.0+0x2b0>
   1b17c:	ldr	x19, [sp, #16]
   1b180:	ldp	x29, x30, [sp], #32
   1b184:	ret
   1b188:	bl	8ac0 <__errno_location@plt>
   1b18c:	ldr	w0, [x0]
   1b190:	cmp	w0, #0x26
   1b194:	b.ne	1b17c <omp_test_nest_lock@OMP_1.0+0x2a4>  // b.any
   1b198:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b19c:	add	x3, x0, #0x340
   1b1a0:	ldr	w1, [x0, #832]
   1b1a4:	and	w1, w1, #0xffffff7f
   1b1a8:	str	w1, [x0, #832]
   1b1ac:	ldr	w2, [x3, #4]
   1b1b0:	and	w2, w2, #0xffffff7f
   1b1b4:	str	w2, [x3, #4]
   1b1b8:	mov	w3, #0x1                   	// #1
   1b1bc:	mov	x1, x19
   1b1c0:	mov	x0, #0x62                  	// #98
   1b1c4:	bl	8ae0 <syscall@plt>
   1b1c8:	b	1b17c <omp_test_nest_lock@OMP_1.0+0x2a4>
   1b1cc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b1d0:	ldr	x0, [x0, #1568]
   1b1d4:	cbz	x0, 1b1e4 <omp_test_nest_lock@OMP_1.0+0x30c>
   1b1d8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b1dc:	ldr	w0, [x0, #744]
   1b1e0:	ret
   1b1e4:	stp	x29, x30, [sp, #-32]!
   1b1e8:	mov	x29, sp
   1b1ec:	stp	x19, x20, [sp, #16]
   1b1f0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b1f4:	ldr	x19, [x0, #1712]
   1b1f8:	cbz	x19, 1b218 <omp_test_nest_lock@OMP_1.0+0x340>
   1b1fc:	bl	8a90 <pthread_self@plt>
   1b200:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b204:	ldr	x20, [x1, #1376]
   1b208:	mov	x2, x19
   1b20c:	mov	x1, x20
   1b210:	bl	8960 <pthread_getaffinity_np@plt>
   1b214:	cbz	w0, 1b22c <omp_test_nest_lock@OMP_1.0+0x354>
   1b218:	mov	w0, #0x54                  	// #84
   1b21c:	bl	8a30 <sysconf@plt>
   1b220:	ldp	x19, x20, [sp, #16]
   1b224:	ldp	x29, x30, [sp], #32
   1b228:	ret
   1b22c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b230:	ldr	x1, [x0, #1712]
   1b234:	mov	x0, x20
   1b238:	bl	89e0 <__sched_cpucount@plt>
   1b23c:	cmp	w0, #0x0
   1b240:	csinc	w0, w0, wzr, ne  // ne = any
   1b244:	b	1b220 <omp_test_nest_lock@OMP_1.0+0x348>
   1b248:	stp	x29, x30, [sp, #-16]!
   1b24c:	mov	x29, sp
   1b250:	bl	89e0 <__sched_cpucount@plt>
   1b254:	sxtw	x0, w0
   1b258:	ldp	x29, x30, [sp], #16
   1b25c:	ret
   1b260:	stp	x29, x30, [sp, #-64]!
   1b264:	mov	x29, sp
   1b268:	stp	x19, x20, [sp, #16]
   1b26c:	stp	x21, x22, [sp, #32]
   1b270:	str	x23, [sp, #48]
   1b274:	mov	w0, #0x53                  	// #83
   1b278:	bl	8a30 <sysconf@plt>
   1b27c:	add	x0, x0, #0x3f
   1b280:	lsr	x0, x0, #6
   1b284:	lsl	x0, x0, #3
   1b288:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b28c:	str	x0, [x1, #1704]
   1b290:	bl	8c28 <fprintf@plt+0x118>
   1b294:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b298:	str	x0, [x1, #1712]
   1b29c:	bl	8a90 <pthread_self@plt>
   1b2a0:	mov	x21, x0
   1b2a4:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2a8:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2ac:	mov	x22, #0x80                  	// #128
   1b2b0:	mov	x23, x22
   1b2b4:	b	1b39c <omp_test_nest_lock@OMP_1.0+0x4c4>
   1b2b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2bc:	ldr	x1, [x0, #1712]
   1b2c0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2c4:	ldr	x0, [x0, #1704]
   1b2c8:	bl	89e0 <__sched_cpucount@plt>
   1b2cc:	sxtw	x0, w0
   1b2d0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2d4:	str	x0, [x1, #696]
   1b2d8:	cbnz	x0, 1b320 <omp_test_nest_lock@OMP_1.0+0x448>
   1b2dc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2e0:	str	xzr, [x0, #1704]
   1b2e4:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2e8:	mov	x0, #0x1                   	// #1
   1b2ec:	str	x0, [x19, #696]
   1b2f0:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b2f4:	ldr	x0, [x20, #1712]
   1b2f8:	bl	8900 <free@plt>
   1b2fc:	str	xzr, [x20, #1712]
   1b300:	mov	w0, #0x54                  	// #84
   1b304:	bl	8a30 <sysconf@plt>
   1b308:	str	x0, [x19, #696]
   1b30c:	ldp	x19, x20, [sp, #16]
   1b310:	ldp	x21, x22, [sp, #32]
   1b314:	ldr	x23, [sp, #48]
   1b318:	ldp	x29, x30, [sp], #64
   1b31c:	ret
   1b320:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b324:	ldr	x2, [x0, #1704]
   1b328:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b32c:	str	x2, [x0, #1376]
   1b330:	lsl	x0, x2, #3
   1b334:	cmp	xzr, x2, lsl #3
   1b338:	b.eq	1b370 <omp_test_nest_lock@OMP_1.0+0x498>  // b.none
   1b33c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b340:	ldr	x4, [x1, #1712]
   1b344:	b	1b34c <omp_test_nest_lock@OMP_1.0+0x474>
   1b348:	cbz	x0, 1b370 <omp_test_nest_lock@OMP_1.0+0x498>
   1b34c:	mov	x3, x0
   1b350:	sub	x0, x0, #0x1
   1b354:	cmp	x2, x0, lsr #3
   1b358:	b.ls	1b348 <omp_test_nest_lock@OMP_1.0+0x470>  // b.plast
   1b35c:	lsr	x1, x0, #6
   1b360:	ldr	x1, [x4, x1, lsl #3]
   1b364:	lsr	x1, x1, x0
   1b368:	tbz	w1, #0, 1b348 <omp_test_nest_lock@OMP_1.0+0x470>
   1b36c:	mov	x0, x3
   1b370:	add	x0, x0, #0x3f
   1b374:	lsr	x0, x0, #6
   1b378:	lsl	x0, x0, #3
   1b37c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b380:	str	x0, [x1, #1704]
   1b384:	b	1b30c <omp_test_nest_lock@OMP_1.0+0x434>
   1b388:	str	x22, [x19, #1704]
   1b38c:	mov	x1, x23
   1b390:	ldr	x0, [x20, #1712]
   1b394:	bl	8c98 <fprintf@plt+0x188>
   1b398:	str	x0, [x20, #1712]
   1b39c:	ldr	x2, [x20, #1712]
   1b3a0:	ldr	x1, [x19, #1704]
   1b3a4:	mov	x0, x21
   1b3a8:	bl	8960 <pthread_getaffinity_np@plt>
   1b3ac:	cbz	w0, 1b2b8 <omp_test_nest_lock@OMP_1.0+0x3e0>
   1b3b0:	cmp	w0, #0x16
   1b3b4:	b.ne	1b2dc <omp_test_nest_lock@OMP_1.0+0x404>  // b.any
   1b3b8:	ldr	x1, [x19, #1704]
   1b3bc:	cmp	x1, #0x7f
   1b3c0:	b.ls	1b388 <omp_test_nest_lock@OMP_1.0+0x4b0>  // b.plast
   1b3c4:	lsl	x1, x1, #1
   1b3c8:	str	x1, [x19, #1704]
   1b3cc:	cmp	x1, #0x3ff
   1b3d0:	b.ls	1b390 <omp_test_nest_lock@OMP_1.0+0x4b8>  // b.plast
   1b3d4:	ldr	x0, [x20, #1712]
   1b3d8:	bl	8810 <realloc@plt>
   1b3dc:	cbz	x0, 1b2dc <omp_test_nest_lock@OMP_1.0+0x404>
   1b3e0:	str	x0, [x20, #1712]
   1b3e4:	b	1b39c <omp_test_nest_lock@OMP_1.0+0x4c4>
   1b3e8:	stp	x29, x30, [sp, #-64]!
   1b3ec:	mov	x29, sp
   1b3f0:	str	x20, [sp, #16]
   1b3f4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1b3f8:	ldr	x0, [x0, #4016]
   1b3fc:	mrs	x1, tpidr_el0
   1b400:	add	x0, x1, x0
   1b404:	ldr	x1, [x0, #80]
   1b408:	add	x2, x1, #0x90
   1b40c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b410:	add	x0, x0, #0x2b8
   1b414:	cmp	x1, #0x0
   1b418:	csel	x0, x0, x2, eq  // eq = none
   1b41c:	ldr	x20, [x0]
   1b420:	bl	1b1cc <omp_test_nest_lock@OMP_1.0+0x2f4>
   1b424:	cmp	w20, w0
   1b428:	csel	w20, w20, w0, ls  // ls = plast
   1b42c:	mov	w1, #0x3                   	// #3
   1b430:	add	x0, sp, #0x28
   1b434:	bl	8680 <getloadavg@plt>
   1b438:	mov	w1, #0x0                   	// #0
   1b43c:	cmp	w0, #0x3
   1b440:	b.eq	1b45c <omp_test_nest_lock@OMP_1.0+0x584>  // b.none
   1b444:	sub	w0, w20, w1
   1b448:	cmp	w1, w20
   1b44c:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
   1b450:	ldr	x20, [sp, #16]
   1b454:	ldp	x29, x30, [sp], #64
   1b458:	ret
   1b45c:	ldr	d0, [sp, #56]
   1b460:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1b464:	ldr	d1, [x0, #616]
   1b468:	fadd	d0, d0, d1
   1b46c:	fcvtzu	w1, d0
   1b470:	b	1b444 <omp_test_nest_lock@OMP_1.0+0x56c>

000000000001b474 <omp_get_num_procs@@OMP_1.0>:
   1b474:	stp	x29, x30, [sp, #-16]!
   1b478:	mov	x29, sp
   1b47c:	bl	1b1cc <omp_test_nest_lock@OMP_1.0+0x2f4>
   1b480:	ldp	x29, x30, [sp], #16
   1b484:	ret
   1b488:	stp	x29, x30, [sp, #-32]!
   1b48c:	mov	x29, sp
   1b490:	str	x19, [sp, #16]
   1b494:	mov	x19, x0
   1b498:	mov	w3, #0x1                   	// #1
   1b49c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b4a0:	ldr	w2, [x0, #836]
   1b4a4:	mov	x1, x19
   1b4a8:	mov	x0, #0x62                  	// #98
   1b4ac:	bl	8ae0 <syscall@plt>
   1b4b0:	tbnz	w0, #31, 1b4c0 <omp_get_num_procs@@OMP_1.0+0x4c>
   1b4b4:	ldr	x19, [sp, #16]
   1b4b8:	ldp	x29, x30, [sp], #32
   1b4bc:	ret
   1b4c0:	bl	8ac0 <__errno_location@plt>
   1b4c4:	ldr	w0, [x0]
   1b4c8:	cmp	w0, #0x26
   1b4cc:	b.ne	1b4b4 <omp_get_num_procs@@OMP_1.0+0x40>  // b.any
   1b4d0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b4d4:	ldr	w0, [x1, #832]
   1b4d8:	and	w0, w0, #0xffffff7f
   1b4dc:	str	w0, [x1, #832]
   1b4e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b4e4:	ldr	w2, [x0, #836]
   1b4e8:	and	w2, w2, #0xffffff7f
   1b4ec:	str	w2, [x0, #836]
   1b4f0:	mov	w3, #0x1                   	// #1
   1b4f4:	mov	x1, x19
   1b4f8:	mov	x0, #0x62                  	// #98
   1b4fc:	bl	8ae0 <syscall@plt>
   1b500:	b	1b4b4 <omp_get_num_procs@@OMP_1.0+0x40>
   1b504:	stp	x29, x30, [sp, #-48]!
   1b508:	mov	x29, sp
   1b50c:	stp	x19, x20, [sp, #16]
   1b510:	mov	x19, x0
   1b514:	adrp	x5, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b518:	add	x5, x5, #0x630
   1b51c:	adrp	x4, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b520:	add	x4, x4, #0x330
   1b524:	adrp	x6, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b528:	adrp	x3, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b52c:	add	x3, x3, #0x640
   1b530:	mov	w7, #0x80000000            	// #-2147483648
   1b534:	cbnz	w1, 1b638 <omp_get_num_procs@@OMP_1.0+0x1c4>
   1b538:	ldr	x1, [x4]
   1b53c:	ldr	x0, [x6, #744]
   1b540:	cmp	x1, x0
   1b544:	csel	x0, x3, x5, hi  // hi = pmore
   1b548:	ldr	x2, [x0]
   1b54c:	cbz	x2, 1b568 <omp_get_num_procs@@OMP_1.0+0xf4>
   1b550:	mov	x0, #0x0                   	// #0
   1b554:	ldr	w1, [x19]
   1b558:	cbnz	w1, 1b600 <omp_get_num_procs@@OMP_1.0+0x18c>
   1b55c:	add	x0, x0, #0x1
   1b560:	cmp	x0, x2
   1b564:	b.ne	1b554 <omp_get_num_procs@@OMP_1.0+0xe0>  // b.any
   1b568:	ldaxr	w0, [x19]
   1b56c:	cbnz	w0, 1b578 <omp_get_num_procs@@OMP_1.0+0x104>
   1b570:	stxr	w1, w7, [x19]
   1b574:	cbnz	w1, 1b568 <omp_get_num_procs@@OMP_1.0+0xf4>
   1b578:	cmp	w0, #0x0
   1b57c:	b.ne	1b600 <omp_get_num_procs@@OMP_1.0+0x18c>  // b.any
   1b580:	str	x21, [sp, #32]
   1b584:	mov	x4, #0x0                   	// #0
   1b588:	mov	w3, #0x80000000            	// #-2147483648
   1b58c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b590:	ldr	w2, [x0, #832]
   1b594:	mov	x1, x19
   1b598:	mov	x0, #0x62                  	// #98
   1b59c:	bl	8ae0 <syscall@plt>
   1b5a0:	tbnz	w0, #31, 1b5b8 <omp_get_num_procs@@OMP_1.0+0x144>
   1b5a4:	ldr	w1, [x19]
   1b5a8:	mov	w20, #0x80000000            	// #-2147483648
   1b5ac:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b5b0:	add	x21, x21, #0x630
   1b5b4:	b	1b6c4 <omp_get_num_procs@@OMP_1.0+0x250>
   1b5b8:	bl	8ac0 <__errno_location@plt>
   1b5bc:	ldr	w0, [x0]
   1b5c0:	cmp	w0, #0x26
   1b5c4:	b.ne	1b5a4 <omp_get_num_procs@@OMP_1.0+0x130>  // b.any
   1b5c8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b5cc:	ldr	w2, [x0, #832]
   1b5d0:	and	w2, w2, #0xffffff7f
   1b5d4:	str	w2, [x0, #832]
   1b5d8:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b5dc:	ldr	w0, [x1, #836]
   1b5e0:	and	w0, w0, #0xffffff7f
   1b5e4:	str	w0, [x1, #836]
   1b5e8:	mov	x4, #0x0                   	// #0
   1b5ec:	mov	w3, #0x80000000            	// #-2147483648
   1b5f0:	mov	x1, x19
   1b5f4:	mov	x0, #0x62                  	// #98
   1b5f8:	bl	8ae0 <syscall@plt>
   1b5fc:	b	1b5a4 <omp_get_num_procs@@OMP_1.0+0x130>
   1b600:	ldr	w1, [x19]
   1b604:	cmp	w1, #0x0
   1b608:	b.le	1b534 <omp_get_num_procs@@OMP_1.0+0xc0>
   1b60c:	sub	w2, w1, #0x1
   1b610:	ldaxr	w0, [x19]
   1b614:	cmp	w0, w1
   1b618:	b.ne	1b624 <omp_get_num_procs@@OMP_1.0+0x1b0>  // b.any
   1b61c:	stxr	w8, w2, [x19]
   1b620:	cbnz	w8, 1b610 <omp_get_num_procs@@OMP_1.0+0x19c>
   1b624:	mov	w1, w0
   1b628:	b.ne	1b534 <omp_get_num_procs@@OMP_1.0+0xc0>  // b.any
   1b62c:	ldp	x19, x20, [sp, #16]
   1b630:	ldp	x29, x30, [sp], #48
   1b634:	ret
   1b638:	str	x21, [sp, #32]
   1b63c:	b	1b5a8 <omp_get_num_procs@@OMP_1.0+0x134>
   1b640:	ldaxr	w1, [x19]
   1b644:	cmp	w1, w0
   1b648:	b.ne	1b654 <omp_get_num_procs@@OMP_1.0+0x1e0>  // b.any
   1b64c:	stxr	w2, w20, [x19]
   1b650:	cbnz	w2, 1b640 <omp_get_num_procs@@OMP_1.0+0x1cc>
   1b654:	b.ne	1b6c4 <omp_get_num_procs@@OMP_1.0+0x250>  // b.any
   1b658:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b65c:	add	x0, x0, #0x330
   1b660:	ldr	x2, [x0]
   1b664:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b668:	ldr	x1, [x0, #744]
   1b66c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b670:	add	x0, x0, #0x640
   1b674:	cmp	x2, x1
   1b678:	csel	x0, x0, x21, hi  // hi = pmore
   1b67c:	ldr	x1, [x0]
   1b680:	mov	x0, #0x0                   	// #0
   1b684:	cbz	x1, 1b6a0 <omp_get_num_procs@@OMP_1.0+0x22c>
   1b688:	ldr	w2, [x19]
   1b68c:	cmp	w2, w20
   1b690:	b.ne	1b6c0 <omp_get_num_procs@@OMP_1.0+0x24c>  // b.any
   1b694:	add	x0, x0, #0x1
   1b698:	cmp	x0, x1
   1b69c:	b.ne	1b688 <omp_get_num_procs@@OMP_1.0+0x214>  // b.any
   1b6a0:	mov	x4, #0x0                   	// #0
   1b6a4:	mov	w3, w20
   1b6a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b6ac:	ldr	w2, [x0, #832]
   1b6b0:	mov	x1, x19
   1b6b4:	mov	x0, #0x62                  	// #98
   1b6b8:	bl	8ae0 <syscall@plt>
   1b6bc:	tbnz	w0, #31, 1b710 <omp_get_num_procs@@OMP_1.0+0x29c>
   1b6c0:	ldr	w1, [x19]
   1b6c4:	mov	w0, w1
   1b6c8:	ands	w1, w1, #0x7fffffff
   1b6cc:	b.eq	1b640 <omp_get_num_procs@@OMP_1.0+0x1cc>  // b.none
   1b6d0:	sub	w1, w1, #0x1
   1b6d4:	orr	w2, w1, #0x80000000
   1b6d8:	ldaxr	w1, [x19]
   1b6dc:	cmp	w1, w0
   1b6e0:	b.ne	1b6ec <omp_get_num_procs@@OMP_1.0+0x278>  // b.any
   1b6e4:	stxr	w3, w2, [x19]
   1b6e8:	cbnz	w3, 1b6d8 <omp_get_num_procs@@OMP_1.0+0x264>
   1b6ec:	b.ne	1b6c4 <omp_get_num_procs@@OMP_1.0+0x250>  // b.any
   1b6f0:	tst	w0, #0x7ffffffe
   1b6f4:	b.ne	1b700 <omp_get_num_procs@@OMP_1.0+0x28c>  // b.any
   1b6f8:	ldr	x21, [sp, #32]
   1b6fc:	b	1b62c <omp_get_num_procs@@OMP_1.0+0x1b8>
   1b700:	mov	x0, x19
   1b704:	bl	1b488 <omp_get_num_procs@@OMP_1.0+0x14>
   1b708:	ldr	x21, [sp, #32]
   1b70c:	b	1b62c <omp_get_num_procs@@OMP_1.0+0x1b8>
   1b710:	bl	8ac0 <__errno_location@plt>
   1b714:	ldr	w0, [x0]
   1b718:	cmp	w0, #0x26
   1b71c:	b.ne	1b6c0 <omp_get_num_procs@@OMP_1.0+0x24c>  // b.any
   1b720:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b724:	ldr	w2, [x0, #832]
   1b728:	and	w2, w2, #0xffffff7f
   1b72c:	str	w2, [x0, #832]
   1b730:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b734:	ldr	w0, [x1, #836]
   1b738:	and	w0, w0, #0xffffff7f
   1b73c:	str	w0, [x1, #836]
   1b740:	mov	x4, #0x0                   	// #0
   1b744:	mov	w3, w20
   1b748:	mov	x1, x19
   1b74c:	mov	x0, #0x62                  	// #98
   1b750:	bl	8ae0 <syscall@plt>
   1b754:	b	1b6c0 <omp_get_num_procs@@OMP_1.0+0x24c>
   1b758:	stp	x29, x30, [sp, #-64]!
   1b75c:	mov	x29, sp
   1b760:	stp	x19, x20, [sp, #16]
   1b764:	mov	w20, w1
   1b768:	tbnz	w20, #0, 1b794 <omp_get_num_procs@@OMP_1.0+0x320>
   1b76c:	stp	x21, x22, [sp, #32]
   1b770:	str	x23, [sp, #48]
   1b774:	add	x19, x0, #0x4
   1b778:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b77c:	add	x23, x23, #0x630
   1b780:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b784:	add	x22, x22, #0x330
   1b788:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b78c:	add	x21, x21, #0x640
   1b790:	b	1b84c <omp_get_num_procs@@OMP_1.0+0x3d8>
   1b794:	ldr	w1, [x0]
   1b798:	str	w1, [x0, #64]
   1b79c:	add	x19, x0, #0x4
   1b7a0:	ldr	w0, [x0, #4]
   1b7a4:	add	w0, w0, #0x8
   1b7a8:	stlr	w0, [x19]
   1b7ac:	mov	w3, #0x7fffffff            	// #2147483647
   1b7b0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b7b4:	ldr	w2, [x0, #836]
   1b7b8:	mov	x1, x19
   1b7bc:	mov	x0, #0x62                  	// #98
   1b7c0:	bl	8ae0 <syscall@plt>
   1b7c4:	tbz	w0, #31, 1b8c4 <omp_get_num_procs@@OMP_1.0+0x450>
   1b7c8:	bl	8ac0 <__errno_location@plt>
   1b7cc:	ldr	w0, [x0]
   1b7d0:	cmp	w0, #0x26
   1b7d4:	b.ne	1b8c4 <omp_get_num_procs@@OMP_1.0+0x450>  // b.any
   1b7d8:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b7dc:	ldr	w0, [x1, #832]
   1b7e0:	and	w0, w0, #0xffffff7f
   1b7e4:	str	w0, [x1, #832]
   1b7e8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b7ec:	ldr	w2, [x0, #836]
   1b7f0:	and	w2, w2, #0xffffff7f
   1b7f4:	str	w2, [x0, #836]
   1b7f8:	mov	w3, #0x7fffffff            	// #2147483647
   1b7fc:	mov	x1, x19
   1b800:	mov	x0, #0x62                  	// #98
   1b804:	bl	8ae0 <syscall@plt>
   1b808:	b	1b8c4 <omp_get_num_procs@@OMP_1.0+0x450>
   1b80c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b810:	ldr	w2, [x0, #832]
   1b814:	and	w2, w2, #0xffffff7f
   1b818:	str	w2, [x0, #832]
   1b81c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b820:	ldr	w0, [x1, #836]
   1b824:	and	w0, w0, #0xffffff7f
   1b828:	str	w0, [x1, #836]
   1b82c:	mov	x4, #0x0                   	// #0
   1b830:	mov	w3, w20
   1b834:	mov	x1, x19
   1b838:	mov	x0, #0x62                  	// #98
   1b83c:	bl	8ae0 <syscall@plt>
   1b840:	ldar	w0, [x19]
   1b844:	cmp	w0, w20
   1b848:	b.ne	1b8bc <omp_get_num_procs@@OMP_1.0+0x448>  // b.any
   1b84c:	mov	w1, w20
   1b850:	ldr	x2, [x22]
   1b854:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b858:	ldr	x0, [x0, #744]
   1b85c:	cmp	x2, x0
   1b860:	csel	x0, x21, x23, hi  // hi = pmore
   1b864:	ldr	x2, [x0]
   1b868:	cbz	x2, 1b888 <omp_get_num_procs@@OMP_1.0+0x414>
   1b86c:	mov	x0, #0x0                   	// #0
   1b870:	ldr	w3, [x19]
   1b874:	cmp	w1, w3
   1b878:	b.ne	1b840 <omp_get_num_procs@@OMP_1.0+0x3cc>  // b.any
   1b87c:	add	x0, x0, #0x1
   1b880:	cmp	x0, x2
   1b884:	b.ne	1b870 <omp_get_num_procs@@OMP_1.0+0x3fc>  // b.any
   1b888:	mov	x4, #0x0                   	// #0
   1b88c:	mov	w3, w20
   1b890:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b894:	ldr	w2, [x0, #832]
   1b898:	mov	x1, x19
   1b89c:	mov	x0, #0x62                  	// #98
   1b8a0:	bl	8ae0 <syscall@plt>
   1b8a4:	tbz	w0, #31, 1b840 <omp_get_num_procs@@OMP_1.0+0x3cc>
   1b8a8:	bl	8ac0 <__errno_location@plt>
   1b8ac:	ldr	w0, [x0]
   1b8b0:	cmp	w0, #0x26
   1b8b4:	b.ne	1b840 <omp_get_num_procs@@OMP_1.0+0x3cc>  // b.any
   1b8b8:	b	1b80c <omp_get_num_procs@@OMP_1.0+0x398>
   1b8bc:	ldp	x21, x22, [sp, #32]
   1b8c0:	ldr	x23, [sp, #48]
   1b8c4:	ldp	x19, x20, [sp, #16]
   1b8c8:	ldp	x29, x30, [sp], #64
   1b8cc:	ret
   1b8d0:	stp	x29, x30, [sp, #-16]!
   1b8d4:	mov	x29, sp
   1b8d8:	add	x1, x0, #0x4
   1b8dc:	ldar	w1, [x1]
   1b8e0:	and	w1, w1, #0xfffffffc
   1b8e4:	add	x2, x0, #0x40
   1b8e8:	ldaxr	w3, [x2]
   1b8ec:	sub	w3, w3, #0x1
   1b8f0:	stlxr	w4, w3, [x2]
   1b8f4:	cbnz	w4, 1b8e8 <omp_get_num_procs@@OMP_1.0+0x474>
   1b8f8:	orr	w2, w1, #0x1
   1b8fc:	cmp	w3, #0x0
   1b900:	csel	w1, w2, w1, eq  // eq = none
   1b904:	bl	1b758 <omp_get_num_procs@@OMP_1.0+0x2e4>
   1b908:	ldp	x29, x30, [sp], #16
   1b90c:	ret
   1b910:	add	x1, x0, #0x4
   1b914:	ldar	w1, [x1]
   1b918:	and	w1, w1, #0xfffffffc
   1b91c:	add	x2, x0, #0x40
   1b920:	ldaxr	w3, [x2]
   1b924:	sub	w3, w3, #0x1
   1b928:	stlxr	w4, w3, [x2]
   1b92c:	cbnz	w4, 1b920 <omp_get_num_procs@@OMP_1.0+0x4ac>
   1b930:	orr	w2, w1, #0x1
   1b934:	cmp	w3, #0x0
   1b938:	csel	w1, w2, w1, eq  // eq = none
   1b93c:	tbnz	w1, #0, 1b944 <omp_get_num_procs@@OMP_1.0+0x4d0>
   1b940:	ret
   1b944:	stp	x29, x30, [sp, #-16]!
   1b948:	mov	x29, sp
   1b94c:	bl	1b758 <omp_get_num_procs@@OMP_1.0+0x2e4>
   1b950:	ldp	x29, x30, [sp], #16
   1b954:	ret
   1b958:	stp	x29, x30, [sp, #-32]!
   1b95c:	mov	x29, sp
   1b960:	stp	x19, x20, [sp, #16]
   1b964:	add	x20, x0, #0x4
   1b968:	cmp	w1, #0x0
   1b96c:	mov	w0, #0x7fffffff            	// #2147483647
   1b970:	csel	w19, w1, w0, ne  // ne = any
   1b974:	mov	w3, w19
   1b978:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b97c:	ldr	w2, [x0, #836]
   1b980:	mov	x1, x20
   1b984:	mov	x0, #0x62                  	// #98
   1b988:	bl	8ae0 <syscall@plt>
   1b98c:	tbnz	w0, #31, 1b99c <omp_get_num_procs@@OMP_1.0+0x528>
   1b990:	ldp	x19, x20, [sp, #16]
   1b994:	ldp	x29, x30, [sp], #32
   1b998:	ret
   1b99c:	bl	8ac0 <__errno_location@plt>
   1b9a0:	ldr	w0, [x0]
   1b9a4:	cmp	w0, #0x26
   1b9a8:	b.ne	1b990 <omp_get_num_procs@@OMP_1.0+0x51c>  // b.any
   1b9ac:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b9b0:	ldr	w0, [x1, #832]
   1b9b4:	and	w0, w0, #0xffffff7f
   1b9b8:	str	w0, [x1, #832]
   1b9bc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1b9c0:	ldr	w2, [x0, #836]
   1b9c4:	and	w2, w2, #0xffffff7f
   1b9c8:	str	w2, [x0, #836]
   1b9cc:	mov	w3, w19
   1b9d0:	mov	x1, x20
   1b9d4:	mov	x0, #0x62                  	// #98
   1b9d8:	bl	8ae0 <syscall@plt>
   1b9dc:	b	1b990 <omp_get_num_procs@@OMP_1.0+0x51c>
   1b9e0:	stp	x29, x30, [sp, #-80]!
   1b9e4:	mov	x29, sp
   1b9e8:	stp	x19, x20, [sp, #16]
   1b9ec:	mov	x20, x0
   1b9f0:	mov	w19, w1
   1b9f4:	tbnz	w19, #0, 1ba28 <omp_get_num_procs@@OMP_1.0+0x5b4>
   1b9f8:	stp	x21, x22, [sp, #32]
   1b9fc:	stp	x23, x24, [sp, #48]
   1ba00:	str	x25, [sp, #64]
   1ba04:	and	w25, w19, #0xfffffffb
   1ba08:	add	x20, x20, #0x4
   1ba0c:	adrp	x24, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ba10:	add	x24, x24, #0x630
   1ba14:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ba18:	add	x23, x23, #0x330
   1ba1c:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ba20:	add	x22, x22, #0x640
   1ba24:	b	1bb2c <omp_get_num_procs@@OMP_1.0+0x6b8>
   1ba28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ba2c:	ldr	x0, [x0, #4016]
   1ba30:	mrs	x1, tpidr_el0
   1ba34:	add	x0, x1, x0
   1ba38:	ldr	x0, [x0, #16]
   1ba3c:	ldr	w1, [x20]
   1ba40:	str	w1, [x20, #64]
   1ba44:	str	wzr, [x0, #1332]
   1ba48:	ldr	w0, [x0, #1320]
   1ba4c:	cbnz	w0, 1bac0 <omp_get_num_procs@@OMP_1.0+0x64c>
   1ba50:	and	w0, w19, #0xfffffffb
   1ba54:	add	x20, x20, #0x4
   1ba58:	add	w0, w0, #0x7
   1ba5c:	stlr	w0, [x20]
   1ba60:	mov	w3, #0x7fffffff            	// #2147483647
   1ba64:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ba68:	ldr	w2, [x0, #836]
   1ba6c:	mov	x1, x20
   1ba70:	mov	x0, #0x62                  	// #98
   1ba74:	bl	8ae0 <syscall@plt>
   1ba78:	tbz	w0, #31, 1bbb8 <omp_get_num_procs@@OMP_1.0+0x744>
   1ba7c:	bl	8ac0 <__errno_location@plt>
   1ba80:	ldr	w0, [x0]
   1ba84:	cmp	w0, #0x26
   1ba88:	b.ne	1bbb8 <omp_get_num_procs@@OMP_1.0+0x744>  // b.any
   1ba8c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ba90:	ldr	w0, [x1, #832]
   1ba94:	and	w0, w0, #0xffffff7f
   1ba98:	str	w0, [x1, #832]
   1ba9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1baa0:	ldr	w2, [x0, #836]
   1baa4:	and	w2, w2, #0xffffff7f
   1baa8:	str	w2, [x0, #836]
   1baac:	mov	w3, #0x7fffffff            	// #2147483647
   1bab0:	mov	x1, x20
   1bab4:	mov	x0, #0x62                  	// #98
   1bab8:	bl	8ae0 <syscall@plt>
   1babc:	b	1bbb8 <omp_get_num_procs@@OMP_1.0+0x744>
   1bac0:	stp	x21, x22, [sp, #32]
   1bac4:	stp	x23, x24, [sp, #48]
   1bac8:	str	x25, [sp, #64]
   1bacc:	mov	w0, w19
   1bad0:	bl	14518 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8c>
   1bad4:	and	w19, w19, #0xfffffffe
   1bad8:	b	1ba04 <omp_get_num_procs@@OMP_1.0+0x590>
   1badc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bae0:	ldr	w2, [x0, #832]
   1bae4:	and	w2, w2, #0xffffff7f
   1bae8:	str	w2, [x0, #832]
   1baec:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1baf0:	ldr	w0, [x1, #836]
   1baf4:	and	w0, w0, #0xffffff7f
   1baf8:	str	w0, [x1, #836]
   1bafc:	mov	x4, #0x0                   	// #0
   1bb00:	mov	w3, w21
   1bb04:	mov	x1, x20
   1bb08:	mov	x0, #0x62                  	// #98
   1bb0c:	bl	8ae0 <syscall@plt>
   1bb10:	ldar	w0, [x20]
   1bb14:	tbnz	w0, #0, 1bb9c <omp_get_num_procs@@OMP_1.0+0x728>
   1bb18:	and	w1, w0, #0x2
   1bb1c:	orr	w19, w19, w1
   1bb20:	add	w1, w25, #0x8
   1bb24:	cmp	w1, w0
   1bb28:	b.eq	1bbac <omp_get_num_procs@@OMP_1.0+0x738>  // b.none
   1bb2c:	mov	w21, w19
   1bb30:	ldr	x1, [x23]
   1bb34:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bb38:	ldr	x0, [x0, #744]
   1bb3c:	cmp	x1, x0
   1bb40:	csel	x0, x22, x24, hi  // hi = pmore
   1bb44:	ldr	x1, [x0]
   1bb48:	cbz	x1, 1bb68 <omp_get_num_procs@@OMP_1.0+0x6f4>
   1bb4c:	mov	x0, #0x0                   	// #0
   1bb50:	ldr	w2, [x20]
   1bb54:	cmp	w21, w2
   1bb58:	b.ne	1bb10 <omp_get_num_procs@@OMP_1.0+0x69c>  // b.any
   1bb5c:	add	x0, x0, #0x1
   1bb60:	cmp	x0, x1
   1bb64:	b.ne	1bb50 <omp_get_num_procs@@OMP_1.0+0x6dc>  // b.any
   1bb68:	mov	x4, #0x0                   	// #0
   1bb6c:	mov	w3, w21
   1bb70:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bb74:	ldr	w2, [x0, #832]
   1bb78:	mov	x1, x20
   1bb7c:	mov	x0, #0x62                  	// #98
   1bb80:	bl	8ae0 <syscall@plt>
   1bb84:	tbz	w0, #31, 1bb10 <omp_get_num_procs@@OMP_1.0+0x69c>
   1bb88:	bl	8ac0 <__errno_location@plt>
   1bb8c:	ldr	w0, [x0]
   1bb90:	cmp	w0, #0x26
   1bb94:	b.ne	1bb10 <omp_get_num_procs@@OMP_1.0+0x69c>  // b.any
   1bb98:	b	1badc <omp_get_num_procs@@OMP_1.0+0x668>
   1bb9c:	mov	w0, w25
   1bba0:	bl	14518 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8c>
   1bba4:	ldar	w0, [x20]
   1bba8:	b	1bb18 <omp_get_num_procs@@OMP_1.0+0x6a4>
   1bbac:	ldp	x21, x22, [sp, #32]
   1bbb0:	ldp	x23, x24, [sp, #48]
   1bbb4:	ldr	x25, [sp, #64]
   1bbb8:	ldp	x19, x20, [sp, #16]
   1bbbc:	ldp	x29, x30, [sp], #80
   1bbc0:	ret
   1bbc4:	stp	x29, x30, [sp, #-16]!
   1bbc8:	mov	x29, sp
   1bbcc:	add	x1, x0, #0x4
   1bbd0:	ldar	w1, [x1]
   1bbd4:	and	w1, w1, #0xfffffffc
   1bbd8:	add	x2, x0, #0x40
   1bbdc:	ldaxr	w3, [x2]
   1bbe0:	sub	w3, w3, #0x1
   1bbe4:	stlxr	w4, w3, [x2]
   1bbe8:	cbnz	w4, 1bbdc <omp_get_num_procs@@OMP_1.0+0x768>
   1bbec:	orr	w2, w1, #0x1
   1bbf0:	cmp	w3, #0x0
   1bbf4:	csel	w1, w2, w1, eq  // eq = none
   1bbf8:	bl	1b9e0 <omp_get_num_procs@@OMP_1.0+0x56c>
   1bbfc:	ldp	x29, x30, [sp], #16
   1bc00:	ret
   1bc04:	stp	x29, x30, [sp, #-16]!
   1bc08:	mov	x29, sp
   1bc0c:	add	x1, x0, #0x4
   1bc10:	ldar	w1, [x1]
   1bc14:	and	w1, w1, #0xfffffffc
   1bc18:	add	x2, x0, #0x44
   1bc1c:	ldaxr	w3, [x2]
   1bc20:	sub	w3, w3, #0x1
   1bc24:	stlxr	w4, w3, [x2]
   1bc28:	cbnz	w4, 1bc1c <omp_get_num_procs@@OMP_1.0+0x7a8>
   1bc2c:	orr	w2, w1, #0x1
   1bc30:	cmp	w3, #0x0
   1bc34:	csel	w1, w2, w1, eq  // eq = none
   1bc38:	tbnz	w1, #0, 1bc48 <omp_get_num_procs@@OMP_1.0+0x7d4>
   1bc3c:	bl	1b9e0 <omp_get_num_procs@@OMP_1.0+0x56c>
   1bc40:	ldp	x29, x30, [sp], #16
   1bc44:	ret
   1bc48:	ldr	w2, [x0]
   1bc4c:	str	w2, [x0, #68]
   1bc50:	b	1bc3c <omp_get_num_procs@@OMP_1.0+0x7c8>
   1bc54:	stp	x29, x30, [sp, #-80]!
   1bc58:	mov	x29, sp
   1bc5c:	stp	x19, x20, [sp, #16]
   1bc60:	stp	x21, x22, [sp, #32]
   1bc64:	mov	x19, x0
   1bc68:	mov	w22, w1
   1bc6c:	tbnz	w22, #0, 1bca0 <omp_get_num_procs@@OMP_1.0+0x82c>
   1bc70:	tbnz	w22, #2, 1be38 <omp_get_num_procs@@OMP_1.0+0x9c4>
   1bc74:	stp	x23, x24, [sp, #48]
   1bc78:	str	x25, [sp, #64]
   1bc7c:	mov	w20, w22
   1bc80:	add	x19, x19, #0x4
   1bc84:	adrp	x25, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bc88:	add	x25, x25, #0x630
   1bc8c:	adrp	x24, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bc90:	add	x24, x24, #0x330
   1bc94:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bc98:	add	x23, x23, #0x640
   1bc9c:	b	1bda8 <omp_get_num_procs@@OMP_1.0+0x934>
   1bca0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1bca4:	ldr	x0, [x0, #4016]
   1bca8:	mrs	x1, tpidr_el0
   1bcac:	add	x0, x1, x0
   1bcb0:	ldr	x0, [x0, #16]
   1bcb4:	ldr	w1, [x19]
   1bcb8:	str	w1, [x19, #64]
   1bcbc:	str	wzr, [x0, #1332]
   1bcc0:	ldr	w0, [x0, #1320]
   1bcc4:	cbnz	w0, 1bd44 <omp_get_num_procs@@OMP_1.0+0x8d0>
   1bcc8:	add	x19, x19, #0x4
   1bccc:	add	w22, w22, #0x7
   1bcd0:	stlr	w22, [x19]
   1bcd4:	mov	w3, #0x7fffffff            	// #2147483647
   1bcd8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bcdc:	ldr	w2, [x0, #836]
   1bce0:	mov	x1, x19
   1bce4:	mov	x0, #0x62                  	// #98
   1bce8:	bl	8ae0 <syscall@plt>
   1bcec:	mov	x1, x0
   1bcf0:	mov	w0, #0x0                   	// #0
   1bcf4:	tbz	w1, #31, 1be4c <omp_get_num_procs@@OMP_1.0+0x9d8>
   1bcf8:	bl	8ac0 <__errno_location@plt>
   1bcfc:	ldr	w1, [x0]
   1bd00:	mov	w0, #0x0                   	// #0
   1bd04:	cmp	w1, #0x26
   1bd08:	b.ne	1be4c <omp_get_num_procs@@OMP_1.0+0x9d8>  // b.any
   1bd0c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bd10:	ldr	w0, [x1, #832]
   1bd14:	and	w0, w0, #0xffffff7f
   1bd18:	str	w0, [x1, #832]
   1bd1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bd20:	ldr	w2, [x0, #836]
   1bd24:	and	w2, w2, #0xffffff7f
   1bd28:	str	w2, [x0, #836]
   1bd2c:	mov	w3, #0x7fffffff            	// #2147483647
   1bd30:	mov	x1, x19
   1bd34:	mov	x0, #0x62                  	// #98
   1bd38:	bl	8ae0 <syscall@plt>
   1bd3c:	mov	w0, #0x0                   	// #0
   1bd40:	b	1be4c <omp_get_num_procs@@OMP_1.0+0x9d8>
   1bd44:	mov	w0, w22
   1bd48:	bl	14518 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8c>
   1bd4c:	and	w22, w22, #0xfffffffe
   1bd50:	b	1bc70 <omp_get_num_procs@@OMP_1.0+0x7fc>
   1bd54:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bd58:	ldr	w2, [x0, #832]
   1bd5c:	and	w2, w2, #0xffffff7f
   1bd60:	str	w2, [x0, #832]
   1bd64:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bd68:	ldr	w0, [x1, #836]
   1bd6c:	and	w0, w0, #0xffffff7f
   1bd70:	str	w0, [x1, #836]
   1bd74:	mov	x4, #0x0                   	// #0
   1bd78:	mov	w3, w21
   1bd7c:	mov	x1, x19
   1bd80:	mov	x0, #0x62                  	// #98
   1bd84:	bl	8ae0 <syscall@plt>
   1bd88:	ldar	w0, [x19]
   1bd8c:	tbnz	w0, #2, 1be40 <omp_get_num_procs@@OMP_1.0+0x9cc>
   1bd90:	tbnz	w0, #0, 1be18 <omp_get_num_procs@@OMP_1.0+0x9a4>
   1bd94:	and	w1, w0, #0x2
   1bd98:	orr	w20, w20, w1
   1bd9c:	add	w1, w22, #0x8
   1bda0:	cmp	w1, w0
   1bda4:	b.eq	1be28 <omp_get_num_procs@@OMP_1.0+0x9b4>  // b.none
   1bda8:	mov	w21, w20
   1bdac:	ldr	x1, [x24]
   1bdb0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bdb4:	ldr	x0, [x0, #744]
   1bdb8:	cmp	x1, x0
   1bdbc:	csel	x0, x23, x25, hi  // hi = pmore
   1bdc0:	ldr	x2, [x0]
   1bdc4:	cbz	x2, 1bde4 <omp_get_num_procs@@OMP_1.0+0x970>
   1bdc8:	mov	x0, #0x0                   	// #0
   1bdcc:	ldr	w1, [x19]
   1bdd0:	cmp	w21, w1
   1bdd4:	b.ne	1bd88 <omp_get_num_procs@@OMP_1.0+0x914>  // b.any
   1bdd8:	add	x0, x0, #0x1
   1bddc:	cmp	x0, x2
   1bde0:	b.ne	1bdcc <omp_get_num_procs@@OMP_1.0+0x958>  // b.any
   1bde4:	mov	x4, #0x0                   	// #0
   1bde8:	mov	w3, w21
   1bdec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bdf0:	ldr	w2, [x0, #832]
   1bdf4:	mov	x1, x19
   1bdf8:	mov	x0, #0x62                  	// #98
   1bdfc:	bl	8ae0 <syscall@plt>
   1be00:	tbz	w0, #31, 1bd88 <omp_get_num_procs@@OMP_1.0+0x914>
   1be04:	bl	8ac0 <__errno_location@plt>
   1be08:	ldr	w0, [x0]
   1be0c:	cmp	w0, #0x26
   1be10:	b.ne	1bd88 <omp_get_num_procs@@OMP_1.0+0x914>  // b.any
   1be14:	b	1bd54 <omp_get_num_procs@@OMP_1.0+0x8e0>
   1be18:	mov	w0, w22
   1be1c:	bl	14518 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xa8c>
   1be20:	ldar	w0, [x19]
   1be24:	b	1bd94 <omp_get_num_procs@@OMP_1.0+0x920>
   1be28:	mov	w0, #0x0                   	// #0
   1be2c:	ldp	x23, x24, [sp, #48]
   1be30:	ldr	x25, [sp, #64]
   1be34:	b	1be4c <omp_get_num_procs@@OMP_1.0+0x9d8>
   1be38:	mov	w0, #0x1                   	// #1
   1be3c:	b	1be4c <omp_get_num_procs@@OMP_1.0+0x9d8>
   1be40:	mov	w0, #0x1                   	// #1
   1be44:	ldp	x23, x24, [sp, #48]
   1be48:	ldr	x25, [sp, #64]
   1be4c:	ldp	x19, x20, [sp, #16]
   1be50:	ldp	x21, x22, [sp, #32]
   1be54:	ldp	x29, x30, [sp], #80
   1be58:	ret
   1be5c:	stp	x29, x30, [sp, #-16]!
   1be60:	mov	x29, sp
   1be64:	add	x1, x0, #0x4
   1be68:	ldar	w1, [x1]
   1be6c:	and	w1, w1, #0xfffffffc
   1be70:	add	x2, x0, #0x40
   1be74:	ldaxr	w3, [x2]
   1be78:	sub	w3, w3, #0x1
   1be7c:	stlxr	w4, w3, [x2]
   1be80:	cbnz	w4, 1be74 <omp_get_num_procs@@OMP_1.0+0xa00>
   1be84:	orr	w2, w1, #0x1
   1be88:	cmp	w3, #0x0
   1be8c:	csel	w1, w2, w1, eq  // eq = none
   1be90:	bl	1bc54 <omp_get_num_procs@@OMP_1.0+0x7e0>
   1be94:	ldp	x29, x30, [sp], #16
   1be98:	ret
   1be9c:	stp	x29, x30, [sp, #-32]!
   1bea0:	mov	x29, sp
   1bea4:	stp	x19, x20, [sp, #16]
   1bea8:	mov	x19, x0
   1beac:	add	x20, x0, #0x500
   1beb0:	mov	w0, #0x1                   	// #1
   1beb4:	ldaxr	w1, [x20]
   1beb8:	cbnz	w1, 1bec4 <omp_get_num_procs@@OMP_1.0+0xa50>
   1bebc:	stxr	w2, w0, [x20]
   1bec0:	cbnz	w2, 1beb4 <omp_get_num_procs@@OMP_1.0+0xa40>
   1bec4:	cmp	w1, #0x0
   1bec8:	b.ne	1bf50 <omp_get_num_procs@@OMP_1.0+0xadc>  // b.any
   1becc:	ldr	w0, [x19, #132]
   1bed0:	tbnz	w0, #2, 1bf5c <omp_get_num_procs@@OMP_1.0+0xae8>
   1bed4:	orr	w0, w0, #0x4
   1bed8:	str	w0, [x19, #132]
   1bedc:	ldxr	w0, [x20]
   1bee0:	stlxr	w1, wzr, [x20]
   1bee4:	cbnz	w1, 1bedc <omp_get_num_procs@@OMP_1.0+0xa68>
   1bee8:	tbnz	w0, #31, 1bf84 <omp_get_num_procs@@OMP_1.0+0xb10>
   1beec:	add	x19, x19, #0x84
   1bef0:	mov	w3, #0x7fffffff            	// #2147483647
   1bef4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bef8:	ldr	w2, [x0, #836]
   1befc:	mov	x1, x19
   1bf00:	mov	x0, #0x62                  	// #98
   1bf04:	bl	8ae0 <syscall@plt>
   1bf08:	tbz	w0, #31, 1bf6c <omp_get_num_procs@@OMP_1.0+0xaf8>
   1bf0c:	bl	8ac0 <__errno_location@plt>
   1bf10:	ldr	w0, [x0]
   1bf14:	cmp	w0, #0x26
   1bf18:	b.ne	1bf6c <omp_get_num_procs@@OMP_1.0+0xaf8>  // b.any
   1bf1c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bf20:	ldr	w0, [x1, #832]
   1bf24:	and	w0, w0, #0xffffff7f
   1bf28:	str	w0, [x1, #832]
   1bf2c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bf30:	ldr	w2, [x0, #836]
   1bf34:	and	w2, w2, #0xffffff7f
   1bf38:	str	w2, [x0, #836]
   1bf3c:	mov	w3, #0x7fffffff            	// #2147483647
   1bf40:	mov	x1, x19
   1bf44:	mov	x0, #0x62                  	// #98
   1bf48:	bl	8ae0 <syscall@plt>
   1bf4c:	b	1bf6c <omp_get_num_procs@@OMP_1.0+0xaf8>
   1bf50:	mov	x0, x20
   1bf54:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1bf58:	b	1becc <omp_get_num_procs@@OMP_1.0+0xa58>
   1bf5c:	ldxr	w0, [x20]
   1bf60:	stlxr	w1, wzr, [x20]
   1bf64:	cbnz	w1, 1bf5c <omp_get_num_procs@@OMP_1.0+0xae8>
   1bf68:	tbnz	w0, #31, 1bf78 <omp_get_num_procs@@OMP_1.0+0xb04>
   1bf6c:	ldp	x19, x20, [sp, #16]
   1bf70:	ldp	x29, x30, [sp], #32
   1bf74:	ret
   1bf78:	mov	x0, x20
   1bf7c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1bf80:	b	1bf6c <omp_get_num_procs@@OMP_1.0+0xaf8>
   1bf84:	mov	x0, x20
   1bf88:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1bf8c:	b	1beec <omp_get_num_procs@@OMP_1.0+0xa78>
   1bf90:	stp	x29, x30, [sp, #-64]!
   1bf94:	mov	x29, sp
   1bf98:	stp	x19, x20, [sp, #16]
   1bf9c:	stp	x21, x22, [sp, #32]
   1bfa0:	stp	x23, x24, [sp, #48]
   1bfa4:	mov	x24, x0
   1bfa8:	mov	x0, #0x2                   	// #2
   1bfac:	ldxr	x1, [x24]
   1bfb0:	cmp	x1, #0x1
   1bfb4:	b.ne	1bfc0 <omp_get_num_procs@@OMP_1.0+0xb4c>  // b.any
   1bfb8:	stxr	w2, x0, [x24]
   1bfbc:	cbnz	w2, 1bfac <omp_get_num_procs@@OMP_1.0+0xb38>
   1bfc0:	mov	x19, x24
   1bfc4:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bfc8:	add	x22, x22, #0x630
   1bfcc:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bfd0:	add	x21, x21, #0x330
   1bfd4:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bfd8:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bfdc:	add	x20, x20, #0x640
   1bfe0:	b	1c024 <omp_get_num_procs@@OMP_1.0+0xbb0>
   1bfe4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bfe8:	ldr	w2, [x0, #832]
   1bfec:	and	w2, w2, #0xffffff7f
   1bff0:	str	w2, [x0, #832]
   1bff4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1bff8:	ldr	w0, [x1, #836]
   1bffc:	and	w0, w0, #0xffffff7f
   1c000:	str	w0, [x1, #836]
   1c004:	mov	x4, #0x0                   	// #0
   1c008:	mov	w3, #0x2                   	// #2
   1c00c:	mov	x1, x19
   1c010:	mov	x0, #0x62                  	// #98
   1c014:	bl	8ae0 <syscall@plt>
   1c018:	ldr	w1, [x19]
   1c01c:	cmp	w1, #0x2
   1c020:	b.ne	1c08c <omp_get_num_procs@@OMP_1.0+0xc18>  // b.any
   1c024:	ldr	x1, [x21]
   1c028:	ldr	x0, [x23, #744]
   1c02c:	cmp	x1, x0
   1c030:	csel	x1, x20, x22, hi  // hi = pmore
   1c034:	ldr	x2, [x1]
   1c038:	cbz	x2, 1c058 <omp_get_num_procs@@OMP_1.0+0xbe4>
   1c03c:	mov	x1, #0x0                   	// #0
   1c040:	ldr	w0, [x19]
   1c044:	cmp	w0, #0x2
   1c048:	b.ne	1c018 <omp_get_num_procs@@OMP_1.0+0xba4>  // b.any
   1c04c:	add	x1, x1, #0x1
   1c050:	cmp	x1, x2
   1c054:	b.ne	1c040 <omp_get_num_procs@@OMP_1.0+0xbcc>  // b.any
   1c058:	mov	x4, #0x0                   	// #0
   1c05c:	mov	w3, #0x2                   	// #2
   1c060:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c064:	ldr	w2, [x0, #832]
   1c068:	mov	x1, x19
   1c06c:	mov	x0, #0x62                  	// #98
   1c070:	bl	8ae0 <syscall@plt>
   1c074:	tbz	w0, #31, 1c018 <omp_get_num_procs@@OMP_1.0+0xba4>
   1c078:	bl	8ac0 <__errno_location@plt>
   1c07c:	ldr	w0, [x0]
   1c080:	cmp	w0, #0x26
   1c084:	b.ne	1c018 <omp_get_num_procs@@OMP_1.0+0xba4>  // b.any
   1c088:	b	1bfe4 <omp_get_num_procs@@OMP_1.0+0xb70>
   1c08c:	ldar	x0, [x24]
   1c090:	ldp	x19, x20, [sp, #16]
   1c094:	ldp	x21, x22, [sp, #32]
   1c098:	ldp	x23, x24, [sp, #48]
   1c09c:	ldp	x29, x30, [sp], #64
   1c0a0:	ret
   1c0a4:	stp	x29, x30, [sp, #-32]!
   1c0a8:	mov	x29, sp
   1c0ac:	str	x19, [sp, #16]
   1c0b0:	mov	x19, x0
   1c0b4:	mov	w3, #0x7fffffff            	// #2147483647
   1c0b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c0bc:	ldr	w2, [x0, #836]
   1c0c0:	mov	x1, x19
   1c0c4:	mov	x0, #0x62                  	// #98
   1c0c8:	bl	8ae0 <syscall@plt>
   1c0cc:	tbnz	w0, #31, 1c0dc <omp_get_num_procs@@OMP_1.0+0xc68>
   1c0d0:	ldr	x19, [sp, #16]
   1c0d4:	ldp	x29, x30, [sp], #32
   1c0d8:	ret
   1c0dc:	bl	8ac0 <__errno_location@plt>
   1c0e0:	ldr	w0, [x0]
   1c0e4:	cmp	w0, #0x26
   1c0e8:	b.ne	1c0d0 <omp_get_num_procs@@OMP_1.0+0xc5c>  // b.any
   1c0ec:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c0f0:	ldr	w0, [x1, #832]
   1c0f4:	and	w0, w0, #0xffffff7f
   1c0f8:	str	w0, [x1, #832]
   1c0fc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c100:	ldr	w2, [x0, #836]
   1c104:	and	w2, w2, #0xffffff7f
   1c108:	str	w2, [x0, #836]
   1c10c:	mov	w3, #0x7fffffff            	// #2147483647
   1c110:	mov	x1, x19
   1c114:	mov	x0, #0x62                  	// #98
   1c118:	bl	8ae0 <syscall@plt>
   1c11c:	b	1c0d0 <omp_get_num_procs@@OMP_1.0+0xc5c>

000000000001c120 <omp_get_wtime@@OMP_2.0>:
   1c120:	stp	x29, x30, [sp, #-32]!
   1c124:	mov	x29, sp
   1c128:	add	x1, sp, #0x10
   1c12c:	mov	w0, #0x1                   	// #1
   1c130:	bl	86c0 <clock_gettime@plt>
   1c134:	tbnz	w0, #31, 1c164 <omp_get_wtime@@OMP_2.0+0x44>
   1c138:	ldr	d1, [sp, #24]
   1c13c:	scvtf	d1, d1
   1c140:	mov	x0, #0xcd6500000000        	// #225833675390976
   1c144:	movk	x0, #0x41cd, lsl #48
   1c148:	fmov	d0, x0
   1c14c:	fdiv	d1, d1, d0
   1c150:	ldr	d0, [sp, #16]
   1c154:	scvtf	d0, d0
   1c158:	fadd	d0, d1, d0
   1c15c:	ldp	x29, x30, [sp], #32
   1c160:	ret
   1c164:	add	x1, sp, #0x10
   1c168:	mov	w0, #0x0                   	// #0
   1c16c:	bl	86c0 <clock_gettime@plt>
   1c170:	b	1c138 <omp_get_wtime@@OMP_2.0+0x18>

000000000001c174 <omp_get_wtick@@OMP_2.0>:
   1c174:	stp	x29, x30, [sp, #-32]!
   1c178:	mov	x29, sp
   1c17c:	add	x1, sp, #0x10
   1c180:	mov	w0, #0x1                   	// #1
   1c184:	bl	88f0 <clock_getres@plt>
   1c188:	tbnz	w0, #31, 1c1b8 <omp_get_wtick@@OMP_2.0+0x44>
   1c18c:	ldr	d1, [sp, #24]
   1c190:	scvtf	d1, d1
   1c194:	mov	x0, #0xcd6500000000        	// #225833675390976
   1c198:	movk	x0, #0x41cd, lsl #48
   1c19c:	fmov	d0, x0
   1c1a0:	fdiv	d1, d1, d0
   1c1a4:	ldr	d0, [sp, #16]
   1c1a8:	scvtf	d0, d0
   1c1ac:	fadd	d0, d1, d0
   1c1b0:	ldp	x29, x30, [sp], #32
   1c1b4:	ret
   1c1b8:	add	x1, sp, #0x10
   1c1bc:	mov	w0, #0x0                   	// #0
   1c1c0:	bl	88f0 <clock_getres@plt>
   1c1c4:	b	1c18c <omp_get_wtick@@OMP_2.0+0x18>

000000000001c1c8 <omp_init_lock_@@OMP_3.0>:
   1c1c8:	stp	x29, x30, [sp, #-16]!
   1c1cc:	mov	x29, sp
   1c1d0:	bl	1aafc <omp_init_lock@@OMP_3.0>
   1c1d4:	ldp	x29, x30, [sp], #16
   1c1d8:	ret

000000000001c1dc <omp_init_nest_lock_@@OMP_3.0>:
   1c1dc:	stp	x29, x30, [sp, #-32]!
   1c1e0:	mov	x29, sp
   1c1e4:	str	x19, [sp, #16]
   1c1e8:	mov	x19, x0
   1c1ec:	mov	x0, #0x10                  	// #16
   1c1f0:	bl	8760 <malloc@plt>
   1c1f4:	str	x0, [x19]
   1c1f8:	bl	1ab84 <omp_init_nest_lock@@OMP_3.0>
   1c1fc:	ldr	x19, [sp, #16]
   1c200:	ldp	x29, x30, [sp], #32
   1c204:	ret

000000000001c208 <omp_destroy_lock_@@OMP_3.0>:
   1c208:	stp	x29, x30, [sp, #-16]!
   1c20c:	mov	x29, sp
   1c210:	bl	1ab04 <omp_destroy_lock@OMP_1.0>
   1c214:	ldp	x29, x30, [sp], #16
   1c218:	ret

000000000001c21c <omp_destroy_nest_lock_@@OMP_3.0>:
   1c21c:	stp	x29, x30, [sp, #-32]!
   1c220:	mov	x29, sp
   1c224:	str	x19, [sp, #16]
   1c228:	mov	x19, x0
   1c22c:	ldr	x0, [x0]
   1c230:	bl	1ab8c <omp_destroy_nest_lock@@OMP_3.0>
   1c234:	ldr	x0, [x19]
   1c238:	bl	8900 <free@plt>
   1c23c:	str	xzr, [x19]
   1c240:	ldr	x19, [sp, #16]
   1c244:	ldp	x29, x30, [sp], #32
   1c248:	ret

000000000001c24c <omp_set_lock_@@OMP_3.0>:
   1c24c:	stp	x29, x30, [sp, #-16]!
   1c250:	mov	x29, sp
   1c254:	bl	1ab08 <omp_set_lock@@OMP_3.0>
   1c258:	ldp	x29, x30, [sp], #16
   1c25c:	ret

000000000001c260 <omp_set_nest_lock_@@OMP_3.0>:
   1c260:	stp	x29, x30, [sp, #-16]!
   1c264:	mov	x29, sp
   1c268:	ldr	x0, [x0]
   1c26c:	bl	1ab90 <omp_set_nest_lock@@OMP_3.0>
   1c270:	ldp	x29, x30, [sp], #16
   1c274:	ret

000000000001c278 <omp_unset_lock_@@OMP_3.0>:
   1c278:	stp	x29, x30, [sp, #-16]!
   1c27c:	mov	x29, sp
   1c280:	bl	1ab3c <omp_unset_lock@@OMP_3.0>
   1c284:	ldp	x29, x30, [sp], #16
   1c288:	ret

000000000001c28c <omp_unset_nest_lock_@@OMP_3.0>:
   1c28c:	stp	x29, x30, [sp, #-16]!
   1c290:	mov	x29, sp
   1c294:	ldr	x0, [x0]
   1c298:	bl	1ac18 <omp_unset_nest_lock@@OMP_3.0>
   1c29c:	ldp	x29, x30, [sp], #16
   1c2a0:	ret

000000000001c2a4 <omp_test_lock_@@OMP_3.0>:
   1c2a4:	stp	x29, x30, [sp, #-16]!
   1c2a8:	mov	x29, sp
   1c2ac:	bl	1ab64 <omp_test_lock@OMP_1.0>
   1c2b0:	ldp	x29, x30, [sp], #16
   1c2b4:	ret

000000000001c2b8 <omp_test_nest_lock_@@OMP_3.0>:
   1c2b8:	stp	x29, x30, [sp, #-16]!
   1c2bc:	mov	x29, sp
   1c2c0:	ldr	x0, [x0]
   1c2c4:	bl	1ac58 <omp_test_nest_lock@@OMP_3.0>
   1c2c8:	ldp	x29, x30, [sp], #16
   1c2cc:	ret

000000000001c2d0 <omp_init_lock_@OMP_1.0>:
   1c2d0:	stp	x29, x30, [sp, #-16]!
   1c2d4:	mov	x29, sp
   1c2d8:	bl	1aafc <omp_init_lock@@OMP_3.0>
   1c2dc:	ldp	x29, x30, [sp], #16
   1c2e0:	ret

000000000001c2e4 <omp_init_nest_lock_@OMP_1.0>:
   1c2e4:	stp	x29, x30, [sp, #-16]!
   1c2e8:	mov	x29, sp
   1c2ec:	bl	1ace4 <omp_init_nest_lock@OMP_1.0>
   1c2f0:	ldp	x29, x30, [sp], #16
   1c2f4:	ret

000000000001c2f8 <omp_destroy_lock_@OMP_1.0>:
   1c2f8:	stp	x29, x30, [sp, #-16]!
   1c2fc:	mov	x29, sp
   1c300:	bl	1ab04 <omp_destroy_lock@OMP_1.0>
   1c304:	ldp	x29, x30, [sp], #16
   1c308:	ret

000000000001c30c <omp_destroy_nest_lock_@OMP_1.0>:
   1c30c:	stp	x29, x30, [sp, #-16]!
   1c310:	mov	x29, sp
   1c314:	bl	1acec <omp_destroy_nest_lock@OMP_1.0>
   1c318:	ldp	x29, x30, [sp], #16
   1c31c:	ret

000000000001c320 <omp_set_lock_@OMP_1.0>:
   1c320:	stp	x29, x30, [sp, #-16]!
   1c324:	mov	x29, sp
   1c328:	bl	1ab08 <omp_set_lock@@OMP_3.0>
   1c32c:	ldp	x29, x30, [sp], #16
   1c330:	ret

000000000001c334 <omp_set_nest_lock_@OMP_1.0>:
   1c334:	stp	x29, x30, [sp, #-16]!
   1c338:	mov	x29, sp
   1c33c:	bl	1acf0 <omp_set_nest_lock@OMP_1.0>
   1c340:	ldp	x29, x30, [sp], #16
   1c344:	ret

000000000001c348 <omp_unset_lock_@OMP_1.0>:
   1c348:	stp	x29, x30, [sp, #-16]!
   1c34c:	mov	x29, sp
   1c350:	bl	1ab3c <omp_unset_lock@@OMP_3.0>
   1c354:	ldp	x29, x30, [sp], #16
   1c358:	ret

000000000001c35c <omp_unset_nest_lock_@OMP_1.0>:
   1c35c:	stp	x29, x30, [sp, #-16]!
   1c360:	mov	x29, sp
   1c364:	bl	1ae48 <omp_unset_nest_lock@OMP_1.0>
   1c368:	ldp	x29, x30, [sp], #16
   1c36c:	ret

000000000001c370 <omp_test_lock_@OMP_1.0>:
   1c370:	stp	x29, x30, [sp, #-16]!
   1c374:	mov	x29, sp
   1c378:	bl	1ab64 <omp_test_lock@OMP_1.0>
   1c37c:	ldp	x29, x30, [sp], #16
   1c380:	ret

000000000001c384 <omp_test_nest_lock_@OMP_1.0>:
   1c384:	stp	x29, x30, [sp, #-16]!
   1c388:	mov	x29, sp
   1c38c:	bl	1aed8 <omp_test_nest_lock@OMP_1.0>
   1c390:	ldp	x29, x30, [sp], #16
   1c394:	ret

000000000001c398 <omp_set_dynamic_@@OMP_1.0>:
   1c398:	stp	x29, x30, [sp, #-16]!
   1c39c:	mov	x29, sp
   1c3a0:	ldr	w0, [x0]
   1c3a4:	bl	b878 <omp_set_dynamic@@OMP_1.0>
   1c3a8:	ldp	x29, x30, [sp], #16
   1c3ac:	ret

000000000001c3b0 <omp_set_dynamic_8_@@OMP_1.0>:
   1c3b0:	stp	x29, x30, [sp, #-16]!
   1c3b4:	mov	x29, sp
   1c3b8:	ldr	x0, [x0]
   1c3bc:	cmp	x0, #0x0
   1c3c0:	cset	w0, ne  // ne = any
   1c3c4:	bl	b878 <omp_set_dynamic@@OMP_1.0>
   1c3c8:	ldp	x29, x30, [sp], #16
   1c3cc:	ret

000000000001c3d0 <omp_set_nested_@@OMP_1.0>:
   1c3d0:	stp	x29, x30, [sp, #-16]!
   1c3d4:	mov	x29, sp
   1c3d8:	ldr	w0, [x0]
   1c3dc:	bl	b8f8 <omp_set_nested@@OMP_1.0>
   1c3e0:	ldp	x29, x30, [sp], #16
   1c3e4:	ret

000000000001c3e8 <omp_set_nested_8_@@OMP_1.0>:
   1c3e8:	stp	x29, x30, [sp, #-16]!
   1c3ec:	mov	x29, sp
   1c3f0:	ldr	x0, [x0]
   1c3f4:	cmp	x0, #0x0
   1c3f8:	cset	w0, ne  // ne = any
   1c3fc:	bl	b8f8 <omp_set_nested@@OMP_1.0>
   1c400:	ldp	x29, x30, [sp], #16
   1c404:	ret

000000000001c408 <omp_set_num_threads_@@OMP_1.0>:
   1c408:	stp	x29, x30, [sp, #-16]!
   1c40c:	mov	x29, sp
   1c410:	ldr	w0, [x0]
   1c414:	bl	b828 <omp_set_num_threads@@OMP_1.0>
   1c418:	ldp	x29, x30, [sp], #16
   1c41c:	ret

000000000001c420 <omp_set_num_threads_8_@@OMP_1.0>:
   1c420:	stp	x29, x30, [sp, #-16]!
   1c424:	mov	x29, sp
   1c428:	ldr	x1, [x0]
   1c42c:	mov	w0, #0x80000000            	// #-2147483648
   1c430:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1c434:	cmp	x1, x2
   1c438:	b.lt	1c448 <omp_set_num_threads_8_@@OMP_1.0+0x28>  // b.tstop
   1c43c:	mov	x0, #0x7fffffff            	// #2147483647
   1c440:	cmp	x1, x0
   1c444:	csel	x0, x1, x0, le
   1c448:	bl	b828 <omp_set_num_threads@@OMP_1.0>
   1c44c:	ldp	x29, x30, [sp], #16
   1c450:	ret

000000000001c454 <omp_get_dynamic_@@OMP_1.0>:
   1c454:	stp	x29, x30, [sp, #-16]!
   1c458:	mov	x29, sp
   1c45c:	bl	b8c8 <omp_get_dynamic@@OMP_1.0>
   1c460:	ldp	x29, x30, [sp], #16
   1c464:	ret

000000000001c468 <omp_get_nested_@@OMP_1.0>:
   1c468:	stp	x29, x30, [sp, #-16]!
   1c46c:	mov	x29, sp
   1c470:	bl	b948 <omp_get_nested@@OMP_1.0>
   1c474:	ldp	x29, x30, [sp], #16
   1c478:	ret

000000000001c47c <omp_in_parallel_@@OMP_1.0>:
   1c47c:	stp	x29, x30, [sp, #-16]!
   1c480:	mov	x29, sp
   1c484:	bl	119e8 <omp_in_parallel@@OMP_1.0>
   1c488:	ldp	x29, x30, [sp], #16
   1c48c:	ret

000000000001c490 <omp_get_max_threads_@@OMP_1.0>:
   1c490:	stp	x29, x30, [sp, #-16]!
   1c494:	mov	x29, sp
   1c498:	bl	ba40 <omp_get_max_threads@@OMP_1.0>
   1c49c:	ldp	x29, x30, [sp], #16
   1c4a0:	ret

000000000001c4a4 <omp_get_num_procs_@@OMP_1.0>:
   1c4a4:	stp	x29, x30, [sp, #-16]!
   1c4a8:	mov	x29, sp
   1c4ac:	bl	1b474 <omp_get_num_procs@@OMP_1.0>
   1c4b0:	ldp	x29, x30, [sp], #16
   1c4b4:	ret

000000000001c4b8 <omp_get_num_threads_@@OMP_1.0>:
   1c4b8:	stp	x29, x30, [sp, #-16]!
   1c4bc:	mov	x29, sp
   1c4c0:	bl	119ac <omp_get_num_threads@@OMP_1.0>
   1c4c4:	ldp	x29, x30, [sp], #16
   1c4c8:	ret

000000000001c4cc <omp_get_thread_num_@@OMP_1.0>:
   1c4cc:	stp	x29, x30, [sp, #-16]!
   1c4d0:	mov	x29, sp
   1c4d4:	bl	119d0 <omp_get_thread_num@@OMP_1.0>
   1c4d8:	ldp	x29, x30, [sp], #16
   1c4dc:	ret

000000000001c4e0 <omp_get_wtick_@@OMP_2.0>:
   1c4e0:	stp	x29, x30, [sp, #-16]!
   1c4e4:	mov	x29, sp
   1c4e8:	bl	1c174 <omp_get_wtick@@OMP_2.0>
   1c4ec:	ldp	x29, x30, [sp], #16
   1c4f0:	ret

000000000001c4f4 <omp_get_wtime_@@OMP_2.0>:
   1c4f4:	stp	x29, x30, [sp, #-16]!
   1c4f8:	mov	x29, sp
   1c4fc:	bl	1c120 <omp_get_wtime@@OMP_2.0>
   1c500:	ldp	x29, x30, [sp], #16
   1c504:	ret

000000000001c508 <omp_set_schedule_@@OMP_3.0>:
   1c508:	stp	x29, x30, [sp, #-16]!
   1c50c:	mov	x29, sp
   1c510:	ldr	w1, [x1]
   1c514:	ldr	w0, [x0]
   1c518:	bl	b978 <omp_set_schedule@@OMP_3.0>
   1c51c:	ldp	x29, x30, [sp], #16
   1c520:	ret

000000000001c524 <omp_set_schedule_8_@@OMP_3.0>:
   1c524:	stp	x29, x30, [sp, #-16]!
   1c528:	mov	x29, sp
   1c52c:	ldr	w0, [x0]
   1c530:	ldr	x2, [x1]
   1c534:	mov	w1, #0x80000000            	// #-2147483648
   1c538:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1c53c:	cmp	x2, x3
   1c540:	b.lt	1c550 <omp_set_schedule_8_@@OMP_3.0+0x2c>  // b.tstop
   1c544:	mov	x1, #0x7fffffff            	// #2147483647
   1c548:	cmp	x2, x1
   1c54c:	csel	x1, x2, x1, le
   1c550:	bl	b978 <omp_set_schedule@@OMP_3.0>
   1c554:	ldp	x29, x30, [sp], #16
   1c558:	ret

000000000001c55c <omp_get_schedule_@@OMP_3.0>:
   1c55c:	stp	x29, x30, [sp, #-48]!
   1c560:	mov	x29, sp
   1c564:	stp	x19, x20, [sp, #16]
   1c568:	mov	x20, x0
   1c56c:	mov	x19, x1
   1c570:	add	x1, sp, #0x28
   1c574:	add	x0, sp, #0x2c
   1c578:	bl	ba04 <omp_get_schedule@@OMP_3.0>
   1c57c:	ldr	w0, [sp, #44]
   1c580:	and	w0, w0, #0x7fffffff
   1c584:	str	w0, [x20]
   1c588:	ldr	w0, [sp, #40]
   1c58c:	str	w0, [x19]
   1c590:	ldp	x19, x20, [sp, #16]
   1c594:	ldp	x29, x30, [sp], #48
   1c598:	ret

000000000001c59c <omp_get_schedule_8_@@OMP_3.0>:
   1c59c:	stp	x29, x30, [sp, #-48]!
   1c5a0:	mov	x29, sp
   1c5a4:	stp	x19, x20, [sp, #16]
   1c5a8:	mov	x20, x0
   1c5ac:	mov	x19, x1
   1c5b0:	add	x1, sp, #0x28
   1c5b4:	add	x0, sp, #0x2c
   1c5b8:	bl	ba04 <omp_get_schedule@@OMP_3.0>
   1c5bc:	ldr	w0, [sp, #44]
   1c5c0:	and	w0, w0, #0x7fffffff
   1c5c4:	str	w0, [x20]
   1c5c8:	ldrsw	x0, [sp, #40]
   1c5cc:	str	x0, [x19]
   1c5d0:	ldp	x19, x20, [sp, #16]
   1c5d4:	ldp	x29, x30, [sp], #48
   1c5d8:	ret

000000000001c5dc <omp_get_thread_limit_@@OMP_3.0>:
   1c5dc:	stp	x29, x30, [sp, #-16]!
   1c5e0:	mov	x29, sp
   1c5e4:	bl	ba70 <omp_get_thread_limit@@OMP_3.0>
   1c5e8:	ldp	x29, x30, [sp], #16
   1c5ec:	ret

000000000001c5f0 <omp_set_max_active_levels_@@OMP_3.0>:
   1c5f0:	stp	x29, x30, [sp, #-16]!
   1c5f4:	mov	x29, sp
   1c5f8:	ldr	w0, [x0]
   1c5fc:	bl	baac <omp_set_max_active_levels@@OMP_3.0>
   1c600:	ldp	x29, x30, [sp], #16
   1c604:	ret

000000000001c608 <omp_set_max_active_levels_8_@@OMP_3.0>:
   1c608:	stp	x29, x30, [sp, #-16]!
   1c60c:	mov	x29, sp
   1c610:	ldr	x1, [x0]
   1c614:	mov	w0, #0x80000000            	// #-2147483648
   1c618:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1c61c:	cmp	x1, x2
   1c620:	b.lt	1c630 <omp_set_max_active_levels_8_@@OMP_3.0+0x28>  // b.tstop
   1c624:	mov	x0, #0x7fffffff            	// #2147483647
   1c628:	cmp	x1, x0
   1c62c:	csel	x0, x1, x0, le
   1c630:	bl	baac <omp_set_max_active_levels@@OMP_3.0>
   1c634:	ldp	x29, x30, [sp], #16
   1c638:	ret

000000000001c63c <omp_get_max_active_levels_@@OMP_3.0>:
   1c63c:	stp	x29, x30, [sp, #-16]!
   1c640:	mov	x29, sp
   1c644:	bl	bac0 <omp_get_max_active_levels@@OMP_3.0>
   1c648:	ldp	x29, x30, [sp], #16
   1c64c:	ret

000000000001c650 <omp_get_level_@@OMP_3.0>:
   1c650:	stp	x29, x30, [sp, #-16]!
   1c654:	mov	x29, sp
   1c658:	bl	11a08 <omp_get_level@@OMP_3.0>
   1c65c:	ldp	x29, x30, [sp], #16
   1c660:	ret

000000000001c664 <omp_get_ancestor_thread_num_@@OMP_3.0>:
   1c664:	stp	x29, x30, [sp, #-16]!
   1c668:	mov	x29, sp
   1c66c:	ldr	w0, [x0]
   1c670:	bl	11a20 <omp_get_ancestor_thread_num@@OMP_3.0>
   1c674:	ldp	x29, x30, [sp], #16
   1c678:	ret

000000000001c67c <omp_get_ancestor_thread_num_8_@@OMP_3.0>:
   1c67c:	stp	x29, x30, [sp, #-16]!
   1c680:	mov	x29, sp
   1c684:	ldr	x0, [x0]
   1c688:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1c68c:	cmp	x0, x1
   1c690:	b.lt	1c6ac <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x30>  // b.tstop
   1c694:	mov	x1, #0x7fffffff            	// #2147483647
   1c698:	cmp	x0, x1
   1c69c:	csel	x0, x0, x1, le
   1c6a0:	bl	11a20 <omp_get_ancestor_thread_num@@OMP_3.0>
   1c6a4:	ldp	x29, x30, [sp], #16
   1c6a8:	ret
   1c6ac:	mov	w0, #0x80000000            	// #-2147483648
   1c6b0:	b	1c6a0 <omp_get_ancestor_thread_num_8_@@OMP_3.0+0x24>

000000000001c6b4 <omp_get_team_size_@@OMP_3.0>:
   1c6b4:	stp	x29, x30, [sp, #-16]!
   1c6b8:	mov	x29, sp
   1c6bc:	ldr	w0, [x0]
   1c6c0:	bl	11aa0 <omp_get_team_size@@OMP_3.0>
   1c6c4:	ldp	x29, x30, [sp], #16
   1c6c8:	ret

000000000001c6cc <omp_get_team_size_8_@@OMP_3.0>:
   1c6cc:	stp	x29, x30, [sp, #-16]!
   1c6d0:	mov	x29, sp
   1c6d4:	ldr	x0, [x0]
   1c6d8:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1c6dc:	cmp	x0, x1
   1c6e0:	b.lt	1c6fc <omp_get_team_size_8_@@OMP_3.0+0x30>  // b.tstop
   1c6e4:	mov	x1, #0x7fffffff            	// #2147483647
   1c6e8:	cmp	x0, x1
   1c6ec:	csel	x0, x0, x1, le
   1c6f0:	bl	11aa0 <omp_get_team_size@@OMP_3.0>
   1c6f4:	ldp	x29, x30, [sp], #16
   1c6f8:	ret
   1c6fc:	mov	w0, #0x80000000            	// #-2147483648
   1c700:	b	1c6f0 <omp_get_team_size_8_@@OMP_3.0+0x24>

000000000001c704 <omp_get_active_level_@@OMP_3.0>:
   1c704:	stp	x29, x30, [sp, #-16]!
   1c708:	mov	x29, sp
   1c70c:	bl	11b2c <omp_get_active_level@@OMP_3.0>
   1c710:	ldp	x29, x30, [sp], #16
   1c714:	ret

000000000001c718 <omp_in_final_@@OMP_3.1>:
   1c718:	stp	x29, x30, [sp, #-16]!
   1c71c:	mov	x29, sp
   1c720:	bl	18be0 <omp_in_final@@OMP_3.1>
   1c724:	ldp	x29, x30, [sp], #16
   1c728:	ret

000000000001c72c <omp_get_cancellation_@@OMP_4.0>:
   1c72c:	stp	x29, x30, [sp, #-16]!
   1c730:	mov	x29, sp
   1c734:	bl	bacc <omp_get_cancellation@@OMP_4.0>
   1c738:	ldp	x29, x30, [sp], #16
   1c73c:	ret

000000000001c740 <omp_get_proc_bind_@@OMP_4.0>:
   1c740:	stp	x29, x30, [sp, #-16]!
   1c744:	mov	x29, sp
   1c748:	bl	bae4 <omp_get_proc_bind@@OMP_4.0>
   1c74c:	ldp	x29, x30, [sp], #16
   1c750:	ret

000000000001c754 <omp_get_num_places_@@OMP_4.5>:
   1c754:	stp	x29, x30, [sp, #-16]!
   1c758:	mov	x29, sp
   1c75c:	bl	bb1c <omp_get_num_places@@OMP_4.5>
   1c760:	ldp	x29, x30, [sp], #16
   1c764:	ret

000000000001c768 <omp_get_place_num_procs_@@OMP_4.5>:
   1c768:	stp	x29, x30, [sp, #-16]!
   1c76c:	mov	x29, sp
   1c770:	ldr	w0, [x0]
   1c774:	bl	1d8d4 <omp_get_place_num_procs@@OMP_4.5>
   1c778:	ldp	x29, x30, [sp], #16
   1c77c:	ret

000000000001c780 <omp_get_place_num_procs_8_@@OMP_4.5>:
   1c780:	stp	x29, x30, [sp, #-16]!
   1c784:	mov	x29, sp
   1c788:	ldr	x0, [x0]
   1c78c:	mov	x1, #0xffffffff80000001    	// #-2147483647
   1c790:	cmp	x0, x1
   1c794:	b.lt	1c7b0 <omp_get_place_num_procs_8_@@OMP_4.5+0x30>  // b.tstop
   1c798:	mov	x1, #0x7fffffff            	// #2147483647
   1c79c:	cmp	x0, x1
   1c7a0:	csel	x0, x0, x1, le
   1c7a4:	bl	1d8d4 <omp_get_place_num_procs@@OMP_4.5>
   1c7a8:	ldp	x29, x30, [sp], #16
   1c7ac:	ret
   1c7b0:	mov	w0, #0x80000000            	// #-2147483648
   1c7b4:	b	1c7a4 <omp_get_place_num_procs_8_@@OMP_4.5+0x24>

000000000001c7b8 <omp_get_place_proc_ids_@@OMP_4.5>:
   1c7b8:	stp	x29, x30, [sp, #-16]!
   1c7bc:	mov	x29, sp
   1c7c0:	ldr	w0, [x0]
   1c7c4:	bl	1d928 <omp_get_place_proc_ids@@OMP_4.5>
   1c7c8:	ldp	x29, x30, [sp], #16
   1c7cc:	ret

000000000001c7d0 <omp_get_place_proc_ids_8_@@OMP_4.5>:
   1c7d0:	stp	x29, x30, [sp, #-16]!
   1c7d4:	mov	x29, sp
   1c7d8:	ldr	x2, [x0]
   1c7dc:	mov	w0, #0x80000000            	// #-2147483648
   1c7e0:	mov	x3, #0xffffffff80000001    	// #-2147483647
   1c7e4:	cmp	x2, x3
   1c7e8:	b.lt	1c7f8 <omp_get_place_proc_ids_8_@@OMP_4.5+0x28>  // b.tstop
   1c7ec:	mov	x0, #0x7fffffff            	// #2147483647
   1c7f0:	cmp	x2, x0
   1c7f4:	csel	x0, x2, x0, le
   1c7f8:	bl	1d9a0 <omp_get_place_proc_ids@@OMP_4.5+0x78>
   1c7fc:	ldp	x29, x30, [sp], #16
   1c800:	ret

000000000001c804 <omp_get_place_num_@@OMP_4.5>:
   1c804:	stp	x29, x30, [sp, #-16]!
   1c808:	mov	x29, sp
   1c80c:	bl	bb28 <omp_get_place_num@@OMP_4.5>
   1c810:	ldp	x29, x30, [sp], #16
   1c814:	ret

000000000001c818 <omp_get_partition_num_places_@@OMP_4.5>:
   1c818:	stp	x29, x30, [sp, #-16]!
   1c81c:	mov	x29, sp
   1c820:	bl	bb9c <omp_get_partition_num_places@@OMP_4.5>
   1c824:	ldp	x29, x30, [sp], #16
   1c828:	ret

000000000001c82c <omp_get_partition_place_nums_@@OMP_4.5>:
   1c82c:	stp	x29, x30, [sp, #-16]!
   1c830:	mov	x29, sp
   1c834:	bl	bc08 <omp_get_partition_place_nums@@OMP_4.5>
   1c838:	ldp	x29, x30, [sp], #16
   1c83c:	ret

000000000001c840 <omp_get_partition_place_nums_8_@@OMP_4.5>:
   1c840:	stp	x29, x30, [sp, #-32]!
   1c844:	mov	x29, sp
   1c848:	str	x19, [sp, #16]
   1c84c:	mov	x19, x0
   1c850:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c854:	ldr	x0, [x0, #1568]
   1c858:	cbz	x0, 1c8bc <omp_get_partition_place_nums_8_@@OMP_4.5+0x7c>
   1c85c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1c860:	ldr	x0, [x0, #4016]
   1c864:	mrs	x1, tpidr_el0
   1c868:	add	x0, x1, x0
   1c86c:	ldr	w0, [x0, #92]
   1c870:	cbz	w0, 1c8c8 <omp_get_partition_place_nums_8_@@OMP_4.5+0x88>
   1c874:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1c878:	ldr	x0, [x0, #4016]
   1c87c:	mrs	x1, tpidr_el0
   1c880:	add	x0, x1, x0
   1c884:	ldr	w0, [x0, #56]
   1c888:	cbz	w0, 1c8bc <omp_get_partition_place_nums_8_@@OMP_4.5+0x7c>
   1c88c:	mov	x1, #0x0                   	// #0
   1c890:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1c894:	ldr	x3, [x3, #4016]
   1c898:	mrs	x2, tpidr_el0
   1c89c:	add	x3, x2, x3
   1c8a0:	ldr	w2, [x3, #52]
   1c8a4:	add	x2, x2, w1, uxtw
   1c8a8:	str	x2, [x19, x1, lsl #3]
   1c8ac:	add	x1, x1, #0x1
   1c8b0:	ldr	w2, [x3, #56]
   1c8b4:	cmp	w2, w1
   1c8b8:	b.hi	1c8a0 <omp_get_partition_place_nums_8_@@OMP_4.5+0x60>  // b.pmore
   1c8bc:	ldr	x19, [sp, #16]
   1c8c0:	ldp	x29, x30, [sp], #32
   1c8c4:	ret
   1c8c8:	bl	1d71c <omp_pause_resource_all_@@OMP_5.0+0x9f8>
   1c8cc:	b	1c874 <omp_get_partition_place_nums_8_@@OMP_4.5+0x34>

000000000001c8d0 <omp_set_default_device_@@OMP_4.0>:
   1c8d0:	stp	x29, x30, [sp, #-16]!
   1c8d4:	mov	x29, sp
   1c8d8:	ldr	w0, [x0]
   1c8dc:	bl	bc98 <omp_set_default_device@@OMP_4.0>
   1c8e0:	ldp	x29, x30, [sp], #16
   1c8e4:	ret

000000000001c8e8 <omp_set_default_device_8_@@OMP_4.0>:
   1c8e8:	stp	x29, x30, [sp, #-16]!
   1c8ec:	mov	x29, sp
   1c8f0:	ldr	x1, [x0]
   1c8f4:	mov	w0, #0x80000000            	// #-2147483648
   1c8f8:	mov	x2, #0xffffffff80000001    	// #-2147483647
   1c8fc:	cmp	x1, x2
   1c900:	b.lt	1c910 <omp_set_default_device_8_@@OMP_4.0+0x28>  // b.tstop
   1c904:	mov	x0, #0x7fffffff            	// #2147483647
   1c908:	cmp	x1, x0
   1c90c:	csel	x0, x1, x0, le
   1c910:	bl	bc98 <omp_set_default_device@@OMP_4.0>
   1c914:	ldp	x29, x30, [sp], #16
   1c918:	ret

000000000001c91c <omp_get_default_device_@@OMP_4.0>:
   1c91c:	stp	x29, x30, [sp, #-16]!
   1c920:	mov	x29, sp
   1c924:	bl	bce4 <omp_get_default_device@@OMP_4.0>
   1c928:	ldp	x29, x30, [sp], #16
   1c92c:	ret

000000000001c930 <omp_get_num_devices_@@OMP_4.0>:
   1c930:	stp	x29, x30, [sp, #-16]!
   1c934:	mov	x29, sp
   1c938:	bl	bd14 <omp_get_num_devices@@OMP_4.0>
   1c93c:	ldp	x29, x30, [sp], #16
   1c940:	ret

000000000001c944 <omp_get_num_teams_@@OMP_4.0>:
   1c944:	stp	x29, x30, [sp, #-16]!
   1c948:	mov	x29, sp
   1c94c:	bl	2872c <omp_get_num_teams@@OMP_4.0>
   1c950:	ldp	x29, x30, [sp], #16
   1c954:	ret

000000000001c958 <omp_get_team_num_@@OMP_4.0>:
   1c958:	stp	x29, x30, [sp, #-16]!
   1c95c:	mov	x29, sp
   1c960:	bl	28738 <omp_get_team_num@@OMP_4.0>
   1c964:	ldp	x29, x30, [sp], #16
   1c968:	ret

000000000001c96c <omp_is_initial_device_@@OMP_4.0>:
   1c96c:	stp	x29, x30, [sp, #-16]!
   1c970:	mov	x29, sp
   1c974:	bl	bd28 <omp_is_initial_device@@OMP_4.0>
   1c978:	ldp	x29, x30, [sp], #16
   1c97c:	ret

000000000001c980 <omp_get_initial_device_@@OMP_4.5>:
   1c980:	stp	x29, x30, [sp, #-16]!
   1c984:	mov	x29, sp
   1c988:	bl	bb14 <omp_get_initial_device@@OMP_4.5>
   1c98c:	ldp	x29, x30, [sp], #16
   1c990:	ret

000000000001c994 <omp_get_max_task_priority_@@OMP_4.5>:
   1c994:	stp	x29, x30, [sp, #-16]!
   1c998:	mov	x29, sp
   1c99c:	bl	bad8 <omp_get_max_task_priority@@OMP_4.5>
   1c9a0:	ldp	x29, x30, [sp], #16
   1c9a4:	ret

000000000001c9a8 <omp_set_affinity_format_@@OMP_5.0>:
   1c9a8:	stp	x29, x30, [sp, #-16]!
   1c9ac:	mov	x29, sp
   1c9b0:	bl	27aa0 <acc_set_cuda_stream@@OACC_2.0+0x5ec>
   1c9b4:	ldp	x29, x30, [sp], #16
   1c9b8:	ret

000000000001c9bc <omp_get_affinity_format_@@OMP_5.0>:
   1c9bc:	stp	x29, x30, [sp, #-48]!
   1c9c0:	mov	x29, sp
   1c9c4:	stp	x19, x20, [sp, #16]
   1c9c8:	stp	x21, x22, [sp, #32]
   1c9cc:	mov	x21, x0
   1c9d0:	mov	x20, x1
   1c9d4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1c9d8:	ldr	x22, [x0, #824]
   1c9dc:	mov	x0, x22
   1c9e0:	bl	85f0 <strlen@plt>
   1c9e4:	mov	x19, x0
   1c9e8:	cbz	x20, 1ca14 <omp_get_affinity_format_@@OMP_5.0+0x58>
   1c9ec:	cmp	x0, x20
   1c9f0:	b.cs	1ca28 <omp_get_affinity_format_@@OMP_5.0+0x6c>  // b.hs, b.nlast
   1c9f4:	mov	x2, x0
   1c9f8:	mov	x1, x22
   1c9fc:	mov	x0, x21
   1ca00:	bl	85c0 <memcpy@plt>
   1ca04:	sub	x2, x20, x19
   1ca08:	mov	w1, #0x20                  	// #32
   1ca0c:	add	x0, x21, x19
   1ca10:	bl	87c0 <memset@plt>
   1ca14:	mov	w0, w19
   1ca18:	ldp	x19, x20, [sp, #16]
   1ca1c:	ldp	x21, x22, [sp, #32]
   1ca20:	ldp	x29, x30, [sp], #48
   1ca24:	ret
   1ca28:	mov	x2, x20
   1ca2c:	mov	x1, x22
   1ca30:	mov	x0, x21
   1ca34:	bl	85c0 <memcpy@plt>
   1ca38:	b	1ca14 <omp_get_affinity_format_@@OMP_5.0+0x58>

000000000001ca3c <omp_display_affinity_@@OMP_5.0>:
   1ca3c:	sub	sp, sp, #0x340
   1ca40:	stp	x29, x30, [sp]
   1ca44:	mov	x29, sp
   1ca48:	stp	x19, x20, [sp, #16]
   1ca4c:	stp	x21, x22, [sp, #32]
   1ca50:	cbz	x1, 1cb7c <omp_display_affinity_@@OMP_5.0+0x140>
   1ca54:	mov	x21, x0
   1ca58:	mov	x19, x1
   1ca5c:	add	x20, sp, #0x240
   1ca60:	cmp	x1, #0xff
   1ca64:	b.hi	1caf4 <omp_display_affinity_@@OMP_5.0+0xb8>  // b.pmore
   1ca68:	mov	x2, x19
   1ca6c:	mov	x1, x21
   1ca70:	mov	x0, x20
   1ca74:	bl	85c0 <memcpy@plt>
   1ca78:	strb	wzr, [x20, x19]
   1ca7c:	bl	8a90 <pthread_self@plt>
   1ca80:	mov	x21, x0
   1ca84:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ca88:	ldr	x4, [x4, #4016]
   1ca8c:	mrs	x0, tpidr_el0
   1ca90:	add	x4, x0, x4
   1ca94:	ldr	w5, [x4, #92]
   1ca98:	add	x4, x4, #0x10
   1ca9c:	mov	x3, x21
   1caa0:	mov	x2, x20
   1caa4:	mov	x1, #0x200                 	// #512
   1caa8:	add	x0, sp, #0x40
   1caac:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   1cab0:	mov	x19, x0
   1cab4:	cmp	x0, #0x1ff
   1cab8:	b.hi	1cb18 <omp_display_affinity_@@OMP_5.0+0xdc>  // b.pmore
   1cabc:	add	x0, sp, #0x40
   1cac0:	mov	w1, #0xa                   	// #10
   1cac4:	strb	w1, [x0, x19]
   1cac8:	add	x1, x19, #0x1
   1cacc:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   1cad0:	cmp	x20, #0x0
   1cad4:	add	x0, sp, #0x240
   1cad8:	ccmp	x0, x20, #0x4, ne  // ne = any
   1cadc:	b.ne	1cb0c <omp_display_affinity_@@OMP_5.0+0xd0>  // b.any
   1cae0:	ldp	x19, x20, [sp, #16]
   1cae4:	ldp	x21, x22, [sp, #32]
   1cae8:	ldp	x29, x30, [sp]
   1caec:	add	sp, sp, #0x340
   1caf0:	ret
   1caf4:	add	x0, x1, #0x1
   1caf8:	bl	8c28 <fprintf@plt+0x118>
   1cafc:	mov	x20, x0
   1cb00:	b	1ca68 <omp_display_affinity_@@OMP_5.0+0x2c>
   1cb04:	mov	x20, #0x0                   	// #0
   1cb08:	b	1cabc <omp_display_affinity_@@OMP_5.0+0x80>
   1cb0c:	mov	x0, x20
   1cb10:	bl	8900 <free@plt>
   1cb14:	b	1cae0 <omp_display_affinity_@@OMP_5.0+0xa4>
   1cb18:	str	x23, [sp, #48]
   1cb1c:	add	x23, x0, #0x1
   1cb20:	mov	x0, x23
   1cb24:	bl	8c28 <fprintf@plt+0x118>
   1cb28:	mov	x22, x0
   1cb2c:	mov	x2, x20
   1cb30:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1cb34:	ldr	x4, [x4, #4016]
   1cb38:	mrs	x0, tpidr_el0
   1cb3c:	add	x4, x0, x4
   1cb40:	ldr	w5, [x4, #92]
   1cb44:	add	x4, x4, #0x10
   1cb48:	mov	x3, x21
   1cb4c:	mov	x1, #0x200                 	// #512
   1cb50:	add	x0, sp, #0x40
   1cb54:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   1cb58:	mov	w0, #0xa                   	// #10
   1cb5c:	strb	w0, [x22, x19]
   1cb60:	mov	x1, x23
   1cb64:	mov	x0, x22
   1cb68:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   1cb6c:	mov	x0, x22
   1cb70:	bl	8900 <free@plt>
   1cb74:	ldr	x23, [sp, #48]
   1cb78:	b	1cad0 <omp_display_affinity_@@OMP_5.0+0x94>
   1cb7c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cb80:	ldr	x19, [x0, #824]
   1cb84:	bl	8a90 <pthread_self@plt>
   1cb88:	mov	x21, x0
   1cb8c:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1cb90:	ldr	x4, [x4, #4016]
   1cb94:	mrs	x0, tpidr_el0
   1cb98:	add	x4, x0, x4
   1cb9c:	ldr	w5, [x4, #92]
   1cba0:	add	x4, x4, #0x10
   1cba4:	mov	x3, x21
   1cba8:	mov	x2, x19
   1cbac:	mov	x1, #0x200                 	// #512
   1cbb0:	add	x0, sp, #0x40
   1cbb4:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   1cbb8:	mov	x19, x0
   1cbbc:	cmp	x0, #0x1ff
   1cbc0:	b.ls	1cb04 <omp_display_affinity_@@OMP_5.0+0xc8>  // b.plast
   1cbc4:	str	x23, [sp, #48]
   1cbc8:	add	x23, x0, #0x1
   1cbcc:	mov	x0, x23
   1cbd0:	bl	8c28 <fprintf@plt+0x118>
   1cbd4:	mov	x22, x0
   1cbd8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cbdc:	ldr	x2, [x0, #824]
   1cbe0:	mov	x20, #0x0                   	// #0
   1cbe4:	b	1cb30 <omp_display_affinity_@@OMP_5.0+0xf4>

000000000001cbe8 <omp_capture_affinity_@@OMP_5.0>:
   1cbe8:	stp	x29, x30, [sp, #-320]!
   1cbec:	mov	x29, sp
   1cbf0:	stp	x19, x20, [sp, #16]
   1cbf4:	stp	x21, x22, [sp, #32]
   1cbf8:	mov	x21, x0
   1cbfc:	mov	x20, x2
   1cc00:	cbz	x3, 1ccb0 <omp_capture_affinity_@@OMP_5.0+0xc8>
   1cc04:	str	x23, [sp, #48]
   1cc08:	mov	x23, x1
   1cc0c:	mov	x19, x3
   1cc10:	add	x22, sp, #0x40
   1cc14:	cmp	x3, #0xff
   1cc18:	b.hi	1cc84 <omp_capture_affinity_@@OMP_5.0+0x9c>  // b.pmore
   1cc1c:	mov	x2, x19
   1cc20:	mov	x1, x23
   1cc24:	mov	x0, x22
   1cc28:	bl	85c0 <memcpy@plt>
   1cc2c:	strb	wzr, [x22, x19]
   1cc30:	bl	8a90 <pthread_self@plt>
   1cc34:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1cc38:	ldr	x4, [x4, #4016]
   1cc3c:	mrs	x1, tpidr_el0
   1cc40:	add	x4, x1, x4
   1cc44:	ldr	w5, [x4, #92]
   1cc48:	add	x4, x4, #0x10
   1cc4c:	mov	x3, x0
   1cc50:	mov	x2, x22
   1cc54:	mov	x1, x20
   1cc58:	mov	x0, x21
   1cc5c:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   1cc60:	mov	x19, x0
   1cc64:	cmp	x22, #0x0
   1cc68:	add	x0, sp, #0x40
   1cc6c:	ccmp	x0, x22, #0x4, ne  // ne = any
   1cc70:	b.eq	1cc94 <omp_capture_affinity_@@OMP_5.0+0xac>  // b.none
   1cc74:	mov	x0, x22
   1cc78:	bl	8900 <free@plt>
   1cc7c:	ldr	x23, [sp, #48]
   1cc80:	b	1ccec <omp_capture_affinity_@@OMP_5.0+0x104>
   1cc84:	add	x0, x3, #0x1
   1cc88:	bl	8c28 <fprintf@plt+0x118>
   1cc8c:	mov	x22, x0
   1cc90:	b	1cc1c <omp_capture_affinity_@@OMP_5.0+0x34>
   1cc94:	ldr	x23, [sp, #48]
   1cc98:	b	1ccec <omp_capture_affinity_@@OMP_5.0+0x104>
   1cc9c:	sub	x2, x20, x19
   1cca0:	mov	w1, #0x20                  	// #32
   1cca4:	add	x0, x21, x19
   1cca8:	bl	87c0 <memset@plt>
   1ccac:	b	1ccf4 <omp_capture_affinity_@@OMP_5.0+0x10c>
   1ccb0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ccb4:	ldr	x19, [x0, #824]
   1ccb8:	bl	8a90 <pthread_self@plt>
   1ccbc:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1ccc0:	ldr	x4, [x4, #4016]
   1ccc4:	mrs	x1, tpidr_el0
   1ccc8:	add	x4, x1, x4
   1cccc:	ldr	w5, [x4, #92]
   1ccd0:	add	x4, x4, #0x10
   1ccd4:	mov	x3, x0
   1ccd8:	mov	x2, x19
   1ccdc:	mov	x1, x20
   1cce0:	mov	x0, x21
   1cce4:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   1cce8:	mov	x19, x0
   1ccec:	cmp	x20, x19
   1ccf0:	b.hi	1cc9c <omp_capture_affinity_@@OMP_5.0+0xb4>  // b.pmore
   1ccf4:	mov	w0, w19
   1ccf8:	ldp	x19, x20, [sp, #16]
   1ccfc:	ldp	x21, x22, [sp, #32]
   1cd00:	ldp	x29, x30, [sp], #320
   1cd04:	ret

000000000001cd08 <omp_pause_resource_@@OMP_5.0>:
   1cd08:	stp	x29, x30, [sp, #-16]!
   1cd0c:	mov	x29, sp
   1cd10:	ldr	w1, [x1]
   1cd14:	ldr	w0, [x0]
   1cd18:	bl	22f64 <omp_pause_resource@@OMP_5.0>
   1cd1c:	ldp	x29, x30, [sp], #16
   1cd20:	ret

000000000001cd24 <omp_pause_resource_all_@@OMP_5.0>:
   1cd24:	stp	x29, x30, [sp, #-16]!
   1cd28:	mov	x29, sp
   1cd2c:	ldr	w0, [x0]
   1cd30:	bl	22fb4 <omp_pause_resource_all@@OMP_5.0>
   1cd34:	ldp	x29, x30, [sp], #16
   1cd38:	ret
   1cd3c:	stp	x29, x30, [sp, #-16]!
   1cd40:	mov	x29, sp
   1cd44:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cd48:	ldr	x2, [x2, #1568]
   1cd4c:	ldr	x2, [x2, w1, uxtw #3]
   1cd50:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cd54:	ldr	x1, [x1, #1704]
   1cd58:	bl	8a60 <pthread_attr_setaffinity_np@plt>
   1cd5c:	ldp	x29, x30, [sp], #16
   1cd60:	ret
   1cd64:	stp	x29, x30, [sp, #-48]!
   1cd68:	mov	x29, sp
   1cd6c:	stp	x19, x20, [sp, #16]
   1cd70:	stp	x21, x22, [sp, #32]
   1cd74:	mov	x21, x0
   1cd78:	and	w22, w1, #0xff
   1cd7c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cd80:	ldr	x19, [x0, #1712]
   1cd84:	cbz	x19, 1cddc <omp_pause_resource_all_@@OMP_5.0+0xb8>
   1cd88:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cd8c:	ldr	x20, [x0, #1704]
   1cd90:	add	x0, x20, #0x8
   1cd94:	mul	x0, x0, x21
   1cd98:	bl	8760 <malloc@plt>
   1cd9c:	mov	x19, x0
   1cda0:	cbz	x0, 1cdf0 <omp_pause_resource_all_@@OMP_5.0+0xcc>
   1cda4:	lsl	x3, x21, #3
   1cda8:	add	x1, x0, x3
   1cdac:	cbz	x21, 1cdc8 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   1cdb0:	mov	x2, x0
   1cdb4:	mov	x3, x1
   1cdb8:	str	x1, [x2], #8
   1cdbc:	add	x1, x1, x20
   1cdc0:	cmp	x2, x3
   1cdc4:	b.ne	1cdb8 <omp_pause_resource_all_@@OMP_5.0+0x94>  // b.any
   1cdc8:	mov	x0, x19
   1cdcc:	ldp	x19, x20, [sp, #16]
   1cdd0:	ldp	x21, x22, [sp, #32]
   1cdd4:	ldp	x29, x30, [sp], #48
   1cdd8:	ret
   1cddc:	cbnz	w22, 1cdc8 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   1cde0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1cde4:	add	x0, x0, #0x270
   1cde8:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1cdec:	b	1cdc8 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   1cdf0:	cbnz	w22, 1cdc8 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   1cdf4:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1cdf8:	add	x0, x0, #0x290
   1cdfc:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1ce00:	b	1cdc8 <omp_pause_resource_all_@@OMP_5.0+0xa4>
   1ce04:	stp	x29, x30, [sp, #-16]!
   1ce08:	mov	x29, sp
   1ce0c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ce10:	ldr	x2, [x1, #1704]
   1ce14:	mov	w1, #0x0                   	// #0
   1ce18:	bl	87c0 <memset@plt>
   1ce1c:	ldp	x29, x30, [sp], #16
   1ce20:	ret
   1ce24:	stp	x29, x30, [sp, #-32]!
   1ce28:	mov	x29, sp
   1ce2c:	str	x19, [sp, #16]
   1ce30:	and	w19, w4, #0xff
   1ce34:	adrp	x4, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ce38:	ldr	x4, [x4, #1704]
   1ce3c:	lsl	x8, x4, #3
   1ce40:	adrp	x7, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ce44:	mov	x9, #0x1                   	// #1
   1ce48:	cmp	x1, x4, lsl #3
   1ce4c:	b.cc	1ce94 <omp_pause_resource_all_@@OMP_5.0+0x170>  // b.lo, b.ul, b.last
   1ce50:	cbz	w19, 1ce5c <omp_pause_resource_all_@@OMP_5.0+0x138>
   1ce54:	mov	w19, #0x0                   	// #0
   1ce58:	b	1cee8 <omp_pause_resource_all_@@OMP_5.0+0x1c4>
   1ce5c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1ce60:	add	x0, x0, #0x2c0
   1ce64:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1ce68:	b	1cee8 <omp_pause_resource_all_@@OMP_5.0+0x1c4>
   1ce6c:	subs	x2, x2, #0x1
   1ce70:	b.eq	1cee4 <omp_pause_resource_all_@@OMP_5.0+0x1c0>  // b.none
   1ce74:	tbnz	x3, #63, 1ceb8 <omp_pause_resource_all_@@OMP_5.0+0x194>
   1ce78:	cmp	x3, #0x0
   1ce7c:	b.le	1ce88 <omp_pause_resource_all_@@OMP_5.0+0x164>
   1ce80:	cmn	x3, x1
   1ce84:	b.cs	1cec4 <omp_pause_resource_all_@@OMP_5.0+0x1a0>  // b.hs, b.nlast
   1ce88:	add	x1, x1, x3
   1ce8c:	cmp	x8, x1
   1ce90:	b.ls	1ce50 <omp_pause_resource_all_@@OMP_5.0+0x12c>  // b.plast
   1ce94:	ldr	x4, [x7, #1704]
   1ce98:	cmp	x4, x1, lsr #3
   1ce9c:	b.ls	1ce6c <omp_pause_resource_all_@@OMP_5.0+0x148>  // b.plast
   1cea0:	lsr	x6, x1, #6
   1cea4:	lsl	x4, x9, x1
   1cea8:	ldr	x5, [x0, x6, lsl #3]
   1ceac:	orr	x4, x5, x4
   1ceb0:	str	x4, [x0, x6, lsl #3]
   1ceb4:	b	1ce6c <omp_pause_resource_all_@@OMP_5.0+0x148>
   1ceb8:	add	x4, x3, x1
   1cebc:	cmp	x1, x4
   1cec0:	b.cs	1ce88 <omp_pause_resource_all_@@OMP_5.0+0x164>  // b.hs, b.nlast
   1cec4:	cbz	w19, 1ced0 <omp_pause_resource_all_@@OMP_5.0+0x1ac>
   1cec8:	mov	w19, #0x0                   	// #0
   1cecc:	b	1cee8 <omp_pause_resource_all_@@OMP_5.0+0x1c4>
   1ced0:	mov	x2, x3
   1ced4:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1ced8:	add	x0, x0, #0x2e8
   1cedc:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1cee0:	b	1cee8 <omp_pause_resource_all_@@OMP_5.0+0x1c4>
   1cee4:	mov	w19, #0x1                   	// #1
   1cee8:	mov	w0, w19
   1ceec:	ldr	x19, [sp, #16]
   1cef0:	ldp	x29, x30, [sp], #32
   1cef4:	ret
   1cef8:	stp	x29, x30, [sp, #-240]!
   1cefc:	mov	x29, sp
   1cf00:	str	w0, [sp, #144]
   1cf04:	str	w1, [sp, #148]
   1cf08:	str	x4, [sp, #104]
   1cf0c:	and	w0, w5, #0xff
   1cf10:	str	w0, [sp, #140]
   1cf14:	str	xzr, [sp, #232]
   1cf18:	str	xzr, [sp, #224]
   1cf1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cf20:	ldr	x0, [x0, #1704]
   1cf24:	cmp	xzr, x0, lsl #3
   1cf28:	b.eq	1d310 <omp_pause_resource_all_@@OMP_5.0+0x5ec>  // b.none
   1cf2c:	stp	x19, x20, [sp, #16]
   1cf30:	stp	x21, x22, [sp, #32]
   1cf34:	stp	x23, x24, [sp, #48]
   1cf38:	stp	x25, x26, [sp, #64]
   1cf3c:	stp	x27, x28, [sp, #80]
   1cf40:	lsl	x26, x0, #3
   1cf44:	cmp	w1, #0x3
   1cf48:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1cf4c:	add	x1, x1, #0x310
   1cf50:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1cf54:	add	x0, x0, #0x318
   1cf58:	csel	x0, x1, x0, eq  // eq = none
   1cf5c:	str	x0, [sp, #120]
   1cf60:	mov	x21, #0x0                   	// #0
   1cf64:	adrp	x28, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cf68:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1cf6c:	add	x0, x0, #0x320
   1cf70:	str	x0, [sp, #128]
   1cf74:	mov	x25, x2
   1cf78:	mov	x27, x26
   1cf7c:	mov	x26, x3
   1cf80:	b	1d1f4 <omp_pause_resource_all_@@OMP_5.0+0x4d0>
   1cf84:	ldr	x0, [x28, #1704]
   1cf88:	ldr	x1, [sp, #96]
   1cf8c:	cmp	x1, x0
   1cf90:	b.cs	1d1e8 <omp_pause_resource_all_@@OMP_5.0+0x4c4>  // b.hs, b.nlast
   1cf94:	mov	x0, #0x1                   	// #1
   1cf98:	ldrb	w1, [sp, #136]
   1cf9c:	lsl	x0, x0, x1
   1cfa0:	ldr	x1, [x26, x24, lsl #3]
   1cfa4:	bic	x0, x1, x0
   1cfa8:	str	x0, [x26, x24, lsl #3]
   1cfac:	b	1d1e8 <omp_pause_resource_all_@@OMP_5.0+0x4c4>
   1cfb0:	ldr	x0, [sp, #152]
   1cfb4:	bl	1ce04 <omp_pause_resource_all_@@OMP_5.0+0xe0>
   1cfb8:	ldr	x19, [sp, #216]
   1cfbc:	ldrb	w0, [x19]
   1cfc0:	cmp	w0, #0x0
   1cfc4:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1cfc8:	b.ne	1d2c4 <omp_pause_resource_all_@@OMP_5.0+0x5a0>  // b.any
   1cfcc:	ldr	x0, [x28, #1704]
   1cfd0:	ldr	x1, [sp, #96]
   1cfd4:	cmp	x1, x0
   1cfd8:	b.cs	1cfec <omp_pause_resource_all_@@OMP_5.0+0x2c8>  // b.hs, b.nlast
   1cfdc:	ldr	x0, [x26, x24, lsl #3]
   1cfe0:	ldrb	w1, [sp, #136]
   1cfe4:	lsr	x0, x0, x1
   1cfe8:	tbnz	w0, #0, 1d1c8 <omp_pause_resource_all_@@OMP_5.0+0x4a4>
   1cfec:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1cff0:	ldr	x0, [x1, #1608]
   1cff4:	add	x0, x0, #0x1
   1cff8:	str	x0, [x1, #1608]
   1cffc:	b	1d1b8 <omp_pause_resource_all_@@OMP_5.0+0x494>
   1d000:	ldrb	w5, [sp, #140]
   1d004:	ldr	x4, [sp, #104]
   1d008:	ldr	x3, [sp, #176]
   1d00c:	ldr	x2, [sp, #168]
   1d010:	mov	w1, #0x2                   	// #2
   1d014:	mov	w0, w25
   1d018:	bl	1cef8 <omp_pause_resource_all_@@OMP_5.0+0x1d4>
   1d01c:	add	x19, x19, #0x1
   1d020:	cmp	x21, x19
   1d024:	b.cc	1d0e0 <omp_pause_resource_all_@@OMP_5.0+0x3bc>  // b.lo, b.ul, b.last
   1d028:	lsr	x24, x19, #3
   1d02c:	ldr	x0, [x28, #1704]
   1d030:	cmp	x0, x19, lsr #3
   1d034:	b.ls	1d01c <omp_pause_resource_all_@@OMP_5.0+0x2f8>  // b.plast
   1d038:	lsr	x23, x19, #6
   1d03c:	and	w20, w19, #0x3f
   1d040:	ldr	x0, [x22, x23, lsl #3]
   1d044:	lsr	x0, x0, x20
   1d048:	tbz	w0, #0, 1d01c <omp_pause_resource_all_@@OMP_5.0+0x2f8>
   1d04c:	cmp	w26, #0x3
   1d050:	ccmp	w26, w25, #0x4, eq  // eq = none
   1d054:	b.gt	1d000 <omp_pause_resource_all_@@OMP_5.0+0x2dc>
   1d058:	cmp	w25, #0x1
   1d05c:	b.eq	1d0c0 <omp_pause_resource_all_@@OMP_5.0+0x39c>  // b.none
   1d060:	mov	w4, #0x1                   	// #1
   1d064:	mov	x3, #0x0                   	// #0
   1d068:	mov	x2, #0x1                   	// #1
   1d06c:	mov	x1, x19
   1d070:	ldr	x0, [sp, #152]
   1d074:	bl	1ce24 <omp_pause_resource_all_@@OMP_5.0+0x100>
   1d078:	and	w0, w0, #0xff
   1d07c:	cbz	w0, 1d01c <omp_pause_resource_all_@@OMP_5.0+0x2f8>
   1d080:	ldr	x0, [x28, #1704]
   1d084:	cmp	x24, x0
   1d088:	b.cs	1d0a0 <omp_pause_resource_all_@@OMP_5.0+0x37c>  // b.hs, b.nlast
   1d08c:	mov	x0, #0x1                   	// #1
   1d090:	lsl	x20, x0, x20
   1d094:	ldr	x0, [x22, x23, lsl #3]
   1d098:	bic	x20, x0, x20
   1d09c:	str	x20, [x22, x23, lsl #3]
   1d0a0:	cmp	w25, #0x1
   1d0a4:	b.ne	1d01c <omp_pause_resource_all_@@OMP_5.0+0x2f8>  // b.any
   1d0a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d0ac:	ldr	x0, [x0, #1608]
   1d0b0:	add	x0, x0, #0x1
   1d0b4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d0b8:	str	x0, [x1, #1608]
   1d0bc:	b	1d01c <omp_pause_resource_all_@@OMP_5.0+0x2f8>
   1d0c0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d0c4:	ldr	x1, [x0, #1608]
   1d0c8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d0cc:	ldr	x0, [x0, #1568]
   1d0d0:	ldr	x0, [x0, x1, lsl #3]
   1d0d4:	str	x0, [sp, #152]
   1d0d8:	bl	1ce04 <omp_pause_resource_all_@@OMP_5.0+0xe0>
   1d0dc:	b	1d060 <omp_pause_resource_all_@@OMP_5.0+0x33c>
   1d0e0:	ldr	x0, [sp, #216]
   1d0e4:	ldrb	w1, [x0]
   1d0e8:	cmp	w1, #0x2c
   1d0ec:	b.eq	1d170 <omp_pause_resource_all_@@OMP_5.0+0x44c>  // b.none
   1d0f0:	ldr	x0, [sp, #216]
   1d0f4:	ldrb	w1, [x0]
   1d0f8:	cmp	w1, #0x0
   1d0fc:	ccmp	w1, #0xa, #0x4, ne  // ne = any
   1d100:	b.eq	1d17c <omp_pause_resource_all_@@OMP_5.0+0x458>  // b.none
   1d104:	str	wzr, [x27]
   1d108:	mov	w2, #0xa                   	// #10
   1d10c:	ldr	x1, [sp, #160]
   1d110:	bl	85e0 <strtoul@plt>
   1d114:	mov	x19, x0
   1d118:	ldr	w0, [x27]
   1d11c:	cbnz	w0, 1d194 <omp_pause_resource_all_@@OMP_5.0+0x470>
   1d120:	ldr	x0, [sp, #216]
   1d124:	ldrb	w1, [x0]
   1d128:	mov	x21, x19
   1d12c:	cmp	w1, #0x2d
   1d130:	b.ne	1d028 <omp_pause_resource_all_@@OMP_5.0+0x304>  // b.any
   1d134:	mov	w2, #0xa                   	// #10
   1d138:	ldr	x1, [sp, #160]
   1d13c:	add	x0, x0, #0x1
   1d140:	bl	85e0 <strtoul@plt>
   1d144:	mov	x21, x0
   1d148:	ldr	w0, [x27]
   1d14c:	cmp	w0, #0x0
   1d150:	ccmp	x19, x21, #0x2, eq  // eq = none
   1d154:	b.ls	1d028 <omp_pause_resource_all_@@OMP_5.0+0x304>  // b.plast
   1d158:	ldr	x27, [sp, #184]
   1d15c:	ldr	x21, [sp, #192]
   1d160:	ldr	x25, [sp, #168]
   1d164:	ldr	x26, [sp, #176]
   1d168:	ldr	x24, [sp, #200]
   1d16c:	b	1d1a8 <omp_pause_resource_all_@@OMP_5.0+0x484>
   1d170:	add	x0, x0, #0x1
   1d174:	str	x0, [sp, #216]
   1d178:	b	1d0f0 <omp_pause_resource_all_@@OMP_5.0+0x3cc>
   1d17c:	ldr	x27, [sp, #184]
   1d180:	ldr	x21, [sp, #192]
   1d184:	ldr	x25, [sp, #168]
   1d188:	ldr	x26, [sp, #176]
   1d18c:	ldr	x24, [sp, #200]
   1d190:	b	1d1a8 <omp_pause_resource_all_@@OMP_5.0+0x484>
   1d194:	ldr	x27, [sp, #184]
   1d198:	ldr	x21, [sp, #192]
   1d19c:	ldr	x25, [sp, #168]
   1d1a0:	ldr	x26, [sp, #176]
   1d1a4:	ldr	x24, [sp, #200]
   1d1a8:	ldr	w0, [sp, #148]
   1d1ac:	ldr	w1, [sp, #144]
   1d1b0:	cmp	w0, w1
   1d1b4:	b.eq	1cfcc <omp_pause_resource_all_@@OMP_5.0+0x2a8>  // b.none
   1d1b8:	ldr	x0, [x28, #1704]
   1d1bc:	ldr	x1, [sp, #96]
   1d1c0:	cmp	x1, x0
   1d1c4:	b.cs	1d1e0 <omp_pause_resource_all_@@OMP_5.0+0x4bc>  // b.hs, b.nlast
   1d1c8:	mov	x0, #0x1                   	// #1
   1d1cc:	ldrb	w1, [sp, #136]
   1d1d0:	lsl	x0, x0, x1
   1d1d4:	ldr	x1, [x26, x24, lsl #3]
   1d1d8:	bic	x0, x1, x0
   1d1dc:	str	x0, [x26, x24, lsl #3]
   1d1e0:	ldr	x0, [sp, #112]
   1d1e4:	bl	8730 <fclose@plt>
   1d1e8:	add	x21, x21, #0x1
   1d1ec:	cmp	x27, x21
   1d1f0:	b.eq	1d320 <omp_pause_resource_all_@@OMP_5.0+0x5fc>  // b.none
   1d1f4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d1f8:	ldr	x0, [x0, #1608]
   1d1fc:	cmp	x0, x25
   1d200:	b.cs	1d2fc <omp_pause_resource_all_@@OMP_5.0+0x5d8>  // b.hs, b.nlast
   1d204:	lsr	x0, x21, #3
   1d208:	str	x0, [sp, #96]
   1d20c:	ldr	x0, [x28, #1704]
   1d210:	cmp	x0, x21, lsr #3
   1d214:	b.ls	1d1e8 <omp_pause_resource_all_@@OMP_5.0+0x4c4>  // b.plast
   1d218:	mov	x22, x26
   1d21c:	lsr	x24, x21, #6
   1d220:	and	w0, w21, #0x3f
   1d224:	mov	w1, w0
   1d228:	str	w0, [sp, #136]
   1d22c:	ldr	x0, [x26, x24, lsl #3]
   1d230:	lsr	x0, x0, x1
   1d234:	tbz	w0, #0, 1d1e8 <omp_pause_resource_all_@@OMP_5.0+0x4c4>
   1d238:	ldr	x3, [sp, #120]
   1d23c:	mov	x2, x21
   1d240:	ldr	x1, [sp, #128]
   1d244:	ldr	x19, [sp, #104]
   1d248:	add	x0, x19, #0x1b
   1d24c:	bl	8670 <sprintf@plt>
   1d250:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d254:	add	x1, x1, #0x340
   1d258:	mov	x0, x19
   1d25c:	bl	8750 <fopen@plt>
   1d260:	str	x0, [sp, #112]
   1d264:	cbz	x0, 1cf84 <omp_pause_resource_all_@@OMP_5.0+0x260>
   1d268:	ldr	x3, [sp, #112]
   1d26c:	mov	w2, #0xa                   	// #10
   1d270:	add	x1, sp, #0xe0
   1d274:	add	x0, sp, #0xe8
   1d278:	bl	8af0 <__getdelim@plt>
   1d27c:	cmp	x0, #0x0
   1d280:	b.le	1d1e0 <omp_pause_resource_all_@@OMP_5.0+0x4bc>
   1d284:	ldr	x19, [sp, #232]
   1d288:	str	x19, [sp, #216]
   1d28c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d290:	ldr	x1, [x0, #1608]
   1d294:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d298:	ldr	x0, [x0, #1568]
   1d29c:	ldr	x0, [x0, x1, lsl #3]
   1d2a0:	str	x0, [sp, #152]
   1d2a4:	ldr	w0, [sp, #148]
   1d2a8:	ldr	w1, [sp, #144]
   1d2ac:	cmp	w0, w1
   1d2b0:	b.eq	1cfb0 <omp_pause_resource_all_@@OMP_5.0+0x28c>  // b.none
   1d2b4:	ldrb	w0, [x19]
   1d2b8:	cmp	w0, #0x0
   1d2bc:	ccmp	w0, #0xa, #0x4, ne  // ne = any
   1d2c0:	b.eq	1d1b8 <omp_pause_resource_all_@@OMP_5.0+0x494>  // b.none
   1d2c4:	bl	8ac0 <__errno_location@plt>
   1d2c8:	mov	x2, x0
   1d2cc:	add	x1, sp, #0xd8
   1d2d0:	str	x1, [sp, #160]
   1d2d4:	mov	x0, x19
   1d2d8:	str	x27, [sp, #184]
   1d2dc:	mov	x27, x2
   1d2e0:	str	x21, [sp, #192]
   1d2e4:	str	x25, [sp, #168]
   1d2e8:	ldr	w25, [sp, #144]
   1d2ec:	str	x26, [sp, #176]
   1d2f0:	ldr	w26, [sp, #148]
   1d2f4:	str	x24, [sp, #200]
   1d2f8:	b	1d104 <omp_pause_resource_all_@@OMP_5.0+0x3e0>
   1d2fc:	ldp	x19, x20, [sp, #16]
   1d300:	ldp	x21, x22, [sp, #32]
   1d304:	ldp	x23, x24, [sp, #48]
   1d308:	ldp	x25, x26, [sp, #64]
   1d30c:	ldp	x27, x28, [sp, #80]
   1d310:	ldr	x0, [sp, #232]
   1d314:	bl	8900 <free@plt>
   1d318:	ldp	x29, x30, [sp], #240
   1d31c:	ret
   1d320:	ldp	x19, x20, [sp, #16]
   1d324:	ldp	x21, x22, [sp, #32]
   1d328:	ldp	x23, x24, [sp, #48]
   1d32c:	ldp	x25, x26, [sp, #64]
   1d330:	ldp	x27, x28, [sp, #80]
   1d334:	b	1d310 <omp_pause_resource_all_@@OMP_5.0+0x5ec>
   1d338:	stp	x29, x30, [sp, #-16]!
   1d33c:	mov	x29, sp
   1d340:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d344:	ldr	x2, [x2, #1704]
   1d348:	cmp	x1, x2, lsl #3
   1d34c:	b.cs	1d388 <omp_pause_resource_all_@@OMP_5.0+0x664>  // b.hs, b.nlast
   1d350:	cmp	x2, x1, lsr #3
   1d354:	b.ls	1d39c <omp_pause_resource_all_@@OMP_5.0+0x678>  // b.plast
   1d358:	lsr	x3, x1, #6
   1d35c:	ldr	x4, [x0, x3, lsl #3]
   1d360:	and	w2, w1, #0x3f
   1d364:	lsr	x5, x4, x2
   1d368:	tbz	w5, #0, 1d39c <omp_pause_resource_all_@@OMP_5.0+0x678>
   1d36c:	mov	x1, #0x1                   	// #1
   1d370:	lsl	x2, x1, x2
   1d374:	bic	x2, x4, x2
   1d378:	str	x2, [x0, x3, lsl #3]
   1d37c:	mov	w0, w1
   1d380:	ldp	x29, x30, [sp], #16
   1d384:	ret
   1d388:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d38c:	add	x0, x0, #0x2c0
   1d390:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d394:	mov	w0, #0x0                   	// #0
   1d398:	b	1d380 <omp_pause_resource_all_@@OMP_5.0+0x65c>
   1d39c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d3a0:	add	x0, x0, #0x348
   1d3a4:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d3a8:	mov	w0, #0x0                   	// #0
   1d3ac:	b	1d380 <omp_pause_resource_all_@@OMP_5.0+0x65c>
   1d3b0:	stp	x29, x30, [sp, #-48]!
   1d3b4:	mov	x29, sp
   1d3b8:	stp	x19, x20, [sp, #16]
   1d3bc:	stp	x21, x22, [sp, #32]
   1d3c0:	mov	x22, x0
   1d3c4:	mov	x21, x1
   1d3c8:	mov	x20, x2
   1d3cc:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d3d0:	ldr	x2, [x1, #1704]
   1d3d4:	lsl	x19, x2, #3
   1d3d8:	mov	w1, #0x0                   	// #0
   1d3dc:	bl	87c0 <memset@plt>
   1d3e0:	cbz	x19, 1d49c <omp_pause_resource_all_@@OMP_5.0+0x778>
   1d3e4:	mov	x1, #0x0                   	// #0
   1d3e8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d3ec:	mov	x5, #0x1                   	// #1
   1d3f0:	b	1d424 <omp_pause_resource_all_@@OMP_5.0+0x700>
   1d3f4:	add	x4, x20, x1
   1d3f8:	cmp	x1, x4
   1d3fc:	b.cs	1d460 <omp_pause_resource_all_@@OMP_5.0+0x73c>  // b.hs, b.nlast
   1d400:	mov	x2, x20
   1d404:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d408:	add	x0, x0, #0x2e8
   1d40c:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d410:	mov	w0, #0x0                   	// #0
   1d414:	b	1d48c <omp_pause_resource_all_@@OMP_5.0+0x768>
   1d418:	add	x1, x1, #0x1
   1d41c:	cmp	x19, x1
   1d420:	b.eq	1d488 <omp_pause_resource_all_@@OMP_5.0+0x764>  // b.none
   1d424:	ldr	x3, [x0, #1704]
   1d428:	cmp	x3, x1, lsr #3
   1d42c:	b.ls	1d418 <omp_pause_resource_all_@@OMP_5.0+0x6f4>  // b.plast
   1d430:	mov	w2, w1
   1d434:	lsr	x4, x1, #6
   1d438:	ldr	x4, [x21, x4, lsl #3]
   1d43c:	lsr	x4, x4, x1
   1d440:	tbz	w4, #0, 1d418 <omp_pause_resource_all_@@OMP_5.0+0x6f4>
   1d444:	tbnz	x20, #63, 1d3f4 <omp_pause_resource_all_@@OMP_5.0+0x6d0>
   1d448:	cmp	x20, #0x0
   1d44c:	b.le	1d460 <omp_pause_resource_all_@@OMP_5.0+0x73c>
   1d450:	add	x4, x20, x1
   1d454:	cmp	x19, x4
   1d458:	ccmp	x1, x4, #0x2, hi  // hi = pmore
   1d45c:	b.hi	1d400 <omp_pause_resource_all_@@OMP_5.0+0x6dc>  // b.pmore
   1d460:	add	x4, x20, x1
   1d464:	cmp	x3, x4, lsr #3
   1d468:	b.ls	1d418 <omp_pause_resource_all_@@OMP_5.0+0x6f4>  // b.plast
   1d46c:	lsr	x4, x4, #6
   1d470:	add	w2, w2, w20
   1d474:	lsl	x2, x5, x2
   1d478:	ldr	x3, [x22, x4, lsl #3]
   1d47c:	orr	x2, x3, x2
   1d480:	str	x2, [x22, x4, lsl #3]
   1d484:	b	1d418 <omp_pause_resource_all_@@OMP_5.0+0x6f4>
   1d488:	mov	w0, #0x1                   	// #1
   1d48c:	ldp	x19, x20, [sp, #16]
   1d490:	ldp	x21, x22, [sp, #32]
   1d494:	ldp	x29, x30, [sp], #48
   1d498:	ret
   1d49c:	mov	w0, #0x1                   	// #1
   1d4a0:	b	1d48c <omp_pause_resource_all_@@OMP_5.0+0x768>
   1d4a4:	stp	x29, x30, [sp, #-16]!
   1d4a8:	mov	x29, sp
   1d4ac:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d4b0:	ldr	x2, [x2, #1704]
   1d4b4:	bl	8890 <memcmp@plt>
   1d4b8:	cmp	w0, #0x0
   1d4bc:	cset	w0, eq  // eq = none
   1d4c0:	ldp	x29, x30, [sp], #16
   1d4c4:	ret
   1d4c8:	stp	x29, x30, [sp, #-80]!
   1d4cc:	mov	x29, sp
   1d4d0:	stp	x25, x26, [sp, #64]
   1d4d4:	and	w26, w0, #0xff
   1d4d8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d4dc:	ldr	x0, [x0, #1608]
   1d4e0:	cbz	x0, 1d5c0 <omp_pause_resource_all_@@OMP_5.0+0x89c>
   1d4e4:	stp	x19, x20, [sp, #16]
   1d4e8:	stp	x21, x22, [sp, #32]
   1d4ec:	stp	x23, x24, [sp, #48]
   1d4f0:	mov	x21, #0x0                   	// #0
   1d4f4:	mov	x19, #0x0                   	// #0
   1d4f8:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d4fc:	adrp	x25, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d500:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d504:	adrp	x24, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d508:	b	1d51c <omp_pause_resource_all_@@OMP_5.0+0x7f8>
   1d50c:	add	x19, x19, #0x1
   1d510:	ldr	x1, [x24, #1608]
   1d514:	cmp	x1, x19
   1d518:	b.ls	1d57c <omp_pause_resource_all_@@OMP_5.0+0x858>  // b.plast
   1d51c:	lsl	x23, x19, #3
   1d520:	ldr	x0, [x22, #1568]
   1d524:	ldr	x1, [x0, x19, lsl #3]
   1d528:	ldr	x4, [x25, #1712]
   1d52c:	ldr	x0, [x20, #1704]
   1d530:	lsr	x5, x0, #3
   1d534:	cmp	x0, #0x7
   1d538:	b.ls	1d55c <omp_pause_resource_all_@@OMP_5.0+0x838>  // b.plast
   1d53c:	mov	x0, #0x0                   	// #0
   1d540:	ldr	x2, [x1, x0, lsl #3]
   1d544:	ldr	x3, [x4, x0, lsl #3]
   1d548:	and	x2, x2, x3
   1d54c:	str	x2, [x1, x0, lsl #3]
   1d550:	add	x0, x0, #0x1
   1d554:	cmp	x5, x0
   1d558:	b.hi	1d540 <omp_pause_resource_all_@@OMP_5.0+0x81c>  // b.pmore
   1d55c:	ldr	x0, [x20, #1704]
   1d560:	bl	1b248 <omp_test_nest_lock@OMP_1.0+0x370>
   1d564:	cbz	x0, 1d50c <omp_pause_resource_all_@@OMP_5.0+0x7e8>
   1d568:	ldr	x0, [x22, #1568]
   1d56c:	ldr	x1, [x0, x23]
   1d570:	str	x1, [x0, x21, lsl #3]
   1d574:	add	x21, x21, #0x1
   1d578:	b	1d50c <omp_pause_resource_all_@@OMP_5.0+0x7e8>
   1d57c:	cbz	x21, 1d5b4 <omp_pause_resource_all_@@OMP_5.0+0x890>
   1d580:	cmp	x1, x21
   1d584:	b.ls	1d5f0 <omp_pause_resource_all_@@OMP_5.0+0x8cc>  // b.plast
   1d588:	cbz	w26, 1d5dc <omp_pause_resource_all_@@OMP_5.0+0x8b8>
   1d58c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d590:	str	x21, [x0, #1608]
   1d594:	mov	w26, #0x1                   	// #1
   1d598:	ldp	x19, x20, [sp, #16]
   1d59c:	ldp	x21, x22, [sp, #32]
   1d5a0:	ldp	x23, x24, [sp, #48]
   1d5a4:	mov	w0, w26
   1d5a8:	ldp	x25, x26, [sp, #64]
   1d5ac:	ldp	x29, x30, [sp], #80
   1d5b0:	ret
   1d5b4:	ldp	x19, x20, [sp, #16]
   1d5b8:	ldp	x21, x22, [sp, #32]
   1d5bc:	ldp	x23, x24, [sp, #48]
   1d5c0:	cbz	w26, 1d5cc <omp_pause_resource_all_@@OMP_5.0+0x8a8>
   1d5c4:	mov	w26, #0x0                   	// #0
   1d5c8:	b	1d5a4 <omp_pause_resource_all_@@OMP_5.0+0x880>
   1d5cc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d5d0:	add	x0, x0, #0x378
   1d5d4:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d5d8:	b	1d5a4 <omp_pause_resource_all_@@OMP_5.0+0x880>
   1d5dc:	mov	x2, x21
   1d5e0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d5e4:	add	x0, x0, #0x3a8
   1d5e8:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d5ec:	b	1d58c <omp_pause_resource_all_@@OMP_5.0+0x868>
   1d5f0:	mov	w26, #0x1                   	// #1
   1d5f4:	ldp	x19, x20, [sp, #16]
   1d5f8:	ldp	x21, x22, [sp, #32]
   1d5fc:	ldp	x23, x24, [sp, #48]
   1d600:	b	1d5a4 <omp_pause_resource_all_@@OMP_5.0+0x880>
   1d604:	stp	x29, x30, [sp, #-144]!
   1d608:	mov	x29, sp
   1d60c:	stp	x19, x20, [sp, #16]
   1d610:	stp	x21, x22, [sp, #32]
   1d614:	mov	w20, w0
   1d618:	mov	x19, x1
   1d61c:	and	w21, w2, #0xff
   1d620:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d624:	ldr	x1, [x0, #1712]
   1d628:	cbz	x1, 1d640 <omp_pause_resource_all_@@OMP_5.0+0x91c>
   1d62c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d630:	ldr	x0, [x0, #1704]
   1d634:	bl	1b248 <omp_test_nest_lock@OMP_1.0+0x370>
   1d638:	cmp	x19, x0
   1d63c:	csel	x19, x19, x0, ls  // ls = plast
   1d640:	mov	w1, w21
   1d644:	mov	x0, x19
   1d648:	bl	1cd64 <omp_pause_resource_all_@@OMP_5.0+0x40>
   1d64c:	mov	x1, x0
   1d650:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d654:	str	x1, [x0, #1568]
   1d658:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d65c:	str	xzr, [x0, #1608]
   1d660:	mov	w0, #0x0                   	// #0
   1d664:	cbz	x1, 1d6dc <omp_pause_resource_all_@@OMP_5.0+0x9b8>
   1d668:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d66c:	ldr	x2, [x0, #1704]
   1d670:	add	x0, x2, #0xf
   1d674:	and	x0, x0, #0xfffffffffffffff0
   1d678:	sub	sp, sp, x0
   1d67c:	mov	x22, sp
   1d680:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d684:	add	x1, x1, #0x410
   1d688:	ldp	x4, x5, [x1]
   1d68c:	stp	x4, x5, [x29, #56]
   1d690:	ldr	x0, [x1, #16]
   1d694:	str	x0, [x29, #72]
   1d698:	ldr	w0, [x1, #24]
   1d69c:	str	w0, [x29, #80]
   1d6a0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d6a4:	ldr	x1, [x0, #1712]
   1d6a8:	mov	x0, x22
   1d6ac:	bl	85c0 <memcpy@plt>
   1d6b0:	mov	w5, w21
   1d6b4:	add	x4, x29, #0x38
   1d6b8:	mov	x3, x22
   1d6bc:	mov	x2, x19
   1d6c0:	mov	w1, #0x3                   	// #3
   1d6c4:	mov	w0, w20
   1d6c8:	bl	1cef8 <omp_pause_resource_all_@@OMP_5.0+0x1d4>
   1d6cc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d6d0:	ldr	x1, [x0, #1608]
   1d6d4:	mov	w0, #0x1                   	// #1
   1d6d8:	cbz	x1, 1d6f0 <omp_pause_resource_all_@@OMP_5.0+0x9cc>
   1d6dc:	mov	sp, x29
   1d6e0:	ldp	x19, x20, [sp, #16]
   1d6e4:	ldp	x21, x22, [sp, #32]
   1d6e8:	ldp	x29, x30, [sp], #144
   1d6ec:	ret
   1d6f0:	cbz	w21, 1d70c <omp_pause_resource_all_@@OMP_5.0+0x9e8>
   1d6f4:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d6f8:	ldr	x0, [x19, #1568]
   1d6fc:	bl	8900 <free@plt>
   1d700:	str	xzr, [x19, #1568]
   1d704:	mov	w0, #0x0                   	// #0
   1d708:	b	1d6dc <omp_pause_resource_all_@@OMP_5.0+0x9b8>
   1d70c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d710:	add	x0, x0, #0x430
   1d714:	bl	b6f8 <GOMP_critical_name_end@@GOMP_1.0+0x2848>
   1d718:	b	1d6f4 <omp_pause_resource_all_@@OMP_5.0+0x9d0>
   1d71c:	stp	x29, x30, [sp, #-16]!
   1d720:	mov	x29, sp
   1d724:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d728:	ldr	x0, [x0, #1568]
   1d72c:	cbz	x0, 1d77c <omp_pause_resource_all_@@OMP_5.0+0xa58>
   1d730:	bl	8a90 <pthread_self@plt>
   1d734:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d738:	ldr	x1, [x1, #1568]
   1d73c:	ldr	x2, [x1]
   1d740:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d744:	ldr	x1, [x1, #1704]
   1d748:	bl	8a70 <pthread_setaffinity_np@plt>
   1d74c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1d750:	ldr	x0, [x0, #4016]
   1d754:	mrs	x1, tpidr_el0
   1d758:	add	x0, x1, x0
   1d75c:	mov	w1, #0x1                   	// #1
   1d760:	str	w1, [x0, #92]
   1d764:	str	wzr, [x0, #52]
   1d768:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d76c:	ldr	x1, [x1, #1608]
   1d770:	str	w1, [x0, #56]
   1d774:	ldp	x29, x30, [sp], #16
   1d778:	ret
   1d77c:	mov	w2, #0x1                   	// #1
   1d780:	mov	x1, #0xffffffffffffffff    	// #-1
   1d784:	mov	w0, #0x1                   	// #1
   1d788:	bl	1d604 <omp_pause_resource_all_@@OMP_5.0+0x8e0>
   1d78c:	and	w0, w0, #0xff
   1d790:	cbnz	w0, 1d730 <omp_pause_resource_all_@@OMP_5.0+0xa0c>
   1d794:	b	1d774 <omp_pause_resource_all_@@OMP_5.0+0xa50>
   1d798:	stp	x29, x30, [sp, #-96]!
   1d79c:	mov	x29, sp
   1d7a0:	stp	x23, x24, [sp, #48]
   1d7a4:	mov	x23, x0
   1d7a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d7ac:	ldr	x0, [x0, #1704]
   1d7b0:	cmp	xzr, x0, lsl #3
   1d7b4:	b.eq	1d898 <omp_pause_resource_all_@@OMP_5.0+0xb74>  // b.none
   1d7b8:	stp	x19, x20, [sp, #16]
   1d7bc:	stp	x21, x22, [sp, #32]
   1d7c0:	stp	x25, x26, [sp, #64]
   1d7c4:	str	x27, [sp, #80]
   1d7c8:	lsl	x21, x0, #3
   1d7cc:	mov	w27, #0x0                   	// #0
   1d7d0:	mov	x20, #0x0                   	// #0
   1d7d4:	mov	x19, #0x0                   	// #0
   1d7d8:	adrp	x22, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d7dc:	adrp	x24, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d7e0:	add	x24, x24, #0x460
   1d7e4:	adrp	x26, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1d7e8:	ldr	x25, [x26, #4040]
   1d7ec:	b	1d808 <omp_pause_resource_all_@@OMP_5.0+0xae4>
   1d7f0:	cmp	x20, #0x1
   1d7f4:	b.hi	1d868 <omp_pause_resource_all_@@OMP_5.0+0xb44>  // b.pmore
   1d7f8:	mov	x20, #0x0                   	// #0
   1d7fc:	add	x19, x19, #0x1
   1d800:	cmp	x21, x19
   1d804:	b.eq	1d880 <omp_pause_resource_all_@@OMP_5.0+0xb5c>  // b.none
   1d808:	ldr	x0, [x22, #1704]
   1d80c:	cmp	x0, x19, lsr #3
   1d810:	b.ls	1d7f0 <omp_pause_resource_all_@@OMP_5.0+0xacc>  // b.plast
   1d814:	lsr	x0, x19, #6
   1d818:	ldr	x1, [x23, x0, lsl #3]
   1d81c:	lsr	x1, x1, x19
   1d820:	tbz	w1, #0, 1d7f0 <omp_pause_resource_all_@@OMP_5.0+0xacc>
   1d824:	cbz	x20, 1d830 <omp_pause_resource_all_@@OMP_5.0+0xb0c>
   1d828:	add	x20, x20, #0x1
   1d82c:	b	1d7fc <omp_pause_resource_all_@@OMP_5.0+0xad8>
   1d830:	cbnz	w27, 1d854 <omp_pause_resource_all_@@OMP_5.0+0xb30>
   1d834:	ldr	x0, [x26, #4040]
   1d838:	mov	x2, x19
   1d83c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d840:	add	x1, x1, #0x458
   1d844:	ldr	x0, [x0]
   1d848:	bl	8b10 <fprintf@plt>
   1d84c:	mov	w27, #0x1                   	// #1
   1d850:	b	1d828 <omp_pause_resource_all_@@OMP_5.0+0xb04>
   1d854:	ldr	x0, [x26, #4040]
   1d858:	ldr	x1, [x0]
   1d85c:	mov	w0, #0x2c                  	// #44
   1d860:	bl	86b0 <fputc@plt>
   1d864:	b	1d834 <omp_pause_resource_all_@@OMP_5.0+0xb10>
   1d868:	mov	x2, x20
   1d86c:	mov	x1, x24
   1d870:	ldr	x0, [x25]
   1d874:	bl	8b10 <fprintf@plt>
   1d878:	mov	x20, #0x0                   	// #0
   1d87c:	b	1d7fc <omp_pause_resource_all_@@OMP_5.0+0xad8>
   1d880:	cmp	x20, #0x1
   1d884:	b.hi	1d8a4 <omp_pause_resource_all_@@OMP_5.0+0xb80>  // b.pmore
   1d888:	ldp	x19, x20, [sp, #16]
   1d88c:	ldp	x21, x22, [sp, #32]
   1d890:	ldp	x25, x26, [sp, #64]
   1d894:	ldr	x27, [sp, #80]
   1d898:	ldp	x23, x24, [sp, #48]
   1d89c:	ldp	x29, x30, [sp], #96
   1d8a0:	ret
   1d8a4:	mov	x2, x20
   1d8a8:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1d8ac:	add	x1, x1, #0x460
   1d8b0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1d8b4:	ldr	x0, [x0, #4040]
   1d8b8:	ldr	x0, [x0]
   1d8bc:	bl	8b10 <fprintf@plt>
   1d8c0:	ldp	x19, x20, [sp, #16]
   1d8c4:	ldp	x21, x22, [sp, #32]
   1d8c8:	ldp	x25, x26, [sp, #64]
   1d8cc:	ldr	x27, [sp, #80]
   1d8d0:	b	1d898 <omp_pause_resource_all_@@OMP_5.0+0xb74>

000000000001d8d4 <omp_get_place_num_procs@@OMP_4.5>:
   1d8d4:	tbnz	w0, #31, 1d920 <omp_get_place_num_procs@@OMP_4.5+0x4c>
   1d8d8:	mov	w1, w0
   1d8dc:	sxtw	x3, w0
   1d8e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d8e4:	ldr	x2, [x0, #1608]
   1d8e8:	mov	w0, #0x0                   	// #0
   1d8ec:	cmp	x2, w1, sxtw
   1d8f0:	b.hi	1d8f8 <omp_get_place_num_procs@@OMP_4.5+0x24>  // b.pmore
   1d8f4:	ret
   1d8f8:	stp	x29, x30, [sp, #-16]!
   1d8fc:	mov	x29, sp
   1d900:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d904:	ldr	x0, [x0, #1568]
   1d908:	ldr	x1, [x0, x3, lsl #3]
   1d90c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d910:	ldr	x0, [x0, #1704]
   1d914:	bl	1b248 <omp_test_nest_lock@OMP_1.0+0x370>
   1d918:	ldp	x29, x30, [sp], #16
   1d91c:	ret
   1d920:	mov	w0, #0x0                   	// #0
   1d924:	ret

000000000001d928 <omp_get_place_proc_ids@@OMP_4.5>:
   1d928:	tbnz	w0, #31, 1d99c <omp_get_place_proc_ids@@OMP_4.5+0x74>
   1d92c:	sxtw	x3, w0
   1d930:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d934:	ldr	x2, [x2, #1608]
   1d938:	cmp	x2, w0, sxtw
   1d93c:	b.ls	1d99c <omp_get_place_proc_ids@@OMP_4.5+0x74>  // b.plast
   1d940:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d944:	ldr	x0, [x0, #1568]
   1d948:	ldr	x5, [x0, x3, lsl #3]
   1d94c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d950:	ldr	x0, [x0, #1704]
   1d954:	lsl	x3, x0, #3
   1d958:	cmp	xzr, x0, lsl #3
   1d95c:	b.eq	1d99c <omp_get_place_proc_ids@@OMP_4.5+0x74>  // b.none
   1d960:	mov	x0, #0x0                   	// #0
   1d964:	adrp	x4, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d968:	b	1d978 <omp_get_place_proc_ids@@OMP_4.5+0x50>
   1d96c:	add	x0, x0, #0x1
   1d970:	cmp	x3, x0
   1d974:	b.eq	1d99c <omp_get_place_proc_ids@@OMP_4.5+0x74>  // b.none
   1d978:	ldr	x2, [x4, #1704]
   1d97c:	cmp	x2, x0, lsr #3
   1d980:	b.ls	1d96c <omp_get_place_proc_ids@@OMP_4.5+0x44>  // b.plast
   1d984:	lsr	x2, x0, #6
   1d988:	ldr	x2, [x5, x2, lsl #3]
   1d98c:	lsr	x2, x2, x0
   1d990:	tbz	w2, #0, 1d96c <omp_get_place_proc_ids@@OMP_4.5+0x44>
   1d994:	str	w0, [x1], #4
   1d998:	b	1d96c <omp_get_place_proc_ids@@OMP_4.5+0x44>
   1d99c:	ret
   1d9a0:	tbnz	w0, #31, 1da14 <omp_get_place_proc_ids@@OMP_4.5+0xec>
   1d9a4:	sxtw	x3, w0
   1d9a8:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d9ac:	ldr	x2, [x2, #1608]
   1d9b0:	cmp	x2, w0, sxtw
   1d9b4:	b.ls	1da14 <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.plast
   1d9b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d9bc:	ldr	x0, [x0, #1568]
   1d9c0:	ldr	x5, [x0, x3, lsl #3]
   1d9c4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d9c8:	ldr	x0, [x0, #1704]
   1d9cc:	lsl	x3, x0, #3
   1d9d0:	cmp	xzr, x0, lsl #3
   1d9d4:	b.eq	1da14 <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.none
   1d9d8:	mov	x0, #0x0                   	// #0
   1d9dc:	adrp	x4, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1d9e0:	b	1d9f0 <omp_get_place_proc_ids@@OMP_4.5+0xc8>
   1d9e4:	add	x0, x0, #0x1
   1d9e8:	cmp	x3, x0
   1d9ec:	b.eq	1da14 <omp_get_place_proc_ids@@OMP_4.5+0xec>  // b.none
   1d9f0:	ldr	x2, [x4, #1704]
   1d9f4:	cmp	x2, x0, lsr #3
   1d9f8:	b.ls	1d9e4 <omp_get_place_proc_ids@@OMP_4.5+0xbc>  // b.plast
   1d9fc:	lsr	x2, x0, #6
   1da00:	ldr	x2, [x5, x2, lsl #3]
   1da04:	lsr	x2, x2, x0
   1da08:	tbz	w2, #0, 1d9e4 <omp_get_place_proc_ids@@OMP_4.5+0xbc>
   1da0c:	str	x0, [x1], #8
   1da10:	b	1d9e4 <omp_get_place_proc_ids@@OMP_4.5+0xbc>
   1da14:	ret
   1da18:	stp	x29, x30, [sp, #-144]!
   1da1c:	mov	x29, sp
   1da20:	stp	x19, x20, [sp, #16]
   1da24:	stp	x23, x24, [sp, #48]
   1da28:	stp	x25, x26, [sp, #64]
   1da2c:	stp	x27, x28, [sp, #80]
   1da30:	mov	x24, x0
   1da34:	mov	x25, x1
   1da38:	mov	x26, x2
   1da3c:	tbnz	w3, #31, 1da68 <omp_get_place_proc_ids@@OMP_4.5+0x140>
   1da40:	sxtw	x1, w3
   1da44:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1da48:	ldr	x0, [x0, #1608]
   1da4c:	cmp	x0, w3, sxtw
   1da50:	b.ls	1da68 <omp_get_place_proc_ids@@OMP_4.5+0x140>  // b.plast
   1da54:	stp	x21, x22, [sp, #32]
   1da58:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1da5c:	ldr	x0, [x0, #1568]
   1da60:	ldr	x27, [x0, x1, lsl #3]
   1da64:	b	1da78 <omp_get_place_proc_ids@@OMP_4.5+0x150>
   1da68:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1da6c:	ldr	x27, [x0, #1712]
   1da70:	cbz	x27, 1daa8 <omp_get_place_proc_ids@@OMP_4.5+0x180>
   1da74:	stp	x21, x22, [sp, #32]
   1da78:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1da7c:	ldr	x20, [x0, #1704]
   1da80:	lsl	x20, x20, #3
   1da84:	mov	x23, x20
   1da88:	mov	w21, #0x0                   	// #0
   1da8c:	mov	x19, #0x0                   	// #0
   1da90:	add	x22, sp, #0x70
   1da94:	adrp	x28, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1da98:	add	x28, x28, #0x470
   1da9c:	add	x0, x22, #0x1
   1daa0:	str	x0, [sp, #104]
   1daa4:	b	1db88 <omp_get_place_proc_ids@@OMP_4.5+0x260>
   1daa8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1daac:	ldr	x2, [x0, #744]
   1dab0:	cmp	x2, #0x1
   1dab4:	b.ls	1daf4 <omp_get_place_proc_ids@@OMP_4.5+0x1cc>  // b.plast
   1dab8:	sub	x2, x2, #0x1
   1dabc:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1dac0:	add	x1, x1, #0x468
   1dac4:	add	x0, sp, #0x70
   1dac8:	bl	8670 <sprintf@plt>
   1dacc:	add	x19, sp, #0x70
   1dad0:	mov	x0, x19
   1dad4:	bl	85f0 <strlen@plt>
   1dad8:	mov	x4, x0
   1dadc:	mov	x3, x19
   1dae0:	mov	x2, x26
   1dae4:	mov	x1, x25
   1dae8:	mov	x0, x24
   1daec:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   1daf0:	b	1db04 <omp_get_place_proc_ids@@OMP_4.5+0x1dc>
   1daf4:	mov	w0, #0x30                  	// #48
   1daf8:	strh	w0, [sp, #112]
   1dafc:	b	1dacc <omp_get_place_proc_ids@@OMP_4.5+0x1a4>
   1db00:	ldp	x21, x22, [sp, #32]
   1db04:	ldp	x19, x20, [sp, #16]
   1db08:	ldp	x23, x24, [sp, #48]
   1db0c:	ldp	x25, x26, [sp, #64]
   1db10:	ldp	x27, x28, [sp, #80]
   1db14:	ldp	x29, x30, [sp], #144
   1db18:	ret
   1db1c:	cbnz	w21, 1dbb4 <omp_get_place_proc_ids@@OMP_4.5+0x28c>
   1db20:	b	1db78 <omp_get_place_proc_ids@@OMP_4.5+0x250>
   1db24:	cbnz	w21, 1db78 <omp_get_place_proc_ids@@OMP_4.5+0x250>
   1db28:	mov	x0, x22
   1db2c:	cmp	x20, x23
   1db30:	b.eq	1db40 <omp_get_place_proc_ids@@OMP_4.5+0x218>  // b.none
   1db34:	mov	w0, #0x2c                  	// #44
   1db38:	strb	w0, [sp, #112]
   1db3c:	ldr	x0, [sp, #104]
   1db40:	mov	x2, x19
   1db44:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1db48:	add	x1, x1, #0x458
   1db4c:	bl	8670 <sprintf@plt>
   1db50:	mov	x23, x19
   1db54:	mov	w21, #0x1                   	// #1
   1db58:	mov	x0, x22
   1db5c:	bl	85f0 <strlen@plt>
   1db60:	mov	x4, x0
   1db64:	mov	x3, x22
   1db68:	mov	x2, x26
   1db6c:	mov	x1, x25
   1db70:	mov	x0, x24
   1db74:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   1db78:	add	x0, x19, #0x1
   1db7c:	cmp	x20, x19
   1db80:	b.eq	1db00 <omp_get_place_proc_ids@@OMP_4.5+0x1d8>  // b.none
   1db84:	mov	x19, x0
   1db88:	cmp	x20, x19
   1db8c:	b.eq	1db1c <omp_get_place_proc_ids@@OMP_4.5+0x1f4>  // b.none
   1db90:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1db94:	ldr	x0, [x0, #1704]
   1db98:	cmp	x0, x19, lsr #3
   1db9c:	b.ls	1dbb0 <omp_get_place_proc_ids@@OMP_4.5+0x288>  // b.plast
   1dba0:	lsr	x0, x19, #6
   1dba4:	ldr	x0, [x27, x0, lsl #3]
   1dba8:	lsr	x0, x0, x19
   1dbac:	tbnz	w0, #0, 1db24 <omp_get_place_proc_ids@@OMP_4.5+0x1fc>
   1dbb0:	cbz	w21, 1db78 <omp_get_place_proc_ids@@OMP_4.5+0x250>
   1dbb4:	add	x0, x23, #0x1
   1dbb8:	mov	w21, #0x0                   	// #0
   1dbbc:	cmp	x0, x19
   1dbc0:	b.eq	1db78 <omp_get_place_proc_ids@@OMP_4.5+0x250>  // b.none
   1dbc4:	sub	x2, x19, #0x1
   1dbc8:	mov	x1, x28
   1dbcc:	mov	x0, x22
   1dbd0:	bl	8670 <sprintf@plt>
   1dbd4:	b	1db58 <omp_get_place_proc_ids@@OMP_4.5+0x230>
   1dbd8:	tst	w0, #0xff
   1dbdc:	b.eq	1dbe8 <omp_get_place_proc_ids@@OMP_4.5+0x2c0>  // b.none
   1dbe0:	ldrh	w0, [x1, w2, sxtw #1]
   1dbe4:	ret
   1dbe8:	ldrb	w0, [x1, w2, sxtw]
   1dbec:	b	1dbe4 <omp_get_place_proc_ids@@OMP_4.5+0x2bc>
   1dbf0:	sub	sp, sp, #0xa0
   1dbf4:	stp	x29, x30, [sp, #32]
   1dbf8:	add	x29, sp, #0x20
   1dbfc:	stp	x21, x22, [sp, #64]
   1dc00:	stp	x23, x24, [sp, #80]
   1dc04:	stp	x25, x26, [sp, #96]
   1dc08:	stp	x27, x28, [sp, #112]
   1dc0c:	mov	x25, x0
   1dc10:	mov	x22, x2
   1dc14:	mov	x27, x4
   1dc18:	ldr	x23, [sp, #160]
   1dc1c:	cmp	w3, #0x1
   1dc20:	b.eq	1dc88 <omp_get_place_proc_ids@@OMP_4.5+0x360>  // b.none
   1dc24:	stp	x19, x20, [sp, #48]
   1dc28:	b.le	1dd74 <omp_get_place_proc_ids@@OMP_4.5+0x44c>
   1dc2c:	ldr	x19, [x7, #8]
   1dc30:	umulh	x0, x2, x19
   1dc34:	mul	x19, x2, x19
   1dc38:	cbnz	x0, 1de38 <omp_get_place_proc_ids@@OMP_4.5+0x510>
   1dc3c:	ldr	x20, [x23, #8]
   1dc40:	umulh	x0, x2, x20
   1dc44:	mul	x20, x2, x20
   1dc48:	cbnz	x0, 1de44 <omp_get_place_proc_ids@@OMP_4.5+0x51c>
   1dc4c:	mov	x2, #0x2                   	// #2
   1dc50:	cmp	w3, w2
   1dc54:	b.le	1dd7c <omp_get_place_proc_ids@@OMP_4.5+0x454>
   1dc58:	ldr	x4, [x7, x2, lsl #3]
   1dc5c:	umulh	x8, x19, x4
   1dc60:	mul	x19, x19, x4
   1dc64:	cbnz	x8, 1de50 <omp_get_place_proc_ids@@OMP_4.5+0x528>
   1dc68:	ldr	x4, [x23, x2, lsl #3]
   1dc6c:	umulh	x8, x20, x4
   1dc70:	mul	x20, x20, x4
   1dc74:	add	x2, x2, #0x1
   1dc78:	cbz	x8, 1dc50 <omp_get_place_proc_ids@@OMP_4.5+0x328>
   1dc7c:	mov	w0, #0x16                  	// #22
   1dc80:	ldp	x19, x20, [sp, #48]
   1dc84:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dc88:	ldr	x0, [x4]
   1dc8c:	mul	x3, x2, x0
   1dc90:	umulh	x4, x2, x0
   1dc94:	mov	w0, #0x16                  	// #22
   1dc98:	cbnz	x4, 1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dc9c:	ldr	x4, [x5]
   1dca0:	mul	x5, x2, x4
   1dca4:	umulh	x4, x2, x4
   1dca8:	cbnz	x4, 1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dcac:	ldr	x4, [x6]
   1dcb0:	mul	x6, x2, x4
   1dcb4:	umulh	x22, x2, x4
   1dcb8:	cbnz	x22, 1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dcbc:	ldr	x0, [sp, #168]
   1dcc0:	ldr	x2, [sp, #176]
   1dcc4:	orr	x0, x0, x2
   1dcc8:	cbz	x0, 1dd10 <omp_get_place_proc_ids@@OMP_4.5+0x3e8>
   1dccc:	ldr	x0, [sp, #176]
   1dcd0:	cbz	x0, 1dd28 <omp_get_place_proc_ids@@OMP_4.5+0x400>
   1dcd4:	ldr	x0, [sp, #168]
   1dcd8:	cbz	x0, 1dd54 <omp_get_place_proc_ids@@OMP_4.5+0x42c>
   1dcdc:	mov	w0, #0x16                  	// #22
   1dce0:	ldr	x2, [sp, #168]
   1dce4:	ldr	x4, [sp, #176]
   1dce8:	cmp	x2, x4
   1dcec:	b.ne	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>  // b.any
   1dcf0:	mov	x0, x4
   1dcf4:	ldr	x4, [x4, #128]
   1dcf8:	add	x2, x1, x6
   1dcfc:	add	x1, x25, x5
   1dd00:	ldr	w0, [x0, #12]
   1dd04:	blr	x4
   1dd08:	and	w0, w0, #0xff
   1dd0c:	b	1dd44 <omp_get_place_proc_ids@@OMP_4.5+0x41c>
   1dd10:	mov	x2, x3
   1dd14:	add	x1, x1, x6
   1dd18:	add	x0, x25, x5
   1dd1c:	bl	85c0 <memcpy@plt>
   1dd20:	mov	w0, #0x0                   	// #0
   1dd24:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dd28:	ldr	x0, [sp, #168]
   1dd2c:	ldr	x4, [x0, #120]
   1dd30:	add	x2, x1, x6
   1dd34:	add	x1, x25, x5
   1dd38:	ldr	w0, [x0, #12]
   1dd3c:	blr	x4
   1dd40:	and	w0, w0, #0xff
   1dd44:	cmp	w0, #0x0
   1dd48:	mov	w0, #0x16                  	// #22
   1dd4c:	csel	w0, w0, wzr, eq  // eq = none
   1dd50:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1dd54:	ldr	x0, [sp, #176]
   1dd58:	ldr	x4, [x0, #112]
   1dd5c:	add	x2, x1, x6
   1dd60:	add	x1, x25, x5
   1dd64:	ldr	w0, [x0, #12]
   1dd68:	blr	x4
   1dd6c:	and	w0, w0, #0xff
   1dd70:	b	1dd44 <omp_get_place_proc_ids@@OMP_4.5+0x41c>
   1dd74:	mov	x20, x2
   1dd78:	mov	x19, x2
   1dd7c:	ldr	x0, [x5]
   1dd80:	mul	x4, x19, x0
   1dd84:	umulh	x2, x19, x0
   1dd88:	mov	w0, #0x16                  	// #22
   1dd8c:	cbnz	x2, 1de80 <omp_get_place_proc_ids@@OMP_4.5+0x558>
   1dd90:	ldr	x0, [x6]
   1dd94:	mul	x24, x20, x0
   1dd98:	umulh	x2, x20, x0
   1dd9c:	mov	w0, #0x16                  	// #22
   1dda0:	cbnz	x2, 1de88 <omp_get_place_proc_ids@@OMP_4.5+0x560>
   1dda4:	ldr	x0, [x27]
   1dda8:	cbz	x0, 1de74 <omp_get_place_proc_ids@@OMP_4.5+0x54c>
   1ddac:	add	x25, x25, x4
   1ddb0:	add	x24, x1, x24
   1ddb4:	mov	x28, #0x0                   	// #0
   1ddb8:	add	x21, x7, #0x8
   1ddbc:	add	x26, x6, #0x8
   1ddc0:	add	x0, x5, #0x8
   1ddc4:	str	x0, [sp, #136]
   1ddc8:	add	x0, x27, #0x8
   1ddcc:	str	x0, [sp, #144]
   1ddd0:	sub	w0, w3, #0x1
   1ddd4:	str	w0, [sp, #156]
   1ddd8:	ldr	x0, [sp, #176]
   1dddc:	str	x0, [sp, #16]
   1dde0:	ldr	x0, [sp, #168]
   1dde4:	str	x0, [sp, #8]
   1dde8:	add	x0, x23, #0x8
   1ddec:	str	x0, [sp]
   1ddf0:	mov	x7, x21
   1ddf4:	mov	x6, x26
   1ddf8:	ldr	x5, [sp, #136]
   1ddfc:	ldr	x4, [sp, #144]
   1de00:	ldr	w3, [sp, #156]
   1de04:	mov	x2, x22
   1de08:	mov	x1, x24
   1de0c:	mov	x0, x25
   1de10:	bl	1dbf0 <omp_get_place_proc_ids@@OMP_4.5+0x2c8>
   1de14:	cbnz	w0, 1de90 <omp_get_place_proc_ids@@OMP_4.5+0x568>
   1de18:	add	x28, x28, #0x1
   1de1c:	add	x25, x25, x19
   1de20:	add	x24, x24, x20
   1de24:	ldr	x1, [x27]
   1de28:	cmp	x1, x28
   1de2c:	b.hi	1ddd8 <omp_get_place_proc_ids@@OMP_4.5+0x4b0>  // b.pmore
   1de30:	ldp	x19, x20, [sp, #48]
   1de34:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de38:	mov	w0, #0x16                  	// #22
   1de3c:	ldp	x19, x20, [sp, #48]
   1de40:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de44:	mov	w0, #0x16                  	// #22
   1de48:	ldp	x19, x20, [sp, #48]
   1de4c:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de50:	mov	w0, #0x16                  	// #22
   1de54:	ldp	x19, x20, [sp, #48]
   1de58:	ldp	x21, x22, [sp, #64]
   1de5c:	ldp	x23, x24, [sp, #80]
   1de60:	ldp	x25, x26, [sp, #96]
   1de64:	ldp	x27, x28, [sp, #112]
   1de68:	ldp	x29, x30, [sp, #32]
   1de6c:	add	sp, sp, #0xa0
   1de70:	ret
   1de74:	mov	w0, #0x0                   	// #0
   1de78:	ldp	x19, x20, [sp, #48]
   1de7c:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de80:	ldp	x19, x20, [sp, #48]
   1de84:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de88:	ldp	x19, x20, [sp, #48]
   1de8c:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de90:	ldp	x19, x20, [sp, #48]
   1de94:	b	1de58 <omp_get_place_proc_ids@@OMP_4.5+0x530>
   1de98:	stp	x29, x30, [sp, #-32]!
   1de9c:	mov	x29, sp
   1dea0:	str	x19, [sp, #16]
   1dea4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1dea8:	add	x19, x0, #0x568
   1deac:	str	wzr, [x0, #1384]
   1deb0:	mov	x0, #0x0                   	// #0
   1deb4:	bl	8760 <malloc@plt>
   1deb8:	str	wzr, [x19, #4]
   1debc:	str	x0, [x19, #8]
   1dec0:	adrp	x0, 1e000 <omp_get_place_proc_ids@@OMP_4.5+0x6d8>
   1dec4:	add	x0, x0, #0x250
   1dec8:	bl	28748 <omp_get_team_num@@OMP_4.0+0x10>
   1decc:	cbnz	w0, 1dedc <omp_get_place_proc_ids@@OMP_4.5+0x5b4>
   1ded0:	ldr	x19, [sp, #16]
   1ded4:	ldp	x29, x30, [sp], #32
   1ded8:	ret
   1dedc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1dee0:	add	x0, x0, #0x478
   1dee4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1dee8:	ldxr	w1, [x0]
   1deec:	stlxr	w2, wzr, [x0]
   1def0:	cbnz	w2, 1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1def4:	tbnz	w1, #31, 1defc <omp_get_place_proc_ids@@OMP_4.5+0x5d4>
   1def8:	ret
   1defc:	stp	x29, x30, [sp, #-16]!
   1df00:	mov	x29, sp
   1df04:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1df08:	ldp	x29, x30, [sp], #16
   1df0c:	ret
   1df10:	stp	x29, x30, [sp, #-48]!
   1df14:	mov	x29, sp
   1df18:	stp	x19, x20, [sp, #16]
   1df1c:	stp	x21, x22, [sp, #32]
   1df20:	mov	x19, x0
   1df24:	mov	x20, x1
   1df28:	mov	x22, x2
   1df2c:	mov	x21, x3
   1df30:	cbz	x4, 1dfdc <omp_get_place_proc_ids@@OMP_4.5+0x6b4>
   1df34:	ldr	x0, [x4, #8]
   1df38:	ldr	x0, [x0, #16]
   1df3c:	sub	x0, x1, x0
   1df40:	ldr	x2, [x4, #16]
   1df44:	ldr	x6, [x4, #24]
   1df48:	add	x1, x2, x6, lsl #4
   1df4c:	ldur	x1, [x1, #-8]
   1df50:	cmp	x1, x0
   1df54:	b.ls	1dfdc <omp_get_place_proc_ids@@OMP_4.5+0x6b4>  // b.plast
   1df58:	subs	x6, x6, #0x1
   1df5c:	b.mi	1dfdc <omp_get_place_proc_ids@@OMP_4.5+0x6b4>  // b.first
   1df60:	mov	x7, #0x0                   	// #0
   1df64:	b	1df80 <omp_get_place_proc_ids@@OMP_4.5+0x658>
   1df68:	ldr	x3, [x2, x8]
   1df6c:	cmp	x3, x0
   1df70:	b.ls	1dfa4 <omp_get_place_proc_ids@@OMP_4.5+0x67c>  // b.plast
   1df74:	sub	x6, x5, #0x1
   1df78:	cmp	x7, x6
   1df7c:	b.gt	1dfdc <omp_get_place_proc_ids@@OMP_4.5+0x6b4>
   1df80:	add	x5, x7, x6
   1df84:	asr	x5, x5, #1
   1df88:	lsl	x8, x5, #4
   1df8c:	add	x1, x2, x8
   1df90:	ldr	x1, [x1, #8]
   1df94:	cmp	x1, x0
   1df98:	b.hi	1df68 <omp_get_place_proc_ids@@OMP_4.5+0x640>  // b.pmore
   1df9c:	add	x7, x5, #0x1
   1dfa0:	b	1df78 <omp_get_place_proc_ids@@OMP_4.5+0x650>
   1dfa4:	add	x3, x0, x21
   1dfa8:	cmp	x1, x3
   1dfac:	b.cc	1dfd0 <omp_get_place_proc_ids@@OMP_4.5+0x6a8>  // b.lo, b.ul, b.last
   1dfb0:	ldr	x1, [x2]
   1dfb4:	sub	x0, x0, x1
   1dfb8:	ldr	x3, [x4]
   1dfbc:	mov	x2, x21
   1dfc0:	mov	x1, x22
   1dfc4:	add	x0, x3, x0
   1dfc8:	bl	85c0 <memcpy@plt>
   1dfcc:	b	1dffc <omp_get_place_proc_ids@@OMP_4.5+0x6d4>
   1dfd0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1dfd4:	add	x0, x0, #0x488
   1dfd8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1dfdc:	ldr	x4, [x19, #120]
   1dfe0:	mov	x3, x21
   1dfe4:	mov	x2, x22
   1dfe8:	mov	x1, x20
   1dfec:	ldr	w0, [x19, #12]
   1dff0:	blr	x4
   1dff4:	and	w0, w0, #0xff
   1dff8:	cbz	w0, 1e00c <omp_get_place_proc_ids@@OMP_4.5+0x6e4>
   1dffc:	ldp	x19, x20, [sp, #16]
   1e000:	ldp	x21, x22, [sp, #32]
   1e004:	ldp	x29, x30, [sp], #48
   1e008:	ret
   1e00c:	add	x0, x19, #0xa8
   1e010:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1e014:	add	x6, x20, x21
   1e018:	mov	x5, x20
   1e01c:	adrp	x4, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e020:	add	x4, x4, #0x4a8
   1e024:	add	x3, x22, x21
   1e028:	mov	x2, x22
   1e02c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e030:	add	x1, x1, #0xcf8
   1e034:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e038:	add	x0, x0, #0x4b0
   1e03c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e040:	stp	x29, x30, [sp, #-32]!
   1e044:	mov	x29, sp
   1e048:	stp	x19, x20, [sp, #16]
   1e04c:	mov	x19, x0
   1e050:	mov	x20, x1
   1e054:	ldr	x2, [x0, #104]
   1e058:	ldr	w0, [x0, #12]
   1e05c:	blr	x2
   1e060:	and	w0, w0, #0xff
   1e064:	cbz	w0, 1e074 <omp_get_place_proc_ids@@OMP_4.5+0x74c>
   1e068:	ldp	x19, x20, [sp, #16]
   1e06c:	ldp	x29, x30, [sp], #32
   1e070:	ret
   1e074:	add	x0, x19, #0xa8
   1e078:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1e07c:	mov	x1, x20
   1e080:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e084:	add	x0, x0, #0x4f0
   1e088:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e08c:	stp	x29, x30, [sp, #-32]!
   1e090:	mov	x29, sp
   1e094:	str	x19, [sp, #16]
   1e098:	mov	x19, x0
   1e09c:	ldr	x0, [x0, #24]
   1e0a0:	cbnz	x0, 1e0c0 <omp_get_place_proc_ids@@OMP_4.5+0x798>
   1e0a4:	ldr	x0, [x19, #8]
   1e0a8:	bl	8900 <free@plt>
   1e0ac:	mov	x0, x19
   1e0b0:	bl	8900 <free@plt>
   1e0b4:	ldr	x19, [sp, #16]
   1e0b8:	ldp	x29, x30, [sp], #32
   1e0bc:	ret
   1e0c0:	ldr	x1, [x19, #32]
   1e0c4:	ldr	x0, [x19, #56]
   1e0c8:	bl	1e040 <omp_get_place_proc_ids@@OMP_4.5+0x718>
   1e0cc:	b	1e0a4 <omp_get_place_proc_ids@@OMP_4.5+0x77c>
   1e0d0:	stp	x29, x30, [sp, #-144]!
   1e0d4:	mov	x29, sp
   1e0d8:	str	x19, [sp, #16]
   1e0dc:	mov	x4, x0
   1e0e0:	mov	x0, x1
   1e0e4:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1e0e8:	ldr	x2, [x2, #4016]
   1e0ec:	mrs	x3, tpidr_el0
   1e0f0:	add	x2, x3, x2
   1e0f4:	ldp	x6, x7, [x2]
   1e0f8:	stp	x6, x7, [sp, #40]
   1e0fc:	ldp	x6, x7, [x2, #16]
   1e100:	stp	x6, x7, [sp, #56]
   1e104:	ldp	x6, x7, [x2, #32]
   1e108:	stp	x6, x7, [sp, #72]
   1e10c:	ldp	x6, x7, [x2, #48]
   1e110:	stp	x6, x7, [sp, #88]
   1e114:	ldp	x6, x7, [x2, #64]
   1e118:	stp	x6, x7, [sp, #104]
   1e11c:	ldp	x6, x7, [x2, #80]
   1e120:	stp	x6, x7, [sp, #120]
   1e124:	ldr	x1, [x2, #96]
   1e128:	str	x1, [sp, #136]
   1e12c:	ldr	w3, [x2, #92]
   1e130:	stp	xzr, xzr, [x2]
   1e134:	stp	xzr, xzr, [x2, #16]
   1e138:	stp	xzr, xzr, [x2, #32]
   1e13c:	stp	xzr, xzr, [x2, #48]
   1e140:	stp	xzr, xzr, [x2, #64]
   1e144:	stp	xzr, xzr, [x2, #80]
   1e148:	str	xzr, [x2, #96]
   1e14c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1e150:	ldr	x1, [x1, #1568]
   1e154:	cbz	x1, 1e178 <omp_get_place_proc_ids@@OMP_4.5+0x850>
   1e158:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1e15c:	ldr	x1, [x1, #4016]
   1e160:	mrs	x2, tpidr_el0
   1e164:	add	x1, x2, x1
   1e168:	str	w3, [x1, #92]
   1e16c:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1e170:	ldr	x2, [x2, #1608]
   1e174:	str	w2, [x1, #56]
   1e178:	blr	x4
   1e17c:	adrp	x19, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   1e180:	ldr	x19, [x19, #4016]
   1e184:	mrs	x0, tpidr_el0
   1e188:	add	x19, x0, x19
   1e18c:	mov	x0, x19
   1e190:	bl	1a234 <omp_in_final@@OMP_3.1+0x1654>
   1e194:	ldp	x0, x1, [sp, #40]
   1e198:	stp	x0, x1, [x19]
   1e19c:	ldp	x0, x1, [sp, #56]
   1e1a0:	stp	x0, x1, [x19, #16]
   1e1a4:	ldp	x0, x1, [sp, #72]
   1e1a8:	stp	x0, x1, [x19, #32]
   1e1ac:	ldp	x0, x1, [sp, #88]
   1e1b0:	stp	x0, x1, [x19, #48]
   1e1b4:	ldp	x0, x1, [sp, #104]
   1e1b8:	stp	x0, x1, [x19, #64]
   1e1bc:	ldp	x0, x1, [sp, #120]
   1e1c0:	stp	x0, x1, [x19, #80]
   1e1c4:	ldr	x0, [sp, #136]
   1e1c8:	str	x0, [x19, #96]
   1e1cc:	ldr	x19, [sp, #16]
   1e1d0:	ldp	x29, x30, [sp], #144
   1e1d4:	ret
   1e1d8:	stp	x29, x30, [sp, #-48]!
   1e1dc:	mov	x29, sp
   1e1e0:	stp	x19, x20, [sp, #16]
   1e1e4:	stp	x21, x22, [sp, #32]
   1e1e8:	mov	x19, x0
   1e1ec:	mov	x22, x1
   1e1f0:	mov	x20, x2
   1e1f4:	mov	x21, x3
   1e1f8:	ldr	x4, [x0, #112]
   1e1fc:	ldr	w0, [x0, #12]
   1e200:	blr	x4
   1e204:	and	w0, w0, #0xff
   1e208:	cbz	w0, 1e21c <omp_get_place_proc_ids@@OMP_4.5+0x8f4>
   1e20c:	ldp	x19, x20, [sp, #16]
   1e210:	ldp	x21, x22, [sp, #32]
   1e214:	ldp	x29, x30, [sp], #48
   1e218:	ret
   1e21c:	add	x0, x19, #0xa8
   1e220:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1e224:	add	x6, x22, x21
   1e228:	mov	x5, x22
   1e22c:	adrp	x4, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e230:	add	x4, x4, #0xcf8
   1e234:	add	x3, x20, x21
   1e238:	mov	x2, x20
   1e23c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e240:	add	x1, x1, #0x4a8
   1e244:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e248:	add	x0, x0, #0x4b0
   1e24c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e250:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1e254:	ldr	w0, [x0, #1384]
   1e258:	cmp	w0, #0x0
   1e25c:	b.le	1e350 <omp_get_place_proc_ids@@OMP_4.5+0xa28>
   1e260:	stp	x29, x30, [sp, #-80]!
   1e264:	mov	x29, sp
   1e268:	stp	x19, x20, [sp, #16]
   1e26c:	stp	x21, x22, [sp, #32]
   1e270:	stp	x23, x24, [sp, #48]
   1e274:	stp	x25, x26, [sp, #64]
   1e278:	mov	x21, #0x0                   	// #0
   1e27c:	mov	w22, #0x0                   	// #0
   1e280:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1e284:	add	x23, x23, #0x568
   1e288:	mov	w24, #0x1                   	// #1
   1e28c:	mov	w25, #0x2                   	// #2
   1e290:	b	1e2d4 <omp_get_place_proc_ids@@OMP_4.5+0x9ac>
   1e294:	mov	x0, x20
   1e298:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1e29c:	b	1e2f8 <omp_get_place_proc_ids@@OMP_4.5+0x9d0>
   1e2a0:	mov	w26, w24
   1e2a4:	mov	x0, x20
   1e2a8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e2ac:	b	1e328 <omp_get_place_proc_ids@@OMP_4.5+0xa00>
   1e2b0:	ldxr	w0, [x20]
   1e2b4:	stlxr	w1, wzr, [x20]
   1e2b8:	cbnz	w1, 1e2b0 <omp_get_place_proc_ids@@OMP_4.5+0x988>
   1e2bc:	tbnz	w0, #31, 1e2a0 <omp_get_place_proc_ids@@OMP_4.5+0x978>
   1e2c0:	add	w22, w22, #0x1
   1e2c4:	add	x21, x21, #0x130
   1e2c8:	ldr	w0, [x23]
   1e2cc:	cmp	w0, w22
   1e2d0:	b.le	1e338 <omp_get_place_proc_ids@@OMP_4.5+0xa10>
   1e2d4:	ldr	x19, [x23, #8]
   1e2d8:	add	x19, x19, x21
   1e2dc:	add	x20, x19, #0xa8
   1e2e0:	ldaxr	w1, [x20]
   1e2e4:	cbnz	w1, 1e2f0 <omp_get_place_proc_ids@@OMP_4.5+0x9c8>
   1e2e8:	stxr	w0, w24, [x20]
   1e2ec:	cbnz	w0, 1e2e0 <omp_get_place_proc_ids@@OMP_4.5+0x9b8>
   1e2f0:	cmp	w1, #0x0
   1e2f4:	b.ne	1e294 <omp_get_place_proc_ids@@OMP_4.5+0x96c>  // b.any
   1e2f8:	ldr	w0, [x19, #172]
   1e2fc:	cmp	w0, #0x1
   1e300:	b.ne	1e2b0 <omp_get_place_proc_ids@@OMP_4.5+0x988>  // b.any
   1e304:	ldr	x1, [x19, #64]
   1e308:	ldr	w0, [x19, #12]
   1e30c:	blr	x1
   1e310:	and	w26, w0, #0xff
   1e314:	str	w25, [x19, #172]
   1e318:	ldxr	w0, [x20]
   1e31c:	stlxr	w1, wzr, [x20]
   1e320:	cbnz	w1, 1e318 <omp_get_place_proc_ids@@OMP_4.5+0x9f0>
   1e324:	tbnz	w0, #31, 1e2a4 <omp_get_place_proc_ids@@OMP_4.5+0x97c>
   1e328:	cbnz	w26, 1e2c0 <omp_get_place_proc_ids@@OMP_4.5+0x998>
   1e32c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e330:	add	x0, x0, #0x520
   1e334:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e338:	ldp	x19, x20, [sp, #16]
   1e33c:	ldp	x21, x22, [sp, #32]
   1e340:	ldp	x23, x24, [sp, #48]
   1e344:	ldp	x25, x26, [sp, #64]
   1e348:	ldp	x29, x30, [sp], #80
   1e34c:	ret
   1e350:	ret
   1e354:	stp	x29, x30, [sp, #-128]!
   1e358:	mov	x29, sp
   1e35c:	stp	x19, x20, [sp, #16]
   1e360:	stp	x21, x22, [sp, #32]
   1e364:	mov	x19, x0
   1e368:	mov	x20, x2
   1e36c:	mov	x21, x4
   1e370:	ldr	x22, [x0, #56]
   1e374:	str	x1, [sp, #72]
   1e378:	cbz	x1, 1e410 <omp_get_place_proc_ids@@OMP_4.5+0xae8>
   1e37c:	stp	x23, x24, [sp, #48]
   1e380:	mov	x23, x3
   1e384:	add	x24, x22, #0xa0
   1e388:	add	x1, x1, x3
   1e38c:	str	x1, [sp, #72]
   1e390:	add	x1, x1, #0x1
   1e394:	str	x1, [sp, #80]
   1e398:	add	x1, sp, #0x48
   1e39c:	mov	x0, x24
   1e3a0:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e3a4:	ldr	x1, [sp, #80]
   1e3a8:	sub	x1, x1, #0x1
   1e3ac:	str	x1, [sp, #80]
   1e3b0:	cbz	x0, 1e430 <omp_get_place_proc_ids@@OMP_4.5+0xb08>
   1e3b4:	ldr	x2, [x0]
   1e3b8:	ldr	x1, [sp, #72]
   1e3bc:	sub	x1, x1, x2
   1e3c0:	str	x1, [sp, #72]
   1e3c4:	ldr	x2, [x0, #16]
   1e3c8:	ldr	x2, [x2, #16]
   1e3cc:	add	x1, x1, x2
   1e3d0:	ldr	x3, [x0, #24]
   1e3d4:	sub	x23, x3, x23
   1e3d8:	add	x1, x1, x23
   1e3dc:	str	x1, [sp, #96]
   1e3e0:	ldr	x1, [x19, #16]
   1e3e4:	mov	x4, x21
   1e3e8:	mov	x3, #0x8                   	// #8
   1e3ec:	add	x2, sp, #0x60
   1e3f0:	add	x1, x20, x1
   1e3f4:	mov	x0, x22
   1e3f8:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1e3fc:	ldp	x23, x24, [sp, #48]
   1e400:	ldp	x19, x20, [sp, #16]
   1e404:	ldp	x21, x22, [sp, #32]
   1e408:	ldp	x29, x30, [sp], #128
   1e40c:	ret
   1e410:	str	xzr, [sp, #96]
   1e414:	ldr	x1, [x0, #16]
   1e418:	mov	x3, #0x8                   	// #8
   1e41c:	add	x2, sp, #0x60
   1e420:	add	x1, x20, x1
   1e424:	mov	x0, x22
   1e428:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1e42c:	b	1e400 <omp_get_place_proc_ids@@OMP_4.5+0xad8>
   1e430:	ldr	x0, [sp, #72]
   1e434:	sub	x0, x0, #0x1
   1e438:	str	x0, [sp, #72]
   1e43c:	add	x1, sp, #0x48
   1e440:	mov	x0, x24
   1e444:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e448:	ldr	x1, [sp, #72]
   1e44c:	add	x1, x1, #0x1
   1e450:	str	x1, [sp, #72]
   1e454:	cbnz	x0, 1e3b4 <omp_get_place_proc_ids@@OMP_4.5+0xa8c>
   1e458:	add	x1, sp, #0x48
   1e45c:	mov	x0, x24
   1e460:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e464:	cbnz	x0, 1e3b4 <omp_get_place_proc_ids@@OMP_4.5+0xa8c>
   1e468:	add	x0, x22, #0xa8
   1e46c:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1e470:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e474:	add	x0, x0, #0x540
   1e478:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e47c:	stp	x29, x30, [sp, #-112]!
   1e480:	mov	x29, sp
   1e484:	stp	x19, x20, [sp, #16]
   1e488:	mov	x20, x0
   1e48c:	mov	x19, x1
   1e490:	ldr	w0, [x0, #8]
   1e494:	tbnz	w0, #1, 1e528 <omp_get_place_proc_ids@@OMP_4.5+0xc00>
   1e498:	str	x21, [sp, #32]
   1e49c:	add	x21, x20, #0xa8
   1e4a0:	mov	w0, #0x1                   	// #1
   1e4a4:	ldaxr	w1, [x21]
   1e4a8:	cbnz	w1, 1e4b4 <omp_get_place_proc_ids@@OMP_4.5+0xb8c>
   1e4ac:	stxr	w2, w0, [x21]
   1e4b0:	cbnz	w2, 1e4a4 <omp_get_place_proc_ids@@OMP_4.5+0xb7c>
   1e4b4:	cmp	w1, #0x0
   1e4b8:	b.ne	1e504 <omp_get_place_proc_ids@@OMP_4.5+0xbdc>  // b.any
   1e4bc:	ldr	w0, [x20, #172]
   1e4c0:	cmp	w0, #0x2
   1e4c4:	b.eq	1e510 <omp_get_place_proc_ids@@OMP_4.5+0xbe8>  // b.none
   1e4c8:	str	x19, [sp, #56]
   1e4cc:	add	x19, x19, #0x1
   1e4d0:	str	x19, [sp, #64]
   1e4d4:	add	x1, sp, #0x38
   1e4d8:	add	x0, x20, #0xa0
   1e4dc:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e4e0:	mov	x19, x0
   1e4e4:	ldxr	w0, [x21]
   1e4e8:	stlxr	w1, wzr, [x21]
   1e4ec:	cbnz	w1, 1e4e4 <omp_get_place_proc_ids@@OMP_4.5+0xbbc>
   1e4f0:	tbnz	w0, #31, 1e548 <omp_get_place_proc_ids@@OMP_4.5+0xc20>
   1e4f4:	cbz	x19, 1e554 <omp_get_place_proc_ids@@OMP_4.5+0xc2c>
   1e4f8:	ldr	x19, [x19, #24]
   1e4fc:	ldr	x21, [sp, #32]
   1e500:	b	1e528 <omp_get_place_proc_ids@@OMP_4.5+0xc00>
   1e504:	mov	x0, x21
   1e508:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1e50c:	b	1e4bc <omp_get_place_proc_ids@@OMP_4.5+0xb94>
   1e510:	ldxr	w0, [x21]
   1e514:	stlxr	w1, wzr, [x21]
   1e518:	cbnz	w1, 1e510 <omp_get_place_proc_ids@@OMP_4.5+0xbe8>
   1e51c:	mov	x19, #0x0                   	// #0
   1e520:	tbnz	w0, #31, 1e538 <omp_get_place_proc_ids@@OMP_4.5+0xc10>
   1e524:	ldr	x21, [sp, #32]
   1e528:	mov	x0, x19
   1e52c:	ldp	x19, x20, [sp, #16]
   1e530:	ldp	x29, x30, [sp], #112
   1e534:	ret
   1e538:	mov	x0, x21
   1e53c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e540:	ldr	x21, [sp, #32]
   1e544:	b	1e528 <omp_get_place_proc_ids@@OMP_4.5+0xc00>
   1e548:	mov	x0, x21
   1e54c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e550:	b	1e4f4 <omp_get_place_proc_ids@@OMP_4.5+0xbcc>
   1e554:	ldr	x21, [sp, #32]
   1e558:	b	1e528 <omp_get_place_proc_ids@@OMP_4.5+0xc00>
   1e55c:	stp	x29, x30, [sp, #-192]!
   1e560:	mov	x29, sp
   1e564:	stp	x23, x24, [sp, #48]
   1e568:	stp	x25, x26, [sp, #64]
   1e56c:	str	x0, [sp, #112]
   1e570:	mov	x24, x1
   1e574:	str	x2, [sp, #96]
   1e578:	mov	x26, x3
   1e57c:	mov	x25, x4
   1e580:	add	x0, x0, #0xa8
   1e584:	mov	x2, x0
   1e588:	str	x0, [sp, #120]
   1e58c:	mov	w0, #0x1                   	// #1
   1e590:	ldaxr	w1, [x2]
   1e594:	cbnz	w1, 1e5a0 <omp_get_place_proc_ids@@OMP_4.5+0xc78>
   1e598:	stxr	w3, w0, [x2]
   1e59c:	cbnz	w3, 1e590 <omp_get_place_proc_ids@@OMP_4.5+0xc68>
   1e5a0:	cmp	w1, #0x0
   1e5a4:	b.ne	1e5e8 <omp_get_place_proc_ids@@OMP_4.5+0xcc0>  // b.any
   1e5a8:	ldr	x1, [sp, #112]
   1e5ac:	ldr	w0, [x1, #172]
   1e5b0:	cmp	w0, #0x2
   1e5b4:	b.eq	1e5f4 <omp_get_place_proc_ids@@OMP_4.5+0xccc>  // b.none
   1e5b8:	stp	x21, x22, [sp, #32]
   1e5bc:	mov	x21, #0x0                   	// #0
   1e5c0:	cbz	x24, 1e7d8 <omp_get_place_proc_ids@@OMP_4.5+0xeb0>
   1e5c4:	stp	x19, x20, [sp, #16]
   1e5c8:	stp	x27, x28, [sp, #80]
   1e5cc:	mov	x28, #0x1                   	// #1
   1e5d0:	mov	x27, #0x8084                	// #32900
   1e5d4:	movk	x27, #0x8084, lsl #16
   1e5d8:	add	x0, sp, #0x88
   1e5dc:	str	x0, [sp, #104]
   1e5e0:	add	x23, x1, #0xa0
   1e5e4:	b	1e6c4 <omp_get_place_proc_ids@@OMP_4.5+0xd9c>
   1e5e8:	ldr	x0, [sp, #120]
   1e5ec:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1e5f0:	b	1e5a8 <omp_get_place_proc_ids@@OMP_4.5+0xc80>
   1e5f4:	ldr	x1, [sp, #120]
   1e5f8:	ldxr	w0, [x1]
   1e5fc:	stlxr	w2, wzr, [x1]
   1e600:	cbnz	w2, 1e5f8 <omp_get_place_proc_ids@@OMP_4.5+0xcd0>
   1e604:	tbz	w0, #31, 1e7f0 <omp_get_place_proc_ids@@OMP_4.5+0xec8>
   1e608:	ldr	x0, [sp, #120]
   1e60c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e610:	b	1e7f0 <omp_get_place_proc_ids@@OMP_4.5+0xec8>
   1e614:	add	x0, x0, #0x1
   1e618:	str	x0, [sp, #144]
   1e61c:	ldr	x1, [sp, #104]
   1e620:	mov	x0, x23
   1e624:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e628:	mov	x20, x0
   1e62c:	ldr	x0, [sp, #144]
   1e630:	sub	x0, x0, #0x1
   1e634:	str	x0, [sp, #144]
   1e638:	b	1e64c <omp_get_place_proc_ids@@OMP_4.5+0xd24>
   1e63c:	ldr	x1, [sp, #104]
   1e640:	mov	x0, x23
   1e644:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e648:	mov	x20, x0
   1e64c:	cbz	x20, 1e6b8 <omp_get_place_proc_ids@@OMP_4.5+0xd90>
   1e650:	ldr	x1, [x20, #32]
   1e654:	sub	x0, x1, #0x1
   1e658:	cmn	x0, #0x3
   1e65c:	b.hi	1e72c <omp_get_place_proc_ids@@OMP_4.5+0xe04>  // b.pmore
   1e660:	str	x0, [x20, #32]
   1e664:	cmp	w22, #0x0
   1e668:	ccmp	w19, #0x7, #0x4, eq  // eq = none
   1e66c:	b.eq	1e740 <omp_get_place_proc_ids@@OMP_4.5+0xe18>  // b.none
   1e670:	cmp	w19, #0x2
   1e674:	b.eq	1e78c <omp_get_place_proc_ids@@OMP_4.5+0xe64>  // b.none
   1e678:	cmp	w19, #0x12
   1e67c:	b.ne	1e6b0 <omp_get_place_proc_ids@@OMP_4.5+0xd88>  // b.any
   1e680:	ldr	x1, [sp, #136]
   1e684:	ldr	x0, [x20, #16]
   1e688:	ldr	x2, [x0, #16]
   1e68c:	ldr	x0, [x20]
   1e690:	sub	x2, x2, x0
   1e694:	ldr	x0, [x20, #24]
   1e698:	add	x0, x1, x0
   1e69c:	ldr	x3, [sp, #144]
   1e6a0:	sub	x3, x3, x1
   1e6a4:	add	x2, x2, x0
   1e6a8:	ldr	x0, [sp, #112]
   1e6ac:	bl	1e1d8 <omp_get_place_proc_ids@@OMP_4.5+0x8b0>
   1e6b0:	ldr	x0, [x20, #32]
   1e6b4:	cbz	x0, 1e754 <omp_get_place_proc_ids@@OMP_4.5+0xe2c>
   1e6b8:	add	x21, x21, #0x1
   1e6bc:	cmp	x24, x21
   1e6c0:	b.eq	1e7d0 <omp_get_place_proc_ids@@OMP_4.5+0xea8>  // b.none
   1e6c4:	ldrh	w0, [x25, x21, lsl #1]
   1e6c8:	and	w19, w0, #0xff
   1e6cc:	cmp	w19, #0x1f
   1e6d0:	b.hi	1e7a0 <omp_get_place_proc_ids@@OMP_4.5+0xe78>  // b.pmore
   1e6d4:	lsl	x0, x28, x19
   1e6d8:	tst	x0, x27
   1e6dc:	b.eq	1e7a0 <omp_get_place_proc_ids@@OMP_4.5+0xe78>  // b.none
   1e6e0:	ldr	x0, [sp, #96]
   1e6e4:	ldr	x2, [x0, x21, lsl #3]
   1e6e8:	str	x2, [sp, #136]
   1e6ec:	ldr	x0, [x26, x21, lsl #3]
   1e6f0:	add	x0, x2, x0
   1e6f4:	str	x0, [sp, #144]
   1e6f8:	cmp	w19, #0x1f
   1e6fc:	cset	w22, eq  // eq = none
   1e700:	and	w1, w19, #0xffffffef
   1e704:	and	w1, w1, #0xff
   1e708:	cmp	w1, #0xf
   1e70c:	b.ne	1e63c <omp_get_place_proc_ids@@OMP_4.5+0xd14>  // b.any
   1e710:	cmp	x2, x0
   1e714:	b.eq	1e614 <omp_get_place_proc_ids@@OMP_4.5+0xcec>  // b.none
   1e718:	ldr	x1, [sp, #104]
   1e71c:	mov	x0, x23
   1e720:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e724:	mov	x20, x0
   1e728:	b	1e64c <omp_get_place_proc_ids@@OMP_4.5+0xd24>
   1e72c:	cmp	w22, #0x0
   1e730:	ccmp	w19, #0x7, #0x4, eq  // eq = none
   1e734:	b.ne	1e670 <omp_get_place_proc_ids@@OMP_4.5+0xd48>  // b.any
   1e738:	cmn	x1, #0x1
   1e73c:	b.eq	1e670 <omp_get_place_proc_ids@@OMP_4.5+0xd48>  // b.none
   1e740:	str	xzr, [x20, #32]
   1e744:	cmp	w19, #0x2
   1e748:	b.eq	1e680 <omp_get_place_proc_ids@@OMP_4.5+0xd58>  // b.none
   1e74c:	cmp	w19, #0x12
   1e750:	b.eq	1e680 <omp_get_place_proc_ids@@OMP_4.5+0xd58>  // b.none
   1e754:	mov	x1, x20
   1e758:	mov	x0, x23
   1e75c:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   1e760:	ldr	x1, [x20, #48]
   1e764:	cbz	x1, 1e770 <omp_get_place_proc_ids@@OMP_4.5+0xe48>
   1e768:	mov	x0, x23
   1e76c:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   1e770:	ldr	x0, [x20, #16]
   1e774:	ldr	x1, [x0]
   1e778:	cmp	x1, #0x1
   1e77c:	b.ls	1e798 <omp_get_place_proc_ids@@OMP_4.5+0xe70>  // b.plast
   1e780:	sub	x1, x1, #0x1
   1e784:	str	x1, [x0]
   1e788:	b	1e6b8 <omp_get_place_proc_ids@@OMP_4.5+0xd90>
   1e78c:	ldr	x0, [x20, #32]
   1e790:	cbnz	x0, 1e6b8 <omp_get_place_proc_ids@@OMP_4.5+0xd90>
   1e794:	b	1e680 <omp_get_place_proc_ids@@OMP_4.5+0xd58>
   1e798:	bl	1e08c <omp_get_place_proc_ids@@OMP_4.5+0x764>
   1e79c:	b	1e6b8 <omp_get_place_proc_ids@@OMP_4.5+0xd90>
   1e7a0:	ldr	x1, [sp, #120]
   1e7a4:	ldxr	w0, [x1]
   1e7a8:	stlxr	w2, wzr, [x1]
   1e7ac:	cbnz	w2, 1e7a4 <omp_get_place_proc_ids@@OMP_4.5+0xe7c>
   1e7b0:	tbnz	w0, #31, 1e7c4 <omp_get_place_proc_ids@@OMP_4.5+0xe9c>
   1e7b4:	mov	w1, w19
   1e7b8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e7bc:	add	x0, x0, #0x570
   1e7c0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e7c4:	ldr	x0, [sp, #120]
   1e7c8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e7cc:	b	1e7b4 <omp_get_place_proc_ids@@OMP_4.5+0xe8c>
   1e7d0:	ldp	x19, x20, [sp, #16]
   1e7d4:	ldp	x27, x28, [sp, #80]
   1e7d8:	ldr	x1, [sp, #120]
   1e7dc:	ldxr	w0, [x1]
   1e7e0:	stlxr	w2, wzr, [x1]
   1e7e4:	cbnz	w2, 1e7dc <omp_get_place_proc_ids@@OMP_4.5+0xeb4>
   1e7e8:	tbnz	w0, #31, 1e800 <omp_get_place_proc_ids@@OMP_4.5+0xed8>
   1e7ec:	ldp	x21, x22, [sp, #32]
   1e7f0:	ldp	x23, x24, [sp, #48]
   1e7f4:	ldp	x25, x26, [sp, #64]
   1e7f8:	ldp	x29, x30, [sp], #192
   1e7fc:	ret
   1e800:	ldr	x0, [sp, #120]
   1e804:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e808:	ldp	x21, x22, [sp, #32]
   1e80c:	b	1e7f0 <omp_get_place_proc_ids@@OMP_4.5+0xec8>
   1e810:	stp	x29, x30, [sp, #-208]!
   1e814:	mov	x29, sp
   1e818:	stp	x27, x28, [sp, #80]
   1e81c:	mov	x27, x0
   1e820:	str	x4, [sp, #120]
   1e824:	ands	w0, w5, #0xff
   1e828:	str	w0, [sp, #132]
   1e82c:	mov	w28, #0xff                  	// #255
   1e830:	mov	w0, #0x7                   	// #7
   1e834:	csel	w28, w28, w0, ne  // ne = any
   1e838:	cmp	x1, #0x0
   1e83c:	ccmp	x27, #0x0, #0x4, ne  // ne = any
   1e840:	b.eq	1ea34 <omp_get_place_proc_ids@@OMP_4.5+0x110c>  // b.none
   1e844:	stp	x19, x20, [sp, #16]
   1e848:	stp	x21, x22, [sp, #32]
   1e84c:	stp	x23, x24, [sp, #48]
   1e850:	stp	x25, x26, [sp, #64]
   1e854:	mov	x21, x1
   1e858:	mov	x26, x2
   1e85c:	mov	x23, x3
   1e860:	add	x0, x27, #0xa8
   1e864:	mov	x2, x0
   1e868:	str	x0, [sp, #136]
   1e86c:	mov	w0, #0x1                   	// #1
   1e870:	ldaxr	w1, [x2]
   1e874:	cbnz	w1, 1e880 <omp_get_place_proc_ids@@OMP_4.5+0xf58>
   1e878:	stxr	w3, w0, [x2]
   1e87c:	cbnz	w3, 1e870 <omp_get_place_proc_ids@@OMP_4.5+0xf48>
   1e880:	cmp	w1, #0x0
   1e884:	b.ne	1e8ac <omp_get_place_proc_ids@@OMP_4.5+0xf84>  // b.any
   1e888:	ldr	w0, [x27, #172]
   1e88c:	mov	x19, #0x0                   	// #0
   1e890:	cmp	w0, #0x2
   1e894:	b.eq	1e8b8 <omp_get_place_proc_ids@@OMP_4.5+0xf90>  // b.none
   1e898:	add	x0, sp, #0x98
   1e89c:	str	x0, [sp, #104]
   1e8a0:	add	x0, x27, #0xa0
   1e8a4:	str	x0, [sp, #112]
   1e8a8:	b	1e960 <omp_get_place_proc_ids@@OMP_4.5+0x1038>
   1e8ac:	ldr	x0, [sp, #136]
   1e8b0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1e8b4:	b	1e888 <omp_get_place_proc_ids@@OMP_4.5+0xf60>
   1e8b8:	ldr	x1, [sp, #136]
   1e8bc:	ldxr	w0, [x1]
   1e8c0:	stlxr	w2, wzr, [x1]
   1e8c4:	cbnz	w2, 1e8bc <omp_get_place_proc_ids@@OMP_4.5+0xf94>
   1e8c8:	tbnz	w0, #31, 1e8e0 <omp_get_place_proc_ids@@OMP_4.5+0xfb8>
   1e8cc:	ldp	x19, x20, [sp, #16]
   1e8d0:	ldp	x21, x22, [sp, #32]
   1e8d4:	ldp	x23, x24, [sp, #48]
   1e8d8:	ldp	x25, x26, [sp, #64]
   1e8dc:	b	1ea34 <omp_get_place_proc_ids@@OMP_4.5+0x110c>
   1e8e0:	ldr	x0, [sp, #136]
   1e8e4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e8e8:	ldp	x19, x20, [sp, #16]
   1e8ec:	ldp	x21, x22, [sp, #32]
   1e8f0:	ldp	x23, x24, [sp, #48]
   1e8f4:	ldp	x25, x26, [sp, #64]
   1e8f8:	b	1ea34 <omp_get_place_proc_ids@@OMP_4.5+0x110c>
   1e8fc:	ldr	x1, [sp, #136]
   1e900:	ldxr	w0, [x1]
   1e904:	stlxr	w2, wzr, [x1]
   1e908:	cbnz	w2, 1e900 <omp_get_place_proc_ids@@OMP_4.5+0xfd8>
   1e90c:	tbnz	w0, #31, 1e92c <omp_get_place_proc_ids@@OMP_4.5+0x1004>
   1e910:	ldr	x4, [x25, #8]
   1e914:	ldr	x3, [x25]
   1e918:	ldr	x2, [sp, #160]
   1e91c:	ldr	x1, [sp, #152]
   1e920:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1e924:	add	x0, x0, #0x5a8
   1e928:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1e92c:	ldr	x0, [sp, #136]
   1e930:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1e934:	b	1e910 <omp_get_place_proc_ids@@OMP_4.5+0xfe8>
   1e938:	mov	x4, #0x0                   	// #0
   1e93c:	mov	x3, x25
   1e940:	mov	x2, x24
   1e944:	mov	x1, x22
   1e948:	mov	x0, x27
   1e94c:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1e950:	b	1e9ec <omp_get_place_proc_ids@@OMP_4.5+0x10c4>
   1e954:	add	x19, x19, #0x1
   1e958:	cmp	x21, x19
   1e95c:	b.ls	1ea10 <omp_get_place_proc_ids@@OMP_4.5+0x10e8>  // b.plast
   1e960:	ldr	x0, [x23, x19, lsl #3]
   1e964:	cbz	x0, 1e954 <omp_get_place_proc_ids@@OMP_4.5+0x102c>
   1e968:	ldr	x1, [x26, x19, lsl #3]
   1e96c:	str	x1, [sp, #152]
   1e970:	add	x0, x0, x1
   1e974:	str	x0, [sp, #160]
   1e978:	ldr	x1, [sp, #104]
   1e97c:	ldr	x0, [sp, #112]
   1e980:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1e984:	mov	x25, x0
   1e988:	cbz	x0, 1e954 <omp_get_place_proc_ids@@OMP_4.5+0x102c>
   1e98c:	mov	w2, w19
   1e990:	ldr	x1, [sp, #120]
   1e994:	ldrb	w0, [sp, #132]
   1e998:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1e99c:	ldr	x1, [x25]
   1e9a0:	ldr	x24, [sp, #152]
   1e9a4:	cmp	x1, x24
   1e9a8:	b.hi	1e8fc <omp_get_place_proc_ids@@OMP_4.5+0xfd4>  // b.pmore
   1e9ac:	ldr	x2, [sp, #160]
   1e9b0:	ldr	x3, [x25, #8]
   1e9b4:	cmp	x3, x2
   1e9b8:	b.cc	1e8fc <omp_get_place_proc_ids@@OMP_4.5+0xfd4>  // b.lo, b.ul, b.last
   1e9bc:	ldr	x3, [x25, #16]
   1e9c0:	ldr	x22, [x3, #16]
   1e9c4:	sub	x22, x22, x1
   1e9c8:	ldr	x1, [x25, #24]
   1e9cc:	add	x1, x24, x1
   1e9d0:	add	x22, x22, x1
   1e9d4:	sub	x25, x2, x24
   1e9d8:	and	w20, w28, w0
   1e9dc:	mov	w0, #0xd                   	// #13
   1e9e0:	and	w0, w20, w0
   1e9e4:	cmp	w0, #0x1
   1e9e8:	b.eq	1e938 <omp_get_place_proc_ids@@OMP_4.5+0x1010>  // b.none
   1e9ec:	and	w20, w20, #0xe
   1e9f0:	cmp	w20, #0x2
   1e9f4:	b.ne	1e954 <omp_get_place_proc_ids@@OMP_4.5+0x102c>  // b.any
   1e9f8:	mov	x3, x25
   1e9fc:	mov	x2, x22
   1ea00:	mov	x1, x24
   1ea04:	mov	x0, x27
   1ea08:	bl	1e1d8 <omp_get_place_proc_ids@@OMP_4.5+0x8b0>
   1ea0c:	b	1e954 <omp_get_place_proc_ids@@OMP_4.5+0x102c>
   1ea10:	ldr	x1, [sp, #136]
   1ea14:	ldxr	w0, [x1]
   1ea18:	stlxr	w2, wzr, [x1]
   1ea1c:	cbnz	w2, 1ea14 <omp_get_place_proc_ids@@OMP_4.5+0x10ec>
   1ea20:	tbnz	w0, #31, 1ea40 <omp_get_place_proc_ids@@OMP_4.5+0x1118>
   1ea24:	ldp	x19, x20, [sp, #16]
   1ea28:	ldp	x21, x22, [sp, #32]
   1ea2c:	ldp	x23, x24, [sp, #48]
   1ea30:	ldp	x25, x26, [sp, #64]
   1ea34:	ldp	x27, x28, [sp, #80]
   1ea38:	ldp	x29, x30, [sp], #208
   1ea3c:	ret
   1ea40:	ldr	x0, [sp, #136]
   1ea44:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1ea48:	ldp	x19, x20, [sp, #16]
   1ea4c:	ldp	x21, x22, [sp, #32]
   1ea50:	ldp	x23, x24, [sp, #48]
   1ea54:	ldp	x25, x26, [sp, #64]
   1ea58:	b	1ea34 <omp_get_place_proc_ids@@OMP_4.5+0x110c>
   1ea5c:	stp	x29, x30, [sp, #-144]!
   1ea60:	mov	x29, sp
   1ea64:	stp	x19, x20, [sp, #16]
   1ea68:	stp	x21, x22, [sp, #32]
   1ea6c:	stp	x23, x24, [sp, #48]
   1ea70:	stp	x25, x26, [sp, #64]
   1ea74:	stp	x27, x28, [sp, #80]
   1ea78:	mov	x28, x0
   1ea7c:	mov	x0, x2
   1ea80:	mov	x2, x3
   1ea84:	and	w3, w4, #0xff
   1ea88:	str	w3, [sp, #124]
   1ea8c:	ldr	x24, [x0]
   1ea90:	ldr	x3, [x0, #16]
   1ea94:	str	x3, [sp, #112]
   1ea98:	ldr	x23, [x0, #8]
   1ea9c:	sub	x23, x23, x24
   1eaa0:	asr	x23, x23, #3
   1eaa4:	ldr	x0, [x0, #24]
   1eaa8:	sub	x0, x0, x3
   1eaac:	lsr	x3, x0, #63
   1eab0:	add	x0, x3, x0, asr #3
   1eab4:	asr	x20, x0, #1
   1eab8:	str	x20, [sp, #104]
   1eabc:	str	xzr, [sp, #136]
   1eac0:	ldr	x4, [x28, #80]
   1eac4:	add	x3, sp, #0x88
   1eac8:	ldr	w0, [x28, #12]
   1eacc:	blr	x4
   1ead0:	mov	w19, w0
   1ead4:	add	w20, w20, w23
   1ead8:	cmp	w20, w0
   1eadc:	b.ne	1ec74 <omp_get_place_proc_ids@@OMP_4.5+0x134c>  // b.any
   1eae0:	mov	w25, w23
   1eae4:	mov	x0, #0x40                  	// #64
   1eae8:	bl	8c28 <fprintf@plt+0x118>
   1eaec:	mov	x22, x0
   1eaf0:	sbfiz	x0, x19, #3, #32
   1eaf4:	add	x0, x0, w19, sxtw
   1eaf8:	lsl	x0, x0, #3
   1eafc:	bl	8c28 <fprintf@plt+0x118>
   1eb00:	mov	x19, x0
   1eb04:	str	x0, [x22, #8]
   1eb08:	mov	x0, #0xffffffffffffffff    	// #-1
   1eb0c:	str	x0, [x22]
   1eb10:	str	xzr, [x22, #16]
   1eb14:	str	xzr, [x22, #24]
   1eb18:	str	xzr, [x22, #32]
   1eb1c:	str	xzr, [x22, #40]
   1eb20:	str	xzr, [x22, #48]
   1eb24:	str	x28, [x22, #56]
   1eb28:	cmp	w23, #0x0
   1eb2c:	b.le	1eba0 <omp_get_place_proc_ids@@OMP_4.5+0x1278>
   1eb30:	mov	x20, x19
   1eb34:	mov	x21, #0x0                   	// #0
   1eb38:	mov	x27, x0
   1eb3c:	add	x26, x28, #0xa0
   1eb40:	ldr	x0, [x24, x21, lsl #3]
   1eb44:	str	x0, [x20]
   1eb48:	add	x0, x0, #0x1
   1eb4c:	str	x0, [x20, #8]
   1eb50:	str	x22, [x20, #16]
   1eb54:	lsl	x0, x21, #4
   1eb58:	ldr	x1, [sp, #136]
   1eb5c:	ldr	x0, [x1, x0]
   1eb60:	str	x0, [x20, #24]
   1eb64:	str	x27, [x20, #32]
   1eb68:	str	xzr, [x20, #48]
   1eb6c:	str	xzr, [x20, #56]
   1eb70:	str	xzr, [x20, #64]
   1eb74:	mov	x1, x20
   1eb78:	mov	x0, x26
   1eb7c:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   1eb80:	add	x20, x20, #0x48
   1eb84:	add	x21, x21, #0x1
   1eb88:	cmp	w25, w21
   1eb8c:	b.gt	1eb40 <omp_get_place_proc_ids@@OMP_4.5+0x1218>
   1eb90:	sub	w0, w23, #0x1
   1eb94:	add	x0, x0, #0x1
   1eb98:	add	x0, x0, x0, lsl #3
   1eb9c:	add	x19, x19, x0, lsl #3
   1eba0:	ldr	x0, [sp, #104]
   1eba4:	cmp	w0, #0x0
   1eba8:	b.le	1ec50 <omp_get_place_proc_ids@@OMP_4.5+0x1328>
   1ebac:	ldr	x1, [sp, #112]
   1ebb0:	mov	x20, x1
   1ebb4:	sub	w21, w0, #0x1
   1ebb8:	add	x21, x21, #0x1
   1ebbc:	add	x21, x21, x21, lsl #3
   1ebc0:	add	x21, x19, x21, lsl #3
   1ebc4:	sbfiz	x23, x23, #4, #32
   1ebc8:	sub	x23, x23, x1
   1ebcc:	add	x24, x28, #0xa0
   1ebd0:	add	x2, x20, x23
   1ebd4:	ldr	x3, [sp, #136]
   1ebd8:	add	x0, x3, x2
   1ebdc:	ldr	x0, [x0, #8]
   1ebe0:	ldr	x1, [x3, x2]
   1ebe4:	sub	x0, x0, x1
   1ebe8:	ldr	x1, [x20, #8]
   1ebec:	cmp	x1, x0
   1ebf0:	b.ne	1ecac <omp_get_place_proc_ids@@OMP_4.5+0x1384>  // b.any
   1ebf4:	ldr	x4, [x20]
   1ebf8:	str	x4, [x19]
   1ebfc:	ldr	x1, [x20, #8]
   1ec00:	and	x1, x1, #0x7fffffffffffffff
   1ec04:	add	x1, x1, x4
   1ec08:	str	x1, [x19, #8]
   1ec0c:	str	x22, [x19, #16]
   1ec10:	ldr	x1, [x3, x2]
   1ec14:	str	x1, [x19, #24]
   1ec18:	mvn	x0, x0
   1ec1c:	lsr	x0, x0, #63
   1ec20:	sub	x0, x0, #0x2
   1ec24:	str	x0, [x19, #32]
   1ec28:	str	xzr, [x19, #48]
   1ec2c:	str	xzr, [x19, #56]
   1ec30:	str	xzr, [x19, #64]
   1ec34:	mov	x1, x19
   1ec38:	mov	x0, x24
   1ec3c:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   1ec40:	add	x19, x19, #0x48
   1ec44:	add	x20, x20, #0x10
   1ec48:	cmp	x19, x21
   1ec4c:	b.ne	1ebd0 <omp_get_place_proc_ids@@OMP_4.5+0x12a8>  // b.any
   1ec50:	ldr	x0, [sp, #136]
   1ec54:	bl	8900 <free@plt>
   1ec58:	ldp	x19, x20, [sp, #16]
   1ec5c:	ldp	x21, x22, [sp, #32]
   1ec60:	ldp	x23, x24, [sp, #48]
   1ec64:	ldp	x25, x26, [sp, #64]
   1ec68:	ldp	x27, x28, [sp, #80]
   1ec6c:	ldp	x29, x30, [sp], #144
   1ec70:	ret
   1ec74:	add	x0, x28, #0xa8
   1ec78:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1ec7c:	ldr	w0, [sp, #124]
   1ec80:	cbnz	w0, 1ec98 <omp_get_place_proc_ids@@OMP_4.5+0x1370>
   1ec84:	mov	w2, w19
   1ec88:	mov	w1, w20
   1ec8c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1ec90:	add	x0, x0, #0x5e8
   1ec94:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1ec98:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ec9c:	add	x0, x0, #0x568
   1eca0:	add	x0, x0, #0x10
   1eca4:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1eca8:	b	1ec84 <omp_get_place_proc_ids@@OMP_4.5+0x135c>
   1ecac:	add	x0, x28, #0xa8
   1ecb0:	ldxr	w1, [x0]
   1ecb4:	stlxr	w2, wzr, [x0]
   1ecb8:	cbnz	w2, 1ecb0 <omp_get_place_proc_ids@@OMP_4.5+0x1388>
   1ecbc:	tbnz	w1, #31, 1ecf0 <omp_get_place_proc_ids@@OMP_4.5+0x13c8>
   1ecc0:	ldr	w0, [sp, #124]
   1ecc4:	cbz	w0, 1ece4 <omp_get_place_proc_ids@@OMP_4.5+0x13bc>
   1ecc8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1eccc:	add	x0, x0, #0x568
   1ecd0:	add	x0, x0, #0x10
   1ecd4:	ldxr	w1, [x0]
   1ecd8:	stlxr	w2, wzr, [x0]
   1ecdc:	cbnz	w2, 1ecd4 <omp_get_place_proc_ids@@OMP_4.5+0x13ac>
   1ece0:	tbnz	w1, #31, 1ecf8 <omp_get_place_proc_ids@@OMP_4.5+0x13d0>
   1ece4:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1ece8:	add	x0, x0, #0x628
   1ecec:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1ecf0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1ecf4:	b	1ecc0 <omp_get_place_proc_ids@@OMP_4.5+0x1398>
   1ecf8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1ecfc:	add	x0, x0, #0x568
   1ed00:	add	x0, x0, #0x10
   1ed04:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1ed08:	b	1ece4 <omp_get_place_proc_ids@@OMP_4.5+0x13bc>
   1ed0c:	stp	x29, x30, [sp, #-176]!
   1ed10:	mov	x29, sp
   1ed14:	stp	x19, x20, [sp, #16]
   1ed18:	stp	x21, x22, [sp, #32]
   1ed1c:	stp	x23, x24, [sp, #48]
   1ed20:	stp	x25, x26, [sp, #64]
   1ed24:	stp	x27, x28, [sp, #80]
   1ed28:	mov	x24, x0
   1ed2c:	mov	x20, x1
   1ed30:	mov	x22, x2
   1ed34:	mov	x19, x3
   1ed38:	mov	x25, x4
   1ed3c:	mov	x26, x5
   1ed40:	mov	x21, x6
   1ed44:	str	x7, [sp, #104]
   1ed48:	ldr	x28, [x0, #56]
   1ed4c:	add	x27, x28, #0xa0
   1ed50:	ldr	x1, [x4, x3, lsl #3]
   1ed54:	str	x1, [sp, #120]
   1ed58:	ldr	x0, [x5, x3, lsl #3]
   1ed5c:	add	x0, x0, x1
   1ed60:	str	x0, [sp, #128]
   1ed64:	add	x1, sp, #0x78
   1ed68:	mov	x0, x27
   1ed6c:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1ed70:	mov	x23, x0
   1ed74:	mov	w2, w19
   1ed78:	mov	x1, x21
   1ed7c:	mov	w0, #0x1                   	// #1
   1ed80:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1ed84:	mov	w21, w0
   1ed88:	cbz	x23, 1ed9c <omp_get_place_proc_ids@@OMP_4.5+0x1474>
   1ed8c:	ldr	x1, [x23, #16]
   1ed90:	ldr	x0, [x20, #16]
   1ed94:	cmp	x1, x0
   1ed98:	b.eq	1eef0 <omp_get_place_proc_ids@@OMP_4.5+0x15c8>  // b.none
   1ed9c:	ldr	x0, [x26, x19, lsl #3]
   1eda0:	cbnz	x0, 1f144 <omp_get_place_proc_ids@@OMP_4.5+0x181c>
   1eda4:	ldr	x0, [sp, #120]
   1eda8:	add	x22, x25, x22, lsl #3
   1edac:	ldur	x1, [x22, #-8]
   1edb0:	cmp	x1, x0
   1edb4:	b.cs	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x14c8>  // b.hs, b.nlast
   1edb8:	sub	x0, x0, #0x1
   1edbc:	str	x0, [sp, #120]
   1edc0:	add	x1, sp, #0x78
   1edc4:	mov	x0, x27
   1edc8:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1edcc:	mov	x22, x0
   1edd0:	ldr	x2, [sp, #120]
   1edd4:	add	x2, x2, #0x1
   1edd8:	str	x2, [sp, #120]
   1eddc:	cbz	x0, 1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x14c8>
   1ede0:	ldr	x1, [x0, #16]
   1ede4:	ldr	x0, [x20, #16]
   1ede8:	cmp	x1, x0
   1edec:	b.eq	1efec <omp_get_place_proc_ids@@OMP_4.5+0x16c4>  // b.none
   1edf0:	ldr	x0, [sp, #128]
   1edf4:	add	x0, x0, #0x1
   1edf8:	str	x0, [sp, #128]
   1edfc:	add	x1, sp, #0x78
   1ee00:	mov	x0, x27
   1ee04:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1ee08:	mov	x22, x0
   1ee0c:	ldr	x4, [sp, #128]
   1ee10:	sub	x4, x4, #0x1
   1ee14:	str	x4, [sp, #128]
   1ee18:	cbz	x0, 1f144 <omp_get_place_proc_ids@@OMP_4.5+0x181c>
   1ee1c:	ldr	x1, [x0, #16]
   1ee20:	ldr	x0, [x20, #16]
   1ee24:	cmp	x1, x0
   1ee28:	b.ne	1f144 <omp_get_place_proc_ids@@OMP_4.5+0x181c>  // b.any
   1ee2c:	ldr	x1, [x22]
   1ee30:	ldr	x0, [x20]
   1ee34:	sub	x1, x1, x0
   1ee38:	ldr	x0, [x22, #24]
   1ee3c:	ldr	x2, [x20, #24]
   1ee40:	sub	x0, x0, x2
   1ee44:	cmp	x1, x0
   1ee48:	b.ne	1f144 <omp_get_place_proc_ids@@OMP_4.5+0x181c>  // b.any
   1ee4c:	and	w0, w21, #0xff
   1ee50:	add	x19, x24, x19, lsl #5
   1ee54:	str	x22, [x19, #64]
   1ee58:	and	w1, w21, #0xe
   1ee5c:	cmp	w1, #0x2
   1ee60:	cset	w1, eq  // eq = none
   1ee64:	strb	w1, [x19, #72]
   1ee68:	sub	w1, w0, #0x12
   1ee6c:	and	w1, w1, #0xff
   1ee70:	cmp	w1, #0x1
   1ee74:	cset	w1, ls  // ls = plast
   1ee78:	strb	w1, [x19, #73]
   1ee7c:	ldr	x2, [sp, #120]
   1ee80:	ldr	x1, [x22]
   1ee84:	sub	x1, x2, x1
   1ee88:	str	x1, [x19, #80]
   1ee8c:	sub	x3, x4, x2
   1ee90:	str	x3, [x19, #88]
   1ee94:	tbnz	w21, #7, 1f0e4 <omp_get_place_proc_ids@@OMP_4.5+0x17bc>
   1ee98:	ldr	x1, [x22]
   1ee9c:	cmp	x2, x1
   1eea0:	b.cc	1f0e4 <omp_get_place_proc_ids@@OMP_4.5+0x17bc>  // b.lo, b.ul, b.last
   1eea4:	ldr	x5, [x22, #8]
   1eea8:	cmp	x4, x5
   1eeac:	b.hi	1f0e4 <omp_get_place_proc_ids@@OMP_4.5+0x17bc>  // b.pmore
   1eeb0:	and	w0, w0, #0xfffffffd
   1eeb4:	and	w0, w0, #0xff
   1eeb8:	cmp	w0, #0x11
   1eebc:	b.eq	1f11c <omp_get_place_proc_ids@@OMP_4.5+0x17f4>  // b.none
   1eec0:	ldr	x0, [x22, #32]
   1eec4:	cmn	x0, #0x1
   1eec8:	b.eq	1eed4 <omp_get_place_proc_ids@@OMP_4.5+0x15ac>  // b.none
   1eecc:	add	x0, x0, #0x1
   1eed0:	str	x0, [x22, #32]
   1eed4:	ldp	x19, x20, [sp, #16]
   1eed8:	ldp	x21, x22, [sp, #32]
   1eedc:	ldp	x23, x24, [sp, #48]
   1eee0:	ldp	x25, x26, [sp, #64]
   1eee4:	ldp	x27, x28, [sp, #80]
   1eee8:	ldp	x29, x30, [sp], #176
   1eeec:	ret
   1eef0:	ldr	x1, [x23]
   1eef4:	ldr	x0, [x20]
   1eef8:	sub	x1, x1, x0
   1eefc:	ldr	x0, [x23, #24]
   1ef00:	ldr	x2, [x20, #24]
   1ef04:	sub	x0, x0, x2
   1ef08:	cmp	x1, x0
   1ef0c:	b.ne	1ed9c <omp_get_place_proc_ids@@OMP_4.5+0x1474>  // b.any
   1ef10:	and	w0, w21, #0xff
   1ef14:	add	x19, x24, x19, lsl #5
   1ef18:	str	x23, [x19, #64]
   1ef1c:	and	w1, w21, #0xe
   1ef20:	cmp	w1, #0x2
   1ef24:	cset	w1, eq  // eq = none
   1ef28:	strb	w1, [x19, #72]
   1ef2c:	sub	w1, w0, #0x12
   1ef30:	and	w1, w1, #0xff
   1ef34:	cmp	w1, #0x1
   1ef38:	cset	w1, ls  // ls = plast
   1ef3c:	strb	w1, [x19, #73]
   1ef40:	ldr	x2, [sp, #120]
   1ef44:	ldr	x1, [x23]
   1ef48:	sub	x1, x2, x1
   1ef4c:	str	x1, [x19, #80]
   1ef50:	ldr	x1, [sp, #128]
   1ef54:	sub	x3, x1, x2
   1ef58:	str	x3, [x19, #88]
   1ef5c:	tbnz	w21, #7, 1efa0 <omp_get_place_proc_ids@@OMP_4.5+0x1678>
   1ef60:	ldr	x4, [x23]
   1ef64:	cmp	x2, x4
   1ef68:	b.cc	1efa0 <omp_get_place_proc_ids@@OMP_4.5+0x1678>  // b.lo, b.ul, b.last
   1ef6c:	ldr	x5, [x23, #8]
   1ef70:	cmp	x1, x5
   1ef74:	b.hi	1efa0 <omp_get_place_proc_ids@@OMP_4.5+0x1678>  // b.pmore
   1ef78:	and	w0, w0, #0xfffffffd
   1ef7c:	and	w0, w0, #0xff
   1ef80:	cmp	w0, #0x11
   1ef84:	b.eq	1efc4 <omp_get_place_proc_ids@@OMP_4.5+0x169c>  // b.none
   1ef88:	ldr	x0, [x23, #32]
   1ef8c:	cmn	x0, #0x1
   1ef90:	b.eq	1eed4 <omp_get_place_proc_ids@@OMP_4.5+0x15ac>  // b.none
   1ef94:	add	x0, x0, #0x1
   1ef98:	str	x0, [x23, #32]
   1ef9c:	b	1eed4 <omp_get_place_proc_ids@@OMP_4.5+0x15ac>
   1efa0:	add	x0, x28, #0xa8
   1efa4:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1efa8:	ldr	x4, [x23, #8]
   1efac:	ldr	x3, [x23]
   1efb0:	ldr	x2, [sp, #128]
   1efb4:	ldr	x1, [sp, #120]
   1efb8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1efbc:	add	x0, x0, #0x658
   1efc0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1efc4:	ldr	x0, [x23, #16]
   1efc8:	ldr	x1, [x0, #16]
   1efcc:	sub	x1, x1, x4
   1efd0:	ldr	x0, [x23, #24]
   1efd4:	add	x0, x2, x0
   1efd8:	ldr	x4, [sp, #104]
   1efdc:	add	x1, x1, x0
   1efe0:	mov	x0, x28
   1efe4:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1efe8:	b	1ef88 <omp_get_place_proc_ids@@OMP_4.5+0x1660>
   1efec:	ldr	x1, [x22]
   1eff0:	ldr	x0, [x20]
   1eff4:	sub	x1, x1, x0
   1eff8:	ldr	x0, [x22, #24]
   1effc:	ldr	x3, [x20, #24]
   1f000:	sub	x0, x0, x3
   1f004:	cmp	x1, x0
   1f008:	b.ne	1edf0 <omp_get_place_proc_ids@@OMP_4.5+0x14c8>  // b.any
   1f00c:	and	w0, w21, #0xff
   1f010:	add	x19, x24, x19, lsl #5
   1f014:	str	x22, [x19, #64]
   1f018:	and	w1, w21, #0xe
   1f01c:	cmp	w1, #0x2
   1f020:	cset	w1, eq  // eq = none
   1f024:	strb	w1, [x19, #72]
   1f028:	sub	w1, w0, #0x12
   1f02c:	and	w1, w1, #0xff
   1f030:	cmp	w1, #0x1
   1f034:	cset	w1, ls  // ls = plast
   1f038:	strb	w1, [x19, #73]
   1f03c:	ldr	x1, [x22]
   1f040:	sub	x1, x2, x1
   1f044:	str	x1, [x19, #80]
   1f048:	ldr	x1, [sp, #128]
   1f04c:	sub	x3, x1, x2
   1f050:	str	x3, [x19, #88]
   1f054:	tbnz	w21, #7, 1f098 <omp_get_place_proc_ids@@OMP_4.5+0x1770>
   1f058:	ldr	x4, [x22]
   1f05c:	cmp	x2, x4
   1f060:	b.cc	1f098 <omp_get_place_proc_ids@@OMP_4.5+0x1770>  // b.lo, b.ul, b.last
   1f064:	ldr	x5, [x22, #8]
   1f068:	cmp	x1, x5
   1f06c:	b.hi	1f098 <omp_get_place_proc_ids@@OMP_4.5+0x1770>  // b.pmore
   1f070:	and	w0, w0, #0xfffffffd
   1f074:	and	w0, w0, #0xff
   1f078:	cmp	w0, #0x11
   1f07c:	b.eq	1f0bc <omp_get_place_proc_ids@@OMP_4.5+0x1794>  // b.none
   1f080:	ldr	x0, [x22, #32]
   1f084:	cmn	x0, #0x1
   1f088:	b.eq	1eed4 <omp_get_place_proc_ids@@OMP_4.5+0x15ac>  // b.none
   1f08c:	add	x0, x0, #0x1
   1f090:	str	x0, [x22, #32]
   1f094:	b	1eed4 <omp_get_place_proc_ids@@OMP_4.5+0x15ac>
   1f098:	add	x0, x28, #0xa8
   1f09c:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1f0a0:	ldr	x4, [x22, #8]
   1f0a4:	ldr	x3, [x22]
   1f0a8:	ldr	x2, [sp, #128]
   1f0ac:	ldr	x1, [sp, #120]
   1f0b0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1f0b4:	add	x0, x0, #0x658
   1f0b8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1f0bc:	ldr	x0, [x22, #16]
   1f0c0:	ldr	x1, [x0, #16]
   1f0c4:	sub	x1, x1, x4
   1f0c8:	ldr	x0, [x22, #24]
   1f0cc:	add	x0, x2, x0
   1f0d0:	ldr	x4, [sp, #104]
   1f0d4:	add	x1, x1, x0
   1f0d8:	mov	x0, x28
   1f0dc:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1f0e0:	b	1f080 <omp_get_place_proc_ids@@OMP_4.5+0x1758>
   1f0e4:	add	x0, x28, #0xa8
   1f0e8:	ldxr	w1, [x0]
   1f0ec:	stlxr	w2, wzr, [x0]
   1f0f0:	cbnz	w2, 1f0e8 <omp_get_place_proc_ids@@OMP_4.5+0x17c0>
   1f0f4:	tbnz	w1, #31, 1f114 <omp_get_place_proc_ids@@OMP_4.5+0x17ec>
   1f0f8:	ldr	x4, [x22, #8]
   1f0fc:	ldr	x3, [x22]
   1f100:	ldr	x2, [sp, #128]
   1f104:	ldr	x1, [sp, #120]
   1f108:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1f10c:	add	x0, x0, #0x658
   1f110:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1f114:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1f118:	b	1f0f8 <omp_get_place_proc_ids@@OMP_4.5+0x17d0>
   1f11c:	ldr	x0, [x22, #16]
   1f120:	ldr	x0, [x0, #16]
   1f124:	sub	x1, x0, x1
   1f128:	ldr	x0, [x22, #24]
   1f12c:	add	x0, x2, x0
   1f130:	ldr	x4, [sp, #104]
   1f134:	add	x1, x1, x0
   1f138:	mov	x0, x28
   1f13c:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1f140:	b	1eec0 <omp_get_place_proc_ids@@OMP_4.5+0x1598>
   1f144:	add	x0, x28, #0xa8
   1f148:	ldxr	w1, [x0]
   1f14c:	stlxr	w2, wzr, [x0]
   1f150:	cbnz	w2, 1f148 <omp_get_place_proc_ids@@OMP_4.5+0x1820>
   1f154:	tbnz	w1, #31, 1f16c <omp_get_place_proc_ids@@OMP_4.5+0x1844>
   1f158:	ldr	x2, [sp, #128]
   1f15c:	ldr	x1, [sp, #120]
   1f160:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1f164:	add	x0, x0, #0x6a8
   1f168:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1f16c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1f170:	b	1f158 <omp_get_place_proc_ids@@OMP_4.5+0x1830>
   1f174:	stp	x29, x30, [sp, #-16]!
   1f178:	mov	x29, sp
   1f17c:	adrp	x1, 1d000 <omp_pause_resource_all_@@OMP_5.0+0x2dc>
   1f180:	add	x1, x1, #0xe98
   1f184:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1f188:	add	x0, x0, #0x568
   1f18c:	add	x0, x0, #0x14
   1f190:	bl	8950 <pthread_once@plt>
   1f194:	ldp	x29, x30, [sp], #16
   1f198:	ret
   1f19c:	stp	x29, x30, [sp, #-16]!
   1f1a0:	mov	x29, sp
   1f1a4:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   1f1a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   1f1ac:	ldr	w0, [x0, #1388]
   1f1b0:	ldp	x29, x30, [sp], #16
   1f1b4:	ret
   1f1b8:	stp	x29, x30, [sp, #-368]!
   1f1bc:	mov	x29, sp
   1f1c0:	stp	x19, x20, [sp, #16]
   1f1c4:	stp	x21, x22, [sp, #32]
   1f1c8:	stp	x23, x24, [sp, #48]
   1f1cc:	stp	x25, x26, [sp, #64]
   1f1d0:	stp	x27, x28, [sp, #80]
   1f1d4:	mov	x21, x0
   1f1d8:	str	x0, [x29, #176]
   1f1dc:	mov	x26, x1
   1f1e0:	mov	x28, x2
   1f1e4:	str	x3, [x29, #192]
   1f1e8:	str	x4, [x29, #232]
   1f1ec:	mov	x27, x5
   1f1f0:	mov	w19, w7
   1f1f4:	str	w7, [x29, #172]
   1f1f8:	ands	w2, w6, #0xff
   1f1fc:	str	w2, [x29, #248]
   1f200:	mov	w1, #0x3                   	// #3
   1f204:	mov	w0, #0x8                   	// #8
   1f208:	csel	w0, w1, w0, eq  // eq = none
   1f20c:	str	w0, [x29, #240]
   1f210:	cmp	w2, #0x0
   1f214:	mov	w1, #0x7                   	// #7
   1f218:	mov	w0, #0xff                  	// #255
   1f21c:	csel	w0, w1, w0, eq  // eq = none
   1f220:	str	w0, [x29, #244]
   1f224:	add	x0, x26, #0x2
   1f228:	lsl	x0, x0, #5
   1f22c:	bl	8c28 <fprintf@plt+0x118>
   1f230:	mov	x20, x0
   1f234:	str	x26, [x0, #48]
   1f238:	cmp	w19, #0x3
   1f23c:	cset	x0, ne  // ne = any
   1f240:	str	x0, [x20]
   1f244:	str	x21, [x20, #56]
   1f248:	cbz	x26, 1f2cc <omp_get_place_proc_ids@@OMP_4.5+0x19a4>
   1f24c:	str	xzr, [x29, #288]
   1f250:	mov	x0, #0xffffffffffffffff    	// #-1
   1f254:	str	x0, [x29, #296]
   1f258:	str	xzr, [x29, #304]
   1f25c:	str	xzr, [x29, #272]
   1f260:	ldr	w1, [x29, #172]
   1f264:	cmp	w1, #0x1
   1f268:	cset	w0, eq  // eq = none
   1f26c:	str	w0, [x29, #120]
   1f270:	cmp	w0, #0x0
   1f274:	ccmp	x26, #0x1, #0x2, eq  // eq = none
   1f278:	b.ls	1f2ec <omp_get_place_proc_ids@@OMP_4.5+0x19c4>  // b.plast
   1f27c:	lsl	x0, x26, #4
   1f280:	add	x0, x0, #0x10
   1f284:	sub	sp, sp, x0
   1f288:	mov	x0, sp
   1f28c:	str	x0, [x29, #288]
   1f290:	cmp	w1, #0x1
   1f294:	b.ne	1f2d8 <omp_get_place_proc_ids@@OMP_4.5+0x19b0>  // b.any
   1f298:	lsl	x2, x26, #3
   1f29c:	str	x2, [x29, #152]
   1f2a0:	mov	x1, #0x1                   	// #1
   1f2a4:	str	x1, [x29, #296]
   1f2a8:	cmp	x26, x1
   1f2ac:	cset	x1, hi  // hi = pmore
   1f2b0:	add	x1, x1, #0x1
   1f2b4:	str	x1, [x29, #304]
   1f2b8:	str	xzr, [x0]
   1f2bc:	str	x2, [x0, #8]
   1f2c0:	mov	x0, #0x20                  	// #32
   1f2c4:	str	x0, [x29, #200]
   1f2c8:	b	1f2f8 <omp_get_place_proc_ids@@OMP_4.5+0x19d0>
   1f2cc:	str	xzr, [x20, #16]
   1f2d0:	str	xzr, [x20, #24]
   1f2d4:	b	1fcc0 <omp_get_place_proc_ids@@OMP_4.5+0x2398>
   1f2d8:	str	xzr, [x29, #296]
   1f2dc:	str	xzr, [x29, #152]
   1f2e0:	mov	x0, #0x8                   	// #8
   1f2e4:	str	x0, [x29, #200]
   1f2e8:	b	1f2f8 <omp_get_place_proc_ids@@OMP_4.5+0x19d0>
   1f2ec:	str	xzr, [x29, #152]
   1f2f0:	mov	x0, #0x8                   	// #8
   1f2f4:	str	x0, [x29, #200]
   1f2f8:	ldr	x0, [x29, #176]
   1f2fc:	add	x0, x0, #0xa8
   1f300:	mov	x2, x0
   1f304:	str	x0, [x29, #144]
   1f308:	mov	w0, #0x1                   	// #1
   1f30c:	ldaxr	w1, [x2]
   1f310:	cbnz	w1, 1f31c <omp_get_place_proc_ids@@OMP_4.5+0x19f4>
   1f314:	stxr	w3, w0, [x2]
   1f318:	cbnz	w3, 1f30c <omp_get_place_proc_ids@@OMP_4.5+0x19e4>
   1f31c:	cmp	w1, #0x0
   1f320:	b.ne	1f370 <omp_get_place_proc_ids@@OMP_4.5+0x1a48>  // b.any
   1f324:	ldr	x0, [x29, #176]
   1f328:	ldr	w0, [x0, #172]
   1f32c:	cmp	w0, #0x2
   1f330:	b.eq	1f37c <omp_get_place_proc_ids@@OMP_4.5+0x1a54>  // b.none
   1f334:	ldr	x0, [x29, #176]
   1f338:	add	x0, x0, #0xa0
   1f33c:	str	x0, [x29, #224]
   1f340:	ldr	x0, [x29, #152]
   1f344:	str	x0, [x29, #216]
   1f348:	str	wzr, [x29, #160]
   1f34c:	str	xzr, [x29, #184]
   1f350:	mov	x19, #0x0                   	// #0
   1f354:	add	x0, x20, #0x40
   1f358:	str	x0, [x29, #128]
   1f35c:	mov	x22, #0x5                   	// #5
   1f360:	movk	x22, #0x4, lsl #16
   1f364:	add	x0, x29, #0x138
   1f368:	str	x0, [x29, #208]
   1f36c:	b	1f3c8 <omp_get_place_proc_ids@@OMP_4.5+0x1aa0>
   1f370:	ldr	x0, [x29, #144]
   1f374:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   1f378:	b	1f324 <omp_get_place_proc_ids@@OMP_4.5+0x19fc>
   1f37c:	ldr	x1, [x29, #144]
   1f380:	ldxr	w0, [x1]
   1f384:	stlxr	w2, wzr, [x1]
   1f388:	cbnz	w2, 1f380 <omp_get_place_proc_ids@@OMP_4.5+0x1a58>
   1f38c:	tbnz	w0, #31, 1f3a0 <omp_get_place_proc_ids@@OMP_4.5+0x1a78>
   1f390:	mov	x0, x20
   1f394:	bl	8900 <free@plt>
   1f398:	mov	x20, #0x0                   	// #0
   1f39c:	b	1fcc0 <omp_get_place_proc_ids@@OMP_4.5+0x2398>
   1f3a0:	ldr	x0, [x29, #144]
   1f3a4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1f3a8:	b	1f390 <omp_get_place_proc_ids@@OMP_4.5+0x1a68>
   1f3ac:	add	x0, x20, x19, lsl #5
   1f3b0:	str	xzr, [x0, #64]
   1f3b4:	mov	x1, #0xffffffffffffffff    	// #-1
   1f3b8:	str	x1, [x0, #80]
   1f3bc:	add	x19, x19, #0x1
   1f3c0:	cmp	x26, x19
   1f3c4:	b.ls	1fbd4 <omp_get_place_proc_ids@@OMP_4.5+0x22ac>  // b.plast
   1f3c8:	mov	w2, w19
   1f3cc:	mov	x1, x27
   1f3d0:	ldrb	w0, [x29, #248]
   1f3d4:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1f3d8:	mov	w21, w0
   1f3dc:	lsl	x24, x19, #3
   1f3e0:	ldr	x0, [x28, x19, lsl #3]
   1f3e4:	cbz	x0, 1f3ac <omp_get_place_proc_ids@@OMP_4.5+0x1a84>
   1f3e8:	ldr	w1, [x29, #244]
   1f3ec:	and	w23, w1, w21
   1f3f0:	cmp	w23, #0xd
   1f3f4:	b.eq	1f3ac <omp_get_place_proc_ids@@OMP_4.5+0x1a84>  // b.none
   1f3f8:	cmp	w23, #0xe
   1f3fc:	b.eq	1f46c <omp_get_place_proc_ids@@OMP_4.5+0x1b44>  // b.none
   1f400:	cmp	w23, #0x1c
   1f404:	b.eq	1f51c <omp_get_place_proc_ids@@OMP_4.5+0x1bf4>  // b.none
   1f408:	cmp	w23, #0x1d
   1f40c:	b.eq	1f764 <omp_get_place_proc_ids@@OMP_4.5+0x1e3c>  // b.none
   1f410:	str	x0, [x29, #312]
   1f414:	cmp	w23, #0x4
   1f418:	b.eq	1f780 <omp_get_place_proc_ids@@OMP_4.5+0x1e58>  // b.none
   1f41c:	ldr	x1, [x29, #232]
   1f420:	ldr	x2, [x1, x24]
   1f424:	add	x1, x0, x2
   1f428:	str	x1, [x29, #320]
   1f42c:	cmp	w23, #0xc
   1f430:	b.eq	1f828 <omp_get_place_proc_ids@@OMP_4.5+0x1f00>  // b.none
   1f434:	cmp	w23, #0xf
   1f438:	b.ne	1f788 <omp_get_place_proc_ids@@OMP_4.5+0x1e60>  // b.any
   1f43c:	cmp	x0, x1
   1f440:	b.eq	1f93c <omp_get_place_proc_ids@@OMP_4.5+0x2014>  // b.none
   1f444:	ldr	x1, [x29, #208]
   1f448:	ldr	x0, [x29, #224]
   1f44c:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f450:	mov	x25, x0
   1f454:	cbnz	x25, 1f79c <omp_get_place_proc_ids@@OMP_4.5+0x1e74>
   1f458:	add	x0, x20, x19, lsl #5
   1f45c:	str	xzr, [x0, #64]
   1f460:	mov	x1, #0xfffffffffffffffe    	// #-2
   1f464:	str	x1, [x0, #80]
   1f468:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f46c:	str	x0, [x29, #312]
   1f470:	add	x0, x0, #0x1
   1f474:	str	x0, [x29, #320]
   1f478:	ldr	x1, [x29, #208]
   1f47c:	ldr	x0, [x29, #224]
   1f480:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f484:	ldr	x1, [x29, #320]
   1f488:	sub	x1, x1, #0x1
   1f48c:	str	x1, [x29, #320]
   1f490:	cbz	x0, 1f4d0 <omp_get_place_proc_ids@@OMP_4.5+0x1ba8>
   1f494:	ldr	x2, [x0]
   1f498:	ldr	x1, [x29, #312]
   1f49c:	sub	x1, x1, x2
   1f4a0:	str	x1, [x29, #312]
   1f4a4:	ldr	x2, [x0, #16]
   1f4a8:	ldr	x2, [x2, #16]
   1f4ac:	add	x1, x1, x2
   1f4b0:	ldr	x0, [x0, #24]
   1f4b4:	add	x1, x1, x0
   1f4b8:	str	x1, [x28, x24]
   1f4bc:	add	x0, x20, x19, lsl #5
   1f4c0:	str	xzr, [x0, #64]
   1f4c4:	mov	x1, #0xffffffffffffffff    	// #-1
   1f4c8:	str	x1, [x0, #80]
   1f4cc:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f4d0:	ldr	x0, [x29, #312]
   1f4d4:	sub	x0, x0, #0x1
   1f4d8:	str	x0, [x29, #312]
   1f4dc:	ldr	x1, [x29, #208]
   1f4e0:	ldr	x0, [x29, #224]
   1f4e4:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f4e8:	ldr	x1, [x29, #312]
   1f4ec:	add	x1, x1, #0x1
   1f4f0:	str	x1, [x29, #312]
   1f4f4:	cbnz	x0, 1f494 <omp_get_place_proc_ids@@OMP_4.5+0x1b6c>
   1f4f8:	ldr	x1, [x29, #208]
   1f4fc:	ldr	x0, [x29, #224]
   1f500:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f504:	cbnz	x0, 1f494 <omp_get_place_proc_ids@@OMP_4.5+0x1b6c>
   1f508:	ldr	x0, [x29, #144]
   1f50c:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1f510:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1f514:	add	x0, x0, #0x730
   1f518:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1f51c:	add	x23, x19, #0x1
   1f520:	ldr	x1, [x29, #232]
   1f524:	ldr	x2, [x1, x24]
   1f528:	str	x2, [x29, #136]
   1f52c:	add	x25, x2, x19
   1f530:	str	x0, [x29, #312]
   1f534:	ldr	x0, [x28, x25, lsl #3]
   1f538:	ldr	x1, [x1, x25, lsl #3]
   1f53c:	add	x0, x0, x1
   1f540:	str	x0, [x29, #320]
   1f544:	add	x0, x20, x19, lsl #5
   1f548:	str	xzr, [x0, #64]
   1f54c:	mov	x19, x0
   1f550:	mov	x0, #0xfffffffffffffffd    	// #-3
   1f554:	str	x0, [x19, #80]
   1f558:	ldr	x1, [x29, #208]
   1f55c:	ldr	x0, [x29, #224]
   1f560:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f564:	mov	x19, x0
   1f568:	cbz	x0, 1f5b4 <omp_get_place_proc_ids@@OMP_4.5+0x1c8c>
   1f56c:	mov	x21, x23
   1f570:	cmp	x23, x25
   1f574:	b.hi	1f5ac <omp_get_place_proc_ids@@OMP_4.5+0x1c84>  // b.pmore
   1f578:	ldr	x24, [x29, #232]
   1f57c:	mov	x7, #0x0                   	// #0
   1f580:	mov	x6, x27
   1f584:	mov	x5, x24
   1f588:	mov	x4, x28
   1f58c:	mov	x3, x21
   1f590:	mov	x2, x23
   1f594:	mov	x1, x19
   1f598:	mov	x0, x20
   1f59c:	bl	1ed0c <omp_get_place_proc_ids@@OMP_4.5+0x13e4>
   1f5a0:	add	x21, x21, #0x1
   1f5a4:	cmp	x25, x21
   1f5a8:	b.cs	1f57c <omp_get_place_proc_ids@@OMP_4.5+0x1c54>  // b.hs, b.nlast
   1f5ac:	sub	x19, x21, #0x1
   1f5b0:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f5b4:	ldrb	w0, [x29, #240]
   1f5b8:	asr	w21, w21, w0
   1f5bc:	mov	x0, #0x1                   	// #1
   1f5c0:	lsl	x0, x0, x21
   1f5c4:	ldr	x1, [x29, #200]
   1f5c8:	cmp	x1, x0
   1f5cc:	csel	x1, x1, x0, cs  // cs = hs, nlast
   1f5d0:	str	x1, [x29, #200]
   1f5d4:	ldr	x2, [x29, #312]
   1f5d8:	sub	x1, x2, #0x1
   1f5dc:	ldr	x3, [x29, #216]
   1f5e0:	add	x3, x3, x0
   1f5e4:	add	x1, x1, x3
   1f5e8:	add	x24, x28, x24
   1f5ec:	ldr	x3, [x24, #8]
   1f5f0:	sub	x1, x1, x3
   1f5f4:	neg	x0, x0
   1f5f8:	and	x0, x0, x1
   1f5fc:	ldr	x1, [x29, #320]
   1f600:	sub	x1, x1, x2
   1f604:	add	x0, x1, x0
   1f608:	str	x0, [x29, #216]
   1f60c:	ldr	x0, [x29, #184]
   1f610:	ldr	x1, [x29, #136]
   1f614:	add	x0, x0, x1
   1f618:	str	x0, [x29, #184]
   1f61c:	cmp	x23, x25
   1f620:	b.hi	1f75c <omp_get_place_proc_ids@@OMP_4.5+0x1e34>  // b.pmore
   1f624:	mov	x21, #0x7fff                	// #32767
   1f628:	mov	x19, #0x1                   	// #1
   1f62c:	mov	x24, #0xffffffffffffffff    	// #-1
   1f630:	str	x20, [x29, #136]
   1f634:	ldr	w20, [x29, #244]
   1f638:	str	x26, [x29, #112]
   1f63c:	ldr	x26, [x29, #128]
   1f640:	b	1f6f4 <omp_get_place_proc_ids@@OMP_4.5+0x1dcc>
   1f644:	cmp	w0, #0x80
   1f648:	b.eq	1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>  // b.none
   1f64c:	ldr	x0, [x29, #232]
   1f650:	ldr	x2, [x0, x23, lsl #3]
   1f654:	sub	x0, x2, #0x1
   1f658:	cmp	x0, x21
   1f65c:	b.hi	1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>  // b.pmore
   1f660:	ldr	x1, [x29, #320]
   1f664:	ldr	x0, [x29, #216]
   1f668:	sub	x1, x0, x1
   1f66c:	ldr	x0, [x28, x23, lsl #3]
   1f670:	add	x0, x0, x1
   1f674:	ldr	x1, [x29, #296]
   1f678:	cbz	x1, 1f6b4 <omp_get_place_proc_ids@@OMP_4.5+0x1d8c>
   1f67c:	tbnz	x1, #63, 1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>
   1f680:	lsl	x3, x1, #4
   1f684:	sub	x4, x3, #0x10
   1f688:	ldr	x3, [x29, #288]
   1f68c:	add	x3, x3, x4
   1f690:	ldr	x4, [x3, #8]
   1f694:	cmp	x0, x4
   1f698:	b.cc	1f728 <omp_get_place_proc_ids@@OMP_4.5+0x1e00>  // b.lo, b.ul, b.last
   1f69c:	add	x4, x4, #0x1, lsl #12
   1f6a0:	cmp	x0, x4
   1f6a4:	b.cc	1f730 <omp_get_place_proc_ids@@OMP_4.5+0x1e08>  // b.lo, b.ul, b.last
   1f6a8:	ldr	x3, [x29, #304]
   1f6ac:	cmp	x3, #0x1
   1f6b0:	b.eq	1f748 <omp_get_place_proc_ids@@OMP_4.5+0x1e20>  // b.none
   1f6b4:	ldr	x1, [x29, #296]
   1f6b8:	lsl	x1, x1, #4
   1f6bc:	ldr	x3, [x29, #288]
   1f6c0:	str	x0, [x3, x1]
   1f6c4:	ldr	x1, [x29, #296]
   1f6c8:	ldr	x3, [x29, #288]
   1f6cc:	add	x1, x3, x1, lsl #4
   1f6d0:	add	x0, x0, x2
   1f6d4:	str	x0, [x1, #8]
   1f6d8:	ldr	x0, [x29, #296]
   1f6dc:	add	x0, x0, #0x1
   1f6e0:	str	x0, [x29, #296]
   1f6e4:	str	x19, [x29, #304]
   1f6e8:	add	x23, x23, #0x1
   1f6ec:	cmp	x25, x23
   1f6f0:	b.cc	1f754 <omp_get_place_proc_ids@@OMP_4.5+0x1e2c>  // b.lo, b.ul, b.last
   1f6f4:	lsl	x0, x23, #5
   1f6f8:	str	xzr, [x26, x0]
   1f6fc:	mov	w2, w23
   1f700:	mov	x1, x27
   1f704:	ldrb	w0, [x29, #248]
   1f708:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1f70c:	and	w0, w0, w20
   1f710:	cmp	w0, #0x12
   1f714:	b.gt	1f644 <omp_get_place_proc_ids@@OMP_4.5+0x1d1c>
   1f718:	lsl	x0, x19, x0
   1f71c:	tst	x0, x22
   1f720:	b.eq	1f64c <omp_get_place_proc_ids@@OMP_4.5+0x1d24>  // b.none
   1f724:	b	1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>
   1f728:	str	x24, [x29, #296]
   1f72c:	b	1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>
   1f730:	add	x0, x0, x2
   1f734:	str	x0, [x3, #8]
   1f738:	ldr	x0, [x29, #304]
   1f73c:	add	x0, x0, #0x1
   1f740:	str	x0, [x29, #304]
   1f744:	b	1f6e8 <omp_get_place_proc_ids@@OMP_4.5+0x1dc0>
   1f748:	sub	x1, x1, #0x1
   1f74c:	str	x1, [x29, #296]
   1f750:	b	1f6b4 <omp_get_place_proc_ids@@OMP_4.5+0x1d8c>
   1f754:	ldr	x20, [x29, #136]
   1f758:	ldr	x26, [x29, #112]
   1f75c:	sub	x19, x23, #0x1
   1f760:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f764:	add	x0, x20, x19, lsl #5
   1f768:	str	xzr, [x0, #64]
   1f76c:	mov	x1, #0xfffffffffffffffe    	// #-2
   1f770:	str	x1, [x0, #80]
   1f774:	mov	w0, #0x1                   	// #1
   1f778:	str	w0, [x29, #160]
   1f77c:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f780:	add	x0, x0, #0x8
   1f784:	str	x0, [x29, #320]
   1f788:	ldr	x1, [x29, #208]
   1f78c:	ldr	x0, [x29, #224]
   1f790:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f794:	mov	x25, x0
   1f798:	cbz	x0, 1f7a8 <omp_get_place_proc_ids@@OMP_4.5+0x1e80>
   1f79c:	ldr	x0, [x25, #32]
   1f7a0:	cmn	x0, #0x2
   1f7a4:	b.ne	1f964 <omp_get_place_proc_ids@@OMP_4.5+0x203c>  // b.any
   1f7a8:	add	x0, x20, x19, lsl #5
   1f7ac:	str	xzr, [x0, #64]
   1f7b0:	ldrb	w0, [x29, #240]
   1f7b4:	asr	w21, w21, w0
   1f7b8:	mov	x0, #0x1                   	// #1
   1f7bc:	lsl	x21, x0, x21
   1f7c0:	ldr	x0, [x29, #184]
   1f7c4:	add	x0, x0, #0x1
   1f7c8:	str	x0, [x29, #184]
   1f7cc:	ldr	x0, [x29, #200]
   1f7d0:	cmp	x0, x21
   1f7d4:	csel	x0, x0, x21, cs  // cs = hs, nlast
   1f7d8:	str	x0, [x29, #200]
   1f7dc:	ldr	x0, [x29, #216]
   1f7e0:	sub	x1, x0, #0x1
   1f7e4:	add	x1, x1, x21
   1f7e8:	neg	x21, x21
   1f7ec:	and	x1, x21, x1
   1f7f0:	cmp	w23, #0x12
   1f7f4:	b.gt	1fa5c <omp_get_place_proc_ids@@OMP_4.5+0x2134>
   1f7f8:	mov	x0, #0x1                   	// #1
   1f7fc:	lsl	x0, x0, x23
   1f800:	tst	x0, x22
   1f804:	b.ne	1faf8 <omp_get_place_proc_ids@@OMP_4.5+0x21d0>  // b.any
   1f808:	ldr	x2, [x29, #320]
   1f80c:	ldr	x0, [x29, #312]
   1f810:	sub	x0, x2, x0
   1f814:	sub	x3, x0, #0x1
   1f818:	mov	x2, #0x7fff                	// #32767
   1f81c:	cmp	x3, x2
   1f820:	b.ls	1fa80 <omp_get_place_proc_ids@@OMP_4.5+0x2158>  // b.plast
   1f824:	b	1faf8 <omp_get_place_proc_ids@@OMP_4.5+0x21d0>
   1f828:	add	x0, x20, x19, lsl #5
   1f82c:	str	xzr, [x0, #64]
   1f830:	ldrb	w0, [x29, #240]
   1f834:	asr	w21, w21, w0
   1f838:	mov	x0, #0x1                   	// #1
   1f83c:	lsl	x0, x0, x21
   1f840:	ldr	x1, [x29, #200]
   1f844:	cmp	x1, x0
   1f848:	csel	x1, x1, x0, cs  // cs = hs, nlast
   1f84c:	str	x1, [x29, #200]
   1f850:	ldr	x1, [x29, #216]
   1f854:	sub	x1, x1, #0x1
   1f858:	add	x1, x1, x0
   1f85c:	neg	x0, x0
   1f860:	and	x0, x0, x1
   1f864:	sub	x3, x2, #0x1
   1f868:	mov	x1, #0x7fff                	// #32767
   1f86c:	cmp	x3, x1
   1f870:	b.hi	1f8ec <omp_get_place_proc_ids@@OMP_4.5+0x1fc4>  // b.pmore
   1f874:	ldr	x1, [x29, #296]
   1f878:	cbz	x1, 1f8b4 <omp_get_place_proc_ids@@OMP_4.5+0x1f8c>
   1f87c:	tbnz	x1, #63, 1f8ec <omp_get_place_proc_ids@@OMP_4.5+0x1fc4>
   1f880:	lsl	x3, x1, #4
   1f884:	sub	x4, x3, #0x10
   1f888:	ldr	x3, [x29, #288]
   1f88c:	add	x3, x3, x4
   1f890:	ldr	x4, [x3, #8]
   1f894:	cmp	x0, x4
   1f898:	b.cc	1f90c <omp_get_place_proc_ids@@OMP_4.5+0x1fe4>  // b.lo, b.ul, b.last
   1f89c:	add	x4, x4, #0x1, lsl #12
   1f8a0:	cmp	x0, x4
   1f8a4:	b.cc	1f918 <omp_get_place_proc_ids@@OMP_4.5+0x1ff0>  // b.lo, b.ul, b.last
   1f8a8:	ldr	x3, [x29, #304]
   1f8ac:	cmp	x3, #0x1
   1f8b0:	b.eq	1f930 <omp_get_place_proc_ids@@OMP_4.5+0x2008>  // b.none
   1f8b4:	ldr	x1, [x29, #296]
   1f8b8:	lsl	x1, x1, #4
   1f8bc:	ldr	x3, [x29, #288]
   1f8c0:	str	x0, [x3, x1]
   1f8c4:	ldr	x1, [x29, #296]
   1f8c8:	ldr	x3, [x29, #288]
   1f8cc:	add	x1, x3, x1, lsl #4
   1f8d0:	add	x2, x2, x0
   1f8d4:	str	x2, [x1, #8]
   1f8d8:	ldr	x1, [x29, #296]
   1f8dc:	add	x1, x1, #0x1
   1f8e0:	str	x1, [x29, #296]
   1f8e4:	mov	x1, #0x1                   	// #1
   1f8e8:	str	x1, [x29, #304]
   1f8ec:	ldr	x1, [x29, #320]
   1f8f0:	ldr	x2, [x29, #312]
   1f8f4:	sub	x1, x1, x2
   1f8f8:	add	x0, x1, x0
   1f8fc:	str	x0, [x29, #216]
   1f900:	mov	w0, #0x1                   	// #1
   1f904:	str	w0, [x29, #160]
   1f908:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f90c:	mov	x1, #0xffffffffffffffff    	// #-1
   1f910:	str	x1, [x29, #296]
   1f914:	b	1f8ec <omp_get_place_proc_ids@@OMP_4.5+0x1fc4>
   1f918:	add	x2, x2, x0
   1f91c:	str	x2, [x3, #8]
   1f920:	ldr	x1, [x29, #304]
   1f924:	add	x1, x1, #0x1
   1f928:	str	x1, [x29, #304]
   1f92c:	b	1f8ec <omp_get_place_proc_ids@@OMP_4.5+0x1fc4>
   1f930:	sub	x1, x1, #0x1
   1f934:	str	x1, [x29, #296]
   1f938:	b	1f8b4 <omp_get_place_proc_ids@@OMP_4.5+0x1f8c>
   1f93c:	add	x1, x1, #0x1
   1f940:	str	x1, [x29, #320]
   1f944:	ldr	x1, [x29, #208]
   1f948:	ldr	x0, [x29, #224]
   1f94c:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1f950:	mov	x25, x0
   1f954:	ldr	x0, [x29, #320]
   1f958:	sub	x0, x0, #0x1
   1f95c:	str	x0, [x29, #320]
   1f960:	b	1f454 <omp_get_place_proc_ids@@OMP_4.5+0x1b2c>
   1f964:	ldr	w0, [x29, #244]
   1f968:	and	w21, w21, w0
   1f96c:	sxtb	w0, w21
   1f970:	add	x4, x20, x19, lsl #5
   1f974:	str	x25, [x4, #64]
   1f978:	and	w2, w21, #0xe
   1f97c:	cmp	w2, #0x2
   1f980:	cset	w2, eq  // eq = none
   1f984:	strb	w2, [x4, #72]
   1f988:	sub	w1, w21, #0x12
   1f98c:	and	w1, w1, #0xff
   1f990:	cmp	w1, #0x1
   1f994:	cset	w1, ls  // ls = plast
   1f998:	strb	w1, [x4, #73]
   1f99c:	ldr	x2, [x29, #312]
   1f9a0:	ldr	x1, [x25]
   1f9a4:	sub	x1, x2, x1
   1f9a8:	str	x1, [x4, #80]
   1f9ac:	ldr	x1, [x29, #320]
   1f9b0:	sub	x3, x1, x2
   1f9b4:	str	x3, [x4, #88]
   1f9b8:	tbnz	w21, #7, 1f9f8 <omp_get_place_proc_ids@@OMP_4.5+0x20d0>
   1f9bc:	ldr	x4, [x25]
   1f9c0:	cmp	x2, x4
   1f9c4:	b.cc	1f9f8 <omp_get_place_proc_ids@@OMP_4.5+0x20d0>  // b.lo, b.ul, b.last
   1f9c8:	ldr	x5, [x25, #8]
   1f9cc:	cmp	x1, x5
   1f9d0:	b.hi	1f9f8 <omp_get_place_proc_ids@@OMP_4.5+0x20d0>  // b.pmore
   1f9d4:	and	w0, w0, #0xfffffffd
   1f9d8:	cmp	w0, #0x11
   1f9dc:	b.eq	1fa34 <omp_get_place_proc_ids@@OMP_4.5+0x210c>  // b.none
   1f9e0:	ldr	x0, [x25, #32]
   1f9e4:	cmn	x0, #0x1
   1f9e8:	b.eq	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>  // b.none
   1f9ec:	add	x0, x0, #0x1
   1f9f0:	str	x0, [x25, #32]
   1f9f4:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1f9f8:	ldr	x1, [x29, #144]
   1f9fc:	ldxr	w0, [x1]
   1fa00:	stlxr	w2, wzr, [x1]
   1fa04:	cbnz	w2, 1f9fc <omp_get_place_proc_ids@@OMP_4.5+0x20d4>
   1fa08:	tbnz	w0, #31, 1fa28 <omp_get_place_proc_ids@@OMP_4.5+0x2100>
   1fa0c:	ldr	x4, [x25, #8]
   1fa10:	ldr	x3, [x25]
   1fa14:	ldr	x2, [x29, #320]
   1fa18:	ldr	x1, [x29, #312]
   1fa1c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1fa20:	add	x0, x0, #0x658
   1fa24:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1fa28:	ldr	x0, [x29, #144]
   1fa2c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   1fa30:	b	1fa0c <omp_get_place_proc_ids@@OMP_4.5+0x20e4>
   1fa34:	ldr	x0, [x25, #16]
   1fa38:	ldr	x1, [x0, #16]
   1fa3c:	sub	x1, x1, x4
   1fa40:	ldr	x0, [x25, #24]
   1fa44:	add	x0, x2, x0
   1fa48:	mov	x4, #0x0                   	// #0
   1fa4c:	add	x1, x1, x0
   1fa50:	ldr	x0, [x29, #176]
   1fa54:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1fa58:	b	1f9e0 <omp_get_place_proc_ids@@OMP_4.5+0x20b8>
   1fa5c:	cmp	w23, #0x80
   1fa60:	b.eq	207b4 <omp_get_place_proc_ids@@OMP_4.5+0x2e8c>  // b.none
   1fa64:	ldr	x2, [x29, #320]
   1fa68:	ldr	x0, [x29, #312]
   1fa6c:	sub	x0, x2, x0
   1fa70:	sub	x3, x0, #0x1
   1fa74:	mov	x2, #0x7fff                	// #32767
   1fa78:	cmp	x3, x2
   1fa7c:	b.hi	207cc <omp_get_place_proc_ids@@OMP_4.5+0x2ea4>  // b.pmore
   1fa80:	ldr	x2, [x29, #296]
   1fa84:	cbz	x2, 1fac0 <omp_get_place_proc_ids@@OMP_4.5+0x2198>
   1fa88:	tbnz	x2, #63, 1faf8 <omp_get_place_proc_ids@@OMP_4.5+0x21d0>
   1fa8c:	lsl	x3, x2, #4
   1fa90:	sub	x4, x3, #0x10
   1fa94:	ldr	x3, [x29, #288]
   1fa98:	add	x3, x3, x4
   1fa9c:	ldr	x4, [x3, #8]
   1faa0:	cmp	x1, x4
   1faa4:	b.cc	1fb30 <omp_get_place_proc_ids@@OMP_4.5+0x2208>  // b.lo, b.ul, b.last
   1faa8:	add	x4, x4, #0x1, lsl #12
   1faac:	cmp	x1, x4
   1fab0:	b.cc	1fb3c <omp_get_place_proc_ids@@OMP_4.5+0x2214>  // b.lo, b.ul, b.last
   1fab4:	ldr	x3, [x29, #304]
   1fab8:	cmp	x3, #0x1
   1fabc:	b.eq	1fb54 <omp_get_place_proc_ids@@OMP_4.5+0x222c>  // b.none
   1fac0:	ldr	x2, [x29, #296]
   1fac4:	lsl	x2, x2, #4
   1fac8:	ldr	x3, [x29, #288]
   1facc:	str	x1, [x3, x2]
   1fad0:	ldr	x2, [x29, #296]
   1fad4:	ldr	x3, [x29, #288]
   1fad8:	add	x2, x3, x2, lsl #4
   1fadc:	add	x0, x1, x0
   1fae0:	str	x0, [x2, #8]
   1fae4:	ldr	x0, [x29, #296]
   1fae8:	add	x0, x0, #0x1
   1faec:	str	x0, [x29, #296]
   1faf0:	mov	x0, #0x1                   	// #1
   1faf4:	str	x0, [x29, #304]
   1faf8:	ldr	x24, [x29, #320]
   1fafc:	ldr	x21, [x29, #312]
   1fb00:	sub	x0, x24, x21
   1fb04:	add	x0, x0, x1
   1fb08:	str	x0, [x29, #216]
   1fb0c:	cmp	w23, #0x5
   1fb10:	b.ne	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>  // b.any
   1fb14:	add	x23, x19, #0x1
   1fb18:	cmp	x26, x23
   1fb1c:	b.ls	1fbd4 <omp_get_place_proc_ids@@OMP_4.5+0x22ac>  // b.plast
   1fb20:	str	x20, [x29, #136]
   1fb24:	ldr	w20, [x29, #244]
   1fb28:	ldr	x25, [x29, #128]
   1fb2c:	b	1fb64 <omp_get_place_proc_ids@@OMP_4.5+0x223c>
   1fb30:	mov	x0, #0xffffffffffffffff    	// #-1
   1fb34:	str	x0, [x29, #296]
   1fb38:	b	1faf8 <omp_get_place_proc_ids@@OMP_4.5+0x21d0>
   1fb3c:	add	x0, x1, x0
   1fb40:	str	x0, [x3, #8]
   1fb44:	ldr	x0, [x29, #304]
   1fb48:	add	x0, x0, #0x1
   1fb4c:	str	x0, [x29, #304]
   1fb50:	b	1faf8 <omp_get_place_proc_ids@@OMP_4.5+0x21d0>
   1fb54:	sub	x2, x2, #0x1
   1fb58:	str	x2, [x29, #296]
   1fb5c:	b	1fac0 <omp_get_place_proc_ids@@OMP_4.5+0x2198>
   1fb60:	mov	x23, x0
   1fb64:	sub	x19, x23, #0x1
   1fb68:	mov	w2, w23
   1fb6c:	mov	x1, x27
   1fb70:	ldrb	w0, [x29, #248]
   1fb74:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1fb78:	and	w0, w0, w20
   1fb7c:	cmp	w0, #0x4
   1fb80:	b.ne	1fbbc <omp_get_place_proc_ids@@OMP_4.5+0x2294>  // b.any
   1fb84:	ldr	x0, [x28, x23, lsl #3]
   1fb88:	cmp	x21, x0
   1fb8c:	b.hi	1fbc4 <omp_get_place_proc_ids@@OMP_4.5+0x229c>  // b.pmore
   1fb90:	add	x0, x0, #0x8
   1fb94:	cmp	x24, x0
   1fb98:	b.cc	1fbcc <omp_get_place_proc_ids@@OMP_4.5+0x22a4>  // b.lo, b.ul, b.last
   1fb9c:	lsl	x0, x23, #5
   1fba0:	str	xzr, [x25, x0]
   1fba4:	add	x0, x23, #0x1
   1fba8:	cmp	x26, x0
   1fbac:	b.hi	1fb60 <omp_get_place_proc_ids@@OMP_4.5+0x2238>  // b.pmore
   1fbb0:	ldr	x20, [x29, #136]
   1fbb4:	mov	x19, x23
   1fbb8:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1fbbc:	ldr	x20, [x29, #136]
   1fbc0:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1fbc4:	ldr	x20, [x29, #136]
   1fbc8:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1fbcc:	ldr	x20, [x29, #136]
   1fbd0:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   1fbd4:	ldr	x0, [x29, #192]
   1fbd8:	cbz	x0, 1fcf8 <omp_get_place_proc_ids@@OMP_4.5+0x23d0>
   1fbdc:	cmp	x26, #0x1
   1fbe0:	b.ne	1fce4 <omp_get_place_proc_ids@@OMP_4.5+0x23bc>  // b.any
   1fbe4:	ldr	x0, [x29, #192]
   1fbe8:	ldr	x1, [x0]
   1fbec:	str	x1, [x20, #32]
   1fbf0:	str	x1, [x20, #16]
   1fbf4:	ldr	x0, [x29, #232]
   1fbf8:	ldr	x0, [x0]
   1fbfc:	add	x0, x0, x1
   1fc00:	str	x0, [x20, #24]
   1fc04:	str	xzr, [x29, #192]
   1fc08:	str	xzr, [x20, #8]
   1fc0c:	ldr	x0, [x29, #184]
   1fc10:	cmp	x0, #0x0
   1fc14:	ldr	w1, [x29, #160]
   1fc18:	ccmp	w1, #0x0, #0x0, eq  // eq = none
   1fc1c:	b.ne	1fde4 <omp_get_place_proc_ids@@OMP_4.5+0x24bc>  // b.any
   1fc20:	ldr	w0, [x29, #172]
   1fc24:	cmp	w0, #0x1
   1fc28:	b.eq	20568 <omp_get_place_proc_ids@@OMP_4.5+0x2c40>  // b.none
   1fc2c:	ldr	x0, [x29, #192]
   1fc30:	cbz	x0, 1fca0 <omp_get_place_proc_ids@@OMP_4.5+0x2378>
   1fc34:	ldr	x0, [x29, #296]
   1fc38:	cmp	x0, #0x0
   1fc3c:	b.le	1fc94 <omp_get_place_proc_ids@@OMP_4.5+0x236c>
   1fc40:	mov	x19, #0x0                   	// #0
   1fc44:	ldr	x21, [x29, #176]
   1fc48:	ldr	x1, [x29, #288]
   1fc4c:	lsl	x0, x19, #4
   1fc50:	add	x2, x1, x0
   1fc54:	ldr	x0, [x1, x0]
   1fc58:	ldr	x3, [x2, #8]
   1fc5c:	ldr	x2, [x1]
   1fc60:	sub	x2, x0, x2
   1fc64:	ldr	x1, [x20, #16]
   1fc68:	mov	x4, #0x0                   	// #0
   1fc6c:	sub	x3, x3, x0
   1fc70:	ldr	x5, [x29, #272]
   1fc74:	add	x2, x5, x2
   1fc78:	add	x1, x0, x1
   1fc7c:	mov	x0, x21
   1fc80:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1fc84:	add	x19, x19, #0x1
   1fc88:	ldr	x0, [x29, #296]
   1fc8c:	cmp	x0, x19
   1fc90:	b.gt	1fc48 <omp_get_place_proc_ids@@OMP_4.5+0x2320>
   1fc94:	ldr	x0, [x29, #272]
   1fc98:	bl	8900 <free@plt>
   1fc9c:	str	xzr, [x29, #272]
   1fca0:	ldr	w0, [x29, #172]
   1fca4:	cmp	w0, #0x3
   1fca8:	b.eq	20648 <omp_get_place_proc_ids@@OMP_4.5+0x2d20>  // b.none
   1fcac:	ldr	x1, [x29, #144]
   1fcb0:	ldxr	w0, [x1]
   1fcb4:	stlxr	w2, wzr, [x1]
   1fcb8:	cbnz	w2, 1fcb0 <omp_get_place_proc_ids@@OMP_4.5+0x2388>
   1fcbc:	tbnz	w0, #31, 20660 <omp_get_place_proc_ids@@OMP_4.5+0x2d38>
   1fcc0:	mov	x0, x20
   1fcc4:	mov	sp, x29
   1fcc8:	ldp	x19, x20, [sp, #16]
   1fccc:	ldp	x21, x22, [sp, #32]
   1fcd0:	ldp	x23, x24, [sp, #48]
   1fcd4:	ldp	x25, x26, [sp, #64]
   1fcd8:	ldp	x27, x28, [sp, #80]
   1fcdc:	ldp	x29, x30, [sp], #368
   1fce0:	ret
   1fce4:	ldr	x0, [x29, #144]
   1fce8:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1fcec:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1fcf0:	add	x0, x0, #0x758
   1fcf4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1fcf8:	ldr	x0, [x29, #184]
   1fcfc:	cmp	x0, #0x0
   1fd00:	ldr	w0, [x29, #120]
   1fd04:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1fd08:	b.eq	1fdc8 <omp_get_place_proc_ids@@OMP_4.5+0x24a0>  // b.none
   1fd0c:	ldr	x0, [x29, #216]
   1fd10:	ldr	x1, [x29, #200]
   1fd14:	add	x1, x0, x1
   1fd18:	ldr	x0, [x29, #176]
   1fd1c:	ldr	x2, [x0, #96]
   1fd20:	sub	x1, x1, #0x1
   1fd24:	ldr	w0, [x0, #12]
   1fd28:	blr	x2
   1fd2c:	str	x0, [x20, #32]
   1fd30:	cbz	x0, 1fda4 <omp_get_place_proc_ids@@OMP_4.5+0x247c>
   1fd34:	ldr	x2, [x29, #200]
   1fd38:	sub	x1, x2, #0x1
   1fd3c:	add	x0, x0, x1
   1fd40:	neg	x1, x2
   1fd44:	and	x0, x0, x1
   1fd48:	str	x0, [x20, #16]
   1fd4c:	ldr	x1, [x29, #216]
   1fd50:	add	x0, x0, x1
   1fd54:	str	x0, [x20, #24]
   1fd58:	ldr	x0, [x29, #304]
   1fd5c:	cmp	x0, #0x1
   1fd60:	b.eq	1fdb8 <omp_get_place_proc_ids@@OMP_4.5+0x2490>  // b.none
   1fd64:	ldr	x0, [x29, #296]
   1fd68:	cmp	x0, #0x0
   1fd6c:	b.le	1fc08 <omp_get_place_proc_ids@@OMP_4.5+0x22e0>
   1fd70:	ldr	x1, [x29, #288]
   1fd74:	add	x0, x1, x0, lsl #4
   1fd78:	ldur	x2, [x0, #-8]
   1fd7c:	ldr	x0, [x1]
   1fd80:	sub	x0, x2, x0
   1fd84:	bl	8760 <malloc@plt>
   1fd88:	str	x0, [x29, #192]
   1fd8c:	str	x0, [x29, #272]
   1fd90:	cbz	x0, 1fc08 <omp_get_place_proc_ids@@OMP_4.5+0x22e0>
   1fd94:	str	x20, [x29, #280]
   1fd98:	add	x0, x29, #0x110
   1fd9c:	str	x0, [x29, #192]
   1fda0:	b	1fc08 <omp_get_place_proc_ids@@OMP_4.5+0x22e0>
   1fda4:	ldr	x0, [x29, #144]
   1fda8:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   1fdac:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   1fdb0:	add	x0, x0, #0x770
   1fdb4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   1fdb8:	ldr	x0, [x29, #296]
   1fdbc:	sub	x0, x0, #0x1
   1fdc0:	str	x0, [x29, #296]
   1fdc4:	b	1fd64 <omp_get_place_proc_ids@@OMP_4.5+0x243c>
   1fdc8:	str	xzr, [x20, #32]
   1fdcc:	str	xzr, [x20, #16]
   1fdd0:	str	xzr, [x20, #24]
   1fdd4:	str	xzr, [x20, #8]
   1fdd8:	ldr	w0, [x29, #160]
   1fddc:	cbnz	w0, 1fde8 <omp_get_place_proc_ids@@OMP_4.5+0x24c0>
   1fde0:	b	1fca0 <omp_get_place_proc_ids@@OMP_4.5+0x2378>
   1fde4:	cbnz	x0, 1fe24 <omp_get_place_proc_ids@@OMP_4.5+0x24fc>
   1fde8:	ldr	x24, [x20, #8]
   1fdec:	str	xzr, [x29, #112]
   1fdf0:	mov	x0, #0xffffffffffffffff    	// #-1
   1fdf4:	str	x0, [x29, #136]
   1fdf8:	str	xzr, [x29, #120]
   1fdfc:	mov	x19, #0x0                   	// #0
   1fe00:	add	x0, x29, #0x138
   1fe04:	str	x0, [x29, #160]
   1fe08:	add	x1, x29, #0x108
   1fe0c:	str	x1, [x29, #104]
   1fe10:	add	x0, x29, #0x150
   1fe14:	str	x0, [x29, #128]
   1fe18:	ldr	x22, [x29, #152]
   1fe1c:	str	x27, [x29, #216]
   1fe20:	b	1ff94 <omp_get_place_proc_ids@@OMP_4.5+0x266c>
   1fe24:	add	x0, x0, x0, lsl #3
   1fe28:	lsl	x0, x0, #3
   1fe2c:	bl	8c28 <fprintf@plt+0x118>
   1fe30:	str	x0, [x20, #8]
   1fe34:	b	1fde8 <omp_get_place_proc_ids@@OMP_4.5+0x24c0>
   1fe38:	cmp	w25, #0x1d
   1fe3c:	b.ne	20680 <omp_get_place_proc_ids@@OMP_4.5+0x2d58>  // b.any
   1fe40:	str	x2, [x29, #312]
   1fe44:	add	x2, x2, #0x8
   1fe48:	str	x2, [x29, #320]
   1fe4c:	ldr	x1, [x29, #160]
   1fe50:	ldr	x0, [x29, #224]
   1fe54:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   1fe58:	mov	x23, x0
   1fe5c:	cbz	x0, 20110 <omp_get_place_proc_ids@@OMP_4.5+0x27e8>
   1fe60:	ldr	x25, [x29, #312]
   1fe64:	ldr	x0, [x0]
   1fe68:	cmp	x0, x25
   1fe6c:	b.hi	20110 <omp_get_place_proc_ids@@OMP_4.5+0x27e8>  // b.pmore
   1fe70:	ldr	x1, [x23, #8]
   1fe74:	ldr	x0, [x29, #320]
   1fe78:	cmp	x1, x0
   1fe7c:	b.cc	20110 <omp_get_place_proc_ids@@OMP_4.5+0x27e8>  // b.lo, b.ul, b.last
   1fe80:	sub	w2, w19, #0x1
   1fe84:	ldr	x1, [x29, #216]
   1fe88:	ldrb	w0, [x29, #248]
   1fe8c:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1fe90:	ldr	w1, [x29, #244]
   1fe94:	and	w0, w0, w1
   1fe98:	cmp	w0, #0x1d
   1fe9c:	b.eq	1fecc <omp_get_place_proc_ids@@OMP_4.5+0x25a4>  // b.none
   1fea0:	sub	x1, x19, #0x1
   1fea4:	ldr	x2, [x21, #32]
   1fea8:	cbz	x2, 20124 <omp_get_place_proc_ids@@OMP_4.5+0x27fc>
   1feac:	add	x1, x20, x1, lsl #5
   1feb0:	ldr	x0, [x2, #24]
   1feb4:	ldr	x1, [x1, #80]
   1feb8:	add	x0, x0, x1
   1febc:	ldr	x1, [x2, #16]
   1fec0:	ldr	x1, [x1, #16]
   1fec4:	add	x0, x0, x1
   1fec8:	str	x0, [x29, #336]
   1fecc:	ldr	x0, [x29, #336]
   1fed0:	cbz	x0, 1fee4 <omp_get_place_proc_ids@@OMP_4.5+0x25bc>
   1fed4:	ldr	x1, [x29, #232]
   1fed8:	ldr	x1, [x1, x27]
   1fedc:	sub	x0, x0, x1
   1fee0:	str	x0, [x29, #336]
   1fee4:	ldr	x0, [x23, #16]
   1fee8:	ldr	x1, [x0, #16]
   1feec:	ldr	x0, [x23]
   1fef0:	sub	x1, x1, x0
   1fef4:	ldr	x0, [x23, #24]
   1fef8:	add	x25, x25, x0
   1fefc:	ldr	x4, [x29, #192]
   1ff00:	mov	x3, #0x8                   	// #8
   1ff04:	ldr	x2, [x29, #128]
   1ff08:	add	x1, x1, x25
   1ff0c:	ldr	x0, [x29, #176]
   1ff10:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1ff14:	ldr	x0, [x23, #16]
   1ff18:	ldr	x0, [x0, #16]
   1ff1c:	ldr	x1, [x23]
   1ff20:	sub	x0, x0, x1
   1ff24:	ldr	x1, [x23, #24]
   1ff28:	ldr	x2, [x29, #312]
   1ff2c:	add	x1, x1, x2
   1ff30:	add	x0, x0, x1
   1ff34:	str	x0, [x29, #336]
   1ff38:	b	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   1ff3c:	ldr	w0, [x29, #208]
   1ff40:	ldrb	w1, [x29, #240]
   1ff44:	asr	w0, w0, w1
   1ff48:	mov	x1, #0x1                   	// #1
   1ff4c:	lsl	x0, x1, x0
   1ff50:	add	x22, x0, x23
   1ff54:	neg	x0, x0
   1ff58:	and	x22, x22, x0
   1ff5c:	add	x0, x20, x19, lsl #5
   1ff60:	str	x22, [x0, #80]
   1ff64:	ldr	x0, [x29, #232]
   1ff68:	ldr	x21, [x0, x27]
   1ff6c:	ldr	x1, [x20, #16]
   1ff70:	ldr	x4, [x29, #192]
   1ff74:	mov	x3, x21
   1ff78:	add	x1, x22, x1
   1ff7c:	ldr	x0, [x29, #176]
   1ff80:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   1ff84:	add	x22, x22, x21
   1ff88:	add	x19, x19, #0x1
   1ff8c:	cmp	x26, x19
   1ff90:	b.ls	1fc20 <omp_get_place_proc_ids@@OMP_4.5+0x22f8>  // b.plast
   1ff94:	sub	x23, x22, #0x1
   1ff98:	add	x21, x20, x19, lsl #5
   1ff9c:	ldr	x0, [x21, #64]
   1ffa0:	cbnz	x0, 1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   1ffa4:	mov	w2, w19
   1ffa8:	ldr	x1, [x29, #216]
   1ffac:	ldrb	w0, [x29, #248]
   1ffb0:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   1ffb4:	str	w0, [x29, #208]
   1ffb8:	lsl	x27, x19, #3
   1ffbc:	ldr	x2, [x28, x19, lsl #3]
   1ffc0:	cbz	x2, 1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   1ffc4:	ldr	w1, [x29, #244]
   1ffc8:	and	w25, w1, w0
   1ffcc:	cmp	w25, #0x1c
   1ffd0:	b.eq	2000c <omp_get_place_proc_ids@@OMP_4.5+0x26e4>  // b.none
   1ffd4:	cmp	w25, #0x1c
   1ffd8:	b.gt	1fe38 <omp_get_place_proc_ids@@OMP_4.5+0x2510>
   1ffdc:	cmp	w25, #0xc
   1ffe0:	b.eq	1ff3c <omp_get_place_proc_ids@@OMP_4.5+0x2614>  // b.none
   1ffe4:	sub	w0, w25, #0xd
   1ffe8:	cmp	w0, #0x2
   1ffec:	b.ls	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>  // b.plast
   1fff0:	str	x24, [x29, #200]
   1fff4:	mov	x0, x2
   1fff8:	str	x2, [x24]
   1fffc:	add	x2, x2, #0x8
   20000:	cmp	w25, #0x4
   20004:	b.eq	20698 <omp_get_place_proc_ids@@OMP_4.5+0x2d70>  // b.none
   20008:	b	2068c <omp_get_place_proc_ids@@OMP_4.5+0x2d64>
   2000c:	add	x0, x19, #0x1
   20010:	str	x0, [x29, #200]
   20014:	ldr	x1, [x29, #232]
   20018:	ldr	x25, [x1, x27]
   2001c:	add	x25, x19, x25
   20020:	str	x2, [x29, #312]
   20024:	ldr	x0, [x28, x25, lsl #3]
   20028:	ldr	x1, [x1, x25, lsl #3]
   2002c:	add	x0, x0, x1
   20030:	str	x0, [x29, #320]
   20034:	ldr	x0, [x21, #96]
   20038:	cbnz	x0, 1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   2003c:	ldr	x1, [x29, #160]
   20040:	ldr	x0, [x29, #224]
   20044:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   20048:	mov	x21, x0
   2004c:	cbnz	x0, 200a8 <omp_get_place_proc_ids@@OMP_4.5+0x2780>
   20050:	ldr	w0, [x29, #208]
   20054:	ldrb	w1, [x29, #240]
   20058:	asr	w1, w0, w1
   2005c:	mov	x0, #0x1                   	// #1
   20060:	lsl	x1, x0, x1
   20064:	ldr	x2, [x28, x27]
   20068:	add	x0, x28, x27
   2006c:	ldr	x3, [x0, #8]
   20070:	str	x3, [x29, #112]
   20074:	sub	x0, x2, x3
   20078:	add	x0, x0, x23
   2007c:	add	x0, x0, x1
   20080:	neg	x1, x1
   20084:	and	x0, x0, x1
   20088:	sub	x2, x3, x2
   2008c:	add	x0, x2, x0
   20090:	str	x0, [x29, #120]
   20094:	ldr	x22, [x29, #320]
   20098:	sub	x22, x22, x3
   2009c:	add	x22, x22, x0
   200a0:	str	x25, [x29, #136]
   200a4:	b	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   200a8:	ldr	x0, [x29, #200]
   200ac:	mov	x19, x0
   200b0:	cmp	x0, x25
   200b4:	b.hi	20108 <omp_get_place_proc_ids@@OMP_4.5+0x27e0>  // b.pmore
   200b8:	str	x22, [x29, #208]
   200bc:	str	x24, [x29, #184]
   200c0:	ldr	x23, [x29, #200]
   200c4:	ldr	x22, [x29, #192]
   200c8:	ldr	x24, [x29, #232]
   200cc:	ldr	x27, [x29, #216]
   200d0:	mov	x7, x22
   200d4:	mov	x6, x27
   200d8:	mov	x5, x24
   200dc:	mov	x4, x28
   200e0:	mov	x3, x19
   200e4:	mov	x2, x23
   200e8:	mov	x1, x21
   200ec:	mov	x0, x20
   200f0:	bl	1ed0c <omp_get_place_proc_ids@@OMP_4.5+0x13e4>
   200f4:	add	x19, x19, #0x1
   200f8:	cmp	x25, x19
   200fc:	b.cs	200d0 <omp_get_place_proc_ids@@OMP_4.5+0x27a8>  // b.hs, b.nlast
   20100:	ldr	x22, [x29, #208]
   20104:	ldr	x24, [x29, #184]
   20108:	sub	x19, x19, #0x1
   2010c:	b	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   20110:	ldr	x0, [x29, #144]
   20114:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20118:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2011c:	add	x0, x0, #0x790
   20120:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20124:	add	x0, x20, x1, lsl #5
   20128:	ldr	x2, [x0, #80]
   2012c:	cmn	x2, #0x1
   20130:	b.eq	20154 <omp_get_place_proc_ids@@OMP_4.5+0x282c>  // b.none
   20134:	mov	x0, #0x0                   	// #0
   20138:	cmn	x2, #0x2
   2013c:	b.eq	1fec8 <omp_get_place_proc_ids@@OMP_4.5+0x25a0>  // b.none
   20140:	cmn	x2, #0x3
   20144:	b.eq	2015c <omp_get_place_proc_ids@@OMP_4.5+0x2834>  // b.none
   20148:	ldr	x0, [x20, #16]
   2014c:	add	x0, x2, x0
   20150:	b	1fec8 <omp_get_place_proc_ids@@OMP_4.5+0x25a0>
   20154:	ldr	x0, [x28, x1, lsl #3]
   20158:	b	1fec8 <omp_get_place_proc_ids@@OMP_4.5+0x25a0>
   2015c:	ldr	x3, [x21, #64]
   20160:	ldr	x0, [x28, x1, lsl #3]
   20164:	ldr	x1, [x28, x27]
   20168:	sub	x0, x0, x1
   2016c:	add	x2, x20, x19, lsl #5
   20170:	ldr	x1, [x3, #24]
   20174:	ldr	x2, [x2, #80]
   20178:	add	x1, x1, x2
   2017c:	add	x0, x0, x1
   20180:	ldr	x1, [x3, #16]
   20184:	ldr	x1, [x1, #16]
   20188:	add	x0, x0, x1
   2018c:	b	1fec8 <omp_get_place_proc_ids@@OMP_4.5+0x25a0>
   20190:	ldr	w0, [x29, #208]
   20194:	ldr	w1, [x29, #244]
   20198:	and	w2, w0, w1
   2019c:	sxtb	w1, w2
   201a0:	str	x4, [x21, #64]
   201a4:	and	w3, w2, #0xe
   201a8:	cmp	w3, #0x2
   201ac:	cset	w3, eq  // eq = none
   201b0:	strb	w3, [x21, #72]
   201b4:	sub	w0, w2, #0x12
   201b8:	and	w0, w0, #0xff
   201bc:	cmp	w0, #0x1
   201c0:	cset	w0, ls  // ls = plast
   201c4:	strb	w0, [x21, #73]
   201c8:	add	x3, x20, x19, lsl #5
   201cc:	ldr	x0, [x24]
   201d0:	ldr	x4, [x4]
   201d4:	sub	x0, x0, x4
   201d8:	str	x0, [x3, #80]
   201dc:	ldr	x0, [x24, #8]
   201e0:	ldr	x4, [x24]
   201e4:	sub	x0, x0, x4
   201e8:	str	x0, [x3, #88]
   201ec:	tbnz	w2, #7, 20238 <omp_get_place_proc_ids@@OMP_4.5+0x2910>
   201f0:	ldr	x4, [x5]
   201f4:	ldr	x2, [x24]
   201f8:	cmp	x4, x2
   201fc:	b.hi	20238 <omp_get_place_proc_ids@@OMP_4.5+0x2910>  // b.pmore
   20200:	ldr	x3, [x24, #8]
   20204:	ldr	x0, [x5, #8]
   20208:	cmp	x0, x3
   2020c:	b.cc	20238 <omp_get_place_proc_ids@@OMP_4.5+0x2910>  // b.lo, b.ul, b.last
   20210:	and	w0, w1, #0xfffffffd
   20214:	cmp	w0, #0x11
   20218:	b.eq	20260 <omp_get_place_proc_ids@@OMP_4.5+0x2938>  // b.none
   2021c:	ldr	x1, [x29, #184]
   20220:	ldr	x0, [x1, #32]
   20224:	cmn	x0, #0x1
   20228:	b.eq	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>  // b.none
   2022c:	add	x0, x0, #0x1
   20230:	str	x0, [x1, #32]
   20234:	b	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   20238:	ldr	x0, [x29, #144]
   2023c:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20240:	ldr	x0, [x29, #184]
   20244:	ldr	x4, [x0, #8]
   20248:	ldr	x3, [x0]
   2024c:	ldr	x2, [x24, #8]
   20250:	ldr	x1, [x24]
   20254:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20258:	add	x0, x0, #0x658
   2025c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20260:	ldr	x5, [x29, #184]
   20264:	ldr	x0, [x5, #16]
   20268:	ldr	x1, [x0, #16]
   2026c:	sub	x1, x1, x4
   20270:	ldr	x0, [x5, #24]
   20274:	add	x0, x2, x0
   20278:	ldr	x4, [x29, #192]
   2027c:	sub	x3, x3, x2
   20280:	add	x1, x1, x0
   20284:	ldr	x0, [x29, #176]
   20288:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   2028c:	b	2021c <omp_get_place_proc_ids@@OMP_4.5+0x28f4>
   20290:	ldr	x1, [x29, #184]
   20294:	ldr	x0, [x29, #224]
   20298:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   2029c:	ldr	x0, [x29, #184]
   202a0:	str	x0, [x24, #48]
   202a4:	b	206d8 <omp_get_place_proc_ids@@OMP_4.5+0x2db0>
   202a8:	ldr	w0, [x29, #208]
   202ac:	ldrb	w1, [x29, #240]
   202b0:	asr	w0, w0, w1
   202b4:	mov	x1, #0x1                   	// #1
   202b8:	lsl	x0, x1, x0
   202bc:	add	x22, x0, x23
   202c0:	neg	x0, x0
   202c4:	and	x0, x22, x0
   202c8:	str	x0, [x24, #24]
   202cc:	ldr	x22, [x24, #8]
   202d0:	ldr	x1, [x24]
   202d4:	sub	x22, x22, x1
   202d8:	add	x22, x22, x0
   202dc:	b	20714 <omp_get_place_proc_ids@@OMP_4.5+0x2dec>
   202e0:	cmp	w25, #0x4
   202e4:	b.ne	2030c <omp_get_place_proc_ids@@OMP_4.5+0x29e4>  // b.any
   202e8:	ldr	x0, [x24]
   202ec:	ldr	x4, [x29, #192]
   202f0:	ldr	x1, [x29, #232]
   202f4:	ldr	x3, [x1, x27]
   202f8:	ldr	x2, [x24, #24]
   202fc:	ldr	x1, [x0]
   20300:	mov	x0, x20
   20304:	bl	1e354 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   20308:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   2030c:	cmp	w25, #0x5
   20310:	b.eq	20328 <omp_get_place_proc_ids@@OMP_4.5+0x2a00>  // b.none
   20314:	cmp	w25, #0x2
   20318:	b.eq	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>  // b.none
   2031c:	b.le	2034c <omp_get_place_proc_ids@@OMP_4.5+0x2a24>
   20320:	cmp	w25, #0x3
   20324:	b.eq	20394 <omp_get_place_proc_ids@@OMP_4.5+0x2a6c>  // b.none
   20328:	ldr	x0, [x29, #144]
   2032c:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20330:	ldr	w2, [x29, #208]
   20334:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20338:	add	x1, x1, #0x8c0
   2033c:	add	x1, x1, #0x10
   20340:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20344:	add	x0, x0, #0x838
   20348:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2034c:	cbnz	w25, 2038c <omp_get_place_proc_ids@@OMP_4.5+0x2a64>
   20350:	ldr	x0, [x24, #48]
   20354:	cbz	x0, 20384 <omp_get_place_proc_ids@@OMP_4.5+0x2a5c>
   20358:	ldr	x0, [x20, #16]
   2035c:	ldr	x1, [x24, #24]
   20360:	add	x0, x0, x1
   20364:	str	x0, [x29, #264]
   20368:	mov	x4, #0x0                   	// #0
   2036c:	mov	x3, #0x8                   	// #8
   20370:	ldr	x2, [x29, #104]
   20374:	ldr	x0, [x29, #184]
   20378:	ldr	x1, [x0, #24]
   2037c:	ldr	x0, [x29, #176]
   20380:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   20384:	add	x24, x24, #0x48
   20388:	b	1ff88 <omp_get_place_proc_ids@@OMP_4.5+0x2660>
   2038c:	cmp	w25, #0x1
   20390:	b.ne	20328 <omp_get_place_proc_ids@@OMP_4.5+0x2a00>  // b.any
   20394:	ldr	x2, [x24]
   20398:	ldr	x3, [x24, #8]
   2039c:	ldr	x1, [x20, #16]
   203a0:	ldr	x0, [x24, #24]
   203a4:	ldr	x4, [x29, #192]
   203a8:	sub	x3, x3, x2
   203ac:	add	x1, x1, x0
   203b0:	ldr	x0, [x29, #176]
   203b4:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   203b8:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   203bc:	cmp	w25, #0x6
   203c0:	b.eq	20504 <omp_get_place_proc_ids@@OMP_4.5+0x2bdc>  // b.none
   203c4:	cmp	w25, #0x8
   203c8:	b.ne	20328 <omp_get_place_proc_ids@@OMP_4.5+0x2a00>  // b.any
   203cc:	ldr	x2, [x24]
   203d0:	ldr	x0, [x24, #8]
   203d4:	sub	x0, x0, x2
   203d8:	cmp	x0, #0x8
   203dc:	b.ne	20530 <omp_get_place_proc_ids@@OMP_4.5+0x2c08>  // b.any
   203e0:	ldr	x1, [x20, #16]
   203e4:	ldr	x0, [x24, #24]
   203e8:	ldr	x4, [x29, #192]
   203ec:	mov	x3, #0x8                   	// #8
   203f0:	add	x1, x1, x0
   203f4:	ldr	x0, [x29, #176]
   203f8:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   203fc:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   20400:	cmp	w25, #0x12
   20404:	b.eq	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>  // b.none
   20408:	cmp	w25, #0x13
   2040c:	b.eq	20394 <omp_get_place_proc_ids@@OMP_4.5+0x2a6c>  // b.none
   20410:	b	20328 <omp_get_place_proc_ids@@OMP_4.5+0x2a00>
   20414:	ldr	x2, [x24]
   20418:	ldr	x3, [x24, #8]
   2041c:	ldr	x1, [x20, #16]
   20420:	ldr	x0, [x24, #24]
   20424:	ldr	x4, [x29, #192]
   20428:	sub	x3, x3, x2
   2042c:	add	x1, x1, x0
   20430:	ldr	x0, [x29, #176]
   20434:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   20438:	add	x23, x19, #0x1
   2043c:	cmp	x26, x23
   20440:	b.ls	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>  // b.plast
   20444:	str	x22, [x29, #208]
   20448:	ldr	w22, [x29, #244]
   2044c:	ldr	x25, [x29, #200]
   20450:	ldr	x27, [x29, #232]
   20454:	b	20494 <omp_get_place_proc_ids@@OMP_4.5+0x2b6c>
   20458:	ldr	x0, [x28, x23, lsl #3]
   2045c:	ldr	x2, [x24, #24]
   20460:	ldr	x1, [x24]
   20464:	sub	x2, x2, x1
   20468:	ldr	x4, [x29, #192]
   2046c:	ldr	x3, [x27, x23, lsl #3]
   20470:	add	x2, x0, x2
   20474:	ldr	x1, [x0]
   20478:	mov	x0, x20
   2047c:	bl	1e354 <omp_get_place_proc_ids@@OMP_4.5+0xa2c>
   20480:	add	x0, x23, #0x1
   20484:	add	x21, x21, #0x20
   20488:	cmp	x26, x0
   2048c:	b.ls	204f8 <omp_get_place_proc_ids@@OMP_4.5+0x2bd0>  // b.plast
   20490:	mov	x23, x0
   20494:	sub	x19, x23, #0x1
   20498:	mov	w2, w23
   2049c:	ldr	x1, [x29, #216]
   204a0:	ldrb	w0, [x29, #248]
   204a4:	bl	1dbd8 <omp_get_place_proc_ids@@OMP_4.5+0x2b0>
   204a8:	and	w0, w0, w22
   204ac:	cmp	w0, #0x4
   204b0:	b.ne	20550 <omp_get_place_proc_ids@@OMP_4.5+0x2c28>  // b.any
   204b4:	ldr	x0, [x28, x23, lsl #3]
   204b8:	ldr	x1, [x24]
   204bc:	cmp	x0, x1
   204c0:	b.cc	20558 <omp_get_place_proc_ids@@OMP_4.5+0x2c30>  // b.lo, b.ul, b.last
   204c4:	add	x0, x0, #0x8
   204c8:	ldr	x1, [x24, #8]
   204cc:	cmp	x0, x1
   204d0:	b.hi	20560 <omp_get_place_proc_ids@@OMP_4.5+0x2c38>  // b.pmore
   204d4:	str	x25, [x21, #96]
   204d8:	strb	wzr, [x21, #104]
   204dc:	strb	wzr, [x21, #105]
   204e0:	ldr	x0, [x24, #32]
   204e4:	cmn	x0, #0x1
   204e8:	b.eq	20458 <omp_get_place_proc_ids@@OMP_4.5+0x2b30>  // b.none
   204ec:	add	x0, x0, #0x1
   204f0:	str	x0, [x24, #32]
   204f4:	b	20458 <omp_get_place_proc_ids@@OMP_4.5+0x2b30>
   204f8:	ldr	x22, [x29, #208]
   204fc:	mov	x19, x23
   20500:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   20504:	ldr	x19, [x24, #8]
   20508:	ldr	x0, [x24]
   2050c:	sub	x19, x19, x0
   20510:	ldr	x0, [x29, #144]
   20514:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20518:	mov	x3, x19
   2051c:	mov	x2, x19
   20520:	ldr	x1, [x24]
   20524:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20528:	add	x0, x0, #0x7b0
   2052c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20530:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20534:	add	x3, x3, #0x8c0
   20538:	mov	w2, #0x3b4                 	// #948
   2053c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20540:	add	x1, x1, #0x7e8
   20544:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20548:	add	x0, x0, #0x808
   2054c:	bl	8ab0 <__assert_fail@plt>
   20550:	ldr	x22, [x29, #208]
   20554:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   20558:	ldr	x22, [x29, #208]
   2055c:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   20560:	ldr	x22, [x29, #208]
   20564:	b	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>
   20568:	add	x19, x20, #0x40
   2056c:	mov	x21, #0x0                   	// #0
   20570:	mov	x24, #0x0                   	// #0
   20574:	add	x25, x28, #0x8
   20578:	add	x23, x29, #0x150
   2057c:	mov	x22, #0x8                   	// #8
   20580:	ldr	x27, [x29, #192]
   20584:	str	x25, [x29, #248]
   20588:	ldr	x25, [x29, #176]
   2058c:	b	205e8 <omp_get_place_proc_ids@@OMP_4.5+0x2cc0>
   20590:	ldr	x1, [x19, #16]
   20594:	cmn	x1, #0x1
   20598:	b.eq	2060c <omp_get_place_proc_ids@@OMP_4.5+0x2ce4>  // b.none
   2059c:	mov	x0, x24
   205a0:	cmn	x1, #0x2
   205a4:	b.eq	205b8 <omp_get_place_proc_ids@@OMP_4.5+0x2c90>  // b.none
   205a8:	cmn	x1, #0x3
   205ac:	b.eq	20614 <omp_get_place_proc_ids@@OMP_4.5+0x2cec>  // b.none
   205b0:	ldr	x0, [x20, #16]
   205b4:	add	x0, x1, x0
   205b8:	str	x0, [x29, #336]
   205bc:	ldr	x1, [x20, #16]
   205c0:	mov	x4, x27
   205c4:	mov	x3, x22
   205c8:	mov	x2, x23
   205cc:	add	x1, x1, x21, lsl #3
   205d0:	mov	x0, x25
   205d4:	bl	1df10 <omp_get_place_proc_ids@@OMP_4.5+0x5e8>
   205d8:	add	x21, x21, #0x1
   205dc:	add	x19, x19, #0x20
   205e0:	cmp	x26, x21
   205e4:	b.eq	2066c <omp_get_place_proc_ids@@OMP_4.5+0x2d44>  // b.none
   205e8:	ldr	x1, [x19]
   205ec:	cbz	x1, 20590 <omp_get_place_proc_ids@@OMP_4.5+0x2c68>
   205f0:	ldr	x0, [x1, #24]
   205f4:	ldr	x2, [x19, #16]
   205f8:	add	x0, x0, x2
   205fc:	ldr	x1, [x1, #16]
   20600:	ldr	x1, [x1, #16]
   20604:	add	x0, x0, x1
   20608:	b	205b8 <omp_get_place_proc_ids@@OMP_4.5+0x2c90>
   2060c:	ldr	x0, [x28, x21, lsl #3]
   20610:	b	205b8 <omp_get_place_proc_ids@@OMP_4.5+0x2c90>
   20614:	ldr	x3, [x19, #32]
   20618:	ldr	x0, [x3, #24]
   2061c:	ldr	x1, [x29, #248]
   20620:	ldr	x1, [x1, x21, lsl #3]
   20624:	sub	x0, x0, x1
   20628:	ldr	x1, [x28, x21, lsl #3]
   2062c:	ldr	x2, [x19, #48]
   20630:	add	x1, x1, x2
   20634:	add	x0, x0, x1
   20638:	ldr	x1, [x3, #16]
   2063c:	ldr	x1, [x1, #16]
   20640:	add	x0, x0, x1
   20644:	b	205b8 <omp_get_place_proc_ids@@OMP_4.5+0x2c90>
   20648:	ldr	x0, [x20]
   2064c:	cbnz	x0, 1fcac <omp_get_place_proc_ids@@OMP_4.5+0x2384>
   20650:	mov	x0, x20
   20654:	bl	8900 <free@plt>
   20658:	mov	x20, #0x0                   	// #0
   2065c:	b	1fcac <omp_get_place_proc_ids@@OMP_4.5+0x2384>
   20660:	ldr	x0, [x29, #144]
   20664:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20668:	b	1fcc0 <omp_get_place_proc_ids@@OMP_4.5+0x2398>
   2066c:	ldr	x0, [x29, #192]
   20670:	cbnz	x0, 1fc34 <omp_get_place_proc_ids@@OMP_4.5+0x230c>
   20674:	b	1fcac <omp_get_place_proc_ids@@OMP_4.5+0x2384>
   20678:	str	xzr, [x24, #48]
   2067c:	b	206d8 <omp_get_place_proc_ids@@OMP_4.5+0x2db0>
   20680:	str	x24, [x29, #200]
   20684:	mov	x0, x2
   20688:	str	x2, [x24]
   2068c:	ldr	x1, [x29, #232]
   20690:	ldr	x2, [x1, x27]
   20694:	add	x2, x0, x2
   20698:	str	x2, [x24, #8]
   2069c:	ldr	x1, [x29, #200]
   206a0:	ldr	x0, [x29, #224]
   206a4:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   206a8:	mov	x4, x0
   206ac:	str	x0, [x29, #184]
   206b0:	cbz	x0, 20678 <omp_get_place_proc_ids@@OMP_4.5+0x2d50>
   206b4:	mov	x5, x0
   206b8:	ldr	x0, [x0, #32]
   206bc:	cmn	x0, #0x2
   206c0:	b.ne	20190 <omp_get_place_proc_ids@@OMP_4.5+0x2868>  // b.any
   206c4:	str	xzr, [x24, #48]
   206c8:	ldr	x0, [x29, #184]
   206cc:	ldr	x0, [x0, #32]
   206d0:	cmn	x0, #0x2
   206d4:	b.eq	20290 <omp_get_place_proc_ids@@OMP_4.5+0x2968>  // b.none
   206d8:	ldr	x0, [x29, #200]
   206dc:	str	x0, [x21, #64]
   206e0:	str	x20, [x24, #16]
   206e4:	ldr	x1, [x29, #136]
   206e8:	cmn	x1, #0x1
   206ec:	b.eq	202a8 <omp_get_place_proc_ids@@OMP_4.5+0x2980>  // b.none
   206f0:	ldr	x0, [x24]
   206f4:	ldr	x2, [x29, #112]
   206f8:	sub	x0, x0, x2
   206fc:	ldr	x2, [x29, #120]
   20700:	add	x0, x0, x2
   20704:	str	x0, [x24, #24]
   20708:	cmp	x19, x1
   2070c:	csinv	x0, x1, xzr, ne  // ne = any
   20710:	str	x0, [x29, #136]
   20714:	and	w0, w25, #0xe
   20718:	cmp	w0, #0x2
   2071c:	cset	w0, eq  // eq = none
   20720:	strb	w0, [x21, #72]
   20724:	and	w0, w25, #0xfffffffe
   20728:	cmp	w0, #0x12
   2072c:	cset	w0, eq  // eq = none
   20730:	strb	w0, [x21, #73]
   20734:	add	x1, x20, x19, lsl #5
   20738:	str	xzr, [x1, #80]
   2073c:	ldr	x0, [x24, #8]
   20740:	ldr	x2, [x24]
   20744:	sub	x0, x0, x2
   20748:	str	x0, [x1, #88]
   2074c:	mov	x0, #0x1                   	// #1
   20750:	str	x0, [x24, #32]
   20754:	str	xzr, [x24, #40]
   20758:	ldr	x0, [x20]
   2075c:	add	x0, x0, #0x1
   20760:	str	x0, [x20]
   20764:	str	xzr, [x24, #56]
   20768:	str	xzr, [x24, #64]
   2076c:	mov	x1, x24
   20770:	ldr	x0, [x29, #224]
   20774:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   20778:	cmp	w25, #0x5
   2077c:	b.eq	20414 <omp_get_place_proc_ids@@OMP_4.5+0x2aec>  // b.none
   20780:	b.le	202e0 <omp_get_place_proc_ids@@OMP_4.5+0x29b8>
   20784:	cmp	w25, #0x11
   20788:	b.eq	20394 <omp_get_place_proc_ids@@OMP_4.5+0x2a6c>  // b.none
   2078c:	b.le	203bc <omp_get_place_proc_ids@@OMP_4.5+0x2a94>
   20790:	cmp	w25, #0x80
   20794:	b.eq	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>  // b.none
   20798:	b.le	20400 <omp_get_place_proc_ids@@OMP_4.5+0x2ad8>
   2079c:	cmp	w25, #0x82
   207a0:	b.eq	20350 <omp_get_place_proc_ids@@OMP_4.5+0x2a28>  // b.none
   207a4:	and	w25, w25, #0xfffffffd
   207a8:	cmp	w25, #0x81
   207ac:	b.eq	20394 <omp_get_place_proc_ids@@OMP_4.5+0x2a6c>  // b.none
   207b0:	b	20328 <omp_get_place_proc_ids@@OMP_4.5+0x2a00>
   207b4:	ldr	x0, [x29, #320]
   207b8:	ldr	x2, [x29, #312]
   207bc:	sub	x0, x0, x2
   207c0:	add	x0, x0, x1
   207c4:	str	x0, [x29, #216]
   207c8:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   207cc:	ldr	x0, [x29, #320]
   207d0:	ldr	x2, [x29, #312]
   207d4:	sub	x0, x0, x2
   207d8:	add	x0, x0, x1
   207dc:	str	x0, [x29, #216]
   207e0:	b	1f3bc <omp_get_place_proc_ids@@OMP_4.5+0x1a94>
   207e4:	stp	x29, x30, [sp, #-32]!
   207e8:	mov	x29, sp
   207ec:	str	x19, [sp, #16]
   207f0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   207f4:	ldr	x0, [x0, #4016]
   207f8:	mrs	x1, tpidr_el0
   207fc:	add	x0, x1, x0
   20800:	ldr	x0, [x0, #80]
   20804:	add	x1, x0, #0x90
   20808:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2080c:	add	x19, x19, #0x2b8
   20810:	cmp	x0, #0x0
   20814:	csel	x19, x19, x1, eq  // eq = none
   20818:	ldr	x0, [x19, #32]
   2081c:	cbz	x0, 20850 <omp_get_place_proc_ids@@OMP_4.5+0x2f28>
   20820:	mov	w7, #0x2                   	// #2
   20824:	mov	w6, #0x0                   	// #0
   20828:	mov	x5, #0x0                   	// #0
   2082c:	mov	x4, #0x0                   	// #0
   20830:	mov	x3, #0x0                   	// #0
   20834:	mov	x2, #0x0                   	// #0
   20838:	mov	x1, #0x0                   	// #0
   2083c:	mov	x0, #0x0                   	// #0
   20840:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   20844:	ldr	x1, [x19, #32]
   20848:	str	x1, [x0, #40]
   2084c:	str	x0, [x19, #32]
   20850:	ldr	x19, [sp, #16]
   20854:	ldp	x29, x30, [sp], #32
   20858:	ret
   2085c:	stp	x29, x30, [sp, #-32]!
   20860:	mov	x29, sp
   20864:	stp	x19, x20, [sp, #16]
   20868:	mov	x19, x1
   2086c:	add	x20, x0, #0xa0
   20870:	mov	x0, x20
   20874:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   20878:	ldr	x1, [x19, #48]
   2087c:	cbz	x1, 20888 <omp_get_place_proc_ids@@OMP_4.5+0x2f60>
   20880:	mov	x0, x20
   20884:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   20888:	ldr	x0, [x19, #16]
   2088c:	ldr	x1, [x0]
   20890:	cmp	x1, #0x1
   20894:	b.ls	208b0 <omp_get_place_proc_ids@@OMP_4.5+0x2f88>  // b.plast
   20898:	sub	x1, x1, #0x1
   2089c:	str	x1, [x0]
   208a0:	mov	w0, #0x0                   	// #0
   208a4:	ldp	x19, x20, [sp, #16]
   208a8:	ldp	x29, x30, [sp], #32
   208ac:	ret
   208b0:	bl	1e08c <omp_get_place_proc_ids@@OMP_4.5+0x764>
   208b4:	mov	w0, #0x1                   	// #1
   208b8:	b	208a4 <omp_get_place_proc_ids@@OMP_4.5+0x2f7c>
   208bc:	stp	x29, x30, [sp, #-160]!
   208c0:	mov	x29, sp
   208c4:	stp	x19, x20, [sp, #16]
   208c8:	stp	x21, x22, [sp, #32]
   208cc:	stp	x23, x24, [sp, #48]
   208d0:	stp	x25, x26, [sp, #64]
   208d4:	stp	x27, x28, [sp, #80]
   208d8:	mov	x22, x0
   208dc:	mov	w19, w1
   208e0:	mov	x28, x3
   208e4:	ldr	x21, [x2]
   208e8:	ldr	x26, [x2, #16]
   208ec:	ldr	x25, [x2, #8]
   208f0:	sub	x25, x25, x21
   208f4:	asr	x25, x25, #3
   208f8:	ldr	x20, [x2, #24]
   208fc:	sub	x20, x20, x26
   20900:	lsr	x0, x20, #63
   20904:	add	x20, x0, x20, asr #3
   20908:	asr	x20, x20, #1
   2090c:	orr	w0, w20, w25
   20910:	cbz	w0, 20aa8 <omp_get_place_proc_ids@@OMP_4.5+0x3180>
   20914:	mov	w24, w25
   20918:	cbz	w25, 209bc <omp_get_place_proc_ids@@OMP_4.5+0x3094>
   2091c:	ldr	x0, [x21]
   20920:	str	x0, [sp, #104]
   20924:	add	x0, x0, #0x1
   20928:	str	x0, [sp, #112]
   2092c:	add	x27, x22, #0xa0
   20930:	add	x1, sp, #0x68
   20934:	mov	x0, x27
   20938:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   2093c:	mov	x23, x0
   20940:	ldr	x3, [x22, #88]
   20944:	mov	x2, x28
   20948:	mov	w1, w19
   2094c:	ldr	w0, [x22, #12]
   20950:	blr	x3
   20954:	and	w0, w0, #0xff
   20958:	cbz	w0, 20ac0 <omp_get_place_proc_ids@@OMP_4.5+0x3198>
   2095c:	mov	x19, #0x0                   	// #0
   20960:	cmp	w25, #0x0
   20964:	b.le	20994 <omp_get_place_proc_ids@@OMP_4.5+0x306c>
   20968:	add	x25, sp, #0x68
   2096c:	ldr	x1, [x21, x19, lsl #3]
   20970:	str	x1, [sp, #104]
   20974:	add	x1, x1, #0x1
   20978:	str	x1, [sp, #112]
   2097c:	mov	x1, x25
   20980:	mov	x0, x27
   20984:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   20988:	add	x19, x19, #0x1
   2098c:	cmp	w24, w19
   20990:	b.gt	2096c <omp_get_place_proc_ids@@OMP_4.5+0x3044>
   20994:	cmp	w20, #0x0
   20998:	b.le	20a54 <omp_get_place_proc_ids@@OMP_4.5+0x312c>
   2099c:	add	x19, x26, #0x8
   209a0:	sub	w20, w20, #0x1
   209a4:	add	x26, x26, #0x18
   209a8:	add	x20, x26, x20, lsl #4
   209ac:	mov	w21, #0x0                   	// #0
   209b0:	add	x25, sp, #0x68
   209b4:	add	x24, x22, #0xa0
   209b8:	b	20a24 <omp_get_place_proc_ids@@OMP_4.5+0x30fc>
   209bc:	ldr	x0, [x26]
   209c0:	str	x0, [sp, #104]
   209c4:	add	x0, x0, #0x1
   209c8:	str	x0, [sp, #112]
   209cc:	add	x1, sp, #0x68
   209d0:	add	x0, x22, #0xa0
   209d4:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   209d8:	mov	x23, x0
   209dc:	ldr	x3, [x22, #88]
   209e0:	mov	x2, x28
   209e4:	mov	w1, w19
   209e8:	ldr	w0, [x22, #12]
   209ec:	blr	x3
   209f0:	and	w0, w0, #0xff
   209f4:	cbnz	w0, 20994 <omp_get_place_proc_ids@@OMP_4.5+0x306c>
   209f8:	b	20ac0 <omp_get_place_proc_ids@@OMP_4.5+0x3198>
   209fc:	mov	x1, x25
   20a00:	mov	x0, x24
   20a04:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   20a08:	mov	x1, x0
   20a0c:	mov	x0, x22
   20a10:	bl	2085c <omp_get_place_proc_ids@@OMP_4.5+0x2f34>
   20a14:	and	w21, w0, #0xff
   20a18:	add	x19, x19, #0x10
   20a1c:	cmp	x19, x20
   20a20:	b.eq	20a64 <omp_get_place_proc_ids@@OMP_4.5+0x313c>  // b.none
   20a24:	ldur	x0, [x19, #-8]
   20a28:	str	x0, [sp, #104]
   20a2c:	ldr	x1, [x19]
   20a30:	and	x1, x1, #0x7fffffffffffffff
   20a34:	add	x1, x1, x0
   20a38:	str	x1, [sp, #112]
   20a3c:	ldr	x0, [x19]
   20a40:	tbnz	x0, #63, 209fc <omp_get_place_proc_ids@@OMP_4.5+0x30d4>
   20a44:	mov	x1, x25
   20a48:	mov	x0, x24
   20a4c:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   20a50:	b	20a18 <omp_get_place_proc_ids@@OMP_4.5+0x30f0>
   20a54:	mov	w21, #0x0                   	// #0
   20a58:	b	20a64 <omp_get_place_proc_ids@@OMP_4.5+0x313c>
   20a5c:	mov	x23, #0x0                   	// #0
   20a60:	mov	w21, #0x0                   	// #0
   20a64:	cmp	x23, #0x0
   20a68:	cset	w0, ne  // ne = any
   20a6c:	eor	w21, w21, #0x1
   20a70:	tst	w0, w21
   20a74:	b.ne	20a94 <omp_get_place_proc_ids@@OMP_4.5+0x316c>  // b.any
   20a78:	ldp	x19, x20, [sp, #16]
   20a7c:	ldp	x21, x22, [sp, #32]
   20a80:	ldp	x23, x24, [sp, #48]
   20a84:	ldp	x25, x26, [sp, #64]
   20a88:	ldp	x27, x28, [sp, #80]
   20a8c:	ldp	x29, x30, [sp], #160
   20a90:	ret
   20a94:	ldr	x0, [x23, #16]
   20a98:	bl	8900 <free@plt>
   20a9c:	mov	x0, x23
   20aa0:	bl	8900 <free@plt>
   20aa4:	b	20a78 <omp_get_place_proc_ids@@OMP_4.5+0x3150>
   20aa8:	ldr	x3, [x22, #88]
   20aac:	mov	x2, x28
   20ab0:	ldr	w0, [x22, #12]
   20ab4:	blr	x3
   20ab8:	and	w0, w0, #0xff
   20abc:	cbnz	w0, 20a5c <omp_get_place_proc_ids@@OMP_4.5+0x3134>
   20ac0:	add	x0, x22, #0xa8
   20ac4:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20ac8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20acc:	add	x0, x0, #0x858
   20ad0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20ad4:	stp	x29, x30, [sp, #-96]!
   20ad8:	mov	x29, sp
   20adc:	stp	x21, x22, [sp, #32]
   20ae0:	mov	x22, x0
   20ae4:	ldr	x0, [x0, #48]
   20ae8:	cbz	x0, 20b88 <omp_get_place_proc_ids@@OMP_4.5+0x3260>
   20aec:	stp	x23, x24, [sp, #48]
   20af0:	stp	x25, x26, [sp, #64]
   20af4:	and	w25, w1, #0xff
   20af8:	ldr	x23, [x22, #56]
   20afc:	add	x24, x23, #0xa8
   20b00:	mov	w0, #0x1                   	// #1
   20b04:	ldaxr	w1, [x24]
   20b08:	cbnz	w1, 20b14 <omp_get_place_proc_ids@@OMP_4.5+0x31ec>
   20b0c:	stxr	w2, w0, [x24]
   20b10:	cbnz	w2, 20b04 <omp_get_place_proc_ids@@OMP_4.5+0x31dc>
   20b14:	cmp	w1, #0x0
   20b18:	b.ne	20b94 <omp_get_place_proc_ids@@OMP_4.5+0x326c>  // b.any
   20b1c:	ldr	w0, [x23, #172]
   20b20:	cmp	w0, #0x2
   20b24:	b.eq	20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x3278>  // b.none
   20b28:	stp	x19, x20, [sp, #16]
   20b2c:	stp	x27, x28, [sp, #80]
   20b30:	ldr	x0, [x22, #48]
   20b34:	add	x20, x22, #0x40
   20b38:	mov	x21, #0x0                   	// #0
   20b3c:	mov	w26, #0x0                   	// #0
   20b40:	mov	w27, #0x1                   	// #1
   20b44:	cbnz	x0, 20c54 <omp_get_place_proc_ids@@OMP_4.5+0x332c>
   20b48:	ldr	x0, [x22]
   20b4c:	cmp	x0, #0x1
   20b50:	b.ls	20c88 <omp_get_place_proc_ids@@OMP_4.5+0x3360>  // b.plast
   20b54:	sub	x0, x0, #0x1
   20b58:	str	x0, [x22]
   20b5c:	ldxr	w0, [x24]
   20b60:	stlxr	w1, wzr, [x24]
   20b64:	cbnz	w1, 20b5c <omp_get_place_proc_ids@@OMP_4.5+0x3234>
   20b68:	tbnz	w0, #31, 20c94 <omp_get_place_proc_ids@@OMP_4.5+0x336c>
   20b6c:	ldp	x19, x20, [sp, #16]
   20b70:	ldp	x23, x24, [sp, #48]
   20b74:	ldp	x25, x26, [sp, #64]
   20b78:	ldp	x27, x28, [sp, #80]
   20b7c:	ldp	x21, x22, [sp, #32]
   20b80:	ldp	x29, x30, [sp], #96
   20b84:	ret
   20b88:	mov	x0, x22
   20b8c:	bl	8900 <free@plt>
   20b90:	b	20b7c <omp_get_place_proc_ids@@OMP_4.5+0x3254>
   20b94:	mov	x0, x24
   20b98:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   20b9c:	b	20b1c <omp_get_place_proc_ids@@OMP_4.5+0x31f4>
   20ba0:	ldxr	w0, [x24]
   20ba4:	stlxr	w1, wzr, [x24]
   20ba8:	cbnz	w1, 20ba0 <omp_get_place_proc_ids@@OMP_4.5+0x3278>
   20bac:	tbnz	w0, #31, 20bcc <omp_get_place_proc_ids@@OMP_4.5+0x32a4>
   20bb0:	ldr	x0, [x22, #8]
   20bb4:	bl	8900 <free@plt>
   20bb8:	mov	x0, x22
   20bbc:	bl	8900 <free@plt>
   20bc0:	ldp	x23, x24, [sp, #48]
   20bc4:	ldp	x25, x26, [sp, #64]
   20bc8:	b	20b7c <omp_get_place_proc_ids@@OMP_4.5+0x3254>
   20bcc:	mov	x0, x24
   20bd0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20bd4:	b	20bb0 <omp_get_place_proc_ids@@OMP_4.5+0x3288>
   20bd8:	cmp	x1, #0x1
   20bdc:	b.ne	20c78 <omp_get_place_proc_ids@@OMP_4.5+0x3350>  // b.any
   20be0:	str	xzr, [x19, #32]
   20be4:	cbz	w25, 20c08 <omp_get_place_proc_ids@@OMP_4.5+0x32e0>
   20be8:	ldrb	w28, [x20, #8]
   20bec:	cbnz	w28, 20c10 <omp_get_place_proc_ids@@OMP_4.5+0x32e8>
   20bf0:	ldrb	w28, [x20, #9]
   20bf4:	cbnz	w28, 20c10 <omp_get_place_proc_ids@@OMP_4.5+0x32e8>
   20bf8:	mov	x1, x19
   20bfc:	mov	x0, x23
   20c00:	bl	2085c <omp_get_place_proc_ids@@OMP_4.5+0x2f34>
   20c04:	b	20c40 <omp_get_place_proc_ids@@OMP_4.5+0x3318>
   20c08:	mov	w28, w27
   20c0c:	b	20c7c <omp_get_place_proc_ids@@OMP_4.5+0x3354>
   20c10:	ldr	x1, [x0, #16]
   20c14:	ldr	x2, [x19, #24]
   20c18:	add	x2, x1, x2
   20c1c:	ldr	x3, [x19, #16]
   20c20:	ldr	x5, [x3, #16]
   20c24:	ldr	x4, [x19]
   20c28:	ldr	x3, [x0, #24]
   20c2c:	add	x2, x2, x5
   20c30:	add	x1, x1, x4
   20c34:	mov	x0, x23
   20c38:	bl	1e1d8 <omp_get_place_proc_ids@@OMP_4.5+0x8b0>
   20c3c:	cbnz	w28, 20bf8 <omp_get_place_proc_ids@@OMP_4.5+0x32d0>
   20c40:	add	x21, x21, #0x1
   20c44:	add	x20, x20, #0x20
   20c48:	ldr	x0, [x22, #48]
   20c4c:	cmp	x0, x21
   20c50:	b.ls	20b48 <omp_get_place_proc_ids@@OMP_4.5+0x3220>  // b.plast
   20c54:	mov	x0, x20
   20c58:	ldr	x19, [x20]
   20c5c:	cbz	x19, 20c40 <omp_get_place_proc_ids@@OMP_4.5+0x3318>
   20c60:	ldr	x1, [x19, #32]
   20c64:	sub	x2, x1, #0x2
   20c68:	cmn	x2, #0x4
   20c6c:	b.hi	20bd8 <omp_get_place_proc_ids@@OMP_4.5+0x32b0>  // b.pmore
   20c70:	sub	x1, x1, #0x1
   20c74:	str	x1, [x19, #32]
   20c78:	mov	w28, w26
   20c7c:	ldrb	w1, [x0, #9]
   20c80:	cbz	w1, 20c3c <omp_get_place_proc_ids@@OMP_4.5+0x3314>
   20c84:	b	20c10 <omp_get_place_proc_ids@@OMP_4.5+0x32e8>
   20c88:	mov	x0, x22
   20c8c:	bl	1e08c <omp_get_place_proc_ids@@OMP_4.5+0x764>
   20c90:	b	20b5c <omp_get_place_proc_ids@@OMP_4.5+0x3234>
   20c94:	mov	x0, x24
   20c98:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20c9c:	ldp	x19, x20, [sp, #16]
   20ca0:	ldp	x23, x24, [sp, #48]
   20ca4:	ldp	x25, x26, [sp, #64]
   20ca8:	ldp	x27, x28, [sp, #80]
   20cac:	b	20b7c <omp_get_place_proc_ids@@OMP_4.5+0x3254>

0000000000020cb0 <GOMP_offload_register_ver@@GOMP_4.5>:
   20cb0:	stp	x29, x30, [sp, #-96]!
   20cb4:	mov	x29, sp
   20cb8:	stp	x23, x24, [sp, #48]
   20cbc:	mov	w24, w2
   20cc0:	lsr	w2, w0, #16
   20cc4:	cmp	w2, #0x1
   20cc8:	b.hi	20d38 <GOMP_offload_register_ver@@GOMP_4.5+0x88>  // b.pmore
   20ccc:	stp	x19, x20, [sp, #16]
   20cd0:	stp	x25, x26, [sp, #64]
   20cd4:	stp	x27, x28, [sp, #80]
   20cd8:	mov	w26, w0
   20cdc:	mov	x28, x1
   20ce0:	mov	x27, x3
   20ce4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20ce8:	add	x0, x0, #0x568
   20cec:	add	x0, x0, #0x10
   20cf0:	mov	w2, #0x1                   	// #1
   20cf4:	ldaxr	w1, [x0]
   20cf8:	cbnz	w1, 20d04 <GOMP_offload_register_ver@@GOMP_4.5+0x54>
   20cfc:	stxr	w3, w2, [x0]
   20d00:	cbnz	w3, 20cf4 <GOMP_offload_register_ver@@GOMP_4.5+0x44>
   20d04:	cmp	w1, #0x0
   20d08:	b.ne	20d58 <GOMP_offload_register_ver@@GOMP_4.5+0xa8>  // b.any
   20d0c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20d10:	ldr	w0, [x0, #1384]
   20d14:	cmp	w0, #0x0
   20d18:	b.le	20e04 <GOMP_offload_register_ver@@GOMP_4.5+0x154>
   20d1c:	stp	x21, x22, [sp, #32]
   20d20:	mov	x22, #0x0                   	// #0
   20d24:	mov	w21, #0x0                   	// #0
   20d28:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20d2c:	add	x23, x23, #0x568
   20d30:	mov	w25, #0x1                   	// #1
   20d34:	b	20db4 <GOMP_offload_register_ver@@GOMP_4.5+0x104>
   20d38:	stp	x19, x20, [sp, #16]
   20d3c:	stp	x21, x22, [sp, #32]
   20d40:	stp	x25, x26, [sp, #64]
   20d44:	stp	x27, x28, [sp, #80]
   20d48:	mov	w1, #0x1                   	// #1
   20d4c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   20d50:	add	x0, x0, #0x870
   20d54:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20d58:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20d5c:	add	x0, x0, #0x568
   20d60:	add	x0, x0, #0x10
   20d64:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   20d68:	b	20d0c <GOMP_offload_register_ver@@GOMP_4.5+0x5c>
   20d6c:	mov	x0, x20
   20d70:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   20d74:	b	20dd8 <GOMP_offload_register_ver@@GOMP_4.5+0x128>
   20d78:	mov	w4, #0x1                   	// #1
   20d7c:	mov	x3, x27
   20d80:	mov	x2, x28
   20d84:	mov	w1, w26
   20d88:	mov	x0, x19
   20d8c:	bl	1ea5c <omp_get_place_proc_ids@@OMP_4.5+0x1134>
   20d90:	ldxr	w0, [x20]
   20d94:	stlxr	w1, wzr, [x20]
   20d98:	cbnz	w1, 20d90 <GOMP_offload_register_ver@@GOMP_4.5+0xe0>
   20d9c:	tbnz	w0, #31, 20df4 <GOMP_offload_register_ver@@GOMP_4.5+0x144>
   20da0:	add	w21, w21, #0x1
   20da4:	add	x22, x22, #0x130
   20da8:	ldr	w0, [x23]
   20dac:	cmp	w0, w21
   20db0:	b.le	20e00 <GOMP_offload_register_ver@@GOMP_4.5+0x150>
   20db4:	ldr	x19, [x23, #8]
   20db8:	add	x19, x19, x22
   20dbc:	add	x20, x19, #0xa8
   20dc0:	ldaxr	w1, [x20]
   20dc4:	cbnz	w1, 20dd0 <GOMP_offload_register_ver@@GOMP_4.5+0x120>
   20dc8:	stxr	w0, w25, [x20]
   20dcc:	cbnz	w0, 20dc0 <GOMP_offload_register_ver@@GOMP_4.5+0x110>
   20dd0:	cmp	w1, #0x0
   20dd4:	b.ne	20d6c <GOMP_offload_register_ver@@GOMP_4.5+0xbc>  // b.any
   20dd8:	ldr	w0, [x19, #16]
   20ddc:	cmp	w0, w24
   20de0:	b.ne	20d90 <GOMP_offload_register_ver@@GOMP_4.5+0xe0>  // b.any
   20de4:	ldr	w0, [x19, #172]
   20de8:	cmp	w0, #0x1
   20dec:	b.ne	20d90 <GOMP_offload_register_ver@@GOMP_4.5+0xe0>  // b.any
   20df0:	b	20d78 <GOMP_offload_register_ver@@GOMP_4.5+0xc8>
   20df4:	mov	x0, x20
   20df8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20dfc:	b	20da0 <GOMP_offload_register_ver@@GOMP_4.5+0xf0>
   20e00:	ldp	x21, x22, [sp, #32]
   20e04:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20e08:	add	x0, x0, #0x568
   20e0c:	ldr	w20, [x0, #24]
   20e10:	add	w20, w20, #0x1
   20e14:	sbfiz	x19, x20, #1, #32
   20e18:	add	x19, x19, w20, sxtw
   20e1c:	lsl	x19, x19, #3
   20e20:	mov	x1, x19
   20e24:	ldr	x0, [x0, #32]
   20e28:	bl	8810 <realloc@plt>
   20e2c:	cbz	x0, 20e84 <GOMP_offload_register_ver@@GOMP_4.5+0x1d4>
   20e30:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20e34:	add	x1, x1, #0x568
   20e38:	str	x0, [x1, #32]
   20e3c:	sub	x19, x19, #0x18
   20e40:	add	x2, x0, x19
   20e44:	str	w26, [x0, x19]
   20e48:	str	w24, [x2, #4]
   20e4c:	str	x28, [x2, #8]
   20e50:	str	x27, [x2, #16]
   20e54:	str	w20, [x1, #24]
   20e58:	add	x1, x1, #0x10
   20e5c:	ldxr	w0, [x1]
   20e60:	stlxr	w2, wzr, [x1]
   20e64:	cbnz	w2, 20e5c <GOMP_offload_register_ver@@GOMP_4.5+0x1ac>
   20e68:	tbnz	w0, #31, 20ea8 <GOMP_offload_register_ver@@GOMP_4.5+0x1f8>
   20e6c:	ldp	x19, x20, [sp, #16]
   20e70:	ldp	x25, x26, [sp, #64]
   20e74:	ldp	x27, x28, [sp, #80]
   20e78:	ldp	x23, x24, [sp, #48]
   20e7c:	ldp	x29, x30, [sp], #96
   20e80:	ret
   20e84:	stp	x21, x22, [sp, #32]
   20e88:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20e8c:	add	x0, x0, #0x568
   20e90:	add	x0, x0, #0x10
   20e94:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   20e98:	mov	x1, x19
   20e9c:	adrp	x0, 28000 <omp_get_affinity_format@@OMP_5.0+0x48c>
   20ea0:	add	x0, x0, #0x768
   20ea4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   20ea8:	mov	x0, x1
   20eac:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20eb0:	b	20e6c <GOMP_offload_register_ver@@GOMP_4.5+0x1bc>

0000000000020eb4 <GOMP_offload_register@@GOMP_4.0.1>:
   20eb4:	stp	x29, x30, [sp, #-16]!
   20eb8:	mov	x29, sp
   20ebc:	mov	x3, x2
   20ec0:	mov	w2, w1
   20ec4:	mov	x1, x0
   20ec8:	mov	w0, #0x0                   	// #0
   20ecc:	bl	8a10 <GOMP_offload_register_ver@plt>
   20ed0:	ldp	x29, x30, [sp], #16
   20ed4:	ret

0000000000020ed8 <GOMP_offload_unregister_ver@@GOMP_4.5>:
   20ed8:	stp	x29, x30, [sp, #-96]!
   20edc:	mov	x29, sp
   20ee0:	stp	x23, x24, [sp, #48]
   20ee4:	stp	x25, x26, [sp, #64]
   20ee8:	stp	x27, x28, [sp, #80]
   20eec:	mov	w27, w0
   20ef0:	mov	x28, x1
   20ef4:	mov	w25, w2
   20ef8:	mov	x24, x3
   20efc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20f00:	add	x0, x0, #0x568
   20f04:	add	x0, x0, #0x10
   20f08:	mov	w2, #0x1                   	// #1
   20f0c:	ldaxr	w1, [x0]
   20f10:	cbnz	w1, 20f1c <GOMP_offload_unregister_ver@@GOMP_4.5+0x44>
   20f14:	stxr	w3, w2, [x0]
   20f18:	cbnz	w3, 20f0c <GOMP_offload_unregister_ver@@GOMP_4.5+0x34>
   20f1c:	cmp	w1, #0x0
   20f20:	b.ne	20f54 <GOMP_offload_unregister_ver@@GOMP_4.5+0x7c>  // b.any
   20f24:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20f28:	ldr	w0, [x0, #1384]
   20f2c:	cmp	w0, #0x0
   20f30:	b.le	21000 <GOMP_offload_unregister_ver@@GOMP_4.5+0x128>
   20f34:	stp	x19, x20, [sp, #16]
   20f38:	stp	x21, x22, [sp, #32]
   20f3c:	mov	x22, #0x0                   	// #0
   20f40:	mov	w21, #0x0                   	// #0
   20f44:	adrp	x23, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20f48:	add	x23, x23, #0x568
   20f4c:	mov	w26, #0x1                   	// #1
   20f50:	b	20f98 <GOMP_offload_unregister_ver@@GOMP_4.5+0xc0>
   20f54:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   20f58:	add	x0, x0, #0x568
   20f5c:	add	x0, x0, #0x10
   20f60:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   20f64:	b	20f24 <GOMP_offload_unregister_ver@@GOMP_4.5+0x4c>
   20f68:	mov	x0, x20
   20f6c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   20f70:	b	20fbc <GOMP_offload_unregister_ver@@GOMP_4.5+0xe4>
   20f74:	ldxr	w0, [x20]
   20f78:	stlxr	w1, wzr, [x20]
   20f7c:	cbnz	w1, 20f74 <GOMP_offload_unregister_ver@@GOMP_4.5+0x9c>
   20f80:	tbnz	w0, #31, 20fec <GOMP_offload_unregister_ver@@GOMP_4.5+0x114>
   20f84:	add	w21, w21, #0x1
   20f88:	add	x22, x22, #0x130
   20f8c:	ldr	w0, [x23]
   20f90:	cmp	w0, w21
   20f94:	b.le	20ff8 <GOMP_offload_unregister_ver@@GOMP_4.5+0x120>
   20f98:	ldr	x19, [x23, #8]
   20f9c:	add	x19, x19, x22
   20fa0:	add	x20, x19, #0xa8
   20fa4:	ldaxr	w1, [x20]
   20fa8:	cbnz	w1, 20fb4 <GOMP_offload_unregister_ver@@GOMP_4.5+0xdc>
   20fac:	stxr	w0, w26, [x20]
   20fb0:	cbnz	w0, 20fa4 <GOMP_offload_unregister_ver@@GOMP_4.5+0xcc>
   20fb4:	cmp	w1, #0x0
   20fb8:	b.ne	20f68 <GOMP_offload_unregister_ver@@GOMP_4.5+0x90>  // b.any
   20fbc:	ldr	w0, [x19, #16]
   20fc0:	cmp	w0, w25
   20fc4:	b.ne	20f74 <GOMP_offload_unregister_ver@@GOMP_4.5+0x9c>  // b.any
   20fc8:	ldr	w0, [x19, #172]
   20fcc:	cmp	w0, #0x1
   20fd0:	b.ne	20f74 <GOMP_offload_unregister_ver@@GOMP_4.5+0x9c>  // b.any
   20fd4:	mov	x3, x24
   20fd8:	mov	x2, x28
   20fdc:	mov	w1, w27
   20fe0:	mov	x0, x19
   20fe4:	bl	208bc <omp_get_place_proc_ids@@OMP_4.5+0x2f94>
   20fe8:	b	20f74 <GOMP_offload_unregister_ver@@GOMP_4.5+0x9c>
   20fec:	mov	x0, x20
   20ff0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   20ff4:	b	20f84 <GOMP_offload_unregister_ver@@GOMP_4.5+0xac>
   20ff8:	ldp	x19, x20, [sp, #16]
   20ffc:	ldp	x21, x22, [sp, #32]
   21000:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21004:	ldr	w4, [x0, #1408]
   21008:	cmp	w4, #0x0
   2100c:	b.le	21074 <GOMP_offload_unregister_ver@@GOMP_4.5+0x19c>
   21010:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21014:	ldr	x5, [x0, #1416]
   21018:	mov	x0, x5
   2101c:	sub	w2, w4, #0x1
   21020:	add	x2, x2, x2, lsl #1
   21024:	add	x1, x5, #0x18
   21028:	add	x2, x1, x2, lsl #3
   2102c:	mov	x3, x0
   21030:	ldr	x1, [x0, #16]
   21034:	cmp	x1, x24
   21038:	b.eq	2104c <GOMP_offload_unregister_ver@@GOMP_4.5+0x174>  // b.none
   2103c:	add	x0, x0, #0x18
   21040:	cmp	x0, x2
   21044:	b.ne	2102c <GOMP_offload_unregister_ver@@GOMP_4.5+0x154>  // b.any
   21048:	b	21074 <GOMP_offload_unregister_ver@@GOMP_4.5+0x19c>
   2104c:	sub	w4, w4, #0x1
   21050:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21054:	str	w4, [x0, #1408]
   21058:	sbfiz	x0, x4, #1, #32
   2105c:	add	x4, x0, w4, sxtw
   21060:	add	x4, x5, x4, lsl #3
   21064:	ldp	x0, x1, [x4]
   21068:	stp	x0, x1, [x3]
   2106c:	ldr	x0, [x4, #16]
   21070:	str	x0, [x3, #16]
   21074:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21078:	add	x0, x0, #0x568
   2107c:	add	x0, x0, #0x10
   21080:	ldxr	w1, [x0]
   21084:	stlxr	w2, wzr, [x0]
   21088:	cbnz	w2, 21080 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1a8>
   2108c:	tbnz	w1, #31, 210a4 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1cc>
   21090:	ldp	x23, x24, [sp, #48]
   21094:	ldp	x25, x26, [sp, #64]
   21098:	ldp	x27, x28, [sp, #80]
   2109c:	ldp	x29, x30, [sp], #96
   210a0:	ret
   210a4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   210a8:	add	x0, x0, #0x568
   210ac:	add	x0, x0, #0x10
   210b0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   210b4:	b	21090 <GOMP_offload_unregister_ver@@GOMP_4.5+0x1b8>

00000000000210b8 <GOMP_offload_unregister@@GOMP_4.0.1>:
   210b8:	stp	x29, x30, [sp, #-16]!
   210bc:	mov	x29, sp
   210c0:	mov	x3, x2
   210c4:	mov	w2, w1
   210c8:	mov	x1, x0
   210cc:	mov	w0, #0x0                   	// #0
   210d0:	bl	8920 <GOMP_offload_unregister_ver@plt>
   210d4:	ldp	x29, x30, [sp], #16
   210d8:	ret
   210dc:	stp	x29, x30, [sp, #-48]!
   210e0:	mov	x29, sp
   210e4:	stp	x19, x20, [sp, #16]
   210e8:	stp	x21, x22, [sp, #32]
   210ec:	mov	x22, x0
   210f0:	ldr	x1, [x0, #56]
   210f4:	ldr	w0, [x0, #12]
   210f8:	blr	x1
   210fc:	and	w0, w0, #0xff
   21100:	cbz	w0, 2113c <GOMP_offload_unregister@@GOMP_4.0.1+0x84>
   21104:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21108:	ldr	w0, [x0, #1408]
   2110c:	mov	x19, #0x0                   	// #0
   21110:	mov	w20, #0x0                   	// #0
   21114:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21118:	add	x21, x21, #0x568
   2111c:	cmp	w0, #0x0
   21120:	b.gt	2117c <GOMP_offload_unregister@@GOMP_4.0.1+0xc4>
   21124:	mov	w0, #0x1                   	// #1
   21128:	str	w0, [x22, #172]
   2112c:	ldp	x19, x20, [sp, #16]
   21130:	ldp	x21, x22, [sp, #32]
   21134:	ldp	x29, x30, [sp], #48
   21138:	ret
   2113c:	add	x0, x22, #0xa8
   21140:	bl	1dee8 <omp_get_place_proc_ids@@OMP_4.5+0x5c0>
   21144:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   21148:	add	x0, x0, #0x8a0
   2114c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   21150:	mov	w4, #0x0                   	// #0
   21154:	ldr	x3, [x1, #16]
   21158:	ldr	x2, [x1, #8]
   2115c:	ldr	w1, [x5, x19]
   21160:	mov	x0, x22
   21164:	bl	1ea5c <omp_get_place_proc_ids@@OMP_4.5+0x1134>
   21168:	add	w20, w20, #0x1
   2116c:	add	x19, x19, #0x18
   21170:	ldr	w1, [x21, #24]
   21174:	cmp	w1, w20
   21178:	b.le	21124 <GOMP_offload_unregister@@GOMP_4.0.1+0x6c>
   2117c:	ldr	x5, [x21, #32]
   21180:	add	x1, x5, x19
   21184:	ldr	w3, [x1, #4]
   21188:	ldr	w2, [x22, #16]
   2118c:	cmp	w3, w2
   21190:	b.ne	21168 <GOMP_offload_unregister@@GOMP_4.0.1+0xb0>  // b.any
   21194:	b	21150 <GOMP_offload_unregister@@GOMP_4.0.1+0x98>
   21198:	stp	x29, x30, [sp, #-32]!
   2119c:	mov	x29, sp
   211a0:	str	x19, [sp, #16]
   211a4:	mov	w19, w0
   211a8:	cmn	w0, #0x1
   211ac:	b.eq	21260 <GOMP_offload_unregister@@GOMP_4.0.1+0x1a8>  // b.none
   211b0:	mov	x0, #0x0                   	// #0
   211b4:	tbnz	w19, #31, 21254 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   211b8:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   211bc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   211c0:	ldr	w0, [x0, #1388]
   211c4:	cmp	w19, w0
   211c8:	b.ge	212d0 <GOMP_offload_unregister@@GOMP_4.0.1+0x218>  // b.tcont
   211cc:	sxtw	x0, w19
   211d0:	add	x19, x0, w19, sxtw #2
   211d4:	lsl	x19, x19, #2
   211d8:	sub	x19, x19, x0
   211dc:	lsl	x19, x19, #4
   211e0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   211e4:	ldr	x0, [x0, #1392]
   211e8:	add	x0, x0, x19
   211ec:	add	x0, x0, #0xa8
   211f0:	mov	w2, #0x1                   	// #1
   211f4:	ldaxr	w1, [x0]
   211f8:	cbnz	w1, 21204 <GOMP_offload_unregister@@GOMP_4.0.1+0x14c>
   211fc:	stxr	w3, w2, [x0]
   21200:	cbnz	w3, 211f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x13c>
   21204:	cmp	w1, #0x0
   21208:	b.ne	21290 <GOMP_offload_unregister@@GOMP_4.0.1+0x1d8>  // b.any
   2120c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21210:	ldr	x0, [x0, #1392]
   21214:	add	x0, x0, x19
   21218:	ldr	w1, [x0, #172]
   2121c:	cbz	w1, 21298 <GOMP_offload_unregister@@GOMP_4.0.1+0x1e0>
   21220:	cmp	w1, #0x2
   21224:	b.eq	212a0 <GOMP_offload_unregister@@GOMP_4.0.1+0x1e8>  // b.none
   21228:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2122c:	ldr	x0, [x0, #1392]
   21230:	add	x0, x0, x19
   21234:	add	x0, x0, #0xa8
   21238:	ldxr	w1, [x0]
   2123c:	stlxr	w2, wzr, [x0]
   21240:	cbnz	w2, 21238 <GOMP_offload_unregister@@GOMP_4.0.1+0x180>
   21244:	tbnz	w1, #31, 212c8 <GOMP_offload_unregister@@GOMP_4.0.1+0x210>
   21248:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2124c:	ldr	x0, [x0, #1392]
   21250:	add	x0, x0, x19
   21254:	ldr	x19, [sp, #16]
   21258:	ldp	x29, x30, [sp], #32
   2125c:	ret
   21260:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21264:	ldr	x0, [x0, #4016]
   21268:	mrs	x1, tpidr_el0
   2126c:	add	x0, x1, x0
   21270:	ldr	x1, [x0, #80]
   21274:	add	x2, x1, #0x90
   21278:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2127c:	add	x0, x0, #0x2b8
   21280:	cmp	x1, #0x0
   21284:	csel	x0, x0, x2, eq  // eq = none
   21288:	ldr	w19, [x0, #16]
   2128c:	b	211b0 <GOMP_offload_unregister@@GOMP_4.0.1+0xf8>
   21290:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   21294:	b	2120c <GOMP_offload_unregister@@GOMP_4.0.1+0x154>
   21298:	bl	210dc <GOMP_offload_unregister@@GOMP_4.0.1+0x24>
   2129c:	b	21228 <GOMP_offload_unregister@@GOMP_4.0.1+0x170>
   212a0:	add	x1, x0, #0xa8
   212a4:	ldxr	w2, [x1]
   212a8:	stlxr	w0, wzr, [x1]
   212ac:	cbnz	w0, 212a4 <GOMP_offload_unregister@@GOMP_4.0.1+0x1ec>
   212b0:	mov	x0, #0x0                   	// #0
   212b4:	tbz	w2, #31, 21254 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   212b8:	mov	x0, x1
   212bc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   212c0:	mov	x0, #0x0                   	// #0
   212c4:	b	21254 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   212c8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   212cc:	b	21248 <GOMP_offload_unregister@@GOMP_4.0.1+0x190>
   212d0:	mov	x0, #0x0                   	// #0
   212d4:	b	21254 <GOMP_offload_unregister@@GOMP_4.0.1+0x19c>
   212d8:	stp	x29, x30, [sp, #-48]!
   212dc:	mov	x29, sp
   212e0:	stp	x19, x20, [sp, #16]
   212e4:	mov	x20, x0
   212e8:	ldr	w0, [x0, #172]
   212ec:	cmp	w0, #0x1
   212f0:	b.eq	21300 <GOMP_offload_unregister@@GOMP_4.0.1+0x248>  // b.none
   212f4:	ldp	x19, x20, [sp, #16]
   212f8:	ldp	x29, x30, [sp], #48
   212fc:	ret
   21300:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21304:	ldr	w0, [x0, #1408]
   21308:	cbz	w0, 212f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x23c>
   2130c:	str	x21, [sp, #32]
   21310:	mov	w19, #0x0                   	// #0
   21314:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21318:	add	x21, x21, #0x568
   2131c:	b	21344 <GOMP_offload_unregister@@GOMP_4.0.1+0x28c>
   21320:	ldr	x3, [x0, #16]
   21324:	ldr	x2, [x0, #8]
   21328:	ldr	w1, [x4, x1]
   2132c:	mov	x0, x20
   21330:	bl	208bc <omp_get_place_proc_ids@@OMP_4.5+0x2f94>
   21334:	add	w19, w19, #0x1
   21338:	ldr	w0, [x21, #24]
   2133c:	cmp	w0, w19
   21340:	b.ls	2136c <GOMP_offload_unregister@@GOMP_4.0.1+0x2b4>  // b.plast
   21344:	ubfiz	x1, x19, #1, #32
   21348:	add	x1, x1, w19, uxtw
   2134c:	lsl	x1, x1, #3
   21350:	ldr	x4, [x21, #32]
   21354:	add	x0, x4, x1
   21358:	ldr	w3, [x0, #4]
   2135c:	ldr	w2, [x20, #16]
   21360:	cmp	w3, w2
   21364:	b.ne	21334 <GOMP_offload_unregister@@GOMP_4.0.1+0x27c>  // b.any
   21368:	b	21320 <GOMP_offload_unregister@@GOMP_4.0.1+0x268>
   2136c:	ldr	x21, [sp, #32]
   21370:	b	212f4 <GOMP_offload_unregister@@GOMP_4.0.1+0x23c>
   21374:	stp	x29, x30, [sp, #-32]!
   21378:	mov	x29, sp
   2137c:	stp	x19, x20, [sp, #16]
   21380:	mov	x20, x0
   21384:	ldr	x1, [x0]
   21388:	cbz	x1, 213b0 <GOMP_offload_unregister@@GOMP_4.0.1+0x2f8>
   2138c:	ldr	x19, [x1, #16]
   21390:	mov	x0, x20
   21394:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   21398:	ldr	x0, [x19, #8]
   2139c:	bl	8900 <free@plt>
   213a0:	mov	x0, x19
   213a4:	bl	8900 <free@plt>
   213a8:	ldr	x1, [x20]
   213ac:	cbnz	x1, 2138c <GOMP_offload_unregister@@GOMP_4.0.1+0x2d4>
   213b0:	ldp	x19, x20, [sp, #16]
   213b4:	ldp	x29, x30, [sp], #32
   213b8:	ret

00000000000213bc <GOMP_target@@GOMP_4.0>:
   213bc:	stp	x29, x30, [sp, #-80]!
   213c0:	mov	x29, sp
   213c4:	stp	x19, x20, [sp, #16]
   213c8:	stp	x21, x22, [sp, #32]
   213cc:	stp	x23, x24, [sp, #48]
   213d0:	mov	x20, x1
   213d4:	mov	x22, x3
   213d8:	mov	x21, x4
   213dc:	mov	x24, x5
   213e0:	mov	x23, x6
   213e4:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   213e8:	cbz	x0, 21404 <GOMP_target@@GOMP_4.0+0x48>
   213ec:	mov	x19, x0
   213f0:	ldr	w0, [x0, #8]
   213f4:	mov	w1, #0x5                   	// #5
   213f8:	and	w0, w0, w1
   213fc:	cmp	w0, #0x4
   21400:	b.eq	21424 <GOMP_target@@GOMP_4.0+0x68>  // b.none
   21404:	mov	x1, x21
   21408:	mov	x0, x20
   2140c:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x7a8>
   21410:	ldp	x19, x20, [sp, #16]
   21414:	ldp	x21, x22, [sp, #32]
   21418:	ldp	x23, x24, [sp, #48]
   2141c:	ldp	x29, x30, [sp], #80
   21420:	ret
   21424:	str	x25, [sp, #64]
   21428:	mov	x1, x20
   2142c:	mov	x0, x19
   21430:	bl	1e47c <omp_get_place_proc_ids@@OMP_4.5+0xb54>
   21434:	mov	x25, x0
   21438:	cbz	x0, 21490 <GOMP_target@@GOMP_4.0+0xd4>
   2143c:	mov	w7, #0x1                   	// #1
   21440:	mov	w6, #0x0                   	// #0
   21444:	mov	x5, x23
   21448:	mov	x4, x24
   2144c:	mov	x3, #0x0                   	// #0
   21450:	mov	x2, x21
   21454:	mov	x1, x22
   21458:	mov	x0, x19
   2145c:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   21460:	mov	x20, x0
   21464:	ldr	x4, [x19, #144]
   21468:	mov	x3, #0x0                   	// #0
   2146c:	ldr	x2, [x0, #16]
   21470:	mov	x1, x25
   21474:	ldr	w0, [x19, #12]
   21478:	blr	x4
   2147c:	mov	w1, #0x1                   	// #1
   21480:	mov	x0, x20
   21484:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   21488:	ldr	x25, [sp, #64]
   2148c:	b	21410 <GOMP_target@@GOMP_4.0+0x54>
   21490:	ldr	x25, [sp, #64]
   21494:	b	21404 <GOMP_target@@GOMP_4.0+0x48>

0000000000021498 <GOMP_target_ext@@GOMP_4.5>:
   21498:	stp	x29, x30, [sp, #-144]!
   2149c:	mov	x29, sp
   214a0:	stp	x19, x20, [sp, #16]
   214a4:	stp	x21, x22, [sp, #32]
   214a8:	stp	x23, x24, [sp, #48]
   214ac:	stp	x25, x26, [sp, #64]
   214b0:	stp	x27, x28, [sp, #80]
   214b4:	sub	sp, sp, #0x10
   214b8:	str	x1, [x29, #128]
   214bc:	mov	x20, x2
   214c0:	str	x3, [x29, #136]
   214c4:	mov	x21, x4
   214c8:	mov	x24, x5
   214cc:	mov	w19, w6
   214d0:	mov	x28, x7
   214d4:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   214d8:	mov	x23, x0
   214dc:	tbz	w19, #0, 2162c <GOMP_target_ext@@GOMP_4.5+0x194>
   214e0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   214e4:	ldr	x0, [x0, #4016]
   214e8:	mrs	x1, tpidr_el0
   214ec:	add	x0, x1, x0
   214f0:	ldr	x0, [x0, #16]
   214f4:	cbz	x0, 21580 <GOMP_target_ext@@GOMP_4.5+0xe8>
   214f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   214fc:	ldr	x0, [x0, #4016]
   21500:	mrs	x1, tpidr_el0
   21504:	add	x0, x1, x0
   21508:	ldr	x0, [x0, #80]
   2150c:	ldrb	w1, [x0, #205]
   21510:	cbz	w1, 21668 <GOMP_target_ext@@GOMP_4.5+0x1d0>
   21514:	cbnz	x28, 21648 <GOMP_target_ext@@GOMP_4.5+0x1b0>
   21518:	cbz	x23, 21ad4 <GOMP_target_ext@@GOMP_4.5+0x63c>
   2151c:	ldr	w0, [x23, #8]
   21520:	tbz	w0, #2, 2180c <GOMP_target_ext@@GOMP_4.5+0x374>
   21524:	mov	x19, #0x0                   	// #0
   21528:	mov	x22, #0x0                   	// #0
   2152c:	mov	w26, #0x0                   	// #0
   21530:	ldr	x1, [x29, #128]
   21534:	mov	x0, x23
   21538:	bl	1e47c <omp_get_place_proc_ids@@OMP_4.5+0xb54>
   2153c:	mov	x25, x0
   21540:	cbz	x0, 217dc <GOMP_target_ext@@GOMP_4.5+0x344>
   21544:	ldr	x1, [x23, #136]
   21548:	cbz	x1, 21558 <GOMP_target_ext@@GOMP_4.5+0xc0>
   2154c:	blr	x1
   21550:	and	w0, w0, #0xff
   21554:	cbz	w0, 217dc <GOMP_target_ext@@GOMP_4.5+0x344>
   21558:	ldr	w0, [x23, #8]
   2155c:	tbz	w0, #0, 21a08 <GOMP_target_ext@@GOMP_4.5+0x570>
   21560:	cbz	w26, 21908 <GOMP_target_ext@@GOMP_4.5+0x470>
   21564:	ldr	x4, [x23, #144]
   21568:	ldr	w0, [x23, #12]
   2156c:	ldr	x3, [x29, #144]
   21570:	ldr	x2, [x29, #136]
   21574:	mov	x1, x25
   21578:	blr	x4
   2157c:	b	217ec <GOMP_target_ext@@GOMP_4.5+0x354>
   21580:	mov	w0, #0x1                   	// #1
   21584:	bl	18df0 <omp_in_final@@OMP_3.1+0x210>
   21588:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2158c:	ldr	x1, [x1, #4016]
   21590:	mrs	x2, tpidr_el0
   21594:	add	x1, x2, x1
   21598:	ldr	x26, [x1, #80]
   2159c:	cbz	x26, 21a5c <GOMP_target_ext@@GOMP_4.5+0x5c4>
   215a0:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   215a4:	ldr	x25, [x25, #4016]
   215a8:	add	x25, x2, x25
   215ac:	ldp	x4, x5, [x25, #16]
   215b0:	stp	x4, x5, [x0, #8]
   215b4:	ldp	x4, x5, [x25, #32]
   215b8:	stp	x4, x5, [x0, #24]
   215bc:	ldp	x4, x5, [x25, #48]
   215c0:	stp	x4, x5, [x0, #40]
   215c4:	ldp	x2, x3, [x25, #64]
   215c8:	stp	x2, x3, [x0, #56]
   215cc:	str	x0, [x25, #16]
   215d0:	str	wzr, [x25, #40]
   215d4:	add	x1, x0, #0x100
   215d8:	str	x1, [x25, #24]
   215dc:	str	xzr, [x25, #32]
   215e0:	str	xzr, [x25, #64]
   215e4:	str	xzr, [x25, #72]
   215e8:	add	x22, x0, #0x540
   215ec:	str	x22, [x25, #80]
   215f0:	add	x2, x26, #0x90
   215f4:	mov	x1, #0x0                   	// #0
   215f8:	mov	x0, x22
   215fc:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   21600:	str	x26, [x25, #80]
   21604:	bl	13908 <GOMP_single_copy_end@@GOMP_1.0+0x1884>
   21608:	mov	x0, x26
   2160c:	bl	8900 <free@plt>
   21610:	str	x22, [x25, #80]
   21614:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21618:	ldr	x0, [x0, #4016]
   2161c:	mrs	x1, tpidr_el0
   21620:	add	x0, x1, x0
   21624:	ldr	x0, [x0, #16]
   21628:	cbnz	x0, 214f8 <GOMP_target_ext@@GOMP_4.5+0x60>
   2162c:	cbz	x28, 21518 <GOMP_target_ext@@GOMP_4.5+0x80>
   21630:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21634:	ldr	x0, [x0, #4016]
   21638:	mrs	x1, tpidr_el0
   2163c:	add	x0, x1, x0
   21640:	ldr	x0, [x0, #80]
   21644:	cbz	x0, 21518 <GOMP_target_ext@@GOMP_4.5+0x80>
   21648:	ldr	x0, [x0, #56]
   2164c:	cbz	x0, 21518 <GOMP_target_ext@@GOMP_4.5+0x80>
   21650:	cbz	x20, 217d0 <GOMP_target_ext@@GOMP_4.5+0x338>
   21654:	mov	x19, #0x0                   	// #0
   21658:	mov	x22, #0x0                   	// #0
   2165c:	mov	x1, #0x0                   	// #0
   21660:	mov	x3, #0x1                   	// #1
   21664:	b	216ac <GOMP_target_ext@@GOMP_4.5+0x214>
   21668:	mov	w0, #0x1                   	// #1
   2166c:	str	w0, [sp, #8]
   21670:	ldr	x0, [x29, #144]
   21674:	str	x0, [sp]
   21678:	mov	x7, x28
   2167c:	mov	w6, w19
   21680:	mov	x5, x24
   21684:	mov	x4, x21
   21688:	ldr	x3, [x29, #136]
   2168c:	mov	x2, x20
   21690:	ldr	x1, [x29, #128]
   21694:	mov	x0, x23
   21698:	bl	13b44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb8>
   2169c:	b	217ec <GOMP_target_ext@@GOMP_4.5+0x354>
   216a0:	add	x1, x1, #0x1
   216a4:	cmp	x20, x1
   216a8:	b.eq	216e8 <GOMP_target_ext@@GOMP_4.5+0x250>  // b.none
   216ac:	ldrh	w0, [x24, x1, lsl #1]
   216b0:	and	w2, w0, #0xff
   216b4:	cmp	w2, #0xc
   216b8:	b.ne	216a0 <GOMP_target_ext@@GOMP_4.5+0x208>  // b.any
   216bc:	lsr	w0, w0, #8
   216c0:	lsl	x0, x3, x0
   216c4:	cmp	x22, x0
   216c8:	csel	x22, x22, x0, cs  // cs = hs, nlast
   216cc:	sub	x19, x19, #0x1
   216d0:	add	x19, x19, x0
   216d4:	neg	x0, x0
   216d8:	and	x0, x19, x0
   216dc:	ldr	x19, [x21, x1, lsl #3]
   216e0:	add	x19, x0, x19
   216e4:	b	216a0 <GOMP_target_ext@@GOMP_4.5+0x208>
   216e8:	cbnz	x22, 21708 <GOMP_target_ext@@GOMP_4.5+0x270>
   216ec:	mov	x0, x28
   216f0:	bl	150c0 <GOMP_taskwait@@GOMP_2.0+0x5a4>
   216f4:	cbz	x23, 217e0 <GOMP_target_ext@@GOMP_4.5+0x348>
   216f8:	ldr	w0, [x23, #8]
   216fc:	mov	w26, #0x1                   	// #1
   21700:	tbz	w0, #2, 217e0 <GOMP_target_ext@@GOMP_4.5+0x348>
   21704:	b	21530 <GOMP_target_ext@@GOMP_4.5+0x98>
   21708:	add	x0, x22, x19
   2170c:	add	x0, x0, #0xe
   21710:	and	x0, x0, #0xfffffffffffffff0
   21714:	sub	sp, sp, x0
   21718:	add	x3, sp, #0x10
   2171c:	sub	x0, x22, #0x1
   21720:	ands	x0, x3, x0
   21724:	sub	x2, x22, x0
   21728:	add	x2, x3, x2
   2172c:	csel	x0, x2, x3, ne  // ne = any
   21730:	str	x0, [x29, #96]
   21734:	mov	x25, x24
   21738:	ldr	x27, [x29, #136]
   2173c:	mov	x26, x21
   21740:	add	x0, x24, x1, lsl #1
   21744:	str	x0, [x29, #120]
   21748:	mov	x2, #0x0                   	// #0
   2174c:	b	21768 <GOMP_target_ext@@GOMP_4.5+0x2d0>
   21750:	add	x25, x25, #0x2
   21754:	add	x27, x27, #0x8
   21758:	add	x26, x26, #0x8
   2175c:	ldr	x0, [x29, #120]
   21760:	cmp	x0, x25
   21764:	b.eq	216ec <GOMP_target_ext@@GOMP_4.5+0x254>  // b.none
   21768:	ldrh	w0, [x25]
   2176c:	and	w1, w0, #0xff
   21770:	cmp	w1, #0xc
   21774:	b.ne	21750 <GOMP_target_ext@@GOMP_4.5+0x2b8>  // b.any
   21778:	lsr	w0, w0, #8
   2177c:	mov	x1, #0x1                   	// #1
   21780:	lsl	x0, x1, x0
   21784:	sub	x2, x2, #0x1
   21788:	add	x2, x2, x0
   2178c:	neg	x0, x0
   21790:	and	x0, x0, x2
   21794:	ldr	x1, [x29, #96]
   21798:	str	x0, [x29, #112]
   2179c:	add	x1, x1, x0
   217a0:	mov	x3, x1
   217a4:	ldr	x2, [x26]
   217a8:	ldr	x1, [x27]
   217ac:	str	x3, [x29, #104]
   217b0:	mov	x0, x3
   217b4:	bl	85c0 <memcpy@plt>
   217b8:	ldr	x1, [x29, #104]
   217bc:	str	x1, [x27]
   217c0:	ldr	x2, [x26]
   217c4:	ldr	x0, [x29, #112]
   217c8:	add	x2, x0, x2
   217cc:	b	21750 <GOMP_target_ext@@GOMP_4.5+0x2b8>
   217d0:	mov	x22, x20
   217d4:	mov	x19, x20
   217d8:	b	216ec <GOMP_target_ext@@GOMP_4.5+0x254>
   217dc:	cbz	w26, 21814 <GOMP_target_ext@@GOMP_4.5+0x37c>
   217e0:	ldr	x1, [x29, #136]
   217e4:	ldr	x0, [x29, #128]
   217e8:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x7a8>
   217ec:	mov	sp, x29
   217f0:	ldp	x19, x20, [sp, #16]
   217f4:	ldp	x21, x22, [sp, #32]
   217f8:	ldp	x23, x24, [sp, #48]
   217fc:	ldp	x25, x26, [sp, #64]
   21800:	ldp	x27, x28, [sp, #80]
   21804:	ldp	x29, x30, [sp], #144
   21808:	ret
   2180c:	mov	x19, #0x0                   	// #0
   21810:	mov	x22, #0x0                   	// #0
   21814:	cbnz	x20, 21ae0 <GOMP_target_ext@@GOMP_4.5+0x648>
   21818:	cbz	x22, 217e0 <GOMP_target_ext@@GOMP_4.5+0x348>
   2181c:	add	x0, x19, x22
   21820:	add	x0, x0, #0xe
   21824:	and	x0, x0, #0xfffffffffffffff0
   21828:	sub	sp, sp, x0
   2182c:	add	x23, sp, #0x10
   21830:	sub	x0, x22, #0x1
   21834:	ands	x0, x23, x0
   21838:	sub	x22, x22, x0
   2183c:	add	x22, x23, x22
   21840:	csel	x23, x22, x23, ne  // ne = any
   21844:	cbz	x20, 217e0 <GOMP_target_ext@@GOMP_4.5+0x348>
   21848:	mov	x19, x24
   2184c:	ldr	x22, [x29, #136]
   21850:	add	x20, x24, x20, lsl #1
   21854:	mov	x25, #0x0                   	// #0
   21858:	mov	x24, #0x1                   	// #1
   2185c:	b	218f4 <GOMP_target_ext@@GOMP_4.5+0x45c>
   21860:	add	x1, x1, #0x1
   21864:	cmp	x20, x1
   21868:	b.eq	21818 <GOMP_target_ext@@GOMP_4.5+0x380>  // b.none
   2186c:	ldrh	w0, [x24, x1, lsl #1]
   21870:	and	w2, w0, #0xff
   21874:	cmp	w2, #0xc
   21878:	b.ne	21860 <GOMP_target_ext@@GOMP_4.5+0x3c8>  // b.any
   2187c:	lsr	w0, w0, #8
   21880:	lsl	x0, x3, x0
   21884:	cmp	x22, x0
   21888:	csel	x22, x22, x0, cs  // cs = hs, nlast
   2188c:	sub	x19, x19, #0x1
   21890:	add	x19, x19, x0
   21894:	neg	x0, x0
   21898:	and	x0, x19, x0
   2189c:	ldr	x19, [x21, x1, lsl #3]
   218a0:	add	x19, x0, x19
   218a4:	b	21860 <GOMP_target_ext@@GOMP_4.5+0x3c8>
   218a8:	lsr	w0, w0, #8
   218ac:	lsl	x0, x24, x0
   218b0:	sub	x25, x25, #0x1
   218b4:	add	x25, x25, x0
   218b8:	neg	x0, x0
   218bc:	and	x25, x0, x25
   218c0:	add	x26, x23, x25
   218c4:	ldr	x2, [x21]
   218c8:	ldr	x1, [x22]
   218cc:	mov	x0, x26
   218d0:	bl	85c0 <memcpy@plt>
   218d4:	str	x26, [x22]
   218d8:	ldr	x0, [x21]
   218dc:	add	x25, x25, x0
   218e0:	add	x19, x19, #0x2
   218e4:	add	x22, x22, #0x8
   218e8:	add	x21, x21, #0x8
   218ec:	cmp	x19, x20
   218f0:	b.eq	217e0 <GOMP_target_ext@@GOMP_4.5+0x348>  // b.none
   218f4:	ldrh	w0, [x19]
   218f8:	and	w1, w0, #0xff
   218fc:	cmp	w1, #0xc
   21900:	b.ne	218e0 <GOMP_target_ext@@GOMP_4.5+0x448>  // b.any
   21904:	b	218a8 <GOMP_target_ext@@GOMP_4.5+0x410>
   21908:	cbz	x20, 21960 <GOMP_target_ext@@GOMP_4.5+0x4c8>
   2190c:	mov	x1, #0x0                   	// #0
   21910:	mov	x3, #0x1                   	// #1
   21914:	b	21924 <GOMP_target_ext@@GOMP_4.5+0x48c>
   21918:	add	x1, x1, #0x1
   2191c:	cmp	x20, x1
   21920:	b.eq	21960 <GOMP_target_ext@@GOMP_4.5+0x4c8>  // b.none
   21924:	ldrh	w0, [x24, x1, lsl #1]
   21928:	and	w2, w0, #0xff
   2192c:	cmp	w2, #0xc
   21930:	b.ne	21918 <GOMP_target_ext@@GOMP_4.5+0x480>  // b.any
   21934:	lsr	w0, w0, #8
   21938:	lsl	x0, x3, x0
   2193c:	cmp	x22, x0
   21940:	csel	x22, x22, x0, cs  // cs = hs, nlast
   21944:	sub	x19, x19, #0x1
   21948:	add	x19, x19, x0
   2194c:	neg	x0, x0
   21950:	and	x0, x19, x0
   21954:	ldr	x19, [x21, x1, lsl #3]
   21958:	add	x19, x0, x19
   2195c:	b	21918 <GOMP_target_ext@@GOMP_4.5+0x480>
   21960:	cbz	x22, 21564 <GOMP_target_ext@@GOMP_4.5+0xcc>
   21964:	add	x0, x19, x22
   21968:	add	x0, x0, #0xe
   2196c:	and	x0, x0, #0xfffffffffffffff0
   21970:	sub	sp, sp, x0
   21974:	add	x26, sp, #0x10
   21978:	sub	x0, x22, #0x1
   2197c:	ands	x0, x26, x0
   21980:	sub	x1, x22, x0
   21984:	add	x1, x26, x1
   21988:	csel	x26, x1, x26, ne  // ne = any
   2198c:	cbz	x20, 21564 <GOMP_target_ext@@GOMP_4.5+0xcc>
   21990:	mov	x19, x24
   21994:	ldr	x22, [x29, #136]
   21998:	add	x20, x24, x20, lsl #1
   2199c:	mov	x24, #0x0                   	// #0
   219a0:	mov	x28, #0x1                   	// #1
   219a4:	b	219f4 <GOMP_target_ext@@GOMP_4.5+0x55c>
   219a8:	lsr	w0, w0, #8
   219ac:	lsl	x0, x28, x0
   219b0:	sub	x24, x24, #0x1
   219b4:	add	x24, x24, x0
   219b8:	neg	x0, x0
   219bc:	and	x24, x0, x24
   219c0:	add	x27, x26, x24
   219c4:	ldr	x2, [x21]
   219c8:	ldr	x1, [x22]
   219cc:	mov	x0, x27
   219d0:	bl	85c0 <memcpy@plt>
   219d4:	str	x27, [x22]
   219d8:	ldr	x0, [x21]
   219dc:	add	x24, x24, x0
   219e0:	add	x19, x19, #0x2
   219e4:	add	x22, x22, #0x8
   219e8:	add	x21, x21, #0x8
   219ec:	cmp	x20, x19
   219f0:	b.eq	21564 <GOMP_target_ext@@GOMP_4.5+0xcc>  // b.none
   219f4:	ldrh	w0, [x19]
   219f8:	and	w1, w0, #0xff
   219fc:	cmp	w1, #0xc
   21a00:	b.ne	219e0 <GOMP_target_ext@@GOMP_4.5+0x548>  // b.any
   21a04:	b	219a8 <GOMP_target_ext@@GOMP_4.5+0x510>
   21a08:	mov	w7, #0x1                   	// #1
   21a0c:	mov	w6, w7
   21a10:	mov	x5, x24
   21a14:	mov	x4, x21
   21a18:	mov	x3, #0x0                   	// #0
   21a1c:	ldr	x2, [x29, #136]
   21a20:	mov	x1, x20
   21a24:	mov	x0, x23
   21a28:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   21a2c:	mov	x19, x0
   21a30:	ldr	x4, [x23, #144]
   21a34:	ldr	w0, [x23, #12]
   21a38:	cbz	x19, 2156c <GOMP_target_ext@@GOMP_4.5+0xd4>
   21a3c:	ldr	x3, [x29, #144]
   21a40:	ldr	x2, [x19, #16]
   21a44:	mov	x1, x25
   21a48:	blr	x4
   21a4c:	mov	w1, #0x1                   	// #1
   21a50:	mov	x0, x19
   21a54:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   21a58:	b	217ec <GOMP_target_ext@@GOMP_4.5+0x354>
   21a5c:	adrp	x25, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21a60:	ldr	x25, [x25, #4016]
   21a64:	mrs	x3, tpidr_el0
   21a68:	add	x25, x3, x25
   21a6c:	ldp	x4, x5, [x25, #16]
   21a70:	stp	x4, x5, [x0, #8]
   21a74:	ldp	x4, x5, [x25, #32]
   21a78:	stp	x4, x5, [x0, #24]
   21a7c:	ldp	x4, x5, [x25, #48]
   21a80:	stp	x4, x5, [x0, #40]
   21a84:	ldp	x2, x3, [x25, #64]
   21a88:	stp	x2, x3, [x0, #56]
   21a8c:	str	x0, [x25, #16]
   21a90:	str	wzr, [x25, #40]
   21a94:	add	x1, x0, #0x100
   21a98:	str	x1, [x25, #24]
   21a9c:	str	xzr, [x25, #32]
   21aa0:	str	xzr, [x25, #64]
   21aa4:	str	xzr, [x25, #72]
   21aa8:	add	x0, x0, #0x540
   21aac:	str	x0, [x25, #80]
   21ab0:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21ab4:	add	x2, x2, #0x2b8
   21ab8:	mov	x1, #0x0                   	// #0
   21abc:	bl	138b0 <GOMP_single_copy_end@@GOMP_1.0+0x182c>
   21ac0:	mov	x1, x25
   21ac4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21ac8:	ldr	w0, [x0, #1696]
   21acc:	bl	89b0 <pthread_setspecific@plt>
   21ad0:	b	21614 <GOMP_target_ext@@GOMP_4.5+0x17c>
   21ad4:	mov	x19, #0x0                   	// #0
   21ad8:	mov	x22, #0x0                   	// #0
   21adc:	cbz	x20, 217e0 <GOMP_target_ext@@GOMP_4.5+0x348>
   21ae0:	mov	x1, #0x0                   	// #0
   21ae4:	mov	x3, #0x1                   	// #1
   21ae8:	b	2186c <GOMP_target_ext@@GOMP_4.5+0x3d4>

0000000000021aec <GOMP_target_data@@GOMP_4.0>:
   21aec:	stp	x29, x30, [sp, #-48]!
   21af0:	mov	x29, sp
   21af4:	stp	x19, x20, [sp, #16]
   21af8:	stp	x21, x22, [sp, #32]
   21afc:	mov	x19, x2
   21b00:	mov	x22, x3
   21b04:	mov	x20, x4
   21b08:	mov	x21, x5
   21b0c:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   21b10:	cbz	x0, 21b28 <GOMP_target_data@@GOMP_4.0+0x3c>
   21b14:	ldr	w1, [x0, #8]
   21b18:	mov	w2, #0x5                   	// #5
   21b1c:	and	w1, w1, w2
   21b20:	cmp	w1, #0x4
   21b24:	b.eq	21b3c <GOMP_target_data@@GOMP_4.0+0x50>  // b.none
   21b28:	bl	207e4 <omp_get_place_proc_ids@@OMP_4.5+0x2ebc>
   21b2c:	ldp	x19, x20, [sp, #16]
   21b30:	ldp	x21, x22, [sp, #32]
   21b34:	ldp	x29, x30, [sp], #48
   21b38:	ret
   21b3c:	mov	w7, #0x2                   	// #2
   21b40:	mov	w6, #0x0                   	// #0
   21b44:	mov	x5, x21
   21b48:	mov	x4, x20
   21b4c:	mov	x3, #0x0                   	// #0
   21b50:	mov	x2, x22
   21b54:	mov	x1, x19
   21b58:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   21b5c:	mov	x19, x0
   21b60:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21b64:	ldr	x0, [x0, #4016]
   21b68:	mrs	x1, tpidr_el0
   21b6c:	add	x0, x1, x0
   21b70:	ldr	x1, [x0, #80]
   21b74:	cbz	x1, 21b8c <GOMP_target_data@@GOMP_4.0+0xa0>
   21b78:	add	x1, x1, #0x90
   21b7c:	ldr	x0, [x1, #32]
   21b80:	str	x0, [x19, #40]
   21b84:	str	x19, [x1, #32]
   21b88:	b	21b2c <GOMP_target_data@@GOMP_4.0+0x40>
   21b8c:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   21b90:	mov	x1, x0
   21b94:	b	21b7c <GOMP_target_data@@GOMP_4.0+0x90>

0000000000021b98 <GOMP_target_data_ext@@GOMP_4.5>:
   21b98:	stp	x29, x30, [sp, #-48]!
   21b9c:	mov	x29, sp
   21ba0:	stp	x19, x20, [sp, #16]
   21ba4:	stp	x21, x22, [sp, #32]
   21ba8:	mov	x19, x1
   21bac:	mov	x22, x2
   21bb0:	mov	x20, x3
   21bb4:	mov	x21, x4
   21bb8:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   21bbc:	cbz	x0, 21bd4 <GOMP_target_data_ext@@GOMP_4.5+0x3c>
   21bc0:	ldr	w5, [x0, #8]
   21bc4:	mov	w1, #0x5                   	// #5
   21bc8:	and	w5, w5, w1
   21bcc:	cmp	w5, #0x4
   21bd0:	b.eq	21be8 <GOMP_target_data_ext@@GOMP_4.5+0x50>  // b.none
   21bd4:	bl	207e4 <omp_get_place_proc_ids@@OMP_4.5+0x2ebc>
   21bd8:	ldp	x19, x20, [sp, #16]
   21bdc:	ldp	x21, x22, [sp, #32]
   21be0:	ldp	x29, x30, [sp], #48
   21be4:	ret
   21be8:	mov	w7, #0x2                   	// #2
   21bec:	mov	w6, #0x1                   	// #1
   21bf0:	mov	x5, x21
   21bf4:	mov	x4, x20
   21bf8:	mov	x3, #0x0                   	// #0
   21bfc:	mov	x2, x22
   21c00:	mov	x1, x19
   21c04:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   21c08:	mov	x19, x0
   21c0c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21c10:	ldr	x0, [x0, #4016]
   21c14:	mrs	x1, tpidr_el0
   21c18:	add	x0, x1, x0
   21c1c:	ldr	x1, [x0, #80]
   21c20:	cbz	x1, 21c38 <GOMP_target_data_ext@@GOMP_4.5+0xa0>
   21c24:	add	x1, x1, #0x90
   21c28:	ldr	x0, [x1, #32]
   21c2c:	str	x0, [x19, #40]
   21c30:	str	x19, [x1, #32]
   21c34:	b	21bd8 <GOMP_target_data_ext@@GOMP_4.5+0x40>
   21c38:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   21c3c:	mov	x1, x0
   21c40:	b	21c28 <GOMP_target_data_ext@@GOMP_4.5+0x90>

0000000000021c44 <GOMP_target_end_data@@GOMP_4.0>:
   21c44:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21c48:	ldr	x0, [x0, #4016]
   21c4c:	mrs	x1, tpidr_el0
   21c50:	add	x0, x1, x0
   21c54:	ldr	x0, [x0, #80]
   21c58:	add	x2, x0, #0x90
   21c5c:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21c60:	add	x1, x1, #0x2b8
   21c64:	cmp	x0, #0x0
   21c68:	csel	x1, x1, x2, eq  // eq = none
   21c6c:	ldr	x0, [x1, #32]
   21c70:	cbz	x0, 21c94 <GOMP_target_end_data@@GOMP_4.0+0x50>
   21c74:	stp	x29, x30, [sp, #-16]!
   21c78:	mov	x29, sp
   21c7c:	ldr	x2, [x0, #40]
   21c80:	str	x2, [x1, #32]
   21c84:	mov	w1, #0x1                   	// #1
   21c88:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   21c8c:	ldp	x29, x30, [sp], #16
   21c90:	ret
   21c94:	ret

0000000000021c98 <GOMP_target_update@@GOMP_4.0>:
   21c98:	stp	x29, x30, [sp, #-48]!
   21c9c:	mov	x29, sp
   21ca0:	stp	x19, x20, [sp, #16]
   21ca4:	stp	x21, x22, [sp, #32]
   21ca8:	mov	x19, x2
   21cac:	mov	x22, x3
   21cb0:	mov	x20, x4
   21cb4:	mov	x21, x5
   21cb8:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   21cbc:	cbz	x0, 21cd4 <GOMP_target_update@@GOMP_4.0+0x3c>
   21cc0:	ldr	w1, [x0, #8]
   21cc4:	mov	w2, #0x5                   	// #5
   21cc8:	and	w1, w1, w2
   21ccc:	cmp	w1, #0x4
   21cd0:	b.eq	21ce4 <GOMP_target_update@@GOMP_4.0+0x4c>  // b.none
   21cd4:	ldp	x19, x20, [sp, #16]
   21cd8:	ldp	x21, x22, [sp, #32]
   21cdc:	ldp	x29, x30, [sp], #48
   21ce0:	ret
   21ce4:	mov	w5, #0x0                   	// #0
   21ce8:	mov	x4, x21
   21cec:	mov	x3, x20
   21cf0:	mov	x2, x22
   21cf4:	mov	x1, x19
   21cf8:	bl	1e810 <omp_get_place_proc_ids@@OMP_4.5+0xee8>
   21cfc:	b	21cd4 <GOMP_target_update@@GOMP_4.0+0x3c>

0000000000021d00 <GOMP_target_update_ext@@GOMP_4.5>:
   21d00:	sub	sp, sp, #0x60
   21d04:	stp	x29, x30, [sp, #16]
   21d08:	add	x29, sp, #0x10
   21d0c:	stp	x19, x20, [sp, #32]
   21d10:	stp	x21, x22, [sp, #48]
   21d14:	stp	x23, x24, [sp, #64]
   21d18:	str	x25, [sp, #80]
   21d1c:	mov	x21, x1
   21d20:	mov	x22, x2
   21d24:	mov	x23, x3
   21d28:	mov	x24, x4
   21d2c:	mov	w25, w5
   21d30:	mov	x20, x6
   21d34:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   21d38:	mov	x19, x0
   21d3c:	cbz	x20, 21db8 <GOMP_target_update_ext@@GOMP_4.5+0xb8>
   21d40:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21d44:	ldr	x0, [x0, #4016]
   21d48:	mrs	x1, tpidr_el0
   21d4c:	add	x0, x1, x0
   21d50:	ldr	x0, [x0, #80]
   21d54:	cbz	x0, 21db8 <GOMP_target_update_ext@@GOMP_4.5+0xb8>
   21d58:	ldr	x1, [x0, #56]
   21d5c:	cbz	x1, 21db8 <GOMP_target_update_ext@@GOMP_4.5+0xb8>
   21d60:	tbz	w25, #0, 21d84 <GOMP_target_update_ext@@GOMP_4.5+0x84>
   21d64:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21d68:	ldr	x1, [x1, #4016]
   21d6c:	mrs	x2, tpidr_el0
   21d70:	add	x1, x2, x1
   21d74:	ldr	x1, [x1, #16]
   21d78:	cbz	x1, 21db0 <GOMP_target_update_ext@@GOMP_4.5+0xb0>
   21d7c:	ldrb	w1, [x0, #205]
   21d80:	cbz	w1, 21e34 <GOMP_target_update_ext@@GOMP_4.5+0x134>
   21d84:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21d88:	ldr	x1, [x1, #4016]
   21d8c:	mrs	x2, tpidr_el0
   21d90:	add	x1, x2, x1
   21d94:	ldr	x1, [x1, #16]
   21d98:	cmp	x1, #0x0
   21d9c:	cset	w3, ne  // ne = any
   21da0:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21da4:	ldrb	w2, [x2, #1364]
   21da8:	tst	w3, w2
   21dac:	b.ne	21e6c <GOMP_target_update_ext@@GOMP_4.5+0x16c>  // b.any
   21db0:	mov	x0, x20
   21db4:	bl	150c0 <GOMP_taskwait@@GOMP_2.0+0x5a4>
   21db8:	cbz	x19, 21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21dbc:	ldr	w0, [x19, #8]
   21dc0:	mov	w1, #0x5                   	// #5
   21dc4:	and	w0, w0, w1
   21dc8:	cmp	w0, #0x4
   21dcc:	b.ne	21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>  // b.any
   21dd0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21dd4:	ldr	x0, [x0, #4016]
   21dd8:	mrs	x1, tpidr_el0
   21ddc:	add	x0, x1, x0
   21de0:	ldr	x0, [x0, #16]
   21de4:	cmp	x0, #0x0
   21de8:	cset	w2, ne  // ne = any
   21dec:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21df0:	ldrb	w1, [x1, #1364]
   21df4:	tst	w2, w1
   21df8:	b.ne	21ea0 <GOMP_target_update_ext@@GOMP_4.5+0x1a0>  // b.any
   21dfc:	mov	w5, #0x1                   	// #1
   21e00:	mov	x4, x24
   21e04:	mov	x3, x23
   21e08:	mov	x2, x22
   21e0c:	mov	x1, x21
   21e10:	mov	x0, x19
   21e14:	bl	1e810 <omp_get_place_proc_ids@@OMP_4.5+0xee8>
   21e18:	ldp	x19, x20, [sp, #32]
   21e1c:	ldp	x21, x22, [sp, #48]
   21e20:	ldp	x23, x24, [sp, #64]
   21e24:	ldr	x25, [sp, #80]
   21e28:	ldp	x29, x30, [sp, #16]
   21e2c:	add	sp, sp, #0x60
   21e30:	ret
   21e34:	str	wzr, [sp, #8]
   21e38:	str	xzr, [sp]
   21e3c:	mov	x7, x20
   21e40:	orr	w6, w25, #0x80000000
   21e44:	mov	x5, x24
   21e48:	mov	x4, x23
   21e4c:	mov	x3, x22
   21e50:	mov	x2, x21
   21e54:	mov	x1, #0x0                   	// #0
   21e58:	mov	x0, x19
   21e5c:	bl	13b44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb8>
   21e60:	and	w0, w0, #0xff
   21e64:	cbz	w0, 21db8 <GOMP_target_update_ext@@GOMP_4.5+0xb8>
   21e68:	b	21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21e6c:	ldr	w1, [x1, #132]
   21e70:	tbnz	w1, #2, 21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21e74:	ldr	x0, [x0, #40]
   21e78:	cbz	x0, 21db0 <GOMP_target_update_ext@@GOMP_4.5+0xb0>
   21e7c:	ldrb	w1, [x0, #49]
   21e80:	cbnz	w1, 21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21e84:	ldrb	w1, [x0, #50]
   21e88:	cbz	w1, 21db0 <GOMP_target_update_ext@@GOMP_4.5+0xb0>
   21e8c:	ldr	x0, [x0]
   21e90:	cbz	x0, 21db0 <GOMP_target_update_ext@@GOMP_4.5+0xb0>
   21e94:	ldrb	w0, [x0, #49]
   21e98:	cbz	w0, 21db0 <GOMP_target_update_ext@@GOMP_4.5+0xb0>
   21e9c:	b	21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21ea0:	ldr	w0, [x0, #132]
   21ea4:	tbnz	w0, #2, 21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21ea8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21eac:	ldr	x0, [x0, #4016]
   21eb0:	mrs	x1, tpidr_el0
   21eb4:	add	x0, x1, x0
   21eb8:	ldr	x0, [x0, #80]
   21ebc:	ldr	x0, [x0, #40]
   21ec0:	cbz	x0, 21dfc <GOMP_target_update_ext@@GOMP_4.5+0xfc>
   21ec4:	ldrb	w1, [x0, #49]
   21ec8:	cbnz	w1, 21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>
   21ecc:	ldrb	w1, [x0, #50]
   21ed0:	cbz	w1, 21dfc <GOMP_target_update_ext@@GOMP_4.5+0xfc>
   21ed4:	ldr	x0, [x0]
   21ed8:	cbz	x0, 21dfc <GOMP_target_update_ext@@GOMP_4.5+0xfc>
   21edc:	ldrb	w0, [x0, #49]
   21ee0:	cbz	w0, 21dfc <GOMP_target_update_ext@@GOMP_4.5+0xfc>
   21ee4:	b	21e18 <GOMP_target_update_ext@@GOMP_4.5+0x118>

0000000000021ee8 <GOMP_target_enter_exit_data@@GOMP_4.5>:
   21ee8:	sub	sp, sp, #0x70
   21eec:	stp	x29, x30, [sp, #16]
   21ef0:	add	x29, sp, #0x10
   21ef4:	stp	x19, x20, [sp, #32]
   21ef8:	stp	x21, x22, [sp, #48]
   21efc:	stp	x23, x24, [sp, #64]
   21f00:	stp	x25, x26, [sp, #80]
   21f04:	mov	x23, x1
   21f08:	mov	x24, x2
   21f0c:	mov	x22, x3
   21f10:	mov	x20, x4
   21f14:	mov	w25, w5
   21f18:	mov	x19, x6
   21f1c:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   21f20:	mov	x21, x0
   21f24:	cbz	x19, 21fa0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb8>
   21f28:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21f2c:	ldr	x0, [x0, #4016]
   21f30:	mrs	x1, tpidr_el0
   21f34:	add	x0, x1, x0
   21f38:	ldr	x0, [x0, #80]
   21f3c:	cbz	x0, 21fa0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb8>
   21f40:	ldr	x1, [x0, #56]
   21f44:	cbz	x1, 21fa0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb8>
   21f48:	tbz	w25, #0, 21f6c <GOMP_target_enter_exit_data@@GOMP_4.5+0x84>
   21f4c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21f50:	ldr	x1, [x1, #4016]
   21f54:	mrs	x2, tpidr_el0
   21f58:	add	x1, x2, x1
   21f5c:	ldr	x1, [x1, #16]
   21f60:	cbz	x1, 21f98 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb0>
   21f64:	ldrb	w1, [x0, #205]
   21f68:	cbz	w1, 22004 <GOMP_target_enter_exit_data@@GOMP_4.5+0x11c>
   21f6c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21f70:	ldr	x1, [x1, #4016]
   21f74:	mrs	x2, tpidr_el0
   21f78:	add	x1, x2, x1
   21f7c:	ldr	x1, [x1, #16]
   21f80:	cmp	x1, #0x0
   21f84:	cset	w3, ne  // ne = any
   21f88:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21f8c:	ldrb	w2, [x2, #1364]
   21f90:	tst	w3, w2
   21f94:	b.ne	2203c <GOMP_target_enter_exit_data@@GOMP_4.5+0x154>  // b.any
   21f98:	mov	x0, x19
   21f9c:	bl	150c0 <GOMP_taskwait@@GOMP_2.0+0x5a4>
   21fa0:	cbz	x21, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   21fa4:	ldr	w0, [x21, #8]
   21fa8:	mov	w1, #0x5                   	// #5
   21fac:	and	w0, w0, w1
   21fb0:	cmp	w0, #0x4
   21fb4:	b.ne	22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>  // b.any
   21fb8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   21fbc:	ldr	x0, [x0, #4016]
   21fc0:	mrs	x1, tpidr_el0
   21fc4:	add	x0, x1, x0
   21fc8:	ldr	x0, [x0, #16]
   21fcc:	cmp	x0, #0x0
   21fd0:	cset	w2, ne  // ne = any
   21fd4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   21fd8:	ldrb	w1, [x1, #1364]
   21fdc:	tst	w2, w1
   21fe0:	b.ne	22070 <GOMP_target_enter_exit_data@@GOMP_4.5+0x188>  // b.any
   21fe4:	tbnz	w25, #1, 22150 <GOMP_target_enter_exit_data@@GOMP_4.5+0x268>
   21fe8:	cbz	x23, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   21fec:	str	x27, [sp, #96]
   21ff0:	mov	x19, #0x0                   	// #0
   21ff4:	mov	w26, #0x3                   	// #3
   21ff8:	mov	w25, #0x1                   	// #1
   21ffc:	mov	x27, #0x1                   	// #1
   22000:	b	220e8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x200>
   22004:	str	wzr, [sp, #8]
   22008:	str	xzr, [sp]
   2200c:	mov	x7, x19
   22010:	mov	w6, w25
   22014:	mov	x5, x20
   22018:	mov	x4, x22
   2201c:	mov	x3, x24
   22020:	mov	x2, x23
   22024:	mov	x1, #0x0                   	// #0
   22028:	mov	x0, x21
   2202c:	bl	13b44 <GOMP_PLUGIN_target_task_completion@@GOMP_PLUGIN_1.1+0xb8>
   22030:	and	w0, w0, #0xff
   22034:	cbz	w0, 21fa0 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb8>
   22038:	b	22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   2203c:	ldr	w1, [x1, #132]
   22040:	tbnz	w1, #2, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   22044:	ldr	x0, [x0, #40]
   22048:	cbz	x0, 21f98 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb0>
   2204c:	ldrb	w1, [x0, #49]
   22050:	cbnz	w1, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   22054:	ldrb	w1, [x0, #50]
   22058:	cbz	w1, 21f98 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb0>
   2205c:	ldr	x0, [x0]
   22060:	cbz	x0, 21f98 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb0>
   22064:	ldrb	w0, [x0, #49]
   22068:	cbz	w0, 21f98 <GOMP_target_enter_exit_data@@GOMP_4.5+0xb0>
   2206c:	b	22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   22070:	ldr	w0, [x0, #132]
   22074:	tbnz	w0, #2, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   22078:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2207c:	ldr	x0, [x0, #4016]
   22080:	mrs	x1, tpidr_el0
   22084:	add	x0, x1, x0
   22088:	ldr	x0, [x0, #80]
   2208c:	ldr	x0, [x0, #40]
   22090:	cbz	x0, 21fe4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xfc>
   22094:	ldrb	w1, [x0, #49]
   22098:	cbnz	w1, 22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   2209c:	ldrb	w1, [x0, #50]
   220a0:	cbz	w1, 21fe4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xfc>
   220a4:	ldr	x0, [x0]
   220a8:	cbz	x0, 21fe4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xfc>
   220ac:	ldrb	w0, [x0, #49]
   220b0:	cbz	w0, 21fe4 <GOMP_target_enter_exit_data@@GOMP_4.5+0xfc>
   220b4:	b	22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   220b8:	lsl	x0, x19, #3
   220bc:	mov	w7, w26
   220c0:	mov	w6, w25
   220c4:	add	x4, x22, x0
   220c8:	mov	x3, #0x0                   	// #0
   220cc:	add	x2, x24, x0
   220d0:	mov	x1, x27
   220d4:	mov	x0, x21
   220d8:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   220dc:	add	x19, x19, #0x1
   220e0:	cmp	x23, x19
   220e4:	b.ls	22130 <GOMP_target_enter_exit_data@@GOMP_4.5+0x248>  // b.plast
   220e8:	lsl	x0, x19, #1
   220ec:	add	x5, x20, x0
   220f0:	ldrb	w0, [x20, x0]
   220f4:	cmp	w0, #0x1c
   220f8:	b.ne	220b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x1d0>  // b.any
   220fc:	lsl	x2, x19, #3
   22100:	ldr	x1, [x22, x19, lsl #3]
   22104:	mov	w7, w26
   22108:	mov	w6, w25
   2210c:	add	x4, x22, x2
   22110:	mov	x3, #0x0                   	// #0
   22114:	add	x2, x24, x2
   22118:	add	x1, x1, #0x1
   2211c:	mov	x0, x21
   22120:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   22124:	ldr	x0, [x22, x19, lsl #3]
   22128:	add	x19, x19, x0
   2212c:	b	220dc <GOMP_target_enter_exit_data@@GOMP_4.5+0x1f4>
   22130:	ldr	x27, [sp, #96]
   22134:	ldp	x19, x20, [sp, #32]
   22138:	ldp	x21, x22, [sp, #48]
   2213c:	ldp	x23, x24, [sp, #64]
   22140:	ldp	x25, x26, [sp, #80]
   22144:	ldp	x29, x30, [sp, #16]
   22148:	add	sp, sp, #0x70
   2214c:	ret
   22150:	mov	x4, x20
   22154:	mov	x3, x22
   22158:	mov	x2, x24
   2215c:	mov	x1, x23
   22160:	mov	x0, x21
   22164:	bl	1e55c <omp_get_place_proc_ids@@OMP_4.5+0xc34>
   22168:	b	22134 <GOMP_target_enter_exit_data@@GOMP_4.5+0x24c>
   2216c:	stp	x29, x30, [sp, #-64]!
   22170:	mov	x29, sp
   22174:	stp	x19, x20, [sp, #16]
   22178:	mov	x19, x0
   2217c:	ldr	x20, [x0]
   22180:	ldr	x1, [x0, #8]
   22184:	cbz	x1, 2228c <GOMP_target_enter_exit_data@@GOMP_4.5+0x3a4>
   22188:	cbz	x20, 22194 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ac>
   2218c:	ldr	w0, [x20, #8]
   22190:	tbnz	w0, #2, 221b8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2d0>
   22194:	mov	w0, #0x2                   	// #2
   22198:	str	w0, [x19, #44]
   2219c:	add	x1, x19, #0x50
   221a0:	ldr	x0, [x19, #8]
   221a4:	bl	1e0d0 <omp_get_place_proc_ids@@OMP_4.5+0x7a8>
   221a8:	mov	w0, #0x0                   	// #0
   221ac:	ldp	x19, x20, [sp, #16]
   221b0:	ldp	x29, x30, [sp], #64
   221b4:	ret
   221b8:	stp	x21, x22, [sp, #32]
   221bc:	mov	x0, x20
   221c0:	bl	1e47c <omp_get_place_proc_ids@@OMP_4.5+0xb54>
   221c4:	mov	x21, x0
   221c8:	cbz	x0, 22230 <GOMP_target_enter_exit_data@@GOMP_4.5+0x348>
   221cc:	ldr	x1, [x20, #136]
   221d0:	cbz	x1, 221e0 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2f8>
   221d4:	blr	x1
   221d8:	and	w0, w0, #0xff
   221dc:	cbz	w0, 22228 <GOMP_target_enter_exit_data@@GOMP_4.5+0x340>
   221e0:	ldr	w0, [x19, #44]
   221e4:	cmp	w0, #0x5
   221e8:	b.eq	22238 <GOMP_target_enter_exit_data@@GOMP_4.5+0x350>  // b.none
   221ec:	ldr	w0, [x20, #8]
   221f0:	tbz	w0, #0, 2225c <GOMP_target_enter_exit_data@@GOMP_4.5+0x374>
   221f4:	str	xzr, [x19, #48]
   221f8:	add	x2, x19, #0x50
   221fc:	mov	w0, #0x3                   	// #3
   22200:	str	w0, [x19, #44]
   22204:	ldr	x5, [x20, #152]
   22208:	mov	x4, x19
   2220c:	ldr	x3, [x19, #72]
   22210:	mov	x1, x21
   22214:	ldr	w0, [x20, #12]
   22218:	blr	x5
   2221c:	mov	w0, #0x1                   	// #1
   22220:	ldp	x21, x22, [sp, #32]
   22224:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   22228:	ldp	x21, x22, [sp, #32]
   2222c:	b	22194 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ac>
   22230:	ldp	x21, x22, [sp, #32]
   22234:	b	22194 <GOMP_target_enter_exit_data@@GOMP_4.5+0x2ac>
   22238:	ldr	x2, [x19, #48]
   2223c:	mov	w0, #0x0                   	// #0
   22240:	cbz	x2, 223d4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x4ec>
   22244:	mov	w1, #0x1                   	// #1
   22248:	mov	x0, x2
   2224c:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   22250:	mov	w0, #0x0                   	// #0
   22254:	ldp	x21, x22, [sp, #32]
   22258:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   2225c:	mov	w7, #0x1                   	// #1
   22260:	mov	w6, w7
   22264:	ldr	x5, [x19, #32]
   22268:	ldr	x4, [x19, #24]
   2226c:	mov	x3, #0x0                   	// #0
   22270:	add	x2, x19, #0x50
   22274:	ldr	x1, [x19, #16]
   22278:	mov	x0, x20
   2227c:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   22280:	str	x0, [x19, #48]
   22284:	ldr	x2, [x0, #16]
   22288:	b	221fc <GOMP_target_enter_exit_data@@GOMP_4.5+0x314>
   2228c:	cbz	x20, 223c4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x4dc>
   22290:	ldr	w1, [x20, #8]
   22294:	mov	w0, #0x5                   	// #5
   22298:	and	w1, w1, w0
   2229c:	mov	w0, #0x0                   	// #0
   222a0:	cmp	w1, #0x4
   222a4:	b.ne	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>  // b.any
   222a8:	ldr	w0, [x19, #40]
   222ac:	tbnz	w0, #31, 222d8 <GOMP_target_enter_exit_data@@GOMP_4.5+0x3f0>
   222b0:	tbnz	w0, #1, 223a4 <GOMP_target_enter_exit_data@@GOMP_4.5+0x4bc>
   222b4:	ldr	x0, [x19, #16]
   222b8:	cbz	x0, 223cc <GOMP_target_enter_exit_data@@GOMP_4.5+0x4e4>
   222bc:	stp	x21, x22, [sp, #32]
   222c0:	stp	x23, x24, [sp, #48]
   222c4:	mov	x21, #0x0                   	// #0
   222c8:	mov	w23, #0x3                   	// #3
   222cc:	mov	w22, #0x1                   	// #1
   222d0:	mov	x24, #0x1                   	// #1
   222d4:	b	2233c <GOMP_target_enter_exit_data@@GOMP_4.5+0x454>
   222d8:	mov	w5, #0x1                   	// #1
   222dc:	ldr	x4, [x19, #32]
   222e0:	ldr	x3, [x19, #24]
   222e4:	add	x2, x19, #0x50
   222e8:	ldr	x1, [x19, #16]
   222ec:	mov	x0, x20
   222f0:	bl	1e810 <omp_get_place_proc_ids@@OMP_4.5+0xee8>
   222f4:	mov	w0, #0x0                   	// #0
   222f8:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   222fc:	add	x2, x21, #0xa
   22300:	lsl	x2, x2, #3
   22304:	sub	x0, x2, #0x50
   22308:	ldr	x4, [x19, #24]
   2230c:	mov	w7, w23
   22310:	mov	w6, w22
   22314:	add	x4, x4, x0
   22318:	mov	x3, #0x0                   	// #0
   2231c:	add	x2, x19, x2
   22320:	mov	x1, x24
   22324:	mov	x0, x20
   22328:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   2232c:	add	x21, x21, #0x1
   22330:	ldr	x0, [x19, #16]
   22334:	cmp	x0, x21
   22338:	b.ls	22394 <GOMP_target_enter_exit_data@@GOMP_4.5+0x4ac>  // b.plast
   2233c:	lsl	x0, x21, #1
   22340:	ldr	x1, [x19, #32]
   22344:	add	x5, x1, x0
   22348:	ldrb	w0, [x1, x0]
   2234c:	cmp	w0, #0x1c
   22350:	b.ne	222fc <GOMP_target_enter_exit_data@@GOMP_4.5+0x414>  // b.any
   22354:	lsl	x0, x21, #3
   22358:	ldr	x4, [x19, #24]
   2235c:	add	x2, x0, #0x50
   22360:	ldr	x1, [x4, x21, lsl #3]
   22364:	mov	w7, w23
   22368:	mov	w6, w22
   2236c:	add	x4, x4, x0
   22370:	mov	x3, #0x0                   	// #0
   22374:	add	x2, x19, x2
   22378:	add	x1, x1, #0x1
   2237c:	mov	x0, x20
   22380:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   22384:	ldr	x0, [x19, #24]
   22388:	ldr	x0, [x0, x21, lsl #3]
   2238c:	add	x21, x21, x0
   22390:	b	2232c <GOMP_target_enter_exit_data@@GOMP_4.5+0x444>
   22394:	mov	w0, #0x0                   	// #0
   22398:	ldp	x21, x22, [sp, #32]
   2239c:	ldp	x23, x24, [sp, #48]
   223a0:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   223a4:	ldr	x4, [x19, #32]
   223a8:	ldr	x3, [x19, #24]
   223ac:	add	x2, x19, #0x50
   223b0:	ldr	x1, [x19, #16]
   223b4:	mov	x0, x20
   223b8:	bl	1e55c <omp_get_place_proc_ids@@OMP_4.5+0xc34>
   223bc:	mov	w0, #0x0                   	// #0
   223c0:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   223c4:	mov	w0, #0x0                   	// #0
   223c8:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   223cc:	mov	w0, #0x0                   	// #0
   223d0:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>
   223d4:	ldp	x21, x22, [sp, #32]
   223d8:	b	221ac <GOMP_target_enter_exit_data@@GOMP_4.5+0x2c4>

00000000000223dc <GOMP_teams@@GOMP_4.0>:
   223dc:	cbz	w1, 2242c <GOMP_teams@@GOMP_4.0+0x50>
   223e0:	stp	x29, x30, [sp, #-32]!
   223e4:	mov	x29, sp
   223e8:	str	x19, [sp, #16]
   223ec:	mov	w19, w1
   223f0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   223f4:	ldr	x0, [x0, #4016]
   223f8:	mrs	x1, tpidr_el0
   223fc:	add	x0, x1, x0
   22400:	ldr	x0, [x0, #80]
   22404:	cbz	x0, 22424 <GOMP_teams@@GOMP_4.0+0x48>
   22408:	add	x0, x0, #0x90
   2240c:	cmp	w19, #0x0
   22410:	csinv	w19, w19, wzr, ge  // ge = tcont
   22414:	str	w19, [x0, #20]
   22418:	ldr	x19, [sp, #16]
   2241c:	ldp	x29, x30, [sp], #32
   22420:	ret
   22424:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   22428:	b	2240c <GOMP_teams@@GOMP_4.0+0x30>
   2242c:	ret

0000000000022430 <omp_target_alloc@@OMP_4.5>:
   22430:	stp	x29, x30, [sp, #-48]!
   22434:	mov	x29, sp
   22438:	stp	x19, x20, [sp, #16]
   2243c:	str	x21, [sp, #32]
   22440:	mov	x21, x0
   22444:	cmn	w1, #0x2
   22448:	b.eq	224d0 <omp_target_alloc@@OMP_4.5+0xa0>  // b.none
   2244c:	mov	w0, w1
   22450:	mov	x19, #0x0                   	// #0
   22454:	tbnz	w1, #31, 224bc <omp_target_alloc@@OMP_4.5+0x8c>
   22458:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   2245c:	mov	x19, x0
   22460:	cbz	x0, 224bc <omp_target_alloc@@OMP_4.5+0x8c>
   22464:	ldr	w1, [x0, #8]
   22468:	mov	w0, #0x5                   	// #5
   2246c:	and	w1, w1, w0
   22470:	add	x20, x19, #0xa8
   22474:	mov	w0, #0x1                   	// #1
   22478:	cmp	w1, #0x4
   2247c:	b.ne	224dc <omp_target_alloc@@OMP_4.5+0xac>  // b.any
   22480:	ldaxr	w1, [x20]
   22484:	cbnz	w1, 22490 <omp_target_alloc@@OMP_4.5+0x60>
   22488:	stxr	w2, w0, [x20]
   2248c:	cbnz	w2, 22480 <omp_target_alloc@@OMP_4.5+0x50>
   22490:	cmp	w1, #0x0
   22494:	b.ne	224ec <omp_target_alloc@@OMP_4.5+0xbc>  // b.any
   22498:	ldr	x2, [x19, #96]
   2249c:	mov	x1, x21
   224a0:	ldr	w0, [x19, #12]
   224a4:	blr	x2
   224a8:	mov	x19, x0
   224ac:	ldxr	w0, [x20]
   224b0:	stlxr	w1, wzr, [x20]
   224b4:	cbnz	w1, 224ac <omp_target_alloc@@OMP_4.5+0x7c>
   224b8:	tbnz	w0, #31, 224f8 <omp_target_alloc@@OMP_4.5+0xc8>
   224bc:	mov	x0, x19
   224c0:	ldp	x19, x20, [sp, #16]
   224c4:	ldr	x21, [sp, #32]
   224c8:	ldp	x29, x30, [sp], #48
   224cc:	ret
   224d0:	bl	8760 <malloc@plt>
   224d4:	mov	x19, x0
   224d8:	b	224bc <omp_target_alloc@@OMP_4.5+0x8c>
   224dc:	mov	x0, x21
   224e0:	bl	8760 <malloc@plt>
   224e4:	mov	x19, x0
   224e8:	b	224bc <omp_target_alloc@@OMP_4.5+0x8c>
   224ec:	mov	x0, x20
   224f0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   224f4:	b	22498 <omp_target_alloc@@OMP_4.5+0x68>
   224f8:	mov	x0, x20
   224fc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22500:	b	224bc <omp_target_alloc@@OMP_4.5+0x8c>

0000000000022504 <omp_target_free@@OMP_4.5>:
   22504:	cbz	x0, 225c8 <omp_target_free@@OMP_4.5+0xc4>
   22508:	stp	x29, x30, [sp, #-48]!
   2250c:	mov	x29, sp
   22510:	stp	x19, x20, [sp, #16]
   22514:	mov	x19, x0
   22518:	cmn	w1, #0x2
   2251c:	b.eq	22598 <omp_target_free@@OMP_4.5+0x94>  // b.none
   22520:	tbnz	w1, #31, 2258c <omp_target_free@@OMP_4.5+0x88>
   22524:	mov	w0, w1
   22528:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   2252c:	mov	x20, x0
   22530:	cbz	x0, 2258c <omp_target_free@@OMP_4.5+0x88>
   22534:	ldr	w0, [x0, #8]
   22538:	mov	w1, #0x5                   	// #5
   2253c:	and	w0, w0, w1
   22540:	cmp	w0, #0x4
   22544:	b.ne	225a0 <omp_target_free@@OMP_4.5+0x9c>  // b.any
   22548:	str	x21, [sp, #32]
   2254c:	add	x21, x20, #0xa8
   22550:	mov	w0, #0x1                   	// #1
   22554:	ldaxr	w1, [x21]
   22558:	cbnz	w1, 22564 <omp_target_free@@OMP_4.5+0x60>
   2255c:	stxr	w2, w0, [x21]
   22560:	cbnz	w2, 22554 <omp_target_free@@OMP_4.5+0x50>
   22564:	cmp	w1, #0x0
   22568:	b.ne	225ac <omp_target_free@@OMP_4.5+0xa8>  // b.any
   2256c:	mov	x1, x19
   22570:	mov	x0, x20
   22574:	bl	1e040 <omp_get_place_proc_ids@@OMP_4.5+0x718>
   22578:	ldxr	w0, [x21]
   2257c:	stlxr	w1, wzr, [x21]
   22580:	cbnz	w1, 22578 <omp_target_free@@OMP_4.5+0x74>
   22584:	tbnz	w0, #31, 225b8 <omp_target_free@@OMP_4.5+0xb4>
   22588:	ldr	x21, [sp, #32]
   2258c:	ldp	x19, x20, [sp, #16]
   22590:	ldp	x29, x30, [sp], #48
   22594:	ret
   22598:	bl	8900 <free@plt>
   2259c:	b	2258c <omp_target_free@@OMP_4.5+0x88>
   225a0:	mov	x0, x19
   225a4:	bl	8900 <free@plt>
   225a8:	b	2258c <omp_target_free@@OMP_4.5+0x88>
   225ac:	mov	x0, x21
   225b0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   225b4:	b	2256c <omp_target_free@@OMP_4.5+0x68>
   225b8:	mov	x0, x21
   225bc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   225c0:	ldr	x21, [sp, #32]
   225c4:	b	2258c <omp_target_free@@OMP_4.5+0x88>
   225c8:	ret

00000000000225cc <omp_target_is_present@@OMP_4.5>:
   225cc:	stp	x29, x30, [sp, #-112]!
   225d0:	mov	x29, sp
   225d4:	stp	x19, x20, [sp, #16]
   225d8:	cmp	x0, #0x0
   225dc:	ccmn	w1, #0x2, #0x4, ne  // ne = any
   225e0:	mov	w20, #0x1                   	// #1
   225e4:	b.eq	22680 <omp_target_is_present@@OMP_4.5+0xb4>  // b.none
   225e8:	mov	x19, x0
   225ec:	mov	w20, #0x0                   	// #0
   225f0:	tbnz	w1, #31, 22680 <omp_target_is_present@@OMP_4.5+0xb4>
   225f4:	stp	x21, x22, [sp, #32]
   225f8:	mov	w0, w1
   225fc:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   22600:	mov	x21, x0
   22604:	cbz	x0, 226ac <omp_target_is_present@@OMP_4.5+0xe0>
   22608:	ldr	w0, [x0, #8]
   2260c:	mov	w1, #0x5                   	// #5
   22610:	and	w0, w0, w1
   22614:	mov	w20, #0x1                   	// #1
   22618:	cmp	w0, #0x4
   2261c:	b.ne	226b8 <omp_target_is_present@@OMP_4.5+0xec>  // b.any
   22620:	add	x22, x21, #0xa8
   22624:	mov	w0, w20
   22628:	ldaxr	w1, [x22]
   2262c:	cbnz	w1, 22638 <omp_target_is_present@@OMP_4.5+0x6c>
   22630:	stxr	w2, w0, [x22]
   22634:	cbnz	w2, 22628 <omp_target_is_present@@OMP_4.5+0x5c>
   22638:	cmp	w1, #0x0
   2263c:	b.ne	22690 <omp_target_is_present@@OMP_4.5+0xc4>  // b.any
   22640:	str	x19, [sp, #56]
   22644:	add	x19, x19, #0x1
   22648:	str	x19, [sp, #64]
   2264c:	add	x1, sp, #0x38
   22650:	add	x0, x21, #0xa0
   22654:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22658:	ldr	x1, [sp, #64]
   2265c:	sub	x1, x1, #0x1
   22660:	str	x1, [sp, #64]
   22664:	cmp	x0, #0x0
   22668:	cset	w20, ne  // ne = any
   2266c:	ldxr	w0, [x22]
   22670:	stlxr	w1, wzr, [x22]
   22674:	cbnz	w1, 2266c <omp_target_is_present@@OMP_4.5+0xa0>
   22678:	tbnz	w0, #31, 2269c <omp_target_is_present@@OMP_4.5+0xd0>
   2267c:	ldp	x21, x22, [sp, #32]
   22680:	mov	w0, w20
   22684:	ldp	x19, x20, [sp, #16]
   22688:	ldp	x29, x30, [sp], #112
   2268c:	ret
   22690:	mov	x0, x22
   22694:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22698:	b	22640 <omp_target_is_present@@OMP_4.5+0x74>
   2269c:	mov	x0, x22
   226a0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   226a4:	ldp	x21, x22, [sp, #32]
   226a8:	b	22680 <omp_target_is_present@@OMP_4.5+0xb4>
   226ac:	mov	w20, #0x0                   	// #0
   226b0:	ldp	x21, x22, [sp, #32]
   226b4:	b	22680 <omp_target_is_present@@OMP_4.5+0xb4>
   226b8:	ldp	x21, x22, [sp, #32]
   226bc:	b	22680 <omp_target_is_present@@OMP_4.5+0xb4>

00000000000226c0 <omp_target_memcpy@@OMP_4.5>:
   226c0:	stp	x29, x30, [sp, #-80]!
   226c4:	mov	x29, sp
   226c8:	stp	x19, x20, [sp, #16]
   226cc:	stp	x21, x22, [sp, #32]
   226d0:	stp	x23, x24, [sp, #48]
   226d4:	str	x25, [sp, #64]
   226d8:	mov	x21, x0
   226dc:	mov	x22, x1
   226e0:	mov	x23, x2
   226e4:	mov	x24, x3
   226e8:	mov	x25, x4
   226ec:	mov	w19, w6
   226f0:	cmn	w5, #0x2
   226f4:	b.eq	22724 <omp_target_memcpy@@OMP_4.5+0x64>  // b.none
   226f8:	mov	w0, #0x16                  	// #22
   226fc:	tbnz	w5, #31, 22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22700:	mov	w0, w5
   22704:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   22708:	mov	x20, x0
   2270c:	cbz	x0, 22878 <omp_target_memcpy@@OMP_4.5+0x1b8>
   22710:	ldr	w0, [x0, #8]
   22714:	mov	w1, #0x5                   	// #5
   22718:	and	w0, w0, w1
   2271c:	cmp	w0, #0x4
   22720:	b.eq	228b0 <omp_target_memcpy@@OMP_4.5+0x1f0>  // b.none
   22724:	mov	x20, #0x0                   	// #0
   22728:	cmn	w19, #0x2
   2272c:	b.eq	22760 <omp_target_memcpy@@OMP_4.5+0xa0>  // b.none
   22730:	mov	w0, #0x16                  	// #22
   22734:	tbnz	w19, #31, 22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22738:	mov	w0, w19
   2273c:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   22740:	mov	x19, x0
   22744:	cbz	x0, 22880 <omp_target_memcpy@@OMP_4.5+0x1c0>
   22748:	ldr	w0, [x0, #8]
   2274c:	mov	w1, #0x5                   	// #5
   22750:	and	w0, w0, w1
   22754:	cmp	w0, #0x4
   22758:	b.eq	22888 <omp_target_memcpy@@OMP_4.5+0x1c8>  // b.none
   2275c:	cbnz	x20, 228b8 <omp_target_memcpy@@OMP_4.5+0x1f8>
   22760:	mov	x2, x23
   22764:	add	x1, x22, x25
   22768:	add	x0, x21, x24
   2276c:	bl	85c0 <memcpy@plt>
   22770:	mov	w0, #0x0                   	// #0
   22774:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22778:	mov	x0, x19
   2277c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22780:	b	228d8 <omp_target_memcpy@@OMP_4.5+0x218>
   22784:	mov	x0, x19
   22788:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2278c:	b	22904 <omp_target_memcpy@@OMP_4.5+0x244>
   22790:	add	x20, x19, #0xa8
   22794:	mov	w0, #0x1                   	// #1
   22798:	ldaxr	w1, [x20]
   2279c:	cbnz	w1, 227a8 <omp_target_memcpy@@OMP_4.5+0xe8>
   227a0:	stxr	w2, w0, [x20]
   227a4:	cbnz	w2, 22798 <omp_target_memcpy@@OMP_4.5+0xd8>
   227a8:	cmp	w1, #0x0
   227ac:	b.ne	227ec <omp_target_memcpy@@OMP_4.5+0x12c>  // b.any
   227b0:	ldr	x4, [x19, #112]
   227b4:	mov	x3, x23
   227b8:	add	x2, x22, x25
   227bc:	add	x1, x21, x24
   227c0:	ldr	w0, [x19, #12]
   227c4:	blr	x4
   227c8:	and	w19, w0, #0xff
   227cc:	ldxr	w0, [x20]
   227d0:	stlxr	w1, wzr, [x20]
   227d4:	cbnz	w1, 227cc <omp_target_memcpy@@OMP_4.5+0x10c>
   227d8:	tbnz	w0, #31, 227f8 <omp_target_memcpy@@OMP_4.5+0x138>
   227dc:	cmp	w19, #0x0
   227e0:	mov	w0, #0x16                  	// #22
   227e4:	csel	w0, w0, wzr, eq  // eq = none
   227e8:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   227ec:	mov	x0, x20
   227f0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   227f4:	b	227b0 <omp_target_memcpy@@OMP_4.5+0xf0>
   227f8:	mov	x0, x20
   227fc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22800:	b	227dc <omp_target_memcpy@@OMP_4.5+0x11c>
   22804:	add	x20, x19, #0xa8
   22808:	mov	w0, #0x1                   	// #1
   2280c:	ldaxr	w1, [x20]
   22810:	cbnz	w1, 2281c <omp_target_memcpy@@OMP_4.5+0x15c>
   22814:	stxr	w2, w0, [x20]
   22818:	cbnz	w2, 2280c <omp_target_memcpy@@OMP_4.5+0x14c>
   2281c:	cmp	w1, #0x0
   22820:	b.ne	22860 <omp_target_memcpy@@OMP_4.5+0x1a0>  // b.any
   22824:	ldr	x4, [x19, #128]
   22828:	mov	x3, x23
   2282c:	add	x2, x22, x25
   22830:	add	x1, x21, x24
   22834:	ldr	w0, [x19, #12]
   22838:	blr	x4
   2283c:	and	w19, w0, #0xff
   22840:	ldxr	w0, [x20]
   22844:	stlxr	w1, wzr, [x20]
   22848:	cbnz	w1, 22840 <omp_target_memcpy@@OMP_4.5+0x180>
   2284c:	tbnz	w0, #31, 2286c <omp_target_memcpy@@OMP_4.5+0x1ac>
   22850:	cmp	w19, #0x0
   22854:	mov	w0, #0x16                  	// #22
   22858:	csel	w0, w0, wzr, eq  // eq = none
   2285c:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22860:	mov	x0, x20
   22864:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22868:	b	22824 <omp_target_memcpy@@OMP_4.5+0x164>
   2286c:	mov	x0, x20
   22870:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22874:	b	22850 <omp_target_memcpy@@OMP_4.5+0x190>
   22878:	mov	w0, #0x16                  	// #22
   2287c:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22880:	mov	w0, #0x16                  	// #22
   22884:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>
   22888:	cbz	x20, 22790 <omp_target_memcpy@@OMP_4.5+0xd0>
   2288c:	mov	w0, #0x16                  	// #22
   22890:	cmp	x19, x20
   22894:	b.eq	22804 <omp_target_memcpy@@OMP_4.5+0x144>  // b.none
   22898:	ldp	x19, x20, [sp, #16]
   2289c:	ldp	x21, x22, [sp, #32]
   228a0:	ldp	x23, x24, [sp, #48]
   228a4:	ldr	x25, [sp, #64]
   228a8:	ldp	x29, x30, [sp], #80
   228ac:	ret
   228b0:	cmn	w19, #0x2
   228b4:	b.ne	22730 <omp_target_memcpy@@OMP_4.5+0x70>  // b.any
   228b8:	add	x19, x20, #0xa8
   228bc:	mov	w0, #0x1                   	// #1
   228c0:	ldaxr	w1, [x19]
   228c4:	cbnz	w1, 228d0 <omp_target_memcpy@@OMP_4.5+0x210>
   228c8:	stxr	w2, w0, [x19]
   228cc:	cbnz	w2, 228c0 <omp_target_memcpy@@OMP_4.5+0x200>
   228d0:	cmp	w1, #0x0
   228d4:	b.ne	22778 <omp_target_memcpy@@OMP_4.5+0xb8>  // b.any
   228d8:	ldr	x4, [x20, #120]
   228dc:	mov	x3, x23
   228e0:	add	x2, x22, x25
   228e4:	add	x1, x21, x24
   228e8:	ldr	w0, [x20, #12]
   228ec:	blr	x4
   228f0:	and	w20, w0, #0xff
   228f4:	ldxr	w0, [x19]
   228f8:	stlxr	w1, wzr, [x19]
   228fc:	cbnz	w1, 228f4 <omp_target_memcpy@@OMP_4.5+0x234>
   22900:	tbnz	w0, #31, 22784 <omp_target_memcpy@@OMP_4.5+0xc4>
   22904:	cmp	w20, #0x0
   22908:	mov	w0, #0x16                  	// #22
   2290c:	csel	w0, w0, wzr, eq  // eq = none
   22910:	b	22898 <omp_target_memcpy@@OMP_4.5+0x1d8>

0000000000022914 <omp_target_memcpy_rect@@OMP_4.5>:
   22914:	sub	sp, sp, #0x90
   22918:	stp	x29, x30, [sp, #32]
   2291c:	add	x29, sp, #0x20
   22920:	stp	x19, x20, [sp, #48]
   22924:	stp	x25, x26, [sp, #96]
   22928:	stp	x27, x28, [sp, #112]
   2292c:	mov	x19, x0
   22930:	mov	x20, x1
   22934:	str	x2, [sp, #128]
   22938:	str	w3, [sp, #140]
   2293c:	ldr	w0, [sp, #152]
   22940:	ldr	w27, [sp, #160]
   22944:	orr	x1, x19, x1
   22948:	mov	w25, #0x7fffffff            	// #2147483647
   2294c:	cbz	x1, 22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22950:	stp	x21, x22, [sp, #64]
   22954:	stp	x23, x24, [sp, #80]
   22958:	mov	x21, x4
   2295c:	mov	x22, x5
   22960:	mov	x23, x6
   22964:	mov	x24, x7
   22968:	cmn	w0, #0x2
   2296c:	b.eq	22998 <omp_target_memcpy_rect@@OMP_4.5+0x84>  // b.none
   22970:	mov	w25, #0x16                  	// #22
   22974:	tbnz	w0, #31, 22ba0 <omp_target_memcpy_rect@@OMP_4.5+0x28c>
   22978:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   2297c:	mov	x26, x0
   22980:	cbz	x0, 22a88 <omp_target_memcpy_rect@@OMP_4.5+0x174>
   22984:	ldr	w0, [x0, #8]
   22988:	mov	w1, #0x5                   	// #5
   2298c:	and	w0, w0, w1
   22990:	cmp	w0, #0x4
   22994:	b.eq	22b94 <omp_target_memcpy_rect@@OMP_4.5+0x280>  // b.none
   22998:	mov	x26, #0x0                   	// #0
   2299c:	cmn	w27, #0x2
   229a0:	b.eq	22aa8 <omp_target_memcpy_rect@@OMP_4.5+0x194>  // b.none
   229a4:	mov	w25, #0x16                  	// #22
   229a8:	tbnz	w27, #31, 22bac <omp_target_memcpy_rect@@OMP_4.5+0x298>
   229ac:	mov	w0, w27
   229b0:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   229b4:	mov	x27, x0
   229b8:	cbz	x0, 22a98 <omp_target_memcpy_rect@@OMP_4.5+0x184>
   229bc:	ldr	w0, [x0, #8]
   229c0:	mov	w1, #0x5                   	// #5
   229c4:	and	w0, w0, w1
   229c8:	cmp	w0, #0x4
   229cc:	b.eq	22aec <omp_target_memcpy_rect@@OMP_4.5+0x1d8>  // b.none
   229d0:	cbz	x26, 22aa8 <omp_target_memcpy_rect@@OMP_4.5+0x194>
   229d4:	add	x27, x26, #0xa8
   229d8:	mov	w0, #0x1                   	// #1
   229dc:	ldaxr	w1, [x27]
   229e0:	cbnz	w1, 229ec <omp_target_memcpy_rect@@OMP_4.5+0xd8>
   229e4:	stxr	w2, w0, [x27]
   229e8:	cbnz	w2, 229dc <omp_target_memcpy_rect@@OMP_4.5+0xc8>
   229ec:	cmp	w1, #0x0
   229f0:	b.ne	22a54 <omp_target_memcpy_rect@@OMP_4.5+0x140>  // b.any
   229f4:	str	xzr, [sp, #16]
   229f8:	str	x26, [sp, #8]
   229fc:	ldr	x0, [sp, #144]
   22a00:	str	x0, [sp]
   22a04:	mov	x7, x24
   22a08:	mov	x6, x23
   22a0c:	mov	x5, x22
   22a10:	mov	x4, x21
   22a14:	ldr	w3, [sp, #140]
   22a18:	ldr	x2, [sp, #128]
   22a1c:	mov	x1, x20
   22a20:	mov	x0, x19
   22a24:	bl	1dbf0 <omp_get_place_proc_ids@@OMP_4.5+0x2c8>
   22a28:	mov	w25, w0
   22a2c:	ldxr	w0, [x27]
   22a30:	stlxr	w1, wzr, [x27]
   22a34:	cbnz	w1, 22a2c <omp_target_memcpy_rect@@OMP_4.5+0x118>
   22a38:	tbnz	w0, #31, 22a74 <omp_target_memcpy_rect@@OMP_4.5+0x160>
   22a3c:	ldp	x21, x22, [sp, #64]
   22a40:	ldp	x23, x24, [sp, #80]
   22a44:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22a48:	mov	x0, x28
   22a4c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22a50:	b	22b1c <omp_target_memcpy_rect@@OMP_4.5+0x208>
   22a54:	mov	x0, x27
   22a58:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22a5c:	b	229f4 <omp_target_memcpy_rect@@OMP_4.5+0xe0>
   22a60:	mov	x0, x28
   22a64:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22a68:	ldp	x21, x22, [sp, #64]
   22a6c:	ldp	x23, x24, [sp, #80]
   22a70:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22a74:	mov	x0, x27
   22a78:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22a7c:	ldp	x21, x22, [sp, #64]
   22a80:	ldp	x23, x24, [sp, #80]
   22a84:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22a88:	mov	w25, #0x16                  	// #22
   22a8c:	ldp	x21, x22, [sp, #64]
   22a90:	ldp	x23, x24, [sp, #80]
   22a94:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22a98:	mov	w25, #0x16                  	// #22
   22a9c:	ldp	x21, x22, [sp, #64]
   22aa0:	ldp	x23, x24, [sp, #80]
   22aa4:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22aa8:	str	xzr, [sp, #16]
   22aac:	str	xzr, [sp, #8]
   22ab0:	ldr	x0, [sp, #144]
   22ab4:	str	x0, [sp]
   22ab8:	mov	x7, x24
   22abc:	mov	x6, x23
   22ac0:	mov	x5, x22
   22ac4:	mov	x4, x21
   22ac8:	ldr	w3, [sp, #140]
   22acc:	ldr	x2, [sp, #128]
   22ad0:	mov	x1, x20
   22ad4:	mov	x0, x19
   22ad8:	bl	1dbf0 <omp_get_place_proc_ids@@OMP_4.5+0x2c8>
   22adc:	mov	w25, w0
   22ae0:	ldp	x21, x22, [sp, #64]
   22ae4:	ldp	x23, x24, [sp, #80]
   22ae8:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22aec:	cmp	x26, #0x0
   22af0:	mov	w25, #0x16                  	// #22
   22af4:	ccmp	x27, x26, #0x4, ne  // ne = any
   22af8:	add	x28, x27, #0xa8
   22afc:	mov	w0, #0x1                   	// #1
   22b00:	b.ne	22b88 <omp_target_memcpy_rect@@OMP_4.5+0x274>  // b.any
   22b04:	ldaxr	w1, [x28]
   22b08:	cbnz	w1, 22b14 <omp_target_memcpy_rect@@OMP_4.5+0x200>
   22b0c:	stxr	w2, w0, [x28]
   22b10:	cbnz	w2, 22b04 <omp_target_memcpy_rect@@OMP_4.5+0x1f0>
   22b14:	cmp	w1, #0x0
   22b18:	b.ne	22a48 <omp_target_memcpy_rect@@OMP_4.5+0x134>  // b.any
   22b1c:	str	x27, [sp, #16]
   22b20:	str	x26, [sp, #8]
   22b24:	ldr	x0, [sp, #144]
   22b28:	str	x0, [sp]
   22b2c:	mov	x7, x24
   22b30:	mov	x6, x23
   22b34:	mov	x5, x22
   22b38:	mov	x4, x21
   22b3c:	ldr	w3, [sp, #140]
   22b40:	ldr	x2, [sp, #128]
   22b44:	mov	x1, x20
   22b48:	mov	x0, x19
   22b4c:	bl	1dbf0 <omp_get_place_proc_ids@@OMP_4.5+0x2c8>
   22b50:	mov	w25, w0
   22b54:	ldxr	w0, [x28]
   22b58:	stlxr	w1, wzr, [x28]
   22b5c:	cbnz	w1, 22b54 <omp_target_memcpy_rect@@OMP_4.5+0x240>
   22b60:	tbnz	w0, #31, 22a60 <omp_target_memcpy_rect@@OMP_4.5+0x14c>
   22b64:	ldp	x21, x22, [sp, #64]
   22b68:	ldp	x23, x24, [sp, #80]
   22b6c:	mov	w0, w25
   22b70:	ldp	x19, x20, [sp, #48]
   22b74:	ldp	x25, x26, [sp, #96]
   22b78:	ldp	x27, x28, [sp, #112]
   22b7c:	ldp	x29, x30, [sp, #32]
   22b80:	add	sp, sp, #0x90
   22b84:	ret
   22b88:	ldp	x21, x22, [sp, #64]
   22b8c:	ldp	x23, x24, [sp, #80]
   22b90:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22b94:	cmn	w27, #0x2
   22b98:	b.ne	229a4 <omp_target_memcpy_rect@@OMP_4.5+0x90>  // b.any
   22b9c:	b	229d4 <omp_target_memcpy_rect@@OMP_4.5+0xc0>
   22ba0:	ldp	x21, x22, [sp, #64]
   22ba4:	ldp	x23, x24, [sp, #80]
   22ba8:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>
   22bac:	ldp	x21, x22, [sp, #64]
   22bb0:	ldp	x23, x24, [sp, #80]
   22bb4:	b	22b6c <omp_target_memcpy_rect@@OMP_4.5+0x258>

0000000000022bb8 <omp_target_associate_ptr@@OMP_4.5>:
   22bb8:	stp	x29, x30, [sp, #-144]!
   22bbc:	mov	x29, sp
   22bc0:	stp	x23, x24, [sp, #48]
   22bc4:	mov	w24, #0x16                  	// #22
   22bc8:	tbnz	w4, #31, 22c94 <omp_target_associate_ptr@@OMP_4.5+0xdc>
   22bcc:	stp	x19, x20, [sp, #16]
   22bd0:	stp	x21, x22, [sp, #32]
   22bd4:	mov	x20, x0
   22bd8:	mov	x23, x1
   22bdc:	mov	x19, x2
   22be0:	mov	x21, x3
   22be4:	mov	w0, w4
   22be8:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   22bec:	mov	x22, x0
   22bf0:	cbz	x0, 22dc0 <omp_target_associate_ptr@@OMP_4.5+0x208>
   22bf4:	ldr	w0, [x0, #8]
   22bf8:	mov	w1, #0x5                   	// #5
   22bfc:	and	w0, w0, w1
   22c00:	mov	w24, #0x16                  	// #22
   22c04:	cmp	w0, #0x4
   22c08:	b.ne	22dd0 <omp_target_associate_ptr@@OMP_4.5+0x218>  // b.any
   22c0c:	str	x25, [sp, #64]
   22c10:	add	x25, x22, #0xa8
   22c14:	mov	w0, #0x1                   	// #1
   22c18:	ldaxr	w1, [x25]
   22c1c:	cbnz	w1, 22c28 <omp_target_associate_ptr@@OMP_4.5+0x70>
   22c20:	stxr	w2, w0, [x25]
   22c24:	cbnz	w2, 22c18 <omp_target_associate_ptr@@OMP_4.5+0x60>
   22c28:	cmp	w1, #0x0
   22c2c:	b.ne	22ca4 <omp_target_associate_ptr@@OMP_4.5+0xec>  // b.any
   22c30:	add	x24, x22, #0xa0
   22c34:	str	x20, [sp, #88]
   22c38:	add	x19, x20, x19
   22c3c:	str	x19, [sp, #96]
   22c40:	cmp	x20, x19
   22c44:	b.eq	22cb0 <omp_target_associate_ptr@@OMP_4.5+0xf8>  // b.none
   22c48:	add	x1, sp, #0x58
   22c4c:	mov	x0, x24
   22c50:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22c54:	cbz	x0, 22d30 <omp_target_associate_ptr@@OMP_4.5+0x178>
   22c58:	ldr	x1, [x0, #16]
   22c5c:	ldr	x2, [x1, #16]
   22c60:	ldr	x1, [x0, #24]
   22c64:	add	x2, x2, x1
   22c68:	add	x21, x23, x21
   22c6c:	mov	w24, #0x16                  	// #22
   22c70:	cmp	x2, x21
   22c74:	b.eq	22d0c <omp_target_associate_ptr@@OMP_4.5+0x154>  // b.none
   22c78:	ldxr	w0, [x25]
   22c7c:	stlxr	w1, wzr, [x25]
   22c80:	cbnz	w1, 22c78 <omp_target_associate_ptr@@OMP_4.5+0xc0>
   22c84:	tbnz	w0, #31, 22da8 <omp_target_associate_ptr@@OMP_4.5+0x1f0>
   22c88:	ldp	x19, x20, [sp, #16]
   22c8c:	ldp	x21, x22, [sp, #32]
   22c90:	ldr	x25, [sp, #64]
   22c94:	mov	w0, w24
   22c98:	ldp	x23, x24, [sp, #48]
   22c9c:	ldp	x29, x30, [sp], #144
   22ca0:	ret
   22ca4:	mov	x0, x25
   22ca8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22cac:	b	22c30 <omp_target_associate_ptr@@OMP_4.5+0x78>
   22cb0:	add	x19, x19, #0x1
   22cb4:	str	x19, [sp, #96]
   22cb8:	add	x1, sp, #0x58
   22cbc:	mov	x0, x24
   22cc0:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22cc4:	ldr	x1, [sp, #96]
   22cc8:	sub	x1, x1, #0x1
   22ccc:	str	x1, [sp, #96]
   22cd0:	cbnz	x0, 22c58 <omp_target_associate_ptr@@OMP_4.5+0xa0>
   22cd4:	ldr	x0, [sp, #88]
   22cd8:	sub	x0, x0, #0x1
   22cdc:	str	x0, [sp, #88]
   22ce0:	add	x1, sp, #0x58
   22ce4:	mov	x0, x24
   22ce8:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22cec:	ldr	x1, [sp, #88]
   22cf0:	add	x1, x1, #0x1
   22cf4:	str	x1, [sp, #88]
   22cf8:	cbnz	x0, 22c58 <omp_target_associate_ptr@@OMP_4.5+0xa0>
   22cfc:	add	x1, sp, #0x58
   22d00:	mov	x0, x24
   22d04:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22d08:	b	22c54 <omp_target_associate_ptr@@OMP_4.5+0x9c>
   22d0c:	ldr	x2, [x0]
   22d10:	ldr	x1, [sp, #88]
   22d14:	cmp	x2, x1
   22d18:	b.hi	22c78 <omp_target_associate_ptr@@OMP_4.5+0xc0>  // b.pmore
   22d1c:	ldr	x1, [x0, #8]
   22d20:	ldr	x0, [sp, #96]
   22d24:	cmp	x1, x0
   22d28:	csel	w24, w24, wzr, cc  // cc = lo, ul, last
   22d2c:	b	22c78 <omp_target_associate_ptr@@OMP_4.5+0xc0>
   22d30:	mov	x0, #0x40                  	// #64
   22d34:	bl	8c28 <fprintf@plt+0x118>
   22d38:	mov	x19, x0
   22d3c:	mov	x0, #0x48                  	// #72
   22d40:	bl	8c28 <fprintf@plt+0x118>
   22d44:	mov	x1, x0
   22d48:	str	x0, [x19, #8]
   22d4c:	mov	x0, #0x1                   	// #1
   22d50:	str	x0, [x19]
   22d54:	str	xzr, [x19, #16]
   22d58:	str	xzr, [x19, #24]
   22d5c:	str	xzr, [x19, #32]
   22d60:	str	xzr, [x19, #40]
   22d64:	str	xzr, [x19, #48]
   22d68:	str	x22, [x19, #56]
   22d6c:	ldr	x0, [sp, #88]
   22d70:	str	x0, [x1]
   22d74:	ldr	x0, [sp, #96]
   22d78:	str	x0, [x1, #8]
   22d7c:	str	x19, [x1, #16]
   22d80:	add	x21, x23, x21
   22d84:	str	x21, [x1, #24]
   22d88:	mov	x0, #0xffffffffffffffff    	// #-1
   22d8c:	str	x0, [x1, #32]
   22d90:	str	xzr, [x1, #56]
   22d94:	str	xzr, [x1, #64]
   22d98:	mov	x0, x24
   22d9c:	bl	231b8 <omp_pause_resource_all@@OMP_5.0+0x204>
   22da0:	mov	w24, #0x0                   	// #0
   22da4:	b	22c78 <omp_target_associate_ptr@@OMP_4.5+0xc0>
   22da8:	mov	x0, x25
   22dac:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22db0:	ldp	x19, x20, [sp, #16]
   22db4:	ldp	x21, x22, [sp, #32]
   22db8:	ldr	x25, [sp, #64]
   22dbc:	b	22c94 <omp_target_associate_ptr@@OMP_4.5+0xdc>
   22dc0:	mov	w24, #0x16                  	// #22
   22dc4:	ldp	x19, x20, [sp, #16]
   22dc8:	ldp	x21, x22, [sp, #32]
   22dcc:	b	22c94 <omp_target_associate_ptr@@OMP_4.5+0xdc>
   22dd0:	ldp	x19, x20, [sp, #16]
   22dd4:	ldp	x21, x22, [sp, #32]
   22dd8:	b	22c94 <omp_target_associate_ptr@@OMP_4.5+0xdc>

0000000000022ddc <omp_target_disassociate_ptr@@OMP_4.5>:
   22ddc:	stp	x29, x30, [sp, #-112]!
   22de0:	mov	x29, sp
   22de4:	stp	x21, x22, [sp, #32]
   22de8:	mov	w21, #0x16                  	// #22
   22dec:	tbnz	w1, #31, 22e8c <omp_target_disassociate_ptr@@OMP_4.5+0xb0>
   22df0:	stp	x19, x20, [sp, #16]
   22df4:	mov	x20, x0
   22df8:	mov	w0, w1
   22dfc:	bl	21198 <GOMP_offload_unregister@@GOMP_4.0.1+0xe0>
   22e00:	mov	x19, x0
   22e04:	cbz	x0, 22f50 <omp_target_disassociate_ptr@@OMP_4.5+0x174>
   22e08:	ldr	w0, [x0, #8]
   22e0c:	mov	w21, #0x16                  	// #22
   22e10:	tbz	w0, #2, 22f5c <omp_target_disassociate_ptr@@OMP_4.5+0x180>
   22e14:	add	x22, x19, #0xa8
   22e18:	mov	w0, #0x1                   	// #1
   22e1c:	ldaxr	w1, [x22]
   22e20:	cbnz	w1, 22e2c <omp_target_disassociate_ptr@@OMP_4.5+0x50>
   22e24:	stxr	w2, w0, [x22]
   22e28:	cbnz	w2, 22e1c <omp_target_disassociate_ptr@@OMP_4.5+0x40>
   22e2c:	cmp	w1, #0x0
   22e30:	b.ne	22e9c <omp_target_disassociate_ptr@@OMP_4.5+0xc0>  // b.any
   22e34:	add	x19, x19, #0xa0
   22e38:	str	x20, [sp, #56]
   22e3c:	add	x0, x20, #0x1
   22e40:	str	x0, [sp, #64]
   22e44:	add	x1, sp, #0x38
   22e48:	mov	x0, x19
   22e4c:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22e50:	mov	x20, x0
   22e54:	ldr	x0, [sp, #64]
   22e58:	sub	x0, x0, #0x1
   22e5c:	str	x0, [sp, #64]
   22e60:	cbz	x20, 22ea8 <omp_target_disassociate_ptr@@OMP_4.5+0xcc>
   22e64:	ldr	x1, [x20]
   22e68:	mov	w21, #0x16                  	// #22
   22e6c:	ldr	x0, [sp, #56]
   22e70:	cmp	x1, x0
   22e74:	b.eq	22ef0 <omp_target_disassociate_ptr@@OMP_4.5+0x114>  // b.none
   22e78:	ldxr	w0, [x22]
   22e7c:	stlxr	w1, wzr, [x22]
   22e80:	cbnz	w1, 22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22e84:	tbnz	w0, #31, 22f40 <omp_target_disassociate_ptr@@OMP_4.5+0x164>
   22e88:	ldp	x19, x20, [sp, #16]
   22e8c:	mov	w0, w21
   22e90:	ldp	x21, x22, [sp, #32]
   22e94:	ldp	x29, x30, [sp], #112
   22e98:	ret
   22e9c:	mov	x0, x22
   22ea0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   22ea4:	b	22e34 <omp_target_disassociate_ptr@@OMP_4.5+0x58>
   22ea8:	ldr	x0, [sp, #56]
   22eac:	sub	x0, x0, #0x1
   22eb0:	str	x0, [sp, #56]
   22eb4:	add	x1, sp, #0x38
   22eb8:	mov	x0, x19
   22ebc:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22ec0:	mov	x20, x0
   22ec4:	ldr	x0, [sp, #56]
   22ec8:	add	x0, x0, #0x1
   22ecc:	str	x0, [sp, #56]
   22ed0:	cbnz	x20, 22e64 <omp_target_disassociate_ptr@@OMP_4.5+0x88>
   22ed4:	add	x1, sp, #0x38
   22ed8:	mov	x0, x19
   22edc:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   22ee0:	mov	x20, x0
   22ee4:	mov	w21, #0x16                  	// #22
   22ee8:	cbz	x0, 22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22eec:	b	22e64 <omp_target_disassociate_ptr@@OMP_4.5+0x88>
   22ef0:	ldr	x0, [x20, #32]
   22ef4:	cmn	x0, #0x1
   22ef8:	b.ne	22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>  // b.any
   22efc:	ldr	x0, [x20, #16]
   22f00:	ldr	x1, [x0, #16]
   22f04:	cbnz	x1, 22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22f08:	ldr	x1, [x0, #32]
   22f0c:	cbnz	x1, 22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22f10:	ldr	x1, [x0]
   22f14:	cmp	x1, #0x1
   22f18:	b.ne	22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>  // b.any
   22f1c:	ldr	x0, [x0, #48]
   22f20:	cbnz	x0, 22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22f24:	mov	x1, x20
   22f28:	mov	x0, x19
   22f2c:	bl	2325c <omp_pause_resource_all@@OMP_5.0+0x2a8>
   22f30:	ldr	x0, [x20, #16]
   22f34:	bl	1e08c <omp_get_place_proc_ids@@OMP_4.5+0x764>
   22f38:	mov	w21, #0x0                   	// #0
   22f3c:	b	22e78 <omp_target_disassociate_ptr@@OMP_4.5+0x9c>
   22f40:	mov	x0, x22
   22f44:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   22f48:	ldp	x19, x20, [sp, #16]
   22f4c:	b	22e8c <omp_target_disassociate_ptr@@OMP_4.5+0xb0>
   22f50:	mov	w21, #0x16                  	// #22
   22f54:	ldp	x19, x20, [sp, #16]
   22f58:	b	22e8c <omp_target_disassociate_ptr@@OMP_4.5+0xb0>
   22f5c:	ldp	x19, x20, [sp, #16]
   22f60:	b	22e8c <omp_target_disassociate_ptr@@OMP_4.5+0xb0>

0000000000022f64 <omp_pause_resource@@OMP_5.0>:
   22f64:	stp	x29, x30, [sp, #-32]!
   22f68:	mov	x29, sp
   22f6c:	cmn	w1, #0x2
   22f70:	b.eq	22fa0 <omp_pause_resource@@OMP_5.0+0x3c>  // b.none
   22f74:	str	x19, [sp, #16]
   22f78:	mov	w19, w1
   22f7c:	tbnz	w1, #31, 22fa8 <omp_pause_resource@@OMP_5.0+0x44>
   22f80:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   22f84:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   22f88:	ldr	w0, [x0, #1388]
   22f8c:	cmp	w19, w0
   22f90:	csetm	w0, ge  // ge = tcont
   22f94:	ldr	x19, [sp, #16]
   22f98:	ldp	x29, x30, [sp], #32
   22f9c:	ret
   22fa0:	bl	1a3bc <omp_in_final@@OMP_3.1+0x17dc>
   22fa4:	b	22f98 <omp_pause_resource@@OMP_5.0+0x34>
   22fa8:	mov	w0, #0xffffffff            	// #-1
   22fac:	ldr	x19, [sp, #16]
   22fb0:	b	22f98 <omp_pause_resource@@OMP_5.0+0x34>

0000000000022fb4 <omp_pause_resource_all@@OMP_5.0>:
   22fb4:	stp	x29, x30, [sp, #-16]!
   22fb8:	mov	x29, sp
   22fbc:	bl	1a3bc <omp_in_final@@OMP_3.1+0x17dc>
   22fc0:	cmp	w0, #0x0
   22fc4:	csetm	w0, ne  // ne = any
   22fc8:	ldp	x29, x30, [sp], #16
   22fcc:	ret
   22fd0:	ldr	x2, [x0]
   22fd4:	cbz	x2, 2300c <omp_pause_resource_all@@OMP_5.0+0x58>
   22fd8:	mov	w9, #0xffffffff            	// #-1
   22fdc:	mov	w7, #0x1                   	// #1
   22fe0:	ldr	x2, [x0]
   22fe4:	ldr	x5, [x1]
   22fe8:	ldr	x3, [x1, #8]
   22fec:	cmp	x3, x5
   22ff0:	b.eq	23010 <omp_pause_resource_all@@OMP_5.0+0x5c>  // b.none
   22ff4:	ldr	x4, [x2]
   22ff8:	cmp	x3, x4
   22ffc:	b.ls	2310c <omp_pause_resource_all@@OMP_5.0+0x158>  // b.plast
   23000:	ldr	x4, [x2, #8]
   23004:	cmp	x5, x4
   23008:	b.cs	23118 <omp_pause_resource_all@@OMP_5.0+0x164>  // b.hs, b.nlast
   2300c:	ret
   23010:	ldr	x6, [x2]
   23014:	ldr	x4, [x2, #8]
   23018:	cmp	x6, x4
   2301c:	b.ne	22ff4 <omp_pause_resource_all@@OMP_5.0+0x40>  // b.any
   23020:	b	2300c <omp_pause_resource_all@@OMP_5.0+0x58>
   23024:	ldr	x10, [x4]
   23028:	ldr	x8, [x4, #8]
   2302c:	cmp	x10, x8
   23030:	b.ne	2312c <omp_pause_resource_all@@OMP_5.0+0x178>  // b.any
   23034:	b	23144 <omp_pause_resource_all@@OMP_5.0+0x190>
   23038:	ldr	x1, [x4, #64]
   2303c:	str	x2, [x4, #64]
   23040:	str	x1, [x2, #56]
   23044:	str	x4, [x0]
   23048:	b	2300c <omp_pause_resource_all@@OMP_5.0+0x58>
   2304c:	ldr	x5, [x3, #56]
   23050:	str	x4, [x3, #56]
   23054:	str	x5, [x4, #64]
   23058:	str	x3, [x2, #64]
   2305c:	ldr	x4, [x3, #56]
   23060:	str	x2, [x3, #56]
   23064:	str	x4, [x2, #64]
   23068:	str	x3, [x0]
   2306c:	b	22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   23070:	cmp	w6, #0x0
   23074:	b.le	22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   23078:	ldr	x3, [x4, #56]
   2307c:	ldr	x5, [x3, #64]
   23080:	str	x4, [x3, #64]
   23084:	str	x5, [x4, #56]
   23088:	str	x3, [x2, #64]
   2308c:	ldr	x4, [x3, #56]
   23090:	str	x2, [x3, #56]
   23094:	str	x4, [x2, #64]
   23098:	str	x3, [x0]
   2309c:	b	22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   230a0:	ldr	x3, [x4, #56]
   230a4:	cbz	x3, 23144 <omp_pause_resource_all@@OMP_5.0+0x190>
   230a8:	tbz	w6, #31, 23070 <omp_pause_resource_all@@OMP_5.0+0xbc>
   230ac:	ldr	x5, [x3, #64]
   230b0:	str	x4, [x3, #64]
   230b4:	str	x5, [x4, #56]
   230b8:	str	x3, [x2, #56]
   230bc:	ldr	x4, [x3, #64]
   230c0:	str	x2, [x3, #64]
   230c4:	str	x4, [x2, #56]
   230c8:	str	x3, [x0]
   230cc:	b	22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   230d0:	ldr	x3, [x4, #64]
   230d4:	cbz	x3, 23144 <omp_pause_resource_all@@OMP_5.0+0x190>
   230d8:	cmp	w6, #0x0
   230dc:	b.gt	2304c <omp_pause_resource_all@@OMP_5.0+0x98>
   230e0:	tbz	w6, #31, 22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   230e4:	ldr	x3, [x4, #64]
   230e8:	ldr	x5, [x3, #56]
   230ec:	str	x4, [x3, #56]
   230f0:	str	x5, [x4, #64]
   230f4:	str	x3, [x2, #56]
   230f8:	ldr	x4, [x3, #64]
   230fc:	str	x2, [x3, #64]
   23100:	str	x4, [x2, #56]
   23104:	str	x3, [x0]
   23108:	b	22fe0 <omp_pause_resource_all@@OMP_5.0+0x2c>
   2310c:	ldr	x4, [x2, #56]
   23110:	mov	w6, w9
   23114:	b	23120 <omp_pause_resource_all@@OMP_5.0+0x16c>
   23118:	ldr	x4, [x2, #64]
   2311c:	mov	w6, w7
   23120:	cbz	x4, 2300c <omp_pause_resource_all@@OMP_5.0+0x58>
   23124:	cmp	x3, x5
   23128:	b.eq	23024 <omp_pause_resource_all@@OMP_5.0+0x70>  // b.none
   2312c:	ldr	x8, [x4]
   23130:	cmp	x3, x8
   23134:	b.ls	230a0 <omp_pause_resource_all@@OMP_5.0+0xec>  // b.plast
   23138:	ldr	x3, [x4, #8]
   2313c:	cmp	x5, x3
   23140:	b.cs	230d0 <omp_pause_resource_all@@OMP_5.0+0x11c>  // b.hs, b.nlast
   23144:	tbnz	w6, #31, 23038 <omp_pause_resource_all@@OMP_5.0+0x84>
   23148:	ldr	x1, [x4, #56]
   2314c:	str	x2, [x4, #56]
   23150:	str	x1, [x2, #64]
   23154:	str	x4, [x0]
   23158:	b	2300c <omp_pause_resource_all@@OMP_5.0+0x58>
   2315c:	cbz	x0, 231b4 <omp_pause_resource_all@@OMP_5.0+0x200>
   23160:	stp	x29, x30, [sp, #-48]!
   23164:	mov	x29, sp
   23168:	stp	x19, x20, [sp, #16]
   2316c:	str	x21, [sp, #32]
   23170:	mov	x19, x0
   23174:	mov	x20, x1
   23178:	mov	x21, x2
   2317c:	mov	x1, x2
   23180:	blr	x20
   23184:	mov	x2, x21
   23188:	mov	x1, x20
   2318c:	ldr	x0, [x19, #56]
   23190:	bl	2315c <omp_pause_resource_all@@OMP_5.0+0x1a8>
   23194:	mov	x2, x21
   23198:	mov	x1, x20
   2319c:	ldr	x0, [x19, #64]
   231a0:	bl	2315c <omp_pause_resource_all@@OMP_5.0+0x1a8>
   231a4:	ldp	x19, x20, [sp, #16]
   231a8:	ldr	x21, [sp, #32]
   231ac:	ldp	x29, x30, [sp], #48
   231b0:	ret
   231b4:	ret
   231b8:	stp	x29, x30, [sp, #-32]!
   231bc:	mov	x29, sp
   231c0:	stp	x19, x20, [sp, #16]
   231c4:	mov	x20, x0
   231c8:	mov	x19, x1
   231cc:	bl	22fd0 <omp_pause_resource_all@@OMP_5.0+0x1c>
   231d0:	ldr	x1, [x20]
   231d4:	cbz	x1, 2323c <omp_pause_resource_all@@OMP_5.0+0x288>
   231d8:	ldr	x0, [x1]
   231dc:	ldr	x2, [x1, #8]
   231e0:	cmp	x0, x2
   231e4:	b.eq	23220 <omp_pause_resource_all@@OMP_5.0+0x26c>  // b.none
   231e8:	ldr	x3, [x19]
   231ec:	cmp	x2, x3
   231f0:	b.ls	23248 <omp_pause_resource_all@@OMP_5.0+0x294>  // b.plast
   231f4:	ldr	x2, [x19, #8]
   231f8:	cmp	x0, x2
   231fc:	b.cc	23230 <omp_pause_resource_all@@OMP_5.0+0x27c>  // b.lo, b.ul, b.last
   23200:	str	x1, [x19, #64]
   23204:	ldr	x0, [x1, #56]
   23208:	str	x0, [x19, #56]
   2320c:	str	xzr, [x1, #56]
   23210:	str	x19, [x20]
   23214:	ldp	x19, x20, [sp, #16]
   23218:	ldp	x29, x30, [sp], #32
   2321c:	ret
   23220:	ldr	x4, [x19]
   23224:	ldr	x3, [x19, #8]
   23228:	cmp	x4, x3
   2322c:	b.ne	231e8 <omp_pause_resource_all@@OMP_5.0+0x234>  // b.any
   23230:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23234:	add	x0, x0, #0x8e0
   23238:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2323c:	str	xzr, [x19, #64]
   23240:	str	xzr, [x19, #56]
   23244:	b	23210 <omp_pause_resource_all@@OMP_5.0+0x25c>
   23248:	str	x1, [x19, #56]
   2324c:	ldr	x0, [x1, #64]
   23250:	str	x0, [x19, #64]
   23254:	str	xzr, [x1, #64]
   23258:	b	23210 <omp_pause_resource_all@@OMP_5.0+0x25c>
   2325c:	stp	x29, x30, [sp, #-32]!
   23260:	mov	x29, sp
   23264:	stp	x19, x20, [sp, #16]
   23268:	mov	x20, x0
   2326c:	mov	x19, x1
   23270:	bl	22fd0 <omp_pause_resource_all@@OMP_5.0+0x1c>
   23274:	ldr	x0, [x20]
   23278:	cbz	x0, 232c8 <omp_pause_resource_all@@OMP_5.0+0x314>
   2327c:	ldr	x2, [x0]
   23280:	ldr	x1, [x0, #8]
   23284:	cmp	x2, x1
   23288:	b.eq	232d4 <omp_pause_resource_all@@OMP_5.0+0x320>  // b.none
   2328c:	ldr	x3, [x19]
   23290:	cmp	x1, x3
   23294:	b.ls	232c8 <omp_pause_resource_all@@OMP_5.0+0x314>  // b.plast
   23298:	ldr	x1, [x19, #8]
   2329c:	cmp	x2, x1
   232a0:	b.cs	232c8 <omp_pause_resource_all@@OMP_5.0+0x314>  // b.hs, b.nlast
   232a4:	ldr	x1, [x0, #56]
   232a8:	ldr	x2, [x0, #64]
   232ac:	cbz	x1, 232e8 <omp_pause_resource_all@@OMP_5.0+0x334>
   232b0:	str	x1, [x20]
   232b4:	cbz	x2, 232c8 <omp_pause_resource_all@@OMP_5.0+0x314>
   232b8:	mov	x0, x1
   232bc:	ldr	x1, [x1, #64]
   232c0:	cbnz	x1, 232b8 <omp_pause_resource_all@@OMP_5.0+0x304>
   232c4:	str	x2, [x0, #64]
   232c8:	ldp	x19, x20, [sp, #16]
   232cc:	ldp	x29, x30, [sp], #32
   232d0:	ret
   232d4:	ldr	x4, [x19]
   232d8:	ldr	x3, [x19, #8]
   232dc:	cmp	x4, x3
   232e0:	b.ne	2328c <omp_pause_resource_all@@OMP_5.0+0x2d8>  // b.any
   232e4:	b	232a4 <omp_pause_resource_all@@OMP_5.0+0x2f0>
   232e8:	str	x2, [x20]
   232ec:	b	232c8 <omp_pause_resource_all@@OMP_5.0+0x314>
   232f0:	stp	x29, x30, [sp, #-32]!
   232f4:	mov	x29, sp
   232f8:	stp	x19, x20, [sp, #16]
   232fc:	mov	x20, x0
   23300:	mov	x19, x1
   23304:	bl	22fd0 <omp_pause_resource_all@@OMP_5.0+0x1c>
   23308:	ldr	x0, [x20]
   2330c:	cbz	x0, 23338 <omp_pause_resource_all@@OMP_5.0+0x384>
   23310:	ldr	x2, [x0]
   23314:	ldr	x1, [x0, #8]
   23318:	cmp	x2, x1
   2331c:	b.eq	23344 <omp_pause_resource_all@@OMP_5.0+0x390>  // b.none
   23320:	ldr	x3, [x19]
   23324:	cmp	x1, x3
   23328:	b.ls	23358 <omp_pause_resource_all@@OMP_5.0+0x3a4>  // b.plast
   2332c:	ldr	x1, [x19, #8]
   23330:	cmp	x2, x1
   23334:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
   23338:	ldp	x19, x20, [sp, #16]
   2333c:	ldp	x29, x30, [sp], #32
   23340:	ret
   23344:	ldr	x4, [x19]
   23348:	ldr	x3, [x19, #8]
   2334c:	cmp	x4, x3
   23350:	b.ne	23320 <omp_pause_resource_all@@OMP_5.0+0x36c>  // b.any
   23354:	b	23338 <omp_pause_resource_all@@OMP_5.0+0x384>
   23358:	mov	x0, #0x0                   	// #0
   2335c:	b	23338 <omp_pause_resource_all@@OMP_5.0+0x384>
   23360:	stp	x29, x30, [sp, #-16]!
   23364:	mov	x29, sp
   23368:	ldr	x0, [x0]
   2336c:	bl	2315c <omp_pause_resource_all@@OMP_5.0+0x1a8>
   23370:	ldp	x29, x30, [sp], #16
   23374:	ret

0000000000023378 <GOMP_PLUGIN_malloc@@GOMP_PLUGIN_1.0>:
   23378:	stp	x29, x30, [sp, #-16]!
   2337c:	mov	x29, sp
   23380:	bl	8c28 <fprintf@plt+0x118>
   23384:	ldp	x29, x30, [sp], #16
   23388:	ret

000000000002338c <GOMP_PLUGIN_malloc_cleared@@GOMP_PLUGIN_1.0>:
   2338c:	stp	x29, x30, [sp, #-16]!
   23390:	mov	x29, sp
   23394:	bl	8c5c <fprintf@plt+0x14c>
   23398:	ldp	x29, x30, [sp], #16
   2339c:	ret

00000000000233a0 <GOMP_PLUGIN_realloc@@GOMP_PLUGIN_1.0>:
   233a0:	stp	x29, x30, [sp, #-16]!
   233a4:	mov	x29, sp
   233a8:	bl	8c98 <fprintf@plt+0x188>
   233ac:	ldp	x29, x30, [sp], #16
   233b0:	ret

00000000000233b4 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0>:
   233b4:	stp	x29, x30, [sp, #-256]!
   233b8:	mov	x29, sp
   233bc:	str	x2, [sp, #208]
   233c0:	str	x3, [sp, #216]
   233c4:	str	x4, [sp, #224]
   233c8:	str	x5, [sp, #232]
   233cc:	str	x6, [sp, #240]
   233d0:	str	x7, [sp, #248]
   233d4:	str	q0, [sp, #80]
   233d8:	str	q1, [sp, #96]
   233dc:	str	q2, [sp, #112]
   233e0:	str	q3, [sp, #128]
   233e4:	str	q4, [sp, #144]
   233e8:	str	q5, [sp, #160]
   233ec:	str	q6, [sp, #176]
   233f0:	str	q7, [sp, #192]
   233f4:	add	x2, sp, #0x100
   233f8:	str	x2, [sp, #48]
   233fc:	str	x2, [sp, #56]
   23400:	add	x2, sp, #0xd0
   23404:	str	x2, [sp, #64]
   23408:	mov	w2, #0xffffffd0            	// #-48
   2340c:	str	w2, [sp, #72]
   23410:	mov	w2, #0xffffff80            	// #-128
   23414:	str	w2, [sp, #76]
   23418:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2341c:	ldr	w2, [x2, #1536]
   23420:	cbnz	w2, 2342c <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0x78>
   23424:	ldp	x29, x30, [sp], #256
   23428:	ret
   2342c:	ldp	x2, x3, [sp, #48]
   23430:	stp	x2, x3, [sp, #16]
   23434:	ldp	x2, x3, [sp, #64]
   23438:	stp	x2, x3, [sp, #32]
   2343c:	add	x2, sp, #0x10
   23440:	bl	b5bc <GOMP_critical_name_end@@GOMP_1.0+0x270c>
   23444:	b	23424 <GOMP_PLUGIN_debug@@GOMP_PLUGIN_1.0+0x70>

0000000000023448 <GOMP_PLUGIN_error@@GOMP_PLUGIN_1.0>:
   23448:	stp	x29, x30, [sp, #-272]!
   2344c:	mov	x29, sp
   23450:	str	x1, [sp, #216]
   23454:	str	x2, [sp, #224]
   23458:	str	x3, [sp, #232]
   2345c:	str	x4, [sp, #240]
   23460:	str	x5, [sp, #248]
   23464:	str	x6, [sp, #256]
   23468:	str	x7, [sp, #264]
   2346c:	str	q0, [sp, #80]
   23470:	str	q1, [sp, #96]
   23474:	str	q2, [sp, #112]
   23478:	str	q3, [sp, #128]
   2347c:	str	q4, [sp, #144]
   23480:	str	q5, [sp, #160]
   23484:	str	q6, [sp, #176]
   23488:	str	q7, [sp, #192]
   2348c:	add	x1, sp, #0x110
   23490:	str	x1, [sp, #48]
   23494:	str	x1, [sp, #56]
   23498:	add	x1, sp, #0xd0
   2349c:	str	x1, [sp, #64]
   234a0:	mov	w1, #0xffffffc8            	// #-56
   234a4:	str	w1, [sp, #72]
   234a8:	mov	w1, #0xffffff80            	// #-128
   234ac:	str	w1, [sp, #76]
   234b0:	ldp	x2, x3, [sp, #48]
   234b4:	stp	x2, x3, [sp, #16]
   234b8:	ldp	x2, x3, [sp, #64]
   234bc:	stp	x2, x3, [sp, #32]
   234c0:	add	x1, sp, #0x10
   234c4:	bl	b684 <GOMP_critical_name_end@@GOMP_1.0+0x27d4>
   234c8:	ldp	x29, x30, [sp], #272
   234cc:	ret

00000000000234d0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0>:
   234d0:	stp	x29, x30, [sp, #-272]!
   234d4:	mov	x29, sp
   234d8:	str	x1, [sp, #216]
   234dc:	str	x2, [sp, #224]
   234e0:	str	x3, [sp, #232]
   234e4:	str	x4, [sp, #240]
   234e8:	str	x5, [sp, #248]
   234ec:	str	x6, [sp, #256]
   234f0:	str	x7, [sp, #264]
   234f4:	str	q0, [sp, #80]
   234f8:	str	q1, [sp, #96]
   234fc:	str	q2, [sp, #112]
   23500:	str	q3, [sp, #128]
   23504:	str	q4, [sp, #144]
   23508:	str	q5, [sp, #160]
   2350c:	str	q6, [sp, #176]
   23510:	str	q7, [sp, #192]
   23514:	add	x1, sp, #0x110
   23518:	str	x1, [sp, #48]
   2351c:	str	x1, [sp, #56]
   23520:	add	x1, sp, #0xd0
   23524:	str	x1, [sp, #64]
   23528:	mov	w1, #0xffffffc8            	// #-56
   2352c:	str	w1, [sp, #72]
   23530:	mov	w1, #0xffffff80            	// #-128
   23534:	str	w1, [sp, #76]
   23538:	ldp	x2, x3, [sp, #48]
   2353c:	stp	x2, x3, [sp, #16]
   23540:	ldp	x2, x3, [sp, #64]
   23544:	stp	x2, x3, [sp, #32]
   23548:	add	x1, sp, #0x10
   2354c:	bl	b780 <GOMP_critical_name_end@@GOMP_1.0+0x28d0>
   23550:	stp	x29, x30, [sp, #-48]!
   23554:	mov	x29, sp
   23558:	stp	x19, x20, [sp, #16]
   2355c:	stp	x21, x22, [sp, #32]
   23560:	mov	w22, w0
   23564:	mov	w21, w1
   23568:	mov	x20, x2
   2356c:	cbnz	w1, 235e8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x118>
   23570:	b	235b0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xe0>
   23574:	add	w0, w2, #0x8
   23578:	str	w0, [x20, #24]
   2357c:	cmp	w0, #0x0
   23580:	b.le	23594 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xc4>
   23584:	add	x0, x1, #0xb
   23588:	and	x0, x0, #0xfffffffffffffff8
   2358c:	str	x0, [x20]
   23590:	b	23600 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x130>
   23594:	ldr	x1, [x20, #8]
   23598:	add	x1, x1, w2, sxtw
   2359c:	b	23600 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x130>
   235a0:	cmn	w22, #0x2
   235a4:	b.eq	235c0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xf0>  // b.none
   235a8:	mov	w0, w22
   235ac:	bl	88d0 <acc_wait_all_async@plt>
   235b0:	ldp	x19, x20, [sp, #16]
   235b4:	ldp	x21, x22, [sp, #32]
   235b8:	ldp	x29, x30, [sp], #48
   235bc:	ret
   235c0:	bl	8620 <acc_wait_all@plt>
   235c4:	b	235b0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xe0>
   235c8:	mov	w0, w19
   235cc:	bl	8990 <acc_wait@plt>
   235d0:	b	235e0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x110>
   235d4:	mov	w1, w22
   235d8:	mov	w0, w19
   235dc:	bl	8720 <acc_wait_async@plt>
   235e0:	subs	w21, w21, #0x1
   235e4:	b.eq	235b0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xe0>  // b.none
   235e8:	ldr	w2, [x20, #24]
   235ec:	ldr	x1, [x20]
   235f0:	tbnz	w2, #31, 23574 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xa4>
   235f4:	add	x2, x1, #0xb
   235f8:	and	x2, x2, #0xfffffffffffffff8
   235fc:	str	x2, [x20]
   23600:	ldr	w19, [x1]
   23604:	cmn	w19, #0x1
   23608:	b.eq	235a0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xd0>  // b.none
   2360c:	mov	w0, w19
   23610:	bl	8770 <acc_async_test@plt>
   23614:	cbnz	w0, 235e0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x110>
   23618:	cmn	w22, #0x2
   2361c:	b.eq	235c8 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0xf8>  // b.none
   23620:	cmp	w19, w22
   23624:	b.eq	235e0 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x110>  // b.none
   23628:	b	235d4 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x104>

000000000002362c <GOACC_parallel_keyed@@GOACC_2.0.1>:
   2362c:	stp	x29, x30, [sp, #-368]!
   23630:	mov	x29, sp
   23634:	stp	x19, x20, [sp, #16]
   23638:	stp	x21, x22, [sp, #32]
   2363c:	stp	x23, x24, [sp, #48]
   23640:	stp	x25, x26, [sp, #64]
   23644:	stp	x27, x28, [sp, #80]
   23648:	str	x1, [x29, #104]
   2364c:	mov	x20, x2
   23650:	mov	x24, x3
   23654:	mov	x25, x4
   23658:	mov	x22, x5
   2365c:	str	x6, [x29, #352]
   23660:	str	x7, [x29, #360]
   23664:	str	q0, [x29, #224]
   23668:	str	q1, [x29, #240]
   2366c:	str	q2, [x29, #256]
   23670:	str	q3, [x29, #272]
   23674:	str	q4, [x29, #288]
   23678:	str	q5, [x29, #304]
   2367c:	str	q6, [x29, #320]
   23680:	str	q7, [x29, #336]
   23684:	mvn	w19, w0
   23688:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2368c:	ldr	w0, [x0, #1536]
   23690:	cbnz	w0, 236c4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x98>
   23694:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   23698:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2369c:	ldr	x0, [x0, #4048]
   236a0:	mrs	x1, tpidr_el0
   236a4:	ldr	x0, [x1, x0]
   236a8:	ldr	x28, [x0, #8]
   236ac:	cbz	x20, 236f0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xc4>
   236b0:	mov	x2, #0x1                   	// #1
   236b4:	mov	x1, #0x0                   	// #0
   236b8:	sub	w4, w20, #0x1
   236bc:	mov	x6, #0x8                   	// #8
   236c0:	b	23ad4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x4a8>
   236c4:	mov	x6, x5
   236c8:	mov	x5, x4
   236cc:	mov	x4, x3
   236d0:	mov	x3, x2
   236d4:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   236d8:	add	x2, x2, #0xad0
   236dc:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   236e0:	add	x1, x1, #0x8f0
   236e4:	mov	w0, #0x0                   	// #0
   236e8:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   236ec:	b	23694 <GOACC_parallel_keyed@@GOACC_2.0.1+0x68>
   236f0:	tbnz	w19, #0, 23744 <GOACC_parallel_keyed@@GOACC_2.0.1+0x118>
   236f4:	ldr	w0, [x28, #16]
   236f8:	cmp	w0, #0x2
   236fc:	b.eq	23760 <GOACC_parallel_keyed@@GOACC_2.0.1+0x134>  // b.none
   23700:	str	wzr, [x29, #120]
   23704:	str	wzr, [x29, #124]
   23708:	str	wzr, [x29, #128]
   2370c:	add	x0, x29, #0x170
   23710:	str	x0, [x29, #192]
   23714:	str	x0, [x29, #200]
   23718:	add	x0, x29, #0x160
   2371c:	str	x0, [x29, #208]
   23720:	mov	w0, #0xfffffff0            	// #-16
   23724:	str	w0, [x29, #216]
   23728:	mov	w0, #0xffffff80            	// #-128
   2372c:	str	w0, [x29, #220]
   23730:	mov	w21, #0xfffffffe            	// #-2
   23734:	mov	w27, #0xffff                	// #65535
   23738:	add	x26, x29, #0xc0
   2373c:	add	x23, x29, #0x78
   23740:	b	23850 <GOACC_parallel_keyed@@GOACC_2.0.1+0x224>
   23744:	mov	w0, #0x2                   	// #2
   23748:	bl	25810 <acc_on_device@@OACC_2.0+0x58>
   2374c:	mov	x0, x24
   23750:	ldr	x1, [x29, #104]
   23754:	blr	x1
   23758:	bl	25870 <acc_on_device@@OACC_2.0+0xb8>
   2375c:	b	23a0c <GOACC_parallel_keyed@@GOACC_2.0.1+0x3e0>
   23760:	mov	x0, x24
   23764:	ldr	x1, [x29, #104]
   23768:	blr	x1
   2376c:	b	23a0c <GOACC_parallel_keyed@@GOACC_2.0.1+0x3e0>
   23770:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23774:	add	x0, x0, #0x928
   23778:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2377c:	and	w19, w19, #0xffff
   23780:	ldr	x4, [x29, #200]
   23784:	mov	x0, #0x0                   	// #0
   23788:	b	237bc <GOACC_parallel_keyed@@GOACC_2.0.1+0x190>
   2378c:	add	w3, w2, #0x8
   23790:	str	w3, [x29, #216]
   23794:	cmp	w3, #0x0
   23798:	b.le	237e0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1b4>
   2379c:	add	x2, x1, #0xb
   237a0:	and	x2, x2, #0xfffffffffffffff8
   237a4:	str	x2, [x29, #192]
   237a8:	ldr	w1, [x1]
   237ac:	str	w1, [x23, x0, lsl #2]
   237b0:	add	x0, x0, #0x1
   237b4:	cmp	x0, #0x3
   237b8:	b.eq	23850 <GOACC_parallel_keyed@@GOACC_2.0.1+0x224>  // b.none
   237bc:	lsr	w1, w19, w0
   237c0:	tbz	w1, #0, 237b0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x184>
   237c4:	ldr	w2, [x29, #216]
   237c8:	ldr	x1, [x29, #192]
   237cc:	tbnz	w2, #31, 2378c <GOACC_parallel_keyed@@GOACC_2.0.1+0x160>
   237d0:	add	x2, x1, #0xb
   237d4:	and	x2, x2, #0xfffffffffffffff8
   237d8:	str	x2, [x29, #192]
   237dc:	b	237a8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x17c>
   237e0:	add	x1, x4, w2, sxtw
   237e4:	b	237a8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x17c>
   237e8:	and	w21, w19, #0xffff
   237ec:	cmp	w27, w19, uxth
   237f0:	b.ne	23850 <GOACC_parallel_keyed@@GOACC_2.0.1+0x224>  // b.any
   237f4:	ldr	w1, [x29, #216]
   237f8:	ldr	x0, [x29, #192]
   237fc:	tbnz	w1, #31, 23814 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e8>
   23800:	add	x1, x0, #0xb
   23804:	and	x1, x1, #0xfffffffffffffff8
   23808:	str	x1, [x29, #192]
   2380c:	ldr	w21, [x0]
   23810:	b	23850 <GOACC_parallel_keyed@@GOACC_2.0.1+0x224>
   23814:	add	w2, w1, #0x8
   23818:	str	w2, [x29, #216]
   2381c:	cmp	w2, #0x0
   23820:	b.le	23834 <GOACC_parallel_keyed@@GOACC_2.0.1+0x208>
   23824:	add	x1, x0, #0xb
   23828:	and	x1, x1, #0xfffffffffffffff8
   2382c:	str	x1, [x29, #192]
   23830:	b	2380c <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e0>
   23834:	ldr	x0, [x29, #200]
   23838:	add	x0, x0, w1, sxtw
   2383c:	b	2380c <GOACC_parallel_keyed@@GOACC_2.0.1+0x1e0>
   23840:	mov	x2, x26
   23844:	and	w1, w19, #0xffff
   23848:	mov	w0, w21
   2384c:	bl	23550 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x80>
   23850:	ldr	w1, [x29, #216]
   23854:	ldr	x0, [x29, #192]
   23858:	tbnz	w1, #31, 238a0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x274>
   2385c:	add	x1, x0, #0xb
   23860:	and	x1, x1, #0xfffffffffffffff8
   23864:	str	x1, [x29, #192]
   23868:	ldr	w19, [x0]
   2386c:	cbz	w19, 238cc <GOACC_parallel_keyed@@GOACC_2.0.1+0x2a0>
   23870:	ubfx	x1, x19, #16, #12
   23874:	cbnz	w1, 23770 <GOACC_parallel_keyed@@GOACC_2.0.1+0x144>
   23878:	lsr	w1, w19, #28
   2387c:	cmp	w1, #0x2
   23880:	b.eq	237e8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x1bc>  // b.none
   23884:	cmp	w1, #0x3
   23888:	b.eq	23840 <GOACC_parallel_keyed@@GOACC_2.0.1+0x214>  // b.none
   2388c:	cmp	w1, #0x1
   23890:	b.eq	2377c <GOACC_parallel_keyed@@GOACC_2.0.1+0x150>  // b.none
   23894:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23898:	add	x0, x0, #0x960
   2389c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   238a0:	add	w2, w1, #0x8
   238a4:	str	w2, [x29, #216]
   238a8:	cmp	w2, #0x0
   238ac:	b.le	238c0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x294>
   238b0:	add	x1, x0, #0xb
   238b4:	and	x1, x1, #0xfffffffffffffff8
   238b8:	str	x1, [x29, #192]
   238bc:	b	23868 <GOACC_parallel_keyed@@GOACC_2.0.1+0x23c>
   238c0:	ldr	x0, [x29, #200]
   238c4:	add	x0, x0, w1, sxtw
   238c8:	b	23868 <GOACC_parallel_keyed@@GOACC_2.0.1+0x23c>
   238cc:	ldr	x1, [x28, #248]
   238d0:	mov	w0, w21
   238d4:	blr	x1
   238d8:	ldr	w0, [x28, #8]
   238dc:	tbnz	w0, #1, 23a50 <GOACC_parallel_keyed@@GOACC_2.0.1+0x424>
   238e0:	ldr	x0, [x29, #104]
   238e4:	str	x0, [x29, #136]
   238e8:	add	x0, x0, #0x1
   238ec:	str	x0, [x29, #144]
   238f0:	add	x23, x28, #0xa8
   238f4:	mov	w0, #0x1                   	// #1
   238f8:	ldaxr	w1, [x23]
   238fc:	cbnz	w1, 23908 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2dc>
   23900:	stxr	w2, w0, [x23]
   23904:	cbnz	w2, 238f8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2cc>
   23908:	cmp	w1, #0x0
   2390c:	b.ne	23a2c <GOACC_parallel_keyed@@GOACC_2.0.1+0x400>  // b.any
   23910:	add	x1, x29, #0x88
   23914:	add	x0, x28, #0xa0
   23918:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   2391c:	mov	x26, x0
   23920:	ldxr	w0, [x23]
   23924:	stlxr	w1, wzr, [x23]
   23928:	cbnz	w1, 23920 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2f4>
   2392c:	tbnz	w0, #31, 23a38 <GOACC_parallel_keyed@@GOACC_2.0.1+0x40c>
   23930:	cbz	x26, 23a44 <GOACC_parallel_keyed@@GOACC_2.0.1+0x418>
   23934:	ldr	x23, [x26, #24]
   23938:	mov	w7, #0x0                   	// #0
   2393c:	mov	w6, #0x1                   	// #1
   23940:	mov	x5, x22
   23944:	mov	x4, x25
   23948:	mov	x3, #0x0                   	// #0
   2394c:	mov	x2, x24
   23950:	mov	x1, x20
   23954:	mov	x0, x28
   23958:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   2395c:	mov	x22, x0
   23960:	lsl	x0, x20, #3
   23964:	add	x0, x0, #0xf
   23968:	and	x0, x0, #0xfffffffffffffff0
   2396c:	sub	sp, sp, x0
   23970:	mov	x3, sp
   23974:	cbz	x20, 239b8 <GOACC_parallel_keyed@@GOACC_2.0.1+0x38c>
   23978:	mov	x4, #0x0                   	// #0
   2397c:	mov	w0, w19
   23980:	add	x1, x22, x0, lsl #5
   23984:	ldr	x2, [x1, #64]
   23988:	mov	x0, x1
   2398c:	ldr	x1, [x2, #24]
   23990:	ldr	x0, [x0, #80]
   23994:	add	x1, x1, x0
   23998:	ldr	x0, [x2, #16]
   2399c:	ldr	x0, [x0, #16]
   239a0:	add	x1, x1, x0
   239a4:	str	x1, [x3, x4, lsl #3]
   239a8:	add	w19, w19, #0x1
   239ac:	mov	w4, w19
   239b0:	cmp	x20, w19, uxtw
   239b4:	b.hi	2397c <GOACC_parallel_keyed@@GOACC_2.0.1+0x350>  // b.pmore
   239b8:	ldr	x7, [x28, #184]
   239bc:	mov	x6, x22
   239c0:	add	x5, x29, #0x78
   239c4:	mov	w4, w21
   239c8:	mov	x2, x24
   239cc:	mov	x1, x20
   239d0:	mov	x0, x23
   239d4:	blr	x7
   239d8:	add	w0, w21, #0x2
   239dc:	cmp	w21, #0x0
   239e0:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   239e4:	cset	w0, hi  // hi = pmore
   239e8:	cmn	w21, #0x2
   239ec:	csinc	w0, w0, wzr, ne  // ne = any
   239f0:	cbz	w0, 23a58 <GOACC_parallel_keyed@@GOACC_2.0.1+0x42c>
   239f4:	mov	w1, #0x1                   	// #1
   239f8:	mov	x0, x22
   239fc:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   23a00:	ldr	x1, [x28, #248]
   23a04:	mov	w0, #0xfffffffe            	// #-2
   23a08:	blr	x1
   23a0c:	mov	sp, x29
   23a10:	ldp	x19, x20, [sp, #16]
   23a14:	ldp	x21, x22, [sp, #32]
   23a18:	ldp	x23, x24, [sp, #48]
   23a1c:	ldp	x25, x26, [sp, #64]
   23a20:	ldp	x27, x28, [sp, #80]
   23a24:	ldp	x29, x30, [sp], #368
   23a28:	ret
   23a2c:	mov	x0, x23
   23a30:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   23a34:	b	23910 <GOACC_parallel_keyed@@GOACC_2.0.1+0x2e4>
   23a38:	mov	x0, x23
   23a3c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   23a40:	b	23930 <GOACC_parallel_keyed@@GOACC_2.0.1+0x304>
   23a44:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23a48:	add	x0, x0, #0x998
   23a4c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   23a50:	ldr	x23, [x29, #104]
   23a54:	b	23938 <GOACC_parallel_keyed@@GOACC_2.0.1+0x30c>
   23a58:	ldr	x2, [x22, #48]
   23a5c:	mov	x0, #0x0                   	// #0
   23a60:	add	x3, x22, #0x40
   23a64:	cbnz	x2, 23a84 <GOACC_parallel_keyed@@GOACC_2.0.1+0x458>
   23a68:	mov	w1, #0x0                   	// #0
   23a6c:	mov	x0, x22
   23a70:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   23a74:	b	23a00 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3d4>
   23a78:	add	x0, x0, #0x1
   23a7c:	cmp	x0, x2
   23a80:	b.eq	23a68 <GOACC_parallel_keyed@@GOACC_2.0.1+0x43c>  // b.none
   23a84:	lsl	x1, x0, #5
   23a88:	ldr	x1, [x3, x1]
   23a8c:	cbz	x1, 23a78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x44c>
   23a90:	ldr	x1, [x1, #32]
   23a94:	cmp	x1, #0x1
   23a98:	b.ne	23a78 <GOACC_parallel_keyed@@GOACC_2.0.1+0x44c>  // b.any
   23a9c:	ldr	x0, [x22, #56]
   23aa0:	ldr	x2, [x0, #192]
   23aa4:	mov	w1, w21
   23aa8:	mov	x0, x22
   23aac:	blr	x2
   23ab0:	b	23a00 <GOACC_parallel_keyed@@GOACC_2.0.1+0x3d4>
   23ab4:	ldr	x0, [x25, x1, lsl #3]
   23ab8:	cmp	x0, #0x8
   23abc:	b.eq	23ac4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x498>  // b.none
   23ac0:	str	xzr, [x24, x1, lsl #3]
   23ac4:	add	x1, x1, #0x1
   23ac8:	add	x2, x2, #0x1
   23acc:	cmp	x20, x1
   23ad0:	b.eq	236f0 <GOACC_parallel_keyed@@GOACC_2.0.1+0xc4>  // b.none
   23ad4:	ldrh	w3, [x22, x1, lsl #1]
   23ad8:	and	w0, w3, #0xff
   23adc:	cmp	w0, #0x8
   23ae0:	b.ne	23ac4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x498>  // b.any
   23ae4:	cmp	w4, w1
   23ae8:	b.le	23ab4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x488>
   23aec:	ldrh	w0, [x22, x2, lsl #1]
   23af0:	and	w0, w0, #0xff
   23af4:	ldr	x5, [x25, x1, lsl #3]
   23af8:	cmp	x5, #0x8
   23afc:	b.eq	23ac4 <GOACC_parallel_keyed@@GOACC_2.0.1+0x498>  // b.none
   23b00:	cmp	w0, #0x4
   23b04:	b.ne	23ac0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x494>  // b.any
   23b08:	ldr	x0, [x25, x2, lsl #3]
   23b0c:	cbnz	x0, 23ac0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x494>
   23b10:	ldr	x0, [x24, x2, lsl #3]
   23b14:	ldr	x5, [x24, x1, lsl #3]
   23b18:	ldr	x0, [x0]
   23b1c:	cmp	x5, x0
   23b20:	b.ne	23ac0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x494>  // b.any
   23b24:	strh	w3, [x22, x2, lsl #1]
   23b28:	str	x6, [x25, x2, lsl #3]
   23b2c:	b	23ac0 <GOACC_parallel_keyed@@GOACC_2.0.1+0x494>

0000000000023b30 <GOACC_parallel@@GOACC_2.0>:
   23b30:	stp	x29, x30, [sp, #-32]!
   23b34:	mov	x29, sp
   23b38:	stp	x19, x20, [sp, #16]
   23b3c:	mov	x19, x1
   23b40:	mov	x20, x3
   23b44:	mov	w0, #0x2                   	// #2
   23b48:	bl	25810 <acc_on_device@@OACC_2.0+0x58>
   23b4c:	mov	x0, x20
   23b50:	blr	x19
   23b54:	bl	25870 <acc_on_device@@OACC_2.0+0xb8>
   23b58:	ldp	x19, x20, [sp, #16]
   23b5c:	ldp	x29, x30, [sp], #32
   23b60:	ret

0000000000023b64 <GOACC_data_start@@GOACC_2.0>:
   23b64:	stp	x29, x30, [sp, #-80]!
   23b68:	mov	x29, sp
   23b6c:	stp	x19, x20, [sp, #16]
   23b70:	stp	x21, x22, [sp, #32]
   23b74:	stp	x23, x24, [sp, #48]
   23b78:	str	x25, [sp, #64]
   23b7c:	mov	x21, x1
   23b80:	mov	x22, x2
   23b84:	mov	x23, x3
   23b88:	mov	x24, x4
   23b8c:	mvn	w19, w0
   23b90:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   23b94:	ldr	w0, [x0, #1536]
   23b98:	cbnz	w0, 23c24 <GOACC_data_start@@GOACC_2.0+0xc0>
   23b9c:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   23ba0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   23ba4:	ldr	x0, [x0, #4048]
   23ba8:	mrs	x1, tpidr_el0
   23bac:	ldr	x20, [x1, x0]
   23bb0:	ldr	x25, [x20, #8]
   23bb4:	ldr	w0, [x25, #8]
   23bb8:	orr	w19, w19, w0
   23bbc:	tbnz	w19, #0, 23c54 <GOACC_data_start@@GOACC_2.0+0xf0>
   23bc0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   23bc4:	ldr	w0, [x0, #1536]
   23bc8:	cbnz	w0, 23c88 <GOACC_data_start@@GOACC_2.0+0x124>
   23bcc:	mov	w7, #0x0                   	// #0
   23bd0:	mov	w6, #0x1                   	// #1
   23bd4:	mov	x5, x24
   23bd8:	mov	x4, x23
   23bdc:	mov	x3, #0x0                   	// #0
   23be0:	mov	x2, x22
   23be4:	mov	x1, x21
   23be8:	mov	x0, x25
   23bec:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   23bf0:	mov	x19, x0
   23bf4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   23bf8:	ldr	w0, [x0, #1536]
   23bfc:	cbnz	w0, 23ca8 <GOACC_data_start@@GOACC_2.0+0x144>
   23c00:	ldr	x0, [x20, #24]
   23c04:	str	x0, [x19, #40]
   23c08:	str	x19, [x20, #24]
   23c0c:	ldp	x19, x20, [sp, #16]
   23c10:	ldp	x21, x22, [sp, #32]
   23c14:	ldp	x23, x24, [sp, #48]
   23c18:	ldr	x25, [sp, #64]
   23c1c:	ldp	x29, x30, [sp], #80
   23c20:	ret
   23c24:	mov	x6, x4
   23c28:	mov	x5, x3
   23c2c:	mov	x4, x2
   23c30:	mov	x3, x1
   23c34:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23c38:	add	x2, x2, #0xad0
   23c3c:	add	x2, x2, #0x18
   23c40:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23c44:	add	x1, x1, #0x8f0
   23c48:	mov	w0, #0x0                   	// #0
   23c4c:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   23c50:	b	23b9c <GOACC_data_start@@GOACC_2.0+0x38>
   23c54:	mov	w7, #0x0                   	// #0
   23c58:	mov	w6, #0x1                   	// #1
   23c5c:	mov	x5, #0x0                   	// #0
   23c60:	mov	x4, #0x0                   	// #0
   23c64:	mov	x3, #0x0                   	// #0
   23c68:	mov	x2, #0x0                   	// #0
   23c6c:	mov	x1, #0x0                   	// #0
   23c70:	mov	x0, #0x0                   	// #0
   23c74:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   23c78:	ldr	x1, [x20, #24]
   23c7c:	str	x1, [x0, #40]
   23c80:	str	x0, [x20, #24]
   23c84:	b	23c0c <GOACC_data_start@@GOACC_2.0+0xa8>
   23c88:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23c8c:	add	x2, x2, #0xad0
   23c90:	add	x2, x2, #0x18
   23c94:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23c98:	add	x1, x1, #0x9b8
   23c9c:	mov	w0, #0x0                   	// #0
   23ca0:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   23ca4:	b	23bcc <GOACC_data_start@@GOACC_2.0+0x68>
   23ca8:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23cac:	add	x2, x2, #0xad0
   23cb0:	add	x2, x2, #0x18
   23cb4:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23cb8:	add	x1, x1, #0x9d0
   23cbc:	mov	w0, #0x0                   	// #0
   23cc0:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   23cc4:	b	23c00 <GOACC_data_start@@GOACC_2.0+0x9c>

0000000000023cc8 <GOACC_data_end@@GOACC_2.0>:
   23cc8:	stp	x29, x30, [sp, #-32]!
   23ccc:	mov	x29, sp
   23cd0:	stp	x19, x20, [sp, #16]
   23cd4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   23cd8:	ldr	x0, [x0, #4048]
   23cdc:	mrs	x1, tpidr_el0
   23ce0:	ldr	x20, [x1, x0]
   23ce4:	ldr	x19, [x20, #24]
   23ce8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   23cec:	ldr	w0, [x0, #1536]
   23cf0:	cbnz	w0, 23d20 <GOACC_data_end@@GOACC_2.0+0x58>
   23cf4:	ldr	x0, [x19, #40]
   23cf8:	str	x0, [x20, #24]
   23cfc:	mov	w1, #0x1                   	// #1
   23d00:	mov	x0, x19
   23d04:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   23d08:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   23d0c:	ldr	w0, [x0, #1536]
   23d10:	cbnz	w0, 23d40 <GOACC_data_end@@GOACC_2.0+0x78>
   23d14:	ldp	x19, x20, [sp, #16]
   23d18:	ldp	x29, x30, [sp], #32
   23d1c:	ret
   23d20:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23d24:	add	x2, x2, #0xad0
   23d28:	add	x2, x2, #0x30
   23d2c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23d30:	add	x1, x1, #0x9f0
   23d34:	mov	w0, #0x0                   	// #0
   23d38:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   23d3c:	b	23cf4 <GOACC_data_end@@GOACC_2.0+0x2c>
   23d40:	adrp	x2, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23d44:	add	x2, x2, #0xad0
   23d48:	add	x2, x2, #0x30
   23d4c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23d50:	add	x1, x1, #0xa08
   23d54:	mov	w0, #0x0                   	// #0
   23d58:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   23d5c:	b	23d14 <GOACC_data_end@@GOACC_2.0+0x4c>

0000000000023d60 <GOACC_enter_exit_data@@GOACC_2.0>:
   23d60:	stp	x29, x30, [sp, #-272]!
   23d64:	mov	x29, sp
   23d68:	stp	x19, x20, [sp, #16]
   23d6c:	stp	x21, x22, [sp, #32]
   23d70:	stp	x23, x24, [sp, #48]
   23d74:	stp	x25, x26, [sp, #64]
   23d78:	mov	w21, w0
   23d7c:	mov	x20, x1
   23d80:	mov	x22, x2
   23d84:	mov	x23, x3
   23d88:	mov	x19, x4
   23d8c:	mov	w24, w5
   23d90:	mov	w26, w6
   23d94:	str	x7, [sp, #264]
   23d98:	str	q0, [sp, #128]
   23d9c:	str	q1, [sp, #144]
   23da0:	str	q2, [sp, #160]
   23da4:	str	q3, [sp, #176]
   23da8:	str	q4, [sp, #192]
   23dac:	str	q5, [sp, #208]
   23db0:	str	q6, [sp, #224]
   23db4:	str	q7, [sp, #240]
   23db8:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   23dbc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   23dc0:	ldr	x0, [x0, #4048]
   23dc4:	mrs	x1, tpidr_el0
   23dc8:	ldr	x0, [x1, x0]
   23dcc:	ldr	x25, [x0, #8]
   23dd0:	ldr	w0, [x25, #8]
   23dd4:	orn	w21, w0, w21
   23dd8:	tbnz	w21, #0, 23f48 <GOACC_enter_exit_data@@GOACC_2.0+0x1e8>
   23ddc:	cbnz	w26, 23e64 <GOACC_enter_exit_data@@GOACC_2.0+0x104>
   23de0:	cbz	x20, 240a4 <GOACC_enter_exit_data@@GOACC_2.0+0x344>
   23de4:	stp	x27, x28, [sp, #80]
   23de8:	ldrh	w26, [x19]
   23dec:	ldr	x1, [x25, #248]
   23df0:	mov	w0, w24
   23df4:	blr	x1
   23df8:	mov	x2, #0x0                   	// #0
   23dfc:	ldrh	w0, [x19, x2, lsl #1]
   23e00:	and	w1, w0, #0xff
   23e04:	sub	w0, w1, #0x4
   23e08:	and	w0, w0, #0xff
   23e0c:	cmp	w0, #0x1
   23e10:	b.ls	23e9c <GOACC_enter_exit_data@@GOACC_2.0+0x13c>  // b.plast
   23e14:	cmp	w1, #0x6
   23e18:	b.eq	23eb8 <GOACC_enter_exit_data@@GOACC_2.0+0x158>  // b.none
   23e1c:	mov	x21, #0x0                   	// #0
   23e20:	tst	w1, #0x7e
   23e24:	b.eq	23ebc <GOACC_enter_exit_data@@GOACC_2.0+0x15c>  // b.none
   23e28:	and	w0, w1, #0xffffffef
   23e2c:	and	w0, w0, #0xff
   23e30:	cmp	w0, #0x7
   23e34:	b.eq	23e44 <GOACC_enter_exit_data@@GOACC_2.0+0xe4>  // b.none
   23e38:	and	w0, w1, #0x7f
   23e3c:	cmp	w0, #0x2
   23e40:	b.ne	23eac <GOACC_enter_exit_data@@GOACC_2.0+0x14c>  // b.any
   23e44:	and	w26, w26, #0xff
   23e48:	cmp	w26, #0x7
   23e4c:	cset	w27, eq  // eq = none
   23e50:	cmp	w26, #0x82
   23e54:	csinc	w27, w27, wzr, ne  // ne = any
   23e58:	mov	x21, #0x0                   	// #0
   23e5c:	mov	w28, #0x3                   	// #3
   23e60:	b	23fd0 <GOACC_enter_exit_data@@GOACC_2.0+0x270>
   23e64:	add	x0, sp, #0x110
   23e68:	str	x0, [sp, #96]
   23e6c:	str	x0, [sp, #104]
   23e70:	add	x0, sp, #0x100
   23e74:	str	x0, [sp, #112]
   23e78:	mov	w0, #0xfffffff8            	// #-8
   23e7c:	str	w0, [sp, #120]
   23e80:	mov	w0, #0xffffff80            	// #-128
   23e84:	str	w0, [sp, #124]
   23e88:	add	x2, sp, #0x60
   23e8c:	mov	w1, w26
   23e90:	mov	w0, w24
   23e94:	bl	23550 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x80>
   23e98:	b	23de0 <GOACC_enter_exit_data@@GOACC_2.0+0x80>
   23e9c:	add	x2, x2, #0x1
   23ea0:	cmp	x20, x2
   23ea4:	b.ne	23dfc <GOACC_enter_exit_data@@GOACC_2.0+0x9c>  // b.any
   23ea8:	b	23e44 <GOACC_enter_exit_data@@GOACC_2.0+0xe4>
   23eac:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23eb0:	add	x0, x0, #0xa28
   23eb4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   23eb8:	mov	x21, #0x0                   	// #0
   23ebc:	mov	w24, #0x3                   	// #3
   23ec0:	mov	w26, #0x2                   	// #2
   23ec4:	b	23ee0 <GOACC_enter_exit_data@@GOACC_2.0+0x180>
   23ec8:	ldr	x1, [x23, x21, lsl #3]
   23ecc:	ldr	x0, [x22, x21, lsl #3]
   23ed0:	bl	8700 <acc_create@plt>
   23ed4:	add	x21, x21, #0x1
   23ed8:	cmp	x20, x21
   23edc:	b.ls	23f38 <GOACC_enter_exit_data@@GOACC_2.0+0x1d8>  // b.plast
   23ee0:	lsl	x0, x21, #1
   23ee4:	add	x3, x19, x0
   23ee8:	add	w1, w21, #0x1
   23eec:	cmp	x20, w1, sxtw
   23ef0:	b.ls	23f0c <GOACC_enter_exit_data@@GOACC_2.0+0x1ac>  // b.plast
   23ef4:	add	x1, x19, w21, sxtw #1
   23ef8:	ldrb	w1, [x1, #2]
   23efc:	cmp	w1, #0x5
   23f00:	b.eq	24078 <GOACC_enter_exit_data@@GOACC_2.0+0x318>  // b.none
   23f04:	cmp	w1, #0x4
   23f08:	b.eq	2409c <GOACC_enter_exit_data@@GOACC_2.0+0x33c>  // b.none
   23f0c:	ldrb	w1, [x19, x0]
   23f10:	cmp	w1, #0x80
   23f14:	b.eq	23ec8 <GOACC_enter_exit_data@@GOACC_2.0+0x168>  // b.none
   23f18:	b.hi	24064 <GOACC_enter_exit_data@@GOACC_2.0+0x304>  // b.pmore
   23f1c:	cbz	w1, 23ec8 <GOACC_enter_exit_data@@GOACC_2.0+0x168>
   23f20:	cmp	w1, #0x1
   23f24:	b.ne	2406c <GOACC_enter_exit_data@@GOACC_2.0+0x30c>  // b.any
   23f28:	ldr	x1, [x23, x21, lsl #3]
   23f2c:	ldr	x0, [x22, x21, lsl #3]
   23f30:	bl	86d0 <acc_copyin@plt>
   23f34:	b	23ed4 <GOACC_enter_exit_data@@GOACC_2.0+0x174>
   23f38:	ldp	x27, x28, [sp, #80]
   23f3c:	ldr	x1, [x25, #248]
   23f40:	mov	w0, #0xfffffffe            	// #-2
   23f44:	blr	x1
   23f48:	ldp	x19, x20, [sp, #16]
   23f4c:	ldp	x21, x22, [sp, #32]
   23f50:	ldp	x23, x24, [sp, #48]
   23f54:	ldp	x25, x26, [sp, #64]
   23f58:	ldp	x29, x30, [sp], #272
   23f5c:	ret
   23f60:	ldr	x1, [x23, x26]
   23f64:	ldr	x0, [x22, x26]
   23f68:	bl	8910 <acc_delete@plt>
   23f6c:	b	23fc4 <GOACC_enter_exit_data@@GOACC_2.0+0x264>
   23f70:	ldr	x1, [x23, x21, lsl #3]
   23f74:	ldr	x0, [x22, x21, lsl #3]
   23f78:	bl	8980 <acc_copyout@plt>
   23f7c:	b	23fc4 <GOACC_enter_exit_data@@GOACC_2.0+0x264>
   23f80:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   23f84:	add	x0, x0, #0xa28
   23f88:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   23f8c:	ldp	x27, x28, [sp, #80]
   23f90:	b	23f3c <GOACC_enter_exit_data@@GOACC_2.0+0x1dc>
   23f94:	mov	w26, w28
   23f98:	and	w1, w1, #0x7f
   23f9c:	cmp	w1, #0x2
   23fa0:	mov	w5, w26
   23fa4:	mov	w4, w27
   23fa8:	mov	w3, w24
   23fac:	cset	w2, eq  // eq = none
   23fb0:	ldr	x1, [x23, x21, lsl #3]
   23fb4:	ldr	x0, [x22, x21, lsl #3]
   23fb8:	bl	26edc <acc_update_self_async@@OACC_2.5+0x244>
   23fbc:	sub	w26, w26, #0x1
   23fc0:	add	x21, x21, w26, sxtw
   23fc4:	add	x21, x21, #0x1
   23fc8:	cmp	x20, x21
   23fcc:	b.ls	23f8c <GOACC_enter_exit_data@@GOACC_2.0+0x22c>  // b.plast
   23fd0:	ldrh	w0, [x19, x21, lsl #1]
   23fd4:	and	w1, w0, #0xff
   23fd8:	add	w0, w21, #0x1
   23fdc:	cmp	x20, w0, sxtw
   23fe0:	b.ls	23ffc <GOACC_enter_exit_data@@GOACC_2.0+0x29c>  // b.plast
   23fe4:	add	x0, x19, w21, sxtw #1
   23fe8:	ldrb	w0, [x0, #2]
   23fec:	cmp	w0, #0x5
   23ff0:	b.eq	23f94 <GOACC_enter_exit_data@@GOACC_2.0+0x234>  // b.none
   23ff4:	cmp	w0, #0x4
   23ff8:	b.eq	24040 <GOACC_enter_exit_data@@GOACC_2.0+0x2e0>  // b.none
   23ffc:	cmp	w1, #0x17
   24000:	b.eq	24018 <GOACC_enter_exit_data@@GOACC_2.0+0x2b8>  // b.none
   24004:	b.hi	24048 <GOACC_enter_exit_data@@GOACC_2.0+0x2e8>  // b.pmore
   24008:	cmp	w1, #0x2
   2400c:	b.eq	24050 <GOACC_enter_exit_data@@GOACC_2.0+0x2f0>  // b.none
   24010:	cmp	w1, #0x7
   24014:	b.ne	23f80 <GOACC_enter_exit_data@@GOACC_2.0+0x220>  // b.any
   24018:	lsl	x26, x21, #3
   2401c:	ldr	x1, [x23, x21, lsl #3]
   24020:	ldr	x0, [x22, x21, lsl #3]
   24024:	bl	87f0 <acc_is_present@plt>
   24028:	cbz	w0, 23fc4 <GOACC_enter_exit_data@@GOACC_2.0+0x264>
   2402c:	cbz	w27, 23f60 <GOACC_enter_exit_data@@GOACC_2.0+0x200>
   24030:	ldr	x1, [x23, x26]
   24034:	ldr	x0, [x22, x26]
   24038:	bl	86e0 <acc_delete_finalize@plt>
   2403c:	b	23fc4 <GOACC_enter_exit_data@@GOACC_2.0+0x264>
   24040:	mov	w26, #0x2                   	// #2
   24044:	b	23f98 <GOACC_enter_exit_data@@GOACC_2.0+0x238>
   24048:	cmp	w1, #0x82
   2404c:	b.ne	23f80 <GOACC_enter_exit_data@@GOACC_2.0+0x220>  // b.any
   24050:	cbz	w27, 23f70 <GOACC_enter_exit_data@@GOACC_2.0+0x210>
   24054:	ldr	x1, [x23, x21, lsl #3]
   24058:	ldr	x0, [x22, x21, lsl #3]
   2405c:	bl	8650 <acc_copyout_finalize@plt>
   24060:	b	23fc4 <GOACC_enter_exit_data@@GOACC_2.0+0x264>
   24064:	cmp	w1, #0x81
   24068:	b.eq	23f28 <GOACC_enter_exit_data@@GOACC_2.0+0x1c8>  // b.none
   2406c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24070:	add	x0, x0, #0xa28
   24074:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24078:	mov	w27, w24
   2407c:	lsl	x1, x21, #3
   24080:	add	x2, x23, x1
   24084:	add	x1, x22, x1
   24088:	sxtw	x0, w27
   2408c:	bl	26cbc <acc_update_self_async@@OACC_2.5+0x24>
   24090:	sub	w27, w27, #0x1
   24094:	add	x21, x21, w27, sxtw
   24098:	b	23ed4 <GOACC_enter_exit_data@@GOACC_2.0+0x174>
   2409c:	mov	w27, w26
   240a0:	b	2407c <GOACC_enter_exit_data@@GOACC_2.0+0x31c>
   240a4:	ldr	x1, [x25, #248]
   240a8:	mov	w0, w24
   240ac:	blr	x1
   240b0:	b	23f3c <GOACC_enter_exit_data@@GOACC_2.0+0x1dc>

00000000000240b4 <GOACC_update@@GOACC_2.0>:
   240b4:	stp	x29, x30, [sp, #-272]!
   240b8:	mov	x29, sp
   240bc:	stp	x19, x20, [sp, #16]
   240c0:	stp	x21, x22, [sp, #32]
   240c4:	stp	x23, x24, [sp, #48]
   240c8:	stp	x25, x26, [sp, #64]
   240cc:	mov	w19, w0
   240d0:	mov	x21, x1
   240d4:	mov	x20, x2
   240d8:	mov	x23, x3
   240dc:	mov	x22, x4
   240e0:	mov	w24, w5
   240e4:	mov	w26, w6
   240e8:	str	x7, [sp, #264]
   240ec:	str	q0, [sp, #128]
   240f0:	str	q1, [sp, #144]
   240f4:	str	q2, [sp, #160]
   240f8:	str	q3, [sp, #176]
   240fc:	str	q4, [sp, #192]
   24100:	str	q5, [sp, #208]
   24104:	str	q6, [sp, #224]
   24108:	str	q7, [sp, #240]
   2410c:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   24110:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   24114:	ldr	x0, [x0, #4048]
   24118:	mrs	x1, tpidr_el0
   2411c:	ldr	x0, [x1, x0]
   24120:	ldr	x25, [x0, #8]
   24124:	ldr	w0, [x25, #8]
   24128:	orn	w19, w0, w19
   2412c:	tbnz	w19, #0, 24298 <GOACC_update@@GOACC_2.0+0x1e4>
   24130:	cbnz	w26, 24160 <GOACC_update@@GOACC_2.0+0xac>
   24134:	ldr	x1, [x25, #248]
   24138:	mov	w0, w24
   2413c:	blr	x1
   24140:	cbz	x21, 2428c <GOACC_update@@GOACC_2.0+0x1d8>
   24144:	stp	x27, x28, [sp, #80]
   24148:	mov	w2, #0x0                   	// #0
   2414c:	mov	x19, #0x0                   	// #0
   24150:	mov	x27, #0x8                   	// #8
   24154:	mov	w24, #0x0                   	// #0
   24158:	mov	w26, #0x1                   	// #1
   2415c:	b	241c4 <GOACC_update@@GOACC_2.0+0x110>
   24160:	add	x0, sp, #0x110
   24164:	str	x0, [sp, #96]
   24168:	str	x0, [sp, #104]
   2416c:	add	x0, sp, #0x100
   24170:	str	x0, [sp, #112]
   24174:	mov	w0, #0xfffffff8            	// #-8
   24178:	str	w0, [sp, #120]
   2417c:	mov	w0, #0xffffff80            	// #-128
   24180:	str	w0, [sp, #124]
   24184:	add	x2, sp, #0x60
   24188:	mov	w1, w26
   2418c:	mov	w0, w24
   24190:	bl	23550 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x80>
   24194:	b	24134 <GOACC_update@@GOACC_2.0+0x80>
   24198:	cmp	w0, #0x2
   2419c:	b.eq	24260 <GOACC_update@@GOACC_2.0+0x1ac>  // b.none
   241a0:	b.ls	241fc <GOACC_update@@GOACC_2.0+0x148>  // b.plast
   241a4:	sub	w1, w0, #0x4
   241a8:	and	w1, w1, #0xff
   241ac:	cmp	w1, #0x1
   241b0:	b.hi	24278 <GOACC_update@@GOACC_2.0+0x1c4>  // b.pmore
   241b4:	add	x19, x19, #0x1
   241b8:	add	x20, x20, #0x8
   241bc:	cmp	x21, x19
   241c0:	b.eq	24288 <GOACC_update@@GOACC_2.0+0x1d4>  // b.none
   241c4:	ldrh	w0, [x22, x19, lsl #1]
   241c8:	and	w0, w0, #0xff
   241cc:	cmp	w0, #0x1d
   241d0:	b.eq	2422c <GOACC_update@@GOACC_2.0+0x178>  // b.none
   241d4:	b.ls	24198 <GOACC_update@@GOACC_2.0+0xe4>  // b.plast
   241d8:	cmp	w0, #0x81
   241dc:	b.eq	24218 <GOACC_update@@GOACC_2.0+0x164>  // b.none
   241e0:	cmp	w0, #0x82
   241e4:	b.ne	24278 <GOACC_update@@GOACC_2.0+0x1c4>  // b.any
   241e8:	ldr	x1, [x23, x19, lsl #3]
   241ec:	ldr	x0, [x20]
   241f0:	bl	89f0 <acc_update_self@plt>
   241f4:	mov	w2, w24
   241f8:	b	241b4 <GOACC_update@@GOACC_2.0+0x100>
   241fc:	cmp	w0, #0x1
   24200:	b.ne	24278 <GOACC_update@@GOACC_2.0+0x1c4>  // b.any
   24204:	ldr	x1, [x23, x19, lsl #3]
   24208:	ldr	x0, [x20]
   2420c:	bl	87f0 <acc_is_present@plt>
   24210:	mov	w2, w24
   24214:	cbz	w0, 241b4 <GOACC_update@@GOACC_2.0+0x100>
   24218:	ldr	x1, [x23, x19, lsl #3]
   2421c:	ldr	x0, [x20]
   24220:	bl	8b00 <acc_update_device@plt>
   24224:	mov	w2, w26
   24228:	b	241b4 <GOACC_update@@GOACC_2.0+0x100>
   2422c:	cbz	w2, 241b4 <GOACC_update@@GOACC_2.0+0x100>
   24230:	ldur	x0, [x20, #-8]
   24234:	bl	88e0 <acc_deviceptr@plt>
   24238:	ldr	x1, [x20]
   2423c:	ldr	x28, [x1]
   24240:	str	x0, [x1]
   24244:	mov	x1, x27
   24248:	ldr	x0, [x20]
   2424c:	bl	8b00 <acc_update_device@plt>
   24250:	ldr	x0, [x20]
   24254:	str	x28, [x0]
   24258:	mov	w2, w24
   2425c:	b	241b4 <GOACC_update@@GOACC_2.0+0x100>
   24260:	ldr	x1, [x23, x19, lsl #3]
   24264:	ldr	x0, [x20]
   24268:	bl	87f0 <acc_is_present@plt>
   2426c:	mov	w2, w24
   24270:	cbz	w0, 241b4 <GOACC_update@@GOACC_2.0+0x100>
   24274:	b	241e8 <GOACC_update@@GOACC_2.0+0x134>
   24278:	mov	w1, w0
   2427c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24280:	add	x0, x0, #0xa60
   24284:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24288:	ldp	x27, x28, [sp, #80]
   2428c:	ldr	x1, [x25, #248]
   24290:	mov	w0, #0xfffffffe            	// #-2
   24294:	blr	x1
   24298:	ldp	x19, x20, [sp, #16]
   2429c:	ldp	x21, x22, [sp, #32]
   242a0:	ldp	x23, x24, [sp, #48]
   242a4:	ldp	x25, x26, [sp, #64]
   242a8:	ldp	x29, x30, [sp], #272
   242ac:	ret

00000000000242b0 <GOACC_wait@@GOACC_2.0>:
   242b0:	stp	x29, x30, [sp, #-224]!
   242b4:	mov	x29, sp
   242b8:	str	x2, [sp, #176]
   242bc:	str	x3, [sp, #184]
   242c0:	str	x4, [sp, #192]
   242c4:	str	x5, [sp, #200]
   242c8:	str	x6, [sp, #208]
   242cc:	str	x7, [sp, #216]
   242d0:	str	q0, [sp, #48]
   242d4:	str	q1, [sp, #64]
   242d8:	str	q2, [sp, #80]
   242dc:	str	q3, [sp, #96]
   242e0:	str	q4, [sp, #112]
   242e4:	str	q5, [sp, #128]
   242e8:	str	q6, [sp, #144]
   242ec:	str	q7, [sp, #160]
   242f0:	cbnz	w1, 24308 <GOACC_wait@@GOACC_2.0+0x58>
   242f4:	cmn	w0, #0x2
   242f8:	b.eq	24338 <GOACC_wait@@GOACC_2.0+0x88>  // b.none
   242fc:	bl	88d0 <acc_wait_all_async@plt>
   24300:	ldp	x29, x30, [sp], #224
   24304:	ret
   24308:	add	x2, sp, #0xe0
   2430c:	str	x2, [sp, #16]
   24310:	str	x2, [sp, #24]
   24314:	add	x2, sp, #0xb0
   24318:	str	x2, [sp, #32]
   2431c:	mov	w2, #0xffffffd0            	// #-48
   24320:	str	w2, [sp, #40]
   24324:	mov	w2, #0xffffff80            	// #-128
   24328:	str	w2, [sp, #44]
   2432c:	add	x2, sp, #0x10
   24330:	bl	23550 <GOMP_PLUGIN_fatal@@GOMP_PLUGIN_1.0+0x80>
   24334:	b	24300 <GOACC_wait@@GOACC_2.0+0x50>
   24338:	bl	8620 <acc_wait_all@plt>
   2433c:	b	24300 <GOACC_wait@@GOACC_2.0+0x50>

0000000000024340 <GOACC_get_num_threads@@GOACC_2.0>:
   24340:	mov	w0, #0x1                   	// #1
   24344:	ret

0000000000024348 <GOACC_get_thread_num@@GOACC_2.0>:
   24348:	mov	w0, #0x0                   	// #0
   2434c:	ret

0000000000024350 <GOACC_declare@@GOACC_2.0.1>:
   24350:	cbz	x1, 2453c <GOACC_declare@@GOACC_2.0.1+0x1ec>
   24354:	stp	x29, x30, [sp, #-112]!
   24358:	mov	x29, sp
   2435c:	stp	x19, x20, [sp, #16]
   24360:	stp	x21, x22, [sp, #32]
   24364:	stp	x23, x24, [sp, #48]
   24368:	stp	x25, x26, [sp, #64]
   2436c:	stp	x27, x28, [sp, #80]
   24370:	mov	w26, w0
   24374:	mov	x22, x1
   24378:	mov	x23, x2
   2437c:	mov	x24, x3
   24380:	mov	x19, x4
   24384:	mov	x20, #0x0                   	// #0
   24388:	mov	w28, #0xfffffffe            	// #-2
   2438c:	mov	x27, #0x1                   	// #1
   24390:	b	24404 <GOACC_declare@@GOACC_2.0.1+0xb4>
   24394:	cbz	w0, 244b4 <GOACC_declare@@GOACC_2.0.1+0x164>
   24398:	cmp	w0, #0x1
   2439c:	b.ne	24490 <GOACC_declare@@GOACC_2.0.1+0x140>  // b.any
   243a0:	lsl	x2, x20, #3
   243a4:	mov	w6, #0x0                   	// #0
   243a8:	mov	w5, w28
   243ac:	mov	x4, x19
   243b0:	add	x3, x24, x2
   243b4:	add	x2, x23, x2
   243b8:	mov	x1, x27
   243bc:	mov	w0, w26
   243c0:	bl	8a20 <GOACC_enter_exit_data@plt>
   243c4:	b	243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>
   243c8:	cmp	w0, #0x7
   243cc:	b.ne	2446c <GOACC_declare@@GOACC_2.0.1+0x11c>  // b.any
   243d0:	lsl	x2, x20, #3
   243d4:	mov	w6, #0x0                   	// #0
   243d8:	mov	w5, w28
   243dc:	mov	x4, x21
   243e0:	add	x3, x24, x2
   243e4:	add	x2, x23, x2
   243e8:	mov	x1, x27
   243ec:	mov	w0, w26
   243f0:	bl	8a20 <GOACC_enter_exit_data@plt>
   243f4:	add	x20, x20, #0x1
   243f8:	add	x19, x19, #0x2
   243fc:	cmp	x22, x20
   24400:	b.eq	24520 <GOACC_declare@@GOACC_2.0.1+0x1d0>  // b.none
   24404:	mov	x21, x19
   24408:	ldrb	w0, [x19]
   2440c:	sub	w1, w0, #0x4
   24410:	and	w1, w1, #0xff
   24414:	cmp	w1, #0x1
   24418:	b.ls	243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>  // b.plast
   2441c:	cmp	w0, #0x2
   24420:	b.eq	244f8 <GOACC_declare@@GOACC_2.0.1+0x1a8>  // b.none
   24424:	b.ls	24394 <GOACC_declare@@GOACC_2.0.1+0x44>  // b.plast
   24428:	cmp	w0, #0x8
   2442c:	b.eq	243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>  // b.none
   24430:	b.hi	24478 <GOACC_declare@@GOACC_2.0.1+0x128>  // b.pmore
   24434:	cmp	w0, #0x6
   24438:	b.ne	243c8 <GOACC_declare@@GOACC_2.0.1+0x78>  // b.any
   2443c:	lsl	x0, x20, #3
   24440:	add	x21, x23, x0
   24444:	add	x25, x24, x0
   24448:	ldr	x1, [x24, x20, lsl #3]
   2444c:	ldr	x0, [x23, x20, lsl #3]
   24450:	bl	87f0 <acc_is_present@plt>
   24454:	cbnz	w0, 243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>
   24458:	ldr	x2, [x25]
   2445c:	ldr	x1, [x21]
   24460:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24464:	add	x0, x0, #0xa88
   24468:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2446c:	cmp	w0, #0x4
   24470:	b.eq	243d0 <GOACC_declare@@GOACC_2.0.1+0x80>  // b.none
   24474:	b	24490 <GOACC_declare@@GOACC_2.0.1+0x140>
   24478:	cmp	w0, #0x17
   2447c:	b.eq	243d0 <GOACC_declare@@GOACC_2.0.1+0x80>  // b.none
   24480:	sub	w0, w0, #0x80
   24484:	and	w0, w0, #0xff
   24488:	cmp	w0, #0x2
   2448c:	b.ls	243d0 <GOACC_declare@@GOACC_2.0.1+0x80>  // b.plast
   24490:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24494:	add	x3, x3, #0xad0
   24498:	add	x3, x3, #0x40
   2449c:	mov	w2, #0x2cc                 	// #716
   244a0:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   244a4:	add	x1, x1, #0xaa0
   244a8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   244ac:	add	x0, x0, #0xac8
   244b0:	bl	8ab0 <__assert_fail@plt>
   244b4:	lsl	x25, x20, #3
   244b8:	add	x0, x23, x25
   244bc:	str	x0, [sp, #104]
   244c0:	add	x25, x24, x25
   244c4:	ldr	x1, [x24, x20, lsl #3]
   244c8:	ldr	x0, [x23, x20, lsl #3]
   244cc:	bl	87f0 <acc_is_present@plt>
   244d0:	cbnz	w0, 243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>
   244d4:	mov	w6, #0x0                   	// #0
   244d8:	mov	w5, w28
   244dc:	mov	x4, x19
   244e0:	mov	x3, x25
   244e4:	ldr	x2, [sp, #104]
   244e8:	mov	x1, x27
   244ec:	mov	w0, w26
   244f0:	bl	8a20 <GOACC_enter_exit_data@plt>
   244f4:	b	243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>
   244f8:	lsl	x2, x20, #3
   244fc:	mov	w6, #0x0                   	// #0
   24500:	mov	w5, w28
   24504:	mov	x4, x19
   24508:	add	x3, x24, x2
   2450c:	add	x2, x23, x2
   24510:	mov	x1, x27
   24514:	mov	w0, w26
   24518:	bl	8a20 <GOACC_enter_exit_data@plt>
   2451c:	b	243f4 <GOACC_declare@@GOACC_2.0.1+0xa4>
   24520:	ldp	x19, x20, [sp, #16]
   24524:	ldp	x21, x22, [sp, #32]
   24528:	ldp	x23, x24, [sp, #48]
   2452c:	ldp	x25, x26, [sp, #64]
   24530:	ldp	x27, x28, [sp, #80]
   24534:	ldp	x29, x30, [sp], #112
   24538:	ret
   2453c:	ret
   24540:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24544:	ldr	x0, [x0, #840]
   24548:	ret
   2454c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24550:	ldr	w0, [x0, #848]
   24554:	ret
   24558:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2455c:	ldr	w0, [x0, #856]
   24560:	ret
   24564:	mov	w0, #0x1                   	// #1
   24568:	ret
   2456c:	mov	w0, #0x1                   	// #1
   24570:	ret
   24574:	mov	w0, #0x1                   	// #1
   24578:	ret
   2457c:	mov	w0, #0x1                   	// #1
   24580:	ret
   24584:	mov	w0, #0x0                   	// #0
   24588:	ret
   2458c:	mov	w0, #0x1                   	// #1
   24590:	ret
   24594:	mov	w0, #0x1                   	// #1
   24598:	ret
   2459c:	mov	w0, #0x1                   	// #1
   245a0:	ret
   245a4:	stp	x29, x30, [sp, #-16]!
   245a8:	mov	x29, sp
   245ac:	mov	x0, x2
   245b0:	blr	x1
   245b4:	ldp	x29, x30, [sp], #16
   245b8:	ret
   245bc:	stp	x29, x30, [sp, #-16]!
   245c0:	mov	x29, sp
   245c4:	mov	x1, x0
   245c8:	mov	x0, x2
   245cc:	blr	x1
   245d0:	ldp	x29, x30, [sp], #16
   245d4:	ret
   245d8:	ret
   245dc:	mov	w0, #0x1                   	// #1
   245e0:	ret
   245e4:	mov	w0, #0x1                   	// #1
   245e8:	ret
   245ec:	ret
   245f0:	ret
   245f4:	ret
   245f8:	ret
   245fc:	ret
   24600:	mov	x0, #0x0                   	// #0
   24604:	ret
   24608:	ret
   2460c:	stp	x29, x30, [sp, #-16]!
   24610:	mov	x29, sp
   24614:	mov	x0, x1
   24618:	bl	8900 <free@plt>
   2461c:	mov	w0, #0x1                   	// #1
   24620:	ldp	x29, x30, [sp], #16
   24624:	ret
   24628:	stp	x29, x30, [sp, #-16]!
   2462c:	mov	x29, sp
   24630:	mov	x0, x1
   24634:	bl	8c28 <fprintf@plt+0x118>
   24638:	ldp	x29, x30, [sp], #16
   2463c:	ret
   24640:	stp	x29, x30, [sp, #-16]!
   24644:	mov	x29, sp
   24648:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2464c:	add	x0, x0, #0x348
   24650:	str	wzr, [x0, #168]
   24654:	bl	24aa0 <GOACC_declare@@GOACC_2.0.1+0x750>
   24658:	ldp	x29, x30, [sp], #16
   2465c:	ret
   24660:	ldxr	w1, [x0]
   24664:	stlxr	w2, wzr, [x0]
   24668:	cbnz	w2, 24660 <GOACC_declare@@GOACC_2.0.1+0x310>
   2466c:	tbnz	w1, #31, 24674 <GOACC_declare@@GOACC_2.0.1+0x324>
   24670:	ret
   24674:	stp	x29, x30, [sp, #-16]!
   24678:	mov	x29, sp
   2467c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24680:	ldp	x29, x30, [sp], #16
   24684:	ret
   24688:	cmp	w0, #0x2
   2468c:	b.eq	246e4 <GOACC_declare@@GOACC_2.0.1+0x394>  // b.none
   24690:	cmp	w0, #0x2
   24694:	b.gt	246b0 <GOACC_declare@@GOACC_2.0.1+0x360>
   24698:	cbz	w0, 246f0 <GOACC_declare@@GOACC_2.0.1+0x3a0>
   2469c:	cmp	w0, #0x1
   246a0:	b.ne	246cc <GOACC_declare@@GOACC_2.0.1+0x37c>  // b.any
   246a4:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   246a8:	add	x0, x0, #0xb38
   246ac:	ret
   246b0:	cmp	w0, #0x4
   246b4:	b.eq	246fc <GOACC_declare@@GOACC_2.0.1+0x3ac>  // b.none
   246b8:	cmp	w0, #0x5
   246bc:	b.ne	246cc <GOACC_declare@@GOACC_2.0.1+0x37c>  // b.any
   246c0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   246c4:	add	x0, x0, #0xb40
   246c8:	ret
   246cc:	stp	x29, x30, [sp, #-16]!
   246d0:	mov	x29, sp
   246d4:	mov	w1, w0
   246d8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   246dc:	add	x0, x0, #0xb48
   246e0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   246e4:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   246e8:	add	x0, x0, #0xcf8
   246ec:	ret
   246f0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   246f4:	add	x0, x0, #0xb30
   246f8:	ret
   246fc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24700:	add	x0, x0, #0xb20
   24704:	ret
   24708:	stp	x29, x30, [sp, #-16]!
   2470c:	mov	x29, sp
   24710:	cbnz	w2, 24728 <GOACC_declare@@GOACC_2.0.1+0x3d8>
   24714:	bl	24688 <GOACC_declare@@GOACC_2.0.1+0x338>
   24718:	mov	x1, x0
   2471c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24720:	add	x0, x0, #0xb60
   24724:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24728:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2472c:	add	x0, x0, #0xb80
   24730:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24734:	nop
   24738:	stp	x29, x30, [sp, #-96]!
   2473c:	mov	x29, sp
   24740:	stp	x19, x20, [sp, #16]
   24744:	stp	x25, x26, [sp, #64]
   24748:	mov	w19, w0
   2474c:	and	w25, w1, #0xff
   24750:	cmp	w0, #0x2
   24754:	b.eq	2488c <GOACC_declare@@GOACC_2.0.1+0x53c>  // b.none
   24758:	cmp	w0, #0x4
   2475c:	b.eq	24904 <GOACC_declare@@GOACC_2.0.1+0x5b4>  // b.none
   24760:	cmp	w0, #0x1
   24764:	b.eq	2477c <GOACC_declare@@GOACC_2.0.1+0x42c>  // b.none
   24768:	cmp	w0, #0x6
   2476c:	b.le	24814 <GOACC_declare@@GOACC_2.0.1+0x4c4>
   24770:	cbnz	w25, 248b4 <GOACC_declare@@GOACC_2.0.1+0x564>
   24774:	mov	x0, #0x0                   	// #0
   24778:	b	248a4 <GOACC_declare@@GOACC_2.0.1+0x554>
   2477c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24780:	ldr	x0, [x0, #1512]
   24784:	cbz	x0, 248f0 <GOACC_declare@@GOACC_2.0.1+0x5a0>
   24788:	stp	x21, x22, [sp, #32]
   2478c:	stp	x23, x24, [sp, #48]
   24790:	str	x27, [sp, #80]
   24794:	mov	x20, #0x2                   	// #2
   24798:	adrp	x24, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2479c:	add	x24, x24, #0x590
   247a0:	adrp	x27, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   247a4:	add	x27, x27, #0xb98
   247a8:	adrp	x26, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   247ac:	add	x26, x26, #0xb40
   247b0:	b	247c0 <GOACC_declare@@GOACC_2.0.1+0x470>
   247b4:	add	x20, x20, #0x1
   247b8:	cmp	w20, #0x6
   247bc:	b.eq	2484c <GOACC_declare@@GOACC_2.0.1+0x4fc>  // b.none
   247c0:	mov	w19, w20
   247c4:	ldr	x21, [x24, x20, lsl #3]
   247c8:	cbz	x21, 247b4 <GOACC_declare@@GOACC_2.0.1+0x464>
   247cc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   247d0:	ldr	x23, [x0, #1512]
   247d4:	ldr	x22, [x21]
   247d8:	mov	x1, x27
   247dc:	mov	x0, x22
   247e0:	bl	88a0 <strcmp@plt>
   247e4:	cmp	w0, #0x0
   247e8:	csel	x1, x26, x22, eq  // eq = none
   247ec:	mov	x0, x23
   247f0:	bl	8800 <strcasecmp@plt>
   247f4:	cbnz	w0, 247b4 <GOACC_declare@@GOACC_2.0.1+0x464>
   247f8:	ldr	x0, [x21, #48]
   247fc:	blr	x0
   24800:	cmp	w0, #0x0
   24804:	b.le	247b4 <GOACC_declare@@GOACC_2.0.1+0x464>
   24808:	ldp	x21, x22, [sp, #32]
   2480c:	ldp	x23, x24, [sp, #48]
   24810:	ldr	x27, [sp, #80]
   24814:	cmp	w19, #0x1
   24818:	ccmp	w19, #0x4, #0x4, hi  // hi = pmore
   2481c:	b.ne	2488c <GOACC_declare@@GOACC_2.0.1+0x53c>  // b.any
   24820:	stp	x21, x22, [sp, #32]
   24824:	stp	x23, x24, [sp, #48]
   24828:	str	x27, [sp, #80]
   2482c:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24830:	add	x3, x3, #0xe20
   24834:	mov	w2, #0xb6                  	// #182
   24838:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2483c:	add	x1, x1, #0xbd0
   24840:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24844:	add	x0, x0, #0xbf0
   24848:	bl	8ab0 <__assert_fail@plt>
   2484c:	mov	x0, #0x0                   	// #0
   24850:	cbnz	w25, 24864 <GOACC_declare@@GOACC_2.0.1+0x514>
   24854:	ldp	x21, x22, [sp, #32]
   24858:	ldp	x23, x24, [sp, #48]
   2485c:	ldr	x27, [sp, #80]
   24860:	b	248a4 <GOACC_declare@@GOACC_2.0.1+0x554>
   24864:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24868:	add	x0, x0, #0x590
   2486c:	add	x0, x0, #0x30
   24870:	bl	24660 <GOACC_declare@@GOACC_2.0.1+0x310>
   24874:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24878:	ldr	x1, [x0, #1512]
   2487c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24880:	add	x0, x0, #0xba0
   24884:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24888:	mov	w19, #0x2                   	// #2
   2488c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24890:	add	x0, x0, #0x590
   24894:	ldr	x0, [x0, w19, sxtw #3]
   24898:	cmp	x0, #0x0
   2489c:	ccmp	w25, #0x0, #0x4, eq  // eq = none
   248a0:	b.ne	248b4 <GOACC_declare@@GOACC_2.0.1+0x564>  // b.any
   248a4:	ldp	x19, x20, [sp, #16]
   248a8:	ldp	x25, x26, [sp, #64]
   248ac:	ldp	x29, x30, [sp], #96
   248b0:	ret
   248b4:	stp	x21, x22, [sp, #32]
   248b8:	stp	x23, x24, [sp, #48]
   248bc:	str	x27, [sp, #80]
   248c0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   248c4:	add	x0, x0, #0x590
   248c8:	add	x0, x0, #0x30
   248cc:	bl	24660 <GOACC_declare@@GOACC_2.0.1+0x310>
   248d0:	mov	w0, w19
   248d4:	bl	24688 <GOACC_declare@@GOACC_2.0.1+0x338>
   248d8:	mov	x1, x0
   248dc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   248e0:	add	x0, x0, #0xba0
   248e4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   248e8:	mov	w19, #0x5                   	// #5
   248ec:	b	2488c <GOACC_declare@@GOACC_2.0.1+0x53c>
   248f0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   248f4:	ldr	x0, [x0, #1464]
   248f8:	cbnz	x0, 24910 <GOACC_declare@@GOACC_2.0.1+0x5c0>
   248fc:	mov	w19, #0x2                   	// #2
   24900:	b	2488c <GOACC_declare@@GOACC_2.0.1+0x53c>
   24904:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24908:	ldr	x0, [x0, #1464]
   2490c:	cbz	x0, 24928 <GOACC_declare@@GOACC_2.0.1+0x5d8>
   24910:	ldr	x0, [x0, #48]
   24914:	blr	x0
   24918:	cmp	w0, #0x0
   2491c:	b.gt	248e8 <GOACC_declare@@GOACC_2.0.1+0x598>
   24920:	cmp	w19, #0x1
   24924:	b.eq	24888 <GOACC_declare@@GOACC_2.0.1+0x538>  // b.none
   24928:	mov	x0, #0x0                   	// #0
   2492c:	cbz	w25, 248a4 <GOACC_declare@@GOACC_2.0.1+0x554>
   24930:	stp	x21, x22, [sp, #32]
   24934:	stp	x23, x24, [sp, #48]
   24938:	str	x27, [sp, #80]
   2493c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24940:	add	x0, x0, #0x590
   24944:	add	x0, x0, #0x30
   24948:	bl	24660 <GOACC_declare@@GOACC_2.0.1+0x310>
   2494c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24950:	add	x0, x0, #0xbc0
   24954:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24958:	stp	x29, x30, [sp, #-32]!
   2495c:	mov	x29, sp
   24960:	str	x19, [sp, #16]
   24964:	mov	x19, x0
   24968:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2496c:	add	x0, x0, #0x590
   24970:	add	x0, x0, #0x34
   24974:	mov	w2, #0x1                   	// #1
   24978:	ldaxr	w1, [x0]
   2497c:	cbnz	w1, 24988 <GOACC_declare@@GOACC_2.0.1+0x638>
   24980:	stxr	w3, w2, [x0]
   24984:	cbnz	w3, 24978 <GOACC_declare@@GOACC_2.0.1+0x628>
   24988:	cmp	w1, #0x0
   2498c:	b.ne	24a1c <GOACC_declare@@GOACC_2.0.1+0x6cc>  // b.any
   24990:	cbz	x19, 249f4 <GOACC_declare@@GOACC_2.0.1+0x6a4>
   24994:	ldr	x1, [x19, #8]
   24998:	cbz	x1, 249b0 <GOACC_declare@@GOACC_2.0.1+0x660>
   2499c:	ldr	x0, [x19, #40]
   249a0:	cbz	x0, 249b0 <GOACC_declare@@GOACC_2.0.1+0x660>
   249a4:	ldr	x1, [x1, #264]
   249a8:	blr	x1
   249ac:	str	xzr, [x19, #40]
   249b0:	ldr	x0, [x19, #24]
   249b4:	cbnz	x0, 24a30 <GOACC_declare@@GOACC_2.0.1+0x6e0>
   249b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   249bc:	ldr	x1, [x0, #1480]
   249c0:	cbz	x1, 24a54 <GOACC_declare@@GOACC_2.0.1+0x704>
   249c4:	cmp	x19, x1
   249c8:	b.eq	24a8c <GOACC_declare@@GOACC_2.0.1+0x73c>  // b.none
   249cc:	nop
   249d0:	mov	x0, x1
   249d4:	ldr	x1, [x1, #32]
   249d8:	cbz	x1, 24a54 <GOACC_declare@@GOACC_2.0.1+0x704>
   249dc:	cmp	x19, x1
   249e0:	b.ne	249d0 <GOACC_declare@@GOACC_2.0.1+0x680>  // b.any
   249e4:	ldr	x1, [x1, #32]
   249e8:	str	x1, [x0, #32]
   249ec:	mov	x0, x19
   249f0:	bl	8900 <free@plt>
   249f4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   249f8:	add	x0, x0, #0x590
   249fc:	add	x0, x0, #0x34
   24a00:	ldxr	w1, [x0]
   24a04:	stlxr	w2, wzr, [x0]
   24a08:	cbnz	w2, 24a00 <GOACC_declare@@GOACC_2.0.1+0x6b0>
   24a0c:	tbnz	w1, #31, 24a78 <GOACC_declare@@GOACC_2.0.1+0x728>
   24a10:	ldr	x19, [sp, #16]
   24a14:	ldp	x29, x30, [sp], #32
   24a18:	ret
   24a1c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24a20:	add	x0, x0, #0x590
   24a24:	add	x0, x0, #0x34
   24a28:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24a2c:	b	24990 <GOACC_declare@@GOACC_2.0.1+0x640>
   24a30:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a34:	add	x3, x3, #0xe20
   24a38:	add	x3, x3, #0x10
   24a3c:	mov	w2, #0x16b                 	// #363
   24a40:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a44:	add	x1, x1, #0xbd0
   24a48:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a4c:	add	x0, x0, #0xc40
   24a50:	bl	8ab0 <__assert_fail@plt>
   24a54:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a58:	add	x3, x3, #0xe20
   24a5c:	add	x3, x3, #0x10
   24a60:	mov	w2, #0x17c                 	// #380
   24a64:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a68:	add	x1, x1, #0xbd0
   24a6c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24a70:	add	x0, x0, #0xc58
   24a74:	bl	8ab0 <__assert_fail@plt>
   24a78:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24a7c:	add	x0, x0, #0x590
   24a80:	add	x0, x0, #0x34
   24a84:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24a88:	b	24a10 <GOACC_declare@@GOACC_2.0.1+0x6c0>
   24a8c:	ldr	x1, [x1, #32]
   24a90:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24a94:	str	x1, [x0, #1480]
   24a98:	b	249ec <GOACC_declare@@GOACC_2.0.1+0x69c>
   24a9c:	nop
   24aa0:	stp	x29, x30, [sp, #-32]!
   24aa4:	mov	x29, sp
   24aa8:	str	x19, [sp, #16]
   24aac:	mov	x19, x0
   24ab0:	ldr	w0, [x0, #12]
   24ab4:	cbnz	w0, 24b20 <GOACC_declare@@GOACC_2.0.1+0x7d0>
   24ab8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24abc:	add	x0, x0, #0x590
   24ac0:	add	x0, x0, #0x30
   24ac4:	mov	w2, #0x1                   	// #1
   24ac8:	ldaxr	w1, [x0]
   24acc:	cbnz	w1, 24ad8 <GOACC_declare@@GOACC_2.0.1+0x788>
   24ad0:	stxr	w3, w2, [x0]
   24ad4:	cbnz	w3, 24ac8 <GOACC_declare@@GOACC_2.0.1+0x778>
   24ad8:	cmp	w1, #0x0
   24adc:	b.ne	24b2c <GOACC_declare@@GOACC_2.0.1+0x7dc>  // b.any
   24ae0:	ldr	w1, [x19, #16]
   24ae4:	cmp	w1, #0x4
   24ae8:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   24aec:	b.ls	24b40 <GOACC_declare@@GOACC_2.0.1+0x7f0>  // b.plast
   24af0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24af4:	add	x0, x0, #0x590
   24af8:	ldr	x0, [x0, w1, uxtw #3]
   24afc:	cbnz	x0, 24b64 <GOACC_declare@@GOACC_2.0.1+0x814>
   24b00:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24b04:	add	x0, x0, #0x590
   24b08:	str	x19, [x0, w1, uxtw #3]
   24b0c:	add	x0, x0, #0x30
   24b10:	ldxr	w1, [x0]
   24b14:	stlxr	w2, wzr, [x0]
   24b18:	cbnz	w2, 24b10 <GOACC_declare@@GOACC_2.0.1+0x7c0>
   24b1c:	tbnz	w1, #31, 24b88 <GOACC_declare@@GOACC_2.0.1+0x838>
   24b20:	ldr	x19, [sp, #16]
   24b24:	ldp	x29, x30, [sp], #32
   24b28:	ret
   24b2c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24b30:	add	x0, x0, #0x590
   24b34:	add	x0, x0, #0x30
   24b38:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24b3c:	b	24ae0 <GOACC_declare@@GOACC_2.0.1+0x790>
   24b40:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b44:	add	x3, x3, #0xe20
   24b48:	add	x3, x3, #0x28
   24b4c:	mov	w2, #0x4c                  	// #76
   24b50:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b54:	add	x1, x1, #0xbd0
   24b58:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b5c:	add	x0, x0, #0xc60
   24b60:	bl	8ab0 <__assert_fail@plt>
   24b64:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b68:	add	x3, x3, #0xe20
   24b6c:	add	x3, x3, #0x28
   24b70:	mov	w2, #0x4f                  	// #79
   24b74:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b78:	add	x1, x1, #0xbd0
   24b7c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24b80:	add	x0, x0, #0xd00
   24b84:	bl	8ab0 <__assert_fail@plt>
   24b88:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24b8c:	add	x0, x0, #0x590
   24b90:	add	x0, x0, #0x30
   24b94:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24b98:	b	24b20 <GOACC_declare@@GOACC_2.0.1+0x7d0>
   24b9c:	nop
   24ba0:	stp	x29, x30, [sp, #-48]!
   24ba4:	mov	x29, sp
   24ba8:	stp	x19, x20, [sp, #16]
   24bac:	stp	x21, x22, [sp, #32]
   24bb0:	mov	w20, w0
   24bb4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   24bb8:	ldr	x0, [x0, #4008]
   24bbc:	mrs	x1, tpidr_el0
   24bc0:	ldr	x19, [x1, x0]
   24bc4:	cbz	x19, 24c98 <GOACC_declare@@GOACC_2.0.1+0x948>
   24bc8:	ldr	x0, [x19, #8]
   24bcc:	cbz	x0, 24c90 <GOACC_declare@@GOACC_2.0.1+0x940>
   24bd0:	ldr	w0, [x0, #12]
   24bd4:	cmp	w20, #0x0
   24bd8:	ccmp	w0, w20, #0x4, ge  // ge = tcont
   24bdc:	b.eq	24c40 <GOACC_declare@@GOACC_2.0.1+0x8f0>  // b.none
   24be0:	ldr	x22, [x19]
   24be4:	cbz	x22, 24ca8 <GOACC_declare@@GOACC_2.0.1+0x958>
   24be8:	ldr	x0, [x22, #48]
   24bec:	blr	x0
   24bf0:	cmp	w20, #0x0
   24bf4:	csel	w1, w20, wzr, ge  // ge = tcont
   24bf8:	cmp	w0, w1
   24bfc:	b.le	24c74 <GOACC_declare@@GOACC_2.0.1+0x924>
   24c00:	str	x22, [x19]
   24c04:	sxtw	x0, w20
   24c08:	add	x21, x0, w20, sxtw #2
   24c0c:	lsl	x21, x21, #2
   24c10:	sub	x21, x21, x0
   24c14:	add	x21, x22, x21, lsl #4
   24c18:	str	x21, [x19, #8]
   24c1c:	str	xzr, [x19, #16]
   24c20:	str	xzr, [x19, #24]
   24c24:	ldr	x1, [x21, #256]
   24c28:	mov	w0, w20
   24c2c:	blr	x1
   24c30:	str	x0, [x19, #40]
   24c34:	ldr	x1, [x21, #248]
   24c38:	mov	w0, #0xfffffffe            	// #-2
   24c3c:	blr	x1
   24c40:	ldp	x19, x20, [sp, #16]
   24c44:	ldp	x21, x22, [sp, #32]
   24c48:	ldp	x29, x30, [sp], #48
   24c4c:	ret
   24c50:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24c54:	add	x3, x3, #0xe20
   24c58:	add	x3, x3, #0x38
   24c5c:	mov	w2, #0x19a                 	// #410
   24c60:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24c64:	add	x1, x1, #0xbd0
   24c68:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24c6c:	add	x0, x0, #0xd20
   24c70:	bl	8ab0 <__assert_fail@plt>
   24c74:	mov	w2, w0
   24c78:	mov	w1, w20
   24c7c:	ldr	w0, [x22, #16]
   24c80:	bl	24708 <GOACC_declare@@GOACC_2.0.1+0x3b8>
   24c84:	mov	x0, x21
   24c88:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24c8c:	b	24d20 <GOACC_declare@@GOACC_2.0.1+0x9d0>
   24c90:	tbnz	w20, #31, 24c9c <GOACC_declare@@GOACC_2.0.1+0x94c>
   24c94:	b	24be0 <GOACC_declare@@GOACC_2.0.1+0x890>
   24c98:	tbz	w20, #31, 24ca8 <GOACC_declare@@GOACC_2.0.1+0x958>
   24c9c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24ca0:	ldr	w20, [x0, #1616]
   24ca4:	cbnz	x19, 24be0 <GOACC_declare@@GOACC_2.0.1+0x890>
   24ca8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24cac:	ldr	x22, [x0, #1488]
   24cb0:	cbz	x22, 24c50 <GOACC_declare@@GOACC_2.0.1+0x900>
   24cb4:	ldr	x0, [x22, #48]
   24cb8:	blr	x0
   24cbc:	cmp	w20, #0x0
   24cc0:	csel	w1, w20, wzr, ge  // ge = tcont
   24cc4:	cmp	w1, w0
   24cc8:	b.ge	24c74 <GOACC_declare@@GOACC_2.0.1+0x924>  // b.tcont
   24ccc:	cbnz	x19, 24c00 <GOACC_declare@@GOACC_2.0.1+0x8b0>
   24cd0:	mov	x0, #0x30                  	// #48
   24cd4:	bl	8c28 <fprintf@plt+0x118>
   24cd8:	mov	x19, x0
   24cdc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   24ce0:	ldr	x0, [x0, #4008]
   24ce4:	mrs	x1, tpidr_el0
   24ce8:	str	x19, [x1, x0]
   24cec:	adrp	x21, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24cf0:	add	x21, x21, #0x590
   24cf4:	mov	x1, x19
   24cf8:	ldr	w0, [x21, #72]
   24cfc:	bl	89b0 <pthread_setspecific@plt>
   24d00:	add	x21, x21, #0x34
   24d04:	mov	w0, #0x1                   	// #1
   24d08:	ldaxr	w1, [x21]
   24d0c:	cbnz	w1, 24d18 <GOACC_declare@@GOACC_2.0.1+0x9c8>
   24d10:	stxr	w2, w0, [x21]
   24d14:	cbnz	w2, 24d08 <GOACC_declare@@GOACC_2.0.1+0x9b8>
   24d18:	cmp	w1, #0x0
   24d1c:	b.ne	24c84 <GOACC_declare@@GOACC_2.0.1+0x934>  // b.any
   24d20:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24d24:	add	x0, x0, #0x590
   24d28:	ldr	x1, [x0, #56]
   24d2c:	str	x1, [x19, #32]
   24d30:	str	x19, [x0, #56]
   24d34:	add	x0, x0, #0x34
   24d38:	ldxr	w1, [x0]
   24d3c:	stlxr	w2, wzr, [x0]
   24d40:	cbnz	w2, 24d38 <GOACC_declare@@GOACC_2.0.1+0x9e8>
   24d44:	tbz	w1, #31, 24c00 <GOACC_declare@@GOACC_2.0.1+0x8b0>
   24d48:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24d4c:	add	x0, x0, #0x590
   24d50:	add	x0, x0, #0x34
   24d54:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24d58:	b	24c00 <GOACC_declare@@GOACC_2.0.1+0x8b0>
   24d5c:	nop

0000000000024d60 <acc_init@@OACC_2.0>:
   24d60:	stp	x29, x30, [sp, #-48]!
   24d64:	mov	x29, sp
   24d68:	stp	x19, x20, [sp, #16]
   24d6c:	str	x21, [sp, #32]
   24d70:	mov	w19, w0
   24d74:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   24d78:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24d7c:	add	x2, x2, #0x590
   24d80:	add	x2, x2, #0x30
   24d84:	mov	w0, #0x1                   	// #1
   24d88:	ldaxr	w1, [x2]
   24d8c:	cbnz	w1, 24d98 <acc_init@@OACC_2.0+0x38>
   24d90:	stxr	w3, w0, [x2]
   24d94:	cbnz	w3, 24d88 <acc_init@@OACC_2.0+0x28>
   24d98:	cmp	w1, #0x0
   24d9c:	b.ne	24e60 <acc_init@@OACC_2.0+0x100>  // b.any
   24da0:	mov	w1, #0x1                   	// #1
   24da4:	mov	w0, w19
   24da8:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   24dac:	mov	x20, x0
   24db0:	ldr	x0, [x0, #48]
   24db4:	blr	x0
   24db8:	cmp	w0, #0x0
   24dbc:	b.le	24e6c <acc_init@@OACC_2.0+0x10c>
   24dc0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24dc4:	ldr	w1, [x1, #1616]
   24dc8:	cmp	w0, w1
   24dcc:	b.le	24e6c <acc_init@@OACC_2.0+0x10c>
   24dd0:	sxtw	x0, w1
   24dd4:	add	x19, x0, w1, sxtw #2
   24dd8:	lsl	x19, x19, #2
   24ddc:	sub	x19, x19, x0
   24de0:	add	x19, x20, x19, lsl #4
   24de4:	add	x21, x19, #0xa8
   24de8:	mov	w0, #0x1                   	// #1
   24dec:	ldaxr	w1, [x21]
   24df0:	cbnz	w1, 24dfc <acc_init@@OACC_2.0+0x9c>
   24df4:	stxr	w2, w0, [x21]
   24df8:	cbnz	w2, 24dec <acc_init@@OACC_2.0+0x8c>
   24dfc:	cmp	w1, #0x0
   24e00:	b.ne	24e80 <acc_init@@OACC_2.0+0x120>  // b.any
   24e04:	ldr	w0, [x19, #172]
   24e08:	cmp	w0, #0x1
   24e0c:	b.eq	24e8c <acc_init@@OACC_2.0+0x12c>  // b.none
   24e10:	mov	x0, x19
   24e14:	bl	210dc <GOMP_offload_unregister@@GOMP_4.0.1+0x24>
   24e18:	ldxr	w0, [x21]
   24e1c:	stlxr	w1, wzr, [x21]
   24e20:	cbnz	w1, 24e18 <acc_init@@OACC_2.0+0xb8>
   24e24:	tbnz	w0, #31, 24ea0 <acc_init@@OACC_2.0+0x140>
   24e28:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24e2c:	add	x1, x1, #0x590
   24e30:	str	x20, [x1, #64]
   24e34:	add	x0, x1, #0x30
   24e38:	ldxr	w1, [x0]
   24e3c:	stlxr	w2, wzr, [x0]
   24e40:	cbnz	w2, 24e38 <acc_init@@OACC_2.0+0xd8>
   24e44:	tbnz	w1, #31, 24eac <acc_init@@OACC_2.0+0x14c>
   24e48:	mov	w0, #0xffffffff            	// #-1
   24e4c:	bl	24ba0 <GOACC_declare@@GOACC_2.0.1+0x850>
   24e50:	ldp	x19, x20, [sp, #16]
   24e54:	ldr	x21, [sp, #32]
   24e58:	ldp	x29, x30, [sp], #48
   24e5c:	ret
   24e60:	mov	x0, x2
   24e64:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24e68:	b	24da0 <acc_init@@OACC_2.0+0x40>
   24e6c:	mov	w2, w0
   24e70:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24e74:	ldr	w1, [x0, #1616]
   24e78:	mov	w0, w19
   24e7c:	bl	24708 <GOACC_declare@@GOACC_2.0.1+0x3b8>
   24e80:	mov	x0, x21
   24e84:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24e88:	b	24e04 <acc_init@@OACC_2.0+0xa4>
   24e8c:	mov	x0, x21
   24e90:	bl	24660 <GOACC_declare@@GOACC_2.0.1+0x310>
   24e94:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   24e98:	add	x0, x0, #0xd30
   24e9c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   24ea0:	mov	x0, x21
   24ea4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24ea8:	b	24e28 <acc_init@@OACC_2.0+0xc8>
   24eac:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24eb0:	add	x0, x0, #0x590
   24eb4:	add	x0, x0, #0x30
   24eb8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24ebc:	b	24e48 <acc_init@@OACC_2.0+0xe8>

0000000000024ec0 <acc_shutdown@@OACC_2.0>:
   24ec0:	stp	x29, x30, [sp, #-80]!
   24ec4:	mov	x29, sp
   24ec8:	stp	x19, x20, [sp, #16]
   24ecc:	stp	x21, x22, [sp, #32]
   24ed0:	stp	x23, x24, [sp, #48]
   24ed4:	str	x25, [sp, #64]
   24ed8:	mov	w19, w0
   24edc:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   24ee0:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24ee4:	add	x2, x2, #0x590
   24ee8:	add	x2, x2, #0x30
   24eec:	mov	w0, #0x1                   	// #1
   24ef0:	ldaxr	w1, [x2]
   24ef4:	cbnz	w1, 24f00 <acc_shutdown@@OACC_2.0+0x40>
   24ef8:	stxr	w3, w0, [x2]
   24efc:	cbnz	w3, 24ef0 <acc_shutdown@@OACC_2.0+0x30>
   24f00:	cmp	w1, #0x0
   24f04:	b.ne	24fd0 <acc_shutdown@@OACC_2.0+0x110>  // b.any
   24f08:	mov	w1, #0x1                   	// #1
   24f0c:	mov	w0, w19
   24f10:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   24f14:	mov	x20, x0
   24f18:	ldr	x0, [x0, #48]
   24f1c:	blr	x0
   24f20:	mov	w21, w0
   24f24:	cmp	w0, #0x0
   24f28:	b.le	24f94 <acc_shutdown@@OACC_2.0+0xd4>
   24f2c:	add	x19, x20, #0xa8
   24f30:	sub	w0, w0, #0x1
   24f34:	add	x22, x0, x0, lsl #2
   24f38:	lsl	x22, x22, #2
   24f3c:	sub	x22, x22, x0
   24f40:	add	x0, x20, #0x1d8
   24f44:	add	x22, x0, x22, lsl #4
   24f48:	mov	w25, #0x1                   	// #1
   24f4c:	nop
   24f50:	sub	x24, x19, #0xa8
   24f54:	mov	x23, x19
   24f58:	ldaxr	w1, [x19]
   24f5c:	cbnz	w1, 24f68 <acc_shutdown@@OACC_2.0+0xa8>
   24f60:	stxr	w0, w25, [x19]
   24f64:	cbnz	w0, 24f58 <acc_shutdown@@OACC_2.0+0x98>
   24f68:	cmp	w1, #0x0
   24f6c:	b.ne	24fdc <acc_shutdown@@OACC_2.0+0x11c>  // b.any
   24f70:	mov	x0, x24
   24f74:	bl	212d8 <GOMP_offload_unregister@@GOMP_4.0.1+0x220>
   24f78:	ldxr	w0, [x23]
   24f7c:	stlxr	w1, wzr, [x23]
   24f80:	cbnz	w1, 24f78 <acc_shutdown@@OACC_2.0+0xb8>
   24f84:	tbnz	w0, #31, 24fe8 <acc_shutdown@@OACC_2.0+0x128>
   24f88:	add	x19, x19, #0x130
   24f8c:	cmp	x19, x22
   24f90:	b.ne	24f50 <acc_shutdown@@OACC_2.0+0x90>  // b.any
   24f94:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24f98:	add	x0, x0, #0x590
   24f9c:	add	x0, x0, #0x34
   24fa0:	mov	w2, #0x1                   	// #1
   24fa4:	ldaxr	w1, [x0]
   24fa8:	cbnz	w1, 24fb4 <acc_shutdown@@OACC_2.0+0xf4>
   24fac:	stxr	w3, w2, [x0]
   24fb0:	cbnz	w3, 24fa4 <acc_shutdown@@OACC_2.0+0xe4>
   24fb4:	cmp	w1, #0x0
   24fb8:	b.ne	24ff4 <acc_shutdown@@OACC_2.0+0x134>  // b.any
   24fbc:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24fc0:	ldr	x19, [x0, #1480]
   24fc4:	cbz	x19, 25110 <acc_shutdown@@OACC_2.0+0x250>
   24fc8:	mov	w22, #0x1                   	// #1
   24fcc:	b	250bc <acc_shutdown@@OACC_2.0+0x1fc>
   24fd0:	mov	x0, x2
   24fd4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24fd8:	b	24f08 <acc_shutdown@@OACC_2.0+0x48>
   24fdc:	mov	x0, x19
   24fe0:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   24fe4:	b	24f70 <acc_shutdown@@OACC_2.0+0xb0>
   24fe8:	mov	x0, x23
   24fec:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   24ff0:	b	24f88 <acc_shutdown@@OACC_2.0+0xc8>
   24ff4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   24ff8:	add	x0, x0, #0x590
   24ffc:	add	x0, x0, #0x34
   25000:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25004:	b	24fbc <acc_shutdown@@OACC_2.0+0xfc>
   25008:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2500c:	add	x0, x0, #0x590
   25010:	add	x0, x0, #0x34
   25014:	ldxr	w1, [x0]
   25018:	stlxr	w2, wzr, [x0]
   2501c:	cbnz	w2, 25014 <acc_shutdown@@OACC_2.0+0x154>
   25020:	tbnz	w1, #31, 25030 <acc_shutdown@@OACC_2.0+0x170>
   25024:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25028:	add	x0, x0, #0xd48
   2502c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25030:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25034:	add	x0, x0, #0x590
   25038:	add	x0, x0, #0x34
   2503c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25040:	b	25024 <acc_shutdown@@OACC_2.0+0x164>
   25044:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25048:	add	x0, x0, #0x590
   2504c:	add	x0, x0, #0x34
   25050:	ldxr	w1, [x0]
   25054:	stlxr	w2, wzr, [x0]
   25058:	cbnz	w2, 25050 <acc_shutdown@@OACC_2.0+0x190>
   2505c:	tbnz	w1, #31, 2506c <acc_shutdown@@OACC_2.0+0x1ac>
   25060:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25064:	add	x0, x0, #0xd68
   25068:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2506c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25070:	add	x0, x0, #0x590
   25074:	add	x0, x0, #0x34
   25078:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2507c:	b	25060 <acc_shutdown@@OACC_2.0+0x1a0>
   25080:	cmp	w1, #0x0
   25084:	b.ne	25100 <acc_shutdown@@OACC_2.0+0x240>  // b.any
   25088:	ldr	x0, [x19, #8]
   2508c:	add	x0, x0, #0xa0
   25090:	bl	21374 <GOMP_offload_unregister@@GOMP_4.0.1+0x2bc>
   25094:	ldr	x0, [x19, #8]
   25098:	add	x0, x0, #0xa8
   2509c:	ldxr	w1, [x0]
   250a0:	stlxr	w2, wzr, [x0]
   250a4:	cbnz	w2, 2509c <acc_shutdown@@OACC_2.0+0x1dc>
   250a8:	tbnz	w1, #31, 25108 <acc_shutdown@@OACC_2.0+0x248>
   250ac:	str	xzr, [x19, #8]
   250b0:	str	xzr, [x19]
   250b4:	ldr	x19, [x19, #32]
   250b8:	cbz	x19, 25110 <acc_shutdown@@OACC_2.0+0x250>
   250bc:	ldr	x0, [x19, #40]
   250c0:	cbz	x0, 250cc <acc_shutdown@@OACC_2.0+0x20c>
   250c4:	ldr	x1, [x20, #264]
   250c8:	blr	x1
   250cc:	str	xzr, [x19, #40]
   250d0:	ldr	x0, [x19, #24]
   250d4:	cbnz	x0, 25008 <acc_shutdown@@OACC_2.0+0x148>
   250d8:	ldr	x0, [x19, #16]
   250dc:	cbnz	x0, 25044 <acc_shutdown@@OACC_2.0+0x184>
   250e0:	ldr	x0, [x19, #8]
   250e4:	cbz	x0, 250b4 <acc_shutdown@@OACC_2.0+0x1f4>
   250e8:	add	x0, x0, #0xa8
   250ec:	ldaxr	w1, [x0]
   250f0:	cbnz	w1, 25080 <acc_shutdown@@OACC_2.0+0x1c0>
   250f4:	stxr	w2, w22, [x0]
   250f8:	cbz	w2, 25080 <acc_shutdown@@OACC_2.0+0x1c0>
   250fc:	b	250ec <acc_shutdown@@OACC_2.0+0x22c>
   25100:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25104:	b	25088 <acc_shutdown@@OACC_2.0+0x1c8>
   25108:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2510c:	b	250ac <acc_shutdown@@OACC_2.0+0x1ec>
   25110:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25114:	add	x0, x0, #0x590
   25118:	add	x0, x0, #0x34
   2511c:	ldxr	w1, [x0]
   25120:	stlxr	w2, wzr, [x0]
   25124:	cbnz	w2, 2511c <acc_shutdown@@OACC_2.0+0x25c>
   25128:	tbnz	w1, #31, 25160 <acc_shutdown@@OACC_2.0+0x2a0>
   2512c:	cmp	w21, #0x0
   25130:	b.le	25234 <acc_shutdown@@OACC_2.0+0x374>
   25134:	add	x22, x20, #0xa8
   25138:	sub	w21, w21, #0x1
   2513c:	add	x0, x21, x21, lsl #2
   25140:	lsl	x0, x0, #2
   25144:	sub	x21, x0, x21
   25148:	add	x20, x20, #0x1d8
   2514c:	add	x20, x20, x21, lsl #4
   25150:	mov	w24, #0x0                   	// #0
   25154:	mov	w21, #0x1                   	// #1
   25158:	mov	w23, w21
   2515c:	b	2519c <acc_shutdown@@OACC_2.0+0x2dc>
   25160:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25164:	add	x0, x0, #0x590
   25168:	add	x0, x0, #0x34
   2516c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25170:	b	2512c <acc_shutdown@@OACC_2.0+0x26c>
   25174:	mov	x0, x22
   25178:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   2517c:	b	251b8 <acc_shutdown@@OACC_2.0+0x2f8>
   25180:	ldxr	w0, [x19]
   25184:	stlxr	w1, wzr, [x19]
   25188:	cbnz	w1, 25180 <acc_shutdown@@OACC_2.0+0x2c0>
   2518c:	tbnz	w0, #31, 251e0 <acc_shutdown@@OACC_2.0+0x320>
   25190:	add	x22, x22, #0x130
   25194:	cmp	x20, x22
   25198:	b.eq	251ec <acc_shutdown@@OACC_2.0+0x32c>  // b.none
   2519c:	mov	x19, x22
   251a0:	ldaxr	w1, [x22]
   251a4:	cbnz	w1, 251b0 <acc_shutdown@@OACC_2.0+0x2f0>
   251a8:	stxr	w0, w23, [x22]
   251ac:	cbnz	w0, 251a0 <acc_shutdown@@OACC_2.0+0x2e0>
   251b0:	cmp	w1, #0x0
   251b4:	b.ne	25174 <acc_shutdown@@OACC_2.0+0x2b4>  // b.any
   251b8:	ldr	w0, [x19, #4]
   251bc:	cmp	w0, #0x1
   251c0:	b.ne	25180 <acc_shutdown@@OACC_2.0+0x2c0>  // b.any
   251c4:	ldur	x1, [x19, #-104]
   251c8:	ldur	w0, [x19, #-156]
   251cc:	blr	x1
   251d0:	and	w21, w21, w0
   251d4:	str	wzr, [x19, #4]
   251d8:	mov	w24, w23
   251dc:	b	25180 <acc_shutdown@@OACC_2.0+0x2c0>
   251e0:	mov	x0, x19
   251e4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   251e8:	b	25190 <acc_shutdown@@OACC_2.0+0x2d0>
   251ec:	cbz	w21, 25228 <acc_shutdown@@OACC_2.0+0x368>
   251f0:	cbz	w24, 25234 <acc_shutdown@@OACC_2.0+0x374>
   251f4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   251f8:	add	x0, x0, #0x590
   251fc:	add	x0, x0, #0x30
   25200:	ldxr	w1, [x0]
   25204:	stlxr	w2, wzr, [x0]
   25208:	cbnz	w2, 25200 <acc_shutdown@@OACC_2.0+0x340>
   2520c:	tbnz	w1, #31, 25240 <acc_shutdown@@OACC_2.0+0x380>
   25210:	ldp	x19, x20, [sp, #16]
   25214:	ldp	x21, x22, [sp, #32]
   25218:	ldp	x23, x24, [sp, #48]
   2521c:	ldr	x25, [sp, #64]
   25220:	ldp	x29, x30, [sp], #80
   25224:	ret
   25228:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2522c:	add	x0, x0, #0x520
   25230:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25234:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25238:	add	x0, x0, #0xd88
   2523c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25240:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25244:	add	x0, x0, #0x590
   25248:	add	x0, x0, #0x30
   2524c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25250:	b	25210 <acc_shutdown@@OACC_2.0+0x350>
   25254:	nop

0000000000025258 <acc_get_num_devices@@OACC_2.0>:
   25258:	stp	x29, x30, [sp, #-32]!
   2525c:	mov	x29, sp
   25260:	str	x19, [sp, #16]
   25264:	mov	w19, w0
   25268:	cbnz	w0, 2527c <acc_get_num_devices@@OACC_2.0+0x24>
   2526c:	mov	w0, w19
   25270:	ldr	x19, [sp, #16]
   25274:	ldp	x29, x30, [sp], #32
   25278:	ret
   2527c:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   25280:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25284:	add	x0, x0, #0x590
   25288:	add	x0, x0, #0x30
   2528c:	mov	w2, #0x1                   	// #1
   25290:	ldaxr	w1, [x0]
   25294:	cbnz	w1, 252a0 <acc_get_num_devices@@OACC_2.0+0x48>
   25298:	stxr	w3, w2, [x0]
   2529c:	cbnz	w3, 25290 <acc_get_num_devices@@OACC_2.0+0x38>
   252a0:	cmp	w1, #0x0
   252a4:	b.ne	252ec <acc_get_num_devices@@OACC_2.0+0x94>  // b.any
   252a8:	mov	w1, #0x0                   	// #0
   252ac:	mov	w0, w19
   252b0:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   252b4:	mov	x19, x0
   252b8:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   252bc:	add	x1, x1, #0x590
   252c0:	add	x1, x1, #0x30
   252c4:	ldxr	w0, [x1]
   252c8:	stlxr	w2, wzr, [x1]
   252cc:	cbnz	w2, 252c4 <acc_get_num_devices@@OACC_2.0+0x6c>
   252d0:	tbnz	w0, #31, 25300 <acc_get_num_devices@@OACC_2.0+0xa8>
   252d4:	cbz	x19, 2530c <acc_get_num_devices@@OACC_2.0+0xb4>
   252d8:	ldr	x0, [x19, #48]
   252dc:	blr	x0
   252e0:	cmp	w0, #0x0
   252e4:	csel	w19, w0, wzr, ge  // ge = tcont
   252e8:	b	2526c <acc_get_num_devices@@OACC_2.0+0x14>
   252ec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   252f0:	add	x0, x0, #0x590
   252f4:	add	x0, x0, #0x30
   252f8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   252fc:	b	252a8 <acc_get_num_devices@@OACC_2.0+0x50>
   25300:	mov	x0, x1
   25304:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25308:	b	252d4 <acc_get_num_devices@@OACC_2.0+0x7c>
   2530c:	mov	w19, #0x0                   	// #0
   25310:	b	2526c <acc_get_num_devices@@OACC_2.0+0x14>
   25314:	nop

0000000000025318 <acc_set_device_type@@OACC_2.0>:
   25318:	stp	x29, x30, [sp, #-48]!
   2531c:	mov	x29, sp
   25320:	stp	x19, x20, [sp, #16]
   25324:	stp	x21, x22, [sp, #32]
   25328:	mov	w19, w0
   2532c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25330:	ldr	x0, [x0, #4008]
   25334:	mrs	x1, tpidr_el0
   25338:	ldr	x20, [x1, x0]
   2533c:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   25340:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25344:	add	x2, x2, #0x590
   25348:	add	x2, x2, #0x30
   2534c:	mov	w0, #0x1                   	// #1
   25350:	ldaxr	w1, [x2]
   25354:	cbnz	w1, 25360 <acc_set_device_type@@OACC_2.0+0x48>
   25358:	stxr	w3, w0, [x2]
   2535c:	cbnz	w3, 25350 <acc_set_device_type@@OACC_2.0+0x38>
   25360:	cmp	w1, #0x0
   25364:	b.ne	25424 <acc_set_device_type@@OACC_2.0+0x10c>  // b.any
   25368:	mov	w1, #0x1                   	// #1
   2536c:	mov	w0, w19
   25370:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   25374:	mov	x21, x0
   25378:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2537c:	str	x21, [x0, #1488]
   25380:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25384:	ldrsw	x0, [x0, #1616]
   25388:	add	x19, x0, x0, lsl #2
   2538c:	lsl	x19, x19, #2
   25390:	sub	x19, x19, x0
   25394:	add	x19, x21, x19, lsl #4
   25398:	add	x22, x19, #0xa8
   2539c:	mov	w0, #0x1                   	// #1
   253a0:	ldaxr	w1, [x22]
   253a4:	cbnz	w1, 253b0 <acc_set_device_type@@OACC_2.0+0x98>
   253a8:	stxr	w2, w0, [x22]
   253ac:	cbnz	w2, 253a0 <acc_set_device_type@@OACC_2.0+0x88>
   253b0:	cmp	w1, #0x0
   253b4:	b.ne	25430 <acc_set_device_type@@OACC_2.0+0x118>  // b.any
   253b8:	ldr	w0, [x19, #172]
   253bc:	cbz	w0, 2543c <acc_set_device_type@@OACC_2.0+0x124>
   253c0:	ldxr	w0, [x22]
   253c4:	stlxr	w1, wzr, [x22]
   253c8:	cbnz	w1, 253c0 <acc_set_device_type@@OACC_2.0+0xa8>
   253cc:	tbnz	w0, #31, 25448 <acc_set_device_type@@OACC_2.0+0x130>
   253d0:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   253d4:	add	x1, x1, #0x590
   253d8:	add	x1, x1, #0x30
   253dc:	ldxr	w0, [x1]
   253e0:	stlxr	w2, wzr, [x1]
   253e4:	cbnz	w2, 253dc <acc_set_device_type@@OACC_2.0+0xc4>
   253e8:	tbnz	w0, #31, 25454 <acc_set_device_type@@OACC_2.0+0x13c>
   253ec:	cbz	x20, 2540c <acc_set_device_type@@OACC_2.0+0xf4>
   253f0:	ldr	x0, [x20]
   253f4:	cmp	x0, x21
   253f8:	b.eq	2540c <acc_set_device_type@@OACC_2.0+0xf4>  // b.none
   253fc:	str	xzr, [x20, #8]
   25400:	str	xzr, [x20]
   25404:	ldr	x0, [x20, #24]
   25408:	cbnz	x0, 25460 <acc_set_device_type@@OACC_2.0+0x148>
   2540c:	mov	w0, #0xffffffff            	// #-1
   25410:	bl	24ba0 <GOACC_declare@@GOACC_2.0.1+0x850>
   25414:	ldp	x19, x20, [sp, #16]
   25418:	ldp	x21, x22, [sp, #32]
   2541c:	ldp	x29, x30, [sp], #48
   25420:	ret
   25424:	mov	x0, x2
   25428:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   2542c:	b	25368 <acc_set_device_type@@OACC_2.0+0x50>
   25430:	mov	x0, x22
   25434:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25438:	b	253b8 <acc_set_device_type@@OACC_2.0+0xa0>
   2543c:	mov	x0, x19
   25440:	bl	210dc <GOMP_offload_unregister@@GOMP_4.0.1+0x24>
   25444:	b	253c0 <acc_set_device_type@@OACC_2.0+0xa8>
   25448:	mov	x0, x22
   2544c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25450:	b	253d0 <acc_set_device_type@@OACC_2.0+0xb8>
   25454:	mov	x0, x1
   25458:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2545c:	b	253ec <acc_set_device_type@@OACC_2.0+0xd4>
   25460:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25464:	add	x0, x0, #0xda0
   25468:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2546c:	nop

0000000000025470 <acc_get_device_type@@OACC_2.0>:
   25470:	stp	x29, x30, [sp, #-32]!
   25474:	mov	x29, sp
   25478:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2547c:	ldr	x0, [x0, #4008]
   25480:	mrs	x1, tpidr_el0
   25484:	ldr	x0, [x1, x0]
   25488:	cbz	x0, 254ac <acc_get_device_type@@OACC_2.0+0x3c>
   2548c:	ldr	x0, [x0]
   25490:	cbz	x0, 254ac <acc_get_device_type@@OACC_2.0+0x3c>
   25494:	ldr	w0, [x0, #16]
   25498:	cmp	w0, #0x1
   2549c:	ccmp	w0, #0x4, #0x4, ne  // ne = any
   254a0:	b.eq	25534 <acc_get_device_type@@OACC_2.0+0xc4>  // b.none
   254a4:	ldp	x29, x30, [sp], #32
   254a8:	ret
   254ac:	str	x19, [sp, #16]
   254b0:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   254b4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   254b8:	add	x0, x0, #0x590
   254bc:	add	x0, x0, #0x30
   254c0:	mov	w2, #0x1                   	// #1
   254c4:	ldaxr	w1, [x0]
   254c8:	cbnz	w1, 254d4 <acc_get_device_type@@OACC_2.0+0x64>
   254cc:	stxr	w3, w2, [x0]
   254d0:	cbnz	w3, 254c4 <acc_get_device_type@@OACC_2.0+0x54>
   254d4:	cmp	w1, #0x0
   254d8:	b.ne	25514 <acc_get_device_type@@OACC_2.0+0xa4>  // b.any
   254dc:	mov	w1, #0x1                   	// #1
   254e0:	mov	w0, #0x1                   	// #1
   254e4:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   254e8:	mov	x19, x0
   254ec:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   254f0:	add	x1, x1, #0x590
   254f4:	add	x1, x1, #0x30
   254f8:	ldxr	w0, [x1]
   254fc:	stlxr	w2, wzr, [x1]
   25500:	cbnz	w2, 254f8 <acc_get_device_type@@OACC_2.0+0x88>
   25504:	tbnz	w0, #31, 25528 <acc_get_device_type@@OACC_2.0+0xb8>
   25508:	ldr	w0, [x19, #16]
   2550c:	ldr	x19, [sp, #16]
   25510:	b	25498 <acc_get_device_type@@OACC_2.0+0x28>
   25514:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25518:	add	x0, x0, #0x590
   2551c:	add	x0, x0, #0x30
   25520:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25524:	b	254dc <acc_get_device_type@@OACC_2.0+0x6c>
   25528:	mov	x0, x1
   2552c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25530:	b	25508 <acc_get_device_type@@OACC_2.0+0x98>
   25534:	str	x19, [sp, #16]
   25538:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2553c:	add	x3, x3, #0xe20
   25540:	add	x3, x3, #0x60
   25544:	mov	w2, #0x226                 	// #550
   25548:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2554c:	add	x1, x1, #0xbd0
   25550:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25554:	add	x0, x0, #0xdd0
   25558:	bl	8ab0 <__assert_fail@plt>
   2555c:	nop

0000000000025560 <acc_get_device_num@@OACC_2.0>:
   25560:	stp	x29, x30, [sp, #-32]!
   25564:	mov	x29, sp
   25568:	stp	x19, x20, [sp, #16]
   2556c:	mov	w19, w0
   25570:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25574:	ldr	x0, [x0, #4008]
   25578:	mrs	x1, tpidr_el0
   2557c:	ldr	x20, [x1, x0]
   25580:	cmp	w19, #0x5
   25584:	b.gt	25604 <acc_get_device_num@@OACC_2.0+0xa4>
   25588:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   2558c:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25590:	add	x2, x2, #0x590
   25594:	add	x2, x2, #0x30
   25598:	mov	w0, #0x1                   	// #1
   2559c:	ldaxr	w1, [x2]
   255a0:	cbnz	w1, 255ac <acc_get_device_num@@OACC_2.0+0x4c>
   255a4:	stxr	w3, w0, [x2]
   255a8:	cbnz	w3, 2559c <acc_get_device_num@@OACC_2.0+0x3c>
   255ac:	cmp	w1, #0x0
   255b0:	b.ne	25614 <acc_get_device_num@@OACC_2.0+0xb4>  // b.any
   255b4:	mov	w1, #0x1                   	// #1
   255b8:	mov	w0, w19
   255bc:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   255c0:	mov	x19, x0
   255c4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   255c8:	add	x1, x1, #0x590
   255cc:	add	x1, x1, #0x30
   255d0:	ldxr	w0, [x1]
   255d4:	stlxr	w2, wzr, [x1]
   255d8:	cbnz	w2, 255d0 <acc_get_device_num@@OACC_2.0+0x70>
   255dc:	tbnz	w0, #31, 25620 <acc_get_device_num@@OACC_2.0+0xc0>
   255e0:	cbz	x20, 255f0 <acc_get_device_num@@OACC_2.0+0x90>
   255e4:	ldr	x0, [x20]
   255e8:	cmp	x0, x19
   255ec:	b.eq	2562c <acc_get_device_num@@OACC_2.0+0xcc>  // b.none
   255f0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   255f4:	ldr	w0, [x0, #1616]
   255f8:	ldp	x19, x20, [sp, #16]
   255fc:	ldp	x29, x30, [sp], #32
   25600:	ret
   25604:	mov	w1, w19
   25608:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2560c:	add	x0, x0, #0xb48
   25610:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25614:	mov	x0, x2
   25618:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   2561c:	b	255b4 <acc_get_device_num@@OACC_2.0+0x54>
   25620:	mov	x0, x1
   25624:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25628:	b	255e0 <acc_get_device_num@@OACC_2.0+0x80>
   2562c:	ldr	x0, [x20, #8]
   25630:	cbz	x0, 255f0 <acc_get_device_num@@OACC_2.0+0x90>
   25634:	ldr	w0, [x0, #12]
   25638:	b	255f8 <acc_get_device_num@@OACC_2.0+0x98>
   2563c:	nop

0000000000025640 <acc_set_device_num@@OACC_2.0>:
   25640:	stp	x29, x30, [sp, #-48]!
   25644:	mov	x29, sp
   25648:	stp	x19, x20, [sp, #16]
   2564c:	stp	x21, x22, [sp, #32]
   25650:	mov	w19, w0
   25654:	mov	w21, w1
   25658:	bl	1f174 <omp_get_place_proc_ids@@OMP_4.5+0x184c>
   2565c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25660:	ldr	w0, [x0, #1616]
   25664:	cmp	w19, #0x0
   25668:	csel	w19, w0, w19, lt  // lt = tstop
   2566c:	cbz	w21, 25750 <acc_set_device_num@@OACC_2.0+0x110>
   25670:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25674:	add	x0, x0, #0x590
   25678:	add	x0, x0, #0x30
   2567c:	mov	w2, #0x1                   	// #1
   25680:	ldaxr	w1, [x0]
   25684:	cbnz	w1, 25690 <acc_set_device_num@@OACC_2.0+0x50>
   25688:	stxr	w3, w2, [x0]
   2568c:	cbnz	w3, 25680 <acc_set_device_num@@OACC_2.0+0x40>
   25690:	cmp	w1, #0x0
   25694:	b.ne	2575c <acc_set_device_num@@OACC_2.0+0x11c>  // b.any
   25698:	mov	w1, #0x1                   	// #1
   2569c:	mov	w0, w21
   256a0:	bl	24738 <GOACC_declare@@GOACC_2.0.1+0x3e8>
   256a4:	mov	x22, x0
   256a8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   256ac:	str	x22, [x0, #1488]
   256b0:	ldr	x0, [x22, #48]
   256b4:	blr	x0
   256b8:	cmp	w19, #0x0
   256bc:	csel	w1, w19, wzr, ge  // ge = tcont
   256c0:	cmp	w0, w1
   256c4:	b.le	25770 <acc_set_device_num@@OACC_2.0+0x130>
   256c8:	sxtw	x0, w19
   256cc:	add	x20, x0, w19, sxtw #2
   256d0:	lsl	x20, x20, #2
   256d4:	sub	x20, x20, x0
   256d8:	add	x20, x22, x20, lsl #4
   256dc:	add	x21, x20, #0xa8
   256e0:	mov	w0, #0x1                   	// #1
   256e4:	ldaxr	w1, [x21]
   256e8:	cbnz	w1, 256f4 <acc_set_device_num@@OACC_2.0+0xb4>
   256ec:	stxr	w2, w0, [x21]
   256f0:	cbnz	w2, 256e4 <acc_set_device_num@@OACC_2.0+0xa4>
   256f4:	cmp	w1, #0x0
   256f8:	b.ne	25780 <acc_set_device_num@@OACC_2.0+0x140>  // b.any
   256fc:	ldr	w0, [x20, #172]
   25700:	cbz	w0, 2578c <acc_set_device_num@@OACC_2.0+0x14c>
   25704:	ldxr	w0, [x21]
   25708:	stlxr	w1, wzr, [x21]
   2570c:	cbnz	w1, 25704 <acc_set_device_num@@OACC_2.0+0xc4>
   25710:	tbnz	w0, #31, 25798 <acc_set_device_num@@OACC_2.0+0x158>
   25714:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25718:	add	x0, x0, #0x590
   2571c:	add	x0, x0, #0x30
   25720:	ldxr	w1, [x0]
   25724:	stlxr	w2, wzr, [x0]
   25728:	cbnz	w2, 25720 <acc_set_device_num@@OACC_2.0+0xe0>
   2572c:	tbnz	w1, #31, 257a4 <acc_set_device_num@@OACC_2.0+0x164>
   25730:	mov	w0, w19
   25734:	bl	24ba0 <GOACC_declare@@GOACC_2.0.1+0x850>
   25738:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2573c:	str	w19, [x0, #1616]
   25740:	ldp	x19, x20, [sp, #16]
   25744:	ldp	x21, x22, [sp, #32]
   25748:	ldp	x29, x30, [sp], #48
   2574c:	ret
   25750:	mov	w0, w19
   25754:	bl	24ba0 <GOACC_declare@@GOACC_2.0.1+0x850>
   25758:	b	25738 <acc_set_device_num@@OACC_2.0+0xf8>
   2575c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25760:	add	x0, x0, #0x590
   25764:	add	x0, x0, #0x30
   25768:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   2576c:	b	25698 <acc_set_device_num@@OACC_2.0+0x58>
   25770:	mov	w2, w0
   25774:	mov	w1, w19
   25778:	mov	w0, w21
   2577c:	bl	24708 <GOACC_declare@@GOACC_2.0.1+0x3b8>
   25780:	mov	x0, x21
   25784:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25788:	b	256fc <acc_set_device_num@@OACC_2.0+0xbc>
   2578c:	mov	x0, x20
   25790:	bl	210dc <GOMP_offload_unregister@@GOMP_4.0.1+0x24>
   25794:	b	25704 <acc_set_device_num@@OACC_2.0+0xc4>
   25798:	mov	x0, x21
   2579c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   257a0:	b	25714 <acc_set_device_num@@OACC_2.0+0xd4>
   257a4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   257a8:	add	x0, x0, #0x590
   257ac:	add	x0, x0, #0x30
   257b0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   257b4:	b	25730 <acc_set_device_num@@OACC_2.0+0xf0>

00000000000257b8 <acc_on_device@@OACC_2.0>:
   257b8:	tst	w0, #0xfffffffd
   257bc:	cset	w0, eq  // eq = none
   257c0:	ret
   257c4:	nop
   257c8:	stp	x29, x30, [sp, #-32]!
   257cc:	mov	x29, sp
   257d0:	str	x19, [sp, #16]
   257d4:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   257d8:	add	x19, x19, #0x590
   257dc:	str	wzr, [x19, #48]
   257e0:	adrp	x1, 24000 <GOACC_enter_exit_data@@GOACC_2.0+0x2a0>
   257e4:	add	x1, x1, #0x958
   257e8:	add	x0, x19, #0x48
   257ec:	bl	8640 <pthread_key_create@plt>
   257f0:	str	xzr, [x19, #64]
   257f4:	str	xzr, [x19, #56]
   257f8:	str	wzr, [x19, #52]
   257fc:	bl	24640 <GOACC_declare@@GOACC_2.0.1+0x2f0>
   25800:	ldr	x19, [sp, #16]
   25804:	ldp	x29, x30, [sp], #32
   25808:	ret
   2580c:	nop
   25810:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25814:	ldr	x1, [x1, #4008]
   25818:	mrs	x2, tpidr_el0
   2581c:	ldr	x1, [x2, x1]
   25820:	ldr	x2, [x1, #16]
   25824:	cbnz	x2, 25844 <acc_on_device@@OACC_2.0+0x8c>
   25828:	ldr	x2, [x1, #8]
   2582c:	str	x2, [x1, #16]
   25830:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   25834:	add	x2, x2, #0x590
   25838:	ldr	x0, [x2, w0, sxtw #3]
   2583c:	str	x0, [x1, #8]
   25840:	ret
   25844:	stp	x29, x30, [sp, #-16]!
   25848:	mov	x29, sp
   2584c:	adrp	x3, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25850:	add	x3, x3, #0xe20
   25854:	add	x3, x3, #0x78
   25858:	mov	w2, #0x29b                 	// #667
   2585c:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25860:	add	x1, x1, #0xbd0
   25864:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25868:	add	x0, x0, #0xe08
   2586c:	bl	8ab0 <__assert_fail@plt>
   25870:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25874:	ldr	x0, [x0, #4008]
   25878:	mrs	x1, tpidr_el0
   2587c:	ldr	x0, [x1, x0]
   25880:	ldr	x1, [x0, #16]
   25884:	str	x1, [x0, #8]
   25888:	str	xzr, [x0, #16]
   2588c:	ret
   25890:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25894:	ldr	x0, [x0, #4008]
   25898:	mrs	x1, tpidr_el0
   2589c:	ldr	x0, [x1, x0]
   258a0:	cbz	x0, 258b0 <acc_on_device@@OACC_2.0+0xf8>
   258a4:	ldr	x0, [x0, #8]
   258a8:	cbz	x0, 258b0 <acc_on_device@@OACC_2.0+0xf8>
   258ac:	ret
   258b0:	stp	x29, x30, [sp, #-16]!
   258b4:	mov	x29, sp
   258b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   258bc:	ldr	x0, [x0, #1488]
   258c0:	cbz	x0, 258d4 <acc_on_device@@OACC_2.0+0x11c>
   258c4:	mov	w0, #0xffffffff            	// #-1
   258c8:	bl	24ba0 <GOACC_declare@@GOACC_2.0.1+0x850>
   258cc:	ldp	x29, x30, [sp], #16
   258d0:	ret
   258d4:	mov	w0, #0x1                   	// #1
   258d8:	bl	8970 <acc_init@plt>
   258dc:	b	258cc <acc_on_device@@OACC_2.0+0x114>
   258e0:	cbz	x0, 25954 <acc_on_device@@OACC_2.0+0x19c>
   258e4:	add	x3, x1, x2
   258e8:	b	258f4 <acc_on_device@@OACC_2.0+0x13c>
   258ec:	ldr	x0, [x0, #40]
   258f0:	cbz	x0, 25954 <acc_on_device@@OACC_2.0+0x19c>
   258f4:	ldr	x4, [x0, #16]
   258f8:	cmp	x4, x1
   258fc:	b.hi	258ec <acc_on_device@@OACC_2.0+0x134>  // b.pmore
   25900:	ldr	x2, [x0, #24]
   25904:	cmp	x2, x3
   25908:	b.cc	258ec <acc_on_device@@OACC_2.0+0x134>  // b.lo, b.ul, b.last
   2590c:	ldr	x7, [x0, #48]
   25910:	cbz	x7, 25958 <acc_on_device@@OACC_2.0+0x1a0>
   25914:	ldr	x3, [x0, #8]
   25918:	mov	x5, #0x0                   	// #0
   2591c:	mov	x0, x3
   25920:	ldr	x2, [x3, #24]
   25924:	ldr	x6, [x3]
   25928:	add	x2, x2, x6
   2592c:	sub	x2, x2, x4
   25930:	add	x2, x1, x2
   25934:	ldr	x6, [x3, #8]
   25938:	cmp	x2, x6
   2593c:	b.ls	25954 <acc_on_device@@OACC_2.0+0x19c>  // b.plast
   25940:	add	x5, x5, #0x1
   25944:	add	x3, x3, #0x48
   25948:	cmp	x7, x5
   2594c:	b.ne	2591c <acc_on_device@@OACC_2.0+0x164>  // b.any
   25950:	mov	x0, #0x0                   	// #0
   25954:	ret
   25958:	mov	x0, #0x0                   	// #0
   2595c:	b	25954 <acc_on_device@@OACC_2.0+0x19c>
   25960:	ldxr	w1, [x0]
   25964:	stlxr	w2, wzr, [x0]
   25968:	cbnz	w2, 25960 <acc_on_device@@OACC_2.0+0x1a8>
   2596c:	tbnz	w1, #31, 25974 <acc_on_device@@OACC_2.0+0x1bc>
   25970:	ret
   25974:	stp	x29, x30, [sp, #-16]!
   25978:	mov	x29, sp
   2597c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25980:	ldp	x29, x30, [sp], #16
   25984:	ret
   25988:	stp	x29, x30, [sp, #-80]!
   2598c:	mov	x29, sp
   25990:	stp	x19, x20, [sp, #16]
   25994:	stp	x21, x22, [sp, #32]
   25998:	stp	x23, x24, [sp, #48]
   2599c:	str	x25, [sp, #64]
   259a0:	and	w25, w0, #0xff
   259a4:	mov	x21, x1
   259a8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   259ac:	ldr	x0, [x0, #4048]
   259b0:	mrs	x1, tpidr_el0
   259b4:	ldr	x20, [x1, x0]
   259b8:	cbz	x20, 25a48 <acc_on_device@@OACC_2.0+0x290>
   259bc:	mov	x22, x2
   259c0:	mov	x23, x3
   259c4:	mov	w19, w4
   259c8:	mov	x24, x5
   259cc:	ldr	x0, [x20, #8]
   259d0:	cbz	x0, 25a48 <acc_on_device@@OACC_2.0+0x290>
   259d4:	ldr	w1, [x0, #8]
   259d8:	tbnz	w1, #0, 25a68 <acc_on_device@@OACC_2.0+0x2b0>
   259dc:	cmn	w4, #0x1
   259e0:	b.lt	259f0 <acc_on_device@@OACC_2.0+0x238>  // b.tstop
   259e4:	ldr	x1, [x0, #248]
   259e8:	mov	w0, w4
   259ec:	blr	x1
   259f0:	cbz	w25, 25a94 <acc_on_device@@OACC_2.0+0x2dc>
   259f4:	ldr	x0, [x20, #8]
   259f8:	ldr	x4, [x0, #112]
   259fc:	mov	x3, x23
   25a00:	mov	x2, x21
   25a04:	mov	x1, x22
   25a08:	ldr	w0, [x0, #12]
   25a0c:	blr	x4
   25a10:	and	w21, w0, #0xff
   25a14:	cmn	w19, #0x1
   25a18:	b.lt	25a2c <acc_on_device@@OACC_2.0+0x274>  // b.tstop
   25a1c:	ldr	x0, [x20, #8]
   25a20:	ldr	x1, [x0, #248]
   25a24:	mov	w0, #0xfffffffe            	// #-2
   25a28:	blr	x1
   25a2c:	cbz	w21, 25ab8 <acc_on_device@@OACC_2.0+0x300>
   25a30:	ldp	x19, x20, [sp, #16]
   25a34:	ldp	x21, x22, [sp, #32]
   25a38:	ldp	x23, x24, [sp, #48]
   25a3c:	ldr	x25, [sp, #64]
   25a40:	ldp	x29, x30, [sp], #80
   25a44:	ret
   25a48:	adrp	x3, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   25a4c:	add	x3, x3, #0xf8
   25a50:	mov	w2, #0xa4                  	// #164
   25a54:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25a58:	add	x1, x1, #0xeb0
   25a5c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25a60:	add	x0, x0, #0xed0
   25a64:	bl	8ab0 <__assert_fail@plt>
   25a68:	cbz	w25, 25a80 <acc_on_device@@OACC_2.0+0x2c8>
   25a6c:	mov	x2, x3
   25a70:	mov	x1, x21
   25a74:	mov	x0, x22
   25a78:	bl	85d0 <memmove@plt>
   25a7c:	b	25a30 <acc_on_device@@OACC_2.0+0x278>
   25a80:	mov	x2, x3
   25a84:	mov	x1, x22
   25a88:	mov	x0, x21
   25a8c:	bl	85d0 <memmove@plt>
   25a90:	b	25a30 <acc_on_device@@OACC_2.0+0x278>
   25a94:	ldr	x0, [x20, #8]
   25a98:	ldr	x4, [x0, #120]
   25a9c:	mov	x3, x23
   25aa0:	mov	x2, x22
   25aa4:	mov	x1, x21
   25aa8:	ldr	w0, [x0, #12]
   25aac:	blr	x4
   25ab0:	and	w21, w0, #0xff
   25ab4:	b	25a14 <acc_on_device@@OACC_2.0+0x25c>
   25ab8:	mov	x1, x24
   25abc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25ac0:	add	x0, x0, #0xee0
   25ac4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25ac8:	stp	x29, x30, [sp, #-80]!
   25acc:	mov	x29, sp
   25ad0:	str	x1, [sp, #24]
   25ad4:	add	x1, x1, x2
   25ad8:	str	x1, [sp, #32]
   25adc:	add	x1, sp, #0x18
   25ae0:	add	x0, x0, #0xa0
   25ae4:	bl	232f0 <omp_pause_resource_all@@OMP_5.0+0x33c>
   25ae8:	ldp	x29, x30, [sp], #80
   25aec:	ret
   25af0:	stp	x29, x30, [sp, #-80]!
   25af4:	mov	x29, sp
   25af8:	stp	x19, x20, [sp, #16]
   25afc:	stp	x21, x22, [sp, #32]
   25b00:	stp	x23, x24, [sp, #48]
   25b04:	mov	w23, w0
   25b08:	mov	x20, x1
   25b0c:	mov	x22, x2
   25b10:	mov	w21, w3
   25b14:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   25b18:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25b1c:	ldr	x1, [x1, #4048]
   25b20:	mrs	x0, tpidr_el0
   25b24:	ldr	x0, [x0, x1]
   25b28:	ldr	x19, [x0, #8]
   25b2c:	ldr	w0, [x19, #8]
   25b30:	tbnz	w0, #0, 25be0 <acc_on_device@@OACC_2.0+0x428>
   25b34:	str	x25, [sp, #64]
   25b38:	add	x24, x19, #0xa8
   25b3c:	mov	w0, #0x1                   	// #1
   25b40:	ldaxr	w1, [x24]
   25b44:	cbnz	w1, 25b50 <acc_on_device@@OACC_2.0+0x398>
   25b48:	stxr	w2, w0, [x24]
   25b4c:	cbnz	w2, 25b40 <acc_on_device@@OACC_2.0+0x388>
   25b50:	cmp	w1, #0x0
   25b54:	b.ne	25bf4 <acc_on_device@@OACC_2.0+0x43c>  // b.any
   25b58:	mov	x2, x22
   25b5c:	mov	x1, x20
   25b60:	mov	x0, x19
   25b64:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   25b68:	cbz	x0, 25c00 <acc_on_device@@OACC_2.0+0x448>
   25b6c:	ldr	x1, [x0, #16]
   25b70:	ldr	x1, [x1, #16]
   25b74:	ldr	x2, [x0]
   25b78:	sub	x1, x1, x2
   25b7c:	ldr	x25, [x0, #24]
   25b80:	add	x25, x20, x25
   25b84:	add	x25, x1, x25
   25b88:	cmn	w21, #0x1
   25b8c:	b.lt	25b9c <acc_on_device@@OACC_2.0+0x3e4>  // b.tstop
   25b90:	ldr	x1, [x19, #248]
   25b94:	mov	w0, w21
   25b98:	blr	x1
   25b9c:	cbz	w23, 25c1c <acc_on_device@@OACC_2.0+0x464>
   25ba0:	ldr	x4, [x19, #120]
   25ba4:	mov	x3, x22
   25ba8:	mov	x2, x20
   25bac:	mov	x1, x25
   25bb0:	ldr	w0, [x19, #12]
   25bb4:	blr	x4
   25bb8:	cmn	w21, #0x1
   25bbc:	b.lt	25bcc <acc_on_device@@OACC_2.0+0x414>  // b.tstop
   25bc0:	ldr	x1, [x19, #248]
   25bc4:	mov	w0, #0xfffffffe            	// #-2
   25bc8:	blr	x1
   25bcc:	ldxr	w0, [x24]
   25bd0:	stlxr	w1, wzr, [x24]
   25bd4:	cbnz	w1, 25bcc <acc_on_device@@OACC_2.0+0x414>
   25bd8:	tbnz	w0, #31, 25c38 <acc_on_device@@OACC_2.0+0x480>
   25bdc:	ldr	x25, [sp, #64]
   25be0:	ldp	x19, x20, [sp, #16]
   25be4:	ldp	x21, x22, [sp, #32]
   25be8:	ldp	x23, x24, [sp, #48]
   25bec:	ldp	x29, x30, [sp], #80
   25bf0:	ret
   25bf4:	mov	x0, x24
   25bf8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25bfc:	b	25b58 <acc_on_device@@OACC_2.0+0x3a0>
   25c00:	mov	x0, x24
   25c04:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25c08:	mov	w2, w22
   25c0c:	mov	x1, x20
   25c10:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25c14:	add	x0, x0, #0xef0
   25c18:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25c1c:	ldr	x4, [x19, #112]
   25c20:	mov	x3, x22
   25c24:	mov	x2, x25
   25c28:	mov	x1, x20
   25c2c:	ldr	w0, [x19, #12]
   25c30:	blr	x4
   25c34:	b	25bb8 <acc_on_device@@OACC_2.0+0x400>
   25c38:	mov	x0, x24
   25c3c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25c40:	ldr	x25, [sp, #64]
   25c44:	b	25be0 <acc_on_device@@OACC_2.0+0x428>
   25c48:	stp	x29, x30, [sp, #-80]!
   25c4c:	mov	x29, sp
   25c50:	stp	x19, x20, [sp, #16]
   25c54:	stp	x21, x22, [sp, #32]
   25c58:	stp	x23, x24, [sp, #48]
   25c5c:	mov	w23, w0
   25c60:	mov	x20, x1
   25c64:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25c68:	ldr	x1, [x1, #4048]
   25c6c:	mrs	x0, tpidr_el0
   25c70:	ldr	x0, [x0, x1]
   25c74:	ldr	x22, [x0, #8]
   25c78:	ldr	w0, [x22, #8]
   25c7c:	tbnz	w0, #0, 25d8c <acc_on_device@@OACC_2.0+0x5d4>
   25c80:	stp	x25, x26, [sp, #64]
   25c84:	mov	x21, x2
   25c88:	mov	w25, w3
   25c8c:	add	x24, x22, #0xa8
   25c90:	mov	w0, #0x1                   	// #1
   25c94:	ldaxr	w1, [x24]
   25c98:	cbnz	w1, 25ca4 <acc_on_device@@OACC_2.0+0x4ec>
   25c9c:	stxr	w2, w0, [x24]
   25ca0:	cbnz	w2, 25c94 <acc_on_device@@OACC_2.0+0x4dc>
   25ca4:	cmp	w1, #0x0
   25ca8:	b.ne	25da0 <acc_on_device@@OACC_2.0+0x5e8>  // b.any
   25cac:	mov	x2, x21
   25cb0:	mov	x1, x20
   25cb4:	mov	x0, x22
   25cb8:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   25cbc:	mov	x19, x0
   25cc0:	cbz	x0, 25dac <acc_on_device@@OACC_2.0+0x5f4>
   25cc4:	ldr	x3, [x0, #16]
   25cc8:	ldr	x5, [x3, #16]
   25ccc:	ldr	x0, [x0, #24]
   25cd0:	add	x2, x20, x0
   25cd4:	ldr	x4, [x19]
   25cd8:	ldr	x26, [x19, #8]
   25cdc:	sub	x26, x26, x4
   25ce0:	cmp	x21, x26
   25ce4:	ccmp	x20, x4, #0x0, eq  // eq = none
   25ce8:	b.ne	25dc8 <acc_on_device@@OACC_2.0+0x610>  // b.any
   25cec:	ldr	x0, [x19, #32]
   25cf0:	cmn	x0, #0x1
   25cf4:	b.eq	25dec <acc_on_device@@OACC_2.0+0x634>  // b.none
   25cf8:	ldr	x1, [x19, #40]
   25cfc:	cmp	x0, x1
   25d00:	b.cc	25e04 <acc_on_device@@OACC_2.0+0x64c>  // b.lo, b.ul, b.last
   25d04:	tbz	w23, #1, 25e18 <acc_on_device@@OACC_2.0+0x660>
   25d08:	sub	x0, x0, x1
   25d0c:	str	x0, [x19, #32]
   25d10:	str	xzr, [x19, #40]
   25d14:	ldr	x0, [x19, #32]
   25d18:	cbnz	x0, 25d78 <acc_on_device@@OACC_2.0+0x5c0>
   25d1c:	ldr	x0, [x3]
   25d20:	cmp	x0, #0x2
   25d24:	b.eq	25e30 <acc_on_device@@OACC_2.0+0x678>  // b.none
   25d28:	tbz	w23, #0, 25d6c <acc_on_device@@OACC_2.0+0x5b4>
   25d2c:	sub	x4, x5, x4
   25d30:	add	x23, x4, x2
   25d34:	cmn	w25, #0x1
   25d38:	b.lt	25e70 <acc_on_device@@OACC_2.0+0x6b8>  // b.tstop
   25d3c:	ldr	x1, [x22, #248]
   25d40:	mov	w0, w25
   25d44:	blr	x1
   25d48:	ldr	x4, [x22, #112]
   25d4c:	mov	x3, x21
   25d50:	mov	x2, x23
   25d54:	mov	x1, x20
   25d58:	ldr	w0, [x22, #12]
   25d5c:	blr	x4
   25d60:	ldr	x1, [x22, #248]
   25d64:	mov	w0, #0xfffffffe            	// #-2
   25d68:	blr	x1
   25d6c:	mov	x1, x19
   25d70:	mov	x0, x22
   25d74:	bl	2085c <omp_get_place_proc_ids@@OMP_4.5+0x2f34>
   25d78:	ldxr	w0, [x24]
   25d7c:	stlxr	w1, wzr, [x24]
   25d80:	cbnz	w1, 25d78 <acc_on_device@@OACC_2.0+0x5c0>
   25d84:	tbnz	w0, #31, 25e60 <acc_on_device@@OACC_2.0+0x6a8>
   25d88:	ldp	x25, x26, [sp, #64]
   25d8c:	ldp	x19, x20, [sp, #16]
   25d90:	ldp	x21, x22, [sp, #32]
   25d94:	ldp	x23, x24, [sp, #48]
   25d98:	ldp	x29, x30, [sp], #80
   25d9c:	ret
   25da0:	mov	x0, x24
   25da4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25da8:	b	25cac <acc_on_device@@OACC_2.0+0x4f4>
   25dac:	mov	x0, x24
   25db0:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25db4:	mov	w2, w21
   25db8:	mov	x1, x20
   25dbc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25dc0:	add	x0, x0, #0xef0
   25dc4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25dc8:	mov	x0, x24
   25dcc:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25dd0:	mov	w4, w21
   25dd4:	mov	x3, x20
   25dd8:	mov	w2, w26
   25ddc:	ldr	x1, [x19]
   25de0:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25de4:	add	x0, x0, #0xf08
   25de8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25dec:	str	xzr, [x19, #32]
   25df0:	str	xzr, [x19, #40]
   25df4:	tbz	w23, #1, 25d14 <acc_on_device@@OACC_2.0+0x55c>
   25df8:	mov	x1, #0x0                   	// #0
   25dfc:	mov	x0, #0x0                   	// #0
   25e00:	b	25d08 <acc_on_device@@OACC_2.0+0x550>
   25e04:	mov	x0, x24
   25e08:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25e0c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25e10:	add	x0, x0, #0xf28
   25e14:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25e18:	cbz	x1, 25d14 <acc_on_device@@OACC_2.0+0x55c>
   25e1c:	sub	x1, x1, #0x1
   25e20:	str	x1, [x19, #40]
   25e24:	sub	x0, x0, #0x1
   25e28:	str	x0, [x19, #32]
   25e2c:	b	25d14 <acc_on_device@@OACC_2.0+0x55c>
   25e30:	ldr	x1, [x22, #176]
   25e34:	cbz	x1, 25d28 <acc_on_device@@OACC_2.0+0x570>
   25e38:	cmp	x3, x1
   25e3c:	b.eq	25e8c <acc_on_device@@OACC_2.0+0x6d4>  // b.none
   25e40:	mov	x0, x1
   25e44:	ldr	x1, [x1, #40]
   25e48:	cbz	x1, 25d28 <acc_on_device@@OACC_2.0+0x570>
   25e4c:	cmp	x3, x1
   25e50:	b.ne	25e40 <acc_on_device@@OACC_2.0+0x688>  // b.any
   25e54:	ldr	x1, [x1, #40]
   25e58:	str	x1, [x0, #40]
   25e5c:	b	25d28 <acc_on_device@@OACC_2.0+0x570>
   25e60:	mov	x0, x24
   25e64:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25e68:	ldp	x25, x26, [sp, #64]
   25e6c:	b	25d8c <acc_on_device@@OACC_2.0+0x5d4>
   25e70:	ldr	x4, [x22, #112]
   25e74:	mov	x3, x21
   25e78:	mov	x2, x23
   25e7c:	mov	x1, x20
   25e80:	ldr	w0, [x22, #12]
   25e84:	blr	x4
   25e88:	b	25d6c <acc_on_device@@OACC_2.0+0x5b4>
   25e8c:	ldr	x0, [x1, #40]
   25e90:	str	x0, [x22, #176]
   25e94:	b	25d28 <acc_on_device@@OACC_2.0+0x570>
   25e98:	stp	x29, x30, [sp, #-96]!
   25e9c:	mov	x29, sp
   25ea0:	stp	x19, x20, [sp, #16]
   25ea4:	stp	x21, x22, [sp, #32]
   25ea8:	str	x23, [sp, #48]
   25eac:	mov	x19, x1
   25eb0:	str	x2, [sp, #72]
   25eb4:	cmp	x1, #0x0
   25eb8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
   25ebc:	b.eq	25f8c <acc_on_device@@OACC_2.0+0x7d4>  // b.none
   25ec0:	mov	w20, w0
   25ec4:	mov	w23, w3
   25ec8:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   25ecc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   25ed0:	ldr	x0, [x0, #4048]
   25ed4:	mrs	x1, tpidr_el0
   25ed8:	ldr	x0, [x1, x0]
   25edc:	ldr	x22, [x0, #8]
   25ee0:	ldr	w0, [x22, #8]
   25ee4:	tbnz	w0, #0, 260e0 <acc_on_device@@OACC_2.0+0x928>
   25ee8:	add	x21, x22, #0xa8
   25eec:	mov	w0, #0x1                   	// #1
   25ef0:	ldaxr	w1, [x21]
   25ef4:	cbnz	w1, 25f00 <acc_on_device@@OACC_2.0+0x748>
   25ef8:	stxr	w2, w0, [x21]
   25efc:	cbnz	w2, 25ef0 <acc_on_device@@OACC_2.0+0x738>
   25f00:	cmp	w1, #0x0
   25f04:	b.ne	25f98 <acc_on_device@@OACC_2.0+0x7e0>  // b.any
   25f08:	ldr	x2, [sp, #72]
   25f0c:	mov	x1, x19
   25f10:	mov	x0, x22
   25f14:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   25f18:	cbz	x0, 25ff0 <acc_on_device@@OACC_2.0+0x838>
   25f1c:	ldr	x1, [x0, #16]
   25f20:	ldr	x23, [x1, #16]
   25f24:	ldr	x1, [x0, #24]
   25f28:	add	x23, x23, x1
   25f2c:	tbz	w20, #0, 25fa4 <acc_on_device@@OACC_2.0+0x7ec>
   25f30:	ldr	x1, [sp, #72]
   25f34:	add	x1, x19, x1
   25f38:	ldr	x2, [x0, #8]
   25f3c:	cmp	x1, x2
   25f40:	b.hi	25fc8 <acc_on_device@@OACC_2.0+0x810>  // b.pmore
   25f44:	ldr	x1, [x0, #32]
   25f48:	cmn	x1, #0x1
   25f4c:	b.eq	25f64 <acc_on_device@@OACC_2.0+0x7ac>  // b.none
   25f50:	add	x1, x1, #0x1
   25f54:	str	x1, [x0, #32]
   25f58:	ldr	x1, [x0, #40]
   25f5c:	add	x1, x1, #0x1
   25f60:	str	x1, [x0, #40]
   25f64:	ldxr	w0, [x21]
   25f68:	stlxr	w1, wzr, [x21]
   25f6c:	cbnz	w1, 25f64 <acc_on_device@@OACC_2.0+0x7ac>
   25f70:	tbnz	w0, #31, 25fe4 <acc_on_device@@OACC_2.0+0x82c>
   25f74:	mov	x0, x23
   25f78:	ldp	x19, x20, [sp, #16]
   25f7c:	ldp	x21, x22, [sp, #32]
   25f80:	ldr	x23, [sp, #48]
   25f84:	ldp	x29, x30, [sp], #96
   25f88:	ret
   25f8c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25f90:	add	x0, x0, #0xf50
   25f94:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25f98:	mov	x0, x21
   25f9c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   25fa0:	b	25f08 <acc_on_device@@OACC_2.0+0x750>
   25fa4:	mov	x0, x21
   25fa8:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25fac:	ldr	w4, [sp, #72]
   25fb0:	mov	x3, x23
   25fb4:	ldr	w2, [sp, #72]
   25fb8:	mov	x1, x19
   25fbc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25fc0:	add	x0, x0, #0xf68
   25fc4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25fc8:	mov	x0, x21
   25fcc:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   25fd0:	ldr	w2, [sp, #72]
   25fd4:	mov	x1, x19
   25fd8:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   25fdc:	add	x0, x0, #0xf90
   25fe0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   25fe4:	mov	x0, x21
   25fe8:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   25fec:	b	25f74 <acc_on_device@@OACC_2.0+0x7bc>
   25ff0:	tbz	w20, #1, 260ac <acc_on_device@@OACC_2.0+0x8f4>
   25ff4:	str	x19, [sp, #88]
   25ff8:	ubfx	x20, x20, #2, #1
   25ffc:	strh	w20, [sp, #86]
   26000:	ldxr	w0, [x21]
   26004:	stlxr	w1, wzr, [x21]
   26008:	cbnz	w1, 26000 <acc_on_device@@OACC_2.0+0x848>
   2600c:	tbnz	w0, #31, 260c8 <acc_on_device@@OACC_2.0+0x910>
   26010:	cmn	w23, #0x1
   26014:	b.lt	260e8 <acc_on_device@@OACC_2.0+0x930>  // b.tstop
   26018:	ldr	x1, [x22, #248]
   2601c:	mov	w0, w23
   26020:	blr	x1
   26024:	mov	w7, #0x0                   	// #0
   26028:	mov	w6, #0x1                   	// #1
   2602c:	add	x5, sp, #0x56
   26030:	add	x4, sp, #0x48
   26034:	mov	x3, #0x0                   	// #0
   26038:	add	x2, sp, #0x58
   2603c:	mov	x1, #0x1                   	// #1
   26040:	mov	x0, x22
   26044:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   26048:	mov	x19, x0
   2604c:	ldr	x0, [x0, #64]
   26050:	mov	x1, #0x1                   	// #1
   26054:	str	x1, [x0, #40]
   26058:	ldr	x1, [x22, #248]
   2605c:	mov	w0, #0xfffffffe            	// #-2
   26060:	blr	x1
   26064:	mov	w0, #0x1                   	// #1
   26068:	ldaxr	w1, [x21]
   2606c:	cbnz	w1, 26078 <acc_on_device@@OACC_2.0+0x8c0>
   26070:	stxr	w2, w0, [x21]
   26074:	cbnz	w2, 26068 <acc_on_device@@OACC_2.0+0x8b0>
   26078:	cmp	w1, #0x0
   2607c:	b.ne	260d4 <acc_on_device@@OACC_2.0+0x91c>  // b.any
   26080:	ldr	x23, [x19, #32]
   26084:	ldr	x0, [x22, #176]
   26088:	str	x0, [x19, #40]
   2608c:	str	x19, [x22, #176]
   26090:	ldxr	w0, [x21]
   26094:	stlxr	w1, wzr, [x21]
   26098:	cbnz	w1, 26090 <acc_on_device@@OACC_2.0+0x8d8>
   2609c:	tbz	w0, #31, 25f74 <acc_on_device@@OACC_2.0+0x7bc>
   260a0:	mov	x0, x21
   260a4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   260a8:	b	25f74 <acc_on_device@@OACC_2.0+0x7bc>
   260ac:	mov	x0, x21
   260b0:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   260b4:	ldr	w2, [sp, #72]
   260b8:	mov	x1, x19
   260bc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   260c0:	add	x0, x0, #0xf90
   260c4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   260c8:	mov	x0, x21
   260cc:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   260d0:	b	26010 <acc_on_device@@OACC_2.0+0x858>
   260d4:	mov	x0, x21
   260d8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   260dc:	b	26080 <acc_on_device@@OACC_2.0+0x8c8>
   260e0:	mov	x23, x19
   260e4:	b	25f74 <acc_on_device@@OACC_2.0+0x7bc>
   260e8:	mov	w7, #0x0                   	// #0
   260ec:	mov	w6, #0x1                   	// #1
   260f0:	add	x5, sp, #0x56
   260f4:	add	x4, sp, #0x48
   260f8:	mov	x3, #0x0                   	// #0
   260fc:	add	x2, sp, #0x58
   26100:	mov	x1, #0x1                   	// #1
   26104:	mov	x0, x22
   26108:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   2610c:	mov	x19, x0
   26110:	ldr	x0, [x0, #64]
   26114:	mov	x1, #0x1                   	// #1
   26118:	str	x1, [x0, #40]
   2611c:	b	26064 <acc_on_device@@OACC_2.0+0x8ac>

0000000000026120 <acc_malloc@@OACC_2.0>:
   26120:	cbz	x0, 261a4 <acc_malloc@@OACC_2.0+0x84>
   26124:	stp	x29, x30, [sp, #-32]!
   26128:	mov	x29, sp
   2612c:	str	x19, [sp, #16]
   26130:	mov	x19, x0
   26134:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   26138:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2613c:	ldr	x0, [x0, #4048]
   26140:	mrs	x1, tpidr_el0
   26144:	ldr	x0, [x1, x0]
   26148:	ldr	x0, [x0, #8]
   2614c:	cbz	x0, 26174 <acc_malloc@@OACC_2.0+0x54>
   26150:	ldr	w1, [x0, #8]
   26154:	tbnz	w1, #0, 26198 <acc_malloc@@OACC_2.0+0x78>
   26158:	ldr	x2, [x0, #96]
   2615c:	mov	x1, x19
   26160:	ldr	w0, [x0, #12]
   26164:	blr	x2
   26168:	ldr	x19, [sp, #16]
   2616c:	ldp	x29, x30, [sp], #32
   26170:	ret
   26174:	adrp	x3, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26178:	add	x3, x3, #0xf8
   2617c:	add	x3, x3, #0x18
   26180:	mov	w2, #0x6a                  	// #106
   26184:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26188:	add	x1, x1, #0xeb0
   2618c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26190:	add	x0, x0, #0xfa8
   26194:	bl	8ab0 <__assert_fail@plt>
   26198:	mov	x0, x19
   2619c:	bl	8760 <malloc@plt>
   261a0:	b	26168 <acc_malloc@@OACC_2.0+0x48>
   261a4:	mov	x0, #0x0                   	// #0
   261a8:	ret

00000000000261ac <acc_memcpy_to_device@@OACC_2.0>:
   261ac:	stp	x29, x30, [sp, #-16]!
   261b0:	mov	x29, sp
   261b4:	adrp	x5, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   261b8:	add	x5, x5, #0xf8
   261bc:	add	x5, x5, #0x28
   261c0:	mov	w4, #0xfffffffe            	// #-2
   261c4:	mov	x3, x2
   261c8:	mov	x2, x1
   261cc:	mov	x1, x0
   261d0:	mov	w0, #0x0                   	// #0
   261d4:	bl	25988 <acc_on_device@@OACC_2.0+0x1d0>
   261d8:	ldp	x29, x30, [sp], #16
   261dc:	ret

00000000000261e0 <acc_memcpy_to_device_async@@OACC_2.5>:
   261e0:	stp	x29, x30, [sp, #-16]!
   261e4:	mov	x29, sp
   261e8:	adrp	x5, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   261ec:	add	x5, x5, #0xf8
   261f0:	add	x5, x5, #0x40
   261f4:	mov	w4, w3
   261f8:	mov	x3, x2
   261fc:	mov	x2, x1
   26200:	mov	x1, x0
   26204:	mov	w0, #0x0                   	// #0
   26208:	bl	25988 <acc_on_device@@OACC_2.0+0x1d0>
   2620c:	ldp	x29, x30, [sp], #16
   26210:	ret

0000000000026214 <acc_memcpy_from_device@@OACC_2.0>:
   26214:	stp	x29, x30, [sp, #-16]!
   26218:	mov	x29, sp
   2621c:	adrp	x5, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26220:	add	x5, x5, #0xf8
   26224:	add	x5, x5, #0x60
   26228:	mov	w4, #0xfffffffe            	// #-2
   2622c:	mov	x3, x2
   26230:	mov	x2, x0
   26234:	mov	w0, #0x1                   	// #1
   26238:	bl	25988 <acc_on_device@@OACC_2.0+0x1d0>
   2623c:	ldp	x29, x30, [sp], #16
   26240:	ret

0000000000026244 <acc_memcpy_from_device_async@@OACC_2.5>:
   26244:	stp	x29, x30, [sp, #-16]!
   26248:	mov	x29, sp
   2624c:	adrp	x5, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26250:	add	x5, x5, #0xf8
   26254:	add	x5, x5, #0x78
   26258:	mov	w4, w3
   2625c:	mov	x3, x2
   26260:	mov	x2, x0
   26264:	mov	w0, #0x1                   	// #1
   26268:	bl	25988 <acc_on_device@@OACC_2.0+0x1d0>
   2626c:	ldp	x29, x30, [sp], #16
   26270:	ret

0000000000026274 <acc_deviceptr@@OACC_2.0>:
   26274:	stp	x29, x30, [sp, #-48]!
   26278:	mov	x29, sp
   2627c:	stp	x19, x20, [sp, #16]
   26280:	mov	x20, x0
   26284:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   26288:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2628c:	ldr	x0, [x0, #4048]
   26290:	mrs	x1, tpidr_el0
   26294:	ldr	x0, [x1, x0]
   26298:	ldr	x19, [x0, #8]
   2629c:	ldr	w0, [x19, #8]
   262a0:	tbnz	w0, #0, 26364 <acc_deviceptr@@OACC_2.0+0xf0>
   262a4:	str	x21, [sp, #32]
   262a8:	add	x21, x19, #0xa8
   262ac:	mov	w0, #0x1                   	// #1
   262b0:	ldaxr	w1, [x21]
   262b4:	cbnz	w1, 262c0 <acc_deviceptr@@OACC_2.0+0x4c>
   262b8:	stxr	w2, w0, [x21]
   262bc:	cbnz	w2, 262b0 <acc_deviceptr@@OACC_2.0+0x3c>
   262c0:	cmp	w1, #0x0
   262c4:	b.ne	26320 <acc_deviceptr@@OACC_2.0+0xac>  // b.any
   262c8:	mov	x2, #0x1                   	// #1
   262cc:	mov	x1, x20
   262d0:	mov	x0, x19
   262d4:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   262d8:	mov	x19, x0
   262dc:	cbz	x0, 2632c <acc_deviceptr@@OACC_2.0+0xb8>
   262e0:	ldr	x0, [x0, #16]
   262e4:	ldr	x0, [x0, #16]
   262e8:	ldr	x1, [x19]
   262ec:	sub	x0, x0, x1
   262f0:	ldr	x19, [x19, #24]
   262f4:	add	x19, x0, x19
   262f8:	add	x19, x20, x19
   262fc:	ldxr	w0, [x21]
   26300:	stlxr	w1, wzr, [x21]
   26304:	cbnz	w1, 262fc <acc_deviceptr@@OACC_2.0+0x88>
   26308:	tbnz	w0, #31, 26354 <acc_deviceptr@@OACC_2.0+0xe0>
   2630c:	ldr	x21, [sp, #32]
   26310:	mov	x0, x19
   26314:	ldp	x19, x20, [sp, #16]
   26318:	ldp	x29, x30, [sp], #48
   2631c:	ret
   26320:	mov	x0, x21
   26324:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26328:	b	262c8 <acc_deviceptr@@OACC_2.0+0x54>
   2632c:	ldxr	w0, [x21]
   26330:	stlxr	w1, wzr, [x21]
   26334:	cbnz	w1, 2632c <acc_deviceptr@@OACC_2.0+0xb8>
   26338:	tbnz	w0, #31, 26344 <acc_deviceptr@@OACC_2.0+0xd0>
   2633c:	ldr	x21, [sp, #32]
   26340:	b	26310 <acc_deviceptr@@OACC_2.0+0x9c>
   26344:	mov	x0, x21
   26348:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2634c:	ldr	x21, [sp, #32]
   26350:	b	26310 <acc_deviceptr@@OACC_2.0+0x9c>
   26354:	mov	x0, x21
   26358:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2635c:	ldr	x21, [sp, #32]
   26360:	b	26310 <acc_deviceptr@@OACC_2.0+0x9c>
   26364:	mov	x19, x20
   26368:	b	26310 <acc_deviceptr@@OACC_2.0+0x9c>

000000000002636c <acc_hostptr@@OACC_2.0>:
   2636c:	stp	x29, x30, [sp, #-48]!
   26370:	mov	x29, sp
   26374:	stp	x19, x20, [sp, #16]
   26378:	mov	x20, x0
   2637c:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   26380:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26384:	ldr	x0, [x0, #4048]
   26388:	mrs	x1, tpidr_el0
   2638c:	ldr	x0, [x1, x0]
   26390:	ldr	x19, [x0, #8]
   26394:	ldr	w0, [x19, #8]
   26398:	tbnz	w0, #0, 2645c <acc_hostptr@@OACC_2.0+0xf0>
   2639c:	str	x21, [sp, #32]
   263a0:	add	x21, x19, #0xa8
   263a4:	mov	w0, #0x1                   	// #1
   263a8:	ldaxr	w1, [x21]
   263ac:	cbnz	w1, 263b8 <acc_hostptr@@OACC_2.0+0x4c>
   263b0:	stxr	w2, w0, [x21]
   263b4:	cbnz	w2, 263a8 <acc_hostptr@@OACC_2.0+0x3c>
   263b8:	cmp	w1, #0x0
   263bc:	b.ne	26418 <acc_hostptr@@OACC_2.0+0xac>  // b.any
   263c0:	mov	x2, #0x1                   	// #1
   263c4:	mov	x1, x20
   263c8:	ldr	x0, [x19, #176]
   263cc:	bl	258e0 <acc_on_device@@OACC_2.0+0x128>
   263d0:	mov	x19, x0
   263d4:	cbz	x0, 26424 <acc_hostptr@@OACC_2.0+0xb8>
   263d8:	ldr	x0, [x0, #24]
   263dc:	ldr	x1, [x19]
   263e0:	add	x0, x0, x1
   263e4:	ldr	x1, [x19, #16]
   263e8:	ldr	x19, [x1, #16]
   263ec:	sub	x19, x0, x19
   263f0:	add	x19, x20, x19
   263f4:	ldxr	w0, [x21]
   263f8:	stlxr	w1, wzr, [x21]
   263fc:	cbnz	w1, 263f4 <acc_hostptr@@OACC_2.0+0x88>
   26400:	tbnz	w0, #31, 2644c <acc_hostptr@@OACC_2.0+0xe0>
   26404:	ldr	x21, [sp, #32]
   26408:	mov	x0, x19
   2640c:	ldp	x19, x20, [sp, #16]
   26410:	ldp	x29, x30, [sp], #48
   26414:	ret
   26418:	mov	x0, x21
   2641c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26420:	b	263c0 <acc_hostptr@@OACC_2.0+0x54>
   26424:	ldxr	w0, [x21]
   26428:	stlxr	w1, wzr, [x21]
   2642c:	cbnz	w1, 26424 <acc_hostptr@@OACC_2.0+0xb8>
   26430:	tbnz	w0, #31, 2643c <acc_hostptr@@OACC_2.0+0xd0>
   26434:	ldr	x21, [sp, #32]
   26438:	b	26408 <acc_hostptr@@OACC_2.0+0x9c>
   2643c:	mov	x0, x21
   26440:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   26444:	ldr	x21, [sp, #32]
   26448:	b	26408 <acc_hostptr@@OACC_2.0+0x9c>
   2644c:	mov	x0, x21
   26450:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   26454:	ldr	x21, [sp, #32]
   26458:	b	26408 <acc_hostptr@@OACC_2.0+0x9c>
   2645c:	mov	x19, x20
   26460:	b	26408 <acc_hostptr@@OACC_2.0+0x9c>

0000000000026464 <acc_is_present@@OACC_2.0>:
   26464:	cmp	x1, #0x0
   26468:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2646c:	b.ne	26478 <acc_is_present@@OACC_2.0+0x14>  // b.any
   26470:	mov	w0, #0x0                   	// #0
   26474:	ret
   26478:	stp	x29, x30, [sp, #-48]!
   2647c:	mov	x29, sp
   26480:	stp	x19, x20, [sp, #16]
   26484:	stp	x21, x22, [sp, #32]
   26488:	mov	x19, x0
   2648c:	mov	x20, x1
   26490:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   26494:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26498:	ldr	x0, [x0, #4048]
   2649c:	mrs	x1, tpidr_el0
   264a0:	ldr	x0, [x1, x0]
   264a4:	ldr	x21, [x0, #8]
   264a8:	ldr	w1, [x21, #8]
   264ac:	mov	w0, #0x1                   	// #1
   264b0:	tbnz	w1, #0, 2653c <acc_is_present@@OACC_2.0+0xd8>
   264b4:	add	x22, x21, #0xa8
   264b8:	ldaxr	w1, [x22]
   264bc:	cbnz	w1, 264c8 <acc_is_present@@OACC_2.0+0x64>
   264c0:	stxr	w2, w0, [x22]
   264c4:	cbnz	w2, 264b8 <acc_is_present@@OACC_2.0+0x54>
   264c8:	cmp	w1, #0x0
   264cc:	b.ne	26514 <acc_is_present@@OACC_2.0+0xb0>  // b.any
   264d0:	mov	x2, x20
   264d4:	mov	x1, x19
   264d8:	mov	x0, x21
   264dc:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   264e0:	mov	x21, x0
   264e4:	cbz	x0, 26524 <acc_is_present@@OACC_2.0+0xc0>
   264e8:	ldr	x0, [x0]
   264ec:	cmp	x0, x19
   264f0:	b.hi	26520 <acc_is_present@@OACC_2.0+0xbc>  // b.pmore
   264f4:	ldr	x1, [x21, #8]
   264f8:	add	x19, x19, x20
   264fc:	cmp	x19, x1
   26500:	b.hi	2654c <acc_is_present@@OACC_2.0+0xe8>  // b.pmore
   26504:	sub	x0, x1, x0
   26508:	cmp	x0, x20
   2650c:	csel	x21, x21, xzr, cs  // cs = hs, nlast
   26510:	b	26524 <acc_is_present@@OACC_2.0+0xc0>
   26514:	mov	x0, x22
   26518:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   2651c:	b	264d0 <acc_is_present@@OACC_2.0+0x6c>
   26520:	mov	x21, #0x0                   	// #0
   26524:	ldxr	w0, [x22]
   26528:	stlxr	w1, wzr, [x22]
   2652c:	cbnz	w1, 26524 <acc_is_present@@OACC_2.0+0xc0>
   26530:	tbnz	w0, #31, 26554 <acc_is_present@@OACC_2.0+0xf0>
   26534:	cmp	x21, #0x0
   26538:	cset	w0, ne  // ne = any
   2653c:	ldp	x19, x20, [sp, #16]
   26540:	ldp	x21, x22, [sp, #32]
   26544:	ldp	x29, x30, [sp], #48
   26548:	ret
   2654c:	mov	x21, #0x0                   	// #0
   26550:	b	26524 <acc_is_present@@OACC_2.0+0xc0>
   26554:	mov	x0, x22
   26558:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2655c:	b	26534 <acc_is_present@@OACC_2.0+0xd0>

0000000000026560 <acc_map_data@@OACC_2.0>:
   26560:	stp	x29, x30, [sp, #-96]!
   26564:	mov	x29, sp
   26568:	stp	x19, x20, [sp, #16]
   2656c:	stp	x21, x22, [sp, #32]
   26570:	stp	x23, x24, [sp, #48]
   26574:	mov	x22, x0
   26578:	mov	x21, x1
   2657c:	mov	x20, x2
   26580:	str	x0, [sp, #88]
   26584:	str	x1, [sp, #80]
   26588:	str	x2, [sp, #72]
   2658c:	strh	wzr, [sp, #70]
   26590:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   26594:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26598:	ldr	x0, [x0, #4048]
   2659c:	mrs	x1, tpidr_el0
   265a0:	ldr	x24, [x1, x0]
   265a4:	ldr	x19, [x24, #8]
   265a8:	ldr	w0, [x19, #8]
   265ac:	tbz	w0, #0, 26618 <acc_map_data@@OACC_2.0+0xb8>
   265b0:	mov	x23, #0x0                   	// #0
   265b4:	cmp	x22, x21
   265b8:	b.ne	2660c <acc_map_data@@OACC_2.0+0xac>  // b.any
   265bc:	add	x20, x19, #0xa8
   265c0:	mov	w0, #0x1                   	// #1
   265c4:	ldaxr	w1, [x20]
   265c8:	cbnz	w1, 265d4 <acc_map_data@@OACC_2.0+0x74>
   265cc:	stxr	w2, w0, [x20]
   265d0:	cbnz	w2, 265c4 <acc_map_data@@OACC_2.0+0x64>
   265d4:	cmp	w1, #0x0
   265d8:	b.ne	26728 <acc_map_data@@OACC_2.0+0x1c8>  // b.any
   265dc:	ldr	x0, [x19, #176]
   265e0:	str	x0, [x23, #40]
   265e4:	str	x23, [x19, #176]
   265e8:	ldxr	w0, [x20]
   265ec:	stlxr	w1, wzr, [x20]
   265f0:	cbnz	w1, 265e8 <acc_map_data@@OACC_2.0+0x88>
   265f4:	tbnz	w0, #31, 26734 <acc_map_data@@OACC_2.0+0x1d4>
   265f8:	ldp	x19, x20, [sp, #16]
   265fc:	ldp	x21, x22, [sp, #32]
   26600:	ldp	x23, x24, [sp, #48]
   26604:	ldp	x29, x30, [sp], #96
   26608:	ret
   2660c:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26610:	add	x0, x0, #0xfb8
   26614:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26618:	cmp	x21, #0x0
   2661c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   26620:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   26624:	b.eq	266bc <acc_map_data@@OACC_2.0+0x15c>  // b.none
   26628:	add	x23, x19, #0xa8
   2662c:	mov	w0, #0x1                   	// #1
   26630:	ldaxr	w1, [x23]
   26634:	cbnz	w1, 26640 <acc_map_data@@OACC_2.0+0xe0>
   26638:	stxr	w2, w0, [x23]
   2663c:	cbnz	w2, 26630 <acc_map_data@@OACC_2.0+0xd0>
   26640:	cmp	w1, #0x0
   26644:	b.ne	266d8 <acc_map_data@@OACC_2.0+0x178>  // b.any
   26648:	mov	x2, x20
   2664c:	mov	x1, x22
   26650:	mov	x0, x19
   26654:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   26658:	cbnz	x0, 266e4 <acc_map_data@@OACC_2.0+0x184>
   2665c:	ldr	x0, [x24, #8]
   26660:	mov	x2, x20
   26664:	mov	x1, x21
   26668:	ldr	x0, [x0, #176]
   2666c:	bl	258e0 <acc_on_device@@OACC_2.0+0x128>
   26670:	cbnz	x0, 26700 <acc_map_data@@OACC_2.0+0x1a0>
   26674:	ldxr	w0, [x23]
   26678:	stlxr	w1, wzr, [x23]
   2667c:	cbnz	w1, 26674 <acc_map_data@@OACC_2.0+0x114>
   26680:	tbnz	w0, #31, 2671c <acc_map_data@@OACC_2.0+0x1bc>
   26684:	mov	w7, #0x0                   	// #0
   26688:	mov	w6, #0x1                   	// #1
   2668c:	add	x5, sp, #0x46
   26690:	add	x4, sp, #0x48
   26694:	add	x3, sp, #0x50
   26698:	add	x2, sp, #0x58
   2669c:	mov	x1, #0x1                   	// #1
   266a0:	mov	x0, x19
   266a4:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   266a8:	mov	x23, x0
   266ac:	ldr	x0, [x0, #64]
   266b0:	mov	x1, #0xffffffffffffffff    	// #-1
   266b4:	str	x1, [x0, #32]
   266b8:	b	265bc <acc_map_data@@OACC_2.0+0x5c>
   266bc:	mov	w4, w20
   266c0:	mov	x3, x21
   266c4:	mov	w2, w20
   266c8:	mov	x1, x22
   266cc:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   266d0:	add	x0, x0, #0xfe0
   266d4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   266d8:	mov	x0, x23
   266dc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   266e0:	b	26648 <acc_map_data@@OACC_2.0+0xe8>
   266e4:	mov	x0, x23
   266e8:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   266ec:	mov	w2, w20
   266f0:	mov	x1, x22
   266f4:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   266f8:	add	x0, x0, #0x0
   266fc:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26700:	mov	x0, x23
   26704:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   26708:	mov	w2, w20
   2670c:	mov	x1, x21
   26710:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26714:	add	x0, x0, #0x30
   26718:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2671c:	mov	x0, x23
   26720:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   26724:	b	26684 <acc_map_data@@OACC_2.0+0x124>
   26728:	mov	x0, x20
   2672c:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26730:	b	265dc <acc_map_data@@OACC_2.0+0x7c>
   26734:	mov	x0, x20
   26738:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   2673c:	b	265f8 <acc_map_data@@OACC_2.0+0x98>

0000000000026740 <acc_unmap_data@@OACC_2.0>:
   26740:	stp	x29, x30, [sp, #-64]!
   26744:	mov	x29, sp
   26748:	stp	x19, x20, [sp, #16]
   2674c:	stp	x21, x22, [sp, #32]
   26750:	mov	x19, x0
   26754:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26758:	ldr	x0, [x0, #4048]
   2675c:	mrs	x1, tpidr_el0
   26760:	ldr	x0, [x1, x0]
   26764:	ldr	x21, [x0, #8]
   26768:	ldr	w0, [x21, #8]
   2676c:	tbnz	w0, #0, 267f0 <acc_unmap_data@@OACC_2.0+0xb0>
   26770:	str	x23, [sp, #48]
   26774:	add	x22, x21, #0xa8
   26778:	mov	w0, #0x1                   	// #1
   2677c:	ldaxr	w1, [x22]
   26780:	cbnz	w1, 2678c <acc_unmap_data@@OACC_2.0+0x4c>
   26784:	stxr	w2, w0, [x22]
   26788:	cbnz	w2, 2677c <acc_unmap_data@@OACC_2.0+0x3c>
   2678c:	cmp	w1, #0x0
   26790:	b.ne	26800 <acc_unmap_data@@OACC_2.0+0xc0>  // b.any
   26794:	mov	x2, #0x1                   	// #1
   26798:	mov	x1, x19
   2679c:	mov	x0, x21
   267a0:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   267a4:	mov	x20, x0
   267a8:	cbz	x0, 2680c <acc_unmap_data@@OACC_2.0+0xcc>
   267ac:	ldr	x23, [x0]
   267b0:	cmp	x19, x23
   267b4:	b.ne	26824 <acc_unmap_data@@OACC_2.0+0xe4>  // b.any
   267b8:	mov	x0, #0x1                   	// #1
   267bc:	str	x0, [x20, #32]
   267c0:	ldr	x19, [x20, #16]
   267c4:	ldr	x0, [x19]
   267c8:	cmp	x0, #0x2
   267cc:	b.eq	26848 <acc_unmap_data@@OACC_2.0+0x108>  // b.none
   267d0:	ldxr	w0, [x22]
   267d4:	stlxr	w1, wzr, [x22]
   267d8:	cbnz	w1, 267d0 <acc_unmap_data@@OACC_2.0+0x90>
   267dc:	tbnz	w0, #31, 268ac <acc_unmap_data@@OACC_2.0+0x16c>
   267e0:	mov	w1, #0x1                   	// #1
   267e4:	mov	x0, x19
   267e8:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   267ec:	ldr	x23, [sp, #48]
   267f0:	ldp	x19, x20, [sp, #16]
   267f4:	ldp	x21, x22, [sp, #32]
   267f8:	ldp	x29, x30, [sp], #64
   267fc:	ret
   26800:	mov	x0, x22
   26804:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26808:	b	26794 <acc_unmap_data@@OACC_2.0+0x54>
   2680c:	mov	x0, x22
   26810:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   26814:	mov	x1, x19
   26818:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2681c:	add	x0, x0, #0x60
   26820:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26824:	ldr	x21, [x0, #8]
   26828:	mov	x0, x22
   2682c:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   26830:	mov	x3, x19
   26834:	sub	w2, w21, w23
   26838:	ldr	x1, [x20]
   2683c:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26840:	add	x0, x0, #0x80
   26844:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26848:	str	xzr, [x19, #24]
   2684c:	str	xzr, [x19, #32]
   26850:	ldr	x1, [x21, #176]
   26854:	cbz	x1, 268a4 <acc_unmap_data@@OACC_2.0+0x164>
   26858:	ldr	x2, [x20, #16]
   2685c:	mov	x0, #0x0                   	// #0
   26860:	b	26868 <acc_unmap_data@@OACC_2.0+0x128>
   26864:	mov	x1, x19
   26868:	cmp	x2, x1
   2686c:	b.eq	26880 <acc_unmap_data@@OACC_2.0+0x140>  // b.none
   26870:	ldr	x19, [x1, #40]
   26874:	mov	x0, x1
   26878:	cbnz	x19, 26864 <acc_unmap_data@@OACC_2.0+0x124>
   2687c:	b	267d0 <acc_unmap_data@@OACC_2.0+0x90>
   26880:	cbz	x0, 26894 <acc_unmap_data@@OACC_2.0+0x154>
   26884:	ldr	x2, [x1, #40]
   26888:	str	x2, [x0, #40]
   2688c:	mov	x19, x1
   26890:	b	267d0 <acc_unmap_data@@OACC_2.0+0x90>
   26894:	ldr	x0, [x1, #40]
   26898:	str	x0, [x21, #176]
   2689c:	mov	x19, x1
   268a0:	b	267d0 <acc_unmap_data@@OACC_2.0+0x90>
   268a4:	mov	x19, x1
   268a8:	b	267d0 <acc_unmap_data@@OACC_2.0+0x90>
   268ac:	mov	x0, x22
   268b0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   268b4:	b	267e0 <acc_unmap_data@@OACC_2.0+0xa0>

00000000000268b8 <acc_free@@OACC_2.0>:
   268b8:	cbz	x0, 26a18 <acc_free@@OACC_2.0+0x160>
   268bc:	stp	x29, x30, [sp, #-64]!
   268c0:	mov	x29, sp
   268c4:	stp	x19, x20, [sp, #16]
   268c8:	mov	x19, x0
   268cc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   268d0:	ldr	x0, [x0, #4048]
   268d4:	mrs	x1, tpidr_el0
   268d8:	ldr	x0, [x1, x0]
   268dc:	cbz	x0, 26968 <acc_free@@OACC_2.0+0xb0>
   268e0:	ldr	x20, [x0, #8]
   268e4:	cbz	x20, 26968 <acc_free@@OACC_2.0+0xb0>
   268e8:	ldr	w0, [x20, #8]
   268ec:	tbnz	w0, #0, 26994 <acc_free@@OACC_2.0+0xdc>
   268f0:	stp	x21, x22, [sp, #32]
   268f4:	add	x22, x20, #0xa8
   268f8:	mov	w0, #0x1                   	// #1
   268fc:	ldaxr	w1, [x22]
   26900:	cbnz	w1, 2690c <acc_free@@OACC_2.0+0x54>
   26904:	stxr	w2, w0, [x22]
   26908:	cbnz	w2, 268fc <acc_free@@OACC_2.0+0x44>
   2690c:	cmp	w1, #0x0
   26910:	b.ne	269a0 <acc_free@@OACC_2.0+0xe8>  // b.any
   26914:	mov	x2, #0x1                   	// #1
   26918:	mov	x1, x19
   2691c:	ldr	x0, [x20, #176]
   26920:	bl	258e0 <acc_on_device@@OACC_2.0+0x128>
   26924:	mov	x21, x0
   26928:	cbz	x0, 269b8 <acc_free@@OACC_2.0+0x100>
   2692c:	stp	x23, x24, [sp, #48]
   26930:	ldr	x23, [x0, #24]
   26934:	ldr	x0, [x0, #16]
   26938:	ldr	x24, [x0, #16]
   2693c:	ldxr	w0, [x22]
   26940:	stlxr	w1, wzr, [x22]
   26944:	cbnz	w1, 2693c <acc_free@@OACC_2.0+0x84>
   26948:	tbnz	w0, #31, 269ac <acc_free@@OACC_2.0+0xf4>
   2694c:	ldr	x0, [x21]
   26950:	add	x0, x23, x0
   26954:	sub	x0, x0, x24
   26958:	add	x0, x19, x0
   2695c:	bl	8710 <acc_unmap_data@plt>
   26960:	ldp	x23, x24, [sp, #48]
   26964:	b	269c8 <acc_free@@OACC_2.0+0x110>
   26968:	stp	x21, x22, [sp, #32]
   2696c:	stp	x23, x24, [sp, #48]
   26970:	adrp	x3, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26974:	add	x3, x3, #0xf8
   26978:	add	x3, x3, #0x98
   2697c:	mov	w2, #0x7f                  	// #127
   26980:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26984:	add	x1, x1, #0xeb0
   26988:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2698c:	add	x0, x0, #0xed0
   26990:	bl	8ab0 <__assert_fail@plt>
   26994:	mov	x0, x19
   26998:	bl	8900 <free@plt>
   2699c:	b	269e4 <acc_free@@OACC_2.0+0x12c>
   269a0:	mov	x0, x22
   269a4:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   269a8:	b	26914 <acc_free@@OACC_2.0+0x5c>
   269ac:	mov	x0, x22
   269b0:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   269b4:	b	2694c <acc_free@@OACC_2.0+0x94>
   269b8:	ldxr	w0, [x22]
   269bc:	stlxr	w1, wzr, [x22]
   269c0:	cbnz	w1, 269b8 <acc_free@@OACC_2.0+0x100>
   269c4:	tbnz	w0, #31, 269f0 <acc_free@@OACC_2.0+0x138>
   269c8:	ldr	x2, [x20, #104]
   269cc:	mov	x1, x19
   269d0:	ldr	w0, [x20, #12]
   269d4:	blr	x2
   269d8:	and	w0, w0, #0xff
   269dc:	cbz	w0, 269fc <acc_free@@OACC_2.0+0x144>
   269e0:	ldp	x21, x22, [sp, #32]
   269e4:	ldp	x19, x20, [sp, #16]
   269e8:	ldp	x29, x30, [sp], #64
   269ec:	ret
   269f0:	mov	x0, x22
   269f4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   269f8:	b	269c8 <acc_free@@OACC_2.0+0x110>
   269fc:	stp	x23, x24, [sp, #48]
   26a00:	adrp	x1, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26a04:	add	x1, x1, #0xf8
   26a08:	add	x1, x1, #0xa8
   26a0c:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26a10:	add	x0, x0, #0x98
   26a14:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26a18:	ret

0000000000026a1c <acc_create@@OACC_2.0>:
   26a1c:	stp	x29, x30, [sp, #-16]!
   26a20:	mov	x29, sp
   26a24:	mov	w3, #0xfffffffe            	// #-2
   26a28:	mov	x2, x1
   26a2c:	mov	x1, x0
   26a30:	mov	w0, #0x3                   	// #3
   26a34:	bl	25e98 <acc_on_device@@OACC_2.0+0x6e0>
   26a38:	ldp	x29, x30, [sp], #16
   26a3c:	ret

0000000000026a40 <acc_create_async@@OACC_2.5>:
   26a40:	stp	x29, x30, [sp, #-16]!
   26a44:	mov	x29, sp
   26a48:	mov	w3, w2
   26a4c:	mov	x2, x1
   26a50:	mov	x1, x0
   26a54:	mov	w0, #0x3                   	// #3
   26a58:	bl	25e98 <acc_on_device@@OACC_2.0+0x6e0>
   26a5c:	ldp	x29, x30, [sp], #16
   26a60:	ret

0000000000026a64 <acc_copyin@@OACC_2.0>:
   26a64:	stp	x29, x30, [sp, #-16]!
   26a68:	mov	x29, sp
   26a6c:	mov	w3, #0xfffffffe            	// #-2
   26a70:	mov	x2, x1
   26a74:	mov	x1, x0
   26a78:	mov	w0, #0x7                   	// #7
   26a7c:	bl	25e98 <acc_on_device@@OACC_2.0+0x6e0>
   26a80:	ldp	x29, x30, [sp], #16
   26a84:	ret

0000000000026a88 <acc_copyin_async@@OACC_2.5>:
   26a88:	stp	x29, x30, [sp, #-16]!
   26a8c:	mov	x29, sp
   26a90:	mov	w3, w2
   26a94:	mov	x2, x1
   26a98:	mov	x1, x0
   26a9c:	mov	w0, #0x7                   	// #7
   26aa0:	bl	25e98 <acc_on_device@@OACC_2.0+0x6e0>
   26aa4:	ldp	x29, x30, [sp], #16
   26aa8:	ret

0000000000026aac <acc_delete@@OACC_2.0>:
   26aac:	stp	x29, x30, [sp, #-16]!
   26ab0:	mov	x29, sp
   26ab4:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26ab8:	add	x4, x4, #0xf8
   26abc:	add	x4, x4, #0xb8
   26ac0:	mov	w3, #0xfffffffe            	// #-2
   26ac4:	mov	x2, x1
   26ac8:	mov	x1, x0
   26acc:	mov	w0, #0x0                   	// #0
   26ad0:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26ad4:	ldp	x29, x30, [sp], #16
   26ad8:	ret

0000000000026adc <acc_delete_async@@OACC_2.5>:
   26adc:	stp	x29, x30, [sp, #-16]!
   26ae0:	mov	x29, sp
   26ae4:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26ae8:	add	x4, x4, #0xf8
   26aec:	add	x4, x4, #0xc8
   26af0:	mov	w3, w2
   26af4:	mov	x2, x1
   26af8:	mov	x1, x0
   26afc:	mov	w0, #0x0                   	// #0
   26b00:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26b04:	ldp	x29, x30, [sp], #16
   26b08:	ret

0000000000026b0c <acc_delete_finalize@@OACC_2.5>:
   26b0c:	stp	x29, x30, [sp, #-16]!
   26b10:	mov	x29, sp
   26b14:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26b18:	add	x4, x4, #0xf8
   26b1c:	add	x4, x4, #0xe0
   26b20:	mov	w3, #0xfffffffe            	// #-2
   26b24:	mov	x2, x1
   26b28:	mov	x1, x0
   26b2c:	mov	w0, #0x2                   	// #2
   26b30:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26b34:	ldp	x29, x30, [sp], #16
   26b38:	ret

0000000000026b3c <acc_delete_finalize_async@@OACC_2.5>:
   26b3c:	stp	x29, x30, [sp, #-16]!
   26b40:	mov	x29, sp
   26b44:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26b48:	add	x4, x4, #0xf8
   26b4c:	add	x4, x4, #0xf8
   26b50:	mov	w3, w2
   26b54:	mov	x2, x1
   26b58:	mov	x1, x0
   26b5c:	mov	w0, #0x2                   	// #2
   26b60:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26b64:	ldp	x29, x30, [sp], #16
   26b68:	ret

0000000000026b6c <acc_copyout@@OACC_2.0>:
   26b6c:	stp	x29, x30, [sp, #-16]!
   26b70:	mov	x29, sp
   26b74:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26b78:	add	x4, x4, #0xf8
   26b7c:	add	x4, x4, #0x118
   26b80:	mov	w3, #0xfffffffe            	// #-2
   26b84:	mov	x2, x1
   26b88:	mov	x1, x0
   26b8c:	mov	w0, #0x1                   	// #1
   26b90:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26b94:	ldp	x29, x30, [sp], #16
   26b98:	ret

0000000000026b9c <acc_copyout_async@@OACC_2.5>:
   26b9c:	stp	x29, x30, [sp, #-16]!
   26ba0:	mov	x29, sp
   26ba4:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26ba8:	add	x4, x4, #0xf8
   26bac:	add	x4, x4, #0x128
   26bb0:	mov	w3, w2
   26bb4:	mov	x2, x1
   26bb8:	mov	x1, x0
   26bbc:	mov	w0, #0x1                   	// #1
   26bc0:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26bc4:	ldp	x29, x30, [sp], #16
   26bc8:	ret

0000000000026bcc <acc_copyout_finalize@@OACC_2.5>:
   26bcc:	stp	x29, x30, [sp, #-16]!
   26bd0:	mov	x29, sp
   26bd4:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26bd8:	add	x4, x4, #0xf8
   26bdc:	add	x4, x4, #0x140
   26be0:	mov	w3, #0xfffffffe            	// #-2
   26be4:	mov	x2, x1
   26be8:	mov	x1, x0
   26bec:	mov	w0, #0x3                   	// #3
   26bf0:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26bf4:	ldp	x29, x30, [sp], #16
   26bf8:	ret

0000000000026bfc <acc_copyout_finalize_async@@OACC_2.5>:
   26bfc:	stp	x29, x30, [sp, #-16]!
   26c00:	mov	x29, sp
   26c04:	adrp	x4, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26c08:	add	x4, x4, #0xf8
   26c0c:	add	x4, x4, #0x158
   26c10:	mov	w3, w2
   26c14:	mov	x2, x1
   26c18:	mov	x1, x0
   26c1c:	mov	w0, #0x3                   	// #3
   26c20:	bl	25c48 <acc_on_device@@OACC_2.0+0x490>
   26c24:	ldp	x29, x30, [sp], #16
   26c28:	ret

0000000000026c2c <acc_update_device@@OACC_2.0>:
   26c2c:	stp	x29, x30, [sp, #-16]!
   26c30:	mov	x29, sp
   26c34:	mov	w3, #0xfffffffe            	// #-2
   26c38:	mov	x2, x1
   26c3c:	mov	x1, x0
   26c40:	mov	w0, #0x1                   	// #1
   26c44:	bl	25af0 <acc_on_device@@OACC_2.0+0x338>
   26c48:	ldp	x29, x30, [sp], #16
   26c4c:	ret

0000000000026c50 <acc_update_device_async@@OACC_2.5>:
   26c50:	stp	x29, x30, [sp, #-16]!
   26c54:	mov	x29, sp
   26c58:	mov	w3, w2
   26c5c:	mov	x2, x1
   26c60:	mov	x1, x0
   26c64:	mov	w0, #0x1                   	// #1
   26c68:	bl	25af0 <acc_on_device@@OACC_2.0+0x338>
   26c6c:	ldp	x29, x30, [sp], #16
   26c70:	ret

0000000000026c74 <acc_update_self@@OACC_2.0>:
   26c74:	stp	x29, x30, [sp, #-16]!
   26c78:	mov	x29, sp
   26c7c:	mov	w3, #0xfffffffe            	// #-2
   26c80:	mov	x2, x1
   26c84:	mov	x1, x0
   26c88:	mov	w0, #0x0                   	// #0
   26c8c:	bl	25af0 <acc_on_device@@OACC_2.0+0x338>
   26c90:	ldp	x29, x30, [sp], #16
   26c94:	ret

0000000000026c98 <acc_update_self_async@@OACC_2.5>:
   26c98:	stp	x29, x30, [sp, #-16]!
   26c9c:	mov	x29, sp
   26ca0:	mov	w3, w2
   26ca4:	mov	x2, x1
   26ca8:	mov	x1, x0
   26cac:	mov	w0, #0x0                   	// #0
   26cb0:	bl	25af0 <acc_on_device@@OACC_2.0+0x338>
   26cb4:	ldp	x29, x30, [sp], #16
   26cb8:	ret
   26cbc:	stp	x29, x30, [sp, #-64]!
   26cc0:	mov	x29, sp
   26cc4:	stp	x19, x20, [sp, #16]
   26cc8:	stp	x21, x22, [sp, #32]
   26ccc:	str	x23, [sp, #48]
   26cd0:	mov	x20, x0
   26cd4:	mov	x19, x1
   26cd8:	mov	x21, x2
   26cdc:	mov	x23, x3
   26ce0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26ce4:	ldr	x0, [x0, #4048]
   26ce8:	mrs	x1, tpidr_el0
   26cec:	ldr	x0, [x1, x0]
   26cf0:	ldr	x22, [x0, #8]
   26cf4:	ldr	x1, [x2]
   26cf8:	ldr	x0, [x19]
   26cfc:	bl	87f0 <acc_is_present@plt>
   26d00:	cbz	w0, 26dec <acc_update_self_async@@OACC_2.5+0x154>
   26d04:	add	x23, x22, #0xa8
   26d08:	mov	w0, #0x1                   	// #1
   26d0c:	ldaxr	w1, [x23]
   26d10:	cbnz	w1, 26d1c <acc_update_self_async@@OACC_2.5+0x84>
   26d14:	stxr	w2, w0, [x23]
   26d18:	cbnz	w2, 26d0c <acc_update_self_async@@OACC_2.5+0x74>
   26d1c:	cmp	w1, #0x0
   26d20:	b.ne	26d84 <acc_update_self_async@@OACC_2.5+0xec>  // b.any
   26d24:	ldr	x2, [x21]
   26d28:	ldr	x1, [x19]
   26d2c:	mov	x0, x22
   26d30:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   26d34:	mov	x19, x0
   26d38:	ldxr	w0, [x23]
   26d3c:	stlxr	w1, wzr, [x23]
   26d40:	cbnz	w1, 26d38 <acc_update_self_async@@OACC_2.5+0xa0>
   26d44:	tbnz	w0, #31, 26d90 <acc_update_self_async@@OACC_2.5+0xf8>
   26d48:	ldr	x5, [x19, #16]
   26d4c:	ldr	x4, [x5, #48]
   26d50:	cbz	x4, 26d78 <acc_update_self_async@@OACC_2.5+0xe0>
   26d54:	mov	x1, #0x0                   	// #0
   26d58:	add	x3, x5, #0x40
   26d5c:	lsl	x2, x1, #5
   26d60:	ldr	x2, [x3, x2]
   26d64:	cmp	x2, x19
   26d68:	b.eq	26d9c <acc_update_self_async@@OACC_2.5+0x104>  // b.none
   26d6c:	add	x1, x1, #0x1
   26d70:	cmp	x1, x4
   26d74:	b.ne	26d5c <acc_update_self_async@@OACC_2.5+0xc4>  // b.any
   26d78:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26d7c:	add	x0, x0, #0xc0
   26d80:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   26d84:	mov	x0, x23
   26d88:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26d8c:	b	26d24 <acc_update_self_async@@OACC_2.5+0x8c>
   26d90:	mov	x0, x23
   26d94:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   26d98:	b	26d48 <acc_update_self_async@@OACC_2.5+0xb0>
   26d9c:	cbz	x20, 26e70 <acc_update_self_async@@OACC_2.5+0x1d8>
   26da0:	add	x20, x20, x1
   26da4:	b	26db4 <acc_update_self_async@@OACC_2.5+0x11c>
   26da8:	add	x1, x1, #0x1
   26dac:	cmp	x1, x20
   26db0:	b.eq	26e70 <acc_update_self_async@@OACC_2.5+0x1d8>  // b.none
   26db4:	ldr	x2, [x5, #48]
   26db8:	cmp	x2, x1
   26dbc:	b.ls	26da8 <acc_update_self_async@@OACC_2.5+0x110>  // b.plast
   26dc0:	lsl	x6, x1, #5
   26dc4:	ldr	x2, [x3, x6]
   26dc8:	cbz	x2, 26da8 <acc_update_self_async@@OACC_2.5+0x110>
   26dcc:	ldr	x4, [x2, #32]
   26dd0:	add	x4, x4, #0x1
   26dd4:	str	x4, [x2, #32]
   26dd8:	ldr	x0, [x3, x6]
   26ddc:	ldr	x2, [x0, #40]
   26de0:	add	x2, x2, #0x1
   26de4:	str	x2, [x0, #40]
   26de8:	b	26da8 <acc_update_self_async@@OACC_2.5+0x110>
   26dec:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   26df0:	ldr	w0, [x0, #1536]
   26df4:	cbnz	w0, 26e84 <acc_update_self_async@@OACC_2.5+0x1ec>
   26df8:	mov	w7, #0x0                   	// #0
   26dfc:	mov	w6, #0x1                   	// #1
   26e00:	mov	x5, x23
   26e04:	mov	x4, x21
   26e08:	mov	x3, #0x0                   	// #0
   26e0c:	mov	x2, x19
   26e10:	mov	x1, x20
   26e14:	mov	x0, x22
   26e18:	bl	1f1b8 <omp_get_place_proc_ids@@OMP_4.5+0x1890>
   26e1c:	mov	x19, x0
   26e20:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   26e24:	ldr	w0, [x0, #1536]
   26e28:	cbnz	w0, 26ea4 <acc_update_self_async@@OACC_2.5+0x20c>
   26e2c:	ldr	x1, [x19, #64]
   26e30:	mov	x0, #0x1                   	// #1
   26e34:	str	x0, [x1, #40]
   26e38:	add	x20, x22, #0xa8
   26e3c:	ldaxr	w1, [x20]
   26e40:	cbnz	w1, 26e4c <acc_update_self_async@@OACC_2.5+0x1b4>
   26e44:	stxr	w2, w0, [x20]
   26e48:	cbnz	w2, 26e3c <acc_update_self_async@@OACC_2.5+0x1a4>
   26e4c:	cmp	w1, #0x0
   26e50:	b.ne	26ec4 <acc_update_self_async@@OACC_2.5+0x22c>  // b.any
   26e54:	ldr	x0, [x22, #176]
   26e58:	str	x0, [x19, #40]
   26e5c:	str	x19, [x22, #176]
   26e60:	ldxr	w0, [x20]
   26e64:	stlxr	w1, wzr, [x20]
   26e68:	cbnz	w1, 26e60 <acc_update_self_async@@OACC_2.5+0x1c8>
   26e6c:	tbnz	w0, #31, 26ed0 <acc_update_self_async@@OACC_2.5+0x238>
   26e70:	ldp	x19, x20, [sp, #16]
   26e74:	ldp	x21, x22, [sp, #32]
   26e78:	ldr	x23, [sp, #48]
   26e7c:	ldp	x29, x30, [sp], #64
   26e80:	ret
   26e84:	adrp	x2, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26e88:	add	x2, x2, #0xf8
   26e8c:	add	x2, x2, #0x178
   26e90:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26e94:	add	x1, x1, #0x9b8
   26e98:	mov	w0, #0x0                   	// #0
   26e9c:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   26ea0:	b	26df8 <acc_update_self_async@@OACC_2.5+0x160>
   26ea4:	adrp	x2, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   26ea8:	add	x2, x2, #0xf8
   26eac:	add	x2, x2, #0x178
   26eb0:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   26eb4:	add	x1, x1, #0x9d0
   26eb8:	mov	w0, #0x0                   	// #0
   26ebc:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   26ec0:	b	26e2c <acc_update_self_async@@OACC_2.5+0x194>
   26ec4:	mov	x0, x20
   26ec8:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   26ecc:	b	26e54 <acc_update_self_async@@OACC_2.5+0x1bc>
   26ed0:	mov	x0, x20
   26ed4:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   26ed8:	b	26e70 <acc_update_self_async@@OACC_2.5+0x1d8>
   26edc:	stp	x29, x30, [sp, #-80]!
   26ee0:	mov	x29, sp
   26ee4:	stp	x19, x20, [sp, #16]
   26ee8:	stp	x21, x22, [sp, #32]
   26eec:	stp	x23, x24, [sp, #48]
   26ef0:	stp	x25, x26, [sp, #64]
   26ef4:	mov	x20, x0
   26ef8:	and	w23, w2, #0xff
   26efc:	mov	w22, w3
   26f00:	mov	w24, w4
   26f04:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   26f08:	ldr	x0, [x0, #4048]
   26f0c:	mrs	x2, tpidr_el0
   26f10:	ldr	x0, [x2, x0]
   26f14:	ldr	x25, [x0, #8]
   26f18:	cmp	w5, #0x1
   26f1c:	cset	w26, ne  // ne = any
   26f20:	mov	x0, x20
   26f24:	bl	87f0 <acc_is_present@plt>
   26f28:	cbz	w0, 27110 <acc_update_self_async@@OACC_2.5+0x478>
   26f2c:	add	w26, w26, #0x2
   26f30:	add	x21, x25, #0xa8
   26f34:	mov	w0, #0x1                   	// #1
   26f38:	ldaxr	w1, [x21]
   26f3c:	cbnz	w1, 26f48 <acc_update_self_async@@OACC_2.5+0x2b0>
   26f40:	stxr	w2, w0, [x21]
   26f44:	cbnz	w2, 26f38 <acc_update_self_async@@OACC_2.5+0x2a0>
   26f48:	cmp	w1, #0x0
   26f4c:	b.ne	26ff8 <acc_update_self_async@@OACC_2.5+0x360>  // b.any
   26f50:	mov	x2, #0x1                   	// #1
   26f54:	mov	x1, x20
   26f58:	mov	x0, x25
   26f5c:	bl	25ac8 <acc_on_device@@OACC_2.0+0x310>
   26f60:	mov	x19, x0
   26f64:	cbz	x0, 27004 <acc_update_self_async@@OACC_2.5+0x36c>
   26f68:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   26f6c:	ldr	w0, [x0, #1536]
   26f70:	cbnz	w0, 2701c <acc_update_self_async@@OACC_2.5+0x384>
   26f74:	ldr	x20, [x19, #16]
   26f78:	ldr	x0, [x19, #32]
   26f7c:	ldr	x1, [x19, #40]
   26f80:	cmp	x0, x1
   26f84:	b.cc	2703c <acc_update_self_async@@OACC_2.5+0x3a4>  // b.lo, b.ul, b.last
   26f88:	cbz	w24, 27050 <acc_update_self_async@@OACC_2.5+0x3b8>
   26f8c:	sub	x0, x0, x1
   26f90:	str	x0, [x19, #32]
   26f94:	str	xzr, [x19, #40]
   26f98:	ldxr	w0, [x21]
   26f9c:	stlxr	w1, wzr, [x21]
   26fa0:	cbnz	w1, 26f98 <acc_update_self_async@@OACC_2.5+0x300>
   26fa4:	tbnz	w0, #31, 27068 <acc_update_self_async@@OACC_2.5+0x3d0>
   26fa8:	ldr	x1, [x19, #32]
   26fac:	cbnz	x1, 270f4 <acc_update_self_async@@OACC_2.5+0x45c>
   26fb0:	sxtw	x4, w26
   26fb4:	ldr	x0, [x20]
   26fb8:	cmp	x0, w26, sxtw
   26fbc:	b.eq	27074 <acc_update_self_async@@OACC_2.5+0x3dc>  // b.none
   26fc0:	mov	x0, #0x1                   	// #1
   26fc4:	str	x0, [x19, #32]
   26fc8:	str	x4, [x20]
   26fcc:	ldr	x2, [x20, #48]
   26fd0:	cbz	x2, 270d8 <acc_update_self_async@@OACC_2.5+0x440>
   26fd4:	add	x3, x20, #0x40
   26fd8:	lsl	x0, x1, #5
   26fdc:	ldr	x0, [x3, x0]
   26fe0:	cmp	x0, x19
   26fe4:	b.eq	270d0 <acc_update_self_async@@OACC_2.5+0x438>  // b.none
   26fe8:	add	x1, x1, #0x1
   26fec:	cmp	x1, x2
   26ff0:	b.ne	26fd8 <acc_update_self_async@@OACC_2.5+0x340>  // b.any
   26ff4:	b	270d8 <acc_update_self_async@@OACC_2.5+0x440>
   26ff8:	mov	x0, x21
   26ffc:	bl	1af68 <omp_test_nest_lock@OMP_1.0+0x90>
   27000:	b	26f50 <acc_update_self_async@@OACC_2.5+0x2b8>
   27004:	mov	x0, x21
   27008:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   2700c:	mov	x1, x20
   27010:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27014:	add	x0, x0, #0x60
   27018:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   2701c:	adrp	x2, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27020:	add	x2, x2, #0xf8
   27024:	add	x2, x2, #0x190
   27028:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2702c:	add	x1, x1, #0x9f0
   27030:	mov	w0, #0x0                   	// #0
   27034:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   27038:	b	26f74 <acc_update_self_async@@OACC_2.5+0x2dc>
   2703c:	mov	x0, x21
   27040:	bl	25960 <acc_on_device@@OACC_2.0+0x1a8>
   27044:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   27048:	add	x0, x0, #0xf28
   2704c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27050:	cbz	x1, 26f98 <acc_update_self_async@@OACC_2.5+0x300>
   27054:	sub	x1, x1, #0x1
   27058:	str	x1, [x19, #40]
   2705c:	sub	x0, x0, #0x1
   27060:	str	x0, [x19, #32]
   27064:	b	26f98 <acc_update_self_async@@OACC_2.5+0x300>
   27068:	mov	x0, x21
   2706c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   27070:	b	26fa8 <acc_update_self_async@@OACC_2.5+0x310>
   27074:	ldr	x0, [x25, #176]
   27078:	cbz	x0, 270c8 <acc_update_self_async@@OACC_2.5+0x430>
   2707c:	ldr	x3, [x19, #16]
   27080:	mov	x2, #0x0                   	// #0
   27084:	b	2708c <acc_update_self_async@@OACC_2.5+0x3f4>
   27088:	mov	x0, x20
   2708c:	cmp	x3, x0
   27090:	b.eq	270a4 <acc_update_self_async@@OACC_2.5+0x40c>  // b.none
   27094:	ldr	x20, [x0, #40]
   27098:	mov	x2, x0
   2709c:	cbnz	x20, 27088 <acc_update_self_async@@OACC_2.5+0x3f0>
   270a0:	b	26fc0 <acc_update_self_async@@OACC_2.5+0x328>
   270a4:	cbz	x2, 270b8 <acc_update_self_async@@OACC_2.5+0x420>
   270a8:	ldr	x3, [x0, #40]
   270ac:	str	x3, [x2, #40]
   270b0:	mov	x20, x0
   270b4:	b	26fc0 <acc_update_self_async@@OACC_2.5+0x328>
   270b8:	ldr	x2, [x0, #40]
   270bc:	str	x2, [x25, #176]
   270c0:	mov	x20, x0
   270c4:	b	26fc0 <acc_update_self_async@@OACC_2.5+0x328>
   270c8:	mov	x20, x0
   270cc:	b	26fc0 <acc_update_self_async@@OACC_2.5+0x328>
   270d0:	add	x1, x20, x1, lsl #5
   270d4:	strb	w23, [x1, #72]
   270d8:	cmn	w22, #0x1
   270dc:	b.lt	27128 <acc_update_self_async@@OACC_2.5+0x490>  // b.tstop
   270e0:	ldr	x0, [x20, #56]
   270e4:	ldr	x2, [x0, #192]
   270e8:	mov	w1, w22
   270ec:	mov	x0, x20
   270f0:	blr	x2
   270f4:	ldxr	w0, [x21]
   270f8:	stlxr	w1, wzr, [x21]
   270fc:	cbnz	w1, 270f4 <acc_update_self_async@@OACC_2.5+0x45c>
   27100:	tbnz	w0, #31, 27138 <acc_update_self_async@@OACC_2.5+0x4a0>
   27104:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27108:	ldr	w0, [x0, #1536]
   2710c:	cbnz	w0, 27144 <acc_update_self_async@@OACC_2.5+0x4ac>
   27110:	ldp	x19, x20, [sp, #16]
   27114:	ldp	x21, x22, [sp, #32]
   27118:	ldp	x23, x24, [sp, #48]
   2711c:	ldp	x25, x26, [sp, #64]
   27120:	ldp	x29, x30, [sp], #80
   27124:	ret
   27128:	mov	w1, #0x1                   	// #1
   2712c:	mov	x0, x20
   27130:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   27134:	b	270f4 <acc_update_self_async@@OACC_2.5+0x45c>
   27138:	mov	x0, x21
   2713c:	bl	1b150 <omp_test_nest_lock@OMP_1.0+0x278>
   27140:	b	27104 <acc_update_self_async@@OACC_2.5+0x46c>
   27144:	adrp	x2, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27148:	add	x2, x2, #0xf8
   2714c:	add	x2, x2, #0x190
   27150:	adrp	x1, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   27154:	add	x1, x1, #0xa08
   27158:	mov	w0, #0x0                   	// #0
   2715c:	bl	b600 <GOMP_critical_name_end@@GOMP_1.0+0x2750>
   27160:	b	27110 <acc_update_self_async@@OACC_2.5+0x478>

0000000000027164 <acc_async_test@@OACC_2.0>:
   27164:	stp	x29, x30, [sp, #-16]!
   27168:	mov	x29, sp
   2716c:	add	w1, w0, #0x2
   27170:	cmp	w0, #0x0
   27174:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   27178:	b.hi	271a8 <acc_async_test@@OACC_2.0+0x44>  // b.pmore
   2717c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27180:	ldr	x1, [x1, #4048]
   27184:	mrs	x2, tpidr_el0
   27188:	ldr	x1, [x2, x1]
   2718c:	cbz	x1, 271b8 <acc_async_test@@OACC_2.0+0x54>
   27190:	ldr	x1, [x1, #8]
   27194:	cbz	x1, 271b8 <acc_async_test@@OACC_2.0+0x54>
   27198:	ldr	x1, [x1, #200]
   2719c:	blr	x1
   271a0:	ldp	x29, x30, [sp], #16
   271a4:	ret
   271a8:	mov	w1, w0
   271ac:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   271b0:	add	x0, x0, #0x2a0
   271b4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   271b8:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   271bc:	add	x0, x0, #0x2c0
   271c0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

00000000000271c4 <acc_async_test_all@@OACC_2.0>:
   271c4:	stp	x29, x30, [sp, #-16]!
   271c8:	mov	x29, sp
   271cc:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   271d0:	ldr	x0, [x0, #4048]
   271d4:	mrs	x1, tpidr_el0
   271d8:	ldr	x0, [x1, x0]
   271dc:	cbz	x0, 271f8 <acc_async_test_all@@OACC_2.0+0x34>
   271e0:	ldr	x0, [x0, #8]
   271e4:	cbz	x0, 271f8 <acc_async_test_all@@OACC_2.0+0x34>
   271e8:	ldr	x0, [x0, #208]
   271ec:	blr	x0
   271f0:	ldp	x29, x30, [sp], #16
   271f4:	ret
   271f8:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   271fc:	add	x0, x0, #0x2c0
   27200:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

0000000000027204 <acc_async_wait@@OACC_2.0.1>:
   27204:	stp	x29, x30, [sp, #-16]!
   27208:	mov	x29, sp
   2720c:	add	w1, w0, #0x2
   27210:	cmp	w0, #0x0
   27214:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   27218:	b.hi	27248 <acc_async_wait@@OACC_2.0.1+0x44>  // b.pmore
   2721c:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27220:	ldr	x1, [x1, #4048]
   27224:	mrs	x2, tpidr_el0
   27228:	ldr	x1, [x2, x1]
   2722c:	cbz	x1, 27258 <acc_async_wait@@OACC_2.0.1+0x54>
   27230:	ldr	x1, [x1, #8]
   27234:	cbz	x1, 27258 <acc_async_wait@@OACC_2.0.1+0x54>
   27238:	ldr	x1, [x1, #216]
   2723c:	blr	x1
   27240:	ldp	x29, x30, [sp], #16
   27244:	ret
   27248:	mov	w1, w0
   2724c:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27250:	add	x0, x0, #0x2a0
   27254:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27258:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2725c:	add	x0, x0, #0x2c0
   27260:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

0000000000027264 <acc_wait_async@@OACC_2.0>:
   27264:	stp	x29, x30, [sp, #-16]!
   27268:	mov	x29, sp
   2726c:	adrp	x2, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27270:	ldr	x2, [x2, #4048]
   27274:	mrs	x3, tpidr_el0
   27278:	ldr	x2, [x3, x2]
   2727c:	cbz	x2, 27298 <acc_wait_async@@OACC_2.0+0x34>
   27280:	ldr	x2, [x2, #8]
   27284:	cbz	x2, 27298 <acc_wait_async@@OACC_2.0+0x34>
   27288:	ldr	x2, [x2, #224]
   2728c:	blr	x2
   27290:	ldp	x29, x30, [sp], #16
   27294:	ret
   27298:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2729c:	add	x0, x0, #0x2c0
   272a0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

00000000000272a4 <acc_async_wait_all@@OACC_2.0.1>:
   272a4:	stp	x29, x30, [sp, #-16]!
   272a8:	mov	x29, sp
   272ac:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   272b0:	ldr	x0, [x0, #4048]
   272b4:	mrs	x1, tpidr_el0
   272b8:	ldr	x0, [x1, x0]
   272bc:	cbz	x0, 272d8 <acc_async_wait_all@@OACC_2.0.1+0x34>
   272c0:	ldr	x0, [x0, #8]
   272c4:	cbz	x0, 272d8 <acc_async_wait_all@@OACC_2.0.1+0x34>
   272c8:	ldr	x0, [x0, #232]
   272cc:	blr	x0
   272d0:	ldp	x29, x30, [sp], #16
   272d4:	ret
   272d8:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   272dc:	add	x0, x0, #0x2c0
   272e0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

00000000000272e4 <acc_wait_all_async@@OACC_2.0>:
   272e4:	stp	x29, x30, [sp, #-16]!
   272e8:	mov	x29, sp
   272ec:	add	w1, w0, #0x2
   272f0:	cmp	w0, #0x0
   272f4:	ccmp	w1, #0x1, #0x0, lt  // lt = tstop
   272f8:	b.hi	27328 <acc_wait_all_async@@OACC_2.0+0x44>  // b.pmore
   272fc:	adrp	x1, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27300:	ldr	x1, [x1, #4048]
   27304:	mrs	x2, tpidr_el0
   27308:	ldr	x1, [x2, x1]
   2730c:	cbz	x1, 27338 <acc_wait_all_async@@OACC_2.0+0x54>
   27310:	ldr	x1, [x1, #8]
   27314:	cbz	x1, 27338 <acc_wait_all_async@@OACC_2.0+0x54>
   27318:	ldr	x1, [x1, #240]
   2731c:	blr	x1
   27320:	ldp	x29, x30, [sp], #16
   27324:	ret
   27328:	mov	w1, w0
   2732c:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27330:	add	x0, x0, #0x2a0
   27334:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27338:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2733c:	add	x0, x0, #0x2c0
   27340:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

0000000000027344 <GOMP_PLUGIN_async_unmap_vars@@GOMP_PLUGIN_1.0>:
   27344:	stp	x29, x30, [sp, #-32]!
   27348:	mov	x29, sp
   2734c:	stp	x19, x20, [sp, #16]
   27350:	mov	x19, x0
   27354:	mov	w0, w1
   27358:	ldr	x20, [x19, #56]
   2735c:	ldr	x2, [x20, #248]
   27360:	blr	x2
   27364:	mov	w1, #0x1                   	// #1
   27368:	mov	x0, x19
   2736c:	bl	20ad4 <omp_get_place_proc_ids@@OMP_4.5+0x31ac>
   27370:	ldr	x1, [x20, #248]
   27374:	mov	w0, #0xfffffffe            	// #-2
   27378:	blr	x1
   2737c:	ldp	x19, x20, [sp, #16]
   27380:	ldp	x29, x30, [sp], #32
   27384:	ret

0000000000027388 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0>:
   27388:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2738c:	ldr	x0, [x0, #4048]
   27390:	mrs	x1, tpidr_el0
   27394:	ldr	x0, [x1, x0]
   27398:	cbz	x0, 273a0 <GOMP_PLUGIN_acc_thread@@GOMP_PLUGIN_1.0+0x18>
   2739c:	ldr	x0, [x0, #40]
   273a0:	ret

00000000000273a4 <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2>:
   273a4:	cmp	w0, #0x2
   273a8:	b.hi	273bc <GOMP_PLUGIN_acc_default_dim@@GOMP_PLUGIN_1.2+0x18>  // b.pmore
   273ac:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   273b0:	add	x1, x1, #0x610
   273b4:	ldr	w0, [x1, w0, uxtw #2]
   273b8:	ret
   273bc:	stp	x29, x30, [sp, #-16]!
   273c0:	mov	x29, sp
   273c4:	mov	w1, w0
   273c8:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   273cc:	add	x0, x0, #0x2d8
   273d0:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>

00000000000273d4 <acc_get_current_cuda_device@@OACC_2.0>:
   273d4:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   273d8:	ldr	x0, [x0, #4048]
   273dc:	mrs	x1, tpidr_el0
   273e0:	ldr	x0, [x1, x0]
   273e4:	cbz	x0, 27410 <acc_get_current_cuda_device@@OACC_2.0+0x3c>
   273e8:	ldr	x0, [x0, #8]
   273ec:	cbz	x0, 27410 <acc_get_current_cuda_device@@OACC_2.0+0x3c>
   273f0:	ldr	x1, [x0, #272]
   273f4:	mov	x0, #0x0                   	// #0
   273f8:	cbz	x1, 27410 <acc_get_current_cuda_device@@OACC_2.0+0x3c>
   273fc:	stp	x29, x30, [sp, #-16]!
   27400:	mov	x29, sp
   27404:	blr	x1
   27408:	ldp	x29, x30, [sp], #16
   2740c:	ret
   27410:	ret

0000000000027414 <acc_get_current_cuda_context@@OACC_2.0>:
   27414:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27418:	ldr	x0, [x0, #4048]
   2741c:	mrs	x1, tpidr_el0
   27420:	ldr	x0, [x1, x0]
   27424:	cbz	x0, 27450 <acc_get_current_cuda_context@@OACC_2.0+0x3c>
   27428:	ldr	x0, [x0, #8]
   2742c:	cbz	x0, 27450 <acc_get_current_cuda_context@@OACC_2.0+0x3c>
   27430:	ldr	x1, [x0, #280]
   27434:	mov	x0, #0x0                   	// #0
   27438:	cbz	x1, 27450 <acc_get_current_cuda_context@@OACC_2.0+0x3c>
   2743c:	stp	x29, x30, [sp, #-16]!
   27440:	mov	x29, sp
   27444:	blr	x1
   27448:	ldp	x29, x30, [sp], #16
   2744c:	ret
   27450:	ret

0000000000027454 <acc_get_cuda_stream@@OACC_2.0>:
   27454:	mov	w1, w0
   27458:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   2745c:	ldr	x0, [x0, #4048]
   27460:	mrs	x2, tpidr_el0
   27464:	ldr	x0, [x2, x0]
   27468:	add	w2, w1, #0x2
   2746c:	cmp	w1, #0x0
   27470:	ccmp	w2, #0x1, #0x0, lt  // lt = tstop
   27474:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
   27478:	b.eq	274a8 <acc_get_cuda_stream@@OACC_2.0+0x54>  // b.none
   2747c:	ldr	x0, [x0, #8]
   27480:	cbz	x0, 274b0 <acc_get_cuda_stream@@OACC_2.0+0x5c>
   27484:	ldr	x2, [x0, #288]
   27488:	mov	x0, #0x0                   	// #0
   2748c:	cbz	x2, 274b0 <acc_get_cuda_stream@@OACC_2.0+0x5c>
   27490:	stp	x29, x30, [sp, #-16]!
   27494:	mov	x29, sp
   27498:	mov	w0, w1
   2749c:	blr	x2
   274a0:	ldp	x29, x30, [sp], #16
   274a4:	ret
   274a8:	mov	x0, #0x0                   	// #0
   274ac:	ret
   274b0:	ret

00000000000274b4 <acc_set_cuda_stream@@OACC_2.0>:
   274b4:	stp	x29, x30, [sp, #-32]!
   274b8:	mov	x29, sp
   274bc:	stp	x19, x20, [sp, #16]
   274c0:	mov	w19, w0
   274c4:	add	w0, w0, #0x2
   274c8:	cmp	w19, #0x0
   274cc:	ccmp	w0, #0x1, #0x0, lt  // lt = tstop
   274d0:	cset	w0, hi  // hi = pmore
   274d4:	cmp	x1, #0x0
   274d8:	csinc	w0, w0, wzr, ne  // ne = any
   274dc:	cbz	w0, 274f0 <acc_set_cuda_stream@@OACC_2.0+0x3c>
   274e0:	mov	w0, #0x0                   	// #0
   274e4:	ldp	x19, x20, [sp, #16]
   274e8:	ldp	x29, x30, [sp], #32
   274ec:	ret
   274f0:	mov	x20, x1
   274f4:	bl	25890 <acc_on_device@@OACC_2.0+0xd8>
   274f8:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   274fc:	ldr	x0, [x0, #4048]
   27500:	mrs	x1, tpidr_el0
   27504:	ldr	x0, [x1, x0]
   27508:	cbz	x0, 2752c <acc_set_cuda_stream@@OACC_2.0+0x78>
   2750c:	ldr	x0, [x0, #8]
   27510:	cbz	x0, 27534 <acc_set_cuda_stream@@OACC_2.0+0x80>
   27514:	ldr	x2, [x0, #296]
   27518:	cbz	x2, 2753c <acc_set_cuda_stream@@OACC_2.0+0x88>
   2751c:	mov	x1, x20
   27520:	mov	w0, w19
   27524:	blr	x2
   27528:	b	274e4 <acc_set_cuda_stream@@OACC_2.0+0x30>
   2752c:	mov	w0, #0xffffffff            	// #-1
   27530:	b	274e4 <acc_set_cuda_stream@@OACC_2.0+0x30>
   27534:	mov	w0, #0xffffffff            	// #-1
   27538:	b	274e4 <acc_set_cuda_stream@@OACC_2.0+0x30>
   2753c:	mov	w0, #0xffffffff            	// #-1
   27540:	b	274e4 <acc_set_cuda_stream@@OACC_2.0+0x30>
   27544:	stp	x29, x30, [sp, #-48]!
   27548:	mov	x29, sp
   2754c:	stp	x19, x20, [sp, #16]
   27550:	mov	x19, x1
   27554:	cbz	x1, 275a4 <acc_set_cuda_stream@@OACC_2.0+0xf0>
   27558:	str	x21, [sp, #32]
   2755c:	mov	w21, w0
   27560:	sxtw	x20, w0
   27564:	add	x20, x20, #0x6
   27568:	neg	x20, x20, lsl #4
   2756c:	ldr	x1, [x19, #32]
   27570:	mov	w0, w21
   27574:	bl	27544 <acc_set_cuda_stream@@OACC_2.0+0x90>
   27578:	cbnz	x0, 275ac <acc_set_cuda_stream@@OACC_2.0+0xf8>
   2757c:	ldr	x0, [x19, #8]
   27580:	add	x0, x0, x20
   27584:	ldr	w1, [x0, #200]
   27588:	cmp	w1, #0x2
   2758c:	b.eq	275bc <acc_set_cuda_stream@@OACC_2.0+0x108>  // b.none
   27590:	ldr	x19, [x19, #24]
   27594:	cbnz	x19, 2756c <acc_set_cuda_stream@@OACC_2.0+0xb8>
   27598:	mov	x0, x19
   2759c:	ldr	x21, [sp, #32]
   275a0:	b	275b0 <acc_set_cuda_stream@@OACC_2.0+0xfc>
   275a4:	mov	x0, x1
   275a8:	b	275b0 <acc_set_cuda_stream@@OACC_2.0+0xfc>
   275ac:	ldr	x21, [sp, #32]
   275b0:	ldp	x19, x20, [sp, #16]
   275b4:	ldp	x29, x30, [sp], #48
   275b8:	ret
   275bc:	ldr	x21, [sp, #32]
   275c0:	b	275b0 <acc_set_cuda_stream@@OACC_2.0+0xfc>
   275c4:	ldr	x2, [x0]
   275c8:	cbz	x2, 275fc <acc_set_cuda_stream@@OACC_2.0+0x148>
   275cc:	ldr	w4, [x1]
   275d0:	ldr	w3, [x2]
   275d4:	cmp	w4, w3
   275d8:	b.eq	275fc <acc_set_cuda_stream@@OACC_2.0+0x148>  // b.none
   275dc:	mov	w7, #0x1                   	// #1
   275e0:	mov	w8, #0xffffffff            	// #-1
   275e4:	b	276a8 <acc_set_cuda_stream@@OACC_2.0+0x1f4>
   275e8:	tbnz	w6, #31, 27600 <acc_set_cuda_stream@@OACC_2.0+0x14c>
   275ec:	ldr	x1, [x3, #24]
   275f0:	str	x2, [x3, #24]
   275f4:	str	x1, [x2, #32]
   275f8:	str	x3, [x0]
   275fc:	ret
   27600:	ldr	x1, [x3, #32]
   27604:	str	x2, [x3, #32]
   27608:	str	x1, [x2, #24]
   2760c:	str	x3, [x0]
   27610:	b	275fc <acc_set_cuda_stream@@OACC_2.0+0x148>
   27614:	ldr	x5, [x4, #24]
   27618:	str	x3, [x4, #24]
   2761c:	str	x5, [x3, #32]
   27620:	str	x4, [x2, #32]
   27624:	ldr	x3, [x4, #24]
   27628:	str	x2, [x4, #24]
   2762c:	str	x3, [x2, #32]
   27630:	str	x4, [x0]
   27634:	b	27694 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   27638:	cmp	w6, #0x0
   2763c:	b.le	27694 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   27640:	ldr	x4, [x3, #24]
   27644:	ldr	x5, [x4, #32]
   27648:	str	x3, [x4, #32]
   2764c:	str	x5, [x3, #24]
   27650:	str	x4, [x2, #32]
   27654:	ldr	x3, [x4, #24]
   27658:	str	x2, [x4, #24]
   2765c:	str	x3, [x2, #32]
   27660:	str	x4, [x0]
   27664:	b	27694 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   27668:	ldr	x4, [x3, #24]
   2766c:	cbz	x4, 275e8 <acc_set_cuda_stream@@OACC_2.0+0x134>
   27670:	tbz	w6, #31, 27638 <acc_set_cuda_stream@@OACC_2.0+0x184>
   27674:	ldr	x5, [x4, #32]
   27678:	str	x3, [x4, #32]
   2767c:	str	x5, [x3, #24]
   27680:	str	x4, [x2, #24]
   27684:	ldr	x3, [x4, #32]
   27688:	str	x2, [x4, #32]
   2768c:	str	x3, [x2, #24]
   27690:	str	x4, [x0]
   27694:	ldr	x2, [x0]
   27698:	ldr	w4, [x1]
   2769c:	ldr	w3, [x2]
   276a0:	cmp	w3, w4
   276a4:	b.eq	275fc <acc_set_cuda_stream@@OACC_2.0+0x148>  // b.none
   276a8:	cmp	w3, w4
   276ac:	b.gt	27708 <acc_set_cuda_stream@@OACC_2.0+0x254>
   276b0:	ldr	x3, [x2, #32]
   276b4:	mov	w6, w7
   276b8:	cbz	x3, 275fc <acc_set_cuda_stream@@OACC_2.0+0x148>
   276bc:	ldr	w5, [x3]
   276c0:	cmp	w5, w4
   276c4:	b.eq	275e8 <acc_set_cuda_stream@@OACC_2.0+0x134>  // b.none
   276c8:	b.gt	27668 <acc_set_cuda_stream@@OACC_2.0+0x1b4>
   276cc:	ldr	x4, [x3, #32]
   276d0:	cbz	x4, 275e8 <acc_set_cuda_stream@@OACC_2.0+0x134>
   276d4:	cmp	w6, #0x0
   276d8:	b.gt	27614 <acc_set_cuda_stream@@OACC_2.0+0x160>
   276dc:	tbz	w6, #31, 27694 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   276e0:	ldr	x4, [x3, #32]
   276e4:	ldr	x5, [x4, #24]
   276e8:	str	x3, [x4, #24]
   276ec:	str	x5, [x3, #32]
   276f0:	str	x4, [x2, #24]
   276f4:	ldr	x3, [x4, #32]
   276f8:	str	x2, [x4, #32]
   276fc:	str	x3, [x2, #24]
   27700:	str	x4, [x0]
   27704:	b	27694 <acc_set_cuda_stream@@OACC_2.0+0x1e0>
   27708:	ldr	x3, [x2, #24]
   2770c:	mov	w6, w8
   27710:	b	276b8 <acc_set_cuda_stream@@OACC_2.0+0x204>
   27714:	cbz	x0, 2776c <acc_set_cuda_stream@@OACC_2.0+0x2b8>
   27718:	stp	x29, x30, [sp, #-48]!
   2771c:	mov	x29, sp
   27720:	stp	x19, x20, [sp, #16]
   27724:	str	x21, [sp, #32]
   27728:	mov	x19, x0
   2772c:	mov	x20, x1
   27730:	mov	x21, x2
   27734:	mov	x1, x2
   27738:	blr	x20
   2773c:	mov	x2, x21
   27740:	mov	x1, x20
   27744:	ldr	x0, [x19, #24]
   27748:	bl	27714 <acc_set_cuda_stream@@OACC_2.0+0x260>
   2774c:	mov	x2, x21
   27750:	mov	x1, x20
   27754:	ldr	x0, [x19, #32]
   27758:	bl	27714 <acc_set_cuda_stream@@OACC_2.0+0x260>
   2775c:	ldp	x19, x20, [sp, #16]
   27760:	ldr	x21, [sp, #32]
   27764:	ldp	x29, x30, [sp], #48
   27768:	ret
   2776c:	ret
   27770:	stp	x29, x30, [sp, #-48]!
   27774:	mov	x29, sp
   27778:	stp	x19, x20, [sp, #16]
   2777c:	stp	x21, x22, [sp, #32]
   27780:	mov	w21, w2
   27784:	mov	x20, x3
   27788:	mov	x22, x4
   2778c:	ldr	x1, [x1]
   27790:	bl	27544 <acc_set_cuda_stream@@OACC_2.0+0x90>
   27794:	mov	x19, x0
   27798:	cmp	x0, #0x0
   2779c:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   277a0:	b.ne	277c0 <acc_set_cuda_stream@@OACC_2.0+0x30c>  // b.any
   277a4:	mov	w0, #0x1                   	// #1
   277a8:	strb	w0, [x22]
   277ac:	mov	x0, x19
   277b0:	ldp	x19, x20, [sp, #16]
   277b4:	ldp	x21, x22, [sp, #32]
   277b8:	ldp	x29, x30, [sp], #48
   277bc:	ret
   277c0:	ldr	x1, [x20]
   277c4:	mov	w0, w21
   277c8:	bl	27544 <acc_set_cuda_stream@@OACC_2.0+0x90>
   277cc:	cbz	x0, 27800 <acc_set_cuda_stream@@OACC_2.0+0x34c>
   277d0:	ldr	w2, [x19, #88]
   277d4:	ldr	w1, [x0, #88]
   277d8:	cmp	w2, w1
   277dc:	b.gt	27800 <acc_set_cuda_stream@@OACC_2.0+0x34c>
   277e0:	b.lt	2780c <acc_set_cuda_stream@@OACC_2.0+0x358>  // b.tstop
   277e4:	ldrb	w1, [x0, #207]
   277e8:	cbz	w1, 277f4 <acc_set_cuda_stream@@OACC_2.0+0x340>
   277ec:	ldrb	w1, [x19, #207]
   277f0:	cbz	w1, 27818 <acc_set_cuda_stream@@OACC_2.0+0x364>
   277f4:	mov	w0, #0x1                   	// #1
   277f8:	strb	w0, [x22]
   277fc:	b	277ac <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   27800:	mov	w0, #0x1                   	// #1
   27804:	strb	w0, [x22]
   27808:	b	277ac <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   2780c:	strb	wzr, [x22]
   27810:	mov	x19, x0
   27814:	b	277ac <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   27818:	strb	wzr, [x22]
   2781c:	mov	x19, x0
   27820:	b	277ac <acc_set_cuda_stream@@OACC_2.0+0x2f8>
   27824:	stp	x29, x30, [sp, #-32]!
   27828:	mov	x29, sp
   2782c:	stp	x19, x20, [sp, #16]
   27830:	mov	x20, x0
   27834:	mov	x19, x1
   27838:	bl	275c4 <acc_set_cuda_stream@@OACC_2.0+0x110>
   2783c:	ldr	x0, [x20]
   27840:	cbz	x0, 27884 <acc_set_cuda_stream@@OACC_2.0+0x3d0>
   27844:	ldr	w2, [x0]
   27848:	ldr	w1, [x19]
   2784c:	cmp	w2, w1
   27850:	b.eq	27878 <acc_set_cuda_stream@@OACC_2.0+0x3c4>  // b.none
   27854:	b.lt	27890 <acc_set_cuda_stream@@OACC_2.0+0x3dc>  // b.tstop
   27858:	str	x0, [x19, #32]
   2785c:	ldr	x1, [x0, #24]
   27860:	str	x1, [x19, #24]
   27864:	str	xzr, [x0, #24]
   27868:	str	x19, [x20]
   2786c:	ldp	x19, x20, [sp, #16]
   27870:	ldp	x29, x30, [sp], #32
   27874:	ret
   27878:	adrp	x0, 29000 <omp_get_team_num@@OMP_4.0+0x8c8>
   2787c:	add	x0, x0, #0x8e0
   27880:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27884:	str	xzr, [x19, #32]
   27888:	str	xzr, [x19, #24]
   2788c:	b	27868 <acc_set_cuda_stream@@OACC_2.0+0x3b4>
   27890:	str	x0, [x19, #24]
   27894:	ldr	x1, [x0, #32]
   27898:	str	x1, [x19, #32]
   2789c:	str	xzr, [x0, #32]
   278a0:	b	27868 <acc_set_cuda_stream@@OACC_2.0+0x3b4>
   278a4:	stp	x29, x30, [sp, #-32]!
   278a8:	mov	x29, sp
   278ac:	stp	x19, x20, [sp, #16]
   278b0:	mov	x19, x0
   278b4:	mov	x20, x1
   278b8:	bl	275c4 <acc_set_cuda_stream@@OACC_2.0+0x110>
   278bc:	ldr	x1, [x19]
   278c0:	cbz	x1, 278d4 <acc_set_cuda_stream@@OACC_2.0+0x420>
   278c4:	ldr	w2, [x1]
   278c8:	ldr	w0, [x20]
   278cc:	cmp	w2, w0
   278d0:	b.eq	278e0 <acc_set_cuda_stream@@OACC_2.0+0x42c>  // b.none
   278d4:	ldp	x19, x20, [sp, #16]
   278d8:	ldp	x29, x30, [sp], #32
   278dc:	ret
   278e0:	ldr	x0, [x1, #24]
   278e4:	ldr	x2, [x1, #32]
   278e8:	cbz	x0, 27908 <acc_set_cuda_stream@@OACC_2.0+0x454>
   278ec:	str	x0, [x19]
   278f0:	cbz	x2, 278d4 <acc_set_cuda_stream@@OACC_2.0+0x420>
   278f4:	mov	x1, x0
   278f8:	ldr	x0, [x0, #32]
   278fc:	cbnz	x0, 278f4 <acc_set_cuda_stream@@OACC_2.0+0x440>
   27900:	str	x2, [x1, #32]
   27904:	b	278d4 <acc_set_cuda_stream@@OACC_2.0+0x420>
   27908:	str	x2, [x19]
   2790c:	b	278d4 <acc_set_cuda_stream@@OACC_2.0+0x420>
   27910:	stp	x29, x30, [sp, #-32]!
   27914:	mov	x29, sp
   27918:	stp	x19, x20, [sp, #16]
   2791c:	mov	x19, x0
   27920:	mov	x20, x1
   27924:	bl	275c4 <acc_set_cuda_stream@@OACC_2.0+0x110>
   27928:	ldr	x0, [x19]
   2792c:	cbz	x0, 27940 <acc_set_cuda_stream@@OACC_2.0+0x48c>
   27930:	ldr	w2, [x0]
   27934:	ldr	w1, [x20]
   27938:	cmp	w2, w1
   2793c:	csel	x0, x0, xzr, eq  // eq = none
   27940:	ldp	x19, x20, [sp, #16]
   27944:	ldp	x29, x30, [sp], #32
   27948:	ret
   2794c:	stp	x29, x30, [sp, #-80]!
   27950:	mov	x29, sp
   27954:	stp	x19, x20, [sp, #16]
   27958:	str	x21, [sp, #32]
   2795c:	mov	x21, x1
   27960:	mov	x19, x2
   27964:	sub	x0, x2, w0, sxtw #4
   27968:	ldur	w0, [x0, #-8]
   2796c:	ldr	x20, [x1]
   27970:	cbz	x20, 27988 <acc_set_cuda_stream@@OACC_2.0+0x4d4>
   27974:	str	w0, [sp, #56]
   27978:	add	x1, sp, #0x38
   2797c:	mov	x0, x21
   27980:	bl	27910 <acc_set_cuda_stream@@OACC_2.0+0x45c>
   27984:	mov	x20, x0
   27988:	ldr	x1, [x19, #8]
   2798c:	ldr	x0, [x19]
   27990:	str	x0, [x1]
   27994:	ldr	x1, [x19, #8]
   27998:	str	x1, [x0, #8]
   2799c:	ldr	x0, [x20, #8]
   279a0:	cmp	x19, x0
   279a4:	b.eq	279b8 <acc_set_cuda_stream@@OACC_2.0+0x504>  // b.none
   279a8:	ldp	x19, x20, [sp, #16]
   279ac:	ldr	x21, [sp, #32]
   279b0:	ldp	x29, x30, [sp], #80
   279b4:	ret
   279b8:	ldr	x0, [x19]
   279bc:	cmp	x19, x0
   279c0:	b.eq	279cc <acc_set_cuda_stream@@OACC_2.0+0x518>  // b.none
   279c4:	str	x0, [x20, #8]
   279c8:	b	279a8 <acc_set_cuda_stream@@OACC_2.0+0x4f4>
   279cc:	str	xzr, [x20, #8]
   279d0:	mov	x1, x20
   279d4:	mov	x0, x21
   279d8:	bl	278a4 <acc_set_cuda_stream@@OACC_2.0+0x3f0>
   279dc:	mov	x0, x20
   279e0:	bl	8900 <free@plt>
   279e4:	b	279a8 <acc_set_cuda_stream@@OACC_2.0+0x4f4>
   279e8:	stp	x29, x30, [sp, #-16]!
   279ec:	mov	x29, sp
   279f0:	ldr	x0, [x0]
   279f4:	bl	27714 <acc_set_cuda_stream@@OACC_2.0+0x260>
   279f8:	ldp	x29, x30, [sp], #16
   279fc:	ret
   27a00:	stp	x29, x30, [sp, #-48]!
   27a04:	mov	x29, sp
   27a08:	stp	x19, x20, [sp, #16]
   27a0c:	str	x21, [sp, #32]
   27a10:	mov	x5, x1
   27a14:	mov	x20, x2
   27a18:	mov	x19, x4
   27a1c:	ldr	x21, [x2]
   27a20:	cmp	x1, #0x0
   27a24:	ccmp	x21, x1, #0x2, ne  // ne = any
   27a28:	b.cc	27a50 <acc_set_cuda_stream@@OACC_2.0+0x59c>  // b.lo, b.ul, b.last
   27a2c:	ldr	x4, [x20]
   27a30:	add	x4, x19, x4
   27a34:	str	x4, [x20]
   27a38:	cmp	x4, x21
   27a3c:	b.cc	27a6c <acc_set_cuda_stream@@OACC_2.0+0x5b8>  // b.lo, b.ul, b.last
   27a40:	ldp	x19, x20, [sp, #16]
   27a44:	ldr	x21, [sp, #32]
   27a48:	ldp	x29, x30, [sp], #48
   27a4c:	ret
   27a50:	and	w1, w3, #0xff
   27a54:	sub	x5, x5, x21
   27a58:	cmp	x5, x4
   27a5c:	csel	x2, x5, x4, ls  // ls = plast
   27a60:	add	x0, x0, x21
   27a64:	bl	87c0 <memset@plt>
   27a68:	b	27a2c <acc_set_cuda_stream@@OACC_2.0+0x578>
   27a6c:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27a70:	add	x0, x0, #0x2f8
   27a74:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27a78:	stp	x29, x30, [sp, #-16]!
   27a7c:	mov	x29, sp
   27a80:	adrp	x3, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   27a84:	ldr	x3, [x3, #4040]
   27a88:	ldr	x3, [x3]
   27a8c:	mov	x2, x1
   27a90:	mov	x1, #0x1                   	// #1
   27a94:	bl	89d0 <fwrite@plt>
   27a98:	ldp	x29, x30, [sp], #16
   27a9c:	ret
   27aa0:	stp	x29, x30, [sp, #-48]!
   27aa4:	mov	x29, sp
   27aa8:	stp	x19, x20, [sp, #16]
   27aac:	mov	x20, x0
   27ab0:	mov	x19, x1
   27ab4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27ab8:	ldr	x0, [x0, #1592]
   27abc:	cmp	x0, x1
   27ac0:	b.hi	27b20 <acc_set_cuda_stream@@OACC_2.0+0x66c>  // b.pmore
   27ac4:	str	x21, [sp, #32]
   27ac8:	cbz	x0, 27b38 <acc_set_cuda_stream@@OACC_2.0+0x684>
   27acc:	add	x1, x1, #0x1
   27ad0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27ad4:	ldr	x0, [x0, #824]
   27ad8:	bl	8c98 <fprintf@plt+0x188>
   27adc:	mov	x21, x0
   27ae0:	mov	x2, x19
   27ae4:	mov	x1, x20
   27ae8:	mov	x0, x21
   27aec:	bl	85c0 <memcpy@plt>
   27af0:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27af4:	str	x21, [x0, #824]
   27af8:	add	x0, x19, #0x1
   27afc:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27b00:	str	x0, [x1, #1592]
   27b04:	ldr	x21, [sp, #32]
   27b08:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27b0c:	ldr	x0, [x0, #824]
   27b10:	strb	wzr, [x0, x19]
   27b14:	ldp	x19, x20, [sp, #16]
   27b18:	ldp	x29, x30, [sp], #48
   27b1c:	ret
   27b20:	mov	x2, x1
   27b24:	mov	x1, x20
   27b28:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27b2c:	ldr	x0, [x0, #824]
   27b30:	bl	85c0 <memcpy@plt>
   27b34:	b	27b08 <acc_set_cuda_stream@@OACC_2.0+0x654>
   27b38:	add	x0, x1, #0x1
   27b3c:	bl	8c28 <fprintf@plt+0x118>
   27b40:	mov	x21, x0
   27b44:	b	27ae0 <acc_set_cuda_stream@@OACC_2.0+0x62c>

0000000000027b48 <omp_set_affinity_format@@OMP_5.0>:
   27b48:	stp	x29, x30, [sp, #-32]!
   27b4c:	mov	x29, sp
   27b50:	str	x19, [sp, #16]
   27b54:	mov	x19, x0
   27b58:	bl	85f0 <strlen@plt>
   27b5c:	mov	x1, x0
   27b60:	mov	x0, x19
   27b64:	bl	27aa0 <acc_set_cuda_stream@@OACC_2.0+0x5ec>
   27b68:	ldr	x19, [sp, #16]
   27b6c:	ldp	x29, x30, [sp], #32
   27b70:	ret

0000000000027b74 <omp_get_affinity_format@@OMP_5.0>:
   27b74:	stp	x29, x30, [sp, #-48]!
   27b78:	mov	x29, sp
   27b7c:	stp	x19, x20, [sp, #16]
   27b80:	stp	x21, x22, [sp, #32]
   27b84:	mov	x21, x0
   27b88:	mov	x19, x1
   27b8c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27b90:	ldr	x22, [x0, #824]
   27b94:	mov	x0, x22
   27b98:	bl	85f0 <strlen@plt>
   27b9c:	mov	x20, x0
   27ba0:	cbz	x19, 27bbc <omp_get_affinity_format@@OMP_5.0+0x48>
   27ba4:	cmp	x0, x19
   27ba8:	b.cs	27bd0 <omp_get_affinity_format@@OMP_5.0+0x5c>  // b.hs, b.nlast
   27bac:	add	x2, x0, #0x1
   27bb0:	mov	x1, x22
   27bb4:	mov	x0, x21
   27bb8:	bl	85c0 <memcpy@plt>
   27bbc:	mov	x0, x20
   27bc0:	ldp	x19, x20, [sp, #16]
   27bc4:	ldp	x21, x22, [sp, #32]
   27bc8:	ldp	x29, x30, [sp], #48
   27bcc:	ret
   27bd0:	sub	x19, x19, #0x1
   27bd4:	mov	x2, x19
   27bd8:	mov	x1, x22
   27bdc:	mov	x0, x21
   27be0:	bl	85c0 <memcpy@plt>
   27be4:	strb	wzr, [x21, x19]
   27be8:	b	27bbc <omp_get_affinity_format@@OMP_5.0+0x48>
   27bec:	stp	x29, x30, [sp, #-48]!
   27bf0:	mov	x29, sp
   27bf4:	stp	x19, x20, [sp, #16]
   27bf8:	str	x21, [sp, #32]
   27bfc:	mov	x20, x2
   27c00:	mov	x19, x4
   27c04:	ldr	x21, [x2]
   27c08:	cmp	x1, #0x0
   27c0c:	ccmp	x21, x1, #0x2, ne  // ne = any
   27c10:	b.cc	27c38 <omp_get_affinity_format@@OMP_5.0+0xc4>  // b.lo, b.ul, b.last
   27c14:	ldr	x4, [x20]
   27c18:	add	x4, x19, x4
   27c1c:	str	x4, [x20]
   27c20:	cmp	x4, x21
   27c24:	b.cc	27c54 <omp_get_affinity_format@@OMP_5.0+0xe0>  // b.lo, b.ul, b.last
   27c28:	ldp	x19, x20, [sp, #16]
   27c2c:	ldr	x21, [sp, #32]
   27c30:	ldp	x29, x30, [sp], #48
   27c34:	ret
   27c38:	sub	x5, x1, x21
   27c3c:	cmp	x5, x4
   27c40:	csel	x2, x5, x4, ls  // ls = plast
   27c44:	mov	x1, x3
   27c48:	add	x0, x0, x21
   27c4c:	bl	85c0 <memcpy@plt>
   27c50:	b	27c14 <omp_get_affinity_format@@OMP_5.0+0xa0>
   27c54:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27c58:	add	x0, x0, #0x2f8
   27c5c:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27c60:	stp	x29, x30, [sp, #-64]!
   27c64:	mov	x29, sp
   27c68:	stp	x19, x20, [sp, #16]
   27c6c:	stp	x21, x22, [sp, #32]
   27c70:	stp	x23, x24, [sp, #48]
   27c74:	mov	x21, x0
   27c78:	mov	x22, x1
   27c7c:	mov	x23, x2
   27c80:	mov	x24, x5
   27c84:	mov	x20, x6
   27c88:	cmp	x4, x6
   27c8c:	ccmn	x4, #0x1, #0x4, hi  // hi = pmore
   27c90:	b.eq	27cd8 <omp_get_affinity_format@@OMP_5.0+0x164>  // b.none
   27c94:	and	w3, w3, #0xff
   27c98:	mov	x19, x4
   27c9c:	cbz	w3, 27ce8 <omp_get_affinity_format@@OMP_5.0+0x174>
   27ca0:	sub	x4, x4, x6
   27ca4:	mov	w3, #0x20                  	// #32
   27ca8:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   27cac:	mov	x4, x20
   27cb0:	mov	x3, x24
   27cb4:	mov	x2, x23
   27cb8:	mov	x1, x22
   27cbc:	mov	x0, x21
   27cc0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27cc4:	ldp	x19, x20, [sp, #16]
   27cc8:	ldp	x21, x22, [sp, #32]
   27ccc:	ldp	x23, x24, [sp, #48]
   27cd0:	ldp	x29, x30, [sp], #64
   27cd4:	ret
   27cd8:	mov	x4, x6
   27cdc:	mov	x3, x5
   27ce0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27ce4:	b	27cc4 <omp_get_affinity_format@@OMP_5.0+0x150>
   27ce8:	mov	x4, x6
   27cec:	mov	x3, x5
   27cf0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27cf4:	sub	x4, x19, x20
   27cf8:	mov	w3, #0x20                  	// #32
   27cfc:	mov	x2, x23
   27d00:	mov	x1, x22
   27d04:	mov	x0, x21
   27d08:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   27d0c:	b	27cc4 <omp_get_affinity_format@@OMP_5.0+0x150>
   27d10:	stp	x29, x30, [sp, #-80]!
   27d14:	mov	x29, sp
   27d18:	stp	x19, x20, [sp, #16]
   27d1c:	stp	x21, x22, [sp, #32]
   27d20:	stp	x23, x24, [sp, #48]
   27d24:	stp	x25, x26, [sp, #64]
   27d28:	mov	x22, x0
   27d2c:	mov	x23, x1
   27d30:	mov	x24, x2
   27d34:	and	w25, w3, #0xff
   27d38:	and	w26, w4, #0xff
   27d3c:	mov	x21, x5
   27d40:	mov	x19, x6
   27d44:	mov	x0, x6
   27d48:	bl	85f0 <strlen@plt>
   27d4c:	mov	x20, x0
   27d50:	cmp	x0, x21
   27d54:	ccmn	x21, #0x1, #0x4, cc  // cc = lo, ul, last
   27d58:	b.eq	27ddc <omp_get_affinity_format@@OMP_5.0+0x268>  // b.none
   27d5c:	cbz	w25, 27e74 <omp_get_affinity_format@@OMP_5.0+0x300>
   27d60:	ldrb	w0, [x19]
   27d64:	cmp	w0, #0x2d
   27d68:	b.eq	27df8 <omp_get_affinity_format@@OMP_5.0+0x284>  // b.none
   27d6c:	cmp	w0, #0x30
   27d70:	b.eq	27e14 <omp_get_affinity_format@@OMP_5.0+0x2a0>  // b.none
   27d74:	sub	x4, x21, x20
   27d78:	mov	w3, #0x30                  	// #48
   27d7c:	mov	x2, x24
   27d80:	mov	x1, x23
   27d84:	mov	x0, x22
   27d88:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   27d8c:	ldrb	w0, [x19]
   27d90:	cmp	w0, #0x2d
   27d94:	b.eq	27e3c <omp_get_affinity_format@@OMP_5.0+0x2c8>  // b.none
   27d98:	cmp	w0, #0x30
   27d9c:	b.ne	27dac <omp_get_affinity_format@@OMP_5.0+0x238>  // b.any
   27da0:	ldrb	w0, [x19, #1]
   27da4:	cmp	w0, #0x78
   27da8:	b.eq	27e58 <omp_get_affinity_format@@OMP_5.0+0x2e4>  // b.none
   27dac:	mov	x4, x20
   27db0:	mov	x3, x19
   27db4:	mov	x2, x24
   27db8:	mov	x1, x23
   27dbc:	mov	x0, x22
   27dc0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27dc4:	ldp	x19, x20, [sp, #16]
   27dc8:	ldp	x21, x22, [sp, #32]
   27dcc:	ldp	x23, x24, [sp, #48]
   27dd0:	ldp	x25, x26, [sp, #64]
   27dd4:	ldp	x29, x30, [sp], #80
   27dd8:	ret
   27ddc:	mov	x4, x0
   27de0:	mov	x3, x19
   27de4:	mov	x2, x24
   27de8:	mov	x1, x23
   27dec:	mov	x0, x22
   27df0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27df4:	b	27dc4 <omp_get_affinity_format@@OMP_5.0+0x250>
   27df8:	mov	x4, #0x1                   	// #1
   27dfc:	mov	x3, x19
   27e00:	mov	x2, x24
   27e04:	mov	x1, x23
   27e08:	mov	x0, x22
   27e0c:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27e10:	b	27d74 <omp_get_affinity_format@@OMP_5.0+0x200>
   27e14:	ldrb	w0, [x19, #1]
   27e18:	cmp	w0, #0x78
   27e1c:	b.ne	27d74 <omp_get_affinity_format@@OMP_5.0+0x200>  // b.any
   27e20:	mov	x4, #0x2                   	// #2
   27e24:	mov	x3, x19
   27e28:	mov	x2, x24
   27e2c:	mov	x1, x23
   27e30:	mov	x0, x22
   27e34:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27e38:	b	27d74 <omp_get_affinity_format@@OMP_5.0+0x200>
   27e3c:	sub	x4, x20, #0x1
   27e40:	add	x3, x19, #0x1
   27e44:	mov	x2, x24
   27e48:	mov	x1, x23
   27e4c:	mov	x0, x22
   27e50:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27e54:	b	27dc4 <omp_get_affinity_format@@OMP_5.0+0x250>
   27e58:	sub	x4, x20, #0x2
   27e5c:	add	x3, x19, #0x2
   27e60:	mov	x2, x24
   27e64:	mov	x1, x23
   27e68:	mov	x0, x22
   27e6c:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27e70:	b	27dc4 <omp_get_affinity_format@@OMP_5.0+0x250>
   27e74:	cbz	w26, 27eac <omp_get_affinity_format@@OMP_5.0+0x338>
   27e78:	sub	x4, x21, x0
   27e7c:	mov	w3, #0x20                  	// #32
   27e80:	mov	x2, x24
   27e84:	mov	x1, x23
   27e88:	mov	x0, x22
   27e8c:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   27e90:	mov	x4, x20
   27e94:	mov	x3, x19
   27e98:	mov	x2, x24
   27e9c:	mov	x1, x23
   27ea0:	mov	x0, x22
   27ea4:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27ea8:	b	27dc4 <omp_get_affinity_format@@OMP_5.0+0x250>
   27eac:	mov	x4, x0
   27eb0:	mov	x3, x19
   27eb4:	mov	x2, x24
   27eb8:	mov	x1, x23
   27ebc:	mov	x0, x22
   27ec0:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27ec4:	sub	x4, x21, x20
   27ec8:	mov	w3, #0x20                  	// #32
   27ecc:	mov	x2, x24
   27ed0:	mov	x1, x23
   27ed4:	mov	x0, x22
   27ed8:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   27edc:	b	27dc4 <omp_get_affinity_format@@OMP_5.0+0x250>
   27ee0:	stp	x29, x30, [sp, #-416]!
   27ee4:	mov	x29, sp
   27ee8:	stp	x19, x20, [sp, #16]
   27eec:	stp	x21, x22, [sp, #32]
   27ef0:	stp	x23, x24, [sp, #48]
   27ef4:	stp	x25, x26, [sp, #64]
   27ef8:	stp	x27, x28, [sp, #80]
   27efc:	mov	x27, x0
   27f00:	mov	x26, x1
   27f04:	mov	x19, x2
   27f08:	str	x3, [sp, #136]
   27f0c:	str	x4, [sp, #120]
   27f10:	str	xzr, [sp, #408]
   27f14:	add	x28, sp, #0x198
   27f18:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27f1c:	add	x0, x0, #0x2b8
   27f20:	str	x0, [sp, #112]
   27f24:	add	x24, sp, #0x98
   27f28:	sub	w0, w5, #0x1
   27f2c:	str	w0, [sp, #132]
   27f30:	b	2814c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   27f34:	mov	x0, x19
   27f38:	bl	85f0 <strlen@plt>
   27f3c:	add	x20, x19, x0
   27f40:	b	28160 <omp_get_affinity_format@@OMP_5.0+0x5ec>
   27f44:	mov	x4, #0x1                   	// #1
   27f48:	adrp	x3, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27f4c:	add	x3, x3, #0x320
   27f50:	mov	x2, x28
   27f54:	mov	x1, x26
   27f58:	mov	x0, x27
   27f5c:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   27f60:	add	x19, x20, #0x2
   27f64:	b	2814c <omp_get_affinity_format@@OMP_5.0+0x5d8>
   27f68:	add	x19, x20, #0x2
   27f6c:	ldrb	w0, [x20, #2]
   27f70:	cmp	w0, #0x2e
   27f74:	b.ne	27f80 <omp_get_affinity_format@@OMP_5.0+0x40c>  // b.any
   27f78:	mov	w23, #0x1                   	// #1
   27f7c:	b	281a4 <omp_get_affinity_format@@OMP_5.0+0x630>
   27f80:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27f84:	add	x0, x0, #0x328
   27f88:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27f8c:	add	x0, x19, #0x1
   27f90:	ldrb	w1, [x19, #1]
   27f94:	sub	w1, w1, #0x31
   27f98:	and	w1, w1, #0xff
   27f9c:	cmp	w1, #0x8
   27fa0:	b.hi	27fd0 <omp_get_affinity_format@@OMP_5.0+0x45c>  // b.pmore
   27fa4:	mov	w1, #0x1                   	// #1
   27fa8:	str	w1, [sp, #128]
   27fac:	mov	w2, #0xa                   	// #10
   27fb0:	mov	x1, x24
   27fb4:	bl	85e0 <strtoul@plt>
   27fb8:	mov	x25, x0
   27fbc:	ldr	x19, [sp, #152]
   27fc0:	b	281cc <omp_get_affinity_format@@OMP_5.0+0x658>
   27fc4:	mov	x0, x19
   27fc8:	str	wzr, [sp, #128]
   27fcc:	b	27fac <omp_get_affinity_format@@OMP_5.0+0x438>
   27fd0:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   27fd4:	add	x0, x0, #0x360
   27fd8:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   27fdc:	adrp	x20, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   27fe0:	add	x20, x20, #0x478
   27fe4:	mov	w22, #0x0                   	// #0
   27fe8:	add	x0, x19, #0x1
   27fec:	str	x0, [sp, #104]
   27ff0:	b	28004 <omp_get_affinity_format@@OMP_5.0+0x490>
   27ff4:	add	w22, w22, #0x1
   27ff8:	add	x20, x20, #0x14
   27ffc:	cmp	w22, #0xa
   28000:	b.eq	2805c <omp_get_affinity_format@@OMP_5.0+0x4e8>  // b.none
   28004:	ldrb	w21, [x20, #18]
   28008:	mov	x2, x21
   2800c:	mov	x1, x20
   28010:	ldr	x0, [sp, #104]
   28014:	bl	8790 <strncmp@plt>
   28018:	cbnz	w0, 27ff4 <omp_get_affinity_format@@OMP_5.0+0x480>
   2801c:	add	x21, x21, #0x1
   28020:	add	x2, x19, x21
   28024:	ldrb	w0, [x19, x21]
   28028:	cmp	w0, #0x7d
   2802c:	b.ne	27ff4 <omp_get_affinity_format@@OMP_5.0+0x480>  // b.any
   28030:	sbfiz	x0, x22, #2, #32
   28034:	add	x22, x0, w22, sxtw
   28038:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2803c:	add	x0, x0, #0x478
   28040:	add	x22, x0, x22, lsl #2
   28044:	ldrb	w1, [x22, #19]
   28048:	cmp	w1, #0x7b
   2804c:	b.eq	28058 <omp_get_affinity_format@@OMP_5.0+0x4e4>  // b.none
   28050:	mov	x19, x2
   28054:	b	281d8 <omp_get_affinity_format@@OMP_5.0+0x664>
   28058:	mov	x19, x2
   2805c:	add	x19, x19, #0x1
   28060:	mov	w1, #0x7d                  	// #125
   28064:	mov	x0, x19
   28068:	bl	89a0 <strchr@plt>
   2806c:	cbz	x0, 28084 <omp_get_affinity_format@@OMP_5.0+0x510>
   28070:	mov	x2, x19
   28074:	sub	w1, w0, w19
   28078:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2807c:	add	x0, x0, #0x3a8
   28080:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   28084:	mov	x1, x19
   28088:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   2808c:	add	x0, x0, #0x3e0
   28090:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   28094:	cmp	w1, #0x41
   28098:	b.eq	28324 <omp_get_affinity_format@@OMP_5.0+0x7b0>  // b.none
   2809c:	cmp	w1, #0x48
   280a0:	b.ne	283ec <omp_get_affinity_format@@OMP_5.0+0x878>  // b.any
   280a4:	mov	x21, #0x100                 	// #256
   280a8:	mov	x20, x24
   280ac:	mov	x23, #0x200                 	// #512
   280b0:	sub	x22, x21, #0x1
   280b4:	strb	wzr, [x20, x22]
   280b8:	mov	x1, x22
   280bc:	mov	x0, x20
   280c0:	bl	8a40 <gethostname@plt>
   280c4:	cbnz	w0, 280d8 <omp_get_affinity_format@@OMP_5.0+0x564>
   280c8:	mov	x0, x20
   280cc:	bl	85f0 <strlen@plt>
   280d0:	cmp	x22, x0
   280d4:	b.hi	282a8 <omp_get_affinity_format@@OMP_5.0+0x734>  // b.pmore
   280d8:	cmp	x21, #0x100, lsl #12
   280dc:	b.eq	282ec <omp_get_affinity_format@@OMP_5.0+0x778>  // b.none
   280e0:	lsl	x21, x21, #1
   280e4:	cmp	x21, #0x200
   280e8:	b.eq	282dc <omp_get_affinity_format@@OMP_5.0+0x768>  // b.none
   280ec:	mov	x1, x21
   280f0:	mov	x0, x20
   280f4:	bl	8c98 <fprintf@plt+0x188>
   280f8:	mov	x20, x0
   280fc:	b	280b0 <omp_get_affinity_format@@OMP_5.0+0x53c>
   28100:	cmp	w1, #0x6e
   28104:	b.eq	2826c <omp_get_affinity_format@@OMP_5.0+0x6f8>  // b.none
   28108:	b.ls	2820c <omp_get_affinity_format@@OMP_5.0+0x698>  // b.plast
   2810c:	cmp	w1, #0x74
   28110:	b.ne	283ec <omp_get_affinity_format@@OMP_5.0+0x878>  // b.any
   28114:	bl	8a50 <omp_get_team_num@plt>
   28118:	mov	w2, w0
   2811c:	ldr	x1, [sp, #112]
   28120:	mov	x0, x24
   28124:	bl	8670 <sprintf@plt>
   28128:	mov	x6, x24
   2812c:	mov	x5, x25
   28130:	ldrb	w4, [sp, #128]
   28134:	mov	w3, w23
   28138:	mov	x2, x28
   2813c:	mov	x1, x26
   28140:	mov	x0, x27
   28144:	bl	27d10 <omp_get_affinity_format@@OMP_5.0+0x19c>
   28148:	add	x19, x19, #0x1
   2814c:	mov	w1, #0x25                  	// #37
   28150:	mov	x0, x19
   28154:	bl	89a0 <strchr@plt>
   28158:	mov	x20, x0
   2815c:	cbz	x0, 27f34 <omp_get_affinity_format@@OMP_5.0+0x3c0>
   28160:	cmp	x19, x20
   28164:	b.eq	28180 <omp_get_affinity_format@@OMP_5.0+0x60c>  // b.none
   28168:	sub	x4, x20, x19
   2816c:	mov	x3, x19
   28170:	mov	x2, x28
   28174:	mov	x1, x26
   28178:	mov	x0, x27
   2817c:	bl	27bec <omp_get_affinity_format@@OMP_5.0+0x78>
   28180:	ldrb	w0, [x20]
   28184:	cbz	w0, 283f8 <omp_get_affinity_format@@OMP_5.0+0x884>
   28188:	ldrb	w0, [x20, #1]
   2818c:	cmp	w0, #0x25
   28190:	b.eq	27f44 <omp_get_affinity_format@@OMP_5.0+0x3d0>  // b.none
   28194:	add	x19, x20, #0x1
   28198:	mov	w23, #0x0                   	// #0
   2819c:	cmp	w0, #0x30
   281a0:	b.eq	27f68 <omp_get_affinity_format@@OMP_5.0+0x3f4>  // b.none
   281a4:	ldrb	w0, [x19]
   281a8:	cmp	w0, #0x2e
   281ac:	b.eq	27f8c <omp_get_affinity_format@@OMP_5.0+0x418>  // b.none
   281b0:	sub	w0, w0, #0x31
   281b4:	and	w0, w0, #0xff
   281b8:	cmp	w0, #0x8
   281bc:	b.ls	27fc4 <omp_get_affinity_format@@OMP_5.0+0x450>  // b.plast
   281c0:	cbnz	w23, 27fd0 <omp_get_affinity_format@@OMP_5.0+0x45c>
   281c4:	str	w23, [sp, #128]
   281c8:	mov	x25, #0xffffffffffffffff    	// #-1
   281cc:	ldrb	w1, [x19]
   281d0:	cmp	w1, #0x7b
   281d4:	b.eq	27fdc <omp_get_affinity_format@@OMP_5.0+0x468>  // b.none
   281d8:	cmp	w1, #0x54
   281dc:	b.eq	28254 <omp_get_affinity_format@@OMP_5.0+0x6e0>  // b.none
   281e0:	b.hi	28100 <omp_get_affinity_format@@OMP_5.0+0x58c>  // b.pmore
   281e4:	cmp	w1, #0x4c
   281e8:	b.eq	28260 <omp_get_affinity_format@@OMP_5.0+0x6ec>  // b.none
   281ec:	b.ls	28094 <omp_get_affinity_format@@OMP_5.0+0x520>  // b.plast
   281f0:	cmp	w1, #0x4e
   281f4:	b.eq	28278 <omp_get_affinity_format@@OMP_5.0+0x704>  // b.none
   281f8:	cmp	w1, #0x50
   281fc:	b.ne	283ec <omp_get_affinity_format@@OMP_5.0+0x878>  // b.any
   28200:	bl	8740 <getpid@plt>
   28204:	mov	w2, w0
   28208:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   2820c:	cmp	w1, #0x61
   28210:	b.eq	28290 <omp_get_affinity_format@@OMP_5.0+0x71c>  // b.none
   28214:	cmp	w1, #0x69
   28218:	b.ne	283ec <omp_get_affinity_format@@OMP_5.0+0x878>  // b.any
   2821c:	ldr	x2, [sp, #136]
   28220:	adrp	x1, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   28224:	add	x1, x1, #0x420
   28228:	mov	x0, x24
   2822c:	bl	8670 <sprintf@plt>
   28230:	mov	x6, x24
   28234:	mov	x5, x25
   28238:	ldrb	w4, [sp, #128]
   2823c:	mov	w3, w23
   28240:	mov	x2, x28
   28244:	mov	x1, x26
   28248:	mov	x0, x27
   2824c:	bl	27d10 <omp_get_affinity_format@@OMP_5.0+0x19c>
   28250:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   28254:	bl	8a80 <omp_get_num_teams@plt>
   28258:	mov	w2, w0
   2825c:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   28260:	ldr	x0, [sp, #120]
   28264:	ldr	w2, [x0, #28]
   28268:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   2826c:	ldr	x0, [sp, #120]
   28270:	ldr	w2, [x0, #24]
   28274:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   28278:	ldr	x0, [sp, #120]
   2827c:	ldr	x0, [x0]
   28280:	mov	w2, #0x1                   	// #1
   28284:	cbz	x0, 2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   28288:	ldr	w2, [x0]
   2828c:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   28290:	ldr	x0, [sp, #120]
   28294:	ldr	x0, [x0]
   28298:	mov	w2, #0xffffffff            	// #-1
   2829c:	cbz	x0, 2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   282a0:	ldr	w2, [x0, #32]
   282a4:	b	2811c <omp_get_affinity_format@@OMP_5.0+0x5a8>
   282a8:	mov	x6, x0
   282ac:	mov	x5, x20
   282b0:	mov	x4, x25
   282b4:	ldrb	w3, [sp, #128]
   282b8:	mov	x2, x28
   282bc:	mov	x1, x26
   282c0:	mov	x0, x27
   282c4:	bl	27c60 <omp_get_affinity_format@@OMP_5.0+0xec>
   282c8:	cmp	x20, x24
   282cc:	b.eq	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>  // b.none
   282d0:	mov	x0, x20
   282d4:	bl	8900 <free@plt>
   282d8:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   282dc:	mov	x0, x23
   282e0:	bl	8c28 <fprintf@plt+0x118>
   282e4:	mov	x20, x0
   282e8:	b	280b0 <omp_get_affinity_format@@OMP_5.0+0x53c>
   282ec:	cmp	x20, x24
   282f0:	b.eq	282fc <omp_get_affinity_format@@OMP_5.0+0x788>  // b.none
   282f4:	mov	x0, x20
   282f8:	bl	8900 <free@plt>
   282fc:	mov	x6, #0x4                   	// #4
   28300:	adrp	x5, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   28304:	add	x5, x5, #0x418
   28308:	mov	x4, x25
   2830c:	ldrb	w3, [sp, #128]
   28310:	mov	x2, x28
   28314:	mov	x1, x26
   28318:	mov	x0, x27
   2831c:	bl	27c60 <omp_get_affinity_format@@OMP_5.0+0xec>
   28320:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   28324:	cmn	x25, #0x1
   28328:	b.eq	28370 <omp_get_affinity_format@@OMP_5.0+0x7fc>  // b.none
   2832c:	ldr	w0, [sp, #128]
   28330:	cbz	w0, 283a4 <omp_get_affinity_format@@OMP_5.0+0x830>
   28334:	str	xzr, [sp, #152]
   28338:	ldr	w3, [sp, #132]
   2833c:	mov	x2, x24
   28340:	mov	x1, #0x0                   	// #0
   28344:	mov	x0, #0x0                   	// #0
   28348:	bl	1da18 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2834c:	ldr	x4, [sp, #152]
   28350:	cmp	x4, x25
   28354:	b.cc	28388 <omp_get_affinity_format@@OMP_5.0+0x814>  // b.lo, b.ul, b.last
   28358:	ldr	w3, [sp, #132]
   2835c:	mov	x2, x28
   28360:	mov	x1, x26
   28364:	mov	x0, x27
   28368:	bl	1da18 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   2836c:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   28370:	ldr	w3, [sp, #132]
   28374:	mov	x2, x28
   28378:	mov	x1, x26
   2837c:	mov	x0, x27
   28380:	bl	1da18 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   28384:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   28388:	sub	x4, x25, x4
   2838c:	mov	w3, #0x20                  	// #32
   28390:	mov	x2, x28
   28394:	mov	x1, x26
   28398:	mov	x0, x27
   2839c:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   283a0:	b	28358 <omp_get_affinity_format@@OMP_5.0+0x7e4>
   283a4:	ldr	x20, [sp, #408]
   283a8:	ldr	w3, [sp, #132]
   283ac:	mov	x2, x28
   283b0:	mov	x1, x26
   283b4:	mov	x0, x27
   283b8:	bl	1da18 <omp_get_place_proc_ids@@OMP_4.5+0xf0>
   283bc:	ldr	x4, [sp, #408]
   283c0:	sub	x0, x4, x20
   283c4:	cmp	x0, x25
   283c8:	b.cs	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>  // b.hs, b.nlast
   283cc:	sub	x4, x20, x4
   283d0:	add	x4, x4, x25
   283d4:	mov	w3, #0x20                  	// #32
   283d8:	mov	x2, x28
   283dc:	mov	x1, x26
   283e0:	mov	x0, x27
   283e4:	bl	27a00 <acc_set_cuda_stream@@OACC_2.0+0x54c>
   283e8:	b	28148 <omp_get_affinity_format@@OMP_5.0+0x5d4>
   283ec:	adrp	x0, 2a000 <omp_get_team_num@@OMP_4.0+0x18c8>
   283f0:	add	x0, x0, #0x428
   283f4:	bl	b7a8 <GOMP_critical_name_end@@GOMP_1.0+0x28f8>
   283f8:	ldr	x0, [sp, #408]
   283fc:	ldp	x19, x20, [sp, #16]
   28400:	ldp	x21, x22, [sp, #32]
   28404:	ldp	x23, x24, [sp, #48]
   28408:	ldp	x25, x26, [sp, #64]
   2840c:	ldp	x27, x28, [sp, #80]
   28410:	ldp	x29, x30, [sp], #416
   28414:	ret

0000000000028418 <omp_capture_affinity@@OMP_5.0>:
   28418:	stp	x29, x30, [sp, #-48]!
   2841c:	mov	x29, sp
   28420:	stp	x19, x20, [sp, #16]
   28424:	str	x21, [sp, #32]
   28428:	mov	x21, x0
   2842c:	mov	x20, x1
   28430:	cbz	x2, 28440 <omp_capture_affinity@@OMP_5.0+0x28>
   28434:	mov	x19, x2
   28438:	ldrb	w0, [x2]
   2843c:	cbnz	w0, 28448 <omp_capture_affinity@@OMP_5.0+0x30>
   28440:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28444:	ldr	x19, [x0, #824]
   28448:	bl	8a90 <pthread_self@plt>
   2844c:	adrp	x4, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   28450:	ldr	x4, [x4, #4016]
   28454:	mrs	x2, tpidr_el0
   28458:	add	x4, x2, x4
   2845c:	ldr	w5, [x4, #92]
   28460:	add	x4, x4, #0x10
   28464:	mov	x3, x0
   28468:	mov	x2, x19
   2846c:	mov	x1, x20
   28470:	mov	x0, x21
   28474:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   28478:	cbz	x20, 2848c <omp_capture_affinity@@OMP_5.0+0x74>
   2847c:	cmp	x20, x0
   28480:	b.hi	2849c <omp_capture_affinity@@OMP_5.0+0x84>  // b.pmore
   28484:	add	x20, x21, x20
   28488:	sturb	wzr, [x20, #-1]
   2848c:	ldp	x19, x20, [sp, #16]
   28490:	ldr	x21, [sp, #32]
   28494:	ldp	x29, x30, [sp], #48
   28498:	ret
   2849c:	strb	wzr, [x21, x0]
   284a0:	b	2848c <omp_capture_affinity@@OMP_5.0+0x74>

00000000000284a4 <omp_display_affinity@@OMP_5.0>:
   284a4:	sub	sp, sp, #0x230
   284a8:	stp	x29, x30, [sp]
   284ac:	mov	x29, sp
   284b0:	stp	x19, x20, [sp, #16]
   284b4:	mov	x20, x0
   284b8:	mov	x2, x0
   284bc:	mov	x1, #0x200                 	// #512
   284c0:	add	x0, sp, #0x30
   284c4:	bl	28418 <omp_capture_affinity@@OMP_5.0>
   284c8:	mov	x19, x0
   284cc:	cmp	x0, #0x1ff
   284d0:	b.ls	28524 <omp_display_affinity@@OMP_5.0+0x80>  // b.plast
   284d4:	stp	x21, x22, [sp, #32]
   284d8:	add	x22, x0, #0x1
   284dc:	mov	x0, x22
   284e0:	bl	8c28 <fprintf@plt+0x118>
   284e4:	mov	x21, x0
   284e8:	mov	x2, x20
   284ec:	mov	x1, x22
   284f0:	bl	28418 <omp_capture_affinity@@OMP_5.0>
   284f4:	mov	w0, #0xa                   	// #10
   284f8:	strb	w0, [x21, x19]
   284fc:	mov	x1, x22
   28500:	mov	x0, x21
   28504:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   28508:	mov	x0, x21
   2850c:	bl	8900 <free@plt>
   28510:	ldp	x21, x22, [sp, #32]
   28514:	ldp	x19, x20, [sp, #16]
   28518:	ldp	x29, x30, [sp]
   2851c:	add	sp, sp, #0x230
   28520:	ret
   28524:	add	x0, sp, #0x30
   28528:	mov	w1, #0xa                   	// #10
   2852c:	strb	w1, [x0, x19]
   28530:	add	x1, x19, #0x1
   28534:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   28538:	b	28514 <omp_display_affinity@@OMP_5.0+0x70>
   2853c:	sub	sp, sp, #0x240
   28540:	stp	x29, x30, [sp]
   28544:	mov	x29, sp
   28548:	stp	x19, x20, [sp, #16]
   2854c:	stp	x21, x22, [sp, #32]
   28550:	stp	x23, x24, [sp, #48]
   28554:	mov	x21, x0
   28558:	mov	x22, x1
   2855c:	mov	w23, w2
   28560:	mov	w5, w2
   28564:	mov	x4, x1
   28568:	mov	x3, x0
   2856c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28570:	ldr	x2, [x0, #824]
   28574:	mov	x1, #0x200                 	// #512
   28578:	add	x0, sp, #0x40
   2857c:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   28580:	mov	x19, x0
   28584:	cmp	x0, #0x1ff
   28588:	b.hi	285b8 <omp_display_affinity@@OMP_5.0+0x114>  // b.pmore
   2858c:	add	x0, sp, #0x40
   28590:	mov	w1, #0xa                   	// #10
   28594:	strb	w1, [x0, x19]
   28598:	add	x1, x19, #0x1
   2859c:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   285a0:	ldp	x19, x20, [sp, #16]
   285a4:	ldp	x21, x22, [sp, #32]
   285a8:	ldp	x23, x24, [sp, #48]
   285ac:	ldp	x29, x30, [sp]
   285b0:	add	sp, sp, #0x240
   285b4:	ret
   285b8:	add	x24, x0, #0x1
   285bc:	mov	x0, x24
   285c0:	bl	8c28 <fprintf@plt+0x118>
   285c4:	mov	x20, x0
   285c8:	mov	w5, w23
   285cc:	mov	x4, x22
   285d0:	mov	x3, x21
   285d4:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   285d8:	ldr	x2, [x1, #824]
   285dc:	mov	x1, x24
   285e0:	bl	27ee0 <omp_get_affinity_format@@OMP_5.0+0x36c>
   285e4:	mov	w0, #0xa                   	// #10
   285e8:	strb	w0, [x20, x19]
   285ec:	mov	x1, x24
   285f0:	mov	x0, x20
   285f4:	bl	27a78 <acc_set_cuda_stream@@OACC_2.0+0x5c4>
   285f8:	mov	x0, x20
   285fc:	bl	8900 <free@plt>
   28600:	b	285a0 <omp_display_affinity@@OMP_5.0+0xfc>

0000000000028604 <GOMP_teams_reg@@GOMP_5.0>:
   28604:	stp	x29, x30, [sp, #-64]!
   28608:	mov	x29, sp
   2860c:	stp	x19, x20, [sp, #16]
   28610:	stp	x21, x22, [sp, #32]
   28614:	stp	x23, x24, [sp, #48]
   28618:	mov	x21, x0
   2861c:	mov	x22, x1
   28620:	mov	w20, w2
   28624:	mov	w23, w3
   28628:	cbz	w3, 28704 <GOMP_teams_reg@@GOMP_5.0+0x100>
   2862c:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   28630:	ldr	x0, [x0, #4016]
   28634:	mrs	x1, tpidr_el0
   28638:	add	x0, x1, x0
   2863c:	ldr	x0, [x0, #80]
   28640:	cbz	x0, 28674 <GOMP_teams_reg@@GOMP_5.0+0x70>
   28644:	add	x0, x0, #0x90
   28648:	ldr	w24, [x0, #20]
   2864c:	cmp	w23, #0x0
   28650:	csinv	w1, w23, wzr, ge  // ge = tcont
   28654:	str	w1, [x0, #20]
   28658:	cbnz	w20, 28684 <GOMP_teams_reg@@GOMP_5.0+0x80>
   2865c:	mov	w20, #0x3                   	// #3
   28660:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28664:	str	w20, [x0, #1344]
   28668:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2866c:	str	wzr, [x0, #1500]
   28670:	b	28694 <GOMP_teams_reg@@GOMP_5.0+0x90>
   28674:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   28678:	b	28648 <GOMP_teams_reg@@GOMP_5.0+0x44>
   2867c:	bl	1a530 <omp_in_final@@OMP_3.1+0x1950>
   28680:	b	286ec <GOMP_teams_reg@@GOMP_5.0+0xe8>
   28684:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28688:	str	w20, [x0, #1344]
   2868c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28690:	str	wzr, [x0, #1500]
   28694:	adrp	x19, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28698:	add	x19, x19, #0x5dc
   2869c:	mov	x0, x22
   286a0:	blr	x21
   286a4:	ldr	w4, [x19]
   286a8:	add	w4, w4, #0x1
   286ac:	str	w4, [x19]
   286b0:	cmp	w4, w20
   286b4:	b.cc	2869c <GOMP_teams_reg@@GOMP_5.0+0x98>  // b.lo, b.ul, b.last
   286b8:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   286bc:	mov	w1, #0x1                   	// #1
   286c0:	str	w1, [x0, #1344]
   286c4:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   286c8:	str	wzr, [x0, #1500]
   286cc:	cbz	w23, 286f0 <GOMP_teams_reg@@GOMP_5.0+0xec>
   286d0:	adrp	x0, 40000 <omp_get_team_num@@OMP_4.0+0x178c8>
   286d4:	ldr	x0, [x0, #4016]
   286d8:	mrs	x1, tpidr_el0
   286dc:	add	x0, x1, x0
   286e0:	ldr	x0, [x0, #80]
   286e4:	cbz	x0, 2867c <GOMP_teams_reg@@GOMP_5.0+0x78>
   286e8:	add	x0, x0, #0x90
   286ec:	str	w24, [x0, #20]
   286f0:	ldp	x19, x20, [sp, #16]
   286f4:	ldp	x21, x22, [sp, #32]
   286f8:	ldp	x23, x24, [sp, #48]
   286fc:	ldp	x29, x30, [sp], #64
   28700:	ret
   28704:	mov	w24, w3
   28708:	cbnz	w2, 28684 <GOMP_teams_reg@@GOMP_5.0+0x80>
   2870c:	mov	w0, #0x3                   	// #3
   28710:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28714:	str	w0, [x1, #1344]
   28718:	adrp	x1, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2871c:	str	wzr, [x1, #1500]
   28720:	mov	w24, w20
   28724:	mov	w20, w0
   28728:	b	28694 <GOMP_teams_reg@@GOMP_5.0+0x90>

000000000002872c <omp_get_num_teams@@OMP_4.0>:
   2872c:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   28730:	ldr	w0, [x0, #1344]
   28734:	ret

0000000000028738 <omp_get_team_num@@OMP_4.0>:
   28738:	adrp	x0, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2873c:	ldr	w0, [x0, #1500]
   28740:	ret
   28744:	nop
   28748:	adrp	x2, 41000 <omp_get_team_num@@OMP_4.0+0x188c8>
   2874c:	mov	x1, #0x0                   	// #0
   28750:	ldr	x2, [x2, #688]
   28754:	b	8690 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000028758 <.fini>:
   28758:	stp	x29, x30, [sp, #-16]!
   2875c:	mov	x29, sp
   28760:	ldp	x29, x30, [sp], #16
   28764:	ret
