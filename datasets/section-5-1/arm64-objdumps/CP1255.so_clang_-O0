
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//CP1255.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 12000 <gconv@@Base+0x11708>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0x108>:
     760:	adrp	x0, 12000 <gconv@@Base+0x11708>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 13000 <gconv@@Base+0x12708>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 13000 <gconv@@Base+0x12708>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 12000 <gconv@@Base+0x11708>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 13000 <gconv@@Base+0x12708>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 13000 <gconv@@Base+0x12708>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 12000 <gconv@@Base+0x11708>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 13000 <gconv@@Base+0x12708>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 12000 <gconv@@Base+0x11708>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 13000 <gconv@@Base+0x12708>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	tst	w1, #0x80
     83c:	and	w0, w1, #0xff
     840:	b.eq	864 <__assert_fail@plt+0x114>  // b.none
     844:	sub	w0, w0, #0x80
     848:	adrp	x1, 2000 <gconv@@Base+0x1708>
     84c:	add	x1, x1, #0x1a8
     850:	ldrh	w0, [x1, w0, sxtw #1]
     854:	sub	w1, w0, #0x5d0
     858:	cmp	w1, #0x22
     85c:	ccmp	w0, #0x0, #0x4, hi  // hi = pmore
     860:	csinv	w0, w0, wzr, ne  // ne = any
     864:	ret

0000000000000868 <gconv_init@@Base>:
     868:	stp	x29, x30, [sp, #-32]!
     86c:	mov	x29, sp
     870:	stp	x19, x20, [sp, #16]
     874:	mov	x19, x0
     878:	adrp	x20, 1000 <gconv@@Base+0x708>
     87c:	ldr	x0, [x0, #24]
     880:	add	x20, x20, #0xfe8
     884:	mov	x1, x20
     888:	bl	730 <strcmp@plt>
     88c:	cbnz	w0, 8c4 <gconv_init@@Base+0x5c>
     890:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     894:	mov	x2, #0x100000001           	// #4294967297
     898:	add	x0, x0, #0x838
     89c:	mov	x1, #0x400000004           	// #17179869188
     8a0:	str	x0, [x19, #48]
     8a4:	stp	x2, x1, [x19, #72]
     8a8:	str	xzr, [x19, #96]
     8ac:	mov	w1, #0x1                   	// #1
     8b0:	mov	w0, #0x0                   	// #0
     8b4:	str	w1, [x19, #88]
     8b8:	ldp	x19, x20, [sp, #16]
     8bc:	ldp	x29, x30, [sp], #32
     8c0:	ret
     8c4:	ldr	x0, [x19, #32]
     8c8:	mov	x1, x20
     8cc:	bl	730 <strcmp@plt>
     8d0:	cbnz	w0, 8f0 <gconv_init@@Base+0x88>
     8d4:	mov	x1, #0x1                   	// #1
     8d8:	mov	x0, #0xffffffffffffffff    	// #-1
     8dc:	mov	x2, #0x400000004           	// #17179869188
     8e0:	movk	x1, #0x3, lsl #32
     8e4:	stp	x2, x1, [x19, #72]
     8e8:	str	x0, [x19, #96]
     8ec:	b	8ac <gconv_init@@Base+0x44>
     8f0:	mov	w0, #0x1                   	// #1
     8f4:	b	8b8 <gconv_init@@Base+0x50>

00000000000008f8 <gconv@@Base>:
     8f8:	stp	x29, x30, [sp, #-256]!
     8fc:	mov	x13, x0
     900:	mov	x9, x2
     904:	mov	x29, sp
     908:	stp	x21, x22, [sp, #32]
     90c:	mov	x21, x1
     910:	adrp	x1, 12000 <gconv@@Base+0x11708>
     914:	stp	x19, x20, [sp, #16]
     918:	mov	x12, x4
     91c:	ldr	w14, [x21, #16]
     920:	ldr	x1, [x1, #4056]
     924:	stp	x23, x24, [sp, #48]
     928:	mov	x20, x3
     92c:	ldr	x0, [x1]
     930:	str	x0, [sp, #248]
     934:	mov	x0, #0x0                   	// #0
     938:	stp	x25, x26, [sp, #64]
     93c:	add	x0, x21, #0x30
     940:	str	x0, [sp, #136]
     944:	mov	x24, x5
     948:	mov	w25, w7
     94c:	add	x26, x13, #0x68
     950:	and	w1, w14, #0x1
     954:	mov	x23, #0x0                   	// #0
     958:	tbnz	w14, #0, 978 <gconv@@Base+0x80>
     95c:	ldr	x0, [x13, #104]
     960:	ldr	x23, [x26, #40]
     964:	cbz	x0, 978 <gconv@@Base+0x80>
     968:	adrp	x0, 12000 <gconv@@Base+0x11708>
     96c:	ldr	x0, [x0, #4040]
     970:	ldr	x0, [x0]
     974:	eor	x23, x23, x0
     978:	cbnz	w6, 13bc <gconv@@Base+0xac4>
     97c:	cmp	x12, #0x0
     980:	add	x0, sp, #0xc0
     984:	csel	x1, x21, x12, eq  // eq = none
     988:	cmp	x24, #0x0
     98c:	csel	x0, x0, xzr, ne  // ne = any
     990:	stp	x27, x28, [sp, #80]
     994:	cmp	w25, #0x0
     998:	ldr	x8, [x1]
     99c:	str	x0, [sp, #160]
     9a0:	ldr	x28, [x21, #32]
     9a4:	cset	w1, ne  // ne = any
     9a8:	ldr	x0, [x13, #96]
     9ac:	str	w1, [sp, #172]
     9b0:	str	xzr, [sp, #192]
     9b4:	cmp	x0, #0x0
     9b8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9bc:	ldr	w1, [x28]
     9c0:	str	w1, [sp, #128]
     9c4:	ldr	x27, [x9]
     9c8:	ldr	x22, [x21, #8]
     9cc:	b.ne	f5c <gconv@@Base+0x664>  // b.any
     9d0:	adrp	x1, 2000 <gconv@@Base+0x1708>
     9d4:	add	x11, x1, #0x1a8
     9d8:	add	x1, x11, #0x1e8
     9dc:	stp	x12, x13, [sp, #112]
     9e0:	str	x26, [sp, #144]
     9e4:	mov	x26, x28
     9e8:	str	w25, [sp, #152]
     9ec:	mov	x28, x9
     9f0:	str	x1, [sp, #176]
     9f4:	mov	x25, x27
     9f8:	mov	x27, x8
     9fc:	cbz	x0, b18 <gconv@@Base+0x220>
     a00:	stp	x25, x27, [sp, #208]
     a04:	mov	x19, x27
     a08:	cmp	x20, x25
     a0c:	b.eq	1460 <gconv@@Base+0xb68>  // b.none
     a10:	mov	x0, x25
     a14:	add	x5, sp, #0xd8
     a18:	mov	w10, #0x4                   	// #4
     a1c:	add	x3, x0, #0x4
     a20:	cmp	x20, x3
     a24:	b.cc	ce0 <gconv@@Base+0x3e8>  // b.lo, b.ul, b.last
     a28:	cmp	x22, x19
     a2c:	b.ls	dc8 <gconv@@Base+0x4d0>  // b.plast
     a30:	ldr	w2, [x0]
     a34:	cmp	w2, #0x7f
     a38:	b.ls	a54 <gconv@@Base+0x15c>  // b.plast
     a3c:	sub	w4, w2, #0xa0
     a40:	cmp	w4, #0x57
     a44:	b.hi	c9c <gconv@@Base+0x3a4>  // b.pmore
     a48:	add	x1, x11, #0x100
     a4c:	ldrb	w2, [x1, w4, uxtw]
     a50:	cbz	w2, cc0 <gconv@@Base+0x3c8>
     a54:	add	x1, x19, #0x1
     a58:	str	x1, [sp, #216]
     a5c:	strb	w2, [x19]
     a60:	ldp	x0, x19, [sp, #208]
     a64:	add	x0, x0, #0x4
     a68:	str	x0, [sp, #208]
     a6c:	cmp	x20, x0
     a70:	b.ne	a1c <gconv@@Base+0x124>  // b.any
     a74:	nop
     a78:	str	x0, [x28]
     a7c:	ldr	x0, [sp, #112]
     a80:	cbnz	x0, c60 <gconv@@Base+0x368>
     a84:	ldp	w1, w0, [x21, #16]
     a88:	add	w0, w0, #0x1
     a8c:	str	w0, [x21, #20]
     a90:	tbnz	w1, #0, ef4 <gconv@@Base+0x5fc>
     a94:	cmp	x27, x19
     a98:	b.cs	f54 <gconv@@Base+0x65c>  // b.hs, b.nlast
     a9c:	ldr	x1, [x21]
     aa0:	mov	x0, x23
     aa4:	str	x11, [sp, #96]
     aa8:	str	w10, [sp, #104]
     aac:	str	x1, [sp, #200]
     ab0:	bl	740 <_dl_mcount_wrapper_check@plt>
     ab4:	ldp	x1, x0, [sp, #136]
     ab8:	mov	x5, x24
     abc:	ldr	w7, [sp, #152]
     ac0:	mov	x3, x19
     ac4:	add	x2, sp, #0xc8
     ac8:	mov	w6, #0x0                   	// #0
     acc:	mov	x4, #0x0                   	// #0
     ad0:	blr	x23
     ad4:	mov	w7, w0
     ad8:	ldr	w10, [sp, #104]
     adc:	cmp	w0, #0x4
     ae0:	ldr	x11, [sp, #96]
     ae4:	b.eq	dd4 <gconv@@Base+0x4dc>  // b.none
     ae8:	ldr	x10, [sp, #200]
     aec:	cmp	x10, x19
     af0:	b.ne	e4c <gconv@@Base+0x554>  // b.any
     af4:	cbnz	w7, 141c <gconv@@Base+0xb24>
     af8:	ldr	w0, [x26]
     afc:	str	w0, [sp, #128]
     b00:	ldr	x0, [sp, #120]
     b04:	ldr	w14, [x21, #16]
     b08:	ldr	x27, [x21]
     b0c:	ldr	x0, [x0, #96]
     b10:	ldr	x25, [x28]
     b14:	cbnz	x0, a00 <gconv@@Base+0x108>
     b18:	cmp	x20, x25
     b1c:	b.eq	1608 <gconv@@Base+0xd10>  // b.none
     b20:	add	x2, x27, #0x4
     b24:	mov	x0, x25
     b28:	mov	x19, x27
     b2c:	cmp	x2, x22
     b30:	b.hi	c50 <gconv@@Base+0x358>  // b.pmore
     b34:	add	x16, x11, #0x2f8
     b38:	mov	w10, #0x4                   	// #4
     b3c:	mov	w9, #0xffff04d6            	// #-64298
     b40:	mov	w8, #0xfb49                	// #64329
     b44:	nop
     b48:	ldrb	w1, [x0]
     b4c:	cmp	w1, #0x7f
     b50:	b.ls	cec <gconv@@Base+0x3f4>  // b.plast
     b54:	sub	w1, w1, #0x80
     b58:	ldrh	w1, [x11, x1, lsl #1]
     b5c:	cbz	w1, f30 <gconv@@Base+0x638>
     b60:	ldr	w3, [x26]
     b64:	sub	w7, w1, #0x5d0
     b68:	cmp	wzr, w3, asr #3
     b6c:	asr	w4, w3, #3
     b70:	b.eq	db8 <gconv@@Base+0x4c0>  // b.none
     b74:	sub	w3, w1, #0x5b0
     b78:	cmp	w3, #0x14
     b7c:	b.hi	d50 <gconv@@Base+0x458>  // b.pmore
     b80:	cmp	w1, #0x5bc
     b84:	b.eq	112c <gconv@@Base+0x834>  // b.none
     b88:	b.hi	d70 <gconv@@Base+0x478>  // b.pmore
     b8c:	cmp	w1, #0x5b8
     b90:	b.eq	ee4 <gconv@@Base+0x5ec>  // b.none
     b94:	b.hi	d24 <gconv@@Base+0x42c>  // b.pmore
     b98:	cmp	w1, #0x5b4
     b9c:	b.eq	e1c <gconv@@Base+0x524>  // b.none
     ba0:	cmp	w1, #0x5b7
     ba4:	b.ne	d50 <gconv@@Base+0x458>  // b.any
     ba8:	cmp	w4, #0x5cf
     bac:	b.ls	115c <gconv@@Base+0x864>  // b.plast
     bb0:	mov	w6, #0x5f2                 	// #1522
     bb4:	mov	x5, #0x2                   	// #2
     bb8:	cmp	w4, w6
     bbc:	mov	w3, #0x1                   	// #1
     bc0:	b.hi	d50 <gconv@@Base+0x458>  // b.pmore
     bc4:	nop
     bc8:	add	w6, w5, w3
     bcc:	lsr	w13, w6, #1
     bd0:	lsr	w6, w6, #1
     bd4:	lsl	x12, x13, #2
     bd8:	ldrh	w12, [x16, x12]
     bdc:	cmp	w12, w4
     be0:	b.eq	c14 <gconv@@Base+0x31c>  // b.none
     be4:	cmp	w4, w12
     be8:	b.cs	111c <gconv@@Base+0x824>  // b.hs, b.nlast
     bec:	cmp	w6, w3
     bf0:	b.eq	d50 <gconv@@Base+0x458>  // b.none
     bf4:	mov	w5, w6
     bf8:	add	w6, w5, w3
     bfc:	lsr	w13, w6, #1
     c00:	lsr	w6, w6, #1
     c04:	lsl	x12, x13, #2
     c08:	ldrh	w12, [x16, x12]
     c0c:	cmp	w4, w12
     c10:	b.ne	be4 <gconv@@Base+0x2ec>  // b.any
     c14:	add	x13, x16, x13, lsl #2
     c18:	ldrh	w1, [x13, #2]
     c1c:	add	w3, w1, w9
     c20:	cmp	w3, #0x1
     c24:	ccmp	w1, w8, #0x4, hi  // hi = pmore
     c28:	b.eq	d64 <gconv@@Base+0x46c>  // b.none
     c2c:	str	w1, [x19]
     c30:	mov	x19, x2
     c34:	str	wzr, [x26]
     c38:	add	x0, x0, #0x1
     c3c:	cmp	x20, x0
     c40:	b.eq	a78 <gconv@@Base+0x180>  // b.none
     c44:	add	x2, x19, #0x4
     c48:	cmp	x22, x2
     c4c:	b.cs	b48 <gconv@@Base+0x250>  // b.hs, b.nlast
     c50:	str	x0, [x28]
     c54:	mov	w10, #0x5                   	// #5
     c58:	ldr	x0, [sp, #112]
     c5c:	cbz	x0, a84 <gconv@@Base+0x18c>
     c60:	ldp	x27, x28, [sp, #80]
     c64:	str	x19, [x0]
     c68:	adrp	x0, 12000 <gconv@@Base+0x11708>
     c6c:	ldr	x0, [x0, #4056]
     c70:	ldr	x1, [sp, #248]
     c74:	ldr	x0, [x0]
     c78:	eor	x0, x1, x0
     c7c:	cbnz	x0, 1f64 <gconv@@Base+0x166c>
     c80:	mov	w0, w10
     c84:	ldp	x19, x20, [sp, #16]
     c88:	ldp	x21, x22, [sp, #32]
     c8c:	ldp	x23, x24, [sp, #48]
     c90:	ldp	x25, x26, [sp, #64]
     c94:	ldp	x29, x30, [sp], #256
     c98:	ret
     c9c:	cmp	w2, #0x192
     ca0:	b.eq	de4 <gconv@@Base+0x4ec>  // b.none
     ca4:	sub	w1, w2, #0x2c6
     ca8:	cmp	w1, #0x16
     cac:	b.hi	dec <gconv@@Base+0x4f4>  // b.pmore
     cb0:	sub	w2, w2, #0x26e
     cb4:	add	x0, x11, #0x100
     cb8:	ldrb	w2, [x0, w2, uxtw]
     cbc:	cbnz	w2, a54 <gconv@@Base+0x15c>
     cc0:	ldr	x0, [sp, #160]
     cc4:	cbz	x0, 1958 <gconv@@Base+0x1060>
     cc8:	ldr	w0, [x21, #16]
     ccc:	tbnz	w0, #3, 12d8 <gconv@@Base+0x9e0>
     cd0:	ldr	x0, [sp, #208]
     cd4:	tbnz	w14, #1, 113c <gconv@@Base+0x844>
     cd8:	mov	w10, #0x6                   	// #6
     cdc:	b	a78 <gconv@@Base+0x180>
     ce0:	mov	w10, #0x7                   	// #7
     ce4:	ldr	x0, [sp, #208]
     ce8:	b	a78 <gconv@@Base+0x180>
     cec:	ldr	w3, [x26]
     cf0:	cmp	wzr, w3, asr #3
     cf4:	asr	w3, w3, #3
     cf8:	b.ne	d04 <gconv@@Base+0x40c>  // b.any
     cfc:	str	w1, [x19], #4
     d00:	b	c38 <gconv@@Base+0x340>
     d04:	str	w3, [x19]
     d08:	str	wzr, [x26]
     d0c:	add	x19, x19, #0x8
     d10:	cmp	x22, x19
     d14:	mov	x19, x2
     d18:	b.cc	c3c <gconv@@Base+0x344>  // b.lo, b.ul, b.last
     d1c:	str	w1, [x19], #4
     d20:	b	c38 <gconv@@Base+0x340>
     d24:	cmp	w1, #0x5b9
     d28:	b.ne	d50 <gconv@@Base+0x458>  // b.any
     d2c:	mov	w3, #0x4                   	// #4
     d30:	mov	w5, w3
     d34:	mov	w6, #0x5d5                 	// #1493
     d38:	cmp	w4, w6
     d3c:	b.cc	d94 <gconv@@Base+0x49c>  // b.lo, b.ul, b.last
     d40:	ubfiz	x6, x5, #2, #32
     d44:	ldrh	w6, [x16, x6]
     d48:	cmp	w4, w6
     d4c:	b.ls	bc8 <gconv@@Base+0x2d0>  // b.plast
     d50:	str	w4, [x19]
     d54:	cmp	w7, #0x22
     d58:	str	wzr, [x26]
     d5c:	b.hi	d0c <gconv@@Base+0x414>  // b.pmore
     d60:	mov	x19, x2
     d64:	lsl	w1, w1, #3
     d68:	str	w1, [x26]
     d6c:	b	c38 <gconv@@Base+0x340>
     d70:	cmp	w1, #0x5c1
     d74:	b.eq	e2c <gconv@@Base+0x534>  // b.none
     d78:	cmp	w1, #0x5c2
     d7c:	b.ne	da0 <gconv@@Base+0x4a8>  // b.any
     d80:	mov	w6, #0x5e9                 	// #1513
     d84:	mov	w3, #0x22                  	// #34
     d88:	cmp	w4, w6
     d8c:	mov	x5, #0x23                  	// #35
     d90:	b.cs	d40 <gconv@@Base+0x448>  // b.hs, b.nlast
     d94:	str	w4, [x19]
     d98:	str	wzr, [x26]
     d9c:	b	d0c <gconv@@Base+0x414>
     da0:	cmp	w1, #0x5bf
     da4:	b.ne	d50 <gconv@@Base+0x458>  // b.any
     da8:	mov	w3, #0x1d                  	// #29
     dac:	mov	x5, #0x1f                  	// #31
     db0:	mov	w6, #0x5d1                 	// #1489
     db4:	b	d38 <gconv@@Base+0x440>
     db8:	cmp	w7, #0x22
     dbc:	b.ls	d64 <gconv@@Base+0x46c>  // b.plast
     dc0:	str	w1, [x19], #4
     dc4:	b	c38 <gconv@@Base+0x340>
     dc8:	mov	w10, #0x5                   	// #5
     dcc:	ldr	x0, [sp, #208]
     dd0:	b	a78 <gconv@@Base+0x180>
     dd4:	mov	w7, w10
     dd8:	cmp	w10, #0x5
     ddc:	b.ne	af4 <gconv@@Base+0x1fc>  // b.any
     de0:	b	af8 <gconv@@Base+0x200>
     de4:	mov	w2, #0x83                  	// #131
     de8:	b	a54 <gconv@@Base+0x15c>
     dec:	sub	w0, w2, #0x5b0
     df0:	cmp	w0, #0x44
     df4:	b.ls	e3c <gconv@@Base+0x544>  // b.plast
     df8:	mov	w8, #0xffffdff2            	// #-8206
     dfc:	add	w0, w2, w8
     e00:	cmp	w0, #0x2c
     e04:	b.hi	1078 <gconv@@Base+0x780>  // b.pmore
     e08:	add	x0, x11, #0x100
     e0c:	mov	w7, #0xffffe0a6            	// #-8026
     e10:	add	w2, w2, w7
     e14:	ldrb	w2, [x0, w2, uxtw]
     e18:	b	a50 <gconv@@Base+0x158>
     e1c:	mov	w3, #0x0                   	// #0
     e20:	mov	x5, #0x0                   	// #0
     e24:	mov	w6, #0x5d9                 	// #1497
     e28:	b	d38 <gconv@@Base+0x440>
     e2c:	mov	w3, #0x20                  	// #32
     e30:	mov	x5, #0x21                  	// #33
     e34:	mov	w6, #0x5e9                 	// #1513
     e38:	b	d38 <gconv@@Base+0x440>
     e3c:	sub	w2, w2, #0x541
     e40:	add	x0, x11, #0x100
     e44:	ldrb	w2, [x0, w2, uxtw]
     e48:	b	a50 <gconv@@Base+0x158>
     e4c:	ldr	w0, [sp, #128]
     e50:	str	x25, [x28]
     e54:	str	w0, [x26]
     e58:	ldr	x0, [sp, #120]
     e5c:	ldr	x0, [x0, #96]
     e60:	cbz	x0, 116c <gconv@@Base+0x874>
     e64:	stp	x25, x27, [sp, #224]
     e68:	cmp	x20, x25
     e6c:	ldr	w19, [x21, #16]
     e70:	b.eq	1a9c <gconv@@Base+0x11a4>  // b.none
     e74:	mov	x30, x27
     e78:	add	x8, sp, #0xe8
     e7c:	mov	x3, #0x4                   	// #4
     e80:	add	x2, x25, #0x4
     e84:	cmp	x20, x2
     e88:	b.cc	142c <gconv@@Base+0xb34>  // b.lo, b.ul, b.last
     e8c:	cmp	x10, x30
     e90:	b.ls	146c <gconv@@Base+0xb74>  // b.plast
     e94:	ldr	w0, [x25]
     e98:	cmp	w0, #0x7f
     e9c:	b.ls	eb8 <gconv@@Base+0x5c0>  // b.plast
     ea0:	sub	w1, w0, #0xa0
     ea4:	cmp	w1, #0x57
     ea8:	b.hi	1328 <gconv@@Base+0xa30>  // b.pmore
     eac:	add	x0, x11, #0x100
     eb0:	ldrb	w0, [x0, w1, uxtw]
     eb4:	cbz	w0, 1704 <gconv@@Base+0xe0c>
     eb8:	add	x1, x30, #0x1
     ebc:	str	x1, [sp, #232]
     ec0:	strb	w0, [x30]
     ec4:	ldp	x25, x30, [sp, #224]
     ec8:	add	x25, x25, #0x4
     ecc:	str	x25, [sp, #224]
     ed0:	cmp	x20, x25
     ed4:	b.ne	e80 <gconv@@Base+0x588>  // b.any
     ed8:	str	x20, [x28]
     edc:	ldr	x10, [sp, #200]
     ee0:	b	1294 <gconv@@Base+0x99c>
     ee4:	mov	w3, #0x3                   	// #3
     ee8:	mov	w6, #0x5d0                 	// #1488
     eec:	mov	w5, w3
     ef0:	b	d38 <gconv@@Base+0x440>
     ef4:	ldr	x0, [x24]
     ef8:	mov	x9, x28
     efc:	ldr	x1, [sp, #192]
     f00:	str	x19, [x21]
     f04:	ldr	x13, [sp, #120]
     f08:	add	x0, x0, x1
     f0c:	str	x0, [x24]
     f10:	ldr	x0, [x13, #96]
     f14:	cmp	x0, #0x0
     f18:	ldr	w0, [sp, #172]
     f1c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     f20:	ccmp	w10, #0x7, #0x0, ne  // ne = any
     f24:	b.eq	1558 <gconv@@Base+0xc60>  // b.none
     f28:	ldp	x27, x28, [sp, #80]
     f2c:	b	c68 <gconv@@Base+0x370>
     f30:	ldr	x2, [sp, #160]
     f34:	cbz	x2, cd8 <gconv@@Base+0x3e0>
     f38:	tbz	w14, #1, cd8 <gconv@@Base+0x3e0>
     f3c:	ldr	x1, [x2]
     f40:	add	x0, x0, #0x1
     f44:	mov	w10, #0x6                   	// #6
     f48:	add	x1, x1, #0x1
     f4c:	str	x1, [x2]
     f50:	b	c3c <gconv@@Base+0x344>
     f54:	mov	w7, w10
     f58:	b	af4 <gconv@@Base+0x1fc>
     f5c:	mov	w1, w1
     f60:	ands	w1, w1, #0x7
     f64:	b.eq	9d0 <gconv@@Base+0xd8>  // b.none
     f68:	cbnz	x12, 1e80 <gconv@@Base+0x1588>
     f6c:	stp	x27, x8, [sp, #224]
     f70:	cmp	w1, #0x4
     f74:	b.hi	1e60 <gconv@@Base+0x1568>  // b.pmore
     f78:	mov	w19, w1
     f7c:	cbz	w1, 16a0 <gconv@@Base+0xda8>
     f80:	add	x4, x28, #0x3
     f84:	add	x11, sp, #0xf0
     f88:	mov	x0, #0x1                   	// #1
     f8c:	add	x1, x11, x0
     f90:	ldrb	w3, [x4, x0]
     f94:	cmp	x19, x0
     f98:	add	x0, x0, #0x1
     f9c:	sturb	w3, [x1, #-1]
     fa0:	b.ne	f8c <gconv@@Base+0x694>  // b.any
     fa4:	mov	x0, #0x4                   	// #4
     fa8:	sub	x0, x0, x19
     fac:	add	x0, x27, x0
     fb0:	cmp	x20, x0
     fb4:	b.cc	181c <gconv@@Base+0xf24>  // b.lo, b.ul, b.last
     fb8:	add	x0, x27, #0x1
     fbc:	add	x11, sp, #0xf0
     fc0:	cmp	x8, x22
     fc4:	b.cs	16b4 <gconv@@Base+0xdbc>  // b.hs, b.nlast
     fc8:	add	x19, x19, #0x1
     fcc:	str	x0, [sp, #224]
     fd0:	add	x1, x11, x19
     fd4:	cmp	x19, #0x3
     fd8:	ldurb	w2, [x0, #-1]
     fdc:	ccmp	x20, x0, #0x0, ls  // ls = plast
     fe0:	add	x0, x0, #0x1
     fe4:	sturb	w2, [x1, #-1]
     fe8:	b.hi	fc8 <gconv@@Base+0x6d0>  // b.pmore
     fec:	ldr	w0, [sp, #240]
     ff0:	str	x11, [sp, #224]
     ff4:	cmp	w0, #0x7f
     ff8:	b.ls	135c <gconv@@Base+0xa64>  // b.plast
     ffc:	sub	w2, w0, #0xa0
    1000:	cmp	w2, #0x57
    1004:	b.ls	1544 <gconv@@Base+0xc4c>  // b.plast
    1008:	cmp	w0, #0x192
    100c:	b.eq	1950 <gconv@@Base+0x1058>  // b.none
    1010:	sub	w1, w0, #0x2c6
    1014:	cmp	w1, #0x16
    1018:	b.hi	192c <gconv@@Base+0x1034>  // b.pmore
    101c:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1020:	add	x1, x1, #0x1a8
    1024:	sub	w0, w0, #0x26e
    1028:	add	x1, x1, #0x100
    102c:	ldrb	w0, [x1, w0, uxtw]
    1030:	cbnz	w0, 135c <gconv@@Base+0xa64>
    1034:	ldr	x0, [sp, #160]
    1038:	cbz	x0, 106c <gconv@@Base+0x774>
    103c:	tbnz	w14, #3, 1d0c <gconv@@Base+0x1414>
    1040:	tbz	w14, #1, 106c <gconv@@Base+0x774>
    1044:	mov	x0, x11
    1048:	ldr	x2, [sp, #160]
    104c:	add	x0, x0, #0x4
    1050:	str	x0, [sp, #224]
    1054:	ldr	x1, [x2]
    1058:	add	x0, x1, #0x1
    105c:	str	x0, [x2]
    1060:	ldr	x0, [sp, #224]
    1064:	cmp	x0, x11
    1068:	b.ne	137c <gconv@@Base+0xa84>  // b.any
    106c:	mov	w10, #0x6                   	// #6
    1070:	ldp	x27, x28, [sp, #80]
    1074:	b	c68 <gconv@@Base+0x370>
    1078:	mov	w0, #0x20aa                	// #8362
    107c:	cmp	w2, w0
    1080:	b.eq	1164 <gconv@@Base+0x86c>  // b.none
    1084:	mov	w0, #0x20ac                	// #8364
    1088:	cmp	w2, w0
    108c:	b.eq	15b0 <gconv@@Base+0xcb8>  // b.none
    1090:	mov	w0, #0x2122                	// #8482
    1094:	cmp	w2, w0
    1098:	b.eq	16ac <gconv@@Base+0xdb4>  // b.none
    109c:	mov	w0, #0x1c00                	// #7168
    10a0:	cmp	w0, w2, lsr #7
    10a4:	b.eq	1858 <gconv@@Base+0xf60>  // b.none
    10a8:	mov	w6, #0xffff04e3            	// #-64285
    10ac:	add	w0, w2, w6
    10b0:	cmp	w0, #0x31
    10b4:	b.hi	cc0 <gconv@@Base+0x3c8>  // b.pmore
    10b8:	mov	w3, #0xfb39                	// #64313
    10bc:	cmp	w2, w3
    10c0:	b.eq	1af0 <gconv@@Base+0x11f8>  // b.none
    10c4:	mov	w1, #0x10                  	// #16
    10c8:	mov	w4, #0x21                  	// #33
    10cc:	mov	w0, #0x0                   	// #0
    10d0:	ldr	x7, [sp, #176]
    10d4:	b	1104 <gconv@@Base+0x80c>
    10d8:	cmp	w1, w0
    10dc:	b.eq	cc0 <gconv@@Base+0x3c8>  // b.none
    10e0:	mov	w4, w1
    10e4:	add	w1, w4, w0
    10e8:	lsr	w3, w1, #1
    10ec:	lsr	w1, w1, #1
    10f0:	lsl	x3, x3, #3
    10f4:	add	x6, x7, x3
    10f8:	ldrh	w3, [x7, x3]
    10fc:	cmp	w2, w3
    1100:	b.eq	1618 <gconv@@Base+0xd20>  // b.none
    1104:	cmp	w3, w2
    1108:	b.hi	10d8 <gconv@@Base+0x7e0>  // b.pmore
    110c:	cmp	w1, w0
    1110:	b.eq	17ec <gconv@@Base+0xef4>  // b.none
    1114:	mov	w0, w1
    1118:	b	10e4 <gconv@@Base+0x7ec>
    111c:	cmp	w6, w3
    1120:	b.eq	1864 <gconv@@Base+0xf6c>  // b.none
    1124:	mov	w3, w6
    1128:	b	bf8 <gconv@@Base+0x300>
    112c:	mov	w3, #0x5                   	// #5
    1130:	mov	x5, #0x1c                  	// #28
    1134:	mov	w6, #0x5d0                 	// #1488
    1138:	b	d38 <gconv@@Base+0x440>
    113c:	ldr	x2, [sp, #160]
    1140:	add	x0, x0, #0x4
    1144:	mov	w10, #0x6                   	// #6
    1148:	str	x0, [sp, #208]
    114c:	ldr	x1, [x2]
    1150:	add	x1, x1, #0x1
    1154:	str	x1, [x2]
    1158:	b	a6c <gconv@@Base+0x174>
    115c:	mov	w1, #0x5b7                 	// #1463
    1160:	b	d50 <gconv@@Base+0x458>
    1164:	mov	w2, #0xa4                  	// #164
    1168:	b	a54 <gconv@@Base+0x15c>
    116c:	ldr	w12, [x21, #16]
    1170:	cmp	x20, x25
    1174:	b.eq	1a9c <gconv@@Base+0x11a4>  // b.none
    1178:	add	x1, x27, #0x4
    117c:	mov	x30, x27
    1180:	cmp	x10, x1
    1184:	add	x16, x11, #0x2f8
    1188:	mov	w19, #0x4                   	// #4
    118c:	mov	w9, #0xffff04d6            	// #-64298
    1190:	mov	w8, #0xfb49                	// #64329
    1194:	b.cc	1a6c <gconv@@Base+0x1174>  // b.lo, b.ul, b.last
    1198:	ldrb	w0, [x25]
    119c:	cmp	w0, #0x7f
    11a0:	b.ls	12a8 <gconv@@Base+0x9b0>  // b.plast
    11a4:	sub	w0, w0, #0x80
    11a8:	ldrh	w0, [x11, x0, lsl #1]
    11ac:	cbz	w0, 1790 <gconv@@Base+0xe98>
    11b0:	ldr	w2, [x26]
    11b4:	sub	w6, w0, #0x5d0
    11b8:	cmp	wzr, w2, asr #3
    11bc:	asr	w3, w2, #3
    11c0:	b.eq	140c <gconv@@Base+0xb14>  // b.none
    11c4:	sub	w2, w0, #0x5b0
    11c8:	cmp	w2, #0x14
    11cc:	b.hi	1258 <gconv@@Base+0x960>  // b.pmore
    11d0:	cmp	w0, #0x5bc
    11d4:	b.eq	191c <gconv@@Base+0x1024>  // b.none
    11d8:	b.hi	1238 <gconv@@Base+0x940>  // b.pmore
    11dc:	cmp	w0, #0x5b8
    11e0:	b.eq	1770 <gconv@@Base+0xe78>  // b.none
    11e4:	b.ls	1210 <gconv@@Base+0x918>  // b.plast
    11e8:	cmp	w0, #0x5b9
    11ec:	b.ne	1258 <gconv@@Base+0x960>  // b.any
    11f0:	mov	x2, #0x4                   	// #4
    11f4:	mov	w4, w2
    11f8:	mov	w5, #0x5d5                 	// #1493
    11fc:	cmp	w3, w5
    1200:	b.cs	14c0 <gconv@@Base+0xbc8>  // b.hs, b.nlast
    1204:	str	w3, [x30]
    1208:	str	wzr, [x26]
    120c:	b	12c0 <gconv@@Base+0x9c8>
    1210:	cmp	w0, #0x5b4
    1214:	b.eq	14b0 <gconv@@Base+0xbb8>  // b.none
    1218:	cmp	w0, #0x5b7
    121c:	b.ne	1258 <gconv@@Base+0x960>  // b.any
    1220:	cmp	w3, #0x5cf
    1224:	b.ls	1258 <gconv@@Base+0x960>  // b.plast
    1228:	mov	w5, #0x5f2                 	// #1522
    122c:	mov	x2, #0x2                   	// #2
    1230:	mov	w4, #0x1                   	// #1
    1234:	b	14c8 <gconv@@Base+0xbd0>
    1238:	cmp	w0, #0x5c1
    123c:	b.eq	16c0 <gconv@@Base+0xdc8>  // b.none
    1240:	cmp	w0, #0x5c2
    1244:	b.ne	13f4 <gconv@@Base+0xafc>  // b.any
    1248:	mov	w5, #0x5e9                 	// #1513
    124c:	mov	x2, #0x23                  	// #35
    1250:	mov	w4, #0x22                  	// #34
    1254:	b	11fc <gconv@@Base+0x904>
    1258:	str	w3, [x30]
    125c:	cmp	w6, #0x22
    1260:	str	wzr, [x26]
    1264:	b.hi	12c0 <gconv@@Base+0x9c8>  // b.pmore
    1268:	mov	x30, x1
    126c:	lsl	w0, w0, #3
    1270:	str	w0, [x26]
    1274:	add	x25, x25, #0x1
    1278:	cmp	x20, x25
    127c:	b.eq	196c <gconv@@Base+0x1074>  // b.none
    1280:	add	x1, x30, #0x4
    1284:	cmp	x10, x1
    1288:	b.cs	1198 <gconv@@Base+0x8a0>  // b.hs, b.nlast
    128c:	mov	x3, #0x5                   	// #5
    1290:	str	x25, [x28]
    1294:	cmp	x30, x10
    1298:	b.ne	172c <gconv@@Base+0xe34>  // b.any
    129c:	cmp	x3, #0x5
    12a0:	b.eq	1480 <gconv@@Base+0xb88>  // b.none
    12a4:	b	1440 <gconv@@Base+0xb48>
    12a8:	ldr	w2, [x26]
    12ac:	cmp	wzr, w2, asr #3
    12b0:	asr	w2, w2, #3
    12b4:	b.eq	12d0 <gconv@@Base+0x9d8>  // b.none
    12b8:	str	w2, [x30]
    12bc:	str	wzr, [x26]
    12c0:	add	x30, x30, #0x8
    12c4:	cmp	x10, x30
    12c8:	mov	x30, x1
    12cc:	b.cc	1278 <gconv@@Base+0x980>  // b.lo, b.ul, b.last
    12d0:	str	w0, [x30], #4
    12d4:	b	1274 <gconv@@Base+0x97c>
    12d8:	ldr	x2, [x28]
    12dc:	mov	x4, x20
    12e0:	ldr	x0, [sp, #120]
    12e4:	add	x3, sp, #0xd0
    12e8:	ldr	x6, [sp, #160]
    12ec:	mov	x1, x21
    12f0:	str	x5, [sp, #96]
    12f4:	str	w14, [sp, #104]
    12f8:	str	x11, [sp, #184]
    12fc:	bl	700 <__gconv_transliterate@plt>
    1300:	ldr	w14, [sp, #104]
    1304:	mov	w10, w0
    1308:	cmp	w0, #0x6
    130c:	ldr	x5, [sp, #96]
    1310:	ldr	x11, [sp, #184]
    1314:	b.eq	1498 <gconv@@Base+0xba0>  // b.none
    1318:	cmp	w0, #0x5
    131c:	ldp	x0, x19, [sp, #208]
    1320:	b.ne	a6c <gconv@@Base+0x174>  // b.any
    1324:	b	a78 <gconv@@Base+0x180>
    1328:	cmp	w0, #0x192
    132c:	b.eq	1600 <gconv@@Base+0xd08>  // b.none
    1330:	sub	w1, w0, #0x2c6
    1334:	cmp	w1, #0x16
    1338:	b.ls	14a0 <gconv@@Base+0xba8>  // b.plast
    133c:	sub	w1, w0, #0x5b0
    1340:	cmp	w1, #0x44
    1344:	b.hi	174c <gconv@@Base+0xe54>  // b.pmore
    1348:	sub	w0, w0, #0x541
    134c:	add	x1, x11, #0x100
    1350:	ldrb	w0, [x1, w0, uxtw]
    1354:	b	eb4 <gconv@@Base+0x5bc>
    1358:	mov	w0, #0x99                  	// #153
    135c:	add	x1, x8, #0x1
    1360:	str	x1, [sp, #232]
    1364:	strb	w0, [x8]
    1368:	ldr	x0, [sp, #224]
    136c:	add	x0, x0, #0x4
    1370:	str	x0, [sp, #224]
    1374:	cmp	x0, x11
    1378:	b.eq	16d4 <gconv@@Base+0xddc>  // b.none
    137c:	ldr	w1, [x28]
    1380:	sub	x0, x0, x11
    1384:	and	x2, x1, #0x7
    1388:	cmp	x0, x2
    138c:	b.le	1de4 <gconv@@Base+0x14ec>
    1390:	ldr	x27, [x9]
    1394:	sub	x0, x0, x2
    1398:	ldr	w14, [x21, #16]
    139c:	and	w1, w1, #0xfffffff8
    13a0:	add	x27, x27, x0
    13a4:	str	x27, [x9]
    13a8:	str	w1, [sp, #128]
    13ac:	ldr	x0, [x13, #96]
    13b0:	ldr	x8, [sp, #232]
    13b4:	str	w1, [x28]
    13b8:	b	9d0 <gconv@@Base+0xd8>
    13bc:	cbnz	x12, 1e3c <gconv@@Base+0x1544>
    13c0:	cmp	w6, #0x1
    13c4:	ldr	x19, [x21, #32]
    13c8:	b.ne	15b8 <gconv@@Base+0xcc0>  // b.any
    13cc:	ldr	w20, [x19]
    13d0:	ldr	x2, [x21]
    13d4:	cbz	w20, 13e4 <gconv@@Base+0xaec>
    13d8:	ldr	x0, [x13, #96]
    13dc:	cbz	x0, 1974 <gconv@@Base+0x107c>
    13e0:	str	wzr, [x19]
    13e4:	cbz	w1, 19e8 <gconv@@Base+0x10f0>
    13e8:	mov	w10, #0x0                   	// #0
    13ec:	str	x2, [x21]
    13f0:	b	c68 <gconv@@Base+0x370>
    13f4:	cmp	w0, #0x5bf
    13f8:	b.ne	1258 <gconv@@Base+0x960>  // b.any
    13fc:	mov	w5, #0x5d1                 	// #1489
    1400:	mov	x2, #0x1f                  	// #31
    1404:	mov	w4, #0x1d                  	// #29
    1408:	b	11fc <gconv@@Base+0x904>
    140c:	cmp	w6, #0x22
    1410:	b.ls	126c <gconv@@Base+0x974>  // b.plast
    1414:	str	w0, [x30], #4
    1418:	b	1274 <gconv@@Base+0x97c>
    141c:	mov	x9, x28
    1420:	mov	w10, w7
    1424:	ldr	x13, [sp, #120]
    1428:	b	f10 <gconv@@Base+0x618>
    142c:	ldr	x0, [sp, #200]
    1430:	ldr	x1, [sp, #224]
    1434:	str	x1, [x28]
    1438:	cmp	x0, x30
    143c:	b.ne	172c <gconv@@Base+0xe34>  // b.any
    1440:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1444:	adrp	x1, 1000 <gconv@@Base+0x708>
    1448:	adrp	x0, 2000 <gconv@@Base+0x1708>
    144c:	add	x3, x3, #0x190
    1450:	add	x1, x1, #0xff8
    1454:	add	x0, x0, #0x130
    1458:	mov	w2, #0x2eb                 	// #747
    145c:	bl	750 <__assert_fail@plt>
    1460:	mov	x0, x20
    1464:	mov	w10, #0x4                   	// #4
    1468:	b	a78 <gconv@@Base+0x180>
    146c:	ldr	x0, [sp, #200]
    1470:	ldr	x1, [sp, #224]
    1474:	str	x1, [x28]
    1478:	cmp	x0, x30
    147c:	b.ne	172c <gconv@@Base+0xe34>  // b.any
    1480:	cmp	x27, x30
    1484:	b.ne	af4 <gconv@@Base+0x1fc>  // b.any
    1488:	ldr	w0, [x21, #20]
    148c:	sub	w0, w0, #0x1
    1490:	str	w0, [x21, #20]
    1494:	b	af4 <gconv@@Base+0x1fc>
    1498:	ldr	x19, [sp, #216]
    149c:	b	cd0 <gconv@@Base+0x3d8>
    14a0:	sub	w0, w0, #0x26e
    14a4:	add	x1, x11, #0x100
    14a8:	ldrb	w0, [x1, w0, uxtw]
    14ac:	b	eb4 <gconv@@Base+0x5bc>
    14b0:	mov	x2, #0x0                   	// #0
    14b4:	mov	w4, #0x0                   	// #0
    14b8:	mov	w5, #0x5d9                 	// #1497
    14bc:	b	11fc <gconv@@Base+0x904>
    14c0:	ubfiz	x5, x2, #2, #32
    14c4:	ldrh	w5, [x16, x5]
    14c8:	cmp	w3, w5
    14cc:	b.hi	1258 <gconv@@Base+0x960>  // b.pmore
    14d0:	add	w5, w4, w2
    14d4:	lsr	w13, w5, #1
    14d8:	lsr	w5, w5, #1
    14dc:	lsl	x14, x13, #2
    14e0:	ldrh	w14, [x16, x14]
    14e4:	cmp	w3, w14
    14e8:	b.eq	151c <gconv@@Base+0xc24>  // b.none
    14ec:	cmp	w3, w14
    14f0:	b.cs	1780 <gconv@@Base+0xe88>  // b.hs, b.nlast
    14f4:	cmp	w4, w5
    14f8:	b.eq	1258 <gconv@@Base+0x960>  // b.none
    14fc:	mov	w2, w5
    1500:	add	w5, w4, w2
    1504:	lsr	w13, w5, #1
    1508:	lsr	w5, w5, #1
    150c:	lsl	x14, x13, #2
    1510:	ldrh	w14, [x16, x14]
    1514:	cmp	w3, w14
    1518:	b.ne	14ec <gconv@@Base+0xbf4>  // b.any
    151c:	add	x13, x16, x13, lsl #2
    1520:	ldrh	w0, [x13, #2]
    1524:	add	w2, w0, w9
    1528:	cmp	w2, #0x1
    152c:	ccmp	w0, w8, #0x4, hi  // hi = pmore
    1530:	b.eq	126c <gconv@@Base+0x974>  // b.none
    1534:	str	w0, [x30]
    1538:	mov	x30, x1
    153c:	str	wzr, [x26]
    1540:	b	1274 <gconv@@Base+0x97c>
    1544:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1548:	add	x0, x1, #0x1a8
    154c:	add	x0, x0, #0x100
    1550:	ldrb	w0, [x0, w2, uxtw]
    1554:	b	1030 <gconv@@Base+0x738>
    1558:	ldr	x0, [x9]
    155c:	sub	x2, x20, x0
    1560:	cmp	x2, #0x3
    1564:	b.gt	1e04 <gconv@@Base+0x150c>
    1568:	ldr	x4, [x21, #32]
    156c:	cmp	x0, x20
    1570:	add	x0, x0, #0x1
    1574:	add	x1, x4, #0x4
    1578:	b.cs	1ae0 <gconv@@Base+0x11e8>  // b.hs, b.nlast
    157c:	str	x0, [x9]
    1580:	cmp	x20, x0
    1584:	add	x0, x0, #0x1
    1588:	ldurb	w3, [x0, #-2]
    158c:	strb	w3, [x1], #1
    1590:	b.ne	157c <gconv@@Base+0xc84>  // b.any
    1594:	mov	w1, w2
    1598:	ldr	w0, [x4]
    159c:	ldp	x27, x28, [sp, #80]
    15a0:	and	w0, w0, #0xfffffff8
    15a4:	orr	w0, w0, w1
    15a8:	str	w0, [x4]
    15ac:	b	c68 <gconv@@Base+0x370>
    15b0:	mov	w2, #0x80                  	// #128
    15b4:	b	a54 <gconv@@Base+0x15c>
    15b8:	str	xzr, [x19]
    15bc:	mov	w10, #0x0                   	// #0
    15c0:	ldr	w0, [x21, #16]
    15c4:	tbnz	w0, #0, c68 <gconv@@Base+0x370>
    15c8:	mov	x0, x23
    15cc:	str	w6, [sp, #96]
    15d0:	bl	740 <_dl_mcount_wrapper_check@plt>
    15d4:	ldr	w6, [sp, #96]
    15d8:	mov	w7, w25
    15dc:	ldr	x1, [sp, #136]
    15e0:	mov	x5, x24
    15e4:	mov	x0, x26
    15e8:	mov	x4, #0x0                   	// #0
    15ec:	mov	x3, #0x0                   	// #0
    15f0:	mov	x2, #0x0                   	// #0
    15f4:	blr	x23
    15f8:	mov	w10, w0
    15fc:	b	c68 <gconv@@Base+0x370>
    1600:	mov	w0, #0x83                  	// #131
    1604:	b	eb8 <gconv@@Base+0x5c0>
    1608:	mov	x0, x20
    160c:	mov	x19, x27
    1610:	mov	w10, #0x4                   	// #4
    1614:	b	a78 <gconv@@Base+0x180>
    1618:	ldrh	w2, [x6, #2]
    161c:	add	x0, x11, #0x100
    1620:	sub	w2, w2, #0x541
    1624:	ldrb	w2, [x0, w2, uxtw]
    1628:	cbz	w2, 1f44 <gconv@@Base+0x164c>
    162c:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1630:	add	x0, x0, #0x1a8
    1634:	add	x0, x0, #0x1e8
    1638:	add	x1, x0, w1, uxtw #3
    163c:	ldrsb	w0, [x1, #5]
    1640:	tbnz	w0, #31, 17b4 <gconv@@Base+0xebc>
    1644:	add	x3, x19, #0x2
    1648:	cmp	x22, x3
    164c:	b.ls	dc8 <gconv@@Base+0x4d0>  // b.plast
    1650:	add	x3, x19, #0x1
    1654:	str	x3, [sp, #216]
    1658:	strb	w2, [x19]
    165c:	adrp	x2, 2000 <gconv@@Base+0x1708>
    1660:	ldrb	w4, [x1, #4]
    1664:	add	x1, x2, #0x198
    1668:	ldr	x2, [sp, #216]
    166c:	ldrb	w3, [x1, w0, sxtw]
    1670:	add	x0, x2, #0x1
    1674:	str	x0, [sp, #216]
    1678:	ldrb	w0, [x1, w4, sxtw]
    167c:	strb	w0, [x2]
    1680:	ldr	x0, [sp, #216]
    1684:	add	x1, x0, #0x1
    1688:	str	x1, [sp, #216]
    168c:	strb	w3, [x0]
    1690:	ldp	x2, x19, [sp, #208]
    1694:	add	x0, x2, #0x4
    1698:	str	x0, [sp, #208]
    169c:	b	a6c <gconv@@Base+0x174>
    16a0:	mov	x0, #0x4                   	// #4
    16a4:	mov	x19, #0x0                   	// #0
    16a8:	b	fac <gconv@@Base+0x6b4>
    16ac:	mov	w2, #0x99                  	// #153
    16b0:	b	a54 <gconv@@Base+0x15c>
    16b4:	mov	w10, #0x5                   	// #5
    16b8:	ldp	x27, x28, [sp, #80]
    16bc:	b	c68 <gconv@@Base+0x370>
    16c0:	mov	w5, #0x5e9                 	// #1513
    16c4:	mov	x2, #0x21                  	// #33
    16c8:	mov	w4, #0x20                  	// #32
    16cc:	b	11fc <gconv@@Base+0x904>
    16d0:	cbnz	w10, f28 <gconv@@Base+0x630>
    16d4:	ldr	w0, [x28]
    16d8:	ldr	w14, [x21, #16]
    16dc:	str	w0, [sp, #128]
    16e0:	ldr	x27, [x9]
    16e4:	ldr	x0, [x13, #96]
    16e8:	b	9d0 <gconv@@Base+0xd8>
    16ec:	ubfiz	x4, x2, #3, #32
    16f0:	mov	w1, w2
    16f4:	ldr	x2, [sp, #176]
    16f8:	ldrh	w2, [x2, x4]
    16fc:	cmp	w0, w2
    1700:	b.eq	1b08 <gconv@@Base+0x1210>  // b.none
    1704:	ldr	x0, [sp, #160]
    1708:	cbz	x0, 142c <gconv@@Base+0xb34>
    170c:	ldr	w0, [x21, #16]
    1710:	tbnz	w0, #3, 1a08 <gconv@@Base+0x1110>
    1714:	ldr	x15, [sp, #224]
    1718:	tbnz	w19, #1, 1a7c <gconv@@Base+0x1184>
    171c:	ldr	x0, [sp, #200]
    1720:	str	x15, [x28]
    1724:	cmp	x30, x0
    1728:	b.eq	1440 <gconv@@Base+0xb48>  // b.none
    172c:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1730:	adrp	x1, 1000 <gconv@@Base+0x708>
    1734:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1738:	add	x3, x3, #0x190
    173c:	add	x1, x1, #0xff8
    1740:	add	x0, x0, #0x118
    1744:	mov	w2, #0x2ea                 	// #746
    1748:	bl	750 <__assert_fail@plt>
    174c:	mov	w4, #0xffffdff2            	// #-8206
    1750:	add	w1, w0, w4
    1754:	cmp	w1, #0x2c
    1758:	b.hi	187c <gconv@@Base+0xf84>  // b.pmore
    175c:	add	x1, x11, #0x100
    1760:	mov	w2, #0xffffe0a6            	// #-8026
    1764:	add	w0, w0, w2
    1768:	ldrb	w0, [x1, w0, uxtw]
    176c:	b	eb4 <gconv@@Base+0x5bc>
    1770:	mov	x2, #0x3                   	// #3
    1774:	mov	w5, #0x5d0                 	// #1488
    1778:	mov	w4, w2
    177c:	b	11fc <gconv@@Base+0x904>
    1780:	cmp	w4, w5
    1784:	b.eq	1e24 <gconv@@Base+0x152c>  // b.none
    1788:	mov	w4, w5
    178c:	b	14d0 <gconv@@Base+0xbd8>
    1790:	ldr	x1, [sp, #160]
    1794:	cbz	x1, 1964 <gconv@@Base+0x106c>
    1798:	tbz	w12, #1, 1964 <gconv@@Base+0x106c>
    179c:	ldr	x0, [x1]
    17a0:	add	x25, x25, #0x1
    17a4:	mov	w19, #0x6                   	// #6
    17a8:	add	x0, x0, #0x1
    17ac:	str	x0, [x1]
    17b0:	b	1278 <gconv@@Base+0x980>
    17b4:	add	x0, x19, #0x1
    17b8:	cmp	x22, x0
    17bc:	b.ls	dc8 <gconv@@Base+0x4d0>  // b.plast
    17c0:	str	x0, [sp, #216]
    17c4:	adrp	x0, 2000 <gconv@@Base+0x1708>
    17c8:	strb	w2, [x19]
    17cc:	add	x0, x0, #0x198
    17d0:	ldrb	w2, [x1, #4]
    17d4:	ldr	x1, [sp, #216]
    17d8:	ldrb	w0, [x0, w2, sxtw]
    17dc:	add	x3, x1, #0x1
    17e0:	str	x3, [sp, #216]
    17e4:	strb	w0, [x1]
    17e8:	b	1690 <gconv@@Base+0xd98>
    17ec:	ldr	x3, [sp, #176]
    17f0:	ubfiz	x0, x4, #3, #32
    17f4:	add	x1, x3, x0
    17f8:	ldrh	w0, [x3, x0]
    17fc:	cmp	w2, w0
    1800:	b.ne	cc0 <gconv@@Base+0x3c8>  // b.any
    1804:	ldrh	w2, [x1, #2]
    1808:	add	x0, x11, #0x100
    180c:	mov	w1, w4
    1810:	sub	w2, w2, #0x541
    1814:	ldrb	w2, [x0, w2, uxtw]
    1818:	b	1628 <gconv@@Base+0xd30>
    181c:	str	x20, [x9]
    1820:	cmp	x27, x20
    1824:	b.cs	184c <gconv@@Base+0xf54>  // b.hs, b.nlast
    1828:	add	x27, x27, #0x1
    182c:	add	x19, x28, x19
    1830:	str	x27, [sp, #224]
    1834:	cmp	x20, x27
    1838:	add	x19, x19, #0x1
    183c:	add	x27, x27, #0x1
    1840:	ldurb	w0, [x27, #-2]
    1844:	strb	w0, [x19, #3]
    1848:	b.ne	1830 <gconv@@Base+0xf38>  // b.any
    184c:	mov	w10, #0x7                   	// #7
    1850:	ldp	x27, x28, [sp, #80]
    1854:	b	c68 <gconv@@Base+0x370>
    1858:	mov	x0, x3
    185c:	str	x3, [sp, #208]
    1860:	b	a6c <gconv@@Base+0x174>
    1864:	ubfiz	x3, x5, #2, #32
    1868:	ldrh	w3, [x16, x3]
    186c:	cmp	w4, w3
    1870:	b.ne	d50 <gconv@@Base+0x458>  // b.any
    1874:	mov	x13, x5
    1878:	b	c14 <gconv@@Base+0x31c>
    187c:	mov	w1, #0x20aa                	// #8362
    1880:	cmp	w0, w1
    1884:	b.eq	1ad8 <gconv@@Base+0x11e0>  // b.none
    1888:	mov	w1, #0x20ac                	// #8364
    188c:	cmp	w0, w1
    1890:	b.eq	1afc <gconv@@Base+0x1204>  // b.none
    1894:	mov	w1, #0x2122                	// #8482
    1898:	cmp	w0, w1
    189c:	b.eq	1cfc <gconv@@Base+0x1404>  // b.none
    18a0:	mov	w1, #0x1c00                	// #7168
    18a4:	cmp	w1, w0, lsr #7
    18a8:	b.eq	1f74 <gconv@@Base+0x167c>  // b.none
    18ac:	mov	w1, #0xffff04e3            	// #-64285
    18b0:	add	w1, w0, w1
    18b4:	cmp	w1, #0x31
    18b8:	b.hi	1704 <gconv@@Base+0xe0c>  // b.pmore
    18bc:	mov	w5, #0xfb39                	// #64313
    18c0:	cmp	w0, w5
    18c4:	b.eq	1b04 <gconv@@Base+0x120c>  // b.none
    18c8:	mov	w6, #0x0                   	// #0
    18cc:	mov	w4, #0x10                  	// #16
    18d0:	mov	w2, #0x21                  	// #33
    18d4:	ldr	x9, [sp, #176]
    18d8:	b	1904 <gconv@@Base+0x100c>
    18dc:	cmp	w4, w6
    18e0:	b.eq	1704 <gconv@@Base+0xe0c>  // b.none
    18e4:	mov	w2, w4
    18e8:	add	w4, w2, w6
    18ec:	lsr	w1, w4, #1
    18f0:	lsr	w4, w4, #1
    18f4:	lsl	x5, x1, #3
    18f8:	ldrh	w5, [x9, x5]
    18fc:	cmp	w0, w5
    1900:	b.eq	1b08 <gconv@@Base+0x1210>  // b.none
    1904:	cmp	w5, w0
    1908:	b.hi	18dc <gconv@@Base+0xfe4>  // b.pmore
    190c:	cmp	w4, w6
    1910:	b.eq	16ec <gconv@@Base+0xdf4>  // b.none
    1914:	mov	w6, w4
    1918:	b	18e8 <gconv@@Base+0xff0>
    191c:	mov	w5, #0x5d0                 	// #1488
    1920:	mov	x2, #0x1c                  	// #28
    1924:	mov	w4, #0x5                   	// #5
    1928:	b	11fc <gconv@@Base+0x904>
    192c:	sub	w1, w0, #0x5b0
    1930:	cmp	w1, #0x44
    1934:	b.hi	1aac <gconv@@Base+0x11b4>  // b.pmore
    1938:	adrp	x1, 2000 <gconv@@Base+0x1708>
    193c:	add	x1, x1, #0x1a8
    1940:	sub	w0, w0, #0x541
    1944:	add	x1, x1, #0x100
    1948:	ldrb	w0, [x1, w0, uxtw]
    194c:	b	1030 <gconv@@Base+0x738>
    1950:	mov	w0, #0x83                  	// #131
    1954:	b	135c <gconv@@Base+0xa64>
    1958:	mov	w10, #0x6                   	// #6
    195c:	ldr	x0, [sp, #208]
    1960:	b	a78 <gconv@@Base+0x180>
    1964:	mov	x3, #0x6                   	// #6
    1968:	b	1290 <gconv@@Base+0x998>
    196c:	sxtw	x3, w19
    1970:	b	1290 <gconv@@Base+0x998>
    1974:	ldr	x0, [x21, #8]
    1978:	add	x22, x2, #0x4
    197c:	cmp	x22, x0
    1980:	b.hi	1d04 <gconv@@Base+0x140c>  // b.pmore
    1984:	asr	w0, w20, #3
    1988:	str	w0, [x2]
    198c:	ldr	w0, [x21, #16]
    1990:	str	wzr, [x19]
    1994:	tbnz	w0, #0, 1f6c <gconv@@Base+0x1674>
    1998:	mov	x0, x23
    199c:	str	x2, [sp, #232]
    19a0:	bl	740 <_dl_mcount_wrapper_check@plt>
    19a4:	ldr	x1, [sp, #136]
    19a8:	mov	w7, w25
    19ac:	mov	x5, x24
    19b0:	mov	x3, x22
    19b4:	add	x2, sp, #0xe8
    19b8:	mov	x0, x26
    19bc:	mov	w6, #0x0                   	// #0
    19c0:	mov	x4, #0x0                   	// #0
    19c4:	blr	x23
    19c8:	mov	w10, w0
    19cc:	cmp	w0, #0x4
    19d0:	b.eq	19e8 <gconv@@Base+0x10f0>  // b.none
    19d4:	ldr	x0, [sp, #232]
    19d8:	cmp	x22, x0
    19dc:	b.eq	19e4 <gconv@@Base+0x10ec>  // b.none
    19e0:	str	w20, [x19]
    19e4:	cbnz	w10, c68 <gconv@@Base+0x370>
    19e8:	mov	x0, x23
    19ec:	bl	740 <_dl_mcount_wrapper_check@plt>
    19f0:	mov	w7, w25
    19f4:	mov	x5, x24
    19f8:	mov	x0, x26
    19fc:	mov	w6, #0x1                   	// #1
    1a00:	ldr	x1, [sp, #136]
    1a04:	b	15e8 <gconv@@Base+0xcf0>
    1a08:	ldr	x2, [x28]
    1a0c:	add	x3, sp, #0xe0
    1a10:	ldr	x0, [sp, #120]
    1a14:	mov	x5, x8
    1a18:	ldr	x6, [sp, #160]
    1a1c:	mov	x4, x20
    1a20:	mov	x1, x21
    1a24:	stp	x8, x10, [sp, #96]
    1a28:	str	w7, [sp, #128]
    1a2c:	str	x11, [sp, #184]
    1a30:	bl	700 <__gconv_transliterate@plt>
    1a34:	sxtw	x3, w0
    1a38:	ldr	w7, [sp, #128]
    1a3c:	cmp	w3, #0x6
    1a40:	ldp	x8, x10, [sp, #96]
    1a44:	ldr	x11, [sp, #184]
    1a48:	b.eq	1ae8 <gconv@@Base+0x11f0>  // b.none
    1a4c:	cmp	w3, #0x5
    1a50:	ldp	x25, x30, [sp, #224]
    1a54:	b.ne	ed0 <gconv@@Base+0x5d8>  // b.any
    1a58:	ldr	x0, [sp, #200]
    1a5c:	str	x25, [x28]
    1a60:	cmp	x0, x30
    1a64:	b.eq	1480 <gconv@@Base+0xb88>  // b.none
    1a68:	b	172c <gconv@@Base+0xe34>
    1a6c:	str	x25, [x28]
    1a70:	cmp	x10, x27
    1a74:	b.eq	1488 <gconv@@Base+0xb90>  // b.none
    1a78:	b	172c <gconv@@Base+0xe34>
    1a7c:	ldr	x1, [sp, #160]
    1a80:	add	x25, x15, #0x4
    1a84:	mov	x3, #0x6                   	// #6
    1a88:	str	x25, [sp, #224]
    1a8c:	ldr	x0, [x1]
    1a90:	add	x0, x0, #0x1
    1a94:	str	x0, [x1]
    1a98:	b	ed0 <gconv@@Base+0x5d8>
    1a9c:	str	x20, [x28]
    1aa0:	cmp	x10, x27
    1aa4:	b.eq	1440 <gconv@@Base+0xb48>  // b.none
    1aa8:	b	172c <gconv@@Base+0xe34>
    1aac:	mov	w16, #0xffffdff2            	// #-8206
    1ab0:	add	w1, w0, w16
    1ab4:	cmp	w1, #0x2c
    1ab8:	b.hi	1b90 <gconv@@Base+0x1298>  // b.pmore
    1abc:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1ac0:	add	x1, x1, #0x1a8
    1ac4:	add	x1, x1, #0x100
    1ac8:	mov	w15, #0xffffe0a6            	// #-8026
    1acc:	add	w0, w0, w15
    1ad0:	ldrb	w0, [x1, w0, uxtw]
    1ad4:	b	1030 <gconv@@Base+0x738>
    1ad8:	mov	w0, #0xa4                  	// #164
    1adc:	b	eb8 <gconv@@Base+0x5c0>
    1ae0:	mov	w1, #0x0                   	// #0
    1ae4:	b	1598 <gconv@@Base+0xca0>
    1ae8:	ldr	x30, [sp, #232]
    1aec:	b	1714 <gconv@@Base+0xe1c>
    1af0:	mov	w2, #0xe9                  	// #233
    1af4:	mov	w1, #0x10                  	// #16
    1af8:	b	162c <gconv@@Base+0xd34>
    1afc:	mov	w0, #0x80                  	// #128
    1b00:	b	eb8 <gconv@@Base+0x5c0>
    1b04:	mov	x1, #0x10                  	// #16
    1b08:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1b0c:	add	x0, x0, #0x1a8
    1b10:	add	x4, x0, #0x1e8
    1b14:	add	x2, x0, #0x100
    1b18:	add	x0, x4, x1, lsl #3
    1b1c:	ldrh	w1, [x0, #2]
    1b20:	sub	w1, w1, #0x541
    1b24:	ldrb	w1, [x2, w1, uxtw]
    1b28:	cbz	w1, 1f44 <gconv@@Base+0x164c>
    1b2c:	ldrsb	w2, [x0, #5]
    1b30:	tbnz	w2, #31, 1c44 <gconv@@Base+0x134c>
    1b34:	add	x4, x30, #0x2
    1b38:	cmp	x10, x4
    1b3c:	b.ls	146c <gconv@@Base+0xb74>  // b.plast
    1b40:	add	x4, x30, #0x1
    1b44:	str	x4, [sp, #232]
    1b48:	strb	w1, [x30]
    1b4c:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1b50:	ldrb	w4, [x0, #4]
    1b54:	add	x0, x1, #0x198
    1b58:	ldr	x1, [sp, #232]
    1b5c:	ldrb	w2, [x0, w2, sxtw]
    1b60:	add	x5, x1, #0x1
    1b64:	ldrb	w0, [x0, w4, sxtw]
    1b68:	str	x5, [sp, #232]
    1b6c:	strb	w0, [x1]
    1b70:	ldr	x0, [sp, #232]
    1b74:	add	x1, x0, #0x1
    1b78:	str	x1, [sp, #232]
    1b7c:	strb	w2, [x0]
    1b80:	ldp	x25, x30, [sp, #224]
    1b84:	add	x25, x25, #0x4
    1b88:	str	x25, [sp, #224]
    1b8c:	b	ed0 <gconv@@Base+0x5d8>
    1b90:	mov	w1, #0x20aa                	// #8362
    1b94:	cmp	w0, w1
    1b98:	b.eq	1c3c <gconv@@Base+0x1344>  // b.none
    1b9c:	mov	w1, #0x20ac                	// #8364
    1ba0:	cmp	w0, w1
    1ba4:	b.eq	1f18 <gconv@@Base+0x1620>  // b.none
    1ba8:	mov	w1, #0x2122                	// #8482
    1bac:	cmp	w0, w1
    1bb0:	b.eq	1358 <gconv@@Base+0xa60>  // b.none
    1bb4:	mov	w1, #0x1c00                	// #7168
    1bb8:	cmp	w1, w0, lsr #7
    1bbc:	b.eq	1f0c <gconv@@Base+0x1614>  // b.none
    1bc0:	mov	w10, #0xffff04e3            	// #-64285
    1bc4:	add	w1, w0, w10
    1bc8:	cmp	w1, #0x31
    1bcc:	b.hi	1034 <gconv@@Base+0x73c>  // b.pmore
    1bd0:	mov	w5, #0xfb39                	// #64313
    1bd4:	cmp	w0, w5
    1bd8:	b.eq	1c7c <gconv@@Base+0x1384>  // b.none
    1bdc:	adrp	x6, 2000 <gconv@@Base+0x1708>
    1be0:	add	x6, x6, #0x1a8
    1be4:	add	x6, x6, #0x1e8
    1be8:	mov	w2, #0x10                  	// #16
    1bec:	mov	w4, #0x21                  	// #33
    1bf0:	mov	w7, #0x0                   	// #0
    1bf4:	b	1c24 <gconv@@Base+0x132c>
    1bf8:	cmp	w7, w2
    1bfc:	b.eq	1034 <gconv@@Base+0x73c>  // b.none
    1c00:	mov	w4, w2
    1c04:	add	w2, w4, w7
    1c08:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1c0c:	lsr	w3, w2, #1
    1c10:	lsr	w2, w2, #1
    1c14:	lsl	x5, x3, #3
    1c18:	ldrh	w5, [x6, x5]
    1c1c:	cmp	w0, w5
    1c20:	b.eq	1c84 <gconv@@Base+0x138c>  // b.none
    1c24:	cmp	w0, w5
    1c28:	b.cc	1bf8 <gconv@@Base+0x1300>  // b.lo, b.ul, b.last
    1c2c:	cmp	w7, w2
    1c30:	b.eq	1f20 <gconv@@Base+0x1628>  // b.none
    1c34:	mov	w7, w2
    1c38:	b	1c04 <gconv@@Base+0x130c>
    1c3c:	mov	w0, #0xa4                  	// #164
    1c40:	b	135c <gconv@@Base+0xa64>
    1c44:	add	x2, x30, #0x1
    1c48:	cmp	x10, x2
    1c4c:	b.ls	146c <gconv@@Base+0xb74>  // b.plast
    1c50:	str	x2, [sp, #232]
    1c54:	adrp	x2, 2000 <gconv@@Base+0x1708>
    1c58:	strb	w1, [x30]
    1c5c:	add	x1, x2, #0x198
    1c60:	ldrb	w2, [x0, #4]
    1c64:	ldr	x0, [sp, #232]
    1c68:	ldrb	w1, [x1, x2]
    1c6c:	add	x4, x0, #0x1
    1c70:	str	x4, [sp, #232]
    1c74:	strb	w1, [x0]
    1c78:	b	1b80 <gconv@@Base+0x1288>
    1c7c:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1c80:	mov	x3, #0x10                  	// #16
    1c84:	add	x1, x1, #0x1a8
    1c88:	add	x0, x1, #0x1e8
    1c8c:	add	x1, x1, #0x100
    1c90:	add	x0, x0, x3, lsl #3
    1c94:	ldrh	w2, [x0, #2]
    1c98:	sub	w2, w2, #0x541
    1c9c:	ldrb	w1, [x1, x2]
    1ca0:	cbz	w1, 1fb8 <gconv@@Base+0x16c0>
    1ca4:	ldrsb	w2, [x0, #5]
    1ca8:	tbnz	w2, #31, 1f80 <gconv@@Base+0x1688>
    1cac:	add	x3, x8, #0x2
    1cb0:	cmp	x22, x3
    1cb4:	b.ls	16b4 <gconv@@Base+0xdbc>  // b.plast
    1cb8:	add	x3, x8, #0x1
    1cbc:	str	x3, [sp, #232]
    1cc0:	strb	w1, [x8]
    1cc4:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1cc8:	ldrb	w3, [x0, #4]
    1ccc:	add	x0, x1, #0x198
    1cd0:	ldr	x1, [sp, #232]
    1cd4:	ldrb	w2, [x0, w2, sxtw]
    1cd8:	add	x4, x1, #0x1
    1cdc:	ldrb	w0, [x0, x3]
    1ce0:	str	x4, [sp, #232]
    1ce4:	strb	w0, [x1]
    1ce8:	ldr	x0, [sp, #232]
    1cec:	add	x1, x0, #0x1
    1cf0:	str	x1, [sp, #232]
    1cf4:	strb	w2, [x0]
    1cf8:	b	1368 <gconv@@Base+0xa70>
    1cfc:	mov	w0, #0x99                  	// #153
    1d00:	b	eb8 <gconv@@Base+0x5c0>
    1d04:	mov	w10, #0x5                   	// #5
    1d08:	b	c68 <gconv@@Base+0x370>
    1d0c:	add	x4, x11, x19
    1d10:	mov	x6, x0
    1d14:	mov	x2, x27
    1d18:	mov	x0, x13
    1d1c:	add	x5, sp, #0xe8
    1d20:	add	x3, sp, #0xe0
    1d24:	mov	x1, x21
    1d28:	stp	x13, x4, [sp, #96]
    1d2c:	str	x11, [sp, #112]
    1d30:	str	w14, [sp, #120]
    1d34:	str	x8, [sp, #128]
    1d38:	stp	x9, x12, [sp, #144]
    1d3c:	bl	700 <__gconv_transliterate@plt>
    1d40:	ldr	w14, [sp, #120]
    1d44:	mov	w10, w0
    1d48:	cmp	w0, #0x6
    1d4c:	ldr	x13, [sp, #96]
    1d50:	ldr	x11, [sp, #112]
    1d54:	ldp	x9, x12, [sp, #144]
    1d58:	b.eq	1ea0 <gconv@@Base+0x15a8>  // b.none
    1d5c:	ldr	x0, [sp, #224]
    1d60:	cmp	x0, x11
    1d64:	b.ne	137c <gconv@@Base+0xa84>  // b.any
    1d68:	cmp	w10, #0x7
    1d6c:	ldr	x4, [sp, #104]
    1d70:	ldr	x8, [sp, #128]
    1d74:	b.ne	16d0 <gconv@@Base+0xdd8>  // b.any
    1d78:	add	x0, x11, #0x4
    1d7c:	cmp	x4, x0
    1d80:	b.eq	1eec <gconv@@Base+0x15f4>  // b.none
    1d84:	ldr	w0, [x28]
    1d88:	ldr	x1, [x9]
    1d8c:	and	x2, x0, #0x7
    1d90:	sub	x2, x19, x2
    1d94:	and	w0, w0, #0xfffffff8
    1d98:	add	x1, x1, x2
    1d9c:	str	x1, [x9]
    1da0:	cmp	x19, w0, sxtw
    1da4:	b.le	1ecc <gconv@@Base+0x15d4>
    1da8:	cmp	x19, #0x4
    1dac:	b.hi	1eac <gconv@@Base+0x15b4>  // b.pmore
    1db0:	orr	w0, w0, w19
    1db4:	str	w0, [x28]
    1db8:	cmp	x4, x11
    1dbc:	b.ls	184c <gconv@@Base+0xf54>  // b.plast
    1dc0:	add	x28, x28, #0x4
    1dc4:	mov	x25, x11
    1dc8:	add	x25, x25, #0x1
    1dcc:	str	x25, [sp, #224]
    1dd0:	cmp	x4, x25
    1dd4:	ldurb	w0, [x25, #-1]
    1dd8:	strb	w0, [x28], #1
    1ddc:	b.ne	1dc8 <gconv@@Base+0x14d0>  // b.any
    1de0:	b	184c <gconv@@Base+0xf54>
    1de4:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1de8:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1dec:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1df0:	add	x3, x3, #0x178
    1df4:	add	x1, x1, #0x28
    1df8:	add	x0, x0, #0x70
    1dfc:	mov	w2, #0x1c9                 	// #457
    1e00:	bl	750 <__assert_fail@plt>
    1e04:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1e08:	adrp	x1, 1000 <gconv@@Base+0x708>
    1e0c:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1e10:	add	x3, x3, #0x190
    1e14:	add	x1, x1, #0xff8
    1e18:	add	x0, x0, #0x150
    1e1c:	mov	w2, #0x31e                 	// #798
    1e20:	bl	750 <__assert_fail@plt>
    1e24:	ubfiz	x4, x2, #2, #32
    1e28:	ldrh	w4, [x16, x4]
    1e2c:	cmp	w3, w4
    1e30:	b.ne	1258 <gconv@@Base+0x960>  // b.any
    1e34:	mov	x13, x2
    1e38:	b	151c <gconv@@Base+0xc24>
    1e3c:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1e40:	adrp	x1, 1000 <gconv@@Base+0x708>
    1e44:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1e48:	add	x3, x3, #0x190
    1e4c:	add	x1, x1, #0xff8
    1e50:	add	x0, x0, #0x10
    1e54:	mov	w2, #0x1a4                 	// #420
    1e58:	stp	x27, x28, [sp, #80]
    1e5c:	bl	750 <__assert_fail@plt>
    1e60:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1e64:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1e68:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1e6c:	add	x3, x3, #0x178
    1e70:	add	x1, x1, #0x28
    1e74:	add	x0, x0, #0x38
    1e78:	mov	w2, #0x18b                 	// #395
    1e7c:	bl	750 <__assert_fail@plt>
    1e80:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1e84:	adrp	x1, 1000 <gconv@@Base+0x708>
    1e88:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1e8c:	add	x3, x3, #0x190
    1e90:	add	x1, x1, #0xff8
    1e94:	add	x0, x0, #0x10
    1e98:	mov	w2, #0x234                 	// #564
    1e9c:	bl	750 <__assert_fail@plt>
    1ea0:	tbz	w14, #1, 1060 <gconv@@Base+0x768>
    1ea4:	ldr	x0, [sp, #224]
    1ea8:	b	1048 <gconv@@Base+0x750>
    1eac:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1eb0:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1eb4:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1eb8:	add	x3, x3, #0x178
    1ebc:	add	x1, x1, #0x28
    1ec0:	add	x0, x0, #0xe8
    1ec4:	mov	w2, #0x1e6                 	// #486
    1ec8:	bl	750 <__assert_fail@plt>
    1ecc:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1ed0:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1ed4:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1ed8:	add	x3, x3, #0x178
    1edc:	add	x1, x1, #0x28
    1ee0:	add	x0, x0, #0xc0
    1ee4:	mov	w2, #0x1e5                 	// #485
    1ee8:	bl	750 <__assert_fail@plt>
    1eec:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1ef0:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1ef4:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1ef8:	add	x3, x3, #0x178
    1efc:	add	x1, x1, #0x28
    1f00:	add	x0, x0, #0x98
    1f04:	mov	w2, #0x1db                 	// #475
    1f08:	bl	750 <__assert_fail@plt>
    1f0c:	add	x0, x11, #0x4
    1f10:	str	x0, [sp, #224]
    1f14:	b	137c <gconv@@Base+0xa84>
    1f18:	mov	w0, #0x80                  	// #128
    1f1c:	b	135c <gconv@@Base+0xa64>
    1f20:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1f24:	add	x2, x1, #0x1a8
    1f28:	add	x2, x2, #0x1e8
    1f2c:	ubfiz	x5, x4, #3, #32
    1f30:	mov	w3, w4
    1f34:	ldrh	w2, [x2, x5]
    1f38:	cmp	w0, w2
    1f3c:	b.ne	1034 <gconv@@Base+0x73c>  // b.any
    1f40:	b	1c84 <gconv@@Base+0x138c>
    1f44:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1f48:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1f4c:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1f50:	add	x3, x3, #0x168
    1f54:	add	x1, x1, #0x28
    1f58:	add	x0, x0, #0x68
    1f5c:	mov	w2, #0x150                 	// #336
    1f60:	bl	750 <__assert_fail@plt>
    1f64:	stp	x27, x28, [sp, #80]
    1f68:	bl	710 <__stack_chk_fail@plt>
    1f6c:	mov	x2, x22
    1f70:	b	13e8 <gconv@@Base+0xaf0>
    1f74:	mov	x25, x2
    1f78:	str	x2, [sp, #224]
    1f7c:	b	ed0 <gconv@@Base+0x5d8>
    1f80:	add	x2, x8, #0x1
    1f84:	cmp	x22, x2
    1f88:	b.ls	16b4 <gconv@@Base+0xdbc>  // b.plast
    1f8c:	str	x2, [sp, #232]
    1f90:	adrp	x2, 2000 <gconv@@Base+0x1708>
    1f94:	strb	w1, [x8]
    1f98:	add	x1, x2, #0x198
    1f9c:	ldrb	w2, [x0, #4]
    1fa0:	ldr	x0, [sp, #232]
    1fa4:	ldrb	w1, [x1, x2]
    1fa8:	add	x2, x0, #0x1
    1fac:	str	x2, [sp, #232]
    1fb0:	strb	w1, [x0]
    1fb4:	b	1368 <gconv@@Base+0xa70>
    1fb8:	adrp	x3, 2000 <gconv@@Base+0x1708>
    1fbc:	adrp	x1, 2000 <gconv@@Base+0x1708>
    1fc0:	adrp	x0, 2000 <gconv@@Base+0x1708>
    1fc4:	add	x3, x3, #0x178
    1fc8:	add	x1, x1, #0x28
    1fcc:	add	x0, x0, #0x68
    1fd0:	mov	w2, #0x1be                 	// #446
    1fd4:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

0000000000001fd8 <.fini>:
    1fd8:	stp	x29, x30, [sp, #-16]!
    1fdc:	mov	x29, sp
    1fe0:	ldp	x29, x30, [sp], #16
    1fe4:	ret
