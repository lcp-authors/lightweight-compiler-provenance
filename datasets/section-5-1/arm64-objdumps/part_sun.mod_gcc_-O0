
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//part_sun.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x318>:
   0:	sub	sp, sp, #0x10
   4:	strh	w0, [sp, #14]
   8:	ldrh	w0, [sp, #14]
   c:	lsl	w0, w0, #8
  10:	sxth	w1, w0
  14:	ldrh	w0, [sp, #14]
  18:	lsr	w0, w0, #8
  1c:	and	w0, w0, #0xffff
  20:	sxth	w0, w0
  24:	orr	w0, w1, w0
  28:	sxth	w0, w0
  2c:	and	w0, w0, #0xffff
  30:	add	sp, sp, #0x10
  34:	ret
  38:	sub	sp, sp, #0x10
  3c:	str	w0, [sp, #12]
  40:	ldr	w0, [sp, #12]
  44:	rev	w0, w0
  48:	add	sp, sp, #0x10
  4c:	ret
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x1, [sp, #24]
  60:	adrp	x0, 0 <grub_mod_init-0x318>
  64:	add	x0, x0, #0x0
  68:	ldr	x0, [x0]
  6c:	bl	0 <grub_list_push>
  70:	nop
  74:	ldp	x29, x30, [sp], #32
  78:	ret
  7c:	nop
	...
  88:	stp	x29, x30, [sp, #-32]!
  8c:	mov	x29, sp
  90:	str	x0, [sp, #24]
  94:	ldr	x0, [sp, #24]
  98:	bl	0 <grub_list_remove>
  9c:	nop
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret
  a8:	sub	sp, sp, #0x20
  ac:	str	x0, [sp, #8]
  b0:	strh	wzr, [sp, #22]
  b4:	ldr	x0, [sp, #8]
  b8:	str	x0, [sp, #24]
  bc:	b	e0 <grub_mod_init-0x238>
  c0:	ldr	x0, [sp, #24]
  c4:	ldrh	w1, [x0]
  c8:	ldrh	w0, [sp, #22]
  cc:	eor	w0, w1, w0
  d0:	strh	w0, [sp, #22]
  d4:	ldr	x0, [sp, #24]
  d8:	add	x0, x0, #0x2
  dc:	str	x0, [sp, #24]
  e0:	ldr	x0, [sp, #8]
  e4:	add	x0, x0, #0x200
  e8:	ldr	x1, [sp, #24]
  ec:	cmp	x1, x0
  f0:	b.cc	c0 <grub_mod_init-0x258>  // b.lo, b.ul, b.last
  f4:	ldrh	w0, [sp, #22]
  f8:	cmp	w0, #0x0
  fc:	cset	w0, eq  // eq = none
 100:	and	w0, w0, #0xff
 104:	add	sp, sp, #0x20
 108:	ret
 10c:	sub	sp, sp, #0x290
 110:	stp	x29, x30, [sp]
 114:	mov	x29, sp
 118:	str	x19, [sp, #16]
 11c:	str	x0, [sp, #56]
 120:	str	x1, [sp, #48]
 124:	str	x2, [sp, #40]
 128:	adrp	x0, 0 <grub_mod_init-0x318>
 12c:	add	x0, x0, #0x0
 130:	ldr	x0, [x0]
 134:	str	x0, [sp, #624]
 138:	add	x0, sp, #0x40
 13c:	mov	x4, x0
 140:	mov	x3, #0x200                 	// #512
 144:	mov	x2, #0x0                   	// #0
 148:	mov	x1, #0x0                   	// #0
 14c:	ldr	x0, [sp, #56]
 150:	bl	0 <grub_disk_read>
 154:	str	w0, [sp, #648]
 158:	ldr	w0, [sp, #648]
 15c:	cmp	w0, #0x0
 160:	b.eq	16c <grub_mod_init-0x1ac>  // b.none
 164:	ldr	w0, [sp, #648]
 168:	b	2e4 <grub_mod_init-0x34>
 16c:	ldrh	w0, [sp, #572]
 170:	bl	0 <grub_mod_init-0x318>
 174:	and	w1, w0, #0xffff
 178:	mov	w0, #0xdabe                	// #55998
 17c:	cmp	w1, w0
 180:	b.eq	19c <grub_mod_init-0x17c>  // b.none
 184:	adrp	x0, 0 <grub_mod_init-0x318>
 188:	add	x0, x0, #0x0
 18c:	ldr	x1, [x0]
 190:	mov	w0, #0x13                  	// #19
 194:	bl	0 <grub_error>
 198:	b	2e4 <grub_mod_init-0x34>
 19c:	add	x0, sp, #0x40
 1a0:	bl	a8 <grub_mod_init-0x270>
 1a4:	cmp	w0, #0x0
 1a8:	b.ne	1c4 <grub_mod_init-0x154>  // b.any
 1ac:	adrp	x0, 0 <grub_mod_init-0x318>
 1b0:	add	x0, x0, #0x0
 1b4:	ldr	x1, [x0]
 1b8:	mov	w0, #0x13                  	// #19
 1bc:	bl	0 <grub_error>
 1c0:	b	2e4 <grub_mod_init-0x34>
 1c4:	str	wzr, [sp, #652]
 1c8:	b	2c8 <grub_mod_init-0x50>
 1cc:	ldrsw	x0, [sp, #652]
 1d0:	add	x0, x0, #0x20
 1d4:	lsl	x0, x0, #2
 1d8:	add	x1, sp, #0x4f
 1dc:	ldrb	w0, [x1, x0]
 1e0:	cmp	w0, #0x0
 1e4:	b.eq	2b8 <grub_mod_init-0x60>  // b.none
 1e8:	ldrsw	x0, [sp, #652]
 1ec:	add	x0, x0, #0x20
 1f0:	lsl	x0, x0, #2
 1f4:	add	x1, sp, #0x4f
 1f8:	ldrb	w0, [x1, x0]
 1fc:	cmp	w0, #0x5
 200:	b.eq	2b8 <grub_mod_init-0x60>  // b.none
 204:	add	x1, sp, #0x40
 208:	ldrsw	x0, [sp, #652]
 20c:	add	x0, x0, #0x36
 210:	lsl	x0, x0, #3
 214:	add	x0, x1, x0
 218:	add	x0, x0, #0xc
 21c:	str	x0, [sp, #640]
 220:	ldr	x0, [sp, #640]
 224:	ldr	w0, [x0]
 228:	bl	38 <grub_mod_init-0x2e0>
 22c:	mov	w19, w0
 230:	ldrh	w0, [sp, #500]
 234:	bl	0 <grub_mod_init-0x318>
 238:	and	w0, w0, #0xffff
 23c:	and	x0, x0, #0xffff
 240:	mul	x19, x19, x0
 244:	ldrh	w0, [sp, #502]
 248:	bl	0 <grub_mod_init-0x318>
 24c:	and	w0, w0, #0xffff
 250:	and	x0, x0, #0xffff
 254:	mul	x0, x19, x0
 258:	str	x0, [sp, #584]
 25c:	ldr	x0, [sp, #640]
 260:	ldr	w0, [x0, #4]
 264:	bl	38 <grub_mod_init-0x2e0>
 268:	mov	w0, w0
 26c:	str	x0, [sp, #592]
 270:	ldr	w0, [sp, #652]
 274:	str	w0, [sp, #608]
 278:	ldr	w0, [sp, #608]
 27c:	str	w0, [sp, #576]
 280:	ldr	x0, [sp, #592]
 284:	cmp	x0, #0x0
 288:	b.eq	2bc <grub_mod_init-0x5c>  // b.none
 28c:	add	x0, sp, #0x240
 290:	ldr	x3, [sp, #48]
 294:	ldr	x2, [sp, #40]
 298:	mov	x1, x0
 29c:	ldr	x0, [sp, #56]
 2a0:	blr	x3
 2a4:	cmp	w0, #0x0
 2a8:	b.eq	2bc <grub_mod_init-0x5c>  // b.none
 2ac:	mov	w0, #0x8                   	// #8
 2b0:	str	w0, [sp, #652]
 2b4:	b	2bc <grub_mod_init-0x5c>
 2b8:	nop
 2bc:	ldr	w0, [sp, #652]
 2c0:	add	w0, w0, #0x1
 2c4:	str	w0, [sp, #652]
 2c8:	ldr	w0, [sp, #652]
 2cc:	cmp	w0, #0x7
 2d0:	b.le	1cc <grub_mod_init-0x14c>
 2d4:	adrp	x0, 0 <grub_mod_init-0x318>
 2d8:	add	x0, x0, #0x0
 2dc:	ldr	x0, [x0]
 2e0:	ldr	w0, [x0]
 2e4:	ldr	x19, [sp, #16]
 2e8:	ldp	x29, x30, [sp]
 2ec:	add	sp, sp, #0x290
 2f0:	ret
 2f4:	nop
	...

0000000000000318 <grub_mod_init>:
 318:	stp	x29, x30, [sp, #-32]!
 31c:	mov	x29, sp
 320:	str	x0, [sp, #24]
 324:	adrp	x0, 0 <grub_mod_init-0x318>
 328:	add	x0, x0, #0x0
 32c:	ldr	x0, [x0]
 330:	bl	50 <grub_mod_init-0x2c8>
 334:	nop
 338:	ldp	x29, x30, [sp], #32
 33c:	ret
	...

0000000000000348 <grub_mod_fini>:
 348:	stp	x29, x30, [sp, #-16]!
 34c:	mov	x29, sp
 350:	adrp	x0, 0 <grub_mod_init-0x318>
 354:	add	x0, x0, #0x0
 358:	ldr	x0, [x0]
 35c:	bl	88 <grub_mod_init-0x290>
 360:	nop
 364:	ldp	x29, x30, [sp], #16
 368:	ret
 36c:	nop
	...
