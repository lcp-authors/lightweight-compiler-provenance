
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//dir_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402448 <.init>:
  402448:	stp	x29, x30, [sp, #-16]!
  40244c:	mov	x29, sp
  402450:	bl	402bc0 <__fxstatat@plt+0x60>
  402454:	ldp	x29, x30, [sp], #16
  402458:	ret

Disassembly of section .plt:

0000000000402460 <mbrtowc@plt-0x20>:
  402460:	stp	x16, x30, [sp, #-16]!
  402464:	adrp	x16, 43a000 <_obstack_memory_used@@Base+0x1e5b0>
  402468:	ldr	x17, [x16, #4088]
  40246c:	add	x16, x16, #0xff8
  402470:	br	x17
  402474:	nop
  402478:	nop
  40247c:	nop

0000000000402480 <mbrtowc@plt>:
  402480:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16]
  402488:	add	x16, x16, #0x0
  40248c:	br	x17

0000000000402490 <memcpy@plt>:
  402490:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #8]
  402498:	add	x16, x16, #0x8
  40249c:	br	x17

00000000004024a0 <memmove@plt>:
  4024a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #16]
  4024a8:	add	x16, x16, #0x10
  4024ac:	br	x17

00000000004024b0 <cap_to_text@plt>:
  4024b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #24]
  4024b8:	add	x16, x16, #0x18
  4024bc:	br	x17

00000000004024c0 <_exit@plt>:
  4024c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #32]
  4024c8:	add	x16, x16, #0x20
  4024cc:	br	x17

00000000004024d0 <getcwd@plt>:
  4024d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #40]
  4024d8:	add	x16, x16, #0x28
  4024dc:	br	x17

00000000004024e0 <fwrite_unlocked@plt>:
  4024e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #48]
  4024e8:	add	x16, x16, #0x30
  4024ec:	br	x17

00000000004024f0 <strtoul@plt>:
  4024f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #56]
  4024f8:	add	x16, x16, #0x38
  4024fc:	br	x17

0000000000402500 <strlen@plt>:
  402500:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #64]
  402508:	add	x16, x16, #0x40
  40250c:	br	x17

0000000000402510 <mbstowcs@plt>:
  402510:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #72]
  402518:	add	x16, x16, #0x48
  40251c:	br	x17

0000000000402520 <exit@plt>:
  402520:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #80]
  402528:	add	x16, x16, #0x50
  40252c:	br	x17

0000000000402530 <_setjmp@plt>:
  402530:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #88]
  402538:	add	x16, x16, #0x58
  40253c:	br	x17

0000000000402540 <raise@plt>:
  402540:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #96]
  402548:	add	x16, x16, #0x60
  40254c:	br	x17

0000000000402550 <error@plt>:
  402550:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #104]
  402558:	add	x16, x16, #0x68
  40255c:	br	x17

0000000000402560 <sigprocmask@plt>:
  402560:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #112]
  402568:	add	x16, x16, #0x70
  40256c:	br	x17

0000000000402570 <localtime_r@plt>:
  402570:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #120]
  402578:	add	x16, x16, #0x78
  40257c:	br	x17

0000000000402580 <setenv@plt>:
  402580:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #128]
  402588:	add	x16, x16, #0x80
  40258c:	br	x17

0000000000402590 <readlink@plt>:
  402590:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #136]
  402598:	add	x16, x16, #0x88
  40259c:	br	x17

00000000004025a0 <getgrnam@plt>:
  4025a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #144]
  4025a8:	add	x16, x16, #0x90
  4025ac:	br	x17

00000000004025b0 <ferror_unlocked@plt>:
  4025b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #152]
  4025b8:	add	x16, x16, #0x98
  4025bc:	br	x17

00000000004025c0 <sprintf@plt>:
  4025c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #160]
  4025c8:	add	x16, x16, #0xa0
  4025cc:	br	x17

00000000004025d0 <opendir@plt>:
  4025d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #168]
  4025d8:	add	x16, x16, #0xa8
  4025dc:	br	x17

00000000004025e0 <strftime@plt>:
  4025e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #176]
  4025e8:	add	x16, x16, #0xb0
  4025ec:	br	x17

00000000004025f0 <__cxa_atexit@plt>:
  4025f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #184]
  4025f8:	add	x16, x16, #0xb8
  4025fc:	br	x17

0000000000402600 <iswcntrl@plt>:
  402600:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #192]
  402608:	add	x16, x16, #0xc0
  40260c:	br	x17

0000000000402610 <clock_gettime@plt>:
  402610:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #200]
  402618:	add	x16, x16, #0xc8
  40261c:	br	x17

0000000000402620 <lseek@plt>:
  402620:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #208]
  402628:	add	x16, x16, #0xd0
  40262c:	br	x17

0000000000402630 <__fpending@plt>:
  402630:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #216]
  402638:	add	x16, x16, #0xd8
  40263c:	br	x17

0000000000402640 <snprintf@plt>:
  402640:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #224]
  402648:	add	x16, x16, #0xe0
  40264c:	br	x17

0000000000402650 <localeconv@plt>:
  402650:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #232]
  402658:	add	x16, x16, #0xe8
  40265c:	br	x17

0000000000402660 <fileno@plt>:
  402660:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #240]
  402668:	add	x16, x16, #0xf0
  40266c:	br	x17

0000000000402670 <putc_unlocked@plt>:
  402670:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #248]
  402678:	add	x16, x16, #0xf8
  40267c:	br	x17

0000000000402680 <signal@plt>:
  402680:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #256]
  402688:	add	x16, x16, #0x100
  40268c:	br	x17

0000000000402690 <fclose@plt>:
  402690:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #264]
  402698:	add	x16, x16, #0x108
  40269c:	br	x17

00000000004026a0 <nl_langinfo@plt>:
  4026a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #272]
  4026a8:	add	x16, x16, #0x110
  4026ac:	br	x17

00000000004026b0 <malloc@plt>:
  4026b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #280]
  4026b8:	add	x16, x16, #0x118
  4026bc:	br	x17

00000000004026c0 <toupper@plt>:
  4026c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #288]
  4026c8:	add	x16, x16, #0x120
  4026cc:	br	x17

00000000004026d0 <wcwidth@plt>:
  4026d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #296]
  4026d8:	add	x16, x16, #0x128
  4026dc:	br	x17

00000000004026e0 <tzset@plt>:
  4026e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #304]
  4026e8:	add	x16, x16, #0x130
  4026ec:	br	x17

00000000004026f0 <wcswidth@plt>:
  4026f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #312]
  4026f8:	add	x16, x16, #0x138
  4026fc:	br	x17

0000000000402700 <sigemptyset@plt>:
  402700:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #320]
  402708:	add	x16, x16, #0x140
  40270c:	br	x17

0000000000402710 <strncmp@plt>:
  402710:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #328]
  402718:	add	x16, x16, #0x148
  40271c:	br	x17

0000000000402720 <bindtextdomain@plt>:
  402720:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #336]
  402728:	add	x16, x16, #0x150
  40272c:	br	x17

0000000000402730 <__libc_start_main@plt>:
  402730:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #344]
  402738:	add	x16, x16, #0x158
  40273c:	br	x17

0000000000402740 <memset@plt>:
  402740:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #352]
  402748:	add	x16, x16, #0x160
  40274c:	br	x17

0000000000402750 <getpwnam@plt>:
  402750:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #360]
  402758:	add	x16, x16, #0x168
  40275c:	br	x17

0000000000402760 <gmtime_r@plt>:
  402760:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #368]
  402768:	add	x16, x16, #0x170
  40276c:	br	x17

0000000000402770 <putchar_unlocked@plt>:
  402770:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #376]
  402778:	add	x16, x16, #0x178
  40277c:	br	x17

0000000000402780 <calloc@plt>:
  402780:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #384]
  402788:	add	x16, x16, #0x180
  40278c:	br	x17

0000000000402790 <readdir@plt>:
  402790:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #392]
  402798:	add	x16, x16, #0x188
  40279c:	br	x17

00000000004027a0 <realloc@plt>:
  4027a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #400]
  4027a8:	add	x16, x16, #0x190
  4027ac:	br	x17

00000000004027b0 <closedir@plt>:
  4027b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #408]
  4027b8:	add	x16, x16, #0x198
  4027bc:	br	x17

00000000004027c0 <sigaction@plt>:
  4027c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #416]
  4027c8:	add	x16, x16, #0x1a0
  4027cc:	br	x17

00000000004027d0 <strrchr@plt>:
  4027d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #424]
  4027d8:	add	x16, x16, #0x1a8
  4027dc:	br	x17

00000000004027e0 <tcgetpgrp@plt>:
  4027e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #432]
  4027e8:	add	x16, x16, #0x1b0
  4027ec:	br	x17

00000000004027f0 <__gmon_start__@plt>:
  4027f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #440]
  4027f8:	add	x16, x16, #0x1b8
  4027fc:	br	x17

0000000000402800 <mktime@plt>:
  402800:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #448]
  402808:	add	x16, x16, #0x1c0
  40280c:	br	x17

0000000000402810 <strtoumax@plt>:
  402810:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #456]
  402818:	add	x16, x16, #0x1c8
  40281c:	br	x17

0000000000402820 <abort@plt>:
  402820:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #464]
  402828:	add	x16, x16, #0x1d0
  40282c:	br	x17

0000000000402830 <mbsinit@plt>:
  402830:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #472]
  402838:	add	x16, x16, #0x1d8
  40283c:	br	x17

0000000000402840 <gnu_dev_major@plt>:
  402840:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #480]
  402848:	add	x16, x16, #0x1e0
  40284c:	br	x17

0000000000402850 <getxattr@plt>:
  402850:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #488]
  402858:	add	x16, x16, #0x1e8
  40285c:	br	x17

0000000000402860 <memcmp@plt>:
  402860:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #496]
  402868:	add	x16, x16, #0x1f0
  40286c:	br	x17

0000000000402870 <textdomain@plt>:
  402870:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #504]
  402878:	add	x16, x16, #0x1f8
  40287c:	br	x17

0000000000402880 <stpncpy@plt>:
  402880:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #512]
  402888:	add	x16, x16, #0x200
  40288c:	br	x17

0000000000402890 <getopt_long@plt>:
  402890:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #520]
  402898:	add	x16, x16, #0x208
  40289c:	br	x17

00000000004028a0 <sigismember@plt>:
  4028a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #528]
  4028a8:	add	x16, x16, #0x210
  4028ac:	br	x17

00000000004028b0 <strcmp@plt>:
  4028b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #536]
  4028b8:	add	x16, x16, #0x218
  4028bc:	br	x17

00000000004028c0 <getpwuid@plt>:
  4028c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #544]
  4028c8:	add	x16, x16, #0x220
  4028cc:	br	x17

00000000004028d0 <__ctype_b_loc@plt>:
  4028d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #552]
  4028d8:	add	x16, x16, #0x228
  4028dc:	br	x17

00000000004028e0 <fseeko@plt>:
  4028e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #560]
  4028e8:	add	x16, x16, #0x230
  4028ec:	br	x17

00000000004028f0 <free@plt>:
  4028f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #568]
  4028f8:	add	x16, x16, #0x238
  4028fc:	br	x17

0000000000402900 <__ctype_get_mb_cur_max@plt>:
  402900:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #576]
  402908:	add	x16, x16, #0x240
  40290c:	br	x17

0000000000402910 <mempcpy@plt>:
  402910:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #584]
  402918:	add	x16, x16, #0x248
  40291c:	br	x17

0000000000402920 <strspn@plt>:
  402920:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #592]
  402928:	add	x16, x16, #0x250
  40292c:	br	x17

0000000000402930 <strchr@plt>:
  402930:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #600]
  402938:	add	x16, x16, #0x258
  40293c:	br	x17

0000000000402940 <fwrite@plt>:
  402940:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #608]
  402948:	add	x16, x16, #0x260
  40294c:	br	x17

0000000000402950 <fnmatch@plt>:
  402950:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #616]
  402958:	add	x16, x16, #0x268
  40295c:	br	x17

0000000000402960 <fflush_unlocked@plt>:
  402960:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #624]
  402968:	add	x16, x16, #0x270
  40296c:	br	x17

0000000000402970 <fflush@plt>:
  402970:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #632]
  402978:	add	x16, x16, #0x278
  40297c:	br	x17

0000000000402980 <gnu_dev_minor@plt>:
  402980:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #640]
  402988:	add	x16, x16, #0x280
  40298c:	br	x17

0000000000402990 <strcpy@plt>:
  402990:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #648]
  402998:	add	x16, x16, #0x288
  40299c:	br	x17

00000000004029a0 <dirfd@plt>:
  4029a0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #656]
  4029a8:	add	x16, x16, #0x290
  4029ac:	br	x17

00000000004029b0 <unsetenv@plt>:
  4029b0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #664]
  4029b8:	add	x16, x16, #0x298
  4029bc:	br	x17

00000000004029c0 <__lxstat@plt>:
  4029c0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #672]
  4029c8:	add	x16, x16, #0x2a0
  4029cc:	br	x17

00000000004029d0 <cap_get_file@plt>:
  4029d0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #680]
  4029d8:	add	x16, x16, #0x2a8
  4029dc:	br	x17

00000000004029e0 <isatty@plt>:
  4029e0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #688]
  4029e8:	add	x16, x16, #0x2b0
  4029ec:	br	x17

00000000004029f0 <wcstombs@plt>:
  4029f0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #696]
  4029f8:	add	x16, x16, #0x2b8
  4029fc:	br	x17

0000000000402a00 <gethostname@plt>:
  402a00:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #704]
  402a08:	add	x16, x16, #0x2c0
  402a0c:	br	x17

0000000000402a10 <cap_free@plt>:
  402a10:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #712]
  402a18:	add	x16, x16, #0x2c8
  402a1c:	br	x17

0000000000402a20 <__fxstat@plt>:
  402a20:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #720]
  402a28:	add	x16, x16, #0x2d0
  402a2c:	br	x17

0000000000402a30 <dcgettext@plt>:
  402a30:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #728]
  402a38:	add	x16, x16, #0x2d8
  402a3c:	br	x17

0000000000402a40 <fputs_unlocked@plt>:
  402a40:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #736]
  402a48:	add	x16, x16, #0x2e0
  402a4c:	br	x17

0000000000402a50 <strcoll@plt>:
  402a50:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #744]
  402a58:	add	x16, x16, #0x2e8
  402a5c:	br	x17

0000000000402a60 <__freading@plt>:
  402a60:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #752]
  402a68:	add	x16, x16, #0x2f0
  402a6c:	br	x17

0000000000402a70 <longjmp@plt>:
  402a70:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #760]
  402a78:	add	x16, x16, #0x2f8
  402a7c:	br	x17

0000000000402a80 <sigaddset@plt>:
  402a80:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #768]
  402a88:	add	x16, x16, #0x300
  402a8c:	br	x17

0000000000402a90 <iswprint@plt>:
  402a90:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #776]
  402a98:	add	x16, x16, #0x308
  402a9c:	br	x17

0000000000402aa0 <printf@plt>:
  402aa0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #784]
  402aa8:	add	x16, x16, #0x310
  402aac:	br	x17

0000000000402ab0 <__assert_fail@plt>:
  402ab0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #792]
  402ab8:	add	x16, x16, #0x318
  402abc:	br	x17

0000000000402ac0 <__errno_location@plt>:
  402ac0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #800]
  402ac8:	add	x16, x16, #0x320
  402acc:	br	x17

0000000000402ad0 <tolower@plt>:
  402ad0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #808]
  402ad8:	add	x16, x16, #0x328
  402adc:	br	x17

0000000000402ae0 <getenv@plt>:
  402ae0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #816]
  402ae8:	add	x16, x16, #0x330
  402aec:	br	x17

0000000000402af0 <__xstat@plt>:
  402af0:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #824]
  402af8:	add	x16, x16, #0x338
  402afc:	br	x17

0000000000402b00 <getgrgid@plt>:
  402b00:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #832]
  402b08:	add	x16, x16, #0x340
  402b0c:	br	x17

0000000000402b10 <timegm@plt>:
  402b10:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #840]
  402b18:	add	x16, x16, #0x348
  402b1c:	br	x17

0000000000402b20 <gettext@plt>:
  402b20:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #848]
  402b28:	add	x16, x16, #0x350
  402b2c:	br	x17

0000000000402b30 <fprintf@plt>:
  402b30:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #856]
  402b38:	add	x16, x16, #0x358
  402b3c:	br	x17

0000000000402b40 <ioctl@plt>:
  402b40:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #864]
  402b48:	add	x16, x16, #0x360
  402b4c:	br	x17

0000000000402b50 <setlocale@plt>:
  402b50:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #872]
  402b58:	add	x16, x16, #0x368
  402b5c:	br	x17

0000000000402b60 <__fxstatat@plt>:
  402b60:	adrp	x16, 43b000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #880]
  402b68:	add	x16, x16, #0x370
  402b6c:	br	x17

Disassembly of section .text:

0000000000402b70 <_obstack_begin@@Base-0x18a98>:
  402b70:	mov	x29, #0x0                   	// #0
  402b74:	mov	x30, #0x0                   	// #0
  402b78:	mov	x5, x0
  402b7c:	ldr	x1, [sp]
  402b80:	add	x2, sp, #0x8
  402b84:	mov	x6, sp
  402b88:	movz	x0, #0x0, lsl #48
  402b8c:	movk	x0, #0x0, lsl #32
  402b90:	movk	x0, #0x40, lsl #16
  402b94:	movk	x0, #0x3e74
  402b98:	movz	x3, #0x0, lsl #48
  402b9c:	movk	x3, #0x0, lsl #32
  402ba0:	movk	x3, #0x42, lsl #16
  402ba4:	movk	x3, #0x578
  402ba8:	movz	x4, #0x0, lsl #48
  402bac:	movk	x4, #0x0, lsl #32
  402bb0:	movk	x4, #0x42, lsl #16
  402bb4:	movk	x4, #0x5f8
  402bb8:	bl	402730 <__libc_start_main@plt>
  402bbc:	bl	402820 <abort@plt>
  402bc0:	adrp	x0, 43a000 <_obstack_memory_used@@Base+0x1e5b0>
  402bc4:	ldr	x0, [x0, #4064]
  402bc8:	cbz	x0, 402bd0 <__fxstatat@plt+0x70>
  402bcc:	b	4027f0 <__gmon_start__@plt>
  402bd0:	ret
  402bd4:	stp	x29, x30, [sp, #-32]!
  402bd8:	mov	x29, sp
  402bdc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402be0:	add	x0, x0, #0x5d8
  402be4:	str	x0, [sp, #24]
  402be8:	ldr	x0, [sp, #24]
  402bec:	str	x0, [sp, #24]
  402bf0:	ldr	x1, [sp, #24]
  402bf4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402bf8:	add	x0, x0, #0x5d8
  402bfc:	cmp	x1, x0
  402c00:	b.eq	402c3c <__fxstatat@plt+0xdc>  // b.none
  402c04:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402c08:	add	x0, x0, #0x678
  402c0c:	ldr	x0, [x0]
  402c10:	str	x0, [sp, #16]
  402c14:	ldr	x0, [sp, #16]
  402c18:	str	x0, [sp, #16]
  402c1c:	ldr	x0, [sp, #16]
  402c20:	cmp	x0, #0x0
  402c24:	b.eq	402c40 <__fxstatat@plt+0xe0>  // b.none
  402c28:	ldr	x1, [sp, #16]
  402c2c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402c30:	add	x0, x0, #0x5d8
  402c34:	blr	x1
  402c38:	b	402c40 <__fxstatat@plt+0xe0>
  402c3c:	nop
  402c40:	ldp	x29, x30, [sp], #32
  402c44:	ret
  402c48:	stp	x29, x30, [sp, #-48]!
  402c4c:	mov	x29, sp
  402c50:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402c54:	add	x0, x0, #0x5d8
  402c58:	str	x0, [sp, #40]
  402c5c:	ldr	x0, [sp, #40]
  402c60:	str	x0, [sp, #40]
  402c64:	ldr	x1, [sp, #40]
  402c68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402c6c:	add	x0, x0, #0x5d8
  402c70:	sub	x0, x1, x0
  402c74:	asr	x0, x0, #3
  402c78:	lsr	x1, x0, #63
  402c7c:	add	x0, x1, x0
  402c80:	asr	x0, x0, #1
  402c84:	str	x0, [sp, #32]
  402c88:	ldr	x0, [sp, #32]
  402c8c:	cmp	x0, #0x0
  402c90:	b.eq	402cd0 <__fxstatat@plt+0x170>  // b.none
  402c94:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402c98:	add	x0, x0, #0x680
  402c9c:	ldr	x0, [x0]
  402ca0:	str	x0, [sp, #24]
  402ca4:	ldr	x0, [sp, #24]
  402ca8:	str	x0, [sp, #24]
  402cac:	ldr	x0, [sp, #24]
  402cb0:	cmp	x0, #0x0
  402cb4:	b.eq	402cd4 <__fxstatat@plt+0x174>  // b.none
  402cb8:	ldr	x2, [sp, #24]
  402cbc:	ldr	x1, [sp, #32]
  402cc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402cc4:	add	x0, x0, #0x5d8
  402cc8:	blr	x2
  402ccc:	b	402cd4 <__fxstatat@plt+0x174>
  402cd0:	nop
  402cd4:	ldp	x29, x30, [sp], #48
  402cd8:	ret
  402cdc:	stp	x29, x30, [sp, #-16]!
  402ce0:	mov	x29, sp
  402ce4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402ce8:	add	x0, x0, #0x608
  402cec:	ldrb	w0, [x0]
  402cf0:	and	x0, x0, #0xff
  402cf4:	cmp	x0, #0x0
  402cf8:	b.ne	402d14 <__fxstatat@plt+0x1b4>  // b.any
  402cfc:	bl	402bd4 <__fxstatat@plt+0x74>
  402d00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402d04:	add	x0, x0, #0x608
  402d08:	mov	w1, #0x1                   	// #1
  402d0c:	strb	w1, [x0]
  402d10:	b	402d18 <__fxstatat@plt+0x1b8>
  402d14:	nop
  402d18:	ldp	x29, x30, [sp], #16
  402d1c:	ret
  402d20:	stp	x29, x30, [sp, #-16]!
  402d24:	mov	x29, sp
  402d28:	bl	402c48 <__fxstatat@plt+0xe8>
  402d2c:	nop
  402d30:	ldp	x29, x30, [sp], #16
  402d34:	ret
  402d38:	sub	sp, sp, #0x10
  402d3c:	str	w0, [sp, #12]
  402d40:	ldr	w0, [sp, #12]
  402d44:	cmp	w0, #0x1
  402d48:	b.eq	402d5c <__fxstatat@plt+0x1fc>  // b.none
  402d4c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402d50:	add	x0, x0, #0x570
  402d54:	ldr	w1, [sp, #12]
  402d58:	str	w1, [x0]
  402d5c:	nop
  402d60:	add	sp, sp, #0x10
  402d64:	ret
  402d68:	sub	sp, sp, #0x10
  402d6c:	strb	w0, [sp, #15]
  402d70:	ldrb	w0, [sp, #15]
  402d74:	add	sp, sp, #0x10
  402d78:	ret
  402d7c:	sub	sp, sp, #0x20
  402d80:	str	x0, [sp, #8]
  402d84:	ldr	x0, [sp, #8]
  402d88:	ldrb	w0, [x0]
  402d8c:	cmp	w0, #0x2e
  402d90:	b.ne	402df4 <__fxstatat@plt+0x294>  // b.any
  402d94:	ldr	x0, [sp, #8]
  402d98:	add	x0, x0, #0x1
  402d9c:	ldrb	w0, [x0]
  402da0:	cmp	w0, #0x2e
  402da4:	b.ne	402db0 <__fxstatat@plt+0x250>  // b.any
  402da8:	mov	x0, #0x2                   	// #2
  402dac:	b	402db4 <__fxstatat@plt+0x254>
  402db0:	mov	x0, #0x1                   	// #1
  402db4:	ldr	x1, [sp, #8]
  402db8:	add	x0, x1, x0
  402dbc:	ldrb	w0, [x0]
  402dc0:	strb	w0, [sp, #31]
  402dc4:	ldrb	w0, [sp, #31]
  402dc8:	cmp	w0, #0x0
  402dcc:	b.eq	402ddc <__fxstatat@plt+0x27c>  // b.none
  402dd0:	ldrb	w0, [sp, #31]
  402dd4:	cmp	w0, #0x2f
  402dd8:	b.ne	402de4 <__fxstatat@plt+0x284>  // b.any
  402ddc:	mov	w0, #0x1                   	// #1
  402de0:	b	402de8 <__fxstatat@plt+0x288>
  402de4:	mov	w0, #0x0                   	// #0
  402de8:	and	w0, w0, #0x1
  402dec:	and	w0, w0, #0xff
  402df0:	b	402df8 <__fxstatat@plt+0x298>
  402df4:	mov	w0, #0x0                   	// #0
  402df8:	add	sp, sp, #0x20
  402dfc:	ret
  402e00:	stp	x29, x30, [sp, #-16]!
  402e04:	mov	x29, sp
  402e08:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402e0c:	add	x0, x0, #0x718
  402e10:	bl	402b20 <gettext@plt>
  402e14:	mov	x2, x0
  402e18:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402e1c:	add	x0, x0, #0x5f8
  402e20:	ldr	x0, [x0]
  402e24:	mov	x1, x0
  402e28:	mov	x0, x2
  402e2c:	bl	402a40 <fputs_unlocked@plt>
  402e30:	nop
  402e34:	ldp	x29, x30, [sp], #16
  402e38:	ret
  402e3c:	stp	x29, x30, [sp, #-16]!
  402e40:	mov	x29, sp
  402e44:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402e48:	add	x0, x0, #0x768
  402e4c:	bl	402b20 <gettext@plt>
  402e50:	mov	x2, x0
  402e54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402e58:	add	x0, x0, #0x5f8
  402e5c:	ldr	x0, [x0]
  402e60:	mov	x1, x0
  402e64:	mov	x0, x2
  402e68:	bl	402a40 <fputs_unlocked@plt>
  402e6c:	nop
  402e70:	ldp	x29, x30, [sp], #16
  402e74:	ret
  402e78:	stp	x29, x30, [sp, #-176]!
  402e7c:	mov	x29, sp
  402e80:	str	x0, [sp, #24]
  402e84:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402e88:	add	x1, x0, #0x950
  402e8c:	add	x0, sp, #0x28
  402e90:	ldp	x2, x3, [x1]
  402e94:	stp	x2, x3, [x0]
  402e98:	ldp	x2, x3, [x1, #16]
  402e9c:	stp	x2, x3, [x0, #16]
  402ea0:	ldp	x2, x3, [x1, #32]
  402ea4:	stp	x2, x3, [x0, #32]
  402ea8:	ldp	x2, x3, [x1, #48]
  402eac:	stp	x2, x3, [x0, #48]
  402eb0:	ldp	x2, x3, [x1, #64]
  402eb4:	stp	x2, x3, [x0, #64]
  402eb8:	ldp	x2, x3, [x1, #80]
  402ebc:	stp	x2, x3, [x0, #80]
  402ec0:	ldp	x2, x3, [x1, #96]
  402ec4:	stp	x2, x3, [x0, #96]
  402ec8:	ldr	x0, [sp, #24]
  402ecc:	str	x0, [sp, #168]
  402ed0:	add	x0, sp, #0x28
  402ed4:	str	x0, [sp, #160]
  402ed8:	b	402ee8 <__fxstatat@plt+0x388>
  402edc:	ldr	x0, [sp, #160]
  402ee0:	add	x0, x0, #0x10
  402ee4:	str	x0, [sp, #160]
  402ee8:	ldr	x0, [sp, #160]
  402eec:	ldr	x0, [x0]
  402ef0:	cmp	x0, #0x0
  402ef4:	b.eq	402f14 <__fxstatat@plt+0x3b4>  // b.none
  402ef8:	ldr	x0, [sp, #160]
  402efc:	ldr	x0, [x0]
  402f00:	mov	x1, x0
  402f04:	ldr	x0, [sp, #24]
  402f08:	bl	4028b0 <strcmp@plt>
  402f0c:	cmp	w0, #0x0
  402f10:	b.ne	402edc <__fxstatat@plt+0x37c>  // b.any
  402f14:	ldr	x0, [sp, #160]
  402f18:	ldr	x0, [x0, #8]
  402f1c:	cmp	x0, #0x0
  402f20:	b.eq	402f30 <__fxstatat@plt+0x3d0>  // b.none
  402f24:	ldr	x0, [sp, #160]
  402f28:	ldr	x0, [x0, #8]
  402f2c:	str	x0, [sp, #168]
  402f30:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402f34:	add	x0, x0, #0x840
  402f38:	bl	402b20 <gettext@plt>
  402f3c:	mov	x3, x0
  402f40:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402f44:	add	x2, x0, #0x858
  402f48:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402f4c:	add	x1, x0, #0x880
  402f50:	mov	x0, x3
  402f54:	bl	402aa0 <printf@plt>
  402f58:	mov	x1, #0x0                   	// #0
  402f5c:	mov	w0, #0x5                   	// #5
  402f60:	bl	402b50 <setlocale@plt>
  402f64:	str	x0, [sp, #152]
  402f68:	ldr	x0, [sp, #152]
  402f6c:	cmp	x0, #0x0
  402f70:	b.eq	402fb8 <__fxstatat@plt+0x458>  // b.none
  402f74:	mov	x2, #0x3                   	// #3
  402f78:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402f7c:	add	x1, x0, #0x890
  402f80:	ldr	x0, [sp, #152]
  402f84:	bl	402710 <strncmp@plt>
  402f88:	cmp	w0, #0x0
  402f8c:	b.eq	402fb8 <__fxstatat@plt+0x458>  // b.none
  402f90:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402f94:	add	x0, x0, #0x898
  402f98:	bl	402b20 <gettext@plt>
  402f9c:	mov	x2, x0
  402fa0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  402fa4:	add	x0, x0, #0x5f8
  402fa8:	ldr	x0, [x0]
  402fac:	mov	x1, x0
  402fb0:	mov	x0, x2
  402fb4:	bl	402a40 <fputs_unlocked@plt>
  402fb8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402fbc:	add	x0, x0, #0x8e0
  402fc0:	bl	402b20 <gettext@plt>
  402fc4:	mov	x3, x0
  402fc8:	ldr	x2, [sp, #24]
  402fcc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402fd0:	add	x1, x0, #0x858
  402fd4:	mov	x0, x3
  402fd8:	bl	402aa0 <printf@plt>
  402fdc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  402fe0:	add	x0, x0, #0x900
  402fe4:	bl	402b20 <gettext@plt>
  402fe8:	mov	x3, x0
  402fec:	ldr	x1, [sp, #168]
  402ff0:	ldr	x0, [sp, #24]
  402ff4:	cmp	x1, x0
  402ff8:	b.ne	403008 <__fxstatat@plt+0x4a8>  // b.any
  402ffc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  403000:	add	x0, x0, #0x938
  403004:	b	403010 <__fxstatat@plt+0x4b0>
  403008:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  40300c:	add	x0, x0, #0x948
  403010:	mov	x2, x0
  403014:	ldr	x1, [sp, #168]
  403018:	mov	x0, x3
  40301c:	bl	402aa0 <printf@plt>
  403020:	nop
  403024:	ldp	x29, x30, [sp], #176
  403028:	ret
  40302c:	stp	x29, x30, [sp, #-32]!
  403030:	mov	x29, sp
  403034:	str	x0, [sp, #24]
  403038:	str	x1, [sp, #16]
  40303c:	ldr	x1, [sp, #16]
  403040:	ldr	x0, [sp, #24]
  403044:	bl	4133fc <__fxstatat@plt+0x1089c>
  403048:	ldp	x29, x30, [sp], #32
  40304c:	ret
  403050:	sub	sp, sp, #0x10
  403054:	str	x0, [sp, #8]
  403058:	ldr	x0, [sp, #8]
  40305c:	add	sp, sp, #0x10
  403060:	ret
  403064:	sub	sp, sp, #0x10
  403068:	str	w0, [sp, #12]
  40306c:	ldr	w0, [sp, #12]
  403070:	cmp	w0, #0x5f
  403074:	cset	w0, eq  // eq = none
  403078:	and	w0, w0, #0xff
  40307c:	add	sp, sp, #0x10
  403080:	ret
  403084:	mov	w0, #0x0                   	// #0
  403088:	ret
  40308c:	stp	x29, x30, [sp, #-80]!
  403090:	mov	x29, sp
  403094:	str	x0, [sp, #24]
  403098:	str	x1, [sp, #16]
  40309c:	mov	w0, #0x10                  	// #16
  4030a0:	str	w0, [sp, #76]
  4030a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4030a8:	add	x0, x0, #0x890
  4030ac:	str	x0, [sp, #64]
  4030b0:	ldrsw	x0, [sp, #76]
  4030b4:	str	x0, [sp, #56]
  4030b8:	ldr	x0, [sp, #64]
  4030bc:	str	x0, [sp, #48]
  4030c0:	ldr	x0, [sp, #48]
  4030c4:	ldr	x1, [x0, #32]
  4030c8:	ldr	x0, [sp, #48]
  4030cc:	ldr	x0, [x0, #24]
  4030d0:	sub	x0, x1, x0
  4030d4:	mov	x1, x0
  4030d8:	ldr	x0, [sp, #56]
  4030dc:	cmp	x1, x0
  4030e0:	b.cs	4030f0 <__fxstatat@plt+0x590>  // b.hs, b.nlast
  4030e4:	ldr	x1, [sp, #56]
  4030e8:	ldr	x0, [sp, #64]
  4030ec:	bl	41b6d0 <_obstack_newchunk@@Base>
  4030f0:	ldr	x0, [sp, #64]
  4030f4:	ldr	x1, [x0, #24]
  4030f8:	ldr	x0, [sp, #56]
  4030fc:	add	x1, x1, x0
  403100:	ldr	x0, [sp, #64]
  403104:	str	x1, [x0, #24]
  403108:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40310c:	add	x0, x0, #0x890
  403110:	ldr	x0, [x0, #24]
  403114:	str	x0, [sp, #40]
  403118:	ldr	x0, [sp, #40]
  40311c:	str	x0, [sp, #32]
  403120:	ldr	x0, [sp, #32]
  403124:	sub	x0, x0, #0x10
  403128:	str	x0, [sp, #32]
  40312c:	ldr	x0, [sp, #32]
  403130:	ldr	x1, [sp, #24]
  403134:	str	x1, [x0, #8]
  403138:	ldr	x0, [sp, #32]
  40313c:	ldr	x1, [sp, #16]
  403140:	str	x1, [x0]
  403144:	nop
  403148:	ldp	x29, x30, [sp], #80
  40314c:	ret
  403150:	stp	x29, x30, [sp, #-48]!
  403154:	mov	x29, sp
  403158:	mov	w0, #0x10                  	// #16
  40315c:	str	w0, [sp, #44]
  403160:	ldrsw	x0, [sp, #44]
  403164:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403168:	add	x1, x1, #0x890
  40316c:	str	x1, [sp, #32]
  403170:	ldr	x1, [sp, #32]
  403174:	ldr	x2, [x1, #24]
  403178:	ldr	x1, [sp, #32]
  40317c:	ldr	x1, [x1, #16]
  403180:	sub	x1, x2, x1
  403184:	cmp	x1, x0
  403188:	b.cs	4031ac <__fxstatat@plt+0x64c>  // b.hs, b.nlast
  40318c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403190:	add	x3, x0, #0x100
  403194:	mov	w2, #0x403                 	// #1027
  403198:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40319c:	add	x1, x0, #0x768
  4031a0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4031a4:	add	x0, x0, #0x778
  4031a8:	bl	402ab0 <__assert_fail@plt>
  4031ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4031b0:	add	x0, x0, #0x890
  4031b4:	ldr	x1, [x0, #24]
  4031b8:	ldr	w0, [sp, #44]
  4031bc:	neg	w0, w0
  4031c0:	sxtw	x0, w0
  4031c4:	add	x1, x1, x0
  4031c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4031cc:	add	x0, x0, #0x890
  4031d0:	str	x1, [x0, #24]
  4031d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4031d8:	add	x0, x0, #0x890
  4031dc:	ldr	x0, [x0, #24]
  4031e0:	str	x0, [sp, #24]
  4031e4:	ldr	x0, [sp, #24]
  4031e8:	str	x0, [sp, #16]
  4031ec:	ldr	x0, [sp, #16]
  4031f0:	ldp	x0, x1, [x0]
  4031f4:	ldp	x29, x30, [sp], #48
  4031f8:	ret
  4031fc:	stp	x29, x30, [sp, #-80]!
  403200:	mov	x29, sp
  403204:	str	x0, [sp, #24]
  403208:	str	x1, [sp, #16]
  40320c:	ldr	x0, [sp, #16]
  403210:	str	x0, [sp, #64]
  403214:	ldr	x0, [sp, #64]
  403218:	ldr	x1, [x0, #24]
  40321c:	ldr	x0, [sp, #64]
  403220:	ldr	x0, [x0, #16]
  403224:	sub	x0, x1, x0
  403228:	lsr	x0, x0, #3
  40322c:	str	x0, [sp, #56]
  403230:	ldr	x0, [sp, #56]
  403234:	cmp	x0, #0x0
  403238:	b.eq	40336c <__fxstatat@plt+0x80c>  // b.none
  40323c:	ldr	x0, [sp, #16]
  403240:	str	x0, [sp, #48]
  403244:	ldr	x0, [sp, #48]
  403248:	ldr	x0, [x0, #16]
  40324c:	str	x0, [sp, #40]
  403250:	ldr	x0, [sp, #48]
  403254:	ldr	x0, [x0, #24]
  403258:	ldr	x1, [sp, #40]
  40325c:	cmp	x1, x0
  403260:	b.ne	403274 <__fxstatat@plt+0x714>  // b.any
  403264:	ldr	x0, [sp, #48]
  403268:	ldrb	w1, [x0, #80]
  40326c:	orr	w1, w1, #0x2
  403270:	strb	w1, [x0, #80]
  403274:	ldr	x0, [sp, #48]
  403278:	ldr	x0, [x0, #24]
  40327c:	mov	x1, x0
  403280:	ldr	x0, [sp, #48]
  403284:	ldr	x0, [x0, #48]
  403288:	add	x1, x1, x0
  40328c:	ldr	x0, [sp, #48]
  403290:	ldr	x0, [x0, #48]
  403294:	mvn	x0, x0
  403298:	and	x0, x1, x0
  40329c:	mov	x1, x0
  4032a0:	ldr	x0, [sp, #48]
  4032a4:	str	x1, [x0, #24]
  4032a8:	ldr	x0, [sp, #48]
  4032ac:	ldr	x1, [x0, #24]
  4032b0:	ldr	x0, [sp, #48]
  4032b4:	ldr	x0, [x0, #8]
  4032b8:	sub	x0, x1, x0
  4032bc:	mov	x2, x0
  4032c0:	ldr	x0, [sp, #48]
  4032c4:	ldr	x1, [x0, #32]
  4032c8:	ldr	x0, [sp, #48]
  4032cc:	ldr	x0, [x0, #8]
  4032d0:	sub	x0, x1, x0
  4032d4:	cmp	x2, x0
  4032d8:	b.ls	4032ec <__fxstatat@plt+0x78c>  // b.plast
  4032dc:	ldr	x0, [sp, #48]
  4032e0:	ldr	x1, [x0, #32]
  4032e4:	ldr	x0, [sp, #48]
  4032e8:	str	x1, [x0, #24]
  4032ec:	ldr	x0, [sp, #48]
  4032f0:	ldr	x1, [x0, #24]
  4032f4:	ldr	x0, [sp, #48]
  4032f8:	str	x1, [x0, #16]
  4032fc:	ldr	x0, [sp, #40]
  403300:	str	x0, [sp, #32]
  403304:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403308:	add	x0, x0, #0x5f8
  40330c:	ldr	x0, [x0]
  403310:	mov	x1, x0
  403314:	ldr	x0, [sp, #24]
  403318:	bl	402a40 <fputs_unlocked@plt>
  40331c:	str	xzr, [sp, #72]
  403320:	b	403354 <__fxstatat@plt+0x7f4>
  403324:	ldr	x0, [sp, #72]
  403328:	lsl	x0, x0, #3
  40332c:	ldr	x1, [sp, #32]
  403330:	add	x0, x1, x0
  403334:	ldr	x0, [x0]
  403338:	mov	x1, x0
  40333c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  403340:	add	x0, x0, #0x7b0
  403344:	bl	402aa0 <printf@plt>
  403348:	ldr	x0, [sp, #72]
  40334c:	add	x0, x0, #0x1
  403350:	str	x0, [sp, #72]
  403354:	ldr	x1, [sp, #72]
  403358:	ldr	x0, [sp, #56]
  40335c:	cmp	x1, x0
  403360:	b.cc	403324 <__fxstatat@plt+0x7c4>  // b.lo, b.ul, b.last
  403364:	mov	w0, #0xa                   	// #10
  403368:	bl	402770 <putchar_unlocked@plt>
  40336c:	nop
  403370:	ldp	x29, x30, [sp], #80
  403374:	ret
  403378:	sub	sp, sp, #0x10
  40337c:	str	x0, [sp, #8]
  403380:	b	4033d8 <__fxstatat@plt+0x878>
  403384:	ldr	x0, [sp, #8]
  403388:	ldrb	w0, [x0]
  40338c:	cmp	w0, #0x25
  403390:	b.ne	4033c8 <__fxstatat@plt+0x868>  // b.any
  403394:	ldr	x0, [sp, #8]
  403398:	add	x0, x0, #0x1
  40339c:	ldrb	w0, [x0]
  4033a0:	cmp	w0, #0x25
  4033a4:	b.eq	4033b8 <__fxstatat@plt+0x858>  // b.none
  4033a8:	cmp	w0, #0x62
  4033ac:	b.ne	4033cc <__fxstatat@plt+0x86c>  // b.any
  4033b0:	ldr	x0, [sp, #8]
  4033b4:	b	4033ec <__fxstatat@plt+0x88c>
  4033b8:	ldr	x0, [sp, #8]
  4033bc:	add	x0, x0, #0x1
  4033c0:	str	x0, [sp, #8]
  4033c4:	b	4033cc <__fxstatat@plt+0x86c>
  4033c8:	nop
  4033cc:	ldr	x0, [sp, #8]
  4033d0:	add	x0, x0, #0x1
  4033d4:	str	x0, [sp, #8]
  4033d8:	ldr	x0, [sp, #8]
  4033dc:	ldrb	w0, [x0]
  4033e0:	cmp	w0, #0x0
  4033e4:	b.ne	403384 <__fxstatat@plt+0x824>  // b.any
  4033e8:	mov	x0, #0x0                   	// #0
  4033ec:	add	sp, sp, #0x10
  4033f0:	ret
  4033f4:	stp	x29, x30, [sp, #-32]!
  4033f8:	mov	x29, sp
  4033fc:	str	wzr, [sp, #28]
  403400:	b	403494 <__fxstatat@plt+0x934>
  403404:	ldr	w0, [sp, #28]
  403408:	bl	40e62c <__fxstatat@plt+0xbacc>
  40340c:	and	w0, w0, #0xff
  403410:	cmp	w0, #0x0
  403414:	b.ne	403448 <__fxstatat@plt+0x8e8>  // b.any
  403418:	ldr	w0, [sp, #28]
  40341c:	cmp	w0, #0x7e
  403420:	b.eq	403448 <__fxstatat@plt+0x8e8>  // b.none
  403424:	ldr	w0, [sp, #28]
  403428:	cmp	w0, #0x2d
  40342c:	b.eq	403448 <__fxstatat@plt+0x8e8>  // b.none
  403430:	ldr	w0, [sp, #28]
  403434:	cmp	w0, #0x2e
  403438:	b.eq	403448 <__fxstatat@plt+0x8e8>  // b.none
  40343c:	ldr	w0, [sp, #28]
  403440:	cmp	w0, #0x5f
  403444:	b.ne	403450 <__fxstatat@plt+0x8f0>  // b.any
  403448:	mov	w2, #0x1                   	// #1
  40344c:	b	403454 <__fxstatat@plt+0x8f4>
  403450:	mov	w2, #0x0                   	// #0
  403454:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403458:	add	x1, x0, #0x8e8
  40345c:	ldrsw	x0, [sp, #28]
  403460:	ldrb	w0, [x1, x0]
  403464:	sxtb	w1, w0
  403468:	sxtb	w0, w2
  40346c:	orr	w0, w1, w0
  403470:	sxtb	w0, w0
  403474:	and	w2, w0, #0xff
  403478:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40347c:	add	x1, x0, #0x8e8
  403480:	ldrsw	x0, [sp, #28]
  403484:	strb	w2, [x1, x0]
  403488:	ldr	w0, [sp, #28]
  40348c:	add	w0, w0, #0x1
  403490:	str	w0, [sp, #28]
  403494:	ldr	w0, [sp, #28]
  403498:	cmp	w0, #0xff
  40349c:	b.le	403404 <__fxstatat@plt+0x8a4>
  4034a0:	nop
  4034a4:	nop
  4034a8:	ldp	x29, x30, [sp], #32
  4034ac:	ret
  4034b0:	stp	x29, x30, [sp, #-112]!
  4034b4:	mov	x29, sp
  4034b8:	str	x19, [sp, #16]
  4034bc:	str	x0, [sp, #40]
  4034c0:	mov	x0, #0xc                   	// #12
  4034c4:	str	x0, [sp, #104]
  4034c8:	ldr	x0, [sp, #104]
  4034cc:	str	x0, [sp, #88]
  4034d0:	str	xzr, [sp, #104]
  4034d4:	str	wzr, [sp, #100]
  4034d8:	b	4035c0 <__fxstatat@plt+0xa60>
  4034dc:	ldr	x0, [sp, #88]
  4034e0:	str	x0, [sp, #56]
  4034e4:	ldr	w1, [sp, #100]
  4034e8:	mov	w0, #0xe                   	// #14
  4034ec:	movk	w0, #0x2, lsl #16
  4034f0:	add	w0, w1, w0
  4034f4:	bl	4026a0 <nl_langinfo@plt>
  4034f8:	str	x0, [sp, #80]
  4034fc:	mov	w1, #0x25                  	// #37
  403500:	ldr	x0, [sp, #80]
  403504:	bl	402930 <strchr@plt>
  403508:	cmp	x0, #0x0
  40350c:	b.eq	403518 <__fxstatat@plt+0x9b8>  // b.none
  403510:	mov	w0, #0x0                   	// #0
  403514:	b	4035e0 <__fxstatat@plt+0xa80>
  403518:	bl	4028d0 <__ctype_b_loc@plt>
  40351c:	ldr	x19, [x0]
  403520:	ldr	x0, [sp, #80]
  403524:	ldrb	w0, [x0]
  403528:	bl	402d68 <__fxstatat@plt+0x208>
  40352c:	and	w0, w0, #0xff
  403530:	and	x0, x0, #0xff
  403534:	lsl	x0, x0, #1
  403538:	add	x0, x19, x0
  40353c:	ldrh	w0, [x0]
  403540:	and	w0, w0, #0x800
  403544:	cmp	w0, #0x0
  403548:	cset	w0, ne  // ne = any
  40354c:	and	w0, w0, #0xff
  403550:	str	w0, [sp, #76]
  403554:	ldrsw	x0, [sp, #100]
  403558:	lsl	x0, x0, #7
  40355c:	ldr	x1, [sp, #40]
  403560:	add	x0, x1, x0
  403564:	add	x1, sp, #0x38
  403568:	mov	w5, #0x0                   	// #0
  40356c:	ldr	w4, [sp, #76]
  403570:	mov	x3, x1
  403574:	mov	x2, #0x80                  	// #128
  403578:	mov	x1, x0
  40357c:	ldr	x0, [sp, #80]
  403580:	bl	41375c <__fxstatat@plt+0x10bfc>
  403584:	str	x0, [sp, #64]
  403588:	ldr	x0, [sp, #64]
  40358c:	cmp	x0, #0x7f
  403590:	b.ls	40359c <__fxstatat@plt+0xa3c>  // b.plast
  403594:	mov	w0, #0x0                   	// #0
  403598:	b	4035e0 <__fxstatat@plt+0xa80>
  40359c:	ldr	x0, [sp, #56]
  4035a0:	ldr	x2, [sp, #104]
  4035a4:	ldr	x1, [sp, #104]
  4035a8:	cmp	x2, x0
  4035ac:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4035b0:	str	x0, [sp, #104]
  4035b4:	ldr	w0, [sp, #100]
  4035b8:	add	w0, w0, #0x1
  4035bc:	str	w0, [sp, #100]
  4035c0:	ldr	w0, [sp, #100]
  4035c4:	cmp	w0, #0xb
  4035c8:	b.le	4034dc <__fxstatat@plt+0x97c>
  4035cc:	ldr	x1, [sp, #88]
  4035d0:	ldr	x0, [sp, #104]
  4035d4:	cmp	x1, x0
  4035d8:	b.hi	4034c8 <__fxstatat@plt+0x968>  // b.pmore
  4035dc:	mov	w0, #0x1                   	// #1
  4035e0:	ldr	x19, [sp, #16]
  4035e4:	ldp	x29, x30, [sp], #112
  4035e8:	ret
  4035ec:	sub	sp, sp, #0x650
  4035f0:	stp	x29, x30, [sp]
  4035f4:	mov	x29, sp
  4035f8:	str	wzr, [sp, #1612]
  4035fc:	b	403634 <__fxstatat@plt+0xad4>
  403600:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403604:	add	x0, x0, #0x518
  403608:	ldrsw	x1, [sp, #1612]
  40360c:	ldr	x0, [x0, x1, lsl #3]
  403610:	bl	403378 <__fxstatat@plt+0x818>
  403614:	mov	x2, x0
  403618:	ldrsw	x0, [sp, #1612]
  40361c:	lsl	x0, x0, #3
  403620:	add	x1, sp, #0x618
  403624:	str	x2, [x1, x0]
  403628:	ldr	w0, [sp, #1612]
  40362c:	add	w0, w0, #0x1
  403630:	str	w0, [sp, #1612]
  403634:	ldr	w0, [sp, #1612]
  403638:	cmp	w0, #0x1
  40363c:	b.le	403600 <__fxstatat@plt+0xaa0>
  403640:	ldr	x0, [sp, #1560]
  403644:	cmp	x0, #0x0
  403648:	b.ne	403658 <__fxstatat@plt+0xaf8>  // b.any
  40364c:	ldr	x0, [sp, #1568]
  403650:	cmp	x0, #0x0
  403654:	b.eq	4037e4 <__fxstatat@plt+0xc84>  // b.none
  403658:	add	x0, sp, #0x18
  40365c:	bl	4034b0 <__fxstatat@plt+0x950>
  403660:	and	w0, w0, #0xff
  403664:	eor	w0, w0, #0x1
  403668:	and	w0, w0, #0xff
  40366c:	cmp	w0, #0x0
  403670:	b.ne	4037ec <__fxstatat@plt+0xc8c>  // b.any
  403674:	str	wzr, [sp, #1608]
  403678:	b	4037c4 <__fxstatat@plt+0xc64>
  40367c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403680:	add	x0, x0, #0x518
  403684:	ldrsw	x1, [sp, #1608]
  403688:	ldr	x0, [x0, x1, lsl #3]
  40368c:	str	x0, [sp, #1592]
  403690:	str	wzr, [sp, #1604]
  403694:	b	4037ac <__fxstatat@plt+0xc4c>
  403698:	ldrsw	x2, [sp, #1604]
  40369c:	ldrsw	x1, [sp, #1608]
  4036a0:	mov	x0, x1
  4036a4:	lsl	x0, x0, #1
  4036a8:	add	x0, x0, x1
  4036ac:	lsl	x0, x0, #2
  4036b0:	add	x0, x2, x0
  4036b4:	lsl	x1, x0, #7
  4036b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4036bc:	add	x0, x0, #0x9e8
  4036c0:	add	x0, x1, x0
  4036c4:	str	x0, [sp, #1584]
  4036c8:	ldrsw	x0, [sp, #1608]
  4036cc:	lsl	x0, x0, #3
  4036d0:	add	x1, sp, #0x618
  4036d4:	ldr	x0, [x1, x0]
  4036d8:	cmp	x0, #0x0
  4036dc:	b.ne	403700 <__fxstatat@plt+0xba0>  // b.any
  4036e0:	ldr	x3, [sp, #1592]
  4036e4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4036e8:	add	x2, x0, #0x7b8
  4036ec:	mov	x1, #0x80                  	// #128
  4036f0:	ldr	x0, [sp, #1584]
  4036f4:	bl	402640 <snprintf@plt>
  4036f8:	str	w0, [sp, #1600]
  4036fc:	b	403788 <__fxstatat@plt+0xc28>
  403700:	ldrsw	x0, [sp, #1608]
  403704:	lsl	x0, x0, #3
  403708:	add	x1, sp, #0x618
  40370c:	ldr	x1, [x1, x0]
  403710:	ldr	x0, [sp, #1592]
  403714:	sub	x0, x1, x0
  403718:	cmp	x0, #0x80
  40371c:	b.gt	4037f4 <__fxstatat@plt+0xc94>
  403720:	ldrsw	x0, [sp, #1608]
  403724:	lsl	x0, x0, #3
  403728:	add	x1, sp, #0x618
  40372c:	ldr	x1, [x1, x0]
  403730:	ldr	x0, [sp, #1592]
  403734:	sub	x0, x1, x0
  403738:	str	w0, [sp, #1580]
  40373c:	add	x1, sp, #0x18
  403740:	ldrsw	x0, [sp, #1604]
  403744:	lsl	x0, x0, #7
  403748:	add	x2, x1, x0
  40374c:	ldrsw	x0, [sp, #1608]
  403750:	lsl	x0, x0, #3
  403754:	add	x1, sp, #0x618
  403758:	ldr	x0, [x1, x0]
  40375c:	add	x0, x0, #0x2
  403760:	mov	x6, x0
  403764:	mov	x5, x2
  403768:	ldr	x4, [sp, #1592]
  40376c:	ldr	w3, [sp, #1580]
  403770:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  403774:	add	x2, x0, #0x7c0
  403778:	mov	x1, #0x80                  	// #128
  40377c:	ldr	x0, [sp, #1584]
  403780:	bl	402640 <snprintf@plt>
  403784:	str	w0, [sp, #1600]
  403788:	ldr	w0, [sp, #1600]
  40378c:	cmp	w0, #0x0
  403790:	b.lt	4037fc <__fxstatat@plt+0xc9c>  // b.tstop
  403794:	ldr	w0, [sp, #1600]
  403798:	cmp	w0, #0x7f
  40379c:	b.gt	4037fc <__fxstatat@plt+0xc9c>
  4037a0:	ldr	w0, [sp, #1604]
  4037a4:	add	w0, w0, #0x1
  4037a8:	str	w0, [sp, #1604]
  4037ac:	ldr	w0, [sp, #1604]
  4037b0:	cmp	w0, #0xb
  4037b4:	b.le	403698 <__fxstatat@plt+0xb38>
  4037b8:	ldr	w0, [sp, #1608]
  4037bc:	add	w0, w0, #0x1
  4037c0:	str	w0, [sp, #1608]
  4037c4:	ldr	w0, [sp, #1608]
  4037c8:	cmp	w0, #0x1
  4037cc:	b.le	40367c <__fxstatat@plt+0xb1c>
  4037d0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4037d4:	add	x0, x0, #0x5e8
  4037d8:	mov	w1, #0x1                   	// #1
  4037dc:	strb	w1, [x0]
  4037e0:	b	403800 <__fxstatat@plt+0xca0>
  4037e4:	nop
  4037e8:	b	403800 <__fxstatat@plt+0xca0>
  4037ec:	nop
  4037f0:	b	403800 <__fxstatat@plt+0xca0>
  4037f4:	nop
  4037f8:	b	403800 <__fxstatat@plt+0xca0>
  4037fc:	nop
  403800:	ldp	x29, x30, [sp]
  403804:	add	sp, sp, #0x650
  403808:	ret
  40380c:	sub	sp, sp, #0x20
  403810:	str	x0, [sp, #8]
  403814:	str	x1, [sp]
  403818:	ldr	x0, [sp, #8]
  40381c:	str	x0, [sp, #24]
  403820:	ldr	x0, [sp, #24]
  403824:	ldr	x0, [x0]
  403828:	ldr	x1, [sp]
  40382c:	udiv	x2, x0, x1
  403830:	ldr	x1, [sp]
  403834:	mul	x1, x2, x1
  403838:	sub	x0, x0, x1
  40383c:	add	sp, sp, #0x20
  403840:	ret
  403844:	sub	sp, sp, #0x20
  403848:	str	x0, [sp, #8]
  40384c:	str	x1, [sp]
  403850:	ldr	x0, [sp, #8]
  403854:	str	x0, [sp, #24]
  403858:	ldr	x0, [sp]
  40385c:	str	x0, [sp, #16]
  403860:	ldr	x0, [sp, #24]
  403864:	ldr	x1, [x0]
  403868:	ldr	x0, [sp, #16]
  40386c:	ldr	x0, [x0]
  403870:	cmp	x1, x0
  403874:	b.ne	403898 <__fxstatat@plt+0xd38>  // b.any
  403878:	ldr	x0, [sp, #24]
  40387c:	ldr	x1, [x0, #8]
  403880:	ldr	x0, [sp, #16]
  403884:	ldr	x0, [x0, #8]
  403888:	cmp	x1, x0
  40388c:	b.ne	403898 <__fxstatat@plt+0xd38>  // b.any
  403890:	mov	w0, #0x1                   	// #1
  403894:	b	40389c <__fxstatat@plt+0xd3c>
  403898:	mov	w0, #0x0                   	// #0
  40389c:	and	w0, w0, #0x1
  4038a0:	and	w0, w0, #0xff
  4038a4:	add	sp, sp, #0x20
  4038a8:	ret
  4038ac:	stp	x29, x30, [sp, #-32]!
  4038b0:	mov	x29, sp
  4038b4:	str	x0, [sp, #24]
  4038b8:	ldr	x0, [sp, #24]
  4038bc:	bl	4028f0 <free@plt>
  4038c0:	nop
  4038c4:	ldp	x29, x30, [sp], #32
  4038c8:	ret
  4038cc:	stp	x29, x30, [sp, #-64]!
  4038d0:	mov	x29, sp
  4038d4:	str	x0, [sp, #24]
  4038d8:	str	x1, [sp, #16]
  4038dc:	mov	x0, #0x10                  	// #16
  4038e0:	bl	41a080 <__fxstatat@plt+0x17520>
  4038e4:	str	x0, [sp, #56]
  4038e8:	ldr	x0, [sp, #56]
  4038ec:	ldr	x1, [sp, #16]
  4038f0:	str	x1, [x0]
  4038f4:	ldr	x0, [sp, #56]
  4038f8:	ldr	x1, [sp, #24]
  4038fc:	str	x1, [x0, #8]
  403900:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403904:	add	x0, x0, #0x610
  403908:	ldr	x0, [x0]
  40390c:	ldr	x1, [sp, #56]
  403910:	bl	411cb0 <__fxstatat@plt+0xf150>
  403914:	str	x0, [sp, #48]
  403918:	ldr	x0, [sp, #48]
  40391c:	cmp	x0, #0x0
  403920:	b.ne	403928 <__fxstatat@plt+0xdc8>  // b.any
  403924:	bl	41a260 <__fxstatat@plt+0x17700>
  403928:	ldr	x1, [sp, #48]
  40392c:	ldr	x0, [sp, #56]
  403930:	cmp	x1, x0
  403934:	cset	w0, ne  // ne = any
  403938:	strb	w0, [sp, #47]
  40393c:	ldrb	w0, [sp, #47]
  403940:	cmp	w0, #0x0
  403944:	b.eq	403950 <__fxstatat@plt+0xdf0>  // b.none
  403948:	ldr	x0, [sp, #56]
  40394c:	bl	4028f0 <free@plt>
  403950:	ldrb	w0, [sp, #47]
  403954:	ldp	x29, x30, [sp], #64
  403958:	ret
  40395c:	stp	x29, x30, [sp, #-32]!
  403960:	mov	x29, sp
  403964:	str	x0, [sp, #24]
  403968:	ldr	x0, [sp, #24]
  40396c:	ldr	x0, [x0]
  403970:	bl	4028f0 <free@plt>
  403974:	ldr	x0, [sp, #24]
  403978:	ldr	x0, [x0, #8]
  40397c:	bl	4028f0 <free@plt>
  403980:	ldr	x0, [sp, #24]
  403984:	bl	4028f0 <free@plt>
  403988:	nop
  40398c:	ldp	x29, x30, [sp], #32
  403990:	ret
  403994:	stp	x29, x30, [sp, #-48]!
  403998:	mov	x29, sp
  40399c:	str	w0, [sp, #28]
  4039a0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4039a4:	add	x1, x0, #0x398
  4039a8:	ldr	w0, [sp, #28]
  4039ac:	lsl	x0, x0, #4
  4039b0:	add	x0, x1, x0
  4039b4:	ldr	x0, [x0]
  4039b8:	str	x0, [sp, #40]
  4039bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4039c0:	add	x1, x0, #0x398
  4039c4:	ldr	w0, [sp, #28]
  4039c8:	lsl	x0, x0, #4
  4039cc:	add	x0, x1, x0
  4039d0:	ldr	x0, [x0, #8]
  4039d4:	str	x0, [sp, #32]
  4039d8:	ldr	x0, [sp, #40]
  4039dc:	cmp	x0, #0x0
  4039e0:	b.eq	403a40 <__fxstatat@plt+0xee0>  // b.none
  4039e4:	ldr	x0, [sp, #40]
  4039e8:	cmp	x0, #0x1
  4039ec:	b.ne	403a10 <__fxstatat@plt+0xeb0>  // b.any
  4039f0:	ldr	x0, [sp, #32]
  4039f4:	ldrb	w1, [x0]
  4039f8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  4039fc:	add	x0, x0, #0xd00
  403a00:	ldrb	w0, [x0]
  403a04:	sub	w0, w1, w0
  403a08:	cmp	w0, #0x0
  403a0c:	b.eq	403a40 <__fxstatat@plt+0xee0>  // b.none
  403a10:	ldr	x0, [sp, #40]
  403a14:	cmp	x0, #0x2
  403a18:	b.ne	403a38 <__fxstatat@plt+0xed8>  // b.any
  403a1c:	mov	x2, #0x2                   	// #2
  403a20:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  403a24:	add	x1, x0, #0x7d0
  403a28:	ldr	x0, [sp, #32]
  403a2c:	bl	402710 <strncmp@plt>
  403a30:	cmp	w0, #0x0
  403a34:	b.eq	403a40 <__fxstatat@plt+0xee0>  // b.none
  403a38:	mov	w0, #0x1                   	// #1
  403a3c:	b	403a44 <__fxstatat@plt+0xee4>
  403a40:	mov	w0, #0x0                   	// #0
  403a44:	and	w0, w0, #0x1
  403a48:	and	w0, w0, #0xff
  403a4c:	ldp	x29, x30, [sp], #48
  403a50:	ret
  403a54:	stp	x29, x30, [sp, #-16]!
  403a58:	mov	x29, sp
  403a5c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403a60:	add	x0, x0, #0x398
  403a64:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  403a68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403a6c:	add	x0, x0, #0x3a8
  403a70:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  403a74:	nop
  403a78:	ldp	x29, x30, [sp], #16
  403a7c:	ret
  403a80:	stp	x29, x30, [sp, #-16]!
  403a84:	mov	x29, sp
  403a88:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403a8c:	add	x0, x0, #0x6c4
  403a90:	ldrb	w0, [x0]
  403a94:	cmp	w0, #0x0
  403a98:	b.eq	403ad4 <__fxstatat@plt+0xf74>  // b.none
  403a9c:	mov	w0, #0x4                   	// #4
  403aa0:	bl	403994 <__fxstatat@plt+0xe34>
  403aa4:	and	w0, w0, #0xff
  403aa8:	cmp	w0, #0x0
  403aac:	b.eq	403ad4 <__fxstatat@plt+0xf74>  // b.none
  403ab0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ab4:	add	x0, x0, #0x398
  403ab8:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  403abc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ac0:	add	x0, x0, #0x3d8
  403ac4:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  403ac8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403acc:	add	x0, x0, #0x3a8
  403ad0:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  403ad4:	nop
  403ad8:	ldp	x29, x30, [sp], #16
  403adc:	ret
  403ae0:	sub	sp, sp, #0x10
  403ae4:	str	w0, [sp, #12]
  403ae8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403aec:	add	x0, x0, #0x7b8
  403af0:	ldr	w0, [x0]
  403af4:	cmp	w0, #0x0
  403af8:	b.ne	403b0c <__fxstatat@plt+0xfac>  // b.any
  403afc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b00:	add	x0, x0, #0x7b8
  403b04:	ldr	w1, [sp, #12]
  403b08:	str	w1, [x0]
  403b0c:	nop
  403b10:	add	sp, sp, #0x10
  403b14:	ret
  403b18:	sub	sp, sp, #0x10
  403b1c:	str	w0, [sp, #12]
  403b20:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b24:	add	x0, x0, #0x7b8
  403b28:	ldr	w0, [x0]
  403b2c:	cmp	w0, #0x0
  403b30:	b.ne	403b50 <__fxstatat@plt+0xff0>  // b.any
  403b34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b38:	add	x0, x0, #0x7bc
  403b3c:	ldr	w0, [x0]
  403b40:	add	w1, w0, #0x1
  403b44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b48:	add	x0, x0, #0x7bc
  403b4c:	str	w1, [x0]
  403b50:	nop
  403b54:	add	sp, sp, #0x10
  403b58:	ret
  403b5c:	stp	x29, x30, [sp, #-160]!
  403b60:	mov	x29, sp
  403b64:	b	403c1c <__fxstatat@plt+0x10bc>
  403b68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b6c:	add	x0, x0, #0x6c6
  403b70:	ldrb	w0, [x0]
  403b74:	cmp	w0, #0x0
  403b78:	b.eq	403b80 <__fxstatat@plt+0x1020>  // b.none
  403b7c:	bl	403a54 <__fxstatat@plt+0xef4>
  403b80:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b84:	add	x0, x0, #0x5f8
  403b88:	ldr	x0, [x0]
  403b8c:	bl	402960 <fflush_unlocked@plt>
  403b90:	add	x0, sp, #0x18
  403b94:	mov	x2, x0
  403b98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403b9c:	add	x1, x0, #0x738
  403ba0:	mov	w0, #0x0                   	// #0
  403ba4:	bl	402560 <sigprocmask@plt>
  403ba8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403bac:	add	x0, x0, #0x7b8
  403bb0:	ldr	w0, [x0]
  403bb4:	str	w0, [sp, #156]
  403bb8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403bbc:	add	x0, x0, #0x7bc
  403bc0:	ldr	w0, [x0]
  403bc4:	str	w0, [sp, #152]
  403bc8:	ldr	w0, [sp, #152]
  403bcc:	cmp	w0, #0x0
  403bd0:	b.eq	403bf4 <__fxstatat@plt+0x1094>  // b.none
  403bd4:	ldr	w0, [sp, #152]
  403bd8:	sub	w1, w0, #0x1
  403bdc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403be0:	add	x0, x0, #0x7bc
  403be4:	str	w1, [x0]
  403be8:	mov	w0, #0x13                  	// #19
  403bec:	str	w0, [sp, #156]
  403bf0:	b	403c00 <__fxstatat@plt+0x10a0>
  403bf4:	mov	x1, #0x0                   	// #0
  403bf8:	ldr	w0, [sp, #156]
  403bfc:	bl	402680 <signal@plt>
  403c00:	ldr	w0, [sp, #156]
  403c04:	bl	402540 <raise@plt>
  403c08:	add	x0, sp, #0x18
  403c0c:	mov	x2, #0x0                   	// #0
  403c10:	mov	x1, x0
  403c14:	mov	w0, #0x2                   	// #2
  403c18:	bl	402560 <sigprocmask@plt>
  403c1c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403c20:	add	x0, x0, #0x7b8
  403c24:	ldr	w0, [x0]
  403c28:	cmp	w0, #0x0
  403c2c:	b.ne	403b68 <__fxstatat@plt+0x1008>  // b.any
  403c30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403c34:	add	x0, x0, #0x7bc
  403c38:	ldr	w0, [x0]
  403c3c:	cmp	w0, #0x0
  403c40:	b.ne	403b68 <__fxstatat@plt+0x1008>  // b.any
  403c44:	nop
  403c48:	nop
  403c4c:	ldp	x29, x30, [sp], #160
  403c50:	ret
  403c54:	stp	x29, x30, [sp, #-192]!
  403c58:	mov	x29, sp
  403c5c:	strb	w0, [sp, #31]
  403c60:	ldrb	w0, [sp, #31]
  403c64:	cmp	w0, #0x0
  403c68:	b.eq	403dd0 <__fxstatat@plt+0x1270>  // b.none
  403c6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403c70:	add	x0, x0, #0x738
  403c74:	bl	402700 <sigemptyset@plt>
  403c78:	str	wzr, [sp, #188]
  403c7c:	b	403cd8 <__fxstatat@plt+0x1178>
  403c80:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403c84:	add	x0, x0, #0x110
  403c88:	ldrsw	x1, [sp, #188]
  403c8c:	ldr	w0, [x0, x1, lsl #2]
  403c90:	add	x1, sp, #0x20
  403c94:	mov	x2, x1
  403c98:	mov	x1, #0x0                   	// #0
  403c9c:	bl	4027c0 <sigaction@plt>
  403ca0:	ldr	x0, [sp, #32]
  403ca4:	cmp	x0, #0x1
  403ca8:	b.eq	403ccc <__fxstatat@plt+0x116c>  // b.none
  403cac:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403cb0:	add	x0, x0, #0x110
  403cb4:	ldrsw	x1, [sp, #188]
  403cb8:	ldr	w0, [x0, x1, lsl #2]
  403cbc:	mov	w1, w0
  403cc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403cc4:	add	x0, x0, #0x738
  403cc8:	bl	402a80 <sigaddset@plt>
  403ccc:	ldr	w0, [sp, #188]
  403cd0:	add	w0, w0, #0x1
  403cd4:	str	w0, [sp, #188]
  403cd8:	ldr	w0, [sp, #188]
  403cdc:	cmp	w0, #0xb
  403ce0:	b.le	403c80 <__fxstatat@plt+0x1120>
  403ce4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ce8:	add	x1, x0, #0x738
  403cec:	add	x0, sp, #0x28
  403cf0:	ldp	x2, x3, [x1]
  403cf4:	stp	x2, x3, [x0]
  403cf8:	ldp	x2, x3, [x1, #16]
  403cfc:	stp	x2, x3, [x0, #16]
  403d00:	ldp	x2, x3, [x1, #32]
  403d04:	stp	x2, x3, [x0, #32]
  403d08:	ldp	x2, x3, [x1, #48]
  403d0c:	stp	x2, x3, [x0, #48]
  403d10:	ldp	x2, x3, [x1, #64]
  403d14:	stp	x2, x3, [x0, #64]
  403d18:	ldp	x2, x3, [x1, #80]
  403d1c:	stp	x2, x3, [x0, #80]
  403d20:	ldp	x2, x3, [x1, #96]
  403d24:	stp	x2, x3, [x0, #96]
  403d28:	ldp	x2, x3, [x1, #112]
  403d2c:	stp	x2, x3, [x0, #112]
  403d30:	mov	w0, #0x10000000            	// #268435456
  403d34:	str	w0, [sp, #168]
  403d38:	str	wzr, [sp, #188]
  403d3c:	b	403dc0 <__fxstatat@plt+0x1260>
  403d40:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403d44:	add	x0, x0, #0x110
  403d48:	ldrsw	x1, [sp, #188]
  403d4c:	ldr	w0, [x0, x1, lsl #2]
  403d50:	mov	w1, w0
  403d54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403d58:	add	x0, x0, #0x738
  403d5c:	bl	4028a0 <sigismember@plt>
  403d60:	cmp	w0, #0x0
  403d64:	b.eq	403db4 <__fxstatat@plt+0x1254>  // b.none
  403d68:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403d6c:	add	x0, x0, #0x110
  403d70:	ldrsw	x1, [sp, #188]
  403d74:	ldr	w0, [x0, x1, lsl #2]
  403d78:	cmp	w0, #0x14
  403d7c:	b.ne	403d8c <__fxstatat@plt+0x122c>  // b.any
  403d80:	adrp	x0, 403000 <__fxstatat@plt+0x4a0>
  403d84:	add	x0, x0, #0xb18
  403d88:	b	403d94 <__fxstatat@plt+0x1234>
  403d8c:	adrp	x0, 403000 <__fxstatat@plt+0x4a0>
  403d90:	add	x0, x0, #0xae0
  403d94:	str	x0, [sp, #32]
  403d98:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403d9c:	add	x0, x0, #0x110
  403da0:	ldrsw	x1, [sp, #188]
  403da4:	ldr	w0, [x0, x1, lsl #2]
  403da8:	add	x1, sp, #0x20
  403dac:	mov	x2, #0x0                   	// #0
  403db0:	bl	4027c0 <sigaction@plt>
  403db4:	ldr	w0, [sp, #188]
  403db8:	add	w0, w0, #0x1
  403dbc:	str	w0, [sp, #188]
  403dc0:	ldr	w0, [sp, #188]
  403dc4:	cmp	w0, #0xb
  403dc8:	b.le	403d40 <__fxstatat@plt+0x11e0>
  403dcc:	b	403e30 <__fxstatat@plt+0x12d0>
  403dd0:	str	wzr, [sp, #188]
  403dd4:	b	403e24 <__fxstatat@plt+0x12c4>
  403dd8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403ddc:	add	x0, x0, #0x110
  403de0:	ldrsw	x1, [sp, #188]
  403de4:	ldr	w0, [x0, x1, lsl #2]
  403de8:	mov	w1, w0
  403dec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403df0:	add	x0, x0, #0x738
  403df4:	bl	4028a0 <sigismember@plt>
  403df8:	cmp	w0, #0x0
  403dfc:	b.eq	403e18 <__fxstatat@plt+0x12b8>  // b.none
  403e00:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  403e04:	add	x0, x0, #0x110
  403e08:	ldrsw	x1, [sp, #188]
  403e0c:	ldr	w0, [x0, x1, lsl #2]
  403e10:	mov	x1, #0x0                   	// #0
  403e14:	bl	402680 <signal@plt>
  403e18:	ldr	w0, [sp, #188]
  403e1c:	add	w0, w0, #0x1
  403e20:	str	w0, [sp, #188]
  403e24:	ldr	w0, [sp, #188]
  403e28:	cmp	w0, #0xb
  403e2c:	b.le	403dd8 <__fxstatat@plt+0x1278>
  403e30:	nop
  403e34:	ldp	x29, x30, [sp], #192
  403e38:	ret
  403e3c:	stp	x29, x30, [sp, #-16]!
  403e40:	mov	x29, sp
  403e44:	mov	w0, #0x1                   	// #1
  403e48:	bl	403c54 <__fxstatat@plt+0x10f4>
  403e4c:	nop
  403e50:	ldp	x29, x30, [sp], #16
  403e54:	ret
  403e58:	stp	x29, x30, [sp, #-16]!
  403e5c:	mov	x29, sp
  403e60:	mov	w0, #0x0                   	// #0
  403e64:	bl	403c54 <__fxstatat@plt+0x10f4>
  403e68:	nop
  403e6c:	ldp	x29, x30, [sp], #16
  403e70:	ret
  403e74:	stp	x29, x30, [sp, #-80]!
  403e78:	mov	x29, sp
  403e7c:	str	w0, [sp, #28]
  403e80:	str	x1, [sp, #16]
  403e84:	ldr	x0, [sp, #16]
  403e88:	ldr	x0, [x0]
  403e8c:	bl	416c20 <__fxstatat@plt+0x140c0>
  403e90:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  403e94:	add	x1, x0, #0x948
  403e98:	mov	w0, #0x6                   	// #6
  403e9c:	bl	402b50 <setlocale@plt>
  403ea0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  403ea4:	add	x1, x0, #0x7d8
  403ea8:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  403eac:	add	x0, x0, #0x6a0
  403eb0:	bl	402720 <bindtextdomain@plt>
  403eb4:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  403eb8:	add	x0, x0, #0x6a0
  403ebc:	bl	402870 <textdomain@plt>
  403ec0:	mov	w0, #0x2                   	// #2
  403ec4:	bl	402d38 <__fxstatat@plt+0x1d8>
  403ec8:	adrp	x0, 40f000 <__fxstatat@plt+0xc4a0>
  403ecc:	add	x0, x0, #0x40c
  403ed0:	bl	420600 <_obstack_memory_used@@Base+0x4bb0>
  403ed4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ed8:	add	x0, x0, #0x7c0
  403edc:	str	wzr, [x0]
  403ee0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ee4:	add	x0, x0, #0x718
  403ee8:	mov	w1, #0x1                   	// #1
  403eec:	strb	w1, [x0]
  403ef0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ef4:	add	x0, x0, #0x658
  403ef8:	str	xzr, [x0]
  403efc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f00:	add	x0, x0, #0x660
  403f04:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  403f08:	str	x1, [x0]
  403f0c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f10:	add	x0, x0, #0x660
  403f14:	mov	x1, #0xffffffffffffffff    	// #-1
  403f18:	str	x1, [x0, #8]
  403f1c:	ldr	x1, [sp, #16]
  403f20:	ldr	w0, [sp, #28]
  403f24:	bl	4047f4 <__fxstatat@plt+0x1c94>
  403f28:	str	w0, [sp, #76]
  403f2c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f30:	add	x0, x0, #0x6c4
  403f34:	ldrb	w0, [x0]
  403f38:	cmp	w0, #0x0
  403f3c:	b.eq	403f44 <__fxstatat@plt+0x13e4>  // b.none
  403f40:	bl	406370 <__fxstatat@plt+0x3810>
  403f44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f48:	add	x0, x0, #0x6e2
  403f4c:	ldrb	w0, [x0]
  403f50:	cmp	w0, #0x0
  403f54:	b.eq	403f6c <__fxstatat@plt+0x140c>  // b.none
  403f58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f5c:	add	x0, x0, #0x6d8
  403f60:	mov	w1, #0x1                   	// #1
  403f64:	strb	w1, [x0]
  403f68:	b	403ff4 <__fxstatat@plt+0x1494>
  403f6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403f70:	add	x0, x0, #0x6c4
  403f74:	ldrb	w0, [x0]
  403f78:	cmp	w0, #0x0
  403f7c:	b.eq	403ff4 <__fxstatat@plt+0x1494>  // b.none
  403f80:	mov	w0, #0xd                   	// #13
  403f84:	bl	403994 <__fxstatat@plt+0xe34>
  403f88:	and	w0, w0, #0xff
  403f8c:	cmp	w0, #0x0
  403f90:	b.ne	403fe4 <__fxstatat@plt+0x1484>  // b.any
  403f94:	mov	w0, #0xe                   	// #14
  403f98:	bl	403994 <__fxstatat@plt+0xe34>
  403f9c:	and	w0, w0, #0xff
  403fa0:	cmp	w0, #0x0
  403fa4:	b.eq	403fbc <__fxstatat@plt+0x145c>  // b.none
  403fa8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403fac:	add	x0, x0, #0x648
  403fb0:	ldrb	w0, [x0]
  403fb4:	cmp	w0, #0x0
  403fb8:	b.ne	403fe4 <__fxstatat@plt+0x1484>  // b.any
  403fbc:	mov	w0, #0xc                   	// #12
  403fc0:	bl	403994 <__fxstatat@plt+0xe34>
  403fc4:	and	w0, w0, #0xff
  403fc8:	cmp	w0, #0x0
  403fcc:	b.eq	403ff4 <__fxstatat@plt+0x1494>  // b.none
  403fd0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403fd4:	add	x0, x0, #0x69c
  403fd8:	ldr	w0, [x0]
  403fdc:	cmp	w0, #0x0
  403fe0:	b.ne	403ff4 <__fxstatat@plt+0x1494>  // b.any
  403fe4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403fe8:	add	x0, x0, #0x6d8
  403fec:	mov	w1, #0x1                   	// #1
  403ff0:	strb	w1, [x0]
  403ff4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  403ff8:	add	x0, x0, #0x6dc
  403ffc:	ldr	w0, [x0]
  404000:	cmp	w0, #0x1
  404004:	b.ne	40405c <__fxstatat@plt+0x14fc>  // b.any
  404008:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40400c:	add	x0, x0, #0x6e1
  404010:	ldrb	w0, [x0]
  404014:	cmp	w0, #0x0
  404018:	b.ne	404044 <__fxstatat@plt+0x14e4>  // b.any
  40401c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404020:	add	x0, x0, #0x6c0
  404024:	ldr	w0, [x0]
  404028:	cmp	w0, #0x3
  40402c:	b.eq	404044 <__fxstatat@plt+0x14e4>  // b.none
  404030:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404034:	add	x0, x0, #0x69c
  404038:	ldr	w0, [x0]
  40403c:	cmp	w0, #0x0
  404040:	b.ne	40404c <__fxstatat@plt+0x14ec>  // b.any
  404044:	mov	w0, #0x2                   	// #2
  404048:	b	404050 <__fxstatat@plt+0x14f0>
  40404c:	mov	w0, #0x4                   	// #4
  404050:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404054:	add	x1, x1, #0x6dc
  404058:	str	w0, [x1]
  40405c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404060:	add	x0, x0, #0x6e0
  404064:	ldrb	w0, [x0]
  404068:	cmp	w0, #0x0
  40406c:	b.eq	4040e0 <__fxstatat@plt+0x1580>  // b.none
  404070:	adrp	x0, 403000 <__fxstatat@plt+0x4a0>
  404074:	add	x4, x0, #0x8ac
  404078:	adrp	x0, 403000 <__fxstatat@plt+0x4a0>
  40407c:	add	x3, x0, #0x844
  404080:	adrp	x0, 403000 <__fxstatat@plt+0x4a0>
  404084:	add	x2, x0, #0x80c
  404088:	mov	x1, #0x0                   	// #0
  40408c:	mov	x0, #0x1e                  	// #30
  404090:	bl	411030 <__fxstatat@plt+0xe4d0>
  404094:	mov	x1, x0
  404098:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40409c:	add	x0, x0, #0x610
  4040a0:	str	x1, [x0]
  4040a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4040a8:	add	x0, x0, #0x610
  4040ac:	ldr	x0, [x0]
  4040b0:	cmp	x0, #0x0
  4040b4:	b.ne	4040bc <__fxstatat@plt+0x155c>  // b.any
  4040b8:	bl	41a260 <__fxstatat@plt+0x17700>
  4040bc:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  4040c0:	add	x4, x0, #0x8f0
  4040c4:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  4040c8:	add	x3, x0, #0x6b0
  4040cc:	mov	x2, #0x0                   	// #0
  4040d0:	mov	x1, #0x0                   	// #0
  4040d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4040d8:	add	x0, x0, #0x890
  4040dc:	bl	41b608 <_obstack_begin@@Base>
  4040e0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4040e4:	add	x0, x0, #0x7f0
  4040e8:	bl	402ae0 <getenv@plt>
  4040ec:	bl	41bc84 <_obstack_memory_used@@Base+0x234>
  4040f0:	mov	x1, x0
  4040f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4040f8:	add	x0, x0, #0x728
  4040fc:	str	x1, [x0]
  404100:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404104:	add	x0, x0, #0x6a4
  404108:	ldr	w0, [x0]
  40410c:	cmp	w0, #0x4
  404110:	b.eq	404164 <__fxstatat@plt+0x1604>  // b.none
  404114:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404118:	add	x0, x0, #0x6a4
  40411c:	ldr	w0, [x0]
  404120:	cmp	w0, #0x2
  404124:	b.eq	404164 <__fxstatat@plt+0x1604>  // b.none
  404128:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40412c:	add	x0, x0, #0x69c
  404130:	ldr	w0, [x0]
  404134:	cmp	w0, #0x0
  404138:	b.eq	404164 <__fxstatat@plt+0x1604>  // b.none
  40413c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404140:	add	x0, x0, #0x670
  404144:	ldrb	w0, [x0]
  404148:	cmp	w0, #0x0
  40414c:	b.ne	404164 <__fxstatat@plt+0x1604>  // b.any
  404150:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404154:	add	x0, x0, #0x6ab
  404158:	ldrb	w0, [x0]
  40415c:	cmp	w0, #0x0
  404160:	b.eq	40416c <__fxstatat@plt+0x160c>  // b.none
  404164:	mov	w0, #0x1                   	// #1
  404168:	b	404170 <__fxstatat@plt+0x1610>
  40416c:	mov	w0, #0x0                   	// #0
  404170:	and	w0, w0, #0x1
  404174:	and	w1, w0, #0xff
  404178:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40417c:	add	x0, x0, #0x730
  404180:	strb	w1, [x0]
  404184:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404188:	add	x0, x0, #0x730
  40418c:	ldrb	w0, [x0]
  404190:	eor	w0, w0, #0x1
  404194:	and	w0, w0, #0xff
  404198:	cmp	w0, #0x0
  40419c:	b.eq	4041f8 <__fxstatat@plt+0x1698>  // b.none
  4041a0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4041a4:	add	x0, x0, #0x6e0
  4041a8:	ldrb	w0, [x0]
  4041ac:	cmp	w0, #0x0
  4041b0:	b.ne	4041f0 <__fxstatat@plt+0x1690>  // b.any
  4041b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4041b8:	add	x0, x0, #0x6c4
  4041bc:	ldrb	w0, [x0]
  4041c0:	cmp	w0, #0x0
  4041c4:	b.ne	4041f0 <__fxstatat@plt+0x1690>  // b.any
  4041c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4041cc:	add	x0, x0, #0x6c0
  4041d0:	ldr	w0, [x0]
  4041d4:	cmp	w0, #0x0
  4041d8:	b.ne	4041f0 <__fxstatat@plt+0x1690>  // b.any
  4041dc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4041e0:	add	x0, x0, #0x6e2
  4041e4:	ldrb	w0, [x0]
  4041e8:	cmp	w0, #0x0
  4041ec:	b.eq	4041f8 <__fxstatat@plt+0x1698>  // b.none
  4041f0:	mov	w0, #0x1                   	// #1
  4041f4:	b	4041fc <__fxstatat@plt+0x169c>
  4041f8:	mov	w0, #0x0                   	// #0
  4041fc:	and	w0, w0, #0x1
  404200:	and	w1, w0, #0xff
  404204:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404208:	add	x0, x0, #0x731
  40420c:	strb	w1, [x0]
  404210:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404214:	add	x0, x0, #0x6bc
  404218:	ldrb	w0, [x0]
  40421c:	cmp	w0, #0x0
  404220:	b.eq	40426c <__fxstatat@plt+0x170c>  // b.none
  404224:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  404228:	add	x4, x0, #0x8f0
  40422c:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  404230:	add	x3, x0, #0x6b0
  404234:	mov	x2, #0x0                   	// #0
  404238:	mov	x1, #0x0                   	// #0
  40423c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404240:	add	x0, x0, #0x7e0
  404244:	bl	41b608 <_obstack_begin@@Base>
  404248:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40424c:	add	x4, x0, #0x8f0
  404250:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  404254:	add	x3, x0, #0x6b0
  404258:	mov	x2, #0x0                   	// #0
  40425c:	mov	x1, #0x0                   	// #0
  404260:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404264:	add	x0, x0, #0x838
  404268:	bl	41b608 <_obstack_begin@@Base>
  40426c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404270:	add	x0, x0, #0x6c5
  404274:	ldrb	w0, [x0]
  404278:	cmp	w0, #0x0
  40427c:	b.eq	4042c0 <__fxstatat@plt+0x1760>  // b.none
  404280:	bl	4033f4 <__fxstatat@plt+0x894>
  404284:	bl	41a48c <__fxstatat@plt+0x1792c>
  404288:	mov	x1, x0
  40428c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404290:	add	x0, x0, #0x650
  404294:	str	x1, [x0]
  404298:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40429c:	add	x0, x0, #0x650
  4042a0:	ldr	x0, [x0]
  4042a4:	cmp	x0, #0x0
  4042a8:	b.ne	4042c0 <__fxstatat@plt+0x1760>  // b.any
  4042ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4042b0:	add	x0, x0, #0x650
  4042b4:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x45b0>
  4042b8:	add	x1, x1, #0x948
  4042bc:	str	x1, [x0]
  4042c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4042c4:	add	x0, x0, #0x620
  4042c8:	mov	x1, #0x64                  	// #100
  4042cc:	str	x1, [x0]
  4042d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4042d4:	add	x0, x0, #0x620
  4042d8:	ldr	x0, [x0]
  4042dc:	mov	x1, #0xb8                  	// #184
  4042e0:	bl	419e4c <__fxstatat@plt+0x172ec>
  4042e4:	mov	x1, x0
  4042e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4042ec:	add	x0, x0, #0x618
  4042f0:	str	x1, [x0]
  4042f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4042f8:	add	x0, x0, #0x628
  4042fc:	str	xzr, [x0]
  404300:	bl	407414 <__fxstatat@plt+0x48b4>
  404304:	ldr	w1, [sp, #28]
  404308:	ldr	w0, [sp, #76]
  40430c:	sub	w0, w1, w0
  404310:	str	w0, [sp, #68]
  404314:	ldr	w0, [sp, #68]
  404318:	cmp	w0, #0x0
  40431c:	b.gt	404370 <__fxstatat@plt+0x1810>
  404320:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404324:	add	x0, x0, #0x6e1
  404328:	ldrb	w0, [x0]
  40432c:	cmp	w0, #0x0
  404330:	b.eq	404358 <__fxstatat@plt+0x17f8>  // b.none
  404334:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  404338:	add	x4, x0, #0x948
  40433c:	mov	w3, #0x1                   	// #1
  404340:	mov	x2, #0x0                   	// #0
  404344:	mov	w1, #0x3                   	// #3
  404348:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40434c:	add	x0, x0, #0x7f8
  404350:	bl	4077f8 <__fxstatat@plt+0x4c98>
  404354:	b	4043bc <__fxstatat@plt+0x185c>
  404358:	mov	w2, #0x1                   	// #1
  40435c:	mov	x1, #0x0                   	// #0
  404360:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404364:	add	x0, x0, #0x7f8
  404368:	bl	4069a0 <__fxstatat@plt+0x3e40>
  40436c:	b	4043bc <__fxstatat@plt+0x185c>
  404370:	ldr	w0, [sp, #76]
  404374:	add	w1, w0, #0x1
  404378:	str	w1, [sp, #76]
  40437c:	sxtw	x0, w0
  404380:	lsl	x0, x0, #3
  404384:	ldr	x1, [sp, #16]
  404388:	add	x0, x1, x0
  40438c:	ldr	x5, [x0]
  404390:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  404394:	add	x4, x0, #0x948
  404398:	mov	w3, #0x1                   	// #1
  40439c:	mov	x2, #0x0                   	// #0
  4043a0:	mov	w1, #0x0                   	// #0
  4043a4:	mov	x0, x5
  4043a8:	bl	4077f8 <__fxstatat@plt+0x4c98>
  4043ac:	ldr	w1, [sp, #76]
  4043b0:	ldr	w0, [sp, #28]
  4043b4:	cmp	w1, w0
  4043b8:	b.lt	404370 <__fxstatat@plt+0x1810>  // b.tstop
  4043bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4043c0:	add	x0, x0, #0x628
  4043c4:	ldr	x0, [x0]
  4043c8:	cmp	x0, #0x0
  4043cc:	b.eq	4043fc <__fxstatat@plt+0x189c>  // b.none
  4043d0:	bl	40a294 <__fxstatat@plt+0x7734>
  4043d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4043d8:	add	x0, x0, #0x6e1
  4043dc:	ldrb	w0, [x0]
  4043e0:	eor	w0, w0, #0x1
  4043e4:	and	w0, w0, #0xff
  4043e8:	cmp	w0, #0x0
  4043ec:	b.eq	4043fc <__fxstatat@plt+0x189c>  // b.none
  4043f0:	mov	w1, #0x1                   	// #1
  4043f4:	mov	x0, #0x0                   	// #0
  4043f8:	bl	40885c <__fxstatat@plt+0x5cfc>
  4043fc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404400:	add	x0, x0, #0x628
  404404:	ldr	x0, [x0]
  404408:	cmp	x0, #0x0
  40440c:	b.eq	404450 <__fxstatat@plt+0x18f0>  // b.none
  404410:	bl	40a464 <__fxstatat@plt+0x7904>
  404414:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404418:	add	x0, x0, #0x658
  40441c:	ldr	x0, [x0]
  404420:	cmp	x0, #0x0
  404424:	b.eq	404584 <__fxstatat@plt+0x1a24>  // b.none
  404428:	mov	w0, #0xa                   	// #10
  40442c:	bl	402770 <putchar_unlocked@plt>
  404430:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404434:	add	x0, x0, #0x7d8
  404438:	ldr	x0, [x0]
  40443c:	add	x1, x0, #0x1
  404440:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404444:	add	x0, x0, #0x7d8
  404448:	str	x1, [x0]
  40444c:	b	404584 <__fxstatat@plt+0x1a24>
  404450:	ldr	w0, [sp, #68]
  404454:	cmp	w0, #0x1
  404458:	b.gt	404584 <__fxstatat@plt+0x1a24>
  40445c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404460:	add	x0, x0, #0x658
  404464:	ldr	x0, [x0]
  404468:	cmp	x0, #0x0
  40446c:	b.eq	404584 <__fxstatat@plt+0x1a24>  // b.none
  404470:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404474:	add	x0, x0, #0x658
  404478:	ldr	x0, [x0]
  40447c:	ldr	x0, [x0, #24]
  404480:	cmp	x0, #0x0
  404484:	b.ne	404584 <__fxstatat@plt+0x1a24>  // b.any
  404488:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40448c:	add	x0, x0, #0x718
  404490:	strb	wzr, [x0]
  404494:	b	404584 <__fxstatat@plt+0x1a24>
  404498:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40449c:	add	x0, x0, #0x658
  4044a0:	ldr	x0, [x0]
  4044a4:	str	x0, [sp, #56]
  4044a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4044ac:	add	x0, x0, #0x658
  4044b0:	ldr	x0, [x0]
  4044b4:	ldr	x1, [x0, #24]
  4044b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4044bc:	add	x0, x0, #0x658
  4044c0:	str	x1, [x0]
  4044c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4044c8:	add	x0, x0, #0x610
  4044cc:	ldr	x0, [x0]
  4044d0:	cmp	x0, #0x0
  4044d4:	b.eq	404548 <__fxstatat@plt+0x19e8>  // b.none
  4044d8:	ldr	x0, [sp, #56]
  4044dc:	ldr	x0, [x0]
  4044e0:	cmp	x0, #0x0
  4044e4:	b.ne	404548 <__fxstatat@plt+0x19e8>  // b.any
  4044e8:	bl	403150 <__fxstatat@plt+0x5f0>
  4044ec:	stp	x0, x1, [sp, #32]
  4044f0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4044f4:	add	x0, x0, #0x610
  4044f8:	ldr	x0, [x0]
  4044fc:	add	x1, sp, #0x20
  404500:	bl	411d0c <__fxstatat@plt+0xf1ac>
  404504:	str	x0, [sp, #48]
  404508:	ldr	x0, [sp, #48]
  40450c:	cmp	x0, #0x0
  404510:	b.ne	404534 <__fxstatat@plt+0x19d4>  // b.any
  404514:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  404518:	add	x3, x0, #0x140
  40451c:	mov	w2, #0x640                 	// #1600
  404520:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404524:	add	x1, x0, #0x768
  404528:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40452c:	add	x0, x0, #0x800
  404530:	bl	402ab0 <__assert_fail@plt>
  404534:	ldr	x0, [sp, #48]
  404538:	bl	4038ac <__fxstatat@plt+0xd4c>
  40453c:	ldr	x0, [sp, #56]
  404540:	bl	40395c <__fxstatat@plt+0xdfc>
  404544:	b	404584 <__fxstatat@plt+0x1a24>
  404548:	ldr	x0, [sp, #56]
  40454c:	ldr	x3, [x0]
  404550:	ldr	x0, [sp, #56]
  404554:	ldr	x1, [x0, #8]
  404558:	ldr	x0, [sp, #56]
  40455c:	ldrb	w0, [x0, #16]
  404560:	mov	w2, w0
  404564:	mov	x0, x3
  404568:	bl	406a4c <__fxstatat@plt+0x3eec>
  40456c:	ldr	x0, [sp, #56]
  404570:	bl	40395c <__fxstatat@plt+0xdfc>
  404574:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404578:	add	x0, x0, #0x718
  40457c:	mov	w1, #0x1                   	// #1
  404580:	strb	w1, [x0]
  404584:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404588:	add	x0, x0, #0x658
  40458c:	ldr	x0, [x0]
  404590:	cmp	x0, #0x0
  404594:	b.ne	404498 <__fxstatat@plt+0x1938>  // b.any
  404598:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40459c:	add	x0, x0, #0x6c4
  4045a0:	ldrb	w0, [x0]
  4045a4:	cmp	w0, #0x0
  4045a8:	b.eq	404698 <__fxstatat@plt+0x1b38>  // b.none
  4045ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4045b0:	add	x0, x0, #0x6c6
  4045b4:	ldrb	w0, [x0]
  4045b8:	cmp	w0, #0x0
  4045bc:	b.eq	404698 <__fxstatat@plt+0x1b38>  // b.none
  4045c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4045c4:	add	x0, x0, #0x398
  4045c8:	ldr	x0, [x0]
  4045cc:	cmp	x0, #0x2
  4045d0:	b.ne	404628 <__fxstatat@plt+0x1ac8>  // b.any
  4045d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4045d8:	add	x0, x0, #0x398
  4045dc:	ldr	x3, [x0, #8]
  4045e0:	mov	x2, #0x2                   	// #2
  4045e4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  4045e8:	add	x1, x0, #0xcf0
  4045ec:	mov	x0, x3
  4045f0:	bl	402860 <memcmp@plt>
  4045f4:	cmp	w0, #0x0
  4045f8:	b.ne	404628 <__fxstatat@plt+0x1ac8>  // b.any
  4045fc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404600:	add	x0, x0, #0x398
  404604:	ldr	x0, [x0, #16]
  404608:	cmp	x0, #0x1
  40460c:	b.ne	404628 <__fxstatat@plt+0x1ac8>  // b.any
  404610:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404614:	add	x0, x0, #0x398
  404618:	ldr	x0, [x0, #24]
  40461c:	ldrb	w0, [x0]
  404620:	cmp	w0, #0x6d
  404624:	b.eq	40462c <__fxstatat@plt+0x1acc>  // b.none
  404628:	bl	403a54 <__fxstatat@plt+0xef4>
  40462c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404630:	add	x0, x0, #0x5f8
  404634:	ldr	x0, [x0]
  404638:	bl	402960 <fflush_unlocked@plt>
  40463c:	bl	403e58 <__fxstatat@plt+0x12f8>
  404640:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404644:	add	x0, x0, #0x7bc
  404648:	ldr	w0, [x0]
  40464c:	str	w0, [sp, #72]
  404650:	b	404668 <__fxstatat@plt+0x1b08>
  404654:	mov	w0, #0x13                  	// #19
  404658:	bl	402540 <raise@plt>
  40465c:	ldr	w0, [sp, #72]
  404660:	sub	w0, w0, #0x1
  404664:	str	w0, [sp, #72]
  404668:	ldr	w0, [sp, #72]
  40466c:	cmp	w0, #0x0
  404670:	b.ne	404654 <__fxstatat@plt+0x1af4>  // b.any
  404674:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404678:	add	x0, x0, #0x7b8
  40467c:	ldr	w0, [x0]
  404680:	str	w0, [sp, #72]
  404684:	ldr	w0, [sp, #72]
  404688:	cmp	w0, #0x0
  40468c:	b.eq	404698 <__fxstatat@plt+0x1b38>  // b.none
  404690:	ldr	w0, [sp, #72]
  404694:	bl	402540 <raise@plt>
  404698:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40469c:	add	x0, x0, #0x6bc
  4046a0:	ldrb	w0, [x0]
  4046a4:	cmp	w0, #0x0
  4046a8:	b.eq	404708 <__fxstatat@plt+0x1ba8>  // b.none
  4046ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4046b0:	add	x1, x0, #0x7e0
  4046b4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4046b8:	add	x0, x0, #0x808
  4046bc:	bl	4031fc <__fxstatat@plt+0x69c>
  4046c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4046c4:	add	x1, x0, #0x838
  4046c8:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4046cc:	add	x0, x0, #0x818
  4046d0:	bl	4031fc <__fxstatat@plt+0x69c>
  4046d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4046d8:	add	x0, x0, #0x700
  4046dc:	ldr	x0, [x0]
  4046e0:	bl	416d90 <__fxstatat@plt+0x14230>
  4046e4:	mov	w1, w0
  4046e8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4046ec:	add	x0, x0, #0x6c8
  4046f0:	mov	w1, w1
  4046f4:	ldr	x0, [x0, x1, lsl #3]
  4046f8:	mov	x1, x0
  4046fc:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404700:	add	x0, x0, #0x828
  404704:	bl	402aa0 <printf@plt>
  404708:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40470c:	add	x0, x0, #0x610
  404710:	ldr	x0, [x0]
  404714:	cmp	x0, #0x0
  404718:	b.eq	404764 <__fxstatat@plt+0x1c04>  // b.none
  40471c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404720:	add	x0, x0, #0x610
  404724:	ldr	x0, [x0]
  404728:	bl	410608 <__fxstatat@plt+0xdaa8>
  40472c:	cmp	x0, #0x0
  404730:	b.eq	404754 <__fxstatat@plt+0x1bf4>  // b.none
  404734:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  404738:	add	x3, x0, #0x140
  40473c:	mov	w2, #0x674                 	// #1652
  404740:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404744:	add	x1, x0, #0x768
  404748:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40474c:	add	x0, x0, #0x850
  404750:	bl	402ab0 <__assert_fail@plt>
  404754:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404758:	add	x0, x0, #0x610
  40475c:	ldr	x0, [x0]
  404760:	bl	4112d0 <__fxstatat@plt+0xe770>
  404764:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404768:	add	x0, x0, #0x7c0
  40476c:	ldr	w0, [x0]
  404770:	ldp	x29, x30, [sp], #80
  404774:	ret
  404778:	stp	x29, x30, [sp, #-48]!
  40477c:	mov	x29, sp
  404780:	str	x0, [sp, #24]
  404784:	add	x1, sp, #0x28
  404788:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  40478c:	add	x4, x0, #0x948
  404790:	mov	x3, x1
  404794:	mov	w2, #0x0                   	// #0
  404798:	mov	x1, #0x0                   	// #0
  40479c:	ldr	x0, [sp, #24]
  4047a0:	bl	41adec <__fxstatat@plt+0x1828c>
  4047a4:	cmp	w0, #0x0
  4047a8:	b.eq	4047b8 <__fxstatat@plt+0x1c58>  // b.none
  4047ac:	cmp	w0, #0x1
  4047b0:	b.eq	4047d0 <__fxstatat@plt+0x1c70>  // b.none
  4047b4:	b	4047e8 <__fxstatat@plt+0x1c88>
  4047b8:	ldr	x1, [sp, #40]
  4047bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4047c0:	add	x0, x0, #0x720
  4047c4:	str	x1, [x0]
  4047c8:	mov	w0, #0x1                   	// #1
  4047cc:	b	4047ec <__fxstatat@plt+0x1c8c>
  4047d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4047d4:	add	x0, x0, #0x720
  4047d8:	mov	x1, #0xffffffffffffffff    	// #-1
  4047dc:	str	x1, [x0]
  4047e0:	mov	w0, #0x1                   	// #1
  4047e4:	b	4047ec <__fxstatat@plt+0x1c8c>
  4047e8:	mov	w0, #0x0                   	// #0
  4047ec:	ldp	x29, x30, [sp], #48
  4047f0:	ret
  4047f4:	stp	x29, x30, [sp, #-208]!
  4047f8:	mov	x29, sp
  4047fc:	str	x19, [sp, #16]
  404800:	str	w0, [sp, #44]
  404804:	str	x1, [sp, #32]
  404808:	str	xzr, [sp, #200]
  40480c:	strb	wzr, [sp, #199]
  404810:	strb	wzr, [sp, #198]
  404814:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404818:	add	x0, x0, #0x6f8
  40481c:	strb	wzr, [x0]
  404820:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404824:	add	x0, x0, #0x558
  404828:	ldr	w0, [x0]
  40482c:	cmp	w0, #0x3
  404830:	b.eq	40486c <__fxstatat@plt+0x1d0c>  // b.none
  404834:	cmp	w0, #0x3
  404838:	b.gt	4048e8 <__fxstatat@plt+0x1d88>
  40483c:	cmp	w0, #0x1
  404840:	b.eq	404888 <__fxstatat@plt+0x1d28>  // b.none
  404844:	cmp	w0, #0x2
  404848:	b.ne	4048e8 <__fxstatat@plt+0x1d88>  // b.any
  40484c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404850:	add	x0, x0, #0x69c
  404854:	mov	w1, #0x2                   	// #2
  404858:	str	w1, [x0]
  40485c:	mov	w1, #0x7                   	// #7
  404860:	mov	x0, #0x0                   	// #0
  404864:	bl	416dc0 <__fxstatat@plt+0x14260>
  404868:	b	4048ec <__fxstatat@plt+0x1d8c>
  40486c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404870:	add	x0, x0, #0x69c
  404874:	str	wzr, [x0]
  404878:	mov	w1, #0x7                   	// #7
  40487c:	mov	x0, #0x0                   	// #0
  404880:	bl	416dc0 <__fxstatat@plt+0x14260>
  404884:	b	4048ec <__fxstatat@plt+0x1d8c>
  404888:	mov	w0, #0x1                   	// #1
  40488c:	bl	4029e0 <isatty@plt>
  404890:	cmp	w0, #0x0
  404894:	b.eq	4048c8 <__fxstatat@plt+0x1d68>  // b.none
  404898:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40489c:	add	x0, x0, #0x69c
  4048a0:	mov	w1, #0x2                   	// #2
  4048a4:	str	w1, [x0]
  4048a8:	mov	w1, #0x3                   	// #3
  4048ac:	mov	x0, #0x0                   	// #0
  4048b0:	bl	416dc0 <__fxstatat@plt+0x14260>
  4048b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4048b8:	add	x0, x0, #0x6f8
  4048bc:	mov	w1, #0x1                   	// #1
  4048c0:	strb	w1, [x0]
  4048c4:	b	4048ec <__fxstatat@plt+0x1d8c>
  4048c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4048cc:	add	x0, x0, #0x69c
  4048d0:	mov	w1, #0x1                   	// #1
  4048d4:	str	w1, [x0]
  4048d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4048dc:	add	x0, x0, #0x6f8
  4048e0:	strb	wzr, [x0]
  4048e4:	b	4048ec <__fxstatat@plt+0x1d8c>
  4048e8:	bl	402820 <abort@plt>
  4048ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4048f0:	add	x0, x0, #0x6a0
  4048f4:	str	wzr, [x0]
  4048f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4048fc:	add	x0, x0, #0x6a4
  404900:	str	wzr, [x0]
  404904:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404908:	add	x0, x0, #0x6a8
  40490c:	strb	wzr, [x0]
  404910:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404914:	add	x0, x0, #0x6aa
  404918:	strb	wzr, [x0]
  40491c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404920:	add	x0, x0, #0x6ab
  404924:	strb	wzr, [x0]
  404928:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40492c:	add	x0, x0, #0x6c0
  404930:	str	wzr, [x0]
  404934:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404938:	add	x0, x0, #0x6d9
  40493c:	strb	wzr, [x0]
  404940:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404944:	add	x0, x0, #0x6dc
  404948:	mov	w1, #0x1                   	// #1
  40494c:	str	w1, [x0]
  404950:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404954:	add	x0, x0, #0x6e0
  404958:	strb	wzr, [x0]
  40495c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404960:	add	x0, x0, #0x6e1
  404964:	strb	wzr, [x0]
  404968:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40496c:	add	x0, x0, #0x6e4
  404970:	str	wzr, [x0]
  404974:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404978:	add	x0, x0, #0x6e8
  40497c:	str	xzr, [x0]
  404980:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404984:	add	x0, x0, #0x6f0
  404988:	str	xzr, [x0]
  40498c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404990:	add	x0, x0, #0x670
  404994:	strb	wzr, [x0]
  404998:	bl	406840 <__fxstatat@plt+0x3ce0>
  40499c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4049a0:	add	x0, x0, #0x720
  4049a4:	mov	x1, #0x50                  	// #80
  4049a8:	str	x1, [x0]
  4049ac:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4049b0:	add	x0, x0, #0x880
  4049b4:	bl	402ae0 <getenv@plt>
  4049b8:	str	x0, [sp, #136]
  4049bc:	ldr	x0, [sp, #136]
  4049c0:	cmp	x0, #0x0
  4049c4:	b.eq	404a20 <__fxstatat@plt+0x1ec0>  // b.none
  4049c8:	ldr	x0, [sp, #136]
  4049cc:	ldrb	w0, [x0]
  4049d0:	cmp	w0, #0x0
  4049d4:	b.eq	404a20 <__fxstatat@plt+0x1ec0>  // b.none
  4049d8:	ldr	x0, [sp, #136]
  4049dc:	bl	404778 <__fxstatat@plt+0x1c18>
  4049e0:	and	w0, w0, #0xff
  4049e4:	eor	w0, w0, #0x1
  4049e8:	and	w0, w0, #0xff
  4049ec:	cmp	w0, #0x0
  4049f0:	b.eq	404a20 <__fxstatat@plt+0x1ec0>  // b.none
  4049f4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4049f8:	add	x0, x0, #0x888
  4049fc:	bl	402b20 <gettext@plt>
  404a00:	mov	x19, x0
  404a04:	ldr	x0, [sp, #136]
  404a08:	bl	418f38 <__fxstatat@plt+0x163d8>
  404a0c:	mov	x3, x0
  404a10:	mov	x2, x19
  404a14:	mov	w1, #0x0                   	// #0
  404a18:	mov	w0, #0x0                   	// #0
  404a1c:	bl	402550 <error@plt>
  404a20:	add	x0, sp, #0x40
  404a24:	mov	x2, x0
  404a28:	mov	x1, #0x5413                	// #21523
  404a2c:	mov	w0, #0x1                   	// #1
  404a30:	bl	402b40 <ioctl@plt>
  404a34:	cmn	w0, #0x1
  404a38:	b.eq	404a5c <__fxstatat@plt+0x1efc>  // b.none
  404a3c:	ldrh	w0, [sp, #66]
  404a40:	cmp	w0, #0x0
  404a44:	b.eq	404a5c <__fxstatat@plt+0x1efc>  // b.none
  404a48:	ldrh	w0, [sp, #66]
  404a4c:	and	x1, x0, #0xffff
  404a50:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404a54:	add	x0, x0, #0x720
  404a58:	str	x1, [x0]
  404a5c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404a60:	add	x0, x0, #0x8c8
  404a64:	bl	402ae0 <getenv@plt>
  404a68:	str	x0, [sp, #128]
  404a6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404a70:	add	x0, x0, #0x710
  404a74:	mov	x1, #0x8                   	// #8
  404a78:	str	x1, [x0]
  404a7c:	ldr	x0, [sp, #128]
  404a80:	cmp	x0, #0x0
  404a84:	b.eq	404aec <__fxstatat@plt+0x1f8c>  // b.none
  404a88:	add	x0, sp, #0x38
  404a8c:	mov	x4, #0x0                   	// #0
  404a90:	mov	x3, x0
  404a94:	mov	w2, #0x0                   	// #0
  404a98:	mov	x1, #0x0                   	// #0
  404a9c:	ldr	x0, [sp, #128]
  404aa0:	bl	41a650 <__fxstatat@plt+0x17af0>
  404aa4:	cmp	w0, #0x0
  404aa8:	b.ne	404ac0 <__fxstatat@plt+0x1f60>  // b.any
  404aac:	ldr	x1, [sp, #56]
  404ab0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ab4:	add	x0, x0, #0x710
  404ab8:	str	x1, [x0]
  404abc:	b	404aec <__fxstatat@plt+0x1f8c>
  404ac0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404ac4:	add	x0, x0, #0x8d0
  404ac8:	bl	402b20 <gettext@plt>
  404acc:	mov	x19, x0
  404ad0:	ldr	x0, [sp, #128]
  404ad4:	bl	418f38 <__fxstatat@plt+0x163d8>
  404ad8:	mov	x3, x0
  404adc:	mov	x2, x19
  404ae0:	mov	w1, #0x0                   	// #0
  404ae4:	mov	w0, #0x0                   	// #0
  404ae8:	bl	402550 <error@plt>
  404aec:	mov	w0, #0xffffffff            	// #-1
  404af0:	str	w0, [sp, #52]
  404af4:	add	x0, sp, #0x34
  404af8:	mov	x4, x0
  404afc:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  404b00:	add	x3, x0, #0xfc0
  404b04:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404b08:	add	x2, x0, #0x910
  404b0c:	ldr	x1, [sp, #32]
  404b10:	ldr	w0, [sp, #44]
  404b14:	bl	402890 <getopt_long@plt>
  404b18:	str	w0, [sp, #124]
  404b1c:	ldr	w0, [sp, #124]
  404b20:	cmn	w0, #0x1
  404b24:	b.ne	404b40 <__fxstatat@plt+0x1fe0>  // b.any
  404b28:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404b2c:	add	x0, x0, #0x6b0
  404b30:	ldr	x0, [x0]
  404b34:	cmp	x0, #0x0
  404b38:	b.eq	4055f4 <__fxstatat@plt+0x2a94>  // b.none
  404b3c:	b	405694 <__fxstatat@plt+0x2b34>
  404b40:	ldr	w0, [sp, #124]
  404b44:	add	w0, w0, #0x3
  404b48:	cmp	w0, #0x113
  404b4c:	b.hi	4055d4 <__fxstatat@plt+0x2a74>  // b.pmore
  404b50:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  404b54:	add	x1, x1, #0xb34
  404b58:	ldr	w0, [x1, w0, uxtw #2]
  404b5c:	adr	x1, 404b68 <__fxstatat@plt+0x2008>
  404b60:	add	x0, x1, w0, sxtw #2
  404b64:	br	x0
  404b68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404b6c:	add	x0, x0, #0x6e4
  404b70:	mov	w1, #0x2                   	// #2
  404b74:	str	w1, [x0]
  404b78:	b	4055f0 <__fxstatat@plt+0x2a90>
  404b7c:	mov	w1, #0x7                   	// #7
  404b80:	mov	x0, #0x0                   	// #0
  404b84:	bl	416dc0 <__fxstatat@plt+0x14260>
  404b88:	b	4055f0 <__fxstatat@plt+0x2a90>
  404b8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404b90:	add	x0, x0, #0x6a0
  404b94:	mov	w1, #0x1                   	// #1
  404b98:	str	w1, [x0]
  404b9c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ba0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ba4:	add	x0, x0, #0x6e1
  404ba8:	mov	w1, #0x1                   	// #1
  404bac:	strb	w1, [x0]
  404bb0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404bb4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404bb8:	add	x0, x0, #0x6e4
  404bbc:	mov	w1, #0x2                   	// #2
  404bc0:	str	w1, [x0]
  404bc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404bc8:	add	x0, x0, #0x6a4
  404bcc:	mov	w1, #0xffffffff            	// #-1
  404bd0:	str	w1, [x0]
  404bd4:	mov	w0, #0x1                   	// #1
  404bd8:	strb	w0, [sp, #199]
  404bdc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404be0:	add	x0, x0, #0x69c
  404be4:	ldr	w0, [x0]
  404be8:	cmp	w0, #0x0
  404bec:	b.ne	404c18 <__fxstatat@plt+0x20b8>  // b.any
  404bf0:	mov	w0, #0x1                   	// #1
  404bf4:	bl	4029e0 <isatty@plt>
  404bf8:	cmp	w0, #0x0
  404bfc:	b.eq	404c08 <__fxstatat@plt+0x20a8>  // b.none
  404c00:	mov	w0, #0x2                   	// #2
  404c04:	b	404c0c <__fxstatat@plt+0x20ac>
  404c08:	mov	w0, #0x1                   	// #1
  404c0c:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c10:	add	x1, x1, #0x69c
  404c14:	str	w0, [x1]
  404c18:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c1c:	add	x0, x0, #0x6ab
  404c20:	strb	wzr, [x0]
  404c24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c28:	add	x0, x0, #0x6c4
  404c2c:	strb	wzr, [x0]
  404c30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c34:	add	x0, x0, #0x6c5
  404c38:	strb	wzr, [x0]
  404c3c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404c40:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c44:	add	x0, x0, #0x6c0
  404c48:	mov	w1, #0x2                   	// #2
  404c4c:	str	w1, [x0]
  404c50:	b	4055f0 <__fxstatat@plt+0x2a90>
  404c54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c58:	add	x0, x0, #0x69c
  404c5c:	str	wzr, [x0]
  404c60:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c64:	add	x0, x0, #0x38a
  404c68:	strb	wzr, [x0]
  404c6c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404c70:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c74:	add	x0, x0, #0x6ac
  404c78:	mov	w1, #0xb0                  	// #176
  404c7c:	str	w1, [x0]
  404c80:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c84:	add	x0, x0, #0x6ac
  404c88:	ldr	w1, [x0]
  404c8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c90:	add	x0, x0, #0x6b8
  404c94:	str	w1, [x0]
  404c98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404c9c:	add	x0, x0, #0x6b0
  404ca0:	mov	x1, #0x1                   	// #1
  404ca4:	str	x1, [x0]
  404ca8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404cac:	add	x0, x0, #0x6b0
  404cb0:	ldr	x1, [x0]
  404cb4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404cb8:	add	x0, x0, #0x390
  404cbc:	str	x1, [x0]
  404cc0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404cc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404cc8:	add	x0, x0, #0x6d9
  404ccc:	mov	w1, #0x1                   	// #1
  404cd0:	strb	w1, [x0]
  404cd4:	b	4055f0 <__fxstatat@plt+0x2a90>
  404cd8:	mov	w0, #0x1                   	// #1
  404cdc:	strb	w0, [sp, #198]
  404ce0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ce4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ce8:	add	x0, x0, #0x69c
  404cec:	str	wzr, [x0]
  404cf0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404cf4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404cf8:	add	x0, x0, #0x69c
  404cfc:	mov	w1, #0x4                   	// #4
  404d00:	str	w1, [x0]
  404d04:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d08:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d0c:	add	x0, x0, #0x6aa
  404d10:	mov	w1, #0x1                   	// #1
  404d14:	strb	w1, [x0]
  404d18:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d1c:	add	x0, x0, #0x69c
  404d20:	str	wzr, [x0]
  404d24:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d28:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d2c:	add	x0, x0, #0x69c
  404d30:	str	wzr, [x0]
  404d34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d38:	add	x0, x0, #0x38b
  404d3c:	strb	wzr, [x0]
  404d40:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d48:	add	x0, x0, #0x6c0
  404d4c:	mov	w1, #0x1                   	// #1
  404d50:	str	w1, [x0]
  404d54:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d5c:	add	x0, x0, #0x6f8
  404d60:	mov	w1, #0x1                   	// #1
  404d64:	strb	w1, [x0]
  404d68:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d70:	add	x0, x0, #0x6a8
  404d74:	mov	w1, #0x1                   	// #1
  404d78:	strb	w1, [x0]
  404d7c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d80:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d84:	add	x0, x0, #0x6ab
  404d88:	mov	w1, #0x1                   	// #1
  404d8c:	strb	w1, [x0]
  404d90:	b	4055f0 <__fxstatat@plt+0x2a90>
  404d94:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404d98:	add	x0, x0, #0x6a4
  404d9c:	mov	w1, #0x4                   	// #4
  404da0:	str	w1, [x0]
  404da4:	mov	w0, #0x1                   	// #1
  404da8:	strb	w0, [sp, #199]
  404dac:	b	4055f0 <__fxstatat@plt+0x2a90>
  404db0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404db4:	add	x0, x0, #0x6a0
  404db8:	mov	w1, #0x2                   	// #2
  404dbc:	str	w1, [x0]
  404dc0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404dc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404dc8:	add	x0, x0, #0x6a4
  404dcc:	mov	w1, #0x3                   	// #3
  404dd0:	str	w1, [x0]
  404dd4:	mov	w0, #0x1                   	// #1
  404dd8:	strb	w0, [sp, #199]
  404ddc:	b	4055f0 <__fxstatat@plt+0x2a90>
  404de0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404de4:	add	x0, x0, #0x5e8
  404de8:	ldr	x0, [x0]
  404dec:	bl	404778 <__fxstatat@plt+0x1c18>
  404df0:	and	w0, w0, #0xff
  404df4:	eor	w0, w0, #0x1
  404df8:	and	w0, w0, #0xff
  404dfc:	cmp	w0, #0x0
  404e00:	b.eq	4055dc <__fxstatat@plt+0x2a7c>  // b.none
  404e04:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404e08:	add	x0, x0, #0x940
  404e0c:	bl	402b20 <gettext@plt>
  404e10:	mov	x19, x0
  404e14:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404e18:	add	x0, x0, #0x5e8
  404e1c:	ldr	x0, [x0]
  404e20:	bl	418f38 <__fxstatat@plt+0x163d8>
  404e24:	mov	x4, x0
  404e28:	mov	x3, x19
  404e2c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404e30:	add	x2, x0, #0x958
  404e34:	mov	w1, #0x0                   	// #0
  404e38:	mov	w0, #0x2                   	// #2
  404e3c:	bl	402550 <error@plt>
  404e40:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404e44:	add	x0, x0, #0x69c
  404e48:	mov	w1, #0x3                   	// #3
  404e4c:	str	w1, [x0]
  404e50:	b	4055f0 <__fxstatat@plt+0x2a90>
  404e54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404e58:	add	x0, x0, #0x6e4
  404e5c:	mov	w1, #0x1                   	// #1
  404e60:	str	w1, [x0]
  404e64:	b	4055f0 <__fxstatat@plt+0x2a90>
  404e68:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404e6c:	add	x0, x0, #0x960
  404e70:	bl	407160 <__fxstatat@plt+0x4600>
  404e74:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404e78:	add	x0, x0, #0x968
  404e7c:	bl	407160 <__fxstatat@plt+0x4600>
  404e80:	b	4055f0 <__fxstatat@plt+0x2a90>
  404e84:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404e88:	add	x0, x0, #0x69c
  404e8c:	mov	w1, #0x2                   	// #2
  404e90:	str	w1, [x0]
  404e94:	b	4055f0 <__fxstatat@plt+0x2a90>
  404e98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404e9c:	add	x0, x0, #0x6bc
  404ea0:	mov	w1, #0x1                   	// #1
  404ea4:	strb	w1, [x0]
  404ea8:	b	4055f0 <__fxstatat@plt+0x2a90>
  404eac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404eb0:	add	x0, x0, #0x6c0
  404eb4:	mov	w1, #0x3                   	// #3
  404eb8:	str	w1, [x0]
  404ebc:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ec0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ec4:	add	x0, x0, #0x38b
  404ec8:	strb	wzr, [x0]
  404ecc:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ed0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ed4:	add	x0, x0, #0x6dc
  404ed8:	mov	w1, #0x3                   	// #3
  404edc:	str	w1, [x0]
  404ee0:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ee4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ee8:	add	x0, x0, #0x6dc
  404eec:	mov	w1, #0x4                   	// #4
  404ef0:	str	w1, [x0]
  404ef4:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ef8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404efc:	add	x0, x0, #0x5e8
  404f00:	ldr	x0, [x0]
  404f04:	bl	407160 <__fxstatat@plt+0x4600>
  404f08:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f0c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404f10:	add	x0, x0, #0x6dc
  404f14:	mov	w1, #0x5                   	// #5
  404f18:	str	w1, [x0]
  404f1c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f20:	mov	w1, #0x0                   	// #0
  404f24:	mov	x0, #0x0                   	// #0
  404f28:	bl	416dc0 <__fxstatat@plt+0x14260>
  404f2c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f30:	mov	w1, #0x5                   	// #5
  404f34:	mov	x0, #0x0                   	// #0
  404f38:	bl	416dc0 <__fxstatat@plt+0x14260>
  404f3c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f40:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404f44:	add	x0, x0, #0x6e0
  404f48:	mov	w1, #0x1                   	// #1
  404f4c:	strb	w1, [x0]
  404f50:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404f58:	add	x0, x0, #0x6a4
  404f5c:	mov	w1, #0x2                   	// #2
  404f60:	str	w1, [x0]
  404f64:	mov	w0, #0x1                   	// #1
  404f68:	strb	w0, [sp, #199]
  404f6c:	b	4055f0 <__fxstatat@plt+0x2a90>
  404f70:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404f74:	add	x0, x0, #0x5e8
  404f78:	ldr	x19, [x0]
  404f7c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  404f80:	add	x0, x0, #0x970
  404f84:	bl	402b20 <gettext@plt>
  404f88:	mov	w6, #0x2                   	// #2
  404f8c:	mov	x5, x0
  404f90:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  404f94:	add	x4, x0, #0x948
  404f98:	mov	x3, #0xffffffffffffffff    	// #-1
  404f9c:	mov	x2, #0x0                   	// #0
  404fa0:	mov	w1, #0x0                   	// #0
  404fa4:	mov	x0, x19
  404fa8:	bl	41a2a0 <__fxstatat@plt+0x17740>
  404fac:	mov	x1, x0
  404fb0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404fb4:	add	x0, x0, #0x710
  404fb8:	str	x1, [x0]
  404fbc:	b	4055f0 <__fxstatat@plt+0x2a90>
  404fc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404fc4:	add	x0, x0, #0x6a4
  404fc8:	mov	w1, #0xffffffff            	// #-1
  404fcc:	str	w1, [x0]
  404fd0:	mov	w0, #0x1                   	// #1
  404fd4:	strb	w0, [sp, #199]
  404fd8:	b	4055f0 <__fxstatat@plt+0x2a90>
  404fdc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404fe0:	add	x0, x0, #0x6a4
  404fe4:	mov	w1, #0x1                   	// #1
  404fe8:	str	w1, [x0]
  404fec:	mov	w0, #0x1                   	// #1
  404ff0:	strb	w0, [sp, #199]
  404ff4:	b	4055f0 <__fxstatat@plt+0x2a90>
  404ff8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  404ffc:	add	x0, x0, #0x69c
  405000:	ldr	w0, [x0]
  405004:	cmp	w0, #0x0
  405008:	b.eq	4055e4 <__fxstatat@plt+0x2a84>  // b.none
  40500c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405010:	add	x0, x0, #0x69c
  405014:	mov	w1, #0x1                   	// #1
  405018:	str	w1, [x0]
  40501c:	b	4055e4 <__fxstatat@plt+0x2a84>
  405020:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405024:	add	x0, x0, #0x6a9
  405028:	mov	w1, #0x1                   	// #1
  40502c:	strb	w1, [x0]
  405030:	b	4055f0 <__fxstatat@plt+0x2a90>
  405034:	mov	x0, #0x10                  	// #16
  405038:	bl	41a080 <__fxstatat@plt+0x17520>
  40503c:	str	x0, [sp, #112]
  405040:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405044:	add	x0, x0, #0x5e8
  405048:	ldr	x1, [x0]
  40504c:	ldr	x0, [sp, #112]
  405050:	str	x1, [x0]
  405054:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405058:	add	x0, x0, #0x6f0
  40505c:	ldr	x1, [x0]
  405060:	ldr	x0, [sp, #112]
  405064:	str	x1, [x0, #8]
  405068:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40506c:	add	x0, x0, #0x6f0
  405070:	ldr	x1, [sp, #112]
  405074:	str	x1, [x0]
  405078:	b	4055f0 <__fxstatat@plt+0x2a90>
  40507c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405080:	add	x0, x0, #0x5e8
  405084:	ldr	x1, [x0]
  405088:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40508c:	add	x0, x0, #0x568
  405090:	ldr	x0, [x0]
  405094:	mov	x5, x0
  405098:	mov	x4, #0x4                   	// #4
  40509c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4050a0:	add	x3, x0, #0x630
  4050a4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4050a8:	add	x2, x0, #0x600
  4050ac:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4050b0:	add	x0, x0, #0x988
  4050b4:	bl	40e514 <__fxstatat@plt+0xb9b4>
  4050b8:	mov	x1, x0
  4050bc:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4050c0:	add	x0, x0, #0x630
  4050c4:	ldr	w1, [x0, x1, lsl #2]
  4050c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4050cc:	add	x0, x0, #0x6a4
  4050d0:	str	w1, [x0]
  4050d4:	mov	w0, #0x1                   	// #1
  4050d8:	strb	w0, [sp, #199]
  4050dc:	b	4055f0 <__fxstatat@plt+0x2a90>
  4050e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4050e4:	add	x0, x0, #0x6e2
  4050e8:	mov	w1, #0x1                   	// #1
  4050ec:	strb	w1, [x0]
  4050f0:	b	4055f0 <__fxstatat@plt+0x2a90>
  4050f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4050f8:	add	x0, x0, #0x5e8
  4050fc:	ldr	x1, [x0]
  405100:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405104:	add	x0, x0, #0x568
  405108:	ldr	x0, [x0]
  40510c:	mov	x5, x0
  405110:	mov	x4, #0x4                   	// #4
  405114:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405118:	add	x3, x0, #0x6a0
  40511c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405120:	add	x2, x0, #0x670
  405124:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405128:	add	x0, x0, #0x990
  40512c:	bl	40e514 <__fxstatat@plt+0xb9b4>
  405130:	mov	x1, x0
  405134:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405138:	add	x0, x0, #0x6a0
  40513c:	ldr	w1, [x0, x1, lsl #2]
  405140:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405144:	add	x0, x0, #0x6a0
  405148:	str	w1, [x0]
  40514c:	b	4055f0 <__fxstatat@plt+0x2a90>
  405150:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405154:	add	x0, x0, #0x5e8
  405158:	ldr	x1, [x0]
  40515c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405160:	add	x0, x0, #0x568
  405164:	ldr	x0, [x0]
  405168:	mov	x5, x0
  40516c:	mov	x4, #0x4                   	// #4
  405170:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405174:	add	x3, x0, #0x5d0
  405178:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40517c:	add	x2, x0, #0x590
  405180:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405184:	add	x0, x0, #0x998
  405188:	bl	40e514 <__fxstatat@plt+0xb9b4>
  40518c:	mov	x1, x0
  405190:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405194:	add	x0, x0, #0x5d0
  405198:	ldr	w1, [x0, x1, lsl #2]
  40519c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4051a0:	add	x0, x0, #0x69c
  4051a4:	str	w1, [x0]
  4051a8:	b	4055f0 <__fxstatat@plt+0x2a90>
  4051ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4051b0:	add	x0, x0, #0x69c
  4051b4:	str	wzr, [x0]
  4051b8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  4051bc:	add	x0, x0, #0xa98
  4051c0:	bl	403050 <__fxstatat@plt+0x4f0>
  4051c4:	str	x0, [sp, #200]
  4051c8:	b	4055f0 <__fxstatat@plt+0x2a90>
  4051cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4051d0:	add	x0, x0, #0x5e8
  4051d4:	ldr	x0, [x0]
  4051d8:	cmp	x0, #0x0
  4051dc:	b.eq	405234 <__fxstatat@plt+0x26d4>  // b.none
  4051e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4051e4:	add	x0, x0, #0x5e8
  4051e8:	ldr	x1, [x0]
  4051ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4051f0:	add	x0, x0, #0x568
  4051f4:	ldr	x0, [x0]
  4051f8:	mov	x5, x0
  4051fc:	mov	x4, #0x4                   	// #4
  405200:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405204:	add	x3, x0, #0x740
  405208:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40520c:	add	x2, x0, #0x6f0
  405210:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405214:	add	x0, x0, #0x9a8
  405218:	bl	40e514 <__fxstatat@plt+0xb9b4>
  40521c:	mov	x1, x0
  405220:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405224:	add	x0, x0, #0x740
  405228:	ldr	w0, [x0, x1, lsl #2]
  40522c:	str	w0, [sp, #192]
  405230:	b	40523c <__fxstatat@plt+0x26dc>
  405234:	mov	w0, #0x1                   	// #1
  405238:	str	w0, [sp, #192]
  40523c:	ldr	w0, [sp, #192]
  405240:	cmp	w0, #0x1
  405244:	b.eq	405264 <__fxstatat@plt+0x2704>  // b.none
  405248:	ldr	w0, [sp, #192]
  40524c:	cmp	w0, #0x2
  405250:	b.ne	40526c <__fxstatat@plt+0x270c>  // b.any
  405254:	mov	w0, #0x1                   	// #1
  405258:	bl	4029e0 <isatty@plt>
  40525c:	cmp	w0, #0x0
  405260:	b.eq	40526c <__fxstatat@plt+0x270c>  // b.none
  405264:	mov	w0, #0x1                   	// #1
  405268:	b	405270 <__fxstatat@plt+0x2710>
  40526c:	mov	w0, #0x0                   	// #0
  405270:	and	w0, w0, #0x1
  405274:	and	w1, w0, #0xff
  405278:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40527c:	add	x0, x0, #0x6c4
  405280:	strb	w1, [x0]
  405284:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405288:	add	x0, x0, #0x6c4
  40528c:	ldrb	w0, [x0]
  405290:	cmp	w0, #0x0
  405294:	b.eq	4055ec <__fxstatat@plt+0x2a8c>  // b.none
  405298:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40529c:	add	x0, x0, #0x710
  4052a0:	str	xzr, [x0]
  4052a4:	b	4055ec <__fxstatat@plt+0x2a8c>
  4052a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4052ac:	add	x0, x0, #0x5e8
  4052b0:	ldr	x0, [x0]
  4052b4:	cmp	x0, #0x0
  4052b8:	b.eq	405310 <__fxstatat@plt+0x27b0>  // b.none
  4052bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4052c0:	add	x0, x0, #0x5e8
  4052c4:	ldr	x1, [x0]
  4052c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4052cc:	add	x0, x0, #0x568
  4052d0:	ldr	x0, [x0]
  4052d4:	mov	x5, x0
  4052d8:	mov	x4, #0x4                   	// #4
  4052dc:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4052e0:	add	x3, x0, #0x740
  4052e4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4052e8:	add	x2, x0, #0x6f0
  4052ec:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4052f0:	add	x0, x0, #0x9b0
  4052f4:	bl	40e514 <__fxstatat@plt+0xb9b4>
  4052f8:	mov	x1, x0
  4052fc:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405300:	add	x0, x0, #0x740
  405304:	ldr	w0, [x0, x1, lsl #2]
  405308:	str	w0, [sp, #188]
  40530c:	b	405318 <__fxstatat@plt+0x27b8>
  405310:	mov	w0, #0x1                   	// #1
  405314:	str	w0, [sp, #188]
  405318:	ldr	w0, [sp, #188]
  40531c:	cmp	w0, #0x1
  405320:	b.eq	405340 <__fxstatat@plt+0x27e0>  // b.none
  405324:	ldr	w0, [sp, #188]
  405328:	cmp	w0, #0x2
  40532c:	b.ne	405348 <__fxstatat@plt+0x27e8>  // b.any
  405330:	mov	w0, #0x1                   	// #1
  405334:	bl	4029e0 <isatty@plt>
  405338:	cmp	w0, #0x0
  40533c:	b.eq	405348 <__fxstatat@plt+0x27e8>  // b.none
  405340:	mov	w0, #0x1                   	// #1
  405344:	b	40534c <__fxstatat@plt+0x27ec>
  405348:	mov	w0, #0x0                   	// #0
  40534c:	and	w0, w0, #0x1
  405350:	and	w1, w0, #0xff
  405354:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405358:	add	x0, x0, #0x6c5
  40535c:	strb	w1, [x0]
  405360:	b	4055f0 <__fxstatat@plt+0x2a90>
  405364:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405368:	add	x0, x0, #0x5e8
  40536c:	ldr	x1, [x0]
  405370:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405374:	add	x0, x0, #0x568
  405378:	ldr	x0, [x0]
  40537c:	mov	x5, x0
  405380:	mov	x4, #0x4                   	// #4
  405384:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  405388:	add	x3, x0, #0xb58
  40538c:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  405390:	add	x2, x0, #0xb30
  405394:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405398:	add	x0, x0, #0x9c0
  40539c:	bl	40e514 <__fxstatat@plt+0xb9b4>
  4053a0:	mov	x1, x0
  4053a4:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  4053a8:	add	x0, x0, #0xb58
  4053ac:	ldr	w1, [x0, x1, lsl #2]
  4053b0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4053b4:	add	x0, x0, #0x6c0
  4053b8:	str	w1, [x0]
  4053bc:	b	4055f0 <__fxstatat@plt+0x2a90>
  4053c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4053c4:	add	x0, x0, #0x5e8
  4053c8:	ldr	x1, [x0]
  4053cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4053d0:	add	x0, x0, #0x568
  4053d4:	ldr	x0, [x0]
  4053d8:	mov	x5, x0
  4053dc:	mov	x4, #0x4                   	// #4
  4053e0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4053e4:	add	x3, x0, #0x720
  4053e8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4053ec:	add	x2, x0, #0x6c8
  4053f0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4053f4:	add	x0, x0, #0x9d8
  4053f8:	bl	40e514 <__fxstatat@plt+0xb9b4>
  4053fc:	mov	x1, x0
  405400:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  405404:	add	x0, x0, #0x720
  405408:	ldr	w0, [x0, x1, lsl #2]
  40540c:	mov	w1, w0
  405410:	mov	x0, #0x0                   	// #0
  405414:	bl	416dc0 <__fxstatat@plt+0x14260>
  405418:	b	4055f0 <__fxstatat@plt+0x2a90>
  40541c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405420:	add	x0, x0, #0x5e8
  405424:	ldr	x0, [x0]
  405428:	str	x0, [sp, #200]
  40542c:	b	4055f0 <__fxstatat@plt+0x2a90>
  405430:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405434:	add	x0, x0, #0x6f8
  405438:	strb	wzr, [x0]
  40543c:	b	4055f0 <__fxstatat@plt+0x2a90>
  405440:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405444:	add	x0, x0, #0x5e8
  405448:	ldr	x3, [x0]
  40544c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405450:	add	x2, x0, #0x6b0
  405454:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405458:	add	x1, x0, #0x6ac
  40545c:	mov	x0, x3
  405460:	bl	412e70 <__fxstatat@plt+0x10310>
  405464:	str	w0, [sp, #108]
  405468:	ldr	w0, [sp, #108]
  40546c:	cmp	w0, #0x0
  405470:	b.eq	40549c <__fxstatat@plt+0x293c>  // b.none
  405474:	ldr	w1, [sp, #52]
  405478:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40547c:	add	x0, x0, #0x5e8
  405480:	ldr	x0, [x0]
  405484:	mov	x4, x0
  405488:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  40548c:	add	x3, x0, #0xfc0
  405490:	mov	w2, #0x0                   	// #0
  405494:	ldr	w0, [sp, #108]
  405498:	bl	41acdc <__fxstatat@plt+0x1817c>
  40549c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054a0:	add	x0, x0, #0x6ac
  4054a4:	ldr	w1, [x0]
  4054a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054ac:	add	x0, x0, #0x6b8
  4054b0:	str	w1, [x0]
  4054b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054b8:	add	x0, x0, #0x6b0
  4054bc:	ldr	x1, [x0]
  4054c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054c4:	add	x0, x0, #0x390
  4054c8:	str	x1, [x0]
  4054cc:	b	4055f0 <__fxstatat@plt+0x2a90>
  4054d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054d4:	add	x0, x0, #0x6ac
  4054d8:	mov	w1, #0x90                  	// #144
  4054dc:	str	w1, [x0]
  4054e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054e4:	add	x0, x0, #0x6ac
  4054e8:	ldr	w1, [x0]
  4054ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054f0:	add	x0, x0, #0x6b8
  4054f4:	str	w1, [x0]
  4054f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4054fc:	add	x0, x0, #0x6b0
  405500:	mov	x1, #0x1                   	// #1
  405504:	str	x1, [x0]
  405508:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40550c:	add	x0, x0, #0x6b0
  405510:	ldr	x1, [x0]
  405514:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405518:	add	x0, x0, #0x390
  40551c:	str	x1, [x0]
  405520:	b	4055f0 <__fxstatat@plt+0x2a90>
  405524:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405528:	add	x0, x0, #0x670
  40552c:	mov	w1, #0x1                   	// #1
  405530:	strb	w1, [x0]
  405534:	b	4055f0 <__fxstatat@plt+0x2a90>
  405538:	mov	w0, #0x0                   	// #0
  40553c:	bl	40db1c <__fxstatat@plt+0xafbc>
  405540:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405544:	add	x0, x0, #0x5f8
  405548:	ldr	x7, [x0]
  40554c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405550:	add	x0, x0, #0x558
  405554:	ldr	w0, [x0]
  405558:	cmp	w0, #0x1
  40555c:	b.eq	40558c <__fxstatat@plt+0x2a2c>  // b.none
  405560:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405564:	add	x0, x0, #0x558
  405568:	ldr	w0, [x0]
  40556c:	cmp	w0, #0x2
  405570:	b.ne	405580 <__fxstatat@plt+0x2a20>  // b.any
  405574:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405578:	add	x0, x0, #0x9e8
  40557c:	b	405594 <__fxstatat@plt+0x2a34>
  405580:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405584:	add	x0, x0, #0x9f0
  405588:	b	405594 <__fxstatat@plt+0x2a34>
  40558c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405590:	add	x0, x0, #0x9f8
  405594:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405598:	add	x1, x1, #0x560
  40559c:	ldr	x2, [x1]
  4055a0:	mov	x6, #0x0                   	// #0
  4055a4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  4055a8:	add	x5, x1, #0xa00
  4055ac:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  4055b0:	add	x4, x1, #0xa10
  4055b4:	mov	x3, x2
  4055b8:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x45b0>
  4055bc:	add	x2, x1, #0x880
  4055c0:	mov	x1, x0
  4055c4:	mov	x0, x7
  4055c8:	bl	419d18 <__fxstatat@plt+0x171b8>
  4055cc:	mov	w0, #0x0                   	// #0
  4055d0:	bl	402520 <exit@plt>
  4055d4:	mov	w0, #0x2                   	// #2
  4055d8:	bl	40db1c <__fxstatat@plt+0xafbc>
  4055dc:	nop
  4055e0:	b	404aec <__fxstatat@plt+0x1f8c>
  4055e4:	nop
  4055e8:	b	404aec <__fxstatat@plt+0x1f8c>
  4055ec:	nop
  4055f0:	b	404aec <__fxstatat@plt+0x1f8c>
  4055f4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4055f8:	add	x0, x0, #0xa28
  4055fc:	bl	402ae0 <getenv@plt>
  405600:	str	x0, [sp, #96]
  405604:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405608:	add	x2, x0, #0x6b0
  40560c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405610:	add	x1, x0, #0x6ac
  405614:	ldr	x0, [sp, #96]
  405618:	bl	412e70 <__fxstatat@plt+0x10310>
  40561c:	ldr	x0, [sp, #96]
  405620:	cmp	x0, #0x0
  405624:	b.ne	40563c <__fxstatat@plt+0x2adc>  // b.any
  405628:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40562c:	add	x0, x0, #0xa38
  405630:	bl	402ae0 <getenv@plt>
  405634:	cmp	x0, #0x0
  405638:	b.eq	40566c <__fxstatat@plt+0x2b0c>  // b.none
  40563c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405640:	add	x0, x0, #0x6ac
  405644:	ldr	w1, [x0]
  405648:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40564c:	add	x0, x0, #0x6b8
  405650:	str	w1, [x0]
  405654:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405658:	add	x0, x0, #0x6b0
  40565c:	ldr	x1, [x0]
  405660:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405664:	add	x0, x0, #0x390
  405668:	str	x1, [x0]
  40566c:	ldrb	w0, [sp, #198]
  405670:	cmp	w0, #0x0
  405674:	b.eq	405694 <__fxstatat@plt+0x2b34>  // b.none
  405678:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40567c:	add	x0, x0, #0x6ac
  405680:	str	wzr, [x0]
  405684:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405688:	add	x0, x0, #0x6b0
  40568c:	mov	x1, #0x400                 	// #1024
  405690:	str	x1, [x0]
  405694:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405698:	add	x0, x0, #0x720
  40569c:	ldr	x1, [x0]
  4056a0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4056a4:	movk	x0, #0xaaab
  4056a8:	umulh	x0, x1, x0
  4056ac:	lsr	x1, x0, #1
  4056b0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4056b4:	add	x0, x0, #0x7d0
  4056b8:	str	x1, [x0]
  4056bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4056c0:	add	x0, x0, #0x720
  4056c4:	ldr	x2, [x0]
  4056c8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4056cc:	movk	x0, #0xaaab
  4056d0:	umulh	x0, x2, x0
  4056d4:	lsr	x1, x0, #1
  4056d8:	mov	x0, x1
  4056dc:	lsl	x0, x0, #1
  4056e0:	add	x0, x0, x1
  4056e4:	sub	x1, x2, x0
  4056e8:	cmp	x1, #0x0
  4056ec:	cset	w0, ne  // ne = any
  4056f0:	and	w0, w0, #0xff
  4056f4:	and	x1, x0, #0xff
  4056f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4056fc:	add	x0, x0, #0x7d0
  405700:	ldr	x0, [x0]
  405704:	add	x1, x1, x0
  405708:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40570c:	add	x0, x0, #0x7d0
  405710:	str	x1, [x0]
  405714:	mov	x0, #0x0                   	// #0
  405718:	bl	416d90 <__fxstatat@plt+0x14230>
  40571c:	str	w0, [sp, #92]
  405720:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405724:	add	x0, x0, #0x69c
  405728:	ldr	w0, [x0]
  40572c:	cmp	w0, #0x4
  405730:	b.eq	40579c <__fxstatat@plt+0x2c3c>  // b.none
  405734:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405738:	add	x0, x0, #0x69c
  40573c:	ldr	w0, [x0]
  405740:	cmp	w0, #0x1
  405744:	b.eq	40579c <__fxstatat@plt+0x2c3c>  // b.none
  405748:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40574c:	add	x0, x0, #0x720
  405750:	ldr	x0, [x0]
  405754:	cmp	x0, #0x0
  405758:	b.ne	405770 <__fxstatat@plt+0x2c10>  // b.any
  40575c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405760:	add	x0, x0, #0x69c
  405764:	ldr	w0, [x0]
  405768:	cmp	w0, #0x0
  40576c:	b.ne	40579c <__fxstatat@plt+0x2c3c>  // b.any
  405770:	ldr	w0, [sp, #92]
  405774:	cmp	w0, #0x1
  405778:	b.eq	405794 <__fxstatat@plt+0x2c34>  // b.none
  40577c:	ldr	w0, [sp, #92]
  405780:	cmp	w0, #0x3
  405784:	b.eq	405794 <__fxstatat@plt+0x2c34>  // b.none
  405788:	ldr	w0, [sp, #92]
  40578c:	cmp	w0, #0x6
  405790:	b.ne	40579c <__fxstatat@plt+0x2c3c>  // b.any
  405794:	mov	w0, #0x1                   	// #1
  405798:	b	4057a0 <__fxstatat@plt+0x2c40>
  40579c:	mov	w0, #0x0                   	// #0
  4057a0:	and	w0, w0, #0x1
  4057a4:	and	w1, w0, #0xff
  4057a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4057ac:	add	x0, x0, #0x631
  4057b0:	strb	w1, [x0]
  4057b4:	mov	x0, #0x0                   	// #0
  4057b8:	bl	416d34 <__fxstatat@plt+0x141d4>
  4057bc:	mov	x1, x0
  4057c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4057c4:	add	x0, x0, #0x700
  4057c8:	str	x1, [x0]
  4057cc:	ldr	w0, [sp, #92]
  4057d0:	cmp	w0, #0x7
  4057d4:	b.ne	4057f0 <__fxstatat@plt+0x2c90>  // b.any
  4057d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4057dc:	add	x0, x0, #0x700
  4057e0:	ldr	x0, [x0]
  4057e4:	mov	w2, #0x1                   	// #1
  4057e8:	mov	w1, #0x20                  	// #32
  4057ec:	bl	416dfc <__fxstatat@plt+0x1429c>
  4057f0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4057f4:	add	x0, x0, #0x6c0
  4057f8:	ldr	w0, [x0]
  4057fc:	cmp	w0, #0x1
  405800:	b.ls	40586c <__fxstatat@plt+0x2d0c>  // b.plast
  405804:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405808:	add	x0, x0, #0x6c0
  40580c:	ldr	w0, [x0]
  405810:	sub	w0, w0, #0x2
  405814:	mov	w1, w0
  405818:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40581c:	add	x0, x0, #0xa48
  405820:	add	x0, x1, x0
  405824:	str	x0, [sp, #176]
  405828:	b	40585c <__fxstatat@plt+0x2cfc>
  40582c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405830:	add	x0, x0, #0x700
  405834:	ldr	x3, [x0]
  405838:	ldr	x0, [sp, #176]
  40583c:	ldrb	w0, [x0]
  405840:	mov	w2, #0x1                   	// #1
  405844:	mov	w1, w0
  405848:	mov	x0, x3
  40584c:	bl	416dfc <__fxstatat@plt+0x1429c>
  405850:	ldr	x0, [sp, #176]
  405854:	add	x0, x0, #0x1
  405858:	str	x0, [sp, #176]
  40585c:	ldr	x0, [sp, #176]
  405860:	ldrb	w0, [x0]
  405864:	cmp	w0, #0x0
  405868:	b.ne	40582c <__fxstatat@plt+0x2ccc>  // b.any
  40586c:	mov	x0, #0x0                   	// #0
  405870:	bl	416d34 <__fxstatat@plt+0x141d4>
  405874:	mov	x1, x0
  405878:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40587c:	add	x0, x0, #0x708
  405880:	str	x1, [x0]
  405884:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405888:	add	x0, x0, #0x708
  40588c:	ldr	x0, [x0]
  405890:	mov	w2, #0x1                   	// #1
  405894:	mov	w1, #0x3a                  	// #58
  405898:	bl	416dfc <__fxstatat@plt+0x1429c>
  40589c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058a0:	add	x0, x0, #0x6bc
  4058a4:	ldrb	w0, [x0]
  4058a8:	cmp	w0, #0x0
  4058ac:	b.eq	4058e4 <__fxstatat@plt+0x2d84>  // b.none
  4058b0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058b4:	add	x0, x0, #0x69c
  4058b8:	ldr	w0, [x0]
  4058bc:	cmp	w0, #0x0
  4058c0:	b.ne	4058d8 <__fxstatat@plt+0x2d78>  // b.any
  4058c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058c8:	add	x0, x0, #0x6c5
  4058cc:	ldrb	w0, [x0]
  4058d0:	cmp	w0, #0x0
  4058d4:	b.eq	4058e4 <__fxstatat@plt+0x2d84>  // b.none
  4058d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058dc:	add	x0, x0, #0x6bc
  4058e0:	strb	wzr, [x0]
  4058e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058e8:	add	x0, x0, #0x6a0
  4058ec:	ldr	w0, [x0]
  4058f0:	cmp	w0, #0x1
  4058f4:	b.eq	40590c <__fxstatat@plt+0x2dac>  // b.none
  4058f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4058fc:	add	x0, x0, #0x6a0
  405900:	ldr	w0, [x0]
  405904:	cmp	w0, #0x2
  405908:	b.ne	405944 <__fxstatat@plt+0x2de4>  // b.any
  40590c:	ldrb	w0, [sp, #199]
  405910:	eor	w0, w0, #0x1
  405914:	and	w0, w0, #0xff
  405918:	cmp	w0, #0x0
  40591c:	b.eq	405944 <__fxstatat@plt+0x2de4>  // b.none
  405920:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405924:	add	x0, x0, #0x69c
  405928:	ldr	w0, [x0]
  40592c:	cmp	w0, #0x0
  405930:	b.eq	405944 <__fxstatat@plt+0x2de4>  // b.none
  405934:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405938:	add	x0, x0, #0x6a4
  40593c:	mov	w1, #0x4                   	// #4
  405940:	str	w1, [x0]
  405944:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405948:	add	x0, x0, #0x69c
  40594c:	ldr	w0, [x0]
  405950:	cmp	w0, #0x0
  405954:	b.ne	405cd8 <__fxstatat@plt+0x3178>  // b.any
  405958:	ldr	x0, [sp, #200]
  40595c:	str	x0, [sp, #168]
  405960:	ldr	x0, [sp, #168]
  405964:	cmp	x0, #0x0
  405968:	b.ne	4059d4 <__fxstatat@plt+0x2e74>  // b.any
  40596c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405970:	add	x0, x0, #0xa50
  405974:	bl	402ae0 <getenv@plt>
  405978:	str	x0, [sp, #168]
  40597c:	ldr	x0, [sp, #168]
  405980:	cmp	x0, #0x0
  405984:	b.ne	4059d4 <__fxstatat@plt+0x2e74>  // b.any
  405988:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  40598c:	add	x0, x0, #0xac0
  405990:	bl	403050 <__fxstatat@plt+0x4f0>
  405994:	str	x0, [sp, #168]
  405998:	b	4059d4 <__fxstatat@plt+0x2e74>
  40599c:	mov	w0, #0x2                   	// #2
  4059a0:	bl	410568 <__fxstatat@plt+0xda08>
  4059a4:	and	w0, w0, #0xff
  4059a8:	eor	w0, w0, #0x1
  4059ac:	and	w0, w0, #0xff
  4059b0:	cmp	w0, #0x0
  4059b4:	b.eq	4059c8 <__fxstatat@plt+0x2e68>  // b.none
  4059b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4059bc:	add	x0, x0, #0x5f0
  4059c0:	ldr	w0, [x0]
  4059c4:	b	405ce4 <__fxstatat@plt+0x3184>
  4059c8:	ldr	x0, [sp, #168]
  4059cc:	add	x0, x0, #0x6
  4059d0:	str	x0, [sp, #168]
  4059d4:	mov	x2, #0x6                   	// #6
  4059d8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4059dc:	add	x1, x0, #0x148
  4059e0:	ldr	x0, [sp, #168]
  4059e4:	bl	402710 <strncmp@plt>
  4059e8:	cmp	w0, #0x0
  4059ec:	b.eq	40599c <__fxstatat@plt+0x2e3c>  // b.none
  4059f0:	ldr	x0, [sp, #168]
  4059f4:	ldrb	w0, [x0]
  4059f8:	cmp	w0, #0x2b
  4059fc:	b.ne	405aac <__fxstatat@plt+0x2f4c>  // b.any
  405a00:	ldr	x0, [sp, #168]
  405a04:	add	x0, x0, #0x1
  405a08:	str	x0, [sp, #72]
  405a0c:	mov	w1, #0xa                   	// #10
  405a10:	ldr	x0, [sp, #72]
  405a14:	bl	402930 <strchr@plt>
  405a18:	str	x0, [sp, #160]
  405a1c:	ldr	x0, [sp, #160]
  405a20:	cmp	x0, #0x0
  405a24:	b.ne	405a34 <__fxstatat@plt+0x2ed4>  // b.any
  405a28:	ldr	x0, [sp, #72]
  405a2c:	str	x0, [sp, #160]
  405a30:	b	405a88 <__fxstatat@plt+0x2f28>
  405a34:	ldr	x0, [sp, #160]
  405a38:	add	x0, x0, #0x1
  405a3c:	mov	w1, #0xa                   	// #10
  405a40:	bl	402930 <strchr@plt>
  405a44:	cmp	x0, #0x0
  405a48:	b.eq	405a78 <__fxstatat@plt+0x2f18>  // b.none
  405a4c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405a50:	add	x0, x0, #0xa60
  405a54:	bl	402b20 <gettext@plt>
  405a58:	mov	x19, x0
  405a5c:	ldr	x0, [sp, #72]
  405a60:	bl	418f38 <__fxstatat@plt+0x163d8>
  405a64:	mov	x3, x0
  405a68:	mov	x2, x19
  405a6c:	mov	w1, #0x0                   	// #0
  405a70:	mov	w0, #0x2                   	// #2
  405a74:	bl	402550 <error@plt>
  405a78:	ldr	x0, [sp, #160]
  405a7c:	add	x1, x0, #0x1
  405a80:	str	x1, [sp, #160]
  405a84:	strb	wzr, [x0]
  405a88:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405a8c:	add	x0, x0, #0x518
  405a90:	ldr	x1, [sp, #72]
  405a94:	str	x1, [x0]
  405a98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405a9c:	add	x0, x0, #0x518
  405aa0:	ldr	x1, [sp, #160]
  405aa4:	str	x1, [x0, #8]
  405aa8:	b	405cd4 <__fxstatat@plt+0x3174>
  405aac:	mov	x3, #0x4                   	// #4
  405ab0:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  405ab4:	add	x2, x0, #0xaf0
  405ab8:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  405abc:	add	x1, x0, #0xac8
  405ac0:	ldr	x0, [sp, #168]
  405ac4:	bl	40e1e4 <__fxstatat@plt+0xb684>
  405ac8:	str	x0, [sp, #80]
  405acc:	ldr	x0, [sp, #80]
  405ad0:	cmp	x0, #0x0
  405ad4:	b.ge	405b94 <__fxstatat@plt+0x3034>  // b.tcont
  405ad8:	ldr	x2, [sp, #80]
  405adc:	ldr	x1, [sp, #168]
  405ae0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405ae4:	add	x0, x0, #0xa80
  405ae8:	bl	40e328 <__fxstatat@plt+0xb7c8>
  405aec:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405af0:	add	x0, x0, #0xa90
  405af4:	bl	402b20 <gettext@plt>
  405af8:	mov	x2, x0
  405afc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405b00:	add	x0, x0, #0x5e0
  405b04:	ldr	x0, [x0]
  405b08:	mov	x1, x0
  405b0c:	mov	x0, x2
  405b10:	bl	402a40 <fputs_unlocked@plt>
  405b14:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  405b18:	add	x0, x0, #0xac8
  405b1c:	str	x0, [sp, #152]
  405b20:	b	405b54 <__fxstatat@plt+0x2ff4>
  405b24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405b28:	add	x0, x0, #0x5e0
  405b2c:	ldr	x3, [x0]
  405b30:	ldr	x0, [sp, #152]
  405b34:	add	x1, x0, #0x8
  405b38:	str	x1, [sp, #152]
  405b3c:	ldr	x0, [x0]
  405b40:	mov	x2, x0
  405b44:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405b48:	add	x1, x0, #0xaa8
  405b4c:	mov	x0, x3
  405b50:	bl	402b30 <fprintf@plt>
  405b54:	ldr	x0, [sp, #152]
  405b58:	ldr	x0, [x0]
  405b5c:	cmp	x0, #0x0
  405b60:	b.ne	405b24 <__fxstatat@plt+0x2fc4>  // b.any
  405b64:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  405b68:	add	x0, x0, #0xab8
  405b6c:	bl	402b20 <gettext@plt>
  405b70:	mov	x2, x0
  405b74:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405b78:	add	x0, x0, #0x5e0
  405b7c:	ldr	x0, [x0]
  405b80:	mov	x1, x0
  405b84:	mov	x0, x2
  405b88:	bl	402a40 <fputs_unlocked@plt>
  405b8c:	mov	w0, #0x2                   	// #2
  405b90:	bl	40db1c <__fxstatat@plt+0xafbc>
  405b94:	ldr	x0, [sp, #80]
  405b98:	cmp	x0, #0x3
  405b9c:	b.eq	405c6c <__fxstatat@plt+0x310c>  // b.none
  405ba0:	ldr	x0, [sp, #80]
  405ba4:	cmp	x0, #0x3
  405ba8:	b.gt	405cd4 <__fxstatat@plt+0x3174>
  405bac:	ldr	x0, [sp, #80]
  405bb0:	cmp	x0, #0x2
  405bb4:	b.eq	405c40 <__fxstatat@plt+0x30e0>  // b.none
  405bb8:	ldr	x0, [sp, #80]
  405bbc:	cmp	x0, #0x2
  405bc0:	b.gt	405cd4 <__fxstatat@plt+0x3174>
  405bc4:	ldr	x0, [sp, #80]
  405bc8:	cmp	x0, #0x0
  405bcc:	b.eq	405be0 <__fxstatat@plt+0x3080>  // b.none
  405bd0:	ldr	x0, [sp, #80]
  405bd4:	cmp	x0, #0x1
  405bd8:	b.eq	405c10 <__fxstatat@plt+0x30b0>  // b.none
  405bdc:	b	405cd4 <__fxstatat@plt+0x3174>
  405be0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405be4:	add	x0, x0, #0x518
  405be8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  405bec:	add	x1, x1, #0xaf0
  405bf0:	str	x1, [x0, #8]
  405bf4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405bf8:	add	x0, x0, #0x518
  405bfc:	ldr	x1, [x0, #8]
  405c00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c04:	add	x0, x0, #0x518
  405c08:	str	x1, [x0]
  405c0c:	b	405cd4 <__fxstatat@plt+0x3174>
  405c10:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c14:	add	x0, x0, #0x518
  405c18:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  405c1c:	add	x1, x1, #0xb08
  405c20:	str	x1, [x0, #8]
  405c24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c28:	add	x0, x0, #0x518
  405c2c:	ldr	x1, [x0, #8]
  405c30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c34:	add	x0, x0, #0x518
  405c38:	str	x1, [x0]
  405c3c:	b	405cd4 <__fxstatat@plt+0x3174>
  405c40:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c44:	add	x0, x0, #0x518
  405c48:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  405c4c:	add	x1, x1, #0xb18
  405c50:	str	x1, [x0]
  405c54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c58:	add	x0, x0, #0x518
  405c5c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0x65b0>
  405c60:	add	x1, x1, #0xb28
  405c64:	str	x1, [x0, #8]
  405c68:	b	405cd4 <__fxstatat@plt+0x3174>
  405c6c:	mov	w0, #0x2                   	// #2
  405c70:	bl	410568 <__fxstatat@plt+0xda08>
  405c74:	and	w0, w0, #0xff
  405c78:	cmp	w0, #0x0
  405c7c:	b.eq	405cd4 <__fxstatat@plt+0x3174>  // b.none
  405c80:	str	wzr, [sp, #148]
  405c84:	b	405cc8 <__fxstatat@plt+0x3168>
  405c88:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405c8c:	add	x0, x0, #0x518
  405c90:	ldrsw	x1, [sp, #148]
  405c94:	ldr	x0, [x0, x1, lsl #3]
  405c98:	mov	w2, #0x2                   	// #2
  405c9c:	mov	x1, x0
  405ca0:	mov	x0, #0x0                   	// #0
  405ca4:	bl	402a30 <dcgettext@plt>
  405ca8:	mov	x2, x0
  405cac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405cb0:	add	x0, x0, #0x518
  405cb4:	ldrsw	x1, [sp, #148]
  405cb8:	str	x2, [x0, x1, lsl #3]
  405cbc:	ldr	w0, [sp, #148]
  405cc0:	add	w0, w0, #0x1
  405cc4:	str	w0, [sp, #148]
  405cc8:	ldr	w0, [sp, #148]
  405ccc:	cmp	w0, #0x1
  405cd0:	b.le	405c88 <__fxstatat@plt+0x3128>
  405cd4:	bl	4035ec <__fxstatat@plt+0xa8c>
  405cd8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  405cdc:	add	x0, x0, #0x5f0
  405ce0:	ldr	w0, [x0]
  405ce4:	ldr	x19, [sp, #16]
  405ce8:	ldp	x29, x30, [sp], #208
  405cec:	ret
  405cf0:	stp	x29, x30, [sp, #-96]!
  405cf4:	mov	x29, sp
  405cf8:	str	x0, [sp, #40]
  405cfc:	str	x1, [sp, #32]
  405d00:	strb	w2, [sp, #31]
  405d04:	str	x3, [sp, #16]
  405d08:	ldr	x0, [sp, #32]
  405d0c:	ldr	x0, [x0]
  405d10:	str	x0, [sp, #64]
  405d14:	ldr	x0, [sp, #40]
  405d18:	ldr	x0, [x0]
  405d1c:	str	x0, [sp, #56]
  405d20:	str	xzr, [sp, #80]
  405d24:	strb	wzr, [sp, #95]
  405d28:	str	wzr, [sp, #76]
  405d2c:	b	406258 <__fxstatat@plt+0x36f8>
  405d30:	ldr	w0, [sp, #76]
  405d34:	cmp	w0, #0x4
  405d38:	b.eq	4061b8 <__fxstatat@plt+0x3658>  // b.none
  405d3c:	ldr	w0, [sp, #76]
  405d40:	cmp	w0, #0x4
  405d44:	b.hi	406254 <__fxstatat@plt+0x36f4>  // b.pmore
  405d48:	ldr	w0, [sp, #76]
  405d4c:	cmp	w0, #0x3
  405d50:	b.eq	4060c0 <__fxstatat@plt+0x3560>  // b.none
  405d54:	ldr	w0, [sp, #76]
  405d58:	cmp	w0, #0x3
  405d5c:	b.hi	406254 <__fxstatat@plt+0x36f4>  // b.pmore
  405d60:	ldr	w0, [sp, #76]
  405d64:	cmp	w0, #0x2
  405d68:	b.eq	406048 <__fxstatat@plt+0x34e8>  // b.none
  405d6c:	ldr	w0, [sp, #76]
  405d70:	cmp	w0, #0x2
  405d74:	b.hi	406254 <__fxstatat@plt+0x36f4>  // b.pmore
  405d78:	ldr	w0, [sp, #76]
  405d7c:	cmp	w0, #0x0
  405d80:	b.eq	405d94 <__fxstatat@plt+0x3234>  // b.none
  405d84:	ldr	w0, [sp, #76]
  405d88:	cmp	w0, #0x1
  405d8c:	b.eq	405e64 <__fxstatat@plt+0x3304>  // b.none
  405d90:	b	406254 <__fxstatat@plt+0x36f4>
  405d94:	ldr	x0, [sp, #64]
  405d98:	ldrb	w0, [x0]
  405d9c:	cmp	w0, #0x5e
  405da0:	b.eq	405e00 <__fxstatat@plt+0x32a0>  // b.none
  405da4:	cmp	w0, #0x5e
  405da8:	b.gt	405e30 <__fxstatat@plt+0x32d0>
  405dac:	cmp	w0, #0x5c
  405db0:	b.eq	405de8 <__fxstatat@plt+0x3288>  // b.none
  405db4:	cmp	w0, #0x5c
  405db8:	b.gt	405e30 <__fxstatat@plt+0x32d0>
  405dbc:	cmp	w0, #0x3d
  405dc0:	b.eq	405e18 <__fxstatat@plt+0x32b8>  // b.none
  405dc4:	cmp	w0, #0x3d
  405dc8:	b.gt	405e30 <__fxstatat@plt+0x32d0>
  405dcc:	cmp	w0, #0x0
  405dd0:	b.eq	405ddc <__fxstatat@plt+0x327c>  // b.none
  405dd4:	cmp	w0, #0x3a
  405dd8:	b.ne	405e30 <__fxstatat@plt+0x32d0>  // b.any
  405ddc:	mov	w0, #0x5                   	// #5
  405de0:	str	w0, [sp, #76]
  405de4:	b	405e60 <__fxstatat@plt+0x3300>
  405de8:	mov	w0, #0x1                   	// #1
  405dec:	str	w0, [sp, #76]
  405df0:	ldr	x0, [sp, #64]
  405df4:	add	x0, x0, #0x1
  405df8:	str	x0, [sp, #64]
  405dfc:	b	405e60 <__fxstatat@plt+0x3300>
  405e00:	mov	w0, #0x4                   	// #4
  405e04:	str	w0, [sp, #76]
  405e08:	ldr	x0, [sp, #64]
  405e0c:	add	x0, x0, #0x1
  405e10:	str	x0, [sp, #64]
  405e14:	b	405e60 <__fxstatat@plt+0x3300>
  405e18:	ldrb	w0, [sp, #31]
  405e1c:	cmp	w0, #0x0
  405e20:	b.eq	405e30 <__fxstatat@plt+0x32d0>  // b.none
  405e24:	mov	w0, #0x5                   	// #5
  405e28:	str	w0, [sp, #76]
  405e2c:	b	405e60 <__fxstatat@plt+0x3300>
  405e30:	ldr	x1, [sp, #64]
  405e34:	add	x0, x1, #0x1
  405e38:	str	x0, [sp, #64]
  405e3c:	ldr	x0, [sp, #56]
  405e40:	add	x2, x0, #0x1
  405e44:	str	x2, [sp, #56]
  405e48:	ldrb	w1, [x1]
  405e4c:	strb	w1, [x0]
  405e50:	ldr	x0, [sp, #80]
  405e54:	add	x0, x0, #0x1
  405e58:	str	x0, [sp, #80]
  405e5c:	nop
  405e60:	b	406258 <__fxstatat@plt+0x36f8>
  405e64:	ldr	x0, [sp, #64]
  405e68:	ldrb	w0, [x0]
  405e6c:	cmp	w0, #0x78
  405e70:	b.eq	405f64 <__fxstatat@plt+0x3404>  // b.none
  405e74:	cmp	w0, #0x78
  405e78:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405e7c:	cmp	w0, #0x76
  405e80:	b.eq	405fc8 <__fxstatat@plt+0x3468>  // b.none
  405e84:	cmp	w0, #0x76
  405e88:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405e8c:	cmp	w0, #0x74
  405e90:	b.eq	405fbc <__fxstatat@plt+0x345c>  // b.none
  405e94:	cmp	w0, #0x74
  405e98:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405e9c:	cmp	w0, #0x72
  405ea0:	b.eq	405fb0 <__fxstatat@plt+0x3450>  // b.none
  405ea4:	cmp	w0, #0x72
  405ea8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405eac:	cmp	w0, #0x6e
  405eb0:	b.eq	405fa4 <__fxstatat@plt+0x3444>  // b.none
  405eb4:	cmp	w0, #0x6e
  405eb8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405ebc:	cmp	w0, #0x66
  405ec0:	b.eq	405f98 <__fxstatat@plt+0x3438>  // b.none
  405ec4:	cmp	w0, #0x66
  405ec8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405ecc:	cmp	w0, #0x65
  405ed0:	b.eq	405f8c <__fxstatat@plt+0x342c>  // b.none
  405ed4:	cmp	w0, #0x65
  405ed8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405edc:	cmp	w0, #0x62
  405ee0:	b.eq	405f80 <__fxstatat@plt+0x3420>  // b.none
  405ee4:	cmp	w0, #0x62
  405ee8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405eec:	cmp	w0, #0x61
  405ef0:	b.eq	405f74 <__fxstatat@plt+0x3414>  // b.none
  405ef4:	cmp	w0, #0x61
  405ef8:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405efc:	cmp	w0, #0x5f
  405f00:	b.eq	405fe0 <__fxstatat@plt+0x3480>  // b.none
  405f04:	cmp	w0, #0x5f
  405f08:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405f0c:	cmp	w0, #0x58
  405f10:	b.eq	405f64 <__fxstatat@plt+0x3404>  // b.none
  405f14:	cmp	w0, #0x58
  405f18:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405f1c:	cmp	w0, #0x3f
  405f20:	b.eq	405fd4 <__fxstatat@plt+0x3474>  // b.none
  405f24:	cmp	w0, #0x3f
  405f28:	b.gt	405ff8 <__fxstatat@plt+0x3498>
  405f2c:	cmp	w0, #0x0
  405f30:	b.eq	405fec <__fxstatat@plt+0x348c>  // b.none
  405f34:	cmp	w0, #0x0
  405f38:	b.lt	405ff8 <__fxstatat@plt+0x3498>  // b.tstop
  405f3c:	sub	w0, w0, #0x30
  405f40:	cmp	w0, #0x7
  405f44:	b.hi	405ff8 <__fxstatat@plt+0x3498>  // b.pmore
  405f48:	mov	w0, #0x2                   	// #2
  405f4c:	str	w0, [sp, #76]
  405f50:	ldr	x0, [sp, #64]
  405f54:	ldrb	w0, [x0]
  405f58:	sub	w0, w0, #0x30
  405f5c:	strb	w0, [sp, #95]
  405f60:	b	406008 <__fxstatat@plt+0x34a8>
  405f64:	mov	w0, #0x3                   	// #3
  405f68:	str	w0, [sp, #76]
  405f6c:	strb	wzr, [sp, #95]
  405f70:	b	406008 <__fxstatat@plt+0x34a8>
  405f74:	mov	w0, #0x7                   	// #7
  405f78:	strb	w0, [sp, #95]
  405f7c:	b	406008 <__fxstatat@plt+0x34a8>
  405f80:	mov	w0, #0x8                   	// #8
  405f84:	strb	w0, [sp, #95]
  405f88:	b	406008 <__fxstatat@plt+0x34a8>
  405f8c:	mov	w0, #0x1b                  	// #27
  405f90:	strb	w0, [sp, #95]
  405f94:	b	406008 <__fxstatat@plt+0x34a8>
  405f98:	mov	w0, #0xc                   	// #12
  405f9c:	strb	w0, [sp, #95]
  405fa0:	b	406008 <__fxstatat@plt+0x34a8>
  405fa4:	mov	w0, #0xa                   	// #10
  405fa8:	strb	w0, [sp, #95]
  405fac:	b	406008 <__fxstatat@plt+0x34a8>
  405fb0:	mov	w0, #0xd                   	// #13
  405fb4:	strb	w0, [sp, #95]
  405fb8:	b	406008 <__fxstatat@plt+0x34a8>
  405fbc:	mov	w0, #0x9                   	// #9
  405fc0:	strb	w0, [sp, #95]
  405fc4:	b	406008 <__fxstatat@plt+0x34a8>
  405fc8:	mov	w0, #0xb                   	// #11
  405fcc:	strb	w0, [sp, #95]
  405fd0:	b	406008 <__fxstatat@plt+0x34a8>
  405fd4:	mov	w0, #0x7f                  	// #127
  405fd8:	strb	w0, [sp, #95]
  405fdc:	b	406008 <__fxstatat@plt+0x34a8>
  405fe0:	mov	w0, #0x20                  	// #32
  405fe4:	strb	w0, [sp, #95]
  405fe8:	b	406008 <__fxstatat@plt+0x34a8>
  405fec:	mov	w0, #0x6                   	// #6
  405ff0:	str	w0, [sp, #76]
  405ff4:	b	406008 <__fxstatat@plt+0x34a8>
  405ff8:	ldr	x0, [sp, #64]
  405ffc:	ldrb	w0, [x0]
  406000:	strb	w0, [sp, #95]
  406004:	nop
  406008:	ldr	w0, [sp, #76]
  40600c:	cmp	w0, #0x1
  406010:	b.ne	406038 <__fxstatat@plt+0x34d8>  // b.any
  406014:	ldr	x0, [sp, #56]
  406018:	add	x1, x0, #0x1
  40601c:	str	x1, [sp, #56]
  406020:	ldrb	w1, [sp, #95]
  406024:	strb	w1, [x0]
  406028:	ldr	x0, [sp, #80]
  40602c:	add	x0, x0, #0x1
  406030:	str	x0, [sp, #80]
  406034:	str	wzr, [sp, #76]
  406038:	ldr	x0, [sp, #64]
  40603c:	add	x0, x0, #0x1
  406040:	str	x0, [sp, #64]
  406044:	b	406258 <__fxstatat@plt+0x36f8>
  406048:	ldr	x0, [sp, #64]
  40604c:	ldrb	w0, [x0]
  406050:	cmp	w0, #0x2f
  406054:	b.ls	406068 <__fxstatat@plt+0x3508>  // b.plast
  406058:	ldr	x0, [sp, #64]
  40605c:	ldrb	w0, [x0]
  406060:	cmp	w0, #0x37
  406064:	b.ls	406090 <__fxstatat@plt+0x3530>  // b.plast
  406068:	ldr	x0, [sp, #56]
  40606c:	add	x1, x0, #0x1
  406070:	str	x1, [sp, #56]
  406074:	ldrb	w1, [sp, #95]
  406078:	strb	w1, [x0]
  40607c:	ldr	x0, [sp, #80]
  406080:	add	x0, x0, #0x1
  406084:	str	x0, [sp, #80]
  406088:	str	wzr, [sp, #76]
  40608c:	b	4060bc <__fxstatat@plt+0x355c>
  406090:	ldrb	w0, [sp, #95]
  406094:	ubfiz	w0, w0, #3, #5
  406098:	and	w1, w0, #0xff
  40609c:	ldr	x0, [sp, #64]
  4060a0:	add	x2, x0, #0x1
  4060a4:	str	x2, [sp, #64]
  4060a8:	ldrb	w0, [x0]
  4060ac:	add	w0, w1, w0
  4060b0:	and	w0, w0, #0xff
  4060b4:	sub	w0, w0, #0x30
  4060b8:	strb	w0, [sp, #95]
  4060bc:	b	406258 <__fxstatat@plt+0x36f8>
  4060c0:	ldr	x0, [sp, #64]
  4060c4:	ldrb	w0, [x0]
  4060c8:	cmp	w0, #0x66
  4060cc:	b.gt	40618c <__fxstatat@plt+0x362c>
  4060d0:	cmp	w0, #0x61
  4060d4:	b.ge	40612c <__fxstatat@plt+0x35cc>  // b.tcont
  4060d8:	cmp	w0, #0x39
  4060dc:	b.gt	4060ec <__fxstatat@plt+0x358c>
  4060e0:	cmp	w0, #0x30
  4060e4:	b.ge	4060fc <__fxstatat@plt+0x359c>  // b.tcont
  4060e8:	b	40618c <__fxstatat@plt+0x362c>
  4060ec:	sub	w0, w0, #0x41
  4060f0:	cmp	w0, #0x5
  4060f4:	b.hi	40618c <__fxstatat@plt+0x362c>  // b.pmore
  4060f8:	b	40615c <__fxstatat@plt+0x35fc>
  4060fc:	ldrb	w0, [sp, #95]
  406100:	ubfiz	w0, w0, #4, #4
  406104:	and	w1, w0, #0xff
  406108:	ldr	x0, [sp, #64]
  40610c:	add	x2, x0, #0x1
  406110:	str	x2, [sp, #64]
  406114:	ldrb	w0, [x0]
  406118:	add	w0, w1, w0
  40611c:	and	w0, w0, #0xff
  406120:	sub	w0, w0, #0x30
  406124:	strb	w0, [sp, #95]
  406128:	b	4061b4 <__fxstatat@plt+0x3654>
  40612c:	ldrb	w0, [sp, #95]
  406130:	ubfiz	w0, w0, #4, #4
  406134:	and	w1, w0, #0xff
  406138:	ldr	x0, [sp, #64]
  40613c:	add	x2, x0, #0x1
  406140:	str	x2, [sp, #64]
  406144:	ldrb	w0, [x0]
  406148:	add	w0, w1, w0
  40614c:	and	w0, w0, #0xff
  406150:	sub	w0, w0, #0x57
  406154:	strb	w0, [sp, #95]
  406158:	b	4061b4 <__fxstatat@plt+0x3654>
  40615c:	ldrb	w0, [sp, #95]
  406160:	ubfiz	w0, w0, #4, #4
  406164:	and	w1, w0, #0xff
  406168:	ldr	x0, [sp, #64]
  40616c:	add	x2, x0, #0x1
  406170:	str	x2, [sp, #64]
  406174:	ldrb	w0, [x0]
  406178:	add	w0, w1, w0
  40617c:	and	w0, w0, #0xff
  406180:	sub	w0, w0, #0x37
  406184:	strb	w0, [sp, #95]
  406188:	b	4061b4 <__fxstatat@plt+0x3654>
  40618c:	ldr	x0, [sp, #56]
  406190:	add	x1, x0, #0x1
  406194:	str	x1, [sp, #56]
  406198:	ldrb	w1, [sp, #95]
  40619c:	strb	w1, [x0]
  4061a0:	ldr	x0, [sp, #80]
  4061a4:	add	x0, x0, #0x1
  4061a8:	str	x0, [sp, #80]
  4061ac:	str	wzr, [sp, #76]
  4061b0:	nop
  4061b4:	b	406258 <__fxstatat@plt+0x36f8>
  4061b8:	str	wzr, [sp, #76]
  4061bc:	ldr	x0, [sp, #64]
  4061c0:	ldrb	w0, [x0]
  4061c4:	cmp	w0, #0x3f
  4061c8:	b.ls	406214 <__fxstatat@plt+0x36b4>  // b.plast
  4061cc:	ldr	x0, [sp, #64]
  4061d0:	ldrb	w0, [x0]
  4061d4:	cmp	w0, #0x7e
  4061d8:	b.hi	406214 <__fxstatat@plt+0x36b4>  // b.pmore
  4061dc:	ldr	x0, [sp, #64]
  4061e0:	add	x1, x0, #0x1
  4061e4:	str	x1, [sp, #64]
  4061e8:	ldrb	w1, [x0]
  4061ec:	ldr	x0, [sp, #56]
  4061f0:	add	x2, x0, #0x1
  4061f4:	str	x2, [sp, #56]
  4061f8:	and	w1, w1, #0x1f
  4061fc:	and	w1, w1, #0xff
  406200:	strb	w1, [x0]
  406204:	ldr	x0, [sp, #80]
  406208:	add	x0, x0, #0x1
  40620c:	str	x0, [sp, #80]
  406210:	b	406250 <__fxstatat@plt+0x36f0>
  406214:	ldr	x0, [sp, #64]
  406218:	ldrb	w0, [x0]
  40621c:	cmp	w0, #0x3f
  406220:	b.ne	406248 <__fxstatat@plt+0x36e8>  // b.any
  406224:	ldr	x0, [sp, #56]
  406228:	add	x1, x0, #0x1
  40622c:	str	x1, [sp, #56]
  406230:	mov	w1, #0x7f                  	// #127
  406234:	strb	w1, [x0]
  406238:	ldr	x0, [sp, #80]
  40623c:	add	x0, x0, #0x1
  406240:	str	x0, [sp, #80]
  406244:	b	406258 <__fxstatat@plt+0x36f8>
  406248:	mov	w0, #0x6                   	// #6
  40624c:	str	w0, [sp, #76]
  406250:	b	406258 <__fxstatat@plt+0x36f8>
  406254:	bl	402820 <abort@plt>
  406258:	ldr	w0, [sp, #76]
  40625c:	cmp	w0, #0x4
  406260:	b.ls	405d30 <__fxstatat@plt+0x31d0>  // b.plast
  406264:	ldr	x0, [sp, #40]
  406268:	ldr	x1, [sp, #56]
  40626c:	str	x1, [x0]
  406270:	ldr	x0, [sp, #32]
  406274:	ldr	x1, [sp, #64]
  406278:	str	x1, [x0]
  40627c:	ldr	x0, [sp, #16]
  406280:	ldr	x1, [sp, #80]
  406284:	str	x1, [x0]
  406288:	ldr	w0, [sp, #76]
  40628c:	cmp	w0, #0x6
  406290:	cset	w0, ne  // ne = any
  406294:	and	w0, w0, #0xff
  406298:	ldp	x29, x30, [sp], #96
  40629c:	ret
  4062a0:	stp	x29, x30, [sp, #-32]!
  4062a4:	mov	x29, sp
  4062a8:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4062ac:	add	x0, x0, #0xf88
  4062b0:	bl	402ae0 <getenv@plt>
  4062b4:	str	x0, [sp, #16]
  4062b8:	ldr	x0, [sp, #16]
  4062bc:	cmp	x0, #0x0
  4062c0:	b.eq	4062d4 <__fxstatat@plt+0x3774>  // b.none
  4062c4:	ldr	x0, [sp, #16]
  4062c8:	ldrb	w0, [x0]
  4062cc:	cmp	w0, #0x0
  4062d0:	b.ne	4062dc <__fxstatat@plt+0x377c>  // b.any
  4062d4:	mov	w0, #0x0                   	// #0
  4062d8:	b	406368 <__fxstatat@plt+0x3808>
  4062dc:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  4062e0:	add	x0, x0, #0x9c0
  4062e4:	str	x0, [sp, #24]
  4062e8:	b	406344 <__fxstatat@plt+0x37e4>
  4062ec:	mov	x2, #0x5                   	// #5
  4062f0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4062f4:	add	x1, x0, #0xf90
  4062f8:	ldr	x0, [sp, #24]
  4062fc:	bl	402710 <strncmp@plt>
  406300:	cmp	w0, #0x0
  406304:	b.ne	40632c <__fxstatat@plt+0x37cc>  // b.any
  406308:	ldr	x0, [sp, #24]
  40630c:	add	x0, x0, #0x5
  406310:	mov	w2, #0x0                   	// #0
  406314:	ldr	x1, [sp, #16]
  406318:	bl	402950 <fnmatch@plt>
  40631c:	cmp	w0, #0x0
  406320:	b.ne	40632c <__fxstatat@plt+0x37cc>  // b.any
  406324:	mov	w0, #0x1                   	// #1
  406328:	b	406368 <__fxstatat@plt+0x3808>
  40632c:	ldr	x0, [sp, #24]
  406330:	bl	402500 <strlen@plt>
  406334:	add	x0, x0, #0x1
  406338:	ldr	x1, [sp, #24]
  40633c:	add	x0, x1, x0
  406340:	str	x0, [sp, #24]
  406344:	ldr	x1, [sp, #24]
  406348:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  40634c:	add	x0, x0, #0x9c0
  406350:	sub	x0, x1, x0
  406354:	mov	x1, x0
  406358:	mov	x0, #0x10c3                	// #4291
  40635c:	cmp	x1, x0
  406360:	b.ls	4062ec <__fxstatat@plt+0x378c>  // b.plast
  406364:	mov	w0, #0x0                   	// #0
  406368:	ldp	x29, x30, [sp], #32
  40636c:	ret
  406370:	stp	x29, x30, [sp, #-112]!
  406374:	mov	x29, sp
  406378:	str	x19, [sp, #16]
  40637c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  406380:	add	x0, x0, #0xf98
  406384:	bl	402ae0 <getenv@plt>
  406388:	str	x0, [sp, #56]
  40638c:	ldr	x0, [sp, #56]
  406390:	cmp	x0, #0x0
  406394:	b.eq	4063a8 <__fxstatat@plt+0x3848>  // b.none
  406398:	ldr	x0, [sp, #56]
  40639c:	ldrb	w0, [x0]
  4063a0:	cmp	w0, #0x0
  4063a4:	b.ne	4063fc <__fxstatat@plt+0x389c>  // b.any
  4063a8:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4063ac:	add	x0, x0, #0xfa8
  4063b0:	bl	402ae0 <getenv@plt>
  4063b4:	str	x0, [sp, #64]
  4063b8:	ldr	x0, [sp, #64]
  4063bc:	cmp	x0, #0x0
  4063c0:	b.eq	4063d4 <__fxstatat@plt+0x3874>  // b.none
  4063c4:	ldr	x0, [sp, #64]
  4063c8:	ldrb	w0, [x0]
  4063cc:	cmp	w0, #0x0
  4063d0:	b.ne	406830 <__fxstatat@plt+0x3cd0>  // b.any
  4063d4:	bl	4062a0 <__fxstatat@plt+0x3740>
  4063d8:	and	w0, w0, #0xff
  4063dc:	eor	w0, w0, #0x1
  4063e0:	and	w0, w0, #0xff
  4063e4:	cmp	w0, #0x0
  4063e8:	b.eq	406830 <__fxstatat@plt+0x3cd0>  // b.none
  4063ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4063f0:	add	x0, x0, #0x6c4
  4063f4:	strb	wzr, [x0]
  4063f8:	b	406834 <__fxstatat@plt+0x3cd4>
  4063fc:	str	xzr, [sp, #96]
  406400:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  406404:	add	x1, x0, #0xfb8
  406408:	add	x0, sp, #0x28
  40640c:	ldrh	w2, [x1]
  406410:	strh	w2, [x0]
  406414:	ldrb	w1, [x1, #2]
  406418:	strb	w1, [x0, #2]
  40641c:	ldr	x0, [sp, #56]
  406420:	bl	41a234 <__fxstatat@plt+0x176d4>
  406424:	mov	x1, x0
  406428:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40642c:	add	x0, x0, #0x6d0
  406430:	str	x1, [x0]
  406434:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406438:	add	x0, x0, #0x6d0
  40643c:	ldr	x0, [x0]
  406440:	str	x0, [sp, #48]
  406444:	mov	w0, #0x1                   	// #1
  406448:	str	w0, [sp, #92]
  40644c:	ldr	w0, [sp, #92]
  406450:	cmp	w0, #0x6
  406454:	b.eq	40675c <__fxstatat@plt+0x3bfc>  // b.none
  406458:	ldr	w0, [sp, #92]
  40645c:	cmp	w0, #0x6
  406460:	b.hi	406750 <__fxstatat@plt+0x3bf0>  // b.pmore
  406464:	ldr	w0, [sp, #92]
  406468:	cmp	w0, #0x4
  40646c:	b.eq	4066e4 <__fxstatat@plt+0x3b84>  // b.none
  406470:	ldr	w0, [sp, #92]
  406474:	cmp	w0, #0x4
  406478:	b.hi	406750 <__fxstatat@plt+0x3bf0>  // b.pmore
  40647c:	ldr	w0, [sp, #92]
  406480:	cmp	w0, #0x3
  406484:	b.eq	4065d8 <__fxstatat@plt+0x3a78>  // b.none
  406488:	ldr	w0, [sp, #92]
  40648c:	cmp	w0, #0x3
  406490:	b.hi	406750 <__fxstatat@plt+0x3bf0>  // b.pmore
  406494:	ldr	w0, [sp, #92]
  406498:	cmp	w0, #0x1
  40649c:	b.eq	4064b0 <__fxstatat@plt+0x3950>  // b.none
  4064a0:	ldr	w0, [sp, #92]
  4064a4:	cmp	w0, #0x2
  4064a8:	b.eq	40659c <__fxstatat@plt+0x3a3c>  // b.none
  4064ac:	b	406750 <__fxstatat@plt+0x3bf0>
  4064b0:	ldr	x0, [sp, #56]
  4064b4:	ldrb	w0, [x0]
  4064b8:	cmp	w0, #0x3a
  4064bc:	b.eq	4064dc <__fxstatat@plt+0x397c>  // b.none
  4064c0:	cmp	w0, #0x3a
  4064c4:	b.gt	406578 <__fxstatat@plt+0x3a18>
  4064c8:	cmp	w0, #0x0
  4064cc:	b.eq	40656c <__fxstatat@plt+0x3a0c>  // b.none
  4064d0:	cmp	w0, #0x2a
  4064d4:	b.eq	4064ec <__fxstatat@plt+0x398c>  // b.none
  4064d8:	b	406578 <__fxstatat@plt+0x3a18>
  4064dc:	ldr	x0, [sp, #56]
  4064e0:	add	x0, x0, #0x1
  4064e4:	str	x0, [sp, #56]
  4064e8:	b	406598 <__fxstatat@plt+0x3a38>
  4064ec:	mov	x0, #0x28                  	// #40
  4064f0:	bl	41a080 <__fxstatat@plt+0x17520>
  4064f4:	str	x0, [sp, #96]
  4064f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4064fc:	add	x0, x0, #0x6c8
  406500:	ldr	x1, [x0]
  406504:	ldr	x0, [sp, #96]
  406508:	str	x1, [x0, #32]
  40650c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406510:	add	x0, x0, #0x6c8
  406514:	ldr	x1, [sp, #96]
  406518:	str	x1, [x0]
  40651c:	ldr	x0, [sp, #56]
  406520:	add	x0, x0, #0x1
  406524:	str	x0, [sp, #56]
  406528:	ldr	x1, [sp, #48]
  40652c:	ldr	x0, [sp, #96]
  406530:	str	x1, [x0, #8]
  406534:	ldr	x2, [sp, #96]
  406538:	add	x1, sp, #0x38
  40653c:	add	x0, sp, #0x30
  406540:	mov	x3, x2
  406544:	mov	w2, #0x1                   	// #1
  406548:	bl	405cf0 <__fxstatat@plt+0x3190>
  40654c:	and	w0, w0, #0xff
  406550:	cmp	w0, #0x0
  406554:	b.eq	406560 <__fxstatat@plt+0x3a00>  // b.none
  406558:	mov	w0, #0x4                   	// #4
  40655c:	b	406564 <__fxstatat@plt+0x3a04>
  406560:	mov	w0, #0x6                   	// #6
  406564:	str	w0, [sp, #92]
  406568:	b	406598 <__fxstatat@plt+0x3a38>
  40656c:	mov	w0, #0x5                   	// #5
  406570:	str	w0, [sp, #92]
  406574:	b	406760 <__fxstatat@plt+0x3c00>
  406578:	ldr	x0, [sp, #56]
  40657c:	add	x1, x0, #0x1
  406580:	str	x1, [sp, #56]
  406584:	ldrb	w0, [x0]
  406588:	strb	w0, [sp, #40]
  40658c:	mov	w0, #0x2                   	// #2
  406590:	str	w0, [sp, #92]
  406594:	nop
  406598:	b	406758 <__fxstatat@plt+0x3bf8>
  40659c:	ldr	x0, [sp, #56]
  4065a0:	ldrb	w0, [x0]
  4065a4:	cmp	w0, #0x0
  4065a8:	b.eq	4065cc <__fxstatat@plt+0x3a6c>  // b.none
  4065ac:	ldr	x0, [sp, #56]
  4065b0:	add	x1, x0, #0x1
  4065b4:	str	x1, [sp, #56]
  4065b8:	ldrb	w0, [x0]
  4065bc:	strb	w0, [sp, #41]
  4065c0:	mov	w0, #0x3                   	// #3
  4065c4:	str	w0, [sp, #92]
  4065c8:	b	406758 <__fxstatat@plt+0x3bf8>
  4065cc:	mov	w0, #0x6                   	// #6
  4065d0:	str	w0, [sp, #92]
  4065d4:	b	406758 <__fxstatat@plt+0x3bf8>
  4065d8:	mov	w0, #0x6                   	// #6
  4065dc:	str	w0, [sp, #92]
  4065e0:	ldr	x0, [sp, #56]
  4065e4:	add	x1, x0, #0x1
  4065e8:	str	x1, [sp, #56]
  4065ec:	ldrb	w0, [x0]
  4065f0:	cmp	w0, #0x3d
  4065f4:	b.ne	406754 <__fxstatat@plt+0x3bf4>  // b.any
  4065f8:	str	wzr, [sp, #108]
  4065fc:	b	406690 <__fxstatat@plt+0x3b30>
  406600:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  406604:	add	x0, x0, #0xc28
  406608:	ldrsw	x1, [sp, #108]
  40660c:	ldr	x1, [x0, x1, lsl #3]
  406610:	add	x0, sp, #0x28
  406614:	bl	4028b0 <strcmp@plt>
  406618:	cmp	w0, #0x0
  40661c:	b.ne	406684 <__fxstatat@plt+0x3b24>  // b.any
  406620:	ldr	x1, [sp, #48]
  406624:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406628:	add	x2, x0, #0x398
  40662c:	ldrsw	x0, [sp, #108]
  406630:	lsl	x0, x0, #4
  406634:	add	x0, x2, x0
  406638:	str	x1, [x0, #8]
  40663c:	ldrsw	x0, [sp, #108]
  406640:	lsl	x1, x0, #4
  406644:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406648:	add	x0, x0, #0x398
  40664c:	add	x2, x1, x0
  406650:	add	x1, sp, #0x38
  406654:	add	x0, sp, #0x30
  406658:	mov	x3, x2
  40665c:	mov	w2, #0x0                   	// #0
  406660:	bl	405cf0 <__fxstatat@plt+0x3190>
  406664:	and	w0, w0, #0xff
  406668:	cmp	w0, #0x0
  40666c:	b.eq	406678 <__fxstatat@plt+0x3b18>  // b.none
  406670:	mov	w0, #0x1                   	// #1
  406674:	b	40667c <__fxstatat@plt+0x3b1c>
  406678:	mov	w0, #0x6                   	// #6
  40667c:	str	w0, [sp, #92]
  406680:	b	4066a8 <__fxstatat@plt+0x3b48>
  406684:	ldr	w0, [sp, #108]
  406688:	add	w0, w0, #0x1
  40668c:	str	w0, [sp, #108]
  406690:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  406694:	add	x0, x0, #0xc28
  406698:	ldrsw	x1, [sp, #108]
  40669c:	ldr	x0, [x0, x1, lsl #3]
  4066a0:	cmp	x0, #0x0
  4066a4:	b.ne	406600 <__fxstatat@plt+0x3aa0>  // b.any
  4066a8:	ldr	w0, [sp, #92]
  4066ac:	cmp	w0, #0x6
  4066b0:	b.ne	406754 <__fxstatat@plt+0x3bf4>  // b.any
  4066b4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  4066b8:	add	x0, x0, #0xfc0
  4066bc:	bl	402b20 <gettext@plt>
  4066c0:	mov	x19, x0
  4066c4:	add	x0, sp, #0x28
  4066c8:	bl	418f38 <__fxstatat@plt+0x163d8>
  4066cc:	mov	x3, x0
  4066d0:	mov	x2, x19
  4066d4:	mov	w1, #0x0                   	// #0
  4066d8:	mov	w0, #0x0                   	// #0
  4066dc:	bl	402550 <error@plt>
  4066e0:	b	406754 <__fxstatat@plt+0x3bf4>
  4066e4:	ldr	x0, [sp, #56]
  4066e8:	add	x1, x0, #0x1
  4066ec:	str	x1, [sp, #56]
  4066f0:	ldrb	w0, [x0]
  4066f4:	cmp	w0, #0x3d
  4066f8:	b.ne	406744 <__fxstatat@plt+0x3be4>  // b.any
  4066fc:	ldr	x1, [sp, #48]
  406700:	ldr	x0, [sp, #96]
  406704:	str	x1, [x0, #24]
  406708:	ldr	x0, [sp, #96]
  40670c:	add	x2, x0, #0x10
  406710:	add	x1, sp, #0x38
  406714:	add	x0, sp, #0x30
  406718:	mov	x3, x2
  40671c:	mov	w2, #0x0                   	// #0
  406720:	bl	405cf0 <__fxstatat@plt+0x3190>
  406724:	and	w0, w0, #0xff
  406728:	cmp	w0, #0x0
  40672c:	b.eq	406738 <__fxstatat@plt+0x3bd8>  // b.none
  406730:	mov	w0, #0x1                   	// #1
  406734:	b	40673c <__fxstatat@plt+0x3bdc>
  406738:	mov	w0, #0x6                   	// #6
  40673c:	str	w0, [sp, #92]
  406740:	b	406758 <__fxstatat@plt+0x3bf8>
  406744:	mov	w0, #0x6                   	// #6
  406748:	str	w0, [sp, #92]
  40674c:	b	406758 <__fxstatat@plt+0x3bf8>
  406750:	bl	402820 <abort@plt>
  406754:	nop
  406758:	b	40644c <__fxstatat@plt+0x38ec>
  40675c:	nop
  406760:	ldr	w0, [sp, #92]
  406764:	cmp	w0, #0x6
  406768:	b.ne	4067e0 <__fxstatat@plt+0x3c80>  // b.any
  40676c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  406770:	add	x0, x0, #0xfd8
  406774:	bl	402b20 <gettext@plt>
  406778:	mov	x2, x0
  40677c:	mov	w1, #0x0                   	// #0
  406780:	mov	w0, #0x0                   	// #0
  406784:	bl	402550 <error@plt>
  406788:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40678c:	add	x0, x0, #0x6d0
  406790:	ldr	x0, [x0]
  406794:	bl	4028f0 <free@plt>
  406798:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40679c:	add	x0, x0, #0x6c8
  4067a0:	ldr	x0, [x0]
  4067a4:	str	x0, [sp, #80]
  4067a8:	b	4067c8 <__fxstatat@plt+0x3c68>
  4067ac:	ldr	x0, [sp, #80]
  4067b0:	str	x0, [sp, #72]
  4067b4:	ldr	x0, [sp, #80]
  4067b8:	ldr	x0, [x0, #32]
  4067bc:	str	x0, [sp, #80]
  4067c0:	ldr	x0, [sp, #72]
  4067c4:	bl	4028f0 <free@plt>
  4067c8:	ldr	x0, [sp, #80]
  4067cc:	cmp	x0, #0x0
  4067d0:	b.ne	4067ac <__fxstatat@plt+0x3c4c>  // b.any
  4067d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4067d8:	add	x0, x0, #0x6c4
  4067dc:	strb	wzr, [x0]
  4067e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4067e4:	add	x0, x0, #0x398
  4067e8:	ldr	x0, [x0, #112]
  4067ec:	cmp	x0, #0x6
  4067f0:	b.ne	406834 <__fxstatat@plt+0x3cd4>  // b.any
  4067f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4067f8:	add	x0, x0, #0x398
  4067fc:	ldr	x3, [x0, #120]
  406800:	mov	x2, #0x6                   	// #6
  406804:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406808:	add	x1, x0, #0x10
  40680c:	mov	x0, x3
  406810:	bl	402710 <strncmp@plt>
  406814:	cmp	w0, #0x0
  406818:	b.ne	406834 <__fxstatat@plt+0x3cd4>  // b.any
  40681c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406820:	add	x0, x0, #0x648
  406824:	mov	w1, #0x1                   	// #1
  406828:	strb	w1, [x0]
  40682c:	b	406834 <__fxstatat@plt+0x3cd4>
  406830:	nop
  406834:	ldr	x19, [sp, #16]
  406838:	ldp	x29, x30, [sp], #112
  40683c:	ret
  406840:	stp	x29, x30, [sp, #-48]!
  406844:	mov	x29, sp
  406848:	str	x19, [sp, #16]
  40684c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406850:	add	x0, x0, #0x18
  406854:	bl	402ae0 <getenv@plt>
  406858:	str	x0, [sp, #40]
  40685c:	ldr	x0, [sp, #40]
  406860:	cmp	x0, #0x0
  406864:	b.eq	4068e0 <__fxstatat@plt+0x3d80>  // b.none
  406868:	mov	x3, #0x4                   	// #4
  40686c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  406870:	add	x2, x0, #0x720
  406874:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  406878:	add	x1, x0, #0x6c8
  40687c:	ldr	x0, [sp, #40]
  406880:	bl	40e1e4 <__fxstatat@plt+0xb684>
  406884:	str	w0, [sp, #36]
  406888:	ldr	w0, [sp, #36]
  40688c:	cmp	w0, #0x0
  406890:	b.lt	4068b4 <__fxstatat@plt+0x3d54>  // b.tstop
  406894:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  406898:	add	x0, x0, #0x720
  40689c:	ldrsw	x1, [sp, #36]
  4068a0:	ldr	w0, [x0, x1, lsl #2]
  4068a4:	mov	w1, w0
  4068a8:	mov	x0, #0x0                   	// #0
  4068ac:	bl	416dc0 <__fxstatat@plt+0x14260>
  4068b0:	b	4068e0 <__fxstatat@plt+0x3d80>
  4068b4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  4068b8:	add	x0, x0, #0x28
  4068bc:	bl	402b20 <gettext@plt>
  4068c0:	mov	x19, x0
  4068c4:	ldr	x0, [sp, #40]
  4068c8:	bl	418f38 <__fxstatat@plt+0x163d8>
  4068cc:	mov	x3, x0
  4068d0:	mov	x2, x19
  4068d4:	mov	w1, #0x0                   	// #0
  4068d8:	mov	w0, #0x0                   	// #0
  4068dc:	bl	402550 <error@plt>
  4068e0:	nop
  4068e4:	ldr	x19, [sp, #16]
  4068e8:	ldp	x29, x30, [sp], #48
  4068ec:	ret
  4068f0:	sub	sp, sp, #0x10
  4068f4:	strb	w0, [sp, #15]
  4068f8:	ldrb	w0, [sp, #15]
  4068fc:	cmp	w0, #0x0
  406900:	b.eq	406918 <__fxstatat@plt+0x3db8>  // b.none
  406904:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406908:	add	x0, x0, #0x7c0
  40690c:	mov	w1, #0x2                   	// #2
  406910:	str	w1, [x0]
  406914:	b	40693c <__fxstatat@plt+0x3ddc>
  406918:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40691c:	add	x0, x0, #0x7c0
  406920:	ldr	w0, [x0]
  406924:	cmp	w0, #0x0
  406928:	b.ne	40693c <__fxstatat@plt+0x3ddc>  // b.any
  40692c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406930:	add	x0, x0, #0x7c0
  406934:	mov	w1, #0x1                   	// #1
  406938:	str	w1, [x0]
  40693c:	nop
  406940:	add	sp, sp, #0x10
  406944:	ret
  406948:	stp	x29, x30, [sp, #-64]!
  40694c:	mov	x29, sp
  406950:	str	x19, [sp, #16]
  406954:	strb	w0, [sp, #63]
  406958:	str	x1, [sp, #48]
  40695c:	str	x2, [sp, #40]
  406960:	bl	402ac0 <__errno_location@plt>
  406964:	ldr	w19, [x0]
  406968:	ldr	x1, [sp, #40]
  40696c:	mov	w0, #0x4                   	// #4
  406970:	bl	418be8 <__fxstatat@plt+0x16088>
  406974:	mov	x3, x0
  406978:	ldr	x2, [sp, #48]
  40697c:	mov	w1, w19
  406980:	mov	w0, #0x0                   	// #0
  406984:	bl	402550 <error@plt>
  406988:	ldrb	w0, [sp, #63]
  40698c:	bl	4068f0 <__fxstatat@plt+0x3d90>
  406990:	nop
  406994:	ldr	x19, [sp, #16]
  406998:	ldp	x29, x30, [sp], #64
  40699c:	ret
  4069a0:	stp	x29, x30, [sp, #-64]!
  4069a4:	mov	x29, sp
  4069a8:	str	x0, [sp, #40]
  4069ac:	str	x1, [sp, #32]
  4069b0:	strb	w2, [sp, #31]
  4069b4:	mov	x0, #0x20                  	// #32
  4069b8:	bl	41a080 <__fxstatat@plt+0x17520>
  4069bc:	str	x0, [sp, #56]
  4069c0:	ldr	x0, [sp, #32]
  4069c4:	cmp	x0, #0x0
  4069c8:	b.eq	4069dc <__fxstatat@plt+0x3e7c>  // b.none
  4069cc:	ldr	x0, [sp, #32]
  4069d0:	bl	41a234 <__fxstatat@plt+0x176d4>
  4069d4:	mov	x1, x0
  4069d8:	b	4069e0 <__fxstatat@plt+0x3e80>
  4069dc:	mov	x1, #0x0                   	// #0
  4069e0:	ldr	x0, [sp, #56]
  4069e4:	str	x1, [x0, #8]
  4069e8:	ldr	x0, [sp, #40]
  4069ec:	cmp	x0, #0x0
  4069f0:	b.eq	406a04 <__fxstatat@plt+0x3ea4>  // b.none
  4069f4:	ldr	x0, [sp, #40]
  4069f8:	bl	41a234 <__fxstatat@plt+0x176d4>
  4069fc:	mov	x1, x0
  406a00:	b	406a08 <__fxstatat@plt+0x3ea8>
  406a04:	mov	x1, #0x0                   	// #0
  406a08:	ldr	x0, [sp, #56]
  406a0c:	str	x1, [x0]
  406a10:	ldr	x0, [sp, #56]
  406a14:	ldrb	w1, [sp, #31]
  406a18:	strb	w1, [x0, #16]
  406a1c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406a20:	add	x0, x0, #0x658
  406a24:	ldr	x1, [x0]
  406a28:	ldr	x0, [sp, #56]
  406a2c:	str	x1, [x0, #24]
  406a30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406a34:	add	x0, x0, #0x658
  406a38:	ldr	x1, [sp, #56]
  406a3c:	str	x1, [x0]
  406a40:	nop
  406a44:	ldp	x29, x30, [sp], #64
  406a48:	ret
  406a4c:	sub	sp, sp, #0x310
  406a50:	stp	x29, x30, [sp]
  406a54:	mov	x29, sp
  406a58:	str	x19, [sp, #16]
  406a5c:	str	x0, [sp, #56]
  406a60:	str	x1, [sp, #48]
  406a64:	strb	w2, [sp, #47]
  406a68:	str	xzr, [sp, #776]
  406a6c:	bl	402ac0 <__errno_location@plt>
  406a70:	str	wzr, [x0]
  406a74:	ldr	x0, [sp, #56]
  406a78:	bl	4025d0 <opendir@plt>
  406a7c:	str	x0, [sp, #752]
  406a80:	ldr	x0, [sp, #752]
  406a84:	cmp	x0, #0x0
  406a88:	b.ne	406aac <__fxstatat@plt+0x3f4c>  // b.any
  406a8c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406a90:	add	x0, x0, #0x70
  406a94:	bl	402b20 <gettext@plt>
  406a98:	ldr	x2, [sp, #56]
  406a9c:	mov	x1, x0
  406aa0:	ldrb	w0, [sp, #47]
  406aa4:	bl	406948 <__fxstatat@plt+0x3de8>
  406aa8:	b	407150 <__fxstatat@plt+0x45f0>
  406aac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406ab0:	add	x0, x0, #0x610
  406ab4:	ldr	x0, [x0]
  406ab8:	cmp	x0, #0x0
  406abc:	b.eq	406ba8 <__fxstatat@plt+0x4048>  // b.none
  406ac0:	ldr	x0, [sp, #752]
  406ac4:	bl	4029a0 <dirfd@plt>
  406ac8:	str	w0, [sp, #748]
  406acc:	ldr	w0, [sp, #748]
  406ad0:	cmp	w0, #0x0
  406ad4:	b.lt	406af4 <__fxstatat@plt+0x3f94>  // b.tstop
  406ad8:	add	x0, sp, #0x48
  406adc:	mov	x1, x0
  406ae0:	ldr	w0, [sp, #748]
  406ae4:	bl	420620 <_obstack_memory_used@@Base+0x4bd0>
  406ae8:	lsr	w0, w0, #31
  406aec:	and	w0, w0, #0xff
  406af0:	b	406b0c <__fxstatat@plt+0x3fac>
  406af4:	add	x0, sp, #0x48
  406af8:	mov	x1, x0
  406afc:	ldr	x0, [sp, #56]
  406b00:	bl	420610 <_obstack_memory_used@@Base+0x4bc0>
  406b04:	lsr	w0, w0, #31
  406b08:	and	w0, w0, #0xff
  406b0c:	cmp	w0, #0x0
  406b10:	b.eq	406b3c <__fxstatat@plt+0x3fdc>  // b.none
  406b14:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406b18:	add	x0, x0, #0x90
  406b1c:	bl	402b20 <gettext@plt>
  406b20:	ldr	x2, [sp, #56]
  406b24:	mov	x1, x0
  406b28:	ldrb	w0, [sp, #47]
  406b2c:	bl	406948 <__fxstatat@plt+0x3de8>
  406b30:	ldr	x0, [sp, #752]
  406b34:	bl	4027b0 <closedir@plt>
  406b38:	b	407150 <__fxstatat@plt+0x45f0>
  406b3c:	ldr	x0, [sp, #72]
  406b40:	ldr	x1, [sp, #80]
  406b44:	bl	4038cc <__fxstatat@plt+0xd6c>
  406b48:	and	w0, w0, #0xff
  406b4c:	cmp	w0, #0x0
  406b50:	b.eq	406b9c <__fxstatat@plt+0x403c>  // b.none
  406b54:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406b58:	add	x0, x0, #0xb8
  406b5c:	bl	402b20 <gettext@plt>
  406b60:	mov	x19, x0
  406b64:	ldr	x2, [sp, #56]
  406b68:	mov	w1, #0x3                   	// #3
  406b6c:	mov	w0, #0x0                   	// #0
  406b70:	bl	418d20 <__fxstatat@plt+0x161c0>
  406b74:	mov	x3, x0
  406b78:	mov	x2, x19
  406b7c:	mov	w1, #0x0                   	// #0
  406b80:	mov	w0, #0x0                   	// #0
  406b84:	bl	402550 <error@plt>
  406b88:	ldr	x0, [sp, #752]
  406b8c:	bl	4027b0 <closedir@plt>
  406b90:	mov	w0, #0x1                   	// #1
  406b94:	bl	4068f0 <__fxstatat@plt+0x3d90>
  406b98:	b	407150 <__fxstatat@plt+0x45f0>
  406b9c:	ldr	x0, [sp, #72]
  406ba0:	ldr	x1, [sp, #80]
  406ba4:	bl	40308c <__fxstatat@plt+0x52c>
  406ba8:	bl	407414 <__fxstatat@plt+0x48b4>
  406bac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406bb0:	add	x0, x0, #0x6e0
  406bb4:	ldrb	w0, [x0]
  406bb8:	cmp	w0, #0x0
  406bbc:	b.ne	406bd4 <__fxstatat@plt+0x4074>  // b.any
  406bc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406bc4:	add	x0, x0, #0x718
  406bc8:	ldrb	w0, [x0]
  406bcc:	cmp	w0, #0x0
  406bd0:	b.eq	406d50 <__fxstatat@plt+0x41f0>  // b.none
  406bd4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406bd8:	add	x0, x0, #0x528
  406bdc:	ldrb	w0, [x0]
  406be0:	eor	w0, w0, #0x1
  406be4:	and	w0, w0, #0xff
  406be8:	cmp	w0, #0x0
  406bec:	b.eq	406c14 <__fxstatat@plt+0x40b4>  // b.none
  406bf0:	mov	w0, #0xa                   	// #10
  406bf4:	bl	402770 <putchar_unlocked@plt>
  406bf8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406bfc:	add	x0, x0, #0x7d8
  406c00:	ldr	x0, [x0]
  406c04:	add	x1, x0, #0x1
  406c08:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c0c:	add	x0, x0, #0x7d8
  406c10:	str	x1, [x0]
  406c14:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c18:	add	x0, x0, #0x528
  406c1c:	strb	wzr, [x0]
  406c20:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c24:	add	x0, x0, #0x6bc
  406c28:	ldrb	w0, [x0]
  406c2c:	cmp	w0, #0x0
  406c30:	b.eq	406c74 <__fxstatat@plt+0x4114>  // b.none
  406c34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c38:	add	x0, x0, #0x5f8
  406c3c:	ldr	x0, [x0]
  406c40:	mov	x3, x0
  406c44:	mov	x2, #0x2                   	// #2
  406c48:	mov	x1, #0x1                   	// #1
  406c4c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406c50:	add	x0, x0, #0xe8
  406c54:	bl	4024e0 <fwrite_unlocked@plt>
  406c58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c5c:	add	x0, x0, #0x7d8
  406c60:	ldr	x0, [x0]
  406c64:	add	x1, x0, #0x2
  406c68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c6c:	add	x0, x0, #0x7d8
  406c70:	str	x1, [x0]
  406c74:	str	xzr, [sp, #768]
  406c78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406c7c:	add	x0, x0, #0x6c5
  406c80:	ldrb	w0, [x0]
  406c84:	cmp	w0, #0x0
  406c88:	b.eq	406cc4 <__fxstatat@plt+0x4164>  // b.none
  406c8c:	mov	w1, #0x2                   	// #2
  406c90:	ldr	x0, [sp, #56]
  406c94:	bl	40eb34 <__fxstatat@plt+0xbfd4>
  406c98:	str	x0, [sp, #768]
  406c9c:	ldr	x0, [sp, #768]
  406ca0:	cmp	x0, #0x0
  406ca4:	b.ne	406cc4 <__fxstatat@plt+0x4164>  // b.any
  406ca8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406cac:	add	x0, x0, #0xf0
  406cb0:	bl	402b20 <gettext@plt>
  406cb4:	ldr	x2, [sp, #56]
  406cb8:	mov	x1, x0
  406cbc:	ldrb	w0, [sp, #47]
  406cc0:	bl	406948 <__fxstatat@plt+0x3de8>
  406cc4:	ldr	x0, [sp, #48]
  406cc8:	cmp	x0, #0x0
  406ccc:	b.eq	406cd8 <__fxstatat@plt+0x4178>  // b.none
  406cd0:	ldr	x0, [sp, #48]
  406cd4:	b	406cdc <__fxstatat@plt+0x417c>
  406cd8:	ldr	x0, [sp, #56]
  406cdc:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406ce0:	add	x1, x1, #0x708
  406ce4:	ldr	x7, [x1]
  406ce8:	ldr	x6, [sp, #768]
  406cec:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406cf0:	add	x5, x1, #0x838
  406cf4:	mov	w4, #0x1                   	// #1
  406cf8:	mov	x3, #0x0                   	// #0
  406cfc:	mov	w2, #0xffffffff            	// #-1
  406d00:	mov	x1, x7
  406d04:	bl	40bce4 <__fxstatat@plt+0x9184>
  406d08:	ldr	x0, [sp, #768]
  406d0c:	bl	4028f0 <free@plt>
  406d10:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406d14:	add	x0, x0, #0x5f8
  406d18:	ldr	x0, [x0]
  406d1c:	mov	x3, x0
  406d20:	mov	x2, #0x2                   	// #2
  406d24:	mov	x1, #0x1                   	// #1
  406d28:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406d2c:	add	x0, x0, #0x108
  406d30:	bl	4024e0 <fwrite_unlocked@plt>
  406d34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406d38:	add	x0, x0, #0x7d8
  406d3c:	ldr	x0, [x0]
  406d40:	add	x1, x0, #0x2
  406d44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406d48:	add	x0, x0, #0x7d8
  406d4c:	str	x1, [x0]
  406d50:	bl	402ac0 <__errno_location@plt>
  406d54:	str	wzr, [x0]
  406d58:	ldr	x0, [sp, #752]
  406d5c:	bl	402790 <readdir@plt>
  406d60:	str	x0, [sp, #736]
  406d64:	ldr	x0, [sp, #736]
  406d68:	cmp	x0, #0x0
  406d6c:	b.eq	406f0c <__fxstatat@plt+0x43ac>  // b.none
  406d70:	ldr	x0, [sp, #736]
  406d74:	add	x0, x0, #0x13
  406d78:	bl	407218 <__fxstatat@plt+0x46b8>
  406d7c:	and	w0, w0, #0xff
  406d80:	eor	w0, w0, #0x1
  406d84:	and	w0, w0, #0xff
  406d88:	cmp	w0, #0x0
  406d8c:	b.eq	406f48 <__fxstatat@plt+0x43e8>  // b.none
  406d90:	str	wzr, [sp, #764]
  406d94:	ldr	x0, [sp, #736]
  406d98:	ldrb	w0, [x0, #18]
  406d9c:	cmp	w0, #0xe
  406da0:	b.eq	406e64 <__fxstatat@plt+0x4304>  // b.none
  406da4:	cmp	w0, #0xe
  406da8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406dac:	cmp	w0, #0xc
  406db0:	b.eq	406e58 <__fxstatat@plt+0x42f8>  // b.none
  406db4:	cmp	w0, #0xc
  406db8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406dbc:	cmp	w0, #0xa
  406dc0:	b.eq	406e40 <__fxstatat@plt+0x42e0>  // b.none
  406dc4:	cmp	w0, #0xa
  406dc8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406dcc:	cmp	w0, #0x8
  406dd0:	b.eq	406e4c <__fxstatat@plt+0x42ec>  // b.none
  406dd4:	cmp	w0, #0x8
  406dd8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406ddc:	cmp	w0, #0x6
  406de0:	b.eq	406e10 <__fxstatat@plt+0x42b0>  // b.none
  406de4:	cmp	w0, #0x6
  406de8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406dec:	cmp	w0, #0x4
  406df0:	b.eq	406e28 <__fxstatat@plt+0x42c8>  // b.none
  406df4:	cmp	w0, #0x4
  406df8:	b.gt	406e70 <__fxstatat@plt+0x4310>
  406dfc:	cmp	w0, #0x1
  406e00:	b.eq	406e34 <__fxstatat@plt+0x42d4>  // b.none
  406e04:	cmp	w0, #0x2
  406e08:	b.eq	406e1c <__fxstatat@plt+0x42bc>  // b.none
  406e0c:	b	406e70 <__fxstatat@plt+0x4310>
  406e10:	mov	w0, #0x4                   	// #4
  406e14:	str	w0, [sp, #764]
  406e18:	b	406e70 <__fxstatat@plt+0x4310>
  406e1c:	mov	w0, #0x2                   	// #2
  406e20:	str	w0, [sp, #764]
  406e24:	b	406e70 <__fxstatat@plt+0x4310>
  406e28:	mov	w0, #0x3                   	// #3
  406e2c:	str	w0, [sp, #764]
  406e30:	b	406e70 <__fxstatat@plt+0x4310>
  406e34:	mov	w0, #0x1                   	// #1
  406e38:	str	w0, [sp, #764]
  406e3c:	b	406e70 <__fxstatat@plt+0x4310>
  406e40:	mov	w0, #0x6                   	// #6
  406e44:	str	w0, [sp, #764]
  406e48:	b	406e70 <__fxstatat@plt+0x4310>
  406e4c:	mov	w0, #0x5                   	// #5
  406e50:	str	w0, [sp, #764]
  406e54:	b	406e70 <__fxstatat@plt+0x4310>
  406e58:	mov	w0, #0x7                   	// #7
  406e5c:	str	w0, [sp, #764]
  406e60:	b	406e70 <__fxstatat@plt+0x4310>
  406e64:	mov	w0, #0x8                   	// #8
  406e68:	str	w0, [sp, #764]
  406e6c:	nop
  406e70:	ldr	x0, [sp, #736]
  406e74:	add	x0, x0, #0x13
  406e78:	ldr	x4, [sp, #56]
  406e7c:	mov	w3, #0x0                   	// #0
  406e80:	mov	x2, #0x0                   	// #0
  406e84:	ldr	w1, [sp, #764]
  406e88:	bl	4077f8 <__fxstatat@plt+0x4c98>
  406e8c:	mov	x1, x0
  406e90:	ldr	x0, [sp, #776]
  406e94:	add	x0, x0, x1
  406e98:	str	x0, [sp, #776]
  406e9c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406ea0:	add	x0, x0, #0x69c
  406ea4:	ldr	w0, [x0]
  406ea8:	cmp	w0, #0x1
  406eac:	b.ne	406f48 <__fxstatat@plt+0x43e8>  // b.any
  406eb0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406eb4:	add	x0, x0, #0x6a4
  406eb8:	ldr	w0, [x0]
  406ebc:	cmn	w0, #0x1
  406ec0:	b.ne	406f48 <__fxstatat@plt+0x43e8>  // b.any
  406ec4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406ec8:	add	x0, x0, #0x6ab
  406ecc:	ldrb	w0, [x0]
  406ed0:	eor	w0, w0, #0x1
  406ed4:	and	w0, w0, #0xff
  406ed8:	cmp	w0, #0x0
  406edc:	b.eq	406f48 <__fxstatat@plt+0x43e8>  // b.none
  406ee0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406ee4:	add	x0, x0, #0x6e0
  406ee8:	ldrb	w0, [x0]
  406eec:	eor	w0, w0, #0x1
  406ef0:	and	w0, w0, #0xff
  406ef4:	cmp	w0, #0x0
  406ef8:	b.eq	406f48 <__fxstatat@plt+0x43e8>  // b.none
  406efc:	bl	40a294 <__fxstatat@plt+0x7734>
  406f00:	bl	40a464 <__fxstatat@plt+0x7904>
  406f04:	bl	407414 <__fxstatat@plt+0x48b4>
  406f08:	b	406f48 <__fxstatat@plt+0x43e8>
  406f0c:	bl	402ac0 <__errno_location@plt>
  406f10:	ldr	w0, [x0]
  406f14:	cmp	w0, #0x0
  406f18:	b.eq	406f50 <__fxstatat@plt+0x43f0>  // b.none
  406f1c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406f20:	add	x0, x0, #0x110
  406f24:	bl	402b20 <gettext@plt>
  406f28:	ldr	x2, [sp, #56]
  406f2c:	mov	x1, x0
  406f30:	ldrb	w0, [sp, #47]
  406f34:	bl	406948 <__fxstatat@plt+0x3de8>
  406f38:	bl	402ac0 <__errno_location@plt>
  406f3c:	ldr	w0, [x0]
  406f40:	cmp	w0, #0x4b
  406f44:	b.ne	406f58 <__fxstatat@plt+0x43f8>  // b.any
  406f48:	bl	403b5c <__fxstatat@plt+0xffc>
  406f4c:	b	406d50 <__fxstatat@plt+0x41f0>
  406f50:	nop
  406f54:	b	406f5c <__fxstatat@plt+0x43fc>
  406f58:	nop
  406f5c:	ldr	x0, [sp, #752]
  406f60:	bl	4027b0 <closedir@plt>
  406f64:	cmp	w0, #0x0
  406f68:	b.eq	406f88 <__fxstatat@plt+0x4428>  // b.none
  406f6c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  406f70:	add	x0, x0, #0x128
  406f74:	bl	402b20 <gettext@plt>
  406f78:	ldr	x2, [sp, #56]
  406f7c:	mov	x1, x0
  406f80:	ldrb	w0, [sp, #47]
  406f84:	bl	406948 <__fxstatat@plt+0x3de8>
  406f88:	bl	40a294 <__fxstatat@plt+0x7734>
  406f8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406f90:	add	x0, x0, #0x6e0
  406f94:	ldrb	w0, [x0]
  406f98:	cmp	w0, #0x0
  406f9c:	b.eq	406fac <__fxstatat@plt+0x444c>  // b.none
  406fa0:	mov	w1, #0x0                   	// #0
  406fa4:	ldr	x0, [sp, #56]
  406fa8:	bl	40885c <__fxstatat@plt+0x5cfc>
  406fac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406fb0:	add	x0, x0, #0x69c
  406fb4:	ldr	w0, [x0]
  406fb8:	cmp	w0, #0x0
  406fbc:	b.eq	406fd4 <__fxstatat@plt+0x4474>  // b.none
  406fc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406fc4:	add	x0, x0, #0x6ab
  406fc8:	ldrb	w0, [x0]
  406fcc:	cmp	w0, #0x0
  406fd0:	b.eq	407138 <__fxstatat@plt+0x45d8>  // b.none
  406fd4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406fd8:	add	x0, x0, #0x6bc
  406fdc:	ldrb	w0, [x0]
  406fe0:	cmp	w0, #0x0
  406fe4:	b.eq	407028 <__fxstatat@plt+0x44c8>  // b.none
  406fe8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  406fec:	add	x0, x0, #0x5f8
  406ff0:	ldr	x0, [x0]
  406ff4:	mov	x3, x0
  406ff8:	mov	x2, #0x2                   	// #2
  406ffc:	mov	x1, #0x1                   	// #1
  407000:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407004:	add	x0, x0, #0xe8
  407008:	bl	4024e0 <fwrite_unlocked@plt>
  40700c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407010:	add	x0, x0, #0x7d8
  407014:	ldr	x0, [x0]
  407018:	add	x1, x0, #0x2
  40701c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407020:	add	x0, x0, #0x7d8
  407024:	str	x1, [x0]
  407028:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40702c:	add	x0, x0, #0x140
  407030:	bl	402b20 <gettext@plt>
  407034:	str	x0, [sp, #728]
  407038:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40703c:	add	x0, x0, #0x5f8
  407040:	ldr	x0, [x0]
  407044:	mov	x1, x0
  407048:	ldr	x0, [sp, #728]
  40704c:	bl	402a40 <fputs_unlocked@plt>
  407050:	ldr	x0, [sp, #728]
  407054:	bl	402500 <strlen@plt>
  407058:	mov	x1, x0
  40705c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407060:	add	x0, x0, #0x7d8
  407064:	ldr	x0, [x0]
  407068:	add	x1, x1, x0
  40706c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407070:	add	x0, x0, #0x7d8
  407074:	str	x1, [x0]
  407078:	mov	w0, #0x20                  	// #32
  40707c:	bl	402770 <putchar_unlocked@plt>
  407080:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407084:	add	x0, x0, #0x7d8
  407088:	ldr	x0, [x0]
  40708c:	add	x1, x0, #0x1
  407090:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407094:	add	x0, x0, #0x7d8
  407098:	str	x1, [x0]
  40709c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4070a0:	add	x0, x0, #0x6ac
  4070a4:	ldr	w1, [x0]
  4070a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4070ac:	add	x0, x0, #0x6b0
  4070b0:	ldr	x2, [x0]
  4070b4:	add	x0, sp, #0x48
  4070b8:	mov	x4, x2
  4070bc:	mov	x3, #0x200                 	// #512
  4070c0:	mov	w2, w1
  4070c4:	mov	x1, x0
  4070c8:	ldr	x0, [sp, #776]
  4070cc:	bl	412264 <__fxstatat@plt+0xf704>
  4070d0:	str	x0, [sp, #728]
  4070d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4070d8:	add	x0, x0, #0x5f8
  4070dc:	ldr	x0, [x0]
  4070e0:	mov	x1, x0
  4070e4:	ldr	x0, [sp, #728]
  4070e8:	bl	402a40 <fputs_unlocked@plt>
  4070ec:	ldr	x0, [sp, #728]
  4070f0:	bl	402500 <strlen@plt>
  4070f4:	mov	x1, x0
  4070f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4070fc:	add	x0, x0, #0x7d8
  407100:	ldr	x0, [x0]
  407104:	add	x1, x1, x0
  407108:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40710c:	add	x0, x0, #0x7d8
  407110:	str	x1, [x0]
  407114:	mov	w0, #0xa                   	// #10
  407118:	bl	402770 <putchar_unlocked@plt>
  40711c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407120:	add	x0, x0, #0x7d8
  407124:	ldr	x0, [x0]
  407128:	add	x1, x0, #0x1
  40712c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407130:	add	x0, x0, #0x7d8
  407134:	str	x1, [x0]
  407138:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40713c:	add	x0, x0, #0x628
  407140:	ldr	x0, [x0]
  407144:	cmp	x0, #0x0
  407148:	b.eq	407150 <__fxstatat@plt+0x45f0>  // b.none
  40714c:	bl	40a464 <__fxstatat@plt+0x7904>
  407150:	ldr	x19, [sp, #16]
  407154:	ldp	x29, x30, [sp]
  407158:	add	sp, sp, #0x310
  40715c:	ret
  407160:	stp	x29, x30, [sp, #-48]!
  407164:	mov	x29, sp
  407168:	str	x0, [sp, #24]
  40716c:	mov	x0, #0x10                  	// #16
  407170:	bl	41a080 <__fxstatat@plt+0x17520>
  407174:	str	x0, [sp, #40]
  407178:	ldr	x0, [sp, #40]
  40717c:	ldr	x1, [sp, #24]
  407180:	str	x1, [x0]
  407184:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407188:	add	x0, x0, #0x6e8
  40718c:	ldr	x1, [x0]
  407190:	ldr	x0, [sp, #40]
  407194:	str	x1, [x0, #8]
  407198:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40719c:	add	x0, x0, #0x6e8
  4071a0:	ldr	x1, [sp, #40]
  4071a4:	str	x1, [x0]
  4071a8:	nop
  4071ac:	ldp	x29, x30, [sp], #48
  4071b0:	ret
  4071b4:	stp	x29, x30, [sp, #-48]!
  4071b8:	mov	x29, sp
  4071bc:	str	x0, [sp, #24]
  4071c0:	str	x1, [sp, #16]
  4071c4:	ldr	x0, [sp, #24]
  4071c8:	str	x0, [sp, #40]
  4071cc:	b	407200 <__fxstatat@plt+0x46a0>
  4071d0:	ldr	x0, [sp, #40]
  4071d4:	ldr	x0, [x0]
  4071d8:	mov	w2, #0x4                   	// #4
  4071dc:	ldr	x1, [sp, #16]
  4071e0:	bl	402950 <fnmatch@plt>
  4071e4:	cmp	w0, #0x0
  4071e8:	b.ne	4071f4 <__fxstatat@plt+0x4694>  // b.any
  4071ec:	mov	w0, #0x1                   	// #1
  4071f0:	b	407210 <__fxstatat@plt+0x46b0>
  4071f4:	ldr	x0, [sp, #40]
  4071f8:	ldr	x0, [x0, #8]
  4071fc:	str	x0, [sp, #40]
  407200:	ldr	x0, [sp, #40]
  407204:	cmp	x0, #0x0
  407208:	b.ne	4071d0 <__fxstatat@plt+0x4670>  // b.any
  40720c:	mov	w0, #0x0                   	// #0
  407210:	ldp	x29, x30, [sp], #48
  407214:	ret
  407218:	stp	x29, x30, [sp, #-32]!
  40721c:	mov	x29, sp
  407220:	str	x0, [sp, #24]
  407224:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407228:	add	x0, x0, #0x6e4
  40722c:	ldr	w0, [x0]
  407230:	cmp	w0, #0x2
  407234:	b.eq	407290 <__fxstatat@plt+0x4730>  // b.none
  407238:	ldr	x0, [sp, #24]
  40723c:	ldrb	w0, [x0]
  407240:	cmp	w0, #0x2e
  407244:	b.ne	407290 <__fxstatat@plt+0x4730>  // b.any
  407248:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40724c:	add	x0, x0, #0x6e4
  407250:	ldr	w0, [x0]
  407254:	cmp	w0, #0x0
  407258:	b.eq	4072e4 <__fxstatat@plt+0x4784>  // b.none
  40725c:	ldr	x0, [sp, #24]
  407260:	add	x0, x0, #0x1
  407264:	ldrb	w0, [x0]
  407268:	cmp	w0, #0x2e
  40726c:	b.ne	407278 <__fxstatat@plt+0x4718>  // b.any
  407270:	mov	x0, #0x2                   	// #2
  407274:	b	40727c <__fxstatat@plt+0x471c>
  407278:	mov	x0, #0x1                   	// #1
  40727c:	ldr	x1, [sp, #24]
  407280:	add	x0, x1, x0
  407284:	ldrb	w0, [x0]
  407288:	cmp	w0, #0x0
  40728c:	b.eq	4072e4 <__fxstatat@plt+0x4784>  // b.none
  407290:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407294:	add	x0, x0, #0x6e4
  407298:	ldr	w0, [x0]
  40729c:	cmp	w0, #0x0
  4072a0:	b.ne	4072c4 <__fxstatat@plt+0x4764>  // b.any
  4072a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4072a8:	add	x0, x0, #0x6f0
  4072ac:	ldr	x0, [x0]
  4072b0:	ldr	x1, [sp, #24]
  4072b4:	bl	4071b4 <__fxstatat@plt+0x4654>
  4072b8:	and	w0, w0, #0xff
  4072bc:	cmp	w0, #0x0
  4072c0:	b.ne	4072e4 <__fxstatat@plt+0x4784>  // b.any
  4072c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4072c8:	add	x0, x0, #0x6e8
  4072cc:	ldr	x0, [x0]
  4072d0:	ldr	x1, [sp, #24]
  4072d4:	bl	4071b4 <__fxstatat@plt+0x4654>
  4072d8:	and	w0, w0, #0xff
  4072dc:	cmp	w0, #0x0
  4072e0:	b.eq	4072ec <__fxstatat@plt+0x478c>  // b.none
  4072e4:	mov	w0, #0x1                   	// #1
  4072e8:	b	4072f0 <__fxstatat@plt+0x4790>
  4072ec:	mov	w0, #0x0                   	// #0
  4072f0:	and	w0, w0, #0x1
  4072f4:	and	w0, w0, #0xff
  4072f8:	ldp	x29, x30, [sp], #32
  4072fc:	ret
  407300:	sub	sp, sp, #0x10
  407304:	str	x0, [sp, #8]
  407308:	ldr	x0, [sp, #8]
  40730c:	add	sp, sp, #0x10
  407310:	ret
  407314:	stp	x29, x30, [sp, #-64]!
  407318:	mov	x29, sp
  40731c:	str	x0, [sp, #24]
  407320:	ldr	x0, [sp, #24]
  407324:	bl	4029d0 <cap_get_file@plt>
  407328:	str	x0, [sp, #56]
  40732c:	ldr	x0, [sp, #56]
  407330:	cmp	x0, #0x0
  407334:	b.ne	407340 <__fxstatat@plt+0x47e0>  // b.any
  407338:	mov	w0, #0x0                   	// #0
  40733c:	b	40738c <__fxstatat@plt+0x482c>
  407340:	mov	x1, #0x0                   	// #0
  407344:	ldr	x0, [sp, #56]
  407348:	bl	4024b0 <cap_to_text@plt>
  40734c:	str	x0, [sp, #48]
  407350:	ldr	x0, [sp, #56]
  407354:	bl	402a10 <cap_free@plt>
  407358:	ldr	x0, [sp, #48]
  40735c:	cmp	x0, #0x0
  407360:	b.ne	40736c <__fxstatat@plt+0x480c>  // b.any
  407364:	mov	w0, #0x0                   	// #0
  407368:	b	40738c <__fxstatat@plt+0x482c>
  40736c:	ldr	x0, [sp, #48]
  407370:	ldrb	w0, [x0]
  407374:	cmp	w0, #0x0
  407378:	cset	w0, ne  // ne = any
  40737c:	strb	w0, [sp, #47]
  407380:	ldr	x0, [sp, #48]
  407384:	bl	402a10 <cap_free@plt>
  407388:	ldrb	w0, [sp, #47]
  40738c:	ldp	x29, x30, [sp], #64
  407390:	ret
  407394:	stp	x29, x30, [sp, #-32]!
  407398:	mov	x29, sp
  40739c:	str	x0, [sp, #24]
  4073a0:	ldr	x0, [sp, #24]
  4073a4:	ldr	x0, [x0]
  4073a8:	bl	4028f0 <free@plt>
  4073ac:	ldr	x0, [sp, #24]
  4073b0:	ldr	x0, [x0, #8]
  4073b4:	bl	4028f0 <free@plt>
  4073b8:	ldr	x0, [sp, #24]
  4073bc:	ldr	x0, [x0, #16]
  4073c0:	bl	4028f0 <free@plt>
  4073c4:	ldr	x0, [sp, #24]
  4073c8:	ldr	x1, [x0, #160]
  4073cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4073d0:	add	x0, x0, #0x388
  4073d4:	cmp	x1, x0
  4073d8:	b.eq	407408 <__fxstatat@plt+0x48a8>  // b.none
  4073dc:	bl	403084 <__fxstatat@plt+0x524>
  4073e0:	and	w0, w0, #0xff
  4073e4:	cmp	w0, #0x0
  4073e8:	b.eq	4073fc <__fxstatat@plt+0x489c>  // b.none
  4073ec:	ldr	x0, [sp, #24]
  4073f0:	ldr	x0, [x0, #160]
  4073f4:	bl	4028f0 <free@plt>
  4073f8:	b	407408 <__fxstatat@plt+0x48a8>
  4073fc:	ldr	x0, [sp, #24]
  407400:	ldr	x0, [x0, #160]
  407404:	bl	419144 <__fxstatat@plt+0x165e4>
  407408:	nop
  40740c:	ldp	x29, x30, [sp], #32
  407410:	ret
  407414:	stp	x29, x30, [sp, #-32]!
  407418:	mov	x29, sp
  40741c:	str	xzr, [sp, #24]
  407420:	b	407458 <__fxstatat@plt+0x48f8>
  407424:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407428:	add	x0, x0, #0x638
  40742c:	ldr	x1, [x0]
  407430:	ldr	x0, [sp, #24]
  407434:	lsl	x0, x0, #3
  407438:	add	x0, x1, x0
  40743c:	ldr	x0, [x0]
  407440:	str	x0, [sp, #16]
  407444:	ldr	x0, [sp, #16]
  407448:	bl	407394 <__fxstatat@plt+0x4834>
  40744c:	ldr	x0, [sp, #24]
  407450:	add	x0, x0, #0x1
  407454:	str	x0, [sp, #24]
  407458:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40745c:	add	x0, x0, #0x628
  407460:	ldr	x0, [x0]
  407464:	ldr	x1, [sp, #24]
  407468:	cmp	x1, x0
  40746c:	b.cc	407424 <__fxstatat@plt+0x48c4>  // b.lo, b.ul, b.last
  407470:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407474:	add	x0, x0, #0x628
  407478:	str	xzr, [x0]
  40747c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407480:	add	x0, x0, #0x630
  407484:	strb	wzr, [x0]
  407488:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40748c:	add	x0, x0, #0x671
  407490:	strb	wzr, [x0]
  407494:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407498:	add	x0, x0, #0x674
  40749c:	str	wzr, [x0]
  4074a0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074a4:	add	x0, x0, #0x678
  4074a8:	str	wzr, [x0]
  4074ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074b0:	add	x0, x0, #0x67c
  4074b4:	str	wzr, [x0]
  4074b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074bc:	add	x0, x0, #0x684
  4074c0:	str	wzr, [x0]
  4074c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074c8:	add	x0, x0, #0x688
  4074cc:	str	wzr, [x0]
  4074d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074d4:	add	x0, x0, #0x68c
  4074d8:	str	wzr, [x0]
  4074dc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074e0:	add	x0, x0, #0x680
  4074e4:	str	wzr, [x0]
  4074e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074ec:	add	x0, x0, #0x690
  4074f0:	str	wzr, [x0]
  4074f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4074f8:	add	x0, x0, #0x694
  4074fc:	str	wzr, [x0]
  407500:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407504:	add	x0, x0, #0x698
  407508:	str	wzr, [x0]
  40750c:	nop
  407510:	ldp	x29, x30, [sp], #32
  407514:	ret
  407518:	stp	x29, x30, [sp, #-32]!
  40751c:	mov	x29, sp
  407520:	str	w0, [sp, #28]
  407524:	ldr	w0, [sp, #28]
  407528:	cmp	w0, #0x16
  40752c:	b.eq	407550 <__fxstatat@plt+0x49f0>  // b.none
  407530:	ldr	w0, [sp, #28]
  407534:	cmp	w0, #0x26
  407538:	b.eq	407550 <__fxstatat@plt+0x49f0>  // b.none
  40753c:	ldr	w0, [sp, #28]
  407540:	bl	403064 <__fxstatat@plt+0x504>
  407544:	and	w0, w0, #0xff
  407548:	cmp	w0, #0x0
  40754c:	b.eq	407558 <__fxstatat@plt+0x49f8>  // b.none
  407550:	mov	w0, #0x1                   	// #1
  407554:	b	40755c <__fxstatat@plt+0x49fc>
  407558:	mov	w0, #0x0                   	// #0
  40755c:	and	w0, w0, #0x1
  407560:	and	w0, w0, #0xff
  407564:	ldp	x29, x30, [sp], #32
  407568:	ret
  40756c:	stp	x29, x30, [sp, #-64]!
  407570:	mov	x29, sp
  407574:	str	x0, [sp, #40]
  407578:	str	x1, [sp, #32]
  40757c:	strb	w2, [sp, #31]
  407580:	ldr	x0, [sp, #32]
  407584:	ldr	x1, [x0, #24]
  407588:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40758c:	add	x0, x0, #0x728
  407590:	ldr	x0, [x0]
  407594:	cmp	x1, x0
  407598:	b.ne	4075b4 <__fxstatat@plt+0x4a54>  // b.any
  40759c:	bl	402ac0 <__errno_location@plt>
  4075a0:	mov	x1, x0
  4075a4:	mov	w0, #0x5f                  	// #95
  4075a8:	str	w0, [x1]
  4075ac:	mov	w0, #0xffffffff            	// #-1
  4075b0:	b	407630 <__fxstatat@plt+0x4ad0>
  4075b4:	str	wzr, [sp, #60]
  4075b8:	ldrb	w0, [sp, #31]
  4075bc:	cmp	w0, #0x0
  4075c0:	b.eq	4075dc <__fxstatat@plt+0x4a7c>  // b.none
  4075c4:	ldr	x0, [sp, #32]
  4075c8:	add	x0, x0, #0xa0
  4075cc:	mov	x1, x0
  4075d0:	ldr	x0, [sp, #40]
  4075d4:	bl	4191d8 <__fxstatat@plt+0x16678>
  4075d8:	b	4075f0 <__fxstatat@plt+0x4a90>
  4075dc:	ldr	x0, [sp, #32]
  4075e0:	add	x0, x0, #0xa0
  4075e4:	mov	x1, x0
  4075e8:	ldr	x0, [sp, #40]
  4075ec:	bl	419204 <__fxstatat@plt+0x166a4>
  4075f0:	str	w0, [sp, #60]
  4075f4:	ldr	w0, [sp, #60]
  4075f8:	cmp	w0, #0x0
  4075fc:	b.ge	40762c <__fxstatat@plt+0x4acc>  // b.tcont
  407600:	bl	402ac0 <__errno_location@plt>
  407604:	ldr	w0, [x0]
  407608:	bl	407518 <__fxstatat@plt+0x49b8>
  40760c:	and	w0, w0, #0xff
  407610:	cmp	w0, #0x0
  407614:	b.eq	40762c <__fxstatat@plt+0x4acc>  // b.none
  407618:	ldr	x0, [sp, #32]
  40761c:	ldr	x1, [x0, #24]
  407620:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  407624:	add	x0, x0, #0x728
  407628:	str	x1, [x0]
  40762c:	ldr	w0, [sp, #60]
  407630:	ldp	x29, x30, [sp], #64
  407634:	ret
  407638:	stp	x29, x30, [sp, #-48]!
  40763c:	mov	x29, sp
  407640:	str	x0, [sp, #24]
  407644:	str	x1, [sp, #16]
  407648:	ldr	x0, [sp, #16]
  40764c:	ldr	x1, [x0, #24]
  407650:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  407654:	add	x0, x0, #0x730
  407658:	ldr	x0, [x0]
  40765c:	cmp	x1, x0
  407660:	b.ne	40767c <__fxstatat@plt+0x4b1c>  // b.any
  407664:	bl	402ac0 <__errno_location@plt>
  407668:	mov	x1, x0
  40766c:	mov	w0, #0x5f                  	// #95
  407670:	str	w0, [x1]
  407674:	mov	w0, #0x0                   	// #0
  407678:	b	4076d8 <__fxstatat@plt+0x4b78>
  40767c:	bl	402ac0 <__errno_location@plt>
  407680:	str	wzr, [x0]
  407684:	ldr	x0, [sp, #16]
  407688:	add	x0, x0, #0x18
  40768c:	mov	x1, x0
  407690:	ldr	x0, [sp, #24]
  407694:	bl	40f774 <__fxstatat@plt+0xcc14>
  407698:	str	w0, [sp, #44]
  40769c:	ldr	w0, [sp, #44]
  4076a0:	cmp	w0, #0x0
  4076a4:	b.gt	4076d4 <__fxstatat@plt+0x4b74>
  4076a8:	bl	402ac0 <__errno_location@plt>
  4076ac:	ldr	w0, [x0]
  4076b0:	bl	407518 <__fxstatat@plt+0x49b8>
  4076b4:	and	w0, w0, #0xff
  4076b8:	cmp	w0, #0x0
  4076bc:	b.eq	4076d4 <__fxstatat@plt+0x4b74>  // b.none
  4076c0:	ldr	x0, [sp, #16]
  4076c4:	ldr	x1, [x0, #24]
  4076c8:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4076cc:	add	x0, x0, #0x730
  4076d0:	str	x1, [x0]
  4076d4:	ldr	w0, [sp, #44]
  4076d8:	ldp	x29, x30, [sp], #48
  4076dc:	ret
  4076e0:	stp	x29, x30, [sp, #-48]!
  4076e4:	mov	x29, sp
  4076e8:	str	x0, [sp, #24]
  4076ec:	str	x1, [sp, #16]
  4076f0:	ldr	x0, [sp, #16]
  4076f4:	ldr	x1, [x0, #24]
  4076f8:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4076fc:	add	x0, x0, #0x738
  407700:	ldr	x0, [x0]
  407704:	cmp	x1, x0
  407708:	b.ne	407724 <__fxstatat@plt+0x4bc4>  // b.any
  40770c:	bl	402ac0 <__errno_location@plt>
  407710:	mov	x1, x0
  407714:	mov	w0, #0x5f                  	// #95
  407718:	str	w0, [x1]
  40771c:	mov	w0, #0x0                   	// #0
  407720:	b	407774 <__fxstatat@plt+0x4c14>
  407724:	ldr	x0, [sp, #24]
  407728:	bl	407314 <__fxstatat@plt+0x47b4>
  40772c:	strb	w0, [sp, #47]
  407730:	ldrb	w0, [sp, #47]
  407734:	eor	w0, w0, #0x1
  407738:	and	w0, w0, #0xff
  40773c:	cmp	w0, #0x0
  407740:	b.eq	407770 <__fxstatat@plt+0x4c10>  // b.none
  407744:	bl	402ac0 <__errno_location@plt>
  407748:	ldr	w0, [x0]
  40774c:	bl	407518 <__fxstatat@plt+0x49b8>
  407750:	and	w0, w0, #0xff
  407754:	cmp	w0, #0x0
  407758:	b.eq	407770 <__fxstatat@plt+0x4c10>  // b.none
  40775c:	ldr	x0, [sp, #16]
  407760:	ldr	x1, [x0, #24]
  407764:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  407768:	add	x0, x0, #0x738
  40776c:	str	x1, [x0]
  407770:	ldrb	w0, [sp, #47]
  407774:	ldp	x29, x30, [sp], #48
  407778:	ret
  40777c:	stp	x29, x30, [sp, #-48]!
  407780:	mov	x29, sp
  407784:	str	x0, [sp, #24]
  407788:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40778c:	add	x0, x0, #0x700
  407790:	ldr	x1, [x0]
  407794:	add	x0, sp, #0x20
  407798:	mov	x4, x1
  40779c:	mov	x3, #0xffffffffffffffff    	// #-1
  4077a0:	ldr	x2, [sp, #24]
  4077a4:	mov	x1, #0x2                   	// #2
  4077a8:	bl	4184c8 <__fxstatat@plt+0x15968>
  4077ac:	str	x0, [sp, #40]
  4077b0:	ldr	x0, [sp, #24]
  4077b4:	ldrb	w1, [x0]
  4077b8:	ldrb	w0, [sp, #32]
  4077bc:	cmp	w1, w0
  4077c0:	b.ne	4077dc <__fxstatat@plt+0x4c7c>  // b.any
  4077c4:	ldr	x0, [sp, #24]
  4077c8:	bl	402500 <strlen@plt>
  4077cc:	mov	x1, x0
  4077d0:	ldr	x0, [sp, #40]
  4077d4:	cmp	x0, x1
  4077d8:	b.eq	4077e4 <__fxstatat@plt+0x4c84>  // b.none
  4077dc:	mov	w0, #0x1                   	// #1
  4077e0:	b	4077e8 <__fxstatat@plt+0x4c88>
  4077e4:	mov	w0, #0x0                   	// #0
  4077e8:	and	w0, w0, #0x1
  4077ec:	and	w0, w0, #0xff
  4077f0:	ldp	x29, x30, [sp], #48
  4077f4:	ret
  4077f8:	sub	sp, sp, #0x390
  4077fc:	stp	x29, x30, [sp]
  407800:	mov	x29, sp
  407804:	str	x19, [sp, #16]
  407808:	str	x0, [x29, #56]
  40780c:	str	w1, [x29, #52]
  407810:	str	x2, [x29, #40]
  407814:	strb	w3, [x29, #51]
  407818:	str	x4, [x29, #32]
  40781c:	str	xzr, [x29, #904]
  407820:	ldrb	w0, [x29, #51]
  407824:	eor	w0, w0, #0x1
  407828:	and	w0, w0, #0xff
  40782c:	cmp	w0, #0x0
  407830:	b.ne	407860 <__fxstatat@plt+0x4d00>  // b.any
  407834:	ldr	x0, [x29, #40]
  407838:	cmp	x0, #0x0
  40783c:	b.eq	407860 <__fxstatat@plt+0x4d00>  // b.none
  407840:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  407844:	add	x3, x0, #0x150
  407848:	mov	w2, #0xc2f                 	// #3119
  40784c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  407850:	add	x1, x0, #0x768
  407854:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407858:	add	x0, x0, #0x148
  40785c:	bl	402ab0 <__assert_fail@plt>
  407860:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407864:	add	x0, x0, #0x628
  407868:	ldr	x1, [x0]
  40786c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407870:	add	x0, x0, #0x620
  407874:	ldr	x0, [x0]
  407878:	cmp	x1, x0
  40787c:	b.ne	4078d4 <__fxstatat@plt+0x4d74>  // b.any
  407880:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407884:	add	x0, x0, #0x618
  407888:	ldr	x3, [x0]
  40788c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407890:	add	x0, x0, #0x620
  407894:	ldr	x0, [x0]
  407898:	mov	x2, #0x170                 	// #368
  40789c:	mov	x1, x0
  4078a0:	mov	x0, x3
  4078a4:	bl	419ec4 <__fxstatat@plt+0x17364>
  4078a8:	mov	x1, x0
  4078ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4078b0:	add	x0, x0, #0x618
  4078b4:	str	x1, [x0]
  4078b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4078bc:	add	x0, x0, #0x620
  4078c0:	ldr	x0, [x0]
  4078c4:	lsl	x1, x0, #1
  4078c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4078cc:	add	x0, x0, #0x620
  4078d0:	str	x1, [x0]
  4078d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4078d8:	add	x0, x0, #0x618
  4078dc:	ldr	x2, [x0]
  4078e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4078e4:	add	x0, x0, #0x628
  4078e8:	ldr	x1, [x0]
  4078ec:	mov	x0, x1
  4078f0:	lsl	x0, x0, #1
  4078f4:	add	x0, x0, x1
  4078f8:	lsl	x0, x0, #3
  4078fc:	sub	x0, x0, x1
  407900:	lsl	x0, x0, #3
  407904:	add	x0, x2, x0
  407908:	str	x0, [x29, #872]
  40790c:	mov	x2, #0xb8                  	// #184
  407910:	mov	w1, #0x0                   	// #0
  407914:	ldr	x0, [x29, #872]
  407918:	bl	402740 <memset@plt>
  40791c:	ldr	x0, [x29, #872]
  407920:	ldr	x1, [x29, #40]
  407924:	str	x1, [x0, #32]
  407928:	ldr	x0, [x29, #872]
  40792c:	ldr	w1, [x29, #52]
  407930:	str	w1, [x0, #152]
  407934:	ldr	x0, [x29, #872]
  407938:	mov	w1, #0xffffffff            	// #-1
  40793c:	str	w1, [x0, #180]
  407940:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407944:	add	x0, x0, #0x630
  407948:	ldrb	w0, [x0]
  40794c:	eor	w0, w0, #0x1
  407950:	and	w0, w0, #0xff
  407954:	cmp	w0, #0x0
  407958:	b.eq	4079a8 <__fxstatat@plt+0x4e48>  // b.none
  40795c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407960:	add	x0, x0, #0x631
  407964:	ldrb	w0, [x0]
  407968:	cmp	w0, #0x0
  40796c:	b.eq	4079a8 <__fxstatat@plt+0x4e48>  // b.none
  407970:	ldr	x0, [x29, #56]
  407974:	bl	40777c <__fxstatat@plt+0x4c1c>
  407978:	and	w0, w0, #0xff
  40797c:	mov	w1, w0
  407980:	ldr	x0, [x29, #872]
  407984:	str	w1, [x0, #180]
  407988:	ldr	x0, [x29, #872]
  40798c:	ldr	w0, [x0, #180]
  407990:	cmp	w0, #0x0
  407994:	b.eq	4079a8 <__fxstatat@plt+0x4e48>  // b.none
  407998:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40799c:	add	x0, x0, #0x630
  4079a0:	mov	w1, #0x1                   	// #1
  4079a4:	strb	w1, [x0]
  4079a8:	ldrb	w0, [x29, #51]
  4079ac:	cmp	w0, #0x0
  4079b0:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  4079b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4079b8:	add	x0, x0, #0x6c5
  4079bc:	ldrb	w0, [x0]
  4079c0:	cmp	w0, #0x0
  4079c4:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  4079c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4079cc:	add	x0, x0, #0x730
  4079d0:	ldrb	w0, [x0]
  4079d4:	cmp	w0, #0x0
  4079d8:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  4079dc:	ldr	w0, [x29, #52]
  4079e0:	cmp	w0, #0x3
  4079e4:	b.ne	407a38 <__fxstatat@plt+0x4ed8>  // b.any
  4079e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4079ec:	add	x0, x0, #0x6c4
  4079f0:	ldrb	w0, [x0]
  4079f4:	cmp	w0, #0x0
  4079f8:	b.eq	407a38 <__fxstatat@plt+0x4ed8>  // b.none
  4079fc:	mov	w0, #0x13                  	// #19
  407a00:	bl	403994 <__fxstatat@plt+0xe34>
  407a04:	and	w0, w0, #0xff
  407a08:	cmp	w0, #0x0
  407a0c:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407a10:	mov	w0, #0x12                  	// #18
  407a14:	bl	403994 <__fxstatat@plt+0xe34>
  407a18:	and	w0, w0, #0xff
  407a1c:	cmp	w0, #0x0
  407a20:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407a24:	mov	w0, #0x14                  	// #20
  407a28:	bl	403994 <__fxstatat@plt+0xe34>
  407a2c:	and	w0, w0, #0xff
  407a30:	cmp	w0, #0x0
  407a34:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407a38:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407a3c:	add	x0, x0, #0x6d9
  407a40:	ldrb	w0, [x0]
  407a44:	cmp	w0, #0x0
  407a48:	b.ne	407a60 <__fxstatat@plt+0x4f00>  // b.any
  407a4c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407a50:	add	x0, x0, #0x731
  407a54:	ldrb	w0, [x0]
  407a58:	cmp	w0, #0x0
  407a5c:	b.eq	407ab4 <__fxstatat@plt+0x4f54>  // b.none
  407a60:	ldr	w0, [x29, #52]
  407a64:	cmp	w0, #0x6
  407a68:	b.eq	407a78 <__fxstatat@plt+0x4f18>  // b.none
  407a6c:	ldr	w0, [x29, #52]
  407a70:	cmp	w0, #0x0
  407a74:	b.ne	407ab4 <__fxstatat@plt+0x4f54>  // b.any
  407a78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407a7c:	add	x0, x0, #0x6dc
  407a80:	ldr	w0, [x0]
  407a84:	cmp	w0, #0x5
  407a88:	b.eq	407b84 <__fxstatat@plt+0x5024>  // b.none
  407a8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407a90:	add	x0, x0, #0x648
  407a94:	ldrb	w0, [x0]
  407a98:	cmp	w0, #0x0
  407a9c:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407aa0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407aa4:	add	x0, x0, #0x6d8
  407aa8:	ldrb	w0, [x0]
  407aac:	cmp	w0, #0x0
  407ab0:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407ab4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407ab8:	add	x0, x0, #0x6d9
  407abc:	ldrb	w0, [x0]
  407ac0:	cmp	w0, #0x0
  407ac4:	b.eq	407ad4 <__fxstatat@plt+0x4f74>  // b.none
  407ac8:	ldr	x0, [x29, #40]
  407acc:	cmp	x0, #0x0
  407ad0:	b.eq	407b84 <__fxstatat@plt+0x5024>  // b.none
  407ad4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407ad8:	add	x0, x0, #0x731
  407adc:	ldrb	w0, [x0]
  407ae0:	cmp	w0, #0x0
  407ae4:	b.eq	4085bc <__fxstatat@plt+0x5a5c>  // b.none
  407ae8:	ldr	w0, [x29, #52]
  407aec:	cmp	w0, #0x0
  407af0:	b.eq	407b84 <__fxstatat@plt+0x5024>  // b.none
  407af4:	ldrb	w0, [x29, #51]
  407af8:	cmp	w0, #0x0
  407afc:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407b00:	ldr	w0, [x29, #52]
  407b04:	cmp	w0, #0x5
  407b08:	b.ne	4085bc <__fxstatat@plt+0x5a5c>  // b.any
  407b0c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407b10:	add	x0, x0, #0x6c0
  407b14:	ldr	w0, [x0]
  407b18:	cmp	w0, #0x3
  407b1c:	b.eq	407b84 <__fxstatat@plt+0x5024>  // b.none
  407b20:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407b24:	add	x0, x0, #0x6c4
  407b28:	ldrb	w0, [x0]
  407b2c:	cmp	w0, #0x0
  407b30:	b.eq	4085bc <__fxstatat@plt+0x5a5c>  // b.none
  407b34:	mov	w0, #0xe                   	// #14
  407b38:	bl	403994 <__fxstatat@plt+0xe34>
  407b3c:	and	w0, w0, #0xff
  407b40:	cmp	w0, #0x0
  407b44:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407b48:	mov	w0, #0x10                  	// #16
  407b4c:	bl	403994 <__fxstatat@plt+0xe34>
  407b50:	and	w0, w0, #0xff
  407b54:	cmp	w0, #0x0
  407b58:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407b5c:	mov	w0, #0x11                  	// #17
  407b60:	bl	403994 <__fxstatat@plt+0xe34>
  407b64:	and	w0, w0, #0xff
  407b68:	cmp	w0, #0x0
  407b6c:	b.ne	407b84 <__fxstatat@plt+0x5024>  // b.any
  407b70:	mov	w0, #0x15                  	// #21
  407b74:	bl	403994 <__fxstatat@plt+0xe34>
  407b78:	and	w0, w0, #0xff
  407b7c:	cmp	w0, #0x0
  407b80:	b.eq	4085bc <__fxstatat@plt+0x5a5c>  // b.none
  407b84:	ldr	x0, [x29, #56]
  407b88:	ldrb	w0, [x0]
  407b8c:	cmp	w0, #0x2f
  407b90:	b.eq	407ba4 <__fxstatat@plt+0x5044>  // b.none
  407b94:	ldr	x0, [x29, #32]
  407b98:	ldrb	w0, [x0]
  407b9c:	cmp	w0, #0x0
  407ba0:	b.ne	407bb0 <__fxstatat@plt+0x5050>  // b.any
  407ba4:	ldr	x0, [x29, #56]
  407ba8:	str	x0, [x29, #896]
  407bac:	b	407c00 <__fxstatat@plt+0x50a0>
  407bb0:	ldr	x0, [x29, #56]
  407bb4:	bl	402500 <strlen@plt>
  407bb8:	mov	x19, x0
  407bbc:	ldr	x0, [x29, #32]
  407bc0:	bl	402500 <strlen@plt>
  407bc4:	add	x0, x19, x0
  407bc8:	add	x0, x0, #0x2
  407bcc:	add	x0, x0, #0xf
  407bd0:	lsr	x0, x0, #4
  407bd4:	lsl	x0, x0, #4
  407bd8:	sub	sp, sp, x0
  407bdc:	mov	x0, sp
  407be0:	add	x0, x0, #0xf
  407be4:	lsr	x0, x0, #4
  407be8:	lsl	x0, x0, #4
  407bec:	str	x0, [x29, #896]
  407bf0:	ldr	x2, [x29, #56]
  407bf4:	ldr	x1, [x29, #32]
  407bf8:	ldr	x0, [x29, #896]
  407bfc:	bl	40d404 <__fxstatat@plt+0xa8a4>
  407c00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407c04:	add	x0, x0, #0x6c5
  407c08:	ldrb	w0, [x0]
  407c0c:	cmp	w0, #0x0
  407c10:	b.eq	407c58 <__fxstatat@plt+0x50f8>  // b.none
  407c14:	mov	w1, #0x2                   	// #2
  407c18:	ldr	x0, [x29, #896]
  407c1c:	bl	40eb34 <__fxstatat@plt+0xbfd4>
  407c20:	mov	x1, x0
  407c24:	ldr	x0, [x29, #872]
  407c28:	str	x1, [x0, #16]
  407c2c:	ldr	x0, [x29, #872]
  407c30:	ldr	x0, [x0, #16]
  407c34:	cmp	x0, #0x0
  407c38:	b.ne	407c58 <__fxstatat@plt+0x50f8>  // b.any
  407c3c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407c40:	add	x0, x0, #0xf0
  407c44:	bl	402b20 <gettext@plt>
  407c48:	ldr	x2, [x29, #896]
  407c4c:	mov	x1, x0
  407c50:	ldrb	w0, [x29, #51]
  407c54:	bl	406948 <__fxstatat@plt+0x3de8>
  407c58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407c5c:	add	x0, x0, #0x6dc
  407c60:	ldr	w0, [x0]
  407c64:	cmp	w0, #0x4
  407c68:	b.hi	407c78 <__fxstatat@plt+0x5118>  // b.pmore
  407c6c:	cmp	w0, #0x3
  407c70:	b.cs	407ca4 <__fxstatat@plt+0x5144>  // b.hs, b.nlast
  407c74:	b	407d38 <__fxstatat@plt+0x51d8>
  407c78:	cmp	w0, #0x5
  407c7c:	b.ne	407d38 <__fxstatat@plt+0x51d8>  // b.any
  407c80:	ldr	x0, [x29, #872]
  407c84:	add	x0, x0, #0x18
  407c88:	mov	x1, x0
  407c8c:	ldr	x0, [x29, #896]
  407c90:	bl	420610 <_obstack_memory_used@@Base+0x4bc0>
  407c94:	str	w0, [x29, #888]
  407c98:	mov	w0, #0x1                   	// #1
  407c9c:	strb	w0, [x29, #895]
  407ca0:	b	407d64 <__fxstatat@plt+0x5204>
  407ca4:	ldrb	w0, [x29, #51]
  407ca8:	cmp	w0, #0x0
  407cac:	b.eq	407d38 <__fxstatat@plt+0x51d8>  // b.none
  407cb0:	ldr	x0, [x29, #872]
  407cb4:	add	x0, x0, #0x18
  407cb8:	mov	x1, x0
  407cbc:	ldr	x0, [x29, #896]
  407cc0:	bl	420610 <_obstack_memory_used@@Base+0x4bc0>
  407cc4:	str	w0, [x29, #888]
  407cc8:	mov	w0, #0x1                   	// #1
  407ccc:	strb	w0, [x29, #895]
  407cd0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407cd4:	add	x0, x0, #0x6dc
  407cd8:	ldr	w0, [x0]
  407cdc:	cmp	w0, #0x3
  407ce0:	b.eq	407d58 <__fxstatat@plt+0x51f8>  // b.none
  407ce4:	ldr	w0, [x29, #888]
  407ce8:	cmp	w0, #0x0
  407cec:	b.ge	407d08 <__fxstatat@plt+0x51a8>  // b.tcont
  407cf0:	bl	402ac0 <__errno_location@plt>
  407cf4:	ldr	w0, [x0]
  407cf8:	cmp	w0, #0x2
  407cfc:	cset	w0, eq  // eq = none
  407d00:	and	w0, w0, #0xff
  407d04:	b	407d20 <__fxstatat@plt+0x51c0>
  407d08:	ldr	x0, [x29, #872]
  407d0c:	ldr	w0, [x0, #40]
  407d10:	and	w0, w0, #0xf000
  407d14:	cmp	w0, #0x4, lsl #12
  407d18:	cset	w0, ne  // ne = any
  407d1c:	and	w0, w0, #0xff
  407d20:	strb	w0, [x29, #871]
  407d24:	ldrb	w0, [x29, #871]
  407d28:	eor	w0, w0, #0x1
  407d2c:	and	w0, w0, #0xff
  407d30:	cmp	w0, #0x0
  407d34:	b.ne	407d60 <__fxstatat@plt+0x5200>  // b.any
  407d38:	ldr	x0, [x29, #872]
  407d3c:	add	x0, x0, #0x18
  407d40:	mov	x1, x0
  407d44:	ldr	x0, [x29, #896]
  407d48:	bl	420630 <_obstack_memory_used@@Base+0x4be0>
  407d4c:	str	w0, [x29, #888]
  407d50:	strb	wzr, [x29, #895]
  407d54:	b	407d64 <__fxstatat@plt+0x5204>
  407d58:	nop
  407d5c:	b	407d64 <__fxstatat@plt+0x5204>
  407d60:	nop
  407d64:	ldr	w0, [x29, #888]
  407d68:	cmp	w0, #0x0
  407d6c:	b.eq	407dd8 <__fxstatat@plt+0x5278>  // b.none
  407d70:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407d74:	add	x0, x0, #0x180
  407d78:	bl	402b20 <gettext@plt>
  407d7c:	ldr	x2, [x29, #896]
  407d80:	mov	x1, x0
  407d84:	ldrb	w0, [x29, #51]
  407d88:	bl	406948 <__fxstatat@plt+0x3de8>
  407d8c:	ldrb	w0, [x29, #51]
  407d90:	cmp	w0, #0x0
  407d94:	b.eq	407da0 <__fxstatat@plt+0x5240>  // b.none
  407d98:	mov	x0, #0x0                   	// #0
  407d9c:	b	408644 <__fxstatat@plt+0x5ae4>
  407da0:	ldr	x0, [x29, #56]
  407da4:	bl	41a234 <__fxstatat@plt+0x176d4>
  407da8:	mov	x1, x0
  407dac:	ldr	x0, [x29, #872]
  407db0:	str	x1, [x0]
  407db4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407db8:	add	x0, x0, #0x628
  407dbc:	ldr	x0, [x0]
  407dc0:	add	x1, x0, #0x1
  407dc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407dc8:	add	x0, x0, #0x628
  407dcc:	str	x1, [x0]
  407dd0:	mov	x0, #0x0                   	// #0
  407dd4:	b	408644 <__fxstatat@plt+0x5ae4>
  407dd8:	ldr	x0, [x29, #872]
  407ddc:	mov	w1, #0x1                   	// #1
  407de0:	strb	w1, [x0, #168]
  407de4:	ldr	w0, [x29, #52]
  407de8:	cmp	w0, #0x5
  407dec:	b.eq	407e04 <__fxstatat@plt+0x52a4>  // b.none
  407df0:	ldr	x0, [x29, #872]
  407df4:	ldr	w0, [x0, #40]
  407df8:	and	w0, w0, #0xf000
  407dfc:	cmp	w0, #0x8, lsl #12
  407e00:	b.ne	407e44 <__fxstatat@plt+0x52e4>  // b.any
  407e04:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407e08:	add	x0, x0, #0x6c4
  407e0c:	ldrb	w0, [x0]
  407e10:	cmp	w0, #0x0
  407e14:	b.eq	407e44 <__fxstatat@plt+0x52e4>  // b.none
  407e18:	mov	w0, #0x15                  	// #21
  407e1c:	bl	403994 <__fxstatat@plt+0xe34>
  407e20:	and	w0, w0, #0xff
  407e24:	cmp	w0, #0x0
  407e28:	b.eq	407e44 <__fxstatat@plt+0x52e4>  // b.none
  407e2c:	ldr	x1, [x29, #872]
  407e30:	ldr	x0, [x29, #896]
  407e34:	bl	4076e0 <__fxstatat@plt+0x4b80>
  407e38:	and	w1, w0, #0xff
  407e3c:	ldr	x0, [x29, #872]
  407e40:	strb	w1, [x0, #176]
  407e44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407e48:	add	x0, x0, #0x69c
  407e4c:	ldr	w0, [x0]
  407e50:	cmp	w0, #0x0
  407e54:	b.eq	407e6c <__fxstatat@plt+0x530c>  // b.none
  407e58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407e5c:	add	x0, x0, #0x670
  407e60:	ldrb	w0, [x0]
  407e64:	cmp	w0, #0x0
  407e68:	b.eq	408060 <__fxstatat@plt+0x5500>  // b.none
  407e6c:	strb	wzr, [x29, #887]
  407e70:	strb	wzr, [x29, #886]
  407e74:	ldrb	w2, [x29, #895]
  407e78:	ldr	x1, [x29, #872]
  407e7c:	ldr	x0, [x29, #896]
  407e80:	bl	40756c <__fxstatat@plt+0x4a0c>
  407e84:	str	w0, [x29, #864]
  407e88:	ldr	w0, [x29, #864]
  407e8c:	lsr	w0, w0, #31
  407e90:	and	w0, w0, #0xff
  407e94:	str	w0, [x29, #888]
  407e98:	ldr	w0, [x29, #888]
  407e9c:	cmp	w0, #0x0
  407ea0:	b.ne	407f04 <__fxstatat@plt+0x53a4>  // b.any
  407ea4:	bl	403084 <__fxstatat@plt+0x524>
  407ea8:	and	w0, w0, #0xff
  407eac:	cmp	w0, #0x0
  407eb0:	b.eq	407edc <__fxstatat@plt+0x537c>  // b.none
  407eb4:	ldr	x0, [x29, #872]
  407eb8:	ldr	x0, [x0, #160]
  407ebc:	mov	x1, x0
  407ec0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407ec4:	add	x0, x0, #0x198
  407ec8:	bl	4028b0 <strcmp@plt>
  407ecc:	cmp	w0, #0x0
  407ed0:	cset	w0, ne  // ne = any
  407ed4:	strb	w0, [x29, #887]
  407ed8:	b	407f40 <__fxstatat@plt+0x53e0>
  407edc:	ldr	x0, [x29, #872]
  407ee0:	ldr	x0, [x0, #160]
  407ee4:	mov	x1, x0
  407ee8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  407eec:	add	x0, x0, #0x1a0
  407ef0:	bl	4028b0 <strcmp@plt>
  407ef4:	cmp	w0, #0x0
  407ef8:	cset	w0, ne  // ne = any
  407efc:	strb	w0, [x29, #887]
  407f00:	b	407f40 <__fxstatat@plt+0x53e0>
  407f04:	ldr	x0, [x29, #872]
  407f08:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407f0c:	add	x1, x1, #0x388
  407f10:	str	x1, [x0, #160]
  407f14:	bl	402ac0 <__errno_location@plt>
  407f18:	ldr	w0, [x0]
  407f1c:	bl	403064 <__fxstatat@plt+0x504>
  407f20:	and	w0, w0, #0xff
  407f24:	cmp	w0, #0x0
  407f28:	b.ne	407f3c <__fxstatat@plt+0x53dc>  // b.any
  407f2c:	bl	402ac0 <__errno_location@plt>
  407f30:	ldr	w0, [x0]
  407f34:	cmp	w0, #0x3d
  407f38:	b.ne	407f40 <__fxstatat@plt+0x53e0>  // b.any
  407f3c:	str	wzr, [x29, #888]
  407f40:	ldr	w0, [x29, #888]
  407f44:	cmp	w0, #0x0
  407f48:	b.ne	407f90 <__fxstatat@plt+0x5430>  // b.any
  407f4c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407f50:	add	x0, x0, #0x69c
  407f54:	ldr	w0, [x0]
  407f58:	cmp	w0, #0x0
  407f5c:	b.ne	407f90 <__fxstatat@plt+0x5430>  // b.any
  407f60:	ldr	x1, [x29, #872]
  407f64:	ldr	x0, [x29, #896]
  407f68:	bl	407638 <__fxstatat@plt+0x4ad8>
  407f6c:	str	w0, [x29, #860]
  407f70:	ldr	w0, [x29, #860]
  407f74:	lsr	w0, w0, #31
  407f78:	and	w0, w0, #0xff
  407f7c:	str	w0, [x29, #888]
  407f80:	ldr	w0, [x29, #860]
  407f84:	cmp	w0, #0x0
  407f88:	cset	w0, gt
  407f8c:	strb	w0, [x29, #886]
  407f90:	ldrb	w0, [x29, #887]
  407f94:	cmp	w0, #0x0
  407f98:	b.ne	407fa8 <__fxstatat@plt+0x5448>  // b.any
  407f9c:	ldrb	w0, [x29, #886]
  407fa0:	cmp	w0, #0x0
  407fa4:	b.eq	407fd8 <__fxstatat@plt+0x5478>  // b.none
  407fa8:	ldrb	w0, [x29, #887]
  407fac:	cmp	w0, #0x0
  407fb0:	b.eq	407fd0 <__fxstatat@plt+0x5470>  // b.none
  407fb4:	ldrb	w0, [x29, #886]
  407fb8:	eor	w0, w0, #0x1
  407fbc:	and	w0, w0, #0xff
  407fc0:	cmp	w0, #0x0
  407fc4:	b.eq	407fd0 <__fxstatat@plt+0x5470>  // b.none
  407fc8:	mov	w0, #0x1                   	// #1
  407fcc:	b	407fdc <__fxstatat@plt+0x547c>
  407fd0:	mov	w0, #0x2                   	// #2
  407fd4:	b	407fdc <__fxstatat@plt+0x547c>
  407fd8:	mov	w0, #0x0                   	// #0
  407fdc:	ldr	x1, [x29, #872]
  407fe0:	str	w0, [x1, #172]
  407fe4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  407fe8:	add	x0, x0, #0x671
  407fec:	ldrb	w0, [x0]
  407ff0:	mov	w1, w0
  407ff4:	ldr	x0, [x29, #872]
  407ff8:	ldr	w0, [x0, #172]
  407ffc:	cmp	w0, #0x0
  408000:	cset	w0, ne  // ne = any
  408004:	and	w0, w0, #0xff
  408008:	orr	w0, w1, w0
  40800c:	cmp	w0, #0x0
  408010:	cset	w0, ne  // ne = any
  408014:	and	w1, w0, #0xff
  408018:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40801c:	add	x0, x0, #0x671
  408020:	strb	w1, [x0]
  408024:	ldr	w0, [x29, #888]
  408028:	cmp	w0, #0x0
  40802c:	b.eq	408060 <__fxstatat@plt+0x5500>  // b.none
  408030:	bl	402ac0 <__errno_location@plt>
  408034:	ldr	w19, [x0]
  408038:	ldr	x2, [x29, #896]
  40803c:	mov	w1, #0x3                   	// #3
  408040:	mov	w0, #0x0                   	// #0
  408044:	bl	418d20 <__fxstatat@plt+0x161c0>
  408048:	mov	x3, x0
  40804c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  408050:	add	x2, x0, #0x7b8
  408054:	mov	w1, w19
  408058:	mov	w0, #0x0                   	// #0
  40805c:	bl	402550 <error@plt>
  408060:	ldr	x0, [x29, #872]
  408064:	ldr	w0, [x0, #40]
  408068:	and	w0, w0, #0xf000
  40806c:	cmp	w0, #0xa, lsl #12
  408070:	b.ne	408170 <__fxstatat@plt+0x5610>  // b.any
  408074:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408078:	add	x0, x0, #0x69c
  40807c:	ldr	w0, [x0]
  408080:	cmp	w0, #0x0
  408084:	b.eq	40809c <__fxstatat@plt+0x553c>  // b.none
  408088:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40808c:	add	x0, x0, #0x6d8
  408090:	ldrb	w0, [x0]
  408094:	cmp	w0, #0x0
  408098:	b.eq	408170 <__fxstatat@plt+0x5610>  // b.none
  40809c:	ldrb	w2, [x29, #51]
  4080a0:	ldr	x1, [x29, #872]
  4080a4:	ldr	x0, [x29, #896]
  4080a8:	bl	4086f4 <__fxstatat@plt+0x5b94>
  4080ac:	ldr	x0, [x29, #872]
  4080b0:	ldr	x0, [x0, #8]
  4080b4:	mov	x1, x0
  4080b8:	ldr	x0, [x29, #896]
  4080bc:	bl	408760 <__fxstatat@plt+0x5c00>
  4080c0:	str	x0, [x29, #848]
  4080c4:	ldr	x0, [x29, #848]
  4080c8:	cmp	x0, #0x0
  4080cc:	b.eq	408104 <__fxstatat@plt+0x55a4>  // b.none
  4080d0:	ldr	x0, [x29, #872]
  4080d4:	ldr	w0, [x0, #180]
  4080d8:	cmp	w0, #0x0
  4080dc:	b.ne	408104 <__fxstatat@plt+0x55a4>  // b.any
  4080e0:	ldr	x0, [x29, #872]
  4080e4:	ldr	x0, [x0, #8]
  4080e8:	bl	40777c <__fxstatat@plt+0x4c1c>
  4080ec:	and	w0, w0, #0xff
  4080f0:	cmp	w0, #0x0
  4080f4:	b.eq	408104 <__fxstatat@plt+0x55a4>  // b.none
  4080f8:	ldr	x0, [x29, #872]
  4080fc:	mov	w1, #0xffffffff            	// #-1
  408100:	str	w1, [x0, #180]
  408104:	ldr	x0, [x29, #848]
  408108:	cmp	x0, #0x0
  40810c:	b.eq	408168 <__fxstatat@plt+0x5608>  // b.none
  408110:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408114:	add	x0, x0, #0x6c0
  408118:	ldr	w0, [x0]
  40811c:	cmp	w0, #0x1
  408120:	b.hi	408138 <__fxstatat@plt+0x55d8>  // b.pmore
  408124:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408128:	add	x0, x0, #0x6d8
  40812c:	ldrb	w0, [x0]
  408130:	cmp	w0, #0x0
  408134:	b.eq	408168 <__fxstatat@plt+0x5608>  // b.none
  408138:	add	x0, x29, #0x48
  40813c:	mov	x1, x0
  408140:	ldr	x0, [x29, #848]
  408144:	bl	420610 <_obstack_memory_used@@Base+0x4bc0>
  408148:	cmp	w0, #0x0
  40814c:	b.ne	408168 <__fxstatat@plt+0x5608>  // b.any
  408150:	ldr	x0, [x29, #872]
  408154:	mov	w1, #0x1                   	// #1
  408158:	strb	w1, [x0, #169]
  40815c:	ldr	w1, [x29, #88]
  408160:	ldr	x0, [x29, #872]
  408164:	str	w1, [x0, #156]
  408168:	ldr	x0, [x29, #848]
  40816c:	bl	4028f0 <free@plt>
  408170:	ldr	x0, [x29, #872]
  408174:	ldr	w0, [x0, #40]
  408178:	and	w0, w0, #0xf000
  40817c:	cmp	w0, #0xa, lsl #12
  408180:	b.ne	408194 <__fxstatat@plt+0x5634>  // b.any
  408184:	ldr	x0, [x29, #872]
  408188:	mov	w1, #0x6                   	// #6
  40818c:	str	w1, [x0, #152]
  408190:	b	4081fc <__fxstatat@plt+0x569c>
  408194:	ldr	x0, [x29, #872]
  408198:	ldr	w0, [x0, #40]
  40819c:	and	w0, w0, #0xf000
  4081a0:	cmp	w0, #0x4, lsl #12
  4081a4:	b.ne	4081f0 <__fxstatat@plt+0x5690>  // b.any
  4081a8:	ldrb	w0, [x29, #51]
  4081ac:	cmp	w0, #0x0
  4081b0:	b.eq	4081e0 <__fxstatat@plt+0x5680>  // b.none
  4081b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4081b8:	add	x0, x0, #0x6e1
  4081bc:	ldrb	w0, [x0]
  4081c0:	eor	w0, w0, #0x1
  4081c4:	and	w0, w0, #0xff
  4081c8:	cmp	w0, #0x0
  4081cc:	b.eq	4081e0 <__fxstatat@plt+0x5680>  // b.none
  4081d0:	ldr	x0, [x29, #872]
  4081d4:	mov	w1, #0x9                   	// #9
  4081d8:	str	w1, [x0, #152]
  4081dc:	b	4081fc <__fxstatat@plt+0x569c>
  4081e0:	ldr	x0, [x29, #872]
  4081e4:	mov	w1, #0x3                   	// #3
  4081e8:	str	w1, [x0, #152]
  4081ec:	b	4081fc <__fxstatat@plt+0x569c>
  4081f0:	ldr	x0, [x29, #872]
  4081f4:	mov	w1, #0x5                   	// #5
  4081f8:	str	w1, [x0, #152]
  4081fc:	ldr	x0, [x29, #872]
  408200:	ldr	x0, [x0, #88]
  408204:	str	x0, [x29, #904]
  408208:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40820c:	add	x0, x0, #0x69c
  408210:	ldr	w0, [x0]
  408214:	cmp	w0, #0x0
  408218:	b.eq	408230 <__fxstatat@plt+0x56d0>  // b.none
  40821c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408220:	add	x0, x0, #0x6ab
  408224:	ldrb	w0, [x0]
  408228:	cmp	w0, #0x0
  40822c:	b.eq	408298 <__fxstatat@plt+0x5738>  // b.none
  408230:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408234:	add	x0, x0, #0x6ac
  408238:	ldr	w1, [x0]
  40823c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408240:	add	x0, x0, #0x6b0
  408244:	ldr	x2, [x0]
  408248:	add	x0, x29, #0x48
  40824c:	mov	x4, x2
  408250:	mov	x3, #0x200                 	// #512
  408254:	mov	w2, w1
  408258:	mov	x1, x0
  40825c:	ldr	x0, [x29, #904]
  408260:	bl	412264 <__fxstatat@plt+0xf704>
  408264:	mov	w1, #0x0                   	// #0
  408268:	bl	413bf4 <__fxstatat@plt+0x11094>
  40826c:	str	w0, [x29, #844]
  408270:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408274:	add	x0, x0, #0x678
  408278:	ldr	w0, [x0]
  40827c:	ldr	w1, [x29, #844]
  408280:	cmp	w1, w0
  408284:	b.le	408298 <__fxstatat@plt+0x5738>
  408288:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40828c:	add	x0, x0, #0x678
  408290:	ldr	w1, [x29, #844]
  408294:	str	w1, [x0]
  408298:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40829c:	add	x0, x0, #0x69c
  4082a0:	ldr	w0, [x0]
  4082a4:	cmp	w0, #0x0
  4082a8:	b.ne	408390 <__fxstatat@plt+0x5830>  // b.any
  4082ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4082b0:	add	x0, x0, #0x38a
  4082b4:	ldrb	w0, [x0]
  4082b8:	cmp	w0, #0x0
  4082bc:	b.eq	4082f8 <__fxstatat@plt+0x5798>  // b.none
  4082c0:	ldr	x0, [x29, #872]
  4082c4:	ldr	w0, [x0, #48]
  4082c8:	bl	40a9b4 <__fxstatat@plt+0x7e54>
  4082cc:	str	w0, [x29, #840]
  4082d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4082d4:	add	x0, x0, #0x684
  4082d8:	ldr	w0, [x0]
  4082dc:	ldr	w1, [x29, #840]
  4082e0:	cmp	w1, w0
  4082e4:	b.le	4082f8 <__fxstatat@plt+0x5798>
  4082e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4082ec:	add	x0, x0, #0x684
  4082f0:	ldr	w1, [x29, #840]
  4082f4:	str	w1, [x0]
  4082f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4082fc:	add	x0, x0, #0x38b
  408300:	ldrb	w0, [x0]
  408304:	cmp	w0, #0x0
  408308:	b.eq	408344 <__fxstatat@plt+0x57e4>  // b.none
  40830c:	ldr	x0, [x29, #872]
  408310:	ldr	w0, [x0, #52]
  408314:	bl	40a9f4 <__fxstatat@plt+0x7e94>
  408318:	str	w0, [x29, #836]
  40831c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408320:	add	x0, x0, #0x688
  408324:	ldr	w0, [x0]
  408328:	ldr	w1, [x29, #836]
  40832c:	cmp	w1, w0
  408330:	b.le	408344 <__fxstatat@plt+0x57e4>
  408334:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408338:	add	x0, x0, #0x688
  40833c:	ldr	w1, [x29, #836]
  408340:	str	w1, [x0]
  408344:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408348:	add	x0, x0, #0x6a9
  40834c:	ldrb	w0, [x0]
  408350:	cmp	w0, #0x0
  408354:	b.eq	408390 <__fxstatat@plt+0x5830>  // b.none
  408358:	ldr	x0, [x29, #872]
  40835c:	ldr	w0, [x0, #48]
  408360:	bl	40a9b4 <__fxstatat@plt+0x7e54>
  408364:	str	w0, [x29, #832]
  408368:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40836c:	add	x0, x0, #0x68c
  408370:	ldr	w0, [x0]
  408374:	ldr	w1, [x29, #832]
  408378:	cmp	w1, w0
  40837c:	b.le	408390 <__fxstatat@plt+0x5830>
  408380:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408384:	add	x0, x0, #0x68c
  408388:	ldr	w1, [x29, #832]
  40838c:	str	w1, [x0]
  408390:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408394:	add	x0, x0, #0x670
  408398:	ldrb	w0, [x0]
  40839c:	cmp	w0, #0x0
  4083a0:	b.eq	4083dc <__fxstatat@plt+0x587c>  // b.none
  4083a4:	ldr	x0, [x29, #872]
  4083a8:	ldr	x0, [x0, #160]
  4083ac:	bl	402500 <strlen@plt>
  4083b0:	str	w0, [x29, #828]
  4083b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4083b8:	add	x0, x0, #0x680
  4083bc:	ldr	w0, [x0]
  4083c0:	ldr	w1, [x29, #828]
  4083c4:	cmp	w1, w0
  4083c8:	b.le	4083dc <__fxstatat@plt+0x587c>
  4083cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4083d0:	add	x0, x0, #0x680
  4083d4:	ldr	w1, [x29, #828]
  4083d8:	str	w1, [x0]
  4083dc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4083e0:	add	x0, x0, #0x69c
  4083e4:	ldr	w0, [x0]
  4083e8:	cmp	w0, #0x0
  4083ec:	b.ne	4085bc <__fxstatat@plt+0x5a5c>  // b.any
  4083f0:	ldr	x0, [x29, #872]
  4083f4:	ldr	w0, [x0, #44]
  4083f8:	mov	w0, w0
  4083fc:	add	x1, x29, #0x308
  408400:	bl	41354c <__fxstatat@plt+0x109ec>
  408404:	bl	402500 <strlen@plt>
  408408:	str	w0, [x29, #824]
  40840c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408410:	add	x0, x0, #0x67c
  408414:	ldr	w0, [x0]
  408418:	ldr	w1, [x29, #824]
  40841c:	cmp	w1, w0
  408420:	b.le	408434 <__fxstatat@plt+0x58d4>
  408424:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408428:	add	x0, x0, #0x67c
  40842c:	ldr	w1, [x29, #824]
  408430:	str	w1, [x0]
  408434:	ldr	x0, [x29, #872]
  408438:	ldr	w0, [x0, #40]
  40843c:	and	w0, w0, #0xf000
  408440:	cmp	w0, #0x2, lsl #12
  408444:	b.eq	40845c <__fxstatat@plt+0x58fc>  // b.none
  408448:	ldr	x0, [x29, #872]
  40844c:	ldr	w0, [x0, #40]
  408450:	and	w0, w0, #0xf000
  408454:	cmp	w0, #0x6, lsl #12
  408458:	b.ne	40853c <__fxstatat@plt+0x59dc>  // b.any
  40845c:	ldr	x0, [x29, #872]
  408460:	ldr	x0, [x0, #56]
  408464:	bl	402840 <gnu_dev_major@plt>
  408468:	mov	w0, w0
  40846c:	add	x1, x29, #0x2f0
  408470:	bl	41354c <__fxstatat@plt+0x109ec>
  408474:	bl	402500 <strlen@plt>
  408478:	str	w0, [x29, #808]
  40847c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408480:	add	x0, x0, #0x690
  408484:	ldr	w0, [x0]
  408488:	ldr	w1, [x29, #808]
  40848c:	cmp	w1, w0
  408490:	b.le	4084a4 <__fxstatat@plt+0x5944>
  408494:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408498:	add	x0, x0, #0x690
  40849c:	ldr	w1, [x29, #808]
  4084a0:	str	w1, [x0]
  4084a4:	ldr	x0, [x29, #872]
  4084a8:	ldr	x0, [x0, #56]
  4084ac:	bl	402980 <gnu_dev_minor@plt>
  4084b0:	mov	w0, w0
  4084b4:	add	x1, x29, #0x2f0
  4084b8:	bl	41354c <__fxstatat@plt+0x109ec>
  4084bc:	bl	402500 <strlen@plt>
  4084c0:	str	w0, [x29, #808]
  4084c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4084c8:	add	x0, x0, #0x694
  4084cc:	ldr	w0, [x0]
  4084d0:	ldr	w1, [x29, #808]
  4084d4:	cmp	w1, w0
  4084d8:	b.le	4084ec <__fxstatat@plt+0x598c>
  4084dc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4084e0:	add	x0, x0, #0x694
  4084e4:	ldr	w1, [x29, #808]
  4084e8:	str	w1, [x0]
  4084ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4084f0:	add	x0, x0, #0x690
  4084f4:	ldr	w0, [x0]
  4084f8:	add	w1, w0, #0x2
  4084fc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408500:	add	x0, x0, #0x694
  408504:	ldr	w0, [x0]
  408508:	add	w0, w1, w0
  40850c:	str	w0, [x29, #808]
  408510:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408514:	add	x0, x0, #0x698
  408518:	ldr	w0, [x0]
  40851c:	ldr	w1, [x29, #808]
  408520:	cmp	w1, w0
  408524:	b.le	4085b8 <__fxstatat@plt+0x5a58>
  408528:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40852c:	add	x0, x0, #0x698
  408530:	ldr	w1, [x29, #808]
  408534:	str	w1, [x0]
  408538:	b	4085b8 <__fxstatat@plt+0x5a58>
  40853c:	ldr	x0, [x29, #872]
  408540:	ldr	x0, [x0, #72]
  408544:	bl	407300 <__fxstatat@plt+0x47a0>
  408548:	str	x0, [x29, #816]
  40854c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408550:	add	x0, x0, #0x6b8
  408554:	ldr	w1, [x0]
  408558:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40855c:	add	x0, x0, #0x390
  408560:	ldr	x2, [x0]
  408564:	add	x0, x29, #0x48
  408568:	mov	x4, x2
  40856c:	mov	x3, #0x1                   	// #1
  408570:	mov	w2, w1
  408574:	mov	x1, x0
  408578:	ldr	x0, [x29, #816]
  40857c:	bl	412264 <__fxstatat@plt+0xf704>
  408580:	mov	w1, #0x0                   	// #0
  408584:	bl	413bf4 <__fxstatat@plt+0x11094>
  408588:	str	w0, [x29, #812]
  40858c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408590:	add	x0, x0, #0x698
  408594:	ldr	w0, [x0]
  408598:	ldr	w1, [x29, #812]
  40859c:	cmp	w1, w0
  4085a0:	b.le	4085bc <__fxstatat@plt+0x5a5c>
  4085a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4085a8:	add	x0, x0, #0x698
  4085ac:	ldr	w1, [x29, #812]
  4085b0:	str	w1, [x0]
  4085b4:	b	4085bc <__fxstatat@plt+0x5a5c>
  4085b8:	nop
  4085bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4085c0:	add	x0, x0, #0x6d9
  4085c4:	ldrb	w0, [x0]
  4085c8:	cmp	w0, #0x0
  4085cc:	b.eq	408610 <__fxstatat@plt+0x5ab0>  // b.none
  4085d0:	ldr	x0, [x29, #872]
  4085d4:	ldr	x0, [x0, #32]
  4085d8:	add	x1, x29, #0x2d8
  4085dc:	bl	41354c <__fxstatat@plt+0x109ec>
  4085e0:	bl	402500 <strlen@plt>
  4085e4:	str	w0, [x29, #804]
  4085e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4085ec:	add	x0, x0, #0x674
  4085f0:	ldr	w0, [x0]
  4085f4:	ldr	w1, [x29, #804]
  4085f8:	cmp	w1, w0
  4085fc:	b.le	408610 <__fxstatat@plt+0x5ab0>
  408600:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408604:	add	x0, x0, #0x674
  408608:	ldr	w1, [x29, #804]
  40860c:	str	w1, [x0]
  408610:	ldr	x0, [x29, #56]
  408614:	bl	41a234 <__fxstatat@plt+0x176d4>
  408618:	mov	x1, x0
  40861c:	ldr	x0, [x29, #872]
  408620:	str	x1, [x0]
  408624:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408628:	add	x0, x0, #0x628
  40862c:	ldr	x0, [x0]
  408630:	add	x1, x0, #0x1
  408634:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408638:	add	x0, x0, #0x628
  40863c:	str	x1, [x0]
  408640:	ldr	x0, [x29, #904]
  408644:	mov	sp, x29
  408648:	ldr	x19, [sp, #16]
  40864c:	ldp	x29, x30, [sp]
  408650:	add	sp, sp, #0x390
  408654:	ret
  408658:	sub	sp, sp, #0x10
  40865c:	str	x0, [sp, #8]
  408660:	ldr	x0, [sp, #8]
  408664:	ldr	w0, [x0, #152]
  408668:	cmp	w0, #0x3
  40866c:	b.eq	408680 <__fxstatat@plt+0x5b20>  // b.none
  408670:	ldr	x0, [sp, #8]
  408674:	ldr	w0, [x0, #152]
  408678:	cmp	w0, #0x9
  40867c:	b.ne	408688 <__fxstatat@plt+0x5b28>  // b.any
  408680:	mov	w0, #0x1                   	// #1
  408684:	b	40868c <__fxstatat@plt+0x5b2c>
  408688:	mov	w0, #0x0                   	// #0
  40868c:	and	w0, w0, #0x1
  408690:	and	w0, w0, #0xff
  408694:	add	sp, sp, #0x10
  408698:	ret
  40869c:	sub	sp, sp, #0x10
  4086a0:	str	x0, [sp, #8]
  4086a4:	ldr	x0, [sp, #8]
  4086a8:	ldr	w0, [x0, #152]
  4086ac:	cmp	w0, #0x3
  4086b0:	b.eq	4086d8 <__fxstatat@plt+0x5b78>  // b.none
  4086b4:	ldr	x0, [sp, #8]
  4086b8:	ldr	w0, [x0, #152]
  4086bc:	cmp	w0, #0x9
  4086c0:	b.eq	4086d8 <__fxstatat@plt+0x5b78>  // b.none
  4086c4:	ldr	x0, [sp, #8]
  4086c8:	ldr	w0, [x0, #156]
  4086cc:	and	w0, w0, #0xf000
  4086d0:	cmp	w0, #0x4, lsl #12
  4086d4:	b.ne	4086e0 <__fxstatat@plt+0x5b80>  // b.any
  4086d8:	mov	w0, #0x1                   	// #1
  4086dc:	b	4086e4 <__fxstatat@plt+0x5b84>
  4086e0:	mov	w0, #0x0                   	// #0
  4086e4:	and	w0, w0, #0x1
  4086e8:	and	w0, w0, #0xff
  4086ec:	add	sp, sp, #0x10
  4086f0:	ret
  4086f4:	stp	x29, x30, [sp, #-48]!
  4086f8:	mov	x29, sp
  4086fc:	str	x0, [sp, #40]
  408700:	str	x1, [sp, #32]
  408704:	strb	w2, [sp, #31]
  408708:	ldr	x0, [sp, #32]
  40870c:	ldr	x0, [x0, #72]
  408710:	mov	x1, x0
  408714:	ldr	x0, [sp, #40]
  408718:	bl	40e054 <__fxstatat@plt+0xb4f4>
  40871c:	mov	x1, x0
  408720:	ldr	x0, [sp, #32]
  408724:	str	x1, [x0, #8]
  408728:	ldr	x0, [sp, #32]
  40872c:	ldr	x0, [x0, #8]
  408730:	cmp	x0, #0x0
  408734:	b.ne	408754 <__fxstatat@plt+0x5bf4>  // b.any
  408738:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40873c:	add	x0, x0, #0x1b0
  408740:	bl	402b20 <gettext@plt>
  408744:	ldr	x2, [sp, #40]
  408748:	mov	x1, x0
  40874c:	ldrb	w0, [sp, #31]
  408750:	bl	406948 <__fxstatat@plt+0x3de8>
  408754:	nop
  408758:	ldp	x29, x30, [sp], #48
  40875c:	ret
  408760:	stp	x29, x30, [sp, #-48]!
  408764:	mov	x29, sp
  408768:	str	x0, [sp, #24]
  40876c:	str	x1, [sp, #16]
  408770:	ldr	x0, [sp, #16]
  408774:	cmp	x0, #0x0
  408778:	b.ne	408784 <__fxstatat@plt+0x5c24>  // b.any
  40877c:	mov	x0, #0x0                   	// #0
  408780:	b	408828 <__fxstatat@plt+0x5cc8>
  408784:	ldr	x0, [sp, #16]
  408788:	ldrb	w0, [x0]
  40878c:	cmp	w0, #0x2f
  408790:	b.ne	4087a0 <__fxstatat@plt+0x5c40>  // b.any
  408794:	ldr	x0, [sp, #16]
  408798:	bl	41a234 <__fxstatat@plt+0x176d4>
  40879c:	b	408828 <__fxstatat@plt+0x5cc8>
  4087a0:	ldr	x0, [sp, #24]
  4087a4:	bl	40f51c <__fxstatat@plt+0xc9bc>
  4087a8:	str	x0, [sp, #40]
  4087ac:	ldr	x0, [sp, #40]
  4087b0:	cmp	x0, #0x0
  4087b4:	b.ne	4087c4 <__fxstatat@plt+0x5c64>  // b.any
  4087b8:	ldr	x0, [sp, #16]
  4087bc:	bl	41a234 <__fxstatat@plt+0x176d4>
  4087c0:	b	408828 <__fxstatat@plt+0x5cc8>
  4087c4:	ldr	x0, [sp, #16]
  4087c8:	bl	402500 <strlen@plt>
  4087cc:	mov	x1, x0
  4087d0:	ldr	x0, [sp, #40]
  4087d4:	add	x0, x1, x0
  4087d8:	add	x0, x0, #0x2
  4087dc:	bl	41a080 <__fxstatat@plt+0x17520>
  4087e0:	str	x0, [sp, #32]
  4087e4:	ldr	x0, [sp, #40]
  4087e8:	sub	x0, x0, #0x1
  4087ec:	ldr	x1, [sp, #24]
  4087f0:	add	x0, x1, x0
  4087f4:	ldrb	w0, [x0]
  4087f8:	cmp	w0, #0x2f
  4087fc:	b.eq	40880c <__fxstatat@plt+0x5cac>  // b.none
  408800:	ldr	x0, [sp, #40]
  408804:	add	x0, x0, #0x1
  408808:	str	x0, [sp, #40]
  40880c:	ldr	x2, [sp, #40]
  408810:	ldr	x1, [sp, #24]
  408814:	ldr	x0, [sp, #32]
  408818:	bl	402880 <stpncpy@plt>
  40881c:	ldr	x1, [sp, #16]
  408820:	bl	402990 <strcpy@plt>
  408824:	ldr	x0, [sp, #32]
  408828:	ldp	x29, x30, [sp], #48
  40882c:	ret
  408830:	stp	x29, x30, [sp, #-48]!
  408834:	mov	x29, sp
  408838:	str	x0, [sp, #24]
  40883c:	ldr	x0, [sp, #24]
  408840:	bl	40f678 <__fxstatat@plt+0xcb18>
  408844:	str	x0, [sp, #40]
  408848:	ldr	x0, [sp, #40]
  40884c:	bl	402d7c <__fxstatat@plt+0x21c>
  408850:	and	w0, w0, #0xff
  408854:	ldp	x29, x30, [sp], #48
  408858:	ret
  40885c:	stp	x29, x30, [sp, #-80]!
  408860:	mov	x29, sp
  408864:	str	x0, [sp, #24]
  408868:	strb	w1, [sp, #23]
  40886c:	ldr	x0, [sp, #24]
  408870:	cmp	x0, #0x0
  408874:	cset	w0, ne  // ne = any
  408878:	strb	w0, [sp, #63]
  40887c:	ldr	x0, [sp, #24]
  408880:	cmp	x0, #0x0
  408884:	b.eq	4088ac <__fxstatat@plt+0x5d4c>  // b.none
  408888:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40888c:	add	x0, x0, #0x610
  408890:	ldr	x0, [x0]
  408894:	cmp	x0, #0x0
  408898:	b.eq	4088ac <__fxstatat@plt+0x5d4c>  // b.none
  40889c:	mov	w2, #0x0                   	// #0
  4088a0:	ldr	x1, [sp, #24]
  4088a4:	mov	x0, #0x0                   	// #0
  4088a8:	bl	4069a0 <__fxstatat@plt+0x3e40>
  4088ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4088b0:	add	x0, x0, #0x628
  4088b4:	ldr	x0, [x0]
  4088b8:	str	x0, [sp, #72]
  4088bc:	b	4089c0 <__fxstatat@plt+0x5e60>
  4088c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4088c4:	add	x0, x0, #0x638
  4088c8:	ldr	x1, [x0]
  4088cc:	ldr	x0, [sp, #72]
  4088d0:	lsl	x0, x0, #3
  4088d4:	add	x0, x1, x0
  4088d8:	ldr	x0, [x0]
  4088dc:	str	x0, [sp, #40]
  4088e0:	ldr	x0, [sp, #40]
  4088e4:	bl	408658 <__fxstatat@plt+0x5af8>
  4088e8:	and	w0, w0, #0xff
  4088ec:	cmp	w0, #0x0
  4088f0:	b.eq	4089c0 <__fxstatat@plt+0x5e60>  // b.none
  4088f4:	ldrb	w0, [sp, #63]
  4088f8:	eor	w0, w0, #0x1
  4088fc:	and	w0, w0, #0xff
  408900:	cmp	w0, #0x0
  408904:	b.ne	408928 <__fxstatat@plt+0x5dc8>  // b.any
  408908:	ldr	x0, [sp, #40]
  40890c:	ldr	x0, [x0]
  408910:	bl	408830 <__fxstatat@plt+0x5cd0>
  408914:	and	w0, w0, #0xff
  408918:	eor	w0, w0, #0x1
  40891c:	and	w0, w0, #0xff
  408920:	cmp	w0, #0x0
  408924:	b.eq	4089c0 <__fxstatat@plt+0x5e60>  // b.none
  408928:	ldr	x0, [sp, #24]
  40892c:	cmp	x0, #0x0
  408930:	b.eq	408948 <__fxstatat@plt+0x5de8>  // b.none
  408934:	ldr	x0, [sp, #40]
  408938:	ldr	x0, [x0]
  40893c:	ldrb	w0, [x0]
  408940:	cmp	w0, #0x2f
  408944:	b.ne	40896c <__fxstatat@plt+0x5e0c>  // b.any
  408948:	ldr	x0, [sp, #40]
  40894c:	ldr	x3, [x0]
  408950:	ldr	x0, [sp, #40]
  408954:	ldr	x0, [x0, #8]
  408958:	ldrb	w2, [sp, #23]
  40895c:	mov	x1, x0
  408960:	mov	x0, x3
  408964:	bl	4069a0 <__fxstatat@plt+0x3e40>
  408968:	b	4089a8 <__fxstatat@plt+0x5e48>
  40896c:	ldr	x0, [sp, #40]
  408970:	ldr	x0, [x0]
  408974:	mov	x2, #0x0                   	// #0
  408978:	mov	x1, x0
  40897c:	ldr	x0, [sp, #24]
  408980:	bl	40fcd8 <__fxstatat@plt+0xd178>
  408984:	str	x0, [sp, #32]
  408988:	ldr	x0, [sp, #40]
  40898c:	ldr	x0, [x0, #8]
  408990:	ldrb	w2, [sp, #23]
  408994:	mov	x1, x0
  408998:	ldr	x0, [sp, #32]
  40899c:	bl	4069a0 <__fxstatat@plt+0x3e40>
  4089a0:	ldr	x0, [sp, #32]
  4089a4:	bl	4028f0 <free@plt>
  4089a8:	ldr	x0, [sp, #40]
  4089ac:	ldr	w0, [x0, #152]
  4089b0:	cmp	w0, #0x9
  4089b4:	b.ne	4089c0 <__fxstatat@plt+0x5e60>  // b.any
  4089b8:	ldr	x0, [sp, #40]
  4089bc:	bl	407394 <__fxstatat@plt+0x4834>
  4089c0:	ldr	x0, [sp, #72]
  4089c4:	sub	x1, x0, #0x1
  4089c8:	str	x1, [sp, #72]
  4089cc:	cmp	x0, #0x0
  4089d0:	b.ne	4088c0 <__fxstatat@plt+0x5d60>  // b.any
  4089d4:	str	xzr, [sp, #72]
  4089d8:	str	xzr, [sp, #64]
  4089dc:	b	408a50 <__fxstatat@plt+0x5ef0>
  4089e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4089e4:	add	x0, x0, #0x638
  4089e8:	ldr	x1, [x0]
  4089ec:	ldr	x0, [sp, #72]
  4089f0:	lsl	x0, x0, #3
  4089f4:	add	x0, x1, x0
  4089f8:	ldr	x0, [x0]
  4089fc:	str	x0, [sp, #48]
  408a00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408a04:	add	x0, x0, #0x638
  408a08:	ldr	x1, [x0]
  408a0c:	ldr	x0, [sp, #64]
  408a10:	lsl	x0, x0, #3
  408a14:	add	x0, x1, x0
  408a18:	ldr	x1, [sp, #48]
  408a1c:	str	x1, [x0]
  408a20:	ldr	x0, [sp, #48]
  408a24:	ldr	w0, [x0, #152]
  408a28:	cmp	w0, #0x9
  408a2c:	cset	w0, ne  // ne = any
  408a30:	and	w0, w0, #0xff
  408a34:	and	x0, x0, #0xff
  408a38:	ldr	x1, [sp, #64]
  408a3c:	add	x0, x1, x0
  408a40:	str	x0, [sp, #64]
  408a44:	ldr	x0, [sp, #72]
  408a48:	add	x0, x0, #0x1
  408a4c:	str	x0, [sp, #72]
  408a50:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408a54:	add	x0, x0, #0x628
  408a58:	ldr	x0, [x0]
  408a5c:	ldr	x1, [sp, #72]
  408a60:	cmp	x1, x0
  408a64:	b.cc	4089e0 <__fxstatat@plt+0x5e80>  // b.lo, b.ul, b.last
  408a68:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  408a6c:	add	x0, x0, #0x628
  408a70:	ldr	x1, [sp, #64]
  408a74:	str	x1, [x0]
  408a78:	nop
  408a7c:	ldp	x29, x30, [sp], #80
  408a80:	ret
  408a84:	stp	x29, x30, [sp, #-80]!
  408a88:	mov	x29, sp
  408a8c:	stp	x19, x20, [sp, #16]
  408a90:	str	x21, [sp, #32]
  408a94:	str	x0, [sp, #56]
  408a98:	str	x1, [sp, #48]
  408a9c:	bl	402ac0 <__errno_location@plt>
  408aa0:	str	wzr, [x0]
  408aa4:	ldr	x1, [sp, #48]
  408aa8:	ldr	x0, [sp, #56]
  408aac:	bl	402a50 <strcoll@plt>
  408ab0:	str	w0, [sp, #76]
  408ab4:	bl	402ac0 <__errno_location@plt>
  408ab8:	ldr	w0, [x0]
  408abc:	cmp	w0, #0x0
  408ac0:	b.eq	408b28 <__fxstatat@plt+0x5fc8>  // b.none
  408ac4:	bl	402ac0 <__errno_location@plt>
  408ac8:	ldr	w19, [x0]
  408acc:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  408ad0:	add	x0, x0, #0x1d0
  408ad4:	bl	402b20 <gettext@plt>
  408ad8:	mov	x20, x0
  408adc:	ldr	x1, [sp, #56]
  408ae0:	mov	w0, #0x0                   	// #0
  408ae4:	bl	418f10 <__fxstatat@plt+0x163b0>
  408ae8:	mov	x21, x0
  408aec:	ldr	x1, [sp, #48]
  408af0:	mov	w0, #0x1                   	// #1
  408af4:	bl	418f10 <__fxstatat@plt+0x163b0>
  408af8:	mov	x4, x0
  408afc:	mov	x3, x21
  408b00:	mov	x2, x20
  408b04:	mov	w1, w19
  408b08:	mov	w0, #0x0                   	// #0
  408b0c:	bl	402550 <error@plt>
  408b10:	mov	w0, #0x0                   	// #0
  408b14:	bl	4068f0 <__fxstatat@plt+0x3d90>
  408b18:	mov	w1, #0x1                   	// #1
  408b1c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  408b20:	add	x0, x0, #0x5f0
  408b24:	bl	402a70 <longjmp@plt>
  408b28:	ldr	w0, [sp, #76]
  408b2c:	ldp	x19, x20, [sp, #16]
  408b30:	ldr	x21, [sp, #32]
  408b34:	ldp	x29, x30, [sp], #80
  408b38:	ret
  408b3c:	stp	x29, x30, [sp, #-80]!
  408b40:	mov	x29, sp
  408b44:	stp	x20, x21, [sp, #16]
  408b48:	str	x0, [sp, #56]
  408b4c:	str	x1, [sp, #48]
  408b50:	str	x2, [sp, #40]
  408b54:	ldr	x0, [sp, #48]
  408b58:	add	x0, x0, #0x18
  408b5c:	bl	419454 <__fxstatat@plt+0x168f4>
  408b60:	mov	x20, x0
  408b64:	mov	x21, x1
  408b68:	ldr	x0, [sp, #56]
  408b6c:	add	x0, x0, #0x18
  408b70:	bl	419454 <__fxstatat@plt+0x168f4>
  408b74:	mov	x2, x0
  408b78:	mov	x3, x1
  408b7c:	mov	x0, x20
  408b80:	mov	x1, x21
  408b84:	bl	4194e8 <__fxstatat@plt+0x16988>
  408b88:	str	w0, [sp, #76]
  408b8c:	ldr	w0, [sp, #76]
  408b90:	cmp	w0, #0x0
  408b94:	b.ne	408bbc <__fxstatat@plt+0x605c>  // b.any
  408b98:	ldr	x0, [sp, #56]
  408b9c:	ldr	x3, [x0]
  408ba0:	ldr	x0, [sp, #48]
  408ba4:	ldr	x0, [x0]
  408ba8:	ldr	x2, [sp, #40]
  408bac:	mov	x1, x0
  408bb0:	mov	x0, x3
  408bb4:	blr	x2
  408bb8:	b	408bc0 <__fxstatat@plt+0x6060>
  408bbc:	ldr	w0, [sp, #76]
  408bc0:	ldp	x20, x21, [sp, #16]
  408bc4:	ldp	x29, x30, [sp], #80
  408bc8:	ret
  408bcc:	stp	x29, x30, [sp, #-80]!
  408bd0:	mov	x29, sp
  408bd4:	stp	x20, x21, [sp, #16]
  408bd8:	str	x0, [sp, #56]
  408bdc:	str	x1, [sp, #48]
  408be0:	str	x2, [sp, #40]
  408be4:	ldr	x0, [sp, #48]
  408be8:	add	x0, x0, #0x18
  408bec:	bl	41946c <__fxstatat@plt+0x1690c>
  408bf0:	mov	x20, x0
  408bf4:	mov	x21, x1
  408bf8:	ldr	x0, [sp, #56]
  408bfc:	add	x0, x0, #0x18
  408c00:	bl	41946c <__fxstatat@plt+0x1690c>
  408c04:	mov	x2, x0
  408c08:	mov	x3, x1
  408c0c:	mov	x0, x20
  408c10:	mov	x1, x21
  408c14:	bl	4194e8 <__fxstatat@plt+0x16988>
  408c18:	str	w0, [sp, #76]
  408c1c:	ldr	w0, [sp, #76]
  408c20:	cmp	w0, #0x0
  408c24:	b.ne	408c4c <__fxstatat@plt+0x60ec>  // b.any
  408c28:	ldr	x0, [sp, #56]
  408c2c:	ldr	x3, [x0]
  408c30:	ldr	x0, [sp, #48]
  408c34:	ldr	x0, [x0]
  408c38:	ldr	x2, [sp, #40]
  408c3c:	mov	x1, x0
  408c40:	mov	x0, x3
  408c44:	blr	x2
  408c48:	b	408c50 <__fxstatat@plt+0x60f0>
  408c4c:	ldr	w0, [sp, #76]
  408c50:	ldp	x20, x21, [sp, #16]
  408c54:	ldp	x29, x30, [sp], #80
  408c58:	ret
  408c5c:	stp	x29, x30, [sp, #-80]!
  408c60:	mov	x29, sp
  408c64:	stp	x20, x21, [sp, #16]
  408c68:	str	x0, [sp, #56]
  408c6c:	str	x1, [sp, #48]
  408c70:	str	x2, [sp, #40]
  408c74:	ldr	x0, [sp, #48]
  408c78:	add	x0, x0, #0x18
  408c7c:	bl	41943c <__fxstatat@plt+0x168dc>
  408c80:	mov	x20, x0
  408c84:	mov	x21, x1
  408c88:	ldr	x0, [sp, #56]
  408c8c:	add	x0, x0, #0x18
  408c90:	bl	41943c <__fxstatat@plt+0x168dc>
  408c94:	mov	x2, x0
  408c98:	mov	x3, x1
  408c9c:	mov	x0, x20
  408ca0:	mov	x1, x21
  408ca4:	bl	4194e8 <__fxstatat@plt+0x16988>
  408ca8:	str	w0, [sp, #76]
  408cac:	ldr	w0, [sp, #76]
  408cb0:	cmp	w0, #0x0
  408cb4:	b.ne	408cdc <__fxstatat@plt+0x617c>  // b.any
  408cb8:	ldr	x0, [sp, #56]
  408cbc:	ldr	x3, [x0]
  408cc0:	ldr	x0, [sp, #48]
  408cc4:	ldr	x0, [x0]
  408cc8:	ldr	x2, [sp, #40]
  408ccc:	mov	x1, x0
  408cd0:	mov	x0, x3
  408cd4:	blr	x2
  408cd8:	b	408ce0 <__fxstatat@plt+0x6180>
  408cdc:	ldr	w0, [sp, #76]
  408ce0:	ldp	x20, x21, [sp, #16]
  408ce4:	ldp	x29, x30, [sp], #80
  408ce8:	ret
  408cec:	stp	x29, x30, [sp, #-64]!
  408cf0:	mov	x29, sp
  408cf4:	str	x0, [sp, #40]
  408cf8:	str	x1, [sp, #32]
  408cfc:	str	x2, [sp, #24]
  408d00:	ldr	x0, [sp, #32]
  408d04:	ldr	x1, [x0, #72]
  408d08:	ldr	x0, [sp, #40]
  408d0c:	ldr	x0, [x0, #72]
  408d10:	cmp	x1, x0
  408d14:	b.lt	408d38 <__fxstatat@plt+0x61d8>  // b.tstop
  408d18:	ldr	x0, [sp, #32]
  408d1c:	ldr	x1, [x0, #72]
  408d20:	ldr	x0, [sp, #40]
  408d24:	ldr	x0, [x0, #72]
  408d28:	cmp	x1, x0
  408d2c:	cset	w0, gt
  408d30:	and	w0, w0, #0xff
  408d34:	b	408d3c <__fxstatat@plt+0x61dc>
  408d38:	mov	w0, #0xffffffff            	// #-1
  408d3c:	str	w0, [sp, #60]
  408d40:	ldr	w0, [sp, #60]
  408d44:	cmp	w0, #0x0
  408d48:	b.ne	408d70 <__fxstatat@plt+0x6210>  // b.any
  408d4c:	ldr	x0, [sp, #40]
  408d50:	ldr	x3, [x0]
  408d54:	ldr	x0, [sp, #32]
  408d58:	ldr	x0, [x0]
  408d5c:	ldr	x2, [sp, #24]
  408d60:	mov	x1, x0
  408d64:	mov	x0, x3
  408d68:	blr	x2
  408d6c:	b	408d74 <__fxstatat@plt+0x6214>
  408d70:	ldr	w0, [sp, #60]
  408d74:	ldp	x29, x30, [sp], #64
  408d78:	ret
  408d7c:	stp	x29, x30, [sp, #-48]!
  408d80:	mov	x29, sp
  408d84:	str	x0, [sp, #40]
  408d88:	str	x1, [sp, #32]
  408d8c:	str	x2, [sp, #24]
  408d90:	ldr	x0, [sp, #40]
  408d94:	ldr	x3, [x0]
  408d98:	ldr	x0, [sp, #32]
  408d9c:	ldr	x0, [x0]
  408da0:	ldr	x2, [sp, #24]
  408da4:	mov	x1, x0
  408da8:	mov	x0, x3
  408dac:	blr	x2
  408db0:	ldp	x29, x30, [sp], #48
  408db4:	ret
  408db8:	stp	x29, x30, [sp, #-80]!
  408dbc:	mov	x29, sp
  408dc0:	str	x0, [sp, #40]
  408dc4:	str	x1, [sp, #32]
  408dc8:	str	x2, [sp, #24]
  408dcc:	ldr	x0, [sp, #40]
  408dd0:	ldr	x0, [x0]
  408dd4:	mov	w1, #0x2e                  	// #46
  408dd8:	bl	4027d0 <strrchr@plt>
  408ddc:	str	x0, [sp, #72]
  408de0:	ldr	x0, [sp, #32]
  408de4:	ldr	x0, [x0]
  408de8:	mov	w1, #0x2e                  	// #46
  408dec:	bl	4027d0 <strrchr@plt>
  408df0:	str	x0, [sp, #64]
  408df4:	ldr	x0, [sp, #72]
  408df8:	cmp	x0, #0x0
  408dfc:	b.eq	408e08 <__fxstatat@plt+0x62a8>  // b.none
  408e00:	ldr	x0, [sp, #72]
  408e04:	b	408e10 <__fxstatat@plt+0x62b0>
  408e08:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  408e0c:	add	x0, x0, #0x948
  408e10:	ldr	x1, [sp, #64]
  408e14:	cmp	x1, #0x0
  408e18:	b.eq	408e24 <__fxstatat@plt+0x62c4>  // b.none
  408e1c:	ldr	x1, [sp, #64]
  408e20:	b	408e2c <__fxstatat@plt+0x62cc>
  408e24:	adrp	x1, 420000 <_obstack_memory_used@@Base+0x45b0>
  408e28:	add	x1, x1, #0x948
  408e2c:	ldr	x2, [sp, #24]
  408e30:	blr	x2
  408e34:	str	w0, [sp, #60]
  408e38:	ldr	w0, [sp, #60]
  408e3c:	cmp	w0, #0x0
  408e40:	b.ne	408e68 <__fxstatat@plt+0x6308>  // b.any
  408e44:	ldr	x0, [sp, #40]
  408e48:	ldr	x3, [x0]
  408e4c:	ldr	x0, [sp, #32]
  408e50:	ldr	x0, [x0]
  408e54:	ldr	x2, [sp, #24]
  408e58:	mov	x1, x0
  408e5c:	mov	x0, x3
  408e60:	blr	x2
  408e64:	b	408e6c <__fxstatat@plt+0x630c>
  408e68:	ldr	w0, [sp, #60]
  408e6c:	ldp	x29, x30, [sp], #80
  408e70:	ret
  408e74:	stp	x29, x30, [sp, #-32]!
  408e78:	mov	x29, sp
  408e7c:	str	x0, [sp, #24]
  408e80:	str	x1, [sp, #16]
  408e84:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  408e88:	add	x2, x0, #0xa84
  408e8c:	ldr	x1, [sp, #16]
  408e90:	ldr	x0, [sp, #24]
  408e94:	bl	408b3c <__fxstatat@plt+0x5fdc>
  408e98:	ldp	x29, x30, [sp], #32
  408e9c:	ret
  408ea0:	stp	x29, x30, [sp, #-32]!
  408ea4:	mov	x29, sp
  408ea8:	str	x0, [sp, #24]
  408eac:	str	x1, [sp, #16]
  408eb0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  408eb4:	add	x2, x0, #0x8b0
  408eb8:	ldr	x1, [sp, #16]
  408ebc:	ldr	x0, [sp, #24]
  408ec0:	bl	408b3c <__fxstatat@plt+0x5fdc>
  408ec4:	ldp	x29, x30, [sp], #32
  408ec8:	ret
  408ecc:	stp	x29, x30, [sp, #-32]!
  408ed0:	mov	x29, sp
  408ed4:	str	x0, [sp, #24]
  408ed8:	str	x1, [sp, #16]
  408edc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  408ee0:	add	x2, x0, #0xa84
  408ee4:	ldr	x1, [sp, #24]
  408ee8:	ldr	x0, [sp, #16]
  408eec:	bl	408b3c <__fxstatat@plt+0x5fdc>
  408ef0:	ldp	x29, x30, [sp], #32
  408ef4:	ret
  408ef8:	stp	x29, x30, [sp, #-32]!
  408efc:	mov	x29, sp
  408f00:	str	x0, [sp, #24]
  408f04:	str	x1, [sp, #16]
  408f08:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  408f0c:	add	x2, x0, #0x8b0
  408f10:	ldr	x1, [sp, #24]
  408f14:	ldr	x0, [sp, #16]
  408f18:	bl	408b3c <__fxstatat@plt+0x5fdc>
  408f1c:	ldp	x29, x30, [sp], #32
  408f20:	ret
  408f24:	stp	x29, x30, [sp, #-48]!
  408f28:	mov	x29, sp
  408f2c:	str	x0, [sp, #24]
  408f30:	str	x1, [sp, #16]
  408f34:	ldr	x0, [sp, #24]
  408f38:	bl	40869c <__fxstatat@plt+0x5b3c>
  408f3c:	strb	w0, [sp, #47]
  408f40:	ldr	x0, [sp, #16]
  408f44:	bl	40869c <__fxstatat@plt+0x5b3c>
  408f48:	strb	w0, [sp, #46]
  408f4c:	ldrb	w0, [sp, #47]
  408f50:	cmp	w0, #0x0
  408f54:	b.eq	408f74 <__fxstatat@plt+0x6414>  // b.none
  408f58:	ldrb	w0, [sp, #46]
  408f5c:	eor	w0, w0, #0x1
  408f60:	and	w0, w0, #0xff
  408f64:	cmp	w0, #0x0
  408f68:	b.eq	408f74 <__fxstatat@plt+0x6414>  // b.none
  408f6c:	mov	w0, #0xffffffff            	// #-1
  408f70:	b	408fb0 <__fxstatat@plt+0x6450>
  408f74:	ldrb	w0, [sp, #47]
  408f78:	eor	w0, w0, #0x1
  408f7c:	and	w0, w0, #0xff
  408f80:	cmp	w0, #0x0
  408f84:	b.eq	408f9c <__fxstatat@plt+0x643c>  // b.none
  408f88:	ldrb	w0, [sp, #46]
  408f8c:	cmp	w0, #0x0
  408f90:	b.eq	408f9c <__fxstatat@plt+0x643c>  // b.none
  408f94:	mov	w0, #0x1                   	// #1
  408f98:	b	408fb0 <__fxstatat@plt+0x6450>
  408f9c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  408fa0:	add	x2, x0, #0xa84
  408fa4:	ldr	x1, [sp, #16]
  408fa8:	ldr	x0, [sp, #24]
  408fac:	bl	408b3c <__fxstatat@plt+0x5fdc>
  408fb0:	ldp	x29, x30, [sp], #48
  408fb4:	ret
  408fb8:	stp	x29, x30, [sp, #-48]!
  408fbc:	mov	x29, sp
  408fc0:	str	x0, [sp, #24]
  408fc4:	str	x1, [sp, #16]
  408fc8:	ldr	x0, [sp, #24]
  408fcc:	bl	40869c <__fxstatat@plt+0x5b3c>
  408fd0:	strb	w0, [sp, #47]
  408fd4:	ldr	x0, [sp, #16]
  408fd8:	bl	40869c <__fxstatat@plt+0x5b3c>
  408fdc:	strb	w0, [sp, #46]
  408fe0:	ldrb	w0, [sp, #47]
  408fe4:	cmp	w0, #0x0
  408fe8:	b.eq	409008 <__fxstatat@plt+0x64a8>  // b.none
  408fec:	ldrb	w0, [sp, #46]
  408ff0:	eor	w0, w0, #0x1
  408ff4:	and	w0, w0, #0xff
  408ff8:	cmp	w0, #0x0
  408ffc:	b.eq	409008 <__fxstatat@plt+0x64a8>  // b.none
  409000:	mov	w0, #0xffffffff            	// #-1
  409004:	b	409044 <__fxstatat@plt+0x64e4>
  409008:	ldrb	w0, [sp, #47]
  40900c:	eor	w0, w0, #0x1
  409010:	and	w0, w0, #0xff
  409014:	cmp	w0, #0x0
  409018:	b.eq	409030 <__fxstatat@plt+0x64d0>  // b.none
  40901c:	ldrb	w0, [sp, #46]
  409020:	cmp	w0, #0x0
  409024:	b.eq	409030 <__fxstatat@plt+0x64d0>  // b.none
  409028:	mov	w0, #0x1                   	// #1
  40902c:	b	409044 <__fxstatat@plt+0x64e4>
  409030:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409034:	add	x2, x0, #0x8b0
  409038:	ldr	x1, [sp, #16]
  40903c:	ldr	x0, [sp, #24]
  409040:	bl	408b3c <__fxstatat@plt+0x5fdc>
  409044:	ldp	x29, x30, [sp], #48
  409048:	ret
  40904c:	stp	x29, x30, [sp, #-48]!
  409050:	mov	x29, sp
  409054:	str	x0, [sp, #24]
  409058:	str	x1, [sp, #16]
  40905c:	ldr	x0, [sp, #24]
  409060:	bl	40869c <__fxstatat@plt+0x5b3c>
  409064:	strb	w0, [sp, #47]
  409068:	ldr	x0, [sp, #16]
  40906c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409070:	strb	w0, [sp, #46]
  409074:	ldrb	w0, [sp, #47]
  409078:	cmp	w0, #0x0
  40907c:	b.eq	40909c <__fxstatat@plt+0x653c>  // b.none
  409080:	ldrb	w0, [sp, #46]
  409084:	eor	w0, w0, #0x1
  409088:	and	w0, w0, #0xff
  40908c:	cmp	w0, #0x0
  409090:	b.eq	40909c <__fxstatat@plt+0x653c>  // b.none
  409094:	mov	w0, #0xffffffff            	// #-1
  409098:	b	4090d8 <__fxstatat@plt+0x6578>
  40909c:	ldrb	w0, [sp, #47]
  4090a0:	eor	w0, w0, #0x1
  4090a4:	and	w0, w0, #0xff
  4090a8:	cmp	w0, #0x0
  4090ac:	b.eq	4090c4 <__fxstatat@plt+0x6564>  // b.none
  4090b0:	ldrb	w0, [sp, #46]
  4090b4:	cmp	w0, #0x0
  4090b8:	b.eq	4090c4 <__fxstatat@plt+0x6564>  // b.none
  4090bc:	mov	w0, #0x1                   	// #1
  4090c0:	b	4090d8 <__fxstatat@plt+0x6578>
  4090c4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4090c8:	add	x2, x0, #0xa84
  4090cc:	ldr	x1, [sp, #24]
  4090d0:	ldr	x0, [sp, #16]
  4090d4:	bl	408b3c <__fxstatat@plt+0x5fdc>
  4090d8:	ldp	x29, x30, [sp], #48
  4090dc:	ret
  4090e0:	stp	x29, x30, [sp, #-48]!
  4090e4:	mov	x29, sp
  4090e8:	str	x0, [sp, #24]
  4090ec:	str	x1, [sp, #16]
  4090f0:	ldr	x0, [sp, #24]
  4090f4:	bl	40869c <__fxstatat@plt+0x5b3c>
  4090f8:	strb	w0, [sp, #47]
  4090fc:	ldr	x0, [sp, #16]
  409100:	bl	40869c <__fxstatat@plt+0x5b3c>
  409104:	strb	w0, [sp, #46]
  409108:	ldrb	w0, [sp, #47]
  40910c:	cmp	w0, #0x0
  409110:	b.eq	409130 <__fxstatat@plt+0x65d0>  // b.none
  409114:	ldrb	w0, [sp, #46]
  409118:	eor	w0, w0, #0x1
  40911c:	and	w0, w0, #0xff
  409120:	cmp	w0, #0x0
  409124:	b.eq	409130 <__fxstatat@plt+0x65d0>  // b.none
  409128:	mov	w0, #0xffffffff            	// #-1
  40912c:	b	40916c <__fxstatat@plt+0x660c>
  409130:	ldrb	w0, [sp, #47]
  409134:	eor	w0, w0, #0x1
  409138:	and	w0, w0, #0xff
  40913c:	cmp	w0, #0x0
  409140:	b.eq	409158 <__fxstatat@plt+0x65f8>  // b.none
  409144:	ldrb	w0, [sp, #46]
  409148:	cmp	w0, #0x0
  40914c:	b.eq	409158 <__fxstatat@plt+0x65f8>  // b.none
  409150:	mov	w0, #0x1                   	// #1
  409154:	b	40916c <__fxstatat@plt+0x660c>
  409158:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40915c:	add	x2, x0, #0x8b0
  409160:	ldr	x1, [sp, #24]
  409164:	ldr	x0, [sp, #16]
  409168:	bl	408b3c <__fxstatat@plt+0x5fdc>
  40916c:	ldp	x29, x30, [sp], #48
  409170:	ret
  409174:	stp	x29, x30, [sp, #-32]!
  409178:	mov	x29, sp
  40917c:	str	x0, [sp, #24]
  409180:	str	x1, [sp, #16]
  409184:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409188:	add	x2, x0, #0xa84
  40918c:	ldr	x1, [sp, #16]
  409190:	ldr	x0, [sp, #24]
  409194:	bl	408bcc <__fxstatat@plt+0x606c>
  409198:	ldp	x29, x30, [sp], #32
  40919c:	ret
  4091a0:	stp	x29, x30, [sp, #-32]!
  4091a4:	mov	x29, sp
  4091a8:	str	x0, [sp, #24]
  4091ac:	str	x1, [sp, #16]
  4091b0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  4091b4:	add	x2, x0, #0x8b0
  4091b8:	ldr	x1, [sp, #16]
  4091bc:	ldr	x0, [sp, #24]
  4091c0:	bl	408bcc <__fxstatat@plt+0x606c>
  4091c4:	ldp	x29, x30, [sp], #32
  4091c8:	ret
  4091cc:	stp	x29, x30, [sp, #-32]!
  4091d0:	mov	x29, sp
  4091d4:	str	x0, [sp, #24]
  4091d8:	str	x1, [sp, #16]
  4091dc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4091e0:	add	x2, x0, #0xa84
  4091e4:	ldr	x1, [sp, #24]
  4091e8:	ldr	x0, [sp, #16]
  4091ec:	bl	408bcc <__fxstatat@plt+0x606c>
  4091f0:	ldp	x29, x30, [sp], #32
  4091f4:	ret
  4091f8:	stp	x29, x30, [sp, #-32]!
  4091fc:	mov	x29, sp
  409200:	str	x0, [sp, #24]
  409204:	str	x1, [sp, #16]
  409208:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40920c:	add	x2, x0, #0x8b0
  409210:	ldr	x1, [sp, #24]
  409214:	ldr	x0, [sp, #16]
  409218:	bl	408bcc <__fxstatat@plt+0x606c>
  40921c:	ldp	x29, x30, [sp], #32
  409220:	ret
  409224:	stp	x29, x30, [sp, #-48]!
  409228:	mov	x29, sp
  40922c:	str	x0, [sp, #24]
  409230:	str	x1, [sp, #16]
  409234:	ldr	x0, [sp, #24]
  409238:	bl	40869c <__fxstatat@plt+0x5b3c>
  40923c:	strb	w0, [sp, #47]
  409240:	ldr	x0, [sp, #16]
  409244:	bl	40869c <__fxstatat@plt+0x5b3c>
  409248:	strb	w0, [sp, #46]
  40924c:	ldrb	w0, [sp, #47]
  409250:	cmp	w0, #0x0
  409254:	b.eq	409274 <__fxstatat@plt+0x6714>  // b.none
  409258:	ldrb	w0, [sp, #46]
  40925c:	eor	w0, w0, #0x1
  409260:	and	w0, w0, #0xff
  409264:	cmp	w0, #0x0
  409268:	b.eq	409274 <__fxstatat@plt+0x6714>  // b.none
  40926c:	mov	w0, #0xffffffff            	// #-1
  409270:	b	4092b0 <__fxstatat@plt+0x6750>
  409274:	ldrb	w0, [sp, #47]
  409278:	eor	w0, w0, #0x1
  40927c:	and	w0, w0, #0xff
  409280:	cmp	w0, #0x0
  409284:	b.eq	40929c <__fxstatat@plt+0x673c>  // b.none
  409288:	ldrb	w0, [sp, #46]
  40928c:	cmp	w0, #0x0
  409290:	b.eq	40929c <__fxstatat@plt+0x673c>  // b.none
  409294:	mov	w0, #0x1                   	// #1
  409298:	b	4092b0 <__fxstatat@plt+0x6750>
  40929c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4092a0:	add	x2, x0, #0xa84
  4092a4:	ldr	x1, [sp, #16]
  4092a8:	ldr	x0, [sp, #24]
  4092ac:	bl	408bcc <__fxstatat@plt+0x606c>
  4092b0:	ldp	x29, x30, [sp], #48
  4092b4:	ret
  4092b8:	stp	x29, x30, [sp, #-48]!
  4092bc:	mov	x29, sp
  4092c0:	str	x0, [sp, #24]
  4092c4:	str	x1, [sp, #16]
  4092c8:	ldr	x0, [sp, #24]
  4092cc:	bl	40869c <__fxstatat@plt+0x5b3c>
  4092d0:	strb	w0, [sp, #47]
  4092d4:	ldr	x0, [sp, #16]
  4092d8:	bl	40869c <__fxstatat@plt+0x5b3c>
  4092dc:	strb	w0, [sp, #46]
  4092e0:	ldrb	w0, [sp, #47]
  4092e4:	cmp	w0, #0x0
  4092e8:	b.eq	409308 <__fxstatat@plt+0x67a8>  // b.none
  4092ec:	ldrb	w0, [sp, #46]
  4092f0:	eor	w0, w0, #0x1
  4092f4:	and	w0, w0, #0xff
  4092f8:	cmp	w0, #0x0
  4092fc:	b.eq	409308 <__fxstatat@plt+0x67a8>  // b.none
  409300:	mov	w0, #0xffffffff            	// #-1
  409304:	b	409344 <__fxstatat@plt+0x67e4>
  409308:	ldrb	w0, [sp, #47]
  40930c:	eor	w0, w0, #0x1
  409310:	and	w0, w0, #0xff
  409314:	cmp	w0, #0x0
  409318:	b.eq	409330 <__fxstatat@plt+0x67d0>  // b.none
  40931c:	ldrb	w0, [sp, #46]
  409320:	cmp	w0, #0x0
  409324:	b.eq	409330 <__fxstatat@plt+0x67d0>  // b.none
  409328:	mov	w0, #0x1                   	// #1
  40932c:	b	409344 <__fxstatat@plt+0x67e4>
  409330:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409334:	add	x2, x0, #0x8b0
  409338:	ldr	x1, [sp, #16]
  40933c:	ldr	x0, [sp, #24]
  409340:	bl	408bcc <__fxstatat@plt+0x606c>
  409344:	ldp	x29, x30, [sp], #48
  409348:	ret
  40934c:	stp	x29, x30, [sp, #-48]!
  409350:	mov	x29, sp
  409354:	str	x0, [sp, #24]
  409358:	str	x1, [sp, #16]
  40935c:	ldr	x0, [sp, #24]
  409360:	bl	40869c <__fxstatat@plt+0x5b3c>
  409364:	strb	w0, [sp, #47]
  409368:	ldr	x0, [sp, #16]
  40936c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409370:	strb	w0, [sp, #46]
  409374:	ldrb	w0, [sp, #47]
  409378:	cmp	w0, #0x0
  40937c:	b.eq	40939c <__fxstatat@plt+0x683c>  // b.none
  409380:	ldrb	w0, [sp, #46]
  409384:	eor	w0, w0, #0x1
  409388:	and	w0, w0, #0xff
  40938c:	cmp	w0, #0x0
  409390:	b.eq	40939c <__fxstatat@plt+0x683c>  // b.none
  409394:	mov	w0, #0xffffffff            	// #-1
  409398:	b	4093d8 <__fxstatat@plt+0x6878>
  40939c:	ldrb	w0, [sp, #47]
  4093a0:	eor	w0, w0, #0x1
  4093a4:	and	w0, w0, #0xff
  4093a8:	cmp	w0, #0x0
  4093ac:	b.eq	4093c4 <__fxstatat@plt+0x6864>  // b.none
  4093b0:	ldrb	w0, [sp, #46]
  4093b4:	cmp	w0, #0x0
  4093b8:	b.eq	4093c4 <__fxstatat@plt+0x6864>  // b.none
  4093bc:	mov	w0, #0x1                   	// #1
  4093c0:	b	4093d8 <__fxstatat@plt+0x6878>
  4093c4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4093c8:	add	x2, x0, #0xa84
  4093cc:	ldr	x1, [sp, #24]
  4093d0:	ldr	x0, [sp, #16]
  4093d4:	bl	408bcc <__fxstatat@plt+0x606c>
  4093d8:	ldp	x29, x30, [sp], #48
  4093dc:	ret
  4093e0:	stp	x29, x30, [sp, #-48]!
  4093e4:	mov	x29, sp
  4093e8:	str	x0, [sp, #24]
  4093ec:	str	x1, [sp, #16]
  4093f0:	ldr	x0, [sp, #24]
  4093f4:	bl	40869c <__fxstatat@plt+0x5b3c>
  4093f8:	strb	w0, [sp, #47]
  4093fc:	ldr	x0, [sp, #16]
  409400:	bl	40869c <__fxstatat@plt+0x5b3c>
  409404:	strb	w0, [sp, #46]
  409408:	ldrb	w0, [sp, #47]
  40940c:	cmp	w0, #0x0
  409410:	b.eq	409430 <__fxstatat@plt+0x68d0>  // b.none
  409414:	ldrb	w0, [sp, #46]
  409418:	eor	w0, w0, #0x1
  40941c:	and	w0, w0, #0xff
  409420:	cmp	w0, #0x0
  409424:	b.eq	409430 <__fxstatat@plt+0x68d0>  // b.none
  409428:	mov	w0, #0xffffffff            	// #-1
  40942c:	b	40946c <__fxstatat@plt+0x690c>
  409430:	ldrb	w0, [sp, #47]
  409434:	eor	w0, w0, #0x1
  409438:	and	w0, w0, #0xff
  40943c:	cmp	w0, #0x0
  409440:	b.eq	409458 <__fxstatat@plt+0x68f8>  // b.none
  409444:	ldrb	w0, [sp, #46]
  409448:	cmp	w0, #0x0
  40944c:	b.eq	409458 <__fxstatat@plt+0x68f8>  // b.none
  409450:	mov	w0, #0x1                   	// #1
  409454:	b	40946c <__fxstatat@plt+0x690c>
  409458:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40945c:	add	x2, x0, #0x8b0
  409460:	ldr	x1, [sp, #24]
  409464:	ldr	x0, [sp, #16]
  409468:	bl	408bcc <__fxstatat@plt+0x606c>
  40946c:	ldp	x29, x30, [sp], #48
  409470:	ret
  409474:	stp	x29, x30, [sp, #-32]!
  409478:	mov	x29, sp
  40947c:	str	x0, [sp, #24]
  409480:	str	x1, [sp, #16]
  409484:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409488:	add	x2, x0, #0xa84
  40948c:	ldr	x1, [sp, #16]
  409490:	ldr	x0, [sp, #24]
  409494:	bl	408c5c <__fxstatat@plt+0x60fc>
  409498:	ldp	x29, x30, [sp], #32
  40949c:	ret
  4094a0:	stp	x29, x30, [sp, #-32]!
  4094a4:	mov	x29, sp
  4094a8:	str	x0, [sp, #24]
  4094ac:	str	x1, [sp, #16]
  4094b0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  4094b4:	add	x2, x0, #0x8b0
  4094b8:	ldr	x1, [sp, #16]
  4094bc:	ldr	x0, [sp, #24]
  4094c0:	bl	408c5c <__fxstatat@plt+0x60fc>
  4094c4:	ldp	x29, x30, [sp], #32
  4094c8:	ret
  4094cc:	stp	x29, x30, [sp, #-32]!
  4094d0:	mov	x29, sp
  4094d4:	str	x0, [sp, #24]
  4094d8:	str	x1, [sp, #16]
  4094dc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4094e0:	add	x2, x0, #0xa84
  4094e4:	ldr	x1, [sp, #24]
  4094e8:	ldr	x0, [sp, #16]
  4094ec:	bl	408c5c <__fxstatat@plt+0x60fc>
  4094f0:	ldp	x29, x30, [sp], #32
  4094f4:	ret
  4094f8:	stp	x29, x30, [sp, #-32]!
  4094fc:	mov	x29, sp
  409500:	str	x0, [sp, #24]
  409504:	str	x1, [sp, #16]
  409508:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40950c:	add	x2, x0, #0x8b0
  409510:	ldr	x1, [sp, #24]
  409514:	ldr	x0, [sp, #16]
  409518:	bl	408c5c <__fxstatat@plt+0x60fc>
  40951c:	ldp	x29, x30, [sp], #32
  409520:	ret
  409524:	stp	x29, x30, [sp, #-48]!
  409528:	mov	x29, sp
  40952c:	str	x0, [sp, #24]
  409530:	str	x1, [sp, #16]
  409534:	ldr	x0, [sp, #24]
  409538:	bl	40869c <__fxstatat@plt+0x5b3c>
  40953c:	strb	w0, [sp, #47]
  409540:	ldr	x0, [sp, #16]
  409544:	bl	40869c <__fxstatat@plt+0x5b3c>
  409548:	strb	w0, [sp, #46]
  40954c:	ldrb	w0, [sp, #47]
  409550:	cmp	w0, #0x0
  409554:	b.eq	409574 <__fxstatat@plt+0x6a14>  // b.none
  409558:	ldrb	w0, [sp, #46]
  40955c:	eor	w0, w0, #0x1
  409560:	and	w0, w0, #0xff
  409564:	cmp	w0, #0x0
  409568:	b.eq	409574 <__fxstatat@plt+0x6a14>  // b.none
  40956c:	mov	w0, #0xffffffff            	// #-1
  409570:	b	4095b0 <__fxstatat@plt+0x6a50>
  409574:	ldrb	w0, [sp, #47]
  409578:	eor	w0, w0, #0x1
  40957c:	and	w0, w0, #0xff
  409580:	cmp	w0, #0x0
  409584:	b.eq	40959c <__fxstatat@plt+0x6a3c>  // b.none
  409588:	ldrb	w0, [sp, #46]
  40958c:	cmp	w0, #0x0
  409590:	b.eq	40959c <__fxstatat@plt+0x6a3c>  // b.none
  409594:	mov	w0, #0x1                   	// #1
  409598:	b	4095b0 <__fxstatat@plt+0x6a50>
  40959c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4095a0:	add	x2, x0, #0xa84
  4095a4:	ldr	x1, [sp, #16]
  4095a8:	ldr	x0, [sp, #24]
  4095ac:	bl	408c5c <__fxstatat@plt+0x60fc>
  4095b0:	ldp	x29, x30, [sp], #48
  4095b4:	ret
  4095b8:	stp	x29, x30, [sp, #-48]!
  4095bc:	mov	x29, sp
  4095c0:	str	x0, [sp, #24]
  4095c4:	str	x1, [sp, #16]
  4095c8:	ldr	x0, [sp, #24]
  4095cc:	bl	40869c <__fxstatat@plt+0x5b3c>
  4095d0:	strb	w0, [sp, #47]
  4095d4:	ldr	x0, [sp, #16]
  4095d8:	bl	40869c <__fxstatat@plt+0x5b3c>
  4095dc:	strb	w0, [sp, #46]
  4095e0:	ldrb	w0, [sp, #47]
  4095e4:	cmp	w0, #0x0
  4095e8:	b.eq	409608 <__fxstatat@plt+0x6aa8>  // b.none
  4095ec:	ldrb	w0, [sp, #46]
  4095f0:	eor	w0, w0, #0x1
  4095f4:	and	w0, w0, #0xff
  4095f8:	cmp	w0, #0x0
  4095fc:	b.eq	409608 <__fxstatat@plt+0x6aa8>  // b.none
  409600:	mov	w0, #0xffffffff            	// #-1
  409604:	b	409644 <__fxstatat@plt+0x6ae4>
  409608:	ldrb	w0, [sp, #47]
  40960c:	eor	w0, w0, #0x1
  409610:	and	w0, w0, #0xff
  409614:	cmp	w0, #0x0
  409618:	b.eq	409630 <__fxstatat@plt+0x6ad0>  // b.none
  40961c:	ldrb	w0, [sp, #46]
  409620:	cmp	w0, #0x0
  409624:	b.eq	409630 <__fxstatat@plt+0x6ad0>  // b.none
  409628:	mov	w0, #0x1                   	// #1
  40962c:	b	409644 <__fxstatat@plt+0x6ae4>
  409630:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409634:	add	x2, x0, #0x8b0
  409638:	ldr	x1, [sp, #16]
  40963c:	ldr	x0, [sp, #24]
  409640:	bl	408c5c <__fxstatat@plt+0x60fc>
  409644:	ldp	x29, x30, [sp], #48
  409648:	ret
  40964c:	stp	x29, x30, [sp, #-48]!
  409650:	mov	x29, sp
  409654:	str	x0, [sp, #24]
  409658:	str	x1, [sp, #16]
  40965c:	ldr	x0, [sp, #24]
  409660:	bl	40869c <__fxstatat@plt+0x5b3c>
  409664:	strb	w0, [sp, #47]
  409668:	ldr	x0, [sp, #16]
  40966c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409670:	strb	w0, [sp, #46]
  409674:	ldrb	w0, [sp, #47]
  409678:	cmp	w0, #0x0
  40967c:	b.eq	40969c <__fxstatat@plt+0x6b3c>  // b.none
  409680:	ldrb	w0, [sp, #46]
  409684:	eor	w0, w0, #0x1
  409688:	and	w0, w0, #0xff
  40968c:	cmp	w0, #0x0
  409690:	b.eq	40969c <__fxstatat@plt+0x6b3c>  // b.none
  409694:	mov	w0, #0xffffffff            	// #-1
  409698:	b	4096d8 <__fxstatat@plt+0x6b78>
  40969c:	ldrb	w0, [sp, #47]
  4096a0:	eor	w0, w0, #0x1
  4096a4:	and	w0, w0, #0xff
  4096a8:	cmp	w0, #0x0
  4096ac:	b.eq	4096c4 <__fxstatat@plt+0x6b64>  // b.none
  4096b0:	ldrb	w0, [sp, #46]
  4096b4:	cmp	w0, #0x0
  4096b8:	b.eq	4096c4 <__fxstatat@plt+0x6b64>  // b.none
  4096bc:	mov	w0, #0x1                   	// #1
  4096c0:	b	4096d8 <__fxstatat@plt+0x6b78>
  4096c4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4096c8:	add	x2, x0, #0xa84
  4096cc:	ldr	x1, [sp, #24]
  4096d0:	ldr	x0, [sp, #16]
  4096d4:	bl	408c5c <__fxstatat@plt+0x60fc>
  4096d8:	ldp	x29, x30, [sp], #48
  4096dc:	ret
  4096e0:	stp	x29, x30, [sp, #-48]!
  4096e4:	mov	x29, sp
  4096e8:	str	x0, [sp, #24]
  4096ec:	str	x1, [sp, #16]
  4096f0:	ldr	x0, [sp, #24]
  4096f4:	bl	40869c <__fxstatat@plt+0x5b3c>
  4096f8:	strb	w0, [sp, #47]
  4096fc:	ldr	x0, [sp, #16]
  409700:	bl	40869c <__fxstatat@plt+0x5b3c>
  409704:	strb	w0, [sp, #46]
  409708:	ldrb	w0, [sp, #47]
  40970c:	cmp	w0, #0x0
  409710:	b.eq	409730 <__fxstatat@plt+0x6bd0>  // b.none
  409714:	ldrb	w0, [sp, #46]
  409718:	eor	w0, w0, #0x1
  40971c:	and	w0, w0, #0xff
  409720:	cmp	w0, #0x0
  409724:	b.eq	409730 <__fxstatat@plt+0x6bd0>  // b.none
  409728:	mov	w0, #0xffffffff            	// #-1
  40972c:	b	40976c <__fxstatat@plt+0x6c0c>
  409730:	ldrb	w0, [sp, #47]
  409734:	eor	w0, w0, #0x1
  409738:	and	w0, w0, #0xff
  40973c:	cmp	w0, #0x0
  409740:	b.eq	409758 <__fxstatat@plt+0x6bf8>  // b.none
  409744:	ldrb	w0, [sp, #46]
  409748:	cmp	w0, #0x0
  40974c:	b.eq	409758 <__fxstatat@plt+0x6bf8>  // b.none
  409750:	mov	w0, #0x1                   	// #1
  409754:	b	40976c <__fxstatat@plt+0x6c0c>
  409758:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40975c:	add	x2, x0, #0x8b0
  409760:	ldr	x1, [sp, #24]
  409764:	ldr	x0, [sp, #16]
  409768:	bl	408c5c <__fxstatat@plt+0x60fc>
  40976c:	ldp	x29, x30, [sp], #48
  409770:	ret
  409774:	stp	x29, x30, [sp, #-32]!
  409778:	mov	x29, sp
  40977c:	str	x0, [sp, #24]
  409780:	str	x1, [sp, #16]
  409784:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409788:	add	x2, x0, #0xa84
  40978c:	ldr	x1, [sp, #16]
  409790:	ldr	x0, [sp, #24]
  409794:	bl	408cec <__fxstatat@plt+0x618c>
  409798:	ldp	x29, x30, [sp], #32
  40979c:	ret
  4097a0:	stp	x29, x30, [sp, #-32]!
  4097a4:	mov	x29, sp
  4097a8:	str	x0, [sp, #24]
  4097ac:	str	x1, [sp, #16]
  4097b0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  4097b4:	add	x2, x0, #0x8b0
  4097b8:	ldr	x1, [sp, #16]
  4097bc:	ldr	x0, [sp, #24]
  4097c0:	bl	408cec <__fxstatat@plt+0x618c>
  4097c4:	ldp	x29, x30, [sp], #32
  4097c8:	ret
  4097cc:	stp	x29, x30, [sp, #-32]!
  4097d0:	mov	x29, sp
  4097d4:	str	x0, [sp, #24]
  4097d8:	str	x1, [sp, #16]
  4097dc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4097e0:	add	x2, x0, #0xa84
  4097e4:	ldr	x1, [sp, #24]
  4097e8:	ldr	x0, [sp, #16]
  4097ec:	bl	408cec <__fxstatat@plt+0x618c>
  4097f0:	ldp	x29, x30, [sp], #32
  4097f4:	ret
  4097f8:	stp	x29, x30, [sp, #-32]!
  4097fc:	mov	x29, sp
  409800:	str	x0, [sp, #24]
  409804:	str	x1, [sp, #16]
  409808:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40980c:	add	x2, x0, #0x8b0
  409810:	ldr	x1, [sp, #24]
  409814:	ldr	x0, [sp, #16]
  409818:	bl	408cec <__fxstatat@plt+0x618c>
  40981c:	ldp	x29, x30, [sp], #32
  409820:	ret
  409824:	stp	x29, x30, [sp, #-48]!
  409828:	mov	x29, sp
  40982c:	str	x0, [sp, #24]
  409830:	str	x1, [sp, #16]
  409834:	ldr	x0, [sp, #24]
  409838:	bl	40869c <__fxstatat@plt+0x5b3c>
  40983c:	strb	w0, [sp, #47]
  409840:	ldr	x0, [sp, #16]
  409844:	bl	40869c <__fxstatat@plt+0x5b3c>
  409848:	strb	w0, [sp, #46]
  40984c:	ldrb	w0, [sp, #47]
  409850:	cmp	w0, #0x0
  409854:	b.eq	409874 <__fxstatat@plt+0x6d14>  // b.none
  409858:	ldrb	w0, [sp, #46]
  40985c:	eor	w0, w0, #0x1
  409860:	and	w0, w0, #0xff
  409864:	cmp	w0, #0x0
  409868:	b.eq	409874 <__fxstatat@plt+0x6d14>  // b.none
  40986c:	mov	w0, #0xffffffff            	// #-1
  409870:	b	4098b0 <__fxstatat@plt+0x6d50>
  409874:	ldrb	w0, [sp, #47]
  409878:	eor	w0, w0, #0x1
  40987c:	and	w0, w0, #0xff
  409880:	cmp	w0, #0x0
  409884:	b.eq	40989c <__fxstatat@plt+0x6d3c>  // b.none
  409888:	ldrb	w0, [sp, #46]
  40988c:	cmp	w0, #0x0
  409890:	b.eq	40989c <__fxstatat@plt+0x6d3c>  // b.none
  409894:	mov	w0, #0x1                   	// #1
  409898:	b	4098b0 <__fxstatat@plt+0x6d50>
  40989c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4098a0:	add	x2, x0, #0xa84
  4098a4:	ldr	x1, [sp, #16]
  4098a8:	ldr	x0, [sp, #24]
  4098ac:	bl	408cec <__fxstatat@plt+0x618c>
  4098b0:	ldp	x29, x30, [sp], #48
  4098b4:	ret
  4098b8:	stp	x29, x30, [sp, #-48]!
  4098bc:	mov	x29, sp
  4098c0:	str	x0, [sp, #24]
  4098c4:	str	x1, [sp, #16]
  4098c8:	ldr	x0, [sp, #24]
  4098cc:	bl	40869c <__fxstatat@plt+0x5b3c>
  4098d0:	strb	w0, [sp, #47]
  4098d4:	ldr	x0, [sp, #16]
  4098d8:	bl	40869c <__fxstatat@plt+0x5b3c>
  4098dc:	strb	w0, [sp, #46]
  4098e0:	ldrb	w0, [sp, #47]
  4098e4:	cmp	w0, #0x0
  4098e8:	b.eq	409908 <__fxstatat@plt+0x6da8>  // b.none
  4098ec:	ldrb	w0, [sp, #46]
  4098f0:	eor	w0, w0, #0x1
  4098f4:	and	w0, w0, #0xff
  4098f8:	cmp	w0, #0x0
  4098fc:	b.eq	409908 <__fxstatat@plt+0x6da8>  // b.none
  409900:	mov	w0, #0xffffffff            	// #-1
  409904:	b	409944 <__fxstatat@plt+0x6de4>
  409908:	ldrb	w0, [sp, #47]
  40990c:	eor	w0, w0, #0x1
  409910:	and	w0, w0, #0xff
  409914:	cmp	w0, #0x0
  409918:	b.eq	409930 <__fxstatat@plt+0x6dd0>  // b.none
  40991c:	ldrb	w0, [sp, #46]
  409920:	cmp	w0, #0x0
  409924:	b.eq	409930 <__fxstatat@plt+0x6dd0>  // b.none
  409928:	mov	w0, #0x1                   	// #1
  40992c:	b	409944 <__fxstatat@plt+0x6de4>
  409930:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409934:	add	x2, x0, #0x8b0
  409938:	ldr	x1, [sp, #16]
  40993c:	ldr	x0, [sp, #24]
  409940:	bl	408cec <__fxstatat@plt+0x618c>
  409944:	ldp	x29, x30, [sp], #48
  409948:	ret
  40994c:	stp	x29, x30, [sp, #-48]!
  409950:	mov	x29, sp
  409954:	str	x0, [sp, #24]
  409958:	str	x1, [sp, #16]
  40995c:	ldr	x0, [sp, #24]
  409960:	bl	40869c <__fxstatat@plt+0x5b3c>
  409964:	strb	w0, [sp, #47]
  409968:	ldr	x0, [sp, #16]
  40996c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409970:	strb	w0, [sp, #46]
  409974:	ldrb	w0, [sp, #47]
  409978:	cmp	w0, #0x0
  40997c:	b.eq	40999c <__fxstatat@plt+0x6e3c>  // b.none
  409980:	ldrb	w0, [sp, #46]
  409984:	eor	w0, w0, #0x1
  409988:	and	w0, w0, #0xff
  40998c:	cmp	w0, #0x0
  409990:	b.eq	40999c <__fxstatat@plt+0x6e3c>  // b.none
  409994:	mov	w0, #0xffffffff            	// #-1
  409998:	b	4099d8 <__fxstatat@plt+0x6e78>
  40999c:	ldrb	w0, [sp, #47]
  4099a0:	eor	w0, w0, #0x1
  4099a4:	and	w0, w0, #0xff
  4099a8:	cmp	w0, #0x0
  4099ac:	b.eq	4099c4 <__fxstatat@plt+0x6e64>  // b.none
  4099b0:	ldrb	w0, [sp, #46]
  4099b4:	cmp	w0, #0x0
  4099b8:	b.eq	4099c4 <__fxstatat@plt+0x6e64>  // b.none
  4099bc:	mov	w0, #0x1                   	// #1
  4099c0:	b	4099d8 <__fxstatat@plt+0x6e78>
  4099c4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  4099c8:	add	x2, x0, #0xa84
  4099cc:	ldr	x1, [sp, #24]
  4099d0:	ldr	x0, [sp, #16]
  4099d4:	bl	408cec <__fxstatat@plt+0x618c>
  4099d8:	ldp	x29, x30, [sp], #48
  4099dc:	ret
  4099e0:	stp	x29, x30, [sp, #-48]!
  4099e4:	mov	x29, sp
  4099e8:	str	x0, [sp, #24]
  4099ec:	str	x1, [sp, #16]
  4099f0:	ldr	x0, [sp, #24]
  4099f4:	bl	40869c <__fxstatat@plt+0x5b3c>
  4099f8:	strb	w0, [sp, #47]
  4099fc:	ldr	x0, [sp, #16]
  409a00:	bl	40869c <__fxstatat@plt+0x5b3c>
  409a04:	strb	w0, [sp, #46]
  409a08:	ldrb	w0, [sp, #47]
  409a0c:	cmp	w0, #0x0
  409a10:	b.eq	409a30 <__fxstatat@plt+0x6ed0>  // b.none
  409a14:	ldrb	w0, [sp, #46]
  409a18:	eor	w0, w0, #0x1
  409a1c:	and	w0, w0, #0xff
  409a20:	cmp	w0, #0x0
  409a24:	b.eq	409a30 <__fxstatat@plt+0x6ed0>  // b.none
  409a28:	mov	w0, #0xffffffff            	// #-1
  409a2c:	b	409a6c <__fxstatat@plt+0x6f0c>
  409a30:	ldrb	w0, [sp, #47]
  409a34:	eor	w0, w0, #0x1
  409a38:	and	w0, w0, #0xff
  409a3c:	cmp	w0, #0x0
  409a40:	b.eq	409a58 <__fxstatat@plt+0x6ef8>  // b.none
  409a44:	ldrb	w0, [sp, #46]
  409a48:	cmp	w0, #0x0
  409a4c:	b.eq	409a58 <__fxstatat@plt+0x6ef8>  // b.none
  409a50:	mov	w0, #0x1                   	// #1
  409a54:	b	409a6c <__fxstatat@plt+0x6f0c>
  409a58:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409a5c:	add	x2, x0, #0x8b0
  409a60:	ldr	x1, [sp, #24]
  409a64:	ldr	x0, [sp, #16]
  409a68:	bl	408cec <__fxstatat@plt+0x618c>
  409a6c:	ldp	x29, x30, [sp], #48
  409a70:	ret
  409a74:	stp	x29, x30, [sp, #-32]!
  409a78:	mov	x29, sp
  409a7c:	str	x0, [sp, #24]
  409a80:	str	x1, [sp, #16]
  409a84:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409a88:	add	x2, x0, #0xa84
  409a8c:	ldr	x1, [sp, #16]
  409a90:	ldr	x0, [sp, #24]
  409a94:	bl	408d7c <__fxstatat@plt+0x621c>
  409a98:	ldp	x29, x30, [sp], #32
  409a9c:	ret
  409aa0:	stp	x29, x30, [sp, #-32]!
  409aa4:	mov	x29, sp
  409aa8:	str	x0, [sp, #24]
  409aac:	str	x1, [sp, #16]
  409ab0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409ab4:	add	x2, x0, #0x8b0
  409ab8:	ldr	x1, [sp, #16]
  409abc:	ldr	x0, [sp, #24]
  409ac0:	bl	408d7c <__fxstatat@plt+0x621c>
  409ac4:	ldp	x29, x30, [sp], #32
  409ac8:	ret
  409acc:	stp	x29, x30, [sp, #-32]!
  409ad0:	mov	x29, sp
  409ad4:	str	x0, [sp, #24]
  409ad8:	str	x1, [sp, #16]
  409adc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409ae0:	add	x2, x0, #0xa84
  409ae4:	ldr	x1, [sp, #24]
  409ae8:	ldr	x0, [sp, #16]
  409aec:	bl	408d7c <__fxstatat@plt+0x621c>
  409af0:	ldp	x29, x30, [sp], #32
  409af4:	ret
  409af8:	stp	x29, x30, [sp, #-32]!
  409afc:	mov	x29, sp
  409b00:	str	x0, [sp, #24]
  409b04:	str	x1, [sp, #16]
  409b08:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409b0c:	add	x2, x0, #0x8b0
  409b10:	ldr	x1, [sp, #24]
  409b14:	ldr	x0, [sp, #16]
  409b18:	bl	408d7c <__fxstatat@plt+0x621c>
  409b1c:	ldp	x29, x30, [sp], #32
  409b20:	ret
  409b24:	stp	x29, x30, [sp, #-48]!
  409b28:	mov	x29, sp
  409b2c:	str	x0, [sp, #24]
  409b30:	str	x1, [sp, #16]
  409b34:	ldr	x0, [sp, #24]
  409b38:	bl	40869c <__fxstatat@plt+0x5b3c>
  409b3c:	strb	w0, [sp, #47]
  409b40:	ldr	x0, [sp, #16]
  409b44:	bl	40869c <__fxstatat@plt+0x5b3c>
  409b48:	strb	w0, [sp, #46]
  409b4c:	ldrb	w0, [sp, #47]
  409b50:	cmp	w0, #0x0
  409b54:	b.eq	409b74 <__fxstatat@plt+0x7014>  // b.none
  409b58:	ldrb	w0, [sp, #46]
  409b5c:	eor	w0, w0, #0x1
  409b60:	and	w0, w0, #0xff
  409b64:	cmp	w0, #0x0
  409b68:	b.eq	409b74 <__fxstatat@plt+0x7014>  // b.none
  409b6c:	mov	w0, #0xffffffff            	// #-1
  409b70:	b	409bb0 <__fxstatat@plt+0x7050>
  409b74:	ldrb	w0, [sp, #47]
  409b78:	eor	w0, w0, #0x1
  409b7c:	and	w0, w0, #0xff
  409b80:	cmp	w0, #0x0
  409b84:	b.eq	409b9c <__fxstatat@plt+0x703c>  // b.none
  409b88:	ldrb	w0, [sp, #46]
  409b8c:	cmp	w0, #0x0
  409b90:	b.eq	409b9c <__fxstatat@plt+0x703c>  // b.none
  409b94:	mov	w0, #0x1                   	// #1
  409b98:	b	409bb0 <__fxstatat@plt+0x7050>
  409b9c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409ba0:	add	x2, x0, #0xa84
  409ba4:	ldr	x1, [sp, #16]
  409ba8:	ldr	x0, [sp, #24]
  409bac:	bl	408d7c <__fxstatat@plt+0x621c>
  409bb0:	ldp	x29, x30, [sp], #48
  409bb4:	ret
  409bb8:	stp	x29, x30, [sp, #-48]!
  409bbc:	mov	x29, sp
  409bc0:	str	x0, [sp, #24]
  409bc4:	str	x1, [sp, #16]
  409bc8:	ldr	x0, [sp, #24]
  409bcc:	bl	40869c <__fxstatat@plt+0x5b3c>
  409bd0:	strb	w0, [sp, #47]
  409bd4:	ldr	x0, [sp, #16]
  409bd8:	bl	40869c <__fxstatat@plt+0x5b3c>
  409bdc:	strb	w0, [sp, #46]
  409be0:	ldrb	w0, [sp, #47]
  409be4:	cmp	w0, #0x0
  409be8:	b.eq	409c08 <__fxstatat@plt+0x70a8>  // b.none
  409bec:	ldrb	w0, [sp, #46]
  409bf0:	eor	w0, w0, #0x1
  409bf4:	and	w0, w0, #0xff
  409bf8:	cmp	w0, #0x0
  409bfc:	b.eq	409c08 <__fxstatat@plt+0x70a8>  // b.none
  409c00:	mov	w0, #0xffffffff            	// #-1
  409c04:	b	409c44 <__fxstatat@plt+0x70e4>
  409c08:	ldrb	w0, [sp, #47]
  409c0c:	eor	w0, w0, #0x1
  409c10:	and	w0, w0, #0xff
  409c14:	cmp	w0, #0x0
  409c18:	b.eq	409c30 <__fxstatat@plt+0x70d0>  // b.none
  409c1c:	ldrb	w0, [sp, #46]
  409c20:	cmp	w0, #0x0
  409c24:	b.eq	409c30 <__fxstatat@plt+0x70d0>  // b.none
  409c28:	mov	w0, #0x1                   	// #1
  409c2c:	b	409c44 <__fxstatat@plt+0x70e4>
  409c30:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409c34:	add	x2, x0, #0x8b0
  409c38:	ldr	x1, [sp, #16]
  409c3c:	ldr	x0, [sp, #24]
  409c40:	bl	408d7c <__fxstatat@plt+0x621c>
  409c44:	ldp	x29, x30, [sp], #48
  409c48:	ret
  409c4c:	stp	x29, x30, [sp, #-48]!
  409c50:	mov	x29, sp
  409c54:	str	x0, [sp, #24]
  409c58:	str	x1, [sp, #16]
  409c5c:	ldr	x0, [sp, #24]
  409c60:	bl	40869c <__fxstatat@plt+0x5b3c>
  409c64:	strb	w0, [sp, #47]
  409c68:	ldr	x0, [sp, #16]
  409c6c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409c70:	strb	w0, [sp, #46]
  409c74:	ldrb	w0, [sp, #47]
  409c78:	cmp	w0, #0x0
  409c7c:	b.eq	409c9c <__fxstatat@plt+0x713c>  // b.none
  409c80:	ldrb	w0, [sp, #46]
  409c84:	eor	w0, w0, #0x1
  409c88:	and	w0, w0, #0xff
  409c8c:	cmp	w0, #0x0
  409c90:	b.eq	409c9c <__fxstatat@plt+0x713c>  // b.none
  409c94:	mov	w0, #0xffffffff            	// #-1
  409c98:	b	409cd8 <__fxstatat@plt+0x7178>
  409c9c:	ldrb	w0, [sp, #47]
  409ca0:	eor	w0, w0, #0x1
  409ca4:	and	w0, w0, #0xff
  409ca8:	cmp	w0, #0x0
  409cac:	b.eq	409cc4 <__fxstatat@plt+0x7164>  // b.none
  409cb0:	ldrb	w0, [sp, #46]
  409cb4:	cmp	w0, #0x0
  409cb8:	b.eq	409cc4 <__fxstatat@plt+0x7164>  // b.none
  409cbc:	mov	w0, #0x1                   	// #1
  409cc0:	b	409cd8 <__fxstatat@plt+0x7178>
  409cc4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409cc8:	add	x2, x0, #0xa84
  409ccc:	ldr	x1, [sp, #24]
  409cd0:	ldr	x0, [sp, #16]
  409cd4:	bl	408d7c <__fxstatat@plt+0x621c>
  409cd8:	ldp	x29, x30, [sp], #48
  409cdc:	ret
  409ce0:	stp	x29, x30, [sp, #-48]!
  409ce4:	mov	x29, sp
  409ce8:	str	x0, [sp, #24]
  409cec:	str	x1, [sp, #16]
  409cf0:	ldr	x0, [sp, #24]
  409cf4:	bl	40869c <__fxstatat@plt+0x5b3c>
  409cf8:	strb	w0, [sp, #47]
  409cfc:	ldr	x0, [sp, #16]
  409d00:	bl	40869c <__fxstatat@plt+0x5b3c>
  409d04:	strb	w0, [sp, #46]
  409d08:	ldrb	w0, [sp, #47]
  409d0c:	cmp	w0, #0x0
  409d10:	b.eq	409d30 <__fxstatat@plt+0x71d0>  // b.none
  409d14:	ldrb	w0, [sp, #46]
  409d18:	eor	w0, w0, #0x1
  409d1c:	and	w0, w0, #0xff
  409d20:	cmp	w0, #0x0
  409d24:	b.eq	409d30 <__fxstatat@plt+0x71d0>  // b.none
  409d28:	mov	w0, #0xffffffff            	// #-1
  409d2c:	b	409d6c <__fxstatat@plt+0x720c>
  409d30:	ldrb	w0, [sp, #47]
  409d34:	eor	w0, w0, #0x1
  409d38:	and	w0, w0, #0xff
  409d3c:	cmp	w0, #0x0
  409d40:	b.eq	409d58 <__fxstatat@plt+0x71f8>  // b.none
  409d44:	ldrb	w0, [sp, #46]
  409d48:	cmp	w0, #0x0
  409d4c:	b.eq	409d58 <__fxstatat@plt+0x71f8>  // b.none
  409d50:	mov	w0, #0x1                   	// #1
  409d54:	b	409d6c <__fxstatat@plt+0x720c>
  409d58:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409d5c:	add	x2, x0, #0x8b0
  409d60:	ldr	x1, [sp, #24]
  409d64:	ldr	x0, [sp, #16]
  409d68:	bl	408d7c <__fxstatat@plt+0x621c>
  409d6c:	ldp	x29, x30, [sp], #48
  409d70:	ret
  409d74:	stp	x29, x30, [sp, #-32]!
  409d78:	mov	x29, sp
  409d7c:	str	x0, [sp, #24]
  409d80:	str	x1, [sp, #16]
  409d84:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409d88:	add	x2, x0, #0xa84
  409d8c:	ldr	x1, [sp, #16]
  409d90:	ldr	x0, [sp, #24]
  409d94:	bl	408db8 <__fxstatat@plt+0x6258>
  409d98:	ldp	x29, x30, [sp], #32
  409d9c:	ret
  409da0:	stp	x29, x30, [sp, #-32]!
  409da4:	mov	x29, sp
  409da8:	str	x0, [sp, #24]
  409dac:	str	x1, [sp, #16]
  409db0:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409db4:	add	x2, x0, #0x8b0
  409db8:	ldr	x1, [sp, #16]
  409dbc:	ldr	x0, [sp, #24]
  409dc0:	bl	408db8 <__fxstatat@plt+0x6258>
  409dc4:	ldp	x29, x30, [sp], #32
  409dc8:	ret
  409dcc:	stp	x29, x30, [sp, #-32]!
  409dd0:	mov	x29, sp
  409dd4:	str	x0, [sp, #24]
  409dd8:	str	x1, [sp, #16]
  409ddc:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409de0:	add	x2, x0, #0xa84
  409de4:	ldr	x1, [sp, #24]
  409de8:	ldr	x0, [sp, #16]
  409dec:	bl	408db8 <__fxstatat@plt+0x6258>
  409df0:	ldp	x29, x30, [sp], #32
  409df4:	ret
  409df8:	stp	x29, x30, [sp, #-32]!
  409dfc:	mov	x29, sp
  409e00:	str	x0, [sp, #24]
  409e04:	str	x1, [sp, #16]
  409e08:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409e0c:	add	x2, x0, #0x8b0
  409e10:	ldr	x1, [sp, #24]
  409e14:	ldr	x0, [sp, #16]
  409e18:	bl	408db8 <__fxstatat@plt+0x6258>
  409e1c:	ldp	x29, x30, [sp], #32
  409e20:	ret
  409e24:	stp	x29, x30, [sp, #-48]!
  409e28:	mov	x29, sp
  409e2c:	str	x0, [sp, #24]
  409e30:	str	x1, [sp, #16]
  409e34:	ldr	x0, [sp, #24]
  409e38:	bl	40869c <__fxstatat@plt+0x5b3c>
  409e3c:	strb	w0, [sp, #47]
  409e40:	ldr	x0, [sp, #16]
  409e44:	bl	40869c <__fxstatat@plt+0x5b3c>
  409e48:	strb	w0, [sp, #46]
  409e4c:	ldrb	w0, [sp, #47]
  409e50:	cmp	w0, #0x0
  409e54:	b.eq	409e74 <__fxstatat@plt+0x7314>  // b.none
  409e58:	ldrb	w0, [sp, #46]
  409e5c:	eor	w0, w0, #0x1
  409e60:	and	w0, w0, #0xff
  409e64:	cmp	w0, #0x0
  409e68:	b.eq	409e74 <__fxstatat@plt+0x7314>  // b.none
  409e6c:	mov	w0, #0xffffffff            	// #-1
  409e70:	b	409eb0 <__fxstatat@plt+0x7350>
  409e74:	ldrb	w0, [sp, #47]
  409e78:	eor	w0, w0, #0x1
  409e7c:	and	w0, w0, #0xff
  409e80:	cmp	w0, #0x0
  409e84:	b.eq	409e9c <__fxstatat@plt+0x733c>  // b.none
  409e88:	ldrb	w0, [sp, #46]
  409e8c:	cmp	w0, #0x0
  409e90:	b.eq	409e9c <__fxstatat@plt+0x733c>  // b.none
  409e94:	mov	w0, #0x1                   	// #1
  409e98:	b	409eb0 <__fxstatat@plt+0x7350>
  409e9c:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409ea0:	add	x2, x0, #0xa84
  409ea4:	ldr	x1, [sp, #16]
  409ea8:	ldr	x0, [sp, #24]
  409eac:	bl	408db8 <__fxstatat@plt+0x6258>
  409eb0:	ldp	x29, x30, [sp], #48
  409eb4:	ret
  409eb8:	stp	x29, x30, [sp, #-48]!
  409ebc:	mov	x29, sp
  409ec0:	str	x0, [sp, #24]
  409ec4:	str	x1, [sp, #16]
  409ec8:	ldr	x0, [sp, #24]
  409ecc:	bl	40869c <__fxstatat@plt+0x5b3c>
  409ed0:	strb	w0, [sp, #47]
  409ed4:	ldr	x0, [sp, #16]
  409ed8:	bl	40869c <__fxstatat@plt+0x5b3c>
  409edc:	strb	w0, [sp, #46]
  409ee0:	ldrb	w0, [sp, #47]
  409ee4:	cmp	w0, #0x0
  409ee8:	b.eq	409f08 <__fxstatat@plt+0x73a8>  // b.none
  409eec:	ldrb	w0, [sp, #46]
  409ef0:	eor	w0, w0, #0x1
  409ef4:	and	w0, w0, #0xff
  409ef8:	cmp	w0, #0x0
  409efc:	b.eq	409f08 <__fxstatat@plt+0x73a8>  // b.none
  409f00:	mov	w0, #0xffffffff            	// #-1
  409f04:	b	409f44 <__fxstatat@plt+0x73e4>
  409f08:	ldrb	w0, [sp, #47]
  409f0c:	eor	w0, w0, #0x1
  409f10:	and	w0, w0, #0xff
  409f14:	cmp	w0, #0x0
  409f18:	b.eq	409f30 <__fxstatat@plt+0x73d0>  // b.none
  409f1c:	ldrb	w0, [sp, #46]
  409f20:	cmp	w0, #0x0
  409f24:	b.eq	409f30 <__fxstatat@plt+0x73d0>  // b.none
  409f28:	mov	w0, #0x1                   	// #1
  409f2c:	b	409f44 <__fxstatat@plt+0x73e4>
  409f30:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  409f34:	add	x2, x0, #0x8b0
  409f38:	ldr	x1, [sp, #16]
  409f3c:	ldr	x0, [sp, #24]
  409f40:	bl	408db8 <__fxstatat@plt+0x6258>
  409f44:	ldp	x29, x30, [sp], #48
  409f48:	ret
  409f4c:	stp	x29, x30, [sp, #-48]!
  409f50:	mov	x29, sp
  409f54:	str	x0, [sp, #24]
  409f58:	str	x1, [sp, #16]
  409f5c:	ldr	x0, [sp, #24]
  409f60:	bl	40869c <__fxstatat@plt+0x5b3c>
  409f64:	strb	w0, [sp, #47]
  409f68:	ldr	x0, [sp, #16]
  409f6c:	bl	40869c <__fxstatat@plt+0x5b3c>
  409f70:	strb	w0, [sp, #46]
  409f74:	ldrb	w0, [sp, #47]
  409f78:	cmp	w0, #0x0
  409f7c:	b.eq	409f9c <__fxstatat@plt+0x743c>  // b.none
  409f80:	ldrb	w0, [sp, #46]
  409f84:	eor	w0, w0, #0x1
  409f88:	and	w0, w0, #0xff
  409f8c:	cmp	w0, #0x0
  409f90:	b.eq	409f9c <__fxstatat@plt+0x743c>  // b.none
  409f94:	mov	w0, #0xffffffff            	// #-1
  409f98:	b	409fd8 <__fxstatat@plt+0x7478>
  409f9c:	ldrb	w0, [sp, #47]
  409fa0:	eor	w0, w0, #0x1
  409fa4:	and	w0, w0, #0xff
  409fa8:	cmp	w0, #0x0
  409fac:	b.eq	409fc4 <__fxstatat@plt+0x7464>  // b.none
  409fb0:	ldrb	w0, [sp, #46]
  409fb4:	cmp	w0, #0x0
  409fb8:	b.eq	409fc4 <__fxstatat@plt+0x7464>  // b.none
  409fbc:	mov	w0, #0x1                   	// #1
  409fc0:	b	409fd8 <__fxstatat@plt+0x7478>
  409fc4:	adrp	x0, 408000 <__fxstatat@plt+0x54a0>
  409fc8:	add	x2, x0, #0xa84
  409fcc:	ldr	x1, [sp, #24]
  409fd0:	ldr	x0, [sp, #16]
  409fd4:	bl	408db8 <__fxstatat@plt+0x6258>
  409fd8:	ldp	x29, x30, [sp], #48
  409fdc:	ret
  409fe0:	stp	x29, x30, [sp, #-48]!
  409fe4:	mov	x29, sp
  409fe8:	str	x0, [sp, #24]
  409fec:	str	x1, [sp, #16]
  409ff0:	ldr	x0, [sp, #24]
  409ff4:	bl	40869c <__fxstatat@plt+0x5b3c>
  409ff8:	strb	w0, [sp, #47]
  409ffc:	ldr	x0, [sp, #16]
  40a000:	bl	40869c <__fxstatat@plt+0x5b3c>
  40a004:	strb	w0, [sp, #46]
  40a008:	ldrb	w0, [sp, #47]
  40a00c:	cmp	w0, #0x0
  40a010:	b.eq	40a030 <__fxstatat@plt+0x74d0>  // b.none
  40a014:	ldrb	w0, [sp, #46]
  40a018:	eor	w0, w0, #0x1
  40a01c:	and	w0, w0, #0xff
  40a020:	cmp	w0, #0x0
  40a024:	b.eq	40a030 <__fxstatat@plt+0x74d0>  // b.none
  40a028:	mov	w0, #0xffffffff            	// #-1
  40a02c:	b	40a06c <__fxstatat@plt+0x750c>
  40a030:	ldrb	w0, [sp, #47]
  40a034:	eor	w0, w0, #0x1
  40a038:	and	w0, w0, #0xff
  40a03c:	cmp	w0, #0x0
  40a040:	b.eq	40a058 <__fxstatat@plt+0x74f8>  // b.none
  40a044:	ldrb	w0, [sp, #46]
  40a048:	cmp	w0, #0x0
  40a04c:	b.eq	40a058 <__fxstatat@plt+0x74f8>  // b.none
  40a050:	mov	w0, #0x1                   	// #1
  40a054:	b	40a06c <__fxstatat@plt+0x750c>
  40a058:	adrp	x0, 402000 <mbrtowc@plt-0x480>
  40a05c:	add	x2, x0, #0x8b0
  40a060:	ldr	x1, [sp, #24]
  40a064:	ldr	x0, [sp, #16]
  40a068:	bl	408db8 <__fxstatat@plt+0x6258>
  40a06c:	ldp	x29, x30, [sp], #48
  40a070:	ret
  40a074:	stp	x29, x30, [sp, #-32]!
  40a078:	mov	x29, sp
  40a07c:	str	x0, [sp, #24]
  40a080:	str	x1, [sp, #16]
  40a084:	ldr	x0, [sp, #24]
  40a088:	ldr	x2, [x0]
  40a08c:	ldr	x0, [sp, #16]
  40a090:	ldr	x0, [x0]
  40a094:	mov	x1, x0
  40a098:	mov	x0, x2
  40a09c:	bl	4102b4 <__fxstatat@plt+0xd754>
  40a0a0:	ldp	x29, x30, [sp], #32
  40a0a4:	ret
  40a0a8:	stp	x29, x30, [sp, #-32]!
  40a0ac:	mov	x29, sp
  40a0b0:	str	x0, [sp, #24]
  40a0b4:	str	x1, [sp, #16]
  40a0b8:	ldr	x1, [sp, #16]
  40a0bc:	ldr	x0, [sp, #24]
  40a0c0:	bl	40a074 <__fxstatat@plt+0x7514>
  40a0c4:	ldp	x29, x30, [sp], #32
  40a0c8:	ret
  40a0cc:	stp	x29, x30, [sp, #-32]!
  40a0d0:	mov	x29, sp
  40a0d4:	str	x0, [sp, #24]
  40a0d8:	str	x1, [sp, #16]
  40a0dc:	ldr	x1, [sp, #24]
  40a0e0:	ldr	x0, [sp, #16]
  40a0e4:	bl	40a074 <__fxstatat@plt+0x7514>
  40a0e8:	ldp	x29, x30, [sp], #32
  40a0ec:	ret
  40a0f0:	stp	x29, x30, [sp, #-48]!
  40a0f4:	mov	x29, sp
  40a0f8:	str	x0, [sp, #24]
  40a0fc:	str	x1, [sp, #16]
  40a100:	ldr	x0, [sp, #24]
  40a104:	bl	40869c <__fxstatat@plt+0x5b3c>
  40a108:	strb	w0, [sp, #47]
  40a10c:	ldr	x0, [sp, #16]
  40a110:	bl	40869c <__fxstatat@plt+0x5b3c>
  40a114:	strb	w0, [sp, #46]
  40a118:	ldrb	w0, [sp, #47]
  40a11c:	cmp	w0, #0x0
  40a120:	b.eq	40a140 <__fxstatat@plt+0x75e0>  // b.none
  40a124:	ldrb	w0, [sp, #46]
  40a128:	eor	w0, w0, #0x1
  40a12c:	and	w0, w0, #0xff
  40a130:	cmp	w0, #0x0
  40a134:	b.eq	40a140 <__fxstatat@plt+0x75e0>  // b.none
  40a138:	mov	w0, #0xffffffff            	// #-1
  40a13c:	b	40a174 <__fxstatat@plt+0x7614>
  40a140:	ldrb	w0, [sp, #47]
  40a144:	eor	w0, w0, #0x1
  40a148:	and	w0, w0, #0xff
  40a14c:	cmp	w0, #0x0
  40a150:	b.eq	40a168 <__fxstatat@plt+0x7608>  // b.none
  40a154:	ldrb	w0, [sp, #46]
  40a158:	cmp	w0, #0x0
  40a15c:	b.eq	40a168 <__fxstatat@plt+0x7608>  // b.none
  40a160:	mov	w0, #0x1                   	// #1
  40a164:	b	40a174 <__fxstatat@plt+0x7614>
  40a168:	ldr	x1, [sp, #16]
  40a16c:	ldr	x0, [sp, #24]
  40a170:	bl	40a074 <__fxstatat@plt+0x7514>
  40a174:	ldp	x29, x30, [sp], #48
  40a178:	ret
  40a17c:	stp	x29, x30, [sp, #-48]!
  40a180:	mov	x29, sp
  40a184:	str	x0, [sp, #24]
  40a188:	str	x1, [sp, #16]
  40a18c:	ldr	x0, [sp, #24]
  40a190:	bl	40869c <__fxstatat@plt+0x5b3c>
  40a194:	strb	w0, [sp, #47]
  40a198:	ldr	x0, [sp, #16]
  40a19c:	bl	40869c <__fxstatat@plt+0x5b3c>
  40a1a0:	strb	w0, [sp, #46]
  40a1a4:	ldrb	w0, [sp, #47]
  40a1a8:	cmp	w0, #0x0
  40a1ac:	b.eq	40a1cc <__fxstatat@plt+0x766c>  // b.none
  40a1b0:	ldrb	w0, [sp, #46]
  40a1b4:	eor	w0, w0, #0x1
  40a1b8:	and	w0, w0, #0xff
  40a1bc:	cmp	w0, #0x0
  40a1c0:	b.eq	40a1cc <__fxstatat@plt+0x766c>  // b.none
  40a1c4:	mov	w0, #0xffffffff            	// #-1
  40a1c8:	b	40a200 <__fxstatat@plt+0x76a0>
  40a1cc:	ldrb	w0, [sp, #47]
  40a1d0:	eor	w0, w0, #0x1
  40a1d4:	and	w0, w0, #0xff
  40a1d8:	cmp	w0, #0x0
  40a1dc:	b.eq	40a1f4 <__fxstatat@plt+0x7694>  // b.none
  40a1e0:	ldrb	w0, [sp, #46]
  40a1e4:	cmp	w0, #0x0
  40a1e8:	b.eq	40a1f4 <__fxstatat@plt+0x7694>  // b.none
  40a1ec:	mov	w0, #0x1                   	// #1
  40a1f0:	b	40a200 <__fxstatat@plt+0x76a0>
  40a1f4:	ldr	x1, [sp, #24]
  40a1f8:	ldr	x0, [sp, #16]
  40a1fc:	bl	40a074 <__fxstatat@plt+0x7514>
  40a200:	ldp	x29, x30, [sp], #48
  40a204:	ret
  40a208:	sub	sp, sp, #0x10
  40a20c:	str	xzr, [sp, #8]
  40a210:	b	40a26c <__fxstatat@plt+0x770c>
  40a214:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a218:	add	x0, x0, #0x618
  40a21c:	ldr	x2, [x0]
  40a220:	ldr	x1, [sp, #8]
  40a224:	mov	x0, x1
  40a228:	lsl	x0, x0, #1
  40a22c:	add	x0, x0, x1
  40a230:	lsl	x0, x0, #3
  40a234:	sub	x0, x0, x1
  40a238:	lsl	x0, x0, #3
  40a23c:	mov	x3, x0
  40a240:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a244:	add	x0, x0, #0x638
  40a248:	ldr	x1, [x0]
  40a24c:	ldr	x0, [sp, #8]
  40a250:	lsl	x0, x0, #3
  40a254:	add	x0, x1, x0
  40a258:	add	x1, x2, x3
  40a25c:	str	x1, [x0]
  40a260:	ldr	x0, [sp, #8]
  40a264:	add	x0, x0, #0x1
  40a268:	str	x0, [sp, #8]
  40a26c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a270:	add	x0, x0, #0x628
  40a274:	ldr	x0, [x0]
  40a278:	ldr	x1, [sp, #8]
  40a27c:	cmp	x1, x0
  40a280:	b.cc	40a214 <__fxstatat@plt+0x76b4>  // b.lo, b.ul, b.last
  40a284:	nop
  40a288:	nop
  40a28c:	add	sp, sp, #0x10
  40a290:	ret
  40a294:	stp	x29, x30, [sp, #-32]!
  40a298:	mov	x29, sp
  40a29c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2a0:	add	x0, x0, #0x628
  40a2a4:	ldr	x0, [x0]
  40a2a8:	lsr	x1, x0, #1
  40a2ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2b0:	add	x0, x0, #0x628
  40a2b4:	ldr	x0, [x0]
  40a2b8:	add	x1, x1, x0
  40a2bc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2c0:	add	x0, x0, #0x640
  40a2c4:	ldr	x0, [x0]
  40a2c8:	cmp	x1, x0
  40a2cc:	b.ls	40a328 <__fxstatat@plt+0x77c8>  // b.plast
  40a2d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2d4:	add	x0, x0, #0x638
  40a2d8:	ldr	x0, [x0]
  40a2dc:	bl	4028f0 <free@plt>
  40a2e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2e4:	add	x0, x0, #0x628
  40a2e8:	ldr	x0, [x0]
  40a2ec:	mov	x1, #0x18                  	// #24
  40a2f0:	bl	419e4c <__fxstatat@plt+0x172ec>
  40a2f4:	mov	x1, x0
  40a2f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a2fc:	add	x0, x0, #0x638
  40a300:	str	x1, [x0]
  40a304:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a308:	add	x0, x0, #0x628
  40a30c:	ldr	x1, [x0]
  40a310:	mov	x0, x1
  40a314:	lsl	x0, x0, #1
  40a318:	add	x1, x0, x1
  40a31c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a320:	add	x0, x0, #0x640
  40a324:	str	x1, [x0]
  40a328:	bl	40a208 <__fxstatat@plt+0x76a8>
  40a32c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a330:	add	x0, x0, #0x6a4
  40a334:	ldr	w0, [x0]
  40a338:	cmn	w0, #0x1
  40a33c:	b.eq	40a458 <__fxstatat@plt+0x78f8>  // b.none
  40a340:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40a344:	add	x0, x0, #0x5f0
  40a348:	bl	402530 <_setjmp@plt>
  40a34c:	cmp	w0, #0x0
  40a350:	b.ne	40a35c <__fxstatat@plt+0x77fc>  // b.any
  40a354:	strb	wzr, [sp, #31]
  40a358:	b	40a39c <__fxstatat@plt+0x783c>
  40a35c:	mov	w0, #0x1                   	// #1
  40a360:	strb	w0, [sp, #31]
  40a364:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a368:	add	x0, x0, #0x6a4
  40a36c:	ldr	w0, [x0]
  40a370:	cmp	w0, #0x3
  40a374:	b.ne	40a398 <__fxstatat@plt+0x7838>  // b.any
  40a378:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40a37c:	add	x3, x0, #0x160
  40a380:	mov	w2, #0xeea                 	// #3818
  40a384:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40a388:	add	x1, x0, #0x768
  40a38c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a390:	add	x0, x0, #0x3b8
  40a394:	bl	402ab0 <__assert_fail@plt>
  40a398:	bl	40a208 <__fxstatat@plt+0x76a8>
  40a39c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3a0:	add	x0, x0, #0x638
  40a3a4:	ldr	x4, [x0]
  40a3a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3ac:	add	x0, x0, #0x628
  40a3b0:	ldr	x5, [x0]
  40a3b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3b8:	add	x0, x0, #0x6a4
  40a3bc:	ldr	w0, [x0]
  40a3c0:	cmp	w0, #0x4
  40a3c4:	b.ne	40a3d8 <__fxstatat@plt+0x7878>  // b.any
  40a3c8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3cc:	add	x0, x0, #0x6a0
  40a3d0:	ldr	w0, [x0]
  40a3d4:	b	40a3dc <__fxstatat@plt+0x787c>
  40a3d8:	mov	w0, #0x0                   	// #0
  40a3dc:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3e0:	add	x1, x1, #0x6a4
  40a3e4:	ldr	w1, [x1]
  40a3e8:	add	w3, w0, w1
  40a3ec:	ldrb	w2, [sp, #31]
  40a3f0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a3f4:	add	x0, x0, #0x6a8
  40a3f8:	ldrb	w0, [x0]
  40a3fc:	mov	w6, w0
  40a400:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a404:	add	x0, x0, #0x6e2
  40a408:	ldrb	w0, [x0]
  40a40c:	mov	w1, w0
  40a410:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a414:	add	x0, x0, #0x1f8
  40a418:	sxtw	x1, w1
  40a41c:	sxtw	x2, w2
  40a420:	mov	w3, w3
  40a424:	lsl	x3, x3, #1
  40a428:	add	x3, x3, x2
  40a42c:	sxtw	x2, w6
  40a430:	lsl	x3, x3, #1
  40a434:	add	x2, x3, x2
  40a438:	lsl	x2, x2, #1
  40a43c:	add	x1, x2, x1
  40a440:	ldr	x0, [x0, x1, lsl #3]
  40a444:	mov	x2, x0
  40a448:	mov	x1, x5
  40a44c:	mov	x0, x4
  40a450:	bl	414360 <__fxstatat@plt+0x11800>
  40a454:	b	40a45c <__fxstatat@plt+0x78fc>
  40a458:	nop
  40a45c:	ldp	x29, x30, [sp], #32
  40a460:	ret
  40a464:	stp	x29, x30, [sp, #-32]!
  40a468:	mov	x29, sp
  40a46c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a470:	add	x0, x0, #0x69c
  40a474:	ldr	w0, [x0]
  40a478:	cmp	w0, #0x4
  40a47c:	b.eq	40a564 <__fxstatat@plt+0x7a04>  // b.none
  40a480:	cmp	w0, #0x4
  40a484:	b.hi	40a5e8 <__fxstatat@plt+0x7a88>  // b.pmore
  40a488:	cmp	w0, #0x3
  40a48c:	b.eq	40a53c <__fxstatat@plt+0x79dc>  // b.none
  40a490:	cmp	w0, #0x3
  40a494:	b.hi	40a5e8 <__fxstatat@plt+0x7a88>  // b.pmore
  40a498:	cmp	w0, #0x2
  40a49c:	b.eq	40a514 <__fxstatat@plt+0x79b4>  // b.none
  40a4a0:	cmp	w0, #0x2
  40a4a4:	b.hi	40a5e8 <__fxstatat@plt+0x7a88>  // b.pmore
  40a4a8:	cmp	w0, #0x0
  40a4ac:	b.eq	40a570 <__fxstatat@plt+0x7a10>  // b.none
  40a4b0:	cmp	w0, #0x1
  40a4b4:	b.ne	40a5e8 <__fxstatat@plt+0x7a88>  // b.any
  40a4b8:	str	xzr, [sp, #24]
  40a4bc:	b	40a4f8 <__fxstatat@plt+0x7998>
  40a4c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a4c4:	add	x0, x0, #0x638
  40a4c8:	ldr	x1, [x0]
  40a4cc:	ldr	x0, [sp, #24]
  40a4d0:	lsl	x0, x0, #3
  40a4d4:	add	x0, x1, x0
  40a4d8:	ldr	x0, [x0]
  40a4dc:	mov	x1, #0x0                   	// #0
  40a4e0:	bl	40c294 <__fxstatat@plt+0x9734>
  40a4e4:	mov	w0, #0xa                   	// #10
  40a4e8:	bl	402770 <putchar_unlocked@plt>
  40a4ec:	ldr	x0, [sp, #24]
  40a4f0:	add	x0, x0, #0x1
  40a4f4:	str	x0, [sp, #24]
  40a4f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a4fc:	add	x0, x0, #0x628
  40a500:	ldr	x0, [x0]
  40a504:	ldr	x1, [sp, #24]
  40a508:	cmp	x1, x0
  40a50c:	b.cc	40a4c0 <__fxstatat@plt+0x7960>  // b.lo, b.ul, b.last
  40a510:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a514:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a518:	add	x0, x0, #0x720
  40a51c:	ldr	x0, [x0]
  40a520:	cmp	x0, #0x0
  40a524:	b.ne	40a534 <__fxstatat@plt+0x79d4>  // b.any
  40a528:	mov	w0, #0x20                  	// #32
  40a52c:	bl	40d1ec <__fxstatat@plt+0xa68c>
  40a530:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a534:	bl	40ced0 <__fxstatat@plt+0xa370>
  40a538:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a53c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a540:	add	x0, x0, #0x720
  40a544:	ldr	x0, [x0]
  40a548:	cmp	x0, #0x0
  40a54c:	b.ne	40a55c <__fxstatat@plt+0x79fc>  // b.any
  40a550:	mov	w0, #0x20                  	// #32
  40a554:	bl	40d1ec <__fxstatat@plt+0xa68c>
  40a558:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a55c:	bl	40d068 <__fxstatat@plt+0xa508>
  40a560:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a564:	mov	w0, #0x2c                  	// #44
  40a568:	bl	40d1ec <__fxstatat@plt+0xa68c>
  40a56c:	b	40a5e8 <__fxstatat@plt+0x7a88>
  40a570:	str	xzr, [sp, #24]
  40a574:	b	40a5cc <__fxstatat@plt+0x7a6c>
  40a578:	bl	403a80 <__fxstatat@plt+0xf20>
  40a57c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a580:	add	x0, x0, #0x638
  40a584:	ldr	x1, [x0]
  40a588:	ldr	x0, [sp, #24]
  40a58c:	lsl	x0, x0, #3
  40a590:	add	x0, x1, x0
  40a594:	ldr	x0, [x0]
  40a598:	bl	40aab8 <__fxstatat@plt+0x7f58>
  40a59c:	mov	w0, #0xa                   	// #10
  40a5a0:	bl	402770 <putchar_unlocked@plt>
  40a5a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a5a8:	add	x0, x0, #0x7d8
  40a5ac:	ldr	x0, [x0]
  40a5b0:	add	x1, x0, #0x1
  40a5b4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a5b8:	add	x0, x0, #0x7d8
  40a5bc:	str	x1, [x0]
  40a5c0:	ldr	x0, [sp, #24]
  40a5c4:	add	x0, x0, #0x1
  40a5c8:	str	x0, [sp, #24]
  40a5cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a5d0:	add	x0, x0, #0x628
  40a5d4:	ldr	x0, [x0]
  40a5d8:	ldr	x1, [sp, #24]
  40a5dc:	cmp	x1, x0
  40a5e0:	b.cc	40a578 <__fxstatat@plt+0x7a18>  // b.lo, b.ul, b.last
  40a5e4:	nop
  40a5e8:	nop
  40a5ec:	ldp	x29, x30, [sp], #32
  40a5f0:	ret
  40a5f4:	stp	x29, x30, [sp, #-80]!
  40a5f8:	mov	x29, sp
  40a5fc:	str	x0, [sp, #56]
  40a600:	str	x1, [sp, #48]
  40a604:	strb	w2, [sp, #47]
  40a608:	str	x3, [sp, #32]
  40a60c:	str	x4, [sp, #24]
  40a610:	str	w5, [sp, #40]
  40a614:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40a618:	add	x0, x0, #0x5e8
  40a61c:	ldrb	w0, [x0]
  40a620:	cmp	w0, #0x0
  40a624:	b.eq	40a664 <__fxstatat@plt+0x7b04>  // b.none
  40a628:	ldrb	w1, [sp, #47]
  40a62c:	ldr	x0, [sp, #32]
  40a630:	ldr	w0, [x0, #16]
  40a634:	sxtw	x2, w0
  40a638:	sxtw	x1, w1
  40a63c:	mov	x0, x1
  40a640:	lsl	x0, x0, #1
  40a644:	add	x0, x0, x1
  40a648:	lsl	x0, x0, #2
  40a64c:	add	x0, x2, x0
  40a650:	lsl	x1, x0, #7
  40a654:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a658:	add	x0, x0, #0x9e8
  40a65c:	add	x0, x1, x0
  40a660:	b	40a678 <__fxstatat@plt+0x7b18>
  40a664:	ldrb	w1, [sp, #47]
  40a668:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a66c:	add	x0, x0, #0x518
  40a670:	sxtw	x1, w1
  40a674:	ldr	x0, [x0, x1, lsl #3]
  40a678:	str	x0, [sp, #72]
  40a67c:	ldr	w5, [sp, #40]
  40a680:	ldr	x4, [sp, #24]
  40a684:	ldr	x3, [sp, #32]
  40a688:	ldr	x2, [sp, #72]
  40a68c:	ldr	x1, [sp, #48]
  40a690:	ldr	x0, [sp, #56]
  40a694:	bl	4144dc <__fxstatat@plt+0x1197c>
  40a698:	ldp	x29, x30, [sp], #80
  40a69c:	ret
  40a6a0:	sub	sp, sp, #0x450
  40a6a4:	stp	x29, x30, [sp]
  40a6a8:	mov	x29, sp
  40a6ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a6b0:	add	x0, x0, #0x52c
  40a6b4:	ldr	w0, [x0]
  40a6b8:	cmp	w0, #0x0
  40a6bc:	b.ge	40a760 <__fxstatat@plt+0x7c00>  // b.tcont
  40a6c0:	str	xzr, [sp, #1088]
  40a6c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a6c8:	add	x0, x0, #0x728
  40a6cc:	ldr	x0, [x0]
  40a6d0:	add	x2, sp, #0x18
  40a6d4:	add	x1, sp, #0x440
  40a6d8:	bl	41c1bc <_obstack_memory_used@@Base+0x76c>
  40a6dc:	cmp	x0, #0x0
  40a6e0:	b.eq	40a740 <__fxstatat@plt+0x7be0>  // b.none
  40a6e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a6e8:	add	x0, x0, #0x728
  40a6ec:	ldr	x2, [x0]
  40a6f0:	add	x1, sp, #0x18
  40a6f4:	add	x0, sp, #0x50
  40a6f8:	mov	w5, #0x0                   	// #0
  40a6fc:	mov	x4, x2
  40a700:	mov	x3, x1
  40a704:	mov	w2, #0x0                   	// #0
  40a708:	mov	x1, #0x3e9                 	// #1001
  40a70c:	bl	40a5f4 <__fxstatat@plt+0x7a94>
  40a710:	str	x0, [sp, #1096]
  40a714:	ldr	x0, [sp, #1096]
  40a718:	cmp	x0, #0x0
  40a71c:	b.eq	40a740 <__fxstatat@plt+0x7be0>  // b.none
  40a720:	add	x0, sp, #0x50
  40a724:	mov	w2, #0x0                   	// #0
  40a728:	ldr	x1, [sp, #1096]
  40a72c:	bl	413c24 <__fxstatat@plt+0x110c4>
  40a730:	mov	w1, w0
  40a734:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a738:	add	x0, x0, #0x52c
  40a73c:	str	w1, [x0]
  40a740:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a744:	add	x0, x0, #0x52c
  40a748:	ldr	w0, [x0]
  40a74c:	cmp	w0, #0x0
  40a750:	b.ge	40a760 <__fxstatat@plt+0x7c00>  // b.tcont
  40a754:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a758:	add	x0, x0, #0x52c
  40a75c:	str	wzr, [x0]
  40a760:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a764:	add	x0, x0, #0x52c
  40a768:	ldr	w0, [x0]
  40a76c:	ldp	x29, x30, [sp]
  40a770:	add	sp, sp, #0x450
  40a774:	ret
  40a778:	stp	x29, x30, [sp, #-64]!
  40a77c:	mov	x29, sp
  40a780:	str	x0, [sp, #40]
  40a784:	str	x1, [sp, #32]
  40a788:	str	w2, [sp, #28]
  40a78c:	ldr	x0, [sp, #40]
  40a790:	cmp	x0, #0x0
  40a794:	b.eq	40a81c <__fxstatat@plt+0x7cbc>  // b.none
  40a798:	mov	w1, #0x0                   	// #0
  40a79c:	ldr	x0, [sp, #40]
  40a7a0:	bl	413bf4 <__fxstatat@plt+0x11094>
  40a7a4:	mov	w1, w0
  40a7a8:	ldr	w0, [sp, #28]
  40a7ac:	sub	w0, w0, w1
  40a7b0:	str	w0, [sp, #48]
  40a7b4:	ldr	w1, [sp, #48]
  40a7b8:	ldr	w0, [sp, #48]
  40a7bc:	mov	w2, #0x0                   	// #0
  40a7c0:	cmp	w1, #0x0
  40a7c4:	csel	w0, w0, w2, ge  // ge = tcont
  40a7c8:	str	w0, [sp, #52]
  40a7cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a7d0:	add	x0, x0, #0x5f8
  40a7d4:	ldr	x0, [x0]
  40a7d8:	mov	x1, x0
  40a7dc:	ldr	x0, [sp, #40]
  40a7e0:	bl	402a40 <fputs_unlocked@plt>
  40a7e4:	ldr	x0, [sp, #40]
  40a7e8:	bl	402500 <strlen@plt>
  40a7ec:	mov	x1, x0
  40a7f0:	ldrsw	x0, [sp, #52]
  40a7f4:	add	x0, x1, x0
  40a7f8:	str	x0, [sp, #56]
  40a7fc:	mov	w0, #0x20                  	// #32
  40a800:	bl	402770 <putchar_unlocked@plt>
  40a804:	ldr	w0, [sp, #52]
  40a808:	sub	w1, w0, #0x1
  40a80c:	str	w1, [sp, #52]
  40a810:	cmp	w0, #0x0
  40a814:	b.ne	40a7fc <__fxstatat@plt+0x7c9c>  // b.any
  40a818:	b	40a838 <__fxstatat@plt+0x7cd8>
  40a81c:	ldr	x2, [sp, #32]
  40a820:	ldr	w1, [sp, #28]
  40a824:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a828:	add	x0, x0, #0x3d8
  40a82c:	bl	402aa0 <printf@plt>
  40a830:	ldrsw	x0, [sp, #28]
  40a834:	str	x0, [sp, #56]
  40a838:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a83c:	add	x0, x0, #0x7d8
  40a840:	ldr	x1, [x0]
  40a844:	ldr	x0, [sp, #56]
  40a848:	add	x0, x1, x0
  40a84c:	add	x1, x0, #0x1
  40a850:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a854:	add	x0, x0, #0x7d8
  40a858:	str	x1, [x0]
  40a85c:	nop
  40a860:	ldp	x29, x30, [sp], #64
  40a864:	ret
  40a868:	stp	x29, x30, [sp, #-32]!
  40a86c:	mov	x29, sp
  40a870:	str	w0, [sp, #28]
  40a874:	str	w1, [sp, #24]
  40a878:	strb	w2, [sp, #23]
  40a87c:	ldrb	w0, [sp, #23]
  40a880:	eor	w0, w0, #0x1
  40a884:	and	w0, w0, #0xff
  40a888:	cmp	w0, #0x0
  40a88c:	b.eq	40a89c <__fxstatat@plt+0x7d3c>  // b.none
  40a890:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a894:	add	x0, x0, #0x3e0
  40a898:	b	40a8c0 <__fxstatat@plt+0x7d60>
  40a89c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a8a0:	add	x0, x0, #0x6aa
  40a8a4:	ldrb	w0, [x0]
  40a8a8:	cmp	w0, #0x0
  40a8ac:	b.ne	40a8bc <__fxstatat@plt+0x7d5c>  // b.any
  40a8b0:	ldr	w0, [sp, #28]
  40a8b4:	bl	412ecc <__fxstatat@plt+0x1036c>
  40a8b8:	b	40a8c0 <__fxstatat@plt+0x7d60>
  40a8bc:	mov	x0, #0x0                   	// #0
  40a8c0:	ldr	w1, [sp, #28]
  40a8c4:	ldr	w2, [sp, #24]
  40a8c8:	bl	40a778 <__fxstatat@plt+0x7c18>
  40a8cc:	nop
  40a8d0:	ldp	x29, x30, [sp], #32
  40a8d4:	ret
  40a8d8:	stp	x29, x30, [sp, #-32]!
  40a8dc:	mov	x29, sp
  40a8e0:	str	w0, [sp, #28]
  40a8e4:	str	w1, [sp, #24]
  40a8e8:	strb	w2, [sp, #23]
  40a8ec:	ldrb	w0, [sp, #23]
  40a8f0:	eor	w0, w0, #0x1
  40a8f4:	and	w0, w0, #0xff
  40a8f8:	cmp	w0, #0x0
  40a8fc:	b.eq	40a90c <__fxstatat@plt+0x7dac>  // b.none
  40a900:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a904:	add	x0, x0, #0x3e0
  40a908:	b	40a930 <__fxstatat@plt+0x7dd0>
  40a90c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a910:	add	x0, x0, #0x6aa
  40a914:	ldrb	w0, [x0]
  40a918:	cmp	w0, #0x0
  40a91c:	b.ne	40a92c <__fxstatat@plt+0x7dcc>  // b.any
  40a920:	ldr	w0, [sp, #28]
  40a924:	bl	413164 <__fxstatat@plt+0x10604>
  40a928:	b	40a930 <__fxstatat@plt+0x7dd0>
  40a92c:	mov	x0, #0x0                   	// #0
  40a930:	ldr	w1, [sp, #28]
  40a934:	ldr	w2, [sp, #24]
  40a938:	bl	40a778 <__fxstatat@plt+0x7c18>
  40a93c:	nop
  40a940:	ldp	x29, x30, [sp], #32
  40a944:	ret
  40a948:	stp	x29, x30, [sp, #-64]!
  40a94c:	mov	x29, sp
  40a950:	str	x0, [sp, #24]
  40a954:	str	x1, [sp, #16]
  40a958:	ldr	x0, [sp, #24]
  40a95c:	cmp	x0, #0x0
  40a960:	b.eq	40a98c <__fxstatat@plt+0x7e2c>  // b.none
  40a964:	mov	w1, #0x0                   	// #0
  40a968:	ldr	x0, [sp, #24]
  40a96c:	bl	413bf4 <__fxstatat@plt+0x11094>
  40a970:	str	w0, [sp, #60]
  40a974:	ldr	w1, [sp, #60]
  40a978:	ldr	w0, [sp, #60]
  40a97c:	mov	w2, #0x0                   	// #0
  40a980:	cmp	w1, #0x0
  40a984:	csel	w0, w0, w2, ge  // ge = tcont
  40a988:	b	40a9ac <__fxstatat@plt+0x7e4c>
  40a98c:	add	x3, sp, #0x20
  40a990:	ldr	x2, [sp, #16]
  40a994:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40a998:	add	x1, x0, #0x3e8
  40a99c:	mov	x0, x3
  40a9a0:	bl	4025c0 <sprintf@plt>
  40a9a4:	add	x0, sp, #0x20
  40a9a8:	bl	402500 <strlen@plt>
  40a9ac:	ldp	x29, x30, [sp], #64
  40a9b0:	ret
  40a9b4:	stp	x29, x30, [sp, #-32]!
  40a9b8:	mov	x29, sp
  40a9bc:	str	w0, [sp, #28]
  40a9c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40a9c4:	add	x0, x0, #0x6aa
  40a9c8:	ldrb	w0, [x0]
  40a9cc:	cmp	w0, #0x0
  40a9d0:	b.ne	40a9e0 <__fxstatat@plt+0x7e80>  // b.any
  40a9d4:	ldr	w0, [sp, #28]
  40a9d8:	bl	412ecc <__fxstatat@plt+0x1036c>
  40a9dc:	b	40a9e4 <__fxstatat@plt+0x7e84>
  40a9e0:	mov	x0, #0x0                   	// #0
  40a9e4:	ldr	w1, [sp, #28]
  40a9e8:	bl	40a948 <__fxstatat@plt+0x7de8>
  40a9ec:	ldp	x29, x30, [sp], #32
  40a9f0:	ret
  40a9f4:	stp	x29, x30, [sp, #-32]!
  40a9f8:	mov	x29, sp
  40a9fc:	str	w0, [sp, #28]
  40aa00:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aa04:	add	x0, x0, #0x6aa
  40aa08:	ldrb	w0, [x0]
  40aa0c:	cmp	w0, #0x0
  40aa10:	b.ne	40aa20 <__fxstatat@plt+0x7ec0>  // b.any
  40aa14:	ldr	w0, [sp, #28]
  40aa18:	bl	413164 <__fxstatat@plt+0x10604>
  40aa1c:	b	40aa24 <__fxstatat@plt+0x7ec4>
  40aa20:	mov	x0, #0x0                   	// #0
  40aa24:	ldr	w1, [sp, #28]
  40aa28:	bl	40a948 <__fxstatat@plt+0x7de8>
  40aa2c:	ldp	x29, x30, [sp], #32
  40aa30:	ret
  40aa34:	stp	x29, x30, [sp, #-48]!
  40aa38:	mov	x29, sp
  40aa3c:	str	x0, [sp, #40]
  40aa40:	str	x1, [sp, #32]
  40aa44:	str	x2, [sp, #24]
  40aa48:	ldr	x0, [sp, #32]
  40aa4c:	cmp	x0, #0x14
  40aa50:	b.hi	40aa74 <__fxstatat@plt+0x7f14>  // b.pmore
  40aa54:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40aa58:	add	x3, x0, #0x170
  40aa5c:	mov	w2, #0xfac                 	// #4012
  40aa60:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40aa64:	add	x1, x0, #0x768
  40aa68:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40aa6c:	add	x0, x0, #0x3f0
  40aa70:	bl	402ab0 <__assert_fail@plt>
  40aa74:	ldr	x0, [sp, #24]
  40aa78:	ldrb	w0, [x0, #168]
  40aa7c:	cmp	w0, #0x0
  40aa80:	b.eq	40aaa8 <__fxstatat@plt+0x7f48>  // b.none
  40aa84:	ldr	x0, [sp, #24]
  40aa88:	ldr	x0, [x0, #32]
  40aa8c:	cmp	x0, #0x0
  40aa90:	b.eq	40aaa8 <__fxstatat@plt+0x7f48>  // b.none
  40aa94:	ldr	x0, [sp, #24]
  40aa98:	ldr	x0, [x0, #32]
  40aa9c:	ldr	x1, [sp, #40]
  40aaa0:	bl	41354c <__fxstatat@plt+0x109ec>
  40aaa4:	b	40aab0 <__fxstatat@plt+0x7f50>
  40aaa8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40aaac:	add	x0, x0, #0x3e0
  40aab0:	ldp	x29, x30, [sp], #48
  40aab4:	ret
  40aab8:	mov	x12, #0x1230                	// #4656
  40aabc:	sub	sp, sp, x12
  40aac0:	stp	x29, x30, [sp]
  40aac4:	mov	x29, sp
  40aac8:	stp	x19, x20, [sp, #16]
  40aacc:	str	x21, [sp, #32]
  40aad0:	str	x0, [sp, #56]
  40aad4:	ldr	x0, [sp, #56]
  40aad8:	ldrb	w0, [x0, #168]
  40aadc:	cmp	w0, #0x0
  40aae0:	b.eq	40aafc <__fxstatat@plt+0x7f9c>  // b.none
  40aae4:	ldr	x0, [sp, #56]
  40aae8:	add	x0, x0, #0x18
  40aaec:	add	x1, sp, #0x1, lsl #12
  40aaf0:	add	x1, x1, #0x1e0
  40aaf4:	bl	40fcac <__fxstatat@plt+0xd14c>
  40aaf8:	b	40ab3c <__fxstatat@plt+0x7fdc>
  40aafc:	ldr	x0, [sp, #56]
  40ab00:	ldr	w2, [x0, #152]
  40ab04:	adrp	x0, 421000 <_obstack_memory_used@@Base+0x55b0>
  40ab08:	add	x1, x0, #0xa88
  40ab0c:	mov	w0, w2
  40ab10:	ldrb	w0, [x1, x0]
  40ab14:	add	x1, sp, #0x1, lsl #12
  40ab18:	strb	w0, [x1, #480]
  40ab1c:	add	x0, sp, #0x1, lsl #12
  40ab20:	add	x0, x0, #0x1e0
  40ab24:	add	x0, x0, #0x1
  40ab28:	mov	x2, #0xa                   	// #10
  40ab2c:	mov	w1, #0x3f                  	// #63
  40ab30:	bl	402740 <memset@plt>
  40ab34:	add	x0, sp, #0x1, lsl #12
  40ab38:	strb	wzr, [x0, #491]
  40ab3c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ab40:	add	x0, x0, #0x671
  40ab44:	ldrb	w0, [x0]
  40ab48:	eor	w0, w0, #0x1
  40ab4c:	and	w0, w0, #0xff
  40ab50:	cmp	w0, #0x0
  40ab54:	b.eq	40ab64 <__fxstatat@plt+0x8004>  // b.none
  40ab58:	add	x0, sp, #0x1, lsl #12
  40ab5c:	strb	wzr, [x0, #490]
  40ab60:	b	40aba0 <__fxstatat@plt+0x8040>
  40ab64:	ldr	x0, [sp, #56]
  40ab68:	ldr	w0, [x0, #172]
  40ab6c:	cmp	w0, #0x1
  40ab70:	b.ne	40ab84 <__fxstatat@plt+0x8024>  // b.any
  40ab74:	mov	w0, #0x2e                  	// #46
  40ab78:	add	x1, sp, #0x1, lsl #12
  40ab7c:	strb	w0, [x1, #490]
  40ab80:	b	40aba0 <__fxstatat@plt+0x8040>
  40ab84:	ldr	x0, [sp, #56]
  40ab88:	ldr	w0, [x0, #172]
  40ab8c:	cmp	w0, #0x2
  40ab90:	b.ne	40aba0 <__fxstatat@plt+0x8040>  // b.any
  40ab94:	mov	w0, #0x2b                  	// #43
  40ab98:	add	x1, sp, #0x1, lsl #12
  40ab9c:	strb	w0, [x1, #490]
  40aba0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aba4:	add	x0, x0, #0x6a0
  40aba8:	ldr	w0, [x0]
  40abac:	cmp	w0, #0x2
  40abb0:	b.eq	40abfc <__fxstatat@plt+0x809c>  // b.none
  40abb4:	cmp	w0, #0x2
  40abb8:	b.hi	40ac14 <__fxstatat@plt+0x80b4>  // b.pmore
  40abbc:	cmp	w0, #0x0
  40abc0:	b.eq	40abe4 <__fxstatat@plt+0x8084>  // b.none
  40abc4:	cmp	w0, #0x1
  40abc8:	b.ne	40ac14 <__fxstatat@plt+0x80b4>  // b.any
  40abcc:	ldr	x0, [sp, #56]
  40abd0:	add	x0, x0, #0x18
  40abd4:	bl	419454 <__fxstatat@plt+0x168f4>
  40abd8:	add	x2, sp, #0x400
  40abdc:	stp	x0, x1, [x2, #-112]
  40abe0:	b	40ac18 <__fxstatat@plt+0x80b8>
  40abe4:	ldr	x0, [sp, #56]
  40abe8:	add	x0, x0, #0x18
  40abec:	bl	41946c <__fxstatat@plt+0x1690c>
  40abf0:	add	x2, sp, #0x400
  40abf4:	stp	x0, x1, [x2, #-112]
  40abf8:	b	40ac18 <__fxstatat@plt+0x80b8>
  40abfc:	ldr	x0, [sp, #56]
  40ac00:	add	x0, x0, #0x18
  40ac04:	bl	41943c <__fxstatat@plt+0x168dc>
  40ac08:	add	x2, sp, #0x400
  40ac0c:	stp	x0, x1, [x2, #-112]
  40ac10:	b	40ac18 <__fxstatat@plt+0x80b8>
  40ac14:	bl	402820 <abort@plt>
  40ac18:	add	x0, sp, #0x3a0
  40ac1c:	str	x0, [sp, #4640]
  40ac20:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ac24:	add	x0, x0, #0x6d9
  40ac28:	ldrb	w0, [x0]
  40ac2c:	cmp	w0, #0x0
  40ac30:	b.eq	40ac80 <__fxstatat@plt+0x8120>  // b.none
  40ac34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ac38:	add	x0, x0, #0x674
  40ac3c:	ldr	w19, [x0]
  40ac40:	add	x0, sp, #0x340
  40ac44:	ldr	x2, [sp, #56]
  40ac48:	mov	x1, #0x15                  	// #21
  40ac4c:	bl	40aa34 <__fxstatat@plt+0x7ed4>
  40ac50:	mov	x3, x0
  40ac54:	mov	w2, w19
  40ac58:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40ac5c:	add	x1, x0, #0x418
  40ac60:	ldr	x0, [sp, #4640]
  40ac64:	bl	4025c0 <sprintf@plt>
  40ac68:	ldr	x0, [sp, #4640]
  40ac6c:	bl	402500 <strlen@plt>
  40ac70:	mov	x1, x0
  40ac74:	ldr	x0, [sp, #4640]
  40ac78:	add	x0, x0, x1
  40ac7c:	str	x0, [sp, #4640]
  40ac80:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ac84:	add	x0, x0, #0x6ab
  40ac88:	ldrb	w0, [x0]
  40ac8c:	cmp	w0, #0x0
  40ac90:	b.eq	40ad90 <__fxstatat@plt+0x8230>  // b.none
  40ac94:	ldr	x0, [sp, #56]
  40ac98:	ldrb	w0, [x0, #168]
  40ac9c:	eor	w0, w0, #0x1
  40aca0:	and	w0, w0, #0xff
  40aca4:	cmp	w0, #0x0
  40aca8:	b.eq	40acb8 <__fxstatat@plt+0x8158>  // b.none
  40acac:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40acb0:	add	x0, x0, #0x3e0
  40acb4:	b	40acf8 <__fxstatat@plt+0x8198>
  40acb8:	ldr	x0, [sp, #56]
  40acbc:	ldr	x0, [x0, #88]
  40acc0:	mov	x5, x0
  40acc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40acc8:	add	x0, x0, #0x6ac
  40accc:	ldr	w1, [x0]
  40acd0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40acd4:	add	x0, x0, #0x6b0
  40acd8:	ldr	x2, [x0]
  40acdc:	add	x0, sp, #0x40
  40ace0:	mov	x4, x2
  40ace4:	mov	x3, #0x200                 	// #512
  40ace8:	mov	w2, w1
  40acec:	mov	x1, x0
  40acf0:	mov	x0, x5
  40acf4:	bl	412264 <__fxstatat@plt+0xf704>
  40acf8:	str	x0, [sp, #4632]
  40acfc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ad00:	add	x0, x0, #0x678
  40ad04:	ldr	w19, [x0]
  40ad08:	mov	w1, #0x0                   	// #0
  40ad0c:	ldr	x0, [sp, #4632]
  40ad10:	bl	413bf4 <__fxstatat@plt+0x11094>
  40ad14:	sub	w0, w19, w0
  40ad18:	str	w0, [sp, #4628]
  40ad1c:	b	40ad40 <__fxstatat@plt+0x81e0>
  40ad20:	ldr	x0, [sp, #4640]
  40ad24:	add	x1, x0, #0x1
  40ad28:	str	x1, [sp, #4640]
  40ad2c:	mov	w1, #0x20                  	// #32
  40ad30:	strb	w1, [x0]
  40ad34:	ldr	w0, [sp, #4628]
  40ad38:	sub	w0, w0, #0x1
  40ad3c:	str	w0, [sp, #4628]
  40ad40:	ldr	w0, [sp, #4628]
  40ad44:	cmp	w0, #0x0
  40ad48:	b.gt	40ad20 <__fxstatat@plt+0x81c0>
  40ad4c:	b	40ad54 <__fxstatat@plt+0x81f4>
  40ad50:	nop
  40ad54:	ldr	x1, [sp, #4632]
  40ad58:	add	x0, x1, #0x1
  40ad5c:	str	x0, [sp, #4632]
  40ad60:	ldr	x0, [sp, #4640]
  40ad64:	add	x2, x0, #0x1
  40ad68:	str	x2, [sp, #4640]
  40ad6c:	ldrb	w1, [x1]
  40ad70:	strb	w1, [x0]
  40ad74:	ldrb	w0, [x0]
  40ad78:	cmp	w0, #0x0
  40ad7c:	b.ne	40ad50 <__fxstatat@plt+0x81f0>  // b.any
  40ad80:	ldr	x0, [sp, #4640]
  40ad84:	sub	x0, x0, #0x1
  40ad88:	mov	w1, #0x20                  	// #32
  40ad8c:	strb	w1, [x0]
  40ad90:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ad94:	add	x0, x0, #0x67c
  40ad98:	ldr	w19, [x0]
  40ad9c:	ldr	x0, [sp, #56]
  40ada0:	ldrb	w0, [x0, #168]
  40ada4:	eor	w0, w0, #0x1
  40ada8:	and	w0, w0, #0xff
  40adac:	cmp	w0, #0x0
  40adb0:	b.eq	40adc0 <__fxstatat@plt+0x8260>  // b.none
  40adb4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40adb8:	add	x0, x0, #0x3e0
  40adbc:	b	40add4 <__fxstatat@plt+0x8274>
  40adc0:	ldr	x0, [sp, #56]
  40adc4:	ldr	w0, [x0, #44]
  40adc8:	mov	w0, w0
  40adcc:	add	x1, sp, #0x328
  40add0:	bl	41354c <__fxstatat@plt+0x109ec>
  40add4:	add	x1, sp, #0x1, lsl #12
  40add8:	add	x1, x1, #0x1e0
  40addc:	mov	x4, x0
  40ade0:	mov	w3, w19
  40ade4:	mov	x2, x1
  40ade8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40adec:	add	x1, x0, #0x420
  40adf0:	ldr	x0, [sp, #4640]
  40adf4:	bl	4025c0 <sprintf@plt>
  40adf8:	ldr	x0, [sp, #4640]
  40adfc:	bl	402500 <strlen@plt>
  40ae00:	mov	x1, x0
  40ae04:	ldr	x0, [sp, #4640]
  40ae08:	add	x0, x0, x1
  40ae0c:	str	x0, [sp, #4640]
  40ae10:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae14:	add	x0, x0, #0x6bc
  40ae18:	ldrb	w0, [x0]
  40ae1c:	cmp	w0, #0x0
  40ae20:	b.eq	40ae64 <__fxstatat@plt+0x8304>  // b.none
  40ae24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae28:	add	x0, x0, #0x5f8
  40ae2c:	ldr	x0, [x0]
  40ae30:	mov	x3, x0
  40ae34:	mov	x2, #0x2                   	// #2
  40ae38:	mov	x1, #0x1                   	// #1
  40ae3c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40ae40:	add	x0, x0, #0xe8
  40ae44:	bl	4024e0 <fwrite_unlocked@plt>
  40ae48:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae4c:	add	x0, x0, #0x7d8
  40ae50:	ldr	x0, [x0]
  40ae54:	add	x1, x0, #0x2
  40ae58:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae5c:	add	x0, x0, #0x7d8
  40ae60:	str	x1, [x0]
  40ae64:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae68:	add	x0, x0, #0x38a
  40ae6c:	ldrb	w0, [x0]
  40ae70:	cmp	w0, #0x0
  40ae74:	b.ne	40aeb4 <__fxstatat@plt+0x8354>  // b.any
  40ae78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae7c:	add	x0, x0, #0x38b
  40ae80:	ldrb	w0, [x0]
  40ae84:	cmp	w0, #0x0
  40ae88:	b.ne	40aeb4 <__fxstatat@plt+0x8354>  // b.any
  40ae8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ae90:	add	x0, x0, #0x6a9
  40ae94:	ldrb	w0, [x0]
  40ae98:	cmp	w0, #0x0
  40ae9c:	b.ne	40aeb4 <__fxstatat@plt+0x8354>  // b.any
  40aea0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aea4:	add	x0, x0, #0x670
  40aea8:	ldrb	w0, [x0]
  40aeac:	cmp	w0, #0x0
  40aeb0:	b.eq	40afe8 <__fxstatat@plt+0x8488>  // b.none
  40aeb4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aeb8:	add	x0, x0, #0x5f8
  40aebc:	ldr	x1, [x0]
  40aec0:	add	x0, sp, #0x3a0
  40aec4:	bl	402a40 <fputs_unlocked@plt>
  40aec8:	add	x0, sp, #0x3a0
  40aecc:	ldr	x1, [sp, #4640]
  40aed0:	sub	x0, x1, x0
  40aed4:	mov	x1, x0
  40aed8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aedc:	add	x0, x0, #0x7d8
  40aee0:	ldr	x0, [x0]
  40aee4:	add	x1, x1, x0
  40aee8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aeec:	add	x0, x0, #0x7d8
  40aef0:	str	x1, [x0]
  40aef4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40aef8:	add	x0, x0, #0x38a
  40aefc:	ldrb	w0, [x0]
  40af00:	cmp	w0, #0x0
  40af04:	b.eq	40af30 <__fxstatat@plt+0x83d0>  // b.none
  40af08:	ldr	x0, [sp, #56]
  40af0c:	ldr	w3, [x0, #48]
  40af10:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40af14:	add	x0, x0, #0x684
  40af18:	ldr	w1, [x0]
  40af1c:	ldr	x0, [sp, #56]
  40af20:	ldrb	w0, [x0, #168]
  40af24:	mov	w2, w0
  40af28:	mov	w0, w3
  40af2c:	bl	40a868 <__fxstatat@plt+0x7d08>
  40af30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40af34:	add	x0, x0, #0x38b
  40af38:	ldrb	w0, [x0]
  40af3c:	cmp	w0, #0x0
  40af40:	b.eq	40af6c <__fxstatat@plt+0x840c>  // b.none
  40af44:	ldr	x0, [sp, #56]
  40af48:	ldr	w3, [x0, #52]
  40af4c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40af50:	add	x0, x0, #0x688
  40af54:	ldr	w1, [x0]
  40af58:	ldr	x0, [sp, #56]
  40af5c:	ldrb	w0, [x0, #168]
  40af60:	mov	w2, w0
  40af64:	mov	w0, w3
  40af68:	bl	40a8d8 <__fxstatat@plt+0x7d78>
  40af6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40af70:	add	x0, x0, #0x6a9
  40af74:	ldrb	w0, [x0]
  40af78:	cmp	w0, #0x0
  40af7c:	b.eq	40afa8 <__fxstatat@plt+0x8448>  // b.none
  40af80:	ldr	x0, [sp, #56]
  40af84:	ldr	w3, [x0, #48]
  40af88:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40af8c:	add	x0, x0, #0x68c
  40af90:	ldr	w1, [x0]
  40af94:	ldr	x0, [sp, #56]
  40af98:	ldrb	w0, [x0, #168]
  40af9c:	mov	w2, w0
  40afa0:	mov	w0, w3
  40afa4:	bl	40a868 <__fxstatat@plt+0x7d08>
  40afa8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40afac:	add	x0, x0, #0x670
  40afb0:	ldrb	w0, [x0]
  40afb4:	cmp	w0, #0x0
  40afb8:	b.eq	40afe0 <__fxstatat@plt+0x8480>  // b.none
  40afbc:	ldr	x0, [sp, #56]
  40afc0:	ldr	x3, [x0, #160]
  40afc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40afc8:	add	x0, x0, #0x680
  40afcc:	ldr	w0, [x0]
  40afd0:	mov	w2, w0
  40afd4:	mov	x1, #0x0                   	// #0
  40afd8:	mov	x0, x3
  40afdc:	bl	40a778 <__fxstatat@plt+0x7c18>
  40afe0:	add	x0, sp, #0x3a0
  40afe4:	str	x0, [sp, #4640]
  40afe8:	ldr	x0, [sp, #56]
  40afec:	ldrb	w0, [x0, #168]
  40aff0:	cmp	w0, #0x0
  40aff4:	b.eq	40b0fc <__fxstatat@plt+0x859c>  // b.none
  40aff8:	ldr	x0, [sp, #56]
  40affc:	ldr	w0, [x0, #40]
  40b000:	and	w0, w0, #0xf000
  40b004:	cmp	w0, #0x2, lsl #12
  40b008:	b.eq	40b020 <__fxstatat@plt+0x84c0>  // b.none
  40b00c:	ldr	x0, [sp, #56]
  40b010:	ldr	w0, [x0, #40]
  40b014:	and	w0, w0, #0xf000
  40b018:	cmp	w0, #0x6, lsl #12
  40b01c:	b.ne	40b0fc <__fxstatat@plt+0x859c>  // b.any
  40b020:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b024:	add	x0, x0, #0x698
  40b028:	ldr	w1, [x0]
  40b02c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b030:	add	x0, x0, #0x690
  40b034:	ldr	w0, [x0]
  40b038:	add	w2, w0, #0x2
  40b03c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b040:	add	x0, x0, #0x694
  40b044:	ldr	w0, [x0]
  40b048:	add	w0, w2, w0
  40b04c:	sub	w0, w1, w0
  40b050:	str	w0, [sp, #4608]
  40b054:	ldr	w1, [sp, #4608]
  40b058:	ldr	w0, [sp, #4608]
  40b05c:	mov	w2, #0x0                   	// #0
  40b060:	cmp	w1, #0x0
  40b064:	csel	w1, w0, w2, ge  // ge = tcont
  40b068:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b06c:	add	x0, x0, #0x690
  40b070:	ldr	w0, [x0]
  40b074:	add	w19, w1, w0
  40b078:	ldr	x0, [sp, #56]
  40b07c:	ldr	x0, [x0, #56]
  40b080:	bl	402840 <gnu_dev_major@plt>
  40b084:	mov	w0, w0
  40b088:	add	x1, sp, #0x310
  40b08c:	bl	41354c <__fxstatat@plt+0x109ec>
  40b090:	mov	x21, x0
  40b094:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b098:	add	x0, x0, #0x694
  40b09c:	ldr	w20, [x0]
  40b0a0:	ldr	x0, [sp, #56]
  40b0a4:	ldr	x0, [x0, #56]
  40b0a8:	bl	402980 <gnu_dev_minor@plt>
  40b0ac:	mov	w0, w0
  40b0b0:	add	x1, sp, #0x2f8
  40b0b4:	bl	41354c <__fxstatat@plt+0x109ec>
  40b0b8:	mov	x5, x0
  40b0bc:	mov	w4, w20
  40b0c0:	mov	x3, x21
  40b0c4:	mov	w2, w19
  40b0c8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40b0cc:	add	x1, x0, #0x428
  40b0d0:	ldr	x0, [sp, #4640]
  40b0d4:	bl	4025c0 <sprintf@plt>
  40b0d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b0dc:	add	x0, x0, #0x698
  40b0e0:	ldr	w0, [x0]
  40b0e4:	sxtw	x0, w0
  40b0e8:	add	x0, x0, #0x1
  40b0ec:	ldr	x1, [sp, #4640]
  40b0f0:	add	x0, x1, x0
  40b0f4:	str	x0, [sp, #4640]
  40b0f8:	b	40b1fc <__fxstatat@plt+0x869c>
  40b0fc:	ldr	x0, [sp, #56]
  40b100:	ldrb	w0, [x0, #168]
  40b104:	eor	w0, w0, #0x1
  40b108:	and	w0, w0, #0xff
  40b10c:	cmp	w0, #0x0
  40b110:	b.eq	40b120 <__fxstatat@plt+0x85c0>  // b.none
  40b114:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40b118:	add	x0, x0, #0x3e0
  40b11c:	b	40b164 <__fxstatat@plt+0x8604>
  40b120:	ldr	x0, [sp, #56]
  40b124:	ldr	x0, [x0, #72]
  40b128:	bl	407300 <__fxstatat@plt+0x47a0>
  40b12c:	mov	x5, x0
  40b130:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b134:	add	x0, x0, #0x6b8
  40b138:	ldr	w1, [x0]
  40b13c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b140:	add	x0, x0, #0x390
  40b144:	ldr	x2, [x0]
  40b148:	add	x0, sp, #0x40
  40b14c:	mov	x4, x2
  40b150:	mov	x3, #0x1                   	// #1
  40b154:	mov	w2, w1
  40b158:	mov	x1, x0
  40b15c:	mov	x0, x5
  40b160:	bl	412264 <__fxstatat@plt+0xf704>
  40b164:	str	x0, [sp, #4616]
  40b168:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b16c:	add	x0, x0, #0x698
  40b170:	ldr	w19, [x0]
  40b174:	mov	w1, #0x0                   	// #0
  40b178:	ldr	x0, [sp, #4616]
  40b17c:	bl	413bf4 <__fxstatat@plt+0x11094>
  40b180:	sub	w0, w19, w0
  40b184:	str	w0, [sp, #4612]
  40b188:	b	40b1ac <__fxstatat@plt+0x864c>
  40b18c:	ldr	x0, [sp, #4640]
  40b190:	add	x1, x0, #0x1
  40b194:	str	x1, [sp, #4640]
  40b198:	mov	w1, #0x20                  	// #32
  40b19c:	strb	w1, [x0]
  40b1a0:	ldr	w0, [sp, #4612]
  40b1a4:	sub	w0, w0, #0x1
  40b1a8:	str	w0, [sp, #4612]
  40b1ac:	ldr	w0, [sp, #4612]
  40b1b0:	cmp	w0, #0x0
  40b1b4:	b.gt	40b18c <__fxstatat@plt+0x862c>
  40b1b8:	b	40b1c0 <__fxstatat@plt+0x8660>
  40b1bc:	nop
  40b1c0:	ldr	x1, [sp, #4616]
  40b1c4:	add	x0, x1, #0x1
  40b1c8:	str	x0, [sp, #4616]
  40b1cc:	ldr	x0, [sp, #4640]
  40b1d0:	add	x2, x0, #0x1
  40b1d4:	str	x2, [sp, #4640]
  40b1d8:	ldrb	w1, [x1]
  40b1dc:	strb	w1, [x0]
  40b1e0:	ldrb	w0, [x0]
  40b1e4:	cmp	w0, #0x0
  40b1e8:	b.ne	40b1bc <__fxstatat@plt+0x865c>  // b.any
  40b1ec:	ldr	x0, [sp, #4640]
  40b1f0:	sub	x0, x0, #0x1
  40b1f4:	mov	w1, #0x20                  	// #32
  40b1f8:	strb	w1, [x0]
  40b1fc:	str	xzr, [sp, #4648]
  40b200:	ldr	x0, [sp, #4640]
  40b204:	mov	w1, #0x1                   	// #1
  40b208:	strb	w1, [x0]
  40b20c:	ldr	x0, [sp, #56]
  40b210:	ldrb	w0, [x0, #168]
  40b214:	cmp	w0, #0x0
  40b218:	b.eq	40b334 <__fxstatat@plt+0x87d4>  // b.none
  40b21c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b220:	add	x0, x0, #0x728
  40b224:	ldr	x0, [x0]
  40b228:	add	x2, sp, #0x358
  40b22c:	add	x1, sp, #0x390
  40b230:	bl	41c1bc <_obstack_memory_used@@Base+0x76c>
  40b234:	cmp	x0, #0x0
  40b238:	b.eq	40b334 <__fxstatat@plt+0x87d4>  // b.none
  40b23c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b240:	add	x0, x0, #0x660
  40b244:	add	x1, sp, #0x400
  40b248:	ldp	x2, x3, [x1, #-112]
  40b24c:	ldp	x0, x1, [x0]
  40b250:	bl	4194e8 <__fxstatat@plt+0x16988>
  40b254:	cmp	w0, #0x0
  40b258:	b.ge	40b268 <__fxstatat@plt+0x8708>  // b.tcont
  40b25c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b260:	add	x0, x0, #0x660
  40b264:	bl	410528 <__fxstatat@plt+0xd9c8>
  40b268:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b26c:	add	x0, x0, #0x660
  40b270:	ldr	x1, [x0]
  40b274:	mov	x0, #0xffffffffffff3d54    	// #-49836
  40b278:	movk	x0, #0xff0f, lsl #16
  40b27c:	add	x0, x1, x0
  40b280:	str	x0, [sp, #744]
  40b284:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b288:	add	x0, x0, #0x660
  40b28c:	ldr	x0, [x0, #8]
  40b290:	str	x0, [sp, #752]
  40b294:	add	x0, sp, #0x400
  40b298:	ldp	x2, x3, [x0, #-112]
  40b29c:	add	x0, sp, #0x200
  40b2a0:	ldp	x0, x1, [x0, #232]
  40b2a4:	bl	4194e8 <__fxstatat@plt+0x16988>
  40b2a8:	cmp	w0, #0x0
  40b2ac:	b.ge	40b2d8 <__fxstatat@plt+0x8778>  // b.tcont
  40b2b0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b2b4:	add	x0, x0, #0x660
  40b2b8:	ldp	x2, x3, [x0]
  40b2bc:	add	x0, sp, #0x400
  40b2c0:	ldp	x0, x1, [x0, #-112]
  40b2c4:	bl	4194e8 <__fxstatat@plt+0x16988>
  40b2c8:	cmp	w0, #0x0
  40b2cc:	b.ge	40b2d8 <__fxstatat@plt+0x8778>  // b.tcont
  40b2d0:	mov	w0, #0x1                   	// #1
  40b2d4:	b	40b2dc <__fxstatat@plt+0x877c>
  40b2d8:	mov	w0, #0x0                   	// #0
  40b2dc:	add	x1, sp, #0x1, lsl #12
  40b2e0:	strb	w0, [x1, #511]
  40b2e4:	add	x0, sp, #0x1, lsl #12
  40b2e8:	ldrb	w0, [x0, #511]
  40b2ec:	and	w0, w0, #0x1
  40b2f0:	add	x1, sp, #0x1, lsl #12
  40b2f4:	strb	w0, [x1, #511]
  40b2f8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b2fc:	add	x0, x0, #0x728
  40b300:	ldr	x1, [x0]
  40b304:	ldr	x0, [sp, #920]
  40b308:	mov	w2, w0
  40b30c:	add	x0, sp, #0x358
  40b310:	mov	w5, w2
  40b314:	mov	x4, x1
  40b318:	mov	x3, x0
  40b31c:	add	x0, sp, #0x1, lsl #12
  40b320:	ldrb	w2, [x0, #511]
  40b324:	mov	x1, #0x3e9                 	// #1001
  40b328:	ldr	x0, [sp, #4640]
  40b32c:	bl	40a5f4 <__fxstatat@plt+0x7a94>
  40b330:	str	x0, [sp, #4648]
  40b334:	ldr	x0, [sp, #4648]
  40b338:	cmp	x0, #0x0
  40b33c:	b.ne	40b350 <__fxstatat@plt+0x87f0>  // b.any
  40b340:	ldr	x0, [sp, #4640]
  40b344:	ldrb	w0, [x0]
  40b348:	cmp	w0, #0x0
  40b34c:	b.ne	40b380 <__fxstatat@plt+0x8820>  // b.any
  40b350:	ldr	x1, [sp, #4640]
  40b354:	ldr	x0, [sp, #4648]
  40b358:	add	x0, x1, x0
  40b35c:	str	x0, [sp, #4640]
  40b360:	ldr	x0, [sp, #4640]
  40b364:	add	x1, x0, #0x1
  40b368:	str	x1, [sp, #4640]
  40b36c:	mov	w1, #0x20                  	// #32
  40b370:	strb	w1, [x0]
  40b374:	ldr	x0, [sp, #4640]
  40b378:	strb	wzr, [x0]
  40b37c:	b	40b3e8 <__fxstatat@plt+0x8888>
  40b380:	bl	40a6a0 <__fxstatat@plt+0x7b40>
  40b384:	mov	w19, w0
  40b388:	ldr	x0, [sp, #56]
  40b38c:	ldrb	w0, [x0, #168]
  40b390:	eor	w0, w0, #0x1
  40b394:	and	w0, w0, #0xff
  40b398:	cmp	w0, #0x0
  40b39c:	b.eq	40b3ac <__fxstatat@plt+0x884c>  // b.none
  40b3a0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40b3a4:	add	x0, x0, #0x3e0
  40b3a8:	b	40b3b8 <__fxstatat@plt+0x8858>
  40b3ac:	ldr	x0, [sp, #912]
  40b3b0:	add	x1, sp, #0x2d0
  40b3b4:	bl	40302c <__fxstatat@plt+0x4cc>
  40b3b8:	mov	x3, x0
  40b3bc:	mov	w2, w19
  40b3c0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40b3c4:	add	x1, x0, #0x418
  40b3c8:	ldr	x0, [sp, #4640]
  40b3cc:	bl	4025c0 <sprintf@plt>
  40b3d0:	ldr	x0, [sp, #4640]
  40b3d4:	bl	402500 <strlen@plt>
  40b3d8:	mov	x1, x0
  40b3dc:	ldr	x0, [sp, #4640]
  40b3e0:	add	x0, x0, x1
  40b3e4:	str	x0, [sp, #4640]
  40b3e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b3ec:	add	x0, x0, #0x5f8
  40b3f0:	ldr	x1, [x0]
  40b3f4:	add	x0, sp, #0x3a0
  40b3f8:	bl	402a40 <fputs_unlocked@plt>
  40b3fc:	add	x0, sp, #0x3a0
  40b400:	ldr	x1, [sp, #4640]
  40b404:	sub	x0, x1, x0
  40b408:	mov	x1, x0
  40b40c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b410:	add	x0, x0, #0x7d8
  40b414:	ldr	x0, [x0]
  40b418:	add	x1, x1, x0
  40b41c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b420:	add	x0, x0, #0x7d8
  40b424:	str	x1, [x0]
  40b428:	add	x0, sp, #0x3a0
  40b42c:	ldr	x1, [sp, #4640]
  40b430:	sub	x0, x1, x0
  40b434:	mov	x3, x0
  40b438:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b43c:	add	x2, x0, #0x7e0
  40b440:	mov	w1, #0x0                   	// #0
  40b444:	ldr	x0, [sp, #56]
  40b448:	bl	40c0ac <__fxstatat@plt+0x954c>
  40b44c:	str	x0, [sp, #4592]
  40b450:	ldr	x0, [sp, #56]
  40b454:	ldr	w0, [x0, #152]
  40b458:	cmp	w0, #0x6
  40b45c:	b.ne	40b510 <__fxstatat@plt+0x89b0>  // b.any
  40b460:	ldr	x0, [sp, #56]
  40b464:	ldr	x0, [x0, #8]
  40b468:	cmp	x0, #0x0
  40b46c:	b.eq	40b548 <__fxstatat@plt+0x89e8>  // b.none
  40b470:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b474:	add	x0, x0, #0x5f8
  40b478:	ldr	x0, [x0]
  40b47c:	mov	x3, x0
  40b480:	mov	x2, #0x4                   	// #4
  40b484:	mov	x1, #0x1                   	// #1
  40b488:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40b48c:	add	x0, x0, #0x438
  40b490:	bl	4024e0 <fwrite_unlocked@plt>
  40b494:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b498:	add	x0, x0, #0x7d8
  40b49c:	ldr	x0, [x0]
  40b4a0:	add	x1, x0, #0x4
  40b4a4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b4a8:	add	x0, x0, #0x7d8
  40b4ac:	str	x1, [x0]
  40b4b0:	add	x0, sp, #0x3a0
  40b4b4:	ldr	x1, [sp, #4640]
  40b4b8:	sub	x0, x1, x0
  40b4bc:	mov	x1, x0
  40b4c0:	ldr	x0, [sp, #4592]
  40b4c4:	add	x0, x1, x0
  40b4c8:	add	x0, x0, #0x4
  40b4cc:	mov	x3, x0
  40b4d0:	mov	x2, #0x0                   	// #0
  40b4d4:	mov	w1, #0x1                   	// #1
  40b4d8:	ldr	x0, [sp, #56]
  40b4dc:	bl	40c0ac <__fxstatat@plt+0x954c>
  40b4e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b4e4:	add	x0, x0, #0x6c0
  40b4e8:	ldr	w0, [x0]
  40b4ec:	cmp	w0, #0x0
  40b4f0:	b.eq	40b548 <__fxstatat@plt+0x89e8>  // b.none
  40b4f4:	ldr	x0, [sp, #56]
  40b4f8:	ldr	w0, [x0, #156]
  40b4fc:	mov	w2, #0x0                   	// #0
  40b500:	mov	w1, w0
  40b504:	mov	w0, #0x1                   	// #1
  40b508:	bl	40c690 <__fxstatat@plt+0x9b30>
  40b50c:	b	40b548 <__fxstatat@plt+0x89e8>
  40b510:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b514:	add	x0, x0, #0x6c0
  40b518:	ldr	w0, [x0]
  40b51c:	cmp	w0, #0x0
  40b520:	b.eq	40b548 <__fxstatat@plt+0x89e8>  // b.none
  40b524:	ldr	x0, [sp, #56]
  40b528:	ldrb	w3, [x0, #168]
  40b52c:	ldr	x0, [sp, #56]
  40b530:	ldr	w1, [x0, #40]
  40b534:	ldr	x0, [sp, #56]
  40b538:	ldr	w0, [x0, #152]
  40b53c:	mov	w2, w0
  40b540:	mov	w0, w3
  40b544:	bl	40c690 <__fxstatat@plt+0x9b30>
  40b548:	nop
  40b54c:	ldp	x19, x20, [sp, #16]
  40b550:	ldr	x21, [sp, #32]
  40b554:	ldp	x29, x30, [sp]
  40b558:	mov	x12, #0x1230                	// #4656
  40b55c:	add	sp, sp, x12
  40b560:	ret
  40b564:	stp	x29, x30, [sp, #-224]!
  40b568:	mov	x29, sp
  40b56c:	str	x19, [sp, #16]
  40b570:	str	x0, [sp, #88]
  40b574:	str	x1, [sp, #80]
  40b578:	str	x2, [sp, #72]
  40b57c:	str	x3, [sp, #64]
  40b580:	str	w4, [sp, #60]
  40b584:	str	x5, [sp, #48]
  40b588:	str	x6, [sp, #40]
  40b58c:	ldr	x0, [sp, #88]
  40b590:	ldr	x0, [x0]
  40b594:	str	x0, [sp, #216]
  40b598:	str	xzr, [sp, #200]
  40b59c:	ldr	x0, [sp, #64]
  40b5a0:	bl	416d90 <__fxstatat@plt+0x14230>
  40b5a4:	str	w0, [sp, #148]
  40b5a8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40b5ac:	add	x0, x0, #0x6f8
  40b5b0:	ldrb	w0, [x0]
  40b5b4:	cmp	w0, #0x0
  40b5b8:	b.eq	40b5e8 <__fxstatat@plt+0x8a88>  // b.none
  40b5bc:	ldr	w0, [sp, #148]
  40b5c0:	cmp	w0, #0x1
  40b5c4:	b.eq	40b5e0 <__fxstatat@plt+0x8a80>  // b.none
  40b5c8:	ldr	w0, [sp, #148]
  40b5cc:	cmp	w0, #0x2
  40b5d0:	b.eq	40b5e0 <__fxstatat@plt+0x8a80>  // b.none
  40b5d4:	ldr	w0, [sp, #148]
  40b5d8:	cmp	w0, #0x0
  40b5dc:	b.ne	40b5e8 <__fxstatat@plt+0x8a88>  // b.any
  40b5e0:	mov	w0, #0x1                   	// #1
  40b5e4:	b	40b5ec <__fxstatat@plt+0x8a8c>
  40b5e8:	mov	w0, #0x0                   	// #0
  40b5ec:	strb	w0, [sp, #147]
  40b5f0:	ldrb	w0, [sp, #147]
  40b5f4:	and	w0, w0, #0x1
  40b5f8:	strb	w0, [sp, #147]
  40b5fc:	ldr	w0, [sp, #60]
  40b600:	cmp	w0, #0x0
  40b604:	b.eq	40b6b4 <__fxstatat@plt+0x8b54>  // b.none
  40b608:	ldr	x4, [sp, #64]
  40b60c:	mov	x3, #0xffffffffffffffff    	// #-1
  40b610:	ldr	x2, [sp, #72]
  40b614:	ldr	x1, [sp, #80]
  40b618:	ldr	x0, [sp, #216]
  40b61c:	bl	4184c8 <__fxstatat@plt+0x15968>
  40b620:	str	x0, [sp, #200]
  40b624:	ldr	x1, [sp, #80]
  40b628:	ldr	x0, [sp, #200]
  40b62c:	cmp	x1, x0
  40b630:	b.hi	40b664 <__fxstatat@plt+0x8b04>  // b.pmore
  40b634:	ldr	x0, [sp, #200]
  40b638:	add	x0, x0, #0x1
  40b63c:	bl	41a080 <__fxstatat@plt+0x17520>
  40b640:	str	x0, [sp, #216]
  40b644:	ldr	x0, [sp, #200]
  40b648:	add	x0, x0, #0x1
  40b64c:	ldr	x4, [sp, #64]
  40b650:	mov	x3, #0xffffffffffffffff    	// #-1
  40b654:	ldr	x2, [sp, #72]
  40b658:	mov	x1, x0
  40b65c:	ldr	x0, [sp, #216]
  40b660:	bl	4184c8 <__fxstatat@plt+0x15968>
  40b664:	ldr	x0, [sp, #72]
  40b668:	ldrb	w1, [x0]
  40b66c:	ldr	x0, [sp, #216]
  40b670:	ldrb	w0, [x0]
  40b674:	cmp	w1, w0
  40b678:	b.ne	40b694 <__fxstatat@plt+0x8b34>  // b.any
  40b67c:	ldr	x0, [sp, #72]
  40b680:	bl	402500 <strlen@plt>
  40b684:	mov	x1, x0
  40b688:	ldr	x0, [sp, #200]
  40b68c:	cmp	x0, x1
  40b690:	b.eq	40b69c <__fxstatat@plt+0x8b3c>  // b.none
  40b694:	mov	w0, #0x1                   	// #1
  40b698:	b	40b6a0 <__fxstatat@plt+0x8b40>
  40b69c:	mov	w0, #0x0                   	// #0
  40b6a0:	strb	w0, [sp, #199]
  40b6a4:	ldrb	w0, [sp, #199]
  40b6a8:	and	w0, w0, #0x1
  40b6ac:	strb	w0, [sp, #199]
  40b6b0:	b	40b724 <__fxstatat@plt+0x8bc4>
  40b6b4:	ldrb	w0, [sp, #147]
  40b6b8:	cmp	w0, #0x0
  40b6bc:	b.eq	40b70c <__fxstatat@plt+0x8bac>  // b.none
  40b6c0:	ldr	x0, [sp, #72]
  40b6c4:	bl	402500 <strlen@plt>
  40b6c8:	str	x0, [sp, #200]
  40b6cc:	ldr	x1, [sp, #80]
  40b6d0:	ldr	x0, [sp, #200]
  40b6d4:	cmp	x1, x0
  40b6d8:	b.hi	40b6ec <__fxstatat@plt+0x8b8c>  // b.pmore
  40b6dc:	ldr	x0, [sp, #200]
  40b6e0:	add	x0, x0, #0x1
  40b6e4:	bl	41a080 <__fxstatat@plt+0x17520>
  40b6e8:	str	x0, [sp, #216]
  40b6ec:	ldr	x0, [sp, #200]
  40b6f0:	add	x0, x0, #0x1
  40b6f4:	mov	x2, x0
  40b6f8:	ldr	x1, [sp, #72]
  40b6fc:	ldr	x0, [sp, #216]
  40b700:	bl	402490 <memcpy@plt>
  40b704:	strb	wzr, [sp, #199]
  40b708:	b	40b724 <__fxstatat@plt+0x8bc4>
  40b70c:	ldr	x0, [sp, #72]
  40b710:	bl	402500 <strlen@plt>
  40b714:	str	x0, [sp, #200]
  40b718:	ldr	x0, [sp, #72]
  40b71c:	str	x0, [sp, #216]
  40b720:	strb	wzr, [sp, #199]
  40b724:	ldrb	w0, [sp, #147]
  40b728:	cmp	w0, #0x0
  40b72c:	b.eq	40b9e4 <__fxstatat@plt+0x8e84>  // b.none
  40b730:	bl	402900 <__ctype_get_mb_cur_max@plt>
  40b734:	cmp	x0, #0x1
  40b738:	b.ls	40b960 <__fxstatat@plt+0x8e00>  // b.plast
  40b73c:	ldr	x0, [sp, #216]
  40b740:	str	x0, [sp, #184]
  40b744:	ldr	x1, [sp, #216]
  40b748:	ldr	x0, [sp, #200]
  40b74c:	add	x0, x1, x0
  40b750:	str	x0, [sp, #120]
  40b754:	ldr	x0, [sp, #216]
  40b758:	str	x0, [sp, #176]
  40b75c:	str	xzr, [sp, #208]
  40b760:	b	40b93c <__fxstatat@plt+0x8ddc>
  40b764:	ldr	x0, [sp, #184]
  40b768:	ldrb	w0, [x0]
  40b76c:	cmp	w0, #0x7e
  40b770:	b.gt	40b7dc <__fxstatat@plt+0x8c7c>
  40b774:	cmp	w0, #0x61
  40b778:	b.ge	40b7ac <__fxstatat@plt+0x8c4c>  // b.tcont
  40b77c:	cmp	w0, #0x5f
  40b780:	b.gt	40b7dc <__fxstatat@plt+0x8c7c>
  40b784:	cmp	w0, #0x41
  40b788:	b.ge	40b7ac <__fxstatat@plt+0x8c4c>  // b.tcont
  40b78c:	cmp	w0, #0x23
  40b790:	b.gt	40b7a0 <__fxstatat@plt+0x8c40>
  40b794:	cmp	w0, #0x20
  40b798:	b.ge	40b7ac <__fxstatat@plt+0x8c4c>  // b.tcont
  40b79c:	b	40b7dc <__fxstatat@plt+0x8c7c>
  40b7a0:	sub	w0, w0, #0x25
  40b7a4:	cmp	w0, #0x1a
  40b7a8:	b.hi	40b7dc <__fxstatat@plt+0x8c7c>  // b.pmore
  40b7ac:	ldr	x1, [sp, #184]
  40b7b0:	add	x0, x1, #0x1
  40b7b4:	str	x0, [sp, #184]
  40b7b8:	ldr	x0, [sp, #176]
  40b7bc:	add	x2, x0, #0x1
  40b7c0:	str	x2, [sp, #176]
  40b7c4:	ldrb	w1, [x1]
  40b7c8:	strb	w1, [x0]
  40b7cc:	ldr	x0, [sp, #208]
  40b7d0:	add	x0, x0, #0x1
  40b7d4:	str	x0, [sp, #208]
  40b7d8:	b	40b93c <__fxstatat@plt+0x8ddc>
  40b7dc:	str	xzr, [sp, #104]
  40b7e0:	ldr	x1, [sp, #120]
  40b7e4:	ldr	x0, [sp, #184]
  40b7e8:	sub	x0, x1, x0
  40b7ec:	mov	x2, x0
  40b7f0:	add	x1, sp, #0x68
  40b7f4:	add	x0, sp, #0x64
  40b7f8:	mov	x3, x1
  40b7fc:	ldr	x1, [sp, #184]
  40b800:	bl	41b358 <__fxstatat@plt+0x187f8>
  40b804:	str	x0, [sp, #168]
  40b808:	ldr	x0, [sp, #168]
  40b80c:	cmn	x0, #0x1
  40b810:	b.ne	40b844 <__fxstatat@plt+0x8ce4>  // b.any
  40b814:	ldr	x0, [sp, #184]
  40b818:	add	x0, x0, #0x1
  40b81c:	str	x0, [sp, #184]
  40b820:	ldr	x0, [sp, #176]
  40b824:	add	x1, x0, #0x1
  40b828:	str	x1, [sp, #176]
  40b82c:	mov	w1, #0x3f                  	// #63
  40b830:	strb	w1, [x0]
  40b834:	ldr	x0, [sp, #208]
  40b838:	add	x0, x0, #0x1
  40b83c:	str	x0, [sp, #208]
  40b840:	b	40b938 <__fxstatat@plt+0x8dd8>
  40b844:	ldr	x0, [sp, #168]
  40b848:	cmn	x0, #0x2
  40b84c:	b.ne	40b87c <__fxstatat@plt+0x8d1c>  // b.any
  40b850:	ldr	x0, [sp, #120]
  40b854:	str	x0, [sp, #184]
  40b858:	ldr	x0, [sp, #176]
  40b85c:	add	x1, x0, #0x1
  40b860:	str	x1, [sp, #176]
  40b864:	mov	w1, #0x3f                  	// #63
  40b868:	strb	w1, [x0]
  40b86c:	ldr	x0, [sp, #208]
  40b870:	add	x0, x0, #0x1
  40b874:	str	x0, [sp, #208]
  40b878:	b	40b938 <__fxstatat@plt+0x8dd8>
  40b87c:	ldr	x0, [sp, #168]
  40b880:	cmp	x0, #0x0
  40b884:	b.ne	40b890 <__fxstatat@plt+0x8d30>  // b.any
  40b888:	mov	x0, #0x1                   	// #1
  40b88c:	str	x0, [sp, #168]
  40b890:	ldr	w0, [sp, #100]
  40b894:	bl	4026d0 <wcwidth@plt>
  40b898:	str	w0, [sp, #116]
  40b89c:	ldr	w0, [sp, #116]
  40b8a0:	cmp	w0, #0x0
  40b8a4:	b.lt	40b8f8 <__fxstatat@plt+0x8d98>  // b.tstop
  40b8a8:	b	40b8d8 <__fxstatat@plt+0x8d78>
  40b8ac:	ldr	x1, [sp, #184]
  40b8b0:	add	x0, x1, #0x1
  40b8b4:	str	x0, [sp, #184]
  40b8b8:	ldr	x0, [sp, #176]
  40b8bc:	add	x2, x0, #0x1
  40b8c0:	str	x2, [sp, #176]
  40b8c4:	ldrb	w1, [x1]
  40b8c8:	strb	w1, [x0]
  40b8cc:	ldr	x0, [sp, #168]
  40b8d0:	sub	x0, x0, #0x1
  40b8d4:	str	x0, [sp, #168]
  40b8d8:	ldr	x0, [sp, #168]
  40b8dc:	cmp	x0, #0x0
  40b8e0:	b.ne	40b8ac <__fxstatat@plt+0x8d4c>  // b.any
  40b8e4:	ldrsw	x0, [sp, #116]
  40b8e8:	ldr	x1, [sp, #208]
  40b8ec:	add	x0, x1, x0
  40b8f0:	str	x0, [sp, #208]
  40b8f4:	b	40b928 <__fxstatat@plt+0x8dc8>
  40b8f8:	ldr	x1, [sp, #184]
  40b8fc:	ldr	x0, [sp, #168]
  40b900:	add	x0, x1, x0
  40b904:	str	x0, [sp, #184]
  40b908:	ldr	x0, [sp, #176]
  40b90c:	add	x1, x0, #0x1
  40b910:	str	x1, [sp, #176]
  40b914:	mov	w1, #0x3f                  	// #63
  40b918:	strb	w1, [x0]
  40b91c:	ldr	x0, [sp, #208]
  40b920:	add	x0, x0, #0x1
  40b924:	str	x0, [sp, #208]
  40b928:	add	x0, sp, #0x68
  40b92c:	bl	402830 <mbsinit@plt>
  40b930:	cmp	w0, #0x0
  40b934:	b.eq	40b7e0 <__fxstatat@plt+0x8c80>  // b.none
  40b938:	nop
  40b93c:	ldr	x1, [sp, #184]
  40b940:	ldr	x0, [sp, #120]
  40b944:	cmp	x1, x0
  40b948:	b.cc	40b764 <__fxstatat@plt+0x8c04>  // b.lo, b.ul, b.last
  40b94c:	ldr	x1, [sp, #176]
  40b950:	ldr	x0, [sp, #216]
  40b954:	sub	x0, x1, x0
  40b958:	str	x0, [sp, #200]
  40b95c:	b	40ba94 <__fxstatat@plt+0x8f34>
  40b960:	ldr	x0, [sp, #216]
  40b964:	str	x0, [sp, #160]
  40b968:	ldr	x1, [sp, #216]
  40b96c:	ldr	x0, [sp, #200]
  40b970:	add	x0, x1, x0
  40b974:	str	x0, [sp, #128]
  40b978:	b	40b9c8 <__fxstatat@plt+0x8e68>
  40b97c:	bl	4028d0 <__ctype_b_loc@plt>
  40b980:	ldr	x19, [x0]
  40b984:	ldr	x0, [sp, #160]
  40b988:	ldrb	w0, [x0]
  40b98c:	bl	402d68 <__fxstatat@plt+0x208>
  40b990:	and	w0, w0, #0xff
  40b994:	and	x0, x0, #0xff
  40b998:	lsl	x0, x0, #1
  40b99c:	add	x0, x19, x0
  40b9a0:	ldrh	w0, [x0]
  40b9a4:	and	w0, w0, #0x4000
  40b9a8:	cmp	w0, #0x0
  40b9ac:	b.ne	40b9bc <__fxstatat@plt+0x8e5c>  // b.any
  40b9b0:	ldr	x0, [sp, #160]
  40b9b4:	mov	w1, #0x3f                  	// #63
  40b9b8:	strb	w1, [x0]
  40b9bc:	ldr	x0, [sp, #160]
  40b9c0:	add	x0, x0, #0x1
  40b9c4:	str	x0, [sp, #160]
  40b9c8:	ldr	x1, [sp, #160]
  40b9cc:	ldr	x0, [sp, #128]
  40b9d0:	cmp	x1, x0
  40b9d4:	b.cc	40b97c <__fxstatat@plt+0x8e1c>  // b.lo, b.ul, b.last
  40b9d8:	ldr	x0, [sp, #200]
  40b9dc:	str	x0, [sp, #208]
  40b9e0:	b	40ba94 <__fxstatat@plt+0x8f34>
  40b9e4:	ldr	x0, [sp, #48]
  40b9e8:	cmp	x0, #0x0
  40b9ec:	b.eq	40ba94 <__fxstatat@plt+0x8f34>  // b.none
  40b9f0:	bl	402900 <__ctype_get_mb_cur_max@plt>
  40b9f4:	cmp	x0, #0x1
  40b9f8:	b.ls	40ba18 <__fxstatat@plt+0x8eb8>  // b.plast
  40b9fc:	mov	w2, #0x0                   	// #0
  40ba00:	ldr	x1, [sp, #200]
  40ba04:	ldr	x0, [sp, #216]
  40ba08:	bl	413c24 <__fxstatat@plt+0x110c4>
  40ba0c:	sxtw	x0, w0
  40ba10:	str	x0, [sp, #208]
  40ba14:	b	40ba94 <__fxstatat@plt+0x8f34>
  40ba18:	ldr	x0, [sp, #216]
  40ba1c:	str	x0, [sp, #152]
  40ba20:	ldr	x1, [sp, #216]
  40ba24:	ldr	x0, [sp, #200]
  40ba28:	add	x0, x1, x0
  40ba2c:	str	x0, [sp, #136]
  40ba30:	str	xzr, [sp, #208]
  40ba34:	b	40ba84 <__fxstatat@plt+0x8f24>
  40ba38:	bl	4028d0 <__ctype_b_loc@plt>
  40ba3c:	ldr	x19, [x0]
  40ba40:	ldr	x0, [sp, #152]
  40ba44:	ldrb	w0, [x0]
  40ba48:	bl	402d68 <__fxstatat@plt+0x208>
  40ba4c:	and	w0, w0, #0xff
  40ba50:	and	x0, x0, #0xff
  40ba54:	lsl	x0, x0, #1
  40ba58:	add	x0, x19, x0
  40ba5c:	ldrh	w0, [x0]
  40ba60:	and	w0, w0, #0x4000
  40ba64:	cmp	w0, #0x0
  40ba68:	b.eq	40ba78 <__fxstatat@plt+0x8f18>  // b.none
  40ba6c:	ldr	x0, [sp, #208]
  40ba70:	add	x0, x0, #0x1
  40ba74:	str	x0, [sp, #208]
  40ba78:	ldr	x0, [sp, #152]
  40ba7c:	add	x0, x0, #0x1
  40ba80:	str	x0, [sp, #152]
  40ba84:	ldr	x1, [sp, #152]
  40ba88:	ldr	x0, [sp, #136]
  40ba8c:	cmp	x1, x0
  40ba90:	b.cc	40ba38 <__fxstatat@plt+0x8ed8>  // b.lo, b.ul, b.last
  40ba94:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ba98:	add	x0, x0, #0x631
  40ba9c:	ldrb	w0, [x0]
  40baa0:	cmp	w0, #0x0
  40baa4:	b.eq	40bad8 <__fxstatat@plt+0x8f78>  // b.none
  40baa8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40baac:	add	x0, x0, #0x630
  40bab0:	ldrb	w0, [x0]
  40bab4:	cmp	w0, #0x0
  40bab8:	b.eq	40bad8 <__fxstatat@plt+0x8f78>  // b.none
  40babc:	ldrb	w0, [sp, #199]
  40bac0:	eor	w0, w0, #0x1
  40bac4:	and	w0, w0, #0xff
  40bac8:	cmp	w0, #0x0
  40bacc:	b.eq	40bad8 <__fxstatat@plt+0x8f78>  // b.none
  40bad0:	mov	w0, #0x1                   	// #1
  40bad4:	b	40badc <__fxstatat@plt+0x8f7c>
  40bad8:	mov	w0, #0x0                   	// #0
  40badc:	and	w0, w0, #0x1
  40bae0:	and	w1, w0, #0xff
  40bae4:	ldr	x0, [sp, #40]
  40bae8:	strb	w1, [x0]
  40baec:	ldr	x0, [sp, #48]
  40baf0:	cmp	x0, #0x0
  40baf4:	b.eq	40bb04 <__fxstatat@plt+0x8fa4>  // b.none
  40baf8:	ldr	x0, [sp, #48]
  40bafc:	ldr	x1, [sp, #208]
  40bb00:	str	x1, [x0]
  40bb04:	ldr	x0, [sp, #88]
  40bb08:	ldr	x1, [sp, #216]
  40bb0c:	str	x1, [x0]
  40bb10:	ldr	x0, [sp, #200]
  40bb14:	ldr	x19, [sp, #16]
  40bb18:	ldp	x29, x30, [sp], #224
  40bb1c:	ret
  40bb20:	mov	x12, #0x2050                	// #8272
  40bb24:	sub	sp, sp, x12
  40bb28:	stp	x29, x30, [sp]
  40bb2c:	mov	x29, sp
  40bb30:	str	x0, [sp, #40]
  40bb34:	str	x1, [sp, #32]
  40bb38:	str	w2, [sp, #28]
  40bb3c:	add	x0, sp, #0x50
  40bb40:	str	x0, [sp, #72]
  40bb44:	add	x2, sp, #0x3f
  40bb48:	add	x1, sp, #0x40
  40bb4c:	add	x0, sp, #0x48
  40bb50:	mov	x6, x2
  40bb54:	mov	x5, x1
  40bb58:	ldr	w4, [sp, #28]
  40bb5c:	ldr	x3, [sp, #32]
  40bb60:	ldr	x2, [sp, #40]
  40bb64:	mov	x1, #0x2000                	// #8192
  40bb68:	bl	40b564 <__fxstatat@plt+0x8a04>
  40bb6c:	ldr	x1, [sp, #72]
  40bb70:	add	x0, sp, #0x50
  40bb74:	cmp	x1, x0
  40bb78:	b.eq	40bb94 <__fxstatat@plt+0x9034>  // b.none
  40bb7c:	ldr	x0, [sp, #72]
  40bb80:	ldr	x1, [sp, #40]
  40bb84:	cmp	x1, x0
  40bb88:	b.eq	40bb94 <__fxstatat@plt+0x9034>  // b.none
  40bb8c:	ldr	x0, [sp, #72]
  40bb90:	bl	4028f0 <free@plt>
  40bb94:	ldrb	w0, [sp, #63]
  40bb98:	and	x1, x0, #0xff
  40bb9c:	ldr	x0, [sp, #64]
  40bba0:	add	x0, x1, x0
  40bba4:	str	x0, [sp, #64]
  40bba8:	ldr	x0, [sp, #64]
  40bbac:	ldp	x29, x30, [sp]
  40bbb0:	mov	x12, #0x2050                	// #8272
  40bbb4:	add	sp, sp, x12
  40bbb8:	ret
  40bbbc:	stp	x29, x30, [sp, #-48]!
  40bbc0:	mov	x29, sp
  40bbc4:	str	x0, [sp, #24]
  40bbc8:	strb	w1, [sp, #23]
  40bbcc:	ldr	x0, [sp, #24]
  40bbd0:	bl	402500 <strlen@plt>
  40bbd4:	add	x0, x0, #0x1
  40bbd8:	mov	x1, x0
  40bbdc:	mov	x0, #0x3                   	// #3
  40bbe0:	bl	419e4c <__fxstatat@plt+0x172ec>
  40bbe4:	str	x0, [sp, #32]
  40bbe8:	ldr	x0, [sp, #32]
  40bbec:	str	x0, [sp, #40]
  40bbf0:	b	40bcc0 <__fxstatat@plt+0x9160>
  40bbf4:	ldrb	w0, [sp, #23]
  40bbf8:	cmp	w0, #0x0
  40bbfc:	b.eq	40bc34 <__fxstatat@plt+0x90d4>  // b.none
  40bc00:	ldr	x0, [sp, #24]
  40bc04:	ldrb	w0, [x0]
  40bc08:	cmp	w0, #0x2f
  40bc0c:	b.ne	40bc34 <__fxstatat@plt+0x90d4>  // b.any
  40bc10:	ldr	x0, [sp, #40]
  40bc14:	add	x1, x0, #0x1
  40bc18:	str	x1, [sp, #40]
  40bc1c:	mov	w1, #0x2f                  	// #47
  40bc20:	strb	w1, [x0]
  40bc24:	ldr	x0, [sp, #24]
  40bc28:	add	x0, x0, #0x1
  40bc2c:	str	x0, [sp, #24]
  40bc30:	b	40bcc0 <__fxstatat@plt+0x9160>
  40bc34:	ldr	x0, [sp, #24]
  40bc38:	ldrb	w0, [x0]
  40bc3c:	bl	402d68 <__fxstatat@plt+0x208>
  40bc40:	and	w0, w0, #0xff
  40bc44:	mov	w2, w0
  40bc48:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bc4c:	add	x1, x0, #0x8e8
  40bc50:	sxtw	x0, w2
  40bc54:	ldrb	w0, [x1, x0]
  40bc58:	cmp	w0, #0x0
  40bc5c:	b.eq	40bc84 <__fxstatat@plt+0x9124>  // b.none
  40bc60:	ldr	x1, [sp, #24]
  40bc64:	add	x0, x1, #0x1
  40bc68:	str	x0, [sp, #24]
  40bc6c:	ldr	x0, [sp, #40]
  40bc70:	add	x2, x0, #0x1
  40bc74:	str	x2, [sp, #40]
  40bc78:	ldrb	w1, [x1]
  40bc7c:	strb	w1, [x0]
  40bc80:	b	40bcc0 <__fxstatat@plt+0x9160>
  40bc84:	ldr	x0, [sp, #24]
  40bc88:	add	x1, x0, #0x1
  40bc8c:	str	x1, [sp, #24]
  40bc90:	ldrb	w0, [x0]
  40bc94:	bl	402d68 <__fxstatat@plt+0x208>
  40bc98:	and	w0, w0, #0xff
  40bc9c:	mov	w2, w0
  40bca0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40bca4:	add	x1, x0, #0x440
  40bca8:	ldr	x0, [sp, #40]
  40bcac:	bl	4025c0 <sprintf@plt>
  40bcb0:	sxtw	x0, w0
  40bcb4:	ldr	x1, [sp, #40]
  40bcb8:	add	x0, x1, x0
  40bcbc:	str	x0, [sp, #40]
  40bcc0:	ldr	x0, [sp, #24]
  40bcc4:	ldrb	w0, [x0]
  40bcc8:	cmp	w0, #0x0
  40bccc:	b.ne	40bbf4 <__fxstatat@plt+0x9094>  // b.any
  40bcd0:	ldr	x0, [sp, #40]
  40bcd4:	strb	wzr, [x0]
  40bcd8:	ldr	x0, [sp, #32]
  40bcdc:	ldp	x29, x30, [sp], #48
  40bce0:	ret
  40bce4:	mov	x12, #0x20a0                	// #8352
  40bce8:	sub	sp, sp, x12
  40bcec:	stp	x29, x30, [sp]
  40bcf0:	mov	x29, sp
  40bcf4:	str	x0, [sp, #56]
  40bcf8:	str	x1, [sp, #48]
  40bcfc:	str	w2, [sp, #44]
  40bd00:	str	x3, [sp, #32]
  40bd04:	strb	w4, [sp, #43]
  40bd08:	str	x5, [sp, #24]
  40bd0c:	str	x6, [sp, #16]
  40bd10:	add	x0, sp, #0x50
  40bd14:	str	x0, [sp, #72]
  40bd18:	add	x1, sp, #0x47
  40bd1c:	add	x0, sp, #0x48
  40bd20:	mov	x6, x1
  40bd24:	mov	x5, #0x0                   	// #0
  40bd28:	ldr	w4, [sp, #44]
  40bd2c:	ldr	x3, [sp, #48]
  40bd30:	ldr	x2, [sp, #56]
  40bd34:	mov	x1, #0x2000                	// #8192
  40bd38:	bl	40b564 <__fxstatat@plt+0x8a04>
  40bd3c:	str	x0, [sp, #8336]
  40bd40:	ldrb	w0, [sp, #71]
  40bd44:	cmp	w0, #0x0
  40bd48:	b.eq	40bd7c <__fxstatat@plt+0x921c>  // b.none
  40bd4c:	ldrb	w0, [sp, #43]
  40bd50:	cmp	w0, #0x0
  40bd54:	b.eq	40bd7c <__fxstatat@plt+0x921c>  // b.none
  40bd58:	mov	w0, #0x20                  	// #32
  40bd5c:	bl	402770 <putchar_unlocked@plt>
  40bd60:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bd64:	add	x0, x0, #0x7d8
  40bd68:	ldr	x0, [x0]
  40bd6c:	add	x1, x0, #0x1
  40bd70:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bd74:	add	x0, x0, #0x7d8
  40bd78:	str	x1, [x0]
  40bd7c:	ldr	x0, [sp, #32]
  40bd80:	cmp	x0, #0x0
  40bd84:	b.eq	40bd90 <__fxstatat@plt+0x9230>  // b.none
  40bd88:	ldr	x0, [sp, #32]
  40bd8c:	bl	40c700 <__fxstatat@plt+0x9ba0>
  40bd90:	add	x0, sp, #0x2, lsl #12
  40bd94:	strb	wzr, [x0, #159]
  40bd98:	ldr	x0, [sp, #16]
  40bd9c:	cmp	x0, #0x0
  40bda0:	b.eq	40be6c <__fxstatat@plt+0x930c>  // b.none
  40bda4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bda8:	add	x0, x0, #0x631
  40bdac:	ldrb	w0, [x0]
  40bdb0:	cmp	w0, #0x0
  40bdb4:	b.eq	40bdf8 <__fxstatat@plt+0x9298>  // b.none
  40bdb8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bdbc:	add	x0, x0, #0x630
  40bdc0:	ldrb	w0, [x0]
  40bdc4:	cmp	w0, #0x0
  40bdc8:	b.eq	40bdf8 <__fxstatat@plt+0x9298>  // b.none
  40bdcc:	ldrb	w0, [sp, #71]
  40bdd0:	eor	w0, w0, #0x1
  40bdd4:	and	w0, w0, #0xff
  40bdd8:	cmp	w0, #0x0
  40bddc:	b.eq	40bdf8 <__fxstatat@plt+0x9298>  // b.none
  40bde0:	mov	w0, #0x1                   	// #1
  40bde4:	add	x1, sp, #0x2, lsl #12
  40bde8:	strb	w0, [x1, #159]
  40bdec:	ldr	x0, [sp, #72]
  40bdf0:	ldrb	w0, [x0]
  40bdf4:	bl	402770 <putchar_unlocked@plt>
  40bdf8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bdfc:	add	x0, x0, #0x650
  40be00:	ldr	x0, [x0]
  40be04:	mov	w1, #0x0                   	// #0
  40be08:	bl	40bbbc <__fxstatat@plt+0x905c>
  40be0c:	str	x0, [sp, #8328]
  40be10:	mov	w1, #0x1                   	// #1
  40be14:	ldr	x0, [sp, #16]
  40be18:	bl	40bbbc <__fxstatat@plt+0x905c>
  40be1c:	str	x0, [sp, #8320]
  40be20:	ldr	x0, [sp, #8320]
  40be24:	ldrb	w0, [x0]
  40be28:	cmp	w0, #0x2f
  40be2c:	b.ne	40be3c <__fxstatat@plt+0x92dc>  // b.any
  40be30:	adrp	x0, 420000 <_obstack_memory_used@@Base+0x45b0>
  40be34:	add	x0, x0, #0x948
  40be38:	b	40be44 <__fxstatat@plt+0x92e4>
  40be3c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40be40:	add	x0, x0, #0x448
  40be44:	ldr	x3, [sp, #8320]
  40be48:	mov	x2, x0
  40be4c:	ldr	x1, [sp, #8328]
  40be50:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40be54:	add	x0, x0, #0x450
  40be58:	bl	402aa0 <printf@plt>
  40be5c:	ldr	x0, [sp, #8328]
  40be60:	bl	4028f0 <free@plt>
  40be64:	ldr	x0, [sp, #8320]
  40be68:	bl	4028f0 <free@plt>
  40be6c:	ldr	x0, [sp, #24]
  40be70:	cmp	x0, #0x0
  40be74:	b.eq	40bf08 <__fxstatat@plt+0x93a8>  // b.none
  40be78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40be7c:	add	x0, x0, #0x6bc
  40be80:	ldrb	w0, [x0]
  40be84:	cmp	w0, #0x0
  40be88:	b.eq	40bf08 <__fxstatat@plt+0x93a8>  // b.none
  40be8c:	ldr	x0, [sp, #24]
  40be90:	str	x0, [sp, #8312]
  40be94:	mov	x0, #0x8                   	// #8
  40be98:	str	x0, [sp, #8304]
  40be9c:	ldr	x0, [sp, #8312]
  40bea0:	str	x0, [sp, #8296]
  40bea4:	ldr	x0, [sp, #8296]
  40bea8:	ldr	x1, [x0, #32]
  40beac:	ldr	x0, [sp, #8296]
  40beb0:	ldr	x0, [x0, #24]
  40beb4:	sub	x0, x1, x0
  40beb8:	mov	x1, x0
  40bebc:	ldr	x0, [sp, #8304]
  40bec0:	cmp	x1, x0
  40bec4:	b.cs	40bed4 <__fxstatat@plt+0x9374>  // b.hs, b.nlast
  40bec8:	ldr	x1, [sp, #8304]
  40becc:	ldr	x0, [sp, #8312]
  40bed0:	bl	41b6d0 <_obstack_newchunk@@Base>
  40bed4:	ldr	x0, [sp, #8312]
  40bed8:	ldr	x3, [x0, #24]
  40bedc:	ldr	x2, [sp, #8304]
  40bee0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bee4:	add	x1, x0, #0x7d8
  40bee8:	mov	x0, x3
  40beec:	bl	402490 <memcpy@plt>
  40bef0:	ldr	x0, [sp, #8312]
  40bef4:	ldr	x1, [x0, #24]
  40bef8:	ldr	x0, [sp, #8304]
  40befc:	add	x1, x1, x0
  40bf00:	ldr	x0, [sp, #8312]
  40bf04:	str	x1, [x0, #24]
  40bf08:	ldr	x1, [sp, #72]
  40bf0c:	add	x0, sp, #0x2, lsl #12
  40bf10:	ldrb	w0, [x0, #159]
  40bf14:	add	x4, x1, x0
  40bf18:	add	x0, sp, #0x2, lsl #12
  40bf1c:	ldrb	w0, [x0, #159]
  40bf20:	lsl	w0, w0, #1
  40bf24:	sxtw	x0, w0
  40bf28:	ldr	x1, [sp, #8336]
  40bf2c:	sub	x1, x1, x0
  40bf30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bf34:	add	x0, x0, #0x5f8
  40bf38:	ldr	x0, [x0]
  40bf3c:	mov	x3, x0
  40bf40:	mov	x2, x1
  40bf44:	mov	x1, #0x1                   	// #1
  40bf48:	mov	x0, x4
  40bf4c:	bl	4024e0 <fwrite_unlocked@plt>
  40bf50:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bf54:	add	x0, x0, #0x7d8
  40bf58:	ldr	x1, [x0]
  40bf5c:	ldr	x0, [sp, #8336]
  40bf60:	add	x1, x1, x0
  40bf64:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bf68:	add	x0, x0, #0x7d8
  40bf6c:	str	x1, [x0]
  40bf70:	ldr	x0, [sp, #24]
  40bf74:	cmp	x0, #0x0
  40bf78:	b.eq	40c00c <__fxstatat@plt+0x94ac>  // b.none
  40bf7c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bf80:	add	x0, x0, #0x6bc
  40bf84:	ldrb	w0, [x0]
  40bf88:	cmp	w0, #0x0
  40bf8c:	b.eq	40c00c <__fxstatat@plt+0x94ac>  // b.none
  40bf90:	ldr	x0, [sp, #24]
  40bf94:	str	x0, [sp, #8288]
  40bf98:	mov	x0, #0x8                   	// #8
  40bf9c:	str	x0, [sp, #8280]
  40bfa0:	ldr	x0, [sp, #8288]
  40bfa4:	str	x0, [sp, #8272]
  40bfa8:	ldr	x0, [sp, #8272]
  40bfac:	ldr	x1, [x0, #32]
  40bfb0:	ldr	x0, [sp, #8272]
  40bfb4:	ldr	x0, [x0, #24]
  40bfb8:	sub	x0, x1, x0
  40bfbc:	mov	x1, x0
  40bfc0:	ldr	x0, [sp, #8280]
  40bfc4:	cmp	x1, x0
  40bfc8:	b.cs	40bfd8 <__fxstatat@plt+0x9478>  // b.hs, b.nlast
  40bfcc:	ldr	x1, [sp, #8280]
  40bfd0:	ldr	x0, [sp, #8288]
  40bfd4:	bl	41b6d0 <_obstack_newchunk@@Base>
  40bfd8:	ldr	x0, [sp, #8288]
  40bfdc:	ldr	x3, [x0, #24]
  40bfe0:	ldr	x2, [sp, #8280]
  40bfe4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40bfe8:	add	x1, x0, #0x7d8
  40bfec:	mov	x0, x3
  40bff0:	bl	402490 <memcpy@plt>
  40bff4:	ldr	x0, [sp, #8288]
  40bff8:	ldr	x1, [x0, #24]
  40bffc:	ldr	x0, [sp, #8280]
  40c000:	add	x1, x1, x0
  40c004:	ldr	x0, [sp, #8288]
  40c008:	str	x1, [x0, #24]
  40c00c:	ldr	x0, [sp, #16]
  40c010:	cmp	x0, #0x0
  40c014:	b.eq	40c064 <__fxstatat@plt+0x9504>  // b.none
  40c018:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c01c:	add	x0, x0, #0x5f8
  40c020:	ldr	x0, [x0]
  40c024:	mov	x3, x0
  40c028:	mov	x2, #0x6                   	// #6
  40c02c:	mov	x1, #0x1                   	// #1
  40c030:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40c034:	add	x0, x0, #0x468
  40c038:	bl	4024e0 <fwrite_unlocked@plt>
  40c03c:	add	x0, sp, #0x2, lsl #12
  40c040:	ldrb	w0, [x0, #159]
  40c044:	cmp	w0, #0x0
  40c048:	b.eq	40c064 <__fxstatat@plt+0x9504>  // b.none
  40c04c:	ldr	x1, [sp, #72]
  40c050:	ldr	x0, [sp, #8336]
  40c054:	sub	x0, x0, #0x1
  40c058:	add	x0, x1, x0
  40c05c:	ldrb	w0, [x0]
  40c060:	bl	402770 <putchar_unlocked@plt>
  40c064:	ldr	x1, [sp, #72]
  40c068:	add	x0, sp, #0x50
  40c06c:	cmp	x1, x0
  40c070:	b.eq	40c08c <__fxstatat@plt+0x952c>  // b.none
  40c074:	ldr	x0, [sp, #72]
  40c078:	ldr	x1, [sp, #56]
  40c07c:	cmp	x1, x0
  40c080:	b.eq	40c08c <__fxstatat@plt+0x952c>  // b.none
  40c084:	ldr	x0, [sp, #72]
  40c088:	bl	4028f0 <free@plt>
  40c08c:	ldrb	w0, [sp, #71]
  40c090:	and	x1, x0, #0xff
  40c094:	ldr	x0, [sp, #8336]
  40c098:	add	x0, x1, x0
  40c09c:	ldp	x29, x30, [sp]
  40c0a0:	mov	x12, #0x20a0                	// #8352
  40c0a4:	add	sp, sp, x12
  40c0a8:	ret
  40c0ac:	stp	x29, x30, [sp, #-80]!
  40c0b0:	mov	x29, sp
  40c0b4:	str	x0, [sp, #40]
  40c0b8:	strb	w1, [sp, #39]
  40c0bc:	str	x2, [sp, #24]
  40c0c0:	str	x3, [sp, #16]
  40c0c4:	ldrb	w0, [sp, #39]
  40c0c8:	cmp	w0, #0x0
  40c0cc:	b.eq	40c0dc <__fxstatat@plt+0x957c>  // b.none
  40c0d0:	ldr	x0, [sp, #40]
  40c0d4:	ldr	x0, [x0, #8]
  40c0d8:	b	40c0e4 <__fxstatat@plt+0x9584>
  40c0dc:	ldr	x0, [sp, #40]
  40c0e0:	ldr	x0, [x0]
  40c0e4:	str	x0, [sp, #72]
  40c0e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c0ec:	add	x0, x0, #0x6c4
  40c0f0:	ldrb	w0, [x0]
  40c0f4:	cmp	w0, #0x0
  40c0f8:	b.eq	40c10c <__fxstatat@plt+0x95ac>  // b.none
  40c0fc:	ldrb	w1, [sp, #39]
  40c100:	ldr	x0, [sp, #40]
  40c104:	bl	40c768 <__fxstatat@plt+0x9c08>
  40c108:	b	40c110 <__fxstatat@plt+0x95b0>
  40c10c:	mov	x0, #0x0                   	// #0
  40c110:	str	x0, [sp, #64]
  40c114:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c118:	add	x0, x0, #0x6c4
  40c11c:	ldrb	w0, [x0]
  40c120:	cmp	w0, #0x0
  40c124:	b.eq	40c150 <__fxstatat@plt+0x95f0>  // b.none
  40c128:	ldr	x0, [sp, #64]
  40c12c:	cmp	x0, #0x0
  40c130:	b.ne	40c148 <__fxstatat@plt+0x95e8>  // b.any
  40c134:	mov	w0, #0x4                   	// #4
  40c138:	bl	403994 <__fxstatat@plt+0xe34>
  40c13c:	and	w0, w0, #0xff
  40c140:	cmp	w0, #0x0
  40c144:	b.eq	40c150 <__fxstatat@plt+0x95f0>  // b.none
  40c148:	mov	w0, #0x1                   	// #1
  40c14c:	b	40c154 <__fxstatat@plt+0x95f4>
  40c150:	mov	w0, #0x0                   	// #0
  40c154:	strb	w0, [sp, #63]
  40c158:	ldrb	w0, [sp, #63]
  40c15c:	and	w0, w0, #0x1
  40c160:	strb	w0, [sp, #63]
  40c164:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c168:	add	x0, x0, #0x700
  40c16c:	ldr	x1, [x0]
  40c170:	ldr	x0, [sp, #40]
  40c174:	ldr	w2, [x0, #180]
  40c178:	ldrb	w0, [sp, #39]
  40c17c:	cmp	w0, #0x0
  40c180:	cset	w0, ne  // ne = any
  40c184:	and	w0, w0, #0xff
  40c188:	eor	w0, w0, #0x1
  40c18c:	and	w0, w0, #0xff
  40c190:	and	w0, w0, #0x1
  40c194:	and	w3, w0, #0xff
  40c198:	ldr	x0, [sp, #40]
  40c19c:	ldr	x0, [x0, #16]
  40c1a0:	mov	x6, x0
  40c1a4:	ldr	x5, [sp, #24]
  40c1a8:	mov	w4, w3
  40c1ac:	ldr	x3, [sp, #64]
  40c1b0:	ldr	x0, [sp, #72]
  40c1b4:	bl	40bce4 <__fxstatat@plt+0x9184>
  40c1b8:	str	x0, [sp, #48]
  40c1bc:	bl	403b5c <__fxstatat@plt+0xffc>
  40c1c0:	ldrb	w0, [sp, #63]
  40c1c4:	cmp	w0, #0x0
  40c1c8:	b.eq	40c22c <__fxstatat@plt+0x96cc>  // b.none
  40c1cc:	bl	40c238 <__fxstatat@plt+0x96d8>
  40c1d0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c1d4:	add	x0, x0, #0x720
  40c1d8:	ldr	x0, [x0]
  40c1dc:	cmp	x0, #0x0
  40c1e0:	b.eq	40c22c <__fxstatat@plt+0x96cc>  // b.none
  40c1e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c1e8:	add	x0, x0, #0x720
  40c1ec:	ldr	x0, [x0]
  40c1f0:	ldr	x1, [sp, #16]
  40c1f4:	udiv	x1, x1, x0
  40c1f8:	ldr	x2, [sp, #16]
  40c1fc:	ldr	x0, [sp, #48]
  40c200:	add	x0, x2, x0
  40c204:	sub	x2, x0, #0x1
  40c208:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c20c:	add	x0, x0, #0x720
  40c210:	ldr	x0, [x0]
  40c214:	udiv	x0, x2, x0
  40c218:	cmp	x1, x0
  40c21c:	b.eq	40c22c <__fxstatat@plt+0x96cc>  // b.none
  40c220:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c224:	add	x0, x0, #0x508
  40c228:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c22c:	ldr	x0, [sp, #48]
  40c230:	ldp	x29, x30, [sp], #80
  40c234:	ret
  40c238:	stp	x29, x30, [sp, #-16]!
  40c23c:	mov	x29, sp
  40c240:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c244:	add	x0, x0, #0x398
  40c248:	ldr	x0, [x0, #40]
  40c24c:	cmp	x0, #0x0
  40c250:	b.eq	40c264 <__fxstatat@plt+0x9704>  // b.none
  40c254:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c258:	add	x0, x0, #0x3b8
  40c25c:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c260:	b	40c288 <__fxstatat@plt+0x9728>
  40c264:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c268:	add	x0, x0, #0x398
  40c26c:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c270:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c274:	add	x0, x0, #0x3c8
  40c278:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c27c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c280:	add	x0, x0, #0x3a8
  40c284:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c288:	nop
  40c28c:	ldp	x29, x30, [sp], #16
  40c290:	ret
  40c294:	sub	sp, sp, #0x2d0
  40c298:	stp	x29, x30, [sp]
  40c29c:	mov	x29, sp
  40c2a0:	str	x19, [sp, #16]
  40c2a4:	str	x0, [sp, #40]
  40c2a8:	str	x1, [sp, #32]
  40c2ac:	bl	403a80 <__fxstatat@plt+0xf20>
  40c2b0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c2b4:	add	x0, x0, #0x6d9
  40c2b8:	ldrb	w0, [x0]
  40c2bc:	cmp	w0, #0x0
  40c2c0:	b.eq	40c310 <__fxstatat@plt+0x97b0>  // b.none
  40c2c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c2c8:	add	x0, x0, #0x69c
  40c2cc:	ldr	w0, [x0]
  40c2d0:	cmp	w0, #0x4
  40c2d4:	b.eq	40c2e8 <__fxstatat@plt+0x9788>  // b.none
  40c2d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c2dc:	add	x0, x0, #0x674
  40c2e0:	ldr	w19, [x0]
  40c2e4:	b	40c2ec <__fxstatat@plt+0x978c>
  40c2e8:	mov	w19, #0x0                   	// #0
  40c2ec:	add	x0, sp, #0x38
  40c2f0:	ldr	x2, [sp, #40]
  40c2f4:	mov	x1, #0x28c                 	// #652
  40c2f8:	bl	40aa34 <__fxstatat@plt+0x7ed4>
  40c2fc:	mov	x2, x0
  40c300:	mov	w1, w19
  40c304:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40c308:	add	x0, x0, #0x418
  40c30c:	bl	402aa0 <printf@plt>
  40c310:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c314:	add	x0, x0, #0x6ab
  40c318:	ldrb	w0, [x0]
  40c31c:	cmp	w0, #0x0
  40c320:	b.eq	40c3c4 <__fxstatat@plt+0x9864>  // b.none
  40c324:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c328:	add	x0, x0, #0x69c
  40c32c:	ldr	w0, [x0]
  40c330:	cmp	w0, #0x4
  40c334:	b.eq	40c348 <__fxstatat@plt+0x97e8>  // b.none
  40c338:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c33c:	add	x0, x0, #0x678
  40c340:	ldr	w19, [x0]
  40c344:	b	40c34c <__fxstatat@plt+0x97ec>
  40c348:	mov	w19, #0x0                   	// #0
  40c34c:	ldr	x0, [sp, #40]
  40c350:	ldrb	w0, [x0, #168]
  40c354:	eor	w0, w0, #0x1
  40c358:	and	w0, w0, #0xff
  40c35c:	cmp	w0, #0x0
  40c360:	b.eq	40c370 <__fxstatat@plt+0x9810>  // b.none
  40c364:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40c368:	add	x0, x0, #0x3e0
  40c36c:	b	40c3b0 <__fxstatat@plt+0x9850>
  40c370:	ldr	x0, [sp, #40]
  40c374:	ldr	x0, [x0, #88]
  40c378:	mov	x5, x0
  40c37c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c380:	add	x0, x0, #0x6ac
  40c384:	ldr	w1, [x0]
  40c388:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c38c:	add	x0, x0, #0x6b0
  40c390:	ldr	x2, [x0]
  40c394:	add	x0, sp, #0x38
  40c398:	mov	x4, x2
  40c39c:	mov	x3, #0x200                 	// #512
  40c3a0:	mov	w2, w1
  40c3a4:	mov	x1, x0
  40c3a8:	mov	x0, x5
  40c3ac:	bl	412264 <__fxstatat@plt+0xf704>
  40c3b0:	mov	x2, x0
  40c3b4:	mov	w1, w19
  40c3b8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40c3bc:	add	x0, x0, #0x418
  40c3c0:	bl	402aa0 <printf@plt>
  40c3c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c3c8:	add	x0, x0, #0x670
  40c3cc:	ldrb	w0, [x0]
  40c3d0:	cmp	w0, #0x0
  40c3d4:	b.eq	40c41c <__fxstatat@plt+0x98bc>  // b.none
  40c3d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c3dc:	add	x0, x0, #0x69c
  40c3e0:	ldr	w0, [x0]
  40c3e4:	cmp	w0, #0x4
  40c3e8:	b.eq	40c3fc <__fxstatat@plt+0x989c>  // b.none
  40c3ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c3f0:	add	x0, x0, #0x680
  40c3f4:	ldr	w0, [x0]
  40c3f8:	b	40c400 <__fxstatat@plt+0x98a0>
  40c3fc:	mov	w0, #0x0                   	// #0
  40c400:	ldr	x1, [sp, #40]
  40c404:	ldr	x1, [x1, #160]
  40c408:	mov	x2, x1
  40c40c:	mov	w1, w0
  40c410:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40c414:	add	x0, x0, #0x418
  40c418:	bl	402aa0 <printf@plt>
  40c41c:	ldr	x3, [sp, #32]
  40c420:	mov	x2, #0x0                   	// #0
  40c424:	mov	w1, #0x0                   	// #0
  40c428:	ldr	x0, [sp, #40]
  40c42c:	bl	40c0ac <__fxstatat@plt+0x954c>
  40c430:	str	x0, [sp, #712]
  40c434:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c438:	add	x0, x0, #0x6c0
  40c43c:	ldr	w0, [x0]
  40c440:	cmp	w0, #0x0
  40c444:	b.eq	40c480 <__fxstatat@plt+0x9920>  // b.none
  40c448:	ldr	x0, [sp, #40]
  40c44c:	ldrb	w3, [x0, #168]
  40c450:	ldr	x0, [sp, #40]
  40c454:	ldr	w1, [x0, #40]
  40c458:	ldr	x0, [sp, #40]
  40c45c:	ldr	w0, [x0, #152]
  40c460:	mov	w2, w0
  40c464:	mov	w0, w3
  40c468:	bl	40c690 <__fxstatat@plt+0x9b30>
  40c46c:	and	w0, w0, #0xff
  40c470:	and	x0, x0, #0xff
  40c474:	ldr	x1, [sp, #712]
  40c478:	add	x0, x1, x0
  40c47c:	str	x0, [sp, #712]
  40c480:	ldr	x0, [sp, #712]
  40c484:	ldr	x19, [sp, #16]
  40c488:	ldp	x29, x30, [sp]
  40c48c:	add	sp, sp, #0x2d0
  40c490:	ret
  40c494:	sub	sp, sp, #0x20
  40c498:	strb	w0, [sp, #15]
  40c49c:	str	w1, [sp, #8]
  40c4a0:	str	w2, [sp, #4]
  40c4a4:	ldrb	w0, [sp, #15]
  40c4a8:	cmp	w0, #0x0
  40c4ac:	b.eq	40c4c8 <__fxstatat@plt+0x9968>  // b.none
  40c4b0:	ldr	w0, [sp, #8]
  40c4b4:	and	w0, w0, #0xf000
  40c4b8:	cmp	w0, #0x8, lsl #12
  40c4bc:	cset	w0, eq  // eq = none
  40c4c0:	and	w0, w0, #0xff
  40c4c4:	b	40c4d8 <__fxstatat@plt+0x9978>
  40c4c8:	ldr	w0, [sp, #4]
  40c4cc:	cmp	w0, #0x5
  40c4d0:	cset	w0, eq  // eq = none
  40c4d4:	and	w0, w0, #0xff
  40c4d8:	cmp	w0, #0x0
  40c4dc:	b.eq	40c528 <__fxstatat@plt+0x99c8>  // b.none
  40c4e0:	ldrb	w0, [sp, #15]
  40c4e4:	cmp	w0, #0x0
  40c4e8:	b.eq	40c520 <__fxstatat@plt+0x99c0>  // b.none
  40c4ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c4f0:	add	x0, x0, #0x6c0
  40c4f4:	ldr	w0, [x0]
  40c4f8:	cmp	w0, #0x3
  40c4fc:	b.ne	40c520 <__fxstatat@plt+0x99c0>  // b.any
  40c500:	ldr	w1, [sp, #8]
  40c504:	mov	w0, #0x49                  	// #73
  40c508:	and	w0, w1, w0
  40c50c:	cmp	w0, #0x0
  40c510:	b.eq	40c520 <__fxstatat@plt+0x99c0>  // b.none
  40c514:	mov	w0, #0x2a                  	// #42
  40c518:	strb	w0, [sp, #31]
  40c51c:	b	40c684 <__fxstatat@plt+0x9b24>
  40c520:	strb	wzr, [sp, #31]
  40c524:	b	40c684 <__fxstatat@plt+0x9b24>
  40c528:	ldrb	w0, [sp, #15]
  40c52c:	cmp	w0, #0x0
  40c530:	b.eq	40c54c <__fxstatat@plt+0x99ec>  // b.none
  40c534:	ldr	w0, [sp, #8]
  40c538:	and	w0, w0, #0xf000
  40c53c:	cmp	w0, #0x4, lsl #12
  40c540:	cset	w0, eq  // eq = none
  40c544:	and	w0, w0, #0xff
  40c548:	b	40c578 <__fxstatat@plt+0x9a18>
  40c54c:	ldr	w0, [sp, #4]
  40c550:	cmp	w0, #0x3
  40c554:	b.eq	40c564 <__fxstatat@plt+0x9a04>  // b.none
  40c558:	ldr	w0, [sp, #4]
  40c55c:	cmp	w0, #0x9
  40c560:	b.ne	40c56c <__fxstatat@plt+0x9a0c>  // b.any
  40c564:	mov	w0, #0x1                   	// #1
  40c568:	b	40c570 <__fxstatat@plt+0x9a10>
  40c56c:	mov	w0, #0x0                   	// #0
  40c570:	and	w0, w0, #0x1
  40c574:	and	w0, w0, #0xff
  40c578:	cmp	w0, #0x0
  40c57c:	b.eq	40c58c <__fxstatat@plt+0x9a2c>  // b.none
  40c580:	mov	w0, #0x2f                  	// #47
  40c584:	strb	w0, [sp, #31]
  40c588:	b	40c684 <__fxstatat@plt+0x9b24>
  40c58c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c590:	add	x0, x0, #0x6c0
  40c594:	ldr	w0, [x0]
  40c598:	cmp	w0, #0x1
  40c59c:	b.ne	40c5a8 <__fxstatat@plt+0x9a48>  // b.any
  40c5a0:	strb	wzr, [sp, #31]
  40c5a4:	b	40c684 <__fxstatat@plt+0x9b24>
  40c5a8:	ldrb	w0, [sp, #15]
  40c5ac:	cmp	w0, #0x0
  40c5b0:	b.eq	40c5cc <__fxstatat@plt+0x9a6c>  // b.none
  40c5b4:	ldr	w0, [sp, #8]
  40c5b8:	and	w0, w0, #0xf000
  40c5bc:	cmp	w0, #0xa, lsl #12
  40c5c0:	cset	w0, eq  // eq = none
  40c5c4:	and	w0, w0, #0xff
  40c5c8:	b	40c5dc <__fxstatat@plt+0x9a7c>
  40c5cc:	ldr	w0, [sp, #4]
  40c5d0:	cmp	w0, #0x6
  40c5d4:	cset	w0, eq  // eq = none
  40c5d8:	and	w0, w0, #0xff
  40c5dc:	cmp	w0, #0x0
  40c5e0:	b.eq	40c5f0 <__fxstatat@plt+0x9a90>  // b.none
  40c5e4:	mov	w0, #0x40                  	// #64
  40c5e8:	strb	w0, [sp, #31]
  40c5ec:	b	40c684 <__fxstatat@plt+0x9b24>
  40c5f0:	ldrb	w0, [sp, #15]
  40c5f4:	cmp	w0, #0x0
  40c5f8:	b.eq	40c614 <__fxstatat@plt+0x9ab4>  // b.none
  40c5fc:	ldr	w0, [sp, #8]
  40c600:	and	w0, w0, #0xf000
  40c604:	cmp	w0, #0x1, lsl #12
  40c608:	cset	w0, eq  // eq = none
  40c60c:	and	w0, w0, #0xff
  40c610:	b	40c624 <__fxstatat@plt+0x9ac4>
  40c614:	ldr	w0, [sp, #4]
  40c618:	cmp	w0, #0x1
  40c61c:	cset	w0, eq  // eq = none
  40c620:	and	w0, w0, #0xff
  40c624:	cmp	w0, #0x0
  40c628:	b.eq	40c638 <__fxstatat@plt+0x9ad8>  // b.none
  40c62c:	mov	w0, #0x7c                  	// #124
  40c630:	strb	w0, [sp, #31]
  40c634:	b	40c684 <__fxstatat@plt+0x9b24>
  40c638:	ldrb	w0, [sp, #15]
  40c63c:	cmp	w0, #0x0
  40c640:	b.eq	40c65c <__fxstatat@plt+0x9afc>  // b.none
  40c644:	ldr	w0, [sp, #8]
  40c648:	and	w0, w0, #0xf000
  40c64c:	cmp	w0, #0xc, lsl #12
  40c650:	cset	w0, eq  // eq = none
  40c654:	and	w0, w0, #0xff
  40c658:	b	40c66c <__fxstatat@plt+0x9b0c>
  40c65c:	ldr	w0, [sp, #4]
  40c660:	cmp	w0, #0x7
  40c664:	cset	w0, eq  // eq = none
  40c668:	and	w0, w0, #0xff
  40c66c:	cmp	w0, #0x0
  40c670:	b.eq	40c680 <__fxstatat@plt+0x9b20>  // b.none
  40c674:	mov	w0, #0x3d                  	// #61
  40c678:	strb	w0, [sp, #31]
  40c67c:	b	40c684 <__fxstatat@plt+0x9b24>
  40c680:	strb	wzr, [sp, #31]
  40c684:	ldrb	w0, [sp, #31]
  40c688:	add	sp, sp, #0x20
  40c68c:	ret
  40c690:	stp	x29, x30, [sp, #-48]!
  40c694:	mov	x29, sp
  40c698:	strb	w0, [sp, #31]
  40c69c:	str	w1, [sp, #24]
  40c6a0:	str	w2, [sp, #20]
  40c6a4:	ldr	w2, [sp, #20]
  40c6a8:	ldr	w1, [sp, #24]
  40c6ac:	ldrb	w0, [sp, #31]
  40c6b0:	bl	40c494 <__fxstatat@plt+0x9934>
  40c6b4:	strb	w0, [sp, #47]
  40c6b8:	ldrb	w0, [sp, #47]
  40c6bc:	cmp	w0, #0x0
  40c6c0:	b.eq	40c6e8 <__fxstatat@plt+0x9b88>  // b.none
  40c6c4:	ldrb	w0, [sp, #47]
  40c6c8:	bl	402770 <putchar_unlocked@plt>
  40c6cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c6d0:	add	x0, x0, #0x7d8
  40c6d4:	ldr	x0, [x0]
  40c6d8:	add	x1, x0, #0x1
  40c6dc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c6e0:	add	x0, x0, #0x7d8
  40c6e4:	str	x1, [x0]
  40c6e8:	ldrb	w0, [sp, #47]
  40c6ec:	cmp	w0, #0x0
  40c6f0:	cset	w0, ne  // ne = any
  40c6f4:	and	w0, w0, #0xff
  40c6f8:	ldp	x29, x30, [sp], #48
  40c6fc:	ret
  40c700:	stp	x29, x30, [sp, #-32]!
  40c704:	mov	x29, sp
  40c708:	str	x0, [sp, #24]
  40c70c:	ldr	x0, [sp, #24]
  40c710:	cmp	x0, #0x0
  40c714:	b.eq	40c750 <__fxstatat@plt+0x9bf0>  // b.none
  40c718:	mov	w0, #0x4                   	// #4
  40c71c:	bl	403994 <__fxstatat@plt+0xe34>
  40c720:	and	w0, w0, #0xff
  40c724:	cmp	w0, #0x0
  40c728:	b.eq	40c730 <__fxstatat@plt+0x9bd0>  // b.none
  40c72c:	bl	403a54 <__fxstatat@plt+0xef4>
  40c730:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c734:	add	x0, x0, #0x398
  40c738:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c73c:	ldr	x0, [sp, #24]
  40c740:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c744:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c748:	add	x0, x0, #0x3a8
  40c74c:	bl	40cc18 <__fxstatat@plt+0xa0b8>
  40c750:	ldr	x0, [sp, #24]
  40c754:	cmp	x0, #0x0
  40c758:	cset	w0, ne  // ne = any
  40c75c:	and	w0, w0, #0xff
  40c760:	ldp	x29, x30, [sp], #32
  40c764:	ret
  40c768:	stp	x29, x30, [sp, #-80]!
  40c76c:	mov	x29, sp
  40c770:	str	x0, [sp, #24]
  40c774:	strb	w1, [sp, #23]
  40c778:	ldrb	w0, [sp, #23]
  40c77c:	cmp	w0, #0x0
  40c780:	b.eq	40c7c0 <__fxstatat@plt+0x9c60>  // b.none
  40c784:	ldr	x0, [sp, #24]
  40c788:	ldr	x0, [x0, #8]
  40c78c:	str	x0, [sp, #56]
  40c790:	ldr	x0, [sp, #24]
  40c794:	ldr	w0, [x0, #156]
  40c798:	str	w0, [sp, #52]
  40c79c:	ldr	x0, [sp, #24]
  40c7a0:	ldrb	w0, [x0, #169]
  40c7a4:	cmp	w0, #0x0
  40c7a8:	b.eq	40c7b4 <__fxstatat@plt+0x9c54>  // b.none
  40c7ac:	mov	w0, #0x0                   	// #0
  40c7b0:	b	40c7b8 <__fxstatat@plt+0x9c58>
  40c7b4:	mov	w0, #0xffffffff            	// #-1
  40c7b8:	str	w0, [sp, #48]
  40c7bc:	b	40c814 <__fxstatat@plt+0x9cb4>
  40c7c0:	ldr	x0, [sp, #24]
  40c7c4:	ldr	x0, [x0]
  40c7c8:	str	x0, [sp, #56]
  40c7cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c7d0:	add	x0, x0, #0x648
  40c7d4:	ldrb	w0, [x0]
  40c7d8:	cmp	w0, #0x0
  40c7dc:	b.eq	40c7fc <__fxstatat@plt+0x9c9c>  // b.none
  40c7e0:	ldr	x0, [sp, #24]
  40c7e4:	ldrb	w0, [x0, #169]
  40c7e8:	cmp	w0, #0x0
  40c7ec:	b.eq	40c7fc <__fxstatat@plt+0x9c9c>  // b.none
  40c7f0:	ldr	x0, [sp, #24]
  40c7f4:	ldr	w0, [x0, #156]
  40c7f8:	b	40c804 <__fxstatat@plt+0x9ca4>
  40c7fc:	ldr	x0, [sp, #24]
  40c800:	ldr	w0, [x0, #40]
  40c804:	str	w0, [sp, #52]
  40c808:	ldr	x0, [sp, #24]
  40c80c:	ldrb	w0, [x0, #169]
  40c810:	str	w0, [sp, #48]
  40c814:	ldr	w0, [sp, #48]
  40c818:	cmn	w0, #0x1
  40c81c:	b.ne	40c840 <__fxstatat@plt+0x9ce0>  // b.any
  40c820:	mov	w0, #0xc                   	// #12
  40c824:	bl	403994 <__fxstatat@plt+0xe34>
  40c828:	and	w0, w0, #0xff
  40c82c:	cmp	w0, #0x0
  40c830:	b.eq	40c840 <__fxstatat@plt+0x9ce0>  // b.none
  40c834:	mov	w0, #0xc                   	// #12
  40c838:	str	w0, [sp, #76]
  40c83c:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c840:	ldr	x0, [sp, #24]
  40c844:	ldrb	w0, [x0, #168]
  40c848:	eor	w0, w0, #0x1
  40c84c:	and	w0, w0, #0xff
  40c850:	cmp	w0, #0x0
  40c854:	b.eq	40c878 <__fxstatat@plt+0x9d18>  // b.none
  40c858:	ldr	x0, [sp, #24]
  40c85c:	ldr	w1, [x0, #152]
  40c860:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40c864:	add	x0, x0, #0x530
  40c868:	mov	w1, w1
  40c86c:	ldr	w0, [x0, x1, lsl #2]
  40c870:	str	w0, [sp, #76]
  40c874:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c878:	ldr	w0, [sp, #52]
  40c87c:	and	w0, w0, #0xf000
  40c880:	cmp	w0, #0x8, lsl #12
  40c884:	b.ne	40c984 <__fxstatat@plt+0x9e24>  // b.any
  40c888:	mov	w0, #0x5                   	// #5
  40c88c:	str	w0, [sp, #76]
  40c890:	ldr	w0, [sp, #52]
  40c894:	and	w0, w0, #0x800
  40c898:	cmp	w0, #0x0
  40c89c:	b.eq	40c8c0 <__fxstatat@plt+0x9d60>  // b.none
  40c8a0:	mov	w0, #0x10                  	// #16
  40c8a4:	bl	403994 <__fxstatat@plt+0xe34>
  40c8a8:	and	w0, w0, #0xff
  40c8ac:	cmp	w0, #0x0
  40c8b0:	b.eq	40c8c0 <__fxstatat@plt+0x9d60>  // b.none
  40c8b4:	mov	w0, #0x10                  	// #16
  40c8b8:	str	w0, [sp, #76]
  40c8bc:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c8c0:	ldr	w0, [sp, #52]
  40c8c4:	and	w0, w0, #0x400
  40c8c8:	cmp	w0, #0x0
  40c8cc:	b.eq	40c8f0 <__fxstatat@plt+0x9d90>  // b.none
  40c8d0:	mov	w0, #0x11                  	// #17
  40c8d4:	bl	403994 <__fxstatat@plt+0xe34>
  40c8d8:	and	w0, w0, #0xff
  40c8dc:	cmp	w0, #0x0
  40c8e0:	b.eq	40c8f0 <__fxstatat@plt+0x9d90>  // b.none
  40c8e4:	mov	w0, #0x11                  	// #17
  40c8e8:	str	w0, [sp, #76]
  40c8ec:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c8f0:	mov	w0, #0x15                  	// #21
  40c8f4:	bl	403994 <__fxstatat@plt+0xe34>
  40c8f8:	and	w0, w0, #0xff
  40c8fc:	cmp	w0, #0x0
  40c900:	b.eq	40c920 <__fxstatat@plt+0x9dc0>  // b.none
  40c904:	ldr	x0, [sp, #24]
  40c908:	ldrb	w0, [x0, #176]
  40c90c:	cmp	w0, #0x0
  40c910:	b.eq	40c920 <__fxstatat@plt+0x9dc0>  // b.none
  40c914:	mov	w0, #0x15                  	// #21
  40c918:	str	w0, [sp, #76]
  40c91c:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c920:	ldr	w1, [sp, #52]
  40c924:	mov	w0, #0x49                  	// #73
  40c928:	and	w0, w1, w0
  40c92c:	cmp	w0, #0x0
  40c930:	b.eq	40c954 <__fxstatat@plt+0x9df4>  // b.none
  40c934:	mov	w0, #0xe                   	// #14
  40c938:	bl	403994 <__fxstatat@plt+0xe34>
  40c93c:	and	w0, w0, #0xff
  40c940:	cmp	w0, #0x0
  40c944:	b.eq	40c954 <__fxstatat@plt+0x9df4>  // b.none
  40c948:	mov	w0, #0xe                   	// #14
  40c94c:	str	w0, [sp, #76]
  40c950:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c954:	ldr	x0, [sp, #24]
  40c958:	ldr	w0, [x0, #44]
  40c95c:	cmp	w0, #0x1
  40c960:	b.ls	40cad0 <__fxstatat@plt+0x9f70>  // b.plast
  40c964:	mov	w0, #0x16                  	// #22
  40c968:	bl	403994 <__fxstatat@plt+0xe34>
  40c96c:	and	w0, w0, #0xff
  40c970:	cmp	w0, #0x0
  40c974:	b.eq	40cad0 <__fxstatat@plt+0x9f70>  // b.none
  40c978:	mov	w0, #0x16                  	// #22
  40c97c:	str	w0, [sp, #76]
  40c980:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c984:	ldr	w0, [sp, #52]
  40c988:	and	w0, w0, #0xf000
  40c98c:	cmp	w0, #0x4, lsl #12
  40c990:	b.ne	40ca3c <__fxstatat@plt+0x9edc>  // b.any
  40c994:	mov	w0, #0x6                   	// #6
  40c998:	str	w0, [sp, #76]
  40c99c:	ldr	w0, [sp, #52]
  40c9a0:	and	w0, w0, #0x200
  40c9a4:	cmp	w0, #0x0
  40c9a8:	b.eq	40c9dc <__fxstatat@plt+0x9e7c>  // b.none
  40c9ac:	ldr	w0, [sp, #52]
  40c9b0:	and	w0, w0, #0x2
  40c9b4:	cmp	w0, #0x0
  40c9b8:	b.eq	40c9dc <__fxstatat@plt+0x9e7c>  // b.none
  40c9bc:	mov	w0, #0x14                  	// #20
  40c9c0:	bl	403994 <__fxstatat@plt+0xe34>
  40c9c4:	and	w0, w0, #0xff
  40c9c8:	cmp	w0, #0x0
  40c9cc:	b.eq	40c9dc <__fxstatat@plt+0x9e7c>  // b.none
  40c9d0:	mov	w0, #0x14                  	// #20
  40c9d4:	str	w0, [sp, #76]
  40c9d8:	b	40cad0 <__fxstatat@plt+0x9f70>
  40c9dc:	ldr	w0, [sp, #52]
  40c9e0:	and	w0, w0, #0x2
  40c9e4:	cmp	w0, #0x0
  40c9e8:	b.eq	40ca0c <__fxstatat@plt+0x9eac>  // b.none
  40c9ec:	mov	w0, #0x13                  	// #19
  40c9f0:	bl	403994 <__fxstatat@plt+0xe34>
  40c9f4:	and	w0, w0, #0xff
  40c9f8:	cmp	w0, #0x0
  40c9fc:	b.eq	40ca0c <__fxstatat@plt+0x9eac>  // b.none
  40ca00:	mov	w0, #0x13                  	// #19
  40ca04:	str	w0, [sp, #76]
  40ca08:	b	40cad0 <__fxstatat@plt+0x9f70>
  40ca0c:	ldr	w0, [sp, #52]
  40ca10:	and	w0, w0, #0x200
  40ca14:	cmp	w0, #0x0
  40ca18:	b.eq	40cad0 <__fxstatat@plt+0x9f70>  // b.none
  40ca1c:	mov	w0, #0x12                  	// #18
  40ca20:	bl	403994 <__fxstatat@plt+0xe34>
  40ca24:	and	w0, w0, #0xff
  40ca28:	cmp	w0, #0x0
  40ca2c:	b.eq	40cad0 <__fxstatat@plt+0x9f70>  // b.none
  40ca30:	mov	w0, #0x12                  	// #18
  40ca34:	str	w0, [sp, #76]
  40ca38:	b	40cad0 <__fxstatat@plt+0x9f70>
  40ca3c:	ldr	w0, [sp, #52]
  40ca40:	and	w0, w0, #0xf000
  40ca44:	cmp	w0, #0xa, lsl #12
  40ca48:	b.ne	40ca58 <__fxstatat@plt+0x9ef8>  // b.any
  40ca4c:	mov	w0, #0x7                   	// #7
  40ca50:	str	w0, [sp, #76]
  40ca54:	b	40cad0 <__fxstatat@plt+0x9f70>
  40ca58:	ldr	w0, [sp, #52]
  40ca5c:	and	w0, w0, #0xf000
  40ca60:	cmp	w0, #0x1, lsl #12
  40ca64:	b.ne	40ca74 <__fxstatat@plt+0x9f14>  // b.any
  40ca68:	mov	w0, #0x8                   	// #8
  40ca6c:	str	w0, [sp, #76]
  40ca70:	b	40cad0 <__fxstatat@plt+0x9f70>
  40ca74:	ldr	w0, [sp, #52]
  40ca78:	and	w0, w0, #0xf000
  40ca7c:	cmp	w0, #0xc, lsl #12
  40ca80:	b.ne	40ca90 <__fxstatat@plt+0x9f30>  // b.any
  40ca84:	mov	w0, #0x9                   	// #9
  40ca88:	str	w0, [sp, #76]
  40ca8c:	b	40cad0 <__fxstatat@plt+0x9f70>
  40ca90:	ldr	w0, [sp, #52]
  40ca94:	and	w0, w0, #0xf000
  40ca98:	cmp	w0, #0x6, lsl #12
  40ca9c:	b.ne	40caac <__fxstatat@plt+0x9f4c>  // b.any
  40caa0:	mov	w0, #0xa                   	// #10
  40caa4:	str	w0, [sp, #76]
  40caa8:	b	40cad0 <__fxstatat@plt+0x9f70>
  40caac:	ldr	w0, [sp, #52]
  40cab0:	and	w0, w0, #0xf000
  40cab4:	cmp	w0, #0x2, lsl #12
  40cab8:	b.ne	40cac8 <__fxstatat@plt+0x9f68>  // b.any
  40cabc:	mov	w0, #0xb                   	// #11
  40cac0:	str	w0, [sp, #76]
  40cac4:	b	40cad0 <__fxstatat@plt+0x9f70>
  40cac8:	mov	w0, #0xd                   	// #13
  40cacc:	str	w0, [sp, #76]
  40cad0:	str	xzr, [sp, #64]
  40cad4:	ldr	w0, [sp, #76]
  40cad8:	cmp	w0, #0x5
  40cadc:	b.ne	40cb7c <__fxstatat@plt+0xa01c>  // b.any
  40cae0:	ldr	x0, [sp, #56]
  40cae4:	bl	402500 <strlen@plt>
  40cae8:	str	x0, [sp, #40]
  40caec:	ldr	x1, [sp, #56]
  40caf0:	ldr	x0, [sp, #40]
  40caf4:	add	x0, x1, x0
  40caf8:	str	x0, [sp, #56]
  40cafc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cb00:	add	x0, x0, #0x6c8
  40cb04:	ldr	x0, [x0]
  40cb08:	str	x0, [sp, #64]
  40cb0c:	b	40cb68 <__fxstatat@plt+0xa008>
  40cb10:	ldr	x0, [sp, #64]
  40cb14:	ldr	x0, [x0]
  40cb18:	ldr	x1, [sp, #40]
  40cb1c:	cmp	x1, x0
  40cb20:	b.cc	40cb5c <__fxstatat@plt+0x9ffc>  // b.lo, b.ul, b.last
  40cb24:	ldr	x0, [sp, #64]
  40cb28:	ldr	x0, [x0]
  40cb2c:	neg	x0, x0
  40cb30:	ldr	x1, [sp, #56]
  40cb34:	add	x3, x1, x0
  40cb38:	ldr	x0, [sp, #64]
  40cb3c:	ldr	x1, [x0, #8]
  40cb40:	ldr	x0, [sp, #64]
  40cb44:	ldr	x0, [x0]
  40cb48:	mov	x2, x0
  40cb4c:	mov	x0, x3
  40cb50:	bl	40e9d4 <__fxstatat@plt+0xbe74>
  40cb54:	cmp	w0, #0x0
  40cb58:	b.eq	40cb78 <__fxstatat@plt+0xa018>  // b.none
  40cb5c:	ldr	x0, [sp, #64]
  40cb60:	ldr	x0, [x0, #32]
  40cb64:	str	x0, [sp, #64]
  40cb68:	ldr	x0, [sp, #64]
  40cb6c:	cmp	x0, #0x0
  40cb70:	b.ne	40cb10 <__fxstatat@plt+0x9fb0>  // b.any
  40cb74:	b	40cb7c <__fxstatat@plt+0xa01c>
  40cb78:	nop
  40cb7c:	ldr	w0, [sp, #76]
  40cb80:	cmp	w0, #0x7
  40cb84:	b.ne	40cbc4 <__fxstatat@plt+0xa064>  // b.any
  40cb88:	ldr	w0, [sp, #48]
  40cb8c:	cmp	w0, #0x0
  40cb90:	b.ne	40cbc4 <__fxstatat@plt+0xa064>  // b.any
  40cb94:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cb98:	add	x0, x0, #0x648
  40cb9c:	ldrb	w0, [x0]
  40cba0:	cmp	w0, #0x0
  40cba4:	b.ne	40cbbc <__fxstatat@plt+0xa05c>  // b.any
  40cba8:	mov	w0, #0xd                   	// #13
  40cbac:	bl	403994 <__fxstatat@plt+0xe34>
  40cbb0:	and	w0, w0, #0xff
  40cbb4:	cmp	w0, #0x0
  40cbb8:	b.eq	40cbc4 <__fxstatat@plt+0xa064>  // b.none
  40cbbc:	mov	w0, #0xd                   	// #13
  40cbc0:	str	w0, [sp, #76]
  40cbc4:	ldr	x0, [sp, #64]
  40cbc8:	cmp	x0, #0x0
  40cbcc:	b.eq	40cbdc <__fxstatat@plt+0xa07c>  // b.none
  40cbd0:	ldr	x0, [sp, #64]
  40cbd4:	add	x0, x0, #0x10
  40cbd8:	b	40cbf0 <__fxstatat@plt+0xa090>
  40cbdc:	ldr	w0, [sp, #76]
  40cbe0:	lsl	x1, x0, #4
  40cbe4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cbe8:	add	x0, x0, #0x398
  40cbec:	add	x0, x1, x0
  40cbf0:	str	x0, [sp, #32]
  40cbf4:	ldr	x0, [sp, #32]
  40cbf8:	ldr	x0, [x0, #8]
  40cbfc:	cmp	x0, #0x0
  40cc00:	b.eq	40cc0c <__fxstatat@plt+0xa0ac>  // b.none
  40cc04:	ldr	x0, [sp, #32]
  40cc08:	b	40cc10 <__fxstatat@plt+0xa0b0>
  40cc0c:	mov	x0, #0x0                   	// #0
  40cc10:	ldp	x29, x30, [sp], #80
  40cc14:	ret
  40cc18:	stp	x29, x30, [sp, #-32]!
  40cc1c:	mov	x29, sp
  40cc20:	str	x0, [sp, #24]
  40cc24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cc28:	add	x0, x0, #0x6c6
  40cc2c:	ldrb	w0, [x0]
  40cc30:	eor	w0, w0, #0x1
  40cc34:	and	w0, w0, #0xff
  40cc38:	cmp	w0, #0x0
  40cc3c:	b.eq	40cc68 <__fxstatat@plt+0xa108>  // b.none
  40cc40:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cc44:	add	x0, x0, #0x6c6
  40cc48:	mov	w1, #0x1                   	// #1
  40cc4c:	strb	w1, [x0]
  40cc50:	mov	w0, #0x1                   	// #1
  40cc54:	bl	4027e0 <tcgetpgrp@plt>
  40cc58:	cmp	w0, #0x0
  40cc5c:	b.lt	40cc64 <__fxstatat@plt+0xa104>  // b.tstop
  40cc60:	bl	403e3c <__fxstatat@plt+0x12dc>
  40cc64:	bl	40c238 <__fxstatat@plt+0x96d8>
  40cc68:	ldr	x0, [sp, #24]
  40cc6c:	ldr	x4, [x0, #8]
  40cc70:	ldr	x0, [sp, #24]
  40cc74:	ldr	x1, [x0]
  40cc78:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cc7c:	add	x0, x0, #0x5f8
  40cc80:	ldr	x0, [x0]
  40cc84:	mov	x3, x0
  40cc88:	mov	x2, #0x1                   	// #1
  40cc8c:	mov	x0, x4
  40cc90:	bl	4024e0 <fwrite_unlocked@plt>
  40cc94:	nop
  40cc98:	ldp	x29, x30, [sp], #32
  40cc9c:	ret
  40cca0:	sub	sp, sp, #0x2c0
  40cca4:	stp	x29, x30, [sp]
  40cca8:	mov	x29, sp
  40ccac:	str	x0, [sp, #24]
  40ccb0:	str	xzr, [sp, #696]
  40ccb4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ccb8:	add	x0, x0, #0x6d9
  40ccbc:	ldrb	w0, [x0]
  40ccc0:	cmp	w0, #0x0
  40ccc4:	b.eq	40cd18 <__fxstatat@plt+0xa1b8>  // b.none
  40ccc8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cccc:	add	x0, x0, #0x69c
  40ccd0:	ldr	w0, [x0]
  40ccd4:	cmp	w0, #0x4
  40ccd8:	b.ne	40ccf8 <__fxstatat@plt+0xa198>  // b.any
  40ccdc:	ldr	x0, [sp, #24]
  40cce0:	ldr	x0, [x0, #32]
  40cce4:	add	x1, sp, #0x28
  40cce8:	bl	41354c <__fxstatat@plt+0x109ec>
  40ccec:	bl	402500 <strlen@plt>
  40ccf0:	add	x0, x0, #0x1
  40ccf4:	b	40cd0c <__fxstatat@plt+0xa1ac>
  40ccf8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ccfc:	add	x0, x0, #0x674
  40cd00:	ldr	w0, [x0]
  40cd04:	sxtw	x0, w0
  40cd08:	add	x0, x0, #0x1
  40cd0c:	ldr	x1, [sp, #696]
  40cd10:	add	x0, x1, x0
  40cd14:	str	x0, [sp, #696]
  40cd18:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cd1c:	add	x0, x0, #0x6ab
  40cd20:	ldrb	w0, [x0]
  40cd24:	cmp	w0, #0x0
  40cd28:	b.eq	40cdd0 <__fxstatat@plt+0xa270>  // b.none
  40cd2c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cd30:	add	x0, x0, #0x69c
  40cd34:	ldr	w0, [x0]
  40cd38:	cmp	w0, #0x4
  40cd3c:	b.ne	40cdb0 <__fxstatat@plt+0xa250>  // b.any
  40cd40:	ldr	x0, [sp, #24]
  40cd44:	ldrb	w0, [x0, #168]
  40cd48:	eor	w0, w0, #0x1
  40cd4c:	and	w0, w0, #0xff
  40cd50:	cmp	w0, #0x0
  40cd54:	b.eq	40cd64 <__fxstatat@plt+0xa204>  // b.none
  40cd58:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40cd5c:	add	x0, x0, #0x3e0
  40cd60:	b	40cda4 <__fxstatat@plt+0xa244>
  40cd64:	ldr	x0, [sp, #24]
  40cd68:	ldr	x0, [x0, #88]
  40cd6c:	mov	x5, x0
  40cd70:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cd74:	add	x0, x0, #0x6ac
  40cd78:	ldr	w1, [x0]
  40cd7c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cd80:	add	x0, x0, #0x6b0
  40cd84:	ldr	x2, [x0]
  40cd88:	add	x0, sp, #0x28
  40cd8c:	mov	x4, x2
  40cd90:	mov	x3, #0x200                 	// #512
  40cd94:	mov	w2, w1
  40cd98:	mov	x1, x0
  40cd9c:	mov	x0, x5
  40cda0:	bl	412264 <__fxstatat@plt+0xf704>
  40cda4:	bl	402500 <strlen@plt>
  40cda8:	add	x0, x0, #0x1
  40cdac:	b	40cdc4 <__fxstatat@plt+0xa264>
  40cdb0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cdb4:	add	x0, x0, #0x678
  40cdb8:	ldr	w0, [x0]
  40cdbc:	sxtw	x0, w0
  40cdc0:	add	x0, x0, #0x1
  40cdc4:	ldr	x1, [sp, #696]
  40cdc8:	add	x0, x1, x0
  40cdcc:	str	x0, [sp, #696]
  40cdd0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cdd4:	add	x0, x0, #0x670
  40cdd8:	ldrb	w0, [x0]
  40cddc:	cmp	w0, #0x0
  40cde0:	b.eq	40ce2c <__fxstatat@plt+0xa2cc>  // b.none
  40cde4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cde8:	add	x0, x0, #0x69c
  40cdec:	ldr	w0, [x0]
  40cdf0:	cmp	w0, #0x4
  40cdf4:	b.ne	40ce0c <__fxstatat@plt+0xa2ac>  // b.any
  40cdf8:	ldr	x0, [sp, #24]
  40cdfc:	ldr	x0, [x0, #160]
  40ce00:	bl	402500 <strlen@plt>
  40ce04:	add	x0, x0, #0x1
  40ce08:	b	40ce20 <__fxstatat@plt+0xa2c0>
  40ce0c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ce10:	add	x0, x0, #0x680
  40ce14:	ldr	w0, [x0]
  40ce18:	sxtw	x0, w0
  40ce1c:	add	x0, x0, #0x1
  40ce20:	ldr	x1, [sp, #696]
  40ce24:	add	x0, x1, x0
  40ce28:	str	x0, [sp, #696]
  40ce2c:	ldr	x0, [sp, #24]
  40ce30:	ldr	x3, [x0]
  40ce34:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ce38:	add	x0, x0, #0x700
  40ce3c:	ldr	x1, [x0]
  40ce40:	ldr	x0, [sp, #24]
  40ce44:	ldr	w0, [x0, #180]
  40ce48:	mov	w2, w0
  40ce4c:	mov	x0, x3
  40ce50:	bl	40bb20 <__fxstatat@plt+0x8fc0>
  40ce54:	mov	x1, x0
  40ce58:	ldr	x0, [sp, #696]
  40ce5c:	add	x0, x0, x1
  40ce60:	str	x0, [sp, #696]
  40ce64:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ce68:	add	x0, x0, #0x6c0
  40ce6c:	ldr	w0, [x0]
  40ce70:	cmp	w0, #0x0
  40ce74:	b.eq	40cec0 <__fxstatat@plt+0xa360>  // b.none
  40ce78:	ldr	x0, [sp, #24]
  40ce7c:	ldrb	w3, [x0, #168]
  40ce80:	ldr	x0, [sp, #24]
  40ce84:	ldr	w1, [x0, #40]
  40ce88:	ldr	x0, [sp, #24]
  40ce8c:	ldr	w0, [x0, #152]
  40ce90:	mov	w2, w0
  40ce94:	mov	w0, w3
  40ce98:	bl	40c494 <__fxstatat@plt+0x9934>
  40ce9c:	strb	w0, [sp, #695]
  40cea0:	ldrb	w0, [sp, #695]
  40cea4:	cmp	w0, #0x0
  40cea8:	cset	w0, ne  // ne = any
  40ceac:	and	w0, w0, #0xff
  40ceb0:	and	x0, x0, #0xff
  40ceb4:	ldr	x1, [sp, #696]
  40ceb8:	add	x0, x1, x0
  40cebc:	str	x0, [sp, #696]
  40cec0:	ldr	x0, [sp, #696]
  40cec4:	ldp	x29, x30, [sp]
  40cec8:	add	sp, sp, #0x2c0
  40cecc:	ret
  40ced0:	stp	x29, x30, [sp, #-96]!
  40ced4:	mov	x29, sp
  40ced8:	mov	w0, #0x1                   	// #1
  40cedc:	bl	40d7d8 <__fxstatat@plt+0xac78>
  40cee0:	str	x0, [sp, #56]
  40cee4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cee8:	add	x0, x0, #0x7c8
  40ceec:	ldr	x2, [x0]
  40cef0:	ldr	x1, [sp, #56]
  40cef4:	mov	x0, x1
  40cef8:	lsl	x0, x0, #1
  40cefc:	add	x0, x0, x1
  40cf00:	lsl	x0, x0, #3
  40cf04:	sub	x0, x0, #0x18
  40cf08:	add	x0, x2, x0
  40cf0c:	str	x0, [sp, #48]
  40cf10:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cf14:	add	x0, x0, #0x628
  40cf18:	ldr	x1, [x0]
  40cf1c:	ldr	x0, [sp, #56]
  40cf20:	udiv	x1, x1, x0
  40cf24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cf28:	add	x0, x0, #0x628
  40cf2c:	ldr	x0, [x0]
  40cf30:	ldr	x2, [sp, #56]
  40cf34:	udiv	x3, x0, x2
  40cf38:	ldr	x2, [sp, #56]
  40cf3c:	mul	x2, x3, x2
  40cf40:	sub	x0, x0, x2
  40cf44:	cmp	x0, #0x0
  40cf48:	cset	w0, ne  // ne = any
  40cf4c:	and	w0, w0, #0xff
  40cf50:	and	x0, x0, #0xff
  40cf54:	add	x0, x1, x0
  40cf58:	str	x0, [sp, #40]
  40cf5c:	str	xzr, [sp, #88]
  40cf60:	b	40d048 <__fxstatat@plt+0xa4e8>
  40cf64:	str	xzr, [sp, #80]
  40cf68:	ldr	x0, [sp, #88]
  40cf6c:	str	x0, [sp, #72]
  40cf70:	str	xzr, [sp, #64]
  40cf74:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cf78:	add	x0, x0, #0x638
  40cf7c:	ldr	x1, [x0]
  40cf80:	ldr	x0, [sp, #72]
  40cf84:	lsl	x0, x0, #3
  40cf88:	add	x0, x1, x0
  40cf8c:	ldr	x0, [x0]
  40cf90:	str	x0, [sp, #32]
  40cf94:	ldr	x0, [sp, #32]
  40cf98:	bl	40cca0 <__fxstatat@plt+0xa140>
  40cf9c:	str	x0, [sp, #24]
  40cfa0:	ldr	x0, [sp, #48]
  40cfa4:	ldr	x1, [x0, #16]
  40cfa8:	ldr	x0, [sp, #80]
  40cfac:	add	x2, x0, #0x1
  40cfb0:	str	x2, [sp, #80]
  40cfb4:	lsl	x0, x0, #3
  40cfb8:	add	x0, x1, x0
  40cfbc:	ldr	x0, [x0]
  40cfc0:	str	x0, [sp, #16]
  40cfc4:	ldr	x1, [sp, #64]
  40cfc8:	ldr	x0, [sp, #32]
  40cfcc:	bl	40c294 <__fxstatat@plt+0x9734>
  40cfd0:	ldr	x1, [sp, #72]
  40cfd4:	ldr	x0, [sp, #40]
  40cfd8:	add	x0, x1, x0
  40cfdc:	str	x0, [sp, #72]
  40cfe0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40cfe4:	add	x0, x0, #0x628
  40cfe8:	ldr	x0, [x0]
  40cfec:	ldr	x1, [sp, #72]
  40cff0:	cmp	x1, x0
  40cff4:	b.cs	40d030 <__fxstatat@plt+0xa4d0>  // b.hs, b.nlast
  40cff8:	ldr	x1, [sp, #64]
  40cffc:	ldr	x0, [sp, #24]
  40d000:	add	x2, x1, x0
  40d004:	ldr	x1, [sp, #64]
  40d008:	ldr	x0, [sp, #16]
  40d00c:	add	x0, x1, x0
  40d010:	mov	x1, x0
  40d014:	mov	x0, x2
  40d018:	bl	40d330 <__fxstatat@plt+0xa7d0>
  40d01c:	ldr	x1, [sp, #64]
  40d020:	ldr	x0, [sp, #16]
  40d024:	add	x0, x1, x0
  40d028:	str	x0, [sp, #64]
  40d02c:	b	40cf74 <__fxstatat@plt+0xa414>
  40d030:	nop
  40d034:	mov	w0, #0xa                   	// #10
  40d038:	bl	402770 <putchar_unlocked@plt>
  40d03c:	ldr	x0, [sp, #88]
  40d040:	add	x0, x0, #0x1
  40d044:	str	x0, [sp, #88]
  40d048:	ldr	x1, [sp, #88]
  40d04c:	ldr	x0, [sp, #40]
  40d050:	cmp	x1, x0
  40d054:	b.cc	40cf64 <__fxstatat@plt+0xa404>  // b.lo, b.ul, b.last
  40d058:	nop
  40d05c:	nop
  40d060:	ldp	x29, x30, [sp], #96
  40d064:	ret
  40d068:	stp	x29, x30, [sp, #-80]!
  40d06c:	mov	x29, sp
  40d070:	str	xzr, [sp, #64]
  40d074:	mov	w0, #0x0                   	// #0
  40d078:	bl	40d7d8 <__fxstatat@plt+0xac78>
  40d07c:	str	x0, [sp, #40]
  40d080:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d084:	add	x0, x0, #0x7c8
  40d088:	ldr	x2, [x0]
  40d08c:	ldr	x1, [sp, #40]
  40d090:	mov	x0, x1
  40d094:	lsl	x0, x0, #1
  40d098:	add	x0, x0, x1
  40d09c:	lsl	x0, x0, #3
  40d0a0:	sub	x0, x0, #0x18
  40d0a4:	add	x0, x2, x0
  40d0a8:	str	x0, [sp, #32]
  40d0ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d0b0:	add	x0, x0, #0x638
  40d0b4:	ldr	x0, [x0]
  40d0b8:	ldr	x0, [x0]
  40d0bc:	str	x0, [sp, #24]
  40d0c0:	ldr	x0, [sp, #24]
  40d0c4:	bl	40cca0 <__fxstatat@plt+0xa140>
  40d0c8:	str	x0, [sp, #56]
  40d0cc:	ldr	x0, [sp, #32]
  40d0d0:	ldr	x0, [x0, #16]
  40d0d4:	ldr	x0, [x0]
  40d0d8:	str	x0, [sp, #48]
  40d0dc:	mov	x1, #0x0                   	// #0
  40d0e0:	ldr	x0, [sp, #24]
  40d0e4:	bl	40c294 <__fxstatat@plt+0x9734>
  40d0e8:	mov	x0, #0x1                   	// #1
  40d0ec:	str	x0, [sp, #72]
  40d0f0:	b	40d1c0 <__fxstatat@plt+0xa660>
  40d0f4:	ldr	x0, [sp, #72]
  40d0f8:	ldr	x1, [sp, #40]
  40d0fc:	udiv	x2, x0, x1
  40d100:	ldr	x1, [sp, #40]
  40d104:	mul	x1, x2, x1
  40d108:	sub	x0, x0, x1
  40d10c:	str	x0, [sp, #16]
  40d110:	ldr	x0, [sp, #16]
  40d114:	cmp	x0, #0x0
  40d118:	b.ne	40d12c <__fxstatat@plt+0xa5cc>  // b.any
  40d11c:	mov	w0, #0xa                   	// #10
  40d120:	bl	402770 <putchar_unlocked@plt>
  40d124:	str	xzr, [sp, #64]
  40d128:	b	40d160 <__fxstatat@plt+0xa600>
  40d12c:	ldr	x1, [sp, #64]
  40d130:	ldr	x0, [sp, #56]
  40d134:	add	x2, x1, x0
  40d138:	ldr	x1, [sp, #64]
  40d13c:	ldr	x0, [sp, #48]
  40d140:	add	x0, x1, x0
  40d144:	mov	x1, x0
  40d148:	mov	x0, x2
  40d14c:	bl	40d330 <__fxstatat@plt+0xa7d0>
  40d150:	ldr	x1, [sp, #64]
  40d154:	ldr	x0, [sp, #48]
  40d158:	add	x0, x1, x0
  40d15c:	str	x0, [sp, #64]
  40d160:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d164:	add	x0, x0, #0x638
  40d168:	ldr	x1, [x0]
  40d16c:	ldr	x0, [sp, #72]
  40d170:	lsl	x0, x0, #3
  40d174:	add	x0, x1, x0
  40d178:	ldr	x0, [x0]
  40d17c:	str	x0, [sp, #24]
  40d180:	ldr	x1, [sp, #64]
  40d184:	ldr	x0, [sp, #24]
  40d188:	bl	40c294 <__fxstatat@plt+0x9734>
  40d18c:	ldr	x0, [sp, #24]
  40d190:	bl	40cca0 <__fxstatat@plt+0xa140>
  40d194:	str	x0, [sp, #56]
  40d198:	ldr	x0, [sp, #32]
  40d19c:	ldr	x1, [x0, #16]
  40d1a0:	ldr	x0, [sp, #16]
  40d1a4:	lsl	x0, x0, #3
  40d1a8:	add	x0, x1, x0
  40d1ac:	ldr	x0, [x0]
  40d1b0:	str	x0, [sp, #48]
  40d1b4:	ldr	x0, [sp, #72]
  40d1b8:	add	x0, x0, #0x1
  40d1bc:	str	x0, [sp, #72]
  40d1c0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d1c4:	add	x0, x0, #0x628
  40d1c8:	ldr	x0, [x0]
  40d1cc:	ldr	x1, [sp, #72]
  40d1d0:	cmp	x1, x0
  40d1d4:	b.cc	40d0f4 <__fxstatat@plt+0xa594>  // b.lo, b.ul, b.last
  40d1d8:	mov	w0, #0xa                   	// #10
  40d1dc:	bl	402770 <putchar_unlocked@plt>
  40d1e0:	nop
  40d1e4:	ldp	x29, x30, [sp], #80
  40d1e8:	ret
  40d1ec:	stp	x29, x30, [sp, #-80]!
  40d1f0:	mov	x29, sp
  40d1f4:	strb	w0, [sp, #31]
  40d1f8:	str	xzr, [sp, #64]
  40d1fc:	str	xzr, [sp, #72]
  40d200:	b	40d304 <__fxstatat@plt+0xa7a4>
  40d204:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d208:	add	x0, x0, #0x638
  40d20c:	ldr	x1, [x0]
  40d210:	ldr	x0, [sp, #72]
  40d214:	lsl	x0, x0, #3
  40d218:	add	x0, x1, x0
  40d21c:	ldr	x0, [x0]
  40d220:	str	x0, [sp, #48]
  40d224:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d228:	add	x0, x0, #0x720
  40d22c:	ldr	x0, [x0]
  40d230:	cmp	x0, #0x0
  40d234:	b.eq	40d244 <__fxstatat@plt+0xa6e4>  // b.none
  40d238:	ldr	x0, [sp, #48]
  40d23c:	bl	40cca0 <__fxstatat@plt+0xa140>
  40d240:	b	40d248 <__fxstatat@plt+0xa6e8>
  40d244:	mov	x0, #0x0                   	// #0
  40d248:	str	x0, [sp, #40]
  40d24c:	ldr	x0, [sp, #72]
  40d250:	cmp	x0, #0x0
  40d254:	b.eq	40d2dc <__fxstatat@plt+0xa77c>  // b.none
  40d258:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d25c:	add	x0, x0, #0x720
  40d260:	ldr	x0, [x0]
  40d264:	cmp	x0, #0x0
  40d268:	b.eq	40d2a8 <__fxstatat@plt+0xa748>  // b.none
  40d26c:	ldr	x1, [sp, #64]
  40d270:	ldr	x0, [sp, #40]
  40d274:	add	x0, x1, x0
  40d278:	add	x1, x0, #0x2
  40d27c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d280:	add	x0, x0, #0x720
  40d284:	ldr	x0, [x0]
  40d288:	cmp	x1, x0
  40d28c:	b.cs	40d2c0 <__fxstatat@plt+0xa760>  // b.hs, b.nlast
  40d290:	mov	x1, #0xfffffffffffffffd    	// #-3
  40d294:	ldr	x0, [sp, #40]
  40d298:	sub	x0, x1, x0
  40d29c:	ldr	x1, [sp, #64]
  40d2a0:	cmp	x1, x0
  40d2a4:	b.hi	40d2c0 <__fxstatat@plt+0xa760>  // b.pmore
  40d2a8:	ldr	x0, [sp, #64]
  40d2ac:	add	x0, x0, #0x2
  40d2b0:	str	x0, [sp, #64]
  40d2b4:	mov	w0, #0x20                  	// #32
  40d2b8:	strb	w0, [sp, #63]
  40d2bc:	b	40d2cc <__fxstatat@plt+0xa76c>
  40d2c0:	str	xzr, [sp, #64]
  40d2c4:	mov	w0, #0xa                   	// #10
  40d2c8:	strb	w0, [sp, #63]
  40d2cc:	ldrb	w0, [sp, #31]
  40d2d0:	bl	402770 <putchar_unlocked@plt>
  40d2d4:	ldrb	w0, [sp, #63]
  40d2d8:	bl	402770 <putchar_unlocked@plt>
  40d2dc:	ldr	x1, [sp, #64]
  40d2e0:	ldr	x0, [sp, #48]
  40d2e4:	bl	40c294 <__fxstatat@plt+0x9734>
  40d2e8:	ldr	x1, [sp, #64]
  40d2ec:	ldr	x0, [sp, #40]
  40d2f0:	add	x0, x1, x0
  40d2f4:	str	x0, [sp, #64]
  40d2f8:	ldr	x0, [sp, #72]
  40d2fc:	add	x0, x0, #0x1
  40d300:	str	x0, [sp, #72]
  40d304:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d308:	add	x0, x0, #0x628
  40d30c:	ldr	x0, [x0]
  40d310:	ldr	x1, [sp, #72]
  40d314:	cmp	x1, x0
  40d318:	b.cc	40d204 <__fxstatat@plt+0xa6a4>  // b.lo, b.ul, b.last
  40d31c:	mov	w0, #0xa                   	// #10
  40d320:	bl	402770 <putchar_unlocked@plt>
  40d324:	nop
  40d328:	ldp	x29, x30, [sp], #80
  40d32c:	ret
  40d330:	stp	x29, x30, [sp, #-32]!
  40d334:	mov	x29, sp
  40d338:	str	x0, [sp, #24]
  40d33c:	str	x1, [sp, #16]
  40d340:	b	40d3e4 <__fxstatat@plt+0xa884>
  40d344:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d348:	add	x0, x0, #0x710
  40d34c:	ldr	x0, [x0]
  40d350:	cmp	x0, #0x0
  40d354:	b.eq	40d3d0 <__fxstatat@plt+0xa870>  // b.none
  40d358:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d35c:	add	x0, x0, #0x710
  40d360:	ldr	x0, [x0]
  40d364:	ldr	x1, [sp, #16]
  40d368:	udiv	x1, x1, x0
  40d36c:	ldr	x0, [sp, #24]
  40d370:	add	x2, x0, #0x1
  40d374:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d378:	add	x0, x0, #0x710
  40d37c:	ldr	x0, [x0]
  40d380:	udiv	x0, x2, x0
  40d384:	cmp	x1, x0
  40d388:	b.ls	40d3d0 <__fxstatat@plt+0xa870>  // b.plast
  40d38c:	mov	w0, #0x9                   	// #9
  40d390:	bl	402770 <putchar_unlocked@plt>
  40d394:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d398:	add	x0, x0, #0x710
  40d39c:	ldr	x2, [x0]
  40d3a0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d3a4:	add	x0, x0, #0x710
  40d3a8:	ldr	x1, [x0]
  40d3ac:	ldr	x0, [sp, #24]
  40d3b0:	udiv	x3, x0, x1
  40d3b4:	mul	x1, x3, x1
  40d3b8:	sub	x0, x0, x1
  40d3bc:	sub	x0, x2, x0
  40d3c0:	ldr	x1, [sp, #24]
  40d3c4:	add	x0, x1, x0
  40d3c8:	str	x0, [sp, #24]
  40d3cc:	b	40d3e4 <__fxstatat@plt+0xa884>
  40d3d0:	mov	w0, #0x20                  	// #32
  40d3d4:	bl	402770 <putchar_unlocked@plt>
  40d3d8:	ldr	x0, [sp, #24]
  40d3dc:	add	x0, x0, #0x1
  40d3e0:	str	x0, [sp, #24]
  40d3e4:	ldr	x1, [sp, #24]
  40d3e8:	ldr	x0, [sp, #16]
  40d3ec:	cmp	x1, x0
  40d3f0:	b.cc	40d344 <__fxstatat@plt+0xa7e4>  // b.lo, b.ul, b.last
  40d3f4:	nop
  40d3f8:	nop
  40d3fc:	ldp	x29, x30, [sp], #32
  40d400:	ret
  40d404:	sub	sp, sp, #0x30
  40d408:	str	x0, [sp, #24]
  40d40c:	str	x1, [sp, #16]
  40d410:	str	x2, [sp, #8]
  40d414:	ldr	x0, [sp, #16]
  40d418:	str	x0, [sp, #40]
  40d41c:	ldr	x0, [sp, #16]
  40d420:	ldrb	w0, [x0]
  40d424:	cmp	w0, #0x2e
  40d428:	b.ne	40d464 <__fxstatat@plt+0xa904>  // b.any
  40d42c:	ldr	x0, [sp, #16]
  40d430:	add	x0, x0, #0x1
  40d434:	ldrb	w0, [x0]
  40d438:	cmp	w0, #0x0
  40d43c:	b.eq	40d4d0 <__fxstatat@plt+0xa970>  // b.none
  40d440:	b	40d464 <__fxstatat@plt+0xa904>
  40d444:	ldr	x1, [sp, #40]
  40d448:	add	x0, x1, #0x1
  40d44c:	str	x0, [sp, #40]
  40d450:	ldr	x0, [sp, #24]
  40d454:	add	x2, x0, #0x1
  40d458:	str	x2, [sp, #24]
  40d45c:	ldrb	w1, [x1]
  40d460:	strb	w1, [x0]
  40d464:	ldr	x0, [sp, #40]
  40d468:	ldrb	w0, [x0]
  40d46c:	cmp	w0, #0x0
  40d470:	b.ne	40d444 <__fxstatat@plt+0xa8e4>  // b.any
  40d474:	ldr	x1, [sp, #40]
  40d478:	ldr	x0, [sp, #16]
  40d47c:	cmp	x1, x0
  40d480:	b.ls	40d4d0 <__fxstatat@plt+0xa970>  // b.plast
  40d484:	ldr	x0, [sp, #40]
  40d488:	sub	x0, x0, #0x1
  40d48c:	ldrb	w0, [x0]
  40d490:	cmp	w0, #0x2f
  40d494:	b.eq	40d4d0 <__fxstatat@plt+0xa970>  // b.none
  40d498:	ldr	x0, [sp, #24]
  40d49c:	add	x1, x0, #0x1
  40d4a0:	str	x1, [sp, #24]
  40d4a4:	mov	w1, #0x2f                  	// #47
  40d4a8:	strb	w1, [x0]
  40d4ac:	b	40d4d0 <__fxstatat@plt+0xa970>
  40d4b0:	ldr	x1, [sp, #8]
  40d4b4:	add	x0, x1, #0x1
  40d4b8:	str	x0, [sp, #8]
  40d4bc:	ldr	x0, [sp, #24]
  40d4c0:	add	x2, x0, #0x1
  40d4c4:	str	x2, [sp, #24]
  40d4c8:	ldrb	w1, [x1]
  40d4cc:	strb	w1, [x0]
  40d4d0:	ldr	x0, [sp, #8]
  40d4d4:	ldrb	w0, [x0]
  40d4d8:	cmp	w0, #0x0
  40d4dc:	b.ne	40d4b0 <__fxstatat@plt+0xa950>  // b.any
  40d4e0:	ldr	x0, [sp, #24]
  40d4e4:	strb	wzr, [x0]
  40d4e8:	nop
  40d4ec:	add	sp, sp, #0x30
  40d4f0:	ret
  40d4f4:	stp	x29, x30, [sp, #-80]!
  40d4f8:	mov	x29, sp
  40d4fc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d500:	add	x0, x0, #0x628
  40d504:	ldr	x1, [x0]
  40d508:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d50c:	add	x0, x0, #0x7d0
  40d510:	ldr	x0, [x0]
  40d514:	cmp	x1, x0
  40d518:	csel	x0, x1, x0, ls  // ls = plast
  40d51c:	str	x0, [sp, #40]
  40d520:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40d524:	add	x0, x0, #0x740
  40d528:	ldr	x0, [x0]
  40d52c:	ldr	x1, [sp, #40]
  40d530:	cmp	x1, x0
  40d534:	b.ls	40d6dc <__fxstatat@plt+0xab7c>  // b.plast
  40d538:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d53c:	add	x0, x0, #0x7d0
  40d540:	ldr	x0, [x0]
  40d544:	lsr	x0, x0, #1
  40d548:	ldr	x1, [sp, #40]
  40d54c:	cmp	x1, x0
  40d550:	b.cs	40d58c <__fxstatat@plt+0xaa2c>  // b.hs, b.nlast
  40d554:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d558:	add	x0, x0, #0x7c8
  40d55c:	ldr	x0, [x0]
  40d560:	mov	x2, #0x30                  	// #48
  40d564:	ldr	x1, [sp, #40]
  40d568:	bl	419ec4 <__fxstatat@plt+0x17364>
  40d56c:	mov	x1, x0
  40d570:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d574:	add	x0, x0, #0x7c8
  40d578:	str	x1, [x0]
  40d57c:	ldr	x0, [sp, #40]
  40d580:	lsl	x0, x0, #1
  40d584:	str	x0, [sp, #64]
  40d588:	b	40d5d4 <__fxstatat@plt+0xaa74>
  40d58c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d590:	add	x0, x0, #0x7c8
  40d594:	ldr	x3, [x0]
  40d598:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d59c:	add	x0, x0, #0x7d0
  40d5a0:	ldr	x0, [x0]
  40d5a4:	mov	x2, #0x18                  	// #24
  40d5a8:	mov	x1, x0
  40d5ac:	mov	x0, x3
  40d5b0:	bl	419ec4 <__fxstatat@plt+0x17364>
  40d5b4:	mov	x1, x0
  40d5b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d5bc:	add	x0, x0, #0x7c8
  40d5c0:	str	x1, [x0]
  40d5c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d5c8:	add	x0, x0, #0x7d0
  40d5cc:	ldr	x0, [x0]
  40d5d0:	str	x0, [sp, #64]
  40d5d4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40d5d8:	add	x0, x0, #0x740
  40d5dc:	ldr	x0, [x0]
  40d5e0:	ldr	x1, [sp, #64]
  40d5e4:	sub	x0, x1, x0
  40d5e8:	str	x0, [sp, #32]
  40d5ec:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40d5f0:	add	x0, x0, #0x740
  40d5f4:	ldr	x1, [x0]
  40d5f8:	ldr	x0, [sp, #64]
  40d5fc:	add	x0, x1, x0
  40d600:	add	x0, x0, #0x1
  40d604:	str	x0, [sp, #24]
  40d608:	ldr	x1, [sp, #24]
  40d60c:	ldr	x0, [sp, #32]
  40d610:	mul	x0, x1, x0
  40d614:	str	x0, [sp, #16]
  40d618:	ldr	x1, [sp, #24]
  40d61c:	ldr	x0, [sp, #64]
  40d620:	cmp	x1, x0
  40d624:	b.cc	40d640 <__fxstatat@plt+0xaae0>  // b.lo, b.ul, b.last
  40d628:	ldr	x1, [sp, #16]
  40d62c:	ldr	x0, [sp, #32]
  40d630:	udiv	x0, x1, x0
  40d634:	ldr	x1, [sp, #24]
  40d638:	cmp	x1, x0
  40d63c:	b.eq	40d644 <__fxstatat@plt+0xaae4>  // b.none
  40d640:	bl	41a260 <__fxstatat@plt+0x17700>
  40d644:	ldr	x0, [sp, #16]
  40d648:	lsr	x0, x0, #1
  40d64c:	mov	x1, #0x8                   	// #8
  40d650:	bl	419e4c <__fxstatat@plt+0x172ec>
  40d654:	str	x0, [sp, #56]
  40d658:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40d65c:	add	x0, x0, #0x740
  40d660:	ldr	x0, [x0]
  40d664:	str	x0, [sp, #72]
  40d668:	b	40d6bc <__fxstatat@plt+0xab5c>
  40d66c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d670:	add	x0, x0, #0x7c8
  40d674:	ldr	x2, [x0]
  40d678:	ldr	x1, [sp, #72]
  40d67c:	mov	x0, x1
  40d680:	lsl	x0, x0, #1
  40d684:	add	x0, x0, x1
  40d688:	lsl	x0, x0, #3
  40d68c:	add	x0, x2, x0
  40d690:	ldr	x1, [sp, #56]
  40d694:	str	x1, [x0, #16]
  40d698:	ldr	x0, [sp, #72]
  40d69c:	add	x0, x0, #0x1
  40d6a0:	lsl	x0, x0, #3
  40d6a4:	ldr	x1, [sp, #56]
  40d6a8:	add	x0, x1, x0
  40d6ac:	str	x0, [sp, #56]
  40d6b0:	ldr	x0, [sp, #72]
  40d6b4:	add	x0, x0, #0x1
  40d6b8:	str	x0, [sp, #72]
  40d6bc:	ldr	x1, [sp, #72]
  40d6c0:	ldr	x0, [sp, #64]
  40d6c4:	cmp	x1, x0
  40d6c8:	b.cc	40d66c <__fxstatat@plt+0xab0c>  // b.lo, b.ul, b.last
  40d6cc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40d6d0:	add	x0, x0, #0x740
  40d6d4:	ldr	x1, [sp, #64]
  40d6d8:	str	x1, [x0]
  40d6dc:	str	xzr, [sp, #72]
  40d6e0:	b	40d7b8 <__fxstatat@plt+0xac58>
  40d6e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d6e8:	add	x0, x0, #0x7c8
  40d6ec:	ldr	x2, [x0]
  40d6f0:	ldr	x1, [sp, #72]
  40d6f4:	mov	x0, x1
  40d6f8:	lsl	x0, x0, #1
  40d6fc:	add	x0, x0, x1
  40d700:	lsl	x0, x0, #3
  40d704:	add	x0, x2, x0
  40d708:	mov	w1, #0x1                   	// #1
  40d70c:	strb	w1, [x0]
  40d710:	ldr	x0, [sp, #72]
  40d714:	add	x1, x0, #0x1
  40d718:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d71c:	add	x0, x0, #0x7c8
  40d720:	ldr	x3, [x0]
  40d724:	ldr	x2, [sp, #72]
  40d728:	mov	x0, x2
  40d72c:	lsl	x0, x0, #1
  40d730:	add	x0, x0, x2
  40d734:	lsl	x0, x0, #3
  40d738:	add	x2, x3, x0
  40d73c:	mov	x0, x1
  40d740:	lsl	x0, x0, #1
  40d744:	add	x0, x0, x1
  40d748:	str	x0, [x2, #8]
  40d74c:	str	xzr, [sp, #48]
  40d750:	b	40d79c <__fxstatat@plt+0xac3c>
  40d754:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d758:	add	x0, x0, #0x7c8
  40d75c:	ldr	x2, [x0]
  40d760:	ldr	x1, [sp, #72]
  40d764:	mov	x0, x1
  40d768:	lsl	x0, x0, #1
  40d76c:	add	x0, x0, x1
  40d770:	lsl	x0, x0, #3
  40d774:	add	x0, x2, x0
  40d778:	ldr	x1, [x0, #16]
  40d77c:	ldr	x0, [sp, #48]
  40d780:	lsl	x0, x0, #3
  40d784:	add	x0, x1, x0
  40d788:	mov	x1, #0x3                   	// #3
  40d78c:	str	x1, [x0]
  40d790:	ldr	x0, [sp, #48]
  40d794:	add	x0, x0, #0x1
  40d798:	str	x0, [sp, #48]
  40d79c:	ldr	x1, [sp, #48]
  40d7a0:	ldr	x0, [sp, #72]
  40d7a4:	cmp	x1, x0
  40d7a8:	b.ls	40d754 <__fxstatat@plt+0xabf4>  // b.plast
  40d7ac:	ldr	x0, [sp, #72]
  40d7b0:	add	x0, x0, #0x1
  40d7b4:	str	x0, [sp, #72]
  40d7b8:	ldr	x1, [sp, #72]
  40d7bc:	ldr	x0, [sp, #40]
  40d7c0:	cmp	x1, x0
  40d7c4:	b.cc	40d6e4 <__fxstatat@plt+0xab84>  // b.lo, b.ul, b.last
  40d7c8:	nop
  40d7cc:	nop
  40d7d0:	ldp	x29, x30, [sp], #80
  40d7d4:	ret
  40d7d8:	stp	x29, x30, [sp, #-96]!
  40d7dc:	mov	x29, sp
  40d7e0:	strb	w0, [sp, #31]
  40d7e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d7e8:	add	x0, x0, #0x628
  40d7ec:	ldr	x1, [x0]
  40d7f0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d7f4:	add	x0, x0, #0x7d0
  40d7f8:	ldr	x0, [x0]
  40d7fc:	cmp	x1, x0
  40d800:	csel	x0, x1, x0, ls  // ls = plast
  40d804:	str	x0, [sp, #64]
  40d808:	bl	40d4f4 <__fxstatat@plt+0xa994>
  40d80c:	str	xzr, [sp, #88]
  40d810:	b	40da98 <__fxstatat@plt+0xaf38>
  40d814:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d818:	add	x0, x0, #0x638
  40d81c:	ldr	x1, [x0]
  40d820:	ldr	x0, [sp, #88]
  40d824:	lsl	x0, x0, #3
  40d828:	add	x0, x1, x0
  40d82c:	ldr	x0, [x0]
  40d830:	str	x0, [sp, #56]
  40d834:	ldr	x0, [sp, #56]
  40d838:	bl	40cca0 <__fxstatat@plt+0xa140>
  40d83c:	str	x0, [sp, #48]
  40d840:	str	xzr, [sp, #72]
  40d844:	b	40da7c <__fxstatat@plt+0xaf1c>
  40d848:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d84c:	add	x0, x0, #0x7c8
  40d850:	ldr	x2, [x0]
  40d854:	ldr	x1, [sp, #72]
  40d858:	mov	x0, x1
  40d85c:	lsl	x0, x0, #1
  40d860:	add	x0, x0, x1
  40d864:	lsl	x0, x0, #3
  40d868:	add	x0, x2, x0
  40d86c:	ldrb	w0, [x0]
  40d870:	cmp	w0, #0x0
  40d874:	b.eq	40da70 <__fxstatat@plt+0xaf10>  // b.none
  40d878:	ldrb	w0, [sp, #31]
  40d87c:	cmp	w0, #0x0
  40d880:	b.eq	40d8b0 <__fxstatat@plt+0xad50>  // b.none
  40d884:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d888:	add	x0, x0, #0x628
  40d88c:	ldr	x1, [x0]
  40d890:	ldr	x0, [sp, #72]
  40d894:	add	x1, x1, x0
  40d898:	ldr	x0, [sp, #72]
  40d89c:	add	x0, x0, #0x1
  40d8a0:	udiv	x0, x1, x0
  40d8a4:	ldr	x1, [sp, #88]
  40d8a8:	udiv	x0, x1, x0
  40d8ac:	b	40d8c8 <__fxstatat@plt+0xad68>
  40d8b0:	ldr	x0, [sp, #72]
  40d8b4:	add	x1, x0, #0x1
  40d8b8:	ldr	x0, [sp, #88]
  40d8bc:	udiv	x2, x0, x1
  40d8c0:	mul	x1, x2, x1
  40d8c4:	sub	x0, x0, x1
  40d8c8:	str	x0, [sp, #40]
  40d8cc:	ldr	x1, [sp, #40]
  40d8d0:	ldr	x0, [sp, #72]
  40d8d4:	cmp	x1, x0
  40d8d8:	b.ne	40d8e4 <__fxstatat@plt+0xad84>  // b.any
  40d8dc:	mov	x0, #0x0                   	// #0
  40d8e0:	b	40d8e8 <__fxstatat@plt+0xad88>
  40d8e4:	mov	x0, #0x2                   	// #2
  40d8e8:	ldr	x1, [sp, #48]
  40d8ec:	add	x0, x0, x1
  40d8f0:	str	x0, [sp, #32]
  40d8f4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d8f8:	add	x0, x0, #0x7c8
  40d8fc:	ldr	x2, [x0]
  40d900:	ldr	x1, [sp, #72]
  40d904:	mov	x0, x1
  40d908:	lsl	x0, x0, #1
  40d90c:	add	x0, x0, x1
  40d910:	lsl	x0, x0, #3
  40d914:	add	x0, x2, x0
  40d918:	ldr	x1, [x0, #16]
  40d91c:	ldr	x0, [sp, #40]
  40d920:	lsl	x0, x0, #3
  40d924:	add	x0, x1, x0
  40d928:	ldr	x0, [x0]
  40d92c:	ldr	x1, [sp, #32]
  40d930:	cmp	x1, x0
  40d934:	b.ls	40da70 <__fxstatat@plt+0xaf10>  // b.plast
  40d938:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d93c:	add	x0, x0, #0x7c8
  40d940:	ldr	x2, [x0]
  40d944:	ldr	x1, [sp, #72]
  40d948:	mov	x0, x1
  40d94c:	lsl	x0, x0, #1
  40d950:	add	x0, x0, x1
  40d954:	lsl	x0, x0, #3
  40d958:	add	x0, x2, x0
  40d95c:	ldr	x3, [x0, #8]
  40d960:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d964:	add	x0, x0, #0x7c8
  40d968:	ldr	x2, [x0]
  40d96c:	ldr	x1, [sp, #72]
  40d970:	mov	x0, x1
  40d974:	lsl	x0, x0, #1
  40d978:	add	x0, x0, x1
  40d97c:	lsl	x0, x0, #3
  40d980:	add	x0, x2, x0
  40d984:	ldr	x1, [x0, #16]
  40d988:	ldr	x0, [sp, #40]
  40d98c:	lsl	x0, x0, #3
  40d990:	add	x0, x1, x0
  40d994:	ldr	x0, [x0]
  40d998:	ldr	x1, [sp, #32]
  40d99c:	sub	x2, x1, x0
  40d9a0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d9a4:	add	x0, x0, #0x7c8
  40d9a8:	ldr	x4, [x0]
  40d9ac:	ldr	x1, [sp, #72]
  40d9b0:	mov	x0, x1
  40d9b4:	lsl	x0, x0, #1
  40d9b8:	add	x0, x0, x1
  40d9bc:	lsl	x0, x0, #3
  40d9c0:	add	x0, x4, x0
  40d9c4:	add	x1, x3, x2
  40d9c8:	str	x1, [x0, #8]
  40d9cc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40d9d0:	add	x0, x0, #0x7c8
  40d9d4:	ldr	x2, [x0]
  40d9d8:	ldr	x1, [sp, #72]
  40d9dc:	mov	x0, x1
  40d9e0:	lsl	x0, x0, #1
  40d9e4:	add	x0, x0, x1
  40d9e8:	lsl	x0, x0, #3
  40d9ec:	add	x0, x2, x0
  40d9f0:	ldr	x1, [x0, #16]
  40d9f4:	ldr	x0, [sp, #40]
  40d9f8:	lsl	x0, x0, #3
  40d9fc:	add	x0, x1, x0
  40da00:	ldr	x1, [sp, #32]
  40da04:	str	x1, [x0]
  40da08:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40da0c:	add	x0, x0, #0x7c8
  40da10:	ldr	x2, [x0]
  40da14:	ldr	x1, [sp, #72]
  40da18:	mov	x0, x1
  40da1c:	lsl	x0, x0, #1
  40da20:	add	x0, x0, x1
  40da24:	lsl	x0, x0, #3
  40da28:	add	x0, x2, x0
  40da2c:	ldr	x3, [x0, #8]
  40da30:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40da34:	add	x0, x0, #0x720
  40da38:	ldr	x2, [x0]
  40da3c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40da40:	add	x0, x0, #0x7c8
  40da44:	ldr	x4, [x0]
  40da48:	ldr	x1, [sp, #72]
  40da4c:	mov	x0, x1
  40da50:	lsl	x0, x0, #1
  40da54:	add	x0, x0, x1
  40da58:	lsl	x0, x0, #3
  40da5c:	add	x0, x4, x0
  40da60:	cmp	x3, x2
  40da64:	cset	w1, cc  // cc = lo, ul, last
  40da68:	and	w1, w1, #0xff
  40da6c:	strb	w1, [x0]
  40da70:	ldr	x0, [sp, #72]
  40da74:	add	x0, x0, #0x1
  40da78:	str	x0, [sp, #72]
  40da7c:	ldr	x1, [sp, #72]
  40da80:	ldr	x0, [sp, #64]
  40da84:	cmp	x1, x0
  40da88:	b.cc	40d848 <__fxstatat@plt+0xace8>  // b.lo, b.ul, b.last
  40da8c:	ldr	x0, [sp, #88]
  40da90:	add	x0, x0, #0x1
  40da94:	str	x0, [sp, #88]
  40da98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40da9c:	add	x0, x0, #0x628
  40daa0:	ldr	x0, [x0]
  40daa4:	ldr	x1, [sp, #88]
  40daa8:	cmp	x1, x0
  40daac:	b.cc	40d814 <__fxstatat@plt+0xacb4>  // b.lo, b.ul, b.last
  40dab0:	ldr	x0, [sp, #64]
  40dab4:	str	x0, [sp, #80]
  40dab8:	b	40dafc <__fxstatat@plt+0xaf9c>
  40dabc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dac0:	add	x0, x0, #0x7c8
  40dac4:	ldr	x2, [x0]
  40dac8:	ldr	x1, [sp, #80]
  40dacc:	mov	x0, x1
  40dad0:	lsl	x0, x0, #1
  40dad4:	add	x0, x0, x1
  40dad8:	lsl	x0, x0, #3
  40dadc:	sub	x0, x0, #0x18
  40dae0:	add	x0, x2, x0
  40dae4:	ldrb	w0, [x0]
  40dae8:	cmp	w0, #0x0
  40daec:	b.ne	40db0c <__fxstatat@plt+0xafac>  // b.any
  40daf0:	ldr	x0, [sp, #80]
  40daf4:	sub	x0, x0, #0x1
  40daf8:	str	x0, [sp, #80]
  40dafc:	ldr	x0, [sp, #80]
  40db00:	cmp	x0, #0x1
  40db04:	b.hi	40dabc <__fxstatat@plt+0xaf5c>  // b.pmore
  40db08:	b	40db10 <__fxstatat@plt+0xafb0>
  40db0c:	nop
  40db10:	ldr	x0, [sp, #80]
  40db14:	ldp	x29, x30, [sp], #96
  40db18:	ret
  40db1c:	stp	x29, x30, [sp, #-48]!
  40db20:	mov	x29, sp
  40db24:	str	x19, [sp, #16]
  40db28:	str	w0, [sp, #44]
  40db2c:	ldr	w0, [sp, #44]
  40db30:	cmp	w0, #0x0
  40db34:	b.eq	40db70 <__fxstatat@plt+0xb010>  // b.none
  40db38:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40db3c:	add	x0, x0, #0x5e0
  40db40:	ldr	x19, [x0]
  40db44:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40db48:	add	x0, x0, #0x470
  40db4c:	bl	402b20 <gettext@plt>
  40db50:	mov	x1, x0
  40db54:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40db58:	add	x0, x0, #0x778
  40db5c:	ldr	x0, [x0]
  40db60:	mov	x2, x0
  40db64:	mov	x0, x19
  40db68:	bl	402b30 <fprintf@plt>
  40db6c:	b	40e04c <__fxstatat@plt+0xb4ec>
  40db70:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40db74:	add	x0, x0, #0x498
  40db78:	bl	402b20 <gettext@plt>
  40db7c:	mov	x2, x0
  40db80:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40db84:	add	x0, x0, #0x778
  40db88:	ldr	x0, [x0]
  40db8c:	mov	x1, x0
  40db90:	mov	x0, x2
  40db94:	bl	402aa0 <printf@plt>
  40db98:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40db9c:	add	x0, x0, #0x4c0
  40dba0:	bl	402b20 <gettext@plt>
  40dba4:	mov	x2, x0
  40dba8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dbac:	add	x0, x0, #0x5f8
  40dbb0:	ldr	x0, [x0]
  40dbb4:	mov	x1, x0
  40dbb8:	mov	x0, x2
  40dbbc:	bl	402a40 <fputs_unlocked@plt>
  40dbc0:	bl	402e00 <__fxstatat@plt+0x2a0>
  40dbc4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dbc8:	add	x0, x0, #0x550
  40dbcc:	bl	402b20 <gettext@plt>
  40dbd0:	mov	x2, x0
  40dbd4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dbd8:	add	x0, x0, #0x5f8
  40dbdc:	ldr	x0, [x0]
  40dbe0:	mov	x1, x0
  40dbe4:	mov	x0, x2
  40dbe8:	bl	402a40 <fputs_unlocked@plt>
  40dbec:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dbf0:	add	x0, x0, #0x660
  40dbf4:	bl	402b20 <gettext@plt>
  40dbf8:	mov	x2, x0
  40dbfc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dc00:	add	x0, x0, #0x5f8
  40dc04:	ldr	x0, [x0]
  40dc08:	mov	x1, x0
  40dc0c:	mov	x0, x2
  40dc10:	bl	402a40 <fputs_unlocked@plt>
  40dc14:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dc18:	add	x0, x0, #0x700
  40dc1c:	bl	402b20 <gettext@plt>
  40dc20:	mov	x2, x0
  40dc24:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dc28:	add	x0, x0, #0x5f8
  40dc2c:	ldr	x0, [x0]
  40dc30:	mov	x1, x0
  40dc34:	mov	x0, x2
  40dc38:	bl	402a40 <fputs_unlocked@plt>
  40dc3c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dc40:	add	x0, x0, #0x870
  40dc44:	bl	402b20 <gettext@plt>
  40dc48:	mov	x2, x0
  40dc4c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dc50:	add	x0, x0, #0x5f8
  40dc54:	ldr	x0, [x0]
  40dc58:	mov	x1, x0
  40dc5c:	mov	x0, x2
  40dc60:	bl	402a40 <fputs_unlocked@plt>
  40dc64:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dc68:	add	x0, x0, #0x9e0
  40dc6c:	bl	402b20 <gettext@plt>
  40dc70:	mov	x2, x0
  40dc74:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dc78:	add	x0, x0, #0x5f8
  40dc7c:	ldr	x0, [x0]
  40dc80:	mov	x1, x0
  40dc84:	mov	x0, x2
  40dc88:	bl	402a40 <fputs_unlocked@plt>
  40dc8c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dc90:	add	x0, x0, #0xb88
  40dc94:	bl	402b20 <gettext@plt>
  40dc98:	mov	x2, x0
  40dc9c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dca0:	add	x0, x0, #0x5f8
  40dca4:	ldr	x0, [x0]
  40dca8:	mov	x1, x0
  40dcac:	mov	x0, x2
  40dcb0:	bl	402a40 <fputs_unlocked@plt>
  40dcb4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dcb8:	add	x0, x0, #0xbc8
  40dcbc:	bl	402b20 <gettext@plt>
  40dcc0:	mov	x2, x0
  40dcc4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dcc8:	add	x0, x0, #0x5f8
  40dccc:	ldr	x0, [x0]
  40dcd0:	mov	x1, x0
  40dcd4:	mov	x0, x2
  40dcd8:	bl	402a40 <fputs_unlocked@plt>
  40dcdc:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dce0:	add	x0, x0, #0xcc0
  40dce4:	bl	402b20 <gettext@plt>
  40dce8:	mov	x2, x0
  40dcec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dcf0:	add	x0, x0, #0x5f8
  40dcf4:	ldr	x0, [x0]
  40dcf8:	mov	x1, x0
  40dcfc:	mov	x0, x2
  40dd00:	bl	402a40 <fputs_unlocked@plt>
  40dd04:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dd08:	add	x0, x0, #0xd10
  40dd0c:	bl	402b20 <gettext@plt>
  40dd10:	mov	x2, x0
  40dd14:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dd18:	add	x0, x0, #0x5f8
  40dd1c:	ldr	x0, [x0]
  40dd20:	mov	x1, x0
  40dd24:	mov	x0, x2
  40dd28:	bl	402a40 <fputs_unlocked@plt>
  40dd2c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dd30:	add	x0, x0, #0xda8
  40dd34:	bl	402b20 <gettext@plt>
  40dd38:	mov	x2, x0
  40dd3c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dd40:	add	x0, x0, #0x5f8
  40dd44:	ldr	x0, [x0]
  40dd48:	mov	x1, x0
  40dd4c:	mov	x0, x2
  40dd50:	bl	402a40 <fputs_unlocked@plt>
  40dd54:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dd58:	add	x0, x0, #0xf50
  40dd5c:	bl	402b20 <gettext@plt>
  40dd60:	mov	x2, x0
  40dd64:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dd68:	add	x0, x0, #0x5f8
  40dd6c:	ldr	x0, [x0]
  40dd70:	mov	x1, x0
  40dd74:	mov	x0, x2
  40dd78:	bl	402a40 <fputs_unlocked@plt>
  40dd7c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0x75b0>
  40dd80:	add	x0, x0, #0xfe8
  40dd84:	bl	402b20 <gettext@plt>
  40dd88:	mov	x2, x0
  40dd8c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dd90:	add	x0, x0, #0x5f8
  40dd94:	ldr	x0, [x0]
  40dd98:	mov	x1, x0
  40dd9c:	mov	x0, x2
  40dda0:	bl	402a40 <fputs_unlocked@plt>
  40dda4:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40dda8:	add	x0, x0, #0x150
  40ddac:	bl	402b20 <gettext@plt>
  40ddb0:	mov	x2, x0
  40ddb4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ddb8:	add	x0, x0, #0x5f8
  40ddbc:	ldr	x0, [x0]
  40ddc0:	mov	x1, x0
  40ddc4:	mov	x0, x2
  40ddc8:	bl	402a40 <fputs_unlocked@plt>
  40ddcc:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40ddd0:	add	x0, x0, #0x1e8
  40ddd4:	bl	402b20 <gettext@plt>
  40ddd8:	mov	x2, x0
  40dddc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dde0:	add	x0, x0, #0x5f8
  40dde4:	ldr	x0, [x0]
  40dde8:	mov	x1, x0
  40ddec:	mov	x0, x2
  40ddf0:	bl	402a40 <fputs_unlocked@plt>
  40ddf4:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40ddf8:	add	x0, x0, #0x350
  40ddfc:	bl	402b20 <gettext@plt>
  40de00:	mov	x2, x0
  40de04:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40de08:	add	x0, x0, #0x5f8
  40de0c:	ldr	x0, [x0]
  40de10:	mov	x1, x0
  40de14:	mov	x0, x2
  40de18:	bl	402a40 <fputs_unlocked@plt>
  40de1c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40de20:	add	x0, x0, #0x480
  40de24:	bl	402b20 <gettext@plt>
  40de28:	mov	x2, x0
  40de2c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40de30:	add	x0, x0, #0x5f8
  40de34:	ldr	x0, [x0]
  40de38:	mov	x1, x0
  40de3c:	mov	x0, x2
  40de40:	bl	402a40 <fputs_unlocked@plt>
  40de44:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40de48:	add	x0, x0, #0x6d0
  40de4c:	bl	402b20 <gettext@plt>
  40de50:	mov	x2, x0
  40de54:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40de58:	add	x0, x0, #0x5f8
  40de5c:	ldr	x0, [x0]
  40de60:	mov	x1, x0
  40de64:	mov	x0, x2
  40de68:	bl	402a40 <fputs_unlocked@plt>
  40de6c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40de70:	add	x0, x0, #0x798
  40de74:	bl	402b20 <gettext@plt>
  40de78:	mov	x2, x0
  40de7c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40de80:	add	x0, x0, #0x5f8
  40de84:	ldr	x0, [x0]
  40de88:	mov	x1, x0
  40de8c:	mov	x0, x2
  40de90:	bl	402a40 <fputs_unlocked@plt>
  40de94:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40de98:	add	x0, x0, #0x9a0
  40de9c:	bl	402b20 <gettext@plt>
  40dea0:	mov	x2, x0
  40dea4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dea8:	add	x0, x0, #0x5f8
  40deac:	ldr	x0, [x0]
  40deb0:	mov	x1, x0
  40deb4:	mov	x0, x2
  40deb8:	bl	402a40 <fputs_unlocked@plt>
  40debc:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40dec0:	add	x0, x0, #0x9f0
  40dec4:	bl	402b20 <gettext@plt>
  40dec8:	mov	x2, x0
  40decc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40ded0:	add	x0, x0, #0x5f8
  40ded4:	ldr	x0, [x0]
  40ded8:	mov	x1, x0
  40dedc:	mov	x0, x2
  40dee0:	bl	402a40 <fputs_unlocked@plt>
  40dee4:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40dee8:	add	x0, x0, #0xa80
  40deec:	bl	402b20 <gettext@plt>
  40def0:	mov	x2, x0
  40def4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40def8:	add	x0, x0, #0x5f8
  40defc:	ldr	x0, [x0]
  40df00:	mov	x1, x0
  40df04:	mov	x0, x2
  40df08:	bl	402a40 <fputs_unlocked@plt>
  40df0c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40df10:	add	x0, x0, #0xbf8
  40df14:	bl	402b20 <gettext@plt>
  40df18:	mov	x2, x0
  40df1c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40df20:	add	x0, x0, #0x5f8
  40df24:	ldr	x0, [x0]
  40df28:	mov	x1, x0
  40df2c:	mov	x0, x2
  40df30:	bl	402a40 <fputs_unlocked@plt>
  40df34:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40df38:	add	x0, x0, #0xd68
  40df3c:	bl	402b20 <gettext@plt>
  40df40:	mov	x2, x0
  40df44:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40df48:	add	x0, x0, #0x5f8
  40df4c:	ldr	x0, [x0]
  40df50:	mov	x1, x0
  40df54:	mov	x0, x2
  40df58:	bl	402a40 <fputs_unlocked@plt>
  40df5c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40df60:	add	x0, x0, #0xd98
  40df64:	bl	402b20 <gettext@plt>
  40df68:	mov	x2, x0
  40df6c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40df70:	add	x0, x0, #0x5f8
  40df74:	ldr	x0, [x0]
  40df78:	mov	x1, x0
  40df7c:	mov	x0, x2
  40df80:	bl	402a40 <fputs_unlocked@plt>
  40df84:	bl	402e3c <__fxstatat@plt+0x2dc>
  40df88:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40df8c:	add	x0, x0, #0xdd0
  40df90:	bl	402b20 <gettext@plt>
  40df94:	mov	x2, x0
  40df98:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40df9c:	add	x0, x0, #0x5f8
  40dfa0:	ldr	x0, [x0]
  40dfa4:	mov	x1, x0
  40dfa8:	mov	x0, x2
  40dfac:	bl	402a40 <fputs_unlocked@plt>
  40dfb0:	adrp	x0, 424000 <_obstack_memory_used@@Base+0x85b0>
  40dfb4:	add	x0, x0, #0xf48
  40dfb8:	bl	402b20 <gettext@plt>
  40dfbc:	mov	x2, x0
  40dfc0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dfc4:	add	x0, x0, #0x5f8
  40dfc8:	ldr	x0, [x0]
  40dfcc:	mov	x1, x0
  40dfd0:	mov	x0, x2
  40dfd4:	bl	402a40 <fputs_unlocked@plt>
  40dfd8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40dfdc:	add	x0, x0, #0x68
  40dfe0:	bl	402b20 <gettext@plt>
  40dfe4:	mov	x2, x0
  40dfe8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40dfec:	add	x0, x0, #0x5f8
  40dff0:	ldr	x0, [x0]
  40dff4:	mov	x1, x0
  40dff8:	mov	x0, x2
  40dffc:	bl	402a40 <fputs_unlocked@plt>
  40e000:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e004:	add	x0, x0, #0x558
  40e008:	ldr	w0, [x0]
  40e00c:	cmp	w0, #0x1
  40e010:	b.eq	40e040 <__fxstatat@plt+0xb4e0>  // b.none
  40e014:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e018:	add	x0, x0, #0x558
  40e01c:	ldr	w0, [x0]
  40e020:	cmp	w0, #0x2
  40e024:	b.ne	40e034 <__fxstatat@plt+0xb4d4>  // b.any
  40e028:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40e02c:	add	x0, x0, #0x9e8
  40e030:	b	40e048 <__fxstatat@plt+0xb4e8>
  40e034:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40e038:	add	x0, x0, #0x9f0
  40e03c:	b	40e048 <__fxstatat@plt+0xb4e8>
  40e040:	adrp	x0, 422000 <_obstack_memory_used@@Base+0x65b0>
  40e044:	add	x0, x0, #0x9f8
  40e048:	bl	402e78 <__fxstatat@plt+0x318>
  40e04c:	ldr	w0, [sp, #44]
  40e050:	bl	402520 <exit@plt>
  40e054:	stp	x29, x30, [sp, #-96]!
  40e058:	mov	x29, sp
  40e05c:	str	x0, [sp, #24]
  40e060:	str	x1, [sp, #16]
  40e064:	mov	x0, #0x400                 	// #1024
  40e068:	str	x0, [sp, #80]
  40e06c:	mov	x0, #0x2000                	// #8192
  40e070:	str	x0, [sp, #72]
  40e074:	ldr	x1, [sp, #80]
  40e078:	ldr	x0, [sp, #72]
  40e07c:	cmp	x1, x0
  40e080:	b.cs	40e090 <__fxstatat@plt+0xb530>  // b.hs, b.nlast
  40e084:	ldr	x0, [sp, #80]
  40e088:	add	x0, x0, #0x1
  40e08c:	b	40e094 <__fxstatat@plt+0xb534>
  40e090:	ldr	x0, [sp, #72]
  40e094:	str	x0, [sp, #64]
  40e098:	ldr	x1, [sp, #16]
  40e09c:	ldr	x0, [sp, #64]
  40e0a0:	cmp	x1, x0
  40e0a4:	b.cs	40e0b4 <__fxstatat@plt+0xb554>  // b.hs, b.nlast
  40e0a8:	ldr	x0, [sp, #16]
  40e0ac:	add	x0, x0, #0x1
  40e0b0:	b	40e0b8 <__fxstatat@plt+0xb558>
  40e0b4:	ldr	x0, [sp, #64]
  40e0b8:	str	x0, [sp, #88]
  40e0bc:	ldr	x0, [sp, #88]
  40e0c0:	bl	4026b0 <malloc@plt>
  40e0c4:	str	x0, [sp, #56]
  40e0c8:	ldr	x0, [sp, #56]
  40e0cc:	cmp	x0, #0x0
  40e0d0:	b.ne	40e0dc <__fxstatat@plt+0xb57c>  // b.any
  40e0d4:	mov	x0, #0x0                   	// #0
  40e0d8:	b	40e1c0 <__fxstatat@plt+0xb660>
  40e0dc:	ldr	x2, [sp, #88]
  40e0e0:	ldr	x1, [sp, #56]
  40e0e4:	ldr	x0, [sp, #24]
  40e0e8:	bl	402590 <readlink@plt>
  40e0ec:	str	x0, [sp, #48]
  40e0f0:	ldr	x0, [sp, #48]
  40e0f4:	str	x0, [sp, #40]
  40e0f8:	ldr	x0, [sp, #48]
  40e0fc:	cmp	x0, #0x0
  40e100:	b.ge	40e140 <__fxstatat@plt+0xb5e0>  // b.tcont
  40e104:	bl	402ac0 <__errno_location@plt>
  40e108:	ldr	w0, [x0]
  40e10c:	cmp	w0, #0x22
  40e110:	b.eq	40e140 <__fxstatat@plt+0xb5e0>  // b.none
  40e114:	bl	402ac0 <__errno_location@plt>
  40e118:	ldr	w0, [x0]
  40e11c:	str	w0, [sp, #36]
  40e120:	ldr	x0, [sp, #56]
  40e124:	bl	4028f0 <free@plt>
  40e128:	bl	402ac0 <__errno_location@plt>
  40e12c:	mov	x1, x0
  40e130:	ldr	w0, [sp, #36]
  40e134:	str	w0, [x1]
  40e138:	mov	x0, #0x0                   	// #0
  40e13c:	b	40e1c0 <__fxstatat@plt+0xb660>
  40e140:	ldr	x1, [sp, #40]
  40e144:	ldr	x0, [sp, #88]
  40e148:	cmp	x1, x0
  40e14c:	b.cs	40e168 <__fxstatat@plt+0xb608>  // b.hs, b.nlast
  40e150:	ldr	x1, [sp, #56]
  40e154:	ldr	x0, [sp, #40]
  40e158:	add	x0, x1, x0
  40e15c:	strb	wzr, [x0]
  40e160:	ldr	x0, [sp, #56]
  40e164:	b	40e1c0 <__fxstatat@plt+0xb660>
  40e168:	ldr	x0, [sp, #56]
  40e16c:	bl	4028f0 <free@plt>
  40e170:	ldr	x1, [sp, #88]
  40e174:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  40e178:	cmp	x1, x0
  40e17c:	b.hi	40e190 <__fxstatat@plt+0xb630>  // b.pmore
  40e180:	ldr	x0, [sp, #88]
  40e184:	lsl	x0, x0, #1
  40e188:	str	x0, [sp, #88]
  40e18c:	b	40e0bc <__fxstatat@plt+0xb55c>
  40e190:	ldr	x1, [sp, #88]
  40e194:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
  40e198:	cmp	x1, x0
  40e19c:	b.hi	40e1ac <__fxstatat@plt+0xb64c>  // b.pmore
  40e1a0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  40e1a4:	str	x0, [sp, #88]
  40e1a8:	b	40e0bc <__fxstatat@plt+0xb55c>
  40e1ac:	bl	402ac0 <__errno_location@plt>
  40e1b0:	mov	x1, x0
  40e1b4:	mov	w0, #0xc                   	// #12
  40e1b8:	str	w0, [x1]
  40e1bc:	mov	x0, #0x0                   	// #0
  40e1c0:	ldp	x29, x30, [sp], #96
  40e1c4:	ret
  40e1c8:	stp	x29, x30, [sp, #-16]!
  40e1cc:	mov	x29, sp
  40e1d0:	mov	w0, #0x1                   	// #1
  40e1d4:	bl	40db1c <__fxstatat@plt+0xafbc>
  40e1d8:	nop
  40e1dc:	ldp	x29, x30, [sp], #16
  40e1e0:	ret
  40e1e4:	stp	x29, x30, [sp, #-80]!
  40e1e8:	mov	x29, sp
  40e1ec:	str	x0, [sp, #40]
  40e1f0:	str	x1, [sp, #32]
  40e1f4:	str	x2, [sp, #24]
  40e1f8:	str	x3, [sp, #16]
  40e1fc:	mov	x0, #0xffffffffffffffff    	// #-1
  40e200:	str	x0, [sp, #64]
  40e204:	strb	wzr, [sp, #63]
  40e208:	ldr	x0, [sp, #40]
  40e20c:	bl	402500 <strlen@plt>
  40e210:	str	x0, [sp, #48]
  40e214:	str	xzr, [sp, #72]
  40e218:	b	40e2ec <__fxstatat@plt+0xb78c>
  40e21c:	ldr	x0, [sp, #72]
  40e220:	lsl	x0, x0, #3
  40e224:	ldr	x1, [sp, #32]
  40e228:	add	x0, x1, x0
  40e22c:	ldr	x0, [x0]
  40e230:	ldr	x2, [sp, #48]
  40e234:	ldr	x1, [sp, #40]
  40e238:	bl	402710 <strncmp@plt>
  40e23c:	cmp	w0, #0x0
  40e240:	b.ne	40e2e0 <__fxstatat@plt+0xb780>  // b.any
  40e244:	ldr	x0, [sp, #72]
  40e248:	lsl	x0, x0, #3
  40e24c:	ldr	x1, [sp, #32]
  40e250:	add	x0, x1, x0
  40e254:	ldr	x0, [x0]
  40e258:	bl	402500 <strlen@plt>
  40e25c:	mov	x1, x0
  40e260:	ldr	x0, [sp, #48]
  40e264:	cmp	x0, x1
  40e268:	b.ne	40e274 <__fxstatat@plt+0xb714>  // b.any
  40e26c:	ldr	x0, [sp, #72]
  40e270:	b	40e320 <__fxstatat@plt+0xb7c0>
  40e274:	ldr	x0, [sp, #64]
  40e278:	cmn	x0, #0x1
  40e27c:	b.ne	40e28c <__fxstatat@plt+0xb72c>  // b.any
  40e280:	ldr	x0, [sp, #72]
  40e284:	str	x0, [sp, #64]
  40e288:	b	40e2e0 <__fxstatat@plt+0xb780>
  40e28c:	ldr	x0, [sp, #24]
  40e290:	cmp	x0, #0x0
  40e294:	b.eq	40e2d8 <__fxstatat@plt+0xb778>  // b.none
  40e298:	ldr	x1, [sp, #64]
  40e29c:	ldr	x0, [sp, #16]
  40e2a0:	mul	x0, x1, x0
  40e2a4:	ldr	x1, [sp, #24]
  40e2a8:	add	x3, x1, x0
  40e2ac:	ldr	x1, [sp, #16]
  40e2b0:	ldr	x0, [sp, #72]
  40e2b4:	mul	x0, x1, x0
  40e2b8:	ldr	x1, [sp, #24]
  40e2bc:	add	x0, x1, x0
  40e2c0:	ldr	x2, [sp, #16]
  40e2c4:	mov	x1, x0
  40e2c8:	mov	x0, x3
  40e2cc:	bl	402860 <memcmp@plt>
  40e2d0:	cmp	w0, #0x0
  40e2d4:	b.eq	40e2e0 <__fxstatat@plt+0xb780>  // b.none
  40e2d8:	mov	w0, #0x1                   	// #1
  40e2dc:	strb	w0, [sp, #63]
  40e2e0:	ldr	x0, [sp, #72]
  40e2e4:	add	x0, x0, #0x1
  40e2e8:	str	x0, [sp, #72]
  40e2ec:	ldr	x0, [sp, #72]
  40e2f0:	lsl	x0, x0, #3
  40e2f4:	ldr	x1, [sp, #32]
  40e2f8:	add	x0, x1, x0
  40e2fc:	ldr	x0, [x0]
  40e300:	cmp	x0, #0x0
  40e304:	b.ne	40e21c <__fxstatat@plt+0xb6bc>  // b.any
  40e308:	ldrb	w0, [sp, #63]
  40e30c:	cmp	w0, #0x0
  40e310:	b.eq	40e31c <__fxstatat@plt+0xb7bc>  // b.none
  40e314:	mov	x0, #0xfffffffffffffffe    	// #-2
  40e318:	b	40e320 <__fxstatat@plt+0xb7c0>
  40e31c:	ldr	x0, [sp, #64]
  40e320:	ldp	x29, x30, [sp], #80
  40e324:	ret
  40e328:	stp	x29, x30, [sp, #-80]!
  40e32c:	mov	x29, sp
  40e330:	str	x19, [sp, #16]
  40e334:	str	x0, [sp, #56]
  40e338:	str	x1, [sp, #48]
  40e33c:	str	x2, [sp, #40]
  40e340:	ldr	x0, [sp, #40]
  40e344:	cmn	x0, #0x1
  40e348:	b.ne	40e35c <__fxstatat@plt+0xb7fc>  // b.any
  40e34c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40e350:	add	x0, x0, #0x188
  40e354:	bl	402b20 <gettext@plt>
  40e358:	b	40e368 <__fxstatat@plt+0xb808>
  40e35c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40e360:	add	x0, x0, #0x1a8
  40e364:	bl	402b20 <gettext@plt>
  40e368:	str	x0, [sp, #72]
  40e36c:	ldr	x2, [sp, #48]
  40e370:	mov	w1, #0x8                   	// #8
  40e374:	mov	w0, #0x0                   	// #0
  40e378:	bl	418b5c <__fxstatat@plt+0x15ffc>
  40e37c:	mov	x19, x0
  40e380:	ldr	x1, [sp, #56]
  40e384:	mov	w0, #0x1                   	// #1
  40e388:	bl	418f10 <__fxstatat@plt+0x163b0>
  40e38c:	mov	x4, x0
  40e390:	mov	x3, x19
  40e394:	ldr	x2, [sp, #72]
  40e398:	mov	w1, #0x0                   	// #0
  40e39c:	mov	w0, #0x0                   	// #0
  40e3a0:	bl	402550 <error@plt>
  40e3a4:	nop
  40e3a8:	ldr	x19, [sp, #16]
  40e3ac:	ldp	x29, x30, [sp], #80
  40e3b0:	ret
  40e3b4:	stp	x29, x30, [sp, #-80]!
  40e3b8:	mov	x29, sp
  40e3bc:	str	x19, [sp, #16]
  40e3c0:	str	x0, [sp, #56]
  40e3c4:	str	x1, [sp, #48]
  40e3c8:	str	x2, [sp, #40]
  40e3cc:	str	xzr, [sp, #64]
  40e3d0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40e3d4:	add	x0, x0, #0x1c8
  40e3d8:	bl	402b20 <gettext@plt>
  40e3dc:	mov	x2, x0
  40e3e0:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e3e4:	add	x0, x0, #0x5e0
  40e3e8:	ldr	x0, [x0]
  40e3ec:	mov	x1, x0
  40e3f0:	mov	x0, x2
  40e3f4:	bl	402a40 <fputs_unlocked@plt>
  40e3f8:	str	xzr, [sp, #72]
  40e3fc:	b	40e4d0 <__fxstatat@plt+0xb970>
  40e400:	ldr	x0, [sp, #72]
  40e404:	cmp	x0, #0x0
  40e408:	b.eq	40e438 <__fxstatat@plt+0xb8d8>  // b.none
  40e40c:	ldr	x1, [sp, #40]
  40e410:	ldr	x0, [sp, #72]
  40e414:	mul	x0, x1, x0
  40e418:	ldr	x1, [sp, #48]
  40e41c:	add	x0, x1, x0
  40e420:	ldr	x2, [sp, #40]
  40e424:	mov	x1, x0
  40e428:	ldr	x0, [sp, #64]
  40e42c:	bl	402860 <memcmp@plt>
  40e430:	cmp	w0, #0x0
  40e434:	b.eq	40e48c <__fxstatat@plt+0xb92c>  // b.none
  40e438:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e43c:	add	x0, x0, #0x5e0
  40e440:	ldr	x19, [x0]
  40e444:	ldr	x0, [sp, #72]
  40e448:	lsl	x0, x0, #3
  40e44c:	ldr	x1, [sp, #56]
  40e450:	add	x0, x1, x0
  40e454:	ldr	x0, [x0]
  40e458:	bl	418f38 <__fxstatat@plt+0x163d8>
  40e45c:	mov	x2, x0
  40e460:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40e464:	add	x1, x0, #0x1e0
  40e468:	mov	x0, x19
  40e46c:	bl	402b30 <fprintf@plt>
  40e470:	ldr	x1, [sp, #40]
  40e474:	ldr	x0, [sp, #72]
  40e478:	mul	x0, x1, x0
  40e47c:	ldr	x1, [sp, #48]
  40e480:	add	x0, x1, x0
  40e484:	str	x0, [sp, #64]
  40e488:	b	40e4c4 <__fxstatat@plt+0xb964>
  40e48c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e490:	add	x0, x0, #0x5e0
  40e494:	ldr	x19, [x0]
  40e498:	ldr	x0, [sp, #72]
  40e49c:	lsl	x0, x0, #3
  40e4a0:	ldr	x1, [sp, #56]
  40e4a4:	add	x0, x1, x0
  40e4a8:	ldr	x0, [x0]
  40e4ac:	bl	418f38 <__fxstatat@plt+0x163d8>
  40e4b0:	mov	x2, x0
  40e4b4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40e4b8:	add	x1, x0, #0x1e8
  40e4bc:	mov	x0, x19
  40e4c0:	bl	402b30 <fprintf@plt>
  40e4c4:	ldr	x0, [sp, #72]
  40e4c8:	add	x0, x0, #0x1
  40e4cc:	str	x0, [sp, #72]
  40e4d0:	ldr	x0, [sp, #72]
  40e4d4:	lsl	x0, x0, #3
  40e4d8:	ldr	x1, [sp, #56]
  40e4dc:	add	x0, x1, x0
  40e4e0:	ldr	x0, [x0]
  40e4e4:	cmp	x0, #0x0
  40e4e8:	b.ne	40e400 <__fxstatat@plt+0xb8a0>  // b.any
  40e4ec:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40e4f0:	add	x0, x0, #0x5e0
  40e4f4:	ldr	x0, [x0]
  40e4f8:	mov	x1, x0
  40e4fc:	mov	w0, #0xa                   	// #10
  40e500:	bl	402670 <putc_unlocked@plt>
  40e504:	nop
  40e508:	ldr	x19, [sp, #16]
  40e50c:	ldp	x29, x30, [sp], #80
  40e510:	ret
  40e514:	stp	x29, x30, [sp, #-80]!
  40e518:	mov	x29, sp
  40e51c:	str	x0, [sp, #56]
  40e520:	str	x1, [sp, #48]
  40e524:	str	x2, [sp, #40]
  40e528:	str	x3, [sp, #32]
  40e52c:	str	x4, [sp, #24]
  40e530:	str	x5, [sp, #16]
  40e534:	ldr	x3, [sp, #24]
  40e538:	ldr	x2, [sp, #32]
  40e53c:	ldr	x1, [sp, #40]
  40e540:	ldr	x0, [sp, #48]
  40e544:	bl	40e1e4 <__fxstatat@plt+0xb684>
  40e548:	str	x0, [sp, #72]
  40e54c:	ldr	x0, [sp, #72]
  40e550:	cmp	x0, #0x0
  40e554:	b.lt	40e560 <__fxstatat@plt+0xba00>  // b.tstop
  40e558:	ldr	x0, [sp, #72]
  40e55c:	b	40e58c <__fxstatat@plt+0xba2c>
  40e560:	ldr	x2, [sp, #72]
  40e564:	ldr	x1, [sp, #48]
  40e568:	ldr	x0, [sp, #56]
  40e56c:	bl	40e328 <__fxstatat@plt+0xb7c8>
  40e570:	ldr	x2, [sp, #24]
  40e574:	ldr	x1, [sp, #32]
  40e578:	ldr	x0, [sp, #40]
  40e57c:	bl	40e3b4 <__fxstatat@plt+0xb854>
  40e580:	ldr	x0, [sp, #16]
  40e584:	blr	x0
  40e588:	mov	x0, #0xffffffffffffffff    	// #-1
  40e58c:	ldp	x29, x30, [sp], #80
  40e590:	ret
  40e594:	stp	x29, x30, [sp, #-64]!
  40e598:	mov	x29, sp
  40e59c:	str	x0, [sp, #40]
  40e5a0:	str	x1, [sp, #32]
  40e5a4:	str	x2, [sp, #24]
  40e5a8:	str	x3, [sp, #16]
  40e5ac:	str	xzr, [sp, #56]
  40e5b0:	b	40e604 <__fxstatat@plt+0xbaa4>
  40e5b4:	ldr	x1, [sp, #16]
  40e5b8:	ldr	x0, [sp, #56]
  40e5bc:	mul	x0, x1, x0
  40e5c0:	ldr	x1, [sp, #24]
  40e5c4:	add	x0, x1, x0
  40e5c8:	ldr	x2, [sp, #16]
  40e5cc:	mov	x1, x0
  40e5d0:	ldr	x0, [sp, #40]
  40e5d4:	bl	402860 <memcmp@plt>
  40e5d8:	cmp	w0, #0x0
  40e5dc:	b.ne	40e5f8 <__fxstatat@plt+0xba98>  // b.any
  40e5e0:	ldr	x0, [sp, #56]
  40e5e4:	lsl	x0, x0, #3
  40e5e8:	ldr	x1, [sp, #32]
  40e5ec:	add	x0, x1, x0
  40e5f0:	ldr	x0, [x0]
  40e5f4:	b	40e624 <__fxstatat@plt+0xbac4>
  40e5f8:	ldr	x0, [sp, #56]
  40e5fc:	add	x0, x0, #0x1
  40e600:	str	x0, [sp, #56]
  40e604:	ldr	x0, [sp, #56]
  40e608:	lsl	x0, x0, #3
  40e60c:	ldr	x1, [sp, #32]
  40e610:	add	x0, x1, x0
  40e614:	ldr	x0, [x0]
  40e618:	cmp	x0, #0x0
  40e61c:	b.ne	40e5b4 <__fxstatat@plt+0xba54>  // b.any
  40e620:	mov	x0, #0x0                   	// #0
  40e624:	ldp	x29, x30, [sp], #64
  40e628:	ret
  40e62c:	sub	sp, sp, #0x10
  40e630:	str	w0, [sp, #12]
  40e634:	ldr	w0, [sp, #12]
  40e638:	cmp	w0, #0x7a
  40e63c:	b.gt	40e680 <__fxstatat@plt+0xbb20>
  40e640:	ldr	w0, [sp, #12]
  40e644:	cmp	w0, #0x61
  40e648:	b.ge	40e678 <__fxstatat@plt+0xbb18>  // b.tcont
  40e64c:	ldr	w0, [sp, #12]
  40e650:	cmp	w0, #0x39
  40e654:	b.gt	40e668 <__fxstatat@plt+0xbb08>
  40e658:	ldr	w0, [sp, #12]
  40e65c:	cmp	w0, #0x30
  40e660:	b.ge	40e678 <__fxstatat@plt+0xbb18>  // b.tcont
  40e664:	b	40e680 <__fxstatat@plt+0xbb20>
  40e668:	ldr	w0, [sp, #12]
  40e66c:	sub	w0, w0, #0x41
  40e670:	cmp	w0, #0x19
  40e674:	b.hi	40e680 <__fxstatat@plt+0xbb20>  // b.pmore
  40e678:	mov	w0, #0x1                   	// #1
  40e67c:	b	40e684 <__fxstatat@plt+0xbb24>
  40e680:	mov	w0, #0x0                   	// #0
  40e684:	add	sp, sp, #0x10
  40e688:	ret
  40e68c:	sub	sp, sp, #0x10
  40e690:	str	w0, [sp, #12]
  40e694:	ldr	w0, [sp, #12]
  40e698:	cmp	w0, #0x5a
  40e69c:	b.gt	40e6b0 <__fxstatat@plt+0xbb50>
  40e6a0:	ldr	w0, [sp, #12]
  40e6a4:	cmp	w0, #0x41
  40e6a8:	b.ge	40e6c0 <__fxstatat@plt+0xbb60>  // b.tcont
  40e6ac:	b	40e6c8 <__fxstatat@plt+0xbb68>
  40e6b0:	ldr	w0, [sp, #12]
  40e6b4:	sub	w0, w0, #0x61
  40e6b8:	cmp	w0, #0x19
  40e6bc:	b.hi	40e6c8 <__fxstatat@plt+0xbb68>  // b.pmore
  40e6c0:	mov	w0, #0x1                   	// #1
  40e6c4:	b	40e6cc <__fxstatat@plt+0xbb6c>
  40e6c8:	mov	w0, #0x0                   	// #0
  40e6cc:	add	sp, sp, #0x10
  40e6d0:	ret
  40e6d4:	sub	sp, sp, #0x10
  40e6d8:	str	w0, [sp, #12]
  40e6dc:	ldr	w0, [sp, #12]
  40e6e0:	cmp	w0, #0x7f
  40e6e4:	b.hi	40e6f0 <__fxstatat@plt+0xbb90>  // b.pmore
  40e6e8:	mov	w0, #0x1                   	// #1
  40e6ec:	b	40e6f4 <__fxstatat@plt+0xbb94>
  40e6f0:	mov	w0, #0x0                   	// #0
  40e6f4:	add	sp, sp, #0x10
  40e6f8:	ret
  40e6fc:	sub	sp, sp, #0x10
  40e700:	str	w0, [sp, #12]
  40e704:	ldr	w0, [sp, #12]
  40e708:	cmp	w0, #0x20
  40e70c:	b.eq	40e71c <__fxstatat@plt+0xbbbc>  // b.none
  40e710:	ldr	w0, [sp, #12]
  40e714:	cmp	w0, #0x9
  40e718:	b.ne	40e724 <__fxstatat@plt+0xbbc4>  // b.any
  40e71c:	mov	w0, #0x1                   	// #1
  40e720:	b	40e728 <__fxstatat@plt+0xbbc8>
  40e724:	mov	w0, #0x0                   	// #0
  40e728:	and	w0, w0, #0x1
  40e72c:	and	w0, w0, #0xff
  40e730:	add	sp, sp, #0x10
  40e734:	ret
  40e738:	sub	sp, sp, #0x10
  40e73c:	str	w0, [sp, #12]
  40e740:	ldr	w0, [sp, #12]
  40e744:	cmp	w0, #0x1f
  40e748:	b.gt	40e75c <__fxstatat@plt+0xbbfc>
  40e74c:	ldr	w0, [sp, #12]
  40e750:	cmp	w0, #0x0
  40e754:	b.ge	40e768 <__fxstatat@plt+0xbc08>  // b.tcont
  40e758:	b	40e770 <__fxstatat@plt+0xbc10>
  40e75c:	ldr	w0, [sp, #12]
  40e760:	cmp	w0, #0x7f
  40e764:	b.ne	40e770 <__fxstatat@plt+0xbc10>  // b.any
  40e768:	mov	w0, #0x1                   	// #1
  40e76c:	b	40e774 <__fxstatat@plt+0xbc14>
  40e770:	mov	w0, #0x0                   	// #0
  40e774:	add	sp, sp, #0x10
  40e778:	ret
  40e77c:	sub	sp, sp, #0x10
  40e780:	str	w0, [sp, #12]
  40e784:	ldr	w0, [sp, #12]
  40e788:	sub	w0, w0, #0x30
  40e78c:	cmp	w0, #0x9
  40e790:	b.hi	40e79c <__fxstatat@plt+0xbc3c>  // b.pmore
  40e794:	mov	w0, #0x1                   	// #1
  40e798:	b	40e7a0 <__fxstatat@plt+0xbc40>
  40e79c:	mov	w0, #0x0                   	// #0
  40e7a0:	add	sp, sp, #0x10
  40e7a4:	ret
  40e7a8:	sub	sp, sp, #0x10
  40e7ac:	str	w0, [sp, #12]
  40e7b0:	ldr	w0, [sp, #12]
  40e7b4:	sub	w0, w0, #0x21
  40e7b8:	cmp	w0, #0x5d
  40e7bc:	b.hi	40e7c8 <__fxstatat@plt+0xbc68>  // b.pmore
  40e7c0:	mov	w0, #0x1                   	// #1
  40e7c4:	b	40e7cc <__fxstatat@plt+0xbc6c>
  40e7c8:	mov	w0, #0x0                   	// #0
  40e7cc:	add	sp, sp, #0x10
  40e7d0:	ret
  40e7d4:	sub	sp, sp, #0x10
  40e7d8:	str	w0, [sp, #12]
  40e7dc:	ldr	w0, [sp, #12]
  40e7e0:	sub	w0, w0, #0x61
  40e7e4:	cmp	w0, #0x19
  40e7e8:	b.hi	40e7f4 <__fxstatat@plt+0xbc94>  // b.pmore
  40e7ec:	mov	w0, #0x1                   	// #1
  40e7f0:	b	40e7f8 <__fxstatat@plt+0xbc98>
  40e7f4:	mov	w0, #0x0                   	// #0
  40e7f8:	add	sp, sp, #0x10
  40e7fc:	ret
  40e800:	sub	sp, sp, #0x10
  40e804:	str	w0, [sp, #12]
  40e808:	ldr	w0, [sp, #12]
  40e80c:	sub	w0, w0, #0x20
  40e810:	cmp	w0, #0x5e
  40e814:	b.hi	40e820 <__fxstatat@plt+0xbcc0>  // b.pmore
  40e818:	mov	w0, #0x1                   	// #1
  40e81c:	b	40e824 <__fxstatat@plt+0xbcc4>
  40e820:	mov	w0, #0x0                   	// #0
  40e824:	add	sp, sp, #0x10
  40e828:	ret
  40e82c:	sub	sp, sp, #0x10
  40e830:	str	w0, [sp, #12]
  40e834:	ldr	w0, [sp, #12]
  40e838:	cmp	w0, #0x7e
  40e83c:	b.gt	40e898 <__fxstatat@plt+0xbd38>
  40e840:	ldr	w0, [sp, #12]
  40e844:	cmp	w0, #0x7b
  40e848:	b.ge	40e890 <__fxstatat@plt+0xbd30>  // b.tcont
  40e84c:	ldr	w0, [sp, #12]
  40e850:	cmp	w0, #0x60
  40e854:	b.gt	40e898 <__fxstatat@plt+0xbd38>
  40e858:	ldr	w0, [sp, #12]
  40e85c:	cmp	w0, #0x5b
  40e860:	b.ge	40e890 <__fxstatat@plt+0xbd30>  // b.tcont
  40e864:	ldr	w0, [sp, #12]
  40e868:	cmp	w0, #0x2f
  40e86c:	b.gt	40e880 <__fxstatat@plt+0xbd20>
  40e870:	ldr	w0, [sp, #12]
  40e874:	cmp	w0, #0x21
  40e878:	b.ge	40e890 <__fxstatat@plt+0xbd30>  // b.tcont
  40e87c:	b	40e898 <__fxstatat@plt+0xbd38>
  40e880:	ldr	w0, [sp, #12]
  40e884:	sub	w0, w0, #0x3a
  40e888:	cmp	w0, #0x6
  40e88c:	b.hi	40e898 <__fxstatat@plt+0xbd38>  // b.pmore
  40e890:	mov	w0, #0x1                   	// #1
  40e894:	b	40e89c <__fxstatat@plt+0xbd3c>
  40e898:	mov	w0, #0x0                   	// #0
  40e89c:	add	sp, sp, #0x10
  40e8a0:	ret
  40e8a4:	sub	sp, sp, #0x10
  40e8a8:	str	w0, [sp, #12]
  40e8ac:	ldr	w0, [sp, #12]
  40e8b0:	cmp	w0, #0xd
  40e8b4:	b.gt	40e8c8 <__fxstatat@plt+0xbd68>
  40e8b8:	ldr	w0, [sp, #12]
  40e8bc:	cmp	w0, #0x9
  40e8c0:	b.ge	40e8d4 <__fxstatat@plt+0xbd74>  // b.tcont
  40e8c4:	b	40e8dc <__fxstatat@plt+0xbd7c>
  40e8c8:	ldr	w0, [sp, #12]
  40e8cc:	cmp	w0, #0x20
  40e8d0:	b.ne	40e8dc <__fxstatat@plt+0xbd7c>  // b.any
  40e8d4:	mov	w0, #0x1                   	// #1
  40e8d8:	b	40e8e0 <__fxstatat@plt+0xbd80>
  40e8dc:	mov	w0, #0x0                   	// #0
  40e8e0:	add	sp, sp, #0x10
  40e8e4:	ret
  40e8e8:	sub	sp, sp, #0x10
  40e8ec:	str	w0, [sp, #12]
  40e8f0:	ldr	w0, [sp, #12]
  40e8f4:	sub	w0, w0, #0x41
  40e8f8:	cmp	w0, #0x19
  40e8fc:	b.hi	40e908 <__fxstatat@plt+0xbda8>  // b.pmore
  40e900:	mov	w0, #0x1                   	// #1
  40e904:	b	40e90c <__fxstatat@plt+0xbdac>
  40e908:	mov	w0, #0x0                   	// #0
  40e90c:	add	sp, sp, #0x10
  40e910:	ret
  40e914:	sub	sp, sp, #0x10
  40e918:	str	w0, [sp, #12]
  40e91c:	ldr	w0, [sp, #12]
  40e920:	sub	w0, w0, #0x30
  40e924:	cmp	w0, #0x36
  40e928:	cset	w1, hi  // hi = pmore
  40e92c:	and	w1, w1, #0xff
  40e930:	cmp	w1, #0x0
  40e934:	b.ne	40e968 <__fxstatat@plt+0xbe08>  // b.any
  40e938:	mov	x1, #0x1                   	// #1
  40e93c:	lsl	x1, x1, x0
  40e940:	mov	x0, #0x7e0000007e0000      	// #35465847073800192
  40e944:	movk	x0, #0x3ff
  40e948:	and	x0, x1, x0
  40e94c:	cmp	x0, #0x0
  40e950:	cset	w0, ne  // ne = any
  40e954:	and	w0, w0, #0xff
  40e958:	cmp	w0, #0x0
  40e95c:	b.eq	40e968 <__fxstatat@plt+0xbe08>  // b.none
  40e960:	mov	w0, #0x1                   	// #1
  40e964:	b	40e96c <__fxstatat@plt+0xbe0c>
  40e968:	mov	w0, #0x0                   	// #0
  40e96c:	add	sp, sp, #0x10
  40e970:	ret
  40e974:	sub	sp, sp, #0x10
  40e978:	str	w0, [sp, #12]
  40e97c:	ldr	w0, [sp, #12]
  40e980:	sub	w0, w0, #0x41
  40e984:	cmp	w0, #0x19
  40e988:	b.hi	40e998 <__fxstatat@plt+0xbe38>  // b.pmore
  40e98c:	ldr	w0, [sp, #12]
  40e990:	add	w0, w0, #0x20
  40e994:	b	40e99c <__fxstatat@plt+0xbe3c>
  40e998:	ldr	w0, [sp, #12]
  40e99c:	add	sp, sp, #0x10
  40e9a0:	ret
  40e9a4:	sub	sp, sp, #0x10
  40e9a8:	str	w0, [sp, #12]
  40e9ac:	ldr	w0, [sp, #12]
  40e9b0:	sub	w0, w0, #0x61
  40e9b4:	cmp	w0, #0x19
  40e9b8:	b.hi	40e9c8 <__fxstatat@plt+0xbe68>  // b.pmore
  40e9bc:	ldr	w0, [sp, #12]
  40e9c0:	sub	w0, w0, #0x20
  40e9c4:	b	40e9cc <__fxstatat@plt+0xbe6c>
  40e9c8:	ldr	w0, [sp, #12]
  40e9cc:	add	sp, sp, #0x10
  40e9d0:	ret
  40e9d4:	stp	x29, x30, [sp, #-80]!
  40e9d8:	mov	x29, sp
  40e9dc:	stp	x19, x20, [sp, #16]
  40e9e0:	str	x0, [sp, #56]
  40e9e4:	str	x1, [sp, #48]
  40e9e8:	str	x2, [sp, #40]
  40e9ec:	ldr	x20, [sp, #56]
  40e9f0:	ldr	x19, [sp, #48]
  40e9f4:	cmp	x20, x19
  40e9f8:	b.eq	40ea08 <__fxstatat@plt+0xbea8>  // b.none
  40e9fc:	ldr	x0, [sp, #40]
  40ea00:	cmp	x0, #0x0
  40ea04:	b.ne	40ea10 <__fxstatat@plt+0xbeb0>  // b.any
  40ea08:	mov	w0, #0x0                   	// #0
  40ea0c:	b	40ea70 <__fxstatat@plt+0xbf10>
  40ea10:	ldrb	w0, [x20]
  40ea14:	bl	40e974 <__fxstatat@plt+0xbe14>
  40ea18:	strb	w0, [sp, #79]
  40ea1c:	ldrb	w0, [x19]
  40ea20:	bl	40e974 <__fxstatat@plt+0xbe14>
  40ea24:	strb	w0, [sp, #78]
  40ea28:	ldr	x0, [sp, #40]
  40ea2c:	sub	x0, x0, #0x1
  40ea30:	str	x0, [sp, #40]
  40ea34:	ldr	x0, [sp, #40]
  40ea38:	cmp	x0, #0x0
  40ea3c:	b.eq	40ea64 <__fxstatat@plt+0xbf04>  // b.none
  40ea40:	ldrb	w0, [sp, #79]
  40ea44:	cmp	w0, #0x0
  40ea48:	b.eq	40ea64 <__fxstatat@plt+0xbf04>  // b.none
  40ea4c:	add	x20, x20, #0x1
  40ea50:	add	x19, x19, #0x1
  40ea54:	ldrb	w1, [sp, #79]
  40ea58:	ldrb	w0, [sp, #78]
  40ea5c:	cmp	w1, w0
  40ea60:	b.eq	40ea10 <__fxstatat@plt+0xbeb0>  // b.none
  40ea64:	ldrb	w1, [sp, #79]
  40ea68:	ldrb	w0, [sp, #78]
  40ea6c:	sub	w0, w1, w0
  40ea70:	ldp	x19, x20, [sp, #16]
  40ea74:	ldp	x29, x30, [sp], #80
  40ea78:	ret
  40ea7c:	stp	x29, x30, [sp, #-64]!
  40ea80:	mov	x29, sp
  40ea84:	str	x0, [sp, #40]
  40ea88:	str	x1, [sp, #32]
  40ea8c:	str	x2, [sp, #24]
  40ea90:	ldr	x0, [sp, #40]
  40ea94:	ldr	x0, [x0]
  40ea98:	cmp	x0, #0x0
  40ea9c:	b.ne	40eaec <__fxstatat@plt+0xbf8c>  // b.any
  40eaa0:	mov	x0, #0x7                   	// #7
  40eaa4:	str	x0, [sp, #56]
  40eaa8:	adrp	x0, 412000 <__fxstatat@plt+0xf4a0>
  40eaac:	add	x4, x0, #0x74
  40eab0:	adrp	x0, 411000 <__fxstatat@plt+0xe4a0>
  40eab4:	add	x3, x0, #0xfe4
  40eab8:	adrp	x0, 411000 <__fxstatat@plt+0xe4a0>
  40eabc:	add	x2, x0, #0xec0
  40eac0:	mov	x1, #0x0                   	// #0
  40eac4:	ldr	x0, [sp, #56]
  40eac8:	bl	411030 <__fxstatat@plt+0xe4d0>
  40eacc:	mov	x1, x0
  40ead0:	ldr	x0, [sp, #40]
  40ead4:	str	x1, [x0]
  40ead8:	ldr	x0, [sp, #40]
  40eadc:	ldr	x0, [x0]
  40eae0:	cmp	x0, #0x0
  40eae4:	b.ne	40eaec <__fxstatat@plt+0xbf8c>  // b.any
  40eae8:	bl	41a260 <__fxstatat@plt+0x17700>
  40eaec:	ldr	x0, [sp, #40]
  40eaf0:	ldr	x0, [x0]
  40eaf4:	ldr	x2, [sp, #24]
  40eaf8:	ldr	x1, [sp, #32]
  40eafc:	bl	40f940 <__fxstatat@plt+0xcde0>
  40eb00:	and	w0, w0, #0xff
  40eb04:	cmp	w0, #0x0
  40eb08:	b.eq	40eb14 <__fxstatat@plt+0xbfb4>  // b.none
  40eb0c:	mov	w0, #0x1                   	// #1
  40eb10:	b	40eb2c <__fxstatat@plt+0xbfcc>
  40eb14:	ldr	x0, [sp, #40]
  40eb18:	ldr	x0, [x0]
  40eb1c:	ldr	x2, [sp, #24]
  40eb20:	ldr	x1, [sp, #32]
  40eb24:	bl	40f898 <__fxstatat@plt+0xcd38>
  40eb28:	mov	w0, #0x0                   	// #0
  40eb2c:	ldp	x29, x30, [sp], #64
  40eb30:	ret
  40eb34:	stp	x29, x30, [sp, #-304]!
  40eb38:	mov	x29, sp
  40eb3c:	str	x0, [sp, #24]
  40eb40:	str	w1, [sp, #20]
  40eb44:	str	xzr, [sp, #280]
  40eb48:	str	xzr, [sp, #248]
  40eb4c:	str	xzr, [sp, #160]
  40eb50:	ldr	w0, [sp, #20]
  40eb54:	and	w0, w0, #0xfffffffc
  40eb58:	str	w0, [sp, #220]
  40eb5c:	ldr	w0, [sp, #220]
  40eb60:	and	w0, w0, #0x4
  40eb64:	cmp	w0, #0x0
  40eb68:	cset	w0, ne  // ne = any
  40eb6c:	strb	w0, [sp, #219]
  40eb70:	ldr	w0, [sp, #20]
  40eb74:	and	w0, w0, #0x3
  40eb78:	str	w0, [sp, #20]
  40eb7c:	ldr	w0, [sp, #20]
  40eb80:	sub	w1, w0, #0x1
  40eb84:	ldr	w0, [sp, #20]
  40eb88:	and	w0, w1, w0
  40eb8c:	cmp	w0, #0x0
  40eb90:	b.eq	40ebac <__fxstatat@plt+0xc04c>  // b.none
  40eb94:	bl	402ac0 <__errno_location@plt>
  40eb98:	mov	x1, x0
  40eb9c:	mov	w0, #0x16                  	// #22
  40eba0:	str	w0, [x1]
  40eba4:	mov	x0, #0x0                   	// #0
  40eba8:	b	40f3bc <__fxstatat@plt+0xc85c>
  40ebac:	ldr	x0, [sp, #24]
  40ebb0:	cmp	x0, #0x0
  40ebb4:	b.ne	40ebd0 <__fxstatat@plt+0xc070>  // b.any
  40ebb8:	bl	402ac0 <__errno_location@plt>
  40ebbc:	mov	x1, x0
  40ebc0:	mov	w0, #0x16                  	// #22
  40ebc4:	str	w0, [x1]
  40ebc8:	mov	x0, #0x0                   	// #0
  40ebcc:	b	40f3bc <__fxstatat@plt+0xc85c>
  40ebd0:	ldr	x0, [sp, #24]
  40ebd4:	ldrb	w0, [x0]
  40ebd8:	cmp	w0, #0x0
  40ebdc:	b.ne	40ebf8 <__fxstatat@plt+0xc098>  // b.any
  40ebe0:	bl	402ac0 <__errno_location@plt>
  40ebe4:	mov	x1, x0
  40ebe8:	mov	w0, #0x2                   	// #2
  40ebec:	str	w0, [x1]
  40ebf0:	mov	x0, #0x0                   	// #0
  40ebf4:	b	40f3bc <__fxstatat@plt+0xc85c>
  40ebf8:	str	xzr, [sp, #232]
  40ebfc:	ldr	x0, [sp, #24]
  40ec00:	ldrb	w0, [x0]
  40ec04:	cmp	w0, #0x2f
  40ec08:	b.eq	40ecb0 <__fxstatat@plt+0xc150>  // b.none
  40ec0c:	bl	41a448 <__fxstatat@plt+0x178e8>
  40ec10:	str	x0, [sp, #296]
  40ec14:	ldr	x0, [sp, #296]
  40ec18:	cmp	x0, #0x0
  40ec1c:	b.ne	40ec28 <__fxstatat@plt+0xc0c8>  // b.any
  40ec20:	mov	x0, #0x0                   	// #0
  40ec24:	b	40f3bc <__fxstatat@plt+0xc85c>
  40ec28:	ldr	x0, [sp, #296]
  40ec2c:	bl	402500 <strlen@plt>
  40ec30:	mov	x1, x0
  40ec34:	ldr	x0, [sp, #296]
  40ec38:	add	x0, x0, x1
  40ec3c:	str	x0, [sp, #288]
  40ec40:	ldr	x1, [sp, #288]
  40ec44:	ldr	x0, [sp, #296]
  40ec48:	sub	x0, x1, x0
  40ec4c:	cmp	x0, #0xfff
  40ec50:	b.gt	40ec98 <__fxstatat@plt+0xc138>
  40ec54:	mov	x1, #0x1000                	// #4096
  40ec58:	ldr	x0, [sp, #296]
  40ec5c:	bl	41a0c0 <__fxstatat@plt+0x17560>
  40ec60:	str	x0, [sp, #208]
  40ec64:	ldr	x1, [sp, #288]
  40ec68:	ldr	x0, [sp, #296]
  40ec6c:	sub	x0, x1, x0
  40ec70:	mov	x1, x0
  40ec74:	ldr	x0, [sp, #208]
  40ec78:	add	x0, x0, x1
  40ec7c:	str	x0, [sp, #288]
  40ec80:	ldr	x0, [sp, #208]
  40ec84:	str	x0, [sp, #296]
  40ec88:	ldr	x0, [sp, #296]
  40ec8c:	add	x0, x0, #0x1, lsl #12
  40ec90:	str	x0, [sp, #256]
  40ec94:	b	40eca0 <__fxstatat@plt+0xc140>
  40ec98:	ldr	x0, [sp, #288]
  40ec9c:	str	x0, [sp, #256]
  40eca0:	ldr	x0, [sp, #24]
  40eca4:	str	x0, [sp, #272]
  40eca8:	str	xzr, [sp, #232]
  40ecac:	b	40f2c4 <__fxstatat@plt+0xc764>
  40ecb0:	mov	x0, #0x1000                	// #4096
  40ecb4:	bl	41a080 <__fxstatat@plt+0x17520>
  40ecb8:	str	x0, [sp, #296]
  40ecbc:	ldr	x0, [sp, #296]
  40ecc0:	add	x0, x0, #0x1, lsl #12
  40ecc4:	str	x0, [sp, #256]
  40ecc8:	ldr	x0, [sp, #296]
  40eccc:	str	x0, [sp, #288]
  40ecd0:	ldr	x0, [sp, #232]
  40ecd4:	cmp	x0, #0x0
  40ecd8:	b.eq	40ecfc <__fxstatat@plt+0xc19c>  // b.none
  40ecdc:	ldr	x2, [sp, #232]
  40ece0:	ldr	x1, [sp, #24]
  40ece4:	ldr	x0, [sp, #296]
  40ece8:	bl	402490 <memcpy@plt>
  40ecec:	ldr	x1, [sp, #288]
  40ecf0:	ldr	x0, [sp, #232]
  40ecf4:	add	x0, x1, x0
  40ecf8:	str	x0, [sp, #288]
  40ecfc:	ldr	x0, [sp, #288]
  40ed00:	add	x1, x0, #0x1
  40ed04:	str	x1, [sp, #288]
  40ed08:	mov	w1, #0x2f                  	// #47
  40ed0c:	strb	w1, [x0]
  40ed10:	ldr	x1, [sp, #24]
  40ed14:	ldr	x0, [sp, #232]
  40ed18:	add	x0, x1, x0
  40ed1c:	str	x0, [sp, #272]
  40ed20:	b	40f2c4 <__fxstatat@plt+0xc764>
  40ed24:	ldr	x0, [sp, #272]
  40ed28:	add	x0, x0, #0x1
  40ed2c:	str	x0, [sp, #272]
  40ed30:	ldr	x0, [sp, #272]
  40ed34:	ldrb	w0, [x0]
  40ed38:	cmp	w0, #0x2f
  40ed3c:	b.eq	40ed24 <__fxstatat@plt+0xc1c4>  // b.none
  40ed40:	ldr	x0, [sp, #272]
  40ed44:	str	x0, [sp, #264]
  40ed48:	b	40ed58 <__fxstatat@plt+0xc1f8>
  40ed4c:	ldr	x0, [sp, #264]
  40ed50:	add	x0, x0, #0x1
  40ed54:	str	x0, [sp, #264]
  40ed58:	ldr	x0, [sp, #264]
  40ed5c:	ldrb	w0, [x0]
  40ed60:	cmp	w0, #0x0
  40ed64:	b.eq	40ed78 <__fxstatat@plt+0xc218>  // b.none
  40ed68:	ldr	x0, [sp, #264]
  40ed6c:	ldrb	w0, [x0]
  40ed70:	cmp	w0, #0x2f
  40ed74:	b.ne	40ed4c <__fxstatat@plt+0xc1ec>  // b.any
  40ed78:	ldr	x1, [sp, #264]
  40ed7c:	ldr	x0, [sp, #272]
  40ed80:	cmp	x1, x0
  40ed84:	b.eq	40f2d8 <__fxstatat@plt+0xc778>  // b.none
  40ed88:	ldr	x1, [sp, #264]
  40ed8c:	ldr	x0, [sp, #272]
  40ed90:	sub	x0, x1, x0
  40ed94:	cmp	x0, #0x1
  40ed98:	b.ne	40edac <__fxstatat@plt+0xc24c>  // b.any
  40ed9c:	ldr	x0, [sp, #272]
  40eda0:	ldrb	w0, [x0]
  40eda4:	cmp	w0, #0x2e
  40eda8:	b.eq	40f2bc <__fxstatat@plt+0xc75c>  // b.none
  40edac:	ldr	x1, [sp, #264]
  40edb0:	ldr	x0, [sp, #272]
  40edb4:	sub	x0, x1, x0
  40edb8:	cmp	x0, #0x2
  40edbc:	b.ne	40ee44 <__fxstatat@plt+0xc2e4>  // b.any
  40edc0:	ldr	x0, [sp, #272]
  40edc4:	ldrb	w0, [x0]
  40edc8:	cmp	w0, #0x2e
  40edcc:	b.ne	40ee44 <__fxstatat@plt+0xc2e4>  // b.any
  40edd0:	ldr	x0, [sp, #272]
  40edd4:	add	x0, x0, #0x1
  40edd8:	ldrb	w0, [x0]
  40eddc:	cmp	w0, #0x2e
  40ede0:	b.ne	40ee44 <__fxstatat@plt+0xc2e4>  // b.any
  40ede4:	ldr	x0, [sp, #232]
  40ede8:	add	x0, x0, #0x1
  40edec:	ldr	x1, [sp, #296]
  40edf0:	add	x0, x1, x0
  40edf4:	ldr	x1, [sp, #288]
  40edf8:	cmp	x1, x0
  40edfc:	b.ls	40f2a0 <__fxstatat@plt+0xc740>  // b.plast
  40ee00:	ldr	x0, [sp, #288]
  40ee04:	sub	x0, x0, #0x1
  40ee08:	str	x0, [sp, #288]
  40ee0c:	b	40ee1c <__fxstatat@plt+0xc2bc>
  40ee10:	ldr	x0, [sp, #288]
  40ee14:	sub	x0, x0, #0x1
  40ee18:	str	x0, [sp, #288]
  40ee1c:	ldr	x1, [sp, #288]
  40ee20:	ldr	x0, [sp, #296]
  40ee24:	cmp	x1, x0
  40ee28:	b.ls	40f2a0 <__fxstatat@plt+0xc740>  // b.plast
  40ee2c:	ldr	x0, [sp, #288]
  40ee30:	sub	x0, x0, #0x1
  40ee34:	ldrb	w0, [x0]
  40ee38:	cmp	w0, #0x2f
  40ee3c:	b.ne	40ee10 <__fxstatat@plt+0xc2b0>  // b.any
  40ee40:	b	40f2a0 <__fxstatat@plt+0xc740>
  40ee44:	ldr	x0, [sp, #288]
  40ee48:	sub	x0, x0, #0x1
  40ee4c:	ldrb	w0, [x0]
  40ee50:	cmp	w0, #0x2f
  40ee54:	b.eq	40ee6c <__fxstatat@plt+0xc30c>  // b.none
  40ee58:	ldr	x0, [sp, #288]
  40ee5c:	add	x1, x0, #0x1
  40ee60:	str	x1, [sp, #288]
  40ee64:	mov	w1, #0x2f                  	// #47
  40ee68:	strb	w1, [x0]
  40ee6c:	ldr	x1, [sp, #264]
  40ee70:	ldr	x0, [sp, #272]
  40ee74:	sub	x0, x1, x0
  40ee78:	mov	x1, x0
  40ee7c:	ldr	x0, [sp, #288]
  40ee80:	add	x0, x0, x1
  40ee84:	ldr	x1, [sp, #256]
  40ee88:	cmp	x1, x0
  40ee8c:	b.hi	40ef24 <__fxstatat@plt+0xc3c4>  // b.pmore
  40ee90:	ldr	x1, [sp, #288]
  40ee94:	ldr	x0, [sp, #296]
  40ee98:	sub	x0, x1, x0
  40ee9c:	str	x0, [sp, #200]
  40eea0:	ldr	x1, [sp, #256]
  40eea4:	ldr	x0, [sp, #296]
  40eea8:	sub	x0, x1, x0
  40eeac:	str	x0, [sp, #224]
  40eeb0:	ldr	x1, [sp, #264]
  40eeb4:	ldr	x0, [sp, #272]
  40eeb8:	sub	x0, x1, x0
  40eebc:	cmp	x0, #0xfff
  40eec0:	b.le	40eee8 <__fxstatat@plt+0xc388>
  40eec4:	ldr	x1, [sp, #264]
  40eec8:	ldr	x0, [sp, #272]
  40eecc:	sub	x0, x1, x0
  40eed0:	mov	x1, x0
  40eed4:	ldr	x0, [sp, #224]
  40eed8:	add	x0, x1, x0
  40eedc:	add	x0, x0, #0x1
  40eee0:	str	x0, [sp, #224]
  40eee4:	b	40eef4 <__fxstatat@plt+0xc394>
  40eee8:	ldr	x0, [sp, #224]
  40eeec:	add	x0, x0, #0x1, lsl #12
  40eef0:	str	x0, [sp, #224]
  40eef4:	ldr	x1, [sp, #224]
  40eef8:	ldr	x0, [sp, #296]
  40eefc:	bl	41a0c0 <__fxstatat@plt+0x17560>
  40ef00:	str	x0, [sp, #296]
  40ef04:	ldr	x1, [sp, #296]
  40ef08:	ldr	x0, [sp, #224]
  40ef0c:	add	x0, x1, x0
  40ef10:	str	x0, [sp, #256]
  40ef14:	ldr	x0, [sp, #200]
  40ef18:	ldr	x1, [sp, #296]
  40ef1c:	add	x0, x1, x0
  40ef20:	str	x0, [sp, #288]
  40ef24:	ldr	x1, [sp, #264]
  40ef28:	ldr	x0, [sp, #272]
  40ef2c:	sub	x0, x1, x0
  40ef30:	mov	x2, x0
  40ef34:	ldr	x1, [sp, #272]
  40ef38:	ldr	x0, [sp, #288]
  40ef3c:	bl	402490 <memcpy@plt>
  40ef40:	str	x0, [sp, #288]
  40ef44:	ldr	x1, [sp, #264]
  40ef48:	ldr	x0, [sp, #272]
  40ef4c:	sub	x0, x1, x0
  40ef50:	mov	x1, x0
  40ef54:	ldr	x0, [sp, #288]
  40ef58:	add	x0, x0, x1
  40ef5c:	str	x0, [sp, #288]
  40ef60:	ldr	x0, [sp, #288]
  40ef64:	strb	wzr, [x0]
  40ef68:	ldrb	w0, [sp, #219]
  40ef6c:	cmp	w0, #0x0
  40ef70:	b.eq	40ef88 <__fxstatat@plt+0xc428>  // b.none
  40ef74:	ldr	w0, [sp, #20]
  40ef78:	cmp	w0, #0x2
  40ef7c:	b.ne	40ef88 <__fxstatat@plt+0xc428>  // b.any
  40ef80:	str	wzr, [sp, #48]
  40ef84:	b	40f038 <__fxstatat@plt+0xc4d8>
  40ef88:	ldrb	w0, [sp, #219]
  40ef8c:	cmp	w0, #0x0
  40ef90:	b.eq	40efb4 <__fxstatat@plt+0xc454>  // b.none
  40ef94:	add	x0, sp, #0x20
  40ef98:	mov	x1, x0
  40ef9c:	ldr	x0, [sp, #296]
  40efa0:	bl	420610 <_obstack_memory_used@@Base+0x4bc0>
  40efa4:	cmp	w0, #0x0
  40efa8:	cset	w0, ne  // ne = any
  40efac:	and	w0, w0, #0xff
  40efb0:	b	40efd0 <__fxstatat@plt+0xc470>
  40efb4:	add	x0, sp, #0x20
  40efb8:	mov	x1, x0
  40efbc:	ldr	x0, [sp, #296]
  40efc0:	bl	420630 <_obstack_memory_used@@Base+0x4be0>
  40efc4:	cmp	w0, #0x0
  40efc8:	cset	w0, ne  // ne = any
  40efcc:	and	w0, w0, #0xff
  40efd0:	cmp	w0, #0x0
  40efd4:	b.eq	40f038 <__fxstatat@plt+0xc4d8>  // b.none
  40efd8:	bl	402ac0 <__errno_location@plt>
  40efdc:	ldr	w0, [x0]
  40efe0:	str	w0, [sp, #244]
  40efe4:	ldr	w0, [sp, #20]
  40efe8:	cmp	w0, #0x0
  40efec:	b.eq	40f378 <__fxstatat@plt+0xc818>  // b.none
  40eff0:	ldr	w0, [sp, #20]
  40eff4:	cmp	w0, #0x1
  40eff8:	b.ne	40f034 <__fxstatat@plt+0xc4d4>  // b.any
  40effc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f000:	add	x1, x0, #0x1f0
  40f004:	ldr	x0, [sp, #264]
  40f008:	bl	402920 <strspn@plt>
  40f00c:	mov	x1, x0
  40f010:	ldr	x0, [sp, #264]
  40f014:	add	x0, x0, x1
  40f018:	ldrb	w0, [x0]
  40f01c:	cmp	w0, #0x0
  40f020:	b.ne	40f380 <__fxstatat@plt+0xc820>  // b.any
  40f024:	ldr	w0, [sp, #244]
  40f028:	cmp	w0, #0x2
  40f02c:	b.eq	40f2a8 <__fxstatat@plt+0xc748>  // b.none
  40f030:	b	40f380 <__fxstatat@plt+0xc820>
  40f034:	str	wzr, [sp, #48]
  40f038:	ldr	w0, [sp, #48]
  40f03c:	and	w0, w0, #0xf000
  40f040:	cmp	w0, #0xa, lsl #12
  40f044:	b.ne	40f268 <__fxstatat@plt+0xc708>  // b.any
  40f048:	add	x1, sp, #0x20
  40f04c:	add	x0, sp, #0xa0
  40f050:	mov	x2, x1
  40f054:	ldr	x1, [sp, #24]
  40f058:	bl	40ea7c <__fxstatat@plt+0xbf1c>
  40f05c:	and	w0, w0, #0xff
  40f060:	cmp	w0, #0x0
  40f064:	b.eq	40f080 <__fxstatat@plt+0xc520>  // b.none
  40f068:	ldr	w0, [sp, #20]
  40f06c:	cmp	w0, #0x2
  40f070:	b.eq	40f2b0 <__fxstatat@plt+0xc750>  // b.none
  40f074:	mov	w0, #0x28                  	// #40
  40f078:	str	w0, [sp, #244]
  40f07c:	b	40f384 <__fxstatat@plt+0xc824>
  40f080:	ldr	x0, [sp, #80]
  40f084:	mov	x1, x0
  40f088:	ldr	x0, [sp, #296]
  40f08c:	bl	40e054 <__fxstatat@plt+0xb4f4>
  40f090:	str	x0, [sp, #192]
  40f094:	ldr	x0, [sp, #192]
  40f098:	cmp	x0, #0x0
  40f09c:	b.ne	40f0cc <__fxstatat@plt+0xc56c>  // b.any
  40f0a0:	ldr	w0, [sp, #20]
  40f0a4:	cmp	w0, #0x2
  40f0a8:	b.ne	40f0bc <__fxstatat@plt+0xc55c>  // b.any
  40f0ac:	bl	402ac0 <__errno_location@plt>
  40f0b0:	ldr	w0, [x0]
  40f0b4:	cmp	w0, #0xc
  40f0b8:	b.ne	40f2b8 <__fxstatat@plt+0xc758>  // b.any
  40f0bc:	bl	402ac0 <__errno_location@plt>
  40f0c0:	ldr	w0, [x0]
  40f0c4:	str	w0, [sp, #244]
  40f0c8:	b	40f384 <__fxstatat@plt+0xc824>
  40f0cc:	ldr	x0, [sp, #192]
  40f0d0:	bl	402500 <strlen@plt>
  40f0d4:	str	x0, [sp, #184]
  40f0d8:	ldr	x0, [sp, #264]
  40f0dc:	bl	402500 <strlen@plt>
  40f0e0:	str	x0, [sp, #176]
  40f0e4:	ldr	x0, [sp, #248]
  40f0e8:	cmp	x0, #0x0
  40f0ec:	b.ne	40f120 <__fxstatat@plt+0xc5c0>  // b.any
  40f0f0:	ldr	x1, [sp, #184]
  40f0f4:	ldr	x0, [sp, #176]
  40f0f8:	add	x0, x1, x0
  40f0fc:	add	x0, x0, #0x1
  40f100:	mov	x1, #0x1000                	// #4096
  40f104:	cmp	x0, #0x1, lsl #12
  40f108:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40f10c:	str	x0, [sp, #248]
  40f110:	ldr	x0, [sp, #248]
  40f114:	bl	41a080 <__fxstatat@plt+0x17520>
  40f118:	str	x0, [sp, #280]
  40f11c:	b	40f160 <__fxstatat@plt+0xc600>
  40f120:	ldr	x1, [sp, #184]
  40f124:	ldr	x0, [sp, #176]
  40f128:	add	x0, x1, x0
  40f12c:	add	x0, x0, #0x1
  40f130:	ldr	x1, [sp, #248]
  40f134:	cmp	x1, x0
  40f138:	b.cs	40f160 <__fxstatat@plt+0xc600>  // b.hs, b.nlast
  40f13c:	ldr	x1, [sp, #184]
  40f140:	ldr	x0, [sp, #176]
  40f144:	add	x0, x1, x0
  40f148:	add	x0, x0, #0x1
  40f14c:	str	x0, [sp, #248]
  40f150:	ldr	x1, [sp, #248]
  40f154:	ldr	x0, [sp, #280]
  40f158:	bl	41a0c0 <__fxstatat@plt+0x17560>
  40f15c:	str	x0, [sp, #280]
  40f160:	ldr	x1, [sp, #280]
  40f164:	ldr	x0, [sp, #184]
  40f168:	add	x3, x1, x0
  40f16c:	ldr	x0, [sp, #176]
  40f170:	add	x0, x0, #0x1
  40f174:	mov	x2, x0
  40f178:	ldr	x1, [sp, #264]
  40f17c:	mov	x0, x3
  40f180:	bl	4024a0 <memmove@plt>
  40f184:	ldr	x2, [sp, #184]
  40f188:	ldr	x1, [sp, #192]
  40f18c:	ldr	x0, [sp, #280]
  40f190:	bl	402490 <memcpy@plt>
  40f194:	str	x0, [sp, #264]
  40f198:	ldr	x0, [sp, #264]
  40f19c:	str	x0, [sp, #24]
  40f1a0:	ldr	x0, [sp, #192]
  40f1a4:	ldrb	w0, [x0]
  40f1a8:	cmp	w0, #0x2f
  40f1ac:	b.ne	40f200 <__fxstatat@plt+0xc6a0>  // b.any
  40f1b0:	str	xzr, [sp, #168]
  40f1b4:	ldr	x0, [sp, #168]
  40f1b8:	cmp	x0, #0x0
  40f1bc:	b.eq	40f1d0 <__fxstatat@plt+0xc670>  // b.none
  40f1c0:	ldr	x2, [sp, #168]
  40f1c4:	ldr	x1, [sp, #192]
  40f1c8:	ldr	x0, [sp, #296]
  40f1cc:	bl	402490 <memcpy@plt>
  40f1d0:	ldr	x1, [sp, #296]
  40f1d4:	ldr	x0, [sp, #168]
  40f1d8:	add	x0, x1, x0
  40f1dc:	str	x0, [sp, #288]
  40f1e0:	ldr	x0, [sp, #288]
  40f1e4:	add	x1, x0, #0x1
  40f1e8:	str	x1, [sp, #288]
  40f1ec:	mov	w1, #0x2f                  	// #47
  40f1f0:	strb	w1, [x0]
  40f1f4:	ldr	x0, [sp, #168]
  40f1f8:	str	x0, [sp, #232]
  40f1fc:	b	40f25c <__fxstatat@plt+0xc6fc>
  40f200:	ldr	x0, [sp, #232]
  40f204:	add	x0, x0, #0x1
  40f208:	ldr	x1, [sp, #296]
  40f20c:	add	x0, x1, x0
  40f210:	ldr	x1, [sp, #288]
  40f214:	cmp	x1, x0
  40f218:	b.ls	40f25c <__fxstatat@plt+0xc6fc>  // b.plast
  40f21c:	ldr	x0, [sp, #288]
  40f220:	sub	x0, x0, #0x1
  40f224:	str	x0, [sp, #288]
  40f228:	b	40f238 <__fxstatat@plt+0xc6d8>
  40f22c:	ldr	x0, [sp, #288]
  40f230:	sub	x0, x0, #0x1
  40f234:	str	x0, [sp, #288]
  40f238:	ldr	x1, [sp, #288]
  40f23c:	ldr	x0, [sp, #296]
  40f240:	cmp	x1, x0
  40f244:	b.ls	40f25c <__fxstatat@plt+0xc6fc>  // b.plast
  40f248:	ldr	x0, [sp, #288]
  40f24c:	sub	x0, x0, #0x1
  40f250:	ldrb	w0, [x0]
  40f254:	cmp	w0, #0x2f
  40f258:	b.ne	40f22c <__fxstatat@plt+0xc6cc>  // b.any
  40f25c:	ldr	x0, [sp, #192]
  40f260:	bl	4028f0 <free@plt>
  40f264:	b	40f2bc <__fxstatat@plt+0xc75c>
  40f268:	ldr	w0, [sp, #48]
  40f26c:	and	w0, w0, #0xf000
  40f270:	cmp	w0, #0x4, lsl #12
  40f274:	b.eq	40f2bc <__fxstatat@plt+0xc75c>  // b.none
  40f278:	ldr	x0, [sp, #264]
  40f27c:	ldrb	w0, [x0]
  40f280:	cmp	w0, #0x0
  40f284:	b.eq	40f2bc <__fxstatat@plt+0xc75c>  // b.none
  40f288:	ldr	w0, [sp, #20]
  40f28c:	cmp	w0, #0x2
  40f290:	b.eq	40f2bc <__fxstatat@plt+0xc75c>  // b.none
  40f294:	mov	w0, #0x14                  	// #20
  40f298:	str	w0, [sp, #244]
  40f29c:	b	40f384 <__fxstatat@plt+0xc824>
  40f2a0:	nop
  40f2a4:	b	40f2bc <__fxstatat@plt+0xc75c>
  40f2a8:	nop
  40f2ac:	b	40f2bc <__fxstatat@plt+0xc75c>
  40f2b0:	nop
  40f2b4:	b	40f2bc <__fxstatat@plt+0xc75c>
  40f2b8:	nop
  40f2bc:	ldr	x0, [sp, #264]
  40f2c0:	str	x0, [sp, #272]
  40f2c4:	ldr	x0, [sp, #272]
  40f2c8:	ldrb	w0, [x0]
  40f2cc:	cmp	w0, #0x0
  40f2d0:	b.ne	40ed30 <__fxstatat@plt+0xc1d0>  // b.any
  40f2d4:	b	40f2dc <__fxstatat@plt+0xc77c>
  40f2d8:	nop
  40f2dc:	ldr	x0, [sp, #232]
  40f2e0:	add	x0, x0, #0x1
  40f2e4:	ldr	x1, [sp, #296]
  40f2e8:	add	x0, x1, x0
  40f2ec:	ldr	x1, [sp, #288]
  40f2f0:	cmp	x1, x0
  40f2f4:	b.ls	40f318 <__fxstatat@plt+0xc7b8>  // b.plast
  40f2f8:	ldr	x0, [sp, #288]
  40f2fc:	sub	x0, x0, #0x1
  40f300:	ldrb	w0, [x0]
  40f304:	cmp	w0, #0x2f
  40f308:	b.ne	40f318 <__fxstatat@plt+0xc7b8>  // b.any
  40f30c:	ldr	x0, [sp, #288]
  40f310:	sub	x0, x0, #0x1
  40f314:	str	x0, [sp, #288]
  40f318:	ldr	x0, [sp, #288]
  40f31c:	strb	wzr, [x0]
  40f320:	ldr	x0, [sp, #288]
  40f324:	add	x0, x0, #0x1
  40f328:	ldr	x1, [sp, #256]
  40f32c:	cmp	x1, x0
  40f330:	b.eq	40f354 <__fxstatat@plt+0xc7f4>  // b.none
  40f334:	ldr	x1, [sp, #288]
  40f338:	ldr	x0, [sp, #296]
  40f33c:	sub	x0, x1, x0
  40f340:	add	x0, x0, #0x1
  40f344:	mov	x1, x0
  40f348:	ldr	x0, [sp, #296]
  40f34c:	bl	41a0c0 <__fxstatat@plt+0x17560>
  40f350:	str	x0, [sp, #296]
  40f354:	ldr	x0, [sp, #280]
  40f358:	bl	4028f0 <free@plt>
  40f35c:	ldr	x0, [sp, #160]
  40f360:	cmp	x0, #0x0
  40f364:	b.eq	40f370 <__fxstatat@plt+0xc810>  // b.none
  40f368:	ldr	x0, [sp, #160]
  40f36c:	bl	4112d0 <__fxstatat@plt+0xe770>
  40f370:	ldr	x0, [sp, #296]
  40f374:	b	40f3bc <__fxstatat@plt+0xc85c>
  40f378:	nop
  40f37c:	b	40f384 <__fxstatat@plt+0xc824>
  40f380:	nop
  40f384:	ldr	x0, [sp, #280]
  40f388:	bl	4028f0 <free@plt>
  40f38c:	ldr	x0, [sp, #296]
  40f390:	bl	4028f0 <free@plt>
  40f394:	ldr	x0, [sp, #160]
  40f398:	cmp	x0, #0x0
  40f39c:	b.eq	40f3a8 <__fxstatat@plt+0xc848>  // b.none
  40f3a0:	ldr	x0, [sp, #160]
  40f3a4:	bl	4112d0 <__fxstatat@plt+0xe770>
  40f3a8:	bl	402ac0 <__errno_location@plt>
  40f3ac:	mov	x1, x0
  40f3b0:	ldr	w0, [sp, #244]
  40f3b4:	str	w0, [x1]
  40f3b8:	mov	x0, #0x0                   	// #0
  40f3bc:	ldp	x29, x30, [sp], #304
  40f3c0:	ret
  40f3c4:	sub	sp, sp, #0x10
  40f3c8:	str	x0, [sp, #8]
  40f3cc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40f3d0:	add	x0, x0, #0x748
  40f3d4:	ldr	x1, [sp, #8]
  40f3d8:	str	x1, [x0]
  40f3dc:	nop
  40f3e0:	add	sp, sp, #0x10
  40f3e4:	ret
  40f3e8:	sub	sp, sp, #0x10
  40f3ec:	strb	w0, [sp, #15]
  40f3f0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40f3f4:	add	x0, x0, #0x750
  40f3f8:	ldrb	w1, [sp, #15]
  40f3fc:	strb	w1, [x0]
  40f400:	nop
  40f404:	add	sp, sp, #0x10
  40f408:	ret
  40f40c:	stp	x29, x30, [sp, #-48]!
  40f410:	mov	x29, sp
  40f414:	str	x19, [sp, #16]
  40f418:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40f41c:	add	x0, x0, #0x5f8
  40f420:	ldr	x0, [x0]
  40f424:	bl	41c680 <_obstack_memory_used@@Base+0xc30>
  40f428:	cmp	w0, #0x0
  40f42c:	b.eq	40f4e4 <__fxstatat@plt+0xc984>  // b.none
  40f430:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40f434:	add	x0, x0, #0x750
  40f438:	ldrb	w0, [x0]
  40f43c:	eor	w0, w0, #0x1
  40f440:	and	w0, w0, #0xff
  40f444:	cmp	w0, #0x0
  40f448:	b.ne	40f45c <__fxstatat@plt+0xc8fc>  // b.any
  40f44c:	bl	402ac0 <__errno_location@plt>
  40f450:	ldr	w0, [x0]
  40f454:	cmp	w0, #0x20
  40f458:	b.eq	40f4e4 <__fxstatat@plt+0xc984>  // b.none
  40f45c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f460:	add	x0, x0, #0x1f8
  40f464:	bl	402b20 <gettext@plt>
  40f468:	str	x0, [sp, #40]
  40f46c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40f470:	add	x0, x0, #0x748
  40f474:	ldr	x0, [x0]
  40f478:	cmp	x0, #0x0
  40f47c:	b.eq	40f4b8 <__fxstatat@plt+0xc958>  // b.none
  40f480:	bl	402ac0 <__errno_location@plt>
  40f484:	ldr	w19, [x0]
  40f488:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  40f48c:	add	x0, x0, #0x748
  40f490:	ldr	x0, [x0]
  40f494:	bl	418cd8 <__fxstatat@plt+0x16178>
  40f498:	ldr	x4, [sp, #40]
  40f49c:	mov	x3, x0
  40f4a0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f4a4:	add	x2, x0, #0x208
  40f4a8:	mov	w1, w19
  40f4ac:	mov	w0, #0x0                   	// #0
  40f4b0:	bl	402550 <error@plt>
  40f4b4:	b	40f4d4 <__fxstatat@plt+0xc974>
  40f4b8:	bl	402ac0 <__errno_location@plt>
  40f4bc:	ldr	w1, [x0]
  40f4c0:	ldr	x3, [sp, #40]
  40f4c4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f4c8:	add	x2, x0, #0x210
  40f4cc:	mov	w0, #0x0                   	// #0
  40f4d0:	bl	402550 <error@plt>
  40f4d4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40f4d8:	add	x0, x0, #0x570
  40f4dc:	ldr	w0, [x0]
  40f4e0:	bl	4024c0 <_exit@plt>
  40f4e4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40f4e8:	add	x0, x0, #0x5e0
  40f4ec:	ldr	x0, [x0]
  40f4f0:	bl	41c680 <_obstack_memory_used@@Base+0xc30>
  40f4f4:	cmp	w0, #0x0
  40f4f8:	b.eq	40f50c <__fxstatat@plt+0xc9ac>  // b.none
  40f4fc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  40f500:	add	x0, x0, #0x570
  40f504:	ldr	w0, [x0]
  40f508:	bl	4024c0 <_exit@plt>
  40f50c:	nop
  40f510:	ldr	x19, [sp, #16]
  40f514:	ldp	x29, x30, [sp], #48
  40f518:	ret
  40f51c:	stp	x29, x30, [sp, #-48]!
  40f520:	mov	x29, sp
  40f524:	str	x0, [sp, #24]
  40f528:	str	xzr, [sp, #32]
  40f52c:	ldr	x0, [sp, #32]
  40f530:	cmp	x0, #0x0
  40f534:	b.ne	40f558 <__fxstatat@plt+0xc9f8>  // b.any
  40f538:	ldr	x0, [sp, #24]
  40f53c:	ldrb	w0, [x0]
  40f540:	cmp	w0, #0x2f
  40f544:	b.ne	40f550 <__fxstatat@plt+0xc9f0>  // b.any
  40f548:	mov	x0, #0x1                   	// #1
  40f54c:	b	40f55c <__fxstatat@plt+0xc9fc>
  40f550:	mov	x0, #0x0                   	// #0
  40f554:	b	40f55c <__fxstatat@plt+0xc9fc>
  40f558:	mov	x0, #0x0                   	// #0
  40f55c:	ldr	x1, [sp, #32]
  40f560:	add	x0, x1, x0
  40f564:	str	x0, [sp, #32]
  40f568:	ldr	x0, [sp, #24]
  40f56c:	bl	40f678 <__fxstatat@plt+0xcb18>
  40f570:	mov	x1, x0
  40f574:	ldr	x0, [sp, #24]
  40f578:	sub	x0, x1, x0
  40f57c:	str	x0, [sp, #40]
  40f580:	b	40f5ac <__fxstatat@plt+0xca4c>
  40f584:	ldr	x0, [sp, #40]
  40f588:	sub	x0, x0, #0x1
  40f58c:	ldr	x1, [sp, #24]
  40f590:	add	x0, x1, x0
  40f594:	ldrb	w0, [x0]
  40f598:	cmp	w0, #0x2f
  40f59c:	b.ne	40f5c0 <__fxstatat@plt+0xca60>  // b.any
  40f5a0:	ldr	x0, [sp, #40]
  40f5a4:	sub	x0, x0, #0x1
  40f5a8:	str	x0, [sp, #40]
  40f5ac:	ldr	x1, [sp, #32]
  40f5b0:	ldr	x0, [sp, #40]
  40f5b4:	cmp	x1, x0
  40f5b8:	b.cc	40f584 <__fxstatat@plt+0xca24>  // b.lo, b.ul, b.last
  40f5bc:	b	40f5c4 <__fxstatat@plt+0xca64>
  40f5c0:	nop
  40f5c4:	ldr	x0, [sp, #40]
  40f5c8:	ldp	x29, x30, [sp], #48
  40f5cc:	ret
  40f5d0:	stp	x29, x30, [sp, #-64]!
  40f5d4:	mov	x29, sp
  40f5d8:	str	x0, [sp, #24]
  40f5dc:	ldr	x0, [sp, #24]
  40f5e0:	bl	40f51c <__fxstatat@plt+0xc9bc>
  40f5e4:	str	x0, [sp, #56]
  40f5e8:	ldr	x0, [sp, #56]
  40f5ec:	cmp	x0, #0x0
  40f5f0:	cset	w0, eq  // eq = none
  40f5f4:	strb	w0, [sp, #55]
  40f5f8:	ldrb	w1, [sp, #55]
  40f5fc:	ldr	x0, [sp, #56]
  40f600:	add	x0, x1, x0
  40f604:	add	x0, x0, #0x1
  40f608:	bl	4026b0 <malloc@plt>
  40f60c:	str	x0, [sp, #40]
  40f610:	ldr	x0, [sp, #40]
  40f614:	cmp	x0, #0x0
  40f618:	b.ne	40f624 <__fxstatat@plt+0xcac4>  // b.any
  40f61c:	mov	x0, #0x0                   	// #0
  40f620:	b	40f670 <__fxstatat@plt+0xcb10>
  40f624:	ldr	x2, [sp, #56]
  40f628:	ldr	x1, [sp, #24]
  40f62c:	ldr	x0, [sp, #40]
  40f630:	bl	402490 <memcpy@plt>
  40f634:	ldrb	w0, [sp, #55]
  40f638:	cmp	w0, #0x0
  40f63c:	b.eq	40f65c <__fxstatat@plt+0xcafc>  // b.none
  40f640:	ldr	x0, [sp, #56]
  40f644:	add	x1, x0, #0x1
  40f648:	str	x1, [sp, #56]
  40f64c:	ldr	x1, [sp, #40]
  40f650:	add	x0, x1, x0
  40f654:	mov	w1, #0x2e                  	// #46
  40f658:	strb	w1, [x0]
  40f65c:	ldr	x1, [sp, #40]
  40f660:	ldr	x0, [sp, #56]
  40f664:	add	x0, x1, x0
  40f668:	strb	wzr, [x0]
  40f66c:	ldr	x0, [sp, #40]
  40f670:	ldp	x29, x30, [sp], #64
  40f674:	ret
  40f678:	sub	sp, sp, #0x30
  40f67c:	str	x0, [sp, #8]
  40f680:	ldr	x0, [sp, #8]
  40f684:	str	x0, [sp, #40]
  40f688:	strb	wzr, [sp, #31]
  40f68c:	b	40f69c <__fxstatat@plt+0xcb3c>
  40f690:	ldr	x0, [sp, #40]
  40f694:	add	x0, x0, #0x1
  40f698:	str	x0, [sp, #40]
  40f69c:	ldr	x0, [sp, #40]
  40f6a0:	ldrb	w0, [x0]
  40f6a4:	cmp	w0, #0x2f
  40f6a8:	b.eq	40f690 <__fxstatat@plt+0xcb30>  // b.none
  40f6ac:	ldr	x0, [sp, #40]
  40f6b0:	str	x0, [sp, #32]
  40f6b4:	b	40f6f8 <__fxstatat@plt+0xcb98>
  40f6b8:	ldr	x0, [sp, #32]
  40f6bc:	ldrb	w0, [x0]
  40f6c0:	cmp	w0, #0x2f
  40f6c4:	b.ne	40f6d4 <__fxstatat@plt+0xcb74>  // b.any
  40f6c8:	mov	w0, #0x1                   	// #1
  40f6cc:	strb	w0, [sp, #31]
  40f6d0:	b	40f6ec <__fxstatat@plt+0xcb8c>
  40f6d4:	ldrb	w0, [sp, #31]
  40f6d8:	cmp	w0, #0x0
  40f6dc:	b.eq	40f6ec <__fxstatat@plt+0xcb8c>  // b.none
  40f6e0:	ldr	x0, [sp, #32]
  40f6e4:	str	x0, [sp, #40]
  40f6e8:	strb	wzr, [sp, #31]
  40f6ec:	ldr	x0, [sp, #32]
  40f6f0:	add	x0, x0, #0x1
  40f6f4:	str	x0, [sp, #32]
  40f6f8:	ldr	x0, [sp, #32]
  40f6fc:	ldrb	w0, [x0]
  40f700:	cmp	w0, #0x0
  40f704:	b.ne	40f6b8 <__fxstatat@plt+0xcb58>  // b.any
  40f708:	ldr	x0, [sp, #40]
  40f70c:	add	sp, sp, #0x30
  40f710:	ret
  40f714:	stp	x29, x30, [sp, #-48]!
  40f718:	mov	x29, sp
  40f71c:	str	x0, [sp, #24]
  40f720:	str	xzr, [sp, #32]
  40f724:	ldr	x0, [sp, #24]
  40f728:	bl	402500 <strlen@plt>
  40f72c:	str	x0, [sp, #40]
  40f730:	b	40f740 <__fxstatat@plt+0xcbe0>
  40f734:	ldr	x0, [sp, #40]
  40f738:	sub	x0, x0, #0x1
  40f73c:	str	x0, [sp, #40]
  40f740:	ldr	x0, [sp, #40]
  40f744:	cmp	x0, #0x1
  40f748:	b.ls	40f768 <__fxstatat@plt+0xcc08>  // b.plast
  40f74c:	ldr	x0, [sp, #40]
  40f750:	sub	x0, x0, #0x1
  40f754:	ldr	x1, [sp, #24]
  40f758:	add	x0, x1, x0
  40f75c:	ldrb	w0, [x0]
  40f760:	cmp	w0, #0x2f
  40f764:	b.eq	40f734 <__fxstatat@plt+0xcbd4>  // b.none
  40f768:	ldr	x0, [sp, #40]
  40f76c:	ldp	x29, x30, [sp], #48
  40f770:	ret
  40f774:	stp	x29, x30, [sp, #-48]!
  40f778:	mov	x29, sp
  40f77c:	str	x0, [sp, #24]
  40f780:	str	x1, [sp, #16]
  40f784:	ldr	x0, [sp, #16]
  40f788:	ldr	w0, [x0, #16]
  40f78c:	and	w0, w0, #0xf000
  40f790:	cmp	w0, #0xa, lsl #12
  40f794:	b.eq	40f88c <__fxstatat@plt+0xcd2c>  // b.none
  40f798:	mov	x3, #0x0                   	// #0
  40f79c:	mov	x2, #0x0                   	// #0
  40f7a0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f7a4:	add	x1, x0, #0x218
  40f7a8:	ldr	x0, [sp, #24]
  40f7ac:	bl	402850 <getxattr@plt>
  40f7b0:	str	x0, [sp, #40]
  40f7b4:	ldr	x0, [sp, #40]
  40f7b8:	cmp	x0, #0x0
  40f7bc:	b.ge	40f7d8 <__fxstatat@plt+0xcc78>  // b.tcont
  40f7c0:	bl	402ac0 <__errno_location@plt>
  40f7c4:	ldr	w0, [x0]
  40f7c8:	cmp	w0, #0x3d
  40f7cc:	b.ne	40f7d8 <__fxstatat@plt+0xcc78>  // b.any
  40f7d0:	str	xzr, [sp, #40]
  40f7d4:	b	40f7ec <__fxstatat@plt+0xcc8c>
  40f7d8:	ldr	x0, [sp, #40]
  40f7dc:	cmp	x0, #0x0
  40f7e0:	b.le	40f7ec <__fxstatat@plt+0xcc8c>
  40f7e4:	mov	w0, #0x1                   	// #1
  40f7e8:	b	40f890 <__fxstatat@plt+0xcd30>
  40f7ec:	ldr	x0, [sp, #40]
  40f7f0:	cmp	x0, #0x0
  40f7f4:	b.ne	40f860 <__fxstatat@plt+0xcd00>  // b.any
  40f7f8:	ldr	x0, [sp, #16]
  40f7fc:	ldr	w0, [x0, #16]
  40f800:	and	w0, w0, #0xf000
  40f804:	cmp	w0, #0x4, lsl #12
  40f808:	b.ne	40f860 <__fxstatat@plt+0xcd00>  // b.any
  40f80c:	mov	x3, #0x0                   	// #0
  40f810:	mov	x2, #0x0                   	// #0
  40f814:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  40f818:	add	x1, x0, #0x230
  40f81c:	ldr	x0, [sp, #24]
  40f820:	bl	402850 <getxattr@plt>
  40f824:	str	x0, [sp, #40]
  40f828:	ldr	x0, [sp, #40]
  40f82c:	cmp	x0, #0x0
  40f830:	b.ge	40f84c <__fxstatat@plt+0xccec>  // b.tcont
  40f834:	bl	402ac0 <__errno_location@plt>
  40f838:	ldr	w0, [x0]
  40f83c:	cmp	w0, #0x3d
  40f840:	b.ne	40f84c <__fxstatat@plt+0xccec>  // b.any
  40f844:	str	xzr, [sp, #40]
  40f848:	b	40f860 <__fxstatat@plt+0xcd00>
  40f84c:	ldr	x0, [sp, #40]
  40f850:	cmp	x0, #0x0
  40f854:	b.le	40f860 <__fxstatat@plt+0xcd00>
  40f858:	mov	w0, #0x1                   	// #1
  40f85c:	b	40f890 <__fxstatat@plt+0xcd30>
  40f860:	ldr	x0, [sp, #40]
  40f864:	cmp	x0, #0x0
  40f868:	b.ge	40f884 <__fxstatat@plt+0xcd24>  // b.tcont
  40f86c:	bl	402ac0 <__errno_location@plt>
  40f870:	ldr	w0, [x0]
  40f874:	bl	41c360 <_obstack_memory_used@@Base+0x910>
  40f878:	and	w0, w0, #0xff
  40f87c:	neg	w0, w0
  40f880:	b	40f890 <__fxstatat@plt+0xcd30>
  40f884:	ldr	x0, [sp, #40]
  40f888:	b	40f890 <__fxstatat@plt+0xcd30>
  40f88c:	mov	w0, #0x0                   	// #0
  40f890:	ldp	x29, x30, [sp], #48
  40f894:	ret
  40f898:	stp	x29, x30, [sp, #-64]!
  40f89c:	mov	x29, sp
  40f8a0:	str	x0, [sp, #40]
  40f8a4:	str	x1, [sp, #32]
  40f8a8:	str	x2, [sp, #24]
  40f8ac:	ldr	x0, [sp, #40]
  40f8b0:	cmp	x0, #0x0
  40f8b4:	b.eq	40f934 <__fxstatat@plt+0xcdd4>  // b.none
  40f8b8:	mov	x0, #0x18                  	// #24
  40f8bc:	bl	41a080 <__fxstatat@plt+0x17520>
  40f8c0:	str	x0, [sp, #56]
  40f8c4:	ldr	x0, [sp, #32]
  40f8c8:	bl	41a234 <__fxstatat@plt+0x176d4>
  40f8cc:	mov	x1, x0
  40f8d0:	ldr	x0, [sp, #56]
  40f8d4:	str	x1, [x0]
  40f8d8:	ldr	x0, [sp, #24]
  40f8dc:	ldr	x1, [x0, #8]
  40f8e0:	ldr	x0, [sp, #56]
  40f8e4:	str	x1, [x0, #8]
  40f8e8:	ldr	x0, [sp, #24]
  40f8ec:	ldr	x1, [x0]
  40f8f0:	ldr	x0, [sp, #56]
  40f8f4:	str	x1, [x0, #16]
  40f8f8:	ldr	x1, [sp, #56]
  40f8fc:	ldr	x0, [sp, #40]
  40f900:	bl	411cb0 <__fxstatat@plt+0xf150>
  40f904:	str	x0, [sp, #48]
  40f908:	ldr	x0, [sp, #48]
  40f90c:	cmp	x0, #0x0
  40f910:	b.ne	40f918 <__fxstatat@plt+0xcdb8>  // b.any
  40f914:	bl	41a260 <__fxstatat@plt+0x17700>
  40f918:	ldr	x1, [sp, #48]
  40f91c:	ldr	x0, [sp, #56]
  40f920:	cmp	x1, x0
  40f924:	b.eq	40f938 <__fxstatat@plt+0xcdd8>  // b.none
  40f928:	ldr	x0, [sp, #56]
  40f92c:	bl	412074 <__fxstatat@plt+0xf514>
  40f930:	b	40f938 <__fxstatat@plt+0xcdd8>
  40f934:	nop
  40f938:	ldp	x29, x30, [sp], #64
  40f93c:	ret
  40f940:	stp	x29, x30, [sp, #-80]!
  40f944:	mov	x29, sp
  40f948:	str	x0, [sp, #40]
  40f94c:	str	x1, [sp, #32]
  40f950:	str	x2, [sp, #24]
  40f954:	ldr	x0, [sp, #40]
  40f958:	cmp	x0, #0x0
  40f95c:	b.ne	40f968 <__fxstatat@plt+0xce08>  // b.any
  40f960:	mov	w0, #0x0                   	// #0
  40f964:	b	40f9a4 <__fxstatat@plt+0xce44>
  40f968:	ldr	x0, [sp, #32]
  40f96c:	str	x0, [sp, #56]
  40f970:	ldr	x0, [sp, #24]
  40f974:	ldr	x0, [x0, #8]
  40f978:	str	x0, [sp, #64]
  40f97c:	ldr	x0, [sp, #24]
  40f980:	ldr	x0, [x0]
  40f984:	str	x0, [sp, #72]
  40f988:	add	x0, sp, #0x38
  40f98c:	mov	x1, x0
  40f990:	ldr	x0, [sp, #40]
  40f994:	bl	4108bc <__fxstatat@plt+0xdd5c>
  40f998:	cmp	x0, #0x0
  40f99c:	cset	w0, ne  // ne = any
  40f9a0:	and	w0, w0, #0xff
  40f9a4:	ldp	x29, x30, [sp], #80
  40f9a8:	ret
  40f9ac:	sub	sp, sp, #0x10
  40f9b0:	str	w0, [sp, #12]
  40f9b4:	ldr	w0, [sp, #12]
  40f9b8:	and	w0, w0, #0xf000
  40f9bc:	cmp	w0, #0x8, lsl #12
  40f9c0:	b.ne	40f9cc <__fxstatat@plt+0xce6c>  // b.any
  40f9c4:	mov	w0, #0x2d                  	// #45
  40f9c8:	b	40fa60 <__fxstatat@plt+0xcf00>
  40f9cc:	ldr	w0, [sp, #12]
  40f9d0:	and	w0, w0, #0xf000
  40f9d4:	cmp	w0, #0x4, lsl #12
  40f9d8:	b.ne	40f9e4 <__fxstatat@plt+0xce84>  // b.any
  40f9dc:	mov	w0, #0x64                  	// #100
  40f9e0:	b	40fa60 <__fxstatat@plt+0xcf00>
  40f9e4:	ldr	w0, [sp, #12]
  40f9e8:	and	w0, w0, #0xf000
  40f9ec:	cmp	w0, #0x6, lsl #12
  40f9f0:	b.ne	40f9fc <__fxstatat@plt+0xce9c>  // b.any
  40f9f4:	mov	w0, #0x62                  	// #98
  40f9f8:	b	40fa60 <__fxstatat@plt+0xcf00>
  40f9fc:	ldr	w0, [sp, #12]
  40fa00:	and	w0, w0, #0xf000
  40fa04:	cmp	w0, #0x2, lsl #12
  40fa08:	b.ne	40fa14 <__fxstatat@plt+0xceb4>  // b.any
  40fa0c:	mov	w0, #0x63                  	// #99
  40fa10:	b	40fa60 <__fxstatat@plt+0xcf00>
  40fa14:	ldr	w0, [sp, #12]
  40fa18:	and	w0, w0, #0xf000
  40fa1c:	cmp	w0, #0xa, lsl #12
  40fa20:	b.ne	40fa2c <__fxstatat@plt+0xcecc>  // b.any
  40fa24:	mov	w0, #0x6c                  	// #108
  40fa28:	b	40fa60 <__fxstatat@plt+0xcf00>
  40fa2c:	ldr	w0, [sp, #12]
  40fa30:	and	w0, w0, #0xf000
  40fa34:	cmp	w0, #0x1, lsl #12
  40fa38:	b.ne	40fa44 <__fxstatat@plt+0xcee4>  // b.any
  40fa3c:	mov	w0, #0x70                  	// #112
  40fa40:	b	40fa60 <__fxstatat@plt+0xcf00>
  40fa44:	ldr	w0, [sp, #12]
  40fa48:	and	w0, w0, #0xf000
  40fa4c:	cmp	w0, #0xc, lsl #12
  40fa50:	b.ne	40fa5c <__fxstatat@plt+0xcefc>  // b.any
  40fa54:	mov	w0, #0x73                  	// #115
  40fa58:	b	40fa60 <__fxstatat@plt+0xcf00>
  40fa5c:	mov	w0, #0x3f                  	// #63
  40fa60:	add	sp, sp, #0x10
  40fa64:	ret
  40fa68:	stp	x29, x30, [sp, #-32]!
  40fa6c:	mov	x29, sp
  40fa70:	str	w0, [sp, #28]
  40fa74:	str	x1, [sp, #16]
  40fa78:	ldr	w0, [sp, #28]
  40fa7c:	bl	40f9ac <__fxstatat@plt+0xce4c>
  40fa80:	and	w1, w0, #0xff
  40fa84:	ldr	x0, [sp, #16]
  40fa88:	strb	w1, [x0]
  40fa8c:	ldr	w0, [sp, #28]
  40fa90:	and	w0, w0, #0x100
  40fa94:	cmp	w0, #0x0
  40fa98:	b.eq	40faa4 <__fxstatat@plt+0xcf44>  // b.none
  40fa9c:	mov	w0, #0x72                  	// #114
  40faa0:	b	40faa8 <__fxstatat@plt+0xcf48>
  40faa4:	mov	w0, #0x2d                  	// #45
  40faa8:	ldr	x1, [sp, #16]
  40faac:	add	x1, x1, #0x1
  40fab0:	strb	w0, [x1]
  40fab4:	ldr	w0, [sp, #28]
  40fab8:	and	w0, w0, #0x80
  40fabc:	cmp	w0, #0x0
  40fac0:	b.eq	40facc <__fxstatat@plt+0xcf6c>  // b.none
  40fac4:	mov	w0, #0x77                  	// #119
  40fac8:	b	40fad0 <__fxstatat@plt+0xcf70>
  40facc:	mov	w0, #0x2d                  	// #45
  40fad0:	ldr	x1, [sp, #16]
  40fad4:	add	x1, x1, #0x2
  40fad8:	strb	w0, [x1]
  40fadc:	ldr	w0, [sp, #28]
  40fae0:	and	w0, w0, #0x800
  40fae4:	cmp	w0, #0x0
  40fae8:	b.eq	40fb0c <__fxstatat@plt+0xcfac>  // b.none
  40faec:	ldr	w0, [sp, #28]
  40faf0:	and	w0, w0, #0x40
  40faf4:	cmp	w0, #0x0
  40faf8:	b.eq	40fb04 <__fxstatat@plt+0xcfa4>  // b.none
  40fafc:	mov	w0, #0x73                  	// #115
  40fb00:	b	40fb28 <__fxstatat@plt+0xcfc8>
  40fb04:	mov	w0, #0x53                  	// #83
  40fb08:	b	40fb28 <__fxstatat@plt+0xcfc8>
  40fb0c:	ldr	w0, [sp, #28]
  40fb10:	and	w0, w0, #0x40
  40fb14:	cmp	w0, #0x0
  40fb18:	b.eq	40fb24 <__fxstatat@plt+0xcfc4>  // b.none
  40fb1c:	mov	w0, #0x78                  	// #120
  40fb20:	b	40fb28 <__fxstatat@plt+0xcfc8>
  40fb24:	mov	w0, #0x2d                  	// #45
  40fb28:	ldr	x1, [sp, #16]
  40fb2c:	add	x1, x1, #0x3
  40fb30:	strb	w0, [x1]
  40fb34:	ldr	w0, [sp, #28]
  40fb38:	and	w0, w0, #0x20
  40fb3c:	cmp	w0, #0x0
  40fb40:	b.eq	40fb4c <__fxstatat@plt+0xcfec>  // b.none
  40fb44:	mov	w0, #0x72                  	// #114
  40fb48:	b	40fb50 <__fxstatat@plt+0xcff0>
  40fb4c:	mov	w0, #0x2d                  	// #45
  40fb50:	ldr	x1, [sp, #16]
  40fb54:	add	x1, x1, #0x4
  40fb58:	strb	w0, [x1]
  40fb5c:	ldr	w0, [sp, #28]
  40fb60:	and	w0, w0, #0x10
  40fb64:	cmp	w0, #0x0
  40fb68:	b.eq	40fb74 <__fxstatat@plt+0xd014>  // b.none
  40fb6c:	mov	w0, #0x77                  	// #119
  40fb70:	b	40fb78 <__fxstatat@plt+0xd018>
  40fb74:	mov	w0, #0x2d                  	// #45
  40fb78:	ldr	x1, [sp, #16]
  40fb7c:	add	x1, x1, #0x5
  40fb80:	strb	w0, [x1]
  40fb84:	ldr	w0, [sp, #28]
  40fb88:	and	w0, w0, #0x400
  40fb8c:	cmp	w0, #0x0
  40fb90:	b.eq	40fbb4 <__fxstatat@plt+0xd054>  // b.none
  40fb94:	ldr	w0, [sp, #28]
  40fb98:	and	w0, w0, #0x8
  40fb9c:	cmp	w0, #0x0
  40fba0:	b.eq	40fbac <__fxstatat@plt+0xd04c>  // b.none
  40fba4:	mov	w0, #0x73                  	// #115
  40fba8:	b	40fbd0 <__fxstatat@plt+0xd070>
  40fbac:	mov	w0, #0x53                  	// #83
  40fbb0:	b	40fbd0 <__fxstatat@plt+0xd070>
  40fbb4:	ldr	w0, [sp, #28]
  40fbb8:	and	w0, w0, #0x8
  40fbbc:	cmp	w0, #0x0
  40fbc0:	b.eq	40fbcc <__fxstatat@plt+0xd06c>  // b.none
  40fbc4:	mov	w0, #0x78                  	// #120
  40fbc8:	b	40fbd0 <__fxstatat@plt+0xd070>
  40fbcc:	mov	w0, #0x2d                  	// #45
  40fbd0:	ldr	x1, [sp, #16]
  40fbd4:	add	x1, x1, #0x6
  40fbd8:	strb	w0, [x1]
  40fbdc:	ldr	w0, [sp, #28]
  40fbe0:	and	w0, w0, #0x4
  40fbe4:	cmp	w0, #0x0
  40fbe8:	b.eq	40fbf4 <__fxstatat@plt+0xd094>  // b.none
  40fbec:	mov	w0, #0x72                  	// #114
  40fbf0:	b	40fbf8 <__fxstatat@plt+0xd098>
  40fbf4:	mov	w0, #0x2d                  	// #45
  40fbf8:	ldr	x1, [sp, #16]
  40fbfc:	add	x1, x1, #0x7
  40fc00:	strb	w0, [x1]
  40fc04:	ldr	w0, [sp, #28]
  40fc08:	and	w0, w0, #0x2
  40fc0c:	cmp	w0, #0x0
  40fc10:	b.eq	40fc1c <__fxstatat@plt+0xd0bc>  // b.none
  40fc14:	mov	w0, #0x77                  	// #119
  40fc18:	b	40fc20 <__fxstatat@plt+0xd0c0>
  40fc1c:	mov	w0, #0x2d                  	// #45
  40fc20:	ldr	x1, [sp, #16]
  40fc24:	add	x1, x1, #0x8
  40fc28:	strb	w0, [x1]
  40fc2c:	ldr	w0, [sp, #28]
  40fc30:	and	w0, w0, #0x200
  40fc34:	cmp	w0, #0x0
  40fc38:	b.eq	40fc5c <__fxstatat@plt+0xd0fc>  // b.none
  40fc3c:	ldr	w0, [sp, #28]
  40fc40:	and	w0, w0, #0x1
  40fc44:	cmp	w0, #0x0
  40fc48:	b.eq	40fc54 <__fxstatat@plt+0xd0f4>  // b.none
  40fc4c:	mov	w0, #0x74                  	// #116
  40fc50:	b	40fc78 <__fxstatat@plt+0xd118>
  40fc54:	mov	w0, #0x54                  	// #84
  40fc58:	b	40fc78 <__fxstatat@plt+0xd118>
  40fc5c:	ldr	w0, [sp, #28]
  40fc60:	and	w0, w0, #0x1
  40fc64:	cmp	w0, #0x0
  40fc68:	b.eq	40fc74 <__fxstatat@plt+0xd114>  // b.none
  40fc6c:	mov	w0, #0x78                  	// #120
  40fc70:	b	40fc78 <__fxstatat@plt+0xd118>
  40fc74:	mov	w0, #0x2d                  	// #45
  40fc78:	ldr	x1, [sp, #16]
  40fc7c:	add	x1, x1, #0x9
  40fc80:	strb	w0, [x1]
  40fc84:	ldr	x0, [sp, #16]
  40fc88:	add	x0, x0, #0xa
  40fc8c:	mov	w1, #0x20                  	// #32
  40fc90:	strb	w1, [x0]
  40fc94:	ldr	x0, [sp, #16]
  40fc98:	add	x0, x0, #0xb
  40fc9c:	strb	wzr, [x0]
  40fca0:	nop
  40fca4:	ldp	x29, x30, [sp], #32
  40fca8:	ret
  40fcac:	stp	x29, x30, [sp, #-32]!
  40fcb0:	mov	x29, sp
  40fcb4:	str	x0, [sp, #24]
  40fcb8:	str	x1, [sp, #16]
  40fcbc:	ldr	x0, [sp, #24]
  40fcc0:	ldr	w0, [x0, #16]
  40fcc4:	ldr	x1, [sp, #16]
  40fcc8:	bl	40fa68 <__fxstatat@plt+0xcf08>
  40fccc:	nop
  40fcd0:	ldp	x29, x30, [sp], #32
  40fcd4:	ret
  40fcd8:	stp	x29, x30, [sp, #-64]!
  40fcdc:	mov	x29, sp
  40fce0:	str	x0, [sp, #40]
  40fce4:	str	x1, [sp, #32]
  40fce8:	str	x2, [sp, #24]
  40fcec:	ldr	x2, [sp, #24]
  40fcf0:	ldr	x1, [sp, #32]
  40fcf4:	ldr	x0, [sp, #40]
  40fcf8:	bl	40fd1c <__fxstatat@plt+0xd1bc>
  40fcfc:	str	x0, [sp, #56]
  40fd00:	ldr	x0, [sp, #56]
  40fd04:	cmp	x0, #0x0
  40fd08:	b.ne	40fd10 <__fxstatat@plt+0xd1b0>  // b.any
  40fd0c:	bl	41a260 <__fxstatat@plt+0x17700>
  40fd10:	ldr	x0, [sp, #56]
  40fd14:	ldp	x29, x30, [sp], #64
  40fd18:	ret
  40fd1c:	stp	x29, x30, [sp, #-112]!
  40fd20:	mov	x29, sp
  40fd24:	str	x0, [sp, #40]
  40fd28:	str	x1, [sp, #32]
  40fd2c:	str	x2, [sp, #24]
  40fd30:	ldr	x0, [sp, #40]
  40fd34:	bl	40f678 <__fxstatat@plt+0xcb18>
  40fd38:	str	x0, [sp, #96]
  40fd3c:	ldr	x0, [sp, #96]
  40fd40:	bl	40f714 <__fxstatat@plt+0xcbb4>
  40fd44:	str	x0, [sp, #88]
  40fd48:	ldr	x1, [sp, #96]
  40fd4c:	ldr	x0, [sp, #40]
  40fd50:	sub	x0, x1, x0
  40fd54:	mov	x1, x0
  40fd58:	ldr	x0, [sp, #88]
  40fd5c:	add	x0, x0, x1
  40fd60:	str	x0, [sp, #80]
  40fd64:	ldr	x0, [sp, #32]
  40fd68:	bl	402500 <strlen@plt>
  40fd6c:	str	x0, [sp, #72]
  40fd70:	strb	wzr, [sp, #111]
  40fd74:	ldr	x0, [sp, #88]
  40fd78:	cmp	x0, #0x0
  40fd7c:	b.eq	40fdb8 <__fxstatat@plt+0xd258>  // b.none
  40fd80:	ldr	x0, [sp, #80]
  40fd84:	sub	x0, x0, #0x1
  40fd88:	ldr	x1, [sp, #40]
  40fd8c:	add	x0, x1, x0
  40fd90:	ldrb	w0, [x0]
  40fd94:	cmp	w0, #0x2f
  40fd98:	b.eq	40fdd0 <__fxstatat@plt+0xd270>  // b.none
  40fd9c:	ldr	x0, [sp, #32]
  40fda0:	ldrb	w0, [x0]
  40fda4:	cmp	w0, #0x2f
  40fda8:	b.eq	40fdd0 <__fxstatat@plt+0xd270>  // b.none
  40fdac:	mov	w0, #0x2f                  	// #47
  40fdb0:	strb	w0, [sp, #111]
  40fdb4:	b	40fdd0 <__fxstatat@plt+0xd270>
  40fdb8:	ldr	x0, [sp, #32]
  40fdbc:	ldrb	w0, [x0]
  40fdc0:	cmp	w0, #0x2f
  40fdc4:	b.ne	40fdd0 <__fxstatat@plt+0xd270>  // b.any
  40fdc8:	mov	w0, #0x2e                  	// #46
  40fdcc:	strb	w0, [sp, #111]
  40fdd0:	ldrb	w0, [sp, #111]
  40fdd4:	cmp	w0, #0x0
  40fdd8:	cset	w0, ne  // ne = any
  40fddc:	and	w0, w0, #0xff
  40fde0:	and	x1, x0, #0xff
  40fde4:	ldr	x0, [sp, #80]
  40fde8:	add	x1, x1, x0
  40fdec:	ldr	x0, [sp, #72]
  40fdf0:	add	x0, x1, x0
  40fdf4:	add	x0, x0, #0x1
  40fdf8:	bl	4026b0 <malloc@plt>
  40fdfc:	str	x0, [sp, #64]
  40fe00:	ldr	x0, [sp, #64]
  40fe04:	cmp	x0, #0x0
  40fe08:	b.ne	40fe14 <__fxstatat@plt+0xd2b4>  // b.any
  40fe0c:	mov	x0, #0x0                   	// #0
  40fe10:	b	40fe8c <__fxstatat@plt+0xd32c>
  40fe14:	ldr	x2, [sp, #80]
  40fe18:	ldr	x1, [sp, #40]
  40fe1c:	ldr	x0, [sp, #64]
  40fe20:	bl	402910 <mempcpy@plt>
  40fe24:	str	x0, [sp, #56]
  40fe28:	ldr	x0, [sp, #56]
  40fe2c:	ldrb	w1, [sp, #111]
  40fe30:	strb	w1, [x0]
  40fe34:	ldrb	w0, [sp, #111]
  40fe38:	cmp	w0, #0x0
  40fe3c:	cset	w0, ne  // ne = any
  40fe40:	and	w0, w0, #0xff
  40fe44:	and	x0, x0, #0xff
  40fe48:	ldr	x1, [sp, #56]
  40fe4c:	add	x0, x1, x0
  40fe50:	str	x0, [sp, #56]
  40fe54:	ldr	x0, [sp, #24]
  40fe58:	cmp	x0, #0x0
  40fe5c:	b.eq	40fe6c <__fxstatat@plt+0xd30c>  // b.none
  40fe60:	ldr	x0, [sp, #24]
  40fe64:	ldr	x1, [sp, #56]
  40fe68:	str	x1, [x0]
  40fe6c:	ldr	x2, [sp, #72]
  40fe70:	ldr	x1, [sp, #32]
  40fe74:	ldr	x0, [sp, #56]
  40fe78:	bl	402910 <mempcpy@plt>
  40fe7c:	str	x0, [sp, #56]
  40fe80:	ldr	x0, [sp, #56]
  40fe84:	strb	wzr, [x0]
  40fe88:	ldr	x0, [sp, #64]
  40fe8c:	ldp	x29, x30, [sp], #112
  40fe90:	ret
  40fe94:	stp	x29, x30, [sp, #-48]!
  40fe98:	mov	x29, sp
  40fe9c:	str	x0, [sp, #24]
  40fea0:	str	xzr, [sp, #40]
  40fea4:	strb	wzr, [sp, #39]
  40fea8:	b	40ff84 <__fxstatat@plt+0xd424>
  40feac:	ldrb	w0, [sp, #39]
  40feb0:	cmp	w0, #0x0
  40feb4:	b.eq	40fefc <__fxstatat@plt+0xd39c>  // b.none
  40feb8:	strb	wzr, [sp, #39]
  40febc:	ldr	x0, [sp, #24]
  40fec0:	ldr	x0, [x0]
  40fec4:	ldrb	w0, [x0]
  40fec8:	bl	40e68c <__fxstatat@plt+0xbb2c>
  40fecc:	and	w0, w0, #0xff
  40fed0:	eor	w0, w0, #0x1
  40fed4:	and	w0, w0, #0xff
  40fed8:	cmp	w0, #0x0
  40fedc:	b.eq	40ff70 <__fxstatat@plt+0xd410>  // b.none
  40fee0:	ldr	x0, [sp, #24]
  40fee4:	ldr	x0, [x0]
  40fee8:	ldrb	w0, [x0]
  40feec:	cmp	w0, #0x7e
  40fef0:	b.eq	40ff70 <__fxstatat@plt+0xd410>  // b.none
  40fef4:	str	xzr, [sp, #40]
  40fef8:	b	40ff70 <__fxstatat@plt+0xd410>
  40fefc:	ldr	x0, [sp, #24]
  40ff00:	ldr	x0, [x0]
  40ff04:	ldrb	w0, [x0]
  40ff08:	cmp	w0, #0x2e
  40ff0c:	b.ne	40ff34 <__fxstatat@plt+0xd3d4>  // b.any
  40ff10:	mov	w0, #0x1                   	// #1
  40ff14:	strb	w0, [sp, #39]
  40ff18:	ldr	x0, [sp, #40]
  40ff1c:	cmp	x0, #0x0
  40ff20:	b.ne	40ff70 <__fxstatat@plt+0xd410>  // b.any
  40ff24:	ldr	x0, [sp, #24]
  40ff28:	ldr	x0, [x0]
  40ff2c:	str	x0, [sp, #40]
  40ff30:	b	40ff70 <__fxstatat@plt+0xd410>
  40ff34:	ldr	x0, [sp, #24]
  40ff38:	ldr	x0, [x0]
  40ff3c:	ldrb	w0, [x0]
  40ff40:	bl	40e62c <__fxstatat@plt+0xbacc>
  40ff44:	and	w0, w0, #0xff
  40ff48:	eor	w0, w0, #0x1
  40ff4c:	and	w0, w0, #0xff
  40ff50:	cmp	w0, #0x0
  40ff54:	b.eq	40ff70 <__fxstatat@plt+0xd410>  // b.none
  40ff58:	ldr	x0, [sp, #24]
  40ff5c:	ldr	x0, [x0]
  40ff60:	ldrb	w0, [x0]
  40ff64:	cmp	w0, #0x7e
  40ff68:	b.eq	40ff70 <__fxstatat@plt+0xd410>  // b.none
  40ff6c:	str	xzr, [sp, #40]
  40ff70:	ldr	x0, [sp, #24]
  40ff74:	ldr	x0, [x0]
  40ff78:	add	x1, x0, #0x1
  40ff7c:	ldr	x0, [sp, #24]
  40ff80:	str	x1, [x0]
  40ff84:	ldr	x0, [sp, #24]
  40ff88:	ldr	x0, [x0]
  40ff8c:	ldrb	w0, [x0]
  40ff90:	cmp	w0, #0x0
  40ff94:	b.ne	40feac <__fxstatat@plt+0xd34c>  // b.any
  40ff98:	ldr	x0, [sp, #40]
  40ff9c:	ldp	x29, x30, [sp], #48
  40ffa0:	ret
  40ffa4:	stp	x29, x30, [sp, #-32]!
  40ffa8:	mov	x29, sp
  40ffac:	strb	w0, [sp, #31]
  40ffb0:	ldrb	w0, [sp, #31]
  40ffb4:	bl	40e77c <__fxstatat@plt+0xbc1c>
  40ffb8:	and	w0, w0, #0xff
  40ffbc:	cmp	w0, #0x0
  40ffc0:	b.eq	40ffcc <__fxstatat@plt+0xd46c>  // b.none
  40ffc4:	mov	w0, #0x0                   	// #0
  40ffc8:	b	410004 <__fxstatat@plt+0xd4a4>
  40ffcc:	ldrb	w0, [sp, #31]
  40ffd0:	bl	40e68c <__fxstatat@plt+0xbb2c>
  40ffd4:	and	w0, w0, #0xff
  40ffd8:	cmp	w0, #0x0
  40ffdc:	b.eq	40ffe8 <__fxstatat@plt+0xd488>  // b.none
  40ffe0:	ldrb	w0, [sp, #31]
  40ffe4:	b	410004 <__fxstatat@plt+0xd4a4>
  40ffe8:	ldrb	w0, [sp, #31]
  40ffec:	cmp	w0, #0x7e
  40fff0:	b.ne	40fffc <__fxstatat@plt+0xd49c>  // b.any
  40fff4:	mov	w0, #0xffffffff            	// #-1
  40fff8:	b	410004 <__fxstatat@plt+0xd4a4>
  40fffc:	ldrb	w0, [sp, #31]
  410000:	add	w0, w0, #0x100
  410004:	ldp	x29, x30, [sp], #32
  410008:	ret
  41000c:	stp	x29, x30, [sp, #-80]!
  410010:	mov	x29, sp
  410014:	str	x0, [sp, #40]
  410018:	str	x1, [sp, #32]
  41001c:	str	x2, [sp, #24]
  410020:	str	x3, [sp, #16]
  410024:	str	xzr, [sp, #72]
  410028:	str	xzr, [sp, #64]
  41002c:	b	410288 <__fxstatat@plt+0xd728>
  410030:	str	wzr, [sp, #60]
  410034:	b	4100d0 <__fxstatat@plt+0xd570>
  410038:	ldr	x1, [sp, #72]
  41003c:	ldr	x0, [sp, #32]
  410040:	cmp	x1, x0
  410044:	b.eq	410060 <__fxstatat@plt+0xd500>  // b.none
  410048:	ldr	x1, [sp, #40]
  41004c:	ldr	x0, [sp, #72]
  410050:	add	x0, x1, x0
  410054:	ldrb	w0, [x0]
  410058:	bl	40ffa4 <__fxstatat@plt+0xd444>
  41005c:	b	410064 <__fxstatat@plt+0xd504>
  410060:	mov	w0, #0x0                   	// #0
  410064:	str	w0, [sp, #56]
  410068:	ldr	x1, [sp, #64]
  41006c:	ldr	x0, [sp, #16]
  410070:	cmp	x1, x0
  410074:	b.eq	410090 <__fxstatat@plt+0xd530>  // b.none
  410078:	ldr	x1, [sp, #24]
  41007c:	ldr	x0, [sp, #64]
  410080:	add	x0, x1, x0
  410084:	ldrb	w0, [x0]
  410088:	bl	40ffa4 <__fxstatat@plt+0xd444>
  41008c:	b	410094 <__fxstatat@plt+0xd534>
  410090:	mov	w0, #0x0                   	// #0
  410094:	str	w0, [sp, #52]
  410098:	ldr	w1, [sp, #56]
  41009c:	ldr	w0, [sp, #52]
  4100a0:	cmp	w1, w0
  4100a4:	b.eq	4100b8 <__fxstatat@plt+0xd558>  // b.none
  4100a8:	ldr	w1, [sp, #56]
  4100ac:	ldr	w0, [sp, #52]
  4100b0:	sub	w0, w1, w0
  4100b4:	b	4102ac <__fxstatat@plt+0xd74c>
  4100b8:	ldr	x0, [sp, #72]
  4100bc:	add	x0, x0, #0x1
  4100c0:	str	x0, [sp, #72]
  4100c4:	ldr	x0, [sp, #64]
  4100c8:	add	x0, x0, #0x1
  4100cc:	str	x0, [sp, #64]
  4100d0:	ldr	x1, [sp, #72]
  4100d4:	ldr	x0, [sp, #32]
  4100d8:	cmp	x1, x0
  4100dc:	b.cs	410108 <__fxstatat@plt+0xd5a8>  // b.hs, b.nlast
  4100e0:	ldr	x1, [sp, #40]
  4100e4:	ldr	x0, [sp, #72]
  4100e8:	add	x0, x1, x0
  4100ec:	ldrb	w0, [x0]
  4100f0:	bl	40e77c <__fxstatat@plt+0xbc1c>
  4100f4:	and	w0, w0, #0xff
  4100f8:	eor	w0, w0, #0x1
  4100fc:	and	w0, w0, #0xff
  410100:	cmp	w0, #0x0
  410104:	b.ne	410038 <__fxstatat@plt+0xd4d8>  // b.any
  410108:	ldr	x1, [sp, #64]
  41010c:	ldr	x0, [sp, #16]
  410110:	cmp	x1, x0
  410114:	b.cs	410150 <__fxstatat@plt+0xd5f0>  // b.hs, b.nlast
  410118:	ldr	x1, [sp, #24]
  41011c:	ldr	x0, [sp, #64]
  410120:	add	x0, x1, x0
  410124:	ldrb	w0, [x0]
  410128:	bl	40e77c <__fxstatat@plt+0xbc1c>
  41012c:	and	w0, w0, #0xff
  410130:	eor	w0, w0, #0x1
  410134:	and	w0, w0, #0xff
  410138:	cmp	w0, #0x0
  41013c:	b.ne	410038 <__fxstatat@plt+0xd4d8>  // b.any
  410140:	b	410150 <__fxstatat@plt+0xd5f0>
  410144:	ldr	x0, [sp, #72]
  410148:	add	x0, x0, #0x1
  41014c:	str	x0, [sp, #72]
  410150:	ldr	x1, [sp, #40]
  410154:	ldr	x0, [sp, #72]
  410158:	add	x0, x1, x0
  41015c:	ldrb	w0, [x0]
  410160:	cmp	w0, #0x30
  410164:	b.eq	410144 <__fxstatat@plt+0xd5e4>  // b.none
  410168:	b	410178 <__fxstatat@plt+0xd618>
  41016c:	ldr	x0, [sp, #64]
  410170:	add	x0, x0, #0x1
  410174:	str	x0, [sp, #64]
  410178:	ldr	x1, [sp, #24]
  41017c:	ldr	x0, [sp, #64]
  410180:	add	x0, x1, x0
  410184:	ldrb	w0, [x0]
  410188:	cmp	w0, #0x30
  41018c:	b.eq	41016c <__fxstatat@plt+0xd60c>  // b.none
  410190:	b	4101e4 <__fxstatat@plt+0xd684>
  410194:	ldr	w0, [sp, #60]
  410198:	cmp	w0, #0x0
  41019c:	b.ne	4101cc <__fxstatat@plt+0xd66c>  // b.any
  4101a0:	ldr	x1, [sp, #40]
  4101a4:	ldr	x0, [sp, #72]
  4101a8:	add	x0, x1, x0
  4101ac:	ldrb	w0, [x0]
  4101b0:	mov	w2, w0
  4101b4:	ldr	x1, [sp, #24]
  4101b8:	ldr	x0, [sp, #64]
  4101bc:	add	x0, x1, x0
  4101c0:	ldrb	w0, [x0]
  4101c4:	sub	w0, w2, w0
  4101c8:	str	w0, [sp, #60]
  4101cc:	ldr	x0, [sp, #72]
  4101d0:	add	x0, x0, #0x1
  4101d4:	str	x0, [sp, #72]
  4101d8:	ldr	x0, [sp, #64]
  4101dc:	add	x0, x0, #0x1
  4101e0:	str	x0, [sp, #64]
  4101e4:	ldr	x1, [sp, #40]
  4101e8:	ldr	x0, [sp, #72]
  4101ec:	add	x0, x1, x0
  4101f0:	ldrb	w0, [x0]
  4101f4:	bl	40e77c <__fxstatat@plt+0xbc1c>
  4101f8:	and	w0, w0, #0xff
  4101fc:	cmp	w0, #0x0
  410200:	b.eq	410224 <__fxstatat@plt+0xd6c4>  // b.none
  410204:	ldr	x1, [sp, #24]
  410208:	ldr	x0, [sp, #64]
  41020c:	add	x0, x1, x0
  410210:	ldrb	w0, [x0]
  410214:	bl	40e77c <__fxstatat@plt+0xbc1c>
  410218:	and	w0, w0, #0xff
  41021c:	cmp	w0, #0x0
  410220:	b.ne	410194 <__fxstatat@plt+0xd634>  // b.any
  410224:	ldr	x1, [sp, #40]
  410228:	ldr	x0, [sp, #72]
  41022c:	add	x0, x1, x0
  410230:	ldrb	w0, [x0]
  410234:	bl	40e77c <__fxstatat@plt+0xbc1c>
  410238:	and	w0, w0, #0xff
  41023c:	cmp	w0, #0x0
  410240:	b.eq	41024c <__fxstatat@plt+0xd6ec>  // b.none
  410244:	mov	w0, #0x1                   	// #1
  410248:	b	4102ac <__fxstatat@plt+0xd74c>
  41024c:	ldr	x1, [sp, #24]
  410250:	ldr	x0, [sp, #64]
  410254:	add	x0, x1, x0
  410258:	ldrb	w0, [x0]
  41025c:	bl	40e77c <__fxstatat@plt+0xbc1c>
  410260:	and	w0, w0, #0xff
  410264:	cmp	w0, #0x0
  410268:	b.eq	410274 <__fxstatat@plt+0xd714>  // b.none
  41026c:	mov	w0, #0xffffffff            	// #-1
  410270:	b	4102ac <__fxstatat@plt+0xd74c>
  410274:	ldr	w0, [sp, #60]
  410278:	cmp	w0, #0x0
  41027c:	b.eq	410288 <__fxstatat@plt+0xd728>  // b.none
  410280:	ldr	w0, [sp, #60]
  410284:	b	4102ac <__fxstatat@plt+0xd74c>
  410288:	ldr	x1, [sp, #72]
  41028c:	ldr	x0, [sp, #32]
  410290:	cmp	x1, x0
  410294:	b.cc	410030 <__fxstatat@plt+0xd4d0>  // b.lo, b.ul, b.last
  410298:	ldr	x1, [sp, #64]
  41029c:	ldr	x0, [sp, #16]
  4102a0:	cmp	x1, x0
  4102a4:	b.cc	410030 <__fxstatat@plt+0xd4d0>  // b.lo, b.ul, b.last
  4102a8:	mov	w0, #0x0                   	// #0
  4102ac:	ldp	x29, x30, [sp], #80
  4102b0:	ret
  4102b4:	stp	x29, x30, [sp, #-96]!
  4102b8:	mov	x29, sp
  4102bc:	str	x0, [sp, #24]
  4102c0:	str	x1, [sp, #16]
  4102c4:	ldr	x1, [sp, #16]
  4102c8:	ldr	x0, [sp, #24]
  4102cc:	bl	4028b0 <strcmp@plt>
  4102d0:	str	w0, [sp, #76]
  4102d4:	ldr	w0, [sp, #76]
  4102d8:	cmp	w0, #0x0
  4102dc:	b.ne	4102e8 <__fxstatat@plt+0xd788>  // b.any
  4102e0:	mov	w0, #0x0                   	// #0
  4102e4:	b	410520 <__fxstatat@plt+0xd9c0>
  4102e8:	ldr	x0, [sp, #24]
  4102ec:	ldrb	w0, [x0]
  4102f0:	cmp	w0, #0x0
  4102f4:	b.ne	410300 <__fxstatat@plt+0xd7a0>  // b.any
  4102f8:	mov	w0, #0xffffffff            	// #-1
  4102fc:	b	410520 <__fxstatat@plt+0xd9c0>
  410300:	ldr	x0, [sp, #16]
  410304:	ldrb	w0, [x0]
  410308:	cmp	w0, #0x0
  41030c:	b.ne	410318 <__fxstatat@plt+0xd7b8>  // b.any
  410310:	mov	w0, #0x1                   	// #1
  410314:	b	410520 <__fxstatat@plt+0xd9c0>
  410318:	ldr	x1, [sp, #24]
  41031c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410320:	add	x0, x0, #0x250
  410324:	bl	4028b0 <strcmp@plt>
  410328:	cmp	w0, #0x0
  41032c:	b.ne	410338 <__fxstatat@plt+0xd7d8>  // b.any
  410330:	mov	w0, #0xffffffff            	// #-1
  410334:	b	410520 <__fxstatat@plt+0xd9c0>
  410338:	ldr	x1, [sp, #16]
  41033c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410340:	add	x0, x0, #0x250
  410344:	bl	4028b0 <strcmp@plt>
  410348:	cmp	w0, #0x0
  41034c:	b.ne	410358 <__fxstatat@plt+0xd7f8>  // b.any
  410350:	mov	w0, #0x1                   	// #1
  410354:	b	410520 <__fxstatat@plt+0xd9c0>
  410358:	ldr	x1, [sp, #24]
  41035c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410360:	add	x0, x0, #0x258
  410364:	bl	4028b0 <strcmp@plt>
  410368:	cmp	w0, #0x0
  41036c:	b.ne	410378 <__fxstatat@plt+0xd818>  // b.any
  410370:	mov	w0, #0xffffffff            	// #-1
  410374:	b	410520 <__fxstatat@plt+0xd9c0>
  410378:	ldr	x1, [sp, #16]
  41037c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410380:	add	x0, x0, #0x258
  410384:	bl	4028b0 <strcmp@plt>
  410388:	cmp	w0, #0x0
  41038c:	b.ne	410398 <__fxstatat@plt+0xd838>  // b.any
  410390:	mov	w0, #0x1                   	// #1
  410394:	b	410520 <__fxstatat@plt+0xd9c0>
  410398:	ldr	x0, [sp, #24]
  41039c:	ldrb	w0, [x0]
  4103a0:	cmp	w0, #0x2e
  4103a4:	b.ne	4103c0 <__fxstatat@plt+0xd860>  // b.any
  4103a8:	ldr	x0, [sp, #16]
  4103ac:	ldrb	w0, [x0]
  4103b0:	cmp	w0, #0x2e
  4103b4:	b.eq	4103c0 <__fxstatat@plt+0xd860>  // b.none
  4103b8:	mov	w0, #0xffffffff            	// #-1
  4103bc:	b	410520 <__fxstatat@plt+0xd9c0>
  4103c0:	ldr	x0, [sp, #24]
  4103c4:	ldrb	w0, [x0]
  4103c8:	cmp	w0, #0x2e
  4103cc:	b.eq	4103e8 <__fxstatat@plt+0xd888>  // b.none
  4103d0:	ldr	x0, [sp, #16]
  4103d4:	ldrb	w0, [x0]
  4103d8:	cmp	w0, #0x2e
  4103dc:	b.ne	4103e8 <__fxstatat@plt+0xd888>  // b.any
  4103e0:	mov	w0, #0x1                   	// #1
  4103e4:	b	410520 <__fxstatat@plt+0xd9c0>
  4103e8:	ldr	x0, [sp, #24]
  4103ec:	ldrb	w0, [x0]
  4103f0:	cmp	w0, #0x2e
  4103f4:	b.ne	410420 <__fxstatat@plt+0xd8c0>  // b.any
  4103f8:	ldr	x0, [sp, #16]
  4103fc:	ldrb	w0, [x0]
  410400:	cmp	w0, #0x2e
  410404:	b.ne	410420 <__fxstatat@plt+0xd8c0>  // b.any
  410408:	ldr	x0, [sp, #24]
  41040c:	add	x0, x0, #0x1
  410410:	str	x0, [sp, #24]
  410414:	ldr	x0, [sp, #16]
  410418:	add	x0, x0, #0x1
  41041c:	str	x0, [sp, #16]
  410420:	ldr	x0, [sp, #24]
  410424:	str	x0, [sp, #40]
  410428:	ldr	x0, [sp, #16]
  41042c:	str	x0, [sp, #32]
  410430:	add	x0, sp, #0x28
  410434:	bl	40fe94 <__fxstatat@plt+0xd334>
  410438:	str	x0, [sp, #64]
  41043c:	add	x0, sp, #0x20
  410440:	bl	40fe94 <__fxstatat@plt+0xd334>
  410444:	str	x0, [sp, #56]
  410448:	ldr	x0, [sp, #64]
  41044c:	cmp	x0, #0x0
  410450:	b.eq	41045c <__fxstatat@plt+0xd8fc>  // b.none
  410454:	ldr	x0, [sp, #64]
  410458:	b	410460 <__fxstatat@plt+0xd900>
  41045c:	ldr	x0, [sp, #40]
  410460:	ldr	x1, [sp, #24]
  410464:	sub	x0, x0, x1
  410468:	str	x0, [sp, #88]
  41046c:	ldr	x0, [sp, #56]
  410470:	cmp	x0, #0x0
  410474:	b.eq	410480 <__fxstatat@plt+0xd920>  // b.none
  410478:	ldr	x0, [sp, #56]
  41047c:	b	410484 <__fxstatat@plt+0xd924>
  410480:	ldr	x0, [sp, #32]
  410484:	ldr	x1, [sp, #16]
  410488:	sub	x0, x0, x1
  41048c:	str	x0, [sp, #80]
  410490:	ldr	x0, [sp, #64]
  410494:	cmp	x0, #0x0
  410498:	b.ne	4104a8 <__fxstatat@plt+0xd948>  // b.any
  41049c:	ldr	x0, [sp, #56]
  4104a0:	cmp	x0, #0x0
  4104a4:	b.eq	4104f0 <__fxstatat@plt+0xd990>  // b.none
  4104a8:	ldr	x1, [sp, #88]
  4104ac:	ldr	x0, [sp, #80]
  4104b0:	cmp	x1, x0
  4104b4:	b.ne	4104f0 <__fxstatat@plt+0xd990>  // b.any
  4104b8:	ldr	x2, [sp, #88]
  4104bc:	ldr	x1, [sp, #16]
  4104c0:	ldr	x0, [sp, #24]
  4104c4:	bl	402710 <strncmp@plt>
  4104c8:	cmp	w0, #0x0
  4104cc:	b.ne	4104f0 <__fxstatat@plt+0xd990>  // b.any
  4104d0:	ldr	x1, [sp, #40]
  4104d4:	ldr	x0, [sp, #24]
  4104d8:	sub	x0, x1, x0
  4104dc:	str	x0, [sp, #88]
  4104e0:	ldr	x1, [sp, #32]
  4104e4:	ldr	x0, [sp, #16]
  4104e8:	sub	x0, x1, x0
  4104ec:	str	x0, [sp, #80]
  4104f0:	ldr	x3, [sp, #80]
  4104f4:	ldr	x2, [sp, #16]
  4104f8:	ldr	x1, [sp, #88]
  4104fc:	ldr	x0, [sp, #24]
  410500:	bl	41000c <__fxstatat@plt+0xd4ac>
  410504:	str	w0, [sp, #52]
  410508:	ldr	w0, [sp, #52]
  41050c:	cmp	w0, #0x0
  410510:	b.ne	41051c <__fxstatat@plt+0xd9bc>  // b.any
  410514:	ldr	w0, [sp, #76]
  410518:	b	410520 <__fxstatat@plt+0xd9c0>
  41051c:	ldr	w0, [sp, #52]
  410520:	ldp	x29, x30, [sp], #96
  410524:	ret
  410528:	stp	x29, x30, [sp, #-32]!
  41052c:	mov	x29, sp
  410530:	str	x0, [sp, #24]
  410534:	ldr	x1, [sp, #24]
  410538:	mov	w0, #0x0                   	// #0
  41053c:	bl	402610 <clock_gettime@plt>
  410540:	nop
  410544:	ldp	x29, x30, [sp], #32
  410548:	ret
  41054c:	stp	x29, x30, [sp, #-32]!
  410550:	mov	x29, sp
  410554:	add	x0, sp, #0x10
  410558:	bl	410528 <__fxstatat@plt+0xd9c8>
  41055c:	ldp	x0, x1, [sp, #16]
  410560:	ldp	x29, x30, [sp], #32
  410564:	ret
  410568:	stp	x29, x30, [sp, #-48]!
  41056c:	mov	x29, sp
  410570:	str	w0, [sp, #28]
  410574:	mov	w0, #0x1                   	// #1
  410578:	strb	w0, [sp, #47]
  41057c:	mov	x1, #0x0                   	// #0
  410580:	ldr	w0, [sp, #28]
  410584:	bl	402b50 <setlocale@plt>
  410588:	str	x0, [sp, #32]
  41058c:	ldr	x0, [sp, #32]
  410590:	cmp	x0, #0x0
  410594:	b.eq	4105cc <__fxstatat@plt+0xda6c>  // b.none
  410598:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41059c:	add	x1, x0, #0x260
  4105a0:	ldr	x0, [sp, #32]
  4105a4:	bl	4028b0 <strcmp@plt>
  4105a8:	cmp	w0, #0x0
  4105ac:	b.eq	4105c8 <__fxstatat@plt+0xda68>  // b.none
  4105b0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4105b4:	add	x1, x0, #0x268
  4105b8:	ldr	x0, [sp, #32]
  4105bc:	bl	4028b0 <strcmp@plt>
  4105c0:	cmp	w0, #0x0
  4105c4:	b.ne	4105cc <__fxstatat@plt+0xda6c>  // b.any
  4105c8:	strb	wzr, [sp, #47]
  4105cc:	ldrb	w0, [sp, #47]
  4105d0:	ldp	x29, x30, [sp], #48
  4105d4:	ret
  4105d8:	sub	sp, sp, #0x10
  4105dc:	str	x0, [sp, #8]
  4105e0:	ldr	x0, [sp, #8]
  4105e4:	ldr	x0, [x0, #16]
  4105e8:	add	sp, sp, #0x10
  4105ec:	ret
  4105f0:	sub	sp, sp, #0x10
  4105f4:	str	x0, [sp, #8]
  4105f8:	ldr	x0, [sp, #8]
  4105fc:	ldr	x0, [x0, #24]
  410600:	add	sp, sp, #0x10
  410604:	ret
  410608:	sub	sp, sp, #0x10
  41060c:	str	x0, [sp, #8]
  410610:	ldr	x0, [sp, #8]
  410614:	ldr	x0, [x0, #32]
  410618:	add	sp, sp, #0x10
  41061c:	ret
  410620:	sub	sp, sp, #0x30
  410624:	str	x0, [sp, #8]
  410628:	str	xzr, [sp, #32]
  41062c:	ldr	x0, [sp, #8]
  410630:	ldr	x0, [x0]
  410634:	str	x0, [sp, #40]
  410638:	b	4106a8 <__fxstatat@plt+0xdb48>
  41063c:	ldr	x0, [sp, #40]
  410640:	ldr	x0, [x0]
  410644:	cmp	x0, #0x0
  410648:	b.eq	41069c <__fxstatat@plt+0xdb3c>  // b.none
  41064c:	ldr	x0, [sp, #40]
  410650:	str	x0, [sp, #24]
  410654:	mov	x0, #0x1                   	// #1
  410658:	str	x0, [sp, #16]
  41065c:	b	41066c <__fxstatat@plt+0xdb0c>
  410660:	ldr	x0, [sp, #16]
  410664:	add	x0, x0, #0x1
  410668:	str	x0, [sp, #16]
  41066c:	ldr	x0, [sp, #24]
  410670:	ldr	x0, [x0, #8]
  410674:	str	x0, [sp, #24]
  410678:	ldr	x0, [sp, #24]
  41067c:	cmp	x0, #0x0
  410680:	b.ne	410660 <__fxstatat@plt+0xdb00>  // b.any
  410684:	ldr	x1, [sp, #16]
  410688:	ldr	x0, [sp, #32]
  41068c:	cmp	x1, x0
  410690:	b.ls	41069c <__fxstatat@plt+0xdb3c>  // b.plast
  410694:	ldr	x0, [sp, #16]
  410698:	str	x0, [sp, #32]
  41069c:	ldr	x0, [sp, #40]
  4106a0:	add	x0, x0, #0x10
  4106a4:	str	x0, [sp, #40]
  4106a8:	ldr	x0, [sp, #8]
  4106ac:	ldr	x0, [x0, #8]
  4106b0:	ldr	x1, [sp, #40]
  4106b4:	cmp	x1, x0
  4106b8:	b.cc	41063c <__fxstatat@plt+0xdadc>  // b.lo, b.ul, b.last
  4106bc:	ldr	x0, [sp, #32]
  4106c0:	add	sp, sp, #0x30
  4106c4:	ret
  4106c8:	sub	sp, sp, #0x30
  4106cc:	str	x0, [sp, #8]
  4106d0:	str	xzr, [sp, #32]
  4106d4:	str	xzr, [sp, #24]
  4106d8:	ldr	x0, [sp, #8]
  4106dc:	ldr	x0, [x0]
  4106e0:	str	x0, [sp, #40]
  4106e4:	b	41074c <__fxstatat@plt+0xdbec>
  4106e8:	ldr	x0, [sp, #40]
  4106ec:	ldr	x0, [x0]
  4106f0:	cmp	x0, #0x0
  4106f4:	b.eq	410740 <__fxstatat@plt+0xdbe0>  // b.none
  4106f8:	ldr	x0, [sp, #40]
  4106fc:	str	x0, [sp, #16]
  410700:	ldr	x0, [sp, #32]
  410704:	add	x0, x0, #0x1
  410708:	str	x0, [sp, #32]
  41070c:	ldr	x0, [sp, #24]
  410710:	add	x0, x0, #0x1
  410714:	str	x0, [sp, #24]
  410718:	b	410728 <__fxstatat@plt+0xdbc8>
  41071c:	ldr	x0, [sp, #24]
  410720:	add	x0, x0, #0x1
  410724:	str	x0, [sp, #24]
  410728:	ldr	x0, [sp, #16]
  41072c:	ldr	x0, [x0, #8]
  410730:	str	x0, [sp, #16]
  410734:	ldr	x0, [sp, #16]
  410738:	cmp	x0, #0x0
  41073c:	b.ne	41071c <__fxstatat@plt+0xdbbc>  // b.any
  410740:	ldr	x0, [sp, #40]
  410744:	add	x0, x0, #0x10
  410748:	str	x0, [sp, #40]
  41074c:	ldr	x0, [sp, #8]
  410750:	ldr	x0, [x0, #8]
  410754:	ldr	x1, [sp, #40]
  410758:	cmp	x1, x0
  41075c:	b.cc	4106e8 <__fxstatat@plt+0xdb88>  // b.lo, b.ul, b.last
  410760:	ldr	x0, [sp, #8]
  410764:	ldr	x0, [x0, #24]
  410768:	ldr	x1, [sp, #32]
  41076c:	cmp	x1, x0
  410770:	b.ne	410790 <__fxstatat@plt+0xdc30>  // b.any
  410774:	ldr	x0, [sp, #8]
  410778:	ldr	x0, [x0, #32]
  41077c:	ldr	x1, [sp, #24]
  410780:	cmp	x1, x0
  410784:	b.ne	410790 <__fxstatat@plt+0xdc30>  // b.any
  410788:	mov	w0, #0x1                   	// #1
  41078c:	b	410794 <__fxstatat@plt+0xdc34>
  410790:	mov	w0, #0x0                   	// #0
  410794:	add	sp, sp, #0x30
  410798:	ret
  41079c:	stp	x29, x30, [sp, #-64]!
  4107a0:	mov	x29, sp
  4107a4:	str	x0, [sp, #24]
  4107a8:	str	x1, [sp, #16]
  4107ac:	ldr	x0, [sp, #24]
  4107b0:	bl	410608 <__fxstatat@plt+0xdaa8>
  4107b4:	str	x0, [sp, #56]
  4107b8:	ldr	x0, [sp, #24]
  4107bc:	bl	4105d8 <__fxstatat@plt+0xda78>
  4107c0:	str	x0, [sp, #48]
  4107c4:	ldr	x0, [sp, #24]
  4107c8:	bl	4105f0 <__fxstatat@plt+0xda90>
  4107cc:	str	x0, [sp, #40]
  4107d0:	ldr	x0, [sp, #24]
  4107d4:	bl	410620 <__fxstatat@plt+0xdac0>
  4107d8:	str	x0, [sp, #32]
  4107dc:	ldr	x2, [sp, #56]
  4107e0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4107e4:	add	x1, x0, #0x288
  4107e8:	ldr	x0, [sp, #16]
  4107ec:	bl	402b30 <fprintf@plt>
  4107f0:	ldr	x2, [sp, #48]
  4107f4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4107f8:	add	x1, x0, #0x2a0
  4107fc:	ldr	x0, [sp, #16]
  410800:	bl	402b30 <fprintf@plt>
  410804:	ldr	d0, [sp, #40]
  410808:	ucvtf	d0, d0
  41080c:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  410810:	fmov	d1, x0
  410814:	fmul	d1, d0, d1
  410818:	ldr	d0, [sp, #48]
  41081c:	ucvtf	d0, d0
  410820:	fdiv	d0, d1, d0
  410824:	ldr	x2, [sp, #40]
  410828:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41082c:	add	x1, x0, #0x2b8
  410830:	ldr	x0, [sp, #16]
  410834:	bl	402b30 <fprintf@plt>
  410838:	ldr	x2, [sp, #32]
  41083c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410840:	add	x1, x0, #0x2e0
  410844:	ldr	x0, [sp, #16]
  410848:	bl	402b30 <fprintf@plt>
  41084c:	nop
  410850:	ldp	x29, x30, [sp], #64
  410854:	ret
  410858:	stp	x29, x30, [sp, #-48]!
  41085c:	mov	x29, sp
  410860:	str	x0, [sp, #24]
  410864:	str	x1, [sp, #16]
  410868:	ldr	x0, [sp, #24]
  41086c:	ldr	x2, [x0, #48]
  410870:	ldr	x0, [sp, #24]
  410874:	ldr	x0, [x0, #16]
  410878:	mov	x1, x0
  41087c:	ldr	x0, [sp, #16]
  410880:	blr	x2
  410884:	str	x0, [sp, #40]
  410888:	ldr	x0, [sp, #24]
  41088c:	ldr	x0, [x0, #16]
  410890:	ldr	x1, [sp, #40]
  410894:	cmp	x1, x0
  410898:	b.cc	4108a0 <__fxstatat@plt+0xdd40>  // b.lo, b.ul, b.last
  41089c:	bl	402820 <abort@plt>
  4108a0:	ldr	x0, [sp, #24]
  4108a4:	ldr	x1, [x0]
  4108a8:	ldr	x0, [sp, #40]
  4108ac:	lsl	x0, x0, #4
  4108b0:	add	x0, x1, x0
  4108b4:	ldp	x29, x30, [sp], #48
  4108b8:	ret
  4108bc:	stp	x29, x30, [sp, #-48]!
  4108c0:	mov	x29, sp
  4108c4:	str	x0, [sp, #24]
  4108c8:	str	x1, [sp, #16]
  4108cc:	ldr	x1, [sp, #16]
  4108d0:	ldr	x0, [sp, #24]
  4108d4:	bl	410858 <__fxstatat@plt+0xdcf8>
  4108d8:	str	x0, [sp, #32]
  4108dc:	ldr	x0, [sp, #32]
  4108e0:	ldr	x0, [x0]
  4108e4:	cmp	x0, #0x0
  4108e8:	b.ne	4108f4 <__fxstatat@plt+0xdd94>  // b.any
  4108ec:	mov	x0, #0x0                   	// #0
  4108f0:	b	410964 <__fxstatat@plt+0xde04>
  4108f4:	ldr	x0, [sp, #32]
  4108f8:	str	x0, [sp, #40]
  4108fc:	b	410954 <__fxstatat@plt+0xddf4>
  410900:	ldr	x0, [sp, #40]
  410904:	ldr	x0, [x0]
  410908:	ldr	x1, [sp, #16]
  41090c:	cmp	x1, x0
  410910:	b.eq	41093c <__fxstatat@plt+0xdddc>  // b.none
  410914:	ldr	x0, [sp, #24]
  410918:	ldr	x2, [x0, #56]
  41091c:	ldr	x0, [sp, #40]
  410920:	ldr	x0, [x0]
  410924:	mov	x1, x0
  410928:	ldr	x0, [sp, #16]
  41092c:	blr	x2
  410930:	and	w0, w0, #0xff
  410934:	cmp	w0, #0x0
  410938:	b.eq	410948 <__fxstatat@plt+0xdde8>  // b.none
  41093c:	ldr	x0, [sp, #40]
  410940:	ldr	x0, [x0]
  410944:	b	410964 <__fxstatat@plt+0xde04>
  410948:	ldr	x0, [sp, #40]
  41094c:	ldr	x0, [x0, #8]
  410950:	str	x0, [sp, #40]
  410954:	ldr	x0, [sp, #40]
  410958:	cmp	x0, #0x0
  41095c:	b.ne	410900 <__fxstatat@plt+0xdda0>  // b.any
  410960:	mov	x0, #0x0                   	// #0
  410964:	ldp	x29, x30, [sp], #48
  410968:	ret
  41096c:	stp	x29, x30, [sp, #-48]!
  410970:	mov	x29, sp
  410974:	str	x0, [sp, #24]
  410978:	ldr	x0, [sp, #24]
  41097c:	ldr	x0, [x0, #32]
  410980:	cmp	x0, #0x0
  410984:	b.ne	410990 <__fxstatat@plt+0xde30>  // b.any
  410988:	mov	x0, #0x0                   	// #0
  41098c:	b	4109e0 <__fxstatat@plt+0xde80>
  410990:	ldr	x0, [sp, #24]
  410994:	ldr	x0, [x0]
  410998:	str	x0, [sp, #40]
  41099c:	ldr	x0, [sp, #24]
  4109a0:	ldr	x0, [x0, #8]
  4109a4:	ldr	x1, [sp, #40]
  4109a8:	cmp	x1, x0
  4109ac:	b.cc	4109b4 <__fxstatat@plt+0xde54>  // b.lo, b.ul, b.last
  4109b0:	bl	402820 <abort@plt>
  4109b4:	ldr	x0, [sp, #40]
  4109b8:	ldr	x0, [x0]
  4109bc:	cmp	x0, #0x0
  4109c0:	b.eq	4109d0 <__fxstatat@plt+0xde70>  // b.none
  4109c4:	ldr	x0, [sp, #40]
  4109c8:	ldr	x0, [x0]
  4109cc:	b	4109e0 <__fxstatat@plt+0xde80>
  4109d0:	ldr	x0, [sp, #40]
  4109d4:	add	x0, x0, #0x10
  4109d8:	str	x0, [sp, #40]
  4109dc:	b	41099c <__fxstatat@plt+0xde3c>
  4109e0:	ldp	x29, x30, [sp], #48
  4109e4:	ret
  4109e8:	stp	x29, x30, [sp, #-48]!
  4109ec:	mov	x29, sp
  4109f0:	str	x0, [sp, #24]
  4109f4:	str	x1, [sp, #16]
  4109f8:	ldr	x1, [sp, #16]
  4109fc:	ldr	x0, [sp, #24]
  410a00:	bl	410858 <__fxstatat@plt+0xdcf8>
  410a04:	str	x0, [sp, #40]
  410a08:	ldr	x0, [sp, #40]
  410a0c:	str	x0, [sp, #32]
  410a10:	ldr	x0, [sp, #32]
  410a14:	ldr	x0, [x0]
  410a18:	ldr	x1, [sp, #16]
  410a1c:	cmp	x1, x0
  410a20:	b.ne	410a44 <__fxstatat@plt+0xdee4>  // b.any
  410a24:	ldr	x0, [sp, #32]
  410a28:	ldr	x0, [x0, #8]
  410a2c:	cmp	x0, #0x0
  410a30:	b.eq	410a44 <__fxstatat@plt+0xdee4>  // b.none
  410a34:	ldr	x0, [sp, #32]
  410a38:	ldr	x0, [x0, #8]
  410a3c:	ldr	x0, [x0]
  410a40:	b	410aa0 <__fxstatat@plt+0xdf40>
  410a44:	ldr	x0, [sp, #32]
  410a48:	ldr	x0, [x0, #8]
  410a4c:	str	x0, [sp, #32]
  410a50:	ldr	x0, [sp, #32]
  410a54:	cmp	x0, #0x0
  410a58:	b.ne	410a10 <__fxstatat@plt+0xdeb0>  // b.any
  410a5c:	b	410a7c <__fxstatat@plt+0xdf1c>
  410a60:	ldr	x0, [sp, #40]
  410a64:	ldr	x0, [x0]
  410a68:	cmp	x0, #0x0
  410a6c:	b.eq	410a7c <__fxstatat@plt+0xdf1c>  // b.none
  410a70:	ldr	x0, [sp, #40]
  410a74:	ldr	x0, [x0]
  410a78:	b	410aa0 <__fxstatat@plt+0xdf40>
  410a7c:	ldr	x0, [sp, #40]
  410a80:	add	x0, x0, #0x10
  410a84:	str	x0, [sp, #40]
  410a88:	ldr	x0, [sp, #24]
  410a8c:	ldr	x0, [x0, #8]
  410a90:	ldr	x1, [sp, #40]
  410a94:	cmp	x1, x0
  410a98:	b.cc	410a60 <__fxstatat@plt+0xdf00>  // b.lo, b.ul, b.last
  410a9c:	mov	x0, #0x0                   	// #0
  410aa0:	ldp	x29, x30, [sp], #48
  410aa4:	ret
  410aa8:	sub	sp, sp, #0x40
  410aac:	str	x0, [sp, #24]
  410ab0:	str	x1, [sp, #16]
  410ab4:	str	x2, [sp, #8]
  410ab8:	str	xzr, [sp, #56]
  410abc:	ldr	x0, [sp, #24]
  410ac0:	ldr	x0, [x0]
  410ac4:	str	x0, [sp, #48]
  410ac8:	b	410b48 <__fxstatat@plt+0xdfe8>
  410acc:	ldr	x0, [sp, #48]
  410ad0:	ldr	x0, [x0]
  410ad4:	cmp	x0, #0x0
  410ad8:	b.eq	410b3c <__fxstatat@plt+0xdfdc>  // b.none
  410adc:	ldr	x0, [sp, #48]
  410ae0:	str	x0, [sp, #40]
  410ae4:	b	410b30 <__fxstatat@plt+0xdfd0>
  410ae8:	ldr	x1, [sp, #56]
  410aec:	ldr	x0, [sp, #8]
  410af0:	cmp	x1, x0
  410af4:	b.cc	410b00 <__fxstatat@plt+0xdfa0>  // b.lo, b.ul, b.last
  410af8:	ldr	x0, [sp, #56]
  410afc:	b	410b60 <__fxstatat@plt+0xe000>
  410b00:	ldr	x0, [sp, #56]
  410b04:	add	x1, x0, #0x1
  410b08:	str	x1, [sp, #56]
  410b0c:	lsl	x0, x0, #3
  410b10:	ldr	x1, [sp, #16]
  410b14:	add	x0, x1, x0
  410b18:	ldr	x1, [sp, #40]
  410b1c:	ldr	x1, [x1]
  410b20:	str	x1, [x0]
  410b24:	ldr	x0, [sp, #40]
  410b28:	ldr	x0, [x0, #8]
  410b2c:	str	x0, [sp, #40]
  410b30:	ldr	x0, [sp, #40]
  410b34:	cmp	x0, #0x0
  410b38:	b.ne	410ae8 <__fxstatat@plt+0xdf88>  // b.any
  410b3c:	ldr	x0, [sp, #48]
  410b40:	add	x0, x0, #0x10
  410b44:	str	x0, [sp, #48]
  410b48:	ldr	x0, [sp, #24]
  410b4c:	ldr	x0, [x0, #8]
  410b50:	ldr	x1, [sp, #48]
  410b54:	cmp	x1, x0
  410b58:	b.cc	410acc <__fxstatat@plt+0xdf6c>  // b.lo, b.ul, b.last
  410b5c:	ldr	x0, [sp, #56]
  410b60:	add	sp, sp, #0x40
  410b64:	ret
  410b68:	stp	x29, x30, [sp, #-80]!
  410b6c:	mov	x29, sp
  410b70:	str	x0, [sp, #40]
  410b74:	str	x1, [sp, #32]
  410b78:	str	x2, [sp, #24]
  410b7c:	str	xzr, [sp, #72]
  410b80:	ldr	x0, [sp, #40]
  410b84:	ldr	x0, [x0]
  410b88:	str	x0, [sp, #64]
  410b8c:	b	410c0c <__fxstatat@plt+0xe0ac>
  410b90:	ldr	x0, [sp, #64]
  410b94:	ldr	x0, [x0]
  410b98:	cmp	x0, #0x0
  410b9c:	b.eq	410c00 <__fxstatat@plt+0xe0a0>  // b.none
  410ba0:	ldr	x0, [sp, #64]
  410ba4:	str	x0, [sp, #56]
  410ba8:	b	410bf4 <__fxstatat@plt+0xe094>
  410bac:	ldr	x0, [sp, #56]
  410bb0:	ldr	x0, [x0]
  410bb4:	ldr	x2, [sp, #32]
  410bb8:	ldr	x1, [sp, #24]
  410bbc:	blr	x2
  410bc0:	and	w0, w0, #0xff
  410bc4:	eor	w0, w0, #0x1
  410bc8:	and	w0, w0, #0xff
  410bcc:	cmp	w0, #0x0
  410bd0:	b.eq	410bdc <__fxstatat@plt+0xe07c>  // b.none
  410bd4:	ldr	x0, [sp, #72]
  410bd8:	b	410c24 <__fxstatat@plt+0xe0c4>
  410bdc:	ldr	x0, [sp, #72]
  410be0:	add	x0, x0, #0x1
  410be4:	str	x0, [sp, #72]
  410be8:	ldr	x0, [sp, #56]
  410bec:	ldr	x0, [x0, #8]
  410bf0:	str	x0, [sp, #56]
  410bf4:	ldr	x0, [sp, #56]
  410bf8:	cmp	x0, #0x0
  410bfc:	b.ne	410bac <__fxstatat@plt+0xe04c>  // b.any
  410c00:	ldr	x0, [sp, #64]
  410c04:	add	x0, x0, #0x10
  410c08:	str	x0, [sp, #64]
  410c0c:	ldr	x0, [sp, #40]
  410c10:	ldr	x0, [x0, #8]
  410c14:	ldr	x1, [sp, #64]
  410c18:	cmp	x1, x0
  410c1c:	b.cc	410b90 <__fxstatat@plt+0xe030>  // b.lo, b.ul, b.last
  410c20:	ldr	x0, [sp, #72]
  410c24:	ldp	x29, x30, [sp], #80
  410c28:	ret
  410c2c:	sub	sp, sp, #0x20
  410c30:	str	x0, [sp, #8]
  410c34:	str	x1, [sp]
  410c38:	str	xzr, [sp, #24]
  410c3c:	b	410c7c <__fxstatat@plt+0xe11c>
  410c40:	ldr	x1, [sp, #24]
  410c44:	mov	x0, x1
  410c48:	lsl	x0, x0, #5
  410c4c:	sub	x1, x0, x1
  410c50:	ldrb	w0, [sp, #23]
  410c54:	add	x0, x1, x0
  410c58:	ldr	x1, [sp]
  410c5c:	udiv	x2, x0, x1
  410c60:	ldr	x1, [sp]
  410c64:	mul	x1, x2, x1
  410c68:	sub	x0, x0, x1
  410c6c:	str	x0, [sp, #24]
  410c70:	ldr	x0, [sp, #8]
  410c74:	add	x0, x0, #0x1
  410c78:	str	x0, [sp, #8]
  410c7c:	ldr	x0, [sp, #8]
  410c80:	ldrb	w0, [x0]
  410c84:	strb	w0, [sp, #23]
  410c88:	ldrb	w0, [sp, #23]
  410c8c:	cmp	w0, #0x0
  410c90:	b.ne	410c40 <__fxstatat@plt+0xe0e0>  // b.any
  410c94:	ldr	x0, [sp, #24]
  410c98:	add	sp, sp, #0x20
  410c9c:	ret
  410ca0:	sub	sp, sp, #0x20
  410ca4:	str	x0, [sp, #8]
  410ca8:	mov	x0, #0x3                   	// #3
  410cac:	str	x0, [sp, #24]
  410cb0:	ldr	x0, [sp, #24]
  410cb4:	mul	x0, x0, x0
  410cb8:	str	x0, [sp, #16]
  410cbc:	b	410cec <__fxstatat@plt+0xe18c>
  410cc0:	ldr	x0, [sp, #24]
  410cc4:	add	x0, x0, #0x1
  410cc8:	str	x0, [sp, #24]
  410ccc:	ldr	x0, [sp, #24]
  410cd0:	lsl	x0, x0, #2
  410cd4:	ldr	x1, [sp, #16]
  410cd8:	add	x0, x1, x0
  410cdc:	str	x0, [sp, #16]
  410ce0:	ldr	x0, [sp, #24]
  410ce4:	add	x0, x0, #0x1
  410ce8:	str	x0, [sp, #24]
  410cec:	ldr	x1, [sp, #16]
  410cf0:	ldr	x0, [sp, #8]
  410cf4:	cmp	x1, x0
  410cf8:	b.cs	410d1c <__fxstatat@plt+0xe1bc>  // b.hs, b.nlast
  410cfc:	ldr	x0, [sp, #8]
  410d00:	ldr	x1, [sp, #24]
  410d04:	udiv	x2, x0, x1
  410d08:	ldr	x1, [sp, #24]
  410d0c:	mul	x1, x2, x1
  410d10:	sub	x0, x0, x1
  410d14:	cmp	x0, #0x0
  410d18:	b.ne	410cc0 <__fxstatat@plt+0xe160>  // b.any
  410d1c:	ldr	x0, [sp, #8]
  410d20:	ldr	x1, [sp, #24]
  410d24:	udiv	x2, x0, x1
  410d28:	ldr	x1, [sp, #24]
  410d2c:	mul	x1, x2, x1
  410d30:	sub	x0, x0, x1
  410d34:	cmp	x0, #0x0
  410d38:	cset	w0, ne  // ne = any
  410d3c:	and	w0, w0, #0xff
  410d40:	add	sp, sp, #0x20
  410d44:	ret
  410d48:	stp	x29, x30, [sp, #-32]!
  410d4c:	mov	x29, sp
  410d50:	str	x0, [sp, #24]
  410d54:	ldr	x0, [sp, #24]
  410d58:	cmp	x0, #0x9
  410d5c:	b.hi	410d68 <__fxstatat@plt+0xe208>  // b.pmore
  410d60:	mov	x0, #0xa                   	// #10
  410d64:	str	x0, [sp, #24]
  410d68:	ldr	x0, [sp, #24]
  410d6c:	orr	x0, x0, #0x1
  410d70:	str	x0, [sp, #24]
  410d74:	b	410d84 <__fxstatat@plt+0xe224>
  410d78:	ldr	x0, [sp, #24]
  410d7c:	add	x0, x0, #0x2
  410d80:	str	x0, [sp, #24]
  410d84:	ldr	x0, [sp, #24]
  410d88:	cmn	x0, #0x1
  410d8c:	b.eq	410dac <__fxstatat@plt+0xe24c>  // b.none
  410d90:	ldr	x0, [sp, #24]
  410d94:	bl	410ca0 <__fxstatat@plt+0xe140>
  410d98:	and	w0, w0, #0xff
  410d9c:	eor	w0, w0, #0x1
  410da0:	and	w0, w0, #0xff
  410da4:	cmp	w0, #0x0
  410da8:	b.ne	410d78 <__fxstatat@plt+0xe218>  // b.any
  410dac:	ldr	x0, [sp, #24]
  410db0:	ldp	x29, x30, [sp], #32
  410db4:	ret
  410db8:	sub	sp, sp, #0x10
  410dbc:	str	x0, [sp, #8]
  410dc0:	ldr	x1, [sp, #8]
  410dc4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410dc8:	add	x0, x0, #0x270
  410dcc:	mov	x2, x1
  410dd0:	mov	x3, x0
  410dd4:	ldp	x0, x1, [x3]
  410dd8:	stp	x0, x1, [x2]
  410ddc:	ldr	w0, [x3, #16]
  410de0:	str	w0, [x2, #16]
  410de4:	nop
  410de8:	add	sp, sp, #0x10
  410dec:	ret
  410df0:	stp	x29, x30, [sp, #-48]!
  410df4:	mov	x29, sp
  410df8:	str	x0, [sp, #24]
  410dfc:	str	x1, [sp, #16]
  410e00:	ldr	x0, [sp, #24]
  410e04:	mov	w1, #0x3                   	// #3
  410e08:	bl	41c4a0 <_obstack_memory_used@@Base+0xa50>
  410e0c:	str	x0, [sp, #40]
  410e10:	ldr	x0, [sp, #40]
  410e14:	ldr	x1, [sp, #16]
  410e18:	udiv	x2, x0, x1
  410e1c:	ldr	x1, [sp, #16]
  410e20:	mul	x1, x2, x1
  410e24:	sub	x0, x0, x1
  410e28:	ldp	x29, x30, [sp], #48
  410e2c:	ret
  410e30:	sub	sp, sp, #0x10
  410e34:	str	x0, [sp, #8]
  410e38:	str	x1, [sp]
  410e3c:	ldr	x1, [sp, #8]
  410e40:	ldr	x0, [sp]
  410e44:	cmp	x1, x0
  410e48:	cset	w0, eq  // eq = none
  410e4c:	and	w0, w0, #0xff
  410e50:	add	sp, sp, #0x10
  410e54:	ret
  410e58:	sub	sp, sp, #0x20
  410e5c:	str	x0, [sp, #8]
  410e60:	ldr	x0, [sp, #8]
  410e64:	ldr	x0, [x0, #40]
  410e68:	str	x0, [sp, #24]
  410e6c:	ldr	x1, [sp, #24]
  410e70:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  410e74:	add	x0, x0, #0x270
  410e78:	cmp	x1, x0
  410e7c:	b.ne	410e88 <__fxstatat@plt+0xe328>  // b.any
  410e80:	mov	w0, #0x1                   	// #1
  410e84:	b	410f64 <__fxstatat@plt+0xe404>
  410e88:	mov	w0, #0xcccd                	// #52429
  410e8c:	movk	w0, #0x3dcc, lsl #16
  410e90:	fmov	s0, w0
  410e94:	str	s0, [sp, #20]
  410e98:	ldr	x0, [sp, #24]
  410e9c:	ldr	s0, [x0, #8]
  410ea0:	ldr	s1, [sp, #20]
  410ea4:	fcmpe	s1, s0
  410ea8:	b.pl	410f50 <__fxstatat@plt+0xe3f0>  // b.nfrst
  410eac:	ldr	x0, [sp, #24]
  410eb0:	ldr	s1, [x0, #8]
  410eb4:	fmov	s2, #1.000000000000000000e+00
  410eb8:	ldr	s0, [sp, #20]
  410ebc:	fsub	s0, s2, s0
  410ec0:	fcmpe	s1, s0
  410ec4:	b.pl	410f50 <__fxstatat@plt+0xe3f0>  // b.nfrst
  410ec8:	ldr	s1, [sp, #20]
  410ecc:	fmov	s0, #1.000000000000000000e+00
  410ed0:	fadd	s1, s1, s0
  410ed4:	ldr	x0, [sp, #24]
  410ed8:	ldr	s0, [x0, #12]
  410edc:	fcmpe	s1, s0
  410ee0:	b.pl	410f50 <__fxstatat@plt+0xe3f0>  // b.nfrst
  410ee4:	ldr	x0, [sp, #24]
  410ee8:	ldr	s0, [x0]
  410eec:	fcmpe	s0, #0.0
  410ef0:	b.lt	410f50 <__fxstatat@plt+0xe3f0>  // b.tstop
  410ef4:	ldr	x0, [sp, #24]
  410ef8:	ldr	s1, [x0]
  410efc:	ldr	s0, [sp, #20]
  410f00:	fadd	s1, s1, s0
  410f04:	ldr	x0, [sp, #24]
  410f08:	ldr	s0, [x0, #4]
  410f0c:	fcmpe	s1, s0
  410f10:	b.pl	410f50 <__fxstatat@plt+0xe3f0>  // b.nfrst
  410f14:	ldr	x0, [sp, #24]
  410f18:	ldr	s1, [x0, #4]
  410f1c:	fmov	s0, #1.000000000000000000e+00
  410f20:	fcmpe	s1, s0
  410f24:	b.hi	410f50 <__fxstatat@plt+0xe3f0>  // b.pmore
  410f28:	ldr	x0, [sp, #24]
  410f2c:	ldr	s1, [x0]
  410f30:	ldr	s0, [sp, #20]
  410f34:	fadd	s1, s1, s0
  410f38:	ldr	x0, [sp, #24]
  410f3c:	ldr	s0, [x0, #8]
  410f40:	fcmpe	s1, s0
  410f44:	b.pl	410f50 <__fxstatat@plt+0xe3f0>  // b.nfrst
  410f48:	mov	w0, #0x1                   	// #1
  410f4c:	b	410f64 <__fxstatat@plt+0xe404>
  410f50:	ldr	x0, [sp, #8]
  410f54:	adrp	x1, 425000 <_obstack_memory_used@@Base+0x95b0>
  410f58:	add	x1, x1, #0x270
  410f5c:	str	x1, [x0, #40]
  410f60:	mov	w0, #0x0                   	// #0
  410f64:	add	sp, sp, #0x20
  410f68:	ret
  410f6c:	stp	x29, x30, [sp, #-48]!
  410f70:	mov	x29, sp
  410f74:	str	x0, [sp, #24]
  410f78:	str	x1, [sp, #16]
  410f7c:	ldr	x0, [sp, #16]
  410f80:	ldrb	w0, [x0, #16]
  410f84:	eor	w0, w0, #0x1
  410f88:	and	w0, w0, #0xff
  410f8c:	cmp	w0, #0x0
  410f90:	b.eq	410fd4 <__fxstatat@plt+0xe474>  // b.none
  410f94:	ldr	x0, [sp, #24]
  410f98:	ucvtf	s1, x0
  410f9c:	ldr	x0, [sp, #16]
  410fa0:	ldr	s0, [x0, #8]
  410fa4:	fdiv	s0, s1, s0
  410fa8:	str	s0, [sp, #44]
  410fac:	ldr	s0, [sp, #44]
  410fb0:	mov	w0, #0x5f800000            	// #1602224128
  410fb4:	fmov	s1, w0
  410fb8:	fcmpe	s0, s1
  410fbc:	b.lt	410fc8 <__fxstatat@plt+0xe468>  // b.tstop
  410fc0:	mov	x0, #0x0                   	// #0
  410fc4:	b	411028 <__fxstatat@plt+0xe4c8>
  410fc8:	ldr	s0, [sp, #44]
  410fcc:	fcvtzu	x0, s0
  410fd0:	str	x0, [sp, #24]
  410fd4:	ldr	x0, [sp, #24]
  410fd8:	bl	410d48 <__fxstatat@plt+0xe1e8>
  410fdc:	str	x0, [sp, #24]
  410fe0:	mov	x0, #0x0                   	// #0
  410fe4:	ldr	x1, [sp, #24]
  410fe8:	lsl	x1, x1, #3
  410fec:	ldr	x2, [sp, #24]
  410ff0:	lsr	x2, x2, #61
  410ff4:	cmp	x2, #0x0
  410ff8:	b.eq	411000 <__fxstatat@plt+0xe4a0>  // b.none
  410ffc:	mov	x0, #0x1                   	// #1
  411000:	cmp	x1, #0x0
  411004:	b.ge	41100c <__fxstatat@plt+0xe4ac>  // b.tcont
  411008:	mov	x0, #0x1                   	// #1
  41100c:	and	w0, w0, #0x1
  411010:	and	w0, w0, #0xff
  411014:	cmp	w0, #0x0
  411018:	b.eq	411024 <__fxstatat@plt+0xe4c4>  // b.none
  41101c:	mov	x0, #0x0                   	// #0
  411020:	b	411028 <__fxstatat@plt+0xe4c8>
  411024:	ldr	x0, [sp, #24]
  411028:	ldp	x29, x30, [sp], #48
  41102c:	ret
  411030:	stp	x29, x30, [sp, #-80]!
  411034:	mov	x29, sp
  411038:	str	x0, [sp, #56]
  41103c:	str	x1, [sp, #48]
  411040:	str	x2, [sp, #40]
  411044:	str	x3, [sp, #32]
  411048:	str	x4, [sp, #24]
  41104c:	ldr	x0, [sp, #40]
  411050:	cmp	x0, #0x0
  411054:	b.ne	411064 <__fxstatat@plt+0xe504>  // b.any
  411058:	adrp	x0, 410000 <__fxstatat@plt+0xd4a0>
  41105c:	add	x0, x0, #0xdf0
  411060:	str	x0, [sp, #40]
  411064:	ldr	x0, [sp, #32]
  411068:	cmp	x0, #0x0
  41106c:	b.ne	41107c <__fxstatat@plt+0xe51c>  // b.any
  411070:	adrp	x0, 410000 <__fxstatat@plt+0xd4a0>
  411074:	add	x0, x0, #0xe30
  411078:	str	x0, [sp, #32]
  41107c:	mov	x0, #0x50                  	// #80
  411080:	bl	4026b0 <malloc@plt>
  411084:	str	x0, [sp, #72]
  411088:	ldr	x0, [sp, #72]
  41108c:	cmp	x0, #0x0
  411090:	b.ne	41109c <__fxstatat@plt+0xe53c>  // b.any
  411094:	mov	x0, #0x0                   	// #0
  411098:	b	4111b4 <__fxstatat@plt+0xe654>
  41109c:	ldr	x0, [sp, #48]
  4110a0:	cmp	x0, #0x0
  4110a4:	b.ne	4110b4 <__fxstatat@plt+0xe554>  // b.any
  4110a8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4110ac:	add	x0, x0, #0x270
  4110b0:	str	x0, [sp, #48]
  4110b4:	ldr	x0, [sp, #72]
  4110b8:	ldr	x1, [sp, #48]
  4110bc:	str	x1, [x0, #40]
  4110c0:	ldr	x0, [sp, #72]
  4110c4:	bl	410e58 <__fxstatat@plt+0xe2f8>
  4110c8:	and	w0, w0, #0xff
  4110cc:	eor	w0, w0, #0x1
  4110d0:	and	w0, w0, #0xff
  4110d4:	cmp	w0, #0x0
  4110d8:	b.ne	411194 <__fxstatat@plt+0xe634>  // b.any
  4110dc:	ldr	x1, [sp, #48]
  4110e0:	ldr	x0, [sp, #56]
  4110e4:	bl	410f6c <__fxstatat@plt+0xe40c>
  4110e8:	mov	x1, x0
  4110ec:	ldr	x0, [sp, #72]
  4110f0:	str	x1, [x0, #16]
  4110f4:	ldr	x0, [sp, #72]
  4110f8:	ldr	x0, [x0, #16]
  4110fc:	cmp	x0, #0x0
  411100:	b.eq	41119c <__fxstatat@plt+0xe63c>  // b.none
  411104:	ldr	x0, [sp, #72]
  411108:	ldr	x0, [x0, #16]
  41110c:	mov	x1, #0x10                  	// #16
  411110:	bl	402780 <calloc@plt>
  411114:	mov	x1, x0
  411118:	ldr	x0, [sp, #72]
  41111c:	str	x1, [x0]
  411120:	ldr	x0, [sp, #72]
  411124:	ldr	x0, [x0]
  411128:	cmp	x0, #0x0
  41112c:	b.eq	4111a4 <__fxstatat@plt+0xe644>  // b.none
  411130:	ldr	x0, [sp, #72]
  411134:	ldr	x1, [x0]
  411138:	ldr	x0, [sp, #72]
  41113c:	ldr	x0, [x0, #16]
  411140:	lsl	x0, x0, #4
  411144:	add	x1, x1, x0
  411148:	ldr	x0, [sp, #72]
  41114c:	str	x1, [x0, #8]
  411150:	ldr	x0, [sp, #72]
  411154:	str	xzr, [x0, #24]
  411158:	ldr	x0, [sp, #72]
  41115c:	str	xzr, [x0, #32]
  411160:	ldr	x0, [sp, #72]
  411164:	ldr	x1, [sp, #40]
  411168:	str	x1, [x0, #48]
  41116c:	ldr	x0, [sp, #72]
  411170:	ldr	x1, [sp, #32]
  411174:	str	x1, [x0, #56]
  411178:	ldr	x0, [sp, #72]
  41117c:	ldr	x1, [sp, #24]
  411180:	str	x1, [x0, #64]
  411184:	ldr	x0, [sp, #72]
  411188:	str	xzr, [x0, #72]
  41118c:	ldr	x0, [sp, #72]
  411190:	b	4111b4 <__fxstatat@plt+0xe654>
  411194:	nop
  411198:	b	4111a8 <__fxstatat@plt+0xe648>
  41119c:	nop
  4111a0:	b	4111a8 <__fxstatat@plt+0xe648>
  4111a4:	nop
  4111a8:	ldr	x0, [sp, #72]
  4111ac:	bl	4028f0 <free@plt>
  4111b0:	mov	x0, #0x0                   	// #0
  4111b4:	ldp	x29, x30, [sp], #80
  4111b8:	ret
  4111bc:	stp	x29, x30, [sp, #-64]!
  4111c0:	mov	x29, sp
  4111c4:	str	x0, [sp, #24]
  4111c8:	ldr	x0, [sp, #24]
  4111cc:	ldr	x0, [x0]
  4111d0:	str	x0, [sp, #56]
  4111d4:	b	4112a0 <__fxstatat@plt+0xe740>
  4111d8:	ldr	x0, [sp, #56]
  4111dc:	ldr	x0, [x0]
  4111e0:	cmp	x0, #0x0
  4111e4:	b.eq	411294 <__fxstatat@plt+0xe734>  // b.none
  4111e8:	ldr	x0, [sp, #56]
  4111ec:	ldr	x0, [x0, #8]
  4111f0:	str	x0, [sp, #48]
  4111f4:	b	411254 <__fxstatat@plt+0xe6f4>
  4111f8:	ldr	x0, [sp, #24]
  4111fc:	ldr	x0, [x0, #64]
  411200:	cmp	x0, #0x0
  411204:	b.eq	41121c <__fxstatat@plt+0xe6bc>  // b.none
  411208:	ldr	x0, [sp, #24]
  41120c:	ldr	x1, [x0, #64]
  411210:	ldr	x0, [sp, #48]
  411214:	ldr	x0, [x0]
  411218:	blr	x1
  41121c:	ldr	x0, [sp, #48]
  411220:	str	xzr, [x0]
  411224:	ldr	x0, [sp, #48]
  411228:	ldr	x0, [x0, #8]
  41122c:	str	x0, [sp, #40]
  411230:	ldr	x0, [sp, #24]
  411234:	ldr	x1, [x0, #72]
  411238:	ldr	x0, [sp, #48]
  41123c:	str	x1, [x0, #8]
  411240:	ldr	x0, [sp, #24]
  411244:	ldr	x1, [sp, #48]
  411248:	str	x1, [x0, #72]
  41124c:	ldr	x0, [sp, #40]
  411250:	str	x0, [sp, #48]
  411254:	ldr	x0, [sp, #48]
  411258:	cmp	x0, #0x0
  41125c:	b.ne	4111f8 <__fxstatat@plt+0xe698>  // b.any
  411260:	ldr	x0, [sp, #24]
  411264:	ldr	x0, [x0, #64]
  411268:	cmp	x0, #0x0
  41126c:	b.eq	411284 <__fxstatat@plt+0xe724>  // b.none
  411270:	ldr	x0, [sp, #24]
  411274:	ldr	x1, [x0, #64]
  411278:	ldr	x0, [sp, #56]
  41127c:	ldr	x0, [x0]
  411280:	blr	x1
  411284:	ldr	x0, [sp, #56]
  411288:	str	xzr, [x0]
  41128c:	ldr	x0, [sp, #56]
  411290:	str	xzr, [x0, #8]
  411294:	ldr	x0, [sp, #56]
  411298:	add	x0, x0, #0x10
  41129c:	str	x0, [sp, #56]
  4112a0:	ldr	x0, [sp, #24]
  4112a4:	ldr	x0, [x0, #8]
  4112a8:	ldr	x1, [sp, #56]
  4112ac:	cmp	x1, x0
  4112b0:	b.cc	4111d8 <__fxstatat@plt+0xe678>  // b.lo, b.ul, b.last
  4112b4:	ldr	x0, [sp, #24]
  4112b8:	str	xzr, [x0, #24]
  4112bc:	ldr	x0, [sp, #24]
  4112c0:	str	xzr, [x0, #32]
  4112c4:	nop
  4112c8:	ldp	x29, x30, [sp], #64
  4112cc:	ret
  4112d0:	stp	x29, x30, [sp, #-64]!
  4112d4:	mov	x29, sp
  4112d8:	str	x0, [sp, #24]
  4112dc:	ldr	x0, [sp, #24]
  4112e0:	ldr	x0, [x0, #64]
  4112e4:	cmp	x0, #0x0
  4112e8:	b.eq	411374 <__fxstatat@plt+0xe814>  // b.none
  4112ec:	ldr	x0, [sp, #24]
  4112f0:	ldr	x0, [x0, #32]
  4112f4:	cmp	x0, #0x0
  4112f8:	b.eq	411374 <__fxstatat@plt+0xe814>  // b.none
  4112fc:	ldr	x0, [sp, #24]
  411300:	ldr	x0, [x0]
  411304:	str	x0, [sp, #56]
  411308:	b	411360 <__fxstatat@plt+0xe800>
  41130c:	ldr	x0, [sp, #56]
  411310:	ldr	x0, [x0]
  411314:	cmp	x0, #0x0
  411318:	b.eq	411354 <__fxstatat@plt+0xe7f4>  // b.none
  41131c:	ldr	x0, [sp, #56]
  411320:	str	x0, [sp, #48]
  411324:	b	411348 <__fxstatat@plt+0xe7e8>
  411328:	ldr	x0, [sp, #24]
  41132c:	ldr	x1, [x0, #64]
  411330:	ldr	x0, [sp, #48]
  411334:	ldr	x0, [x0]
  411338:	blr	x1
  41133c:	ldr	x0, [sp, #48]
  411340:	ldr	x0, [x0, #8]
  411344:	str	x0, [sp, #48]
  411348:	ldr	x0, [sp, #48]
  41134c:	cmp	x0, #0x0
  411350:	b.ne	411328 <__fxstatat@plt+0xe7c8>  // b.any
  411354:	ldr	x0, [sp, #56]
  411358:	add	x0, x0, #0x10
  41135c:	str	x0, [sp, #56]
  411360:	ldr	x0, [sp, #24]
  411364:	ldr	x0, [x0, #8]
  411368:	ldr	x1, [sp, #56]
  41136c:	cmp	x1, x0
  411370:	b.cc	41130c <__fxstatat@plt+0xe7ac>  // b.lo, b.ul, b.last
  411374:	ldr	x0, [sp, #24]
  411378:	ldr	x0, [x0]
  41137c:	str	x0, [sp, #56]
  411380:	b	4113c8 <__fxstatat@plt+0xe868>
  411384:	ldr	x0, [sp, #56]
  411388:	ldr	x0, [x0, #8]
  41138c:	str	x0, [sp, #48]
  411390:	b	4113b0 <__fxstatat@plt+0xe850>
  411394:	ldr	x0, [sp, #48]
  411398:	ldr	x0, [x0, #8]
  41139c:	str	x0, [sp, #40]
  4113a0:	ldr	x0, [sp, #48]
  4113a4:	bl	4028f0 <free@plt>
  4113a8:	ldr	x0, [sp, #40]
  4113ac:	str	x0, [sp, #48]
  4113b0:	ldr	x0, [sp, #48]
  4113b4:	cmp	x0, #0x0
  4113b8:	b.ne	411394 <__fxstatat@plt+0xe834>  // b.any
  4113bc:	ldr	x0, [sp, #56]
  4113c0:	add	x0, x0, #0x10
  4113c4:	str	x0, [sp, #56]
  4113c8:	ldr	x0, [sp, #24]
  4113cc:	ldr	x0, [x0, #8]
  4113d0:	ldr	x1, [sp, #56]
  4113d4:	cmp	x1, x0
  4113d8:	b.cc	411384 <__fxstatat@plt+0xe824>  // b.lo, b.ul, b.last
  4113dc:	ldr	x0, [sp, #24]
  4113e0:	ldr	x0, [x0, #72]
  4113e4:	str	x0, [sp, #48]
  4113e8:	b	411408 <__fxstatat@plt+0xe8a8>
  4113ec:	ldr	x0, [sp, #48]
  4113f0:	ldr	x0, [x0, #8]
  4113f4:	str	x0, [sp, #40]
  4113f8:	ldr	x0, [sp, #48]
  4113fc:	bl	4028f0 <free@plt>
  411400:	ldr	x0, [sp, #40]
  411404:	str	x0, [sp, #48]
  411408:	ldr	x0, [sp, #48]
  41140c:	cmp	x0, #0x0
  411410:	b.ne	4113ec <__fxstatat@plt+0xe88c>  // b.any
  411414:	ldr	x0, [sp, #24]
  411418:	ldr	x0, [x0]
  41141c:	bl	4028f0 <free@plt>
  411420:	ldr	x0, [sp, #24]
  411424:	bl	4028f0 <free@plt>
  411428:	nop
  41142c:	ldp	x29, x30, [sp], #64
  411430:	ret
  411434:	stp	x29, x30, [sp, #-48]!
  411438:	mov	x29, sp
  41143c:	str	x0, [sp, #24]
  411440:	ldr	x0, [sp, #24]
  411444:	ldr	x0, [x0, #72]
  411448:	cmp	x0, #0x0
  41144c:	b.eq	411470 <__fxstatat@plt+0xe910>  // b.none
  411450:	ldr	x0, [sp, #24]
  411454:	ldr	x0, [x0, #72]
  411458:	str	x0, [sp, #40]
  41145c:	ldr	x0, [sp, #40]
  411460:	ldr	x1, [x0, #8]
  411464:	ldr	x0, [sp, #24]
  411468:	str	x1, [x0, #72]
  41146c:	b	41147c <__fxstatat@plt+0xe91c>
  411470:	mov	x0, #0x10                  	// #16
  411474:	bl	4026b0 <malloc@plt>
  411478:	str	x0, [sp, #40]
  41147c:	ldr	x0, [sp, #40]
  411480:	ldp	x29, x30, [sp], #48
  411484:	ret
  411488:	sub	sp, sp, #0x10
  41148c:	str	x0, [sp, #8]
  411490:	str	x1, [sp]
  411494:	ldr	x0, [sp]
  411498:	str	xzr, [x0]
  41149c:	ldr	x0, [sp, #8]
  4114a0:	ldr	x1, [x0, #72]
  4114a4:	ldr	x0, [sp]
  4114a8:	str	x1, [x0, #8]
  4114ac:	ldr	x0, [sp, #8]
  4114b0:	ldr	x1, [sp]
  4114b4:	str	x1, [x0, #72]
  4114b8:	nop
  4114bc:	add	sp, sp, #0x10
  4114c0:	ret
  4114c4:	stp	x29, x30, [sp, #-96]!
  4114c8:	mov	x29, sp
  4114cc:	str	x0, [sp, #40]
  4114d0:	str	x1, [sp, #32]
  4114d4:	str	x2, [sp, #24]
  4114d8:	strb	w3, [sp, #23]
  4114dc:	ldr	x1, [sp, #32]
  4114e0:	ldr	x0, [sp, #40]
  4114e4:	bl	410858 <__fxstatat@plt+0xdcf8>
  4114e8:	str	x0, [sp, #80]
  4114ec:	ldr	x0, [sp, #24]
  4114f0:	ldr	x1, [sp, #80]
  4114f4:	str	x1, [x0]
  4114f8:	ldr	x0, [sp, #80]
  4114fc:	ldr	x0, [x0]
  411500:	cmp	x0, #0x0
  411504:	b.ne	411510 <__fxstatat@plt+0xe9b0>  // b.any
  411508:	mov	x0, #0x0                   	// #0
  41150c:	b	41166c <__fxstatat@plt+0xeb0c>
  411510:	ldr	x0, [sp, #80]
  411514:	ldr	x0, [x0]
  411518:	ldr	x1, [sp, #32]
  41151c:	cmp	x1, x0
  411520:	b.eq	41154c <__fxstatat@plt+0xe9ec>  // b.none
  411524:	ldr	x0, [sp, #40]
  411528:	ldr	x2, [x0, #56]
  41152c:	ldr	x0, [sp, #80]
  411530:	ldr	x0, [x0]
  411534:	mov	x1, x0
  411538:	ldr	x0, [sp, #32]
  41153c:	blr	x2
  411540:	and	w0, w0, #0xff
  411544:	cmp	w0, #0x0
  411548:	b.eq	4115b0 <__fxstatat@plt+0xea50>  // b.none
  41154c:	ldr	x0, [sp, #80]
  411550:	ldr	x0, [x0]
  411554:	str	x0, [sp, #56]
  411558:	ldrb	w0, [sp, #23]
  41155c:	cmp	w0, #0x0
  411560:	b.eq	4115a8 <__fxstatat@plt+0xea48>  // b.none
  411564:	ldr	x0, [sp, #80]
  411568:	ldr	x0, [x0, #8]
  41156c:	cmp	x0, #0x0
  411570:	b.eq	4115a0 <__fxstatat@plt+0xea40>  // b.none
  411574:	ldr	x0, [sp, #80]
  411578:	ldr	x0, [x0, #8]
  41157c:	str	x0, [sp, #48]
  411580:	ldr	x2, [sp, #80]
  411584:	ldr	x0, [sp, #48]
  411588:	ldp	x0, x1, [x0]
  41158c:	stp	x0, x1, [x2]
  411590:	ldr	x1, [sp, #48]
  411594:	ldr	x0, [sp, #40]
  411598:	bl	411488 <__fxstatat@plt+0xe928>
  41159c:	b	4115a8 <__fxstatat@plt+0xea48>
  4115a0:	ldr	x0, [sp, #80]
  4115a4:	str	xzr, [x0]
  4115a8:	ldr	x0, [sp, #56]
  4115ac:	b	41166c <__fxstatat@plt+0xeb0c>
  4115b0:	ldr	x0, [sp, #80]
  4115b4:	str	x0, [sp, #88]
  4115b8:	b	411658 <__fxstatat@plt+0xeaf8>
  4115bc:	ldr	x0, [sp, #88]
  4115c0:	ldr	x0, [x0, #8]
  4115c4:	ldr	x0, [x0]
  4115c8:	ldr	x1, [sp, #32]
  4115cc:	cmp	x1, x0
  4115d0:	b.eq	411600 <__fxstatat@plt+0xeaa0>  // b.none
  4115d4:	ldr	x0, [sp, #40]
  4115d8:	ldr	x2, [x0, #56]
  4115dc:	ldr	x0, [sp, #88]
  4115e0:	ldr	x0, [x0, #8]
  4115e4:	ldr	x0, [x0]
  4115e8:	mov	x1, x0
  4115ec:	ldr	x0, [sp, #32]
  4115f0:	blr	x2
  4115f4:	and	w0, w0, #0xff
  4115f8:	cmp	w0, #0x0
  4115fc:	b.eq	41164c <__fxstatat@plt+0xeaec>  // b.none
  411600:	ldr	x0, [sp, #88]
  411604:	ldr	x0, [x0, #8]
  411608:	ldr	x0, [x0]
  41160c:	str	x0, [sp, #72]
  411610:	ldrb	w0, [sp, #23]
  411614:	cmp	w0, #0x0
  411618:	b.eq	411644 <__fxstatat@plt+0xeae4>  // b.none
  41161c:	ldr	x0, [sp, #88]
  411620:	ldr	x0, [x0, #8]
  411624:	str	x0, [sp, #64]
  411628:	ldr	x0, [sp, #64]
  41162c:	ldr	x1, [x0, #8]
  411630:	ldr	x0, [sp, #88]
  411634:	str	x1, [x0, #8]
  411638:	ldr	x1, [sp, #64]
  41163c:	ldr	x0, [sp, #40]
  411640:	bl	411488 <__fxstatat@plt+0xe928>
  411644:	ldr	x0, [sp, #72]
  411648:	b	41166c <__fxstatat@plt+0xeb0c>
  41164c:	ldr	x0, [sp, #88]
  411650:	ldr	x0, [x0, #8]
  411654:	str	x0, [sp, #88]
  411658:	ldr	x0, [sp, #88]
  41165c:	ldr	x0, [x0, #8]
  411660:	cmp	x0, #0x0
  411664:	b.ne	4115bc <__fxstatat@plt+0xea5c>  // b.any
  411668:	mov	x0, #0x0                   	// #0
  41166c:	ldp	x29, x30, [sp], #96
  411670:	ret
  411674:	stp	x29, x30, [sp, #-96]!
  411678:	mov	x29, sp
  41167c:	str	x0, [sp, #40]
  411680:	str	x1, [sp, #32]
  411684:	strb	w2, [sp, #31]
  411688:	ldr	x0, [sp, #32]
  41168c:	ldr	x0, [x0]
  411690:	str	x0, [sp, #88]
  411694:	b	41182c <__fxstatat@plt+0xeccc>
  411698:	ldr	x0, [sp, #88]
  41169c:	ldr	x0, [x0]
  4116a0:	cmp	x0, #0x0
  4116a4:	b.eq	411820 <__fxstatat@plt+0xecc0>  // b.none
  4116a8:	ldr	x0, [sp, #88]
  4116ac:	ldr	x0, [x0, #8]
  4116b0:	str	x0, [sp, #80]
  4116b4:	b	411744 <__fxstatat@plt+0xebe4>
  4116b8:	ldr	x0, [sp, #80]
  4116bc:	ldr	x0, [x0]
  4116c0:	str	x0, [sp, #72]
  4116c4:	ldr	x1, [sp, #72]
  4116c8:	ldr	x0, [sp, #40]
  4116cc:	bl	410858 <__fxstatat@plt+0xdcf8>
  4116d0:	str	x0, [sp, #64]
  4116d4:	ldr	x0, [sp, #80]
  4116d8:	ldr	x0, [x0, #8]
  4116dc:	str	x0, [sp, #48]
  4116e0:	ldr	x0, [sp, #64]
  4116e4:	ldr	x0, [x0]
  4116e8:	cmp	x0, #0x0
  4116ec:	b.eq	411710 <__fxstatat@plt+0xebb0>  // b.none
  4116f0:	ldr	x0, [sp, #64]
  4116f4:	ldr	x1, [x0, #8]
  4116f8:	ldr	x0, [sp, #80]
  4116fc:	str	x1, [x0, #8]
  411700:	ldr	x0, [sp, #64]
  411704:	ldr	x1, [sp, #80]
  411708:	str	x1, [x0, #8]
  41170c:	b	41173c <__fxstatat@plt+0xebdc>
  411710:	ldr	x0, [sp, #64]
  411714:	ldr	x1, [sp, #72]
  411718:	str	x1, [x0]
  41171c:	ldr	x0, [sp, #40]
  411720:	ldr	x0, [x0, #24]
  411724:	add	x1, x0, #0x1
  411728:	ldr	x0, [sp, #40]
  41172c:	str	x1, [x0, #24]
  411730:	ldr	x1, [sp, #80]
  411734:	ldr	x0, [sp, #40]
  411738:	bl	411488 <__fxstatat@plt+0xe928>
  41173c:	ldr	x0, [sp, #48]
  411740:	str	x0, [sp, #80]
  411744:	ldr	x0, [sp, #80]
  411748:	cmp	x0, #0x0
  41174c:	b.ne	4116b8 <__fxstatat@plt+0xeb58>  // b.any
  411750:	ldr	x0, [sp, #88]
  411754:	ldr	x0, [x0]
  411758:	str	x0, [sp, #72]
  41175c:	ldr	x0, [sp, #88]
  411760:	str	xzr, [x0, #8]
  411764:	ldrb	w0, [sp, #31]
  411768:	cmp	w0, #0x0
  41176c:	b.ne	41181c <__fxstatat@plt+0xecbc>  // b.any
  411770:	ldr	x1, [sp, #72]
  411774:	ldr	x0, [sp, #40]
  411778:	bl	410858 <__fxstatat@plt+0xdcf8>
  41177c:	str	x0, [sp, #64]
  411780:	ldr	x0, [sp, #64]
  411784:	ldr	x0, [x0]
  411788:	cmp	x0, #0x0
  41178c:	b.eq	4117dc <__fxstatat@plt+0xec7c>  // b.none
  411790:	ldr	x0, [sp, #40]
  411794:	bl	411434 <__fxstatat@plt+0xe8d4>
  411798:	str	x0, [sp, #56]
  41179c:	ldr	x0, [sp, #56]
  4117a0:	cmp	x0, #0x0
  4117a4:	b.ne	4117b0 <__fxstatat@plt+0xec50>  // b.any
  4117a8:	mov	w0, #0x0                   	// #0
  4117ac:	b	411844 <__fxstatat@plt+0xece4>
  4117b0:	ldr	x0, [sp, #56]
  4117b4:	ldr	x1, [sp, #72]
  4117b8:	str	x1, [x0]
  4117bc:	ldr	x0, [sp, #64]
  4117c0:	ldr	x1, [x0, #8]
  4117c4:	ldr	x0, [sp, #56]
  4117c8:	str	x1, [x0, #8]
  4117cc:	ldr	x0, [sp, #64]
  4117d0:	ldr	x1, [sp, #56]
  4117d4:	str	x1, [x0, #8]
  4117d8:	b	4117fc <__fxstatat@plt+0xec9c>
  4117dc:	ldr	x0, [sp, #64]
  4117e0:	ldr	x1, [sp, #72]
  4117e4:	str	x1, [x0]
  4117e8:	ldr	x0, [sp, #40]
  4117ec:	ldr	x0, [x0, #24]
  4117f0:	add	x1, x0, #0x1
  4117f4:	ldr	x0, [sp, #40]
  4117f8:	str	x1, [x0, #24]
  4117fc:	ldr	x0, [sp, #88]
  411800:	str	xzr, [x0]
  411804:	ldr	x0, [sp, #32]
  411808:	ldr	x0, [x0, #24]
  41180c:	sub	x1, x0, #0x1
  411810:	ldr	x0, [sp, #32]
  411814:	str	x1, [x0, #24]
  411818:	b	411820 <__fxstatat@plt+0xecc0>
  41181c:	nop
  411820:	ldr	x0, [sp, #88]
  411824:	add	x0, x0, #0x10
  411828:	str	x0, [sp, #88]
  41182c:	ldr	x0, [sp, #32]
  411830:	ldr	x0, [x0, #8]
  411834:	ldr	x1, [sp, #88]
  411838:	cmp	x1, x0
  41183c:	b.cc	411698 <__fxstatat@plt+0xeb38>  // b.lo, b.ul, b.last
  411840:	mov	w0, #0x1                   	// #1
  411844:	ldp	x29, x30, [sp], #96
  411848:	ret
  41184c:	stp	x29, x30, [sp, #-128]!
  411850:	mov	x29, sp
  411854:	str	x0, [sp, #24]
  411858:	str	x1, [sp, #16]
  41185c:	ldr	x0, [sp, #24]
  411860:	ldr	x0, [x0, #40]
  411864:	mov	x1, x0
  411868:	ldr	x0, [sp, #16]
  41186c:	bl	410f6c <__fxstatat@plt+0xe40c>
  411870:	str	x0, [sp, #120]
  411874:	ldr	x0, [sp, #120]
  411878:	cmp	x0, #0x0
  41187c:	b.ne	411888 <__fxstatat@plt+0xed28>  // b.any
  411880:	mov	w0, #0x0                   	// #0
  411884:	b	411a50 <__fxstatat@plt+0xeef0>
  411888:	ldr	x0, [sp, #24]
  41188c:	ldr	x0, [x0, #16]
  411890:	ldr	x1, [sp, #120]
  411894:	cmp	x1, x0
  411898:	b.ne	4118a4 <__fxstatat@plt+0xed44>  // b.any
  41189c:	mov	w0, #0x1                   	// #1
  4118a0:	b	411a50 <__fxstatat@plt+0xeef0>
  4118a4:	add	x0, sp, #0x20
  4118a8:	str	x0, [sp, #112]
  4118ac:	mov	x1, #0x10                  	// #16
  4118b0:	ldr	x0, [sp, #120]
  4118b4:	bl	402780 <calloc@plt>
  4118b8:	mov	x1, x0
  4118bc:	ldr	x0, [sp, #112]
  4118c0:	str	x1, [x0]
  4118c4:	ldr	x0, [sp, #112]
  4118c8:	ldr	x0, [x0]
  4118cc:	cmp	x0, #0x0
  4118d0:	b.ne	4118dc <__fxstatat@plt+0xed7c>  // b.any
  4118d4:	mov	w0, #0x0                   	// #0
  4118d8:	b	411a50 <__fxstatat@plt+0xeef0>
  4118dc:	ldr	x0, [sp, #112]
  4118e0:	ldr	x1, [sp, #120]
  4118e4:	str	x1, [x0, #16]
  4118e8:	ldr	x0, [sp, #112]
  4118ec:	ldr	x1, [x0]
  4118f0:	ldr	x0, [sp, #120]
  4118f4:	lsl	x0, x0, #4
  4118f8:	add	x1, x1, x0
  4118fc:	ldr	x0, [sp, #112]
  411900:	str	x1, [x0, #8]
  411904:	ldr	x0, [sp, #112]
  411908:	str	xzr, [x0, #24]
  41190c:	ldr	x0, [sp, #112]
  411910:	str	xzr, [x0, #32]
  411914:	ldr	x0, [sp, #24]
  411918:	ldr	x1, [x0, #40]
  41191c:	ldr	x0, [sp, #112]
  411920:	str	x1, [x0, #40]
  411924:	ldr	x0, [sp, #24]
  411928:	ldr	x1, [x0, #48]
  41192c:	ldr	x0, [sp, #112]
  411930:	str	x1, [x0, #48]
  411934:	ldr	x0, [sp, #24]
  411938:	ldr	x1, [x0, #56]
  41193c:	ldr	x0, [sp, #112]
  411940:	str	x1, [x0, #56]
  411944:	ldr	x0, [sp, #24]
  411948:	ldr	x1, [x0, #64]
  41194c:	ldr	x0, [sp, #112]
  411950:	str	x1, [x0, #64]
  411954:	ldr	x0, [sp, #24]
  411958:	ldr	x1, [x0, #72]
  41195c:	ldr	x0, [sp, #112]
  411960:	str	x1, [x0, #72]
  411964:	mov	w2, #0x0                   	// #0
  411968:	ldr	x1, [sp, #24]
  41196c:	ldr	x0, [sp, #112]
  411970:	bl	411674 <__fxstatat@plt+0xeb14>
  411974:	and	w0, w0, #0xff
  411978:	cmp	w0, #0x0
  41197c:	b.eq	4119e4 <__fxstatat@plt+0xee84>  // b.none
  411980:	ldr	x0, [sp, #24]
  411984:	ldr	x0, [x0]
  411988:	bl	4028f0 <free@plt>
  41198c:	ldr	x0, [sp, #112]
  411990:	ldr	x1, [x0]
  411994:	ldr	x0, [sp, #24]
  411998:	str	x1, [x0]
  41199c:	ldr	x0, [sp, #112]
  4119a0:	ldr	x1, [x0, #8]
  4119a4:	ldr	x0, [sp, #24]
  4119a8:	str	x1, [x0, #8]
  4119ac:	ldr	x0, [sp, #112]
  4119b0:	ldr	x1, [x0, #16]
  4119b4:	ldr	x0, [sp, #24]
  4119b8:	str	x1, [x0, #16]
  4119bc:	ldr	x0, [sp, #112]
  4119c0:	ldr	x1, [x0, #24]
  4119c4:	ldr	x0, [sp, #24]
  4119c8:	str	x1, [x0, #24]
  4119cc:	ldr	x0, [sp, #112]
  4119d0:	ldr	x1, [x0, #72]
  4119d4:	ldr	x0, [sp, #24]
  4119d8:	str	x1, [x0, #72]
  4119dc:	mov	w0, #0x1                   	// #1
  4119e0:	b	411a50 <__fxstatat@plt+0xeef0>
  4119e4:	ldr	x0, [sp, #112]
  4119e8:	ldr	x1, [x0, #72]
  4119ec:	ldr	x0, [sp, #24]
  4119f0:	str	x1, [x0, #72]
  4119f4:	mov	w2, #0x1                   	// #1
  4119f8:	ldr	x1, [sp, #112]
  4119fc:	ldr	x0, [sp, #24]
  411a00:	bl	411674 <__fxstatat@plt+0xeb14>
  411a04:	and	w0, w0, #0xff
  411a08:	eor	w0, w0, #0x1
  411a0c:	and	w0, w0, #0xff
  411a10:	cmp	w0, #0x0
  411a14:	b.ne	411a3c <__fxstatat@plt+0xeedc>  // b.any
  411a18:	mov	w2, #0x0                   	// #0
  411a1c:	ldr	x1, [sp, #112]
  411a20:	ldr	x0, [sp, #24]
  411a24:	bl	411674 <__fxstatat@plt+0xeb14>
  411a28:	and	w0, w0, #0xff
  411a2c:	eor	w0, w0, #0x1
  411a30:	and	w0, w0, #0xff
  411a34:	cmp	w0, #0x0
  411a38:	b.eq	411a40 <__fxstatat@plt+0xeee0>  // b.none
  411a3c:	bl	402820 <abort@plt>
  411a40:	ldr	x0, [sp, #112]
  411a44:	ldr	x0, [x0]
  411a48:	bl	4028f0 <free@plt>
  411a4c:	mov	w0, #0x0                   	// #0
  411a50:	ldp	x29, x30, [sp], #128
  411a54:	ret
  411a58:	stp	x29, x30, [sp, #-96]!
  411a5c:	mov	x29, sp
  411a60:	str	x0, [sp, #40]
  411a64:	str	x1, [sp, #32]
  411a68:	str	x2, [sp, #24]
  411a6c:	ldr	x0, [sp, #32]
  411a70:	cmp	x0, #0x0
  411a74:	b.ne	411a7c <__fxstatat@plt+0xef1c>  // b.any
  411a78:	bl	402820 <abort@plt>
  411a7c:	add	x0, sp, #0x38
  411a80:	mov	w3, #0x0                   	// #0
  411a84:	mov	x2, x0
  411a88:	ldr	x1, [sp, #32]
  411a8c:	ldr	x0, [sp, #40]
  411a90:	bl	4114c4 <__fxstatat@plt+0xe964>
  411a94:	str	x0, [sp, #88]
  411a98:	ldr	x0, [sp, #88]
  411a9c:	cmp	x0, #0x0
  411aa0:	b.eq	411ac4 <__fxstatat@plt+0xef64>  // b.none
  411aa4:	ldr	x0, [sp, #24]
  411aa8:	cmp	x0, #0x0
  411aac:	b.eq	411abc <__fxstatat@plt+0xef5c>  // b.none
  411ab0:	ldr	x0, [sp, #24]
  411ab4:	ldr	x1, [sp, #88]
  411ab8:	str	x1, [x0]
  411abc:	mov	w0, #0x0                   	// #0
  411ac0:	b	411ca8 <__fxstatat@plt+0xf148>
  411ac4:	ldr	x0, [sp, #40]
  411ac8:	ldr	x0, [x0, #24]
  411acc:	ucvtf	s1, x0
  411ad0:	ldr	x0, [sp, #40]
  411ad4:	ldr	x0, [x0, #40]
  411ad8:	ldr	s2, [x0, #8]
  411adc:	ldr	x0, [sp, #40]
  411ae0:	ldr	x0, [x0, #16]
  411ae4:	ucvtf	s0, x0
  411ae8:	fmul	s0, s2, s0
  411aec:	fcmpe	s1, s0
  411af0:	b.le	411bfc <__fxstatat@plt+0xf09c>
  411af4:	ldr	x0, [sp, #40]
  411af8:	bl	410e58 <__fxstatat@plt+0xe2f8>
  411afc:	ldr	x0, [sp, #40]
  411b00:	ldr	x0, [x0, #24]
  411b04:	ucvtf	s1, x0
  411b08:	ldr	x0, [sp, #40]
  411b0c:	ldr	x0, [x0, #40]
  411b10:	ldr	s2, [x0, #8]
  411b14:	ldr	x0, [sp, #40]
  411b18:	ldr	x0, [x0, #16]
  411b1c:	ucvtf	s0, x0
  411b20:	fmul	s0, s2, s0
  411b24:	fcmpe	s1, s0
  411b28:	b.le	411bfc <__fxstatat@plt+0xf09c>
  411b2c:	ldr	x0, [sp, #40]
  411b30:	ldr	x0, [x0, #40]
  411b34:	str	x0, [sp, #80]
  411b38:	ldr	x0, [sp, #80]
  411b3c:	ldrb	w0, [x0, #16]
  411b40:	cmp	w0, #0x0
  411b44:	b.eq	411b64 <__fxstatat@plt+0xf004>  // b.none
  411b48:	ldr	x0, [sp, #40]
  411b4c:	ldr	x0, [x0, #16]
  411b50:	ucvtf	s1, x0
  411b54:	ldr	x0, [sp, #80]
  411b58:	ldr	s0, [x0, #12]
  411b5c:	fmul	s0, s1, s0
  411b60:	b	411b88 <__fxstatat@plt+0xf028>
  411b64:	ldr	x0, [sp, #40]
  411b68:	ldr	x0, [x0, #16]
  411b6c:	ucvtf	s1, x0
  411b70:	ldr	x0, [sp, #80]
  411b74:	ldr	s0, [x0, #12]
  411b78:	fmul	s1, s1, s0
  411b7c:	ldr	x0, [sp, #80]
  411b80:	ldr	s0, [x0, #8]
  411b84:	fmul	s0, s1, s0
  411b88:	str	s0, [sp, #76]
  411b8c:	ldr	s0, [sp, #76]
  411b90:	mov	w0, #0x5f800000            	// #1602224128
  411b94:	fmov	s1, w0
  411b98:	fcmpe	s0, s1
  411b9c:	b.lt	411ba8 <__fxstatat@plt+0xf048>  // b.tstop
  411ba0:	mov	w0, #0xffffffff            	// #-1
  411ba4:	b	411ca8 <__fxstatat@plt+0xf148>
  411ba8:	ldr	s0, [sp, #76]
  411bac:	fcvtzu	x0, s0
  411bb0:	mov	x1, x0
  411bb4:	ldr	x0, [sp, #40]
  411bb8:	bl	41184c <__fxstatat@plt+0xecec>
  411bbc:	and	w0, w0, #0xff
  411bc0:	eor	w0, w0, #0x1
  411bc4:	and	w0, w0, #0xff
  411bc8:	cmp	w0, #0x0
  411bcc:	b.eq	411bd8 <__fxstatat@plt+0xf078>  // b.none
  411bd0:	mov	w0, #0xffffffff            	// #-1
  411bd4:	b	411ca8 <__fxstatat@plt+0xf148>
  411bd8:	add	x0, sp, #0x38
  411bdc:	mov	w3, #0x0                   	// #0
  411be0:	mov	x2, x0
  411be4:	ldr	x1, [sp, #32]
  411be8:	ldr	x0, [sp, #40]
  411bec:	bl	4114c4 <__fxstatat@plt+0xe964>
  411bf0:	cmp	x0, #0x0
  411bf4:	b.eq	411bfc <__fxstatat@plt+0xf09c>  // b.none
  411bf8:	bl	402820 <abort@plt>
  411bfc:	ldr	x0, [sp, #56]
  411c00:	ldr	x0, [x0]
  411c04:	cmp	x0, #0x0
  411c08:	b.eq	411c70 <__fxstatat@plt+0xf110>  // b.none
  411c0c:	ldr	x0, [sp, #40]
  411c10:	bl	411434 <__fxstatat@plt+0xe8d4>
  411c14:	str	x0, [sp, #64]
  411c18:	ldr	x0, [sp, #64]
  411c1c:	cmp	x0, #0x0
  411c20:	b.ne	411c2c <__fxstatat@plt+0xf0cc>  // b.any
  411c24:	mov	w0, #0xffffffff            	// #-1
  411c28:	b	411ca8 <__fxstatat@plt+0xf148>
  411c2c:	ldr	x0, [sp, #64]
  411c30:	ldr	x1, [sp, #32]
  411c34:	str	x1, [x0]
  411c38:	ldr	x0, [sp, #56]
  411c3c:	ldr	x1, [x0, #8]
  411c40:	ldr	x0, [sp, #64]
  411c44:	str	x1, [x0, #8]
  411c48:	ldr	x0, [sp, #56]
  411c4c:	ldr	x1, [sp, #64]
  411c50:	str	x1, [x0, #8]
  411c54:	ldr	x0, [sp, #40]
  411c58:	ldr	x0, [x0, #32]
  411c5c:	add	x1, x0, #0x1
  411c60:	ldr	x0, [sp, #40]
  411c64:	str	x1, [x0, #32]
  411c68:	mov	w0, #0x1                   	// #1
  411c6c:	b	411ca8 <__fxstatat@plt+0xf148>
  411c70:	ldr	x0, [sp, #56]
  411c74:	ldr	x1, [sp, #32]
  411c78:	str	x1, [x0]
  411c7c:	ldr	x0, [sp, #40]
  411c80:	ldr	x0, [x0, #32]
  411c84:	add	x1, x0, #0x1
  411c88:	ldr	x0, [sp, #40]
  411c8c:	str	x1, [x0, #32]
  411c90:	ldr	x0, [sp, #40]
  411c94:	ldr	x0, [x0, #24]
  411c98:	add	x1, x0, #0x1
  411c9c:	ldr	x0, [sp, #40]
  411ca0:	str	x1, [x0, #24]
  411ca4:	mov	w0, #0x1                   	// #1
  411ca8:	ldp	x29, x30, [sp], #96
  411cac:	ret
  411cb0:	stp	x29, x30, [sp, #-48]!
  411cb4:	mov	x29, sp
  411cb8:	str	x0, [sp, #24]
  411cbc:	str	x1, [sp, #16]
  411cc0:	add	x0, sp, #0x20
  411cc4:	mov	x2, x0
  411cc8:	ldr	x1, [sp, #16]
  411ccc:	ldr	x0, [sp, #24]
  411cd0:	bl	411a58 <__fxstatat@plt+0xeef8>
  411cd4:	str	w0, [sp, #44]
  411cd8:	ldr	w0, [sp, #44]
  411cdc:	cmn	w0, #0x1
  411ce0:	b.eq	411d00 <__fxstatat@plt+0xf1a0>  // b.none
  411ce4:	ldr	w0, [sp, #44]
  411ce8:	cmp	w0, #0x0
  411cec:	b.ne	411cf8 <__fxstatat@plt+0xf198>  // b.any
  411cf0:	ldr	x0, [sp, #32]
  411cf4:	b	411d04 <__fxstatat@plt+0xf1a4>
  411cf8:	ldr	x0, [sp, #16]
  411cfc:	b	411d04 <__fxstatat@plt+0xf1a4>
  411d00:	mov	x0, #0x0                   	// #0
  411d04:	ldp	x29, x30, [sp], #48
  411d08:	ret
  411d0c:	stp	x29, x30, [sp, #-80]!
  411d10:	mov	x29, sp
  411d14:	str	x0, [sp, #24]
  411d18:	str	x1, [sp, #16]
  411d1c:	add	x0, sp, #0x20
  411d20:	mov	w3, #0x1                   	// #1
  411d24:	mov	x2, x0
  411d28:	ldr	x1, [sp, #16]
  411d2c:	ldr	x0, [sp, #24]
  411d30:	bl	4114c4 <__fxstatat@plt+0xe964>
  411d34:	str	x0, [sp, #64]
  411d38:	ldr	x0, [sp, #64]
  411d3c:	cmp	x0, #0x0
  411d40:	b.ne	411d4c <__fxstatat@plt+0xf1ec>  // b.any
  411d44:	mov	x0, #0x0                   	// #0
  411d48:	b	411eb8 <__fxstatat@plt+0xf358>
  411d4c:	ldr	x0, [sp, #24]
  411d50:	ldr	x0, [x0, #32]
  411d54:	sub	x1, x0, #0x1
  411d58:	ldr	x0, [sp, #24]
  411d5c:	str	x1, [x0, #32]
  411d60:	ldr	x0, [sp, #32]
  411d64:	ldr	x0, [x0]
  411d68:	cmp	x0, #0x0
  411d6c:	b.ne	411eb4 <__fxstatat@plt+0xf354>  // b.any
  411d70:	ldr	x0, [sp, #24]
  411d74:	ldr	x0, [x0, #24]
  411d78:	sub	x1, x0, #0x1
  411d7c:	ldr	x0, [sp, #24]
  411d80:	str	x1, [x0, #24]
  411d84:	ldr	x0, [sp, #24]
  411d88:	ldr	x0, [x0, #24]
  411d8c:	ucvtf	s1, x0
  411d90:	ldr	x0, [sp, #24]
  411d94:	ldr	x0, [x0, #40]
  411d98:	ldr	s2, [x0]
  411d9c:	ldr	x0, [sp, #24]
  411da0:	ldr	x0, [x0, #16]
  411da4:	ucvtf	s0, x0
  411da8:	fmul	s0, s2, s0
  411dac:	fcmpe	s1, s0
  411db0:	b.pl	411eb4 <__fxstatat@plt+0xf354>  // b.nfrst
  411db4:	ldr	x0, [sp, #24]
  411db8:	bl	410e58 <__fxstatat@plt+0xe2f8>
  411dbc:	ldr	x0, [sp, #24]
  411dc0:	ldr	x0, [x0, #24]
  411dc4:	ucvtf	s1, x0
  411dc8:	ldr	x0, [sp, #24]
  411dcc:	ldr	x0, [x0, #40]
  411dd0:	ldr	s2, [x0]
  411dd4:	ldr	x0, [sp, #24]
  411dd8:	ldr	x0, [x0, #16]
  411ddc:	ucvtf	s0, x0
  411de0:	fmul	s0, s2, s0
  411de4:	fcmpe	s1, s0
  411de8:	b.pl	411eb4 <__fxstatat@plt+0xf354>  // b.nfrst
  411dec:	ldr	x0, [sp, #24]
  411df0:	ldr	x0, [x0, #40]
  411df4:	str	x0, [sp, #56]
  411df8:	ldr	x0, [sp, #56]
  411dfc:	ldrb	w0, [x0, #16]
  411e00:	cmp	w0, #0x0
  411e04:	b.eq	411e28 <__fxstatat@plt+0xf2c8>  // b.none
  411e08:	ldr	x0, [sp, #24]
  411e0c:	ldr	x0, [x0, #16]
  411e10:	ucvtf	s1, x0
  411e14:	ldr	x0, [sp, #56]
  411e18:	ldr	s0, [x0, #4]
  411e1c:	fmul	s0, s1, s0
  411e20:	fcvtzu	x0, s0
  411e24:	b	411e50 <__fxstatat@plt+0xf2f0>
  411e28:	ldr	x0, [sp, #24]
  411e2c:	ldr	x0, [x0, #16]
  411e30:	ucvtf	s1, x0
  411e34:	ldr	x0, [sp, #56]
  411e38:	ldr	s0, [x0, #4]
  411e3c:	fmul	s1, s1, s0
  411e40:	ldr	x0, [sp, #56]
  411e44:	ldr	s0, [x0, #8]
  411e48:	fmul	s0, s1, s0
  411e4c:	fcvtzu	x0, s0
  411e50:	str	x0, [sp, #48]
  411e54:	ldr	x1, [sp, #48]
  411e58:	ldr	x0, [sp, #24]
  411e5c:	bl	41184c <__fxstatat@plt+0xecec>
  411e60:	and	w0, w0, #0xff
  411e64:	eor	w0, w0, #0x1
  411e68:	and	w0, w0, #0xff
  411e6c:	cmp	w0, #0x0
  411e70:	b.eq	411eb4 <__fxstatat@plt+0xf354>  // b.none
  411e74:	ldr	x0, [sp, #24]
  411e78:	ldr	x0, [x0, #72]
  411e7c:	str	x0, [sp, #72]
  411e80:	b	411ea0 <__fxstatat@plt+0xf340>
  411e84:	ldr	x0, [sp, #72]
  411e88:	ldr	x0, [x0, #8]
  411e8c:	str	x0, [sp, #40]
  411e90:	ldr	x0, [sp, #72]
  411e94:	bl	4028f0 <free@plt>
  411e98:	ldr	x0, [sp, #40]
  411e9c:	str	x0, [sp, #72]
  411ea0:	ldr	x0, [sp, #72]
  411ea4:	cmp	x0, #0x0
  411ea8:	b.ne	411e84 <__fxstatat@plt+0xf324>  // b.any
  411eac:	ldr	x0, [sp, #24]
  411eb0:	str	xzr, [x0, #72]
  411eb4:	ldr	x0, [sp, #64]
  411eb8:	ldp	x29, x30, [sp], #80
  411ebc:	ret
  411ec0:	stp	x29, x30, [sp, #-48]!
  411ec4:	mov	x29, sp
  411ec8:	str	x0, [sp, #24]
  411ecc:	str	x1, [sp, #16]
  411ed0:	ldr	x0, [sp, #24]
  411ed4:	str	x0, [sp, #40]
  411ed8:	ldr	x0, [sp, #40]
  411edc:	ldr	x0, [x0]
  411ee0:	ldr	x1, [sp, #16]
  411ee4:	bl	41c760 <_obstack_memory_used@@Base+0xd10>
  411ee8:	str	x0, [sp, #32]
  411eec:	ldr	x0, [sp, #40]
  411ef0:	ldr	x1, [x0, #8]
  411ef4:	ldr	x0, [sp, #32]
  411ef8:	eor	x0, x1, x0
  411efc:	ldr	x1, [sp, #16]
  411f00:	udiv	x2, x0, x1
  411f04:	ldr	x1, [sp, #16]
  411f08:	mul	x1, x2, x1
  411f0c:	sub	x0, x0, x1
  411f10:	ldp	x29, x30, [sp], #48
  411f14:	ret
  411f18:	sub	sp, sp, #0x20
  411f1c:	str	x0, [sp, #8]
  411f20:	str	x1, [sp]
  411f24:	ldr	x0, [sp, #8]
  411f28:	str	x0, [sp, #24]
  411f2c:	ldr	x0, [sp, #24]
  411f30:	ldr	x0, [x0, #8]
  411f34:	ldr	x1, [sp]
  411f38:	udiv	x2, x0, x1
  411f3c:	ldr	x1, [sp]
  411f40:	mul	x1, x2, x1
  411f44:	sub	x0, x0, x1
  411f48:	add	sp, sp, #0x20
  411f4c:	ret
  411f50:	stp	x29, x30, [sp, #-48]!
  411f54:	mov	x29, sp
  411f58:	str	x0, [sp, #24]
  411f5c:	str	x1, [sp, #16]
  411f60:	ldr	x0, [sp, #24]
  411f64:	str	x0, [sp, #40]
  411f68:	ldr	x0, [sp, #16]
  411f6c:	str	x0, [sp, #32]
  411f70:	ldr	x0, [sp, #40]
  411f74:	ldr	x1, [x0, #8]
  411f78:	ldr	x0, [sp, #32]
  411f7c:	ldr	x0, [x0, #8]
  411f80:	cmp	x1, x0
  411f84:	b.ne	411fd0 <__fxstatat@plt+0xf470>  // b.any
  411f88:	ldr	x0, [sp, #40]
  411f8c:	ldr	x1, [x0, #16]
  411f90:	ldr	x0, [sp, #32]
  411f94:	ldr	x0, [x0, #16]
  411f98:	cmp	x1, x0
  411f9c:	b.ne	411fd0 <__fxstatat@plt+0xf470>  // b.any
  411fa0:	ldr	x0, [sp, #40]
  411fa4:	ldr	x2, [x0]
  411fa8:	ldr	x0, [sp, #32]
  411fac:	ldr	x0, [x0]
  411fb0:	mov	x1, x0
  411fb4:	mov	x0, x2
  411fb8:	bl	418f58 <__fxstatat@plt+0x163f8>
  411fbc:	and	w0, w0, #0xff
  411fc0:	cmp	w0, #0x0
  411fc4:	b.eq	411fd0 <__fxstatat@plt+0xf470>  // b.none
  411fc8:	mov	w0, #0x1                   	// #1
  411fcc:	b	411fd4 <__fxstatat@plt+0xf474>
  411fd0:	mov	w0, #0x0                   	// #0
  411fd4:	and	w0, w0, #0x1
  411fd8:	and	w0, w0, #0xff
  411fdc:	ldp	x29, x30, [sp], #48
  411fe0:	ret
  411fe4:	stp	x29, x30, [sp, #-48]!
  411fe8:	mov	x29, sp
  411fec:	str	x0, [sp, #24]
  411ff0:	str	x1, [sp, #16]
  411ff4:	ldr	x0, [sp, #24]
  411ff8:	str	x0, [sp, #40]
  411ffc:	ldr	x0, [sp, #16]
  412000:	str	x0, [sp, #32]
  412004:	ldr	x0, [sp, #40]
  412008:	ldr	x1, [x0, #8]
  41200c:	ldr	x0, [sp, #32]
  412010:	ldr	x0, [x0, #8]
  412014:	cmp	x1, x0
  412018:	b.ne	412060 <__fxstatat@plt+0xf500>  // b.any
  41201c:	ldr	x0, [sp, #40]
  412020:	ldr	x1, [x0, #16]
  412024:	ldr	x0, [sp, #32]
  412028:	ldr	x0, [x0, #16]
  41202c:	cmp	x1, x0
  412030:	b.ne	412060 <__fxstatat@plt+0xf500>  // b.any
  412034:	ldr	x0, [sp, #40]
  412038:	ldr	x2, [x0]
  41203c:	ldr	x0, [sp, #32]
  412040:	ldr	x0, [x0]
  412044:	mov	x1, x0
  412048:	mov	x0, x2
  41204c:	bl	4028b0 <strcmp@plt>
  412050:	cmp	w0, #0x0
  412054:	b.ne	412060 <__fxstatat@plt+0xf500>  // b.any
  412058:	mov	w0, #0x1                   	// #1
  41205c:	b	412064 <__fxstatat@plt+0xf504>
  412060:	mov	w0, #0x0                   	// #0
  412064:	and	w0, w0, #0x1
  412068:	and	w0, w0, #0xff
  41206c:	ldp	x29, x30, [sp], #48
  412070:	ret
  412074:	stp	x29, x30, [sp, #-48]!
  412078:	mov	x29, sp
  41207c:	str	x0, [sp, #24]
  412080:	ldr	x0, [sp, #24]
  412084:	str	x0, [sp, #40]
  412088:	ldr	x0, [sp, #40]
  41208c:	ldr	x0, [x0]
  412090:	bl	4028f0 <free@plt>
  412094:	ldr	x0, [sp, #40]
  412098:	bl	4028f0 <free@plt>
  41209c:	nop
  4120a0:	ldp	x29, x30, [sp], #48
  4120a4:	ret
  4120a8:	stp	x29, x30, [sp, #-64]!
  4120ac:	mov	x29, sp
  4120b0:	str	w0, [sp, #44]
  4120b4:	str	q0, [sp, #16]
  4120b8:	ldr	w0, [sp, #44]
  4120bc:	cmp	w0, #0x1
  4120c0:	b.eq	412134 <__fxstatat@plt+0xf5d4>  // b.none
  4120c4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4120c8:	add	x0, x0, #0x3b0
  4120cc:	ldr	q1, [x0]
  4120d0:	ldr	q0, [sp, #16]
  4120d4:	bl	41e698 <_obstack_memory_used@@Base+0x2c48>
  4120d8:	cmp	w0, #0x0
  4120dc:	b.ge	412134 <__fxstatat@plt+0xf5d4>  // b.tcont
  4120e0:	ldr	q0, [sp, #16]
  4120e4:	bl	420078 <_obstack_memory_used@@Base+0x4628>
  4120e8:	str	x0, [sp, #56]
  4120ec:	ldr	w0, [sp, #44]
  4120f0:	cmp	w0, #0x0
  4120f4:	b.ne	41211c <__fxstatat@plt+0xf5bc>  // b.any
  4120f8:	ldr	x0, [sp, #56]
  4120fc:	bl	420310 <_obstack_memory_used@@Base+0x48c0>
  412100:	mov	v1.16b, v0.16b
  412104:	ldr	q0, [sp, #16]
  412108:	bl	41e12c <_obstack_memory_used@@Base+0x26dc>
  41210c:	cmp	w0, #0x0
  412110:	b.eq	41211c <__fxstatat@plt+0xf5bc>  // b.none
  412114:	mov	w0, #0x1                   	// #1
  412118:	b	412120 <__fxstatat@plt+0xf5c0>
  41211c:	mov	w0, #0x0                   	// #0
  412120:	sxtw	x1, w0
  412124:	ldr	x0, [sp, #56]
  412128:	add	x0, x1, x0
  41212c:	bl	420310 <_obstack_memory_used@@Base+0x48c0>
  412130:	str	q0, [sp, #16]
  412134:	ldr	q0, [sp, #16]
  412138:	ldp	x29, x30, [sp], #64
  41213c:	ret
  412140:	stp	x29, x30, [sp, #-144]!
  412144:	mov	x29, sp
  412148:	str	x19, [sp, #16]
  41214c:	str	x0, [sp, #56]
  412150:	str	x1, [sp, #48]
  412154:	str	x2, [sp, #40]
  412158:	str	x3, [sp, #32]
  41215c:	mov	x0, #0xffffffffffffffff    	// #-1
  412160:	str	x0, [sp, #136]
  412164:	ldr	x0, [sp, #32]
  412168:	bl	402500 <strlen@plt>
  41216c:	str	x0, [sp, #120]
  412170:	ldr	x0, [sp, #48]
  412174:	str	x0, [sp, #128]
  412178:	add	x0, sp, #0x48
  41217c:	ldr	x2, [sp, #48]
  412180:	ldr	x1, [sp, #56]
  412184:	bl	402490 <memcpy@plt>
  412188:	ldr	x1, [sp, #56]
  41218c:	ldr	x0, [sp, #48]
  412190:	add	x19, x1, x0
  412194:	ldr	x0, [sp, #40]
  412198:	ldrb	w0, [x0]
  41219c:	strb	w0, [sp, #119]
  4121a0:	ldrb	w0, [sp, #119]
  4121a4:	cmp	w0, #0x0
  4121a8:	b.eq	4121d4 <__fxstatat@plt+0xf674>  // b.none
  4121ac:	ldrb	w0, [sp, #119]
  4121b0:	cmp	w0, #0xff
  4121b4:	b.eq	4121c0 <__fxstatat@plt+0xf660>  // b.none
  4121b8:	ldrb	w0, [sp, #119]
  4121bc:	b	4121c4 <__fxstatat@plt+0xf664>
  4121c0:	ldr	x0, [sp, #128]
  4121c4:	str	x0, [sp, #136]
  4121c8:	ldr	x0, [sp, #40]
  4121cc:	add	x0, x0, #0x1
  4121d0:	str	x0, [sp, #40]
  4121d4:	ldr	x1, [sp, #128]
  4121d8:	ldr	x0, [sp, #136]
  4121dc:	cmp	x1, x0
  4121e0:	b.cs	4121ec <__fxstatat@plt+0xf68c>  // b.hs, b.nlast
  4121e4:	ldr	x0, [sp, #128]
  4121e8:	str	x0, [sp, #136]
  4121ec:	ldr	x0, [sp, #136]
  4121f0:	neg	x0, x0
  4121f4:	add	x19, x19, x0
  4121f8:	ldr	x1, [sp, #128]
  4121fc:	ldr	x0, [sp, #136]
  412200:	sub	x0, x1, x0
  412204:	str	x0, [sp, #128]
  412208:	add	x1, sp, #0x48
  41220c:	ldr	x0, [sp, #128]
  412210:	add	x0, x1, x0
  412214:	ldr	x2, [sp, #136]
  412218:	mov	x1, x0
  41221c:	mov	x0, x19
  412220:	bl	402490 <memcpy@plt>
  412224:	ldr	x0, [sp, #128]
  412228:	cmp	x0, #0x0
  41222c:	b.ne	412238 <__fxstatat@plt+0xf6d8>  // b.any
  412230:	mov	x0, x19
  412234:	b	412258 <__fxstatat@plt+0xf6f8>
  412238:	ldr	x0, [sp, #120]
  41223c:	neg	x0, x0
  412240:	add	x19, x19, x0
  412244:	ldr	x2, [sp, #120]
  412248:	ldr	x1, [sp, #32]
  41224c:	mov	x0, x19
  412250:	bl	402490 <memcpy@plt>
  412254:	b	412194 <__fxstatat@plt+0xf634>
  412258:	ldr	x19, [sp, #16]
  41225c:	ldp	x29, x30, [sp], #144
  412260:	ret
  412264:	stp	x29, x30, [sp, #-320]!
  412268:	mov	x29, sp
  41226c:	str	x0, [sp, #72]
  412270:	str	x1, [sp, #64]
  412274:	str	w2, [sp, #60]
  412278:	str	x3, [sp, #48]
  41227c:	str	x4, [sp, #40]
  412280:	ldr	w0, [sp, #60]
  412284:	and	w0, w0, #0x3
  412288:	str	w0, [sp, #196]
  41228c:	ldr	w0, [sp, #60]
  412290:	and	w0, w0, #0x20
  412294:	cmp	w0, #0x0
  412298:	b.eq	4122a4 <__fxstatat@plt+0xf744>  // b.none
  41229c:	mov	w0, #0x400                 	// #1024
  4122a0:	b	4122a8 <__fxstatat@plt+0xf748>
  4122a4:	mov	w0, #0x3e8                 	// #1000
  4122a8:	str	w0, [sp, #192]
  4122ac:	mov	w0, #0xffffffff            	// #-1
  4122b0:	str	w0, [sp, #304]
  4122b4:	mov	w0, #0x8                   	// #8
  4122b8:	str	w0, [sp, #188]
  4122bc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4122c0:	add	x0, x0, #0x310
  4122c4:	str	x0, [sp, #264]
  4122c8:	mov	x0, #0x1                   	// #1
  4122cc:	str	x0, [sp, #256]
  4122d0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4122d4:	add	x0, x0, #0x318
  4122d8:	str	x0, [sp, #176]
  4122dc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4122e0:	add	x0, x0, #0x318
  4122e4:	str	x0, [sp, #248]
  4122e8:	bl	402650 <localeconv@plt>
  4122ec:	str	x0, [sp, #168]
  4122f0:	ldr	x0, [sp, #168]
  4122f4:	ldr	x0, [x0]
  4122f8:	bl	402500 <strlen@plt>
  4122fc:	str	x0, [sp, #160]
  412300:	ldr	x0, [sp, #160]
  412304:	cmp	x0, #0x0
  412308:	b.eq	41232c <__fxstatat@plt+0xf7cc>  // b.none
  41230c:	ldr	x0, [sp, #160]
  412310:	cmp	x0, #0x10
  412314:	b.hi	41232c <__fxstatat@plt+0xf7cc>  // b.pmore
  412318:	ldr	x0, [sp, #168]
  41231c:	ldr	x0, [x0]
  412320:	str	x0, [sp, #264]
  412324:	ldr	x0, [sp, #160]
  412328:	str	x0, [sp, #256]
  41232c:	ldr	x0, [sp, #168]
  412330:	ldr	x0, [x0, #16]
  412334:	str	x0, [sp, #176]
  412338:	ldr	x0, [sp, #168]
  41233c:	ldr	x0, [x0, #8]
  412340:	bl	402500 <strlen@plt>
  412344:	cmp	x0, #0x10
  412348:	b.hi	412358 <__fxstatat@plt+0xf7f8>  // b.pmore
  41234c:	ldr	x0, [sp, #168]
  412350:	ldr	x0, [x0, #8]
  412354:	str	x0, [sp, #248]
  412358:	ldr	x0, [sp, #64]
  41235c:	add	x0, x0, #0x287
  412360:	str	x0, [sp, #288]
  412364:	ldr	x0, [sp, #288]
  412368:	str	x0, [sp, #296]
  41236c:	ldr	x1, [sp, #40]
  412370:	ldr	x0, [sp, #48]
  412374:	cmp	x1, x0
  412378:	b.hi	4123e0 <__fxstatat@plt+0xf880>  // b.pmore
  41237c:	ldr	x0, [sp, #48]
  412380:	ldr	x1, [sp, #40]
  412384:	udiv	x2, x0, x1
  412388:	ldr	x1, [sp, #40]
  41238c:	mul	x1, x2, x1
  412390:	sub	x0, x0, x1
  412394:	cmp	x0, #0x0
  412398:	b.ne	4124d0 <__fxstatat@plt+0xf970>  // b.any
  41239c:	ldr	x1, [sp, #48]
  4123a0:	ldr	x0, [sp, #40]
  4123a4:	udiv	x0, x1, x0
  4123a8:	str	x0, [sp, #128]
  4123ac:	ldr	x1, [sp, #72]
  4123b0:	ldr	x0, [sp, #128]
  4123b4:	mul	x0, x1, x0
  4123b8:	str	x0, [sp, #312]
  4123bc:	ldr	x1, [sp, #312]
  4123c0:	ldr	x0, [sp, #128]
  4123c4:	udiv	x0, x1, x0
  4123c8:	ldr	x1, [sp, #72]
  4123cc:	cmp	x1, x0
  4123d0:	b.ne	4124d0 <__fxstatat@plt+0xf970>  // b.any
  4123d4:	str	wzr, [sp, #308]
  4123d8:	str	wzr, [sp, #276]
  4123dc:	b	4126e0 <__fxstatat@plt+0xfb80>
  4123e0:	ldr	x0, [sp, #48]
  4123e4:	cmp	x0, #0x0
  4123e8:	b.eq	4124d0 <__fxstatat@plt+0xf970>  // b.none
  4123ec:	ldr	x0, [sp, #40]
  4123f0:	ldr	x1, [sp, #48]
  4123f4:	udiv	x2, x0, x1
  4123f8:	ldr	x1, [sp, #48]
  4123fc:	mul	x1, x2, x1
  412400:	sub	x0, x0, x1
  412404:	cmp	x0, #0x0
  412408:	b.ne	4124d0 <__fxstatat@plt+0xf970>  // b.any
  41240c:	ldr	x1, [sp, #40]
  412410:	ldr	x0, [sp, #48]
  412414:	udiv	x0, x1, x0
  412418:	str	x0, [sp, #152]
  41241c:	ldr	x0, [sp, #72]
  412420:	ldr	x1, [sp, #152]
  412424:	udiv	x2, x0, x1
  412428:	ldr	x1, [sp, #152]
  41242c:	mul	x1, x2, x1
  412430:	sub	x1, x0, x1
  412434:	mov	x0, x1
  412438:	lsl	x0, x0, #2
  41243c:	add	x0, x0, x1
  412440:	lsl	x0, x0, #1
  412444:	str	x0, [sp, #144]
  412448:	ldr	x0, [sp, #144]
  41244c:	ldr	x1, [sp, #152]
  412450:	udiv	x2, x0, x1
  412454:	ldr	x1, [sp, #152]
  412458:	mul	x1, x2, x1
  41245c:	sub	x0, x0, x1
  412460:	lsl	x0, x0, #1
  412464:	str	x0, [sp, #136]
  412468:	ldr	x1, [sp, #72]
  41246c:	ldr	x0, [sp, #152]
  412470:	udiv	x0, x1, x0
  412474:	str	x0, [sp, #312]
  412478:	ldr	x1, [sp, #144]
  41247c:	ldr	x0, [sp, #152]
  412480:	udiv	x0, x1, x0
  412484:	str	w0, [sp, #308]
  412488:	ldr	x1, [sp, #136]
  41248c:	ldr	x0, [sp, #152]
  412490:	cmp	x1, x0
  412494:	b.cs	4124ac <__fxstatat@plt+0xf94c>  // b.hs, b.nlast
  412498:	ldr	x0, [sp, #136]
  41249c:	cmp	x0, #0x0
  4124a0:	cset	w0, ne  // ne = any
  4124a4:	and	w0, w0, #0xff
  4124a8:	b	4124c8 <__fxstatat@plt+0xf968>
  4124ac:	ldr	x1, [sp, #152]
  4124b0:	ldr	x0, [sp, #136]
  4124b4:	cmp	x1, x0
  4124b8:	b.cs	4124c4 <__fxstatat@plt+0xf964>  // b.hs, b.nlast
  4124bc:	mov	w0, #0x3                   	// #3
  4124c0:	b	4124c8 <__fxstatat@plt+0xf968>
  4124c4:	mov	w0, #0x2                   	// #2
  4124c8:	str	w0, [sp, #276]
  4124cc:	b	4126e0 <__fxstatat@plt+0xfb80>
  4124d0:	ldr	x0, [sp, #40]
  4124d4:	bl	420310 <_obstack_memory_used@@Base+0x48c0>
  4124d8:	str	q0, [sp, #112]
  4124dc:	ldr	x0, [sp, #72]
  4124e0:	bl	420310 <_obstack_memory_used@@Base+0x48c0>
  4124e4:	str	q0, [sp, #16]
  4124e8:	ldr	x0, [sp, #48]
  4124ec:	bl	420310 <_obstack_memory_used@@Base+0x48c0>
  4124f0:	ldr	q1, [sp, #112]
  4124f4:	bl	41ca2c <_obstack_memory_used@@Base+0xfdc>
  4124f8:	mov	v1.16b, v0.16b
  4124fc:	ldr	q0, [sp, #16]
  412500:	bl	41e9cc <_obstack_memory_used@@Base+0x2f7c>
  412504:	str	q0, [sp, #96]
  412508:	ldr	w0, [sp, #60]
  41250c:	and	w0, w0, #0x10
  412510:	cmp	w0, #0x0
  412514:	b.ne	412548 <__fxstatat@plt+0xf9e8>  // b.any
  412518:	ldr	q0, [sp, #96]
  41251c:	ldr	w0, [sp, #196]
  412520:	bl	4120a8 <__fxstatat@plt+0xf548>
  412524:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412528:	add	x1, x0, #0x320
  41252c:	ldr	x0, [sp, #64]
  412530:	bl	4025c0 <sprintf@plt>
  412534:	ldr	x0, [sp, #64]
  412538:	bl	402500 <strlen@plt>
  41253c:	str	x0, [sp, #240]
  412540:	str	xzr, [sp, #232]
  412544:	b	4126a0 <__fxstatat@plt+0xfb40>
  412548:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41254c:	add	x0, x0, #0x3c0
  412550:	ldr	q0, [x0]
  412554:	str	q0, [sp, #208]
  412558:	str	wzr, [sp, #304]
  41255c:	ldr	w0, [sp, #192]
  412560:	bl	41ff00 <_obstack_memory_used@@Base+0x44b0>
  412564:	mov	v1.16b, v0.16b
  412568:	ldr	q0, [sp, #208]
  41256c:	bl	41e9cc <_obstack_memory_used@@Base+0x2f7c>
  412570:	str	q0, [sp, #208]
  412574:	ldr	w0, [sp, #304]
  412578:	add	w0, w0, #0x1
  41257c:	str	w0, [sp, #304]
  412580:	ldr	w0, [sp, #192]
  412584:	bl	41ff00 <_obstack_memory_used@@Base+0x44b0>
  412588:	ldr	q1, [sp, #208]
  41258c:	bl	41e9cc <_obstack_memory_used@@Base+0x2f7c>
  412590:	mov	v1.16b, v0.16b
  412594:	ldr	q0, [sp, #96]
  412598:	bl	41e364 <_obstack_memory_used@@Base+0x2914>
  41259c:	cmp	w0, #0x0
  4125a0:	b.lt	4125b4 <__fxstatat@plt+0xfa54>  // b.tstop
  4125a4:	ldr	w1, [sp, #304]
  4125a8:	ldr	w0, [sp, #188]
  4125ac:	cmp	w1, w0
  4125b0:	b.lt	41255c <__fxstatat@plt+0xf9fc>  // b.tstop
  4125b4:	ldr	q1, [sp, #208]
  4125b8:	ldr	q0, [sp, #96]
  4125bc:	bl	41ca2c <_obstack_memory_used@@Base+0xfdc>
  4125c0:	str	q0, [sp, #96]
  4125c4:	ldr	q0, [sp, #96]
  4125c8:	ldr	w0, [sp, #196]
  4125cc:	bl	4120a8 <__fxstatat@plt+0xf548>
  4125d0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4125d4:	add	x1, x0, #0x328
  4125d8:	ldr	x0, [sp, #64]
  4125dc:	bl	4025c0 <sprintf@plt>
  4125e0:	ldr	x0, [sp, #64]
  4125e4:	bl	402500 <strlen@plt>
  4125e8:	str	x0, [sp, #240]
  4125ec:	ldr	x0, [sp, #256]
  4125f0:	add	x0, x0, #0x1
  4125f4:	str	x0, [sp, #232]
  4125f8:	ldr	w0, [sp, #60]
  4125fc:	and	w0, w0, #0x20
  412600:	cmp	w0, #0x0
  412604:	cset	w0, eq  // eq = none
  412608:	and	w0, w0, #0xff
  41260c:	and	x1, x0, #0xff
  412610:	ldr	x0, [sp, #232]
  412614:	add	x0, x1, x0
  412618:	add	x0, x0, #0x1
  41261c:	ldr	x1, [sp, #240]
  412620:	cmp	x1, x0
  412624:	b.hi	412654 <__fxstatat@plt+0xfaf4>  // b.pmore
  412628:	ldr	w0, [sp, #60]
  41262c:	and	w0, w0, #0x8
  412630:	cmp	w0, #0x0
  412634:	b.eq	4126a0 <__fxstatat@plt+0xfb40>  // b.none
  412638:	ldr	x0, [sp, #240]
  41263c:	sub	x0, x0, #0x1
  412640:	ldr	x1, [sp, #64]
  412644:	add	x0, x1, x0
  412648:	ldrb	w0, [x0]
  41264c:	cmp	w0, #0x30
  412650:	b.ne	4126a0 <__fxstatat@plt+0xfb40>  // b.any
  412654:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412658:	add	x0, x0, #0x3d0
  41265c:	ldr	q1, [x0]
  412660:	ldr	q0, [sp, #96]
  412664:	bl	41e9cc <_obstack_memory_used@@Base+0x2f7c>
  412668:	ldr	w0, [sp, #196]
  41266c:	bl	4120a8 <__fxstatat@plt+0xf548>
  412670:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412674:	add	x0, x0, #0x3d0
  412678:	ldr	q1, [x0]
  41267c:	bl	41ca2c <_obstack_memory_used@@Base+0xfdc>
  412680:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412684:	add	x1, x0, #0x320
  412688:	ldr	x0, [sp, #64]
  41268c:	bl	4025c0 <sprintf@plt>
  412690:	ldr	x0, [sp, #64]
  412694:	bl	402500 <strlen@plt>
  412698:	str	x0, [sp, #240]
  41269c:	str	xzr, [sp, #232]
  4126a0:	ldr	x0, [sp, #240]
  4126a4:	neg	x0, x0
  4126a8:	ldr	x1, [sp, #288]
  4126ac:	add	x0, x1, x0
  4126b0:	str	x0, [sp, #296]
  4126b4:	ldr	x2, [sp, #240]
  4126b8:	ldr	x1, [sp, #64]
  4126bc:	ldr	x0, [sp, #296]
  4126c0:	bl	4024a0 <memmove@plt>
  4126c4:	ldr	x1, [sp, #240]
  4126c8:	ldr	x0, [sp, #232]
  4126cc:	sub	x0, x1, x0
  4126d0:	ldr	x1, [sp, #296]
  4126d4:	add	x0, x1, x0
  4126d8:	str	x0, [sp, #280]
  4126dc:	b	412abc <__fxstatat@plt+0xff5c>
  4126e0:	ldr	w0, [sp, #60]
  4126e4:	and	w0, w0, #0x10
  4126e8:	cmp	w0, #0x0
  4126ec:	b.eq	41291c <__fxstatat@plt+0xfdbc>  // b.none
  4126f0:	str	wzr, [sp, #304]
  4126f4:	ldr	w0, [sp, #192]
  4126f8:	ldr	x1, [sp, #312]
  4126fc:	cmp	x1, x0
  412700:	b.cc	41291c <__fxstatat@plt+0xfdbc>  // b.lo, b.ul, b.last
  412704:	ldr	w1, [sp, #192]
  412708:	ldr	x0, [sp, #312]
  41270c:	udiv	x2, x0, x1
  412710:	mul	x1, x2, x1
  412714:	sub	x0, x0, x1
  412718:	mov	w1, w0
  41271c:	mov	w0, w1
  412720:	lsl	w0, w0, #2
  412724:	add	w0, w0, w1
  412728:	lsl	w0, w0, #1
  41272c:	mov	w1, w0
  412730:	ldr	w0, [sp, #308]
  412734:	add	w0, w1, w0
  412738:	str	w0, [sp, #92]
  41273c:	ldr	w0, [sp, #92]
  412740:	ldr	w1, [sp, #192]
  412744:	udiv	w2, w0, w1
  412748:	ldr	w1, [sp, #192]
  41274c:	mul	w1, w2, w1
  412750:	sub	w0, w0, w1
  412754:	lsl	w0, w0, #1
  412758:	ldr	w1, [sp, #276]
  41275c:	asr	w1, w1, #1
  412760:	add	w0, w0, w1
  412764:	str	w0, [sp, #88]
  412768:	ldr	w0, [sp, #192]
  41276c:	ldr	x1, [sp, #312]
  412770:	udiv	x0, x1, x0
  412774:	str	x0, [sp, #312]
  412778:	ldr	w1, [sp, #92]
  41277c:	ldr	w0, [sp, #192]
  412780:	udiv	w0, w1, w0
  412784:	str	w0, [sp, #308]
  412788:	ldr	w1, [sp, #88]
  41278c:	ldr	w0, [sp, #192]
  412790:	cmp	w1, w0
  412794:	b.cs	4127b4 <__fxstatat@plt+0xfc54>  // b.hs, b.nlast
  412798:	ldr	w1, [sp, #276]
  41279c:	ldr	w0, [sp, #88]
  4127a0:	add	w0, w1, w0
  4127a4:	cmp	w0, #0x0
  4127a8:	cset	w0, ne  // ne = any
  4127ac:	and	w0, w0, #0xff
  4127b0:	b	4127d8 <__fxstatat@plt+0xfc78>
  4127b4:	ldr	w1, [sp, #276]
  4127b8:	ldr	w0, [sp, #88]
  4127bc:	add	w0, w1, w0
  4127c0:	ldr	w1, [sp, #192]
  4127c4:	cmp	w1, w0
  4127c8:	b.cs	4127d4 <__fxstatat@plt+0xfc74>  // b.hs, b.nlast
  4127cc:	mov	w0, #0x3                   	// #3
  4127d0:	b	4127d8 <__fxstatat@plt+0xfc78>
  4127d4:	mov	w0, #0x2                   	// #2
  4127d8:	str	w0, [sp, #276]
  4127dc:	ldr	w0, [sp, #304]
  4127e0:	add	w0, w0, #0x1
  4127e4:	str	w0, [sp, #304]
  4127e8:	ldr	w0, [sp, #192]
  4127ec:	ldr	x1, [sp, #312]
  4127f0:	cmp	x1, x0
  4127f4:	b.cc	412808 <__fxstatat@plt+0xfca8>  // b.lo, b.ul, b.last
  4127f8:	ldr	w1, [sp, #304]
  4127fc:	ldr	w0, [sp, #188]
  412800:	cmp	w1, w0
  412804:	b.lt	412704 <__fxstatat@plt+0xfba4>  // b.tstop
  412808:	ldr	x0, [sp, #312]
  41280c:	cmp	x0, #0x9
  412810:	b.hi	41291c <__fxstatat@plt+0xfdbc>  // b.pmore
  412814:	ldr	w0, [sp, #196]
  412818:	cmp	w0, #0x1
  41281c:	b.ne	412840 <__fxstatat@plt+0xfce0>  // b.any
  412820:	ldr	w0, [sp, #308]
  412824:	and	w1, w0, #0x1
  412828:	ldr	w0, [sp, #276]
  41282c:	add	w0, w1, w0
  412830:	cmp	w0, #0x2
  412834:	cset	w0, gt
  412838:	and	w0, w0, #0xff
  41283c:	b	41286c <__fxstatat@plt+0xfd0c>
  412840:	ldr	w0, [sp, #196]
  412844:	cmp	w0, #0x0
  412848:	b.ne	412860 <__fxstatat@plt+0xfd00>  // b.any
  41284c:	ldr	w0, [sp, #276]
  412850:	cmp	w0, #0x0
  412854:	b.le	412860 <__fxstatat@plt+0xfd00>
  412858:	mov	w0, #0x1                   	// #1
  41285c:	b	412864 <__fxstatat@plt+0xfd04>
  412860:	mov	w0, #0x0                   	// #0
  412864:	and	w0, w0, #0x1
  412868:	and	w0, w0, #0xff
  41286c:	cmp	w0, #0x0
  412870:	b.eq	4128a0 <__fxstatat@plt+0xfd40>  // b.none
  412874:	ldr	w0, [sp, #308]
  412878:	add	w0, w0, #0x1
  41287c:	str	w0, [sp, #308]
  412880:	str	wzr, [sp, #276]
  412884:	ldr	w0, [sp, #308]
  412888:	cmp	w0, #0xa
  41288c:	b.ne	4128a0 <__fxstatat@plt+0xfd40>  // b.any
  412890:	ldr	x0, [sp, #312]
  412894:	add	x0, x0, #0x1
  412898:	str	x0, [sp, #312]
  41289c:	str	wzr, [sp, #308]
  4128a0:	ldr	x0, [sp, #312]
  4128a4:	cmp	x0, #0x9
  4128a8:	b.hi	41291c <__fxstatat@plt+0xfdbc>  // b.pmore
  4128ac:	ldr	w0, [sp, #308]
  4128b0:	cmp	w0, #0x0
  4128b4:	b.ne	4128c8 <__fxstatat@plt+0xfd68>  // b.any
  4128b8:	ldr	w0, [sp, #60]
  4128bc:	and	w0, w0, #0x8
  4128c0:	cmp	w0, #0x0
  4128c4:	b.ne	41291c <__fxstatat@plt+0xfdbc>  // b.any
  4128c8:	ldr	w0, [sp, #308]
  4128cc:	and	w0, w0, #0xff
  4128d0:	ldr	x1, [sp, #296]
  4128d4:	sub	x1, x1, #0x1
  4128d8:	str	x1, [sp, #296]
  4128dc:	add	w0, w0, #0x30
  4128e0:	and	w1, w0, #0xff
  4128e4:	ldr	x0, [sp, #296]
  4128e8:	strb	w1, [x0]
  4128ec:	ldr	x0, [sp, #256]
  4128f0:	neg	x0, x0
  4128f4:	ldr	x1, [sp, #296]
  4128f8:	add	x0, x1, x0
  4128fc:	str	x0, [sp, #296]
  412900:	ldr	x2, [sp, #256]
  412904:	ldr	x1, [sp, #264]
  412908:	ldr	x0, [sp, #296]
  41290c:	bl	402490 <memcpy@plt>
  412910:	str	wzr, [sp, #276]
  412914:	ldr	w0, [sp, #276]
  412918:	str	w0, [sp, #308]
  41291c:	ldr	w0, [sp, #196]
  412920:	cmp	w0, #0x1
  412924:	b.ne	412960 <__fxstatat@plt+0xfe00>  // b.any
  412928:	ldrsw	x1, [sp, #276]
  41292c:	ldr	x0, [sp, #312]
  412930:	and	x0, x0, #0x1
  412934:	add	x0, x1, x0
  412938:	cmp	x0, #0x0
  41293c:	cset	w0, ne  // ne = any
  412940:	and	w0, w0, #0xff
  412944:	mov	w1, w0
  412948:	ldr	w0, [sp, #308]
  41294c:	add	w0, w1, w0
  412950:	cmp	w0, #0x5
  412954:	cset	w0, gt
  412958:	and	w0, w0, #0xff
  41295c:	b	412994 <__fxstatat@plt+0xfe34>
  412960:	ldr	w0, [sp, #196]
  412964:	cmp	w0, #0x0
  412968:	b.ne	412988 <__fxstatat@plt+0xfe28>  // b.any
  41296c:	ldr	w1, [sp, #308]
  412970:	ldr	w0, [sp, #276]
  412974:	add	w0, w1, w0
  412978:	cmp	w0, #0x0
  41297c:	b.le	412988 <__fxstatat@plt+0xfe28>
  412980:	mov	w0, #0x1                   	// #1
  412984:	b	41298c <__fxstatat@plt+0xfe2c>
  412988:	mov	w0, #0x0                   	// #0
  41298c:	and	w0, w0, #0x1
  412990:	and	w0, w0, #0xff
  412994:	cmp	w0, #0x0
  412998:	b.eq	412a38 <__fxstatat@plt+0xfed8>  // b.none
  41299c:	ldr	x0, [sp, #312]
  4129a0:	add	x0, x0, #0x1
  4129a4:	str	x0, [sp, #312]
  4129a8:	ldr	w0, [sp, #60]
  4129ac:	and	w0, w0, #0x10
  4129b0:	cmp	w0, #0x0
  4129b4:	b.eq	412a38 <__fxstatat@plt+0xfed8>  // b.none
  4129b8:	ldr	w0, [sp, #192]
  4129bc:	ldr	x1, [sp, #312]
  4129c0:	cmp	x1, x0
  4129c4:	b.ne	412a38 <__fxstatat@plt+0xfed8>  // b.any
  4129c8:	ldr	w1, [sp, #304]
  4129cc:	ldr	w0, [sp, #188]
  4129d0:	cmp	w1, w0
  4129d4:	b.ge	412a38 <__fxstatat@plt+0xfed8>  // b.tcont
  4129d8:	ldr	w0, [sp, #304]
  4129dc:	add	w0, w0, #0x1
  4129e0:	str	w0, [sp, #304]
  4129e4:	ldr	w0, [sp, #60]
  4129e8:	and	w0, w0, #0x8
  4129ec:	cmp	w0, #0x0
  4129f0:	b.ne	412a30 <__fxstatat@plt+0xfed0>  // b.any
  4129f4:	ldr	x0, [sp, #296]
  4129f8:	sub	x0, x0, #0x1
  4129fc:	str	x0, [sp, #296]
  412a00:	ldr	x0, [sp, #296]
  412a04:	mov	w1, #0x30                  	// #48
  412a08:	strb	w1, [x0]
  412a0c:	ldr	x0, [sp, #256]
  412a10:	neg	x0, x0
  412a14:	ldr	x1, [sp, #296]
  412a18:	add	x0, x1, x0
  412a1c:	str	x0, [sp, #296]
  412a20:	ldr	x2, [sp, #256]
  412a24:	ldr	x1, [sp, #264]
  412a28:	ldr	x0, [sp, #296]
  412a2c:	bl	402490 <memcpy@plt>
  412a30:	mov	x0, #0x1                   	// #1
  412a34:	str	x0, [sp, #312]
  412a38:	ldr	x0, [sp, #296]
  412a3c:	str	x0, [sp, #280]
  412a40:	ldr	x2, [sp, #312]
  412a44:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  412a48:	movk	x0, #0xcccd
  412a4c:	umulh	x0, x2, x0
  412a50:	lsr	x1, x0, #3
  412a54:	mov	x0, x1
  412a58:	lsl	x0, x0, #2
  412a5c:	add	x0, x0, x1
  412a60:	lsl	x0, x0, #1
  412a64:	sub	x1, x2, x0
  412a68:	mov	w0, w1
  412a6c:	str	w0, [sp, #84]
  412a70:	ldr	w0, [sp, #84]
  412a74:	and	w0, w0, #0xff
  412a78:	ldr	x1, [sp, #296]
  412a7c:	sub	x1, x1, #0x1
  412a80:	str	x1, [sp, #296]
  412a84:	add	w0, w0, #0x30
  412a88:	and	w1, w0, #0xff
  412a8c:	ldr	x0, [sp, #296]
  412a90:	strb	w1, [x0]
  412a94:	ldr	x1, [sp, #312]
  412a98:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  412a9c:	movk	x0, #0xcccd
  412aa0:	umulh	x0, x1, x0
  412aa4:	lsr	x0, x0, #3
  412aa8:	str	x0, [sp, #312]
  412aac:	ldr	x0, [sp, #312]
  412ab0:	cmp	x0, #0x0
  412ab4:	b.ne	412a40 <__fxstatat@plt+0xfee0>  // b.any
  412ab8:	nop
  412abc:	ldr	w0, [sp, #60]
  412ac0:	and	w0, w0, #0x4
  412ac4:	cmp	w0, #0x0
  412ac8:	b.eq	412af0 <__fxstatat@plt+0xff90>  // b.none
  412acc:	ldr	x1, [sp, #280]
  412ad0:	ldr	x0, [sp, #296]
  412ad4:	sub	x0, x1, x0
  412ad8:	ldr	x3, [sp, #248]
  412adc:	ldr	x2, [sp, #176]
  412ae0:	mov	x1, x0
  412ae4:	ldr	x0, [sp, #296]
  412ae8:	bl	412140 <__fxstatat@plt+0xf5e0>
  412aec:	str	x0, [sp, #296]
  412af0:	ldr	w0, [sp, #60]
  412af4:	and	w0, w0, #0x80
  412af8:	cmp	w0, #0x0
  412afc:	b.eq	412c40 <__fxstatat@plt+0x100e0>  // b.none
  412b00:	ldr	w0, [sp, #304]
  412b04:	cmp	w0, #0x0
  412b08:	b.ge	412b60 <__fxstatat@plt+0x10000>  // b.tcont
  412b0c:	str	wzr, [sp, #304]
  412b10:	mov	x0, #0x1                   	// #1
  412b14:	str	x0, [sp, #200]
  412b18:	b	412b48 <__fxstatat@plt+0xffe8>
  412b1c:	ldr	w0, [sp, #304]
  412b20:	add	w0, w0, #0x1
  412b24:	str	w0, [sp, #304]
  412b28:	ldr	w1, [sp, #304]
  412b2c:	ldr	w0, [sp, #188]
  412b30:	cmp	w1, w0
  412b34:	b.eq	412b5c <__fxstatat@plt+0xfffc>  // b.none
  412b38:	ldr	w0, [sp, #192]
  412b3c:	ldr	x1, [sp, #200]
  412b40:	mul	x0, x1, x0
  412b44:	str	x0, [sp, #200]
  412b48:	ldr	x1, [sp, #200]
  412b4c:	ldr	x0, [sp, #40]
  412b50:	cmp	x1, x0
  412b54:	b.cc	412b1c <__fxstatat@plt+0xffbc>  // b.lo, b.ul, b.last
  412b58:	b	412b60 <__fxstatat@plt+0x10000>
  412b5c:	nop
  412b60:	ldr	w0, [sp, #60]
  412b64:	and	w1, w0, #0x100
  412b68:	ldr	w0, [sp, #304]
  412b6c:	orr	w0, w1, w0
  412b70:	cmp	w0, #0x0
  412b74:	b.eq	412b9c <__fxstatat@plt+0x1003c>  // b.none
  412b78:	ldr	w0, [sp, #60]
  412b7c:	and	w0, w0, #0x40
  412b80:	cmp	w0, #0x0
  412b84:	b.eq	412b9c <__fxstatat@plt+0x1003c>  // b.none
  412b88:	ldr	x0, [sp, #288]
  412b8c:	add	x1, x0, #0x1
  412b90:	str	x1, [sp, #288]
  412b94:	mov	w1, #0x20                  	// #32
  412b98:	strb	w1, [x0]
  412b9c:	ldr	w0, [sp, #304]
  412ba0:	cmp	w0, #0x0
  412ba4:	b.eq	412bec <__fxstatat@plt+0x1008c>  // b.none
  412ba8:	ldr	w0, [sp, #60]
  412bac:	and	w0, w0, #0x20
  412bb0:	cmp	w0, #0x0
  412bb4:	b.ne	412bc4 <__fxstatat@plt+0x10064>  // b.any
  412bb8:	ldr	w0, [sp, #304]
  412bbc:	cmp	w0, #0x1
  412bc0:	b.eq	412bd8 <__fxstatat@plt+0x10078>  // b.none
  412bc4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412bc8:	add	x1, x0, #0x300
  412bcc:	ldrsw	x0, [sp, #304]
  412bd0:	ldrb	w1, [x1, x0]
  412bd4:	b	412bdc <__fxstatat@plt+0x1007c>
  412bd8:	mov	w1, #0x6b                  	// #107
  412bdc:	ldr	x0, [sp, #288]
  412be0:	add	x2, x0, #0x1
  412be4:	str	x2, [sp, #288]
  412be8:	strb	w1, [x0]
  412bec:	ldr	w0, [sp, #60]
  412bf0:	and	w0, w0, #0x100
  412bf4:	cmp	w0, #0x0
  412bf8:	b.eq	412c40 <__fxstatat@plt+0x100e0>  // b.none
  412bfc:	ldr	w0, [sp, #60]
  412c00:	and	w0, w0, #0x20
  412c04:	cmp	w0, #0x0
  412c08:	b.eq	412c2c <__fxstatat@plt+0x100cc>  // b.none
  412c0c:	ldr	w0, [sp, #304]
  412c10:	cmp	w0, #0x0
  412c14:	b.eq	412c2c <__fxstatat@plt+0x100cc>  // b.none
  412c18:	ldr	x0, [sp, #288]
  412c1c:	add	x1, x0, #0x1
  412c20:	str	x1, [sp, #288]
  412c24:	mov	w1, #0x69                  	// #105
  412c28:	strb	w1, [x0]
  412c2c:	ldr	x0, [sp, #288]
  412c30:	add	x1, x0, #0x1
  412c34:	str	x1, [sp, #288]
  412c38:	mov	w1, #0x42                  	// #66
  412c3c:	strb	w1, [x0]
  412c40:	ldr	x0, [sp, #288]
  412c44:	strb	wzr, [x0]
  412c48:	ldr	x0, [sp, #296]
  412c4c:	ldp	x29, x30, [sp], #320
  412c50:	ret
  412c54:	stp	x29, x30, [sp, #-16]!
  412c58:	mov	x29, sp
  412c5c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412c60:	add	x0, x0, #0x368
  412c64:	bl	402ae0 <getenv@plt>
  412c68:	cmp	x0, #0x0
  412c6c:	b.eq	412c78 <__fxstatat@plt+0x10118>  // b.none
  412c70:	mov	x0, #0x200                 	// #512
  412c74:	b	412c7c <__fxstatat@plt+0x1011c>
  412c78:	mov	x0, #0x400                 	// #1024
  412c7c:	ldp	x29, x30, [sp], #16
  412c80:	ret
  412c84:	stp	x29, x30, [sp, #-80]!
  412c88:	mov	x29, sp
  412c8c:	str	x0, [sp, #40]
  412c90:	str	x1, [sp, #32]
  412c94:	str	x2, [sp, #24]
  412c98:	str	wzr, [sp, #76]
  412c9c:	ldr	x0, [sp, #40]
  412ca0:	cmp	x0, #0x0
  412ca4:	b.ne	412cf4 <__fxstatat@plt+0x10194>  // b.any
  412ca8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412cac:	add	x0, x0, #0x378
  412cb0:	bl	402ae0 <getenv@plt>
  412cb4:	str	x0, [sp, #40]
  412cb8:	ldr	x0, [sp, #40]
  412cbc:	cmp	x0, #0x0
  412cc0:	b.ne	412cf4 <__fxstatat@plt+0x10194>  // b.any
  412cc4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412cc8:	add	x0, x0, #0x388
  412ccc:	bl	402ae0 <getenv@plt>
  412cd0:	str	x0, [sp, #40]
  412cd4:	ldr	x0, [sp, #40]
  412cd8:	cmp	x0, #0x0
  412cdc:	b.ne	412cf4 <__fxstatat@plt+0x10194>  // b.any
  412ce0:	bl	412c54 <__fxstatat@plt+0x100f4>
  412ce4:	mov	x1, x0
  412ce8:	ldr	x0, [sp, #32]
  412cec:	str	x1, [x0]
  412cf0:	b	412e58 <__fxstatat@plt+0x102f8>
  412cf4:	ldr	x0, [sp, #40]
  412cf8:	ldrb	w0, [x0]
  412cfc:	cmp	w0, #0x27
  412d00:	b.ne	412d1c <__fxstatat@plt+0x101bc>  // b.any
  412d04:	ldr	w0, [sp, #76]
  412d08:	orr	w0, w0, #0x4
  412d0c:	str	w0, [sp, #76]
  412d10:	ldr	x0, [sp, #40]
  412d14:	add	x0, x0, #0x1
  412d18:	str	x0, [sp, #40]
  412d1c:	mov	x3, #0x4                   	// #4
  412d20:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412d24:	add	x2, x0, #0x360
  412d28:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412d2c:	add	x1, x0, #0x348
  412d30:	ldr	x0, [sp, #40]
  412d34:	bl	40e1e4 <__fxstatat@plt+0xb684>
  412d38:	str	w0, [sp, #72]
  412d3c:	ldr	w0, [sp, #72]
  412d40:	cmp	w0, #0x0
  412d44:	b.lt	412d74 <__fxstatat@plt+0x10214>  // b.tstop
  412d48:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412d4c:	add	x0, x0, #0x360
  412d50:	ldrsw	x1, [sp, #72]
  412d54:	ldr	w0, [x0, x1, lsl #2]
  412d58:	ldr	w1, [sp, #76]
  412d5c:	orr	w0, w1, w0
  412d60:	str	w0, [sp, #76]
  412d64:	ldr	x0, [sp, #32]
  412d68:	mov	x1, #0x1                   	// #1
  412d6c:	str	x1, [x0]
  412d70:	b	412e58 <__fxstatat@plt+0x102f8>
  412d74:	add	x1, sp, #0x38
  412d78:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412d7c:	add	x4, x0, #0x398
  412d80:	ldr	x3, [sp, #32]
  412d84:	mov	w2, #0x0                   	// #0
  412d88:	ldr	x0, [sp, #40]
  412d8c:	bl	41adec <__fxstatat@plt+0x1828c>
  412d90:	str	w0, [sp, #68]
  412d94:	ldr	w0, [sp, #68]
  412d98:	cmp	w0, #0x0
  412d9c:	b.eq	412e30 <__fxstatat@plt+0x102d0>  // b.none
  412da0:	ldr	x0, [sp, #24]
  412da4:	str	wzr, [x0]
  412da8:	ldr	w0, [sp, #68]
  412dac:	b	412e68 <__fxstatat@plt+0x10308>
  412db0:	ldr	x0, [sp, #56]
  412db4:	ldr	x1, [sp, #40]
  412db8:	cmp	x1, x0
  412dbc:	b.ne	412e24 <__fxstatat@plt+0x102c4>  // b.any
  412dc0:	ldr	w0, [sp, #76]
  412dc4:	orr	w0, w0, #0x80
  412dc8:	str	w0, [sp, #76]
  412dcc:	ldr	x0, [sp, #56]
  412dd0:	sub	x0, x0, #0x1
  412dd4:	ldrb	w0, [x0]
  412dd8:	cmp	w0, #0x42
  412ddc:	b.ne	412dec <__fxstatat@plt+0x1028c>  // b.any
  412de0:	ldr	w0, [sp, #76]
  412de4:	orr	w0, w0, #0x100
  412de8:	str	w0, [sp, #76]
  412dec:	ldr	x0, [sp, #56]
  412df0:	sub	x0, x0, #0x1
  412df4:	ldrb	w0, [x0]
  412df8:	cmp	w0, #0x42
  412dfc:	b.ne	412e14 <__fxstatat@plt+0x102b4>  // b.any
  412e00:	ldr	x0, [sp, #56]
  412e04:	sub	x0, x0, #0x2
  412e08:	ldrb	w0, [x0]
  412e0c:	cmp	w0, #0x69
  412e10:	b.ne	412e54 <__fxstatat@plt+0x102f4>  // b.any
  412e14:	ldr	w0, [sp, #76]
  412e18:	orr	w0, w0, #0x20
  412e1c:	str	w0, [sp, #76]
  412e20:	b	412e54 <__fxstatat@plt+0x102f4>
  412e24:	ldr	x0, [sp, #40]
  412e28:	add	x0, x0, #0x1
  412e2c:	str	x0, [sp, #40]
  412e30:	ldr	x0, [sp, #40]
  412e34:	ldrb	w0, [x0]
  412e38:	cmp	w0, #0x2f
  412e3c:	b.ls	412db0 <__fxstatat@plt+0x10250>  // b.plast
  412e40:	ldr	x0, [sp, #40]
  412e44:	ldrb	w0, [x0]
  412e48:	cmp	w0, #0x39
  412e4c:	b.hi	412db0 <__fxstatat@plt+0x10250>  // b.pmore
  412e50:	b	412e58 <__fxstatat@plt+0x102f8>
  412e54:	nop
  412e58:	ldr	x0, [sp, #24]
  412e5c:	ldr	w1, [sp, #76]
  412e60:	str	w1, [x0]
  412e64:	mov	w0, #0x0                   	// #0
  412e68:	ldp	x29, x30, [sp], #80
  412e6c:	ret
  412e70:	stp	x29, x30, [sp, #-64]!
  412e74:	mov	x29, sp
  412e78:	str	x0, [sp, #40]
  412e7c:	str	x1, [sp, #32]
  412e80:	str	x2, [sp, #24]
  412e84:	ldr	x2, [sp, #32]
  412e88:	ldr	x1, [sp, #24]
  412e8c:	ldr	x0, [sp, #40]
  412e90:	bl	412c84 <__fxstatat@plt+0x10124>
  412e94:	str	w0, [sp, #60]
  412e98:	ldr	x0, [sp, #24]
  412e9c:	ldr	x0, [x0]
  412ea0:	cmp	x0, #0x0
  412ea4:	b.ne	412ec0 <__fxstatat@plt+0x10360>  // b.any
  412ea8:	bl	412c54 <__fxstatat@plt+0x100f4>
  412eac:	mov	x1, x0
  412eb0:	ldr	x0, [sp, #24]
  412eb4:	str	x1, [x0]
  412eb8:	mov	w0, #0x4                   	// #4
  412ebc:	str	w0, [sp, #60]
  412ec0:	ldr	w0, [sp, #60]
  412ec4:	ldp	x29, x30, [sp], #64
  412ec8:	ret
  412ecc:	stp	x29, x30, [sp, #-64]!
  412ed0:	mov	x29, sp
  412ed4:	str	w0, [sp, #28]
  412ed8:	str	xzr, [sp, #48]
  412edc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  412ee0:	add	x0, x0, #0x758
  412ee4:	ldr	x0, [x0]
  412ee8:	str	x0, [sp, #56]
  412eec:	b	412f1c <__fxstatat@plt+0x103bc>
  412ef0:	ldr	x0, [sp, #56]
  412ef4:	ldr	w0, [x0]
  412ef8:	ldr	w1, [sp, #28]
  412efc:	cmp	w1, w0
  412f00:	b.ne	412f10 <__fxstatat@plt+0x103b0>  // b.any
  412f04:	ldr	x0, [sp, #56]
  412f08:	str	x0, [sp, #48]
  412f0c:	b	412f28 <__fxstatat@plt+0x103c8>
  412f10:	ldr	x0, [sp, #56]
  412f14:	ldr	x0, [x0, #8]
  412f18:	str	x0, [sp, #56]
  412f1c:	ldr	x0, [sp, #56]
  412f20:	cmp	x0, #0x0
  412f24:	b.ne	412ef0 <__fxstatat@plt+0x10390>  // b.any
  412f28:	ldr	x0, [sp, #48]
  412f2c:	cmp	x0, #0x0
  412f30:	b.ne	412fbc <__fxstatat@plt+0x1045c>  // b.any
  412f34:	ldr	w0, [sp, #28]
  412f38:	bl	4028c0 <getpwuid@plt>
  412f3c:	str	x0, [sp, #40]
  412f40:	ldr	x0, [sp, #40]
  412f44:	cmp	x0, #0x0
  412f48:	b.eq	412f58 <__fxstatat@plt+0x103f8>  // b.none
  412f4c:	ldr	x0, [sp, #40]
  412f50:	ldr	x0, [x0]
  412f54:	b	412f60 <__fxstatat@plt+0x10400>
  412f58:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  412f5c:	add	x0, x0, #0x3e0
  412f60:	str	x0, [sp, #32]
  412f64:	ldr	x0, [sp, #32]
  412f68:	bl	402500 <strlen@plt>
  412f6c:	add	x0, x0, #0x18
  412f70:	and	x0, x0, #0xfffffffffffffff8
  412f74:	bl	41a080 <__fxstatat@plt+0x17520>
  412f78:	str	x0, [sp, #48]
  412f7c:	ldr	x0, [sp, #48]
  412f80:	ldr	w1, [sp, #28]
  412f84:	str	w1, [x0]
  412f88:	ldr	x0, [sp, #48]
  412f8c:	add	x0, x0, #0x10
  412f90:	ldr	x1, [sp, #32]
  412f94:	bl	402990 <strcpy@plt>
  412f98:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  412f9c:	add	x0, x0, #0x758
  412fa0:	ldr	x1, [x0]
  412fa4:	ldr	x0, [sp, #48]
  412fa8:	str	x1, [x0, #8]
  412fac:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  412fb0:	add	x0, x0, #0x758
  412fb4:	ldr	x1, [sp, #48]
  412fb8:	str	x1, [x0]
  412fbc:	ldr	x0, [sp, #48]
  412fc0:	ldrb	w0, [x0, #16]
  412fc4:	cmp	w0, #0x0
  412fc8:	b.eq	412fd8 <__fxstatat@plt+0x10478>  // b.none
  412fcc:	ldr	x0, [sp, #48]
  412fd0:	add	x0, x0, #0x10
  412fd4:	b	412fdc <__fxstatat@plt+0x1047c>
  412fd8:	mov	x0, #0x0                   	// #0
  412fdc:	ldp	x29, x30, [sp], #64
  412fe0:	ret
  412fe4:	stp	x29, x30, [sp, #-48]!
  412fe8:	mov	x29, sp
  412fec:	str	x0, [sp, #24]
  412ff0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  412ff4:	add	x0, x0, #0x758
  412ff8:	ldr	x0, [x0]
  412ffc:	str	x0, [sp, #40]
  413000:	b	413048 <__fxstatat@plt+0x104e8>
  413004:	ldr	x0, [sp, #40]
  413008:	ldrb	w1, [x0, #16]
  41300c:	ldr	x0, [sp, #24]
  413010:	ldrb	w0, [x0]
  413014:	cmp	w1, w0
  413018:	b.ne	41303c <__fxstatat@plt+0x104dc>  // b.any
  41301c:	ldr	x0, [sp, #40]
  413020:	add	x0, x0, #0x10
  413024:	ldr	x1, [sp, #24]
  413028:	bl	4028b0 <strcmp@plt>
  41302c:	cmp	w0, #0x0
  413030:	b.ne	41303c <__fxstatat@plt+0x104dc>  // b.any
  413034:	ldr	x0, [sp, #40]
  413038:	b	41315c <__fxstatat@plt+0x105fc>
  41303c:	ldr	x0, [sp, #40]
  413040:	ldr	x0, [x0, #8]
  413044:	str	x0, [sp, #40]
  413048:	ldr	x0, [sp, #40]
  41304c:	cmp	x0, #0x0
  413050:	b.ne	413004 <__fxstatat@plt+0x104a4>  // b.any
  413054:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413058:	add	x0, x0, #0x760
  41305c:	ldr	x0, [x0]
  413060:	str	x0, [sp, #40]
  413064:	b	4130ac <__fxstatat@plt+0x1054c>
  413068:	ldr	x0, [sp, #40]
  41306c:	ldrb	w1, [x0, #16]
  413070:	ldr	x0, [sp, #24]
  413074:	ldrb	w0, [x0]
  413078:	cmp	w1, w0
  41307c:	b.ne	4130a0 <__fxstatat@plt+0x10540>  // b.any
  413080:	ldr	x0, [sp, #40]
  413084:	add	x0, x0, #0x10
  413088:	ldr	x1, [sp, #24]
  41308c:	bl	4028b0 <strcmp@plt>
  413090:	cmp	w0, #0x0
  413094:	b.ne	4130a0 <__fxstatat@plt+0x10540>  // b.any
  413098:	mov	x0, #0x0                   	// #0
  41309c:	b	41315c <__fxstatat@plt+0x105fc>
  4130a0:	ldr	x0, [sp, #40]
  4130a4:	ldr	x0, [x0, #8]
  4130a8:	str	x0, [sp, #40]
  4130ac:	ldr	x0, [sp, #40]
  4130b0:	cmp	x0, #0x0
  4130b4:	b.ne	413068 <__fxstatat@plt+0x10508>  // b.any
  4130b8:	ldr	x0, [sp, #24]
  4130bc:	bl	402750 <getpwnam@plt>
  4130c0:	str	x0, [sp, #32]
  4130c4:	ldr	x0, [sp, #24]
  4130c8:	bl	402500 <strlen@plt>
  4130cc:	add	x0, x0, #0x18
  4130d0:	and	x0, x0, #0xfffffffffffffff8
  4130d4:	bl	41a080 <__fxstatat@plt+0x17520>
  4130d8:	str	x0, [sp, #40]
  4130dc:	ldr	x0, [sp, #40]
  4130e0:	add	x0, x0, #0x10
  4130e4:	ldr	x1, [sp, #24]
  4130e8:	bl	402990 <strcpy@plt>
  4130ec:	ldr	x0, [sp, #32]
  4130f0:	cmp	x0, #0x0
  4130f4:	b.eq	413134 <__fxstatat@plt+0x105d4>  // b.none
  4130f8:	ldr	x0, [sp, #32]
  4130fc:	ldr	w1, [x0, #16]
  413100:	ldr	x0, [sp, #40]
  413104:	str	w1, [x0]
  413108:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  41310c:	add	x0, x0, #0x758
  413110:	ldr	x1, [x0]
  413114:	ldr	x0, [sp, #40]
  413118:	str	x1, [x0, #8]
  41311c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413120:	add	x0, x0, #0x758
  413124:	ldr	x1, [sp, #40]
  413128:	str	x1, [x0]
  41312c:	ldr	x0, [sp, #40]
  413130:	b	41315c <__fxstatat@plt+0x105fc>
  413134:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413138:	add	x0, x0, #0x760
  41313c:	ldr	x1, [x0]
  413140:	ldr	x0, [sp, #40]
  413144:	str	x1, [x0, #8]
  413148:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  41314c:	add	x0, x0, #0x760
  413150:	ldr	x1, [sp, #40]
  413154:	str	x1, [x0]
  413158:	mov	x0, #0x0                   	// #0
  41315c:	ldp	x29, x30, [sp], #48
  413160:	ret
  413164:	stp	x29, x30, [sp, #-64]!
  413168:	mov	x29, sp
  41316c:	str	w0, [sp, #28]
  413170:	str	xzr, [sp, #48]
  413174:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413178:	add	x0, x0, #0x768
  41317c:	ldr	x0, [x0]
  413180:	str	x0, [sp, #56]
  413184:	b	4131b4 <__fxstatat@plt+0x10654>
  413188:	ldr	x0, [sp, #56]
  41318c:	ldr	w0, [x0]
  413190:	ldr	w1, [sp, #28]
  413194:	cmp	w1, w0
  413198:	b.ne	4131a8 <__fxstatat@plt+0x10648>  // b.any
  41319c:	ldr	x0, [sp, #56]
  4131a0:	str	x0, [sp, #48]
  4131a4:	b	4131c0 <__fxstatat@plt+0x10660>
  4131a8:	ldr	x0, [sp, #56]
  4131ac:	ldr	x0, [x0, #8]
  4131b0:	str	x0, [sp, #56]
  4131b4:	ldr	x0, [sp, #56]
  4131b8:	cmp	x0, #0x0
  4131bc:	b.ne	413188 <__fxstatat@plt+0x10628>  // b.any
  4131c0:	ldr	x0, [sp, #48]
  4131c4:	cmp	x0, #0x0
  4131c8:	b.ne	413254 <__fxstatat@plt+0x106f4>  // b.any
  4131cc:	ldr	w0, [sp, #28]
  4131d0:	bl	402b00 <getgrgid@plt>
  4131d4:	str	x0, [sp, #40]
  4131d8:	ldr	x0, [sp, #40]
  4131dc:	cmp	x0, #0x0
  4131e0:	b.eq	4131f0 <__fxstatat@plt+0x10690>  // b.none
  4131e4:	ldr	x0, [sp, #40]
  4131e8:	ldr	x0, [x0]
  4131ec:	b	4131f8 <__fxstatat@plt+0x10698>
  4131f0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4131f4:	add	x0, x0, #0x3e0
  4131f8:	str	x0, [sp, #32]
  4131fc:	ldr	x0, [sp, #32]
  413200:	bl	402500 <strlen@plt>
  413204:	add	x0, x0, #0x18
  413208:	and	x0, x0, #0xfffffffffffffff8
  41320c:	bl	41a080 <__fxstatat@plt+0x17520>
  413210:	str	x0, [sp, #48]
  413214:	ldr	x0, [sp, #48]
  413218:	ldr	w1, [sp, #28]
  41321c:	str	w1, [x0]
  413220:	ldr	x0, [sp, #48]
  413224:	add	x0, x0, #0x10
  413228:	ldr	x1, [sp, #32]
  41322c:	bl	402990 <strcpy@plt>
  413230:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413234:	add	x0, x0, #0x768
  413238:	ldr	x1, [x0]
  41323c:	ldr	x0, [sp, #48]
  413240:	str	x1, [x0, #8]
  413244:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  413248:	add	x0, x0, #0x768
  41324c:	ldr	x1, [sp, #48]
  413250:	str	x1, [x0]
  413254:	ldr	x0, [sp, #48]
  413258:	ldrb	w0, [x0, #16]
  41325c:	cmp	w0, #0x0
  413260:	b.eq	413270 <__fxstatat@plt+0x10710>  // b.none
  413264:	ldr	x0, [sp, #48]
  413268:	add	x0, x0, #0x10
  41326c:	b	413274 <__fxstatat@plt+0x10714>
  413270:	mov	x0, #0x0                   	// #0
  413274:	ldp	x29, x30, [sp], #64
  413278:	ret
  41327c:	stp	x29, x30, [sp, #-48]!
  413280:	mov	x29, sp
  413284:	str	x0, [sp, #24]
  413288:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  41328c:	add	x0, x0, #0x768
  413290:	ldr	x0, [x0]
  413294:	str	x0, [sp, #40]
  413298:	b	4132e0 <__fxstatat@plt+0x10780>
  41329c:	ldr	x0, [sp, #40]
  4132a0:	ldrb	w1, [x0, #16]
  4132a4:	ldr	x0, [sp, #24]
  4132a8:	ldrb	w0, [x0]
  4132ac:	cmp	w1, w0
  4132b0:	b.ne	4132d4 <__fxstatat@plt+0x10774>  // b.any
  4132b4:	ldr	x0, [sp, #40]
  4132b8:	add	x0, x0, #0x10
  4132bc:	ldr	x1, [sp, #24]
  4132c0:	bl	4028b0 <strcmp@plt>
  4132c4:	cmp	w0, #0x0
  4132c8:	b.ne	4132d4 <__fxstatat@plt+0x10774>  // b.any
  4132cc:	ldr	x0, [sp, #40]
  4132d0:	b	4133f4 <__fxstatat@plt+0x10894>
  4132d4:	ldr	x0, [sp, #40]
  4132d8:	ldr	x0, [x0, #8]
  4132dc:	str	x0, [sp, #40]
  4132e0:	ldr	x0, [sp, #40]
  4132e4:	cmp	x0, #0x0
  4132e8:	b.ne	41329c <__fxstatat@plt+0x1073c>  // b.any
  4132ec:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4132f0:	add	x0, x0, #0x770
  4132f4:	ldr	x0, [x0]
  4132f8:	str	x0, [sp, #40]
  4132fc:	b	413344 <__fxstatat@plt+0x107e4>
  413300:	ldr	x0, [sp, #40]
  413304:	ldrb	w1, [x0, #16]
  413308:	ldr	x0, [sp, #24]
  41330c:	ldrb	w0, [x0]
  413310:	cmp	w1, w0
  413314:	b.ne	413338 <__fxstatat@plt+0x107d8>  // b.any
  413318:	ldr	x0, [sp, #40]
  41331c:	add	x0, x0, #0x10
  413320:	ldr	x1, [sp, #24]
  413324:	bl	4028b0 <strcmp@plt>
  413328:	cmp	w0, #0x0
  41332c:	b.ne	413338 <__fxstatat@plt+0x107d8>  // b.any
  413330:	mov	x0, #0x0                   	// #0
  413334:	b	4133f4 <__fxstatat@plt+0x10894>
  413338:	ldr	x0, [sp, #40]
  41333c:	ldr	x0, [x0, #8]
  413340:	str	x0, [sp, #40]
  413344:	ldr	x0, [sp, #40]
  413348:	cmp	x0, #0x0
  41334c:	b.ne	413300 <__fxstatat@plt+0x107a0>  // b.any
  413350:	ldr	x0, [sp, #24]
  413354:	bl	4025a0 <getgrnam@plt>
  413358:	str	x0, [sp, #32]
  41335c:	ldr	x0, [sp, #24]
  413360:	bl	402500 <strlen@plt>
  413364:	add	x0, x0, #0x18
  413368:	and	x0, x0, #0xfffffffffffffff8
  41336c:	bl	41a080 <__fxstatat@plt+0x17520>
  413370:	str	x0, [sp, #40]
  413374:	ldr	x0, [sp, #40]
  413378:	add	x0, x0, #0x10
  41337c:	ldr	x1, [sp, #24]
  413380:	bl	402990 <strcpy@plt>
  413384:	ldr	x0, [sp, #32]
  413388:	cmp	x0, #0x0
  41338c:	b.eq	4133cc <__fxstatat@plt+0x1086c>  // b.none
  413390:	ldr	x0, [sp, #32]
  413394:	ldr	w1, [x0, #16]
  413398:	ldr	x0, [sp, #40]
  41339c:	str	w1, [x0]
  4133a0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4133a4:	add	x0, x0, #0x768
  4133a8:	ldr	x1, [x0]
  4133ac:	ldr	x0, [sp, #40]
  4133b0:	str	x1, [x0, #8]
  4133b4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4133b8:	add	x0, x0, #0x768
  4133bc:	ldr	x1, [sp, #40]
  4133c0:	str	x1, [x0]
  4133c4:	ldr	x0, [sp, #40]
  4133c8:	b	4133f4 <__fxstatat@plt+0x10894>
  4133cc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4133d0:	add	x0, x0, #0x770
  4133d4:	ldr	x1, [x0]
  4133d8:	ldr	x0, [sp, #40]
  4133dc:	str	x1, [x0, #8]
  4133e0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4133e4:	add	x0, x0, #0x770
  4133e8:	ldr	x1, [sp, #40]
  4133ec:	str	x1, [x0]
  4133f0:	mov	x0, #0x0                   	// #0
  4133f4:	ldp	x29, x30, [sp], #48
  4133f8:	ret
  4133fc:	sub	sp, sp, #0x20
  413400:	str	x0, [sp, #8]
  413404:	str	x1, [sp]
  413408:	ldr	x0, [sp]
  41340c:	add	x0, x0, #0x14
  413410:	str	x0, [sp, #24]
  413414:	ldr	x0, [sp, #24]
  413418:	strb	wzr, [x0]
  41341c:	ldr	x0, [sp, #8]
  413420:	cmp	x0, #0x0
  413424:	b.ge	4134c4 <__fxstatat@plt+0x10964>  // b.tcont
  413428:	ldr	x1, [sp, #8]
  41342c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  413430:	movk	x0, #0x6667
  413434:	smulh	x0, x1, x0
  413438:	asr	x2, x0, #2
  41343c:	asr	x0, x1, #63
  413440:	sub	x2, x2, x0
  413444:	mov	x0, x2
  413448:	lsl	x0, x0, #2
  41344c:	add	x0, x0, x2
  413450:	lsl	x0, x0, #1
  413454:	sub	x2, x1, x0
  413458:	and	w0, w2, #0xff
  41345c:	ldr	x1, [sp, #24]
  413460:	sub	x1, x1, #0x1
  413464:	str	x1, [sp, #24]
  413468:	mov	w1, #0x30                  	// #48
  41346c:	sub	w0, w1, w0
  413470:	and	w1, w0, #0xff
  413474:	ldr	x0, [sp, #24]
  413478:	strb	w1, [x0]
  41347c:	ldr	x0, [sp, #8]
  413480:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  413484:	movk	x1, #0x6667
  413488:	smulh	x1, x0, x1
  41348c:	asr	x1, x1, #2
  413490:	asr	x0, x0, #63
  413494:	sub	x0, x1, x0
  413498:	str	x0, [sp, #8]
  41349c:	ldr	x0, [sp, #8]
  4134a0:	cmp	x0, #0x0
  4134a4:	b.ne	413428 <__fxstatat@plt+0x108c8>  // b.any
  4134a8:	ldr	x0, [sp, #24]
  4134ac:	sub	x0, x0, #0x1
  4134b0:	str	x0, [sp, #24]
  4134b4:	ldr	x0, [sp, #24]
  4134b8:	mov	w1, #0x2d                  	// #45
  4134bc:	strb	w1, [x0]
  4134c0:	b	413540 <__fxstatat@plt+0x109e0>
  4134c4:	ldr	x1, [sp, #8]
  4134c8:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  4134cc:	movk	x0, #0x6667
  4134d0:	smulh	x0, x1, x0
  4134d4:	asr	x2, x0, #2
  4134d8:	asr	x0, x1, #63
  4134dc:	sub	x2, x2, x0
  4134e0:	mov	x0, x2
  4134e4:	lsl	x0, x0, #2
  4134e8:	add	x0, x0, x2
  4134ec:	lsl	x0, x0, #1
  4134f0:	sub	x2, x1, x0
  4134f4:	and	w0, w2, #0xff
  4134f8:	ldr	x1, [sp, #24]
  4134fc:	sub	x1, x1, #0x1
  413500:	str	x1, [sp, #24]
  413504:	add	w0, w0, #0x30
  413508:	and	w1, w0, #0xff
  41350c:	ldr	x0, [sp, #24]
  413510:	strb	w1, [x0]
  413514:	ldr	x0, [sp, #8]
  413518:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  41351c:	movk	x1, #0x6667
  413520:	smulh	x1, x0, x1
  413524:	asr	x1, x1, #2
  413528:	asr	x0, x0, #63
  41352c:	sub	x0, x1, x0
  413530:	str	x0, [sp, #8]
  413534:	ldr	x0, [sp, #8]
  413538:	cmp	x0, #0x0
  41353c:	b.ne	4134c4 <__fxstatat@plt+0x10964>  // b.any
  413540:	ldr	x0, [sp, #24]
  413544:	add	sp, sp, #0x20
  413548:	ret
  41354c:	sub	sp, sp, #0x20
  413550:	str	x0, [sp, #8]
  413554:	str	x1, [sp]
  413558:	ldr	x0, [sp]
  41355c:	add	x0, x0, #0x14
  413560:	str	x0, [sp, #24]
  413564:	ldr	x0, [sp, #24]
  413568:	strb	wzr, [x0]
  41356c:	ldr	x2, [sp, #8]
  413570:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  413574:	movk	x0, #0xcccd
  413578:	umulh	x0, x2, x0
  41357c:	lsr	x1, x0, #3
  413580:	mov	x0, x1
  413584:	lsl	x0, x0, #2
  413588:	add	x0, x0, x1
  41358c:	lsl	x0, x0, #1
  413590:	sub	x1, x2, x0
  413594:	and	w0, w1, #0xff
  413598:	ldr	x1, [sp, #24]
  41359c:	sub	x1, x1, #0x1
  4135a0:	str	x1, [sp, #24]
  4135a4:	add	w0, w0, #0x30
  4135a8:	and	w1, w0, #0xff
  4135ac:	ldr	x0, [sp, #24]
  4135b0:	strb	w1, [x0]
  4135b4:	ldr	x1, [sp, #8]
  4135b8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4135bc:	movk	x0, #0xcccd
  4135c0:	umulh	x0, x1, x0
  4135c4:	lsr	x0, x0, #3
  4135c8:	str	x0, [sp, #8]
  4135cc:	ldr	x0, [sp, #8]
  4135d0:	cmp	x0, #0x0
  4135d4:	b.ne	41356c <__fxstatat@plt+0x10a0c>  // b.any
  4135d8:	ldr	x0, [sp, #24]
  4135dc:	add	sp, sp, #0x20
  4135e0:	ret
  4135e4:	stp	x29, x30, [sp, #-48]!
  4135e8:	mov	x29, sp
  4135ec:	str	x0, [sp, #24]
  4135f0:	strb	wzr, [sp, #47]
  4135f4:	ldr	x0, [sp, #24]
  4135f8:	str	x0, [sp, #32]
  4135fc:	b	413634 <__fxstatat@plt+0x10ad4>
  413600:	ldr	x0, [sp, #32]
  413604:	ldr	w0, [x0]
  413608:	bl	402a90 <iswprint@plt>
  41360c:	cmp	w0, #0x0
  413610:	b.ne	413628 <__fxstatat@plt+0x10ac8>  // b.any
  413614:	ldr	x0, [sp, #32]
  413618:	mov	w1, #0xfffd                	// #65533
  41361c:	str	w1, [x0]
  413620:	mov	w0, #0x1                   	// #1
  413624:	strb	w0, [sp, #47]
  413628:	ldr	x0, [sp, #32]
  41362c:	add	x0, x0, #0x4
  413630:	str	x0, [sp, #32]
  413634:	ldr	x0, [sp, #32]
  413638:	ldr	w0, [x0]
  41363c:	cmp	w0, #0x0
  413640:	b.ne	413600 <__fxstatat@plt+0x10aa0>  // b.any
  413644:	ldrb	w0, [sp, #47]
  413648:	ldp	x29, x30, [sp], #48
  41364c:	ret
  413650:	stp	x29, x30, [sp, #-48]!
  413654:	mov	x29, sp
  413658:	str	x0, [sp, #24]
  41365c:	str	x1, [sp, #16]
  413660:	str	xzr, [sp, #40]
  413664:	str	wzr, [sp, #36]
  413668:	b	4136d0 <__fxstatat@plt+0x10b70>
  41366c:	ldr	x0, [sp, #24]
  413670:	ldr	w0, [x0]
  413674:	bl	4026d0 <wcwidth@plt>
  413678:	str	w0, [sp, #36]
  41367c:	ldr	w0, [sp, #36]
  413680:	cmn	w0, #0x1
  413684:	b.ne	41369c <__fxstatat@plt+0x10b3c>  // b.any
  413688:	ldr	x0, [sp, #24]
  41368c:	mov	w1, #0xfffd                	// #65533
  413690:	str	w1, [x0]
  413694:	mov	w0, #0x1                   	// #1
  413698:	str	w0, [sp, #36]
  41369c:	ldrsw	x1, [sp, #36]
  4136a0:	ldr	x0, [sp, #40]
  4136a4:	add	x0, x1, x0
  4136a8:	ldr	x1, [sp, #16]
  4136ac:	cmp	x1, x0
  4136b0:	b.cc	4136e4 <__fxstatat@plt+0x10b84>  // b.lo, b.ul, b.last
  4136b4:	ldrsw	x0, [sp, #36]
  4136b8:	ldr	x1, [sp, #40]
  4136bc:	add	x0, x1, x0
  4136c0:	str	x0, [sp, #40]
  4136c4:	ldr	x0, [sp, #24]
  4136c8:	add	x0, x0, #0x4
  4136cc:	str	x0, [sp, #24]
  4136d0:	ldr	x0, [sp, #24]
  4136d4:	ldr	w0, [x0]
  4136d8:	cmp	w0, #0x0
  4136dc:	b.ne	41366c <__fxstatat@plt+0x10b0c>  // b.any
  4136e0:	b	4136e8 <__fxstatat@plt+0x10b88>
  4136e4:	nop
  4136e8:	ldr	x0, [sp, #24]
  4136ec:	str	wzr, [x0]
  4136f0:	ldr	x0, [sp, #40]
  4136f4:	ldp	x29, x30, [sp], #48
  4136f8:	ret
  4136fc:	sub	sp, sp, #0x20
  413700:	str	x0, [sp, #24]
  413704:	str	x1, [sp, #16]
  413708:	str	x2, [sp, #8]
  41370c:	b	413724 <__fxstatat@plt+0x10bc4>
  413710:	ldr	x0, [sp, #24]
  413714:	add	x1, x0, #0x1
  413718:	str	x1, [sp, #24]
  41371c:	mov	w1, #0x20                  	// #32
  413720:	strb	w1, [x0]
  413724:	ldr	x0, [sp, #8]
  413728:	sub	x1, x0, #0x1
  41372c:	str	x1, [sp, #8]
  413730:	cmp	x0, #0x0
  413734:	b.eq	413748 <__fxstatat@plt+0x10be8>  // b.none
  413738:	ldr	x1, [sp, #24]
  41373c:	ldr	x0, [sp, #16]
  413740:	cmp	x1, x0
  413744:	b.cc	413710 <__fxstatat@plt+0x10bb0>  // b.lo, b.ul, b.last
  413748:	ldr	x0, [sp, #24]
  41374c:	strb	wzr, [x0]
  413750:	ldr	x0, [sp, #24]
  413754:	add	sp, sp, #0x20
  413758:	ret
  41375c:	stp	x29, x30, [sp, #-176]!
  413760:	mov	x29, sp
  413764:	str	x0, [sp, #56]
  413768:	str	x1, [sp, #48]
  41376c:	str	x2, [sp, #40]
  413770:	str	x3, [sp, #32]
  413774:	str	w4, [sp, #28]
  413778:	str	w5, [sp, #24]
  41377c:	mov	x0, #0xffffffffffffffff    	// #-1
  413780:	str	x0, [sp, #168]
  413784:	ldr	x0, [sp, #56]
  413788:	bl	402500 <strlen@plt>
  41378c:	add	x0, x0, #0x1
  413790:	str	x0, [sp, #160]
  413794:	str	xzr, [sp, #152]
  413798:	str	xzr, [sp, #144]
  41379c:	ldr	x0, [sp, #56]
  4137a0:	str	x0, [sp, #136]
  4137a4:	ldr	x0, [sp, #160]
  4137a8:	sub	x0, x0, #0x1
  4137ac:	str	x0, [sp, #128]
  4137b0:	ldr	x0, [sp, #128]
  4137b4:	str	x0, [sp, #120]
  4137b8:	str	xzr, [sp, #112]
  4137bc:	strb	wzr, [sp, #111]
  4137c0:	strb	wzr, [sp, #110]
  4137c4:	ldr	w0, [sp, #24]
  4137c8:	and	w0, w0, #0x2
  4137cc:	cmp	w0, #0x0
  4137d0:	b.ne	4138a8 <__fxstatat@plt+0x10d48>  // b.any
  4137d4:	bl	402900 <__ctype_get_mb_cur_max@plt>
  4137d8:	cmp	x0, #0x1
  4137dc:	b.ls	4138a8 <__fxstatat@plt+0x10d48>  // b.plast
  4137e0:	mov	x2, #0x0                   	// #0
  4137e4:	ldr	x1, [sp, #56]
  4137e8:	mov	x0, #0x0                   	// #0
  4137ec:	bl	402510 <mbstowcs@plt>
  4137f0:	str	x0, [sp, #80]
  4137f4:	ldr	x0, [sp, #80]
  4137f8:	cmn	x0, #0x1
  4137fc:	b.ne	413814 <__fxstatat@plt+0x10cb4>  // b.any
  413800:	ldr	w0, [sp, #24]
  413804:	and	w0, w0, #0x1
  413808:	cmp	w0, #0x0
  41380c:	b.eq	413ae0 <__fxstatat@plt+0x10f80>  // b.none
  413810:	b	413960 <__fxstatat@plt+0x10e00>
  413814:	ldr	x0, [sp, #80]
  413818:	add	x0, x0, #0x1
  41381c:	str	x0, [sp, #80]
  413820:	ldr	x0, [sp, #80]
  413824:	lsl	x0, x0, #2
  413828:	bl	4026b0 <malloc@plt>
  41382c:	str	x0, [sp, #144]
  413830:	ldr	x0, [sp, #144]
  413834:	cmp	x0, #0x0
  413838:	b.ne	413850 <__fxstatat@plt+0x10cf0>  // b.any
  41383c:	ldr	w0, [sp, #24]
  413840:	and	w0, w0, #0x1
  413844:	cmp	w0, #0x0
  413848:	b.eq	413ae8 <__fxstatat@plt+0x10f88>  // b.none
  41384c:	b	413960 <__fxstatat@plt+0x10e00>
  413850:	ldr	x2, [sp, #80]
  413854:	ldr	x1, [sp, #56]
  413858:	ldr	x0, [sp, #144]
  41385c:	bl	402510 <mbstowcs@plt>
  413860:	cmp	x0, #0x0
  413864:	b.eq	4138a8 <__fxstatat@plt+0x10d48>  // b.none
  413868:	ldr	x0, [sp, #80]
  41386c:	lsl	x0, x0, #2
  413870:	sub	x0, x0, #0x4
  413874:	ldr	x1, [sp, #144]
  413878:	add	x0, x1, x0
  41387c:	str	wzr, [x0]
  413880:	mov	w0, #0x1                   	// #1
  413884:	strb	w0, [sp, #110]
  413888:	ldr	x0, [sp, #144]
  41388c:	bl	4135e4 <__fxstatat@plt+0x10a84>
  413890:	strb	w0, [sp, #111]
  413894:	ldr	x1, [sp, #80]
  413898:	ldr	x0, [sp, #144]
  41389c:	bl	4026f0 <wcswidth@plt>
  4138a0:	sxtw	x0, w0
  4138a4:	str	x0, [sp, #128]
  4138a8:	ldrb	w0, [sp, #110]
  4138ac:	cmp	w0, #0x0
  4138b0:	b.eq	41395c <__fxstatat@plt+0x10dfc>  // b.none
  4138b4:	ldrb	w0, [sp, #111]
  4138b8:	cmp	w0, #0x0
  4138bc:	b.ne	4138d4 <__fxstatat@plt+0x10d74>  // b.any
  4138c0:	ldr	x0, [sp, #32]
  4138c4:	ldr	x0, [x0]
  4138c8:	ldr	x1, [sp, #128]
  4138cc:	cmp	x1, x0
  4138d0:	b.ls	41395c <__fxstatat@plt+0x10dfc>  // b.plast
  4138d4:	ldrb	w0, [sp, #111]
  4138d8:	cmp	w0, #0x0
  4138dc:	b.eq	4138f8 <__fxstatat@plt+0x10d98>  // b.none
  4138e0:	mov	x2, #0x0                   	// #0
  4138e4:	ldr	x1, [sp, #144]
  4138e8:	mov	x0, #0x0                   	// #0
  4138ec:	bl	4029f0 <wcstombs@plt>
  4138f0:	add	x0, x0, #0x1
  4138f4:	str	x0, [sp, #160]
  4138f8:	ldr	x0, [sp, #160]
  4138fc:	bl	4026b0 <malloc@plt>
  413900:	str	x0, [sp, #152]
  413904:	ldr	x0, [sp, #152]
  413908:	cmp	x0, #0x0
  41390c:	b.ne	413924 <__fxstatat@plt+0x10dc4>  // b.any
  413910:	ldr	w0, [sp, #24]
  413914:	and	w0, w0, #0x1
  413918:	cmp	w0, #0x0
  41391c:	b.eq	413af0 <__fxstatat@plt+0x10f90>  // b.none
  413920:	b	413960 <__fxstatat@plt+0x10e00>
  413924:	ldr	x0, [sp, #152]
  413928:	str	x0, [sp, #136]
  41392c:	ldr	x0, [sp, #32]
  413930:	ldr	x0, [x0]
  413934:	mov	x1, x0
  413938:	ldr	x0, [sp, #144]
  41393c:	bl	413650 <__fxstatat@plt+0x10af0>
  413940:	str	x0, [sp, #128]
  413944:	ldr	x2, [sp, #160]
  413948:	ldr	x1, [sp, #144]
  41394c:	ldr	x0, [sp, #152]
  413950:	bl	4029f0 <wcstombs@plt>
  413954:	str	x0, [sp, #120]
  413958:	b	413960 <__fxstatat@plt+0x10e00>
  41395c:	nop
  413960:	ldr	x0, [sp, #32]
  413964:	ldr	x0, [x0]
  413968:	ldr	x1, [sp, #128]
  41396c:	cmp	x1, x0
  413970:	b.ls	413988 <__fxstatat@plt+0x10e28>  // b.plast
  413974:	ldr	x0, [sp, #32]
  413978:	ldr	x0, [x0]
  41397c:	str	x0, [sp, #128]
  413980:	ldr	x0, [sp, #128]
  413984:	str	x0, [sp, #120]
  413988:	ldr	x0, [sp, #32]
  41398c:	ldr	x0, [x0]
  413990:	ldr	x1, [sp, #128]
  413994:	cmp	x1, x0
  413998:	b.cs	4139b0 <__fxstatat@plt+0x10e50>  // b.hs, b.nlast
  41399c:	ldr	x0, [sp, #32]
  4139a0:	ldr	x1, [x0]
  4139a4:	ldr	x0, [sp, #128]
  4139a8:	sub	x0, x1, x0
  4139ac:	str	x0, [sp, #112]
  4139b0:	ldr	x0, [sp, #32]
  4139b4:	ldr	x1, [sp, #128]
  4139b8:	str	x1, [x0]
  4139bc:	ldr	w0, [sp, #28]
  4139c0:	cmp	w0, #0x0
  4139c4:	b.eq	4139d8 <__fxstatat@plt+0x10e78>  // b.none
  4139c8:	ldr	w0, [sp, #28]
  4139cc:	cmp	w0, #0x1
  4139d0:	b.eq	4139e8 <__fxstatat@plt+0x10e88>  // b.none
  4139d4:	b	4139f8 <__fxstatat@plt+0x10e98>
  4139d8:	str	xzr, [sp, #96]
  4139dc:	ldr	x0, [sp, #112]
  4139e0:	str	x0, [sp, #88]
  4139e4:	b	413a20 <__fxstatat@plt+0x10ec0>
  4139e8:	ldr	x0, [sp, #112]
  4139ec:	str	x0, [sp, #96]
  4139f0:	str	xzr, [sp, #88]
  4139f4:	b	413a20 <__fxstatat@plt+0x10ec0>
  4139f8:	ldr	x0, [sp, #112]
  4139fc:	lsr	x1, x0, #1
  413a00:	ldr	x0, [sp, #112]
  413a04:	and	x0, x0, #0x1
  413a08:	add	x0, x1, x0
  413a0c:	str	x0, [sp, #96]
  413a10:	ldr	x0, [sp, #112]
  413a14:	lsr	x0, x0, #1
  413a18:	str	x0, [sp, #88]
  413a1c:	nop
  413a20:	ldr	w0, [sp, #24]
  413a24:	and	w0, w0, #0x4
  413a28:	cmp	w0, #0x0
  413a2c:	b.eq	413a34 <__fxstatat@plt+0x10ed4>  // b.none
  413a30:	str	xzr, [sp, #96]
  413a34:	ldr	w0, [sp, #24]
  413a38:	and	w0, w0, #0x8
  413a3c:	cmp	w0, #0x0
  413a40:	b.eq	413a48 <__fxstatat@plt+0x10ee8>  // b.none
  413a44:	str	xzr, [sp, #88]
  413a48:	ldr	x0, [sp, #40]
  413a4c:	cmp	x0, #0x0
  413a50:	b.eq	413ac4 <__fxstatat@plt+0x10f64>  // b.none
  413a54:	ldr	x0, [sp, #40]
  413a58:	sub	x0, x0, #0x1
  413a5c:	ldr	x1, [sp, #48]
  413a60:	add	x0, x1, x0
  413a64:	str	x0, [sp, #72]
  413a68:	ldr	x2, [sp, #96]
  413a6c:	ldr	x1, [sp, #72]
  413a70:	ldr	x0, [sp, #48]
  413a74:	bl	4136fc <__fxstatat@plt+0x10b9c>
  413a78:	str	x0, [sp, #48]
  413a7c:	ldr	x1, [sp, #72]
  413a80:	ldr	x0, [sp, #48]
  413a84:	sub	x0, x1, x0
  413a88:	str	x0, [sp, #64]
  413a8c:	ldr	x0, [sp, #120]
  413a90:	ldr	x2, [sp, #64]
  413a94:	ldr	x1, [sp, #64]
  413a98:	cmp	x2, x0
  413a9c:	csel	x0, x1, x0, ls  // ls = plast
  413aa0:	mov	x2, x0
  413aa4:	ldr	x1, [sp, #136]
  413aa8:	ldr	x0, [sp, #48]
  413aac:	bl	402910 <mempcpy@plt>
  413ab0:	str	x0, [sp, #48]
  413ab4:	ldr	x2, [sp, #88]
  413ab8:	ldr	x1, [sp, #72]
  413abc:	ldr	x0, [sp, #48]
  413ac0:	bl	4136fc <__fxstatat@plt+0x10b9c>
  413ac4:	ldr	x1, [sp, #96]
  413ac8:	ldr	x0, [sp, #88]
  413acc:	add	x0, x1, x0
  413ad0:	ldr	x1, [sp, #120]
  413ad4:	add	x0, x1, x0
  413ad8:	str	x0, [sp, #168]
  413adc:	b	413af4 <__fxstatat@plt+0x10f94>
  413ae0:	nop
  413ae4:	b	413af4 <__fxstatat@plt+0x10f94>
  413ae8:	nop
  413aec:	b	413af4 <__fxstatat@plt+0x10f94>
  413af0:	nop
  413af4:	ldr	x0, [sp, #144]
  413af8:	bl	4028f0 <free@plt>
  413afc:	ldr	x0, [sp, #152]
  413b00:	bl	4028f0 <free@plt>
  413b04:	ldr	x0, [sp, #168]
  413b08:	ldp	x29, x30, [sp], #176
  413b0c:	ret
  413b10:	stp	x29, x30, [sp, #-96]!
  413b14:	mov	x29, sp
  413b18:	str	x0, [sp, #40]
  413b1c:	str	x1, [sp, #32]
  413b20:	str	w2, [sp, #28]
  413b24:	str	w3, [sp, #24]
  413b28:	ldr	x0, [sp, #32]
  413b2c:	ldr	x0, [x0]
  413b30:	str	x0, [sp, #64]
  413b34:	ldr	x0, [sp, #32]
  413b38:	ldr	x0, [x0]
  413b3c:	str	x0, [sp, #88]
  413b40:	ldr	x0, [sp, #88]
  413b44:	str	x0, [sp, #80]
  413b48:	str	xzr, [sp, #72]
  413b4c:	b	413bd8 <__fxstatat@plt+0x11078>
  413b50:	ldr	x0, [sp, #80]
  413b54:	add	x0, x0, #0x1
  413b58:	str	x0, [sp, #88]
  413b5c:	ldr	x1, [sp, #88]
  413b60:	ldr	x0, [sp, #72]
  413b64:	bl	4027a0 <realloc@plt>
  413b68:	str	x0, [sp, #56]
  413b6c:	ldr	x0, [sp, #56]
  413b70:	cmp	x0, #0x0
  413b74:	b.ne	413b88 <__fxstatat@plt+0x11028>  // b.any
  413b78:	ldr	x0, [sp, #72]
  413b7c:	bl	4028f0 <free@plt>
  413b80:	str	xzr, [sp, #72]
  413b84:	b	413be8 <__fxstatat@plt+0x11088>
  413b88:	ldr	x0, [sp, #56]
  413b8c:	str	x0, [sp, #72]
  413b90:	ldr	x0, [sp, #32]
  413b94:	ldr	x1, [sp, #64]
  413b98:	str	x1, [x0]
  413b9c:	ldr	w5, [sp, #24]
  413ba0:	ldr	w4, [sp, #28]
  413ba4:	ldr	x3, [sp, #32]
  413ba8:	ldr	x2, [sp, #88]
  413bac:	ldr	x1, [sp, #72]
  413bb0:	ldr	x0, [sp, #40]
  413bb4:	bl	41375c <__fxstatat@plt+0x10bfc>
  413bb8:	str	x0, [sp, #80]
  413bbc:	ldr	x0, [sp, #80]
  413bc0:	cmn	x0, #0x1
  413bc4:	b.ne	413bd8 <__fxstatat@plt+0x11078>  // b.any
  413bc8:	ldr	x0, [sp, #72]
  413bcc:	bl	4028f0 <free@plt>
  413bd0:	str	xzr, [sp, #72]
  413bd4:	b	413be8 <__fxstatat@plt+0x11088>
  413bd8:	ldr	x1, [sp, #80]
  413bdc:	ldr	x0, [sp, #88]
  413be0:	cmp	x1, x0
  413be4:	b.cs	413b50 <__fxstatat@plt+0x10ff0>  // b.hs, b.nlast
  413be8:	ldr	x0, [sp, #72]
  413bec:	ldp	x29, x30, [sp], #96
  413bf0:	ret
  413bf4:	stp	x29, x30, [sp, #-32]!
  413bf8:	mov	x29, sp
  413bfc:	str	x0, [sp, #24]
  413c00:	str	w1, [sp, #20]
  413c04:	ldr	x0, [sp, #24]
  413c08:	bl	402500 <strlen@plt>
  413c0c:	ldr	w2, [sp, #20]
  413c10:	mov	x1, x0
  413c14:	ldr	x0, [sp, #24]
  413c18:	bl	413c24 <__fxstatat@plt+0x110c4>
  413c1c:	ldp	x29, x30, [sp], #32
  413c20:	ret
  413c24:	stp	x29, x30, [sp, #-112]!
  413c28:	mov	x29, sp
  413c2c:	str	x0, [sp, #40]
  413c30:	str	x1, [sp, #32]
  413c34:	str	w2, [sp, #28]
  413c38:	ldr	x0, [sp, #40]
  413c3c:	str	x0, [sp, #104]
  413c40:	ldr	x1, [sp, #104]
  413c44:	ldr	x0, [sp, #32]
  413c48:	add	x0, x1, x0
  413c4c:	str	x0, [sp, #80]
  413c50:	str	wzr, [sp, #100]
  413c54:	bl	402900 <__ctype_get_mb_cur_max@plt>
  413c58:	cmp	x0, #0x1
  413c5c:	b.ls	413f0c <__fxstatat@plt+0x113ac>  // b.plast
  413c60:	b	413e40 <__fxstatat@plt+0x112e0>
  413c64:	ldr	x0, [sp, #104]
  413c68:	ldrb	w0, [x0]
  413c6c:	cmp	w0, #0x7e
  413c70:	b.gt	413cc8 <__fxstatat@plt+0x11168>
  413c74:	cmp	w0, #0x61
  413c78:	b.ge	413cac <__fxstatat@plt+0x1114c>  // b.tcont
  413c7c:	cmp	w0, #0x5f
  413c80:	b.gt	413cc8 <__fxstatat@plt+0x11168>
  413c84:	cmp	w0, #0x41
  413c88:	b.ge	413cac <__fxstatat@plt+0x1114c>  // b.tcont
  413c8c:	cmp	w0, #0x23
  413c90:	b.gt	413ca0 <__fxstatat@plt+0x11140>
  413c94:	cmp	w0, #0x20
  413c98:	b.ge	413cac <__fxstatat@plt+0x1114c>  // b.tcont
  413c9c:	b	413cc8 <__fxstatat@plt+0x11168>
  413ca0:	sub	w0, w0, #0x25
  413ca4:	cmp	w0, #0x1a
  413ca8:	b.hi	413cc8 <__fxstatat@plt+0x11168>  // b.pmore
  413cac:	ldr	x0, [sp, #104]
  413cb0:	add	x0, x0, #0x1
  413cb4:	str	x0, [sp, #104]
  413cb8:	ldr	w0, [sp, #100]
  413cbc:	add	w0, w0, #0x1
  413cc0:	str	w0, [sp, #100]
  413cc4:	b	413e40 <__fxstatat@plt+0x112e0>
  413cc8:	add	x0, sp, #0x40
  413ccc:	mov	x2, #0x8                   	// #8
  413cd0:	mov	w1, #0x0                   	// #0
  413cd4:	bl	402740 <memset@plt>
  413cd8:	ldr	x1, [sp, #80]
  413cdc:	ldr	x0, [sp, #104]
  413ce0:	sub	x0, x1, x0
  413ce4:	mov	x2, x0
  413ce8:	add	x1, sp, #0x40
  413cec:	add	x0, sp, #0x3c
  413cf0:	mov	x3, x1
  413cf4:	ldr	x1, [sp, #104]
  413cf8:	bl	41b358 <__fxstatat@plt+0x187f8>
  413cfc:	str	x0, [sp, #88]
  413d00:	ldr	x0, [sp, #88]
  413d04:	cmn	x0, #0x1
  413d08:	b.ne	413d40 <__fxstatat@plt+0x111e0>  // b.any
  413d0c:	ldr	w0, [sp, #28]
  413d10:	and	w0, w0, #0x1
  413d14:	cmp	w0, #0x0
  413d18:	b.ne	413d38 <__fxstatat@plt+0x111d8>  // b.any
  413d1c:	ldr	x0, [sp, #104]
  413d20:	add	x0, x0, #0x1
  413d24:	str	x0, [sp, #104]
  413d28:	ldr	w0, [sp, #100]
  413d2c:	add	w0, w0, #0x1
  413d30:	str	w0, [sp, #100]
  413d34:	b	413e3c <__fxstatat@plt+0x112dc>
  413d38:	mov	w0, #0xffffffff            	// #-1
  413d3c:	b	413f44 <__fxstatat@plt+0x113e4>
  413d40:	ldr	x0, [sp, #88]
  413d44:	cmn	x0, #0x2
  413d48:	b.ne	413d7c <__fxstatat@plt+0x1121c>  // b.any
  413d4c:	ldr	w0, [sp, #28]
  413d50:	and	w0, w0, #0x1
  413d54:	cmp	w0, #0x0
  413d58:	b.ne	413d74 <__fxstatat@plt+0x11214>  // b.any
  413d5c:	ldr	x0, [sp, #80]
  413d60:	str	x0, [sp, #104]
  413d64:	ldr	w0, [sp, #100]
  413d68:	add	w0, w0, #0x1
  413d6c:	str	w0, [sp, #100]
  413d70:	b	413e3c <__fxstatat@plt+0x112dc>
  413d74:	mov	w0, #0xffffffff            	// #-1
  413d78:	b	413f44 <__fxstatat@plt+0x113e4>
  413d7c:	ldr	x0, [sp, #88]
  413d80:	cmp	x0, #0x0
  413d84:	b.ne	413d90 <__fxstatat@plt+0x11230>  // b.any
  413d88:	mov	x0, #0x1                   	// #1
  413d8c:	str	x0, [sp, #88]
  413d90:	ldr	w0, [sp, #60]
  413d94:	bl	4026d0 <wcwidth@plt>
  413d98:	str	w0, [sp, #72]
  413d9c:	ldr	w0, [sp, #72]
  413da0:	cmp	w0, #0x0
  413da4:	b.lt	413dd4 <__fxstatat@plt+0x11274>  // b.tstop
  413da8:	mov	w1, #0x7fffffff            	// #2147483647
  413dac:	ldr	w0, [sp, #100]
  413db0:	sub	w0, w1, w0
  413db4:	ldr	w1, [sp, #72]
  413db8:	cmp	w1, w0
  413dbc:	b.gt	413f24 <__fxstatat@plt+0x113c4>
  413dc0:	ldr	w1, [sp, #100]
  413dc4:	ldr	w0, [sp, #72]
  413dc8:	add	w0, w1, w0
  413dcc:	str	w0, [sp, #100]
  413dd0:	b	413e1c <__fxstatat@plt+0x112bc>
  413dd4:	ldr	w0, [sp, #28]
  413dd8:	and	w0, w0, #0x2
  413ddc:	cmp	w0, #0x0
  413de0:	b.ne	413e14 <__fxstatat@plt+0x112b4>  // b.any
  413de4:	ldr	w0, [sp, #60]
  413de8:	bl	402600 <iswcntrl@plt>
  413dec:	cmp	w0, #0x0
  413df0:	b.ne	413e1c <__fxstatat@plt+0x112bc>  // b.any
  413df4:	ldr	w1, [sp, #100]
  413df8:	mov	w0, #0x7fffffff            	// #2147483647
  413dfc:	cmp	w1, w0
  413e00:	b.eq	413f2c <__fxstatat@plt+0x113cc>  // b.none
  413e04:	ldr	w0, [sp, #100]
  413e08:	add	w0, w0, #0x1
  413e0c:	str	w0, [sp, #100]
  413e10:	b	413e1c <__fxstatat@plt+0x112bc>
  413e14:	mov	w0, #0xffffffff            	// #-1
  413e18:	b	413f44 <__fxstatat@plt+0x113e4>
  413e1c:	ldr	x1, [sp, #104]
  413e20:	ldr	x0, [sp, #88]
  413e24:	add	x0, x1, x0
  413e28:	str	x0, [sp, #104]
  413e2c:	add	x0, sp, #0x40
  413e30:	bl	402830 <mbsinit@plt>
  413e34:	cmp	w0, #0x0
  413e38:	b.eq	413cd8 <__fxstatat@plt+0x11178>  // b.none
  413e3c:	nop
  413e40:	ldr	x1, [sp, #104]
  413e44:	ldr	x0, [sp, #80]
  413e48:	cmp	x1, x0
  413e4c:	b.cc	413c64 <__fxstatat@plt+0x11104>  // b.lo, b.ul, b.last
  413e50:	ldr	w0, [sp, #100]
  413e54:	b	413f44 <__fxstatat@plt+0x113e4>
  413e58:	ldr	x0, [sp, #104]
  413e5c:	add	x1, x0, #0x1
  413e60:	str	x1, [sp, #104]
  413e64:	ldrb	w0, [x0]
  413e68:	strb	w0, [sp, #79]
  413e6c:	bl	4028d0 <__ctype_b_loc@plt>
  413e70:	ldr	x1, [x0]
  413e74:	ldrb	w0, [sp, #79]
  413e78:	lsl	x0, x0, #1
  413e7c:	add	x0, x1, x0
  413e80:	ldrh	w0, [x0]
  413e84:	and	w0, w0, #0x4000
  413e88:	cmp	w0, #0x0
  413e8c:	b.eq	413eb0 <__fxstatat@plt+0x11350>  // b.none
  413e90:	ldr	w1, [sp, #100]
  413e94:	mov	w0, #0x7fffffff            	// #2147483647
  413e98:	cmp	w1, w0
  413e9c:	b.eq	413f34 <__fxstatat@plt+0x113d4>  // b.none
  413ea0:	ldr	w0, [sp, #100]
  413ea4:	add	w0, w0, #0x1
  413ea8:	str	w0, [sp, #100]
  413eac:	b	413f0c <__fxstatat@plt+0x113ac>
  413eb0:	ldr	w0, [sp, #28]
  413eb4:	and	w0, w0, #0x2
  413eb8:	cmp	w0, #0x0
  413ebc:	b.ne	413f04 <__fxstatat@plt+0x113a4>  // b.any
  413ec0:	bl	4028d0 <__ctype_b_loc@plt>
  413ec4:	ldr	x1, [x0]
  413ec8:	ldrb	w0, [sp, #79]
  413ecc:	lsl	x0, x0, #1
  413ed0:	add	x0, x1, x0
  413ed4:	ldrh	w0, [x0]
  413ed8:	and	w0, w0, #0x2
  413edc:	cmp	w0, #0x0
  413ee0:	b.ne	413f0c <__fxstatat@plt+0x113ac>  // b.any
  413ee4:	ldr	w1, [sp, #100]
  413ee8:	mov	w0, #0x7fffffff            	// #2147483647
  413eec:	cmp	w1, w0
  413ef0:	b.eq	413f3c <__fxstatat@plt+0x113dc>  // b.none
  413ef4:	ldr	w0, [sp, #100]
  413ef8:	add	w0, w0, #0x1
  413efc:	str	w0, [sp, #100]
  413f00:	b	413f0c <__fxstatat@plt+0x113ac>
  413f04:	mov	w0, #0xffffffff            	// #-1
  413f08:	b	413f44 <__fxstatat@plt+0x113e4>
  413f0c:	ldr	x1, [sp, #104]
  413f10:	ldr	x0, [sp, #80]
  413f14:	cmp	x1, x0
  413f18:	b.cc	413e58 <__fxstatat@plt+0x112f8>  // b.lo, b.ul, b.last
  413f1c:	ldr	w0, [sp, #100]
  413f20:	b	413f44 <__fxstatat@plt+0x113e4>
  413f24:	nop
  413f28:	b	413f40 <__fxstatat@plt+0x113e0>
  413f2c:	nop
  413f30:	b	413f40 <__fxstatat@plt+0x113e0>
  413f34:	nop
  413f38:	b	413f40 <__fxstatat@plt+0x113e0>
  413f3c:	nop
  413f40:	mov	w0, #0x7fffffff            	// #2147483647
  413f44:	ldp	x29, x30, [sp], #112
  413f48:	ret
  413f4c:	stp	x29, x30, [sp, #-112]!
  413f50:	mov	x29, sp
  413f54:	str	x0, [sp, #40]
  413f58:	str	x1, [sp, #32]
  413f5c:	str	x2, [sp, #24]
  413f60:	str	x3, [sp, #16]
  413f64:	ldr	x0, [sp, #32]
  413f68:	lsr	x0, x0, #1
  413f6c:	str	x0, [sp, #64]
  413f70:	ldr	x1, [sp, #32]
  413f74:	ldr	x0, [sp, #64]
  413f78:	sub	x0, x1, x0
  413f7c:	str	x0, [sp, #56]
  413f80:	str	xzr, [sp, #104]
  413f84:	ldr	x0, [sp, #64]
  413f88:	str	x0, [sp, #96]
  413f8c:	ldr	x0, [sp, #64]
  413f90:	str	x0, [sp, #88]
  413f94:	ldr	x0, [sp, #32]
  413f98:	str	x0, [sp, #48]
  413f9c:	ldr	x0, [sp, #64]
  413fa0:	lsl	x0, x0, #3
  413fa4:	ldr	x1, [sp, #40]
  413fa8:	add	x0, x1, x0
  413fac:	ldr	x3, [sp, #16]
  413fb0:	ldr	x2, [sp, #24]
  413fb4:	ldr	x1, [sp, #56]
  413fb8:	bl	414104 <__fxstatat@plt+0x115a4>
  413fbc:	ldr	x3, [sp, #16]
  413fc0:	ldr	x2, [sp, #24]
  413fc4:	ldr	x1, [sp, #64]
  413fc8:	ldr	x0, [sp, #40]
  413fcc:	bl	414104 <__fxstatat@plt+0x115a4>
  413fd0:	ldr	x0, [sp, #104]
  413fd4:	lsl	x0, x0, #3
  413fd8:	ldr	x1, [sp, #40]
  413fdc:	add	x0, x1, x0
  413fe0:	ldr	x0, [x0]
  413fe4:	str	x0, [sp, #80]
  413fe8:	ldr	x0, [sp, #88]
  413fec:	lsl	x0, x0, #3
  413ff0:	ldr	x1, [sp, #40]
  413ff4:	add	x0, x1, x0
  413ff8:	ldr	x0, [x0]
  413ffc:	str	x0, [sp, #72]
  414000:	ldr	x2, [sp, #16]
  414004:	ldr	x1, [sp, #72]
  414008:	ldr	x0, [sp, #80]
  41400c:	blr	x2
  414010:	cmp	w0, #0x0
  414014:	b.gt	414078 <__fxstatat@plt+0x11518>
  414018:	ldr	x0, [sp, #24]
  41401c:	add	x1, x0, #0x8
  414020:	str	x1, [sp, #24]
  414024:	ldr	x1, [sp, #80]
  414028:	str	x1, [x0]
  41402c:	ldr	x0, [sp, #104]
  414030:	add	x0, x0, #0x1
  414034:	str	x0, [sp, #104]
  414038:	ldr	x1, [sp, #104]
  41403c:	ldr	x0, [sp, #96]
  414040:	cmp	x1, x0
  414044:	b.ne	41405c <__fxstatat@plt+0x114fc>  // b.any
  414048:	ldr	x0, [sp, #88]
  41404c:	str	x0, [sp, #104]
  414050:	ldr	x0, [sp, #48]
  414054:	str	x0, [sp, #96]
  414058:	b	4140c8 <__fxstatat@plt+0x11568>
  41405c:	ldr	x0, [sp, #104]
  414060:	lsl	x0, x0, #3
  414064:	ldr	x1, [sp, #40]
  414068:	add	x0, x1, x0
  41406c:	ldr	x0, [x0]
  414070:	str	x0, [sp, #80]
  414074:	b	414000 <__fxstatat@plt+0x114a0>
  414078:	ldr	x0, [sp, #24]
  41407c:	add	x1, x0, #0x8
  414080:	str	x1, [sp, #24]
  414084:	ldr	x1, [sp, #72]
  414088:	str	x1, [x0]
  41408c:	ldr	x0, [sp, #88]
  414090:	add	x0, x0, #0x1
  414094:	str	x0, [sp, #88]
  414098:	ldr	x1, [sp, #88]
  41409c:	ldr	x0, [sp, #48]
  4140a0:	cmp	x1, x0
  4140a4:	b.eq	4140c4 <__fxstatat@plt+0x11564>  // b.none
  4140a8:	ldr	x0, [sp, #88]
  4140ac:	lsl	x0, x0, #3
  4140b0:	ldr	x1, [sp, #40]
  4140b4:	add	x0, x1, x0
  4140b8:	ldr	x0, [x0]
  4140bc:	str	x0, [sp, #72]
  4140c0:	b	414000 <__fxstatat@plt+0x114a0>
  4140c4:	nop
  4140c8:	ldr	x0, [sp, #104]
  4140cc:	lsl	x0, x0, #3
  4140d0:	ldr	x1, [sp, #40]
  4140d4:	add	x3, x1, x0
  4140d8:	ldr	x1, [sp, #96]
  4140dc:	ldr	x0, [sp, #104]
  4140e0:	sub	x0, x1, x0
  4140e4:	lsl	x0, x0, #3
  4140e8:	mov	x2, x0
  4140ec:	mov	x1, x3
  4140f0:	ldr	x0, [sp, #24]
  4140f4:	bl	402490 <memcpy@plt>
  4140f8:	nop
  4140fc:	ldp	x29, x30, [sp], #112
  414100:	ret
  414104:	stp	x29, x30, [sp, #-144]!
  414108:	mov	x29, sp
  41410c:	str	x0, [sp, #40]
  414110:	str	x1, [sp, #32]
  414114:	str	x2, [sp, #24]
  414118:	str	x3, [sp, #16]
  41411c:	ldr	x0, [sp, #32]
  414120:	cmp	x0, #0x2
  414124:	b.hi	414184 <__fxstatat@plt+0x11624>  // b.pmore
  414128:	ldr	x0, [sp, #32]
  41412c:	cmp	x0, #0x2
  414130:	b.ne	414354 <__fxstatat@plt+0x117f4>  // b.any
  414134:	ldr	x0, [sp, #40]
  414138:	ldr	x0, [x0]
  41413c:	str	x0, [sp, #64]
  414140:	ldr	x0, [sp, #40]
  414144:	ldr	x0, [x0, #8]
  414148:	str	x0, [sp, #56]
  41414c:	ldr	x2, [sp, #16]
  414150:	ldr	x1, [sp, #56]
  414154:	ldr	x0, [sp, #64]
  414158:	blr	x2
  41415c:	cmp	w0, #0x0
  414160:	b.le	414354 <__fxstatat@plt+0x117f4>
  414164:	ldr	x0, [sp, #40]
  414168:	ldr	x1, [sp, #56]
  41416c:	str	x1, [x0]
  414170:	ldr	x0, [sp, #40]
  414174:	add	x0, x0, #0x8
  414178:	ldr	x1, [sp, #64]
  41417c:	str	x1, [x0]
  414180:	b	414354 <__fxstatat@plt+0x117f4>
  414184:	ldr	x0, [sp, #32]
  414188:	lsr	x0, x0, #1
  41418c:	str	x0, [sp, #96]
  414190:	ldr	x1, [sp, #32]
  414194:	ldr	x0, [sp, #96]
  414198:	sub	x0, x1, x0
  41419c:	str	x0, [sp, #88]
  4141a0:	str	xzr, [sp, #128]
  4141a4:	ldr	x0, [sp, #96]
  4141a8:	str	x0, [sp, #80]
  4141ac:	ldr	x0, [sp, #96]
  4141b0:	str	x0, [sp, #120]
  4141b4:	ldr	x0, [sp, #32]
  4141b8:	str	x0, [sp, #72]
  4141bc:	ldr	x0, [sp, #96]
  4141c0:	lsl	x0, x0, #3
  4141c4:	ldr	x1, [sp, #40]
  4141c8:	add	x0, x1, x0
  4141cc:	ldr	x3, [sp, #16]
  4141d0:	ldr	x2, [sp, #24]
  4141d4:	ldr	x1, [sp, #88]
  4141d8:	bl	414104 <__fxstatat@plt+0x115a4>
  4141dc:	ldr	x0, [sp, #96]
  4141e0:	cmp	x0, #0x1
  4141e4:	b.hi	4141fc <__fxstatat@plt+0x1169c>  // b.pmore
  4141e8:	ldr	x0, [sp, #40]
  4141ec:	ldr	x1, [x0]
  4141f0:	ldr	x0, [sp, #24]
  4141f4:	str	x1, [x0]
  4141f8:	b	414210 <__fxstatat@plt+0x116b0>
  4141fc:	ldr	x3, [sp, #16]
  414200:	ldr	x2, [sp, #24]
  414204:	ldr	x1, [sp, #96]
  414208:	ldr	x0, [sp, #40]
  41420c:	bl	413f4c <__fxstatat@plt+0x113ec>
  414210:	ldr	x0, [sp, #128]
  414214:	lsl	x0, x0, #3
  414218:	ldr	x1, [sp, #24]
  41421c:	add	x0, x1, x0
  414220:	ldr	x0, [x0]
  414224:	str	x0, [sp, #104]
  414228:	ldr	x0, [sp, #120]
  41422c:	lsl	x0, x0, #3
  414230:	ldr	x1, [sp, #40]
  414234:	add	x0, x1, x0
  414238:	ldr	x0, [x0]
  41423c:	str	x0, [sp, #112]
  414240:	str	xzr, [sp, #136]
  414244:	ldr	x2, [sp, #16]
  414248:	ldr	x1, [sp, #112]
  41424c:	ldr	x0, [sp, #104]
  414250:	blr	x2
  414254:	cmp	w0, #0x0
  414258:	b.gt	4142b4 <__fxstatat@plt+0x11754>
  41425c:	ldr	x0, [sp, #136]
  414260:	add	x1, x0, #0x1
  414264:	str	x1, [sp, #136]
  414268:	lsl	x0, x0, #3
  41426c:	ldr	x1, [sp, #40]
  414270:	add	x0, x1, x0
  414274:	ldr	x1, [sp, #104]
  414278:	str	x1, [x0]
  41427c:	ldr	x0, [sp, #128]
  414280:	add	x0, x0, #0x1
  414284:	str	x0, [sp, #128]
  414288:	ldr	x1, [sp, #128]
  41428c:	ldr	x0, [sp, #80]
  414290:	cmp	x1, x0
  414294:	b.eq	414350 <__fxstatat@plt+0x117f0>  // b.none
  414298:	ldr	x0, [sp, #128]
  41429c:	lsl	x0, x0, #3
  4142a0:	ldr	x1, [sp, #24]
  4142a4:	add	x0, x1, x0
  4142a8:	ldr	x0, [x0]
  4142ac:	str	x0, [sp, #104]
  4142b0:	b	414244 <__fxstatat@plt+0x116e4>
  4142b4:	ldr	x0, [sp, #136]
  4142b8:	add	x1, x0, #0x1
  4142bc:	str	x1, [sp, #136]
  4142c0:	lsl	x0, x0, #3
  4142c4:	ldr	x1, [sp, #40]
  4142c8:	add	x0, x1, x0
  4142cc:	ldr	x1, [sp, #112]
  4142d0:	str	x1, [x0]
  4142d4:	ldr	x0, [sp, #120]
  4142d8:	add	x0, x0, #0x1
  4142dc:	str	x0, [sp, #120]
  4142e0:	ldr	x1, [sp, #120]
  4142e4:	ldr	x0, [sp, #72]
  4142e8:	cmp	x1, x0
  4142ec:	b.ne	414334 <__fxstatat@plt+0x117d4>  // b.any
  4142f0:	ldr	x0, [sp, #136]
  4142f4:	lsl	x0, x0, #3
  4142f8:	ldr	x1, [sp, #40]
  4142fc:	add	x3, x1, x0
  414300:	ldr	x0, [sp, #128]
  414304:	lsl	x0, x0, #3
  414308:	ldr	x1, [sp, #24]
  41430c:	add	x4, x1, x0
  414310:	ldr	x1, [sp, #80]
  414314:	ldr	x0, [sp, #128]
  414318:	sub	x0, x1, x0
  41431c:	lsl	x0, x0, #3
  414320:	mov	x2, x0
  414324:	mov	x1, x4
  414328:	mov	x0, x3
  41432c:	bl	402490 <memcpy@plt>
  414330:	b	414354 <__fxstatat@plt+0x117f4>
  414334:	ldr	x0, [sp, #120]
  414338:	lsl	x0, x0, #3
  41433c:	ldr	x1, [sp, #40]
  414340:	add	x0, x1, x0
  414344:	ldr	x0, [x0]
  414348:	str	x0, [sp, #112]
  41434c:	b	414244 <__fxstatat@plt+0x116e4>
  414350:	nop
  414354:	nop
  414358:	ldp	x29, x30, [sp], #144
  41435c:	ret
  414360:	stp	x29, x30, [sp, #-48]!
  414364:	mov	x29, sp
  414368:	str	x0, [sp, #40]
  41436c:	str	x1, [sp, #32]
  414370:	str	x2, [sp, #24]
  414374:	ldr	x0, [sp, #32]
  414378:	lsl	x0, x0, #3
  41437c:	ldr	x1, [sp, #40]
  414380:	add	x0, x1, x0
  414384:	ldr	x3, [sp, #24]
  414388:	mov	x2, x0
  41438c:	ldr	x1, [sp, #32]
  414390:	ldr	x0, [sp, #40]
  414394:	bl	414104 <__fxstatat@plt+0x115a4>
  414398:	nop
  41439c:	ldp	x29, x30, [sp], #48
  4143a0:	ret
  4143a4:	stp	x29, x30, [sp, #-48]!
  4143a8:	mov	x29, sp
  4143ac:	str	x0, [sp, #40]
  4143b0:	str	x1, [sp, #32]
  4143b4:	str	x2, [sp, #24]
  4143b8:	b	4143e8 <__fxstatat@plt+0x11888>
  4143bc:	ldr	x1, [sp, #32]
  4143c0:	ldr	x0, [sp, #24]
  4143c4:	add	x0, x1, x0
  4143c8:	ldrb	w0, [x0]
  4143cc:	bl	402ad0 <tolower@plt>
  4143d0:	mov	w2, w0
  4143d4:	ldr	x1, [sp, #40]
  4143d8:	ldr	x0, [sp, #24]
  4143dc:	add	x0, x1, x0
  4143e0:	and	w1, w2, #0xff
  4143e4:	strb	w1, [x0]
  4143e8:	ldr	x0, [sp, #24]
  4143ec:	sub	x1, x0, #0x1
  4143f0:	str	x1, [sp, #24]
  4143f4:	cmp	x0, #0x0
  4143f8:	b.ne	4143bc <__fxstatat@plt+0x1185c>  // b.any
  4143fc:	ldr	x0, [sp, #40]
  414400:	ldp	x29, x30, [sp], #48
  414404:	ret
  414408:	stp	x29, x30, [sp, #-48]!
  41440c:	mov	x29, sp
  414410:	str	x0, [sp, #40]
  414414:	str	x1, [sp, #32]
  414418:	str	x2, [sp, #24]
  41441c:	b	41444c <__fxstatat@plt+0x118ec>
  414420:	ldr	x1, [sp, #32]
  414424:	ldr	x0, [sp, #24]
  414428:	add	x0, x1, x0
  41442c:	ldrb	w0, [x0]
  414430:	bl	4026c0 <toupper@plt>
  414434:	mov	w2, w0
  414438:	ldr	x1, [sp, #40]
  41443c:	ldr	x0, [sp, #24]
  414440:	add	x0, x1, x0
  414444:	and	w1, w2, #0xff
  414448:	strb	w1, [x0]
  41444c:	ldr	x0, [sp, #24]
  414450:	sub	x1, x0, #0x1
  414454:	str	x1, [sp, #24]
  414458:	cmp	x0, #0x0
  41445c:	b.ne	414420 <__fxstatat@plt+0x118c0>  // b.any
  414460:	ldr	x0, [sp, #40]
  414464:	ldp	x29, x30, [sp], #48
  414468:	ret
  41446c:	sub	sp, sp, #0x20
  414470:	str	w0, [sp, #12]
  414474:	str	w1, [sp, #8]
  414478:	mov	w0, #0x17a                 	// #378
  41447c:	str	w0, [sp, #28]
  414480:	ldr	w1, [sp, #12]
  414484:	ldr	w0, [sp, #8]
  414488:	sub	w0, w1, w0
  41448c:	add	w1, w0, #0x4
  414490:	ldr	w0, [sp, #28]
  414494:	add	w0, w1, w0
  414498:	mov	w1, #0x2493                	// #9363
  41449c:	movk	w1, #0x9249, lsl #16
  4144a0:	smull	x1, w0, w1
  4144a4:	lsr	x1, x1, #32
  4144a8:	add	w1, w0, w1
  4144ac:	asr	w2, w1, #2
  4144b0:	asr	w1, w0, #31
  4144b4:	sub	w2, w2, w1
  4144b8:	mov	w1, w2
  4144bc:	lsl	w1, w1, #3
  4144c0:	sub	w1, w1, w2
  4144c4:	sub	w2, w0, w1
  4144c8:	ldr	w0, [sp, #12]
  4144cc:	sub	w0, w0, w2
  4144d0:	add	w0, w0, #0x3
  4144d4:	add	sp, sp, #0x20
  4144d8:	ret
  4144dc:	sub	sp, sp, #0x60
  4144e0:	stp	x29, x30, [sp, #16]
  4144e4:	add	x29, sp, #0x10
  4144e8:	str	x0, [sp, #72]
  4144ec:	str	x1, [sp, #64]
  4144f0:	str	x2, [sp, #56]
  4144f4:	str	x3, [sp, #48]
  4144f8:	str	x4, [sp, #40]
  4144fc:	str	w5, [sp, #36]
  414500:	strb	wzr, [sp, #95]
  414504:	add	x1, sp, #0x5f
  414508:	ldr	w0, [sp, #36]
  41450c:	str	w0, [sp, #8]
  414510:	ldr	x0, [sp, #40]
  414514:	str	x0, [sp]
  414518:	mov	x7, x1
  41451c:	mov	w6, #0xffffffff            	// #-1
  414520:	mov	w5, #0x0                   	// #0
  414524:	mov	w4, #0x0                   	// #0
  414528:	ldr	x3, [sp, #48]
  41452c:	ldr	x2, [sp, #56]
  414530:	ldr	x1, [sp, #64]
  414534:	ldr	x0, [sp, #72]
  414538:	bl	414548 <__fxstatat@plt+0x119e8>
  41453c:	ldp	x29, x30, [sp, #16]
  414540:	add	sp, sp, #0x60
  414544:	ret
  414548:	sub	sp, sp, #0x710
  41454c:	stp	x29, x30, [sp, #16]
  414550:	add	x29, sp, #0x10
  414554:	str	x0, [sp, #88]
  414558:	str	x1, [sp, #80]
  41455c:	str	x2, [sp, #72]
  414560:	str	x3, [sp, #64]
  414564:	strb	w4, [sp, #63]
  414568:	str	w5, [sp, #56]
  41456c:	str	w6, [sp, #52]
  414570:	str	x7, [sp, #40]
  414574:	ldr	x0, [sp, #64]
  414578:	ldr	w0, [x0, #8]
  41457c:	str	w0, [sp, #1804]
  414580:	str	xzr, [sp, #1784]
  414584:	ldr	x0, [sp, #88]
  414588:	str	x0, [sp, #1776]
  41458c:	str	xzr, [sp, #1792]
  414590:	ldr	x0, [sp, #64]
  414594:	ldr	x0, [x0, #48]
  414598:	str	x0, [sp, #1792]
  41459c:	ldr	x0, [sp, #1792]
  4145a0:	cmp	x0, #0x0
  4145a4:	b.ne	4145b4 <__fxstatat@plt+0x11a54>  // b.any
  4145a8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4145ac:	add	x0, x0, #0x3e8
  4145b0:	str	x0, [sp, #1792]
  4145b4:	ldr	w0, [sp, #1804]
  4145b8:	cmp	w0, #0xc
  4145bc:	b.le	4145d0 <__fxstatat@plt+0x11a70>
  4145c0:	ldr	w0, [sp, #1804]
  4145c4:	sub	w0, w0, #0xc
  4145c8:	str	w0, [sp, #1804]
  4145cc:	b	4145e4 <__fxstatat@plt+0x11a84>
  4145d0:	ldr	w0, [sp, #1804]
  4145d4:	cmp	w0, #0x0
  4145d8:	b.ne	4145e4 <__fxstatat@plt+0x11a84>  // b.any
  4145dc:	mov	w0, #0xc                   	// #12
  4145e0:	str	w0, [sp, #1804]
  4145e4:	ldr	x0, [sp, #72]
  4145e8:	str	x0, [sp, #1768]
  4145ec:	b	416be0 <__fxstatat@plt+0x14080>
  4145f0:	str	wzr, [sp, #1764]
  4145f4:	str	wzr, [sp, #1756]
  4145f8:	strb	wzr, [sp, #1719]
  4145fc:	ldrb	w0, [sp, #63]
  414600:	strb	w0, [sp, #1718]
  414604:	strb	wzr, [sp, #1703]
  414608:	ldr	x0, [sp, #1768]
  41460c:	ldrb	w0, [x0]
  414610:	cmp	w0, #0x25
  414614:	b.eq	41473c <__fxstatat@plt+0x11bdc>  // b.none
  414618:	mov	x0, #0x1                   	// #1
  41461c:	str	x0, [sp, #1184]
  414620:	ldr	w1, [sp, #52]
  414624:	ldr	w0, [sp, #52]
  414628:	mov	w2, #0x0                   	// #0
  41462c:	cmp	w1, #0x0
  414630:	csel	w0, w0, w2, ge  // ge = tcont
  414634:	sxtw	x0, w0
  414638:	str	x0, [sp, #1176]
  41463c:	ldr	x0, [sp, #1176]
  414640:	ldr	x2, [sp, #1184]
  414644:	ldr	x1, [sp, #1184]
  414648:	cmp	x2, x0
  41464c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  414650:	str	x0, [sp, #1168]
  414654:	ldr	x1, [sp, #80]
  414658:	ldr	x0, [sp, #1784]
  41465c:	sub	x0, x1, x0
  414660:	ldr	x1, [sp, #1168]
  414664:	cmp	x1, x0
  414668:	b.cc	414674 <__fxstatat@plt+0x11b14>  // b.lo, b.ul, b.last
  41466c:	mov	x0, #0x0                   	// #0
  414670:	b	416c14 <__fxstatat@plt+0x140b4>
  414674:	ldr	x0, [sp, #1776]
  414678:	cmp	x0, #0x0
  41467c:	b.eq	414728 <__fxstatat@plt+0x11bc8>  // b.none
  414680:	ldr	w0, [sp, #1756]
  414684:	cmp	w0, #0x0
  414688:	b.ne	414708 <__fxstatat@plt+0x11ba8>  // b.any
  41468c:	ldr	x1, [sp, #1184]
  414690:	ldr	x0, [sp, #1176]
  414694:	cmp	x1, x0
  414698:	b.cs	414708 <__fxstatat@plt+0x11ba8>  // b.hs, b.nlast
  41469c:	ldrsw	x1, [sp, #52]
  4146a0:	ldr	x0, [sp, #1184]
  4146a4:	sub	x0, x1, x0
  4146a8:	str	x0, [sp, #1160]
  4146ac:	ldr	w0, [sp, #1764]
  4146b0:	cmp	w0, #0x30
  4146b4:	b.eq	4146c4 <__fxstatat@plt+0x11b64>  // b.none
  4146b8:	ldr	w0, [sp, #1764]
  4146bc:	cmp	w0, #0x2b
  4146c0:	b.ne	4146e8 <__fxstatat@plt+0x11b88>  // b.any
  4146c4:	ldr	x2, [sp, #1160]
  4146c8:	mov	w1, #0x30                  	// #48
  4146cc:	ldr	x0, [sp, #1776]
  4146d0:	bl	402740 <memset@plt>
  4146d4:	ldr	x1, [sp, #1776]
  4146d8:	ldr	x0, [sp, #1160]
  4146dc:	add	x0, x1, x0
  4146e0:	str	x0, [sp, #1776]
  4146e4:	b	414708 <__fxstatat@plt+0x11ba8>
  4146e8:	ldr	x2, [sp, #1160]
  4146ec:	mov	w1, #0x20                  	// #32
  4146f0:	ldr	x0, [sp, #1776]
  4146f4:	bl	402740 <memset@plt>
  4146f8:	ldr	x1, [sp, #1776]
  4146fc:	ldr	x0, [sp, #1160]
  414700:	add	x0, x1, x0
  414704:	str	x0, [sp, #1776]
  414708:	ldr	x0, [sp, #1768]
  41470c:	ldrb	w1, [x0]
  414710:	ldr	x0, [sp, #1776]
  414714:	strb	w1, [x0]
  414718:	ldr	x1, [sp, #1776]
  41471c:	ldr	x0, [sp, #1184]
  414720:	add	x0, x1, x0
  414724:	str	x0, [sp, #1776]
  414728:	ldr	x1, [sp, #1784]
  41472c:	ldr	x0, [sp, #1168]
  414730:	add	x0, x1, x0
  414734:	str	x0, [sp, #1784]
  414738:	b	416bcc <__fxstatat@plt+0x1406c>
  41473c:	ldr	x0, [sp, #1768]
  414740:	add	x0, x0, #0x1
  414744:	str	x0, [sp, #1768]
  414748:	ldr	x0, [sp, #1768]
  41474c:	ldrb	w0, [x0]
  414750:	sub	w0, w0, #0x23
  414754:	cmp	w0, #0x3c
  414758:	cset	w1, hi  // hi = pmore
  41475c:	and	w1, w1, #0xff
  414760:	cmp	w1, #0x0
  414764:	b.ne	4147ec <__fxstatat@plt+0x11c8c>  // b.any
  414768:	mov	x1, #0x1                   	// #1
  41476c:	lsl	x0, x1, x0
  414770:	mov	x1, #0x2500                	// #9472
  414774:	movk	x1, #0x1000, lsl #48
  414778:	and	x1, x0, x1
  41477c:	cmp	x1, #0x0
  414780:	cset	w1, ne  // ne = any
  414784:	and	w1, w1, #0xff
  414788:	cmp	w1, #0x0
  41478c:	b.ne	4147c4 <__fxstatat@plt+0x11c64>  // b.any
  414790:	and	x1, x0, #0x1
  414794:	cmp	x1, #0x0
  414798:	cset	w1, ne  // ne = any
  41479c:	and	w1, w1, #0xff
  4147a0:	cmp	w1, #0x0
  4147a4:	b.ne	4147e0 <__fxstatat@plt+0x11c80>  // b.any
  4147a8:	and	x0, x0, #0x800000000000000
  4147ac:	cmp	x0, #0x0
  4147b0:	cset	w0, ne  // ne = any
  4147b4:	and	w0, w0, #0xff
  4147b8:	cmp	w0, #0x0
  4147bc:	b.ne	4147d4 <__fxstatat@plt+0x11c74>  // b.any
  4147c0:	b	4147ec <__fxstatat@plt+0x11c8c>
  4147c4:	ldr	x0, [sp, #1768]
  4147c8:	ldrb	w0, [x0]
  4147cc:	str	w0, [sp, #1764]
  4147d0:	b	41480c <__fxstatat@plt+0x11cac>
  4147d4:	mov	w0, #0x1                   	// #1
  4147d8:	strb	w0, [sp, #1718]
  4147dc:	b	41480c <__fxstatat@plt+0x11cac>
  4147e0:	mov	w0, #0x1                   	// #1
  4147e4:	strb	w0, [sp, #1703]
  4147e8:	b	41480c <__fxstatat@plt+0x11cac>
  4147ec:	nop
  4147f0:	nop
  4147f4:	ldr	x0, [sp, #1768]
  4147f8:	ldrb	w0, [x0]
  4147fc:	sub	w0, w0, #0x30
  414800:	cmp	w0, #0x9
  414804:	b.hi	4148a8 <__fxstatat@plt+0x11d48>  // b.pmore
  414808:	b	414810 <__fxstatat@plt+0x11cb0>
  41480c:	b	41473c <__fxstatat@plt+0x11bdc>
  414810:	str	wzr, [sp, #52]
  414814:	ldr	w1, [sp, #52]
  414818:	mov	w0, #0xcccc                	// #52428
  41481c:	movk	w0, #0xccc, lsl #16
  414820:	cmp	w1, w0
  414824:	b.gt	41484c <__fxstatat@plt+0x11cec>
  414828:	ldr	w1, [sp, #52]
  41482c:	mov	w0, #0xcccc                	// #52428
  414830:	movk	w0, #0xccc, lsl #16
  414834:	cmp	w1, w0
  414838:	b.ne	414858 <__fxstatat@plt+0x11cf8>  // b.any
  41483c:	ldr	x0, [sp, #1768]
  414840:	ldrb	w0, [x0]
  414844:	cmp	w0, #0x37
  414848:	b.ls	414858 <__fxstatat@plt+0x11cf8>  // b.plast
  41484c:	mov	w0, #0x7fffffff            	// #2147483647
  414850:	str	w0, [sp, #52]
  414854:	b	414888 <__fxstatat@plt+0x11d28>
  414858:	ldr	w1, [sp, #52]
  41485c:	mov	w0, w1
  414860:	lsl	w0, w0, #2
  414864:	add	w0, w0, w1
  414868:	lsl	w0, w0, #1
  41486c:	str	w0, [sp, #52]
  414870:	ldr	x0, [sp, #1768]
  414874:	ldrb	w0, [x0]
  414878:	sub	w0, w0, #0x30
  41487c:	ldr	w1, [sp, #52]
  414880:	add	w0, w1, w0
  414884:	str	w0, [sp, #52]
  414888:	ldr	x0, [sp, #1768]
  41488c:	add	x0, x0, #0x1
  414890:	str	x0, [sp, #1768]
  414894:	ldr	x0, [sp, #1768]
  414898:	ldrb	w0, [x0]
  41489c:	sub	w0, w0, #0x30
  4148a0:	cmp	w0, #0x9
  4148a4:	b.ls	414814 <__fxstatat@plt+0x11cb4>  // b.plast
  4148a8:	ldr	x0, [sp, #1768]
  4148ac:	ldrb	w0, [x0]
  4148b0:	cmp	w0, #0x45
  4148b4:	b.eq	4148c0 <__fxstatat@plt+0x11d60>  // b.none
  4148b8:	cmp	w0, #0x4f
  4148bc:	b.ne	4148d8 <__fxstatat@plt+0x11d78>  // b.any
  4148c0:	ldr	x0, [sp, #1768]
  4148c4:	add	x1, x0, #0x1
  4148c8:	str	x1, [sp, #1768]
  4148cc:	ldrb	w0, [x0]
  4148d0:	str	w0, [sp, #1760]
  4148d4:	b	4148e0 <__fxstatat@plt+0x11d80>
  4148d8:	str	wzr, [sp, #1760]
  4148dc:	nop
  4148e0:	ldr	x0, [sp, #1768]
  4148e4:	ldrb	w0, [x0]
  4148e8:	str	w0, [sp, #1696]
  4148ec:	ldr	w0, [sp, #1696]
  4148f0:	cmp	w0, #0x7a
  4148f4:	b.hi	4169d8 <__fxstatat@plt+0x13e78>  // b.pmore
  4148f8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0x95b0>
  4148fc:	add	x1, x1, #0x424
  414900:	ldr	w0, [x1, w0, uxtw #2]
  414904:	adr	x1, 414910 <__fxstatat@plt+0x11db0>
  414908:	add	x0, x1, w0, sxtw #2
  41490c:	br	x0
  414910:	ldr	w0, [sp, #1760]
  414914:	cmp	w0, #0x0
  414918:	b.ne	41691c <__fxstatat@plt+0x13dbc>  // b.any
  41491c:	mov	x0, #0x1                   	// #1
  414920:	str	x0, [sp, #1248]
  414924:	ldr	w1, [sp, #52]
  414928:	ldr	w0, [sp, #52]
  41492c:	mov	w2, #0x0                   	// #0
  414930:	cmp	w1, #0x0
  414934:	csel	w0, w0, w2, ge  // ge = tcont
  414938:	sxtw	x0, w0
  41493c:	str	x0, [sp, #1240]
  414940:	ldr	x0, [sp, #1240]
  414944:	ldr	x2, [sp, #1248]
  414948:	ldr	x1, [sp, #1248]
  41494c:	cmp	x2, x0
  414950:	csel	x0, x1, x0, cs  // cs = hs, nlast
  414954:	str	x0, [sp, #1232]
  414958:	ldr	x1, [sp, #80]
  41495c:	ldr	x0, [sp, #1784]
  414960:	sub	x0, x1, x0
  414964:	ldr	x1, [sp, #1232]
  414968:	cmp	x1, x0
  41496c:	b.cc	414978 <__fxstatat@plt+0x11e18>  // b.lo, b.ul, b.last
  414970:	mov	x0, #0x0                   	// #0
  414974:	b	416c14 <__fxstatat@plt+0x140b4>
  414978:	ldr	x0, [sp, #1776]
  41497c:	cmp	x0, #0x0
  414980:	b.eq	414a2c <__fxstatat@plt+0x11ecc>  // b.none
  414984:	ldr	w0, [sp, #1756]
  414988:	cmp	w0, #0x0
  41498c:	b.ne	414a0c <__fxstatat@plt+0x11eac>  // b.any
  414990:	ldr	x1, [sp, #1248]
  414994:	ldr	x0, [sp, #1240]
  414998:	cmp	x1, x0
  41499c:	b.cs	414a0c <__fxstatat@plt+0x11eac>  // b.hs, b.nlast
  4149a0:	ldrsw	x1, [sp, #52]
  4149a4:	ldr	x0, [sp, #1248]
  4149a8:	sub	x0, x1, x0
  4149ac:	str	x0, [sp, #1224]
  4149b0:	ldr	w0, [sp, #1764]
  4149b4:	cmp	w0, #0x30
  4149b8:	b.eq	4149c8 <__fxstatat@plt+0x11e68>  // b.none
  4149bc:	ldr	w0, [sp, #1764]
  4149c0:	cmp	w0, #0x2b
  4149c4:	b.ne	4149ec <__fxstatat@plt+0x11e8c>  // b.any
  4149c8:	ldr	x2, [sp, #1224]
  4149cc:	mov	w1, #0x30                  	// #48
  4149d0:	ldr	x0, [sp, #1776]
  4149d4:	bl	402740 <memset@plt>
  4149d8:	ldr	x1, [sp, #1776]
  4149dc:	ldr	x0, [sp, #1224]
  4149e0:	add	x0, x1, x0
  4149e4:	str	x0, [sp, #1776]
  4149e8:	b	414a0c <__fxstatat@plt+0x11eac>
  4149ec:	ldr	x2, [sp, #1224]
  4149f0:	mov	w1, #0x20                  	// #32
  4149f4:	ldr	x0, [sp, #1776]
  4149f8:	bl	402740 <memset@plt>
  4149fc:	ldr	x1, [sp, #1776]
  414a00:	ldr	x0, [sp, #1224]
  414a04:	add	x0, x1, x0
  414a08:	str	x0, [sp, #1776]
  414a0c:	ldr	x0, [sp, #1768]
  414a10:	ldrb	w1, [x0]
  414a14:	ldr	x0, [sp, #1776]
  414a18:	strb	w1, [x0]
  414a1c:	ldr	x1, [sp, #1776]
  414a20:	ldr	x0, [sp, #1248]
  414a24:	add	x0, x1, x0
  414a28:	str	x0, [sp, #1776]
  414a2c:	ldr	x1, [sp, #1784]
  414a30:	ldr	x0, [sp, #1232]
  414a34:	add	x0, x1, x0
  414a38:	str	x0, [sp, #1784]
  414a3c:	b	416bcc <__fxstatat@plt+0x1406c>
  414a40:	ldr	w0, [sp, #1760]
  414a44:	cmp	w0, #0x0
  414a48:	b.ne	416924 <__fxstatat@plt+0x13dc4>  // b.any
  414a4c:	ldrb	w0, [sp, #1703]
  414a50:	cmp	w0, #0x0
  414a54:	b.eq	414c88 <__fxstatat@plt+0x12128>  // b.none
  414a58:	mov	w0, #0x1                   	// #1
  414a5c:	strb	w0, [sp, #1718]
  414a60:	strb	wzr, [sp, #1719]
  414a64:	b	414c88 <__fxstatat@plt+0x12128>
  414a68:	ldr	w0, [sp, #1760]
  414a6c:	cmp	w0, #0x0
  414a70:	b.ne	41692c <__fxstatat@plt+0x13dcc>  // b.any
  414a74:	ldrb	w0, [sp, #1703]
  414a78:	cmp	w0, #0x0
  414a7c:	b.eq	414c90 <__fxstatat@plt+0x12130>  // b.none
  414a80:	mov	w0, #0x1                   	// #1
  414a84:	strb	w0, [sp, #1718]
  414a88:	strb	wzr, [sp, #1719]
  414a8c:	b	414c90 <__fxstatat@plt+0x12130>
  414a90:	ldrb	w0, [sp, #1703]
  414a94:	cmp	w0, #0x0
  414a98:	b.eq	414aa8 <__fxstatat@plt+0x11f48>  // b.none
  414a9c:	mov	w0, #0x1                   	// #1
  414aa0:	strb	w0, [sp, #1718]
  414aa4:	strb	wzr, [sp, #1719]
  414aa8:	ldr	w0, [sp, #1760]
  414aac:	cmp	w0, #0x45
  414ab0:	b.ne	414c98 <__fxstatat@plt+0x12138>  // b.any
  414ab4:	b	4169d8 <__fxstatat@plt+0x13e78>
  414ab8:	ldr	w0, [sp, #1760]
  414abc:	cmp	w0, #0x45
  414ac0:	b.eq	416934 <__fxstatat@plt+0x13dd4>  // b.none
  414ac4:	ldrb	w0, [sp, #1703]
  414ac8:	cmp	w0, #0x0
  414acc:	b.eq	414ca0 <__fxstatat@plt+0x12140>  // b.none
  414ad0:	mov	w0, #0x1                   	// #1
  414ad4:	strb	w0, [sp, #1718]
  414ad8:	strb	wzr, [sp, #1719]
  414adc:	b	414ca0 <__fxstatat@plt+0x12140>
  414ae0:	ldr	w0, [sp, #1760]
  414ae4:	cmp	w0, #0x4f
  414ae8:	b.ne	414ca8 <__fxstatat@plt+0x12148>  // b.any
  414aec:	b	4169d8 <__fxstatat@plt+0x13e78>
  414af0:	mov	w0, #0xffffffff            	// #-1
  414af4:	str	w0, [sp, #1692]
  414af8:	ldr	w0, [sp, #1816]
  414afc:	str	w0, [sp, #8]
  414b00:	ldr	x0, [sp, #1808]
  414b04:	str	x0, [sp]
  414b08:	ldr	x7, [sp, #40]
  414b0c:	ldr	w6, [sp, #1692]
  414b10:	ldr	w5, [sp, #1764]
  414b14:	ldrb	w4, [sp, #1718]
  414b18:	ldr	x3, [sp, #64]
  414b1c:	ldr	x2, [sp, #1728]
  414b20:	mov	x1, #0xffffffffffffffff    	// #-1
  414b24:	mov	x0, #0x0                   	// #0
  414b28:	bl	414548 <__fxstatat@plt+0x119e8>
  414b2c:	str	x0, [sp, #1520]
  414b30:	ldr	x0, [sp, #1520]
  414b34:	str	x0, [sp, #1512]
  414b38:	ldr	w1, [sp, #52]
  414b3c:	ldr	w0, [sp, #52]
  414b40:	mov	w2, #0x0                   	// #0
  414b44:	cmp	w1, #0x0
  414b48:	csel	w0, w0, w2, ge  // ge = tcont
  414b4c:	sxtw	x0, w0
  414b50:	str	x0, [sp, #1504]
  414b54:	ldr	x0, [sp, #1504]
  414b58:	ldr	x2, [sp, #1512]
  414b5c:	ldr	x1, [sp, #1512]
  414b60:	cmp	x2, x0
  414b64:	csel	x0, x1, x0, cs  // cs = hs, nlast
  414b68:	str	x0, [sp, #1496]
  414b6c:	ldr	x1, [sp, #80]
  414b70:	ldr	x0, [sp, #1784]
  414b74:	sub	x0, x1, x0
  414b78:	ldr	x1, [sp, #1496]
  414b7c:	cmp	x1, x0
  414b80:	b.cc	414b8c <__fxstatat@plt+0x1202c>  // b.lo, b.ul, b.last
  414b84:	mov	x0, #0x0                   	// #0
  414b88:	b	416c14 <__fxstatat@plt+0x140b4>
  414b8c:	ldr	x0, [sp, #1776]
  414b90:	cmp	x0, #0x0
  414b94:	b.eq	414c6c <__fxstatat@plt+0x1210c>  // b.none
  414b98:	ldr	w0, [sp, #1756]
  414b9c:	cmp	w0, #0x0
  414ba0:	b.ne	414c20 <__fxstatat@plt+0x120c0>  // b.any
  414ba4:	ldr	x1, [sp, #1512]
  414ba8:	ldr	x0, [sp, #1504]
  414bac:	cmp	x1, x0
  414bb0:	b.cs	414c20 <__fxstatat@plt+0x120c0>  // b.hs, b.nlast
  414bb4:	ldrsw	x1, [sp, #52]
  414bb8:	ldr	x0, [sp, #1512]
  414bbc:	sub	x0, x1, x0
  414bc0:	str	x0, [sp, #1488]
  414bc4:	ldr	w0, [sp, #1764]
  414bc8:	cmp	w0, #0x30
  414bcc:	b.eq	414bdc <__fxstatat@plt+0x1207c>  // b.none
  414bd0:	ldr	w0, [sp, #1764]
  414bd4:	cmp	w0, #0x2b
  414bd8:	b.ne	414c00 <__fxstatat@plt+0x120a0>  // b.any
  414bdc:	ldr	x2, [sp, #1488]
  414be0:	mov	w1, #0x30                  	// #48
  414be4:	ldr	x0, [sp, #1776]
  414be8:	bl	402740 <memset@plt>
  414bec:	ldr	x1, [sp, #1776]
  414bf0:	ldr	x0, [sp, #1488]
  414bf4:	add	x0, x1, x0
  414bf8:	str	x0, [sp, #1776]
  414bfc:	b	414c20 <__fxstatat@plt+0x120c0>
  414c00:	ldr	x2, [sp, #1488]
  414c04:	mov	w1, #0x20                  	// #32
  414c08:	ldr	x0, [sp, #1776]
  414c0c:	bl	402740 <memset@plt>
  414c10:	ldr	x1, [sp, #1776]
  414c14:	ldr	x0, [sp, #1488]
  414c18:	add	x0, x1, x0
  414c1c:	str	x0, [sp, #1776]
  414c20:	ldr	x1, [sp, #80]
  414c24:	ldr	x0, [sp, #1784]
  414c28:	sub	x1, x1, x0
  414c2c:	ldr	w0, [sp, #1816]
  414c30:	str	w0, [sp, #8]
  414c34:	ldr	x0, [sp, #1808]
  414c38:	str	x0, [sp]
  414c3c:	ldr	x7, [sp, #40]
  414c40:	ldr	w6, [sp, #1692]
  414c44:	ldr	w5, [sp, #1764]
  414c48:	ldrb	w4, [sp, #1718]
  414c4c:	ldr	x3, [sp, #64]
  414c50:	ldr	x2, [sp, #1728]
  414c54:	ldr	x0, [sp, #1776]
  414c58:	bl	414548 <__fxstatat@plt+0x119e8>
  414c5c:	ldr	x1, [sp, #1776]
  414c60:	ldr	x0, [sp, #1512]
  414c64:	add	x0, x1, x0
  414c68:	str	x0, [sp, #1776]
  414c6c:	ldr	x1, [sp, #1784]
  414c70:	ldr	x0, [sp, #1496]
  414c74:	add	x0, x1, x0
  414c78:	str	x0, [sp, #1784]
  414c7c:	b	416bcc <__fxstatat@plt+0x1406c>
  414c80:	nop
  414c84:	b	414ce4 <__fxstatat@plt+0x12184>
  414c88:	nop
  414c8c:	b	414ce4 <__fxstatat@plt+0x12184>
  414c90:	nop
  414c94:	b	414ce4 <__fxstatat@plt+0x12184>
  414c98:	nop
  414c9c:	b	414ce4 <__fxstatat@plt+0x12184>
  414ca0:	nop
  414ca4:	b	414ce4 <__fxstatat@plt+0x12184>
  414ca8:	nop
  414cac:	b	414ce4 <__fxstatat@plt+0x12184>
  414cb0:	nop
  414cb4:	b	414ce4 <__fxstatat@plt+0x12184>
  414cb8:	nop
  414cbc:	b	414ce4 <__fxstatat@plt+0x12184>
  414cc0:	nop
  414cc4:	b	414ce4 <__fxstatat@plt+0x12184>
  414cc8:	nop
  414ccc:	b	414ce4 <__fxstatat@plt+0x12184>
  414cd0:	nop
  414cd4:	b	414ce4 <__fxstatat@plt+0x12184>
  414cd8:	nop
  414cdc:	b	414ce4 <__fxstatat@plt+0x12184>
  414ce0:	nop
  414ce4:	add	x0, sp, #0x468
  414ce8:	str	x0, [sp, #1680]
  414cec:	ldr	x0, [sp, #1680]
  414cf0:	add	x1, x0, #0x1
  414cf4:	str	x1, [sp, #1680]
  414cf8:	mov	w1, #0x20                  	// #32
  414cfc:	strb	w1, [x0]
  414d00:	ldr	x0, [sp, #1680]
  414d04:	add	x1, x0, #0x1
  414d08:	str	x1, [sp, #1680]
  414d0c:	mov	w1, #0x25                  	// #37
  414d10:	strb	w1, [x0]
  414d14:	ldr	w0, [sp, #1760]
  414d18:	cmp	w0, #0x0
  414d1c:	b.eq	414d38 <__fxstatat@plt+0x121d8>  // b.none
  414d20:	ldr	x0, [sp, #1680]
  414d24:	add	x1, x0, #0x1
  414d28:	str	x1, [sp, #1680]
  414d2c:	ldr	w1, [sp, #1760]
  414d30:	and	w1, w1, #0xff
  414d34:	strb	w1, [x0]
  414d38:	ldr	x0, [sp, #1680]
  414d3c:	add	x1, x0, #0x1
  414d40:	str	x1, [sp, #1680]
  414d44:	ldr	w1, [sp, #1696]
  414d48:	and	w1, w1, #0xff
  414d4c:	strb	w1, [x0]
  414d50:	ldr	x0, [sp, #1680]
  414d54:	strb	wzr, [x0]
  414d58:	add	x1, sp, #0x468
  414d5c:	add	x0, sp, #0x68
  414d60:	ldr	x3, [sp, #64]
  414d64:	mov	x2, x1
  414d68:	mov	x1, #0x400                 	// #1024
  414d6c:	bl	4025e0 <strftime@plt>
  414d70:	str	x0, [sp, #1288]
  414d74:	ldr	x0, [sp, #1288]
  414d78:	cmp	x0, #0x0
  414d7c:	b.eq	416bc0 <__fxstatat@plt+0x14060>  // b.none
  414d80:	ldr	x0, [sp, #1288]
  414d84:	sub	x0, x0, #0x1
  414d88:	str	x0, [sp, #1280]
  414d8c:	ldr	w1, [sp, #52]
  414d90:	ldr	w0, [sp, #52]
  414d94:	mov	w2, #0x0                   	// #0
  414d98:	cmp	w1, #0x0
  414d9c:	csel	w0, w0, w2, ge  // ge = tcont
  414da0:	sxtw	x0, w0
  414da4:	str	x0, [sp, #1272]
  414da8:	ldr	x0, [sp, #1272]
  414dac:	ldr	x2, [sp, #1280]
  414db0:	ldr	x1, [sp, #1280]
  414db4:	cmp	x2, x0
  414db8:	csel	x0, x1, x0, cs  // cs = hs, nlast
  414dbc:	str	x0, [sp, #1264]
  414dc0:	ldr	x1, [sp, #80]
  414dc4:	ldr	x0, [sp, #1784]
  414dc8:	sub	x0, x1, x0
  414dcc:	ldr	x1, [sp, #1264]
  414dd0:	cmp	x1, x0
  414dd4:	b.cc	414de0 <__fxstatat@plt+0x12280>  // b.lo, b.ul, b.last
  414dd8:	mov	x0, #0x0                   	// #0
  414ddc:	b	416c14 <__fxstatat@plt+0x140b4>
  414de0:	ldr	x0, [sp, #1776]
  414de4:	cmp	x0, #0x0
  414de8:	b.eq	414eec <__fxstatat@plt+0x1238c>  // b.none
  414dec:	ldr	w0, [sp, #1756]
  414df0:	cmp	w0, #0x0
  414df4:	b.ne	414e74 <__fxstatat@plt+0x12314>  // b.any
  414df8:	ldr	x1, [sp, #1280]
  414dfc:	ldr	x0, [sp, #1272]
  414e00:	cmp	x1, x0
  414e04:	b.cs	414e74 <__fxstatat@plt+0x12314>  // b.hs, b.nlast
  414e08:	ldrsw	x1, [sp, #52]
  414e0c:	ldr	x0, [sp, #1280]
  414e10:	sub	x0, x1, x0
  414e14:	str	x0, [sp, #1256]
  414e18:	ldr	w0, [sp, #1764]
  414e1c:	cmp	w0, #0x30
  414e20:	b.eq	414e30 <__fxstatat@plt+0x122d0>  // b.none
  414e24:	ldr	w0, [sp, #1764]
  414e28:	cmp	w0, #0x2b
  414e2c:	b.ne	414e54 <__fxstatat@plt+0x122f4>  // b.any
  414e30:	ldr	x2, [sp, #1256]
  414e34:	mov	w1, #0x30                  	// #48
  414e38:	ldr	x0, [sp, #1776]
  414e3c:	bl	402740 <memset@plt>
  414e40:	ldr	x1, [sp, #1776]
  414e44:	ldr	x0, [sp, #1256]
  414e48:	add	x0, x1, x0
  414e4c:	str	x0, [sp, #1776]
  414e50:	b	414e74 <__fxstatat@plt+0x12314>
  414e54:	ldr	x2, [sp, #1256]
  414e58:	mov	w1, #0x20                  	// #32
  414e5c:	ldr	x0, [sp, #1776]
  414e60:	bl	402740 <memset@plt>
  414e64:	ldr	x1, [sp, #1776]
  414e68:	ldr	x0, [sp, #1256]
  414e6c:	add	x0, x1, x0
  414e70:	str	x0, [sp, #1776]
  414e74:	ldrb	w0, [sp, #1719]
  414e78:	cmp	w0, #0x0
  414e7c:	b.eq	414e9c <__fxstatat@plt+0x1233c>  // b.none
  414e80:	add	x0, sp, #0x68
  414e84:	add	x0, x0, #0x1
  414e88:	ldr	x2, [sp, #1280]
  414e8c:	mov	x1, x0
  414e90:	ldr	x0, [sp, #1776]
  414e94:	bl	4143a4 <__fxstatat@plt+0x11844>
  414e98:	b	414edc <__fxstatat@plt+0x1237c>
  414e9c:	ldrb	w0, [sp, #1718]
  414ea0:	cmp	w0, #0x0
  414ea4:	b.eq	414ec4 <__fxstatat@plt+0x12364>  // b.none
  414ea8:	add	x0, sp, #0x68
  414eac:	add	x0, x0, #0x1
  414eb0:	ldr	x2, [sp, #1280]
  414eb4:	mov	x1, x0
  414eb8:	ldr	x0, [sp, #1776]
  414ebc:	bl	414408 <__fxstatat@plt+0x118a8>
  414ec0:	b	414edc <__fxstatat@plt+0x1237c>
  414ec4:	add	x0, sp, #0x68
  414ec8:	add	x0, x0, #0x1
  414ecc:	ldr	x2, [sp, #1280]
  414ed0:	mov	x1, x0
  414ed4:	ldr	x0, [sp, #1776]
  414ed8:	bl	402490 <memcpy@plt>
  414edc:	ldr	x1, [sp, #1776]
  414ee0:	ldr	x0, [sp, #1280]
  414ee4:	add	x0, x1, x0
  414ee8:	str	x0, [sp, #1776]
  414eec:	ldr	x1, [sp, #1784]
  414ef0:	ldr	x0, [sp, #1264]
  414ef4:	add	x0, x1, x0
  414ef8:	str	x0, [sp, #1784]
  414efc:	b	416bc0 <__fxstatat@plt+0x14060>
  414f00:	ldr	w0, [sp, #1760]
  414f04:	cmp	w0, #0x45
  414f08:	b.eq	414cb0 <__fxstatat@plt+0x12150>  // b.none
  414f0c:	ldr	x0, [sp, #64]
  414f10:	ldr	w0, [x0, #20]
  414f14:	mov	w1, #0x851f                	// #34079
  414f18:	movk	w1, #0x51eb, lsl #16
  414f1c:	smull	x1, w0, w1
  414f20:	lsr	x1, x1, #32
  414f24:	asr	w1, w1, #5
  414f28:	asr	w0, w0, #31
  414f2c:	sub	w0, w1, w0
  414f30:	add	w0, w0, #0x13
  414f34:	str	w0, [sp, #1484]
  414f38:	ldr	x0, [sp, #64]
  414f3c:	ldr	w1, [x0, #20]
  414f40:	mov	w0, #0x851f                	// #34079
  414f44:	movk	w0, #0x51eb, lsl #16
  414f48:	smull	x0, w1, w0
  414f4c:	lsr	x0, x0, #32
  414f50:	asr	w2, w0, #5
  414f54:	asr	w0, w1, #31
  414f58:	sub	w0, w2, w0
  414f5c:	mov	w2, #0x64                  	// #100
  414f60:	mul	w0, w0, w2
  414f64:	sub	w0, w1, w0
  414f68:	cmp	w0, #0x0
  414f6c:	b.ge	414f84 <__fxstatat@plt+0x12424>  // b.tcont
  414f70:	ldr	w0, [sp, #1484]
  414f74:	cmp	w0, #0x0
  414f78:	b.le	414f84 <__fxstatat@plt+0x12424>
  414f7c:	mov	w0, #0x1                   	// #1
  414f80:	b	414f88 <__fxstatat@plt+0x12428>
  414f84:	mov	w0, #0x0                   	// #0
  414f88:	ldr	w1, [sp, #1484]
  414f8c:	sub	w0, w1, w0
  414f90:	str	w0, [sp, #1484]
  414f94:	mov	w0, #0x2                   	// #2
  414f98:	str	w0, [sp, #1756]
  414f9c:	ldr	x0, [sp, #64]
  414fa0:	ldr	w0, [x0, #20]
  414fa4:	cmn	w0, #0x76c
  414fa8:	cset	w0, lt  // lt = tstop
  414fac:	strb	w0, [sp, #1747]
  414fb0:	ldr	w0, [sp, #1484]
  414fb4:	str	w0, [sp, #1748]
  414fb8:	b	41503c <__fxstatat@plt+0x124dc>
  414fbc:	ldr	w0, [sp, #1760]
  414fc0:	cmp	w0, #0x4f
  414fc4:	b.ne	414cb8 <__fxstatat@plt+0x12158>  // b.any
  414fc8:	b	4169d8 <__fxstatat@plt+0x13e78>
  414fcc:	ldr	w0, [sp, #1760]
  414fd0:	cmp	w0, #0x0
  414fd4:	b.ne	41693c <__fxstatat@plt+0x13ddc>  // b.any
  414fd8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  414fdc:	add	x0, x0, #0x3f0
  414fe0:	str	x0, [sp, #1728]
  414fe4:	b	414af0 <__fxstatat@plt+0x11f90>
  414fe8:	ldr	w0, [sp, #1760]
  414fec:	cmp	w0, #0x45
  414ff0:	b.eq	416944 <__fxstatat@plt+0x13de4>  // b.none
  414ff4:	mov	w0, #0x2                   	// #2
  414ff8:	str	w0, [sp, #1756]
  414ffc:	ldr	x0, [sp, #64]
  415000:	ldr	w0, [x0, #12]
  415004:	str	w0, [sp, #1752]
  415008:	b	4150cc <__fxstatat@plt+0x1256c>
  41500c:	ldr	w0, [sp, #1760]
  415010:	cmp	w0, #0x45
  415014:	b.eq	41694c <__fxstatat@plt+0x13dec>  // b.none
  415018:	mov	w0, #0x2                   	// #2
  41501c:	str	w0, [sp, #1756]
  415020:	ldr	x0, [sp, #64]
  415024:	ldr	w0, [x0, #12]
  415028:	str	w0, [sp, #1752]
  41502c:	b	4150b0 <__fxstatat@plt+0x12550>
  415030:	mov	w0, #0x1                   	// #1
  415034:	strb	w0, [sp, #1746]
  415038:	b	4150e8 <__fxstatat@plt+0x12588>
  41503c:	ldr	w0, [sp, #1764]
  415040:	cmp	w0, #0x0
  415044:	b.ne	415050 <__fxstatat@plt+0x124f0>  // b.any
  415048:	ldr	w0, [sp, #56]
  41504c:	str	w0, [sp, #1764]
  415050:	ldr	w0, [sp, #1764]
  415054:	cmp	w0, #0x2b
  415058:	b.ne	415098 <__fxstatat@plt+0x12538>  // b.any
  41505c:	ldr	w0, [sp, #1756]
  415060:	cmp	w0, #0x2
  415064:	b.ne	415070 <__fxstatat@plt+0x12510>  // b.any
  415068:	mov	w0, #0x63                  	// #99
  41506c:	b	415074 <__fxstatat@plt+0x12514>
  415070:	mov	w0, #0x270f                	// #9999
  415074:	ldr	w1, [sp, #1748]
  415078:	cmp	w0, w1
  41507c:	b.cc	415090 <__fxstatat@plt+0x12530>  // b.lo, b.ul, b.last
  415080:	ldr	w1, [sp, #1756]
  415084:	ldr	w0, [sp, #52]
  415088:	cmp	w1, w0
  41508c:	b.ge	415098 <__fxstatat@plt+0x12538>  // b.tcont
  415090:	mov	w0, #0x1                   	// #1
  415094:	b	41509c <__fxstatat@plt+0x1253c>
  415098:	mov	w0, #0x0                   	// #0
  41509c:	strb	w0, [sp, #1746]
  4150a0:	ldrb	w0, [sp, #1746]
  4150a4:	and	w0, w0, #0x1
  4150a8:	strb	w0, [sp, #1746]
  4150ac:	b	4150e4 <__fxstatat@plt+0x12584>
  4150b0:	ldr	w0, [sp, #1764]
  4150b4:	cmp	w0, #0x0
  4150b8:	b.ne	4150c8 <__fxstatat@plt+0x12568>  // b.any
  4150bc:	mov	w0, #0x5f                  	// #95
  4150c0:	str	w0, [sp, #1764]
  4150c4:	b	4150cc <__fxstatat@plt+0x1256c>
  4150c8:	nop
  4150cc:	ldr	w0, [sp, #1752]
  4150d0:	lsr	w0, w0, #31
  4150d4:	strb	w0, [sp, #1747]
  4150d8:	ldr	w0, [sp, #1752]
  4150dc:	str	w0, [sp, #1748]
  4150e0:	strb	wzr, [sp, #1746]
  4150e4:	str	wzr, [sp, #1740]
  4150e8:	ldr	w0, [sp, #1760]
  4150ec:	cmp	w0, #0x4f
  4150f0:	b.ne	415108 <__fxstatat@plt+0x125a8>  // b.any
  4150f4:	ldrb	w0, [sp, #1747]
  4150f8:	eor	w0, w0, #0x1
  4150fc:	and	w0, w0, #0xff
  415100:	cmp	w0, #0x0
  415104:	b.ne	414cc0 <__fxstatat@plt+0x12160>  // b.any
  415108:	add	x0, sp, #0x470
  41510c:	add	x0, x0, #0x17
  415110:	str	x0, [sp, #1720]
  415114:	ldrb	w0, [sp, #1747]
  415118:	cmp	w0, #0x0
  41511c:	b.eq	41512c <__fxstatat@plt+0x125cc>  // b.none
  415120:	ldr	w0, [sp, #1748]
  415124:	neg	w0, w0
  415128:	str	w0, [sp, #1748]
  41512c:	ldr	w0, [sp, #1740]
  415130:	and	w0, w0, #0x1
  415134:	cmp	w0, #0x0
  415138:	b.eq	415154 <__fxstatat@plt+0x125f4>  // b.none
  41513c:	ldr	x0, [sp, #1720]
  415140:	sub	x0, x0, #0x1
  415144:	str	x0, [sp, #1720]
  415148:	ldr	x0, [sp, #1720]
  41514c:	mov	w1, #0x3a                  	// #58
  415150:	strb	w1, [x0]
  415154:	ldr	w0, [sp, #1740]
  415158:	asr	w0, w0, #1
  41515c:	str	w0, [sp, #1740]
  415160:	ldr	w2, [sp, #1748]
  415164:	mov	w0, #0xcccd                	// #52429
  415168:	movk	w0, #0xcccc, lsl #16
  41516c:	umull	x0, w2, w0
  415170:	lsr	x0, x0, #32
  415174:	lsr	w1, w0, #3
  415178:	mov	w0, w1
  41517c:	lsl	w0, w0, #2
  415180:	add	w0, w0, w1
  415184:	lsl	w0, w0, #1
  415188:	sub	w1, w2, w0
  41518c:	and	w0, w1, #0xff
  415190:	ldr	x1, [sp, #1720]
  415194:	sub	x1, x1, #0x1
  415198:	str	x1, [sp, #1720]
  41519c:	add	w0, w0, #0x30
  4151a0:	and	w1, w0, #0xff
  4151a4:	ldr	x0, [sp, #1720]
  4151a8:	strb	w1, [x0]
  4151ac:	ldr	w1, [sp, #1748]
  4151b0:	mov	w0, #0xcccd                	// #52429
  4151b4:	movk	w0, #0xcccc, lsl #16
  4151b8:	umull	x0, w1, w0
  4151bc:	lsr	x0, x0, #32
  4151c0:	lsr	w0, w0, #3
  4151c4:	str	w0, [sp, #1748]
  4151c8:	ldr	w0, [sp, #1748]
  4151cc:	cmp	w0, #0x0
  4151d0:	b.ne	41512c <__fxstatat@plt+0x125cc>  // b.any
  4151d4:	ldr	w0, [sp, #1740]
  4151d8:	cmp	w0, #0x0
  4151dc:	b.ne	41512c <__fxstatat@plt+0x125cc>  // b.any
  4151e0:	nop
  4151e4:	ldr	w1, [sp, #1756]
  4151e8:	ldr	w0, [sp, #52]
  4151ec:	cmp	w1, w0
  4151f0:	b.ge	4151fc <__fxstatat@plt+0x1269c>  // b.tcont
  4151f4:	ldr	w0, [sp, #52]
  4151f8:	str	w0, [sp, #1756]
  4151fc:	ldrb	w0, [sp, #1747]
  415200:	cmp	w0, #0x0
  415204:	b.eq	415210 <__fxstatat@plt+0x126b0>  // b.none
  415208:	mov	w0, #0x2d                  	// #45
  41520c:	b	415228 <__fxstatat@plt+0x126c8>
  415210:	ldrb	w0, [sp, #1746]
  415214:	cmp	w0, #0x0
  415218:	b.eq	415224 <__fxstatat@plt+0x126c4>  // b.none
  41521c:	mov	w0, #0x2b                  	// #43
  415220:	b	415228 <__fxstatat@plt+0x126c8>
  415224:	mov	w0, #0x0                   	// #0
  415228:	strb	w0, [sp, #1467]
  41522c:	ldr	w0, [sp, #1764]
  415230:	cmp	w0, #0x2d
  415234:	b.ne	415364 <__fxstatat@plt+0x12804>  // b.any
  415238:	ldrb	w0, [sp, #1467]
  41523c:	cmp	w0, #0x0
  415240:	b.eq	415818 <__fxstatat@plt+0x12cb8>  // b.none
  415244:	mov	x0, #0x1                   	// #1
  415248:	str	x0, [sp, #1352]
  41524c:	ldr	w1, [sp, #52]
  415250:	ldr	w0, [sp, #52]
  415254:	mov	w2, #0x0                   	// #0
  415258:	cmp	w1, #0x0
  41525c:	csel	w0, w0, w2, ge  // ge = tcont
  415260:	sxtw	x0, w0
  415264:	str	x0, [sp, #1344]
  415268:	ldr	x0, [sp, #1344]
  41526c:	ldr	x2, [sp, #1352]
  415270:	ldr	x1, [sp, #1352]
  415274:	cmp	x2, x0
  415278:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41527c:	str	x0, [sp, #1336]
  415280:	ldr	x1, [sp, #80]
  415284:	ldr	x0, [sp, #1784]
  415288:	sub	x0, x1, x0
  41528c:	ldr	x1, [sp, #1336]
  415290:	cmp	x1, x0
  415294:	b.cc	4152a0 <__fxstatat@plt+0x12740>  // b.lo, b.ul, b.last
  415298:	mov	x0, #0x0                   	// #0
  41529c:	b	416c14 <__fxstatat@plt+0x140b4>
  4152a0:	ldr	x0, [sp, #1776]
  4152a4:	cmp	x0, #0x0
  4152a8:	b.eq	415350 <__fxstatat@plt+0x127f0>  // b.none
  4152ac:	ldr	w0, [sp, #1756]
  4152b0:	cmp	w0, #0x0
  4152b4:	b.ne	415334 <__fxstatat@plt+0x127d4>  // b.any
  4152b8:	ldr	x1, [sp, #1352]
  4152bc:	ldr	x0, [sp, #1344]
  4152c0:	cmp	x1, x0
  4152c4:	b.cs	415334 <__fxstatat@plt+0x127d4>  // b.hs, b.nlast
  4152c8:	ldrsw	x1, [sp, #52]
  4152cc:	ldr	x0, [sp, #1352]
  4152d0:	sub	x0, x1, x0
  4152d4:	str	x0, [sp, #1328]
  4152d8:	ldr	w0, [sp, #1764]
  4152dc:	cmp	w0, #0x30
  4152e0:	b.eq	4152f0 <__fxstatat@plt+0x12790>  // b.none
  4152e4:	ldr	w0, [sp, #1764]
  4152e8:	cmp	w0, #0x2b
  4152ec:	b.ne	415314 <__fxstatat@plt+0x127b4>  // b.any
  4152f0:	ldr	x2, [sp, #1328]
  4152f4:	mov	w1, #0x30                  	// #48
  4152f8:	ldr	x0, [sp, #1776]
  4152fc:	bl	402740 <memset@plt>
  415300:	ldr	x1, [sp, #1776]
  415304:	ldr	x0, [sp, #1328]
  415308:	add	x0, x1, x0
  41530c:	str	x0, [sp, #1776]
  415310:	b	415334 <__fxstatat@plt+0x127d4>
  415314:	ldr	x2, [sp, #1328]
  415318:	mov	w1, #0x20                  	// #32
  41531c:	ldr	x0, [sp, #1776]
  415320:	bl	402740 <memset@plt>
  415324:	ldr	x1, [sp, #1776]
  415328:	ldr	x0, [sp, #1328]
  41532c:	add	x0, x1, x0
  415330:	str	x0, [sp, #1776]
  415334:	ldr	x0, [sp, #1776]
  415338:	ldrb	w1, [sp, #1467]
  41533c:	strb	w1, [x0]
  415340:	ldr	x1, [sp, #1776]
  415344:	ldr	x0, [sp, #1352]
  415348:	add	x0, x1, x0
  41534c:	str	x0, [sp, #1776]
  415350:	ldr	x1, [sp, #1784]
  415354:	ldr	x0, [sp, #1336]
  415358:	add	x0, x1, x0
  41535c:	str	x0, [sp, #1784]
  415360:	b	415818 <__fxstatat@plt+0x12cb8>
  415364:	ldr	w1, [sp, #1756]
  415368:	add	x0, sp, #0x470
  41536c:	add	x0, x0, #0x17
  415370:	ldr	x2, [sp, #1720]
  415374:	sub	x0, x0, x2
  415378:	sub	w0, w1, w0
  41537c:	ldrb	w1, [sp, #1467]
  415380:	cmp	w1, #0x0
  415384:	cset	w1, ne  // ne = any
  415388:	and	w1, w1, #0xff
  41538c:	sub	w0, w0, w1
  415390:	str	w0, [sp, #1460]
  415394:	ldr	w0, [sp, #1460]
  415398:	cmp	w0, #0x0
  41539c:	b.le	4156f0 <__fxstatat@plt+0x12b90>
  4153a0:	ldr	w0, [sp, #1764]
  4153a4:	cmp	w0, #0x5f
  4153a8:	b.ne	415560 <__fxstatat@plt+0x12a00>  // b.any
  4153ac:	ldrsw	x1, [sp, #1460]
  4153b0:	ldr	x2, [sp, #80]
  4153b4:	ldr	x0, [sp, #1784]
  4153b8:	sub	x0, x2, x0
  4153bc:	cmp	x1, x0
  4153c0:	b.cc	4153cc <__fxstatat@plt+0x1286c>  // b.lo, b.ul, b.last
  4153c4:	mov	x0, #0x0                   	// #0
  4153c8:	b	416c14 <__fxstatat@plt+0x140b4>
  4153cc:	ldr	x0, [sp, #1776]
  4153d0:	cmp	x0, #0x0
  4153d4:	b.eq	4153fc <__fxstatat@plt+0x1289c>  // b.none
  4153d8:	ldrsw	x0, [sp, #1460]
  4153dc:	mov	x2, x0
  4153e0:	mov	w1, #0x20                  	// #32
  4153e4:	ldr	x0, [sp, #1776]
  4153e8:	bl	402740 <memset@plt>
  4153ec:	ldrsw	x0, [sp, #1460]
  4153f0:	ldr	x1, [sp, #1776]
  4153f4:	add	x0, x1, x0
  4153f8:	str	x0, [sp, #1776]
  4153fc:	ldrsw	x0, [sp, #1460]
  415400:	ldr	x1, [sp, #1784]
  415404:	add	x0, x1, x0
  415408:	str	x0, [sp, #1784]
  41540c:	ldr	w1, [sp, #52]
  415410:	ldr	w0, [sp, #1460]
  415414:	cmp	w1, w0
  415418:	b.le	41542c <__fxstatat@plt+0x128cc>
  41541c:	ldr	w1, [sp, #52]
  415420:	ldr	w0, [sp, #1460]
  415424:	sub	w0, w1, w0
  415428:	b	415430 <__fxstatat@plt+0x128d0>
  41542c:	mov	w0, #0x0                   	// #0
  415430:	str	w0, [sp, #52]
  415434:	ldrb	w0, [sp, #1467]
  415438:	cmp	w0, #0x0
  41543c:	b.eq	415818 <__fxstatat@plt+0x12cb8>  // b.none
  415440:	mov	x0, #0x1                   	// #1
  415444:	str	x0, [sp, #1384]
  415448:	ldr	w1, [sp, #52]
  41544c:	ldr	w0, [sp, #52]
  415450:	mov	w2, #0x0                   	// #0
  415454:	cmp	w1, #0x0
  415458:	csel	w0, w0, w2, ge  // ge = tcont
  41545c:	sxtw	x0, w0
  415460:	str	x0, [sp, #1376]
  415464:	ldr	x0, [sp, #1376]
  415468:	ldr	x2, [sp, #1384]
  41546c:	ldr	x1, [sp, #1384]
  415470:	cmp	x2, x0
  415474:	csel	x0, x1, x0, cs  // cs = hs, nlast
  415478:	str	x0, [sp, #1368]
  41547c:	ldr	x1, [sp, #80]
  415480:	ldr	x0, [sp, #1784]
  415484:	sub	x0, x1, x0
  415488:	ldr	x1, [sp, #1368]
  41548c:	cmp	x1, x0
  415490:	b.cc	41549c <__fxstatat@plt+0x1293c>  // b.lo, b.ul, b.last
  415494:	mov	x0, #0x0                   	// #0
  415498:	b	416c14 <__fxstatat@plt+0x140b4>
  41549c:	ldr	x0, [sp, #1776]
  4154a0:	cmp	x0, #0x0
  4154a4:	b.eq	41554c <__fxstatat@plt+0x129ec>  // b.none
  4154a8:	ldr	w0, [sp, #1756]
  4154ac:	cmp	w0, #0x0
  4154b0:	b.ne	415530 <__fxstatat@plt+0x129d0>  // b.any
  4154b4:	ldr	x1, [sp, #1384]
  4154b8:	ldr	x0, [sp, #1376]
  4154bc:	cmp	x1, x0
  4154c0:	b.cs	415530 <__fxstatat@plt+0x129d0>  // b.hs, b.nlast
  4154c4:	ldrsw	x1, [sp, #52]
  4154c8:	ldr	x0, [sp, #1384]
  4154cc:	sub	x0, x1, x0
  4154d0:	str	x0, [sp, #1360]
  4154d4:	ldr	w0, [sp, #1764]
  4154d8:	cmp	w0, #0x30
  4154dc:	b.eq	4154ec <__fxstatat@plt+0x1298c>  // b.none
  4154e0:	ldr	w0, [sp, #1764]
  4154e4:	cmp	w0, #0x2b
  4154e8:	b.ne	415510 <__fxstatat@plt+0x129b0>  // b.any
  4154ec:	ldr	x2, [sp, #1360]
  4154f0:	mov	w1, #0x30                  	// #48
  4154f4:	ldr	x0, [sp, #1776]
  4154f8:	bl	402740 <memset@plt>
  4154fc:	ldr	x1, [sp, #1776]
  415500:	ldr	x0, [sp, #1360]
  415504:	add	x0, x1, x0
  415508:	str	x0, [sp, #1776]
  41550c:	b	415530 <__fxstatat@plt+0x129d0>
  415510:	ldr	x2, [sp, #1360]
  415514:	mov	w1, #0x20                  	// #32
  415518:	ldr	x0, [sp, #1776]
  41551c:	bl	402740 <memset@plt>
  415520:	ldr	x1, [sp, #1776]
  415524:	ldr	x0, [sp, #1360]
  415528:	add	x0, x1, x0
  41552c:	str	x0, [sp, #1776]
  415530:	ldr	x0, [sp, #1776]
  415534:	ldrb	w1, [sp, #1467]
  415538:	strb	w1, [x0]
  41553c:	ldr	x1, [sp, #1776]
  415540:	ldr	x0, [sp, #1384]
  415544:	add	x0, x1, x0
  415548:	str	x0, [sp, #1776]
  41554c:	ldr	x1, [sp, #1784]
  415550:	ldr	x0, [sp, #1368]
  415554:	add	x0, x1, x0
  415558:	str	x0, [sp, #1784]
  41555c:	b	415818 <__fxstatat@plt+0x12cb8>
  415560:	ldrsw	x1, [sp, #1756]
  415564:	ldr	x2, [sp, #80]
  415568:	ldr	x0, [sp, #1784]
  41556c:	sub	x0, x2, x0
  415570:	cmp	x1, x0
  415574:	b.cc	415580 <__fxstatat@plt+0x12a20>  // b.lo, b.ul, b.last
  415578:	mov	x0, #0x0                   	// #0
  41557c:	b	416c14 <__fxstatat@plt+0x140b4>
  415580:	ldrb	w0, [sp, #1467]
  415584:	cmp	w0, #0x0
  415588:	b.eq	4156a8 <__fxstatat@plt+0x12b48>  // b.none
  41558c:	mov	x0, #0x1                   	// #1
  415590:	str	x0, [sp, #1416]
  415594:	ldr	w1, [sp, #52]
  415598:	ldr	w0, [sp, #52]
  41559c:	mov	w2, #0x0                   	// #0
  4155a0:	cmp	w1, #0x0
  4155a4:	csel	w0, w0, w2, ge  // ge = tcont
  4155a8:	sxtw	x0, w0
  4155ac:	str	x0, [sp, #1408]
  4155b0:	ldr	x0, [sp, #1408]
  4155b4:	ldr	x2, [sp, #1416]
  4155b8:	ldr	x1, [sp, #1416]
  4155bc:	cmp	x2, x0
  4155c0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4155c4:	str	x0, [sp, #1400]
  4155c8:	ldr	x1, [sp, #80]
  4155cc:	ldr	x0, [sp, #1784]
  4155d0:	sub	x0, x1, x0
  4155d4:	ldr	x1, [sp, #1400]
  4155d8:	cmp	x1, x0
  4155dc:	b.cc	4155e8 <__fxstatat@plt+0x12a88>  // b.lo, b.ul, b.last
  4155e0:	mov	x0, #0x0                   	// #0
  4155e4:	b	416c14 <__fxstatat@plt+0x140b4>
  4155e8:	ldr	x0, [sp, #1776]
  4155ec:	cmp	x0, #0x0
  4155f0:	b.eq	415698 <__fxstatat@plt+0x12b38>  // b.none
  4155f4:	ldr	w0, [sp, #1756]
  4155f8:	cmp	w0, #0x0
  4155fc:	b.ne	41567c <__fxstatat@plt+0x12b1c>  // b.any
  415600:	ldr	x1, [sp, #1416]
  415604:	ldr	x0, [sp, #1408]
  415608:	cmp	x1, x0
  41560c:	b.cs	41567c <__fxstatat@plt+0x12b1c>  // b.hs, b.nlast
  415610:	ldrsw	x1, [sp, #52]
  415614:	ldr	x0, [sp, #1416]
  415618:	sub	x0, x1, x0
  41561c:	str	x0, [sp, #1392]
  415620:	ldr	w0, [sp, #1764]
  415624:	cmp	w0, #0x30
  415628:	b.eq	415638 <__fxstatat@plt+0x12ad8>  // b.none
  41562c:	ldr	w0, [sp, #1764]
  415630:	cmp	w0, #0x2b
  415634:	b.ne	41565c <__fxstatat@plt+0x12afc>  // b.any
  415638:	ldr	x2, [sp, #1392]
  41563c:	mov	w1, #0x30                  	// #48
  415640:	ldr	x0, [sp, #1776]
  415644:	bl	402740 <memset@plt>
  415648:	ldr	x1, [sp, #1776]
  41564c:	ldr	x0, [sp, #1392]
  415650:	add	x0, x1, x0
  415654:	str	x0, [sp, #1776]
  415658:	b	41567c <__fxstatat@plt+0x12b1c>
  41565c:	ldr	x2, [sp, #1392]
  415660:	mov	w1, #0x20                  	// #32
  415664:	ldr	x0, [sp, #1776]
  415668:	bl	402740 <memset@plt>
  41566c:	ldr	x1, [sp, #1776]
  415670:	ldr	x0, [sp, #1392]
  415674:	add	x0, x1, x0
  415678:	str	x0, [sp, #1776]
  41567c:	ldr	x0, [sp, #1776]
  415680:	ldrb	w1, [sp, #1467]
  415684:	strb	w1, [x0]
  415688:	ldr	x1, [sp, #1776]
  41568c:	ldr	x0, [sp, #1416]
  415690:	add	x0, x1, x0
  415694:	str	x0, [sp, #1776]
  415698:	ldr	x1, [sp, #1784]
  41569c:	ldr	x0, [sp, #1400]
  4156a0:	add	x0, x1, x0
  4156a4:	str	x0, [sp, #1784]
  4156a8:	ldr	x0, [sp, #1776]
  4156ac:	cmp	x0, #0x0
  4156b0:	b.eq	4156d8 <__fxstatat@plt+0x12b78>  // b.none
  4156b4:	ldrsw	x0, [sp, #1460]
  4156b8:	mov	x2, x0
  4156bc:	mov	w1, #0x30                  	// #48
  4156c0:	ldr	x0, [sp, #1776]
  4156c4:	bl	402740 <memset@plt>
  4156c8:	ldrsw	x0, [sp, #1460]
  4156cc:	ldr	x1, [sp, #1776]
  4156d0:	add	x0, x1, x0
  4156d4:	str	x0, [sp, #1776]
  4156d8:	ldrsw	x0, [sp, #1460]
  4156dc:	ldr	x1, [sp, #1784]
  4156e0:	add	x0, x1, x0
  4156e4:	str	x0, [sp, #1784]
  4156e8:	str	wzr, [sp, #52]
  4156ec:	b	415818 <__fxstatat@plt+0x12cb8>
  4156f0:	ldrb	w0, [sp, #1467]
  4156f4:	cmp	w0, #0x0
  4156f8:	b.eq	415818 <__fxstatat@plt+0x12cb8>  // b.none
  4156fc:	mov	x0, #0x1                   	// #1
  415700:	str	x0, [sp, #1448]
  415704:	ldr	w1, [sp, #52]
  415708:	ldr	w0, [sp, #52]
  41570c:	mov	w2, #0x0                   	// #0
  415710:	cmp	w1, #0x0
  415714:	csel	w0, w0, w2, ge  // ge = tcont
  415718:	sxtw	x0, w0
  41571c:	str	x0, [sp, #1440]
  415720:	ldr	x0, [sp, #1440]
  415724:	ldr	x2, [sp, #1448]
  415728:	ldr	x1, [sp, #1448]
  41572c:	cmp	x2, x0
  415730:	csel	x0, x1, x0, cs  // cs = hs, nlast
  415734:	str	x0, [sp, #1432]
  415738:	ldr	x1, [sp, #80]
  41573c:	ldr	x0, [sp, #1784]
  415740:	sub	x0, x1, x0
  415744:	ldr	x1, [sp, #1432]
  415748:	cmp	x1, x0
  41574c:	b.cc	415758 <__fxstatat@plt+0x12bf8>  // b.lo, b.ul, b.last
  415750:	mov	x0, #0x0                   	// #0
  415754:	b	416c14 <__fxstatat@plt+0x140b4>
  415758:	ldr	x0, [sp, #1776]
  41575c:	cmp	x0, #0x0
  415760:	b.eq	415808 <__fxstatat@plt+0x12ca8>  // b.none
  415764:	ldr	w0, [sp, #1756]
  415768:	cmp	w0, #0x0
  41576c:	b.ne	4157ec <__fxstatat@plt+0x12c8c>  // b.any
  415770:	ldr	x1, [sp, #1448]
  415774:	ldr	x0, [sp, #1440]
  415778:	cmp	x1, x0
  41577c:	b.cs	4157ec <__fxstatat@plt+0x12c8c>  // b.hs, b.nlast
  415780:	ldrsw	x1, [sp, #52]
  415784:	ldr	x0, [sp, #1448]
  415788:	sub	x0, x1, x0
  41578c:	str	x0, [sp, #1424]
  415790:	ldr	w0, [sp, #1764]
  415794:	cmp	w0, #0x30
  415798:	b.eq	4157a8 <__fxstatat@plt+0x12c48>  // b.none
  41579c:	ldr	w0, [sp, #1764]
  4157a0:	cmp	w0, #0x2b
  4157a4:	b.ne	4157cc <__fxstatat@plt+0x12c6c>  // b.any
  4157a8:	ldr	x2, [sp, #1424]
  4157ac:	mov	w1, #0x30                  	// #48
  4157b0:	ldr	x0, [sp, #1776]
  4157b4:	bl	402740 <memset@plt>
  4157b8:	ldr	x1, [sp, #1776]
  4157bc:	ldr	x0, [sp, #1424]
  4157c0:	add	x0, x1, x0
  4157c4:	str	x0, [sp, #1776]
  4157c8:	b	4157ec <__fxstatat@plt+0x12c8c>
  4157cc:	ldr	x2, [sp, #1424]
  4157d0:	mov	w1, #0x20                  	// #32
  4157d4:	ldr	x0, [sp, #1776]
  4157d8:	bl	402740 <memset@plt>
  4157dc:	ldr	x1, [sp, #1776]
  4157e0:	ldr	x0, [sp, #1424]
  4157e4:	add	x0, x1, x0
  4157e8:	str	x0, [sp, #1776]
  4157ec:	ldr	x0, [sp, #1776]
  4157f0:	ldrb	w1, [sp, #1467]
  4157f4:	strb	w1, [x0]
  4157f8:	ldr	x1, [sp, #1776]
  4157fc:	ldr	x0, [sp, #1448]
  415800:	add	x0, x1, x0
  415804:	str	x0, [sp, #1776]
  415808:	ldr	x1, [sp, #1784]
  41580c:	ldr	x0, [sp, #1432]
  415810:	add	x0, x1, x0
  415814:	str	x0, [sp, #1784]
  415818:	add	x0, sp, #0x470
  41581c:	add	x0, x0, #0x17
  415820:	ldr	x1, [sp, #1720]
  415824:	sub	x0, x0, x1
  415828:	str	x0, [sp, #1320]
  41582c:	ldr	w1, [sp, #52]
  415830:	ldr	w0, [sp, #52]
  415834:	mov	w2, #0x0                   	// #0
  415838:	cmp	w1, #0x0
  41583c:	csel	w0, w0, w2, ge  // ge = tcont
  415840:	sxtw	x0, w0
  415844:	str	x0, [sp, #1312]
  415848:	ldr	x0, [sp, #1312]
  41584c:	ldr	x2, [sp, #1320]
  415850:	ldr	x1, [sp, #1320]
  415854:	cmp	x2, x0
  415858:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41585c:	str	x0, [sp, #1304]
  415860:	ldr	x1, [sp, #80]
  415864:	ldr	x0, [sp, #1784]
  415868:	sub	x0, x1, x0
  41586c:	ldr	x1, [sp, #1304]
  415870:	cmp	x1, x0
  415874:	b.cc	415880 <__fxstatat@plt+0x12d20>  // b.lo, b.ul, b.last
  415878:	mov	x0, #0x0                   	// #0
  41587c:	b	416c14 <__fxstatat@plt+0x140b4>
  415880:	ldr	x0, [sp, #1776]
  415884:	cmp	x0, #0x0
  415888:	b.eq	415974 <__fxstatat@plt+0x12e14>  // b.none
  41588c:	ldr	w0, [sp, #1756]
  415890:	cmp	w0, #0x0
  415894:	b.ne	415914 <__fxstatat@plt+0x12db4>  // b.any
  415898:	ldr	x1, [sp, #1320]
  41589c:	ldr	x0, [sp, #1312]
  4158a0:	cmp	x1, x0
  4158a4:	b.cs	415914 <__fxstatat@plt+0x12db4>  // b.hs, b.nlast
  4158a8:	ldrsw	x1, [sp, #52]
  4158ac:	ldr	x0, [sp, #1320]
  4158b0:	sub	x0, x1, x0
  4158b4:	str	x0, [sp, #1296]
  4158b8:	ldr	w0, [sp, #1764]
  4158bc:	cmp	w0, #0x30
  4158c0:	b.eq	4158d0 <__fxstatat@plt+0x12d70>  // b.none
  4158c4:	ldr	w0, [sp, #1764]
  4158c8:	cmp	w0, #0x2b
  4158cc:	b.ne	4158f4 <__fxstatat@plt+0x12d94>  // b.any
  4158d0:	ldr	x2, [sp, #1296]
  4158d4:	mov	w1, #0x30                  	// #48
  4158d8:	ldr	x0, [sp, #1776]
  4158dc:	bl	402740 <memset@plt>
  4158e0:	ldr	x1, [sp, #1776]
  4158e4:	ldr	x0, [sp, #1296]
  4158e8:	add	x0, x1, x0
  4158ec:	str	x0, [sp, #1776]
  4158f0:	b	415914 <__fxstatat@plt+0x12db4>
  4158f4:	ldr	x2, [sp, #1296]
  4158f8:	mov	w1, #0x20                  	// #32
  4158fc:	ldr	x0, [sp, #1776]
  415900:	bl	402740 <memset@plt>
  415904:	ldr	x1, [sp, #1776]
  415908:	ldr	x0, [sp, #1296]
  41590c:	add	x0, x1, x0
  415910:	str	x0, [sp, #1776]
  415914:	ldrb	w0, [sp, #1719]
  415918:	cmp	w0, #0x0
  41591c:	b.eq	415934 <__fxstatat@plt+0x12dd4>  // b.none
  415920:	ldr	x2, [sp, #1320]
  415924:	ldr	x1, [sp, #1720]
  415928:	ldr	x0, [sp, #1776]
  41592c:	bl	4143a4 <__fxstatat@plt+0x11844>
  415930:	b	415964 <__fxstatat@plt+0x12e04>
  415934:	ldrb	w0, [sp, #1718]
  415938:	cmp	w0, #0x0
  41593c:	b.eq	415954 <__fxstatat@plt+0x12df4>  // b.none
  415940:	ldr	x2, [sp, #1320]
  415944:	ldr	x1, [sp, #1720]
  415948:	ldr	x0, [sp, #1776]
  41594c:	bl	414408 <__fxstatat@plt+0x118a8>
  415950:	b	415964 <__fxstatat@plt+0x12e04>
  415954:	ldr	x2, [sp, #1320]
  415958:	ldr	x1, [sp, #1720]
  41595c:	ldr	x0, [sp, #1776]
  415960:	bl	402490 <memcpy@plt>
  415964:	ldr	x1, [sp, #1776]
  415968:	ldr	x0, [sp, #1320]
  41596c:	add	x0, x1, x0
  415970:	str	x0, [sp, #1776]
  415974:	ldr	x1, [sp, #1784]
  415978:	ldr	x0, [sp, #1304]
  41597c:	add	x0, x1, x0
  415980:	str	x0, [sp, #1784]
  415984:	b	416bcc <__fxstatat@plt+0x1406c>
  415988:	ldr	w0, [sp, #1760]
  41598c:	cmp	w0, #0x0
  415990:	b.ne	416954 <__fxstatat@plt+0x13df4>  // b.any
  415994:	ldr	w0, [sp, #1764]
  415998:	cmp	w0, #0x0
  41599c:	b.ne	4159c0 <__fxstatat@plt+0x12e60>  // b.any
  4159a0:	ldr	w0, [sp, #52]
  4159a4:	cmp	w0, #0x0
  4159a8:	b.ge	4159c0 <__fxstatat@plt+0x12e60>  // b.tcont
  4159ac:	mov	w0, #0x2b                  	// #43
  4159b0:	str	w0, [sp, #1764]
  4159b4:	mov	w0, #0x4                   	// #4
  4159b8:	str	w0, [sp, #1692]
  4159bc:	b	4159dc <__fxstatat@plt+0x12e7c>
  4159c0:	ldr	w0, [sp, #52]
  4159c4:	sub	w0, w0, #0x6
  4159c8:	str	w0, [sp, #1692]
  4159cc:	ldr	w0, [sp, #1692]
  4159d0:	cmp	w0, #0x0
  4159d4:	b.ge	4159dc <__fxstatat@plt+0x12e7c>  // b.tcont
  4159d8:	str	wzr, [sp, #1692]
  4159dc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4159e0:	add	x0, x0, #0x400
  4159e4:	str	x0, [sp, #1728]
  4159e8:	b	414af8 <__fxstatat@plt+0x11f98>
  4159ec:	ldr	w0, [sp, #1760]
  4159f0:	cmp	w0, #0x45
  4159f4:	b.eq	41695c <__fxstatat@plt+0x13dfc>  // b.none
  4159f8:	mov	w0, #0x2                   	// #2
  4159fc:	str	w0, [sp, #1756]
  415a00:	ldr	x0, [sp, #64]
  415a04:	ldr	w0, [x0, #8]
  415a08:	str	w0, [sp, #1752]
  415a0c:	b	4150cc <__fxstatat@plt+0x1256c>
  415a10:	ldr	w0, [sp, #1760]
  415a14:	cmp	w0, #0x45
  415a18:	b.eq	416964 <__fxstatat@plt+0x13e04>  // b.none
  415a1c:	mov	w0, #0x2                   	// #2
  415a20:	str	w0, [sp, #1756]
  415a24:	ldr	w0, [sp, #1804]
  415a28:	str	w0, [sp, #1752]
  415a2c:	b	4150cc <__fxstatat@plt+0x1256c>
  415a30:	ldr	w0, [sp, #1760]
  415a34:	cmp	w0, #0x45
  415a38:	b.eq	41696c <__fxstatat@plt+0x13e0c>  // b.none
  415a3c:	mov	w0, #0x2                   	// #2
  415a40:	str	w0, [sp, #1756]
  415a44:	ldr	x0, [sp, #64]
  415a48:	ldr	w0, [x0, #8]
  415a4c:	str	w0, [sp, #1752]
  415a50:	b	4150b0 <__fxstatat@plt+0x12550>
  415a54:	ldr	w0, [sp, #1760]
  415a58:	cmp	w0, #0x45
  415a5c:	b.eq	416974 <__fxstatat@plt+0x13e14>  // b.none
  415a60:	mov	w0, #0x2                   	// #2
  415a64:	str	w0, [sp, #1756]
  415a68:	ldr	w0, [sp, #1804]
  415a6c:	str	w0, [sp, #1752]
  415a70:	b	4150b0 <__fxstatat@plt+0x12550>
  415a74:	ldr	w0, [sp, #1760]
  415a78:	cmp	w0, #0x45
  415a7c:	b.eq	41697c <__fxstatat@plt+0x13e1c>  // b.none
  415a80:	mov	w0, #0x3                   	// #3
  415a84:	str	w0, [sp, #1756]
  415a88:	ldr	x0, [sp, #64]
  415a8c:	ldr	w0, [x0, #28]
  415a90:	cmn	w0, #0x1
  415a94:	cset	w0, lt  // lt = tstop
  415a98:	strb	w0, [sp, #1747]
  415a9c:	ldr	x0, [sp, #64]
  415aa0:	ldr	w0, [x0, #28]
  415aa4:	add	w0, w0, #0x1
  415aa8:	str	w0, [sp, #1748]
  415aac:	b	4150e0 <__fxstatat@plt+0x12580>
  415ab0:	ldr	w0, [sp, #1760]
  415ab4:	cmp	w0, #0x45
  415ab8:	b.eq	416984 <__fxstatat@plt+0x13e24>  // b.none
  415abc:	mov	w0, #0x2                   	// #2
  415ac0:	str	w0, [sp, #1756]
  415ac4:	ldr	x0, [sp, #64]
  415ac8:	ldr	w0, [x0, #4]
  415acc:	str	w0, [sp, #1752]
  415ad0:	b	4150cc <__fxstatat@plt+0x1256c>
  415ad4:	ldr	w0, [sp, #1760]
  415ad8:	cmp	w0, #0x45
  415adc:	b.eq	41698c <__fxstatat@plt+0x13e2c>  // b.none
  415ae0:	mov	w0, #0x2                   	// #2
  415ae4:	str	w0, [sp, #1756]
  415ae8:	ldr	x0, [sp, #64]
  415aec:	ldr	w0, [x0, #16]
  415af0:	cmn	w0, #0x1
  415af4:	cset	w0, lt  // lt = tstop
  415af8:	strb	w0, [sp, #1747]
  415afc:	ldr	x0, [sp, #64]
  415b00:	ldr	w0, [x0, #16]
  415b04:	add	w0, w0, #0x1
  415b08:	str	w0, [sp, #1748]
  415b0c:	b	4150e0 <__fxstatat@plt+0x12580>
  415b10:	ldr	w0, [sp, #1760]
  415b14:	cmp	w0, #0x45
  415b18:	b.eq	416994 <__fxstatat@plt+0x13e34>  // b.none
  415b1c:	ldr	w0, [sp, #1816]
  415b20:	str	w0, [sp, #1752]
  415b24:	ldr	w0, [sp, #52]
  415b28:	cmn	w0, #0x1
  415b2c:	b.ne	415b3c <__fxstatat@plt+0x12fdc>  // b.any
  415b30:	mov	w0, #0x9                   	// #9
  415b34:	str	w0, [sp, #52]
  415b38:	b	415b84 <__fxstatat@plt+0x13024>
  415b3c:	ldr	w0, [sp, #52]
  415b40:	str	w0, [sp, #1676]
  415b44:	b	415b78 <__fxstatat@plt+0x13018>
  415b48:	ldr	w0, [sp, #1752]
  415b4c:	mov	w1, #0x6667                	// #26215
  415b50:	movk	w1, #0x6666, lsl #16
  415b54:	smull	x1, w0, w1
  415b58:	lsr	x1, x1, #32
  415b5c:	asr	w1, w1, #2
  415b60:	asr	w0, w0, #31
  415b64:	sub	w0, w1, w0
  415b68:	str	w0, [sp, #1752]
  415b6c:	ldr	w0, [sp, #1676]
  415b70:	add	w0, w0, #0x1
  415b74:	str	w0, [sp, #1676]
  415b78:	ldr	w0, [sp, #1676]
  415b7c:	cmp	w0, #0x8
  415b80:	b.le	415b48 <__fxstatat@plt+0x12fe8>
  415b84:	ldr	w0, [sp, #52]
  415b88:	str	w0, [sp, #1756]
  415b8c:	b	4150cc <__fxstatat@plt+0x1256c>
  415b90:	mov	x0, #0x1                   	// #1
  415b94:	str	x0, [sp, #1600]
  415b98:	ldr	w1, [sp, #52]
  415b9c:	ldr	w0, [sp, #52]
  415ba0:	mov	w2, #0x0                   	// #0
  415ba4:	cmp	w1, #0x0
  415ba8:	csel	w0, w0, w2, ge  // ge = tcont
  415bac:	sxtw	x0, w0
  415bb0:	str	x0, [sp, #1592]
  415bb4:	ldr	x0, [sp, #1592]
  415bb8:	ldr	x2, [sp, #1600]
  415bbc:	ldr	x1, [sp, #1600]
  415bc0:	cmp	x2, x0
  415bc4:	csel	x0, x1, x0, cs  // cs = hs, nlast
  415bc8:	str	x0, [sp, #1584]
  415bcc:	ldr	x1, [sp, #80]
  415bd0:	ldr	x0, [sp, #1784]
  415bd4:	sub	x0, x1, x0
  415bd8:	ldr	x1, [sp, #1584]
  415bdc:	cmp	x1, x0
  415be0:	b.cc	415bec <__fxstatat@plt+0x1308c>  // b.lo, b.ul, b.last
  415be4:	mov	x0, #0x0                   	// #0
  415be8:	b	416c14 <__fxstatat@plt+0x140b4>
  415bec:	ldr	x0, [sp, #1776]
  415bf0:	cmp	x0, #0x0
  415bf4:	b.eq	415c9c <__fxstatat@plt+0x1313c>  // b.none
  415bf8:	ldr	w0, [sp, #1756]
  415bfc:	cmp	w0, #0x0
  415c00:	b.ne	415c80 <__fxstatat@plt+0x13120>  // b.any
  415c04:	ldr	x1, [sp, #1600]
  415c08:	ldr	x0, [sp, #1592]
  415c0c:	cmp	x1, x0
  415c10:	b.cs	415c80 <__fxstatat@plt+0x13120>  // b.hs, b.nlast
  415c14:	ldrsw	x1, [sp, #52]
  415c18:	ldr	x0, [sp, #1600]
  415c1c:	sub	x0, x1, x0
  415c20:	str	x0, [sp, #1576]
  415c24:	ldr	w0, [sp, #1764]
  415c28:	cmp	w0, #0x30
  415c2c:	b.eq	415c3c <__fxstatat@plt+0x130dc>  // b.none
  415c30:	ldr	w0, [sp, #1764]
  415c34:	cmp	w0, #0x2b
  415c38:	b.ne	415c60 <__fxstatat@plt+0x13100>  // b.any
  415c3c:	ldr	x2, [sp, #1576]
  415c40:	mov	w1, #0x30                  	// #48
  415c44:	ldr	x0, [sp, #1776]
  415c48:	bl	402740 <memset@plt>
  415c4c:	ldr	x1, [sp, #1776]
  415c50:	ldr	x0, [sp, #1576]
  415c54:	add	x0, x1, x0
  415c58:	str	x0, [sp, #1776]
  415c5c:	b	415c80 <__fxstatat@plt+0x13120>
  415c60:	ldr	x2, [sp, #1576]
  415c64:	mov	w1, #0x20                  	// #32
  415c68:	ldr	x0, [sp, #1776]
  415c6c:	bl	402740 <memset@plt>
  415c70:	ldr	x1, [sp, #1776]
  415c74:	ldr	x0, [sp, #1576]
  415c78:	add	x0, x1, x0
  415c7c:	str	x0, [sp, #1776]
  415c80:	ldr	x0, [sp, #1776]
  415c84:	mov	w1, #0xa                   	// #10
  415c88:	strb	w1, [x0]
  415c8c:	ldr	x1, [sp, #1776]
  415c90:	ldr	x0, [sp, #1600]
  415c94:	add	x0, x1, x0
  415c98:	str	x0, [sp, #1776]
  415c9c:	ldr	x1, [sp, #1784]
  415ca0:	ldr	x0, [sp, #1584]
  415ca4:	add	x0, x1, x0
  415ca8:	str	x0, [sp, #1784]
  415cac:	b	416bcc <__fxstatat@plt+0x1406c>
  415cb0:	mov	w0, #0x1                   	// #1
  415cb4:	strb	w0, [sp, #1719]
  415cb8:	mov	w0, #0x70                  	// #112
  415cbc:	str	w0, [sp, #1696]
  415cc0:	ldrb	w0, [sp, #1703]
  415cc4:	cmp	w0, #0x0
  415cc8:	b.eq	414cc8 <__fxstatat@plt+0x12168>  // b.none
  415ccc:	strb	wzr, [sp, #1718]
  415cd0:	mov	w0, #0x1                   	// #1
  415cd4:	strb	w0, [sp, #1719]
  415cd8:	b	414cc8 <__fxstatat@plt+0x12168>
  415cdc:	mov	w0, #0x1                   	// #1
  415ce0:	str	w0, [sp, #1756]
  415ce4:	strb	wzr, [sp, #1747]
  415ce8:	ldr	x0, [sp, #64]
  415cec:	ldr	w1, [x0, #16]
  415cf0:	mov	w0, #0xb                   	// #11
  415cf4:	mul	w0, w1, w0
  415cf8:	asr	w0, w0, #5
  415cfc:	add	w0, w0, #0x1
  415d00:	str	w0, [sp, #1748]
  415d04:	b	4150e0 <__fxstatat@plt+0x12580>
  415d08:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  415d0c:	add	x0, x0, #0x410
  415d10:	str	x0, [sp, #1728]
  415d14:	b	414af0 <__fxstatat@plt+0x11f90>
  415d18:	ldr	w0, [sp, #1760]
  415d1c:	cmp	w0, #0x45
  415d20:	b.eq	41699c <__fxstatat@plt+0x13e3c>  // b.none
  415d24:	mov	w0, #0x2                   	// #2
  415d28:	str	w0, [sp, #1756]
  415d2c:	ldr	x0, [sp, #64]
  415d30:	ldr	w0, [x0]
  415d34:	str	w0, [sp, #1752]
  415d38:	b	4150cc <__fxstatat@plt+0x1256c>
  415d3c:	ldr	x1, [sp, #64]
  415d40:	add	x0, sp, #0x68
  415d44:	ldp	x2, x3, [x1]
  415d48:	stp	x2, x3, [x0]
  415d4c:	ldp	x2, x3, [x1, #16]
  415d50:	stp	x2, x3, [x0, #16]
  415d54:	ldp	x2, x3, [x1, #32]
  415d58:	stp	x2, x3, [x0, #32]
  415d5c:	ldr	x1, [x1, #48]
  415d60:	str	x1, [x0, #48]
  415d64:	add	x0, sp, #0x68
  415d68:	mov	x1, x0
  415d6c:	ldr	x0, [sp, #1808]
  415d70:	bl	41c280 <_obstack_memory_used@@Base+0x830>
  415d74:	str	x0, [sp, #1664]
  415d78:	add	x0, sp, #0x470
  415d7c:	add	x0, x0, #0x17
  415d80:	str	x0, [sp, #1720]
  415d84:	ldr	x0, [sp, #1664]
  415d88:	lsr	x0, x0, #63
  415d8c:	strb	w0, [sp, #1747]
  415d90:	ldr	x1, [sp, #1664]
  415d94:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  415d98:	movk	x0, #0x6667
  415d9c:	smulh	x0, x1, x0
  415da0:	asr	x2, x0, #2
  415da4:	asr	x0, x1, #63
  415da8:	sub	x2, x2, x0
  415dac:	mov	x0, x2
  415db0:	lsl	x0, x0, #2
  415db4:	add	x0, x0, x2
  415db8:	lsl	x0, x0, #1
  415dbc:	sub	x2, x1, x0
  415dc0:	mov	w0, w2
  415dc4:	str	w0, [sp, #1612]
  415dc8:	ldr	x0, [sp, #1664]
  415dcc:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  415dd0:	movk	x1, #0x6667
  415dd4:	smulh	x1, x0, x1
  415dd8:	asr	x1, x1, #2
  415ddc:	asr	x0, x0, #63
  415de0:	sub	x0, x1, x0
  415de4:	str	x0, [sp, #1664]
  415de8:	ldrb	w0, [sp, #1747]
  415dec:	cmp	w0, #0x0
  415df0:	b.eq	415e0c <__fxstatat@plt+0x132ac>  // b.none
  415df4:	ldr	w0, [sp, #1612]
  415df8:	and	w0, w0, #0xff
  415dfc:	mov	w1, #0x30                  	// #48
  415e00:	sub	w0, w1, w0
  415e04:	and	w0, w0, #0xff
  415e08:	b	415e1c <__fxstatat@plt+0x132bc>
  415e0c:	ldr	w0, [sp, #1612]
  415e10:	and	w0, w0, #0xff
  415e14:	add	w0, w0, #0x30
  415e18:	and	w0, w0, #0xff
  415e1c:	ldr	x1, [sp, #1720]
  415e20:	sub	x1, x1, #0x1
  415e24:	str	x1, [sp, #1720]
  415e28:	ldr	x1, [sp, #1720]
  415e2c:	strb	w0, [x1]
  415e30:	ldr	x0, [sp, #1664]
  415e34:	cmp	x0, #0x0
  415e38:	b.ne	415d90 <__fxstatat@plt+0x13230>  // b.any
  415e3c:	mov	w0, #0x1                   	// #1
  415e40:	str	w0, [sp, #1756]
  415e44:	strb	wzr, [sp, #1746]
  415e48:	b	4151e4 <__fxstatat@plt+0x12684>
  415e4c:	ldr	w0, [sp, #1760]
  415e50:	cmp	w0, #0x4f
  415e54:	b.ne	414cd0 <__fxstatat@plt+0x12170>  // b.any
  415e58:	b	4169d8 <__fxstatat@plt+0x13e78>
  415e5c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  415e60:	add	x0, x0, #0x418
  415e64:	str	x0, [sp, #1728]
  415e68:	b	414af0 <__fxstatat@plt+0x11f90>
  415e6c:	mov	x0, #0x1                   	// #1
  415e70:	str	x0, [sp, #1640]
  415e74:	ldr	w1, [sp, #52]
  415e78:	ldr	w0, [sp, #52]
  415e7c:	mov	w2, #0x0                   	// #0
  415e80:	cmp	w1, #0x0
  415e84:	csel	w0, w0, w2, ge  // ge = tcont
  415e88:	sxtw	x0, w0
  415e8c:	str	x0, [sp, #1632]
  415e90:	ldr	x0, [sp, #1632]
  415e94:	ldr	x2, [sp, #1640]
  415e98:	ldr	x1, [sp, #1640]
  415e9c:	cmp	x2, x0
  415ea0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  415ea4:	str	x0, [sp, #1624]
  415ea8:	ldr	x1, [sp, #80]
  415eac:	ldr	x0, [sp, #1784]
  415eb0:	sub	x0, x1, x0
  415eb4:	ldr	x1, [sp, #1624]
  415eb8:	cmp	x1, x0
  415ebc:	b.cc	415ec8 <__fxstatat@plt+0x13368>  // b.lo, b.ul, b.last
  415ec0:	mov	x0, #0x0                   	// #0
  415ec4:	b	416c14 <__fxstatat@plt+0x140b4>
  415ec8:	ldr	x0, [sp, #1776]
  415ecc:	cmp	x0, #0x0
  415ed0:	b.eq	415f78 <__fxstatat@plt+0x13418>  // b.none
  415ed4:	ldr	w0, [sp, #1756]
  415ed8:	cmp	w0, #0x0
  415edc:	b.ne	415f5c <__fxstatat@plt+0x133fc>  // b.any
  415ee0:	ldr	x1, [sp, #1640]
  415ee4:	ldr	x0, [sp, #1632]
  415ee8:	cmp	x1, x0
  415eec:	b.cs	415f5c <__fxstatat@plt+0x133fc>  // b.hs, b.nlast
  415ef0:	ldrsw	x1, [sp, #52]
  415ef4:	ldr	x0, [sp, #1640]
  415ef8:	sub	x0, x1, x0
  415efc:	str	x0, [sp, #1616]
  415f00:	ldr	w0, [sp, #1764]
  415f04:	cmp	w0, #0x30
  415f08:	b.eq	415f18 <__fxstatat@plt+0x133b8>  // b.none
  415f0c:	ldr	w0, [sp, #1764]
  415f10:	cmp	w0, #0x2b
  415f14:	b.ne	415f3c <__fxstatat@plt+0x133dc>  // b.any
  415f18:	ldr	x2, [sp, #1616]
  415f1c:	mov	w1, #0x30                  	// #48
  415f20:	ldr	x0, [sp, #1776]
  415f24:	bl	402740 <memset@plt>
  415f28:	ldr	x1, [sp, #1776]
  415f2c:	ldr	x0, [sp, #1616]
  415f30:	add	x0, x1, x0
  415f34:	str	x0, [sp, #1776]
  415f38:	b	415f5c <__fxstatat@plt+0x133fc>
  415f3c:	ldr	x2, [sp, #1616]
  415f40:	mov	w1, #0x20                  	// #32
  415f44:	ldr	x0, [sp, #1776]
  415f48:	bl	402740 <memset@plt>
  415f4c:	ldr	x1, [sp, #1776]
  415f50:	ldr	x0, [sp, #1616]
  415f54:	add	x0, x1, x0
  415f58:	str	x0, [sp, #1776]
  415f5c:	ldr	x0, [sp, #1776]
  415f60:	mov	w1, #0x9                   	// #9
  415f64:	strb	w1, [x0]
  415f68:	ldr	x1, [sp, #1776]
  415f6c:	ldr	x0, [sp, #1640]
  415f70:	add	x0, x1, x0
  415f74:	str	x0, [sp, #1776]
  415f78:	ldr	x1, [sp, #1784]
  415f7c:	ldr	x0, [sp, #1624]
  415f80:	add	x0, x1, x0
  415f84:	str	x0, [sp, #1784]
  415f88:	b	416bcc <__fxstatat@plt+0x1406c>
  415f8c:	mov	w0, #0x1                   	// #1
  415f90:	str	w0, [sp, #1756]
  415f94:	ldr	x0, [sp, #64]
  415f98:	ldr	w0, [x0, #24]
  415f9c:	add	w0, w0, #0x6
  415fa0:	mov	w1, #0x2493                	// #9363
  415fa4:	movk	w1, #0x9249, lsl #16
  415fa8:	smull	x1, w0, w1
  415fac:	lsr	x1, x1, #32
  415fb0:	add	w1, w0, w1
  415fb4:	asr	w2, w1, #2
  415fb8:	asr	w1, w0, #31
  415fbc:	sub	w2, w2, w1
  415fc0:	mov	w1, w2
  415fc4:	lsl	w1, w1, #3
  415fc8:	sub	w1, w1, w2
  415fcc:	sub	w2, w0, w1
  415fd0:	add	w0, w2, #0x1
  415fd4:	str	w0, [sp, #1752]
  415fd8:	b	4150cc <__fxstatat@plt+0x1256c>
  415fdc:	ldr	w0, [sp, #1760]
  415fe0:	cmp	w0, #0x45
  415fe4:	b.eq	4169a4 <__fxstatat@plt+0x13e44>  // b.none
  415fe8:	mov	w0, #0x2                   	// #2
  415fec:	str	w0, [sp, #1756]
  415ff0:	ldr	x0, [sp, #64]
  415ff4:	ldr	w1, [x0, #28]
  415ff8:	ldr	x0, [sp, #64]
  415ffc:	ldr	w0, [x0, #24]
  416000:	sub	w0, w1, w0
  416004:	add	w0, w0, #0x7
  416008:	mov	w1, #0x2493                	// #9363
  41600c:	movk	w1, #0x9249, lsl #16
  416010:	smull	x1, w0, w1
  416014:	lsr	x1, x1, #32
  416018:	add	w1, w0, w1
  41601c:	asr	w1, w1, #2
  416020:	asr	w0, w0, #31
  416024:	sub	w0, w1, w0
  416028:	str	w0, [sp, #1752]
  41602c:	b	4150cc <__fxstatat@plt+0x1256c>
  416030:	ldr	w0, [sp, #1760]
  416034:	cmp	w0, #0x45
  416038:	b.eq	4169ac <__fxstatat@plt+0x13e4c>  // b.none
  41603c:	ldr	x0, [sp, #64]
  416040:	ldr	w1, [x0, #20]
  416044:	ldr	x0, [sp, #64]
  416048:	ldr	w0, [x0, #20]
  41604c:	cmp	w0, #0x0
  416050:	b.ge	41605c <__fxstatat@plt+0x134fc>  // b.tcont
  416054:	mov	w0, #0x12c                 	// #300
  416058:	b	416060 <__fxstatat@plt+0x13500>
  41605c:	mov	w0, #0xffffff9c            	// #-100
  416060:	add	w0, w0, w1
  416064:	str	w0, [sp, #1540]
  416068:	str	wzr, [sp, #1660]
  41606c:	ldr	x0, [sp, #64]
  416070:	ldr	w2, [x0, #28]
  416074:	ldr	x0, [sp, #64]
  416078:	ldr	w0, [x0, #24]
  41607c:	mov	w1, w0
  416080:	mov	w0, w2
  416084:	bl	41446c <__fxstatat@plt+0x1190c>
  416088:	str	w0, [sp, #1656]
  41608c:	ldr	w0, [sp, #1656]
  416090:	cmp	w0, #0x0
  416094:	b.ge	41615c <__fxstatat@plt+0x135fc>  // b.tcont
  416098:	mov	w0, #0xffffffff            	// #-1
  41609c:	str	w0, [sp, #1660]
  4160a0:	ldr	x0, [sp, #64]
  4160a4:	ldr	w2, [x0, #28]
  4160a8:	ldr	w0, [sp, #1540]
  4160ac:	sub	w0, w0, #0x1
  4160b0:	and	w0, w0, #0x3
  4160b4:	cmp	w0, #0x0
  4160b8:	b.ne	416134 <__fxstatat@plt+0x135d4>  // b.any
  4160bc:	ldr	w0, [sp, #1540]
  4160c0:	sub	w1, w0, #0x1
  4160c4:	mov	w0, #0x851f                	// #34079
  4160c8:	movk	w0, #0x51eb, lsl #16
  4160cc:	smull	x0, w1, w0
  4160d0:	lsr	x0, x0, #32
  4160d4:	asr	w3, w0, #5
  4160d8:	asr	w0, w1, #31
  4160dc:	sub	w0, w3, w0
  4160e0:	mov	w3, #0x64                  	// #100
  4160e4:	mul	w0, w0, w3
  4160e8:	sub	w0, w1, w0
  4160ec:	cmp	w0, #0x0
  4160f0:	b.ne	41612c <__fxstatat@plt+0x135cc>  // b.any
  4160f4:	ldr	w0, [sp, #1540]
  4160f8:	sub	w1, w0, #0x1
  4160fc:	mov	w0, #0x851f                	// #34079
  416100:	movk	w0, #0x51eb, lsl #16
  416104:	smull	x0, w1, w0
  416108:	lsr	x0, x0, #32
  41610c:	asr	w3, w0, #7
  416110:	asr	w0, w1, #31
  416114:	sub	w0, w3, w0
  416118:	mov	w3, #0x190                 	// #400
  41611c:	mul	w0, w0, w3
  416120:	sub	w0, w1, w0
  416124:	cmp	w0, #0x0
  416128:	b.ne	416134 <__fxstatat@plt+0x135d4>  // b.any
  41612c:	mov	w0, #0x1                   	// #1
  416130:	b	416138 <__fxstatat@plt+0x135d8>
  416134:	mov	w0, #0x0                   	// #0
  416138:	add	w0, w0, #0x16d
  41613c:	add	w2, w2, w0
  416140:	ldr	x0, [sp, #64]
  416144:	ldr	w0, [x0, #24]
  416148:	mov	w1, w0
  41614c:	mov	w0, w2
  416150:	bl	41446c <__fxstatat@plt+0x1190c>
  416154:	str	w0, [sp, #1656]
  416158:	b	416224 <__fxstatat@plt+0x136c4>
  41615c:	ldr	x0, [sp, #64]
  416160:	ldr	w2, [x0, #28]
  416164:	ldr	w0, [sp, #1540]
  416168:	and	w0, w0, #0x3
  41616c:	cmp	w0, #0x0
  416170:	b.ne	4161e4 <__fxstatat@plt+0x13684>  // b.any
  416174:	ldr	w1, [sp, #1540]
  416178:	mov	w0, #0x851f                	// #34079
  41617c:	movk	w0, #0x51eb, lsl #16
  416180:	smull	x0, w1, w0
  416184:	lsr	x0, x0, #32
  416188:	asr	w3, w0, #5
  41618c:	asr	w0, w1, #31
  416190:	sub	w0, w3, w0
  416194:	mov	w3, #0x64                  	// #100
  416198:	mul	w0, w0, w3
  41619c:	sub	w0, w1, w0
  4161a0:	cmp	w0, #0x0
  4161a4:	b.ne	4161dc <__fxstatat@plt+0x1367c>  // b.any
  4161a8:	ldr	w1, [sp, #1540]
  4161ac:	mov	w0, #0x851f                	// #34079
  4161b0:	movk	w0, #0x51eb, lsl #16
  4161b4:	smull	x0, w1, w0
  4161b8:	lsr	x0, x0, #32
  4161bc:	asr	w3, w0, #7
  4161c0:	asr	w0, w1, #31
  4161c4:	sub	w0, w3, w0
  4161c8:	mov	w3, #0x190                 	// #400
  4161cc:	mul	w0, w0, w3
  4161d0:	sub	w0, w1, w0
  4161d4:	cmp	w0, #0x0
  4161d8:	b.ne	4161e4 <__fxstatat@plt+0x13684>  // b.any
  4161dc:	mov	w0, #0x1                   	// #1
  4161e0:	b	4161e8 <__fxstatat@plt+0x13688>
  4161e4:	mov	w0, #0x0                   	// #0
  4161e8:	add	w0, w0, #0x16d
  4161ec:	sub	w2, w2, w0
  4161f0:	ldr	x0, [sp, #64]
  4161f4:	ldr	w0, [x0, #24]
  4161f8:	mov	w1, w0
  4161fc:	mov	w0, w2
  416200:	bl	41446c <__fxstatat@plt+0x1190c>
  416204:	str	w0, [sp, #1536]
  416208:	ldr	w0, [sp, #1536]
  41620c:	cmp	w0, #0x0
  416210:	b.lt	416224 <__fxstatat@plt+0x136c4>  // b.tstop
  416214:	mov	w0, #0x1                   	// #1
  416218:	str	w0, [sp, #1660]
  41621c:	ldr	w0, [sp, #1536]
  416220:	str	w0, [sp, #1656]
  416224:	ldr	x0, [sp, #1768]
  416228:	ldrb	w0, [x0]
  41622c:	cmp	w0, #0x47
  416230:	b.eq	4162f8 <__fxstatat@plt+0x13798>  // b.none
  416234:	cmp	w0, #0x67
  416238:	b.ne	416340 <__fxstatat@plt+0x137e0>  // b.any
  41623c:	ldr	x0, [sp, #64]
  416240:	ldr	w1, [x0, #20]
  416244:	mov	w0, #0x851f                	// #34079
  416248:	movk	w0, #0x51eb, lsl #16
  41624c:	smull	x0, w1, w0
  416250:	lsr	x0, x0, #32
  416254:	asr	w2, w0, #5
  416258:	asr	w0, w1, #31
  41625c:	sub	w0, w2, w0
  416260:	mov	w2, #0x64                  	// #100
  416264:	mul	w0, w0, w2
  416268:	sub	w0, w1, w0
  41626c:	ldr	w1, [sp, #1660]
  416270:	add	w0, w0, w1
  416274:	mov	w1, #0x851f                	// #34079
  416278:	movk	w1, #0x51eb, lsl #16
  41627c:	smull	x1, w0, w1
  416280:	lsr	x1, x1, #32
  416284:	asr	w2, w1, #5
  416288:	asr	w1, w0, #31
  41628c:	sub	w2, w2, w1
  416290:	mov	w1, #0x64                  	// #100
  416294:	mul	w1, w2, w1
  416298:	sub	w0, w0, w1
  41629c:	str	w0, [sp, #1532]
  4162a0:	mov	w0, #0x2                   	// #2
  4162a4:	str	w0, [sp, #1756]
  4162a8:	strb	wzr, [sp, #1747]
  4162ac:	ldr	w0, [sp, #1532]
  4162b0:	cmp	w0, #0x0
  4162b4:	b.ge	4162ec <__fxstatat@plt+0x1378c>  // b.tcont
  4162b8:	ldr	x0, [sp, #64]
  4162bc:	ldr	w1, [x0, #20]
  4162c0:	mov	w2, #0xfffff894            	// #-1900
  4162c4:	ldr	w0, [sp, #1660]
  4162c8:	sub	w0, w2, w0
  4162cc:	cmp	w1, w0
  4162d0:	b.ge	4162e0 <__fxstatat@plt+0x13780>  // b.tcont
  4162d4:	ldr	w0, [sp, #1532]
  4162d8:	neg	w0, w0
  4162dc:	b	4162f0 <__fxstatat@plt+0x13790>
  4162e0:	ldr	w0, [sp, #1532]
  4162e4:	add	w0, w0, #0x64
  4162e8:	b	4162f0 <__fxstatat@plt+0x13790>
  4162ec:	ldr	w0, [sp, #1532]
  4162f0:	str	w0, [sp, #1748]
  4162f4:	b	41503c <__fxstatat@plt+0x124dc>
  4162f8:	mov	w0, #0x4                   	// #4
  4162fc:	str	w0, [sp, #1756]
  416300:	ldr	x0, [sp, #64]
  416304:	ldr	w1, [x0, #20]
  416308:	mov	w2, #0xfffff894            	// #-1900
  41630c:	ldr	w0, [sp, #1660]
  416310:	sub	w0, w2, w0
  416314:	cmp	w1, w0
  416318:	cset	w0, lt  // lt = tstop
  41631c:	strb	w0, [sp, #1747]
  416320:	ldr	x0, [sp, #64]
  416324:	ldr	w0, [x0, #20]
  416328:	mov	w1, w0
  41632c:	ldr	w0, [sp, #1660]
  416330:	add	w0, w1, w0
  416334:	add	w0, w0, #0x76c
  416338:	str	w0, [sp, #1748]
  41633c:	b	41503c <__fxstatat@plt+0x124dc>
  416340:	mov	w0, #0x2                   	// #2
  416344:	str	w0, [sp, #1756]
  416348:	ldr	w0, [sp, #1656]
  41634c:	mov	w1, #0x2493                	// #9363
  416350:	movk	w1, #0x9249, lsl #16
  416354:	smull	x1, w0, w1
  416358:	lsr	x1, x1, #32
  41635c:	add	w1, w0, w1
  416360:	asr	w1, w1, #2
  416364:	asr	w0, w0, #31
  416368:	sub	w0, w1, w0
  41636c:	add	w0, w0, #0x1
  416370:	str	w0, [sp, #1752]
  416374:	b	4150cc <__fxstatat@plt+0x1256c>
  416378:	ldr	w0, [sp, #1760]
  41637c:	cmp	w0, #0x45
  416380:	b.eq	4169b4 <__fxstatat@plt+0x13e54>  // b.none
  416384:	mov	w0, #0x2                   	// #2
  416388:	str	w0, [sp, #1756]
  41638c:	ldr	x0, [sp, #64]
  416390:	ldr	w3, [x0, #28]
  416394:	ldr	x0, [sp, #64]
  416398:	ldr	w0, [x0, #24]
  41639c:	add	w0, w0, #0x6
  4163a0:	mov	w1, #0x2493                	// #9363
  4163a4:	movk	w1, #0x9249, lsl #16
  4163a8:	smull	x1, w0, w1
  4163ac:	lsr	x1, x1, #32
  4163b0:	add	w1, w0, w1
  4163b4:	asr	w2, w1, #2
  4163b8:	asr	w1, w0, #31
  4163bc:	sub	w2, w2, w1
  4163c0:	mov	w1, w2
  4163c4:	lsl	w1, w1, #3
  4163c8:	sub	w1, w1, w2
  4163cc:	sub	w2, w0, w1
  4163d0:	sub	w0, w3, w2
  4163d4:	add	w0, w0, #0x7
  4163d8:	mov	w1, #0x2493                	// #9363
  4163dc:	movk	w1, #0x9249, lsl #16
  4163e0:	smull	x1, w0, w1
  4163e4:	lsr	x1, x1, #32
  4163e8:	add	w1, w0, w1
  4163ec:	asr	w1, w1, #2
  4163f0:	asr	w0, w0, #31
  4163f4:	sub	w0, w1, w0
  4163f8:	str	w0, [sp, #1752]
  4163fc:	b	4150cc <__fxstatat@plt+0x1256c>
  416400:	ldr	w0, [sp, #1760]
  416404:	cmp	w0, #0x45
  416408:	b.eq	4169bc <__fxstatat@plt+0x13e5c>  // b.none
  41640c:	mov	w0, #0x1                   	// #1
  416410:	str	w0, [sp, #1756]
  416414:	ldr	x0, [sp, #64]
  416418:	ldr	w0, [x0, #24]
  41641c:	str	w0, [sp, #1752]
  416420:	b	4150cc <__fxstatat@plt+0x1256c>
  416424:	ldr	w0, [sp, #1760]
  416428:	cmp	w0, #0x45
  41642c:	b.eq	414cd8 <__fxstatat@plt+0x12178>  // b.none
  416430:	ldr	w0, [sp, #1760]
  416434:	cmp	w0, #0x4f
  416438:	b.eq	4169c4 <__fxstatat@plt+0x13e64>  // b.none
  41643c:	mov	w0, #0x4                   	// #4
  416440:	str	w0, [sp, #1756]
  416444:	ldr	x0, [sp, #64]
  416448:	ldr	w0, [x0, #20]
  41644c:	cmn	w0, #0x76c
  416450:	cset	w0, lt  // lt = tstop
  416454:	strb	w0, [sp, #1747]
  416458:	ldr	x0, [sp, #64]
  41645c:	ldr	w0, [x0, #20]
  416460:	add	w0, w0, #0x76c
  416464:	str	w0, [sp, #1748]
  416468:	b	41503c <__fxstatat@plt+0x124dc>
  41646c:	ldr	w0, [sp, #1760]
  416470:	cmp	w0, #0x45
  416474:	b.eq	414ce0 <__fxstatat@plt+0x12180>  // b.none
  416478:	ldr	x0, [sp, #64]
  41647c:	ldr	w0, [x0, #20]
  416480:	mov	w1, #0x851f                	// #34079
  416484:	movk	w1, #0x51eb, lsl #16
  416488:	smull	x1, w0, w1
  41648c:	lsr	x1, x1, #32
  416490:	asr	w2, w1, #5
  416494:	asr	w1, w0, #31
  416498:	sub	w2, w2, w1
  41649c:	mov	w1, #0x64                  	// #100
  4164a0:	mul	w1, w2, w1
  4164a4:	sub	w0, w0, w1
  4164a8:	str	w0, [sp, #1652]
  4164ac:	ldr	w0, [sp, #1652]
  4164b0:	cmp	w0, #0x0
  4164b4:	b.ge	4164e0 <__fxstatat@plt+0x13980>  // b.tcont
  4164b8:	ldr	x0, [sp, #64]
  4164bc:	ldr	w0, [x0, #20]
  4164c0:	cmn	w0, #0x76c
  4164c4:	b.ge	4164d4 <__fxstatat@plt+0x13974>  // b.tcont
  4164c8:	ldr	w0, [sp, #1652]
  4164cc:	neg	w0, w0
  4164d0:	b	4164dc <__fxstatat@plt+0x1397c>
  4164d4:	ldr	w0, [sp, #1652]
  4164d8:	add	w0, w0, #0x64
  4164dc:	str	w0, [sp, #1652]
  4164e0:	mov	w0, #0x2                   	// #2
  4164e4:	str	w0, [sp, #1756]
  4164e8:	strb	wzr, [sp, #1747]
  4164ec:	ldr	w0, [sp, #1652]
  4164f0:	str	w0, [sp, #1748]
  4164f4:	b	41503c <__fxstatat@plt+0x124dc>
  4164f8:	ldrb	w0, [sp, #1703]
  4164fc:	cmp	w0, #0x0
  416500:	b.eq	416510 <__fxstatat@plt+0x139b0>  // b.none
  416504:	strb	wzr, [sp, #1718]
  416508:	mov	w0, #0x1                   	// #1
  41650c:	strb	w0, [sp, #1719]
  416510:	ldr	x0, [sp, #1792]
  416514:	bl	402500 <strlen@plt>
  416518:	str	x0, [sp, #1568]
  41651c:	ldr	w1, [sp, #52]
  416520:	ldr	w0, [sp, #52]
  416524:	mov	w2, #0x0                   	// #0
  416528:	cmp	w1, #0x0
  41652c:	csel	w0, w0, w2, ge  // ge = tcont
  416530:	sxtw	x0, w0
  416534:	str	x0, [sp, #1560]
  416538:	ldr	x0, [sp, #1560]
  41653c:	ldr	x2, [sp, #1568]
  416540:	ldr	x1, [sp, #1568]
  416544:	cmp	x2, x0
  416548:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41654c:	str	x0, [sp, #1552]
  416550:	ldr	x1, [sp, #80]
  416554:	ldr	x0, [sp, #1784]
  416558:	sub	x0, x1, x0
  41655c:	ldr	x1, [sp, #1552]
  416560:	cmp	x1, x0
  416564:	b.cc	416570 <__fxstatat@plt+0x13a10>  // b.lo, b.ul, b.last
  416568:	mov	x0, #0x0                   	// #0
  41656c:	b	416c14 <__fxstatat@plt+0x140b4>
  416570:	ldr	x0, [sp, #1776]
  416574:	cmp	x0, #0x0
  416578:	b.eq	416664 <__fxstatat@plt+0x13b04>  // b.none
  41657c:	ldr	w0, [sp, #1756]
  416580:	cmp	w0, #0x0
  416584:	b.ne	416604 <__fxstatat@plt+0x13aa4>  // b.any
  416588:	ldr	x1, [sp, #1568]
  41658c:	ldr	x0, [sp, #1560]
  416590:	cmp	x1, x0
  416594:	b.cs	416604 <__fxstatat@plt+0x13aa4>  // b.hs, b.nlast
  416598:	ldrsw	x1, [sp, #52]
  41659c:	ldr	x0, [sp, #1568]
  4165a0:	sub	x0, x1, x0
  4165a4:	str	x0, [sp, #1544]
  4165a8:	ldr	w0, [sp, #1764]
  4165ac:	cmp	w0, #0x30
  4165b0:	b.eq	4165c0 <__fxstatat@plt+0x13a60>  // b.none
  4165b4:	ldr	w0, [sp, #1764]
  4165b8:	cmp	w0, #0x2b
  4165bc:	b.ne	4165e4 <__fxstatat@plt+0x13a84>  // b.any
  4165c0:	ldr	x2, [sp, #1544]
  4165c4:	mov	w1, #0x30                  	// #48
  4165c8:	ldr	x0, [sp, #1776]
  4165cc:	bl	402740 <memset@plt>
  4165d0:	ldr	x1, [sp, #1776]
  4165d4:	ldr	x0, [sp, #1544]
  4165d8:	add	x0, x1, x0
  4165dc:	str	x0, [sp, #1776]
  4165e0:	b	416604 <__fxstatat@plt+0x13aa4>
  4165e4:	ldr	x2, [sp, #1544]
  4165e8:	mov	w1, #0x20                  	// #32
  4165ec:	ldr	x0, [sp, #1776]
  4165f0:	bl	402740 <memset@plt>
  4165f4:	ldr	x1, [sp, #1776]
  4165f8:	ldr	x0, [sp, #1544]
  4165fc:	add	x0, x1, x0
  416600:	str	x0, [sp, #1776]
  416604:	ldrb	w0, [sp, #1719]
  416608:	cmp	w0, #0x0
  41660c:	b.eq	416624 <__fxstatat@plt+0x13ac4>  // b.none
  416610:	ldr	x2, [sp, #1568]
  416614:	ldr	x1, [sp, #1792]
  416618:	ldr	x0, [sp, #1776]
  41661c:	bl	4143a4 <__fxstatat@plt+0x11844>
  416620:	b	416654 <__fxstatat@plt+0x13af4>
  416624:	ldrb	w0, [sp, #1718]
  416628:	cmp	w0, #0x0
  41662c:	b.eq	416644 <__fxstatat@plt+0x13ae4>  // b.none
  416630:	ldr	x2, [sp, #1568]
  416634:	ldr	x1, [sp, #1792]
  416638:	ldr	x0, [sp, #1776]
  41663c:	bl	414408 <__fxstatat@plt+0x118a8>
  416640:	b	416654 <__fxstatat@plt+0x13af4>
  416644:	ldr	x2, [sp, #1568]
  416648:	ldr	x1, [sp, #1792]
  41664c:	ldr	x0, [sp, #1776]
  416650:	bl	402490 <memcpy@plt>
  416654:	ldr	x1, [sp, #1776]
  416658:	ldr	x0, [sp, #1568]
  41665c:	add	x0, x1, x0
  416660:	str	x0, [sp, #1776]
  416664:	ldr	x1, [sp, #1784]
  416668:	ldr	x0, [sp, #1552]
  41666c:	add	x0, x1, x0
  416670:	str	x0, [sp, #1784]
  416674:	b	416bcc <__fxstatat@plt+0x1406c>
  416678:	mov	x0, #0x1                   	// #1
  41667c:	str	x0, [sp, #1704]
  416680:	b	416690 <__fxstatat@plt+0x13b30>
  416684:	ldr	x0, [sp, #1704]
  416688:	add	x0, x0, #0x1
  41668c:	str	x0, [sp, #1704]
  416690:	ldr	x1, [sp, #1768]
  416694:	ldr	x0, [sp, #1704]
  416698:	add	x0, x1, x0
  41669c:	ldrb	w0, [x0]
  4166a0:	cmp	w0, #0x3a
  4166a4:	b.eq	416684 <__fxstatat@plt+0x13b24>  // b.none
  4166a8:	ldr	x1, [sp, #1768]
  4166ac:	ldr	x0, [sp, #1704]
  4166b0:	add	x0, x1, x0
  4166b4:	ldrb	w0, [x0]
  4166b8:	cmp	w0, #0x7a
  4166bc:	b.ne	4169cc <__fxstatat@plt+0x13e6c>  // b.any
  4166c0:	ldr	x1, [sp, #1768]
  4166c4:	ldr	x0, [sp, #1704]
  4166c8:	add	x0, x1, x0
  4166cc:	str	x0, [sp, #1768]
  4166d0:	b	4166d8 <__fxstatat@plt+0x13b78>
  4166d4:	str	xzr, [sp, #1704]
  4166d8:	ldr	x0, [sp, #64]
  4166dc:	ldr	w0, [x0, #32]
  4166e0:	cmp	w0, #0x0
  4166e4:	b.lt	416bc8 <__fxstatat@plt+0x14068>  // b.tstop
  4166e8:	ldr	x0, [sp, #64]
  4166ec:	ldr	x0, [x0, #40]
  4166f0:	str	w0, [sp, #1480]
  4166f4:	ldr	w0, [sp, #1480]
  4166f8:	cmp	w0, #0x0
  4166fc:	b.lt	41671c <__fxstatat@plt+0x13bbc>  // b.tstop
  416700:	ldr	w0, [sp, #1480]
  416704:	cmp	w0, #0x0
  416708:	b.ne	416724 <__fxstatat@plt+0x13bc4>  // b.any
  41670c:	ldr	x0, [sp, #1792]
  416710:	ldrb	w0, [x0]
  416714:	cmp	w0, #0x2d
  416718:	b.ne	416724 <__fxstatat@plt+0x13bc4>  // b.any
  41671c:	mov	w0, #0x1                   	// #1
  416720:	b	416728 <__fxstatat@plt+0x13bc8>
  416724:	mov	w0, #0x0                   	// #0
  416728:	strb	w0, [sp, #1747]
  41672c:	ldrb	w0, [sp, #1747]
  416730:	and	w0, w0, #0x1
  416734:	strb	w0, [sp, #1747]
  416738:	ldr	w0, [sp, #1480]
  41673c:	mov	w1, #0xb3c5                	// #46021
  416740:	movk	w1, #0x91a2, lsl #16
  416744:	smull	x1, w0, w1
  416748:	lsr	x1, x1, #32
  41674c:	add	w1, w0, w1
  416750:	asr	w1, w1, #11
  416754:	asr	w0, w0, #31
  416758:	sub	w0, w1, w0
  41675c:	str	w0, [sp, #1476]
  416760:	ldr	w0, [sp, #1480]
  416764:	mov	w1, #0x8889                	// #34953
  416768:	movk	w1, #0x8888, lsl #16
  41676c:	smull	x1, w0, w1
  416770:	lsr	x1, x1, #32
  416774:	add	w1, w0, w1
  416778:	asr	w1, w1, #5
  41677c:	asr	w0, w0, #31
  416780:	sub	w1, w1, w0
  416784:	mov	w0, #0x8889                	// #34953
  416788:	movk	w0, #0x8888, lsl #16
  41678c:	smull	x0, w1, w0
  416790:	lsr	x0, x0, #32
  416794:	add	w0, w1, w0
  416798:	asr	w2, w0, #5
  41679c:	asr	w0, w1, #31
  4167a0:	sub	w2, w2, w0
  4167a4:	mov	w0, w2
  4167a8:	lsl	w0, w0, #4
  4167ac:	sub	w0, w0, w2
  4167b0:	lsl	w0, w0, #2
  4167b4:	sub	w0, w1, w0
  4167b8:	str	w0, [sp, #1472]
  4167bc:	ldr	w1, [sp, #1480]
  4167c0:	mov	w0, #0x8889                	// #34953
  4167c4:	movk	w0, #0x8888, lsl #16
  4167c8:	smull	x0, w1, w0
  4167cc:	lsr	x0, x0, #32
  4167d0:	add	w0, w1, w0
  4167d4:	asr	w2, w0, #5
  4167d8:	asr	w0, w1, #31
  4167dc:	sub	w2, w2, w0
  4167e0:	mov	w0, w2
  4167e4:	lsl	w0, w0, #4
  4167e8:	sub	w0, w0, w2
  4167ec:	lsl	w0, w0, #2
  4167f0:	sub	w0, w1, w0
  4167f4:	str	w0, [sp, #1468]
  4167f8:	ldr	x0, [sp, #1704]
  4167fc:	cmp	x0, #0x3
  416800:	b.eq	4168dc <__fxstatat@plt+0x13d7c>  // b.none
  416804:	ldr	x0, [sp, #1704]
  416808:	cmp	x0, #0x3
  41680c:	b.hi	4169d4 <__fxstatat@plt+0x13e74>  // b.pmore
  416810:	ldr	x0, [sp, #1704]
  416814:	cmp	x0, #0x2
  416818:	b.eq	4168a0 <__fxstatat@plt+0x13d40>  // b.none
  41681c:	ldr	x0, [sp, #1704]
  416820:	cmp	x0, #0x2
  416824:	b.hi	4169d4 <__fxstatat@plt+0x13e74>  // b.pmore
  416828:	ldr	x0, [sp, #1704]
  41682c:	cmp	x0, #0x0
  416830:	b.eq	416844 <__fxstatat@plt+0x13ce4>  // b.none
  416834:	ldr	x0, [sp, #1704]
  416838:	cmp	x0, #0x1
  41683c:	b.eq	416870 <__fxstatat@plt+0x13d10>  // b.none
  416840:	b	4169d4 <__fxstatat@plt+0x13e74>
  416844:	mov	w0, #0x5                   	// #5
  416848:	str	w0, [sp, #1756]
  41684c:	str	wzr, [sp, #1740]
  416850:	ldr	w1, [sp, #1476]
  416854:	mov	w0, #0x64                  	// #100
  416858:	mul	w1, w1, w0
  41685c:	ldr	w0, [sp, #1472]
  416860:	add	w0, w1, w0
  416864:	str	w0, [sp, #1748]
  416868:	b	415030 <__fxstatat@plt+0x124d0>
  41686c:	nop
  416870:	mov	w0, #0x6                   	// #6
  416874:	str	w0, [sp, #1756]
  416878:	mov	w0, #0x4                   	// #4
  41687c:	str	w0, [sp, #1740]
  416880:	ldr	w1, [sp, #1476]
  416884:	mov	w0, #0x64                  	// #100
  416888:	mul	w1, w1, w0
  41688c:	ldr	w0, [sp, #1472]
  416890:	add	w0, w1, w0
  416894:	str	w0, [sp, #1748]
  416898:	b	415030 <__fxstatat@plt+0x124d0>
  41689c:	nop
  4168a0:	mov	w0, #0x9                   	// #9
  4168a4:	str	w0, [sp, #1756]
  4168a8:	mov	w0, #0x14                  	// #20
  4168ac:	str	w0, [sp, #1740]
  4168b0:	ldr	w1, [sp, #1476]
  4168b4:	mov	w0, #0x2710                	// #10000
  4168b8:	mul	w1, w1, w0
  4168bc:	ldr	w2, [sp, #1472]
  4168c0:	mov	w0, #0x64                  	// #100
  4168c4:	mul	w0, w2, w0
  4168c8:	add	w1, w1, w0
  4168cc:	ldr	w0, [sp, #1468]
  4168d0:	add	w0, w1, w0
  4168d4:	str	w0, [sp, #1748]
  4168d8:	b	415030 <__fxstatat@plt+0x124d0>
  4168dc:	ldr	w0, [sp, #1468]
  4168e0:	cmp	w0, #0x0
  4168e4:	b.ne	41689c <__fxstatat@plt+0x13d3c>  // b.any
  4168e8:	ldr	w0, [sp, #1472]
  4168ec:	cmp	w0, #0x0
  4168f0:	b.ne	41686c <__fxstatat@plt+0x13d0c>  // b.any
  4168f4:	mov	w0, #0x3                   	// #3
  4168f8:	str	w0, [sp, #1756]
  4168fc:	str	wzr, [sp, #1740]
  416900:	ldr	w0, [sp, #1476]
  416904:	str	w0, [sp, #1748]
  416908:	b	415030 <__fxstatat@plt+0x124d0>
  41690c:	ldr	x0, [sp, #1768]
  416910:	sub	x0, x0, #0x1
  416914:	str	x0, [sp, #1768]
  416918:	b	4169d8 <__fxstatat@plt+0x13e78>
  41691c:	nop
  416920:	b	4169d8 <__fxstatat@plt+0x13e78>
  416924:	nop
  416928:	b	4169d8 <__fxstatat@plt+0x13e78>
  41692c:	nop
  416930:	b	4169d8 <__fxstatat@plt+0x13e78>
  416934:	nop
  416938:	b	4169d8 <__fxstatat@plt+0x13e78>
  41693c:	nop
  416940:	b	4169d8 <__fxstatat@plt+0x13e78>
  416944:	nop
  416948:	b	4169d8 <__fxstatat@plt+0x13e78>
  41694c:	nop
  416950:	b	4169d8 <__fxstatat@plt+0x13e78>
  416954:	nop
  416958:	b	4169d8 <__fxstatat@plt+0x13e78>
  41695c:	nop
  416960:	b	4169d8 <__fxstatat@plt+0x13e78>
  416964:	nop
  416968:	b	4169d8 <__fxstatat@plt+0x13e78>
  41696c:	nop
  416970:	b	4169d8 <__fxstatat@plt+0x13e78>
  416974:	nop
  416978:	b	4169d8 <__fxstatat@plt+0x13e78>
  41697c:	nop
  416980:	b	4169d8 <__fxstatat@plt+0x13e78>
  416984:	nop
  416988:	b	4169d8 <__fxstatat@plt+0x13e78>
  41698c:	nop
  416990:	b	4169d8 <__fxstatat@plt+0x13e78>
  416994:	nop
  416998:	b	4169d8 <__fxstatat@plt+0x13e78>
  41699c:	nop
  4169a0:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169a4:	nop
  4169a8:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169ac:	nop
  4169b0:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169b4:	nop
  4169b8:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169bc:	nop
  4169c0:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169c4:	nop
  4169c8:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169cc:	nop
  4169d0:	b	4169d8 <__fxstatat@plt+0x13e78>
  4169d4:	nop
  4169d8:	mov	w0, #0x1                   	// #1
  4169dc:	str	w0, [sp, #1648]
  4169e0:	b	4169f0 <__fxstatat@plt+0x13e90>
  4169e4:	ldr	w0, [sp, #1648]
  4169e8:	add	w0, w0, #0x1
  4169ec:	str	w0, [sp, #1648]
  4169f0:	mov	w1, #0x1                   	// #1
  4169f4:	ldr	w0, [sp, #1648]
  4169f8:	sub	w0, w1, w0
  4169fc:	sxtw	x0, w0
  416a00:	ldr	x1, [sp, #1768]
  416a04:	add	x0, x1, x0
  416a08:	ldrb	w0, [x0]
  416a0c:	cmp	w0, #0x25
  416a10:	b.ne	4169e4 <__fxstatat@plt+0x13e84>  // b.any
  416a14:	ldrsw	x0, [sp, #1648]
  416a18:	str	x0, [sp, #1216]
  416a1c:	ldr	w1, [sp, #52]
  416a20:	ldr	w0, [sp, #52]
  416a24:	mov	w2, #0x0                   	// #0
  416a28:	cmp	w1, #0x0
  416a2c:	csel	w0, w0, w2, ge  // ge = tcont
  416a30:	sxtw	x0, w0
  416a34:	str	x0, [sp, #1208]
  416a38:	ldr	x0, [sp, #1208]
  416a3c:	ldr	x2, [sp, #1216]
  416a40:	ldr	x1, [sp, #1216]
  416a44:	cmp	x2, x0
  416a48:	csel	x0, x1, x0, cs  // cs = hs, nlast
  416a4c:	str	x0, [sp, #1200]
  416a50:	ldr	x1, [sp, #80]
  416a54:	ldr	x0, [sp, #1784]
  416a58:	sub	x0, x1, x0
  416a5c:	ldr	x1, [sp, #1200]
  416a60:	cmp	x1, x0
  416a64:	b.cc	416a70 <__fxstatat@plt+0x13f10>  // b.lo, b.ul, b.last
  416a68:	mov	x0, #0x0                   	// #0
  416a6c:	b	416c14 <__fxstatat@plt+0x140b4>
  416a70:	ldr	x0, [sp, #1776]
  416a74:	cmp	x0, #0x0
  416a78:	b.eq	416bac <__fxstatat@plt+0x1404c>  // b.none
  416a7c:	ldr	w0, [sp, #1756]
  416a80:	cmp	w0, #0x0
  416a84:	b.ne	416b04 <__fxstatat@plt+0x13fa4>  // b.any
  416a88:	ldr	x1, [sp, #1216]
  416a8c:	ldr	x0, [sp, #1208]
  416a90:	cmp	x1, x0
  416a94:	b.cs	416b04 <__fxstatat@plt+0x13fa4>  // b.hs, b.nlast
  416a98:	ldrsw	x1, [sp, #52]
  416a9c:	ldr	x0, [sp, #1216]
  416aa0:	sub	x0, x1, x0
  416aa4:	str	x0, [sp, #1192]
  416aa8:	ldr	w0, [sp, #1764]
  416aac:	cmp	w0, #0x30
  416ab0:	b.eq	416ac0 <__fxstatat@plt+0x13f60>  // b.none
  416ab4:	ldr	w0, [sp, #1764]
  416ab8:	cmp	w0, #0x2b
  416abc:	b.ne	416ae4 <__fxstatat@plt+0x13f84>  // b.any
  416ac0:	ldr	x2, [sp, #1192]
  416ac4:	mov	w1, #0x30                  	// #48
  416ac8:	ldr	x0, [sp, #1776]
  416acc:	bl	402740 <memset@plt>
  416ad0:	ldr	x1, [sp, #1776]
  416ad4:	ldr	x0, [sp, #1192]
  416ad8:	add	x0, x1, x0
  416adc:	str	x0, [sp, #1776]
  416ae0:	b	416b04 <__fxstatat@plt+0x13fa4>
  416ae4:	ldr	x2, [sp, #1192]
  416ae8:	mov	w1, #0x20                  	// #32
  416aec:	ldr	x0, [sp, #1776]
  416af0:	bl	402740 <memset@plt>
  416af4:	ldr	x1, [sp, #1776]
  416af8:	ldr	x0, [sp, #1192]
  416afc:	add	x0, x1, x0
  416b00:	str	x0, [sp, #1776]
  416b04:	ldrb	w0, [sp, #1719]
  416b08:	cmp	w0, #0x0
  416b0c:	b.eq	416b3c <__fxstatat@plt+0x13fdc>  // b.none
  416b10:	mov	w1, #0x1                   	// #1
  416b14:	ldr	w0, [sp, #1648]
  416b18:	sub	w0, w1, w0
  416b1c:	sxtw	x0, w0
  416b20:	ldr	x1, [sp, #1768]
  416b24:	add	x0, x1, x0
  416b28:	ldr	x2, [sp, #1216]
  416b2c:	mov	x1, x0
  416b30:	ldr	x0, [sp, #1776]
  416b34:	bl	4143a4 <__fxstatat@plt+0x11844>
  416b38:	b	416b9c <__fxstatat@plt+0x1403c>
  416b3c:	ldrb	w0, [sp, #1718]
  416b40:	cmp	w0, #0x0
  416b44:	b.eq	416b74 <__fxstatat@plt+0x14014>  // b.none
  416b48:	mov	w1, #0x1                   	// #1
  416b4c:	ldr	w0, [sp, #1648]
  416b50:	sub	w0, w1, w0
  416b54:	sxtw	x0, w0
  416b58:	ldr	x1, [sp, #1768]
  416b5c:	add	x0, x1, x0
  416b60:	ldr	x2, [sp, #1216]
  416b64:	mov	x1, x0
  416b68:	ldr	x0, [sp, #1776]
  416b6c:	bl	414408 <__fxstatat@plt+0x118a8>
  416b70:	b	416b9c <__fxstatat@plt+0x1403c>
  416b74:	mov	w1, #0x1                   	// #1
  416b78:	ldr	w0, [sp, #1648]
  416b7c:	sub	w0, w1, w0
  416b80:	sxtw	x0, w0
  416b84:	ldr	x1, [sp, #1768]
  416b88:	add	x0, x1, x0
  416b8c:	ldr	x2, [sp, #1216]
  416b90:	mov	x1, x0
  416b94:	ldr	x0, [sp, #1776]
  416b98:	bl	402490 <memcpy@plt>
  416b9c:	ldr	x1, [sp, #1776]
  416ba0:	ldr	x0, [sp, #1216]
  416ba4:	add	x0, x1, x0
  416ba8:	str	x0, [sp, #1776]
  416bac:	ldr	x1, [sp, #1784]
  416bb0:	ldr	x0, [sp, #1200]
  416bb4:	add	x0, x1, x0
  416bb8:	str	x0, [sp, #1784]
  416bbc:	b	416bcc <__fxstatat@plt+0x1406c>
  416bc0:	nop
  416bc4:	b	416bcc <__fxstatat@plt+0x1406c>
  416bc8:	nop
  416bcc:	mov	w0, #0xffffffff            	// #-1
  416bd0:	str	w0, [sp, #52]
  416bd4:	ldr	x0, [sp, #1768]
  416bd8:	add	x0, x0, #0x1
  416bdc:	str	x0, [sp, #1768]
  416be0:	ldr	x0, [sp, #1768]
  416be4:	ldrb	w0, [x0]
  416be8:	cmp	w0, #0x0
  416bec:	b.ne	4145f0 <__fxstatat@plt+0x11a90>  // b.any
  416bf0:	ldr	x0, [sp, #1776]
  416bf4:	cmp	x0, #0x0
  416bf8:	b.eq	416c10 <__fxstatat@plt+0x140b0>  // b.none
  416bfc:	ldr	x0, [sp, #80]
  416c00:	cmp	x0, #0x0
  416c04:	b.eq	416c10 <__fxstatat@plt+0x140b0>  // b.none
  416c08:	ldr	x0, [sp, #1776]
  416c0c:	strb	wzr, [x0]
  416c10:	ldr	x0, [sp, #1784]
  416c14:	ldp	x29, x30, [sp, #16]
  416c18:	add	sp, sp, #0x710
  416c1c:	ret
  416c20:	stp	x29, x30, [sp, #-48]!
  416c24:	mov	x29, sp
  416c28:	str	x0, [sp, #24]
  416c2c:	ldr	x0, [sp, #24]
  416c30:	cmp	x0, #0x0
  416c34:	b.ne	416c60 <__fxstatat@plt+0x14100>  // b.any
  416c38:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  416c3c:	add	x0, x0, #0x5e0
  416c40:	ldr	x0, [x0]
  416c44:	mov	x3, x0
  416c48:	mov	x2, #0x37                  	// #55
  416c4c:	mov	x1, #0x1                   	// #1
  416c50:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  416c54:	add	x0, x0, #0x610
  416c58:	bl	402940 <fwrite@plt>
  416c5c:	bl	402820 <abort@plt>
  416c60:	mov	w1, #0x2f                  	// #47
  416c64:	ldr	x0, [sp, #24]
  416c68:	bl	4027d0 <strrchr@plt>
  416c6c:	str	x0, [sp, #40]
  416c70:	ldr	x0, [sp, #40]
  416c74:	cmp	x0, #0x0
  416c78:	b.eq	416c88 <__fxstatat@plt+0x14128>  // b.none
  416c7c:	ldr	x0, [sp, #40]
  416c80:	add	x0, x0, #0x1
  416c84:	b	416c8c <__fxstatat@plt+0x1412c>
  416c88:	ldr	x0, [sp, #24]
  416c8c:	str	x0, [sp, #32]
  416c90:	ldr	x1, [sp, #32]
  416c94:	ldr	x0, [sp, #24]
  416c98:	sub	x0, x1, x0
  416c9c:	cmp	x0, #0x6
  416ca0:	b.le	416d08 <__fxstatat@plt+0x141a8>
  416ca4:	ldr	x0, [sp, #32]
  416ca8:	sub	x3, x0, #0x7
  416cac:	mov	x2, #0x7                   	// #7
  416cb0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  416cb4:	add	x1, x0, #0x648
  416cb8:	mov	x0, x3
  416cbc:	bl	402710 <strncmp@plt>
  416cc0:	cmp	w0, #0x0
  416cc4:	b.ne	416d08 <__fxstatat@plt+0x141a8>  // b.any
  416cc8:	ldr	x0, [sp, #32]
  416ccc:	str	x0, [sp, #24]
  416cd0:	mov	x2, #0x3                   	// #3
  416cd4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  416cd8:	add	x1, x0, #0x650
  416cdc:	ldr	x0, [sp, #32]
  416ce0:	bl	402710 <strncmp@plt>
  416ce4:	cmp	w0, #0x0
  416ce8:	b.ne	416d08 <__fxstatat@plt+0x141a8>  // b.any
  416cec:	ldr	x0, [sp, #32]
  416cf0:	add	x0, x0, #0x3
  416cf4:	str	x0, [sp, #24]
  416cf8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  416cfc:	add	x0, x0, #0x600
  416d00:	ldr	x1, [sp, #24]
  416d04:	str	x1, [x0]
  416d08:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416d0c:	add	x0, x0, #0x778
  416d10:	ldr	x1, [sp, #24]
  416d14:	str	x1, [x0]
  416d18:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  416d1c:	add	x0, x0, #0x5d8
  416d20:	ldr	x1, [sp, #24]
  416d24:	str	x1, [x0]
  416d28:	nop
  416d2c:	ldp	x29, x30, [sp], #48
  416d30:	ret
  416d34:	stp	x29, x30, [sp, #-48]!
  416d38:	mov	x29, sp
  416d3c:	str	x0, [sp, #24]
  416d40:	bl	402ac0 <__errno_location@plt>
  416d44:	ldr	w0, [x0]
  416d48:	str	w0, [sp, #44]
  416d4c:	ldr	x0, [sp, #24]
  416d50:	cmp	x0, #0x0
  416d54:	b.eq	416d60 <__fxstatat@plt+0x14200>  // b.none
  416d58:	ldr	x0, [sp, #24]
  416d5c:	b	416d68 <__fxstatat@plt+0x14208>
  416d60:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416d64:	add	x0, x0, #0x780
  416d68:	mov	x1, #0x38                  	// #56
  416d6c:	bl	41a208 <__fxstatat@plt+0x176a8>
  416d70:	str	x0, [sp, #32]
  416d74:	bl	402ac0 <__errno_location@plt>
  416d78:	mov	x1, x0
  416d7c:	ldr	w0, [sp, #44]
  416d80:	str	w0, [x1]
  416d84:	ldr	x0, [sp, #32]
  416d88:	ldp	x29, x30, [sp], #48
  416d8c:	ret
  416d90:	sub	sp, sp, #0x10
  416d94:	str	x0, [sp, #8]
  416d98:	ldr	x0, [sp, #8]
  416d9c:	cmp	x0, #0x0
  416da0:	b.eq	416dac <__fxstatat@plt+0x1424c>  // b.none
  416da4:	ldr	x0, [sp, #8]
  416da8:	b	416db4 <__fxstatat@plt+0x14254>
  416dac:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416db0:	add	x0, x0, #0x780
  416db4:	ldr	w0, [x0]
  416db8:	add	sp, sp, #0x10
  416dbc:	ret
  416dc0:	sub	sp, sp, #0x10
  416dc4:	str	x0, [sp, #8]
  416dc8:	str	w1, [sp, #4]
  416dcc:	ldr	x0, [sp, #8]
  416dd0:	cmp	x0, #0x0
  416dd4:	b.eq	416de0 <__fxstatat@plt+0x14280>  // b.none
  416dd8:	ldr	x0, [sp, #8]
  416ddc:	b	416de8 <__fxstatat@plt+0x14288>
  416de0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416de4:	add	x0, x0, #0x780
  416de8:	ldr	w1, [sp, #4]
  416dec:	str	w1, [x0]
  416df0:	nop
  416df4:	add	sp, sp, #0x10
  416df8:	ret
  416dfc:	sub	sp, sp, #0x30
  416e00:	str	x0, [sp, #8]
  416e04:	strb	w1, [sp, #7]
  416e08:	str	w2, [sp]
  416e0c:	ldrb	w0, [sp, #7]
  416e10:	strb	w0, [sp, #47]
  416e14:	ldr	x0, [sp, #8]
  416e18:	cmp	x0, #0x0
  416e1c:	b.eq	416e28 <__fxstatat@plt+0x142c8>  // b.none
  416e20:	ldr	x0, [sp, #8]
  416e24:	b	416e30 <__fxstatat@plt+0x142d0>
  416e28:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416e2c:	add	x0, x0, #0x780
  416e30:	add	x1, x0, #0x8
  416e34:	ldrb	w0, [sp, #47]
  416e38:	lsr	w0, w0, #5
  416e3c:	and	w0, w0, #0xff
  416e40:	and	x0, x0, #0xff
  416e44:	lsl	x0, x0, #2
  416e48:	add	x0, x1, x0
  416e4c:	str	x0, [sp, #32]
  416e50:	ldrb	w0, [sp, #47]
  416e54:	and	w0, w0, #0x1f
  416e58:	str	w0, [sp, #28]
  416e5c:	ldr	x0, [sp, #32]
  416e60:	ldr	w1, [x0]
  416e64:	ldr	w0, [sp, #28]
  416e68:	lsr	w0, w1, w0
  416e6c:	and	w0, w0, #0x1
  416e70:	str	w0, [sp, #24]
  416e74:	ldr	x0, [sp, #32]
  416e78:	ldr	w0, [x0]
  416e7c:	ldr	w1, [sp]
  416e80:	and	w2, w1, #0x1
  416e84:	ldr	w1, [sp, #24]
  416e88:	eor	w2, w2, w1
  416e8c:	ldr	w1, [sp, #28]
  416e90:	lsl	w1, w2, w1
  416e94:	eor	w1, w0, w1
  416e98:	ldr	x0, [sp, #32]
  416e9c:	str	w1, [x0]
  416ea0:	ldr	w0, [sp, #24]
  416ea4:	add	sp, sp, #0x30
  416ea8:	ret
  416eac:	sub	sp, sp, #0x20
  416eb0:	str	x0, [sp, #8]
  416eb4:	str	w1, [sp, #4]
  416eb8:	ldr	x0, [sp, #8]
  416ebc:	cmp	x0, #0x0
  416ec0:	b.ne	416ed0 <__fxstatat@plt+0x14370>  // b.any
  416ec4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416ec8:	add	x0, x0, #0x780
  416ecc:	str	x0, [sp, #8]
  416ed0:	ldr	x0, [sp, #8]
  416ed4:	ldr	w0, [x0, #4]
  416ed8:	str	w0, [sp, #28]
  416edc:	ldr	x0, [sp, #8]
  416ee0:	ldr	w1, [sp, #4]
  416ee4:	str	w1, [x0, #4]
  416ee8:	ldr	w0, [sp, #28]
  416eec:	add	sp, sp, #0x20
  416ef0:	ret
  416ef4:	stp	x29, x30, [sp, #-48]!
  416ef8:	mov	x29, sp
  416efc:	str	x0, [sp, #40]
  416f00:	str	x1, [sp, #32]
  416f04:	str	x2, [sp, #24]
  416f08:	ldr	x0, [sp, #40]
  416f0c:	cmp	x0, #0x0
  416f10:	b.ne	416f20 <__fxstatat@plt+0x143c0>  // b.any
  416f14:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  416f18:	add	x0, x0, #0x780
  416f1c:	str	x0, [sp, #40]
  416f20:	ldr	x0, [sp, #40]
  416f24:	mov	w1, #0xa                   	// #10
  416f28:	str	w1, [x0]
  416f2c:	ldr	x0, [sp, #32]
  416f30:	cmp	x0, #0x0
  416f34:	b.eq	416f44 <__fxstatat@plt+0x143e4>  // b.none
  416f38:	ldr	x0, [sp, #24]
  416f3c:	cmp	x0, #0x0
  416f40:	b.ne	416f48 <__fxstatat@plt+0x143e8>  // b.any
  416f44:	bl	402820 <abort@plt>
  416f48:	ldr	x0, [sp, #40]
  416f4c:	ldr	x1, [sp, #32]
  416f50:	str	x1, [x0, #40]
  416f54:	ldr	x0, [sp, #40]
  416f58:	ldr	x1, [sp, #24]
  416f5c:	str	x1, [x0, #48]
  416f60:	nop
  416f64:	ldp	x29, x30, [sp], #48
  416f68:	ret
  416f6c:	stp	x29, x30, [sp, #-96]!
  416f70:	mov	x29, sp
  416f74:	mov	x1, x8
  416f78:	str	w0, [sp, #28]
  416f7c:	stp	xzr, xzr, [sp, #40]
  416f80:	stp	xzr, xzr, [sp, #56]
  416f84:	stp	xzr, xzr, [sp, #72]
  416f88:	str	xzr, [sp, #88]
  416f8c:	ldr	w0, [sp, #28]
  416f90:	cmp	w0, #0xa
  416f94:	b.ne	416f9c <__fxstatat@plt+0x1443c>  // b.any
  416f98:	bl	402820 <abort@plt>
  416f9c:	ldr	w0, [sp, #28]
  416fa0:	str	w0, [sp, #40]
  416fa4:	add	x0, sp, #0x28
  416fa8:	ldp	x2, x3, [x0]
  416fac:	stp	x2, x3, [x1]
  416fb0:	ldp	x2, x3, [x0, #16]
  416fb4:	stp	x2, x3, [x1, #16]
  416fb8:	ldp	x2, x3, [x0, #32]
  416fbc:	stp	x2, x3, [x1, #32]
  416fc0:	ldr	x0, [x0, #48]
  416fc4:	str	x0, [x1, #48]
  416fc8:	ldp	x29, x30, [sp], #96
  416fcc:	ret
  416fd0:	stp	x29, x30, [sp, #-48]!
  416fd4:	mov	x29, sp
  416fd8:	str	x0, [sp, #24]
  416fdc:	str	w1, [sp, #20]
  416fe0:	ldr	x0, [sp, #24]
  416fe4:	bl	402b20 <gettext@plt>
  416fe8:	str	x0, [sp, #40]
  416fec:	ldr	x1, [sp, #40]
  416ff0:	ldr	x0, [sp, #24]
  416ff4:	cmp	x1, x0
  416ff8:	b.eq	417004 <__fxstatat@plt+0x144a4>  // b.none
  416ffc:	ldr	x0, [sp, #40]
  417000:	b	4170ac <__fxstatat@plt+0x1454c>
  417004:	bl	41c7d4 <_obstack_memory_used@@Base+0xd84>
  417008:	str	x0, [sp, #32]
  41700c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417010:	add	x1, x0, #0x748
  417014:	ldr	x0, [sp, #32]
  417018:	bl	41c5f8 <_obstack_memory_used@@Base+0xba8>
  41701c:	cmp	w0, #0x0
  417020:	b.ne	41704c <__fxstatat@plt+0x144ec>  // b.any
  417024:	ldr	x0, [sp, #24]
  417028:	ldrb	w0, [x0]
  41702c:	cmp	w0, #0x60
  417030:	b.ne	417040 <__fxstatat@plt+0x144e0>  // b.any
  417034:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417038:	add	x0, x0, #0x750
  41703c:	b	4170ac <__fxstatat@plt+0x1454c>
  417040:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417044:	add	x0, x0, #0x758
  417048:	b	4170ac <__fxstatat@plt+0x1454c>
  41704c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417050:	add	x1, x0, #0x760
  417054:	ldr	x0, [sp, #32]
  417058:	bl	41c5f8 <_obstack_memory_used@@Base+0xba8>
  41705c:	cmp	w0, #0x0
  417060:	b.ne	41708c <__fxstatat@plt+0x1452c>  // b.any
  417064:	ldr	x0, [sp, #24]
  417068:	ldrb	w0, [x0]
  41706c:	cmp	w0, #0x60
  417070:	b.ne	417080 <__fxstatat@plt+0x14520>  // b.any
  417074:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417078:	add	x0, x0, #0x768
  41707c:	b	4170ac <__fxstatat@plt+0x1454c>
  417080:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417084:	add	x0, x0, #0x770
  417088:	b	4170ac <__fxstatat@plt+0x1454c>
  41708c:	ldr	w0, [sp, #20]
  417090:	cmp	w0, #0x9
  417094:	b.ne	4170a4 <__fxstatat@plt+0x14544>  // b.any
  417098:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41709c:	add	x0, x0, #0x778
  4170a0:	b	4170ac <__fxstatat@plt+0x1454c>
  4170a4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4170a8:	add	x0, x0, #0x780
  4170ac:	ldp	x29, x30, [sp], #48
  4170b0:	ret
  4170b4:	sub	sp, sp, #0xf0
  4170b8:	stp	x29, x30, [sp, #16]
  4170bc:	add	x29, sp, #0x10
  4170c0:	str	x19, [sp, #32]
  4170c4:	str	x0, [sp, #104]
  4170c8:	str	x1, [sp, #96]
  4170cc:	str	x2, [sp, #88]
  4170d0:	str	x3, [sp, #80]
  4170d4:	str	w4, [sp, #76]
  4170d8:	str	w5, [sp, #72]
  4170dc:	str	x6, [sp, #64]
  4170e0:	str	x7, [sp, #56]
  4170e4:	str	xzr, [sp, #224]
  4170e8:	str	xzr, [sp, #216]
  4170ec:	str	xzr, [sp, #208]
  4170f0:	str	xzr, [sp, #200]
  4170f4:	strb	wzr, [sp, #199]
  4170f8:	bl	402900 <__ctype_get_mb_cur_max@plt>
  4170fc:	cmp	x0, #0x1
  417100:	cset	w0, eq  // eq = none
  417104:	strb	w0, [sp, #159]
  417108:	ldr	w0, [sp, #72]
  41710c:	and	w0, w0, #0x2
  417110:	cmp	w0, #0x0
  417114:	cset	w0, ne  // ne = any
  417118:	strb	w0, [sp, #198]
  41711c:	strb	wzr, [sp, #197]
  417120:	strb	wzr, [sp, #196]
  417124:	mov	w0, #0x1                   	// #1
  417128:	strb	w0, [sp, #195]
  41712c:	ldr	w0, [sp, #76]
  417130:	cmp	w0, #0xa
  417134:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  417138:	ldr	w0, [sp, #76]
  41713c:	cmp	w0, #0x8
  417140:	b.cs	417274 <__fxstatat@plt+0x14714>  // b.hs, b.nlast
  417144:	ldr	w0, [sp, #76]
  417148:	cmp	w0, #0x7
  41714c:	b.eq	417264 <__fxstatat@plt+0x14704>  // b.none
  417150:	ldr	w0, [sp, #76]
  417154:	cmp	w0, #0x7
  417158:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  41715c:	ldr	w0, [sp, #76]
  417160:	cmp	w0, #0x6
  417164:	b.eq	4171f0 <__fxstatat@plt+0x14690>  // b.none
  417168:	ldr	w0, [sp, #76]
  41716c:	cmp	w0, #0x6
  417170:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  417174:	ldr	w0, [sp, #76]
  417178:	cmp	w0, #0x5
  41717c:	b.eq	417200 <__fxstatat@plt+0x146a0>  // b.none
  417180:	ldr	w0, [sp, #76]
  417184:	cmp	w0, #0x5
  417188:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  41718c:	ldr	w0, [sp, #76]
  417190:	cmp	w0, #0x4
  417194:	b.eq	417348 <__fxstatat@plt+0x147e8>  // b.none
  417198:	ldr	w0, [sp, #76]
  41719c:	cmp	w0, #0x4
  4171a0:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  4171a4:	ldr	w0, [sp, #76]
  4171a8:	cmp	w0, #0x3
  4171ac:	b.eq	417338 <__fxstatat@plt+0x147d8>  // b.none
  4171b0:	ldr	w0, [sp, #76]
  4171b4:	cmp	w0, #0x3
  4171b8:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  4171bc:	ldr	w0, [sp, #76]
  4171c0:	cmp	w0, #0x2
  4171c4:	b.eq	417364 <__fxstatat@plt+0x14804>  // b.none
  4171c8:	ldr	w0, [sp, #76]
  4171cc:	cmp	w0, #0x2
  4171d0:	b.hi	4173d0 <__fxstatat@plt+0x14870>  // b.pmore
  4171d4:	ldr	w0, [sp, #76]
  4171d8:	cmp	w0, #0x0
  4171dc:	b.eq	4173c8 <__fxstatat@plt+0x14868>  // b.none
  4171e0:	ldr	w0, [sp, #76]
  4171e4:	cmp	w0, #0x1
  4171e8:	b.eq	417340 <__fxstatat@plt+0x147e0>  // b.none
  4171ec:	b	4173d0 <__fxstatat@plt+0x14870>
  4171f0:	mov	w0, #0x5                   	// #5
  4171f4:	str	w0, [sp, #76]
  4171f8:	mov	w0, #0x1                   	// #1
  4171fc:	strb	w0, [sp, #198]
  417200:	ldrb	w0, [sp, #198]
  417204:	eor	w0, w0, #0x1
  417208:	and	w0, w0, #0xff
  41720c:	cmp	w0, #0x0
  417210:	b.eq	417244 <__fxstatat@plt+0x146e4>  // b.none
  417214:	ldr	x1, [sp, #224]
  417218:	ldr	x0, [sp, #96]
  41721c:	cmp	x1, x0
  417220:	b.cs	417238 <__fxstatat@plt+0x146d8>  // b.hs, b.nlast
  417224:	ldr	x1, [sp, #104]
  417228:	ldr	x0, [sp, #224]
  41722c:	add	x0, x1, x0
  417230:	mov	w1, #0x22                  	// #34
  417234:	strb	w1, [x0]
  417238:	ldr	x0, [sp, #224]
  41723c:	add	x0, x0, #0x1
  417240:	str	x0, [sp, #224]
  417244:	mov	w0, #0x1                   	// #1
  417248:	strb	w0, [sp, #199]
  41724c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417250:	add	x0, x0, #0x778
  417254:	str	x0, [sp, #208]
  417258:	mov	x0, #0x1                   	// #1
  41725c:	str	x0, [sp, #200]
  417260:	b	4173d4 <__fxstatat@plt+0x14874>
  417264:	mov	w0, #0x1                   	// #1
  417268:	strb	w0, [sp, #199]
  41726c:	strb	wzr, [sp, #198]
  417270:	b	4173d4 <__fxstatat@plt+0x14874>
  417274:	ldr	w0, [sp, #76]
  417278:	cmp	w0, #0xa
  41727c:	b.eq	4172a8 <__fxstatat@plt+0x14748>  // b.none
  417280:	ldr	w1, [sp, #76]
  417284:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  417288:	add	x0, x0, #0x788
  41728c:	bl	416fd0 <__fxstatat@plt+0x14470>
  417290:	str	x0, [sp, #56]
  417294:	ldr	w1, [sp, #76]
  417298:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41729c:	add	x0, x0, #0x780
  4172a0:	bl	416fd0 <__fxstatat@plt+0x14470>
  4172a4:	str	x0, [sp, #240]
  4172a8:	ldrb	w0, [sp, #198]
  4172ac:	eor	w0, w0, #0x1
  4172b0:	and	w0, w0, #0xff
  4172b4:	cmp	w0, #0x0
  4172b8:	b.eq	417318 <__fxstatat@plt+0x147b8>  // b.none
  4172bc:	ldr	x0, [sp, #56]
  4172c0:	str	x0, [sp, #208]
  4172c4:	b	417308 <__fxstatat@plt+0x147a8>
  4172c8:	ldr	x1, [sp, #224]
  4172cc:	ldr	x0, [sp, #96]
  4172d0:	cmp	x1, x0
  4172d4:	b.cs	4172f0 <__fxstatat@plt+0x14790>  // b.hs, b.nlast
  4172d8:	ldr	x1, [sp, #104]
  4172dc:	ldr	x0, [sp, #224]
  4172e0:	add	x0, x1, x0
  4172e4:	ldr	x1, [sp, #208]
  4172e8:	ldrb	w1, [x1]
  4172ec:	strb	w1, [x0]
  4172f0:	ldr	x0, [sp, #224]
  4172f4:	add	x0, x0, #0x1
  4172f8:	str	x0, [sp, #224]
  4172fc:	ldr	x0, [sp, #208]
  417300:	add	x0, x0, #0x1
  417304:	str	x0, [sp, #208]
  417308:	ldr	x0, [sp, #208]
  41730c:	ldrb	w0, [x0]
  417310:	cmp	w0, #0x0
  417314:	b.ne	4172c8 <__fxstatat@plt+0x14768>  // b.any
  417318:	mov	w0, #0x1                   	// #1
  41731c:	strb	w0, [sp, #199]
  417320:	ldr	x0, [sp, #240]
  417324:	str	x0, [sp, #208]
  417328:	ldr	x0, [sp, #208]
  41732c:	bl	402500 <strlen@plt>
  417330:	str	x0, [sp, #200]
  417334:	b	4173d4 <__fxstatat@plt+0x14874>
  417338:	mov	w0, #0x1                   	// #1
  41733c:	strb	w0, [sp, #199]
  417340:	mov	w0, #0x1                   	// #1
  417344:	strb	w0, [sp, #198]
  417348:	ldrb	w0, [sp, #198]
  41734c:	eor	w0, w0, #0x1
  417350:	and	w0, w0, #0xff
  417354:	cmp	w0, #0x0
  417358:	b.eq	417364 <__fxstatat@plt+0x14804>  // b.none
  41735c:	mov	w0, #0x1                   	// #1
  417360:	strb	w0, [sp, #199]
  417364:	mov	w0, #0x2                   	// #2
  417368:	str	w0, [sp, #76]
  41736c:	ldrb	w0, [sp, #198]
  417370:	eor	w0, w0, #0x1
  417374:	and	w0, w0, #0xff
  417378:	cmp	w0, #0x0
  41737c:	b.eq	4173b0 <__fxstatat@plt+0x14850>  // b.none
  417380:	ldr	x1, [sp, #224]
  417384:	ldr	x0, [sp, #96]
  417388:	cmp	x1, x0
  41738c:	b.cs	4173a4 <__fxstatat@plt+0x14844>  // b.hs, b.nlast
  417390:	ldr	x1, [sp, #104]
  417394:	ldr	x0, [sp, #224]
  417398:	add	x0, x1, x0
  41739c:	mov	w1, #0x27                  	// #39
  4173a0:	strb	w1, [x0]
  4173a4:	ldr	x0, [sp, #224]
  4173a8:	add	x0, x0, #0x1
  4173ac:	str	x0, [sp, #224]
  4173b0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4173b4:	add	x0, x0, #0x780
  4173b8:	str	x0, [sp, #208]
  4173bc:	mov	x0, #0x1                   	// #1
  4173c0:	str	x0, [sp, #200]
  4173c4:	b	4173d4 <__fxstatat@plt+0x14874>
  4173c8:	strb	wzr, [sp, #198]
  4173cc:	b	4173d4 <__fxstatat@plt+0x14874>
  4173d0:	bl	402820 <abort@plt>
  4173d4:	str	xzr, [sp, #232]
  4173d8:	b	418290 <__fxstatat@plt+0x15730>
  4173dc:	strb	wzr, [sp, #192]
  4173e0:	strb	wzr, [sp, #191]
  4173e4:	strb	wzr, [sp, #190]
  4173e8:	ldrb	w0, [sp, #199]
  4173ec:	cmp	w0, #0x0
  4173f0:	b.eq	417484 <__fxstatat@plt+0x14924>  // b.none
  4173f4:	ldr	w0, [sp, #76]
  4173f8:	cmp	w0, #0x2
  4173fc:	b.eq	417484 <__fxstatat@plt+0x14924>  // b.none
  417400:	ldr	x0, [sp, #200]
  417404:	cmp	x0, #0x0
  417408:	b.eq	417484 <__fxstatat@plt+0x14924>  // b.none
  41740c:	ldr	x1, [sp, #232]
  417410:	ldr	x0, [sp, #200]
  417414:	add	x19, x1, x0
  417418:	ldr	x0, [sp, #80]
  41741c:	cmn	x0, #0x1
  417420:	b.ne	417444 <__fxstatat@plt+0x148e4>  // b.any
  417424:	ldr	x0, [sp, #200]
  417428:	cmp	x0, #0x1
  41742c:	b.ls	417444 <__fxstatat@plt+0x148e4>  // b.plast
  417430:	ldr	x0, [sp, #88]
  417434:	bl	402500 <strlen@plt>
  417438:	str	x0, [sp, #80]
  41743c:	ldr	x0, [sp, #80]
  417440:	b	417448 <__fxstatat@plt+0x148e8>
  417444:	ldr	x0, [sp, #80]
  417448:	cmp	x0, x19
  41744c:	b.cc	417484 <__fxstatat@plt+0x14924>  // b.lo, b.ul, b.last
  417450:	ldr	x1, [sp, #88]
  417454:	ldr	x0, [sp, #232]
  417458:	add	x0, x1, x0
  41745c:	ldr	x2, [sp, #200]
  417460:	ldr	x1, [sp, #208]
  417464:	bl	402860 <memcmp@plt>
  417468:	cmp	w0, #0x0
  41746c:	b.ne	417484 <__fxstatat@plt+0x14924>  // b.any
  417470:	ldrb	w0, [sp, #198]
  417474:	cmp	w0, #0x0
  417478:	b.ne	418428 <__fxstatat@plt+0x158c8>  // b.any
  41747c:	mov	w0, #0x1                   	// #1
  417480:	strb	w0, [sp, #192]
  417484:	ldr	x1, [sp, #88]
  417488:	ldr	x0, [sp, #232]
  41748c:	add	x0, x1, x0
  417490:	ldrb	w0, [x0]
  417494:	strb	w0, [sp, #194]
  417498:	ldrb	w0, [sp, #194]
  41749c:	cmp	w0, #0x7e
  4174a0:	b.hi	417a98 <__fxstatat@plt+0x14f38>  // b.pmore
  4174a4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0x95b0>
  4174a8:	add	x1, x1, #0x78c
  4174ac:	ldr	w0, [x1, w0, uxtw #2]
  4174b0:	adr	x1, 4174bc <__fxstatat@plt+0x1495c>
  4174b4:	add	x0, x1, w0, sxtw #2
  4174b8:	br	x0
  4174bc:	ldrb	w0, [sp, #199]
  4174c0:	cmp	w0, #0x0
  4174c4:	b.eq	417688 <__fxstatat@plt+0x14b28>  // b.none
  4174c8:	ldrb	w0, [sp, #198]
  4174cc:	cmp	w0, #0x0
  4174d0:	b.ne	418430 <__fxstatat@plt+0x158d0>  // b.any
  4174d4:	mov	w0, #0x1                   	// #1
  4174d8:	strb	w0, [sp, #191]
  4174dc:	ldr	w0, [sp, #76]
  4174e0:	cmp	w0, #0x2
  4174e4:	b.ne	417594 <__fxstatat@plt+0x14a34>  // b.any
  4174e8:	ldrb	w0, [sp, #197]
  4174ec:	eor	w0, w0, #0x1
  4174f0:	and	w0, w0, #0xff
  4174f4:	cmp	w0, #0x0
  4174f8:	b.eq	417594 <__fxstatat@plt+0x14a34>  // b.none
  4174fc:	ldr	x1, [sp, #224]
  417500:	ldr	x0, [sp, #96]
  417504:	cmp	x1, x0
  417508:	b.cs	417520 <__fxstatat@plt+0x149c0>  // b.hs, b.nlast
  41750c:	ldr	x1, [sp, #104]
  417510:	ldr	x0, [sp, #224]
  417514:	add	x0, x1, x0
  417518:	mov	w1, #0x27                  	// #39
  41751c:	strb	w1, [x0]
  417520:	ldr	x0, [sp, #224]
  417524:	add	x0, x0, #0x1
  417528:	str	x0, [sp, #224]
  41752c:	ldr	x1, [sp, #224]
  417530:	ldr	x0, [sp, #96]
  417534:	cmp	x1, x0
  417538:	b.cs	417550 <__fxstatat@plt+0x149f0>  // b.hs, b.nlast
  41753c:	ldr	x1, [sp, #104]
  417540:	ldr	x0, [sp, #224]
  417544:	add	x0, x1, x0
  417548:	mov	w1, #0x24                  	// #36
  41754c:	strb	w1, [x0]
  417550:	ldr	x0, [sp, #224]
  417554:	add	x0, x0, #0x1
  417558:	str	x0, [sp, #224]
  41755c:	ldr	x1, [sp, #224]
  417560:	ldr	x0, [sp, #96]
  417564:	cmp	x1, x0
  417568:	b.cs	417580 <__fxstatat@plt+0x14a20>  // b.hs, b.nlast
  41756c:	ldr	x1, [sp, #104]
  417570:	ldr	x0, [sp, #224]
  417574:	add	x0, x1, x0
  417578:	mov	w1, #0x27                  	// #39
  41757c:	strb	w1, [x0]
  417580:	ldr	x0, [sp, #224]
  417584:	add	x0, x0, #0x1
  417588:	str	x0, [sp, #224]
  41758c:	mov	w0, #0x1                   	// #1
  417590:	strb	w0, [sp, #197]
  417594:	ldr	x1, [sp, #224]
  417598:	ldr	x0, [sp, #96]
  41759c:	cmp	x1, x0
  4175a0:	b.cs	4175b8 <__fxstatat@plt+0x14a58>  // b.hs, b.nlast
  4175a4:	ldr	x1, [sp, #104]
  4175a8:	ldr	x0, [sp, #224]
  4175ac:	add	x0, x1, x0
  4175b0:	mov	w1, #0x5c                  	// #92
  4175b4:	strb	w1, [x0]
  4175b8:	ldr	x0, [sp, #224]
  4175bc:	add	x0, x0, #0x1
  4175c0:	str	x0, [sp, #224]
  4175c4:	ldr	w0, [sp, #76]
  4175c8:	cmp	w0, #0x2
  4175cc:	b.eq	41767c <__fxstatat@plt+0x14b1c>  // b.none
  4175d0:	ldr	x0, [sp, #232]
  4175d4:	add	x0, x0, #0x1
  4175d8:	ldr	x1, [sp, #80]
  4175dc:	cmp	x1, x0
  4175e0:	b.ls	41767c <__fxstatat@plt+0x14b1c>  // b.plast
  4175e4:	ldr	x0, [sp, #232]
  4175e8:	add	x0, x0, #0x1
  4175ec:	ldr	x1, [sp, #88]
  4175f0:	add	x0, x1, x0
  4175f4:	ldrb	w0, [x0]
  4175f8:	cmp	w0, #0x2f
  4175fc:	b.ls	41767c <__fxstatat@plt+0x14b1c>  // b.plast
  417600:	ldr	x0, [sp, #232]
  417604:	add	x0, x0, #0x1
  417608:	ldr	x1, [sp, #88]
  41760c:	add	x0, x1, x0
  417610:	ldrb	w0, [x0]
  417614:	cmp	w0, #0x39
  417618:	b.hi	41767c <__fxstatat@plt+0x14b1c>  // b.pmore
  41761c:	ldr	x1, [sp, #224]
  417620:	ldr	x0, [sp, #96]
  417624:	cmp	x1, x0
  417628:	b.cs	417640 <__fxstatat@plt+0x14ae0>  // b.hs, b.nlast
  41762c:	ldr	x1, [sp, #104]
  417630:	ldr	x0, [sp, #224]
  417634:	add	x0, x1, x0
  417638:	mov	w1, #0x30                  	// #48
  41763c:	strb	w1, [x0]
  417640:	ldr	x0, [sp, #224]
  417644:	add	x0, x0, #0x1
  417648:	str	x0, [sp, #224]
  41764c:	ldr	x1, [sp, #224]
  417650:	ldr	x0, [sp, #96]
  417654:	cmp	x1, x0
  417658:	b.cs	417670 <__fxstatat@plt+0x14b10>  // b.hs, b.nlast
  41765c:	ldr	x1, [sp, #104]
  417660:	ldr	x0, [sp, #224]
  417664:	add	x0, x1, x0
  417668:	mov	w1, #0x30                  	// #48
  41766c:	strb	w1, [x0]
  417670:	ldr	x0, [sp, #224]
  417674:	add	x0, x0, #0x1
  417678:	str	x0, [sp, #224]
  41767c:	mov	w0, #0x30                  	// #48
  417680:	strb	w0, [sp, #194]
  417684:	b	417fe8 <__fxstatat@plt+0x15488>
  417688:	ldr	w0, [sp, #72]
  41768c:	and	w0, w0, #0x1
  417690:	cmp	w0, #0x0
  417694:	b.eq	417fe8 <__fxstatat@plt+0x15488>  // b.none
  417698:	b	418284 <__fxstatat@plt+0x15724>
  41769c:	ldr	w0, [sp, #76]
  4176a0:	cmp	w0, #0x2
  4176a4:	b.eq	4176b8 <__fxstatat@plt+0x14b58>  // b.none
  4176a8:	ldr	w0, [sp, #76]
  4176ac:	cmp	w0, #0x5
  4176b0:	b.eq	4176c8 <__fxstatat@plt+0x14b68>  // b.none
  4176b4:	b	417860 <__fxstatat@plt+0x14d00>
  4176b8:	ldrb	w0, [sp, #198]
  4176bc:	cmp	w0, #0x0
  4176c0:	b.eq	417854 <__fxstatat@plt+0x14cf4>  // b.none
  4176c4:	b	418464 <__fxstatat@plt+0x15904>
  4176c8:	ldr	w0, [sp, #72]
  4176cc:	and	w0, w0, #0x4
  4176d0:	cmp	w0, #0x0
  4176d4:	b.eq	41785c <__fxstatat@plt+0x14cfc>  // b.none
  4176d8:	ldr	x0, [sp, #232]
  4176dc:	add	x0, x0, #0x2
  4176e0:	ldr	x1, [sp, #80]
  4176e4:	cmp	x1, x0
  4176e8:	b.ls	41785c <__fxstatat@plt+0x14cfc>  // b.plast
  4176ec:	ldr	x0, [sp, #232]
  4176f0:	add	x0, x0, #0x1
  4176f4:	ldr	x1, [sp, #88]
  4176f8:	add	x0, x1, x0
  4176fc:	ldrb	w0, [x0]
  417700:	cmp	w0, #0x3f
  417704:	b.ne	41785c <__fxstatat@plt+0x14cfc>  // b.any
  417708:	ldr	x0, [sp, #232]
  41770c:	add	x0, x0, #0x2
  417710:	ldr	x1, [sp, #88]
  417714:	add	x0, x1, x0
  417718:	ldrb	w0, [x0]
  41771c:	cmp	w0, #0x3e
  417720:	cset	w1, hi  // hi = pmore
  417724:	and	w1, w1, #0xff
  417728:	cmp	w1, #0x0
  41772c:	b.ne	41784c <__fxstatat@plt+0x14cec>  // b.any
  417730:	mov	x1, #0x1                   	// #1
  417734:	lsl	x1, x1, x0
  417738:	mov	x0, #0xa38200000000        	// #179778741075968
  41773c:	movk	x0, #0x7000, lsl #48
  417740:	and	x0, x1, x0
  417744:	cmp	x0, #0x0
  417748:	cset	w0, ne  // ne = any
  41774c:	and	w0, w0, #0xff
  417750:	cmp	w0, #0x0
  417754:	b.eq	41784c <__fxstatat@plt+0x14cec>  // b.none
  417758:	ldrb	w0, [sp, #198]
  41775c:	cmp	w0, #0x0
  417760:	b.ne	418438 <__fxstatat@plt+0x158d8>  // b.any
  417764:	ldr	x0, [sp, #232]
  417768:	add	x0, x0, #0x2
  41776c:	ldr	x1, [sp, #88]
  417770:	add	x0, x1, x0
  417774:	ldrb	w0, [x0]
  417778:	strb	w0, [sp, #194]
  41777c:	ldr	x0, [sp, #232]
  417780:	add	x0, x0, #0x2
  417784:	str	x0, [sp, #232]
  417788:	ldr	x1, [sp, #224]
  41778c:	ldr	x0, [sp, #96]
  417790:	cmp	x1, x0
  417794:	b.cs	4177ac <__fxstatat@plt+0x14c4c>  // b.hs, b.nlast
  417798:	ldr	x1, [sp, #104]
  41779c:	ldr	x0, [sp, #224]
  4177a0:	add	x0, x1, x0
  4177a4:	mov	w1, #0x3f                  	// #63
  4177a8:	strb	w1, [x0]
  4177ac:	ldr	x0, [sp, #224]
  4177b0:	add	x0, x0, #0x1
  4177b4:	str	x0, [sp, #224]
  4177b8:	ldr	x1, [sp, #224]
  4177bc:	ldr	x0, [sp, #96]
  4177c0:	cmp	x1, x0
  4177c4:	b.cs	4177dc <__fxstatat@plt+0x14c7c>  // b.hs, b.nlast
  4177c8:	ldr	x1, [sp, #104]
  4177cc:	ldr	x0, [sp, #224]
  4177d0:	add	x0, x1, x0
  4177d4:	mov	w1, #0x22                  	// #34
  4177d8:	strb	w1, [x0]
  4177dc:	ldr	x0, [sp, #224]
  4177e0:	add	x0, x0, #0x1
  4177e4:	str	x0, [sp, #224]
  4177e8:	ldr	x1, [sp, #224]
  4177ec:	ldr	x0, [sp, #96]
  4177f0:	cmp	x1, x0
  4177f4:	b.cs	41780c <__fxstatat@plt+0x14cac>  // b.hs, b.nlast
  4177f8:	ldr	x1, [sp, #104]
  4177fc:	ldr	x0, [sp, #224]
  417800:	add	x0, x1, x0
  417804:	mov	w1, #0x22                  	// #34
  417808:	strb	w1, [x0]
  41780c:	ldr	x0, [sp, #224]
  417810:	add	x0, x0, #0x1
  417814:	str	x0, [sp, #224]
  417818:	ldr	x1, [sp, #224]
  41781c:	ldr	x0, [sp, #96]
  417820:	cmp	x1, x0
  417824:	b.cs	41783c <__fxstatat@plt+0x14cdc>  // b.hs, b.nlast
  417828:	ldr	x1, [sp, #104]
  41782c:	ldr	x0, [sp, #224]
  417830:	add	x0, x1, x0
  417834:	mov	w1, #0x3f                  	// #63
  417838:	strb	w1, [x0]
  41783c:	ldr	x0, [sp, #224]
  417840:	add	x0, x0, #0x1
  417844:	str	x0, [sp, #224]
  417848:	b	417850 <__fxstatat@plt+0x14cf0>
  41784c:	nop
  417850:	b	41785c <__fxstatat@plt+0x14cfc>
  417854:	nop
  417858:	b	418014 <__fxstatat@plt+0x154b4>
  41785c:	nop
  417860:	b	418014 <__fxstatat@plt+0x154b4>
  417864:	mov	w0, #0x61                  	// #97
  417868:	strb	w0, [sp, #193]
  41786c:	b	417920 <__fxstatat@plt+0x14dc0>
  417870:	mov	w0, #0x62                  	// #98
  417874:	strb	w0, [sp, #193]
  417878:	b	417920 <__fxstatat@plt+0x14dc0>
  41787c:	mov	w0, #0x66                  	// #102
  417880:	strb	w0, [sp, #193]
  417884:	b	417920 <__fxstatat@plt+0x14dc0>
  417888:	mov	w0, #0x6e                  	// #110
  41788c:	strb	w0, [sp, #193]
  417890:	b	417904 <__fxstatat@plt+0x14da4>
  417894:	mov	w0, #0x72                  	// #114
  417898:	strb	w0, [sp, #193]
  41789c:	b	417904 <__fxstatat@plt+0x14da4>
  4178a0:	mov	w0, #0x74                  	// #116
  4178a4:	strb	w0, [sp, #193]
  4178a8:	b	417904 <__fxstatat@plt+0x14da4>
  4178ac:	mov	w0, #0x76                  	// #118
  4178b0:	strb	w0, [sp, #193]
  4178b4:	b	417920 <__fxstatat@plt+0x14dc0>
  4178b8:	ldrb	w0, [sp, #194]
  4178bc:	strb	w0, [sp, #193]
  4178c0:	ldr	w0, [sp, #76]
  4178c4:	cmp	w0, #0x2
  4178c8:	b.ne	4178dc <__fxstatat@plt+0x14d7c>  // b.any
  4178cc:	ldrb	w0, [sp, #198]
  4178d0:	cmp	w0, #0x0
  4178d4:	b.eq	4181a4 <__fxstatat@plt+0x15644>  // b.none
  4178d8:	b	418464 <__fxstatat@plt+0x15904>
  4178dc:	ldrb	w0, [sp, #199]
  4178e0:	cmp	w0, #0x0
  4178e4:	b.eq	417900 <__fxstatat@plt+0x14da0>  // b.none
  4178e8:	ldrb	w0, [sp, #198]
  4178ec:	cmp	w0, #0x0
  4178f0:	b.eq	417900 <__fxstatat@plt+0x14da0>  // b.none
  4178f4:	ldr	x0, [sp, #200]
  4178f8:	cmp	x0, #0x0
  4178fc:	b.ne	4181ac <__fxstatat@plt+0x1564c>  // b.any
  417900:	nop
  417904:	ldr	w0, [sp, #76]
  417908:	cmp	w0, #0x2
  41790c:	b.ne	41791c <__fxstatat@plt+0x14dbc>  // b.any
  417910:	ldrb	w0, [sp, #198]
  417914:	cmp	w0, #0x0
  417918:	b.ne	418440 <__fxstatat@plt+0x158e0>  // b.any
  41791c:	nop
  417920:	ldrb	w0, [sp, #199]
  417924:	cmp	w0, #0x0
  417928:	b.eq	417ff0 <__fxstatat@plt+0x15490>  // b.none
  41792c:	ldrb	w0, [sp, #193]
  417930:	strb	w0, [sp, #194]
  417934:	b	4180a4 <__fxstatat@plt+0x15544>
  417938:	ldr	x0, [sp, #80]
  41793c:	cmn	x0, #0x1
  417940:	b.ne	417960 <__fxstatat@plt+0x14e00>  // b.any
  417944:	ldr	x0, [sp, #88]
  417948:	add	x0, x0, #0x1
  41794c:	ldrb	w0, [x0]
  417950:	cmp	w0, #0x0
  417954:	cset	w0, ne  // ne = any
  417958:	and	w0, w0, #0xff
  41795c:	b	417970 <__fxstatat@plt+0x14e10>
  417960:	ldr	x0, [sp, #80]
  417964:	cmp	x0, #0x1
  417968:	cset	w0, ne  // ne = any
  41796c:	and	w0, w0, #0xff
  417970:	cmp	w0, #0x0
  417974:	b.ne	417ff8 <__fxstatat@plt+0x15498>  // b.any
  417978:	ldr	x0, [sp, #232]
  41797c:	cmp	x0, #0x0
  417980:	b.ne	418000 <__fxstatat@plt+0x154a0>  // b.any
  417984:	mov	w0, #0x1                   	// #1
  417988:	strb	w0, [sp, #190]
  41798c:	ldr	w0, [sp, #76]
  417990:	cmp	w0, #0x2
  417994:	b.ne	418008 <__fxstatat@plt+0x154a8>  // b.any
  417998:	ldrb	w0, [sp, #198]
  41799c:	cmp	w0, #0x0
  4179a0:	b.eq	418008 <__fxstatat@plt+0x154a8>  // b.none
  4179a4:	b	418464 <__fxstatat@plt+0x15904>
  4179a8:	mov	w0, #0x1                   	// #1
  4179ac:	strb	w0, [sp, #196]
  4179b0:	mov	w0, #0x1                   	// #1
  4179b4:	strb	w0, [sp, #190]
  4179b8:	ldr	w0, [sp, #76]
  4179bc:	cmp	w0, #0x2
  4179c0:	b.ne	418010 <__fxstatat@plt+0x154b0>  // b.any
  4179c4:	ldrb	w0, [sp, #198]
  4179c8:	cmp	w0, #0x0
  4179cc:	b.ne	418448 <__fxstatat@plt+0x158e8>  // b.any
  4179d0:	ldr	x0, [sp, #96]
  4179d4:	cmp	x0, #0x0
  4179d8:	b.eq	4179f4 <__fxstatat@plt+0x14e94>  // b.none
  4179dc:	ldr	x0, [sp, #216]
  4179e0:	cmp	x0, #0x0
  4179e4:	b.ne	4179f4 <__fxstatat@plt+0x14e94>  // b.any
  4179e8:	ldr	x0, [sp, #96]
  4179ec:	str	x0, [sp, #216]
  4179f0:	str	xzr, [sp, #96]
  4179f4:	ldr	x1, [sp, #224]
  4179f8:	ldr	x0, [sp, #96]
  4179fc:	cmp	x1, x0
  417a00:	b.cs	417a18 <__fxstatat@plt+0x14eb8>  // b.hs, b.nlast
  417a04:	ldr	x1, [sp, #104]
  417a08:	ldr	x0, [sp, #224]
  417a0c:	add	x0, x1, x0
  417a10:	mov	w1, #0x27                  	// #39
  417a14:	strb	w1, [x0]
  417a18:	ldr	x0, [sp, #224]
  417a1c:	add	x0, x0, #0x1
  417a20:	str	x0, [sp, #224]
  417a24:	ldr	x1, [sp, #224]
  417a28:	ldr	x0, [sp, #96]
  417a2c:	cmp	x1, x0
  417a30:	b.cs	417a48 <__fxstatat@plt+0x14ee8>  // b.hs, b.nlast
  417a34:	ldr	x1, [sp, #104]
  417a38:	ldr	x0, [sp, #224]
  417a3c:	add	x0, x1, x0
  417a40:	mov	w1, #0x5c                  	// #92
  417a44:	strb	w1, [x0]
  417a48:	ldr	x0, [sp, #224]
  417a4c:	add	x0, x0, #0x1
  417a50:	str	x0, [sp, #224]
  417a54:	ldr	x1, [sp, #224]
  417a58:	ldr	x0, [sp, #96]
  417a5c:	cmp	x1, x0
  417a60:	b.cs	417a78 <__fxstatat@plt+0x14f18>  // b.hs, b.nlast
  417a64:	ldr	x1, [sp, #104]
  417a68:	ldr	x0, [sp, #224]
  417a6c:	add	x0, x1, x0
  417a70:	mov	w1, #0x27                  	// #39
  417a74:	strb	w1, [x0]
  417a78:	ldr	x0, [sp, #224]
  417a7c:	add	x0, x0, #0x1
  417a80:	str	x0, [sp, #224]
  417a84:	strb	wzr, [sp, #197]
  417a88:	b	418010 <__fxstatat@plt+0x154b0>
  417a8c:	mov	w0, #0x1                   	// #1
  417a90:	strb	w0, [sp, #190]
  417a94:	b	418014 <__fxstatat@plt+0x154b4>
  417a98:	ldrb	w0, [sp, #159]
  417a9c:	cmp	w0, #0x0
  417aa0:	b.eq	417ad8 <__fxstatat@plt+0x14f78>  // b.none
  417aa4:	mov	x0, #0x1                   	// #1
  417aa8:	str	x0, [sp, #176]
  417aac:	bl	4028d0 <__ctype_b_loc@plt>
  417ab0:	ldr	x1, [x0]
  417ab4:	ldrb	w0, [sp, #194]
  417ab8:	lsl	x0, x0, #1
  417abc:	add	x0, x1, x0
  417ac0:	ldrh	w0, [x0]
  417ac4:	and	w0, w0, #0x4000
  417ac8:	cmp	w0, #0x0
  417acc:	cset	w0, ne  // ne = any
  417ad0:	strb	w0, [sp, #175]
  417ad4:	b	417cb4 <__fxstatat@plt+0x15154>
  417ad8:	add	x0, sp, #0x80
  417adc:	mov	x2, #0x8                   	// #8
  417ae0:	mov	w1, #0x0                   	// #0
  417ae4:	bl	402740 <memset@plt>
  417ae8:	str	xzr, [sp, #176]
  417aec:	mov	w0, #0x1                   	// #1
  417af0:	strb	w0, [sp, #175]
  417af4:	ldr	x0, [sp, #80]
  417af8:	cmn	x0, #0x1
  417afc:	b.ne	417b0c <__fxstatat@plt+0x14fac>  // b.any
  417b00:	ldr	x0, [sp, #88]
  417b04:	bl	402500 <strlen@plt>
  417b08:	str	x0, [sp, #80]
  417b0c:	ldr	x1, [sp, #232]
  417b10:	ldr	x0, [sp, #176]
  417b14:	add	x0, x1, x0
  417b18:	ldr	x1, [sp, #88]
  417b1c:	add	x4, x1, x0
  417b20:	ldr	x1, [sp, #232]
  417b24:	ldr	x0, [sp, #176]
  417b28:	add	x0, x1, x0
  417b2c:	ldr	x1, [sp, #80]
  417b30:	sub	x1, x1, x0
  417b34:	add	x2, sp, #0x80
  417b38:	add	x0, sp, #0x7c
  417b3c:	mov	x3, x2
  417b40:	mov	x2, x1
  417b44:	mov	x1, x4
  417b48:	bl	41b358 <__fxstatat@plt+0x187f8>
  417b4c:	str	x0, [sp, #144]
  417b50:	ldr	x0, [sp, #144]
  417b54:	cmp	x0, #0x0
  417b58:	b.eq	417ca8 <__fxstatat@plt+0x15148>  // b.none
  417b5c:	ldr	x0, [sp, #144]
  417b60:	cmn	x0, #0x1
  417b64:	b.ne	417b70 <__fxstatat@plt+0x15010>  // b.any
  417b68:	strb	wzr, [sp, #175]
  417b6c:	b	417cb4 <__fxstatat@plt+0x15154>
  417b70:	ldr	x0, [sp, #144]
  417b74:	cmn	x0, #0x2
  417b78:	b.ne	417bcc <__fxstatat@plt+0x1506c>  // b.any
  417b7c:	strb	wzr, [sp, #175]
  417b80:	b	417b90 <__fxstatat@plt+0x15030>
  417b84:	ldr	x0, [sp, #176]
  417b88:	add	x0, x0, #0x1
  417b8c:	str	x0, [sp, #176]
  417b90:	ldr	x1, [sp, #232]
  417b94:	ldr	x0, [sp, #176]
  417b98:	add	x0, x1, x0
  417b9c:	ldr	x1, [sp, #80]
  417ba0:	cmp	x1, x0
  417ba4:	b.ls	417cb0 <__fxstatat@plt+0x15150>  // b.plast
  417ba8:	ldr	x1, [sp, #232]
  417bac:	ldr	x0, [sp, #176]
  417bb0:	add	x0, x1, x0
  417bb4:	ldr	x1, [sp, #88]
  417bb8:	add	x0, x1, x0
  417bbc:	ldrb	w0, [x0]
  417bc0:	cmp	w0, #0x0
  417bc4:	b.ne	417b84 <__fxstatat@plt+0x15024>  // b.any
  417bc8:	b	417cb0 <__fxstatat@plt+0x15150>
  417bcc:	ldrb	w0, [sp, #198]
  417bd0:	cmp	w0, #0x0
  417bd4:	b.eq	417c70 <__fxstatat@plt+0x15110>  // b.none
  417bd8:	ldr	w0, [sp, #76]
  417bdc:	cmp	w0, #0x2
  417be0:	b.ne	417c70 <__fxstatat@plt+0x15110>  // b.any
  417be4:	mov	x0, #0x1                   	// #1
  417be8:	str	x0, [sp, #160]
  417bec:	b	417c60 <__fxstatat@plt+0x15100>
  417bf0:	ldr	x1, [sp, #232]
  417bf4:	ldr	x0, [sp, #176]
  417bf8:	add	x1, x1, x0
  417bfc:	ldr	x0, [sp, #160]
  417c00:	add	x0, x1, x0
  417c04:	ldr	x1, [sp, #88]
  417c08:	add	x0, x1, x0
  417c0c:	ldrb	w0, [x0]
  417c10:	sub	w0, w0, #0x5b
  417c14:	cmp	w0, #0x21
  417c18:	cset	w1, hi  // hi = pmore
  417c1c:	and	w1, w1, #0xff
  417c20:	cmp	w1, #0x0
  417c24:	b.ne	417c50 <__fxstatat@plt+0x150f0>  // b.any
  417c28:	mov	x1, #0x1                   	// #1
  417c2c:	lsl	x1, x1, x0
  417c30:	mov	x0, #0x2b                  	// #43
  417c34:	movk	x0, #0x2, lsl #32
  417c38:	and	x0, x1, x0
  417c3c:	cmp	x0, #0x0
  417c40:	cset	w0, ne  // ne = any
  417c44:	and	w0, w0, #0xff
  417c48:	cmp	w0, #0x0
  417c4c:	b.ne	418464 <__fxstatat@plt+0x15904>  // b.any
  417c50:	nop
  417c54:	ldr	x0, [sp, #160]
  417c58:	add	x0, x0, #0x1
  417c5c:	str	x0, [sp, #160]
  417c60:	ldr	x1, [sp, #160]
  417c64:	ldr	x0, [sp, #144]
  417c68:	cmp	x1, x0
  417c6c:	b.cc	417bf0 <__fxstatat@plt+0x15090>  // b.lo, b.ul, b.last
  417c70:	ldr	w0, [sp, #124]
  417c74:	bl	402a90 <iswprint@plt>
  417c78:	cmp	w0, #0x0
  417c7c:	b.ne	417c84 <__fxstatat@plt+0x15124>  // b.any
  417c80:	strb	wzr, [sp, #175]
  417c84:	ldr	x1, [sp, #176]
  417c88:	ldr	x0, [sp, #144]
  417c8c:	add	x0, x1, x0
  417c90:	str	x0, [sp, #176]
  417c94:	add	x0, sp, #0x80
  417c98:	bl	402830 <mbsinit@plt>
  417c9c:	cmp	w0, #0x0
  417ca0:	b.eq	417b0c <__fxstatat@plt+0x14fac>  // b.none
  417ca4:	b	417cb4 <__fxstatat@plt+0x15154>
  417ca8:	nop
  417cac:	b	417cb4 <__fxstatat@plt+0x15154>
  417cb0:	nop
  417cb4:	ldrb	w0, [sp, #175]
  417cb8:	strb	w0, [sp, #190]
  417cbc:	ldr	x0, [sp, #176]
  417cc0:	cmp	x0, #0x1
  417cc4:	b.hi	417ce8 <__fxstatat@plt+0x15188>  // b.pmore
  417cc8:	ldrb	w0, [sp, #199]
  417ccc:	cmp	w0, #0x0
  417cd0:	b.eq	418014 <__fxstatat@plt+0x154b4>  // b.none
  417cd4:	ldrb	w0, [sp, #175]
  417cd8:	eor	w0, w0, #0x1
  417cdc:	and	w0, w0, #0xff
  417ce0:	cmp	w0, #0x0
  417ce4:	b.eq	418014 <__fxstatat@plt+0x154b4>  // b.none
  417ce8:	ldr	x1, [sp, #232]
  417cec:	ldr	x0, [sp, #176]
  417cf0:	add	x0, x1, x0
  417cf4:	str	x0, [sp, #136]
  417cf8:	ldrb	w0, [sp, #199]
  417cfc:	cmp	w0, #0x0
  417d00:	b.eq	417eb4 <__fxstatat@plt+0x15354>  // b.none
  417d04:	ldrb	w0, [sp, #175]
  417d08:	eor	w0, w0, #0x1
  417d0c:	and	w0, w0, #0xff
  417d10:	cmp	w0, #0x0
  417d14:	b.eq	417eb4 <__fxstatat@plt+0x15354>  // b.none
  417d18:	ldrb	w0, [sp, #198]
  417d1c:	cmp	w0, #0x0
  417d20:	b.ne	418450 <__fxstatat@plt+0x158f0>  // b.any
  417d24:	mov	w0, #0x1                   	// #1
  417d28:	strb	w0, [sp, #191]
  417d2c:	ldr	w0, [sp, #76]
  417d30:	cmp	w0, #0x2
  417d34:	b.ne	417de4 <__fxstatat@plt+0x15284>  // b.any
  417d38:	ldrb	w0, [sp, #197]
  417d3c:	eor	w0, w0, #0x1
  417d40:	and	w0, w0, #0xff
  417d44:	cmp	w0, #0x0
  417d48:	b.eq	417de4 <__fxstatat@plt+0x15284>  // b.none
  417d4c:	ldr	x1, [sp, #224]
  417d50:	ldr	x0, [sp, #96]
  417d54:	cmp	x1, x0
  417d58:	b.cs	417d70 <__fxstatat@plt+0x15210>  // b.hs, b.nlast
  417d5c:	ldr	x1, [sp, #104]
  417d60:	ldr	x0, [sp, #224]
  417d64:	add	x0, x1, x0
  417d68:	mov	w1, #0x27                  	// #39
  417d6c:	strb	w1, [x0]
  417d70:	ldr	x0, [sp, #224]
  417d74:	add	x0, x0, #0x1
  417d78:	str	x0, [sp, #224]
  417d7c:	ldr	x1, [sp, #224]
  417d80:	ldr	x0, [sp, #96]
  417d84:	cmp	x1, x0
  417d88:	b.cs	417da0 <__fxstatat@plt+0x15240>  // b.hs, b.nlast
  417d8c:	ldr	x1, [sp, #104]
  417d90:	ldr	x0, [sp, #224]
  417d94:	add	x0, x1, x0
  417d98:	mov	w1, #0x24                  	// #36
  417d9c:	strb	w1, [x0]
  417da0:	ldr	x0, [sp, #224]
  417da4:	add	x0, x0, #0x1
  417da8:	str	x0, [sp, #224]
  417dac:	ldr	x1, [sp, #224]
  417db0:	ldr	x0, [sp, #96]
  417db4:	cmp	x1, x0
  417db8:	b.cs	417dd0 <__fxstatat@plt+0x15270>  // b.hs, b.nlast
  417dbc:	ldr	x1, [sp, #104]
  417dc0:	ldr	x0, [sp, #224]
  417dc4:	add	x0, x1, x0
  417dc8:	mov	w1, #0x27                  	// #39
  417dcc:	strb	w1, [x0]
  417dd0:	ldr	x0, [sp, #224]
  417dd4:	add	x0, x0, #0x1
  417dd8:	str	x0, [sp, #224]
  417ddc:	mov	w0, #0x1                   	// #1
  417de0:	strb	w0, [sp, #197]
  417de4:	ldr	x1, [sp, #224]
  417de8:	ldr	x0, [sp, #96]
  417dec:	cmp	x1, x0
  417df0:	b.cs	417e08 <__fxstatat@plt+0x152a8>  // b.hs, b.nlast
  417df4:	ldr	x1, [sp, #104]
  417df8:	ldr	x0, [sp, #224]
  417dfc:	add	x0, x1, x0
  417e00:	mov	w1, #0x5c                  	// #92
  417e04:	strb	w1, [x0]
  417e08:	ldr	x0, [sp, #224]
  417e0c:	add	x0, x0, #0x1
  417e10:	str	x0, [sp, #224]
  417e14:	ldr	x1, [sp, #224]
  417e18:	ldr	x0, [sp, #96]
  417e1c:	cmp	x1, x0
  417e20:	b.cs	417e48 <__fxstatat@plt+0x152e8>  // b.hs, b.nlast
  417e24:	ldrb	w0, [sp, #194]
  417e28:	lsr	w0, w0, #6
  417e2c:	and	w1, w0, #0xff
  417e30:	ldr	x2, [sp, #104]
  417e34:	ldr	x0, [sp, #224]
  417e38:	add	x0, x2, x0
  417e3c:	add	w1, w1, #0x30
  417e40:	and	w1, w1, #0xff
  417e44:	strb	w1, [x0]
  417e48:	ldr	x0, [sp, #224]
  417e4c:	add	x0, x0, #0x1
  417e50:	str	x0, [sp, #224]
  417e54:	ldr	x1, [sp, #224]
  417e58:	ldr	x0, [sp, #96]
  417e5c:	cmp	x1, x0
  417e60:	b.cs	417e90 <__fxstatat@plt+0x15330>  // b.hs, b.nlast
  417e64:	ldrb	w0, [sp, #194]
  417e68:	lsr	w0, w0, #3
  417e6c:	and	w0, w0, #0xff
  417e70:	and	w0, w0, #0x7
  417e74:	and	w1, w0, #0xff
  417e78:	ldr	x2, [sp, #104]
  417e7c:	ldr	x0, [sp, #224]
  417e80:	add	x0, x2, x0
  417e84:	add	w1, w1, #0x30
  417e88:	and	w1, w1, #0xff
  417e8c:	strb	w1, [x0]
  417e90:	ldr	x0, [sp, #224]
  417e94:	add	x0, x0, #0x1
  417e98:	str	x0, [sp, #224]
  417e9c:	ldrb	w0, [sp, #194]
  417ea0:	and	w0, w0, #0x7
  417ea4:	and	w0, w0, #0xff
  417ea8:	add	w0, w0, #0x30
  417eac:	strb	w0, [sp, #194]
  417eb0:	b	417ef4 <__fxstatat@plt+0x15394>
  417eb4:	ldrb	w0, [sp, #192]
  417eb8:	cmp	w0, #0x0
  417ebc:	b.eq	417ef4 <__fxstatat@plt+0x15394>  // b.none
  417ec0:	ldr	x1, [sp, #224]
  417ec4:	ldr	x0, [sp, #96]
  417ec8:	cmp	x1, x0
  417ecc:	b.cs	417ee4 <__fxstatat@plt+0x15384>  // b.hs, b.nlast
  417ed0:	ldr	x1, [sp, #104]
  417ed4:	ldr	x0, [sp, #224]
  417ed8:	add	x0, x1, x0
  417edc:	mov	w1, #0x5c                  	// #92
  417ee0:	strb	w1, [x0]
  417ee4:	ldr	x0, [sp, #224]
  417ee8:	add	x0, x0, #0x1
  417eec:	str	x0, [sp, #224]
  417ef0:	strb	wzr, [sp, #192]
  417ef4:	ldr	x0, [sp, #232]
  417ef8:	add	x0, x0, #0x1
  417efc:	ldr	x1, [sp, #136]
  417f00:	cmp	x1, x0
  417f04:	b.ls	417fe0 <__fxstatat@plt+0x15480>  // b.plast
  417f08:	ldrb	w0, [sp, #197]
  417f0c:	cmp	w0, #0x0
  417f10:	b.eq	417f8c <__fxstatat@plt+0x1542c>  // b.none
  417f14:	ldrb	w0, [sp, #191]
  417f18:	eor	w0, w0, #0x1
  417f1c:	and	w0, w0, #0xff
  417f20:	cmp	w0, #0x0
  417f24:	b.eq	417f8c <__fxstatat@plt+0x1542c>  // b.none
  417f28:	ldr	x1, [sp, #224]
  417f2c:	ldr	x0, [sp, #96]
  417f30:	cmp	x1, x0
  417f34:	b.cs	417f4c <__fxstatat@plt+0x153ec>  // b.hs, b.nlast
  417f38:	ldr	x1, [sp, #104]
  417f3c:	ldr	x0, [sp, #224]
  417f40:	add	x0, x1, x0
  417f44:	mov	w1, #0x27                  	// #39
  417f48:	strb	w1, [x0]
  417f4c:	ldr	x0, [sp, #224]
  417f50:	add	x0, x0, #0x1
  417f54:	str	x0, [sp, #224]
  417f58:	ldr	x1, [sp, #224]
  417f5c:	ldr	x0, [sp, #96]
  417f60:	cmp	x1, x0
  417f64:	b.cs	417f7c <__fxstatat@plt+0x1541c>  // b.hs, b.nlast
  417f68:	ldr	x1, [sp, #104]
  417f6c:	ldr	x0, [sp, #224]
  417f70:	add	x0, x1, x0
  417f74:	mov	w1, #0x27                  	// #39
  417f78:	strb	w1, [x0]
  417f7c:	ldr	x0, [sp, #224]
  417f80:	add	x0, x0, #0x1
  417f84:	str	x0, [sp, #224]
  417f88:	strb	wzr, [sp, #197]
  417f8c:	ldr	x1, [sp, #224]
  417f90:	ldr	x0, [sp, #96]
  417f94:	cmp	x1, x0
  417f98:	b.cs	417fb0 <__fxstatat@plt+0x15450>  // b.hs, b.nlast
  417f9c:	ldr	x1, [sp, #104]
  417fa0:	ldr	x0, [sp, #224]
  417fa4:	add	x0, x1, x0
  417fa8:	ldrb	w1, [sp, #194]
  417fac:	strb	w1, [x0]
  417fb0:	ldr	x0, [sp, #224]
  417fb4:	add	x0, x0, #0x1
  417fb8:	str	x0, [sp, #224]
  417fbc:	ldr	x0, [sp, #232]
  417fc0:	add	x0, x0, #0x1
  417fc4:	str	x0, [sp, #232]
  417fc8:	ldr	x1, [sp, #88]
  417fcc:	ldr	x0, [sp, #232]
  417fd0:	add	x0, x1, x0
  417fd4:	ldrb	w0, [x0]
  417fd8:	strb	w0, [sp, #194]
  417fdc:	b	417cf8 <__fxstatat@plt+0x15198>
  417fe0:	nop
  417fe4:	b	4181b8 <__fxstatat@plt+0x15658>
  417fe8:	nop
  417fec:	b	418014 <__fxstatat@plt+0x154b4>
  417ff0:	nop
  417ff4:	b	418014 <__fxstatat@plt+0x154b4>
  417ff8:	nop
  417ffc:	b	418014 <__fxstatat@plt+0x154b4>
  418000:	nop
  418004:	b	418014 <__fxstatat@plt+0x154b4>
  418008:	nop
  41800c:	b	418014 <__fxstatat@plt+0x154b4>
  418010:	nop
  418014:	ldrb	w0, [sp, #199]
  418018:	eor	w0, w0, #0x1
  41801c:	and	w0, w0, #0xff
  418020:	cmp	w0, #0x0
  418024:	b.ne	418034 <__fxstatat@plt+0x154d4>  // b.any
  418028:	ldr	w0, [sp, #76]
  41802c:	cmp	w0, #0x2
  418030:	b.ne	418048 <__fxstatat@plt+0x154e8>  // b.any
  418034:	ldrb	w0, [sp, #198]
  418038:	eor	w0, w0, #0x1
  41803c:	and	w0, w0, #0xff
  418040:	cmp	w0, #0x0
  418044:	b.ne	41808c <__fxstatat@plt+0x1552c>  // b.any
  418048:	ldr	x0, [sp, #64]
  41804c:	cmp	x0, #0x0
  418050:	b.eq	41808c <__fxstatat@plt+0x1552c>  // b.none
  418054:	ldrb	w0, [sp, #194]
  418058:	lsr	w0, w0, #5
  41805c:	and	w0, w0, #0xff
  418060:	and	x0, x0, #0xff
  418064:	lsl	x0, x0, #2
  418068:	ldr	x1, [sp, #64]
  41806c:	add	x0, x1, x0
  418070:	ldr	w1, [x0]
  418074:	ldrb	w0, [sp, #194]
  418078:	and	w0, w0, #0x1f
  41807c:	lsr	w0, w1, w0
  418080:	and	w0, w0, #0x1
  418084:	cmp	w0, #0x0
  418088:	b.ne	4180a0 <__fxstatat@plt+0x15540>  // b.any
  41808c:	ldrb	w0, [sp, #192]
  418090:	eor	w0, w0, #0x1
  418094:	and	w0, w0, #0xff
  418098:	cmp	w0, #0x0
  41809c:	b.ne	4181b4 <__fxstatat@plt+0x15654>  // b.any
  4180a0:	nop
  4180a4:	ldrb	w0, [sp, #198]
  4180a8:	cmp	w0, #0x0
  4180ac:	b.ne	418458 <__fxstatat@plt+0x158f8>  // b.any
  4180b0:	mov	w0, #0x1                   	// #1
  4180b4:	strb	w0, [sp, #191]
  4180b8:	ldr	w0, [sp, #76]
  4180bc:	cmp	w0, #0x2
  4180c0:	b.ne	418170 <__fxstatat@plt+0x15610>  // b.any
  4180c4:	ldrb	w0, [sp, #197]
  4180c8:	eor	w0, w0, #0x1
  4180cc:	and	w0, w0, #0xff
  4180d0:	cmp	w0, #0x0
  4180d4:	b.eq	418170 <__fxstatat@plt+0x15610>  // b.none
  4180d8:	ldr	x1, [sp, #224]
  4180dc:	ldr	x0, [sp, #96]
  4180e0:	cmp	x1, x0
  4180e4:	b.cs	4180fc <__fxstatat@plt+0x1559c>  // b.hs, b.nlast
  4180e8:	ldr	x1, [sp, #104]
  4180ec:	ldr	x0, [sp, #224]
  4180f0:	add	x0, x1, x0
  4180f4:	mov	w1, #0x27                  	// #39
  4180f8:	strb	w1, [x0]
  4180fc:	ldr	x0, [sp, #224]
  418100:	add	x0, x0, #0x1
  418104:	str	x0, [sp, #224]
  418108:	ldr	x1, [sp, #224]
  41810c:	ldr	x0, [sp, #96]
  418110:	cmp	x1, x0
  418114:	b.cs	41812c <__fxstatat@plt+0x155cc>  // b.hs, b.nlast
  418118:	ldr	x1, [sp, #104]
  41811c:	ldr	x0, [sp, #224]
  418120:	add	x0, x1, x0
  418124:	mov	w1, #0x24                  	// #36
  418128:	strb	w1, [x0]
  41812c:	ldr	x0, [sp, #224]
  418130:	add	x0, x0, #0x1
  418134:	str	x0, [sp, #224]
  418138:	ldr	x1, [sp, #224]
  41813c:	ldr	x0, [sp, #96]
  418140:	cmp	x1, x0
  418144:	b.cs	41815c <__fxstatat@plt+0x155fc>  // b.hs, b.nlast
  418148:	ldr	x1, [sp, #104]
  41814c:	ldr	x0, [sp, #224]
  418150:	add	x0, x1, x0
  418154:	mov	w1, #0x27                  	// #39
  418158:	strb	w1, [x0]
  41815c:	ldr	x0, [sp, #224]
  418160:	add	x0, x0, #0x1
  418164:	str	x0, [sp, #224]
  418168:	mov	w0, #0x1                   	// #1
  41816c:	strb	w0, [sp, #197]
  418170:	ldr	x1, [sp, #224]
  418174:	ldr	x0, [sp, #96]
  418178:	cmp	x1, x0
  41817c:	b.cs	418194 <__fxstatat@plt+0x15634>  // b.hs, b.nlast
  418180:	ldr	x1, [sp, #104]
  418184:	ldr	x0, [sp, #224]
  418188:	add	x0, x1, x0
  41818c:	mov	w1, #0x5c                  	// #92
  418190:	strb	w1, [x0]
  418194:	ldr	x0, [sp, #224]
  418198:	add	x0, x0, #0x1
  41819c:	str	x0, [sp, #224]
  4181a0:	b	4181b8 <__fxstatat@plt+0x15658>
  4181a4:	nop
  4181a8:	b	4181b8 <__fxstatat@plt+0x15658>
  4181ac:	nop
  4181b0:	b	4181b8 <__fxstatat@plt+0x15658>
  4181b4:	nop
  4181b8:	ldrb	w0, [sp, #197]
  4181bc:	cmp	w0, #0x0
  4181c0:	b.eq	41823c <__fxstatat@plt+0x156dc>  // b.none
  4181c4:	ldrb	w0, [sp, #191]
  4181c8:	eor	w0, w0, #0x1
  4181cc:	and	w0, w0, #0xff
  4181d0:	cmp	w0, #0x0
  4181d4:	b.eq	41823c <__fxstatat@plt+0x156dc>  // b.none
  4181d8:	ldr	x1, [sp, #224]
  4181dc:	ldr	x0, [sp, #96]
  4181e0:	cmp	x1, x0
  4181e4:	b.cs	4181fc <__fxstatat@plt+0x1569c>  // b.hs, b.nlast
  4181e8:	ldr	x1, [sp, #104]
  4181ec:	ldr	x0, [sp, #224]
  4181f0:	add	x0, x1, x0
  4181f4:	mov	w1, #0x27                  	// #39
  4181f8:	strb	w1, [x0]
  4181fc:	ldr	x0, [sp, #224]
  418200:	add	x0, x0, #0x1
  418204:	str	x0, [sp, #224]
  418208:	ldr	x1, [sp, #224]
  41820c:	ldr	x0, [sp, #96]
  418210:	cmp	x1, x0
  418214:	b.cs	41822c <__fxstatat@plt+0x156cc>  // b.hs, b.nlast
  418218:	ldr	x1, [sp, #104]
  41821c:	ldr	x0, [sp, #224]
  418220:	add	x0, x1, x0
  418224:	mov	w1, #0x27                  	// #39
  418228:	strb	w1, [x0]
  41822c:	ldr	x0, [sp, #224]
  418230:	add	x0, x0, #0x1
  418234:	str	x0, [sp, #224]
  418238:	strb	wzr, [sp, #197]
  41823c:	ldr	x1, [sp, #224]
  418240:	ldr	x0, [sp, #96]
  418244:	cmp	x1, x0
  418248:	b.cs	418260 <__fxstatat@plt+0x15700>  // b.hs, b.nlast
  41824c:	ldr	x1, [sp, #104]
  418250:	ldr	x0, [sp, #224]
  418254:	add	x0, x1, x0
  418258:	ldrb	w1, [sp, #194]
  41825c:	strb	w1, [x0]
  418260:	ldr	x0, [sp, #224]
  418264:	add	x0, x0, #0x1
  418268:	str	x0, [sp, #224]
  41826c:	ldrb	w0, [sp, #190]
  418270:	eor	w0, w0, #0x1
  418274:	and	w0, w0, #0xff
  418278:	cmp	w0, #0x0
  41827c:	b.eq	418284 <__fxstatat@plt+0x15724>  // b.none
  418280:	strb	wzr, [sp, #195]
  418284:	ldr	x0, [sp, #232]
  418288:	add	x0, x0, #0x1
  41828c:	str	x0, [sp, #232]
  418290:	ldr	x0, [sp, #80]
  418294:	cmn	x0, #0x1
  418298:	b.ne	4182bc <__fxstatat@plt+0x1575c>  // b.any
  41829c:	ldr	x1, [sp, #88]
  4182a0:	ldr	x0, [sp, #232]
  4182a4:	add	x0, x1, x0
  4182a8:	ldrb	w0, [x0]
  4182ac:	cmp	w0, #0x0
  4182b0:	cset	w0, ne  // ne = any
  4182b4:	and	w0, w0, #0xff
  4182b8:	b	4182d0 <__fxstatat@plt+0x15770>
  4182bc:	ldr	x1, [sp, #232]
  4182c0:	ldr	x0, [sp, #80]
  4182c4:	cmp	x1, x0
  4182c8:	cset	w0, ne  // ne = any
  4182cc:	and	w0, w0, #0xff
  4182d0:	cmp	w0, #0x0
  4182d4:	b.ne	4173dc <__fxstatat@plt+0x1487c>  // b.any
  4182d8:	ldr	x0, [sp, #224]
  4182dc:	cmp	x0, #0x0
  4182e0:	b.ne	4182fc <__fxstatat@plt+0x1579c>  // b.any
  4182e4:	ldr	w0, [sp, #76]
  4182e8:	cmp	w0, #0x2
  4182ec:	b.ne	4182fc <__fxstatat@plt+0x1579c>  // b.any
  4182f0:	ldrb	w0, [sp, #198]
  4182f4:	cmp	w0, #0x0
  4182f8:	b.ne	418460 <__fxstatat@plt+0x15900>  // b.any
  4182fc:	ldr	w0, [sp, #76]
  418300:	cmp	w0, #0x2
  418304:	b.ne	41838c <__fxstatat@plt+0x1582c>  // b.any
  418308:	ldrb	w0, [sp, #198]
  41830c:	eor	w0, w0, #0x1
  418310:	and	w0, w0, #0xff
  418314:	cmp	w0, #0x0
  418318:	b.eq	41838c <__fxstatat@plt+0x1582c>  // b.none
  41831c:	ldrb	w0, [sp, #196]
  418320:	cmp	w0, #0x0
  418324:	b.eq	41838c <__fxstatat@plt+0x1582c>  // b.none
  418328:	ldrb	w0, [sp, #195]
  41832c:	cmp	w0, #0x0
  418330:	b.eq	418364 <__fxstatat@plt+0x15804>  // b.none
  418334:	ldr	x0, [sp, #240]
  418338:	str	x0, [sp]
  41833c:	ldr	x7, [sp, #56]
  418340:	ldr	x6, [sp, #64]
  418344:	ldr	w5, [sp, #72]
  418348:	mov	w4, #0x5                   	// #5
  41834c:	ldr	x3, [sp, #80]
  418350:	ldr	x2, [sp, #88]
  418354:	ldr	x1, [sp, #216]
  418358:	ldr	x0, [sp, #104]
  41835c:	bl	4170b4 <__fxstatat@plt+0x14554>
  418360:	b	4184b8 <__fxstatat@plt+0x15958>
  418364:	ldr	x0, [sp, #96]
  418368:	cmp	x0, #0x0
  41836c:	b.ne	41838c <__fxstatat@plt+0x1582c>  // b.any
  418370:	ldr	x0, [sp, #216]
  418374:	cmp	x0, #0x0
  418378:	b.eq	41838c <__fxstatat@plt+0x1582c>  // b.none
  41837c:	ldr	x0, [sp, #216]
  418380:	str	x0, [sp, #96]
  418384:	str	xzr, [sp, #224]
  418388:	b	41712c <__fxstatat@plt+0x145cc>
  41838c:	ldr	x0, [sp, #208]
  418390:	cmp	x0, #0x0
  418394:	b.eq	418400 <__fxstatat@plt+0x158a0>  // b.none
  418398:	ldrb	w0, [sp, #198]
  41839c:	eor	w0, w0, #0x1
  4183a0:	and	w0, w0, #0xff
  4183a4:	cmp	w0, #0x0
  4183a8:	b.eq	418400 <__fxstatat@plt+0x158a0>  // b.none
  4183ac:	b	4183f0 <__fxstatat@plt+0x15890>
  4183b0:	ldr	x1, [sp, #224]
  4183b4:	ldr	x0, [sp, #96]
  4183b8:	cmp	x1, x0
  4183bc:	b.cs	4183d8 <__fxstatat@plt+0x15878>  // b.hs, b.nlast
  4183c0:	ldr	x1, [sp, #104]
  4183c4:	ldr	x0, [sp, #224]
  4183c8:	add	x0, x1, x0
  4183cc:	ldr	x1, [sp, #208]
  4183d0:	ldrb	w1, [x1]
  4183d4:	strb	w1, [x0]
  4183d8:	ldr	x0, [sp, #224]
  4183dc:	add	x0, x0, #0x1
  4183e0:	str	x0, [sp, #224]
  4183e4:	ldr	x0, [sp, #208]
  4183e8:	add	x0, x0, #0x1
  4183ec:	str	x0, [sp, #208]
  4183f0:	ldr	x0, [sp, #208]
  4183f4:	ldrb	w0, [x0]
  4183f8:	cmp	w0, #0x0
  4183fc:	b.ne	4183b0 <__fxstatat@plt+0x15850>  // b.any
  418400:	ldr	x1, [sp, #224]
  418404:	ldr	x0, [sp, #96]
  418408:	cmp	x1, x0
  41840c:	b.cs	418420 <__fxstatat@plt+0x158c0>  // b.hs, b.nlast
  418410:	ldr	x1, [sp, #104]
  418414:	ldr	x0, [sp, #224]
  418418:	add	x0, x1, x0
  41841c:	strb	wzr, [x0]
  418420:	ldr	x0, [sp, #224]
  418424:	b	4184b8 <__fxstatat@plt+0x15958>
  418428:	nop
  41842c:	b	418464 <__fxstatat@plt+0x15904>
  418430:	nop
  418434:	b	418464 <__fxstatat@plt+0x15904>
  418438:	nop
  41843c:	b	418464 <__fxstatat@plt+0x15904>
  418440:	nop
  418444:	b	418464 <__fxstatat@plt+0x15904>
  418448:	nop
  41844c:	b	418464 <__fxstatat@plt+0x15904>
  418450:	nop
  418454:	b	418464 <__fxstatat@plt+0x15904>
  418458:	nop
  41845c:	b	418464 <__fxstatat@plt+0x15904>
  418460:	nop
  418464:	ldr	w0, [sp, #76]
  418468:	cmp	w0, #0x2
  41846c:	b.ne	418484 <__fxstatat@plt+0x15924>  // b.any
  418470:	ldrb	w0, [sp, #199]
  418474:	cmp	w0, #0x0
  418478:	b.eq	418484 <__fxstatat@plt+0x15924>  // b.none
  41847c:	mov	w0, #0x4                   	// #4
  418480:	str	w0, [sp, #76]
  418484:	ldr	w0, [sp, #72]
  418488:	and	w1, w0, #0xfffffffd
  41848c:	ldr	x0, [sp, #240]
  418490:	str	x0, [sp]
  418494:	ldr	x7, [sp, #56]
  418498:	mov	x6, #0x0                   	// #0
  41849c:	mov	w5, w1
  4184a0:	ldr	w4, [sp, #76]
  4184a4:	ldr	x3, [sp, #80]
  4184a8:	ldr	x2, [sp, #88]
  4184ac:	ldr	x1, [sp, #96]
  4184b0:	ldr	x0, [sp, #104]
  4184b4:	bl	4170b4 <__fxstatat@plt+0x14554>
  4184b8:	ldr	x19, [sp, #32]
  4184bc:	ldp	x29, x30, [sp, #16]
  4184c0:	add	sp, sp, #0xf0
  4184c4:	ret
  4184c8:	sub	sp, sp, #0x70
  4184cc:	stp	x29, x30, [sp, #16]
  4184d0:	add	x29, sp, #0x10
  4184d4:	str	x0, [sp, #72]
  4184d8:	str	x1, [sp, #64]
  4184dc:	str	x2, [sp, #56]
  4184e0:	str	x3, [sp, #48]
  4184e4:	str	x4, [sp, #40]
  4184e8:	ldr	x0, [sp, #40]
  4184ec:	cmp	x0, #0x0
  4184f0:	b.eq	4184fc <__fxstatat@plt+0x1599c>  // b.none
  4184f4:	ldr	x0, [sp, #40]
  4184f8:	b	418504 <__fxstatat@plt+0x159a4>
  4184fc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418500:	add	x0, x0, #0x780
  418504:	str	x0, [sp, #104]
  418508:	bl	402ac0 <__errno_location@plt>
  41850c:	ldr	w0, [x0]
  418510:	str	w0, [sp, #100]
  418514:	ldr	x0, [sp, #104]
  418518:	ldr	w1, [x0]
  41851c:	ldr	x0, [sp, #104]
  418520:	ldr	w2, [x0, #4]
  418524:	ldr	x0, [sp, #104]
  418528:	add	x3, x0, #0x8
  41852c:	ldr	x0, [sp, #104]
  418530:	ldr	x4, [x0, #40]
  418534:	ldr	x0, [sp, #104]
  418538:	ldr	x0, [x0, #48]
  41853c:	str	x0, [sp]
  418540:	mov	x7, x4
  418544:	mov	x6, x3
  418548:	mov	w5, w2
  41854c:	mov	w4, w1
  418550:	ldr	x3, [sp, #48]
  418554:	ldr	x2, [sp, #56]
  418558:	ldr	x1, [sp, #64]
  41855c:	ldr	x0, [sp, #72]
  418560:	bl	4170b4 <__fxstatat@plt+0x14554>
  418564:	str	x0, [sp, #88]
  418568:	bl	402ac0 <__errno_location@plt>
  41856c:	mov	x1, x0
  418570:	ldr	w0, [sp, #100]
  418574:	str	w0, [x1]
  418578:	ldr	x0, [sp, #88]
  41857c:	ldp	x29, x30, [sp, #16]
  418580:	add	sp, sp, #0x70
  418584:	ret
  418588:	stp	x29, x30, [sp, #-48]!
  41858c:	mov	x29, sp
  418590:	str	x0, [sp, #40]
  418594:	str	x1, [sp, #32]
  418598:	str	x2, [sp, #24]
  41859c:	ldr	x3, [sp, #24]
  4185a0:	mov	x2, #0x0                   	// #0
  4185a4:	ldr	x1, [sp, #32]
  4185a8:	ldr	x0, [sp, #40]
  4185ac:	bl	4185b8 <__fxstatat@plt+0x15a58>
  4185b0:	ldp	x29, x30, [sp], #48
  4185b4:	ret
  4185b8:	sub	sp, sp, #0x60
  4185bc:	stp	x29, x30, [sp, #16]
  4185c0:	add	x29, sp, #0x10
  4185c4:	str	x0, [sp, #56]
  4185c8:	str	x1, [sp, #48]
  4185cc:	str	x2, [sp, #40]
  4185d0:	str	x3, [sp, #32]
  4185d4:	ldr	x0, [sp, #32]
  4185d8:	cmp	x0, #0x0
  4185dc:	b.eq	4185e8 <__fxstatat@plt+0x15a88>  // b.none
  4185e0:	ldr	x0, [sp, #32]
  4185e4:	b	4185f0 <__fxstatat@plt+0x15a90>
  4185e8:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4185ec:	add	x0, x0, #0x780
  4185f0:	str	x0, [sp, #88]
  4185f4:	bl	402ac0 <__errno_location@plt>
  4185f8:	ldr	w0, [x0]
  4185fc:	str	w0, [sp, #84]
  418600:	ldr	x0, [sp, #88]
  418604:	ldr	w0, [x0, #4]
  418608:	ldr	x1, [sp, #40]
  41860c:	cmp	x1, #0x0
  418610:	cset	w1, eq  // eq = none
  418614:	and	w1, w1, #0xff
  418618:	orr	w0, w0, w1
  41861c:	str	w0, [sp, #80]
  418620:	ldr	x0, [sp, #88]
  418624:	ldr	w1, [x0]
  418628:	ldr	x0, [sp, #88]
  41862c:	add	x2, x0, #0x8
  418630:	ldr	x0, [sp, #88]
  418634:	ldr	x3, [x0, #40]
  418638:	ldr	x0, [sp, #88]
  41863c:	ldr	x0, [x0, #48]
  418640:	str	x0, [sp]
  418644:	mov	x7, x3
  418648:	mov	x6, x2
  41864c:	ldr	w5, [sp, #80]
  418650:	mov	w4, w1
  418654:	ldr	x3, [sp, #48]
  418658:	ldr	x2, [sp, #56]
  41865c:	mov	x1, #0x0                   	// #0
  418660:	mov	x0, #0x0                   	// #0
  418664:	bl	4170b4 <__fxstatat@plt+0x14554>
  418668:	add	x0, x0, #0x1
  41866c:	str	x0, [sp, #72]
  418670:	ldr	x0, [sp, #72]
  418674:	bl	41a064 <__fxstatat@plt+0x17504>
  418678:	str	x0, [sp, #64]
  41867c:	ldr	x0, [sp, #88]
  418680:	ldr	w1, [x0]
  418684:	ldr	x0, [sp, #88]
  418688:	add	x2, x0, #0x8
  41868c:	ldr	x0, [sp, #88]
  418690:	ldr	x3, [x0, #40]
  418694:	ldr	x0, [sp, #88]
  418698:	ldr	x0, [x0, #48]
  41869c:	str	x0, [sp]
  4186a0:	mov	x7, x3
  4186a4:	mov	x6, x2
  4186a8:	ldr	w5, [sp, #80]
  4186ac:	mov	w4, w1
  4186b0:	ldr	x3, [sp, #48]
  4186b4:	ldr	x2, [sp, #56]
  4186b8:	ldr	x1, [sp, #72]
  4186bc:	ldr	x0, [sp, #64]
  4186c0:	bl	4170b4 <__fxstatat@plt+0x14554>
  4186c4:	bl	402ac0 <__errno_location@plt>
  4186c8:	mov	x1, x0
  4186cc:	ldr	w0, [sp, #84]
  4186d0:	str	w0, [x1]
  4186d4:	ldr	x0, [sp, #40]
  4186d8:	cmp	x0, #0x0
  4186dc:	b.eq	4186f0 <__fxstatat@plt+0x15b90>  // b.none
  4186e0:	ldr	x0, [sp, #72]
  4186e4:	sub	x1, x0, #0x1
  4186e8:	ldr	x0, [sp, #40]
  4186ec:	str	x1, [x0]
  4186f0:	ldr	x0, [sp, #64]
  4186f4:	ldp	x29, x30, [sp, #16]
  4186f8:	add	sp, sp, #0x60
  4186fc:	ret
  418700:	stp	x29, x30, [sp, #-32]!
  418704:	mov	x29, sp
  418708:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41870c:	add	x0, x0, #0x590
  418710:	ldr	x0, [x0]
  418714:	str	x0, [sp, #16]
  418718:	mov	w0, #0x1                   	// #1
  41871c:	str	w0, [sp, #28]
  418720:	b	418748 <__fxstatat@plt+0x15be8>
  418724:	ldrsw	x0, [sp, #28]
  418728:	lsl	x0, x0, #4
  41872c:	ldr	x1, [sp, #16]
  418730:	add	x0, x1, x0
  418734:	ldr	x0, [x0, #8]
  418738:	bl	4028f0 <free@plt>
  41873c:	ldr	w0, [sp, #28]
  418740:	add	w0, w0, #0x1
  418744:	str	w0, [sp, #28]
  418748:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41874c:	add	x0, x0, #0x578
  418750:	ldr	w0, [x0]
  418754:	ldr	w1, [sp, #28]
  418758:	cmp	w1, w0
  41875c:	b.lt	418724 <__fxstatat@plt+0x15bc4>  // b.tstop
  418760:	ldr	x0, [sp, #16]
  418764:	ldr	x1, [x0, #8]
  418768:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  41876c:	add	x0, x0, #0x7b8
  418770:	cmp	x1, x0
  418774:	b.eq	4187a8 <__fxstatat@plt+0x15c48>  // b.none
  418778:	ldr	x0, [sp, #16]
  41877c:	ldr	x0, [x0, #8]
  418780:	bl	4028f0 <free@plt>
  418784:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418788:	add	x0, x0, #0x580
  41878c:	mov	x1, #0x100                 	// #256
  418790:	str	x1, [x0]
  418794:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418798:	add	x0, x0, #0x580
  41879c:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xa00>
  4187a0:	add	x1, x1, #0x7b8
  4187a4:	str	x1, [x0, #8]
  4187a8:	ldr	x1, [sp, #16]
  4187ac:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4187b0:	add	x0, x0, #0x580
  4187b4:	cmp	x1, x0
  4187b8:	b.eq	4187d8 <__fxstatat@plt+0x15c78>  // b.none
  4187bc:	ldr	x0, [sp, #16]
  4187c0:	bl	4028f0 <free@plt>
  4187c4:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4187c8:	add	x0, x0, #0x590
  4187cc:	adrp	x1, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4187d0:	add	x1, x1, #0x580
  4187d4:	str	x1, [x0]
  4187d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4187dc:	add	x0, x0, #0x578
  4187e0:	mov	w1, #0x1                   	// #1
  4187e4:	str	w1, [x0]
  4187e8:	nop
  4187ec:	ldp	x29, x30, [sp], #32
  4187f0:	ret
  4187f4:	sub	sp, sp, #0x80
  4187f8:	stp	x29, x30, [sp, #16]
  4187fc:	add	x29, sp, #0x10
  418800:	str	w0, [sp, #60]
  418804:	str	x1, [sp, #48]
  418808:	str	x2, [sp, #40]
  41880c:	str	x3, [sp, #32]
  418810:	bl	402ac0 <__errno_location@plt>
  418814:	ldr	w0, [x0]
  418818:	str	w0, [sp, #108]
  41881c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418820:	add	x0, x0, #0x590
  418824:	ldr	x0, [x0]
  418828:	str	x0, [sp, #120]
  41882c:	ldr	w0, [sp, #60]
  418830:	cmp	w0, #0x0
  418834:	b.ge	41883c <__fxstatat@plt+0x15cdc>  // b.tcont
  418838:	bl	402820 <abort@plt>
  41883c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418840:	add	x0, x0, #0x578
  418844:	ldr	w0, [x0]
  418848:	ldr	w1, [sp, #60]
  41884c:	cmp	w1, w0
  418850:	b.lt	418948 <__fxstatat@plt+0x15de8>  // b.tstop
  418854:	ldr	x1, [sp, #120]
  418858:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41885c:	add	x0, x0, #0x580
  418860:	cmp	x1, x0
  418864:	cset	w0, eq  // eq = none
  418868:	strb	w0, [sp, #107]
  41886c:	mov	w0, #0x7ffffffe            	// #2147483646
  418870:	str	w0, [sp, #100]
  418874:	ldr	w1, [sp, #100]
  418878:	ldr	w0, [sp, #60]
  41887c:	cmp	w1, w0
  418880:	b.ge	418888 <__fxstatat@plt+0x15d28>  // b.tcont
  418884:	bl	41a260 <__fxstatat@plt+0x17700>
  418888:	ldrb	w0, [sp, #107]
  41888c:	cmp	w0, #0x0
  418890:	b.eq	41889c <__fxstatat@plt+0x15d3c>  // b.none
  418894:	mov	x0, #0x0                   	// #0
  418898:	b	4188a0 <__fxstatat@plt+0x15d40>
  41889c:	ldr	x0, [sp, #120]
  4188a0:	ldr	w1, [sp, #60]
  4188a4:	add	w1, w1, #0x1
  4188a8:	sxtw	x1, w1
  4188ac:	lsl	x1, x1, #4
  4188b0:	bl	41a0c0 <__fxstatat@plt+0x17560>
  4188b4:	str	x0, [sp, #120]
  4188b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4188bc:	add	x0, x0, #0x590
  4188c0:	ldr	x1, [sp, #120]
  4188c4:	str	x1, [x0]
  4188c8:	ldrb	w0, [sp, #107]
  4188cc:	cmp	w0, #0x0
  4188d0:	b.eq	4188e8 <__fxstatat@plt+0x15d88>  // b.none
  4188d4:	ldr	x2, [sp, #120]
  4188d8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4188dc:	add	x0, x0, #0x580
  4188e0:	ldp	x0, x1, [x0]
  4188e4:	stp	x0, x1, [x2]
  4188e8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  4188ec:	add	x0, x0, #0x578
  4188f0:	ldr	w0, [x0]
  4188f4:	sxtw	x0, w0
  4188f8:	lsl	x0, x0, #4
  4188fc:	ldr	x1, [sp, #120]
  418900:	add	x3, x1, x0
  418904:	ldr	w0, [sp, #60]
  418908:	add	w1, w0, #0x1
  41890c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418910:	add	x0, x0, #0x578
  418914:	ldr	w0, [x0]
  418918:	sub	w0, w1, w0
  41891c:	sxtw	x0, w0
  418920:	lsl	x0, x0, #4
  418924:	mov	x2, x0
  418928:	mov	w1, #0x0                   	// #0
  41892c:	mov	x0, x3
  418930:	bl	402740 <memset@plt>
  418934:	ldr	w0, [sp, #60]
  418938:	add	w1, w0, #0x1
  41893c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418940:	add	x0, x0, #0x578
  418944:	str	w1, [x0]
  418948:	ldrsw	x0, [sp, #60]
  41894c:	lsl	x0, x0, #4
  418950:	ldr	x1, [sp, #120]
  418954:	add	x0, x1, x0
  418958:	ldr	x0, [x0]
  41895c:	str	x0, [sp, #88]
  418960:	ldrsw	x0, [sp, #60]
  418964:	lsl	x0, x0, #4
  418968:	ldr	x1, [sp, #120]
  41896c:	add	x0, x1, x0
  418970:	ldr	x0, [x0, #8]
  418974:	str	x0, [sp, #112]
  418978:	ldr	x0, [sp, #32]
  41897c:	ldr	w0, [x0, #4]
  418980:	orr	w0, w0, #0x1
  418984:	str	w0, [sp, #84]
  418988:	ldr	x0, [sp, #32]
  41898c:	ldr	w1, [x0]
  418990:	ldr	x0, [sp, #32]
  418994:	add	x2, x0, #0x8
  418998:	ldr	x0, [sp, #32]
  41899c:	ldr	x3, [x0, #40]
  4189a0:	ldr	x0, [sp, #32]
  4189a4:	ldr	x0, [x0, #48]
  4189a8:	str	x0, [sp]
  4189ac:	mov	x7, x3
  4189b0:	mov	x6, x2
  4189b4:	ldr	w5, [sp, #84]
  4189b8:	mov	w4, w1
  4189bc:	ldr	x3, [sp, #40]
  4189c0:	ldr	x2, [sp, #48]
  4189c4:	ldr	x1, [sp, #88]
  4189c8:	ldr	x0, [sp, #112]
  4189cc:	bl	4170b4 <__fxstatat@plt+0x14554>
  4189d0:	str	x0, [sp, #72]
  4189d4:	ldr	x1, [sp, #88]
  4189d8:	ldr	x0, [sp, #72]
  4189dc:	cmp	x1, x0
  4189e0:	b.hi	418a90 <__fxstatat@plt+0x15f30>  // b.pmore
  4189e4:	ldr	x0, [sp, #72]
  4189e8:	add	x0, x0, #0x1
  4189ec:	str	x0, [sp, #88]
  4189f0:	ldrsw	x0, [sp, #60]
  4189f4:	lsl	x0, x0, #4
  4189f8:	ldr	x1, [sp, #120]
  4189fc:	add	x0, x1, x0
  418a00:	ldr	x1, [sp, #88]
  418a04:	str	x1, [x0]
  418a08:	ldr	x1, [sp, #112]
  418a0c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418a10:	add	x0, x0, #0x7b8
  418a14:	cmp	x1, x0
  418a18:	b.eq	418a24 <__fxstatat@plt+0x15ec4>  // b.none
  418a1c:	ldr	x0, [sp, #112]
  418a20:	bl	4028f0 <free@plt>
  418a24:	ldr	x0, [sp, #88]
  418a28:	bl	41a064 <__fxstatat@plt+0x17504>
  418a2c:	str	x0, [sp, #112]
  418a30:	ldrsw	x0, [sp, #60]
  418a34:	lsl	x0, x0, #4
  418a38:	ldr	x1, [sp, #120]
  418a3c:	add	x0, x1, x0
  418a40:	ldr	x1, [sp, #112]
  418a44:	str	x1, [x0, #8]
  418a48:	ldr	x0, [sp, #32]
  418a4c:	ldr	w1, [x0]
  418a50:	ldr	x0, [sp, #32]
  418a54:	add	x2, x0, #0x8
  418a58:	ldr	x0, [sp, #32]
  418a5c:	ldr	x3, [x0, #40]
  418a60:	ldr	x0, [sp, #32]
  418a64:	ldr	x0, [x0, #48]
  418a68:	str	x0, [sp]
  418a6c:	mov	x7, x3
  418a70:	mov	x6, x2
  418a74:	ldr	w5, [sp, #84]
  418a78:	mov	w4, w1
  418a7c:	ldr	x3, [sp, #40]
  418a80:	ldr	x2, [sp, #48]
  418a84:	ldr	x1, [sp, #88]
  418a88:	ldr	x0, [sp, #112]
  418a8c:	bl	4170b4 <__fxstatat@plt+0x14554>
  418a90:	bl	402ac0 <__errno_location@plt>
  418a94:	mov	x1, x0
  418a98:	ldr	w0, [sp, #108]
  418a9c:	str	w0, [x1]
  418aa0:	ldr	x0, [sp, #112]
  418aa4:	ldp	x29, x30, [sp, #16]
  418aa8:	add	sp, sp, #0x80
  418aac:	ret
  418ab0:	stp	x29, x30, [sp, #-32]!
  418ab4:	mov	x29, sp
  418ab8:	str	w0, [sp, #28]
  418abc:	str	x1, [sp, #16]
  418ac0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418ac4:	add	x3, x0, #0x780
  418ac8:	mov	x2, #0xffffffffffffffff    	// #-1
  418acc:	ldr	x1, [sp, #16]
  418ad0:	ldr	w0, [sp, #28]
  418ad4:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418ad8:	ldp	x29, x30, [sp], #32
  418adc:	ret
  418ae0:	stp	x29, x30, [sp, #-48]!
  418ae4:	mov	x29, sp
  418ae8:	str	w0, [sp, #44]
  418aec:	str	x1, [sp, #32]
  418af0:	str	x2, [sp, #24]
  418af4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418af8:	add	x3, x0, #0x780
  418afc:	ldr	x2, [sp, #24]
  418b00:	ldr	x1, [sp, #32]
  418b04:	ldr	w0, [sp, #44]
  418b08:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418b0c:	ldp	x29, x30, [sp], #48
  418b10:	ret
  418b14:	stp	x29, x30, [sp, #-32]!
  418b18:	mov	x29, sp
  418b1c:	str	x0, [sp, #24]
  418b20:	ldr	x1, [sp, #24]
  418b24:	mov	w0, #0x0                   	// #0
  418b28:	bl	418ab0 <__fxstatat@plt+0x15f50>
  418b2c:	ldp	x29, x30, [sp], #32
  418b30:	ret
  418b34:	stp	x29, x30, [sp, #-32]!
  418b38:	mov	x29, sp
  418b3c:	str	x0, [sp, #24]
  418b40:	str	x1, [sp, #16]
  418b44:	ldr	x2, [sp, #16]
  418b48:	ldr	x1, [sp, #24]
  418b4c:	mov	w0, #0x0                   	// #0
  418b50:	bl	418ae0 <__fxstatat@plt+0x15f80>
  418b54:	ldp	x29, x30, [sp], #32
  418b58:	ret
  418b5c:	stp	x29, x30, [sp, #-96]!
  418b60:	mov	x29, sp
  418b64:	str	w0, [sp, #28]
  418b68:	str	w1, [sp, #24]
  418b6c:	str	x2, [sp, #16]
  418b70:	add	x0, sp, #0x28
  418b74:	mov	x8, x0
  418b78:	ldr	w0, [sp, #24]
  418b7c:	bl	416f6c <__fxstatat@plt+0x1440c>
  418b80:	add	x0, sp, #0x28
  418b84:	mov	x3, x0
  418b88:	mov	x2, #0xffffffffffffffff    	// #-1
  418b8c:	ldr	x1, [sp, #16]
  418b90:	ldr	w0, [sp, #28]
  418b94:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418b98:	ldp	x29, x30, [sp], #96
  418b9c:	ret
  418ba0:	stp	x29, x30, [sp, #-112]!
  418ba4:	mov	x29, sp
  418ba8:	str	w0, [sp, #44]
  418bac:	str	w1, [sp, #40]
  418bb0:	str	x2, [sp, #32]
  418bb4:	str	x3, [sp, #24]
  418bb8:	add	x0, sp, #0x38
  418bbc:	mov	x8, x0
  418bc0:	ldr	w0, [sp, #40]
  418bc4:	bl	416f6c <__fxstatat@plt+0x1440c>
  418bc8:	add	x0, sp, #0x38
  418bcc:	mov	x3, x0
  418bd0:	ldr	x2, [sp, #24]
  418bd4:	ldr	x1, [sp, #32]
  418bd8:	ldr	w0, [sp, #44]
  418bdc:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418be0:	ldp	x29, x30, [sp], #112
  418be4:	ret
  418be8:	stp	x29, x30, [sp, #-32]!
  418bec:	mov	x29, sp
  418bf0:	str	w0, [sp, #28]
  418bf4:	str	x1, [sp, #16]
  418bf8:	ldr	x2, [sp, #16]
  418bfc:	ldr	w1, [sp, #28]
  418c00:	mov	w0, #0x0                   	// #0
  418c04:	bl	418b5c <__fxstatat@plt+0x15ffc>
  418c08:	ldp	x29, x30, [sp], #32
  418c0c:	ret
  418c10:	stp	x29, x30, [sp, #-48]!
  418c14:	mov	x29, sp
  418c18:	str	w0, [sp, #44]
  418c1c:	str	x1, [sp, #32]
  418c20:	str	x2, [sp, #24]
  418c24:	ldr	x3, [sp, #24]
  418c28:	ldr	x2, [sp, #32]
  418c2c:	ldr	w1, [sp, #44]
  418c30:	mov	w0, #0x0                   	// #0
  418c34:	bl	418ba0 <__fxstatat@plt+0x16040>
  418c38:	ldp	x29, x30, [sp], #48
  418c3c:	ret
  418c40:	stp	x29, x30, [sp, #-112]!
  418c44:	mov	x29, sp
  418c48:	str	x0, [sp, #40]
  418c4c:	str	x1, [sp, #32]
  418c50:	strb	w2, [sp, #31]
  418c54:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418c58:	add	x1, x0, #0x780
  418c5c:	add	x0, sp, #0x38
  418c60:	ldp	x2, x3, [x1]
  418c64:	stp	x2, x3, [x0]
  418c68:	ldp	x2, x3, [x1, #16]
  418c6c:	stp	x2, x3, [x0, #16]
  418c70:	ldp	x2, x3, [x1, #32]
  418c74:	stp	x2, x3, [x0, #32]
  418c78:	ldr	x1, [x1, #48]
  418c7c:	str	x1, [x0, #48]
  418c80:	add	x0, sp, #0x38
  418c84:	mov	w2, #0x1                   	// #1
  418c88:	ldrb	w1, [sp, #31]
  418c8c:	bl	416dfc <__fxstatat@plt+0x1429c>
  418c90:	add	x0, sp, #0x38
  418c94:	mov	x3, x0
  418c98:	ldr	x2, [sp, #32]
  418c9c:	ldr	x1, [sp, #40]
  418ca0:	mov	w0, #0x0                   	// #0
  418ca4:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418ca8:	ldp	x29, x30, [sp], #112
  418cac:	ret
  418cb0:	stp	x29, x30, [sp, #-32]!
  418cb4:	mov	x29, sp
  418cb8:	str	x0, [sp, #24]
  418cbc:	strb	w1, [sp, #23]
  418cc0:	ldrb	w2, [sp, #23]
  418cc4:	mov	x1, #0xffffffffffffffff    	// #-1
  418cc8:	ldr	x0, [sp, #24]
  418ccc:	bl	418c40 <__fxstatat@plt+0x160e0>
  418cd0:	ldp	x29, x30, [sp], #32
  418cd4:	ret
  418cd8:	stp	x29, x30, [sp, #-32]!
  418cdc:	mov	x29, sp
  418ce0:	str	x0, [sp, #24]
  418ce4:	mov	w1, #0x3a                  	// #58
  418ce8:	ldr	x0, [sp, #24]
  418cec:	bl	418cb0 <__fxstatat@plt+0x16150>
  418cf0:	ldp	x29, x30, [sp], #32
  418cf4:	ret
  418cf8:	stp	x29, x30, [sp, #-32]!
  418cfc:	mov	x29, sp
  418d00:	str	x0, [sp, #24]
  418d04:	str	x1, [sp, #16]
  418d08:	mov	w2, #0x3a                  	// #58
  418d0c:	ldr	x1, [sp, #16]
  418d10:	ldr	x0, [sp, #24]
  418d14:	bl	418c40 <__fxstatat@plt+0x160e0>
  418d18:	ldp	x29, x30, [sp], #32
  418d1c:	ret
  418d20:	stp	x29, x30, [sp, #-160]!
  418d24:	mov	x29, sp
  418d28:	str	w0, [sp, #92]
  418d2c:	str	w1, [sp, #88]
  418d30:	str	x2, [sp, #80]
  418d34:	add	x0, sp, #0x10
  418d38:	mov	x8, x0
  418d3c:	ldr	w0, [sp, #88]
  418d40:	bl	416f6c <__fxstatat@plt+0x1440c>
  418d44:	add	x0, sp, #0x68
  418d48:	add	x1, sp, #0x10
  418d4c:	ldp	x2, x3, [x1]
  418d50:	stp	x2, x3, [x0]
  418d54:	ldp	x2, x3, [x1, #16]
  418d58:	stp	x2, x3, [x0, #16]
  418d5c:	ldp	x2, x3, [x1, #32]
  418d60:	stp	x2, x3, [x0, #32]
  418d64:	ldr	x1, [x1, #48]
  418d68:	str	x1, [x0, #48]
  418d6c:	add	x0, sp, #0x68
  418d70:	mov	w2, #0x1                   	// #1
  418d74:	mov	w1, #0x3a                  	// #58
  418d78:	bl	416dfc <__fxstatat@plt+0x1429c>
  418d7c:	add	x0, sp, #0x68
  418d80:	mov	x3, x0
  418d84:	mov	x2, #0xffffffffffffffff    	// #-1
  418d88:	ldr	x1, [sp, #80]
  418d8c:	ldr	w0, [sp, #92]
  418d90:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418d94:	ldp	x29, x30, [sp], #160
  418d98:	ret
  418d9c:	stp	x29, x30, [sp, #-48]!
  418da0:	mov	x29, sp
  418da4:	str	w0, [sp, #44]
  418da8:	str	x1, [sp, #32]
  418dac:	str	x2, [sp, #24]
  418db0:	str	x3, [sp, #16]
  418db4:	mov	x4, #0xffffffffffffffff    	// #-1
  418db8:	ldr	x3, [sp, #16]
  418dbc:	ldr	x2, [sp, #24]
  418dc0:	ldr	x1, [sp, #32]
  418dc4:	ldr	w0, [sp, #44]
  418dc8:	bl	418dd4 <__fxstatat@plt+0x16274>
  418dcc:	ldp	x29, x30, [sp], #48
  418dd0:	ret
  418dd4:	stp	x29, x30, [sp, #-128]!
  418dd8:	mov	x29, sp
  418ddc:	str	w0, [sp, #60]
  418de0:	str	x1, [sp, #48]
  418de4:	str	x2, [sp, #40]
  418de8:	str	x3, [sp, #32]
  418dec:	str	x4, [sp, #24]
  418df0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xa00>
  418df4:	add	x1, x0, #0x780
  418df8:	add	x0, sp, #0x48
  418dfc:	ldp	x2, x3, [x1]
  418e00:	stp	x2, x3, [x0]
  418e04:	ldp	x2, x3, [x1, #16]
  418e08:	stp	x2, x3, [x0, #16]
  418e0c:	ldp	x2, x3, [x1, #32]
  418e10:	stp	x2, x3, [x0, #32]
  418e14:	ldr	x1, [x1, #48]
  418e18:	str	x1, [x0, #48]
  418e1c:	add	x0, sp, #0x48
  418e20:	ldr	x2, [sp, #40]
  418e24:	ldr	x1, [sp, #48]
  418e28:	bl	416ef4 <__fxstatat@plt+0x14394>
  418e2c:	add	x0, sp, #0x48
  418e30:	mov	x3, x0
  418e34:	ldr	x2, [sp, #24]
  418e38:	ldr	x1, [sp, #32]
  418e3c:	ldr	w0, [sp, #60]
  418e40:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418e44:	ldp	x29, x30, [sp], #128
  418e48:	ret
  418e4c:	stp	x29, x30, [sp, #-48]!
  418e50:	mov	x29, sp
  418e54:	str	x0, [sp, #40]
  418e58:	str	x1, [sp, #32]
  418e5c:	str	x2, [sp, #24]
  418e60:	ldr	x3, [sp, #24]
  418e64:	ldr	x2, [sp, #32]
  418e68:	ldr	x1, [sp, #40]
  418e6c:	mov	w0, #0x0                   	// #0
  418e70:	bl	418d9c <__fxstatat@plt+0x1623c>
  418e74:	ldp	x29, x30, [sp], #48
  418e78:	ret
  418e7c:	stp	x29, x30, [sp, #-48]!
  418e80:	mov	x29, sp
  418e84:	str	x0, [sp, #40]
  418e88:	str	x1, [sp, #32]
  418e8c:	str	x2, [sp, #24]
  418e90:	str	x3, [sp, #16]
  418e94:	ldr	x4, [sp, #16]
  418e98:	ldr	x3, [sp, #24]
  418e9c:	ldr	x2, [sp, #32]
  418ea0:	ldr	x1, [sp, #40]
  418ea4:	mov	w0, #0x0                   	// #0
  418ea8:	bl	418dd4 <__fxstatat@plt+0x16274>
  418eac:	ldp	x29, x30, [sp], #48
  418eb0:	ret
  418eb4:	stp	x29, x30, [sp, #-48]!
  418eb8:	mov	x29, sp
  418ebc:	str	w0, [sp, #44]
  418ec0:	str	x1, [sp, #32]
  418ec4:	str	x2, [sp, #24]
  418ec8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  418ecc:	add	x3, x0, #0x598
  418ed0:	ldr	x2, [sp, #24]
  418ed4:	ldr	x1, [sp, #32]
  418ed8:	ldr	w0, [sp, #44]
  418edc:	bl	4187f4 <__fxstatat@plt+0x15c94>
  418ee0:	ldp	x29, x30, [sp], #48
  418ee4:	ret
  418ee8:	stp	x29, x30, [sp, #-32]!
  418eec:	mov	x29, sp
  418ef0:	str	x0, [sp, #24]
  418ef4:	str	x1, [sp, #16]
  418ef8:	ldr	x2, [sp, #16]
  418efc:	ldr	x1, [sp, #24]
  418f00:	mov	w0, #0x0                   	// #0
  418f04:	bl	418eb4 <__fxstatat@plt+0x16354>
  418f08:	ldp	x29, x30, [sp], #32
  418f0c:	ret
  418f10:	stp	x29, x30, [sp, #-32]!
  418f14:	mov	x29, sp
  418f18:	str	w0, [sp, #28]
  418f1c:	str	x1, [sp, #16]
  418f20:	mov	x2, #0xffffffffffffffff    	// #-1
  418f24:	ldr	x1, [sp, #16]
  418f28:	ldr	w0, [sp, #28]
  418f2c:	bl	418eb4 <__fxstatat@plt+0x16354>
  418f30:	ldp	x29, x30, [sp], #32
  418f34:	ret
  418f38:	stp	x29, x30, [sp, #-32]!
  418f3c:	mov	x29, sp
  418f40:	str	x0, [sp, #24]
  418f44:	ldr	x1, [sp, #24]
  418f48:	mov	w0, #0x0                   	// #0
  418f4c:	bl	418f10 <__fxstatat@plt+0x163b0>
  418f50:	ldp	x29, x30, [sp], #32
  418f54:	ret
  418f58:	stp	x29, x30, [sp, #-32]!
  418f5c:	mov	x29, sp
  418f60:	str	x0, [sp, #24]
  418f64:	str	x1, [sp, #16]
  418f68:	ldr	x3, [sp, #16]
  418f6c:	mov	w2, #0xffffff9c            	// #-100
  418f70:	ldr	x1, [sp, #24]
  418f74:	mov	w0, #0xffffff9c            	// #-100
  418f78:	bl	418f88 <__fxstatat@plt+0x16428>
  418f7c:	and	w0, w0, #0xff
  418f80:	ldp	x29, x30, [sp], #32
  418f84:	ret
  418f88:	stp	x29, x30, [sp, #-384]!
  418f8c:	mov	x29, sp
  418f90:	str	w0, [sp, #44]
  418f94:	str	x1, [sp, #32]
  418f98:	str	w2, [sp, #40]
  418f9c:	str	x3, [sp, #24]
  418fa0:	ldr	x0, [sp, #32]
  418fa4:	bl	40f678 <__fxstatat@plt+0xcb18>
  418fa8:	str	x0, [sp, #368]
  418fac:	ldr	x0, [sp, #24]
  418fb0:	bl	40f678 <__fxstatat@plt+0xcb18>
  418fb4:	str	x0, [sp, #360]
  418fb8:	ldr	x0, [sp, #368]
  418fbc:	bl	40f714 <__fxstatat@plt+0xcbb4>
  418fc0:	str	x0, [sp, #352]
  418fc4:	ldr	x0, [sp, #360]
  418fc8:	bl	40f714 <__fxstatat@plt+0xcbb4>
  418fcc:	str	x0, [sp, #344]
  418fd0:	ldr	x1, [sp, #352]
  418fd4:	ldr	x0, [sp, #344]
  418fd8:	cmp	x1, x0
  418fdc:	b.ne	419000 <__fxstatat@plt+0x164a0>  // b.any
  418fe0:	ldr	x2, [sp, #344]
  418fe4:	ldr	x1, [sp, #360]
  418fe8:	ldr	x0, [sp, #368]
  418fec:	bl	402860 <memcmp@plt>
  418ff0:	cmp	w0, #0x0
  418ff4:	b.ne	419000 <__fxstatat@plt+0x164a0>  // b.any
  418ff8:	mov	w0, #0x1                   	// #1
  418ffc:	b	419004 <__fxstatat@plt+0x164a4>
  419000:	mov	w0, #0x0                   	// #0
  419004:	strb	w0, [sp, #343]
  419008:	ldrb	w0, [sp, #343]
  41900c:	and	w0, w0, #0x1
  419010:	strb	w0, [sp, #343]
  419014:	ldrb	w0, [sp, #343]
  419018:	strb	w0, [sp, #342]
  41901c:	strb	wzr, [sp, #383]
  419020:	ldrb	w0, [sp, #342]
  419024:	cmp	w0, #0x0
  419028:	b.eq	419110 <__fxstatat@plt+0x165b0>  // b.none
  41902c:	ldr	x0, [sp, #32]
  419030:	bl	41c72c <_obstack_memory_used@@Base+0xcdc>
  419034:	str	x0, [sp, #328]
  419038:	mov	w0, #0x100                 	// #256
  41903c:	str	w0, [sp, #324]
  419040:	add	x0, sp, #0x38
  419044:	ldr	w3, [sp, #324]
  419048:	mov	x2, x0
  41904c:	ldr	x1, [sp, #328]
  419050:	ldr	w0, [sp, #44]
  419054:	bl	420640 <_obstack_memory_used@@Base+0x4bf0>
  419058:	cmp	w0, #0x0
  41905c:	b.eq	41907c <__fxstatat@plt+0x1651c>  // b.none
  419060:	bl	402ac0 <__errno_location@plt>
  419064:	ldr	w1, [x0]
  419068:	ldr	x3, [sp, #328]
  41906c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419070:	add	x2, x0, #0x988
  419074:	mov	w0, #0x1                   	// #1
  419078:	bl	402550 <error@plt>
  41907c:	ldr	x0, [sp, #328]
  419080:	bl	4028f0 <free@plt>
  419084:	ldr	x0, [sp, #24]
  419088:	bl	41c72c <_obstack_memory_used@@Base+0xcdc>
  41908c:	str	x0, [sp, #312]
  419090:	add	x0, sp, #0xb8
  419094:	ldr	w3, [sp, #324]
  419098:	mov	x2, x0
  41909c:	ldr	x1, [sp, #312]
  4190a0:	ldr	w0, [sp, #40]
  4190a4:	bl	420640 <_obstack_memory_used@@Base+0x4bf0>
  4190a8:	cmp	w0, #0x0
  4190ac:	b.eq	4190cc <__fxstatat@plt+0x1656c>  // b.none
  4190b0:	bl	402ac0 <__errno_location@plt>
  4190b4:	ldr	w1, [x0]
  4190b8:	ldr	x3, [sp, #312]
  4190bc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4190c0:	add	x2, x0, #0x988
  4190c4:	mov	w0, #0x1                   	// #1
  4190c8:	bl	402550 <error@plt>
  4190cc:	ldr	x1, [sp, #64]
  4190d0:	ldr	x0, [sp, #192]
  4190d4:	cmp	x1, x0
  4190d8:	b.ne	4190f4 <__fxstatat@plt+0x16594>  // b.any
  4190dc:	ldr	x1, [sp, #56]
  4190e0:	ldr	x0, [sp, #184]
  4190e4:	cmp	x1, x0
  4190e8:	b.ne	4190f4 <__fxstatat@plt+0x16594>  // b.any
  4190ec:	mov	w0, #0x1                   	// #1
  4190f0:	b	4190f8 <__fxstatat@plt+0x16598>
  4190f4:	mov	w0, #0x0                   	// #0
  4190f8:	strb	w0, [sp, #383]
  4190fc:	ldrb	w0, [sp, #383]
  419100:	and	w0, w0, #0x1
  419104:	strb	w0, [sp, #383]
  419108:	ldr	x0, [sp, #312]
  41910c:	bl	4028f0 <free@plt>
  419110:	ldrb	w0, [sp, #383]
  419114:	ldp	x29, x30, [sp], #384
  419118:	ret
  41911c:	stp	x29, x30, [sp, #-32]!
  419120:	mov	x29, sp
  419124:	str	x0, [sp, #24]
  419128:	bl	402ac0 <__errno_location@plt>
  41912c:	mov	x1, x0
  419130:	mov	w0, #0x5f                  	// #95
  419134:	str	w0, [x1]
  419138:	mov	w0, #0xffffffff            	// #-1
  41913c:	ldp	x29, x30, [sp], #32
  419140:	ret
  419144:	sub	sp, sp, #0x10
  419148:	str	x0, [sp, #8]
  41914c:	nop
  419150:	add	sp, sp, #0x10
  419154:	ret
  419158:	stp	x29, x30, [sp, #-32]!
  41915c:	mov	x29, sp
  419160:	str	x0, [sp, #24]
  419164:	bl	402ac0 <__errno_location@plt>
  419168:	mov	x1, x0
  41916c:	mov	w0, #0x5f                  	// #95
  419170:	str	w0, [x1]
  419174:	mov	w0, #0xffffffff            	// #-1
  419178:	ldp	x29, x30, [sp], #32
  41917c:	ret
  419180:	stp	x29, x30, [sp, #-32]!
  419184:	mov	x29, sp
  419188:	str	x0, [sp, #24]
  41918c:	bl	402ac0 <__errno_location@plt>
  419190:	mov	x1, x0
  419194:	mov	w0, #0x5f                  	// #95
  419198:	str	w0, [x1]
  41919c:	mov	w0, #0xffffffff            	// #-1
  4191a0:	ldp	x29, x30, [sp], #32
  4191a4:	ret
  4191a8:	stp	x29, x30, [sp, #-48]!
  4191ac:	mov	x29, sp
  4191b0:	str	x0, [sp, #40]
  4191b4:	str	w1, [sp, #36]
  4191b8:	str	x2, [sp, #24]
  4191bc:	bl	402ac0 <__errno_location@plt>
  4191c0:	mov	x1, x0
  4191c4:	mov	w0, #0x5f                  	// #95
  4191c8:	str	w0, [x1]
  4191cc:	mov	w0, #0xffffffff            	// #-1
  4191d0:	ldp	x29, x30, [sp], #48
  4191d4:	ret
  4191d8:	stp	x29, x30, [sp, #-32]!
  4191dc:	mov	x29, sp
  4191e0:	str	x0, [sp, #24]
  4191e4:	str	x1, [sp, #16]
  4191e8:	bl	402ac0 <__errno_location@plt>
  4191ec:	mov	x1, x0
  4191f0:	mov	w0, #0x5f                  	// #95
  4191f4:	str	w0, [x1]
  4191f8:	mov	w0, #0xffffffff            	// #-1
  4191fc:	ldp	x29, x30, [sp], #32
  419200:	ret
  419204:	stp	x29, x30, [sp, #-32]!
  419208:	mov	x29, sp
  41920c:	str	x0, [sp, #24]
  419210:	str	x1, [sp, #16]
  419214:	bl	402ac0 <__errno_location@plt>
  419218:	mov	x1, x0
  41921c:	mov	w0, #0x5f                  	// #95
  419220:	str	w0, [x1]
  419224:	mov	w0, #0xffffffff            	// #-1
  419228:	ldp	x29, x30, [sp], #32
  41922c:	ret
  419230:	stp	x29, x30, [sp, #-32]!
  419234:	mov	x29, sp
  419238:	str	w0, [sp, #28]
  41923c:	str	x1, [sp, #16]
  419240:	bl	402ac0 <__errno_location@plt>
  419244:	mov	x1, x0
  419248:	mov	w0, #0x5f                  	// #95
  41924c:	str	w0, [x1]
  419250:	mov	w0, #0xffffffff            	// #-1
  419254:	ldp	x29, x30, [sp], #32
  419258:	ret
  41925c:	stp	x29, x30, [sp, #-32]!
  419260:	mov	x29, sp
  419264:	str	x0, [sp, #24]
  419268:	str	x1, [sp, #16]
  41926c:	bl	402ac0 <__errno_location@plt>
  419270:	mov	x1, x0
  419274:	mov	w0, #0x5f                  	// #95
  419278:	str	w0, [x1]
  41927c:	mov	w0, #0xffffffff            	// #-1
  419280:	ldp	x29, x30, [sp], #32
  419284:	ret
  419288:	stp	x29, x30, [sp, #-32]!
  41928c:	mov	x29, sp
  419290:	str	x0, [sp, #24]
  419294:	str	x1, [sp, #16]
  419298:	bl	402ac0 <__errno_location@plt>
  41929c:	mov	x1, x0
  4192a0:	mov	w0, #0x5f                  	// #95
  4192a4:	str	w0, [x1]
  4192a8:	mov	w0, #0xffffffff            	// #-1
  4192ac:	ldp	x29, x30, [sp], #32
  4192b0:	ret
  4192b4:	stp	x29, x30, [sp, #-32]!
  4192b8:	mov	x29, sp
  4192bc:	str	w0, [sp, #28]
  4192c0:	str	x1, [sp, #16]
  4192c4:	bl	402ac0 <__errno_location@plt>
  4192c8:	mov	x1, x0
  4192cc:	mov	w0, #0x5f                  	// #95
  4192d0:	str	w0, [x1]
  4192d4:	mov	w0, #0xffffffff            	// #-1
  4192d8:	ldp	x29, x30, [sp], #32
  4192dc:	ret
  4192e0:	stp	x29, x30, [sp, #-32]!
  4192e4:	mov	x29, sp
  4192e8:	str	x0, [sp, #24]
  4192ec:	bl	402ac0 <__errno_location@plt>
  4192f0:	mov	x1, x0
  4192f4:	mov	w0, #0x5f                  	// #95
  4192f8:	str	w0, [x1]
  4192fc:	mov	w0, #0xffffffff            	// #-1
  419300:	ldp	x29, x30, [sp], #32
  419304:	ret
  419308:	stp	x29, x30, [sp, #-32]!
  41930c:	mov	x29, sp
  419310:	str	x0, [sp, #24]
  419314:	bl	402ac0 <__errno_location@plt>
  419318:	mov	x1, x0
  41931c:	mov	w0, #0x5f                  	// #95
  419320:	str	w0, [x1]
  419324:	mov	w0, #0xffffffff            	// #-1
  419328:	ldp	x29, x30, [sp], #32
  41932c:	ret
  419330:	stp	x29, x30, [sp, #-32]!
  419334:	mov	x29, sp
  419338:	str	x0, [sp, #24]
  41933c:	bl	402ac0 <__errno_location@plt>
  419340:	mov	x1, x0
  419344:	mov	w0, #0x5f                  	// #95
  419348:	str	w0, [x1]
  41934c:	mov	w0, #0xffffffff            	// #-1
  419350:	ldp	x29, x30, [sp], #32
  419354:	ret
  419358:	stp	x29, x30, [sp, #-48]!
  41935c:	mov	x29, sp
  419360:	str	x0, [sp, #40]
  419364:	str	x1, [sp, #32]
  419368:	strh	w2, [sp, #30]
  41936c:	str	x3, [sp, #16]
  419370:	bl	402ac0 <__errno_location@plt>
  419374:	mov	x1, x0
  419378:	mov	w0, #0x5f                  	// #95
  41937c:	str	w0, [x1]
  419380:	mov	w0, #0xffffffff            	// #-1
  419384:	ldp	x29, x30, [sp], #48
  419388:	ret
  41938c:	stp	x29, x30, [sp, #-32]!
  419390:	mov	x29, sp
  419394:	str	x0, [sp, #24]
  419398:	bl	402ac0 <__errno_location@plt>
  41939c:	mov	x1, x0
  4193a0:	mov	w0, #0x5f                  	// #95
  4193a4:	str	w0, [x1]
  4193a8:	mov	w0, #0x0                   	// #0
  4193ac:	ldp	x29, x30, [sp], #32
  4193b0:	ret
  4193b4:	stp	x29, x30, [sp, #-32]!
  4193b8:	mov	x29, sp
  4193bc:	str	x0, [sp, #24]
  4193c0:	str	x1, [sp, #16]
  4193c4:	bl	402ac0 <__errno_location@plt>
  4193c8:	mov	x1, x0
  4193cc:	mov	w0, #0x5f                  	// #95
  4193d0:	str	w0, [x1]
  4193d4:	mov	w0, #0xffffffff            	// #-1
  4193d8:	ldp	x29, x30, [sp], #32
  4193dc:	ret
  4193e0:	sub	sp, sp, #0x10
  4193e4:	str	x0, [sp, #8]
  4193e8:	ldr	x0, [sp, #8]
  4193ec:	ldr	x0, [x0, #80]
  4193f0:	add	sp, sp, #0x10
  4193f4:	ret
  4193f8:	sub	sp, sp, #0x10
  4193fc:	str	x0, [sp, #8]
  419400:	ldr	x0, [sp, #8]
  419404:	ldr	x0, [x0, #112]
  419408:	add	sp, sp, #0x10
  41940c:	ret
  419410:	sub	sp, sp, #0x10
  419414:	str	x0, [sp, #8]
  419418:	ldr	x0, [sp, #8]
  41941c:	ldr	x0, [x0, #96]
  419420:	add	sp, sp, #0x10
  419424:	ret
  419428:	sub	sp, sp, #0x10
  41942c:	str	x0, [sp, #8]
  419430:	mov	x0, #0x0                   	// #0
  419434:	add	sp, sp, #0x10
  419438:	ret
  41943c:	sub	sp, sp, #0x10
  419440:	str	x0, [sp, #8]
  419444:	ldr	x0, [sp, #8]
  419448:	ldp	x0, x1, [x0, #72]
  41944c:	add	sp, sp, #0x10
  419450:	ret
  419454:	sub	sp, sp, #0x10
  419458:	str	x0, [sp, #8]
  41945c:	ldr	x0, [sp, #8]
  419460:	ldp	x0, x1, [x0, #104]
  419464:	add	sp, sp, #0x10
  419468:	ret
  41946c:	sub	sp, sp, #0x10
  419470:	str	x0, [sp, #8]
  419474:	ldr	x0, [sp, #8]
  419478:	ldp	x0, x1, [x0, #88]
  41947c:	add	sp, sp, #0x10
  419480:	ret
  419484:	sub	sp, sp, #0x20
  419488:	str	x0, [sp, #8]
  41948c:	mov	x0, #0xffffffffffffffff    	// #-1
  419490:	str	x0, [sp, #16]
  419494:	mov	x0, #0xffffffffffffffff    	// #-1
  419498:	str	x0, [sp, #24]
  41949c:	ldp	x0, x1, [sp, #16]
  4194a0:	add	sp, sp, #0x20
  4194a4:	ret
  4194a8:	sub	sp, sp, #0x10
  4194ac:	str	w0, [sp, #12]
  4194b0:	str	x1, [sp]
  4194b4:	ldr	w0, [sp, #12]
  4194b8:	add	sp, sp, #0x10
  4194bc:	ret
  4194c0:	sub	sp, sp, #0x20
  4194c4:	str	x0, [sp, #8]
  4194c8:	str	x1, [sp]
  4194cc:	ldr	x0, [sp, #8]
  4194d0:	str	x0, [sp, #16]
  4194d4:	ldr	x0, [sp]
  4194d8:	str	x0, [sp, #24]
  4194dc:	ldp	x0, x1, [sp, #16]
  4194e0:	add	sp, sp, #0x20
  4194e4:	ret
  4194e8:	sub	sp, sp, #0x20
  4194ec:	stp	x0, x1, [sp, #16]
  4194f0:	stp	x2, x3, [sp]
  4194f4:	ldr	x1, [sp, #16]
  4194f8:	ldr	x0, [sp]
  4194fc:	cmp	x1, x0
  419500:	b.ge	41950c <__fxstatat@plt+0x169ac>  // b.tcont
  419504:	mov	w0, #0xffffffff            	// #-1
  419508:	b	419574 <__fxstatat@plt+0x16a14>
  41950c:	ldr	x1, [sp, #16]
  419510:	ldr	x0, [sp]
  419514:	cmp	x1, x0
  419518:	b.le	419524 <__fxstatat@plt+0x169c4>
  41951c:	mov	w0, #0x1                   	// #1
  419520:	b	419574 <__fxstatat@plt+0x16a14>
  419524:	ldr	x0, [sp, #24]
  419528:	cmn	x0, #0x1
  41952c:	b.lt	419544 <__fxstatat@plt+0x169e4>  // b.tstop
  419530:	ldr	x1, [sp, #24]
  419534:	mov	x0, #0x9400                	// #37888
  419538:	movk	x0, #0x7735, lsl #16
  41953c:	cmp	x1, x0
  419540:	b.le	419544 <__fxstatat@plt+0x169e4>
  419544:	ldr	x0, [sp, #8]
  419548:	cmn	x0, #0x1
  41954c:	b.lt	419564 <__fxstatat@plt+0x16a04>  // b.tstop
  419550:	ldr	x1, [sp, #8]
  419554:	mov	x0, #0x9400                	// #37888
  419558:	movk	x0, #0x7735, lsl #16
  41955c:	cmp	x1, x0
  419560:	b.le	419564 <__fxstatat@plt+0x16a04>
  419564:	ldr	x0, [sp, #24]
  419568:	mov	w1, w0
  41956c:	ldr	x0, [sp, #8]
  419570:	sub	w0, w1, w0
  419574:	add	sp, sp, #0x20
  419578:	ret
  41957c:	sub	sp, sp, #0x10
  419580:	stp	x0, x1, [sp]
  419584:	ldr	x0, [sp]
  419588:	cmp	x0, #0x0
  41958c:	b.lt	4195b8 <__fxstatat@plt+0x16a58>  // b.tstop
  419590:	ldr	x0, [sp]
  419594:	cmp	x0, #0x0
  419598:	b.ne	4195a8 <__fxstatat@plt+0x16a48>  // b.any
  41959c:	ldr	x0, [sp, #8]
  4195a0:	cmp	x0, #0x0
  4195a4:	b.eq	4195b0 <__fxstatat@plt+0x16a50>  // b.none
  4195a8:	mov	w0, #0x1                   	// #1
  4195ac:	b	4195bc <__fxstatat@plt+0x16a5c>
  4195b0:	mov	w0, #0x0                   	// #0
  4195b4:	b	4195bc <__fxstatat@plt+0x16a5c>
  4195b8:	mov	w0, #0xffffffff            	// #-1
  4195bc:	add	sp, sp, #0x10
  4195c0:	ret
  4195c4:	sub	sp, sp, #0x10
  4195c8:	stp	x0, x1, [sp]
  4195cc:	ldr	d0, [sp]
  4195d0:	scvtf	d1, d0
  4195d4:	ldr	d0, [sp, #8]
  4195d8:	scvtf	d0, d0
  4195dc:	mov	x0, #0xcd6500000000        	// #225833675390976
  4195e0:	movk	x0, #0x41cd, lsl #48
  4195e4:	fmov	d2, x0
  4195e8:	fdiv	d0, d0, d2
  4195ec:	fadd	d0, d1, d0
  4195f0:	add	sp, sp, #0x10
  4195f4:	ret
  4195f8:	sub	sp, sp, #0x60
  4195fc:	stp	x29, x30, [sp, #32]
  419600:	add	x29, sp, #0x20
  419604:	str	x0, [sp, #88]
  419608:	str	x1, [sp, #80]
  41960c:	str	x2, [sp, #72]
  419610:	str	x3, [sp, #64]
  419614:	str	x4, [sp, #56]
  419618:	str	x5, [sp, #48]
  41961c:	ldr	x0, [sp, #80]
  419620:	cmp	x0, #0x0
  419624:	b.eq	419648 <__fxstatat@plt+0x16ae8>  // b.none
  419628:	ldr	x4, [sp, #64]
  41962c:	ldr	x3, [sp, #72]
  419630:	ldr	x2, [sp, #80]
  419634:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419638:	add	x1, x0, #0x990
  41963c:	ldr	x0, [sp, #88]
  419640:	bl	402b30 <fprintf@plt>
  419644:	b	419660 <__fxstatat@plt+0x16b00>
  419648:	ldr	x3, [sp, #64]
  41964c:	ldr	x2, [sp, #72]
  419650:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419654:	add	x1, x0, #0x9a0
  419658:	ldr	x0, [sp, #88]
  41965c:	bl	402b30 <fprintf@plt>
  419660:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419664:	add	x0, x0, #0x9a8
  419668:	bl	402b20 <gettext@plt>
  41966c:	mov	w3, #0x7e3                 	// #2019
  419670:	mov	x2, x0
  419674:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419678:	add	x1, x0, #0xcd8
  41967c:	ldr	x0, [sp, #88]
  419680:	bl	402b30 <fprintf@plt>
  419684:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419688:	add	x0, x0, #0x9b0
  41968c:	bl	402b20 <gettext@plt>
  419690:	ldr	x1, [sp, #88]
  419694:	bl	402a40 <fputs_unlocked@plt>
  419698:	ldr	x0, [sp, #48]
  41969c:	cmp	x0, #0x9
  4196a0:	b.eq	419a74 <__fxstatat@plt+0x16f14>  // b.none
  4196a4:	ldr	x0, [sp, #48]
  4196a8:	cmp	x0, #0x9
  4196ac:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  4196b0:	ldr	x0, [sp, #48]
  4196b4:	cmp	x0, #0x8
  4196b8:	b.eq	4199f0 <__fxstatat@plt+0x16e90>  // b.none
  4196bc:	ldr	x0, [sp, #48]
  4196c0:	cmp	x0, #0x8
  4196c4:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  4196c8:	ldr	x0, [sp, #48]
  4196cc:	cmp	x0, #0x7
  4196d0:	b.eq	419964 <__fxstatat@plt+0x16e04>  // b.none
  4196d4:	ldr	x0, [sp, #48]
  4196d8:	cmp	x0, #0x7
  4196dc:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  4196e0:	ldr	x0, [sp, #48]
  4196e4:	cmp	x0, #0x6
  4196e8:	b.eq	4198e8 <__fxstatat@plt+0x16d88>  // b.none
  4196ec:	ldr	x0, [sp, #48]
  4196f0:	cmp	x0, #0x6
  4196f4:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  4196f8:	ldr	x0, [sp, #48]
  4196fc:	cmp	x0, #0x5
  419700:	b.eq	41987c <__fxstatat@plt+0x16d1c>  // b.none
  419704:	ldr	x0, [sp, #48]
  419708:	cmp	x0, #0x5
  41970c:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  419710:	ldr	x0, [sp, #48]
  419714:	cmp	x0, #0x4
  419718:	b.eq	419820 <__fxstatat@plt+0x16cc0>  // b.none
  41971c:	ldr	x0, [sp, #48]
  419720:	cmp	x0, #0x4
  419724:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  419728:	ldr	x0, [sp, #48]
  41972c:	cmp	x0, #0x3
  419730:	b.eq	4197d4 <__fxstatat@plt+0x16c74>  // b.none
  419734:	ldr	x0, [sp, #48]
  419738:	cmp	x0, #0x3
  41973c:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  419740:	ldr	x0, [sp, #48]
  419744:	cmp	x0, #0x2
  419748:	b.eq	419798 <__fxstatat@plt+0x16c38>  // b.none
  41974c:	ldr	x0, [sp, #48]
  419750:	cmp	x0, #0x2
  419754:	b.hi	419b0c <__fxstatat@plt+0x16fac>  // b.pmore
  419758:	ldr	x0, [sp, #48]
  41975c:	cmp	x0, #0x0
  419760:	b.eq	419ba4 <__fxstatat@plt+0x17044>  // b.none
  419764:	ldr	x0, [sp, #48]
  419768:	cmp	x0, #0x1
  41976c:	b.ne	419b0c <__fxstatat@plt+0x16fac>  // b.any
  419770:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419774:	add	x0, x0, #0xa80
  419778:	bl	402b20 <gettext@plt>
  41977c:	mov	x1, x0
  419780:	ldr	x0, [sp, #56]
  419784:	ldr	x0, [x0]
  419788:	mov	x2, x0
  41978c:	ldr	x0, [sp, #88]
  419790:	bl	402b30 <fprintf@plt>
  419794:	b	419ba8 <__fxstatat@plt+0x17048>
  419798:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41979c:	add	x0, x0, #0xa90
  4197a0:	bl	402b20 <gettext@plt>
  4197a4:	mov	x4, x0
  4197a8:	ldr	x0, [sp, #56]
  4197ac:	ldr	x1, [x0]
  4197b0:	ldr	x0, [sp, #56]
  4197b4:	add	x0, x0, #0x8
  4197b8:	ldr	x0, [x0]
  4197bc:	mov	x3, x0
  4197c0:	mov	x2, x1
  4197c4:	mov	x1, x4
  4197c8:	ldr	x0, [sp, #88]
  4197cc:	bl	402b30 <fprintf@plt>
  4197d0:	b	419ba8 <__fxstatat@plt+0x17048>
  4197d4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4197d8:	add	x0, x0, #0xaa8
  4197dc:	bl	402b20 <gettext@plt>
  4197e0:	mov	x5, x0
  4197e4:	ldr	x0, [sp, #56]
  4197e8:	ldr	x1, [x0]
  4197ec:	ldr	x0, [sp, #56]
  4197f0:	add	x0, x0, #0x8
  4197f4:	ldr	x2, [x0]
  4197f8:	ldr	x0, [sp, #56]
  4197fc:	add	x0, x0, #0x10
  419800:	ldr	x0, [x0]
  419804:	mov	x4, x0
  419808:	mov	x3, x2
  41980c:	mov	x2, x1
  419810:	mov	x1, x5
  419814:	ldr	x0, [sp, #88]
  419818:	bl	402b30 <fprintf@plt>
  41981c:	b	419ba8 <__fxstatat@plt+0x17048>
  419820:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419824:	add	x0, x0, #0xac8
  419828:	bl	402b20 <gettext@plt>
  41982c:	mov	x6, x0
  419830:	ldr	x0, [sp, #56]
  419834:	ldr	x1, [x0]
  419838:	ldr	x0, [sp, #56]
  41983c:	add	x0, x0, #0x8
  419840:	ldr	x2, [x0]
  419844:	ldr	x0, [sp, #56]
  419848:	add	x0, x0, #0x10
  41984c:	ldr	x3, [x0]
  419850:	ldr	x0, [sp, #56]
  419854:	add	x0, x0, #0x18
  419858:	ldr	x0, [x0]
  41985c:	mov	x5, x0
  419860:	mov	x4, x3
  419864:	mov	x3, x2
  419868:	mov	x2, x1
  41986c:	mov	x1, x6
  419870:	ldr	x0, [sp, #88]
  419874:	bl	402b30 <fprintf@plt>
  419878:	b	419ba8 <__fxstatat@plt+0x17048>
  41987c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419880:	add	x0, x0, #0xae8
  419884:	bl	402b20 <gettext@plt>
  419888:	mov	x7, x0
  41988c:	ldr	x0, [sp, #56]
  419890:	ldr	x1, [x0]
  419894:	ldr	x0, [sp, #56]
  419898:	add	x0, x0, #0x8
  41989c:	ldr	x2, [x0]
  4198a0:	ldr	x0, [sp, #56]
  4198a4:	add	x0, x0, #0x10
  4198a8:	ldr	x3, [x0]
  4198ac:	ldr	x0, [sp, #56]
  4198b0:	add	x0, x0, #0x18
  4198b4:	ldr	x4, [x0]
  4198b8:	ldr	x0, [sp, #56]
  4198bc:	add	x0, x0, #0x20
  4198c0:	ldr	x0, [x0]
  4198c4:	mov	x6, x0
  4198c8:	mov	x5, x4
  4198cc:	mov	x4, x3
  4198d0:	mov	x3, x2
  4198d4:	mov	x2, x1
  4198d8:	mov	x1, x7
  4198dc:	ldr	x0, [sp, #88]
  4198e0:	bl	402b30 <fprintf@plt>
  4198e4:	b	419ba8 <__fxstatat@plt+0x17048>
  4198e8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4198ec:	add	x0, x0, #0xb10
  4198f0:	bl	402b20 <gettext@plt>
  4198f4:	mov	x8, x0
  4198f8:	ldr	x0, [sp, #56]
  4198fc:	ldr	x1, [x0]
  419900:	ldr	x0, [sp, #56]
  419904:	add	x0, x0, #0x8
  419908:	ldr	x2, [x0]
  41990c:	ldr	x0, [sp, #56]
  419910:	add	x0, x0, #0x10
  419914:	ldr	x3, [x0]
  419918:	ldr	x0, [sp, #56]
  41991c:	add	x0, x0, #0x18
  419920:	ldr	x4, [x0]
  419924:	ldr	x0, [sp, #56]
  419928:	add	x0, x0, #0x20
  41992c:	ldr	x5, [x0]
  419930:	ldr	x0, [sp, #56]
  419934:	add	x0, x0, #0x28
  419938:	ldr	x0, [x0]
  41993c:	mov	x7, x0
  419940:	mov	x6, x5
  419944:	mov	x5, x4
  419948:	mov	x4, x3
  41994c:	mov	x3, x2
  419950:	mov	x2, x1
  419954:	mov	x1, x8
  419958:	ldr	x0, [sp, #88]
  41995c:	bl	402b30 <fprintf@plt>
  419960:	b	419ba8 <__fxstatat@plt+0x17048>
  419964:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419968:	add	x0, x0, #0xb38
  41996c:	bl	402b20 <gettext@plt>
  419970:	mov	x8, x0
  419974:	ldr	x0, [sp, #56]
  419978:	ldr	x1, [x0]
  41997c:	ldr	x0, [sp, #56]
  419980:	add	x0, x0, #0x8
  419984:	ldr	x2, [x0]
  419988:	ldr	x0, [sp, #56]
  41998c:	add	x0, x0, #0x10
  419990:	ldr	x3, [x0]
  419994:	ldr	x0, [sp, #56]
  419998:	add	x0, x0, #0x18
  41999c:	ldr	x4, [x0]
  4199a0:	ldr	x0, [sp, #56]
  4199a4:	add	x0, x0, #0x20
  4199a8:	ldr	x5, [x0]
  4199ac:	ldr	x0, [sp, #56]
  4199b0:	add	x0, x0, #0x28
  4199b4:	ldr	x6, [x0]
  4199b8:	ldr	x0, [sp, #56]
  4199bc:	add	x0, x0, #0x30
  4199c0:	ldr	x0, [x0]
  4199c4:	str	x0, [sp]
  4199c8:	mov	x7, x6
  4199cc:	mov	x6, x5
  4199d0:	mov	x5, x4
  4199d4:	mov	x4, x3
  4199d8:	mov	x3, x2
  4199dc:	mov	x2, x1
  4199e0:	mov	x1, x8
  4199e4:	ldr	x0, [sp, #88]
  4199e8:	bl	402b30 <fprintf@plt>
  4199ec:	b	419ba8 <__fxstatat@plt+0x17048>
  4199f0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  4199f4:	add	x0, x0, #0xb68
  4199f8:	bl	402b20 <gettext@plt>
  4199fc:	mov	x8, x0
  419a00:	ldr	x0, [sp, #56]
  419a04:	ldr	x2, [x0]
  419a08:	ldr	x0, [sp, #56]
  419a0c:	add	x0, x0, #0x8
  419a10:	ldr	x3, [x0]
  419a14:	ldr	x0, [sp, #56]
  419a18:	add	x0, x0, #0x10
  419a1c:	ldr	x4, [x0]
  419a20:	ldr	x0, [sp, #56]
  419a24:	add	x0, x0, #0x18
  419a28:	ldr	x5, [x0]
  419a2c:	ldr	x0, [sp, #56]
  419a30:	add	x0, x0, #0x20
  419a34:	ldr	x6, [x0]
  419a38:	ldr	x0, [sp, #56]
  419a3c:	add	x0, x0, #0x28
  419a40:	ldr	x7, [x0]
  419a44:	ldr	x0, [sp, #56]
  419a48:	add	x0, x0, #0x30
  419a4c:	ldr	x0, [x0]
  419a50:	ldr	x1, [sp, #56]
  419a54:	add	x1, x1, #0x38
  419a58:	ldr	x1, [x1]
  419a5c:	str	x1, [sp, #8]
  419a60:	str	x0, [sp]
  419a64:	mov	x1, x8
  419a68:	ldr	x0, [sp, #88]
  419a6c:	bl	402b30 <fprintf@plt>
  419a70:	b	419ba8 <__fxstatat@plt+0x17048>
  419a74:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419a78:	add	x0, x0, #0xb98
  419a7c:	bl	402b20 <gettext@plt>
  419a80:	mov	x9, x0
  419a84:	ldr	x0, [sp, #56]
  419a88:	ldr	x8, [x0]
  419a8c:	ldr	x0, [sp, #56]
  419a90:	add	x0, x0, #0x8
  419a94:	ldr	x3, [x0]
  419a98:	ldr	x0, [sp, #56]
  419a9c:	add	x0, x0, #0x10
  419aa0:	ldr	x4, [x0]
  419aa4:	ldr	x0, [sp, #56]
  419aa8:	add	x0, x0, #0x18
  419aac:	ldr	x5, [x0]
  419ab0:	ldr	x0, [sp, #56]
  419ab4:	add	x0, x0, #0x20
  419ab8:	ldr	x6, [x0]
  419abc:	ldr	x0, [sp, #56]
  419ac0:	add	x0, x0, #0x28
  419ac4:	ldr	x7, [x0]
  419ac8:	ldr	x0, [sp, #56]
  419acc:	add	x0, x0, #0x30
  419ad0:	ldr	x0, [x0]
  419ad4:	ldr	x1, [sp, #56]
  419ad8:	add	x1, x1, #0x38
  419adc:	ldr	x1, [x1]
  419ae0:	ldr	x2, [sp, #56]
  419ae4:	add	x2, x2, #0x40
  419ae8:	ldr	x2, [x2]
  419aec:	str	x2, [sp, #16]
  419af0:	str	x1, [sp, #8]
  419af4:	str	x0, [sp]
  419af8:	mov	x2, x8
  419afc:	mov	x1, x9
  419b00:	ldr	x0, [sp, #88]
  419b04:	bl	402b30 <fprintf@plt>
  419b08:	b	419ba8 <__fxstatat@plt+0x17048>
  419b0c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419b10:	add	x0, x0, #0xbd0
  419b14:	bl	402b20 <gettext@plt>
  419b18:	mov	x9, x0
  419b1c:	ldr	x0, [sp, #56]
  419b20:	ldr	x8, [x0]
  419b24:	ldr	x0, [sp, #56]
  419b28:	add	x0, x0, #0x8
  419b2c:	ldr	x3, [x0]
  419b30:	ldr	x0, [sp, #56]
  419b34:	add	x0, x0, #0x10
  419b38:	ldr	x4, [x0]
  419b3c:	ldr	x0, [sp, #56]
  419b40:	add	x0, x0, #0x18
  419b44:	ldr	x5, [x0]
  419b48:	ldr	x0, [sp, #56]
  419b4c:	add	x0, x0, #0x20
  419b50:	ldr	x6, [x0]
  419b54:	ldr	x0, [sp, #56]
  419b58:	add	x0, x0, #0x28
  419b5c:	ldr	x7, [x0]
  419b60:	ldr	x0, [sp, #56]
  419b64:	add	x0, x0, #0x30
  419b68:	ldr	x0, [x0]
  419b6c:	ldr	x1, [sp, #56]
  419b70:	add	x1, x1, #0x38
  419b74:	ldr	x1, [x1]
  419b78:	ldr	x2, [sp, #56]
  419b7c:	add	x2, x2, #0x40
  419b80:	ldr	x2, [x2]
  419b84:	str	x2, [sp, #16]
  419b88:	str	x1, [sp, #8]
  419b8c:	str	x0, [sp]
  419b90:	mov	x2, x8
  419b94:	mov	x1, x9
  419b98:	ldr	x0, [sp, #88]
  419b9c:	bl	402b30 <fprintf@plt>
  419ba0:	b	419ba8 <__fxstatat@plt+0x17048>
  419ba4:	nop
  419ba8:	nop
  419bac:	ldp	x29, x30, [sp, #32]
  419bb0:	add	sp, sp, #0x60
  419bb4:	ret
  419bb8:	stp	x29, x30, [sp, #-80]!
  419bbc:	mov	x29, sp
  419bc0:	str	x0, [sp, #56]
  419bc4:	str	x1, [sp, #48]
  419bc8:	str	x2, [sp, #40]
  419bcc:	str	x3, [sp, #32]
  419bd0:	str	x4, [sp, #24]
  419bd4:	str	xzr, [sp, #72]
  419bd8:	b	419be8 <__fxstatat@plt+0x17088>
  419bdc:	ldr	x0, [sp, #72]
  419be0:	add	x0, x0, #0x1
  419be4:	str	x0, [sp, #72]
  419be8:	ldr	x0, [sp, #72]
  419bec:	lsl	x0, x0, #3
  419bf0:	ldr	x1, [sp, #24]
  419bf4:	add	x0, x1, x0
  419bf8:	ldr	x0, [x0]
  419bfc:	cmp	x0, #0x0
  419c00:	b.ne	419bdc <__fxstatat@plt+0x1707c>  // b.any
  419c04:	ldr	x5, [sp, #72]
  419c08:	ldr	x4, [sp, #24]
  419c0c:	ldr	x3, [sp, #32]
  419c10:	ldr	x2, [sp, #40]
  419c14:	ldr	x1, [sp, #48]
  419c18:	ldr	x0, [sp, #56]
  419c1c:	bl	4195f8 <__fxstatat@plt+0x16a98>
  419c20:	nop
  419c24:	ldp	x29, x30, [sp], #80
  419c28:	ret
  419c2c:	stp	x29, x30, [sp, #-160]!
  419c30:	mov	x29, sp
  419c34:	str	x19, [sp, #16]
  419c38:	str	x0, [sp, #56]
  419c3c:	str	x1, [sp, #48]
  419c40:	str	x2, [sp, #40]
  419c44:	str	x3, [sp, #32]
  419c48:	mov	x19, x4
  419c4c:	str	xzr, [sp, #152]
  419c50:	b	419c60 <__fxstatat@plt+0x17100>
  419c54:	ldr	x0, [sp, #152]
  419c58:	add	x0, x0, #0x1
  419c5c:	str	x0, [sp, #152]
  419c60:	ldr	x0, [sp, #152]
  419c64:	cmp	x0, #0x9
  419c68:	b.hi	419ce8 <__fxstatat@plt+0x17188>  // b.pmore
  419c6c:	ldr	w1, [x19, #24]
  419c70:	ldr	x0, [x19]
  419c74:	cmp	w1, #0x0
  419c78:	b.lt	419c8c <__fxstatat@plt+0x1712c>  // b.tstop
  419c7c:	add	x1, x0, #0xf
  419c80:	and	x1, x1, #0xfffffffffffffff8
  419c84:	str	x1, [x19]
  419c88:	b	419cbc <__fxstatat@plt+0x1715c>
  419c8c:	add	w2, w1, #0x8
  419c90:	str	w2, [x19, #24]
  419c94:	ldr	w2, [x19, #24]
  419c98:	cmp	w2, #0x0
  419c9c:	b.le	419cb0 <__fxstatat@plt+0x17150>
  419ca0:	add	x1, x0, #0xf
  419ca4:	and	x1, x1, #0xfffffffffffffff8
  419ca8:	str	x1, [x19]
  419cac:	b	419cbc <__fxstatat@plt+0x1715c>
  419cb0:	ldr	x2, [x19, #8]
  419cb4:	sxtw	x0, w1
  419cb8:	add	x0, x2, x0
  419cbc:	ldr	x2, [x0]
  419cc0:	ldr	x0, [sp, #152]
  419cc4:	lsl	x0, x0, #3
  419cc8:	add	x1, sp, #0x48
  419ccc:	str	x2, [x1, x0]
  419cd0:	ldr	x0, [sp, #152]
  419cd4:	lsl	x0, x0, #3
  419cd8:	add	x1, sp, #0x48
  419cdc:	ldr	x0, [x1, x0]
  419ce0:	cmp	x0, #0x0
  419ce4:	b.ne	419c54 <__fxstatat@plt+0x170f4>  // b.any
  419ce8:	add	x0, sp, #0x48
  419cec:	ldr	x5, [sp, #152]
  419cf0:	mov	x4, x0
  419cf4:	ldr	x3, [sp, #32]
  419cf8:	ldr	x2, [sp, #40]
  419cfc:	ldr	x1, [sp, #48]
  419d00:	ldr	x0, [sp, #56]
  419d04:	bl	4195f8 <__fxstatat@plt+0x16a98>
  419d08:	nop
  419d0c:	ldr	x19, [sp, #16]
  419d10:	ldp	x29, x30, [sp], #160
  419d14:	ret
  419d18:	stp	x29, x30, [sp, #-272]!
  419d1c:	mov	x29, sp
  419d20:	str	x0, [sp, #72]
  419d24:	str	x1, [sp, #64]
  419d28:	str	x2, [sp, #56]
  419d2c:	str	x3, [sp, #48]
  419d30:	str	x4, [sp, #240]
  419d34:	str	x5, [sp, #248]
  419d38:	str	x6, [sp, #256]
  419d3c:	str	x7, [sp, #264]
  419d40:	str	q0, [sp, #112]
  419d44:	str	q1, [sp, #128]
  419d48:	str	q2, [sp, #144]
  419d4c:	str	q3, [sp, #160]
  419d50:	str	q4, [sp, #176]
  419d54:	str	q5, [sp, #192]
  419d58:	str	q6, [sp, #208]
  419d5c:	str	q7, [sp, #224]
  419d60:	add	x0, sp, #0x110
  419d64:	str	x0, [sp, #80]
  419d68:	add	x0, sp, #0x110
  419d6c:	str	x0, [sp, #88]
  419d70:	add	x0, sp, #0xf0
  419d74:	str	x0, [sp, #96]
  419d78:	mov	w0, #0xffffffe0            	// #-32
  419d7c:	str	w0, [sp, #104]
  419d80:	mov	w0, #0xffffff80            	// #-128
  419d84:	str	w0, [sp, #108]
  419d88:	add	x2, sp, #0x10
  419d8c:	add	x3, sp, #0x50
  419d90:	ldp	x0, x1, [x3]
  419d94:	stp	x0, x1, [x2]
  419d98:	ldp	x0, x1, [x3, #16]
  419d9c:	stp	x0, x1, [x2, #16]
  419da0:	add	x0, sp, #0x10
  419da4:	mov	x4, x0
  419da8:	ldr	x3, [sp, #48]
  419dac:	ldr	x2, [sp, #56]
  419db0:	ldr	x1, [sp, #64]
  419db4:	ldr	x0, [sp, #72]
  419db8:	bl	419c2c <__fxstatat@plt+0x170cc>
  419dbc:	nop
  419dc0:	ldp	x29, x30, [sp], #272
  419dc4:	ret
  419dc8:	stp	x29, x30, [sp, #-16]!
  419dcc:	mov	x29, sp
  419dd0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419dd4:	add	x0, x0, #0xc10
  419dd8:	bl	402b20 <gettext@plt>
  419ddc:	mov	x2, x0
  419de0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419de4:	add	x1, x0, #0xc28
  419de8:	mov	x0, x2
  419dec:	bl	402aa0 <printf@plt>
  419df0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419df4:	add	x0, x0, #0xc40
  419df8:	bl	402b20 <gettext@plt>
  419dfc:	mov	x3, x0
  419e00:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419e04:	add	x2, x0, #0xc58
  419e08:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419e0c:	add	x1, x0, #0xc80
  419e10:	mov	x0, x3
  419e14:	bl	402aa0 <printf@plt>
  419e18:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  419e1c:	add	x0, x0, #0xc90
  419e20:	bl	402b20 <gettext@plt>
  419e24:	mov	x2, x0
  419e28:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  419e2c:	add	x0, x0, #0x5f8
  419e30:	ldr	x0, [x0]
  419e34:	mov	x1, x0
  419e38:	mov	x0, x2
  419e3c:	bl	402a40 <fputs_unlocked@plt>
  419e40:	nop
  419e44:	ldp	x29, x30, [sp], #16
  419e48:	ret
  419e4c:	stp	x29, x30, [sp, #-32]!
  419e50:	mov	x29, sp
  419e54:	str	x0, [sp, #24]
  419e58:	str	x1, [sp, #16]
  419e5c:	mov	x0, #0x0                   	// #0
  419e60:	ldr	x6, [sp, #24]
  419e64:	ldr	x1, [sp, #16]
  419e68:	mul	x7, x6, x1
  419e6c:	umulh	x1, x6, x1
  419e70:	mov	x2, x7
  419e74:	mov	x3, x1
  419e78:	mov	x4, x3
  419e7c:	mov	x5, #0x0                   	// #0
  419e80:	cmp	x4, #0x0
  419e84:	b.eq	419e8c <__fxstatat@plt+0x1732c>  // b.none
  419e88:	mov	x0, #0x1                   	// #1
  419e8c:	cmp	x2, #0x0
  419e90:	b.ge	419e98 <__fxstatat@plt+0x17338>  // b.tcont
  419e94:	mov	x0, #0x1                   	// #1
  419e98:	and	w0, w0, #0x1
  419e9c:	and	w0, w0, #0xff
  419ea0:	cmp	w0, #0x0
  419ea4:	b.eq	419eac <__fxstatat@plt+0x1734c>  // b.none
  419ea8:	bl	41a260 <__fxstatat@plt+0x17700>
  419eac:	ldr	x1, [sp, #24]
  419eb0:	ldr	x0, [sp, #16]
  419eb4:	mul	x0, x1, x0
  419eb8:	bl	41a080 <__fxstatat@plt+0x17520>
  419ebc:	ldp	x29, x30, [sp], #32
  419ec0:	ret
  419ec4:	stp	x29, x30, [sp, #-48]!
  419ec8:	mov	x29, sp
  419ecc:	str	x0, [sp, #40]
  419ed0:	str	x1, [sp, #32]
  419ed4:	str	x2, [sp, #24]
  419ed8:	mov	x0, #0x0                   	// #0
  419edc:	ldr	x2, [sp, #32]
  419ee0:	ldr	x1, [sp, #24]
  419ee4:	mul	x3, x2, x1
  419ee8:	umulh	x1, x2, x1
  419eec:	mov	x4, x3
  419ef0:	mov	x5, x1
  419ef4:	mov	x6, x5
  419ef8:	mov	x7, #0x0                   	// #0
  419efc:	cmp	x6, #0x0
  419f00:	b.eq	419f08 <__fxstatat@plt+0x173a8>  // b.none
  419f04:	mov	x0, #0x1                   	// #1
  419f08:	cmp	x4, #0x0
  419f0c:	b.ge	419f14 <__fxstatat@plt+0x173b4>  // b.tcont
  419f10:	mov	x0, #0x1                   	// #1
  419f14:	and	w0, w0, #0x1
  419f18:	and	w0, w0, #0xff
  419f1c:	cmp	w0, #0x0
  419f20:	b.eq	419f28 <__fxstatat@plt+0x173c8>  // b.none
  419f24:	bl	41a260 <__fxstatat@plt+0x17700>
  419f28:	ldr	x1, [sp, #32]
  419f2c:	ldr	x0, [sp, #24]
  419f30:	mul	x0, x1, x0
  419f34:	mov	x1, x0
  419f38:	ldr	x0, [sp, #40]
  419f3c:	bl	41a0c0 <__fxstatat@plt+0x17560>
  419f40:	ldp	x29, x30, [sp], #48
  419f44:	ret
  419f48:	stp	x29, x30, [sp, #-64]!
  419f4c:	mov	x29, sp
  419f50:	str	x0, [sp, #40]
  419f54:	str	x1, [sp, #32]
  419f58:	str	x2, [sp, #24]
  419f5c:	ldr	x0, [sp, #32]
  419f60:	ldr	x0, [x0]
  419f64:	str	x0, [sp, #56]
  419f68:	ldr	x0, [sp, #40]
  419f6c:	cmp	x0, #0x0
  419f70:	b.ne	41a000 <__fxstatat@plt+0x174a0>  // b.any
  419f74:	ldr	x0, [sp, #56]
  419f78:	cmp	x0, #0x0
  419f7c:	b.ne	419fb0 <__fxstatat@plt+0x17450>  // b.any
  419f80:	mov	x1, #0x80                  	// #128
  419f84:	ldr	x0, [sp, #24]
  419f88:	udiv	x0, x1, x0
  419f8c:	str	x0, [sp, #56]
  419f90:	ldr	x0, [sp, #56]
  419f94:	cmp	x0, #0x0
  419f98:	cset	w0, eq  // eq = none
  419f9c:	and	w0, w0, #0xff
  419fa0:	and	x0, x0, #0xff
  419fa4:	ldr	x1, [sp, #56]
  419fa8:	add	x0, x1, x0
  419fac:	str	x0, [sp, #56]
  419fb0:	mov	x0, #0x0                   	// #0
  419fb4:	ldr	x2, [sp, #56]
  419fb8:	ldr	x1, [sp, #24]
  419fbc:	mul	x3, x2, x1
  419fc0:	umulh	x1, x2, x1
  419fc4:	mov	x4, x3
  419fc8:	mov	x5, x1
  419fcc:	mov	x6, x5
  419fd0:	mov	x7, #0x0                   	// #0
  419fd4:	cmp	x6, #0x0
  419fd8:	b.eq	419fe0 <__fxstatat@plt+0x17480>  // b.none
  419fdc:	mov	x0, #0x1                   	// #1
  419fe0:	cmp	x4, #0x0
  419fe4:	b.ge	419fec <__fxstatat@plt+0x1748c>  // b.tcont
  419fe8:	mov	x0, #0x1                   	// #1
  419fec:	and	w0, w0, #0x1
  419ff0:	and	w0, w0, #0xff
  419ff4:	cmp	w0, #0x0
  419ff8:	b.eq	41a038 <__fxstatat@plt+0x174d8>  // b.none
  419ffc:	bl	41a260 <__fxstatat@plt+0x17700>
  41a000:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  41a004:	movk	x1, #0x5554
  41a008:	ldr	x0, [sp, #24]
  41a00c:	udiv	x0, x1, x0
  41a010:	ldr	x1, [sp, #56]
  41a014:	cmp	x1, x0
  41a018:	b.cc	41a020 <__fxstatat@plt+0x174c0>  // b.lo, b.ul, b.last
  41a01c:	bl	41a260 <__fxstatat@plt+0x17700>
  41a020:	ldr	x0, [sp, #56]
  41a024:	lsr	x1, x0, #1
  41a028:	ldr	x0, [sp, #56]
  41a02c:	add	x0, x1, x0
  41a030:	add	x0, x0, #0x1
  41a034:	str	x0, [sp, #56]
  41a038:	ldr	x0, [sp, #32]
  41a03c:	ldr	x1, [sp, #56]
  41a040:	str	x1, [x0]
  41a044:	ldr	x1, [sp, #56]
  41a048:	ldr	x0, [sp, #24]
  41a04c:	mul	x0, x1, x0
  41a050:	mov	x1, x0
  41a054:	ldr	x0, [sp, #40]
  41a058:	bl	41a0c0 <__fxstatat@plt+0x17560>
  41a05c:	ldp	x29, x30, [sp], #64
  41a060:	ret
  41a064:	stp	x29, x30, [sp, #-32]!
  41a068:	mov	x29, sp
  41a06c:	str	x0, [sp, #24]
  41a070:	ldr	x0, [sp, #24]
  41a074:	bl	41a080 <__fxstatat@plt+0x17520>
  41a078:	ldp	x29, x30, [sp], #32
  41a07c:	ret
  41a080:	stp	x29, x30, [sp, #-48]!
  41a084:	mov	x29, sp
  41a088:	str	x0, [sp, #24]
  41a08c:	ldr	x0, [sp, #24]
  41a090:	bl	4026b0 <malloc@plt>
  41a094:	str	x0, [sp, #40]
  41a098:	ldr	x0, [sp, #40]
  41a09c:	cmp	x0, #0x0
  41a0a0:	b.ne	41a0b4 <__fxstatat@plt+0x17554>  // b.any
  41a0a4:	ldr	x0, [sp, #24]
  41a0a8:	cmp	x0, #0x0
  41a0ac:	b.eq	41a0b4 <__fxstatat@plt+0x17554>  // b.none
  41a0b0:	bl	41a260 <__fxstatat@plt+0x17700>
  41a0b4:	ldr	x0, [sp, #40]
  41a0b8:	ldp	x29, x30, [sp], #48
  41a0bc:	ret
  41a0c0:	stp	x29, x30, [sp, #-32]!
  41a0c4:	mov	x29, sp
  41a0c8:	str	x0, [sp, #24]
  41a0cc:	str	x1, [sp, #16]
  41a0d0:	ldr	x0, [sp, #16]
  41a0d4:	cmp	x0, #0x0
  41a0d8:	b.ne	41a0f8 <__fxstatat@plt+0x17598>  // b.any
  41a0dc:	ldr	x0, [sp, #24]
  41a0e0:	cmp	x0, #0x0
  41a0e4:	b.eq	41a0f8 <__fxstatat@plt+0x17598>  // b.none
  41a0e8:	ldr	x0, [sp, #24]
  41a0ec:	bl	4028f0 <free@plt>
  41a0f0:	mov	x0, #0x0                   	// #0
  41a0f4:	b	41a128 <__fxstatat@plt+0x175c8>
  41a0f8:	ldr	x1, [sp, #16]
  41a0fc:	ldr	x0, [sp, #24]
  41a100:	bl	4027a0 <realloc@plt>
  41a104:	str	x0, [sp, #24]
  41a108:	ldr	x0, [sp, #24]
  41a10c:	cmp	x0, #0x0
  41a110:	b.ne	41a124 <__fxstatat@plt+0x175c4>  // b.any
  41a114:	ldr	x0, [sp, #16]
  41a118:	cmp	x0, #0x0
  41a11c:	b.eq	41a124 <__fxstatat@plt+0x175c4>  // b.none
  41a120:	bl	41a260 <__fxstatat@plt+0x17700>
  41a124:	ldr	x0, [sp, #24]
  41a128:	ldp	x29, x30, [sp], #32
  41a12c:	ret
  41a130:	stp	x29, x30, [sp, #-32]!
  41a134:	mov	x29, sp
  41a138:	str	x0, [sp, #24]
  41a13c:	str	x1, [sp, #16]
  41a140:	mov	x2, #0x1                   	// #1
  41a144:	ldr	x1, [sp, #16]
  41a148:	ldr	x0, [sp, #24]
  41a14c:	bl	419f48 <__fxstatat@plt+0x173e8>
  41a150:	ldp	x29, x30, [sp], #32
  41a154:	ret
  41a158:	stp	x29, x30, [sp, #-32]!
  41a15c:	mov	x29, sp
  41a160:	str	x0, [sp, #24]
  41a164:	ldr	x0, [sp, #24]
  41a168:	bl	41a080 <__fxstatat@plt+0x17520>
  41a16c:	ldr	x2, [sp, #24]
  41a170:	mov	w1, #0x0                   	// #0
  41a174:	bl	402740 <memset@plt>
  41a178:	ldp	x29, x30, [sp], #32
  41a17c:	ret
  41a180:	stp	x29, x30, [sp, #-48]!
  41a184:	mov	x29, sp
  41a188:	str	x0, [sp, #24]
  41a18c:	str	x1, [sp, #16]
  41a190:	mov	x0, #0x0                   	// #0
  41a194:	ldr	x6, [sp, #24]
  41a198:	ldr	x1, [sp, #16]
  41a19c:	mul	x7, x6, x1
  41a1a0:	umulh	x1, x6, x1
  41a1a4:	mov	x2, x7
  41a1a8:	mov	x3, x1
  41a1ac:	mov	x4, x3
  41a1b0:	mov	x5, #0x0                   	// #0
  41a1b4:	cmp	x4, #0x0
  41a1b8:	b.eq	41a1c0 <__fxstatat@plt+0x17660>  // b.none
  41a1bc:	mov	x0, #0x1                   	// #1
  41a1c0:	cmp	x2, #0x0
  41a1c4:	b.ge	41a1cc <__fxstatat@plt+0x1766c>  // b.tcont
  41a1c8:	mov	x0, #0x1                   	// #1
  41a1cc:	and	w0, w0, #0x1
  41a1d0:	and	w0, w0, #0xff
  41a1d4:	cmp	w0, #0x0
  41a1d8:	b.ne	41a1f8 <__fxstatat@plt+0x17698>  // b.any
  41a1dc:	ldr	x1, [sp, #16]
  41a1e0:	ldr	x0, [sp, #24]
  41a1e4:	bl	402780 <calloc@plt>
  41a1e8:	str	x0, [sp, #40]
  41a1ec:	ldr	x0, [sp, #40]
  41a1f0:	cmp	x0, #0x0
  41a1f4:	b.ne	41a1fc <__fxstatat@plt+0x1769c>  // b.any
  41a1f8:	bl	41a260 <__fxstatat@plt+0x17700>
  41a1fc:	ldr	x0, [sp, #40]
  41a200:	ldp	x29, x30, [sp], #48
  41a204:	ret
  41a208:	stp	x29, x30, [sp, #-32]!
  41a20c:	mov	x29, sp
  41a210:	str	x0, [sp, #24]
  41a214:	str	x1, [sp, #16]
  41a218:	ldr	x0, [sp, #16]
  41a21c:	bl	41a080 <__fxstatat@plt+0x17520>
  41a220:	ldr	x2, [sp, #16]
  41a224:	ldr	x1, [sp, #24]
  41a228:	bl	402490 <memcpy@plt>
  41a22c:	ldp	x29, x30, [sp], #32
  41a230:	ret
  41a234:	stp	x29, x30, [sp, #-32]!
  41a238:	mov	x29, sp
  41a23c:	str	x0, [sp, #24]
  41a240:	ldr	x0, [sp, #24]
  41a244:	bl	402500 <strlen@plt>
  41a248:	add	x0, x0, #0x1
  41a24c:	mov	x1, x0
  41a250:	ldr	x0, [sp, #24]
  41a254:	bl	41a208 <__fxstatat@plt+0x176a8>
  41a258:	ldp	x29, x30, [sp], #32
  41a25c:	ret
  41a260:	stp	x29, x30, [sp, #-32]!
  41a264:	mov	x29, sp
  41a268:	str	x19, [sp, #16]
  41a26c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41a270:	add	x0, x0, #0x570
  41a274:	ldr	w19, [x0]
  41a278:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a27c:	add	x0, x0, #0xd08
  41a280:	bl	402b20 <gettext@plt>
  41a284:	mov	x3, x0
  41a288:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a28c:	add	x2, x0, #0xd20
  41a290:	mov	w1, #0x0                   	// #0
  41a294:	mov	w0, w19
  41a298:	bl	402550 <error@plt>
  41a29c:	bl	402820 <abort@plt>
  41a2a0:	stp	x29, x30, [sp, #-96]!
  41a2a4:	mov	x29, sp
  41a2a8:	stp	x19, x20, [sp, #16]
  41a2ac:	str	x0, [sp, #72]
  41a2b0:	str	w1, [sp, #68]
  41a2b4:	str	x2, [sp, #56]
  41a2b8:	str	x3, [sp, #48]
  41a2bc:	str	x4, [sp, #40]
  41a2c0:	str	x5, [sp, #32]
  41a2c4:	str	w6, [sp, #64]
  41a2c8:	add	x0, sp, #0x50
  41a2cc:	ldr	x4, [sp, #40]
  41a2d0:	mov	x3, x0
  41a2d4:	ldr	w2, [sp, #68]
  41a2d8:	mov	x1, #0x0                   	// #0
  41a2dc:	ldr	x0, [sp, #72]
  41a2e0:	bl	41adec <__fxstatat@plt+0x1828c>
  41a2e4:	str	w0, [sp, #92]
  41a2e8:	ldr	w0, [sp, #92]
  41a2ec:	cmp	w0, #0x0
  41a2f0:	b.ne	41a354 <__fxstatat@plt+0x177f4>  // b.any
  41a2f4:	ldr	x0, [sp, #80]
  41a2f8:	ldr	x1, [sp, #56]
  41a2fc:	cmp	x1, x0
  41a300:	b.hi	41a314 <__fxstatat@plt+0x177b4>  // b.pmore
  41a304:	ldr	x0, [sp, #80]
  41a308:	ldr	x1, [sp, #48]
  41a30c:	cmp	x1, x0
  41a310:	b.cs	41a388 <__fxstatat@plt+0x17828>  // b.hs, b.nlast
  41a314:	mov	w0, #0x1                   	// #1
  41a318:	str	w0, [sp, #92]
  41a31c:	ldr	x1, [sp, #80]
  41a320:	mov	x0, #0x3fffffff            	// #1073741823
  41a324:	cmp	x1, x0
  41a328:	b.ls	41a340 <__fxstatat@plt+0x177e0>  // b.plast
  41a32c:	bl	402ac0 <__errno_location@plt>
  41a330:	mov	x1, x0
  41a334:	mov	w0, #0x4b                  	// #75
  41a338:	str	w0, [x1]
  41a33c:	b	41a388 <__fxstatat@plt+0x17828>
  41a340:	bl	402ac0 <__errno_location@plt>
  41a344:	mov	x1, x0
  41a348:	mov	w0, #0x22                  	// #34
  41a34c:	str	w0, [x1]
  41a350:	b	41a388 <__fxstatat@plt+0x17828>
  41a354:	ldr	w0, [sp, #92]
  41a358:	cmp	w0, #0x1
  41a35c:	b.ne	41a374 <__fxstatat@plt+0x17814>  // b.any
  41a360:	bl	402ac0 <__errno_location@plt>
  41a364:	mov	x1, x0
  41a368:	mov	w0, #0x4b                  	// #75
  41a36c:	str	w0, [x1]
  41a370:	b	41a388 <__fxstatat@plt+0x17828>
  41a374:	ldr	w0, [sp, #92]
  41a378:	cmp	w0, #0x3
  41a37c:	b.ne	41a388 <__fxstatat@plt+0x17828>  // b.any
  41a380:	bl	402ac0 <__errno_location@plt>
  41a384:	str	wzr, [x0]
  41a388:	ldr	w0, [sp, #92]
  41a38c:	cmp	w0, #0x0
  41a390:	b.eq	41a3f0 <__fxstatat@plt+0x17890>  // b.none
  41a394:	ldr	w0, [sp, #64]
  41a398:	cmp	w0, #0x0
  41a39c:	b.eq	41a3a8 <__fxstatat@plt+0x17848>  // b.none
  41a3a0:	ldr	w19, [sp, #64]
  41a3a4:	b	41a3ac <__fxstatat@plt+0x1784c>
  41a3a8:	mov	w19, #0x1                   	// #1
  41a3ac:	bl	402ac0 <__errno_location@plt>
  41a3b0:	ldr	w0, [x0]
  41a3b4:	cmp	w0, #0x16
  41a3b8:	b.eq	41a3c8 <__fxstatat@plt+0x17868>  // b.none
  41a3bc:	bl	402ac0 <__errno_location@plt>
  41a3c0:	ldr	w20, [x0]
  41a3c4:	b	41a3cc <__fxstatat@plt+0x1786c>
  41a3c8:	mov	w20, #0x0                   	// #0
  41a3cc:	ldr	x0, [sp, #72]
  41a3d0:	bl	418f38 <__fxstatat@plt+0x163d8>
  41a3d4:	mov	x4, x0
  41a3d8:	ldr	x3, [sp, #32]
  41a3dc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a3e0:	add	x2, x0, #0xd28
  41a3e4:	mov	w1, w20
  41a3e8:	mov	w0, w19
  41a3ec:	bl	402550 <error@plt>
  41a3f0:	ldr	x0, [sp, #80]
  41a3f4:	ldp	x19, x20, [sp, #16]
  41a3f8:	ldp	x29, x30, [sp], #96
  41a3fc:	ret
  41a400:	stp	x29, x30, [sp, #-64]!
  41a404:	mov	x29, sp
  41a408:	str	x0, [sp, #56]
  41a40c:	str	x1, [sp, #48]
  41a410:	str	x2, [sp, #40]
  41a414:	str	x3, [sp, #32]
  41a418:	str	x4, [sp, #24]
  41a41c:	str	w5, [sp, #20]
  41a420:	ldr	w6, [sp, #20]
  41a424:	ldr	x5, [sp, #24]
  41a428:	ldr	x4, [sp, #32]
  41a42c:	ldr	x3, [sp, #40]
  41a430:	ldr	x2, [sp, #48]
  41a434:	mov	w1, #0xa                   	// #10
  41a438:	ldr	x0, [sp, #56]
  41a43c:	bl	41a2a0 <__fxstatat@plt+0x17740>
  41a440:	ldp	x29, x30, [sp], #64
  41a444:	ret
  41a448:	stp	x29, x30, [sp, #-32]!
  41a44c:	mov	x29, sp
  41a450:	mov	x1, #0x0                   	// #0
  41a454:	mov	x0, #0x0                   	// #0
  41a458:	bl	4024d0 <getcwd@plt>
  41a45c:	str	x0, [sp, #24]
  41a460:	ldr	x0, [sp, #24]
  41a464:	cmp	x0, #0x0
  41a468:	b.ne	41a480 <__fxstatat@plt+0x17920>  // b.any
  41a46c:	bl	402ac0 <__errno_location@plt>
  41a470:	ldr	w0, [x0]
  41a474:	cmp	w0, #0xc
  41a478:	b.ne	41a480 <__fxstatat@plt+0x17920>  // b.any
  41a47c:	bl	41a260 <__fxstatat@plt+0x17700>
  41a480:	ldr	x0, [sp, #24]
  41a484:	ldp	x29, x30, [sp], #32
  41a488:	ret
  41a48c:	stp	x29, x30, [sp, #-48]!
  41a490:	mov	x29, sp
  41a494:	str	xzr, [sp, #40]
  41a498:	mov	x0, #0x22                  	// #34
  41a49c:	str	x0, [sp, #16]
  41a4a0:	add	x0, sp, #0x10
  41a4a4:	mov	x1, x0
  41a4a8:	ldr	x0, [sp, #40]
  41a4ac:	bl	41a130 <__fxstatat@plt+0x175d0>
  41a4b0:	str	x0, [sp, #40]
  41a4b4:	ldr	x0, [sp, #16]
  41a4b8:	sub	x0, x0, #0x1
  41a4bc:	str	x0, [sp, #32]
  41a4c0:	ldr	x0, [sp, #32]
  41a4c4:	sub	x0, x0, #0x1
  41a4c8:	ldr	x1, [sp, #40]
  41a4cc:	add	x0, x1, x0
  41a4d0:	strb	wzr, [x0]
  41a4d4:	bl	402ac0 <__errno_location@plt>
  41a4d8:	str	wzr, [x0]
  41a4dc:	ldr	x1, [sp, #32]
  41a4e0:	ldr	x0, [sp, #40]
  41a4e4:	bl	402a00 <gethostname@plt>
  41a4e8:	cmp	w0, #0x0
  41a4ec:	b.ne	41a510 <__fxstatat@plt+0x179b0>  // b.any
  41a4f0:	ldr	x0, [sp, #32]
  41a4f4:	sub	x0, x0, #0x1
  41a4f8:	ldr	x1, [sp, #40]
  41a4fc:	add	x0, x1, x0
  41a500:	ldrb	w0, [x0]
  41a504:	cmp	w0, #0x0
  41a508:	b.ne	41a4a0 <__fxstatat@plt+0x17940>  // b.any
  41a50c:	b	41a57c <__fxstatat@plt+0x17a1c>
  41a510:	bl	402ac0 <__errno_location@plt>
  41a514:	ldr	w0, [x0]
  41a518:	cmp	w0, #0x0
  41a51c:	b.eq	41a4a0 <__fxstatat@plt+0x17940>  // b.none
  41a520:	bl	402ac0 <__errno_location@plt>
  41a524:	ldr	w0, [x0]
  41a528:	cmp	w0, #0x24
  41a52c:	b.eq	41a4a0 <__fxstatat@plt+0x17940>  // b.none
  41a530:	bl	402ac0 <__errno_location@plt>
  41a534:	ldr	w0, [x0]
  41a538:	cmp	w0, #0x16
  41a53c:	b.eq	41a4a0 <__fxstatat@plt+0x17940>  // b.none
  41a540:	bl	402ac0 <__errno_location@plt>
  41a544:	ldr	w0, [x0]
  41a548:	cmp	w0, #0xc
  41a54c:	b.eq	41a4a0 <__fxstatat@plt+0x17940>  // b.none
  41a550:	bl	402ac0 <__errno_location@plt>
  41a554:	ldr	w0, [x0]
  41a558:	str	w0, [sp, #28]
  41a55c:	ldr	x0, [sp, #40]
  41a560:	bl	4028f0 <free@plt>
  41a564:	bl	402ac0 <__errno_location@plt>
  41a568:	mov	x1, x0
  41a56c:	ldr	w0, [sp, #28]
  41a570:	str	w0, [x1]
  41a574:	mov	x0, #0x0                   	// #0
  41a578:	b	41a580 <__fxstatat@plt+0x17a20>
  41a57c:	ldr	x0, [sp, #40]
  41a580:	ldp	x29, x30, [sp], #48
  41a584:	ret
  41a588:	sub	sp, sp, #0x10
  41a58c:	str	x0, [sp, #8]
  41a590:	str	w1, [sp, #4]
  41a594:	ldr	x0, [sp, #8]
  41a598:	ldr	x1, [x0]
  41a59c:	ldrsw	x0, [sp, #4]
  41a5a0:	mov	x2, #0x0                   	// #0
  41a5a4:	umulh	x0, x1, x0
  41a5a8:	cmp	x0, #0x0
  41a5ac:	b.eq	41a5b4 <__fxstatat@plt+0x17a54>  // b.none
  41a5b0:	mov	x2, #0x1                   	// #1
  41a5b4:	mov	x0, x2
  41a5b8:	cmp	x0, #0x0
  41a5bc:	b.eq	41a5d4 <__fxstatat@plt+0x17a74>  // b.none
  41a5c0:	ldr	x0, [sp, #8]
  41a5c4:	mov	x1, #0xffffffffffffffff    	// #-1
  41a5c8:	str	x1, [x0]
  41a5cc:	mov	w0, #0x1                   	// #1
  41a5d0:	b	41a5f0 <__fxstatat@plt+0x17a90>
  41a5d4:	ldr	x0, [sp, #8]
  41a5d8:	ldr	x1, [x0]
  41a5dc:	ldrsw	x0, [sp, #4]
  41a5e0:	mul	x1, x1, x0
  41a5e4:	ldr	x0, [sp, #8]
  41a5e8:	str	x1, [x0]
  41a5ec:	mov	w0, #0x0                   	// #0
  41a5f0:	add	sp, sp, #0x10
  41a5f4:	ret
  41a5f8:	stp	x29, x30, [sp, #-48]!
  41a5fc:	mov	x29, sp
  41a600:	str	x0, [sp, #24]
  41a604:	str	w1, [sp, #20]
  41a608:	str	w2, [sp, #16]
  41a60c:	str	wzr, [sp, #44]
  41a610:	b	41a630 <__fxstatat@plt+0x17ad0>
  41a614:	ldr	w1, [sp, #20]
  41a618:	ldr	x0, [sp, #24]
  41a61c:	bl	41a588 <__fxstatat@plt+0x17a28>
  41a620:	mov	w1, w0
  41a624:	ldr	w0, [sp, #44]
  41a628:	orr	w0, w0, w1
  41a62c:	str	w0, [sp, #44]
  41a630:	ldr	w0, [sp, #16]
  41a634:	sub	w1, w0, #0x1
  41a638:	str	w1, [sp, #16]
  41a63c:	cmp	w0, #0x0
  41a640:	b.ne	41a614 <__fxstatat@plt+0x17ab4>  // b.any
  41a644:	ldr	w0, [sp, #44]
  41a648:	ldp	x29, x30, [sp], #48
  41a64c:	ret
  41a650:	stp	x29, x30, [sp, #-128]!
  41a654:	mov	x29, sp
  41a658:	str	x0, [sp, #56]
  41a65c:	str	x1, [sp, #48]
  41a660:	str	w2, [sp, #44]
  41a664:	str	x3, [sp, #32]
  41a668:	str	x4, [sp, #24]
  41a66c:	str	wzr, [sp, #124]
  41a670:	ldr	w0, [sp, #44]
  41a674:	cmp	w0, #0x0
  41a678:	b.lt	41a688 <__fxstatat@plt+0x17b28>  // b.tstop
  41a67c:	ldr	w0, [sp, #44]
  41a680:	cmp	w0, #0x24
  41a684:	b.le	41a6a8 <__fxstatat@plt+0x17b48>
  41a688:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a68c:	add	x3, x0, #0xd68
  41a690:	mov	w2, #0x54                  	// #84
  41a694:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a698:	add	x1, x0, #0xd30
  41a69c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41a6a0:	add	x0, x0, #0xd40
  41a6a4:	bl	402ab0 <__assert_fail@plt>
  41a6a8:	ldr	x0, [sp, #48]
  41a6ac:	cmp	x0, #0x0
  41a6b0:	b.ne	41a6bc <__fxstatat@plt+0x17b5c>  // b.any
  41a6b4:	add	x0, sp, #0x50
  41a6b8:	b	41a6c0 <__fxstatat@plt+0x17b60>
  41a6bc:	ldr	x0, [sp, #48]
  41a6c0:	str	x0, [sp, #88]
  41a6c4:	bl	402ac0 <__errno_location@plt>
  41a6c8:	str	wzr, [x0]
  41a6cc:	ldr	x0, [sp, #56]
  41a6d0:	str	x0, [sp, #112]
  41a6d4:	ldr	x0, [sp, #112]
  41a6d8:	ldrb	w0, [x0]
  41a6dc:	strb	w0, [sp, #111]
  41a6e0:	b	41a6fc <__fxstatat@plt+0x17b9c>
  41a6e4:	ldr	x0, [sp, #112]
  41a6e8:	add	x0, x0, #0x1
  41a6ec:	str	x0, [sp, #112]
  41a6f0:	ldr	x0, [sp, #112]
  41a6f4:	ldrb	w0, [x0]
  41a6f8:	strb	w0, [sp, #111]
  41a6fc:	bl	4028d0 <__ctype_b_loc@plt>
  41a700:	ldr	x1, [x0]
  41a704:	ldrb	w0, [sp, #111]
  41a708:	lsl	x0, x0, #1
  41a70c:	add	x0, x1, x0
  41a710:	ldrh	w0, [x0]
  41a714:	and	w0, w0, #0x2000
  41a718:	cmp	w0, #0x0
  41a71c:	b.ne	41a6e4 <__fxstatat@plt+0x17b84>  // b.any
  41a720:	ldrb	w0, [sp, #111]
  41a724:	cmp	w0, #0x2d
  41a728:	b.ne	41a734 <__fxstatat@plt+0x17bd4>  // b.any
  41a72c:	mov	w0, #0x4                   	// #4
  41a730:	b	41abb4 <__fxstatat@plt+0x18054>
  41a734:	ldr	w2, [sp, #44]
  41a738:	ldr	x1, [sp, #88]
  41a73c:	ldr	x0, [sp, #56]
  41a740:	bl	4024f0 <strtoul@plt>
  41a744:	str	x0, [sp, #72]
  41a748:	ldr	x0, [sp, #88]
  41a74c:	ldr	x0, [x0]
  41a750:	ldr	x1, [sp, #56]
  41a754:	cmp	x1, x0
  41a758:	b.ne	41a7b0 <__fxstatat@plt+0x17c50>  // b.any
  41a75c:	ldr	x0, [sp, #24]
  41a760:	cmp	x0, #0x0
  41a764:	b.eq	41a7a8 <__fxstatat@plt+0x17c48>  // b.none
  41a768:	ldr	x0, [sp, #88]
  41a76c:	ldr	x0, [x0]
  41a770:	ldrb	w0, [x0]
  41a774:	cmp	w0, #0x0
  41a778:	b.eq	41a7a8 <__fxstatat@plt+0x17c48>  // b.none
  41a77c:	ldr	x0, [sp, #88]
  41a780:	ldr	x0, [x0]
  41a784:	ldrb	w0, [x0]
  41a788:	mov	w1, w0
  41a78c:	ldr	x0, [sp, #24]
  41a790:	bl	402930 <strchr@plt>
  41a794:	cmp	x0, #0x0
  41a798:	b.eq	41a7a8 <__fxstatat@plt+0x17c48>  // b.none
  41a79c:	mov	x0, #0x1                   	// #1
  41a7a0:	str	x0, [sp, #72]
  41a7a4:	b	41a7e0 <__fxstatat@plt+0x17c80>
  41a7a8:	mov	w0, #0x4                   	// #4
  41a7ac:	b	41abb4 <__fxstatat@plt+0x18054>
  41a7b0:	bl	402ac0 <__errno_location@plt>
  41a7b4:	ldr	w0, [x0]
  41a7b8:	cmp	w0, #0x0
  41a7bc:	b.eq	41a7e0 <__fxstatat@plt+0x17c80>  // b.none
  41a7c0:	bl	402ac0 <__errno_location@plt>
  41a7c4:	ldr	w0, [x0]
  41a7c8:	cmp	w0, #0x22
  41a7cc:	b.eq	41a7d8 <__fxstatat@plt+0x17c78>  // b.none
  41a7d0:	mov	w0, #0x4                   	// #4
  41a7d4:	b	41abb4 <__fxstatat@plt+0x18054>
  41a7d8:	mov	w0, #0x1                   	// #1
  41a7dc:	str	w0, [sp, #124]
  41a7e0:	ldr	x0, [sp, #24]
  41a7e4:	cmp	x0, #0x0
  41a7e8:	b.ne	41a800 <__fxstatat@plt+0x17ca0>  // b.any
  41a7ec:	ldr	x1, [sp, #72]
  41a7f0:	ldr	x0, [sp, #32]
  41a7f4:	str	x1, [x0]
  41a7f8:	ldr	w0, [sp, #124]
  41a7fc:	b	41abb4 <__fxstatat@plt+0x18054>
  41a800:	ldr	x0, [sp, #88]
  41a804:	ldr	x0, [x0]
  41a808:	ldrb	w0, [x0]
  41a80c:	cmp	w0, #0x0
  41a810:	b.eq	41aba4 <__fxstatat@plt+0x18044>  // b.none
  41a814:	mov	w0, #0x400                 	// #1024
  41a818:	str	w0, [sp, #104]
  41a81c:	mov	w0, #0x1                   	// #1
  41a820:	str	w0, [sp, #100]
  41a824:	ldr	x0, [sp, #88]
  41a828:	ldr	x0, [x0]
  41a82c:	ldrb	w0, [x0]
  41a830:	mov	w1, w0
  41a834:	ldr	x0, [sp, #24]
  41a838:	bl	402930 <strchr@plt>
  41a83c:	cmp	x0, #0x0
  41a840:	b.ne	41a85c <__fxstatat@plt+0x17cfc>  // b.any
  41a844:	ldr	x1, [sp, #72]
  41a848:	ldr	x0, [sp, #32]
  41a84c:	str	x1, [x0]
  41a850:	ldr	w0, [sp, #124]
  41a854:	orr	w0, w0, #0x2
  41a858:	b	41abb4 <__fxstatat@plt+0x18054>
  41a85c:	ldr	x0, [sp, #88]
  41a860:	ldr	x0, [x0]
  41a864:	ldrb	w0, [x0]
  41a868:	sub	w0, w0, #0x45
  41a86c:	cmp	w0, #0x2f
  41a870:	cset	w1, hi  // hi = pmore
  41a874:	and	w1, w1, #0xff
  41a878:	cmp	w1, #0x0
  41a87c:	b.ne	41a940 <__fxstatat@plt+0x17de0>  // b.any
  41a880:	mov	x1, #0x1                   	// #1
  41a884:	lsl	x1, x1, x0
  41a888:	mov	x0, #0x8945                	// #35141
  41a88c:	movk	x0, #0x30, lsl #16
  41a890:	movk	x0, #0x8144, lsl #32
  41a894:	and	x0, x1, x0
  41a898:	cmp	x0, #0x0
  41a89c:	cset	w0, ne  // ne = any
  41a8a0:	and	w0, w0, #0xff
  41a8a4:	cmp	w0, #0x0
  41a8a8:	b.eq	41a940 <__fxstatat@plt+0x17de0>  // b.none
  41a8ac:	mov	w1, #0x30                  	// #48
  41a8b0:	ldr	x0, [sp, #24]
  41a8b4:	bl	402930 <strchr@plt>
  41a8b8:	cmp	x0, #0x0
  41a8bc:	b.eq	41a934 <__fxstatat@plt+0x17dd4>  // b.none
  41a8c0:	ldr	x0, [sp, #88]
  41a8c4:	ldr	x0, [x0]
  41a8c8:	add	x0, x0, #0x1
  41a8cc:	ldrb	w0, [x0]
  41a8d0:	cmp	w0, #0x69
  41a8d4:	b.eq	41a8f4 <__fxstatat@plt+0x17d94>  // b.none
  41a8d8:	cmp	w0, #0x69
  41a8dc:	b.gt	41a940 <__fxstatat@plt+0x17de0>
  41a8e0:	cmp	w0, #0x42
  41a8e4:	b.eq	41a91c <__fxstatat@plt+0x17dbc>  // b.none
  41a8e8:	cmp	w0, #0x44
  41a8ec:	b.eq	41a91c <__fxstatat@plt+0x17dbc>  // b.none
  41a8f0:	b	41a940 <__fxstatat@plt+0x17de0>
  41a8f4:	ldr	x0, [sp, #88]
  41a8f8:	ldr	x0, [x0]
  41a8fc:	add	x0, x0, #0x2
  41a900:	ldrb	w0, [x0]
  41a904:	cmp	w0, #0x42
  41a908:	b.ne	41a93c <__fxstatat@plt+0x17ddc>  // b.any
  41a90c:	ldr	w0, [sp, #100]
  41a910:	add	w0, w0, #0x2
  41a914:	str	w0, [sp, #100]
  41a918:	b	41a93c <__fxstatat@plt+0x17ddc>
  41a91c:	mov	w0, #0x3e8                 	// #1000
  41a920:	str	w0, [sp, #104]
  41a924:	ldr	w0, [sp, #100]
  41a928:	add	w0, w0, #0x1
  41a92c:	str	w0, [sp, #100]
  41a930:	b	41a940 <__fxstatat@plt+0x17de0>
  41a934:	nop
  41a938:	b	41a940 <__fxstatat@plt+0x17de0>
  41a93c:	nop
  41a940:	ldr	x0, [sp, #88]
  41a944:	ldr	x0, [x0]
  41a948:	ldrb	w0, [x0]
  41a94c:	cmp	w0, #0x77
  41a950:	b.eq	41ab00 <__fxstatat@plt+0x17fa0>  // b.none
  41a954:	cmp	w0, #0x77
  41a958:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a95c:	cmp	w0, #0x74
  41a960:	b.eq	41aae8 <__fxstatat@plt+0x17f88>  // b.none
  41a964:	cmp	w0, #0x74
  41a968:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a96c:	cmp	w0, #0x6d
  41a970:	b.eq	41aab8 <__fxstatat@plt+0x17f58>  // b.none
  41a974:	cmp	w0, #0x6d
  41a978:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a97c:	cmp	w0, #0x6b
  41a980:	b.eq	41aaa0 <__fxstatat@plt+0x17f40>  // b.none
  41a984:	cmp	w0, #0x6b
  41a988:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a98c:	cmp	w0, #0x67
  41a990:	b.eq	41aa88 <__fxstatat@plt+0x17f28>  // b.none
  41a994:	cmp	w0, #0x67
  41a998:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a99c:	cmp	w0, #0x63
  41a9a0:	b.eq	41aa68 <__fxstatat@plt+0x17f08>  // b.none
  41a9a4:	cmp	w0, #0x63
  41a9a8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9ac:	cmp	w0, #0x62
  41a9b0:	b.eq	41aa40 <__fxstatat@plt+0x17ee0>  // b.none
  41a9b4:	cmp	w0, #0x62
  41a9b8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9bc:	cmp	w0, #0x5a
  41a9c0:	b.eq	41ab2c <__fxstatat@plt+0x17fcc>  // b.none
  41a9c4:	cmp	w0, #0x5a
  41a9c8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9cc:	cmp	w0, #0x59
  41a9d0:	b.eq	41ab14 <__fxstatat@plt+0x17fb4>  // b.none
  41a9d4:	cmp	w0, #0x59
  41a9d8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9dc:	cmp	w0, #0x54
  41a9e0:	b.eq	41aae8 <__fxstatat@plt+0x17f88>  // b.none
  41a9e4:	cmp	w0, #0x54
  41a9e8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9ec:	cmp	w0, #0x50
  41a9f0:	b.eq	41aad0 <__fxstatat@plt+0x17f70>  // b.none
  41a9f4:	cmp	w0, #0x50
  41a9f8:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41a9fc:	cmp	w0, #0x4d
  41aa00:	b.eq	41aab8 <__fxstatat@plt+0x17f58>  // b.none
  41aa04:	cmp	w0, #0x4d
  41aa08:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41aa0c:	cmp	w0, #0x4b
  41aa10:	b.eq	41aaa0 <__fxstatat@plt+0x17f40>  // b.none
  41aa14:	cmp	w0, #0x4b
  41aa18:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41aa1c:	cmp	w0, #0x47
  41aa20:	b.eq	41aa88 <__fxstatat@plt+0x17f28>  // b.none
  41aa24:	cmp	w0, #0x47
  41aa28:	b.gt	41ab44 <__fxstatat@plt+0x17fe4>
  41aa2c:	cmp	w0, #0x42
  41aa30:	b.eq	41aa54 <__fxstatat@plt+0x17ef4>  // b.none
  41aa34:	cmp	w0, #0x45
  41aa38:	b.eq	41aa70 <__fxstatat@plt+0x17f10>  // b.none
  41aa3c:	b	41ab44 <__fxstatat@plt+0x17fe4>
  41aa40:	add	x0, sp, #0x48
  41aa44:	mov	w1, #0x200                 	// #512
  41aa48:	bl	41a588 <__fxstatat@plt+0x17a28>
  41aa4c:	str	w0, [sp, #96]
  41aa50:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aa54:	add	x0, sp, #0x48
  41aa58:	mov	w1, #0x400                 	// #1024
  41aa5c:	bl	41a588 <__fxstatat@plt+0x17a28>
  41aa60:	str	w0, [sp, #96]
  41aa64:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aa68:	str	wzr, [sp, #96]
  41aa6c:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aa70:	add	x0, sp, #0x48
  41aa74:	mov	w2, #0x6                   	// #6
  41aa78:	ldr	w1, [sp, #104]
  41aa7c:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aa80:	str	w0, [sp, #96]
  41aa84:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aa88:	add	x0, sp, #0x48
  41aa8c:	mov	w2, #0x3                   	// #3
  41aa90:	ldr	w1, [sp, #104]
  41aa94:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aa98:	str	w0, [sp, #96]
  41aa9c:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aaa0:	add	x0, sp, #0x48
  41aaa4:	mov	w2, #0x1                   	// #1
  41aaa8:	ldr	w1, [sp, #104]
  41aaac:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aab0:	str	w0, [sp, #96]
  41aab4:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aab8:	add	x0, sp, #0x48
  41aabc:	mov	w2, #0x2                   	// #2
  41aac0:	ldr	w1, [sp, #104]
  41aac4:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aac8:	str	w0, [sp, #96]
  41aacc:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aad0:	add	x0, sp, #0x48
  41aad4:	mov	w2, #0x5                   	// #5
  41aad8:	ldr	w1, [sp, #104]
  41aadc:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aae0:	str	w0, [sp, #96]
  41aae4:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41aae8:	add	x0, sp, #0x48
  41aaec:	mov	w2, #0x4                   	// #4
  41aaf0:	ldr	w1, [sp, #104]
  41aaf4:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41aaf8:	str	w0, [sp, #96]
  41aafc:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41ab00:	add	x0, sp, #0x48
  41ab04:	mov	w1, #0x2                   	// #2
  41ab08:	bl	41a588 <__fxstatat@plt+0x17a28>
  41ab0c:	str	w0, [sp, #96]
  41ab10:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41ab14:	add	x0, sp, #0x48
  41ab18:	mov	w2, #0x8                   	// #8
  41ab1c:	ldr	w1, [sp, #104]
  41ab20:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41ab24:	str	w0, [sp, #96]
  41ab28:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41ab2c:	add	x0, sp, #0x48
  41ab30:	mov	w2, #0x7                   	// #7
  41ab34:	ldr	w1, [sp, #104]
  41ab38:	bl	41a5f8 <__fxstatat@plt+0x17a98>
  41ab3c:	str	w0, [sp, #96]
  41ab40:	b	41ab5c <__fxstatat@plt+0x17ffc>
  41ab44:	ldr	x1, [sp, #72]
  41ab48:	ldr	x0, [sp, #32]
  41ab4c:	str	x1, [x0]
  41ab50:	ldr	w0, [sp, #124]
  41ab54:	orr	w0, w0, #0x2
  41ab58:	b	41abb4 <__fxstatat@plt+0x18054>
  41ab5c:	ldr	w1, [sp, #124]
  41ab60:	ldr	w0, [sp, #96]
  41ab64:	orr	w0, w1, w0
  41ab68:	str	w0, [sp, #124]
  41ab6c:	ldr	x0, [sp, #88]
  41ab70:	ldr	x1, [x0]
  41ab74:	ldrsw	x0, [sp, #100]
  41ab78:	add	x1, x1, x0
  41ab7c:	ldr	x0, [sp, #88]
  41ab80:	str	x1, [x0]
  41ab84:	ldr	x0, [sp, #88]
  41ab88:	ldr	x0, [x0]
  41ab8c:	ldrb	w0, [x0]
  41ab90:	cmp	w0, #0x0
  41ab94:	b.eq	41aba4 <__fxstatat@plt+0x18044>  // b.none
  41ab98:	ldr	w0, [sp, #124]
  41ab9c:	orr	w0, w0, #0x2
  41aba0:	str	w0, [sp, #124]
  41aba4:	ldr	x1, [sp, #72]
  41aba8:	ldr	x0, [sp, #32]
  41abac:	str	x1, [x0]
  41abb0:	ldr	w0, [sp, #124]
  41abb4:	ldp	x29, x30, [sp], #128
  41abb8:	ret
  41abbc:	stp	x29, x30, [sp, #-80]!
  41abc0:	mov	x29, sp
  41abc4:	str	w0, [sp, #44]
  41abc8:	str	w1, [sp, #40]
  41abcc:	strb	w2, [sp, #39]
  41abd0:	str	x3, [sp, #24]
  41abd4:	str	x4, [sp, #16]
  41abd8:	str	w5, [sp, #32]
  41abdc:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41abe0:	add	x0, x0, #0xd78
  41abe4:	str	x0, [sp, #72]
  41abe8:	ldr	w0, [sp, #44]
  41abec:	cmp	w0, #0x4
  41abf0:	b.eq	41ac2c <__fxstatat@plt+0x180cc>  // b.none
  41abf4:	ldr	w0, [sp, #44]
  41abf8:	cmp	w0, #0x4
  41abfc:	b.hi	41ac28 <__fxstatat@plt+0x180c8>  // b.pmore
  41ac00:	ldr	w0, [sp, #44]
  41ac04:	cmp	w0, #0x1
  41ac08:	b.eq	41ac4c <__fxstatat@plt+0x180ec>  // b.none
  41ac0c:	ldr	w0, [sp, #44]
  41ac10:	cmp	w0, #0x0
  41ac14:	b.eq	41ac28 <__fxstatat@plt+0x180c8>  // b.none
  41ac18:	ldr	w0, [sp, #44]
  41ac1c:	sub	w0, w0, #0x2
  41ac20:	cmp	w0, #0x1
  41ac24:	b.ls	41ac3c <__fxstatat@plt+0x180dc>  // b.plast
  41ac28:	bl	402820 <abort@plt>
  41ac2c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ac30:	add	x0, x0, #0xd80
  41ac34:	str	x0, [sp, #64]
  41ac38:	b	41ac5c <__fxstatat@plt+0x180fc>
  41ac3c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ac40:	add	x0, x0, #0xda0
  41ac44:	str	x0, [sp, #64]
  41ac48:	b	41ac5c <__fxstatat@plt+0x180fc>
  41ac4c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ac50:	add	x0, x0, #0xdc8
  41ac54:	str	x0, [sp, #64]
  41ac58:	nop
  41ac5c:	ldr	w0, [sp, #40]
  41ac60:	cmp	w0, #0x0
  41ac64:	b.ge	41ac94 <__fxstatat@plt+0x18134>  // b.tcont
  41ac68:	ldrsw	x0, [sp, #40]
  41ac6c:	neg	x0, x0
  41ac70:	ldr	x1, [sp, #72]
  41ac74:	add	x0, x1, x0
  41ac78:	str	x0, [sp, #72]
  41ac7c:	ldrb	w0, [sp, #39]
  41ac80:	strb	w0, [sp, #48]
  41ac84:	strb	wzr, [sp, #49]
  41ac88:	add	x0, sp, #0x30
  41ac8c:	str	x0, [sp, #56]
  41ac90:	b	41acac <__fxstatat@plt+0x1814c>
  41ac94:	ldrsw	x0, [sp, #40]
  41ac98:	lsl	x0, x0, #5
  41ac9c:	ldr	x1, [sp, #24]
  41aca0:	add	x0, x1, x0
  41aca4:	ldr	x0, [x0]
  41aca8:	str	x0, [sp, #56]
  41acac:	ldr	x0, [sp, #64]
  41acb0:	bl	402b20 <gettext@plt>
  41acb4:	ldr	x5, [sp, #16]
  41acb8:	ldr	x4, [sp, #56]
  41acbc:	ldr	x3, [sp, #72]
  41acc0:	mov	x2, x0
  41acc4:	mov	w1, #0x0                   	// #0
  41acc8:	ldr	w0, [sp, #32]
  41accc:	bl	402550 <error@plt>
  41acd0:	nop
  41acd4:	ldp	x29, x30, [sp], #80
  41acd8:	ret
  41acdc:	stp	x29, x30, [sp, #-48]!
  41ace0:	mov	x29, sp
  41ace4:	str	w0, [sp, #44]
  41ace8:	str	w1, [sp, #40]
  41acec:	strb	w2, [sp, #39]
  41acf0:	str	x3, [sp, #24]
  41acf4:	str	x4, [sp, #16]
  41acf8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41acfc:	add	x0, x0, #0x570
  41ad00:	ldr	w0, [x0]
  41ad04:	mov	w5, w0
  41ad08:	ldr	x4, [sp, #16]
  41ad0c:	ldr	x3, [sp, #24]
  41ad10:	ldrb	w2, [sp, #39]
  41ad14:	ldr	w1, [sp, #40]
  41ad18:	ldr	w0, [sp, #44]
  41ad1c:	bl	41abbc <__fxstatat@plt+0x1805c>
  41ad20:	bl	402820 <abort@plt>
  41ad24:	sub	sp, sp, #0x10
  41ad28:	str	x0, [sp, #8]
  41ad2c:	str	w1, [sp, #4]
  41ad30:	ldr	x0, [sp, #8]
  41ad34:	ldr	x1, [x0]
  41ad38:	ldrsw	x0, [sp, #4]
  41ad3c:	mov	x2, #0x0                   	// #0
  41ad40:	umulh	x0, x1, x0
  41ad44:	cmp	x0, #0x0
  41ad48:	b.eq	41ad50 <__fxstatat@plt+0x181f0>  // b.none
  41ad4c:	mov	x2, #0x1                   	// #1
  41ad50:	mov	x0, x2
  41ad54:	cmp	x0, #0x0
  41ad58:	b.eq	41ad70 <__fxstatat@plt+0x18210>  // b.none
  41ad5c:	ldr	x0, [sp, #8]
  41ad60:	mov	x1, #0xffffffffffffffff    	// #-1
  41ad64:	str	x1, [x0]
  41ad68:	mov	w0, #0x1                   	// #1
  41ad6c:	b	41ad8c <__fxstatat@plt+0x1822c>
  41ad70:	ldr	x0, [sp, #8]
  41ad74:	ldr	x1, [x0]
  41ad78:	ldrsw	x0, [sp, #4]
  41ad7c:	mul	x1, x1, x0
  41ad80:	ldr	x0, [sp, #8]
  41ad84:	str	x1, [x0]
  41ad88:	mov	w0, #0x0                   	// #0
  41ad8c:	add	sp, sp, #0x10
  41ad90:	ret
  41ad94:	stp	x29, x30, [sp, #-48]!
  41ad98:	mov	x29, sp
  41ad9c:	str	x0, [sp, #24]
  41ada0:	str	w1, [sp, #20]
  41ada4:	str	w2, [sp, #16]
  41ada8:	str	wzr, [sp, #44]
  41adac:	b	41adcc <__fxstatat@plt+0x1826c>
  41adb0:	ldr	w1, [sp, #20]
  41adb4:	ldr	x0, [sp, #24]
  41adb8:	bl	41ad24 <__fxstatat@plt+0x181c4>
  41adbc:	mov	w1, w0
  41adc0:	ldr	w0, [sp, #44]
  41adc4:	orr	w0, w0, w1
  41adc8:	str	w0, [sp, #44]
  41adcc:	ldr	w0, [sp, #16]
  41add0:	sub	w1, w0, #0x1
  41add4:	str	w1, [sp, #16]
  41add8:	cmp	w0, #0x0
  41addc:	b.ne	41adb0 <__fxstatat@plt+0x18250>  // b.any
  41ade0:	ldr	w0, [sp, #44]
  41ade4:	ldp	x29, x30, [sp], #48
  41ade8:	ret
  41adec:	stp	x29, x30, [sp, #-128]!
  41adf0:	mov	x29, sp
  41adf4:	str	x0, [sp, #56]
  41adf8:	str	x1, [sp, #48]
  41adfc:	str	w2, [sp, #44]
  41ae00:	str	x3, [sp, #32]
  41ae04:	str	x4, [sp, #24]
  41ae08:	str	wzr, [sp, #124]
  41ae0c:	ldr	w0, [sp, #44]
  41ae10:	cmp	w0, #0x0
  41ae14:	b.lt	41ae24 <__fxstatat@plt+0x182c4>  // b.tstop
  41ae18:	ldr	w0, [sp, #44]
  41ae1c:	cmp	w0, #0x24
  41ae20:	b.le	41ae44 <__fxstatat@plt+0x182e4>
  41ae24:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ae28:	add	x3, x0, #0xe20
  41ae2c:	mov	w2, #0x54                  	// #84
  41ae30:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ae34:	add	x1, x0, #0xde8
  41ae38:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41ae3c:	add	x0, x0, #0xdf8
  41ae40:	bl	402ab0 <__assert_fail@plt>
  41ae44:	ldr	x0, [sp, #48]
  41ae48:	cmp	x0, #0x0
  41ae4c:	b.ne	41ae58 <__fxstatat@plt+0x182f8>  // b.any
  41ae50:	add	x0, sp, #0x50
  41ae54:	b	41ae5c <__fxstatat@plt+0x182fc>
  41ae58:	ldr	x0, [sp, #48]
  41ae5c:	str	x0, [sp, #88]
  41ae60:	bl	402ac0 <__errno_location@plt>
  41ae64:	str	wzr, [x0]
  41ae68:	ldr	x0, [sp, #56]
  41ae6c:	str	x0, [sp, #112]
  41ae70:	ldr	x0, [sp, #112]
  41ae74:	ldrb	w0, [x0]
  41ae78:	strb	w0, [sp, #111]
  41ae7c:	b	41ae98 <__fxstatat@plt+0x18338>
  41ae80:	ldr	x0, [sp, #112]
  41ae84:	add	x0, x0, #0x1
  41ae88:	str	x0, [sp, #112]
  41ae8c:	ldr	x0, [sp, #112]
  41ae90:	ldrb	w0, [x0]
  41ae94:	strb	w0, [sp, #111]
  41ae98:	bl	4028d0 <__ctype_b_loc@plt>
  41ae9c:	ldr	x1, [x0]
  41aea0:	ldrb	w0, [sp, #111]
  41aea4:	lsl	x0, x0, #1
  41aea8:	add	x0, x1, x0
  41aeac:	ldrh	w0, [x0]
  41aeb0:	and	w0, w0, #0x2000
  41aeb4:	cmp	w0, #0x0
  41aeb8:	b.ne	41ae80 <__fxstatat@plt+0x18320>  // b.any
  41aebc:	ldrb	w0, [sp, #111]
  41aec0:	cmp	w0, #0x2d
  41aec4:	b.ne	41aed0 <__fxstatat@plt+0x18370>  // b.any
  41aec8:	mov	w0, #0x4                   	// #4
  41aecc:	b	41b350 <__fxstatat@plt+0x187f0>
  41aed0:	ldr	w2, [sp, #44]
  41aed4:	ldr	x1, [sp, #88]
  41aed8:	ldr	x0, [sp, #56]
  41aedc:	bl	402810 <strtoumax@plt>
  41aee0:	str	x0, [sp, #72]
  41aee4:	ldr	x0, [sp, #88]
  41aee8:	ldr	x0, [x0]
  41aeec:	ldr	x1, [sp, #56]
  41aef0:	cmp	x1, x0
  41aef4:	b.ne	41af4c <__fxstatat@plt+0x183ec>  // b.any
  41aef8:	ldr	x0, [sp, #24]
  41aefc:	cmp	x0, #0x0
  41af00:	b.eq	41af44 <__fxstatat@plt+0x183e4>  // b.none
  41af04:	ldr	x0, [sp, #88]
  41af08:	ldr	x0, [x0]
  41af0c:	ldrb	w0, [x0]
  41af10:	cmp	w0, #0x0
  41af14:	b.eq	41af44 <__fxstatat@plt+0x183e4>  // b.none
  41af18:	ldr	x0, [sp, #88]
  41af1c:	ldr	x0, [x0]
  41af20:	ldrb	w0, [x0]
  41af24:	mov	w1, w0
  41af28:	ldr	x0, [sp, #24]
  41af2c:	bl	402930 <strchr@plt>
  41af30:	cmp	x0, #0x0
  41af34:	b.eq	41af44 <__fxstatat@plt+0x183e4>  // b.none
  41af38:	mov	x0, #0x1                   	// #1
  41af3c:	str	x0, [sp, #72]
  41af40:	b	41af7c <__fxstatat@plt+0x1841c>
  41af44:	mov	w0, #0x4                   	// #4
  41af48:	b	41b350 <__fxstatat@plt+0x187f0>
  41af4c:	bl	402ac0 <__errno_location@plt>
  41af50:	ldr	w0, [x0]
  41af54:	cmp	w0, #0x0
  41af58:	b.eq	41af7c <__fxstatat@plt+0x1841c>  // b.none
  41af5c:	bl	402ac0 <__errno_location@plt>
  41af60:	ldr	w0, [x0]
  41af64:	cmp	w0, #0x22
  41af68:	b.eq	41af74 <__fxstatat@plt+0x18414>  // b.none
  41af6c:	mov	w0, #0x4                   	// #4
  41af70:	b	41b350 <__fxstatat@plt+0x187f0>
  41af74:	mov	w0, #0x1                   	// #1
  41af78:	str	w0, [sp, #124]
  41af7c:	ldr	x0, [sp, #24]
  41af80:	cmp	x0, #0x0
  41af84:	b.ne	41af9c <__fxstatat@plt+0x1843c>  // b.any
  41af88:	ldr	x1, [sp, #72]
  41af8c:	ldr	x0, [sp, #32]
  41af90:	str	x1, [x0]
  41af94:	ldr	w0, [sp, #124]
  41af98:	b	41b350 <__fxstatat@plt+0x187f0>
  41af9c:	ldr	x0, [sp, #88]
  41afa0:	ldr	x0, [x0]
  41afa4:	ldrb	w0, [x0]
  41afa8:	cmp	w0, #0x0
  41afac:	b.eq	41b340 <__fxstatat@plt+0x187e0>  // b.none
  41afb0:	mov	w0, #0x400                 	// #1024
  41afb4:	str	w0, [sp, #104]
  41afb8:	mov	w0, #0x1                   	// #1
  41afbc:	str	w0, [sp, #100]
  41afc0:	ldr	x0, [sp, #88]
  41afc4:	ldr	x0, [x0]
  41afc8:	ldrb	w0, [x0]
  41afcc:	mov	w1, w0
  41afd0:	ldr	x0, [sp, #24]
  41afd4:	bl	402930 <strchr@plt>
  41afd8:	cmp	x0, #0x0
  41afdc:	b.ne	41aff8 <__fxstatat@plt+0x18498>  // b.any
  41afe0:	ldr	x1, [sp, #72]
  41afe4:	ldr	x0, [sp, #32]
  41afe8:	str	x1, [x0]
  41afec:	ldr	w0, [sp, #124]
  41aff0:	orr	w0, w0, #0x2
  41aff4:	b	41b350 <__fxstatat@plt+0x187f0>
  41aff8:	ldr	x0, [sp, #88]
  41affc:	ldr	x0, [x0]
  41b000:	ldrb	w0, [x0]
  41b004:	sub	w0, w0, #0x45
  41b008:	cmp	w0, #0x2f
  41b00c:	cset	w1, hi  // hi = pmore
  41b010:	and	w1, w1, #0xff
  41b014:	cmp	w1, #0x0
  41b018:	b.ne	41b0dc <__fxstatat@plt+0x1857c>  // b.any
  41b01c:	mov	x1, #0x1                   	// #1
  41b020:	lsl	x1, x1, x0
  41b024:	mov	x0, #0x8945                	// #35141
  41b028:	movk	x0, #0x30, lsl #16
  41b02c:	movk	x0, #0x8144, lsl #32
  41b030:	and	x0, x1, x0
  41b034:	cmp	x0, #0x0
  41b038:	cset	w0, ne  // ne = any
  41b03c:	and	w0, w0, #0xff
  41b040:	cmp	w0, #0x0
  41b044:	b.eq	41b0dc <__fxstatat@plt+0x1857c>  // b.none
  41b048:	mov	w1, #0x30                  	// #48
  41b04c:	ldr	x0, [sp, #24]
  41b050:	bl	402930 <strchr@plt>
  41b054:	cmp	x0, #0x0
  41b058:	b.eq	41b0d0 <__fxstatat@plt+0x18570>  // b.none
  41b05c:	ldr	x0, [sp, #88]
  41b060:	ldr	x0, [x0]
  41b064:	add	x0, x0, #0x1
  41b068:	ldrb	w0, [x0]
  41b06c:	cmp	w0, #0x69
  41b070:	b.eq	41b090 <__fxstatat@plt+0x18530>  // b.none
  41b074:	cmp	w0, #0x69
  41b078:	b.gt	41b0dc <__fxstatat@plt+0x1857c>
  41b07c:	cmp	w0, #0x42
  41b080:	b.eq	41b0b8 <__fxstatat@plt+0x18558>  // b.none
  41b084:	cmp	w0, #0x44
  41b088:	b.eq	41b0b8 <__fxstatat@plt+0x18558>  // b.none
  41b08c:	b	41b0dc <__fxstatat@plt+0x1857c>
  41b090:	ldr	x0, [sp, #88]
  41b094:	ldr	x0, [x0]
  41b098:	add	x0, x0, #0x2
  41b09c:	ldrb	w0, [x0]
  41b0a0:	cmp	w0, #0x42
  41b0a4:	b.ne	41b0d8 <__fxstatat@plt+0x18578>  // b.any
  41b0a8:	ldr	w0, [sp, #100]
  41b0ac:	add	w0, w0, #0x2
  41b0b0:	str	w0, [sp, #100]
  41b0b4:	b	41b0d8 <__fxstatat@plt+0x18578>
  41b0b8:	mov	w0, #0x3e8                 	// #1000
  41b0bc:	str	w0, [sp, #104]
  41b0c0:	ldr	w0, [sp, #100]
  41b0c4:	add	w0, w0, #0x1
  41b0c8:	str	w0, [sp, #100]
  41b0cc:	b	41b0dc <__fxstatat@plt+0x1857c>
  41b0d0:	nop
  41b0d4:	b	41b0dc <__fxstatat@plt+0x1857c>
  41b0d8:	nop
  41b0dc:	ldr	x0, [sp, #88]
  41b0e0:	ldr	x0, [x0]
  41b0e4:	ldrb	w0, [x0]
  41b0e8:	cmp	w0, #0x77
  41b0ec:	b.eq	41b29c <__fxstatat@plt+0x1873c>  // b.none
  41b0f0:	cmp	w0, #0x77
  41b0f4:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b0f8:	cmp	w0, #0x74
  41b0fc:	b.eq	41b284 <__fxstatat@plt+0x18724>  // b.none
  41b100:	cmp	w0, #0x74
  41b104:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b108:	cmp	w0, #0x6d
  41b10c:	b.eq	41b254 <__fxstatat@plt+0x186f4>  // b.none
  41b110:	cmp	w0, #0x6d
  41b114:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b118:	cmp	w0, #0x6b
  41b11c:	b.eq	41b23c <__fxstatat@plt+0x186dc>  // b.none
  41b120:	cmp	w0, #0x6b
  41b124:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b128:	cmp	w0, #0x67
  41b12c:	b.eq	41b224 <__fxstatat@plt+0x186c4>  // b.none
  41b130:	cmp	w0, #0x67
  41b134:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b138:	cmp	w0, #0x63
  41b13c:	b.eq	41b204 <__fxstatat@plt+0x186a4>  // b.none
  41b140:	cmp	w0, #0x63
  41b144:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b148:	cmp	w0, #0x62
  41b14c:	b.eq	41b1dc <__fxstatat@plt+0x1867c>  // b.none
  41b150:	cmp	w0, #0x62
  41b154:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b158:	cmp	w0, #0x5a
  41b15c:	b.eq	41b2c8 <__fxstatat@plt+0x18768>  // b.none
  41b160:	cmp	w0, #0x5a
  41b164:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b168:	cmp	w0, #0x59
  41b16c:	b.eq	41b2b0 <__fxstatat@plt+0x18750>  // b.none
  41b170:	cmp	w0, #0x59
  41b174:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b178:	cmp	w0, #0x54
  41b17c:	b.eq	41b284 <__fxstatat@plt+0x18724>  // b.none
  41b180:	cmp	w0, #0x54
  41b184:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b188:	cmp	w0, #0x50
  41b18c:	b.eq	41b26c <__fxstatat@plt+0x1870c>  // b.none
  41b190:	cmp	w0, #0x50
  41b194:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b198:	cmp	w0, #0x4d
  41b19c:	b.eq	41b254 <__fxstatat@plt+0x186f4>  // b.none
  41b1a0:	cmp	w0, #0x4d
  41b1a4:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b1a8:	cmp	w0, #0x4b
  41b1ac:	b.eq	41b23c <__fxstatat@plt+0x186dc>  // b.none
  41b1b0:	cmp	w0, #0x4b
  41b1b4:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b1b8:	cmp	w0, #0x47
  41b1bc:	b.eq	41b224 <__fxstatat@plt+0x186c4>  // b.none
  41b1c0:	cmp	w0, #0x47
  41b1c4:	b.gt	41b2e0 <__fxstatat@plt+0x18780>
  41b1c8:	cmp	w0, #0x42
  41b1cc:	b.eq	41b1f0 <__fxstatat@plt+0x18690>  // b.none
  41b1d0:	cmp	w0, #0x45
  41b1d4:	b.eq	41b20c <__fxstatat@plt+0x186ac>  // b.none
  41b1d8:	b	41b2e0 <__fxstatat@plt+0x18780>
  41b1dc:	add	x0, sp, #0x48
  41b1e0:	mov	w1, #0x200                 	// #512
  41b1e4:	bl	41ad24 <__fxstatat@plt+0x181c4>
  41b1e8:	str	w0, [sp, #96]
  41b1ec:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b1f0:	add	x0, sp, #0x48
  41b1f4:	mov	w1, #0x400                 	// #1024
  41b1f8:	bl	41ad24 <__fxstatat@plt+0x181c4>
  41b1fc:	str	w0, [sp, #96]
  41b200:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b204:	str	wzr, [sp, #96]
  41b208:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b20c:	add	x0, sp, #0x48
  41b210:	mov	w2, #0x6                   	// #6
  41b214:	ldr	w1, [sp, #104]
  41b218:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b21c:	str	w0, [sp, #96]
  41b220:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b224:	add	x0, sp, #0x48
  41b228:	mov	w2, #0x3                   	// #3
  41b22c:	ldr	w1, [sp, #104]
  41b230:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b234:	str	w0, [sp, #96]
  41b238:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b23c:	add	x0, sp, #0x48
  41b240:	mov	w2, #0x1                   	// #1
  41b244:	ldr	w1, [sp, #104]
  41b248:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b24c:	str	w0, [sp, #96]
  41b250:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b254:	add	x0, sp, #0x48
  41b258:	mov	w2, #0x2                   	// #2
  41b25c:	ldr	w1, [sp, #104]
  41b260:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b264:	str	w0, [sp, #96]
  41b268:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b26c:	add	x0, sp, #0x48
  41b270:	mov	w2, #0x5                   	// #5
  41b274:	ldr	w1, [sp, #104]
  41b278:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b27c:	str	w0, [sp, #96]
  41b280:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b284:	add	x0, sp, #0x48
  41b288:	mov	w2, #0x4                   	// #4
  41b28c:	ldr	w1, [sp, #104]
  41b290:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b294:	str	w0, [sp, #96]
  41b298:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b29c:	add	x0, sp, #0x48
  41b2a0:	mov	w1, #0x2                   	// #2
  41b2a4:	bl	41ad24 <__fxstatat@plt+0x181c4>
  41b2a8:	str	w0, [sp, #96]
  41b2ac:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b2b0:	add	x0, sp, #0x48
  41b2b4:	mov	w2, #0x8                   	// #8
  41b2b8:	ldr	w1, [sp, #104]
  41b2bc:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b2c0:	str	w0, [sp, #96]
  41b2c4:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b2c8:	add	x0, sp, #0x48
  41b2cc:	mov	w2, #0x7                   	// #7
  41b2d0:	ldr	w1, [sp, #104]
  41b2d4:	bl	41ad94 <__fxstatat@plt+0x18234>
  41b2d8:	str	w0, [sp, #96]
  41b2dc:	b	41b2f8 <__fxstatat@plt+0x18798>
  41b2e0:	ldr	x1, [sp, #72]
  41b2e4:	ldr	x0, [sp, #32]
  41b2e8:	str	x1, [x0]
  41b2ec:	ldr	w0, [sp, #124]
  41b2f0:	orr	w0, w0, #0x2
  41b2f4:	b	41b350 <__fxstatat@plt+0x187f0>
  41b2f8:	ldr	w1, [sp, #124]
  41b2fc:	ldr	w0, [sp, #96]
  41b300:	orr	w0, w1, w0
  41b304:	str	w0, [sp, #124]
  41b308:	ldr	x0, [sp, #88]
  41b30c:	ldr	x1, [x0]
  41b310:	ldrsw	x0, [sp, #100]
  41b314:	add	x1, x1, x0
  41b318:	ldr	x0, [sp, #88]
  41b31c:	str	x1, [x0]
  41b320:	ldr	x0, [sp, #88]
  41b324:	ldr	x0, [x0]
  41b328:	ldrb	w0, [x0]
  41b32c:	cmp	w0, #0x0
  41b330:	b.eq	41b340 <__fxstatat@plt+0x187e0>  // b.none
  41b334:	ldr	w0, [sp, #124]
  41b338:	orr	w0, w0, #0x2
  41b33c:	str	w0, [sp, #124]
  41b340:	ldr	x1, [sp, #72]
  41b344:	ldr	x0, [sp, #32]
  41b348:	str	x1, [x0]
  41b34c:	ldr	w0, [sp, #124]
  41b350:	ldp	x29, x30, [sp], #128
  41b354:	ret
  41b358:	stp	x29, x30, [sp, #-64]!
  41b35c:	mov	x29, sp
  41b360:	str	x0, [sp, #40]
  41b364:	str	x1, [sp, #32]
  41b368:	str	x2, [sp, #24]
  41b36c:	str	x3, [sp, #16]
  41b370:	ldr	x0, [sp, #40]
  41b374:	cmp	x0, #0x0
  41b378:	b.ne	41b384 <__fxstatat@plt+0x18824>  // b.any
  41b37c:	add	x0, sp, #0x30
  41b380:	str	x0, [sp, #40]
  41b384:	ldr	x3, [sp, #16]
  41b388:	ldr	x2, [sp, #24]
  41b38c:	ldr	x1, [sp, #32]
  41b390:	ldr	x0, [sp, #40]
  41b394:	bl	402480 <mbrtowc@plt>
  41b398:	str	x0, [sp, #56]
  41b39c:	ldr	x0, [sp, #56]
  41b3a0:	cmn	x0, #0x3
  41b3a4:	b.ls	41b3f0 <__fxstatat@plt+0x18890>  // b.plast
  41b3a8:	ldr	x0, [sp, #24]
  41b3ac:	cmp	x0, #0x0
  41b3b0:	b.eq	41b3f0 <__fxstatat@plt+0x18890>  // b.none
  41b3b4:	mov	w0, #0x0                   	// #0
  41b3b8:	bl	410568 <__fxstatat@plt+0xda08>
  41b3bc:	and	w0, w0, #0xff
  41b3c0:	eor	w0, w0, #0x1
  41b3c4:	and	w0, w0, #0xff
  41b3c8:	cmp	w0, #0x0
  41b3cc:	b.eq	41b3f0 <__fxstatat@plt+0x18890>  // b.none
  41b3d0:	ldr	x0, [sp, #32]
  41b3d4:	ldrb	w0, [x0]
  41b3d8:	strb	w0, [sp, #55]
  41b3dc:	ldrb	w1, [sp, #55]
  41b3e0:	ldr	x0, [sp, #40]
  41b3e4:	str	w1, [x0]
  41b3e8:	mov	x0, #0x1                   	// #1
  41b3ec:	b	41b3f4 <__fxstatat@plt+0x18894>
  41b3f0:	ldr	x0, [sp, #56]
  41b3f4:	ldp	x29, x30, [sp], #64
  41b3f8:	ret
  41b3fc:	stp	x29, x30, [sp, #-32]!
  41b400:	mov	x29, sp
  41b404:	str	x0, [sp, #24]
  41b408:	str	x1, [sp, #16]
  41b40c:	ldr	x0, [sp, #24]
  41b410:	ldrb	w0, [x0, #80]
  41b414:	and	w0, w0, #0x1
  41b418:	and	w0, w0, #0xff
  41b41c:	cmp	w0, #0x0
  41b420:	b.eq	41b440 <__fxstatat@plt+0x188e0>  // b.none
  41b424:	ldr	x0, [sp, #24]
  41b428:	ldr	x2, [x0, #56]
  41b42c:	ldr	x0, [sp, #24]
  41b430:	ldr	x0, [x0, #72]
  41b434:	ldr	x1, [sp, #16]
  41b438:	blr	x2
  41b43c:	b	41b450 <__fxstatat@plt+0x188f0>
  41b440:	ldr	x0, [sp, #24]
  41b444:	ldr	x1, [x0, #56]
  41b448:	ldr	x0, [sp, #16]
  41b44c:	blr	x1
  41b450:	ldp	x29, x30, [sp], #32
  41b454:	ret
  41b458:	stp	x29, x30, [sp, #-32]!
  41b45c:	mov	x29, sp
  41b460:	str	x0, [sp, #24]
  41b464:	str	x1, [sp, #16]
  41b468:	ldr	x0, [sp, #24]
  41b46c:	ldrb	w0, [x0, #80]
  41b470:	and	w0, w0, #0x1
  41b474:	and	w0, w0, #0xff
  41b478:	cmp	w0, #0x0
  41b47c:	b.eq	41b49c <__fxstatat@plt+0x1893c>  // b.none
  41b480:	ldr	x0, [sp, #24]
  41b484:	ldr	x2, [x0, #64]
  41b488:	ldr	x0, [sp, #24]
  41b48c:	ldr	x0, [x0, #72]
  41b490:	ldr	x1, [sp, #16]
  41b494:	blr	x2
  41b498:	b	41b4ac <__fxstatat@plt+0x1894c>
  41b49c:	ldr	x0, [sp, #24]
  41b4a0:	ldr	x1, [x0, #64]
  41b4a4:	ldr	x0, [sp, #16]
  41b4a8:	blr	x1
  41b4ac:	nop
  41b4b0:	ldp	x29, x30, [sp], #32
  41b4b4:	ret
  41b4b8:	stp	x29, x30, [sp, #-64]!
  41b4bc:	mov	x29, sp
  41b4c0:	str	x0, [sp, #40]
  41b4c4:	str	x1, [sp, #32]
  41b4c8:	str	x2, [sp, #24]
  41b4cc:	ldr	x0, [sp, #24]
  41b4d0:	cmp	x0, #0x0
  41b4d4:	b.ne	41b4e0 <__fxstatat@plt+0x18980>  // b.any
  41b4d8:	mov	x0, #0x10                  	// #16
  41b4dc:	str	x0, [sp, #24]
  41b4e0:	ldr	x0, [sp, #32]
  41b4e4:	cmp	x0, #0x0
  41b4e8:	b.ne	41b508 <__fxstatat@plt+0x189a8>  // b.any
  41b4ec:	mov	w0, #0x20                  	// #32
  41b4f0:	str	w0, [sp, #60]
  41b4f4:	mov	w1, #0x1000                	// #4096
  41b4f8:	ldr	w0, [sp, #60]
  41b4fc:	sub	w0, w1, w0
  41b500:	sxtw	x0, w0
  41b504:	str	x0, [sp, #32]
  41b508:	ldr	x0, [sp, #40]
  41b50c:	ldr	x1, [sp, #32]
  41b510:	str	x1, [x0]
  41b514:	ldr	x0, [sp, #24]
  41b518:	sub	x1, x0, #0x1
  41b51c:	ldr	x0, [sp, #40]
  41b520:	str	x1, [x0, #48]
  41b524:	ldr	x0, [sp, #40]
  41b528:	ldr	x0, [x0]
  41b52c:	mov	x1, x0
  41b530:	ldr	x0, [sp, #40]
  41b534:	bl	41b3fc <__fxstatat@plt+0x1889c>
  41b538:	mov	x1, x0
  41b53c:	ldr	x0, [sp, #40]
  41b540:	str	x1, [x0, #8]
  41b544:	ldr	x0, [sp, #40]
  41b548:	ldr	x0, [x0, #8]
  41b54c:	str	x0, [sp, #48]
  41b550:	ldr	x0, [sp, #48]
  41b554:	cmp	x0, #0x0
  41b558:	b.ne	41b56c <__fxstatat@plt+0x18a0c>  // b.any
  41b55c:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41b560:	add	x0, x0, #0x5d0
  41b564:	ldr	x0, [x0]
  41b568:	blr	x0
  41b56c:	ldr	x0, [sp, #48]
  41b570:	add	x0, x0, #0x10
  41b574:	mov	x1, x0
  41b578:	ldr	x0, [sp, #24]
  41b57c:	add	x0, x1, x0
  41b580:	sub	x1, x0, #0x1
  41b584:	ldr	x0, [sp, #24]
  41b588:	neg	x0, x0
  41b58c:	and	x0, x1, x0
  41b590:	mov	x1, x0
  41b594:	ldr	x0, [sp, #40]
  41b598:	str	x1, [x0, #16]
  41b59c:	ldr	x0, [sp, #40]
  41b5a0:	ldr	x1, [x0, #16]
  41b5a4:	ldr	x0, [sp, #40]
  41b5a8:	str	x1, [x0, #24]
  41b5ac:	ldr	x0, [sp, #40]
  41b5b0:	ldr	x0, [x0]
  41b5b4:	ldr	x1, [sp, #48]
  41b5b8:	add	x1, x1, x0
  41b5bc:	ldr	x0, [sp, #48]
  41b5c0:	str	x1, [x0]
  41b5c4:	ldr	x0, [sp, #48]
  41b5c8:	ldr	x1, [x0]
  41b5cc:	ldr	x0, [sp, #40]
  41b5d0:	str	x1, [x0, #32]
  41b5d4:	ldr	x0, [sp, #48]
  41b5d8:	str	xzr, [x0, #8]
  41b5dc:	ldr	x0, [sp, #40]
  41b5e0:	ldrb	w1, [x0, #80]
  41b5e4:	and	w1, w1, #0xfffffffd
  41b5e8:	strb	w1, [x0, #80]
  41b5ec:	ldr	x0, [sp, #40]
  41b5f0:	ldrb	w1, [x0, #80]
  41b5f4:	and	w1, w1, #0xfffffffb
  41b5f8:	strb	w1, [x0, #80]
  41b5fc:	mov	w0, #0x1                   	// #1
  41b600:	ldp	x29, x30, [sp], #64
  41b604:	ret

000000000041b608 <_obstack_begin@@Base>:
  41b608:	stp	x29, x30, [sp, #-64]!
  41b60c:	mov	x29, sp
  41b610:	str	x0, [sp, #56]
  41b614:	str	x1, [sp, #48]
  41b618:	str	x2, [sp, #40]
  41b61c:	str	x3, [sp, #32]
  41b620:	str	x4, [sp, #24]
  41b624:	ldr	x0, [sp, #56]
  41b628:	ldr	x1, [sp, #32]
  41b62c:	str	x1, [x0, #56]
  41b630:	ldr	x0, [sp, #56]
  41b634:	ldr	x1, [sp, #24]
  41b638:	str	x1, [x0, #64]
  41b63c:	ldr	x0, [sp, #56]
  41b640:	ldrb	w1, [x0, #80]
  41b644:	and	w1, w1, #0xfffffffe
  41b648:	strb	w1, [x0, #80]
  41b64c:	ldr	x2, [sp, #40]
  41b650:	ldr	x1, [sp, #48]
  41b654:	ldr	x0, [sp, #56]
  41b658:	bl	41b4b8 <__fxstatat@plt+0x18958>
  41b65c:	ldp	x29, x30, [sp], #64
  41b660:	ret

000000000041b664 <_obstack_begin_1@@Base>:
  41b664:	stp	x29, x30, [sp, #-64]!
  41b668:	mov	x29, sp
  41b66c:	str	x0, [sp, #56]
  41b670:	str	x1, [sp, #48]
  41b674:	str	x2, [sp, #40]
  41b678:	str	x3, [sp, #32]
  41b67c:	str	x4, [sp, #24]
  41b680:	str	x5, [sp, #16]
  41b684:	ldr	x0, [sp, #56]
  41b688:	ldr	x1, [sp, #32]
  41b68c:	str	x1, [x0, #56]
  41b690:	ldr	x0, [sp, #56]
  41b694:	ldr	x1, [sp, #24]
  41b698:	str	x1, [x0, #64]
  41b69c:	ldr	x0, [sp, #56]
  41b6a0:	ldr	x1, [sp, #16]
  41b6a4:	str	x1, [x0, #72]
  41b6a8:	ldr	x0, [sp, #56]
  41b6ac:	ldrb	w1, [x0, #80]
  41b6b0:	orr	w1, w1, #0x1
  41b6b4:	strb	w1, [x0, #80]
  41b6b8:	ldr	x2, [sp, #40]
  41b6bc:	ldr	x1, [sp, #48]
  41b6c0:	ldr	x0, [sp, #56]
  41b6c4:	bl	41b4b8 <__fxstatat@plt+0x18958>
  41b6c8:	ldp	x29, x30, [sp], #64
  41b6cc:	ret

000000000041b6d0 <_obstack_newchunk@@Base>:
  41b6d0:	stp	x29, x30, [sp, #-96]!
  41b6d4:	mov	x29, sp
  41b6d8:	str	x0, [sp, #24]
  41b6dc:	str	x1, [sp, #16]
  41b6e0:	ldr	x0, [sp, #24]
  41b6e4:	ldr	x0, [x0, #8]
  41b6e8:	str	x0, [sp, #72]
  41b6ec:	str	xzr, [sp, #88]
  41b6f0:	ldr	x0, [sp, #24]
  41b6f4:	ldr	x1, [x0, #24]
  41b6f8:	ldr	x0, [sp, #24]
  41b6fc:	ldr	x0, [x0, #16]
  41b700:	sub	x0, x1, x0
  41b704:	str	x0, [sp, #64]
  41b708:	ldr	x1, [sp, #64]
  41b70c:	ldr	x0, [sp, #16]
  41b710:	add	x0, x1, x0
  41b714:	str	x0, [sp, #56]
  41b718:	ldr	x0, [sp, #24]
  41b71c:	ldr	x0, [x0, #48]
  41b720:	ldr	x1, [sp, #56]
  41b724:	add	x0, x1, x0
  41b728:	str	x0, [sp, #48]
  41b72c:	ldr	x0, [sp, #64]
  41b730:	lsr	x1, x0, #3
  41b734:	ldr	x0, [sp, #48]
  41b738:	add	x0, x1, x0
  41b73c:	add	x0, x0, #0x64
  41b740:	str	x0, [sp, #80]
  41b744:	ldr	x1, [sp, #80]
  41b748:	ldr	x0, [sp, #48]
  41b74c:	cmp	x1, x0
  41b750:	b.cs	41b75c <_obstack_newchunk@@Base+0x8c>  // b.hs, b.nlast
  41b754:	ldr	x0, [sp, #48]
  41b758:	str	x0, [sp, #80]
  41b75c:	ldr	x0, [sp, #24]
  41b760:	ldr	x0, [x0]
  41b764:	ldr	x1, [sp, #80]
  41b768:	cmp	x1, x0
  41b76c:	b.cs	41b77c <_obstack_newchunk@@Base+0xac>  // b.hs, b.nlast
  41b770:	ldr	x0, [sp, #24]
  41b774:	ldr	x0, [x0]
  41b778:	str	x0, [sp, #80]
  41b77c:	ldr	x1, [sp, #64]
  41b780:	ldr	x0, [sp, #56]
  41b784:	cmp	x1, x0
  41b788:	b.hi	41b7ac <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41b78c:	ldr	x1, [sp, #56]
  41b790:	ldr	x0, [sp, #48]
  41b794:	cmp	x1, x0
  41b798:	b.hi	41b7ac <_obstack_newchunk@@Base+0xdc>  // b.pmore
  41b79c:	ldr	x1, [sp, #80]
  41b7a0:	ldr	x0, [sp, #24]
  41b7a4:	bl	41b3fc <__fxstatat@plt+0x1889c>
  41b7a8:	str	x0, [sp, #88]
  41b7ac:	ldr	x0, [sp, #88]
  41b7b0:	cmp	x0, #0x0
  41b7b4:	b.ne	41b7c8 <_obstack_newchunk@@Base+0xf8>  // b.any
  41b7b8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41b7bc:	add	x0, x0, #0x5d0
  41b7c0:	ldr	x0, [x0]
  41b7c4:	blr	x0
  41b7c8:	ldr	x0, [sp, #24]
  41b7cc:	ldr	x1, [sp, #88]
  41b7d0:	str	x1, [x0, #8]
  41b7d4:	ldr	x0, [sp, #88]
  41b7d8:	ldr	x1, [sp, #72]
  41b7dc:	str	x1, [x0, #8]
  41b7e0:	ldr	x1, [sp, #88]
  41b7e4:	ldr	x0, [sp, #80]
  41b7e8:	add	x1, x1, x0
  41b7ec:	ldr	x0, [sp, #24]
  41b7f0:	str	x1, [x0, #32]
  41b7f4:	ldr	x0, [sp, #24]
  41b7f8:	ldr	x1, [x0, #32]
  41b7fc:	ldr	x0, [sp, #88]
  41b800:	str	x1, [x0]
  41b804:	ldr	x0, [sp, #88]
  41b808:	add	x0, x0, #0x10
  41b80c:	mov	x1, x0
  41b810:	ldr	x0, [sp, #24]
  41b814:	ldr	x0, [x0, #48]
  41b818:	add	x1, x1, x0
  41b81c:	ldr	x0, [sp, #24]
  41b820:	ldr	x0, [x0, #48]
  41b824:	mvn	x0, x0
  41b828:	and	x0, x1, x0
  41b82c:	str	x0, [sp, #40]
  41b830:	ldr	x0, [sp, #24]
  41b834:	ldr	x0, [x0, #16]
  41b838:	ldr	x2, [sp, #64]
  41b83c:	mov	x1, x0
  41b840:	ldr	x0, [sp, #40]
  41b844:	bl	402490 <memcpy@plt>
  41b848:	ldr	x0, [sp, #24]
  41b84c:	ldrb	w0, [x0, #80]
  41b850:	and	w0, w0, #0x2
  41b854:	and	w0, w0, #0xff
  41b858:	cmp	w0, #0x0
  41b85c:	b.ne	41b8b4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41b860:	ldr	x0, [sp, #24]
  41b864:	ldr	x0, [x0, #16]
  41b868:	ldr	x1, [sp, #72]
  41b86c:	add	x1, x1, #0x10
  41b870:	mov	x2, x1
  41b874:	ldr	x1, [sp, #24]
  41b878:	ldr	x1, [x1, #48]
  41b87c:	add	x2, x2, x1
  41b880:	ldr	x1, [sp, #24]
  41b884:	ldr	x1, [x1, #48]
  41b888:	mvn	x1, x1
  41b88c:	and	x1, x2, x1
  41b890:	cmp	x0, x1
  41b894:	b.ne	41b8b4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  41b898:	ldr	x0, [sp, #72]
  41b89c:	ldr	x1, [x0, #8]
  41b8a0:	ldr	x0, [sp, #88]
  41b8a4:	str	x1, [x0, #8]
  41b8a8:	ldr	x1, [sp, #72]
  41b8ac:	ldr	x0, [sp, #24]
  41b8b0:	bl	41b458 <__fxstatat@plt+0x188f8>
  41b8b4:	ldr	x0, [sp, #24]
  41b8b8:	ldr	x1, [sp, #40]
  41b8bc:	str	x1, [x0, #16]
  41b8c0:	ldr	x0, [sp, #24]
  41b8c4:	ldr	x1, [x0, #16]
  41b8c8:	ldr	x0, [sp, #64]
  41b8cc:	add	x1, x1, x0
  41b8d0:	ldr	x0, [sp, #24]
  41b8d4:	str	x1, [x0, #24]
  41b8d8:	ldr	x0, [sp, #24]
  41b8dc:	ldrb	w1, [x0, #80]
  41b8e0:	and	w1, w1, #0xfffffffd
  41b8e4:	strb	w1, [x0, #80]
  41b8e8:	nop
  41b8ec:	ldp	x29, x30, [sp], #96
  41b8f0:	ret

000000000041b8f4 <_obstack_allocated_p@@Base>:
  41b8f4:	sub	sp, sp, #0x20
  41b8f8:	str	x0, [sp, #8]
  41b8fc:	str	x1, [sp]
  41b900:	ldr	x0, [sp, #8]
  41b904:	ldr	x0, [x0, #8]
  41b908:	str	x0, [sp, #24]
  41b90c:	b	41b924 <_obstack_allocated_p@@Base+0x30>
  41b910:	ldr	x0, [sp, #24]
  41b914:	ldr	x0, [x0, #8]
  41b918:	str	x0, [sp, #16]
  41b91c:	ldr	x0, [sp, #16]
  41b920:	str	x0, [sp, #24]
  41b924:	ldr	x0, [sp, #24]
  41b928:	cmp	x0, #0x0
  41b92c:	b.eq	41b954 <_obstack_allocated_p@@Base+0x60>  // b.none
  41b930:	ldr	x1, [sp, #24]
  41b934:	ldr	x0, [sp]
  41b938:	cmp	x1, x0
  41b93c:	b.cs	41b910 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  41b940:	ldr	x0, [sp, #24]
  41b944:	ldr	x0, [x0]
  41b948:	ldr	x1, [sp]
  41b94c:	cmp	x1, x0
  41b950:	b.hi	41b910 <_obstack_allocated_p@@Base+0x1c>  // b.pmore
  41b954:	ldr	x0, [sp, #24]
  41b958:	cmp	x0, #0x0
  41b95c:	cset	w0, ne  // ne = any
  41b960:	and	w0, w0, #0xff
  41b964:	add	sp, sp, #0x20
  41b968:	ret

000000000041b96c <_obstack_free@@Base>:
  41b96c:	stp	x29, x30, [sp, #-48]!
  41b970:	mov	x29, sp
  41b974:	str	x0, [sp, #24]
  41b978:	str	x1, [sp, #16]
  41b97c:	ldr	x0, [sp, #24]
  41b980:	ldr	x0, [x0, #8]
  41b984:	str	x0, [sp, #40]
  41b988:	b	41b9bc <_obstack_free@@Base+0x50>
  41b98c:	ldr	x0, [sp, #40]
  41b990:	ldr	x0, [x0, #8]
  41b994:	str	x0, [sp, #32]
  41b998:	ldr	x1, [sp, #40]
  41b99c:	ldr	x0, [sp, #24]
  41b9a0:	bl	41b458 <__fxstatat@plt+0x188f8>
  41b9a4:	ldr	x0, [sp, #32]
  41b9a8:	str	x0, [sp, #40]
  41b9ac:	ldr	x0, [sp, #24]
  41b9b0:	ldrb	w1, [x0, #80]
  41b9b4:	orr	w1, w1, #0x2
  41b9b8:	strb	w1, [x0, #80]
  41b9bc:	ldr	x0, [sp, #40]
  41b9c0:	cmp	x0, #0x0
  41b9c4:	b.eq	41b9ec <_obstack_free@@Base+0x80>  // b.none
  41b9c8:	ldr	x1, [sp, #40]
  41b9cc:	ldr	x0, [sp, #16]
  41b9d0:	cmp	x1, x0
  41b9d4:	b.cs	41b98c <_obstack_free@@Base+0x20>  // b.hs, b.nlast
  41b9d8:	ldr	x0, [sp, #40]
  41b9dc:	ldr	x0, [x0]
  41b9e0:	ldr	x1, [sp, #16]
  41b9e4:	cmp	x1, x0
  41b9e8:	b.hi	41b98c <_obstack_free@@Base+0x20>  // b.pmore
  41b9ec:	ldr	x0, [sp, #40]
  41b9f0:	cmp	x0, #0x0
  41b9f4:	b.eq	41ba34 <_obstack_free@@Base+0xc8>  // b.none
  41b9f8:	ldr	x0, [sp, #24]
  41b9fc:	ldr	x1, [sp, #16]
  41ba00:	str	x1, [x0, #24]
  41ba04:	ldr	x0, [sp, #24]
  41ba08:	ldr	x1, [x0, #24]
  41ba0c:	ldr	x0, [sp, #24]
  41ba10:	str	x1, [x0, #16]
  41ba14:	ldr	x0, [sp, #40]
  41ba18:	ldr	x1, [x0]
  41ba1c:	ldr	x0, [sp, #24]
  41ba20:	str	x1, [x0, #32]
  41ba24:	ldr	x0, [sp, #24]
  41ba28:	ldr	x1, [sp, #40]
  41ba2c:	str	x1, [x0, #8]
  41ba30:	b	41ba44 <_obstack_free@@Base+0xd8>
  41ba34:	ldr	x0, [sp, #16]
  41ba38:	cmp	x0, #0x0
  41ba3c:	b.eq	41ba44 <_obstack_free@@Base+0xd8>  // b.none
  41ba40:	bl	402820 <abort@plt>
  41ba44:	nop
  41ba48:	ldp	x29, x30, [sp], #48
  41ba4c:	ret

000000000041ba50 <_obstack_memory_used@@Base>:
  41ba50:	sub	sp, sp, #0x20
  41ba54:	str	x0, [sp, #8]
  41ba58:	str	xzr, [sp, #16]
  41ba5c:	ldr	x0, [sp, #8]
  41ba60:	ldr	x0, [x0, #8]
  41ba64:	str	x0, [sp, #24]
  41ba68:	b	41ba98 <_obstack_memory_used@@Base+0x48>
  41ba6c:	ldr	x0, [sp, #24]
  41ba70:	ldr	x1, [x0]
  41ba74:	ldr	x0, [sp, #24]
  41ba78:	sub	x0, x1, x0
  41ba7c:	mov	x1, x0
  41ba80:	ldr	x0, [sp, #16]
  41ba84:	add	x0, x0, x1
  41ba88:	str	x0, [sp, #16]
  41ba8c:	ldr	x0, [sp, #24]
  41ba90:	ldr	x0, [x0, #8]
  41ba94:	str	x0, [sp, #24]
  41ba98:	ldr	x0, [sp, #24]
  41ba9c:	cmp	x0, #0x0
  41baa0:	b.ne	41ba6c <_obstack_memory_used@@Base+0x1c>  // b.any
  41baa4:	ldr	x0, [sp, #16]
  41baa8:	add	sp, sp, #0x20
  41baac:	ret
  41bab0:	stp	x29, x30, [sp, #-32]!
  41bab4:	mov	x29, sp
  41bab8:	str	x19, [sp, #16]
  41babc:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41bac0:	add	x0, x0, #0x5e0
  41bac4:	ldr	x19, [x0]
  41bac8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41bacc:	add	x0, x0, #0xe30
  41bad0:	bl	402b20 <gettext@plt>
  41bad4:	mov	x2, x0
  41bad8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41badc:	add	x1, x0, #0xe48
  41bae0:	mov	x0, x19
  41bae4:	bl	402b30 <fprintf@plt>
  41bae8:	adrp	x0, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  41baec:	add	x0, x0, #0x570
  41baf0:	ldr	w0, [x0]
  41baf4:	bl	402520 <exit@plt>
  41baf8:	sub	sp, sp, #0x10
  41bafc:	str	w0, [sp, #12]
  41bb00:	str	w1, [sp, #8]
  41bb04:	ldr	w0, [sp, #12]
  41bb08:	cmp	w0, #0x0
  41bb0c:	cset	w0, eq  // eq = none
  41bb10:	and	w1, w0, #0xff
  41bb14:	ldr	w0, [sp, #8]
  41bb18:	cmp	w0, #0x0
  41bb1c:	cset	w0, eq  // eq = none
  41bb20:	and	w0, w0, #0xff
  41bb24:	eor	w0, w1, w0
  41bb28:	and	w0, w0, #0xff
  41bb2c:	cmp	w0, #0x0
  41bb30:	b.eq	41bb54 <_obstack_memory_used@@Base+0x104>  // b.none
  41bb34:	ldr	w0, [sp, #12]
  41bb38:	cmp	w0, #0x0
  41bb3c:	b.lt	41bb54 <_obstack_memory_used@@Base+0x104>  // b.tstop
  41bb40:	ldr	w0, [sp, #8]
  41bb44:	cmp	w0, #0x0
  41bb48:	b.lt	41bb54 <_obstack_memory_used@@Base+0x104>  // b.tstop
  41bb4c:	mov	w0, #0x1                   	// #1
  41bb50:	b	41bb58 <_obstack_memory_used@@Base+0x108>
  41bb54:	mov	w0, #0x0                   	// #0
  41bb58:	and	w0, w0, #0x1
  41bb5c:	and	w0, w0, #0xff
  41bb60:	add	sp, sp, #0x10
  41bb64:	ret
  41bb68:	stp	x29, x30, [sp, #-48]!
  41bb6c:	mov	x29, sp
  41bb70:	str	x19, [sp, #16]
  41bb74:	str	x0, [sp, #40]
  41bb78:	str	x1, [sp, #32]
  41bb7c:	ldr	x0, [sp, #40]
  41bb80:	ldr	w1, [x0]
  41bb84:	ldr	x0, [sp, #32]
  41bb88:	ldr	w0, [x0]
  41bb8c:	eor	w1, w1, w0
  41bb90:	ldr	x0, [sp, #40]
  41bb94:	ldr	w2, [x0, #4]
  41bb98:	ldr	x0, [sp, #32]
  41bb9c:	ldr	w0, [x0, #4]
  41bba0:	eor	w0, w2, w0
  41bba4:	orr	w1, w1, w0
  41bba8:	ldr	x0, [sp, #40]
  41bbac:	ldr	w2, [x0, #8]
  41bbb0:	ldr	x0, [sp, #32]
  41bbb4:	ldr	w0, [x0, #8]
  41bbb8:	eor	w0, w2, w0
  41bbbc:	orr	w1, w1, w0
  41bbc0:	ldr	x0, [sp, #40]
  41bbc4:	ldr	w2, [x0, #12]
  41bbc8:	ldr	x0, [sp, #32]
  41bbcc:	ldr	w0, [x0, #12]
  41bbd0:	eor	w0, w2, w0
  41bbd4:	orr	w1, w1, w0
  41bbd8:	ldr	x0, [sp, #40]
  41bbdc:	ldr	w2, [x0, #16]
  41bbe0:	ldr	x0, [sp, #32]
  41bbe4:	ldr	w0, [x0, #16]
  41bbe8:	eor	w0, w2, w0
  41bbec:	orr	w1, w1, w0
  41bbf0:	ldr	x0, [sp, #40]
  41bbf4:	ldr	w2, [x0, #20]
  41bbf8:	ldr	x0, [sp, #32]
  41bbfc:	ldr	w0, [x0, #20]
  41bc00:	eor	w0, w2, w0
  41bc04:	orr	w19, w1, w0
  41bc08:	ldr	x0, [sp, #40]
  41bc0c:	ldr	w2, [x0, #32]
  41bc10:	ldr	x0, [sp, #32]
  41bc14:	ldr	w0, [x0, #32]
  41bc18:	mov	w1, w0
  41bc1c:	mov	w0, w2
  41bc20:	bl	41baf8 <_obstack_memory_used@@Base+0xa8>
  41bc24:	and	w0, w0, #0xff
  41bc28:	orr	w0, w19, w0
  41bc2c:	cmp	w0, #0x0
  41bc30:	cset	w0, eq  // eq = none
  41bc34:	and	w0, w0, #0xff
  41bc38:	ldr	x19, [sp, #16]
  41bc3c:	ldp	x29, x30, [sp], #48
  41bc40:	ret
  41bc44:	stp	x29, x30, [sp, #-48]!
  41bc48:	mov	x29, sp
  41bc4c:	str	x0, [sp, #40]
  41bc50:	str	x1, [sp, #32]
  41bc54:	str	x2, [sp, #24]
  41bc58:	ldr	x2, [sp, #24]
  41bc5c:	ldr	x1, [sp, #32]
  41bc60:	ldr	x0, [sp, #40]
  41bc64:	bl	402490 <memcpy@plt>
  41bc68:	ldr	x1, [sp, #40]
  41bc6c:	ldr	x0, [sp, #24]
  41bc70:	add	x0, x1, x0
  41bc74:	strb	wzr, [x0]
  41bc78:	nop
  41bc7c:	ldp	x29, x30, [sp], #48
  41bc80:	ret
  41bc84:	stp	x29, x30, [sp, #-64]!
  41bc88:	mov	x29, sp
  41bc8c:	str	x0, [sp, #24]
  41bc90:	ldr	x0, [sp, #24]
  41bc94:	cmp	x0, #0x0
  41bc98:	b.eq	41bcac <_obstack_memory_used@@Base+0x25c>  // b.none
  41bc9c:	ldr	x0, [sp, #24]
  41bca0:	bl	402500 <strlen@plt>
  41bca4:	add	x0, x0, #0x1
  41bca8:	b	41bcb0 <_obstack_memory_used@@Base+0x260>
  41bcac:	mov	x0, #0x0                   	// #0
  41bcb0:	str	x0, [sp, #56]
  41bcb4:	ldr	x2, [sp, #56]
  41bcb8:	ldr	x1, [sp, #56]
  41bcbc:	mov	x0, #0x76                  	// #118
  41bcc0:	cmp	x2, #0x76
  41bcc4:	csel	x0, x1, x0, cs  // cs = hs, nlast
  41bcc8:	add	x0, x0, #0x1
  41bccc:	str	x0, [sp, #48]
  41bcd0:	ldr	x0, [sp, #48]
  41bcd4:	add	x0, x0, #0x10
  41bcd8:	and	x0, x0, #0xfffffffffffffff8
  41bcdc:	bl	4026b0 <malloc@plt>
  41bce0:	str	x0, [sp, #40]
  41bce4:	ldr	x0, [sp, #40]
  41bce8:	cmp	x0, #0x0
  41bcec:	b.eq	41bd3c <_obstack_memory_used@@Base+0x2ec>  // b.none
  41bcf0:	ldr	x0, [sp, #40]
  41bcf4:	str	xzr, [x0]
  41bcf8:	ldr	x0, [sp, #24]
  41bcfc:	cmp	x0, #0x0
  41bd00:	cset	w0, ne  // ne = any
  41bd04:	and	w0, w0, #0xff
  41bd08:	mov	w1, w0
  41bd0c:	ldr	x0, [sp, #40]
  41bd10:	strb	w1, [x0, #8]
  41bd14:	ldr	x0, [sp, #40]
  41bd18:	strb	wzr, [x0, #9]
  41bd1c:	ldr	x0, [sp, #24]
  41bd20:	cmp	x0, #0x0
  41bd24:	b.eq	41bd3c <_obstack_memory_used@@Base+0x2ec>  // b.none
  41bd28:	ldr	x0, [sp, #40]
  41bd2c:	add	x0, x0, #0x9
  41bd30:	ldr	x2, [sp, #56]
  41bd34:	ldr	x1, [sp, #24]
  41bd38:	bl	41bc44 <_obstack_memory_used@@Base+0x1f4>
  41bd3c:	ldr	x0, [sp, #40]
  41bd40:	ldp	x29, x30, [sp], #64
  41bd44:	ret
  41bd48:	stp	x29, x30, [sp, #-64]!
  41bd4c:	mov	x29, sp
  41bd50:	str	x0, [sp, #24]
  41bd54:	str	x1, [sp, #16]
  41bd58:	str	xzr, [sp, #48]
  41bd5c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41bd60:	add	x0, x0, #0xe58
  41bd64:	str	x0, [sp, #56]
  41bd68:	ldr	x0, [sp, #16]
  41bd6c:	ldr	x0, [x0, #48]
  41bd70:	str	x0, [sp, #48]
  41bd74:	ldr	x0, [sp, #48]
  41bd78:	cmp	x0, #0x0
  41bd7c:	b.eq	41bda4 <_obstack_memory_used@@Base+0x354>  // b.none
  41bd80:	ldr	x1, [sp, #16]
  41bd84:	ldr	x0, [sp, #48]
  41bd88:	cmp	x1, x0
  41bd8c:	b.hi	41bdac <_obstack_memory_used@@Base+0x35c>  // b.pmore
  41bd90:	ldr	x0, [sp, #16]
  41bd94:	add	x0, x0, #0x38
  41bd98:	ldr	x1, [sp, #48]
  41bd9c:	cmp	x1, x0
  41bda0:	b.cs	41bdac <_obstack_memory_used@@Base+0x35c>  // b.hs, b.nlast
  41bda4:	mov	w0, #0x1                   	// #1
  41bda8:	b	41bf38 <_obstack_memory_used@@Base+0x4e8>
  41bdac:	ldr	x0, [sp, #48]
  41bdb0:	ldrb	w0, [x0]
  41bdb4:	cmp	w0, #0x0
  41bdb8:	b.eq	41bf28 <_obstack_memory_used@@Base+0x4d8>  // b.none
  41bdbc:	ldr	x0, [sp, #24]
  41bdc0:	add	x0, x0, #0x9
  41bdc4:	str	x0, [sp, #56]
  41bdc8:	b	41bf14 <_obstack_memory_used@@Base+0x4c4>
  41bdcc:	ldr	x0, [sp, #56]
  41bdd0:	ldrb	w0, [x0]
  41bdd4:	cmp	w0, #0x0
  41bdd8:	b.ne	41bec4 <_obstack_memory_used@@Base+0x474>  // b.any
  41bddc:	ldr	x0, [sp, #24]
  41bde0:	add	x0, x0, #0x9
  41bde4:	ldr	x1, [sp, #56]
  41bde8:	cmp	x1, x0
  41bdec:	b.ne	41be00 <_obstack_memory_used@@Base+0x3b0>  // b.any
  41bdf0:	ldr	x0, [sp, #24]
  41bdf4:	ldrb	w0, [x0, #8]
  41bdf8:	cmp	w0, #0x0
  41bdfc:	b.ne	41bec4 <_obstack_memory_used@@Base+0x474>  // b.any
  41be00:	ldr	x0, [sp, #48]
  41be04:	bl	402500 <strlen@plt>
  41be08:	add	x0, x0, #0x1
  41be0c:	str	x0, [sp, #40]
  41be10:	ldr	x0, [sp, #24]
  41be14:	add	x0, x0, #0x9
  41be18:	ldr	x1, [sp, #56]
  41be1c:	sub	x0, x1, x0
  41be20:	str	x0, [sp, #32]
  41be24:	ldr	x0, [sp, #32]
  41be28:	mvn	x0, x0
  41be2c:	ldr	x1, [sp, #40]
  41be30:	cmp	x1, x0
  41be34:	b.ls	41be50 <_obstack_memory_used@@Base+0x400>  // b.plast
  41be38:	bl	402ac0 <__errno_location@plt>
  41be3c:	mov	x1, x0
  41be40:	mov	w0, #0xc                   	// #12
  41be44:	str	w0, [x1]
  41be48:	mov	w0, #0x0                   	// #0
  41be4c:	b	41bf38 <_obstack_memory_used@@Base+0x4e8>
  41be50:	ldr	x1, [sp, #32]
  41be54:	ldr	x0, [sp, #40]
  41be58:	add	x0, x1, x0
  41be5c:	cmp	x0, #0x76
  41be60:	b.hi	41be78 <_obstack_memory_used@@Base+0x428>  // b.pmore
  41be64:	ldr	x2, [sp, #40]
  41be68:	ldr	x1, [sp, #48]
  41be6c:	ldr	x0, [sp, #56]
  41be70:	bl	41bc44 <_obstack_memory_used@@Base+0x1f4>
  41be74:	b	41bf28 <_obstack_memory_used@@Base+0x4d8>
  41be78:	ldr	x0, [sp, #48]
  41be7c:	bl	41bc84 <_obstack_memory_used@@Base+0x234>
  41be80:	mov	x1, x0
  41be84:	ldr	x0, [sp, #24]
  41be88:	str	x1, [x0]
  41be8c:	ldr	x0, [sp, #24]
  41be90:	ldr	x0, [x0]
  41be94:	str	x0, [sp, #24]
  41be98:	ldr	x0, [sp, #24]
  41be9c:	cmp	x0, #0x0
  41bea0:	b.ne	41beac <_obstack_memory_used@@Base+0x45c>  // b.any
  41bea4:	mov	w0, #0x0                   	// #0
  41bea8:	b	41bf38 <_obstack_memory_used@@Base+0x4e8>
  41beac:	ldr	x0, [sp, #24]
  41beb0:	strb	wzr, [x0, #8]
  41beb4:	ldr	x0, [sp, #24]
  41beb8:	add	x0, x0, #0x9
  41bebc:	str	x0, [sp, #56]
  41bec0:	b	41bf28 <_obstack_memory_used@@Base+0x4d8>
  41bec4:	ldr	x0, [sp, #56]
  41bec8:	bl	402500 <strlen@plt>
  41becc:	add	x0, x0, #0x1
  41bed0:	ldr	x1, [sp, #56]
  41bed4:	add	x0, x1, x0
  41bed8:	str	x0, [sp, #56]
  41bedc:	ldr	x0, [sp, #56]
  41bee0:	ldrb	w0, [x0]
  41bee4:	cmp	w0, #0x0
  41bee8:	b.ne	41bf14 <_obstack_memory_used@@Base+0x4c4>  // b.any
  41beec:	ldr	x0, [sp, #24]
  41bef0:	ldr	x0, [x0]
  41bef4:	cmp	x0, #0x0
  41bef8:	b.eq	41bf14 <_obstack_memory_used@@Base+0x4c4>  // b.none
  41befc:	ldr	x0, [sp, #24]
  41bf00:	ldr	x0, [x0]
  41bf04:	str	x0, [sp, #24]
  41bf08:	ldr	x0, [sp, #24]
  41bf0c:	add	x0, x0, #0x9
  41bf10:	str	x0, [sp, #56]
  41bf14:	ldr	x1, [sp, #48]
  41bf18:	ldr	x0, [sp, #56]
  41bf1c:	bl	4028b0 <strcmp@plt>
  41bf20:	cmp	w0, #0x0
  41bf24:	b.ne	41bdcc <_obstack_memory_used@@Base+0x37c>  // b.any
  41bf28:	ldr	x0, [sp, #16]
  41bf2c:	ldr	x1, [sp, #56]
  41bf30:	str	x1, [x0, #48]
  41bf34:	mov	w0, #0x1                   	// #1
  41bf38:	ldp	x29, x30, [sp], #64
  41bf3c:	ret
  41bf40:	stp	x29, x30, [sp, #-48]!
  41bf44:	mov	x29, sp
  41bf48:	str	x0, [sp, #24]
  41bf4c:	mov	x0, #0x1                   	// #1
  41bf50:	ldr	x1, [sp, #24]
  41bf54:	cmp	x1, x0
  41bf58:	b.eq	41bf88 <_obstack_memory_used@@Base+0x538>  // b.none
  41bf5c:	b	41bf7c <_obstack_memory_used@@Base+0x52c>
  41bf60:	ldr	x0, [sp, #24]
  41bf64:	ldr	x0, [x0]
  41bf68:	str	x0, [sp, #40]
  41bf6c:	ldr	x0, [sp, #24]
  41bf70:	bl	4028f0 <free@plt>
  41bf74:	ldr	x0, [sp, #40]
  41bf78:	str	x0, [sp, #24]
  41bf7c:	ldr	x0, [sp, #24]
  41bf80:	cmp	x0, #0x0
  41bf84:	b.ne	41bf60 <_obstack_memory_used@@Base+0x510>  // b.any
  41bf88:	nop
  41bf8c:	ldp	x29, x30, [sp], #48
  41bf90:	ret
  41bf94:	stp	x29, x30, [sp, #-16]!
  41bf98:	mov	x29, sp
  41bf9c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41bfa0:	add	x0, x0, #0xe60
  41bfa4:	bl	402ae0 <getenv@plt>
  41bfa8:	ldp	x29, x30, [sp], #16
  41bfac:	ret
  41bfb0:	stp	x29, x30, [sp, #-32]!
  41bfb4:	mov	x29, sp
  41bfb8:	str	x0, [sp, #24]
  41bfbc:	ldr	x0, [sp, #24]
  41bfc0:	cmp	x0, #0x0
  41bfc4:	b.eq	41bfe0 <_obstack_memory_used@@Base+0x590>  // b.none
  41bfc8:	mov	w2, #0x1                   	// #1
  41bfcc:	ldr	x1, [sp, #24]
  41bfd0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41bfd4:	add	x0, x0, #0xe60
  41bfd8:	bl	402580 <setenv@plt>
  41bfdc:	b	41bfec <_obstack_memory_used@@Base+0x59c>
  41bfe0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41bfe4:	add	x0, x0, #0xe60
  41bfe8:	bl	4029b0 <unsetenv@plt>
  41bfec:	ldp	x29, x30, [sp], #32
  41bff0:	ret
  41bff4:	stp	x29, x30, [sp, #-32]!
  41bff8:	mov	x29, sp
  41bffc:	str	x0, [sp, #24]
  41c000:	ldr	x0, [sp, #24]
  41c004:	ldrb	w0, [x0, #8]
  41c008:	cmp	w0, #0x0
  41c00c:	b.eq	41c01c <_obstack_memory_used@@Base+0x5cc>  // b.none
  41c010:	ldr	x0, [sp, #24]
  41c014:	add	x0, x0, #0x9
  41c018:	b	41c020 <_obstack_memory_used@@Base+0x5d0>
  41c01c:	mov	x0, #0x0                   	// #0
  41c020:	bl	41bfb0 <_obstack_memory_used@@Base+0x560>
  41c024:	cmp	w0, #0x0
  41c028:	b.eq	41c034 <_obstack_memory_used@@Base+0x5e4>  // b.none
  41c02c:	mov	w0, #0x0                   	// #0
  41c030:	b	41c03c <_obstack_memory_used@@Base+0x5ec>
  41c034:	bl	4026e0 <tzset@plt>
  41c038:	mov	w0, #0x1                   	// #1
  41c03c:	ldp	x29, x30, [sp], #32
  41c040:	ret
  41c044:	stp	x29, x30, [sp, #-64]!
  41c048:	mov	x29, sp
  41c04c:	str	x0, [sp, #24]
  41c050:	bl	41bf94 <_obstack_memory_used@@Base+0x544>
  41c054:	str	x0, [sp, #56]
  41c058:	ldr	x0, [sp, #56]
  41c05c:	cmp	x0, #0x0
  41c060:	b.eq	41c0a4 <_obstack_memory_used@@Base+0x654>  // b.none
  41c064:	ldr	x0, [sp, #24]
  41c068:	ldrb	w0, [x0, #8]
  41c06c:	cmp	w0, #0x0
  41c070:	b.eq	41c094 <_obstack_memory_used@@Base+0x644>  // b.none
  41c074:	ldr	x0, [sp, #24]
  41c078:	add	x0, x0, #0x9
  41c07c:	ldr	x1, [sp, #56]
  41c080:	bl	4028b0 <strcmp@plt>
  41c084:	cmp	w0, #0x0
  41c088:	b.ne	41c094 <_obstack_memory_used@@Base+0x644>  // b.any
  41c08c:	mov	w0, #0x1                   	// #1
  41c090:	b	41c098 <_obstack_memory_used@@Base+0x648>
  41c094:	mov	w0, #0x0                   	// #0
  41c098:	and	w0, w0, #0x1
  41c09c:	and	w0, w0, #0xff
  41c0a0:	b	41c0b8 <_obstack_memory_used@@Base+0x668>
  41c0a4:	ldr	x0, [sp, #24]
  41c0a8:	ldrb	w0, [x0, #8]
  41c0ac:	cmp	w0, #0x0
  41c0b0:	cset	w0, eq  // eq = none
  41c0b4:	and	w0, w0, #0xff
  41c0b8:	cmp	w0, #0x0
  41c0bc:	b.eq	41c0c8 <_obstack_memory_used@@Base+0x678>  // b.none
  41c0c0:	mov	x0, #0x1                   	// #1
  41c0c4:	b	41c134 <_obstack_memory_used@@Base+0x6e4>
  41c0c8:	ldr	x0, [sp, #56]
  41c0cc:	bl	41bc84 <_obstack_memory_used@@Base+0x234>
  41c0d0:	str	x0, [sp, #48]
  41c0d4:	ldr	x0, [sp, #48]
  41c0d8:	cmp	x0, #0x0
  41c0dc:	b.ne	41c0e8 <_obstack_memory_used@@Base+0x698>  // b.any
  41c0e0:	ldr	x0, [sp, #48]
  41c0e4:	b	41c134 <_obstack_memory_used@@Base+0x6e4>
  41c0e8:	ldr	x0, [sp, #24]
  41c0ec:	bl	41bff4 <_obstack_memory_used@@Base+0x5a4>
  41c0f0:	and	w0, w0, #0xff
  41c0f4:	eor	w0, w0, #0x1
  41c0f8:	and	w0, w0, #0xff
  41c0fc:	cmp	w0, #0x0
  41c100:	b.eq	41c130 <_obstack_memory_used@@Base+0x6e0>  // b.none
  41c104:	bl	402ac0 <__errno_location@plt>
  41c108:	ldr	w0, [x0]
  41c10c:	str	w0, [sp, #44]
  41c110:	ldr	x0, [sp, #48]
  41c114:	bl	41bf40 <_obstack_memory_used@@Base+0x4f0>
  41c118:	bl	402ac0 <__errno_location@plt>
  41c11c:	mov	x1, x0
  41c120:	ldr	w0, [sp, #44]
  41c124:	str	w0, [x1]
  41c128:	mov	x0, #0x0                   	// #0
  41c12c:	b	41c134 <_obstack_memory_used@@Base+0x6e4>
  41c130:	ldr	x0, [sp, #48]
  41c134:	ldp	x29, x30, [sp], #64
  41c138:	ret
  41c13c:	stp	x29, x30, [sp, #-48]!
  41c140:	mov	x29, sp
  41c144:	str	x0, [sp, #24]
  41c148:	mov	x0, #0x1                   	// #1
  41c14c:	ldr	x1, [sp, #24]
  41c150:	cmp	x1, x0
  41c154:	b.ne	41c160 <_obstack_memory_used@@Base+0x710>  // b.any
  41c158:	mov	w0, #0x1                   	// #1
  41c15c:	b	41c1b4 <_obstack_memory_used@@Base+0x764>
  41c160:	bl	402ac0 <__errno_location@plt>
  41c164:	ldr	w0, [x0]
  41c168:	str	w0, [sp, #44]
  41c16c:	ldr	x0, [sp, #24]
  41c170:	bl	41bff4 <_obstack_memory_used@@Base+0x5a4>
  41c174:	strb	w0, [sp, #43]
  41c178:	ldrb	w0, [sp, #43]
  41c17c:	eor	w0, w0, #0x1
  41c180:	and	w0, w0, #0xff
  41c184:	cmp	w0, #0x0
  41c188:	b.eq	41c198 <_obstack_memory_used@@Base+0x748>  // b.none
  41c18c:	bl	402ac0 <__errno_location@plt>
  41c190:	ldr	w0, [x0]
  41c194:	str	w0, [sp, #44]
  41c198:	ldr	x0, [sp, #24]
  41c19c:	bl	41bf40 <_obstack_memory_used@@Base+0x4f0>
  41c1a0:	bl	402ac0 <__errno_location@plt>
  41c1a4:	mov	x1, x0
  41c1a8:	ldr	w0, [sp, #44]
  41c1ac:	str	w0, [x1]
  41c1b0:	ldrb	w0, [sp, #43]
  41c1b4:	ldp	x29, x30, [sp], #48
  41c1b8:	ret
  41c1bc:	stp	x29, x30, [sp, #-64]!
  41c1c0:	mov	x29, sp
  41c1c4:	str	x0, [sp, #40]
  41c1c8:	str	x1, [sp, #32]
  41c1cc:	str	x2, [sp, #24]
  41c1d0:	ldr	x0, [sp, #40]
  41c1d4:	cmp	x0, #0x0
  41c1d8:	b.ne	41c1ec <_obstack_memory_used@@Base+0x79c>  // b.any
  41c1dc:	ldr	x1, [sp, #24]
  41c1e0:	ldr	x0, [sp, #32]
  41c1e4:	bl	402760 <gmtime_r@plt>
  41c1e8:	b	41c278 <_obstack_memory_used@@Base+0x828>
  41c1ec:	ldr	x0, [sp, #40]
  41c1f0:	bl	41c044 <_obstack_memory_used@@Base+0x5f4>
  41c1f4:	str	x0, [sp, #56]
  41c1f8:	ldr	x0, [sp, #56]
  41c1fc:	cmp	x0, #0x0
  41c200:	b.eq	41c274 <_obstack_memory_used@@Base+0x824>  // b.none
  41c204:	ldr	x1, [sp, #24]
  41c208:	ldr	x0, [sp, #32]
  41c20c:	bl	402570 <localtime_r@plt>
  41c210:	cmp	x0, #0x0
  41c214:	b.eq	41c238 <_obstack_memory_used@@Base+0x7e8>  // b.none
  41c218:	ldr	x1, [sp, #24]
  41c21c:	ldr	x0, [sp, #40]
  41c220:	bl	41bd48 <_obstack_memory_used@@Base+0x2f8>
  41c224:	and	w0, w0, #0xff
  41c228:	cmp	w0, #0x0
  41c22c:	b.eq	41c238 <_obstack_memory_used@@Base+0x7e8>  // b.none
  41c230:	mov	w0, #0x1                   	// #1
  41c234:	b	41c23c <_obstack_memory_used@@Base+0x7ec>
  41c238:	mov	w0, #0x0                   	// #0
  41c23c:	strb	w0, [sp, #55]
  41c240:	ldrb	w0, [sp, #55]
  41c244:	and	w0, w0, #0x1
  41c248:	strb	w0, [sp, #55]
  41c24c:	ldr	x0, [sp, #56]
  41c250:	bl	41c13c <_obstack_memory_used@@Base+0x6ec>
  41c254:	and	w0, w0, #0xff
  41c258:	cmp	w0, #0x0
  41c25c:	b.eq	41c274 <_obstack_memory_used@@Base+0x824>  // b.none
  41c260:	ldrb	w0, [sp, #55]
  41c264:	cmp	w0, #0x0
  41c268:	b.eq	41c274 <_obstack_memory_used@@Base+0x824>  // b.none
  41c26c:	ldr	x0, [sp, #24]
  41c270:	b	41c278 <_obstack_memory_used@@Base+0x828>
  41c274:	mov	x0, #0x0                   	// #0
  41c278:	ldp	x29, x30, [sp], #64
  41c27c:	ret
  41c280:	stp	x29, x30, [sp, #-112]!
  41c284:	mov	x29, sp
  41c288:	str	x0, [sp, #24]
  41c28c:	str	x1, [sp, #16]
  41c290:	ldr	x0, [sp, #24]
  41c294:	cmp	x0, #0x0
  41c298:	b.ne	41c2a8 <_obstack_memory_used@@Base+0x858>  // b.any
  41c29c:	ldr	x0, [sp, #16]
  41c2a0:	bl	402b10 <timegm@plt>
  41c2a4:	b	41c358 <_obstack_memory_used@@Base+0x908>
  41c2a8:	ldr	x0, [sp, #24]
  41c2ac:	bl	41c044 <_obstack_memory_used@@Base+0x5f4>
  41c2b0:	str	x0, [sp, #104]
  41c2b4:	ldr	x0, [sp, #104]
  41c2b8:	cmp	x0, #0x0
  41c2bc:	b.eq	41c354 <_obstack_memory_used@@Base+0x904>  // b.none
  41c2c0:	ldr	x0, [sp, #16]
  41c2c4:	bl	402800 <mktime@plt>
  41c2c8:	str	x0, [sp, #88]
  41c2cc:	mov	x0, #0xffffffffffffffff    	// #-1
  41c2d0:	str	x0, [sp, #96]
  41c2d4:	ldr	x0, [sp, #88]
  41c2d8:	ldr	x1, [sp, #96]
  41c2dc:	cmp	x1, x0
  41c2e0:	b.ne	41c310 <_obstack_memory_used@@Base+0x8c0>  // b.any
  41c2e4:	add	x1, sp, #0x20
  41c2e8:	add	x0, sp, #0x58
  41c2ec:	bl	402570 <localtime_r@plt>
  41c2f0:	cmp	x0, #0x0
  41c2f4:	b.eq	41c338 <_obstack_memory_used@@Base+0x8e8>  // b.none
  41c2f8:	add	x0, sp, #0x20
  41c2fc:	mov	x1, x0
  41c300:	ldr	x0, [sp, #16]
  41c304:	bl	41bb68 <_obstack_memory_used@@Base+0x118>
  41c308:	cmp	w0, #0x0
  41c30c:	b.eq	41c338 <_obstack_memory_used@@Base+0x8e8>  // b.none
  41c310:	ldr	x1, [sp, #16]
  41c314:	ldr	x0, [sp, #24]
  41c318:	bl	41bd48 <_obstack_memory_used@@Base+0x2f8>
  41c31c:	and	w0, w0, #0xff
  41c320:	eor	w0, w0, #0x1
  41c324:	and	w0, w0, #0xff
  41c328:	cmp	w0, #0x0
  41c32c:	b.eq	41c338 <_obstack_memory_used@@Base+0x8e8>  // b.none
  41c330:	ldr	x0, [sp, #96]
  41c334:	str	x0, [sp, #88]
  41c338:	ldr	x0, [sp, #104]
  41c33c:	bl	41c13c <_obstack_memory_used@@Base+0x6ec>
  41c340:	and	w0, w0, #0xff
  41c344:	cmp	w0, #0x0
  41c348:	b.eq	41c354 <_obstack_memory_used@@Base+0x904>  // b.none
  41c34c:	ldr	x0, [sp, #88]
  41c350:	b	41c358 <_obstack_memory_used@@Base+0x908>
  41c354:	mov	x0, #0xffffffffffffffff    	// #-1
  41c358:	ldp	x29, x30, [sp], #112
  41c35c:	ret
  41c360:	sub	sp, sp, #0x10
  41c364:	str	w0, [sp, #12]
  41c368:	ldr	w0, [sp, #12]
  41c36c:	cmp	w0, #0x5f
  41c370:	b.eq	41c3cc <_obstack_memory_used@@Base+0x97c>  // b.none
  41c374:	ldr	w0, [sp, #12]
  41c378:	cmp	w0, #0x5f
  41c37c:	b.gt	41c3d4 <_obstack_memory_used@@Base+0x984>
  41c380:	ldr	w0, [sp, #12]
  41c384:	cmp	w0, #0x26
  41c388:	b.eq	41c3c4 <_obstack_memory_used@@Base+0x974>  // b.none
  41c38c:	ldr	w0, [sp, #12]
  41c390:	cmp	w0, #0x26
  41c394:	b.gt	41c3d4 <_obstack_memory_used@@Base+0x984>
  41c398:	ldr	w0, [sp, #12]
  41c39c:	cmp	w0, #0x10
  41c3a0:	b.eq	41c3b4 <_obstack_memory_used@@Base+0x964>  // b.none
  41c3a4:	ldr	w0, [sp, #12]
  41c3a8:	cmp	w0, #0x16
  41c3ac:	b.eq	41c3bc <_obstack_memory_used@@Base+0x96c>  // b.none
  41c3b0:	b	41c3d4 <_obstack_memory_used@@Base+0x984>
  41c3b4:	mov	w0, #0x0                   	// #0
  41c3b8:	b	41c3d8 <_obstack_memory_used@@Base+0x988>
  41c3bc:	mov	w0, #0x0                   	// #0
  41c3c0:	b	41c3d8 <_obstack_memory_used@@Base+0x988>
  41c3c4:	mov	w0, #0x0                   	// #0
  41c3c8:	b	41c3d8 <_obstack_memory_used@@Base+0x988>
  41c3cc:	mov	w0, #0x0                   	// #0
  41c3d0:	b	41c3d8 <_obstack_memory_used@@Base+0x988>
  41c3d4:	mov	w0, #0x1                   	// #1
  41c3d8:	add	sp, sp, #0x10
  41c3dc:	ret
  41c3e0:	sub	sp, sp, #0x10
  41c3e4:	str	x0, [sp, #8]
  41c3e8:	str	w1, [sp, #4]
  41c3ec:	ldr	w0, [sp, #4]
  41c3f0:	ldr	x1, [sp, #8]
  41c3f4:	neg	w0, w0
  41c3f8:	ror	x0, x1, x0
  41c3fc:	add	sp, sp, #0x10
  41c400:	ret
  41c404:	sub	sp, sp, #0x10
  41c408:	str	x0, [sp, #8]
  41c40c:	str	w1, [sp, #4]
  41c410:	ldr	w0, [sp, #4]
  41c414:	ldr	x1, [sp, #8]
  41c418:	ror	x0, x1, x0
  41c41c:	add	sp, sp, #0x10
  41c420:	ret
  41c424:	sub	sp, sp, #0x10
  41c428:	str	w0, [sp, #12]
  41c42c:	str	w1, [sp, #8]
  41c430:	ldr	w0, [sp, #8]
  41c434:	ldr	w1, [sp, #12]
  41c438:	neg	w0, w0
  41c43c:	ror	w0, w1, w0
  41c440:	add	sp, sp, #0x10
  41c444:	ret
  41c448:	sub	sp, sp, #0x10
  41c44c:	str	w0, [sp, #12]
  41c450:	str	w1, [sp, #8]
  41c454:	ldr	w0, [sp, #8]
  41c458:	ldr	w1, [sp, #12]
  41c45c:	ror	w0, w1, w0
  41c460:	add	sp, sp, #0x10
  41c464:	ret
  41c468:	sub	sp, sp, #0x10
  41c46c:	str	x0, [sp, #8]
  41c470:	str	w1, [sp, #4]
  41c474:	ldr	w0, [sp, #4]
  41c478:	ldr	x1, [sp, #8]
  41c47c:	lsl	x1, x1, x0
  41c480:	ldr	w0, [sp, #4]
  41c484:	mov	w2, #0x40                  	// #64
  41c488:	sub	w0, w2, w0
  41c48c:	ldr	x2, [sp, #8]
  41c490:	lsr	x0, x2, x0
  41c494:	orr	x0, x1, x0
  41c498:	add	sp, sp, #0x10
  41c49c:	ret
  41c4a0:	sub	sp, sp, #0x10
  41c4a4:	str	x0, [sp, #8]
  41c4a8:	str	w1, [sp, #4]
  41c4ac:	ldr	w0, [sp, #4]
  41c4b0:	ldr	x1, [sp, #8]
  41c4b4:	lsr	x1, x1, x0
  41c4b8:	ldr	w0, [sp, #4]
  41c4bc:	mov	w2, #0x40                  	// #64
  41c4c0:	sub	w0, w2, w0
  41c4c4:	ldr	x2, [sp, #8]
  41c4c8:	lsl	x0, x2, x0
  41c4cc:	orr	x0, x1, x0
  41c4d0:	add	sp, sp, #0x10
  41c4d4:	ret
  41c4d8:	sub	sp, sp, #0x10
  41c4dc:	strh	w0, [sp, #14]
  41c4e0:	str	w1, [sp, #8]
  41c4e4:	ldrh	w1, [sp, #14]
  41c4e8:	ldr	w0, [sp, #8]
  41c4ec:	lsl	w0, w1, w0
  41c4f0:	sxth	w1, w0
  41c4f4:	ldrh	w2, [sp, #14]
  41c4f8:	mov	w3, #0x10                  	// #16
  41c4fc:	ldr	w0, [sp, #8]
  41c500:	sub	w0, w3, w0
  41c504:	asr	w0, w2, w0
  41c508:	sxth	w0, w0
  41c50c:	orr	w0, w1, w0
  41c510:	sxth	w0, w0
  41c514:	and	w0, w0, #0xffff
  41c518:	add	sp, sp, #0x10
  41c51c:	ret
  41c520:	sub	sp, sp, #0x10
  41c524:	strh	w0, [sp, #14]
  41c528:	str	w1, [sp, #8]
  41c52c:	ldrh	w1, [sp, #14]
  41c530:	ldr	w0, [sp, #8]
  41c534:	asr	w0, w1, w0
  41c538:	sxth	w1, w0
  41c53c:	ldrh	w2, [sp, #14]
  41c540:	mov	w3, #0x10                  	// #16
  41c544:	ldr	w0, [sp, #8]
  41c548:	sub	w0, w3, w0
  41c54c:	lsl	w0, w2, w0
  41c550:	sxth	w0, w0
  41c554:	orr	w0, w1, w0
  41c558:	sxth	w0, w0
  41c55c:	and	w0, w0, #0xffff
  41c560:	add	sp, sp, #0x10
  41c564:	ret
  41c568:	sub	sp, sp, #0x10
  41c56c:	strb	w0, [sp, #15]
  41c570:	str	w1, [sp, #8]
  41c574:	ldrb	w1, [sp, #15]
  41c578:	ldr	w0, [sp, #8]
  41c57c:	lsl	w0, w1, w0
  41c580:	sxtb	w1, w0
  41c584:	ldrb	w2, [sp, #15]
  41c588:	mov	w3, #0x8                   	// #8
  41c58c:	ldr	w0, [sp, #8]
  41c590:	sub	w0, w3, w0
  41c594:	asr	w0, w2, w0
  41c598:	sxtb	w0, w0
  41c59c:	orr	w0, w1, w0
  41c5a0:	sxtb	w0, w0
  41c5a4:	and	w0, w0, #0xff
  41c5a8:	add	sp, sp, #0x10
  41c5ac:	ret
  41c5b0:	sub	sp, sp, #0x10
  41c5b4:	strb	w0, [sp, #15]
  41c5b8:	str	w1, [sp, #8]
  41c5bc:	ldrb	w1, [sp, #15]
  41c5c0:	ldr	w0, [sp, #8]
  41c5c4:	asr	w0, w1, w0
  41c5c8:	sxtb	w1, w0
  41c5cc:	ldrb	w2, [sp, #15]
  41c5d0:	mov	w3, #0x8                   	// #8
  41c5d4:	ldr	w0, [sp, #8]
  41c5d8:	sub	w0, w3, w0
  41c5dc:	lsl	w0, w2, w0
  41c5e0:	sxtb	w0, w0
  41c5e4:	orr	w0, w1, w0
  41c5e8:	sxtb	w0, w0
  41c5ec:	and	w0, w0, #0xff
  41c5f0:	add	sp, sp, #0x10
  41c5f4:	ret
  41c5f8:	stp	x29, x30, [sp, #-64]!
  41c5fc:	mov	x29, sp
  41c600:	stp	x19, x20, [sp, #16]
  41c604:	str	x0, [sp, #40]
  41c608:	str	x1, [sp, #32]
  41c60c:	ldr	x20, [sp, #40]
  41c610:	ldr	x19, [sp, #32]
  41c614:	cmp	x20, x19
  41c618:	b.ne	41c624 <_obstack_memory_used@@Base+0xbd4>  // b.any
  41c61c:	mov	w0, #0x0                   	// #0
  41c620:	b	41c674 <_obstack_memory_used@@Base+0xc24>
  41c624:	ldrb	w0, [x20]
  41c628:	bl	40e974 <__fxstatat@plt+0xbe14>
  41c62c:	strb	w0, [sp, #63]
  41c630:	ldrb	w0, [x19]
  41c634:	bl	40e974 <__fxstatat@plt+0xbe14>
  41c638:	strb	w0, [sp, #62]
  41c63c:	ldrb	w0, [sp, #63]
  41c640:	cmp	w0, #0x0
  41c644:	b.eq	41c664 <_obstack_memory_used@@Base+0xc14>  // b.none
  41c648:	add	x20, x20, #0x1
  41c64c:	add	x19, x19, #0x1
  41c650:	ldrb	w1, [sp, #63]
  41c654:	ldrb	w0, [sp, #62]
  41c658:	cmp	w1, w0
  41c65c:	b.eq	41c624 <_obstack_memory_used@@Base+0xbd4>  // b.none
  41c660:	b	41c668 <_obstack_memory_used@@Base+0xc18>
  41c664:	nop
  41c668:	ldrb	w1, [sp, #63]
  41c66c:	ldrb	w0, [sp, #62]
  41c670:	sub	w0, w1, w0
  41c674:	ldp	x19, x20, [sp, #16]
  41c678:	ldp	x29, x30, [sp], #64
  41c67c:	ret
  41c680:	stp	x29, x30, [sp, #-48]!
  41c684:	mov	x29, sp
  41c688:	str	x0, [sp, #24]
  41c68c:	ldr	x0, [sp, #24]
  41c690:	bl	402630 <__fpending@plt>
  41c694:	cmp	x0, #0x0
  41c698:	cset	w0, ne  // ne = any
  41c69c:	strb	w0, [sp, #47]
  41c6a0:	ldr	x0, [sp, #24]
  41c6a4:	bl	4025b0 <ferror_unlocked@plt>
  41c6a8:	cmp	w0, #0x0
  41c6ac:	cset	w0, ne  // ne = any
  41c6b0:	strb	w0, [sp, #46]
  41c6b4:	ldr	x0, [sp, #24]
  41c6b8:	bl	41c828 <_obstack_memory_used@@Base+0xdd8>
  41c6bc:	cmp	w0, #0x0
  41c6c0:	cset	w0, ne  // ne = any
  41c6c4:	strb	w0, [sp, #45]
  41c6c8:	ldrb	w0, [sp, #46]
  41c6cc:	cmp	w0, #0x0
  41c6d0:	b.ne	41c6fc <_obstack_memory_used@@Base+0xcac>  // b.any
  41c6d4:	ldrb	w0, [sp, #45]
  41c6d8:	cmp	w0, #0x0
  41c6dc:	b.eq	41c720 <_obstack_memory_used@@Base+0xcd0>  // b.none
  41c6e0:	ldrb	w0, [sp, #47]
  41c6e4:	cmp	w0, #0x0
  41c6e8:	b.ne	41c6fc <_obstack_memory_used@@Base+0xcac>  // b.any
  41c6ec:	bl	402ac0 <__errno_location@plt>
  41c6f0:	ldr	w0, [x0]
  41c6f4:	cmp	w0, #0x9
  41c6f8:	b.eq	41c720 <_obstack_memory_used@@Base+0xcd0>  // b.none
  41c6fc:	ldrb	w0, [sp, #45]
  41c700:	eor	w0, w0, #0x1
  41c704:	and	w0, w0, #0xff
  41c708:	cmp	w0, #0x0
  41c70c:	b.eq	41c718 <_obstack_memory_used@@Base+0xcc8>  // b.none
  41c710:	bl	402ac0 <__errno_location@plt>
  41c714:	str	wzr, [x0]
  41c718:	mov	w0, #0xffffffff            	// #-1
  41c71c:	b	41c724 <_obstack_memory_used@@Base+0xcd4>
  41c720:	mov	w0, #0x0                   	// #0
  41c724:	ldp	x29, x30, [sp], #48
  41c728:	ret
  41c72c:	stp	x29, x30, [sp, #-48]!
  41c730:	mov	x29, sp
  41c734:	str	x0, [sp, #24]
  41c738:	ldr	x0, [sp, #24]
  41c73c:	bl	40f5d0 <__fxstatat@plt+0xca70>
  41c740:	str	x0, [sp, #40]
  41c744:	ldr	x0, [sp, #40]
  41c748:	cmp	x0, #0x0
  41c74c:	b.ne	41c754 <_obstack_memory_used@@Base+0xd04>  // b.any
  41c750:	bl	41a260 <__fxstatat@plt+0x17700>
  41c754:	ldr	x0, [sp, #40]
  41c758:	ldp	x29, x30, [sp], #48
  41c75c:	ret
  41c760:	sub	sp, sp, #0x20
  41c764:	str	x0, [sp, #8]
  41c768:	str	x1, [sp]
  41c76c:	str	xzr, [sp, #16]
  41c770:	ldr	x0, [sp, #8]
  41c774:	str	x0, [sp, #24]
  41c778:	b	41c7a4 <_obstack_memory_used@@Base+0xd54>
  41c77c:	ldr	x0, [sp, #24]
  41c780:	ldrb	w0, [x0]
  41c784:	and	x1, x0, #0xff
  41c788:	ldr	x0, [sp, #16]
  41c78c:	ror	x0, x0, #55
  41c790:	add	x0, x1, x0
  41c794:	str	x0, [sp, #16]
  41c798:	ldr	x0, [sp, #24]
  41c79c:	add	x0, x0, #0x1
  41c7a0:	str	x0, [sp, #24]
  41c7a4:	ldr	x0, [sp, #24]
  41c7a8:	ldrb	w0, [x0]
  41c7ac:	cmp	w0, #0x0
  41c7b0:	b.ne	41c77c <_obstack_memory_used@@Base+0xd2c>  // b.any
  41c7b4:	ldr	x0, [sp, #16]
  41c7b8:	ldr	x1, [sp]
  41c7bc:	udiv	x2, x0, x1
  41c7c0:	ldr	x1, [sp]
  41c7c4:	mul	x1, x2, x1
  41c7c8:	sub	x0, x0, x1
  41c7cc:	add	sp, sp, #0x20
  41c7d0:	ret
  41c7d4:	stp	x29, x30, [sp, #-32]!
  41c7d8:	mov	x29, sp
  41c7dc:	mov	w0, #0xe                   	// #14
  41c7e0:	bl	4026a0 <nl_langinfo@plt>
  41c7e4:	str	x0, [sp, #24]
  41c7e8:	ldr	x0, [sp, #24]
  41c7ec:	cmp	x0, #0x0
  41c7f0:	b.ne	41c800 <_obstack_memory_used@@Base+0xdb0>  // b.any
  41c7f4:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41c7f8:	add	x0, x0, #0xe68
  41c7fc:	str	x0, [sp, #24]
  41c800:	ldr	x0, [sp, #24]
  41c804:	ldrb	w0, [x0]
  41c808:	cmp	w0, #0x0
  41c80c:	b.ne	41c81c <_obstack_memory_used@@Base+0xdcc>  // b.any
  41c810:	adrp	x0, 425000 <_obstack_memory_used@@Base+0x95b0>
  41c814:	add	x0, x0, #0xe70
  41c818:	str	x0, [sp, #24]
  41c81c:	ldr	x0, [sp, #24]
  41c820:	ldp	x29, x30, [sp], #32
  41c824:	ret
  41c828:	stp	x29, x30, [sp, #-48]!
  41c82c:	mov	x29, sp
  41c830:	str	x0, [sp, #24]
  41c834:	str	wzr, [sp, #44]
  41c838:	str	wzr, [sp, #40]
  41c83c:	ldr	x0, [sp, #24]
  41c840:	bl	402660 <fileno@plt>
  41c844:	str	w0, [sp, #36]
  41c848:	ldr	w0, [sp, #36]
  41c84c:	cmp	w0, #0x0
  41c850:	b.ge	41c860 <_obstack_memory_used@@Base+0xe10>  // b.tcont
  41c854:	ldr	x0, [sp, #24]
  41c858:	bl	402690 <fclose@plt>
  41c85c:	b	41c8dc <_obstack_memory_used@@Base+0xe8c>
  41c860:	ldr	x0, [sp, #24]
  41c864:	bl	402a60 <__freading@plt>
  41c868:	cmp	w0, #0x0
  41c86c:	b.eq	41c88c <_obstack_memory_used@@Base+0xe3c>  // b.none
  41c870:	ldr	x0, [sp, #24]
  41c874:	bl	402660 <fileno@plt>
  41c878:	mov	w2, #0x1                   	// #1
  41c87c:	mov	x1, #0x0                   	// #0
  41c880:	bl	402620 <lseek@plt>
  41c884:	cmn	x0, #0x1
  41c888:	b.eq	41c8a8 <_obstack_memory_used@@Base+0xe58>  // b.none
  41c88c:	ldr	x0, [sp, #24]
  41c890:	bl	41c920 <_obstack_memory_used@@Base+0xed0>
  41c894:	cmp	w0, #0x0
  41c898:	b.eq	41c8a8 <_obstack_memory_used@@Base+0xe58>  // b.none
  41c89c:	bl	402ac0 <__errno_location@plt>
  41c8a0:	ldr	w0, [x0]
  41c8a4:	str	w0, [sp, #44]
  41c8a8:	ldr	x0, [sp, #24]
  41c8ac:	bl	402690 <fclose@plt>
  41c8b0:	str	w0, [sp, #40]
  41c8b4:	ldr	w0, [sp, #44]
  41c8b8:	cmp	w0, #0x0
  41c8bc:	b.eq	41c8d8 <_obstack_memory_used@@Base+0xe88>  // b.none
  41c8c0:	bl	402ac0 <__errno_location@plt>
  41c8c4:	mov	x1, x0
  41c8c8:	ldr	w0, [sp, #44]
  41c8cc:	str	w0, [x1]
  41c8d0:	mov	w0, #0xffffffff            	// #-1
  41c8d4:	str	w0, [sp, #40]
  41c8d8:	ldr	w0, [sp, #40]
  41c8dc:	ldp	x29, x30, [sp], #48
  41c8e0:	ret
  41c8e4:	stp	x29, x30, [sp, #-32]!
  41c8e8:	mov	x29, sp
  41c8ec:	str	x0, [sp, #24]
  41c8f0:	ldr	x0, [sp, #24]
  41c8f4:	ldr	w0, [x0]
  41c8f8:	and	w0, w0, #0x100
  41c8fc:	cmp	w0, #0x0
  41c900:	b.eq	41c914 <_obstack_memory_used@@Base+0xec4>  // b.none
  41c904:	mov	w2, #0x1                   	// #1
  41c908:	mov	x1, #0x0                   	// #0
  41c90c:	ldr	x0, [sp, #24]
  41c910:	bl	41c96c <_obstack_memory_used@@Base+0xf1c>
  41c914:	nop
  41c918:	ldp	x29, x30, [sp], #32
  41c91c:	ret
  41c920:	stp	x29, x30, [sp, #-32]!
  41c924:	mov	x29, sp
  41c928:	str	x0, [sp, #24]
  41c92c:	ldr	x0, [sp, #24]
  41c930:	cmp	x0, #0x0
  41c934:	b.eq	41c948 <_obstack_memory_used@@Base+0xef8>  // b.none
  41c938:	ldr	x0, [sp, #24]
  41c93c:	bl	402a60 <__freading@plt>
  41c940:	cmp	w0, #0x0
  41c944:	b.ne	41c954 <_obstack_memory_used@@Base+0xf04>  // b.any
  41c948:	ldr	x0, [sp, #24]
  41c94c:	bl	402970 <fflush@plt>
  41c950:	b	41c964 <_obstack_memory_used@@Base+0xf14>
  41c954:	ldr	x0, [sp, #24]
  41c958:	bl	41c8e4 <_obstack_memory_used@@Base+0xe94>
  41c95c:	ldr	x0, [sp, #24]
  41c960:	bl	402970 <fflush@plt>
  41c964:	ldp	x29, x30, [sp], #32
  41c968:	ret
  41c96c:	stp	x29, x30, [sp, #-64]!
  41c970:	mov	x29, sp
  41c974:	str	x0, [sp, #40]
  41c978:	str	x1, [sp, #32]
  41c97c:	str	w2, [sp, #28]
  41c980:	ldr	x0, [sp, #40]
  41c984:	ldr	x1, [x0, #16]
  41c988:	ldr	x0, [sp, #40]
  41c98c:	ldr	x0, [x0, #8]
  41c990:	cmp	x1, x0
  41c994:	b.ne	41ca14 <_obstack_memory_used@@Base+0xfc4>  // b.any
  41c998:	ldr	x0, [sp, #40]
  41c99c:	ldr	x1, [x0, #40]
  41c9a0:	ldr	x0, [sp, #40]
  41c9a4:	ldr	x0, [x0, #32]
  41c9a8:	cmp	x1, x0
  41c9ac:	b.ne	41ca14 <_obstack_memory_used@@Base+0xfc4>  // b.any
  41c9b0:	ldr	x0, [sp, #40]
  41c9b4:	ldr	x0, [x0, #72]
  41c9b8:	cmp	x0, #0x0
  41c9bc:	b.ne	41ca14 <_obstack_memory_used@@Base+0xfc4>  // b.any
  41c9c0:	ldr	x0, [sp, #40]
  41c9c4:	bl	402660 <fileno@plt>
  41c9c8:	ldr	w2, [sp, #28]
  41c9cc:	ldr	x1, [sp, #32]
  41c9d0:	bl	402620 <lseek@plt>
  41c9d4:	str	x0, [sp, #56]
  41c9d8:	ldr	x0, [sp, #56]
  41c9dc:	cmn	x0, #0x1
  41c9e0:	b.ne	41c9ec <_obstack_memory_used@@Base+0xf9c>  // b.any
  41c9e4:	mov	w0, #0xffffffff            	// #-1
  41c9e8:	b	41ca24 <_obstack_memory_used@@Base+0xfd4>
  41c9ec:	ldr	x0, [sp, #40]
  41c9f0:	ldr	w0, [x0]
  41c9f4:	and	w1, w0, #0xffffffef
  41c9f8:	ldr	x0, [sp, #40]
  41c9fc:	str	w1, [x0]
  41ca00:	ldr	x0, [sp, #40]
  41ca04:	ldr	x1, [sp, #56]
  41ca08:	str	x1, [x0, #144]
  41ca0c:	mov	w0, #0x0                   	// #0
  41ca10:	b	41ca24 <_obstack_memory_used@@Base+0xfd4>
  41ca14:	ldr	w2, [sp, #28]
  41ca18:	ldr	x1, [sp, #32]
  41ca1c:	ldr	x0, [sp, #40]
  41ca20:	bl	4028e0 <fseeko@plt>
  41ca24:	ldp	x29, x30, [sp], #64
  41ca28:	ret
  41ca2c:	sub	sp, sp, #0x290
  41ca30:	stp	x29, x30, [sp]
  41ca34:	mov	x29, sp
  41ca38:	str	q0, [sp, #32]
  41ca3c:	str	q1, [sp, #16]
  41ca40:	str	wzr, [sp, #564]
  41ca44:	str	xzr, [sp, #400]
  41ca48:	mrs	x0, fpcr
  41ca4c:	str	x0, [sp, #400]
  41ca50:	ldr	q0, [sp, #32]
  41ca54:	str	q0, [sp, #80]
  41ca58:	ldr	x0, [sp, #80]
  41ca5c:	str	x0, [sp, #584]
  41ca60:	ldr	x0, [sp, #88]
  41ca64:	ubfx	x0, x0, #0, #48
  41ca68:	str	x0, [sp, #592]
  41ca6c:	ldrh	w0, [sp, #94]
  41ca70:	ubfx	x0, x0, #0, #15
  41ca74:	and	w0, w0, #0xffff
  41ca78:	and	x0, x0, #0xffff
  41ca7c:	str	x0, [sp, #568]
  41ca80:	ldrb	w0, [sp, #95]
  41ca84:	ubfx	x0, x0, #7, #1
  41ca88:	and	w0, w0, #0xff
  41ca8c:	and	x0, x0, #0xff
  41ca90:	str	x0, [sp, #392]
  41ca94:	ldr	x0, [sp, #568]
  41ca98:	cmp	x0, #0x0
  41ca9c:	b.eq	41caf8 <_obstack_memory_used@@Base+0x10a8>  // b.none
  41caa0:	ldr	x1, [sp, #568]
  41caa4:	mov	x0, #0x7fff                	// #32767
  41caa8:	cmp	x1, x0
  41caac:	b.eq	41cbec <_obstack_memory_used@@Base+0x119c>  // b.none
  41cab0:	ldr	x0, [sp, #592]
  41cab4:	orr	x0, x0, #0x1000000000000
  41cab8:	str	x0, [sp, #592]
  41cabc:	ldr	x0, [sp, #592]
  41cac0:	lsl	x1, x0, #3
  41cac4:	ldr	x0, [sp, #584]
  41cac8:	lsr	x0, x0, #61
  41cacc:	orr	x0, x1, x0
  41cad0:	str	x0, [sp, #592]
  41cad4:	ldr	x0, [sp, #584]
  41cad8:	lsl	x0, x0, #3
  41cadc:	str	x0, [sp, #584]
  41cae0:	ldr	x1, [sp, #568]
  41cae4:	mov	x0, #0xffffffffffffc001    	// #-16383
  41cae8:	add	x0, x1, x0
  41caec:	str	x0, [sp, #568]
  41caf0:	str	xzr, [sp, #576]
  41caf4:	b	41cc30 <_obstack_memory_used@@Base+0x11e0>
  41caf8:	ldr	x1, [sp, #592]
  41cafc:	ldr	x0, [sp, #584]
  41cb00:	orr	x0, x1, x0
  41cb04:	cmp	x0, #0x0
  41cb08:	b.ne	41cb18 <_obstack_memory_used@@Base+0x10c8>  // b.any
  41cb0c:	mov	x0, #0x1                   	// #1
  41cb10:	str	x0, [sp, #576]
  41cb14:	b	41cc30 <_obstack_memory_used@@Base+0x11e0>
  41cb18:	ldr	x0, [sp, #592]
  41cb1c:	cmp	x0, #0x0
  41cb20:	b.eq	41cb38 <_obstack_memory_used@@Base+0x10e8>  // b.none
  41cb24:	ldr	x0, [sp, #592]
  41cb28:	clz	x0, x0
  41cb2c:	sxtw	x0, w0
  41cb30:	str	x0, [sp, #536]
  41cb34:	b	41cb54 <_obstack_memory_used@@Base+0x1104>
  41cb38:	ldr	x0, [sp, #584]
  41cb3c:	clz	x0, x0
  41cb40:	sxtw	x0, w0
  41cb44:	str	x0, [sp, #536]
  41cb48:	ldr	x0, [sp, #536]
  41cb4c:	add	x0, x0, #0x40
  41cb50:	str	x0, [sp, #536]
  41cb54:	ldr	x0, [sp, #536]
  41cb58:	sub	x0, x0, #0xf
  41cb5c:	str	x0, [sp, #536]
  41cb60:	ldr	x0, [sp, #536]
  41cb64:	cmp	x0, #0x3c
  41cb68:	b.gt	41cbb4 <_obstack_memory_used@@Base+0x1164>
  41cb6c:	ldr	x0, [sp, #536]
  41cb70:	add	w0, w0, #0x3
  41cb74:	ldr	x1, [sp, #592]
  41cb78:	lsl	x1, x1, x0
  41cb7c:	ldr	x0, [sp, #536]
  41cb80:	mov	w2, w0
  41cb84:	mov	w0, #0x3d                  	// #61
  41cb88:	sub	w0, w0, w2
  41cb8c:	ldr	x2, [sp, #584]
  41cb90:	lsr	x0, x2, x0
  41cb94:	orr	x0, x1, x0
  41cb98:	str	x0, [sp, #592]
  41cb9c:	ldr	x0, [sp, #536]
  41cba0:	add	w0, w0, #0x3
  41cba4:	ldr	x1, [sp, #584]
  41cba8:	lsl	x0, x1, x0
  41cbac:	str	x0, [sp, #584]
  41cbb0:	b	41cbcc <_obstack_memory_used@@Base+0x117c>
  41cbb4:	ldr	x0, [sp, #536]
  41cbb8:	sub	w0, w0, #0x3d
  41cbbc:	ldr	x1, [sp, #584]
  41cbc0:	lsl	x0, x1, x0
  41cbc4:	str	x0, [sp, #592]
  41cbc8:	str	xzr, [sp, #584]
  41cbcc:	ldr	x1, [sp, #536]
  41cbd0:	mov	x0, #0x3ffe                	// #16382
  41cbd4:	add	x0, x1, x0
  41cbd8:	ldr	x1, [sp, #568]
  41cbdc:	sub	x0, x1, x0
  41cbe0:	str	x0, [sp, #568]
  41cbe4:	str	xzr, [sp, #576]
  41cbe8:	b	41cc30 <_obstack_memory_used@@Base+0x11e0>
  41cbec:	ldr	x1, [sp, #592]
  41cbf0:	ldr	x0, [sp, #584]
  41cbf4:	orr	x0, x1, x0
  41cbf8:	cmp	x0, #0x0
  41cbfc:	b.ne	41cc0c <_obstack_memory_used@@Base+0x11bc>  // b.any
  41cc00:	mov	x0, #0x2                   	// #2
  41cc04:	str	x0, [sp, #576]
  41cc08:	b	41cc30 <_obstack_memory_used@@Base+0x11e0>
  41cc0c:	mov	x0, #0x3                   	// #3
  41cc10:	str	x0, [sp, #576]
  41cc14:	ldr	x0, [sp, #592]
  41cc18:	and	x0, x0, #0x800000000000
  41cc1c:	cmp	x0, #0x0
  41cc20:	b.ne	41cc30 <_obstack_memory_used@@Base+0x11e0>  // b.any
  41cc24:	ldr	w0, [sp, #564]
  41cc28:	orr	w0, w0, #0x1
  41cc2c:	str	w0, [sp, #564]
  41cc30:	nop
  41cc34:	ldr	q0, [sp, #16]
  41cc38:	str	q0, [sp, #64]
  41cc3c:	ldr	x0, [sp, #64]
  41cc40:	str	x0, [sp, #616]
  41cc44:	ldr	x0, [sp, #72]
  41cc48:	ubfx	x0, x0, #0, #48
  41cc4c:	str	x0, [sp, #624]
  41cc50:	ldrh	w0, [sp, #78]
  41cc54:	ubfx	x0, x0, #0, #15
  41cc58:	and	w0, w0, #0xffff
  41cc5c:	and	x0, x0, #0xffff
  41cc60:	str	x0, [sp, #600]
  41cc64:	ldrb	w0, [sp, #79]
  41cc68:	ubfx	x0, x0, #7, #1
  41cc6c:	and	w0, w0, #0xff
  41cc70:	and	x0, x0, #0xff
  41cc74:	str	x0, [sp, #384]
  41cc78:	ldr	x0, [sp, #600]
  41cc7c:	cmp	x0, #0x0
  41cc80:	b.eq	41ccdc <_obstack_memory_used@@Base+0x128c>  // b.none
  41cc84:	ldr	x1, [sp, #600]
  41cc88:	mov	x0, #0x7fff                	// #32767
  41cc8c:	cmp	x1, x0
  41cc90:	b.eq	41cdd0 <_obstack_memory_used@@Base+0x1380>  // b.none
  41cc94:	ldr	x0, [sp, #624]
  41cc98:	orr	x0, x0, #0x1000000000000
  41cc9c:	str	x0, [sp, #624]
  41cca0:	ldr	x0, [sp, #624]
  41cca4:	lsl	x1, x0, #3
  41cca8:	ldr	x0, [sp, #616]
  41ccac:	lsr	x0, x0, #61
  41ccb0:	orr	x0, x1, x0
  41ccb4:	str	x0, [sp, #624]
  41ccb8:	ldr	x0, [sp, #616]
  41ccbc:	lsl	x0, x0, #3
  41ccc0:	str	x0, [sp, #616]
  41ccc4:	ldr	x1, [sp, #600]
  41ccc8:	mov	x0, #0xffffffffffffc001    	// #-16383
  41cccc:	add	x0, x1, x0
  41ccd0:	str	x0, [sp, #600]
  41ccd4:	str	xzr, [sp, #608]
  41ccd8:	b	41ce14 <_obstack_memory_used@@Base+0x13c4>
  41ccdc:	ldr	x1, [sp, #624]
  41cce0:	ldr	x0, [sp, #616]
  41cce4:	orr	x0, x1, x0
  41cce8:	cmp	x0, #0x0
  41ccec:	b.ne	41ccfc <_obstack_memory_used@@Base+0x12ac>  // b.any
  41ccf0:	mov	x0, #0x1                   	// #1
  41ccf4:	str	x0, [sp, #608]
  41ccf8:	b	41ce14 <_obstack_memory_used@@Base+0x13c4>
  41ccfc:	ldr	x0, [sp, #624]
  41cd00:	cmp	x0, #0x0
  41cd04:	b.eq	41cd1c <_obstack_memory_used@@Base+0x12cc>  // b.none
  41cd08:	ldr	x0, [sp, #624]
  41cd0c:	clz	x0, x0
  41cd10:	sxtw	x0, w0
  41cd14:	str	x0, [sp, #528]
  41cd18:	b	41cd38 <_obstack_memory_used@@Base+0x12e8>
  41cd1c:	ldr	x0, [sp, #616]
  41cd20:	clz	x0, x0
  41cd24:	sxtw	x0, w0
  41cd28:	str	x0, [sp, #528]
  41cd2c:	ldr	x0, [sp, #528]
  41cd30:	add	x0, x0, #0x40
  41cd34:	str	x0, [sp, #528]
  41cd38:	ldr	x0, [sp, #528]
  41cd3c:	sub	x0, x0, #0xf
  41cd40:	str	x0, [sp, #528]
  41cd44:	ldr	x0, [sp, #528]
  41cd48:	cmp	x0, #0x3c
  41cd4c:	b.gt	41cd98 <_obstack_memory_used@@Base+0x1348>
  41cd50:	ldr	x0, [sp, #528]
  41cd54:	add	w0, w0, #0x3
  41cd58:	ldr	x1, [sp, #624]
  41cd5c:	lsl	x1, x1, x0
  41cd60:	ldr	x0, [sp, #528]
  41cd64:	mov	w2, w0
  41cd68:	mov	w0, #0x3d                  	// #61
  41cd6c:	sub	w0, w0, w2
  41cd70:	ldr	x2, [sp, #616]
  41cd74:	lsr	x0, x2, x0
  41cd78:	orr	x0, x1, x0
  41cd7c:	str	x0, [sp, #624]
  41cd80:	ldr	x0, [sp, #528]
  41cd84:	add	w0, w0, #0x3
  41cd88:	ldr	x1, [sp, #616]
  41cd8c:	lsl	x0, x1, x0
  41cd90:	str	x0, [sp, #616]
  41cd94:	b	41cdb0 <_obstack_memory_used@@Base+0x1360>
  41cd98:	ldr	x0, [sp, #528]
  41cd9c:	sub	w0, w0, #0x3d
  41cda0:	ldr	x1, [sp, #616]
  41cda4:	lsl	x0, x1, x0
  41cda8:	str	x0, [sp, #624]
  41cdac:	str	xzr, [sp, #616]
  41cdb0:	ldr	x1, [sp, #528]
  41cdb4:	mov	x0, #0x3ffe                	// #16382
  41cdb8:	add	x0, x1, x0
  41cdbc:	ldr	x1, [sp, #600]
  41cdc0:	sub	x0, x1, x0
  41cdc4:	str	x0, [sp, #600]
  41cdc8:	str	xzr, [sp, #608]
  41cdcc:	b	41ce14 <_obstack_memory_used@@Base+0x13c4>
  41cdd0:	ldr	x1, [sp, #624]
  41cdd4:	ldr	x0, [sp, #616]
  41cdd8:	orr	x0, x1, x0
  41cddc:	cmp	x0, #0x0
  41cde0:	b.ne	41cdf0 <_obstack_memory_used@@Base+0x13a0>  // b.any
  41cde4:	mov	x0, #0x2                   	// #2
  41cde8:	str	x0, [sp, #608]
  41cdec:	b	41ce14 <_obstack_memory_used@@Base+0x13c4>
  41cdf0:	mov	x0, #0x3                   	// #3
  41cdf4:	str	x0, [sp, #608]
  41cdf8:	ldr	x0, [sp, #624]
  41cdfc:	and	x0, x0, #0x800000000000
  41ce00:	cmp	x0, #0x0
  41ce04:	b.ne	41ce14 <_obstack_memory_used@@Base+0x13c4>  // b.any
  41ce08:	ldr	w0, [sp, #564]
  41ce0c:	orr	w0, w0, #0x1
  41ce10:	str	w0, [sp, #564]
  41ce14:	nop
  41ce18:	ldr	x1, [sp, #392]
  41ce1c:	ldr	x0, [sp, #384]
  41ce20:	eor	x0, x1, x0
  41ce24:	str	x0, [sp, #648]
  41ce28:	ldr	x1, [sp, #568]
  41ce2c:	ldr	x0, [sp, #600]
  41ce30:	sub	x0, x1, x0
  41ce34:	str	x0, [sp, #640]
  41ce38:	ldr	x0, [sp, #576]
  41ce3c:	lsl	x1, x0, #2
  41ce40:	ldr	x0, [sp, #608]
  41ce44:	orr	x0, x1, x0
  41ce48:	cmp	x0, #0xf
  41ce4c:	b.eq	41d804 <_obstack_memory_used@@Base+0x1db4>  // b.none
  41ce50:	cmp	x0, #0xf
  41ce54:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ce58:	cmp	x0, #0xe
  41ce5c:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ce60:	cmp	x0, #0xc
  41ce64:	b.ge	41d864 <_obstack_memory_used@@Base+0x1e14>  // b.tcont
  41ce68:	cmp	x0, #0xb
  41ce6c:	b.eq	41d888 <_obstack_memory_used@@Base+0x1e38>  // b.none
  41ce70:	cmp	x0, #0xb
  41ce74:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ce78:	cmp	x0, #0xa
  41ce7c:	b.eq	41d8d0 <_obstack_memory_used@@Base+0x1e80>  // b.none
  41ce80:	cmp	x0, #0xa
  41ce84:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ce88:	cmp	x0, #0x9
  41ce8c:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ce90:	cmp	x0, #0x8
  41ce94:	b.ge	41d8c4 <_obstack_memory_used@@Base+0x1e74>  // b.tcont
  41ce98:	cmp	x0, #0x7
  41ce9c:	b.eq	41d888 <_obstack_memory_used@@Base+0x1e38>  // b.none
  41cea0:	cmp	x0, #0x7
  41cea4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41cea8:	cmp	x0, #0x6
  41ceac:	b.eq	41d8ac <_obstack_memory_used@@Base+0x1e5c>  // b.none
  41ceb0:	cmp	x0, #0x6
  41ceb4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ceb8:	cmp	x0, #0x5
  41cebc:	b.eq	41d8d0 <_obstack_memory_used@@Base+0x1e80>  // b.none
  41cec0:	cmp	x0, #0x5
  41cec4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41cec8:	cmp	x0, #0x4
  41cecc:	b.eq	41d8ac <_obstack_memory_used@@Base+0x1e5c>  // b.none
  41ced0:	cmp	x0, #0x4
  41ced4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41ced8:	cmp	x0, #0x3
  41cedc:	b.eq	41d888 <_obstack_memory_used@@Base+0x1e38>  // b.none
  41cee0:	cmp	x0, #0x3
  41cee4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41cee8:	cmp	x0, #0x2
  41ceec:	b.eq	41d8ac <_obstack_memory_used@@Base+0x1e5c>  // b.none
  41cef0:	cmp	x0, #0x2
  41cef4:	b.gt	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41cef8:	cmp	x0, #0x0
  41cefc:	b.eq	41cf0c <_obstack_memory_used@@Base+0x14bc>  // b.none
  41cf00:	cmp	x0, #0x1
  41cf04:	b.eq	41d8b8 <_obstack_memory_used@@Base+0x1e68>  // b.none
  41cf08:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41cf0c:	str	xzr, [sp, #632]
  41cf10:	ldr	x1, [sp, #592]
  41cf14:	ldr	x0, [sp, #624]
  41cf18:	cmp	x1, x0
  41cf1c:	b.hi	41cf40 <_obstack_memory_used@@Base+0x14f0>  // b.pmore
  41cf20:	ldr	x1, [sp, #592]
  41cf24:	ldr	x0, [sp, #624]
  41cf28:	cmp	x1, x0
  41cf2c:	b.ne	41cf74 <_obstack_memory_used@@Base+0x1524>  // b.any
  41cf30:	ldr	x1, [sp, #584]
  41cf34:	ldr	x0, [sp, #616]
  41cf38:	cmp	x1, x0
  41cf3c:	b.cc	41cf74 <_obstack_memory_used@@Base+0x1524>  // b.lo, b.ul, b.last
  41cf40:	ldr	x0, [sp, #592]
  41cf44:	lsr	x0, x0, #1
  41cf48:	str	x0, [sp, #520]
  41cf4c:	ldr	x0, [sp, #592]
  41cf50:	lsl	x1, x0, #63
  41cf54:	ldr	x0, [sp, #584]
  41cf58:	lsr	x0, x0, #1
  41cf5c:	orr	x0, x1, x0
  41cf60:	str	x0, [sp, #512]
  41cf64:	ldr	x0, [sp, #584]
  41cf68:	lsl	x0, x0, #63
  41cf6c:	str	x0, [sp, #504]
  41cf70:	b	41cf94 <_obstack_memory_used@@Base+0x1544>
  41cf74:	ldr	x0, [sp, #640]
  41cf78:	sub	x0, x0, #0x1
  41cf7c:	str	x0, [sp, #640]
  41cf80:	ldr	x0, [sp, #592]
  41cf84:	str	x0, [sp, #520]
  41cf88:	ldr	x0, [sp, #584]
  41cf8c:	str	x0, [sp, #512]
  41cf90:	str	xzr, [sp, #504]
  41cf94:	ldr	x0, [sp, #624]
  41cf98:	lsl	x1, x0, #12
  41cf9c:	ldr	x0, [sp, #616]
  41cfa0:	lsr	x0, x0, #52
  41cfa4:	orr	x0, x1, x0
  41cfa8:	str	x0, [sp, #624]
  41cfac:	ldr	x0, [sp, #616]
  41cfb0:	lsl	x0, x0, #12
  41cfb4:	str	x0, [sp, #616]
  41cfb8:	ldr	x0, [sp, #624]
  41cfbc:	lsr	x0, x0, #32
  41cfc0:	str	x0, [sp, #376]
  41cfc4:	ldr	x0, [sp, #624]
  41cfc8:	and	x0, x0, #0xffffffff
  41cfcc:	str	x0, [sp, #368]
  41cfd0:	ldr	x0, [sp, #520]
  41cfd4:	ldr	x1, [sp, #376]
  41cfd8:	udiv	x2, x0, x1
  41cfdc:	ldr	x1, [sp, #376]
  41cfe0:	mul	x1, x2, x1
  41cfe4:	sub	x0, x0, x1
  41cfe8:	str	x0, [sp, #464]
  41cfec:	ldr	x1, [sp, #520]
  41cff0:	ldr	x0, [sp, #376]
  41cff4:	udiv	x0, x1, x0
  41cff8:	str	x0, [sp, #480]
  41cffc:	ldr	x1, [sp, #480]
  41d000:	ldr	x0, [sp, #368]
  41d004:	mul	x0, x1, x0
  41d008:	str	x0, [sp, #360]
  41d00c:	ldr	x0, [sp, #464]
  41d010:	lsl	x1, x0, #32
  41d014:	ldr	x0, [sp, #512]
  41d018:	lsr	x0, x0, #32
  41d01c:	orr	x0, x1, x0
  41d020:	str	x0, [sp, #464]
  41d024:	ldr	x1, [sp, #464]
  41d028:	ldr	x0, [sp, #360]
  41d02c:	cmp	x1, x0
  41d030:	b.cs	41d08c <_obstack_memory_used@@Base+0x163c>  // b.hs, b.nlast
  41d034:	ldr	x0, [sp, #480]
  41d038:	sub	x0, x0, #0x1
  41d03c:	str	x0, [sp, #480]
  41d040:	ldr	x1, [sp, #464]
  41d044:	ldr	x0, [sp, #624]
  41d048:	add	x0, x1, x0
  41d04c:	str	x0, [sp, #464]
  41d050:	ldr	x1, [sp, #464]
  41d054:	ldr	x0, [sp, #624]
  41d058:	cmp	x1, x0
  41d05c:	b.cc	41d08c <_obstack_memory_used@@Base+0x163c>  // b.lo, b.ul, b.last
  41d060:	ldr	x1, [sp, #464]
  41d064:	ldr	x0, [sp, #360]
  41d068:	cmp	x1, x0
  41d06c:	b.cs	41d08c <_obstack_memory_used@@Base+0x163c>  // b.hs, b.nlast
  41d070:	ldr	x0, [sp, #480]
  41d074:	sub	x0, x0, #0x1
  41d078:	str	x0, [sp, #480]
  41d07c:	ldr	x1, [sp, #464]
  41d080:	ldr	x0, [sp, #624]
  41d084:	add	x0, x1, x0
  41d088:	str	x0, [sp, #464]
  41d08c:	ldr	x1, [sp, #464]
  41d090:	ldr	x0, [sp, #360]
  41d094:	sub	x0, x1, x0
  41d098:	str	x0, [sp, #464]
  41d09c:	ldr	x0, [sp, #464]
  41d0a0:	ldr	x1, [sp, #376]
  41d0a4:	udiv	x2, x0, x1
  41d0a8:	ldr	x1, [sp, #376]
  41d0ac:	mul	x1, x2, x1
  41d0b0:	sub	x0, x0, x1
  41d0b4:	str	x0, [sp, #456]
  41d0b8:	ldr	x1, [sp, #464]
  41d0bc:	ldr	x0, [sp, #376]
  41d0c0:	udiv	x0, x1, x0
  41d0c4:	str	x0, [sp, #472]
  41d0c8:	ldr	x1, [sp, #472]
  41d0cc:	ldr	x0, [sp, #368]
  41d0d0:	mul	x0, x1, x0
  41d0d4:	str	x0, [sp, #360]
  41d0d8:	ldr	x0, [sp, #456]
  41d0dc:	lsl	x1, x0, #32
  41d0e0:	ldr	x0, [sp, #512]
  41d0e4:	and	x0, x0, #0xffffffff
  41d0e8:	orr	x0, x1, x0
  41d0ec:	str	x0, [sp, #456]
  41d0f0:	ldr	x1, [sp, #456]
  41d0f4:	ldr	x0, [sp, #360]
  41d0f8:	cmp	x1, x0
  41d0fc:	b.cs	41d158 <_obstack_memory_used@@Base+0x1708>  // b.hs, b.nlast
  41d100:	ldr	x0, [sp, #472]
  41d104:	sub	x0, x0, #0x1
  41d108:	str	x0, [sp, #472]
  41d10c:	ldr	x1, [sp, #456]
  41d110:	ldr	x0, [sp, #624]
  41d114:	add	x0, x1, x0
  41d118:	str	x0, [sp, #456]
  41d11c:	ldr	x1, [sp, #456]
  41d120:	ldr	x0, [sp, #624]
  41d124:	cmp	x1, x0
  41d128:	b.cc	41d158 <_obstack_memory_used@@Base+0x1708>  // b.lo, b.ul, b.last
  41d12c:	ldr	x1, [sp, #456]
  41d130:	ldr	x0, [sp, #360]
  41d134:	cmp	x1, x0
  41d138:	b.cs	41d158 <_obstack_memory_used@@Base+0x1708>  // b.hs, b.nlast
  41d13c:	ldr	x0, [sp, #472]
  41d140:	sub	x0, x0, #0x1
  41d144:	str	x0, [sp, #472]
  41d148:	ldr	x1, [sp, #456]
  41d14c:	ldr	x0, [sp, #624]
  41d150:	add	x0, x1, x0
  41d154:	str	x0, [sp, #456]
  41d158:	ldr	x1, [sp, #456]
  41d15c:	ldr	x0, [sp, #360]
  41d160:	sub	x0, x1, x0
  41d164:	str	x0, [sp, #456]
  41d168:	ldr	x0, [sp, #480]
  41d16c:	lsl	x0, x0, #32
  41d170:	ldr	x1, [sp, #472]
  41d174:	orr	x0, x1, x0
  41d178:	str	x0, [sp, #544]
  41d17c:	ldr	x0, [sp, #456]
  41d180:	str	x0, [sp, #496]
  41d184:	ldr	x0, [sp, #544]
  41d188:	str	w0, [sp, #356]
  41d18c:	ldr	x0, [sp, #544]
  41d190:	lsr	x0, x0, #32
  41d194:	str	w0, [sp, #352]
  41d198:	ldr	x0, [sp, #616]
  41d19c:	str	w0, [sp, #348]
  41d1a0:	ldr	x0, [sp, #616]
  41d1a4:	lsr	x0, x0, #32
  41d1a8:	str	w0, [sp, #344]
  41d1ac:	ldr	w1, [sp, #356]
  41d1b0:	ldr	w0, [sp, #348]
  41d1b4:	mul	x0, x1, x0
  41d1b8:	str	x0, [sp, #336]
  41d1bc:	ldr	w1, [sp, #356]
  41d1c0:	ldr	w0, [sp, #344]
  41d1c4:	mul	x0, x1, x0
  41d1c8:	str	x0, [sp, #328]
  41d1cc:	ldr	w1, [sp, #352]
  41d1d0:	ldr	w0, [sp, #348]
  41d1d4:	mul	x0, x1, x0
  41d1d8:	str	x0, [sp, #320]
  41d1dc:	ldr	w1, [sp, #352]
  41d1e0:	ldr	w0, [sp, #344]
  41d1e4:	mul	x0, x1, x0
  41d1e8:	str	x0, [sp, #448]
  41d1ec:	ldr	x0, [sp, #336]
  41d1f0:	lsr	x0, x0, #32
  41d1f4:	ldr	x1, [sp, #328]
  41d1f8:	add	x0, x1, x0
  41d1fc:	str	x0, [sp, #328]
  41d200:	ldr	x1, [sp, #328]
  41d204:	ldr	x0, [sp, #320]
  41d208:	add	x0, x1, x0
  41d20c:	str	x0, [sp, #328]
  41d210:	ldr	x1, [sp, #328]
  41d214:	ldr	x0, [sp, #320]
  41d218:	cmp	x1, x0
  41d21c:	b.cs	41d230 <_obstack_memory_used@@Base+0x17e0>  // b.hs, b.nlast
  41d220:	ldr	x1, [sp, #448]
  41d224:	mov	x0, #0x100000000           	// #4294967296
  41d228:	add	x0, x1, x0
  41d22c:	str	x0, [sp, #448]
  41d230:	ldr	x0, [sp, #328]
  41d234:	lsr	x0, x0, #32
  41d238:	ldr	x1, [sp, #448]
  41d23c:	add	x0, x1, x0
  41d240:	str	x0, [sp, #312]
  41d244:	ldr	x0, [sp, #328]
  41d248:	and	x0, x0, #0xffffffff
  41d24c:	lsl	x1, x0, #32
  41d250:	ldr	x0, [sp, #336]
  41d254:	and	x0, x0, #0xffffffff
  41d258:	add	x0, x1, x0
  41d25c:	str	x0, [sp, #304]
  41d260:	ldr	x0, [sp, #504]
  41d264:	str	x0, [sp, #488]
  41d268:	ldr	x1, [sp, #312]
  41d26c:	ldr	x0, [sp, #496]
  41d270:	cmp	x1, x0
  41d274:	b.hi	41d298 <_obstack_memory_used@@Base+0x1848>  // b.pmore
  41d278:	ldr	x1, [sp, #312]
  41d27c:	ldr	x0, [sp, #496]
  41d280:	cmp	x1, x0
  41d284:	b.ne	41d398 <_obstack_memory_used@@Base+0x1948>  // b.any
  41d288:	ldr	x1, [sp, #304]
  41d28c:	ldr	x0, [sp, #488]
  41d290:	cmp	x1, x0
  41d294:	b.ls	41d398 <_obstack_memory_used@@Base+0x1948>  // b.plast
  41d298:	ldr	x0, [sp, #544]
  41d29c:	sub	x0, x0, #0x1
  41d2a0:	str	x0, [sp, #544]
  41d2a4:	ldr	x1, [sp, #616]
  41d2a8:	ldr	x0, [sp, #488]
  41d2ac:	add	x0, x1, x0
  41d2b0:	str	x0, [sp, #296]
  41d2b4:	ldr	x1, [sp, #624]
  41d2b8:	ldr	x0, [sp, #496]
  41d2bc:	add	x1, x1, x0
  41d2c0:	ldr	x2, [sp, #296]
  41d2c4:	ldr	x0, [sp, #616]
  41d2c8:	cmp	x2, x0
  41d2cc:	cset	w0, cc  // cc = lo, ul, last
  41d2d0:	and	w0, w0, #0xff
  41d2d4:	and	x0, x0, #0xff
  41d2d8:	add	x0, x1, x0
  41d2dc:	str	x0, [sp, #496]
  41d2e0:	ldr	x0, [sp, #296]
  41d2e4:	str	x0, [sp, #488]
  41d2e8:	ldr	x1, [sp, #496]
  41d2ec:	ldr	x0, [sp, #624]
  41d2f0:	cmp	x1, x0
  41d2f4:	b.hi	41d318 <_obstack_memory_used@@Base+0x18c8>  // b.pmore
  41d2f8:	ldr	x1, [sp, #496]
  41d2fc:	ldr	x0, [sp, #624]
  41d300:	cmp	x1, x0
  41d304:	b.ne	41d398 <_obstack_memory_used@@Base+0x1948>  // b.any
  41d308:	ldr	x1, [sp, #488]
  41d30c:	ldr	x0, [sp, #616]
  41d310:	cmp	x1, x0
  41d314:	b.cc	41d398 <_obstack_memory_used@@Base+0x1948>  // b.lo, b.ul, b.last
  41d318:	ldr	x1, [sp, #312]
  41d31c:	ldr	x0, [sp, #496]
  41d320:	cmp	x1, x0
  41d324:	b.hi	41d348 <_obstack_memory_used@@Base+0x18f8>  // b.pmore
  41d328:	ldr	x1, [sp, #312]
  41d32c:	ldr	x0, [sp, #496]
  41d330:	cmp	x1, x0
  41d334:	b.ne	41d398 <_obstack_memory_used@@Base+0x1948>  // b.any
  41d338:	ldr	x1, [sp, #304]
  41d33c:	ldr	x0, [sp, #488]
  41d340:	cmp	x1, x0
  41d344:	b.ls	41d398 <_obstack_memory_used@@Base+0x1948>  // b.plast
  41d348:	ldr	x0, [sp, #544]
  41d34c:	sub	x0, x0, #0x1
  41d350:	str	x0, [sp, #544]
  41d354:	ldr	x1, [sp, #616]
  41d358:	ldr	x0, [sp, #488]
  41d35c:	add	x0, x1, x0
  41d360:	str	x0, [sp, #288]
  41d364:	ldr	x1, [sp, #624]
  41d368:	ldr	x0, [sp, #496]
  41d36c:	add	x1, x1, x0
  41d370:	ldr	x2, [sp, #288]
  41d374:	ldr	x0, [sp, #616]
  41d378:	cmp	x2, x0
  41d37c:	cset	w0, cc  // cc = lo, ul, last
  41d380:	and	w0, w0, #0xff
  41d384:	and	x0, x0, #0xff
  41d388:	add	x0, x1, x0
  41d38c:	str	x0, [sp, #496]
  41d390:	ldr	x0, [sp, #288]
  41d394:	str	x0, [sp, #488]
  41d398:	ldr	x1, [sp, #488]
  41d39c:	ldr	x0, [sp, #304]
  41d3a0:	sub	x0, x1, x0
  41d3a4:	str	x0, [sp, #280]
  41d3a8:	ldr	x1, [sp, #496]
  41d3ac:	ldr	x0, [sp, #312]
  41d3b0:	sub	x1, x1, x0
  41d3b4:	ldr	x2, [sp, #280]
  41d3b8:	ldr	x0, [sp, #488]
  41d3bc:	cmp	x2, x0
  41d3c0:	cset	w0, hi  // hi = pmore
  41d3c4:	and	w0, w0, #0xff
  41d3c8:	and	x0, x0, #0xff
  41d3cc:	sub	x0, x1, x0
  41d3d0:	str	x0, [sp, #496]
  41d3d4:	ldr	x0, [sp, #280]
  41d3d8:	str	x0, [sp, #488]
  41d3dc:	ldr	x1, [sp, #496]
  41d3e0:	ldr	x0, [sp, #624]
  41d3e4:	cmp	x1, x0
  41d3e8:	b.ne	41d3f8 <_obstack_memory_used@@Base+0x19a8>  // b.any
  41d3ec:	mov	x0, #0xffffffffffffffff    	// #-1
  41d3f0:	str	x0, [sp, #552]
  41d3f4:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d3f8:	ldr	x0, [sp, #624]
  41d3fc:	lsr	x0, x0, #32
  41d400:	str	x0, [sp, #272]
  41d404:	ldr	x0, [sp, #624]
  41d408:	and	x0, x0, #0xffffffff
  41d40c:	str	x0, [sp, #264]
  41d410:	ldr	x0, [sp, #496]
  41d414:	ldr	x1, [sp, #272]
  41d418:	udiv	x2, x0, x1
  41d41c:	ldr	x1, [sp, #272]
  41d420:	mul	x1, x2, x1
  41d424:	sub	x0, x0, x1
  41d428:	str	x0, [sp, #424]
  41d42c:	ldr	x1, [sp, #496]
  41d430:	ldr	x0, [sp, #272]
  41d434:	udiv	x0, x1, x0
  41d438:	str	x0, [sp, #440]
  41d43c:	ldr	x1, [sp, #440]
  41d440:	ldr	x0, [sp, #264]
  41d444:	mul	x0, x1, x0
  41d448:	str	x0, [sp, #256]
  41d44c:	ldr	x0, [sp, #424]
  41d450:	lsl	x1, x0, #32
  41d454:	ldr	x0, [sp, #488]
  41d458:	lsr	x0, x0, #32
  41d45c:	orr	x0, x1, x0
  41d460:	str	x0, [sp, #424]
  41d464:	ldr	x1, [sp, #424]
  41d468:	ldr	x0, [sp, #256]
  41d46c:	cmp	x1, x0
  41d470:	b.cs	41d4cc <_obstack_memory_used@@Base+0x1a7c>  // b.hs, b.nlast
  41d474:	ldr	x0, [sp, #440]
  41d478:	sub	x0, x0, #0x1
  41d47c:	str	x0, [sp, #440]
  41d480:	ldr	x1, [sp, #424]
  41d484:	ldr	x0, [sp, #624]
  41d488:	add	x0, x1, x0
  41d48c:	str	x0, [sp, #424]
  41d490:	ldr	x1, [sp, #424]
  41d494:	ldr	x0, [sp, #624]
  41d498:	cmp	x1, x0
  41d49c:	b.cc	41d4cc <_obstack_memory_used@@Base+0x1a7c>  // b.lo, b.ul, b.last
  41d4a0:	ldr	x1, [sp, #424]
  41d4a4:	ldr	x0, [sp, #256]
  41d4a8:	cmp	x1, x0
  41d4ac:	b.cs	41d4cc <_obstack_memory_used@@Base+0x1a7c>  // b.hs, b.nlast
  41d4b0:	ldr	x0, [sp, #440]
  41d4b4:	sub	x0, x0, #0x1
  41d4b8:	str	x0, [sp, #440]
  41d4bc:	ldr	x1, [sp, #424]
  41d4c0:	ldr	x0, [sp, #624]
  41d4c4:	add	x0, x1, x0
  41d4c8:	str	x0, [sp, #424]
  41d4cc:	ldr	x1, [sp, #424]
  41d4d0:	ldr	x0, [sp, #256]
  41d4d4:	sub	x0, x1, x0
  41d4d8:	str	x0, [sp, #424]
  41d4dc:	ldr	x0, [sp, #424]
  41d4e0:	ldr	x1, [sp, #272]
  41d4e4:	udiv	x2, x0, x1
  41d4e8:	ldr	x1, [sp, #272]
  41d4ec:	mul	x1, x2, x1
  41d4f0:	sub	x0, x0, x1
  41d4f4:	str	x0, [sp, #416]
  41d4f8:	ldr	x1, [sp, #424]
  41d4fc:	ldr	x0, [sp, #272]
  41d500:	udiv	x0, x1, x0
  41d504:	str	x0, [sp, #432]
  41d508:	ldr	x1, [sp, #432]
  41d50c:	ldr	x0, [sp, #264]
  41d510:	mul	x0, x1, x0
  41d514:	str	x0, [sp, #256]
  41d518:	ldr	x0, [sp, #416]
  41d51c:	lsl	x1, x0, #32
  41d520:	ldr	x0, [sp, #488]
  41d524:	and	x0, x0, #0xffffffff
  41d528:	orr	x0, x1, x0
  41d52c:	str	x0, [sp, #416]
  41d530:	ldr	x1, [sp, #416]
  41d534:	ldr	x0, [sp, #256]
  41d538:	cmp	x1, x0
  41d53c:	b.cs	41d598 <_obstack_memory_used@@Base+0x1b48>  // b.hs, b.nlast
  41d540:	ldr	x0, [sp, #432]
  41d544:	sub	x0, x0, #0x1
  41d548:	str	x0, [sp, #432]
  41d54c:	ldr	x1, [sp, #416]
  41d550:	ldr	x0, [sp, #624]
  41d554:	add	x0, x1, x0
  41d558:	str	x0, [sp, #416]
  41d55c:	ldr	x1, [sp, #416]
  41d560:	ldr	x0, [sp, #624]
  41d564:	cmp	x1, x0
  41d568:	b.cc	41d598 <_obstack_memory_used@@Base+0x1b48>  // b.lo, b.ul, b.last
  41d56c:	ldr	x1, [sp, #416]
  41d570:	ldr	x0, [sp, #256]
  41d574:	cmp	x1, x0
  41d578:	b.cs	41d598 <_obstack_memory_used@@Base+0x1b48>  // b.hs, b.nlast
  41d57c:	ldr	x0, [sp, #432]
  41d580:	sub	x0, x0, #0x1
  41d584:	str	x0, [sp, #432]
  41d588:	ldr	x1, [sp, #416]
  41d58c:	ldr	x0, [sp, #624]
  41d590:	add	x0, x1, x0
  41d594:	str	x0, [sp, #416]
  41d598:	ldr	x1, [sp, #416]
  41d59c:	ldr	x0, [sp, #256]
  41d5a0:	sub	x0, x1, x0
  41d5a4:	str	x0, [sp, #416]
  41d5a8:	ldr	x0, [sp, #440]
  41d5ac:	lsl	x0, x0, #32
  41d5b0:	ldr	x1, [sp, #432]
  41d5b4:	orr	x0, x1, x0
  41d5b8:	str	x0, [sp, #552]
  41d5bc:	ldr	x0, [sp, #416]
  41d5c0:	str	x0, [sp, #496]
  41d5c4:	ldr	x0, [sp, #552]
  41d5c8:	str	w0, [sp, #252]
  41d5cc:	ldr	x0, [sp, #552]
  41d5d0:	lsr	x0, x0, #32
  41d5d4:	str	w0, [sp, #248]
  41d5d8:	ldr	x0, [sp, #616]
  41d5dc:	str	w0, [sp, #244]
  41d5e0:	ldr	x0, [sp, #616]
  41d5e4:	lsr	x0, x0, #32
  41d5e8:	str	w0, [sp, #240]
  41d5ec:	ldr	w1, [sp, #252]
  41d5f0:	ldr	w0, [sp, #244]
  41d5f4:	mul	x0, x1, x0
  41d5f8:	str	x0, [sp, #232]
  41d5fc:	ldr	w1, [sp, #252]
  41d600:	ldr	w0, [sp, #240]
  41d604:	mul	x0, x1, x0
  41d608:	str	x0, [sp, #224]
  41d60c:	ldr	w1, [sp, #248]
  41d610:	ldr	w0, [sp, #244]
  41d614:	mul	x0, x1, x0
  41d618:	str	x0, [sp, #216]
  41d61c:	ldr	w1, [sp, #248]
  41d620:	ldr	w0, [sp, #240]
  41d624:	mul	x0, x1, x0
  41d628:	str	x0, [sp, #408]
  41d62c:	ldr	x0, [sp, #232]
  41d630:	lsr	x0, x0, #32
  41d634:	ldr	x1, [sp, #224]
  41d638:	add	x0, x1, x0
  41d63c:	str	x0, [sp, #224]
  41d640:	ldr	x1, [sp, #224]
  41d644:	ldr	x0, [sp, #216]
  41d648:	add	x0, x1, x0
  41d64c:	str	x0, [sp, #224]
  41d650:	ldr	x1, [sp, #224]
  41d654:	ldr	x0, [sp, #216]
  41d658:	cmp	x1, x0
  41d65c:	b.cs	41d670 <_obstack_memory_used@@Base+0x1c20>  // b.hs, b.nlast
  41d660:	ldr	x1, [sp, #408]
  41d664:	mov	x0, #0x100000000           	// #4294967296
  41d668:	add	x0, x1, x0
  41d66c:	str	x0, [sp, #408]
  41d670:	ldr	x0, [sp, #224]
  41d674:	lsr	x0, x0, #32
  41d678:	ldr	x1, [sp, #408]
  41d67c:	add	x0, x1, x0
  41d680:	str	x0, [sp, #312]
  41d684:	ldr	x0, [sp, #224]
  41d688:	and	x0, x0, #0xffffffff
  41d68c:	lsl	x1, x0, #32
  41d690:	ldr	x0, [sp, #232]
  41d694:	and	x0, x0, #0xffffffff
  41d698:	add	x0, x1, x0
  41d69c:	str	x0, [sp, #304]
  41d6a0:	str	xzr, [sp, #488]
  41d6a4:	ldr	x1, [sp, #312]
  41d6a8:	ldr	x0, [sp, #496]
  41d6ac:	cmp	x1, x0
  41d6b0:	b.hi	41d6d4 <_obstack_memory_used@@Base+0x1c84>  // b.pmore
  41d6b4:	ldr	x1, [sp, #312]
  41d6b8:	ldr	x0, [sp, #496]
  41d6bc:	cmp	x1, x0
  41d6c0:	b.ne	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.any
  41d6c4:	ldr	x1, [sp, #304]
  41d6c8:	ldr	x0, [sp, #488]
  41d6cc:	cmp	x1, x0
  41d6d0:	b.ls	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.plast
  41d6d4:	ldr	x0, [sp, #552]
  41d6d8:	sub	x0, x0, #0x1
  41d6dc:	str	x0, [sp, #552]
  41d6e0:	ldr	x1, [sp, #616]
  41d6e4:	ldr	x0, [sp, #488]
  41d6e8:	add	x0, x1, x0
  41d6ec:	str	x0, [sp, #208]
  41d6f0:	ldr	x1, [sp, #624]
  41d6f4:	ldr	x0, [sp, #496]
  41d6f8:	add	x1, x1, x0
  41d6fc:	ldr	x2, [sp, #208]
  41d700:	ldr	x0, [sp, #616]
  41d704:	cmp	x2, x0
  41d708:	cset	w0, cc  // cc = lo, ul, last
  41d70c:	and	w0, w0, #0xff
  41d710:	and	x0, x0, #0xff
  41d714:	add	x0, x1, x0
  41d718:	str	x0, [sp, #496]
  41d71c:	ldr	x0, [sp, #208]
  41d720:	str	x0, [sp, #488]
  41d724:	ldr	x1, [sp, #496]
  41d728:	ldr	x0, [sp, #624]
  41d72c:	cmp	x1, x0
  41d730:	b.hi	41d754 <_obstack_memory_used@@Base+0x1d04>  // b.pmore
  41d734:	ldr	x1, [sp, #496]
  41d738:	ldr	x0, [sp, #624]
  41d73c:	cmp	x1, x0
  41d740:	b.ne	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.any
  41d744:	ldr	x1, [sp, #488]
  41d748:	ldr	x0, [sp, #616]
  41d74c:	cmp	x1, x0
  41d750:	b.cc	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.lo, b.ul, b.last
  41d754:	ldr	x1, [sp, #312]
  41d758:	ldr	x0, [sp, #496]
  41d75c:	cmp	x1, x0
  41d760:	b.hi	41d784 <_obstack_memory_used@@Base+0x1d34>  // b.pmore
  41d764:	ldr	x1, [sp, #312]
  41d768:	ldr	x0, [sp, #496]
  41d76c:	cmp	x1, x0
  41d770:	b.ne	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.any
  41d774:	ldr	x1, [sp, #304]
  41d778:	ldr	x0, [sp, #488]
  41d77c:	cmp	x1, x0
  41d780:	b.ls	41d7d4 <_obstack_memory_used@@Base+0x1d84>  // b.plast
  41d784:	ldr	x0, [sp, #552]
  41d788:	sub	x0, x0, #0x1
  41d78c:	str	x0, [sp, #552]
  41d790:	ldr	x1, [sp, #616]
  41d794:	ldr	x0, [sp, #488]
  41d798:	add	x0, x1, x0
  41d79c:	str	x0, [sp, #200]
  41d7a0:	ldr	x1, [sp, #624]
  41d7a4:	ldr	x0, [sp, #496]
  41d7a8:	add	x1, x1, x0
  41d7ac:	ldr	x2, [sp, #200]
  41d7b0:	ldr	x0, [sp, #616]
  41d7b4:	cmp	x2, x0
  41d7b8:	cset	w0, cc  // cc = lo, ul, last
  41d7bc:	and	w0, w0, #0xff
  41d7c0:	and	x0, x0, #0xff
  41d7c4:	add	x0, x1, x0
  41d7c8:	str	x0, [sp, #496]
  41d7cc:	ldr	x0, [sp, #200]
  41d7d0:	str	x0, [sp, #488]
  41d7d4:	ldr	x1, [sp, #496]
  41d7d8:	ldr	x0, [sp, #312]
  41d7dc:	cmp	x1, x0
  41d7e0:	b.ne	41d7f4 <_obstack_memory_used@@Base+0x1da4>  // b.any
  41d7e4:	ldr	x1, [sp, #488]
  41d7e8:	ldr	x0, [sp, #304]
  41d7ec:	cmp	x1, x0
  41d7f0:	b.eq	41d8fc <_obstack_memory_used@@Base+0x1eac>  // b.none
  41d7f4:	ldr	x0, [sp, #552]
  41d7f8:	orr	x0, x0, #0x1
  41d7fc:	str	x0, [sp, #552]
  41d800:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d804:	ldr	x0, [sp, #592]
  41d808:	and	x0, x0, #0x800000000000
  41d80c:	cmp	x0, #0x0
  41d810:	b.eq	41d840 <_obstack_memory_used@@Base+0x1df0>  // b.none
  41d814:	ldr	x0, [sp, #624]
  41d818:	and	x0, x0, #0x800000000000
  41d81c:	cmp	x0, #0x0
  41d820:	b.ne	41d840 <_obstack_memory_used@@Base+0x1df0>  // b.any
  41d824:	ldr	x0, [sp, #384]
  41d828:	str	x0, [sp, #648]
  41d82c:	ldr	x0, [sp, #616]
  41d830:	str	x0, [sp, #552]
  41d834:	ldr	x0, [sp, #624]
  41d838:	str	x0, [sp, #544]
  41d83c:	b	41d858 <_obstack_memory_used@@Base+0x1e08>
  41d840:	ldr	x0, [sp, #392]
  41d844:	str	x0, [sp, #648]
  41d848:	ldr	x0, [sp, #584]
  41d84c:	str	x0, [sp, #552]
  41d850:	ldr	x0, [sp, #592]
  41d854:	str	x0, [sp, #544]
  41d858:	mov	x0, #0x3                   	// #3
  41d85c:	str	x0, [sp, #632]
  41d860:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d864:	ldr	x0, [sp, #392]
  41d868:	str	x0, [sp, #648]
  41d86c:	ldr	x0, [sp, #584]
  41d870:	str	x0, [sp, #552]
  41d874:	ldr	x0, [sp, #592]
  41d878:	str	x0, [sp, #544]
  41d87c:	ldr	x0, [sp, #576]
  41d880:	str	x0, [sp, #632]
  41d884:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d888:	ldr	x0, [sp, #384]
  41d88c:	str	x0, [sp, #648]
  41d890:	ldr	x0, [sp, #616]
  41d894:	str	x0, [sp, #552]
  41d898:	ldr	x0, [sp, #624]
  41d89c:	str	x0, [sp, #544]
  41d8a0:	ldr	x0, [sp, #608]
  41d8a4:	str	x0, [sp, #632]
  41d8a8:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d8ac:	mov	x0, #0x1                   	// #1
  41d8b0:	str	x0, [sp, #632]
  41d8b4:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d8b8:	ldr	w0, [sp, #564]
  41d8bc:	orr	w0, w0, #0x2
  41d8c0:	str	w0, [sp, #564]
  41d8c4:	mov	x0, #0x2                   	// #2
  41d8c8:	str	x0, [sp, #632]
  41d8cc:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d8d0:	str	xzr, [sp, #648]
  41d8d4:	mov	x0, #0x3                   	// #3
  41d8d8:	str	x0, [sp, #632]
  41d8dc:	mov	x0, #0xffffffffffffffff    	// #-1
  41d8e0:	str	x0, [sp, #552]
  41d8e4:	mov	x0, #0xffffffffffff        	// #281474976710655
  41d8e8:	str	x0, [sp, #544]
  41d8ec:	ldr	w0, [sp, #564]
  41d8f0:	orr	w0, w0, #0x1
  41d8f4:	str	w0, [sp, #564]
  41d8f8:	b	41d8fc <_obstack_memory_used@@Base+0x1eac>
  41d8fc:	nop
  41d900:	ldr	x0, [sp, #632]
  41d904:	cmp	x0, #0x3
  41d908:	b.eq	41e09c <_obstack_memory_used@@Base+0x264c>  // b.none
  41d90c:	ldr	x0, [sp, #632]
  41d910:	cmp	x0, #0x3
  41d914:	b.gt	41e0b4 <_obstack_memory_used@@Base+0x2664>
  41d918:	ldr	x0, [sp, #632]
  41d91c:	cmp	x0, #0x2
  41d920:	b.eq	41e088 <_obstack_memory_used@@Base+0x2638>  // b.none
  41d924:	ldr	x0, [sp, #632]
  41d928:	cmp	x0, #0x2
  41d92c:	b.gt	41e0b4 <_obstack_memory_used@@Base+0x2664>
  41d930:	ldr	x0, [sp, #632]
  41d934:	cmp	x0, #0x0
  41d938:	b.eq	41d94c <_obstack_memory_used@@Base+0x1efc>  // b.none
  41d93c:	ldr	x0, [sp, #632]
  41d940:	cmp	x0, #0x1
  41d944:	b.eq	41e078 <_obstack_memory_used@@Base+0x2628>  // b.none
  41d948:	b	41e0b4 <_obstack_memory_used@@Base+0x2664>
  41d94c:	ldr	x1, [sp, #640]
  41d950:	mov	x0, #0x3fff                	// #16383
  41d954:	add	x0, x1, x0
  41d958:	str	x0, [sp, #640]
  41d95c:	ldr	x0, [sp, #640]
  41d960:	cmp	x0, #0x0
  41d964:	b.le	41dbe0 <_obstack_memory_used@@Base+0x2190>
  41d968:	ldr	x0, [sp, #552]
  41d96c:	and	x0, x0, #0x7
  41d970:	cmp	x0, #0x0
  41d974:	b.eq	41dabc <_obstack_memory_used@@Base+0x206c>  // b.none
  41d978:	ldr	w0, [sp, #564]
  41d97c:	orr	w0, w0, #0x10
  41d980:	str	w0, [sp, #564]
  41d984:	ldr	x0, [sp, #400]
  41d988:	and	x0, x0, #0xc00000
  41d98c:	cmp	x0, #0xc00, lsl #12
  41d990:	b.eq	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.none
  41d994:	cmp	x0, #0xc00, lsl #12
  41d998:	b.hi	41dac8 <_obstack_memory_used@@Base+0x2078>  // b.pmore
  41d99c:	cmp	x0, #0x800, lsl #12
  41d9a0:	b.eq	41da64 <_obstack_memory_used@@Base+0x2014>  // b.none
  41d9a4:	cmp	x0, #0x800, lsl #12
  41d9a8:	b.hi	41dac8 <_obstack_memory_used@@Base+0x2078>  // b.pmore
  41d9ac:	cmp	x0, #0x0
  41d9b0:	b.eq	41d9c0 <_obstack_memory_used@@Base+0x1f70>  // b.none
  41d9b4:	cmp	x0, #0x400, lsl #12
  41d9b8:	b.eq	41da0c <_obstack_memory_used@@Base+0x1fbc>  // b.none
  41d9bc:	b	41dac8 <_obstack_memory_used@@Base+0x2078>
  41d9c0:	ldr	x0, [sp, #552]
  41d9c4:	and	x0, x0, #0xf
  41d9c8:	cmp	x0, #0x4
  41d9cc:	b.eq	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.none
  41d9d0:	ldr	x0, [sp, #552]
  41d9d4:	add	x0, x0, #0x4
  41d9d8:	str	x0, [sp, #120]
  41d9dc:	ldr	x1, [sp, #120]
  41d9e0:	ldr	x0, [sp, #552]
  41d9e4:	cmp	x1, x0
  41d9e8:	cset	w0, cc  // cc = lo, ul, last
  41d9ec:	and	w0, w0, #0xff
  41d9f0:	and	x0, x0, #0xff
  41d9f4:	ldr	x1, [sp, #544]
  41d9f8:	add	x0, x1, x0
  41d9fc:	str	x0, [sp, #544]
  41da00:	ldr	x0, [sp, #120]
  41da04:	str	x0, [sp, #552]
  41da08:	b	41dac4 <_obstack_memory_used@@Base+0x2074>
  41da0c:	ldr	x0, [sp, #648]
  41da10:	cmp	x0, #0x0
  41da14:	b.ne	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.any
  41da18:	ldr	x0, [sp, #552]
  41da1c:	and	x0, x0, #0x7
  41da20:	cmp	x0, #0x0
  41da24:	b.eq	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.none
  41da28:	ldr	x0, [sp, #552]
  41da2c:	add	x0, x0, #0x8
  41da30:	str	x0, [sp, #128]
  41da34:	ldr	x1, [sp, #128]
  41da38:	ldr	x0, [sp, #552]
  41da3c:	cmp	x1, x0
  41da40:	cset	w0, cc  // cc = lo, ul, last
  41da44:	and	w0, w0, #0xff
  41da48:	and	x0, x0, #0xff
  41da4c:	ldr	x1, [sp, #544]
  41da50:	add	x0, x1, x0
  41da54:	str	x0, [sp, #544]
  41da58:	ldr	x0, [sp, #128]
  41da5c:	str	x0, [sp, #552]
  41da60:	b	41dac4 <_obstack_memory_used@@Base+0x2074>
  41da64:	ldr	x0, [sp, #648]
  41da68:	cmp	x0, #0x0
  41da6c:	b.eq	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.none
  41da70:	ldr	x0, [sp, #552]
  41da74:	and	x0, x0, #0x7
  41da78:	cmp	x0, #0x0
  41da7c:	b.eq	41dac4 <_obstack_memory_used@@Base+0x2074>  // b.none
  41da80:	ldr	x0, [sp, #552]
  41da84:	add	x0, x0, #0x8
  41da88:	str	x0, [sp, #136]
  41da8c:	ldr	x1, [sp, #136]
  41da90:	ldr	x0, [sp, #552]
  41da94:	cmp	x1, x0
  41da98:	cset	w0, cc  // cc = lo, ul, last
  41da9c:	and	w0, w0, #0xff
  41daa0:	and	x0, x0, #0xff
  41daa4:	ldr	x1, [sp, #544]
  41daa8:	add	x0, x1, x0
  41daac:	str	x0, [sp, #544]
  41dab0:	ldr	x0, [sp, #136]
  41dab4:	str	x0, [sp, #552]
  41dab8:	b	41dac4 <_obstack_memory_used@@Base+0x2074>
  41dabc:	nop
  41dac0:	b	41dac8 <_obstack_memory_used@@Base+0x2078>
  41dac4:	nop
  41dac8:	ldr	x0, [sp, #544]
  41dacc:	and	x0, x0, #0x10000000000000
  41dad0:	cmp	x0, #0x0
  41dad4:	b.eq	41daf0 <_obstack_memory_used@@Base+0x20a0>  // b.none
  41dad8:	ldr	x0, [sp, #544]
  41dadc:	and	x0, x0, #0xffefffffffffffff
  41dae0:	str	x0, [sp, #544]
  41dae4:	ldr	x0, [sp, #640]
  41dae8:	add	x0, x0, #0x1
  41daec:	str	x0, [sp, #640]
  41daf0:	ldr	x0, [sp, #552]
  41daf4:	lsr	x1, x0, #3
  41daf8:	ldr	x0, [sp, #544]
  41dafc:	lsl	x0, x0, #61
  41db00:	orr	x0, x1, x0
  41db04:	str	x0, [sp, #552]
  41db08:	ldr	x0, [sp, #544]
  41db0c:	lsr	x0, x0, #3
  41db10:	str	x0, [sp, #544]
  41db14:	ldr	x1, [sp, #640]
  41db18:	mov	x0, #0x7ffe                	// #32766
  41db1c:	cmp	x1, x0
  41db20:	b.le	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41db24:	ldr	x0, [sp, #400]
  41db28:	and	x0, x0, #0xc00000
  41db2c:	cmp	x0, #0x800, lsl #12
  41db30:	b.eq	41db74 <_obstack_memory_used@@Base+0x2124>  // b.none
  41db34:	cmp	x0, #0x800, lsl #12
  41db38:	b.hi	41db8c <_obstack_memory_used@@Base+0x213c>  // b.pmore
  41db3c:	cmp	x0, #0x0
  41db40:	b.eq	41db50 <_obstack_memory_used@@Base+0x2100>  // b.none
  41db44:	cmp	x0, #0x400, lsl #12
  41db48:	b.eq	41db5c <_obstack_memory_used@@Base+0x210c>  // b.none
  41db4c:	b	41db8c <_obstack_memory_used@@Base+0x213c>
  41db50:	mov	x0, #0x2                   	// #2
  41db54:	str	x0, [sp, #632]
  41db58:	b	41db88 <_obstack_memory_used@@Base+0x2138>
  41db5c:	ldr	x0, [sp, #648]
  41db60:	cmp	x0, #0x0
  41db64:	b.ne	41db88 <_obstack_memory_used@@Base+0x2138>  // b.any
  41db68:	mov	x0, #0x2                   	// #2
  41db6c:	str	x0, [sp, #632]
  41db70:	b	41db88 <_obstack_memory_used@@Base+0x2138>
  41db74:	ldr	x0, [sp, #648]
  41db78:	cmp	x0, #0x0
  41db7c:	b.eq	41db88 <_obstack_memory_used@@Base+0x2138>  // b.none
  41db80:	mov	x0, #0x2                   	// #2
  41db84:	str	x0, [sp, #632]
  41db88:	nop
  41db8c:	ldr	x0, [sp, #632]
  41db90:	cmp	x0, #0x2
  41db94:	b.ne	41dbac <_obstack_memory_used@@Base+0x215c>  // b.any
  41db98:	mov	x0, #0x7fff                	// #32767
  41db9c:	str	x0, [sp, #640]
  41dba0:	str	xzr, [sp, #552]
  41dba4:	str	xzr, [sp, #544]
  41dba8:	b	41dbc4 <_obstack_memory_used@@Base+0x2174>
  41dbac:	mov	x0, #0x7ffe                	// #32766
  41dbb0:	str	x0, [sp, #640]
  41dbb4:	mov	x0, #0xffffffffffffffff    	// #-1
  41dbb8:	str	x0, [sp, #552]
  41dbbc:	mov	x0, #0xffffffffffffffff    	// #-1
  41dbc0:	str	x0, [sp, #544]
  41dbc4:	ldr	w0, [sp, #564]
  41dbc8:	orr	w0, w0, #0x4
  41dbcc:	str	w0, [sp, #564]
  41dbd0:	ldr	w0, [sp, #564]
  41dbd4:	orr	w0, w0, #0x10
  41dbd8:	str	w0, [sp, #564]
  41dbdc:	b	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41dbe0:	mov	w0, #0x1                   	// #1
  41dbe4:	str	w0, [sp, #196]
  41dbe8:	mov	x1, #0x1                   	// #1
  41dbec:	ldr	x0, [sp, #640]
  41dbf0:	sub	x0, x1, x0
  41dbf4:	str	x0, [sp, #640]
  41dbf8:	ldr	x0, [sp, #640]
  41dbfc:	cmp	x0, #0x74
  41dc00:	b.gt	41ded8 <_obstack_memory_used@@Base+0x2488>
  41dc04:	ldr	x0, [sp, #640]
  41dc08:	cmp	x0, #0x3f
  41dc0c:	b.gt	41dc84 <_obstack_memory_used@@Base+0x2234>
  41dc10:	ldr	x0, [sp, #640]
  41dc14:	mov	w1, w0
  41dc18:	mov	w0, #0x40                  	// #64
  41dc1c:	sub	w0, w0, w1
  41dc20:	ldr	x1, [sp, #544]
  41dc24:	lsl	x1, x1, x0
  41dc28:	ldr	x0, [sp, #640]
  41dc2c:	mov	w2, w0
  41dc30:	ldr	x0, [sp, #552]
  41dc34:	lsr	x0, x0, x2
  41dc38:	orr	x1, x1, x0
  41dc3c:	ldr	x0, [sp, #640]
  41dc40:	mov	w2, w0
  41dc44:	mov	w0, #0x40                  	// #64
  41dc48:	sub	w0, w0, w2
  41dc4c:	ldr	x2, [sp, #552]
  41dc50:	lsl	x0, x2, x0
  41dc54:	cmp	x0, #0x0
  41dc58:	cset	w0, ne  // ne = any
  41dc5c:	and	w0, w0, #0xff
  41dc60:	sxtw	x0, w0
  41dc64:	orr	x0, x1, x0
  41dc68:	str	x0, [sp, #552]
  41dc6c:	ldr	x0, [sp, #640]
  41dc70:	mov	w1, w0
  41dc74:	ldr	x0, [sp, #544]
  41dc78:	lsr	x0, x0, x1
  41dc7c:	str	x0, [sp, #544]
  41dc80:	b	41dce4 <_obstack_memory_used@@Base+0x2294>
  41dc84:	ldr	x0, [sp, #640]
  41dc88:	sub	w0, w0, #0x40
  41dc8c:	ldr	x1, [sp, #544]
  41dc90:	lsr	x1, x1, x0
  41dc94:	ldr	x0, [sp, #640]
  41dc98:	cmp	x0, #0x40
  41dc9c:	b.eq	41dcbc <_obstack_memory_used@@Base+0x226c>  // b.none
  41dca0:	ldr	x0, [sp, #640]
  41dca4:	mov	w2, w0
  41dca8:	mov	w0, #0x80                  	// #128
  41dcac:	sub	w0, w0, w2
  41dcb0:	ldr	x2, [sp, #544]
  41dcb4:	lsl	x0, x2, x0
  41dcb8:	b	41dcc0 <_obstack_memory_used@@Base+0x2270>
  41dcbc:	mov	x0, #0x0                   	// #0
  41dcc0:	ldr	x2, [sp, #552]
  41dcc4:	orr	x0, x0, x2
  41dcc8:	cmp	x0, #0x0
  41dccc:	cset	w0, ne  // ne = any
  41dcd0:	and	w0, w0, #0xff
  41dcd4:	and	x0, x0, #0xff
  41dcd8:	orr	x0, x1, x0
  41dcdc:	str	x0, [sp, #552]
  41dce0:	str	xzr, [sp, #544]
  41dce4:	ldr	x0, [sp, #552]
  41dce8:	and	x0, x0, #0x7
  41dcec:	cmp	x0, #0x0
  41dcf0:	b.eq	41de38 <_obstack_memory_used@@Base+0x23e8>  // b.none
  41dcf4:	ldr	w0, [sp, #564]
  41dcf8:	orr	w0, w0, #0x10
  41dcfc:	str	w0, [sp, #564]
  41dd00:	ldr	x0, [sp, #400]
  41dd04:	and	x0, x0, #0xc00000
  41dd08:	cmp	x0, #0xc00, lsl #12
  41dd0c:	b.eq	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.none
  41dd10:	cmp	x0, #0xc00, lsl #12
  41dd14:	b.hi	41de44 <_obstack_memory_used@@Base+0x23f4>  // b.pmore
  41dd18:	cmp	x0, #0x800, lsl #12
  41dd1c:	b.eq	41dde0 <_obstack_memory_used@@Base+0x2390>  // b.none
  41dd20:	cmp	x0, #0x800, lsl #12
  41dd24:	b.hi	41de44 <_obstack_memory_used@@Base+0x23f4>  // b.pmore
  41dd28:	cmp	x0, #0x0
  41dd2c:	b.eq	41dd3c <_obstack_memory_used@@Base+0x22ec>  // b.none
  41dd30:	cmp	x0, #0x400, lsl #12
  41dd34:	b.eq	41dd88 <_obstack_memory_used@@Base+0x2338>  // b.none
  41dd38:	b	41de44 <_obstack_memory_used@@Base+0x23f4>
  41dd3c:	ldr	x0, [sp, #552]
  41dd40:	and	x0, x0, #0xf
  41dd44:	cmp	x0, #0x4
  41dd48:	b.eq	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.none
  41dd4c:	ldr	x0, [sp, #552]
  41dd50:	add	x0, x0, #0x4
  41dd54:	str	x0, [sp, #144]
  41dd58:	ldr	x1, [sp, #144]
  41dd5c:	ldr	x0, [sp, #552]
  41dd60:	cmp	x1, x0
  41dd64:	cset	w0, cc  // cc = lo, ul, last
  41dd68:	and	w0, w0, #0xff
  41dd6c:	and	x0, x0, #0xff
  41dd70:	ldr	x1, [sp, #544]
  41dd74:	add	x0, x1, x0
  41dd78:	str	x0, [sp, #544]
  41dd7c:	ldr	x0, [sp, #144]
  41dd80:	str	x0, [sp, #552]
  41dd84:	b	41de40 <_obstack_memory_used@@Base+0x23f0>
  41dd88:	ldr	x0, [sp, #648]
  41dd8c:	cmp	x0, #0x0
  41dd90:	b.ne	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.any
  41dd94:	ldr	x0, [sp, #552]
  41dd98:	and	x0, x0, #0x7
  41dd9c:	cmp	x0, #0x0
  41dda0:	b.eq	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.none
  41dda4:	ldr	x0, [sp, #552]
  41dda8:	add	x0, x0, #0x8
  41ddac:	str	x0, [sp, #152]
  41ddb0:	ldr	x1, [sp, #152]
  41ddb4:	ldr	x0, [sp, #552]
  41ddb8:	cmp	x1, x0
  41ddbc:	cset	w0, cc  // cc = lo, ul, last
  41ddc0:	and	w0, w0, #0xff
  41ddc4:	and	x0, x0, #0xff
  41ddc8:	ldr	x1, [sp, #544]
  41ddcc:	add	x0, x1, x0
  41ddd0:	str	x0, [sp, #544]
  41ddd4:	ldr	x0, [sp, #152]
  41ddd8:	str	x0, [sp, #552]
  41dddc:	b	41de40 <_obstack_memory_used@@Base+0x23f0>
  41dde0:	ldr	x0, [sp, #648]
  41dde4:	cmp	x0, #0x0
  41dde8:	b.eq	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.none
  41ddec:	ldr	x0, [sp, #552]
  41ddf0:	and	x0, x0, #0x7
  41ddf4:	cmp	x0, #0x0
  41ddf8:	b.eq	41de40 <_obstack_memory_used@@Base+0x23f0>  // b.none
  41ddfc:	ldr	x0, [sp, #552]
  41de00:	add	x0, x0, #0x8
  41de04:	str	x0, [sp, #160]
  41de08:	ldr	x1, [sp, #160]
  41de0c:	ldr	x0, [sp, #552]
  41de10:	cmp	x1, x0
  41de14:	cset	w0, cc  // cc = lo, ul, last
  41de18:	and	w0, w0, #0xff
  41de1c:	and	x0, x0, #0xff
  41de20:	ldr	x1, [sp, #544]
  41de24:	add	x0, x1, x0
  41de28:	str	x0, [sp, #544]
  41de2c:	ldr	x0, [sp, #160]
  41de30:	str	x0, [sp, #552]
  41de34:	b	41de40 <_obstack_memory_used@@Base+0x23f0>
  41de38:	nop
  41de3c:	b	41de44 <_obstack_memory_used@@Base+0x23f4>
  41de40:	nop
  41de44:	ldr	x0, [sp, #544]
  41de48:	and	x0, x0, #0x8000000000000
  41de4c:	cmp	x0, #0x0
  41de50:	b.eq	41de74 <_obstack_memory_used@@Base+0x2424>  // b.none
  41de54:	mov	x0, #0x1                   	// #1
  41de58:	str	x0, [sp, #640]
  41de5c:	str	xzr, [sp, #552]
  41de60:	str	xzr, [sp, #544]
  41de64:	ldr	w0, [sp, #564]
  41de68:	orr	w0, w0, #0x10
  41de6c:	str	w0, [sp, #564]
  41de70:	b	41de9c <_obstack_memory_used@@Base+0x244c>
  41de74:	str	xzr, [sp, #640]
  41de78:	ldr	x0, [sp, #552]
  41de7c:	lsr	x1, x0, #3
  41de80:	ldr	x0, [sp, #544]
  41de84:	lsl	x0, x0, #61
  41de88:	orr	x0, x1, x0
  41de8c:	str	x0, [sp, #552]
  41de90:	ldr	x0, [sp, #544]
  41de94:	lsr	x0, x0, #3
  41de98:	str	x0, [sp, #544]
  41de9c:	ldr	w0, [sp, #196]
  41dea0:	cmp	w0, #0x0
  41dea4:	b.eq	41e0b0 <_obstack_memory_used@@Base+0x2660>  // b.none
  41dea8:	ldr	w0, [sp, #564]
  41deac:	and	w0, w0, #0x10
  41deb0:	cmp	w0, #0x0
  41deb4:	b.ne	41dec8 <_obstack_memory_used@@Base+0x2478>  // b.any
  41deb8:	ldr	x0, [sp, #400]
  41debc:	and	x0, x0, #0x800
  41dec0:	cmp	x0, #0x0
  41dec4:	b.eq	41e0b0 <_obstack_memory_used@@Base+0x2660>  // b.none
  41dec8:	ldr	w0, [sp, #564]
  41decc:	orr	w0, w0, #0x8
  41ded0:	str	w0, [sp, #564]
  41ded4:	b	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41ded8:	str	xzr, [sp, #640]
  41dedc:	ldr	x1, [sp, #544]
  41dee0:	ldr	x0, [sp, #552]
  41dee4:	orr	x0, x1, x0
  41dee8:	cmp	x0, #0x0
  41deec:	b.eq	41e068 <_obstack_memory_used@@Base+0x2618>  // b.none
  41def0:	mov	x0, #0x1                   	// #1
  41def4:	str	x0, [sp, #552]
  41def8:	str	xzr, [sp, #544]
  41defc:	ldr	x0, [sp, #552]
  41df00:	and	x0, x0, #0x7
  41df04:	cmp	x0, #0x0
  41df08:	b.eq	41e050 <_obstack_memory_used@@Base+0x2600>  // b.none
  41df0c:	ldr	w0, [sp, #564]
  41df10:	orr	w0, w0, #0x10
  41df14:	str	w0, [sp, #564]
  41df18:	ldr	x0, [sp, #400]
  41df1c:	and	x0, x0, #0xc00000
  41df20:	cmp	x0, #0xc00, lsl #12
  41df24:	b.eq	41e058 <_obstack_memory_used@@Base+0x2608>  // b.none
  41df28:	cmp	x0, #0xc00, lsl #12
  41df2c:	b.hi	41e05c <_obstack_memory_used@@Base+0x260c>  // b.pmore
  41df30:	cmp	x0, #0x800, lsl #12
  41df34:	b.eq	41dff8 <_obstack_memory_used@@Base+0x25a8>  // b.none
  41df38:	cmp	x0, #0x800, lsl #12
  41df3c:	b.hi	41e05c <_obstack_memory_used@@Base+0x260c>  // b.pmore
  41df40:	cmp	x0, #0x0
  41df44:	b.eq	41df54 <_obstack_memory_used@@Base+0x2504>  // b.none
  41df48:	cmp	x0, #0x400, lsl #12
  41df4c:	b.eq	41dfa0 <_obstack_memory_used@@Base+0x2550>  // b.none
  41df50:	b	41e05c <_obstack_memory_used@@Base+0x260c>
  41df54:	ldr	x0, [sp, #552]
  41df58:	and	x0, x0, #0xf
  41df5c:	cmp	x0, #0x4
  41df60:	b.eq	41e058 <_obstack_memory_used@@Base+0x2608>  // b.none
  41df64:	ldr	x0, [sp, #552]
  41df68:	add	x0, x0, #0x4
  41df6c:	str	x0, [sp, #168]
  41df70:	ldr	x1, [sp, #168]
  41df74:	ldr	x0, [sp, #552]
  41df78:	cmp	x1, x0
  41df7c:	cset	w0, cc  // cc = lo, ul, last
  41df80:	and	w0, w0, #0xff
  41df84:	and	x0, x0, #0xff
  41df88:	ldr	x1, [sp, #544]
  41df8c:	add	x0, x1, x0
  41df90:	str	x0, [sp, #544]
  41df94:	ldr	x0, [sp, #168]
  41df98:	str	x0, [sp, #552]
  41df9c:	b	41e058 <_obstack_memory_used@@Base+0x2608>
  41dfa0:	ldr	x0, [sp, #648]
  41dfa4:	cmp	x0, #0x0
  41dfa8:	b.ne	41e058 <_obstack_memory_used@@Base+0x2608>  // b.any
  41dfac:	ldr	x0, [sp, #552]
  41dfb0:	and	x0, x0, #0x7
  41dfb4:	cmp	x0, #0x0
  41dfb8:	b.eq	41e058 <_obstack_memory_used@@Base+0x2608>  // b.none
  41dfbc:	ldr	x0, [sp, #552]
  41dfc0:	add	x0, x0, #0x8
  41dfc4:	str	x0, [sp, #176]
  41dfc8:	ldr	x1, [sp, #176]
  41dfcc:	ldr	x0, [sp, #552]
  41dfd0:	cmp	x1, x0
  41dfd4:	cset	w0, cc  // cc = lo, ul, last
  41dfd8:	and	w0, w0, #0xff
  41dfdc:	and	x0, x0, #0xff
  41dfe0:	ldr	x1, [sp, #544]
  41dfe4:	add	x0, x1, x0
  41dfe8:	str	x0, [sp, #544]
  41dfec:	ldr	x0, [sp, #176]
  41dff0:	str	x0, [sp, #552]
  41dff4:	b	41e058 <_obstack_memory_used@@Base+0x2608>
  41dff8:	ldr	x0, [sp, #648]
  41dffc:	cmp	x0, #0x0
  41e000:	b.eq	41e058 <_obstack_memory_used@@Base+0x2608>  // b.none
  41e004:	ldr	x0, [sp, #552]
  41e008:	and	x0, x0, #0x7
  41e00c:	cmp	x0, #0x0
  41e010:	b.eq	41e058 <_obstack_memory_used@@Base+0x2608>  // b.none
  41e014:	ldr	x0, [sp, #552]
  41e018:	add	x0, x0, #0x8
  41e01c:	str	x0, [sp, #184]
  41e020:	ldr	x1, [sp, #184]
  41e024:	ldr	x0, [sp, #552]
  41e028:	cmp	x1, x0
  41e02c:	cset	w0, cc  // cc = lo, ul, last
  41e030:	and	w0, w0, #0xff
  41e034:	and	x0, x0, #0xff
  41e038:	ldr	x1, [sp, #544]
  41e03c:	add	x0, x1, x0
  41e040:	str	x0, [sp, #544]
  41e044:	ldr	x0, [sp, #184]
  41e048:	str	x0, [sp, #552]
  41e04c:	b	41e058 <_obstack_memory_used@@Base+0x2608>
  41e050:	nop
  41e054:	b	41e05c <_obstack_memory_used@@Base+0x260c>
  41e058:	nop
  41e05c:	ldr	x0, [sp, #552]
  41e060:	lsr	x0, x0, #3
  41e064:	str	x0, [sp, #552]
  41e068:	ldr	w0, [sp, #564]
  41e06c:	orr	w0, w0, #0x8
  41e070:	str	w0, [sp, #564]
  41e074:	b	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41e078:	str	xzr, [sp, #640]
  41e07c:	str	xzr, [sp, #552]
  41e080:	str	xzr, [sp, #544]
  41e084:	b	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41e088:	mov	x0, #0x7fff                	// #32767
  41e08c:	str	x0, [sp, #640]
  41e090:	str	xzr, [sp, #552]
  41e094:	str	xzr, [sp, #544]
  41e098:	b	41e0b0 <_obstack_memory_used@@Base+0x2660>
  41e09c:	mov	x0, #0x7fff                	// #32767
  41e0a0:	str	x0, [sp, #640]
  41e0a4:	ldr	x0, [sp, #544]
  41e0a8:	orr	x0, x0, #0x800000000000
  41e0ac:	str	x0, [sp, #544]
  41e0b0:	nop
  41e0b4:	ldr	x0, [sp, #552]
  41e0b8:	str	x0, [sp, #48]
  41e0bc:	ldr	x0, [sp, #544]
  41e0c0:	and	x1, x0, #0xffffffffffff
  41e0c4:	ldr	x0, [sp, #56]
  41e0c8:	bfxil	x0, x1, #0, #48
  41e0cc:	str	x0, [sp, #56]
  41e0d0:	ldr	x0, [sp, #640]
  41e0d4:	and	w0, w0, #0x7fff
  41e0d8:	and	w1, w0, #0xffff
  41e0dc:	ldrh	w0, [sp, #62]
  41e0e0:	bfxil	w0, w1, #0, #15
  41e0e4:	strh	w0, [sp, #62]
  41e0e8:	ldr	x0, [sp, #648]
  41e0ec:	and	w0, w0, #0x1
  41e0f0:	and	w1, w0, #0xff
  41e0f4:	ldrb	w0, [sp, #63]
  41e0f8:	bfi	w0, w1, #7, #1
  41e0fc:	strb	w0, [sp, #63]
  41e100:	ldr	q0, [sp, #48]
  41e104:	str	q0, [sp, #96]
  41e108:	ldrsw	x0, [sp, #564]
  41e10c:	cmp	x0, #0x0
  41e110:	b.eq	41e11c <_obstack_memory_used@@Base+0x26cc>  // b.none
  41e114:	ldr	w0, [sp, #564]
  41e118:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  41e11c:	ldr	q0, [sp, #96]
  41e120:	ldp	x29, x30, [sp]
  41e124:	add	sp, sp, #0x290
  41e128:	ret
  41e12c:	stp	x29, x30, [sp, #-176]!
  41e130:	mov	x29, sp
  41e134:	str	q0, [sp, #32]
  41e138:	str	q1, [sp, #16]
  41e13c:	str	wzr, [sp, #160]
  41e140:	str	xzr, [sp, #152]
  41e144:	mrs	x0, fpcr
  41e148:	str	x0, [sp, #152]
  41e14c:	ldr	q0, [sp, #32]
  41e150:	str	q0, [sp, #64]
  41e154:	ldr	x0, [sp, #64]
  41e158:	str	x0, [sp, #144]
  41e15c:	ldr	x0, [sp, #72]
  41e160:	ubfx	x0, x0, #0, #48
  41e164:	str	x0, [sp, #136]
  41e168:	ldrh	w0, [sp, #78]
  41e16c:	ubfx	x0, x0, #0, #15
  41e170:	and	w0, w0, #0xffff
  41e174:	and	x0, x0, #0xffff
  41e178:	str	x0, [sp, #128]
  41e17c:	ldrb	w0, [sp, #79]
  41e180:	ubfx	x0, x0, #7, #1
  41e184:	and	w0, w0, #0xff
  41e188:	and	x0, x0, #0xff
  41e18c:	str	x0, [sp, #120]
  41e190:	ldr	q0, [sp, #16]
  41e194:	str	q0, [sp, #48]
  41e198:	ldr	x0, [sp, #48]
  41e19c:	str	x0, [sp, #112]
  41e1a0:	ldr	x0, [sp, #56]
  41e1a4:	ubfx	x0, x0, #0, #48
  41e1a8:	str	x0, [sp, #104]
  41e1ac:	ldrh	w0, [sp, #62]
  41e1b0:	ubfx	x0, x0, #0, #15
  41e1b4:	and	w0, w0, #0xffff
  41e1b8:	and	x0, x0, #0xffff
  41e1bc:	str	x0, [sp, #96]
  41e1c0:	ldrb	w0, [sp, #63]
  41e1c4:	ubfx	x0, x0, #7, #1
  41e1c8:	and	w0, w0, #0xff
  41e1cc:	and	x0, x0, #0xff
  41e1d0:	str	x0, [sp, #88]
  41e1d4:	ldr	x1, [sp, #128]
  41e1d8:	mov	x0, #0x7fff                	// #32767
  41e1dc:	cmp	x1, x0
  41e1e0:	b.ne	41e1f8 <_obstack_memory_used@@Base+0x27a8>  // b.any
  41e1e4:	ldr	x1, [sp, #136]
  41e1e8:	ldr	x0, [sp, #144]
  41e1ec:	orr	x0, x1, x0
  41e1f0:	cmp	x0, #0x0
  41e1f4:	b.ne	41e21c <_obstack_memory_used@@Base+0x27cc>  // b.any
  41e1f8:	ldr	x1, [sp, #96]
  41e1fc:	mov	x0, #0x7fff                	// #32767
  41e200:	cmp	x1, x0
  41e204:	b.ne	41e2cc <_obstack_memory_used@@Base+0x287c>  // b.any
  41e208:	ldr	x1, [sp, #104]
  41e20c:	ldr	x0, [sp, #112]
  41e210:	orr	x0, x1, x0
  41e214:	cmp	x0, #0x0
  41e218:	b.eq	41e2cc <_obstack_memory_used@@Base+0x287c>  // b.none
  41e21c:	mov	w0, #0x1                   	// #1
  41e220:	str	w0, [sp, #164]
  41e224:	str	wzr, [sp, #168]
  41e228:	ldr	x1, [sp, #128]
  41e22c:	mov	x0, #0x7fff                	// #32767
  41e230:	cmp	x1, x0
  41e234:	b.ne	41e264 <_obstack_memory_used@@Base+0x2814>  // b.any
  41e238:	ldr	x1, [sp, #136]
  41e23c:	ldr	x0, [sp, #144]
  41e240:	orr	x0, x1, x0
  41e244:	cmp	x0, #0x0
  41e248:	b.eq	41e264 <_obstack_memory_used@@Base+0x2814>  // b.none
  41e24c:	ldr	x0, [sp, #136]
  41e250:	and	x0, x0, #0x800000000000
  41e254:	cmp	x0, #0x0
  41e258:	b.ne	41e264 <_obstack_memory_used@@Base+0x2814>  // b.any
  41e25c:	mov	w0, #0x1                   	// #1
  41e260:	str	w0, [sp, #168]
  41e264:	ldr	w0, [sp, #168]
  41e268:	cmp	w0, #0x0
  41e26c:	b.ne	41e2bc <_obstack_memory_used@@Base+0x286c>  // b.any
  41e270:	str	wzr, [sp, #172]
  41e274:	ldr	x1, [sp, #96]
  41e278:	mov	x0, #0x7fff                	// #32767
  41e27c:	cmp	x1, x0
  41e280:	b.ne	41e2b0 <_obstack_memory_used@@Base+0x2860>  // b.any
  41e284:	ldr	x1, [sp, #104]
  41e288:	ldr	x0, [sp, #112]
  41e28c:	orr	x0, x1, x0
  41e290:	cmp	x0, #0x0
  41e294:	b.eq	41e2b0 <_obstack_memory_used@@Base+0x2860>  // b.none
  41e298:	ldr	x0, [sp, #104]
  41e29c:	and	x0, x0, #0x800000000000
  41e2a0:	cmp	x0, #0x0
  41e2a4:	b.ne	41e2b0 <_obstack_memory_used@@Base+0x2860>  // b.any
  41e2a8:	mov	w0, #0x1                   	// #1
  41e2ac:	str	w0, [sp, #172]
  41e2b0:	ldr	w0, [sp, #172]
  41e2b4:	cmp	w0, #0x0
  41e2b8:	b.eq	41e340 <_obstack_memory_used@@Base+0x28f0>  // b.none
  41e2bc:	ldr	w0, [sp, #160]
  41e2c0:	orr	w0, w0, #0x1
  41e2c4:	str	w0, [sp, #160]
  41e2c8:	b	41e340 <_obstack_memory_used@@Base+0x28f0>
  41e2cc:	ldr	x1, [sp, #128]
  41e2d0:	ldr	x0, [sp, #96]
  41e2d4:	cmp	x1, x0
  41e2d8:	b.ne	41e32c <_obstack_memory_used@@Base+0x28dc>  // b.any
  41e2dc:	ldr	x1, [sp, #136]
  41e2e0:	ldr	x0, [sp, #104]
  41e2e4:	cmp	x1, x0
  41e2e8:	b.ne	41e32c <_obstack_memory_used@@Base+0x28dc>  // b.any
  41e2ec:	ldr	x1, [sp, #144]
  41e2f0:	ldr	x0, [sp, #112]
  41e2f4:	cmp	x1, x0
  41e2f8:	b.ne	41e32c <_obstack_memory_used@@Base+0x28dc>  // b.any
  41e2fc:	ldr	x1, [sp, #120]
  41e300:	ldr	x0, [sp, #88]
  41e304:	cmp	x1, x0
  41e308:	b.eq	41e334 <_obstack_memory_used@@Base+0x28e4>  // b.none
  41e30c:	ldr	x0, [sp, #128]
  41e310:	cmp	x0, #0x0
  41e314:	b.ne	41e32c <_obstack_memory_used@@Base+0x28dc>  // b.any
  41e318:	ldr	x1, [sp, #136]
  41e31c:	ldr	x0, [sp, #144]
  41e320:	orr	x0, x1, x0
  41e324:	cmp	x0, #0x0
  41e328:	b.eq	41e334 <_obstack_memory_used@@Base+0x28e4>  // b.none
  41e32c:	mov	w0, #0x1                   	// #1
  41e330:	b	41e338 <_obstack_memory_used@@Base+0x28e8>
  41e334:	mov	w0, #0x0                   	// #0
  41e338:	str	w0, [sp, #164]
  41e33c:	b	41e344 <_obstack_memory_used@@Base+0x28f4>
  41e340:	nop
  41e344:	ldrsw	x0, [sp, #160]
  41e348:	cmp	x0, #0x0
  41e34c:	b.eq	41e358 <_obstack_memory_used@@Base+0x2908>  // b.none
  41e350:	ldr	w0, [sp, #160]
  41e354:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  41e358:	ldr	w0, [sp, #164]
  41e35c:	ldp	x29, x30, [sp], #176
  41e360:	ret
  41e364:	stp	x29, x30, [sp, #-176]!
  41e368:	mov	x29, sp
  41e36c:	str	q0, [sp, #32]
  41e370:	str	q1, [sp, #16]
  41e374:	str	wzr, [sp, #168]
  41e378:	str	xzr, [sp, #160]
  41e37c:	mrs	x0, fpcr
  41e380:	str	x0, [sp, #160]
  41e384:	ldr	q0, [sp, #32]
  41e388:	str	q0, [sp, #64]
  41e38c:	ldr	x0, [sp, #64]
  41e390:	str	x0, [sp, #152]
  41e394:	ldr	x0, [sp, #72]
  41e398:	ubfx	x0, x0, #0, #48
  41e39c:	str	x0, [sp, #144]
  41e3a0:	ldrh	w0, [sp, #78]
  41e3a4:	ubfx	x0, x0, #0, #15
  41e3a8:	and	w0, w0, #0xffff
  41e3ac:	and	x0, x0, #0xffff
  41e3b0:	str	x0, [sp, #136]
  41e3b4:	ldrb	w0, [sp, #79]
  41e3b8:	ubfx	x0, x0, #7, #1
  41e3bc:	and	w0, w0, #0xff
  41e3c0:	and	x0, x0, #0xff
  41e3c4:	str	x0, [sp, #128]
  41e3c8:	ldr	q0, [sp, #16]
  41e3cc:	str	q0, [sp, #48]
  41e3d0:	ldr	x0, [sp, #48]
  41e3d4:	str	x0, [sp, #120]
  41e3d8:	ldr	x0, [sp, #56]
  41e3dc:	ubfx	x0, x0, #0, #48
  41e3e0:	str	x0, [sp, #112]
  41e3e4:	ldrh	w0, [sp, #62]
  41e3e8:	ubfx	x0, x0, #0, #15
  41e3ec:	and	w0, w0, #0xffff
  41e3f0:	and	x0, x0, #0xffff
  41e3f4:	str	x0, [sp, #104]
  41e3f8:	ldrb	w0, [sp, #63]
  41e3fc:	ubfx	x0, x0, #7, #1
  41e400:	and	w0, w0, #0xff
  41e404:	and	x0, x0, #0xff
  41e408:	str	x0, [sp, #96]
  41e40c:	ldr	x1, [sp, #136]
  41e410:	mov	x0, #0x7fff                	// #32767
  41e414:	cmp	x1, x0
  41e418:	b.ne	41e430 <_obstack_memory_used@@Base+0x29e0>  // b.any
  41e41c:	ldr	x1, [sp, #144]
  41e420:	ldr	x0, [sp, #152]
  41e424:	orr	x0, x1, x0
  41e428:	cmp	x0, #0x0
  41e42c:	b.ne	41e454 <_obstack_memory_used@@Base+0x2a04>  // b.any
  41e430:	ldr	x1, [sp, #104]
  41e434:	mov	x0, #0x7fff                	// #32767
  41e438:	cmp	x1, x0
  41e43c:	b.ne	41e46c <_obstack_memory_used@@Base+0x2a1c>  // b.any
  41e440:	ldr	x1, [sp, #112]
  41e444:	ldr	x0, [sp, #120]
  41e448:	orr	x0, x1, x0
  41e44c:	cmp	x0, #0x0
  41e450:	b.eq	41e46c <_obstack_memory_used@@Base+0x2a1c>  // b.none
  41e454:	mov	w0, #0xfffffffe            	// #-2
  41e458:	str	w0, [sp, #172]
  41e45c:	ldr	w0, [sp, #168]
  41e460:	orr	w0, w0, #0x1
  41e464:	str	w0, [sp, #168]
  41e468:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e46c:	ldr	x0, [sp, #136]
  41e470:	cmp	x0, #0x0
  41e474:	b.ne	41e494 <_obstack_memory_used@@Base+0x2a44>  // b.any
  41e478:	ldr	x1, [sp, #144]
  41e47c:	ldr	x0, [sp, #152]
  41e480:	orr	x0, x1, x0
  41e484:	cmp	x0, #0x0
  41e488:	b.ne	41e494 <_obstack_memory_used@@Base+0x2a44>  // b.any
  41e48c:	mov	w0, #0x1                   	// #1
  41e490:	b	41e498 <_obstack_memory_used@@Base+0x2a48>
  41e494:	mov	w0, #0x0                   	// #0
  41e498:	str	w0, [sp, #92]
  41e49c:	ldr	x0, [sp, #104]
  41e4a0:	cmp	x0, #0x0
  41e4a4:	b.ne	41e4c4 <_obstack_memory_used@@Base+0x2a74>  // b.any
  41e4a8:	ldr	x1, [sp, #112]
  41e4ac:	ldr	x0, [sp, #120]
  41e4b0:	orr	x0, x1, x0
  41e4b4:	cmp	x0, #0x0
  41e4b8:	b.ne	41e4c4 <_obstack_memory_used@@Base+0x2a74>  // b.any
  41e4bc:	mov	w0, #0x1                   	// #1
  41e4c0:	b	41e4c8 <_obstack_memory_used@@Base+0x2a78>
  41e4c4:	mov	w0, #0x0                   	// #0
  41e4c8:	str	w0, [sp, #88]
  41e4cc:	ldr	w0, [sp, #92]
  41e4d0:	cmp	w0, #0x0
  41e4d4:	b.eq	41e4ec <_obstack_memory_used@@Base+0x2a9c>  // b.none
  41e4d8:	ldr	w0, [sp, #88]
  41e4dc:	cmp	w0, #0x0
  41e4e0:	b.eq	41e4ec <_obstack_memory_used@@Base+0x2a9c>  // b.none
  41e4e4:	str	wzr, [sp, #172]
  41e4e8:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e4ec:	ldr	w0, [sp, #92]
  41e4f0:	cmp	w0, #0x0
  41e4f4:	b.eq	41e518 <_obstack_memory_used@@Base+0x2ac8>  // b.none
  41e4f8:	ldr	x0, [sp, #96]
  41e4fc:	cmp	x0, #0x0
  41e500:	b.eq	41e50c <_obstack_memory_used@@Base+0x2abc>  // b.none
  41e504:	mov	w0, #0x1                   	// #1
  41e508:	b	41e510 <_obstack_memory_used@@Base+0x2ac0>
  41e50c:	mov	w0, #0xffffffff            	// #-1
  41e510:	str	w0, [sp, #172]
  41e514:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e518:	ldr	w0, [sp, #88]
  41e51c:	cmp	w0, #0x0
  41e520:	b.eq	41e544 <_obstack_memory_used@@Base+0x2af4>  // b.none
  41e524:	ldr	x0, [sp, #128]
  41e528:	cmp	x0, #0x0
  41e52c:	b.eq	41e538 <_obstack_memory_used@@Base+0x2ae8>  // b.none
  41e530:	mov	w0, #0xffffffff            	// #-1
  41e534:	b	41e53c <_obstack_memory_used@@Base+0x2aec>
  41e538:	mov	w0, #0x1                   	// #1
  41e53c:	str	w0, [sp, #172]
  41e540:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e544:	ldr	x1, [sp, #128]
  41e548:	ldr	x0, [sp, #96]
  41e54c:	cmp	x1, x0
  41e550:	b.eq	41e574 <_obstack_memory_used@@Base+0x2b24>  // b.none
  41e554:	ldr	x0, [sp, #128]
  41e558:	cmp	x0, #0x0
  41e55c:	b.eq	41e568 <_obstack_memory_used@@Base+0x2b18>  // b.none
  41e560:	mov	w0, #0xffffffff            	// #-1
  41e564:	b	41e56c <_obstack_memory_used@@Base+0x2b1c>
  41e568:	mov	w0, #0x1                   	// #1
  41e56c:	str	w0, [sp, #172]
  41e570:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e574:	ldr	x1, [sp, #136]
  41e578:	ldr	x0, [sp, #104]
  41e57c:	cmp	x1, x0
  41e580:	b.le	41e5a4 <_obstack_memory_used@@Base+0x2b54>
  41e584:	ldr	x0, [sp, #128]
  41e588:	cmp	x0, #0x0
  41e58c:	b.eq	41e598 <_obstack_memory_used@@Base+0x2b48>  // b.none
  41e590:	mov	w0, #0xffffffff            	// #-1
  41e594:	b	41e59c <_obstack_memory_used@@Base+0x2b4c>
  41e598:	mov	w0, #0x1                   	// #1
  41e59c:	str	w0, [sp, #172]
  41e5a0:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e5a4:	ldr	x1, [sp, #136]
  41e5a8:	ldr	x0, [sp, #104]
  41e5ac:	cmp	x1, x0
  41e5b0:	b.ge	41e5d4 <_obstack_memory_used@@Base+0x2b84>  // b.tcont
  41e5b4:	ldr	x0, [sp, #128]
  41e5b8:	cmp	x0, #0x0
  41e5bc:	b.eq	41e5c8 <_obstack_memory_used@@Base+0x2b78>  // b.none
  41e5c0:	mov	w0, #0x1                   	// #1
  41e5c4:	b	41e5cc <_obstack_memory_used@@Base+0x2b7c>
  41e5c8:	mov	w0, #0xffffffff            	// #-1
  41e5cc:	str	w0, [sp, #172]
  41e5d0:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e5d4:	ldr	x1, [sp, #144]
  41e5d8:	ldr	x0, [sp, #112]
  41e5dc:	cmp	x1, x0
  41e5e0:	b.hi	41e604 <_obstack_memory_used@@Base+0x2bb4>  // b.pmore
  41e5e4:	ldr	x1, [sp, #144]
  41e5e8:	ldr	x0, [sp, #112]
  41e5ec:	cmp	x1, x0
  41e5f0:	b.ne	41e624 <_obstack_memory_used@@Base+0x2bd4>  // b.any
  41e5f4:	ldr	x1, [sp, #152]
  41e5f8:	ldr	x0, [sp, #120]
  41e5fc:	cmp	x1, x0
  41e600:	b.ls	41e624 <_obstack_memory_used@@Base+0x2bd4>  // b.plast
  41e604:	ldr	x0, [sp, #128]
  41e608:	cmp	x0, #0x0
  41e60c:	b.eq	41e618 <_obstack_memory_used@@Base+0x2bc8>  // b.none
  41e610:	mov	w0, #0xffffffff            	// #-1
  41e614:	b	41e61c <_obstack_memory_used@@Base+0x2bcc>
  41e618:	mov	w0, #0x1                   	// #1
  41e61c:	str	w0, [sp, #172]
  41e620:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e624:	ldr	x1, [sp, #112]
  41e628:	ldr	x0, [sp, #144]
  41e62c:	cmp	x1, x0
  41e630:	b.hi	41e654 <_obstack_memory_used@@Base+0x2c04>  // b.pmore
  41e634:	ldr	x1, [sp, #112]
  41e638:	ldr	x0, [sp, #144]
  41e63c:	cmp	x1, x0
  41e640:	b.ne	41e674 <_obstack_memory_used@@Base+0x2c24>  // b.any
  41e644:	ldr	x1, [sp, #120]
  41e648:	ldr	x0, [sp, #152]
  41e64c:	cmp	x1, x0
  41e650:	b.ls	41e674 <_obstack_memory_used@@Base+0x2c24>  // b.plast
  41e654:	ldr	x0, [sp, #128]
  41e658:	cmp	x0, #0x0
  41e65c:	b.eq	41e668 <_obstack_memory_used@@Base+0x2c18>  // b.none
  41e660:	mov	w0, #0x1                   	// #1
  41e664:	b	41e66c <_obstack_memory_used@@Base+0x2c1c>
  41e668:	mov	w0, #0xffffffff            	// #-1
  41e66c:	str	w0, [sp, #172]
  41e670:	b	41e678 <_obstack_memory_used@@Base+0x2c28>
  41e674:	str	wzr, [sp, #172]
  41e678:	ldrsw	x0, [sp, #168]
  41e67c:	cmp	x0, #0x0
  41e680:	b.eq	41e68c <_obstack_memory_used@@Base+0x2c3c>  // b.none
  41e684:	ldr	w0, [sp, #168]
  41e688:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  41e68c:	ldr	w0, [sp, #172]
  41e690:	ldp	x29, x30, [sp], #176
  41e694:	ret
  41e698:	stp	x29, x30, [sp, #-176]!
  41e69c:	mov	x29, sp
  41e6a0:	str	q0, [sp, #32]
  41e6a4:	str	q1, [sp, #16]
  41e6a8:	str	wzr, [sp, #168]
  41e6ac:	str	xzr, [sp, #160]
  41e6b0:	mrs	x0, fpcr
  41e6b4:	str	x0, [sp, #160]
  41e6b8:	ldr	q0, [sp, #32]
  41e6bc:	str	q0, [sp, #64]
  41e6c0:	ldr	x0, [sp, #64]
  41e6c4:	str	x0, [sp, #152]
  41e6c8:	ldr	x0, [sp, #72]
  41e6cc:	ubfx	x0, x0, #0, #48
  41e6d0:	str	x0, [sp, #144]
  41e6d4:	ldrh	w0, [sp, #78]
  41e6d8:	ubfx	x0, x0, #0, #15
  41e6dc:	and	w0, w0, #0xffff
  41e6e0:	and	x0, x0, #0xffff
  41e6e4:	str	x0, [sp, #136]
  41e6e8:	ldrb	w0, [sp, #79]
  41e6ec:	ubfx	x0, x0, #7, #1
  41e6f0:	and	w0, w0, #0xff
  41e6f4:	and	x0, x0, #0xff
  41e6f8:	str	x0, [sp, #128]
  41e6fc:	ldr	q0, [sp, #16]
  41e700:	str	q0, [sp, #48]
  41e704:	ldr	x0, [sp, #48]
  41e708:	str	x0, [sp, #120]
  41e70c:	ldr	x0, [sp, #56]
  41e710:	ubfx	x0, x0, #0, #48
  41e714:	str	x0, [sp, #112]
  41e718:	ldrh	w0, [sp, #62]
  41e71c:	ubfx	x0, x0, #0, #15
  41e720:	and	w0, w0, #0xffff
  41e724:	and	x0, x0, #0xffff
  41e728:	str	x0, [sp, #104]
  41e72c:	ldrb	w0, [sp, #63]
  41e730:	ubfx	x0, x0, #7, #1
  41e734:	and	w0, w0, #0xff
  41e738:	and	x0, x0, #0xff
  41e73c:	str	x0, [sp, #96]
  41e740:	ldr	x1, [sp, #136]
  41e744:	mov	x0, #0x7fff                	// #32767
  41e748:	cmp	x1, x0
  41e74c:	b.ne	41e764 <_obstack_memory_used@@Base+0x2d14>  // b.any
  41e750:	ldr	x1, [sp, #144]
  41e754:	ldr	x0, [sp, #152]
  41e758:	orr	x0, x1, x0
  41e75c:	cmp	x0, #0x0
  41e760:	b.ne	41e788 <_obstack_memory_used@@Base+0x2d38>  // b.any
  41e764:	ldr	x1, [sp, #104]
  41e768:	mov	x0, #0x7fff                	// #32767
  41e76c:	cmp	x1, x0
  41e770:	b.ne	41e7a0 <_obstack_memory_used@@Base+0x2d50>  // b.any
  41e774:	ldr	x1, [sp, #112]
  41e778:	ldr	x0, [sp, #120]
  41e77c:	orr	x0, x1, x0
  41e780:	cmp	x0, #0x0
  41e784:	b.eq	41e7a0 <_obstack_memory_used@@Base+0x2d50>  // b.none
  41e788:	mov	w0, #0x2                   	// #2
  41e78c:	str	w0, [sp, #172]
  41e790:	ldr	w0, [sp, #168]
  41e794:	orr	w0, w0, #0x1
  41e798:	str	w0, [sp, #168]
  41e79c:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e7a0:	ldr	x0, [sp, #136]
  41e7a4:	cmp	x0, #0x0
  41e7a8:	b.ne	41e7c8 <_obstack_memory_used@@Base+0x2d78>  // b.any
  41e7ac:	ldr	x1, [sp, #144]
  41e7b0:	ldr	x0, [sp, #152]
  41e7b4:	orr	x0, x1, x0
  41e7b8:	cmp	x0, #0x0
  41e7bc:	b.ne	41e7c8 <_obstack_memory_used@@Base+0x2d78>  // b.any
  41e7c0:	mov	w0, #0x1                   	// #1
  41e7c4:	b	41e7cc <_obstack_memory_used@@Base+0x2d7c>
  41e7c8:	mov	w0, #0x0                   	// #0
  41e7cc:	str	w0, [sp, #92]
  41e7d0:	ldr	x0, [sp, #104]
  41e7d4:	cmp	x0, #0x0
  41e7d8:	b.ne	41e7f8 <_obstack_memory_used@@Base+0x2da8>  // b.any
  41e7dc:	ldr	x1, [sp, #112]
  41e7e0:	ldr	x0, [sp, #120]
  41e7e4:	orr	x0, x1, x0
  41e7e8:	cmp	x0, #0x0
  41e7ec:	b.ne	41e7f8 <_obstack_memory_used@@Base+0x2da8>  // b.any
  41e7f0:	mov	w0, #0x1                   	// #1
  41e7f4:	b	41e7fc <_obstack_memory_used@@Base+0x2dac>
  41e7f8:	mov	w0, #0x0                   	// #0
  41e7fc:	str	w0, [sp, #88]
  41e800:	ldr	w0, [sp, #92]
  41e804:	cmp	w0, #0x0
  41e808:	b.eq	41e820 <_obstack_memory_used@@Base+0x2dd0>  // b.none
  41e80c:	ldr	w0, [sp, #88]
  41e810:	cmp	w0, #0x0
  41e814:	b.eq	41e820 <_obstack_memory_used@@Base+0x2dd0>  // b.none
  41e818:	str	wzr, [sp, #172]
  41e81c:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e820:	ldr	w0, [sp, #92]
  41e824:	cmp	w0, #0x0
  41e828:	b.eq	41e84c <_obstack_memory_used@@Base+0x2dfc>  // b.none
  41e82c:	ldr	x0, [sp, #96]
  41e830:	cmp	x0, #0x0
  41e834:	b.eq	41e840 <_obstack_memory_used@@Base+0x2df0>  // b.none
  41e838:	mov	w0, #0x1                   	// #1
  41e83c:	b	41e844 <_obstack_memory_used@@Base+0x2df4>
  41e840:	mov	w0, #0xffffffff            	// #-1
  41e844:	str	w0, [sp, #172]
  41e848:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e84c:	ldr	w0, [sp, #88]
  41e850:	cmp	w0, #0x0
  41e854:	b.eq	41e878 <_obstack_memory_used@@Base+0x2e28>  // b.none
  41e858:	ldr	x0, [sp, #128]
  41e85c:	cmp	x0, #0x0
  41e860:	b.eq	41e86c <_obstack_memory_used@@Base+0x2e1c>  // b.none
  41e864:	mov	w0, #0xffffffff            	// #-1
  41e868:	b	41e870 <_obstack_memory_used@@Base+0x2e20>
  41e86c:	mov	w0, #0x1                   	// #1
  41e870:	str	w0, [sp, #172]
  41e874:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e878:	ldr	x1, [sp, #128]
  41e87c:	ldr	x0, [sp, #96]
  41e880:	cmp	x1, x0
  41e884:	b.eq	41e8a8 <_obstack_memory_used@@Base+0x2e58>  // b.none
  41e888:	ldr	x0, [sp, #128]
  41e88c:	cmp	x0, #0x0
  41e890:	b.eq	41e89c <_obstack_memory_used@@Base+0x2e4c>  // b.none
  41e894:	mov	w0, #0xffffffff            	// #-1
  41e898:	b	41e8a0 <_obstack_memory_used@@Base+0x2e50>
  41e89c:	mov	w0, #0x1                   	// #1
  41e8a0:	str	w0, [sp, #172]
  41e8a4:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e8a8:	ldr	x1, [sp, #136]
  41e8ac:	ldr	x0, [sp, #104]
  41e8b0:	cmp	x1, x0
  41e8b4:	b.le	41e8d8 <_obstack_memory_used@@Base+0x2e88>
  41e8b8:	ldr	x0, [sp, #128]
  41e8bc:	cmp	x0, #0x0
  41e8c0:	b.eq	41e8cc <_obstack_memory_used@@Base+0x2e7c>  // b.none
  41e8c4:	mov	w0, #0xffffffff            	// #-1
  41e8c8:	b	41e8d0 <_obstack_memory_used@@Base+0x2e80>
  41e8cc:	mov	w0, #0x1                   	// #1
  41e8d0:	str	w0, [sp, #172]
  41e8d4:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e8d8:	ldr	x1, [sp, #136]
  41e8dc:	ldr	x0, [sp, #104]
  41e8e0:	cmp	x1, x0
  41e8e4:	b.ge	41e908 <_obstack_memory_used@@Base+0x2eb8>  // b.tcont
  41e8e8:	ldr	x0, [sp, #128]
  41e8ec:	cmp	x0, #0x0
  41e8f0:	b.eq	41e8fc <_obstack_memory_used@@Base+0x2eac>  // b.none
  41e8f4:	mov	w0, #0x1                   	// #1
  41e8f8:	b	41e900 <_obstack_memory_used@@Base+0x2eb0>
  41e8fc:	mov	w0, #0xffffffff            	// #-1
  41e900:	str	w0, [sp, #172]
  41e904:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e908:	ldr	x1, [sp, #144]
  41e90c:	ldr	x0, [sp, #112]
  41e910:	cmp	x1, x0
  41e914:	b.hi	41e938 <_obstack_memory_used@@Base+0x2ee8>  // b.pmore
  41e918:	ldr	x1, [sp, #144]
  41e91c:	ldr	x0, [sp, #112]
  41e920:	cmp	x1, x0
  41e924:	b.ne	41e958 <_obstack_memory_used@@Base+0x2f08>  // b.any
  41e928:	ldr	x1, [sp, #152]
  41e92c:	ldr	x0, [sp, #120]
  41e930:	cmp	x1, x0
  41e934:	b.ls	41e958 <_obstack_memory_used@@Base+0x2f08>  // b.plast
  41e938:	ldr	x0, [sp, #128]
  41e93c:	cmp	x0, #0x0
  41e940:	b.eq	41e94c <_obstack_memory_used@@Base+0x2efc>  // b.none
  41e944:	mov	w0, #0xffffffff            	// #-1
  41e948:	b	41e950 <_obstack_memory_used@@Base+0x2f00>
  41e94c:	mov	w0, #0x1                   	// #1
  41e950:	str	w0, [sp, #172]
  41e954:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e958:	ldr	x1, [sp, #112]
  41e95c:	ldr	x0, [sp, #144]
  41e960:	cmp	x1, x0
  41e964:	b.hi	41e988 <_obstack_memory_used@@Base+0x2f38>  // b.pmore
  41e968:	ldr	x1, [sp, #112]
  41e96c:	ldr	x0, [sp, #144]
  41e970:	cmp	x1, x0
  41e974:	b.ne	41e9a8 <_obstack_memory_used@@Base+0x2f58>  // b.any
  41e978:	ldr	x1, [sp, #120]
  41e97c:	ldr	x0, [sp, #152]
  41e980:	cmp	x1, x0
  41e984:	b.ls	41e9a8 <_obstack_memory_used@@Base+0x2f58>  // b.plast
  41e988:	ldr	x0, [sp, #128]
  41e98c:	cmp	x0, #0x0
  41e990:	b.eq	41e99c <_obstack_memory_used@@Base+0x2f4c>  // b.none
  41e994:	mov	w0, #0x1                   	// #1
  41e998:	b	41e9a0 <_obstack_memory_used@@Base+0x2f50>
  41e99c:	mov	w0, #0xffffffff            	// #-1
  41e9a0:	str	w0, [sp, #172]
  41e9a4:	b	41e9ac <_obstack_memory_used@@Base+0x2f5c>
  41e9a8:	str	wzr, [sp, #172]
  41e9ac:	ldrsw	x0, [sp, #168]
  41e9b0:	cmp	x0, #0x0
  41e9b4:	b.eq	41e9c0 <_obstack_memory_used@@Base+0x2f70>  // b.none
  41e9b8:	ldr	w0, [sp, #168]
  41e9bc:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  41e9c0:	ldr	w0, [sp, #172]
  41e9c4:	ldp	x29, x30, [sp], #176
  41e9c8:	ret
  41e9cc:	sub	sp, sp, #0x2a0
  41e9d0:	stp	x29, x30, [sp]
  41e9d4:	mov	x29, sp
  41e9d8:	str	q0, [sp, #32]
  41e9dc:	str	q1, [sp, #16]
  41e9e0:	str	wzr, [sp, #596]
  41e9e4:	str	xzr, [sp, #488]
  41e9e8:	mrs	x0, fpcr
  41e9ec:	str	x0, [sp, #488]
  41e9f0:	ldr	q0, [sp, #32]
  41e9f4:	str	q0, [sp, #112]
  41e9f8:	ldr	x0, [sp, #112]
  41e9fc:	str	x0, [sp, #608]
  41ea00:	ldr	x0, [sp, #120]
  41ea04:	ubfx	x0, x0, #0, #48
  41ea08:	str	x0, [sp, #616]
  41ea0c:	ldrh	w0, [sp, #126]
  41ea10:	ubfx	x0, x0, #0, #15
  41ea14:	and	w0, w0, #0xffff
  41ea18:	and	x0, x0, #0xffff
  41ea1c:	str	x0, [sp, #600]
  41ea20:	ldrb	w0, [sp, #127]
  41ea24:	ubfx	x0, x0, #7, #1
  41ea28:	and	w0, w0, #0xff
  41ea2c:	and	x0, x0, #0xff
  41ea30:	str	x0, [sp, #480]
  41ea34:	ldr	x0, [sp, #600]
  41ea38:	cmp	x0, #0x0
  41ea3c:	b.eq	41ea98 <_obstack_memory_used@@Base+0x3048>  // b.none
  41ea40:	ldr	x1, [sp, #600]
  41ea44:	mov	x0, #0x7fff                	// #32767
  41ea48:	cmp	x1, x0
  41ea4c:	b.eq	41eb8c <_obstack_memory_used@@Base+0x313c>  // b.none
  41ea50:	ldr	x0, [sp, #616]
  41ea54:	orr	x0, x0, #0x1000000000000
  41ea58:	str	x0, [sp, #616]
  41ea5c:	ldr	x0, [sp, #616]
  41ea60:	lsl	x1, x0, #3
  41ea64:	ldr	x0, [sp, #608]
  41ea68:	lsr	x0, x0, #61
  41ea6c:	orr	x0, x1, x0
  41ea70:	str	x0, [sp, #616]
  41ea74:	ldr	x0, [sp, #608]
  41ea78:	lsl	x0, x0, #3
  41ea7c:	str	x0, [sp, #608]
  41ea80:	ldr	x1, [sp, #600]
  41ea84:	mov	x0, #0xffffffffffffc001    	// #-16383
  41ea88:	add	x0, x1, x0
  41ea8c:	str	x0, [sp, #600]
  41ea90:	str	xzr, [sp, #584]
  41ea94:	b	41ebd0 <_obstack_memory_used@@Base+0x3180>
  41ea98:	ldr	x1, [sp, #616]
  41ea9c:	ldr	x0, [sp, #608]
  41eaa0:	orr	x0, x1, x0
  41eaa4:	cmp	x0, #0x0
  41eaa8:	b.ne	41eab8 <_obstack_memory_used@@Base+0x3068>  // b.any
  41eaac:	mov	x0, #0x1                   	// #1
  41eab0:	str	x0, [sp, #584]
  41eab4:	b	41ebd0 <_obstack_memory_used@@Base+0x3180>
  41eab8:	ldr	x0, [sp, #616]
  41eabc:	cmp	x0, #0x0
  41eac0:	b.eq	41ead8 <_obstack_memory_used@@Base+0x3088>  // b.none
  41eac4:	ldr	x0, [sp, #616]
  41eac8:	clz	x0, x0
  41eacc:	sxtw	x0, w0
  41ead0:	str	x0, [sp, #552]
  41ead4:	b	41eaf4 <_obstack_memory_used@@Base+0x30a4>
  41ead8:	ldr	x0, [sp, #608]
  41eadc:	clz	x0, x0
  41eae0:	sxtw	x0, w0
  41eae4:	str	x0, [sp, #552]
  41eae8:	ldr	x0, [sp, #552]
  41eaec:	add	x0, x0, #0x40
  41eaf0:	str	x0, [sp, #552]
  41eaf4:	ldr	x0, [sp, #552]
  41eaf8:	sub	x0, x0, #0xf
  41eafc:	str	x0, [sp, #552]
  41eb00:	ldr	x0, [sp, #552]
  41eb04:	cmp	x0, #0x3c
  41eb08:	b.gt	41eb54 <_obstack_memory_used@@Base+0x3104>
  41eb0c:	ldr	x0, [sp, #552]
  41eb10:	add	w0, w0, #0x3
  41eb14:	ldr	x1, [sp, #616]
  41eb18:	lsl	x1, x1, x0
  41eb1c:	ldr	x0, [sp, #552]
  41eb20:	mov	w2, w0
  41eb24:	mov	w0, #0x3d                  	// #61
  41eb28:	sub	w0, w0, w2
  41eb2c:	ldr	x2, [sp, #608]
  41eb30:	lsr	x0, x2, x0
  41eb34:	orr	x0, x1, x0
  41eb38:	str	x0, [sp, #616]
  41eb3c:	ldr	x0, [sp, #552]
  41eb40:	add	w0, w0, #0x3
  41eb44:	ldr	x1, [sp, #608]
  41eb48:	lsl	x0, x1, x0
  41eb4c:	str	x0, [sp, #608]
  41eb50:	b	41eb6c <_obstack_memory_used@@Base+0x311c>
  41eb54:	ldr	x0, [sp, #552]
  41eb58:	sub	w0, w0, #0x3d
  41eb5c:	ldr	x1, [sp, #608]
  41eb60:	lsl	x0, x1, x0
  41eb64:	str	x0, [sp, #616]
  41eb68:	str	xzr, [sp, #608]
  41eb6c:	ldr	x1, [sp, #552]
  41eb70:	mov	x0, #0x3ffe                	// #16382
  41eb74:	add	x0, x1, x0
  41eb78:	ldr	x1, [sp, #600]
  41eb7c:	sub	x0, x1, x0
  41eb80:	str	x0, [sp, #600]
  41eb84:	str	xzr, [sp, #584]
  41eb88:	b	41ebd0 <_obstack_memory_used@@Base+0x3180>
  41eb8c:	ldr	x1, [sp, #616]
  41eb90:	ldr	x0, [sp, #608]
  41eb94:	orr	x0, x1, x0
  41eb98:	cmp	x0, #0x0
  41eb9c:	b.ne	41ebac <_obstack_memory_used@@Base+0x315c>  // b.any
  41eba0:	mov	x0, #0x2                   	// #2
  41eba4:	str	x0, [sp, #584]
  41eba8:	b	41ebd0 <_obstack_memory_used@@Base+0x3180>
  41ebac:	mov	x0, #0x3                   	// #3
  41ebb0:	str	x0, [sp, #584]
  41ebb4:	ldr	x0, [sp, #616]
  41ebb8:	and	x0, x0, #0x800000000000
  41ebbc:	cmp	x0, #0x0
  41ebc0:	b.ne	41ebd0 <_obstack_memory_used@@Base+0x3180>  // b.any
  41ebc4:	ldr	w0, [sp, #596]
  41ebc8:	orr	w0, w0, #0x1
  41ebcc:	str	w0, [sp, #596]
  41ebd0:	nop
  41ebd4:	ldr	q0, [sp, #16]
  41ebd8:	str	q0, [sp, #96]
  41ebdc:	ldr	x0, [sp, #96]
  41ebe0:	str	x0, [sp, #640]
  41ebe4:	ldr	x0, [sp, #104]
  41ebe8:	ubfx	x0, x0, #0, #48
  41ebec:	str	x0, [sp, #648]
  41ebf0:	ldrh	w0, [sp, #110]
  41ebf4:	ubfx	x0, x0, #0, #15
  41ebf8:	and	w0, w0, #0xffff
  41ebfc:	and	x0, x0, #0xffff
  41ec00:	str	x0, [sp, #624]
  41ec04:	ldrb	w0, [sp, #111]
  41ec08:	ubfx	x0, x0, #7, #1
  41ec0c:	and	w0, w0, #0xff
  41ec10:	and	x0, x0, #0xff
  41ec14:	str	x0, [sp, #472]
  41ec18:	ldr	x0, [sp, #624]
  41ec1c:	cmp	x0, #0x0
  41ec20:	b.eq	41ec7c <_obstack_memory_used@@Base+0x322c>  // b.none
  41ec24:	ldr	x1, [sp, #624]
  41ec28:	mov	x0, #0x7fff                	// #32767
  41ec2c:	cmp	x1, x0
  41ec30:	b.eq	41ed70 <_obstack_memory_used@@Base+0x3320>  // b.none
  41ec34:	ldr	x0, [sp, #648]
  41ec38:	orr	x0, x0, #0x1000000000000
  41ec3c:	str	x0, [sp, #648]
  41ec40:	ldr	x0, [sp, #648]
  41ec44:	lsl	x1, x0, #3
  41ec48:	ldr	x0, [sp, #640]
  41ec4c:	lsr	x0, x0, #61
  41ec50:	orr	x0, x1, x0
  41ec54:	str	x0, [sp, #648]
  41ec58:	ldr	x0, [sp, #640]
  41ec5c:	lsl	x0, x0, #3
  41ec60:	str	x0, [sp, #640]
  41ec64:	ldr	x1, [sp, #624]
  41ec68:	mov	x0, #0xffffffffffffc001    	// #-16383
  41ec6c:	add	x0, x1, x0
  41ec70:	str	x0, [sp, #624]
  41ec74:	str	xzr, [sp, #632]
  41ec78:	b	41edb4 <_obstack_memory_used@@Base+0x3364>
  41ec7c:	ldr	x1, [sp, #648]
  41ec80:	ldr	x0, [sp, #640]
  41ec84:	orr	x0, x1, x0
  41ec88:	cmp	x0, #0x0
  41ec8c:	b.ne	41ec9c <_obstack_memory_used@@Base+0x324c>  // b.any
  41ec90:	mov	x0, #0x1                   	// #1
  41ec94:	str	x0, [sp, #632]
  41ec98:	b	41edb4 <_obstack_memory_used@@Base+0x3364>
  41ec9c:	ldr	x0, [sp, #648]
  41eca0:	cmp	x0, #0x0
  41eca4:	b.eq	41ecbc <_obstack_memory_used@@Base+0x326c>  // b.none
  41eca8:	ldr	x0, [sp, #648]
  41ecac:	clz	x0, x0
  41ecb0:	sxtw	x0, w0
  41ecb4:	str	x0, [sp, #544]
  41ecb8:	b	41ecd8 <_obstack_memory_used@@Base+0x3288>
  41ecbc:	ldr	x0, [sp, #640]
  41ecc0:	clz	x0, x0
  41ecc4:	sxtw	x0, w0
  41ecc8:	str	x0, [sp, #544]
  41eccc:	ldr	x0, [sp, #544]
  41ecd0:	add	x0, x0, #0x40
  41ecd4:	str	x0, [sp, #544]
  41ecd8:	ldr	x0, [sp, #544]
  41ecdc:	sub	x0, x0, #0xf
  41ece0:	str	x0, [sp, #544]
  41ece4:	ldr	x0, [sp, #544]
  41ece8:	cmp	x0, #0x3c
  41ecec:	b.gt	41ed38 <_obstack_memory_used@@Base+0x32e8>
  41ecf0:	ldr	x0, [sp, #544]
  41ecf4:	add	w0, w0, #0x3
  41ecf8:	ldr	x1, [sp, #648]
  41ecfc:	lsl	x1, x1, x0
  41ed00:	ldr	x0, [sp, #544]
  41ed04:	mov	w2, w0
  41ed08:	mov	w0, #0x3d                  	// #61
  41ed0c:	sub	w0, w0, w2
  41ed10:	ldr	x2, [sp, #640]
  41ed14:	lsr	x0, x2, x0
  41ed18:	orr	x0, x1, x0
  41ed1c:	str	x0, [sp, #648]
  41ed20:	ldr	x0, [sp, #544]
  41ed24:	add	w0, w0, #0x3
  41ed28:	ldr	x1, [sp, #640]
  41ed2c:	lsl	x0, x1, x0
  41ed30:	str	x0, [sp, #640]
  41ed34:	b	41ed50 <_obstack_memory_used@@Base+0x3300>
  41ed38:	ldr	x0, [sp, #544]
  41ed3c:	sub	w0, w0, #0x3d
  41ed40:	ldr	x1, [sp, #640]
  41ed44:	lsl	x0, x1, x0
  41ed48:	str	x0, [sp, #648]
  41ed4c:	str	xzr, [sp, #640]
  41ed50:	ldr	x1, [sp, #544]
  41ed54:	mov	x0, #0x3ffe                	// #16382
  41ed58:	add	x0, x1, x0
  41ed5c:	ldr	x1, [sp, #624]
  41ed60:	sub	x0, x1, x0
  41ed64:	str	x0, [sp, #624]
  41ed68:	str	xzr, [sp, #632]
  41ed6c:	b	41edb4 <_obstack_memory_used@@Base+0x3364>
  41ed70:	ldr	x1, [sp, #648]
  41ed74:	ldr	x0, [sp, #640]
  41ed78:	orr	x0, x1, x0
  41ed7c:	cmp	x0, #0x0
  41ed80:	b.ne	41ed90 <_obstack_memory_used@@Base+0x3340>  // b.any
  41ed84:	mov	x0, #0x2                   	// #2
  41ed88:	str	x0, [sp, #632]
  41ed8c:	b	41edb4 <_obstack_memory_used@@Base+0x3364>
  41ed90:	mov	x0, #0x3                   	// #3
  41ed94:	str	x0, [sp, #632]
  41ed98:	ldr	x0, [sp, #648]
  41ed9c:	and	x0, x0, #0x800000000000
  41eda0:	cmp	x0, #0x0
  41eda4:	b.ne	41edb4 <_obstack_memory_used@@Base+0x3364>  // b.any
  41eda8:	ldr	w0, [sp, #596]
  41edac:	orr	w0, w0, #0x1
  41edb0:	str	w0, [sp, #596]
  41edb4:	nop
  41edb8:	ldr	x1, [sp, #480]
  41edbc:	ldr	x0, [sp, #472]
  41edc0:	eor	x0, x1, x0
  41edc4:	str	x0, [sp, #656]
  41edc8:	ldr	x1, [sp, #600]
  41edcc:	ldr	x0, [sp, #624]
  41edd0:	add	x0, x1, x0
  41edd4:	add	x0, x0, #0x1
  41edd8:	str	x0, [sp, #576]
  41eddc:	ldr	x0, [sp, #584]
  41ede0:	lsl	x1, x0, #2
  41ede4:	ldr	x0, [sp, #632]
  41ede8:	orr	x0, x1, x0
  41edec:	cmp	x0, #0xf
  41edf0:	b.eq	41f600 <_obstack_memory_used@@Base+0x3bb0>  // b.none
  41edf4:	cmp	x0, #0xf
  41edf8:	b.gt	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41edfc:	cmp	x0, #0xe
  41ee00:	b.gt	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41ee04:	cmp	x0, #0xc
  41ee08:	b.ge	41f660 <_obstack_memory_used@@Base+0x3c10>  // b.tcont
  41ee0c:	cmp	x0, #0xb
  41ee10:	b.eq	41f684 <_obstack_memory_used@@Base+0x3c34>  // b.none
  41ee14:	cmp	x0, #0xb
  41ee18:	b.gt	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41ee1c:	cmp	x0, #0xa
  41ee20:	b.gt	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41ee24:	cmp	x0, #0x3
  41ee28:	b.ge	41ee4c <_obstack_memory_used@@Base+0x33fc>  // b.tcont
  41ee2c:	cmp	x0, #0x0
  41ee30:	b.eq	41eeb0 <_obstack_memory_used@@Base+0x3460>  // b.none
  41ee34:	cmp	x0, #0x0
  41ee38:	b.lt	41f6d4 <_obstack_memory_used@@Base+0x3c84>  // b.tstop
  41ee3c:	sub	x0, x0, #0x1
  41ee40:	cmp	x0, #0x1
  41ee44:	b.hi	41f6d4 <_obstack_memory_used@@Base+0x3c84>  // b.pmore
  41ee48:	b	41f68c <_obstack_memory_used@@Base+0x3c3c>
  41ee4c:	mov	w1, w0
  41ee50:	mov	x0, #0x1                   	// #1
  41ee54:	lsl	x0, x0, x1
  41ee58:	mov	x1, #0x530                 	// #1328
  41ee5c:	and	x1, x0, x1
  41ee60:	cmp	x1, #0x0
  41ee64:	cset	w1, ne  // ne = any
  41ee68:	and	w1, w1, #0xff
  41ee6c:	cmp	w1, #0x0
  41ee70:	b.ne	41f668 <_obstack_memory_used@@Base+0x3c18>  // b.any
  41ee74:	mov	x1, #0x240                 	// #576
  41ee78:	and	x1, x0, x1
  41ee7c:	cmp	x1, #0x0
  41ee80:	cset	w1, ne  // ne = any
  41ee84:	and	w1, w1, #0xff
  41ee88:	cmp	w1, #0x0
  41ee8c:	b.ne	41f6a8 <_obstack_memory_used@@Base+0x3c58>  // b.any
  41ee90:	mov	x1, #0x88                  	// #136
  41ee94:	and	x0, x0, x1
  41ee98:	cmp	x0, #0x0
  41ee9c:	cset	w0, ne  // ne = any
  41eea0:	and	w0, w0, #0xff
  41eea4:	cmp	w0, #0x0
  41eea8:	b.ne	41f684 <_obstack_memory_used@@Base+0x3c34>  // b.any
  41eeac:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41eeb0:	str	xzr, [sp, #664]
  41eeb4:	ldr	x0, [sp, #608]
  41eeb8:	str	w0, [sp, #468]
  41eebc:	ldr	x0, [sp, #608]
  41eec0:	lsr	x0, x0, #32
  41eec4:	str	w0, [sp, #464]
  41eec8:	ldr	x0, [sp, #640]
  41eecc:	str	w0, [sp, #460]
  41eed0:	ldr	x0, [sp, #640]
  41eed4:	lsr	x0, x0, #32
  41eed8:	str	w0, [sp, #456]
  41eedc:	ldr	w1, [sp, #468]
  41eee0:	ldr	w0, [sp, #460]
  41eee4:	mul	x0, x1, x0
  41eee8:	str	x0, [sp, #448]
  41eeec:	ldr	w1, [sp, #468]
  41eef0:	ldr	w0, [sp, #456]
  41eef4:	mul	x0, x1, x0
  41eef8:	str	x0, [sp, #440]
  41eefc:	ldr	w1, [sp, #464]
  41ef00:	ldr	w0, [sp, #460]
  41ef04:	mul	x0, x1, x0
  41ef08:	str	x0, [sp, #432]
  41ef0c:	ldr	w1, [sp, #464]
  41ef10:	ldr	w0, [sp, #456]
  41ef14:	mul	x0, x1, x0
  41ef18:	str	x0, [sp, #536]
  41ef1c:	ldr	x0, [sp, #448]
  41ef20:	lsr	x0, x0, #32
  41ef24:	ldr	x1, [sp, #440]
  41ef28:	add	x0, x1, x0
  41ef2c:	str	x0, [sp, #440]
  41ef30:	ldr	x1, [sp, #440]
  41ef34:	ldr	x0, [sp, #432]
  41ef38:	add	x0, x1, x0
  41ef3c:	str	x0, [sp, #440]
  41ef40:	ldr	x1, [sp, #440]
  41ef44:	ldr	x0, [sp, #432]
  41ef48:	cmp	x1, x0
  41ef4c:	b.cs	41ef60 <_obstack_memory_used@@Base+0x3510>  // b.hs, b.nlast
  41ef50:	ldr	x1, [sp, #536]
  41ef54:	mov	x0, #0x100000000           	// #4294967296
  41ef58:	add	x0, x1, x0
  41ef5c:	str	x0, [sp, #536]
  41ef60:	ldr	x0, [sp, #440]
  41ef64:	lsr	x1, x0, #32
  41ef68:	ldr	x0, [sp, #536]
  41ef6c:	add	x1, x1, x0
  41ef70:	add	x0, sp, #0x30
  41ef74:	str	x1, [x0, #8]
  41ef78:	ldr	x0, [sp, #440]
  41ef7c:	and	x0, x0, #0xffffffff
  41ef80:	lsl	x1, x0, #32
  41ef84:	ldr	x0, [sp, #448]
  41ef88:	and	x0, x0, #0xffffffff
  41ef8c:	add	x1, x1, x0
  41ef90:	add	x0, sp, #0x30
  41ef94:	str	x1, [x0]
  41ef98:	ldr	x0, [sp, #608]
  41ef9c:	str	w0, [sp, #428]
  41efa0:	ldr	x0, [sp, #608]
  41efa4:	lsr	x0, x0, #32
  41efa8:	str	w0, [sp, #424]
  41efac:	ldr	x0, [sp, #648]
  41efb0:	str	w0, [sp, #420]
  41efb4:	ldr	x0, [sp, #648]
  41efb8:	lsr	x0, x0, #32
  41efbc:	str	w0, [sp, #416]
  41efc0:	ldr	w1, [sp, #428]
  41efc4:	ldr	w0, [sp, #420]
  41efc8:	mul	x0, x1, x0
  41efcc:	str	x0, [sp, #408]
  41efd0:	ldr	w1, [sp, #428]
  41efd4:	ldr	w0, [sp, #416]
  41efd8:	mul	x0, x1, x0
  41efdc:	str	x0, [sp, #400]
  41efe0:	ldr	w1, [sp, #424]
  41efe4:	ldr	w0, [sp, #420]
  41efe8:	mul	x0, x1, x0
  41efec:	str	x0, [sp, #392]
  41eff0:	ldr	w1, [sp, #424]
  41eff4:	ldr	w0, [sp, #416]
  41eff8:	mul	x0, x1, x0
  41effc:	str	x0, [sp, #528]
  41f000:	ldr	x0, [sp, #408]
  41f004:	lsr	x0, x0, #32
  41f008:	ldr	x1, [sp, #400]
  41f00c:	add	x0, x1, x0
  41f010:	str	x0, [sp, #400]
  41f014:	ldr	x1, [sp, #400]
  41f018:	ldr	x0, [sp, #392]
  41f01c:	add	x0, x1, x0
  41f020:	str	x0, [sp, #400]
  41f024:	ldr	x1, [sp, #400]
  41f028:	ldr	x0, [sp, #392]
  41f02c:	cmp	x1, x0
  41f030:	b.cs	41f044 <_obstack_memory_used@@Base+0x35f4>  // b.hs, b.nlast
  41f034:	ldr	x1, [sp, #528]
  41f038:	mov	x0, #0x100000000           	// #4294967296
  41f03c:	add	x0, x1, x0
  41f040:	str	x0, [sp, #528]
  41f044:	ldr	x0, [sp, #400]
  41f048:	lsr	x0, x0, #32
  41f04c:	ldr	x1, [sp, #528]
  41f050:	add	x0, x1, x0
  41f054:	str	x0, [sp, #384]
  41f058:	ldr	x0, [sp, #400]
  41f05c:	and	x0, x0, #0xffffffff
  41f060:	lsl	x1, x0, #32
  41f064:	ldr	x0, [sp, #408]
  41f068:	and	x0, x0, #0xffffffff
  41f06c:	add	x0, x1, x0
  41f070:	str	x0, [sp, #376]
  41f074:	ldr	x0, [sp, #616]
  41f078:	str	w0, [sp, #372]
  41f07c:	ldr	x0, [sp, #616]
  41f080:	lsr	x0, x0, #32
  41f084:	str	w0, [sp, #368]
  41f088:	ldr	x0, [sp, #640]
  41f08c:	str	w0, [sp, #364]
  41f090:	ldr	x0, [sp, #640]
  41f094:	lsr	x0, x0, #32
  41f098:	str	w0, [sp, #360]
  41f09c:	ldr	w1, [sp, #372]
  41f0a0:	ldr	w0, [sp, #364]
  41f0a4:	mul	x0, x1, x0
  41f0a8:	str	x0, [sp, #352]
  41f0ac:	ldr	w1, [sp, #372]
  41f0b0:	ldr	w0, [sp, #360]
  41f0b4:	mul	x0, x1, x0
  41f0b8:	str	x0, [sp, #344]
  41f0bc:	ldr	w1, [sp, #368]
  41f0c0:	ldr	w0, [sp, #364]
  41f0c4:	mul	x0, x1, x0
  41f0c8:	str	x0, [sp, #336]
  41f0cc:	ldr	w1, [sp, #368]
  41f0d0:	ldr	w0, [sp, #360]
  41f0d4:	mul	x0, x1, x0
  41f0d8:	str	x0, [sp, #520]
  41f0dc:	ldr	x0, [sp, #352]
  41f0e0:	lsr	x0, x0, #32
  41f0e4:	ldr	x1, [sp, #344]
  41f0e8:	add	x0, x1, x0
  41f0ec:	str	x0, [sp, #344]
  41f0f0:	ldr	x1, [sp, #344]
  41f0f4:	ldr	x0, [sp, #336]
  41f0f8:	add	x0, x1, x0
  41f0fc:	str	x0, [sp, #344]
  41f100:	ldr	x1, [sp, #344]
  41f104:	ldr	x0, [sp, #336]
  41f108:	cmp	x1, x0
  41f10c:	b.cs	41f120 <_obstack_memory_used@@Base+0x36d0>  // b.hs, b.nlast
  41f110:	ldr	x1, [sp, #520]
  41f114:	mov	x0, #0x100000000           	// #4294967296
  41f118:	add	x0, x1, x0
  41f11c:	str	x0, [sp, #520]
  41f120:	ldr	x0, [sp, #344]
  41f124:	lsr	x0, x0, #32
  41f128:	ldr	x1, [sp, #520]
  41f12c:	add	x0, x1, x0
  41f130:	str	x0, [sp, #328]
  41f134:	ldr	x0, [sp, #344]
  41f138:	and	x0, x0, #0xffffffff
  41f13c:	lsl	x1, x0, #32
  41f140:	ldr	x0, [sp, #352]
  41f144:	and	x0, x0, #0xffffffff
  41f148:	add	x0, x1, x0
  41f14c:	str	x0, [sp, #320]
  41f150:	ldr	x0, [sp, #616]
  41f154:	str	w0, [sp, #316]
  41f158:	ldr	x0, [sp, #616]
  41f15c:	lsr	x0, x0, #32
  41f160:	str	w0, [sp, #312]
  41f164:	ldr	x0, [sp, #648]
  41f168:	str	w0, [sp, #308]
  41f16c:	ldr	x0, [sp, #648]
  41f170:	lsr	x0, x0, #32
  41f174:	str	w0, [sp, #304]
  41f178:	ldr	w1, [sp, #316]
  41f17c:	ldr	w0, [sp, #308]
  41f180:	mul	x0, x1, x0
  41f184:	str	x0, [sp, #296]
  41f188:	ldr	w1, [sp, #316]
  41f18c:	ldr	w0, [sp, #304]
  41f190:	mul	x0, x1, x0
  41f194:	str	x0, [sp, #288]
  41f198:	ldr	w1, [sp, #312]
  41f19c:	ldr	w0, [sp, #308]
  41f1a0:	mul	x0, x1, x0
  41f1a4:	str	x0, [sp, #280]
  41f1a8:	ldr	w1, [sp, #312]
  41f1ac:	ldr	w0, [sp, #304]
  41f1b0:	mul	x0, x1, x0
  41f1b4:	str	x0, [sp, #512]
  41f1b8:	ldr	x0, [sp, #296]
  41f1bc:	lsr	x0, x0, #32
  41f1c0:	ldr	x1, [sp, #288]
  41f1c4:	add	x0, x1, x0
  41f1c8:	str	x0, [sp, #288]
  41f1cc:	ldr	x1, [sp, #288]
  41f1d0:	ldr	x0, [sp, #280]
  41f1d4:	add	x0, x1, x0
  41f1d8:	str	x0, [sp, #288]
  41f1dc:	ldr	x1, [sp, #288]
  41f1e0:	ldr	x0, [sp, #280]
  41f1e4:	cmp	x1, x0
  41f1e8:	b.cs	41f1fc <_obstack_memory_used@@Base+0x37ac>  // b.hs, b.nlast
  41f1ec:	ldr	x1, [sp, #512]
  41f1f0:	mov	x0, #0x100000000           	// #4294967296
  41f1f4:	add	x0, x1, x0
  41f1f8:	str	x0, [sp, #512]
  41f1fc:	ldr	x0, [sp, #288]
  41f200:	lsr	x1, x0, #32
  41f204:	ldr	x0, [sp, #512]
  41f208:	add	x1, x1, x0
  41f20c:	add	x0, sp, #0x30
  41f210:	str	x1, [x0, #24]
  41f214:	ldr	x0, [sp, #288]
  41f218:	and	x0, x0, #0xffffffff
  41f21c:	lsl	x1, x0, #32
  41f220:	ldr	x0, [sp, #296]
  41f224:	and	x0, x0, #0xffffffff
  41f228:	add	x1, x1, x0
  41f22c:	add	x0, sp, #0x30
  41f230:	str	x1, [x0, #16]
  41f234:	add	x0, sp, #0x30
  41f238:	ldr	x1, [x0, #8]
  41f23c:	ldr	x0, [sp, #376]
  41f240:	add	x1, x1, x0
  41f244:	add	x0, sp, #0x30
  41f248:	str	x1, [x0, #8]
  41f24c:	add	x0, sp, #0x30
  41f250:	ldr	x0, [x0, #8]
  41f254:	ldr	x1, [sp, #376]
  41f258:	cmp	x1, x0
  41f25c:	cset	w0, hi  // hi = pmore
  41f260:	and	w0, w0, #0xff
  41f264:	and	x0, x0, #0xff
  41f268:	str	x0, [sp, #272]
  41f26c:	add	x0, sp, #0x30
  41f270:	ldr	x1, [x0, #16]
  41f274:	ldr	x0, [sp, #384]
  41f278:	add	x1, x1, x0
  41f27c:	add	x0, sp, #0x30
  41f280:	str	x1, [x0, #16]
  41f284:	add	x0, sp, #0x30
  41f288:	ldr	x0, [x0, #16]
  41f28c:	ldr	x1, [sp, #384]
  41f290:	cmp	x1, x0
  41f294:	cset	w0, hi  // hi = pmore
  41f298:	and	w0, w0, #0xff
  41f29c:	and	x0, x0, #0xff
  41f2a0:	str	x0, [sp, #264]
  41f2a4:	add	x0, sp, #0x30
  41f2a8:	ldr	x1, [x0, #16]
  41f2ac:	ldr	x0, [sp, #272]
  41f2b0:	add	x1, x1, x0
  41f2b4:	add	x0, sp, #0x30
  41f2b8:	str	x1, [x0, #16]
  41f2bc:	add	x0, sp, #0x30
  41f2c0:	ldr	x0, [x0, #16]
  41f2c4:	ldr	x1, [sp, #272]
  41f2c8:	cmp	x1, x0
  41f2cc:	cset	w0, hi  // hi = pmore
  41f2d0:	and	w0, w0, #0xff
  41f2d4:	and	x0, x0, #0xff
  41f2d8:	ldr	x1, [sp, #264]
  41f2dc:	orr	x0, x1, x0
  41f2e0:	str	x0, [sp, #264]
  41f2e4:	add	x0, sp, #0x30
  41f2e8:	ldr	x1, [x0, #24]
  41f2ec:	ldr	x0, [sp, #264]
  41f2f0:	add	x1, x1, x0
  41f2f4:	add	x0, sp, #0x30
  41f2f8:	str	x1, [x0, #24]
  41f2fc:	add	x0, sp, #0x30
  41f300:	ldr	x1, [x0, #8]
  41f304:	ldr	x0, [sp, #320]
  41f308:	add	x1, x1, x0
  41f30c:	add	x0, sp, #0x30
  41f310:	str	x1, [x0, #8]
  41f314:	add	x0, sp, #0x30
  41f318:	ldr	x0, [x0, #8]
  41f31c:	ldr	x1, [sp, #320]
  41f320:	cmp	x1, x0
  41f324:	cset	w0, hi  // hi = pmore
  41f328:	and	w0, w0, #0xff
  41f32c:	and	x0, x0, #0xff
  41f330:	str	x0, [sp, #256]
  41f334:	add	x0, sp, #0x30
  41f338:	ldr	x1, [x0, #16]
  41f33c:	ldr	x0, [sp, #328]
  41f340:	add	x1, x1, x0
  41f344:	add	x0, sp, #0x30
  41f348:	str	x1, [x0, #16]
  41f34c:	add	x0, sp, #0x30
  41f350:	ldr	x0, [x0, #16]
  41f354:	ldr	x1, [sp, #328]
  41f358:	cmp	x1, x0
  41f35c:	cset	w0, hi  // hi = pmore
  41f360:	and	w0, w0, #0xff
  41f364:	and	x0, x0, #0xff
  41f368:	str	x0, [sp, #248]
  41f36c:	add	x0, sp, #0x30
  41f370:	ldr	x1, [x0, #16]
  41f374:	ldr	x0, [sp, #256]
  41f378:	add	x1, x1, x0
  41f37c:	add	x0, sp, #0x30
  41f380:	str	x1, [x0, #16]
  41f384:	add	x0, sp, #0x30
  41f388:	ldr	x0, [x0, #16]
  41f38c:	ldr	x1, [sp, #256]
  41f390:	cmp	x1, x0
  41f394:	cset	w0, hi  // hi = pmore
  41f398:	and	w0, w0, #0xff
  41f39c:	and	x0, x0, #0xff
  41f3a0:	ldr	x1, [sp, #248]
  41f3a4:	orr	x0, x1, x0
  41f3a8:	str	x0, [sp, #248]
  41f3ac:	add	x0, sp, #0x30
  41f3b0:	ldr	x1, [x0, #24]
  41f3b4:	ldr	x0, [sp, #248]
  41f3b8:	add	x1, x1, x0
  41f3bc:	add	x0, sp, #0x30
  41f3c0:	str	x1, [x0, #24]
  41f3c4:	mov	x0, #0x1                   	// #1
  41f3c8:	str	x0, [sp, #240]
  41f3cc:	mov	x0, #0x33                  	// #51
  41f3d0:	str	x0, [sp, #232]
  41f3d4:	mov	x1, #0x40                  	// #64
  41f3d8:	ldr	x0, [sp, #232]
  41f3dc:	sub	x0, x1, x0
  41f3e0:	str	x0, [sp, #224]
  41f3e4:	str	xzr, [sp, #504]
  41f3e8:	str	xzr, [sp, #496]
  41f3ec:	b	41f414 <_obstack_memory_used@@Base+0x39c4>
  41f3f0:	add	x0, sp, #0x30
  41f3f4:	ldr	x1, [sp, #504]
  41f3f8:	ldr	x0, [x0, x1, lsl #3]
  41f3fc:	ldr	x1, [sp, #496]
  41f400:	orr	x0, x1, x0
  41f404:	str	x0, [sp, #496]
  41f408:	ldr	x0, [sp, #504]
  41f40c:	add	x0, x0, #0x1
  41f410:	str	x0, [sp, #504]
  41f414:	ldr	x1, [sp, #504]
  41f418:	ldr	x0, [sp, #240]
  41f41c:	cmp	x1, x0
  41f420:	b.lt	41f3f0 <_obstack_memory_used@@Base+0x39a0>  // b.tstop
  41f424:	ldr	x0, [sp, #232]
  41f428:	cmp	x0, #0x0
  41f42c:	b.ne	41f480 <_obstack_memory_used@@Base+0x3a30>  // b.any
  41f430:	str	xzr, [sp, #504]
  41f434:	b	41f464 <_obstack_memory_used@@Base+0x3a14>
  41f438:	ldr	x1, [sp, #504]
  41f43c:	ldr	x0, [sp, #240]
  41f440:	add	x1, x1, x0
  41f444:	add	x0, sp, #0x30
  41f448:	ldr	x2, [x0, x1, lsl #3]
  41f44c:	add	x0, sp, #0x30
  41f450:	ldr	x1, [sp, #504]
  41f454:	str	x2, [x0, x1, lsl #3]
  41f458:	ldr	x0, [sp, #504]
  41f45c:	add	x0, x0, #0x1
  41f460:	str	x0, [sp, #504]
  41f464:	mov	x1, #0x3                   	// #3
  41f468:	ldr	x0, [sp, #240]
  41f46c:	sub	x0, x1, x0
  41f470:	ldr	x1, [sp, #504]
  41f474:	cmp	x1, x0
  41f478:	b.le	41f438 <_obstack_memory_used@@Base+0x39e8>
  41f47c:	b	41f55c <_obstack_memory_used@@Base+0x3b0c>
  41f480:	add	x0, sp, #0x30
  41f484:	ldr	x1, [sp, #504]
  41f488:	ldr	x0, [x0, x1, lsl #3]
  41f48c:	ldr	x1, [sp, #224]
  41f490:	lsl	x0, x0, x1
  41f494:	ldr	x1, [sp, #496]
  41f498:	orr	x0, x1, x0
  41f49c:	str	x0, [sp, #496]
  41f4a0:	str	xzr, [sp, #504]
  41f4a4:	b	41f500 <_obstack_memory_used@@Base+0x3ab0>
  41f4a8:	ldr	x1, [sp, #504]
  41f4ac:	ldr	x0, [sp, #240]
  41f4b0:	add	x1, x1, x0
  41f4b4:	add	x0, sp, #0x30
  41f4b8:	ldr	x0, [x0, x1, lsl #3]
  41f4bc:	ldr	x1, [sp, #232]
  41f4c0:	lsr	x1, x0, x1
  41f4c4:	ldr	x2, [sp, #504]
  41f4c8:	ldr	x0, [sp, #240]
  41f4cc:	add	x0, x2, x0
  41f4d0:	add	x2, x0, #0x1
  41f4d4:	add	x0, sp, #0x30
  41f4d8:	ldr	x0, [x0, x2, lsl #3]
  41f4dc:	ldr	x2, [sp, #224]
  41f4e0:	lsl	x0, x0, x2
  41f4e4:	orr	x2, x1, x0
  41f4e8:	add	x0, sp, #0x30
  41f4ec:	ldr	x1, [sp, #504]
  41f4f0:	str	x2, [x0, x1, lsl #3]
  41f4f4:	ldr	x0, [sp, #504]
  41f4f8:	add	x0, x0, #0x1
  41f4fc:	str	x0, [sp, #504]
  41f500:	mov	x1, #0x3                   	// #3
  41f504:	ldr	x0, [sp, #240]
  41f508:	sub	x0, x1, x0
  41f50c:	ldr	x1, [sp, #504]
  41f510:	cmp	x1, x0
  41f514:	b.lt	41f4a8 <_obstack_memory_used@@Base+0x3a58>  // b.tstop
  41f518:	add	x0, sp, #0x30
  41f51c:	ldr	x1, [x0, #24]
  41f520:	ldr	x0, [sp, #232]
  41f524:	mov	w3, w0
  41f528:	ldr	x0, [sp, #504]
  41f52c:	add	x2, x0, #0x1
  41f530:	str	x2, [sp, #504]
  41f534:	lsr	x2, x1, x3
  41f538:	add	x1, sp, #0x30
  41f53c:	str	x2, [x1, x0, lsl #3]
  41f540:	b	41f55c <_obstack_memory_used@@Base+0x3b0c>
  41f544:	add	x0, sp, #0x30
  41f548:	ldr	x1, [sp, #504]
  41f54c:	str	xzr, [x0, x1, lsl #3]
  41f550:	ldr	x0, [sp, #504]
  41f554:	add	x0, x0, #0x1
  41f558:	str	x0, [sp, #504]
  41f55c:	ldr	x0, [sp, #504]
  41f560:	cmp	x0, #0x3
  41f564:	b.le	41f544 <_obstack_memory_used@@Base+0x3af4>
  41f568:	ldr	x0, [sp, #496]
  41f56c:	cmp	x0, #0x0
  41f570:	cset	w0, ne  // ne = any
  41f574:	and	w0, w0, #0xff
  41f578:	str	w0, [sp, #220]
  41f57c:	add	x0, sp, #0x30
  41f580:	ldr	x1, [x0]
  41f584:	ldrsw	x0, [sp, #220]
  41f588:	orr	x1, x1, x0
  41f58c:	add	x0, sp, #0x30
  41f590:	str	x1, [x0]
  41f594:	add	x0, sp, #0x30
  41f598:	ldr	x0, [x0]
  41f59c:	str	x0, [sp, #568]
  41f5a0:	add	x0, sp, #0x30
  41f5a4:	ldr	x0, [x0, #8]
  41f5a8:	str	x0, [sp, #560]
  41f5ac:	ldr	x0, [sp, #560]
  41f5b0:	and	x0, x0, #0x10000000000000
  41f5b4:	cmp	x0, #0x0
  41f5b8:	b.eq	41f5f0 <_obstack_memory_used@@Base+0x3ba0>  // b.none
  41f5bc:	ldr	x0, [sp, #560]
  41f5c0:	lsl	x1, x0, #63
  41f5c4:	ldr	x0, [sp, #568]
  41f5c8:	lsr	x0, x0, #1
  41f5cc:	orr	x1, x1, x0
  41f5d0:	ldr	x0, [sp, #568]
  41f5d4:	and	x0, x0, #0x1
  41f5d8:	orr	x0, x1, x0
  41f5dc:	str	x0, [sp, #568]
  41f5e0:	ldr	x0, [sp, #560]
  41f5e4:	lsr	x0, x0, #1
  41f5e8:	str	x0, [sp, #560]
  41f5ec:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f5f0:	ldr	x0, [sp, #576]
  41f5f4:	sub	x0, x0, #0x1
  41f5f8:	str	x0, [sp, #576]
  41f5fc:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f600:	ldr	x0, [sp, #616]
  41f604:	and	x0, x0, #0x800000000000
  41f608:	cmp	x0, #0x0
  41f60c:	b.eq	41f63c <_obstack_memory_used@@Base+0x3bec>  // b.none
  41f610:	ldr	x0, [sp, #648]
  41f614:	and	x0, x0, #0x800000000000
  41f618:	cmp	x0, #0x0
  41f61c:	b.ne	41f63c <_obstack_memory_used@@Base+0x3bec>  // b.any
  41f620:	ldr	x0, [sp, #472]
  41f624:	str	x0, [sp, #656]
  41f628:	ldr	x0, [sp, #640]
  41f62c:	str	x0, [sp, #568]
  41f630:	ldr	x0, [sp, #648]
  41f634:	str	x0, [sp, #560]
  41f638:	b	41f654 <_obstack_memory_used@@Base+0x3c04>
  41f63c:	ldr	x0, [sp, #480]
  41f640:	str	x0, [sp, #656]
  41f644:	ldr	x0, [sp, #608]
  41f648:	str	x0, [sp, #568]
  41f64c:	ldr	x0, [sp, #616]
  41f650:	str	x0, [sp, #560]
  41f654:	mov	x0, #0x3                   	// #3
  41f658:	str	x0, [sp, #664]
  41f65c:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f660:	ldr	x0, [sp, #480]
  41f664:	str	x0, [sp, #656]
  41f668:	ldr	x0, [sp, #608]
  41f66c:	str	x0, [sp, #568]
  41f670:	ldr	x0, [sp, #616]
  41f674:	str	x0, [sp, #560]
  41f678:	ldr	x0, [sp, #584]
  41f67c:	str	x0, [sp, #664]
  41f680:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f684:	ldr	x0, [sp, #472]
  41f688:	str	x0, [sp, #656]
  41f68c:	ldr	x0, [sp, #640]
  41f690:	str	x0, [sp, #568]
  41f694:	ldr	x0, [sp, #648]
  41f698:	str	x0, [sp, #560]
  41f69c:	ldr	x0, [sp, #632]
  41f6a0:	str	x0, [sp, #664]
  41f6a4:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f6a8:	str	xzr, [sp, #656]
  41f6ac:	mov	x0, #0x3                   	// #3
  41f6b0:	str	x0, [sp, #664]
  41f6b4:	mov	x0, #0xffffffffffffffff    	// #-1
  41f6b8:	str	x0, [sp, #568]
  41f6bc:	mov	x0, #0xffffffffffff        	// #281474976710655
  41f6c0:	str	x0, [sp, #560]
  41f6c4:	ldr	w0, [sp, #596]
  41f6c8:	orr	w0, w0, #0x1
  41f6cc:	str	w0, [sp, #596]
  41f6d0:	b	41f6d4 <_obstack_memory_used@@Base+0x3c84>
  41f6d4:	ldr	x0, [sp, #664]
  41f6d8:	cmp	x0, #0x3
  41f6dc:	b.eq	41fe70 <_obstack_memory_used@@Base+0x4420>  // b.none
  41f6e0:	ldr	x0, [sp, #664]
  41f6e4:	cmp	x0, #0x3
  41f6e8:	b.gt	41fe88 <_obstack_memory_used@@Base+0x4438>
  41f6ec:	ldr	x0, [sp, #664]
  41f6f0:	cmp	x0, #0x2
  41f6f4:	b.eq	41fe5c <_obstack_memory_used@@Base+0x440c>  // b.none
  41f6f8:	ldr	x0, [sp, #664]
  41f6fc:	cmp	x0, #0x2
  41f700:	b.gt	41fe88 <_obstack_memory_used@@Base+0x4438>
  41f704:	ldr	x0, [sp, #664]
  41f708:	cmp	x0, #0x0
  41f70c:	b.eq	41f720 <_obstack_memory_used@@Base+0x3cd0>  // b.none
  41f710:	ldr	x0, [sp, #664]
  41f714:	cmp	x0, #0x1
  41f718:	b.eq	41fe4c <_obstack_memory_used@@Base+0x43fc>  // b.none
  41f71c:	b	41fe88 <_obstack_memory_used@@Base+0x4438>
  41f720:	ldr	x1, [sp, #576]
  41f724:	mov	x0, #0x3fff                	// #16383
  41f728:	add	x0, x1, x0
  41f72c:	str	x0, [sp, #576]
  41f730:	ldr	x0, [sp, #576]
  41f734:	cmp	x0, #0x0
  41f738:	b.le	41f9b4 <_obstack_memory_used@@Base+0x3f64>
  41f73c:	ldr	x0, [sp, #568]
  41f740:	and	x0, x0, #0x7
  41f744:	cmp	x0, #0x0
  41f748:	b.eq	41f890 <_obstack_memory_used@@Base+0x3e40>  // b.none
  41f74c:	ldr	w0, [sp, #596]
  41f750:	orr	w0, w0, #0x10
  41f754:	str	w0, [sp, #596]
  41f758:	ldr	x0, [sp, #488]
  41f75c:	and	x0, x0, #0xc00000
  41f760:	cmp	x0, #0xc00, lsl #12
  41f764:	b.eq	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.none
  41f768:	cmp	x0, #0xc00, lsl #12
  41f76c:	b.hi	41f89c <_obstack_memory_used@@Base+0x3e4c>  // b.pmore
  41f770:	cmp	x0, #0x800, lsl #12
  41f774:	b.eq	41f838 <_obstack_memory_used@@Base+0x3de8>  // b.none
  41f778:	cmp	x0, #0x800, lsl #12
  41f77c:	b.hi	41f89c <_obstack_memory_used@@Base+0x3e4c>  // b.pmore
  41f780:	cmp	x0, #0x0
  41f784:	b.eq	41f794 <_obstack_memory_used@@Base+0x3d44>  // b.none
  41f788:	cmp	x0, #0x400, lsl #12
  41f78c:	b.eq	41f7e0 <_obstack_memory_used@@Base+0x3d90>  // b.none
  41f790:	b	41f89c <_obstack_memory_used@@Base+0x3e4c>
  41f794:	ldr	x0, [sp, #568]
  41f798:	and	x0, x0, #0xf
  41f79c:	cmp	x0, #0x4
  41f7a0:	b.eq	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.none
  41f7a4:	ldr	x0, [sp, #568]
  41f7a8:	add	x0, x0, #0x4
  41f7ac:	str	x0, [sp, #144]
  41f7b0:	ldr	x1, [sp, #144]
  41f7b4:	ldr	x0, [sp, #568]
  41f7b8:	cmp	x1, x0
  41f7bc:	cset	w0, cc  // cc = lo, ul, last
  41f7c0:	and	w0, w0, #0xff
  41f7c4:	and	x0, x0, #0xff
  41f7c8:	ldr	x1, [sp, #560]
  41f7cc:	add	x0, x1, x0
  41f7d0:	str	x0, [sp, #560]
  41f7d4:	ldr	x0, [sp, #144]
  41f7d8:	str	x0, [sp, #568]
  41f7dc:	b	41f898 <_obstack_memory_used@@Base+0x3e48>
  41f7e0:	ldr	x0, [sp, #656]
  41f7e4:	cmp	x0, #0x0
  41f7e8:	b.ne	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.any
  41f7ec:	ldr	x0, [sp, #568]
  41f7f0:	and	x0, x0, #0x7
  41f7f4:	cmp	x0, #0x0
  41f7f8:	b.eq	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.none
  41f7fc:	ldr	x0, [sp, #568]
  41f800:	add	x0, x0, #0x8
  41f804:	str	x0, [sp, #152]
  41f808:	ldr	x1, [sp, #152]
  41f80c:	ldr	x0, [sp, #568]
  41f810:	cmp	x1, x0
  41f814:	cset	w0, cc  // cc = lo, ul, last
  41f818:	and	w0, w0, #0xff
  41f81c:	and	x0, x0, #0xff
  41f820:	ldr	x1, [sp, #560]
  41f824:	add	x0, x1, x0
  41f828:	str	x0, [sp, #560]
  41f82c:	ldr	x0, [sp, #152]
  41f830:	str	x0, [sp, #568]
  41f834:	b	41f898 <_obstack_memory_used@@Base+0x3e48>
  41f838:	ldr	x0, [sp, #656]
  41f83c:	cmp	x0, #0x0
  41f840:	b.eq	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.none
  41f844:	ldr	x0, [sp, #568]
  41f848:	and	x0, x0, #0x7
  41f84c:	cmp	x0, #0x0
  41f850:	b.eq	41f898 <_obstack_memory_used@@Base+0x3e48>  // b.none
  41f854:	ldr	x0, [sp, #568]
  41f858:	add	x0, x0, #0x8
  41f85c:	str	x0, [sp, #160]
  41f860:	ldr	x1, [sp, #160]
  41f864:	ldr	x0, [sp, #568]
  41f868:	cmp	x1, x0
  41f86c:	cset	w0, cc  // cc = lo, ul, last
  41f870:	and	w0, w0, #0xff
  41f874:	and	x0, x0, #0xff
  41f878:	ldr	x1, [sp, #560]
  41f87c:	add	x0, x1, x0
  41f880:	str	x0, [sp, #560]
  41f884:	ldr	x0, [sp, #160]
  41f888:	str	x0, [sp, #568]
  41f88c:	b	41f898 <_obstack_memory_used@@Base+0x3e48>
  41f890:	nop
  41f894:	b	41f89c <_obstack_memory_used@@Base+0x3e4c>
  41f898:	nop
  41f89c:	ldr	x0, [sp, #560]
  41f8a0:	and	x0, x0, #0x10000000000000
  41f8a4:	cmp	x0, #0x0
  41f8a8:	b.eq	41f8c4 <_obstack_memory_used@@Base+0x3e74>  // b.none
  41f8ac:	ldr	x0, [sp, #560]
  41f8b0:	and	x0, x0, #0xffefffffffffffff
  41f8b4:	str	x0, [sp, #560]
  41f8b8:	ldr	x0, [sp, #576]
  41f8bc:	add	x0, x0, #0x1
  41f8c0:	str	x0, [sp, #576]
  41f8c4:	ldr	x0, [sp, #568]
  41f8c8:	lsr	x1, x0, #3
  41f8cc:	ldr	x0, [sp, #560]
  41f8d0:	lsl	x0, x0, #61
  41f8d4:	orr	x0, x1, x0
  41f8d8:	str	x0, [sp, #568]
  41f8dc:	ldr	x0, [sp, #560]
  41f8e0:	lsr	x0, x0, #3
  41f8e4:	str	x0, [sp, #560]
  41f8e8:	ldr	x1, [sp, #576]
  41f8ec:	mov	x0, #0x7ffe                	// #32766
  41f8f0:	cmp	x1, x0
  41f8f4:	b.le	41fe84 <_obstack_memory_used@@Base+0x4434>
  41f8f8:	ldr	x0, [sp, #488]
  41f8fc:	and	x0, x0, #0xc00000
  41f900:	cmp	x0, #0x800, lsl #12
  41f904:	b.eq	41f948 <_obstack_memory_used@@Base+0x3ef8>  // b.none
  41f908:	cmp	x0, #0x800, lsl #12
  41f90c:	b.hi	41f960 <_obstack_memory_used@@Base+0x3f10>  // b.pmore
  41f910:	cmp	x0, #0x0
  41f914:	b.eq	41f924 <_obstack_memory_used@@Base+0x3ed4>  // b.none
  41f918:	cmp	x0, #0x400, lsl #12
  41f91c:	b.eq	41f930 <_obstack_memory_used@@Base+0x3ee0>  // b.none
  41f920:	b	41f960 <_obstack_memory_used@@Base+0x3f10>
  41f924:	mov	x0, #0x2                   	// #2
  41f928:	str	x0, [sp, #664]
  41f92c:	b	41f95c <_obstack_memory_used@@Base+0x3f0c>
  41f930:	ldr	x0, [sp, #656]
  41f934:	cmp	x0, #0x0
  41f938:	b.ne	41f95c <_obstack_memory_used@@Base+0x3f0c>  // b.any
  41f93c:	mov	x0, #0x2                   	// #2
  41f940:	str	x0, [sp, #664]
  41f944:	b	41f95c <_obstack_memory_used@@Base+0x3f0c>
  41f948:	ldr	x0, [sp, #656]
  41f94c:	cmp	x0, #0x0
  41f950:	b.eq	41f95c <_obstack_memory_used@@Base+0x3f0c>  // b.none
  41f954:	mov	x0, #0x2                   	// #2
  41f958:	str	x0, [sp, #664]
  41f95c:	nop
  41f960:	ldr	x0, [sp, #664]
  41f964:	cmp	x0, #0x2
  41f968:	b.ne	41f980 <_obstack_memory_used@@Base+0x3f30>  // b.any
  41f96c:	mov	x0, #0x7fff                	// #32767
  41f970:	str	x0, [sp, #576]
  41f974:	str	xzr, [sp, #568]
  41f978:	str	xzr, [sp, #560]
  41f97c:	b	41f998 <_obstack_memory_used@@Base+0x3f48>
  41f980:	mov	x0, #0x7ffe                	// #32766
  41f984:	str	x0, [sp, #576]
  41f988:	mov	x0, #0xffffffffffffffff    	// #-1
  41f98c:	str	x0, [sp, #568]
  41f990:	mov	x0, #0xffffffffffffffff    	// #-1
  41f994:	str	x0, [sp, #560]
  41f998:	ldr	w0, [sp, #596]
  41f99c:	orr	w0, w0, #0x4
  41f9a0:	str	w0, [sp, #596]
  41f9a4:	ldr	w0, [sp, #596]
  41f9a8:	orr	w0, w0, #0x10
  41f9ac:	str	w0, [sp, #596]
  41f9b0:	b	41fe84 <_obstack_memory_used@@Base+0x4434>
  41f9b4:	mov	w0, #0x1                   	// #1
  41f9b8:	str	w0, [sp, #216]
  41f9bc:	mov	x1, #0x1                   	// #1
  41f9c0:	ldr	x0, [sp, #576]
  41f9c4:	sub	x0, x1, x0
  41f9c8:	str	x0, [sp, #576]
  41f9cc:	ldr	x0, [sp, #576]
  41f9d0:	cmp	x0, #0x74
  41f9d4:	b.gt	41fcac <_obstack_memory_used@@Base+0x425c>
  41f9d8:	ldr	x0, [sp, #576]
  41f9dc:	cmp	x0, #0x3f
  41f9e0:	b.gt	41fa58 <_obstack_memory_used@@Base+0x4008>
  41f9e4:	ldr	x0, [sp, #576]
  41f9e8:	mov	w1, w0
  41f9ec:	mov	w0, #0x40                  	// #64
  41f9f0:	sub	w0, w0, w1
  41f9f4:	ldr	x1, [sp, #560]
  41f9f8:	lsl	x1, x1, x0
  41f9fc:	ldr	x0, [sp, #576]
  41fa00:	mov	w2, w0
  41fa04:	ldr	x0, [sp, #568]
  41fa08:	lsr	x0, x0, x2
  41fa0c:	orr	x1, x1, x0
  41fa10:	ldr	x0, [sp, #576]
  41fa14:	mov	w2, w0
  41fa18:	mov	w0, #0x40                  	// #64
  41fa1c:	sub	w0, w0, w2
  41fa20:	ldr	x2, [sp, #568]
  41fa24:	lsl	x0, x2, x0
  41fa28:	cmp	x0, #0x0
  41fa2c:	cset	w0, ne  // ne = any
  41fa30:	and	w0, w0, #0xff
  41fa34:	sxtw	x0, w0
  41fa38:	orr	x0, x1, x0
  41fa3c:	str	x0, [sp, #568]
  41fa40:	ldr	x0, [sp, #576]
  41fa44:	mov	w1, w0
  41fa48:	ldr	x0, [sp, #560]
  41fa4c:	lsr	x0, x0, x1
  41fa50:	str	x0, [sp, #560]
  41fa54:	b	41fab8 <_obstack_memory_used@@Base+0x4068>
  41fa58:	ldr	x0, [sp, #576]
  41fa5c:	sub	w0, w0, #0x40
  41fa60:	ldr	x1, [sp, #560]
  41fa64:	lsr	x1, x1, x0
  41fa68:	ldr	x0, [sp, #576]
  41fa6c:	cmp	x0, #0x40
  41fa70:	b.eq	41fa90 <_obstack_memory_used@@Base+0x4040>  // b.none
  41fa74:	ldr	x0, [sp, #576]
  41fa78:	mov	w2, w0
  41fa7c:	mov	w0, #0x80                  	// #128
  41fa80:	sub	w0, w0, w2
  41fa84:	ldr	x2, [sp, #560]
  41fa88:	lsl	x0, x2, x0
  41fa8c:	b	41fa94 <_obstack_memory_used@@Base+0x4044>
  41fa90:	mov	x0, #0x0                   	// #0
  41fa94:	ldr	x2, [sp, #568]
  41fa98:	orr	x0, x0, x2
  41fa9c:	cmp	x0, #0x0
  41faa0:	cset	w0, ne  // ne = any
  41faa4:	and	w0, w0, #0xff
  41faa8:	and	x0, x0, #0xff
  41faac:	orr	x0, x1, x0
  41fab0:	str	x0, [sp, #568]
  41fab4:	str	xzr, [sp, #560]
  41fab8:	ldr	x0, [sp, #568]
  41fabc:	and	x0, x0, #0x7
  41fac0:	cmp	x0, #0x0
  41fac4:	b.eq	41fc0c <_obstack_memory_used@@Base+0x41bc>  // b.none
  41fac8:	ldr	w0, [sp, #596]
  41facc:	orr	w0, w0, #0x10
  41fad0:	str	w0, [sp, #596]
  41fad4:	ldr	x0, [sp, #488]
  41fad8:	and	x0, x0, #0xc00000
  41fadc:	cmp	x0, #0xc00, lsl #12
  41fae0:	b.eq	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.none
  41fae4:	cmp	x0, #0xc00, lsl #12
  41fae8:	b.hi	41fc18 <_obstack_memory_used@@Base+0x41c8>  // b.pmore
  41faec:	cmp	x0, #0x800, lsl #12
  41faf0:	b.eq	41fbb4 <_obstack_memory_used@@Base+0x4164>  // b.none
  41faf4:	cmp	x0, #0x800, lsl #12
  41faf8:	b.hi	41fc18 <_obstack_memory_used@@Base+0x41c8>  // b.pmore
  41fafc:	cmp	x0, #0x0
  41fb00:	b.eq	41fb10 <_obstack_memory_used@@Base+0x40c0>  // b.none
  41fb04:	cmp	x0, #0x400, lsl #12
  41fb08:	b.eq	41fb5c <_obstack_memory_used@@Base+0x410c>  // b.none
  41fb0c:	b	41fc18 <_obstack_memory_used@@Base+0x41c8>
  41fb10:	ldr	x0, [sp, #568]
  41fb14:	and	x0, x0, #0xf
  41fb18:	cmp	x0, #0x4
  41fb1c:	b.eq	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.none
  41fb20:	ldr	x0, [sp, #568]
  41fb24:	add	x0, x0, #0x4
  41fb28:	str	x0, [sp, #168]
  41fb2c:	ldr	x1, [sp, #168]
  41fb30:	ldr	x0, [sp, #568]
  41fb34:	cmp	x1, x0
  41fb38:	cset	w0, cc  // cc = lo, ul, last
  41fb3c:	and	w0, w0, #0xff
  41fb40:	and	x0, x0, #0xff
  41fb44:	ldr	x1, [sp, #560]
  41fb48:	add	x0, x1, x0
  41fb4c:	str	x0, [sp, #560]
  41fb50:	ldr	x0, [sp, #168]
  41fb54:	str	x0, [sp, #568]
  41fb58:	b	41fc14 <_obstack_memory_used@@Base+0x41c4>
  41fb5c:	ldr	x0, [sp, #656]
  41fb60:	cmp	x0, #0x0
  41fb64:	b.ne	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.any
  41fb68:	ldr	x0, [sp, #568]
  41fb6c:	and	x0, x0, #0x7
  41fb70:	cmp	x0, #0x0
  41fb74:	b.eq	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.none
  41fb78:	ldr	x0, [sp, #568]
  41fb7c:	add	x0, x0, #0x8
  41fb80:	str	x0, [sp, #176]
  41fb84:	ldr	x1, [sp, #176]
  41fb88:	ldr	x0, [sp, #568]
  41fb8c:	cmp	x1, x0
  41fb90:	cset	w0, cc  // cc = lo, ul, last
  41fb94:	and	w0, w0, #0xff
  41fb98:	and	x0, x0, #0xff
  41fb9c:	ldr	x1, [sp, #560]
  41fba0:	add	x0, x1, x0
  41fba4:	str	x0, [sp, #560]
  41fba8:	ldr	x0, [sp, #176]
  41fbac:	str	x0, [sp, #568]
  41fbb0:	b	41fc14 <_obstack_memory_used@@Base+0x41c4>
  41fbb4:	ldr	x0, [sp, #656]
  41fbb8:	cmp	x0, #0x0
  41fbbc:	b.eq	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.none
  41fbc0:	ldr	x0, [sp, #568]
  41fbc4:	and	x0, x0, #0x7
  41fbc8:	cmp	x0, #0x0
  41fbcc:	b.eq	41fc14 <_obstack_memory_used@@Base+0x41c4>  // b.none
  41fbd0:	ldr	x0, [sp, #568]
  41fbd4:	add	x0, x0, #0x8
  41fbd8:	str	x0, [sp, #184]
  41fbdc:	ldr	x1, [sp, #184]
  41fbe0:	ldr	x0, [sp, #568]
  41fbe4:	cmp	x1, x0
  41fbe8:	cset	w0, cc  // cc = lo, ul, last
  41fbec:	and	w0, w0, #0xff
  41fbf0:	and	x0, x0, #0xff
  41fbf4:	ldr	x1, [sp, #560]
  41fbf8:	add	x0, x1, x0
  41fbfc:	str	x0, [sp, #560]
  41fc00:	ldr	x0, [sp, #184]
  41fc04:	str	x0, [sp, #568]
  41fc08:	b	41fc14 <_obstack_memory_used@@Base+0x41c4>
  41fc0c:	nop
  41fc10:	b	41fc18 <_obstack_memory_used@@Base+0x41c8>
  41fc14:	nop
  41fc18:	ldr	x0, [sp, #560]
  41fc1c:	and	x0, x0, #0x8000000000000
  41fc20:	cmp	x0, #0x0
  41fc24:	b.eq	41fc48 <_obstack_memory_used@@Base+0x41f8>  // b.none
  41fc28:	mov	x0, #0x1                   	// #1
  41fc2c:	str	x0, [sp, #576]
  41fc30:	str	xzr, [sp, #568]
  41fc34:	str	xzr, [sp, #560]
  41fc38:	ldr	w0, [sp, #596]
  41fc3c:	orr	w0, w0, #0x10
  41fc40:	str	w0, [sp, #596]
  41fc44:	b	41fc70 <_obstack_memory_used@@Base+0x4220>
  41fc48:	str	xzr, [sp, #576]
  41fc4c:	ldr	x0, [sp, #568]
  41fc50:	lsr	x1, x0, #3
  41fc54:	ldr	x0, [sp, #560]
  41fc58:	lsl	x0, x0, #61
  41fc5c:	orr	x0, x1, x0
  41fc60:	str	x0, [sp, #568]
  41fc64:	ldr	x0, [sp, #560]
  41fc68:	lsr	x0, x0, #3
  41fc6c:	str	x0, [sp, #560]
  41fc70:	ldr	w0, [sp, #216]
  41fc74:	cmp	w0, #0x0
  41fc78:	b.eq	41fe84 <_obstack_memory_used@@Base+0x4434>  // b.none
  41fc7c:	ldr	w0, [sp, #596]
  41fc80:	and	w0, w0, #0x10
  41fc84:	cmp	w0, #0x0
  41fc88:	b.ne	41fc9c <_obstack_memory_used@@Base+0x424c>  // b.any
  41fc8c:	ldr	x0, [sp, #488]
  41fc90:	and	x0, x0, #0x800
  41fc94:	cmp	x0, #0x0
  41fc98:	b.eq	41fe84 <_obstack_memory_used@@Base+0x4434>  // b.none
  41fc9c:	ldr	w0, [sp, #596]
  41fca0:	orr	w0, w0, #0x8
  41fca4:	str	w0, [sp, #596]
  41fca8:	b	41fe84 <_obstack_memory_used@@Base+0x4434>
  41fcac:	str	xzr, [sp, #576]
  41fcb0:	ldr	x1, [sp, #560]
  41fcb4:	ldr	x0, [sp, #568]
  41fcb8:	orr	x0, x1, x0
  41fcbc:	cmp	x0, #0x0
  41fcc0:	b.eq	41fe3c <_obstack_memory_used@@Base+0x43ec>  // b.none
  41fcc4:	mov	x0, #0x1                   	// #1
  41fcc8:	str	x0, [sp, #568]
  41fccc:	str	xzr, [sp, #560]
  41fcd0:	ldr	x0, [sp, #568]
  41fcd4:	and	x0, x0, #0x7
  41fcd8:	cmp	x0, #0x0
  41fcdc:	b.eq	41fe24 <_obstack_memory_used@@Base+0x43d4>  // b.none
  41fce0:	ldr	w0, [sp, #596]
  41fce4:	orr	w0, w0, #0x10
  41fce8:	str	w0, [sp, #596]
  41fcec:	ldr	x0, [sp, #488]
  41fcf0:	and	x0, x0, #0xc00000
  41fcf4:	cmp	x0, #0xc00, lsl #12
  41fcf8:	b.eq	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.none
  41fcfc:	cmp	x0, #0xc00, lsl #12
  41fd00:	b.hi	41fe30 <_obstack_memory_used@@Base+0x43e0>  // b.pmore
  41fd04:	cmp	x0, #0x800, lsl #12
  41fd08:	b.eq	41fdcc <_obstack_memory_used@@Base+0x437c>  // b.none
  41fd0c:	cmp	x0, #0x800, lsl #12
  41fd10:	b.hi	41fe30 <_obstack_memory_used@@Base+0x43e0>  // b.pmore
  41fd14:	cmp	x0, #0x0
  41fd18:	b.eq	41fd28 <_obstack_memory_used@@Base+0x42d8>  // b.none
  41fd1c:	cmp	x0, #0x400, lsl #12
  41fd20:	b.eq	41fd74 <_obstack_memory_used@@Base+0x4324>  // b.none
  41fd24:	b	41fe30 <_obstack_memory_used@@Base+0x43e0>
  41fd28:	ldr	x0, [sp, #568]
  41fd2c:	and	x0, x0, #0xf
  41fd30:	cmp	x0, #0x4
  41fd34:	b.eq	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.none
  41fd38:	ldr	x0, [sp, #568]
  41fd3c:	add	x0, x0, #0x4
  41fd40:	str	x0, [sp, #192]
  41fd44:	ldr	x1, [sp, #192]
  41fd48:	ldr	x0, [sp, #568]
  41fd4c:	cmp	x1, x0
  41fd50:	cset	w0, cc  // cc = lo, ul, last
  41fd54:	and	w0, w0, #0xff
  41fd58:	and	x0, x0, #0xff
  41fd5c:	ldr	x1, [sp, #560]
  41fd60:	add	x0, x1, x0
  41fd64:	str	x0, [sp, #560]
  41fd68:	ldr	x0, [sp, #192]
  41fd6c:	str	x0, [sp, #568]
  41fd70:	b	41fe2c <_obstack_memory_used@@Base+0x43dc>
  41fd74:	ldr	x0, [sp, #656]
  41fd78:	cmp	x0, #0x0
  41fd7c:	b.ne	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.any
  41fd80:	ldr	x0, [sp, #568]
  41fd84:	and	x0, x0, #0x7
  41fd88:	cmp	x0, #0x0
  41fd8c:	b.eq	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.none
  41fd90:	ldr	x0, [sp, #568]
  41fd94:	add	x0, x0, #0x8
  41fd98:	str	x0, [sp, #200]
  41fd9c:	ldr	x1, [sp, #200]
  41fda0:	ldr	x0, [sp, #568]
  41fda4:	cmp	x1, x0
  41fda8:	cset	w0, cc  // cc = lo, ul, last
  41fdac:	and	w0, w0, #0xff
  41fdb0:	and	x0, x0, #0xff
  41fdb4:	ldr	x1, [sp, #560]
  41fdb8:	add	x0, x1, x0
  41fdbc:	str	x0, [sp, #560]
  41fdc0:	ldr	x0, [sp, #200]
  41fdc4:	str	x0, [sp, #568]
  41fdc8:	b	41fe2c <_obstack_memory_used@@Base+0x43dc>
  41fdcc:	ldr	x0, [sp, #656]
  41fdd0:	cmp	x0, #0x0
  41fdd4:	b.eq	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.none
  41fdd8:	ldr	x0, [sp, #568]
  41fddc:	and	x0, x0, #0x7
  41fde0:	cmp	x0, #0x0
  41fde4:	b.eq	41fe2c <_obstack_memory_used@@Base+0x43dc>  // b.none
  41fde8:	ldr	x0, [sp, #568]
  41fdec:	add	x0, x0, #0x8
  41fdf0:	str	x0, [sp, #208]
  41fdf4:	ldr	x1, [sp, #208]
  41fdf8:	ldr	x0, [sp, #568]
  41fdfc:	cmp	x1, x0
  41fe00:	cset	w0, cc  // cc = lo, ul, last
  41fe04:	and	w0, w0, #0xff
  41fe08:	and	x0, x0, #0xff
  41fe0c:	ldr	x1, [sp, #560]
  41fe10:	add	x0, x1, x0
  41fe14:	str	x0, [sp, #560]
  41fe18:	ldr	x0, [sp, #208]
  41fe1c:	str	x0, [sp, #568]
  41fe20:	b	41fe2c <_obstack_memory_used@@Base+0x43dc>
  41fe24:	nop
  41fe28:	b	41fe30 <_obstack_memory_used@@Base+0x43e0>
  41fe2c:	nop
  41fe30:	ldr	x0, [sp, #568]
  41fe34:	lsr	x0, x0, #3
  41fe38:	str	x0, [sp, #568]
  41fe3c:	ldr	w0, [sp, #596]
  41fe40:	orr	w0, w0, #0x8
  41fe44:	str	w0, [sp, #596]
  41fe48:	b	41fe84 <_obstack_memory_used@@Base+0x4434>
  41fe4c:	str	xzr, [sp, #576]
  41fe50:	str	xzr, [sp, #568]
  41fe54:	str	xzr, [sp, #560]
  41fe58:	b	41fe84 <_obstack_memory_used@@Base+0x4434>
  41fe5c:	mov	x0, #0x7fff                	// #32767
  41fe60:	str	x0, [sp, #576]
  41fe64:	str	xzr, [sp, #568]
  41fe68:	str	xzr, [sp, #560]
  41fe6c:	b	41fe84 <_obstack_memory_used@@Base+0x4434>
  41fe70:	mov	x0, #0x7fff                	// #32767
  41fe74:	str	x0, [sp, #576]
  41fe78:	ldr	x0, [sp, #560]
  41fe7c:	orr	x0, x0, #0x800000000000
  41fe80:	str	x0, [sp, #560]
  41fe84:	nop
  41fe88:	ldr	x0, [sp, #568]
  41fe8c:	str	x0, [sp, #80]
  41fe90:	ldr	x0, [sp, #560]
  41fe94:	and	x1, x0, #0xffffffffffff
  41fe98:	ldr	x0, [sp, #88]
  41fe9c:	bfxil	x0, x1, #0, #48
  41fea0:	str	x0, [sp, #88]
  41fea4:	ldr	x0, [sp, #576]
  41fea8:	and	w0, w0, #0x7fff
  41feac:	and	w1, w0, #0xffff
  41feb0:	ldrh	w0, [sp, #94]
  41feb4:	bfxil	w0, w1, #0, #15
  41feb8:	strh	w0, [sp, #94]
  41febc:	ldr	x0, [sp, #656]
  41fec0:	and	w0, w0, #0x1
  41fec4:	and	w1, w0, #0xff
  41fec8:	ldrb	w0, [sp, #95]
  41fecc:	bfi	w0, w1, #7, #1
  41fed0:	strb	w0, [sp, #95]
  41fed4:	ldr	q0, [sp, #80]
  41fed8:	str	q0, [sp, #128]
  41fedc:	ldrsw	x0, [sp, #596]
  41fee0:	cmp	x0, #0x0
  41fee4:	b.eq	41fef0 <_obstack_memory_used@@Base+0x44a0>  // b.none
  41fee8:	ldr	w0, [sp, #596]
  41feec:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  41fef0:	ldr	q0, [sp, #128]
  41fef4:	ldp	x29, x30, [sp]
  41fef8:	add	sp, sp, #0x2a0
  41fefc:	ret
  41ff00:	sub	sp, sp, #0x60
  41ff04:	str	w0, [sp, #12]
  41ff08:	ldr	w0, [sp, #12]
  41ff0c:	cmp	w0, #0x0
  41ff10:	b.eq	420008 <_obstack_memory_used@@Base+0x45b8>  // b.none
  41ff14:	ldr	w0, [sp, #12]
  41ff18:	str	w0, [sp, #36]
  41ff1c:	str	xzr, [sp, #40]
  41ff20:	ldr	x0, [sp, #40]
  41ff24:	cmp	x0, #0x0
  41ff28:	b.eq	41ff38 <_obstack_memory_used@@Base+0x44e8>  // b.none
  41ff2c:	ldr	w0, [sp, #36]
  41ff30:	neg	w0, w0
  41ff34:	str	w0, [sp, #36]
  41ff38:	ldr	w0, [sp, #36]
  41ff3c:	clz	x0, x0
  41ff40:	str	w0, [sp, #52]
  41ff44:	mov	w1, #0x403e                	// #16446
  41ff48:	ldr	w0, [sp, #52]
  41ff4c:	sub	w0, w1, w0
  41ff50:	sxtw	x0, w0
  41ff54:	str	x0, [sp, #56]
  41ff58:	ldr	w0, [sp, #36]
  41ff5c:	str	x0, [sp, #64]
  41ff60:	str	xzr, [sp, #72]
  41ff64:	mov	x1, #0x406f                	// #16495
  41ff68:	ldr	x0, [sp, #56]
  41ff6c:	sub	x0, x1, x0
  41ff70:	cmp	x0, #0x0
  41ff74:	b.le	420018 <_obstack_memory_used@@Base+0x45c8>
  41ff78:	mov	x1, #0x406f                	// #16495
  41ff7c:	ldr	x0, [sp, #56]
  41ff80:	sub	x0, x1, x0
  41ff84:	cmp	x0, #0x3f
  41ff88:	b.gt	41ffe4 <_obstack_memory_used@@Base+0x4594>
  41ff8c:	ldr	x0, [sp, #56]
  41ff90:	mov	w1, w0
  41ff94:	mov	w0, #0x406f                	// #16495
  41ff98:	sub	w0, w0, w1
  41ff9c:	ldr	x1, [sp, #72]
  41ffa0:	lsl	x1, x1, x0
  41ffa4:	ldr	x0, [sp, #56]
  41ffa8:	mov	w2, w0
  41ffac:	mov	w0, #0xffffbfd1            	// #-16431
  41ffb0:	add	w0, w2, w0
  41ffb4:	ldr	x2, [sp, #64]
  41ffb8:	lsr	x0, x2, x0
  41ffbc:	orr	x0, x1, x0
  41ffc0:	str	x0, [sp, #72]
  41ffc4:	ldr	x0, [sp, #56]
  41ffc8:	mov	w1, w0
  41ffcc:	mov	w0, #0x406f                	// #16495
  41ffd0:	sub	w0, w0, w1
  41ffd4:	ldr	x1, [sp, #64]
  41ffd8:	lsl	x0, x1, x0
  41ffdc:	str	x0, [sp, #64]
  41ffe0:	b	420018 <_obstack_memory_used@@Base+0x45c8>
  41ffe4:	ldr	x0, [sp, #56]
  41ffe8:	mov	w1, w0
  41ffec:	mov	w0, #0x402f                	// #16431
  41fff0:	sub	w0, w0, w1
  41fff4:	ldr	x1, [sp, #64]
  41fff8:	lsl	x0, x1, x0
  41fffc:	str	x0, [sp, #72]
  420000:	str	xzr, [sp, #64]
  420004:	b	420018 <_obstack_memory_used@@Base+0x45c8>
  420008:	str	xzr, [sp, #40]
  42000c:	str	xzr, [sp, #56]
  420010:	str	xzr, [sp, #64]
  420014:	str	xzr, [sp, #72]
  420018:	ldr	x0, [sp, #64]
  42001c:	str	x0, [sp, #16]
  420020:	ldr	x0, [sp, #72]
  420024:	and	x1, x0, #0xffffffffffff
  420028:	ldr	x0, [sp, #24]
  42002c:	bfxil	x0, x1, #0, #48
  420030:	str	x0, [sp, #24]
  420034:	ldr	x0, [sp, #56]
  420038:	and	w0, w0, #0x7fff
  42003c:	and	w1, w0, #0xffff
  420040:	ldrh	w0, [sp, #30]
  420044:	bfxil	w0, w1, #0, #15
  420048:	strh	w0, [sp, #30]
  42004c:	ldr	x0, [sp, #40]
  420050:	and	w0, w0, #0x1
  420054:	and	w1, w0, #0xff
  420058:	ldrb	w0, [sp, #31]
  42005c:	bfi	w0, w1, #7, #1
  420060:	strb	w0, [sp, #31]
  420064:	ldr	q0, [sp, #16]
  420068:	str	q0, [sp, #80]
  42006c:	ldr	q0, [sp, #80]
  420070:	add	sp, sp, #0x60
  420074:	ret
  420078:	stp	x29, x30, [sp, #-112]!
  42007c:	mov	x29, sp
  420080:	str	q0, [sp, #16]
  420084:	str	wzr, [sp, #104]
  420088:	str	xzr, [sp, #80]
  42008c:	mrs	x0, fpcr
  420090:	str	x0, [sp, #80]
  420094:	ldr	q0, [sp, #16]
  420098:	str	q0, [sp, #32]
  42009c:	ldr	x0, [sp, #32]
  4200a0:	str	x0, [sp, #96]
  4200a4:	ldr	x0, [sp, #40]
  4200a8:	ubfx	x0, x0, #0, #48
  4200ac:	str	x0, [sp, #72]
  4200b0:	ldrh	w0, [sp, #46]
  4200b4:	ubfx	x0, x0, #0, #15
  4200b8:	and	w0, w0, #0xffff
  4200bc:	and	x0, x0, #0xffff
  4200c0:	str	x0, [sp, #64]
  4200c4:	ldrb	w0, [sp, #47]
  4200c8:	ubfx	x0, x0, #7, #1
  4200cc:	and	w0, w0, #0xff
  4200d0:	and	x0, x0, #0xff
  4200d4:	str	x0, [sp, #56]
  4200d8:	ldr	x1, [sp, #64]
  4200dc:	mov	x0, #0x3ffe                	// #16382
  4200e0:	cmp	x1, x0
  4200e4:	b.gt	42012c <_obstack_memory_used@@Base+0x46dc>
  4200e8:	str	xzr, [sp, #88]
  4200ec:	ldr	x0, [sp, #64]
  4200f0:	cmp	x0, #0x0
  4200f4:	b.ne	42011c <_obstack_memory_used@@Base+0x46cc>  // b.any
  4200f8:	ldr	x1, [sp, #72]
  4200fc:	ldr	x0, [sp, #96]
  420100:	orr	x0, x1, x0
  420104:	cmp	x0, #0x0
  420108:	b.eq	4202f0 <_obstack_memory_used@@Base+0x48a0>  // b.none
  42010c:	ldr	w0, [sp, #104]
  420110:	orr	w0, w0, #0x10
  420114:	str	w0, [sp, #104]
  420118:	b	4202f0 <_obstack_memory_used@@Base+0x48a0>
  42011c:	ldr	w0, [sp, #104]
  420120:	orr	w0, w0, #0x10
  420124:	str	w0, [sp, #104]
  420128:	b	4202f0 <_obstack_memory_used@@Base+0x48a0>
  42012c:	ldr	x0, [sp, #56]
  420130:	cmp	x0, #0x0
  420134:	b.eq	420140 <_obstack_memory_used@@Base+0x46f0>  // b.none
  420138:	mov	x0, #0x403e                	// #16446
  42013c:	b	420144 <_obstack_memory_used@@Base+0x46f4>
  420140:	mov	x0, #0x403f                	// #16447
  420144:	ldr	x1, [sp, #64]
  420148:	cmp	x0, x1
  42014c:	b.le	42015c <_obstack_memory_used@@Base+0x470c>
  420150:	ldr	x0, [sp, #56]
  420154:	cmp	x0, #0x0
  420158:	b.eq	420188 <_obstack_memory_used@@Base+0x4738>  // b.none
  42015c:	str	xzr, [sp, #88]
  420160:	ldr	x0, [sp, #56]
  420164:	cmp	x0, #0x0
  420168:	b.ne	420178 <_obstack_memory_used@@Base+0x4728>  // b.any
  42016c:	ldr	x0, [sp, #88]
  420170:	mvn	x0, x0
  420174:	str	x0, [sp, #88]
  420178:	ldr	w0, [sp, #104]
  42017c:	orr	w0, w0, #0x1
  420180:	str	w0, [sp, #104]
  420184:	b	4202f0 <_obstack_memory_used@@Base+0x48a0>
  420188:	str	wzr, [sp, #108]
  42018c:	ldr	x0, [sp, #72]
  420190:	orr	x0, x0, #0x1000000000000
  420194:	str	x0, [sp, #72]
  420198:	ldr	x1, [sp, #64]
  42019c:	mov	x0, #0x406e                	// #16494
  4201a0:	cmp	x1, x0
  4201a4:	b.le	4201d0 <_obstack_memory_used@@Base+0x4780>
  4201a8:	ldr	x0, [sp, #96]
  4201ac:	str	x0, [sp, #88]
  4201b0:	ldr	x0, [sp, #64]
  4201b4:	mov	w1, w0
  4201b8:	mov	w0, #0xffffbf91            	// #-16495
  4201bc:	add	w0, w1, w0
  4201c0:	ldr	x1, [sp, #88]
  4201c4:	lsl	x0, x1, x0
  4201c8:	str	x0, [sp, #88]
  4201cc:	b	4202d8 <_obstack_memory_used@@Base+0x4888>
  4201d0:	mov	x1, #0x406f                	// #16495
  4201d4:	ldr	x0, [sp, #64]
  4201d8:	sub	x0, x1, x0
  4201dc:	cmp	x0, #0x3f
  4201e0:	b.gt	420264 <_obstack_memory_used@@Base+0x4814>
  4201e4:	ldr	x0, [sp, #64]
  4201e8:	mov	w1, w0
  4201ec:	mov	w0, #0xffffbfd1            	// #-16431
  4201f0:	add	w0, w1, w0
  4201f4:	ldr	x1, [sp, #96]
  4201f8:	lsl	x0, x1, x0
  4201fc:	cmp	x0, #0x0
  420200:	cset	w0, ne  // ne = any
  420204:	and	w0, w0, #0xff
  420208:	str	w0, [sp, #108]
  42020c:	ldr	x0, [sp, #64]
  420210:	mov	w1, w0
  420214:	mov	w0, #0xffffbfd1            	// #-16431
  420218:	add	w0, w1, w0
  42021c:	ldr	x1, [sp, #72]
  420220:	lsl	x1, x1, x0
  420224:	ldr	x0, [sp, #64]
  420228:	mov	w2, w0
  42022c:	mov	w0, #0x406f                	// #16495
  420230:	sub	w0, w0, w2
  420234:	ldr	x2, [sp, #96]
  420238:	lsr	x0, x2, x0
  42023c:	orr	x0, x1, x0
  420240:	str	x0, [sp, #96]
  420244:	ldr	x0, [sp, #64]
  420248:	mov	w1, w0
  42024c:	mov	w0, #0x406f                	// #16495
  420250:	sub	w0, w0, w1
  420254:	ldr	x1, [sp, #72]
  420258:	lsr	x0, x1, x0
  42025c:	str	x0, [sp, #72]
  420260:	b	4202d0 <_obstack_memory_used@@Base+0x4880>
  420264:	mov	x1, #0x406f                	// #16495
  420268:	ldr	x0, [sp, #64]
  42026c:	sub	x0, x1, x0
  420270:	cmp	x0, #0x40
  420274:	b.eq	420294 <_obstack_memory_used@@Base+0x4844>  // b.none
  420278:	ldr	x0, [sp, #64]
  42027c:	mov	w1, w0
  420280:	mov	w0, #0xffffc011            	// #-16367
  420284:	add	w0, w1, w0
  420288:	ldr	x1, [sp, #72]
  42028c:	lsl	x0, x1, x0
  420290:	b	420298 <_obstack_memory_used@@Base+0x4848>
  420294:	mov	x0, #0x0                   	// #0
  420298:	ldr	x1, [sp, #96]
  42029c:	orr	x0, x0, x1
  4202a0:	cmp	x0, #0x0
  4202a4:	cset	w0, ne  // ne = any
  4202a8:	and	w0, w0, #0xff
  4202ac:	str	w0, [sp, #108]
  4202b0:	ldr	x0, [sp, #64]
  4202b4:	mov	w1, w0
  4202b8:	mov	w0, #0x402f                	// #16431
  4202bc:	sub	w0, w0, w1
  4202c0:	ldr	x1, [sp, #72]
  4202c4:	lsr	x0, x1, x0
  4202c8:	str	x0, [sp, #96]
  4202cc:	str	xzr, [sp, #72]
  4202d0:	ldr	x0, [sp, #96]
  4202d4:	str	x0, [sp, #88]
  4202d8:	ldr	w0, [sp, #108]
  4202dc:	cmp	w0, #0x0
  4202e0:	b.eq	4202f0 <_obstack_memory_used@@Base+0x48a0>  // b.none
  4202e4:	ldr	w0, [sp, #104]
  4202e8:	orr	w0, w0, #0x10
  4202ec:	str	w0, [sp, #104]
  4202f0:	ldrsw	x0, [sp, #104]
  4202f4:	cmp	x0, #0x0
  4202f8:	b.eq	420304 <_obstack_memory_used@@Base+0x48b4>  // b.none
  4202fc:	ldr	w0, [sp, #104]
  420300:	bl	420488 <_obstack_memory_used@@Base+0x4a38>
  420304:	ldr	x0, [sp, #88]
  420308:	ldp	x29, x30, [sp], #112
  42030c:	ret
  420310:	sub	sp, sp, #0x60
  420314:	str	x0, [sp, #8]
  420318:	ldr	x0, [sp, #8]
  42031c:	cmp	x0, #0x0
  420320:	b.eq	420418 <_obstack_memory_used@@Base+0x49c8>  // b.none
  420324:	ldr	x0, [sp, #8]
  420328:	str	x0, [sp, #32]
  42032c:	str	xzr, [sp, #40]
  420330:	ldr	x0, [sp, #40]
  420334:	cmp	x0, #0x0
  420338:	b.eq	420348 <_obstack_memory_used@@Base+0x48f8>  // b.none
  42033c:	ldr	x0, [sp, #32]
  420340:	neg	x0, x0
  420344:	str	x0, [sp, #32]
  420348:	ldr	x0, [sp, #32]
  42034c:	clz	x0, x0
  420350:	str	w0, [sp, #52]
  420354:	mov	w1, #0x403e                	// #16446
  420358:	ldr	w0, [sp, #52]
  42035c:	sub	w0, w1, w0
  420360:	sxtw	x0, w0
  420364:	str	x0, [sp, #56]
  420368:	ldr	x0, [sp, #32]
  42036c:	str	x0, [sp, #64]
  420370:	str	xzr, [sp, #72]
  420374:	mov	x1, #0x406f                	// #16495
  420378:	ldr	x0, [sp, #56]
  42037c:	sub	x0, x1, x0
  420380:	cmp	x0, #0x0
  420384:	b.le	420428 <_obstack_memory_used@@Base+0x49d8>
  420388:	mov	x1, #0x406f                	// #16495
  42038c:	ldr	x0, [sp, #56]
  420390:	sub	x0, x1, x0
  420394:	cmp	x0, #0x3f
  420398:	b.gt	4203f4 <_obstack_memory_used@@Base+0x49a4>
  42039c:	ldr	x0, [sp, #56]
  4203a0:	mov	w1, w0
  4203a4:	mov	w0, #0x406f                	// #16495
  4203a8:	sub	w0, w0, w1
  4203ac:	ldr	x1, [sp, #72]
  4203b0:	lsl	x1, x1, x0
  4203b4:	ldr	x0, [sp, #56]
  4203b8:	mov	w2, w0
  4203bc:	mov	w0, #0xffffbfd1            	// #-16431
  4203c0:	add	w0, w2, w0
  4203c4:	ldr	x2, [sp, #64]
  4203c8:	lsr	x0, x2, x0
  4203cc:	orr	x0, x1, x0
  4203d0:	str	x0, [sp, #72]
  4203d4:	ldr	x0, [sp, #56]
  4203d8:	mov	w1, w0
  4203dc:	mov	w0, #0x406f                	// #16495
  4203e0:	sub	w0, w0, w1
  4203e4:	ldr	x1, [sp, #64]
  4203e8:	lsl	x0, x1, x0
  4203ec:	str	x0, [sp, #64]
  4203f0:	b	420428 <_obstack_memory_used@@Base+0x49d8>
  4203f4:	ldr	x0, [sp, #56]
  4203f8:	mov	w1, w0
  4203fc:	mov	w0, #0x402f                	// #16431
  420400:	sub	w0, w0, w1
  420404:	ldr	x1, [sp, #64]
  420408:	lsl	x0, x1, x0
  42040c:	str	x0, [sp, #72]
  420410:	str	xzr, [sp, #64]
  420414:	b	420428 <_obstack_memory_used@@Base+0x49d8>
  420418:	str	xzr, [sp, #40]
  42041c:	str	xzr, [sp, #56]
  420420:	str	xzr, [sp, #64]
  420424:	str	xzr, [sp, #72]
  420428:	ldr	x0, [sp, #64]
  42042c:	str	x0, [sp, #16]
  420430:	ldr	x0, [sp, #72]
  420434:	and	x1, x0, #0xffffffffffff
  420438:	ldr	x0, [sp, #24]
  42043c:	bfxil	x0, x1, #0, #48
  420440:	str	x0, [sp, #24]
  420444:	ldr	x0, [sp, #56]
  420448:	and	w0, w0, #0x7fff
  42044c:	and	w1, w0, #0xffff
  420450:	ldrh	w0, [sp, #30]
  420454:	bfxil	w0, w1, #0, #15
  420458:	strh	w0, [sp, #30]
  42045c:	ldr	x0, [sp, #40]
  420460:	and	w0, w0, #0x1
  420464:	and	w1, w0, #0xff
  420468:	ldrb	w0, [sp, #31]
  42046c:	bfi	w0, w1, #7, #1
  420470:	strb	w0, [sp, #31]
  420474:	ldr	q0, [sp, #16]
  420478:	str	q0, [sp, #80]
  42047c:	ldr	q0, [sp, #80]
  420480:	add	sp, sp, #0x60
  420484:	ret
  420488:	sub	sp, sp, #0x30
  42048c:	str	w0, [sp, #12]
  420490:	mov	w0, #0x7f7fffff            	// #2139095039
  420494:	fmov	s0, w0
  420498:	str	s0, [sp, #44]
  42049c:	movi	v0.2s, #0x80, lsl #16
  4204a0:	str	s0, [sp, #40]
  4204a4:	mov	w0, #0xc5ae                	// #50606
  4204a8:	movk	w0, #0x749d, lsl #16
  4204ac:	fmov	s0, w0
  4204b0:	str	s0, [sp, #36]
  4204b4:	str	wzr, [sp, #32]
  4204b8:	fmov	s0, #1.000000000000000000e+00
  4204bc:	str	s0, [sp, #28]
  4204c0:	ldr	w0, [sp, #12]
  4204c4:	and	w0, w0, #0x1
  4204c8:	cmp	w0, #0x0
  4204cc:	b.eq	4204e0 <_obstack_memory_used@@Base+0x4a90>  // b.none
  4204d0:	ldr	s1, [sp, #32]
  4204d4:	fdiv	s0, s1, s1
  4204d8:	mrs	x0, fpsr
  4204dc:	str	w0, [sp, #24]
  4204e0:	ldr	w0, [sp, #12]
  4204e4:	and	w0, w0, #0x2
  4204e8:	cmp	w0, #0x0
  4204ec:	b.eq	420504 <_obstack_memory_used@@Base+0x4ab4>  // b.none
  4204f0:	ldr	s1, [sp, #28]
  4204f4:	ldr	s2, [sp, #32]
  4204f8:	fdiv	s0, s1, s2
  4204fc:	mrs	x0, fpsr
  420500:	str	w0, [sp, #24]
  420504:	ldr	w0, [sp, #12]
  420508:	and	w0, w0, #0x4
  42050c:	cmp	w0, #0x0
  420510:	b.eq	420528 <_obstack_memory_used@@Base+0x4ad8>  // b.none
  420514:	ldr	s1, [sp, #44]
  420518:	ldr	s2, [sp, #36]
  42051c:	fadd	s0, s1, s2
  420520:	mrs	x0, fpsr
  420524:	str	w0, [sp, #24]
  420528:	ldr	w0, [sp, #12]
  42052c:	and	w0, w0, #0x8
  420530:	cmp	w0, #0x0
  420534:	b.eq	420548 <_obstack_memory_used@@Base+0x4af8>  // b.none
  420538:	ldr	s1, [sp, #40]
  42053c:	fmul	s0, s1, s1
  420540:	mrs	x0, fpsr
  420544:	str	w0, [sp, #24]
  420548:	ldr	w0, [sp, #12]
  42054c:	and	w0, w0, #0x10
  420550:	cmp	w0, #0x0
  420554:	b.eq	42056c <_obstack_memory_used@@Base+0x4b1c>  // b.none
  420558:	ldr	s1, [sp, #44]
  42055c:	ldr	s2, [sp, #28]
  420560:	fsub	s0, s1, s2
  420564:	mrs	x0, fpsr
  420568:	str	w0, [sp, #24]
  42056c:	nop
  420570:	add	sp, sp, #0x30
  420574:	ret
  420578:	stp	x29, x30, [sp, #-64]!
  42057c:	mov	x29, sp
  420580:	stp	x19, x20, [sp, #16]
  420584:	adrp	x20, 43a000 <_obstack_memory_used@@Base+0x1e5b0>
  420588:	add	x20, x20, #0xde0
  42058c:	stp	x21, x22, [sp, #32]
  420590:	adrp	x21, 43a000 <_obstack_memory_used@@Base+0x1e5b0>
  420594:	add	x21, x21, #0xdd8
  420598:	sub	x20, x20, x21
  42059c:	mov	w22, w0
  4205a0:	stp	x23, x24, [sp, #48]
  4205a4:	mov	x23, x1
  4205a8:	mov	x24, x2
  4205ac:	bl	402448 <mbrtowc@plt-0x38>
  4205b0:	cmp	xzr, x20, asr #3
  4205b4:	b.eq	4205e0 <_obstack_memory_used@@Base+0x4b90>  // b.none
  4205b8:	asr	x20, x20, #3
  4205bc:	mov	x19, #0x0                   	// #0
  4205c0:	ldr	x3, [x21, x19, lsl #3]
  4205c4:	mov	x2, x24
  4205c8:	add	x19, x19, #0x1
  4205cc:	mov	x1, x23
  4205d0:	mov	w0, w22
  4205d4:	blr	x3
  4205d8:	cmp	x20, x19
  4205dc:	b.ne	4205c0 <_obstack_memory_used@@Base+0x4b70>  // b.any
  4205e0:	ldp	x19, x20, [sp, #16]
  4205e4:	ldp	x21, x22, [sp, #32]
  4205e8:	ldp	x23, x24, [sp, #48]
  4205ec:	ldp	x29, x30, [sp], #64
  4205f0:	ret
  4205f4:	nop
  4205f8:	ret
  4205fc:	nop
  420600:	adrp	x2, 43b000 <_obstack_memory_used@@Base+0x1f5b0>
  420604:	mov	x1, #0x0                   	// #0
  420608:	ldr	x2, [x2, #896]
  42060c:	b	4025f0 <__cxa_atexit@plt>
  420610:	mov	x2, x1
  420614:	mov	x1, x0
  420618:	mov	w0, #0x0                   	// #0
  42061c:	b	402af0 <__xstat@plt>
  420620:	mov	x2, x1
  420624:	mov	w1, w0
  420628:	mov	w0, #0x0                   	// #0
  42062c:	b	402a20 <__fxstat@plt>
  420630:	mov	x2, x1
  420634:	mov	x1, x0
  420638:	mov	w0, #0x0                   	// #0
  42063c:	b	4029c0 <__lxstat@plt>
  420640:	mov	x4, x1
  420644:	mov	x5, x2
  420648:	mov	w1, w0
  42064c:	mov	x2, x4
  420650:	mov	w0, #0x0                   	// #0
  420654:	mov	w4, w3
  420658:	mov	x3, x5
  42065c:	b	402b60 <__fxstatat@plt>

Disassembly of section .fini:

0000000000420660 <.fini>:
  420660:	stp	x29, x30, [sp, #-16]!
  420664:	mov	x29, sp
  420668:	ldp	x29, x30, [sp], #16
  42066c:	ret
