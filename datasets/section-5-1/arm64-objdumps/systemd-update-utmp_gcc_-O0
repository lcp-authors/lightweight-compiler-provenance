
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-update-utmp_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400df0 <_init>:
  400df0:	stp	x29, x30, [sp, #-16]!
  400df4:	mov	x29, sp
  400df8:	bl	401050 <call_weak_fn>
  400dfc:	ldp	x29, x30, [sp], #16
  400e00:	ret

Disassembly of section .plt:

0000000000400e10 <.plt>:
  400e10:	stp	x16, x30, [sp, #-16]!
  400e14:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e18:	ldr	x17, [x16, #3840]
  400e1c:	add	x16, x16, #0xf00
  400e20:	br	x17
  400e24:	nop
  400e28:	nop
  400e2c:	nop

0000000000400e30 <bus_error_message@plt>:
  400e30:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e34:	ldr	x17, [x16, #3848]
  400e38:	add	x16, x16, #0xf08
  400e3c:	br	x17

0000000000400e40 <unit_dbus_path_from_name@plt>:
  400e40:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e44:	ldr	x17, [x16, #3856]
  400e48:	add	x16, x16, #0xf10
  400e4c:	br	x17

0000000000400e50 <getppid@plt>:
  400e50:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e54:	ldr	x17, [x16, #3864]
  400e58:	add	x16, x16, #0xf18
  400e5c:	br	x17

0000000000400e60 <__libc_start_main@plt>:
  400e60:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e64:	ldr	x17, [x16, #3872]
  400e68:	add	x16, x16, #0xf20
  400e6c:	br	x17

0000000000400e70 <sd_bus_get_property_trivial@plt>:
  400e70:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e74:	ldr	x17, [x16, #3880]
  400e78:	add	x16, x16, #0xf28
  400e7c:	br	x17

0000000000400e80 <__gmon_start__@plt>:
  400e80:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e84:	ldr	x17, [x16, #3888]
  400e88:	add	x16, x16, #0xf30
  400e8c:	br	x17

0000000000400e90 <utmp_put_shutdown@plt>:
  400e90:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400e94:	ldr	x17, [x16, #3896]
  400e98:	add	x16, x16, #0xf38
  400e9c:	br	x17

0000000000400ea0 <polkit_agent_close@plt>:
  400ea0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ea4:	ldr	x17, [x16, #3904]
  400ea8:	add	x16, x16, #0xf40
  400eac:	br	x17

0000000000400eb0 <bus_connect_system_systemd@plt>:
  400eb0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400eb4:	ldr	x17, [x16, #3912]
  400eb8:	add	x16, x16, #0xf48
  400ebc:	br	x17

0000000000400ec0 <log_setup_service@plt>:
  400ec0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ec4:	ldr	x17, [x16, #3920]
  400ec8:	add	x16, x16, #0xf50
  400ecc:	br	x17

0000000000400ed0 <log_assert_failed_realm@plt>:
  400ed0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ed4:	ldr	x17, [x16, #3928]
  400ed8:	add	x16, x16, #0xf58
  400edc:	br	x17

0000000000400ee0 <umask@plt>:
  400ee0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ee4:	ldr	x17, [x16, #3936]
  400ee8:	add	x16, x16, #0xf60
  400eec:	br	x17

0000000000400ef0 <abort@plt>:
  400ef0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ef4:	ldr	x17, [x16, #3944]
  400ef8:	add	x16, x16, #0xf68
  400efc:	br	x17

0000000000400f00 <utmp_put_reboot@plt>:
  400f00:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f04:	ldr	x17, [x16, #3952]
  400f08:	add	x16, x16, #0xf70
  400f0c:	br	x17

0000000000400f10 <__stack_chk_fail@plt>:
  400f10:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f14:	ldr	x17, [x16, #3960]
  400f18:	add	x16, x16, #0xf78
  400f1c:	br	x17

0000000000400f20 <ask_password_agent_close@plt>:
  400f20:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f24:	ldr	x17, [x16, #3968]
  400f28:	add	x16, x16, #0xf80
  400f2c:	br	x17

0000000000400f30 <pager_close@plt>:
  400f30:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f34:	ldr	x17, [x16, #3976]
  400f38:	add	x16, x16, #0xf88
  400f3c:	br	x17

0000000000400f40 <sd_bus_error_free@plt>:
  400f40:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f44:	ldr	x17, [x16, #3984]
  400f48:	add	x16, x16, #0xf90
  400f4c:	br	x17

0000000000400f50 <strv_find@plt>:
  400f50:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f54:	ldr	x17, [x16, #3992]
  400f58:	add	x16, x16, #0xf98
  400f5c:	br	x17

0000000000400f60 <log_internal_realm@plt>:
  400f60:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f64:	ldr	x17, [x16, #4000]
  400f68:	add	x16, x16, #0xfa0
  400f6c:	br	x17

0000000000400f70 <sd_bus_flush_close_unref@plt>:
  400f70:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f74:	ldr	x17, [x16, #4008]
  400f78:	add	x16, x16, #0xfa8
  400f7c:	br	x17

0000000000400f80 <strcmp@plt>:
  400f80:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f84:	ldr	x17, [x16, #4016]
  400f88:	add	x16, x16, #0xfb0
  400f8c:	br	x17

0000000000400f90 <sd_bus_get_property_string@plt>:
  400f90:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400f94:	ldr	x17, [x16, #4024]
  400f98:	add	x16, x16, #0xfb8
  400f9c:	br	x17

0000000000400fa0 <utmp_put_runlevel@plt>:
  400fa0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400fa4:	ldr	x17, [x16, #4032]
  400fa8:	add	x16, x16, #0xfc0
  400fac:	br	x17

0000000000400fb0 <free@plt>:
  400fb0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400fb4:	ldr	x17, [x16, #4040]
  400fb8:	add	x16, x16, #0xfc8
  400fbc:	br	x17

0000000000400fc0 <mac_selinux_finish@plt>:
  400fc0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400fc4:	ldr	x17, [x16, #4048]
  400fc8:	add	x16, x16, #0xfd0
  400fcc:	br	x17

0000000000400fd0 <log_oom_internal@plt>:
  400fd0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400fd4:	ldr	x17, [x16, #4056]
  400fd8:	add	x16, x16, #0xfd8
  400fdc:	br	x17

0000000000400fe0 <utmp_get_runlevel@plt>:
  400fe0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400fe4:	ldr	x17, [x16, #4064]
  400fe8:	add	x16, x16, #0xfe0
  400fec:	br	x17

0000000000400ff0 <log_get_max_level_realm@plt>:
  400ff0:	adrp	x16, 412000 <__FRAME_END__+0xf7f8>
  400ff4:	ldr	x17, [x16, #4072]
  400ff8:	add	x16, x16, #0xfe8
  400ffc:	br	x17

Disassembly of section .text:

0000000000401000 <_start>:
  401000:	mov	x29, #0x0                   	// #0
  401004:	mov	x30, #0x0                   	// #0
  401008:	mov	x5, x0
  40100c:	ldr	x1, [sp]
  401010:	add	x2, sp, #0x8
  401014:	mov	x6, sp
  401018:	movz	x0, #0x0, lsl #48
  40101c:	movk	x0, #0x0, lsl #32
  401020:	movk	x0, #0x40, lsl #16
  401024:	movk	x0, #0x2030
  401028:	movz	x3, #0x0, lsl #48
  40102c:	movk	x3, #0x0, lsl #32
  401030:	movk	x3, #0x40, lsl #16
  401034:	movk	x3, #0x2080
  401038:	movz	x4, #0x0, lsl #48
  40103c:	movk	x4, #0x0, lsl #32
  401040:	movk	x4, #0x40, lsl #16
  401044:	movk	x4, #0x2100
  401048:	bl	400e60 <__libc_start_main@plt>
  40104c:	bl	400ef0 <abort@plt>

0000000000401050 <call_weak_fn>:
  401050:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401054:	ldr	x0, [x0, #4088]
  401058:	cbz	x0, 401060 <call_weak_fn+0x10>
  40105c:	b	400e80 <__gmon_start__@plt>
  401060:	ret

0000000000401064 <deregister_tm_clones>:
  401064:	stp	x29, x30, [sp, #-32]!
  401068:	mov	x29, sp
  40106c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401070:	add	x0, x0, #0x0
  401074:	str	x0, [sp, #24]
  401078:	ldr	x0, [sp, #24]
  40107c:	str	x0, [sp, #24]
  401080:	ldr	x1, [sp, #24]
  401084:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401088:	add	x0, x0, #0x0
  40108c:	cmp	x1, x0
  401090:	b.eq	4010cc <deregister_tm_clones+0x68>  // b.none
  401094:	adrp	x0, 402000 <run+0x35c>
  401098:	add	x0, x0, #0x118
  40109c:	ldr	x0, [x0]
  4010a0:	str	x0, [sp, #16]
  4010a4:	ldr	x0, [sp, #16]
  4010a8:	str	x0, [sp, #16]
  4010ac:	ldr	x0, [sp, #16]
  4010b0:	cmp	x0, #0x0
  4010b4:	b.eq	4010d0 <deregister_tm_clones+0x6c>  // b.none
  4010b8:	ldr	x1, [sp, #16]
  4010bc:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010c0:	add	x0, x0, #0x0
  4010c4:	blr	x1
  4010c8:	b	4010d0 <deregister_tm_clones+0x6c>
  4010cc:	nop
  4010d0:	ldp	x29, x30, [sp], #32
  4010d4:	ret

00000000004010d8 <register_tm_clones>:
  4010d8:	stp	x29, x30, [sp, #-48]!
  4010dc:	mov	x29, sp
  4010e0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010e4:	add	x0, x0, #0x0
  4010e8:	str	x0, [sp, #40]
  4010ec:	ldr	x0, [sp, #40]
  4010f0:	str	x0, [sp, #40]
  4010f4:	ldr	x1, [sp, #40]
  4010f8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010fc:	add	x0, x0, #0x0
  401100:	sub	x0, x1, x0
  401104:	asr	x0, x0, #3
  401108:	lsr	x1, x0, #63
  40110c:	add	x0, x1, x0
  401110:	asr	x0, x0, #1
  401114:	str	x0, [sp, #32]
  401118:	ldr	x0, [sp, #32]
  40111c:	cmp	x0, #0x0
  401120:	b.eq	401160 <register_tm_clones+0x88>  // b.none
  401124:	adrp	x0, 402000 <run+0x35c>
  401128:	add	x0, x0, #0x120
  40112c:	ldr	x0, [x0]
  401130:	str	x0, [sp, #24]
  401134:	ldr	x0, [sp, #24]
  401138:	str	x0, [sp, #24]
  40113c:	ldr	x0, [sp, #24]
  401140:	cmp	x0, #0x0
  401144:	b.eq	401164 <register_tm_clones+0x8c>  // b.none
  401148:	ldr	x2, [sp, #24]
  40114c:	ldr	x1, [sp, #32]
  401150:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401154:	add	x0, x0, #0x0
  401158:	blr	x2
  40115c:	b	401164 <register_tm_clones+0x8c>
  401160:	nop
  401164:	ldp	x29, x30, [sp], #48
  401168:	ret

000000000040116c <__do_global_dtors_aux>:
  40116c:	stp	x29, x30, [sp, #-16]!
  401170:	mov	x29, sp
  401174:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401178:	add	x0, x0, #0xc
  40117c:	ldrb	w0, [x0]
  401180:	and	x0, x0, #0xff
  401184:	cmp	x0, #0x0
  401188:	b.ne	4011a4 <__do_global_dtors_aux+0x38>  // b.any
  40118c:	bl	401064 <deregister_tm_clones>
  401190:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401194:	add	x0, x0, #0xc
  401198:	mov	w1, #0x1                   	// #1
  40119c:	strb	w1, [x0]
  4011a0:	b	4011a8 <__do_global_dtors_aux+0x3c>
  4011a4:	nop
  4011a8:	ldp	x29, x30, [sp], #16
  4011ac:	ret

00000000004011b0 <frame_dummy>:
  4011b0:	stp	x29, x30, [sp, #-16]!
  4011b4:	mov	x29, sp
  4011b8:	bl	4010d8 <register_tm_clones>
  4011bc:	nop
  4011c0:	ldp	x29, x30, [sp], #16
  4011c4:	ret

00000000004011c8 <ALIGN_TO>:
  4011c8:	sub	sp, sp, #0x10
  4011cc:	str	x0, [sp, #8]
  4011d0:	str	x1, [sp]
  4011d4:	ldr	x1, [sp, #8]
  4011d8:	ldr	x0, [sp]
  4011dc:	add	x0, x1, x0
  4011e0:	sub	x1, x0, #0x1
  4011e4:	ldr	x0, [sp]
  4011e8:	neg	x0, x0
  4011ec:	and	x0, x1, x0
  4011f0:	add	sp, sp, #0x10
  4011f4:	ret

00000000004011f8 <freep>:
  4011f8:	stp	x29, x30, [sp, #-32]!
  4011fc:	mov	x29, sp
  401200:	str	x0, [sp, #24]
  401204:	ldr	x0, [sp, #24]
  401208:	ldr	x0, [x0]
  40120c:	bl	400fb0 <free@plt>
  401210:	nop
  401214:	ldp	x29, x30, [sp], #32
  401218:	ret

000000000040121c <save_argc_argv>:
  40121c:	sub	sp, sp, #0x10
  401220:	str	w0, [sp, #12]
  401224:	str	x1, [sp]
  401228:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40122c:	add	x0, x0, #0x8
  401230:	ldr	w1, [sp, #12]
  401234:	str	w1, [x0]
  401238:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40123c:	add	x0, x0, #0x0
  401240:	ldr	x1, [sp]
  401244:	str	x1, [x0]
  401248:	nop
  40124c:	add	sp, sp, #0x10
  401250:	ret

0000000000401254 <static_destruct>:
  401254:	stp	x29, x30, [sp, #-32]!
  401258:	mov	x29, sp
  40125c:	adrp	x0, 402000 <run+0x35c>
  401260:	add	x0, x0, #0x3f0
  401264:	ldr	x0, [x0]
  401268:	cmp	x0, #0x0
  40126c:	b.eq	4012d0 <static_destruct+0x7c>  // b.none
  401270:	adrp	x0, 402000 <run+0x35c>
  401274:	add	x0, x0, #0x3f0
  401278:	ldr	x0, [x0]
  40127c:	mov	x1, #0x8                   	// #8
  401280:	bl	4011c8 <ALIGN_TO>
  401284:	str	x0, [sp, #24]
  401288:	b	4012b4 <static_destruct+0x60>
  40128c:	ldr	x0, [sp, #24]
  401290:	ldr	x1, [x0, #8]
  401294:	ldr	x0, [sp, #24]
  401298:	ldr	x0, [x0]
  40129c:	blr	x1
  4012a0:	ldr	x0, [sp, #24]
  4012a4:	add	x0, x0, #0x10
  4012a8:	mov	x1, #0x8                   	// #8
  4012ac:	bl	4011c8 <ALIGN_TO>
  4012b0:	str	x0, [sp, #24]
  4012b4:	ldr	x1, [sp, #24]
  4012b8:	adrp	x0, 402000 <run+0x35c>
  4012bc:	add	x0, x0, #0x3f8
  4012c0:	ldr	x0, [x0]
  4012c4:	cmp	x1, x0
  4012c8:	b.cc	40128c <static_destruct+0x38>  // b.lo, b.ul, b.last
  4012cc:	b	4012d4 <static_destruct+0x80>
  4012d0:	nop
  4012d4:	ldp	x29, x30, [sp], #32
  4012d8:	ret

00000000004012dc <context_clear>:
  4012dc:	stp	x29, x30, [sp, #-32]!
  4012e0:	mov	x29, sp
  4012e4:	str	x0, [sp, #24]
  4012e8:	ldr	x0, [sp, #24]
  4012ec:	cmp	x0, #0x0
  4012f0:	cset	w0, eq  // eq = none
  4012f4:	and	w0, w0, #0xff
  4012f8:	and	x0, x0, #0xff
  4012fc:	cmp	x0, #0x0
  401300:	b.eq	40132c <context_clear+0x50>  // b.none
  401304:	adrp	x0, 402000 <run+0x35c>
  401308:	add	x1, x0, #0x143
  40130c:	adrp	x0, 402000 <run+0x35c>
  401310:	add	x4, x0, #0x400
  401314:	mov	w3, #0x25                  	// #37
  401318:	mov	x2, x1
  40131c:	adrp	x0, 402000 <run+0x35c>
  401320:	add	x1, x0, #0x168
  401324:	mov	w0, #0x0                   	// #0
  401328:	bl	400ed0 <log_assert_failed_realm@plt>
  40132c:	ldr	x0, [sp, #24]
  401330:	ldr	x0, [x0]
  401334:	bl	400f70 <sd_bus_flush_close_unref@plt>
  401338:	mov	x1, x0
  40133c:	ldr	x0, [sp, #24]
  401340:	str	x1, [x0]
  401344:	nop
  401348:	ldp	x29, x30, [sp], #32
  40134c:	ret

0000000000401350 <get_startup_time>:
  401350:	stp	x29, x30, [sp, #-112]!
  401354:	mov	x29, sp
  401358:	stp	x19, x20, [sp, #16]
  40135c:	str	x0, [sp, #40]
  401360:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401364:	add	x0, x0, #0xcb8
  401368:	ldr	x1, [x0]
  40136c:	str	x1, [sp, #104]
  401370:	mov	x1, #0x0                   	// #0
  401374:	str	xzr, [sp, #80]
  401378:	str	xzr, [sp, #88]
  40137c:	str	wzr, [sp, #96]
  401380:	str	xzr, [sp, #72]
  401384:	ldr	x0, [sp, #40]
  401388:	cmp	x0, #0x0
  40138c:	cset	w0, eq  // eq = none
  401390:	and	w0, w0, #0xff
  401394:	and	x0, x0, #0xff
  401398:	cmp	x0, #0x0
  40139c:	b.eq	4013c8 <get_startup_time+0x78>  // b.none
  4013a0:	adrp	x0, 402000 <run+0x35c>
  4013a4:	add	x1, x0, #0x143
  4013a8:	adrp	x0, 402000 <run+0x35c>
  4013ac:	add	x4, x0, #0x410
  4013b0:	mov	w3, #0x34                  	// #52
  4013b4:	mov	x2, x1
  4013b8:	adrp	x0, 402000 <run+0x35c>
  4013bc:	add	x1, x0, #0x168
  4013c0:	mov	w0, #0x0                   	// #0
  4013c4:	bl	400ed0 <log_assert_failed_realm@plt>
  4013c8:	ldr	x0, [sp, #40]
  4013cc:	ldr	x8, [x0]
  4013d0:	add	x1, sp, #0x48
  4013d4:	add	x0, sp, #0x50
  4013d8:	mov	x7, x1
  4013dc:	mov	w6, #0x74                  	// #116
  4013e0:	mov	x5, x0
  4013e4:	adrp	x0, 402000 <run+0x35c>
  4013e8:	add	x4, x0, #0x170
  4013ec:	adrp	x0, 402000 <run+0x35c>
  4013f0:	add	x3, x0, #0x188
  4013f4:	adrp	x0, 402000 <run+0x35c>
  4013f8:	add	x2, x0, #0x1b0
  4013fc:	adrp	x0, 402000 <run+0x35c>
  401400:	add	x1, x0, #0x1d0
  401404:	mov	x0, x8
  401408:	bl	400e70 <sd_bus_get_property_trivial@plt>
  40140c:	str	w0, [sp, #56]
  401410:	ldr	w0, [sp, #56]
  401414:	cmp	w0, #0x0
  401418:	b.ge	4014ac <get_startup_time+0x15c>  // b.tcont
  40141c:	mov	w0, #0x3                   	// #3
  401420:	str	w0, [sp, #60]
  401424:	ldr	w0, [sp, #56]
  401428:	str	w0, [sp, #64]
  40142c:	str	wzr, [sp, #68]
  401430:	ldr	w0, [sp, #68]
  401434:	bl	400ff0 <log_get_max_level_realm@plt>
  401438:	mov	w1, w0
  40143c:	ldr	w0, [sp, #60]
  401440:	and	w0, w0, #0x7
  401444:	cmp	w1, w0
  401448:	b.lt	40149c <get_startup_time+0x14c>  // b.tstop
  40144c:	ldr	w0, [sp, #68]
  401450:	lsl	w1, w0, #10
  401454:	ldr	w0, [sp, #60]
  401458:	orr	w19, w1, w0
  40145c:	adrp	x0, 402000 <run+0x35c>
  401460:	add	x20, x0, #0x143
  401464:	add	x0, sp, #0x50
  401468:	ldr	w1, [sp, #56]
  40146c:	bl	400e30 <bus_error_message@plt>
  401470:	mov	x6, x0
  401474:	adrp	x0, 402000 <run+0x35c>
  401478:	add	x5, x0, #0x1f0
  40147c:	adrp	x0, 402000 <run+0x35c>
  401480:	add	x4, x0, #0x428
  401484:	mov	w3, #0x3f                  	// #63
  401488:	mov	x2, x20
  40148c:	ldr	w1, [sp, #64]
  401490:	mov	w0, w19
  401494:	bl	400f60 <log_internal_realm@plt>
  401498:	b	4014a4 <get_startup_time+0x154>
  40149c:	ldr	w0, [sp, #64]
  4014a0:	cmp	w0, #0x0
  4014a4:	mov	x19, #0x0                   	// #0
  4014a8:	b	4014b0 <get_startup_time+0x160>
  4014ac:	ldr	x19, [sp, #72]
  4014b0:	add	x0, sp, #0x50
  4014b4:	bl	400f40 <sd_bus_error_free@plt>
  4014b8:	mov	x1, x19
  4014bc:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  4014c0:	add	x0, x0, #0xcb8
  4014c4:	ldr	x2, [sp, #104]
  4014c8:	ldr	x0, [x0]
  4014cc:	eor	x0, x2, x0
  4014d0:	cmp	x0, #0x0
  4014d4:	b.eq	4014dc <get_startup_time+0x18c>  // b.none
  4014d8:	bl	400f10 <__stack_chk_fail@plt>
  4014dc:	mov	x0, x1
  4014e0:	ldp	x19, x20, [sp, #16]
  4014e4:	ldp	x29, x30, [sp], #112
  4014e8:	ret

00000000004014ec <get_current_runlevel>:
  4014ec:	stp	x29, x30, [sp, #-144]!
  4014f0:	mov	x29, sp
  4014f4:	stp	x19, x20, [sp, #16]
  4014f8:	str	x0, [sp, #40]
  4014fc:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401500:	add	x0, x0, #0xcb8
  401504:	ldr	x1, [x0]
  401508:	str	x1, [sp, #136]
  40150c:	mov	x1, #0x0                   	// #0
  401510:	str	xzr, [sp, #88]
  401514:	str	xzr, [sp, #96]
  401518:	str	wzr, [sp, #104]
  40151c:	ldr	x0, [sp, #40]
  401520:	cmp	x0, #0x0
  401524:	cset	w0, eq  // eq = none
  401528:	and	w0, w0, #0xff
  40152c:	and	x0, x0, #0xff
  401530:	cmp	x0, #0x0
  401534:	b.eq	401560 <get_current_runlevel+0x74>  // b.none
  401538:	adrp	x0, 402000 <run+0x35c>
  40153c:	add	x1, x0, #0x143
  401540:	adrp	x0, 402000 <run+0x35c>
  401544:	add	x4, x0, #0x440
  401548:	mov	w3, #0x59                  	// #89
  40154c:	mov	x2, x1
  401550:	adrp	x0, 402000 <run+0x35c>
  401554:	add	x1, x0, #0x168
  401558:	mov	w0, #0x0                   	// #0
  40155c:	bl	400ed0 <log_assert_failed_realm@plt>
  401560:	str	wzr, [sp, #52]
  401564:	b	401744 <get_current_runlevel+0x258>
  401568:	str	xzr, [sp, #72]
  40156c:	str	xzr, [sp, #80]
  401570:	adrp	x0, 402000 <run+0x35c>
  401574:	add	x1, x0, #0x458
  401578:	ldr	w0, [sp, #52]
  40157c:	lsl	x0, x0, #4
  401580:	add	x0, x1, x0
  401584:	ldr	x0, [x0, #8]
  401588:	bl	400e40 <unit_dbus_path_from_name@plt>
  40158c:	str	x0, [sp, #80]
  401590:	ldr	x0, [sp, #80]
  401594:	cmp	x0, #0x0
  401598:	b.ne	4015c4 <get_current_runlevel+0xd8>  // b.any
  40159c:	adrp	x0, 402000 <run+0x35c>
  4015a0:	add	x1, x0, #0x143
  4015a4:	adrp	x0, 402000 <run+0x35c>
  4015a8:	add	x3, x0, #0x488
  4015ac:	mov	w2, #0x60                  	// #96
  4015b0:	mov	w0, #0x0                   	// #0
  4015b4:	bl	400fd0 <log_oom_internal@plt>
  4015b8:	mov	w19, w0
  4015bc:	mov	w20, #0x0                   	// #0
  4015c0:	b	40170c <get_current_runlevel+0x220>
  4015c4:	ldr	x0, [sp, #40]
  4015c8:	ldr	x7, [x0]
  4015cc:	ldr	x1, [sp, #80]
  4015d0:	add	x2, sp, #0x48
  4015d4:	add	x0, sp, #0x58
  4015d8:	mov	x6, x2
  4015dc:	mov	x5, x0
  4015e0:	adrp	x0, 402000 <run+0x35c>
  4015e4:	add	x4, x0, #0x210
  4015e8:	adrp	x0, 402000 <run+0x35c>
  4015ec:	add	x3, x0, #0x220
  4015f0:	mov	x2, x1
  4015f4:	adrp	x0, 402000 <run+0x35c>
  4015f8:	add	x1, x0, #0x1d0
  4015fc:	mov	x0, x7
  401600:	bl	400f90 <sd_bus_get_property_string@plt>
  401604:	str	w0, [sp, #56]
  401608:	ldr	w0, [sp, #56]
  40160c:	cmp	w0, #0x0
  401610:	b.ge	4016b4 <get_current_runlevel+0x1c8>  // b.tcont
  401614:	mov	w0, #0x4                   	// #4
  401618:	str	w0, [sp, #60]
  40161c:	ldr	w0, [sp, #56]
  401620:	str	w0, [sp, #64]
  401624:	str	wzr, [sp, #68]
  401628:	ldr	w0, [sp, #68]
  40162c:	bl	400ff0 <log_get_max_level_realm@plt>
  401630:	mov	w1, w0
  401634:	ldr	w0, [sp, #60]
  401638:	and	w0, w0, #0x7
  40163c:	cmp	w1, w0
  401640:	b.lt	401698 <get_current_runlevel+0x1ac>  // b.tstop
  401644:	ldr	w0, [sp, #68]
  401648:	lsl	w1, w0, #10
  40164c:	ldr	w0, [sp, #60]
  401650:	orr	w19, w1, w0
  401654:	adrp	x0, 402000 <run+0x35c>
  401658:	add	x20, x0, #0x143
  40165c:	add	x0, sp, #0x58
  401660:	ldr	w1, [sp, #56]
  401664:	bl	400e30 <bus_error_message@plt>
  401668:	mov	x6, x0
  40166c:	adrp	x0, 402000 <run+0x35c>
  401670:	add	x5, x0, #0x240
  401674:	adrp	x0, 402000 <run+0x35c>
  401678:	add	x4, x0, #0x488
  40167c:	mov	w3, #0x6b                  	// #107
  401680:	mov	x2, x20
  401684:	ldr	w1, [sp, #64]
  401688:	mov	w0, w19
  40168c:	bl	400f60 <log_internal_realm@plt>
  401690:	mov	w19, w0
  401694:	b	4016ac <get_current_runlevel+0x1c0>
  401698:	ldr	w0, [sp, #64]
  40169c:	cmp	w0, #0x0
  4016a0:	cneg	w0, w0, lt  // lt = tstop
  4016a4:	and	w0, w0, #0xff
  4016a8:	neg	w19, w0
  4016ac:	mov	w20, #0x0                   	// #0
  4016b0:	b	40170c <get_current_runlevel+0x220>
  4016b4:	adrp	x0, 402000 <run+0x35c>
  4016b8:	add	x0, x0, #0x258
  4016bc:	add	x2, sp, #0x70
  4016c0:	mov	x3, x0
  4016c4:	ldp	x0, x1, [x3]
  4016c8:	stp	x0, x1, [x2]
  4016cc:	ldr	x0, [x3, #16]
  4016d0:	str	x0, [x2, #16]
  4016d4:	ldr	x1, [sp, #72]
  4016d8:	add	x0, sp, #0x70
  4016dc:	bl	400f50 <strv_find@plt>
  4016e0:	cmp	x0, #0x0
  4016e4:	b.eq	401708 <get_current_runlevel+0x21c>  // b.none
  4016e8:	adrp	x0, 402000 <run+0x35c>
  4016ec:	add	x1, x0, #0x458
  4016f0:	ldr	w0, [sp, #52]
  4016f4:	lsl	x0, x0, #4
  4016f8:	add	x0, x1, x0
  4016fc:	ldr	w19, [x0]
  401700:	mov	w20, #0x0                   	// #0
  401704:	b	40170c <get_current_runlevel+0x220>
  401708:	mov	w20, #0x1                   	// #1
  40170c:	add	x0, sp, #0x50
  401710:	bl	4011f8 <freep>
  401714:	cmp	w20, #0x1
  401718:	b.eq	401724 <get_current_runlevel+0x238>  // b.none
  40171c:	mov	w20, #0x0                   	// #0
  401720:	b	401728 <get_current_runlevel+0x23c>
  401724:	mov	w20, #0x1                   	// #1
  401728:	add	x0, sp, #0x48
  40172c:	bl	4011f8 <freep>
  401730:	cmp	w20, #0x1
  401734:	b.ne	401754 <get_current_runlevel+0x268>  // b.any
  401738:	ldr	w0, [sp, #52]
  40173c:	add	w0, w0, #0x1
  401740:	str	w0, [sp, #52]
  401744:	ldr	w0, [sp, #52]
  401748:	cmp	w0, #0x2
  40174c:	b.ls	401568 <get_current_runlevel+0x7c>  // b.plast
  401750:	mov	w19, #0x0                   	// #0
  401754:	add	x0, sp, #0x58
  401758:	bl	400f40 <sd_bus_error_free@plt>
  40175c:	mov	w1, w19
  401760:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401764:	add	x0, x0, #0xcb8
  401768:	ldr	x2, [sp, #136]
  40176c:	ldr	x0, [x0]
  401770:	eor	x0, x2, x0
  401774:	cmp	x0, #0x0
  401778:	b.eq	401780 <get_current_runlevel+0x294>  // b.none
  40177c:	bl	400f10 <__stack_chk_fail@plt>
  401780:	mov	w0, w1
  401784:	ldp	x19, x20, [sp, #16]
  401788:	ldp	x29, x30, [sp], #144
  40178c:	ret

0000000000401790 <on_reboot>:
  401790:	stp	x29, x30, [sp, #-64]!
  401794:	mov	x29, sp
  401798:	str	x0, [sp, #24]
  40179c:	str	wzr, [sp, #36]
  4017a0:	ldr	x0, [sp, #24]
  4017a4:	cmp	x0, #0x0
  4017a8:	cset	w0, eq  // eq = none
  4017ac:	and	w0, w0, #0xff
  4017b0:	and	x0, x0, #0xff
  4017b4:	cmp	x0, #0x0
  4017b8:	b.eq	4017e4 <on_reboot+0x54>  // b.none
  4017bc:	adrp	x0, 402000 <run+0x35c>
  4017c0:	add	x1, x0, #0x143
  4017c4:	adrp	x0, 402000 <run+0x35c>
  4017c8:	add	x4, x0, #0x4a0
  4017cc:	mov	w3, #0x78                  	// #120
  4017d0:	mov	x2, x1
  4017d4:	adrp	x0, 402000 <run+0x35c>
  4017d8:	add	x1, x0, #0x168
  4017dc:	mov	w0, #0x0                   	// #0
  4017e0:	bl	400ed0 <log_assert_failed_realm@plt>
  4017e4:	ldr	x0, [sp, #24]
  4017e8:	bl	401350 <get_startup_time>
  4017ec:	str	x0, [sp, #56]
  4017f0:	ldr	x0, [sp, #56]
  4017f4:	bl	400f00 <utmp_put_reboot@plt>
  4017f8:	str	w0, [sp, #40]
  4017fc:	ldr	w0, [sp, #40]
  401800:	cmp	w0, #0x0
  401804:	b.ge	401888 <on_reboot+0xf8>  // b.tcont
  401808:	mov	w0, #0x3                   	// #3
  40180c:	str	w0, [sp, #44]
  401810:	ldr	w0, [sp, #40]
  401814:	str	w0, [sp, #48]
  401818:	str	wzr, [sp, #52]
  40181c:	ldr	w0, [sp, #52]
  401820:	bl	400ff0 <log_get_max_level_realm@plt>
  401824:	mov	w1, w0
  401828:	ldr	w0, [sp, #44]
  40182c:	and	w0, w0, #0x7
  401830:	cmp	w1, w0
  401834:	b.lt	401878 <on_reboot+0xe8>  // b.tstop
  401838:	ldr	w0, [sp, #52]
  40183c:	lsl	w1, w0, #10
  401840:	ldr	w0, [sp, #44]
  401844:	orr	w6, w1, w0
  401848:	adrp	x0, 402000 <run+0x35c>
  40184c:	add	x1, x0, #0x143
  401850:	adrp	x0, 402000 <run+0x35c>
  401854:	add	x5, x0, #0x270
  401858:	adrp	x0, 402000 <run+0x35c>
  40185c:	add	x4, x0, #0x4b0
  401860:	mov	w3, #0x8b                  	// #139
  401864:	mov	x2, x1
  401868:	ldr	w1, [sp, #48]
  40186c:	mov	w0, w6
  401870:	bl	400f60 <log_internal_realm@plt>
  401874:	b	401880 <on_reboot+0xf0>
  401878:	ldr	w0, [sp, #48]
  40187c:	cmp	w0, #0x0
  401880:	ldr	w0, [sp, #40]
  401884:	str	w0, [sp, #36]
  401888:	ldr	w0, [sp, #36]
  40188c:	ldp	x29, x30, [sp], #64
  401890:	ret

0000000000401894 <on_shutdown>:
  401894:	stp	x29, x30, [sp, #-64]!
  401898:	mov	x29, sp
  40189c:	str	x0, [sp, #24]
  4018a0:	str	wzr, [sp, #44]
  4018a4:	ldr	x0, [sp, #24]
  4018a8:	cmp	x0, #0x0
  4018ac:	cset	w0, eq  // eq = none
  4018b0:	and	w0, w0, #0xff
  4018b4:	and	x0, x0, #0xff
  4018b8:	cmp	x0, #0x0
  4018bc:	b.eq	4018e8 <on_shutdown+0x54>  // b.none
  4018c0:	adrp	x0, 402000 <run+0x35c>
  4018c4:	add	x1, x0, #0x143
  4018c8:	adrp	x0, 402000 <run+0x35c>
  4018cc:	add	x4, x0, #0x4c0
  4018d0:	mov	w3, #0x95                  	// #149
  4018d4:	mov	x2, x1
  4018d8:	adrp	x0, 402000 <run+0x35c>
  4018dc:	add	x1, x0, #0x168
  4018e0:	mov	w0, #0x0                   	// #0
  4018e4:	bl	400ed0 <log_assert_failed_realm@plt>
  4018e8:	bl	400e90 <utmp_put_shutdown@plt>
  4018ec:	str	w0, [sp, #48]
  4018f0:	ldr	w0, [sp, #48]
  4018f4:	cmp	w0, #0x0
  4018f8:	b.ge	40197c <on_shutdown+0xe8>  // b.tcont
  4018fc:	mov	w0, #0x3                   	// #3
  401900:	str	w0, [sp, #52]
  401904:	ldr	w0, [sp, #48]
  401908:	str	w0, [sp, #56]
  40190c:	str	wzr, [sp, #60]
  401910:	ldr	w0, [sp, #60]
  401914:	bl	400ff0 <log_get_max_level_realm@plt>
  401918:	mov	w1, w0
  40191c:	ldr	w0, [sp, #52]
  401920:	and	w0, w0, #0x7
  401924:	cmp	w1, w0
  401928:	b.lt	40196c <on_shutdown+0xd8>  // b.tstop
  40192c:	ldr	w0, [sp, #60]
  401930:	lsl	w1, w0, #10
  401934:	ldr	w0, [sp, #52]
  401938:	orr	w6, w1, w0
  40193c:	adrp	x0, 402000 <run+0x35c>
  401940:	add	x1, x0, #0x143
  401944:	adrp	x0, 402000 <run+0x35c>
  401948:	add	x5, x0, #0x270
  40194c:	adrp	x0, 402000 <run+0x35c>
  401950:	add	x4, x0, #0x4d0
  401954:	mov	w3, #0xa4                  	// #164
  401958:	mov	x2, x1
  40195c:	ldr	w1, [sp, #56]
  401960:	mov	w0, w6
  401964:	bl	400f60 <log_internal_realm@plt>
  401968:	b	401974 <on_shutdown+0xe0>
  40196c:	ldr	w0, [sp, #56]
  401970:	cmp	w0, #0x0
  401974:	ldr	w0, [sp, #48]
  401978:	str	w0, [sp, #44]
  40197c:	ldr	w0, [sp, #44]
  401980:	ldp	x29, x30, [sp], #64
  401984:	ret

0000000000401988 <on_runlevel>:
  401988:	stp	x29, x30, [sp, #-96]!
  40198c:	mov	x29, sp
  401990:	str	x0, [sp, #24]
  401994:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401998:	add	x0, x0, #0xcb8
  40199c:	ldr	x1, [x0]
  4019a0:	str	x1, [sp, #88]
  4019a4:	mov	x1, #0x0                   	// #0
  4019a8:	str	wzr, [sp, #40]
  4019ac:	ldr	x0, [sp, #24]
  4019b0:	cmp	x0, #0x0
  4019b4:	cset	w0, eq  // eq = none
  4019b8:	and	w0, w0, #0xff
  4019bc:	and	x0, x0, #0xff
  4019c0:	cmp	x0, #0x0
  4019c4:	b.eq	4019f0 <on_runlevel+0x68>  // b.none
  4019c8:	adrp	x0, 402000 <run+0x35c>
  4019cc:	add	x1, x0, #0x143
  4019d0:	adrp	x0, 402000 <run+0x35c>
  4019d4:	add	x4, x0, #0x4e0
  4019d8:	mov	w3, #0xae                  	// #174
  4019dc:	mov	x2, x1
  4019e0:	adrp	x0, 402000 <run+0x35c>
  4019e4:	add	x1, x0, #0x168
  4019e8:	mov	w0, #0x0                   	// #0
  4019ec:	bl	400ed0 <log_assert_failed_realm@plt>
  4019f0:	add	x0, sp, #0x24
  4019f4:	mov	x1, #0x0                   	// #0
  4019f8:	bl	400fe0 <utmp_get_runlevel@plt>
  4019fc:	str	w0, [sp, #44]
  401a00:	ldr	w0, [sp, #44]
  401a04:	cmp	w0, #0x0
  401a08:	b.ge	401acc <on_runlevel+0x144>  // b.tcont
  401a0c:	strb	wzr, [sp, #34]
  401a10:	ldr	w0, [sp, #44]
  401a14:	add	w0, w0, #0x3
  401a18:	cmp	w0, #0x1
  401a1c:	b.hi	401a28 <on_runlevel+0xa0>  // b.pmore
  401a20:	mov	w0, #0x1                   	// #1
  401a24:	strb	w0, [sp, #34]
  401a28:	nop
  401a2c:	ldrb	w0, [sp, #34]
  401a30:	eor	w0, w0, #0x1
  401a34:	and	w0, w0, #0xff
  401a38:	cmp	w0, #0x0
  401a3c:	b.eq	401ac8 <on_runlevel+0x140>  // b.none
  401a40:	mov	w0, #0x3                   	// #3
  401a44:	str	w0, [sp, #48]
  401a48:	ldr	w0, [sp, #44]
  401a4c:	str	w0, [sp, #52]
  401a50:	str	wzr, [sp, #56]
  401a54:	ldr	w0, [sp, #56]
  401a58:	bl	400ff0 <log_get_max_level_realm@plt>
  401a5c:	mov	w1, w0
  401a60:	ldr	w0, [sp, #48]
  401a64:	and	w0, w0, #0x7
  401a68:	cmp	w1, w0
  401a6c:	b.lt	401ab0 <on_runlevel+0x128>  // b.tstop
  401a70:	ldr	w0, [sp, #56]
  401a74:	lsl	w1, w0, #10
  401a78:	ldr	w0, [sp, #48]
  401a7c:	orr	w6, w1, w0
  401a80:	adrp	x0, 402000 <run+0x35c>
  401a84:	add	x1, x0, #0x143
  401a88:	adrp	x0, 402000 <run+0x35c>
  401a8c:	add	x5, x0, #0x290
  401a90:	adrp	x0, 402000 <run+0x35c>
  401a94:	add	x4, x0, #0x4f0
  401a98:	mov	w3, #0xb8                  	// #184
  401a9c:	mov	x2, x1
  401aa0:	ldr	w1, [sp, #52]
  401aa4:	mov	w0, w6
  401aa8:	bl	400f60 <log_internal_realm@plt>
  401aac:	b	401c74 <on_runlevel+0x2ec>
  401ab0:	ldr	w0, [sp, #52]
  401ab4:	cmp	w0, #0x0
  401ab8:	cneg	w0, w0, lt  // lt = tstop
  401abc:	and	w0, w0, #0xff
  401ac0:	neg	w0, w0
  401ac4:	b	401c74 <on_runlevel+0x2ec>
  401ac8:	str	wzr, [sp, #36]
  401acc:	ldr	x0, [sp, #24]
  401ad0:	bl	4014ec <get_current_runlevel>
  401ad4:	str	w0, [sp, #60]
  401ad8:	ldr	w0, [sp, #60]
  401adc:	cmp	w0, #0x0
  401ae0:	b.ge	401aec <on_runlevel+0x164>  // b.tcont
  401ae4:	ldr	w0, [sp, #60]
  401ae8:	b	401c74 <on_runlevel+0x2ec>
  401aec:	ldr	w0, [sp, #60]
  401af0:	cmp	w0, #0x0
  401af4:	b.ne	401b7c <on_runlevel+0x1f4>  // b.any
  401af8:	mov	w0, #0x4                   	// #4
  401afc:	str	w0, [sp, #76]
  401b00:	str	wzr, [sp, #80]
  401b04:	str	wzr, [sp, #84]
  401b08:	ldr	w0, [sp, #84]
  401b0c:	bl	400ff0 <log_get_max_level_realm@plt>
  401b10:	mov	w1, w0
  401b14:	ldr	w0, [sp, #76]
  401b18:	and	w0, w0, #0x7
  401b1c:	cmp	w1, w0
  401b20:	b.lt	401b64 <on_runlevel+0x1dc>  // b.tstop
  401b24:	ldr	w0, [sp, #84]
  401b28:	lsl	w1, w0, #10
  401b2c:	ldr	w0, [sp, #76]
  401b30:	orr	w6, w1, w0
  401b34:	adrp	x0, 402000 <run+0x35c>
  401b38:	add	x1, x0, #0x143
  401b3c:	adrp	x0, 402000 <run+0x35c>
  401b40:	add	x5, x0, #0x2b8
  401b44:	adrp	x0, 402000 <run+0x35c>
  401b48:	add	x4, x0, #0x4f0
  401b4c:	mov	w3, #0xc2                  	// #194
  401b50:	mov	x2, x1
  401b54:	ldr	w1, [sp, #80]
  401b58:	mov	w0, w6
  401b5c:	bl	400f60 <log_internal_realm@plt>
  401b60:	b	401c74 <on_runlevel+0x2ec>
  401b64:	ldr	w0, [sp, #80]
  401b68:	cmp	w0, #0x0
  401b6c:	cneg	w0, w0, lt  // lt = tstop
  401b70:	and	w0, w0, #0xff
  401b74:	neg	w0, w0
  401b78:	b	401c74 <on_runlevel+0x2ec>
  401b7c:	ldr	w0, [sp, #36]
  401b80:	ldr	w1, [sp, #60]
  401b84:	cmp	w1, w0
  401b88:	b.ne	401b94 <on_runlevel+0x20c>  // b.any
  401b8c:	mov	w0, #0x0                   	// #0
  401b90:	b	401c74 <on_runlevel+0x2ec>
  401b94:	ldr	w0, [sp, #36]
  401b98:	mov	w1, w0
  401b9c:	ldr	w0, [sp, #60]
  401ba0:	bl	400fa0 <utmp_put_runlevel@plt>
  401ba4:	str	w0, [sp, #44]
  401ba8:	ldr	w0, [sp, #44]
  401bac:	cmp	w0, #0x0
  401bb0:	b.ge	401c70 <on_runlevel+0x2e8>  // b.tcont
  401bb4:	strb	wzr, [sp, #35]
  401bb8:	ldr	w0, [sp, #44]
  401bbc:	add	w0, w0, #0x3
  401bc0:	cmp	w0, #0x1
  401bc4:	b.hi	401bd0 <on_runlevel+0x248>  // b.pmore
  401bc8:	mov	w0, #0x1                   	// #1
  401bcc:	strb	w0, [sp, #35]
  401bd0:	nop
  401bd4:	ldrb	w0, [sp, #35]
  401bd8:	eor	w0, w0, #0x1
  401bdc:	and	w0, w0, #0xff
  401be0:	cmp	w0, #0x0
  401be4:	b.eq	401c70 <on_runlevel+0x2e8>  // b.none
  401be8:	mov	w0, #0x3                   	// #3
  401bec:	str	w0, [sp, #64]
  401bf0:	ldr	w0, [sp, #44]
  401bf4:	str	w0, [sp, #68]
  401bf8:	str	wzr, [sp, #72]
  401bfc:	ldr	w0, [sp, #72]
  401c00:	bl	400ff0 <log_get_max_level_realm@plt>
  401c04:	mov	w1, w0
  401c08:	ldr	w0, [sp, #64]
  401c0c:	and	w0, w0, #0x7
  401c10:	cmp	w1, w0
  401c14:	b.lt	401c58 <on_runlevel+0x2d0>  // b.tstop
  401c18:	ldr	w0, [sp, #72]
  401c1c:	lsl	w1, w0, #10
  401c20:	ldr	w0, [sp, #64]
  401c24:	orr	w6, w1, w0
  401c28:	adrp	x0, 402000 <run+0x35c>
  401c2c:	add	x1, x0, #0x143
  401c30:	adrp	x0, 402000 <run+0x35c>
  401c34:	add	x5, x0, #0x270
  401c38:	adrp	x0, 402000 <run+0x35c>
  401c3c:	add	x4, x0, #0x4f0
  401c40:	mov	w3, #0xd7                  	// #215
  401c44:	mov	x2, x1
  401c48:	ldr	w1, [sp, #68]
  401c4c:	mov	w0, w6
  401c50:	bl	400f60 <log_internal_realm@plt>
  401c54:	b	401c74 <on_runlevel+0x2ec>
  401c58:	ldr	w0, [sp, #68]
  401c5c:	cmp	w0, #0x0
  401c60:	cneg	w0, w0, lt  // lt = tstop
  401c64:	and	w0, w0, #0xff
  401c68:	neg	w0, w0
  401c6c:	b	401c74 <on_runlevel+0x2ec>
  401c70:	ldr	w0, [sp, #40]
  401c74:	mov	w1, w0
  401c78:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401c7c:	add	x0, x0, #0xcb8
  401c80:	ldr	x2, [sp, #88]
  401c84:	ldr	x0, [x0]
  401c88:	eor	x0, x2, x0
  401c8c:	cmp	x0, #0x0
  401c90:	b.eq	401c98 <on_runlevel+0x310>  // b.none
  401c94:	bl	400f10 <__stack_chk_fail@plt>
  401c98:	mov	w0, w1
  401c9c:	ldp	x29, x30, [sp], #96
  401ca0:	ret

0000000000401ca4 <run>:
  401ca4:	stp	x29, x30, [sp, #-128]!
  401ca8:	mov	x29, sp
  401cac:	str	x19, [sp, #16]
  401cb0:	str	w0, [sp, #44]
  401cb4:	str	x1, [sp, #32]
  401cb8:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  401cbc:	add	x0, x0, #0xcb8
  401cc0:	ldr	x1, [x0]
  401cc4:	str	x1, [sp, #120]
  401cc8:	mov	x1, #0x0                   	// #0
  401ccc:	str	xzr, [sp, #112]
  401cd0:	bl	400e50 <getppid@plt>
  401cd4:	cmp	w0, #0x1
  401cd8:	b.eq	401d6c <run+0xc8>  // b.none
  401cdc:	mov	w0, #0x3                   	// #3
  401ce0:	str	w0, [sp, #100]
  401ce4:	mov	w0, #0x16                  	// #22
  401ce8:	movk	w0, #0x4000, lsl #16
  401cec:	str	w0, [sp, #104]
  401cf0:	str	wzr, [sp, #108]
  401cf4:	ldr	w0, [sp, #108]
  401cf8:	bl	400ff0 <log_get_max_level_realm@plt>
  401cfc:	mov	w1, w0
  401d00:	ldr	w0, [sp, #100]
  401d04:	and	w0, w0, #0x7
  401d08:	cmp	w1, w0
  401d0c:	b.lt	401d54 <run+0xb0>  // b.tstop
  401d10:	ldr	w0, [sp, #108]
  401d14:	lsl	w1, w0, #10
  401d18:	ldr	w0, [sp, #100]
  401d1c:	orr	w6, w1, w0
  401d20:	adrp	x0, 402000 <run+0x35c>
  401d24:	add	x1, x0, #0x143
  401d28:	adrp	x0, 402000 <run+0x35c>
  401d2c:	add	x5, x0, #0x2f0
  401d30:	adrp	x0, 402000 <run+0x35c>
  401d34:	add	x4, x0, #0x500
  401d38:	mov	w3, #0xe5                  	// #229
  401d3c:	mov	x2, x1
  401d40:	ldr	w1, [sp, #104]
  401d44:	mov	w0, w6
  401d48:	bl	400f60 <log_internal_realm@plt>
  401d4c:	mov	w19, w0
  401d50:	b	401ff4 <run+0x350>
  401d54:	ldr	w0, [sp, #104]
  401d58:	cmp	w0, #0x0
  401d5c:	cneg	w0, w0, lt  // lt = tstop
  401d60:	and	w0, w0, #0xff
  401d64:	neg	w19, w0
  401d68:	b	401ff4 <run+0x350>
  401d6c:	ldr	w0, [sp, #44]
  401d70:	cmp	w0, #0x2
  401d74:	b.eq	401e08 <run+0x164>  // b.none
  401d78:	mov	w0, #0x3                   	// #3
  401d7c:	str	w0, [sp, #88]
  401d80:	mov	w0, #0x16                  	// #22
  401d84:	movk	w0, #0x4000, lsl #16
  401d88:	str	w0, [sp, #92]
  401d8c:	str	wzr, [sp, #96]
  401d90:	ldr	w0, [sp, #96]
  401d94:	bl	400ff0 <log_get_max_level_realm@plt>
  401d98:	mov	w1, w0
  401d9c:	ldr	w0, [sp, #88]
  401da0:	and	w0, w0, #0x7
  401da4:	cmp	w1, w0
  401da8:	b.lt	401df0 <run+0x14c>  // b.tstop
  401dac:	ldr	w0, [sp, #96]
  401db0:	lsl	w1, w0, #10
  401db4:	ldr	w0, [sp, #88]
  401db8:	orr	w6, w1, w0
  401dbc:	adrp	x0, 402000 <run+0x35c>
  401dc0:	add	x1, x0, #0x143
  401dc4:	adrp	x0, 402000 <run+0x35c>
  401dc8:	add	x5, x0, #0x320
  401dcc:	adrp	x0, 402000 <run+0x35c>
  401dd0:	add	x4, x0, #0x500
  401dd4:	mov	w3, #0xe8                  	// #232
  401dd8:	mov	x2, x1
  401ddc:	ldr	w1, [sp, #92]
  401de0:	mov	w0, w6
  401de4:	bl	400f60 <log_internal_realm@plt>
  401de8:	mov	w19, w0
  401dec:	b	401ff4 <run+0x350>
  401df0:	ldr	w0, [sp, #92]
  401df4:	cmp	w0, #0x0
  401df8:	cneg	w0, w0, lt  // lt = tstop
  401dfc:	and	w0, w0, #0xff
  401e00:	neg	w19, w0
  401e04:	b	401ff4 <run+0x350>
  401e08:	bl	400ec0 <log_setup_service@plt>
  401e0c:	mov	w0, #0x12                  	// #18
  401e10:	bl	400ee0 <umask@plt>
  401e14:	add	x0, sp, #0x70
  401e18:	bl	400eb0 <bus_connect_system_systemd@plt>
  401e1c:	str	w0, [sp, #60]
  401e20:	ldr	w0, [sp, #60]
  401e24:	cmp	w0, #0x0
  401e28:	b.ge	401eb8 <run+0x214>  // b.tcont
  401e2c:	mov	w0, #0x3                   	// #3
  401e30:	str	w0, [sp, #76]
  401e34:	ldr	w0, [sp, #60]
  401e38:	str	w0, [sp, #80]
  401e3c:	str	wzr, [sp, #84]
  401e40:	ldr	w0, [sp, #84]
  401e44:	bl	400ff0 <log_get_max_level_realm@plt>
  401e48:	mov	w1, w0
  401e4c:	ldr	w0, [sp, #76]
  401e50:	and	w0, w0, #0x7
  401e54:	cmp	w1, w0
  401e58:	b.lt	401ea0 <run+0x1fc>  // b.tstop
  401e5c:	ldr	w0, [sp, #84]
  401e60:	lsl	w1, w0, #10
  401e64:	ldr	w0, [sp, #76]
  401e68:	orr	w6, w1, w0
  401e6c:	adrp	x0, 402000 <run+0x35c>
  401e70:	add	x1, x0, #0x143
  401e74:	adrp	x0, 402000 <run+0x35c>
  401e78:	add	x5, x0, #0x348
  401e7c:	adrp	x0, 402000 <run+0x35c>
  401e80:	add	x4, x0, #0x500
  401e84:	mov	w3, #0xf8                  	// #248
  401e88:	mov	x2, x1
  401e8c:	ldr	w1, [sp, #80]
  401e90:	mov	w0, w6
  401e94:	bl	400f60 <log_internal_realm@plt>
  401e98:	mov	w19, w0
  401e9c:	b	401ff4 <run+0x350>
  401ea0:	ldr	w0, [sp, #80]
  401ea4:	cmp	w0, #0x0
  401ea8:	cneg	w0, w0, lt  // lt = tstop
  401eac:	and	w0, w0, #0xff
  401eb0:	neg	w19, w0
  401eb4:	b	401ff4 <run+0x350>
  401eb8:	ldr	x0, [sp, #32]
  401ebc:	add	x0, x0, #0x8
  401ec0:	ldr	x2, [x0]
  401ec4:	adrp	x0, 402000 <run+0x35c>
  401ec8:	add	x1, x0, #0x370
  401ecc:	mov	x0, x2
  401ed0:	bl	400f80 <strcmp@plt>
  401ed4:	cmp	w0, #0x0
  401ed8:	b.ne	401eec <run+0x248>  // b.any
  401edc:	add	x0, sp, #0x70
  401ee0:	bl	401790 <on_reboot>
  401ee4:	mov	w19, w0
  401ee8:	b	401ff4 <run+0x350>
  401eec:	ldr	x0, [sp, #32]
  401ef0:	add	x0, x0, #0x8
  401ef4:	ldr	x2, [x0]
  401ef8:	adrp	x0, 402000 <run+0x35c>
  401efc:	add	x1, x0, #0x378
  401f00:	mov	x0, x2
  401f04:	bl	400f80 <strcmp@plt>
  401f08:	cmp	w0, #0x0
  401f0c:	b.ne	401f20 <run+0x27c>  // b.any
  401f10:	add	x0, sp, #0x70
  401f14:	bl	401894 <on_shutdown>
  401f18:	mov	w19, w0
  401f1c:	b	401ff4 <run+0x350>
  401f20:	ldr	x0, [sp, #32]
  401f24:	add	x0, x0, #0x8
  401f28:	ldr	x2, [x0]
  401f2c:	adrp	x0, 402000 <run+0x35c>
  401f30:	add	x1, x0, #0x388
  401f34:	mov	x0, x2
  401f38:	bl	400f80 <strcmp@plt>
  401f3c:	cmp	w0, #0x0
  401f40:	b.ne	401f54 <run+0x2b0>  // b.any
  401f44:	add	x0, sp, #0x70
  401f48:	bl	401988 <on_runlevel>
  401f4c:	mov	w19, w0
  401f50:	b	401ff4 <run+0x350>
  401f54:	mov	w0, #0x3                   	// #3
  401f58:	str	w0, [sp, #64]
  401f5c:	mov	w0, #0x16                  	// #22
  401f60:	movk	w0, #0x4000, lsl #16
  401f64:	str	w0, [sp, #68]
  401f68:	str	wzr, [sp, #72]
  401f6c:	ldr	w0, [sp, #72]
  401f70:	bl	400ff0 <log_get_max_level_realm@plt>
  401f74:	mov	w1, w0
  401f78:	ldr	w0, [sp, #64]
  401f7c:	and	w0, w0, #0x7
  401f80:	cmp	w1, w0
  401f84:	b.lt	401fdc <run+0x338>  // b.tstop
  401f88:	ldr	w0, [sp, #72]
  401f8c:	lsl	w1, w0, #10
  401f90:	ldr	w0, [sp, #64]
  401f94:	orr	w7, w1, w0
  401f98:	adrp	x0, 402000 <run+0x35c>
  401f9c:	add	x1, x0, #0x143
  401fa0:	ldr	x0, [sp, #32]
  401fa4:	add	x0, x0, #0x8
  401fa8:	ldr	x0, [x0]
  401fac:	mov	x6, x0
  401fb0:	adrp	x0, 402000 <run+0x35c>
  401fb4:	add	x5, x0, #0x398
  401fb8:	adrp	x0, 402000 <run+0x35c>
  401fbc:	add	x4, x0, #0x500
  401fc0:	mov	w3, #0x100                 	// #256
  401fc4:	mov	x2, x1
  401fc8:	ldr	w1, [sp, #68]
  401fcc:	mov	w0, w7
  401fd0:	bl	400f60 <log_internal_realm@plt>
  401fd4:	mov	w19, w0
  401fd8:	b	401ff0 <run+0x34c>
  401fdc:	ldr	w0, [sp, #68]
  401fe0:	cmp	w0, #0x0
  401fe4:	cneg	w0, w0, lt  // lt = tstop
  401fe8:	and	w0, w0, #0xff
  401fec:	neg	w19, w0
  401ff0:	nop
  401ff4:	add	x0, sp, #0x70
  401ff8:	bl	4012dc <context_clear>
  401ffc:	mov	w1, w19
  402000:	adrp	x0, 412000 <__FRAME_END__+0xf7f8>
  402004:	add	x0, x0, #0xcb8
  402008:	ldr	x2, [sp, #120]
  40200c:	ldr	x0, [x0]
  402010:	eor	x0, x2, x0
  402014:	cmp	x0, #0x0
  402018:	b.eq	402020 <run+0x37c>  // b.none
  40201c:	bl	400f10 <__stack_chk_fail@plt>
  402020:	mov	w0, w1
  402024:	ldr	x19, [sp, #16]
  402028:	ldp	x29, x30, [sp], #128
  40202c:	ret

0000000000402030 <main>:
  402030:	stp	x29, x30, [sp, #-48]!
  402034:	mov	x29, sp
  402038:	str	w0, [sp, #28]
  40203c:	str	x1, [sp, #16]
  402040:	ldr	x1, [sp, #16]
  402044:	ldr	w0, [sp, #28]
  402048:	bl	40121c <save_argc_argv>
  40204c:	ldr	x1, [sp, #16]
  402050:	ldr	w0, [sp, #28]
  402054:	bl	401ca4 <run>
  402058:	str	w0, [sp, #44]
  40205c:	bl	400f20 <ask_password_agent_close@plt>
  402060:	bl	400ea0 <polkit_agent_close@plt>
  402064:	bl	400f30 <pager_close@plt>
  402068:	bl	400fc0 <mac_selinux_finish@plt>
  40206c:	bl	401254 <static_destruct>
  402070:	ldr	w0, [sp, #44]
  402074:	lsr	w0, w0, #31
  402078:	ldp	x29, x30, [sp], #48
  40207c:	ret

0000000000402080 <__libc_csu_init>:
  402080:	stp	x29, x30, [sp, #-64]!
  402084:	mov	x29, sp
  402088:	stp	x19, x20, [sp, #16]
  40208c:	adrp	x20, 412000 <__FRAME_END__+0xf7f8>
  402090:	add	x20, x20, #0xcb0
  402094:	stp	x21, x22, [sp, #32]
  402098:	adrp	x21, 412000 <__FRAME_END__+0xf7f8>
  40209c:	add	x21, x21, #0xca8
  4020a0:	sub	x20, x20, x21
  4020a4:	mov	w22, w0
  4020a8:	stp	x23, x24, [sp, #48]
  4020ac:	mov	x23, x1
  4020b0:	mov	x24, x2
  4020b4:	bl	400df0 <_init>
  4020b8:	cmp	xzr, x20, asr #3
  4020bc:	b.eq	4020e8 <__libc_csu_init+0x68>  // b.none
  4020c0:	asr	x20, x20, #3
  4020c4:	mov	x19, #0x0                   	// #0
  4020c8:	ldr	x3, [x21, x19, lsl #3]
  4020cc:	mov	x2, x24
  4020d0:	add	x19, x19, #0x1
  4020d4:	mov	x1, x23
  4020d8:	mov	w0, w22
  4020dc:	blr	x3
  4020e0:	cmp	x20, x19
  4020e4:	b.ne	4020c8 <__libc_csu_init+0x48>  // b.any
  4020e8:	ldp	x19, x20, [sp, #16]
  4020ec:	ldp	x21, x22, [sp, #32]
  4020f0:	ldp	x23, x24, [sp, #48]
  4020f4:	ldp	x29, x30, [sp], #64
  4020f8:	ret
  4020fc:	nop

0000000000402100 <__libc_csu_fini>:
  402100:	ret

Disassembly of section .fini:

0000000000402104 <_fini>:
  402104:	stp	x29, x30, [sp, #-16]!
  402108:	mov	x29, sp
  40210c:	ldp	x29, x30, [sp], #16
  402110:	ret
