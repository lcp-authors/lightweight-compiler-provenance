
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400960 <_init>:
  400960:	stp	x29, x30, [sp, #-16]!
  400964:	mov	x29, sp
  400968:	bl	400b00 <call_weak_fn>
  40096c:	ldp	x29, x30, [sp], #16
  400970:	ret

Disassembly of section .plt:

0000000000400980 <.plt>:
  400980:	stp	x16, x30, [sp, #-16]!
  400984:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400988:	ldr	x17, [x16, #3936]
  40098c:	add	x16, x16, #0xf60
  400990:	br	x17
  400994:	nop
  400998:	nop
  40099c:	nop

00000000004009a0 <__libc_start_main@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009a4:	ldr	x17, [x16, #3944]
  4009a8:	add	x16, x16, #0xf68
  4009ac:	br	x17

00000000004009b0 <lseek64@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009b4:	ldr	x17, [x16, #3952]
  4009b8:	add	x16, x16, #0xf70
  4009bc:	br	x17

00000000004009c0 <__gmon_start__@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009c4:	ldr	x17, [x16, #3960]
  4009c8:	add	x16, x16, #0xf78
  4009cc:	br	x17

00000000004009d0 <safe_close@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009d4:	ldr	x17, [x16, #3968]
  4009d8:	add	x16, x16, #0xf80
  4009dc:	br	x17

00000000004009e0 <abort@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009e4:	ldr	x17, [x16, #3976]
  4009e8:	add	x16, x16, #0xf88
  4009ec:	br	x17

00000000004009f0 <__errno_location@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  4009f4:	ldr	x17, [x16, #3984]
  4009f8:	add	x16, x16, #0xf90
  4009fc:	br	x17

0000000000400a00 <read@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a04:	ldr	x17, [x16, #3992]
  400a08:	add	x16, x16, #0xf98
  400a0c:	br	x17

0000000000400a10 <__stack_chk_fail@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a14:	ldr	x17, [x16, #4000]
  400a18:	add	x16, x16, #0xfa0
  400a1c:	br	x17

0000000000400a20 <memcmp@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a24:	ldr	x17, [x16, #4008]
  400a28:	add	x16, x16, #0xfa8
  400a2c:	br	x17

0000000000400a30 <malloc@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a34:	ldr	x17, [x16, #4016]
  400a38:	add	x16, x16, #0xfb0
  400a3c:	br	x17

0000000000400a40 <log_internal_realm@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a44:	ldr	x17, [x16, #4024]
  400a48:	add	x16, x16, #0xfb8
  400a4c:	br	x17

0000000000400a50 <ioctl@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a54:	ldr	x17, [x16, #4032]
  400a58:	add	x16, x16, #0xfc0
  400a5c:	br	x17

0000000000400a60 <free@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a64:	ldr	x17, [x16, #4040]
  400a68:	add	x16, x16, #0xfc8
  400a6c:	br	x17

0000000000400a70 <puts@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a74:	ldr	x17, [x16, #4048]
  400a78:	add	x16, x16, #0xfd0
  400a7c:	br	x17

0000000000400a80 <open64@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a84:	ldr	x17, [x16, #4056]
  400a88:	add	x16, x16, #0xfd8
  400a8c:	br	x17

0000000000400a90 <log_oom_internal@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400a94:	ldr	x17, [x16, #4064]
  400a98:	add	x16, x16, #0xfe0
  400a9c:	br	x17

0000000000400aa0 <log_get_max_level_realm@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xfc58>
  400aa4:	ldr	x17, [x16, #4072]
  400aa8:	add	x16, x16, #0xfe8
  400aac:	br	x17

Disassembly of section .text:

0000000000400ab0 <_start>:
  400ab0:	mov	x29, #0x0                   	// #0
  400ab4:	mov	x30, #0x0                   	// #0
  400ab8:	mov	x5, x0
  400abc:	ldr	x1, [sp]
  400ac0:	add	x2, sp, #0x8
  400ac4:	mov	x6, sp
  400ac8:	movz	x0, #0x0, lsl #48
  400acc:	movk	x0, #0x0, lsl #32
  400ad0:	movk	x0, #0x40, lsl #16
  400ad4:	movk	x0, #0xc00
  400ad8:	movz	x3, #0x0, lsl #48
  400adc:	movk	x3, #0x0, lsl #32
  400ae0:	movk	x3, #0x40, lsl #16
  400ae4:	movk	x3, #0xfe0
  400ae8:	movz	x4, #0x0, lsl #48
  400aec:	movk	x4, #0x0, lsl #32
  400af0:	movk	x4, #0x40, lsl #16
  400af4:	movk	x4, #0x1060
  400af8:	bl	4009a0 <__libc_start_main@plt>
  400afc:	bl	4009e0 <abort@plt>

0000000000400b00 <call_weak_fn>:
  400b00:	adrp	x0, 411000 <__FRAME_END__+0xfc58>
  400b04:	ldr	x0, [x0, #4088]
  400b08:	cbz	x0, 400b10 <call_weak_fn+0x10>
  400b0c:	b	4009c0 <__gmon_start__@plt>
  400b10:	ret

0000000000400b14 <deregister_tm_clones>:
  400b14:	adrp	x0, 412000 <__TMC_END__>
  400b18:	add	x0, x0, #0x0
  400b1c:	adrp	x1, 412000 <__TMC_END__>
  400b20:	add	x1, x1, #0x0
  400b24:	cmp	x0, x1
  400b28:	b.eq	400b5c <deregister_tm_clones+0x48>  // b.none
  400b2c:	stp	x29, x30, [sp, #-32]!
  400b30:	mov	x29, sp
  400b34:	adrp	x0, 401000 <__libc_csu_init+0x20>
  400b38:	ldr	x0, [x0, #120]
  400b3c:	str	x0, [sp, #24]
  400b40:	mov	x1, x0
  400b44:	cbz	x1, 400b54 <deregister_tm_clones+0x40>
  400b48:	adrp	x0, 412000 <__TMC_END__>
  400b4c:	add	x0, x0, #0x0
  400b50:	blr	x1
  400b54:	ldp	x29, x30, [sp], #32
  400b58:	ret
  400b5c:	ret

0000000000400b60 <register_tm_clones>:
  400b60:	adrp	x0, 412000 <__TMC_END__>
  400b64:	add	x0, x0, #0x0
  400b68:	adrp	x1, 412000 <__TMC_END__>
  400b6c:	add	x1, x1, #0x0
  400b70:	sub	x0, x0, x1
  400b74:	lsr	x1, x0, #63
  400b78:	add	x0, x1, x0, asr #3
  400b7c:	cmp	xzr, x0, asr #1
  400b80:	b.eq	400bb8 <register_tm_clones+0x58>  // b.none
  400b84:	stp	x29, x30, [sp, #-32]!
  400b88:	mov	x29, sp
  400b8c:	asr	x1, x0, #1
  400b90:	adrp	x0, 401000 <__libc_csu_init+0x20>
  400b94:	ldr	x0, [x0, #128]
  400b98:	str	x0, [sp, #24]
  400b9c:	mov	x2, x0
  400ba0:	cbz	x2, 400bb0 <register_tm_clones+0x50>
  400ba4:	adrp	x0, 412000 <__TMC_END__>
  400ba8:	add	x0, x0, #0x0
  400bac:	blr	x2
  400bb0:	ldp	x29, x30, [sp], #32
  400bb4:	ret
  400bb8:	ret

0000000000400bbc <__do_global_dtors_aux>:
  400bbc:	adrp	x0, 412000 <__TMC_END__>
  400bc0:	ldrb	w0, [x0]
  400bc4:	cbnz	w0, 400be8 <__do_global_dtors_aux+0x2c>
  400bc8:	stp	x29, x30, [sp, #-16]!
  400bcc:	mov	x29, sp
  400bd0:	bl	400b14 <deregister_tm_clones>
  400bd4:	adrp	x0, 412000 <__TMC_END__>
  400bd8:	mov	w1, #0x1                   	// #1
  400bdc:	strb	w1, [x0]
  400be0:	ldp	x29, x30, [sp], #16
  400be4:	ret
  400be8:	ret

0000000000400bec <frame_dummy>:
  400bec:	stp	x29, x30, [sp, #-16]!
  400bf0:	mov	x29, sp
  400bf4:	bl	400b60 <register_tm_clones>
  400bf8:	ldp	x29, x30, [sp], #16
  400bfc:	ret

0000000000400c00 <main>:
  400c00:	stp	x29, x30, [sp, #-80]!
  400c04:	mov	x29, sp
  400c08:	stp	x19, x20, [sp, #16]
  400c0c:	mov	x2, x1
  400c10:	adrp	x1, 411000 <__FRAME_END__+0xfc58>
  400c14:	ldr	x3, [x1, #3352]
  400c18:	str	x3, [sp, #72]
  400c1c:	mov	x3, #0x0                   	// #0
  400c20:	cmp	w0, #0x2
  400c24:	b.eq	400c68 <main+0x68>  // b.none
  400c28:	adrp	x0, 401000 <__libc_csu_init+0x20>
  400c2c:	add	x0, x0, #0x88
  400c30:	bl	400a70 <puts@plt>
  400c34:	mov	w19, #0xffffffff            	// #-1
  400c38:	mov	w20, #0x1                   	// #1
  400c3c:	mov	w0, w19
  400c40:	bl	4009d0 <safe_close@plt>
  400c44:	adrp	x0, 411000 <__FRAME_END__+0xfc58>
  400c48:	ldr	x1, [sp, #72]
  400c4c:	ldr	x0, [x0, #3352]
  400c50:	eor	x0, x1, x0
  400c54:	cbnz	x0, 400d3c <main+0x13c>
  400c58:	mov	w0, w20
  400c5c:	ldp	x19, x20, [sp, #16]
  400c60:	ldp	x29, x30, [sp], #80
  400c64:	ret
  400c68:	mov	w1, #0x80000               	// #524288
  400c6c:	ldr	x0, [x2, #8]
  400c70:	bl	400a80 <open64@plt>
  400c74:	mov	w19, w0
  400c78:	tbnz	w0, #31, 400ca4 <main+0xa4>
  400c7c:	add	x2, sp, #0x28
  400c80:	mov	x1, #0x4d01                	// #19713
  400c84:	movk	x1, #0x8020, lsl #16
  400c88:	bl	400a50 <ioctl@plt>
  400c8c:	tbnz	w0, #31, 400cf0 <main+0xf0>
  400c90:	add	x1, sp, #0x28
  400c94:	mov	w0, w19
  400c98:	bl	400d40 <probe_smart_media>
  400c9c:	lsr	w20, w0, #31
  400ca0:	b	400c3c <main+0x3c>
  400ca4:	mov	w0, #0x1                   	// #1
  400ca8:	bl	400aa0 <log_get_max_level_realm@plt>
  400cac:	cmp	w0, #0x2
  400cb0:	b.gt	400cbc <main+0xbc>
  400cb4:	mov	w20, #0x1                   	// #1
  400cb8:	b	400c3c <main+0x3c>
  400cbc:	bl	4009f0 <__errno_location@plt>
  400cc0:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400cc4:	add	x5, x5, #0xa8
  400cc8:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400ccc:	add	x4, x4, #0x110
  400cd0:	mov	w3, #0x2e                  	// #46
  400cd4:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400cd8:	add	x2, x2, #0xc3
  400cdc:	ldr	w1, [x0]
  400ce0:	mov	w0, #0x403                 	// #1027
  400ce4:	bl	400a40 <log_internal_realm@plt>
  400ce8:	mov	w20, #0x1                   	// #1
  400cec:	b	400c3c <main+0x3c>
  400cf0:	mov	w0, #0x1                   	// #1
  400cf4:	bl	400aa0 <log_get_max_level_realm@plt>
  400cf8:	cmp	w0, #0x2
  400cfc:	b.gt	400d08 <main+0x108>
  400d00:	mov	w20, #0x1                   	// #1
  400d04:	b	400c3c <main+0x3c>
  400d08:	bl	4009f0 <__errno_location@plt>
  400d0c:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400d10:	add	x5, x5, #0xe8
  400d14:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400d18:	add	x4, x4, #0x110
  400d1c:	mov	w3, #0x33                  	// #51
  400d20:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400d24:	add	x2, x2, #0xc3
  400d28:	ldr	w1, [x0]
  400d2c:	mov	w0, #0x403                 	// #1027
  400d30:	bl	400a40 <log_internal_realm@plt>
  400d34:	mov	w20, #0x1                   	// #1
  400d38:	b	400c3c <main+0x3c>
  400d3c:	bl	400a10 <__stack_chk_fail@plt>

0000000000400d40 <probe_smart_media>:
  400d40:	stp	x29, x30, [sp, #-64]!
  400d44:	mov	x29, sp
  400d48:	stp	x19, x20, [sp, #16]
  400d4c:	stp	x21, x22, [sp, #32]
  400d50:	mov	w20, w0
  400d54:	mov	x19, x1
  400d58:	mov	x0, #0x200                 	// #512
  400d5c:	bl	400a30 <malloc@plt>
  400d60:	mov	x21, x0
  400d64:	cbz	x0, 400da4 <probe_smart_media+0x64>
  400d68:	ldrb	w0, [x19]
  400d6c:	cmp	w0, #0x4
  400d70:	b.eq	400dfc <probe_smart_media+0xbc>  // b.none
  400d74:	mov	w0, #0x1                   	// #1
  400d78:	bl	400aa0 <log_get_max_level_realm@plt>
  400d7c:	mov	w19, #0xffffffea            	// #-22
  400d80:	cmp	w0, #0x6
  400d84:	b.gt	400dc8 <probe_smart_media+0x88>
  400d88:	mov	x0, x21
  400d8c:	bl	400a60 <free@plt>
  400d90:	mov	w0, w19
  400d94:	ldp	x19, x20, [sp, #16]
  400d98:	ldp	x21, x22, [sp, #32]
  400d9c:	ldp	x29, x30, [sp], #64
  400da0:	ret
  400da4:	adrp	x3, 401000 <__libc_csu_init+0x20>
  400da8:	add	x3, x3, #0x1d0
  400dac:	mov	w2, #0x32                  	// #50
  400db0:	adrp	x1, 401000 <__libc_csu_init+0x20>
  400db4:	add	x1, x1, #0x11b
  400db8:	mov	w0, #0x1                   	// #1
  400dbc:	bl	400a90 <log_oom_internal@plt>
  400dc0:	mov	w19, w0
  400dc4:	b	400d88 <probe_smart_media+0x48>
  400dc8:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400dcc:	add	x5, x5, #0x148
  400dd0:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400dd4:	add	x4, x4, #0x1d0
  400dd8:	mov	w3, #0x35                  	// #53
  400ddc:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400de0:	add	x2, x2, #0x11b
  400de4:	mov	w1, #0x16                  	// #22
  400de8:	movk	w1, #0x4000, lsl #16
  400dec:	mov	w0, #0x407                 	// #1031
  400df0:	bl	400a40 <log_internal_realm@plt>
  400df4:	mov	w19, w0
  400df8:	b	400d88 <probe_smart_media+0x48>
  400dfc:	stp	x23, x24, [sp, #48]
  400e00:	ldr	w23, [x19, #16]
  400e04:	sub	w0, w23, #0x100
  400e08:	tst	w0, #0xfffffeff
  400e0c:	b.eq	400e2c <probe_smart_media+0xec>  // b.none
  400e10:	mov	w0, #0x1                   	// #1
  400e14:	bl	400aa0 <log_get_max_level_realm@plt>
  400e18:	mov	w19, #0xffffffea            	// #-22
  400e1c:	cmp	w0, #0x6
  400e20:	b.gt	400ed0 <probe_smart_media+0x190>
  400e24:	ldp	x23, x24, [sp, #48]
  400e28:	b	400d88 <probe_smart_media+0x48>
  400e2c:	ldr	w0, [x19, #8]
  400e30:	lsr	w1, w0, #20
  400e34:	mov	w2, #0x2fffff              	// #3145727
  400e38:	cmp	w0, w2
  400e3c:	b.ls	400e54 <probe_smart_media+0x114>  // b.plast
  400e40:	cmp	w1, #0x4
  400e44:	mov	w22, #0x18                  	// #24
  400e48:	mov	w0, #0xc                   	// #12
  400e4c:	csel	w22, w22, w0, ne  // ne = any
  400e50:	b	400e68 <probe_smart_media+0x128>
  400e54:	mov	w1, #0xfffff               	// #1048575
  400e58:	cmp	w0, w1
  400e5c:	mov	w22, #0x6                   	// #6
  400e60:	mov	w0, #0x18                  	// #24
  400e64:	csel	w22, w22, w0, hi  // hi = pmore
  400e68:	ldr	w0, [x19, #12]
  400e6c:	mul	w22, w22, w0
  400e70:	cmp	w22, #0x0
  400e74:	b.le	400eb4 <probe_smart_media+0x174>
  400e78:	mov	w19, #0x0                   	// #0
  400e7c:	mov	x24, #0x200                 	// #512
  400e80:	mov	w2, w19
  400e84:	mov	x1, #0x0                   	// #0
  400e88:	mov	w0, w20
  400e8c:	bl	4009b0 <lseek64@plt>
  400e90:	mov	x2, x24
  400e94:	mov	x1, x21
  400e98:	mov	w0, w20
  400e9c:	bl	400a00 <read@plt>
  400ea0:	cmp	x0, #0x200
  400ea4:	b.eq	400f98 <probe_smart_media+0x258>  // b.none
  400ea8:	add	w19, w19, w23
  400eac:	cmp	w22, w19
  400eb0:	b.gt	400e80 <probe_smart_media+0x140>
  400eb4:	mov	w0, #0x1                   	// #1
  400eb8:	bl	400aa0 <log_get_max_level_realm@plt>
  400ebc:	cmp	w0, #0x6
  400ec0:	b.gt	400f0c <probe_smart_media+0x1cc>
  400ec4:	mov	w19, #0xffffffea            	// #-22
  400ec8:	ldp	x23, x24, [sp, #48]
  400ecc:	b	400d88 <probe_smart_media+0x48>
  400ed0:	mov	w6, w23
  400ed4:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400ed8:	add	x5, x5, #0x168
  400edc:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400ee0:	add	x4, x4, #0x1d0
  400ee4:	mov	w3, #0x3d                  	// #61
  400ee8:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400eec:	add	x2, x2, #0x11b
  400ef0:	mov	w1, #0x16                  	// #22
  400ef4:	movk	w1, #0x4000, lsl #16
  400ef8:	mov	w0, #0x407                 	// #1031
  400efc:	bl	400a40 <log_internal_realm@plt>
  400f00:	mov	w19, w0
  400f04:	ldp	x23, x24, [sp, #48]
  400f08:	b	400d88 <probe_smart_media+0x48>
  400f0c:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400f10:	add	x5, x5, #0x188
  400f14:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400f18:	add	x4, x4, #0x1d0
  400f1c:	mov	w3, #0x57                  	// #87
  400f20:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400f24:	add	x2, x2, #0x11b
  400f28:	mov	w1, #0x16                  	// #22
  400f2c:	movk	w1, #0x4000, lsl #16
  400f30:	mov	w0, #0x407                 	// #1031
  400f34:	bl	400a40 <log_internal_realm@plt>
  400f38:	mov	w19, w0
  400f3c:	ldp	x23, x24, [sp, #48]
  400f40:	b	400d88 <probe_smart_media+0x48>
  400f44:	mov	w0, #0x1                   	// #1
  400f48:	bl	400aa0 <log_get_max_level_realm@plt>
  400f4c:	mov	w19, #0xffffffea            	// #-22
  400f50:	cmp	w0, #0x6
  400f54:	b.gt	400f60 <probe_smart_media+0x220>
  400f58:	ldp	x23, x24, [sp, #48]
  400f5c:	b	400d88 <probe_smart_media+0x48>
  400f60:	adrp	x5, 401000 <__libc_csu_init+0x20>
  400f64:	add	x5, x5, #0x198
  400f68:	adrp	x4, 401000 <__libc_csu_init+0x20>
  400f6c:	add	x4, x4, #0x1d0
  400f70:	mov	w3, #0x5c                  	// #92
  400f74:	adrp	x2, 401000 <__libc_csu_init+0x20>
  400f78:	add	x2, x2, #0x11b
  400f7c:	mov	w1, #0x16                  	// #22
  400f80:	movk	w1, #0x4000, lsl #16
  400f84:	mov	w0, #0x407                 	// #1031
  400f88:	bl	400a40 <log_internal_realm@plt>
  400f8c:	mov	w19, w0
  400f90:	ldp	x23, x24, [sp, #48]
  400f94:	b	400d88 <probe_smart_media+0x48>
  400f98:	mov	x2, #0xa                   	// #10
  400f9c:	adrp	x1, 401000 <__libc_csu_init+0x20>
  400fa0:	add	x1, x1, #0x1e8
  400fa4:	mov	x0, x21
  400fa8:	bl	400a20 <memcmp@plt>
  400fac:	cbz	w0, 400fc8 <probe_smart_media+0x288>
  400fb0:	mov	x2, #0xa                   	// #10
  400fb4:	adrp	x1, 401000 <__libc_csu_init+0x20>
  400fb8:	add	x1, x1, #0x1e8
  400fbc:	add	x0, x21, #0x100
  400fc0:	bl	400a20 <memcmp@plt>
  400fc4:	cbnz	w0, 400f44 <probe_smart_media+0x204>
  400fc8:	adrp	x0, 401000 <__libc_csu_init+0x20>
  400fcc:	add	x0, x0, #0x1b8
  400fd0:	bl	400a70 <puts@plt>
  400fd4:	mov	w19, #0x0                   	// #0
  400fd8:	ldp	x23, x24, [sp, #48]
  400fdc:	b	400d88 <probe_smart_media+0x48>

0000000000400fe0 <__libc_csu_init>:
  400fe0:	stp	x29, x30, [sp, #-64]!
  400fe4:	mov	x29, sp
  400fe8:	stp	x19, x20, [sp, #16]
  400fec:	adrp	x20, 411000 <__FRAME_END__+0xfc58>
  400ff0:	add	x20, x20, #0xd10
  400ff4:	stp	x21, x22, [sp, #32]
  400ff8:	adrp	x21, 411000 <__FRAME_END__+0xfc58>
  400ffc:	add	x21, x21, #0xd08
  401000:	sub	x20, x20, x21
  401004:	mov	w22, w0
  401008:	stp	x23, x24, [sp, #48]
  40100c:	mov	x23, x1
  401010:	mov	x24, x2
  401014:	bl	400960 <_init>
  401018:	cmp	xzr, x20, asr #3
  40101c:	b.eq	401048 <__libc_csu_init+0x68>  // b.none
  401020:	asr	x20, x20, #3
  401024:	mov	x19, #0x0                   	// #0
  401028:	ldr	x3, [x21, x19, lsl #3]
  40102c:	mov	x2, x24
  401030:	add	x19, x19, #0x1
  401034:	mov	x1, x23
  401038:	mov	w0, w22
  40103c:	blr	x3
  401040:	cmp	x20, x19
  401044:	b.ne	401028 <__libc_csu_init+0x48>  // b.any
  401048:	ldp	x19, x20, [sp, #16]
  40104c:	ldp	x21, x22, [sp, #32]
  401050:	ldp	x23, x24, [sp, #48]
  401054:	ldp	x29, x30, [sp], #64
  401058:	ret
  40105c:	nop

0000000000401060 <__libc_csu_fini>:
  401060:	ret

Disassembly of section .fini:

0000000000401064 <_fini>:
  401064:	stp	x29, x30, [sp, #-16]!
  401068:	mov	x29, sp
  40106c:	ldp	x29, x30, [sp], #16
  401070:	ret
