
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testmultiphase.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001cb0 <.init>:
    1cb0:	stp	x29, x30, [sp, #-16]!
    1cb4:	mov	x29, sp
    1cb8:	bl	1e90 <PyDict_GetItemWithError@plt+0x10>
    1cbc:	ldp	x29, x30, [sp], #16
    1cc0:	ret

Disassembly of section .plt:

0000000000001cd0 <PyDict_SetItemString@plt-0x20>:
    1cd0:	stp	x16, x30, [sp, #-16]!
    1cd4:	adrp	x16, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1cd8:	ldr	x17, [x16, #4088]
    1cdc:	add	x16, x16, #0xff8
    1ce0:	br	x17
    1ce4:	nop
    1ce8:	nop
    1cec:	nop

0000000000001cf0 <PyDict_SetItemString@plt>:
    1cf0:	adrp	x16, 14000 <PyDict_SetItemString>
    1cf4:	ldr	x17, [x16]
    1cf8:	add	x16, x16, #0x0
    1cfc:	br	x17

0000000000001d00 <PyModule_AddIntConstant@plt>:
    1d00:	adrp	x16, 14000 <PyDict_SetItemString>
    1d04:	ldr	x17, [x16, #8]
    1d08:	add	x16, x16, #0x8
    1d0c:	br	x17

0000000000001d10 <PyModuleDef_Init@plt>:
    1d10:	adrp	x16, 14000 <PyDict_SetItemString>
    1d14:	ldr	x17, [x16, #16]
    1d18:	add	x16, x16, #0x10
    1d1c:	br	x17

0000000000001d20 <__cxa_finalize@plt>:
    1d20:	adrp	x16, 14000 <PyDict_SetItemString>
    1d24:	ldr	x17, [x16, #24]
    1d28:	add	x16, x16, #0x18
    1d2c:	br	x17

0000000000001d30 <_Py_Dealloc@plt>:
    1d30:	adrp	x16, 14000 <PyDict_SetItemString>
    1d34:	ldr	x17, [x16, #32]
    1d38:	add	x16, x16, #0x20
    1d3c:	br	x17

0000000000001d40 <PyState_RemoveModule@plt>:
    1d40:	adrp	x16, 14000 <PyDict_SetItemString>
    1d44:	ldr	x17, [x16, #40]
    1d48:	add	x16, x16, #0x28
    1d4c:	br	x17

0000000000001d50 <PyErr_SetString@plt>:
    1d50:	adrp	x16, 14000 <PyDict_SetItemString>
    1d54:	ldr	x17, [x16, #48]
    1d58:	add	x16, x16, #0x30
    1d5c:	br	x17

0000000000001d60 <PyModule_GetState@plt>:
    1d60:	adrp	x16, 14000 <PyDict_SetItemString>
    1d64:	ldr	x17, [x16, #56]
    1d68:	add	x16, x16, #0x38
    1d6c:	br	x17

0000000000001d70 <PyModule_New@plt>:
    1d70:	adrp	x16, 14000 <PyDict_SetItemString>
    1d74:	ldr	x17, [x16, #64]
    1d78:	add	x16, x16, #0x40
    1d7c:	br	x17

0000000000001d80 <PyErr_ExceptionMatches@plt>:
    1d80:	adrp	x16, 14000 <PyDict_SetItemString>
    1d84:	ldr	x17, [x16, #72]
    1d88:	add	x16, x16, #0x48
    1d8c:	br	x17

0000000000001d90 <PyLong_FromLong@plt>:
    1d90:	adrp	x16, 14000 <PyDict_SetItemString>
    1d94:	ldr	x17, [x16, #80]
    1d98:	add	x16, x16, #0x50
    1d9c:	br	x17

0000000000001da0 <PyErr_NewException@plt>:
    1da0:	adrp	x16, 14000 <PyDict_SetItemString>
    1da4:	ldr	x17, [x16, #88]
    1da8:	add	x16, x16, #0x58
    1dac:	br	x17

0000000000001db0 <PyModule_GetDef@plt>:
    1db0:	adrp	x16, 14000 <PyDict_SetItemString>
    1db4:	ldr	x17, [x16, #96]
    1db8:	add	x16, x16, #0x60
    1dbc:	br	x17

0000000000001dc0 <__gmon_start__@plt>:
    1dc0:	adrp	x16, 14000 <PyDict_SetItemString>
    1dc4:	ldr	x17, [x16, #104]
    1dc8:	add	x16, x16, #0x68
    1dcc:	br	x17

0000000000001dd0 <_PyNamespace_New@plt>:
    1dd0:	adrp	x16, 14000 <PyDict_SetItemString>
    1dd4:	ldr	x17, [x16, #112]
    1dd8:	add	x16, x16, #0x70
    1ddc:	br	x17

0000000000001de0 <PyObject_GenericGetAttr@plt>:
    1de0:	adrp	x16, 14000 <PyDict_SetItemString>
    1de4:	ldr	x17, [x16, #120]
    1de8:	add	x16, x16, #0x78
    1dec:	br	x17

0000000000001df0 <PyErr_Occurred@plt>:
    1df0:	adrp	x16, 14000 <PyDict_SetItemString>
    1df4:	ldr	x17, [x16, #128]
    1df8:	add	x16, x16, #0x80
    1dfc:	br	x17

0000000000001e00 <PyState_FindModule@plt>:
    1e00:	adrp	x16, 14000 <PyDict_SetItemString>
    1e04:	ldr	x17, [x16, #136]
    1e08:	add	x16, x16, #0x88
    1e0c:	br	x17

0000000000001e10 <PyArg_ParseTuple@plt>:
    1e10:	adrp	x16, 14000 <PyDict_SetItemString>
    1e14:	ldr	x17, [x16, #144]
    1e18:	add	x16, x16, #0x90
    1e1c:	br	x17

0000000000001e20 <PyDict_New@plt>:
    1e20:	adrp	x16, 14000 <PyDict_SetItemString>
    1e24:	ldr	x17, [x16, #152]
    1e28:	add	x16, x16, #0x98
    1e2c:	br	x17

0000000000001e30 <PyState_AddModule@plt>:
    1e30:	adrp	x16, 14000 <PyDict_SetItemString>
    1e34:	ldr	x17, [x16, #160]
    1e38:	add	x16, x16, #0xa0
    1e3c:	br	x17

0000000000001e40 <PyModule_AddStringConstant@plt>:
    1e40:	adrp	x16, 14000 <PyDict_SetItemString>
    1e44:	ldr	x17, [x16, #168]
    1e48:	add	x16, x16, #0xa8
    1e4c:	br	x17

0000000000001e50 <PyModule_AddObject@plt>:
    1e50:	adrp	x16, 14000 <PyDict_SetItemString>
    1e54:	ldr	x17, [x16, #176]
    1e58:	add	x16, x16, #0xb0
    1e5c:	br	x17

0000000000001e60 <PyDict_DelItemString@plt>:
    1e60:	adrp	x16, 14000 <PyDict_SetItemString>
    1e64:	ldr	x17, [x16, #184]
    1e68:	add	x16, x16, #0xb8
    1e6c:	br	x17

0000000000001e70 <PyType_FromSpec@plt>:
    1e70:	adrp	x16, 14000 <PyDict_SetItemString>
    1e74:	ldr	x17, [x16, #192]
    1e78:	add	x16, x16, #0xc0
    1e7c:	br	x17

0000000000001e80 <PyDict_GetItemWithError@plt>:
    1e80:	adrp	x16, 14000 <PyDict_SetItemString>
    1e84:	ldr	x17, [x16, #200]
    1e88:	add	x16, x16, #0xc8
    1e8c:	br	x17

Disassembly of section .text:

0000000000001e90 <PyInit__testmultiphase@@Base-0x6bc>:
    1e90:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1e94:	ldr	x0, [x0, #4032]
    1e98:	cbz	x0, 1ea0 <PyDict_GetItemWithError@plt+0x20>
    1e9c:	b	1dc0 <__gmon_start__@plt>
    1ea0:	ret
    1ea4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1ea8:	add	x0, x0, #0xc38
    1eac:	adrp	x1, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1eb0:	add	x1, x1, #0xc38
    1eb4:	cmp	x1, x0
    1eb8:	b.eq	1ed0 <PyDict_GetItemWithError@plt+0x50>  // b.none
    1ebc:	adrp	x1, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1ec0:	ldr	x1, [x1, #4008]
    1ec4:	cbz	x1, 1ed0 <PyDict_GetItemWithError@plt+0x50>
    1ec8:	mov	x16, x1
    1ecc:	br	x16
    1ed0:	ret
    1ed4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1ed8:	add	x0, x0, #0xc38
    1edc:	adrp	x1, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1ee0:	add	x1, x1, #0xc38
    1ee4:	sub	x1, x1, x0
    1ee8:	mov	x2, #0x2                   	// #2
    1eec:	asr	x1, x1, #3
    1ef0:	sdiv	x1, x1, x2
    1ef4:	cbz	x1, 1f0c <PyDict_GetItemWithError@plt+0x8c>
    1ef8:	adrp	x2, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1efc:	ldr	x2, [x2, #4064]
    1f00:	cbz	x2, 1f0c <PyDict_GetItemWithError@plt+0x8c>
    1f04:	mov	x16, x2
    1f08:	br	x16
    1f0c:	ret
    1f10:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1f14:	ldrb	w1, [x0, #3128]
    1f18:	cbnz	w1, 1f5c <PyDict_GetItemWithError@plt+0xdc>
    1f1c:	stp	x29, x30, [sp, #-32]!
    1f20:	mov	x29, sp
    1f24:	str	x19, [sp, #16]
    1f28:	mov	x19, x0
    1f2c:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1f30:	ldr	x0, [x0, #4016]
    1f34:	cbz	x0, 1f44 <PyDict_GetItemWithError@plt+0xc4>
    1f38:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1f3c:	ldr	x0, [x0, #208]
    1f40:	bl	1d20 <__cxa_finalize@plt>
    1f44:	bl	1ea4 <PyDict_GetItemWithError@plt+0x24>
    1f48:	mov	w0, #0x1                   	// #1
    1f4c:	strb	w0, [x19, #3128]
    1f50:	ldr	x19, [sp, #16]
    1f54:	ldp	x29, x30, [sp], #32
    1f58:	ret
    1f5c:	ret
    1f60:	b	1ed4 <PyDict_GetItemWithError@plt+0x54>
    1f64:	ldr	x0, [x0, #16]
    1f68:	mov	x3, x1
    1f6c:	mov	x1, x2
    1f70:	cbz	x0, 1f7c <PyDict_GetItemWithError@plt+0xfc>
    1f74:	mov	x16, x3
    1f78:	br	x16
    1f7c:	mov	w0, #0x0                   	// #0
    1f80:	ret
    1f84:	mov	x0, #0x0                   	// #0
    1f88:	ret
    1f8c:	mov	w0, #0xffffffff            	// #-1
    1f90:	ret
    1f94:	stp	x29, x30, [sp, #-32]!
    1f98:	adrp	x1, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    1f9c:	mov	x29, sp
    1fa0:	ldr	x1, [x1, #4056]
    1fa4:	stp	x19, x20, [sp, #16]
    1fa8:	mov	x19, x0
    1fac:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1fb0:	adrp	x20, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    1fb4:	add	x20, x20, #0x138
    1fb8:	str	x1, [x0, #224]
    1fbc:	mov	x0, x20
    1fc0:	bl	1e70 <PyType_FromSpec@plt>
    1fc4:	cbnz	x0, 1fd8 <PyDict_GetItemWithError@plt+0x158>
    1fc8:	mov	w0, #0xffffffff            	// #-1
    1fcc:	ldp	x19, x20, [sp, #16]
    1fd0:	ldp	x29, x30, [sp], #32
    1fd4:	ret
    1fd8:	mov	x2, x0
    1fdc:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    1fe0:	mov	x0, x19
    1fe4:	add	x1, x1, #0xb52
    1fe8:	bl	1e50 <PyModule_AddObject@plt>
    1fec:	cbnz	w0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    1ff0:	mov	x2, #0x0                   	// #0
    1ff4:	mov	x1, #0x0                   	// #0
    1ff8:	adrp	x0, 2000 <PyDict_GetItemWithError@plt+0x180>
    1ffc:	add	x0, x0, #0x714
    2000:	bl	1da0 <PyErr_NewException@plt>
    2004:	mov	x2, x0
    2008:	cbz	x0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    200c:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2010:	mov	x0, x19
    2014:	add	x1, x1, #0x724
    2018:	bl	1e50 <PyModule_AddObject@plt>
    201c:	cbnz	w0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    2020:	add	x0, x20, #0x20
    2024:	bl	1e70 <PyType_FromSpec@plt>
    2028:	mov	x2, x0
    202c:	cbz	x0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    2030:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2034:	mov	x0, x19
    2038:	add	x1, x1, #0xb3e
    203c:	bl	1e50 <PyModule_AddObject@plt>
    2040:	cbnz	w0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    2044:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2048:	mov	x0, x19
    204c:	add	x1, x1, #0x72a
    2050:	mov	x2, #0x7b1                 	// #1969
    2054:	bl	1d00 <PyModule_AddIntConstant@plt>
    2058:	cbnz	w0, 1fc8 <PyDict_GetItemWithError@plt+0x148>
    205c:	mov	x0, x19
    2060:	adrp	x2, 2000 <PyDict_GetItemWithError@plt+0x180>
    2064:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2068:	add	x2, x2, #0x734
    206c:	add	x1, x1, #0x748
    2070:	bl	1e40 <PyModule_AddStringConstant@plt>
    2074:	cmp	w0, #0x0
    2078:	csetm	w0, ne  // ne = any
    207c:	b	1fcc <PyDict_GetItemWithError@plt+0x14c>
    2080:	stp	x29, x30, [sp, #-16]!
    2084:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    2088:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    208c:	mov	x29, sp
    2090:	ldr	x0, [x0, #4000]
    2094:	add	x1, x1, #0x752
    2098:	ldr	x0, [x0]
    209c:	bl	1d50 <PyErr_SetString@plt>
    20a0:	mov	x0, #0x0                   	// #0
    20a4:	ldp	x29, x30, [sp], #16
    20a8:	ret
    20ac:	stp	x29, x30, [sp, #-16]!
    20b0:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    20b4:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    20b8:	mov	x29, sp
    20bc:	ldr	x0, [x0, #4000]
    20c0:	add	x1, x1, #0x766
    20c4:	ldr	x0, [x0]
    20c8:	bl	1d50 <PyErr_SetString@plt>
    20cc:	mov	w0, #0xffffffff            	// #-1
    20d0:	ldp	x29, x30, [sp], #16
    20d4:	ret
    20d8:	stp	x29, x30, [sp, #-16]!
    20dc:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    20e0:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    20e4:	mov	x29, sp
    20e8:	ldr	x0, [x0, #4000]
    20ec:	add	x1, x1, #0x766
    20f0:	ldr	x0, [x0]
    20f4:	bl	1d50 <PyErr_SetString@plt>
    20f8:	mov	w0, #0x0                   	// #0
    20fc:	ldp	x29, x30, [sp], #16
    2100:	ret
    2104:	stp	x29, x30, [sp, #-48]!
    2108:	mov	x29, sp
    210c:	stp	x19, x20, [sp, #16]
    2110:	mov	x20, x0
    2114:	ldr	x0, [x0, #16]
    2118:	str	x21, [sp, #32]
    211c:	mov	x21, x1
    2120:	cbnz	x0, 213c <PyDict_GetItemWithError@plt+0x2bc>
    2124:	mov	x1, x21
    2128:	mov	x0, x20
    212c:	ldp	x19, x20, [sp, #16]
    2130:	ldr	x21, [sp, #32]
    2134:	ldp	x29, x30, [sp], #48
    2138:	b	1de0 <PyObject_GenericGetAttr@plt>
    213c:	bl	1e80 <PyDict_GetItemWithError@plt>
    2140:	mov	x19, x0
    2144:	cbz	x0, 2168 <PyDict_GetItemWithError@plt+0x2e8>
    2148:	ldr	x0, [x0]
    214c:	add	x0, x0, #0x1
    2150:	str	x0, [x19]
    2154:	mov	x0, x19
    2158:	ldp	x19, x20, [sp, #16]
    215c:	ldr	x21, [sp, #32]
    2160:	ldp	x29, x30, [sp], #48
    2164:	ret
    2168:	bl	1df0 <PyErr_Occurred@plt>
    216c:	cbz	x0, 2124 <PyDict_GetItemWithError@plt+0x2a4>
    2170:	b	2154 <PyDict_GetItemWithError@plt+0x2d4>
    2174:	stp	x29, x30, [sp, #-64]!
    2178:	mov	x29, sp
    217c:	stp	x19, x20, [sp, #16]
    2180:	mov	x20, x0
    2184:	str	x21, [sp, #32]
    2188:	mov	x21, x1
    218c:	bl	1db0 <PyModule_GetDef@plt>
    2190:	cbnz	x0, 21a8 <PyDict_GetItemWithError@plt+0x328>
    2194:	mov	x0, #0x0                   	// #0
    2198:	ldp	x19, x20, [sp, #16]
    219c:	ldr	x21, [sp, #32]
    21a0:	ldp	x29, x30, [sp], #64
    21a4:	ret
    21a8:	mov	x19, x0
    21ac:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    21b0:	add	x2, sp, #0x3c
    21b4:	add	x1, x1, #0x778
    21b8:	mov	x0, x21
    21bc:	bl	1e10 <PyArg_ParseTuple@plt>
    21c0:	cbz	w0, 2194 <PyDict_GetItemWithError@plt+0x314>
    21c4:	ldr	w0, [sp, #60]
    21c8:	cmp	w0, #0x1
    21cc:	b.eq	2200 <PyDict_GetItemWithError@plt+0x380>  // b.none
    21d0:	cmp	w0, #0x2
    21d4:	b.eq	2214 <PyDict_GetItemWithError@plt+0x394>  // b.none
    21d8:	cbnz	w0, 21e8 <PyDict_GetItemWithError@plt+0x368>
    21dc:	mov	x0, x19
    21e0:	bl	1e00 <PyState_FindModule@plt>
    21e4:	cbnz	x0, 2198 <PyDict_GetItemWithError@plt+0x318>
    21e8:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    21ec:	ldr	x0, [x0, #4040]
    21f0:	ldr	x1, [x0]
    21f4:	add	x1, x1, #0x1
    21f8:	str	x1, [x0]
    21fc:	b	2198 <PyDict_GetItemWithError@plt+0x318>
    2200:	mov	x1, x19
    2204:	mov	x0, x20
    2208:	bl	1e30 <PyState_AddModule@plt>
    220c:	cbz	w0, 21e8 <PyDict_GetItemWithError@plt+0x368>
    2210:	b	2194 <PyDict_GetItemWithError@plt+0x314>
    2214:	mov	x0, x19
    2218:	bl	1d40 <PyState_RemoveModule@plt>
    221c:	b	220c <PyDict_GetItemWithError@plt+0x38c>
    2220:	stp	x29, x30, [sp, #-32]!
    2224:	mov	x0, x1
    2228:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    222c:	mov	x29, sp
    2230:	add	x3, sp, #0x18
    2234:	add	x2, sp, #0x10
    2238:	add	x1, x1, #0x797
    223c:	bl	1e10 <PyArg_ParseTuple@plt>
    2240:	cbz	w0, 2258 <PyDict_GetItemWithError@plt+0x3d8>
    2244:	ldp	x1, x0, [sp, #16]
    2248:	add	x0, x1, x0
    224c:	bl	1d90 <PyLong_FromLong@plt>
    2250:	ldp	x29, x30, [sp], #32
    2254:	ret
    2258:	mov	x0, #0x0                   	// #0
    225c:	b	2250 <PyDict_GetItemWithError@plt+0x3d0>
    2260:	stp	x29, x30, [sp, #-32]!
    2264:	mov	x0, x1
    2268:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    226c:	mov	x29, sp
    2270:	add	x3, sp, #0x18
    2274:	add	x2, sp, #0x10
    2278:	add	x1, x1, #0x79e
    227c:	bl	1e10 <PyArg_ParseTuple@plt>
    2280:	cbz	w0, 2298 <PyDict_GetItemWithError@plt+0x418>
    2284:	ldp	x1, x0, [sp, #16]
    2288:	sub	x0, x1, x0
    228c:	bl	1d90 <PyLong_FromLong@plt>
    2290:	ldp	x29, x30, [sp], #32
    2294:	ret
    2298:	mov	x0, #0x0                   	// #0
    229c:	b	2290 <PyDict_GetItemWithError@plt+0x410>
    22a0:	stp	x29, x30, [sp, #-16]!
    22a4:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    22a8:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    22ac:	mov	x29, sp
    22b0:	ldr	x0, [x0, #4000]
    22b4:	add	x1, x1, #0x752
    22b8:	ldr	x0, [x0]
    22bc:	bl	1d50 <PyErr_SetString@plt>
    22c0:	ldp	x29, x30, [sp], #16
    22c4:	adrp	x0, 2000 <PyDict_GetItemWithError@plt+0x180>
    22c8:	add	x0, x0, #0x79a
    22cc:	b	1d70 <PyModule_New@plt>
    22d0:	stp	x29, x30, [sp, #-32]!
    22d4:	mov	x29, sp
    22d8:	stp	x19, x20, [sp, #16]
    22dc:	mov	x19, x1
    22e0:	mov	x20, x2
    22e4:	bl	1d60 <PyModule_GetState@plt>
    22e8:	ldr	x0, [x0]
    22ec:	cbz	x0, 2304 <PyDict_GetItemWithError@plt+0x484>
    22f0:	mov	x1, x20
    22f4:	mov	x16, x19
    22f8:	ldp	x19, x20, [sp, #16]
    22fc:	ldp	x29, x30, [sp], #32
    2300:	br	x16
    2304:	mov	w0, #0x0                   	// #0
    2308:	ldp	x19, x20, [sp, #16]
    230c:	ldp	x29, x30, [sp], #32
    2310:	ret
    2314:	stp	x29, x30, [sp, #-32]!
    2318:	mov	x29, sp
    231c:	str	x19, [sp, #16]
    2320:	bl	1d60 <PyModule_GetState@plt>
    2324:	cbz	x0, 2354 <PyDict_GetItemWithError@plt+0x4d4>
    2328:	mov	x19, x0
    232c:	mov	x0, #0x7fffffff            	// #2147483647
    2330:	bl	1d90 <PyLong_FromLong@plt>
    2334:	ldr	x1, [x0]
    2338:	str	x0, [x19]
    233c:	add	x1, x1, #0x1
    2340:	str	x1, [x0]
    2344:	mov	w0, #0x0                   	// #0
    2348:	ldr	x19, [sp, #16]
    234c:	ldp	x29, x30, [sp], #32
    2350:	ret
    2354:	mov	w0, #0xffffffff            	// #-1
    2358:	b	2348 <PyDict_GetItemWithError@plt+0x4c8>
    235c:	stp	x29, x30, [sp, #-32]!
    2360:	mov	x0, x1
    2364:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2368:	mov	x29, sp
    236c:	add	x2, sp, #0x18
    2370:	add	x1, x1, #0x7a5
    2374:	str	xzr, [sp, #24]
    2378:	bl	1e10 <PyArg_ParseTuple@plt>
    237c:	cbz	w0, 23b4 <PyDict_GetItemWithError@plt+0x534>
    2380:	ldr	x0, [sp, #24]
    2384:	cbz	x0, 23a8 <PyDict_GetItemWithError@plt+0x528>
    2388:	ldr	x1, [x0, #8]
    238c:	ldr	x1, [x1, #168]
    2390:	tbz	w1, #28, 23a8 <PyDict_GetItemWithError@plt+0x528>
    2394:	ldr	x1, [x0]
    2398:	add	x1, x1, #0x1
    239c:	str	x1, [x0]
    23a0:	ldp	x29, x30, [sp], #32
    23a4:	ret
    23a8:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    23ac:	ldr	x0, [x0, #4040]
    23b0:	b	2394 <PyDict_GetItemWithError@plt+0x514>
    23b4:	mov	x0, #0x0                   	// #0
    23b8:	b	23a0 <PyDict_GetItemWithError@plt+0x520>
    23bc:	stp	x29, x30, [sp, #-48]!
    23c0:	mov	x29, sp
    23c4:	stp	x19, x20, [sp, #16]
    23c8:	mov	x19, x0
    23cc:	mov	x20, x1
    23d0:	ldr	x0, [x0, #16]
    23d4:	str	x21, [sp, #32]
    23d8:	mov	x21, x2
    23dc:	cbz	x0, 2438 <PyDict_GetItemWithError@plt+0x5b8>
    23e0:	ldr	x0, [x19, #16]
    23e4:	cbnz	x21, 244c <PyDict_GetItemWithError@plt+0x5cc>
    23e8:	mov	x1, x20
    23ec:	bl	1e60 <PyDict_DelItemString@plt>
    23f0:	mov	w19, w0
    23f4:	tbz	w0, #31, 2424 <PyDict_GetItemWithError@plt+0x5a4>
    23f8:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    23fc:	ldr	x0, [x0, #4024]
    2400:	ldr	x0, [x0]
    2404:	bl	1d80 <PyErr_ExceptionMatches@plt>
    2408:	cbz	w0, 2424 <PyDict_GetItemWithError@plt+0x5a4>
    240c:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    2410:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2414:	add	x1, x1, #0x7ad
    2418:	ldr	x0, [x0, #4048]
    241c:	ldr	x0, [x0]
    2420:	bl	1d50 <PyErr_SetString@plt>
    2424:	mov	w0, w19
    2428:	ldp	x19, x20, [sp, #16]
    242c:	ldr	x21, [sp, #32]
    2430:	ldp	x29, x30, [sp], #48
    2434:	ret
    2438:	bl	1e20 <PyDict_New@plt>
    243c:	str	x0, [x19, #16]
    2440:	cbnz	x0, 23e0 <PyDict_GetItemWithError@plt+0x560>
    2444:	mov	w19, #0xffffffff            	// #-1
    2448:	b	2424 <PyDict_GetItemWithError@plt+0x5a4>
    244c:	mov	x2, x21
    2450:	mov	x1, x20
    2454:	ldp	x19, x20, [sp, #16]
    2458:	ldr	x21, [sp, #32]
    245c:	ldp	x29, x30, [sp], #48
    2460:	b	1cf0 <PyDict_SetItemString@plt>
    2464:	ldr	x1, [x0]
    2468:	sub	x1, x1, #0x1
    246c:	str	x1, [x0]
    2470:	cbnz	x1, 2478 <PyDict_GetItemWithError@plt+0x5f8>
    2474:	b	1d30 <_Py_Dealloc@plt>
    2478:	ret
    247c:	mov	x1, x0
    2480:	ldr	x0, [x0, #16]
    2484:	cbz	x0, 2490 <PyDict_GetItemWithError@plt+0x610>
    2488:	str	xzr, [x1, #16]
    248c:	b	2464 <PyDict_GetItemWithError@plt+0x5e4>
    2490:	ret
    2494:	stp	x29, x30, [sp, #-32]!
    2498:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    249c:	add	x0, x0, #0x138
    24a0:	mov	x29, sp
    24a4:	stp	x19, x20, [sp, #16]
    24a8:	add	x2, x0, #0x40
    24ac:	cmp	x1, x2
    24b0:	b.eq	24ec <PyDict_GetItemWithError@plt+0x66c>  // b.none
    24b4:	add	x0, x0, #0xa8
    24b8:	cmp	x1, x0
    24bc:	b.eq	24ec <PyDict_GetItemWithError@plt+0x66c>  // b.none
    24c0:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    24c4:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    24c8:	add	x1, x1, #0x7d3
    24cc:	ldr	x0, [x0, #4000]
    24d0:	ldr	x0, [x0]
    24d4:	bl	1d50 <PyErr_SetString@plt>
    24d8:	mov	x19, #0x0                   	// #0
    24dc:	mov	x0, x19
    24e0:	ldp	x19, x20, [sp, #16]
    24e4:	ldp	x29, x30, [sp], #32
    24e8:	ret
    24ec:	bl	1e20 <PyDict_New@plt>
    24f0:	mov	x19, x0
    24f4:	cbz	x0, 24dc <PyDict_GetItemWithError@plt+0x65c>
    24f8:	mov	x0, #0x3                   	// #3
    24fc:	bl	1d90 <PyLong_FromLong@plt>
    2500:	mov	x20, x0
    2504:	cbnz	x0, 2514 <PyDict_GetItemWithError@plt+0x694>
    2508:	mov	x0, x19
    250c:	bl	2464 <PyDict_GetItemWithError@plt+0x5e4>
    2510:	b	24d8 <PyDict_GetItemWithError@plt+0x658>
    2514:	mov	x2, x0
    2518:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    251c:	add	x1, x1, #0x7e6
    2520:	mov	x0, x19
    2524:	bl	1cf0 <PyDict_SetItemString@plt>
    2528:	mov	x0, x20
    252c:	bl	2464 <PyDict_GetItemWithError@plt+0x5e4>
    2530:	mov	x0, x19
    2534:	bl	1dd0 <_PyNamespace_New@plt>
    2538:	mov	x20, x0
    253c:	mov	x0, x19
    2540:	mov	x19, x20
    2544:	bl	2464 <PyDict_GetItemWithError@plt+0x5e4>
    2548:	b	24dc <PyDict_GetItemWithError@plt+0x65c>

000000000000254c <PyInit__testmultiphase@@Base>:
    254c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2550:	add	x0, x0, #0x138
    2554:	add	x0, x0, #0x110
    2558:	b	1d10 <PyModuleDef_Init@plt>

000000000000255c <PyInit__testmultiphase_nonmodule@@Base>:
    255c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2560:	add	x0, x0, #0x138
    2564:	add	x0, x0, #0x40
    2568:	b	1d10 <PyModuleDef_Init@plt>

000000000000256c <PyInit__testmultiphase_nonmodule_with_methods@@Base>:
    256c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2570:	add	x0, x0, #0x138
    2574:	add	x0, x0, #0xa8
    2578:	b	1d10 <PyModuleDef_Init@plt>

000000000000257c <PyInitU__testmultiphase_zkouka_naten_evc07gi8e@@Base>:
    257c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2580:	add	x0, x0, #0x138
    2584:	add	x0, x0, #0x178
    2588:	b	1d10 <PyModuleDef_Init@plt>

000000000000258c <PyInitU_eckzbwbhc6jpgzcx415x@@Base>:
    258c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2590:	add	x0, x0, #0x138
    2594:	add	x0, x0, #0x1e0
    2598:	b	1d10 <PyModuleDef_Init@plt>

000000000000259c <PyInit_x@@Base>:
    259c:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25a0:	add	x0, x0, #0x138
    25a4:	add	x0, x0, #0x110
    25a8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025ac <PyInit__testmultiphase_null_slots@@Base>:
    25ac:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25b0:	add	x0, x0, #0x138
    25b4:	add	x0, x0, #0x248
    25b8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025bc <PyInit__testmultiphase_bad_slot_large@@Base>:
    25bc:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25c0:	add	x0, x0, #0x138
    25c4:	add	x0, x0, #0x2b0
    25c8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025cc <PyInit__testmultiphase_bad_slot_negative@@Base>:
    25cc:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25d0:	add	x0, x0, #0x138
    25d4:	add	x0, x0, #0x318
    25d8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025dc <PyInit__testmultiphase_create_int_with_state@@Base>:
    25dc:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25e0:	add	x0, x0, #0x138
    25e4:	add	x0, x0, #0x380
    25e8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025ec <PyInit__testmultiphase_negative_size@@Base>:
    25ec:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    25f0:	add	x0, x0, #0x138
    25f4:	add	x0, x0, #0x3e8
    25f8:	b	1d10 <PyModuleDef_Init@plt>

00000000000025fc <PyInit__testmultiphase_export_uninitialized@@Base>:
    25fc:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2600:	add	x0, x0, #0x138
    2604:	add	x0, x0, #0x450
    2608:	ret

000000000000260c <PyInit__testmultiphase_export_null@@Base>:
    260c:	mov	x0, #0x0                   	// #0
    2610:	ret

0000000000002614 <PyInit__testmultiphase_export_raise@@Base>:
    2614:	stp	x29, x30, [sp, #-16]!
    2618:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    261c:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    2620:	mov	x29, sp
    2624:	ldr	x0, [x0, #4000]
    2628:	add	x1, x1, #0x7ec
    262c:	ldr	x0, [x0]
    2630:	bl	1d50 <PyErr_SetString@plt>
    2634:	mov	x0, #0x0                   	// #0
    2638:	ldp	x29, x30, [sp], #16
    263c:	ret

0000000000002640 <PyInit__testmultiphase_export_unreported_exception@@Base>:
    2640:	stp	x29, x30, [sp, #-16]!
    2644:	adrp	x0, 13000 <PyInit_imp_dummy@@Base+0x1090c>
    2648:	adrp	x1, 2000 <PyDict_GetItemWithError@plt+0x180>
    264c:	mov	x29, sp
    2650:	ldr	x0, [x0, #4000]
    2654:	add	x1, x1, #0x7ec
    2658:	ldr	x0, [x0]
    265c:	bl	1d50 <PyErr_SetString@plt>
    2660:	ldp	x29, x30, [sp], #16
    2664:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2668:	add	x0, x0, #0x138
    266c:	add	x0, x0, #0x110
    2670:	b	1d10 <PyModuleDef_Init@plt>

0000000000002674 <PyInit__testmultiphase_create_null@@Base>:
    2674:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2678:	add	x0, x0, #0x138
    267c:	add	x0, x0, #0x4b8
    2680:	b	1d10 <PyModuleDef_Init@plt>

0000000000002684 <PyInit__testmultiphase_create_raise@@Base>:
    2684:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2688:	add	x0, x0, #0x138
    268c:	add	x0, x0, #0x520
    2690:	b	1d10 <PyModuleDef_Init@plt>

0000000000002694 <PyInit__testmultiphase_create_unreported_exception@@Base>:
    2694:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    2698:	add	x0, x0, #0x138
    269c:	add	x0, x0, #0x588
    26a0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026a4 <PyInit__testmultiphase_nonmodule_with_exec_slots@@Base>:
    26a4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26a8:	add	x0, x0, #0x138
    26ac:	add	x0, x0, #0x5f0
    26b0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026b4 <PyInit__testmultiphase_exec_err@@Base>:
    26b4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26b8:	add	x0, x0, #0x138
    26bc:	add	x0, x0, #0x658
    26c0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026c4 <PyInit__testmultiphase_exec_raise@@Base>:
    26c4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26c8:	add	x0, x0, #0x138
    26cc:	add	x0, x0, #0x6c0
    26d0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026d4 <PyInit__testmultiphase_exec_unreported_exception@@Base>:
    26d4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26d8:	add	x0, x0, #0x138
    26dc:	add	x0, x0, #0x728
    26e0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026e4 <PyInit__testmultiphase_with_bad_traverse@@Base>:
    26e4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26e8:	add	x0, x0, #0x138
    26ec:	add	x0, x0, #0x790
    26f0:	b	1d10 <PyModuleDef_Init@plt>

00000000000026f4 <PyInit_imp_dummy@@Base>:
    26f4:	adrp	x0, 14000 <PyInit_imp_dummy@@Base+0x1190c>
    26f8:	add	x0, x0, #0x138
    26fc:	add	x0, x0, #0x7f8
    2700:	b	1d10 <PyModuleDef_Init@plt>

Disassembly of section .fini:

0000000000002704 <.fini>:
    2704:	stp	x29, x30, [sp, #-16]!
    2708:	mov	x29, sp
    270c:	ldp	x29, x30, [sp], #16
    2710:	ret
