
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 1d000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0xd4>:
    4250:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	nop
    4268:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    426c:	add	x0, x0, #0x428
    4270:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4274:	add	x1, x1, #0x428
    4278:	cmp	x1, x0
    427c:	b.eq	4294 <PySequence_Fast@plt+0x54>  // b.none
    4280:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4284:	ldr	x1, [x1, #3888]
    4288:	cbz	x1, 4294 <PySequence_Fast@plt+0x54>
    428c:	mov	x16, x1
    4290:	br	x16
    4294:	ret
    4298:	adrp	x0, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    429c:	add	x0, x0, #0x428
    42a0:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    42a4:	add	x1, x1, #0x428
    42a8:	sub	x1, x1, x0
    42ac:	lsr	x2, x1, #63
    42b0:	add	x1, x2, x1, asr #3
    42b4:	cmp	xzr, x1, asr #1
    42b8:	asr	x1, x1, #1
    42bc:	b.eq	42d4 <PySequence_Fast@plt+0x94>  // b.none
    42c0:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    42c4:	ldr	x2, [x2, #4048]
    42c8:	cbz	x2, 42d4 <PySequence_Fast@plt+0x94>
    42cc:	mov	x16, x2
    42d0:	br	x16
    42d4:	ret
    42d8:	stp	x29, x30, [sp, #-32]!
    42dc:	mov	x29, sp
    42e0:	str	x19, [sp, #16]
    42e4:	adrp	x19, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    42e8:	ldrb	w0, [x19, #1064]
    42ec:	cbnz	w0, 4314 <PySequence_Fast@plt+0xd4>
    42f0:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    42f4:	ldr	x0, [x0, #3904]
    42f8:	cbz	x0, 4308 <PySequence_Fast@plt+0xc8>
    42fc:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4300:	ldr	x0, [x0, #792]
    4304:	bl	3d10 <__cxa_finalize@plt>
    4308:	bl	4268 <PySequence_Fast@plt+0x28>
    430c:	mov	w0, #0x1                   	// #1
    4310:	strb	w0, [x19, #1064]
    4314:	ldr	x19, [sp, #16]
    4318:	ldp	x29, x30, [sp], #32
    431c:	ret
    4320:	b	4298 <PySequence_Fast@plt+0x58>

0000000000004324 <PyInit__elementtree@@Base>:
    4324:	stp	x29, x30, [sp, #-48]!
    4328:	str	x21, [sp, #16]
    432c:	stp	x20, x19, [sp, #32]
    4330:	mov	x29, sp
    4334:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4338:	add	x0, x0, #0x320
    433c:	bl	3fc0 <PyState_FindModule@plt>
    4340:	cbz	x0, 4350 <PyInit__elementtree@@Base+0x2c>
    4344:	mov	x19, x0
    4348:	bl	4538 <PyInit__elementtree@@Base+0x214>
    434c:	b	4524 <PyInit__elementtree@@Base+0x200>
    4350:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4354:	add	x0, x0, #0x388
    4358:	bl	3e90 <PyType_Ready@plt>
    435c:	tbnz	w0, #31, 4520 <PyInit__elementtree@@Base+0x1fc>
    4360:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4364:	add	x0, x0, #0x528
    4368:	bl	3e90 <PyType_Ready@plt>
    436c:	tbnz	w0, #31, 4520 <PyInit__elementtree@@Base+0x1fc>
    4370:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4374:	add	x0, x0, #0x6c8
    4378:	bl	3e90 <PyType_Ready@plt>
    437c:	tbnz	w0, #31, 4520 <PyInit__elementtree@@Base+0x1fc>
    4380:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4384:	add	x0, x0, #0x868
    4388:	bl	3e90 <PyType_Ready@plt>
    438c:	tbnz	w0, #31, 4520 <PyInit__elementtree@@Base+0x1fc>
    4390:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4394:	add	x0, x0, #0x320
    4398:	mov	w1, #0x3f5                 	// #1013
    439c:	bl	3f90 <PyModule_Create2@plt>
    43a0:	mov	x19, x0
    43a4:	cbz	x0, 4524 <PyInit__elementtree@@Base+0x200>
    43a8:	mov	x0, x19
    43ac:	bl	3e10 <PyModule_GetState@plt>
    43b0:	mov	x20, x0
    43b4:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    43b8:	add	x0, x0, #0x218
    43bc:	bl	3fa0 <PyImport_ImportModule@plt>
    43c0:	cbz	x0, 4520 <PyInit__elementtree@@Base+0x1fc>
    43c4:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    43c8:	add	x1, x1, #0x214
    43cc:	mov	x21, x0
    43d0:	bl	3d00 <PyObject_GetAttrString@plt>
    43d4:	str	x0, [x20, #8]
    43d8:	mov	x0, x21
    43dc:	bl	4548 <PyInit__elementtree@@Base+0x224>
    43e0:	ldr	x8, [x20, #8]
    43e4:	cbz	x8, 4520 <PyInit__elementtree@@Base+0x1fc>
    43e8:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    43ec:	add	x0, x0, #0x21d
    43f0:	bl	3fa0 <PyImport_ImportModule@plt>
    43f4:	str	x0, [x20, #16]
    43f8:	cbz	x0, 4520 <PyInit__elementtree@@Base+0x1fc>
    43fc:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    4400:	add	x0, x0, #0x233
    4404:	mov	w1, wzr
    4408:	bl	3e80 <PyCapsule_Import@plt>
    440c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    4410:	str	x0, [x8, #1072]
    4414:	cbz	x0, 4520 <PyInit__elementtree@@Base+0x1fc>
    4418:	mov	x21, x0
    441c:	ldr	x0, [x0]
    4420:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4424:	add	x1, x1, #0x246
    4428:	bl	3ff0 <strcmp@plt>
    442c:	cbnz	w0, 4508 <PyInit__elementtree@@Base+0x1e4>
    4430:	ldr	w8, [x21, #8]
    4434:	cmp	w8, #0xb0
    4438:	b.cc	4508 <PyInit__elementtree@@Base+0x1e4>  // b.lo, b.ul, b.last
    443c:	ldr	w8, [x21, #12]
    4440:	cmp	w8, #0x2
    4444:	b.ne	4508 <PyInit__elementtree@@Base+0x1e4>  // b.any
    4448:	ldr	w8, [x21, #16]
    444c:	cmp	w8, #0x2
    4450:	b.ne	4508 <PyInit__elementtree@@Base+0x1e4>  // b.any
    4454:	ldr	w8, [x21, #20]
    4458:	cmp	w8, #0x9
    445c:	b.ne	4508 <PyInit__elementtree@@Base+0x1e4>  // b.any
    4460:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4464:	ldr	x8, [x8, #4056]
    4468:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    446c:	add	x0, x0, #0x27d
    4470:	mov	x2, xzr
    4474:	ldr	x1, [x8]
    4478:	bl	3ee0 <PyErr_NewException@plt>
    447c:	str	x0, [x20]
    4480:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4484:	ldr	x2, [x20]
    4488:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    448c:	add	x1, x1, #0x293
    4490:	mov	x0, x19
    4494:	bl	4120 <PyModule_AddObject@plt>
    4498:	adrp	x20, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    449c:	add	x20, x20, #0x6c8
    44a0:	mov	x0, x20
    44a4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    44a8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    44ac:	add	x1, x1, #0x7ce
    44b0:	mov	x0, x19
    44b4:	mov	x2, x20
    44b8:	bl	4120 <PyModule_AddObject@plt>
    44bc:	adrp	x20, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    44c0:	add	x20, x20, #0x528
    44c4:	mov	x0, x20
    44c8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    44cc:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    44d0:	add	x1, x1, #0x39f
    44d4:	mov	x0, x19
    44d8:	mov	x2, x20
    44dc:	bl	4120 <PyModule_AddObject@plt>
    44e0:	adrp	x20, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    44e4:	add	x20, x20, #0x868
    44e8:	mov	x0, x20
    44ec:	bl	4538 <PyInit__elementtree@@Base+0x214>
    44f0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    44f4:	add	x1, x1, #0x92a
    44f8:	mov	x0, x19
    44fc:	mov	x2, x20
    4500:	bl	4120 <PyModule_AddObject@plt>
    4504:	b	4524 <PyInit__elementtree@@Base+0x200>
    4508:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    450c:	ldr	x8, [x8, #4000]
    4510:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4514:	add	x1, x1, #0x25d
    4518:	ldr	x0, [x8]
    451c:	bl	3de0 <PyErr_SetString@plt>
    4520:	mov	x19, xzr
    4524:	mov	x0, x19
    4528:	ldp	x20, x19, [sp, #32]
    452c:	ldr	x21, [sp, #16]
    4530:	ldp	x29, x30, [sp], #48
    4534:	ret
    4538:	ldr	x8, [x0]
    453c:	add	x8, x8, #0x1
    4540:	str	x8, [x0]
    4544:	ret
    4548:	cbz	x0, 455c <PyInit__elementtree@@Base+0x238>
    454c:	stp	x29, x30, [sp, #-16]!
    4550:	mov	x29, sp
    4554:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4558:	ldp	x29, x30, [sp], #16
    455c:	ret
    4560:	stp	x29, x30, [sp, #-48]!
    4564:	stp	x22, x21, [sp, #16]
    4568:	stp	x20, x19, [sp, #32]
    456c:	mov	x29, sp
    4570:	mov	x20, x2
    4574:	mov	x19, x1
    4578:	bl	3e10 <PyModule_GetState@plt>
    457c:	mov	x22, x0
    4580:	ldr	x0, [x0]
    4584:	cbz	x0, 45a4 <PyInit__elementtree@@Base+0x280>
    4588:	mov	x1, x20
    458c:	blr	x19
    4590:	mov	w21, w0
    4594:	cbnz	w0, 4618 <PyInit__elementtree@@Base+0x2f4>
    4598:	ldr	x0, [x22, #8]
    459c:	cbnz	x0, 45ac <PyInit__elementtree@@Base+0x288>
    45a0:	b	45c0 <PyInit__elementtree@@Base+0x29c>
    45a4:	ldr	x0, [x22, #8]
    45a8:	cbz	x0, 45c0 <PyInit__elementtree@@Base+0x29c>
    45ac:	mov	x1, x20
    45b0:	blr	x19
    45b4:	cmp	w0, #0x0
    45b8:	csel	w21, w21, w0, eq  // eq = none
    45bc:	cbnz	w0, 4618 <PyInit__elementtree@@Base+0x2f4>
    45c0:	ldr	x0, [x22, #16]
    45c4:	cbz	x0, 45dc <PyInit__elementtree@@Base+0x2b8>
    45c8:	mov	x1, x20
    45cc:	blr	x19
    45d0:	cmp	w0, #0x0
    45d4:	csel	w21, w21, w0, eq  // eq = none
    45d8:	cbnz	w0, 4618 <PyInit__elementtree@@Base+0x2f4>
    45dc:	ldr	x0, [x22, #24]
    45e0:	cbz	x0, 45f8 <PyInit__elementtree@@Base+0x2d4>
    45e4:	mov	x1, x20
    45e8:	blr	x19
    45ec:	cmp	w0, #0x0
    45f0:	csel	w21, w21, w0, eq  // eq = none
    45f4:	cbnz	w0, 4618 <PyInit__elementtree@@Base+0x2f4>
    45f8:	ldr	x0, [x22, #32]
    45fc:	cbz	x0, 4614 <PyInit__elementtree@@Base+0x2f0>
    4600:	mov	x1, x20
    4604:	blr	x19
    4608:	cmp	w0, #0x0
    460c:	csel	w21, w21, w0, eq  // eq = none
    4610:	cbnz	w0, 4618 <PyInit__elementtree@@Base+0x2f4>
    4614:	mov	w21, wzr
    4618:	mov	w0, w21
    461c:	ldp	x20, x19, [sp, #32]
    4620:	ldp	x22, x21, [sp, #16]
    4624:	ldp	x29, x30, [sp], #48
    4628:	ret
    462c:	stp	x29, x30, [sp, #-32]!
    4630:	str	x19, [sp, #16]
    4634:	mov	x29, sp
    4638:	bl	3e10 <PyModule_GetState@plt>
    463c:	mov	x19, x0
    4640:	ldr	x0, [x0]
    4644:	cbz	x0, 4650 <PyInit__elementtree@@Base+0x32c>
    4648:	str	xzr, [x19]
    464c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4650:	ldr	x0, [x19, #8]
    4654:	cbz	x0, 4660 <PyInit__elementtree@@Base+0x33c>
    4658:	str	xzr, [x19, #8]
    465c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4660:	ldr	x0, [x19, #16]
    4664:	cbz	x0, 4670 <PyInit__elementtree@@Base+0x34c>
    4668:	str	xzr, [x19, #16]
    466c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4670:	ldr	x0, [x19, #24]
    4674:	cbz	x0, 4680 <PyInit__elementtree@@Base+0x35c>
    4678:	str	xzr, [x19, #24]
    467c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4680:	ldr	x0, [x19, #32]
    4684:	cbz	x0, 4690 <PyInit__elementtree@@Base+0x36c>
    4688:	str	xzr, [x19, #32]
    468c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4690:	ldr	x19, [sp, #16]
    4694:	mov	w0, wzr
    4698:	ldp	x29, x30, [sp], #32
    469c:	ret
    46a0:	stp	x29, x30, [sp, #-16]!
    46a4:	mov	x29, sp
    46a8:	bl	462c <PyInit__elementtree@@Base+0x308>
    46ac:	ldp	x29, x30, [sp], #16
    46b0:	ret
    46b4:	sub	sp, sp, #0x30
    46b8:	stp	x29, x30, [sp, #16]
    46bc:	str	x19, [sp, #32]
    46c0:	add	x29, sp, #0x10
    46c4:	str	xzr, [sp]
    46c8:	adrp	x5, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    46cc:	ldr	x5, [x5, #3992]
    46d0:	mov	x19, x2
    46d4:	mov	x0, x1
    46d8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    46dc:	adrp	x2, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    46e0:	add	x1, x1, #0x2ba
    46e4:	add	x2, x2, #0x6c8
    46e8:	add	x3, x29, #0x18
    46ec:	add	x4, sp, #0x8
    46f0:	mov	x6, sp
    46f4:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    46f8:	cbz	w0, 4788 <PyInit__elementtree@@Base+0x464>
    46fc:	ldr	x0, [sp]
    4700:	cbz	x0, 4728 <PyInit__elementtree@@Base+0x404>
    4704:	bl	4150 <PyDict_Copy@plt>
    4708:	str	x0, [sp]
    470c:	cbz	x0, 4788 <PyInit__elementtree@@Base+0x464>
    4710:	cbz	x19, 4754 <PyInit__elementtree@@Base+0x430>
    4714:	mov	x1, x19
    4718:	bl	3f20 <PyDict_Update@plt>
    471c:	tbz	w0, #31, 4754 <PyInit__elementtree@@Base+0x430>
    4720:	ldr	x0, [sp]
    4724:	b	4784 <PyInit__elementtree@@Base+0x460>
    4728:	cbz	x19, 4740 <PyInit__elementtree@@Base+0x41c>
    472c:	mov	x0, x19
    4730:	bl	4820 <PyInit__elementtree@@Base+0x4fc>
    4734:	str	x0, [sp]
    4738:	cbnz	x0, 4754 <PyInit__elementtree@@Base+0x430>
    473c:	b	4788 <PyInit__elementtree@@Base+0x464>
    4740:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4744:	ldr	x19, [x19, #3976]
    4748:	mov	x0, x19
    474c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4750:	str	x19, [sp]
    4754:	ldp	x1, x0, [sp]
    4758:	bl	4918 <PyInit__elementtree@@Base+0x5f4>
    475c:	ldr	x8, [sp]
    4760:	mov	x19, x0
    4764:	mov	x0, x8
    4768:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    476c:	cbz	x19, 478c <PyInit__elementtree@@Base+0x468>
    4770:	ldr	x0, [x29, #24]
    4774:	mov	x1, x19
    4778:	bl	49c4 <PyInit__elementtree@@Base+0x6a0>
    477c:	tbz	w0, #31, 478c <PyInit__elementtree@@Base+0x468>
    4780:	mov	x0, x19
    4784:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4788:	mov	x19, xzr
    478c:	mov	x0, x19
    4790:	ldr	x19, [sp, #32]
    4794:	ldp	x29, x30, [sp, #16]
    4798:	add	sp, sp, #0x30
    479c:	ret
    47a0:	stp	x29, x30, [sp, #-32]!
    47a4:	str	x19, [sp, #16]
    47a8:	mov	x29, sp
    47ac:	cmp	x2, #0x2
    47b0:	mov	x19, x1
    47b4:	b.eq	47d8 <PyInit__elementtree@@Base+0x4b4>  // b.none
    47b8:	mov	x8, x2
    47bc:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    47c0:	add	x0, x0, #0x2ab
    47c4:	mov	w2, #0x2                   	// #2
    47c8:	mov	w3, #0x2                   	// #2
    47cc:	mov	x1, x8
    47d0:	bl	3f60 <_PyArg_CheckPositional@plt>
    47d4:	cbz	w0, 47e4 <PyInit__elementtree@@Base+0x4c0>
    47d8:	ldp	x0, x1, [x19]
    47dc:	bl	4c00 <PyInit__elementtree@@Base+0x8dc>
    47e0:	b	47e8 <PyInit__elementtree@@Base+0x4c4>
    47e4:	mov	x0, xzr
    47e8:	ldr	x19, [sp, #16]
    47ec:	ldp	x29, x30, [sp], #32
    47f0:	ret
    47f4:	stp	x29, x30, [sp, #-16]!
    47f8:	mov	x29, sp
    47fc:	ldr	x8, [x0]
    4800:	subs	x8, x8, #0x1
    4804:	str	x8, [x0]
    4808:	b.eq	4814 <PyInit__elementtree@@Base+0x4f0>  // b.none
    480c:	ldp	x29, x30, [sp], #16
    4810:	ret
    4814:	bl	3d70 <_Py_Dealloc@plt>
    4818:	ldp	x29, x30, [sp], #16
    481c:	ret
    4820:	stp	x29, x30, [sp, #-48]!
    4824:	str	x21, [sp, #16]
    4828:	stp	x20, x19, [sp, #32]
    482c:	mov	x29, sp
    4830:	mov	x19, x0
    4834:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    4838:	add	x0, x0, #0x2cc
    483c:	bl	4100 <PyUnicode_FromString@plt>
    4840:	cbz	x0, 4900 <PyInit__elementtree@@Base+0x5dc>
    4844:	mov	x20, x0
    4848:	mov	x0, x19
    484c:	mov	x1, x20
    4850:	bl	4230 <PyDict_GetItemWithError@plt>
    4854:	cbz	x0, 4894 <PyInit__elementtree@@Base+0x570>
    4858:	ldr	x8, [x0, #8]
    485c:	mov	x21, x0
    4860:	ldrb	w8, [x8, #171]
    4864:	tbnz	w8, #5, 48a4 <PyInit__elementtree@@Base+0x580>
    4868:	mov	x0, x20
    486c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4870:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4874:	ldr	x8, [x21, #8]
    4878:	ldr	x9, [x9, #3944]
    487c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4880:	add	x1, x1, #0x2d3
    4884:	ldr	x2, [x8, #24]
    4888:	ldr	x0, [x9]
    488c:	bl	4180 <PyErr_Format@plt>
    4890:	b	4900 <PyInit__elementtree@@Base+0x5dc>
    4894:	bl	3f80 <PyErr_Occurred@plt>
    4898:	cbz	x0, 48d4 <PyInit__elementtree@@Base+0x5b0>
    489c:	mov	x21, xzr
    48a0:	b	48dc <PyInit__elementtree@@Base+0x5b8>
    48a4:	mov	x0, x21
    48a8:	bl	4150 <PyDict_Copy@plt>
    48ac:	mov	x21, x0
    48b0:	cbz	x0, 48dc <PyInit__elementtree@@Base+0x5b8>
    48b4:	mov	x0, x19
    48b8:	mov	x1, x20
    48bc:	bl	3f70 <PyDict_DelItem@plt>
    48c0:	tbz	w0, #31, 48dc <PyInit__elementtree@@Base+0x5b8>
    48c4:	mov	x0, x21
    48c8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    48cc:	mov	x21, xzr
    48d0:	b	48dc <PyInit__elementtree@@Base+0x5b8>
    48d4:	bl	4080 <PyDict_New@plt>
    48d8:	mov	x21, x0
    48dc:	mov	x0, x20
    48e0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    48e4:	cbz	x21, 4904 <PyInit__elementtree@@Base+0x5e0>
    48e8:	mov	x0, x21
    48ec:	mov	x1, x19
    48f0:	bl	3f20 <PyDict_Update@plt>
    48f4:	tbz	w0, #31, 4904 <PyInit__elementtree@@Base+0x5e0>
    48f8:	mov	x0, x21
    48fc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4900:	mov	x21, xzr
    4904:	mov	x0, x21
    4908:	ldp	x20, x19, [sp, #32]
    490c:	ldr	x21, [sp, #16]
    4910:	ldp	x29, x30, [sp], #48
    4914:	ret
    4918:	stp	x29, x30, [sp, #-48]!
    491c:	str	x21, [sp, #16]
    4920:	stp	x20, x19, [sp, #32]
    4924:	mov	x29, sp
    4928:	mov	x21, x0
    492c:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4930:	add	x0, x0, #0x6c8
    4934:	mov	x20, x1
    4938:	bl	3df0 <_PyObject_GC_New@plt>
    493c:	mov	x19, x0
    4940:	cbz	x0, 49b0 <PyInit__elementtree@@Base+0x68c>
    4944:	mov	x0, x21
    4948:	str	xzr, [x19, #40]
    494c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4950:	str	x21, [x19, #16]
    4954:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4958:	ldr	x21, [x21, #3976]
    495c:	mov	x0, x21
    4960:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4964:	mov	x0, x21
    4968:	str	x21, [x19, #24]
    496c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4970:	mov	x0, x19
    4974:	str	x21, [x19, #32]
    4978:	str	xzr, [x19, #48]
    497c:	bl	3dc0 <PyObject_GC_Track@plt>
    4980:	cmp	x20, x21
    4984:	b.eq	49b0 <PyInit__elementtree@@Base+0x68c>  // b.none
    4988:	mov	x0, x20
    498c:	bl	4a58 <PyInit__elementtree@@Base+0x734>
    4990:	cbnz	w0, 49b0 <PyInit__elementtree@@Base+0x68c>
    4994:	mov	x0, x19
    4998:	mov	x1, x20
    499c:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    49a0:	tbz	w0, #31, 49b0 <PyInit__elementtree@@Base+0x68c>
    49a4:	mov	x0, x19
    49a8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    49ac:	mov	x19, xzr
    49b0:	mov	x0, x19
    49b4:	ldp	x20, x19, [sp, #32]
    49b8:	ldr	x21, [sp, #16]
    49bc:	ldp	x29, x30, [sp], #48
    49c0:	ret
    49c4:	stp	x29, x30, [sp, #-32]!
    49c8:	stp	x20, x19, [sp, #16]
    49cc:	mov	x29, sp
    49d0:	ldr	x8, [x1, #8]
    49d4:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    49d8:	add	x9, x9, #0x6c8
    49dc:	mov	x19, x1
    49e0:	cmp	x8, x9
    49e4:	mov	x20, x0
    49e8:	b.eq	4a00 <PyInit__elementtree@@Base+0x6dc>  // b.none
    49ec:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    49f0:	add	x1, x1, #0x6c8
    49f4:	mov	x0, x8
    49f8:	bl	4160 <PyType_IsSubtype@plt>
    49fc:	cbz	w0, 4a40 <PyInit__elementtree@@Base+0x71c>
    4a00:	mov	w1, #0x1                   	// #1
    4a04:	mov	x0, x20
    4a08:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    4a0c:	tbnz	w0, #31, 4a48 <PyInit__elementtree@@Base+0x724>
    4a10:	mov	x0, x19
    4a14:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4a18:	ldr	x8, [x20, #40]
    4a1c:	mov	w0, wzr
    4a20:	ldr	x9, [x8, #24]
    4a24:	ldr	x8, [x8, #8]
    4a28:	str	x19, [x9, x8, lsl #3]
    4a2c:	ldr	x8, [x20, #40]
    4a30:	ldr	x9, [x8, #8]
    4a34:	add	x9, x9, #0x1
    4a38:	str	x9, [x8, #8]
    4a3c:	b	4a4c <PyInit__elementtree@@Base+0x728>
    4a40:	mov	x0, x19
    4a44:	bl	4af0 <PyInit__elementtree@@Base+0x7cc>
    4a48:	mov	w0, #0xffffffff            	// #-1
    4a4c:	ldp	x20, x19, [sp, #16]
    4a50:	ldp	x29, x30, [sp], #32
    4a54:	ret
    4a58:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4a5c:	ldr	x8, [x0, #8]
    4a60:	ldr	x9, [x9, #3992]
    4a64:	cmp	x8, x9
    4a68:	b.eq	4a74 <PyInit__elementtree@@Base+0x750>  // b.none
    4a6c:	mov	w0, wzr
    4a70:	ret
    4a74:	ldr	x8, [x0, #16]
    4a78:	cmp	x8, #0x0
    4a7c:	cset	w0, eq  // eq = none
    4a80:	ret
    4a84:	stp	x29, x30, [sp, #-32]!
    4a88:	stp	x20, x19, [sp, #16]
    4a8c:	mov	x29, sp
    4a90:	mov	x19, x0
    4a94:	mov	w0, #0x40                  	// #64
    4a98:	mov	x20, x1
    4a9c:	bl	3e00 <PyObject_Malloc@plt>
    4aa0:	str	x0, [x19, #40]
    4aa4:	cbz	x0, 4adc <PyInit__elementtree@@Base+0x7b8>
    4aa8:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4aac:	ldr	x8, [x8, #3976]
    4ab0:	cmp	x20, #0x0
    4ab4:	csel	x20, x8, x20, eq  // eq = none
    4ab8:	mov	x0, x20
    4abc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4ac0:	ldr	x8, [x19, #40]
    4ac4:	mov	w0, wzr
    4ac8:	mov	w9, #0x4                   	// #4
    4acc:	add	x10, x8, #0x20
    4ad0:	stp	x20, xzr, [x8]
    4ad4:	stp	x9, x10, [x8, #16]
    4ad8:	b	4ae4 <PyInit__elementtree@@Base+0x7c0>
    4adc:	bl	3d80 <PyErr_NoMemory@plt>
    4ae0:	mov	w0, #0xffffffff            	// #-1
    4ae4:	ldp	x20, x19, [sp, #16]
    4ae8:	ldp	x29, x30, [sp], #32
    4aec:	ret
    4af0:	stp	x29, x30, [sp, #-16]!
    4af4:	mov	x29, sp
    4af8:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4afc:	ldr	x8, [x0, #8]
    4b00:	ldr	x9, [x9, #3944]
    4b04:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4b08:	add	x1, x1, #0x2f3
    4b0c:	ldr	x2, [x8, #24]
    4b10:	ldr	x0, [x9]
    4b14:	bl	4180 <PyErr_Format@plt>
    4b18:	ldp	x29, x30, [sp], #16
    4b1c:	ret
    4b20:	stp	x29, x30, [sp, #-48]!
    4b24:	str	x21, [sp, #16]
    4b28:	stp	x20, x19, [sp, #32]
    4b2c:	mov	x29, sp
    4b30:	ldr	x8, [x0, #40]
    4b34:	mov	x19, x0
    4b38:	mov	x20, x1
    4b3c:	cbnz	x8, 4b50 <PyInit__elementtree@@Base+0x82c>
    4b40:	mov	x0, x19
    4b44:	mov	x1, xzr
    4b48:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    4b4c:	tbnz	w0, #31, 4b8c <PyInit__elementtree@@Base+0x868>
    4b50:	ldr	x8, [x19, #40]
    4b54:	ldp	x9, x10, [x8, #8]
    4b58:	add	x9, x9, x20
    4b5c:	cmp	x9, x10
    4b60:	b.le	4b94 <PyInit__elementtree@@Base+0x870>
    4b64:	cmp	x9, #0x9
    4b68:	mov	w10, #0x6                   	// #6
    4b6c:	mov	w11, #0x3                   	// #3
    4b70:	csel	x10, x11, x10, lt  // lt = tstop
    4b74:	add	x9, x9, x9, asr #3
    4b78:	adds	x9, x9, x10
    4b7c:	csinc	x21, x9, xzr, ne  // ne = any
    4b80:	lsr	x9, x21, #60
    4b84:	cbz	x9, 4b9c <PyInit__elementtree@@Base+0x878>
    4b88:	bl	3d80 <PyErr_NoMemory@plt>
    4b8c:	mov	w0, #0xffffffff            	// #-1
    4b90:	b	4bf0 <PyInit__elementtree@@Base+0x8cc>
    4b94:	mov	w0, wzr
    4b98:	b	4bf0 <PyInit__elementtree@@Base+0x8cc>
    4b9c:	ldr	x0, [x8, #24]
    4ba0:	add	x8, x8, #0x20
    4ba4:	cmp	x0, x8
    4ba8:	b.eq	4bc0 <PyInit__elementtree@@Base+0x89c>  // b.none
    4bac:	lsl	x1, x21, #3
    4bb0:	bl	4060 <PyObject_Realloc@plt>
    4bb4:	mov	x20, x0
    4bb8:	cbnz	x0, 4be4 <PyInit__elementtree@@Base+0x8c0>
    4bbc:	b	4b88 <PyInit__elementtree@@Base+0x864>
    4bc0:	lsl	x0, x21, #3
    4bc4:	bl	3e00 <PyObject_Malloc@plt>
    4bc8:	cbz	x0, 4b88 <PyInit__elementtree@@Base+0x864>
    4bcc:	ldr	x8, [x19, #40]
    4bd0:	mov	x20, x0
    4bd4:	ldr	x9, [x8, #8]
    4bd8:	ldr	x1, [x8, #24]
    4bdc:	lsl	x2, x9, #3
    4be0:	bl	3c20 <memcpy@plt>
    4be4:	ldr	x8, [x19, #40]
    4be8:	mov	w0, wzr
    4bec:	stp	x21, x20, [x8, #16]
    4bf0:	ldp	x20, x19, [sp, #32]
    4bf4:	ldr	x21, [sp, #16]
    4bf8:	ldp	x29, x30, [sp], #48
    4bfc:	ret
    4c00:	stp	x29, x30, [sp, #-64]!
    4c04:	str	x23, [sp, #16]
    4c08:	stp	x22, x21, [sp, #32]
    4c0c:	stp	x20, x19, [sp, #48]
    4c10:	mov	x29, sp
    4c14:	mov	x21, x0
    4c18:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    4c1c:	add	x0, x0, #0x320
    4c20:	mov	x19, x1
    4c24:	bl	3fc0 <PyState_FindModule@plt>
    4c28:	bl	3e10 <PyModule_GetState@plt>
    4c2c:	mov	x20, x0
    4c30:	mov	x0, x21
    4c34:	bl	4090 <PyCallable_Check@plt>
    4c38:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4c3c:	ldr	x23, [x23, #3976]
    4c40:	cmp	x21, x23
    4c44:	b.eq	4c64 <PyInit__elementtree@@Base+0x940>  // b.none
    4c48:	cbnz	w0, 4c64 <PyInit__elementtree@@Base+0x940>
    4c4c:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4c50:	ldr	x8, [x21, #8]
    4c54:	ldr	x9, [x9, #3944]
    4c58:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4c5c:	add	x1, x1, #0x315
    4c60:	b	4c8c <PyInit__elementtree@@Base+0x968>
    4c64:	mov	x0, x19
    4c68:	bl	4090 <PyCallable_Check@plt>
    4c6c:	cmp	x19, x23
    4c70:	b.eq	4cb4 <PyInit__elementtree@@Base+0x990>  // b.none
    4c74:	cbnz	w0, 4cb4 <PyInit__elementtree@@Base+0x990>
    4c78:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4c7c:	ldr	x8, [x19, #8]
    4c80:	ldr	x9, [x9, #3944]
    4c84:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    4c88:	add	x1, x1, #0x342
    4c8c:	ldr	x2, [x8, #24]
    4c90:	ldr	x0, [x9]
    4c94:	bl	4180 <PyErr_Format@plt>
    4c98:	mov	x22, xzr
    4c9c:	mov	x0, x22
    4ca0:	ldp	x20, x19, [sp, #48]
    4ca4:	ldp	x22, x21, [sp, #32]
    4ca8:	ldr	x23, [sp, #16]
    4cac:	ldp	x29, x30, [sp], #64
    4cb0:	ret
    4cb4:	ldp	x8, x9, [x20, #24]
    4cb8:	mov	w0, #0x2                   	// #2
    4cbc:	cmp	x8, #0x0
    4cc0:	csel	x1, x23, x8, eq  // eq = none
    4cc4:	cmp	x9, #0x0
    4cc8:	csel	x2, x23, x9, eq  // eq = none
    4ccc:	bl	4210 <PyTuple_Pack@plt>
    4cd0:	cmp	x21, x23
    4cd4:	mov	x22, x0
    4cd8:	b.eq	4cf4 <PyInit__elementtree@@Base+0x9d0>  // b.none
    4cdc:	mov	x0, x21
    4ce0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4ce4:	ldr	x0, [x20, #24]
    4ce8:	str	x21, [x20, #24]
    4cec:	bl	4548 <PyInit__elementtree@@Base+0x224>
    4cf0:	b	4d04 <PyInit__elementtree@@Base+0x9e0>
    4cf4:	ldr	x0, [x20, #24]
    4cf8:	cbz	x0, 4d04 <PyInit__elementtree@@Base+0x9e0>
    4cfc:	str	xzr, [x20, #24]
    4d00:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4d04:	cmp	x19, x23
    4d08:	b.eq	4d24 <PyInit__elementtree@@Base+0xa00>  // b.none
    4d0c:	mov	x0, x19
    4d10:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4d14:	ldr	x0, [x20, #32]
    4d18:	str	x19, [x20, #32]
    4d1c:	bl	4548 <PyInit__elementtree@@Base+0x224>
    4d20:	b	4c9c <PyInit__elementtree@@Base+0x978>
    4d24:	ldr	x0, [x20, #32]
    4d28:	cbz	x0, 4c9c <PyInit__elementtree@@Base+0x978>
    4d2c:	str	xzr, [x20, #32]
    4d30:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4d34:	b	4c9c <PyInit__elementtree@@Base+0x978>
    4d38:	stp	x29, x30, [sp, #-48]!
    4d3c:	str	x21, [sp, #16]
    4d40:	stp	x20, x19, [sp, #32]
    4d44:	mov	x29, sp
    4d48:	ldr	x20, [x0, #24]
    4d4c:	mov	x19, x0
    4d50:	str	xzr, [x0, #24]
    4d54:	bl	4220 <PyObject_GC_UnTrack@plt>
    4d58:	ldr	x0, [x19, #16]
    4d5c:	cbz	x20, 4d80 <PyInit__elementtree@@Base+0xa5c>
    4d60:	lsl	x8, x20, #4
    4d64:	sub	x21, x8, #0x10
    4d68:	ldr	x0, [x0, x21]
    4d6c:	sub	x20, x20, #0x1
    4d70:	bl	4548 <PyInit__elementtree@@Base+0x224>
    4d74:	ldr	x0, [x19, #16]
    4d78:	sub	x21, x21, #0x10
    4d7c:	cbnz	x20, 4d68 <PyInit__elementtree@@Base+0xa44>
    4d80:	bl	3cd0 <PyMem_Free@plt>
    4d84:	ldr	x0, [x19, #48]
    4d88:	bl	4548 <PyInit__elementtree@@Base+0x224>
    4d8c:	ldr	x0, [x19, #40]
    4d90:	bl	4548 <PyInit__elementtree@@Base+0x224>
    4d94:	mov	x0, x19
    4d98:	bl	3da0 <PyObject_GC_Del@plt>
    4d9c:	ldp	x20, x19, [sp, #32]
    4da0:	ldr	x21, [sp, #16]
    4da4:	ldp	x29, x30, [sp], #48
    4da8:	ret
    4dac:	stp	x29, x30, [sp, #-64]!
    4db0:	stp	x24, x23, [sp, #16]
    4db4:	stp	x22, x21, [sp, #32]
    4db8:	stp	x20, x19, [sp, #48]
    4dbc:	mov	x29, sp
    4dc0:	ldr	x23, [x0, #24]
    4dc4:	mov	x20, x2
    4dc8:	mov	x22, x0
    4dcc:	mov	x21, x1
    4dd0:	cbz	x23, 4e10 <PyInit__elementtree@@Base+0xaec>
    4dd4:	lsl	x8, x23, #4
    4dd8:	sub	x24, x8, #0x10
    4ddc:	b	4dec <PyInit__elementtree@@Base+0xac8>
    4de0:	sub	x23, x23, #0x1
    4de4:	sub	x24, x24, #0x10
    4de8:	cbz	x23, 4e10 <PyInit__elementtree@@Base+0xaec>
    4dec:	ldr	x8, [x22, #16]
    4df0:	ldr	x0, [x8, x24]
    4df4:	cbz	x0, 4de0 <PyInit__elementtree@@Base+0xabc>
    4df8:	mov	x1, x20
    4dfc:	blr	x21
    4e00:	cmp	w0, #0x0
    4e04:	csel	w19, w19, w0, eq  // eq = none
    4e08:	cbz	w0, 4de0 <PyInit__elementtree@@Base+0xabc>
    4e0c:	b	4e4c <PyInit__elementtree@@Base+0xb28>
    4e10:	ldr	x0, [x22, #40]
    4e14:	cbz	x0, 4e2c <PyInit__elementtree@@Base+0xb08>
    4e18:	mov	x1, x20
    4e1c:	blr	x21
    4e20:	cmp	w0, #0x0
    4e24:	csel	w19, w19, w0, eq  // eq = none
    4e28:	cbnz	w0, 4e4c <PyInit__elementtree@@Base+0xb28>
    4e2c:	ldr	x0, [x22, #48]
    4e30:	cbz	x0, 4e48 <PyInit__elementtree@@Base+0xb24>
    4e34:	mov	x1, x20
    4e38:	blr	x21
    4e3c:	cmp	w0, #0x0
    4e40:	csel	w19, w19, w0, eq  // eq = none
    4e44:	cbnz	w0, 4e4c <PyInit__elementtree@@Base+0xb28>
    4e48:	mov	w19, wzr
    4e4c:	mov	w0, w19
    4e50:	ldp	x20, x19, [sp, #48]
    4e54:	ldp	x22, x21, [sp, #32]
    4e58:	ldp	x24, x23, [sp, #16]
    4e5c:	ldp	x29, x30, [sp], #64
    4e60:	ret
    4e64:	stp	x29, x30, [sp, #-64]!
    4e68:	str	x23, [sp, #16]
    4e6c:	stp	x22, x21, [sp, #32]
    4e70:	stp	x20, x19, [sp, #48]
    4e74:	mov	x29, sp
    4e78:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    4e7c:	ldr	x23, [x23, #3976]
    4e80:	mov	x20, x0
    4e84:	b	4e90 <PyInit__elementtree@@Base+0xb6c>
    4e88:	mov	x0, x21
    4e8c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4e90:	ldr	x8, [x20, #24]
    4e94:	cbz	x8, 4f18 <PyInit__elementtree@@Base+0xbf4>
    4e98:	ldr	x11, [x20, #16]
    4e9c:	sub	x8, x8, #0x1
    4ea0:	lsl	x12, x8, #4
    4ea4:	add	x9, x11, x12
    4ea8:	ldr	x10, [x9, #8]!
    4eac:	ldr	x21, [x11, x12]
    4eb0:	ldr	x11, [x21, #40]
    4eb4:	cbz	x11, 4eec <PyInit__elementtree@@Base+0xbc8>
    4eb8:	ldr	x12, [x11, #8]
    4ebc:	cmp	x10, x12
    4ec0:	b.ge	4eec <PyInit__elementtree@@Base+0xbc8>  // b.tcont
    4ec4:	ldr	x8, [x11, #24]
    4ec8:	ldr	x21, [x8, x10, lsl #3]
    4ecc:	add	x8, x10, #0x1
    4ed0:	str	x8, [x9]
    4ed4:	mov	x0, x21
    4ed8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4edc:	mov	w8, wzr
    4ee0:	cmp	w8, #0x2
    4ee4:	b.ne	4f3c <PyInit__elementtree@@Base+0xc18>  // b.any
    4ee8:	b	4e90 <PyInit__elementtree@@Base+0xb6c>
    4eec:	str	x8, [x20, #24]
    4ef0:	cbz	x8, 4f28 <PyInit__elementtree@@Base+0xc04>
    4ef4:	ldr	w8, [x20, #56]
    4ef8:	cbz	w8, 4f28 <PyInit__elementtree@@Base+0xc04>
    4efc:	mov	x0, x21
    4f00:	bl	5030 <PyInit__elementtree@@Base+0xd0c>
    4f04:	mov	x19, x0
    4f08:	mov	w8, #0x4                   	// #4
    4f0c:	cmp	w8, #0x2
    4f10:	b.ne	4f3c <PyInit__elementtree@@Base+0xc18>  // b.any
    4f14:	b	4e90 <PyInit__elementtree@@Base+0xb6c>
    4f18:	ldr	x21, [x20, #40]
    4f1c:	cbz	x21, 4ffc <PyInit__elementtree@@Base+0xcd8>
    4f20:	str	xzr, [x20, #40]
    4f24:	b	4f48 <PyInit__elementtree@@Base+0xc24>
    4f28:	mov	x0, x21
    4f2c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4f30:	mov	w8, #0x2                   	// #2
    4f34:	cmp	w8, #0x2
    4f38:	b.eq	4e90 <PyInit__elementtree@@Base+0xb6c>  // b.none
    4f3c:	cmp	w8, #0x4
    4f40:	b.eq	4f6c <PyInit__elementtree@@Base+0xc48>  // b.none
    4f44:	cbnz	w8, 5018 <PyInit__elementtree@@Base+0xcf4>
    4f48:	mov	x0, x20
    4f4c:	mov	x1, x21
    4f50:	bl	50b0 <PyInit__elementtree@@Base+0xd8c>
    4f54:	tbnz	w0, #31, 4fe0 <PyInit__elementtree@@Base+0xcbc>
    4f58:	ldr	w8, [x20, #56]
    4f5c:	cbz	w8, 4fac <PyInit__elementtree@@Base+0xc88>
    4f60:	mov	x0, x21
    4f64:	bl	5138 <PyInit__elementtree@@Base+0xe14>
    4f68:	mov	x19, x0
    4f6c:	cbz	x19, 4ff0 <PyInit__elementtree@@Base+0xccc>
    4f70:	cmp	x19, x23
    4f74:	b.eq	4e88 <PyInit__elementtree@@Base+0xb64>  // b.none
    4f78:	mov	x0, x19
    4f7c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    4f80:	mov	x0, x21
    4f84:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4f88:	mov	x0, x19
    4f8c:	bl	4050 <PyObject_IsTrue@plt>
    4f90:	cmp	w0, #0x0
    4f94:	b.gt	5018 <PyInit__elementtree@@Base+0xcf4>
    4f98:	mov	w21, w0
    4f9c:	mov	x0, x19
    4fa0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4fa4:	tbz	w21, #31, 4e90 <PyInit__elementtree@@Base+0xb6c>
    4fa8:	b	500c <PyInit__elementtree@@Base+0xce8>
    4fac:	ldr	x1, [x20, #48]
    4fb0:	cmp	x1, x23
    4fb4:	b.eq	5014 <PyInit__elementtree@@Base+0xcf0>  // b.none
    4fb8:	ldr	x0, [x21, #16]
    4fbc:	mov	w2, #0x2                   	// #2
    4fc0:	bl	3ec0 <PyObject_RichCompareBool@plt>
    4fc4:	cmp	w0, #0x0
    4fc8:	b.gt	5014 <PyInit__elementtree@@Base+0xcf0>
    4fcc:	mov	w22, w0
    4fd0:	mov	x0, x21
    4fd4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4fd8:	tbz	w22, #31, 4e90 <PyInit__elementtree@@Base+0xb6c>
    4fdc:	b	500c <PyInit__elementtree@@Base+0xce8>
    4fe0:	mov	x0, x21
    4fe4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4fe8:	bl	3d80 <PyErr_NoMemory@plt>
    4fec:	b	500c <PyInit__elementtree@@Base+0xce8>
    4ff0:	mov	x0, x21
    4ff4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    4ff8:	b	5018 <PyInit__elementtree@@Base+0xcf4>
    4ffc:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5000:	ldr	x8, [x8, #4016]
    5004:	ldr	x0, [x8]
    5008:	bl	3e40 <PyErr_SetNone@plt>
    500c:	mov	x19, xzr
    5010:	b	5018 <PyInit__elementtree@@Base+0xcf4>
    5014:	mov	x19, x21
    5018:	mov	x0, x19
    501c:	ldp	x20, x19, [sp, #48]
    5020:	ldp	x22, x21, [sp, #32]
    5024:	ldr	x23, [sp, #16]
    5028:	ldp	x29, x30, [sp], #64
    502c:	ret
    5030:	stp	x29, x30, [sp, #-48]!
    5034:	str	x21, [sp, #16]
    5038:	stp	x20, x19, [sp, #32]
    503c:	mov	x29, sp
    5040:	ldr	x19, [x0, #32]
    5044:	tbz	w19, #0, 5090 <PyInit__elementtree@@Base+0xd6c>
    5048:	and	x19, x19, #0xfffffffffffffffe
    504c:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5050:	ldr	x8, [x19, #8]
    5054:	ldr	x9, [x9, #4064]
    5058:	cmp	x8, x9
    505c:	b.ne	5090 <PyInit__elementtree@@Base+0xd6c>  // b.any
    5060:	mov	x20, x0
    5064:	mov	x0, x19
    5068:	bl	51b8 <PyInit__elementtree@@Base+0xe94>
    506c:	cbz	x0, 50a4 <PyInit__elementtree@@Base+0xd80>
    5070:	mov	x21, x0
    5074:	str	x0, [x20, #32]
    5078:	mov	x0, x19
    507c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5080:	mov	w8, #0x1                   	// #1
    5084:	mov	x19, x21
    5088:	cbnz	w8, 5090 <PyInit__elementtree@@Base+0xd6c>
    508c:	mov	x19, xzr
    5090:	mov	x0, x19
    5094:	ldp	x20, x19, [sp, #32]
    5098:	ldr	x21, [sp, #16]
    509c:	ldp	x29, x30, [sp], #48
    50a0:	ret
    50a4:	mov	w8, wzr
    50a8:	cbz	w8, 508c <PyInit__elementtree@@Base+0xd68>
    50ac:	b	5090 <PyInit__elementtree@@Base+0xd6c>
    50b0:	stp	x29, x30, [sp, #-48]!
    50b4:	stp	x22, x21, [sp, #16]
    50b8:	stp	x20, x19, [sp, #32]
    50bc:	mov	x29, sp
    50c0:	ldp	x8, x21, [x0, #24]
    50c4:	mov	x20, x0
    50c8:	mov	x19, x1
    50cc:	cmp	x8, x21
    50d0:	b.lt	50f0 <PyInit__elementtree@@Base+0xdcc>  // b.tstop
    50d4:	ubfx	x8, x21, #58, #5
    50d8:	cbz	x8, 5114 <PyInit__elementtree@@Base+0xdf0>
    50dc:	mov	x0, xzr
    50e0:	cbz	x0, 5124 <PyInit__elementtree@@Base+0xe00>
    50e4:	lsl	x8, x21, #1
    50e8:	str	x0, [x20, #16]
    50ec:	str	x8, [x20, #32]
    50f0:	ldp	x22, x21, [x20, #16]
    50f4:	mov	x0, x19
    50f8:	add	x8, x21, #0x1
    50fc:	str	x8, [x20, #24]
    5100:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5104:	mov	w0, wzr
    5108:	add	x8, x22, x21, lsl #4
    510c:	stp	x19, xzr, [x8]
    5110:	b	5128 <PyInit__elementtree@@Base+0xe04>
    5114:	ldr	x0, [x20, #16]
    5118:	lsl	x1, x21, #5
    511c:	bl	3e30 <PyMem_Realloc@plt>
    5120:	cbnz	x0, 50e4 <PyInit__elementtree@@Base+0xdc0>
    5124:	mov	w0, #0xffffffff            	// #-1
    5128:	ldp	x20, x19, [sp, #32]
    512c:	ldp	x22, x21, [sp, #16]
    5130:	ldp	x29, x30, [sp], #48
    5134:	ret
    5138:	stp	x29, x30, [sp, #-48]!
    513c:	str	x21, [sp, #16]
    5140:	stp	x20, x19, [sp, #32]
    5144:	mov	x29, sp
    5148:	ldr	x19, [x0, #24]
    514c:	tbz	w19, #0, 5198 <PyInit__elementtree@@Base+0xe74>
    5150:	and	x19, x19, #0xfffffffffffffffe
    5154:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5158:	ldr	x8, [x19, #8]
    515c:	ldr	x9, [x9, #4064]
    5160:	cmp	x8, x9
    5164:	b.ne	5198 <PyInit__elementtree@@Base+0xe74>  // b.any
    5168:	mov	x20, x0
    516c:	mov	x0, x19
    5170:	bl	51b8 <PyInit__elementtree@@Base+0xe94>
    5174:	cbz	x0, 51ac <PyInit__elementtree@@Base+0xe88>
    5178:	mov	x21, x0
    517c:	str	x0, [x20, #24]
    5180:	mov	x0, x19
    5184:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5188:	mov	w8, #0x1                   	// #1
    518c:	mov	x19, x21
    5190:	cbnz	w8, 5198 <PyInit__elementtree@@Base+0xe74>
    5194:	mov	x19, xzr
    5198:	mov	x0, x19
    519c:	ldp	x20, x19, [sp, #32]
    51a0:	ldr	x21, [sp, #16]
    51a4:	ldp	x29, x30, [sp], #48
    51a8:	ret
    51ac:	mov	w8, wzr
    51b0:	cbz	w8, 5194 <PyInit__elementtree@@Base+0xe70>
    51b4:	b	5198 <PyInit__elementtree@@Base+0xe74>
    51b8:	stp	x29, x30, [sp, #-32]!
    51bc:	stp	x20, x19, [sp, #16]
    51c0:	mov	x29, sp
    51c4:	mov	x19, x0
    51c8:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    51cc:	add	x0, x0, #0x52d
    51d0:	mov	x1, xzr
    51d4:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    51d8:	cbz	x0, 51f8 <PyInit__elementtree@@Base+0xed4>
    51dc:	mov	x1, x19
    51e0:	mov	x20, x0
    51e4:	bl	3d20 <PyUnicode_Join@plt>
    51e8:	mov	x19, x0
    51ec:	mov	x0, x20
    51f0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    51f4:	b	51fc <PyInit__elementtree@@Base+0xed8>
    51f8:	mov	x19, xzr
    51fc:	mov	x0, x19
    5200:	ldp	x20, x19, [sp, #16]
    5204:	ldp	x29, x30, [sp], #32
    5208:	ret
    520c:	stp	x29, x30, [sp, #-32]!
    5210:	str	x19, [sp, #16]
    5214:	mov	x29, sp
    5218:	mov	x19, x0
    521c:	bl	4220 <PyObject_GC_UnTrack@plt>
    5220:	mov	x0, x19
    5224:	bl	5440 <PyInit__elementtree@@Base+0x111c>
    5228:	ldr	x8, [x19, #8]
    522c:	mov	x0, x19
    5230:	ldr	x8, [x8, #320]
    5234:	blr	x8
    5238:	ldr	x19, [sp, #16]
    523c:	ldp	x29, x30, [sp], #32
    5240:	ret
    5244:	stp	x29, x30, [sp, #-48]!
    5248:	stp	x22, x21, [sp, #16]
    524c:	stp	x20, x19, [sp, #32]
    5250:	mov	x29, sp
    5254:	mov	x22, x0
    5258:	ldr	x0, [x0, #144]
    525c:	mov	x20, x2
    5260:	mov	x21, x1
    5264:	cbz	x0, 5284 <PyInit__elementtree@@Base+0xf60>
    5268:	mov	x1, x20
    526c:	blr	x21
    5270:	mov	w19, w0
    5274:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5278:	ldr	x0, [x22, #136]
    527c:	cbnz	x0, 528c <PyInit__elementtree@@Base+0xf68>
    5280:	b	52a0 <PyInit__elementtree@@Base+0xf7c>
    5284:	ldr	x0, [x22, #136]
    5288:	cbz	x0, 52a0 <PyInit__elementtree@@Base+0xf7c>
    528c:	mov	x1, x20
    5290:	blr	x21
    5294:	cmp	w0, #0x0
    5298:	csel	w19, w19, w0, eq  // eq = none
    529c:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    52a0:	ldr	x0, [x22, #128]
    52a4:	cbz	x0, 52bc <PyInit__elementtree@@Base+0xf98>
    52a8:	mov	x1, x20
    52ac:	blr	x21
    52b0:	cmp	w0, #0x0
    52b4:	csel	w19, w19, w0, eq  // eq = none
    52b8:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    52bc:	ldr	x0, [x22, #120]
    52c0:	cbz	x0, 52d8 <PyInit__elementtree@@Base+0xfb4>
    52c4:	mov	x1, x20
    52c8:	blr	x21
    52cc:	cmp	w0, #0x0
    52d0:	csel	w19, w19, w0, eq  // eq = none
    52d4:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    52d8:	ldr	x0, [x22, #112]
    52dc:	cbz	x0, 52f4 <PyInit__elementtree@@Base+0xfd0>
    52e0:	mov	x1, x20
    52e4:	blr	x21
    52e8:	cmp	w0, #0x0
    52ec:	csel	w19, w19, w0, eq  // eq = none
    52f0:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    52f4:	ldr	x0, [x22, #104]
    52f8:	cbz	x0, 5310 <PyInit__elementtree@@Base+0xfec>
    52fc:	mov	x1, x20
    5300:	blr	x21
    5304:	cmp	w0, #0x0
    5308:	csel	w19, w19, w0, eq  // eq = none
    530c:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5310:	ldr	x0, [x22, #96]
    5314:	cbz	x0, 532c <PyInit__elementtree@@Base+0x1008>
    5318:	mov	x1, x20
    531c:	blr	x21
    5320:	cmp	w0, #0x0
    5324:	csel	w19, w19, w0, eq  // eq = none
    5328:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    532c:	ldr	x0, [x22, #16]
    5330:	cbz	x0, 5348 <PyInit__elementtree@@Base+0x1024>
    5334:	mov	x1, x20
    5338:	blr	x21
    533c:	cmp	w0, #0x0
    5340:	csel	w19, w19, w0, eq  // eq = none
    5344:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5348:	ldr	x0, [x22, #24]
    534c:	cbz	x0, 5364 <PyInit__elementtree@@Base+0x1040>
    5350:	mov	x1, x20
    5354:	blr	x21
    5358:	cmp	w0, #0x0
    535c:	csel	w19, w19, w0, eq  // eq = none
    5360:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5364:	ldr	x0, [x22, #32]
    5368:	cbz	x0, 5380 <PyInit__elementtree@@Base+0x105c>
    536c:	mov	x1, x20
    5370:	blr	x21
    5374:	cmp	w0, #0x0
    5378:	csel	w19, w19, w0, eq  // eq = none
    537c:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5380:	ldr	x0, [x22, #40]
    5384:	cbz	x0, 539c <PyInit__elementtree@@Base+0x1078>
    5388:	mov	x1, x20
    538c:	blr	x21
    5390:	cmp	w0, #0x0
    5394:	csel	w19, w19, w0, eq  // eq = none
    5398:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    539c:	ldr	x0, [x22, #48]
    53a0:	cbz	x0, 53b8 <PyInit__elementtree@@Base+0x1094>
    53a4:	mov	x1, x20
    53a8:	blr	x21
    53ac:	cmp	w0, #0x0
    53b0:	csel	w19, w19, w0, eq  // eq = none
    53b4:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    53b8:	ldr	x0, [x22, #56]
    53bc:	cbz	x0, 53d4 <PyInit__elementtree@@Base+0x10b0>
    53c0:	mov	x1, x20
    53c4:	blr	x21
    53c8:	cmp	w0, #0x0
    53cc:	csel	w19, w19, w0, eq  // eq = none
    53d0:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    53d4:	ldr	x0, [x22, #88]
    53d8:	cbz	x0, 53f0 <PyInit__elementtree@@Base+0x10cc>
    53dc:	mov	x1, x20
    53e0:	blr	x21
    53e4:	cmp	w0, #0x0
    53e8:	csel	w19, w19, w0, eq  // eq = none
    53ec:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    53f0:	ldr	x0, [x22, #80]
    53f4:	cbz	x0, 540c <PyInit__elementtree@@Base+0x10e8>
    53f8:	mov	x1, x20
    53fc:	blr	x21
    5400:	cmp	w0, #0x0
    5404:	csel	w19, w19, w0, eq  // eq = none
    5408:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    540c:	ldr	x0, [x22, #72]
    5410:	cbz	x0, 5428 <PyInit__elementtree@@Base+0x1104>
    5414:	mov	x1, x20
    5418:	blr	x21
    541c:	cmp	w0, #0x0
    5420:	csel	w19, w19, w0, eq  // eq = none
    5424:	cbnz	w0, 542c <PyInit__elementtree@@Base+0x1108>
    5428:	mov	w19, wzr
    542c:	mov	w0, w19
    5430:	ldp	x20, x19, [sp, #32]
    5434:	ldp	x22, x21, [sp, #16]
    5438:	ldp	x29, x30, [sp], #48
    543c:	ret
    5440:	stp	x29, x30, [sp, #-32]!
    5444:	str	x19, [sp, #16]
    5448:	mov	x29, sp
    544c:	mov	x19, x0
    5450:	ldr	x0, [x0, #144]
    5454:	cbz	x0, 5460 <PyInit__elementtree@@Base+0x113c>
    5458:	str	xzr, [x19, #144]
    545c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5460:	ldr	x0, [x19, #136]
    5464:	cbz	x0, 5470 <PyInit__elementtree@@Base+0x114c>
    5468:	str	xzr, [x19, #136]
    546c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5470:	ldr	x0, [x19, #128]
    5474:	cbz	x0, 5480 <PyInit__elementtree@@Base+0x115c>
    5478:	str	xzr, [x19, #128]
    547c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5480:	ldr	x0, [x19, #120]
    5484:	cbz	x0, 5490 <PyInit__elementtree@@Base+0x116c>
    5488:	str	xzr, [x19, #120]
    548c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5490:	ldr	x0, [x19, #112]
    5494:	cbz	x0, 54a0 <PyInit__elementtree@@Base+0x117c>
    5498:	str	xzr, [x19, #112]
    549c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54a0:	ldr	x0, [x19, #104]
    54a4:	cbz	x0, 54b0 <PyInit__elementtree@@Base+0x118c>
    54a8:	str	xzr, [x19, #104]
    54ac:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54b0:	ldr	x0, [x19, #96]
    54b4:	cbz	x0, 54c0 <PyInit__elementtree@@Base+0x119c>
    54b8:	str	xzr, [x19, #96]
    54bc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54c0:	ldr	x0, [x19, #56]
    54c4:	cbz	x0, 54d0 <PyInit__elementtree@@Base+0x11ac>
    54c8:	str	xzr, [x19, #56]
    54cc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54d0:	ldr	x0, [x19, #48]
    54d4:	cbz	x0, 54e0 <PyInit__elementtree@@Base+0x11bc>
    54d8:	str	xzr, [x19, #48]
    54dc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54e0:	ldr	x0, [x19, #32]
    54e4:	cbz	x0, 54f0 <PyInit__elementtree@@Base+0x11cc>
    54e8:	str	xzr, [x19, #32]
    54ec:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    54f0:	ldr	x0, [x19, #40]
    54f4:	cbz	x0, 5500 <PyInit__elementtree@@Base+0x11dc>
    54f8:	str	xzr, [x19, #40]
    54fc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5500:	ldr	x0, [x19, #24]
    5504:	cbz	x0, 5510 <PyInit__elementtree@@Base+0x11ec>
    5508:	str	xzr, [x19, #24]
    550c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5510:	ldr	x0, [x19, #88]
    5514:	cbz	x0, 5520 <PyInit__elementtree@@Base+0x11fc>
    5518:	str	xzr, [x19, #88]
    551c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5520:	ldr	x0, [x19, #80]
    5524:	cbz	x0, 5530 <PyInit__elementtree@@Base+0x120c>
    5528:	str	xzr, [x19, #80]
    552c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5530:	ldr	x0, [x19, #72]
    5534:	cbz	x0, 5540 <PyInit__elementtree@@Base+0x121c>
    5538:	str	xzr, [x19, #72]
    553c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5540:	ldr	x0, [x19, #16]
    5544:	cbz	x0, 5550 <PyInit__elementtree@@Base+0x122c>
    5548:	str	xzr, [x19, #16]
    554c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5550:	ldr	x19, [sp, #16]
    5554:	mov	w0, wzr
    5558:	ldp	x29, x30, [sp], #32
    555c:	ret
    5560:	sub	sp, sp, #0x80
    5564:	stp	x29, x30, [sp, #48]
    5568:	str	x25, [sp, #64]
    556c:	stp	x24, x23, [sp, #80]
    5570:	stp	x22, x21, [sp, #96]
    5574:	stp	x20, x19, [sp, #112]
    5578:	add	x29, sp, #0x30
    557c:	ldr	x20, [x1, #16]
    5580:	mov	x19, x0
    5584:	cbz	x2, 5598 <PyInit__elementtree@@Base+0x1274>
    5588:	ldr	x22, [x2, #16]
    558c:	add	x21, x1, #0x18
    5590:	cbz	x2, 55a4 <PyInit__elementtree@@Base+0x1280>
    5594:	b	55b4 <PyInit__elementtree@@Base+0x1290>
    5598:	mov	x22, xzr
    559c:	add	x21, x1, #0x18
    55a0:	cbnz	x2, 55b4 <PyInit__elementtree@@Base+0x1290>
    55a4:	cmp	x20, #0x2
    55a8:	b.cs	55b4 <PyInit__elementtree@@Base+0x1290>  // b.hs, b.nlast
    55ac:	cbnz	x21, 55e8 <PyInit__elementtree@@Base+0x12c4>
    55b0:	b	56dc <PyInit__elementtree@@Base+0x13b8>
    55b4:	adrp	x4, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    55b8:	add	x8, sp, #0x8
    55bc:	add	x4, x4, #0xb90
    55c0:	mov	w6, #0x1                   	// #1
    55c4:	mov	x0, x21
    55c8:	mov	x1, x20
    55cc:	mov	x3, xzr
    55d0:	mov	w5, wzr
    55d4:	mov	w7, wzr
    55d8:	str	x8, [sp]
    55dc:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    55e0:	mov	x21, x0
    55e4:	cbz	x21, 56dc <PyInit__elementtree@@Base+0x13b8>
    55e8:	add	x8, x22, x20
    55ec:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    55f0:	ldr	x20, [x20, #3976]
    55f4:	cbz	x8, 5638 <PyInit__elementtree@@Base+0x1314>
    55f8:	ldr	x9, [x21]
    55fc:	cmp	x9, #0x0
    5600:	cset	w10, ne  // ne = any
    5604:	csel	x20, x20, x9, eq  // eq = none
    5608:	sub	x25, x8, x10
    560c:	cbz	x25, 5640 <PyInit__elementtree@@Base+0x131c>
    5610:	ldr	x22, [x21, #8]
    5614:	cbz	x22, 5658 <PyInit__elementtree@@Base+0x1334>
    5618:	subs	x25, x25, #0x1
    561c:	b.eq	5694 <PyInit__elementtree@@Base+0x1370>  // b.none
    5620:	ldr	x23, [x21, #16]
    5624:	cbz	x23, 5668 <PyInit__elementtree@@Base+0x1344>
    5628:	subs	x25, x25, #0x1
    562c:	b.ne	5670 <PyInit__elementtree@@Base+0x134c>  // b.any
    5630:	mov	w24, wzr
    5634:	b	568c <PyInit__elementtree@@Base+0x1368>
    5638:	mov	x25, xzr
    563c:	cbnz	x25, 5610 <PyInit__elementtree@@Base+0x12ec>
    5640:	adrp	x22, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5644:	ldr	x22, [x22, #3976]
    5648:	mov	w24, wzr
    564c:	mov	w5, wzr
    5650:	mov	x23, x22
    5654:	b	56bc <PyInit__elementtree@@Base+0x1398>
    5658:	adrp	x22, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    565c:	ldr	x22, [x22, #3976]
    5660:	ldr	x23, [x21, #16]
    5664:	cbnz	x23, 5628 <PyInit__elementtree@@Base+0x1304>
    5668:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    566c:	ldr	x23, [x23, #3976]
    5670:	ldr	x0, [x21, #24]
    5674:	cbz	x0, 56a8 <PyInit__elementtree@@Base+0x1384>
    5678:	bl	4050 <PyObject_IsTrue@plt>
    567c:	tbnz	w0, #31, 56dc <PyInit__elementtree@@Base+0x13b8>
    5680:	mov	w24, w0
    5684:	cmp	x25, #0x1
    5688:	b.ne	56ac <PyInit__elementtree@@Base+0x1388>  // b.any
    568c:	mov	w5, wzr
    5690:	b	56bc <PyInit__elementtree@@Base+0x1398>
    5694:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5698:	ldr	x23, [x23, #3976]
    569c:	mov	w24, wzr
    56a0:	mov	w5, wzr
    56a4:	b	56bc <PyInit__elementtree@@Base+0x1398>
    56a8:	mov	w24, wzr
    56ac:	ldr	x0, [x21, #32]
    56b0:	bl	4050 <PyObject_IsTrue@plt>
    56b4:	mov	w5, w0
    56b8:	tbnz	w0, #31, 56dc <PyInit__elementtree@@Base+0x13b8>
    56bc:	mov	x0, x19
    56c0:	mov	x1, x20
    56c4:	mov	x2, x22
    56c8:	mov	x3, x23
    56cc:	mov	w4, w24
    56d0:	bl	621c <PyInit__elementtree@@Base+0x1ef8>
    56d4:	mov	w0, wzr
    56d8:	b	56e0 <PyInit__elementtree@@Base+0x13bc>
    56dc:	mov	w0, #0xffffffff            	// #-1
    56e0:	ldp	x20, x19, [sp, #112]
    56e4:	ldp	x22, x21, [sp, #96]
    56e8:	ldp	x24, x23, [sp, #80]
    56ec:	ldr	x25, [sp, #64]
    56f0:	ldp	x29, x30, [sp, #48]
    56f4:	add	sp, sp, #0x80
    56f8:	ret
    56fc:	stp	x29, x30, [sp, #-32]!
    5700:	stp	x20, x19, [sp, #16]
    5704:	mov	x29, sp
    5708:	ldr	x8, [x0, #304]
    570c:	mov	x1, xzr
    5710:	blr	x8
    5714:	mov	x19, x0
    5718:	cbz	x0, 5794 <PyInit__elementtree@@Base+0x1470>
    571c:	str	xzr, [x19, #16]
    5720:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5724:	ldr	x20, [x20, #3976]
    5728:	mov	x0, x20
    572c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5730:	mov	x0, x20
    5734:	str	x20, [x19, #24]
    5738:	bl	4538 <PyInit__elementtree@@Base+0x214>
    573c:	mov	w0, #0x14                  	// #20
    5740:	str	x20, [x19, #32]
    5744:	str	xzr, [x19, #48]
    5748:	stp	xzr, xzr, [x19, #80]
    574c:	str	xzr, [x19, #72]
    5750:	bl	3c50 <PyList_New@plt>
    5754:	str	x0, [x19, #56]
    5758:	cbz	x0, 5778 <PyInit__elementtree@@Base+0x1454>
    575c:	movi	v0.2d, #0x0
    5760:	str	xzr, [x19, #64]
    5764:	str	xzr, [x19, #144]
    5768:	stp	q0, q0, [x19, #96]
    576c:	str	q0, [x19, #128]
    5770:	strh	wzr, [x19, #152]
    5774:	b	5794 <PyInit__elementtree@@Base+0x1470>
    5778:	ldr	x0, [x19, #24]
    577c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5780:	ldr	x0, [x19, #32]
    5784:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5788:	mov	x0, x19
    578c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5790:	mov	x19, xzr
    5794:	mov	x0, x19
    5798:	ldp	x20, x19, [sp, #16]
    579c:	ldp	x29, x30, [sp], #32
    57a0:	ret
    57a4:	stp	x29, x30, [sp, #-16]!
    57a8:	mov	x29, sp
    57ac:	bl	58f4 <PyInit__elementtree@@Base+0x15d0>
    57b0:	ldp	x29, x30, [sp], #16
    57b4:	ret
    57b8:	stp	x29, x30, [sp, #-48]!
    57bc:	str	x21, [sp, #16]
    57c0:	stp	x20, x19, [sp, #32]
    57c4:	mov	x29, sp
    57c8:	sub	x8, x2, #0x1
    57cc:	mov	x21, x2
    57d0:	mov	x20, x1
    57d4:	cmp	x8, #0x2
    57d8:	mov	x19, x0
    57dc:	b.cc	57fc <PyInit__elementtree@@Base+0x14d8>  // b.lo, b.ul, b.last
    57e0:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    57e4:	add	x0, x0, #0x3b0
    57e8:	mov	w2, #0x1                   	// #1
    57ec:	mov	w3, #0x2                   	// #2
    57f0:	mov	x1, x21
    57f4:	bl	3f60 <_PyArg_CheckPositional@plt>
    57f8:	cbz	w0, 5824 <PyInit__elementtree@@Base+0x1500>
    57fc:	ldr	x1, [x20]
    5800:	cmp	x21, #0x2
    5804:	b.ge	5814 <PyInit__elementtree@@Base+0x14f0>  // b.tcont
    5808:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    580c:	ldr	x2, [x2, #3976]
    5810:	b	5818 <PyInit__elementtree@@Base+0x14f4>
    5814:	ldr	x2, [x20, #8]
    5818:	mov	x0, x19
    581c:	bl	5a18 <PyInit__elementtree@@Base+0x16f4>
    5820:	b	5828 <PyInit__elementtree@@Base+0x1504>
    5824:	mov	x0, xzr
    5828:	ldp	x20, x19, [sp, #32]
    582c:	ldr	x21, [sp, #16]
    5830:	ldp	x29, x30, [sp], #48
    5834:	ret
    5838:	stp	x29, x30, [sp, #-16]!
    583c:	mov	x29, sp
    5840:	bl	5f68 <PyInit__elementtree@@Base+0x1c44>
    5844:	ldp	x29, x30, [sp], #16
    5848:	ret
    584c:	stp	x29, x30, [sp, #-16]!
    5850:	mov	x29, sp
    5854:	bl	6010 <PyInit__elementtree@@Base+0x1cec>
    5858:	ldp	x29, x30, [sp], #16
    585c:	ret
    5860:	stp	x29, x30, [sp, #-48]!
    5864:	str	x21, [sp, #16]
    5868:	stp	x20, x19, [sp, #32]
    586c:	mov	x29, sp
    5870:	sub	x8, x2, #0x1
    5874:	mov	x21, x2
    5878:	mov	x20, x1
    587c:	cmp	x8, #0x2
    5880:	mov	x19, x0
    5884:	b.cc	58a4 <PyInit__elementtree@@Base+0x1580>  // b.lo, b.ul, b.last
    5888:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    588c:	add	x0, x0, #0x3be
    5890:	mov	w2, #0x1                   	// #1
    5894:	mov	w3, #0x2                   	// #2
    5898:	mov	x1, x21
    589c:	bl	3f60 <_PyArg_CheckPositional@plt>
    58a0:	cbz	w0, 58cc <PyInit__elementtree@@Base+0x15a8>
    58a4:	ldr	x1, [x20]
    58a8:	cmp	x21, #0x2
    58ac:	b.ge	58bc <PyInit__elementtree@@Base+0x1598>  // b.tcont
    58b0:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    58b4:	ldr	x2, [x2, #3976]
    58b8:	b	58c0 <PyInit__elementtree@@Base+0x159c>
    58bc:	ldr	x2, [x20, #8]
    58c0:	mov	x0, x19
    58c4:	bl	60d8 <PyInit__elementtree@@Base+0x1db4>
    58c8:	b	58d0 <PyInit__elementtree@@Base+0x15ac>
    58cc:	mov	x0, xzr
    58d0:	ldp	x20, x19, [sp, #32]
    58d4:	ldr	x21, [sp, #16]
    58d8:	ldp	x29, x30, [sp], #48
    58dc:	ret
    58e0:	stp	x29, x30, [sp, #-16]!
    58e4:	mov	x29, sp
    58e8:	bl	61d0 <PyInit__elementtree@@Base+0x1eac>
    58ec:	ldp	x29, x30, [sp], #16
    58f0:	ret
    58f4:	stp	x29, x30, [sp, #-48]!
    58f8:	str	x21, [sp, #16]
    58fc:	stp	x20, x19, [sp, #32]
    5900:	mov	x29, sp
    5904:	mov	x20, x0
    5908:	mov	x8, x0
    590c:	ldr	x0, [x20, #48]!
    5910:	mov	x19, x1
    5914:	cbz	x0, 59bc <PyInit__elementtree@@Base+0x1698>
    5918:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    591c:	ldr	x8, [x0, #8]
    5920:	ldr	x9, [x9, #3912]
    5924:	cmp	x8, x9
    5928:	b.ne	5978 <PyInit__elementtree@@Base+0x1654>  // b.any
    592c:	ldr	x10, [x0]
    5930:	cmp	x10, #0x1
    5934:	b.ne	5978 <PyInit__elementtree@@Base+0x1654>  // b.any
    5938:	ldr	x10, [x19, #8]
    593c:	cmp	x10, x9
    5940:	b.ne	5978 <PyInit__elementtree@@Base+0x1654>  // b.any
    5944:	ldr	x9, [x19, #16]
    5948:	cmp	x9, #0x1
    594c:	b.ne	5978 <PyInit__elementtree@@Base+0x1654>  // b.any
    5950:	ldr	x21, [x0, #16]
    5954:	mov	x0, x20
    5958:	add	x1, x21, #0x1
    595c:	bl	3ca0 <_PyBytes_Resize@plt>
    5960:	tbnz	w0, #31, 5a00 <PyInit__elementtree@@Base+0x16dc>
    5964:	ldr	x8, [x20]
    5968:	ldrb	w9, [x19, #32]
    596c:	add	x8, x8, x21
    5970:	strb	w9, [x8, #32]
    5974:	b	59ec <PyInit__elementtree@@Base+0x16c8>
    5978:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    597c:	ldr	x9, [x9, #4064]
    5980:	cmp	x8, x9
    5984:	b.eq	59e0 <PyInit__elementtree@@Base+0x16bc>  // b.none
    5988:	mov	w0, #0x2                   	// #2
    598c:	bl	3c50 <PyList_New@plt>
    5990:	cbz	x0, 5a00 <PyInit__elementtree@@Base+0x16dc>
    5994:	ldr	x8, [x20]
    5998:	ldr	x9, [x0, #24]
    599c:	mov	x21, x0
    59a0:	mov	x0, x19
    59a4:	str	x8, [x9]
    59a8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    59ac:	ldr	x8, [x21, #24]
    59b0:	str	x19, [x8, #8]
    59b4:	str	x21, [x20]
    59b8:	b	59ec <PyInit__elementtree@@Base+0x16c8>
    59bc:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    59c0:	ldr	x8, [x8, #32]
    59c4:	ldr	x9, [x9, #3976]
    59c8:	cmp	x8, x9
    59cc:	b.eq	59ec <PyInit__elementtree@@Base+0x16c8>  // b.none
    59d0:	mov	x0, x19
    59d4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    59d8:	str	x19, [x20]
    59dc:	b	59ec <PyInit__elementtree@@Base+0x16c8>
    59e0:	mov	x1, x19
    59e4:	bl	3f00 <PyList_Append@plt>
    59e8:	tbnz	w0, #31, 5a00 <PyInit__elementtree@@Base+0x16dc>
    59ec:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    59f0:	ldr	x19, [x19, #3976]
    59f4:	mov	x0, x19
    59f8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    59fc:	b	5a04 <PyInit__elementtree@@Base+0x16e0>
    5a00:	mov	x19, xzr
    5a04:	mov	x0, x19
    5a08:	ldp	x20, x19, [sp, #32]
    5a0c:	ldr	x21, [sp, #16]
    5a10:	ldp	x29, x30, [sp], #48
    5a14:	ret
    5a18:	stp	x29, x30, [sp, #-16]!
    5a1c:	mov	x29, sp
    5a20:	bl	5a2c <PyInit__elementtree@@Base+0x1708>
    5a24:	ldp	x29, x30, [sp], #16
    5a28:	ret
    5a2c:	stp	x29, x30, [sp, #-64]!
    5a30:	str	x23, [sp, #16]
    5a34:	stp	x22, x21, [sp, #32]
    5a38:	stp	x20, x19, [sp, #48]
    5a3c:	mov	x29, sp
    5a40:	mov	x19, x0
    5a44:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5a48:	add	x0, x0, #0x320
    5a4c:	mov	x22, x2
    5a50:	mov	x20, x1
    5a54:	bl	3fc0 <PyState_FindModule@plt>
    5a58:	bl	3e10 <PyModule_GetState@plt>
    5a5c:	mov	x21, x0
    5a60:	mov	x0, x19
    5a64:	bl	5be0 <PyInit__elementtree@@Base+0x18bc>
    5a68:	tbnz	w0, #31, 5bc4 <PyInit__elementtree@@Base+0x18a0>
    5a6c:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5a70:	ldr	x0, [x19, #72]
    5a74:	ldr	x23, [x23, #3976]
    5a78:	cbz	x0, 5aa0 <PyInit__elementtree@@Base+0x177c>
    5a7c:	cmp	x22, x23
    5a80:	b.eq	5ab8 <PyInit__elementtree@@Base+0x1794>  // b.none
    5a84:	mov	x1, x20
    5a88:	mov	x2, x22
    5a8c:	mov	x3, xzr
    5a90:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    5a94:	mov	x20, x0
    5a98:	cbnz	x20, 5ae8 <PyInit__elementtree@@Base+0x17c4>
    5a9c:	b	5bc8 <PyInit__elementtree@@Base+0x18a4>
    5aa0:	mov	x0, x20
    5aa4:	mov	x1, x22
    5aa8:	bl	4918 <PyInit__elementtree@@Base+0x5f4>
    5aac:	mov	x20, x0
    5ab0:	cbnz	x20, 5ae8 <PyInit__elementtree@@Base+0x17c4>
    5ab4:	b	5bc8 <PyInit__elementtree@@Base+0x18a4>
    5ab8:	bl	4080 <PyDict_New@plt>
    5abc:	cbz	x0, 5bc4 <PyInit__elementtree@@Base+0x18a0>
    5ac0:	mov	x22, x0
    5ac4:	ldr	x0, [x19, #72]
    5ac8:	mov	x1, x20
    5acc:	mov	x2, x22
    5ad0:	mov	x3, xzr
    5ad4:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    5ad8:	mov	x20, x0
    5adc:	mov	x0, x22
    5ae0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5ae4:	cbz	x20, 5bc8 <PyInit__elementtree@@Base+0x18a4>
    5ae8:	ldr	x0, [x19, #40]
    5aec:	ldr	x22, [x19, #24]
    5af0:	cbz	x0, 5afc <PyInit__elementtree@@Base+0x17d8>
    5af4:	str	xzr, [x19, #40]
    5af8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5afc:	cmp	x22, x23
    5b00:	b.eq	5b18 <PyInit__elementtree@@Base+0x17f4>  // b.none
    5b04:	mov	x0, x22
    5b08:	mov	x1, x20
    5b0c:	bl	5c38 <PyInit__elementtree@@Base+0x1914>
    5b10:	tbz	w0, #31, 5b40 <PyInit__elementtree@@Base+0x181c>
    5b14:	b	5bbc <PyInit__elementtree@@Base+0x1898>
    5b18:	ldr	x8, [x19, #16]
    5b1c:	cbz	x8, 5b34 <PyInit__elementtree@@Base+0x1810>
    5b20:	ldr	x0, [x21]
    5b24:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    5b28:	add	x1, x1, #0x3c7
    5b2c:	bl	3de0 <PyErr_SetString@plt>
    5b30:	b	5bbc <PyInit__elementtree@@Base+0x1898>
    5b34:	mov	x0, x20
    5b38:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5b3c:	str	x20, [x19, #16]
    5b40:	ldp	x0, x1, [x19, #56]
    5b44:	ldr	x8, [x0, #16]
    5b48:	cmp	x1, x8
    5b4c:	b.ge	5b68 <PyInit__elementtree@@Base+0x1844>  // b.tcont
    5b50:	mov	x2, x22
    5b54:	bl	3fb0 <PyList_SetItem@plt>
    5b58:	tbnz	w0, #31, 5bbc <PyInit__elementtree@@Base+0x1898>
    5b5c:	mov	x0, x22
    5b60:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5b64:	b	5b74 <PyInit__elementtree@@Base+0x1850>
    5b68:	mov	x1, x22
    5b6c:	bl	3f00 <PyList_Append@plt>
    5b70:	tbnz	w0, #31, 5bbc <PyInit__elementtree@@Base+0x1898>
    5b74:	ldr	x8, [x19, #64]
    5b78:	mov	x0, x20
    5b7c:	add	x8, x8, #0x1
    5b80:	str	x8, [x19, #64]
    5b84:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5b88:	ldr	x0, [x19, #24]
    5b8c:	str	x20, [x19, #24]
    5b90:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5b94:	mov	x0, x20
    5b98:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5b9c:	ldr	x0, [x19, #32]
    5ba0:	str	x20, [x19, #32]
    5ba4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5ba8:	ldr	x1, [x19, #104]
    5bac:	mov	x0, x19
    5bb0:	mov	x2, x20
    5bb4:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    5bb8:	tbz	w0, #31, 5bc8 <PyInit__elementtree@@Base+0x18a4>
    5bbc:	mov	x0, x20
    5bc0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5bc4:	mov	x20, xzr
    5bc8:	mov	x0, x20
    5bcc:	ldp	x20, x19, [sp, #48]
    5bd0:	ldp	x22, x21, [sp, #32]
    5bd4:	ldr	x23, [sp, #16]
    5bd8:	ldp	x29, x30, [sp], #64
    5bdc:	ret
    5be0:	stp	x29, x30, [sp, #-16]!
    5be4:	mov	x29, sp
    5be8:	mov	x1, x0
    5bec:	ldr	x8, [x1, #48]!
    5bf0:	cbz	x8, 5c10 <PyInit__elementtree@@Base+0x18ec>
    5bf4:	ldr	x8, [x0, #40]
    5bf8:	cbz	x8, 5c1c <PyInit__elementtree@@Base+0x18f8>
    5bfc:	adrp	x3, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5c00:	add	x2, x8, #0x20
    5c04:	add	x3, x3, #0xb60
    5c08:	mov	x0, x8
    5c0c:	b	5c2c <PyInit__elementtree@@Base+0x1908>
    5c10:	mov	w0, wzr
    5c14:	ldp	x29, x30, [sp], #16
    5c18:	ret
    5c1c:	ldr	x0, [x0, #32]
    5c20:	adrp	x3, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5c24:	add	x3, x3, #0xb48
    5c28:	add	x2, x0, #0x18
    5c2c:	bl	5d00 <PyInit__elementtree@@Base+0x19dc>
    5c30:	ldp	x29, x30, [sp], #16
    5c34:	ret
    5c38:	stp	x29, x30, [sp, #-16]!
    5c3c:	mov	x29, sp
    5c40:	ldr	x8, [x0, #8]
    5c44:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5c48:	add	x9, x9, #0x6c8
    5c4c:	mov	x2, x1
    5c50:	cmp	x8, x9
    5c54:	b.eq	5c7c <PyInit__elementtree@@Base+0x1958>  // b.none
    5c58:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5c5c:	add	x1, x1, #0xb78
    5c60:	mov	x3, xzr
    5c64:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    5c68:	cbz	x0, 5c8c <PyInit__elementtree@@Base+0x1968>
    5c6c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5c70:	mov	w0, wzr
    5c74:	ldp	x29, x30, [sp], #16
    5c78:	ret
    5c7c:	mov	x1, x2
    5c80:	bl	49c4 <PyInit__elementtree@@Base+0x6a0>
    5c84:	ldp	x29, x30, [sp], #16
    5c88:	ret
    5c8c:	mov	w0, #0xffffffff            	// #-1
    5c90:	ldp	x29, x30, [sp], #16
    5c94:	ret
    5c98:	stp	x29, x30, [sp, #-32]!
    5c9c:	str	x19, [sp, #16]
    5ca0:	mov	x29, sp
    5ca4:	cbz	x1, 5ce8 <PyInit__elementtree@@Base+0x19c4>
    5ca8:	mov	x19, x0
    5cac:	mov	w0, #0x2                   	// #2
    5cb0:	bl	4210 <PyTuple_Pack@plt>
    5cb4:	str	x0, [x29, #24]
    5cb8:	cbz	x0, 5cf0 <PyInit__elementtree@@Base+0x19cc>
    5cbc:	ldr	x0, [x19, #96]
    5cc0:	add	x1, x29, #0x18
    5cc4:	mov	w2, #0x1                   	// #1
    5cc8:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    5ccc:	ldr	x8, [x29, #24]
    5cd0:	mov	x19, x0
    5cd4:	mov	x0, x8
    5cd8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5cdc:	cbz	x19, 5cf0 <PyInit__elementtree@@Base+0x19cc>
    5ce0:	mov	x0, x19
    5ce4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5ce8:	mov	w0, wzr
    5cec:	b	5cf4 <PyInit__elementtree@@Base+0x19d0>
    5cf0:	mov	w0, #0xffffffff            	// #-1
    5cf4:	ldr	x19, [sp, #16]
    5cf8:	ldp	x29, x30, [sp], #32
    5cfc:	ret
    5d00:	stp	x29, x30, [sp, #-80]!
    5d04:	str	x25, [sp, #16]
    5d08:	stp	x24, x23, [sp, #32]
    5d0c:	stp	x22, x21, [sp, #48]
    5d10:	stp	x20, x19, [sp, #64]
    5d14:	mov	x29, sp
    5d18:	ldr	x8, [x0, #8]
    5d1c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    5d20:	add	x9, x9, #0x6c8
    5d24:	mov	x20, x3
    5d28:	mov	x19, x1
    5d2c:	mov	x21, x0
    5d30:	cmp	x8, x9
    5d34:	b.eq	5da0 <PyInit__elementtree@@Base+0x1a7c>  // b.none
    5d38:	mov	x0, x21
    5d3c:	mov	x1, x20
    5d40:	bl	40f0 <_PyObject_GetAttrId@plt>
    5d44:	cbz	x0, 5e4c <PyInit__elementtree@@Base+0x1b28>
    5d48:	mov	x24, x0
    5d4c:	ldr	x0, [x19]
    5d50:	bl	51b8 <PyInit__elementtree@@Base+0xe94>
    5d54:	cbz	x0, 5dc8 <PyInit__elementtree@@Base+0x1aa4>
    5d58:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5d5c:	ldr	x8, [x8, #3976]
    5d60:	mov	x23, x0
    5d64:	cmp	x24, x8
    5d68:	b.eq	5e08 <PyInit__elementtree@@Base+0x1ae4>  // b.none
    5d6c:	mov	x0, x24
    5d70:	mov	x1, x23
    5d74:	bl	3cf0 <PyNumber_Add@plt>
    5d78:	mov	x25, x0
    5d7c:	mov	x0, x23
    5d80:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5d84:	mov	x0, x24
    5d88:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5d8c:	cmp	x25, #0x0
    5d90:	csel	x23, x23, x25, eq  // eq = none
    5d94:	csinv	w22, w22, wzr, ne  // ne = any
    5d98:	cbnz	x25, 5e14 <PyInit__elementtree@@Base+0x1af0>
    5d9c:	b	5e50 <PyInit__elementtree@@Base+0x1b2c>
    5da0:	ldr	x8, [x2]
    5da4:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5da8:	ldr	x9, [x9, #3976]
    5dac:	and	x0, x8, #0xfffffffffffffffe
    5db0:	cmp	x0, x9
    5db4:	b.eq	5dd4 <PyInit__elementtree@@Base+0x1ab0>  // b.none
    5db8:	tbnz	w8, #0, 5e6c <PyInit__elementtree@@Base+0x1b48>
    5dbc:	mov	w8, #0x1                   	// #1
    5dc0:	cbnz	w8, 5d38 <PyInit__elementtree@@Base+0x1a14>
    5dc4:	b	5e50 <PyInit__elementtree@@Base+0x1b2c>
    5dc8:	mov	x0, x24
    5dcc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5dd0:	b	5e4c <PyInit__elementtree@@Base+0x1b28>
    5dd4:	ldr	x8, [x19]
    5dd8:	adrp	x10, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5ddc:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5de0:	ldr	x9, [x8, #8]
    5de4:	ldr	x10, [x10, #4064]
    5de8:	and	x8, x8, #0xfffffffffffffffe
    5dec:	cmp	x9, x10
    5df0:	cset	w9, eq  // eq = none
    5df4:	orr	x8, x8, x9
    5df8:	str	x8, [x2]
    5dfc:	str	xzr, [x19]
    5e00:	ldr	x0, [x0, #3976]
    5e04:	b	5e8c <PyInit__elementtree@@Base+0x1b68>
    5e08:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5e0c:	ldr	x0, [x0, #3976]
    5e10:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5e14:	mov	x0, x21
    5e18:	mov	x1, x20
    5e1c:	mov	x2, x23
    5e20:	bl	4000 <_PyObject_SetAttrId@plt>
    5e24:	mov	w20, w0
    5e28:	mov	x0, x23
    5e2c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5e30:	tbnz	w20, #31, 5e4c <PyInit__elementtree@@Base+0x1b28>
    5e34:	ldr	x0, [x19]
    5e38:	cbz	x0, 5e44 <PyInit__elementtree@@Base+0x1b20>
    5e3c:	str	xzr, [x19]
    5e40:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5e44:	mov	w22, wzr
    5e48:	b	5e50 <PyInit__elementtree@@Base+0x1b2c>
    5e4c:	mov	w22, #0xffffffff            	// #-1
    5e50:	mov	w0, w22
    5e54:	ldp	x20, x19, [sp, #64]
    5e58:	ldp	x22, x21, [sp, #48]
    5e5c:	ldp	x24, x23, [sp, #32]
    5e60:	ldr	x25, [sp, #16]
    5e64:	ldp	x29, x30, [sp], #80
    5e68:	ret
    5e6c:	ldr	x3, [x19]
    5e70:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    5e74:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    5e78:	bl	3d30 <PyList_SetSlice@plt>
    5e7c:	tbnz	w0, #31, 5ea0 <PyInit__elementtree@@Base+0x1b7c>
    5e80:	ldr	x0, [x19]
    5e84:	cbz	x0, 5e90 <PyInit__elementtree@@Base+0x1b6c>
    5e88:	str	xzr, [x19]
    5e8c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5e90:	mov	w8, wzr
    5e94:	mov	w22, wzr
    5e98:	cbnz	w8, 5d38 <PyInit__elementtree@@Base+0x1a14>
    5e9c:	b	5e50 <PyInit__elementtree@@Base+0x1b2c>
    5ea0:	mov	w8, wzr
    5ea4:	mov	w22, #0xffffffff            	// #-1
    5ea8:	cbz	w8, 5e50 <PyInit__elementtree@@Base+0x1b2c>
    5eac:	b	5d38 <PyInit__elementtree@@Base+0x1a14>
    5eb0:	stp	x29, x30, [sp, #-16]!
    5eb4:	mov	x29, sp
    5eb8:	bl	5ec4 <PyInit__elementtree@@Base+0x1ba0>
    5ebc:	ldp	x29, x30, [sp], #16
    5ec0:	ret
    5ec4:	stp	x29, x30, [sp, #-48]!
    5ec8:	str	x21, [sp, #16]
    5ecc:	stp	x20, x19, [sp, #32]
    5ed0:	mov	x29, sp
    5ed4:	mov	x21, x2
    5ed8:	mov	x20, x1
    5edc:	mov	x19, x0
    5ee0:	bl	5f40 <PyInit__elementtree@@Base+0x1c1c>
    5ee4:	cbz	x0, 5f14 <PyInit__elementtree@@Base+0x1bf0>
    5ee8:	mov	x8, x0
    5eec:	mov	x0, x19
    5ef0:	mov	x1, x20
    5ef4:	mov	x2, x21
    5ef8:	mov	x3, xzr
    5efc:	blr	x8
    5f00:	mov	x1, x0
    5f04:	mov	x0, x19
    5f08:	mov	x2, xzr
    5f0c:	bl	4020 <_Py_CheckFunctionResult@plt>
    5f10:	b	5f30 <PyInit__elementtree@@Base+0x1c0c>
    5f14:	mov	x0, x21
    5f18:	bl	5f60 <PyInit__elementtree@@Base+0x1c3c>
    5f1c:	mov	x2, x0
    5f20:	mov	x0, x19
    5f24:	mov	x1, x20
    5f28:	mov	x3, xzr
    5f2c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    5f30:	ldp	x20, x19, [sp, #32]
    5f34:	ldr	x21, [sp, #16]
    5f38:	ldp	x29, x30, [sp], #48
    5f3c:	ret
    5f40:	ldr	x8, [x0, #8]
    5f44:	ldrb	w9, [x8, #169]
    5f48:	tbnz	w9, #3, 5f54 <PyInit__elementtree@@Base+0x1c30>
    5f4c:	mov	x0, xzr
    5f50:	ret
    5f54:	ldr	x8, [x8, #56]
    5f58:	ldr	x0, [x0, x8]
    5f5c:	ret
    5f60:	and	x0, x0, #0x7fffffffffffffff
    5f64:	ret
    5f68:	stp	x29, x30, [sp, #-32]!
    5f6c:	stp	x20, x19, [sp, #16]
    5f70:	mov	x29, sp
    5f74:	mov	x19, x0
    5f78:	bl	5be0 <PyInit__elementtree@@Base+0x18bc>
    5f7c:	tbnz	w0, #31, 6000 <PyInit__elementtree@@Base+0x1cdc>
    5f80:	ldr	x8, [x19, #64]
    5f84:	cbz	x8, 5fe8 <PyInit__elementtree@@Base+0x1cc4>
    5f88:	ldp	x0, x20, [x19, #24]
    5f8c:	str	x0, [x19, #32]
    5f90:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5f94:	ldp	x8, x0, [x19, #32]
    5f98:	str	x8, [x19, #40]
    5f9c:	bl	4548 <PyInit__elementtree@@Base+0x224>
    5fa0:	ldp	x9, x8, [x19, #56]
    5fa4:	sub	x8, x8, #0x1
    5fa8:	str	x8, [x19, #64]
    5fac:	ldr	x9, [x9, #24]
    5fb0:	ldr	x0, [x9, x8, lsl #3]
    5fb4:	str	x0, [x19, #24]
    5fb8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5fbc:	mov	x0, x20
    5fc0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    5fc4:	ldr	x1, [x19, #112]
    5fc8:	ldr	x2, [x19, #32]
    5fcc:	mov	x0, x19
    5fd0:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    5fd4:	tbnz	w0, #31, 6000 <PyInit__elementtree@@Base+0x1cdc>
    5fd8:	ldr	x0, [x19, #32]
    5fdc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    5fe0:	ldr	x0, [x19, #32]
    5fe4:	b	6004 <PyInit__elementtree@@Base+0x1ce0>
    5fe8:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    5fec:	ldr	x8, [x8, #3984]
    5ff0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    5ff4:	add	x1, x1, #0x3f2
    5ff8:	ldr	x0, [x8]
    5ffc:	bl	3de0 <PyErr_SetString@plt>
    6000:	mov	x0, xzr
    6004:	ldp	x20, x19, [sp, #16]
    6008:	ldp	x29, x30, [sp], #32
    600c:	ret
    6010:	sub	sp, sp, #0x30
    6014:	stp	x29, x30, [sp, #16]
    6018:	stp	x20, x19, [sp, #32]
    601c:	add	x29, sp, #0x10
    6020:	mov	x19, x0
    6024:	str	x1, [sp, #8]
    6028:	bl	5be0 <PyInit__elementtree@@Base+0x18bc>
    602c:	tbnz	w0, #31, 60c0 <PyInit__elementtree@@Base+0x1d9c>
    6030:	ldr	x0, [x19, #80]
    6034:	cbz	x0, 608c <PyInit__elementtree@@Base+0x1d68>
    6038:	add	x1, sp, #0x8
    603c:	mov	w2, #0x1                   	// #1
    6040:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    6044:	mov	x20, x0
    6048:	cbz	x0, 60c4 <PyInit__elementtree@@Base+0x1da0>
    604c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6050:	ldr	x0, [x19, #24]
    6054:	ldr	x8, [x8, #3976]
    6058:	cmp	x0, x8
    605c:	b.eq	6098 <PyInit__elementtree@@Base+0x1d74>  // b.none
    6060:	ldrb	w8, [x19, #152]
    6064:	cbz	w8, 6098 <PyInit__elementtree@@Base+0x1d74>
    6068:	mov	x1, x20
    606c:	bl	5c38 <PyInit__elementtree@@Base+0x1914>
    6070:	tbnz	w0, #31, 60b8 <PyInit__elementtree@@Base+0x1d94>
    6074:	mov	x0, x20
    6078:	bl	4538 <PyInit__elementtree@@Base+0x214>
    607c:	ldr	x0, [x19, #40]
    6080:	str	x20, [x19, #40]
    6084:	bl	4548 <PyInit__elementtree@@Base+0x224>
    6088:	b	6098 <PyInit__elementtree@@Base+0x1d74>
    608c:	ldr	x0, [sp, #8]
    6090:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6094:	ldr	x20, [sp, #8]
    6098:	ldr	x8, [x19, #96]
    609c:	cbz	x8, 60c4 <PyInit__elementtree@@Base+0x1da0>
    60a0:	ldr	x1, [x19, #136]
    60a4:	cbz	x1, 60c4 <PyInit__elementtree@@Base+0x1da0>
    60a8:	mov	x0, x19
    60ac:	mov	x2, x20
    60b0:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    60b4:	tbz	w0, #31, 60c4 <PyInit__elementtree@@Base+0x1da0>
    60b8:	mov	x0, x20
    60bc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    60c0:	mov	x20, xzr
    60c4:	mov	x0, x20
    60c8:	ldp	x20, x19, [sp, #32]
    60cc:	ldp	x29, x30, [sp, #16]
    60d0:	add	sp, sp, #0x30
    60d4:	ret
    60d8:	stp	x29, x30, [sp, #-16]!
    60dc:	mov	x29, sp
    60e0:	bl	60ec <PyInit__elementtree@@Base+0x1dc8>
    60e4:	ldp	x29, x30, [sp], #16
    60e8:	ret
    60ec:	sub	sp, sp, #0x40
    60f0:	stp	x29, x30, [sp, #16]
    60f4:	str	x21, [sp, #32]
    60f8:	stp	x20, x19, [sp, #48]
    60fc:	add	x29, sp, #0x10
    6100:	mov	x20, x2
    6104:	mov	x21, x1
    6108:	mov	x19, x0
    610c:	stp	x1, x2, [sp]
    6110:	bl	5be0 <PyInit__elementtree@@Base+0x18bc>
    6114:	tbnz	w0, #31, 61b4 <PyInit__elementtree@@Base+0x1e90>
    6118:	ldr	x0, [x19, #88]
    611c:	cbz	x0, 6174 <PyInit__elementtree@@Base+0x1e50>
    6120:	mov	x1, sp
    6124:	mov	w2, #0x2                   	// #2
    6128:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    612c:	mov	x20, x0
    6130:	cbz	x0, 61b8 <PyInit__elementtree@@Base+0x1e94>
    6134:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6138:	ldr	x0, [x19, #24]
    613c:	ldr	x8, [x8, #3976]
    6140:	cmp	x0, x8
    6144:	b.eq	618c <PyInit__elementtree@@Base+0x1e68>  // b.none
    6148:	ldrb	w8, [x19, #153]
    614c:	cbz	w8, 618c <PyInit__elementtree@@Base+0x1e68>
    6150:	mov	x1, x20
    6154:	bl	5c38 <PyInit__elementtree@@Base+0x1914>
    6158:	tbnz	w0, #31, 61ac <PyInit__elementtree@@Base+0x1e88>
    615c:	mov	x0, x20
    6160:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6164:	ldr	x0, [x19, #40]
    6168:	str	x20, [x19, #40]
    616c:	bl	4548 <PyInit__elementtree@@Base+0x224>
    6170:	b	618c <PyInit__elementtree@@Base+0x1e68>
    6174:	mov	w0, #0x2                   	// #2
    6178:	mov	x1, x21
    617c:	mov	x2, x20
    6180:	bl	4210 <PyTuple_Pack@plt>
    6184:	mov	x20, x0
    6188:	cbz	x0, 61b8 <PyInit__elementtree@@Base+0x1e94>
    618c:	ldr	x8, [x19, #96]
    6190:	cbz	x8, 61b8 <PyInit__elementtree@@Base+0x1e94>
    6194:	ldr	x1, [x19, #144]
    6198:	cbz	x1, 61b8 <PyInit__elementtree@@Base+0x1e94>
    619c:	mov	x0, x19
    61a0:	mov	x2, x20
    61a4:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    61a8:	tbz	w0, #31, 61b8 <PyInit__elementtree@@Base+0x1e94>
    61ac:	mov	x0, x20
    61b0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    61b4:	mov	x20, xzr
    61b8:	mov	x0, x20
    61bc:	ldp	x20, x19, [sp, #48]
    61c0:	ldr	x21, [sp, #32]
    61c4:	ldp	x29, x30, [sp, #16]
    61c8:	add	sp, sp, #0x40
    61cc:	ret
    61d0:	stp	x29, x30, [sp, #-16]!
    61d4:	mov	x29, sp
    61d8:	bl	61e4 <PyInit__elementtree@@Base+0x1ec0>
    61dc:	ldp	x29, x30, [sp], #16
    61e0:	ret
    61e4:	stp	x29, x30, [sp, #-32]!
    61e8:	str	x19, [sp, #16]
    61ec:	mov	x29, sp
    61f0:	ldr	x8, [x0, #16]
    61f4:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    61f8:	ldr	x9, [x9, #3976]
    61fc:	cmp	x8, #0x0
    6200:	csel	x19, x9, x8, eq  // eq = none
    6204:	mov	x0, x19
    6208:	bl	4538 <PyInit__elementtree@@Base+0x214>
    620c:	mov	x0, x19
    6210:	ldr	x19, [sp, #16]
    6214:	ldp	x29, x30, [sp], #32
    6218:	ret
    621c:	stp	x29, x30, [sp, #-80]!
    6220:	str	x25, [sp, #16]
    6224:	stp	x24, x23, [sp, #32]
    6228:	stp	x22, x21, [sp, #48]
    622c:	stp	x20, x19, [sp, #64]
    6230:	mov	x29, sp
    6234:	adrp	x25, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6238:	ldr	x25, [x25, #3976]
    623c:	mov	w20, w5
    6240:	mov	w22, w4
    6244:	mov	x21, x3
    6248:	mov	x23, x2
    624c:	cmp	x1, x25
    6250:	mov	x19, x0
    6254:	b.eq	6274 <PyInit__elementtree@@Base+0x1f50>  // b.none
    6258:	mov	x0, x1
    625c:	mov	x24, x1
    6260:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6264:	ldr	x0, [x19, #72]
    6268:	str	x24, [x19, #72]
    626c:	bl	4548 <PyInit__elementtree@@Base+0x224>
    6270:	b	6284 <PyInit__elementtree@@Base+0x1f60>
    6274:	ldr	x0, [x19, #72]
    6278:	cbz	x0, 6284 <PyInit__elementtree@@Base+0x1f60>
    627c:	str	xzr, [x19, #72]
    6280:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6284:	cmp	x23, x25
    6288:	b.eq	62a8 <PyInit__elementtree@@Base+0x1f84>  // b.none
    628c:	cbz	x23, 62c0 <PyInit__elementtree@@Base+0x1f9c>
    6290:	mov	x0, x23
    6294:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6298:	ldr	x0, [x19, #80]
    629c:	str	x23, [x19, #80]
    62a0:	bl	4548 <PyInit__elementtree@@Base+0x224>
    62a4:	b	62d4 <PyInit__elementtree@@Base+0x1fb0>
    62a8:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    62ac:	add	x0, x0, #0x320
    62b0:	bl	3fc0 <PyState_FindModule@plt>
    62b4:	bl	3e10 <PyModule_GetState@plt>
    62b8:	ldr	x23, [x0, #24]
    62bc:	cbnz	x23, 6290 <PyInit__elementtree@@Base+0x1f6c>
    62c0:	ldr	x0, [x19, #80]
    62c4:	cbz	x0, 62d0 <PyInit__elementtree@@Base+0x1fac>
    62c8:	str	xzr, [x19, #80]
    62cc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    62d0:	mov	w22, wzr
    62d4:	cmp	x21, x25
    62d8:	strb	w22, [x19, #152]
    62dc:	b.eq	62fc <PyInit__elementtree@@Base+0x1fd8>  // b.none
    62e0:	cbz	x21, 6314 <PyInit__elementtree@@Base+0x1ff0>
    62e4:	mov	x0, x21
    62e8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    62ec:	ldr	x0, [x19, #88]
    62f0:	str	x21, [x19, #88]
    62f4:	bl	4548 <PyInit__elementtree@@Base+0x224>
    62f8:	b	6328 <PyInit__elementtree@@Base+0x2004>
    62fc:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    6300:	add	x0, x0, #0x320
    6304:	bl	3fc0 <PyState_FindModule@plt>
    6308:	bl	3e10 <PyModule_GetState@plt>
    630c:	ldr	x21, [x0, #32]
    6310:	cbnz	x21, 62e4 <PyInit__elementtree@@Base+0x1fc0>
    6314:	ldr	x0, [x19, #88]
    6318:	cbz	x0, 6324 <PyInit__elementtree@@Base+0x2000>
    631c:	str	xzr, [x19, #88]
    6320:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6324:	mov	w20, wzr
    6328:	strb	w20, [x19, #153]
    632c:	ldp	x20, x19, [sp, #64]
    6330:	ldp	x22, x21, [sp, #48]
    6334:	ldp	x24, x23, [sp, #32]
    6338:	ldr	x25, [sp, #16]
    633c:	ldp	x29, x30, [sp], #80
    6340:	ret
    6344:	stp	x29, x30, [sp, #-32]!
    6348:	stp	x20, x19, [sp, #16]
    634c:	mov	x29, sp
    6350:	mov	x19, x0
    6354:	bl	4220 <PyObject_GC_UnTrack@plt>
    6358:	ldr	x8, [x19, #8]
    635c:	adrp	x9, 6000 <PyInit__elementtree@@Base+0x1cdc>
    6360:	add	x9, x9, #0x344
    6364:	ldr	x8, [x8, #48]
    6368:	cmp	x8, x9
    636c:	b.eq	63c4 <PyInit__elementtree@@Base+0x20a0>  // b.none
    6370:	mov	x20, xzr
    6374:	ldr	x8, [x19, #48]
    6378:	cbz	x8, 6384 <PyInit__elementtree@@Base+0x2060>
    637c:	mov	x0, x19
    6380:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    6384:	mov	x0, x19
    6388:	bl	65b8 <PyInit__elementtree@@Base+0x2294>
    638c:	ldr	x8, [x19, #8]
    6390:	mov	x0, x19
    6394:	ldr	x8, [x8, #320]
    6398:	blr	x8
    639c:	cbz	x20, 63dc <PyInit__elementtree@@Base+0x20b8>
    63a0:	ldr	w8, [x20, #184]
    63a4:	sub	w8, w8, #0x1
    63a8:	cmp	w8, #0x0
    63ac:	str	w8, [x20, #184]
    63b0:	b.gt	63dc <PyInit__elementtree@@Base+0x20b8>
    63b4:	ldr	x8, [x20, #192]
    63b8:	cbz	x8, 63dc <PyInit__elementtree@@Base+0x20b8>
    63bc:	bl	41c0 <_PyTrash_thread_destroy_chain@plt>
    63c0:	b	63dc <PyInit__elementtree@@Base+0x20b8>
    63c4:	bl	3f50 <PyThreadState_Get@plt>
    63c8:	ldr	w8, [x0, #184]
    63cc:	cmp	w8, #0x32
    63d0:	b.lt	63e8 <PyInit__elementtree@@Base+0x20c4>  // b.tstop
    63d4:	mov	x0, x19
    63d8:	bl	4040 <_PyTrash_thread_deposit_object@plt>
    63dc:	ldp	x20, x19, [sp, #16]
    63e0:	ldp	x29, x30, [sp], #32
    63e4:	ret
    63e8:	mov	x20, x0
    63ec:	add	w8, w8, #0x1
    63f0:	str	w8, [x0, #184]
    63f4:	ldr	x8, [x19, #48]
    63f8:	cbnz	x8, 637c <PyInit__elementtree@@Base+0x2058>
    63fc:	b	6384 <PyInit__elementtree@@Base+0x2060>
    6400:	stp	x29, x30, [sp, #-32]!
    6404:	stp	x20, x19, [sp, #16]
    6408:	mov	x29, sp
    640c:	ldr	x8, [x0, #16]
    6410:	mov	x19, x0
    6414:	cbz	x8, 6454 <PyInit__elementtree@@Base+0x2130>
    6418:	mov	x0, x19
    641c:	bl	3fe0 <Py_ReprEnter@plt>
    6420:	cbz	w0, 646c <PyInit__elementtree@@Base+0x2148>
    6424:	cmp	w0, #0x1
    6428:	b.lt	644c <PyInit__elementtree@@Base+0x2128>  // b.tstop
    642c:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6430:	ldr	x8, [x19, #8]
    6434:	ldr	x9, [x9, #3920]
    6438:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    643c:	add	x1, x1, #0x48e
    6440:	ldr	x2, [x8, #24]
    6444:	ldr	x0, [x9]
    6448:	bl	4180 <PyErr_Format@plt>
    644c:	mov	x20, xzr
    6450:	b	648c <PyInit__elementtree@@Base+0x2168>
    6454:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    6458:	add	x0, x0, #0x46b
    645c:	mov	x1, x19
    6460:	bl	3c30 <PyUnicode_FromFormat@plt>
    6464:	mov	x20, x0
    6468:	b	648c <PyInit__elementtree@@Base+0x2168>
    646c:	ldr	x1, [x19, #16]
    6470:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    6474:	add	x0, x0, #0x47b
    6478:	mov	x2, x19
    647c:	bl	3c30 <PyUnicode_FromFormat@plt>
    6480:	mov	x20, x0
    6484:	mov	x0, x19
    6488:	bl	41a0 <Py_ReprLeave@plt>
    648c:	mov	x0, x20
    6490:	ldp	x20, x19, [sp, #16]
    6494:	ldp	x29, x30, [sp], #32
    6498:	ret
    649c:	stp	x29, x30, [sp, #-64]!
    64a0:	str	x23, [sp, #16]
    64a4:	stp	x22, x21, [sp, #32]
    64a8:	stp	x20, x19, [sp, #48]
    64ac:	mov	x29, sp
    64b0:	mov	x21, x0
    64b4:	ldr	x0, [x0, #16]
    64b8:	mov	x20, x2
    64bc:	mov	x22, x1
    64c0:	cbz	x0, 64d8 <PyInit__elementtree@@Base+0x21b4>
    64c4:	mov	x1, x20
    64c8:	blr	x22
    64cc:	mov	w19, w0
    64d0:	cbnz	w0, 65a0 <PyInit__elementtree@@Base+0x227c>
    64d4:	b	64d8 <PyInit__elementtree@@Base+0x21b4>
    64d8:	ldr	x8, [x21, #24]
    64dc:	ands	x0, x8, #0xfffffffffffffffe
    64e0:	b.eq	64f8 <PyInit__elementtree@@Base+0x21d4>  // b.none
    64e4:	mov	x1, x20
    64e8:	blr	x22
    64ec:	cmp	w0, #0x0
    64f0:	csel	w19, w19, w0, eq  // eq = none
    64f4:	cbnz	w0, 65a0 <PyInit__elementtree@@Base+0x227c>
    64f8:	ldr	x8, [x21, #32]
    64fc:	ands	x0, x8, #0xfffffffffffffffe
    6500:	b.eq	6518 <PyInit__elementtree@@Base+0x21f4>  // b.none
    6504:	mov	x1, x20
    6508:	blr	x22
    650c:	cmp	w0, #0x0
    6510:	csel	w19, w19, w0, eq  // eq = none
    6514:	cbnz	w0, 65a0 <PyInit__elementtree@@Base+0x227c>
    6518:	ldr	x8, [x21, #40]
    651c:	cbz	x8, 659c <PyInit__elementtree@@Base+0x2278>
    6520:	ldr	x0, [x8]
    6524:	cbz	x0, 6540 <PyInit__elementtree@@Base+0x221c>
    6528:	mov	x1, x20
    652c:	blr	x22
    6530:	cmp	w0, #0x0
    6534:	cset	w8, ne  // ne = any
    6538:	csel	w19, w19, w0, eq  // eq = none
    653c:	cbnz	w0, 6598 <PyInit__elementtree@@Base+0x2274>
    6540:	ldr	x8, [x21, #40]
    6544:	ldr	x9, [x8, #8]
    6548:	cmp	x9, #0x1
    654c:	b.lt	6594 <PyInit__elementtree@@Base+0x2270>  // b.tstop
    6550:	mov	x23, xzr
    6554:	b	656c <PyInit__elementtree@@Base+0x2248>
    6558:	ldr	x8, [x21, #40]
    655c:	add	x23, x23, #0x1
    6560:	ldr	x9, [x8, #8]
    6564:	cmp	x23, x9
    6568:	b.ge	6594 <PyInit__elementtree@@Base+0x2270>  // b.tcont
    656c:	ldr	x8, [x8, #24]
    6570:	ldr	x0, [x8, x23, lsl #3]
    6574:	cbz	x0, 6558 <PyInit__elementtree@@Base+0x2234>
    6578:	mov	x1, x20
    657c:	blr	x22
    6580:	cmp	w0, #0x0
    6584:	csel	w19, w19, w0, eq  // eq = none
    6588:	cbz	w0, 6558 <PyInit__elementtree@@Base+0x2234>
    658c:	cset	w8, ne  // ne = any
    6590:	b	6598 <PyInit__elementtree@@Base+0x2274>
    6594:	mov	w8, wzr
    6598:	tbnz	w8, #0, 65a0 <PyInit__elementtree@@Base+0x227c>
    659c:	mov	w19, wzr
    65a0:	mov	w0, w19
    65a4:	ldp	x20, x19, [sp, #48]
    65a8:	ldp	x22, x21, [sp, #32]
    65ac:	ldr	x23, [sp, #16]
    65b0:	ldp	x29, x30, [sp], #64
    65b4:	ret
    65b8:	stp	x29, x30, [sp, #-32]!
    65bc:	str	x19, [sp, #16]
    65c0:	mov	x29, sp
    65c4:	mov	x19, x0
    65c8:	ldr	x0, [x0, #16]
    65cc:	cbz	x0, 65d8 <PyInit__elementtree@@Base+0x22b4>
    65d0:	str	xzr, [x19, #16]
    65d4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    65d8:	add	x0, x19, #0x18
    65dc:	bl	6f50 <PyInit__elementtree@@Base+0x2c2c>
    65e0:	add	x0, x19, #0x20
    65e4:	bl	6f50 <PyInit__elementtree@@Base+0x2c2c>
    65e8:	mov	x0, x19
    65ec:	bl	6f70 <PyInit__elementtree@@Base+0x2c4c>
    65f0:	ldr	x19, [sp, #16]
    65f4:	mov	w0, wzr
    65f8:	ldp	x29, x30, [sp], #32
    65fc:	ret
    6600:	sub	sp, sp, #0x30
    6604:	stp	x29, x30, [sp, #16]
    6608:	stp	x20, x19, [sp, #32]
    660c:	add	x29, sp, #0x10
    6610:	str	xzr, [sp]
    6614:	adrp	x3, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6618:	ldr	x3, [x3, #3992]
    661c:	mov	x8, x1
    6620:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6624:	mov	x20, x2
    6628:	mov	x19, x0
    662c:	add	x1, x1, #0x907
    6630:	add	x2, sp, #0x8
    6634:	mov	x4, sp
    6638:	mov	x0, x8
    663c:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    6640:	cbz	w0, 6704 <PyInit__elementtree@@Base+0x23e0>
    6644:	ldr	x0, [sp]
    6648:	cbz	x0, 666c <PyInit__elementtree@@Base+0x2348>
    664c:	bl	4150 <PyDict_Copy@plt>
    6650:	str	x0, [sp]
    6654:	cbz	x0, 6704 <PyInit__elementtree@@Base+0x23e0>
    6658:	cbz	x20, 6680 <PyInit__elementtree@@Base+0x235c>
    665c:	mov	x1, x20
    6660:	bl	3f20 <PyDict_Update@plt>
    6664:	tbz	w0, #31, 6680 <PyInit__elementtree@@Base+0x235c>
    6668:	b	66fc <PyInit__elementtree@@Base+0x23d8>
    666c:	cbz	x20, 6680 <PyInit__elementtree@@Base+0x235c>
    6670:	mov	x0, x20
    6674:	bl	4820 <PyInit__elementtree@@Base+0x4fc>
    6678:	str	x0, [sp]
    667c:	cbz	x0, 6704 <PyInit__elementtree@@Base+0x23e0>
    6680:	ldr	x20, [sp]
    6684:	cbz	x20, 66a4 <PyInit__elementtree@@Base+0x2380>
    6688:	mov	x0, x20
    668c:	bl	4a58 <PyInit__elementtree@@Base+0x734>
    6690:	cbnz	w0, 66a4 <PyInit__elementtree@@Base+0x2380>
    6694:	mov	x0, x19
    6698:	mov	x1, x20
    669c:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    66a0:	tbnz	w0, #31, 66fc <PyInit__elementtree@@Base+0x23d8>
    66a4:	ldr	x0, [sp]
    66a8:	bl	4548 <PyInit__elementtree@@Base+0x224>
    66ac:	ldr	x0, [sp, #8]
    66b0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    66b4:	ldr	x8, [sp, #8]
    66b8:	ldr	x0, [x19, #16]
    66bc:	str	x8, [x19, #16]
    66c0:	bl	4548 <PyInit__elementtree@@Base+0x224>
    66c4:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    66c8:	ldr	x20, [x20, #3976]
    66cc:	mov	x0, x20
    66d0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    66d4:	add	x0, x19, #0x18
    66d8:	mov	x1, x20
    66dc:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    66e0:	mov	x0, x20
    66e4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    66e8:	add	x0, x19, #0x20
    66ec:	mov	x1, x20
    66f0:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    66f4:	mov	w0, wzr
    66f8:	b	6708 <PyInit__elementtree@@Base+0x23e4>
    66fc:	ldr	x0, [sp]
    6700:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6704:	mov	w0, #0xffffffff            	// #-1
    6708:	ldp	x20, x19, [sp, #32]
    670c:	ldp	x29, x30, [sp, #16]
    6710:	add	sp, sp, #0x30
    6714:	ret
    6718:	stp	x29, x30, [sp, #-32]!
    671c:	stp	x20, x19, [sp, #16]
    6720:	mov	x29, sp
    6724:	ldr	x8, [x0, #304]
    6728:	mov	x1, xzr
    672c:	blr	x8
    6730:	mov	x19, x0
    6734:	cbz	x0, 6768 <PyInit__elementtree@@Base+0x2444>
    6738:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    673c:	ldr	x20, [x20, #3976]
    6740:	mov	x0, x20
    6744:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6748:	mov	x0, x20
    674c:	str	x20, [x19, #16]
    6750:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6754:	mov	x0, x20
    6758:	str	x20, [x19, #24]
    675c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6760:	stp	xzr, xzr, [x19, #40]
    6764:	str	x20, [x19, #32]
    6768:	mov	x0, x19
    676c:	ldp	x20, x19, [sp, #16]
    6770:	ldp	x29, x30, [sp], #32
    6774:	ret
    6778:	ldr	x8, [x0, #40]
    677c:	cbz	x8, 6788 <PyInit__elementtree@@Base+0x2464>
    6780:	ldr	x0, [x8, #8]
    6784:	ret
    6788:	mov	x0, xzr
    678c:	ret
    6790:	stp	x29, x30, [sp, #-32]!
    6794:	stp	x20, x19, [sp, #16]
    6798:	mov	x29, sp
    679c:	tbnz	x1, #63, 67d8 <PyInit__elementtree@@Base+0x24b4>
    67a0:	ldr	x8, [x0, #40]
    67a4:	mov	x19, x0
    67a8:	cbz	x8, 67d8 <PyInit__elementtree@@Base+0x24b4>
    67ac:	ldr	x9, [x8, #8]
    67b0:	cmp	x9, x1
    67b4:	b.le	67d8 <PyInit__elementtree@@Base+0x24b4>
    67b8:	ldr	x8, [x8, #24]
    67bc:	lsl	x20, x1, #3
    67c0:	ldr	x0, [x8, x20]
    67c4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    67c8:	ldr	x8, [x19, #40]
    67cc:	ldr	x8, [x8, #24]
    67d0:	ldr	x0, [x8, x20]
    67d4:	b	67f4 <PyInit__elementtree@@Base+0x24d0>
    67d8:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    67dc:	ldr	x8, [x8, #3984]
    67e0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    67e4:	add	x1, x1, #0x4b0
    67e8:	ldr	x0, [x8]
    67ec:	bl	3de0 <PyErr_SetString@plt>
    67f0:	mov	x0, xzr
    67f4:	ldp	x20, x19, [sp, #16]
    67f8:	ldp	x29, x30, [sp], #32
    67fc:	ret
    6800:	stp	x29, x30, [sp, #-48]!
    6804:	stp	x22, x21, [sp, #16]
    6808:	stp	x20, x19, [sp, #32]
    680c:	mov	x29, sp
    6810:	tbnz	x1, #63, 687c <PyInit__elementtree@@Base+0x2558>
    6814:	ldr	x8, [x0, #40]
    6818:	mov	x20, x0
    681c:	cbz	x8, 687c <PyInit__elementtree@@Base+0x2558>
    6820:	ldr	x9, [x8, #8]
    6824:	mov	x19, x1
    6828:	cmp	x9, x1
    682c:	b.le	687c <PyInit__elementtree@@Base+0x2558>
    6830:	ldr	x10, [x8, #24]
    6834:	mov	x22, x2
    6838:	ldr	x21, [x10, x19, lsl #3]
    683c:	cbz	x2, 689c <PyInit__elementtree@@Base+0x2578>
    6840:	ldr	x0, [x22, #8]
    6844:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    6848:	add	x8, x8, #0x6c8
    684c:	cmp	x0, x8
    6850:	b.eq	6864 <PyInit__elementtree@@Base+0x2540>  // b.none
    6854:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    6858:	add	x1, x1, #0x6c8
    685c:	bl	4160 <PyType_IsSubtype@plt>
    6860:	cbz	w0, 68f4 <PyInit__elementtree@@Base+0x25d0>
    6864:	mov	x0, x22
    6868:	bl	4538 <PyInit__elementtree@@Base+0x214>
    686c:	ldr	x8, [x20, #40]
    6870:	ldr	x8, [x8, #24]
    6874:	str	x22, [x8, x19, lsl #3]
    6878:	b	68d8 <PyInit__elementtree@@Base+0x25b4>
    687c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6880:	ldr	x8, [x8, #3984]
    6884:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6888:	add	x1, x1, #0x4c9
    688c:	ldr	x0, [x8]
    6890:	bl	3de0 <PyErr_SetString@plt>
    6894:	mov	w0, #0xffffffff            	// #-1
    6898:	b	68e4 <PyInit__elementtree@@Base+0x25c0>
    689c:	sub	x9, x9, #0x1
    68a0:	str	x9, [x8, #8]
    68a4:	ldr	x8, [x20, #40]
    68a8:	ldr	x9, [x8, #8]
    68ac:	cmp	x9, x19
    68b0:	b.le	68d8 <PyInit__elementtree@@Base+0x25b4>
    68b4:	ldr	x8, [x8, #24]
    68b8:	add	x8, x8, x19, lsl #3
    68bc:	ldr	x9, [x8, #8]
    68c0:	add	x19, x19, #0x1
    68c4:	str	x9, [x8]
    68c8:	ldr	x8, [x20, #40]
    68cc:	ldr	x9, [x8, #8]
    68d0:	cmp	x19, x9
    68d4:	b.lt	68b4 <PyInit__elementtree@@Base+0x2590>  // b.tstop
    68d8:	mov	x0, x21
    68dc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    68e0:	mov	w0, wzr
    68e4:	ldp	x20, x19, [sp, #32]
    68e8:	ldp	x22, x21, [sp, #16]
    68ec:	ldp	x29, x30, [sp], #48
    68f0:	ret
    68f4:	mov	x0, x22
    68f8:	bl	4af0 <PyInit__elementtree@@Base+0x7cc>
    68fc:	mov	w0, #0xffffffff            	// #-1
    6900:	b	68e4 <PyInit__elementtree@@Base+0x25c0>
    6904:	sub	sp, sp, #0x60
    6908:	stp	x29, x30, [sp, #32]
    690c:	stp	x24, x23, [sp, #48]
    6910:	stp	x22, x21, [sp, #64]
    6914:	stp	x20, x19, [sp, #80]
    6918:	add	x29, sp, #0x20
    691c:	ldr	x9, [x1, #8]
    6920:	mov	x8, x1
    6924:	mov	x19, x0
    6928:	ldr	x10, [x9, #96]
    692c:	cbz	x10, 6980 <PyInit__elementtree@@Base+0x265c>
    6930:	ldr	x10, [x10, #264]
    6934:	cbz	x10, 6980 <PyInit__elementtree@@Base+0x265c>
    6938:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    693c:	ldr	x9, [x9, #3984]
    6940:	mov	x0, x8
    6944:	ldr	x1, [x9]
    6948:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    694c:	mov	x20, x0
    6950:	cmn	x0, #0x1
    6954:	b.eq	6a5c <PyInit__elementtree@@Base+0x2738>  // b.none
    6958:	tbz	x20, #63, 696c <PyInit__elementtree@@Base+0x2648>
    695c:	ldr	x8, [x19, #40]
    6960:	cbz	x8, 696c <PyInit__elementtree@@Base+0x2648>
    6964:	ldr	x8, [x8, #8]
    6968:	add	x20, x8, x20
    696c:	mov	x0, x19
    6970:	mov	x1, x20
    6974:	bl	6790 <PyInit__elementtree@@Base+0x246c>
    6978:	mov	x20, x0
    697c:	b	69ac <PyInit__elementtree@@Base+0x2688>
    6980:	adrp	x10, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6984:	ldr	x10, [x10, #3952]
    6988:	cmp	x9, x10
    698c:	b.eq	69c8 <PyInit__elementtree@@Base+0x26a4>  // b.none
    6990:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6994:	ldr	x8, [x8, #3944]
    6998:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    699c:	add	x1, x1, #0x4ed
    69a0:	ldr	x0, [x8]
    69a4:	bl	3de0 <PyErr_SetString@plt>
    69a8:	mov	x20, xzr
    69ac:	mov	x0, x20
    69b0:	ldp	x20, x19, [sp, #80]
    69b4:	ldp	x22, x21, [sp, #64]
    69b8:	ldp	x24, x23, [sp, #48]
    69bc:	ldp	x29, x30, [sp, #32]
    69c0:	add	sp, sp, #0x60
    69c4:	ret
    69c8:	ldr	x9, [x19, #40]
    69cc:	cbz	x9, 6a68 <PyInit__elementtree@@Base+0x2744>
    69d0:	sub	x1, x29, #0x8
    69d4:	add	x2, sp, #0x10
    69d8:	add	x3, sp, #0x8
    69dc:	mov	x0, x8
    69e0:	bl	4130 <PySlice_Unpack@plt>
    69e4:	tbnz	w0, #31, 69a8 <PyInit__elementtree@@Base+0x2684>
    69e8:	ldr	x8, [x19, #40]
    69ec:	ldr	x3, [sp, #8]
    69f0:	sub	x1, x29, #0x8
    69f4:	add	x2, sp, #0x10
    69f8:	ldr	x0, [x8, #8]
    69fc:	bl	3f10 <PySlice_AdjustIndices@plt>
    6a00:	cmp	x0, #0x0
    6a04:	b.le	6a68 <PyInit__elementtree@@Base+0x2744>
    6a08:	mov	x21, x0
    6a0c:	bl	3c50 <PyList_New@plt>
    6a10:	mov	x20, x0
    6a14:	cbz	x0, 69ac <PyInit__elementtree@@Base+0x2688>
    6a18:	cmp	x21, #0x1
    6a1c:	b.lt	69ac <PyInit__elementtree@@Base+0x2688>  // b.tstop
    6a20:	ldur	x23, [x29, #-8]
    6a24:	mov	x24, xzr
    6a28:	ldr	x8, [x19, #40]
    6a2c:	ldr	x8, [x8, #24]
    6a30:	ldr	x22, [x8, x23, lsl #3]
    6a34:	mov	x0, x22
    6a38:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6a3c:	ldr	x8, [x20, #24]
    6a40:	str	x22, [x8, x24, lsl #3]
    6a44:	ldr	x8, [sp, #8]
    6a48:	add	x24, x24, #0x1
    6a4c:	cmp	x21, x24
    6a50:	add	x23, x8, x23
    6a54:	b.ne	6a28 <PyInit__elementtree@@Base+0x2704>  // b.any
    6a58:	b	69ac <PyInit__elementtree@@Base+0x2688>
    6a5c:	bl	3f80 <PyErr_Occurred@plt>
    6a60:	cbnz	x0, 69a8 <PyInit__elementtree@@Base+0x2684>
    6a64:	b	6958 <PyInit__elementtree@@Base+0x2634>
    6a68:	mov	x0, xzr
    6a6c:	bl	3c50 <PyList_New@plt>
    6a70:	mov	x20, x0
    6a74:	b	69ac <PyInit__elementtree@@Base+0x2688>
    6a78:	sub	sp, sp, #0x70
    6a7c:	stp	x29, x30, [sp, #16]
    6a80:	str	x27, [sp, #32]
    6a84:	stp	x26, x25, [sp, #48]
    6a88:	stp	x24, x23, [sp, #64]
    6a8c:	stp	x22, x21, [sp, #80]
    6a90:	stp	x20, x19, [sp, #96]
    6a94:	add	x29, sp, #0x10
    6a98:	ldr	x8, [x1, #8]
    6a9c:	mov	x22, x2
    6aa0:	mov	x20, x1
    6aa4:	mov	x19, x0
    6aa8:	ldr	x9, [x8, #96]
    6aac:	cbz	x9, 6b00 <PyInit__elementtree@@Base+0x27dc>
    6ab0:	ldr	x9, [x9, #264]
    6ab4:	cbz	x9, 6b00 <PyInit__elementtree@@Base+0x27dc>
    6ab8:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6abc:	ldr	x8, [x8, #3984]
    6ac0:	mov	x0, x20
    6ac4:	ldr	x1, [x8]
    6ac8:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    6acc:	mov	x20, x0
    6ad0:	cmn	x0, #0x1
    6ad4:	b.eq	6bf8 <PyInit__elementtree@@Base+0x28d4>  // b.none
    6ad8:	tbz	x20, #63, 6aec <PyInit__elementtree@@Base+0x27c8>
    6adc:	ldr	x8, [x19, #40]
    6ae0:	cbz	x8, 6aec <PyInit__elementtree@@Base+0x27c8>
    6ae4:	ldr	x8, [x8, #8]
    6ae8:	add	x20, x8, x20
    6aec:	mov	x0, x19
    6af0:	mov	x1, x20
    6af4:	mov	x2, x22
    6af8:	bl	6800 <PyInit__elementtree@@Base+0x24dc>
    6afc:	b	6b2c <PyInit__elementtree@@Base+0x2808>
    6b00:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6b04:	ldr	x9, [x9, #3952]
    6b08:	cmp	x8, x9
    6b0c:	b.eq	6b4c <PyInit__elementtree@@Base+0x2828>  // b.none
    6b10:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6b14:	ldr	x8, [x8, #3944]
    6b18:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6b1c:	add	x1, x1, #0x4ed
    6b20:	ldr	x0, [x8]
    6b24:	bl	3de0 <PyErr_SetString@plt>
    6b28:	mov	w0, #0xffffffff            	// #-1
    6b2c:	ldp	x20, x19, [sp, #96]
    6b30:	ldp	x22, x21, [sp, #80]
    6b34:	ldp	x24, x23, [sp, #64]
    6b38:	ldp	x26, x25, [sp, #48]
    6b3c:	ldr	x27, [sp, #32]
    6b40:	ldp	x29, x30, [sp, #16]
    6b44:	add	sp, sp, #0x70
    6b48:	ret
    6b4c:	ldr	x8, [x19, #40]
    6b50:	cbnz	x8, 6b64 <PyInit__elementtree@@Base+0x2840>
    6b54:	mov	x0, x19
    6b58:	mov	x1, xzr
    6b5c:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    6b60:	tbnz	w0, #31, 6b28 <PyInit__elementtree@@Base+0x2804>
    6b64:	add	x1, x29, #0x18
    6b68:	add	x2, sp, #0x8
    6b6c:	mov	x3, sp
    6b70:	mov	x0, x20
    6b74:	bl	4130 <PySlice_Unpack@plt>
    6b78:	tbnz	w0, #31, 6b28 <PyInit__elementtree@@Base+0x2804>
    6b7c:	ldr	x8, [x19, #40]
    6b80:	ldr	x3, [sp]
    6b84:	add	x1, x29, #0x18
    6b88:	add	x2, sp, #0x8
    6b8c:	ldr	x0, [x8, #8]
    6b90:	bl	3f10 <PySlice_AdjustIndices@plt>
    6b94:	mov	x20, x0
    6b98:	cbz	x22, 6c04 <PyInit__elementtree@@Base+0x28e0>
    6b9c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6ba0:	add	x1, x1, #0x52d
    6ba4:	mov	x0, x22
    6ba8:	bl	4240 <PySequence_Fast@plt>
    6bac:	cbz	x0, 6d14 <PyInit__elementtree@@Base+0x29f0>
    6bb0:	ldr	x22, [x0, #16]
    6bb4:	mov	x21, x0
    6bb8:	cmp	x22, x20
    6bbc:	b.eq	6d38 <PyInit__elementtree@@Base+0x2a14>  // b.none
    6bc0:	ldr	x8, [sp]
    6bc4:	cmp	x8, #0x1
    6bc8:	b.eq	6d38 <PyInit__elementtree@@Base+0x2a14>  // b.none
    6bcc:	mov	x0, x21
    6bd0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6bd4:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6bd8:	ldr	x8, [x8, #3928]
    6bdc:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6be0:	add	x1, x1, #0x52e
    6be4:	mov	x2, x22
    6be8:	ldr	x0, [x8]
    6bec:	mov	x3, x20
    6bf0:	bl	4180 <PyErr_Format@plt>
    6bf4:	b	6b28 <PyInit__elementtree@@Base+0x2804>
    6bf8:	bl	3f80 <PyErr_Occurred@plt>
    6bfc:	cbnz	x0, 6b28 <PyInit__elementtree@@Base+0x2804>
    6c00:	b	6ad8 <PyInit__elementtree@@Base+0x27b4>
    6c04:	subs	x8, x20, #0x1
    6c08:	b.lt	6f48 <PyInit__elementtree@@Base+0x2c24>  // b.tstop
    6c0c:	ldr	x9, [sp]
    6c10:	tbz	x9, #63, 6c2c <PyInit__elementtree@@Base+0x2908>
    6c14:	ldr	x10, [x29, #24]
    6c18:	neg	x11, x9
    6c1c:	add	x12, x10, #0x1
    6c20:	madd	x8, x9, x8, x10
    6c24:	stp	x11, x12, [sp]
    6c28:	str	x8, [x29, #24]
    6c2c:	mov	x0, x20
    6c30:	bl	3c50 <PyList_New@plt>
    6c34:	cbz	x0, 6b28 <PyInit__elementtree@@Base+0x2804>
    6c38:	ldr	x22, [x29, #24]
    6c3c:	ldr	x8, [sp, #8]
    6c40:	mov	x21, x0
    6c44:	cmp	x22, x8
    6c48:	b.cs	6cc0 <PyInit__elementtree@@Base+0x299c>  // b.hs, b.nlast
    6c4c:	mov	x23, xzr
    6c50:	mov	x24, xzr
    6c54:	ldr	x8, [x19, #40]
    6c58:	lsl	x10, x22, #3
    6c5c:	ldr	x11, [x21, #24]
    6c60:	ldr	x12, [sp]
    6c64:	ldr	x9, [x8, #24]
    6c68:	ldr	x8, [x8, #8]
    6c6c:	ldr	x9, [x9, x10]
    6c70:	str	x9, [x11, x24]
    6c74:	ldr	x9, [x19, #40]
    6c78:	add	x11, x12, x22
    6c7c:	cmp	x11, x8
    6c80:	mvn	x11, x22
    6c84:	ldr	x9, [x9, #24]
    6c88:	sub	x12, x12, #0x1
    6c8c:	add	x8, x8, x11
    6c90:	csel	x8, x12, x8, cc  // cc = lo, ul, last
    6c94:	add	x9, x9, x10
    6c98:	add	x0, x9, x23
    6c9c:	add	x1, x9, #0x8
    6ca0:	lsl	x2, x8, #3
    6ca4:	bl	3c40 <memmove@plt>
    6ca8:	ldp	x8, x9, [sp]
    6cac:	add	x24, x24, #0x8
    6cb0:	sub	x23, x23, #0x8
    6cb4:	add	x22, x8, x22
    6cb8:	cmp	x22, x9
    6cbc:	b.cc	6c54 <PyInit__elementtree@@Base+0x2930>  // b.lo, b.ul, b.last
    6cc0:	ldr	x9, [x19, #40]
    6cc4:	ldr	x8, [x29, #24]
    6cc8:	ldr	x10, [sp]
    6ccc:	ldr	x11, [x9, #8]
    6cd0:	madd	x10, x10, x20, x8
    6cd4:	subs	x8, x11, x10
    6cd8:	b.ls	6cf4 <PyInit__elementtree@@Base+0x29d0>  // b.plast
    6cdc:	ldr	x9, [x9, #24]
    6ce0:	neg	x11, x20
    6ce4:	lsl	x2, x8, #3
    6ce8:	add	x1, x9, x10, lsl #3
    6cec:	add	x0, x1, x11, lsl #3
    6cf0:	bl	3c40 <memmove@plt>
    6cf4:	ldr	x8, [x19, #40]
    6cf8:	mov	x0, x21
    6cfc:	ldr	x9, [x8, #8]
    6d00:	sub	x9, x9, x20
    6d04:	str	x9, [x8, #8]
    6d08:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6d0c:	mov	w0, wzr
    6d10:	b	6b2c <PyInit__elementtree@@Base+0x2808>
    6d14:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    6d18:	ldr	x8, [x22, #8]
    6d1c:	ldr	x9, [x9, #3944]
    6d20:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    6d24:	add	x1, x1, #0x50e
    6d28:	ldr	x2, [x8, #24]
    6d2c:	ldr	x0, [x9]
    6d30:	bl	4180 <PyErr_Format@plt>
    6d34:	b	6b28 <PyInit__elementtree@@Base+0x2804>
    6d38:	subs	x1, x22, x20
    6d3c:	b.le	6d4c <PyInit__elementtree@@Base+0x2a28>
    6d40:	mov	x0, x19
    6d44:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    6d48:	tbnz	w0, #31, 6e18 <PyInit__elementtree@@Base+0x2af4>
    6d4c:	cmp	x22, #0x1
    6d50:	b.lt	6dbc <PyInit__elementtree@@Base+0x2a98>  // b.tstop
    6d54:	adrp	x23, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    6d58:	mov	x25, xzr
    6d5c:	add	x26, x21, #0x18
    6d60:	add	x23, x23, #0x6c8
    6d64:	mov	x27, x22
    6d68:	b	6d7c <PyInit__elementtree@@Base+0x2a58>
    6d6c:	add	x25, x25, #0x1
    6d70:	subs	x27, x27, #0x1
    6d74:	add	x26, x26, #0x8
    6d78:	b.eq	6dbc <PyInit__elementtree@@Base+0x2a98>  // b.none
    6d7c:	ldr	x8, [x21, #8]
    6d80:	ldrb	w9, [x8, #171]
    6d84:	mov	x8, x26
    6d88:	tbz	w9, #1, 6d94 <PyInit__elementtree@@Base+0x2a70>
    6d8c:	ldr	x8, [x21, #24]
    6d90:	add	x8, x8, x25, lsl #3
    6d94:	ldr	x24, [x8]
    6d98:	ldr	x0, [x24, #8]
    6d9c:	cmp	x0, x23
    6da0:	b.eq	6d6c <PyInit__elementtree@@Base+0x2a48>  // b.none
    6da4:	mov	x1, x23
    6da8:	bl	4160 <PyType_IsSubtype@plt>
    6dac:	cbnz	w0, 6d6c <PyInit__elementtree@@Base+0x2a48>
    6db0:	mov	x0, x24
    6db4:	bl	4af0 <PyInit__elementtree@@Base+0x7cc>
    6db8:	b	6e18 <PyInit__elementtree@@Base+0x2af4>
    6dbc:	cmp	x20, #0x1
    6dc0:	b.lt	6e24 <PyInit__elementtree@@Base+0x2b00>  // b.tstop
    6dc4:	mov	x0, x20
    6dc8:	bl	3c50 <PyList_New@plt>
    6dcc:	cbz	x0, 6e18 <PyInit__elementtree@@Base+0x2af4>
    6dd0:	mov	x23, x0
    6dd4:	cmp	x20, #0x1
    6dd8:	b.lt	6e28 <PyInit__elementtree@@Base+0x2b04>  // b.tstop
    6ddc:	ldr	x9, [x29, #24]
    6de0:	ldr	x10, [sp]
    6de4:	mov	x8, xzr
    6de8:	lsl	x9, x9, #3
    6dec:	lsl	x10, x10, #3
    6df0:	ldr	x11, [x19, #40]
    6df4:	ldr	x12, [x23, #24]
    6df8:	ldr	x11, [x11, #24]
    6dfc:	ldr	x11, [x11, x9]
    6e00:	add	x9, x9, x10
    6e04:	str	x11, [x12, x8, lsl #3]
    6e08:	add	x8, x8, #0x1
    6e0c:	cmp	x20, x8
    6e10:	b.ne	6df0 <PyInit__elementtree@@Base+0x2acc>  // b.any
    6e14:	b	6e28 <PyInit__elementtree@@Base+0x2b04>
    6e18:	mov	x0, x21
    6e1c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6e20:	b	6b28 <PyInit__elementtree@@Base+0x2804>
    6e24:	mov	x23, xzr
    6e28:	subs	x24, x22, x20
    6e2c:	b.ge	6e78 <PyInit__elementtree@@Base+0x2b54>  // b.tcont
    6e30:	ldr	x9, [x19, #40]
    6e34:	ldr	x8, [sp, #8]
    6e38:	ldr	x10, [x9, #8]
    6e3c:	cmp	x8, x10
    6e40:	b.ge	6ec4 <PyInit__elementtree@@Base+0x2ba0>  // b.tcont
    6e44:	lsl	x10, x22, #3
    6e48:	sub	x10, x10, x20, lsl #3
    6e4c:	ldr	x9, [x9, #24]
    6e50:	lsl	x11, x8, #3
    6e54:	add	x8, x8, #0x1
    6e58:	ldr	x12, [x9, x11]
    6e5c:	add	x9, x9, x10
    6e60:	str	x12, [x9, x11]
    6e64:	ldr	x9, [x19, #40]
    6e68:	ldr	x11, [x9, #8]
    6e6c:	cmp	x8, x11
    6e70:	b.lt	6e4c <PyInit__elementtree@@Base+0x2b28>  // b.tstop
    6e74:	b	6ec4 <PyInit__elementtree@@Base+0x2ba0>
    6e78:	b.le	6ec4 <PyInit__elementtree@@Base+0x2ba0>
    6e7c:	ldr	x8, [x19, #40]
    6e80:	ldr	x9, [sp, #8]
    6e84:	ldr	x8, [x8, #8]
    6e88:	sub	x8, x8, #0x1
    6e8c:	cmp	x8, x9
    6e90:	b.lt	6ec4 <PyInit__elementtree@@Base+0x2ba0>  // b.tstop
    6e94:	ldr	x9, [sp, #8]
    6e98:	lsl	x10, x22, #3
    6e9c:	sub	x10, x10, x20, lsl #3
    6ea0:	ldr	x11, [x19, #40]
    6ea4:	lsl	x12, x8, #3
    6ea8:	sub	x8, x8, #0x1
    6eac:	cmp	x8, x9
    6eb0:	ldr	x11, [x11, #24]
    6eb4:	ldr	x13, [x11, x12]
    6eb8:	add	x11, x11, x10
    6ebc:	str	x13, [x11, x12]
    6ec0:	b.ge	6ea0 <PyInit__elementtree@@Base+0x2b7c>  // b.tcont
    6ec4:	cmp	x22, #0x1
    6ec8:	b.lt	6f28 <PyInit__elementtree@@Base+0x2c04>  // b.tstop
    6ecc:	ldr	x26, [x29, #24]
    6ed0:	mov	x25, xzr
    6ed4:	add	x27, x21, #0x18
    6ed8:	b	6f0c <PyInit__elementtree@@Base+0x2be8>
    6edc:	ldr	x20, [x8]
    6ee0:	mov	x0, x20
    6ee4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    6ee8:	ldr	x8, [x19, #40]
    6eec:	add	x25, x25, #0x1
    6ef0:	subs	x22, x22, #0x1
    6ef4:	add	x27, x27, #0x8
    6ef8:	ldr	x8, [x8, #24]
    6efc:	str	x20, [x8, x26, lsl #3]
    6f00:	ldr	x8, [sp]
    6f04:	add	x26, x8, x26
    6f08:	b.eq	6f28 <PyInit__elementtree@@Base+0x2c04>  // b.none
    6f0c:	ldr	x8, [x21, #8]
    6f10:	ldrb	w9, [x8, #171]
    6f14:	mov	x8, x27
    6f18:	tbz	w9, #1, 6edc <PyInit__elementtree@@Base+0x2bb8>
    6f1c:	ldr	x8, [x21, #24]
    6f20:	add	x8, x8, x25, lsl #3
    6f24:	b	6edc <PyInit__elementtree@@Base+0x2bb8>
    6f28:	ldr	x8, [x19, #40]
    6f2c:	mov	x0, x21
    6f30:	ldr	x9, [x8, #8]
    6f34:	add	x9, x24, x9
    6f38:	str	x9, [x8, #8]
    6f3c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6f40:	mov	x0, x23
    6f44:	bl	4548 <PyInit__elementtree@@Base+0x224>
    6f48:	mov	w0, wzr
    6f4c:	b	6b2c <PyInit__elementtree@@Base+0x2808>
    6f50:	stp	x29, x30, [sp, #-16]!
    6f54:	mov	x29, sp
    6f58:	ldr	x8, [x0]
    6f5c:	cbz	x8, 6f68 <PyInit__elementtree@@Base+0x2c44>
    6f60:	mov	x1, xzr
    6f64:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    6f68:	ldp	x29, x30, [sp], #16
    6f6c:	ret
    6f70:	stp	x29, x30, [sp, #-16]!
    6f74:	mov	x29, sp
    6f78:	mov	x8, x0
    6f7c:	ldr	x0, [x0, #40]
    6f80:	cbz	x0, 6f8c <PyInit__elementtree@@Base+0x2c68>
    6f84:	str	xzr, [x8, #40]
    6f88:	bl	6fb4 <PyInit__elementtree@@Base+0x2c90>
    6f8c:	ldp	x29, x30, [sp], #16
    6f90:	ret
    6f94:	stp	x29, x30, [sp, #-16]!
    6f98:	mov	x29, sp
    6f9c:	ldr	x8, [x0]
    6fa0:	str	x1, [x0]
    6fa4:	and	x0, x8, #0xfffffffffffffffe
    6fa8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6fac:	ldp	x29, x30, [sp], #16
    6fb0:	ret
    6fb4:	cbz	x0, 7020 <PyInit__elementtree@@Base+0x2cfc>
    6fb8:	stp	x29, x30, [sp, #-32]!
    6fbc:	stp	x20, x19, [sp, #16]
    6fc0:	mov	x29, sp
    6fc4:	mov	x19, x0
    6fc8:	ldr	x0, [x0]
    6fcc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6fd0:	ldr	x8, [x19, #8]
    6fd4:	ldr	x0, [x19, #24]
    6fd8:	cmp	x8, #0x1
    6fdc:	b.lt	7000 <PyInit__elementtree@@Base+0x2cdc>  // b.tstop
    6fe0:	mov	x20, xzr
    6fe4:	ldr	x0, [x0, x20, lsl #3]
    6fe8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    6fec:	ldr	x8, [x19, #8]
    6ff0:	ldr	x0, [x19, #24]
    6ff4:	add	x20, x20, #0x1
    6ff8:	cmp	x20, x8
    6ffc:	b.lt	6fe4 <PyInit__elementtree@@Base+0x2cc0>  // b.tstop
    7000:	add	x8, x19, #0x20
    7004:	cmp	x0, x8
    7008:	b.eq	7010 <PyInit__elementtree@@Base+0x2cec>  // b.none
    700c:	bl	3e60 <PyObject_Free@plt>
    7010:	mov	x0, x19
    7014:	bl	3e60 <PyObject_Free@plt>
    7018:	ldp	x20, x19, [sp, #16]
    701c:	ldp	x29, x30, [sp], #32
    7020:	ret
    7024:	stp	x29, x30, [sp, #-16]!
    7028:	mov	x29, sp
    702c:	bl	7ae0 <PyInit__elementtree@@Base+0x37bc>
    7030:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7034:	ldr	x0, [x0, #3976]
    7038:	ldp	x29, x30, [sp], #16
    703c:	ret
    7040:	sub	sp, sp, #0x50
    7044:	stp	x29, x30, [sp, #32]
    7048:	str	x21, [sp, #48]
    704c:	stp	x20, x19, [sp, #64]
    7050:	add	x29, sp, #0x20
    7054:	mov	x20, x2
    7058:	mov	x19, x0
    705c:	cbz	x3, 706c <PyInit__elementtree@@Base+0x2d48>
    7060:	ldr	x21, [x3, #16]
    7064:	cbnz	x1, 7074 <PyInit__elementtree@@Base+0x2d50>
    7068:	b	70a4 <PyInit__elementtree@@Base+0x2d80>
    706c:	mov	x21, xzr
    7070:	cbz	x1, 70a4 <PyInit__elementtree@@Base+0x2d80>
    7074:	sub	x8, x20, #0x1
    7078:	cmp	x8, #0x1
    707c:	b.hi	70a4 <PyInit__elementtree@@Base+0x2d80>  // b.pmore
    7080:	cbnz	x3, 70a4 <PyInit__elementtree@@Base+0x2d80>
    7084:	cbz	x1, 70d8 <PyInit__elementtree@@Base+0x2db4>
    7088:	ldr	x8, [x1]
    708c:	add	x9, x21, x20
    7090:	cmp	x9, #0x1
    7094:	b.ne	70e0 <PyInit__elementtree@@Base+0x2dbc>  // b.any
    7098:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    709c:	ldr	x2, [x2, #3976]
    70a0:	b	70e4 <PyInit__elementtree@@Base+0x2dc0>
    70a4:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    70a8:	add	x8, sp, #0x10
    70ac:	add	x4, x4, #0x0
    70b0:	mov	w5, #0x1                   	// #1
    70b4:	mov	w6, #0x2                   	// #2
    70b8:	mov	x0, x1
    70bc:	mov	x1, x20
    70c0:	mov	x2, xzr
    70c4:	mov	w7, wzr
    70c8:	str	x8, [sp]
    70cc:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    70d0:	mov	x1, x0
    70d4:	cbnz	x1, 7088 <PyInit__elementtree@@Base+0x2d64>
    70d8:	mov	x0, xzr
    70dc:	b	70f0 <PyInit__elementtree@@Base+0x2dcc>
    70e0:	ldr	x2, [x1, #8]
    70e4:	mov	x0, x19
    70e8:	mov	x1, x8
    70ec:	bl	7b38 <PyInit__elementtree@@Base+0x3814>
    70f0:	ldp	x20, x19, [sp, #64]
    70f4:	ldr	x21, [sp, #48]
    70f8:	ldp	x29, x30, [sp, #32]
    70fc:	add	sp, sp, #0x50
    7100:	ret
    7104:	stp	x29, x30, [sp, #-32]!
    7108:	stp	x20, x19, [sp, #16]
    710c:	mov	x29, sp
    7110:	mov	x19, x1
    7114:	cmp	x2, #0x2
    7118:	mov	x20, x0
    711c:	b.eq	7140 <PyInit__elementtree@@Base+0x2e1c>  // b.none
    7120:	mov	x8, x2
    7124:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    7128:	add	x0, x0, #0x579
    712c:	mov	w2, #0x2                   	// #2
    7130:	mov	w3, #0x2                   	// #2
    7134:	mov	x1, x8
    7138:	bl	3f60 <_PyArg_CheckPositional@plt>
    713c:	cbz	w0, 7150 <PyInit__elementtree@@Base+0x2e2c>
    7140:	ldp	x1, x2, [x19]
    7144:	mov	x0, x20
    7148:	bl	7ba0 <PyInit__elementtree@@Base+0x387c>
    714c:	b	7154 <PyInit__elementtree@@Base+0x2e30>
    7150:	mov	x0, xzr
    7154:	ldp	x20, x19, [sp, #16]
    7158:	ldp	x29, x30, [sp], #32
    715c:	ret
    7160:	sub	sp, sp, #0x50
    7164:	stp	x29, x30, [sp, #32]
    7168:	str	x21, [sp, #48]
    716c:	stp	x20, x19, [sp, #64]
    7170:	add	x29, sp, #0x20
    7174:	mov	x20, x2
    7178:	mov	x19, x0
    717c:	cbz	x3, 718c <PyInit__elementtree@@Base+0x2e68>
    7180:	ldr	x21, [x3, #16]
    7184:	cbnz	x1, 7194 <PyInit__elementtree@@Base+0x2e70>
    7188:	b	71c4 <PyInit__elementtree@@Base+0x2ea0>
    718c:	mov	x21, xzr
    7190:	cbz	x1, 71c4 <PyInit__elementtree@@Base+0x2ea0>
    7194:	sub	x8, x20, #0x1
    7198:	cmp	x8, #0x1
    719c:	b.hi	71c4 <PyInit__elementtree@@Base+0x2ea0>  // b.pmore
    71a0:	cbnz	x3, 71c4 <PyInit__elementtree@@Base+0x2ea0>
    71a4:	cbz	x1, 71f8 <PyInit__elementtree@@Base+0x2ed4>
    71a8:	ldr	x8, [x1]
    71ac:	add	x9, x21, x20
    71b0:	cmp	x9, #0x1
    71b4:	b.ne	7200 <PyInit__elementtree@@Base+0x2edc>  // b.any
    71b8:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    71bc:	ldr	x2, [x2, #3976]
    71c0:	b	7204 <PyInit__elementtree@@Base+0x2ee0>
    71c4:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    71c8:	add	x8, sp, #0x10
    71cc:	add	x4, x4, #0x40
    71d0:	mov	w5, #0x1                   	// #1
    71d4:	mov	w6, #0x2                   	// #2
    71d8:	mov	x0, x1
    71dc:	mov	x1, x20
    71e0:	mov	x2, xzr
    71e4:	mov	w7, wzr
    71e8:	str	x8, [sp]
    71ec:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    71f0:	mov	x1, x0
    71f4:	cbnz	x1, 71a8 <PyInit__elementtree@@Base+0x2e84>
    71f8:	mov	x0, xzr
    71fc:	b	7210 <PyInit__elementtree@@Base+0x2eec>
    7200:	ldr	x2, [x1, #8]
    7204:	mov	x0, x19
    7208:	mov	x1, x8
    720c:	bl	7c74 <PyInit__elementtree@@Base+0x3950>
    7210:	ldp	x20, x19, [sp, #64]
    7214:	ldr	x21, [sp, #48]
    7218:	ldp	x29, x30, [sp, #32]
    721c:	add	sp, sp, #0x50
    7220:	ret
    7224:	sub	sp, sp, #0x50
    7228:	stp	x29, x30, [sp, #32]
    722c:	str	x21, [sp, #48]
    7230:	stp	x20, x19, [sp, #64]
    7234:	add	x29, sp, #0x20
    7238:	mov	x20, x2
    723c:	mov	x19, x0
    7240:	cbz	x3, 7250 <PyInit__elementtree@@Base+0x2f2c>
    7244:	ldr	x21, [x3, #16]
    7248:	cbnz	x1, 7258 <PyInit__elementtree@@Base+0x2f34>
    724c:	b	728c <PyInit__elementtree@@Base+0x2f68>
    7250:	mov	x21, xzr
    7254:	cbz	x1, 728c <PyInit__elementtree@@Base+0x2f68>
    7258:	sub	x8, x20, #0x1
    725c:	cmp	x8, #0x2
    7260:	b.hi	728c <PyInit__elementtree@@Base+0x2f68>  // b.pmore
    7264:	cbnz	x3, 728c <PyInit__elementtree@@Base+0x2f68>
    7268:	cbz	x1, 72c0 <PyInit__elementtree@@Base+0x2f9c>
    726c:	ldr	x8, [x1]
    7270:	add	x9, x21, x20
    7274:	cmp	x9, #0x1
    7278:	b.ne	72c8 <PyInit__elementtree@@Base+0x2fa4>  // b.any
    727c:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7280:	ldr	x2, [x2, #3976]
    7284:	mov	x3, x2
    7288:	b	72f0 <PyInit__elementtree@@Base+0x2fcc>
    728c:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7290:	add	x8, sp, #0x8
    7294:	add	x4, x4, #0x98
    7298:	mov	w5, #0x1                   	// #1
    729c:	mov	w6, #0x3                   	// #3
    72a0:	mov	x0, x1
    72a4:	mov	x1, x20
    72a8:	mov	x2, xzr
    72ac:	mov	w7, wzr
    72b0:	str	x8, [sp]
    72b4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    72b8:	mov	x1, x0
    72bc:	cbnz	x1, 726c <PyInit__elementtree@@Base+0x2f48>
    72c0:	mov	x0, xzr
    72c4:	b	72fc <PyInit__elementtree@@Base+0x2fd8>
    72c8:	ldr	x2, [x1, #8]
    72cc:	cbz	x2, 72e4 <PyInit__elementtree@@Base+0x2fc0>
    72d0:	cmp	x9, #0x2
    72d4:	b.ne	72ec <PyInit__elementtree@@Base+0x2fc8>  // b.any
    72d8:	adrp	x3, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    72dc:	ldr	x3, [x3, #3976]
    72e0:	b	72f0 <PyInit__elementtree@@Base+0x2fcc>
    72e4:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    72e8:	ldr	x2, [x2, #3976]
    72ec:	ldr	x3, [x1, #16]
    72f0:	mov	x0, x19
    72f4:	mov	x1, x8
    72f8:	bl	801c <PyInit__elementtree@@Base+0x3cf8>
    72fc:	ldp	x20, x19, [sp, #64]
    7300:	ldr	x21, [sp, #48]
    7304:	ldp	x29, x30, [sp, #32]
    7308:	add	sp, sp, #0x50
    730c:	ret
    7310:	sub	sp, sp, #0x50
    7314:	stp	x29, x30, [sp, #32]
    7318:	str	x21, [sp, #48]
    731c:	stp	x20, x19, [sp, #64]
    7320:	add	x29, sp, #0x20
    7324:	mov	x20, x2
    7328:	mov	x19, x0
    732c:	cbz	x3, 733c <PyInit__elementtree@@Base+0x3018>
    7330:	ldr	x21, [x3, #16]
    7334:	cbnz	x1, 7344 <PyInit__elementtree@@Base+0x3020>
    7338:	b	7374 <PyInit__elementtree@@Base+0x3050>
    733c:	mov	x21, xzr
    7340:	cbz	x1, 7374 <PyInit__elementtree@@Base+0x3050>
    7344:	sub	x8, x20, #0x1
    7348:	cmp	x8, #0x1
    734c:	b.hi	7374 <PyInit__elementtree@@Base+0x3050>  // b.pmore
    7350:	cbnz	x3, 7374 <PyInit__elementtree@@Base+0x3050>
    7354:	cbz	x1, 73a8 <PyInit__elementtree@@Base+0x3084>
    7358:	ldr	x8, [x1]
    735c:	add	x9, x21, x20
    7360:	cmp	x9, #0x1
    7364:	b.ne	73b0 <PyInit__elementtree@@Base+0x308c>  // b.any
    7368:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    736c:	ldr	x2, [x2, #3976]
    7370:	b	73b4 <PyInit__elementtree@@Base+0x3090>
    7374:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7378:	add	x8, sp, #0x10
    737c:	add	x4, x4, #0xf0
    7380:	mov	w5, #0x1                   	// #1
    7384:	mov	w6, #0x2                   	// #2
    7388:	mov	x0, x1
    738c:	mov	x1, x20
    7390:	mov	x2, xzr
    7394:	mov	w7, wzr
    7398:	str	x8, [sp]
    739c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    73a0:	mov	x1, x0
    73a4:	cbnz	x1, 7358 <PyInit__elementtree@@Base+0x3034>
    73a8:	mov	x0, xzr
    73ac:	b	73c0 <PyInit__elementtree@@Base+0x309c>
    73b0:	ldr	x2, [x1, #8]
    73b4:	mov	x0, x19
    73b8:	mov	x1, x8
    73bc:	bl	81a8 <PyInit__elementtree@@Base+0x3e84>
    73c0:	ldp	x20, x19, [sp, #64]
    73c4:	ldr	x21, [sp, #48]
    73c8:	ldp	x29, x30, [sp, #32]
    73cc:	add	sp, sp, #0x50
    73d0:	ret
    73d4:	stp	x29, x30, [sp, #-32]!
    73d8:	stp	x20, x19, [sp, #16]
    73dc:	mov	x29, sp
    73e0:	ldr	x8, [x1, #8]
    73e4:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    73e8:	add	x9, x9, #0x6c8
    73ec:	mov	x19, x1
    73f0:	cmp	x8, x9
    73f4:	mov	x20, x0
    73f8:	b.eq	7410 <PyInit__elementtree@@Base+0x30ec>  // b.none
    73fc:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7400:	add	x1, x1, #0x6c8
    7404:	mov	x0, x8
    7408:	bl	4160 <PyType_IsSubtype@plt>
    740c:	cbz	w0, 7420 <PyInit__elementtree@@Base+0x30fc>
    7410:	mov	x0, x20
    7414:	mov	x1, x19
    7418:	bl	82d0 <PyInit__elementtree@@Base+0x3fac>
    741c:	b	7444 <PyInit__elementtree@@Base+0x3120>
    7420:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7424:	ldr	x2, [x8, #1760]
    7428:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    742c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    7430:	add	x0, x0, #0x3eb
    7434:	add	x1, x1, #0x640
    7438:	mov	x3, x19
    743c:	bl	3ed0 <_PyArg_BadArgument@plt>
    7440:	mov	x0, xzr
    7444:	ldp	x20, x19, [sp, #16]
    7448:	ldp	x29, x30, [sp], #32
    744c:	ret
    7450:	stp	x29, x30, [sp, #-64]!
    7454:	str	x23, [sp, #16]
    7458:	stp	x22, x21, [sp, #32]
    745c:	stp	x20, x19, [sp, #48]
    7460:	mov	x29, sp
    7464:	mov	x21, x1
    7468:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    746c:	mov	x19, x0
    7470:	add	x1, x1, #0x52d
    7474:	mov	x0, x21
    7478:	bl	4240 <PySequence_Fast@plt>
    747c:	cbz	x0, 7504 <PyInit__elementtree@@Base+0x31e0>
    7480:	ldr	x8, [x0, #16]
    7484:	mov	x20, x0
    7488:	cmp	x8, #0x1
    748c:	b.lt	74e8 <PyInit__elementtree@@Base+0x31c4>  // b.tstop
    7490:	mov	x22, xzr
    7494:	add	x23, x20, #0x18
    7498:	ldr	x8, [x20, #8]
    749c:	ldrb	w9, [x8, #171]
    74a0:	mov	x8, x23
    74a4:	tbz	w9, #1, 74b0 <PyInit__elementtree@@Base+0x318c>
    74a8:	ldr	x8, [x20, #24]
    74ac:	add	x8, x8, x22, lsl #3
    74b0:	ldr	x21, [x8]
    74b4:	mov	x0, x21
    74b8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    74bc:	mov	x0, x19
    74c0:	mov	x1, x21
    74c4:	bl	49c4 <PyInit__elementtree@@Base+0x6a0>
    74c8:	tbnz	w0, #31, 7528 <PyInit__elementtree@@Base+0x3204>
    74cc:	mov	x0, x21
    74d0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    74d4:	ldr	x8, [x20, #16]
    74d8:	add	x22, x22, #0x1
    74dc:	add	x23, x23, #0x8
    74e0:	cmp	x22, x8
    74e4:	b.lt	7498 <PyInit__elementtree@@Base+0x3174>  // b.tstop
    74e8:	mov	x0, x20
    74ec:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    74f0:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    74f4:	ldr	x19, [x19, #3976]
    74f8:	mov	x0, x19
    74fc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7500:	b	753c <PyInit__elementtree@@Base+0x3218>
    7504:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7508:	ldr	x8, [x21, #8]
    750c:	ldr	x9, [x9, #3944]
    7510:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    7514:	add	x1, x1, #0x50e
    7518:	ldr	x2, [x8, #24]
    751c:	ldr	x0, [x9]
    7520:	bl	4180 <PyErr_Format@plt>
    7524:	b	7538 <PyInit__elementtree@@Base+0x3214>
    7528:	mov	x0, x20
    752c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    7530:	mov	x0, x21
    7534:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    7538:	mov	x19, xzr
    753c:	mov	x0, x19
    7540:	ldp	x20, x19, [sp, #48]
    7544:	ldp	x22, x21, [sp, #32]
    7548:	ldr	x23, [sp, #16]
    754c:	ldp	x29, x30, [sp], #64
    7550:	ret
    7554:	stp	x29, x30, [sp, #-48]!
    7558:	stp	x22, x21, [sp, #16]
    755c:	stp	x20, x19, [sp, #32]
    7560:	mov	x29, sp
    7564:	mov	x19, x1
    7568:	cmp	x2, #0x2
    756c:	mov	x20, x0
    7570:	b.eq	7594 <PyInit__elementtree@@Base+0x3270>  // b.none
    7574:	mov	x8, x2
    7578:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    757c:	add	x0, x0, #0x595
    7580:	mov	w2, #0x2                   	// #2
    7584:	mov	w3, #0x2                   	// #2
    7588:	mov	x1, x8
    758c:	bl	3f60 <_PyArg_CheckPositional@plt>
    7590:	cbz	w0, 75d4 <PyInit__elementtree@@Base+0x32b0>
    7594:	ldr	x8, [x19]
    7598:	ldr	x0, [x8, #8]
    759c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    75a0:	ldr	x8, [x8, #3896]
    75a4:	cmp	x0, x8
    75a8:	b.eq	75bc <PyInit__elementtree@@Base+0x3298>  // b.none
    75ac:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    75b0:	ldr	x1, [x1, #3896]
    75b4:	bl	4160 <PyType_IsSubtype@plt>
    75b8:	cbz	w0, 75e8 <PyInit__elementtree@@Base+0x32c4>
    75bc:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    75c0:	ldr	x8, [x8, #3944]
    75c4:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    75c8:	add	x1, x1, #0x649
    75cc:	ldr	x0, [x8]
    75d0:	bl	3de0 <PyErr_SetString@plt>
    75d4:	mov	x0, xzr
    75d8:	ldp	x20, x19, [sp, #32]
    75dc:	ldp	x22, x21, [sp, #16]
    75e0:	ldp	x29, x30, [sp], #48
    75e4:	ret
    75e8:	ldr	x0, [x19]
    75ec:	bl	41e0 <PyNumber_Index@plt>
    75f0:	cbz	x0, 7614 <PyInit__elementtree@@Base+0x32f0>
    75f4:	mov	x22, x0
    75f8:	bl	3eb0 <PyLong_AsSsize_t@plt>
    75fc:	mov	x21, x0
    7600:	mov	x0, x22
    7604:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    7608:	cmn	x21, #0x1
    760c:	b.ne	7628 <PyInit__elementtree@@Base+0x3304>  // b.any
    7610:	b	7620 <PyInit__elementtree@@Base+0x32fc>
    7614:	mov	x21, #0xffffffffffffffff    	// #-1
    7618:	cmn	x21, #0x1
    761c:	b.ne	7628 <PyInit__elementtree@@Base+0x3304>  // b.any
    7620:	bl	3f80 <PyErr_Occurred@plt>
    7624:	cbnz	x0, 75d4 <PyInit__elementtree@@Base+0x32b0>
    7628:	ldr	x8, [x19, #8]
    762c:	ldr	x0, [x8, #8]
    7630:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7634:	add	x8, x8, #0x6c8
    7638:	cmp	x0, x8
    763c:	b.eq	7650 <PyInit__elementtree@@Base+0x332c>  // b.none
    7640:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7644:	add	x1, x1, #0x6c8
    7648:	bl	4160 <PyType_IsSubtype@plt>
    764c:	cbz	w0, 7664 <PyInit__elementtree@@Base+0x3340>
    7650:	ldr	x2, [x19, #8]
    7654:	mov	x0, x20
    7658:	mov	x1, x21
    765c:	bl	830c <PyInit__elementtree@@Base+0x3fe8>
    7660:	b	75d8 <PyInit__elementtree@@Base+0x32b4>
    7664:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7668:	ldr	x2, [x8, #1760]
    766c:	ldr	x3, [x19, #8]
    7670:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    7674:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    7678:	add	x0, x0, #0x595
    767c:	add	x1, x1, #0x66e
    7680:	bl	3ed0 <_PyArg_BadArgument@plt>
    7684:	b	75d4 <PyInit__elementtree@@Base+0x32b0>
    7688:	stp	x29, x30, [sp, #-32]!
    768c:	stp	x20, x19, [sp, #16]
    7690:	mov	x29, sp
    7694:	ldr	x8, [x1, #8]
    7698:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    769c:	add	x9, x9, #0x6c8
    76a0:	mov	x19, x1
    76a4:	cmp	x8, x9
    76a8:	mov	x20, x0
    76ac:	b.eq	76c4 <PyInit__elementtree@@Base+0x33a0>  // b.none
    76b0:	adrp	x1, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    76b4:	add	x1, x1, #0x6c8
    76b8:	mov	x0, x8
    76bc:	bl	4160 <PyType_IsSubtype@plt>
    76c0:	cbz	w0, 76d4 <PyInit__elementtree@@Base+0x33b0>
    76c4:	mov	x0, x20
    76c8:	mov	x1, x19
    76cc:	bl	83f4 <PyInit__elementtree@@Base+0x40d0>
    76d0:	b	76f8 <PyInit__elementtree@@Base+0x33d4>
    76d4:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    76d8:	ldr	x2, [x8, #1760]
    76dc:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    76e0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    76e4:	add	x0, x0, #0x59c
    76e8:	add	x1, x1, #0x640
    76ec:	mov	x3, x19
    76f0:	bl	3ed0 <_PyArg_BadArgument@plt>
    76f4:	mov	x0, xzr
    76f8:	ldp	x20, x19, [sp, #16]
    76fc:	ldp	x29, x30, [sp], #32
    7700:	ret
    7704:	sub	sp, sp, #0x40
    7708:	stp	x29, x30, [sp, #16]
    770c:	str	x21, [sp, #32]
    7710:	stp	x20, x19, [sp, #48]
    7714:	add	x29, sp, #0x10
    7718:	mov	x20, x2
    771c:	mov	x19, x0
    7720:	cbz	x3, 7730 <PyInit__elementtree@@Base+0x340c>
    7724:	ldr	x21, [x3, #16]
    7728:	cbnz	x1, 7738 <PyInit__elementtree@@Base+0x3414>
    772c:	b	775c <PyInit__elementtree@@Base+0x3438>
    7730:	mov	x21, xzr
    7734:	cbz	x1, 775c <PyInit__elementtree@@Base+0x3438>
    7738:	cmp	x20, #0x1
    773c:	b.hi	775c <PyInit__elementtree@@Base+0x3438>  // b.pmore
    7740:	cbnz	x3, 775c <PyInit__elementtree@@Base+0x3438>
    7744:	cbz	x1, 7790 <PyInit__elementtree@@Base+0x346c>
    7748:	cmn	x21, x20
    774c:	b.ne	7798 <PyInit__elementtree@@Base+0x3474>  // b.any
    7750:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7754:	ldr	x1, [x1, #3976]
    7758:	b	779c <PyInit__elementtree@@Base+0x3478>
    775c:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7760:	add	x8, x29, #0x18
    7764:	add	x4, x4, #0x148
    7768:	mov	w6, #0x1                   	// #1
    776c:	mov	x0, x1
    7770:	mov	x1, x20
    7774:	mov	x2, xzr
    7778:	mov	w5, wzr
    777c:	mov	w7, wzr
    7780:	str	x8, [sp]
    7784:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7788:	mov	x1, x0
    778c:	cbnz	x1, 7748 <PyInit__elementtree@@Base+0x3424>
    7790:	mov	x0, xzr
    7794:	b	77a4 <PyInit__elementtree@@Base+0x3480>
    7798:	ldr	x1, [x1]
    779c:	mov	x0, x19
    77a0:	bl	8508 <PyInit__elementtree@@Base+0x41e4>
    77a4:	ldp	x20, x19, [sp, #48]
    77a8:	ldr	x21, [sp, #32]
    77ac:	ldp	x29, x30, [sp, #16]
    77b0:	add	sp, sp, #0x40
    77b4:	ret
    77b8:	stp	x29, x30, [sp, #-16]!
    77bc:	mov	x29, sp
    77c0:	bl	86b0 <PyInit__elementtree@@Base+0x438c>
    77c4:	ldp	x29, x30, [sp], #16
    77c8:	ret
    77cc:	sub	sp, sp, #0x50
    77d0:	stp	x29, x30, [sp, #32]
    77d4:	str	x21, [sp, #48]
    77d8:	stp	x20, x19, [sp, #64]
    77dc:	add	x29, sp, #0x20
    77e0:	mov	x20, x2
    77e4:	mov	x19, x0
    77e8:	cbz	x3, 77f8 <PyInit__elementtree@@Base+0x34d4>
    77ec:	ldr	x21, [x3, #16]
    77f0:	cbnz	x1, 7800 <PyInit__elementtree@@Base+0x34dc>
    77f4:	b	7830 <PyInit__elementtree@@Base+0x350c>
    77f8:	mov	x21, xzr
    77fc:	cbz	x1, 7830 <PyInit__elementtree@@Base+0x350c>
    7800:	sub	x8, x20, #0x1
    7804:	cmp	x8, #0x1
    7808:	b.hi	7830 <PyInit__elementtree@@Base+0x350c>  // b.pmore
    780c:	cbnz	x3, 7830 <PyInit__elementtree@@Base+0x350c>
    7810:	cbz	x1, 7864 <PyInit__elementtree@@Base+0x3540>
    7814:	ldr	x8, [x1]
    7818:	add	x9, x21, x20
    781c:	cmp	x9, #0x1
    7820:	b.ne	786c <PyInit__elementtree@@Base+0x3548>  // b.any
    7824:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7828:	ldr	x2, [x2, #3976]
    782c:	b	7870 <PyInit__elementtree@@Base+0x354c>
    7830:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7834:	add	x8, sp, #0x10
    7838:	add	x4, x4, #0x188
    783c:	mov	w5, #0x1                   	// #1
    7840:	mov	w6, #0x2                   	// #2
    7844:	mov	x0, x1
    7848:	mov	x1, x20
    784c:	mov	x2, xzr
    7850:	mov	w7, wzr
    7854:	str	x8, [sp]
    7858:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    785c:	mov	x1, x0
    7860:	cbnz	x1, 7814 <PyInit__elementtree@@Base+0x34f0>
    7864:	mov	x0, xzr
    7868:	b	787c <PyInit__elementtree@@Base+0x3558>
    786c:	ldr	x2, [x1, #8]
    7870:	mov	x0, x19
    7874:	mov	x1, x8
    7878:	bl	86d0 <PyInit__elementtree@@Base+0x43ac>
    787c:	ldp	x20, x19, [sp, #64]
    7880:	ldr	x21, [sp, #48]
    7884:	ldp	x29, x30, [sp, #32]
    7888:	add	sp, sp, #0x50
    788c:	ret
    7890:	sub	sp, sp, #0x40
    7894:	stp	x29, x30, [sp, #16]
    7898:	str	x21, [sp, #32]
    789c:	stp	x20, x19, [sp, #48]
    78a0:	add	x29, sp, #0x10
    78a4:	mov	x20, x2
    78a8:	mov	x19, x0
    78ac:	cbz	x3, 78bc <PyInit__elementtree@@Base+0x3598>
    78b0:	ldr	x21, [x3, #16]
    78b4:	cbnz	x1, 78c4 <PyInit__elementtree@@Base+0x35a0>
    78b8:	b	78e8 <PyInit__elementtree@@Base+0x35c4>
    78bc:	mov	x21, xzr
    78c0:	cbz	x1, 78e8 <PyInit__elementtree@@Base+0x35c4>
    78c4:	cmp	x20, #0x1
    78c8:	b.hi	78e8 <PyInit__elementtree@@Base+0x35c4>  // b.pmore
    78cc:	cbnz	x3, 78e8 <PyInit__elementtree@@Base+0x35c4>
    78d0:	cbz	x1, 791c <PyInit__elementtree@@Base+0x35f8>
    78d4:	cmn	x21, x20
    78d8:	b.ne	7924 <PyInit__elementtree@@Base+0x3600>  // b.any
    78dc:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    78e0:	ldr	x1, [x1, #3976]
    78e4:	b	7928 <PyInit__elementtree@@Base+0x3604>
    78e8:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    78ec:	add	x8, x29, #0x18
    78f0:	add	x4, x4, #0x1e0
    78f4:	mov	w6, #0x1                   	// #1
    78f8:	mov	x0, x1
    78fc:	mov	x1, x20
    7900:	mov	x2, xzr
    7904:	mov	w5, wzr
    7908:	mov	w7, wzr
    790c:	str	x8, [sp]
    7910:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    7914:	mov	x1, x0
    7918:	cbnz	x1, 78d4 <PyInit__elementtree@@Base+0x35b0>
    791c:	mov	x0, xzr
    7920:	b	7930 <PyInit__elementtree@@Base+0x360c>
    7924:	ldr	x1, [x1]
    7928:	mov	x0, x19
    792c:	bl	872c <PyInit__elementtree@@Base+0x4408>
    7930:	ldp	x20, x19, [sp, #48]
    7934:	ldr	x21, [sp, #32]
    7938:	ldp	x29, x30, [sp, #16]
    793c:	add	sp, sp, #0x40
    7940:	ret
    7944:	stp	x29, x30, [sp, #-16]!
    7948:	mov	x29, sp
    794c:	bl	8784 <PyInit__elementtree@@Base+0x4460>
    7950:	ldp	x29, x30, [sp], #16
    7954:	ret
    7958:	stp	x29, x30, [sp, #-16]!
    795c:	mov	x29, sp
    7960:	bl	884c <PyInit__elementtree@@Base+0x4528>
    7964:	ldp	x29, x30, [sp], #16
    7968:	ret
    796c:	stp	x29, x30, [sp, #-16]!
    7970:	mov	x29, sp
    7974:	bl	888c <PyInit__elementtree@@Base+0x4568>
    7978:	ldp	x29, x30, [sp], #16
    797c:	ret
    7980:	stp	x29, x30, [sp, #-32]!
    7984:	str	x19, [sp, #16]
    7988:	mov	x29, sp
    798c:	cmp	x2, #0x2
    7990:	mov	x19, x1
    7994:	b.eq	79b8 <PyInit__elementtree@@Base+0x3694>  // b.none
    7998:	mov	x8, x2
    799c:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    79a0:	add	x0, x0, #0x5dd
    79a4:	mov	w2, #0x2                   	// #2
    79a8:	mov	w3, #0x2                   	// #2
    79ac:	mov	x1, x8
    79b0:	bl	3f60 <_PyArg_CheckPositional@plt>
    79b4:	cbz	w0, 79c4 <PyInit__elementtree@@Base+0x36a0>
    79b8:	ldp	x0, x1, [x19]
    79bc:	bl	88cc <PyInit__elementtree@@Base+0x45a8>
    79c0:	b	79c8 <PyInit__elementtree@@Base+0x36a4>
    79c4:	mov	x0, xzr
    79c8:	ldr	x19, [sp, #16]
    79cc:	ldp	x29, x30, [sp], #32
    79d0:	ret
    79d4:	stp	x29, x30, [sp, #-16]!
    79d8:	mov	x29, sp
    79dc:	bl	891c <PyInit__elementtree@@Base+0x45f8>
    79e0:	ldp	x29, x30, [sp], #16
    79e4:	ret
    79e8:	stp	x29, x30, [sp, #-16]!
    79ec:	mov	x29, sp
    79f0:	ldr	x8, [x1, #8]
    79f4:	mov	x3, x1
    79f8:	ldrb	w8, [x8, #171]
    79fc:	tbnz	w8, #5, 7a28 <PyInit__elementtree@@Base+0x3704>
    7a00:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    7a04:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    7a08:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    7a0c:	add	x0, x0, #0x5f2
    7a10:	add	x1, x1, #0x640
    7a14:	add	x2, x2, #0x760
    7a18:	bl	3ed0 <_PyArg_BadArgument@plt>
    7a1c:	mov	x0, xzr
    7a20:	ldp	x29, x30, [sp], #16
    7a24:	ret
    7a28:	mov	x1, x3
    7a2c:	bl	8a1c <PyInit__elementtree@@Base+0x46f8>
    7a30:	ldp	x29, x30, [sp], #16
    7a34:	ret
    7a38:	stp	x29, x30, [sp, #-32]!
    7a3c:	str	x19, [sp, #16]
    7a40:	mov	x29, sp
    7a44:	bl	8d34 <PyInit__elementtree@@Base+0x4a10>
    7a48:	mov	x19, x0
    7a4c:	cmn	x0, #0x1
    7a50:	b.eq	7a60 <PyInit__elementtree@@Base+0x373c>  // b.none
    7a54:	mov	x0, x19
    7a58:	bl	3e70 <PyLong_FromSsize_t@plt>
    7a5c:	b	7a6c <PyInit__elementtree@@Base+0x3748>
    7a60:	bl	3f80 <PyErr_Occurred@plt>
    7a64:	cbz	x0, 7a54 <PyInit__elementtree@@Base+0x3730>
    7a68:	mov	x0, xzr
    7a6c:	ldr	x19, [sp, #16]
    7a70:	ldp	x29, x30, [sp], #32
    7a74:	ret
    7a78:	stp	x29, x30, [sp, #-16]!
    7a7c:	mov	x29, sp
    7a80:	bl	8d64 <PyInit__elementtree@@Base+0x4a40>
    7a84:	ldp	x29, x30, [sp], #16
    7a88:	ret
    7a8c:	stp	x29, x30, [sp, #-16]!
    7a90:	mov	x29, sp
    7a94:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7a98:	ldr	x8, [x1, #8]
    7a9c:	ldr	x9, [x9, #3992]
    7aa0:	mov	x2, x1
    7aa4:	cmp	x8, x9
    7aa8:	b.eq	7ad0 <PyInit__elementtree@@Base+0x37ac>  // b.none
    7aac:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7ab0:	ldr	x8, [x8, #3944]
    7ab4:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    7ab8:	add	x1, x1, #0x7a4
    7abc:	ldr	x0, [x8]
    7ac0:	bl	4180 <PyErr_Format@plt>
    7ac4:	mov	x0, xzr
    7ac8:	ldp	x29, x30, [sp], #16
    7acc:	ret
    7ad0:	mov	x1, x2
    7ad4:	bl	8f0c <PyInit__elementtree@@Base+0x4be8>
    7ad8:	ldp	x29, x30, [sp], #16
    7adc:	ret
    7ae0:	stp	x29, x30, [sp, #-32]!
    7ae4:	stp	x20, x19, [sp, #16]
    7ae8:	mov	x29, sp
    7aec:	mov	x19, x0
    7af0:	bl	6f70 <PyInit__elementtree@@Base+0x2c4c>
    7af4:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7af8:	ldr	x20, [x20, #3976]
    7afc:	mov	x0, x20
    7b00:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7b04:	add	x0, x19, #0x18
    7b08:	mov	x1, x20
    7b0c:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    7b10:	mov	x0, x20
    7b14:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7b18:	add	x0, x19, #0x20
    7b1c:	mov	x1, x20
    7b20:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    7b24:	mov	x0, x20
    7b28:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7b2c:	ldp	x20, x19, [sp, #16]
    7b30:	ldp	x29, x30, [sp], #32
    7b34:	ret
    7b38:	stp	x29, x30, [sp, #-32]!
    7b3c:	stp	x20, x19, [sp, #16]
    7b40:	mov	x29, sp
    7b44:	ldr	x8, [x0, #40]
    7b48:	mov	x19, x2
    7b4c:	cbz	x8, 7b84 <PyInit__elementtree@@Base+0x3860>
    7b50:	ldr	x0, [x8]
    7b54:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7b58:	ldr	x8, [x8, #3976]
    7b5c:	cmp	x0, x8
    7b60:	b.eq	7b84 <PyInit__elementtree@@Base+0x3860>  // b.none
    7b64:	bl	4230 <PyDict_GetItemWithError@plt>
    7b68:	mov	x20, x0
    7b6c:	cbnz	x0, 7b88 <PyInit__elementtree@@Base+0x3864>
    7b70:	bl	3f80 <PyErr_Occurred@plt>
    7b74:	mov	x20, x19
    7b78:	cbz	x0, 7b88 <PyInit__elementtree@@Base+0x3864>
    7b7c:	mov	x20, xzr
    7b80:	b	7b90 <PyInit__elementtree@@Base+0x386c>
    7b84:	mov	x20, x19
    7b88:	mov	x0, x20
    7b8c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7b90:	mov	x0, x20
    7b94:	ldp	x20, x19, [sp, #16]
    7b98:	ldp	x29, x30, [sp], #32
    7b9c:	ret
    7ba0:	stp	x29, x30, [sp, #-48]!
    7ba4:	str	x21, [sp, #16]
    7ba8:	stp	x20, x19, [sp, #32]
    7bac:	mov	x29, sp
    7bb0:	ldr	x8, [x0, #40]
    7bb4:	mov	x19, x2
    7bb8:	mov	x21, x0
    7bbc:	mov	x20, x1
    7bc0:	cbnz	x8, 7bd4 <PyInit__elementtree@@Base+0x38b0>
    7bc4:	mov	x0, x21
    7bc8:	mov	x1, xzr
    7bcc:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    7bd0:	tbnz	w0, #31, 7c04 <PyInit__elementtree@@Base+0x38e0>
    7bd4:	mov	x0, x21
    7bd8:	bl	7c1c <PyInit__elementtree@@Base+0x38f8>
    7bdc:	cbz	x0, 7c04 <PyInit__elementtree@@Base+0x38e0>
    7be0:	mov	x1, x20
    7be4:	mov	x2, x19
    7be8:	bl	4140 <PyDict_SetItem@plt>
    7bec:	tbnz	w0, #31, 7c04 <PyInit__elementtree@@Base+0x38e0>
    7bf0:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7bf4:	ldr	x19, [x19, #3976]
    7bf8:	mov	x0, x19
    7bfc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7c00:	b	7c08 <PyInit__elementtree@@Base+0x38e4>
    7c04:	mov	x19, xzr
    7c08:	mov	x0, x19
    7c0c:	ldp	x20, x19, [sp, #32]
    7c10:	ldr	x21, [sp, #16]
    7c14:	ldp	x29, x30, [sp], #48
    7c18:	ret
    7c1c:	stp	x29, x30, [sp, #-32]!
    7c20:	stp	x20, x19, [sp, #16]
    7c24:	mov	x29, sp
    7c28:	ldr	x8, [x0, #40]
    7c2c:	ldr	x19, [x8]
    7c30:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7c34:	ldr	x8, [x8, #3976]
    7c38:	cmp	x19, x8
    7c3c:	b.ne	7c64 <PyInit__elementtree@@Base+0x3940>  // b.any
    7c40:	mov	x20, x0
    7c44:	bl	4080 <PyDict_New@plt>
    7c48:	mov	x19, x0
    7c4c:	cbz	x0, 7c64 <PyInit__elementtree@@Base+0x3940>
    7c50:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7c54:	ldr	x0, [x0, #3976]
    7c58:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    7c5c:	ldr	x8, [x20, #40]
    7c60:	str	x19, [x8]
    7c64:	mov	x0, x19
    7c68:	ldp	x20, x19, [sp, #16]
    7c6c:	ldp	x29, x30, [sp], #32
    7c70:	ret
    7c74:	stp	x29, x30, [sp, #-64]!
    7c78:	stp	x24, x23, [sp, #16]
    7c7c:	stp	x22, x21, [sp, #32]
    7c80:	stp	x20, x19, [sp, #48]
    7c84:	mov	x29, sp
    7c88:	mov	x20, x0
    7c8c:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    7c90:	add	x0, x0, #0x320
    7c94:	mov	x21, x2
    7c98:	mov	x19, x1
    7c9c:	bl	3fc0 <PyState_FindModule@plt>
    7ca0:	bl	3e10 <PyModule_GetState@plt>
    7ca4:	mov	x22, x0
    7ca8:	mov	x0, x19
    7cac:	bl	7d9c <PyInit__elementtree@@Base+0x3a78>
    7cb0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7cb4:	ldr	x8, [x8, #3976]
    7cb8:	cmp	x21, x8
    7cbc:	b.ne	7d4c <PyInit__elementtree@@Base+0x3a28>  // b.any
    7cc0:	cbnz	w0, 7d4c <PyInit__elementtree@@Base+0x3a28>
    7cc4:	ldr	x8, [x20, #40]
    7cc8:	cbz	x8, 7d74 <PyInit__elementtree@@Base+0x3a50>
    7ccc:	ldr	x8, [x20, #40]
    7cd0:	ldr	x9, [x8, #8]
    7cd4:	cmp	x9, #0x1
    7cd8:	b.lt	7d74 <PyInit__elementtree@@Base+0x3a50>  // b.tstop
    7cdc:	mov	x24, xzr
    7ce0:	b	7d14 <PyInit__elementtree@@Base+0x39f0>
    7ce4:	mov	w23, w0
    7ce8:	mov	x0, x22
    7cec:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    7cf0:	cmp	w23, #0x0
    7cf4:	cset	w8, eq  // eq = none
    7cf8:	csel	x21, xzr, x21, ne  // ne = any
    7cfc:	tbz	w8, #0, 7d84 <PyInit__elementtree@@Base+0x3a60>
    7d00:	ldr	x8, [x20, #40]
    7d04:	add	x24, x24, #0x1
    7d08:	ldr	x9, [x8, #8]
    7d0c:	cmp	x24, x9
    7d10:	b.ge	7d74 <PyInit__elementtree@@Base+0x3a50>  // b.tcont
    7d14:	ldr	x8, [x8, #24]
    7d18:	ldr	x22, [x8, x24, lsl #3]
    7d1c:	mov	x0, x22
    7d20:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7d24:	ldr	x0, [x22, #16]
    7d28:	mov	w2, #0x2                   	// #2
    7d2c:	mov	x1, x19
    7d30:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7d34:	cmp	w0, #0x0
    7d38:	b.le	7ce4 <PyInit__elementtree@@Base+0x39c0>
    7d3c:	mov	x21, x22
    7d40:	mov	w8, wzr
    7d44:	tbnz	wzr, #0, 7d00 <PyInit__elementtree@@Base+0x39dc>
    7d48:	b	7d84 <PyInit__elementtree@@Base+0x3a60>
    7d4c:	ldr	x0, [x22, #16]
    7d50:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    7d54:	add	x1, x1, #0x80
    7d58:	mov	x2, x20
    7d5c:	mov	x3, x19
    7d60:	mov	x4, x21
    7d64:	mov	x5, xzr
    7d68:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    7d6c:	mov	x21, x0
    7d70:	b	7d84 <PyInit__elementtree@@Base+0x3a60>
    7d74:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    7d78:	ldr	x21, [x21, #3976]
    7d7c:	mov	x0, x21
    7d80:	bl	4538 <PyInit__elementtree@@Base+0x214>
    7d84:	mov	x0, x21
    7d88:	ldp	x20, x19, [sp, #48]
    7d8c:	ldp	x22, x21, [sp, #32]
    7d90:	ldp	x24, x23, [sp, #16]
    7d94:	ldp	x29, x30, [sp], #64
    7d98:	ret
    7d9c:	ldr	x8, [x0, #8]
    7da0:	ldr	x8, [x8, #168]
    7da4:	tbnz	w8, #28, 7e54 <PyInit__elementtree@@Base+0x3b30>
    7da8:	tbz	w8, #27, 800c <PyInit__elementtree@@Base+0x3ce8>
    7dac:	ldr	x8, [x0, #16]
    7db0:	add	x9, x0, #0x20
    7db4:	cmp	x8, #0x3
    7db8:	b.lt	7de8 <PyInit__elementtree@@Base+0x3ac4>  // b.tstop
    7dbc:	ldrb	w10, [x9]
    7dc0:	cmp	w10, #0x7b
    7dc4:	b.ne	7de8 <PyInit__elementtree@@Base+0x3ac4>  // b.any
    7dc8:	ldrb	w10, [x9, #1]
    7dcc:	cmp	w10, #0x7d
    7dd0:	b.eq	800c <PyInit__elementtree@@Base+0x3ce8>  // b.none
    7dd4:	cmp	w10, #0x2a
    7dd8:	b.ne	7de8 <PyInit__elementtree@@Base+0x3ac4>  // b.any
    7ddc:	ldrb	w10, [x9, #2]
    7de0:	cmp	w10, #0x7d
    7de4:	b.eq	800c <PyInit__elementtree@@Base+0x3ce8>  // b.none
    7de8:	cmp	x8, #0x1
    7dec:	b.lt	8014 <PyInit__elementtree@@Base+0x3cf0>  // b.tstop
    7df0:	mov	x11, #0x31                  	// #49
    7df4:	movk	x11, #0x40, lsl #16
    7df8:	mov	w10, #0x1                   	// #1
    7dfc:	movk	x11, #0x2, lsl #48
    7e00:	mov	w12, #0x1                   	// #1
    7e04:	b	7e18 <PyInit__elementtree@@Base+0x3af4>
    7e08:	mov	w12, #0x1                   	// #1
    7e0c:	subs	x8, x8, #0x1
    7e10:	add	x9, x9, #0x1
    7e14:	b.eq	8014 <PyInit__elementtree@@Base+0x3cf0>  // b.none
    7e18:	ldrb	w13, [x9]
    7e1c:	cmp	w13, #0x7b
    7e20:	b.eq	7e4c <PyInit__elementtree@@Base+0x3b28>  // b.none
    7e24:	cmp	w13, #0x7d
    7e28:	b.eq	7e08 <PyInit__elementtree@@Base+0x3ae4>  // b.none
    7e2c:	cbz	w12, 7e0c <PyInit__elementtree@@Base+0x3ae8>
    7e30:	sub	w13, w13, #0x2a
    7e34:	cmp	w13, #0x31
    7e38:	b.hi	7e0c <PyInit__elementtree@@Base+0x3ae8>  // b.pmore
    7e3c:	lsl	x13, x10, x13
    7e40:	tst	x13, x11
    7e44:	b.eq	7e0c <PyInit__elementtree@@Base+0x3ae8>  // b.none
    7e48:	b	800c <PyInit__elementtree@@Base+0x3ce8>
    7e4c:	mov	w12, wzr
    7e50:	b	7e0c <PyInit__elementtree@@Base+0x3ae8>
    7e54:	ldr	w10, [x0, #32]
    7e58:	ldr	x8, [x0, #16]
    7e5c:	tbnz	w10, #5, 7e68 <PyInit__elementtree@@Base+0x3b44>
    7e60:	ldr	x9, [x0, #72]
    7e64:	b	7e78 <PyInit__elementtree@@Base+0x3b54>
    7e68:	add	x9, x0, #0x30
    7e6c:	add	x11, x0, #0x48
    7e70:	tst	w10, #0x40
    7e74:	csel	x9, x11, x9, eq  // eq = none
    7e78:	cmp	x8, #0x3
    7e7c:	ubfx	w10, w10, #2, #3
    7e80:	b.lt	7f54 <PyInit__elementtree@@Base+0x3c30>  // b.tstop
    7e84:	cmp	w10, #0x1
    7e88:	b.ne	7e9c <PyInit__elementtree@@Base+0x3b78>  // b.any
    7e8c:	ldrb	w11, [x9]
    7e90:	cmp	w11, #0x7b
    7e94:	b.eq	7ec0 <PyInit__elementtree@@Base+0x3b9c>  // b.none
    7e98:	b	7f54 <PyInit__elementtree@@Base+0x3c30>
    7e9c:	cmp	w10, #0x2
    7ea0:	b.ne	7eb4 <PyInit__elementtree@@Base+0x3b90>  // b.any
    7ea4:	ldrh	w11, [x9]
    7ea8:	cmp	w11, #0x7b
    7eac:	b.eq	7ec0 <PyInit__elementtree@@Base+0x3b9c>  // b.none
    7eb0:	b	7f54 <PyInit__elementtree@@Base+0x3c30>
    7eb4:	ldr	w11, [x9]
    7eb8:	cmp	w11, #0x7b
    7ebc:	b.ne	7f54 <PyInit__elementtree@@Base+0x3c30>  // b.any
    7ec0:	cmp	w10, #0x1
    7ec4:	b.ne	7ed8 <PyInit__elementtree@@Base+0x3bb4>  // b.any
    7ec8:	ldrb	w11, [x9, #1]
    7ecc:	cmp	w11, #0x7d
    7ed0:	b.ne	7efc <PyInit__elementtree@@Base+0x3bd8>  // b.any
    7ed4:	b	800c <PyInit__elementtree@@Base+0x3ce8>
    7ed8:	cmp	w10, #0x2
    7edc:	b.ne	7ef0 <PyInit__elementtree@@Base+0x3bcc>  // b.any
    7ee0:	ldrh	w11, [x9, #2]
    7ee4:	cmp	w11, #0x7d
    7ee8:	b.ne	7efc <PyInit__elementtree@@Base+0x3bd8>  // b.any
    7eec:	b	800c <PyInit__elementtree@@Base+0x3ce8>
    7ef0:	ldr	w11, [x9, #4]
    7ef4:	cmp	w11, #0x7d
    7ef8:	b.eq	800c <PyInit__elementtree@@Base+0x3ce8>  // b.none
    7efc:	cmp	w10, #0x1
    7f00:	b.ne	7f0c <PyInit__elementtree@@Base+0x3be8>  // b.any
    7f04:	ldrb	w11, [x9, #1]
    7f08:	b	7f20 <PyInit__elementtree@@Base+0x3bfc>
    7f0c:	cmp	w10, #0x2
    7f10:	b.ne	7f1c <PyInit__elementtree@@Base+0x3bf8>  // b.any
    7f14:	ldrh	w11, [x9, #2]
    7f18:	b	7f20 <PyInit__elementtree@@Base+0x3bfc>
    7f1c:	ldr	w11, [x9, #4]
    7f20:	cmp	w11, #0x2a
    7f24:	b.ne	7f54 <PyInit__elementtree@@Base+0x3c30>  // b.any
    7f28:	cmp	w10, #0x1
    7f2c:	b.ne	7f38 <PyInit__elementtree@@Base+0x3c14>  // b.any
    7f30:	ldrb	w11, [x9, #2]
    7f34:	b	7f4c <PyInit__elementtree@@Base+0x3c28>
    7f38:	cmp	w10, #0x2
    7f3c:	b.ne	7f48 <PyInit__elementtree@@Base+0x3c24>  // b.any
    7f40:	ldrh	w11, [x9, #4]
    7f44:	b	7f4c <PyInit__elementtree@@Base+0x3c28>
    7f48:	ldr	w11, [x9, #8]
    7f4c:	cmp	w11, #0x7d
    7f50:	b.eq	800c <PyInit__elementtree@@Base+0x3ce8>  // b.none
    7f54:	cmp	x8, #0x1
    7f58:	b.lt	8014 <PyInit__elementtree@@Base+0x3cf0>  // b.tstop
    7f5c:	mov	x13, #0x31                  	// #49
    7f60:	movk	x13, #0x40, lsl #16
    7f64:	mov	x11, xzr
    7f68:	mov	w12, #0x1                   	// #1
    7f6c:	movk	x13, #0x2, lsl #48
    7f70:	mov	w14, #0x1                   	// #1
    7f74:	b	7f90 <PyInit__elementtree@@Base+0x3c6c>
    7f78:	mov	w14, wzr
    7f7c:	mov	w15, #0x1                   	// #1
    7f80:	tbz	w15, #0, 800c <PyInit__elementtree@@Base+0x3ce8>
    7f84:	add	x11, x11, #0x1
    7f88:	cmp	x8, x11
    7f8c:	b.eq	8014 <PyInit__elementtree@@Base+0x3cf0>  // b.none
    7f90:	cmp	w10, #0x2
    7f94:	b.eq	7fb0 <PyInit__elementtree@@Base+0x3c8c>  // b.none
    7f98:	cmp	w10, #0x1
    7f9c:	b.ne	7fc0 <PyInit__elementtree@@Base+0x3c9c>  // b.any
    7fa0:	ldrb	w15, [x9, x11]
    7fa4:	cmp	w15, #0x7b
    7fa8:	b.ne	7fcc <PyInit__elementtree@@Base+0x3ca8>  // b.any
    7fac:	b	7f78 <PyInit__elementtree@@Base+0x3c54>
    7fb0:	ldrh	w15, [x9, x11, lsl #1]
    7fb4:	cmp	w15, #0x7b
    7fb8:	b.ne	7fcc <PyInit__elementtree@@Base+0x3ca8>  // b.any
    7fbc:	b	7f78 <PyInit__elementtree@@Base+0x3c54>
    7fc0:	ldr	w15, [x9, x11, lsl #2]
    7fc4:	cmp	w15, #0x7b
    7fc8:	b.eq	7f78 <PyInit__elementtree@@Base+0x3c54>  // b.none
    7fcc:	cmp	w15, #0x7d
    7fd0:	b.ne	7fdc <PyInit__elementtree@@Base+0x3cb8>  // b.any
    7fd4:	mov	w14, #0x1                   	// #1
    7fd8:	b	8004 <PyInit__elementtree@@Base+0x3ce0>
    7fdc:	cbz	w14, 8004 <PyInit__elementtree@@Base+0x3ce0>
    7fe0:	sub	w15, w15, #0x2a
    7fe4:	cmp	w15, #0x31
    7fe8:	b.hi	8004 <PyInit__elementtree@@Base+0x3ce0>  // b.pmore
    7fec:	lsl	x15, x12, x15
    7ff0:	tst	x15, x13
    7ff4:	b.eq	8004 <PyInit__elementtree@@Base+0x3ce0>  // b.none
    7ff8:	mov	w15, wzr
    7ffc:	tbnz	wzr, #0, 7f84 <PyInit__elementtree@@Base+0x3c60>
    8000:	b	800c <PyInit__elementtree@@Base+0x3ce8>
    8004:	mov	w15, #0x1                   	// #1
    8008:	tbnz	w15, #0, 7f84 <PyInit__elementtree@@Base+0x3c60>
    800c:	mov	w0, #0x1                   	// #1
    8010:	ret
    8014:	mov	w0, wzr
    8018:	ret
    801c:	stp	x29, x30, [sp, #-80]!
    8020:	stp	x26, x25, [sp, #16]
    8024:	stp	x24, x23, [sp, #32]
    8028:	stp	x22, x21, [sp, #48]
    802c:	stp	x20, x19, [sp, #64]
    8030:	mov	x29, sp
    8034:	mov	x21, x0
    8038:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    803c:	add	x0, x0, #0x320
    8040:	mov	x22, x3
    8044:	mov	x19, x2
    8048:	mov	x20, x1
    804c:	bl	3fc0 <PyState_FindModule@plt>
    8050:	bl	3e10 <PyModule_GetState@plt>
    8054:	mov	x23, x0
    8058:	mov	x0, x20
    805c:	bl	7d9c <PyInit__elementtree@@Base+0x3a78>
    8060:	adrp	x25, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8064:	ldr	x25, [x25, #3976]
    8068:	cmp	x22, x25
    806c:	b.ne	8144 <PyInit__elementtree@@Base+0x3e20>  // b.any
    8070:	cbnz	w0, 8144 <PyInit__elementtree@@Base+0x3e20>
    8074:	ldr	x8, [x21, #40]
    8078:	cbz	x8, 8138 <PyInit__elementtree@@Base+0x3e14>
    807c:	ldr	x8, [x21, #40]
    8080:	ldr	x9, [x8, #8]
    8084:	cmp	x9, #0x1
    8088:	b.lt	8138 <PyInit__elementtree@@Base+0x3e14>  // b.tstop
    808c:	mov	x26, xzr
    8090:	ldr	x8, [x8, #24]
    8094:	ldr	x23, [x8, x26, lsl #3]
    8098:	mov	x0, x23
    809c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    80a0:	ldr	x0, [x23, #16]
    80a4:	mov	w2, #0x2                   	// #2
    80a8:	mov	x1, x20
    80ac:	bl	3ec0 <PyObject_RichCompareBool@plt>
    80b0:	cmp	w0, #0x1
    80b4:	b.lt	80e4 <PyInit__elementtree@@Base+0x3dc0>  // b.tstop
    80b8:	mov	x0, x23
    80bc:	bl	5138 <PyInit__elementtree@@Base+0xe14>
    80c0:	cmp	x0, x25
    80c4:	b.eq	8104 <PyInit__elementtree@@Base+0x3de0>  // b.none
    80c8:	mov	x22, x0
    80cc:	bl	8190 <PyInit__elementtree@@Base+0x3e6c>
    80d0:	mov	x0, x23
    80d4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    80d8:	mov	w8, wzr
    80dc:	tbnz	w8, #0, 8124 <PyInit__elementtree@@Base+0x3e00>
    80e0:	b	8188 <PyInit__elementtree@@Base+0x3e64>
    80e4:	mov	w24, w0
    80e8:	mov	x0, x23
    80ec:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    80f0:	cmp	w24, #0x0
    80f4:	cset	w8, eq  // eq = none
    80f8:	csel	x22, xzr, x22, ne  // ne = any
    80fc:	tbnz	w8, #0, 8124 <PyInit__elementtree@@Base+0x3e00>
    8100:	b	8188 <PyInit__elementtree@@Base+0x3e64>
    8104:	mov	x0, x23
    8108:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    810c:	mov	x0, xzr
    8110:	mov	w1, wzr
    8114:	bl	4200 <PyUnicode_New@plt>
    8118:	mov	x22, x0
    811c:	mov	w8, wzr
    8120:	tbz	w8, #0, 8188 <PyInit__elementtree@@Base+0x3e64>
    8124:	ldr	x8, [x21, #40]
    8128:	add	x26, x26, #0x1
    812c:	ldr	x9, [x8, #8]
    8130:	cmp	x26, x9
    8134:	b.lt	8090 <PyInit__elementtree@@Base+0x3d6c>  // b.tstop
    8138:	mov	x0, x19
    813c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8140:	b	816c <PyInit__elementtree@@Base+0x3e48>
    8144:	ldr	x0, [x23, #16]
    8148:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    814c:	add	x1, x1, #0xd8
    8150:	mov	x2, x21
    8154:	mov	x3, x20
    8158:	mov	x4, x19
    815c:	mov	x5, x22
    8160:	mov	x6, xzr
    8164:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    8168:	mov	x19, x0
    816c:	mov	x0, x19
    8170:	ldp	x20, x19, [sp, #64]
    8174:	ldp	x22, x21, [sp, #48]
    8178:	ldp	x24, x23, [sp, #32]
    817c:	ldp	x26, x25, [sp, #16]
    8180:	ldp	x29, x30, [sp], #80
    8184:	ret
    8188:	mov	x19, x22
    818c:	b	816c <PyInit__elementtree@@Base+0x3e48>
    8190:	cbz	x0, 81a4 <PyInit__elementtree@@Base+0x3e80>
    8194:	stp	x29, x30, [sp, #-16]!
    8198:	mov	x29, sp
    819c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    81a0:	ldp	x29, x30, [sp], #16
    81a4:	ret
    81a8:	stp	x29, x30, [sp, #-64]!
    81ac:	str	x23, [sp, #16]
    81b0:	stp	x22, x21, [sp, #32]
    81b4:	stp	x20, x19, [sp, #48]
    81b8:	mov	x29, sp
    81bc:	mov	x20, x0
    81c0:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    81c4:	add	x0, x0, #0x320
    81c8:	mov	x21, x2
    81cc:	mov	x19, x1
    81d0:	bl	3fc0 <PyState_FindModule@plt>
    81d4:	bl	3e10 <PyModule_GetState@plt>
    81d8:	mov	x22, x0
    81dc:	mov	x0, x19
    81e0:	bl	7d9c <PyInit__elementtree@@Base+0x3a78>
    81e4:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    81e8:	ldr	x8, [x8, #3976]
    81ec:	cmp	x21, x8
    81f0:	b.ne	8294 <PyInit__elementtree@@Base+0x3f70>  // b.any
    81f4:	cbnz	w0, 8294 <PyInit__elementtree@@Base+0x3f70>
    81f8:	mov	x0, xzr
    81fc:	bl	3c50 <PyList_New@plt>
    8200:	mov	x21, x0
    8204:	cbz	x0, 82b8 <PyInit__elementtree@@Base+0x3f94>
    8208:	ldr	x8, [x20, #40]
    820c:	cbz	x8, 82b8 <PyInit__elementtree@@Base+0x3f94>
    8210:	ldr	x8, [x20, #40]
    8214:	ldr	x9, [x8, #8]
    8218:	cmp	x9, #0x1
    821c:	b.lt	82b8 <PyInit__elementtree@@Base+0x3f94>  // b.tstop
    8220:	mov	x23, xzr
    8224:	b	8244 <PyInit__elementtree@@Base+0x3f20>
    8228:	mov	x0, x22
    822c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8230:	ldr	x8, [x20, #40]
    8234:	add	x23, x23, #0x1
    8238:	ldr	x9, [x8, #8]
    823c:	cmp	x23, x9
    8240:	b.ge	82b8 <PyInit__elementtree@@Base+0x3f94>  // b.tcont
    8244:	ldr	x8, [x8, #24]
    8248:	ldr	x22, [x8, x23, lsl #3]
    824c:	mov	x0, x22
    8250:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8254:	ldr	x0, [x22, #16]
    8258:	mov	w2, #0x2                   	// #2
    825c:	mov	x1, x19
    8260:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8264:	cbz	w0, 8228 <PyInit__elementtree@@Base+0x3f04>
    8268:	tbnz	w0, #31, 827c <PyInit__elementtree@@Base+0x3f58>
    826c:	mov	x0, x21
    8270:	mov	x1, x22
    8274:	bl	3f00 <PyList_Append@plt>
    8278:	tbz	w0, #31, 8228 <PyInit__elementtree@@Base+0x3f04>
    827c:	mov	x0, x22
    8280:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8284:	mov	x0, x21
    8288:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    828c:	mov	x21, xzr
    8290:	b	82b8 <PyInit__elementtree@@Base+0x3f94>
    8294:	ldr	x0, [x22, #16]
    8298:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    829c:	add	x1, x1, #0x130
    82a0:	mov	x2, x20
    82a4:	mov	x3, x19
    82a8:	mov	x4, x21
    82ac:	mov	x5, xzr
    82b0:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    82b4:	mov	x21, x0
    82b8:	mov	x0, x21
    82bc:	ldp	x20, x19, [sp, #48]
    82c0:	ldp	x22, x21, [sp, #32]
    82c4:	ldr	x23, [sp, #16]
    82c8:	ldp	x29, x30, [sp], #64
    82cc:	ret
    82d0:	stp	x29, x30, [sp, #-32]!
    82d4:	str	x19, [sp, #16]
    82d8:	mov	x29, sp
    82dc:	bl	49c4 <PyInit__elementtree@@Base+0x6a0>
    82e0:	tbnz	w0, #31, 82f8 <PyInit__elementtree@@Base+0x3fd4>
    82e4:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    82e8:	ldr	x19, [x19, #3976]
    82ec:	mov	x0, x19
    82f0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    82f4:	b	82fc <PyInit__elementtree@@Base+0x3fd8>
    82f8:	mov	x19, xzr
    82fc:	mov	x0, x19
    8300:	ldr	x19, [sp, #16]
    8304:	ldp	x29, x30, [sp], #32
    8308:	ret
    830c:	stp	x29, x30, [sp, #-48]!
    8310:	str	x21, [sp, #16]
    8314:	stp	x20, x19, [sp, #32]
    8318:	mov	x29, sp
    831c:	ldr	x8, [x0, #40]
    8320:	mov	x19, x2
    8324:	mov	x20, x0
    8328:	mov	x21, x1
    832c:	cbnz	x8, 8340 <PyInit__elementtree@@Base+0x401c>
    8330:	mov	x0, x20
    8334:	mov	x1, xzr
    8338:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    833c:	tbnz	w0, #31, 83dc <PyInit__elementtree@@Base+0x40b8>
    8340:	tbz	x21, #63, 8354 <PyInit__elementtree@@Base+0x4030>
    8344:	ldr	x8, [x20, #40]
    8348:	ldr	x8, [x8, #8]
    834c:	add	x8, x8, x21
    8350:	bic	x21, x8, x8, asr #63
    8354:	ldr	x8, [x20, #40]
    8358:	mov	w1, #0x1                   	// #1
    835c:	mov	x0, x20
    8360:	ldr	x8, [x8, #8]
    8364:	cmp	x21, x8
    8368:	csel	x21, x8, x21, gt
    836c:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    8370:	tbnz	w0, #31, 83dc <PyInit__elementtree@@Base+0x40b8>
    8374:	ldr	x8, [x20, #40]
    8378:	ldr	x8, [x8, #8]
    837c:	cmp	x8, x21
    8380:	b.le	83a4 <PyInit__elementtree@@Base+0x4080>
    8384:	ldr	x9, [x20, #40]
    8388:	ldr	x9, [x9, #24]
    838c:	add	x9, x9, x8, lsl #3
    8390:	ldur	x10, [x9, #-8]
    8394:	sub	x8, x8, #0x1
    8398:	cmp	x8, x21
    839c:	str	x10, [x9]
    83a0:	b.gt	8384 <PyInit__elementtree@@Base+0x4060>
    83a4:	mov	x0, x19
    83a8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    83ac:	ldr	x8, [x20, #40]
    83b0:	ldr	x8, [x8, #24]
    83b4:	str	x19, [x8, x21, lsl #3]
    83b8:	ldr	x8, [x20, #40]
    83bc:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    83c0:	ldr	x9, [x8, #8]
    83c4:	add	x9, x9, #0x1
    83c8:	str	x9, [x8, #8]
    83cc:	ldr	x19, [x19, #3976]
    83d0:	mov	x0, x19
    83d4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    83d8:	b	83e0 <PyInit__elementtree@@Base+0x40bc>
    83dc:	mov	x19, xzr
    83e0:	mov	x0, x19
    83e4:	ldp	x20, x19, [sp, #32]
    83e8:	ldr	x21, [sp, #16]
    83ec:	ldp	x29, x30, [sp], #48
    83f0:	ret
    83f4:	stp	x29, x30, [sp, #-48]!
    83f8:	str	x21, [sp, #16]
    83fc:	stp	x20, x19, [sp, #32]
    8400:	mov	x29, sp
    8404:	ldr	x8, [x0, #40]
    8408:	cbz	x8, 84d8 <PyInit__elementtree@@Base+0x41b4>
    840c:	ldr	x8, [x0, #40]
    8410:	mov	x19, x0
    8414:	ldr	x9, [x8, #8]
    8418:	cmp	x9, #0x1
    841c:	b.lt	8468 <PyInit__elementtree@@Base+0x4144>  // b.tstop
    8420:	mov	x20, x1
    8424:	mov	x21, xzr
    8428:	ldr	x8, [x8, #24]
    842c:	ldr	x0, [x8, x21, lsl #3]
    8430:	cmp	x0, x20
    8434:	b.eq	846c <PyInit__elementtree@@Base+0x4148>  // b.none
    8438:	mov	w2, #0x2                   	// #2
    843c:	mov	x1, x20
    8440:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8444:	cmp	w0, #0x0
    8448:	b.gt	846c <PyInit__elementtree@@Base+0x4148>
    844c:	tbnz	w0, #31, 84f0 <PyInit__elementtree@@Base+0x41cc>
    8450:	ldr	x8, [x19, #40]
    8454:	add	x21, x21, #0x1
    8458:	ldr	x9, [x8, #8]
    845c:	cmp	x21, x9
    8460:	b.lt	8428 <PyInit__elementtree@@Base+0x4104>  // b.tstop
    8464:	b	846c <PyInit__elementtree@@Base+0x4148>
    8468:	mov	x21, xzr
    846c:	ldr	x8, [x19, #40]
    8470:	ldr	x9, [x8, #8]
    8474:	cmp	x21, x9
    8478:	b.ge	84d8 <PyInit__elementtree@@Base+0x41b4>  // b.tcont
    847c:	ldr	x10, [x8, #24]
    8480:	sub	x9, x9, #0x1
    8484:	ldr	x0, [x10, x21, lsl #3]
    8488:	str	x9, [x8, #8]
    848c:	ldr	x8, [x19, #40]
    8490:	ldr	x9, [x8, #8]
    8494:	cmp	x21, x9
    8498:	b.ge	84c0 <PyInit__elementtree@@Base+0x419c>  // b.tcont
    849c:	ldr	x8, [x8, #24]
    84a0:	add	x8, x8, x21, lsl #3
    84a4:	ldr	x9, [x8, #8]
    84a8:	add	x21, x21, #0x1
    84ac:	str	x9, [x8]
    84b0:	ldr	x8, [x19, #40]
    84b4:	ldr	x9, [x8, #8]
    84b8:	cmp	x21, x9
    84bc:	b.lt	849c <PyInit__elementtree@@Base+0x4178>  // b.tstop
    84c0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    84c4:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    84c8:	ldr	x19, [x19, #3976]
    84cc:	mov	x0, x19
    84d0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    84d4:	b	84f4 <PyInit__elementtree@@Base+0x41d0>
    84d8:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    84dc:	ldr	x8, [x8, #3928]
    84e0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    84e4:	add	x1, x1, #0x679
    84e8:	ldr	x0, [x8]
    84ec:	bl	3de0 <PyErr_SetString@plt>
    84f0:	mov	x19, xzr
    84f4:	mov	x0, x19
    84f8:	ldp	x20, x19, [sp, #32]
    84fc:	ldr	x21, [sp, #16]
    8500:	ldp	x29, x30, [sp], #48
    8504:	ret
    8508:	stp	x29, x30, [sp, #-32]!
    850c:	stp	x20, x19, [sp, #16]
    8510:	mov	x29, sp
    8514:	ldr	x8, [x1, #8]
    8518:	mov	x19, x1
    851c:	mov	x20, x0
    8520:	ldr	x8, [x8, #168]
    8524:	tbnz	w8, #28, 8540 <PyInit__elementtree@@Base+0x421c>
    8528:	tbz	w8, #27, 8600 <PyInit__elementtree@@Base+0x42dc>
    852c:	ldr	x8, [x19, #16]
    8530:	cmp	x8, #0x1
    8534:	b.ne	8600 <PyInit__elementtree@@Base+0x42dc>  // b.any
    8538:	ldrb	w8, [x19, #32]
    853c:	b	85f0 <PyInit__elementtree@@Base+0x42cc>
    8540:	ldrb	w8, [x19, #32]
    8544:	tbnz	w8, #7, 8554 <PyInit__elementtree@@Base+0x4230>
    8548:	mov	x0, x19
    854c:	bl	3c60 <_PyUnicode_Ready@plt>
    8550:	tbnz	w0, #31, 85a4 <PyInit__elementtree@@Base+0x4280>
    8554:	ldr	x8, [x19, #16]
    8558:	cmp	x8, #0x1
    855c:	b.ne	8600 <PyInit__elementtree@@Base+0x42dc>  // b.any
    8560:	ldr	w8, [x19, #32]
    8564:	ubfx	w9, w8, #2, #3
    8568:	cmp	w9, #0x1
    856c:	b.ne	8580 <PyInit__elementtree@@Base+0x425c>  // b.any
    8570:	tbnz	w8, #5, 85ac <PyInit__elementtree@@Base+0x4288>
    8574:	ldr	x8, [x19, #72]
    8578:	ldrb	w8, [x8]
    857c:	b	85f0 <PyInit__elementtree@@Base+0x42cc>
    8580:	cmp	w9, #0x2
    8584:	b.ne	85c4 <PyInit__elementtree@@Base+0x42a0>  // b.any
    8588:	tbz	w8, #5, 85dc <PyInit__elementtree@@Base+0x42b8>
    858c:	add	x9, x19, #0x30
    8590:	add	x10, x19, #0x48
    8594:	tst	w8, #0x40
    8598:	csel	x8, x10, x9, eq  // eq = none
    859c:	ldrh	w8, [x8]
    85a0:	b	85f0 <PyInit__elementtree@@Base+0x42cc>
    85a4:	mov	x0, xzr
    85a8:	b	8610 <PyInit__elementtree@@Base+0x42ec>
    85ac:	add	x9, x19, #0x30
    85b0:	add	x10, x19, #0x48
    85b4:	tst	w8, #0x40
    85b8:	csel	x8, x10, x9, eq  // eq = none
    85bc:	ldrb	w8, [x8]
    85c0:	b	85f0 <PyInit__elementtree@@Base+0x42cc>
    85c4:	tbz	w8, #5, 85e8 <PyInit__elementtree@@Base+0x42c4>
    85c8:	add	x9, x19, #0x30
    85cc:	add	x10, x19, #0x48
    85d0:	tst	w8, #0x40
    85d4:	csel	x8, x10, x9, eq  // eq = none
    85d8:	b	85ec <PyInit__elementtree@@Base+0x42c8>
    85dc:	ldr	x8, [x19, #72]
    85e0:	ldrh	w8, [x8]
    85e4:	b	85f0 <PyInit__elementtree@@Base+0x42cc>
    85e8:	ldr	x8, [x19, #72]
    85ec:	ldr	w8, [x8]
    85f0:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    85f4:	ldr	x9, [x9, #3976]
    85f8:	cmp	w8, #0x2a
    85fc:	csel	x19, x9, x19, eq  // eq = none
    8600:	mov	x0, x20
    8604:	mov	x1, x19
    8608:	mov	w2, wzr
    860c:	bl	861c <PyInit__elementtree@@Base+0x42f8>
    8610:	ldp	x20, x19, [sp, #16]
    8614:	ldp	x29, x30, [sp], #32
    8618:	ret
    861c:	stp	x29, x30, [sp, #-48]!
    8620:	stp	x22, x21, [sp, #16]
    8624:	stp	x20, x19, [sp, #32]
    8628:	mov	x29, sp
    862c:	mov	x20, x0
    8630:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    8634:	add	x0, x0, #0x388
    8638:	mov	w21, w2
    863c:	mov	x22, x1
    8640:	bl	3df0 <_PyObject_GC_New@plt>
    8644:	mov	x19, x0
    8648:	cbz	x0, 869c <PyInit__elementtree@@Base+0x4378>
    864c:	mov	x0, x22
    8650:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8654:	mov	x0, x20
    8658:	str	x22, [x19, #48]
    865c:	str	w21, [x19, #56]
    8660:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8664:	mov	x0, x19
    8668:	str	x20, [x19, #40]
    866c:	bl	3dc0 <PyObject_GC_Track@plt>
    8670:	mov	w0, #0x80                  	// #128
    8674:	bl	41f0 <PyMem_Malloc@plt>
    8678:	str	x0, [x19, #16]
    867c:	cbz	x0, 868c <PyInit__elementtree@@Base+0x4368>
    8680:	mov	w8, #0x8                   	// #8
    8684:	stp	xzr, x8, [x19, #24]
    8688:	b	869c <PyInit__elementtree@@Base+0x4378>
    868c:	mov	x0, x19
    8690:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8694:	bl	3d80 <PyErr_NoMemory@plt>
    8698:	mov	x19, xzr
    869c:	mov	x0, x19
    86a0:	ldp	x20, x19, [sp, #32]
    86a4:	ldp	x22, x21, [sp, #16]
    86a8:	ldp	x29, x30, [sp], #48
    86ac:	ret
    86b0:	stp	x29, x30, [sp, #-16]!
    86b4:	mov	x29, sp
    86b8:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    86bc:	ldr	x1, [x1, #3976]
    86c0:	mov	w2, #0x1                   	// #1
    86c4:	bl	861c <PyInit__elementtree@@Base+0x42f8>
    86c8:	ldp	x29, x30, [sp], #16
    86cc:	ret
    86d0:	stp	x29, x30, [sp, #-48]!
    86d4:	str	x21, [sp, #16]
    86d8:	stp	x20, x19, [sp, #32]
    86dc:	mov	x29, sp
    86e0:	mov	x21, x0
    86e4:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    86e8:	add	x0, x0, #0x320
    86ec:	mov	x19, x2
    86f0:	mov	x20, x1
    86f4:	bl	3fc0 <PyState_FindModule@plt>
    86f8:	bl	3e10 <PyModule_GetState@plt>
    86fc:	ldr	x0, [x0, #16]
    8700:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8704:	add	x1, x1, #0x1c8
    8708:	mov	x2, x21
    870c:	mov	x3, x20
    8710:	mov	x4, x19
    8714:	mov	x5, xzr
    8718:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    871c:	ldp	x20, x19, [sp, #32]
    8720:	ldr	x21, [sp, #16]
    8724:	ldp	x29, x30, [sp], #48
    8728:	ret
    872c:	stp	x29, x30, [sp, #-32]!
    8730:	stp	x20, x19, [sp, #16]
    8734:	mov	x29, sp
    8738:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    873c:	ldr	x8, [x8, #3936]
    8740:	mov	x19, x1
    8744:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    8748:	mov	x20, x0
    874c:	ldr	x8, [x8]
    8750:	add	x1, x1, #0x69b
    8754:	mov	w2, #0x1                   	// #1
    8758:	mov	x0, x8
    875c:	bl	3d60 <PyErr_WarnEx@plt>
    8760:	tbnz	w0, #31, 8774 <PyInit__elementtree@@Base+0x4450>
    8764:	mov	x0, x20
    8768:	mov	x1, x19
    876c:	bl	8508 <PyInit__elementtree@@Base+0x41e4>
    8770:	b	8778 <PyInit__elementtree@@Base+0x4454>
    8774:	mov	x0, xzr
    8778:	ldp	x20, x19, [sp, #16]
    877c:	ldp	x29, x30, [sp], #32
    8780:	ret
    8784:	stp	x29, x30, [sp, #-64]!
    8788:	str	x23, [sp, #16]
    878c:	stp	x22, x21, [sp, #32]
    8790:	stp	x20, x19, [sp, #48]
    8794:	mov	x29, sp
    8798:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    879c:	ldr	x8, [x8, #3936]
    87a0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    87a4:	mov	x19, x0
    87a8:	add	x1, x1, #0x6fe
    87ac:	ldr	x8, [x8]
    87b0:	mov	w2, #0x1                   	// #1
    87b4:	mov	x0, x8
    87b8:	bl	3d60 <PyErr_WarnEx@plt>
    87bc:	tbnz	w0, #31, 8820 <PyInit__elementtree@@Base+0x44fc>
    87c0:	ldr	x8, [x19, #40]
    87c4:	cbz	x8, 8828 <PyInit__elementtree@@Base+0x4504>
    87c8:	ldr	x0, [x8, #8]
    87cc:	bl	3c50 <PyList_New@plt>
    87d0:	mov	x20, x0
    87d4:	cbz	x0, 8834 <PyInit__elementtree@@Base+0x4510>
    87d8:	ldr	x8, [x19, #40]
    87dc:	ldr	x9, [x8, #8]
    87e0:	cmp	x9, #0x1
    87e4:	b.lt	8834 <PyInit__elementtree@@Base+0x4510>  // b.tstop
    87e8:	mov	x22, xzr
    87ec:	ldr	x8, [x8, #24]
    87f0:	lsl	x23, x22, #3
    87f4:	ldr	x21, [x8, x23]
    87f8:	mov	x0, x21
    87fc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8800:	ldr	x8, [x20, #24]
    8804:	add	x22, x22, #0x1
    8808:	str	x21, [x8, x23]
    880c:	ldr	x8, [x19, #40]
    8810:	ldr	x9, [x8, #8]
    8814:	cmp	x22, x9
    8818:	b.lt	87ec <PyInit__elementtree@@Base+0x44c8>  // b.tstop
    881c:	b	8834 <PyInit__elementtree@@Base+0x4510>
    8820:	mov	x20, xzr
    8824:	b	8834 <PyInit__elementtree@@Base+0x4510>
    8828:	mov	x0, xzr
    882c:	bl	3c50 <PyList_New@plt>
    8830:	mov	x20, x0
    8834:	mov	x0, x20
    8838:	ldp	x20, x19, [sp, #48]
    883c:	ldp	x22, x21, [sp, #32]
    8840:	ldr	x23, [sp, #16]
    8844:	ldp	x29, x30, [sp], #64
    8848:	ret
    884c:	stp	x29, x30, [sp, #-16]!
    8850:	mov	x29, sp
    8854:	ldr	x8, [x0, #40]
    8858:	cbz	x8, 887c <PyInit__elementtree@@Base+0x4558>
    885c:	ldr	x0, [x8]
    8860:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8864:	ldr	x8, [x8, #3976]
    8868:	cmp	x0, x8
    886c:	b.eq	887c <PyInit__elementtree@@Base+0x4558>  // b.none
    8870:	bl	3c80 <PyDict_Items@plt>
    8874:	ldp	x29, x30, [sp], #16
    8878:	ret
    887c:	mov	x0, xzr
    8880:	bl	3c50 <PyList_New@plt>
    8884:	ldp	x29, x30, [sp], #16
    8888:	ret
    888c:	stp	x29, x30, [sp, #-16]!
    8890:	mov	x29, sp
    8894:	ldr	x8, [x0, #40]
    8898:	cbz	x8, 88bc <PyInit__elementtree@@Base+0x4598>
    889c:	ldr	x0, [x8]
    88a0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    88a4:	ldr	x8, [x8, #3976]
    88a8:	cmp	x0, x8
    88ac:	b.eq	88bc <PyInit__elementtree@@Base+0x4598>  // b.none
    88b0:	bl	40e0 <PyDict_Keys@plt>
    88b4:	ldp	x29, x30, [sp], #16
    88b8:	ret
    88bc:	mov	x0, xzr
    88c0:	bl	3c50 <PyList_New@plt>
    88c4:	ldp	x29, x30, [sp], #16
    88c8:	ret
    88cc:	stp	x29, x30, [sp, #-32]!
    88d0:	stp	x20, x19, [sp, #16]
    88d4:	mov	x29, sp
    88d8:	mov	x20, x0
    88dc:	mov	x0, x1
    88e0:	bl	4150 <PyDict_Copy@plt>
    88e4:	cbz	x0, 8908 <PyInit__elementtree@@Base+0x45e4>
    88e8:	mov	x19, x0
    88ec:	mov	x0, x20
    88f0:	mov	x1, x19
    88f4:	bl	4918 <PyInit__elementtree@@Base+0x5f4>
    88f8:	mov	x20, x0
    88fc:	mov	x0, x19
    8900:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8904:	b	890c <PyInit__elementtree@@Base+0x45e8>
    8908:	mov	x20, xzr
    890c:	mov	x0, x20
    8910:	ldp	x20, x19, [sp, #16]
    8914:	ldp	x29, x30, [sp], #32
    8918:	ret
    891c:	stp	x29, x30, [sp, #-48]!
    8920:	stp	x22, x21, [sp, #16]
    8924:	stp	x20, x19, [sp, #32]
    8928:	mov	x29, sp
    892c:	mov	x20, x0
    8930:	ldr	x8, [x0, #40]
    8934:	ldr	x0, [x0, #16]
    8938:	cbz	x8, 8944 <PyInit__elementtree@@Base+0x4620>
    893c:	ldr	x1, [x8]
    8940:	b	894c <PyInit__elementtree@@Base+0x4628>
    8944:	adrp	x1, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8948:	ldr	x1, [x1, #3976]
    894c:	bl	4918 <PyInit__elementtree@@Base+0x5f4>
    8950:	mov	x19, x0
    8954:	cbz	x0, 8a08 <PyInit__elementtree@@Base+0x46e4>
    8958:	ldr	x8, [x20, #24]
    895c:	and	x0, x8, #0xfffffffffffffffe
    8960:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8964:	ldr	x1, [x20, #24]
    8968:	add	x0, x19, #0x18
    896c:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    8970:	ldr	x8, [x20, #32]
    8974:	and	x0, x8, #0xfffffffffffffffe
    8978:	bl	4538 <PyInit__elementtree@@Base+0x214>
    897c:	ldr	x1, [x20, #32]
    8980:	add	x0, x19, #0x20
    8984:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    8988:	ldr	x8, [x20, #40]
    898c:	cbz	x8, 8a08 <PyInit__elementtree@@Base+0x46e4>
    8990:	ldr	x1, [x8, #8]
    8994:	mov	x0, x19
    8998:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    899c:	tbnz	w0, #31, 89fc <PyInit__elementtree@@Base+0x46d8>
    89a0:	ldr	x8, [x20, #40]
    89a4:	ldr	x9, [x8, #8]
    89a8:	cmp	x9, #0x1
    89ac:	b.lt	89f0 <PyInit__elementtree@@Base+0x46cc>  // b.tstop
    89b0:	mov	x21, xzr
    89b4:	ldr	x8, [x8, #24]
    89b8:	lsl	x22, x21, #3
    89bc:	ldr	x0, [x8, x22]
    89c0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    89c4:	ldr	x8, [x20, #40]
    89c8:	ldr	x9, [x19, #40]
    89cc:	add	x21, x21, #0x1
    89d0:	ldr	x8, [x8, #24]
    89d4:	ldr	x9, [x9, #24]
    89d8:	ldr	x8, [x8, x22]
    89dc:	str	x8, [x9, x22]
    89e0:	ldr	x8, [x20, #40]
    89e4:	ldr	x9, [x8, #8]
    89e8:	cmp	x21, x9
    89ec:	b.lt	89b4 <PyInit__elementtree@@Base+0x4690>  // b.tstop
    89f0:	ldr	x8, [x19, #40]
    89f4:	str	x9, [x8, #8]
    89f8:	b	8a08 <PyInit__elementtree@@Base+0x46e4>
    89fc:	mov	x0, x19
    8a00:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8a04:	mov	x19, xzr
    8a08:	mov	x0, x19
    8a0c:	ldp	x20, x19, [sp, #32]
    8a10:	ldp	x22, x21, [sp, #16]
    8a14:	ldp	x29, x30, [sp], #48
    8a18:	ret
    8a1c:	stp	x29, x30, [sp, #-64]!
    8a20:	stp	x24, x23, [sp, #16]
    8a24:	stp	x22, x21, [sp, #32]
    8a28:	stp	x20, x19, [sp, #48]
    8a2c:	mov	x29, sp
    8a30:	mov	x21, x0
    8a34:	ldr	x0, [x0, #16]
    8a38:	mov	x19, x1
    8a3c:	bl	8bf0 <PyInit__elementtree@@Base+0x48cc>
    8a40:	cbz	x0, 8bd4 <PyInit__elementtree@@Base+0x48b0>
    8a44:	ldr	x8, [x21, #40]
    8a48:	mov	x22, x0
    8a4c:	cbz	x8, 8a6c <PyInit__elementtree@@Base+0x4748>
    8a50:	ldr	x0, [x8]
    8a54:	mov	x1, x19
    8a58:	bl	8bf0 <PyInit__elementtree@@Base+0x48cc>
    8a5c:	mov	x23, x0
    8a60:	cbnz	x0, 8a7c <PyInit__elementtree@@Base+0x4758>
    8a64:	mov	x0, x22
    8a68:	b	8bd0 <PyInit__elementtree@@Base+0x48ac>
    8a6c:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8a70:	ldr	x23, [x23, #3976]
    8a74:	mov	x0, x23
    8a78:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8a7c:	mov	x0, x22
    8a80:	mov	x1, x23
    8a84:	bl	4918 <PyInit__elementtree@@Base+0x5f4>
    8a88:	mov	x20, x0
    8a8c:	mov	x0, x22
    8a90:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8a94:	mov	x0, x23
    8a98:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8a9c:	cbz	x20, 8bd8 <PyInit__elementtree@@Base+0x48b4>
    8aa0:	ldr	x8, [x21, #24]
    8aa4:	mov	x1, x19
    8aa8:	and	x0, x8, #0xfffffffffffffffe
    8aac:	bl	8bf0 <PyInit__elementtree@@Base+0x48cc>
    8ab0:	cbz	x0, 8bcc <PyInit__elementtree@@Base+0x48a8>
    8ab4:	ldr	x8, [x21, #24]
    8ab8:	mov	x1, x0
    8abc:	add	x0, x20, #0x18
    8ac0:	bfxil	x1, x8, #0, #1
    8ac4:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    8ac8:	ldr	x8, [x21, #32]
    8acc:	mov	x1, x19
    8ad0:	and	x0, x8, #0xfffffffffffffffe
    8ad4:	bl	8bf0 <PyInit__elementtree@@Base+0x48cc>
    8ad8:	cbz	x0, 8bcc <PyInit__elementtree@@Base+0x48a8>
    8adc:	ldr	x8, [x21, #32]
    8ae0:	mov	x1, x0
    8ae4:	add	x0, x20, #0x20
    8ae8:	bfxil	x1, x8, #0, #1
    8aec:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    8af0:	ldr	x8, [x21, #40]
    8af4:	cbz	x8, 8b9c <PyInit__elementtree@@Base+0x4878>
    8af8:	ldr	x1, [x8, #8]
    8afc:	mov	x0, x20
    8b00:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    8b04:	tbnz	w0, #31, 8bcc <PyInit__elementtree@@Base+0x48a8>
    8b08:	ldr	x8, [x21, #40]
    8b0c:	ldr	x9, [x8, #8]
    8b10:	cmp	x9, #0x1
    8b14:	b.lt	8b94 <PyInit__elementtree@@Base+0x4870>  // b.tstop
    8b18:	adrp	x22, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    8b1c:	mov	x24, xzr
    8b20:	add	x22, x22, #0x6c8
    8b24:	b	8b48 <PyInit__elementtree@@Base+0x4824>
    8b28:	ldr	x8, [x20, #40]
    8b2c:	ldr	x8, [x8, #24]
    8b30:	str	x23, [x8, x24, lsl #3]
    8b34:	ldr	x8, [x21, #40]
    8b38:	add	x24, x24, #0x1
    8b3c:	ldr	x9, [x8, #8]
    8b40:	cmp	x24, x9
    8b44:	b.ge	8b94 <PyInit__elementtree@@Base+0x4870>  // b.tcont
    8b48:	ldr	x8, [x8, #24]
    8b4c:	mov	x1, x19
    8b50:	ldr	x0, [x8, x24, lsl #3]
    8b54:	bl	8bf0 <PyInit__elementtree@@Base+0x48cc>
    8b58:	cbz	x0, 8b88 <PyInit__elementtree@@Base+0x4864>
    8b5c:	mov	x23, x0
    8b60:	ldr	x0, [x0, #8]
    8b64:	cmp	x0, x22
    8b68:	b.eq	8b28 <PyInit__elementtree@@Base+0x4804>  // b.none
    8b6c:	mov	x1, x22
    8b70:	bl	4160 <PyType_IsSubtype@plt>
    8b74:	cbnz	w0, 8b28 <PyInit__elementtree@@Base+0x4804>
    8b78:	mov	x0, x23
    8b7c:	bl	4af0 <PyInit__elementtree@@Base+0x7cc>
    8b80:	mov	x0, x23
    8b84:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8b88:	ldr	x8, [x20, #40]
    8b8c:	str	x24, [x8, #8]
    8b90:	b	8bcc <PyInit__elementtree@@Base+0x48a8>
    8b94:	ldr	x8, [x20, #40]
    8b98:	str	x9, [x8, #8]
    8b9c:	mov	x0, x21
    8ba0:	bl	3e70 <PyLong_FromSsize_t@plt>
    8ba4:	cbz	x0, 8bcc <PyInit__elementtree@@Base+0x48a8>
    8ba8:	mov	x21, x0
    8bac:	mov	x0, x19
    8bb0:	mov	x1, x21
    8bb4:	mov	x2, x20
    8bb8:	bl	4140 <PyDict_SetItem@plt>
    8bbc:	mov	w19, w0
    8bc0:	mov	x0, x21
    8bc4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8bc8:	tbz	w19, #31, 8bd8 <PyInit__elementtree@@Base+0x48b4>
    8bcc:	mov	x0, x20
    8bd0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8bd4:	mov	x20, xzr
    8bd8:	mov	x0, x20
    8bdc:	ldp	x20, x19, [sp, #48]
    8be0:	ldp	x22, x21, [sp, #32]
    8be4:	ldp	x24, x23, [sp, #16]
    8be8:	ldp	x29, x30, [sp], #64
    8bec:	ret
    8bf0:	sub	sp, sp, #0x50
    8bf4:	stp	x29, x30, [sp, #32]
    8bf8:	str	x21, [sp, #48]
    8bfc:	stp	x20, x19, [sp, #64]
    8c00:	add	x29, sp, #0x20
    8c04:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8c08:	ldr	x8, [x8, #3976]
    8c0c:	mov	x19, x0
    8c10:	cmp	x0, x8
    8c14:	b.eq	8c6c <PyInit__elementtree@@Base+0x4948>  // b.none
    8c18:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8c1c:	ldr	x8, [x19, #8]
    8c20:	ldr	x21, [x21, #4032]
    8c24:	cmp	x8, x21
    8c28:	b.eq	8c6c <PyInit__elementtree@@Base+0x4948>  // b.none
    8c2c:	ldr	x9, [x19]
    8c30:	mov	x20, x1
    8c34:	cmp	x9, #0x1
    8c38:	b.ne	8cd4 <PyInit__elementtree@@Base+0x49b0>  // b.any
    8c3c:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8c40:	ldr	x9, [x9, #3992]
    8c44:	cmp	x8, x9
    8c48:	b.eq	8c7c <PyInit__elementtree@@Base+0x4958>  // b.none
    8c4c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    8c50:	add	x9, x9, #0x6c8
    8c54:	cmp	x8, x9
    8c58:	b.ne	8cd4 <PyInit__elementtree@@Base+0x49b0>  // b.any
    8c5c:	mov	x0, x19
    8c60:	mov	x1, x20
    8c64:	bl	8a1c <PyInit__elementtree@@Base+0x46f8>
    8c68:	b	8d20 <PyInit__elementtree@@Base+0x49fc>
    8c6c:	mov	x0, x19
    8c70:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8c74:	mov	x0, x19
    8c78:	b	8d20 <PyInit__elementtree@@Base+0x49fc>
    8c7c:	str	xzr, [sp, #8]
    8c80:	add	x1, sp, #0x8
    8c84:	add	x2, sp, #0x10
    8c88:	add	x3, x29, #0x18
    8c8c:	mov	x0, x19
    8c90:	bl	40b0 <PyDict_Next@plt>
    8c94:	cbz	w0, 8cc4 <PyInit__elementtree@@Base+0x49a0>
    8c98:	ldr	x8, [sp, #16]
    8c9c:	ldr	x8, [x8, #8]
    8ca0:	cmp	x8, x21
    8ca4:	b.ne	8cb8 <PyInit__elementtree@@Base+0x4994>  // b.any
    8ca8:	ldr	x8, [x29, #24]
    8cac:	ldr	x8, [x8, #8]
    8cb0:	cmp	x8, x21
    8cb4:	b.eq	8c80 <PyInit__elementtree@@Base+0x495c>  // b.none
    8cb8:	mov	w8, #0x1                   	// #1
    8cbc:	tbnz	w8, #0, 8cd4 <PyInit__elementtree@@Base+0x49b0>
    8cc0:	b	8d20 <PyInit__elementtree@@Base+0x49fc>
    8cc4:	mov	x0, x19
    8cc8:	bl	4150 <PyDict_Copy@plt>
    8ccc:	mov	w8, wzr
    8cd0:	tbz	w8, #0, 8d20 <PyInit__elementtree@@Base+0x49fc>
    8cd4:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    8cd8:	add	x0, x0, #0x320
    8cdc:	bl	3fc0 <PyState_FindModule@plt>
    8ce0:	bl	3e10 <PyModule_GetState@plt>
    8ce4:	ldr	x8, [x0, #8]
    8ce8:	cbz	x8, 8d04 <PyInit__elementtree@@Base+0x49e0>
    8cec:	stp	x19, x20, [sp, #16]
    8cf0:	ldr	x0, [x0, #8]
    8cf4:	add	x1, sp, #0x10
    8cf8:	mov	w2, #0x2                   	// #2
    8cfc:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    8d00:	b	8d20 <PyInit__elementtree@@Base+0x49fc>
    8d04:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8d08:	ldr	x8, [x8, #3920]
    8d0c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    8d10:	add	x1, x1, #0x765
    8d14:	ldr	x0, [x8]
    8d18:	bl	3de0 <PyErr_SetString@plt>
    8d1c:	mov	x0, xzr
    8d20:	ldp	x20, x19, [sp, #64]
    8d24:	ldr	x21, [sp, #48]
    8d28:	ldp	x29, x30, [sp, #32]
    8d2c:	add	sp, sp, #0x50
    8d30:	ret
    8d34:	ldr	x9, [x0, #8]
    8d38:	ldr	x8, [x0, #40]
    8d3c:	ldr	x0, [x9, #32]
    8d40:	cbz	x8, 8d60 <PyInit__elementtree@@Base+0x4a3c>
    8d44:	ldr	x9, [x8, #24]
    8d48:	add	x10, x8, #0x20
    8d4c:	add	x0, x0, #0x40
    8d50:	cmp	x9, x10
    8d54:	b.eq	8d60 <PyInit__elementtree@@Base+0x4a3c>  // b.none
    8d58:	ldr	x8, [x8, #16]
    8d5c:	add	x0, x0, x8, lsl #3
    8d60:	ret
    8d64:	sub	sp, sp, #0x60
    8d68:	stp	x29, x30, [sp, #32]
    8d6c:	str	x23, [sp, #48]
    8d70:	stp	x22, x21, [sp, #64]
    8d74:	stp	x20, x19, [sp, #80]
    8d78:	add	x29, sp, #0x20
    8d7c:	ldr	x8, [x0, #40]
    8d80:	mov	x20, x0
    8d84:	cbz	x8, 8e40 <PyInit__elementtree@@Base+0x4b1c>
    8d88:	ldr	x0, [x8, #8]
    8d8c:	bl	3c50 <PyList_New@plt>
    8d90:	cbz	x0, 8e4c <PyInit__elementtree@@Base+0x4b28>
    8d94:	ldr	x9, [x0, #16]
    8d98:	ldr	x8, [x20, #40]
    8d9c:	mov	x19, x0
    8da0:	cmp	x9, #0x1
    8da4:	b.lt	8ddc <PyInit__elementtree@@Base+0x4ab8>  // b.tstop
    8da8:	mov	x22, xzr
    8dac:	ldr	x8, [x8, #24]
    8db0:	lsl	x23, x22, #3
    8db4:	ldr	x21, [x8, x23]
    8db8:	mov	x0, x21
    8dbc:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8dc0:	ldr	x8, [x19, #24]
    8dc4:	add	x22, x22, #0x1
    8dc8:	str	x21, [x8, x23]
    8dcc:	ldr	x9, [x19, #16]
    8dd0:	ldr	x8, [x20, #40]
    8dd4:	cmp	x22, x9
    8dd8:	b.lt	8dac <PyInit__elementtree@@Base+0x4a88>  // b.tstop
    8ddc:	cbz	x8, 8e54 <PyInit__elementtree@@Base+0x4b30>
    8de0:	adrp	x10, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    8de4:	ldr	x9, [x8]
    8de8:	ldr	x10, [x10, #3976]
    8dec:	cmp	x9, x10
    8df0:	cset	w9, eq  // eq = none
    8df4:	ldr	x2, [x20, #16]
    8df8:	cbz	w9, 8e60 <PyInit__elementtree@@Base+0x4b3c>
    8dfc:	ldp	x8, x9, [x20, #24]
    8e00:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e04:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e08:	adrp	x3, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e0c:	and	x7, x8, #0xfffffffffffffffe
    8e10:	and	x8, x9, #0xfffffffffffffffe
    8e14:	adrp	x9, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e18:	add	x9, x9, #0x3e6
    8e1c:	adrp	x5, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e20:	adrp	x6, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e24:	add	x0, x0, #0x77f
    8e28:	add	x1, x1, #0x697
    8e2c:	add	x3, x3, #0x78d
    8e30:	add	x5, x5, #0x2cc
    8e34:	add	x6, x6, #0x581
    8e38:	stp	x9, x8, [sp]
    8e3c:	b	8ea8 <PyInit__elementtree@@Base+0x4b84>
    8e40:	mov	x0, xzr
    8e44:	bl	3c50 <PyList_New@plt>
    8e48:	cbnz	x0, 8d94 <PyInit__elementtree@@Base+0x4a70>
    8e4c:	mov	x20, xzr
    8e50:	b	8ef0 <PyInit__elementtree@@Base+0x4bcc>
    8e54:	mov	w9, #0x1                   	// #1
    8e58:	ldr	x2, [x20, #16]
    8e5c:	cbnz	w9, 8dfc <PyInit__elementtree@@Base+0x4ad8>
    8e60:	ldp	x9, x10, [x20, #24]
    8e64:	ldr	x6, [x8]
    8e68:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e6c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e70:	and	x8, x9, #0xfffffffffffffffe
    8e74:	and	x9, x10, #0xfffffffffffffffe
    8e78:	str	x9, [sp, #16]
    8e7c:	adrp	x9, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e80:	adrp	x3, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e84:	adrp	x5, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e88:	adrp	x7, b000 <PyInit__elementtree@@Base+0x6cdc>
    8e8c:	add	x9, x9, #0x3e6
    8e90:	add	x0, x0, #0x797
    8e94:	add	x1, x1, #0x697
    8e98:	add	x3, x3, #0x78d
    8e9c:	add	x5, x5, #0x2cc
    8ea0:	add	x7, x7, #0x581
    8ea4:	stp	x8, x9, [sp]
    8ea8:	mov	x4, x19
    8eac:	bl	4190 <_Py_BuildValue_SizeT@plt>
    8eb0:	mov	x20, x0
    8eb4:	cbnz	x0, 8ee8 <PyInit__elementtree@@Base+0x4bc4>
    8eb8:	ldr	x8, [x19, #16]
    8ebc:	cmp	x8, #0x1
    8ec0:	b.lt	8ee4 <PyInit__elementtree@@Base+0x4bc0>  // b.tstop
    8ec4:	mov	x20, xzr
    8ec8:	ldr	x8, [x19, #24]
    8ecc:	ldr	x0, [x8, x20, lsl #3]
    8ed0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8ed4:	ldr	x8, [x19, #16]
    8ed8:	add	x20, x20, #0x1
    8edc:	cmp	x20, x8
    8ee0:	b.lt	8ec8 <PyInit__elementtree@@Base+0x4ba4>  // b.tstop
    8ee4:	mov	x20, xzr
    8ee8:	mov	x0, x19
    8eec:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8ef0:	mov	x0, x20
    8ef4:	ldp	x20, x19, [sp, #80]
    8ef8:	ldp	x22, x21, [sp, #64]
    8efc:	ldr	x23, [sp, #48]
    8f00:	ldp	x29, x30, [sp, #32]
    8f04:	add	sp, sp, #0x60
    8f08:	ret
    8f0c:	sub	sp, sp, #0x60
    8f10:	stp	x29, x30, [sp, #48]
    8f14:	str	x21, [sp, #64]
    8f18:	stp	x20, x19, [sp, #80]
    8f1c:	add	x29, sp, #0x30
    8f20:	mov	x20, x0
    8f24:	mov	x0, xzr
    8f28:	mov	x21, x1
    8f2c:	stp	xzr, xzr, [sp, #16]
    8f30:	stp	xzr, xzr, [x29, #-16]
    8f34:	str	xzr, [x29, #24]
    8f38:	bl	3f40 <PyTuple_New@plt>
    8f3c:	cbz	x0, 8f94 <PyInit__elementtree@@Base+0x4c70>
    8f40:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    8f44:	adrp	x3, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    8f48:	add	x8, sp, #0x10
    8f4c:	add	x2, x2, #0x7d6
    8f50:	add	x3, x3, #0x220
    8f54:	add	x4, x29, #0x18
    8f58:	sub	x5, x29, #0x8
    8f5c:	sub	x6, x29, #0x10
    8f60:	add	x7, sp, #0x18
    8f64:	mov	x1, x21
    8f68:	mov	x19, x0
    8f6c:	str	x8, [sp]
    8f70:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    8f74:	cbz	w0, 8f9c <PyInit__elementtree@@Base+0x4c78>
    8f78:	ldr	x1, [x29, #24]
    8f7c:	ldp	x3, x2, [x29, #-16]
    8f80:	ldp	x5, x4, [sp, #16]
    8f84:	mov	x0, x20
    8f88:	bl	8fc0 <PyInit__elementtree@@Base+0x4c9c>
    8f8c:	mov	x20, x0
    8f90:	b	8fa0 <PyInit__elementtree@@Base+0x4c7c>
    8f94:	mov	x20, xzr
    8f98:	b	8fa8 <PyInit__elementtree@@Base+0x4c84>
    8f9c:	mov	x20, xzr
    8fa0:	mov	x0, x19
    8fa4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    8fa8:	mov	x0, x20
    8fac:	ldp	x20, x19, [sp, #80]
    8fb0:	ldr	x21, [sp, #64]
    8fb4:	ldp	x29, x30, [sp, #48]
    8fb8:	add	sp, sp, #0x60
    8fbc:	ret
    8fc0:	stp	x29, x30, [sp, #-80]!
    8fc4:	stp	x26, x25, [sp, #16]
    8fc8:	stp	x24, x23, [sp, #32]
    8fcc:	stp	x22, x21, [sp, #48]
    8fd0:	stp	x20, x19, [sp, #64]
    8fd4:	mov	x29, sp
    8fd8:	cbz	x1, 902c <PyInit__elementtree@@Base+0x4d08>
    8fdc:	mov	x19, x0
    8fe0:	mov	x0, x1
    8fe4:	mov	x21, x5
    8fe8:	mov	x22, x4
    8fec:	mov	x23, x3
    8ff0:	mov	x20, x2
    8ff4:	mov	x24, x1
    8ff8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    8ffc:	ldr	x0, [x19, #16]
    9000:	str	x24, [x19, #16]
    9004:	bl	4548 <PyInit__elementtree@@Base+0x224>
    9008:	adrp	x25, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    900c:	ldr	x25, [x25, #4064]
    9010:	cbz	x23, 9040 <PyInit__elementtree@@Base+0x4d1c>
    9014:	ldr	x8, [x23, #8]
    9018:	and	x9, x23, #0xfffffffffffffffe
    901c:	cmp	x8, x25
    9020:	cset	w8, eq  // eq = none
    9024:	orr	x23, x9, x8
    9028:	b	9048 <PyInit__elementtree@@Base+0x4d24>
    902c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9030:	ldr	x8, [x8, #3944]
    9034:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9038:	add	x1, x1, #0x7de
    903c:	b	90c0 <PyInit__elementtree@@Base+0x4d9c>
    9040:	adrp	x23, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9044:	ldr	x23, [x23, #3976]
    9048:	and	x0, x23, #0xfffffffffffffffe
    904c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9050:	add	x0, x19, #0x18
    9054:	mov	x1, x23
    9058:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    905c:	adrp	x24, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9060:	ldr	x24, [x24, #3976]
    9064:	cbz	x22, 9080 <PyInit__elementtree@@Base+0x4d5c>
    9068:	ldr	x8, [x22, #8]
    906c:	and	x9, x22, #0xfffffffffffffffe
    9070:	cmp	x8, x25
    9074:	cset	w8, eq  // eq = none
    9078:	orr	x22, x9, x8
    907c:	b	9084 <PyInit__elementtree@@Base+0x4d60>
    9080:	mov	x22, x24
    9084:	and	x0, x22, #0xfffffffffffffffe
    9088:	bl	4538 <PyInit__elementtree@@Base+0x214>
    908c:	add	x0, x19, #0x20
    9090:	mov	x1, x22
    9094:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    9098:	orr	x8, x20, x21
    909c:	cbz	x8, 9108 <PyInit__elementtree@@Base+0x4de4>
    90a0:	cbz	x21, 90d0 <PyInit__elementtree@@Base+0x4dac>
    90a4:	ldr	x8, [x21, #8]
    90a8:	ldrb	w8, [x8, #171]
    90ac:	tbnz	w8, #1, 9134 <PyInit__elementtree@@Base+0x4e10>
    90b0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    90b4:	ldr	x8, [x8, #3944]
    90b8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    90bc:	add	x1, x1, #0x7f2
    90c0:	ldr	x0, [x8]
    90c4:	bl	3de0 <PyErr_SetString@plt>
    90c8:	mov	x21, xzr
    90cc:	b	9118 <PyInit__elementtree@@Base+0x4df4>
    90d0:	mov	x0, x19
    90d4:	mov	x1, xzr
    90d8:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    90dc:	cbnz	w0, 9118 <PyInit__elementtree@@Base+0x4df4>
    90e0:	mov	x22, xzr
    90e4:	cbz	x20, 9100 <PyInit__elementtree@@Base+0x4ddc>
    90e8:	mov	x0, x20
    90ec:	bl	4538 <PyInit__elementtree@@Base+0x214>
    90f0:	ldr	x8, [x19, #40]
    90f4:	ldr	x0, [x8]
    90f8:	str	x20, [x8]
    90fc:	bl	4548 <PyInit__elementtree@@Base+0x224>
    9100:	mov	x0, x22
    9104:	bl	6fb4 <PyInit__elementtree@@Base+0x2c90>
    9108:	adrp	x21, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    910c:	ldr	x21, [x21, #3976]
    9110:	mov	x0, x21
    9114:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9118:	mov	x0, x21
    911c:	ldp	x20, x19, [sp, #64]
    9120:	ldp	x22, x21, [sp, #48]
    9124:	ldp	x24, x23, [sp, #32]
    9128:	ldp	x26, x25, [sp, #16]
    912c:	ldp	x29, x30, [sp], #80
    9130:	ret
    9134:	ldr	x23, [x21, #16]
    9138:	ldr	x22, [x19, #40]
    913c:	mov	x0, x19
    9140:	str	xzr, [x19, #40]
    9144:	mov	x1, x23
    9148:	bl	4b20 <PyInit__elementtree@@Base+0x7fc>
    914c:	cbz	w0, 9164 <PyInit__elementtree@@Base+0x4e40>
    9150:	mov	x0, x19
    9154:	bl	6f70 <PyInit__elementtree@@Base+0x2c4c>
    9158:	mov	x21, xzr
    915c:	str	x22, [x19, #40]
    9160:	b	9118 <PyInit__elementtree@@Base+0x4df4>
    9164:	cbz	x22, 9178 <PyInit__elementtree@@Base+0x4e54>
    9168:	ldr	x8, [x22]
    916c:	ldr	x9, [x19, #40]
    9170:	str	x8, [x9]
    9174:	str	x24, [x22]
    9178:	cmp	x23, #0x1
    917c:	b.lt	91f0 <PyInit__elementtree@@Base+0x4ecc>  // b.tstop
    9180:	adrp	x24, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    9184:	mov	x26, xzr
    9188:	add	x24, x24, #0x6c8
    918c:	b	91b0 <PyInit__elementtree@@Base+0x4e8c>
    9190:	mov	x0, x25
    9194:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9198:	ldr	x8, [x19, #40]
    919c:	ldr	x8, [x8, #24]
    91a0:	str	x25, [x8, x26, lsl #3]
    91a4:	add	x26, x26, #0x1
    91a8:	cmp	x23, x26
    91ac:	b.eq	91f0 <PyInit__elementtree@@Base+0x4ecc>  // b.none
    91b0:	ldr	x8, [x21, #24]
    91b4:	ldr	x25, [x8, x26, lsl #3]
    91b8:	ldr	x0, [x25, #8]
    91bc:	cmp	x0, x24
    91c0:	b.eq	9190 <PyInit__elementtree@@Base+0x4e6c>  // b.none
    91c4:	mov	x1, x24
    91c8:	bl	4160 <PyType_IsSubtype@plt>
    91cc:	cbnz	w0, 9190 <PyInit__elementtree@@Base+0x4e6c>
    91d0:	mov	x0, x25
    91d4:	bl	4af0 <PyInit__elementtree@@Base+0x7cc>
    91d8:	ldr	x8, [x19, #40]
    91dc:	mov	x0, x22
    91e0:	str	x26, [x8, #8]
    91e4:	bl	6fb4 <PyInit__elementtree@@Base+0x2c90>
    91e8:	mov	x21, xzr
    91ec:	b	9118 <PyInit__elementtree@@Base+0x4df4>
    91f0:	ldr	x8, [x19, #40]
    91f4:	str	x23, [x8, #8]
    91f8:	cbnz	x20, 90e8 <PyInit__elementtree@@Base+0x4dc4>
    91fc:	b	9100 <PyInit__elementtree@@Base+0x4ddc>
    9200:	stp	x29, x30, [sp, #-32]!
    9204:	str	x19, [sp, #16]
    9208:	mov	x29, sp
    920c:	ldr	x19, [x0, #16]
    9210:	mov	x0, x19
    9214:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9218:	mov	x0, x19
    921c:	ldr	x19, [sp, #16]
    9220:	ldp	x29, x30, [sp], #32
    9224:	ret
    9228:	stp	x29, x30, [sp, #-32]!
    922c:	stp	x20, x19, [sp, #16]
    9230:	mov	x29, sp
    9234:	cbz	x1, 925c <PyInit__elementtree@@Base+0x4f38>
    9238:	mov	x20, x0
    923c:	mov	x0, x1
    9240:	mov	x19, x1
    9244:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9248:	ldr	x0, [x20, #16]
    924c:	str	x19, [x20, #16]
    9250:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9254:	mov	w0, wzr
    9258:	b	9278 <PyInit__elementtree@@Base+0x4f54>
    925c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9260:	ldr	x8, [x8, #4008]
    9264:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9268:	add	x1, x1, #0x8e8
    926c:	ldr	x0, [x8]
    9270:	bl	3de0 <PyErr_SetString@plt>
    9274:	mov	w0, #0xffffffff            	// #-1
    9278:	ldp	x20, x19, [sp, #16]
    927c:	ldp	x29, x30, [sp], #32
    9280:	ret
    9284:	stp	x29, x30, [sp, #-32]!
    9288:	str	x19, [sp, #16]
    928c:	mov	x29, sp
    9290:	bl	5138 <PyInit__elementtree@@Base+0xe14>
    9294:	mov	x19, x0
    9298:	bl	8190 <PyInit__elementtree@@Base+0x3e6c>
    929c:	mov	x0, x19
    92a0:	ldr	x19, [sp, #16]
    92a4:	ldp	x29, x30, [sp], #32
    92a8:	ret
    92ac:	stp	x29, x30, [sp, #-32]!
    92b0:	stp	x20, x19, [sp, #16]
    92b4:	mov	x29, sp
    92b8:	cbz	x1, 92e0 <PyInit__elementtree@@Base+0x4fbc>
    92bc:	mov	x20, x0
    92c0:	mov	x0, x1
    92c4:	mov	x19, x1
    92c8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    92cc:	add	x0, x20, #0x18
    92d0:	mov	x1, x19
    92d4:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    92d8:	mov	w0, wzr
    92dc:	b	92fc <PyInit__elementtree@@Base+0x4fd8>
    92e0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    92e4:	ldr	x8, [x8, #4008]
    92e8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    92ec:	add	x1, x1, #0x8e8
    92f0:	ldr	x0, [x8]
    92f4:	bl	3de0 <PyErr_SetString@plt>
    92f8:	mov	w0, #0xffffffff            	// #-1
    92fc:	ldp	x20, x19, [sp, #16]
    9300:	ldp	x29, x30, [sp], #32
    9304:	ret
    9308:	stp	x29, x30, [sp, #-32]!
    930c:	str	x19, [sp, #16]
    9310:	mov	x29, sp
    9314:	bl	5030 <PyInit__elementtree@@Base+0xd0c>
    9318:	mov	x19, x0
    931c:	bl	8190 <PyInit__elementtree@@Base+0x3e6c>
    9320:	mov	x0, x19
    9324:	ldr	x19, [sp, #16]
    9328:	ldp	x29, x30, [sp], #32
    932c:	ret
    9330:	stp	x29, x30, [sp, #-32]!
    9334:	stp	x20, x19, [sp, #16]
    9338:	mov	x29, sp
    933c:	cbz	x1, 9364 <PyInit__elementtree@@Base+0x5040>
    9340:	mov	x20, x0
    9344:	mov	x0, x1
    9348:	mov	x19, x1
    934c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9350:	add	x0, x20, #0x20
    9354:	mov	x1, x19
    9358:	bl	6f94 <PyInit__elementtree@@Base+0x2c70>
    935c:	mov	w0, wzr
    9360:	b	9380 <PyInit__elementtree@@Base+0x505c>
    9364:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9368:	ldr	x8, [x8, #4008]
    936c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9370:	add	x1, x1, #0x8e8
    9374:	ldr	x0, [x8]
    9378:	bl	3de0 <PyErr_SetString@plt>
    937c:	mov	w0, #0xffffffff            	// #-1
    9380:	ldp	x20, x19, [sp, #16]
    9384:	ldp	x29, x30, [sp], #32
    9388:	ret
    938c:	stp	x29, x30, [sp, #-32]!
    9390:	str	x19, [sp, #16]
    9394:	mov	x29, sp
    9398:	ldr	x8, [x0, #40]
    939c:	mov	x19, x0
    93a0:	cbnz	x8, 93b4 <PyInit__elementtree@@Base+0x5090>
    93a4:	mov	x0, x19
    93a8:	mov	x1, xzr
    93ac:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    93b0:	tbnz	w0, #31, 93d4 <PyInit__elementtree@@Base+0x50b0>
    93b4:	mov	x0, x19
    93b8:	bl	7c1c <PyInit__elementtree@@Base+0x38f8>
    93bc:	mov	x19, x0
    93c0:	bl	8190 <PyInit__elementtree@@Base+0x3e6c>
    93c4:	mov	x0, x19
    93c8:	ldr	x19, [sp, #16]
    93cc:	ldp	x29, x30, [sp], #32
    93d0:	ret
    93d4:	mov	x19, xzr
    93d8:	b	93c4 <PyInit__elementtree@@Base+0x50a0>
    93dc:	stp	x29, x30, [sp, #-32]!
    93e0:	stp	x20, x19, [sp, #16]
    93e4:	mov	x29, sp
    93e8:	cbz	x1, 942c <PyInit__elementtree@@Base+0x5108>
    93ec:	ldr	x8, [x0, #40]
    93f0:	mov	x19, x1
    93f4:	mov	x20, x0
    93f8:	cbnz	x8, 940c <PyInit__elementtree@@Base+0x50e8>
    93fc:	mov	x0, x20
    9400:	mov	x1, xzr
    9404:	bl	4a84 <PyInit__elementtree@@Base+0x760>
    9408:	tbnz	w0, #31, 9444 <PyInit__elementtree@@Base+0x5120>
    940c:	mov	x0, x19
    9410:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9414:	ldr	x8, [x20, #40]
    9418:	ldr	x0, [x8]
    941c:	str	x19, [x8]
    9420:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9424:	mov	w0, wzr
    9428:	b	9448 <PyInit__elementtree@@Base+0x5124>
    942c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9430:	ldr	x8, [x8, #4008]
    9434:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9438:	add	x1, x1, #0x8e8
    943c:	ldr	x0, [x8]
    9440:	bl	3de0 <PyErr_SetString@plt>
    9444:	mov	w0, #0xffffffff            	// #-1
    9448:	ldp	x20, x19, [sp, #16]
    944c:	ldp	x29, x30, [sp], #32
    9450:	ret
    9454:	stp	x29, x30, [sp, #-32]!
    9458:	str	x19, [sp, #16]
    945c:	mov	x29, sp
    9460:	mov	x19, x0
    9464:	bl	4220 <PyObject_GC_UnTrack@plt>
    9468:	mov	x0, x19
    946c:	bl	9618 <PyInit__elementtree@@Base+0x52f4>
    9470:	ldr	x8, [x19, #8]
    9474:	mov	x0, x19
    9478:	ldr	x8, [x8, #320]
    947c:	blr	x8
    9480:	ldr	x19, [sp, #16]
    9484:	ldp	x29, x30, [sp], #32
    9488:	ret
    948c:	stp	x29, x30, [sp, #-48]!
    9490:	stp	x22, x21, [sp, #16]
    9494:	stp	x20, x19, [sp, #32]
    9498:	mov	x29, sp
    949c:	mov	x22, x0
    94a0:	ldr	x0, [x0, #112]
    94a4:	mov	x20, x2
    94a8:	mov	x21, x1
    94ac:	cbz	x0, 94cc <PyInit__elementtree@@Base+0x51a8>
    94b0:	mov	x1, x20
    94b4:	blr	x21
    94b8:	mov	w19, w0
    94bc:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    94c0:	ldr	x0, [x22, #96]
    94c4:	cbnz	x0, 94d4 <PyInit__elementtree@@Base+0x51b0>
    94c8:	b	94e8 <PyInit__elementtree@@Base+0x51c4>
    94cc:	ldr	x0, [x22, #96]
    94d0:	cbz	x0, 94e8 <PyInit__elementtree@@Base+0x51c4>
    94d4:	mov	x1, x20
    94d8:	blr	x21
    94dc:	cmp	w0, #0x0
    94e0:	csel	w19, w19, w0, eq  // eq = none
    94e4:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    94e8:	ldr	x0, [x22, #88]
    94ec:	cbz	x0, 9504 <PyInit__elementtree@@Base+0x51e0>
    94f0:	mov	x1, x20
    94f4:	blr	x21
    94f8:	cmp	w0, #0x0
    94fc:	csel	w19, w19, w0, eq  // eq = none
    9500:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9504:	ldr	x0, [x22, #80]
    9508:	cbz	x0, 9520 <PyInit__elementtree@@Base+0x51fc>
    950c:	mov	x1, x20
    9510:	blr	x21
    9514:	cmp	w0, #0x0
    9518:	csel	w19, w19, w0, eq  // eq = none
    951c:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9520:	ldr	x0, [x22, #72]
    9524:	cbz	x0, 953c <PyInit__elementtree@@Base+0x5218>
    9528:	mov	x1, x20
    952c:	blr	x21
    9530:	cmp	w0, #0x0
    9534:	csel	w19, w19, w0, eq  // eq = none
    9538:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    953c:	ldr	x0, [x22, #64]
    9540:	cbz	x0, 9558 <PyInit__elementtree@@Base+0x5234>
    9544:	mov	x1, x20
    9548:	blr	x21
    954c:	cmp	w0, #0x0
    9550:	csel	w19, w19, w0, eq  // eq = none
    9554:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9558:	ldr	x0, [x22, #48]
    955c:	cbz	x0, 9574 <PyInit__elementtree@@Base+0x5250>
    9560:	mov	x1, x20
    9564:	blr	x21
    9568:	cmp	w0, #0x0
    956c:	csel	w19, w19, w0, eq  // eq = none
    9570:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9574:	ldr	x0, [x22, #56]
    9578:	cbz	x0, 9590 <PyInit__elementtree@@Base+0x526c>
    957c:	mov	x1, x20
    9580:	blr	x21
    9584:	cmp	w0, #0x0
    9588:	csel	w19, w19, w0, eq  // eq = none
    958c:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9590:	ldr	x0, [x22, #104]
    9594:	cbz	x0, 95ac <PyInit__elementtree@@Base+0x5288>
    9598:	mov	x1, x20
    959c:	blr	x21
    95a0:	cmp	w0, #0x0
    95a4:	csel	w19, w19, w0, eq  // eq = none
    95a8:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    95ac:	ldr	x0, [x22, #24]
    95b0:	cbz	x0, 95c8 <PyInit__elementtree@@Base+0x52a4>
    95b4:	mov	x1, x20
    95b8:	blr	x21
    95bc:	cmp	w0, #0x0
    95c0:	csel	w19, w19, w0, eq  // eq = none
    95c4:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    95c8:	ldr	x0, [x22, #32]
    95cc:	cbz	x0, 95e4 <PyInit__elementtree@@Base+0x52c0>
    95d0:	mov	x1, x20
    95d4:	blr	x21
    95d8:	cmp	w0, #0x0
    95dc:	csel	w19, w19, w0, eq  // eq = none
    95e0:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    95e4:	ldr	x0, [x22, #40]
    95e8:	cbz	x0, 9600 <PyInit__elementtree@@Base+0x52dc>
    95ec:	mov	x1, x20
    95f0:	blr	x21
    95f4:	cmp	w0, #0x0
    95f8:	csel	w19, w19, w0, eq  // eq = none
    95fc:	cbnz	w0, 9604 <PyInit__elementtree@@Base+0x52e0>
    9600:	mov	w19, wzr
    9604:	mov	w0, w19
    9608:	ldp	x20, x19, [sp, #32]
    960c:	ldp	x22, x21, [sp, #16]
    9610:	ldp	x29, x30, [sp], #48
    9614:	ret
    9618:	stp	x29, x30, [sp, #-32]!
    961c:	str	x19, [sp, #16]
    9620:	mov	x29, sp
    9624:	mov	x19, x0
    9628:	ldr	x0, [x0, #16]
    962c:	cbz	x0, 9644 <PyInit__elementtree@@Base+0x5320>
    9630:	str	xzr, [x19, #16]
    9634:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9638:	ldr	x8, [x8, #1072]
    963c:	ldr	x8, [x8, #72]
    9640:	blr	x8
    9644:	ldr	x0, [x19, #112]
    9648:	cbz	x0, 9654 <PyInit__elementtree@@Base+0x5330>
    964c:	str	xzr, [x19, #112]
    9650:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9654:	ldr	x0, [x19, #96]
    9658:	cbz	x0, 9664 <PyInit__elementtree@@Base+0x5340>
    965c:	str	xzr, [x19, #96]
    9660:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9664:	ldr	x0, [x19, #88]
    9668:	cbz	x0, 9674 <PyInit__elementtree@@Base+0x5350>
    966c:	str	xzr, [x19, #88]
    9670:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9674:	ldr	x0, [x19, #80]
    9678:	cbz	x0, 9684 <PyInit__elementtree@@Base+0x5360>
    967c:	str	xzr, [x19, #80]
    9680:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9684:	ldr	x0, [x19, #72]
    9688:	cbz	x0, 9694 <PyInit__elementtree@@Base+0x5370>
    968c:	str	xzr, [x19, #72]
    9690:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9694:	ldr	x0, [x19, #64]
    9698:	cbz	x0, 96a4 <PyInit__elementtree@@Base+0x5380>
    969c:	str	xzr, [x19, #64]
    96a0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96a4:	ldr	x0, [x19, #48]
    96a8:	cbz	x0, 96b4 <PyInit__elementtree@@Base+0x5390>
    96ac:	str	xzr, [x19, #48]
    96b0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96b4:	ldr	x0, [x19, #56]
    96b8:	cbz	x0, 96c4 <PyInit__elementtree@@Base+0x53a0>
    96bc:	str	xzr, [x19, #56]
    96c0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96c4:	ldr	x0, [x19, #104]
    96c8:	cbz	x0, 96d4 <PyInit__elementtree@@Base+0x53b0>
    96cc:	str	xzr, [x19, #104]
    96d0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96d4:	ldr	x0, [x19, #24]
    96d8:	cbz	x0, 96e4 <PyInit__elementtree@@Base+0x53c0>
    96dc:	str	xzr, [x19, #24]
    96e0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96e4:	ldr	x0, [x19, #32]
    96e8:	cbz	x0, 96f4 <PyInit__elementtree@@Base+0x53d0>
    96ec:	str	xzr, [x19, #32]
    96f0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    96f4:	ldr	x0, [x19, #40]
    96f8:	cbz	x0, 9704 <PyInit__elementtree@@Base+0x53e0>
    96fc:	str	xzr, [x19, #40]
    9700:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9704:	ldr	x19, [sp, #16]
    9708:	mov	w0, wzr
    970c:	ldp	x29, x30, [sp], #32
    9710:	ret
    9714:	sub	sp, sp, #0x50
    9718:	stp	x29, x30, [sp, #32]
    971c:	str	x21, [sp, #48]
    9720:	stp	x20, x19, [sp, #64]
    9724:	add	x29, sp, #0x20
    9728:	ldr	x20, [x1, #16]
    972c:	mov	x19, x0
    9730:	cbz	x2, 9744 <PyInit__elementtree@@Base+0x5420>
    9734:	ldr	x21, [x2, #16]
    9738:	add	x0, x1, #0x18
    973c:	cbz	x2, 9750 <PyInit__elementtree@@Base+0x542c>
    9740:	b	975c <PyInit__elementtree@@Base+0x5438>
    9744:	mov	x21, xzr
    9748:	add	x0, x1, #0x18
    974c:	cbnz	x2, 975c <PyInit__elementtree@@Base+0x5438>
    9750:	cbnz	x20, 975c <PyInit__elementtree@@Base+0x5438>
    9754:	cbnz	x0, 9788 <PyInit__elementtree@@Base+0x5464>
    9758:	b	9838 <PyInit__elementtree@@Base+0x5514>
    975c:	adrp	x4, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9760:	add	x8, sp, #0x10
    9764:	add	x4, x4, #0x3b8
    9768:	mov	x1, x20
    976c:	mov	x3, xzr
    9770:	mov	w5, wzr
    9774:	mov	w6, wzr
    9778:	mov	w7, wzr
    977c:	str	x8, [sp]
    9780:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    9784:	cbz	x0, 9838 <PyInit__elementtree@@Base+0x5514>
    9788:	add	x8, x21, x20
    978c:	cbz	x8, 97e0 <PyInit__elementtree@@Base+0x54bc>
    9790:	ldr	x20, [x0]
    9794:	cbz	x20, 97a0 <PyInit__elementtree@@Base+0x547c>
    9798:	cmp	x8, #0x1
    979c:	b.eq	97e4 <PyInit__elementtree@@Base+0x54c0>  // b.none
    97a0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    97a4:	ldr	x3, [x0, #8]
    97a8:	ldr	x8, [x8, #3976]
    97ac:	cmp	x3, x8
    97b0:	b.eq	97e4 <PyInit__elementtree@@Base+0x54c0>  // b.none
    97b4:	ldr	x8, [x3, #8]
    97b8:	ldrb	w8, [x8, #171]
    97bc:	tbnz	w8, #4, 97fc <PyInit__elementtree@@Base+0x54d8>
    97c0:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    97c4:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    97c8:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    97cc:	add	x0, x0, #0x92a
    97d0:	add	x1, x1, #0xa96
    97d4:	add	x2, x2, #0xaaa
    97d8:	bl	3ed0 <_PyArg_BadArgument@plt>
    97dc:	b	9838 <PyInit__elementtree@@Base+0x5514>
    97e0:	mov	x20, xzr
    97e4:	mov	x21, xzr
    97e8:	mov	x0, x19
    97ec:	mov	x1, x20
    97f0:	mov	x2, x21
    97f4:	bl	a77c <PyInit__elementtree@@Base+0x6458>
    97f8:	b	983c <PyInit__elementtree@@Base+0x5518>
    97fc:	ldr	x0, [x0, #8]
    9800:	add	x1, x29, #0x18
    9804:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    9808:	cbz	x0, 9838 <PyInit__elementtree@@Base+0x5514>
    980c:	mov	x21, x0
    9810:	bl	3c70 <strlen@plt>
    9814:	ldr	x8, [x29, #24]
    9818:	cmp	x0, x8
    981c:	b.eq	97e8 <PyInit__elementtree@@Base+0x54c4>  // b.none
    9820:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9824:	ldr	x8, [x8, #3928]
    9828:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    982c:	add	x1, x1, #0xa7e
    9830:	ldr	x0, [x8]
    9834:	bl	3de0 <PyErr_SetString@plt>
    9838:	mov	w0, #0xffffffff            	// #-1
    983c:	ldp	x20, x19, [sp, #64]
    9840:	ldr	x21, [sp, #48]
    9844:	ldp	x29, x30, [sp, #32]
    9848:	add	sp, sp, #0x50
    984c:	ret
    9850:	stp	x29, x30, [sp, #-16]!
    9854:	mov	x29, sp
    9858:	ldr	x8, [x0, #304]
    985c:	mov	x1, xzr
    9860:	blr	x8
    9864:	cbz	x0, 987c <PyInit__elementtree@@Base+0x5558>
    9868:	movi	v0.2d, #0x0
    986c:	str	xzr, [x0, #112]
    9870:	stp	q0, q0, [x0, #80]
    9874:	stp	q0, q0, [x0, #48]
    9878:	stp	q0, q0, [x0, #16]
    987c:	ldp	x29, x30, [sp], #16
    9880:	ret
    9884:	sub	sp, sp, #0x70
    9888:	stp	x29, x30, [sp, #80]
    988c:	stp	x20, x19, [sp, #96]
    9890:	add	x29, sp, #0x50
    9894:	ldr	x9, [x1, #8]
    9898:	mov	x8, x1
    989c:	mov	x19, x0
    98a0:	mov	x1, sp
    98a4:	ldrb	w9, [x9, #171]
    98a8:	mov	x0, x8
    98ac:	tbnz	w9, #4, 98d8 <PyInit__elementtree@@Base+0x55b4>
    98b0:	mov	w2, wzr
    98b4:	bl	40a0 <PyObject_GetBuffer@plt>
    98b8:	tbnz	w0, #31, 9908 <PyInit__elementtree@@Base+0x55e4>
    98bc:	ldr	x2, [sp, #16]
    98c0:	mov	w8, #0x80000000            	// #-2147483648
    98c4:	cmp	x2, x8
    98c8:	b.lt	9910 <PyInit__elementtree@@Base+0x55ec>  // b.tstop
    98cc:	mov	x0, sp
    98d0:	bl	3ce0 <PyBuffer_Release@plt>
    98d4:	b	98f0 <PyInit__elementtree@@Base+0x55cc>
    98d8:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    98dc:	cbz	x0, 9908 <PyInit__elementtree@@Base+0x55e4>
    98e0:	ldr	x8, [sp]
    98e4:	mov	w9, #0x80000000            	// #-2147483648
    98e8:	cmp	x8, x9
    98ec:	b.lt	9930 <PyInit__elementtree@@Base+0x560c>  // b.tstop
    98f0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    98f4:	ldr	x8, [x8, #3968]
    98f8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    98fc:	add	x1, x1, #0x951
    9900:	ldr	x0, [x8]
    9904:	bl	3de0 <PyErr_SetString@plt>
    9908:	mov	x19, xzr
    990c:	b	9968 <PyInit__elementtree@@Base+0x5644>
    9910:	ldr	x1, [sp]
    9914:	mov	x0, x19
    9918:	mov	w3, wzr
    991c:	bl	9bd0 <PyInit__elementtree@@Base+0x58ac>
    9920:	mov	x19, x0
    9924:	mov	x0, sp
    9928:	bl	3ce0 <PyBuffer_Release@plt>
    992c:	b	9968 <PyInit__elementtree@@Base+0x5644>
    9930:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9934:	ldr	x8, [x8, #1072]
    9938:	mov	x20, x0
    993c:	ldr	x0, [x19, #16]
    9940:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9944:	ldr	x8, [x8, #152]
    9948:	add	x1, x1, #0x96d
    994c:	blr	x8
    9950:	ldr	w2, [sp]
    9954:	mov	x0, x19
    9958:	mov	x1, x20
    995c:	mov	w3, wzr
    9960:	bl	9bd0 <PyInit__elementtree@@Base+0x58ac>
    9964:	mov	x19, x0
    9968:	mov	x0, x19
    996c:	ldp	x20, x19, [sp, #96]
    9970:	ldp	x29, x30, [sp, #80]
    9974:	add	sp, sp, #0x70
    9978:	ret
    997c:	stp	x29, x30, [sp, #-16]!
    9980:	mov	x29, sp
    9984:	bl	9de0 <PyInit__elementtree@@Base+0x5abc>
    9988:	ldp	x29, x30, [sp], #16
    998c:	ret
    9990:	stp	x29, x30, [sp, #-96]!
    9994:	stp	x28, x27, [sp, #16]
    9998:	stp	x26, x25, [sp, #32]
    999c:	stp	x24, x23, [sp, #48]
    99a0:	stp	x22, x21, [sp, #64]
    99a4:	stp	x20, x19, [sp, #80]
    99a8:	mov	x29, sp
    99ac:	mov	x8, x1
    99b0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    99b4:	mov	x19, x0
    99b8:	add	x1, x1, #0x99f
    99bc:	mov	x0, x8
    99c0:	bl	3d00 <PyObject_GetAttrString@plt>
    99c4:	cbz	x0, 9ab4 <PyInit__elementtree@@Base+0x5790>
    99c8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    99cc:	add	x1, x1, #0x3bf
    99d0:	mov	w2, #0x10000               	// #65536
    99d4:	mov	x20, x0
    99d8:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    99dc:	cbz	x0, 9aa8 <PyInit__elementtree@@Base+0x5784>
    99e0:	adrp	x26, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    99e4:	adrp	x28, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    99e8:	ldr	x26, [x26, #4032]
    99ec:	ldr	x28, [x28, #3912]
    99f0:	adrp	x21, b000 <PyInit__elementtree@@Base+0x6cdc>
    99f4:	adrp	x22, b000 <PyInit__elementtree@@Base+0x6cdc>
    99f8:	adrp	x23, b000 <PyInit__elementtree@@Base+0x6cdc>
    99fc:	mov	x24, x0
    9a00:	add	x21, x21, #0x96d
    9a04:	add	x22, x22, #0x9a4
    9a08:	mov	w27, #0x80000000            	// #-2147483648
    9a0c:	add	x23, x23, #0x3bf
    9a10:	ldr	x8, [x24, #8]
    9a14:	cmp	x8, x26
    9a18:	b.eq	9a30 <PyInit__elementtree@@Base+0x570c>  // b.none
    9a1c:	cmp	x8, x28
    9a20:	b.ne	9ad0 <PyInit__elementtree@@Base+0x57ac>  // b.any
    9a24:	ldr	x8, [x24, #16]
    9a28:	cbnz	x8, 9a5c <PyInit__elementtree@@Base+0x5738>
    9a2c:	b	9ad0 <PyInit__elementtree@@Base+0x57ac>
    9a30:	ldr	x8, [x24, #16]
    9a34:	cbz	x8, 9ad0 <PyInit__elementtree@@Base+0x57ac>
    9a38:	mov	x0, x24
    9a3c:	mov	x1, x21
    9a40:	mov	x2, x22
    9a44:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    9a48:	mov	x25, x0
    9a4c:	mov	x0, x24
    9a50:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9a54:	mov	x24, x25
    9a58:	cbz	x25, 9aa8 <PyInit__elementtree@@Base+0x5784>
    9a5c:	ldr	x2, [x24, #16]
    9a60:	cmp	x2, x27
    9a64:	b.ge	9b24 <PyInit__elementtree@@Base+0x5800>  // b.tcont
    9a68:	add	x1, x24, #0x20
    9a6c:	mov	x0, x19
    9a70:	mov	w3, wzr
    9a74:	bl	9bd0 <PyInit__elementtree@@Base+0x58ac>
    9a78:	mov	x25, x0
    9a7c:	mov	x0, x24
    9a80:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9a84:	cbz	x25, 9aa8 <PyInit__elementtree@@Base+0x5784>
    9a88:	mov	x0, x25
    9a8c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9a90:	mov	w2, #0x10000               	// #65536
    9a94:	mov	x0, x20
    9a98:	mov	x1, x23
    9a9c:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    9aa0:	mov	x24, x0
    9aa4:	cbnz	x0, 9a10 <PyInit__elementtree@@Base+0x56ec>
    9aa8:	mov	x0, x20
    9aac:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9ab0:	mov	x0, xzr
    9ab4:	ldp	x20, x19, [sp, #80]
    9ab8:	ldp	x22, x21, [sp, #64]
    9abc:	ldp	x24, x23, [sp, #48]
    9ac0:	ldp	x26, x25, [sp, #32]
    9ac4:	ldp	x28, x27, [sp, #16]
    9ac8:	ldp	x29, x30, [sp], #96
    9acc:	ret
    9ad0:	mov	x0, x24
    9ad4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9ad8:	mov	x0, x20
    9adc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9ae0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9ae4:	add	x1, x1, #0x52d
    9ae8:	mov	w3, #0x1                   	// #1
    9aec:	mov	x0, x19
    9af0:	mov	w2, wzr
    9af4:	bl	9bd0 <PyInit__elementtree@@Base+0x58ac>
    9af8:	cbz	x0, 9ab4 <PyInit__elementtree@@Base+0x5790>
    9afc:	ldr	x8, [x19, #24]
    9b00:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    9b04:	add	x9, x9, #0x528
    9b08:	ldr	x8, [x8, #8]
    9b0c:	cmp	x8, x9
    9b10:	b.ne	9ab4 <PyInit__elementtree@@Base+0x5790>  // b.any
    9b14:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9b18:	ldr	x0, [x19, #24]
    9b1c:	bl	61e4 <PyInit__elementtree@@Base+0x1ec0>
    9b20:	b	9ab4 <PyInit__elementtree@@Base+0x5790>
    9b24:	mov	x0, x24
    9b28:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9b2c:	mov	x0, x20
    9b30:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9b34:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9b38:	ldr	x8, [x8, #3968]
    9b3c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9b40:	add	x1, x1, #0x951
    9b44:	ldr	x0, [x8]
    9b48:	bl	3de0 <PyErr_SetString@plt>
    9b4c:	b	9ab0 <PyInit__elementtree@@Base+0x578c>
    9b50:	stp	x29, x30, [sp, #-48]!
    9b54:	str	x21, [sp, #16]
    9b58:	stp	x20, x19, [sp, #32]
    9b5c:	mov	x29, sp
    9b60:	sub	x8, x2, #0x1
    9b64:	mov	x21, x2
    9b68:	mov	x20, x1
    9b6c:	cmp	x8, #0x2
    9b70:	mov	x19, x0
    9b74:	b.cc	9b94 <PyInit__elementtree@@Base+0x5870>  // b.lo, b.ul, b.last
    9b78:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    9b7c:	add	x0, x0, #0x946
    9b80:	mov	w2, #0x1                   	// #1
    9b84:	mov	w3, #0x2                   	// #2
    9b88:	mov	x1, x21
    9b8c:	bl	3f60 <_PyArg_CheckPositional@plt>
    9b90:	cbz	w0, 9bbc <PyInit__elementtree@@Base+0x5898>
    9b94:	ldr	x1, [x20]
    9b98:	cmp	x21, #0x2
    9b9c:	b.ge	9bac <PyInit__elementtree@@Base+0x5888>  // b.tcont
    9ba0:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9ba4:	ldr	x2, [x2, #3976]
    9ba8:	b	9bb0 <PyInit__elementtree@@Base+0x588c>
    9bac:	ldr	x2, [x20, #8]
    9bb0:	mov	x0, x19
    9bb4:	bl	9e6c <PyInit__elementtree@@Base+0x5b48>
    9bb8:	b	9bc0 <PyInit__elementtree@@Base+0x589c>
    9bbc:	mov	x0, xzr
    9bc0:	ldp	x20, x19, [sp, #32]
    9bc4:	ldr	x21, [sp, #16]
    9bc8:	ldp	x29, x30, [sp], #48
    9bcc:	ret
    9bd0:	stp	x29, x30, [sp, #-48]!
    9bd4:	str	x21, [sp, #16]
    9bd8:	stp	x20, x19, [sp, #32]
    9bdc:	mov	x29, sp
    9be0:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9be4:	ldr	x8, [x21, #1072]
    9be8:	mov	x19, x0
    9bec:	ldr	x0, [x0, #16]
    9bf0:	ldr	x8, [x8, #56]
    9bf4:	blr	x8
    9bf8:	mov	w20, w0
    9bfc:	bl	3f80 <PyErr_Occurred@plt>
    9c00:	cbz	x0, 9c0c <PyInit__elementtree@@Base+0x58e8>
    9c04:	mov	x19, xzr
    9c08:	b	9c20 <PyInit__elementtree@@Base+0x58fc>
    9c0c:	cbz	w20, 9c34 <PyInit__elementtree@@Base+0x5910>
    9c10:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9c14:	ldr	x19, [x19, #3976]
    9c18:	mov	x0, x19
    9c1c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    9c20:	mov	x0, x19
    9c24:	ldp	x20, x19, [sp, #32]
    9c28:	ldr	x21, [sp, #16]
    9c2c:	ldp	x29, x30, [sp], #48
    9c30:	ret
    9c34:	ldr	x8, [x21, #1072]
    9c38:	ldr	x0, [x19, #16]
    9c3c:	ldr	x8, [x8, #32]
    9c40:	blr	x8
    9c44:	ldr	x8, [x21, #1072]
    9c48:	mov	w20, w0
    9c4c:	ldr	x9, [x8, #48]
    9c50:	ldr	x8, [x19, #16]
    9c54:	mov	x0, x8
    9c58:	blr	x9
    9c5c:	ldr	x8, [x21, #1072]
    9c60:	ldr	x9, [x8, #40]
    9c64:	ldr	x8, [x19, #16]
    9c68:	mov	x19, x0
    9c6c:	mov	x0, x8
    9c70:	blr	x9
    9c74:	mov	x2, x0
    9c78:	mov	w0, w20
    9c7c:	mov	x1, x19
    9c80:	mov	x3, xzr
    9c84:	bl	9c8c <PyInit__elementtree@@Base+0x5968>
    9c88:	b	9c04 <PyInit__elementtree@@Base+0x58e0>
    9c8c:	stp	x29, x30, [sp, #-64]!
    9c90:	str	x23, [sp, #16]
    9c94:	stp	x22, x21, [sp, #32]
    9c98:	stp	x20, x19, [sp, #48]
    9c9c:	mov	x29, sp
    9ca0:	mov	w23, w0
    9ca4:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    9ca8:	add	x0, x0, #0x320
    9cac:	mov	x22, x3
    9cb0:	mov	x20, x2
    9cb4:	mov	x21, x1
    9cb8:	bl	3fc0 <PyState_FindModule@plt>
    9cbc:	bl	3e10 <PyModule_GetState@plt>
    9cc0:	mov	x19, x0
    9cc4:	cbnz	x22, 9ce0 <PyInit__elementtree@@Base+0x59bc>
    9cc8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    9ccc:	ldr	x8, [x8, #1072]
    9cd0:	mov	w0, w23
    9cd4:	ldr	x8, [x8, #24]
    9cd8:	blr	x8
    9cdc:	mov	x22, x0
    9ce0:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    9ce4:	add	x0, x0, #0x973
    9ce8:	mov	x1, x22
    9cec:	mov	x2, x21
    9cf0:	mov	x3, x20
    9cf4:	bl	3c30 <PyUnicode_FromFormat@plt>
    9cf8:	str	x0, [x29, #24]
    9cfc:	cbz	x0, 9dcc <PyInit__elementtree@@Base+0x5aa8>
    9d00:	ldr	x0, [x19]
    9d04:	add	x1, x29, #0x18
    9d08:	mov	w2, #0x1                   	// #1
    9d0c:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    9d10:	ldr	x8, [x29, #24]
    9d14:	mov	x22, x0
    9d18:	mov	x0, x8
    9d1c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9d20:	cbz	x22, 9dcc <PyInit__elementtree@@Base+0x5aa8>
    9d24:	mov	w0, w23
    9d28:	bl	3ea0 <PyLong_FromLong@plt>
    9d2c:	cbz	x0, 9da4 <PyInit__elementtree@@Base+0x5a80>
    9d30:	mov	x23, x0
    9d34:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9d38:	add	x1, x1, #0x98c
    9d3c:	mov	x0, x22
    9d40:	mov	x2, x23
    9d44:	bl	3d50 <PyObject_SetAttrString@plt>
    9d48:	cmn	w0, #0x1
    9d4c:	b.eq	9dac <PyInit__elementtree@@Base+0x5a88>  // b.none
    9d50:	mov	x0, x23
    9d54:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9d58:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    9d5c:	add	x0, x0, #0x991
    9d60:	mov	x1, x21
    9d64:	mov	x2, x20
    9d68:	bl	4190 <_Py_BuildValue_SizeT@plt>
    9d6c:	cbz	x0, 9da4 <PyInit__elementtree@@Base+0x5a80>
    9d70:	mov	x20, x0
    9d74:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9d78:	add	x1, x1, #0x996
    9d7c:	mov	x0, x22
    9d80:	mov	x2, x20
    9d84:	bl	3d50 <PyObject_SetAttrString@plt>
    9d88:	cmn	w0, #0x1
    9d8c:	b.eq	9dbc <PyInit__elementtree@@Base+0x5a98>  // b.none
    9d90:	mov	x0, x20
    9d94:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9d98:	ldr	x0, [x19]
    9d9c:	mov	x1, x22
    9da0:	bl	3d90 <PyErr_SetObject@plt>
    9da4:	mov	x0, x22
    9da8:	b	9dc8 <PyInit__elementtree@@Base+0x5aa4>
    9dac:	mov	x0, x22
    9db0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9db4:	mov	x0, x23
    9db8:	b	9dc8 <PyInit__elementtree@@Base+0x5aa4>
    9dbc:	mov	x0, x22
    9dc0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9dc4:	mov	x0, x20
    9dc8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9dcc:	ldp	x20, x19, [sp, #48]
    9dd0:	ldp	x22, x21, [sp, #32]
    9dd4:	ldr	x23, [sp, #16]
    9dd8:	ldp	x29, x30, [sp], #64
    9ddc:	ret
    9de0:	stp	x29, x30, [sp, #-32]!
    9de4:	str	x19, [sp, #16]
    9de8:	mov	x29, sp
    9dec:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9df0:	add	x1, x1, #0x52d
    9df4:	mov	w3, #0x1                   	// #1
    9df8:	mov	w2, wzr
    9dfc:	mov	x19, x0
    9e00:	bl	9bd0 <PyInit__elementtree@@Base+0x58ac>
    9e04:	cbz	x0, 9e44 <PyInit__elementtree@@Base+0x5b20>
    9e08:	ldr	x8, [x19, #24]
    9e0c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    9e10:	add	x9, x9, #0x528
    9e14:	ldr	x8, [x8, #8]
    9e18:	cmp	x8, x9
    9e1c:	b.eq	9e38 <PyInit__elementtree@@Base+0x5b14>  // b.none
    9e20:	ldr	x8, [x19, #112]
    9e24:	cbz	x8, 9e44 <PyInit__elementtree@@Base+0x5b20>
    9e28:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9e2c:	ldr	x0, [x19, #112]
    9e30:	bl	9e50 <PyInit__elementtree@@Base+0x5b2c>
    9e34:	b	9e44 <PyInit__elementtree@@Base+0x5b20>
    9e38:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9e3c:	ldr	x0, [x19, #24]
    9e40:	bl	61e4 <PyInit__elementtree@@Base+0x1ec0>
    9e44:	ldr	x19, [sp, #16]
    9e48:	ldp	x29, x30, [sp], #32
    9e4c:	ret
    9e50:	stp	x29, x30, [sp, #-16]!
    9e54:	mov	x29, sp
    9e58:	mov	x1, xzr
    9e5c:	mov	x2, xzr
    9e60:	bl	5ec4 <PyInit__elementtree@@Base+0x1ba0>
    9e64:	ldp	x29, x30, [sp], #16
    9e68:	ret
    9e6c:	stp	x29, x30, [sp, #-96]!
    9e70:	stp	x28, x27, [sp, #16]
    9e74:	stp	x26, x25, [sp, #32]
    9e78:	stp	x24, x23, [sp, #48]
    9e7c:	stp	x22, x21, [sp, #64]
    9e80:	stp	x20, x19, [sp, #80]
    9e84:	mov	x29, sp
    9e88:	ldr	x24, [x0, #24]
    9e8c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    9e90:	add	x9, x9, #0x528
    9e94:	ldr	x8, [x24, #8]
    9e98:	cmp	x8, x9
    9e9c:	b.eq	9edc <PyInit__elementtree@@Base+0x5bb8>  // b.none
    9ea0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9ea4:	ldr	x8, [x8, #3944]
    9ea8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9eac:	add	x1, x1, #0x9b2
    9eb0:	ldr	x0, [x8]
    9eb4:	bl	3de0 <PyErr_SetString@plt>
    9eb8:	mov	x19, xzr
    9ebc:	mov	x0, x19
    9ec0:	ldp	x20, x19, [sp, #80]
    9ec4:	ldp	x22, x21, [sp, #64]
    9ec8:	ldp	x24, x23, [sp, #48]
    9ecc:	ldp	x26, x25, [sp, #32]
    9ed0:	ldp	x28, x27, [sp, #16]
    9ed4:	ldp	x29, x30, [sp], #96
    9ed8:	ret
    9edc:	adrp	x8, b000 <PyInit__elementtree@@Base+0x6cdc>
    9ee0:	add	x8, x8, #0x3eb
    9ee4:	mov	x19, x0
    9ee8:	mov	x0, x1
    9eec:	mov	x1, x8
    9ef0:	mov	x20, x2
    9ef4:	bl	3d00 <PyObject_GetAttrString@plt>
    9ef8:	cbz	x0, 9eb8 <PyInit__elementtree@@Base+0x5b94>
    9efc:	ldr	x8, [x24, #96]
    9f00:	str	x0, [x24, #96]
    9f04:	mov	x0, x8
    9f08:	bl	4548 <PyInit__elementtree@@Base+0x224>
    9f0c:	ldr	x0, [x24, #104]
    9f10:	cbz	x0, 9f1c <PyInit__elementtree@@Base+0x5bf8>
    9f14:	str	xzr, [x24, #104]
    9f18:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f1c:	ldr	x0, [x24, #112]
    9f20:	cbz	x0, 9f2c <PyInit__elementtree@@Base+0x5c08>
    9f24:	str	xzr, [x24, #112]
    9f28:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f2c:	ldr	x0, [x24, #120]
    9f30:	cbz	x0, 9f3c <PyInit__elementtree@@Base+0x5c18>
    9f34:	str	xzr, [x24, #120]
    9f38:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f3c:	ldr	x0, [x24, #128]
    9f40:	cbz	x0, 9f4c <PyInit__elementtree@@Base+0x5c28>
    9f44:	str	xzr, [x24, #128]
    9f48:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f4c:	ldr	x0, [x24, #136]
    9f50:	cbz	x0, 9f5c <PyInit__elementtree@@Base+0x5c38>
    9f54:	str	xzr, [x24, #136]
    9f58:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f5c:	ldr	x0, [x24, #144]
    9f60:	cbz	x0, 9f6c <PyInit__elementtree@@Base+0x5c48>
    9f64:	str	xzr, [x24, #144]
    9f68:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    9f6c:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    9f70:	ldr	x8, [x8, #3976]
    9f74:	cmp	x20, x8
    9f78:	b.eq	a14c <PyInit__elementtree@@Base+0x5e28>  // b.none
    9f7c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    9f80:	add	x1, x1, #0x9f4
    9f84:	mov	x0, x20
    9f88:	bl	4240 <PySequence_Fast@plt>
    9f8c:	cbz	x0, 9eb8 <PyInit__elementtree@@Base+0x5b94>
    9f90:	ldr	x8, [x0, #16]
    9f94:	mov	x20, x0
    9f98:	cmp	x8, #0x1
    9f9c:	b.lt	a160 <PyInit__elementtree@@Base+0x5e3c>  // b.tstop
    9fa0:	adrp	x21, b000 <PyInit__elementtree@@Base+0x6cdc>
    9fa4:	adrp	x22, b000 <PyInit__elementtree@@Base+0x6cdc>
    9fa8:	adrp	x23, b000 <PyInit__elementtree@@Base+0x6cdc>
    9fac:	mov	x25, xzr
    9fb0:	add	x26, x20, #0x18
    9fb4:	add	x21, x21, #0x3b0
    9fb8:	add	x22, x22, #0x3ee
    9fbc:	add	x23, x23, #0xa26
    9fc0:	b	9fe4 <PyInit__elementtree@@Base+0x5cc0>
    9fc4:	ldr	x0, [x24, #104]
    9fc8:	str	x28, [x24, #104]
    9fcc:	bl	4548 <PyInit__elementtree@@Base+0x224>
    9fd0:	ldr	x8, [x20, #16]
    9fd4:	add	x25, x25, #0x1
    9fd8:	add	x26, x26, #0x8
    9fdc:	cmp	x25, x8
    9fe0:	b.ge	a160 <PyInit__elementtree@@Base+0x5e3c>  // b.tcont
    9fe4:	ldr	x8, [x20, #8]
    9fe8:	ldrb	w9, [x8, #171]
    9fec:	mov	x8, x26
    9ff0:	tbz	w9, #1, 9ffc <PyInit__elementtree@@Base+0x5cd8>
    9ff4:	ldr	x8, [x20, #24]
    9ff8:	add	x8, x8, x25, lsl #3
    9ffc:	ldr	x28, [x8]
    a000:	ldr	x8, [x28, #8]
    a004:	ldr	x8, [x8, #168]
    a008:	tbnz	w8, #28, a01c <PyInit__elementtree@@Base+0x5cf8>
    a00c:	tbnz	w8, #27, a030 <PyInit__elementtree@@Base+0x5d0c>
    a010:	mov	x27, xzr
    a014:	cbnz	x27, a038 <PyInit__elementtree@@Base+0x5d14>
    a018:	b	a17c <PyInit__elementtree@@Base+0x5e58>
    a01c:	mov	x0, x28
    a020:	bl	40c0 <PyUnicode_AsUTF8@plt>
    a024:	mov	x27, x0
    a028:	cbnz	x27, a038 <PyInit__elementtree@@Base+0x5d14>
    a02c:	b	a17c <PyInit__elementtree@@Base+0x5e58>
    a030:	add	x27, x28, #0x20
    a034:	cbz	x27, a17c <PyInit__elementtree@@Base+0x5e58>
    a038:	mov	x0, x28
    a03c:	bl	4538 <PyInit__elementtree@@Base+0x214>
    a040:	mov	x0, x27
    a044:	mov	x1, x21
    a048:	bl	3ff0 <strcmp@plt>
    a04c:	cbz	w0, 9fc4 <PyInit__elementtree@@Base+0x5ca0>
    a050:	mov	x0, x27
    a054:	mov	x1, x22
    a058:	bl	3ff0 <strcmp@plt>
    a05c:	cbz	w0, a0d4 <PyInit__elementtree@@Base+0x5db0>
    a060:	mov	x0, x27
    a064:	mov	x1, x23
    a068:	bl	3ff0 <strcmp@plt>
    a06c:	cbz	w0, a0e0 <PyInit__elementtree@@Base+0x5dbc>
    a070:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a074:	mov	x0, x27
    a078:	add	x1, x1, #0xa2f
    a07c:	bl	3ff0 <strcmp@plt>
    a080:	cbz	w0, a0ec <PyInit__elementtree@@Base+0x5dc8>
    a084:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a088:	mov	x0, x27
    a08c:	add	x1, x1, #0x3b6
    a090:	bl	3ff0 <strcmp@plt>
    a094:	cbz	w0, a120 <PyInit__elementtree@@Base+0x5dfc>
    a098:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a09c:	mov	x0, x27
    a0a0:	add	x1, x1, #0x3be
    a0a4:	bl	3ff0 <strcmp@plt>
    a0a8:	cbnz	w0, a1a0 <PyInit__elementtree@@Base+0x5e7c>
    a0ac:	ldr	x0, [x24, #144]
    a0b0:	str	x28, [x24, #144]
    a0b4:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a0b8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a0bc:	ldr	x8, [x8, #1072]
    a0c0:	ldr	x0, [x19, #16]
    a0c4:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a0c8:	add	x1, x1, #0x50c
    a0cc:	ldr	x8, [x8, #120]
    a0d0:	b	a144 <PyInit__elementtree@@Base+0x5e20>
    a0d4:	ldr	x0, [x24, #112]
    a0d8:	str	x28, [x24, #112]
    a0dc:	b	9fcc <PyInit__elementtree@@Base+0x5ca8>
    a0e0:	ldr	x0, [x24, #120]
    a0e4:	str	x28, [x24, #120]
    a0e8:	b	a0f4 <PyInit__elementtree@@Base+0x5dd0>
    a0ec:	ldr	x0, [x24, #128]
    a0f0:	str	x28, [x24, #128]
    a0f4:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a0f8:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a0fc:	ldr	x8, [x8, #1072]
    a100:	ldr	x0, [x19, #16]
    a104:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a108:	adrp	x2, a000 <PyInit__elementtree@@Base+0x5cdc>
    a10c:	ldr	x8, [x8, #112]
    a110:	add	x1, x1, #0x1d0
    a114:	add	x2, x2, #0x378
    a118:	blr	x8
    a11c:	b	9fd0 <PyInit__elementtree@@Base+0x5cac>
    a120:	ldr	x0, [x24, #136]
    a124:	str	x28, [x24, #136]
    a128:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a12c:	adrp	x8, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a130:	ldr	x8, [x8, #1072]
    a134:	ldr	x0, [x19, #16]
    a138:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a13c:	add	x1, x1, #0x448
    a140:	ldr	x8, [x8, #88]
    a144:	blr	x8
    a148:	b	9fd0 <PyInit__elementtree@@Base+0x5cac>
    a14c:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    a150:	add	x0, x0, #0x3ee
    a154:	bl	4100 <PyUnicode_FromString@plt>
    a158:	str	x0, [x24, #112]
    a15c:	b	a168 <PyInit__elementtree@@Base+0x5e44>
    a160:	mov	x0, x20
    a164:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a168:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a16c:	ldr	x19, [x19, #3976]
    a170:	mov	x0, x19
    a174:	bl	4538 <PyInit__elementtree@@Base+0x214>
    a178:	b	9ebc <PyInit__elementtree@@Base+0x5b98>
    a17c:	mov	x0, x20
    a180:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a184:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a188:	ldr	x8, [x8, #3928]
    a18c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a190:	add	x1, x1, #0xa0e
    a194:	ldr	x0, [x8]
    a198:	bl	4180 <PyErr_Format@plt>
    a19c:	b	9eb8 <PyInit__elementtree@@Base+0x5b94>
    a1a0:	mov	x0, x28
    a1a4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a1a8:	mov	x0, x20
    a1ac:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a1b0:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a1b4:	ldr	x8, [x8, #3928]
    a1b8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a1bc:	add	x1, x1, #0xa36
    a1c0:	mov	x2, x27
    a1c4:	ldr	x0, [x8]
    a1c8:	bl	4180 <PyErr_Format@plt>
    a1cc:	b	9eb8 <PyInit__elementtree@@Base+0x5b94>
    a1d0:	sub	sp, sp, #0x40
    a1d4:	stp	x29, x30, [sp, #16]
    a1d8:	stp	x22, x21, [sp, #32]
    a1dc:	stp	x20, x19, [sp, #48]
    a1e0:	add	x29, sp, #0x10
    a1e4:	mov	x19, x2
    a1e8:	mov	x22, x1
    a1ec:	mov	x20, x0
    a1f0:	bl	3f80 <PyErr_Occurred@plt>
    a1f4:	cbnz	x0, a364 <PyInit__elementtree@@Base+0x6040>
    a1f8:	ldr	x21, [x20, #24]
    a1fc:	adrp	x8, b000 <PyInit__elementtree@@Base+0x6cdc>
    a200:	add	x8, x8, #0x52d
    a204:	cmp	x19, #0x0
    a208:	ldr	x9, [x21, #8]
    a20c:	csel	x19, x8, x19, eq  // eq = none
    a210:	cmp	x22, #0x0
    a214:	csel	x22, x8, x22, eq  // eq = none
    a218:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    a21c:	add	x8, x8, #0x528
    a220:	cmp	x9, x8
    a224:	b.eq	a2a4 <PyInit__elementtree@@Base+0x5f80>  // b.none
    a228:	ldr	x8, [x20, #48]
    a22c:	cbz	x8, a324 <PyInit__elementtree@@Base+0x6000>
    a230:	mov	x0, x22
    a234:	bl	3c70 <strlen@plt>
    a238:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a23c:	mov	x1, x0
    a240:	add	x2, x2, #0xa49
    a244:	mov	x0, x22
    a248:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a24c:	cbz	x0, a364 <PyInit__elementtree@@Base+0x6040>
    a250:	mov	x21, x0
    a254:	mov	x0, x19
    a258:	bl	3c70 <strlen@plt>
    a25c:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a260:	mov	x1, x0
    a264:	add	x2, x2, #0xa49
    a268:	mov	x0, x19
    a26c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a270:	cbz	x0, a33c <PyInit__elementtree@@Base+0x6018>
    a274:	stp	x21, x0, [sp]
    a278:	mov	x22, x0
    a27c:	ldr	x0, [x20, #48]
    a280:	mov	x1, sp
    a284:	mov	w2, #0x2                   	// #2
    a288:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    a28c:	mov	x19, x0
    a290:	mov	x0, x22
    a294:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a298:	mov	x0, x21
    a29c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a2a0:	b	a35c <PyInit__elementtree@@Base+0x6038>
    a2a4:	ldr	x8, [x21, #96]
    a2a8:	cbz	x8, a32c <PyInit__elementtree@@Base+0x6008>
    a2ac:	ldr	x8, [x21, #120]
    a2b0:	cbz	x8, a32c <PyInit__elementtree@@Base+0x6008>
    a2b4:	mov	x0, x22
    a2b8:	bl	3c70 <strlen@plt>
    a2bc:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a2c0:	mov	x1, x0
    a2c4:	add	x2, x2, #0xa49
    a2c8:	mov	x0, x22
    a2cc:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a2d0:	cbz	x0, a350 <PyInit__elementtree@@Base+0x602c>
    a2d4:	mov	x20, x0
    a2d8:	mov	x0, x19
    a2dc:	bl	3c70 <strlen@plt>
    a2e0:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a2e4:	mov	x1, x0
    a2e8:	add	x2, x2, #0xa49
    a2ec:	mov	x0, x19
    a2f0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a2f4:	cbz	x0, a348 <PyInit__elementtree@@Base+0x6024>
    a2f8:	mov	x22, x0
    a2fc:	mov	x0, x21
    a300:	mov	x1, x20
    a304:	mov	x2, x22
    a308:	bl	a688 <PyInit__elementtree@@Base+0x6364>
    a30c:	mov	x19, x0
    a310:	mov	x0, x22
    a314:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a318:	mov	x0, x20
    a31c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a320:	b	a330 <PyInit__elementtree@@Base+0x600c>
    a324:	mov	x19, xzr
    a328:	b	a35c <PyInit__elementtree@@Base+0x6038>
    a32c:	mov	x19, xzr
    a330:	mov	w8, #0x1                   	// #1
    a334:	tbnz	w8, #0, a35c <PyInit__elementtree@@Base+0x6038>
    a338:	b	a364 <PyInit__elementtree@@Base+0x6040>
    a33c:	mov	x0, x21
    a340:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a344:	b	a364 <PyInit__elementtree@@Base+0x6040>
    a348:	mov	x0, x20
    a34c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a350:	mov	x19, xzr
    a354:	mov	w8, wzr
    a358:	tbz	wzr, #0, a364 <PyInit__elementtree@@Base+0x6040>
    a35c:	mov	x0, x19
    a360:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a364:	ldp	x20, x19, [sp, #48]
    a368:	ldp	x22, x21, [sp, #32]
    a36c:	ldp	x29, x30, [sp, #16]
    a370:	add	sp, sp, #0x40
    a374:	ret
    a378:	sub	sp, sp, #0x30
    a37c:	stp	x29, x30, [sp, #16]
    a380:	stp	x20, x19, [sp, #32]
    a384:	add	x29, sp, #0x10
    a388:	mov	x20, x1
    a38c:	mov	x19, x0
    a390:	bl	3f80 <PyErr_Occurred@plt>
    a394:	cbnz	x0, a438 <PyInit__elementtree@@Base+0x6114>
    a398:	ldr	x0, [x19, #24]
    a39c:	adrp	x8, b000 <PyInit__elementtree@@Base+0x6cdc>
    a3a0:	add	x8, x8, #0x52d
    a3a4:	cmp	x20, #0x0
    a3a8:	ldr	x9, [x0, #8]
    a3ac:	csel	x20, x8, x20, eq  // eq = none
    a3b0:	adrp	x8, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    a3b4:	add	x8, x8, #0x528
    a3b8:	cmp	x9, x8
    a3bc:	b.eq	a410 <PyInit__elementtree@@Base+0x60ec>  // b.none
    a3c0:	ldr	x8, [x19, #56]
    a3c4:	cbz	x8, a42c <PyInit__elementtree@@Base+0x6108>
    a3c8:	mov	x0, x20
    a3cc:	bl	3c70 <strlen@plt>
    a3d0:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a3d4:	mov	x1, x0
    a3d8:	add	x2, x2, #0xa49
    a3dc:	mov	x0, x20
    a3e0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a3e4:	str	x0, [sp, #8]
    a3e8:	cbz	x0, a438 <PyInit__elementtree@@Base+0x6114>
    a3ec:	ldr	x0, [x19, #56]
    a3f0:	add	x1, sp, #0x8
    a3f4:	mov	w2, #0x1                   	// #1
    a3f8:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    a3fc:	ldr	x8, [sp, #8]
    a400:	mov	x19, x0
    a404:	mov	x0, x8
    a408:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a40c:	b	a430 <PyInit__elementtree@@Base+0x610c>
    a410:	ldr	x8, [x0, #96]
    a414:	cbz	x8, a42c <PyInit__elementtree@@Base+0x6108>
    a418:	ldr	x8, [x0, #128]
    a41c:	cbz	x8, a42c <PyInit__elementtree@@Base+0x6108>
    a420:	bl	a700 <PyInit__elementtree@@Base+0x63dc>
    a424:	mov	x19, x0
    a428:	b	a430 <PyInit__elementtree@@Base+0x610c>
    a42c:	mov	x19, xzr
    a430:	mov	x0, x19
    a434:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a438:	ldp	x20, x19, [sp, #32]
    a43c:	ldp	x29, x30, [sp, #16]
    a440:	add	sp, sp, #0x30
    a444:	ret
    a448:	stp	x29, x30, [sp, #-48]!
    a44c:	str	x21, [sp, #16]
    a450:	stp	x20, x19, [sp, #32]
    a454:	mov	x29, sp
    a458:	mov	x20, x1
    a45c:	mov	x19, x0
    a460:	bl	3f80 <PyErr_Occurred@plt>
    a464:	cbnz	x0, a4fc <PyInit__elementtree@@Base+0x61d8>
    a468:	ldr	x21, [x19, #24]
    a46c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    a470:	add	x9, x9, #0x528
    a474:	ldr	x8, [x21, #8]
    a478:	cmp	x8, x9
    a47c:	b.eq	a4c0 <PyInit__elementtree@@Base+0x619c>  // b.none
    a480:	ldr	x8, [x19, #88]
    a484:	cbz	x8, a4fc <PyInit__elementtree@@Base+0x61d8>
    a488:	mov	x0, x20
    a48c:	bl	3c70 <strlen@plt>
    a490:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a494:	mov	x1, x0
    a498:	add	x2, x2, #0xa49
    a49c:	mov	x0, x20
    a4a0:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a4a4:	str	x0, [x29, #24]
    a4a8:	cbz	x0, a4fc <PyInit__elementtree@@Base+0x61d8>
    a4ac:	ldr	x0, [x19, #88]
    a4b0:	add	x1, x29, #0x18
    a4b4:	mov	w2, #0x1                   	// #1
    a4b8:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    a4bc:	b	a4f0 <PyInit__elementtree@@Base+0x61cc>
    a4c0:	mov	x0, x20
    a4c4:	bl	3c70 <strlen@plt>
    a4c8:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a4cc:	mov	x1, x0
    a4d0:	add	x2, x2, #0xa49
    a4d4:	mov	x0, x20
    a4d8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a4dc:	str	x0, [x29, #24]
    a4e0:	cbz	x0, a4fc <PyInit__elementtree@@Base+0x61d8>
    a4e4:	mov	x1, x0
    a4e8:	mov	x0, x21
    a4ec:	bl	6010 <PyInit__elementtree@@Base+0x1cec>
    a4f0:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a4f4:	ldr	x0, [x29, #24]
    a4f8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a4fc:	ldp	x20, x19, [sp, #32]
    a500:	ldr	x21, [sp, #16]
    a504:	ldp	x29, x30, [sp], #48
    a508:	ret
    a50c:	sub	sp, sp, #0x40
    a510:	stp	x29, x30, [sp, #16]
    a514:	stp	x22, x21, [sp, #32]
    a518:	stp	x20, x19, [sp, #48]
    a51c:	add	x29, sp, #0x10
    a520:	mov	x20, x2
    a524:	mov	x19, x1
    a528:	mov	x21, x0
    a52c:	bl	3f80 <PyErr_Occurred@plt>
    a530:	cbnz	x0, a668 <PyInit__elementtree@@Base+0x6344>
    a534:	ldr	x22, [x21, #24]
    a538:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    a53c:	add	x9, x9, #0x528
    a540:	ldr	x8, [x22, #8]
    a544:	cmp	x8, x9
    a548:	b.eq	a5c8 <PyInit__elementtree@@Base+0x62a4>  // b.none
    a54c:	ldr	x8, [x21, #96]
    a550:	cbz	x8, a668 <PyInit__elementtree@@Base+0x6344>
    a554:	mov	x0, x19
    a558:	bl	3c70 <strlen@plt>
    a55c:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a560:	mov	x1, x0
    a564:	add	x2, x2, #0xa49
    a568:	mov	x0, x19
    a56c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a570:	mov	x19, x0
    a574:	cbz	x0, a660 <PyInit__elementtree@@Base+0x633c>
    a578:	mov	x0, x20
    a57c:	bl	3c70 <strlen@plt>
    a580:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a584:	mov	x1, x0
    a588:	add	x2, x2, #0xa49
    a58c:	mov	x0, x20
    a590:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a594:	cbz	x0, a660 <PyInit__elementtree@@Base+0x633c>
    a598:	stp	x19, x0, [sp]
    a59c:	mov	x20, x0
    a5a0:	ldr	x0, [x21, #96]
    a5a4:	mov	x1, sp
    a5a8:	mov	w2, #0x2                   	// #2
    a5ac:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    a5b0:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a5b4:	mov	x0, x20
    a5b8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a5bc:	mov	x0, x19
    a5c0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a5c4:	b	a668 <PyInit__elementtree@@Base+0x6344>
    a5c8:	ldr	x8, [x22, #96]
    a5cc:	cbz	x8, a5d8 <PyInit__elementtree@@Base+0x62b4>
    a5d0:	ldr	x8, [x22, #144]
    a5d4:	cbnz	x8, a5e0 <PyInit__elementtree@@Base+0x62bc>
    a5d8:	ldrb	w8, [x22, #153]
    a5dc:	cbz	w8, a67c <PyInit__elementtree@@Base+0x6358>
    a5e0:	mov	x0, x19
    a5e4:	bl	3c70 <strlen@plt>
    a5e8:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a5ec:	mov	x1, x0
    a5f0:	add	x2, x2, #0xa49
    a5f4:	mov	x0, x19
    a5f8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a5fc:	mov	x19, x0
    a600:	cbz	x0, a658 <PyInit__elementtree@@Base+0x6334>
    a604:	mov	x0, x20
    a608:	bl	3c70 <strlen@plt>
    a60c:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a610:	mov	x1, x0
    a614:	add	x2, x2, #0xa49
    a618:	mov	x0, x20
    a61c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a620:	cbz	x0, a658 <PyInit__elementtree@@Base+0x6334>
    a624:	mov	x20, x0
    a628:	mov	x0, x22
    a62c:	mov	x1, x19
    a630:	mov	x2, x20
    a634:	bl	60ec <PyInit__elementtree@@Base+0x1dc8>
    a638:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a63c:	mov	x0, x20
    a640:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a644:	mov	x0, x19
    a648:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a64c:	mov	w8, #0x1                   	// #1
    a650:	tbnz	w8, #0, a668 <PyInit__elementtree@@Base+0x6344>
    a654:	b	a660 <PyInit__elementtree@@Base+0x633c>
    a658:	mov	w8, wzr
    a65c:	tbnz	w8, #0, a668 <PyInit__elementtree@@Base+0x6344>
    a660:	mov	x0, x19
    a664:	bl	4548 <PyInit__elementtree@@Base+0x224>
    a668:	ldp	x20, x19, [sp, #48]
    a66c:	ldp	x22, x21, [sp, #32]
    a670:	ldp	x29, x30, [sp, #16]
    a674:	add	sp, sp, #0x40
    a678:	ret
    a67c:	mov	w8, #0x1                   	// #1
    a680:	tbnz	w8, #0, a668 <PyInit__elementtree@@Base+0x6344>
    a684:	b	a660 <PyInit__elementtree@@Base+0x633c>
    a688:	stp	x29, x30, [sp, #-32]!
    a68c:	stp	x20, x19, [sp, #16]
    a690:	mov	x29, sp
    a694:	ldr	x8, [x0, #96]
    a698:	cbz	x8, a6d8 <PyInit__elementtree@@Base+0x63b4>
    a69c:	ldr	x8, [x0, #120]
    a6a0:	mov	x19, x0
    a6a4:	cbz	x8, a6d8 <PyInit__elementtree@@Base+0x63b4>
    a6a8:	mov	w0, #0x2                   	// #2
    a6ac:	bl	4210 <PyTuple_Pack@plt>
    a6b0:	cbz	x0, a6ec <PyInit__elementtree@@Base+0x63c8>
    a6b4:	ldr	x1, [x19, #120]
    a6b8:	mov	x20, x0
    a6bc:	mov	x0, x19
    a6c0:	mov	x2, x20
    a6c4:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    a6c8:	mov	w19, w0
    a6cc:	mov	x0, x20
    a6d0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a6d4:	tbnz	w19, #31, a6ec <PyInit__elementtree@@Base+0x63c8>
    a6d8:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a6dc:	ldr	x19, [x19, #3976]
    a6e0:	mov	x0, x19
    a6e4:	bl	4538 <PyInit__elementtree@@Base+0x214>
    a6e8:	b	a6f0 <PyInit__elementtree@@Base+0x63cc>
    a6ec:	mov	x19, xzr
    a6f0:	mov	x0, x19
    a6f4:	ldp	x20, x19, [sp, #16]
    a6f8:	ldp	x29, x30, [sp], #32
    a6fc:	ret
    a700:	stp	x29, x30, [sp, #-32]!
    a704:	str	x19, [sp, #16]
    a708:	mov	x29, sp
    a70c:	ldr	x8, [x0, #96]
    a710:	cbz	x8, a72c <PyInit__elementtree@@Base+0x6408>
    a714:	ldr	x1, [x0, #128]
    a718:	cbz	x1, a72c <PyInit__elementtree@@Base+0x6408>
    a71c:	adrp	x2, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a720:	ldr	x2, [x2, #3976]
    a724:	bl	5c98 <PyInit__elementtree@@Base+0x1974>
    a728:	tbnz	w0, #31, a74c <PyInit__elementtree@@Base+0x6428>
    a72c:	adrp	x19, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a730:	ldr	x19, [x19, #3976]
    a734:	mov	x0, x19
    a738:	bl	4538 <PyInit__elementtree@@Base+0x214>
    a73c:	mov	x0, x19
    a740:	ldr	x19, [sp, #16]
    a744:	ldp	x29, x30, [sp], #32
    a748:	ret
    a74c:	mov	x19, xzr
    a750:	b	a73c <PyInit__elementtree@@Base+0x6418>
    a754:	stp	x29, x30, [sp, #-16]!
    a758:	mov	x29, sp
    a75c:	adrp	x0, b000 <PyInit__elementtree@@Base+0x6cdc>
    a760:	add	x0, x0, #0xa66
    a764:	mov	w1, #0x2                   	// #2
    a768:	mov	w2, #0x2                   	// #2
    a76c:	mov	w3, #0x9                   	// #9
    a770:	bl	3c30 <PyUnicode_FromFormat@plt>
    a774:	ldp	x29, x30, [sp], #16
    a778:	ret
    a77c:	stp	x29, x30, [sp, #-48]!
    a780:	stp	x22, x21, [sp, #16]
    a784:	stp	x20, x19, [sp, #32]
    a788:	mov	x29, sp
    a78c:	mov	x21, x2
    a790:	mov	x20, x1
    a794:	mov	x19, x0
    a798:	bl	4080 <PyDict_New@plt>
    a79c:	str	x0, [x19, #32]
    a7a0:	cbz	x0, aa94 <PyInit__elementtree@@Base+0x6770>
    a7a4:	bl	4080 <PyDict_New@plt>
    a7a8:	str	x0, [x19, #40]
    a7ac:	cbz	x0, a808 <PyInit__elementtree@@Base+0x64e4>
    a7b0:	adrp	x22, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a7b4:	ldr	x8, [x22, #1072]
    a7b8:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    a7bc:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    a7c0:	add	x1, x1, #0x3f8
    a7c4:	ldr	x8, [x8, #64]
    a7c8:	add	x2, x2, #0x7a2
    a7cc:	mov	x0, x21
    a7d0:	blr	x8
    a7d4:	str	x0, [x19, #16]
    a7d8:	cbz	x0, a820 <PyInit__elementtree@@Base+0x64fc>
    a7dc:	ldr	x8, [x22, #1072]
    a7e0:	ldr	x8, [x8, #168]
    a7e4:	cbz	x8, a7f8 <PyInit__elementtree@@Base+0x64d4>
    a7e8:	adrp	x9, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    a7ec:	ldr	x9, [x9, #4040]
    a7f0:	ldr	x1, [x9, #16]
    a7f4:	blr	x8
    a7f8:	cbz	x20, a84c <PyInit__elementtree@@Base+0x6528>
    a7fc:	mov	x0, x20
    a800:	bl	4538 <PyInit__elementtree@@Base+0x214>
    a804:	b	a868 <PyInit__elementtree@@Base+0x6544>
    a808:	ldr	x0, [x19, #32]
    a80c:	cbz	x0, aa94 <PyInit__elementtree@@Base+0x6770>
    a810:	str	xzr, [x19, #32]
    a814:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a818:	mov	w0, #0xffffffff            	// #-1
    a81c:	b	aa98 <PyInit__elementtree@@Base+0x6774>
    a820:	ldr	x0, [x19, #32]
    a824:	cbz	x0, a830 <PyInit__elementtree@@Base+0x650c>
    a828:	str	xzr, [x19, #32]
    a82c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a830:	ldr	x0, [x19, #40]
    a834:	cbz	x0, a840 <PyInit__elementtree@@Base+0x651c>
    a838:	str	xzr, [x19, #40]
    a83c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    a840:	bl	3d80 <PyErr_NoMemory@plt>
    a844:	mov	w0, #0xffffffff            	// #-1
    a848:	b	aa98 <PyInit__elementtree@@Base+0x6774>
    a84c:	adrp	x0, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    a850:	add	x0, x0, #0x528
    a854:	mov	x1, xzr
    a858:	mov	x2, xzr
    a85c:	bl	56fc <PyInit__elementtree@@Base+0x13d8>
    a860:	mov	x20, x0
    a864:	cbz	x0, aa74 <PyInit__elementtree@@Base+0x6750>
    a868:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a86c:	add	x1, x1, #0xab6
    a870:	mov	x0, x20
    a874:	str	x20, [x19, #24]
    a878:	bl	3d00 <PyObject_GetAttrString@plt>
    a87c:	str	x0, [x19, #48]
    a880:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a884:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a888:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a88c:	add	x1, x1, #0xabf
    a890:	mov	x0, x20
    a894:	bl	3d00 <PyObject_GetAttrString@plt>
    a898:	str	x0, [x19, #56]
    a89c:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a8a0:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a8a4:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a8a8:	add	x1, x1, #0x3b0
    a8ac:	mov	x0, x20
    a8b0:	bl	3d00 <PyObject_GetAttrString@plt>
    a8b4:	str	x0, [x19, #64]
    a8b8:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a8bc:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a8c0:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a8c4:	add	x1, x1, #0x3ab
    a8c8:	mov	x0, x20
    a8cc:	bl	3d00 <PyObject_GetAttrString@plt>
    a8d0:	str	x0, [x19, #72]
    a8d4:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a8d8:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a8dc:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a8e0:	add	x1, x1, #0x3ee
    a8e4:	mov	x0, x20
    a8e8:	bl	3d00 <PyObject_GetAttrString@plt>
    a8ec:	str	x0, [x19, #80]
    a8f0:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a8f4:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a8f8:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a8fc:	add	x1, x1, #0x3b6
    a900:	mov	x0, x20
    a904:	bl	3d00 <PyObject_GetAttrString@plt>
    a908:	str	x0, [x19, #88]
    a90c:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a910:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a914:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a918:	add	x1, x1, #0x3be
    a91c:	mov	x0, x20
    a920:	bl	3d00 <PyObject_GetAttrString@plt>
    a924:	str	x0, [x19, #96]
    a928:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a92c:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a930:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a934:	add	x1, x1, #0x3c1
    a938:	mov	x0, x20
    a93c:	bl	3d00 <PyObject_GetAttrString@plt>
    a940:	str	x0, [x19, #112]
    a944:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a948:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a94c:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    a950:	add	x1, x1, #0xac6
    a954:	mov	x0, x20
    a958:	bl	3d00 <PyObject_GetAttrString@plt>
    a95c:	str	x0, [x19, #104]
    a960:	bl	aaa8 <PyInit__elementtree@@Base+0x6784>
    a964:	cbnz	w0, aa94 <PyInit__elementtree@@Base+0x6770>
    a968:	ldr	x8, [x22, #1072]
    a96c:	ldr	x0, [x19, #16]
    a970:	mov	x1, x19
    a974:	ldr	x8, [x8, #136]
    a978:	blr	x8
    a97c:	ldr	x8, [x19, #48]
    a980:	cbnz	x8, a98c <PyInit__elementtree@@Base+0x6668>
    a984:	ldr	x8, [x19, #56]
    a988:	cbz	x8, a9ac <PyInit__elementtree@@Base+0x6688>
    a98c:	ldr	x8, [x22, #1072]
    a990:	ldr	x0, [x19, #16]
    a994:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a998:	adrp	x2, a000 <PyInit__elementtree@@Base+0x5cdc>
    a99c:	ldr	x8, [x8, #112]
    a9a0:	add	x1, x1, #0x1d0
    a9a4:	add	x2, x2, #0x378
    a9a8:	blr	x8
    a9ac:	ldr	x8, [x22, #1072]
    a9b0:	ldr	x0, [x19, #16]
    a9b4:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a9b8:	adrp	x2, a000 <PyInit__elementtree@@Base+0x5cdc>
    a9bc:	ldr	x8, [x8, #104]
    a9c0:	add	x1, x1, #0xae4
    a9c4:	add	x2, x2, #0xcb8
    a9c8:	blr	x8
    a9cc:	ldr	x8, [x22, #1072]
    a9d0:	ldr	x0, [x19, #16]
    a9d4:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a9d8:	add	x1, x1, #0xd58
    a9dc:	ldr	x8, [x8, #96]
    a9e0:	blr	x8
    a9e4:	ldr	x8, [x22, #1072]
    a9e8:	ldr	x0, [x19, #16]
    a9ec:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    a9f0:	add	x1, x1, #0xeb0
    a9f4:	ldr	x8, [x8, #80]
    a9f8:	blr	x8
    a9fc:	ldr	x8, [x19, #88]
    aa00:	cbz	x8, aa1c <PyInit__elementtree@@Base+0x66f8>
    aa04:	ldr	x8, [x22, #1072]
    aa08:	ldr	x0, [x19, #16]
    aa0c:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    aa10:	add	x1, x1, #0x448
    aa14:	ldr	x8, [x8, #88]
    aa18:	blr	x8
    aa1c:	ldr	x8, [x19, #96]
    aa20:	cbz	x8, aa3c <PyInit__elementtree@@Base+0x6718>
    aa24:	ldr	x8, [x22, #1072]
    aa28:	ldr	x0, [x19, #16]
    aa2c:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    aa30:	add	x1, x1, #0x50c
    aa34:	ldr	x8, [x8, #120]
    aa38:	blr	x8
    aa3c:	ldr	x8, [x22, #1072]
    aa40:	ldr	x0, [x19, #16]
    aa44:	adrp	x1, a000 <PyInit__elementtree@@Base+0x5cdc>
    aa48:	add	x1, x1, #0xf54
    aa4c:	ldr	x8, [x8, #144]
    aa50:	blr	x8
    aa54:	ldr	x8, [x22, #1072]
    aa58:	ldr	x0, [x19, #16]
    aa5c:	mov	x2, xzr
    aa60:	ldr	x9, [x8, #128]
    aa64:	ldr	x1, [x8, #160]
    aa68:	blr	x9
    aa6c:	mov	w0, wzr
    aa70:	b	aa98 <PyInit__elementtree@@Base+0x6774>
    aa74:	ldr	x0, [x19, #32]
    aa78:	cbz	x0, aa84 <PyInit__elementtree@@Base+0x6760>
    aa7c:	str	xzr, [x19, #32]
    aa80:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    aa84:	ldr	x0, [x19, #40]
    aa88:	cbz	x0, aa94 <PyInit__elementtree@@Base+0x6770>
    aa8c:	str	xzr, [x19, #40]
    aa90:	b	a814 <PyInit__elementtree@@Base+0x64f0>
    aa94:	mov	w0, #0xffffffff            	// #-1
    aa98:	ldp	x20, x19, [sp, #32]
    aa9c:	ldp	x22, x21, [sp, #16]
    aaa0:	ldp	x29, x30, [sp], #48
    aaa4:	ret
    aaa8:	stp	x29, x30, [sp, #-16]!
    aaac:	mov	x29, sp
    aab0:	cbnz	x0, aacc <PyInit__elementtree@@Base+0x67a8>
    aab4:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    aab8:	ldr	x8, [x8, #4008]
    aabc:	ldr	x0, [x8]
    aac0:	bl	3e50 <PyErr_ExceptionMatches@plt>
    aac4:	cbz	w0, aad8 <PyInit__elementtree@@Base+0x67b4>
    aac8:	bl	3ef0 <PyErr_Clear@plt>
    aacc:	mov	w0, wzr
    aad0:	ldp	x29, x30, [sp], #16
    aad4:	ret
    aad8:	mov	w0, #0xffffffff            	// #-1
    aadc:	ldp	x29, x30, [sp], #16
    aae0:	ret
    aae4:	stp	x29, x30, [sp, #-96]!
    aae8:	str	x27, [sp, #16]
    aaec:	stp	x26, x25, [sp, #32]
    aaf0:	stp	x24, x23, [sp, #48]
    aaf4:	stp	x22, x21, [sp, #64]
    aaf8:	stp	x20, x19, [sp, #80]
    aafc:	mov	x29, sp
    ab00:	mov	x22, x2
    ab04:	mov	x19, x1
    ab08:	mov	x21, x0
    ab0c:	bl	3f80 <PyErr_Occurred@plt>
    ab10:	cbz	x0, ab30 <PyInit__elementtree@@Base+0x680c>
    ab14:	ldp	x20, x19, [sp, #80]
    ab18:	ldp	x22, x21, [sp, #64]
    ab1c:	ldp	x24, x23, [sp, #48]
    ab20:	ldp	x26, x25, [sp, #32]
    ab24:	ldr	x27, [sp, #16]
    ab28:	ldp	x29, x30, [sp], #96
    ab2c:	ret
    ab30:	mov	x0, x21
    ab34:	mov	x1, x19
    ab38:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    ab3c:	cbz	x0, ab14 <PyInit__elementtree@@Base+0x67f0>
    ab40:	ldr	x8, [x22]
    ab44:	mov	x19, x0
    ab48:	cbz	x8, ac08 <PyInit__elementtree@@Base+0x68e4>
    ab4c:	bl	4080 <PyDict_New@plt>
    ab50:	cbz	x0, ac78 <PyInit__elementtree@@Base+0x6954>
    ab54:	adrp	x23, b000 <PyInit__elementtree@@Base+0x6cdc>
    ab58:	mov	x20, x0
    ab5c:	add	x23, x23, #0xa49
    ab60:	mov	w27, #0x1                   	// #1
    ab64:	b	ab70 <PyInit__elementtree@@Base+0x684c>
    ab68:	add	x22, x22, #0x10
    ab6c:	tbz	w27, #0, ab14 <PyInit__elementtree@@Base+0x67f0>
    ab70:	ldr	x1, [x22]
    ab74:	cbz	x1, ac18 <PyInit__elementtree@@Base+0x68f4>
    ab78:	ldr	x8, [x22, #8]
    ab7c:	cbz	x8, ac18 <PyInit__elementtree@@Base+0x68f4>
    ab80:	mov	x0, x21
    ab84:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    ab88:	ldr	x25, [x22, #8]
    ab8c:	mov	x24, x0
    ab90:	mov	x0, x25
    ab94:	bl	3c70 <strlen@plt>
    ab98:	mov	x1, x0
    ab9c:	mov	x0, x25
    aba0:	mov	x2, x23
    aba4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    aba8:	mov	x25, x0
    abac:	cbz	x24, abe0 <PyInit__elementtree@@Base+0x68bc>
    abb0:	cbz	x25, abe0 <PyInit__elementtree@@Base+0x68bc>
    abb4:	mov	x0, x20
    abb8:	mov	x1, x24
    abbc:	mov	x2, x25
    abc0:	bl	4140 <PyDict_SetItem@plt>
    abc4:	mov	w26, w0
    abc8:	mov	x0, x25
    abcc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    abd0:	mov	x0, x24
    abd4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    abd8:	tbz	w26, #31, ab68 <PyInit__elementtree@@Base+0x6844>
    abdc:	b	abf0 <PyInit__elementtree@@Base+0x68cc>
    abe0:	mov	x0, x25
    abe4:	bl	4548 <PyInit__elementtree@@Base+0x224>
    abe8:	mov	x0, x24
    abec:	bl	4548 <PyInit__elementtree@@Base+0x224>
    abf0:	mov	x0, x20
    abf4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    abf8:	mov	x0, x19
    abfc:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    ac00:	tbnz	wzr, #0, ab70 <PyInit__elementtree@@Base+0x684c>
    ac04:	b	ab14 <PyInit__elementtree@@Base+0x67f0>
    ac08:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    ac0c:	ldr	x20, [x20, #3976]
    ac10:	mov	x0, x20
    ac14:	bl	4538 <PyInit__elementtree@@Base+0x214>
    ac18:	ldr	x0, [x21, #24]
    ac1c:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    ac20:	add	x9, x9, #0x528
    ac24:	ldr	x8, [x0, #8]
    ac28:	cmp	x8, x9
    ac2c:	b.eq	ac84 <PyInit__elementtree@@Base+0x6960>  // b.none
    ac30:	ldr	x8, [x21, #64]
    ac34:	cbz	x8, ac98 <PyInit__elementtree@@Base+0x6974>
    ac38:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    ac3c:	ldr	x8, [x8, #3976]
    ac40:	cmp	x20, x8
    ac44:	b.ne	ac60 <PyInit__elementtree@@Base+0x693c>  // b.any
    ac48:	adrp	x0, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    ac4c:	ldr	x0, [x0, #3976]
    ac50:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    ac54:	bl	4080 <PyDict_New@plt>
    ac58:	mov	x20, x0
    ac5c:	cbz	x0, ac78 <PyInit__elementtree@@Base+0x6954>
    ac60:	ldr	x0, [x21, #64]
    ac64:	mov	x1, x19
    ac68:	mov	x2, x20
    ac6c:	mov	x3, xzr
    ac70:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    ac74:	b	ac90 <PyInit__elementtree@@Base+0x696c>
    ac78:	mov	x0, x19
    ac7c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    ac80:	b	ab14 <PyInit__elementtree@@Base+0x67f0>
    ac84:	mov	x1, x19
    ac88:	mov	x2, x20
    ac8c:	bl	5a2c <PyInit__elementtree@@Base+0x1708>
    ac90:	mov	x21, x0
    ac94:	b	ac9c <PyInit__elementtree@@Base+0x6978>
    ac98:	mov	x21, xzr
    ac9c:	mov	x0, x19
    aca0:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    aca4:	mov	x0, x20
    aca8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    acac:	mov	x0, x21
    acb0:	bl	4548 <PyInit__elementtree@@Base+0x224>
    acb4:	b	ab14 <PyInit__elementtree@@Base+0x67f0>
    acb8:	sub	sp, sp, #0x30
    acbc:	stp	x29, x30, [sp, #16]
    acc0:	stp	x20, x19, [sp, #32]
    acc4:	add	x29, sp, #0x10
    acc8:	mov	x20, x1
    accc:	mov	x19, x0
    acd0:	bl	3f80 <PyErr_Occurred@plt>
    acd4:	cbnz	x0, ad48 <PyInit__elementtree@@Base+0x6a24>
    acd8:	ldr	x0, [x19, #24]
    acdc:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    ace0:	add	x9, x9, #0x528
    ace4:	ldr	x8, [x0, #8]
    ace8:	cmp	x8, x9
    acec:	b.eq	ad30 <PyInit__elementtree@@Base+0x6a0c>  // b.none
    acf0:	ldr	x8, [x19, #80]
    acf4:	cbz	x8, ad3c <PyInit__elementtree@@Base+0x6a18>
    acf8:	mov	x0, x19
    acfc:	mov	x1, x20
    ad00:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    ad04:	str	x0, [sp, #8]
    ad08:	cbz	x0, ad3c <PyInit__elementtree@@Base+0x6a18>
    ad0c:	ldr	x0, [x19, #80]
    ad10:	add	x1, sp, #0x8
    ad14:	mov	w2, #0x1                   	// #1
    ad18:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    ad1c:	ldr	x8, [sp, #8]
    ad20:	mov	x19, x0
    ad24:	mov	x0, x8
    ad28:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    ad2c:	b	ad40 <PyInit__elementtree@@Base+0x6a1c>
    ad30:	bl	5f68 <PyInit__elementtree@@Base+0x1c44>
    ad34:	mov	x19, x0
    ad38:	b	ad40 <PyInit__elementtree@@Base+0x6a1c>
    ad3c:	mov	x19, xzr
    ad40:	mov	x0, x19
    ad44:	bl	4548 <PyInit__elementtree@@Base+0x224>
    ad48:	ldp	x20, x19, [sp, #32]
    ad4c:	ldp	x29, x30, [sp, #16]
    ad50:	add	sp, sp, #0x30
    ad54:	ret
    ad58:	sub	sp, sp, #0xc0
    ad5c:	stp	x29, x30, [sp, #144]
    ad60:	stp	x22, x21, [sp, #160]
    ad64:	stp	x20, x19, [sp, #176]
    ad68:	add	x29, sp, #0x90
    ad6c:	subs	w19, w2, #0x2
    ad70:	b.lt	ae9c <PyInit__elementtree@@Base+0x6b78>  // b.tstop
    ad74:	ldrb	w8, [x1]
    ad78:	mov	x21, x1
    ad7c:	cmp	w8, #0x26
    ad80:	b.ne	ae9c <PyInit__elementtree@@Base+0x6b78>  // b.any
    ad84:	mov	w22, w2
    ad88:	mov	x20, x0
    ad8c:	bl	3f80 <PyErr_Occurred@plt>
    ad90:	cbnz	x0, ae9c <PyInit__elementtree@@Base+0x6b78>
    ad94:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    ad98:	add	x0, x21, #0x1
    ad9c:	sxtw	x1, w19
    ada0:	add	x2, x2, #0xa49
    ada4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    ada8:	cbz	x0, ae9c <PyInit__elementtree@@Base+0x6b78>
    adac:	mov	x19, x0
    adb0:	ldr	x0, [x20, #32]
    adb4:	mov	x1, x19
    adb8:	bl	4230 <PyDict_GetItemWithError@plt>
    adbc:	stur	x0, [x29, #-8]
    adc0:	cbz	x0, adf8 <PyInit__elementtree@@Base+0x6ad4>
    adc4:	mov	x1, x0
    adc8:	ldr	x0, [x20, #24]
    adcc:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    add0:	add	x9, x9, #0x528
    add4:	ldr	x8, [x0, #8]
    add8:	cmp	x8, x9
    addc:	b.eq	ae8c <PyInit__elementtree@@Base+0x6b68>  // b.none
    ade0:	ldr	x0, [x20, #72]
    ade4:	cbz	x0, ae90 <PyInit__elementtree@@Base+0x6b6c>
    ade8:	sub	x1, x29, #0x8
    adec:	mov	w2, #0x1                   	// #1
    adf0:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    adf4:	b	ae90 <PyInit__elementtree@@Base+0x6b6c>
    adf8:	bl	3f80 <PyErr_Occurred@plt>
    adfc:	cbnz	x0, ae94 <PyInit__elementtree@@Base+0x6b70>
    ae00:	adrp	x8, c000 <PyInit__elementtree@@Base+0x7cdc>
    ae04:	add	x8, x8, #0x13
    ae08:	ldp	q0, q1, [x8, #64]
    ae0c:	ldp	q2, q3, [x8, #96]
    ae10:	cmp	w22, #0x64
    ae14:	mov	x0, sp
    ae18:	stp	q0, q1, [sp, #64]
    ae1c:	ldp	q0, q1, [x8]
    ae20:	stp	q2, q3, [sp, #96]
    ae24:	mov	x1, x21
    ae28:	str	q0, [sp]
    ae2c:	ldp	q2, q0, [x8, #32]
    ae30:	mov	w8, #0x64                  	// #100
    ae34:	csel	w8, w22, w8, lt  // lt = tstop
    ae38:	sxtw	x2, w8
    ae3c:	stp	q1, q2, [sp, #16]
    ae40:	str	q0, [sp, #48]
    ae44:	bl	40d0 <strncat@plt>
    ae48:	adrp	x21, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    ae4c:	ldr	x8, [x21, #1072]
    ae50:	ldr	x0, [x20, #16]
    ae54:	ldr	x8, [x8, #48]
    ae58:	blr	x8
    ae5c:	ldr	x8, [x21, #1072]
    ae60:	ldr	x9, [x8, #40]
    ae64:	ldr	x8, [x20, #16]
    ae68:	mov	x20, x0
    ae6c:	mov	x0, x8
    ae70:	blr	x9
    ae74:	mov	x2, x0
    ae78:	mov	x3, sp
    ae7c:	mov	w0, #0xb                   	// #11
    ae80:	mov	x1, x20
    ae84:	bl	9c8c <PyInit__elementtree@@Base+0x5968>
    ae88:	b	ae94 <PyInit__elementtree@@Base+0x6b70>
    ae8c:	bl	58f4 <PyInit__elementtree@@Base+0x15d0>
    ae90:	bl	4548 <PyInit__elementtree@@Base+0x224>
    ae94:	mov	x0, x19
    ae98:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    ae9c:	ldp	x20, x19, [sp, #176]
    aea0:	ldp	x22, x21, [sp, #160]
    aea4:	ldp	x29, x30, [sp, #144]
    aea8:	add	sp, sp, #0xc0
    aeac:	ret
    aeb0:	stp	x29, x30, [sp, #-48]!
    aeb4:	str	x21, [sp, #16]
    aeb8:	stp	x20, x19, [sp, #32]
    aebc:	mov	x29, sp
    aec0:	mov	w21, w2
    aec4:	mov	x20, x1
    aec8:	mov	x19, x0
    aecc:	bl	3f80 <PyErr_Occurred@plt>
    aed0:	cbnz	x0, af44 <PyInit__elementtree@@Base+0x6c20>
    aed4:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    aed8:	sxtw	x1, w21
    aedc:	add	x2, x2, #0xa49
    aee0:	mov	x0, x20
    aee4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    aee8:	str	x0, [x29, #24]
    aeec:	cbz	x0, af44 <PyInit__elementtree@@Base+0x6c20>
    aef0:	mov	x1, x0
    aef4:	ldr	x0, [x19, #24]
    aef8:	adrp	x9, 1d000 <PyInit__elementtree@@Base+0x18cdc>
    aefc:	add	x9, x9, #0x528
    af00:	ldr	x8, [x0, #8]
    af04:	cmp	x8, x9
    af08:	b.eq	af24 <PyInit__elementtree@@Base+0x6c00>  // b.none
    af0c:	ldr	x0, [x19, #72]
    af10:	cbz	x0, af30 <PyInit__elementtree@@Base+0x6c0c>
    af14:	add	x1, x29, #0x18
    af18:	mov	w2, #0x1                   	// #1
    af1c:	bl	5eb0 <PyInit__elementtree@@Base+0x1b8c>
    af20:	b	af28 <PyInit__elementtree@@Base+0x6c04>
    af24:	bl	58f4 <PyInit__elementtree@@Base+0x15d0>
    af28:	mov	x19, x0
    af2c:	b	af34 <PyInit__elementtree@@Base+0x6c10>
    af30:	mov	x19, xzr
    af34:	ldr	x0, [x29, #24]
    af38:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    af3c:	mov	x0, x19
    af40:	bl	4548 <PyInit__elementtree@@Base+0x224>
    af44:	ldp	x20, x19, [sp, #32]
    af48:	ldr	x21, [sp, #16]
    af4c:	ldp	x29, x30, [sp], #48
    af50:	ret
    af54:	sub	sp, sp, #0x40
    af58:	stp	x29, x30, [sp, #16]
    af5c:	stp	x22, x21, [sp, #32]
    af60:	stp	x20, x19, [sp, #48]
    af64:	add	x29, sp, #0x10
    af68:	mov	x22, x3
    af6c:	mov	x20, x2
    af70:	mov	x19, x1
    af74:	mov	x21, x0
    af78:	bl	3f80 <PyErr_Occurred@plt>
    af7c:	cbnz	x0, b074 <PyInit__elementtree@@Base+0x6d50>
    af80:	mov	x0, x21
    af84:	mov	x1, x19
    af88:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    af8c:	cbz	x0, b074 <PyInit__elementtree@@Base+0x6d50>
    af90:	mov	x19, x0
    af94:	cbz	x20, afb4 <PyInit__elementtree@@Base+0x6c90>
    af98:	mov	x0, x21
    af9c:	mov	x1, x20
    afa0:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    afa4:	mov	x20, x0
    afa8:	cbnz	x0, afc4 <PyInit__elementtree@@Base+0x6ca0>
    afac:	mov	x0, x19
    afb0:	b	b070 <PyInit__elementtree@@Base+0x6d4c>
    afb4:	adrp	x20, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    afb8:	ldr	x20, [x20, #3976]
    afbc:	mov	x0, x20
    afc0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    afc4:	cbz	x22, afe4 <PyInit__elementtree@@Base+0x6cc0>
    afc8:	mov	x0, x21
    afcc:	mov	x1, x22
    afd0:	bl	b088 <PyInit__elementtree@@Base+0x6d64>
    afd4:	mov	x22, x0
    afd8:	cbnz	x0, aff4 <PyInit__elementtree@@Base+0x6cd0>
    afdc:	mov	x0, x19
    afe0:	b	b068 <PyInit__elementtree@@Base+0x6d44>
    afe4:	adrp	x22, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    afe8:	ldr	x22, [x22, #3976]
    afec:	mov	x0, x22
    aff0:	bl	4538 <PyInit__elementtree@@Base+0x214>
    aff4:	ldr	x0, [x21, #104]
    aff8:	cbz	x0, b01c <PyInit__elementtree@@Base+0x6cf8>
    affc:	mov	x1, x19
    b000:	mov	x2, x22
    b004:	mov	x3, x20
    b008:	mov	x4, xzr
    b00c:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    b010:	str	x0, [sp, #8]
    b014:	bl	4548 <PyInit__elementtree@@Base+0x224>
    b018:	b	b05c <PyInit__elementtree@@Base+0x6d38>
    b01c:	adrp	x1, 1e000 <PyInit__elementtree@@Base+0x19cdc>
    b020:	add	x1, x1, #0x410
    b024:	add	x2, sp, #0x8
    b028:	mov	x0, x21
    b02c:	bl	3c90 <_PyObject_LookupAttrId@plt>
    b030:	cmp	w0, #0x1
    b034:	b.lt	b05c <PyInit__elementtree@@Base+0x6d38>  // b.tstop
    b038:	adrp	x8, 1c000 <PyInit__elementtree@@Base+0x17cdc>
    b03c:	ldr	x8, [x8, #4024]
    b040:	adrp	x1, b000 <PyInit__elementtree@@Base+0x6cdc>
    b044:	add	x1, x1, #0xace
    b048:	mov	w2, #0x1                   	// #1
    b04c:	ldr	x0, [x8]
    b050:	bl	3d60 <PyErr_WarnEx@plt>
    b054:	ldr	x0, [sp, #8]
    b058:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b05c:	mov	x0, x19
    b060:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b064:	mov	x0, x22
    b068:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b06c:	mov	x0, x20
    b070:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b074:	ldp	x20, x19, [sp, #48]
    b078:	ldp	x22, x21, [sp, #32]
    b07c:	ldp	x29, x30, [sp, #16]
    b080:	add	sp, sp, #0x40
    b084:	ret
    b088:	stp	x29, x30, [sp, #-64]!
    b08c:	stp	x24, x23, [sp, #16]
    b090:	stp	x22, x21, [sp, #32]
    b094:	stp	x20, x19, [sp, #48]
    b098:	mov	x29, sp
    b09c:	mov	x20, x0
    b0a0:	mov	x0, x1
    b0a4:	mov	x22, x1
    b0a8:	bl	3c70 <strlen@plt>
    b0ac:	mov	x21, x0
    b0b0:	mov	x0, x22
    b0b4:	mov	x1, x21
    b0b8:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    b0bc:	cbz	x0, b1b0 <PyInit__elementtree@@Base+0x6e8c>
    b0c0:	mov	x19, x0
    b0c4:	ldr	x0, [x20, #40]
    b0c8:	mov	x1, x19
    b0cc:	bl	4230 <PyDict_GetItemWithError@plt>
    b0d0:	cbz	x0, b0e0 <PyInit__elementtree@@Base+0x6dbc>
    b0d4:	mov	x23, x0
    b0d8:	bl	4538 <PyInit__elementtree@@Base+0x214>
    b0dc:	b	b1e4 <PyInit__elementtree@@Base+0x6ec0>
    b0e0:	bl	3f80 <PyErr_Occurred@plt>
    b0e4:	cbz	x0, b0f0 <PyInit__elementtree@@Base+0x6dcc>
    b0e8:	mov	x23, xzr
    b0ec:	b	b1e4 <PyInit__elementtree@@Base+0x6ec0>
    b0f0:	cmp	x21, #0x1
    b0f4:	b.lt	b130 <PyInit__elementtree@@Base+0x6e0c>  // b.tstop
    b0f8:	mov	x8, xzr
    b0fc:	ldrb	w9, [x22, x8]
    b100:	cmp	w9, #0x7d
    b104:	b.eq	b118 <PyInit__elementtree@@Base+0x6df4>  // b.none
    b108:	add	x8, x8, #0x1
    b10c:	cmp	x21, x8
    b110:	b.ne	b0fc <PyInit__elementtree@@Base+0x6dd8>  // b.any
    b114:	mov	x8, x21
    b118:	cmp	x8, x21
    b11c:	b.ne	b13c <PyInit__elementtree@@Base+0x6e18>  // b.any
    b120:	mov	x0, x19
    b124:	bl	4538 <PyInit__elementtree@@Base+0x214>
    b128:	mov	x24, x19
    b12c:	b	b170 <PyInit__elementtree@@Base+0x6e4c>
    b130:	mov	x8, xzr
    b134:	cmp	x8, x21
    b138:	b.eq	b120 <PyInit__elementtree@@Base+0x6dfc>  // b.none
    b13c:	add	x23, x21, #0x1
    b140:	mov	x0, xzr
    b144:	mov	x1, x23
    b148:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    b14c:	cbz	x0, b1b8 <PyInit__elementtree@@Base+0x6e94>
    b150:	mov	w8, #0x7b                  	// #123
    b154:	mov	x24, x0
    b158:	strb	w8, [x0, #32]
    b15c:	add	x0, x0, #0x21
    b160:	mov	x1, x22
    b164:	mov	x2, x21
    b168:	bl	3c20 <memcpy@plt>
    b16c:	mov	x21, x23
    b170:	adrp	x2, b000 <PyInit__elementtree@@Base+0x6cdc>
    b174:	add	x0, x24, #0x20
    b178:	add	x2, x2, #0xa49
    b17c:	mov	x1, x21
    b180:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b184:	mov	x23, x0
    b188:	mov	x0, x24
    b18c:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b190:	cbz	x23, b1b8 <PyInit__elementtree@@Base+0x6e94>
    b194:	ldr	x0, [x20, #40]
    b198:	mov	x1, x19
    b19c:	mov	x2, x23
    b1a0:	bl	4140 <PyDict_SetItem@plt>
    b1a4:	tbnz	w0, #31, b1c4 <PyInit__elementtree@@Base+0x6ea0>
    b1a8:	mov	w8, #0x1                   	// #1
    b1ac:	cbnz	w8, b1e4 <PyInit__elementtree@@Base+0x6ec0>
    b1b0:	mov	x23, xzr
    b1b4:	b	b1ec <PyInit__elementtree@@Base+0x6ec8>
    b1b8:	mov	x20, xzr
    b1bc:	mov	x23, x19
    b1c0:	b	b1d0 <PyInit__elementtree@@Base+0x6eac>
    b1c4:	mov	x0, x19
    b1c8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b1cc:	mov	x20, x23
    b1d0:	mov	x0, x23
    b1d4:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b1d8:	mov	w8, wzr
    b1dc:	mov	x23, x20
    b1e0:	cbz	w8, b1b0 <PyInit__elementtree@@Base+0x6e8c>
    b1e4:	mov	x0, x19
    b1e8:	bl	47f4 <PyInit__elementtree@@Base+0x4d0>
    b1ec:	mov	x0, x23
    b1f0:	ldp	x20, x19, [sp, #48]
    b1f4:	ldp	x22, x21, [sp, #32]
    b1f8:	ldp	x24, x23, [sp, #16]
    b1fc:	ldp	x29, x30, [sp], #64
    b200:	ret

Disassembly of section .fini:

000000000000b204 <.fini>:
    b204:	stp	x29, x30, [sp, #-16]!
    b208:	mov	x29, sp
    b20c:	ldp	x29, x30, [sp], #16
    b210:	ret
