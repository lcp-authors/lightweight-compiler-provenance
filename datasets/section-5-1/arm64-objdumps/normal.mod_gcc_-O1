
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//normal.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_normal_free_menu-0x26c>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	bl	2300 <read_command_list>
      14:	mov	x0, x19
      18:	bl	2d38 <read_fs_list>
      1c:	mov	x0, x19
      20:	bl	9498 <read_crypto_list>
      24:	mov	x0, x19
      28:	bl	9e90 <read_terminal_list>
      2c:	mov	x0, x19
      30:	bl	0 <grub_gettext_reread_prefix>
      34:	ldr	x19, [sp, #16]
      38:	ldp	x29, x30, [sp], #32
      3c:	ret
      40:	stp	x29, x30, [sp, #-32]!
      44:	mov	x29, sp
      48:	str	x19, [sp, #16]
      4c:	mov	x19, x1
      50:	mov	x0, x1
      54:	bl	0 <grub_normal_free_menu-0x26c>
      58:	mov	x0, x19
      5c:	cbz	x19, 64 <grub_normal_free_menu-0x208>
      60:	bl	0 <grub_strdup>
      64:	ldr	x19, [sp, #16]
      68:	ldp	x29, x30, [sp], #32
      6c:	ret
      70:	stp	x29, x30, [sp, #-32]!
      74:	mov	x29, sp
      78:	stp	x19, x20, [sp, #16]
      7c:	mov	x20, x0
      80:	mov	x19, x2
      84:	mov	x0, x19
      88:	bl	dfb8 <grub_file_getline>
      8c:	str	x0, [x20]
      90:	cbz	x0, a8 <grub_normal_free_menu-0x1c4>
      94:	ldrb	w1, [x0]
      98:	cmp	w1, #0x23
      9c:	b.ne	c0 <grub_normal_free_menu-0x1ac>  // b.any
      a0:	bl	0 <grub_free>
      a4:	b	84 <grub_normal_free_menu-0x1e8>
      a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
      ac:	ldr	x0, [x0]
      b0:	ldr	w0, [x0]
      b4:	ldp	x19, x20, [sp, #16]
      b8:	ldp	x29, x30, [sp], #32
      bc:	ret
      c0:	mov	w0, #0x0                   	// #0
      c4:	b	b4 <grub_normal_free_menu-0x1b8>
	...
      d0:	stp	x29, x30, [sp, #-48]!
      d4:	mov	x29, sp
      d8:	stp	x19, x20, [sp, #16]
      dc:	stp	x21, x22, [sp, #32]
      e0:	mov	x22, x0
      e4:	mov	w21, w1
      e8:	mov	w20, w2
      ec:	cbz	w1, 140 <grub_normal_free_menu-0x12c>
      f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
      f4:	ldr	x0, [x0]
      f8:	ldr	x1, [x0]
      fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     100:	ldr	x0, [x0]
     104:	blr	x1
     108:	mov	x19, x0
     10c:	orr	w20, w21, w20
     110:	cbz	x19, 160 <grub_normal_free_menu-0x10c>
     114:	mov	x0, x19
     118:	bl	1788 <grub_cmdline_get>
     11c:	str	x0, [x22]
     120:	cbnz	x0, 170 <grub_normal_free_menu-0xfc>
     124:	cbz	w20, 114 <grub_normal_free_menu-0x158>
     128:	bl	0 <grub_free>
     12c:	str	xzr, [x22]
     130:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     134:	ldr	x0, [x0]
     138:	ldr	w0, [x0]
     13c:	b	174 <grub_normal_free_menu-0xf8>
     140:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     144:	ldr	x0, [x0]
     148:	ldr	x1, [x0]
     14c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     150:	ldr	x0, [x0]
     154:	blr	x1
     158:	mov	x19, x0
     15c:	b	10c <grub_normal_free_menu-0x160>
     160:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     164:	ldr	x0, [x0]
     168:	ldr	w0, [x0]
     16c:	b	174 <grub_normal_free_menu-0xf8>
     170:	mov	w0, #0x0                   	// #0
     174:	ldp	x19, x20, [sp, #16]
     178:	ldp	x21, x22, [sp, #32]
     17c:	ldp	x29, x30, [sp], #48
     180:	ret
     184:	nop
	...
     1a8:	stp	x29, x30, [sp, #-16]!
     1ac:	mov	x29, sp
     1b0:	mov	w2, #0x0                   	// #0
     1b4:	bl	d0 <grub_normal_free_menu-0x19c>
     1b8:	ldp	x29, x30, [sp], #16
     1bc:	ret
     1c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     1c4:	ldr	x1, [x0]
     1c8:	ldr	w0, [x1]
     1cc:	ldr	w1, [x1, #4]
     1d0:	cmp	w1, w0
     1d4:	b.le	1f0 <grub_normal_free_menu-0x7c>
     1d8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     1dc:	ldr	x1, [x1]
     1e0:	add	w0, w0, #0x1
     1e4:	str	w0, [x1]
     1e8:	mov	w0, #0x0                   	// #0
     1ec:	ret
     1f0:	stp	x29, x30, [sp, #-16]!
     1f4:	mov	x29, sp
     1f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     1fc:	ldr	x1, [x0]
     200:	mov	w0, #0x12                  	// #18
     204:	bl	0 <grub_error>
     208:	ldp	x29, x30, [sp], #16
     20c:	ret
	...
     220:	stp	x29, x30, [sp, #-32]!
     224:	mov	x29, sp
     228:	str	x19, [sp, #16]
     22c:	mov	x19, x1
     230:	ldrb	w0, [x1]
     234:	cmp	w0, #0x31
     238:	cset	w0, eq  // eq = none
     23c:	bl	9d68 <grub_set_more>
     240:	mov	x0, x19
     244:	bl	0 <grub_strdup>
     248:	ldr	x19, [sp, #16]
     24c:	ldp	x29, x30, [sp], #32
     250:	ret
     254:	stp	x29, x30, [sp, #-16]!
     258:	mov	x29, sp
     25c:	bl	b4cc <grub_cls>
     260:	mov	w0, #0x0                   	// #0
     264:	ldp	x29, x30, [sp], #16
     268:	ret

000000000000026c <grub_normal_free_menu>:
     26c:	stp	x29, x30, [sp, #-48]!
     270:	mov	x29, sp
     274:	stp	x21, x22, [sp, #32]
     278:	mov	x22, x0
     27c:	ldr	x21, [x0, #8]
     280:	cbz	x21, 31c <grub_normal_free_menu+0xb0>
     284:	stp	x19, x20, [sp, #16]
     288:	b	2dc <grub_normal_free_menu+0x70>
     28c:	ldr	x0, [x19]
     290:	bl	0 <grub_free>
     294:	ldr	x19, [x19, #8]
     298:	cbnz	x19, 28c <grub_normal_free_menu+0x20>
     29c:	ldr	x0, [x20, #32]
     2a0:	bl	0 <grub_free>
     2a4:	b	2ec <grub_normal_free_menu+0x80>
     2a8:	mov	x0, x1
     2ac:	bl	0 <grub_free>
     2b0:	ldr	x0, [x20, #8]
     2b4:	bl	0 <grub_free>
     2b8:	ldr	x0, [x20, #24]
     2bc:	bl	0 <grub_free>
     2c0:	ldr	x0, [x20]
     2c4:	bl	0 <grub_free>
     2c8:	ldr	x0, [x20, #40]
     2cc:	bl	0 <grub_free>
     2d0:	mov	x0, x20
     2d4:	bl	0 <grub_free>
     2d8:	cbz	x21, 318 <grub_normal_free_menu+0xac>
     2dc:	mov	x20, x21
     2e0:	ldr	x21, [x21, #72]
     2e4:	ldr	x19, [x20, #32]
     2e8:	cbnz	x19, 28c <grub_normal_free_menu+0x20>
     2ec:	ldr	x1, [x20, #56]
     2f0:	cbz	x1, 2b0 <grub_normal_free_menu+0x44>
     2f4:	ldr	x0, [x1]
     2f8:	cbz	x0, 2a8 <grub_normal_free_menu+0x3c>
     2fc:	mov	x19, #0x8                   	// #8
     300:	bl	0 <grub_free>
     304:	ldr	x1, [x20, #56]
     308:	ldr	x0, [x1, x19]
     30c:	add	x19, x19, #0x8
     310:	cbnz	x0, 300 <grub_normal_free_menu+0x94>
     314:	b	2a8 <grub_normal_free_menu+0x3c>
     318:	ldp	x19, x20, [sp, #16]
     31c:	mov	x0, x22
     320:	bl	0 <grub_free>
     324:	bl	b5c0 <grub_env_unset_menu>
     328:	ldp	x21, x22, [sp, #32]
     32c:	ldp	x29, x30, [sp], #48
     330:	ret

0000000000000334 <grub_normal_init_page>:
     334:	stp	x29, x30, [sp, #-64]!
     338:	mov	x29, sp
     33c:	stp	x19, x20, [sp, #16]
     340:	stp	x21, x22, [sp, #32]
     344:	mov	x19, x0
     348:	mov	w21, w1
     34c:	ldr	x1, [x0, #80]
     350:	cbz	x1, 440 <grub_normal_init_page+0x10c>
     354:	blr	x1
     358:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     35c:	ldr	x0, [x0]
     360:	ldr	x1, [x0]
     364:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     368:	ldr	x0, [x0]
     36c:	blr	x1
     370:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     374:	ldr	x1, [x1]
     378:	bl	0 <grub_xasprintf>
     37c:	mov	x20, x0
     380:	cbz	x0, 430 <grub_normal_init_page+0xfc>
     384:	add	x2, sp, #0x30
     388:	add	x1, sp, #0x38
     38c:	bl	c0e8 <grub_utf8_to_ucs4_alloc>
     390:	mov	x22, x0
     394:	mov	x0, x20
     398:	bl	0 <grub_free>
     39c:	tbnz	x22, #63, 430 <grub_normal_init_page+0xfc>
     3a0:	mov	x2, x19
     3a4:	ldr	x1, [sp, #48]
     3a8:	ldr	x0, [sp, #56]
     3ac:	bl	81e4 <grub_getstringwidth>
     3b0:	mov	x20, x0
     3b4:	ldr	x1, [x19, #56]
     3b8:	mov	x0, x19
     3bc:	blr	x1
     3c0:	ands	w2, w0, #0xffff
     3c4:	mov	w0, #0x50                  	// #80
     3c8:	csel	w2, w2, w0, ne  // ne = any
     3cc:	sub	w0, w2, w20
     3d0:	add	w1, w0, w0, lsr #31
     3d4:	asr	w1, w1, #1
     3d8:	cmn	w0, #0x2
     3dc:	csel	w0, w1, wzr, gt
     3e0:	mov	w1, #0x0                   	// #0
     3e4:	bfxil	w1, w0, #0, #16
     3e8:	bfi	w1, w21, #16, #16
     3ec:	ldr	x2, [x19, #72]
     3f0:	mov	x0, x19
     3f4:	blr	x2
     3f8:	mov	x4, x19
     3fc:	mov	w3, #0x0                   	// #0
     400:	mov	w2, #0x0                   	// #0
     404:	ldr	x1, [sp, #48]
     408:	ldr	x0, [sp, #56]
     40c:	bl	afec <grub_print_ucs4>
     410:	mov	x1, x19
     414:	mov	w0, #0xa                   	// #10
     418:	bl	a100 <grub_putcode>
     41c:	mov	x1, x19
     420:	mov	w0, #0xa                   	// #10
     424:	bl	a100 <grub_putcode>
     428:	ldr	x0, [sp, #56]
     42c:	bl	0 <grub_free>
     430:	ldp	x19, x20, [sp, #16]
     434:	ldp	x21, x22, [sp, #32]
     438:	ldp	x29, x30, [sp], #64
     43c:	ret
     440:	mov	x1, x0
     444:	mov	w0, #0xa                   	// #10
     448:	bl	a100 <grub_putcode>
     44c:	ldr	x1, [x19, #104]
     450:	cbz	x1, 358 <grub_normal_init_page+0x24>
     454:	mov	x0, x19
     458:	blr	x1
     45c:	b	358 <grub_normal_init_page+0x24>
	...

0000000000000478 <grub_normal_execute>:
     478:	stp	x29, x30, [sp, #-96]!
     47c:	mov	x29, sp
     480:	stp	x19, x20, [sp, #16]
     484:	stp	x25, x26, [sp, #64]
     488:	mov	x19, x0
     48c:	mov	w20, w1
     490:	mov	w25, w2
     494:	cbz	w1, 5dc <grub_normal_execute+0x164>
     498:	cbz	x19, 6c8 <grub_normal_execute+0x250>
     49c:	stp	x21, x22, [sp, #32]
     4a0:	bl	b5e0 <grub_env_get_menu>
     4a4:	mov	x22, x0
     4a8:	cbz	x0, 610 <grub_normal_execute+0x198>
     4ac:	stp	x23, x24, [sp, #48]
     4b0:	mov	w1, #0x33                  	// #51
     4b4:	mov	x0, x19
     4b8:	bl	0 <grub_file_open>
     4bc:	mov	x23, x0
     4c0:	cbz	x0, 72c <grub_normal_execute+0x2b4>
     4c4:	mov	x1, #0x0                   	// #0
     4c8:	bl	0 <grub_bufio_open>
     4cc:	mov	x21, x0
     4d0:	cbz	x0, 62c <grub_normal_execute+0x1b4>
     4d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     4d8:	ldr	x0, [x0]
     4dc:	bl	0 <grub_env_get>
     4e0:	mov	x24, x0
     4e4:	cbz	x0, 4f0 <grub_normal_execute+0x78>
     4e8:	bl	0 <grub_strdup>
     4ec:	mov	x24, x0
     4f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     4f4:	ldr	x0, [x0]
     4f8:	bl	0 <grub_env_get>
     4fc:	mov	x23, x0
     500:	cbz	x0, 50c <grub_normal_execute+0x94>
     504:	bl	0 <grub_strdup>
     508:	mov	x23, x0
     50c:	ldrb	w0, [x19]
     510:	cmp	w0, #0x28
     514:	b.eq	63c <grub_normal_execute+0x1c4>  // b.none
     518:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     51c:	ldr	x0, [x0]
     520:	bl	0 <grub_env_get>
     524:	mov	x2, x19
     528:	mov	x1, x0
     52c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     530:	ldr	x0, [x0]
     534:	bl	0 <grub_xasprintf>
     538:	mov	x19, x0
     53c:	cbz	x0, 57c <grub_normal_execute+0x104>
     540:	mov	x1, x0
     544:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     548:	ldr	x0, [x0]
     54c:	bl	0 <grub_env_set>
     550:	mov	w1, #0x2f                  	// #47
     554:	mov	x0, x19
     558:	bl	0 <grub_strrchr>
     55c:	cbz	x0, 564 <grub_normal_execute+0xec>
     560:	strb	wzr, [x0]
     564:	mov	x1, x19
     568:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     56c:	ldr	x0, [x0]
     570:	bl	0 <grub_env_set>
     574:	mov	x0, x19
     578:	bl	0 <grub_free>
     57c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     580:	ldr	x0, [x0]
     584:	bl	0 <grub_env_export>
     588:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     58c:	ldr	x0, [x0]
     590:	bl	0 <grub_env_export>
     594:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
     598:	adrp	x19, 0 <grub_normal_free_menu-0x26c>
     59c:	bl	0 <grub_print_error>
     5a0:	ldr	x0, [x26]
     5a4:	str	wzr, [x0]
     5a8:	mov	x2, x21
     5ac:	mov	w1, #0x0                   	// #0
     5b0:	add	x0, sp, #0x58
     5b4:	bl	70 <grub_normal_free_menu-0x1fc>
     5b8:	cbnz	w0, 660 <grub_normal_execute+0x1e8>
     5bc:	ldr	x0, [sp, #88]
     5c0:	cbz	x0, 660 <grub_normal_execute+0x1e8>
     5c4:	mov	x2, x21
     5c8:	ldr	x1, [x19]
     5cc:	bl	e0c0 <grub_normal_parse_line>
     5d0:	ldr	x0, [sp, #88]
     5d4:	bl	0 <grub_free>
     5d8:	b	59c <grub_normal_execute+0x124>
     5dc:	stp	x21, x22, [sp, #32]
     5e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     5e4:	ldr	x21, [x0]
     5e8:	mov	x0, x21
     5ec:	bl	0 <grub_env_get>
     5f0:	bl	0 <grub_normal_free_menu-0x26c>
     5f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     5f8:	ldr	x2, [x0]
     5fc:	mov	x1, #0x0                   	// #0
     600:	mov	x0, x21
     604:	bl	0 <grub_register_variable_hook>
     608:	ldp	x21, x22, [sp, #32]
     60c:	b	498 <grub_normal_execute+0x20>
     610:	mov	x0, #0x10                  	// #16
     614:	bl	0 <grub_zalloc>
     618:	mov	x22, x0
     61c:	cbz	x0, 730 <grub_normal_execute+0x2b8>
     620:	stp	x23, x24, [sp, #48]
     624:	bl	b600 <grub_env_set_menu>
     628:	b	4b0 <grub_normal_execute+0x38>
     62c:	mov	x0, x23
     630:	bl	0 <grub_file_close>
     634:	ldp	x23, x24, [sp, #48]
     638:	b	730 <grub_normal_execute+0x2b8>
     63c:	mov	x1, x19
     640:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     644:	ldr	x0, [x0]
     648:	bl	0 <grub_env_set>
     64c:	mov	x0, x19
     650:	bl	0 <grub_strdup>
     654:	mov	x19, x0
     658:	cbnz	x0, 550 <grub_normal_execute+0xd8>
     65c:	b	57c <grub_normal_execute+0x104>
     660:	cbz	x24, 6d8 <grub_normal_execute+0x260>
     664:	mov	x1, x24
     668:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     66c:	ldr	x0, [x0]
     670:	bl	0 <grub_env_set>
     674:	cbz	x23, 6e8 <grub_normal_execute+0x270>
     678:	mov	x1, x23
     67c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     680:	ldr	x0, [x0]
     684:	bl	0 <grub_env_set>
     688:	mov	x0, x24
     68c:	bl	0 <grub_free>
     690:	mov	x0, x23
     694:	bl	0 <grub_free>
     698:	mov	x0, x21
     69c:	bl	0 <grub_file_close>
     6a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     6a4:	ldr	x0, [x0]
     6a8:	str	wzr, [x0]
     6ac:	cmp	w25, #0x0
     6b0:	ccmp	x22, #0x0, #0x4, eq  // eq = none
     6b4:	b.eq	744 <grub_normal_execute+0x2cc>  // b.none
     6b8:	ldr	w0, [x22]
     6bc:	cbnz	w0, 6f8 <grub_normal_execute+0x280>
     6c0:	ldp	x21, x22, [sp, #32]
     6c4:	ldp	x23, x24, [sp, #48]
     6c8:	ldp	x19, x20, [sp, #16]
     6cc:	ldp	x25, x26, [sp, #64]
     6d0:	ldp	x29, x30, [sp], #96
     6d4:	ret
     6d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     6dc:	ldr	x0, [x0]
     6e0:	bl	0 <grub_env_unset>
     6e4:	b	674 <grub_normal_execute+0x1fc>
     6e8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     6ec:	ldr	x0, [x0]
     6f0:	bl	0 <grub_env_unset>
     6f4:	b	688 <grub_normal_execute+0x210>
     6f8:	mov	w2, #0x0                   	// #0
     6fc:	mov	w1, w20
     700:	mov	x0, x22
     704:	bl	4540 <grub_show_menu>
     708:	cbnz	w20, 718 <grub_normal_execute+0x2a0>
     70c:	ldp	x21, x22, [sp, #32]
     710:	ldp	x23, x24, [sp, #48]
     714:	b	6c8 <grub_normal_execute+0x250>
     718:	mov	x0, x22
     71c:	bl	26c <grub_normal_free_menu>
     720:	ldp	x21, x22, [sp, #32]
     724:	ldp	x23, x24, [sp, #48]
     728:	b	6c8 <grub_normal_execute+0x250>
     72c:	ldp	x23, x24, [sp, #48]
     730:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     734:	ldr	x0, [x0]
     738:	str	wzr, [x0]
     73c:	ldp	x21, x22, [sp, #32]
     740:	b	6c8 <grub_normal_execute+0x250>
     744:	ldp	x21, x22, [sp, #32]
     748:	ldp	x23, x24, [sp, #48]
     74c:	b	6c8 <grub_normal_execute+0x250>
	...

0000000000000790 <grub_cmdline_run>:
     790:	stp	x29, x30, [sp, #-96]!
     794:	mov	x29, sp
     798:	stp	x19, x20, [sp, #16]
     79c:	stp	x21, x22, [sp, #32]
     7a0:	mov	w21, w0
     7a4:	mov	w19, w1
     7a8:	mov	x0, #0x0                   	// #0
     7ac:	bl	28f0 <grub_auth_check_authentication>
     7b0:	cmp	w0, #0x0
     7b4:	ccmp	w19, #0x0, #0x4, ne  // ne = any
     7b8:	b.ne	7a8 <grub_cmdline_run+0x18>  // b.any
     7bc:	cbnz	w0, 834 <grub_cmdline_run+0xa4>
     7c0:	stp	x23, x24, [sp, #48]
     7c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     7c8:	ldr	x20, [x0]
     7cc:	ldr	x1, [x20]
     7d0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     7d4:	ldr	x0, [x0]
     7d8:	blr	x1
     7dc:	mov	x19, x0
     7e0:	ldr	x1, [x20]
     7e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     7e8:	ldr	x0, [x0]
     7ec:	blr	x1
     7f0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     7f4:	ldr	x1, [x1]
     7f8:	cmp	w21, #0x0
     7fc:	csel	x1, x19, x1, ne  // ne = any
     800:	bl	0 <grub_xasprintf>
     804:	mov	x23, x0
     808:	cbz	x0, 8f4 <grub_cmdline_run+0x164>
     80c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     810:	ldr	x0, [x0]
     814:	ldr	x19, [x0]
     818:	cbz	x19, 8ec <grub_cmdline_run+0x15c>
     81c:	str	x25, [sp, #64]
     820:	mov	w22, #0x1                   	// #1
     824:	mov	w25, #0x6                   	// #6
     828:	mov	w24, #0x3                   	// #3
     82c:	mov	w20, #0xa                   	// #10
     830:	b	894 <grub_cmdline_run+0x104>
     834:	bl	0 <grub_print_error>
     838:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     83c:	ldr	x0, [x0]
     840:	str	wzr, [x0]
     844:	ldp	x19, x20, [sp, #16]
     848:	ldp	x21, x22, [sp, #32]
     84c:	ldp	x29, x30, [sp], #96
     850:	ret
     854:	mov	x3, x19
     858:	mov	w2, #0x0                   	// #0
     85c:	mov	w1, #0x0                   	// #0
     860:	mov	x0, x23
     864:	bl	82ec <grub_print_message_indented>
     868:	mov	x1, x19
     86c:	mov	w0, w20
     870:	bl	a100 <grub_putcode>
     874:	mov	x1, x19
     878:	mov	w0, w20
     87c:	bl	a100 <grub_putcode>
     880:	mov	x1, x19
     884:	mov	w0, w20
     888:	bl	a100 <grub_putcode>
     88c:	ldr	x19, [x19]
     890:	cbz	x19, 8e8 <grub_cmdline_run+0x158>
     894:	mov	w1, w22
     898:	mov	x0, x19
     89c:	bl	334 <grub_normal_init_page>
     8a0:	ldr	x2, [x19, #96]
     8a4:	cbz	x2, 8b4 <grub_cmdline_run+0x124>
     8a8:	mov	w1, w22
     8ac:	mov	x0, x19
     8b0:	blr	x2
     8b4:	ldr	x1, [x19, #56]
     8b8:	mov	x0, x19
     8bc:	blr	x1
     8c0:	sub	w1, w0, #0x1
     8c4:	and	w1, w1, #0xffff
     8c8:	cmp	w1, #0x1c
     8cc:	b.ls	854 <grub_cmdline_run+0xc4>  // b.plast
     8d0:	mov	x3, x19
     8d4:	mov	w2, w25
     8d8:	mov	w1, w24
     8dc:	mov	x0, x23
     8e0:	bl	82ec <grub_print_message_indented>
     8e4:	b	868 <grub_cmdline_run+0xd8>
     8e8:	ldr	x25, [sp, #64]
     8ec:	mov	x0, x23
     8f0:	bl	0 <grub_free>
     8f4:	str	xzr, [sp, #88]
     8f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     8fc:	ldr	x0, [x0]
     900:	ldr	w0, [x0]
     904:	cbnz	w0, 964 <grub_cmdline_run+0x1d4>
     908:	adrp	x19, 0 <grub_normal_free_menu-0x26c>
     90c:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
     910:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
     914:	bl	0 <grub_print_error>
     918:	ldr	x0, [x19]
     91c:	str	wzr, [x0]
     920:	mov	w2, w21
     924:	mov	w1, #0x0                   	// #0
     928:	add	x0, sp, #0x58
     92c:	bl	d0 <grub_normal_free_menu-0x19c>
     930:	ldr	x0, [sp, #88]
     934:	cbz	x0, 96c <grub_cmdline_run+0x1dc>
     938:	mov	x2, #0x0                   	// #0
     93c:	ldr	x1, [x22]
     940:	bl	e0c0 <grub_normal_parse_line>
     944:	ldr	x0, [sp, #88]
     948:	bl	0 <grub_free>
     94c:	str	xzr, [sp, #88]
     950:	ldr	x0, [x20]
     954:	ldr	w0, [x0]
     958:	cbz	w0, 914 <grub_cmdline_run+0x184>
     95c:	ldp	x23, x24, [sp, #48]
     960:	b	844 <grub_cmdline_run+0xb4>
     964:	ldp	x23, x24, [sp, #48]
     968:	b	844 <grub_cmdline_run+0xb4>
     96c:	ldp	x23, x24, [sp, #48]
     970:	b	844 <grub_cmdline_run+0xb4>
     974:	nop
	...

00000000000009b8 <grub_enter_normal_mode>:
     9b8:	stp	x29, x30, [sp, #-32]!
     9bc:	mov	x29, sp
     9c0:	str	x19, [sp, #16]
     9c4:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     9c8:	ldr	x19, [x1]
     9cc:	ldr	w1, [x19, #4]
     9d0:	add	w1, w1, #0x1
     9d4:	str	w1, [x19, #4]
     9d8:	mov	w2, #0x0                   	// #0
     9dc:	mov	w1, #0x0                   	// #0
     9e0:	bl	478 <grub_normal_execute>
     9e4:	mov	w1, #0x1                   	// #1
     9e8:	mov	w0, #0x0                   	// #0
     9ec:	bl	790 <grub_cmdline_run>
     9f0:	ldr	w0, [x19, #4]
     9f4:	sub	w0, w0, #0x1
     9f8:	str	w0, [x19, #4]
     9fc:	ldr	w0, [x19]
     a00:	cbz	w0, a14 <grub_enter_normal_mode+0x5c>
     a04:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     a08:	ldr	x1, [x1]
     a0c:	sub	w0, w0, #0x1
     a10:	str	w0, [x1]
     a14:	ldr	x19, [sp, #16]
     a18:	ldp	x29, x30, [sp], #32
     a1c:	ret
	...
     a28:	stp	x29, x30, [sp, #-32]!
     a2c:	mov	x29, sp
     a30:	cbnz	w1, a80 <grub_enter_normal_mode+0xc8>
     a34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     a38:	ldr	x0, [x0]
     a3c:	bl	0 <grub_env_get>
     a40:	mov	x1, x0
     a44:	cbz	x0, a74 <grub_enter_normal_mode+0xbc>
     a48:	str	x19, [sp, #16]
     a4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     a50:	ldr	x0, [x0]
     a54:	bl	0 <grub_xasprintf>
     a58:	mov	x19, x0
     a5c:	cbz	x0, a94 <grub_enter_normal_mode+0xdc>
     a60:	bl	9b8 <grub_enter_normal_mode>
     a64:	mov	x0, x19
     a68:	bl	0 <grub_free>
     a6c:	ldr	x19, [sp, #16]
     a70:	b	a88 <grub_enter_normal_mode+0xd0>
     a74:	mov	x0, #0x0                   	// #0
     a78:	bl	9b8 <grub_enter_normal_mode>
     a7c:	b	a88 <grub_enter_normal_mode+0xd0>
     a80:	ldr	x0, [x2]
     a84:	bl	9b8 <grub_enter_normal_mode>
     a88:	mov	w0, #0x0                   	// #0
     a8c:	ldp	x29, x30, [sp], #32
     a90:	ret
     a94:	ldr	x19, [sp, #16]
     a98:	b	a88 <grub_enter_normal_mode+0xd0>
     a9c:	nop
	...

0000000000000ab0 <grub_mod_init>:
     ab0:	stp	x29, x30, [sp, #-48]!
     ab4:	mov	x29, sp
     ab8:	stp	x19, x20, [sp, #16]
     abc:	stp	x21, x22, [sp, #32]
     ac0:	mov	x19, x0
     ac4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     ac8:	ldr	x0, [x0]
     acc:	bl	0 <grub_dl_load>
     ad0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     ad4:	ldr	x0, [x0]
     ad8:	str	wzr, [x0]
     adc:	bl	2bb8 <grub_normal_auth_init>
     ae0:	bl	b950 <grub_context_init>
     ae4:	bl	e120 <grub_script_init>
     ae8:	bl	11e00 <grub_menu_init>
     aec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     af0:	ldr	x1, [x0]
     af4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     af8:	ldr	x0, [x0]
     afc:	ldr	x2, [x0]
     b00:	str	x2, [x1, #8]
     b04:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     b08:	ldr	x1, [x1]
     b0c:	str	x1, [x0]
     b10:	cbz	x19, b1c <grub_mod_init+0x6c>
     b14:	mov	x0, x19
     b18:	bl	0 <grub_dl_ref>
     b1c:	mov	w4, #0x0                   	// #0
     b20:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b24:	ldr	x3, [x0]
     b28:	mov	x2, #0x0                   	// #0
     b2c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b30:	ldr	x1, [x0]
     b34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b38:	ldr	x0, [x0]
     b3c:	bl	0 <grub_register_command_prio>
     b40:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     b44:	ldr	x1, [x1]
     b48:	str	x0, [x1, #16]
     b4c:	mov	w0, #0x32                  	// #50
     b50:	bl	15e8 <grub_set_history>
     b54:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b58:	ldr	x19, [x0]
     b5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b60:	ldr	x2, [x0]
     b64:	mov	x1, #0x0                   	// #0
     b68:	mov	x0, x19
     b6c:	bl	0 <grub_register_variable_hook>
     b70:	mov	x0, x19
     b74:	bl	0 <grub_env_export>
     b78:	mov	w4, #0x0                   	// #0
     b7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b80:	ldr	x3, [x0]
     b84:	mov	x2, #0x0                   	// #0
     b88:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b8c:	ldr	x1, [x0]
     b90:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     b94:	ldr	x0, [x0]
     b98:	bl	0 <grub_register_command_prio>
     b9c:	mov	w4, #0x0                   	// #0
     ba0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     ba4:	ldr	x3, [x0]
     ba8:	mov	x2, #0x0                   	// #0
     bac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     bb0:	ldr	x1, [x0]
     bb4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     bb8:	ldr	x0, [x0]
     bbc:	bl	0 <grub_register_command_prio>
     bc0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     bc4:	ldr	x20, [x0]
     bc8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     bcc:	ldr	x2, [x0]
     bd0:	mov	x1, #0x0                   	// #0
     bd4:	mov	x0, x20
     bd8:	bl	0 <grub_register_variable_hook>
     bdc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     be0:	ldr	x19, [x0]
     be4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     be8:	ldr	x2, [x0]
     bec:	mov	x1, #0x0                   	// #0
     bf0:	mov	x0, x19
     bf4:	bl	0 <grub_register_variable_hook>
     bf8:	mov	x0, x20
     bfc:	bl	0 <grub_env_export>
     c00:	mov	x0, x19
     c04:	bl	0 <grub_env_export>
     c08:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c0c:	ldr	x1, [x0]
     c10:	mov	x0, x20
     c14:	bl	0 <grub_env_set>
     c18:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c1c:	ldr	x1, [x0]
     c20:	mov	x0, x19
     c24:	bl	0 <grub_env_set>
     c28:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c2c:	ldr	x19, [x0]
     c30:	add	x22, x19, #0x50
     c34:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
     c38:	ldr	x20, [x19], #8
     c3c:	ldr	x1, [x21]
     c40:	mov	x0, x20
     c44:	bl	0 <grub_env_set>
     c48:	mov	x0, x20
     c4c:	bl	0 <grub_env_export>
     c50:	cmp	x19, x22
     c54:	b.ne	c38 <grub_mod_init+0x188>  // b.any
     c58:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c5c:	ldr	x19, [x0]
     c60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c64:	ldr	x1, [x0]
     c68:	mov	x0, x19
     c6c:	bl	0 <grub_env_set>
     c70:	mov	x0, x19
     c74:	bl	0 <grub_env_export>
     c78:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c7c:	ldr	x19, [x0]
     c80:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     c84:	ldr	x1, [x0]
     c88:	mov	x0, x19
     c8c:	bl	0 <grub_env_set>
     c90:	mov	x0, x19
     c94:	bl	0 <grub_env_export>
     c98:	ldp	x19, x20, [sp, #16]
     c9c:	ldp	x21, x22, [sp, #32]
     ca0:	ldp	x29, x30, [sp], #48
     ca4:	ret
	...

0000000000000d88 <grub_mod_fini>:
     d88:	stp	x29, x30, [sp, #-32]!
     d8c:	mov	x29, sp
     d90:	str	x19, [sp, #16]
     d94:	bl	b9c0 <grub_context_fini>
     d98:	bl	e2a8 <grub_script_fini>
     d9c:	bl	11ed8 <grub_menu_fini>
     da0:	bl	2c28 <grub_normal_auth_fini>
     da4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     da8:	ldr	x0, [x0]
     dac:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
     db0:	ldr	x19, [x1]
     db4:	ldr	x1, [x19, #8]
     db8:	str	x1, [x0]
     dbc:	mov	w0, #0x0                   	// #0
     dc0:	bl	15e8 <grub_set_history>
     dc4:	mov	x2, #0x0                   	// #0
     dc8:	mov	x1, #0x0                   	// #0
     dcc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     dd0:	ldr	x0, [x0]
     dd4:	bl	0 <grub_register_variable_hook>
     dd8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
     ddc:	ldr	x0, [x0]
     de0:	str	xzr, [x0]
     de4:	ldr	x0, [x19, #16]
     de8:	bl	0 <grub_unregister_command>
     dec:	ldr	x19, [sp, #16]
     df0:	ldp	x29, x30, [sp], #32
     df4:	ret
	...
     e18:	cbz	w1, e8c <grub_mod_fini+0x104>
     e1c:	stp	x29, x30, [sp, #-48]!
     e20:	mov	x29, sp
     e24:	stp	x19, x20, [sp, #16]
     e28:	str	x21, [sp, #32]
     e2c:	mov	x21, x2
     e30:	mov	x19, x0
     e34:	sub	w1, w1, #0x1
     e38:	add	x0, x0, #0x20
     e3c:	add	x20, x0, x1, lsl #5
     e40:	ldr	w0, [x19, #16]
     e44:	add	x1, x0, x21
     e48:	ldr	w0, [x19, #8]
     e4c:	udiv	x2, x1, x0
     e50:	msub	x0, x2, x0, x1
     e54:	strh	w0, [x19]
     e58:	ldr	w0, [x19, #4]
     e5c:	add	w0, w0, w2
     e60:	strh	w0, [x19, #2]
     e64:	ldr	x0, [x19, #24]
     e68:	ldr	x2, [x0, #72]
     e6c:	ldr	w1, [x19], #32
     e70:	blr	x2
     e74:	cmp	x19, x20
     e78:	b.ne	e40 <grub_mod_fini+0xb8>  // b.any
     e7c:	ldp	x19, x20, [sp, #16]
     e80:	ldr	x21, [sp, #32]
     e84:	ldp	x29, x30, [sp], #48
     e88:	ret
     e8c:	ret
     e90:	stp	x29, x30, [sp, #-32]!
     e94:	mov	x29, sp
     e98:	str	x19, [sp, #16]
     e9c:	mov	x19, x0
     ea0:	ldr	w0, [x0, #16]
     ea4:	strh	w0, [x19]
     ea8:	ldr	x0, [x19, #24]
     eac:	ldr	x1, [x0, #64]
     eb0:	blr	x1
     eb4:	lsr	w1, w0, #16
     eb8:	lsr	w0, w0, #16
     ebc:	strh	w1, [x19, #2]
     ec0:	str	w0, [x19, #4]
     ec4:	ldr	x0, [x19, #24]
     ec8:	ldr	x1, [x0, #56]
     ecc:	blr	x1
     ed0:	ands	w0, w0, #0xffff
     ed4:	mov	w1, #0x50                  	// #80
     ed8:	csel	w0, w0, w1, ne  // ne = any
     edc:	str	w0, [x19, #8]
     ee0:	ldr	x0, [x19, #24]
     ee4:	ldr	x1, [x0, #56]
     ee8:	blr	x1
     eec:	lsr	w0, w0, #16
     ef0:	cmp	w0, #0x0
     ef4:	mov	w1, #0x18                  	// #24
     ef8:	csel	w0, w0, w1, ne  // ne = any
     efc:	str	w0, [x19, #12]
     f00:	ldr	x19, [sp, #16]
     f04:	ldp	x29, x30, [sp], #32
     f08:	ret
     f0c:	cbz	w1, 1020 <grub_mod_fini+0x298>
     f10:	stp	x29, x30, [sp, #-80]!
     f14:	mov	x29, sp
     f18:	stp	x19, x20, [sp, #16]
     f1c:	stp	x21, x22, [sp, #32]
     f20:	stp	x23, x24, [sp, #48]
     f24:	stp	x25, x26, [sp, #64]
     f28:	mov	w21, w2
     f2c:	mov	x24, x3
     f30:	mov	x26, x4
     f34:	mov	x19, x0
     f38:	sub	w1, w1, #0x1
     f3c:	add	x0, x0, #0x20
     f40:	add	x25, x0, x1, lsl #5
     f44:	sub	x22, x4, #0x1
     f48:	sub	x22, x22, x3
     f4c:	and	x22, x22, #0xfffffffffffffffc
     f50:	add	x22, x22, #0x4
     f54:	add	x22, x3, x22
     f58:	mov	w23, #0xa                   	// #10
     f5c:	b	ff8 <grub_mod_fini+0x270>
     f60:	ldr	x1, [x19, #24]
     f64:	ldr	w0, [x20]
     f68:	bl	a100 <grub_putcode>
     f6c:	b	fa0 <grub_mod_fini+0x218>
     f70:	add	w1, w1, #0x1
     f74:	strh	w1, [x19, #2]
     f78:	ldr	x1, [x2, #24]
     f7c:	mov	w0, w23
     f80:	bl	a100 <grub_putcode>
     f84:	add	x20, x20, #0x4
     f88:	cmp	x20, x22
     f8c:	b.eq	fec <grub_mod_fini+0x264>  // b.none
     f90:	cbz	w21, f60 <grub_mod_fini+0x1d8>
     f94:	ldr	x1, [x19, #24]
     f98:	mov	w0, w21
     f9c:	bl	a100 <grub_putcode>
     fa0:	mov	x2, x19
     fa4:	ldrh	w0, [x19]
     fa8:	add	w0, w0, #0x1
     fac:	and	w0, w0, #0xffff
     fb0:	strh	w0, [x19]
     fb4:	ldr	w1, [x19, #8]
     fb8:	sub	w1, w1, #0x1
     fbc:	cmp	w0, w1
     fc0:	b.cc	f84 <grub_mod_fini+0x1fc>  // b.lo, b.ul, b.last
     fc4:	strh	wzr, [x19]
     fc8:	ldrh	w1, [x19, #2]
     fcc:	ldr	w0, [x19, #12]
     fd0:	sub	w0, w0, #0x1
     fd4:	cmp	w1, w0
     fd8:	b.cc	f70 <grub_mod_fini+0x1e8>  // b.lo, b.ul, b.last
     fdc:	ldr	w0, [x19, #4]
     fe0:	sub	w0, w0, #0x1
     fe4:	str	w0, [x19, #4]
     fe8:	b	f78 <grub_mod_fini+0x1f0>
     fec:	add	x19, x19, #0x20
     ff0:	cmp	x19, x25
     ff4:	b.eq	1008 <grub_mod_fini+0x280>  // b.none
     ff8:	cmp	x24, x26
     ffc:	b.cs	fec <grub_mod_fini+0x264>  // b.hs, b.nlast
    1000:	mov	x20, x24
    1004:	b	f90 <grub_mod_fini+0x208>
    1008:	ldp	x19, x20, [sp, #16]
    100c:	ldp	x21, x22, [sp, #32]
    1010:	ldp	x23, x24, [sp, #48]
    1014:	ldp	x25, x26, [sp, #64]
    1018:	ldp	x29, x30, [sp], #80
    101c:	ret
    1020:	ret
    1024:	stp	x29, x30, [sp, #-80]!
    1028:	mov	x29, sp
    102c:	stp	x21, x22, [sp, #32]
    1030:	stp	x25, x26, [sp, #64]
    1034:	mov	x25, x2
    1038:	mov	w21, w5
    103c:	add	x22, x21, x3
    1040:	ldr	x2, [x4]
    1044:	cmp	x22, x2
    1048:	b.ls	105c <grub_mod_fini+0x2d4>  // b.plast
    104c:	ldp	x21, x22, [sp, #32]
    1050:	ldp	x25, x26, [sp, #64]
    1054:	ldp	x29, x30, [sp], #80
    1058:	ret
    105c:	stp	x19, x20, [sp, #16]
    1060:	stp	x23, x24, [sp, #48]
    1064:	mov	x23, x0
    1068:	mov	w24, w1
    106c:	mov	x19, x3
    1070:	mov	x20, x4
    1074:	sub	x2, x2, x21
    1078:	bl	e18 <grub_mod_fini+0x90>
    107c:	ldr	x4, [x20]
    1080:	sub	x3, x4, x21
    1084:	add	x4, x25, x4, lsl #2
    1088:	add	x3, x25, x3, lsl #2
    108c:	mov	w2, #0x20                  	// #32
    1090:	mov	w1, w24
    1094:	mov	x0, x23
    1098:	bl	f0c <grub_mod_fini+0x184>
    109c:	mov	x2, x19
    10a0:	mov	w1, w24
    10a4:	mov	x0, x23
    10a8:	bl	e18 <grub_mod_fini+0x90>
    10ac:	add	x26, x25, x19, lsl #2
    10b0:	ldr	x2, [x20]
    10b4:	add	x2, x2, #0x1
    10b8:	sub	x2, x2, x19
    10bc:	lsl	x2, x2, #2
    10c0:	add	x1, x25, x22, lsl #2
    10c4:	mov	x0, x26
    10c8:	bl	0 <grub_memmove>
    10cc:	ldr	x4, [x20]
    10d0:	sub	x4, x4, x21
    10d4:	str	x4, [x20]
    10d8:	add	x4, x25, x4, lsl #2
    10dc:	mov	x3, x26
    10e0:	mov	w2, #0x0                   	// #0
    10e4:	mov	w1, w24
    10e8:	mov	x0, x23
    10ec:	bl	f0c <grub_mod_fini+0x184>
    10f0:	mov	x2, x19
    10f4:	mov	w1, w24
    10f8:	mov	x0, x23
    10fc:	bl	e18 <grub_mod_fini+0x90>
    1100:	ldp	x19, x20, [sp, #16]
    1104:	ldp	x23, x24, [sp, #48]
    1108:	b	104c <grub_mod_fini+0x2c4>
    110c:	stp	x29, x30, [sp, #-64]!
    1110:	mov	x29, sp
    1114:	stp	x19, x20, [sp, #16]
    1118:	stp	x21, x22, [sp, #32]
    111c:	str	x23, [sp, #48]
    1120:	mov	x22, x1
    1124:	mov	x19, x2
    1128:	sxtw	x20, w0
    112c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1130:	ldr	x21, [x0]
    1134:	ldr	x0, [x21]
    1138:	ldr	x0, [x0, x20, lsl #3]
    113c:	bl	0 <grub_free>
    1140:	add	x19, x19, #0x1
    1144:	lsl	x19, x19, #2
    1148:	ldr	x23, [x21]
    114c:	mov	x0, x19
    1150:	bl	0 <grub_malloc>
    1154:	str	x0, [x23, x20, lsl #3]
    1158:	ldr	x0, [x21]
    115c:	ldr	x0, [x0, x20, lsl #3]
    1160:	cbz	x0, 119c <grub_mod_fini+0x414>
    1164:	sub	x19, x19, #0x4
    1168:	mov	x2, x19
    116c:	mov	x1, x22
    1170:	bl	0 <grub_memmove>
    1174:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1178:	ldr	x0, [x0]
    117c:	ldr	x0, [x0]
    1180:	ldr	x0, [x0, x20, lsl #3]
    1184:	str	wzr, [x0, x19]
    1188:	ldp	x19, x20, [sp, #16]
    118c:	ldp	x21, x22, [sp, #32]
    1190:	ldr	x23, [sp, #48]
    1194:	ldp	x29, x30, [sp], #64
    1198:	ret
    119c:	bl	0 <grub_print_error>
    11a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    11a4:	ldr	x0, [x0]
    11a8:	str	wzr, [x0]
    11ac:	b	1188 <grub_mod_fini+0x400>
	...
    11c0:	stp	x29, x30, [sp, #-16]!
    11c4:	mov	x29, sp
    11c8:	adrp	x3, 0 <grub_normal_free_menu-0x26c>
    11cc:	ldr	x4, [x3]
    11d0:	ldr	w3, [x4, #8]
    11d4:	add	w3, w0, w3
    11d8:	ldr	w0, [x4, #12]
    11dc:	udiv	w4, w3, w0
    11e0:	msub	w0, w4, w0, w3
    11e4:	bl	110c <grub_mod_fini+0x384>
    11e8:	ldp	x29, x30, [sp], #16
    11ec:	ret
	...
    11f8:	stp	x29, x30, [sp, #-32]!
    11fc:	mov	x29, sp
    1200:	stp	x19, x20, [sp, #16]
    1204:	mov	x19, x0
    1208:	mov	x20, x1
    120c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1210:	ldr	x1, [x0]
    1214:	ldr	w0, [x1, #16]
    1218:	ldr	w1, [x1, #12]
    121c:	cmp	w0, w1
    1220:	b.lt	12b4 <grub_mod_fini+0x52c>  // b.tstop
    1224:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1228:	ldr	x0, [x0]
    122c:	ldr	w0, [x0, #20]
    1230:	subs	w0, w0, #0x1
    1234:	b.mi	12a0 <grub_mod_fini+0x518>  // b.first
    1238:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    123c:	ldr	x1, [x1]
    1240:	str	w0, [x1, #20]
    1244:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1248:	ldr	x0, [x0]
    124c:	ldrsw	x1, [x0, #20]
    1250:	ldr	x0, [x0]
    1254:	ldr	x0, [x0, x1, lsl #3]
    1258:	bl	0 <grub_free>
    125c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1260:	ldr	x0, [x0]
    1264:	ldr	w2, [x0, #8]
    1268:	sub	w2, w2, #0x1
    126c:	str	w2, [x0, #8]
    1270:	tbnz	w2, #31, 12c8 <grub_mod_fini+0x540>
    1274:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1278:	ldr	x1, [x0]
    127c:	ldr	w0, [x1, #8]
    1280:	ldr	x1, [x1]
    1284:	str	xzr, [x1, w0, sxtw #3]
    1288:	mov	x2, x20
    128c:	mov	x1, x19
    1290:	bl	110c <grub_mod_fini+0x384>
    1294:	ldp	x19, x20, [sp, #16]
    1298:	ldp	x29, x30, [sp], #32
    129c:	ret
    12a0:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    12a4:	ldr	x2, [x2]
    12a8:	add	w1, w1, w0
    12ac:	str	w1, [x2, #20]
    12b0:	b	1244 <grub_mod_fini+0x4bc>
    12b4:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    12b8:	ldr	x1, [x1]
    12bc:	add	w0, w0, #0x1
    12c0:	str	w0, [x1, #16]
    12c4:	b	125c <grub_mod_fini+0x4d4>
    12c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    12cc:	ldr	x1, [x0]
    12d0:	ldr	w0, [x1, #12]
    12d4:	add	w2, w0, w2
    12d8:	str	w2, [x1, #8]
    12dc:	b	1274 <grub_mod_fini+0x4ec>
	...
    12e8:	stp	x29, x30, [sp, #-64]!
    12ec:	mov	x29, sp
    12f0:	stp	x19, x20, [sp, #16]
    12f4:	mov	x20, x0
    12f8:	mov	w19, w1
    12fc:	cbnz	w2, 13ac <grub_mod_fini+0x624>
    1300:	str	x21, [sp, #32]
    1304:	mov	w0, #0xa                   	// #10
    1308:	strh	w0, [sp, #56]
    130c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1310:	ldr	x21, [x0]
    1314:	ldr	x1, [x21]
    1318:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    131c:	ldr	x0, [x0]
    1320:	blr	x1
    1324:	ldr	x1, [x21]
    1328:	add	x0, sp, #0x38
    132c:	blr	x1
    1330:	cmp	w19, #0x2
    1334:	b.eq	13e0 <grub_mod_fini+0x658>  // b.none
    1338:	b.ls	135c <grub_mod_fini+0x5d4>  // b.plast
    133c:	cmp	w19, #0x3
    1340:	b.eq	13d0 <grub_mod_fini+0x648>  // b.none
    1344:	cmp	w19, #0x4
    1348:	b.ne	13f0 <grub_mod_fini+0x668>  // b.any
    134c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1350:	ldr	x0, [x0]
    1354:	bl	0 <grub_puts_>
    1358:	b	137c <grub_mod_fini+0x5f4>
    135c:	cbz	w19, 1370 <grub_mod_fini+0x5e8>
    1360:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1364:	ldr	x0, [x0]
    1368:	bl	0 <grub_puts_>
    136c:	b	137c <grub_mod_fini+0x5f4>
    1370:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1374:	ldr	x0, [x0]
    1378:	bl	0 <grub_puts_>
    137c:	mov	w0, #0xa                   	// #10
    1380:	strh	w0, [sp, #56]
    1384:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1388:	ldr	x21, [x0]
    138c:	ldr	x1, [x21]
    1390:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1394:	ldr	x0, [x0]
    1398:	blr	x1
    139c:	ldr	x1, [x21]
    13a0:	add	x0, sp, #0x38
    13a4:	blr	x1
    13a8:	ldr	x21, [sp, #32]
    13ac:	cmp	w19, #0x2
    13b0:	b.eq	1400 <grub_mod_fini+0x678>  // b.none
    13b4:	mov	x1, x20
    13b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    13bc:	ldr	x0, [x0]
    13c0:	bl	0 <grub_printf>
    13c4:	ldp	x19, x20, [sp, #16]
    13c8:	ldp	x29, x30, [sp], #64
    13cc:	ret
    13d0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    13d4:	ldr	x0, [x0]
    13d8:	bl	0 <grub_puts_>
    13dc:	b	137c <grub_mod_fini+0x5f4>
    13e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    13e4:	ldr	x0, [x0]
    13e8:	bl	0 <grub_puts_>
    13ec:	b	137c <grub_mod_fini+0x5f4>
    13f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    13f4:	ldr	x0, [x0]
    13f8:	bl	0 <grub_puts_>
    13fc:	b	137c <grub_mod_fini+0x5f4>
    1400:	mov	x0, x20
    1404:	bl	8e70 <grub_normal_print_device_info>
    1408:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    140c:	ldr	x0, [x0]
    1410:	str	wzr, [x0]
    1414:	b	13c4 <grub_mod_fini+0x63c>
	...
    1468:	stp	x29, x30, [sp, #-96]!
    146c:	mov	x29, sp
    1470:	stp	x19, x20, [sp, #16]
    1474:	stp	x21, x22, [sp, #32]
    1478:	stp	x23, x24, [sp, #48]
    147c:	stp	x25, x26, [sp, #64]
    1480:	str	x27, [sp, #80]
    1484:	mov	x26, x0
    1488:	mov	w27, w1
    148c:	mov	x23, x2
    1490:	mov	x21, x3
    1494:	mov	x22, x4
    1498:	mov	x25, x5
    149c:	mov	x19, x6
    14a0:	ldr	w0, [x6]
    14a4:	cbz	w0, 1568 <grub_mod_fini+0x7e0>
    14a8:	mov	x20, x6
    14ac:	ldr	w0, [x20, #4]!
    14b0:	cbnz	w0, 14ac <grub_mod_fini+0x724>
    14b4:	sub	x20, x20, x19
    14b8:	asr	x24, x20, #2
    14bc:	ldr	x3, [x21]
    14c0:	ldr	x1, [x22]
    14c4:	add	x0, x3, x24
    14c8:	cmp	x0, x1
    14cc:	b.cs	1570 <grub_mod_fini+0x7e8>  // b.hs, b.nlast
    14d0:	ldr	x0, [x25]
    14d4:	ldr	x1, [x23]
    14d8:	sub	x2, x3, x1
    14dc:	add	x2, x2, #0x1
    14e0:	add	x3, x1, x24
    14e4:	lsl	x2, x2, #2
    14e8:	add	x1, x0, x1, lsl #2
    14ec:	add	x0, x0, x3, lsl #2
    14f0:	bl	0 <grub_memmove>
    14f4:	ldr	x3, [x23]
    14f8:	ldr	x0, [x25]
    14fc:	mov	x2, x20
    1500:	mov	x1, x19
    1504:	add	x0, x0, x3, lsl #2
    1508:	bl	0 <grub_memmove>
    150c:	ldr	x0, [x21]
    1510:	add	x0, x0, x24
    1514:	str	x0, [x21]
    1518:	ldr	x2, [x23]
    151c:	mov	w1, w27
    1520:	mov	x0, x26
    1524:	bl	e18 <grub_mod_fini+0x90>
    1528:	ldr	x0, [x25]
    152c:	ldr	x4, [x21]
    1530:	ldr	x3, [x23]
    1534:	add	x4, x0, x4, lsl #2
    1538:	add	x3, x0, x3, lsl #2
    153c:	mov	w2, #0x0                   	// #0
    1540:	mov	w1, w27
    1544:	mov	x0, x26
    1548:	bl	f0c <grub_mod_fini+0x184>
    154c:	ldr	x2, [x23]
    1550:	add	x2, x24, x2
    1554:	str	x2, [x23]
    1558:	mov	w1, w27
    155c:	mov	x0, x26
    1560:	bl	e18 <grub_mod_fini+0x90>
    1564:	b	15a0 <grub_mod_fini+0x818>
    1568:	mov	x20, x6
    156c:	b	14b4 <grub_mod_fini+0x72c>
    1570:	lsl	x0, x1, #1
    1574:	str	x0, [x22]
    1578:	lsl	x1, x1, #3
    157c:	ldr	x0, [x25]
    1580:	bl	0 <grub_realloc>
    1584:	cbz	x0, 15bc <grub_mod_fini+0x834>
    1588:	str	x0, [x25]
    158c:	ldr	x3, [x21]
    1590:	add	x1, x3, x24
    1594:	ldr	x0, [x22]
    1598:	cmp	x1, x0
    159c:	b.cc	14d0 <grub_mod_fini+0x748>  // b.lo, b.ul, b.last
    15a0:	ldp	x19, x20, [sp, #16]
    15a4:	ldp	x21, x22, [sp, #32]
    15a8:	ldp	x23, x24, [sp, #48]
    15ac:	ldp	x25, x26, [sp, #64]
    15b0:	ldr	x27, [sp, #80]
    15b4:	ldp	x29, x30, [sp], #96
    15b8:	ret
    15bc:	bl	0 <grub_print_error>
    15c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    15c4:	ldr	x0, [x0]
    15c8:	str	wzr, [x0]
    15cc:	ldr	x0, [x22]
    15d0:	lsr	x0, x0, #1
    15d4:	str	x0, [x22]
    15d8:	b	158c <grub_mod_fini+0x804>
    15dc:	nop
	...

00000000000015e8 <grub_set_history>:
    15e8:	stp	x29, x30, [sp, #-64]!
    15ec:	mov	x29, sp
    15f0:	stp	x19, x20, [sp, #16]
    15f4:	stp	x21, x22, [sp, #32]
    15f8:	mov	w20, w0
    15fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1600:	ldr	x19, [x0]
    1604:	ldr	x21, [x19]
    1608:	sbfiz	x0, x20, #3, #32
    160c:	bl	0 <grub_malloc>
    1610:	str	x0, [x19]
    1614:	cbz	x21, 16c8 <grub_set_history+0xe0>
    1618:	stp	x23, x24, [sp, #48]
    161c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1620:	ldr	x0, [x0]
    1624:	ldr	w24, [x0, #16]
    1628:	cmp	w24, w20
    162c:	b.le	169c <grub_set_history+0xb4>
    1630:	sub	w24, w24, w20
    1634:	sxtw	x23, w24
    1638:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    163c:	ldr	x0, [x0]
    1640:	str	w20, [x0, #16]
    1644:	add	x23, x23, #0x1
    1648:	mov	x19, #0x1                   	// #1
    164c:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    1650:	b	1670 <grub_set_history+0x88>
    1654:	ldrsw	x0, [x0, #12]
    1658:	add	x1, x1, x0
    165c:	ldr	x0, [x21, x1, lsl #3]
    1660:	bl	0 <grub_free>
    1664:	add	x19, x19, #0x1
    1668:	cmp	x19, x23
    166c:	b.cs	1684 <grub_set_history+0x9c>  // b.hs, b.nlast
    1670:	ldr	x0, [x22]
    1674:	ldrsw	x1, [x0, #20]
    1678:	subs	x1, x1, x19
    167c:	b.pl	165c <grub_set_history+0x74>  // b.nfrst
    1680:	b	1654 <grub_set_history+0x6c>
    1684:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1688:	ldr	x1, [x0]
    168c:	ldr	w0, [x1, #20]
    1690:	sub	w24, w0, w24
    1694:	str	w24, [x1, #20]
    1698:	tbnz	w24, #31, 16fc <grub_set_history+0x114>
    169c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    16a0:	ldr	x0, [x0]
    16a4:	ldr	w1, [x0, #8]
    16a8:	ldr	w2, [x0, #20]
    16ac:	cmp	w1, w2
    16b0:	b.lt	170c <grub_set_history+0x124>  // b.tstop
    16b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    16b8:	ldr	x0, [x0]
    16bc:	ldr	w0, [x0, #16]
    16c0:	cbnz	w0, 1730 <grub_set_history+0x148>
    16c4:	ldp	x23, x24, [sp, #48]
    16c8:	mov	x0, x21
    16cc:	bl	0 <grub_free>
    16d0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    16d4:	ldr	x0, [x0]
    16d8:	str	w20, [x0, #12]
    16dc:	str	wzr, [x0, #8]
    16e0:	ldr	w1, [x0, #16]
    16e4:	str	w1, [x0, #20]
    16e8:	mov	w0, #0x0                   	// #0
    16ec:	ldp	x19, x20, [sp, #16]
    16f0:	ldp	x21, x22, [sp, #32]
    16f4:	ldp	x29, x30, [sp], #64
    16f8:	ret
    16fc:	ldr	w0, [x1, #12]
    1700:	add	w24, w0, w24
    1704:	str	w24, [x1, #20]
    1708:	b	169c <grub_set_history+0xb4>
    170c:	sub	w2, w2, w1
    1710:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1714:	ldr	x0, [x0]
    1718:	sbfiz	x2, x2, #3, #32
    171c:	add	x1, x21, w1, sxtw #3
    1720:	ldr	x0, [x0]
    1724:	bl	0 <grub_memmove>
    1728:	ldp	x23, x24, [sp, #48]
    172c:	b	16c8 <grub_set_history+0xe0>
    1730:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1734:	ldr	x19, [x0]
    1738:	ldr	w2, [x19, #12]
    173c:	sub	w2, w2, w1
    1740:	sbfiz	x2, x2, #3, #32
    1744:	add	x1, x21, w1, sxtw #3
    1748:	ldr	x0, [x19]
    174c:	bl	0 <grub_memmove>
    1750:	ldrsw	x2, [x19, #20]
    1754:	ldrsw	x0, [x19, #12]
    1758:	ldrsw	x1, [x19, #8]
    175c:	sub	x0, x0, x1
    1760:	ldr	x3, [x19]
    1764:	lsl	x2, x2, #3
    1768:	mov	x1, x21
    176c:	add	x0, x3, x0, lsl #3
    1770:	bl	0 <grub_memmove>
    1774:	ldp	x23, x24, [sp, #48]
    1778:	b	16c8 <grub_set_history+0xe0>
    177c:	nop
	...

0000000000001788 <grub_cmdline_get>:
    1788:	stp	x29, x30, [sp, #-144]!
    178c:	mov	x29, sp
    1790:	stp	x21, x22, [sp, #32]
    1794:	stp	x23, x24, [sp, #48]
    1798:	mov	x21, x0
    179c:	mov	x0, #0x100                 	// #256
    17a0:	str	x0, [sp, #112]
    17a4:	mov	x0, #0x400                 	// #1024
    17a8:	bl	0 <grub_malloc>
    17ac:	mov	x23, x0
    17b0:	str	x0, [sp, #120]
    17b4:	cbz	x0, 2104 <grub_cmdline_get+0x97c>
    17b8:	stp	x19, x20, [sp, #16]
    17bc:	str	xzr, [sp, #128]
    17c0:	str	xzr, [sp, #136]
    17c4:	str	wzr, [x0]
    17c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    17cc:	ldr	x0, [x0]
    17d0:	ldr	x19, [x0]
    17d4:	cbz	x19, 180c <grub_cmdline_get+0x84>
    17d8:	mov	w20, #0xa                   	// #10
    17dc:	b	17f4 <grub_cmdline_get+0x6c>
    17e0:	mov	x1, x19
    17e4:	mov	w0, w20
    17e8:	bl	a100 <grub_putcode>
    17ec:	ldr	x19, [x19]
    17f0:	cbz	x19, 180c <grub_cmdline_get+0x84>
    17f4:	ldr	x1, [x19, #64]
    17f8:	mov	x0, x19
    17fc:	blr	x1
    1800:	tst	w0, #0xffff
    1804:	b.eq	17ec <grub_cmdline_get+0x64>  // b.none
    1808:	b	17e0 <grub_cmdline_get+0x58>
    180c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1810:	ldr	x19, [x0]
    1814:	ldr	x1, [x19]
    1818:	mov	x0, x21
    181c:	blr	x1
    1820:	ldr	x1, [x19]
    1824:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1828:	ldr	x0, [x0]
    182c:	blr	x1
    1830:	bl	9d2c <grub_normal_reset_more>
    1834:	mov	x0, x21
    1838:	bl	0 <grub_strlen>
    183c:	mov	x19, x0
    1840:	add	x20, x0, #0x3
    1844:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1848:	ldr	x0, [x0]
    184c:	ldr	x1, [x0]
    1850:	cbz	x1, 192c <grub_cmdline_get+0x1a4>
    1854:	mov	w22, #0x0                   	// #0
    1858:	add	w22, w22, #0x1
    185c:	ldr	x1, [x1]
    1860:	cbnz	x1, 1858 <grub_cmdline_get+0xd0>
    1864:	ubfiz	x0, x22, #5, #32
    1868:	bl	0 <grub_malloc>
    186c:	mov	x24, x0
    1870:	cbz	x0, 1934 <grub_cmdline_get+0x1ac>
    1874:	lsl	x0, x20, #2
    1878:	bl	0 <grub_malloc>
    187c:	mov	x23, x0
    1880:	cbz	x0, 1948 <grub_cmdline_get+0x1c0>
    1884:	stp	x25, x26, [sp, #64]
    1888:	mov	x4, #0x0                   	// #0
    188c:	mov	x3, #0xffffffffffffffff    	// #-1
    1890:	mov	x2, x21
    1894:	add	x1, x19, #0x2
    1898:	bl	bfb0 <grub_utf8_to_ucs4>
    189c:	lsl	x25, x0, #2
    18a0:	mov	w1, #0x20                  	// #32
    18a4:	str	w1, [x23, x0, lsl #2]
    18a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    18ac:	ldr	x0, [x0]
    18b0:	ldr	x19, [x0]
    18b4:	cbz	x19, 18f0 <grub_cmdline_get+0x168>
    18b8:	add	x25, x25, #0x4
    18bc:	add	x25, x23, x25
    18c0:	mov	x20, x24
    18c4:	str	x19, [x20, #24]
    18c8:	mov	x2, x19
    18cc:	mov	x1, x25
    18d0:	mov	x0, x23
    18d4:	bl	81e4 <grub_getstringwidth>
    18d8:	str	w0, [x20, #16]
    18dc:	mov	x0, x20
    18e0:	bl	e90 <grub_mod_fini+0x108>
    18e4:	add	x20, x20, #0x20
    18e8:	ldr	x19, [x19]
    18ec:	cbnz	x19, 18c4 <grub_cmdline_get+0x13c>
    18f0:	mov	x0, x23
    18f4:	bl	0 <grub_free>
    18f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    18fc:	ldr	x0, [x0]
    1900:	ldr	w0, [x0, #16]
    1904:	cbz	w0, 1960 <grub_cmdline_get+0x1d8>
    1908:	bl	0 <grub_refresh>
    190c:	mov	x25, x24
    1910:	sub	w20, w22, #0x1
    1914:	add	x0, x24, #0x20
    1918:	add	x20, x0, x20, lsl #5
    191c:	mov	w23, #0x0                   	// #0
    1920:	mov	w19, #0x61                  	// #97
    1924:	movk	w19, #0x200, lsl #16
    1928:	b	1a14 <grub_cmdline_get+0x28c>
    192c:	mov	w22, #0x0                   	// #0
    1930:	b	1864 <grub_cmdline_get+0xdc>
    1934:	ldr	x0, [sp, #120]
    1938:	bl	0 <grub_free>
    193c:	mov	x23, x24
    1940:	ldp	x19, x20, [sp, #16]
    1944:	b	2104 <grub_cmdline_get+0x97c>
    1948:	ldr	x0, [sp, #120]
    194c:	bl	0 <grub_free>
    1950:	mov	x0, x24
    1954:	bl	0 <grub_free>
    1958:	ldp	x19, x20, [sp, #16]
    195c:	b	2104 <grub_cmdline_get+0x97c>
    1960:	ldr	x1, [sp, #128]
    1964:	ldr	x0, [sp, #120]
    1968:	bl	11f8 <grub_mod_fini+0x470>
    196c:	b	1908 <grub_cmdline_get+0x180>
    1970:	mov	w1, #0x48                  	// #72
    1974:	movk	w1, #0x80, lsl #16
    1978:	cmp	w0, w1
    197c:	b.eq	1c90 <grub_cmdline_get+0x508>  // b.none
    1980:	b.le	19e0 <grub_cmdline_get+0x258>
    1984:	mov	w1, #0x4f                  	// #79
    1988:	movk	w1, #0x80, lsl #16
    198c:	cmp	w0, w1
    1990:	b.eq	1d2c <grub_cmdline_get+0x5a4>  // b.none
    1994:	b.le	1bdc <grub_cmdline_get+0x454>
    1998:	mov	w1, #0x50                  	// #80
    199c:	movk	w1, #0x80, lsl #16
    19a0:	cmp	w0, w1
    19a4:	b.eq	1eec <grub_cmdline_get+0x764>  // b.none
    19a8:	add	w1, w1, #0x3
    19ac:	cmp	w0, w1
    19b0:	b.ne	1a10 <grub_cmdline_get+0x288>  // b.any
    19b4:	ldr	x3, [sp, #136]
    19b8:	ldr	x0, [sp, #128]
    19bc:	cmp	x3, x0
    19c0:	b.cs	1a10 <grub_cmdline_get+0x288>  // b.hs, b.nlast
    19c4:	mov	w5, #0x1                   	// #1
    19c8:	add	x4, sp, #0x80
    19cc:	ldr	x2, [sp, #120]
    19d0:	mov	w1, w22
    19d4:	mov	x0, x24
    19d8:	bl	1024 <grub_mod_fini+0x29c>
    19dc:	b	1a10 <grub_cmdline_get+0x288>
    19e0:	cmp	w0, #0x1b
    19e4:	b.eq	2044 <grub_cmdline_get+0x8bc>  // b.none
    19e8:	b.le	1a98 <grub_cmdline_get+0x310>
    19ec:	mov	w1, #0x47                  	// #71
    19f0:	movk	w1, #0x80, lsl #16
    19f4:	cmp	w0, w1
    19f8:	b.ne	2064 <grub_cmdline_get+0x8dc>  // b.any
    19fc:	str	xzr, [sp, #136]
    1a00:	mov	x2, #0x0                   	// #0
    1a04:	mov	w1, w22
    1a08:	mov	x0, x24
    1a0c:	bl	e18 <grub_mod_fini+0x90>
    1a10:	bl	0 <grub_refresh>
    1a14:	bl	0 <grub_getkey>
    1a18:	cmp	w0, #0xa
    1a1c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    1a20:	b.eq	209c <grub_cmdline_get+0x914>  // b.none
    1a24:	cmp	w0, w19
    1a28:	b.eq	19fc <grub_cmdline_get+0x274>  // b.none
    1a2c:	b.le	1970 <grub_cmdline_get+0x1e8>
    1a30:	mov	w1, #0x6b                  	// #107
    1a34:	movk	w1, #0x200, lsl #16
    1a38:	cmp	w0, w1
    1a3c:	b.eq	1e2c <grub_cmdline_get+0x6a4>  // b.none
    1a40:	b.le	1c20 <grub_cmdline_get+0x498>
    1a44:	mov	w1, #0x75                  	// #117
    1a48:	movk	w1, #0x200, lsl #16
    1a4c:	cmp	w0, w1
    1a50:	b.eq	1f88 <grub_cmdline_get+0x800>  // b.none
    1a54:	b.le	1c74 <grub_cmdline_get+0x4ec>
    1a58:	mov	w1, #0x79                  	// #121
    1a5c:	movk	w1, #0x200, lsl #16
    1a60:	cmp	w0, w1
    1a64:	b.ne	1a10 <grub_cmdline_get+0x288>  // b.any
    1a68:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1a6c:	ldr	x0, [x0]
    1a70:	ldr	x6, [x0, #24]
    1a74:	cbz	x6, 1a10 <grub_cmdline_get+0x288>
    1a78:	add	x5, sp, #0x78
    1a7c:	add	x4, sp, #0x70
    1a80:	add	x3, sp, #0x80
    1a84:	add	x2, sp, #0x88
    1a88:	mov	w1, w22
    1a8c:	mov	x0, x24
    1a90:	bl	1468 <grub_mod_fini+0x6e0>
    1a94:	b	1a10 <grub_cmdline_get+0x288>
    1a98:	cmp	w0, #0x8
    1a9c:	b.ne	1ac0 <grub_cmdline_get+0x338>  // b.any
    1aa0:	ldr	x0, [sp, #136]
    1aa4:	cbz	x0, 1a10 <grub_cmdline_get+0x288>
    1aa8:	sub	x2, x0, #0x1
    1aac:	str	x2, [sp, #136]
    1ab0:	mov	w1, w22
    1ab4:	mov	x0, x24
    1ab8:	bl	e18 <grub_mod_fini+0x90>
    1abc:	b	19b4 <grub_cmdline_get+0x22c>
    1ac0:	cmp	w0, #0x9
    1ac4:	b.ne	1a10 <grub_cmdline_get+0x288>  // b.any
    1ac8:	stp	x27, x28, [sp, #80]
    1acc:	ldr	x1, [sp, #136]
    1ad0:	ldr	x0, [sp, #120]
    1ad4:	ldr	w27, [x0, x1, lsl #2]
    1ad8:	str	wzr, [x0, x1, lsl #2]
    1adc:	ldr	x1, [sp, #136]
    1ae0:	ldr	x0, [sp, #120]
    1ae4:	bl	be54 <grub_ucs4_to_utf8_alloc>
    1ae8:	mov	x26, x0
    1aec:	ldr	x1, [sp, #136]
    1af0:	ldr	x0, [sp, #120]
    1af4:	str	w27, [x0, x1, lsl #2]
    1af8:	cbz	x26, 1d44 <grub_cmdline_get+0x5bc>
    1afc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1b00:	ldr	x2, [x0]
    1b04:	add	x1, sp, #0x68
    1b08:	mov	x0, x26
    1b0c:	bl	3668 <grub_normal_do_completion>
    1b10:	mov	x27, x0
    1b14:	mov	x0, x26
    1b18:	bl	0 <grub_free>
    1b1c:	bl	9d2c <grub_normal_reset_more>
    1b20:	ldr	w0, [sp, #104]
    1b24:	cbnz	w0, 1d5c <grub_cmdline_get+0x5d4>
    1b28:	cbz	x27, 1bc4 <grub_cmdline_get+0x43c>
    1b2c:	mov	x0, x27
    1b30:	bl	0 <grub_strlen>
    1b34:	mov	x28, x0
    1b38:	add	x0, x0, #0x1
    1b3c:	lsl	x0, x0, #2
    1b40:	bl	0 <grub_malloc>
    1b44:	mov	x26, x0
    1b48:	cbz	x0, 1dcc <grub_cmdline_get+0x644>
    1b4c:	mov	x4, #0x0                   	// #0
    1b50:	mov	x3, x28
    1b54:	mov	x2, x27
    1b58:	mov	x1, x28
    1b5c:	bl	bfb0 <grub_utf8_to_ucs4>
    1b60:	cmp	x0, #0x0
    1b64:	b.le	1bb4 <grub_cmdline_get+0x42c>
    1b68:	lsl	x1, x0, #2
    1b6c:	sub	x1, x1, #0x4
    1b70:	ldr	w2, [x26, x1]
    1b74:	cmp	w2, #0x20
    1b78:	b.ne	1b90 <grub_cmdline_get+0x408>  // b.any
    1b7c:	ldr	x3, [sp, #136]
    1b80:	ldr	x2, [sp, #120]
    1b84:	ldr	w2, [x2, x3, lsl #2]
    1b88:	cmp	w2, #0x20
    1b8c:	b.eq	1dec <grub_cmdline_get+0x664>  // b.none
    1b90:	str	wzr, [x26, x0, lsl #2]
    1b94:	mov	x6, x26
    1b98:	add	x5, sp, #0x78
    1b9c:	add	x4, sp, #0x70
    1ba0:	add	x3, sp, #0x80
    1ba4:	add	x2, sp, #0x88
    1ba8:	mov	w1, w22
    1bac:	mov	x0, x24
    1bb0:	bl	1468 <grub_mod_fini+0x6e0>
    1bb4:	mov	x0, x27
    1bb8:	bl	0 <grub_free>
    1bbc:	mov	x0, x26
    1bc0:	bl	0 <grub_free>
    1bc4:	ldr	x2, [sp, #136]
    1bc8:	mov	w1, w22
    1bcc:	mov	x0, x24
    1bd0:	bl	e18 <grub_mod_fini+0x90>
    1bd4:	ldp	x27, x28, [sp, #80]
    1bd8:	b	1a10 <grub_cmdline_get+0x288>
    1bdc:	mov	w1, #0x4b                  	// #75
    1be0:	movk	w1, #0x80, lsl #16
    1be4:	cmp	w0, w1
    1be8:	b.eq	1d0c <grub_cmdline_get+0x584>  // b.none
    1bec:	add	w1, w1, #0x2
    1bf0:	cmp	w0, w1
    1bf4:	b.ne	1a10 <grub_cmdline_get+0x288>  // b.any
    1bf8:	ldr	x0, [sp, #136]
    1bfc:	ldr	x1, [sp, #128]
    1c00:	cmp	x0, x1
    1c04:	b.cs	1a10 <grub_cmdline_get+0x288>  // b.hs, b.nlast
    1c08:	add	x2, x0, #0x1
    1c0c:	str	x2, [sp, #136]
    1c10:	mov	w1, w22
    1c14:	mov	x0, x24
    1c18:	bl	e18 <grub_mod_fini+0x90>
    1c1c:	b	1a10 <grub_cmdline_get+0x288>
    1c20:	mov	w1, #0x65                  	// #101
    1c24:	movk	w1, #0x200, lsl #16
    1c28:	cmp	w0, w1
    1c2c:	b.eq	1d2c <grub_cmdline_get+0x5a4>  // b.none
    1c30:	b.le	1c54 <grub_cmdline_get+0x4cc>
    1c34:	mov	w1, #0x66                  	// #102
    1c38:	movk	w1, #0x200, lsl #16
    1c3c:	cmp	w0, w1
    1c40:	b.eq	1bf8 <grub_cmdline_get+0x470>  // b.none
    1c44:	add	w1, w1, #0x3
    1c48:	cmp	w0, w1
    1c4c:	b.eq	1ac8 <grub_cmdline_get+0x340>  // b.none
    1c50:	b	1a10 <grub_cmdline_get+0x288>
    1c54:	mov	w1, #0x62                  	// #98
    1c58:	movk	w1, #0x200, lsl #16
    1c5c:	cmp	w0, w1
    1c60:	b.eq	1d0c <grub_cmdline_get+0x584>  // b.none
    1c64:	add	w1, w1, #0x2
    1c68:	cmp	w0, w1
    1c6c:	b.eq	19b4 <grub_cmdline_get+0x22c>  // b.none
    1c70:	b	1a10 <grub_cmdline_get+0x288>
    1c74:	mov	w1, #0x6e                  	// #110
    1c78:	movk	w1, #0x200, lsl #16
    1c7c:	cmp	w0, w1
    1c80:	b.eq	1eec <grub_cmdline_get+0x764>  // b.none
    1c84:	add	w1, w1, #0x2
    1c88:	cmp	w0, w1
    1c8c:	b.ne	1a10 <grub_cmdline_get+0x288>  // b.any
    1c90:	str	xzr, [sp, #136]
    1c94:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1c98:	ldr	x0, [x0]
    1c9c:	ldr	w0, [x0, #16]
    1ca0:	sub	w0, w0, #0x1
    1ca4:	cmp	w0, w23
    1ca8:	b.gt	1f70 <grub_cmdline_get+0x7e8>
    1cac:	ldr	w5, [sp, #128]
    1cb0:	add	x4, sp, #0x80
    1cb4:	ldr	x3, [sp, #136]
    1cb8:	ldr	x2, [sp, #120]
    1cbc:	mov	w1, w22
    1cc0:	mov	x0, x24
    1cc4:	bl	1024 <grub_mod_fini+0x29c>
    1cc8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1ccc:	ldr	x2, [x0]
    1cd0:	ldr	w0, [x2, #8]
    1cd4:	add	w0, w23, w0
    1cd8:	ldr	w3, [x2, #12]
    1cdc:	udiv	w1, w0, w3
    1ce0:	msub	w0, w1, w3, w0
    1ce4:	ldr	x1, [x2]
    1ce8:	ldr	x6, [x1, x0, lsl #3]
    1cec:	add	x5, sp, #0x78
    1cf0:	add	x4, sp, #0x70
    1cf4:	add	x3, sp, #0x80
    1cf8:	add	x2, sp, #0x88
    1cfc:	mov	w1, w22
    1d00:	mov	x0, x24
    1d04:	bl	1468 <grub_mod_fini+0x6e0>
    1d08:	b	1a10 <grub_cmdline_get+0x288>
    1d0c:	ldr	x0, [sp, #136]
    1d10:	cbz	x0, 1a10 <grub_cmdline_get+0x288>
    1d14:	sub	x2, x0, #0x1
    1d18:	str	x2, [sp, #136]
    1d1c:	mov	w1, w22
    1d20:	mov	x0, x24
    1d24:	bl	e18 <grub_mod_fini+0x90>
    1d28:	b	1a10 <grub_cmdline_get+0x288>
    1d2c:	ldr	x2, [sp, #128]
    1d30:	str	x2, [sp, #136]
    1d34:	mov	w1, w22
    1d38:	mov	x0, x24
    1d3c:	bl	e18 <grub_mod_fini+0x90>
    1d40:	b	1a10 <grub_cmdline_get+0x288>
    1d44:	bl	0 <grub_print_error>
    1d48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1d4c:	ldr	x0, [x0]
    1d50:	str	wzr, [x0]
    1d54:	ldp	x27, x28, [sp, #80]
    1d58:	b	1a10 <grub_cmdline_get+0x288>
    1d5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1d60:	ldr	x26, [x0]
    1d64:	ldr	x1, [x26]
    1d68:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1d6c:	ldr	x0, [x0]
    1d70:	blr	x1
    1d74:	ldr	x1, [x26]
    1d78:	mov	x0, x21
    1d7c:	blr	x1
    1d80:	ldr	x1, [x26]
    1d84:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1d88:	ldr	x0, [x0]
    1d8c:	blr	x1
    1d90:	cbz	w22, 1dac <grub_cmdline_get+0x624>
    1d94:	mov	x26, x25
    1d98:	mov	x0, x26
    1d9c:	bl	e90 <grub_mod_fini+0x108>
    1da0:	add	x26, x26, #0x20
    1da4:	cmp	x20, x26
    1da8:	b.ne	1d98 <grub_cmdline_get+0x610>  // b.any
    1dac:	ldr	x3, [sp, #120]
    1db0:	ldr	x4, [sp, #128]
    1db4:	add	x4, x3, x4, lsl #2
    1db8:	mov	w2, #0x0                   	// #0
    1dbc:	mov	w1, w22
    1dc0:	mov	x0, x24
    1dc4:	bl	f0c <grub_mod_fini+0x184>
    1dc8:	b	1b28 <grub_cmdline_get+0x3a0>
    1dcc:	mov	x0, x27
    1dd0:	bl	0 <grub_free>
    1dd4:	bl	0 <grub_print_error>
    1dd8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1ddc:	ldr	x0, [x0]
    1de0:	str	wzr, [x0]
    1de4:	ldp	x27, x28, [sp, #80]
    1de8:	b	1a10 <grub_cmdline_get+0x288>
    1dec:	str	wzr, [x26, x1]
    1df0:	cmp	x0, #0x1
    1df4:	b.ne	1e08 <grub_cmdline_get+0x680>  // b.any
    1df8:	ldr	x0, [sp, #136]
    1dfc:	add	x0, x0, #0x1
    1e00:	str	x0, [sp, #136]
    1e04:	b	1bb4 <grub_cmdline_get+0x42c>
    1e08:	mov	x6, x26
    1e0c:	add	x5, sp, #0x78
    1e10:	add	x4, sp, #0x70
    1e14:	add	x3, sp, #0x80
    1e18:	add	x2, sp, #0x88
    1e1c:	mov	w1, w22
    1e20:	mov	x0, x24
    1e24:	bl	1468 <grub_mod_fini+0x6e0>
    1e28:	b	1df8 <grub_cmdline_get+0x670>
    1e2c:	ldr	x1, [sp, #136]
    1e30:	ldr	x0, [sp, #128]
    1e34:	cmp	x1, x0
    1e38:	b.cs	1a10 <grub_cmdline_get+0x288>  // b.hs, b.nlast
    1e3c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1e40:	ldr	x26, [x0]
    1e44:	ldr	x0, [x26, #24]
    1e48:	bl	0 <grub_free>
    1e4c:	ldr	x0, [sp, #128]
    1e50:	add	x0, x0, #0x1
    1e54:	ldr	x1, [sp, #136]
    1e58:	sub	x0, x0, x1
    1e5c:	lsl	x0, x0, #2
    1e60:	bl	0 <grub_malloc>
    1e64:	str	x0, [x26, #24]
    1e68:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    1e6c:	ldr	x1, [x1]
    1e70:	ldr	w1, [x1]
    1e74:	cbz	w1, 1eac <grub_cmdline_get+0x724>
    1e78:	bl	0 <grub_print_error>
    1e7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1e80:	ldr	x0, [x0]
    1e84:	str	wzr, [x0]
    1e88:	ldr	x3, [sp, #136]
    1e8c:	ldr	x5, [sp, #128]
    1e90:	sub	w5, w5, w3
    1e94:	add	x4, sp, #0x80
    1e98:	ldr	x2, [sp, #120]
    1e9c:	mov	w1, w22
    1ea0:	mov	x0, x24
    1ea4:	bl	1024 <grub_mod_fini+0x29c>
    1ea8:	b	1a10 <grub_cmdline_get+0x288>
    1eac:	ldr	x1, [sp, #136]
    1eb0:	ldr	x2, [sp, #128]
    1eb4:	add	x2, x2, #0x1
    1eb8:	sub	x2, x2, x1
    1ebc:	lsl	x2, x2, #2
    1ec0:	ldr	x3, [sp, #120]
    1ec4:	add	x1, x3, x1, lsl #2
    1ec8:	bl	0 <grub_memmove>
    1ecc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1ed0:	ldr	x1, [x0]
    1ed4:	ldr	x0, [sp, #128]
    1ed8:	ldr	x2, [sp, #136]
    1edc:	sub	x0, x0, x2
    1ee0:	ldr	x1, [x1, #24]
    1ee4:	str	wzr, [x1, x0, lsl #2]
    1ee8:	b	1e88 <grub_cmdline_get+0x700>
    1eec:	str	xzr, [sp, #136]
    1ef0:	cmp	w23, #0x0
    1ef4:	b.gt	1f58 <grub_cmdline_get+0x7d0>
    1ef8:	ldr	w5, [sp, #128]
    1efc:	add	x4, sp, #0x80
    1f00:	ldr	x3, [sp, #136]
    1f04:	ldr	x2, [sp, #120]
    1f08:	mov	w1, w22
    1f0c:	mov	x0, x24
    1f10:	bl	1024 <grub_mod_fini+0x29c>
    1f14:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1f18:	ldr	x2, [x0]
    1f1c:	ldr	w0, [x2, #8]
    1f20:	add	w0, w23, w0
    1f24:	ldr	w3, [x2, #12]
    1f28:	udiv	w1, w0, w3
    1f2c:	msub	w0, w1, w3, w0
    1f30:	ldr	x1, [x2]
    1f34:	ldr	x6, [x1, x0, lsl #3]
    1f38:	add	x5, sp, #0x78
    1f3c:	add	x4, sp, #0x70
    1f40:	add	x3, sp, #0x80
    1f44:	add	x2, sp, #0x88
    1f48:	mov	w1, w22
    1f4c:	mov	x0, x24
    1f50:	bl	1468 <grub_mod_fini+0x6e0>
    1f54:	b	1a10 <grub_cmdline_get+0x288>
    1f58:	ldr	x2, [sp, #128]
    1f5c:	ldr	x1, [sp, #120]
    1f60:	mov	w0, w23
    1f64:	bl	11c0 <grub_mod_fini+0x438>
    1f68:	sub	w23, w23, #0x1
    1f6c:	b	1ef8 <grub_cmdline_get+0x770>
    1f70:	ldr	x2, [sp, #128]
    1f74:	ldr	x1, [sp, #120]
    1f78:	mov	w0, w23
    1f7c:	bl	11c0 <grub_mod_fini+0x438>
    1f80:	add	w23, w23, #0x1
    1f84:	b	1cac <grub_cmdline_get+0x524>
    1f88:	ldr	x26, [sp, #136]
    1f8c:	cbz	x26, 1a10 <grub_cmdline_get+0x288>
    1f90:	stp	x27, x28, [sp, #80]
    1f94:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1f98:	ldr	x28, [x0]
    1f9c:	ldr	x0, [x28, #24]
    1fa0:	bl	0 <grub_free>
    1fa4:	add	x27, x26, #0x1
    1fa8:	lsl	x27, x27, #2
    1fac:	mov	x0, x27
    1fb0:	bl	0 <grub_malloc>
    1fb4:	str	x0, [x28, #24]
    1fb8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1fbc:	ldr	x0, [x0]
    1fc0:	ldr	w0, [x0]
    1fc4:	cbnz	w0, 2030 <grub_cmdline_get+0x8a8>
    1fc8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1fcc:	ldr	x0, [x0]
    1fd0:	ldr	x0, [x0, #24]
    1fd4:	cbz	x0, 1ff8 <grub_cmdline_get+0x870>
    1fd8:	sub	x27, x27, #0x4
    1fdc:	mov	x2, x27
    1fe0:	ldr	x1, [sp, #120]
    1fe4:	bl	0 <grub_memmove>
    1fe8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    1fec:	ldr	x0, [x0]
    1ff0:	ldr	x0, [x0, #24]
    1ff4:	str	wzr, [x0, x27]
    1ff8:	str	xzr, [sp, #136]
    1ffc:	mov	x2, #0x0                   	// #0
    2000:	mov	w1, w22
    2004:	mov	x0, x24
    2008:	bl	e18 <grub_mod_fini+0x90>
    200c:	mov	w5, w26
    2010:	add	x4, sp, #0x80
    2014:	ldr	x3, [sp, #136]
    2018:	ldr	x2, [sp, #120]
    201c:	mov	w1, w22
    2020:	mov	x0, x24
    2024:	bl	1024 <grub_mod_fini+0x29c>
    2028:	ldp	x27, x28, [sp, #80]
    202c:	b	1a10 <grub_cmdline_get+0x288>
    2030:	bl	0 <grub_print_error>
    2034:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2038:	ldr	x0, [x0]
    203c:	str	wzr, [x0]
    2040:	b	1fc8 <grub_cmdline_get+0x840>
    2044:	mov	x0, x24
    2048:	bl	0 <grub_free>
    204c:	ldr	x0, [sp, #120]
    2050:	bl	0 <grub_free>
    2054:	mov	x23, #0x0                   	// #0
    2058:	ldp	x19, x20, [sp, #16]
    205c:	ldp	x25, x26, [sp, #64]
    2060:	b	2104 <grub_cmdline_get+0x97c>
    2064:	sub	w1, w0, #0x20
    2068:	cmp	w1, #0x5e
    206c:	b.hi	1a10 <grub_cmdline_get+0x288>  // b.pmore
    2070:	str	w0, [sp, #104]
    2074:	str	wzr, [sp, #108]
    2078:	add	x6, sp, #0x68
    207c:	add	x5, sp, #0x78
    2080:	add	x4, sp, #0x70
    2084:	add	x3, sp, #0x80
    2088:	add	x2, sp, #0x88
    208c:	mov	w1, w22
    2090:	mov	x0, x24
    2094:	bl	1468 <grub_mod_fini+0x6e0>
    2098:	b	1a10 <grub_cmdline_get+0x288>
    209c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    20a0:	ldr	x0, [x0]
    20a4:	ldr	x1, [x0]
    20a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    20ac:	ldr	x0, [x0]
    20b0:	blr	x1
    20b4:	bl	0 <grub_refresh>
    20b8:	ldr	x1, [sp, #120]
    20bc:	ldr	w0, [x1]
    20c0:	cbz	w0, 20d8 <grub_cmdline_get+0x950>
    20c4:	mov	x0, x1
    20c8:	ldr	w2, [x0, #4]!
    20cc:	cbnz	w2, 20c8 <grub_cmdline_get+0x940>
    20d0:	cmp	x1, x0
    20d4:	b.ne	2118 <grub_cmdline_get+0x990>  // b.any
    20d8:	ldr	x1, [sp, #128]
    20dc:	add	x1, x1, #0x1
    20e0:	ldr	x0, [sp, #120]
    20e4:	bl	be54 <grub_ucs4_to_utf8_alloc>
    20e8:	mov	x23, x0
    20ec:	ldr	x0, [sp, #120]
    20f0:	bl	0 <grub_free>
    20f4:	mov	x0, x24
    20f8:	bl	0 <grub_free>
    20fc:	ldp	x19, x20, [sp, #16]
    2100:	ldp	x25, x26, [sp, #64]
    2104:	mov	x0, x23
    2108:	ldp	x21, x22, [sp, #32]
    210c:	ldp	x23, x24, [sp, #48]
    2110:	ldp	x29, x30, [sp], #144
    2114:	ret
    2118:	str	wzr, [sp, #104]
    211c:	ldr	x2, [sp, #128]
    2120:	mov	w0, #0x0                   	// #0
    2124:	bl	11c0 <grub_mod_fini+0x438>
    2128:	mov	x1, #0x0                   	// #0
    212c:	add	x0, sp, #0x68
    2130:	bl	11f8 <grub_mod_fini+0x470>
    2134:	b	20d8 <grub_cmdline_get+0x950>
	...
    2170:	stp	x29, x30, [sp, #-80]!
    2174:	mov	x29, sp
    2178:	stp	x19, x20, [sp, #16]
    217c:	stp	x21, x22, [sp, #32]
    2180:	stp	x23, x24, [sp, #48]
    2184:	str	x25, [sp, #64]
    2188:	mov	x20, x0
    218c:	mov	w22, w1
    2190:	mov	x24, x2
    2194:	ldr	x21, [x0]
    2198:	ldr	x25, [x21]
    219c:	ldr	x23, [x21, #24]
    21a0:	mov	x0, x23
    21a4:	bl	0 <grub_dl_load>
    21a8:	cbz	x0, 2230 <grub_cmdline_get+0xaa8>
    21ac:	mov	x19, x0
    21b0:	mov	x0, x23
    21b4:	bl	0 <grub_free>
    21b8:	mov	x0, x19
    21bc:	bl	0 <grub_dl_ref>
    21c0:	ldr	x23, [x25, #16]
    21c4:	mov	x0, x21
    21c8:	bl	0 <grub_unregister_extcmd>
    21cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    21d0:	ldr	x0, [x0]
    21d4:	mov	x1, x23
    21d8:	ldr	x0, [x0]
    21dc:	bl	0 <grub_named_list_find>
    21e0:	cbz	x0, 2258 <grub_cmdline_get+0xad0>
    21e4:	ldr	w1, [x0, #40]
    21e8:	mov	w2, #0x50                  	// #80
    21ec:	and	w1, w1, w2
    21f0:	cmp	w1, w2
    21f4:	b.eq	2240 <grub_cmdline_get+0xab8>  // b.none
    21f8:	ldr	x3, [x0, #32]
    21fc:	mov	x2, x24
    2200:	mov	w1, w22
    2204:	blr	x3
    2208:	mov	w19, w0
    220c:	mov	x0, x23
    2210:	bl	0 <grub_free>
    2214:	mov	w0, w19
    2218:	ldp	x19, x20, [sp, #16]
    221c:	ldp	x21, x22, [sp, #32]
    2220:	ldp	x23, x24, [sp, #48]
    2224:	ldr	x25, [sp, #64]
    2228:	ldp	x29, x30, [sp], #80
    222c:	ret
    2230:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2234:	ldr	x0, [x0]
    2238:	ldr	w19, [x0]
    223c:	b	2214 <grub_cmdline_get+0xa8c>
    2240:	ldr	x3, [x20, #16]
    2244:	mov	x2, x24
    2248:	mov	w1, w22
    224c:	bl	0 <grub_extcmd_dispatcher>
    2250:	mov	w19, w0
    2254:	b	220c <grub_cmdline_get+0xa84>
    2258:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    225c:	ldr	x0, [x0]
    2260:	ldr	w19, [x0]
    2264:	b	220c <grub_cmdline_get+0xa84>
	...

0000000000002278 <grub_dyncmd_get_cmd>:
    2278:	stp	x29, x30, [sp, #-48]!
    227c:	mov	x29, sp
    2280:	stp	x19, x20, [sp, #16]
    2284:	stp	x21, x22, [sp, #32]
    2288:	mov	x20, x0
    228c:	ldr	x21, [x0, #64]
    2290:	ldr	x22, [x21, #24]
    2294:	mov	x0, x22
    2298:	bl	0 <grub_dl_load>
    229c:	mov	x19, x0
    22a0:	cbz	x0, 22e0 <grub_dyncmd_get_cmd+0x68>
    22a4:	mov	x0, x22
    22a8:	bl	0 <grub_free>
    22ac:	mov	x0, x19
    22b0:	bl	0 <grub_dl_ref>
    22b4:	ldr	x20, [x20, #16]
    22b8:	mov	x0, x21
    22bc:	bl	0 <grub_unregister_extcmd>
    22c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    22c4:	ldr	x0, [x0]
    22c8:	mov	x1, x20
    22cc:	ldr	x0, [x0]
    22d0:	bl	0 <grub_named_list_find>
    22d4:	mov	x19, x0
    22d8:	mov	x0, x20
    22dc:	bl	0 <grub_free>
    22e0:	mov	x0, x19
    22e4:	ldp	x19, x20, [sp, #16]
    22e8:	ldp	x21, x22, [sp, #32]
    22ec:	ldp	x29, x30, [sp], #48
    22f0:	ret
    22f4:	nop
	...

0000000000002300 <read_command_list>:
    2300:	cbz	x0, 2534 <read_command_list+0x234>
    2304:	stp	x29, x30, [sp, #-96]!
    2308:	mov	x29, sp
    230c:	stp	x25, x26, [sp, #64]
    2310:	mov	x1, x0
    2314:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2318:	ldr	x0, [x0]
    231c:	bl	0 <grub_xasprintf>
    2320:	mov	x25, x0
    2324:	cbz	x0, 251c <read_command_list+0x21c>
    2328:	stp	x23, x24, [sp, #48]
    232c:	mov	w1, #0x32                  	// #50
    2330:	bl	0 <grub_file_open>
    2334:	mov	x24, x0
    2338:	cbz	x0, 2510 <read_command_list+0x210>
    233c:	stp	x19, x20, [sp, #16]
    2340:	stp	x21, x22, [sp, #32]
    2344:	stp	x27, x28, [sp, #80]
    2348:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    234c:	ldr	x0, [x0]
    2350:	ldr	x19, [x0]
    2354:	cbz	x19, 23a4 <read_command_list+0xa4>
    2358:	mov	x21, #0x0                   	// #0
    235c:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    2360:	b	2380 <read_command_list+0x80>
    2364:	ldr	x0, [x22]
    2368:	str	x19, [x0]
    236c:	ldr	x0, [x20, #64]
    2370:	bl	0 <grub_free>
    2374:	mov	x0, x20
    2378:	bl	0 <grub_free>
    237c:	cbz	x19, 23a4 <read_command_list+0xa4>
    2380:	mov	x20, x19
    2384:	ldr	x19, [x19]
    2388:	ldr	w0, [x20, #40]
    238c:	tbz	w0, #5, 239c <read_command_list+0x9c>
    2390:	cbz	x21, 2364 <read_command_list+0x64>
    2394:	str	x19, [x21]
    2398:	b	236c <read_command_list+0x6c>
    239c:	mov	x21, x20
    23a0:	b	237c <read_command_list+0x7c>
    23a4:	mov	w27, #0x1                   	// #1
    23a8:	mov	w26, #0x3a                  	// #58
    23ac:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    23b0:	b	24b8 <read_command_list+0x1b8>
    23b4:	add	x20, x20, #0x1
    23b8:	ldrb	w0, [x20]
    23bc:	bl	0 <grub_isspace>
    23c0:	mov	w19, w0
    23c4:	cbnz	w0, 23b4 <read_command_list+0xb4>
    23c8:	ldrb	w0, [x20]
    23cc:	cmp	w0, #0x2a
    23d0:	b.eq	24d0 <read_command_list+0x1d0>  // b.none
    23d4:	ldrb	w0, [x20]
    23d8:	sub	w0, w0, #0x21
    23dc:	cmp	w0, #0x5d
    23e0:	b.hi	24b0 <read_command_list+0x1b0>  // b.pmore
    23e4:	mov	w1, w26
    23e8:	mov	x0, x20
    23ec:	bl	0 <grub_strchr>
    23f0:	cbz	x0, 24b0 <read_command_list+0x1b0>
    23f4:	mov	x21, x0
    23f8:	strb	wzr, [x21], #1
    23fc:	ldrb	w0, [x0, #1]
    2400:	cmp	w0, #0x20
    2404:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    2408:	b.ne	241c <read_command_list+0x11c>  // b.any
    240c:	ldrb	w0, [x21, #1]!
    2410:	cmp	w0, #0x20
    2414:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    2418:	b.eq	240c <read_command_list+0x10c>  // b.none
    241c:	sub	w0, w0, #0x21
    2420:	cmp	w0, #0x5d
    2424:	b.hi	24b0 <read_command_list+0x1b0>  // b.pmore
    2428:	ldr	x0, [x28]
    242c:	ldr	x23, [x0]
    2430:	cbz	x23, 244c <read_command_list+0x14c>
    2434:	ldr	x1, [x23]
    2438:	mov	x0, x21
    243c:	bl	0 <grub_strcmp>
    2440:	cbz	w0, 24b0 <read_command_list+0x1b0>
    2444:	ldr	x23, [x23, #112]
    2448:	cbnz	x23, 2434 <read_command_list+0x134>
    244c:	mov	x0, x20
    2450:	bl	0 <grub_strdup>
    2454:	mov	x20, x0
    2458:	cbz	x0, 24b0 <read_command_list+0x1b0>
    245c:	mov	x0, x21
    2460:	bl	0 <grub_strdup>
    2464:	mov	x21, x0
    2468:	cbz	x0, 24dc <read_command_list+0x1dc>
    246c:	mov	w6, w19
    2470:	mov	x5, #0x0                   	// #0
    2474:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2478:	ldr	x4, [x0]
    247c:	mov	x3, #0x0                   	// #0
    2480:	mov	w2, #0x70                  	// #112
    2484:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2488:	ldr	x1, [x0]
    248c:	mov	x0, x20
    2490:	bl	0 <grub_register_extcmd_prio>
    2494:	cbz	x0, 24e8 <read_command_list+0x1e8>
    2498:	str	x21, [x0, #24]
    249c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    24a0:	ldr	x0, [x0]
    24a4:	mov	x1, x20
    24a8:	ldr	x0, [x0]
    24ac:	bl	0 <grub_named_list_find>
    24b0:	mov	x0, x22
    24b4:	bl	0 <grub_free>
    24b8:	mov	x0, x24
    24bc:	bl	dfb8 <grub_file_getline>
    24c0:	mov	x22, x0
    24c4:	cbz	x0, 24fc <read_command_list+0x1fc>
    24c8:	mov	x20, x0
    24cc:	b	23b8 <read_command_list+0xb8>
    24d0:	add	x20, x20, #0x1
    24d4:	mov	w19, w27
    24d8:	b	23d4 <read_command_list+0xd4>
    24dc:	mov	x0, x20
    24e0:	bl	0 <grub_free>
    24e4:	b	24b0 <read_command_list+0x1b0>
    24e8:	mov	x0, x20
    24ec:	bl	0 <grub_free>
    24f0:	mov	x0, x21
    24f4:	bl	0 <grub_free>
    24f8:	b	24b0 <read_command_list+0x1b0>
    24fc:	mov	x0, x24
    2500:	bl	0 <grub_file_close>
    2504:	ldp	x19, x20, [sp, #16]
    2508:	ldp	x21, x22, [sp, #32]
    250c:	ldp	x27, x28, [sp, #80]
    2510:	mov	x0, x25
    2514:	bl	0 <grub_free>
    2518:	ldp	x23, x24, [sp, #48]
    251c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2520:	ldr	x0, [x0]
    2524:	str	wzr, [x0]
    2528:	ldp	x25, x26, [sp, #64]
    252c:	ldp	x29, x30, [sp], #96
    2530:	ret
    2534:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2538:	ldr	x0, [x0]
    253c:	str	wzr, [x0]
    2540:	ret
    2544:	nop
	...
    2578:	stp	x29, x30, [sp, #-48]!
    257c:	mov	x29, sp
    2580:	stp	x19, x20, [sp, #16]
    2584:	mov	x20, x0
    2588:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    258c:	ldr	x0, [x0]
    2590:	bl	0 <grub_env_get>
    2594:	cbz	x0, 2610 <read_command_list+0x310>
    2598:	str	x21, [sp, #32]
    259c:	mov	x21, x0
    25a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    25a4:	ldr	x0, [x0]
    25a8:	ldr	x19, [x0]
    25ac:	cbnz	x19, 25d4 <read_command_list+0x2d4>
    25b0:	mov	w0, #0x0                   	// #0
    25b4:	ldr	x21, [sp, #32]
    25b8:	b	2604 <read_command_list+0x304>
    25bc:	ldr	x1, [x19, #16]
    25c0:	mov	x0, x21
    25c4:	bl	0 <grub_strword>
    25c8:	cbnz	w0, 2618 <read_command_list+0x318>
    25cc:	ldr	x19, [x19]
    25d0:	cbz	x19, 25fc <read_command_list+0x2fc>
    25d4:	ldr	w1, [x19, #40]
    25d8:	cbz	w1, 25cc <read_command_list+0x2cc>
    25dc:	cbz	x20, 25bc <read_command_list+0x2bc>
    25e0:	ldr	x1, [x19, #16]
    25e4:	mov	x0, x20
    25e8:	bl	0 <grub_strword>
    25ec:	cbz	w0, 25bc <read_command_list+0x2bc>
    25f0:	mov	w0, #0x1                   	// #1
    25f4:	ldr	x21, [sp, #32]
    25f8:	b	2604 <read_command_list+0x304>
    25fc:	mov	w0, #0x0                   	// #0
    2600:	ldr	x21, [sp, #32]
    2604:	ldp	x19, x20, [sp, #16]
    2608:	ldp	x29, x30, [sp], #48
    260c:	ret
    2610:	mov	w0, #0x1                   	// #1
    2614:	b	2604 <read_command_list+0x304>
    2618:	mov	w0, #0x1                   	// #1
    261c:	ldr	x21, [sp, #32]
    2620:	b	2604 <read_command_list+0x304>
    2624:	nop
	...

0000000000002638 <grub_auth_register_authentication>:
    2638:	stp	x29, x30, [sp, #-48]!
    263c:	mov	x29, sp
    2640:	stp	x19, x20, [sp, #16]
    2644:	stp	x21, x22, [sp, #32]
    2648:	mov	x20, x0
    264c:	mov	x22, x1
    2650:	mov	x21, x2
    2654:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2658:	ldr	x0, [x0]
    265c:	mov	x1, x20
    2660:	ldr	x0, [x0]
    2664:	bl	0 <grub_named_list_find>
    2668:	mov	x19, x0
    266c:	cbz	x0, 2694 <grub_auth_register_authentication+0x5c>
    2670:	str	x22, [x19, #24]
    2674:	str	x21, [x19, #32]
    2678:	ldr	x1, [x19, #16]
    267c:	mov	w0, #0x0                   	// #0
    2680:	cbz	x1, 26b4 <grub_auth_register_authentication+0x7c>
    2684:	ldp	x19, x20, [sp, #16]
    2688:	ldp	x21, x22, [sp, #32]
    268c:	ldp	x29, x30, [sp], #48
    2690:	ret
    2694:	mov	x0, #0x30                  	// #48
    2698:	bl	0 <grub_zalloc>
    269c:	mov	x19, x0
    26a0:	cbnz	x0, 2670 <grub_auth_register_authentication+0x38>
    26a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    26a8:	ldr	x0, [x0]
    26ac:	ldr	w0, [x0]
    26b0:	b	2684 <grub_auth_register_authentication+0x4c>
    26b4:	mov	x0, x20
    26b8:	bl	0 <grub_strdup>
    26bc:	str	x0, [x19, #16]
    26c0:	cbz	x0, 26dc <grub_auth_register_authentication+0xa4>
    26c4:	mov	x1, x19
    26c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    26cc:	ldr	x0, [x0]
    26d0:	bl	0 <grub_list_push>
    26d4:	mov	w0, #0x0                   	// #0
    26d8:	b	2684 <grub_auth_register_authentication+0x4c>
    26dc:	mov	x0, x19
    26e0:	bl	0 <grub_free>
    26e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    26e8:	ldr	x0, [x0]
    26ec:	ldr	w0, [x0]
    26f0:	b	2684 <grub_auth_register_authentication+0x4c>
    26f4:	nop
	...

0000000000002708 <grub_auth_unregister_authentication>:
    2708:	stp	x29, x30, [sp, #-32]!
    270c:	mov	x29, sp
    2710:	stp	x19, x20, [sp, #16]
    2714:	mov	x20, x0
    2718:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    271c:	ldr	x0, [x0]
    2720:	mov	x1, x20
    2724:	ldr	x0, [x0]
    2728:	bl	0 <grub_named_list_find>
    272c:	cbz	x0, 2754 <grub_auth_unregister_authentication+0x4c>
    2730:	mov	x19, x0
    2734:	ldr	w0, [x0, #40]
    2738:	cbz	w0, 276c <grub_auth_unregister_authentication+0x64>
    273c:	str	xzr, [x19, #24]
    2740:	str	xzr, [x19, #32]
    2744:	mov	w0, #0x0                   	// #0
    2748:	ldp	x19, x20, [sp, #16]
    274c:	ldp	x29, x30, [sp], #32
    2750:	ret
    2754:	mov	x2, x20
    2758:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    275c:	ldr	x1, [x0]
    2760:	mov	w0, #0x12                  	// #18
    2764:	bl	0 <grub_error>
    2768:	b	2748 <grub_auth_unregister_authentication+0x40>
    276c:	ldr	x0, [x19, #16]
    2770:	bl	0 <grub_free>
    2774:	mov	x0, x19
    2778:	bl	0 <grub_list_remove>
    277c:	mov	x0, x19
    2780:	bl	0 <grub_free>
    2784:	mov	w0, #0x0                   	// #0
    2788:	b	2748 <grub_auth_unregister_authentication+0x40>
    278c:	nop
	...

00000000000027a0 <grub_auth_authenticate>:
    27a0:	stp	x29, x30, [sp, #-32]!
    27a4:	mov	x29, sp
    27a8:	stp	x19, x20, [sp, #16]
    27ac:	mov	x20, x0
    27b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    27b4:	ldr	x0, [x0]
    27b8:	mov	x1, x20
    27bc:	ldr	x0, [x0]
    27c0:	bl	0 <grub_named_list_find>
    27c4:	mov	x19, x0
    27c8:	cbz	x0, 27ec <grub_auth_authenticate+0x4c>
    27cc:	mov	w0, #0x1                   	// #1
    27d0:	str	w0, [x19, #40]
    27d4:	ldr	x1, [x19, #16]
    27d8:	mov	w0, #0x0                   	// #0
    27dc:	cbz	x1, 280c <grub_auth_authenticate+0x6c>
    27e0:	ldp	x19, x20, [sp, #16]
    27e4:	ldp	x29, x30, [sp], #32
    27e8:	ret
    27ec:	mov	x0, #0x30                  	// #48
    27f0:	bl	0 <grub_zalloc>
    27f4:	mov	x19, x0
    27f8:	cbnz	x0, 27cc <grub_auth_authenticate+0x2c>
    27fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2800:	ldr	x0, [x0]
    2804:	ldr	w0, [x0]
    2808:	b	27e0 <grub_auth_authenticate+0x40>
    280c:	mov	x0, x20
    2810:	bl	0 <grub_strdup>
    2814:	str	x0, [x19, #16]
    2818:	cbz	x0, 2834 <grub_auth_authenticate+0x94>
    281c:	mov	x1, x19
    2820:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2824:	ldr	x0, [x0]
    2828:	bl	0 <grub_list_push>
    282c:	mov	w0, #0x0                   	// #0
    2830:	b	27e0 <grub_auth_authenticate+0x40>
    2834:	mov	x0, x19
    2838:	bl	0 <grub_free>
    283c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2840:	ldr	x0, [x0]
    2844:	ldr	w0, [x0]
    2848:	b	27e0 <grub_auth_authenticate+0x40>
    284c:	nop
	...

0000000000002860 <grub_auth_deauthenticate>:
    2860:	stp	x29, x30, [sp, #-32]!
    2864:	mov	x29, sp
    2868:	stp	x19, x20, [sp, #16]
    286c:	mov	x20, x0
    2870:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2874:	ldr	x0, [x0]
    2878:	mov	x1, x20
    287c:	ldr	x0, [x0]
    2880:	bl	0 <grub_named_list_find>
    2884:	cbz	x0, 28a8 <grub_auth_deauthenticate+0x48>
    2888:	mov	x19, x0
    288c:	ldr	x0, [x0, #24]
    2890:	cbz	x0, 28c0 <grub_auth_deauthenticate+0x60>
    2894:	str	wzr, [x19, #40]
    2898:	mov	w0, #0x0                   	// #0
    289c:	ldp	x19, x20, [sp, #16]
    28a0:	ldp	x29, x30, [sp], #32
    28a4:	ret
    28a8:	mov	x2, x20
    28ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    28b0:	ldr	x1, [x0]
    28b4:	mov	w0, #0x12                  	// #18
    28b8:	bl	0 <grub_error>
    28bc:	b	289c <grub_auth_deauthenticate+0x3c>
    28c0:	ldr	x0, [x19, #16]
    28c4:	bl	0 <grub_free>
    28c8:	mov	x0, x19
    28cc:	bl	0 <grub_list_remove>
    28d0:	mov	x0, x19
    28d4:	bl	0 <grub_free>
    28d8:	mov	w0, #0x0                   	// #0
    28dc:	b	289c <grub_auth_deauthenticate+0x3c>
	...

00000000000028f0 <grub_auth_check_authentication>:
    28f0:	sub	sp, sp, #0x850
    28f4:	stp	x29, x30, [sp]
    28f8:	mov	x29, sp
    28fc:	stp	x21, x22, [sp, #32]
    2900:	mov	x21, x0
    2904:	mov	x2, #0x400                 	// #1024
    2908:	mov	w1, #0x0                   	// #0
    290c:	add	x0, sp, #0x450
    2910:	bl	0 <grub_memset>
    2914:	mov	x0, x21
    2918:	bl	2578 <read_command_list+0x278>
    291c:	cbz	w0, 2944 <grub_auth_check_authentication+0x54>
    2920:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2924:	ldr	x0, [x0]
    2928:	mov	x1, #0x1                   	// #1
    292c:	str	x1, [x0]
    2930:	mov	w0, #0x0                   	// #0
    2934:	ldp	x21, x22, [sp, #32]
    2938:	ldp	x29, x30, [sp]
    293c:	add	sp, sp, #0x850
    2940:	ret
    2944:	stp	x19, x20, [sp, #16]
    2948:	stp	x23, x24, [sp, #48]
    294c:	str	x25, [sp, #64]
    2950:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2954:	ldr	x0, [x0]
    2958:	bl	0 <grub_puts_>
    295c:	mov	w20, #0x0                   	// #0
    2960:	add	x24, sp, #0x450
    2964:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    2968:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    296c:	b	299c <grub_auth_check_authentication+0xac>
    2970:	cbz	w20, 299c <grub_auth_check_authentication+0xac>
    2974:	sub	w20, w20, #0x1
    2978:	ldr	x0, [x25]
    297c:	bl	0 <grub_printf>
    2980:	b	299c <grub_auth_check_authentication+0xac>
    2984:	add	w22, w20, #0x1
    2988:	strb	w0, [x24, w20, uxtw]
    298c:	mov	w1, w0
    2990:	ldr	x0, [x23]
    2994:	bl	0 <grub_printf>
    2998:	mov	w20, w22
    299c:	bl	0 <grub_getkey>
    29a0:	mov	w19, w0
    29a4:	cmp	w0, #0xa
    29a8:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    29ac:	b.eq	29dc <grub_auth_check_authentication+0xec>  // b.none
    29b0:	cmp	w0, #0x1b
    29b4:	b.eq	2ab0 <grub_auth_check_authentication+0x1c0>  // b.none
    29b8:	cmp	w0, #0x8
    29bc:	b.eq	2970 <grub_auth_check_authentication+0x80>  // b.none
    29c0:	sub	w1, w0, #0x20
    29c4:	cmp	w1, #0x5e
    29c8:	b.hi	299c <grub_auth_check_authentication+0xac>  // b.pmore
    29cc:	add	w1, w20, #0x2
    29d0:	cmp	w1, #0x3fe
    29d4:	b.hi	299c <grub_auth_check_authentication+0xac>  // b.pmore
    29d8:	b	2984 <grub_auth_check_authentication+0x94>
    29dc:	mov	w2, #0x3ff                 	// #1023
    29e0:	sub	w2, w2, w20
    29e4:	mov	w1, #0x0                   	// #0
    29e8:	add	x0, sp, #0x450
    29ec:	add	x0, x0, w20, uxtw
    29f0:	bl	0 <grub_memset>
    29f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    29f8:	ldr	x0, [x0]
    29fc:	ldr	x1, [x0]
    2a00:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2a04:	ldr	x0, [x0]
    2a08:	blr	x1
    2a0c:	bl	0 <grub_refresh>
    2a10:	cmp	w19, #0x1b
    2a14:	b.eq	2adc <grub_auth_check_authentication+0x1ec>  // b.none
    2a18:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2a1c:	ldr	x0, [x0]
    2a20:	bl	0 <grub_puts_>
    2a24:	mov	w1, #0x400                 	// #1024
    2a28:	add	x0, sp, #0x50
    2a2c:	bl	0 <grub_password_get>
    2a30:	cbz	w0, 2adc <grub_auth_check_authentication+0x1ec>
    2a34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2a38:	ldr	x0, [x0]
    2a3c:	ldr	x19, [x0]
    2a40:	cbz	x19, 2adc <grub_auth_check_authentication+0x1ec>
    2a44:	mov	x20, #0x0                   	// #0
    2a48:	ldr	x1, [x19, #16]
    2a4c:	add	x0, sp, #0x450
    2a50:	bl	0 <grub_strcmp>
    2a54:	cmp	w0, #0x0
    2a58:	csel	x20, x20, x19, ne  // ne = any
    2a5c:	ldr	x19, [x19]
    2a60:	cbnz	x19, 2a48 <grub_auth_check_authentication+0x158>
    2a64:	cbz	x20, 2adc <grub_auth_check_authentication+0x1ec>
    2a68:	ldr	x3, [x20, #24]
    2a6c:	cbz	x3, 2adc <grub_auth_check_authentication+0x1ec>
    2a70:	ldr	x2, [x20, #32]
    2a74:	add	x1, sp, #0x50
    2a78:	add	x0, sp, #0x450
    2a7c:	blr	x3
    2a80:	mov	x0, x21
    2a84:	bl	2578 <read_command_list+0x278>
    2a88:	cbz	w0, 2adc <grub_auth_check_authentication+0x1ec>
    2a8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2a90:	ldr	x0, [x0]
    2a94:	mov	x1, #0x1                   	// #1
    2a98:	str	x1, [x0]
    2a9c:	mov	w0, #0x0                   	// #0
    2aa0:	ldp	x19, x20, [sp, #16]
    2aa4:	ldp	x23, x24, [sp, #48]
    2aa8:	ldr	x25, [sp, #64]
    2aac:	b	2934 <grub_auth_check_authentication+0x44>
    2ab0:	mov	x2, #0x3ff                 	// #1023
    2ab4:	mov	w1, #0x0                   	// #0
    2ab8:	add	x0, sp, #0x450
    2abc:	bl	0 <grub_memset>
    2ac0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ac4:	ldr	x0, [x0]
    2ac8:	ldr	x1, [x0]
    2acc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ad0:	ldr	x0, [x0]
    2ad4:	blr	x1
    2ad8:	bl	0 <grub_refresh>
    2adc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ae0:	ldr	x19, [x0]
    2ae4:	ldr	x0, [x19]
    2ae8:	mov	w1, #0x3e8                 	// #1000
    2aec:	mul	w0, w1, w0
    2af0:	bl	0 <grub_millisleep>
    2af4:	ldr	x0, [x19]
    2af8:	mov	x1, #0x7ffffffffffffffe    	// #9223372036854775806
    2afc:	cmp	x0, x1
    2b00:	b.hi	2b14 <grub_auth_check_authentication+0x224>  // b.pmore
    2b04:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    2b08:	ldr	x1, [x1]
    2b0c:	lsl	x0, x0, #1
    2b10:	str	x0, [x1]
    2b14:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2b18:	ldr	x1, [x0]
    2b1c:	mov	w0, #0x1e                  	// #30
    2b20:	bl	0 <grub_error>
    2b24:	ldp	x19, x20, [sp, #16]
    2b28:	ldp	x23, x24, [sp, #48]
    2b2c:	ldr	x25, [sp, #64]
    2b30:	b	2934 <grub_auth_check_authentication+0x44>
    2b34:	nop
	...
    2b80:	stp	x29, x30, [sp, #-16]!
    2b84:	mov	x29, sp
    2b88:	cmp	w1, #0x0
    2b8c:	b.le	2ba0 <grub_auth_check_authentication+0x2b0>
    2b90:	ldr	x0, [x2]
    2b94:	bl	28f0 <grub_auth_check_authentication>
    2b98:	ldp	x29, x30, [sp], #16
    2b9c:	ret
    2ba0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ba4:	ldr	x0, [x0]
    2ba8:	b	2b94 <grub_auth_check_authentication+0x2a4>
    2bac:	nop
	...

0000000000002bb8 <grub_normal_auth_init>:
    2bb8:	stp	x29, x30, [sp, #-16]!
    2bbc:	mov	x29, sp
    2bc0:	mov	w4, #0x0                   	// #0
    2bc4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2bc8:	ldr	x3, [x0]
    2bcc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2bd0:	ldr	x2, [x0]
    2bd4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2bd8:	ldr	x1, [x0]
    2bdc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2be0:	ldr	x0, [x0]
    2be4:	bl	0 <grub_register_command_prio>
    2be8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    2bec:	ldr	x1, [x1]
    2bf0:	str	x0, [x1, #8]
    2bf4:	ldp	x29, x30, [sp], #16
    2bf8:	ret
    2bfc:	nop
	...

0000000000002c28 <grub_normal_auth_fini>:
    2c28:	stp	x29, x30, [sp, #-16]!
    2c2c:	mov	x29, sp
    2c30:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2c34:	ldr	x0, [x0]
    2c38:	ldr	x0, [x0, #8]
    2c3c:	bl	0 <grub_unregister_command>
    2c40:	ldp	x29, x30, [sp], #16
    2c44:	ret
	...
    2c50:	stp	x29, x30, [sp, #-64]!
    2c54:	mov	x29, sp
    2c58:	stp	x19, x20, [sp, #16]
    2c5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2c60:	ldr	x0, [x0]
    2c64:	ldr	x19, [x0]
    2c68:	cbz	x19, 2d18 <grub_normal_auth_fini+0xf0>
    2c6c:	stp	x21, x22, [sp, #32]
    2c70:	stp	x23, x24, [sp, #48]
    2c74:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    2c78:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    2c7c:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    2c80:	b	2cb4 <grub_normal_auth_fini+0x8c>
    2c84:	ldr	x0, [x24]
    2c88:	ldr	w0, [x0]
    2c8c:	cbnz	w0, 2cf8 <grub_normal_auth_fini+0xd0>
    2c90:	ldr	x20, [x23]
    2c94:	ldr	x0, [x19]
    2c98:	str	x0, [x20]
    2c9c:	ldr	x0, [x19, #16]
    2ca0:	bl	0 <grub_free>
    2ca4:	mov	x0, x19
    2ca8:	bl	0 <grub_free>
    2cac:	ldr	x19, [x20]
    2cb0:	cbz	x19, 2d00 <grub_normal_auth_fini+0xd8>
    2cb4:	ldr	x21, [x19, #16]
    2cb8:	ldr	x0, [x22]
    2cbc:	ldr	x20, [x0]
    2cc0:	cbz	x20, 2cdc <grub_normal_auth_fini+0xb4>
    2cc4:	ldr	x1, [x20]
    2cc8:	mov	x0, x21
    2ccc:	bl	0 <grub_strcmp>
    2cd0:	cbz	w0, 2c84 <grub_normal_auth_fini+0x5c>
    2cd4:	ldr	x20, [x20, #112]
    2cd8:	cbnz	x20, 2cc4 <grub_normal_auth_fini+0x9c>
    2cdc:	ldr	x0, [x19, #16]
    2ce0:	bl	0 <grub_dl_load>
    2ce4:	cbz	x0, 2c84 <grub_normal_auth_fini+0x5c>
    2ce8:	mov	w0, #0x1                   	// #1
    2cec:	ldp	x21, x22, [sp, #32]
    2cf0:	ldp	x23, x24, [sp, #48]
    2cf4:	b	2d0c <grub_normal_auth_fini+0xe4>
    2cf8:	bl	0 <grub_print_error>
    2cfc:	b	2c90 <grub_normal_auth_fini+0x68>
    2d00:	mov	w0, #0x0                   	// #0
    2d04:	ldp	x21, x22, [sp, #32]
    2d08:	ldp	x23, x24, [sp, #48]
    2d0c:	ldp	x19, x20, [sp, #16]
    2d10:	ldp	x29, x30, [sp], #64
    2d14:	ret
    2d18:	mov	w0, #0x0                   	// #0
    2d1c:	b	2d0c <grub_normal_auth_fini+0xe4>
	...

0000000000002d38 <read_fs_list>:
    2d38:	cbz	x0, 2ed8 <read_fs_list+0x1a0>
    2d3c:	stp	x29, x30, [sp, #-80]!
    2d40:	mov	x29, sp
    2d44:	stp	x23, x24, [sp, #48]
    2d48:	mov	x1, x0
    2d4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2d50:	ldr	x0, [x0]
    2d54:	bl	0 <grub_xasprintf>
    2d58:	mov	x23, x0
    2d5c:	cbz	x0, 2eac <read_fs_list+0x174>
    2d60:	stp	x21, x22, [sp, #32]
    2d64:	stp	x25, x26, [sp, #64]
    2d68:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2d6c:	ldr	x0, [x0]
    2d70:	ldr	x26, [x0]
    2d74:	str	xzr, [x0]
    2d78:	mov	w1, #0x32                  	// #50
    2d7c:	mov	x0, x23
    2d80:	bl	0 <grub_file_open>
    2d84:	mov	x22, x0
    2d88:	cbz	x0, 2e9c <read_fs_list+0x164>
    2d8c:	stp	x19, x20, [sp, #16]
    2d90:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2d94:	ldr	x0, [x0]
    2d98:	ldr	x19, [x0]
    2d9c:	cbz	x19, 2dbc <read_fs_list+0x84>
    2da0:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
    2da4:	mov	x0, x19
    2da8:	ldr	x19, [x19]
    2dac:	bl	0 <grub_free>
    2db0:	ldr	x0, [x20]
    2db4:	str	x19, [x0]
    2db8:	cbnz	x19, 2da4 <read_fs_list+0x6c>
    2dbc:	mov	x24, #0x18                  	// #24
    2dc0:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    2dc4:	b	2e38 <read_fs_list+0x100>
    2dc8:	cmp	x20, x19
    2dcc:	b.cs	2de8 <read_fs_list+0xb0>  // b.hs, b.nlast
    2dd0:	ldrb	w0, [x19]
    2dd4:	bl	0 <grub_isspace>
    2dd8:	cbz	w0, 2df4 <read_fs_list+0xbc>
    2ddc:	strb	wzr, [x19], #-1
    2de0:	cmp	x20, x19
    2de4:	b.ne	2dd0 <read_fs_list+0x98>  // b.any
    2de8:	mov	x0, x21
    2dec:	bl	0 <grub_free>
    2df0:	b	2e38 <read_fs_list+0x100>
    2df4:	cmp	x20, x19
    2df8:	b.cs	2de8 <read_fs_list+0xb0>  // b.hs, b.nlast
    2dfc:	mov	x0, x24
    2e00:	bl	0 <grub_malloc>
    2e04:	mov	x19, x0
    2e08:	cbz	x0, 2e6c <read_fs_list+0x134>
    2e0c:	mov	x0, x20
    2e10:	bl	0 <grub_strdup>
    2e14:	str	x0, [x19, #16]
    2e18:	mov	x0, x21
    2e1c:	bl	0 <grub_free>
    2e20:	ldr	x0, [x19, #16]
    2e24:	cbz	x0, 2e78 <read_fs_list+0x140>
    2e28:	ldr	x0, [x25]
    2e2c:	ldr	x1, [x0]
    2e30:	str	x1, [x19]
    2e34:	str	x19, [x0]
    2e38:	mov	x0, x22
    2e3c:	bl	dfb8 <grub_file_getline>
    2e40:	mov	x21, x0
    2e44:	cbz	x0, 2e84 <read_fs_list+0x14c>
    2e48:	bl	0 <grub_strlen>
    2e4c:	sub	x19, x0, #0x1
    2e50:	add	x19, x21, x19
    2e54:	mov	x20, x21
    2e58:	ldrb	w0, [x20]
    2e5c:	bl	0 <grub_isspace>
    2e60:	cbz	w0, 2dc8 <read_fs_list+0x90>
    2e64:	add	x20, x20, #0x1
    2e68:	b	2e58 <read_fs_list+0x120>
    2e6c:	mov	x0, x21
    2e70:	bl	0 <grub_free>
    2e74:	b	2e38 <read_fs_list+0x100>
    2e78:	mov	x0, x19
    2e7c:	bl	0 <grub_free>
    2e80:	b	2e38 <read_fs_list+0x100>
    2e84:	mov	x0, x22
    2e88:	bl	0 <grub_file_close>
    2e8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2e90:	ldr	x0, [x0]
    2e94:	str	x26, [x0]
    2e98:	ldp	x19, x20, [sp, #16]
    2e9c:	mov	x0, x23
    2ea0:	bl	0 <grub_free>
    2ea4:	ldp	x21, x22, [sp, #32]
    2ea8:	ldp	x25, x26, [sp, #64]
    2eac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2eb0:	ldr	x0, [x0]
    2eb4:	str	wzr, [x0]
    2eb8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ebc:	ldr	x0, [x0]
    2ec0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    2ec4:	ldr	x1, [x1]
    2ec8:	str	x1, [x0]
    2ecc:	ldp	x23, x24, [sp, #48]
    2ed0:	ldp	x29, x30, [sp], #80
    2ed4:	ret
    2ed8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2edc:	ldr	x0, [x0]
    2ee0:	str	wzr, [x0]
    2ee4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ee8:	ldr	x0, [x0]
    2eec:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    2ef0:	ldr	x1, [x1]
    2ef4:	str	x1, [x0]
    2ef8:	ret
    2efc:	nop
	...
    2f28:	stp	x29, x30, [sp, #-32]!
    2f2c:	mov	x29, sp
    2f30:	stp	x19, x20, [sp, #16]
    2f34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2f38:	ldr	x0, [x0]
    2f3c:	ldr	x19, [x0]
    2f40:	cbz	x19, 2f6c <read_fs_list+0x234>
    2f44:	mov	w20, #0x1                   	// #1
    2f48:	b	2f54 <read_fs_list+0x21c>
    2f4c:	ldr	x19, [x19]
    2f50:	cbz	x19, 2f6c <read_fs_list+0x234>
    2f54:	ldr	x2, [x19, #88]
    2f58:	cbz	x2, 2f4c <read_fs_list+0x214>
    2f5c:	mov	w1, w20
    2f60:	mov	x0, x19
    2f64:	blr	x2
    2f68:	b	2f4c <read_fs_list+0x214>
    2f6c:	ldp	x19, x20, [sp, #16]
    2f70:	ldp	x29, x30, [sp], #32
    2f74:	ret
	...

0000000000002f80 <grub_parse_color_name_pair>:
    2f80:	stp	x29, x30, [sp, #-80]!
    2f84:	mov	x29, sp
    2f88:	stp	x19, x20, [sp, #16]
    2f8c:	mov	w19, #0x1                   	// #1
    2f90:	cbz	x1, 30b0 <grub_parse_color_name_pair+0x130>
    2f94:	stp	x21, x22, [sp, #32]
    2f98:	stp	x23, x24, [sp, #48]
    2f9c:	mov	x24, x0
    2fa0:	mov	x0, x1
    2fa4:	bl	0 <grub_strdup>
    2fa8:	mov	x21, x0
    2fac:	cbz	x0, 3010 <grub_parse_color_name_pair+0x90>
    2fb0:	mov	w1, #0x2f                  	// #47
    2fb4:	bl	0 <grub_strchr>
    2fb8:	mov	x23, x0
    2fbc:	cbz	x0, 3024 <grub_parse_color_name_pair+0xa4>
    2fc0:	stp	x25, x26, [sp, #64]
    2fc4:	strb	wzr, [x0]
    2fc8:	mov	x22, #0x0                   	// #0
    2fcc:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
    2fd0:	ldr	x0, [x20]
    2fd4:	ldr	x1, [x0, x22, lsl #3]
    2fd8:	mov	x0, x21
    2fdc:	bl	0 <grub_strcmp>
    2fe0:	cbz	w0, 3040 <grub_parse_color_name_pair+0xc0>
    2fe4:	add	x22, x22, #0x1
    2fe8:	cmp	x22, #0x10
    2fec:	b.ne	2fd0 <grub_parse_color_name_pair+0x50>  // b.any
    2ff0:	mov	x1, x21
    2ff4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    2ff8:	ldr	x0, [x0]
    2ffc:	bl	0 <grub_printf_>
    3000:	bl	4310 <grub_wait_after_message>
    3004:	mov	w19, #0x1                   	// #1
    3008:	ldp	x25, x26, [sp, #64]
    300c:	b	30a0 <grub_parse_color_name_pair+0x120>
    3010:	bl	4310 <grub_wait_after_message>
    3014:	mov	w19, #0x1                   	// #1
    3018:	ldp	x21, x22, [sp, #32]
    301c:	ldp	x23, x24, [sp, #48]
    3020:	b	30b0 <grub_parse_color_name_pair+0x130>
    3024:	mov	x1, x21
    3028:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    302c:	ldr	x0, [x0]
    3030:	bl	0 <grub_printf_>
    3034:	bl	4310 <grub_wait_after_message>
    3038:	mov	w19, #0x1                   	// #1
    303c:	b	30a0 <grub_parse_color_name_pair+0x120>
    3040:	add	x23, x23, #0x1
    3044:	mov	x20, #0x0                   	// #0
    3048:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
    304c:	and	w25, w20, #0xff
    3050:	ldr	x0, [x26]
    3054:	ldr	x1, [x0, x20, lsl #3]
    3058:	mov	x0, x23
    305c:	bl	0 <grub_strcmp>
    3060:	mov	w19, w0
    3064:	cbz	w0, 3094 <grub_parse_color_name_pair+0x114>
    3068:	add	x20, x20, #0x1
    306c:	cmp	x20, #0x10
    3070:	b.ne	304c <grub_parse_color_name_pair+0xcc>  // b.any
    3074:	mov	x1, x23
    3078:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    307c:	ldr	x0, [x0]
    3080:	bl	0 <grub_printf_>
    3084:	bl	4310 <grub_wait_after_message>
    3088:	mov	w19, #0x1                   	// #1
    308c:	ldp	x25, x26, [sp, #64]
    3090:	b	30a0 <grub_parse_color_name_pair+0x120>
    3094:	orr	w22, w22, w25, lsl #4
    3098:	strb	w22, [x24]
    309c:	ldp	x25, x26, [sp, #64]
    30a0:	mov	x0, x21
    30a4:	bl	0 <grub_free>
    30a8:	ldp	x21, x22, [sp, #32]
    30ac:	ldp	x23, x24, [sp, #48]
    30b0:	mov	w0, w19
    30b4:	ldp	x19, x20, [sp, #16]
    30b8:	ldp	x29, x30, [sp], #80
    30bc:	ret
	...

00000000000030e0 <grub_env_write_color_normal>:
    30e0:	stp	x29, x30, [sp, #-32]!
    30e4:	mov	x29, sp
    30e8:	str	x19, [sp, #16]
    30ec:	mov	x19, x1
    30f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    30f4:	ldr	x0, [x0]
    30f8:	bl	2f80 <grub_parse_color_name_pair>
    30fc:	mov	w1, w0
    3100:	mov	x0, #0x0                   	// #0
    3104:	cbnz	w1, 3114 <grub_env_write_color_normal+0x34>
    3108:	bl	2f28 <read_fs_list+0x1f0>
    310c:	mov	x0, x19
    3110:	bl	0 <grub_strdup>
    3114:	ldr	x19, [sp, #16]
    3118:	ldp	x29, x30, [sp], #32
    311c:	ret
	...

0000000000003128 <grub_env_write_color_highlight>:
    3128:	stp	x29, x30, [sp, #-32]!
    312c:	mov	x29, sp
    3130:	str	x19, [sp, #16]
    3134:	mov	x19, x1
    3138:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    313c:	ldr	x0, [x0]
    3140:	bl	2f80 <grub_parse_color_name_pair>
    3144:	mov	w1, w0
    3148:	mov	x0, #0x0                   	// #0
    314c:	cbnz	w1, 315c <grub_env_write_color_highlight+0x34>
    3150:	bl	2f28 <read_fs_list+0x1f0>
    3154:	mov	x0, x19
    3158:	bl	0 <grub_strdup>
    315c:	ldr	x19, [sp, #16]
    3160:	ldp	x29, x30, [sp], #32
    3164:	ret
	...
    3170:	stp	x29, x30, [sp, #-64]!
    3174:	mov	x29, sp
    3178:	stp	x19, x20, [sp, #16]
    317c:	stp	x21, x22, [sp, #32]
    3180:	mov	x19, x0
    3184:	mov	x20, x1
    3188:	mov	w22, w2
    318c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3190:	ldr	x0, [x0]
    3194:	ldr	x21, [x0]
    3198:	mov	x0, x21
    319c:	bl	0 <grub_strlen>
    31a0:	mov	x2, x0
    31a4:	mov	x1, x19
    31a8:	mov	x0, x21
    31ac:	bl	0 <grub_strncmp>
    31b0:	mov	w21, #0x0                   	// #0
    31b4:	cbnz	w0, 327c <grub_env_write_color_highlight+0x154>
    31b8:	str	x23, [sp, #48]
    31bc:	mov	w21, w0
    31c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    31c4:	ldr	x0, [x0]
    31c8:	ldr	w23, [x0, #8]
    31cc:	add	w23, w23, #0x1
    31d0:	str	w23, [x0, #8]
    31d4:	cmp	w23, #0x1
    31d8:	b.eq	3290 <grub_env_write_color_highlight+0x168>  // b.none
    31dc:	cmp	w23, #0x2
    31e0:	b.eq	32b4 <grub_env_write_color_highlight+0x18c>  // b.none
    31e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    31e8:	ldr	x0, [x0]
    31ec:	ldr	x20, [x0, #16]
    31f0:	ldr	x3, [x0, #32]
    31f4:	cbz	x3, 3214 <grub_env_write_color_highlight+0xec>
    31f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    31fc:	ldr	x0, [x0]
    3200:	ldr	w2, [x0, #8]
    3204:	sub	w2, w2, #0x1
    3208:	mov	w1, w22
    320c:	mov	x0, x19
    3210:	blr	x3
    3214:	ldrb	w1, [x20]
    3218:	cbz	w1, 3238 <grub_env_write_color_highlight+0x110>
    321c:	ldrb	w2, [x19]
    3220:	cmp	w2, #0x0
    3224:	ccmp	w2, w1, #0x0, ne  // ne = any
    3228:	b.ne	3238 <grub_env_write_color_highlight+0x110>  // b.any
    322c:	add	x19, x19, #0x1
    3230:	ldrb	w1, [x20, #1]!
    3234:	cbnz	w1, 321c <grub_env_write_color_highlight+0xf4>
    3238:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    323c:	ldr	x0, [x0]
    3240:	ldr	x3, [x0, #16]
    3244:	sub	x1, x20, #0x1
    3248:	cmp	x3, x1
    324c:	b.hi	3364 <grub_env_write_color_highlight+0x23c>  // b.pmore
    3250:	sub	x0, x3, #0x1
    3254:	ldrb	w2, [x1]
    3258:	and	w2, w2, #0xc0
    325c:	cmp	w2, #0x80
    3260:	b.ne	32e0 <grub_env_write_color_highlight+0x1b8>  // b.any
    3264:	sub	x1, x1, #0x1
    3268:	cmp	x1, x0
    326c:	b.ne	3254 <grub_env_write_color_highlight+0x12c>  // b.any
    3270:	mov	x1, #0x0                   	// #0
    3274:	strb	wzr, [x3, x1]
    3278:	ldr	x23, [sp, #48]
    327c:	mov	w0, w21
    3280:	ldp	x19, x20, [sp, #16]
    3284:	ldp	x21, x22, [sp, #32]
    3288:	ldp	x29, x30, [sp], #64
    328c:	ret
    3290:	mov	x0, x19
    3294:	bl	0 <grub_strdup>
    3298:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    329c:	ldr	x1, [x1]
    32a0:	str	x0, [x1, #16]
    32a4:	cbz	x0, 3374 <grub_env_write_color_highlight+0x24c>
    32a8:	str	x20, [x1, #24]
    32ac:	ldr	x23, [sp, #48]
    32b0:	b	327c <grub_env_write_color_highlight+0x154>
    32b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    32b8:	ldr	x0, [x0]
    32bc:	ldr	x3, [x0, #32]
    32c0:	cbz	x3, 3380 <grub_env_write_color_highlight+0x258>
    32c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    32c8:	ldr	x0, [x0]
    32cc:	mov	w2, #0x0                   	// #0
    32d0:	mov	w1, w22
    32d4:	ldr	x0, [x0, #16]
    32d8:	blr	x3
    32dc:	b	31e4 <grub_env_write_color_highlight+0xbc>
    32e0:	cmp	x3, x1
    32e4:	b.hi	336c <grub_env_write_color_highlight+0x244>  // b.pmore
    32e8:	ldrb	w0, [x1]
    32ec:	tbz	w0, #7, 3328 <grub_env_write_color_highlight+0x200>
    32f0:	and	w2, w0, #0xe0
    32f4:	cmp	w2, #0xc0
    32f8:	b.eq	3334 <grub_env_write_color_highlight+0x20c>  // b.none
    32fc:	and	w2, w0, #0xf0
    3300:	cmp	w2, #0xe0
    3304:	b.eq	3350 <grub_env_write_color_highlight+0x228>  // b.none
    3308:	and	w0, w0, #0xf8
    330c:	cmp	w0, #0xf0
    3310:	b.ne	3340 <grub_env_write_color_highlight+0x218>  // b.any
    3314:	add	x0, x1, #0x4
    3318:	cmp	x0, x20
    331c:	b.hi	3340 <grub_env_write_color_highlight+0x218>  // b.pmore
    3320:	sub	x1, x0, x3
    3324:	b	3274 <grub_env_write_color_highlight+0x14c>
    3328:	add	x1, x1, #0x1
    332c:	sub	x1, x1, x3
    3330:	b	3274 <grub_env_write_color_highlight+0x14c>
    3334:	add	x0, x1, #0x2
    3338:	cmp	x0, x20
    333c:	b.ls	3348 <grub_env_write_color_highlight+0x220>  // b.plast
    3340:	sub	x1, x1, x3
    3344:	b	3274 <grub_env_write_color_highlight+0x14c>
    3348:	sub	x1, x0, x3
    334c:	b	3274 <grub_env_write_color_highlight+0x14c>
    3350:	add	x0, x1, #0x3
    3354:	cmp	x0, x20
    3358:	b.hi	3340 <grub_env_write_color_highlight+0x218>  // b.pmore
    335c:	sub	x1, x0, x3
    3360:	b	3274 <grub_env_write_color_highlight+0x14c>
    3364:	mov	x1, #0x0                   	// #0
    3368:	b	3274 <grub_env_write_color_highlight+0x14c>
    336c:	mov	x1, #0x0                   	// #0
    3370:	b	3274 <grub_env_write_color_highlight+0x14c>
    3374:	mov	w21, w23
    3378:	ldr	x23, [sp, #48]
    337c:	b	327c <grub_env_write_color_highlight+0x154>
    3380:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3384:	ldr	x0, [x0]
    3388:	ldr	x20, [x0, #16]
    338c:	b	3214 <grub_env_write_color_highlight+0xec>
	...
    3398:	stp	x29, x30, [sp, #-32]!
    339c:	mov	x29, sp
    33a0:	stp	x19, x20, [sp, #16]
    33a4:	mov	x19, x0
    33a8:	ldrb	w0, [x1]
    33ac:	tbnz	w0, #0, 3410 <grub_env_write_color_highlight+0x2e8>
    33b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    33b4:	ldr	x0, [x0]
    33b8:	ldr	w0, [x0, #40]
    33bc:	cmp	w0, #0x4
    33c0:	b.eq	33f8 <grub_env_write_color_highlight+0x2d0>  // b.none
    33c4:	cmp	w0, #0x3
    33c8:	b.eq	3404 <grub_env_write_color_highlight+0x2dc>  // b.none
    33cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    33d0:	ldr	x1, [x0]
    33d4:	mov	w2, #0x3                   	// #3
    33d8:	mov	x0, x19
    33dc:	bl	3170 <grub_env_write_color_highlight+0x48>
    33e0:	cmp	w0, #0x0
    33e4:	cset	w20, ne  // ne = any
    33e8:	mov	w0, w20
    33ec:	ldp	x19, x20, [sp, #16]
    33f0:	ldp	x29, x30, [sp], #32
    33f4:	ret
    33f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    33fc:	ldr	x1, [x0]
    3400:	b	33d4 <grub_env_write_color_highlight+0x2ac>
    3404:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3408:	ldr	x1, [x0]
    340c:	b	33d4 <grub_env_write_color_highlight+0x2ac>
    3410:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3414:	ldr	x1, [x0]
    3418:	mov	x0, x19
    341c:	bl	0 <grub_strcmp>
    3420:	mov	w20, w0
    3424:	cbz	w0, 33e8 <grub_env_write_color_highlight+0x2c0>
    3428:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    342c:	ldr	x1, [x0]
    3430:	mov	x0, x19
    3434:	bl	0 <grub_strcmp>
    3438:	mov	w20, w0
    343c:	cbz	w0, 33e8 <grub_env_write_color_highlight+0x2c0>
    3440:	mov	x1, x19
    3444:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3448:	ldr	x0, [x0]
    344c:	bl	0 <grub_xasprintf>
    3450:	mov	x19, x0
    3454:	mov	w2, #0x3                   	// #3
    3458:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    345c:	ldr	x1, [x1]
    3460:	bl	3170 <grub_env_write_color_highlight+0x48>
    3464:	mov	w20, w0
    3468:	cbnz	w0, 3478 <grub_env_write_color_highlight+0x350>
    346c:	mov	x0, x19
    3470:	bl	0 <grub_free>
    3474:	b	33e8 <grub_env_write_color_highlight+0x2c0>
    3478:	mov	x0, x19
    347c:	bl	0 <grub_free>
    3480:	mov	w20, #0x1                   	// #1
    3484:	b	33e8 <grub_env_write_color_highlight+0x2c0>
	...
    34c8:	stp	x29, x30, [sp, #-32]!
    34cc:	mov	x29, sp
    34d0:	stp	x19, x20, [sp, #16]
    34d4:	mov	x20, x0
    34d8:	bl	0 <grub_device_open>
    34dc:	cbz	x0, 3540 <grub_env_write_color_highlight+0x418>
    34e0:	mov	x19, x0
    34e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    34e8:	ldr	x0, [x0]
    34ec:	ldr	x1, [x0]
    34f0:	mov	x0, x20
    34f4:	bl	0 <grub_strcmp>
    34f8:	cbnz	w0, 3564 <grub_env_write_color_highlight+0x43c>
    34fc:	mov	w2, #0x2                   	// #2
    3500:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3504:	ldr	x1, [x0]
    3508:	mov	x0, x20
    350c:	bl	3170 <grub_env_write_color_highlight+0x48>
    3510:	cbnz	w0, 3554 <grub_env_write_color_highlight+0x42c>
    3514:	ldr	x0, [x19]
    3518:	cbz	x0, 357c <grub_env_write_color_highlight+0x454>
    351c:	mov	x2, #0x0                   	// #0
    3520:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3524:	ldr	x1, [x1]
    3528:	bl	0 <grub_partition_iterate>
    352c:	cbz	w0, 357c <grub_env_write_color_highlight+0x454>
    3530:	mov	x0, x19
    3534:	bl	0 <grub_device_close>
    3538:	mov	w0, #0x1                   	// #1
    353c:	b	3594 <grub_env_write_color_highlight+0x46c>
    3540:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3544:	ldr	x0, [x0]
    3548:	str	wzr, [x0]
    354c:	mov	w0, #0x0                   	// #0
    3550:	b	3594 <grub_env_write_color_highlight+0x46c>
    3554:	mov	x0, x19
    3558:	bl	0 <grub_device_close>
    355c:	mov	w0, #0x1                   	// #1
    3560:	b	3594 <grub_env_write_color_highlight+0x46c>
    3564:	mov	w2, #0x1                   	// #1
    3568:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    356c:	ldr	x1, [x0]
    3570:	mov	x0, x20
    3574:	bl	3170 <grub_env_write_color_highlight+0x48>
    3578:	cbnz	w0, 35a0 <grub_env_write_color_highlight+0x478>
    357c:	mov	x0, x19
    3580:	bl	0 <grub_device_close>
    3584:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3588:	ldr	x0, [x0]
    358c:	str	wzr, [x0]
    3590:	mov	w0, #0x0                   	// #0
    3594:	ldp	x19, x20, [sp, #16]
    3598:	ldp	x29, x30, [sp], #32
    359c:	ret
    35a0:	mov	x0, x19
    35a4:	bl	0 <grub_device_close>
    35a8:	mov	w0, #0x1                   	// #1
    35ac:	b	3594 <grub_env_write_color_highlight+0x46c>
	...
    35d8:	stp	x29, x30, [sp, #-32]!
    35dc:	mov	x29, sp
    35e0:	stp	x19, x20, [sp, #16]
    35e4:	ldr	x20, [x0]
    35e8:	mov	x0, x1
    35ec:	bl	0 <grub_partition_get_name>
    35f0:	mov	w19, #0x1                   	// #1
    35f4:	cbz	x0, 3644 <grub_env_write_color_highlight+0x51c>
    35f8:	mov	x19, x0
    35fc:	mov	x2, x0
    3600:	mov	x1, x20
    3604:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3608:	ldr	x0, [x0]
    360c:	bl	0 <grub_xasprintf>
    3610:	mov	x20, x0
    3614:	mov	x0, x19
    3618:	bl	0 <grub_free>
    361c:	mov	w19, #0x1                   	// #1
    3620:	cbz	x20, 3644 <grub_env_write_color_highlight+0x51c>
    3624:	mov	w2, #0x2                   	// #2
    3628:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    362c:	ldr	x1, [x0]
    3630:	mov	x0, x20
    3634:	bl	3170 <grub_env_write_color_highlight+0x48>
    3638:	mov	w19, w0
    363c:	mov	x0, x20
    3640:	bl	0 <grub_free>
    3644:	mov	w0, w19
    3648:	ldp	x19, x20, [sp, #16]
    364c:	ldp	x29, x30, [sp], #32
    3650:	ret
    3654:	nop
	...

0000000000003668 <grub_normal_do_completion>:
    3668:	stp	x29, x30, [sp, #-96]!
    366c:	mov	x29, sp
    3670:	stp	x19, x20, [sp, #16]
    3674:	stp	x21, x22, [sp, #32]
    3678:	mov	x20, x0
    367c:	mov	x21, x1
    3680:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3684:	ldr	x3, [x1]
    3688:	str	xzr, [x3, #16]
    368c:	str	wzr, [x3, #8]
    3690:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3694:	ldr	x1, [x1]
    3698:	str	x1, [x3, #24]
    369c:	str	x2, [x3, #32]
    36a0:	mov	w1, #0x1                   	// #1
    36a4:	str	w1, [x21]
    36a8:	add	x4, sp, #0x50
    36ac:	add	x3, sp, #0x5c
    36b0:	mov	x2, #0x0                   	// #0
    36b4:	mov	x1, #0x0                   	// #0
    36b8:	bl	0 <grub_parser_split_cmdline>
    36bc:	cbnz	w0, 3ca8 <grub_normal_do_completion+0x640>
    36c0:	mov	w22, w0
    36c4:	ldr	w0, [sp, #92]
    36c8:	cbz	w0, 3cc8 <grub_normal_do_completion+0x660>
    36cc:	ldr	x2, [sp, #80]
    36d0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    36d4:	ldr	x1, [x1]
    36d8:	add	x3, x2, w0, sxtw #3
    36dc:	ldur	x3, [x3, #-8]
    36e0:	str	x3, [x1]
    36e4:	cmp	w0, #0x1
    36e8:	b.le	3cdc <grub_normal_do_completion+0x674>
    36ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    36f0:	ldr	x1, [x0]
    36f4:	ldr	x0, [x2]
    36f8:	bl	0 <grub_strcmp>
    36fc:	cbnz	w0, 3cdc <grub_normal_do_completion+0x674>
    3700:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3704:	ldr	x0, [x0]
    3708:	mov	w1, #0x3d                  	// #61
    370c:	ldr	x0, [x0]
    3710:	bl	0 <grub_strchr>
    3714:	cbz	x0, 3cdc <grub_normal_do_completion+0x674>
    3718:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    371c:	ldr	x1, [x1]
    3720:	add	x0, x0, #0x1
    3724:	str	x0, [x1]
    3728:	b	3cdc <grub_normal_do_completion+0x674>
    372c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3730:	ldr	x0, [x0]
    3734:	ldr	x19, [x0]
    3738:	cbz	x19, 3aa4 <grub_normal_do_completion+0x43c>
    373c:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
    3740:	b	374c <grub_normal_do_completion+0xe4>
    3744:	ldr	x19, [x19]
    3748:	cbz	x19, 3aa4 <grub_normal_do_completion+0x43c>
    374c:	ldr	w0, [x19, #24]
    3750:	tbz	w0, #8, 3744 <grub_normal_do_completion+0xdc>
    3754:	mov	w2, #0x0                   	// #0
    3758:	ldr	x1, [x20]
    375c:	ldr	x0, [x19, #16]
    3760:	bl	3170 <grub_env_write_color_highlight+0x48>
    3764:	cbz	w0, 3744 <grub_normal_do_completion+0xdc>
    3768:	b	3d58 <grub_normal_do_completion+0x6f0>
    376c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3770:	ldr	x0, [x0]
    3774:	ldrh	w1, [x0]
    3778:	strh	w1, [sp, #72]
    377c:	ldrb	w0, [x0, #2]
    3780:	strb	w0, [sp, #74]
    3784:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3788:	ldr	x0, [x0]
    378c:	mov	x1, x20
    3790:	ldr	x0, [x0]
    3794:	bl	0 <grub_named_list_find>
    3798:	cbz	x0, 3aa4 <grub_normal_do_completion+0x43c>
    379c:	ldr	w1, [x0, #40]
    37a0:	tbz	w1, #4, 3aa4 <grub_normal_do_completion+0x43c>
    37a4:	stp	x23, x24, [sp, #48]
    37a8:	ldr	x23, [x0, #64]
    37ac:	ldr	x0, [x23, #16]
    37b0:	cbz	x0, 3bb8 <grub_normal_do_completion+0x550>
    37b4:	mov	w2, #0x4                   	// #4
    37b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    37bc:	ldr	x1, [x0]
    37c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    37c4:	ldr	x0, [x0]
    37c8:	bl	3170 <grub_env_write_color_highlight+0x48>
    37cc:	cbnz	w0, 3c78 <grub_normal_do_completion+0x610>
    37d0:	ldr	x19, [x23, #16]
    37d4:	ldr	x0, [x19, #16]
    37d8:	cbz	x0, 381c <grub_normal_do_completion+0x1b4>
    37dc:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    37e0:	mov	w20, #0x4                   	// #4
    37e4:	b	37f4 <grub_normal_do_completion+0x18c>
    37e8:	add	x19, x19, #0x28
    37ec:	ldr	x0, [x19, #16]
    37f0:	cbz	x0, 381c <grub_normal_do_completion+0x1b4>
    37f4:	ldr	w0, [x19, #8]
    37f8:	cbz	w0, 37e8 <grub_normal_do_completion+0x180>
    37fc:	strb	w0, [sp, #73]
    3800:	mov	w2, w20
    3804:	ldr	x1, [x22]
    3808:	add	x0, sp, #0x48
    380c:	bl	3170 <grub_env_write_color_highlight+0x48>
    3810:	cbz	w0, 37e8 <grub_normal_do_completion+0x180>
    3814:	ldp	x23, x24, [sp, #48]
    3818:	b	3d58 <grub_normal_do_completion+0x6f0>
    381c:	mov	w2, #0x4                   	// #4
    3820:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3824:	ldr	x1, [x0]
    3828:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    382c:	ldr	x0, [x0]
    3830:	bl	3170 <grub_env_write_color_highlight+0x48>
    3834:	cbz	w0, 3840 <grub_normal_do_completion+0x1d8>
    3838:	ldp	x23, x24, [sp, #48]
    383c:	b	3d58 <grub_normal_do_completion+0x6f0>
    3840:	mov	w2, #0x4                   	// #4
    3844:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3848:	ldr	x1, [x0]
    384c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3850:	ldr	x0, [x0]
    3854:	bl	3170 <grub_env_write_color_highlight+0x48>
    3858:	cbnz	w0, 3c80 <grub_normal_do_completion+0x618>
    385c:	ldr	x20, [x23, #16]
    3860:	ldr	x0, [x20, #16]
    3864:	cbz	x0, 3bc0 <grub_normal_do_completion+0x558>
    3868:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    386c:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    3870:	mov	w23, #0x4                   	// #4
    3874:	b	3894 <grub_normal_do_completion+0x22c>
    3878:	mov	x0, x19
    387c:	bl	0 <grub_free>
    3880:	ldp	x23, x24, [sp, #48]
    3884:	b	3d58 <grub_normal_do_completion+0x6f0>
    3888:	add	x20, x20, #0x28
    388c:	ldr	x0, [x20, #16]
    3890:	cbz	x0, 38c8 <grub_normal_do_completion+0x260>
    3894:	ldr	x1, [x20]
    3898:	cbz	x1, 3888 <grub_normal_do_completion+0x220>
    389c:	ldr	x0, [x22]
    38a0:	bl	0 <grub_xasprintf>
    38a4:	mov	x19, x0
    38a8:	cbz	x0, 3c88 <grub_normal_do_completion+0x620>
    38ac:	mov	w2, w23
    38b0:	ldr	x1, [x24]
    38b4:	bl	3170 <grub_env_write_color_highlight+0x48>
    38b8:	cbnz	w0, 3878 <grub_normal_do_completion+0x210>
    38bc:	mov	x0, x19
    38c0:	bl	0 <grub_free>
    38c4:	b	3888 <grub_normal_do_completion+0x220>
    38c8:	ldp	x23, x24, [sp, #48]
    38cc:	b	3aa4 <grub_normal_do_completion+0x43c>
    38d0:	mov	w1, #0x29                  	// #41
    38d4:	bl	0 <grub_strchr>
    38d8:	cbnz	x0, 3d34 <grub_normal_do_completion+0x6cc>
    38dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    38e0:	ldr	x1, [x0]
    38e4:	ldr	x0, [x1]
    38e8:	add	x0, x0, #0x1
    38ec:	str	x0, [x1]
    38f0:	mov	w1, #0x2c                  	// #44
    38f4:	bl	0 <grub_strchr>
    38f8:	mov	x19, x0
    38fc:	cbz	x0, 3958 <grub_normal_do_completion+0x2f0>
    3900:	strb	wzr, [x0]
    3904:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3908:	ldr	x0, [x0]
    390c:	ldr	x0, [x0]
    3910:	bl	0 <grub_device_open>
    3914:	mov	x20, x0
    3918:	mov	w0, #0x2c                  	// #44
    391c:	strb	w0, [x19]
    3920:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3924:	ldr	x0, [x0]
    3928:	str	wzr, [x0]
    392c:	cbz	x20, 3d58 <grub_normal_do_completion+0x6f0>
    3930:	ldr	x0, [x20]
    3934:	cbz	x0, 394c <grub_normal_do_completion+0x2e4>
    3938:	mov	x2, #0x0                   	// #0
    393c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3940:	ldr	x1, [x1]
    3944:	bl	0 <grub_partition_iterate>
    3948:	cbnz	w0, 39b0 <grub_normal_do_completion+0x348>
    394c:	mov	x0, x20
    3950:	bl	0 <grub_device_close>
    3954:	b	3aa4 <grub_normal_do_completion+0x43c>
    3958:	stp	x23, x24, [sp, #48]
    395c:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    3960:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
    3964:	ldr	x0, [x23]
    3968:	ldr	x19, [x0]
    396c:	cbnz	x19, 398c <grub_normal_do_completion+0x324>
    3970:	add	w22, w22, #0x1
    3974:	cmp	w22, #0x2
    3978:	b.ls	3964 <grub_normal_do_completion+0x2fc>  // b.plast
    397c:	ldp	x23, x24, [sp, #48]
    3980:	b	3aa4 <grub_normal_do_completion+0x43c>
    3984:	ldr	x19, [x19, #56]
    3988:	cbz	x19, 3970 <grub_normal_do_completion+0x308>
    398c:	ldr	x3, [x19, #16]
    3990:	cbz	x3, 3984 <grub_normal_do_completion+0x31c>
    3994:	mov	w2, w22
    3998:	mov	x1, #0x0                   	// #0
    399c:	ldr	x0, [x20]
    39a0:	blr	x3
    39a4:	cbz	w0, 3984 <grub_normal_do_completion+0x31c>
    39a8:	ldp	x23, x24, [sp, #48]
    39ac:	b	3d58 <grub_normal_do_completion+0x6f0>
    39b0:	mov	x0, x20
    39b4:	bl	0 <grub_device_close>
    39b8:	b	3d58 <grub_normal_do_completion+0x6f0>
    39bc:	mov	x0, x19
    39c0:	bl	0 <grub_device_open>
    39c4:	mov	x20, x0
    39c8:	cbz	x0, 3d94 <grub_normal_do_completion+0x72c>
    39cc:	stp	x23, x24, [sp, #48]
    39d0:	bl	0 <grub_fs_probe>
    39d4:	mov	x22, x0
    39d8:	cbz	x0, 3cb0 <grub_normal_do_completion+0x648>
    39dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    39e0:	ldr	x0, [x0]
    39e4:	ldr	x23, [x0]
    39e8:	mov	x0, #0x0                   	// #0
    39ec:	cbz	x19, 39fc <grub_normal_do_completion+0x394>
    39f0:	mov	x0, x19
    39f4:	bl	0 <grub_strlen>
    39f8:	add	x0, x0, #0x2
    39fc:	mov	w1, #0x2f                  	// #47
    3a00:	add	x0, x23, x0
    3a04:	bl	0 <grub_strchr>
    3a08:	mov	x23, x0
    3a0c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3a10:	ldr	x0, [x0]
    3a14:	mov	w1, #0x2f                  	// #47
    3a18:	ldr	x0, [x0]
    3a1c:	bl	0 <grub_strrchr>
    3a20:	cbz	x23, 3b64 <grub_normal_do_completion+0x4fc>
    3a24:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3a28:	ldr	x2, [x1]
    3a2c:	add	x1, x0, #0x1
    3a30:	str	x1, [x2]
    3a34:	mov	x0, x23
    3a38:	bl	0 <grub_strdup>
    3a3c:	mov	x24, x0
    3a40:	mov	w23, #0x1                   	// #1
    3a44:	cbz	x0, 3a8c <grub_normal_do_completion+0x424>
    3a48:	mov	w1, #0x2f                  	// #47
    3a4c:	bl	0 <grub_strrchr>
    3a50:	strb	wzr, [x0, #1]
    3a54:	ldr	x4, [x22, #24]
    3a58:	mov	x3, #0x0                   	// #0
    3a5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3a60:	ldr	x2, [x0]
    3a64:	mov	x1, x24
    3a68:	mov	x0, x20
    3a6c:	blr	x4
    3a70:	mov	x0, x24
    3a74:	bl	0 <grub_free>
    3a78:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3a7c:	ldr	x0, [x0]
    3a80:	ldr	w0, [x0]
    3a84:	cmp	w0, #0x0
    3a88:	cset	w23, ne  // ne = any
    3a8c:	mov	x0, x20
    3a90:	bl	0 <grub_device_close>
    3a94:	mov	x0, x19
    3a98:	bl	0 <grub_free>
    3a9c:	cbnz	w23, 3cc0 <grub_normal_do_completion+0x658>
    3aa0:	ldp	x23, x24, [sp, #48]
    3aa4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3aa8:	ldr	x0, [x0]
    3aac:	ldr	w1, [x0, #8]
    3ab0:	cmp	w1, #0x1
    3ab4:	cset	w1, gt
    3ab8:	str	w1, [x21]
    3abc:	ldr	x0, [x0, #16]
    3ac0:	cbz	x0, 3d58 <grub_normal_do_completion+0x6f0>
    3ac4:	stp	x23, x24, [sp, #48]
    3ac8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3acc:	ldr	x19, [x0]
    3ad0:	ldr	x0, [x19]
    3ad4:	bl	0 <grub_strlen>
    3ad8:	mov	x22, x0
    3adc:	ldr	x0, [x19, #16]
    3ae0:	bl	0 <grub_strlen>
    3ae4:	mov	x20, x0
    3ae8:	sxtw	x21, w22
    3aec:	ldr	x0, [x19, #16]
    3af0:	add	x2, x0, w22, sxtw
    3af4:	ldrb	w1, [x0, w22, sxtw]
    3af8:	cbz	w1, 3bc8 <grub_normal_do_completion+0x560>
    3afc:	mov	w19, #0x0                   	// #0
    3b00:	cmp	w1, #0x20
    3b04:	cinc	w19, w19, eq  // eq = none
    3b08:	ldrb	w1, [x2, #1]!
    3b0c:	cbnz	w1, 3b00 <grub_normal_do_completion+0x498>
    3b10:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3b14:	ldr	x23, [x0]
    3b18:	ldr	x0, [x23, #24]
    3b1c:	bl	0 <grub_strlen>
    3b20:	sub	w1, w20, w22
    3b24:	sxtw	x1, w1
    3b28:	add	x1, x1, #0x1
    3b2c:	add	x0, x0, w19, sxtw
    3b30:	add	x0, x1, x0
    3b34:	bl	0 <grub_malloc>
    3b38:	mov	x19, x0
    3b3c:	ldr	x0, [x23, #16]
    3b40:	add	x2, x0, x21
    3b44:	ldrb	w1, [x0, x21]
    3b48:	cbz	w1, 3c00 <grub_normal_do_completion+0x598>
    3b4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3b50:	ldr	x0, [x0]
    3b54:	ldr	w4, [x0, #40]
    3b58:	mov	x0, x19
    3b5c:	mov	w5, #0x5c                  	// #92
    3b60:	b	3be8 <grub_normal_do_completion+0x580>
    3b64:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3b68:	ldr	x22, [x0]
    3b6c:	ldr	x0, [x22]
    3b70:	bl	0 <grub_strlen>
    3b74:	ldr	x1, [x22]
    3b78:	add	x1, x1, x0
    3b7c:	str	x1, [x22]
    3b80:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3b84:	ldr	x0, [x0]
    3b88:	bl	0 <grub_strdup>
    3b8c:	str	x0, [x22, #16]
    3b90:	cbz	x0, 3cb8 <grub_normal_do_completion+0x650>
    3b94:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3b98:	ldr	x0, [x0]
    3b9c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3ba0:	ldr	x1, [x1]
    3ba4:	str	x1, [x0, #24]
    3ba8:	mov	w1, #0x1                   	// #1
    3bac:	str	w1, [x0, #8]
    3bb0:	mov	w23, #0x0                   	// #0
    3bb4:	b	3a8c <grub_normal_do_completion+0x424>
    3bb8:	ldp	x23, x24, [sp, #48]
    3bbc:	b	3aa4 <grub_normal_do_completion+0x43c>
    3bc0:	ldp	x23, x24, [sp, #48]
    3bc4:	b	3aa4 <grub_normal_do_completion+0x43c>
    3bc8:	mov	w19, #0x0                   	// #0
    3bcc:	b	3b10 <grub_normal_do_completion+0x4a8>
    3bd0:	strb	w5, [x3], #1
    3bd4:	mov	x0, x3
    3bd8:	ldrb	w1, [x2]
    3bdc:	strb	w1, [x0], #1
    3be0:	ldrb	w1, [x2, #1]!
    3be4:	cbz	w1, 3c04 <grub_normal_do_completion+0x59c>
    3be8:	mov	x3, x0
    3bec:	cmp	w1, #0x20
    3bf0:	b.ne	3bd4 <grub_normal_do_completion+0x56c>  // b.any
    3bf4:	cmp	w4, #0x3
    3bf8:	b.ne	3bd0 <grub_normal_do_completion+0x568>  // b.any
    3bfc:	b	3bd4 <grub_normal_do_completion+0x56c>
    3c00:	mov	x0, x19
    3c04:	strb	wzr, [x0]
    3c08:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3c0c:	ldr	x1, [x1]
    3c10:	ldr	w1, [x1, #8]
    3c14:	cmp	w1, #0x1
    3c18:	b.eq	3c44 <grub_normal_do_completion+0x5dc>  // b.none
    3c1c:	ldrb	w0, [x19]
    3c20:	cbz	w0, 3c58 <grub_normal_do_completion+0x5f0>
    3c24:	ldr	w0, [sp, #92]
    3c28:	cbnz	w0, 3c68 <grub_normal_do_completion+0x600>
    3c2c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3c30:	ldr	x0, [x0]
    3c34:	ldr	x0, [x0, #16]
    3c38:	bl	0 <grub_free>
    3c3c:	ldp	x23, x24, [sp, #48]
    3c40:	b	3d80 <grub_normal_do_completion+0x718>
    3c44:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3c48:	ldr	x1, [x1]
    3c4c:	ldr	x1, [x1, #24]
    3c50:	bl	0 <grub_strcpy>
    3c54:	b	3c1c <grub_normal_do_completion+0x5b4>
    3c58:	mov	x0, x19
    3c5c:	bl	0 <grub_free>
    3c60:	ldp	x23, x24, [sp, #48]
    3c64:	b	3d58 <grub_normal_do_completion+0x6f0>
    3c68:	ldr	x0, [sp, #80]
    3c6c:	ldr	x0, [x0]
    3c70:	bl	0 <grub_free>
    3c74:	b	3c2c <grub_normal_do_completion+0x5c4>
    3c78:	ldp	x23, x24, [sp, #48]
    3c7c:	b	3d58 <grub_normal_do_completion+0x6f0>
    3c80:	ldp	x23, x24, [sp, #48]
    3c84:	b	3d58 <grub_normal_do_completion+0x6f0>
    3c88:	ldp	x23, x24, [sp, #48]
    3c8c:	b	3d58 <grub_normal_do_completion+0x6f0>
    3c90:	ldr	x0, [sp, #80]
    3c94:	ldr	x0, [x0]
    3c98:	bl	0 <grub_free>
    3c9c:	ldr	x0, [sp, #80]
    3ca0:	bl	0 <grub_free>
    3ca4:	b	3d60 <grub_normal_do_completion+0x6f8>
    3ca8:	mov	x19, #0x0                   	// #0
    3cac:	b	3d80 <grub_normal_do_completion+0x718>
    3cb0:	mov	w23, #0x1                   	// #1
    3cb4:	b	3a8c <grub_normal_do_completion+0x424>
    3cb8:	mov	w23, #0x1                   	// #1
    3cbc:	b	3a8c <grub_normal_do_completion+0x424>
    3cc0:	ldp	x23, x24, [sp, #48]
    3cc4:	b	3d58 <grub_normal_do_completion+0x6f0>
    3cc8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3ccc:	ldr	x0, [x0]
    3cd0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3cd4:	ldr	x1, [x1]
    3cd8:	str	x1, [x0]
    3cdc:	ldrb	w1, [x20]
    3ce0:	mov	x19, x20
    3ce4:	mov	w0, #0x1                   	// #1
    3ce8:	cbz	w1, 3cfc <grub_normal_do_completion+0x694>
    3cec:	add	x2, sp, #0x48
    3cf0:	bl	0 <grub_parser_cmdline_state>
    3cf4:	ldrb	w1, [x19, #1]!
    3cf8:	cbnz	w1, 3cec <grub_normal_do_completion+0x684>
    3cfc:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3d00:	ldr	x1, [x1]
    3d04:	str	w0, [x1, #40]
    3d08:	ldr	w0, [sp, #92]
    3d0c:	cmp	w0, #0x1
    3d10:	b.ls	372c <grub_normal_do_completion+0xc4>  // b.plast
    3d14:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3d18:	ldr	x0, [x0]
    3d1c:	ldr	x0, [x0]
    3d20:	ldrb	w1, [x0]
    3d24:	cmp	w1, #0x2d
    3d28:	b.eq	376c <grub_normal_do_completion+0x104>  // b.none
    3d2c:	cmp	w1, #0x28
    3d30:	b.eq	38d0 <grub_normal_do_completion+0x268>  // b.none
    3d34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3d38:	ldr	x0, [x0]
    3d3c:	ldr	x0, [x0]
    3d40:	bl	0 <grub_file_get_device_name>
    3d44:	mov	x19, x0
    3d48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3d4c:	ldr	x0, [x0]
    3d50:	ldr	w0, [x0]
    3d54:	cbz	w0, 39bc <grub_normal_do_completion+0x354>
    3d58:	ldr	w0, [sp, #92]
    3d5c:	cbnz	w0, 3c90 <grub_normal_do_completion+0x628>
    3d60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3d64:	ldr	x0, [x0]
    3d68:	ldr	x0, [x0, #16]
    3d6c:	bl	0 <grub_free>
    3d70:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    3d74:	ldr	x0, [x0]
    3d78:	str	wzr, [x0]
    3d7c:	mov	x19, #0x0                   	// #0
    3d80:	mov	x0, x19
    3d84:	ldp	x19, x20, [sp, #16]
    3d88:	ldp	x21, x22, [sp, #32]
    3d8c:	ldp	x29, x30, [sp], #96
    3d90:	ret
    3d94:	mov	x0, x19
    3d98:	bl	0 <grub_free>
    3d9c:	b	3d58 <grub_normal_do_completion+0x6f0>
	...

0000000000003e20 <grub_get_weekday>:
    3e20:	ldrb	w2, [x0, #2]
    3e24:	ldrh	w3, [x0]
    3e28:	cmp	w2, #0x2
    3e2c:	cset	w1, ls  // ls = plast
    3e30:	sub	w3, w3, w1
    3e34:	mov	w1, #0xc                   	// #12
    3e38:	csel	w1, w1, wzr, ls  // ls = plast
    3e3c:	add	w1, w1, w2
    3e40:	sub	w2, w1, #0x2
    3e44:	lsl	w1, w2, #5
    3e48:	sub	w1, w1, w2
    3e4c:	mov	w2, #0xaaab                	// #43691
    3e50:	movk	w2, #0xaaaa, lsl #16
    3e54:	umull	x1, w1, w2
    3e58:	lsr	x1, x1, #35
    3e5c:	mov	w2, #0x851f                	// #34079
    3e60:	movk	w2, #0x51eb, lsl #16
    3e64:	umull	x2, w3, w2
    3e68:	lsr	x4, x2, #37
    3e6c:	sub	w1, w1, w4
    3e70:	lsr	x2, x2, #39
    3e74:	add	w2, w2, w3, lsr #2
    3e78:	ldrb	w0, [x0, #3]
    3e7c:	add	w0, w0, w3
    3e80:	add	w0, w2, w0
    3e84:	add	w1, w1, w0
    3e88:	mov	w0, #0x4925                	// #18725
    3e8c:	movk	w0, #0x2492, lsl #16
    3e90:	umull	x0, w1, w0
    3e94:	lsr	x2, x0, #32
    3e98:	sub	w0, w1, w2
    3e9c:	add	w0, w2, w0, lsr #1
    3ea0:	lsr	w0, w0, #2
    3ea4:	lsl	w2, w0, #3
    3ea8:	sub	w0, w2, w0
    3eac:	sub	w0, w1, w0
    3eb0:	ret

0000000000003eb4 <grub_get_weekday_name>:
    3eb4:	stp	x29, x30, [sp, #-16]!
    3eb8:	mov	x29, sp
    3ebc:	bl	3e20 <grub_get_weekday>
    3ec0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3ec4:	ldr	x2, [x1]
    3ec8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    3ecc:	ldr	x1, [x1]
    3ed0:	ldr	x1, [x1]
    3ed4:	ldr	x0, [x2, w0, sxtw #3]
    3ed8:	blr	x1
    3edc:	ldp	x29, x30, [sp], #16
    3ee0:	ret
    3ee4:	nop
	...

0000000000003ef8 <grub_unixtime2datetime>:
    3ef8:	sub	sp, sp, #0x10
    3efc:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    3f00:	ldr	x2, [x2]
    3f04:	ldr	x3, [x2]
    3f08:	str	x3, [sp]
    3f0c:	ldr	w2, [x2, #8]
    3f10:	str	w2, [sp, #8]
    3f14:	tbnz	w0, #31, 3f84 <grub_unixtime2datetime+0x8c>
    3f18:	mov	w2, #0x4507                	// #17671
    3f1c:	movk	w2, #0xc22e, lsl #16
    3f20:	umull	x2, w0, w2
    3f24:	lsr	x2, x2, #48
    3f28:	mov	w7, #0xae80                	// #44672
    3f2c:	movk	w7, #0xfffe, lsl #16
    3f30:	madd	w7, w2, w7, w0
    3f34:	add	w0, w2, #0x6, lsl #12
    3f38:	add	w0, w0, #0x272
    3f3c:	mov	w2, #0xb073                	// #45171
    3f40:	movk	w2, #0x166d, lsl #16
    3f44:	umull	x2, w0, w2
    3f48:	lsr	x2, x2, #39
    3f4c:	ubfiz	w5, w2, #2, #14
    3f50:	mov	w3, #0x5b5                 	// #1461
    3f54:	msub	w0, w2, w3, w0
    3f58:	sub	w2, w0, #0x5b4
    3f5c:	cmp	w2, #0x16c
    3f60:	b.hi	3fa8 <grub_unixtime2datetime+0xb0>  // b.pmore
    3f64:	add	w5, w5, #0x770
    3f68:	and	w5, w5, #0xffff
    3f6c:	mov	w2, #0x16d                 	// #365
    3f70:	strh	w5, [x1]
    3f74:	mov	x3, sp
    3f78:	mov	w0, #0x0                   	// #0
    3f7c:	and	w5, w5, #0x3
    3f80:	b	4018 <grub_unixtime2datetime+0x120>
    3f84:	mov	w2, #0x517f                	// #20863
    3f88:	movk	w2, #0x1, lsl #16
    3f8c:	sub	w2, w2, w0
    3f90:	mov	w3, #0x4507                	// #17671
    3f94:	movk	w3, #0xc22e, lsl #16
    3f98:	umull	x2, w2, w3
    3f9c:	lsr	x2, x2, #48
    3fa0:	neg	w2, w2
    3fa4:	b	3f28 <grub_unixtime2datetime+0x30>
    3fa8:	mov	w2, #0xf361                	// #62305
    3fac:	movk	w2, #0x6719, lsl #16
    3fb0:	umull	x2, w0, w2
    3fb4:	lsr	x3, x2, #32
    3fb8:	sub	w2, w0, w3
    3fbc:	add	w2, w3, w2, lsr #1
    3fc0:	lsr	w2, w2, #8
    3fc4:	add	w5, w5, w2
    3fc8:	add	w5, w5, #0x76d
    3fcc:	and	w5, w5, #0xffff
    3fd0:	mov	w3, #0x16d                 	// #365
    3fd4:	msub	w2, w2, w3, w0
    3fd8:	b	3f70 <grub_unixtime2datetime+0x78>
    3fdc:	cbz	w5, 4004 <grub_unixtime2datetime+0x10c>
    3fe0:	ldrb	w6, [x3]
    3fe4:	cmp	w6, w2
    3fe8:	b.hi	4044 <grub_unixtime2datetime+0x14c>  // b.pmore
    3fec:	cmp	w4, #0x1
    3ff0:	b.ne	4030 <grub_unixtime2datetime+0x138>  // b.any
    3ff4:	cbz	w5, 400c <grub_unixtime2datetime+0x114>
    3ff8:	ldrb	w4, [x3]
    3ffc:	sub	w2, w2, w4
    4000:	b	4010 <grub_unixtime2datetime+0x118>
    4004:	cmp	w2, #0x1c
    4008:	b.ls	4044 <grub_unixtime2datetime+0x14c>  // b.plast
    400c:	sub	w2, w2, #0x1d
    4010:	add	w0, w0, #0x1
    4014:	add	x3, x3, #0x1
    4018:	mov	w4, w0
    401c:	cmp	w0, #0x1
    4020:	b.eq	3fdc <grub_unixtime2datetime+0xe4>  // b.none
    4024:	ldrb	w6, [x3]
    4028:	cmp	w2, w6
    402c:	b.cc	4044 <grub_unixtime2datetime+0x14c>  // b.lo, b.ul, b.last
    4030:	ldrb	w4, [x3]
    4034:	sub	w2, w2, w4
    4038:	add	w4, w0, #0x1
    403c:	cmp	w4, #0xb
    4040:	b.le	4010 <grub_unixtime2datetime+0x118>
    4044:	add	w4, w4, #0x1
    4048:	strb	w4, [x1, #2]
    404c:	add	w2, w2, #0x1
    4050:	strb	w2, [x1, #3]
    4054:	mov	w0, #0xb3c5                	// #46021
    4058:	movk	w0, #0x91a2, lsl #16
    405c:	umull	x0, w7, w0
    4060:	lsr	x0, x0, #43
    4064:	strb	w0, [x1, #4]
    4068:	mov	w2, #0xe10                 	// #3600
    406c:	msub	w0, w0, w2, w7
    4070:	mov	w2, #0x8889                	// #34953
    4074:	movk	w2, #0x8888, lsl #16
    4078:	umull	x2, w0, w2
    407c:	lsr	x2, x2, #37
    4080:	strb	w2, [x1, #5]
    4084:	lsl	w3, w2, #4
    4088:	sub	w2, w3, w2
    408c:	sub	w0, w0, w2, lsl #2
    4090:	strb	w0, [x1, #6]
    4094:	add	sp, sp, #0x10
    4098:	ret
    409c:	nop
	...
    40a8:	stp	x29, x30, [sp, #-32]!
    40ac:	mov	x29, sp
    40b0:	stp	x19, x20, [sp, #16]
    40b4:	mov	w20, w0
    40b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    40bc:	ldr	x0, [x0]
    40c0:	ldr	x19, [x0]
    40c4:	cbz	x19, 40e0 <grub_unixtime2datetime+0x1e8>
    40c8:	ldr	x2, [x19, #16]
    40cc:	ldr	x1, [x19, #8]
    40d0:	mov	w0, w20
    40d4:	blr	x2
    40d8:	ldr	x19, [x19]
    40dc:	cbnz	x19, 40c8 <grub_unixtime2datetime+0x1d0>
    40e0:	ldp	x19, x20, [sp, #16]
    40e4:	ldp	x29, x30, [sp], #32
    40e8:	ret
    40ec:	nop
	...
    40f8:	stp	x29, x30, [sp, #-32]!
    40fc:	mov	x29, sp
    4100:	stp	x19, x20, [sp, #16]
    4104:	mov	w20, w0
    4108:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    410c:	ldr	x0, [x0]
    4110:	ldr	x19, [x0]
    4114:	cbz	x19, 4130 <grub_unixtime2datetime+0x238>
    4118:	ldr	x2, [x19, #24]
    411c:	ldr	x1, [x19, #8]
    4120:	mov	w0, w20
    4124:	blr	x2
    4128:	ldr	x19, [x19]
    412c:	cbnz	x19, 4118 <grub_unixtime2datetime+0x220>
    4130:	ldp	x19, x20, [sp, #16]
    4134:	ldp	x29, x30, [sp], #32
    4138:	ret
    413c:	nop
	...
    4148:	stp	x29, x30, [sp, #-32]!
    414c:	mov	x29, sp
    4150:	str	x19, [sp, #16]
    4154:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4158:	ldr	x0, [x0]
    415c:	ldr	x19, [x0]
    4160:	cbz	x19, 4178 <grub_unixtime2datetime+0x280>
    4164:	ldr	x1, [x19, #32]
    4168:	ldr	x0, [x19, #8]
    416c:	blr	x1
    4170:	ldr	x19, [x19]
    4174:	cbnz	x19, 4164 <grub_unixtime2datetime+0x26c>
    4178:	ldr	x19, [sp, #16]
    417c:	ldp	x29, x30, [sp], #32
    4180:	ret
    4184:	nop
	...
    4190:	b	41c4 <grub_unixtime2datetime+0x2cc>
    4194:	mov	w0, #0x0                   	// #0
    4198:	b	41e8 <grub_unixtime2datetime+0x2f0>
    419c:	mov	w0, #0x1                   	// #1
    41a0:	b	41e8 <grub_unixtime2datetime+0x2f0>
    41a4:	add	x1, x1, #0x1
    41a8:	ldrb	w2, [x0]
    41ac:	ldrb	w3, [x1]
    41b0:	cmp	w3, w2
    41b4:	b.ne	4194 <grub_unixtime2datetime+0x29c>  // b.any
    41b8:	cbz	w2, 419c <grub_unixtime2datetime+0x2a4>
    41bc:	add	x0, x0, #0x1
    41c0:	add	x1, x1, #0x1
    41c4:	ldrb	w2, [x1]
    41c8:	cmp	w2, #0x3e
    41cc:	b.ne	41a8 <grub_unixtime2datetime+0x2b0>  // b.any
    41d0:	ldrb	w2, [x1, #1]
    41d4:	cmp	w2, #0x3e
    41d8:	b.eq	41a4 <grub_unixtime2datetime+0x2ac>  // b.none
    41dc:	ldrb	w0, [x0]
    41e0:	cmp	w0, #0x0
    41e4:	cset	w0, eq  // eq = none
    41e8:	ret
    41ec:	stp	x29, x30, [sp, #-32]!
    41f0:	mov	x29, sp
    41f4:	str	x19, [sp, #16]
    41f8:	mov	x19, x0
    41fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4200:	ldr	x0, [x0]
    4204:	bl	0 <grub_printf>
    4208:	ldr	x1, [x19]
    420c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4210:	ldr	x0, [x0]
    4214:	bl	0 <grub_printf_>
    4218:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    421c:	ldr	x0, [x0]
    4220:	bl	0 <grub_printf>
    4224:	ldr	x19, [sp, #16]
    4228:	ldp	x29, x30, [sp], #32
    422c:	ret
	...
    4248:	stp	x29, x30, [sp, #-32]!
    424c:	mov	x29, sp
    4250:	str	x19, [sp, #16]
    4254:	mov	x19, x0
    4258:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    425c:	ldr	x0, [x0]
    4260:	bl	0 <grub_printf>
    4264:	ldr	x1, [x19]
    4268:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    426c:	ldr	x0, [x0]
    4270:	bl	0 <grub_printf_>
    4274:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4278:	ldr	x0, [x0]
    427c:	bl	0 <grub_printf>
    4280:	mov	w0, #0x9c4                 	// #2500
    4284:	bl	0 <grub_millisleep>
    4288:	ldr	x19, [sp, #16]
    428c:	ldp	x29, x30, [sp], #32
    4290:	ret
    4294:	nop
	...
    42b0:	stp	x29, x30, [sp, #-32]!
    42b4:	mov	x29, sp
    42b8:	stp	x19, x20, [sp, #16]
    42bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    42c0:	ldr	x0, [x0]
    42c4:	ldr	x19, [x0]
    42c8:	cbz	x19, 42ec <grub_unixtime2datetime+0x3f4>
    42cc:	mov	x20, x19
    42d0:	ldr	x19, [x19]
    42d4:	ldr	x1, [x20, #40]
    42d8:	ldr	x0, [x20, #8]
    42dc:	blr	x1
    42e0:	mov	x0, x20
    42e4:	bl	0 <grub_free>
    42e8:	cbnz	x19, 42cc <grub_unixtime2datetime+0x3d4>
    42ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    42f0:	ldr	x0, [x0]
    42f4:	str	xzr, [x0]
    42f8:	ldp	x19, x20, [sp, #16]
    42fc:	ldp	x29, x30, [sp], #32
    4300:	ret
    4304:	nop
	...

0000000000004310 <grub_wait_after_message>:
    4310:	stp	x29, x30, [sp, #-32]!
    4314:	mov	x29, sp
    4318:	str	x19, [sp, #16]
    431c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4320:	ldr	x0, [x0]
    4324:	ldr	x1, [x0]
    4328:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    432c:	ldr	x0, [x0]
    4330:	blr	x1
    4334:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4338:	ldr	x0, [x0]
    433c:	bl	0 <grub_printf_>
    4340:	bl	0 <grub_refresh>
    4344:	bl	0 <grub_get_time_ms>
    4348:	add	x19, x0, #0x2, lsl #12
    434c:	add	x19, x19, #0x710
    4350:	bl	0 <grub_get_time_ms>
    4354:	cmp	x0, x19
    4358:	b.cs	4364 <grub_wait_after_message+0x54>  // b.hs, b.nlast
    435c:	bl	0 <grub_getkey_noblock>
    4360:	cbz	w0, 4350 <grub_wait_after_message+0x40>
    4364:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4368:	ldr	x0, [x0]
    436c:	ldr	x1, [x0]
    4370:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4374:	ldr	x0, [x0]
    4378:	blr	x1
    437c:	ldr	x19, [sp, #16]
    4380:	ldp	x29, x30, [sp], #32
    4384:	ret
	...
    43a0:	stp	x29, x30, [sp, #-16]!
    43a4:	mov	x29, sp
    43a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    43ac:	ldr	x0, [x0]
    43b0:	ldr	w0, [x0]
    43b4:	cbnz	w0, 43dc <grub_wait_after_message+0xcc>
    43b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    43bc:	ldr	x0, [x0]
    43c0:	bl	0 <grub_printf>
    43c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    43c8:	ldr	x0, [x0]
    43cc:	bl	0 <grub_printf_>
    43d0:	bl	4310 <grub_wait_after_message>
    43d4:	ldp	x29, x30, [sp], #16
    43d8:	ret
    43dc:	bl	0 <grub_print_error>
    43e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    43e4:	ldr	x0, [x0]
    43e8:	str	wzr, [x0]
    43ec:	b	43b8 <grub_wait_after_message+0xa8>
	...

0000000000004408 <grub_menu_get_entry>:
    4408:	ldr	x0, [x0, #8]
    440c:	cmp	x0, #0x0
    4410:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4414:	b.le	442c <grub_menu_get_entry+0x24>
    4418:	ldr	x0, [x0, #72]
    441c:	sub	w1, w1, #0x1
    4420:	cmp	x0, #0x0
    4424:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4428:	b.gt	4418 <grub_menu_get_entry+0x10>
    442c:	ret

0000000000004430 <grub_menu_get_timeout>:
    4430:	stp	x29, x30, [sp, #-32]!
    4434:	mov	x29, sp
    4438:	str	x19, [sp, #16]
    443c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4440:	ldr	x0, [x0]
    4444:	bl	0 <grub_env_get>
    4448:	cbz	x0, 44ac <grub_menu_get_timeout+0x7c>
    444c:	mov	x19, x0
    4450:	bl	0 <grub_error_push>
    4454:	mov	w2, #0x0                   	// #0
    4458:	mov	x1, #0x0                   	// #0
    445c:	mov	x0, x19
    4460:	bl	0 <grub_strtoul>
    4464:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    4468:	ldr	x1, [x1]
    446c:	ldr	w1, [x1]
    4470:	mov	w19, w0
    4474:	cbnz	w1, 448c <grub_menu_get_timeout+0x5c>
    4478:	bl	0 <grub_error_pop>
    447c:	mov	w0, w19
    4480:	ldr	x19, [sp, #16]
    4484:	ldp	x29, x30, [sp], #32
    4488:	ret
    448c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4490:	ldr	x0, [x0]
    4494:	bl	0 <grub_env_unset>
    4498:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    449c:	ldr	x0, [x0]
    44a0:	str	wzr, [x0]
    44a4:	mov	w19, #0xffffffff            	// #-1
    44a8:	b	4478 <grub_menu_get_timeout+0x48>
    44ac:	mov	w19, #0xffffffff            	// #-1
    44b0:	b	447c <grub_menu_get_timeout+0x4c>
    44b4:	nop
	...

00000000000044c8 <grub_menu_set_timeout>:
    44c8:	cmp	w0, #0x0
    44cc:	b.gt	44d4 <grub_menu_set_timeout+0xc>
    44d0:	ret
    44d4:	stp	x29, x30, [sp, #-32]!
    44d8:	mov	x29, sp
    44dc:	mov	w3, w0
    44e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    44e4:	ldr	x2, [x0]
    44e8:	mov	x1, #0x10                  	// #16
    44ec:	add	x0, sp, x1
    44f0:	bl	0 <grub_snprintf>
    44f4:	add	x1, sp, #0x10
    44f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    44fc:	ldr	x0, [x0]
    4500:	bl	0 <grub_env_set>
    4504:	ldp	x29, x30, [sp], #32
    4508:	ret
    450c:	nop
	...

0000000000004520 <grub_menu_register_viewer>:
    4520:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    4524:	ldr	x1, [x1]
    4528:	ldr	x2, [x1]
    452c:	str	x2, [x0]
    4530:	str	x0, [x1]
    4534:	ret
	...

0000000000004540 <grub_show_menu>:
    4540:	stp	x29, x30, [sp, #-128]!
    4544:	mov	x29, sp
    4548:	stp	x19, x20, [sp, #16]
    454c:	stp	x21, x22, [sp, #32]
    4550:	stp	x23, x24, [sp, #48]
    4554:	stp	x25, x26, [sp, #64]
    4558:	stp	x27, x28, [sp, #80]
    455c:	mov	x22, x0
    4560:	str	w1, [sp, #104]
    4564:	mov	w25, w2
    4568:	mov	w27, #0x63                  	// #99
    456c:	movk	w27, #0x200, lsl #16
    4570:	b	4d34 <grub_show_menu+0x7f4>
    4574:	ldr	x20, [x22, #8]
    4578:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    457c:	ldr	x0, [x0]
    4580:	str	wzr, [x0]
    4584:	cbz	x20, 45b8 <grub_show_menu+0x78>
    4588:	mov	w21, #0x0                   	// #0
    458c:	mov	x1, x19
    4590:	ldr	x0, [x20]
    4594:	bl	4190 <grub_unixtime2datetime+0x298>
    4598:	cbnz	w0, 45c4 <grub_show_menu+0x84>
    459c:	mov	x1, x19
    45a0:	ldr	x0, [x20, #8]
    45a4:	bl	4190 <grub_unixtime2datetime+0x298>
    45a8:	cbnz	w0, 45c4 <grub_show_menu+0x84>
    45ac:	ldr	x20, [x20, #72]
    45b0:	add	w21, w21, #0x1
    45b4:	cbnz	x20, 458c <grub_show_menu+0x4c>
    45b8:	bl	0 <grub_error_pop>
    45bc:	mov	w21, #0x0                   	// #0
    45c0:	b	45d8 <grub_show_menu+0x98>
    45c4:	bl	0 <grub_error_pop>
    45c8:	tbnz	w21, #31, 4674 <grub_show_menu+0x134>
    45cc:	ldr	w0, [x22]
    45d0:	cmp	w0, w21
    45d4:	csel	w21, w21, wzr, gt
    45d8:	bl	4430 <grub_menu_get_timeout>
    45dc:	mov	w19, w0
    45e0:	tbnz	w0, #31, 467c <grub_show_menu+0x13c>
    45e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    45e8:	ldr	x0, [x0]
    45ec:	bl	0 <grub_env_get>
    45f0:	mov	x20, x0
    45f4:	cbz	x0, 4628 <grub_show_menu+0xe8>
    45f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    45fc:	ldr	x0, [x0]
    4600:	ldr	x0, [x0]
    4604:	cbz	x0, 4628 <grub_show_menu+0xe8>
    4608:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    460c:	ldr	x23, [x1]
    4610:	mov	x1, x20
    4614:	bl	0 <grub_strcmp>
    4618:	str	w0, [sp, #108]
    461c:	cbz	w0, 468c <grub_show_menu+0x14c>
    4620:	ldr	x0, [x23, #16]!
    4624:	cbnz	x0, 4610 <grub_show_menu+0xd0>
    4628:	cbz	w19, 4c38 <grub_show_menu+0x6f8>
    462c:	mov	w24, w21
    4630:	mov	w26, #0x67                  	// #103
    4634:	movk	w26, #0x200, lsl #16
    4638:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    463c:	ldr	x0, [x0]
    4640:	ldr	x19, [x0]
    4644:	cbz	x19, 4824 <grub_show_menu+0x2e4>
    4648:	mov	x23, x19
    464c:	ldr	x0, [x23, #112]
    4650:	cbnz	x0, 47bc <grub_show_menu+0x27c>
    4654:	ldr	x23, [x23]
    4658:	cbnz	x23, 464c <grub_show_menu+0x10c>
    465c:	mov	w20, #0x0                   	// #0
    4660:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    4664:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    4668:	b	4894 <grub_show_menu+0x354>
    466c:	mov	w21, #0x0                   	// #0
    4670:	b	45d8 <grub_show_menu+0x98>
    4674:	mov	w21, #0x0                   	// #0
    4678:	b	45d8 <grub_show_menu+0x98>
    467c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4680:	ldr	x0, [x0]
    4684:	bl	0 <grub_env_unset>
    4688:	b	45e4 <grub_show_menu+0xa4>
    468c:	ldr	w24, [x23, #8]
    4690:	sub	w0, w24, #0x1
    4694:	cmp	w0, #0x1
    4698:	b.hi	4628 <grub_show_menu+0xe8>  // b.pmore
    469c:	cmp	w19, #0x0
    46a0:	ccmp	w24, #0x1, #0x0, ne  // ne = any
    46a4:	b.eq	46c0 <grub_show_menu+0x180>  // b.none
    46a8:	bl	0 <grub_get_time_ms>
    46ac:	str	x0, [sp, #96]
    46b0:	mov	w20, #0xffffffff            	// #-1
    46b4:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
    46b8:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    46bc:	b	470c <grub_show_menu+0x1cc>
    46c0:	bl	9d98 <grub_term_save_pos>
    46c4:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    46c8:	ldr	x1, [x1]
    46cc:	str	x0, [x1, #8]
    46d0:	bl	9e38 <grub_term_restore_pos>
    46d4:	mov	w1, w19
    46d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    46dc:	ldr	x0, [x0]
    46e0:	bl	0 <grub_printf>
    46e4:	bl	0 <grub_refresh>
    46e8:	b	46a8 <grub_show_menu+0x168>
    46ec:	tbz	w20, #31, 4da4 <grub_show_menu+0x864>
    46f0:	cmp	w0, #0x1b
    46f4:	b.eq	4dc8 <grub_show_menu+0x888>  // b.none
    46f8:	ldr	x23, [sp, #96]
    46fc:	cmp	w19, #0x0
    4700:	b.gt	4754 <grub_show_menu+0x214>
    4704:	cbz	w19, 4798 <grub_show_menu+0x258>
    4708:	str	x23, [sp, #96]
    470c:	bl	0 <grub_getkey_noblock>
    4710:	cbz	w0, 46f8 <grub_show_menu+0x1b8>
    4714:	ldr	x1, [x22, #8]
    4718:	ldr	w2, [x22]
    471c:	cmp	w2, #0x0
    4720:	b.le	474c <grub_show_menu+0x20c>
    4724:	ldr	w20, [sp, #108]
    4728:	ldr	w3, [x1, #64]
    472c:	cmp	w0, w3
    4730:	b.eq	46ec <grub_show_menu+0x1ac>  // b.none
    4734:	add	w20, w20, #0x1
    4738:	ldr	x1, [x1, #72]
    473c:	cmp	w20, w2
    4740:	b.ne	4728 <grub_show_menu+0x1e8>  // b.any
    4744:	mov	w20, #0xffffffff            	// #-1
    4748:	b	46f0 <grub_show_menu+0x1b0>
    474c:	mov	w20, #0xffffffff            	// #-1
    4750:	b	46f0 <grub_show_menu+0x1b0>
    4754:	bl	0 <grub_get_time_ms>
    4758:	mov	x23, x0
    475c:	ldr	x0, [sp, #96]
    4760:	sub	x0, x23, x0
    4764:	cmp	x0, #0x3e7
    4768:	b.ls	470c <grub_show_menu+0x1cc>  // b.plast
    476c:	sub	w19, w19, #0x1
    4770:	cmp	w24, #0x1
    4774:	b.ne	4704 <grub_show_menu+0x1c4>  // b.any
    4778:	ldr	x0, [x26]
    477c:	ldr	x0, [x0, #8]
    4780:	bl	9e38 <grub_term_restore_pos>
    4784:	mov	w1, w19
    4788:	ldr	x0, [x28]
    478c:	bl	0 <grub_printf>
    4790:	bl	0 <grub_refresh>
    4794:	b	4704 <grub_show_menu+0x1c4>
    4798:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    479c:	ldr	x0, [x0]
    47a0:	bl	0 <grub_env_unset>
    47a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    47a8:	ldr	x0, [x0]
    47ac:	bl	0 <grub_env_unset>
    47b0:	tbz	w20, #31, 4dbc <grub_show_menu+0x87c>
    47b4:	mov	w20, #0x1                   	// #1
    47b8:	b	4948 <grub_show_menu+0x408>
    47bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    47c0:	ldr	x0, [x0]
    47c4:	bl	0 <grub_env_get>
    47c8:	cbz	x0, 47fc <grub_show_menu+0x2bc>
    47cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    47d0:	ldr	x0, [x0]
    47d4:	ldr	x3, [x0, #16]
    47d8:	cbz	x3, 4844 <grub_show_menu+0x304>
    47dc:	ldr	w2, [sp, #104]
    47e0:	mov	x1, x22
    47e4:	mov	w0, w24
    47e8:	blr	x3
    47ec:	mov	w20, #0x1                   	// #1
    47f0:	cbz	w0, 4814 <grub_show_menu+0x2d4>
    47f4:	bl	0 <grub_print_error>
    47f8:	bl	4310 <grub_wait_after_message>
    47fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4800:	ldr	x0, [x0]
    4804:	str	wzr, [x0]
    4808:	ldr	x0, [x23, #112]
    480c:	blr	x0
    4810:	mov	w20, #0x0                   	// #0
    4814:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4818:	ldr	x0, [x0]
    481c:	ldr	x19, [x0]
    4820:	cbnz	x19, 4660 <grub_show_menu+0x120>
    4824:	bl	0 <grub_get_time_ms>
    4828:	str	x0, [sp, #96]
    482c:	bl	4430 <grub_menu_get_timeout>
    4830:	cmp	w0, #0x0
    4834:	b.le	48c8 <grub_show_menu+0x388>
    4838:	bl	40f8 <grub_unixtime2datetime+0x200>
    483c:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    4840:	b	48e4 <grub_show_menu+0x3a4>
    4844:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4848:	ldr	x0, [x0]
    484c:	bl	0 <grub_dl_load>
    4850:	bl	0 <grub_print_error>
    4854:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4858:	ldr	x0, [x0]
    485c:	ldr	x3, [x0, #16]
    4860:	cbnz	x3, 47dc <grub_show_menu+0x29c>
    4864:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4868:	ldr	x2, [x0]
    486c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4870:	ldr	x1, [x0]
    4874:	mov	w0, #0x2                   	// #2
    4878:	bl	0 <grub_error>
    487c:	b	47f4 <grub_show_menu+0x2b4>
    4880:	bl	0 <grub_print_error>
    4884:	ldr	x0, [x23]
    4888:	str	wzr, [x0]
    488c:	ldr	x19, [x19]
    4890:	cbz	x19, 4824 <grub_show_menu+0x2e4>
    4894:	ldr	x1, [x28]
    4898:	ldr	x0, [x19, #16]
    489c:	bl	0 <grub_strcmp>
    48a0:	cmp	w20, #0x0
    48a4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    48a8:	b.eq	488c <grub_show_menu+0x34c>  // b.none
    48ac:	ldr	w3, [sp, #104]
    48b0:	mov	x2, x22
    48b4:	mov	w1, w24
    48b8:	mov	x0, x19
    48bc:	bl	8b68 <grub_menu_try_text>
    48c0:	cbz	w0, 488c <grub_show_menu+0x34c>
    48c4:	b	4880 <grub_show_menu+0x340>
    48c8:	bl	4148 <grub_unixtime2datetime+0x250>
    48cc:	b	483c <grub_show_menu+0x2fc>
    48d0:	cbz	w23, 4934 <grub_show_menu+0x3f4>
    48d4:	bl	0 <grub_getkey_noblock>
    48d8:	mov	w19, w0
    48dc:	cmp	w0, #0x0
    48e0:	b.gt	49a0 <grub_show_menu+0x460>
    48e4:	bl	4430 <grub_menu_get_timeout>
    48e8:	mov	w23, w0
    48ec:	ldr	x0, [x28]
    48f0:	ldr	w20, [x0]
    48f4:	cbnz	w20, 4bd8 <grub_show_menu+0x698>
    48f8:	cmp	w23, #0x0
    48fc:	b.le	48d0 <grub_show_menu+0x390>
    4900:	bl	0 <grub_get_time_ms>
    4904:	mov	x19, x0
    4908:	ldr	x0, [sp, #96]
    490c:	sub	x0, x19, x0
    4910:	cmp	x0, #0x3e7
    4914:	b.ls	48d4 <grub_show_menu+0x394>  // b.plast
    4918:	sub	w23, w23, #0x1
    491c:	mov	w0, w23
    4920:	bl	44c8 <grub_menu_set_timeout>
    4924:	mov	w0, w23
    4928:	bl	40f8 <grub_unixtime2datetime+0x200>
    492c:	str	x19, [sp, #96]
    4930:	b	48d0 <grub_show_menu+0x390>
    4934:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4938:	ldr	x0, [x0]
    493c:	bl	0 <grub_env_unset>
    4940:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4944:	mov	w20, #0x1                   	// #1
    4948:	tbnz	w21, #31, 4bd8 <grub_show_menu+0x698>
    494c:	mov	w1, w21
    4950:	mov	x0, x22
    4954:	bl	4408 <grub_menu_get_entry>
    4958:	mov	x19, x0
    495c:	cbz	x0, 4d34 <grub_show_menu+0x7f4>
    4960:	bl	b4cc <grub_cls>
    4964:	cbz	w20, 4d24 <grub_show_menu+0x7e4>
    4968:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    496c:	ldr	x0, [x0]
    4970:	ldr	x2, [x0, #64]
    4974:	mov	x1, #0x0                   	// #0
    4978:	mov	x0, x19
    497c:	blr	x2
    4980:	mov	w1, #0x1                   	// #1
    4984:	mov	x0, x19
    4988:	bl	4e58 <grub_show_menu+0x918>
    498c:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
    4990:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
    4994:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    4998:	mov	w23, #0x1                   	// #1
    499c:	b	4c8c <grub_show_menu+0x74c>
    49a0:	tbz	w23, #31, 4a04 <grub_show_menu+0x4c4>
    49a4:	mov	w0, #0x49                  	// #73
    49a8:	movk	w0, #0x80, lsl #16
    49ac:	cmp	w19, w0
    49b0:	b.eq	4b90 <grub_show_menu+0x650>  // b.none
    49b4:	b.gt	4aa8 <grub_show_menu+0x568>
    49b8:	cmp	w19, #0x63
    49bc:	b.eq	4c18 <grub_show_menu+0x6d8>  // b.none
    49c0:	b.le	4a24 <grub_show_menu+0x4e4>
    49c4:	cmp	w19, #0x76
    49c8:	b.eq	4b74 <grub_show_menu+0x634>  // b.none
    49cc:	b.le	4a84 <grub_show_menu+0x544>
    49d0:	mov	w0, #0x47                  	// #71
    49d4:	movk	w0, #0x80, lsl #16
    49d8:	cmp	w19, w0
    49dc:	b.eq	4b14 <grub_show_menu+0x5d4>  // b.none
    49e0:	add	w0, w0, #0x1
    49e4:	cmp	w19, w0
    49e8:	b.ne	4a38 <grub_show_menu+0x4f8>  // b.any
    49ec:	cmp	w24, #0x0
    49f0:	cset	w0, gt
    49f4:	sub	w24, w24, w0
    49f8:	mov	w0, w24
    49fc:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4a00:	b	483c <grub_show_menu+0x2fc>
    4a04:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4a08:	ldr	x0, [x0]
    4a0c:	bl	0 <grub_env_unset>
    4a10:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4a14:	ldr	x0, [x0]
    4a18:	bl	0 <grub_env_unset>
    4a1c:	bl	4148 <grub_unixtime2datetime+0x250>
    4a20:	b	49a4 <grub_show_menu+0x464>
    4a24:	cmp	w19, #0x1b
    4a28:	b.eq	4bcc <grub_show_menu+0x68c>  // b.none
    4a2c:	b.le	4a68 <grub_show_menu+0x528>
    4a30:	cmp	w19, #0x5e
    4a34:	b.eq	49ec <grub_show_menu+0x4ac>  // b.none
    4a38:	ldr	x0, [x22, #8]
    4a3c:	ldr	w2, [x22]
    4a40:	cmp	w2, #0x0
    4a44:	b.le	483c <grub_show_menu+0x2fc>
    4a48:	ldr	w1, [x0, #64]
    4a4c:	cmp	w19, w1
    4a50:	b.eq	4c2c <grub_show_menu+0x6ec>  // b.none
    4a54:	add	w20, w20, #0x1
    4a58:	ldr	x0, [x0, #72]
    4a5c:	cmp	w2, w20
    4a60:	b.ne	4a48 <grub_show_menu+0x508>  // b.any
    4a64:	b	483c <grub_show_menu+0x2fc>
    4a68:	cmp	w19, #0xa
    4a6c:	b.eq	4a78 <grub_show_menu+0x538>  // b.none
    4a70:	cmp	w19, #0xd
    4a74:	b.ne	4a38 <grub_show_menu+0x4f8>  // b.any
    4a78:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4a7c:	mov	w21, w24
    4a80:	b	4948 <grub_show_menu+0x408>
    4a84:	cmp	w19, #0x65
    4a88:	b.ne	4a38 <grub_show_menu+0x4f8>  // b.any
    4a8c:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4a90:	mov	w1, w24
    4a94:	mov	x0, x22
    4a98:	bl	4408 <grub_menu_get_entry>
    4a9c:	cbz	x0, 4638 <grub_show_menu+0xf8>
    4aa0:	bl	662c <grub_menu_entry_run>
    4aa4:	b	4638 <grub_show_menu+0xf8>
    4aa8:	cmp	w19, w27
    4aac:	b.eq	4bac <grub_show_menu+0x66c>  // b.none
    4ab0:	b.le	4ae0 <grub_show_menu+0x5a0>
    4ab4:	cmp	w19, w26
    4ab8:	b.eq	4b90 <grub_show_menu+0x650>  // b.none
    4abc:	b.le	4b54 <grub_show_menu+0x614>
    4ac0:	mov	w0, #0x6e                  	// #110
    4ac4:	movk	w0, #0x200, lsl #16
    4ac8:	cmp	w19, w0
    4acc:	b.eq	4b74 <grub_show_menu+0x634>  // b.none
    4ad0:	add	w0, w0, #0x2
    4ad4:	cmp	w19, w0
    4ad8:	b.eq	49ec <grub_show_menu+0x4ac>  // b.none
    4adc:	b	4a38 <grub_show_menu+0x4f8>
    4ae0:	mov	w0, #0x50                  	// #80
    4ae4:	movk	w0, #0x80, lsl #16
    4ae8:	cmp	w19, w0
    4aec:	b.eq	4b74 <grub_show_menu+0x634>  // b.none
    4af0:	b.le	4b24 <grub_show_menu+0x5e4>
    4af4:	mov	w0, #0x51                  	// #81
    4af8:	movk	w0, #0x80, lsl #16
    4afc:	cmp	w19, w0
    4b00:	b.eq	4bac <grub_show_menu+0x66c>  // b.none
    4b04:	mov	w0, #0x61                  	// #97
    4b08:	movk	w0, #0x200, lsl #16
    4b0c:	cmp	w19, w0
    4b10:	b.ne	4a38 <grub_show_menu+0x4f8>  // b.any
    4b14:	mov	w0, #0x0                   	// #0
    4b18:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4b1c:	mov	w24, w20
    4b20:	b	483c <grub_show_menu+0x2fc>
    4b24:	mov	w0, #0x4d                  	// #77
    4b28:	movk	w0, #0x80, lsl #16
    4b2c:	cmp	w19, w0
    4b30:	b.eq	4a78 <grub_show_menu+0x538>  // b.none
    4b34:	add	w0, w0, #0x2
    4b38:	cmp	w19, w0
    4b3c:	b.ne	4a38 <grub_show_menu+0x4f8>  // b.any
    4b40:	ldr	w24, [x22]
    4b44:	sub	w24, w24, #0x1
    4b48:	mov	w0, w24
    4b4c:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4b50:	b	483c <grub_show_menu+0x2fc>
    4b54:	mov	w0, #0x65                  	// #101
    4b58:	movk	w0, #0x200, lsl #16
    4b5c:	cmp	w19, w0
    4b60:	b.eq	4b40 <grub_show_menu+0x600>  // b.none
    4b64:	add	w0, w0, #0x1
    4b68:	cmp	w19, w0
    4b6c:	b.eq	4a78 <grub_show_menu+0x538>  // b.none
    4b70:	b	4a38 <grub_show_menu+0x4f8>
    4b74:	ldr	w0, [x22]
    4b78:	sub	w0, w0, #0x1
    4b7c:	cmp	w0, w24
    4b80:	cinc	w24, w24, gt
    4b84:	mov	w0, w24
    4b88:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4b8c:	b	483c <grub_show_menu+0x2fc>
    4b90:	sub	w0, w24, #0xa
    4b94:	cmp	w24, #0x9
    4b98:	csel	w20, w0, w20, gt
    4b9c:	mov	w0, w20
    4ba0:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4ba4:	mov	w24, w20
    4ba8:	b	483c <grub_show_menu+0x2fc>
    4bac:	add	w24, w24, #0xa
    4bb0:	ldr	w0, [x22]
    4bb4:	sub	w1, w0, #0x1
    4bb8:	cmp	w24, w0
    4bbc:	csel	w24, w1, w24, ge  // ge = tcont
    4bc0:	mov	w0, w24
    4bc4:	bl	40a8 <grub_unixtime2datetime+0x1b0>
    4bc8:	b	483c <grub_show_menu+0x2fc>
    4bcc:	ldr	w0, [sp, #104]
    4bd0:	cbz	w0, 483c <grub_show_menu+0x2fc>
    4bd4:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4bd8:	bl	0 <grub_print_error>
    4bdc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4be0:	ldr	x0, [x0]
    4be4:	ldr	w25, [x0]
    4be8:	cbnz	w25, 4bf8 <grub_show_menu+0x6b8>
    4bec:	mov	x0, #0x0                   	// #0
    4bf0:	bl	28f0 <grub_auth_check_authentication>
    4bf4:	cbnz	w0, 4d90 <grub_show_menu+0x850>
    4bf8:	mov	w0, #0x0                   	// #0
    4bfc:	ldp	x19, x20, [sp, #16]
    4c00:	ldp	x21, x22, [sp, #32]
    4c04:	ldp	x23, x24, [sp, #48]
    4c08:	ldp	x25, x26, [sp, #64]
    4c0c:	ldp	x27, x28, [sp, #80]
    4c10:	ldp	x29, x30, [sp], #128
    4c14:	ret
    4c18:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4c1c:	mov	w1, #0x0                   	// #0
    4c20:	mov	w0, #0x1                   	// #1
    4c24:	bl	790 <grub_cmdline_run>
    4c28:	b	4638 <grub_show_menu+0xf8>
    4c2c:	tbnz	w20, #31, 483c <grub_show_menu+0x2fc>
    4c30:	bl	42b0 <grub_unixtime2datetime+0x3b8>
    4c34:	b	4dbc <grub_show_menu+0x87c>
    4c38:	mov	w20, #0x1                   	// #1
    4c3c:	b	4948 <grub_show_menu+0x408>
    4c40:	ldr	x1, [sp, #120]
    4c44:	ldr	x0, [x21]
    4c48:	bl	0 <grub_env_set>
    4c4c:	bl	0 <grub_error_pop>
    4c50:	tbnz	w19, #31, 4d08 <grub_show_menu+0x7c8>
    4c54:	bl	0 <grub_print_error>
    4c58:	ldr	x0, [x20]
    4c5c:	str	wzr, [x0]
    4c60:	mov	w1, w19
    4c64:	mov	x0, x22
    4c68:	bl	4408 <grub_menu_get_entry>
    4c6c:	mov	x19, x0
    4c70:	ldr	x1, [x24]
    4c74:	ldr	x2, [x1, #72]
    4c78:	mov	x1, #0x0                   	// #0
    4c7c:	blr	x2
    4c80:	mov	w1, w23
    4c84:	mov	x0, x19
    4c88:	bl	4e58 <grub_show_menu+0x918>
    4c8c:	ldr	x0, [x21]
    4c90:	bl	0 <grub_env_get>
    4c94:	mov	x19, x0
    4c98:	cbz	x0, 4d08 <grub_show_menu+0x7c8>
    4c9c:	bl	0 <grub_error_push>
    4ca0:	mov	w2, #0x0                   	// #0
    4ca4:	add	x1, sp, #0x78
    4ca8:	mov	x0, x19
    4cac:	bl	0 <grub_strtoul>
    4cb0:	mov	x19, x0
    4cb4:	ldr	x0, [x20]
    4cb8:	ldr	w0, [x0]
    4cbc:	cbnz	w0, 4cec <grub_show_menu+0x7ac>
    4cc0:	ldr	x0, [sp, #120]
    4cc4:	ldrb	w0, [x0]
    4cc8:	cbz	w0, 4c40 <grub_show_menu+0x700>
    4ccc:	bl	0 <grub_isspace>
    4cd0:	cbz	w0, 4c40 <grub_show_menu+0x700>
    4cd4:	ldr	x0, [sp, #120]
    4cd8:	add	x1, x0, #0x1
    4cdc:	str	x1, [sp, #120]
    4ce0:	ldrb	w0, [x0, #1]
    4ce4:	cbnz	w0, 4ccc <grub_show_menu+0x78c>
    4ce8:	b	4c40 <grub_show_menu+0x700>
    4cec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4cf0:	ldr	x0, [x0]
    4cf4:	bl	0 <grub_env_unset>
    4cf8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4cfc:	ldr	x0, [x0]
    4d00:	str	wzr, [x0]
    4d04:	bl	0 <grub_error_pop>
    4d08:	cbnz	w25, 4bd8 <grub_show_menu+0x698>
    4d0c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4d10:	ldr	x0, [x0]
    4d14:	ldr	x1, [x0, #80]
    4d18:	mov	x0, #0x0                   	// #0
    4d1c:	blr	x1
    4d20:	b	4d34 <grub_show_menu+0x7f4>
    4d24:	mov	w1, #0x0                   	// #0
    4d28:	mov	x0, x19
    4d2c:	bl	4e58 <grub_show_menu+0x918>
    4d30:	cbnz	w25, 4bd8 <grub_show_menu+0x698>
    4d34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4d38:	ldr	x0, [x0]
    4d3c:	bl	0 <grub_env_get>
    4d40:	mov	x19, x0
    4d44:	cbz	x0, 466c <grub_show_menu+0x12c>
    4d48:	bl	0 <grub_error_push>
    4d4c:	mov	w2, #0x0                   	// #0
    4d50:	mov	x1, #0x0                   	// #0
    4d54:	mov	x0, x19
    4d58:	bl	0 <grub_strtoul>
    4d5c:	mov	x21, x0
    4d60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4d64:	ldr	x0, [x0]
    4d68:	ldr	w0, [x0]
    4d6c:	cmp	w0, #0xa
    4d70:	b.eq	4574 <grub_show_menu+0x34>  // b.none
    4d74:	cbz	w0, 45c4 <grub_show_menu+0x84>
    4d78:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4d7c:	ldr	x0, [x0]
    4d80:	str	wzr, [x0]
    4d84:	bl	0 <grub_error_pop>
    4d88:	mov	w21, #0x0                   	// #0
    4d8c:	b	45d8 <grub_show_menu+0x98>
    4d90:	bl	0 <grub_print_error>
    4d94:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4d98:	ldr	x0, [x0]
    4d9c:	str	wzr, [x0]
    4da0:	b	4568 <grub_show_menu+0x28>
    4da4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4da8:	ldr	x0, [x0]
    4dac:	bl	0 <grub_env_unset>
    4db0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4db4:	ldr	x0, [x0]
    4db8:	bl	0 <grub_env_unset>
    4dbc:	mov	w21, w20
    4dc0:	mov	w20, #0x0                   	// #0
    4dc4:	b	494c <grub_show_menu+0x40c>
    4dc8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4dcc:	ldr	x0, [x0]
    4dd0:	bl	0 <grub_env_unset>
    4dd4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4dd8:	ldr	x0, [x0]
    4ddc:	bl	0 <grub_env_unset>
    4de0:	tbnz	w20, #31, 462c <grub_show_menu+0xec>
    4de4:	b	4dbc <grub_show_menu+0x87c>
	...
    4e58:	stp	x29, x30, [sp, #-96]!
    4e5c:	mov	x29, sp
    4e60:	stp	x19, x20, [sp, #16]
    4e64:	stp	x21, x22, [sp, #32]
    4e68:	mov	x20, x0
    4e6c:	mov	w22, w1
    4e70:	ldr	w0, [x0, #16]
    4e74:	cbz	w0, 4e84 <grub_show_menu+0x944>
    4e78:	ldr	x0, [x20, #24]
    4e7c:	bl	28f0 <grub_auth_check_authentication>
    4e80:	cbnz	w0, 4f68 <grub_show_menu+0xa28>
    4e84:	stp	x23, x24, [sp, #48]
    4e88:	stp	x25, x26, [sp, #64]
    4e8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4e90:	ldr	x0, [x0]
    4e94:	ldr	w24, [x0]
    4e98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4e9c:	ldr	x0, [x0]
    4ea0:	bl	0 <grub_env_get>
    4ea4:	mov	x26, x0
    4ea8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4eac:	ldr	x0, [x0]
    4eb0:	bl	0 <grub_env_get>
    4eb4:	mov	x19, x0
    4eb8:	ldr	w0, [x20, #68]
    4ebc:	mov	x23, #0x0                   	// #0
    4ec0:	cbnz	w0, 4f7c <grub_show_menu+0xa3c>
    4ec4:	str	x27, [sp, #80]
    4ec8:	ldr	x1, [x20, #8]
    4ecc:	ldrb	w0, [x1]
    4ed0:	cbz	w0, 4fb4 <grub_show_menu+0xa74>
    4ed4:	mov	x27, #0x0                   	// #0
    4ed8:	cmp	w0, #0x3e
    4edc:	cset	x2, eq  // eq = none
    4ee0:	add	x2, x2, #0x1
    4ee4:	add	x27, x27, x2
    4ee8:	ldrb	w0, [x1, #1]!
    4eec:	cbnz	w0, 4ed8 <grub_show_menu+0x998>
    4ef0:	cbz	x26, 4fc4 <grub_show_menu+0xa84>
    4ef4:	mov	x0, x26
    4ef8:	bl	0 <grub_strdup>
    4efc:	mov	x25, x0
    4f00:	cbz	x0, 4fbc <grub_show_menu+0xa7c>
    4f04:	cbz	x19, 5204 <grub_show_menu+0xcc4>
    4f08:	mov	x0, x19
    4f0c:	bl	0 <grub_strdup>
    4f10:	mov	x21, x0
    4f14:	cbz	x0, 5008 <grub_show_menu+0xac8>
    4f18:	add	x27, x27, #0x1
    4f1c:	mov	x0, x26
    4f20:	bl	0 <grub_strlen>
    4f24:	add	x0, x0, x27
    4f28:	add	x0, x0, #0x1
    4f2c:	bl	0 <grub_malloc>
    4f30:	mov	x27, x0
    4f34:	mov	x2, x0
    4f38:	cbz	x0, 4ffc <grub_show_menu+0xabc>
    4f3c:	mov	x1, x2
    4f40:	ldrb	w0, [x26], #1
    4f44:	strb	w0, [x2], #1
    4f48:	cbnz	w0, 4f3c <grub_show_menu+0x9fc>
    4f4c:	mov	w0, #0x3e                  	// #62
    4f50:	strb	w0, [x1]
    4f54:	ldr	x1, [x20, #8]
    4f58:	ldrb	w0, [x1]
    4f5c:	cbz	w0, 5040 <grub_show_menu+0xb00>
    4f60:	mov	w4, #0x3e                  	// #62
    4f64:	b	502c <grub_show_menu+0xaec>
    4f68:	bl	0 <grub_print_error>
    4f6c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4f70:	ldr	x0, [x0]
    4f74:	str	wzr, [x0]
    4f78:	b	5134 <grub_show_menu+0xbf4>
    4f7c:	bl	b850 <grub_env_context_open>
    4f80:	mov	x0, #0x10                  	// #16
    4f84:	bl	0 <grub_zalloc>
    4f88:	mov	x23, x0
    4f8c:	cbz	x0, 5210 <grub_show_menu+0xcd0>
    4f90:	str	x27, [sp, #80]
    4f94:	bl	b600 <grub_env_set_menu>
    4f98:	cbz	w22, 4ec8 <grub_show_menu+0x988>
    4f9c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4fa0:	ldr	x1, [x0]
    4fa4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    4fa8:	ldr	x0, [x0]
    4fac:	bl	0 <grub_env_set>
    4fb0:	b	4ec8 <grub_show_menu+0x988>
    4fb4:	mov	x27, #0x0                   	// #0
    4fb8:	b	4ef0 <grub_show_menu+0x9b0>
    4fbc:	bl	0 <grub_print_error>
    4fc0:	b	4f04 <grub_show_menu+0x9c4>
    4fc4:	cbz	x19, 4fe0 <grub_show_menu+0xaa0>
    4fc8:	mov	x0, x19
    4fcc:	bl	0 <grub_strdup>
    4fd0:	mov	x21, x0
    4fd4:	cbz	x0, 5004 <grub_show_menu+0xac4>
    4fd8:	mov	x25, x26
    4fdc:	b	4fe8 <grub_show_menu+0xaa8>
    4fe0:	mov	x25, x19
    4fe4:	mov	x21, x19
    4fe8:	add	x0, x27, #0x2
    4fec:	bl	0 <grub_malloc>
    4ff0:	mov	x2, x0
    4ff4:	mov	x27, x0
    4ff8:	cbnz	x0, 4f54 <grub_show_menu+0xa14>
    4ffc:	bl	0 <grub_print_error>
    5000:	b	5068 <grub_show_menu+0xb28>
    5004:	mov	x25, x21
    5008:	bl	0 <grub_print_error>
    500c:	cbz	x26, 51fc <grub_show_menu+0xcbc>
    5010:	mov	x21, #0x0                   	// #0
    5014:	b	4f18 <grub_show_menu+0x9d8>
    5018:	mov	x2, x3
    501c:	ldrb	w0, [x1]
    5020:	strb	w0, [x2], #1
    5024:	ldrb	w0, [x1, #1]!
    5028:	cbz	w0, 5040 <grub_show_menu+0xb00>
    502c:	mov	x3, x2
    5030:	cmp	w0, #0x3e
    5034:	b.ne	5018 <grub_show_menu+0xad8>  // b.any
    5038:	strb	w4, [x3], #1
    503c:	b	5018 <grub_show_menu+0xad8>
    5040:	strb	wzr, [x2]
    5044:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5048:	ldr	x26, [x0]
    504c:	mov	x1, x27
    5050:	mov	x0, x26
    5054:	bl	0 <grub_env_set>
    5058:	mov	x0, x26
    505c:	bl	0 <grub_env_export>
    5060:	mov	x0, x27
    5064:	bl	0 <grub_free>
    5068:	cbnz	x19, 5078 <grub_show_menu+0xb38>
    506c:	b	509c <grub_show_menu+0xb5c>
    5070:	add	x19, x19, #0x1
    5074:	add	x19, x19, #0x1
    5078:	ldrb	w2, [x19]
    507c:	cbz	w2, 509c <grub_show_menu+0xb5c>
    5080:	cmp	w2, #0x3e
    5084:	b.ne	5074 <grub_show_menu+0xb34>  // b.any
    5088:	ldrb	w0, [x19, #1]
    508c:	cmp	w0, #0x3e
    5090:	b.eq	5070 <grub_show_menu+0xb30>  // b.none
    5094:	ldrb	w0, [x19, #1]
    5098:	cbnz	w0, 5144 <grub_show_menu+0xc04>
    509c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    50a0:	ldr	x0, [x0]
    50a4:	bl	0 <grub_env_unset>
    50a8:	ldr	x2, [x20, #56]
    50ac:	ldr	w1, [x20, #48]
    50b0:	ldr	x0, [x20, #40]
    50b4:	bl	108f0 <grub_script_execute_new_scope>
    50b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    50bc:	ldr	x0, [x0]
    50c0:	ldr	w0, [x0]
    50c4:	cmp	w0, w24
    50c8:	b.ne	5158 <grub_show_menu+0xc18>  // b.any
    50cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    50d0:	ldr	x0, [x0]
    50d4:	ldr	w0, [x0]
    50d8:	cbz	w0, 5160 <grub_show_menu+0xc20>
    50dc:	ldr	w0, [x20, #68]
    50e0:	cbz	w0, 50f4 <grub_show_menu+0xbb4>
    50e4:	cbz	x23, 50f0 <grub_show_menu+0xbb0>
    50e8:	ldr	w0, [x23]
    50ec:	cbnz	w0, 51c0 <grub_show_menu+0xc80>
    50f0:	bl	b620 <grub_env_context_close>
    50f4:	cbz	x25, 51dc <grub_show_menu+0xc9c>
    50f8:	mov	x1, x25
    50fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5100:	ldr	x0, [x0]
    5104:	bl	0 <grub_env_set>
    5108:	cbz	x21, 51ec <grub_show_menu+0xcac>
    510c:	mov	x1, x21
    5110:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5114:	ldr	x0, [x0]
    5118:	bl	0 <grub_env_set>
    511c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5120:	ldr	x0, [x0]
    5124:	bl	0 <grub_env_unset>
    5128:	ldp	x23, x24, [sp, #48]
    512c:	ldp	x25, x26, [sp, #64]
    5130:	ldr	x27, [sp, #80]
    5134:	ldp	x19, x20, [sp, #16]
    5138:	ldp	x21, x22, [sp, #32]
    513c:	ldp	x29, x30, [sp], #96
    5140:	ret
    5144:	add	x1, x19, #0x1
    5148:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    514c:	ldr	x0, [x0]
    5150:	bl	0 <grub_env_set>
    5154:	b	50a8 <grub_show_menu+0xb68>
    5158:	bl	4310 <grub_wait_after_message>
    515c:	b	50cc <grub_show_menu+0xb8c>
    5160:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5164:	ldr	x0, [x0]
    5168:	ldr	w19, [x0]
    516c:	bl	0 <grub_loader_is_loaded>
    5170:	cbnz	w0, 5190 <grub_show_menu+0xc50>
    5174:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5178:	ldr	x0, [x0]
    517c:	ldr	w0, [x0]
    5180:	cmp	w0, w19
    5184:	b.eq	50dc <grub_show_menu+0xb9c>  // b.none
    5188:	bl	4310 <grub_wait_after_message>
    518c:	b	50dc <grub_show_menu+0xb9c>
    5190:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5194:	ldr	x0, [x0]
    5198:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    519c:	ldr	x1, [x1]
    51a0:	ldr	x0, [x0]
    51a4:	bl	0 <grub_named_list_find>
    51a8:	cbz	x0, 5174 <grub_show_menu+0xc34>
    51ac:	ldr	x3, [x0, #32]
    51b0:	mov	x2, #0x0                   	// #0
    51b4:	mov	w1, #0x0                   	// #0
    51b8:	blr	x3
    51bc:	b	5174 <grub_show_menu+0xc34>
    51c0:	mov	w2, w22
    51c4:	mov	w1, #0x1                   	// #1
    51c8:	mov	x0, x23
    51cc:	bl	4540 <grub_show_menu>
    51d0:	mov	x0, x23
    51d4:	bl	26c <grub_normal_free_menu>
    51d8:	b	50f0 <grub_show_menu+0xbb0>
    51dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    51e0:	ldr	x0, [x0]
    51e4:	bl	0 <grub_env_unset>
    51e8:	b	5108 <grub_show_menu+0xbc8>
    51ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    51f0:	ldr	x0, [x0]
    51f4:	bl	0 <grub_env_unset>
    51f8:	b	511c <grub_show_menu+0xbdc>
    51fc:	mov	x21, x26
    5200:	b	4fe8 <grub_show_menu+0xaa8>
    5204:	add	x27, x27, #0x1
    5208:	mov	x21, x19
    520c:	b	4f1c <grub_show_menu+0x9dc>
    5210:	ldp	x23, x24, [sp, #48]
    5214:	ldp	x25, x26, [sp, #64]
    5218:	b	5134 <grub_show_menu+0xbf4>
    521c:	nop
	...
    5260:	stp	x29, x30, [sp, #-64]!
    5264:	mov	x29, sp
    5268:	stp	x21, x22, [sp, #32]
    526c:	mov	x21, x0
    5270:	ldr	x0, [x0]
    5274:	cbz	x0, 5304 <grub_show_menu+0xdc4>
    5278:	ldr	w0, [x21, #8]
    527c:	cmp	w0, #0x0
    5280:	b.le	5304 <grub_show_menu+0xdc4>
    5284:	stp	x19, x20, [sp, #16]
    5288:	str	x23, [sp, #48]
    528c:	mov	x22, #0x0                   	// #0
    5290:	mov	w23, #0x0                   	// #0
    5294:	b	52bc <grub_show_menu+0xd7c>
    5298:	ldr	x0, [x20]
    529c:	bl	0 <grub_free>
    52a0:	ldr	x0, [x20, #16]
    52a4:	bl	0 <grub_free>
    52a8:	add	w23, w23, #0x1
    52ac:	add	x22, x22, #0x18
    52b0:	ldr	w0, [x21, #8]
    52b4:	cmp	w0, w23
    52b8:	b.le	52fc <grub_show_menu+0xdbc>
    52bc:	ldr	x20, [x21]
    52c0:	adds	x20, x20, x22
    52c4:	b.eq	52a8 <grub_show_menu+0xd68>  // b.none
    52c8:	ldr	x0, [x20, #16]
    52cc:	cbz	x0, 5298 <grub_show_menu+0xd58>
    52d0:	ldr	w0, [x21, #48]
    52d4:	cbz	w0, 5298 <grub_show_menu+0xd58>
    52d8:	mov	w19, #0x0                   	// #0
    52dc:	ldr	x0, [x20, #16]
    52e0:	ldr	x0, [x0, w19, uxtw #3]
    52e4:	bl	0 <grub_free>
    52e8:	add	w19, w19, #0x1
    52ec:	ldr	w0, [x21, #48]
    52f0:	cmp	w0, w19
    52f4:	b.hi	52dc <grub_show_menu+0xd9c>  // b.pmore
    52f8:	b	5298 <grub_show_menu+0xd58>
    52fc:	ldp	x19, x20, [sp, #16]
    5300:	ldr	x23, [sp, #48]
    5304:	ldr	x0, [x21, #24]
    5308:	bl	0 <grub_free>
    530c:	ldr	x0, [x21]
    5310:	bl	0 <grub_free>
    5314:	ldr	x0, [x21, #40]
    5318:	bl	0 <grub_free>
    531c:	mov	x0, x21
    5320:	bl	0 <grub_free>
    5324:	ldp	x21, x22, [sp, #32]
    5328:	ldp	x29, x30, [sp], #64
    532c:	ret
    5330:	stp	x29, x30, [sp, #-32]!
    5334:	mov	x29, sp
    5338:	stp	x19, x20, [sp, #16]
    533c:	mov	x20, x0
    5340:	mov	x19, x1
    5344:	str	wzr, [x1, #8]
    5348:	mov	w0, #0x50                  	// #80
    534c:	str	w0, [x1, #12]
    5350:	mov	x0, #0x144                 	// #324
    5354:	bl	0 <grub_malloc>
    5358:	str	x0, [x19]
    535c:	ldr	w0, [x20, #48]
    5360:	lsl	x0, x0, #3
    5364:	bl	0 <grub_zalloc>
    5368:	mov	x1, x0
    536c:	str	x0, [x19, #16]
    5370:	ldr	x0, [x19]
    5374:	cmp	x1, #0x0
    5378:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    537c:	b.eq	5390 <grub_show_menu+0xe50>  // b.none
    5380:	mov	w0, #0x1                   	// #1
    5384:	ldp	x19, x20, [sp, #16]
    5388:	ldp	x29, x30, [sp], #32
    538c:	ret
    5390:	bl	0 <grub_free>
    5394:	ldr	x0, [x19, #16]
    5398:	bl	0 <grub_free>
    539c:	mov	w0, #0x0                   	// #0
    53a0:	b	5384 <grub_show_menu+0xe44>
    53a4:	stp	x29, x30, [sp, #-32]!
    53a8:	mov	x29, sp
    53ac:	str	x19, [sp, #16]
    53b0:	mov	x2, x0
    53b4:	mov	x19, x1
    53b8:	ldr	x0, [x0]
    53bc:	ldrsw	x1, [x2, #8]
    53c0:	ldr	x2, [x19]
    53c4:	add	x1, x0, x1, lsl #2
    53c8:	bl	81e4 <grub_getstringwidth>
    53cc:	cbz	x0, 53ec <grub_show_menu+0xeac>
    53d0:	ldr	w2, [x19, #24]
    53d4:	sub	x1, x2, #0x1
    53d8:	add	x0, x1, x0
    53dc:	udiv	x0, x0, x2
    53e0:	ldr	x19, [sp, #16]
    53e4:	ldp	x29, x30, [sp], #32
    53e8:	ret
    53ec:	mov	w0, #0x1                   	// #1
    53f0:	b	53e0 <grub_show_menu+0xea0>
    53f4:	sub	sp, sp, #0x90
    53f8:	stp	x29, x30, [sp, #16]
    53fc:	add	x29, sp, #0x10
    5400:	stp	x19, x20, [sp, #32]
    5404:	stp	x21, x22, [sp, #48]
    5408:	stp	x23, x24, [sp, #64]
    540c:	mov	x20, x0
    5410:	mov	x19, x1
    5414:	str	w2, [sp, #128]
    5418:	str	w4, [sp, #132]
    541c:	str	w5, [sp, #136]
    5420:	str	w6, [sp, #120]
    5424:	ldr	w23, [x1, #8]
    5428:	ldr	x21, [x0]
    542c:	ldr	w0, [x0, #20]
    5430:	cmp	w0, #0x0
    5434:	b.le	5460 <grub_show_menu+0xf20>
    5438:	mov	w22, #0x0                   	// #0
    543c:	mov	x1, x19
    5440:	mov	x0, x21
    5444:	bl	53a4 <grub_show_menu+0xe64>
    5448:	add	w23, w23, w0
    544c:	add	w22, w22, #0x1
    5450:	add	x21, x21, #0x18
    5454:	ldr	w0, [x20, #20]
    5458:	cmp	w0, w22
    545c:	b.gt	543c <grub_show_menu+0xefc>
    5460:	sbfiz	x1, x0, #1, #32
    5464:	add	x0, x1, w0, sxtw
    5468:	lsl	x0, x0, #3
    546c:	ldr	x1, [x20]
    5470:	add	x21, x1, x0
    5474:	ldr	x0, [x1, x0]
    5478:	ldrsw	x1, [x20, #12]
    547c:	ldr	x2, [x19]
    5480:	add	x1, x0, x1, lsl #2
    5484:	bl	81e4 <grub_getstringwidth>
    5488:	ldr	w2, [x19, #24]
    548c:	udiv	x1, x0, x2
    5490:	add	w23, w23, w1
    5494:	msub	x1, x1, x2, x0
    5498:	cmp	x1, #0x0
    549c:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    54a0:	b.ne	54c4 <grub_show_menu+0xf84>  // b.any
    54a4:	tbnz	w23, #31, 54dc <grub_show_menu+0xf9c>
    54a8:	ldr	w0, [x19, #12]
    54ac:	cmp	w0, w23
    54b0:	b.le	54e4 <grub_show_menu+0xfa4>
    54b4:	ldr	x0, [x19]
    54b8:	ldr	x2, [x0, #96]
    54bc:	cbnz	x2, 551c <grub_show_menu+0xfdc>
    54c0:	b	5524 <grub_show_menu+0xfe4>
    54c4:	ldr	w1, [x20, #12]
    54c8:	ldr	w0, [x21, #8]
    54cc:	cmp	w1, w0
    54d0:	cset	w0, eq  // eq = none
    54d4:	sub	w23, w23, w0
    54d8:	b	54a4 <grub_show_menu+0xf64>
    54dc:	neg	w23, w23
    54e0:	b	54ec <grub_show_menu+0xfac>
    54e4:	sub	w0, w0, #0x1
    54e8:	sub	w23, w0, w23
    54ec:	ldr	w0, [x19, #8]
    54f0:	add	w23, w0, w23
    54f4:	str	w23, [x19, #8]
    54f8:	ldr	x0, [x19]
    54fc:	ldr	x2, [x0, #96]
    5500:	cbz	x2, 5680 <grub_show_menu+0x1140>
    5504:	mov	w1, #0x2                   	// #2
    5508:	str	w1, [sp, #120]
    550c:	mov	w1, #0x1                   	// #1
    5510:	str	w1, [sp, #136]
    5514:	str	w1, [sp, #132]
    5518:	str	wzr, [sp, #128]
    551c:	mov	w1, #0x0                   	// #0
    5520:	blr	x2
    5524:	ldr	w0, [sp, #120]
    5528:	cbnz	w0, 56a4 <grub_show_menu+0x1164>
    552c:	ldr	w0, [x20, #20]
    5530:	ldr	x1, [x20]
    5534:	sbfiz	x2, x0, #1, #32
    5538:	add	x2, x2, w0, sxtw
    553c:	add	x2, x1, x2, lsl #3
    5540:	ldr	x1, [x20, #40]
    5544:	sub	x1, x19, x1
    5548:	asr	x1, x1, #3
    554c:	mov	x3, #0x6db7                	// #28087
    5550:	movk	x3, #0xb6db, lsl #16
    5554:	movk	x3, #0xdb6d, lsl #32
    5558:	movk	x3, #0x6db6, lsl #48
    555c:	mul	x1, x1, x3
    5560:	ldr	x2, [x2, #16]
    5564:	ldr	x2, [x2, x1, lsl #3]
    5568:	cbz	x2, 5644 <grub_show_menu+0x1104>
    556c:	ldrsw	x21, [x20, #12]
    5570:	add	x21, x2, x21, lsl #2
    5574:	cmp	x2, x21
    5578:	b.hi	5590 <grub_show_menu+0x1050>  // b.pmore
    557c:	ldrb	w1, [x21]
    5580:	tbnz	w1, #0, 594c <grub_show_menu+0x140c>
    5584:	sub	x21, x21, #0x4
    5588:	cmp	x2, x21
    558c:	b.ls	557c <grub_show_menu+0x103c>  // b.plast
    5590:	ldr	w24, [x19, #8]
    5594:	cmp	w0, #0x0
    5598:	b.le	595c <grub_show_menu+0x141c>
    559c:	mov	x23, #0x0                   	// #0
    55a0:	mov	w22, #0x0                   	// #0
    55a4:	ldr	x0, [x20]
    55a8:	mov	x1, x19
    55ac:	add	x0, x0, x23
    55b0:	bl	53a4 <grub_show_menu+0xe64>
    55b4:	add	w24, w24, w0
    55b8:	add	w22, w22, #0x1
    55bc:	ldr	w0, [x20, #20]
    55c0:	add	x23, x23, #0x18
    55c4:	cmp	w0, w22
    55c8:	b.gt	55a4 <grub_show_menu+0x1064>
    55cc:	ldr	x1, [x20]
    55d0:	sbfiz	x2, x0, #1, #32
    55d4:	add	x0, x2, w0, sxtw
    55d8:	add	x0, x1, x0, lsl #3
    55dc:	ldr	x1, [x20, #40]
    55e0:	sub	x1, x19, x1
    55e4:	asr	x1, x1, #3
    55e8:	mov	x2, #0x6db7                	// #28087
    55ec:	movk	x2, #0xb6db, lsl #16
    55f0:	movk	x2, #0xdb6d, lsl #32
    55f4:	movk	x2, #0x6db6, lsl #48
    55f8:	mul	x1, x1, x2
    55fc:	ldr	x0, [x0, #16]
    5600:	ldr	x0, [x0, x1, lsl #3]
    5604:	cmp	x0, x21
    5608:	b.hi	595c <grub_show_menu+0x141c>  // b.pmore
    560c:	ldr	x0, [x19]
    5610:	ldrh	w1, [x21, #2]
    5614:	add	w24, w24, w1
    5618:	ldr	w1, [x19, #16]
    561c:	add	w24, w24, w1
    5620:	ldrh	w2, [x21]
    5624:	ubfx	x1, x2, #1, #15
    5628:	ldr	w2, [x19, #20]
    562c:	add	w2, w2, w1
    5630:	mov	w1, #0x0                   	// #0
    5634:	bfxil	w1, w2, #0, #16
    5638:	bfi	w1, w24, #16, #16
    563c:	ldr	x2, [x0, #72]
    5640:	blr	x2
    5644:	ldr	x0, [x19]
    5648:	ldr	x2, [x0, #96]
    564c:	cbz	x2, 5658 <grub_show_menu+0x1118>
    5650:	mov	w1, #0x1                   	// #1
    5654:	blr	x2
    5658:	ldr	x0, [x19]
    565c:	ldr	x1, [x0, #104]
    5660:	cbz	x1, 5668 <grub_show_menu+0x1128>
    5664:	blr	x1
    5668:	ldp	x19, x20, [sp, #32]
    566c:	ldp	x21, x22, [sp, #48]
    5670:	ldp	x23, x24, [sp, #64]
    5674:	ldp	x29, x30, [sp, #16]
    5678:	add	sp, sp, #0x90
    567c:	ret
    5680:	stp	x25, x26, [sp, #80]
    5684:	stp	x27, x28, [sp, #96]
    5688:	mov	w0, #0x2                   	// #2
    568c:	str	w0, [sp, #120]
    5690:	mov	w0, #0x1                   	// #1
    5694:	str	w0, [sp, #136]
    5698:	str	w0, [sp, #132]
    569c:	str	wzr, [sp, #128]
    56a0:	b	56ac <grub_show_menu+0x116c>
    56a4:	stp	x25, x26, [sp, #80]
    56a8:	stp	x27, x28, [sp, #96]
    56ac:	ldr	w21, [x19, #8]
    56b0:	ldr	x23, [x20]
    56b4:	mov	w24, #0x0                   	// #0
    56b8:	mov	x1, x19
    56bc:	mov	x0, x23
    56c0:	bl	53a4 <grub_show_menu+0xe64>
    56c4:	add	w0, w21, w0
    56c8:	cmp	w0, #0x0
    56cc:	b.gt	56e0 <grub_show_menu+0x11a0>
    56d0:	add	w24, w24, #0x1
    56d4:	add	x23, x23, #0x18
    56d8:	mov	w21, w0
    56dc:	b	56b8 <grub_show_menu+0x1178>
    56e0:	cmp	w24, #0x0
    56e4:	cset	w0, gt
    56e8:	orr	w0, w0, w21, lsr #31
    56ec:	str	w0, [sp, #140]
    56f0:	b	59a4 <grub_show_menu+0x1464>
    56f4:	ldr	w0, [x23, #8]
    56f8:	add	w0, w0, #0x1
    56fc:	sbfiz	x0, x0, #2, #32
    5700:	bl	0 <grub_zalloc>
    5704:	str	x0, [x26, x22, lsl #3]
    5708:	b	59ec <grub_show_menu+0x14ac>
    570c:	add	w21, w21, #0x1
    5710:	ldr	w0, [x19, #12]
    5714:	cmp	w0, w21
    5718:	b.le	5984 <grub_show_menu+0x1444>
    571c:	ldr	x0, [x19]
    5720:	ldr	w1, [x19, #16]
    5724:	add	w1, w1, w21
    5728:	ldr	w2, [x19, #20]
    572c:	bfxil	w28, w2, #0, #16
    5730:	bfi	w28, w1, #16, #16
    5734:	ldr	x2, [x0, #72]
    5738:	mov	w1, w28
    573c:	blr	x2
    5740:	ldr	w0, [x19, #24]
    5744:	tbnz	w0, #31, 570c <grub_show_menu+0x11cc>
    5748:	mov	w22, #0x0                   	// #0
    574c:	ldr	x1, [x19]
    5750:	mov	w0, w23
    5754:	bl	a100 <grub_putcode>
    5758:	add	w22, w22, #0x1
    575c:	ldr	w0, [x19, #24]
    5760:	cmp	w22, w0
    5764:	b.le	574c <grub_show_menu+0x120c>
    5768:	b	570c <grub_show_menu+0x11cc>
    576c:	cmp	w0, w21
    5770:	b.gt	599c <grub_show_menu+0x145c>
    5774:	mov	w21, #0x0                   	// #0
    5778:	b	5780 <grub_show_menu+0x1240>
    577c:	mov	w21, #0x1                   	// #1
    5780:	ldr	w0, [x19, #12]
    5784:	cmp	w0, #0x1
    5788:	b.eq	57b0 <grub_show_menu+0x1270>  // b.none
    578c:	ldr	w0, [sp, #132]
    5790:	cbnz	w0, 587c <grub_show_menu+0x133c>
    5794:	ldr	w0, [sp, #136]
    5798:	cbnz	w0, 58d8 <grub_show_menu+0x1398>
    579c:	ldp	x25, x26, [sp, #80]
    57a0:	ldp	x27, x28, [sp, #96]
    57a4:	b	552c <grub_show_menu+0xfec>
    57a8:	mov	w21, #0x0                   	// #0
    57ac:	b	5780 <grub_show_menu+0x1240>
    57b0:	ldr	w0, [sp, #132]
    57b4:	ldr	w1, [sp, #136]
    57b8:	orr	w0, w0, w1
    57bc:	cbnz	w0, 57cc <grub_show_menu+0x128c>
    57c0:	ldp	x25, x26, [sp, #80]
    57c4:	ldp	x27, x28, [sp, #96]
    57c8:	b	552c <grub_show_menu+0xfec>
    57cc:	ldr	x0, [x19]
    57d0:	ldrh	w3, [x19, #16]
    57d4:	ldr	w2, [x19, #20]
    57d8:	ldr	w1, [x19, #24]
    57dc:	add	w2, w2, w1
    57e0:	ldr	w1, [x19, #36]
    57e4:	add	w1, w1, #0x1
    57e8:	add	w2, w2, w1
    57ec:	mov	w1, #0x0                   	// #0
    57f0:	bfxil	w1, w2, #0, #16
    57f4:	bfi	w1, w3, #16, #16
    57f8:	ldr	x2, [x0, #72]
    57fc:	blr	x2
    5800:	cmp	w21, #0x0
    5804:	ldr	w0, [sp, #140]
    5808:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    580c:	b.ne	5834 <grub_show_menu+0x12f4>  // b.any
    5810:	ldr	w0, [sp, #140]
    5814:	cbnz	w0, 584c <grub_show_menu+0x130c>
    5818:	cbz	w21, 5864 <grub_show_menu+0x1324>
    581c:	ldr	x1, [x19]
    5820:	mov	w0, #0x2193                	// #8595
    5824:	bl	a100 <grub_putcode>
    5828:	ldp	x25, x26, [sp, #80]
    582c:	ldp	x27, x28, [sp, #96]
    5830:	b	552c <grub_show_menu+0xfec>
    5834:	ldr	x1, [x19]
    5838:	mov	w0, #0x2195                	// #8597
    583c:	bl	a100 <grub_putcode>
    5840:	ldp	x25, x26, [sp, #80]
    5844:	ldp	x27, x28, [sp, #96]
    5848:	b	552c <grub_show_menu+0xfec>
    584c:	ldr	x1, [x19]
    5850:	mov	w0, #0x2191                	// #8593
    5854:	bl	a100 <grub_putcode>
    5858:	ldp	x25, x26, [sp, #80]
    585c:	ldp	x27, x28, [sp, #96]
    5860:	b	552c <grub_show_menu+0xfec>
    5864:	ldr	x1, [x19]
    5868:	mov	w0, #0x20                  	// #32
    586c:	bl	a100 <grub_putcode>
    5870:	ldp	x25, x26, [sp, #80]
    5874:	ldp	x27, x28, [sp, #96]
    5878:	b	552c <grub_show_menu+0xfec>
    587c:	ldr	x0, [x19]
    5880:	ldrh	w3, [x19, #16]
    5884:	ldr	w2, [x19, #20]
    5888:	ldr	w1, [x19, #24]
    588c:	add	w2, w2, w1
    5890:	ldr	w1, [x19, #36]
    5894:	add	w1, w1, #0x1
    5898:	add	w2, w2, w1
    589c:	mov	w1, #0x0                   	// #0
    58a0:	bfxil	w1, w2, #0, #16
    58a4:	bfi	w1, w3, #16, #16
    58a8:	ldr	x2, [x0, #72]
    58ac:	blr	x2
    58b0:	ldr	w0, [sp, #140]
    58b4:	cbz	w0, 58c8 <grub_show_menu+0x1388>
    58b8:	ldr	x1, [x19]
    58bc:	mov	w0, #0x2191                	// #8593
    58c0:	bl	a100 <grub_putcode>
    58c4:	b	5794 <grub_show_menu+0x1254>
    58c8:	ldr	x1, [x19]
    58cc:	mov	w0, #0x20                  	// #32
    58d0:	bl	a100 <grub_putcode>
    58d4:	b	5794 <grub_show_menu+0x1254>
    58d8:	ldr	x0, [x19]
    58dc:	ldr	w2, [x19, #16]
    58e0:	ldr	w1, [x19, #12]
    58e4:	add	w2, w2, w1
    58e8:	sub	w2, w2, #0x1
    58ec:	ldr	w3, [x19, #20]
    58f0:	ldr	w1, [x19, #24]
    58f4:	add	w3, w3, w1
    58f8:	ldr	w1, [x19, #36]
    58fc:	add	w1, w1, #0x1
    5900:	add	w3, w3, w1
    5904:	mov	w1, #0x0                   	// #0
    5908:	bfxil	w1, w3, #0, #16
    590c:	bfi	w1, w2, #16, #16
    5910:	ldr	x2, [x0, #72]
    5914:	blr	x2
    5918:	cbz	w21, 5934 <grub_show_menu+0x13f4>
    591c:	ldr	x1, [x19]
    5920:	mov	w0, #0x2193                	// #8595
    5924:	bl	a100 <grub_putcode>
    5928:	ldp	x25, x26, [sp, #80]
    592c:	ldp	x27, x28, [sp, #96]
    5930:	b	552c <grub_show_menu+0xfec>
    5934:	ldr	x1, [x19]
    5938:	mov	w0, #0x20                  	// #32
    593c:	bl	a100 <grub_putcode>
    5940:	ldp	x25, x26, [sp, #80]
    5944:	ldp	x27, x28, [sp, #96]
    5948:	b	552c <grub_show_menu+0xfec>
    594c:	ldr	w24, [x19, #8]
    5950:	cmp	w0, #0x0
    5954:	b.gt	559c <grub_show_menu+0x105c>
    5958:	b	55cc <grub_show_menu+0x108c>
    595c:	ldr	x0, [x19]
    5960:	ldr	w1, [x19, #16]
    5964:	add	w24, w1, w24
    5968:	ldr	w2, [x19, #20]
    596c:	mov	w1, #0x0                   	// #0
    5970:	bfxil	w1, w2, #0, #16
    5974:	bfi	w1, w24, #16, #16
    5978:	ldr	x2, [x0, #72]
    597c:	blr	x2
    5980:	b	5644 <grub_show_menu+0x1104>
    5984:	mov	w21, #0x0                   	// #0
    5988:	b	5780 <grub_show_menu+0x1240>
    598c:	add	w1, w24, #0x1
    5990:	ldr	w2, [sp, #120]
    5994:	cmp	w2, #0x2
    5998:	b.eq	5ac8 <grub_show_menu+0x1588>  // b.none
    599c:	add	x23, x23, #0x18
    59a0:	add	w24, w24, #0x1
    59a4:	mov	x25, x23
    59a8:	ldrsw	x0, [x20, #8]
    59ac:	add	x0, x0, x0, lsl #1
    59b0:	ldr	x1, [x20]
    59b4:	add	x0, x1, x0, lsl #3
    59b8:	cmp	x23, x0
    59bc:	b.cs	57a8 <grub_show_menu+0x1268>  // b.hs, b.nlast
    59c0:	ldr	x22, [x20, #40]
    59c4:	sub	x22, x19, x22
    59c8:	asr	x22, x22, #3
    59cc:	mov	x0, #0x6db7                	// #28087
    59d0:	movk	x0, #0xb6db, lsl #16
    59d4:	movk	x0, #0xdb6d, lsl #32
    59d8:	movk	x0, #0x6db6, lsl #48
    59dc:	mul	x22, x22, x0
    59e0:	ldr	x26, [x23, #16]
    59e4:	ldr	x0, [x26, x22, lsl #3]
    59e8:	cbz	x0, 56f4 <grub_show_menu+0x11b4>
    59ec:	ldr	w3, [sp, #128]
    59f0:	cmp	w24, w3
    59f4:	b.eq	5a20 <grub_show_menu+0x14e0>  // b.none
    59f8:	ldrsw	x0, [x20, #20]
    59fc:	add	x0, x0, x0, lsl #1
    5a00:	ldr	x2, [x20]
    5a04:	add	x0, x2, x0, lsl #3
    5a08:	cmp	x25, x0
    5a0c:	b.eq	5a20 <grub_show_menu+0x14e0>  // b.none
    5a10:	cmp	w24, w3
    5a14:	ldr	w0, [sp, #120]
    5a18:	ccmp	w0, #0x2, #0x0, gt
    5a1c:	b.ne	5a90 <grub_show_menu+0x1550>  // b.any
    5a20:	ldr	x0, [x19]
    5a24:	cmp	w21, #0x0
    5a28:	csel	w1, w21, wzr, ge  // ge = tcont
    5a2c:	mov	w2, w1
    5a30:	ldr	w1, [x19, #16]
    5a34:	str	w2, [sp, #124]
    5a38:	add	w1, w1, w2
    5a3c:	ldr	w2, [x19, #20]
    5a40:	bfxil	w27, w2, #0, #16
    5a44:	bfi	w27, w1, #16, #16
    5a48:	ldr	x2, [x0, #72]
    5a4c:	mov	w1, w27
    5a50:	blr	x2
    5a54:	ldr	x0, [x25]
    5a58:	ldrsw	x1, [x25, #8]
    5a5c:	cmp	w21, #0x0
    5a60:	ldr	w6, [x19, #12]
    5a64:	ldr	x2, [x26, x22, lsl #3]
    5a68:	str	x2, [sp]
    5a6c:	mov	w7, #0x5c                  	// #92
    5a70:	ldr	w2, [sp, #124]
    5a74:	sub	w6, w6, w2
    5a78:	csneg	w5, wzr, w21, ge  // ge = tcont
    5a7c:	ldr	x4, [x19]
    5a80:	ldr	w3, [x19, #40]
    5a84:	ldr	w2, [x19, #20]
    5a88:	add	x1, x0, x1, lsl #2
    5a8c:	bl	afa8 <grub_print_ucs4_menu>
    5a90:	mov	x1, x19
    5a94:	mov	x0, x25
    5a98:	bl	53a4 <grub_show_menu+0xe64>
    5a9c:	add	w21, w21, w0
    5aa0:	ldr	w0, [x19, #12]
    5aa4:	cmp	w0, w21
    5aa8:	b.gt	598c <grub_show_menu+0x144c>
    5aac:	add	w1, w24, #0x1
    5ab0:	ldr	w2, [x20, #8]
    5ab4:	cmp	w2, w1
    5ab8:	b.gt	577c <grub_show_menu+0x123c>
    5abc:	ldr	w2, [sp, #120]
    5ac0:	cmp	w2, #0x2
    5ac4:	b.ne	5ae4 <grub_show_menu+0x15a4>  // b.any
    5ac8:	ldr	w2, [x20, #8]
    5acc:	cmp	w2, w1
    5ad0:	b.ne	576c <grub_show_menu+0x122c>  // b.any
    5ad4:	cmp	w0, w21
    5ad8:	b.le	5984 <grub_show_menu+0x1444>
    5adc:	mov	w23, #0x20                  	// #32
    5ae0:	b	571c <grub_show_menu+0x11dc>
    5ae4:	mov	w21, #0x0                   	// #0
    5ae8:	b	5780 <grub_show_menu+0x1240>
    5aec:	stp	x29, x30, [sp, #-80]!
    5af0:	mov	x29, sp
    5af4:	stp	x19, x20, [sp, #16]
    5af8:	mov	x20, x0
    5afc:	ldr	w0, [x0, #48]
    5b00:	cbz	w0, 5b70 <grub_show_menu+0x1630>
    5b04:	stp	x21, x22, [sp, #32]
    5b08:	stp	x23, x24, [sp, #48]
    5b0c:	str	x25, [sp, #64]
    5b10:	mov	w21, w1
    5b14:	mov	w22, w2
    5b18:	mov	w23, w3
    5b1c:	mov	w24, w4
    5b20:	mov	w25, w5
    5b24:	mov	w19, #0x0                   	// #0
    5b28:	ubfiz	x7, x19, #3, #32
    5b2c:	sub	x7, x7, w19, uxtw
    5b30:	ldr	x1, [x20, #40]
    5b34:	mov	w6, w25
    5b38:	mov	w5, w24
    5b3c:	mov	w4, w23
    5b40:	mov	w3, w22
    5b44:	mov	w2, w21
    5b48:	add	x1, x1, x7, lsl #3
    5b4c:	mov	x0, x20
    5b50:	bl	53f4 <grub_show_menu+0xeb4>
    5b54:	add	w19, w19, #0x1
    5b58:	ldr	w0, [x20, #48]
    5b5c:	cmp	w0, w19
    5b60:	b.hi	5b28 <grub_show_menu+0x15e8>  // b.pmore
    5b64:	ldp	x21, x22, [sp, #32]
    5b68:	ldp	x23, x24, [sp, #48]
    5b6c:	ldr	x25, [sp, #64]
    5b70:	ldp	x19, x20, [sp, #16]
    5b74:	ldp	x29, x30, [sp], #80
    5b78:	ret
    5b7c:	stp	x29, x30, [sp, #-32]!
    5b80:	mov	x29, sp
    5b84:	str	x19, [sp, #16]
    5b88:	mov	x19, x0
    5b8c:	ldrsw	x2, [x0, #20]
    5b90:	add	x2, x2, x2, lsl #1
    5b94:	lsl	x2, x2, #3
    5b98:	ldr	x3, [x0]
    5b9c:	add	x0, x3, x2
    5ba0:	ldr	w0, [x0, #8]
    5ba4:	ldr	x2, [x3, x2]
    5ba8:	cmp	w0, w1
    5bac:	csel	w1, w0, w1, le
    5bb0:	add	x1, x2, w1, sxtw #2
    5bb4:	add	x0, x2, w0, sxtw #2
    5bb8:	bl	df30 <grub_unicode_get_comb_end>
    5bbc:	ldrsw	x1, [x19, #20]
    5bc0:	ldr	x2, [x19]
    5bc4:	add	x1, x1, x1, lsl #1
    5bc8:	ldr	x1, [x2, x1, lsl #3]
    5bcc:	sub	x0, x0, x1
    5bd0:	asr	x0, x0, #2
    5bd4:	str	w0, [x19, #12]
    5bd8:	ldr	x19, [sp, #16]
    5bdc:	ldp	x29, x30, [sp], #32
    5be0:	ret
    5be4:	stp	x29, x30, [sp, #-80]!
    5be8:	mov	x29, sp
    5bec:	stp	x19, x20, [sp, #16]
    5bf0:	stp	x21, x22, [sp, #32]
    5bf4:	mov	x19, x0
    5bf8:	mov	w21, w1
    5bfc:	ldr	w1, [x0, #12]
    5c00:	cmp	w1, #0x0
    5c04:	b.gt	5c54 <grub_show_menu+0x1714>
    5c08:	ldr	w0, [x0, #20]
    5c0c:	cmp	w0, #0x0
    5c10:	b.le	5c34 <grub_show_menu+0x16f4>
    5c14:	sub	w0, w0, #0x1
    5c18:	str	w0, [x19, #20]
    5c1c:	ldr	x1, [x19]
    5c20:	sbfiz	x2, x0, #1, #32
    5c24:	add	x0, x2, w0, sxtw
    5c28:	add	x0, x1, x0, lsl #3
    5c2c:	ldr	w0, [x0, #8]
    5c30:	str	w0, [x19, #12]
    5c34:	ldr	w0, [x19, #12]
    5c38:	str	w0, [x19, #16]
    5c3c:	cbnz	w21, 5cf4 <grub_show_menu+0x17b4>
    5c40:	mov	w0, #0x1                   	// #1
    5c44:	ldp	x19, x20, [sp, #16]
    5c48:	ldp	x21, x22, [sp, #32]
    5c4c:	ldp	x29, x30, [sp], #80
    5c50:	ret
    5c54:	ldrsw	x20, [x0, #20]
    5c58:	add	x20, x20, x20, lsl #1
    5c5c:	lsl	x20, x20, #3
    5c60:	ldr	x22, [x0]
    5c64:	sub	w1, w1, #0x1
    5c68:	str	w1, [x0, #12]
    5c6c:	ldr	x0, [x22, x20]
    5c70:	add	x1, x0, w1, sxtw #2
    5c74:	bl	dea8 <grub_unicode_get_comb_start>
    5c78:	ldr	x1, [x22, x20]
    5c7c:	sub	x0, x0, x1
    5c80:	asr	x0, x0, #2
    5c84:	str	w0, [x19, #12]
    5c88:	ldrsw	x2, [x19, #20]
    5c8c:	add	x2, x2, x2, lsl #1
    5c90:	lsl	x2, x2, #3
    5c94:	ldr	x3, [x19]
    5c98:	add	x1, x3, x2
    5c9c:	ldr	w1, [x1, #8]
    5ca0:	sub	w1, w1, w0
    5ca4:	ldr	x3, [x3, x2]
    5ca8:	add	x2, sp, #0x30
    5cac:	sxtw	x1, w1
    5cb0:	add	x0, x3, w0, sxtw #2
    5cb4:	bl	c318 <grub_unicode_aglomerate_comb>
    5cb8:	ldr	x0, [x22, x20]
    5cbc:	ldrsw	x1, [x19, #12]
    5cc0:	add	x1, x0, x1, lsl #2
    5cc4:	bl	dea8 <grub_unicode_get_comb_start>
    5cc8:	ldr	x1, [x22, x20]
    5ccc:	sub	x0, x0, x1
    5cd0:	asr	x0, x0, #2
    5cd4:	str	w0, [x19, #12]
    5cd8:	ldrh	w0, [sp, #54]
    5cdc:	ubfx	x0, x0, #3, #8
    5ce0:	cmp	w0, #0x2
    5ce4:	b.ls	5c34 <grub_show_menu+0x16f4>  // b.plast
    5ce8:	ldr	x0, [sp, #72]
    5cec:	bl	0 <grub_free>
    5cf0:	b	5c34 <grub_show_menu+0x16f4>
    5cf4:	mov	w5, #0x0                   	// #0
    5cf8:	mov	w4, #0x0                   	// #0
    5cfc:	mov	w3, #0x0                   	// #0
    5d00:	mov	w2, #0x0                   	// #0
    5d04:	ldr	w1, [x19, #8]
    5d08:	mov	x0, x19
    5d0c:	bl	5aec <grub_show_menu+0x15ac>
    5d10:	b	5c40 <grub_show_menu+0x1700>
    5d14:	stp	x29, x30, [sp, #-32]!
    5d18:	mov	x29, sp
    5d1c:	str	x19, [sp, #16]
    5d20:	mov	x19, x0
    5d24:	ldr	w0, [x0, #8]
    5d28:	add	w1, w1, w0
    5d2c:	ldr	w0, [x19, #12]
    5d30:	cmp	w0, w1
    5d34:	b.lt	5d48 <grub_show_menu+0x1808>  // b.tstop
    5d38:	mov	w0, #0x1                   	// #1
    5d3c:	ldr	x19, [sp, #16]
    5d40:	ldp	x29, x30, [sp], #32
    5d44:	ret
    5d48:	lsl	w1, w1, #1
    5d4c:	str	w1, [x19, #12]
    5d50:	add	w1, w1, #0x1
    5d54:	sbfiz	x1, x1, #2, #32
    5d58:	ldr	x0, [x19]
    5d5c:	bl	0 <grub_realloc>
    5d60:	str	x0, [x19]
    5d64:	cmp	x0, #0x0
    5d68:	cset	w0, ne  // ne = any
    5d6c:	b	5d3c <grub_show_menu+0x17fc>
    5d70:	stp	x29, x30, [sp, #-48]!
    5d74:	mov	x29, sp
    5d78:	stp	x19, x20, [sp, #16]
    5d7c:	str	x21, [sp, #32]
    5d80:	mov	x19, x0
    5d84:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    5d88:	ldr	x2, [x2]
    5d8c:	str	w1, [x2], #8
    5d90:	ldr	x21, [x2, #16]
    5d94:	ldr	x20, [x2, #8]
    5d98:	bl	0 <grub_strlen>
    5d9c:	add	x20, x20, #0x2
    5da0:	add	x0, x20, w0, sxtw
    5da4:	cmp	x21, x0
    5da8:	b.cc	5e14 <grub_show_menu+0x18d4>  // b.lo, b.ul, b.last
    5dac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5db0:	ldr	x0, [x0]
    5db4:	ldr	x1, [x0, #16]
    5db8:	ldr	x2, [x0, #8]
    5dbc:	add	x0, x2, x1
    5dc0:	cbz	x1, 5de0 <grub_show_menu+0x18a0>
    5dc4:	mov	w3, #0x20                  	// #32
    5dc8:	strb	w3, [x2, x1]
    5dcc:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    5dd0:	ldr	x2, [x2]
    5dd4:	add	x1, x1, #0x1
    5dd8:	str	x1, [x2, #16]
    5ddc:	add	x0, x0, #0x1
    5de0:	mov	x1, x19
    5de4:	bl	0 <grub_strcpy>
    5de8:	mov	x0, x19
    5dec:	bl	0 <grub_strlen>
    5df0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    5df4:	ldr	x1, [x1]
    5df8:	ldr	x2, [x1, #16]
    5dfc:	add	x2, x2, x0
    5e00:	str	x2, [x1, #16]
    5e04:	ldp	x19, x20, [sp, #16]
    5e08:	ldr	x21, [sp, #32]
    5e0c:	ldp	x29, x30, [sp], #48
    5e10:	ret
    5e14:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5e18:	ldr	x21, [x0]
    5e1c:	ldr	x20, [x21, #16]
    5e20:	mov	x0, x19
    5e24:	bl	0 <grub_strlen>
    5e28:	add	x20, x20, #0x50
    5e2c:	add	x20, x20, x0
    5e30:	mov	x1, x20
    5e34:	ldr	x0, [x21, #8]
    5e38:	bl	0 <grub_realloc>
    5e3c:	cbz	x0, 5e5c <grub_show_menu+0x191c>
    5e40:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    5e44:	ldr	x2, [x1]
    5e48:	ldr	x3, [x2, #16]
    5e4c:	strb	wzr, [x0, x3]
    5e50:	str	x0, [x2, #8]
    5e54:	str	x20, [x2, #24]
    5e58:	b	5dac <grub_show_menu+0x186c>
    5e5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    5e60:	ldr	x0, [x0]
    5e64:	str	wzr, [x0]
    5e68:	b	5e04 <grub_show_menu+0x18c4>
    5e6c:	nop
	...
    5e80:	stp	x29, x30, [sp, #-80]!
    5e84:	mov	x29, sp
    5e88:	stp	x19, x20, [sp, #16]
    5e8c:	stp	x21, x22, [sp, #32]
    5e90:	stp	x23, x24, [sp, #48]
    5e94:	stp	x25, x26, [sp, #64]
    5e98:	mov	x19, x0
    5e9c:	mov	w23, w1
    5ea0:	ldr	w0, [x0, #20]
    5ea4:	sbfiz	x24, x0, #1, #32
    5ea8:	add	x24, x24, w0, sxtw
    5eac:	lsl	x24, x24, #3
    5eb0:	ldr	x25, [x19]
    5eb4:	add	x22, x25, x24
    5eb8:	ldr	w2, [x22, #8]
    5ebc:	ldr	w1, [x19, #12]
    5ec0:	cmp	w2, w1
    5ec4:	b.le	6020 <grub_show_menu+0x1ae0>
    5ec8:	ldr	w0, [x19, #48]
    5ecc:	cbz	w0, 5f04 <grub_show_menu+0x19c4>
    5ed0:	mov	w21, #0x0                   	// #0
    5ed4:	ubfiz	x20, x21, #3, #32
    5ed8:	sub	x20, x20, w21, uxtw
    5edc:	ldr	x0, [x19, #40]
    5ee0:	add	x20, x0, x20, lsl #3
    5ee4:	mov	x1, x20
    5ee8:	mov	x0, x22
    5eec:	bl	53a4 <grub_show_menu+0xe64>
    5ef0:	str	w0, [x20, #44]
    5ef4:	add	w21, w21, #0x1
    5ef8:	ldr	w0, [x19, #48]
    5efc:	cmp	w0, w21
    5f00:	b.hi	5ed4 <grub_show_menu+0x1994>  // b.pmore
    5f04:	ldr	x3, [x25, x24]
    5f08:	ldr	w1, [x19, #12]
    5f0c:	sbfiz	x0, x1, #2, #32
    5f10:	ldr	w2, [x22, #8]
    5f14:	sub	w2, w2, w1
    5f18:	sub	w2, w2, #0x1
    5f1c:	add	x1, x0, #0x4
    5f20:	sbfiz	x2, x2, #2, #32
    5f24:	add	x1, x3, x1
    5f28:	add	x0, x3, x0
    5f2c:	bl	0 <grub_memmove>
    5f30:	ldr	w0, [x22, #8]
    5f34:	sub	w0, w0, #0x1
    5f38:	str	w0, [x22, #8]
    5f3c:	ldr	w0, [x19, #48]
    5f40:	cbz	w0, 5f70 <grub_show_menu+0x1a30>
    5f44:	mov	w20, #0x0                   	// #0
    5f48:	mov	w21, w20
    5f4c:	ldr	x0, [x22, #16]
    5f50:	ldr	x0, [x0, x21, lsl #3]
    5f54:	bl	0 <grub_free>
    5f58:	ldr	x0, [x22, #16]
    5f5c:	str	xzr, [x0, x21, lsl #3]
    5f60:	add	w20, w20, #0x1
    5f64:	ldr	w0, [x19, #48]
    5f68:	cmp	w0, w20
    5f6c:	b.hi	5f48 <grub_show_menu+0x1a08>  // b.pmore
    5f70:	ldr	w25, [x19, #20]
    5f74:	ldr	w24, [x19, #12]
    5f78:	str	w24, [x19, #16]
    5f7c:	mov	w0, #0x1                   	// #1
    5f80:	cbz	w23, 6034 <grub_show_menu+0x1af4>
    5f84:	ldr	w0, [x19, #48]
    5f88:	cbz	w0, 612c <grub_show_menu+0x1bec>
    5f8c:	mov	w21, #0x0                   	// #0
    5f90:	mov	w26, #0x1                   	// #1
    5f94:	mov	w23, #0x2                   	// #2
    5f98:	b	5fc8 <grub_show_menu+0x1a88>
    5f9c:	mov	w6, w23
    5fa0:	mov	w5, #0x0                   	// #0
    5fa4:	mov	w4, #0x0                   	// #0
    5fa8:	mov	w3, w24
    5fac:	mov	w2, w25
    5fb0:	mov	x0, x19
    5fb4:	bl	53f4 <grub_show_menu+0xeb4>
    5fb8:	add	w21, w21, #0x1
    5fbc:	ldr	w0, [x19, #48]
    5fc0:	cmp	w0, w21
    5fc4:	b.ls	6018 <grub_show_menu+0x1ad8>  // b.plast
    5fc8:	ubfiz	x20, x21, #3, #32
    5fcc:	sub	x20, x20, w21, uxtw
    5fd0:	lsl	x20, x20, #3
    5fd4:	ldr	x1, [x19, #40]
    5fd8:	add	x1, x1, x20
    5fdc:	mov	x0, x22
    5fe0:	bl	53a4 <grub_show_menu+0xe64>
    5fe4:	ldr	x1, [x19, #40]
    5fe8:	add	x1, x1, x20
    5fec:	ldr	w2, [x1, #44]
    5ff0:	cmp	w2, w0
    5ff4:	b.ne	5f9c <grub_show_menu+0x1a5c>  // b.any
    5ff8:	mov	w6, w26
    5ffc:	mov	w5, #0x0                   	// #0
    6000:	mov	w4, #0x0                   	// #0
    6004:	mov	w3, w24
    6008:	mov	w2, w25
    600c:	mov	x0, x19
    6010:	bl	53f4 <grub_show_menu+0xeb4>
    6014:	b	5fb8 <grub_show_menu+0x1a78>
    6018:	mov	w0, #0x1                   	// #1
    601c:	b	6034 <grub_show_menu+0x1af4>
    6020:	add	w1, w0, #0x1
    6024:	ldr	w2, [x19, #8]
    6028:	mov	w0, #0x1                   	// #1
    602c:	cmp	w1, w2
    6030:	b.lt	604c <grub_show_menu+0x1b0c>  // b.tstop
    6034:	ldp	x19, x20, [sp, #16]
    6038:	ldp	x21, x22, [sp, #32]
    603c:	ldp	x23, x24, [sp, #48]
    6040:	ldp	x25, x26, [sp, #64]
    6044:	ldp	x29, x30, [sp], #80
    6048:	ret
    604c:	ldr	w1, [x22, #32]
    6050:	mov	x0, x22
    6054:	bl	5d14 <grub_show_menu+0x17d4>
    6058:	cbz	w0, 6034 <grub_show_menu+0x1af4>
    605c:	ldrsw	x2, [x22, #32]
    6060:	ldrsw	x3, [x22, #8]
    6064:	ldr	x0, [x25, x24]
    6068:	lsl	x2, x2, #2
    606c:	ldr	x1, [x22, #24]
    6070:	add	x0, x0, x3, lsl #2
    6074:	bl	0 <grub_memmove>
    6078:	ldr	w0, [x22, #8]
    607c:	ldr	w1, [x22, #32]
    6080:	add	w0, w0, w1
    6084:	str	w0, [x22, #8]
    6088:	ldr	w0, [x19, #48]
    608c:	cbz	w0, 60bc <grub_show_menu+0x1b7c>
    6090:	mov	w20, #0x0                   	// #0
    6094:	mov	w21, w20
    6098:	ldr	x0, [x22, #16]
    609c:	ldr	x0, [x0, x21, lsl #3]
    60a0:	bl	0 <grub_free>
    60a4:	ldr	x0, [x22, #16]
    60a8:	str	xzr, [x0, x21, lsl #3]
    60ac:	add	w20, w20, #0x1
    60b0:	ldr	w0, [x19, #48]
    60b4:	cmp	w0, w20
    60b8:	b.hi	6094 <grub_show_menu+0x1b54>  // b.pmore
    60bc:	add	x20, x22, #0x18
    60c0:	ldr	x0, [x22, #24]
    60c4:	bl	0 <grub_free>
    60c8:	ldr	w0, [x19, #8]
    60cc:	ldr	w1, [x19, #20]
    60d0:	sub	w0, w0, w1
    60d4:	sub	w0, w0, #0x2
    60d8:	sbfiz	x1, x0, #1, #32
    60dc:	add	x0, x1, w0, sxtw
    60e0:	lsl	x2, x0, #3
    60e4:	add	x1, x22, #0x30
    60e8:	mov	x0, x20
    60ec:	bl	0 <grub_memmove>
    60f0:	ldr	w0, [x19, #8]
    60f4:	sub	w0, w0, #0x1
    60f8:	str	w0, [x19, #8]
    60fc:	ldr	w1, [x19, #20]
    6100:	ldr	w2, [x19, #12]
    6104:	str	w2, [x19, #16]
    6108:	mov	w0, #0x1                   	// #1
    610c:	cbz	w23, 6034 <grub_show_menu+0x1af4>
    6110:	mov	w5, #0x2                   	// #2
    6114:	mov	w4, w0
    6118:	mov	w3, #0x0                   	// #0
    611c:	mov	x0, x19
    6120:	bl	5aec <grub_show_menu+0x15ac>
    6124:	mov	w0, #0x1                   	// #1
    6128:	b	6034 <grub_show_menu+0x1af4>
    612c:	mov	w0, #0x1                   	// #1
    6130:	b	6034 <grub_show_menu+0x1af4>
    6134:	stp	x29, x30, [sp, #-112]!
    6138:	mov	x29, sp
    613c:	stp	x19, x20, [sp, #16]
    6140:	stp	x23, x24, [sp, #48]
    6144:	mov	x19, x0
    6148:	mov	x24, x1
    614c:	str	w2, [sp, #108]
    6150:	ldr	w0, [x0, #8]
    6154:	str	w0, [sp, #100]
    6158:	ldr	w0, [x19, #48]
    615c:	cbz	w0, 6198 <grub_show_menu+0x1c58>
    6160:	mov	w1, #0x0                   	// #0
    6164:	ubfiz	x0, x1, #3, #32
    6168:	sub	x0, x0, w1, uxtw
    616c:	lsl	x0, x0, #3
    6170:	ldr	x2, [x19, #40]
    6174:	add	x2, x2, x0
    6178:	str	wzr, [x2, #48]
    617c:	ldr	x2, [x19, #40]
    6180:	add	x0, x2, x0
    6184:	str	wzr, [x0, #52]
    6188:	add	w1, w1, #0x1
    618c:	ldr	w0, [x19, #48]
    6190:	cmp	w0, w1
    6194:	b.hi	6164 <grub_show_menu+0x1c24>  // b.pmore
    6198:	ldrb	w0, [x24]
    619c:	cbz	w0, 65c4 <grub_show_menu+0x2084>
    61a0:	stp	x21, x22, [sp, #32]
    61a4:	stp	x25, x26, [sp, #64]
    61a8:	stp	x27, x28, [sp, #80]
    61ac:	str	wzr, [sp, #104]
    61b0:	mov	w21, #0x1                   	// #1
    61b4:	mov	w22, #0x2                   	// #2
    61b8:	b	6404 <grub_show_menu+0x1ec4>
    61bc:	ldr	w1, [x19, #8]
    61c0:	add	w1, w1, #0x1
    61c4:	str	w1, [x19, #8]
    61c8:	sbfiz	x0, x1, #1, #32
    61cc:	add	x1, x0, w1, sxtw
    61d0:	lsl	x1, x1, #3
    61d4:	ldr	x0, [x19]
    61d8:	bl	0 <grub_realloc>
    61dc:	str	x0, [x19]
    61e0:	cbz	x0, 65cc <grub_show_menu+0x208c>
    61e4:	ldr	w2, [x19, #20]
    61e8:	ldr	w1, [x19, #8]
    61ec:	sub	w3, w1, #0x2
    61f0:	cmp	w2, w3
    61f4:	b.lt	631c <grub_show_menu+0x1ddc>  // b.tstop
    61f8:	ldrsw	x1, [x19, #20]
    61fc:	add	x1, x1, #0x1
    6200:	add	x1, x1, x1, lsl #1
    6204:	ldr	x0, [x19]
    6208:	add	x1, x0, x1, lsl #3
    620c:	mov	x0, x19
    6210:	bl	5330 <grub_show_menu+0xdf0>
    6214:	mov	w23, w0
    6218:	cbz	w0, 660c <grub_show_menu+0x20cc>
    621c:	ldrsw	x25, [x19, #20]
    6220:	add	x25, x25, x25, lsl #1
    6224:	ldr	x27, [x19]
    6228:	add	x20, x27, x25, lsl #3
    622c:	ldr	w26, [x20, #8]
    6230:	ldr	w0, [x19, #12]
    6234:	sub	w26, w26, w0
    6238:	mov	w1, w26
    623c:	add	x0, x20, #0x18
    6240:	bl	5d14 <grub_show_menu+0x17d4>
    6244:	mov	w23, w0
    6248:	cbz	w0, 661c <grub_show_menu+0x20dc>
    624c:	ldrsw	x1, [x19, #12]
    6250:	ldr	x0, [x27, x25, lsl #3]
    6254:	sbfiz	x2, x26, #2, #32
    6258:	add	x1, x0, x1, lsl #2
    625c:	ldr	x0, [x20, #24]
    6260:	bl	0 <grub_memmove>
    6264:	ldr	w0, [x19, #12]
    6268:	str	w0, [x20, #8]
    626c:	ldr	w0, [x19, #48]
    6270:	cbz	w0, 62a0 <grub_show_menu+0x1d60>
    6274:	mov	w23, #0x0                   	// #0
    6278:	mov	w25, w23
    627c:	ldr	x0, [x20, #16]
    6280:	ldr	x0, [x0, x25, lsl #3]
    6284:	bl	0 <grub_free>
    6288:	ldr	x0, [x20, #16]
    628c:	str	xzr, [x0, x25, lsl #3]
    6290:	add	w23, w23, #0x1
    6294:	ldr	w0, [x19, #48]
    6298:	cmp	w0, w23
    629c:	b.hi	6278 <grub_show_menu+0x1d38>  // b.pmore
    62a0:	str	w26, [x20, #32]
    62a4:	ldr	w0, [x19, #20]
    62a8:	ldr	w1, [sp, #100]
    62ac:	cmp	w0, w1
    62b0:	b.ge	62c0 <grub_show_menu+0x1d80>  // b.tcont
    62b4:	ldr	w1, [x19, #12]
    62b8:	str	w1, [sp, #104]
    62bc:	str	w0, [sp, #100]
    62c0:	ldr	w0, [x19, #48]
    62c4:	cbz	w0, 6300 <grub_show_menu+0x1dc0>
    62c8:	mov	w1, #0x0                   	// #0
    62cc:	ubfiz	x0, x1, #3, #32
    62d0:	sub	x0, x0, w1, uxtw
    62d4:	lsl	x0, x0, #3
    62d8:	ldr	x2, [x19, #40]
    62dc:	add	x2, x2, x0
    62e0:	str	w22, [x2, #52]
    62e4:	ldr	x2, [x19, #40]
    62e8:	add	x0, x2, x0
    62ec:	str	w21, [x0, #48]
    62f0:	add	w1, w1, #0x1
    62f4:	ldr	w0, [x19, #48]
    62f8:	cmp	w0, w1
    62fc:	b.hi	62cc <grub_show_menu+0x1d8c>  // b.pmore
    6300:	str	wzr, [x19, #16]
    6304:	str	wzr, [x19, #12]
    6308:	ldr	w0, [x19, #20]
    630c:	add	w0, w0, #0x1
    6310:	str	w0, [x19, #20]
    6314:	add	x24, x24, #0x1
    6318:	b	63fc <grub_show_menu+0x1ebc>
    631c:	sxtw	x3, w2
    6320:	sub	w1, w1, w2
    6324:	sub	w1, w1, #0x2
    6328:	sbfiz	x2, x1, #1, #32
    632c:	add	x2, x2, w1, sxtw
    6330:	add	x1, x3, #0x1
    6334:	add	x1, x1, x1, lsl #1
    6338:	add	x3, x3, x3, lsl #1
    633c:	add	x3, x0, x3, lsl #3
    6340:	lsl	x2, x2, #3
    6344:	add	x1, x0, x1, lsl #3
    6348:	add	x0, x3, #0x30
    634c:	bl	0 <grub_memmove>
    6350:	b	61f8 <grub_show_menu+0x1cb8>
    6354:	mov	x0, x24
    6358:	bl	0 <grub_strlen>
    635c:	add	x27, x24, x0
    6360:	b	6420 <grub_show_menu+0x1ee0>
    6364:	mov	x0, x25
    6368:	bl	0 <grub_free>
    636c:	ldp	x21, x22, [sp, #32]
    6370:	ldp	x25, x26, [sp, #64]
    6374:	ldp	x27, x28, [sp, #80]
    6378:	b	65f0 <grub_show_menu+0x20b0>
    637c:	str	w22, [x1, #52]
    6380:	ldr	x0, [x19, #40]
    6384:	add	x23, x0, x23
    6388:	str	w21, [x23, #48]
    638c:	add	w25, w25, #0x1
    6390:	ldr	w0, [x19, #48]
    6394:	cmp	w0, w25
    6398:	b.ls	63e0 <grub_show_menu+0x1ea0>  // b.plast
    639c:	ubfiz	x23, x25, #3, #32
    63a0:	sub	x23, x23, w25, uxtw
    63a4:	lsl	x23, x23, #3
    63a8:	ldr	x1, [x19, #40]
    63ac:	add	x1, x1, x23
    63b0:	mov	x0, x20
    63b4:	bl	53a4 <grub_show_menu+0xe64>
    63b8:	ldr	x1, [x19, #40]
    63bc:	add	x1, x1, x23
    63c0:	ldr	w2, [x1, #44]
    63c4:	cmp	w2, w0
    63c8:	b.ne	637c <grub_show_menu+0x1e3c>  // b.any
    63cc:	ldr	w0, [x1, #52]
    63d0:	cmp	w0, #0x2
    63d4:	b.eq	638c <grub_show_menu+0x1e4c>  // b.none
    63d8:	str	w21, [x1, #52]
    63dc:	b	638c <grub_show_menu+0x1e4c>
    63e0:	ldr	w1, [x19, #12]
    63e4:	add	w1, w1, w24
    63e8:	mov	x0, x19
    63ec:	bl	5b7c <grub_show_menu+0x163c>
    63f0:	ldr	w0, [x19, #12]
    63f4:	str	w0, [x19, #16]
    63f8:	mov	x24, x27
    63fc:	ldrb	w0, [x24]
    6400:	cbz	w0, 655c <grub_show_menu+0x201c>
    6404:	cmp	w0, #0xa
    6408:	b.eq	61bc <grub_show_menu+0x1c7c>  // b.none
    640c:	mov	w1, #0xa                   	// #10
    6410:	mov	x0, x24
    6414:	bl	0 <grub_strchr>
    6418:	mov	x27, x0
    641c:	cbz	x0, 6354 <grub_show_menu+0x1e14>
    6420:	ldrsw	x26, [x19, #20]
    6424:	add	x26, x26, x26, lsl #1
    6428:	ldr	x28, [x19]
    642c:	add	x20, x28, x26, lsl #3
    6430:	sub	x23, x27, x24
    6434:	lsl	x0, x23, #2
    6438:	bl	0 <grub_malloc>
    643c:	mov	x25, x0
    6440:	cbz	x0, 65e0 <grub_show_menu+0x20a0>
    6444:	mov	x4, #0x0                   	// #0
    6448:	mov	x3, x23
    644c:	mov	x2, x24
    6450:	mov	x1, x23
    6454:	bl	bfb0 <grub_utf8_to_ucs4>
    6458:	mov	x24, x0
    645c:	mov	w1, w0
    6460:	mov	x0, x20
    6464:	bl	5d14 <grub_show_menu+0x17d4>
    6468:	mov	w23, w0
    646c:	cbz	w0, 6364 <grub_show_menu+0x1e24>
    6470:	ldr	x0, [x28, x26, lsl #3]
    6474:	ldr	w1, [x19, #12]
    6478:	sxtw	x23, w24
    647c:	ldr	w2, [x20, #8]
    6480:	sub	w2, w2, w1
    6484:	add	x3, x23, w1, sxtw
    6488:	sbfiz	x2, x2, #2, #32
    648c:	add	x1, x0, w1, sxtw #2
    6490:	add	x0, x0, x3, lsl #2
    6494:	bl	0 <grub_memmove>
    6498:	ldrsw	x3, [x19, #12]
    649c:	ldr	x0, [x28, x26, lsl #3]
    64a0:	lsl	x2, x23, #2
    64a4:	mov	x1, x25
    64a8:	add	x0, x0, x3, lsl #2
    64ac:	bl	0 <grub_memmove>
    64b0:	mov	x0, x25
    64b4:	bl	0 <grub_free>
    64b8:	ldr	w0, [x19, #48]
    64bc:	cbz	w0, 6524 <grub_show_menu+0x1fe4>
    64c0:	mov	w23, #0x0                   	// #0
    64c4:	mov	w25, w23
    64c8:	ldr	x0, [x20, #16]
    64cc:	ldr	x0, [x0, x25, lsl #3]
    64d0:	bl	0 <grub_free>
    64d4:	ldr	x0, [x20, #16]
    64d8:	str	xzr, [x0, x25, lsl #3]
    64dc:	add	w23, w23, #0x1
    64e0:	ldr	w0, [x19, #48]
    64e4:	cmp	w0, w23
    64e8:	b.hi	64c4 <grub_show_menu+0x1f84>  // b.pmore
    64ec:	cbz	w0, 6524 <grub_show_menu+0x1fe4>
    64f0:	mov	w25, #0x0                   	// #0
    64f4:	ubfiz	x23, x25, #3, #32
    64f8:	sub	x23, x23, w25, uxtw
    64fc:	ldr	x0, [x19, #40]
    6500:	add	x23, x0, x23, lsl #3
    6504:	mov	x1, x23
    6508:	mov	x0, x20
    650c:	bl	53a4 <grub_show_menu+0xe64>
    6510:	str	w0, [x23, #44]
    6514:	add	w25, w25, #0x1
    6518:	ldr	w0, [x19, #48]
    651c:	cmp	w0, w25
    6520:	b.hi	64f4 <grub_show_menu+0x1fb4>  // b.pmore
    6524:	ldr	w0, [x20, #8]
    6528:	add	w0, w0, w24
    652c:	str	w0, [x20, #8]
    6530:	ldr	w0, [x19, #20]
    6534:	ldr	w1, [sp, #100]
    6538:	cmp	w0, w1
    653c:	b.ge	654c <grub_show_menu+0x200c>  // b.tcont
    6540:	ldr	w1, [x19, #12]
    6544:	str	w1, [sp, #104]
    6548:	str	w0, [sp, #100]
    654c:	ldr	w0, [x19, #48]
    6550:	cbz	w0, 63e0 <grub_show_menu+0x1ea0>
    6554:	mov	w25, #0x0                   	// #0
    6558:	b	639c <grub_show_menu+0x1e5c>
    655c:	ldp	x21, x22, [sp, #32]
    6560:	ldp	x25, x26, [sp, #64]
    6564:	ldp	x27, x28, [sp, #80]
    6568:	mov	w23, #0x1                   	// #1
    656c:	ldr	w0, [sp, #108]
    6570:	cbz	w0, 65f0 <grub_show_menu+0x20b0>
    6574:	ldr	w0, [x19, #48]
    6578:	cbz	w0, 6604 <grub_show_menu+0x20c4>
    657c:	mov	w20, #0x0                   	// #0
    6580:	ubfiz	x1, x20, #3, #32
    6584:	sub	x1, x1, w20, uxtw
    6588:	ldr	x0, [x19, #40]
    658c:	add	x1, x0, x1, lsl #3
    6590:	ldr	w6, [x1, #52]
    6594:	ldr	w5, [x1, #48]
    6598:	mov	w4, #0x0                   	// #0
    659c:	ldr	w3, [sp, #104]
    65a0:	ldr	w2, [sp, #100]
    65a4:	mov	x0, x19
    65a8:	bl	53f4 <grub_show_menu+0xeb4>
    65ac:	add	w20, w20, #0x1
    65b0:	ldr	w0, [x19, #48]
    65b4:	cmp	w0, w20
    65b8:	b.hi	6580 <grub_show_menu+0x2040>  // b.pmore
    65bc:	mov	w23, #0x1                   	// #1
    65c0:	b	65f0 <grub_show_menu+0x20b0>
    65c4:	str	wzr, [sp, #104]
    65c8:	b	6568 <grub_show_menu+0x2028>
    65cc:	mov	w23, #0x0                   	// #0
    65d0:	ldp	x21, x22, [sp, #32]
    65d4:	ldp	x25, x26, [sp, #64]
    65d8:	ldp	x27, x28, [sp, #80]
    65dc:	b	65f0 <grub_show_menu+0x20b0>
    65e0:	mov	w23, #0x0                   	// #0
    65e4:	ldp	x21, x22, [sp, #32]
    65e8:	ldp	x25, x26, [sp, #64]
    65ec:	ldp	x27, x28, [sp, #80]
    65f0:	mov	w0, w23
    65f4:	ldp	x19, x20, [sp, #16]
    65f8:	ldp	x23, x24, [sp, #48]
    65fc:	ldp	x29, x30, [sp], #112
    6600:	ret
    6604:	mov	w23, #0x1                   	// #1
    6608:	b	65f0 <grub_show_menu+0x20b0>
    660c:	ldp	x21, x22, [sp, #32]
    6610:	ldp	x25, x26, [sp, #64]
    6614:	ldp	x27, x28, [sp, #80]
    6618:	b	65f0 <grub_show_menu+0x20b0>
    661c:	ldp	x21, x22, [sp, #32]
    6620:	ldp	x25, x26, [sp, #64]
    6624:	ldp	x27, x28, [sp, #80]
    6628:	b	65f0 <grub_show_menu+0x20b0>

000000000000662c <grub_menu_entry_run>:
    662c:	stp	x29, x30, [sp, #-176]!
    6630:	mov	x29, sp
    6634:	stp	x19, x20, [sp, #16]
    6638:	mov	x20, x0
    663c:	mov	x0, #0x0                   	// #0
    6640:	bl	28f0 <grub_auth_check_authentication>
    6644:	str	w0, [sp, #108]
    6648:	cbnz	w0, 6848 <grub_menu_entry_run+0x21c>
    664c:	mov	x0, #0x38                  	// #56
    6650:	bl	0 <grub_zalloc>
    6654:	mov	x19, x0
    6658:	cbz	x0, 68a0 <grub_menu_entry_run+0x274>
    665c:	ldr	w0, [x20, #68]
    6660:	str	w0, [x19, #36]
    6664:	mov	w0, #0x1                   	// #1
    6668:	str	w0, [x19, #8]
    666c:	mov	x0, #0x18                  	// #24
    6670:	bl	0 <grub_malloc>
    6674:	mov	x1, x0
    6678:	str	x0, [x19]
    667c:	cbz	x0, 685c <grub_menu_entry_run+0x230>
    6680:	mov	x0, x19
    6684:	bl	5330 <grub_show_menu+0xdf0>
    6688:	cbz	w0, 685c <grub_menu_entry_run+0x230>
    668c:	stp	x21, x22, [sp, #32]
    6690:	stp	x23, x24, [sp, #48]
    6694:	stp	x25, x26, [sp, #64]
    6698:	stp	x27, x28, [sp, #80]
    669c:	mov	w2, #0x0                   	// #0
    66a0:	ldr	x1, [x20, #40]
    66a4:	mov	x0, x19
    66a8:	bl	6134 <grub_show_menu+0x1bf4>
    66ac:	str	wzr, [x19, #12]
    66b0:	str	wzr, [x19, #16]
    66b4:	str	wzr, [x19, #20]
    66b8:	ldr	w0, [x19, #48]
    66bc:	cbz	w0, 66e8 <grub_menu_entry_run+0xbc>
    66c0:	ldr	w1, [sp, #108]
    66c4:	ldr	x2, [x19, #40]
    66c8:	ubfiz	x0, x1, #3, #32
    66cc:	sub	x0, x0, w1, uxtw
    66d0:	add	x0, x2, x0, lsl #3
    66d4:	str	wzr, [x0, #8]
    66d8:	add	w1, w1, #0x1
    66dc:	ldr	w0, [x19, #48]
    66e0:	cmp	w1, w0
    66e4:	b.cc	66c4 <grub_menu_entry_run+0x98>  // b.lo, b.ul, b.last
    66e8:	str	xzr, [x19, #40]
    66ec:	ldr	x0, [x19, #40]
    66f0:	bl	0 <grub_free>
    66f4:	str	wzr, [x19, #48]
    66f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    66fc:	ldr	x0, [x0]
    6700:	ldr	x1, [x0]
    6704:	cbz	x1, 671c <grub_menu_entry_run+0xf0>
    6708:	ldr	w0, [x19, #48]
    670c:	add	w0, w0, #0x1
    6710:	str	w0, [x19, #48]
    6714:	ldr	x1, [x1]
    6718:	cbnz	x1, 6708 <grub_menu_entry_run+0xdc>
    671c:	ldr	w0, [x19, #8]
    6720:	cbz	w0, 677c <grub_menu_entry_run+0x150>
    6724:	ldr	w21, [sp, #108]
    6728:	ubfiz	x20, x21, #1, #32
    672c:	add	x20, x20, w21, uxtw
    6730:	lsl	x20, x20, #3
    6734:	ldr	x0, [x19]
    6738:	add	x0, x0, x20
    673c:	ldr	x0, [x0, #16]
    6740:	bl	0 <grub_free>
    6744:	ldr	x22, [x19]
    6748:	add	x22, x22, x20
    674c:	ldr	w0, [x19, #48]
    6750:	lsl	x0, x0, #3
    6754:	bl	0 <grub_zalloc>
    6758:	str	x0, [x22, #16]
    675c:	ldr	x0, [x19]
    6760:	add	x20, x0, x20
    6764:	ldr	x0, [x20, #16]
    6768:	cbz	x0, 6878 <grub_menu_entry_run+0x24c>
    676c:	add	w21, w21, #0x1
    6770:	ldr	w0, [x19, #8]
    6774:	cmp	w0, w21
    6778:	b.hi	6728 <grub_menu_entry_run+0xfc>  // b.pmore
    677c:	ldr	w1, [x19, #48]
    6780:	lsl	x0, x1, #3
    6784:	sub	x0, x0, x1
    6788:	lsl	x0, x0, #3
    678c:	bl	0 <grub_zalloc>
    6790:	str	x0, [x19, #40]
    6794:	cbz	x0, 68ac <grub_menu_entry_run+0x280>
    6798:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    679c:	ldr	x0, [x0]
    67a0:	ldr	x1, [x0]
    67a4:	cbz	x1, 67d4 <grub_menu_entry_run+0x1a8>
    67a8:	ldr	w2, [sp, #108]
    67ac:	ubfiz	x0, x2, #3, #32
    67b0:	sub	x0, x0, w2, uxtw
    67b4:	ldr	x3, [x19, #40]
    67b8:	str	x1, [x3, x0, lsl #3]
    67bc:	ldr	x3, [x19, #40]
    67c0:	add	x0, x3, x0, lsl #3
    67c4:	str	wzr, [x0, #8]
    67c8:	add	w2, w2, #0x1
    67cc:	ldr	x1, [x1]
    67d0:	cbnz	x1, 67ac <grub_menu_entry_run+0x180>
    67d4:	ldr	w0, [x19, #48]
    67d8:	cbz	w0, 6818 <grub_menu_entry_run+0x1ec>
    67dc:	ldr	w20, [sp, #108]
    67e0:	mov	w21, #0x1                   	// #1
    67e4:	ubfiz	x0, x20, #3, #32
    67e8:	sub	x0, x0, w20, uxtw
    67ec:	ldr	x1, [x19, #40]
    67f0:	add	x2, x1, x0, lsl #3
    67f4:	ldr	x3, [x1, x0, lsl #3]
    67f8:	add	x2, x2, #0xc
    67fc:	mov	w1, w21
    6800:	mov	w0, #0x0                   	// #0
    6804:	bl	84e0 <grub_menu_init_page>
    6808:	add	w20, w20, #0x1
    680c:	ldr	w0, [x19, #48]
    6810:	cmp	w0, w20
    6814:	b.hi	67e4 <grub_menu_entry_run+0x1b8>  // b.pmore
    6818:	mov	w5, #0x2                   	// #2
    681c:	mov	w4, #0x1                   	// #1
    6820:	mov	w3, w4
    6824:	mov	w2, #0x0                   	// #0
    6828:	mov	w1, #0x0                   	// #0
    682c:	mov	x0, x19
    6830:	bl	5aec <grub_show_menu+0x15ac>
    6834:	ldr	w0, [x19, #48]
    6838:	cbz	w0, 690c <grub_menu_entry_run+0x2e0>
    683c:	ldr	w20, [sp, #108]
    6840:	mov	w21, #0x1                   	// #1
    6844:	b	68f0 <grub_menu_entry_run+0x2c4>
    6848:	bl	0 <grub_print_error>
    684c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6850:	ldr	x0, [x0]
    6854:	str	wzr, [x0]
    6858:	b	68a0 <grub_menu_entry_run+0x274>
    685c:	mov	x0, x19
    6860:	bl	5260 <grub_show_menu+0xd20>
    6864:	b	68a0 <grub_menu_entry_run+0x274>
    6868:	mov	x19, x28
    686c:	mov	w28, w27
    6870:	mov	w24, w23
    6874:	b	66ec <grub_menu_entry_run+0xc0>
    6878:	bl	0 <grub_print_error>
    687c:	mov	x0, x19
    6880:	bl	5260 <grub_show_menu+0xd20>
    6884:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6888:	ldr	x0, [x0]
    688c:	str	wzr, [x0]
    6890:	ldp	x21, x22, [sp, #32]
    6894:	ldp	x23, x24, [sp, #48]
    6898:	ldp	x25, x26, [sp, #64]
    689c:	ldp	x27, x28, [sp, #80]
    68a0:	ldp	x19, x20, [sp, #16]
    68a4:	ldp	x29, x30, [sp], #176
    68a8:	ret
    68ac:	bl	0 <grub_print_error>
    68b0:	mov	x0, x19
    68b4:	bl	5260 <grub_show_menu+0xd20>
    68b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    68bc:	ldr	x0, [x0]
    68c0:	str	wzr, [x0]
    68c4:	ldp	x21, x22, [sp, #32]
    68c8:	ldp	x23, x24, [sp, #48]
    68cc:	ldp	x25, x26, [sp, #64]
    68d0:	ldp	x27, x28, [sp, #80]
    68d4:	b	68a0 <grub_menu_entry_run+0x274>
    68d8:	mov	w1, w21
    68dc:	blr	x2
    68e0:	add	w20, w20, #0x1
    68e4:	ldr	w0, [x19, #48]
    68e8:	cmp	w0, w20
    68ec:	b.ls	690c <grub_menu_entry_run+0x2e0>  // b.plast
    68f0:	ldr	x1, [x19, #40]
    68f4:	ubfiz	x0, x20, #3, #32
    68f8:	sub	x0, x0, w20, uxtw
    68fc:	ldr	x0, [x1, x0, lsl #3]
    6900:	ldr	x2, [x0, #96]
    6904:	cbnz	x2, 68d8 <grub_menu_entry_run+0x2ac>
    6908:	b	68e0 <grub_menu_entry_run+0x2b4>
    690c:	str	wzr, [sp, #136]
    6910:	mov	w0, #0x20                  	// #32
    6914:	str	w0, [sp, #116]
    6918:	mov	w27, w28
    691c:	mov	x28, x19
    6920:	mov	w23, w24
    6924:	b	6fec <grub_menu_entry_run+0x9c0>
    6928:	ldr	w0, [x28, #48]
    692c:	cbz	w0, 6a38 <grub_menu_entry_run+0x40c>
    6930:	ldr	w26, [sp, #108]
    6934:	str	w19, [sp, #120]
    6938:	b	6988 <grub_menu_entry_run+0x35c>
    693c:	add	w21, w21, #0x1
    6940:	ldr	w0, [x19, #32]
    6944:	cmp	w21, w0
    6948:	b.lt	69e0 <grub_menu_entry_run+0x3b4>  // b.tstop
    694c:	ldr	x0, [x24, x20, lsl #3]
    6950:	bfxil	w27, w25, #0, #16
    6954:	ldr	w1, [sp, #112]
    6958:	bfi	w27, w1, #16, #16
    695c:	ldr	x2, [x0, #72]
    6960:	mov	w1, w27
    6964:	blr	x2
    6968:	ldr	x0, [x24, x20, lsl #3]
    696c:	ldr	x1, [x0, #104]
    6970:	cbz	x1, 6978 <grub_menu_entry_run+0x34c>
    6974:	blr	x1
    6978:	add	w26, w26, #0x1
    697c:	ldr	w0, [x28, #48]
    6980:	cmp	w26, w0
    6984:	b.cs	6a34 <grub_menu_entry_run+0x408>  // b.hs, b.nlast
    6988:	ubfiz	x20, x26, #3, #32
    698c:	sub	x20, x20, w26, uxtw
    6990:	ldr	x24, [x28, #40]
    6994:	add	x19, x24, x20, lsl #3
    6998:	ldr	x0, [x24, x20, lsl #3]
    699c:	ldr	x1, [x0, #64]
    69a0:	blr	x1
    69a4:	and	w25, w0, #0xffff
    69a8:	lsr	w0, w0, #16
    69ac:	str	w0, [sp, #112]
    69b0:	ldr	x0, [x24, x20, lsl #3]
    69b4:	ldrh	w1, [x19, #28]
    69b8:	and	w23, w23, #0xffff0000
    69bc:	bfi	w23, w1, #16, #16
    69c0:	ldr	x2, [x0, #72]
    69c4:	mov	w1, w23
    69c8:	blr	x2
    69cc:	ldr	w0, [x19, #32]
    69d0:	mov	w21, #0x0                   	// #0
    69d4:	cmp	w0, #0x0
    69d8:	b.gt	69f8 <grub_menu_entry_run+0x3cc>
    69dc:	b	694c <grub_menu_entry_run+0x320>
    69e0:	ldr	x1, [x19]
    69e4:	mov	w0, #0xa                   	// #10
    69e8:	bl	a100 <grub_putcode>
    69ec:	ldr	w0, [x19, #32]
    69f0:	cmp	w21, w0
    69f4:	b.ge	694c <grub_menu_entry_run+0x320>  // b.tcont
    69f8:	ldr	w22, [sp, #108]
    69fc:	ldr	x0, [x19]
    6a00:	ldr	x1, [x0, #56]
    6a04:	blr	x1
    6a08:	ands	w0, w0, #0xffff
    6a0c:	mov	w1, #0x50                  	// #80
    6a10:	csel	w0, w0, w1, ne  // ne = any
    6a14:	sub	w0, w0, #0x1
    6a18:	cmp	w22, w0
    6a1c:	b.cs	693c <grub_menu_entry_run+0x310>  // b.hs, b.nlast
    6a20:	ldr	x1, [x19]
    6a24:	ldr	w0, [sp, #116]
    6a28:	bl	a100 <grub_putcode>
    6a2c:	add	w22, w22, #0x1
    6a30:	b	69fc <grub_menu_entry_run+0x3d0>
    6a34:	ldr	w19, [sp, #120]
    6a38:	str	wzr, [x28, #32]
    6a3c:	b	6ffc <grub_menu_entry_run+0x9d0>
    6a40:	mov	x0, x28
    6a44:	bl	5260 <grub_show_menu+0xd20>
    6a48:	ldp	x21, x22, [sp, #32]
    6a4c:	ldp	x23, x24, [sp, #48]
    6a50:	ldp	x25, x26, [sp, #64]
    6a54:	ldp	x27, x28, [sp, #80]
    6a58:	b	68a0 <grub_menu_entry_run+0x274>
    6a5c:	mov	w0, #0x47                  	// #71
    6a60:	movk	w0, #0x80, lsl #16
    6a64:	cmp	w19, w0
    6a68:	b.eq	710c <grub_menu_entry_run+0xae0>  // b.none
    6a6c:	b.le	6ac8 <grub_menu_entry_run+0x49c>
    6a70:	mov	w0, #0x50                  	// #80
    6a74:	movk	w0, #0x80, lsl #16
    6a78:	cmp	w19, w0
    6a7c:	b.eq	6f24 <grub_menu_entry_run+0x8f8>  // b.none
    6a80:	b.le	6d18 <grub_menu_entry_run+0x6ec>
    6a84:	mov	w0, #0x61                  	// #97
    6a88:	movk	w0, #0x200, lsl #16
    6a8c:	cmp	w19, w0
    6a90:	b.eq	710c <grub_menu_entry_run+0xae0>  // b.none
    6a94:	add	w0, w0, #0x1
    6a98:	cmp	w19, w0
    6a9c:	b.eq	6d94 <grub_menu_entry_run+0x768>  // b.none
    6aa0:	mov	w0, #0x53                  	// #83
    6aa4:	movk	w0, #0x80, lsl #16
    6aa8:	cmp	w19, w0
    6aac:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6ab0:	mov	w1, #0x1                   	// #1
    6ab4:	mov	x0, x28
    6ab8:	bl	5e80 <grub_show_menu+0x1940>
    6abc:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6ac0:	mov	x19, x28
    6ac4:	b	76b8 <grub_menu_entry_run+0x108c>
    6ac8:	cmp	w19, #0xd
    6acc:	b.eq	6c84 <grub_menu_entry_run+0x658>  // b.none
    6ad0:	b.le	6c74 <grub_menu_entry_run+0x648>
    6ad4:	mov	w0, #0x3c                  	// #60
    6ad8:	movk	w0, #0x80, lsl #16
    6adc:	cmp	w19, w0
    6ae0:	b.eq	7740 <grub_menu_entry_run+0x1114>  // b.none
    6ae4:	add	w0, w0, #0x8
    6ae8:	cmp	w19, w0
    6aec:	b.ne	6cf4 <grub_menu_entry_run+0x6c8>  // b.any
    6af0:	mov	x19, x28
    6af4:	mov	w28, w27
    6af8:	mov	w24, w23
    6afc:	str	xzr, [sp, #168]
    6b00:	bl	b4cc <grub_cls>
    6b04:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6b08:	ldr	x0, [x0]
    6b0c:	bl	0 <grub_printf>
    6b10:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6b14:	ldr	x0, [x0]
    6b18:	bl	0 <grub_printf_>
    6b1c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6b20:	ldr	x0, [x0]
    6b24:	bl	0 <grub_printf>
    6b28:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6b2c:	ldr	x0, [x0]
    6b30:	ldr	w0, [x0]
    6b34:	str	w0, [sp, #112]
    6b38:	ldr	w0, [x19, #36]
    6b3c:	mov	x26, #0x0                   	// #0
    6b40:	cbnz	w0, 775c <grub_menu_entry_run+0x1130>
    6b44:	ldr	w0, [x19, #8]
    6b48:	cmp	w0, #0x0
    6b4c:	b.le	7778 <grub_menu_entry_run+0x114c>
    6b50:	mov	w22, w21
    6b54:	mov	x20, #0x0                   	// #0
    6b58:	mov	x23, #0x0                   	// #0
    6b5c:	ldr	x0, [x19]
    6b60:	add	x1, x0, x20
    6b64:	ldrsw	x1, [x1, #8]
    6b68:	ldr	x0, [x0, x20]
    6b6c:	bl	bde0 <grub_get_num_of_utf8_bytes>
    6b70:	add	x0, x0, #0x1
    6b74:	add	x23, x23, x0
    6b78:	add	w22, w22, #0x1
    6b7c:	add	x20, x20, #0x18
    6b80:	ldr	w0, [x19, #8]
    6b84:	cmp	w22, w0
    6b88:	b.lt	6b5c <grub_menu_entry_run+0x530>  // b.tstop
    6b8c:	add	x0, x23, #0x1
    6b90:	bl	0 <grub_malloc>
    6b94:	mov	x27, x0
    6b98:	cbz	x0, 66ec <grub_menu_entry_run+0xc0>
    6b9c:	ldr	w0, [x19, #8]
    6ba0:	cmp	w0, #0x0
    6ba4:	b.le	7780 <grub_menu_entry_run+0x1154>
    6ba8:	mov	x22, #0x0                   	// #0
    6bac:	mov	x20, #0x0                   	// #0
    6bb0:	mov	w25, #0xa                   	// #10
    6bb4:	ldr	x0, [x19]
    6bb8:	add	x1, x0, x22
    6bbc:	sub	x3, x23, x20
    6bc0:	add	x2, x27, x20
    6bc4:	ldrsw	x1, [x1, #8]
    6bc8:	ldr	x0, [x0, x22]
    6bcc:	bl	bd20 <grub_ucs4_to_utf8>
    6bd0:	add	x0, x0, x20
    6bd4:	add	x20, x0, #0x1
    6bd8:	strb	w25, [x27, x0]
    6bdc:	add	w21, w21, #0x1
    6be0:	add	x22, x22, #0x18
    6be4:	ldr	w0, [x19, #8]
    6be8:	cmp	w21, w0
    6bec:	b.lt	6bb4 <grub_menu_entry_run+0x588>  // b.tstop
    6bf0:	strb	wzr, [x27, x20]
    6bf4:	add	x2, sp, #0xa8
    6bf8:	mov	w1, #0x0                   	// #0
    6bfc:	mov	x0, x27
    6c00:	bl	108f0 <grub_script_execute_new_scope>
    6c04:	mov	x0, x27
    6c08:	bl	0 <grub_free>
    6c0c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6c10:	ldr	x0, [x0]
    6c14:	ldr	w0, [x0]
    6c18:	ldr	w1, [sp, #112]
    6c1c:	cmp	w1, w0
    6c20:	b.ne	7788 <grub_menu_entry_run+0x115c>  // b.any
    6c24:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6c28:	ldr	x0, [x0]
    6c2c:	ldr	w0, [x0]
    6c30:	cbz	w0, 7790 <grub_menu_entry_run+0x1164>
    6c34:	ldr	w0, [x19, #36]
    6c38:	cbz	w0, 6c5c <grub_menu_entry_run+0x630>
    6c3c:	cbz	x26, 6c48 <grub_menu_entry_run+0x61c>
    6c40:	ldr	w0, [x26]
    6c44:	cbnz	w0, 77d4 <grub_menu_entry_run+0x11a8>
    6c48:	bl	b620 <grub_env_context_close>
    6c4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6c50:	ldr	x0, [x0]
    6c54:	ldr	w0, [x0]
    6c58:	cbz	w0, 66ec <grub_menu_entry_run+0xc0>
    6c5c:	bl	0 <grub_print_error>
    6c60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6c64:	ldr	x0, [x0]
    6c68:	str	wzr, [x0]
    6c6c:	bl	4310 <grub_wait_after_message>
    6c70:	b	66ec <grub_menu_entry_run+0xc0>
    6c74:	cmp	w19, #0x9
    6c78:	b.eq	7134 <grub_menu_entry_run+0xb08>  // b.none
    6c7c:	cmp	w19, #0xa
    6c80:	b.ne	6ca4 <grub_menu_entry_run+0x678>  // b.any
    6c84:	mov	w2, #0x1                   	// #1
    6c88:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    6c8c:	ldr	x1, [x0]
    6c90:	mov	x0, x28
    6c94:	bl	6134 <grub_show_menu+0x1bf4>
    6c98:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6c9c:	mov	x19, x28
    6ca0:	b	76b8 <grub_menu_entry_run+0x108c>
    6ca4:	cmp	w19, #0x8
    6ca8:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6cac:	ldr	w20, [x28, #12]
    6cb0:	ldr	w21, [x28, #20]
    6cb4:	mov	w1, #0x0                   	// #0
    6cb8:	mov	x0, x28
    6cbc:	bl	5be4 <grub_show_menu+0x16a4>
    6cc0:	cbz	w0, 7820 <grub_menu_entry_run+0x11f4>
    6cc4:	ldr	w0, [x28, #12]
    6cc8:	cmp	w20, w0
    6ccc:	b.ne	6cdc <grub_menu_entry_run+0x6b0>  // b.any
    6cd0:	ldr	w0, [x28, #20]
    6cd4:	cmp	w21, w0
    6cd8:	b.eq	6fe8 <grub_menu_entry_run+0x9bc>  // b.none
    6cdc:	mov	w1, #0x1                   	// #1
    6ce0:	mov	x0, x28
    6ce4:	bl	5e80 <grub_show_menu+0x1940>
    6ce8:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6cec:	mov	x19, x28
    6cf0:	b	76b8 <grub_menu_entry_run+0x108c>
    6cf4:	cmp	w19, #0x1b
    6cf8:	b.ne	77f0 <grub_menu_entry_run+0x11c4>  // b.any
    6cfc:	mov	x0, x28
    6d00:	bl	5260 <grub_show_menu+0xd20>
    6d04:	ldp	x21, x22, [sp, #32]
    6d08:	ldp	x23, x24, [sp, #48]
    6d0c:	ldp	x25, x26, [sp, #64]
    6d10:	ldp	x27, x28, [sp, #80]
    6d14:	b	68a0 <grub_menu_entry_run+0x274>
    6d18:	mov	w0, #0x4d                  	// #77
    6d1c:	movk	w0, #0x80, lsl #16
    6d20:	cmp	w19, w0
    6d24:	b.eq	6e9c <grub_menu_entry_run+0x870>  // b.none
    6d28:	b.le	6d78 <grub_menu_entry_run+0x74c>
    6d2c:	mov	w0, #0x4f                  	// #79
    6d30:	movk	w0, #0x80, lsl #16
    6d34:	cmp	w19, w0
    6d38:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6d3c:	ldrsw	x0, [x28, #20]
    6d40:	ldr	x1, [x28]
    6d44:	add	x0, x0, x0, lsl #1
    6d48:	add	x0, x1, x0, lsl #3
    6d4c:	ldr	w1, [x0, #8]
    6d50:	mov	x0, x28
    6d54:	bl	5b7c <grub_show_menu+0x163c>
    6d58:	mov	w5, #0x0                   	// #0
    6d5c:	mov	w4, #0x0                   	// #0
    6d60:	mov	w3, #0x0                   	// #0
    6d64:	mov	w2, #0x0                   	// #0
    6d68:	ldr	w1, [x28, #8]
    6d6c:	mov	x0, x28
    6d70:	bl	5aec <grub_show_menu+0x15ac>
    6d74:	b	6fe8 <grub_menu_entry_run+0x9bc>
    6d78:	mov	w0, #0x48                  	// #72
    6d7c:	movk	w0, #0x80, lsl #16
    6d80:	cmp	w19, w0
    6d84:	b.eq	7074 <grub_menu_entry_run+0xa48>  // b.none
    6d88:	add	w0, w0, #0x3
    6d8c:	cmp	w19, w0
    6d90:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6d94:	mov	w1, #0x1                   	// #1
    6d98:	mov	x0, x28
    6d9c:	bl	5be4 <grub_show_menu+0x16a4>
    6da0:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6da4:	mov	x19, x28
    6da8:	b	76b8 <grub_menu_entry_run+0x108c>
    6dac:	mov	w0, #0x68                  	// #104
    6db0:	movk	w0, #0x200, lsl #16
    6db4:	cmp	w19, w0
    6db8:	b.eq	6cac <grub_menu_entry_run+0x680>  // b.none
    6dbc:	b.le	6e80 <grub_menu_entry_run+0x854>
    6dc0:	mov	w0, #0x69                  	// #105
    6dc4:	movk	w0, #0x200, lsl #16
    6dc8:	cmp	w19, w0
    6dcc:	b.eq	7134 <grub_menu_entry_run+0xb08>  // b.none
    6dd0:	add	w0, w0, #0x2
    6dd4:	cmp	w19, w0
    6dd8:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6ddc:	ldr	x25, [x28, #24]
    6de0:	cmp	x25, #0x0
    6de4:	mov	w0, #0x6b                  	// #107
    6de8:	movk	w0, #0x200, lsl #16
    6dec:	ldr	w1, [sp, #136]
    6df0:	ccmp	w1, w0, #0x4, ne  // ne = any
    6df4:	b.eq	7564 <grub_menu_entry_run+0xf38>  // b.none
    6df8:	strb	wzr, [x25]
    6dfc:	ldrsw	x0, [x28, #20]
    6e00:	add	x0, x0, x0, lsl #1
    6e04:	ldr	x22, [x28]
    6e08:	add	x22, x22, x0, lsl #3
    6e0c:	ldr	w20, [x22, #8]
    6e10:	ldr	w0, [x28, #12]
    6e14:	sub	w20, w20, w0
    6e18:	mov	x0, x25
    6e1c:	bl	0 <grub_strlen>
    6e20:	mov	w21, w0
    6e24:	cmp	w20, #0x0
    6e28:	b.gt	7588 <grub_menu_entry_run+0xf5c>
    6e2c:	ldr	w0, [x28, #20]
    6e30:	add	w0, w0, #0x1
    6e34:	ldr	w1, [x28, #8]
    6e38:	cmp	w0, w1
    6e3c:	b.ge	6fe8 <grub_menu_entry_run+0x9bc>  // b.tcont
    6e40:	add	w1, w21, #0x2
    6e44:	sxtw	x1, w1
    6e48:	mov	x0, x25
    6e4c:	bl	0 <grub_realloc>
    6e50:	cbz	x0, 7830 <grub_menu_entry_run+0x1204>
    6e54:	mov	w1, #0xa                   	// #10
    6e58:	strb	w1, [x0, w21, sxtw]
    6e5c:	add	x21, x0, w21, sxtw
    6e60:	strb	wzr, [x21, #1]
    6e64:	str	x0, [x28, #24]
    6e68:	mov	w1, #0x1                   	// #1
    6e6c:	mov	x0, x28
    6e70:	bl	5e80 <grub_show_menu+0x1940>
    6e74:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6e78:	mov	x19, x28
    6e7c:	b	76b8 <grub_menu_entry_run+0x108c>
    6e80:	mov	w0, #0x65                  	// #101
    6e84:	movk	w0, #0x200, lsl #16
    6e88:	cmp	w19, w0
    6e8c:	b.eq	6d3c <grub_menu_entry_run+0x710>  // b.none
    6e90:	add	w0, w0, #0x1
    6e94:	cmp	w19, w0
    6e98:	b.ne	6f00 <grub_menu_entry_run+0x8d4>  // b.any
    6e9c:	ldr	w1, [x28, #20]
    6ea0:	sbfiz	x2, x1, #1, #32
    6ea4:	add	x2, x2, w1, sxtw
    6ea8:	ldr	x4, [x28]
    6eac:	add	x0, x4, x2, lsl #3
    6eb0:	ldr	w3, [x28, #12]
    6eb4:	ldr	w0, [x0, #8]
    6eb8:	cmp	w3, w0
    6ebc:	b.lt	70d8 <grub_menu_entry_run+0xaac>  // b.tstop
    6ec0:	add	w1, w1, #0x1
    6ec4:	ldr	w0, [x28, #8]
    6ec8:	cmp	w0, w1
    6ecc:	b.le	6ed8 <grub_menu_entry_run+0x8ac>
    6ed0:	str	wzr, [x28, #12]
    6ed4:	str	w1, [x28, #20]
    6ed8:	ldr	w0, [x28, #12]
    6edc:	str	w0, [x28, #16]
    6ee0:	mov	w5, #0x0                   	// #0
    6ee4:	mov	w4, #0x0                   	// #0
    6ee8:	mov	w3, #0x0                   	// #0
    6eec:	mov	w2, #0x0                   	// #0
    6ef0:	ldr	w1, [x28, #8]
    6ef4:	mov	x0, x28
    6ef8:	bl	5aec <grub_show_menu+0x15ac>
    6efc:	b	6fe8 <grub_menu_entry_run+0x9bc>
    6f00:	mov	w0, #0x64                  	// #100
    6f04:	movk	w0, #0x200, lsl #16
    6f08:	cmp	w19, w0
    6f0c:	b.eq	6ab0 <grub_menu_entry_run+0x484>  // b.none
    6f10:	b	6fe8 <grub_menu_entry_run+0x9bc>
    6f14:	mov	w0, #0x6e                  	// #110
    6f18:	movk	w0, #0x200, lsl #16
    6f1c:	cmp	w19, w0
    6f20:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6f24:	ldr	w0, [x28, #20]
    6f28:	ldr	w1, [x28, #8]
    6f2c:	sub	w1, w1, #0x1
    6f30:	cmp	w0, w1
    6f34:	b.ge	70b8 <grub_menu_entry_run+0xa8c>  // b.tcont
    6f38:	sbfiz	x2, x0, #1, #32
    6f3c:	add	x2, x2, w0, sxtw
    6f40:	ldr	x1, [x28]
    6f44:	add	x2, x1, x2, lsl #3
    6f48:	add	w0, w0, #0x1
    6f4c:	str	w0, [x28, #20]
    6f50:	ldr	w0, [x28, #16]
    6f54:	ldr	w1, [x2, #32]
    6f58:	cmp	w1, w0
    6f5c:	str	wzr, [x28, #12]
    6f60:	csel	w1, w1, w0, le
    6f64:	mov	x0, x28
    6f68:	bl	5b7c <grub_show_menu+0x163c>
    6f6c:	mov	w5, #0x0                   	// #0
    6f70:	mov	w4, #0x0                   	// #0
    6f74:	mov	w3, #0x0                   	// #0
    6f78:	mov	w2, #0x0                   	// #0
    6f7c:	ldr	w1, [x28, #8]
    6f80:	mov	x0, x28
    6f84:	bl	5aec <grub_show_menu+0x15ac>
    6f88:	b	6fe8 <grub_menu_entry_run+0x9bc>
    6f8c:	mov	w0, #0x78                  	// #120
    6f90:	movk	w0, #0x200, lsl #16
    6f94:	cmp	w19, w0
    6f98:	b.eq	6af0 <grub_menu_entry_run+0x4c4>  // b.none
    6f9c:	add	w0, w0, #0x1
    6fa0:	cmp	w19, w0
    6fa4:	b.ne	6fe8 <grub_menu_entry_run+0x9bc>  // b.any
    6fa8:	ldr	x1, [x28, #24]
    6fac:	cbz	x1, 6fe8 <grub_menu_entry_run+0x9bc>
    6fb0:	mov	w2, #0x1                   	// #1
    6fb4:	mov	x0, x28
    6fb8:	bl	6134 <grub_show_menu+0x1bf4>
    6fbc:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    6fc0:	mov	x19, x28
    6fc4:	b	76b8 <grub_menu_entry_run+0x108c>
    6fc8:	str	wzr, [x28, #12]
    6fcc:	mov	w5, #0x0                   	// #0
    6fd0:	mov	w4, #0x0                   	// #0
    6fd4:	mov	w3, #0x0                   	// #0
    6fd8:	mov	w2, #0x0                   	// #0
    6fdc:	ldr	w1, [x28, #8]
    6fe0:	mov	x0, x28
    6fe4:	bl	5aec <grub_show_menu+0x15ac>
    6fe8:	str	w19, [sp, #136]
    6fec:	bl	0 <grub_getkey>
    6ff0:	mov	w19, w0
    6ff4:	ldr	w0, [x28, #32]
    6ff8:	cbnz	w0, 6928 <grub_menu_entry_run+0x2fc>
    6ffc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7000:	ldr	x0, [x0]
    7004:	ldr	w21, [x0]
    7008:	cbnz	w21, 6a40 <grub_menu_entry_run+0x414>
    700c:	mov	w0, #0x63                  	// #99
    7010:	movk	w0, #0x200, lsl #16
    7014:	cmp	w19, w0
    7018:	b.eq	7740 <grub_menu_entry_run+0x1114>  // b.none
    701c:	b.le	6a5c <grub_menu_entry_run+0x430>
    7020:	mov	w0, #0x6c                  	// #108
    7024:	movk	w0, #0x200, lsl #16
    7028:	cmp	w19, w0
    702c:	b.eq	6868 <grub_menu_entry_run+0x23c>  // b.none
    7030:	cmp	w19, w0
    7034:	b.le	6dac <grub_menu_entry_run+0x780>
    7038:	mov	w0, #0x75                  	// #117
    703c:	movk	w0, #0x200, lsl #16
    7040:	cmp	w19, w0
    7044:	b.gt	6f8c <grub_menu_entry_run+0x960>
    7048:	mov	w0, #0x71                  	// #113
    704c:	movk	w0, #0x200, lsl #16
    7050:	cmp	w19, w0
    7054:	b.gt	6fe8 <grub_menu_entry_run+0x9bc>
    7058:	mov	w0, #0x6f                  	// #111
    705c:	movk	w0, #0x200, lsl #16
    7060:	cmp	w19, w0
    7064:	b.eq	769c <grub_menu_entry_run+0x1070>  // b.none
    7068:	add	w0, w0, #0x1
    706c:	cmp	w19, w0
    7070:	b.ne	6f14 <grub_menu_entry_run+0x8e8>  // b.any
    7074:	ldr	w0, [x28, #20]
    7078:	cmp	w0, #0x0
    707c:	b.le	6fc8 <grub_menu_entry_run+0x99c>
    7080:	sub	w0, w0, #0x1
    7084:	str	w0, [x28, #20]
    7088:	ldr	x1, [x28]
    708c:	sbfiz	x2, x0, #1, #32
    7090:	add	x0, x2, w0, sxtw
    7094:	add	x0, x1, x0, lsl #3
    7098:	ldr	w1, [x28, #16]
    709c:	ldr	w0, [x0, #8]
    70a0:	cmp	w0, w1
    70a4:	str	wzr, [x28, #12]
    70a8:	csel	w1, w0, w1, le
    70ac:	mov	x0, x28
    70b0:	bl	5b7c <grub_show_menu+0x163c>
    70b4:	b	6fcc <grub_menu_entry_run+0x9a0>
    70b8:	ldr	x1, [x28]
    70bc:	sbfiz	x2, x0, #1, #32
    70c0:	add	x0, x2, w0, sxtw
    70c4:	add	x0, x1, x0, lsl #3
    70c8:	ldr	w1, [x0, #8]
    70cc:	mov	x0, x28
    70d0:	bl	5b7c <grub_show_menu+0x163c>
    70d4:	b	6f6c <grub_menu_entry_run+0x940>
    70d8:	ldr	x2, [x4, x2, lsl #3]
    70dc:	add	x1, x2, w3, sxtw #2
    70e0:	add	x1, x1, #0x4
    70e4:	add	x0, x2, w0, sxtw #2
    70e8:	bl	df30 <grub_unicode_get_comb_end>
    70ec:	ldrsw	x1, [x28, #20]
    70f0:	ldr	x2, [x28]
    70f4:	add	x1, x1, x1, lsl #1
    70f8:	ldr	x1, [x2, x1, lsl #3]
    70fc:	sub	x0, x0, x1
    7100:	asr	x0, x0, #2
    7104:	str	w0, [x28, #12]
    7108:	b	6ed8 <grub_menu_entry_run+0x8ac>
    710c:	str	wzr, [x28, #16]
    7110:	str	wzr, [x28, #12]
    7114:	mov	w5, #0x0                   	// #0
    7118:	mov	w4, #0x0                   	// #0
    711c:	mov	w3, #0x0                   	// #0
    7120:	mov	w2, #0x0                   	// #0
    7124:	ldr	w1, [x28, #8]
    7128:	mov	x0, x28
    712c:	bl	5aec <grub_show_menu+0x15ac>
    7130:	b	6fe8 <grub_menu_entry_run+0x9bc>
    7134:	ldr	w0, [sp, #136]
    7138:	cmp	w0, w19
    713c:	b.ne	7150 <grub_menu_entry_run+0xb24>  // b.any
    7140:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7144:	ldr	x0, [x0]
    7148:	ldr	w21, [x0]
    714c:	add	w21, w21, #0x1
    7150:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7154:	ldr	x0, [x0]
    7158:	str	w21, [x0]
    715c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7160:	ldr	x1, [x0]
    7164:	str	xzr, [x1, #8]
    7168:	str	xzr, [x1, #16]
    716c:	str	xzr, [x1, #24]
    7170:	ldrsw	x0, [x28, #20]
    7174:	ldr	x2, [x28]
    7178:	add	x0, x0, x0, lsl #1
    717c:	ldrsw	x1, [x28, #12]
    7180:	ldr	x0, [x2, x0, lsl #3]
    7184:	bl	be54 <grub_ucs4_to_utf8_alloc>
    7188:	cbz	x0, 6fe8 <grub_menu_entry_run+0x9bc>
    718c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    7190:	ldr	x2, [x1]
    7194:	add	x1, sp, #0xa8
    7198:	bl	3668 <grub_normal_do_completion>
    719c:	str	x0, [sp, #128]
    71a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    71a4:	ldr	x0, [x0]
    71a8:	ldr	x0, [x0, #8]
    71ac:	cbz	x0, 7518 <grub_menu_entry_run+0xeec>
    71b0:	bl	0 <grub_strlen>
    71b4:	mov	x20, x0
    71b8:	add	x0, x0, #0x1
    71bc:	lsl	x0, x0, #2
    71c0:	bl	0 <grub_malloc>
    71c4:	str	x0, [sp, #120]
    71c8:	cbz	x0, 7224 <grub_menu_entry_run+0xbf8>
    71cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    71d0:	ldr	x0, [x0]
    71d4:	mov	x4, #0x0                   	// #0
    71d8:	mov	x3, x20
    71dc:	ldr	x2, [x0, #8]
    71e0:	mov	x1, x20
    71e4:	ldr	x20, [sp, #120]
    71e8:	mov	x0, x20
    71ec:	bl	bfb0 <grub_utf8_to_ucs4>
    71f0:	add	x25, x20, x0, lsl #2
    71f4:	str	wzr, [x20, x0, lsl #2]
    71f8:	ldr	w0, [sp, #168]
    71fc:	cbz	w0, 7518 <grub_menu_entry_run+0xeec>
    7200:	ldr	w0, [x28, #48]
    7204:	cbz	w0, 7518 <grub_menu_entry_run+0xeec>
    7208:	ldr	w26, [sp, #108]
    720c:	str	w19, [sp, #148]
    7210:	ldr	w24, [sp, #144]
    7214:	str	w27, [sp, #152]
    7218:	ldr	w27, [sp, #140]
    721c:	str	w23, [sp, #156]
    7220:	b	7360 <grub_menu_entry_run+0xd34>
    7224:	bl	0 <grub_print_error>
    7228:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    722c:	ldr	x0, [x0]
    7230:	str	wzr, [x0]
    7234:	b	6fe8 <grub_menu_entry_run+0x9bc>
    7238:	mov	w22, #0x50                  	// #80
    723c:	sub	w22, w22, #0x2
    7240:	sub	w0, w22, #0x6
    7244:	cmp	w22, #0xf
    7248:	csel	w22, w0, w22, hi  // hi = pmore
    724c:	mov	w21, w22
    7250:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7254:	ldr	x0, [x0]
    7258:	ldr	x20, [x0, #16]
    725c:	sub	x20, x20, #0x1
    7260:	add	x20, x20, x21
    7264:	udiv	x20, x20, x21
    7268:	ldr	x0, [x28, #40]
    726c:	ldr	x0, [x0, x19, lsl #3]
    7270:	ldr	x1, [x0, #64]
    7274:	blr	x1
    7278:	and	w1, w0, #0xffff
    727c:	str	w1, [sp, #112]
    7280:	lsr	w0, w0, #16
    7284:	str	w0, [sp, #136]
    7288:	mov	w0, #0x1                   	// #1
    728c:	str	w0, [x28, #32]
    7290:	ldr	x0, [x28, #40]
    7294:	add	x1, x0, x23
    7298:	ldr	x0, [x0, x19, lsl #3]
    729c:	ldrh	w1, [x1, #28]
    72a0:	and	w24, w24, #0xffff0000
    72a4:	bfi	w24, w1, #16, #16
    72a8:	ldr	x2, [x0, #72]
    72ac:	mov	w1, w24
    72b0:	blr	x2
    72b4:	ldr	x0, [x28, #40]
    72b8:	add	x23, x0, x23
    72bc:	ldr	w1, [x23, #32]
    72c0:	cmp	w1, #0x1
    72c4:	b.gt	7394 <grub_menu_entry_run+0xd68>
    72c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    72cc:	ldr	x0, [x0]
    72d0:	ldr	w1, [x0]
    72d4:	udiv	w0, w1, w20
    72d8:	msub	w20, w0, w20, w1
    72dc:	mul	w20, w20, w22
    72e0:	ldr	x0, [sp, #120]
    72e4:	add	x20, x0, x20, lsl #2
    72e8:	add	x21, x20, x21, lsl #2
    72ec:	cmp	x0, x20
    72f0:	b.eq	74dc <grub_menu_entry_run+0xeb0>  // b.none
    72f4:	ldr	x0, [x28, #40]
    72f8:	ldr	x1, [x0, x19, lsl #3]
    72fc:	mov	w0, #0x2190                	// #8592
    7300:	bl	a100 <grub_putcode>
    7304:	ldr	x0, [x28, #40]
    7308:	cmp	x25, x21
    730c:	ldr	x4, [x0, x19, lsl #3]
    7310:	mov	w3, #0x0                   	// #0
    7314:	mov	w2, #0x0                   	// #0
    7318:	csel	x1, x25, x21, ls  // ls = plast
    731c:	mov	x0, x20
    7320:	bl	afec <grub_print_ucs4>
    7324:	cmp	x25, x21
    7328:	b.hi	74f0 <grub_menu_entry_run+0xec4>  // b.pmore
    732c:	ldr	x0, [x28, #40]
    7330:	ldr	x0, [x0, x19, lsl #3]
    7334:	ldr	w1, [sp, #112]
    7338:	bfxil	w27, w1, #0, #16
    733c:	ldr	w1, [sp, #136]
    7340:	bfi	w27, w1, #16, #16
    7344:	ldr	x2, [x0, #72]
    7348:	mov	w1, w27
    734c:	blr	x2
    7350:	add	w26, w26, #0x1
    7354:	ldr	w0, [x28, #48]
    7358:	cmp	w26, w0
    735c:	b.cs	7504 <grub_menu_entry_run+0xed8>  // b.hs, b.nlast
    7360:	ubfiz	x19, x26, #3, #32
    7364:	sub	x19, x19, w26, uxtw
    7368:	lsl	x23, x19, #3
    736c:	ldr	x0, [x28, #40]
    7370:	ldr	x0, [x0, x19, lsl #3]
    7374:	ldr	x1, [x0, #56]
    7378:	blr	x1
    737c:	ands	w0, w0, #0xffff
    7380:	b.eq	7238 <grub_menu_entry_run+0xc0c>  // b.none
    7384:	mov	w22, w0
    7388:	cmp	w0, #0x2
    738c:	b.ls	7240 <grub_menu_entry_run+0xc14>  // b.plast
    7390:	b	723c <grub_menu_entry_run+0xc10>
    7394:	ldr	x1, [x0, x19, lsl #3]
    7398:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    739c:	ldr	x0, [x0]
    73a0:	bl	ae70 <grub_puts_terminal>
    73a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    73a8:	ldr	x0, [x0]
    73ac:	ldr	w0, [x0]
    73b0:	cmp	w0, #0x2
    73b4:	b.eq	748c <grub_menu_entry_run+0xe60>  // b.none
    73b8:	b.gt	73f0 <grub_menu_entry_run+0xdc4>
    73bc:	cbz	w0, 7428 <grub_menu_entry_run+0xdfc>
    73c0:	cmp	w0, #0x1
    73c4:	b.ne	74b4 <grub_menu_entry_run+0xe88>  // b.any
    73c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    73cc:	ldr	x0, [x0]
    73d0:	ldr	x1, [x0]
    73d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    73d8:	ldr	x0, [x0]
    73dc:	blr	x1
    73e0:	ldr	x1, [x28, #40]
    73e4:	ldr	x1, [x1, x19, lsl #3]
    73e8:	bl	ae70 <grub_puts_terminal>
    73ec:	b	744c <grub_menu_entry_run+0xe20>
    73f0:	cmp	w0, #0x3
    73f4:	b.eq	7464 <grub_menu_entry_run+0xe38>  // b.none
    73f8:	cmp	w0, #0x4
    73fc:	b.ne	74b4 <grub_menu_entry_run+0xe88>  // b.any
    7400:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7404:	ldr	x0, [x0]
    7408:	ldr	x1, [x0]
    740c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7410:	ldr	x0, [x0]
    7414:	blr	x1
    7418:	ldr	x1, [x28, #40]
    741c:	ldr	x1, [x1, x19, lsl #3]
    7420:	bl	ae70 <grub_puts_terminal>
    7424:	b	744c <grub_menu_entry_run+0xe20>
    7428:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    742c:	ldr	x0, [x0]
    7430:	ldr	x1, [x0]
    7434:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7438:	ldr	x0, [x0]
    743c:	blr	x1
    7440:	ldr	x1, [x28, #40]
    7444:	ldr	x1, [x1, x19, lsl #3]
    7448:	bl	ae70 <grub_puts_terminal>
    744c:	ldr	x0, [x28, #40]
    7450:	ldr	x1, [x0, x19, lsl #3]
    7454:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7458:	ldr	x0, [x0]
    745c:	bl	ae70 <grub_puts_terminal>
    7460:	b	72c8 <grub_menu_entry_run+0xc9c>
    7464:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7468:	ldr	x0, [x0]
    746c:	ldr	x1, [x0]
    7470:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7474:	ldr	x0, [x0]
    7478:	blr	x1
    747c:	ldr	x1, [x28, #40]
    7480:	ldr	x1, [x1, x19, lsl #3]
    7484:	bl	ae70 <grub_puts_terminal>
    7488:	b	744c <grub_menu_entry_run+0xe20>
    748c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7490:	ldr	x0, [x0]
    7494:	ldr	x1, [x0]
    7498:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    749c:	ldr	x0, [x0]
    74a0:	blr	x1
    74a4:	ldr	x1, [x28, #40]
    74a8:	ldr	x1, [x1, x19, lsl #3]
    74ac:	bl	ae70 <grub_puts_terminal>
    74b0:	b	744c <grub_menu_entry_run+0xe20>
    74b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    74b8:	ldr	x0, [x0]
    74bc:	ldr	x1, [x0]
    74c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    74c4:	ldr	x0, [x0]
    74c8:	blr	x1
    74cc:	ldr	x1, [x28, #40]
    74d0:	ldr	x1, [x1, x19, lsl #3]
    74d4:	bl	ae70 <grub_puts_terminal>
    74d8:	b	744c <grub_menu_entry_run+0xe20>
    74dc:	ldr	x0, [x28, #40]
    74e0:	ldr	x1, [x0, x19, lsl #3]
    74e4:	mov	w0, #0x20                  	// #32
    74e8:	bl	a100 <grub_putcode>
    74ec:	b	7304 <grub_menu_entry_run+0xcd8>
    74f0:	ldr	x0, [x28, #40]
    74f4:	ldr	x1, [x0, x19, lsl #3]
    74f8:	mov	w0, #0x2192                	// #8594
    74fc:	bl	a100 <grub_putcode>
    7500:	b	732c <grub_menu_entry_run+0xd00>
    7504:	ldr	w19, [sp, #148]
    7508:	str	w27, [sp, #140]
    750c:	str	w24, [sp, #144]
    7510:	ldr	w27, [sp, #152]
    7514:	ldr	w23, [sp, #156]
    7518:	ldr	x20, [sp, #128]
    751c:	cbz	x20, 755c <grub_menu_entry_run+0xf30>
    7520:	mov	w2, #0x1                   	// #1
    7524:	mov	x1, x20
    7528:	mov	x0, x28
    752c:	bl	6134 <grub_show_menu+0x1bf4>
    7530:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7534:	ldr	x0, [x0]
    7538:	mov	w1, #0xffffffff            	// #-1
    753c:	str	w1, [x0]
    7540:	mov	x0, x20
    7544:	bl	0 <grub_free>
    7548:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    754c:	ldr	x0, [x0]
    7550:	ldr	x0, [x0, #8]
    7554:	bl	0 <grub_free>
    7558:	b	6fe8 <grub_menu_entry_run+0x9bc>
    755c:	bl	0 <grub_refresh>
    7560:	b	7548 <grub_menu_entry_run+0xf1c>
    7564:	ldrsw	x0, [x28, #20]
    7568:	add	x0, x0, x0, lsl #1
    756c:	ldr	x22, [x28]
    7570:	add	x22, x22, x0, lsl #3
    7574:	ldr	w20, [x22, #8]
    7578:	ldr	w0, [x28, #12]
    757c:	sub	w20, w20, w0
    7580:	cbz	x25, 6e24 <grub_menu_entry_run+0x7f8>
    7584:	b	6e18 <grub_menu_entry_run+0x7ec>
    7588:	add	w24, w20, w21
    758c:	add	w1, w24, #0x1
    7590:	sxtw	x1, w1
    7594:	mov	x0, x25
    7598:	bl	0 <grub_realloc>
    759c:	mov	x25, x0
    75a0:	cbz	x0, 7828 <grub_menu_entry_run+0x11fc>
    75a4:	ldrsw	x1, [x28, #12]
    75a8:	ldr	x0, [x22]
    75ac:	sxtw	x2, w20
    75b0:	add	x1, x0, x1, lsl #2
    75b4:	add	x0, x25, w21, sxtw
    75b8:	bl	0 <grub_memmove>
    75bc:	strb	wzr, [x25, w24, sxtw]
    75c0:	str	x25, [x28, #24]
    75c4:	ldr	w0, [x28, #48]
    75c8:	cbz	w0, 7600 <grub_menu_entry_run+0xfd4>
    75cc:	ldr	w21, [sp, #108]
    75d0:	ubfiz	x20, x21, #3, #32
    75d4:	sub	x20, x20, w21, uxtw
    75d8:	ldr	x0, [x28, #40]
    75dc:	add	x20, x0, x20, lsl #3
    75e0:	mov	x1, x20
    75e4:	mov	x0, x22
    75e8:	bl	53a4 <grub_show_menu+0xe64>
    75ec:	str	w0, [x20, #44]
    75f0:	add	w21, w21, #0x1
    75f4:	ldr	w0, [x28, #48]
    75f8:	cmp	w21, w0
    75fc:	b.cc	75d0 <grub_menu_entry_run+0xfa4>  // b.lo, b.ul, b.last
    7600:	ldr	w0, [x28, #12]
    7604:	str	w0, [x22, #8]
    7608:	ldr	w0, [x28, #48]
    760c:	cbz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    7610:	ldr	w21, [sp, #108]
    7614:	mov	w25, #0x1                   	// #1
    7618:	mov	w24, #0x2                   	// #2
    761c:	b	764c <grub_menu_entry_run+0x1020>
    7620:	mov	w6, w24
    7624:	mov	w5, w25
    7628:	mov	w4, #0x0                   	// #0
    762c:	ldr	w3, [x28, #12]
    7630:	ldr	w2, [x28, #20]
    7634:	mov	x0, x28
    7638:	bl	53f4 <grub_show_menu+0xeb4>
    763c:	add	w21, w21, #0x1
    7640:	ldr	w0, [x28, #48]
    7644:	cmp	w21, w0
    7648:	b.cs	6fe8 <grub_menu_entry_run+0x9bc>  // b.hs, b.nlast
    764c:	ubfiz	x20, x21, #3, #32
    7650:	sub	x20, x20, w21, uxtw
    7654:	lsl	x20, x20, #3
    7658:	ldr	x1, [x28, #40]
    765c:	add	x1, x1, x20
    7660:	mov	x0, x22
    7664:	bl	53a4 <grub_show_menu+0xe64>
    7668:	ldr	x1, [x28, #40]
    766c:	add	x1, x1, x20
    7670:	ldr	w2, [x1, #44]
    7674:	cmp	w0, w2
    7678:	b.ne	7620 <grub_menu_entry_run+0xff4>  // b.any
    767c:	mov	w6, w25
    7680:	mov	w5, #0x0                   	// #0
    7684:	mov	w4, #0x0                   	// #0
    7688:	ldr	w3, [x28, #12]
    768c:	ldr	w2, [x28, #20]
    7690:	mov	x0, x28
    7694:	bl	53f4 <grub_show_menu+0xeb4>
    7698:	b	763c <grub_menu_entry_run+0x1010>
    769c:	mov	w2, #0x0                   	// #0
    76a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    76a4:	ldr	x1, [x0]
    76a8:	mov	x0, x28
    76ac:	bl	6134 <grub_show_menu+0x1bf4>
    76b0:	cbnz	w0, 7710 <grub_menu_entry_run+0x10e4>
    76b4:	mov	x19, x28
    76b8:	mov	x0, x19
    76bc:	bl	5260 <grub_show_menu+0xd20>
    76c0:	bl	b4cc <grub_cls>
    76c4:	bl	0 <grub_print_error>
    76c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    76cc:	ldr	x0, [x0]
    76d0:	str	wzr, [x0]
    76d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    76d8:	ldr	x0, [x0]
    76dc:	ldr	x1, [x0]
    76e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    76e4:	ldr	x0, [x0]
    76e8:	blr	x1
    76ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    76f0:	ldr	x0, [x0]
    76f4:	bl	0 <grub_printf_>
    76f8:	bl	0 <grub_getkey>
    76fc:	ldp	x21, x22, [sp, #32]
    7700:	ldp	x23, x24, [sp, #48]
    7704:	ldp	x25, x26, [sp, #64]
    7708:	ldp	x27, x28, [sp, #80]
    770c:	b	68a0 <grub_menu_entry_run+0x274>
    7710:	mov	w1, #0x0                   	// #0
    7714:	mov	x0, x28
    7718:	bl	5be4 <grub_show_menu+0x16a4>
    771c:	cbz	w0, 7838 <grub_menu_entry_run+0x120c>
    7720:	mov	w5, #0x2                   	// #2
    7724:	mov	w4, #0x1                   	// #1
    7728:	mov	w3, #0x0                   	// #0
    772c:	ldr	w2, [x28, #12]
    7730:	ldr	w1, [x28, #20]
    7734:	mov	x0, x28
    7738:	bl	5aec <grub_show_menu+0x15ac>
    773c:	b	6fe8 <grub_menu_entry_run+0x9bc>
    7740:	mov	x19, x28
    7744:	mov	w28, w27
    7748:	mov	w24, w23
    774c:	mov	w1, #0x0                   	// #0
    7750:	mov	w0, #0x1                   	// #1
    7754:	bl	790 <grub_cmdline_run>
    7758:	b	66ec <grub_menu_entry_run+0xc0>
    775c:	bl	b850 <grub_env_context_open>
    7760:	mov	x0, #0x10                  	// #16
    7764:	bl	0 <grub_zalloc>
    7768:	mov	x26, x0
    776c:	cbz	x0, 66ec <grub_menu_entry_run+0xc0>
    7770:	bl	b600 <grub_env_set_menu>
    7774:	b	6b44 <grub_menu_entry_run+0x518>
    7778:	mov	x23, #0x0                   	// #0
    777c:	b	6b8c <grub_menu_entry_run+0x560>
    7780:	mov	x20, #0x0                   	// #0
    7784:	b	6bf0 <grub_menu_entry_run+0x5c4>
    7788:	bl	4310 <grub_wait_after_message>
    778c:	b	6c24 <grub_menu_entry_run+0x5f8>
    7790:	bl	0 <grub_loader_is_loaded>
    7794:	cbnz	w0, 77a4 <grub_menu_entry_run+0x1178>
    7798:	ldr	w0, [x19, #36]
    779c:	cbz	w0, 6c4c <grub_menu_entry_run+0x620>
    77a0:	b	6c3c <grub_menu_entry_run+0x610>
    77a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    77a8:	ldr	x0, [x0]
    77ac:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    77b0:	ldr	x1, [x1]
    77b4:	ldr	x0, [x0]
    77b8:	bl	0 <grub_named_list_find>
    77bc:	cbz	x0, 7798 <grub_menu_entry_run+0x116c>
    77c0:	ldr	x3, [x0, #32]
    77c4:	mov	x2, #0x0                   	// #0
    77c8:	mov	w1, #0x0                   	// #0
    77cc:	blr	x3
    77d0:	b	7798 <grub_menu_entry_run+0x116c>
    77d4:	mov	w2, #0x0                   	// #0
    77d8:	mov	w1, #0x1                   	// #1
    77dc:	mov	x0, x26
    77e0:	bl	4540 <grub_show_menu>
    77e4:	mov	x0, x26
    77e8:	bl	26c <grub_normal_free_menu>
    77ec:	b	6c48 <grub_menu_entry_run+0x61c>
    77f0:	sub	w0, w19, #0x20
    77f4:	cmp	w0, #0x5e
    77f8:	b.hi	6fe8 <grub_menu_entry_run+0x9bc>  // b.pmore
    77fc:	strb	w19, [sp, #168]
    7800:	strb	wzr, [sp, #169]
    7804:	mov	w2, #0x1                   	// #1
    7808:	add	x1, sp, #0xa8
    780c:	mov	x0, x28
    7810:	bl	6134 <grub_show_menu+0x1bf4>
    7814:	cbnz	w0, 6fe8 <grub_menu_entry_run+0x9bc>
    7818:	mov	x19, x28
    781c:	b	76b8 <grub_menu_entry_run+0x108c>
    7820:	mov	x19, x28
    7824:	b	76b8 <grub_menu_entry_run+0x108c>
    7828:	mov	x19, x28
    782c:	b	76b8 <grub_menu_entry_run+0x108c>
    7830:	mov	x19, x28
    7834:	b	76b8 <grub_menu_entry_run+0x108c>
    7838:	mov	x19, x28
    783c:	b	76b8 <grub_menu_entry_run+0x108c>
	...
    7900:	sub	sp, sp, #0x60
    7904:	stp	x29, x30, [sp, #16]
    7908:	add	x29, sp, #0x10
    790c:	stp	x19, x20, [sp, #32]
    7910:	stp	x21, x22, [sp, #48]
    7914:	stp	x23, x24, [sp, #64]
    7918:	str	x25, [sp, #80]
    791c:	mov	x25, x0
    7920:	mov	w22, w1
    7924:	mov	w23, w2
    7928:	mov	x24, x3
    792c:	mov	w20, w4
    7930:	bl	0 <grub_strlen>
    7934:	add	x21, x0, #0x2
    7938:	lsl	x0, x21, #2
    793c:	bl	0 <grub_malloc>
    7940:	cbz	x0, 79d0 <grub_menu_entry_run+0x13a4>
    7944:	mov	x19, x0
    7948:	mov	x4, #0x0                   	// #0
    794c:	mov	x3, #0xffffffffffffffff    	// #-1
    7950:	mov	x2, x25
    7954:	mov	x1, x21
    7958:	bl	bfb0 <grub_utf8_to_ucs4>
    795c:	add	x1, x19, x0, lsl #2
    7960:	str	wzr, [x19, x0, lsl #2]
    7964:	cbz	w20, 79a8 <grub_menu_entry_run+0x137c>
    7968:	mov	x4, x24
    796c:	mov	w3, w23
    7970:	mov	w2, w22
    7974:	mov	x0, x19
    7978:	bl	b02c <grub_ucs4_count_lines>
    797c:	mov	w20, w0
    7980:	mov	x0, x19
    7984:	bl	0 <grub_free>
    7988:	mov	w0, w20
    798c:	ldp	x19, x20, [sp, #32]
    7990:	ldp	x21, x22, [sp, #48]
    7994:	ldp	x23, x24, [sp, #64]
    7998:	ldr	x25, [sp, #80]
    799c:	ldp	x29, x30, [sp, #16]
    79a0:	add	sp, sp, #0x60
    79a4:	ret
    79a8:	str	xzr, [sp]
    79ac:	mov	w7, #0x0                   	// #0
    79b0:	mov	w6, #0xffffffff            	// #-1
    79b4:	mov	w5, #0x0                   	// #0
    79b8:	mov	x4, x24
    79bc:	mov	w3, w23
    79c0:	mov	w2, w22
    79c4:	mov	x0, x19
    79c8:	bl	afa8 <grub_print_ucs4_menu>
    79cc:	b	7980 <grub_menu_entry_run+0x1354>
    79d0:	mov	w20, #0x0                   	// #0
    79d4:	b	7988 <grub_menu_entry_run+0x135c>
    79d8:	sub	sp, sp, #0x60
    79dc:	stp	x29, x30, [sp, #16]
    79e0:	add	x29, sp, #0x10
    79e4:	stp	x19, x20, [sp, #32]
    79e8:	stp	x21, x22, [sp, #48]
    79ec:	stp	x23, x24, [sp, #64]
    79f0:	mov	w21, w0
    79f4:	mov	w23, w1
    79f8:	mov	x19, x3
    79fc:	cbz	x2, 7ac4 <grub_menu_entry_run+0x1498>
    7a00:	ldr	x24, [x2]
    7a04:	mov	x0, x24
    7a08:	bl	0 <grub_strlen>
    7a0c:	mov	x22, x0
    7a10:	lsl	x0, x0, #2
    7a14:	bl	0 <grub_malloc>
    7a18:	mov	x20, x0
    7a1c:	cbz	x0, 7bc4 <grub_menu_entry_run+0x1598>
    7a20:	mov	x4, #0x0                   	// #0
    7a24:	mov	x3, #0xffffffffffffffff    	// #-1
    7a28:	mov	x2, x24
    7a2c:	mov	x1, x22
    7a30:	bl	bfb0 <grub_utf8_to_ucs4>
    7a34:	mov	x22, x0
    7a38:	tbnz	x0, #63, 7ad0 <grub_menu_entry_run+0x14a4>
    7a3c:	str	x25, [sp, #80]
    7a40:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7a44:	ldr	x2, [x0]
    7a48:	ldrb	w25, [x2]
    7a4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7a50:	ldr	x0, [x0]
    7a54:	ldrb	w24, [x0]
    7a58:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    7a5c:	ldr	x1, [x1]
    7a60:	ldrb	w3, [x1]
    7a64:	strb	w3, [x2]
    7a68:	ldrb	w1, [x1, #1]
    7a6c:	strb	w1, [x0]
    7a70:	ldr	x0, [x19, #56]
    7a74:	cmp	w23, #0x0
    7a78:	cset	w1, ne  // ne = any
    7a7c:	add	w1, w1, #0x1
    7a80:	ldr	x2, [x0, #88]
    7a84:	cbz	x2, 7a8c <grub_menu_entry_run+0x1460>
    7a88:	blr	x2
    7a8c:	ldr	x0, [x19, #56]
    7a90:	and	w21, w21, #0xffff
    7a94:	ldr	w2, [x19, #16]
    7a98:	mov	w1, #0x0                   	// #0
    7a9c:	bfxil	w1, w2, #0, #16
    7aa0:	bfi	w1, w21, #16, #16
    7aa4:	ldr	x2, [x0, #72]
    7aa8:	blr	x2
    7aac:	cmp	x22, #0x0
    7ab0:	b.le	7b08 <grub_menu_entry_run+0x14dc>
    7ab4:	mov	x2, x20
    7ab8:	add	x0, x20, x22, lsl #2
    7abc:	mov	w1, #0x20                  	// #32
    7ac0:	b	7ae8 <grub_menu_entry_run+0x14bc>
    7ac4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7ac8:	ldr	x24, [x0]
    7acc:	b	7a04 <grub_menu_entry_run+0x13d8>
    7ad0:	mov	x0, x20
    7ad4:	bl	0 <grub_free>
    7ad8:	b	7bc4 <grub_menu_entry_run+0x1598>
    7adc:	add	x2, x2, #0x4
    7ae0:	cmp	x2, x0
    7ae4:	b.eq	7b08 <grub_menu_entry_run+0x14dc>  // b.none
    7ae8:	ldr	w4, [x2]
    7aec:	and	w5, w4, #0xfffffffd
    7af0:	cmp	w4, #0xd
    7af4:	ccmp	w4, #0x1b, #0x4, ne  // ne = any
    7af8:	ccmp	w5, #0x8, #0x4, ne  // ne = any
    7afc:	b.ne	7adc <grub_menu_entry_run+0x14b0>  // b.any
    7b00:	str	w1, [x2]
    7b04:	b	7adc <grub_menu_entry_run+0x14b0>
    7b08:	ldr	w0, [x19, #8]
    7b0c:	cmp	w0, #0x1
    7b10:	b.le	7b2c <grub_menu_entry_run+0x1500>
    7b14:	cmp	w23, #0x0
    7b18:	ldr	x1, [x19, #56]
    7b1c:	mov	w2, #0x2a                  	// #42
    7b20:	mov	w0, #0x20                  	// #32
    7b24:	csel	w0, w2, w0, ne  // ne = any
    7b28:	bl	a100 <grub_putcode>
    7b2c:	str	xzr, [sp]
    7b30:	mov	w7, #0x2192                	// #8594
    7b34:	mov	w6, #0x1                   	// #1
    7b38:	mov	w5, #0x0                   	// #0
    7b3c:	ldr	x4, [x19, #56]
    7b40:	ldr	w3, [x19, #36]
    7b44:	mov	w2, #0x0                   	// #0
    7b48:	add	x1, x20, x22, lsl #2
    7b4c:	mov	x0, x20
    7b50:	bl	afa8 <grub_print_ucs4_menu>
    7b54:	ldr	x0, [x19, #56]
    7b58:	ldr	x2, [x0, #88]
    7b5c:	cbz	x2, 7b68 <grub_menu_entry_run+0x153c>
    7b60:	mov	w1, #0x1                   	// #1
    7b64:	blr	x2
    7b68:	ldr	x0, [x19, #56]
    7b6c:	ldr	w2, [x19, #16]
    7b70:	ldr	w1, [x19, #20]
    7b74:	add	w2, w2, w1
    7b78:	mov	w1, #0x0                   	// #0
    7b7c:	bfxil	w1, w2, #0, #16
    7b80:	bfi	w1, w21, #16, #16
    7b84:	ldr	x2, [x0, #72]
    7b88:	blr	x2
    7b8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7b90:	ldr	x0, [x0]
    7b94:	strb	w25, [x0]
    7b98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7b9c:	ldr	x0, [x0]
    7ba0:	strb	w24, [x0]
    7ba4:	ldr	x0, [x19, #56]
    7ba8:	ldr	x2, [x0, #88]
    7bac:	cbz	x2, 7bb8 <grub_menu_entry_run+0x158c>
    7bb0:	mov	w1, #0x1                   	// #1
    7bb4:	blr	x2
    7bb8:	mov	x0, x20
    7bbc:	bl	0 <grub_free>
    7bc0:	ldr	x25, [sp, #80]
    7bc4:	ldp	x19, x20, [sp, #32]
    7bc8:	ldp	x21, x22, [sp, #48]
    7bcc:	ldp	x23, x24, [sp, #64]
    7bd0:	ldp	x29, x30, [sp, #16]
    7bd4:	add	sp, sp, #0x60
    7bd8:	ret
    7bdc:	nop
	...
    7c00:	stp	x29, x30, [sp, #-64]!
    7c04:	mov	x29, sp
    7c08:	stp	x19, x20, [sp, #16]
    7c0c:	stp	x21, x22, [sp, #32]
    7c10:	str	x23, [sp, #48]
    7c14:	mov	w23, w0
    7c18:	mov	w19, w1
    7c1c:	mov	x20, x2
    7c20:	mov	w21, w3
    7c24:	ldr	x2, [x2, #88]
    7c28:	cbz	x2, 7c38 <grub_menu_entry_run+0x160c>
    7c2c:	mov	w1, #0x1                   	// #1
    7c30:	mov	x0, x20
    7c34:	blr	x2
    7c38:	cbz	w19, 7c7c <grub_menu_entry_run+0x1650>
    7c3c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7c40:	ldr	x0, [x0]
    7c44:	ldr	x1, [x0]
    7c48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7c4c:	ldr	x0, [x0]
    7c50:	blr	x1
    7c54:	mov	w4, w21
    7c58:	mov	x3, x20
    7c5c:	mov	w2, #0x6                   	// #6
    7c60:	mov	w1, w2
    7c64:	bl	7900 <grub_menu_entry_run+0x12d4>
    7c68:	ldp	x19, x20, [sp, #16]
    7c6c:	ldp	x21, x22, [sp, #32]
    7c70:	ldr	x23, [sp, #48]
    7c74:	ldp	x29, x30, [sp], #64
    7c78:	ret
    7c7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7c80:	ldr	x0, [x0]
    7c84:	ldr	x1, [x0]
    7c88:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7c8c:	ldr	x0, [x0]
    7c90:	blr	x1
    7c94:	mov	w2, #0x2193                	// #8595
    7c98:	mov	w1, #0x2191                	// #8593
    7c9c:	bl	0 <grub_xasprintf>
    7ca0:	mov	x22, x0
    7ca4:	mov	w0, w19
    7ca8:	cbz	x22, 7c68 <grub_menu_entry_run+0x163c>
    7cac:	mov	w4, w21
    7cb0:	mov	x3, x20
    7cb4:	mov	w2, #0x6                   	// #6
    7cb8:	mov	w1, w2
    7cbc:	mov	x0, x22
    7cc0:	bl	7900 <grub_menu_entry_run+0x12d4>
    7cc4:	mov	w19, w0
    7cc8:	mov	x0, x22
    7ccc:	bl	0 <grub_free>
    7cd0:	cbz	w23, 7d08 <grub_menu_entry_run+0x16dc>
    7cd4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7cd8:	ldr	x0, [x0]
    7cdc:	ldr	x1, [x0]
    7ce0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7ce4:	ldr	x0, [x0]
    7ce8:	blr	x1
    7cec:	mov	w4, w21
    7cf0:	mov	x3, x20
    7cf4:	mov	w2, #0x6                   	// #6
    7cf8:	mov	w1, w2
    7cfc:	bl	7900 <grub_menu_entry_run+0x12d4>
    7d00:	add	w0, w19, w0
    7d04:	b	7c68 <grub_menu_entry_run+0x163c>
    7d08:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7d0c:	ldr	x0, [x0]
    7d10:	ldr	x1, [x0]
    7d14:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    7d18:	ldr	x0, [x0]
    7d1c:	blr	x1
    7d20:	mov	w4, w21
    7d24:	mov	x3, x20
    7d28:	mov	w2, #0x6                   	// #6
    7d2c:	mov	w1, w2
    7d30:	bl	7900 <grub_menu_entry_run+0x12d4>
    7d34:	add	w0, w19, w0
    7d38:	b	7c68 <grub_menu_entry_run+0x163c>
    7d3c:	nop
	...
    7d68:	stp	x29, x30, [sp, #-48]!
    7d6c:	mov	x29, sp
    7d70:	stp	x19, x20, [sp, #16]
    7d74:	str	x21, [sp, #32]
    7d78:	mov	x20, x0
    7d7c:	mov	x19, x1
    7d80:	ldr	x0, [x1, #56]
    7d84:	ldrh	w3, [x1, #12]
    7d88:	ldr	w2, [x1, #16]
    7d8c:	ldr	w1, [x1, #20]
    7d90:	add	w2, w2, w1
    7d94:	ldr	w1, [x19, #32]
    7d98:	add	w1, w1, #0x1
    7d9c:	add	w2, w2, w1
    7da0:	mov	w1, #0x0                   	// #0
    7da4:	bfxil	w1, w2, #0, #16
    7da8:	bfi	w1, w3, #16, #16
    7dac:	ldr	x2, [x0, #72]
    7db0:	blr	x2
    7db4:	ldr	w0, [x19, #8]
    7db8:	cmp	w0, #0x1
    7dbc:	b.eq	7dd4 <grub_menu_entry_run+0x17a8>  // b.none
    7dc0:	ldr	w0, [x19]
    7dc4:	cbz	w0, 7df8 <grub_menu_entry_run+0x17cc>
    7dc8:	ldr	x1, [x19, #56]
    7dcc:	mov	w0, #0x2191                	// #8593
    7dd0:	bl	a100 <grub_putcode>
    7dd4:	ldr	w1, [x19]
    7dd8:	mov	x0, x20
    7ddc:	bl	4408 <grub_menu_get_entry>
    7de0:	mov	x21, x0
    7de4:	ldr	w1, [x19, #8]
    7de8:	cmp	w1, #0x0
    7dec:	b.le	7e44 <grub_menu_entry_run+0x1818>
    7df0:	mov	w20, #0x0                   	// #0
    7df4:	b	7e18 <grub_menu_entry_run+0x17ec>
    7df8:	ldr	x1, [x19, #56]
    7dfc:	mov	w0, #0x20                  	// #32
    7e00:	bl	a100 <grub_putcode>
    7e04:	b	7dd4 <grub_menu_entry_run+0x17a8>
    7e08:	add	w20, w20, #0x1
    7e0c:	ldr	w1, [x19, #8]
    7e10:	cmp	w1, w20
    7e14:	b.le	7e44 <grub_menu_entry_run+0x1818>
    7e18:	ldr	w0, [x19, #4]
    7e1c:	cmp	w0, w20
    7e20:	ldr	w0, [x19, #12]
    7e24:	mov	x3, x19
    7e28:	mov	x2, x21
    7e2c:	cset	w1, eq  // eq = none
    7e30:	add	w0, w20, w0
    7e34:	bl	79d8 <grub_menu_entry_run+0x13ac>
    7e38:	cbz	x21, 7e08 <grub_menu_entry_run+0x17dc>
    7e3c:	ldr	x21, [x21, #72]
    7e40:	b	7e08 <grub_menu_entry_run+0x17dc>
    7e44:	ldr	x0, [x19, #56]
    7e48:	ldr	w2, [x19, #12]
    7e4c:	sub	w2, w2, #0x1
    7e50:	add	w2, w2, w1
    7e54:	ldr	w3, [x19, #16]
    7e58:	ldr	w1, [x19, #20]
    7e5c:	add	w3, w3, w1
    7e60:	ldr	w1, [x19, #32]
    7e64:	add	w1, w1, #0x1
    7e68:	add	w3, w3, w1
    7e6c:	mov	w1, #0x0                   	// #0
    7e70:	bfxil	w1, w3, #0, #16
    7e74:	bfi	w1, w2, #16, #16
    7e78:	ldr	x2, [x0, #72]
    7e7c:	blr	x2
    7e80:	ldr	w0, [x19, #8]
    7e84:	cmp	w0, #0x1
    7e88:	b.eq	7edc <grub_menu_entry_run+0x18b0>  // b.none
    7e8c:	cbz	x21, 7f34 <grub_menu_entry_run+0x1908>
    7e90:	ldr	x1, [x19, #56]
    7e94:	mov	w0, #0x2193                	// #8595
    7e98:	bl	a100 <grub_putcode>
    7e9c:	ldr	x0, [x19, #56]
    7ea0:	ldr	w2, [x19, #12]
    7ea4:	ldr	w1, [x19, #4]
    7ea8:	add	w2, w2, w1
    7eac:	ldr	w3, [x19, #16]
    7eb0:	ldr	w1, [x19, #20]
    7eb4:	add	w3, w3, w1
    7eb8:	mov	w1, #0x0                   	// #0
    7ebc:	bfxil	w1, w3, #0, #16
    7ec0:	bfi	w1, w2, #16, #16
    7ec4:	ldr	x2, [x0, #72]
    7ec8:	blr	x2
    7ecc:	ldp	x19, x20, [sp, #16]
    7ed0:	ldr	x21, [sp, #32]
    7ed4:	ldp	x29, x30, [sp], #48
    7ed8:	ret
    7edc:	ldr	w0, [x19]
    7ee0:	cmp	x21, #0x0
    7ee4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    7ee8:	b.ne	7f04 <grub_menu_entry_run+0x18d8>  // b.any
    7eec:	cbnz	w0, 7f14 <grub_menu_entry_run+0x18e8>
    7ef0:	cbz	x21, 7f24 <grub_menu_entry_run+0x18f8>
    7ef4:	ldr	x1, [x19, #56]
    7ef8:	mov	w0, #0x2193                	// #8595
    7efc:	bl	a100 <grub_putcode>
    7f00:	b	7e9c <grub_menu_entry_run+0x1870>
    7f04:	ldr	x1, [x19, #56]
    7f08:	mov	w0, #0x2195                	// #8597
    7f0c:	bl	a100 <grub_putcode>
    7f10:	b	7e9c <grub_menu_entry_run+0x1870>
    7f14:	ldr	x1, [x19, #56]
    7f18:	mov	w0, #0x2191                	// #8593
    7f1c:	bl	a100 <grub_putcode>
    7f20:	b	7e9c <grub_menu_entry_run+0x1870>
    7f24:	ldr	x1, [x19, #56]
    7f28:	mov	w0, #0x20                  	// #32
    7f2c:	bl	a100 <grub_putcode>
    7f30:	b	7e9c <grub_menu_entry_run+0x1870>
    7f34:	ldr	x1, [x19, #56]
    7f38:	mov	w0, #0x20                  	// #32
    7f3c:	bl	a100 <grub_putcode>
    7f40:	b	7e9c <grub_menu_entry_run+0x1870>
    7f44:	stp	x29, x30, [sp, #-64]!
    7f48:	mov	x29, sp
    7f4c:	stp	x21, x22, [sp, #32]
    7f50:	mov	x22, x0
    7f54:	ldr	w0, [x0, #28]
    7f58:	cmp	w0, #0x0
    7f5c:	b.le	7fe8 <grub_menu_entry_run+0x19bc>
    7f60:	stp	x19, x20, [sp, #16]
    7f64:	stp	x23, x24, [sp, #48]
    7f68:	mov	w23, #0x0                   	// #0
    7f6c:	mov	w21, #0x20                  	// #32
    7f70:	b	7f9c <grub_menu_entry_run+0x1970>
    7f74:	mov	w19, #0x4e                  	// #78
    7f78:	mov	x1, x20
    7f7c:	mov	w0, w21
    7f80:	bl	a100 <grub_putcode>
    7f84:	subs	w19, w19, #0x1
    7f88:	b.pl	7f78 <grub_menu_entry_run+0x194c>  // b.nfrst
    7f8c:	add	w23, w23, #0x1
    7f90:	ldr	w0, [x22, #28]
    7f94:	cmp	w0, w23
    7f98:	b.le	7fe0 <grub_menu_entry_run+0x19b4>
    7f9c:	ldr	x0, [x22, #56]
    7fa0:	ldr	w1, [x22, #24]
    7fa4:	add	w1, w1, w23
    7fa8:	and	w24, w24, #0xffff0000
    7fac:	bfi	w24, w1, #16, #16
    7fb0:	ldr	x2, [x0, #72]
    7fb4:	mov	w1, w24
    7fb8:	blr	x2
    7fbc:	ldr	x20, [x22, #56]
    7fc0:	ldr	x1, [x20, #56]
    7fc4:	mov	x0, x20
    7fc8:	blr	x1
    7fcc:	ands	w0, w0, #0xffff
    7fd0:	b.eq	7f74 <grub_menu_entry_run+0x1948>  // b.none
    7fd4:	subs	w19, w0, #0x2
    7fd8:	b.pl	7f78 <grub_menu_entry_run+0x194c>  // b.nfrst
    7fdc:	b	7f8c <grub_menu_entry_run+0x1960>
    7fe0:	ldp	x19, x20, [sp, #16]
    7fe4:	ldp	x23, x24, [sp, #48]
    7fe8:	ldr	w1, [x22, #8]
    7fec:	cmp	w1, #0x5
    7ff0:	b.gt	8058 <grub_menu_entry_run+0x1a2c>
    7ff4:	ldr	w0, [x22, #32]
    7ff8:	cbnz	w0, 8058 <grub_menu_entry_run+0x1a2c>
    7ffc:	ldr	x0, [x22, #56]
    8000:	ldr	w2, [x22, #12]
    8004:	add	w1, w2, w1
    8008:	sub	w2, w1, #0x1
    800c:	ldr	w3, [x22, #16]
    8010:	ldr	w1, [x22, #20]
    8014:	add	w3, w3, w1
    8018:	add	w3, w3, #0x1
    801c:	mov	w1, #0x0                   	// #0
    8020:	bfxil	w1, w3, #0, #16
    8024:	bfi	w1, w2, #16, #16
    8028:	ldr	x2, [x0, #72]
    802c:	blr	x2
    8030:	ldr	x1, [x22, #56]
    8034:	mov	w0, #0x20                  	// #32
    8038:	bl	a100 <grub_putcode>
    803c:	str	wzr, [x22, #28]
    8040:	ldr	w0, [x22, #8]
    8044:	add	w0, w0, #0x1
    8048:	str	w0, [x22, #8]
    804c:	mov	x1, x22
    8050:	ldr	x0, [x22, #48]
    8054:	bl	7d68 <grub_menu_entry_run+0x173c>
    8058:	ldr	x0, [x22, #56]
    805c:	ldr	w2, [x22, #12]
    8060:	ldr	w1, [x22, #4]
    8064:	add	w2, w2, w1
    8068:	ldr	w3, [x22, #16]
    806c:	ldr	w1, [x22, #20]
    8070:	add	w3, w3, w1
    8074:	mov	w1, #0x0                   	// #0
    8078:	bfxil	w1, w3, #0, #16
    807c:	bfi	w1, w2, #16, #16
    8080:	ldr	x2, [x0, #72]
    8084:	blr	x2
    8088:	ldr	x0, [x22, #56]
    808c:	ldr	x1, [x0, #104]
    8090:	cbz	x1, 8098 <grub_menu_entry_run+0x1a6c>
    8094:	blr	x1
    8098:	ldp	x21, x22, [sp, #32]
    809c:	ldp	x29, x30, [sp], #64
    80a0:	ret
    80a4:	stp	x29, x30, [sp, #-32]!
    80a8:	mov	x29, sp
    80ac:	stp	x19, x20, [sp, #16]
    80b0:	mov	x19, x1
    80b4:	ldr	w4, [x1, #4]
    80b8:	ldr	w1, [x1]
    80bc:	sub	w3, w0, w1
    80c0:	str	w3, [x19, #4]
    80c4:	ldr	w2, [x19, #8]
    80c8:	cmp	w3, w2
    80cc:	b.lt	8144 <grub_menu_entry_run+0x1b18>  // b.tstop
    80d0:	sub	w2, w2, #0x1
    80d4:	sub	w1, w0, w2
    80d8:	str	w1, [x19]
    80dc:	str	w2, [x19, #4]
    80e0:	tbz	w2, #31, 8150 <grub_menu_entry_run+0x1b24>
    80e4:	b	8148 <grub_menu_entry_run+0x1b1c>
    80e8:	ldr	w20, [x19, #12]
    80ec:	add	w20, w4, w20
    80f0:	add	w1, w1, w4
    80f4:	ldr	x0, [x19, #48]
    80f8:	bl	4408 <grub_menu_get_entry>
    80fc:	mov	x3, x19
    8100:	mov	x2, x0
    8104:	mov	w1, #0x0                   	// #0
    8108:	mov	w0, w20
    810c:	bl	79d8 <grub_menu_entry_run+0x13ac>
    8110:	ldr	w0, [x19, #4]
    8114:	ldr	w20, [x19, #12]
    8118:	add	w20, w0, w20
    811c:	ldr	w1, [x19]
    8120:	add	w1, w0, w1
    8124:	ldr	x0, [x19, #48]
    8128:	bl	4408 <grub_menu_get_entry>
    812c:	mov	x3, x19
    8130:	mov	x2, x0
    8134:	mov	w1, #0x1                   	// #1
    8138:	mov	w0, w20
    813c:	bl	79d8 <grub_menu_entry_run+0x13ac>
    8140:	b	815c <grub_menu_entry_run+0x1b30>
    8144:	tbz	w3, #31, 80e8 <grub_menu_entry_run+0x1abc>
    8148:	str	wzr, [x19, #4]
    814c:	str	w0, [x19]
    8150:	mov	x1, x19
    8154:	ldr	x0, [x19, #48]
    8158:	bl	7d68 <grub_menu_entry_run+0x173c>
    815c:	ldr	x0, [x19, #56]
    8160:	ldr	x1, [x0, #104]
    8164:	cbz	x1, 816c <grub_menu_entry_run+0x1b40>
    8168:	blr	x1
    816c:	ldp	x19, x20, [sp, #16]
    8170:	ldp	x29, x30, [sp], #32
    8174:	ret
    8178:	stp	x29, x30, [sp, #-32]!
    817c:	mov	x29, sp
    8180:	stp	x19, x20, [sp, #16]
    8184:	mov	x19, x0
    8188:	ldr	x0, [x0, #56]
    818c:	ldr	x2, [x0, #96]
    8190:	cbz	x2, 819c <grub_menu_entry_run+0x1b70>
    8194:	mov	w1, #0x1                   	// #1
    8198:	blr	x2
    819c:	ldr	x20, [x19, #56]
    81a0:	ldr	x1, [x20, #80]
    81a4:	cbz	x1, 81c4 <grub_menu_entry_run+0x1b98>
    81a8:	mov	x0, x20
    81ac:	blr	x1
    81b0:	mov	x0, x19
    81b4:	bl	0 <grub_free>
    81b8:	ldp	x19, x20, [sp, #16]
    81bc:	ldp	x29, x30, [sp], #32
    81c0:	ret
    81c4:	mov	x1, x20
    81c8:	mov	w0, #0xa                   	// #10
    81cc:	bl	a100 <grub_putcode>
    81d0:	ldr	x1, [x20, #104]
    81d4:	cbz	x1, 81b0 <grub_menu_entry_run+0x1b84>
    81d8:	mov	x0, x20
    81dc:	blr	x1
    81e0:	b	81b0 <grub_menu_entry_run+0x1b84>

00000000000081e4 <grub_getstringwidth>:
    81e4:	stp	x29, x30, [sp, #-96]!
    81e8:	mov	x29, sp
    81ec:	stp	x21, x22, [sp, #32]
    81f0:	cmp	x0, x1
    81f4:	b.cs	82e4 <grub_getstringwidth+0x100>  // b.hs, b.nlast
    81f8:	stp	x19, x20, [sp, #16]
    81fc:	stp	x23, x24, [sp, #48]
    8200:	mov	x19, x0
    8204:	mov	x20, x1
    8208:	mov	x22, x2
    820c:	mov	x21, #0x0                   	// #0
    8210:	mov	x24, #0x8                   	// #8
    8214:	mov	x23, #0x1                   	// #1
    8218:	b	8254 <grub_getstringwidth+0x70>
    821c:	ldr	w0, [x22, #120]
    8220:	and	w2, w0, #0x38
    8224:	and	w1, w0, #0x30
    8228:	cmp	w2, #0x20
    822c:	mov	x0, x23
    8230:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    8234:	b.eq	82a0 <grub_getstringwidth+0xbc>  // b.none
    8238:	add	x21, x21, x0
    823c:	ldrh	w0, [sp, #70]
    8240:	ubfx	x0, x0, #3, #8
    8244:	cmp	w0, #0x2
    8248:	b.hi	82c0 <grub_getstringwidth+0xdc>  // b.pmore
    824c:	cmp	x20, x19
    8250:	b.ls	82cc <grub_getstringwidth+0xe8>  // b.plast
    8254:	ldrh	w0, [sp, #70]
    8258:	and	w0, w0, #0xfffff807
    825c:	strh	w0, [sp, #70]
    8260:	sub	x1, x20, x19
    8264:	add	x2, sp, #0x40
    8268:	asr	x1, x1, #2
    826c:	mov	x0, x19
    8270:	bl	c318 <grub_unicode_aglomerate_comb>
    8274:	add	x19, x19, x0, lsl #2
    8278:	ldr	w0, [sp, #64]
    827c:	and	w0, w0, #0x7fffff
    8280:	cmp	w0, #0x9
    8284:	b.eq	82b8 <grub_getstringwidth+0xd4>  // b.none
    8288:	ldr	x2, [x22, #48]
    828c:	cbz	x2, 821c <grub_getstringwidth+0x38>
    8290:	add	x1, sp, #0x40
    8294:	mov	x0, x22
    8298:	blr	x2
    829c:	b	8238 <grub_getstringwidth+0x54>
    82a0:	ldr	w0, [sp, #64]
    82a4:	and	w0, w0, #0x7fffff
    82a8:	bl	c158 <grub_unicode_get_comb_type>
    82ac:	cmp	w0, #0x0
    82b0:	cset	x0, eq  // eq = none
    82b4:	b	8238 <grub_getstringwidth+0x54>
    82b8:	mov	x0, x24
    82bc:	b	8238 <grub_getstringwidth+0x54>
    82c0:	ldr	x0, [sp, #88]
    82c4:	bl	0 <grub_free>
    82c8:	b	824c <grub_getstringwidth+0x68>
    82cc:	ldp	x19, x20, [sp, #16]
    82d0:	ldp	x23, x24, [sp, #48]
    82d4:	mov	x0, x21
    82d8:	ldp	x21, x22, [sp, #32]
    82dc:	ldp	x29, x30, [sp], #96
    82e0:	ret
    82e4:	mov	x21, #0x0                   	// #0
    82e8:	b	82d4 <grub_getstringwidth+0xf0>

00000000000082ec <grub_print_message_indented>:
    82ec:	stp	x29, x30, [sp, #-16]!
    82f0:	mov	x29, sp
    82f4:	mov	w4, #0x0                   	// #0
    82f8:	bl	7900 <grub_menu_entry_run+0x12d4>
    82fc:	ldp	x29, x30, [sp], #16
    8300:	ret
    8304:	stp	x29, x30, [sp, #-48]!
    8308:	mov	x29, sp
    830c:	stp	x19, x20, [sp, #16]
    8310:	str	x21, [sp, #32]
    8314:	mov	w21, w0
    8318:	mov	x19, x1
    831c:	ldr	x0, [x1, #56]
    8320:	ldrh	w1, [x1, #24]
    8324:	ldr	x2, [x0, #72]
    8328:	lsl	w1, w1, #16
    832c:	blr	x2
    8330:	ldr	w0, [x19, #40]
    8334:	sub	w0, w0, #0x2
    8338:	cmp	w0, #0x1
    833c:	b.ls	83ec <grub_print_message_indented+0x100>  // b.plast
    8340:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8344:	ldr	x0, [x0]
    8348:	ldr	x1, [x0]
    834c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8350:	ldr	x0, [x0]
    8354:	blr	x1
    8358:	mov	w1, w21
    835c:	bl	0 <grub_xasprintf>
    8360:	mov	x20, x0
    8364:	cbz	x20, 8414 <grub_print_message_indented+0x128>
    8368:	ldr	w0, [x19, #40]
    836c:	cbz	w0, 8428 <grub_print_message_indented+0x13c>
    8370:	ldr	w0, [x19, #40]
    8374:	cmp	w0, #0x3
    8378:	mov	w1, #0x3                   	// #3
    837c:	csel	w1, w1, wzr, ne  // ne = any
    8380:	cmp	w0, #0x3
    8384:	ldr	x3, [x19, #56]
    8388:	cset	w2, ne  // ne = any
    838c:	mov	x0, x20
    8390:	bl	82ec <grub_print_message_indented>
    8394:	mov	x0, x20
    8398:	bl	0 <grub_free>
    839c:	ldr	x0, [x19, #56]
    83a0:	ldr	w2, [x19, #12]
    83a4:	ldr	w1, [x19, #4]
    83a8:	add	w2, w2, w1
    83ac:	ldr	w3, [x19, #16]
    83b0:	ldr	w1, [x19, #20]
    83b4:	add	w3, w3, w1
    83b8:	mov	w1, #0x0                   	// #0
    83bc:	bfxil	w1, w3, #0, #16
    83c0:	bfi	w1, w2, #16, #16
    83c4:	ldr	x2, [x0, #72]
    83c8:	blr	x2
    83cc:	ldr	x0, [x19, #56]
    83d0:	ldr	x1, [x0, #104]
    83d4:	cbz	x1, 83dc <grub_print_message_indented+0xf0>
    83d8:	blr	x1
    83dc:	ldp	x19, x20, [sp, #16]
    83e0:	ldr	x21, [sp, #32]
    83e4:	ldp	x29, x30, [sp], #48
    83e8:	ret
    83ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    83f0:	ldr	x0, [x0]
    83f4:	ldr	x1, [x0]
    83f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    83fc:	ldr	x0, [x0]
    8400:	blr	x1
    8404:	mov	w1, w21
    8408:	bl	0 <grub_xasprintf>
    840c:	mov	x20, x0
    8410:	b	8364 <grub_print_message_indented+0x78>
    8414:	bl	0 <grub_print_error>
    8418:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    841c:	ldr	x0, [x0]
    8420:	str	wzr, [x0]
    8424:	b	83dc <grub_print_message_indented+0xf0>
    8428:	mov	w4, #0x1                   	// #1
    842c:	ldr	x3, [x19, #56]
    8430:	mov	w2, w4
    8434:	mov	w1, #0x3                   	// #3
    8438:	mov	x0, x20
    843c:	bl	7900 <grub_menu_entry_run+0x12d4>
    8440:	ldr	w1, [x19, #28]
    8444:	cmp	w0, w1
    8448:	b.le	84ac <grub_print_message_indented+0x1c0>
    844c:	mov	w0, #0x2                   	// #2
    8450:	str	w0, [x19, #40]
    8454:	mov	x0, x20
    8458:	bl	0 <grub_free>
    845c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8460:	ldr	x0, [x0]
    8464:	ldr	x1, [x0]
    8468:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    846c:	ldr	x0, [x0]
    8470:	blr	x1
    8474:	mov	w1, w21
    8478:	bl	0 <grub_xasprintf>
    847c:	mov	x20, x0
    8480:	ldr	x0, [x19, #56]
    8484:	ldr	x1, [x0, #56]
    8488:	blr	x1
    848c:	sub	w0, w0, #0x1
    8490:	and	w0, w0, #0xffff
    8494:	cmp	w0, #0x8
    8498:	b.hi	8370 <grub_print_message_indented+0x84>  // b.pmore
    849c:	mov	w0, #0x3                   	// #3
    84a0:	str	w0, [x19, #40]
    84a4:	mov	w1, #0x0                   	// #0
    84a8:	b	8380 <grub_print_message_indented+0x94>
    84ac:	mov	w0, #0x1                   	// #1
    84b0:	str	w0, [x19, #40]
    84b4:	mov	w1, #0x3                   	// #3
    84b8:	b	8380 <grub_print_message_indented+0x94>
    84bc:	nop
	...

00000000000084e0 <grub_menu_init_page>:
    84e0:	stp	x29, x30, [sp, #-112]!
    84e4:	mov	x29, sp
    84e8:	stp	x19, x20, [sp, #16]
    84ec:	stp	x21, x22, [sp, #32]
    84f0:	stp	x23, x24, [sp, #48]
    84f4:	stp	x25, x26, [sp, #64]
    84f8:	stp	x27, x28, [sp, #80]
    84fc:	mov	w22, w0
    8500:	str	w0, [sp, #104]
    8504:	mov	w21, w1
    8508:	str	w1, [sp, #108]
    850c:	mov	x19, x2
    8510:	mov	x20, x3
    8514:	mov	w0, #0x1                   	// #1
    8518:	str	w0, [x2, #24]
    851c:	mov	w0, #0x2                   	// #2
    8520:	str	w0, [x2, #8]
    8524:	ldr	x1, [x3, #56]
    8528:	mov	x0, x3
    852c:	blr	x1
    8530:	ands	w0, w0, #0xffff
    8534:	mov	w1, #0x50                  	// #80
    8538:	csel	w0, w0, w1, ne  // ne = any
    853c:	sub	w0, w0, #0x5
    8540:	str	w0, [x19, #12]
    8544:	mov	w0, #0x4                   	// #4
    8548:	str	w0, [x19, #4]
    854c:	mov	w0, #0x2                   	// #2
    8550:	str	w0, [x19, #20]
    8554:	ldr	x1, [x20, #56]
    8558:	mov	x0, x20
    855c:	blr	x1
    8560:	lsr	w0, w0, #16
    8564:	cmp	w0, #0x0
    8568:	mov	w1, #0x18                  	// #24
    856c:	csel	w0, w0, w1, ne  // ne = any
    8570:	sub	w0, w0, #0x3
    8574:	ldr	w1, [x19, #4]
    8578:	ldr	w2, [x19, #20]
    857c:	add	w1, w1, w2
    8580:	sub	w0, w0, w1
    8584:	str	w0, [x19]
    8588:	mov	w3, #0x1                   	// #1
    858c:	mov	x2, x20
    8590:	mov	w1, w21
    8594:	mov	w0, w22
    8598:	bl	7c00 <grub_menu_entry_run+0x15d4>
    859c:	mov	w21, w0
    85a0:	ldr	w0, [x19]
    85a4:	sub	w1, w0, w21
    85a8:	cmp	w1, #0x2
    85ac:	b.le	85c0 <grub_menu_init_page+0xe0>
    85b0:	ldr	w1, [x19, #12]
    85b4:	mov	w28, #0x1                   	// #1
    85b8:	cmp	w1, #0x9
    85bc:	b.gt	862c <grub_menu_init_page+0x14c>
    85c0:	add	w1, w0, #0x4
    85c4:	str	w1, [x19]
    85c8:	ldr	w2, [x19, #4]
    85cc:	sub	w2, w2, #0x2
    85d0:	str	w2, [x19, #4]
    85d4:	ldr	w2, [x19, #8]
    85d8:	sub	w2, w2, #0x1
    85dc:	str	w2, [x19, #8]
    85e0:	ldr	w2, [x19, #12]
    85e4:	add	w2, w2, #0x1
    85e8:	str	w2, [x19, #12]
    85ec:	sub	w1, w1, w21
    85f0:	cmp	w1, #0x2
    85f4:	b.gt	86ec <grub_menu_init_page+0x20c>
    85f8:	add	w0, w0, #0x6
    85fc:	str	w0, [x19]
    8600:	ldr	w0, [x19, #4]
    8604:	sub	w0, w0, #0x1
    8608:	str	w0, [x19, #4]
    860c:	ldr	w0, [x19, #8]
    8610:	sub	w0, w0, #0x1
    8614:	str	w0, [x19, #8]
    8618:	ldr	w0, [x19, #12]
    861c:	add	w0, w0, #0x2
    8620:	str	w0, [x19, #12]
    8624:	str	wzr, [x19, #24]
    8628:	mov	w28, #0x0                   	// #0
    862c:	ldr	w0, [x19, #12]
    8630:	cmp	w0, #0x0
    8634:	b.le	8700 <grub_menu_init_page+0x220>
    8638:	ldr	w0, [x19]
    863c:	sub	w1, w0, w21
    8640:	cmp	w1, #0x2
    8644:	b.gt	8728 <grub_menu_init_page+0x248>
    8648:	ldr	w1, [x19, #20]
    864c:	cmp	w1, #0x2
    8650:	b.eq	870c <grub_menu_init_page+0x22c>  // b.none
    8654:	add	w0, w0, #0x1
    8658:	str	w0, [x19]
    865c:	ldr	w1, [x19, #4]
    8660:	sub	w1, w1, #0x1
    8664:	str	w1, [x19, #4]
    8668:	sub	w0, w0, w21
    866c:	cmp	w0, #0x1
    8670:	b.le	8adc <grub_menu_init_page+0x5fc>
    8674:	str	w0, [x19]
    8678:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    867c:	ldr	x0, [x0]
    8680:	ldrb	w25, [x0]
    8684:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8688:	ldr	x0, [x0]
    868c:	ldrb	w24, [x0]
    8690:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8694:	ldr	x22, [x0]
    8698:	strb	w25, [x22]
    869c:	strb	w24, [x22, #1]
    86a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    86a4:	ldr	x0, [x0]
    86a8:	bl	0 <grub_env_get>
    86ac:	mov	x1, x0
    86b0:	mov	x0, x22
    86b4:	bl	2f80 <grub_parse_color_name_pair>
    86b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    86bc:	ldr	x0, [x0]
    86c0:	bl	0 <grub_env_get>
    86c4:	mov	x1, x0
    86c8:	add	x0, x22, #0x1
    86cc:	bl	2f80 <grub_parse_color_name_pair>
    86d0:	mov	w0, #0x1                   	// #1
    86d4:	str	w0, [sp, #100]
    86d8:	ldr	x1, [x20, #80]
    86dc:	cbz	x1, 8894 <grub_menu_init_page+0x3b4>
    86e0:	mov	x0, x20
    86e4:	blr	x1
    86e8:	b	87a8 <grub_menu_init_page+0x2c8>
    86ec:	mov	w1, w2
    86f0:	cmp	w1, #0x9
    86f4:	b.le	85f8 <grub_menu_init_page+0x118>
    86f8:	mov	w28, #0x0                   	// #0
    86fc:	b	862c <grub_menu_init_page+0x14c>
    8700:	mov	w0, #0x1                   	// #1
    8704:	str	w0, [x19, #12]
    8708:	b	8638 <grub_menu_init_page+0x158>
    870c:	mov	w1, #0x1                   	// #1
    8710:	str	w1, [x19, #20]
    8714:	add	w0, w0, w1
    8718:	str	w0, [x19]
    871c:	sub	w1, w0, w21
    8720:	cmp	w1, #0x2
    8724:	b.le	8654 <grub_menu_init_page+0x174>
    8728:	ldr	w0, [x19]
    872c:	sub	w0, w0, w21
    8730:	cmp	w0, #0x1
    8734:	b.le	8a7c <grub_menu_init_page+0x59c>
    8738:	str	w0, [x19]
    873c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8740:	ldr	x0, [x0]
    8744:	ldrb	w25, [x0]
    8748:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    874c:	ldr	x0, [x0]
    8750:	ldrb	w24, [x0]
    8754:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8758:	ldr	x22, [x0]
    875c:	strb	w25, [x22]
    8760:	strb	w24, [x22, #1]
    8764:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8768:	ldr	x0, [x0]
    876c:	bl	0 <grub_env_get>
    8770:	mov	x1, x0
    8774:	mov	x0, x22
    8778:	bl	2f80 <grub_parse_color_name_pair>
    877c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8780:	ldr	x0, [x0]
    8784:	bl	0 <grub_env_get>
    8788:	mov	x1, x0
    878c:	add	x0, x22, #0x1
    8790:	bl	2f80 <grub_parse_color_name_pair>
    8794:	mov	w0, #0x1                   	// #1
    8798:	str	w0, [sp, #100]
    879c:	mov	w1, w28
    87a0:	mov	x0, x20
    87a4:	bl	334 <grub_normal_init_page>
    87a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    87ac:	ldr	x1, [x0]
    87b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    87b4:	ldr	x0, [x0]
    87b8:	ldrb	w2, [x0]
    87bc:	strb	w2, [x1]
    87c0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    87c4:	ldr	x1, [x1]
    87c8:	ldrb	w0, [x0, #1]
    87cc:	strb	w0, [x1]
    87d0:	ldr	w0, [x19, #24]
    87d4:	cbnz	w0, 88b4 <grub_menu_init_page+0x3d4>
    87d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    87dc:	ldr	x0, [x0]
    87e0:	strb	w25, [x0]
    87e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    87e8:	ldr	x0, [x0]
    87ec:	strb	w24, [x0]
    87f0:	ldr	w1, [x19, #4]
    87f4:	ldr	w0, [x19]
    87f8:	add	w1, w1, w0
    87fc:	ldr	w0, [x19, #24]
    8800:	add	w1, w1, w0
    8804:	add	w28, w1, w28
    8808:	str	w28, [x19, #16]
    880c:	ldr	w0, [sp, #100]
    8810:	cbz	w0, 8848 <grub_menu_init_page+0x368>
    8814:	lsl	w28, w28, #16
    8818:	ldr	x2, [x20, #72]
    881c:	orr	w1, w28, #0x1
    8820:	mov	x0, x20
    8824:	blr	x2
    8828:	mov	w3, #0x0                   	// #0
    882c:	mov	x2, x20
    8830:	ldr	w1, [sp, #108]
    8834:	ldr	w0, [sp, #104]
    8838:	bl	7c00 <grub_menu_entry_run+0x15d4>
    883c:	ldr	w0, [x19, #16]
    8840:	add	w21, w0, w21
    8844:	str	w21, [x19, #16]
    8848:	ldr	x1, [x20, #56]
    884c:	mov	x0, x20
    8850:	blr	x1
    8854:	ands	w0, w0, #0xffff
    8858:	mov	w1, #0x50                  	// #80
    885c:	csel	w0, w0, w1, ne  // ne = any
    8860:	sub	w0, w0, #0x1
    8864:	ldr	w1, [x19, #8]
    8868:	ldr	w2, [x19, #12]
    886c:	add	w1, w1, w2
    8870:	sub	w0, w0, w1
    8874:	str	w0, [x19, #28]
    8878:	ldp	x19, x20, [sp, #16]
    887c:	ldp	x21, x22, [sp, #32]
    8880:	ldp	x23, x24, [sp, #48]
    8884:	ldp	x25, x26, [sp, #64]
    8888:	ldp	x27, x28, [sp, #80]
    888c:	ldp	x29, x30, [sp], #112
    8890:	ret
    8894:	mov	x1, x20
    8898:	mov	w0, #0xa                   	// #10
    889c:	bl	a100 <grub_putcode>
    88a0:	ldr	x1, [x20, #104]
    88a4:	cbz	x1, 87a8 <grub_menu_init_page+0x2c8>
    88a8:	mov	x0, x20
    88ac:	blr	x1
    88b0:	b	87a8 <grub_menu_init_page+0x2c8>
    88b4:	ldr	x2, [x20, #88]
    88b8:	cbz	x2, 88c8 <grub_menu_init_page+0x3e8>
    88bc:	mov	w1, #0x1                   	// #1
    88c0:	mov	x0, x20
    88c4:	blr	x2
    88c8:	ldr	w0, [x19, #4]
    88cc:	sub	w0, w0, #0x1
    88d0:	ldr	w2, [x19, #8]
    88d4:	sub	w2, w2, #0x1
    88d8:	mov	w1, #0x0                   	// #0
    88dc:	bfxil	w1, w2, #0, #16
    88e0:	bfi	w1, w0, #16, #16
    88e4:	ldr	x2, [x20, #72]
    88e8:	mov	x0, x20
    88ec:	blr	x2
    88f0:	mov	x1, x20
    88f4:	mov	w0, #0x250f                	// #9487
    88f8:	bl	a100 <grub_putcode>
    88fc:	ldr	w0, [x19, #12]
    8900:	tbnz	w0, #31, 8928 <grub_menu_init_page+0x448>
    8904:	mov	w22, #0x0                   	// #0
    8908:	mov	w23, #0x2501                	// #9473
    890c:	mov	x1, x20
    8910:	mov	w0, w23
    8914:	bl	a100 <grub_putcode>
    8918:	add	w22, w22, #0x1
    891c:	ldr	w0, [x19, #12]
    8920:	cmp	w22, w0
    8924:	b.le	890c <grub_menu_init_page+0x42c>
    8928:	mov	x1, x20
    892c:	mov	w0, #0x2513                	// #9491
    8930:	bl	a100 <grub_putcode>
    8934:	ldr	w0, [x19]
    8938:	cmp	w0, #0x0
    893c:	b.le	89c8 <grub_menu_init_page+0x4e8>
    8940:	mov	w22, #0x0                   	// #0
    8944:	and	w23, w22, #0xffff
    8948:	ldr	w0, [x19, #4]
    894c:	add	w0, w0, w22, uxth
    8950:	ldr	w1, [x19, #8]
    8954:	sub	w1, w1, #0x1
    8958:	bfxil	w26, w1, #0, #16
    895c:	bfi	w26, w0, #16, #16
    8960:	ldr	x2, [x20, #72]
    8964:	mov	w1, w26
    8968:	mov	x0, x20
    896c:	blr	x2
    8970:	mov	x1, x20
    8974:	mov	w0, #0x2503                	// #9475
    8978:	bl	a100 <grub_putcode>
    897c:	ldr	w0, [x19, #4]
    8980:	add	w23, w23, w0
    8984:	ldr	w0, [x19, #8]
    8988:	ldr	w1, [x19, #12]
    898c:	add	w0, w0, w1
    8990:	add	w0, w0, #0x1
    8994:	bfxil	w27, w0, #0, #16
    8998:	bfi	w27, w23, #16, #16
    899c:	ldr	x2, [x20, #72]
    89a0:	mov	w1, w27
    89a4:	mov	x0, x20
    89a8:	blr	x2
    89ac:	mov	x1, x20
    89b0:	mov	w0, #0x2503                	// #9475
    89b4:	bl	a100 <grub_putcode>
    89b8:	add	w22, w22, #0x1
    89bc:	ldr	w0, [x19]
    89c0:	cmp	w22, w0
    89c4:	b.lt	8944 <grub_menu_init_page+0x464>  // b.tstop
    89c8:	ldr	w1, [x19, #4]
    89cc:	add	w0, w1, w0
    89d0:	ldr	w2, [x19, #8]
    89d4:	sub	w2, w2, #0x1
    89d8:	mov	w1, #0x0                   	// #0
    89dc:	bfxil	w1, w2, #0, #16
    89e0:	bfi	w1, w0, #16, #16
    89e4:	ldr	x2, [x20, #72]
    89e8:	mov	x0, x20
    89ec:	blr	x2
    89f0:	mov	x1, x20
    89f4:	mov	w0, #0x2517                	// #9495
    89f8:	bl	a100 <grub_putcode>
    89fc:	ldr	w0, [x19, #12]
    8a00:	tbnz	w0, #31, 8a28 <grub_menu_init_page+0x548>
    8a04:	mov	w22, #0x0                   	// #0
    8a08:	mov	w23, #0x2501                	// #9473
    8a0c:	mov	x1, x20
    8a10:	mov	w0, w23
    8a14:	bl	a100 <grub_putcode>
    8a18:	add	w22, w22, #0x1
    8a1c:	ldr	w0, [x19, #12]
    8a20:	cmp	w22, w0
    8a24:	b.le	8a0c <grub_menu_init_page+0x52c>
    8a28:	mov	x1, x20
    8a2c:	mov	w0, #0x251b                	// #9499
    8a30:	bl	a100 <grub_putcode>
    8a34:	ldr	x2, [x20, #88]
    8a38:	cbz	x2, 8a48 <grub_menu_init_page+0x568>
    8a3c:	mov	w1, #0x1                   	// #1
    8a40:	mov	x0, x20
    8a44:	blr	x2
    8a48:	ldr	w0, [x19, #4]
    8a4c:	ldr	w1, [x19]
    8a50:	add	w0, w0, w1
    8a54:	add	w0, w0, #0x1
    8a58:	ldr	w2, [x19, #8]
    8a5c:	sub	w2, w2, #0x1
    8a60:	mov	w1, #0x0                   	// #0
    8a64:	bfxil	w1, w2, #0, #16
    8a68:	bfi	w1, w0, #16, #16
    8a6c:	ldr	x2, [x20, #72]
    8a70:	mov	x0, x20
    8a74:	blr	x2
    8a78:	b	87d8 <grub_menu_init_page+0x2f8>
    8a7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8a80:	ldr	x0, [x0]
    8a84:	ldrb	w25, [x0]
    8a88:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8a8c:	ldr	x0, [x0]
    8a90:	ldrb	w24, [x0]
    8a94:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8a98:	ldr	x22, [x0]
    8a9c:	strb	w25, [x22]
    8aa0:	strb	w24, [x22, #1]
    8aa4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8aa8:	ldr	x0, [x0]
    8aac:	bl	0 <grub_env_get>
    8ab0:	mov	x1, x0
    8ab4:	mov	x0, x22
    8ab8:	bl	2f80 <grub_parse_color_name_pair>
    8abc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8ac0:	ldr	x0, [x0]
    8ac4:	bl	0 <grub_env_get>
    8ac8:	mov	x1, x0
    8acc:	add	x0, x22, #0x1
    8ad0:	bl	2f80 <grub_parse_color_name_pair>
    8ad4:	str	wzr, [sp, #100]
    8ad8:	b	879c <grub_menu_init_page+0x2bc>
    8adc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8ae0:	ldr	x0, [x0]
    8ae4:	ldrb	w25, [x0]
    8ae8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8aec:	ldr	x0, [x0]
    8af0:	ldrb	w24, [x0]
    8af4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8af8:	ldr	x22, [x0]
    8afc:	strb	w25, [x22]
    8b00:	strb	w24, [x22, #1]
    8b04:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8b08:	ldr	x0, [x0]
    8b0c:	bl	0 <grub_env_get>
    8b10:	mov	x1, x0
    8b14:	mov	x0, x22
    8b18:	bl	2f80 <grub_parse_color_name_pair>
    8b1c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8b20:	ldr	x0, [x0]
    8b24:	bl	0 <grub_env_get>
    8b28:	mov	x1, x0
    8b2c:	add	x0, x22, #0x1
    8b30:	bl	2f80 <grub_parse_color_name_pair>
    8b34:	str	wzr, [sp, #100]
    8b38:	b	86d8 <grub_menu_init_page+0x1f8>
    8b3c:	nop
	...

0000000000008b68 <grub_menu_try_text>:
    8b68:	stp	x29, x30, [sp, #-64]!
    8b6c:	mov	x29, sp
    8b70:	stp	x21, x22, [sp, #32]
    8b74:	stp	x23, x24, [sp, #48]
    8b78:	mov	x24, x0
    8b7c:	mov	w23, w1
    8b80:	mov	x21, x2
    8b84:	mov	w22, w3
    8b88:	mov	x0, #0x30                  	// #48
    8b8c:	bl	0 <grub_zalloc>
    8b90:	cbz	x0, 8c74 <grub_menu_try_text+0x10c>
    8b94:	stp	x19, x20, [sp, #16]
    8b98:	mov	x20, x0
    8b9c:	mov	x0, #0x40                  	// #64
    8ba0:	bl	0 <grub_zalloc>
    8ba4:	mov	x19, x0
    8ba8:	cbz	x0, 8c84 <grub_menu_try_text+0x11c>
    8bac:	str	x24, [x0, #56]
    8bb0:	str	x0, [x20, #8]
    8bb4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8bb8:	ldr	x0, [x0]
    8bbc:	str	x0, [x20, #16]
    8bc0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8bc4:	ldr	x0, [x0]
    8bc8:	str	x0, [x20, #24]
    8bcc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8bd0:	ldr	x0, [x0]
    8bd4:	str	x0, [x20, #32]
    8bd8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8bdc:	ldr	x0, [x0]
    8be0:	str	x0, [x20, #40]
    8be4:	str	x21, [x19, #48]
    8be8:	str	w23, [x19, #4]
    8bec:	str	wzr, [x19]
    8bf0:	ldr	x0, [x19, #56]
    8bf4:	ldr	x2, [x0, #96]
    8bf8:	cbz	x2, 8c04 <grub_menu_try_text+0x9c>
    8bfc:	mov	w1, #0x0                   	// #0
    8c00:	blr	x2
    8c04:	ldr	x3, [x19, #56]
    8c08:	add	x2, x19, #0x8
    8c0c:	mov	w1, #0x0                   	// #0
    8c10:	mov	w0, w22
    8c14:	bl	84e0 <grub_menu_init_page>
    8c18:	ldr	w0, [x19, #8]
    8c1c:	ldr	w1, [x19, #4]
    8c20:	cmp	w0, w1
    8c24:	b.gt	8c38 <grub_menu_try_text+0xd0>
    8c28:	sub	w0, w0, #0x1
    8c2c:	sub	w1, w1, w0
    8c30:	str	w1, [x19]
    8c34:	str	w0, [x19, #4]
    8c38:	mov	x1, x19
    8c3c:	mov	x0, x21
    8c40:	bl	7d68 <grub_menu_entry_run+0x173c>
    8c44:	ldr	x0, [x19, #56]
    8c48:	ldr	x1, [x0, #104]
    8c4c:	cbz	x1, 8c54 <grub_menu_try_text+0xec>
    8c50:	blr	x1
    8c54:	mov	x0, x20
    8c58:	bl	4520 <grub_menu_register_viewer>
    8c5c:	mov	w0, #0x0                   	// #0
    8c60:	ldp	x19, x20, [sp, #16]
    8c64:	ldp	x21, x22, [sp, #32]
    8c68:	ldp	x23, x24, [sp, #48]
    8c6c:	ldp	x29, x30, [sp], #64
    8c70:	ret
    8c74:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8c78:	ldr	x0, [x0]
    8c7c:	ldr	w0, [x0]
    8c80:	b	8c64 <grub_menu_try_text+0xfc>
    8c84:	mov	x0, x20
    8c88:	bl	0 <grub_free>
    8c8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8c90:	ldr	x0, [x0]
    8c94:	ldr	w0, [x0]
    8c98:	ldp	x19, x20, [sp, #16]
    8c9c:	b	8c64 <grub_menu_try_text+0xfc>
	...

0000000000008cc8 <grub_get_human_size>:
    8cc8:	stp	x29, x30, [sp, #-96]!
    8ccc:	mov	x29, sp
    8cd0:	stp	x19, x20, [sp, #16]
    8cd4:	stp	x21, x22, [sp, #32]
    8cd8:	str	x23, [sp, #48]
    8cdc:	mov	x22, x0
    8ce0:	mov	w21, w1
    8ce4:	cmp	w1, #0x2
    8ce8:	b.eq	8db8 <grub_get_human_size+0xf0>  // b.none
    8cec:	add	x0, x0, x0, lsl #1
    8cf0:	add	x0, x22, x0, lsl #3
    8cf4:	lsl	x0, x0, #2
    8cf8:	mov	x20, x0
    8cfc:	mov	x1, #0x8fff                	// #36863
    8d00:	movk	x1, #0x1, lsl #16
    8d04:	cmp	x0, x1
    8d08:	b.ls	8df0 <grub_get_human_size+0x128>  // b.plast
    8d0c:	mov	w19, #0x0                   	// #0
    8d10:	mov	w3, #0x63fffff             	// #104857599
    8d14:	add	x2, x20, #0x200
    8d18:	lsr	x20, x2, #10
    8d1c:	add	w19, w19, #0x1
    8d20:	cmp	x2, x3
    8d24:	b.hi	8d14 <grub_get_human_size+0x4c>  // b.pmore
    8d28:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8d2c:	ldr	x0, [x0]
    8d30:	ubfiz	x1, x21, #1, #32
    8d34:	add	x1, x1, w21, uxtw
    8d38:	lsl	x1, x1, #1
    8d3c:	add	x1, x1, w19, uxtw
    8d40:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    8d44:	ldr	x2, [x2]
    8d48:	ldr	x2, [x2]
    8d4c:	ldr	x0, [x0, x1, lsl #3]
    8d50:	blr	x2
    8d54:	mov	x23, x0
    8d58:	cmp	w19, #0x0
    8d5c:	ccmp	w21, #0x2, #0x4, eq  // eq = none
    8d60:	b.ne	8e1c <grub_get_human_size+0x154>  // b.any
    8d64:	add	x2, sp, #0x58
    8d68:	mov	x1, #0x64                  	// #100
    8d6c:	mov	x0, x20
    8d70:	bl	0 <grub_divmod64>
    8d74:	mov	x5, x23
    8d78:	ldr	x4, [sp, #88]
    8d7c:	mov	x3, x0
    8d80:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8d84:	ldr	x2, [x0]
    8d88:	mov	x1, #0x1e                  	// #30
    8d8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8d90:	ldr	x0, [x0]
    8d94:	bl	0 <grub_snprintf>
    8d98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8d9c:	ldr	x0, [x0]
    8da0:	str	x0, [sp, #72]
    8da4:	ldp	x19, x20, [sp, #16]
    8da8:	ldp	x21, x22, [sp, #32]
    8dac:	ldr	x23, [sp, #48]
    8db0:	ldp	x29, x30, [sp], #96
    8db4:	ret
    8db8:	mov	x20, x0
    8dbc:	mov	x0, #0x8fff                	// #36863
    8dc0:	movk	x0, #0x1, lsl #16
    8dc4:	cmp	x22, x0
    8dc8:	b.hi	8d0c <grub_get_human_size+0x44>  // b.pmore
    8dcc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8dd0:	ldr	x0, [x0]
    8dd4:	ldr	x1, [x0]
    8dd8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8ddc:	ldr	x0, [x0]
    8de0:	blr	x1
    8de4:	mov	x23, x0
    8de8:	mov	x20, x22
    8dec:	b	8d64 <grub_get_human_size+0x9c>
    8df0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8df4:	ldr	x2, [x0]
    8df8:	ubfiz	x0, x21, #1, #32
    8dfc:	add	x0, x0, w21, uxtw
    8e00:	lsl	x0, x0, #4
    8e04:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    8e08:	ldr	x1, [x1]
    8e0c:	ldr	x1, [x1]
    8e10:	ldr	x0, [x2, x0]
    8e14:	blr	x1
    8e18:	mov	x23, x0
    8e1c:	mov	x4, x23
    8e20:	mov	x3, x22
    8e24:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8e28:	ldr	x2, [x0]
    8e2c:	mov	x1, #0x1e                  	// #30
    8e30:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8e34:	ldr	x0, [x0]
    8e38:	bl	0 <grub_snprintf>
    8e3c:	b	8d98 <grub_get_human_size+0xd0>
	...

0000000000008e70 <grub_normal_print_device_info>:
    8e70:	stp	x29, x30, [sp, #-96]!
    8e74:	mov	x29, sp
    8e78:	stp	x19, x20, [sp, #16]
    8e7c:	mov	x19, x0
    8e80:	mov	w1, #0x2c                  	// #44
    8e84:	bl	0 <grub_strchr>
    8e88:	cbz	x0, 9018 <grub_normal_print_device_info+0x1a8>
    8e8c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8e90:	ldr	x20, [x0]
    8e94:	ldr	x1, [x20]
    8e98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8e9c:	ldr	x0, [x0]
    8ea0:	blr	x1
    8ea4:	mov	x1, x19
    8ea8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8eac:	ldr	x0, [x0]
    8eb0:	bl	0 <grub_printf_>
    8eb4:	ldr	x1, [x20]
    8eb8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8ebc:	ldr	x0, [x0]
    8ec0:	blr	x1
    8ec4:	mov	x0, x19
    8ec8:	bl	0 <grub_device_open>
    8ecc:	mov	x19, x0
    8ed0:	cbz	x0, 9044 <grub_normal_print_device_info+0x1d4>
    8ed4:	ldr	x0, [x0]
    8ed8:	cbz	x0, 920c <grub_normal_print_device_info+0x39c>
    8edc:	stp	x21, x22, [sp, #32]
    8ee0:	mov	x0, x19
    8ee4:	bl	0 <grub_fs_probe>
    8ee8:	mov	x20, x0
    8eec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8ef0:	ldr	x0, [x0]
    8ef4:	str	wzr, [x0]
    8ef8:	cbz	x20, 9104 <grub_normal_print_device_info+0x294>
    8efc:	ldr	x21, [x20, #16]
    8f00:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f04:	ldr	x1, [x0]
    8f08:	mov	x0, x21
    8f0c:	bl	0 <grub_strcmp>
    8f10:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    8f14:	ldr	x1, [x1]
    8f18:	cmp	w0, #0x0
    8f1c:	csel	x1, x21, x1, ne  // ne = any
    8f20:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f24:	ldr	x0, [x0]
    8f28:	bl	0 <grub_printf_>
    8f2c:	ldr	x2, [x20, #56]
    8f30:	cbz	x2, 8f9c <grub_normal_print_device_info+0x12c>
    8f34:	add	x1, sp, #0x58
    8f38:	mov	x0, x19
    8f3c:	blr	x2
    8f40:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f44:	ldr	x0, [x0]
    8f48:	ldr	w0, [x0]
    8f4c:	cbnz	w0, 8f90 <grub_normal_print_device_info+0x120>
    8f50:	ldr	x0, [sp, #88]
    8f54:	cbz	x0, 8f88 <grub_normal_print_device_info+0x118>
    8f58:	bl	0 <grub_strlen>
    8f5c:	cbz	x0, 8f88 <grub_normal_print_device_info+0x118>
    8f60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f64:	ldr	x0, [x0]
    8f68:	ldr	x1, [x0]
    8f6c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f70:	ldr	x0, [x0]
    8f74:	blr	x1
    8f78:	ldr	x1, [sp, #88]
    8f7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f80:	ldr	x0, [x0]
    8f84:	bl	0 <grub_printf_>
    8f88:	ldr	x0, [sp, #88]
    8f8c:	bl	0 <grub_free>
    8f90:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8f94:	ldr	x0, [x0]
    8f98:	str	wzr, [x0]
    8f9c:	ldr	x2, [x20, #72]
    8fa0:	cbz	x2, 8fcc <grub_normal_print_device_info+0x15c>
    8fa4:	add	x1, sp, #0x54
    8fa8:	mov	x0, x19
    8fac:	blr	x2
    8fb0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8fb4:	ldr	x0, [x0]
    8fb8:	ldr	w0, [x0]
    8fbc:	cbz	w0, 9070 <grub_normal_print_device_info+0x200>
    8fc0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8fc4:	ldr	x0, [x0]
    8fc8:	str	wzr, [x0]
    8fcc:	ldr	x2, [x20, #64]
    8fd0:	cbz	x2, 912c <grub_normal_print_device_info+0x2bc>
    8fd4:	add	x1, sp, #0x58
    8fd8:	mov	x0, x19
    8fdc:	blr	x2
    8fe0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    8fe4:	ldr	x0, [x0]
    8fe8:	ldr	w0, [x0]
    8fec:	cbnz	w0, 9008 <grub_normal_print_device_info+0x198>
    8ff0:	ldr	x0, [sp, #88]
    8ff4:	cbz	x0, 9000 <grub_normal_print_device_info+0x190>
    8ff8:	bl	0 <grub_strlen>
    8ffc:	cbnz	x0, 90f0 <grub_normal_print_device_info+0x280>
    9000:	ldr	x0, [sp, #88]
    9004:	bl	0 <grub_free>
    9008:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    900c:	ldr	x0, [x0]
    9010:	str	wzr, [x0]
    9014:	b	912c <grub_normal_print_device_info+0x2bc>
    9018:	mov	x1, x19
    901c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9020:	ldr	x0, [x0]
    9024:	bl	0 <grub_printf_>
    9028:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    902c:	ldr	x0, [x0]
    9030:	ldr	x1, [x0]
    9034:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9038:	ldr	x0, [x0]
    903c:	blr	x1
    9040:	b	8ec4 <grub_normal_print_device_info+0x54>
    9044:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9048:	ldr	x0, [x0]
    904c:	ldr	x1, [x0]
    9050:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9054:	ldr	x0, [x0]
    9058:	blr	x1
    905c:	mov	x1, x0
    9060:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9064:	ldr	x0, [x0]
    9068:	bl	0 <grub_printf>
    906c:	b	9214 <grub_normal_print_device_info+0x3a4>
    9070:	stp	x23, x24, [sp, #48]
    9074:	stp	x25, x26, [sp, #64]
    9078:	add	x1, sp, #0x58
    907c:	ldr	w0, [sp, #84]
    9080:	bl	3ef8 <grub_unixtime2datetime>
    9084:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9088:	ldr	x0, [x0]
    908c:	ldr	x1, [x0]
    9090:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9094:	ldr	x0, [x0]
    9098:	blr	x1
    909c:	ldrh	w21, [sp, #88]
    90a0:	ldrb	w22, [sp, #90]
    90a4:	ldrb	w23, [sp, #91]
    90a8:	ldrb	w24, [sp, #92]
    90ac:	ldrb	w25, [sp, #93]
    90b0:	ldrb	w26, [sp, #94]
    90b4:	add	x0, sp, #0x58
    90b8:	bl	3eb4 <grub_get_weekday_name>
    90bc:	mov	x7, x0
    90c0:	mov	w6, w26
    90c4:	mov	w5, w25
    90c8:	mov	w4, w24
    90cc:	mov	w3, w23
    90d0:	mov	w2, w22
    90d4:	mov	w1, w21
    90d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    90dc:	ldr	x0, [x0]
    90e0:	bl	0 <grub_printf_>
    90e4:	ldp	x23, x24, [sp, #48]
    90e8:	ldp	x25, x26, [sp, #64]
    90ec:	b	8fc0 <grub_normal_print_device_info+0x150>
    90f0:	ldr	x1, [sp, #88]
    90f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    90f8:	ldr	x0, [x0]
    90fc:	bl	0 <grub_printf>
    9100:	b	9000 <grub_normal_print_device_info+0x190>
    9104:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9108:	ldr	x0, [x0]
    910c:	ldr	x1, [x0]
    9110:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9114:	ldr	x0, [x0]
    9118:	blr	x1
    911c:	mov	x1, x0
    9120:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9124:	ldr	x0, [x0]
    9128:	bl	0 <grub_printf>
    912c:	ldr	x0, [x19]
    9130:	ldr	x1, [x0, #40]
    9134:	cbz	x1, 9260 <grub_normal_print_device_info+0x3f0>
    9138:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    913c:	ldr	x0, [x0]
    9140:	ldr	x1, [x0]
    9144:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9148:	ldr	x0, [x0]
    914c:	blr	x1
    9150:	ldr	x1, [x19]
    9154:	ldr	x2, [x1, #40]
    9158:	cbz	x2, 9250 <grub_normal_print_device_info+0x3e0>
    915c:	mov	x3, x2
    9160:	mov	x1, #0x0                   	// #0
    9164:	ldr	x4, [x3, #8]
    9168:	add	x1, x1, x4
    916c:	ldr	x3, [x3, #40]
    9170:	cbnz	x3, 9164 <grub_normal_print_device_info+0x2f4>
    9174:	lsr	x1, x1, #1
    9178:	mov	x3, #0x0                   	// #0
    917c:	ldr	x4, [x2, #8]
    9180:	add	x3, x3, x4
    9184:	ldr	x2, [x2, #40]
    9188:	cbnz	x2, 917c <grub_normal_print_device_info+0x30c>
    918c:	tbz	w3, #0, 9244 <grub_normal_print_device_info+0x3d4>
    9190:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    9194:	ldr	x2, [x2]
    9198:	bl	0 <grub_printf>
    919c:	ldr	x0, [x19]
    91a0:	bl	0 <grub_disk_get_size>
    91a4:	cmn	x0, #0x1
    91a8:	b.eq	927c <grub_normal_print_device_info+0x40c>  // b.none
    91ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    91b0:	ldr	x0, [x0]
    91b4:	ldr	x1, [x0]
    91b8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    91bc:	ldr	x0, [x0]
    91c0:	blr	x1
    91c4:	mov	x20, x0
    91c8:	ldr	x0, [x19]
    91cc:	bl	0 <grub_disk_get_size>
    91d0:	lsr	x21, x0, #1
    91d4:	ldr	x0, [x19]
    91d8:	bl	0 <grub_disk_get_size>
    91dc:	tbz	w0, #0, 9290 <grub_normal_print_device_info+0x420>
    91e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    91e4:	ldr	x0, [x0]
    91e8:	ldr	x1, [x0]
    91ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    91f0:	ldr	x0, [x0]
    91f4:	blr	x1
    91f8:	mov	x2, x0
    91fc:	mov	x1, x21
    9200:	mov	x0, x20
    9204:	bl	0 <grub_printf>
    9208:	ldp	x21, x22, [sp, #32]
    920c:	mov	x0, x19
    9210:	bl	0 <grub_device_close>
    9214:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9218:	ldr	x0, [x0]
    921c:	ldr	x1, [x0]
    9220:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9224:	ldr	x0, [x0]
    9228:	blr	x1
    922c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9230:	ldr	x0, [x0]
    9234:	ldr	w0, [x0]
    9238:	ldp	x19, x20, [sp, #16]
    923c:	ldp	x29, x30, [sp], #96
    9240:	ret
    9244:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    9248:	ldr	x2, [x2]
    924c:	b	9198 <grub_normal_print_device_info+0x328>
    9250:	mov	x1, #0x0                   	// #0
    9254:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    9258:	ldr	x2, [x2]
    925c:	b	9198 <grub_normal_print_device_info+0x328>
    9260:	ldr	w0, [x0, #24]
    9264:	mov	w1, #0x1                   	// #1
    9268:	lsl	w1, w1, w0
    926c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9270:	ldr	x0, [x0]
    9274:	bl	0 <grub_printf_>
    9278:	b	919c <grub_normal_print_device_info+0x32c>
    927c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9280:	ldr	x0, [x0]
    9284:	bl	0 <grub_puts_>
    9288:	ldp	x21, x22, [sp, #32]
    928c:	b	920c <grub_normal_print_device_info+0x39c>
    9290:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9294:	ldr	x2, [x0]
    9298:	b	91fc <grub_normal_print_device_info+0x38c>
    929c:	nop
	...
    9358:	stp	x29, x30, [sp, #-48]!
    935c:	mov	x29, sp
    9360:	stp	x19, x20, [sp, #16]
    9364:	stp	x21, x22, [sp, #32]
    9368:	mov	x20, x0
    936c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9370:	ldr	x0, [x0]
    9374:	ldr	w21, [x0]
    9378:	cbnz	w21, 93d8 <grub_normal_print_device_info+0x568>
    937c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9380:	ldr	x0, [x0]
    9384:	mov	w1, #0x1                   	// #1
    9388:	str	w1, [x0]
    938c:	ldr	x19, [x0, #8]
    9390:	cbz	x19, 93c4 <grub_normal_print_device_info+0x554>
    9394:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    9398:	b	9410 <grub_normal_print_device_info+0x5a0>
    939c:	cmp	w6, #0x19
    93a0:	b.ls	947c <grub_normal_print_device_info+0x60c>  // b.plast
    93a4:	b	93ec <grub_normal_print_device_info+0x57c>
    93a8:	ldr	x0, [x19, #16]
    93ac:	bl	0 <grub_dl_load>
    93b0:	cbz	x0, 93b8 <grub_normal_print_device_info+0x548>
    93b4:	bl	0 <grub_dl_ref>
    93b8:	ldr	x0, [x22]
    93bc:	str	wzr, [x0]
    93c0:	b	9408 <grub_normal_print_device_info+0x598>
    93c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    93c8:	ldr	x1, [x0]
    93cc:	ldr	w0, [x1]
    93d0:	sub	w0, w0, #0x1
    93d4:	str	w0, [x1]
    93d8:	ldp	x19, x20, [sp, #16]
    93dc:	ldp	x21, x22, [sp, #32]
    93e0:	ldp	x29, x30, [sp], #48
    93e4:	ret
    93e8:	mov	w4, w21
    93ec:	ldrb	w1, [x3]
    93f0:	sub	w2, w1, #0x41
    93f4:	add	w0, w1, #0x20
    93f8:	cmp	w2, #0x1a
    93fc:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    9400:	cmp	w1, w4
    9404:	b.eq	93a8 <grub_normal_print_device_info+0x538>  // b.none
    9408:	ldr	x19, [x19]
    940c:	cbz	x19, 93c4 <grub_normal_print_device_info+0x554>
    9410:	ldr	x3, [x19, #8]
    9414:	ldrb	w1, [x20]
    9418:	mov	x5, x20
    941c:	cbz	w1, 93e8 <grub_normal_print_device_info+0x578>
    9420:	ldrb	w2, [x3]
    9424:	cbz	w2, 946c <grub_normal_print_device_info+0x5fc>
    9428:	mov	w4, w1
    942c:	sub	w6, w1, #0x41
    9430:	add	w0, w1, #0x20
    9434:	cmp	w6, #0x1a
    9438:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    943c:	sub	w7, w2, #0x41
    9440:	add	w0, w2, #0x20
    9444:	cmp	w7, #0x1a
    9448:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    944c:	cmp	w2, w1
    9450:	b.ne	939c <grub_normal_print_device_info+0x52c>  // b.any
    9454:	add	x3, x3, #0x1
    9458:	ldrb	w1, [x5, #1]!
    945c:	cbnz	w1, 9420 <grub_normal_print_device_info+0x5b0>
    9460:	b	93e8 <grub_normal_print_device_info+0x578>
    9464:	ldrb	w1, [x3]
    9468:	b	9400 <grub_normal_print_device_info+0x590>
    946c:	mov	w4, w1
    9470:	sub	w1, w1, #0x41
    9474:	cmp	w1, #0x19
    9478:	b.hi	9464 <grub_normal_print_device_info+0x5f4>  // b.pmore
    947c:	add	w4, w4, #0x20
    9480:	b	93ec <grub_normal_print_device_info+0x57c>
    9484:	nop
	...

0000000000009498 <read_crypto_list>:
    9498:	cbz	x0, 953c <read_crypto_list+0xa4>
    949c:	stp	x29, x30, [sp, #-96]!
    94a0:	mov	x29, sp
    94a4:	stp	x19, x20, [sp, #16]
    94a8:	mov	x1, x0
    94ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    94b0:	ldr	x0, [x0]
    94b4:	bl	0 <grub_xasprintf>
    94b8:	mov	x19, x0
    94bc:	cbz	x0, 954c <read_crypto_list+0xb4>
    94c0:	stp	x21, x22, [sp, #32]
    94c4:	mov	w1, #0x32                  	// #50
    94c8:	bl	0 <grub_file_open>
    94cc:	mov	x22, x0
    94d0:	mov	x0, x19
    94d4:	bl	0 <grub_free>
    94d8:	cbz	x22, 955c <read_crypto_list+0xc4>
    94dc:	stp	x23, x24, [sp, #48]
    94e0:	stp	x25, x26, [sp, #64]
    94e4:	str	x27, [sp, #80]
    94e8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    94ec:	ldr	x0, [x0]
    94f0:	ldr	x19, [x0, #8]
    94f4:	cbz	x19, 951c <read_crypto_list+0x84>
    94f8:	mov	x20, x19
    94fc:	ldr	x19, [x19]
    9500:	ldr	x0, [x20, #8]
    9504:	bl	0 <grub_free>
    9508:	ldr	x0, [x20, #16]
    950c:	bl	0 <grub_free>
    9510:	mov	x0, x20
    9514:	bl	0 <grub_free>
    9518:	cbnz	x19, 94f8 <read_crypto_list+0x60>
    951c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9520:	ldr	x0, [x0]
    9524:	str	xzr, [x0, #8]
    9528:	mov	w23, #0x3a                  	// #58
    952c:	mov	x24, #0x18                  	// #24
    9530:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    9534:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
    9538:	b	9600 <read_crypto_list+0x168>
    953c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9540:	ldr	x0, [x0]
    9544:	str	wzr, [x0]
    9548:	ret
    954c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9550:	ldr	x0, [x0]
    9554:	str	wzr, [x0]
    9558:	b	968c <read_crypto_list+0x1f4>
    955c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9560:	ldr	x0, [x0]
    9564:	str	wzr, [x0]
    9568:	ldp	x21, x22, [sp, #32]
    956c:	b	968c <read_crypto_list+0x1f4>
    9570:	add	x19, x19, #0x1
    9574:	ldrb	w0, [x19]
    9578:	bl	0 <grub_isspace>
    957c:	cbnz	w0, 9570 <read_crypto_list+0xd8>
    9580:	mov	w1, w23
    9584:	mov	x0, x19
    9588:	bl	0 <grub_strchr>
    958c:	cbz	x0, 95f8 <read_crypto_list+0x160>
    9590:	mov	x20, x0
    9594:	strb	wzr, [x20], #1
    9598:	ldrb	w0, [x0, #1]
    959c:	cmp	w0, #0x20
    95a0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    95a4:	b.ne	95b8 <read_crypto_list+0x120>  // b.any
    95a8:	ldrb	w1, [x20, #1]!
    95ac:	cmp	w1, #0x20
    95b0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    95b4:	b.eq	95a8 <read_crypto_list+0x110>  // b.none
    95b8:	mov	x0, x24
    95bc:	bl	0 <grub_malloc>
    95c0:	mov	x27, x0
    95c4:	cbz	x0, 9618 <read_crypto_list+0x180>
    95c8:	mov	x0, x19
    95cc:	bl	0 <grub_strdup>
    95d0:	str	x0, [x27, #8]
    95d4:	cbz	x0, 9624 <read_crypto_list+0x18c>
    95d8:	mov	x0, x20
    95dc:	bl	0 <grub_strdup>
    95e0:	str	x0, [x27, #16]
    95e4:	cbz	x0, 9638 <read_crypto_list+0x1a0>
    95e8:	ldr	x0, [x25]
    95ec:	ldr	x1, [x0, #8]
    95f0:	str	x1, [x27]
    95f4:	str	x27, [x0, #8]
    95f8:	mov	x0, x21
    95fc:	bl	0 <grub_free>
    9600:	mov	x0, x22
    9604:	bl	dfb8 <grub_file_getline>
    9608:	mov	x21, x0
    960c:	cbz	x0, 9654 <read_crypto_list+0x1bc>
    9610:	mov	x19, x0
    9614:	b	9574 <read_crypto_list+0xdc>
    9618:	ldr	x0, [x26]
    961c:	str	wzr, [x0]
    9620:	b	95f8 <read_crypto_list+0x160>
    9624:	ldr	x0, [x26]
    9628:	str	wzr, [x0]
    962c:	mov	x0, x27
    9630:	bl	0 <grub_free>
    9634:	b	95f8 <read_crypto_list+0x160>
    9638:	ldr	x0, [x26]
    963c:	str	wzr, [x0]
    9640:	ldr	x0, [x27, #8]
    9644:	bl	0 <grub_free>
    9648:	mov	x0, x27
    964c:	bl	0 <grub_free>
    9650:	b	95f8 <read_crypto_list+0x160>
    9654:	mov	x0, x22
    9658:	bl	0 <grub_file_close>
    965c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9660:	ldr	x0, [x0]
    9664:	str	wzr, [x0]
    9668:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    966c:	ldr	x0, [x0]
    9670:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    9674:	ldr	x1, [x1]
    9678:	str	x1, [x0]
    967c:	ldp	x21, x22, [sp, #32]
    9680:	ldp	x23, x24, [sp, #48]
    9684:	ldp	x25, x26, [sp, #64]
    9688:	ldr	x27, [sp, #80]
    968c:	ldp	x19, x20, [sp, #16]
    9690:	ldp	x29, x30, [sp], #96
    9694:	ret
	...
    96c0:	stp	x29, x30, [sp, #-32]!
    96c4:	mov	x29, sp
    96c8:	stp	x19, x20, [sp, #16]
    96cc:	mov	x20, x0
    96d0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    96d4:	ldr	x0, [x0]
    96d8:	ldr	x19, [x0]
    96dc:	cbz	x19, 96f8 <read_crypto_list+0x260>
    96e0:	ldr	x1, [x20, #16]
    96e4:	ldr	x0, [x19, #128]
    96e8:	bl	0 <grub_strcmp>
    96ec:	cbz	w0, 9728 <read_crypto_list+0x290>
    96f0:	ldr	x19, [x19]
    96f4:	cbnz	x19, 96e0 <read_crypto_list+0x248>
    96f8:	mov	x0, #0x88                  	// #136
    96fc:	bl	0 <grub_zalloc>
    9700:	mov	x19, x0
    9704:	cbz	x0, 9738 <read_crypto_list+0x2a0>
    9708:	ldr	x0, [x20, #16]
    970c:	bl	0 <grub_strdup>
    9710:	str	x0, [x19, #128]
    9714:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9718:	ldr	x0, [x0]
    971c:	ldr	x1, [x0]
    9720:	str	x1, [x19]
    9724:	str	x19, [x0]
    9728:	mov	x0, x19
    972c:	ldp	x19, x20, [sp, #16]
    9730:	ldp	x29, x30, [sp], #32
    9734:	ret
    9738:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    973c:	ldr	x0, [x0]
    9740:	str	wzr, [x0]
    9744:	b	9728 <read_crypto_list+0x290>
	...
    9758:	stp	x29, x30, [sp, #-144]!
    975c:	mov	x29, sp
    9760:	stp	x19, x20, [sp, #16]
    9764:	stp	x21, x22, [sp, #32]
    9768:	mov	x21, x0
    976c:	mov	x19, x1
    9770:	stp	xzr, xzr, [sp, #112]
    9774:	stp	xzr, xzr, [sp, #128]
    9778:	mov	w0, #0x1                   	// #1
    977c:	strb	w0, [sp, #120]
    9780:	ldr	w0, [x21]
    9784:	and	w0, w0, #0x7fffff
    9788:	cmp	w2, #0x0
    978c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
    9790:	b.eq	97dc <read_crypto_list+0x344>  // b.none
    9794:	cmp	w0, #0x9
    9798:	b.eq	980c <read_crypto_list+0x374>  // b.none
    979c:	ldr	w0, [x1, #120]
    97a0:	and	w0, w0, #0x30
    97a4:	cmp	w0, #0x10
    97a8:	b.eq	9854 <read_crypto_list+0x3bc>  // b.none
    97ac:	ldr	x2, [x19, #40]
    97b0:	mov	x1, x21
    97b4:	mov	x0, x19
    97b8:	blr	x2
    97bc:	ldr	w0, [x21]
    97c0:	and	w0, w0, #0x7fffff
    97c4:	cmp	w0, #0xa
    97c8:	b.eq	999c <read_crypto_list+0x504>  // b.none
    97cc:	ldp	x19, x20, [sp, #16]
    97d0:	ldp	x21, x22, [sp, #32]
    97d4:	ldp	x29, x30, [sp], #144
    97d8:	ret
    97dc:	ldr	w0, [sp, #112]
    97e0:	mov	w1, #0x20                  	// #32
    97e4:	bfxil	w0, w1, #0, #23
    97e8:	str	w0, [sp, #112]
    97ec:	mov	w20, #0x8                   	// #8
    97f0:	ldr	x2, [x19, #40]
    97f4:	add	x1, sp, #0x70
    97f8:	mov	x0, x19
    97fc:	blr	x2
    9800:	subs	w20, w20, #0x1
    9804:	b.ne	97f0 <read_crypto_list+0x358>  // b.any
    9808:	b	97cc <read_crypto_list+0x334>
    980c:	ldr	x1, [x1, #64]
    9810:	cbz	x1, 99c0 <read_crypto_list+0x528>
    9814:	mov	x0, x19
    9818:	blr	x1
    981c:	ldr	w1, [sp, #112]
    9820:	mov	w2, #0x20                  	// #32
    9824:	bfxil	w1, w2, #0, #23
    9828:	str	w1, [sp, #112]
    982c:	mvn	w20, w0
    9830:	and	w20, w20, #0x7
    9834:	ldr	x2, [x19, #40]
    9838:	add	x1, sp, #0x70
    983c:	mov	x0, x19
    9840:	blr	x2
    9844:	sub	w20, w20, #0x1
    9848:	cmn	w20, #0x1
    984c:	b.ne	9834 <read_crypto_list+0x39c>  // b.any
    9850:	b	97cc <read_crypto_list+0x334>
    9854:	stp	x23, x24, [sp, #48]
    9858:	str	x25, [sp, #64]
    985c:	ldr	x2, [x19, #48]
    9860:	cbz	x2, 9890 <read_crypto_list+0x3f8>
    9864:	mov	x1, x21
    9868:	mov	x0, x19
    986c:	blr	x2
    9870:	strb	w0, [sp, #120]
    9874:	ldrh	w0, [x21, #6]
    9878:	ubfx	x0, x0, #3, #8
    987c:	mov	x23, #0xfffffffffffffffc    	// #-4
    9880:	mov	w22, #0xffffffff            	// #-1
    9884:	mov	x25, #0x0                   	// #0
    9888:	add	x24, x21, #0x18
    988c:	b	9960 <read_crypto_list+0x4c8>
    9890:	ldr	w0, [x21]
    9894:	and	w0, w0, #0x7fffff
    9898:	bl	c158 <grub_unicode_get_comb_type>
    989c:	cmp	w0, #0x0
    98a0:	cset	x0, eq  // eq = none
    98a4:	b	9870 <read_crypto_list+0x3d8>
    98a8:	ldr	w0, [x21]
    98ac:	ubfx	x0, x0, #0, #23
    98b0:	str	w0, [sp, #84]
    98b4:	ldr	w1, [x19, #120]
    98b8:	and	w1, w1, #0x38
    98bc:	cmp	w1, #0x18
    98c0:	b.ne	9900 <read_crypto_list+0x468>  // b.any
    98c4:	ldrb	w1, [x21, #4]
    98c8:	tbnz	w1, #0, 98e4 <read_crypto_list+0x44c>
    98cc:	ldrb	w1, [x21, #4]
    98d0:	and	x1, x1, #0x1f
    98d4:	ldr	w0, [sp, #84]
    98d8:	bl	de18 <grub_unicode_shape_code>
    98dc:	str	w0, [sp, #84]
    98e0:	b	9900 <read_crypto_list+0x468>
    98e4:	bl	ddc8 <grub_unicode_mirror_code>
    98e8:	str	w0, [sp, #84]
    98ec:	b	98cc <read_crypto_list+0x434>
    98f0:	mov	x1, x25
    98f4:	ldr	w0, [x1, x23]
    98f8:	ubfx	x0, x0, #0, #21
    98fc:	str	w0, [sp, #84]
    9900:	mov	x3, #0x14                  	// #20
    9904:	add	x2, sp, #0x58
    9908:	mov	x1, #0x1                   	// #1
    990c:	add	x0, sp, #0x54
    9910:	bl	bd20 <grub_ucs4_to_utf8>
    9914:	ldrb	w2, [sp, #88]
    9918:	cbz	w2, 9948 <read_crypto_list+0x4b0>
    991c:	add	x20, sp, #0x58
    9920:	ldr	w3, [sp, #112]
    9924:	bfxil	w3, w2, #0, #23
    9928:	str	w3, [sp, #112]
    992c:	ldr	x2, [x19, #40]
    9930:	add	x1, sp, #0x70
    9934:	mov	x0, x19
    9938:	blr	x2
    993c:	strb	wzr, [sp, #120]
    9940:	ldrb	w2, [x20, #1]!
    9944:	cbnz	w2, 9920 <read_crypto_list+0x488>
    9948:	add	w22, w22, #0x1
    994c:	ldrh	w0, [x21, #6]
    9950:	ubfx	x0, x0, #3, #8
    9954:	add	x23, x23, #0x4
    9958:	cmp	w0, w22
    995c:	b.le	9988 <read_crypto_list+0x4f0>
    9960:	cmn	w22, #0x1
    9964:	b.eq	98a8 <read_crypto_list+0x410>  // b.none
    9968:	ldrh	w1, [x21, #6]
    996c:	tst	w1, #0x7f8
    9970:	b.eq	98f0 <read_crypto_list+0x458>  // b.none
    9974:	mov	x1, x24
    9978:	cmp	w0, #0x2
    997c:	b.ls	98f4 <read_crypto_list+0x45c>  // b.plast
    9980:	ldr	x1, [x21, #24]
    9984:	b	98f4 <read_crypto_list+0x45c>
    9988:	mov	w0, #0x1                   	// #1
    998c:	strb	w0, [sp, #120]
    9990:	ldp	x23, x24, [sp, #48]
    9994:	ldr	x25, [sp, #64]
    9998:	b	97bc <read_crypto_list+0x324>
    999c:	ldr	w0, [sp, #112]
    99a0:	mov	w1, #0xd                   	// #13
    99a4:	bfxil	w0, w1, #0, #23
    99a8:	str	w0, [sp, #112]
    99ac:	ldr	x2, [x19, #40]
    99b0:	add	x1, sp, #0x70
    99b4:	mov	x0, x19
    99b8:	blr	x2
    99bc:	b	97cc <read_crypto_list+0x334>
    99c0:	ldr	w0, [x19, #120]
    99c4:	and	w0, w0, #0x30
    99c8:	cmp	w0, #0x10
    99cc:	b.ne	97ac <read_crypto_list+0x314>  // b.any
    99d0:	stp	x23, x24, [sp, #48]
    99d4:	str	x25, [sp, #64]
    99d8:	mov	x0, #0x8                   	// #8
    99dc:	b	9870 <read_crypto_list+0x3d8>
    99e0:	stp	x29, x30, [sp, #-48]!
    99e4:	mov	x29, sp
    99e8:	stp	xzr, xzr, [sp, #16]
    99ec:	stp	xzr, xzr, [sp, #32]
    99f0:	mov	w3, #0x1                   	// #1
    99f4:	strb	w3, [sp, #24]
    99f8:	cmp	w0, #0x7f
    99fc:	b.ls	9aac <read_crypto_list+0x614>  // b.plast
    9a00:	ldr	w3, [x1, #120]
    9a04:	ands	w3, w3, #0x38
    9a08:	b.eq	9ae8 <read_crypto_list+0x650>  // b.none
    9a0c:	cmp	w3, #0x8
    9a10:	b.ne	9aac <read_crypto_list+0x614>  // b.any
    9a14:	mov	w3, #0x2501                	// #9473
    9a18:	cmp	w0, w3
    9a1c:	b.eq	9b7c <read_crypto_list+0x6e4>  // b.none
    9a20:	cmp	w0, w3
    9a24:	b.ls	9a5c <read_crypto_list+0x5c4>  // b.plast
    9a28:	mov	w3, #0x2513                	// #9491
    9a2c:	cmp	w0, w3
    9a30:	b.eq	9bac <read_crypto_list+0x714>  // b.none
    9a34:	cmp	w0, w3
    9a38:	b.ls	9ac8 <read_crypto_list+0x630>  // b.plast
    9a3c:	mov	w3, #0x2517                	// #9495
    9a40:	cmp	w0, w3
    9a44:	b.eq	9bc4 <read_crypto_list+0x72c>  // b.none
    9a48:	mov	w3, #0x251b                	// #9499
    9a4c:	cmp	w0, w3
    9a50:	b.ne	9bcc <read_crypto_list+0x734>  // b.any
    9a54:	mov	w0, #0xd9                  	// #217
    9a58:	b	9aac <read_crypto_list+0x614>
    9a5c:	mov	w3, #0x2192                	// #8594
    9a60:	cmp	w0, w3
    9a64:	b.eq	9b84 <read_crypto_list+0x6ec>  // b.none
    9a68:	cmp	w0, w3
    9a6c:	b.ls	9a90 <read_crypto_list+0x5f8>  // b.plast
    9a70:	mov	w3, #0x2193                	// #8595
    9a74:	cmp	w0, w3
    9a78:	b.eq	9b9c <read_crypto_list+0x704>  // b.none
    9a7c:	mov	w3, #0x2195                	// #8597
    9a80:	cmp	w0, w3
    9a84:	b.ne	9ba4 <read_crypto_list+0x70c>  // b.any
    9a88:	mov	w0, #0x12                  	// #18
    9a8c:	b	9aac <read_crypto_list+0x614>
    9a90:	mov	w3, #0x2190                	// #8592
    9a94:	cmp	w0, w3
    9a98:	b.eq	9b8c <read_crypto_list+0x6f4>  // b.none
    9a9c:	mov	w3, #0x2191                	// #8593
    9aa0:	cmp	w0, w3
    9aa4:	b.ne	9b94 <read_crypto_list+0x6fc>  // b.any
    9aa8:	mov	w0, #0x18                  	// #24
    9aac:	ldr	w3, [sp, #16]
    9ab0:	bfxil	w3, w0, #0, #23
    9ab4:	str	w3, [sp, #16]
    9ab8:	add	x0, sp, #0x10
    9abc:	bl	9758 <read_crypto_list+0x2c0>
    9ac0:	ldp	x29, x30, [sp], #48
    9ac4:	ret
    9ac8:	mov	w3, #0x2503                	// #9475
    9acc:	cmp	w0, w3
    9ad0:	b.eq	9bb4 <read_crypto_list+0x71c>  // b.none
    9ad4:	mov	w3, #0x250f                	// #9487
    9ad8:	cmp	w0, w3
    9adc:	b.ne	9bbc <read_crypto_list+0x724>  // b.any
    9ae0:	mov	w0, #0xda                  	// #218
    9ae4:	b	9aac <read_crypto_list+0x614>
    9ae8:	mov	w3, #0x2193                	// #8595
    9aec:	cmp	w0, w3
    9af0:	b.eq	9bd4 <read_crypto_list+0x73c>  // b.none
    9af4:	cmp	w0, w3
    9af8:	b.hi	9b34 <read_crypto_list+0x69c>  // b.pmore
    9afc:	mov	w3, #0x2191                	// #8593
    9b00:	cmp	w0, w3
    9b04:	b.eq	9bdc <read_crypto_list+0x744>  // b.none
    9b08:	mov	w3, #0x2192                	// #8594
    9b0c:	cmp	w0, w3
    9b10:	b.ne	9b1c <read_crypto_list+0x684>  // b.any
    9b14:	mov	w0, #0x3e                  	// #62
    9b18:	b	9aac <read_crypto_list+0x614>
    9b1c:	mov	w3, #0x2190                	// #8592
    9b20:	cmp	w0, w3
    9b24:	mov	w0, #0x3f                  	// #63
    9b28:	mov	w3, #0x3c                  	// #60
    9b2c:	csel	w0, w0, w3, ne  // ne = any
    9b30:	b	9aac <read_crypto_list+0x614>
    9b34:	sub	w0, w0, #0x2, lsl #12
    9b38:	sub	w0, w0, #0x501
    9b3c:	cmp	w0, #0x1a
    9b40:	b.hi	9b74 <read_crypto_list+0x6dc>  // b.pmore
    9b44:	mov	x3, #0x1                   	// #1
    9b48:	lsl	x3, x3, x0
    9b4c:	mov	x4, #0x4000                	// #16384
    9b50:	movk	x4, #0x444, lsl #16
    9b54:	tst	x3, x4
    9b58:	b.ne	9be4 <read_crypto_list+0x74c>  // b.any
    9b5c:	tbnz	w3, #2, 9bec <read_crypto_list+0x754>
    9b60:	cmp	w0, #0x0
    9b64:	mov	w0, #0x3f                  	// #63
    9b68:	mov	w3, #0x2d                  	// #45
    9b6c:	csel	w0, w0, w3, ne  // ne = any
    9b70:	b	9aac <read_crypto_list+0x614>
    9b74:	mov	w0, #0x3f                  	// #63
    9b78:	b	9aac <read_crypto_list+0x614>
    9b7c:	mov	w0, #0xc4                  	// #196
    9b80:	b	9aac <read_crypto_list+0x614>
    9b84:	mov	w0, #0x1a                  	// #26
    9b88:	b	9aac <read_crypto_list+0x614>
    9b8c:	mov	w0, #0x1b                  	// #27
    9b90:	b	9aac <read_crypto_list+0x614>
    9b94:	mov	w0, #0x3f                  	// #63
    9b98:	b	9aac <read_crypto_list+0x614>
    9b9c:	mov	w0, #0x19                  	// #25
    9ba0:	b	9aac <read_crypto_list+0x614>
    9ba4:	mov	w0, #0x3f                  	// #63
    9ba8:	b	9aac <read_crypto_list+0x614>
    9bac:	mov	w0, #0xbf                  	// #191
    9bb0:	b	9aac <read_crypto_list+0x614>
    9bb4:	mov	w0, #0xb3                  	// #179
    9bb8:	b	9aac <read_crypto_list+0x614>
    9bbc:	mov	w0, #0x3f                  	// #63
    9bc0:	b	9aac <read_crypto_list+0x614>
    9bc4:	mov	w0, #0xc0                  	// #192
    9bc8:	b	9aac <read_crypto_list+0x614>
    9bcc:	mov	w0, #0x3f                  	// #63
    9bd0:	b	9aac <read_crypto_list+0x614>
    9bd4:	mov	w0, #0x76                  	// #118
    9bd8:	b	9aac <read_crypto_list+0x614>
    9bdc:	mov	w0, #0x5e                  	// #94
    9be0:	b	9aac <read_crypto_list+0x614>
    9be4:	mov	w0, #0x2b                  	// #43
    9be8:	b	9aac <read_crypto_list+0x614>
    9bec:	mov	w0, #0x7c                  	// #124
    9bf0:	b	9aac <read_crypto_list+0x614>
    9bf4:	mov	x2, x0
    9bf8:	mov	x0, x1
    9bfc:	ldr	w1, [x2]
    9c00:	and	w1, w1, #0x7fffff
    9c04:	cmp	w1, #0x9
    9c08:	b.eq	9c60 <read_crypto_list+0x7c8>  // b.none
    9c0c:	stp	x29, x30, [sp, #-16]!
    9c10:	mov	x29, sp
    9c14:	ldr	x3, [x0, #48]
    9c18:	cbz	x3, 9c2c <read_crypto_list+0x794>
    9c1c:	mov	x1, x2
    9c20:	blr	x3
    9c24:	ldp	x29, x30, [sp], #16
    9c28:	ret
    9c2c:	ldr	w0, [x0, #120]
    9c30:	and	w3, w0, #0x38
    9c34:	and	w1, w0, #0x30
    9c38:	cmp	w3, #0x20
    9c3c:	mov	x0, #0x1                   	// #1
    9c40:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    9c44:	b.ne	9c24 <read_crypto_list+0x78c>  // b.any
    9c48:	ldr	w0, [x2]
    9c4c:	and	w0, w0, #0x7fffff
    9c50:	bl	c158 <grub_unicode_get_comb_type>
    9c54:	cmp	w0, #0x0
    9c58:	cset	x0, eq  // eq = none
    9c5c:	b	9c24 <read_crypto_list+0x78c>
    9c60:	mov	x0, #0x8                   	// #8
    9c64:	ret
    9c68:	stp	x29, x30, [sp, #-80]!
    9c6c:	mov	x29, sp
    9c70:	stp	x19, x20, [sp, #16]
    9c74:	stp	x21, x22, [sp, #32]
    9c78:	mov	x21, x0
    9c7c:	mov	w20, w1
    9c80:	mov	w22, w2
    9c84:	stp	xzr, xzr, [sp, #48]
    9c88:	stp	xzr, xzr, [sp, #64]
    9c8c:	mov	w1, #0x20                  	// #32
    9c90:	str	w1, [sp, #48]
    9c94:	ldr	x1, [x0, #56]
    9c98:	blr	x1
    9c9c:	ands	w3, w0, #0xffff
    9ca0:	mov	w0, #0x50                  	// #80
    9ca4:	csel	w3, w3, w0, ne  // ne = any
    9ca8:	and	x19, x3, #0xffff
    9cac:	ldr	w0, [sp, #48]
    9cb0:	and	w0, w0, #0x7fffff
    9cb4:	cmp	w0, #0x9
    9cb8:	b.eq	9d24 <read_crypto_list+0x88c>  // b.none
    9cbc:	ldr	x2, [x21, #48]
    9cc0:	cbz	x2, 9cf0 <read_crypto_list+0x858>
    9cc4:	add	x1, sp, #0x30
    9cc8:	mov	x0, x21
    9ccc:	blr	x2
    9cd0:	sub	x19, x19, #0x1
    9cd4:	add	w1, w20, w22
    9cd8:	sxtw	x1, w1
    9cdc:	msub	x0, x1, x0, x19
    9ce0:	ldp	x19, x20, [sp, #16]
    9ce4:	ldp	x21, x22, [sp, #32]
    9ce8:	ldp	x29, x30, [sp], #80
    9cec:	ret
    9cf0:	ldr	w0, [x21, #120]
    9cf4:	and	w2, w0, #0x38
    9cf8:	and	w1, w0, #0x30
    9cfc:	cmp	w2, #0x20
    9d00:	mov	x0, #0x1                   	// #1
    9d04:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    9d08:	b.ne	9cd0 <read_crypto_list+0x838>  // b.any
    9d0c:	ldr	w0, [sp, #48]
    9d10:	and	w0, w0, #0x7fffff
    9d14:	bl	c158 <grub_unicode_get_comb_type>
    9d18:	cmp	w0, #0x0
    9d1c:	cset	x0, eq  // eq = none
    9d20:	b	9cd0 <read_crypto_list+0x838>
    9d24:	mov	x0, #0x8                   	// #8
    9d28:	b	9cd0 <read_crypto_list+0x838>

0000000000009d2c <grub_normal_reset_more>:
    9d2c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9d30:	ldr	x1, [x0]
    9d34:	ldr	x0, [x1]
    9d38:	str	x0, [x1, #8]
    9d3c:	cbz	x0, 9d58 <grub_normal_reset_more+0x2c>
    9d40:	str	wzr, [x0, #120]
    9d44:	ldr	x0, [x0]
    9d48:	cbnz	x0, 9d40 <grub_normal_reset_more+0x14>
    9d4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9d50:	ldr	x0, [x0]
    9d54:	str	xzr, [x0, #8]
    9d58:	ret
    9d5c:	nop
	...

0000000000009d68 <grub_set_more>:
    9d68:	stp	x29, x30, [sp, #-16]!
    9d6c:	mov	x29, sp
    9d70:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    9d74:	ldr	x1, [x1]
    9d78:	cmp	w0, #0x0
    9d7c:	cset	w0, ne  // ne = any
    9d80:	str	w0, [x1, #16]
    9d84:	bl	9d2c <grub_normal_reset_more>
    9d88:	ldp	x29, x30, [sp], #16
    9d8c:	ret
	...

0000000000009d98 <grub_term_save_pos>:
    9d98:	stp	x29, x30, [sp, #-48]!
    9d9c:	mov	x29, sp
    9da0:	str	x21, [sp, #32]
    9da4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9da8:	ldr	x0, [x0]
    9dac:	ldr	x1, [x0]
    9db0:	cbz	x1, 9e20 <grub_term_save_pos+0x88>
    9db4:	mov	w0, #0x0                   	// #0
    9db8:	add	w0, w0, #0x1
    9dbc:	ldr	x1, [x1]
    9dc0:	cbnz	x1, 9db8 <grub_term_save_pos+0x20>
    9dc4:	ubfiz	x0, x0, #2, #32
    9dc8:	bl	0 <grub_malloc>
    9dcc:	mov	x21, x0
    9dd0:	cbz	x0, 9e10 <grub_term_save_pos+0x78>
    9dd4:	stp	x19, x20, [sp, #16]
    9dd8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9ddc:	ldr	x0, [x0]
    9de0:	ldr	x19, [x0]
    9de4:	cbz	x19, 9e28 <grub_term_save_pos+0x90>
    9de8:	mov	x20, x21
    9dec:	ldr	x1, [x19, #64]
    9df0:	mov	x0, x19
    9df4:	blr	x1
    9df8:	lsr	w1, w0, #16
    9dfc:	strh	w0, [x20], #4
    9e00:	sturh	w1, [x20, #-2]
    9e04:	ldr	x19, [x19]
    9e08:	cbnz	x19, 9dec <grub_term_save_pos+0x54>
    9e0c:	ldp	x19, x20, [sp, #16]
    9e10:	mov	x0, x21
    9e14:	ldr	x21, [sp, #32]
    9e18:	ldp	x29, x30, [sp], #48
    9e1c:	ret
    9e20:	mov	w0, #0x0                   	// #0
    9e24:	b	9dc4 <grub_term_save_pos+0x2c>
    9e28:	ldp	x19, x20, [sp, #16]
    9e2c:	b	9e10 <grub_term_save_pos+0x78>
	...

0000000000009e38 <grub_term_restore_pos>:
    9e38:	cbz	x0, 9e80 <grub_term_restore_pos+0x48>
    9e3c:	stp	x29, x30, [sp, #-32]!
    9e40:	mov	x29, sp
    9e44:	stp	x19, x20, [sp, #16]
    9e48:	mov	x20, x0
    9e4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9e50:	ldr	x0, [x0]
    9e54:	ldr	x19, [x0]
    9e58:	cbz	x19, 9e74 <grub_term_restore_pos+0x3c>
    9e5c:	ldr	x2, [x19, #72]
    9e60:	ldr	w1, [x20], #4
    9e64:	mov	x0, x19
    9e68:	blr	x2
    9e6c:	ldr	x19, [x19]
    9e70:	cbnz	x19, 9e5c <grub_term_restore_pos+0x24>
    9e74:	ldp	x19, x20, [sp, #16]
    9e78:	ldp	x29, x30, [sp], #32
    9e7c:	ret
    9e80:	ret
    9e84:	nop
	...

0000000000009e90 <read_terminal_list>:
    9e90:	cbz	x0, 9ef0 <read_terminal_list+0x60>
    9e94:	stp	x29, x30, [sp, #-96]!
    9e98:	mov	x29, sp
    9e9c:	stp	x19, x20, [sp, #16]
    9ea0:	mov	x1, x0
    9ea4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9ea8:	ldr	x0, [x0]
    9eac:	bl	0 <grub_xasprintf>
    9eb0:	mov	x19, x0
    9eb4:	cbz	x0, 9f00 <read_terminal_list+0x70>
    9eb8:	stp	x21, x22, [sp, #32]
    9ebc:	stp	x23, x24, [sp, #48]
    9ec0:	mov	w1, #0x32                  	// #50
    9ec4:	bl	0 <grub_file_open>
    9ec8:	mov	x22, x0
    9ecc:	mov	x0, x19
    9ed0:	bl	0 <grub_free>
    9ed4:	mov	w21, #0x1                   	// #1
    9ed8:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    9edc:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    9ee0:	cbz	x22, 9f10 <read_terminal_list+0x80>
    9ee4:	stp	x25, x26, [sp, #64]
    9ee8:	stp	x27, x28, [sp, #80]
    9eec:	b	9f64 <read_terminal_list+0xd4>
    9ef0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9ef4:	ldr	x0, [x0]
    9ef8:	str	wzr, [x0]
    9efc:	ret
    9f00:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9f04:	ldr	x0, [x0]
    9f08:	str	wzr, [x0]
    9f0c:	b	a0d0 <read_terminal_list+0x240>
    9f10:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9f14:	ldr	x0, [x0]
    9f18:	str	wzr, [x0]
    9f1c:	ldp	x21, x22, [sp, #32]
    9f20:	ldp	x23, x24, [sp, #48]
    9f24:	b	a0d0 <read_terminal_list+0x240>
    9f28:	ldr	x0, [x24]
    9f2c:	ldr	x19, [x0]
    9f30:	cbz	x19, 9f60 <read_terminal_list+0xd0>
    9f34:	mov	x20, x19
    9f38:	ldr	x19, [x19]
    9f3c:	ldr	x0, [x20, #8]
    9f40:	bl	0 <grub_free>
    9f44:	ldr	x0, [x20, #16]
    9f48:	bl	0 <grub_free>
    9f4c:	mov	x0, x20
    9f50:	bl	0 <grub_free>
    9f54:	cbnz	x19, 9f34 <read_terminal_list+0xa4>
    9f58:	cmp	w21, #0x1
    9f5c:	b.hi	9f7c <read_terminal_list+0xec>  // b.pmore
    9f60:	add	w21, w21, #0x1
    9f64:	cmp	w21, #0x1
    9f68:	b.eq	9f28 <read_terminal_list+0x98>  // b.none
    9f6c:	ldr	x0, [x23]
    9f70:	ldr	x19, [x0]
    9f74:	cbnz	x19, 9f34 <read_terminal_list+0xa4>
    9f78:	b	9f58 <read_terminal_list+0xc8>
    9f7c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9f80:	ldr	x0, [x0]
    9f84:	str	xzr, [x0]
    9f88:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    9f8c:	ldr	x0, [x0]
    9f90:	str	xzr, [x0]
    9f94:	mov	w25, #0x3a                  	// #58
    9f98:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    9f9c:	adrp	x27, 0 <grub_normal_free_menu-0x26c>
    9fa0:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
    9fa4:	b	a050 <read_terminal_list+0x1c0>
    9fa8:	add	x19, x19, #0x1
    9fac:	ldrb	w0, [x19]
    9fb0:	bl	0 <grub_isspace>
    9fb4:	cbnz	w0, 9fa8 <read_terminal_list+0x118>
    9fb8:	ldrb	w0, [x19]
    9fbc:	cmp	w0, #0x69
    9fc0:	b.eq	a068 <read_terminal_list+0x1d8>  // b.none
    9fc4:	cmp	w0, #0x6f
    9fc8:	b.ne	a048 <read_terminal_list+0x1b8>  // b.any
    9fcc:	ldr	x24, [x26]
    9fd0:	add	x19, x19, #0x1
    9fd4:	mov	w1, w25
    9fd8:	mov	x0, x19
    9fdc:	bl	0 <grub_strchr>
    9fe0:	cbz	x0, a048 <read_terminal_list+0x1b8>
    9fe4:	mov	x21, x0
    9fe8:	strb	wzr, [x21], #1
    9fec:	ldrb	w0, [x0, #1]
    9ff0:	cmp	w0, #0x20
    9ff4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    9ff8:	b.ne	a00c <read_terminal_list+0x17c>  // b.any
    9ffc:	ldrb	w0, [x21, #1]!
    a000:	cmp	w0, #0x20
    a004:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    a008:	b.eq	9ffc <read_terminal_list+0x16c>  // b.none
    a00c:	mov	x0, #0x18                  	// #24
    a010:	bl	0 <grub_malloc>
    a014:	mov	x23, x0
    a018:	cbz	x0, a070 <read_terminal_list+0x1e0>
    a01c:	mov	x0, x19
    a020:	bl	0 <grub_strdup>
    a024:	str	x0, [x23, #8]
    a028:	cbz	x0, a07c <read_terminal_list+0x1ec>
    a02c:	mov	x0, x21
    a030:	bl	0 <grub_strdup>
    a034:	str	x0, [x23, #16]
    a038:	cbz	x0, a090 <read_terminal_list+0x200>
    a03c:	ldr	x0, [x24]
    a040:	str	x0, [x23]
    a044:	str	x23, [x24]
    a048:	mov	x0, x20
    a04c:	bl	0 <grub_free>
    a050:	mov	x0, x22
    a054:	bl	dfb8 <grub_file_getline>
    a058:	mov	x20, x0
    a05c:	cbz	x0, a0ac <read_terminal_list+0x21c>
    a060:	mov	x19, x0
    a064:	b	9fac <read_terminal_list+0x11c>
    a068:	ldr	x24, [x27]
    a06c:	b	9fd0 <read_terminal_list+0x140>
    a070:	ldr	x0, [x28]
    a074:	str	wzr, [x0]
    a078:	b	a048 <read_terminal_list+0x1b8>
    a07c:	ldr	x0, [x28]
    a080:	str	wzr, [x0]
    a084:	mov	x0, x23
    a088:	bl	0 <grub_free>
    a08c:	b	a048 <read_terminal_list+0x1b8>
    a090:	ldr	x0, [x28]
    a094:	str	wzr, [x0]
    a098:	ldr	x0, [x23, #8]
    a09c:	bl	0 <grub_free>
    a0a0:	mov	x0, x23
    a0a4:	bl	0 <grub_free>
    a0a8:	b	a048 <read_terminal_list+0x1b8>
    a0ac:	mov	x0, x22
    a0b0:	bl	0 <grub_file_close>
    a0b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    a0b8:	ldr	x0, [x0]
    a0bc:	str	wzr, [x0]
    a0c0:	ldp	x21, x22, [sp, #32]
    a0c4:	ldp	x23, x24, [sp, #48]
    a0c8:	ldp	x25, x26, [sp, #64]
    a0cc:	ldp	x27, x28, [sp, #80]
    a0d0:	ldp	x19, x20, [sp, #16]
    a0d4:	ldp	x29, x30, [sp], #96
    a0d8:	ret
    a0dc:	nop
	...

000000000000a100 <grub_putcode>:
    a100:	stp	x29, x30, [sp, #-32]!
    a104:	mov	x29, sp
    a108:	stp	x19, x20, [sp, #16]
    a10c:	mov	w19, w0
    a110:	mov	x20, x1
    a114:	bl	c158 <grub_unicode_get_comb_type>
    a118:	cbz	w0, a128 <grub_putcode+0x28>
    a11c:	ldp	x19, x20, [sp, #16]
    a120:	ldp	x29, x30, [sp], #32
    a124:	ret
    a128:	mov	w2, #0x0                   	// #0
    a12c:	mov	x1, x20
    a130:	mov	w0, w19
    a134:	bl	99e0 <read_crypto_list+0x548>
    a138:	b	a11c <grub_putcode+0x1c>
    a13c:	stp	x29, x30, [sp, #-48]!
    a140:	mov	x29, sp
    a144:	stp	x19, x20, [sp, #16]
    a148:	stp	x21, x22, [sp, #32]
    a14c:	mov	x21, x0
    a150:	mov	w22, w1
    a154:	ldr	x1, [x0, #56]
    a158:	blr	x1
    a15c:	and	w19, w0, #0xffff
    a160:	ldr	x1, [x21, #64]
    a164:	mov	x0, x21
    a168:	blr	x1
    a16c:	sub	w19, w19, w0, uxth
    a170:	sub	w19, w19, w22
    a174:	cmp	w19, #0x0
    a178:	b.le	a19c <grub_putcode+0x9c>
    a17c:	sub	w19, w19, #0x1
    a180:	mov	w20, #0x20                  	// #32
    a184:	mov	x1, x21
    a188:	mov	w0, w20
    a18c:	bl	a100 <grub_putcode>
    a190:	sub	w19, w19, #0x1
    a194:	cmn	w19, #0x1
    a198:	b.ne	a184 <grub_putcode+0x84>  // b.any
    a19c:	ldp	x19, x20, [sp, #16]
    a1a0:	ldp	x21, x22, [sp, #32]
    a1a4:	ldp	x29, x30, [sp], #48
    a1a8:	ret
    a1ac:	stp	x29, x30, [sp, #-128]!
    a1b0:	mov	x29, sp
    a1b4:	stp	x19, x20, [sp, #16]
    a1b8:	stp	x21, x22, [sp, #32]
    a1bc:	stp	x23, x24, [sp, #48]
    a1c0:	str	x0, [sp, #112]
    a1c4:	str	x1, [sp, #120]
    a1c8:	str	w2, [sp, #104]
    a1cc:	str	w3, [sp, #108]
    a1d0:	mov	x20, x4
    a1d4:	ldr	w23, [sp, #128]
    a1d8:	add	x24, x0, x1, lsl #5
    a1dc:	cmp	x0, x24
    a1e0:	b.cs	a38c <grub_putcode+0x28c>  // b.hs, b.nlast
    a1e4:	stp	x25, x26, [sp, #64]
    a1e8:	stp	x27, x28, [sp, #80]
    a1ec:	mov	x25, x5
    a1f0:	mov	w22, w6
    a1f4:	mov	w28, w7
    a1f8:	mov	x19, x0
    a1fc:	mov	w21, #0x1                   	// #1
    a200:	mov	w26, #0x20                  	// #32
    a204:	b	a274 <grub_putcode+0x174>
    a208:	ldr	w1, [sp, #108]
    a20c:	mov	x0, x20
    a210:	bl	a13c <grub_putcode+0x3c>
    a214:	b	a288 <grub_putcode+0x188>
    a218:	cbz	w28, a320 <grub_putcode+0x220>
    a21c:	ldr	x1, [x20, #64]
    a220:	mov	x0, x20
    a224:	blr	x1
    a228:	lsr	w0, w0, #16
    a22c:	ldr	w1, [sp, #104]
    a230:	bfxil	w27, w1, #0, #16
    a234:	bfi	w27, w0, #16, #16
    a238:	ldr	x2, [x20, #72]
    a23c:	mov	w1, w27
    a240:	mov	x0, x20
    a244:	blr	x2
    a248:	mov	w21, #0x0                   	// #0
    a24c:	ldrh	w0, [x19, #6]
    a250:	ubfx	x0, x0, #3, #8
    a254:	cmp	w0, #0x2
    a258:	b.hi	a354 <grub_putcode+0x254>  // b.pmore
    a25c:	ldrh	w0, [x19, #6]
    a260:	and	w0, w0, #0xfffff807
    a264:	strh	w0, [x19, #6]
    a268:	add	x19, x19, #0x20
    a26c:	cmp	x19, x24
    a270:	b.cs	a360 <grub_putcode+0x260>  // b.hs, b.nlast
    a274:	ldr	w0, [x19]
    a278:	and	w0, w0, #0x7fffff
    a27c:	cmp	w23, #0x0
    a280:	ccmp	w0, #0xa, #0x0, ne  // ne = any
    a284:	b.eq	a208 <grub_putcode+0x108>  // b.none
    a288:	mov	w2, w22
    a28c:	mov	x1, x20
    a290:	mov	x0, x19
    a294:	bl	9758 <read_crypto_list+0x2c0>
    a298:	ldr	w0, [x19]
    a29c:	and	w0, w0, #0x7fffff
    a2a0:	add	w21, w21, #0x1
    a2a4:	cmp	w0, #0xa
    a2a8:	b.ne	a24c <grub_putcode+0x14c>  // b.any
    a2ac:	cbz	x25, a218 <grub_putcode+0x118>
    a2b0:	ldr	w21, [x25, #120]
    a2b4:	add	w21, w21, #0x1
    a2b8:	str	w21, [x25, #120]
    a2bc:	sxtw	x21, w21
    a2c0:	ldr	x1, [x20, #56]
    a2c4:	mov	x0, x20
    a2c8:	blr	x1
    a2cc:	lsr	w0, w0, #16
    a2d0:	cmp	w0, #0x0
    a2d4:	mov	w1, #0x18                  	// #24
    a2d8:	csel	w0, w0, w1, ne  // ne = any
    a2dc:	and	x0, x0, #0xffff
    a2e0:	sub	x0, x0, #0x2
    a2e4:	cmp	x21, x0
    a2e8:	b.lt	a218 <grub_putcode+0x118>  // b.tstop
    a2ec:	add	x0, x19, #0x20
    a2f0:	str	x0, [x25, #8]
    a2f4:	ldr	x0, [sp, #112]
    a2f8:	sub	x0, x19, x0
    a2fc:	ldr	x1, [sp, #120]
    a300:	sub	x0, x1, x0, asr #5
    a304:	sub	x0, x0, #0x1
    a308:	str	x0, [x25, #32]
    a30c:	str	w22, [x25, #24]
    a310:	mov	w0, #0x1                   	// #1
    a314:	ldp	x25, x26, [sp, #64]
    a318:	ldp	x27, x28, [sp, #80]
    a31c:	b	a378 <grub_putcode+0x278>
    a320:	ldr	w0, [sp, #104]
    a324:	subs	w21, w0, #0x1
    a328:	b.mi	a34c <grub_putcode+0x24c>  // b.first
    a32c:	mov	x1, x20
    a330:	mov	w0, w26
    a334:	bl	a100 <grub_putcode>
    a338:	sub	w21, w21, #0x1
    a33c:	cmn	w21, #0x1
    a340:	b.ne	a32c <grub_putcode+0x22c>  // b.any
    a344:	mov	w21, #0x0                   	// #0
    a348:	b	a24c <grub_putcode+0x14c>
    a34c:	mov	w21, #0x0                   	// #0
    a350:	b	a24c <grub_putcode+0x14c>
    a354:	ldr	x0, [x19, #24]
    a358:	bl	0 <grub_free>
    a35c:	b	a25c <grub_putcode+0x15c>
    a360:	ldp	x25, x26, [sp, #64]
    a364:	ldp	x27, x28, [sp, #80]
    a368:	cmp	w23, #0x0
    a36c:	mov	w0, #0x0                   	// #0
    a370:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    a374:	b.ne	a394 <grub_putcode+0x294>  // b.any
    a378:	ldp	x19, x20, [sp, #16]
    a37c:	ldp	x21, x22, [sp, #32]
    a380:	ldp	x23, x24, [sp, #48]
    a384:	ldp	x29, x30, [sp], #128
    a388:	ret
    a38c:	mov	w21, #0x1                   	// #1
    a390:	b	a368 <grub_putcode+0x268>
    a394:	ldr	w1, [sp, #108]
    a398:	mov	x0, x20
    a39c:	bl	a13c <grub_putcode+0x3c>
    a3a0:	mov	w0, #0x0                   	// #0
    a3a4:	b	a378 <grub_putcode+0x278>
    a3a8:	stp	x29, x30, [sp, #-352]!
    a3ac:	mov	x29, sp
    a3b0:	stp	x19, x20, [sp, #16]
    a3b4:	stp	x21, x22, [sp, #32]
    a3b8:	stp	x23, x24, [sp, #48]
    a3bc:	stp	x25, x26, [sp, #64]
    a3c0:	stp	x27, x28, [sp, #80]
    a3c4:	str	x0, [sp, #120]
    a3c8:	str	x1, [sp, #128]
    a3cc:	str	w2, [sp, #148]
    a3d0:	str	w3, [sp, #172]
    a3d4:	mov	x21, x4
    a3d8:	mov	x22, x5
    a3dc:	str	w6, [sp, #144]
    a3e0:	mov	w26, w7
    a3e4:	ldr	w27, [sp, #352]
    a3e8:	ldr	x25, [sp, #392]
    a3ec:	str	xzr, [sp, #160]
    a3f0:	cbz	w6, a484 <grub_putcode+0x384>
    a3f4:	ldr	w2, [sp, #172]
    a3f8:	ldr	w1, [sp, #148]
    a3fc:	mov	x0, x21
    a400:	bl	9c68 <read_crypto_list+0x7d0>
    a404:	str	x0, [sp, #136]
    a408:	ldr	x0, [sp, #120]
    a40c:	sub	x0, x0, #0x4
    a410:	str	x0, [sp, #104]
    a414:	cbz	x22, a4a8 <grub_putcode+0x3a8>
    a418:	ldr	w0, [x22, #40]
    a41c:	cmp	w0, #0x0
    a420:	b.le	a450 <grub_putcode+0x350>
    a424:	mov	x19, #0x0                   	// #0
    a428:	add	x20, x22, #0x2c
    a42c:	ldrb	w0, [x20, x19]
    a430:	mov	w2, w26
    a434:	mov	x1, x21
    a438:	orr	w0, w0, #0x2000
    a43c:	bl	99e0 <read_crypto_list+0x548>
    a440:	add	x19, x19, #0x1
    a444:	ldr	w0, [x22, #40]
    a448:	cmp	w0, w19
    a44c:	b.gt	a42c <grub_putcode+0x32c>
    a450:	ldr	x0, [sp, #120]
    a454:	ldr	x1, [sp, #128]
    a458:	cmp	x0, x1
    a45c:	b.cs	aaa4 <grub_putcode+0x9a4>  // b.hs, b.nlast
    a460:	mov	x20, x0
    a464:	ldr	x23, [sp, #160]
    a468:	mov	x19, x0
    a46c:	mov	w28, #0x0                   	// #0
    a470:	str	xzr, [sp, #112]
    a474:	ldr	x0, [sp, #136]
    a478:	sub	x0, x0, #0x5
    a47c:	str	x0, [sp, #152]
    a480:	b	a8e0 <grub_putcode+0x7e0>
    a484:	ldr	x1, [x4, #64]
    a488:	mov	x0, x4
    a48c:	blr	x1
    a490:	and	w0, w0, #0xffff
    a494:	ldr	w1, [sp, #148]
    a498:	sub	w0, w0, w1
    a49c:	sxtw	x0, w0
    a4a0:	str	x0, [sp, #160]
    a4a4:	b	a3f4 <grub_putcode+0x2f4>
    a4a8:	mov	x2, #0x88                  	// #136
    a4ac:	mov	w1, #0x0                   	// #0
    a4b0:	add	x0, sp, #0xd8
    a4b4:	bl	0 <grub_memset>
    a4b8:	add	x22, sp, #0xd8
    a4bc:	b	a418 <grub_putcode+0x318>
    a4c0:	sub	w1, w0, #0x2, lsl #12
    a4c4:	sub	w1, w1, #0x2a
    a4c8:	cmp	w1, #0x1
    a4cc:	b.hi	a908 <grub_putcode+0x808>  // b.pmore
    a4d0:	ldr	w1, [x22, #40]
    a4d4:	cmp	w1, #0x3c
    a4d8:	b.le	a4ec <grub_putcode+0x3ec>
    a4dc:	ldr	w0, [x22, #108]
    a4e0:	add	w0, w0, #0x1
    a4e4:	str	w0, [x22, #108]
    a4e8:	b	a908 <grub_putcode+0x808>
    a4ec:	add	w2, w1, #0x1
    a4f0:	str	w2, [x22, #40]
    a4f4:	add	x1, x22, w1, sxtw
    a4f8:	strb	w0, [x1, #44]
    a4fc:	b	a908 <grub_putcode+0x808>
    a500:	ldr	w0, [x22, #108]
    a504:	cbz	w0, a514 <grub_putcode+0x414>
    a508:	sub	w0, w0, #0x1
    a50c:	str	w0, [x22, #108]
    a510:	b	a908 <grub_putcode+0x808>
    a514:	ldr	w0, [x22, #40]
    a518:	cbz	w0, a908 <grub_putcode+0x808>
    a51c:	sub	w0, w0, #0x1
    a520:	str	w0, [x22, #40]
    a524:	b	a908 <grub_putcode+0x808>
    a528:	ldr	w0, [x21, #120]
    a52c:	and	w2, w0, #0x38
    a530:	and	w1, w0, #0x30
    a534:	cmp	w2, #0x20
    a538:	mov	x0, #0x1                   	// #1
    a53c:	ccmp	w1, #0x10, #0x4, ne  // ne = any
    a540:	b.ne	a97c <grub_putcode+0x87c>  // b.any
    a544:	and	w0, w3, #0x7fffff
    a548:	bl	c158 <grub_unicode_get_comb_type>
    a54c:	cmp	w0, #0x0
    a550:	cset	x0, eq  // eq = none
    a554:	b	a97c <grub_putcode+0x87c>
    a558:	mov	x0, #0x8                   	// #8
    a55c:	b	a97c <grub_putcode+0x87c>
    a560:	str	wzr, [x22, #40]
    a564:	str	wzr, [x22, #108]
    a568:	b	a9c0 <grub_putcode+0x8c0>
    a56c:	cmp	x19, x20
    a570:	b.hi	a59c <grub_putcode+0x49c>  // b.pmore
    a574:	b	a5c8 <grub_putcode+0x4c8>
    a578:	ldr	x19, [sp, #104]
    a57c:	b	a59c <grub_putcode+0x49c>
    a580:	mov	w2, w26
    a584:	mov	x1, x21
    a588:	ldr	w0, [x20]
    a58c:	bl	99e0 <read_crypto_list+0x548>
    a590:	add	x20, x20, #0x4
    a594:	cmp	x20, x19
    a598:	b.cs	a5c8 <grub_putcode+0x4c8>  // b.hs, b.nlast
    a59c:	ldr	w0, [x21, #120]
    a5a0:	and	w0, w0, #0x38
    a5a4:	cmp	w0, #0x10
    a5a8:	b.eq	a580 <grub_putcode+0x480>  // b.none
    a5ac:	ldr	w0, [x20]
    a5b0:	bl	c158 <grub_unicode_get_comb_type>
    a5b4:	cbz	w0, a580 <grub_putcode+0x480>
    a5b8:	b	a590 <grub_putcode+0x490>
    a5bc:	ldr	x0, [sp, #160]
    a5c0:	str	x0, [sp, #112]
    a5c4:	ldr	x19, [sp, #120]
    a5c8:	ldr	w0, [sp, #368]
    a5cc:	cmp	w0, #0x0
    a5d0:	ccmp	w24, #0xa, #0x4, ne  // ne = any
    a5d4:	b.ne	a644 <grub_putcode+0x544>  // b.any
    a5d8:	ldr	w0, [sp, #384]
    a5dc:	cbnz	w0, a658 <grub_putcode+0x558>
    a5e0:	ldr	w0, [sp, #368]
    a5e4:	cmp	w0, #0x0
    a5e8:	ldr	w0, [sp, #360]
    a5ec:	ccmp	w0, #0x1, #0x0, ne  // ne = any
    a5f0:	b.ne	a668 <grub_putcode+0x568>  // b.any
    a5f4:	add	x0, sp, #0xd8
    a5f8:	cmp	x22, x0
    a5fc:	b.eq	a6b4 <grub_putcode+0x5b4>  // b.none
    a600:	ldr	w20, [x22, #120]
    a604:	add	w20, w20, #0x1
    a608:	str	w20, [x22, #120]
    a60c:	sxtw	x20, w20
    a610:	ldr	x1, [x21, #56]
    a614:	mov	x0, x21
    a618:	blr	x1
    a61c:	lsr	w0, w0, #16
    a620:	cmp	w0, #0x0
    a624:	mov	w1, #0x18                  	// #24
    a628:	csel	w0, w0, w1, ne  // ne = any
    a62c:	and	x0, x0, #0xffff
    a630:	sub	x0, x0, #0x2
    a634:	cmp	x20, x0
    a638:	b.ge	a678 <grub_putcode+0x578>  // b.tcont
    a63c:	mov	w0, #0x0                   	// #0
    a640:	b	aa14 <grub_putcode+0x914>
    a644:	mov	w2, w26
    a648:	mov	x1, x21
    a64c:	ldr	w0, [sp, #368]
    a650:	bl	99e0 <read_crypto_list+0x548>
    a654:	b	a5d8 <grub_putcode+0x4d8>
    a658:	ldr	w1, [sp, #172]
    a65c:	mov	x0, x21
    a660:	bl	a13c <grub_putcode+0x3c>
    a664:	b	a5e0 <grub_putcode+0x4e0>
    a668:	mov	x1, x21
    a66c:	mov	w0, #0xa                   	// #10
    a670:	bl	a100 <grub_putcode>
    a674:	b	a5f4 <grub_putcode+0x4f4>
    a678:	ldr	x0, [sp, #104]
    a67c:	cmp	x19, x0
    a680:	b.eq	a690 <grub_putcode+0x590>  // b.none
    a684:	ldr	w0, [x19]
    a688:	cmp	w0, #0xa
    a68c:	b.ne	a694 <grub_putcode+0x594>  // b.any
    a690:	add	x19, x19, #0x4
    a694:	str	x19, [x22, #16]
    a698:	ldr	x0, [sp, #128]
    a69c:	sub	x0, x0, x19
    a6a0:	asr	x0, x0, #2
    a6a4:	str	x0, [x22, #32]
    a6a8:	str	w26, [x22, #24]
    a6ac:	mov	w28, #0x1                   	// #1
    a6b0:	b	a81c <grub_putcode+0x71c>
    a6b4:	mov	w0, #0x0                   	// #0
    a6b8:	b	aa14 <grub_putcode+0x914>
    a6bc:	ldr	x19, [sp, #104]
    a6c0:	b	a8b8 <grub_putcode+0x7b8>
    a6c4:	ldr	w1, [sp, #360]
    a6c8:	cmn	w1, #0x1
    a6cc:	b.eq	a8c4 <grub_putcode+0x7c4>  // b.none
    a6d0:	ldr	w1, [sp, #360]
    a6d4:	subs	w1, w1, #0x1
    a6d8:	str	w1, [sp, #360]
    a6dc:	b.ne	a8c4 <grub_putcode+0x7c4>  // b.any
    a6e0:	ldr	w27, [sp, #360]
    a6e4:	mov	x20, x19
    a6e8:	cbz	x25, a710 <grub_putcode+0x610>
    a6ec:	ldr	x0, [sp, #120]
    a6f0:	sub	x19, x19, x0
    a6f4:	add	x1, x25, x19
    a6f8:	ldrh	w0, [x25, x19]
    a6fc:	bfi	w0, w23, #1, #15
    a700:	strh	w0, [x25, x19]
    a704:	strh	w28, [x1, #2]
    a708:	orr	w0, w0, #0x1
    a70c:	strb	w0, [x25, x19]
    a710:	ldr	x0, [sp, #128]
    a714:	cmp	x0, x20
    a718:	b.ls	a7f8 <grub_putcode+0x6f8>  // b.plast
    a71c:	ldr	w0, [sp, #144]
    a720:	orr	w27, w27, w0
    a724:	cmp	w27, #0x0
    a728:	ldr	w0, [sp, #360]
    a72c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    a730:	add	w28, w28, #0x1
    a734:	b.eq	a810 <grub_putcode+0x710>  // b.none
    a738:	ldr	x19, [sp, #128]
    a73c:	b	a858 <grub_putcode+0x758>
    a740:	ldr	w0, [sp, #368]
    a744:	cbz	w0, a7c0 <grub_putcode+0x6c0>
    a748:	ldr	x1, [x21, #64]
    a74c:	mov	x0, x21
    a750:	blr	x1
    a754:	lsr	w0, w0, #16
    a758:	ldr	w1, [sp, #168]
    a75c:	ldr	w2, [sp, #148]
    a760:	bfxil	w1, w2, #0, #16
    a764:	bfi	w1, w0, #16, #16
    a768:	str	w1, [sp, #168]
    a76c:	ldr	x2, [x21, #72]
    a770:	mov	x0, x21
    a774:	blr	x2
    a778:	ldr	w0, [x22, #40]
    a77c:	mov	x27, x22
    a780:	mov	x20, x22
    a784:	cmp	w0, #0x0
    a788:	b.le	a7ec <grub_putcode+0x6ec>
    a78c:	ldrb	w0, [x20, #44]
    a790:	mov	w2, w26
    a794:	mov	x1, x21
    a798:	orr	w0, w0, #0x2000
    a79c:	bl	99e0 <read_crypto_list+0x548>
    a7a0:	add	x20, x20, #0x1
    a7a4:	sub	w0, w20, w27
    a7a8:	ldr	w1, [x22, #40]
    a7ac:	cmp	w1, w0
    a7b0:	b.gt	a78c <grub_putcode+0x68c>
    a7b4:	mov	x20, x19
    a7b8:	mov	w27, w24
    a7bc:	b	a8d0 <grub_putcode+0x7d0>
    a7c0:	ldr	w0, [sp, #148]
    a7c4:	subs	w20, w0, #0x1
    a7c8:	b.mi	a778 <grub_putcode+0x678>  // b.first
    a7cc:	mov	w27, #0x20                  	// #32
    a7d0:	mov	x1, x21
    a7d4:	mov	w0, w27
    a7d8:	bl	a100 <grub_putcode>
    a7dc:	sub	w20, w20, #0x1
    a7e0:	cmn	w20, #0x1
    a7e4:	b.ne	a7d0 <grub_putcode+0x6d0>  // b.any
    a7e8:	b	a778 <grub_putcode+0x678>
    a7ec:	mov	x20, x19
    a7f0:	mov	w27, w24
    a7f4:	b	a8d0 <grub_putcode+0x7d0>
    a7f8:	ldr	w0, [sp, #144]
    a7fc:	orr	w27, w27, w0
    a800:	cmp	w27, #0x0
    a804:	ldr	w0, [sp, #360]
    a808:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    a80c:	b.ne	a878 <grub_putcode+0x778>  // b.any
    a810:	ldr	w0, [sp, #144]
    a814:	cmp	w0, #0x0
    a818:	csel	w28, w28, w0, ne  // ne = any
    a81c:	mov	w0, w28
    a820:	ldp	x19, x20, [sp, #16]
    a824:	ldp	x21, x22, [sp, #32]
    a828:	ldp	x23, x24, [sp, #48]
    a82c:	ldp	x25, x26, [sp, #64]
    a830:	ldp	x27, x28, [sp, #80]
    a834:	ldp	x29, x30, [sp], #352
    a838:	ret
    a83c:	mov	w2, w26
    a840:	mov	x1, x21
    a844:	ldr	w0, [x20]
    a848:	bl	99e0 <read_crypto_list+0x548>
    a84c:	add	x20, x20, #0x4
    a850:	cmp	x19, x20
    a854:	b.ls	a878 <grub_putcode+0x778>  // b.plast
    a858:	ldr	w0, [x21, #120]
    a85c:	and	w0, w0, #0x38
    a860:	cmp	w0, #0x10
    a864:	b.eq	a83c <grub_putcode+0x73c>  // b.none
    a868:	ldr	w0, [x20]
    a86c:	bl	c158 <grub_unicode_get_comb_type>
    a870:	cbz	w0, a83c <grub_putcode+0x73c>
    a874:	b	a84c <grub_putcode+0x74c>
    a878:	ldr	w0, [sp, #384]
    a87c:	cbnz	w0, a888 <grub_putcode+0x788>
    a880:	mov	w28, #0x0                   	// #0
    a884:	b	a81c <grub_putcode+0x71c>
    a888:	ldr	w1, [sp, #172]
    a88c:	mov	x0, x21
    a890:	bl	a13c <grub_putcode+0x3c>
    a894:	b	a880 <grub_putcode+0x780>
    a898:	add	w28, w28, #0x1
    a89c:	ldr	w1, [sp, #144]
    a8a0:	mov	w0, w1
    a8a4:	orr	w1, w1, w27
    a8a8:	cbz	w1, a578 <grub_putcode+0x478>
    a8ac:	ldr	x1, [sp, #112]
    a8b0:	sub	x23, x23, x1
    a8b4:	ldr	x19, [sp, #104]
    a8b8:	add	x19, x19, #0x4
    a8bc:	cbz	w27, a6c4 <grub_putcode+0x5c4>
    a8c0:	sub	w27, w27, #0x1
    a8c4:	orr	w24, w27, w0
    a8c8:	mov	x20, x19
    a8cc:	cbz	w24, a740 <grub_putcode+0x640>
    a8d0:	add	x19, x19, #0x4
    a8d4:	ldr	x0, [sp, #128]
    a8d8:	cmp	x0, x19
    a8dc:	b.ls	a6e8 <grub_putcode+0x5e8>  // b.plast
    a8e0:	ldr	w0, [x19]
    a8e4:	mov	w1, #0x202c                	// #8236
    a8e8:	cmp	w0, w1
    a8ec:	b.eq	a500 <grub_putcode+0x400>  // b.none
    a8f0:	cmp	w0, w1
    a8f4:	b.ls	a4c0 <grub_putcode+0x3c0>  // b.plast
    a8f8:	sub	w1, w0, #0x2, lsl #12
    a8fc:	sub	w1, w1, #0x2d
    a900:	cmp	w1, #0x1
    a904:	b.ls	a4d0 <grub_putcode+0x3d0>  // b.plast
    a908:	ldr	w0, [x19]
    a90c:	bl	c158 <grub_unicode_get_comb_type>
    a910:	str	xzr, [sp, #96]
    a914:	cbnz	w0, a984 <grub_putcode+0x884>
    a918:	stp	xzr, xzr, [sp, #184]
    a91c:	stp	xzr, xzr, [sp, #200]
    a920:	ldr	w3, [x19]
    a924:	mov	w1, #0x0                   	// #0
    a928:	bfxil	w1, w3, #0, #23
    a92c:	str	w1, [sp, #184]
    a930:	cbz	x25, a958 <grub_putcode+0x858>
    a934:	ldr	x0, [sp, #120]
    a938:	sub	x2, x19, x0
    a93c:	add	x0, x25, x2
    a940:	ldrh	w1, [x25, x2]
    a944:	bfi	w1, w23, #1, #15
    a948:	strh	w1, [x25, x2]
    a94c:	strh	w28, [x0, #2]
    a950:	orr	w1, w1, #0x1
    a954:	strb	w1, [x25, x2]
    a958:	ldr	w1, [sp, #184]
    a95c:	and	w1, w1, #0x7fffff
    a960:	cmp	w1, #0x9
    a964:	b.eq	a558 <grub_putcode+0x458>  // b.none
    a968:	ldr	x2, [x21, #48]
    a96c:	cbz	x2, a528 <grub_putcode+0x428>
    a970:	add	x1, sp, #0xb8
    a974:	mov	x0, x21
    a978:	blr	x2
    a97c:	str	x0, [sp, #96]
    a980:	add	x23, x23, x0
    a984:	ldr	w24, [x19]
    a988:	cmp	w24, #0x20
    a98c:	cset	w0, eq  // eq = none
    a990:	ldr	w1, [sp, #376]
    a994:	cmp	w1, #0x0
    a998:	csel	w0, w0, wzr, eq  // eq = none
    a99c:	cbnz	w0, aa8c <grub_putcode+0x98c>
    a9a0:	ldr	x0, [sp, #136]
    a9a4:	cmp	x23, x0
    a9a8:	cset	w0, gt
    a9ac:	cmp	w0, #0x0
    a9b0:	ccmp	w24, #0xa, #0x4, eq  // eq = none
    a9b4:	b.ne	a8d0 <grub_putcode+0x7d0>  // b.any
    a9b8:	cmp	w24, #0xa
    a9bc:	b.eq	a560 <grub_putcode+0x460>  // b.none
    a9c0:	cmp	w0, #0x0
    a9c4:	ldr	x1, [sp, #104]
    a9c8:	ccmp	x20, x1, #0x2, ne  // ne = any
    a9cc:	b.cc	a898 <grub_putcode+0x798>  // b.lo, b.ul, b.last
    a9d0:	cmp	w0, #0x0
    a9d4:	ldr	x0, [sp, #120]
    a9d8:	ccmp	x0, x20, #0x0, ne  // ne = any
    a9dc:	b.ne	a9f4 <grub_putcode+0x8f4>  // b.any
    a9e0:	ldr	x0, [sp, #112]
    a9e4:	sub	x0, x23, x0
    a9e8:	ldr	x1, [sp, #152]
    a9ec:	cmp	x0, x1
    a9f0:	b.lt	aa68 <grub_putcode+0x968>  // b.tstop
    a9f4:	ldr	x0, [sp, #96]
    a9f8:	sub	x0, x23, x0
    a9fc:	str	x0, [sp, #112]
    aa00:	add	w28, w28, #0x1
    aa04:	ldr	w1, [sp, #144]
    aa08:	mov	w0, w1
    aa0c:	orr	w1, w1, w27
    aa10:	cbz	w1, a56c <grub_putcode+0x46c>
    aa14:	ldr	x1, [sp, #112]
    aa18:	sub	x23, x23, x1
    aa1c:	ldr	x1, [sp, #104]
    aa20:	cmp	x19, x1
    aa24:	b.eq	a6bc <grub_putcode+0x5bc>  // b.none
    aa28:	ldr	w1, [x19]
    aa2c:	cmp	w1, #0xa
    aa30:	b.eq	a8b8 <grub_putcode+0x7b8>  // b.none
    aa34:	cbz	x25, a8bc <grub_putcode+0x7bc>
    aa38:	ldr	x1, [sp, #120]
    aa3c:	sub	x2, x19, x1
    aa40:	add	x3, x25, x2
    aa44:	ldr	w1, [sp, #96]
    aa48:	sub	w4, w23, w1
    aa4c:	ldrh	w1, [x25, x2]
    aa50:	bfi	w1, w4, #1, #15
    aa54:	strh	w1, [x25, x2]
    aa58:	strh	w28, [x3, #2]
    aa5c:	orr	w1, w1, #0x1
    aa60:	strb	w1, [x25, x2]
    aa64:	b	a8bc <grub_putcode+0x7bc>
    aa68:	add	w28, w28, #0x1
    aa6c:	ldr	w1, [sp, #144]
    aa70:	mov	w0, w1
    aa74:	orr	w1, w1, w27
    aa78:	cbz	w1, a5bc <grub_putcode+0x4bc>
    aa7c:	ldr	x1, [sp, #160]
    aa80:	str	x1, [sp, #112]
    aa84:	ldr	x19, [sp, #120]
    aa88:	b	aa14 <grub_putcode+0x914>
    aa8c:	str	x19, [sp, #104]
    aa90:	str	x23, [sp, #112]
    aa94:	ldr	x1, [sp, #136]
    aa98:	cmp	x23, x1
    aa9c:	b.gt	a9c0 <grub_putcode+0x8c0>
    aaa0:	b	a8d0 <grub_putcode+0x7d0>
    aaa4:	mov	w28, #0x0                   	// #0
    aaa8:	cbz	x25, a7f8 <grub_putcode+0x6f8>
    aaac:	ldr	x19, [sp, #120]
    aab0:	mov	x20, x19
    aab4:	ldr	x23, [sp, #160]
    aab8:	mov	w28, #0x0                   	// #0
    aabc:	b	a6ec <grub_putcode+0x5ec>
    aac0:	sub	sp, sp, #0xb0
    aac4:	stp	x29, x30, [sp, #48]
    aac8:	add	x29, sp, #0x30
    aacc:	stp	x19, x20, [sp, #64]
    aad0:	stp	x21, x22, [sp, #80]
    aad4:	stp	x23, x24, [sp, #96]
    aad8:	stp	x25, x26, [sp, #112]
    aadc:	stp	x27, x28, [sp, #128]
    aae0:	mov	x25, x0
    aae4:	mov	x22, x1
    aae8:	mov	w23, w2
    aaec:	mov	w27, w3
    aaf0:	mov	x20, x4
    aaf4:	mov	w24, w6
    aaf8:	str	w7, [sp, #156]
    aafc:	ldr	w19, [sp, #176]
    ab00:	ldr	w21, [sp, #184]
    ab04:	ldr	w28, [sp, #192]
    ab08:	cbnz	w6, acd0 <grub_putcode+0xbd0>
    ab0c:	str	xzr, [sp, #144]
    ab10:	cbnz	w5, ab58 <grub_putcode+0xa58>
    ab14:	ldr	x1, [x20, #64]
    ab18:	mov	x0, x20
    ab1c:	blr	x1
    ab20:	and	w26, w0, #0xffff
    ab24:	cmp	w23, w0, uxth
    ab28:	b.le	ab7c <grub_putcode+0xa7c>
    ab2c:	cbnz	w28, ab68 <grub_putcode+0xa68>
    ab30:	sub	w26, w23, w26
    ab34:	subs	w26, w26, #0x1
    ab38:	b.mi	ab7c <grub_putcode+0xa7c>  // b.first
    ab3c:	mov	x1, x20
    ab40:	mov	w0, #0x20                  	// #32
    ab44:	bl	a100 <grub_putcode>
    ab48:	sub	w26, w26, #0x1
    ab4c:	cmn	w26, #0x1
    ab50:	b.ne	ab3c <grub_putcode+0xa3c>  // b.any
    ab54:	b	ab7c <grub_putcode+0xa7c>
    ab58:	mov	x0, x4
    ab5c:	bl	96c0 <read_crypto_list+0x228>
    ab60:	str	x0, [sp, #144]
    ab64:	b	ab14 <grub_putcode+0xa14>
    ab68:	ldr	x2, [x20, #72]
    ab6c:	bfxil	w0, w23, #0, #16
    ab70:	mov	w1, w0
    ab74:	mov	x0, x20
    ab78:	blr	x2
    ab7c:	ldr	w0, [x20, #120]
    ab80:	and	w0, w0, #0x38
    ab84:	sub	w0, w0, #0x18
    ab88:	tst	w0, #0xfffffff7
    ab8c:	b.eq	ae2c <grub_putcode+0xd2c>  // b.none
    ab90:	ldr	x0, [sp, #208]
    ab94:	str	x0, [sp, #40]
    ab98:	ldr	w0, [sp, #200]
    ab9c:	str	w0, [sp, #32]
    aba0:	cmp	w28, #0x0
    aba4:	cset	w0, ne  // ne = any
    aba8:	str	w0, [sp, #24]
    abac:	str	w28, [sp, #16]
    abb0:	str	w21, [sp, #8]
    abb4:	str	w19, [sp]
    abb8:	ldr	w7, [sp, #156]
    abbc:	mov	w6, w24
    abc0:	ldr	x5, [sp, #144]
    abc4:	mov	x4, x20
    abc8:	mov	w3, w27
    abcc:	mov	w2, w23
    abd0:	mov	x1, x22
    abd4:	mov	x0, x25
    abd8:	bl	a3a8 <grub_putcode+0x2a8>
    abdc:	mov	w19, w0
    abe0:	mov	w0, w19
    abe4:	ldp	x19, x20, [sp, #64]
    abe8:	ldp	x21, x22, [sp, #80]
    abec:	ldp	x23, x24, [sp, #96]
    abf0:	ldp	x25, x26, [sp, #112]
    abf4:	ldp	x27, x28, [sp, #128]
    abf8:	ldp	x29, x30, [sp, #48]
    abfc:	add	sp, sp, #0xb0
    ac00:	ret
    ac04:	bl	0 <grub_print_error>
    ac08:	mov	w19, #0x0                   	// #0
    ac0c:	b	abe0 <grub_putcode+0xae0>
    ac10:	mov	x8, x22
    ac14:	b	ad7c <grub_putcode+0xc7c>
    ac18:	mov	x8, x22
    ac1c:	b	ad7c <grub_putcode+0xc7c>
    ac20:	mov	x1, x8
    ac24:	b	adb8 <grub_putcode+0xcb8>
    ac28:	mov	x1, x8
    ac2c:	b	adb8 <grub_putcode+0xcb8>
    ac30:	add	x1, x22, x0, lsl #5
    ac34:	sub	x1, x1, x8
    ac38:	asr	x1, x1, #5
    ac3c:	b	adc0 <grub_putcode+0xcc0>
    ac40:	mov	w19, #0x0                   	// #0
    ac44:	b	adf0 <grub_putcode+0xcf0>
    ac48:	ldr	x0, [x22, #24]
    ac4c:	bl	0 <grub_free>
    ac50:	ldrh	w1, [x22, #6]
    ac54:	and	w1, w1, #0xfffff807
    ac58:	strh	w1, [x22, #6]
    ac5c:	add	x22, x22, #0x20
    ac60:	ldr	x0, [sp, #168]
    ac64:	add	x1, x0, x20
    ac68:	cmp	x22, x1
    ac6c:	b.cs	ae1c <grub_putcode+0xd1c>  // b.hs, b.nlast
    ac70:	ldrh	w1, [x22, #6]
    ac74:	ubfx	x1, x1, #3, #8
    ac78:	cmp	w1, #0x2
    ac7c:	b.ls	ac50 <grub_putcode+0xb50>  // b.plast
    ac80:	b	ac48 <grub_putcode+0xb48>
    ac84:	ldr	w0, [sp, #200]
    ac88:	str	w0, [sp]
    ac8c:	mov	w7, w28
    ac90:	ldr	w6, [sp, #156]
    ac94:	ldr	x5, [sp, #144]
    ac98:	mov	x4, x20
    ac9c:	mov	w3, w27
    aca0:	mov	w2, w23
    aca4:	mov	x0, x8
    aca8:	bl	a1ac <grub_putcode+0xac>
    acac:	mov	w19, w0
    acb0:	cbz	w0, acc4 <grub_putcode+0xbc4>
    acb4:	ldr	x0, [sp, #168]
    acb8:	ldr	x1, [sp, #144]
    acbc:	str	x0, [x1, #112]
    acc0:	b	abe0 <grub_putcode+0xae0>
    acc4:	ldr	x0, [sp, #168]
    acc8:	bl	0 <grub_free>
    accc:	b	abe0 <grub_putcode+0xae0>
    acd0:	ldr	w0, [x4, #120]
    acd4:	and	w0, w0, #0x38
    acd8:	sub	w0, w0, #0x18
    acdc:	tst	w0, #0xfffffff7
    ace0:	b.ne	ae24 <grub_putcode+0xd24>  // b.any
    ace4:	sub	x22, x22, x25
    ace8:	asr	x22, x22, #2
    acec:	mov	w2, w27
    acf0:	mov	w1, w23
    acf4:	mov	x0, x20
    acf8:	bl	9c68 <read_crypto_list+0x7d0>
    acfc:	mov	x26, x0
    ad00:	str	xzr, [sp, #144]
    ad04:	mov	x6, #0x0                   	// #0
    ad08:	cmp	w28, #0x0
    ad0c:	cset	w0, ne  // ne = any
    ad10:	str	w0, [sp, #8]
    ad14:	ldr	x0, [sp, #208]
    ad18:	str	x0, [sp]
    ad1c:	mov	w7, w28
    ad20:	mov	x5, x26
    ad24:	mov	x4, x20
    ad28:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ad2c:	ldr	x3, [x0]
    ad30:	add	x2, sp, #0xa8
    ad34:	mov	x1, x22
    ad38:	mov	x0, x25
    ad3c:	bl	dbf8 <grub_bidi_logical_to_visual>
    ad40:	tbnz	x0, #63, ac04 <grub_putcode+0xb04>
    ad44:	ldr	x22, [sp, #168]
    ad48:	cbz	w19, ac10 <grub_putcode+0xb10>
    ad4c:	add	x2, x22, x0, lsl #5
    ad50:	cmp	x22, x2
    ad54:	b.cs	ac18 <grub_putcode+0xb18>  // b.hs, b.nlast
    ad58:	mov	x8, x22
    ad5c:	ldr	w1, [x8], #32
    ad60:	and	w1, w1, #0x7fffff
    ad64:	cmp	w1, #0xa
    ad68:	cset	w1, eq  // eq = none
    ad6c:	subs	w19, w19, w1
    ad70:	b.eq	ad7c <grub_putcode+0xc7c>  // b.none
    ad74:	cmp	x8, x2
    ad78:	b.cc	ad5c <grub_putcode+0xc5c>  // b.lo, b.ul, b.last
    ad7c:	cmn	w21, #0x1
    ad80:	b.eq	ac30 <grub_putcode+0xb30>  // b.none
    ad84:	cbz	w21, ac20 <grub_putcode+0xb20>
    ad88:	add	x3, x22, x0, lsl #5
    ad8c:	cmp	x3, x8
    ad90:	b.ls	ac28 <grub_putcode+0xb28>  // b.plast
    ad94:	mov	x1, x8
    ad98:	ldr	w2, [x1], #32
    ad9c:	and	w2, w2, #0x7fffff
    ada0:	cmp	w2, #0xa
    ada4:	cset	w2, eq  // eq = none
    ada8:	subs	w21, w21, w2
    adac:	b.eq	adb8 <grub_putcode+0xcb8>  // b.none
    adb0:	cmp	x1, x3
    adb4:	b.cc	ad98 <grub_putcode+0xc98>  // b.lo, b.ul, b.last
    adb8:	sub	x1, x1, x8
    adbc:	asr	x1, x1, #5
    adc0:	cbz	w24, ac84 <grub_putcode+0xb84>
    adc4:	lsl	x4, x1, #5
    adc8:	add	x3, x8, x4
    adcc:	cmp	x3, x8
    add0:	b.ls	ac40 <grub_putcode+0xb40>  // b.plast
    add4:	mov	w19, #0x0                   	// #0
    add8:	ldr	w2, [x8], #32
    addc:	and	w2, w2, #0x7fffff
    ade0:	cmp	w2, #0xa
    ade4:	cinc	w19, w19, eq  // eq = none
    ade8:	cmp	x8, x3
    adec:	b.cc	add8 <grub_putcode+0xcd8>  // b.lo, b.ul, b.last
    adf0:	cbz	x1, ae08 <grub_putcode+0xd08>
    adf4:	add	x4, x22, x4
    adf8:	ldur	w1, [x4, #-32]
    adfc:	and	w1, w1, #0x7fffff
    ae00:	cmp	w1, #0xa
    ae04:	cinc	w19, w19, ne  // ne = any
    ae08:	lsl	x20, x0, #5
    ae0c:	add	x0, x22, x20
    ae10:	cmp	x22, x0
    ae14:	b.cc	ac70 <grub_putcode+0xb70>  // b.lo, b.ul, b.last
    ae18:	mov	x0, x22
    ae1c:	bl	0 <grub_free>
    ae20:	b	abe0 <grub_putcode+0xae0>
    ae24:	str	xzr, [sp, #144]
    ae28:	b	ab90 <grub_putcode+0xa90>
    ae2c:	sub	x22, x22, x25
    ae30:	asr	x22, x22, #2
    ae34:	mov	w2, w27
    ae38:	mov	w1, w23
    ae3c:	mov	x0, x20
    ae40:	bl	9c68 <read_crypto_list+0x7d0>
    ae44:	mov	x26, x0
    ae48:	ldr	x1, [x20, #64]
    ae4c:	mov	x0, x20
    ae50:	blr	x1
    ae54:	and	w6, w0, #0xffff
    ae58:	sub	w6, w6, w23
    ae5c:	sxtw	x6, w6
    ae60:	b	ad08 <grub_putcode+0xc08>
    ae64:	nop
	...

000000000000ae70 <grub_puts_terminal>:
    ae70:	sub	sp, sp, #0xa0
    ae74:	stp	x29, x30, [sp, #48]
    ae78:	add	x29, sp, #0x30
    ae7c:	stp	x19, x20, [sp, #64]
    ae80:	mov	x20, x0
    ae84:	mov	x19, x1
    ae88:	bl	0 <grub_error_push>
    ae8c:	add	x2, sp, #0x90
    ae90:	add	x1, sp, #0x98
    ae94:	mov	x0, x20
    ae98:	bl	c0e8 <grub_utf8_to_ucs4_alloc>
    ae9c:	bl	0 <grub_error_pop>
    aea0:	ldr	x0, [sp, #152]
    aea4:	cbz	x0, aef8 <grub_puts_terminal+0x88>
    aea8:	str	xzr, [sp, #32]
    aeac:	str	wzr, [sp, #24]
    aeb0:	str	wzr, [sp, #16]
    aeb4:	mov	w1, #0xffffffff            	// #-1
    aeb8:	str	w1, [sp, #8]
    aebc:	str	wzr, [sp]
    aec0:	mov	w7, #0x0                   	// #0
    aec4:	mov	w6, #0x0                   	// #0
    aec8:	mov	w5, #0x0                   	// #0
    aecc:	mov	x4, x19
    aed0:	mov	w3, #0x0                   	// #0
    aed4:	mov	w2, #0x0                   	// #0
    aed8:	ldr	x1, [sp, #144]
    aedc:	bl	aac0 <grub_putcode+0x9c0>
    aee0:	ldr	x0, [sp, #152]
    aee4:	bl	0 <grub_free>
    aee8:	ldp	x19, x20, [sp, #64]
    aeec:	ldp	x29, x30, [sp, #48]
    aef0:	add	sp, sp, #0xa0
    aef4:	ret
    aef8:	ldrb	w0, [x20]
    aefc:	cbz	w0, aee8 <grub_puts_terminal+0x78>
    af00:	stp	x21, x22, [sp, #80]
    af04:	str	x23, [sp, #96]
    af08:	mov	w22, #0x1                   	// #1
    af0c:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
    af10:	mov	w23, #0xd                   	// #13
    af14:	b	af20 <grub_puts_terminal+0xb0>
    af18:	ldrb	w0, [x20, #1]!
    af1c:	cbz	w0, af94 <grub_puts_terminal+0x124>
    af20:	stp	xzr, xzr, [sp, #112]
    af24:	stp	xzr, xzr, [sp, #128]
    af28:	str	w0, [sp, #112]
    af2c:	strb	w22, [sp, #120]
    af30:	ldr	x0, [x21]
    af34:	ldr	x19, [x0]
    af38:	cbz	x19, af54 <grub_puts_terminal+0xe4>
    af3c:	ldr	x2, [x19, #40]
    af40:	add	x1, sp, #0x70
    af44:	mov	x0, x19
    af48:	blr	x2
    af4c:	ldr	x19, [x19]
    af50:	cbnz	x19, af3c <grub_puts_terminal+0xcc>
    af54:	ldrb	w0, [x20]
    af58:	cmp	w0, #0xa
    af5c:	b.ne	af18 <grub_puts_terminal+0xa8>  // b.any
    af60:	ldr	w0, [sp, #112]
    af64:	bfxil	w0, w23, #0, #23
    af68:	str	w0, [sp, #112]
    af6c:	ldr	x0, [x21]
    af70:	ldr	x19, [x0]
    af74:	cbz	x19, af18 <grub_puts_terminal+0xa8>
    af78:	ldr	x2, [x19, #40]
    af7c:	add	x1, sp, #0x70
    af80:	mov	x0, x19
    af84:	blr	x2
    af88:	ldr	x19, [x19]
    af8c:	cbnz	x19, af78 <grub_puts_terminal+0x108>
    af90:	b	af18 <grub_puts_terminal+0xa8>
    af94:	ldp	x21, x22, [sp, #80]
    af98:	ldr	x23, [sp, #96]
    af9c:	b	aee8 <grub_puts_terminal+0x78>
	...

000000000000afa8 <grub_print_ucs4_menu>:
    afa8:	sub	sp, sp, #0x40
    afac:	stp	x29, x30, [sp, #48]
    afb0:	add	x29, sp, #0x30
    afb4:	mov	w8, w7
    afb8:	ldr	x7, [sp, #64]
    afbc:	str	x7, [sp, #32]
    afc0:	mov	w7, #0x1                   	// #1
    afc4:	str	w7, [sp, #24]
    afc8:	str	w8, [sp, #16]
    afcc:	str	w6, [sp, #8]
    afd0:	str	w5, [sp]
    afd4:	mov	w6, #0x0                   	// #0
    afd8:	mov	w5, #0x0                   	// #0
    afdc:	bl	aac0 <grub_putcode+0x9c0>
    afe0:	ldp	x29, x30, [sp, #48]
    afe4:	add	sp, sp, #0x40
    afe8:	ret

000000000000afec <grub_print_ucs4>:
    afec:	sub	sp, sp, #0x40
    aff0:	stp	x29, x30, [sp, #48]
    aff4:	add	x29, sp, #0x30
    aff8:	str	xzr, [sp, #32]
    affc:	str	wzr, [sp, #24]
    b000:	str	wzr, [sp, #16]
    b004:	mov	w5, #0xffffffff            	// #-1
    b008:	str	w5, [sp, #8]
    b00c:	str	wzr, [sp]
    b010:	mov	w7, #0x1                   	// #1
    b014:	mov	w6, #0x0                   	// #0
    b018:	mov	w5, #0x0                   	// #0
    b01c:	bl	aac0 <grub_putcode+0x9c0>
    b020:	ldp	x29, x30, [sp, #48]
    b024:	add	sp, sp, #0x40
    b028:	ret

000000000000b02c <grub_ucs4_count_lines>:
    b02c:	sub	sp, sp, #0x40
    b030:	stp	x29, x30, [sp, #48]
    b034:	add	x29, sp, #0x30
    b038:	str	xzr, [sp, #32]
    b03c:	str	wzr, [sp, #24]
    b040:	str	wzr, [sp, #16]
    b044:	mov	w5, #0xffffffff            	// #-1
    b048:	str	w5, [sp, #8]
    b04c:	str	wzr, [sp]
    b050:	mov	w7, #0x1                   	// #1
    b054:	mov	w6, w7
    b058:	mov	w5, #0x0                   	// #0
    b05c:	bl	aac0 <grub_putcode+0x9c0>
    b060:	ldp	x29, x30, [sp, #48]
    b064:	add	sp, sp, #0x40
    b068:	ret

000000000000b06c <grub_xnputs>:
    b06c:	sub	sp, sp, #0xb0
    b070:	stp	x29, x30, [sp, #48]
    b074:	add	x29, sp, #0x30
    b078:	stp	x19, x20, [sp, #64]
    b07c:	stp	x21, x22, [sp, #80]
    b080:	mov	x20, x0
    b084:	mov	x19, x1
    b088:	bl	0 <grub_error_push>
    b08c:	lsl	x0, x19, #2
    b090:	bl	0 <grub_malloc>
    b094:	mov	x22, x0
    b098:	bl	0 <grub_error_pop>
    b09c:	cbz	x22, b13c <grub_xnputs+0xd0>
    b0a0:	mov	x4, #0x0                   	// #0
    b0a4:	mov	x3, #0xffffffffffffffff    	// #-1
    b0a8:	mov	x2, x20
    b0ac:	mov	x1, x19
    b0b0:	mov	x0, x22
    b0b4:	bl	bfb0 <grub_utf8_to_ucs4>
    b0b8:	add	x20, x22, x0, lsl #2
    b0bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b0c0:	ldr	x0, [x0]
    b0c4:	ldr	x19, [x0]
    b0c8:	cbz	x19, b45c <grub_xnputs+0x3f0>
    b0cc:	stp	x23, x24, [sp, #96]
    b0d0:	stp	x25, x26, [sp, #112]
    b0d4:	mov	w21, #0x0                   	// #0
    b0d8:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    b0dc:	mov	w24, #0xffffffff            	// #-1
    b0e0:	mov	w23, #0x1                   	// #1
    b0e4:	ldr	x0, [x25]
    b0e8:	ldr	w5, [x0, #16]
    b0ec:	str	xzr, [sp, #32]
    b0f0:	str	wzr, [sp, #24]
    b0f4:	str	wzr, [sp, #16]
    b0f8:	str	w24, [sp, #8]
    b0fc:	str	wzr, [sp]
    b100:	mov	w7, #0x0                   	// #0
    b104:	mov	w6, #0x0                   	// #0
    b108:	mov	x4, x19
    b10c:	mov	w3, #0x0                   	// #0
    b110:	mov	w2, #0x0                   	// #0
    b114:	mov	x1, x20
    b118:	mov	x0, x22
    b11c:	bl	aac0 <grub_putcode+0x9c0>
    b120:	cmp	w0, #0x0
    b124:	csel	w21, w21, w23, eq  // eq = none
    b128:	ldr	x19, [x19]
    b12c:	cbnz	x19, b0e4 <grub_xnputs+0x78>
    b130:	cbz	w21, b448 <grub_xnputs+0x3dc>
    b134:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    b138:	b	b3f4 <grub_xnputs+0x388>
    b13c:	cbz	x19, b464 <grub_xnputs+0x3f8>
    b140:	stp	x23, x24, [sp, #96]
    b144:	mov	w22, #0x1                   	// #1
    b148:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
    b14c:	mov	w23, #0xd                   	// #13
    b150:	b	b158 <grub_xnputs+0xec>
    b154:	add	x20, x20, #0x1
    b158:	stp	xzr, xzr, [sp, #144]
    b15c:	stp	xzr, xzr, [sp, #160]
    b160:	ldrb	w0, [x20]
    b164:	str	w0, [sp, #144]
    b168:	strb	w22, [sp, #152]
    b16c:	ldr	x0, [x21]
    b170:	ldr	x19, [x0]
    b174:	cbz	x19, b190 <grub_xnputs+0x124>
    b178:	ldr	x2, [x19, #40]
    b17c:	add	x1, sp, #0x90
    b180:	mov	x0, x19
    b184:	blr	x2
    b188:	ldr	x19, [x19]
    b18c:	cbnz	x19, b178 <grub_xnputs+0x10c>
    b190:	ldrb	w0, [x20]
    b194:	cmp	w0, #0xa
    b198:	b.ne	b154 <grub_xnputs+0xe8>  // b.any
    b19c:	ldr	w0, [sp, #144]
    b1a0:	bfxil	w0, w23, #0, #23
    b1a4:	str	w0, [sp, #144]
    b1a8:	ldr	x0, [x21]
    b1ac:	ldr	x19, [x0]
    b1b0:	cbz	x19, b154 <grub_xnputs+0xe8>
    b1b4:	ldr	x2, [x19, #40]
    b1b8:	add	x1, sp, #0x90
    b1bc:	mov	x0, x19
    b1c0:	blr	x2
    b1c4:	ldr	x19, [x19]
    b1c8:	cbnz	x19, b1b4 <grub_xnputs+0x148>
    b1cc:	b	b154 <grub_xnputs+0xe8>
    b1d0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b1d4:	ldr	x0, [x0]
    b1d8:	str	wzr, [x0]
    b1dc:	b	b2e4 <grub_xnputs+0x278>
    b1e0:	ldr	x19, [x19]
    b1e4:	cbz	x19, b200 <grub_xnputs+0x194>
    b1e8:	ldr	x2, [x19, #88]
    b1ec:	cbz	x2, b1e0 <grub_xnputs+0x174>
    b1f0:	mov	w1, w20
    b1f4:	mov	x0, x19
    b1f8:	blr	x2
    b1fc:	b	b1e0 <grub_xnputs+0x174>
    b200:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b204:	ldr	x0, [x0]
    b208:	ldr	x19, [x0]
    b20c:	cbz	x19, b268 <grub_xnputs+0x1fc>
    b210:	mov	x4, x19
    b214:	mov	w3, #0x0                   	// #0
    b218:	mov	w2, #0x0                   	// #0
    b21c:	ldr	x1, [sp, #144]
    b220:	ldr	x0, [sp, #136]
    b224:	bl	afec <grub_print_ucs4>
    b228:	ldr	x19, [x19]
    b22c:	cbnz	x19, b210 <grub_xnputs+0x1a4>
    b230:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b234:	ldr	x0, [x0]
    b238:	ldr	x19, [x0]
    b23c:	cbz	x19, b268 <grub_xnputs+0x1fc>
    b240:	mov	w20, #0x1                   	// #1
    b244:	b	b250 <grub_xnputs+0x1e4>
    b248:	ldr	x19, [x19]
    b24c:	cbz	x19, b268 <grub_xnputs+0x1fc>
    b250:	ldr	x2, [x19, #88]
    b254:	cbz	x2, b248 <grub_xnputs+0x1dc>
    b258:	mov	w1, w20
    b25c:	mov	x0, x19
    b260:	blr	x2
    b264:	b	b248 <grub_xnputs+0x1dc>
    b268:	ldr	x0, [sp, #136]
    b26c:	bl	0 <grub_free>
    b270:	bl	0 <grub_getkey>
    b274:	and	w26, w0, #0xff
    b278:	mov	x0, x24
    b27c:	bl	9e38 <grub_term_restore_pos>
    b280:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b284:	ldr	x0, [x0]
    b288:	ldr	x20, [x0]
    b28c:	mov	w25, #0x20                  	// #32
    b290:	cbnz	x20, b308 <grub_xnputs+0x29c>
    b294:	mov	x0, x24
    b298:	bl	9e38 <grub_term_restore_pos>
    b29c:	mov	x0, x24
    b2a0:	bl	0 <grub_free>
    b2a4:	cmp	w26, #0xd
    b2a8:	ccmp	w26, #0xa, #0x4, ne  // ne = any
    b2ac:	b.ne	b324 <grub_xnputs+0x2b8>  // b.any
    b2b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b2b4:	ldr	x0, [x0]
    b2b8:	ldr	x1, [x0]
    b2bc:	str	x1, [x0, #24]
    b2c0:	cbz	x1, b2e4 <grub_xnputs+0x278>
    b2c4:	ldr	w0, [x1, #120]
    b2c8:	sub	w0, w0, #0x1
    b2cc:	str	w0, [x1, #120]
    b2d0:	ldr	x1, [x1]
    b2d4:	cbnz	x1, b2c4 <grub_xnputs+0x258>
    b2d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b2dc:	ldr	x0, [x0]
    b2e0:	str	xzr, [x0, #24]
    b2e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b2e8:	ldr	x0, [x0]
    b2ec:	ldr	x20, [x0]
    b2f0:	cbz	x20, b454 <grub_xnputs+0x3e8>
    b2f4:	mov	w24, #0x0                   	// #0
    b2f8:	mov	w25, #0xffffffff            	// #-1
    b2fc:	b	b378 <grub_xnputs+0x30c>
    b300:	ldr	x20, [x20]
    b304:	cbz	x20, b294 <grub_xnputs+0x228>
    b308:	mov	w19, #0x8                   	// #8
    b30c:	mov	x1, x20
    b310:	mov	w0, w25
    b314:	bl	a100 <grub_putcode>
    b318:	subs	w19, w19, #0x1
    b31c:	b.ne	b30c <grub_xnputs+0x2a0>  // b.any
    b320:	b	b300 <grub_xnputs+0x294>
    b324:	bl	9d2c <grub_normal_reset_more>
    b328:	b	b2e4 <grub_xnputs+0x278>
    b32c:	ldr	w7, [x19, #24]
    b330:	ldr	x1, [x19, #32]
    b334:	str	xzr, [sp, #40]
    b338:	str	wzr, [sp, #32]
    b33c:	str	wzr, [sp, #24]
    b340:	str	wzr, [sp, #16]
    b344:	str	w25, [sp, #8]
    b348:	str	wzr, [sp]
    b34c:	mov	w6, #0x0                   	// #0
    b350:	mov	x5, x19
    b354:	mov	x4, x20
    b358:	mov	w3, #0x0                   	// #0
    b35c:	mov	w2, #0x0                   	// #0
    b360:	add	x1, x0, x1, lsl #2
    b364:	bl	a3a8 <grub_putcode+0x2a8>
    b368:	cbz	w0, b3d8 <grub_xnputs+0x36c>
    b36c:	mov	w24, w21
    b370:	ldr	x20, [x20]
    b374:	cbz	x20, b3f0 <grub_xnputs+0x384>
    b378:	mov	x0, x20
    b37c:	bl	96c0 <read_crypto_list+0x228>
    b380:	mov	x19, x0
    b384:	cbz	x0, b370 <grub_xnputs+0x304>
    b388:	ldr	x0, [x0, #16]
    b38c:	cbnz	x0, b32c <grub_xnputs+0x2c0>
    b390:	ldr	x0, [x19, #8]
    b394:	cbz	x0, b370 <grub_xnputs+0x304>
    b398:	ldr	w6, [x19, #24]
    b39c:	ldr	x1, [x19, #32]
    b3a0:	str	wzr, [sp]
    b3a4:	mov	w7, #0x0                   	// #0
    b3a8:	mov	x5, x19
    b3ac:	mov	x4, x20
    b3b0:	mov	w3, #0x0                   	// #0
    b3b4:	mov	w2, #0x0                   	// #0
    b3b8:	bl	a1ac <grub_putcode+0xac>
    b3bc:	cbnz	w0, b36c <grub_xnputs+0x300>
    b3c0:	ldr	x0, [x19, #112]
    b3c4:	bl	0 <grub_free>
    b3c8:	str	xzr, [x19, #112]
    b3cc:	str	xzr, [x19, #32]
    b3d0:	str	xzr, [x19, #8]
    b3d4:	b	b370 <grub_xnputs+0x304>
    b3d8:	ldr	x0, [x19, #112]
    b3dc:	bl	0 <grub_free>
    b3e0:	str	xzr, [x19, #112]
    b3e4:	str	xzr, [x19, #32]
    b3e8:	str	xzr, [x19, #16]
    b3ec:	b	b370 <grub_xnputs+0x304>
    b3f0:	cbz	w24, b43c <grub_xnputs+0x3d0>
    b3f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b3f8:	ldr	x0, [x0]
    b3fc:	ldr	x1, [x0]
    b400:	ldr	x0, [x23]
    b404:	blr	x1
    b408:	add	x2, sp, #0x90
    b40c:	add	x1, sp, #0x88
    b410:	bl	c0e8 <grub_utf8_to_ucs4_alloc>
    b414:	ldr	x0, [sp, #136]
    b418:	cbz	x0, b1d0 <grub_xnputs+0x164>
    b41c:	bl	9d98 <grub_term_save_pos>
    b420:	mov	x24, x0
    b424:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b428:	ldr	x0, [x0]
    b42c:	ldr	x19, [x0]
    b430:	cbz	x19, b268 <grub_xnputs+0x1fc>
    b434:	mov	w20, #0x2                   	// #2
    b438:	b	b1e8 <grub_xnputs+0x17c>
    b43c:	ldp	x23, x24, [sp, #96]
    b440:	ldp	x25, x26, [sp, #112]
    b444:	b	b45c <grub_xnputs+0x3f0>
    b448:	ldp	x23, x24, [sp, #96]
    b44c:	ldp	x25, x26, [sp, #112]
    b450:	b	b45c <grub_xnputs+0x3f0>
    b454:	ldp	x23, x24, [sp, #96]
    b458:	ldp	x25, x26, [sp, #112]
    b45c:	mov	x0, x22
    b460:	bl	0 <grub_free>
    b464:	ldp	x19, x20, [sp, #64]
    b468:	ldp	x21, x22, [sp, #80]
    b46c:	ldp	x29, x30, [sp, #48]
    b470:	add	sp, sp, #0xb0
    b474:	ret
	...

000000000000b4a0 <grub_xputs_normal>:
    b4a0:	stp	x29, x30, [sp, #-32]!
    b4a4:	mov	x29, sp
    b4a8:	str	x19, [sp, #16]
    b4ac:	mov	x19, x0
    b4b0:	bl	0 <grub_strlen>
    b4b4:	mov	x1, x0
    b4b8:	mov	x0, x19
    b4bc:	bl	b06c <grub_xnputs>
    b4c0:	ldr	x19, [sp, #16]
    b4c4:	ldp	x29, x30, [sp], #32
    b4c8:	ret

000000000000b4cc <grub_cls>:
    b4cc:	stp	x29, x30, [sp, #-48]!
    b4d0:	mov	x29, sp
    b4d4:	stp	x19, x20, [sp, #16]
    b4d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b4dc:	ldr	x0, [x0]
    b4e0:	ldr	x19, [x0]
    b4e4:	cbz	x19, b544 <grub_cls+0x78>
    b4e8:	str	x21, [sp, #32]
    b4ec:	mov	w20, #0xa                   	// #10
    b4f0:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
    b4f4:	b	b51c <grub_cls+0x50>
    b4f8:	mov	x1, x19
    b4fc:	mov	w0, w20
    b500:	bl	a100 <grub_putcode>
    b504:	ldr	x1, [x19, #104]
    b508:	cbz	x1, b514 <grub_cls+0x48>
    b50c:	mov	x0, x19
    b510:	blr	x1
    b514:	ldr	x19, [x19]
    b518:	cbz	x19, b540 <grub_cls+0x74>
    b51c:	ldr	w0, [x19, #120]
    b520:	tbnz	w0, #2, b4f8 <grub_cls+0x2c>
    b524:	ldr	x0, [x21]
    b528:	bl	0 <grub_env_get>
    b52c:	cbnz	x0, b4f8 <grub_cls+0x2c>
    b530:	ldr	x1, [x19, #80]
    b534:	mov	x0, x19
    b538:	blr	x1
    b53c:	b	b514 <grub_cls+0x48>
    b540:	ldr	x21, [sp, #32]
    b544:	ldp	x19, x20, [sp, #16]
    b548:	ldp	x29, x30, [sp], #48
    b54c:	ret
	...
    b560:	stp	x29, x30, [sp, #-32]!
    b564:	mov	x29, sp
    b568:	cmp	w1, #0x0
    b56c:	b.le	b5a4 <grub_cls+0xd8>
    b570:	stp	x19, x20, [sp, #16]
    b574:	mov	x19, x2
    b578:	sub	w1, w1, #0x1
    b57c:	add	x2, x2, #0x8
    b580:	add	x20, x2, x1, lsl #3
    b584:	ldr	x0, [x19], #8
    b588:	bl	0 <grub_env_export>
    b58c:	cmp	x19, x20
    b590:	b.ne	b584 <grub_cls+0xb8>  // b.any
    b594:	mov	w0, #0x0                   	// #0
    b598:	ldp	x19, x20, [sp, #16]
    b59c:	ldp	x29, x30, [sp], #32
    b5a0:	ret
    b5a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b5a8:	ldr	x1, [x0]
    b5ac:	mov	w0, #0x12                  	// #18
    b5b0:	bl	0 <grub_error>
    b5b4:	b	b59c <grub_cls+0xd0>
	...

000000000000b5c0 <grub_env_unset_menu>:
    b5c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b5c4:	ldr	x0, [x0]
    b5c8:	ldr	x0, [x0]
    b5cc:	str	xzr, [x0]
    b5d0:	ret
    b5d4:	nop
	...

000000000000b5e0 <grub_env_get_menu>:
    b5e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b5e4:	ldr	x0, [x0]
    b5e8:	ldr	x0, [x0]
    b5ec:	ldr	x0, [x0]
    b5f0:	ret
    b5f4:	nop
	...

000000000000b600 <grub_env_set_menu>:
    b600:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b604:	ldr	x1, [x1]
    b608:	ldr	x1, [x1]
    b60c:	str	x0, [x1]
    b610:	ret
    b614:	nop
	...

000000000000b620 <grub_env_context_close>:
    b620:	stp	x29, x30, [sp, #-48]!
    b624:	mov	x29, sp
    b628:	stp	x21, x22, [sp, #32]
    b62c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b630:	ldr	x0, [x0]
    b634:	ldr	x0, [x0]
    b638:	ldr	x0, [x0, #104]
    b63c:	mov	w21, #0x0                   	// #0
    b640:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    b644:	cbz	x0, b650 <grub_env_context_close+0x30>
    b648:	stp	x19, x20, [sp, #16]
    b64c:	b	b670 <grub_env_context_close+0x50>
    b650:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b654:	ldr	x1, [x0]
    b658:	mov	w0, #0x12                  	// #18
    b65c:	bl	0 <grub_error>
    b660:	b	b6f8 <grub_env_context_close+0xd8>
    b664:	add	w21, w21, #0x1
    b668:	cmp	w21, #0xd
    b66c:	b.eq	b6a8 <grub_env_context_close+0x88>  // b.none
    b670:	ldr	x0, [x22]
    b674:	ldr	x0, [x0]
    b678:	ldr	x19, [x0, w21, sxtw #3]
    b67c:	cbz	x19, b664 <grub_env_context_close+0x44>
    b680:	mov	x20, x19
    b684:	ldr	x19, [x19, #32]
    b688:	ldr	x0, [x20]
    b68c:	bl	0 <grub_free>
    b690:	ldr	x0, [x20, #8]
    b694:	bl	0 <grub_free>
    b698:	mov	x0, x20
    b69c:	bl	0 <grub_free>
    b6a0:	cbnz	x19, b680 <grub_env_context_close+0x60>
    b6a4:	b	b664 <grub_env_context_close+0x44>
    b6a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b6ac:	ldr	x19, [x0]
    b6b0:	ldr	x0, [x19]
    b6b4:	ldr	x20, [x0, #104]
    b6b8:	bl	0 <grub_free>
    b6bc:	str	x20, [x19]
    b6c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b6c4:	ldr	x0, [x0]
    b6c8:	ldr	x0, [x0]
    b6cc:	ldr	x20, [x0, #8]
    b6d0:	ldr	x0, [x0]
    b6d4:	cbz	x0, b6dc <grub_env_context_close+0xbc>
    b6d8:	bl	26c <grub_normal_free_menu>
    b6dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b6e0:	ldr	x19, [x0]
    b6e4:	ldr	x0, [x19]
    b6e8:	bl	0 <grub_free>
    b6ec:	str	x20, [x19]
    b6f0:	mov	w0, #0x0                   	// #0
    b6f4:	ldp	x19, x20, [sp, #16]
    b6f8:	ldp	x21, x22, [sp, #32]
    b6fc:	ldp	x29, x30, [sp], #48
    b700:	ret
    b704:	nop
	...
    b720:	stp	x29, x30, [sp, #-48]!
    b724:	mov	x29, sp
    b728:	stp	x19, x20, [sp, #16]
    b72c:	mov	w20, w0
    b730:	mov	x0, #0x70                  	// #112
    b734:	bl	0 <grub_zalloc>
    b738:	cbz	x0, b780 <grub_env_context_close+0x160>
    b73c:	stp	x21, x22, [sp, #32]
    b740:	mov	x21, x0
    b744:	mov	x0, #0x10                  	// #16
    b748:	bl	0 <grub_zalloc>
    b74c:	cbz	x0, b790 <grub_env_context_close+0x170>
    b750:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b754:	ldr	x1, [x1]
    b758:	ldr	x2, [x1]
    b75c:	str	x2, [x21, #104]
    b760:	str	x21, [x1]
    b764:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b768:	ldr	x1, [x1]
    b76c:	ldr	x2, [x1]
    b770:	str	x2, [x0, #8]
    b774:	str	x0, [x1]
    b778:	mov	w22, #0x0                   	// #0
    b77c:	b	b818 <grub_env_context_close+0x1f8>
    b780:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b784:	ldr	x0, [x0]
    b788:	ldr	w0, [x0]
    b78c:	b	b7c0 <grub_env_context_close+0x1a0>
    b790:	mov	x0, x21
    b794:	bl	0 <grub_free>
    b798:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b79c:	ldr	x0, [x0]
    b7a0:	ldr	w0, [x0]
    b7a4:	ldp	x21, x22, [sp, #32]
    b7a8:	b	b7c0 <grub_env_context_close+0x1a0>
    b7ac:	bl	b620 <grub_env_context_close>
    b7b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b7b4:	ldr	x0, [x0]
    b7b8:	ldr	w0, [x0]
    b7bc:	ldp	x21, x22, [sp, #32]
    b7c0:	ldp	x19, x20, [sp, #16]
    b7c4:	ldp	x29, x30, [sp], #48
    b7c8:	ret
    b7cc:	ldr	x19, [x19, #32]
    b7d0:	cbz	x19, b80c <grub_env_context_close+0x1ec>
    b7d4:	ldr	w1, [x19, #56]
    b7d8:	orr	w1, w20, w1
    b7dc:	cbz	w1, b7cc <grub_env_context_close+0x1ac>
    b7e0:	ldr	x1, [x19, #8]
    b7e4:	ldr	x0, [x19]
    b7e8:	bl	0 <grub_env_set>
    b7ec:	cbnz	w0, b7ac <grub_env_context_close+0x18c>
    b7f0:	ldr	x0, [x19]
    b7f4:	bl	0 <grub_env_export>
    b7f8:	ldr	x2, [x19, #24]
    b7fc:	ldr	x1, [x19, #16]
    b800:	ldr	x0, [x19]
    b804:	bl	0 <grub_register_variable_hook>
    b808:	b	b7cc <grub_env_context_close+0x1ac>
    b80c:	add	w22, w22, #0x1
    b810:	cmp	w22, #0xd
    b814:	b.eq	b828 <grub_env_context_close+0x208>  // b.none
    b818:	ldr	x0, [x21, #104]
    b81c:	ldr	x19, [x0, w22, sxtw #3]
    b820:	cbnz	x19, b7d4 <grub_env_context_close+0x1b4>
    b824:	b	b80c <grub_env_context_close+0x1ec>
    b828:	mov	w0, #0x0                   	// #0
    b82c:	ldp	x21, x22, [sp, #32]
    b830:	b	b7c0 <grub_env_context_close+0x1a0>
    b834:	nop
	...

000000000000b850 <grub_env_context_open>:
    b850:	stp	x29, x30, [sp, #-16]!
    b854:	mov	x29, sp
    b858:	mov	w0, #0x0                   	// #0
    b85c:	bl	b720 <grub_env_context_close+0x100>
    b860:	ldp	x29, x30, [sp], #16
    b864:	ret

000000000000b868 <grub_env_extractor_open>:
    b868:	stp	x29, x30, [sp, #-16]!
    b86c:	mov	x29, sp
    b870:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b874:	ldr	x2, [x1]
    b878:	ldr	w1, [x2]
    b87c:	add	w1, w1, #0x1
    b880:	str	w1, [x2]
    b884:	bl	b720 <grub_env_context_close+0x100>
    b888:	ldp	x29, x30, [sp], #16
    b88c:	ret
	...

000000000000b898 <grub_env_extractor_close>:
    b898:	stp	x29, x30, [sp, #-32]!
    b89c:	mov	x29, sp
    b8a0:	cbnz	w0, b8ac <grub_env_extractor_close+0x14>
    b8a4:	bl	b620 <grub_env_context_close>
    b8a8:	b	b910 <grub_env_extractor_close+0x78>
    b8ac:	str	x19, [sp, #16]
    b8b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b8b4:	ldr	x0, [x0]
    b8b8:	ldr	x0, [x0]
    b8bc:	ldr	x19, [x0]
    b8c0:	bl	b5c0 <grub_env_unset_menu>
    b8c4:	bl	b620 <grub_env_context_close>
    b8c8:	cbz	x19, b934 <grub_env_extractor_close+0x9c>
    b8cc:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b8d0:	ldr	x1, [x1]
    b8d4:	ldr	x1, [x1]
    b8d8:	ldr	x3, [x1]
    b8dc:	ldr	x1, [x3, #8]
    b8e0:	cbz	x1, b92c <grub_env_extractor_close+0x94>
    b8e4:	mov	x2, x1
    b8e8:	ldr	x1, [x1, #72]
    b8ec:	cbnz	x1, b8e4 <grub_env_extractor_close+0x4c>
    b8f0:	add	x2, x2, #0x48
    b8f4:	ldr	x1, [x19, #8]
    b8f8:	str	x1, [x2]
    b8fc:	ldr	w1, [x3]
    b900:	ldr	w2, [x19]
    b904:	add	w1, w1, w2
    b908:	str	w1, [x3]
    b90c:	ldr	x19, [sp, #16]
    b910:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b914:	ldr	x2, [x1]
    b918:	ldr	w1, [x2]
    b91c:	sub	w1, w1, #0x1
    b920:	str	w1, [x2]
    b924:	ldp	x29, x30, [sp], #32
    b928:	ret
    b92c:	add	x2, x3, #0x8
    b930:	b	b8f4 <grub_env_extractor_close+0x5c>
    b934:	ldr	x19, [sp, #16]
    b938:	b	b910 <grub_env_extractor_close+0x78>
    b93c:	nop
	...

000000000000b950 <grub_context_init>:
    b950:	stp	x29, x30, [sp, #-16]!
    b954:	mov	x29, sp
    b958:	mov	w4, #0x0                   	// #0
    b95c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b960:	ldr	x3, [x0]
    b964:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b968:	ldr	x2, [x0]
    b96c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b970:	ldr	x1, [x0]
    b974:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b978:	ldr	x0, [x0]
    b97c:	bl	0 <grub_register_command_prio>
    b980:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b984:	ldr	x1, [x1]
    b988:	str	x0, [x1, #8]
    b98c:	ldp	x29, x30, [sp], #16
    b990:	ret
    b994:	nop
	...

000000000000b9c0 <grub_context_fini>:
    b9c0:	stp	x29, x30, [sp, #-16]!
    b9c4:	mov	x29, sp
    b9c8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    b9cc:	ldr	x0, [x0]
    b9d0:	ldr	x0, [x0, #8]
    b9d4:	bl	0 <grub_unregister_command>
    b9d8:	ldp	x29, x30, [sp], #16
    b9dc:	ret
	...
    b9e8:	stp	x29, x30, [sp, #-16]!
    b9ec:	mov	x29, sp
    b9f0:	mov	x0, #0x20000               	// #131072
    b9f4:	bl	0 <grub_zalloc>
    b9f8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    b9fc:	ldr	x1, [x1]
    ba00:	str	x0, [x1]
    ba04:	cbz	x0, ba2c <grub_context_fini+0x6c>
    ba08:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    ba0c:	ldr	x1, [x1]
    ba10:	ldrh	w1, [x1, #2]
    ba14:	tst	x1, #0x3fe0
    ba18:	b.eq	ba38 <grub_context_fini+0x78>  // b.none
    ba1c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    ba20:	ldr	x1, [x1]
    ba24:	mov	w5, #0x1ffff               	// #131071
    ba28:	b	bac4 <grub_context_fini+0x104>
    ba2c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ba30:	ldr	x0, [x0]
    ba34:	str	wzr, [x0]
    ba38:	ldp	x29, x30, [sp], #16
    ba3c:	ret
    ba40:	ldrb	w2, [x1, #3]
    ba44:	ubfx	x3, x2, #6, #2
    ba48:	ldrb	w2, [x1, #4]
    ba4c:	ubfiz	x2, x2, #2, #3
    ba50:	orr	x2, x2, x3
    ba54:	strb	w2, [x0, w4, uxtw]
    ba58:	add	w4, w4, #0x1
    ba5c:	ldrb	w2, [x1]
    ba60:	ldrb	w3, [x1, #1]
    ba64:	orr	x3, x2, x3, lsl #8
    ba68:	ldrb	w2, [x1, #2]
    ba6c:	ubfiz	x2, x2, #16, #5
    ba70:	orr	x3, x2, x3
    ba74:	ldrh	w2, [x1, #2]
    ba78:	ubfx	x2, x2, #5, #9
    ba7c:	add	w2, w2, w3
    ba80:	cmp	w2, w4
    ba84:	ccmp	w4, w5, #0x2, hi  // hi = pmore
    ba88:	b.hi	bab4 <grub_context_fini+0xf4>  // b.pmore
    ba8c:	ldrb	w2, [x1, #5]
    ba90:	tbz	w2, #3, ba40 <grub_context_fini+0x80>
    ba94:	ldrb	w2, [x1, #3]
    ba98:	ubfx	x3, x2, #6, #2
    ba9c:	ldrb	w2, [x1, #4]
    baa0:	ubfiz	x2, x2, #2, #3
    baa4:	orr	x2, x2, x3
    baa8:	orr	w2, w2, #0xffffff80
    baac:	strb	w2, [x0, w4, uxtw]
    bab0:	b	ba58 <grub_context_fini+0x98>
    bab4:	add	x1, x1, #0x6
    bab8:	ldrh	w2, [x1, #2]
    babc:	tst	x2, #0x3fe0
    bac0:	b.eq	ba38 <grub_context_fini+0x78>  // b.none
    bac4:	ldrb	w3, [x1]
    bac8:	ldrb	w2, [x1, #1]
    bacc:	orr	x3, x3, x2, lsl #8
    bad0:	ldrb	w2, [x1, #2]
    bad4:	ubfiz	x2, x2, #16, #5
    bad8:	orr	x2, x2, x3
    badc:	mov	w4, w2
    bae0:	ldrh	w3, [x1, #2]
    bae4:	ubfx	x3, x3, #5, #9
    bae8:	add	w3, w3, w2
    baec:	cmp	w2, w3
    baf0:	ccmp	w2, w5, #0x2, cc  // cc = lo, ul, last
    baf4:	b.ls	ba8c <grub_context_fini+0xcc>  // b.plast
    baf8:	b	bab4 <grub_context_fini+0xf4>
    bafc:	nop
	...
    bb18:	stp	x29, x30, [sp, #-16]!
    bb1c:	mov	x29, sp
    bb20:	mov	x0, #0x20000               	// #131072
    bb24:	bl	0 <grub_zalloc>
    bb28:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    bb2c:	ldr	x1, [x1]
    bb30:	str	x0, [x1, #8]
    bb34:	cbz	x0, bbe4 <grub_context_fini+0x224>
    bb38:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    bb3c:	ldr	x1, [x1]
    bb40:	ldrh	w1, [x1, #2]
    bb44:	tst	x1, #0x3fe0
    bb48:	b.eq	bbdc <grub_context_fini+0x21c>  // b.none
    bb4c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    bb50:	ldr	x3, [x1]
    bb54:	mov	w5, #0x1ffff               	// #131071
    bb58:	ldrb	w2, [x3]
    bb5c:	ldrb	w1, [x3, #1]
    bb60:	orr	x2, x2, x1, lsl #8
    bb64:	ldrb	w1, [x3, #2]
    bb68:	ubfiz	x1, x1, #16, #5
    bb6c:	orr	x1, x1, x2
    bb70:	mov	w4, w1
    bb74:	ldrh	w2, [x3, #2]
    bb78:	ubfx	x2, x2, #5, #9
    bb7c:	add	w2, w2, w1
    bb80:	cmp	w1, w2
    bb84:	ccmp	w1, w5, #0x2, cc  // cc = lo, ul, last
    bb88:	b.hi	bbcc <grub_context_fini+0x20c>  // b.pmore
    bb8c:	ldrb	w1, [x3, #5]
    bb90:	ubfx	x1, x1, #4, #3
    bb94:	strb	w1, [x0, w4, uxtw]
    bb98:	add	w4, w4, #0x1
    bb9c:	ldrb	w1, [x3]
    bba0:	ldrb	w2, [x3, #1]
    bba4:	orr	x2, x1, x2, lsl #8
    bba8:	ldrb	w1, [x3, #2]
    bbac:	ubfiz	x1, x1, #16, #5
    bbb0:	orr	x2, x1, x2
    bbb4:	ldrh	w1, [x3, #2]
    bbb8:	ubfx	x1, x1, #5, #9
    bbbc:	add	w1, w1, w2
    bbc0:	cmp	w1, w4
    bbc4:	ccmp	w4, w5, #0x2, hi  // hi = pmore
    bbc8:	b.ls	bb8c <grub_context_fini+0x1cc>  // b.plast
    bbcc:	add	x3, x3, #0x6
    bbd0:	ldrh	w1, [x3, #2]
    bbd4:	tst	x1, #0x3fe0
    bbd8:	b.ne	bb58 <grub_context_fini+0x198>  // b.any
    bbdc:	ldp	x29, x30, [sp], #16
    bbe0:	ret
    bbe4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    bbe8:	ldr	x0, [x0]
    bbec:	str	wzr, [x0]
    bbf0:	b	bbdc <grub_context_fini+0x21c>
    bbf4:	nop
	...

000000000000bc10 <grub_encode_utf8_character>:
    bc10:	cmp	x0, x1
    bc14:	b.cs	bcf8 <grub_encode_utf8_character+0xe8>  // b.hs, b.nlast
    bc18:	cmp	w2, #0x7f
    bc1c:	b.ls	bc54 <grub_encode_utf8_character+0x44>  // b.plast
    bc20:	cmp	w2, #0x7ff
    bc24:	b.hi	bc60 <grub_encode_utf8_character+0x50>  // b.pmore
    bc28:	add	x3, x0, #0x1
    bc2c:	cmp	x1, x3
    bc30:	b.ls	bd00 <grub_encode_utf8_character+0xf0>  // b.plast
    bc34:	lsr	w1, w2, #6
    bc38:	orr	w1, w1, #0xffffffc0
    bc3c:	strb	w1, [x0]
    bc40:	and	w2, w2, #0x3f
    bc44:	orr	w2, w2, #0xffffff80
    bc48:	strb	w2, [x0, #1]
    bc4c:	mov	x0, #0x2                   	// #2
    bc50:	b	bc5c <grub_encode_utf8_character+0x4c>
    bc54:	strb	w2, [x0]
    bc58:	mov	x0, #0x1                   	// #1
    bc5c:	ret
    bc60:	sub	w3, w2, #0xd, lsl #12
    bc64:	sub	w3, w3, #0x800
    bc68:	cmp	w3, #0x7ff
    bc6c:	b.ls	bd08 <grub_encode_utf8_character+0xf8>  // b.plast
    bc70:	mov	w3, #0xffff                	// #65535
    bc74:	cmp	w2, w3
    bc78:	b.hi	bcb4 <grub_encode_utf8_character+0xa4>  // b.pmore
    bc7c:	add	x3, x0, #0x2
    bc80:	cmp	x1, x3
    bc84:	b.ls	bd10 <grub_encode_utf8_character+0x100>  // b.plast
    bc88:	lsr	w1, w2, #12
    bc8c:	orr	w1, w1, #0xffffffe0
    bc90:	strb	w1, [x0]
    bc94:	ubfx	x1, x2, #6, #6
    bc98:	orr	w1, w1, #0xffffff80
    bc9c:	strb	w1, [x0, #1]
    bca0:	and	w2, w2, #0x3f
    bca4:	orr	w2, w2, #0xffffff80
    bca8:	strb	w2, [x0, #2]
    bcac:	mov	x0, #0x3                   	// #3
    bcb0:	b	bc5c <grub_encode_utf8_character+0x4c>
    bcb4:	add	x3, x0, #0x3
    bcb8:	cmp	x1, x3
    bcbc:	b.ls	bd18 <grub_encode_utf8_character+0x108>  // b.plast
    bcc0:	lsr	w1, w2, #18
    bcc4:	orr	w1, w1, #0xfffffff0
    bcc8:	strb	w1, [x0]
    bccc:	ubfx	x1, x2, #12, #6
    bcd0:	orr	w1, w1, #0xffffff80
    bcd4:	strb	w1, [x0, #1]
    bcd8:	ubfx	x1, x2, #6, #6
    bcdc:	orr	w1, w1, #0xffffff80
    bce0:	strb	w1, [x0, #2]
    bce4:	and	w2, w2, #0x3f
    bce8:	orr	w2, w2, #0xffffff80
    bcec:	strb	w2, [x0, #3]
    bcf0:	mov	x0, #0x4                   	// #4
    bcf4:	b	bc5c <grub_encode_utf8_character+0x4c>
    bcf8:	mov	x0, #0xfffffffffffffffe    	// #-2
    bcfc:	b	bc5c <grub_encode_utf8_character+0x4c>
    bd00:	mov	x0, #0xfffffffffffffffe    	// #-2
    bd04:	b	bc5c <grub_encode_utf8_character+0x4c>
    bd08:	mov	x0, #0xffffffffffffffff    	// #-1
    bd0c:	b	bc5c <grub_encode_utf8_character+0x4c>
    bd10:	mov	x0, #0xfffffffffffffffe    	// #-2
    bd14:	b	bc5c <grub_encode_utf8_character+0x4c>
    bd18:	mov	x0, #0xfffffffffffffffe    	// #-2
    bd1c:	b	bc5c <grub_encode_utf8_character+0x4c>

000000000000bd20 <grub_ucs4_to_utf8>:
    bd20:	stp	x29, x30, [sp, #-80]!
    bd24:	mov	x29, sp
    bd28:	stp	x19, x20, [sp, #16]
    bd2c:	stp	x21, x22, [sp, #32]
    bd30:	stp	x23, x24, [sp, #48]
    bd34:	mov	x24, x2
    bd38:	sub	x21, x3, #0x1
    bd3c:	add	x21, x2, x21
    bd40:	cmp	x1, #0x0
    bd44:	ccmp	x2, x21, #0x2, ne  // ne = any
    bd48:	b.cs	bdd0 <grub_ucs4_to_utf8+0xb0>  // b.hs, b.nlast
    bd4c:	str	x25, [sp, #64]
    bd50:	mov	x22, x0
    bd54:	sub	x23, x1, #0x1
    bd58:	mov	x19, x2
    bd5c:	mov	x20, #0x0                   	// #0
    bd60:	mov	w25, #0x3f                  	// #63
    bd64:	b	bd88 <grub_ucs4_to_utf8+0x68>
    bd68:	strb	w25, [x19], #1
    bd6c:	cmp	x20, x23
    bd70:	cset	w0, ne  // ne = any
    bd74:	cmp	x21, x19
    bd78:	cset	w1, hi  // hi = pmore
    bd7c:	add	x20, x20, #0x1
    bd80:	tst	w0, w1
    bd84:	b.eq	bdb0 <grub_ucs4_to_utf8+0x90>  // b.none
    bd88:	ldr	w2, [x22, x20, lsl #2]
    bd8c:	mov	x1, x21
    bd90:	mov	x0, x19
    bd94:	bl	bc10 <grub_encode_utf8_character>
    bd98:	cmn	x0, #0x2
    bd9c:	b.eq	bdd8 <grub_ucs4_to_utf8+0xb8>  // b.none
    bda0:	cmn	x0, #0x1
    bda4:	b.eq	bd68 <grub_ucs4_to_utf8+0x48>  // b.none
    bda8:	add	x19, x19, x0
    bdac:	b	bd6c <grub_ucs4_to_utf8+0x4c>
    bdb0:	ldr	x25, [sp, #64]
    bdb4:	strb	wzr, [x19]
    bdb8:	sub	x0, x19, x24
    bdbc:	ldp	x19, x20, [sp, #16]
    bdc0:	ldp	x21, x22, [sp, #32]
    bdc4:	ldp	x23, x24, [sp, #48]
    bdc8:	ldp	x29, x30, [sp], #80
    bdcc:	ret
    bdd0:	mov	x19, x2
    bdd4:	b	bdb4 <grub_ucs4_to_utf8+0x94>
    bdd8:	ldr	x25, [sp, #64]
    bddc:	b	bdb4 <grub_ucs4_to_utf8+0x94>

000000000000bde0 <grub_get_num_of_utf8_bytes>:
    bde0:	mov	x4, x0
    bde4:	cbz	x1, be4c <grub_get_num_of_utf8_bytes+0x6c>
    bde8:	mov	x2, #0x0                   	// #0
    bdec:	mov	x0, #0x0                   	// #0
    bdf0:	mov	w6, #0xffff2800            	// #-55296
    bdf4:	mov	w7, #0xffff                	// #65535
    bdf8:	b	be14 <grub_get_num_of_utf8_bytes+0x34>
    bdfc:	cmp	w3, #0x7ff
    be00:	b.hi	be28 <grub_get_num_of_utf8_bytes+0x48>  // b.pmore
    be04:	add	x0, x0, #0x2
    be08:	add	x2, x2, #0x1
    be0c:	cmp	x2, x1
    be10:	b.eq	be50 <grub_get_num_of_utf8_bytes+0x70>  // b.none
    be14:	ldr	w3, [x4, x2, lsl #2]
    be18:	cmp	w3, #0x7f
    be1c:	b.hi	bdfc <grub_get_num_of_utf8_bytes+0x1c>  // b.pmore
    be20:	add	x0, x0, #0x1
    be24:	b	be08 <grub_get_num_of_utf8_bytes+0x28>
    be28:	add	w5, w3, w6
    be2c:	cmp	w5, #0x7ff
    be30:	b.hi	be3c <grub_get_num_of_utf8_bytes+0x5c>  // b.pmore
    be34:	add	x0, x0, #0x1
    be38:	b	be08 <grub_get_num_of_utf8_bytes+0x28>
    be3c:	cmp	w3, w7
    be40:	cinc	x0, x0, hi  // hi = pmore
    be44:	add	x0, x0, #0x3
    be48:	b	be08 <grub_get_num_of_utf8_bytes+0x28>
    be4c:	mov	x0, x1
    be50:	ret

000000000000be54 <grub_ucs4_to_utf8_alloc>:
    be54:	stp	x29, x30, [sp, #-48]!
    be58:	mov	x29, sp
    be5c:	stp	x19, x20, [sp, #16]
    be60:	stp	x21, x22, [sp, #32]
    be64:	mov	x21, x0
    be68:	mov	x22, x1
    be6c:	bl	bde0 <grub_get_num_of_utf8_bytes>
    be70:	add	x20, x0, #0x1
    be74:	mov	x0, x20
    be78:	bl	0 <grub_malloc>
    be7c:	mov	x19, x0
    be80:	cbz	x0, be98 <grub_ucs4_to_utf8_alloc+0x44>
    be84:	mov	x3, x20
    be88:	mov	x2, x0
    be8c:	mov	x1, x22
    be90:	mov	x0, x21
    be94:	bl	bd20 <grub_ucs4_to_utf8>
    be98:	mov	x0, x19
    be9c:	ldp	x19, x20, [sp, #16]
    bea0:	ldp	x21, x22, [sp, #32]
    bea4:	ldp	x29, x30, [sp], #48
    bea8:	ret

000000000000beac <grub_is_valid_utf8>:
    beac:	mov	x4, x0
    beb0:	cbz	x1, bf30 <grub_is_valid_utf8+0x84>
    beb4:	mov	w3, #0x0                   	// #0
    beb8:	mov	w0, #0x0                   	// #0
    bebc:	mov	w6, #0x10ffff              	// #1114111
    bec0:	b	bf64 <grub_is_valid_utf8+0xb8>
    bec4:	tbz	w2, #7, bef8 <grub_is_valid_utf8+0x4c>
    bec8:	and	w3, w2, #0xe0
    becc:	cmp	w3, #0xc0
    bed0:	b.eq	bf08 <grub_is_valid_utf8+0x5c>  // b.none
    bed4:	and	w3, w2, #0xf0
    bed8:	cmp	w3, #0xe0
    bedc:	b.eq	bf1c <grub_is_valid_utf8+0x70>  // b.none
    bee0:	and	w3, w2, #0xf8
    bee4:	cmp	w3, #0xf0
    bee8:	b.ne	bf3c <grub_is_valid_utf8+0x90>  // b.any
    beec:	and	w3, w2, #0x7
    bef0:	mov	w0, #0x3                   	// #3
    bef4:	b	bf60 <grub_is_valid_utf8+0xb4>
    bef8:	mov	w3, w2
    befc:	cbnz	w2, bf60 <grub_is_valid_utf8+0xb4>
    bf00:	mov	w0, #0x1                   	// #1
    bf04:	b	bf3c <grub_is_valid_utf8+0x90>
    bf08:	and	w3, w2, #0x1f
    bf0c:	cmp	w3, #0x1
    bf10:	b.ls	bf3c <grub_is_valid_utf8+0x90>  // b.plast
    bf14:	mov	w0, #0x1                   	// #1
    bf18:	b	bf60 <grub_is_valid_utf8+0xb4>
    bf1c:	and	w3, w2, #0xf
    bf20:	mov	w0, #0x2                   	// #2
    bf24:	b	bf60 <grub_is_valid_utf8+0xb4>
    bf28:	mov	w0, #0x1                   	// #1
    bf2c:	b	bf3c <grub_is_valid_utf8+0x90>
    bf30:	mov	w0, #0x1                   	// #1
    bf34:	b	bf3c <grub_is_valid_utf8+0x90>
    bf38:	mov	w0, #0x0                   	// #0
    bf3c:	ret
    bf40:	mov	w0, #0x0                   	// #0
    bf44:	b	bf3c <grub_is_valid_utf8+0x90>
    bf48:	mov	w0, #0x1                   	// #1
    bf4c:	b	bf3c <grub_is_valid_utf8+0x90>
    bf50:	cbnz	w0, bf60 <grub_is_valid_utf8+0xb4>
    bf54:	cbz	w3, bf48 <grub_is_valid_utf8+0x9c>
    bf58:	cmp	w3, w6
    bf5c:	b.hi	bf3c <grub_is_valid_utf8+0x90>  // b.pmore
    bf60:	cbz	x1, bf28 <grub_is_valid_utf8+0x7c>
    bf64:	cmn	x1, #0x1
    bf68:	cset	x2, ne  // ne = any
    bf6c:	sub	x1, x1, x2
    bf70:	ldrb	w2, [x4], #1
    bf74:	cbz	w0, bec4 <grub_is_valid_utf8+0x18>
    bf78:	and	w5, w2, #0xc0
    bf7c:	cmp	w5, #0x80
    bf80:	b.ne	bf38 <grub_is_valid_utf8+0x8c>  // b.any
    bf84:	bfi	w2, w3, #6, #26
    bf88:	mov	w3, w2
    bf8c:	sub	w0, w0, #0x1
    bf90:	cmp	w2, #0x1f
    bf94:	ccmp	w0, #0x1, #0x0, ls  // ls = plast
    bf98:	b.eq	bf40 <grub_is_valid_utf8+0x94>  // b.none
    bf9c:	cmp	w2, #0xf
    bfa0:	ccmp	w0, #0x2, #0x0, ls  // ls = plast
    bfa4:	b.ne	bf50 <grub_is_valid_utf8+0xa4>  // b.any
    bfa8:	mov	w0, #0x0                   	// #0
    bfac:	b	bf3c <grub_is_valid_utf8+0x90>

000000000000bfb0 <grub_utf8_to_ucs4>:
    bfb0:	cbz	x4, c0d4 <grub_utf8_to_ucs4+0x124>
    bfb4:	str	x2, [x4]
    bfb8:	cmp	x1, #0x0
    bfbc:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    bfc0:	b.eq	c0c4 <grub_utf8_to_ucs4+0x114>  // b.none
    bfc4:	mov	x5, x0
    bfc8:	mov	w9, #0x0                   	// #0
    bfcc:	mov	w8, #0x0                   	// #0
    bfd0:	mov	w11, #0x3f                  	// #63
    bfd4:	b	c02c <grub_utf8_to_ucs4+0x7c>
    bfd8:	mov	w9, w7
    bfdc:	tbz	w7, #7, c07c <grub_utf8_to_ucs4+0xcc>
    bfe0:	and	w2, w7, #0xe0
    bfe4:	cmp	w2, #0xc0
    bfe8:	b.eq	c088 <grub_utf8_to_ucs4+0xd8>  // b.none
    bfec:	and	w2, w7, #0xf0
    bff0:	and	w9, w7, #0xf
    bff4:	mov	w8, #0x2                   	// #2
    bff8:	cmp	w2, #0xe0
    bffc:	b.eq	c098 <grub_utf8_to_ucs4+0xe8>  // b.none
    c000:	and	w8, w7, #0xf8
    c004:	mov	x2, x6
    c008:	cmp	w8, #0xf0
    c00c:	b.eq	c0a0 <grub_utf8_to_ucs4+0xf0>  // b.none
    c010:	mov	w9, w11
    c014:	str	w9, [x5], #4
    c018:	sub	x1, x1, #0x1
    c01c:	mov	w8, #0x0                   	// #0
    c020:	cmp	x3, #0x0
    c024:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    c028:	b.eq	c0b0 <grub_utf8_to_ucs4+0x100>  // b.none
    c02c:	cmn	x3, #0x1
    c030:	cset	x6, ne  // ne = any
    c034:	sub	x3, x3, x6
    c038:	mov	x6, x2
    c03c:	ldrb	w7, [x6], #1
    c040:	cbz	w8, bfd8 <grub_utf8_to_ucs4+0x28>
    c044:	and	w10, w7, #0xc0
    c048:	cmp	w10, #0x80
    c04c:	b.ne	c010 <grub_utf8_to_ucs4+0x60>  // b.any
    c050:	bfi	w7, w9, #6, #26
    c054:	mov	w9, w7
    c058:	sub	w8, w8, #0x1
    c05c:	cmp	w7, #0x1f
    c060:	ccmp	w8, #0x1, #0x0, ls  // ls = plast
    c064:	b.eq	c010 <grub_utf8_to_ucs4+0x60>  // b.none
    c068:	cmp	w7, #0xf
    c06c:	ccmp	w8, #0x2, #0x0, ls  // ls = plast
    c070:	b.eq	c010 <grub_utf8_to_ucs4+0x60>  // b.none
    c074:	mov	x2, x6
    c078:	cbnz	w8, c020 <grub_utf8_to_ucs4+0x70>
    c07c:	cbz	w9, c0ac <grub_utf8_to_ucs4+0xfc>
    c080:	mov	x2, x6
    c084:	b	c014 <grub_utf8_to_ucs4+0x64>
    c088:	and	w9, w7, #0x1f
    c08c:	mov	w8, #0x1                   	// #1
    c090:	cmp	w9, #0x1
    c094:	b.ls	c0cc <grub_utf8_to_ucs4+0x11c>  // b.plast
    c098:	mov	x2, x6
    c09c:	b	c020 <grub_utf8_to_ucs4+0x70>
    c0a0:	and	w9, w7, #0x7
    c0a4:	mov	w8, #0x3                   	// #3
    c0a8:	b	c098 <grub_utf8_to_ucs4+0xe8>
    c0ac:	mov	x2, x6
    c0b0:	cbz	x4, c0b8 <grub_utf8_to_ucs4+0x108>
    c0b4:	str	x2, [x4]
    c0b8:	sub	x5, x5, x0
    c0bc:	asr	x0, x5, #2
    c0c0:	ret
    c0c4:	mov	x5, x0
    c0c8:	b	c0b4 <grub_utf8_to_ucs4+0x104>
    c0cc:	mov	x2, x6
    c0d0:	b	c010 <grub_utf8_to_ucs4+0x60>
    c0d4:	cmp	x1, #0x0
    c0d8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
    c0dc:	mov	x5, x0
    c0e0:	b.ne	bfc4 <grub_utf8_to_ucs4+0x14>  // b.any
    c0e4:	b	c0b8 <grub_utf8_to_ucs4+0x108>

000000000000c0e8 <grub_utf8_to_ucs4_alloc>:
    c0e8:	stp	x29, x30, [sp, #-48]!
    c0ec:	mov	x29, sp
    c0f0:	stp	x19, x20, [sp, #16]
    c0f4:	stp	x21, x22, [sp, #32]
    c0f8:	mov	x22, x0
    c0fc:	mov	x20, x1
    c100:	mov	x21, x2
    c104:	bl	0 <grub_strlen>
    c108:	mov	x19, x0
    c10c:	lsl	x0, x0, #2
    c110:	bl	0 <grub_malloc>
    c114:	str	x0, [x20]
    c118:	cbz	x0, c150 <grub_utf8_to_ucs4_alloc+0x68>
    c11c:	mov	x4, #0x0                   	// #0
    c120:	mov	x3, #0xffffffffffffffff    	// #-1
    c124:	mov	x2, x22
    c128:	mov	x1, x19
    c12c:	bl	bfb0 <grub_utf8_to_ucs4>
    c130:	cbz	x21, c140 <grub_utf8_to_ucs4_alloc+0x58>
    c134:	ldr	x1, [x20]
    c138:	add	x1, x1, x0, lsl #2
    c13c:	str	x1, [x21]
    c140:	ldp	x19, x20, [sp, #16]
    c144:	ldp	x21, x22, [sp, #32]
    c148:	ldp	x29, x30, [sp], #48
    c14c:	ret
    c150:	mov	x0, #0xffffffffffffffff    	// #-1
    c154:	b	c140 <grub_utf8_to_ucs4_alloc+0x58>

000000000000c158 <grub_unicode_get_comb_type>:
    c158:	stp	x29, x30, [sp, #-32]!
    c15c:	mov	x29, sp
    c160:	str	x19, [sp, #16]
    c164:	mov	w19, w0
    c168:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c16c:	ldr	x0, [x0]
    c170:	ldr	x0, [x0, #16]
    c174:	cbz	x0, c1b8 <grub_unicode_get_comb_type+0x60>
    c178:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c17c:	ldr	x0, [x0]
    c180:	ldr	x0, [x0, #16]
    c184:	cmp	x0, #0x0
    c188:	mov	w1, #0x1ffff               	// #131071
    c18c:	ccmp	w19, w1, #0x2, ne  // ne = any
    c190:	b.ls	c288 <grub_unicode_get_comb_type+0x130>  // b.plast
    c194:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c198:	ldr	x0, [x0]
    c19c:	ldrh	w3, [x0, #2]
    c1a0:	ubfx	x3, x3, #5, #9
    c1a4:	mov	w0, #0x0                   	// #0
    c1a8:	cbz	w3, c2dc <grub_unicode_get_comb_type+0x184>
    c1ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c1b0:	ldr	x2, [x0]
    c1b4:	b	c2a0 <grub_unicode_get_comb_type+0x148>
    c1b8:	mov	x0, #0x20000               	// #131072
    c1bc:	bl	0 <grub_zalloc>
    c1c0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    c1c4:	ldr	x1, [x1]
    c1c8:	str	x0, [x1, #16]
    c1cc:	cbz	x0, c278 <grub_unicode_get_comb_type+0x120>
    c1d0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    c1d4:	ldr	x1, [x1]
    c1d8:	ldrh	w1, [x1, #2]
    c1dc:	tst	x1, #0x3fe0
    c1e0:	b.eq	c2e8 <grub_unicode_get_comb_type+0x190>  // b.none
    c1e4:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    c1e8:	ldr	x3, [x1]
    c1ec:	mov	w5, #0x1ffff               	// #131071
    c1f0:	ldrb	w2, [x3]
    c1f4:	ldrb	w1, [x3, #1]
    c1f8:	orr	x2, x2, x1, lsl #8
    c1fc:	ldrb	w1, [x3, #2]
    c200:	ubfiz	x1, x1, #16, #5
    c204:	orr	x1, x1, x2
    c208:	mov	w4, w1
    c20c:	ldrh	w2, [x3, #2]
    c210:	ubfx	x2, x2, #5, #9
    c214:	add	w2, w2, w1
    c218:	cmp	w1, w2
    c21c:	ccmp	w1, w5, #0x2, cc  // cc = lo, ul, last
    c220:	b.hi	c264 <grub_unicode_get_comb_type+0x10c>  // b.pmore
    c224:	ldrh	w1, [x3, #4]
    c228:	ubfx	x1, x1, #3, #8
    c22c:	strb	w1, [x0, w4, uxtw]
    c230:	add	w4, w4, #0x1
    c234:	ldrb	w1, [x3]
    c238:	ldrb	w2, [x3, #1]
    c23c:	orr	x2, x1, x2, lsl #8
    c240:	ldrb	w1, [x3, #2]
    c244:	ubfiz	x1, x1, #16, #5
    c248:	orr	x2, x1, x2
    c24c:	ldrh	w1, [x3, #2]
    c250:	ubfx	x1, x1, #5, #9
    c254:	add	w1, w1, w2
    c258:	cmp	w1, w4
    c25c:	ccmp	w4, w5, #0x2, hi  // hi = pmore
    c260:	b.ls	c224 <grub_unicode_get_comb_type+0xcc>  // b.plast
    c264:	add	x3, x3, #0x6
    c268:	ldrh	w1, [x3, #2]
    c26c:	tst	x1, #0x3fe0
    c270:	b.ne	c1f0 <grub_unicode_get_comb_type+0x98>  // b.any
    c274:	b	c178 <grub_unicode_get_comb_type+0x20>
    c278:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c27c:	ldr	x0, [x0]
    c280:	str	wzr, [x0]
    c284:	b	c194 <grub_unicode_get_comb_type+0x3c>
    c288:	ldrb	w0, [x0, w19, uxtw]
    c28c:	b	c2dc <grub_unicode_get_comb_type+0x184>
    c290:	add	x2, x2, #0x6
    c294:	ldrh	w3, [x2, #2]
    c298:	ubfx	x3, x3, #5, #9
    c29c:	cbz	w3, c2d8 <grub_unicode_get_comb_type+0x180>
    c2a0:	ldrb	w0, [x2]
    c2a4:	ldrb	w1, [x2, #1]
    c2a8:	orr	x0, x0, x1, lsl #8
    c2ac:	ldrb	w1, [x2, #2]
    c2b0:	ubfiz	x1, x1, #16, #5
    c2b4:	orr	x1, x1, x0
    c2b8:	cmp	w1, w19
    c2bc:	b.hi	c290 <grub_unicode_get_comb_type+0x138>  // b.pmore
    c2c0:	add	w1, w3, w1
    c2c4:	cmp	w1, w19
    c2c8:	b.ls	c290 <grub_unicode_get_comb_type+0x138>  // b.plast
    c2cc:	ldrh	w0, [x2, #4]
    c2d0:	ubfx	x0, x0, #3, #8
    c2d4:	b	c2dc <grub_unicode_get_comb_type+0x184>
    c2d8:	mov	w0, #0x0                   	// #0
    c2dc:	ldr	x19, [sp, #16]
    c2e0:	ldp	x29, x30, [sp], #32
    c2e4:	ret
    c2e8:	mov	w1, #0x1ffff               	// #131071
    c2ec:	cmp	w19, w1
    c2f0:	b.ls	c288 <grub_unicode_get_comb_type+0x130>  // b.plast
    c2f4:	mov	w0, #0x0                   	// #0
    c2f8:	b	c2dc <grub_unicode_get_comb_type+0x184>
    c2fc:	nop
	...

000000000000c318 <grub_unicode_aglomerate_comb>:
    c318:	stp	x29, x30, [sp, #-128]!
    c31c:	mov	x29, sp
    c320:	stp	x19, x20, [sp, #16]
    c324:	stp	x21, x22, [sp, #32]
    c328:	stp	x27, x28, [sp, #80]
    c32c:	mov	x27, x0
    c330:	mov	x22, x1
    c334:	mov	x20, x2
    c338:	mov	x2, #0x20                  	// #32
    c33c:	mov	w1, #0x0                   	// #0
    c340:	mov	x0, x20
    c344:	bl	0 <grub_memset>
    c348:	cbz	x22, c624 <grub_unicode_aglomerate_comb+0x30c>
    c34c:	stp	x23, x24, [sp, #48]
    c350:	stp	x25, x26, [sp, #64]
    c354:	ldr	w0, [x27]
    c358:	cmp	w0, #0x7f
    c35c:	ccmp	w0, #0x1f, #0x0, ne  // ne = any
    c360:	b.ls	c3a0 <grub_unicode_aglomerate_comb+0x88>  // b.plast
    c364:	add	x22, x27, x22, lsl #2
    c368:	cmp	x27, x22
    c36c:	b.cs	c390 <grub_unicode_aglomerate_comb+0x78>  // b.hs, b.nlast
    c370:	mov	x19, x27
    c374:	str	wzr, [sp, #104]
    c378:	mov	w23, #0x0                   	// #0
    c37c:	mov	w24, #0xffff0200            	// #-65024
    c380:	mov	w25, #0xff00                	// #65280
    c384:	movk	w25, #0xfff1, lsl #16
    c388:	mov	w28, #0x1                   	// #1
    c38c:	b	c404 <grub_unicode_aglomerate_comb+0xec>
    c390:	mov	x19, x27
    c394:	ldp	x23, x24, [sp, #48]
    c398:	ldp	x25, x26, [sp, #64]
    c39c:	b	c608 <grub_unicode_aglomerate_comb+0x2f0>
    c3a0:	ldr	w1, [x20]
    c3a4:	bfxil	w1, w0, #0, #23
    c3a8:	str	w1, [x20]
    c3ac:	ubfx	x1, x1, #16, #7
    c3b0:	strh	w1, [x20, #2]
    c3b4:	ldrb	w0, [x20, #4]
    c3b8:	and	w0, w0, #0xffffffe0
    c3bc:	strb	w0, [x20, #4]
    c3c0:	ldrh	w0, [x20, #6]
    c3c4:	and	w0, w0, #0xfffff807
    c3c8:	strh	w0, [x20, #6]
    c3cc:	mov	w0, #0x1                   	// #1
    c3d0:	strb	w0, [x20, #8]
    c3d4:	mov	x0, #0x1                   	// #1
    c3d8:	ldp	x23, x24, [sp, #48]
    c3dc:	ldp	x25, x26, [sp, #64]
    c3e0:	b	c610 <grub_unicode_aglomerate_comb+0x2f8>
    c3e4:	cbz	w23, c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c3e8:	add	w0, w0, #0x201
    c3ec:	ldrh	w1, [x20, #2]
    c3f0:	bfi	w1, w0, #7, #9
    c3f4:	strh	w1, [x20, #2]
    c3f8:	add	x19, x19, #0x4
    c3fc:	cmp	x19, x22
    c400:	b.cs	c600 <grub_unicode_aglomerate_comb+0x2e8>  // b.hs, b.nlast
    c404:	ldr	w0, [x19]
    c408:	add	w1, w0, w24
    c40c:	cmp	w1, #0xf
    c410:	b.ls	c3e4 <grub_unicode_aglomerate_comb+0xcc>  // b.plast
    c414:	add	w1, w0, w25
    c418:	cmp	w1, #0xef
    c41c:	b.hi	c438 <grub_unicode_aglomerate_comb+0x120>  // b.pmore
    c420:	cbz	w23, c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c424:	sub	w0, w0, #0xef
    c428:	ldrh	w1, [x20, #2]
    c42c:	bfi	w1, w0, #7, #9
    c430:	strh	w1, [x20, #2]
    c434:	b	c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c438:	bl	c158 <grub_unicode_get_comb_type>
    c43c:	mov	w21, w0
    c440:	cbz	w0, c5ac <grub_unicode_aglomerate_comb+0x294>
    c444:	cbz	w23, c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c448:	sub	w0, w0, #0xfd
    c44c:	cmp	w0, #0x2
    c450:	b.hi	c460 <grub_unicode_aglomerate_comb+0x148>  // b.pmore
    c454:	ldrh	w0, [x20, #6]
    c458:	ubfx	x0, x0, #3, #8
    c45c:	str	x0, [sp, #104]
    c460:	ldrh	w1, [x20, #6]
    c464:	ubfx	x1, x1, #3, #8
    c468:	add	x26, x20, #0x18
    c46c:	cmp	w1, #0x1
    c470:	b.ls	c4a8 <grub_unicode_aglomerate_comb+0x190>  // b.plast
    c474:	cmp	w1, #0x2
    c478:	b.ls	c4c8 <grub_unicode_aglomerate_comb+0x1b0>  // b.plast
    c47c:	add	w1, w1, #0x1
    c480:	sbfiz	x1, x1, #2, #32
    c484:	ldr	x0, [x20, #24]
    c488:	bl	0 <grub_realloc>
    c48c:	mov	x26, x0
    c490:	cbnz	x0, c4a4 <grub_unicode_aglomerate_comb+0x18c>
    c494:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c498:	ldr	x0, [x0]
    c49c:	str	wzr, [x0]
    c4a0:	b	c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c4a4:	str	x0, [x20, #24]
    c4a8:	ldrh	w4, [x20, #6]
    c4ac:	ubfx	x4, x4, #3, #8
    c4b0:	ldr	w2, [sp, #104]
    c4b4:	cmp	w2, w4
    c4b8:	b.cs	c5a4 <grub_unicode_aglomerate_comb+0x28c>  // b.hs, b.nlast
    c4bc:	add	x3, x26, w2, uxtb #2
    c4c0:	sub	w5, w21, #0x1b
    c4c4:	b	c50c <grub_unicode_aglomerate_comb+0x1f4>
    c4c8:	mov	x0, #0xc                   	// #12
    c4cc:	bl	0 <grub_malloc>
    c4d0:	mov	x26, x0
    c4d4:	cbnz	x0, c4e8 <grub_unicode_aglomerate_comb+0x1d0>
    c4d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c4dc:	ldr	x0, [x0]
    c4e0:	str	wzr, [x0]
    c4e4:	b	c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c4e8:	mov	x2, #0x8                   	// #8
    c4ec:	add	x1, x20, #0x18
    c4f0:	bl	0 <grub_memmove>
    c4f4:	str	x26, [x20, #24]
    c4f8:	b	c4a8 <grub_unicode_aglomerate_comb+0x190>
    c4fc:	add	w2, w2, #0x1
    c500:	add	x3, x3, #0x4
    c504:	cmp	w2, w4
    c508:	b.eq	c540 <grub_unicode_aglomerate_comb+0x228>  // b.none
    c50c:	ldrh	w0, [x3, #2]
    c510:	ubfx	x0, x0, #5, #8
    c514:	cmp	w0, #0x21
    c518:	ccmp	w5, #0x5, #0x2, eq  // eq = none
    c51c:	b.ls	c4fc <grub_unicode_aglomerate_comb+0x1e4>  // b.plast
    c520:	sub	w1, w0, #0x1b
    c524:	and	w1, w1, #0xff
    c528:	cmp	w21, #0x21
    c52c:	ccmp	w1, #0x5, #0x2, eq  // eq = none
    c530:	b.ls	c544 <grub_unicode_aglomerate_comb+0x22c>  // b.plast
    c534:	cmp	w0, w21
    c538:	b.ls	c4fc <grub_unicode_aglomerate_comb+0x1e4>  // b.plast
    c53c:	b	c544 <grub_unicode_aglomerate_comb+0x22c>
    c540:	mov	w2, w4
    c544:	ubfiz	x1, x2, #2, #32
    c548:	add	x0, x1, #0x4
    c54c:	str	x1, [sp, #120]
    c550:	add	x1, x26, x1
    c554:	sub	w2, w4, w2
    c558:	lsl	x2, x2, #2
    c55c:	str	x1, [sp, #112]
    c560:	add	x0, x26, x0
    c564:	bl	0 <grub_memmove>
    c568:	ldr	x2, [sp, #120]
    c56c:	ldr	w0, [x26, x2]
    c570:	ldr	w1, [x19]
    c574:	bfxil	w0, w1, #0, #21
    c578:	str	w0, [x26, x2]
    c57c:	ldr	x1, [sp, #112]
    c580:	ldrh	w0, [x1, #2]
    c584:	bfi	w0, w21, #5, #8
    c588:	strh	w0, [x1, #2]
    c58c:	ldrh	w0, [x20, #6]
    c590:	ubfx	x1, x0, #3, #8
    c594:	add	w1, w1, #0x1
    c598:	bfi	w0, w1, #3, #8
    c59c:	strh	w0, [x20, #6]
    c5a0:	b	c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c5a4:	ldr	w2, [sp, #104]
    c5a8:	b	c544 <grub_unicode_aglomerate_comb+0x22c>
    c5ac:	cbnz	w23, c5ec <grub_unicode_aglomerate_comb+0x2d4>
    c5b0:	ldr	w0, [x20]
    c5b4:	ldr	w1, [x19]
    c5b8:	bfxil	w0, w1, #0, #23
    c5bc:	str	w0, [x20]
    c5c0:	ubfx	x0, x0, #16, #7
    c5c4:	strh	w0, [x20, #2]
    c5c8:	ldrb	w0, [x20, #4]
    c5cc:	and	w0, w0, #0xffffffe0
    c5d0:	strb	w0, [x20, #4]
    c5d4:	ldrh	w0, [x20, #6]
    c5d8:	and	w0, w0, #0xfffff807
    c5dc:	strh	w0, [x20, #6]
    c5e0:	strb	w28, [x20, #8]
    c5e4:	mov	w23, #0x1                   	// #1
    c5e8:	b	c3f8 <grub_unicode_aglomerate_comb+0xe0>
    c5ec:	sub	x0, x19, x27
    c5f0:	asr	x0, x0, #2
    c5f4:	ldp	x23, x24, [sp, #48]
    c5f8:	ldp	x25, x26, [sp, #64]
    c5fc:	b	c610 <grub_unicode_aglomerate_comb+0x2f8>
    c600:	ldp	x23, x24, [sp, #48]
    c604:	ldp	x25, x26, [sp, #64]
    c608:	sub	x0, x19, x27
    c60c:	asr	x0, x0, #2
    c610:	ldp	x19, x20, [sp, #16]
    c614:	ldp	x21, x22, [sp, #32]
    c618:	ldp	x27, x28, [sp, #80]
    c61c:	ldp	x29, x30, [sp], #128
    c620:	ret
    c624:	mov	x19, x27
    c628:	b	c608 <grub_unicode_aglomerate_comb+0x2f0>
    c62c:	nop
	...
    c638:	sub	sp, sp, #0x310
    c63c:	stp	x29, x30, [sp]
    c640:	mov	x29, sp
    c644:	stp	x19, x20, [sp, #16]
    c648:	stp	x21, x22, [sp, #32]
    c64c:	stp	x23, x24, [sp, #48]
    c650:	stp	x27, x28, [sp, #80]
    c654:	mov	x23, x0
    c658:	mov	x22, x1
    c65c:	str	x2, [sp, #208]
    c660:	str	x3, [sp, #136]
    c664:	str	x4, [sp, #192]
    c668:	str	x5, [sp, #216]
    c66c:	str	x6, [sp, #200]
    c670:	str	w7, [sp, #184]
    c674:	ldr	x27, [sp, #784]
    c678:	lsl	x0, x1, #5
    c67c:	bl	0 <grub_malloc>
    c680:	cbz	x0, da54 <grub_unicode_aglomerate_comb+0x173c>
    c684:	mov	x28, x0
    c688:	cbz	x22, db00 <grub_unicode_aglomerate_comb+0x17e8>
    c68c:	stp	x25, x26, [sp, #64]
    c690:	mov	w20, #0x0                   	// #0
    c694:	mov	x1, #0x0                   	// #0
    c698:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
    c69c:	mov	w25, #0x1ffff               	// #131071
    c6a0:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    c6a4:	b	c734 <grub_unicode_aglomerate_comb+0x41c>
    c6a8:	bl	b9e8 <grub_context_fini+0x28>
    c6ac:	b	c744 <grub_unicode_aglomerate_comb+0x42c>
    c6b0:	mov	w0, #0x0                   	// #0
    c6b4:	b	c774 <grub_unicode_aglomerate_comb+0x45c>
    c6b8:	ldrb	w0, [x0, w19, uxtw]
    c6bc:	and	w0, w0, #0x7f
    c6c0:	b	c714 <grub_unicode_aglomerate_comb+0x3fc>
    c6c4:	add	x1, x1, #0x6
    c6c8:	ldrh	w2, [x1, #2]
    c6cc:	ubfx	x2, x2, #5, #9
    c6d0:	cbz	w2, c770 <grub_unicode_aglomerate_comb+0x458>
    c6d4:	ldrb	w3, [x1]
    c6d8:	ldrb	w0, [x1, #1]
    c6dc:	orr	x3, x3, x0, lsl #8
    c6e0:	ldrb	w0, [x1, #2]
    c6e4:	ubfiz	x0, x0, #16, #5
    c6e8:	orr	x0, x0, x3
    c6ec:	cmp	w19, w0
    c6f0:	b.cc	c6c4 <grub_unicode_aglomerate_comb+0x3ac>  // b.lo, b.ul, b.last
    c6f4:	add	w0, w2, w0
    c6f8:	cmp	w19, w0
    c6fc:	b.cs	c6c4 <grub_unicode_aglomerate_comb+0x3ac>  // b.hs, b.nlast
    c700:	ldrb	w0, [x1, #3]
    c704:	ubfx	x2, x0, #6, #2
    c708:	ldrb	w0, [x1, #4]
    c70c:	ubfiz	x0, x0, #2, #3
    c710:	orr	w0, w0, w2
    c714:	sub	w1, w0, #0x3
    c718:	cmp	w0, #0x0
    c71c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    c720:	b.ls	c774 <grub_unicode_aglomerate_comb+0x45c>  // b.plast
    c724:	add	w20, w20, #0x1
    c728:	mov	w1, w20
    c72c:	cmp	x22, w20, uxtw
    c730:	b.ls	c774 <grub_unicode_aglomerate_comb+0x45c>  // b.plast
    c734:	ldr	w19, [x23, x1, lsl #2]
    c738:	ldr	x0, [x21]
    c73c:	ldr	x0, [x0]
    c740:	cbz	x0, c6a8 <grub_unicode_aglomerate_comb+0x390>
    c744:	ldr	x0, [x21]
    c748:	ldr	x0, [x0]
    c74c:	cmp	x0, #0x0
    c750:	ccmp	w19, w25, #0x2, ne  // ne = any
    c754:	b.ls	c6b8 <grub_unicode_aglomerate_comb+0x3a0>  // b.plast
    c758:	ldr	x0, [x24]
    c75c:	ldrh	w2, [x0, #2]
    c760:	ubfx	x2, x2, #5, #9
    c764:	cbz	w2, c6b0 <grub_unicode_aglomerate_comb+0x398>
    c768:	ldr	x1, [x24]
    c76c:	b	c6d4 <grub_unicode_aglomerate_comb+0x3bc>
    c770:	mov	w0, #0x0                   	// #0
    c774:	sub	w0, w0, #0x3
    c778:	cmp	w0, #0x1
    c77c:	cset	w0, ls  // ls = plast
    c780:	str	w0, [sp, #160]
    c784:	add	x22, x23, x22, lsl #2
    c788:	cmp	x23, x22
    c78c:	b.cs	dafc <grub_unicode_aglomerate_comb+0x17e4>  // b.hs, b.nlast
    c790:	mov	x21, x23
    c794:	str	w0, [sp, #104]
    c798:	str	wzr, [sp, #112]
    c79c:	str	wzr, [sp, #120]
    c7a0:	mov	w1, #0x0                   	// #0
    c7a4:	mov	w19, #0x0                   	// #0
    c7a8:	str	wzr, [sp, #128]
    c7ac:	mov	w0, #0x0                   	// #0
    c7b0:	str	wzr, [sp, #132]
    c7b4:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
    c7b8:	str	x23, [sp, #152]
    c7bc:	mov	w23, w1
    c7c0:	str	x27, [sp, #784]
    c7c4:	mov	w27, w0
    c7c8:	b	c944 <grub_unicode_aglomerate_comb+0x62c>
    c7cc:	ldr	w0, [sp, #112]
    c7d0:	cbz	w0, c7ec <grub_unicode_aglomerate_comb+0x4d4>
    c7d4:	sub	w0, w19, #0x1
    c7d8:	add	x0, x28, x0, lsl #5
    c7dc:	ldrb	w1, [x0, #4]
    c7e0:	mov	w2, #0x14                  	// #20
    c7e4:	orr	w1, w1, w2
    c7e8:	strb	w1, [x0, #4]
    c7ec:	add	x21, x21, #0x4
    c7f0:	str	wzr, [sp, #112]
    c7f4:	mov	w0, #0x2                   	// #2
    c7f8:	str	w0, [sp, #120]
    c7fc:	b	c93c <grub_unicode_aglomerate_comb+0x624>
    c800:	ldr	w0, [sp, #112]
    c804:	cbz	w0, c828 <grub_unicode_aglomerate_comb+0x510>
    c808:	sub	w2, w19, #0x1
    c80c:	add	x2, x28, x2, lsl #5
    c810:	ldrb	w0, [x2, #4]
    c814:	mov	w1, #0x1b                  	// #27
    c818:	and	w1, w1, w0
    c81c:	orr	w1, w1, #0x10
    c820:	bfxil	w0, w1, #0, #5
    c824:	strb	w0, [x2, #4]
    c828:	add	x21, x21, #0x4
    c82c:	str	wzr, [sp, #112]
    c830:	mov	w0, #0x1                   	// #1
    c834:	str	w0, [sp, #120]
    c838:	b	c93c <grub_unicode_aglomerate_comb+0x624>
    c83c:	bl	b9e8 <grub_context_fini+0x28>
    c840:	b	c9b4 <grub_unicode_aglomerate_comb+0x69c>
    c844:	ldrb	w0, [x0, w24, uxtw]
    c848:	and	w0, w0, #0x7f
    c84c:	b	c8a0 <grub_unicode_aglomerate_comb+0x588>
    c850:	add	x2, x2, #0x6
    c854:	ldrh	w0, [x2, #2]
    c858:	ubfx	x0, x0, #5, #9
    c85c:	cbz	w0, c8c4 <grub_unicode_aglomerate_comb+0x5ac>
    c860:	ldrb	w3, [x2]
    c864:	ldrb	w1, [x2, #1]
    c868:	orr	x3, x3, x1, lsl #8
    c86c:	ldrb	w1, [x2, #2]
    c870:	ubfiz	x1, x1, #16, #5
    c874:	orr	x1, x1, x3
    c878:	cmp	w20, w1
    c87c:	b.cc	c850 <grub_unicode_aglomerate_comb+0x538>  // b.lo, b.ul, b.last
    c880:	add	w0, w0, w1
    c884:	cmp	w20, w0
    c888:	b.cs	c850 <grub_unicode_aglomerate_comb+0x538>  // b.hs, b.nlast
    c88c:	ldrb	w0, [x2, #3]
    c890:	ubfx	x1, x0, #6, #2
    c894:	ldrb	w0, [x2, #4]
    c898:	ubfiz	x0, x0, #2, #3
    c89c:	orr	w0, w0, w1
    c8a0:	cmp	w0, #0x5
    c8a4:	b.eq	ca1c <grub_unicode_aglomerate_comb+0x704>  // b.none
    c8a8:	b.hi	c924 <grub_unicode_aglomerate_comb+0x60c>  // b.pmore
    c8ac:	cmp	w0, #0x2
    c8b0:	b.eq	cacc <grub_unicode_aglomerate_comb+0x7b4>  // b.none
    c8b4:	b.ls	c8f8 <grub_unicode_aglomerate_comb+0x5e0>  // b.plast
    c8b8:	sub	w1, w0, #0x3
    c8bc:	cmp	w1, #0x1
    c8c0:	csinc	w23, w23, wzr, hi  // hi = pmore
    c8c4:	ldr	w1, [sp, #120]
    c8c8:	cmp	w1, #0x2
    c8cc:	b.eq	cb58 <grub_unicode_aglomerate_comb+0x840>  // b.none
    c8d0:	ldr	w1, [sp, #120]
    c8d4:	cmp	w1, #0x1
    c8d8:	b.ne	cb68 <grub_unicode_aglomerate_comb+0x850>  // b.any
    c8dc:	ldrb	w1, [x25, #4]
    c8e0:	mov	w2, #0x1d                  	// #29
    c8e4:	and	w2, w2, w1
    c8e8:	orr	w2, w2, #0x8
    c8ec:	bfxil	w1, w2, #0, #5
    c8f0:	strb	w1, [x25, #4]
    c8f4:	b	cb68 <grub_unicode_aglomerate_comb+0x850>
    c8f8:	cmp	w0, #0x1
    c8fc:	b.ne	c8c4 <grub_unicode_aglomerate_comb+0x5ac>  // b.any
    c900:	ldr	w0, [sp, #104]
    c904:	and	w0, w0, #0xfffffffe
    c908:	add	w0, w0, #0x2
    c90c:	cmp	w0, #0x3d
    c910:	b.ls	caa4 <grub_unicode_aglomerate_comb+0x78c>  // b.plast
    c914:	ldr	w0, [sp, #128]
    c918:	add	w0, w0, #0x1
    c91c:	str	w0, [sp, #128]
    c920:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    c924:	cmp	w0, #0x7
    c928:	b.eq	cb1c <grub_unicode_aglomerate_comb+0x804>  // b.none
    c92c:	cmp	w0, #0xe
    c930:	b.ne	c9ec <grub_unicode_aglomerate_comb+0x6d4>  // b.any
    c934:	ldr	x0, [sp, #144]
    c938:	add	x21, x21, x0, lsl #2
    c93c:	cmp	x21, x22
    c940:	b.cs	cbc4 <grub_unicode_aglomerate_comb+0x8ac>  // b.hs, b.nlast
    c944:	ldr	w0, [x21]
    c948:	mov	w1, #0x200d                	// #8205
    c94c:	cmp	w0, w1
    c950:	b.eq	c7cc <grub_unicode_aglomerate_comb+0x4b4>  // b.none
    c954:	mov	w1, #0x200c                	// #8204
    c958:	cmp	w0, w1
    c95c:	b.eq	c800 <grub_unicode_aglomerate_comb+0x4e8>  // b.none
    c960:	sub	w0, w0, #0xe0, lsl #12
    c964:	cmp	w0, #0x7f
    c968:	b.ls	c93c <grub_unicode_aglomerate_comb+0x624>  // b.plast
    c96c:	ubfiz	x20, x19, #5, #32
    c970:	add	x25, x28, x20
    c974:	sub	x1, x22, x21
    c978:	mov	x2, x25
    c97c:	asr	x1, x1, #2
    c980:	mov	x0, x21
    c984:	bl	c318 <grub_unicode_aglomerate_comb>
    c988:	str	x0, [sp, #144]
    c98c:	ldr	x0, [sp, #152]
    c990:	sub	x0, x21, x0
    c994:	asr	x0, x0, #2
    c998:	str	x0, [x25, #16]
    c99c:	ldr	w24, [x28, x20]
    c9a0:	ubfx	x24, x24, #0, #23
    c9a4:	mov	w20, w24
    c9a8:	ldr	x0, [x26]
    c9ac:	ldr	x0, [x0]
    c9b0:	cbz	x0, c83c <grub_unicode_aglomerate_comb+0x524>
    c9b4:	ldr	x0, [x26]
    c9b8:	ldr	x0, [x0]
    c9bc:	cmp	x0, #0x0
    c9c0:	mov	w1, #0x1ffff               	// #131071
    c9c4:	ccmp	w24, w1, #0x2, ne  // ne = any
    c9c8:	b.ls	c844 <grub_unicode_aglomerate_comb+0x52c>  // b.plast
    c9cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    c9d0:	ldr	x0, [x0]
    c9d4:	ldrh	w0, [x0, #2]
    c9d8:	ubfx	x0, x0, #5, #9
    c9dc:	cbz	w0, c8c4 <grub_unicode_aglomerate_comb+0x5ac>
    c9e0:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    c9e4:	ldr	x2, [x1]
    c9e8:	b	c860 <grub_unicode_aglomerate_comb+0x548>
    c9ec:	cmp	w0, #0x6
    c9f0:	b.ne	c8c4 <grub_unicode_aglomerate_comb+0x5ac>  // b.any
    c9f4:	ldr	w0, [sp, #104]
    c9f8:	orr	w0, w0, #0x1
    c9fc:	add	w0, w0, #0x1
    ca00:	cmp	w0, #0x3d
    ca04:	b.ls	ca70 <grub_unicode_aglomerate_comb+0x758>  // b.plast
    ca08:	ldr	w0, [sp, #128]
    ca0c:	add	w0, w0, #0x1
    ca10:	str	w0, [sp, #128]
    ca14:	mov	w23, #0x1                   	// #1
    ca18:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    ca1c:	ldr	w0, [sp, #104]
    ca20:	orr	w0, w0, #0x1
    ca24:	add	w0, w0, #0x1
    ca28:	cmp	w0, #0x3d
    ca2c:	b.ls	ca44 <grub_unicode_aglomerate_comb+0x72c>  // b.plast
    ca30:	ldr	w0, [sp, #128]
    ca34:	add	w0, w0, #0x1
    ca38:	str	w0, [sp, #128]
    ca3c:	mov	w23, #0x1                   	// #1
    ca40:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    ca44:	mov	w1, w27
    ca48:	add	x2, sp, #0x210
    ca4c:	ldr	w3, [sp, #104]
    ca50:	str	w3, [x2, x1, lsl #2]
    ca54:	add	x2, sp, #0x110
    ca58:	ldr	w3, [sp, #132]
    ca5c:	str	w3, [x2, x1, lsl #2]
    ca60:	add	w27, w27, #0x1
    ca64:	str	w0, [sp, #104]
    ca68:	mov	w23, #0x1                   	// #1
    ca6c:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    ca70:	mov	w1, w27
    ca74:	add	x2, sp, #0x210
    ca78:	ldr	w3, [sp, #104]
    ca7c:	str	w3, [x2, x1, lsl #2]
    ca80:	add	x2, sp, #0x110
    ca84:	ldr	w3, [sp, #132]
    ca88:	str	w3, [x2, x1, lsl #2]
    ca8c:	add	w27, w27, #0x1
    ca90:	str	w0, [sp, #104]
    ca94:	mov	w0, #0x1                   	// #1
    ca98:	str	w0, [sp, #132]
    ca9c:	mov	w23, w0
    caa0:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    caa4:	mov	w1, w27
    caa8:	add	x2, sp, #0x210
    caac:	ldr	w3, [sp, #104]
    cab0:	str	w3, [x2, x1, lsl #2]
    cab4:	add	x2, sp, #0x110
    cab8:	ldr	w3, [sp, #132]
    cabc:	str	w3, [x2, x1, lsl #2]
    cac0:	add	w27, w27, #0x1
    cac4:	str	w0, [sp, #104]
    cac8:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cacc:	ldr	w1, [sp, #104]
    cad0:	and	w1, w1, #0xfffffffe
    cad4:	add	w1, w1, #0x2
    cad8:	cmp	w1, #0x3d
    cadc:	b.ls	caf0 <grub_unicode_aglomerate_comb+0x7d8>  // b.plast
    cae0:	ldr	w0, [sp, #128]
    cae4:	add	w0, w0, #0x1
    cae8:	str	w0, [sp, #128]
    caec:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    caf0:	mov	w2, w27
    caf4:	add	x3, sp, #0x210
    caf8:	ldr	w4, [sp, #104]
    cafc:	str	w4, [x3, x2, lsl #2]
    cb00:	add	x3, sp, #0x110
    cb04:	ldr	w4, [sp, #132]
    cb08:	str	w4, [x3, x2, lsl #2]
    cb0c:	add	w27, w27, #0x1
    cb10:	str	w1, [sp, #104]
    cb14:	str	w0, [sp, #132]
    cb18:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cb1c:	ldr	w0, [sp, #128]
    cb20:	cbz	w0, cb30 <grub_unicode_aglomerate_comb+0x818>
    cb24:	sub	w0, w0, #0x1
    cb28:	str	w0, [sp, #128]
    cb2c:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cb30:	cbz	w27, cbbc <grub_unicode_aglomerate_comb+0x8a4>
    cb34:	sub	w27, w27, #0x1
    cb38:	mov	w0, w27
    cb3c:	add	x1, sp, #0x210
    cb40:	ldr	w1, [x1, x0, lsl #2]
    cb44:	str	w1, [sp, #104]
    cb48:	add	x1, sp, #0x110
    cb4c:	ldr	w0, [x1, x0, lsl #2]
    cb50:	str	w0, [sp, #132]
    cb54:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cb58:	ldrb	w1, [x25, #4]
    cb5c:	mov	w2, #0xa                   	// #10
    cb60:	orr	w1, w1, w2
    cb64:	strb	w1, [x25, #4]
    cb68:	ldrb	w1, [x25, #5]
    cb6c:	ldr	w2, [sp, #104]
    cb70:	bfxil	w1, w2, #0, #6
    cb74:	strb	w1, [x25, #5]
    cb78:	ldr	w1, [sp, #132]
    cb7c:	cbz	w1, cbac <grub_unicode_aglomerate_comb+0x894>
    cb80:	cmp	w1, #0x2
    cb84:	mov	w0, #0x3                   	// #3
    cb88:	csel	w0, w0, wzr, ne  // ne = any
    cb8c:	ldr	w1, [x25, #4]
    cb90:	bfi	w1, w0, #14, #5
    cb94:	str	w1, [x25, #4]
    cb98:	add	w19, w19, #0x1
    cb9c:	mov	w0, #0x1                   	// #1
    cba0:	str	w0, [sp, #112]
    cba4:	str	wzr, [sp, #120]
    cba8:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cbac:	ldr	w1, [x25, #4]
    cbb0:	bfi	w1, w0, #14, #5
    cbb4:	str	w1, [x25, #4]
    cbb8:	b	cb98 <grub_unicode_aglomerate_comb+0x880>
    cbbc:	str	w27, [sp, #128]
    cbc0:	b	c934 <grub_unicode_aglomerate_comb+0x61c>
    cbc4:	ldr	x27, [sp, #784]
    cbc8:	cbz	w23, cc04 <grub_unicode_aglomerate_comb+0x8ec>
    cbcc:	mov	w6, #0x0                   	// #0
    cbd0:	cbz	w19, db08 <grub_unicode_aglomerate_comb+0x17f0>
    cbd4:	ldr	w18, [sp, #160]
    cbd8:	mov	w12, #0x3                   	// #3
    cbdc:	mov	w15, #0x12                  	// #18
    cbe0:	mov	w16, #0x8                   	// #8
    cbe4:	mov	w21, #0xb                   	// #11
    cbe8:	mov	w20, #0x3                   	// #3
    cbec:	mov	w8, #0x3c000               	// #245760
    cbf0:	mov	w7, #0x8000                	// #32768
    cbf4:	movk	w7, #0x4, lsl #16
    cbf8:	add	x14, x28, #0x20
    cbfc:	mov	w17, #0x4                   	// #4
    cc00:	b	d054 <grub_unicode_aglomerate_comb+0xd3c>
    cc04:	cbz	w19, cc68 <grub_unicode_aglomerate_comb+0x950>
    cc08:	mov	x0, x28
    cc0c:	sub	w2, w19, #0x1
    cc10:	add	x1, x28, #0x20
    cc14:	add	x2, x1, x2, lsl #5
    cc18:	ldrb	w1, [x0, #5]
    cc1c:	and	w1, w1, #0xffffffc0
    cc20:	strb	w1, [x0, #5]
    cc24:	add	x0, x0, #0x20
    cc28:	cmp	x0, x2
    cc2c:	b.ne	cc18 <grub_unicode_aglomerate_comb+0x900>  // b.any
    cc30:	mov	w0, w19
    cc34:	str	x0, [sp, #112]
    cc38:	ldr	x0, [sp, #216]
    cc3c:	str	x0, [sp, #144]
    cc40:	cmp	x0, #0x0
    cc44:	cset	w1, gt
    cc48:	str	w1, [sp, #152]
    cc4c:	cmp	w1, #0x0
    cc50:	ldr	x1, [sp, #200]
    cc54:	ccmp	x0, x1, #0x2, ne  // ne = any
    cc58:	b.ls	d144 <grub_unicode_aglomerate_comb+0xe2c>  // b.plast
    cc5c:	ldr	x0, [sp, #208]
    cc60:	str	x0, [sp, #120]
    cc64:	b	d17c <grub_unicode_aglomerate_comb+0xe64>
    cc68:	ldp	x25, x26, [sp, #64]
    cc6c:	b	db00 <grub_unicode_aglomerate_comb+0x17e8>
    cc70:	mov	w9, w18
    cc74:	cbz	w6, cc88 <grub_unicode_aglomerate_comb+0x970>
    cc78:	sub	w0, w6, #0x1
    cc7c:	add	x0, x28, x0, lsl #5
    cc80:	ldrb	w9, [x0, #5]
    cc84:	and	w9, w9, #0x3f
    cc88:	cmp	w19, w5
    cc8c:	b.eq	ccd0 <grub_unicode_aglomerate_comb+0x9b8>  // b.none
    cc90:	ubfiz	x0, x5, #5, #32
    cc94:	add	x0, x28, x0
    cc98:	ldrb	w10, [x0, #5]
    cc9c:	and	w10, w10, #0x3f
    cca0:	ubfiz	x0, x6, #5, #32
    cca4:	add	x0, x28, x0
    cca8:	ldrb	w11, [x0, #5]
    ccac:	and	w11, w11, #0x3f
    ccb0:	ands	w9, w9, #0x1
    ccb4:	csel	w9, w9, w12, eq  // eq = none
    ccb8:	cmp	w6, w5
    ccbc:	b.cs	d048 <grub_unicode_aglomerate_comb+0xd30>  // b.hs, b.nlast
    ccc0:	mov	w4, w9
    ccc4:	mov	w3, w9
    ccc8:	mov	w1, w6
    cccc:	b	cd34 <grub_unicode_aglomerate_comb+0xa1c>
    ccd0:	mov	w10, w18
    ccd4:	b	cca0 <grub_unicode_aglomerate_comb+0x988>
    ccd8:	cbz	w0, cce4 <grub_unicode_aglomerate_comb+0x9cc>
    ccdc:	cmp	w0, #0x3
    cce0:	b.ne	cd08 <grub_unicode_aglomerate_comb+0x9f0>  // b.any
    cce4:	mov	w4, w0
    cce8:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    ccec:	cmp	w0, #0xc
    ccf0:	b.eq	ce58 <grub_unicode_aglomerate_comb+0xb40>  // b.none
    ccf4:	cmp	w0, #0xd
    ccf8:	b.ne	cd80 <grub_unicode_aglomerate_comb+0xa68>  // b.any
    ccfc:	ldr	w0, [x2, #4]
    cd00:	bfi	w0, w3, #14, #5
    cd04:	str	w0, [x2, #4]
    cd08:	ubfiz	x2, x1, #5, #32
    cd0c:	add	x2, x28, x2
    cd10:	ldr	w0, [x2, #4]
    cd14:	ubfx	x3, x0, #14, #5
    cd18:	and	w0, w0, #0x7c000
    cd1c:	cmp	w0, #0x20, lsl #12
    cd20:	ccmp	w4, #0x0, #0x0, eq  // eq = none
    cd24:	b.eq	cf08 <grub_unicode_aglomerate_comb+0xbf0>  // b.none
    cd28:	add	w1, w1, #0x1
    cd2c:	cmp	w1, w5
    cd30:	b.cs	cf18 <grub_unicode_aglomerate_comb+0xc00>  // b.hs, b.nlast
    cd34:	ubfiz	x2, x1, #5, #32
    cd38:	add	x2, x28, x2
    cd3c:	ldr	w0, [x2, #4]
    cd40:	ubfx	x0, x0, #14, #5
    cd44:	cmp	w0, #0x9
    cd48:	b.eq	cda0 <grub_unicode_aglomerate_comb+0xa88>  // b.none
    cd4c:	b.hi	ccec <grub_unicode_aglomerate_comb+0x9d4>  // b.pmore
    cd50:	cmp	w0, #0x4
    cd54:	b.eq	ceec <grub_unicode_aglomerate_comb+0xbd4>  // b.none
    cd58:	cmp	w0, #0x4
    cd5c:	b.ls	ccd8 <grub_unicode_aglomerate_comb+0x9c0>  // b.plast
    cd60:	cmp	w0, #0x8
    cd64:	b.ne	cd08 <grub_unicode_aglomerate_comb+0x9f0>  // b.any
    cd68:	cmp	w4, #0x4
    cd6c:	b.ne	cd08 <grub_unicode_aglomerate_comb+0x9f0>  // b.any
    cd70:	ldr	w0, [x2, #4]
    cd74:	bfi	w0, w21, #14, #5
    cd78:	str	w0, [x2, #4]
    cd7c:	b	cef8 <grub_unicode_aglomerate_comb+0xbe0>
    cd80:	cmp	w0, #0xa
    cd84:	b.ne	cd08 <grub_unicode_aglomerate_comb+0x9f0>  // b.any
    cd88:	cmp	w3, #0x8
    cd8c:	b.ne	cdec <grub_unicode_aglomerate_comb+0xad4>  // b.any
    cd90:	ldr	w0, [x2, #4]
    cd94:	bfi	w0, w16, #14, #5
    cd98:	str	w0, [x2, #4]
    cd9c:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    cda0:	cmp	w3, #0x8
    cda4:	b.eq	cdb8 <grub_unicode_aglomerate_comb+0xaa0>  // b.none
    cda8:	ldr	w0, [x2, #4]
    cdac:	bfi	w0, w15, #14, #5
    cdb0:	str	w0, [x2, #4]
    cdb4:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    cdb8:	add	w0, w1, #0x1
    cdbc:	cmp	w0, w5
    cdc0:	b.cs	cda8 <grub_unicode_aglomerate_comb+0xa90>  // b.hs, b.nlast
    cdc4:	ubfiz	x0, x0, #5, #32
    cdc8:	add	x0, x28, x0
    cdcc:	ldr	w0, [x0, #4]
    cdd0:	and	w0, w0, #0x7c000
    cdd4:	cmp	w0, #0x20, lsl #12
    cdd8:	b.ne	cda8 <grub_unicode_aglomerate_comb+0xa90>  // b.any
    cddc:	ldr	w0, [x2, #4]
    cde0:	bfi	w0, w16, #14, #5
    cde4:	str	w0, [x2, #4]
    cde8:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    cdec:	cmp	w1, w5
    cdf0:	b.cs	db70 <grub_unicode_aglomerate_comb+0x1858>  // b.hs, b.nlast
    cdf4:	mov	x13, x2
    cdf8:	mov	w3, w1
    cdfc:	ldr	w0, [x13, #4]
    ce00:	and	w0, w0, #0x7c000
    ce04:	cmp	w0, #0x28, lsl #12
    ce08:	b.ne	db10 <grub_unicode_aglomerate_comb+0x17f8>  // b.any
    ce0c:	add	w3, w3, #0x1
    ce10:	add	x13, x13, #0x20
    ce14:	cmp	w3, w5
    ce18:	b.ne	cdfc <grub_unicode_aglomerate_comb+0xae4>  // b.any
    ce1c:	b	db38 <grub_unicode_aglomerate_comb+0x1820>
    ce20:	ldr	w0, [x2, #4]
    ce24:	and	w0, w0, #0x7c000
    ce28:	cmp	w0, #0x28, lsl #12
    ce2c:	b.ne	ce50 <grub_unicode_aglomerate_comb+0xb38>  // b.any
    ce30:	ldr	w0, [x2, #4]
    ce34:	bfi	w0, w16, #14, #5
    ce38:	str	w0, [x2, #4]
    ce3c:	add	w1, w1, #0x1
    ce40:	add	x2, x2, #0x20
    ce44:	cmp	w1, w5
    ce48:	b.ne	ce20 <grub_unicode_aglomerate_comb+0xb08>  // b.any
    ce4c:	mov	w1, w5
    ce50:	sub	w1, w1, #0x1
    ce54:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    ce58:	cmp	w3, #0x8
    ce5c:	b.eq	ce78 <grub_unicode_aglomerate_comb+0xb60>  // b.none
    ce60:	cmp	w3, #0xb
    ce64:	b.eq	ceac <grub_unicode_aglomerate_comb+0xb94>  // b.none
    ce68:	ldr	w0, [x2, #4]
    ce6c:	bfi	w0, w15, #14, #5
    ce70:	str	w0, [x2, #4]
    ce74:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    ce78:	add	w0, w1, #0x1
    ce7c:	cmp	w0, w5
    ce80:	b.cs	ce68 <grub_unicode_aglomerate_comb+0xb50>  // b.hs, b.nlast
    ce84:	ubfiz	x0, x0, #5, #32
    ce88:	add	x0, x28, x0
    ce8c:	ldr	w0, [x0, #4]
    ce90:	and	w0, w0, #0x7c000
    ce94:	cmp	w0, #0x20, lsl #12
    ce98:	b.ne	ce68 <grub_unicode_aglomerate_comb+0xb50>  // b.any
    ce9c:	ldr	w0, [x2, #4]
    cea0:	bfi	w0, w16, #14, #5
    cea4:	str	w0, [x2, #4]
    cea8:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    ceac:	add	w0, w1, #0x1
    ceb0:	cmp	w0, w5
    ceb4:	b.cs	ce68 <grub_unicode_aglomerate_comb+0xb50>  // b.hs, b.nlast
    ceb8:	ubfiz	x0, x0, #5, #32
    cebc:	add	x0, x28, x0
    cec0:	ldr	w0, [x0, #4]
    cec4:	and	w0, w0, #0x7c000
    cec8:	cmp	w0, #0x2c, lsl #12
    cecc:	b.eq	cedc <grub_unicode_aglomerate_comb+0xbc4>  // b.none
    ced0:	cmp	w0, #0x20, lsl #12
    ced4:	ccmp	w4, #0x4, #0x0, eq  // eq = none
    ced8:	b.ne	ce68 <grub_unicode_aglomerate_comb+0xb50>  // b.any
    cedc:	ldr	w0, [x2, #4]
    cee0:	bfi	w0, w16, #14, #5
    cee4:	str	w0, [x2, #4]
    cee8:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    ceec:	ldr	w0, [x2, #4]
    cef0:	bfi	w0, w12, #14, #5
    cef4:	str	w0, [x2, #4]
    cef8:	ldr	w3, [x2, #4]
    cefc:	ubfx	x3, x3, #14, #5
    cf00:	mov	w4, w17
    cf04:	b	cd28 <grub_unicode_aglomerate_comb+0xa10>
    cf08:	ldr	w0, [x2, #4]
    cf0c:	and	w0, w0, #0xfff83fff
    cf10:	str	w0, [x2, #4]
    cf14:	b	cd28 <grub_unicode_aglomerate_comb+0xa10>
    cf18:	tst	x11, #0x1
    cf1c:	csel	w11, w20, wzr, ne  // ne = any
    cf20:	and	w11, w11, #0xff
    cf24:	b	cf90 <grub_unicode_aglomerate_comb+0xc78>
    cf28:	cmp	w6, w1
    cf2c:	b.eq	cfe8 <grub_unicode_aglomerate_comb+0xcd0>  // b.none
    cf30:	cmp	w1, w5
    cf34:	b.eq	cfdc <grub_unicode_aglomerate_comb+0xcc4>  // b.none
    cf38:	ubfiz	x0, x1, #5, #32
    cf3c:	add	x0, x28, x0
    cf40:	ldr	w0, [x0, #4]
    cf44:	ands	w0, w0, #0x7c000
    cf48:	csel	w0, w0, w12, eq  // eq = none
    cf4c:	cmp	w0, w9
    cf50:	b.eq	d00c <grub_unicode_aglomerate_comb+0xcf4>  // b.none
    cf54:	cmp	w6, w1
    cf58:	b.cs	d004 <grub_unicode_aglomerate_comb+0xcec>  // b.hs, b.nlast
    cf5c:	mvn	w2, w6
    cf60:	add	w2, w2, w1
    cf64:	add	x2, x2, x13
    cf68:	add	x2, x14, x2, lsl #5
    cf6c:	ldr	w0, [x4, #4]
    cf70:	bfi	w0, w11, #14, #5
    cf74:	str	w0, [x4, #4]
    cf78:	add	x4, x4, #0x20
    cf7c:	cmp	x2, x4
    cf80:	b.ne	cf6c <grub_unicode_aglomerate_comb+0xc54>  // b.any
    cf84:	cmp	w1, w5
    cf88:	b.cs	d048 <grub_unicode_aglomerate_comb+0xd30>  // b.hs, b.nlast
    cf8c:	mov	w6, w1
    cf90:	cmp	w6, w5
    cf94:	b.cs	cfe8 <grub_unicode_aglomerate_comb+0xcd0>  // b.hs, b.nlast
    cf98:	mov	w13, w6
    cf9c:	ubfiz	x4, x6, #5, #32
    cfa0:	add	x4, x28, x4
    cfa4:	mov	x2, x4
    cfa8:	mov	w1, w6
    cfac:	ldr	w0, [x2, #4]
    cfb0:	and	w3, w0, #0x7c000
    cfb4:	and	w0, w0, #0x78000
    cfb8:	cmp	w0, #0x40, lsl #12
    cfbc:	ccmp	w3, w8, #0x4, ne  // ne = any
    cfc0:	ccmp	w3, w7, #0x4, ne  // ne = any
    cfc4:	b.ne	cf28 <grub_unicode_aglomerate_comb+0xc10>  // b.any
    cfc8:	add	w1, w1, #0x1
    cfcc:	add	x2, x2, #0x20
    cfd0:	cmp	w1, w5
    cfd4:	b.ne	cfac <grub_unicode_aglomerate_comb+0xc94>  // b.any
    cfd8:	mov	w1, w5
    cfdc:	ands	w0, w10, #0x1
    cfe0:	csel	w0, w0, w12, eq  // eq = none
    cfe4:	b	cf4c <grub_unicode_aglomerate_comb+0xc34>
    cfe8:	ubfiz	x0, x6, #5, #32
    cfec:	add	x0, x28, x0
    cff0:	ldr	w9, [x0, #4]
    cff4:	ands	w9, w9, #0x7c000
    cff8:	csel	w9, w9, w12, eq  // eq = none
    cffc:	add	w1, w6, #0x1
    d000:	b	cf84 <grub_unicode_aglomerate_comb+0xc6c>
    d004:	mov	w1, w6
    d008:	b	cf8c <grub_unicode_aglomerate_comb+0xc74>
    d00c:	cmp	w6, w1
    d010:	b.cs	d040 <grub_unicode_aglomerate_comb+0xd28>  // b.hs, b.nlast
    d014:	mvn	w2, w6
    d018:	add	w2, w2, w1
    d01c:	add	x2, x2, x13
    d020:	add	x2, x14, x2, lsl #5
    d024:	ldr	w0, [x4, #4]
    d028:	bfi	w0, w9, #14, #5
    d02c:	str	w0, [x4, #4]
    d030:	add	x4, x4, #0x20
    d034:	cmp	x2, x4
    d038:	b.ne	d024 <grub_unicode_aglomerate_comb+0xd0c>  // b.any
    d03c:	b	cf84 <grub_unicode_aglomerate_comb+0xc6c>
    d040:	mov	w1, w6
    d044:	b	cf8c <grub_unicode_aglomerate_comb+0xc74>
    d048:	cmp	w19, w5
    d04c:	b.ls	d09c <grub_unicode_aglomerate_comb+0xd84>  // b.plast
    d050:	mov	w6, w5
    d054:	cmp	w19, w6
    d058:	b.ls	db98 <grub_unicode_aglomerate_comb+0x1880>  // b.plast
    d05c:	ubfiz	x1, x6, #5, #32
    d060:	add	x1, x28, x1
    d064:	ldrb	w2, [x1, #5]
    d068:	mov	w5, w6
    d06c:	ldrb	w0, [x1, #5]
    d070:	eor	w0, w2, w0
    d074:	tst	x0, #0x3f
    d078:	b.ne	cc70 <grub_unicode_aglomerate_comb+0x958>  // b.any
    d07c:	add	w5, w5, #0x1
    d080:	add	x1, x1, #0x20
    d084:	cmp	w19, w5
    d088:	b.ne	d06c <grub_unicode_aglomerate_comb+0xd54>  // b.any
    d08c:	cbnz	w6, cc78 <grub_unicode_aglomerate_comb+0x960>
    d090:	mov	w9, w18
    d094:	mov	w10, w18
    d098:	b	cca0 <grub_unicode_aglomerate_comb+0x988>
    d09c:	mov	x0, x28
    d0a0:	sub	w4, w19, #0x1
    d0a4:	add	x1, x28, #0x20
    d0a8:	add	x4, x1, x4, lsl #5
    d0ac:	mov	w7, #0xc000                	// #49152
    d0b0:	movk	w7, #0x5, lsl #16
    d0b4:	mov	w6, #0x20000               	// #131072
    d0b8:	b	d0f4 <grub_unicode_aglomerate_comb+0xddc>
    d0bc:	add	w2, w2, #0x1
    d0c0:	ldrb	w1, [x0, #5]
    d0c4:	bfxil	w1, w2, #0, #6
    d0c8:	strb	w1, [x0, #5]
    d0cc:	b	d0e8 <grub_unicode_aglomerate_comb+0xdd0>
    d0d0:	ldr	w1, [x0, #4]
    d0d4:	and	w5, w1, #0x7c000
    d0d8:	and	w1, w1, w7
    d0dc:	cmp	w5, #0x2c, lsl #12
    d0e0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    d0e4:	b.eq	d130 <grub_unicode_aglomerate_comb+0xe18>  // b.none
    d0e8:	add	x0, x0, #0x20
    d0ec:	cmp	x4, x0
    d0f0:	b.eq	cc30 <grub_unicode_aglomerate_comb+0x918>  // b.none
    d0f4:	ldrb	w1, [x0, #5]
    d0f8:	and	w2, w1, #0x3f
    d0fc:	tbnz	w1, #0, d0d0 <grub_unicode_aglomerate_comb+0xdb8>
    d100:	ldr	w1, [x0, #4]
    d104:	and	w1, w1, #0x7c000
    d108:	cmp	w1, #0xc, lsl #12
    d10c:	b.eq	d0bc <grub_unicode_aglomerate_comb+0xda4>  // b.none
    d110:	cmp	w1, #0x2c, lsl #12
    d114:	ccmp	w1, w6, #0x4, ne  // ne = any
    d118:	b.ne	d0e8 <grub_unicode_aglomerate_comb+0xdd0>  // b.any
    d11c:	add	w2, w2, #0x2
    d120:	ldrb	w1, [x0, #5]
    d124:	bfxil	w1, w2, #0, #6
    d128:	strb	w1, [x0, #5]
    d12c:	b	d0e8 <grub_unicode_aglomerate_comb+0xdd0>
    d130:	add	w2, w2, #0x1
    d134:	ldrb	w1, [x0, #5]
    d138:	bfxil	w1, w2, #0, #6
    d13c:	strb	w1, [x0, #5]
    d140:	b	d0e8 <grub_unicode_aglomerate_comb+0xdd0>
    d144:	ldr	x19, [sp, #208]
    d148:	ldr	w0, [sp, #184]
    d14c:	cbnz	w0, d1b4 <grub_unicode_aglomerate_comb+0xe9c>
    d150:	mov	x2, #0x20                  	// #32
    d154:	mov	w1, #0x0                   	// #0
    d158:	mov	x0, x19
    d15c:	bl	0 <grub_memset>
    d160:	ldr	w0, [x19]
    d164:	mov	w1, #0xa                   	// #10
    d168:	bfxil	w0, w1, #0, #23
    d16c:	mov	x1, x19
    d170:	str	w0, [x1], #32
    d174:	str	x1, [sp, #120]
    d178:	str	xzr, [sp, #200]
    d17c:	ldr	x0, [sp, #200]
    d180:	str	x0, [sp, #104]
    d184:	ldr	x0, [sp, #800]
    d188:	add	x0, x27, x0, lsl #2
    d18c:	str	x0, [sp, #224]
    d190:	str	xzr, [sp, #232]
    d194:	mov	x0, #0xffffffffffffffff    	// #-1
    d198:	str	x0, [sp, #160]
    d19c:	mov	w26, #0x0                   	// #0
    d1a0:	str	wzr, [sp, #128]
    d1a4:	str	wzr, [sp, #132]
    d1a8:	mov	x19, #0x0                   	// #0
    d1ac:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    d1b0:	b	d2a4 <grub_unicode_aglomerate_comb+0xf8c>
    d1b4:	mov	x2, #0x20                  	// #32
    d1b8:	mov	w1, #0x0                   	// #0
    d1bc:	mov	x0, x19
    d1c0:	bl	0 <grub_memset>
    d1c4:	ldr	w0, [x19]
    d1c8:	ldr	w1, [sp, #184]
    d1cc:	bfxil	w0, w1, #0, #23
    d1d0:	str	w0, [x19], #32
    d1d4:	b	d150 <grub_unicode_aglomerate_comb+0xe38>
    d1d8:	add	x2, x28, x19, lsl #5
    d1dc:	ldr	x0, [x2, #16]
    d1e0:	lsl	x0, x0, #2
    d1e4:	ldrh	w3, [x27, x0]
    d1e8:	ldr	w4, [sp, #104]
    d1ec:	bfi	w3, w4, #1, #15
    d1f0:	strh	w3, [x27, x0]
    d1f4:	ldr	x0, [x2, #16]
    d1f8:	add	x0, x27, x0, lsl #2
    d1fc:	ldrh	w3, [sp, #132]
    d200:	strh	w3, [x0, #2]
    d204:	ldr	x0, [x2, #16]
    d208:	lsl	x0, x0, #2
    d20c:	ldrb	w2, [x27, x0]
    d210:	orr	w2, w2, #0x1
    d214:	strb	w2, [x27, x0]
    d218:	ldr	x0, [sp, #136]
    d21c:	cmp	x0, #0x0
    d220:	csel	w20, w1, wzr, ne  // ne = any
    d224:	mov	x0, #0x0                   	// #0
    d228:	cbz	w20, d24c <grub_unicode_aglomerate_comb+0xf34>
    d22c:	mov	w20, #0x0                   	// #0
    d230:	ldr	x1, [sp, #192]
    d234:	add	x0, x28, x19, lsl #5
    d238:	ldr	x2, [sp, #136]
    d23c:	blr	x2
    d240:	ldr	x1, [sp, #104]
    d244:	add	x1, x1, x0
    d248:	str	x1, [sp, #104]
    d24c:	lsl	x19, x19, #5
    d250:	ldr	w1, [x28, x19]
    d254:	and	w1, w1, #0x7fffff
    d258:	cmp	w1, #0x20
    d25c:	ccmp	w1, #0x9, #0x4, ne  // ne = any
    d260:	ldr	w1, [sp, #792]
    d264:	ccmp	w1, #0x0, #0x0, eq  // eq = none
    d268:	b.eq	d38c <grub_unicode_aglomerate_comb+0x1074>  // b.none
    d26c:	ldr	w1, [sp, #152]
    d270:	cmp	w1, #0x0
    d274:	ldr	x1, [sp, #144]
    d278:	ldr	x2, [sp, #104]
    d27c:	ccmp	x1, x2, #0x0, ne  // ne = any
    d280:	ccmp	w20, #0x0, #0x0, ge  // ge = tcont
    d284:	b.ne	da6c <grub_unicode_aglomerate_comb+0x1754>  // b.any
    d288:	ldr	w0, [sp, #128]
    d28c:	add	w0, w0, #0x1
    d290:	str	w0, [sp, #128]
    d294:	mov	w19, w0
    d298:	ldr	x1, [sp, #112]
    d29c:	cmp	x1, w0, uxtw
    d2a0:	b.cc	da18 <grub_unicode_aglomerate_comb+0x1700>  // b.lo, b.ul, b.last
    d2a4:	ldr	x0, [sp, #112]
    d2a8:	cmp	x0, x19
    d2ac:	cset	w1, ne  // ne = any
    d2b0:	cmp	x27, #0x0
    d2b4:	cset	w0, ne  // ne = any
    d2b8:	cmp	w1, #0x0
    d2bc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    d2c0:	b.ne	d1d8 <grub_unicode_aglomerate_comb+0xec0>  // b.any
    d2c4:	ldr	x2, [sp, #112]
    d2c8:	cmp	x2, x19
    d2cc:	cset	w20, eq  // eq = none
    d2d0:	csel	w0, w0, wzr, eq  // eq = none
    d2d4:	cbnz	w0, d300 <grub_unicode_aglomerate_comb+0xfe8>
    d2d8:	ldr	x0, [sp, #136]
    d2dc:	cmp	x0, #0x0
    d2e0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    d2e4:	b.ne	d230 <grub_unicode_aglomerate_comb+0xf18>  // b.any
    d2e8:	mov	w0, w20
    d2ec:	ldr	x1, [sp, #112]
    d2f0:	cmp	x1, x19
    d2f4:	b.eq	d324 <grub_unicode_aglomerate_comb+0x100c>  // b.none
    d2f8:	mov	x0, #0x0                   	// #0
    d2fc:	b	d24c <grub_unicode_aglomerate_comb+0xf34>
    d300:	ldr	x2, [sp, #224]
    d304:	ldrh	w1, [x2]
    d308:	ldr	w3, [sp, #104]
    d30c:	bfi	w1, w3, #1, #15
    d310:	strh	w1, [x2]
    d314:	ldrh	w3, [sp, #132]
    d318:	strh	w3, [x2, #2]
    d31c:	orr	w1, w1, #0x1
    d320:	strb	w1, [x2]
    d324:	ldr	w1, [sp, #152]
    d328:	cmp	w1, #0x0
    d32c:	ldr	x1, [sp, #144]
    d330:	ldr	x2, [sp, #104]
    d334:	ccmp	x1, x2, #0x0, ne  // ne = any
    d338:	ccmp	w0, #0x0, #0x0, ge  // ge = tcont
    d33c:	b.eq	d288 <grub_unicode_aglomerate_comb+0xf70>  // b.none
    d340:	ldr	w0, [sp, #132]
    d344:	add	w0, w0, #0x1
    d348:	str	w0, [sp, #132]
    d34c:	ldr	w20, [sp, #128]
    d350:	str	xzr, [sp, #104]
    d354:	cmp	w20, w26
    d358:	b.ls	dac4 <grub_unicode_aglomerate_comb+0x17ac>  // b.plast
    d35c:	mov	w3, w26
    d360:	ubfiz	x19, x26, #5, #32
    d364:	add	x19, x28, x19
    d368:	mvn	w2, w26
    d36c:	add	w2, w2, w20
    d370:	add	x2, x2, x3
    d374:	add	x0, x28, #0x20
    d378:	add	x2, x0, x2, lsl #5
    d37c:	mov	x1, x19
    d380:	mov	w17, #0xffffffff            	// #-1
    d384:	mov	w13, #0x0                   	// #0
    d388:	b	d3e8 <grub_unicode_aglomerate_comb+0x10d0>
    d38c:	ldr	w1, [sp, #128]
    d390:	str	x1, [sp, #160]
    d394:	ldr	x1, [sp, #104]
    d398:	str	x1, [sp, #232]
    d39c:	b	d26c <grub_unicode_aglomerate_comb+0xf54>
    d3a0:	ldr	w20, [sp, #160]
    d3a4:	ldr	x0, [sp, #104]
    d3a8:	ldr	x1, [sp, #232]
    d3ac:	sub	x0, x0, x1
    d3b0:	str	x0, [sp, #104]
    d3b4:	b	d354 <grub_unicode_aglomerate_comb+0x103c>
    d3b8:	ldr	w20, [sp, #128]
    d3bc:	str	x0, [sp, #104]
    d3c0:	b	d354 <grub_unicode_aglomerate_comb+0x103c>
    d3c4:	ldr	w20, [sp, #128]
    d3c8:	str	x0, [sp, #104]
    d3cc:	b	d354 <grub_unicode_aglomerate_comb+0x103c>
    d3d0:	ldr	w20, [sp, #128]
    d3d4:	str	x0, [sp, #104]
    d3d8:	b	d354 <grub_unicode_aglomerate_comb+0x103c>
    d3dc:	add	x1, x1, #0x20
    d3e0:	cmp	x1, x2
    d3e4:	b.eq	d40c <grub_unicode_aglomerate_comb+0x10f4>  // b.none
    d3e8:	ldrb	w0, [x1, #5]
    d3ec:	and	w0, w0, #0x3f
    d3f0:	cmp	w13, w0
    d3f4:	csel	w13, w13, w0, cs  // cs = hs, nlast
    d3f8:	cmp	w0, w17
    d3fc:	b.cs	d3dc <grub_unicode_aglomerate_comb+0x10c4>  // b.hs, b.nlast
    d400:	tst	x0, #0x1
    d404:	csel	w17, w17, w0, eq  // eq = none
    d408:	b	d3dc <grub_unicode_aglomerate_comb+0x10c4>
    d40c:	sub	w0, w17, #0x1
    d410:	cmp	w13, w0
    d414:	b.ls	dacc <grub_unicode_aglomerate_comb+0x17b4>  // b.plast
    d418:	add	w16, w26, #0x1
    d41c:	sub	x16, x16, x3
    d420:	lsl	x16, x16, #5
    d424:	mov	w18, #0x0                   	// #0
    d428:	b	d590 <grub_unicode_aglomerate_comb+0x1278>
    d42c:	mov	x1, x11
    d430:	ldrb	w0, [x11, #5]
    d434:	and	w0, w0, #0x3f
    d438:	cmp	w0, w13
    d43c:	b.cs	d484 <grub_unicode_aglomerate_comb+0x116c>  // b.hs, b.nlast
    d440:	add	w3, w3, #0x1
    d444:	add	x11, x11, #0x20
    d448:	cmp	w20, w3
    d44c:	b.eq	d580 <grub_unicode_aglomerate_comb+0x1268>  // b.none
    d450:	cmp	w26, w3
    d454:	b.eq	d42c <grub_unicode_aglomerate_comb+0x1114>  // b.none
    d458:	mov	x1, x11
    d45c:	ldrb	w0, [x11, #5]
    d460:	and	w0, w0, #0x3f
    d464:	cmp	w0, w13
    d468:	b.cc	d440 <grub_unicode_aglomerate_comb+0x1128>  // b.lo, b.ul, b.last
    d46c:	sub	w0, w3, #0x1
    d470:	add	x0, x28, x0, lsl #5
    d474:	ldrb	w0, [x0, #5]
    d478:	and	w0, w0, #0x3f
    d47c:	cmp	w0, w13
    d480:	csel	w15, w15, w3, cs  // cs = hs, nlast
    d484:	add	w0, w3, #0x1
    d488:	cmp	w20, w0
    d48c:	b.eq	d4a4 <grub_unicode_aglomerate_comb+0x118c>  // b.none
    d490:	add	x0, x16, x11
    d494:	ldrb	w0, [x0, #5]
    d498:	and	w0, w0, #0x3f
    d49c:	cmp	w0, w13
    d4a0:	b.cs	dbdc <grub_unicode_aglomerate_comb+0x18c4>  // b.hs, b.nlast
    d4a4:	cbz	x27, d4f0 <grub_unicode_aglomerate_comb+0x11d8>
    d4a8:	ubfiz	x0, x15, #5, #32
    d4ac:	add	x0, x28, x0
    d4b0:	ldr	x0, [x0, #16]
    d4b4:	lsl	x0, x0, #2
    d4b8:	ldrh	w10, [x27, x0]
    d4bc:	ubfx	x10, x10, #1, #15
    d4c0:	ldr	x0, [x1, #16]
    d4c4:	lsl	x0, x0, #2
    d4c8:	ldrh	w0, [x27, x0]
    d4cc:	ubfx	x0, x0, #1, #15
    d4d0:	sub	w12, w3, w15
    d4d4:	add	w1, w15, #0x1
    d4d8:	add	w12, w1, w12, lsr #1
    d4dc:	mov	w2, w15
    d4e0:	add	w14, w3, w15
    d4e4:	add	w10, w10, w0
    d4e8:	and	w10, w10, #0xffff
    d4ec:	b	d508 <grub_unicode_aglomerate_comb+0x11f0>
    d4f0:	mov	w0, w18
    d4f4:	mov	w10, w18
    d4f8:	b	d4d0 <grub_unicode_aglomerate_comb+0x11b8>
    d4fc:	add	w2, w2, #0x1
    d500:	cmp	w12, w2
    d504:	b.eq	d440 <grub_unicode_aglomerate_comb+0x1128>  // b.none
    d508:	ubfiz	x1, x2, #5, #32
    d50c:	add	x1, x28, x1
    d510:	ldp	x8, x9, [x1]
    d514:	stp	x8, x9, [sp, #240]
    d518:	ldp	x4, x5, [x1, #16]
    d51c:	stp	x4, x5, [sp, #256]
    d520:	sub	w0, w14, w2
    d524:	add	x0, x28, x0, lsl #5
    d528:	ldp	x6, x7, [x0]
    d52c:	stp	x6, x7, [x1]
    d530:	ldp	x6, x7, [x0, #16]
    d534:	stp	x6, x7, [x1, #16]
    d538:	stp	x8, x9, [x0]
    d53c:	stp	x4, x5, [x0, #16]
    d540:	cbz	x27, d4fc <grub_unicode_aglomerate_comb+0x11e4>
    d544:	ldr	x4, [x1, #16]
    d548:	lsl	x4, x4, #2
    d54c:	ldrh	w1, [x27, x4]
    d550:	ubfx	x5, x1, #1, #15
    d554:	sub	w5, w10, w5
    d558:	bfi	w1, w5, #1, #15
    d55c:	strh	w1, [x27, x4]
    d560:	ldr	x1, [x0, #16]
    d564:	lsl	x1, x1, #2
    d568:	ldrh	w0, [x27, x1]
    d56c:	ubfx	x4, x0, #1, #15
    d570:	sub	w4, w10, w4
    d574:	bfi	w0, w4, #1, #15
    d578:	strh	w0, [x27, x1]
    d57c:	b	d4fc <grub_unicode_aglomerate_comb+0x11e4>
    d580:	sub	w0, w13, #0x1
    d584:	cmp	w17, w13
    d588:	b.eq	dacc <grub_unicode_aglomerate_comb+0x17b4>  // b.none
    d58c:	mov	w13, w0
    d590:	mov	x11, x19
    d594:	mov	w15, w26
    d598:	mov	w3, w26
    d59c:	b	d450 <grub_unicode_aglomerate_comb+0x1138>
    d5a0:	bl	b9e8 <grub_context_fini+0x28>
    d5a4:	b	d678 <grub_unicode_aglomerate_comb+0x1360>
    d5a8:	ldrsb	w0, [x0, w22, uxtw]
    d5ac:	lsr	w0, w0, #31
    d5b0:	b	d5f8 <grub_unicode_aglomerate_comb+0x12e0>
    d5b4:	add	x2, x2, #0x6
    d5b8:	ldrh	w0, [x2, #2]
    d5bc:	ubfx	x0, x0, #5, #9
    d5c0:	cbz	w0, d6b0 <grub_unicode_aglomerate_comb+0x1398>
    d5c4:	ldrb	w3, [x2]
    d5c8:	ldrb	w1, [x2, #1]
    d5cc:	orr	x3, x3, x1, lsl #8
    d5d0:	ldrb	w1, [x2, #2]
    d5d4:	ubfiz	x1, x1, #16, #5
    d5d8:	orr	x1, x1, x3
    d5dc:	cmp	w19, w1
    d5e0:	b.cc	d5b4 <grub_unicode_aglomerate_comb+0x129c>  // b.lo, b.ul, b.last
    d5e4:	add	w1, w0, w1
    d5e8:	cmp	w19, w1
    d5ec:	b.cs	d5b4 <grub_unicode_aglomerate_comb+0x129c>  // b.hs, b.nlast
    d5f0:	ldrb	w0, [x2, #5]
    d5f4:	ubfx	x0, x0, #3, #1
    d5f8:	cbz	w0, d6b0 <grub_unicode_aglomerate_comb+0x1398>
    d5fc:	ldrb	w0, [x24, #5]
    d600:	tst	x0, #0x3f
    d604:	b.eq	d650 <grub_unicode_aglomerate_comb+0x1338>  // b.none
    d608:	ldrb	w1, [x24, #4]
    d60c:	and	w2, w1, #0x1f
    d610:	orr	w0, w2, #0x1
    d614:	bfxil	w1, w0, #0, #5
    d618:	strb	w1, [x24, #4]
    d61c:	tst	w2, #0x1e
    d620:	b.eq	d650 <grub_unicode_aglomerate_comb+0x1338>  // b.none
    d624:	mov	w1, #0xa                   	// #10
    d628:	and	w1, w0, w1
    d62c:	mov	w2, #0x14                  	// #20
    d630:	and	w2, w0, w2
    d634:	asr	w2, w2, #1
    d638:	orr	w1, w2, w1, lsl #1
    d63c:	and	w0, w0, #0x1
    d640:	orr	w0, w1, w0
    d644:	ldrb	w1, [x24, #4]
    d648:	bfxil	w1, w0, #0, #5
    d64c:	strb	w1, [x24, #4]
    d650:	add	x23, x23, #0x20
    d654:	cmp	x28, x23
    d658:	b.eq	d6d0 <grub_unicode_aglomerate_comb+0x13b8>  // b.none
    d65c:	mov	x24, x23
    d660:	ldr	w22, [x23]
    d664:	ubfx	x22, x22, #0, #23
    d668:	mov	w19, w22
    d66c:	ldr	x0, [x25]
    d670:	ldr	x0, [x0]
    d674:	cbz	x0, d5a0 <grub_unicode_aglomerate_comb+0x1288>
    d678:	ldr	x0, [x25]
    d67c:	ldr	x0, [x0]
    d680:	cmp	x0, #0x0
    d684:	mov	w1, #0x1ffff               	// #131071
    d688:	ccmp	w22, w1, #0x2, ne  // ne = any
    d68c:	b.ls	d5a8 <grub_unicode_aglomerate_comb+0x1290>  // b.plast
    d690:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    d694:	ldr	x0, [x0]
    d698:	ldrh	w0, [x0, #2]
    d69c:	ubfx	x0, x0, #5, #9
    d6a0:	cbz	w0, d6b0 <grub_unicode_aglomerate_comb+0x1398>
    d6a4:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    d6a8:	ldr	x2, [x1]
    d6ac:	b	d5c4 <grub_unicode_aglomerate_comb+0x12ac>
    d6b0:	ldrb	w1, [x24, #4]
    d6b4:	and	w0, w1, #0x1f
    d6b8:	tst	w1, #0x1e
    d6bc:	b.eq	d650 <grub_unicode_aglomerate_comb+0x1338>  // b.none
    d6c0:	ldrb	w1, [x24, #5]
    d6c4:	tst	x1, #0x3f
    d6c8:	b.eq	d650 <grub_unicode_aglomerate_comb+0x1338>  // b.none
    d6cc:	b	d624 <grub_unicode_aglomerate_comb+0x130c>
    d6d0:	mov	w23, #0x0                   	// #0
    d6d4:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    d6d8:	str	w26, [sp, #188]
    d6dc:	ldr	x28, [sp, #168]
    d6e0:	b	d78c <grub_unicode_aglomerate_comb+0x1474>
    d6e4:	bl	bb18 <grub_context_fini+0x158>
    d6e8:	b	d7a8 <grub_unicode_aglomerate_comb+0x1490>
    d6ec:	mov	w23, #0x0                   	// #0
    d6f0:	b	d780 <grub_unicode_aglomerate_comb+0x1468>
    d6f4:	ldrb	w0, [x0, w22, uxtw]
    d6f8:	b	d740 <grub_unicode_aglomerate_comb+0x1428>
    d6fc:	add	x2, x2, #0x6
    d700:	ldrh	w0, [x2, #2]
    d704:	ubfx	x0, x0, #5, #9
    d708:	cbz	w0, d7d8 <grub_unicode_aglomerate_comb+0x14c0>
    d70c:	ldrb	w3, [x2]
    d710:	ldrb	w1, [x2, #1]
    d714:	orr	x3, x3, x1, lsl #8
    d718:	ldrb	w1, [x2, #2]
    d71c:	ubfiz	x1, x1, #16, #5
    d720:	orr	x1, x1, x3
    d724:	cmp	w19, w1
    d728:	b.cc	d6fc <grub_unicode_aglomerate_comb+0x13e4>  // b.lo, b.ul, b.last
    d72c:	add	w1, w0, w1
    d730:	cmp	w19, w1
    d734:	b.cs	d6fc <grub_unicode_aglomerate_comb+0x13e4>  // b.hs, b.nlast
    d738:	ldrb	w0, [x2, #5]
    d73c:	ubfx	x0, x0, #4, #3
    d740:	ldrb	w1, [x26, #4]
    d744:	and	w2, w1, #0x1f
    d748:	tbnz	w1, #3, d76c <grub_unicode_aglomerate_comb+0x1454>
    d74c:	and	w1, w0, #0xfffffffd
    d750:	cmp	w1, #0x1
    d754:	b.ne	d76c <grub_unicode_aglomerate_comb+0x1454>  // b.any
    d758:	cbz	w23, d7e0 <grub_unicode_aglomerate_comb+0x14c8>
    d75c:	orr	w2, w2, #0x2
    d760:	ldrb	w1, [x26, #4]
    d764:	bfxil	w1, w2, #0, #5
    d768:	strb	w1, [x26, #4]
    d76c:	cmp	w0, #0x1
    d770:	b.ls	d7f8 <grub_unicode_aglomerate_comb+0x14e0>  // b.plast
    d774:	sub	w0, w0, #0x2
    d778:	cmp	w0, #0x2
    d77c:	csinc	w23, w23, wzr, hi  // hi = pmore
    d780:	add	x21, x21, #0x20
    d784:	cmp	x21, x28
    d788:	b.eq	dbac <grub_unicode_aglomerate_comb+0x1894>  // b.none
    d78c:	mov	x26, x21
    d790:	ldr	w22, [x21]
    d794:	ubfx	x22, x22, #0, #23
    d798:	mov	w19, w22
    d79c:	ldr	x0, [x25]
    d7a0:	ldr	x0, [x0, #8]
    d7a4:	cbz	x0, d6e4 <grub_unicode_aglomerate_comb+0x13cc>
    d7a8:	ldr	x0, [x25]
    d7ac:	ldr	x0, [x0, #8]
    d7b0:	cmp	x0, #0x0
    d7b4:	mov	w1, #0x1ffff               	// #131071
    d7b8:	ccmp	w22, w1, #0x2, ne  // ne = any
    d7bc:	b.ls	d6f4 <grub_unicode_aglomerate_comb+0x13dc>  // b.plast
    d7c0:	ldr	x0, [x24]
    d7c4:	ldrh	w0, [x0, #2]
    d7c8:	ubfx	x0, x0, #5, #9
    d7cc:	cbz	w0, d6ec <grub_unicode_aglomerate_comb+0x13d4>
    d7d0:	ldr	x2, [x24]
    d7d4:	b	d70c <grub_unicode_aglomerate_comb+0x13f4>
    d7d8:	mov	w23, #0x0                   	// #0
    d7dc:	b	d780 <grub_unicode_aglomerate_comb+0x1468>
    d7e0:	mov	w1, #0x1d                  	// #29
    d7e4:	and	w2, w2, w1
    d7e8:	ldrb	w1, [x26, #4]
    d7ec:	bfxil	w1, w2, #0, #5
    d7f0:	strb	w1, [x26, #4]
    d7f4:	b	d76c <grub_unicode_aglomerate_comb+0x1454>
    d7f8:	mov	w23, #0x0                   	// #0
    d7fc:	b	d780 <grub_unicode_aglomerate_comb+0x1468>
    d800:	bl	bb18 <grub_context_fini+0x158>
    d804:	b	d8e8 <grub_unicode_aglomerate_comb+0x15d0>
    d808:	ldrb	w0, [x0, w21, uxtw]
    d80c:	b	d854 <grub_unicode_aglomerate_comb+0x153c>
    d810:	add	x2, x2, #0x6
    d814:	ldrh	w0, [x2, #2]
    d818:	ubfx	x0, x0, #5, #9
    d81c:	cbz	w0, da5c <grub_unicode_aglomerate_comb+0x1744>
    d820:	ldrb	w3, [x2]
    d824:	ldrb	w1, [x2, #1]
    d828:	orr	x3, x3, x1, lsl #8
    d82c:	ldrb	w1, [x2, #2]
    d830:	ubfiz	x1, x1, #16, #5
    d834:	orr	x1, x1, x3
    d838:	cmp	w19, w1
    d83c:	b.cc	d810 <grub_unicode_aglomerate_comb+0x14f8>  // b.lo, b.ul, b.last
    d840:	add	w1, w0, w1
    d844:	cmp	w19, w1
    d848:	b.cs	d810 <grub_unicode_aglomerate_comb+0x14f8>  // b.hs, b.nlast
    d84c:	ldrb	w0, [x2, #5]
    d850:	ubfx	x0, x0, #4, #3
    d854:	ldrb	w1, [x26, #4]
    d858:	and	w2, w1, #0x1f
    d85c:	tbnz	w1, #4, d8a0 <grub_unicode_aglomerate_comb+0x1588>
    d860:	sub	w1, w0, #0x2
    d864:	cmp	w1, #0x1
    d868:	b.hi	d8a0 <grub_unicode_aglomerate_comb+0x1588>  // b.pmore
    d86c:	cbz	w23, d884 <grub_unicode_aglomerate_comb+0x156c>
    d870:	orr	w2, w2, #0x4
    d874:	ldrb	w1, [x26, #4]
    d878:	bfxil	w1, w2, #0, #5
    d87c:	strb	w1, [x26, #4]
    d880:	b	d8a0 <grub_unicode_aglomerate_comb+0x1588>
    d884:	mov	w1, #0x1b                  	// #27
    d888:	and	w2, w2, w1
    d88c:	ldrb	w1, [x26, #4]
    d890:	bfxil	w1, w2, #0, #5
    d894:	strb	w1, [x26, #4]
    d898:	b	d8a0 <grub_unicode_aglomerate_comb+0x1588>
    d89c:	mov	w0, #0x0                   	// #0
    d8a0:	tst	w0, #0xfffffffd
    d8a4:	csel	w23, w23, wzr, ne  // ne = any
    d8a8:	sub	w1, w0, #0x3
    d8ac:	cmp	w1, #0x1
    d8b0:	ccmp	w0, #0x1, #0x4, hi  // hi = pmore
    d8b4:	csinc	w23, w23, wzr, ne  // ne = any
    d8b8:	subs	w24, w24, #0x1
    d8bc:	b.mi	d92c <grub_unicode_aglomerate_comb+0x1614>  // b.first
    d8c0:	sub	x22, x22, #0x20
    d8c4:	cmp	w24, w28
    d8c8:	b.eq	d920 <grub_unicode_aglomerate_comb+0x1608>  // b.none
    d8cc:	mov	x26, x22
    d8d0:	ldr	w21, [x22]
    d8d4:	ubfx	x21, x21, #0, #23
    d8d8:	mov	w19, w21
    d8dc:	ldr	x0, [x25]
    d8e0:	ldr	x0, [x0, #8]
    d8e4:	cbz	x0, d800 <grub_unicode_aglomerate_comb+0x14e8>
    d8e8:	ldr	x0, [x25]
    d8ec:	ldr	x0, [x0, #8]
    d8f0:	cmp	x0, #0x0
    d8f4:	mov	w1, #0x1ffff               	// #131071
    d8f8:	ccmp	w21, w1, #0x2, ne  // ne = any
    d8fc:	b.ls	d808 <grub_unicode_aglomerate_comb+0x14f0>  // b.plast
    d900:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    d904:	ldr	x0, [x0]
    d908:	ldrh	w0, [x0, #2]
    d90c:	ubfx	x0, x0, #5, #9
    d910:	cbz	w0, da5c <grub_unicode_aglomerate_comb+0x1744>
    d914:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    d918:	ldr	x2, [x1]
    d91c:	b	d820 <grub_unicode_aglomerate_comb+0x1508>
    d920:	ldr	x28, [sp, #168]
    d924:	ldr	w26, [sp, #176]
    d928:	b	d934 <grub_unicode_aglomerate_comb+0x161c>
    d92c:	ldr	x28, [sp, #168]
    d930:	ldr	w26, [sp, #176]
    d934:	sub	w19, w20, w26
    d938:	lsl	x19, x19, #5
    d93c:	ubfiz	x1, x26, #5, #32
    d940:	mov	x2, x19
    d944:	add	x1, x28, x1
    d948:	ldr	x21, [sp, #120]
    d94c:	mov	x0, x21
    d950:	bl	0 <grub_memmove>
    d954:	add	x0, x21, x19
    d958:	str	x0, [sp, #120]
    d95c:	ldr	x0, [sp, #112]
    d960:	cmp	x0, w20, uxtw
    d964:	b.eq	d99c <grub_unicode_aglomerate_comb+0x1684>  // b.none
    d968:	ldr	w0, [sp, #184]
    d96c:	cbnz	w0, d9e8 <grub_unicode_aglomerate_comb+0x16d0>
    d970:	mov	x2, #0x20                  	// #32
    d974:	mov	w1, #0x0                   	// #0
    d978:	ldr	x19, [sp, #120]
    d97c:	mov	x0, x19
    d980:	bl	0 <grub_memset>
    d984:	mov	x2, x19
    d988:	ldr	w0, [x19]
    d98c:	mov	w1, #0xa                   	// #10
    d990:	bfxil	w0, w1, #0, #23
    d994:	str	w0, [x2], #32
    d998:	str	x2, [sp, #120]
    d99c:	ldr	x0, [sp, #160]
    d9a0:	cmp	x0, w20, sxtw
    d9a4:	cinc	w26, w20, eq  // eq = none
    d9a8:	cbz	x27, d288 <grub_unicode_aglomerate_comb+0xf70>
    d9ac:	mov	w0, w26
    d9b0:	ldr	x1, [sp, #112]
    d9b4:	cmp	x1, w26, uxtw
    d9b8:	b.eq	d288 <grub_unicode_aglomerate_comb+0xf70>  // b.none
    d9bc:	add	x0, x28, x0, lsl #5
    d9c0:	ldr	x1, [x0, #16]
    d9c4:	lsl	x1, x1, #2
    d9c8:	ldrh	w2, [x27, x1]
    d9cc:	and	w2, w2, #0x1
    d9d0:	strh	w2, [x27, x1]
    d9d4:	ldr	x0, [x0, #16]
    d9d8:	add	x0, x27, x0, lsl #2
    d9dc:	ldrh	w1, [sp, #132]
    d9e0:	strh	w1, [x0, #2]
    d9e4:	b	d288 <grub_unicode_aglomerate_comb+0xf70>
    d9e8:	mov	x2, #0x20                  	// #32
    d9ec:	mov	w1, #0x0                   	// #0
    d9f0:	ldr	x19, [sp, #120]
    d9f4:	mov	x0, x19
    d9f8:	bl	0 <grub_memset>
    d9fc:	mov	x1, x19
    da00:	ldr	w0, [x19]
    da04:	ldr	w2, [sp, #184]
    da08:	bfxil	w0, w2, #0, #23
    da0c:	str	w0, [x1], #32
    da10:	str	x1, [sp, #120]
    da14:	b	d970 <grub_unicode_aglomerate_comb+0x1658>
    da18:	ldr	x0, [sp, #120]
    da1c:	ldr	x1, [sp, #208]
    da20:	sub	x19, x0, x1
    da24:	asr	x19, x19, #5
    da28:	ldp	x25, x26, [sp, #64]
    da2c:	mov	x0, x28
    da30:	bl	0 <grub_free>
    da34:	mov	x0, x19
    da38:	ldp	x19, x20, [sp, #16]
    da3c:	ldp	x21, x22, [sp, #32]
    da40:	ldp	x23, x24, [sp, #48]
    da44:	ldp	x27, x28, [sp, #80]
    da48:	ldp	x29, x30, [sp]
    da4c:	add	sp, sp, #0x310
    da50:	ret
    da54:	mov	x19, #0xffffffffffffffff    	// #-1
    da58:	b	da34 <grub_unicode_aglomerate_comb+0x171c>
    da5c:	ldrb	w0, [x26, #4]
    da60:	tbz	w0, #4, d89c <grub_unicode_aglomerate_comb+0x1584>
    da64:	mov	w23, #0x0                   	// #0
    da68:	b	d8b8 <grub_unicode_aglomerate_comb+0x15a0>
    da6c:	ldr	w1, [sp, #132]
    da70:	add	w1, w1, #0x1
    da74:	str	w1, [sp, #132]
    da78:	ldr	x1, [sp, #160]
    da7c:	cmp	x1, w26, sxtw
    da80:	b.gt	d3a0 <grub_unicode_aglomerate_comb+0x1088>
    da84:	ldr	w1, [sp, #792]
    da88:	orr	w1, w1, w26
    da8c:	cmp	w1, #0x0
    da90:	ldr	x1, [sp, #200]
    da94:	ccmp	x1, #0x0, #0x4, eq  // eq = none
    da98:	b.eq	d3b8 <grub_unicode_aglomerate_comb+0x10a0>  // b.none
    da9c:	ldr	w2, [sp, #132]
    daa0:	cmp	w2, #0x1
    daa4:	b.ne	d3c4 <grub_unicode_aglomerate_comb+0x10ac>  // b.any
    daa8:	ldr	x2, [sp, #104]
    daac:	sub	x1, x2, x1
    dab0:	ldr	x2, [sp, #216]
    dab4:	cmp	x2, x1
    dab8:	b.ls	d3d0 <grub_unicode_aglomerate_comb+0x10b8>  // b.plast
    dabc:	str	x1, [sp, #104]
    dac0:	mov	w20, #0x0                   	// #0
    dac4:	cmp	w26, w20
    dac8:	b.cs	d934 <grub_unicode_aglomerate_comb+0x161c>  // b.hs, b.nlast
    dacc:	ubfiz	x21, x26, #5, #32
    dad0:	add	x21, x28, x21
    dad4:	mvn	w0, w26
    dad8:	add	w0, w0, w20
    dadc:	add	x0, x0, w26, uxtw
    dae0:	add	x1, x28, #0x20
    dae4:	add	x0, x1, x0, lsl #5
    dae8:	str	x0, [sp, #168]
    daec:	mov	x23, x21
    daf0:	str	x28, [sp, #176]
    daf4:	mov	x28, x0
    daf8:	b	d65c <grub_unicode_aglomerate_comb+0x1344>
    dafc:	ldp	x25, x26, [sp, #64]
    db00:	mov	x19, #0x0                   	// #0
    db04:	b	da2c <grub_unicode_aglomerate_comb+0x1714>
    db08:	ldp	x25, x26, [sp, #64]
    db0c:	b	db00 <grub_unicode_aglomerate_comb+0x17e8>
    db10:	cmp	w3, w5
    db14:	b.eq	db38 <grub_unicode_aglomerate_comb+0x1820>  // b.none
    db18:	ubfiz	x0, x3, #5, #32
    db1c:	add	x0, x28, x0
    db20:	ldr	w0, [x0, #4]
    db24:	and	w0, w0, #0x7c000
    db28:	cmp	w0, #0x20, lsl #12
    db2c:	b.eq	ce20 <grub_unicode_aglomerate_comb+0xb08>  // b.none
    db30:	cmp	w1, w5
    db34:	b.cs	db68 <grub_unicode_aglomerate_comb+0x1850>  // b.hs, b.nlast
    db38:	ubfiz	x0, x1, #5, #32
    db3c:	add	x0, x28, x0
    db40:	ldr	w2, [x0, #4]
    db44:	and	w2, w2, #0x7c000
    db48:	cmp	w2, #0x28, lsl #12
    db4c:	b.ne	db68 <grub_unicode_aglomerate_comb+0x1850>  // b.any
    db50:	ldr	w2, [x0, #4]
    db54:	bfi	w2, w15, #14, #5
    db58:	str	w2, [x0, #4]
    db5c:	add	w1, w1, #0x1
    db60:	cmp	w1, w5
    db64:	b.cc	db38 <grub_unicode_aglomerate_comb+0x1820>  // b.lo, b.ul, b.last
    db68:	sub	w1, w1, #0x1
    db6c:	b	cd08 <grub_unicode_aglomerate_comb+0x9f0>
    db70:	b.eq	db90 <grub_unicode_aglomerate_comb+0x1878>  // b.none
    db74:	ubfiz	x0, x1, #5, #32
    db78:	add	x0, x28, x0
    db7c:	ldr	w0, [x0, #4]
    db80:	and	w0, w0, #0x7c000
    db84:	cmp	w0, #0x20, lsl #12
    db88:	b.ne	db30 <grub_unicode_aglomerate_comb+0x1818>  // b.any
    db8c:	b	ce50 <grub_unicode_aglomerate_comb+0xb38>
    db90:	mov	w1, w5
    db94:	b	db68 <grub_unicode_aglomerate_comb+0x1850>
    db98:	mov	w5, w6
    db9c:	cbnz	w6, cc78 <grub_unicode_aglomerate_comb+0x960>
    dba0:	mov	w5, w6
    dba4:	mov	w9, w18
    dba8:	b	cc90 <grub_unicode_aglomerate_comb+0x978>
    dbac:	ldr	x28, [sp, #176]
    dbb0:	ldr	w26, [sp, #188]
    dbb4:	subs	w24, w20, #0x1
    dbb8:	b.mi	d934 <grub_unicode_aglomerate_comb+0x161c>  // b.first
    dbbc:	sbfiz	x22, x24, #5, #32
    dbc0:	add	x22, x28, x22
    dbc4:	sub	w0, w26, #0x1
    dbc8:	mov	w23, #0x0                   	// #0
    dbcc:	str	x28, [sp, #168]
    dbd0:	str	w26, [sp, #176]
    dbd4:	mov	w28, w0
    dbd8:	b	d8cc <grub_unicode_aglomerate_comb+0x15b4>
    dbdc:	add	w3, w3, #0x1
    dbe0:	add	x11, x11, #0x20
    dbe4:	b	d450 <grub_unicode_aglomerate_comb+0x1138>
	...

000000000000dbf8 <grub_bidi_logical_to_visual>:
    dbf8:	sub	sp, sp, #0xa0
    dbfc:	stp	x29, x30, [sp, #32]
    dc00:	add	x29, sp, #0x20
    dc04:	stp	x19, x20, [sp, #48]
    dc08:	stp	x23, x24, [sp, #80]
    dc0c:	stp	x25, x26, [sp, #96]
    dc10:	stp	x27, x28, [sp, #112]
    dc14:	mov	x23, x0
    dc18:	mov	x24, x1
    dc1c:	mov	x19, x2
    dc20:	str	x2, [sp, #152]
    dc24:	str	x3, [sp, #136]
    dc28:	str	x4, [sp, #144]
    dc2c:	mov	x26, x5
    dc30:	mov	x25, x6
    dc34:	mov	w27, w7
    dc38:	add	x0, x1, x1, lsl #1
    dc3c:	lsl	x0, x0, #5
    dc40:	add	x0, x0, #0xc0
    dc44:	bl	0 <grub_malloc>
    dc48:	str	x0, [x19]
    dc4c:	cbz	x0, ddc0 <grub_bidi_logical_to_visual+0x1c8>
    dc50:	stp	x21, x22, [sp, #64]
    dc54:	mov	x20, x0
    dc58:	add	x21, x23, x24, lsl #2
    dc5c:	cmp	x23, x21
    dc60:	b.hi	dd8c <grub_bidi_logical_to_visual+0x194>  // b.pmore
    dc64:	mov	x19, x23
    dc68:	mov	w28, #0xa                   	// #10
    dc6c:	mov	w22, #0x200e                	// #8206
    dc70:	b	dd0c <grub_bidi_logical_to_visual+0x114>
    dc74:	ldr	x0, [sp, #152]
    dc78:	ldr	x0, [x0]
    dc7c:	bl	0 <grub_free>
    dc80:	ldp	x21, x22, [sp, #64]
    dc84:	b	dda0 <grub_bidi_logical_to_visual+0x1a8>
    dc88:	add	x2, x20, x4, lsl #5
    dc8c:	ldp	x6, x7, [x3]
    dc90:	stp	x6, x7, [x2]
    dc94:	ldp	x6, x7, [x3, #16]
    dc98:	stp	x6, x7, [x2, #16]
    dc9c:	add	x4, x4, #0x1
    dca0:	add	x1, x1, #0x20
    dca4:	cmp	x1, x23
    dca8:	b.eq	dcd0 <grub_bidi_logical_to_visual+0xd8>  // b.none
    dcac:	mov	x3, x1
    dcb0:	ldrh	w2, [x1, #6]
    dcb4:	tst	w2, #0x7f8
    dcb8:	b.ne	dc88 <grub_bidi_logical_to_visual+0x90>  // b.any
    dcbc:	ldr	w2, [x1]
    dcc0:	and	w2, w2, #0x7ffffe
    dcc4:	cmp	w2, w22
    dcc8:	b.eq	dca0 <grub_bidi_logical_to_visual+0xa8>  // b.none
    dccc:	b	dc88 <grub_bidi_logical_to_visual+0x90>
    dcd0:	add	x20, x20, x4, lsl #5
    dcd4:	cmp	x21, x19
    dcd8:	b.eq	dd80 <grub_bidi_logical_to_visual+0x188>  // b.none
    dcdc:	mov	x2, #0x20                  	// #32
    dce0:	mov	w1, #0x0                   	// #0
    dce4:	mov	x0, x20
    dce8:	bl	0 <grub_memset>
    dcec:	ldr	w0, [x20]
    dcf0:	bfxil	w0, w28, #0, #23
    dcf4:	str	w0, [x20], #32
    dcf8:	add	x23, x19, #0x4
    dcfc:	mov	x25, #0x0                   	// #0
    dd00:	add	x19, x19, #0x4
    dd04:	cmp	x19, x21
    dd08:	b.hi	dd8c <grub_bidi_logical_to_visual+0x194>  // b.pmore
    dd0c:	cmp	x21, x19
    dd10:	b.eq	dd20 <grub_bidi_logical_to_visual+0x128>  // b.none
    dd14:	ldr	w0, [x19]
    dd18:	cmp	w0, #0xa
    dd1c:	b.ne	dd00 <grub_bidi_logical_to_visual+0x108>  // b.any
    dd20:	sub	x1, x19, x23
    dd24:	str	x24, [sp, #16]
    dd28:	ldr	w0, [sp, #168]
    dd2c:	str	w0, [sp, #8]
    dd30:	ldr	x0, [sp, #160]
    dd34:	str	x0, [sp]
    dd38:	mov	w7, w27
    dd3c:	mov	x6, x25
    dd40:	mov	x5, x26
    dd44:	ldr	x4, [sp, #144]
    dd48:	ldr	x3, [sp, #136]
    dd4c:	mov	x2, x20
    dd50:	asr	x1, x1, #2
    dd54:	mov	x0, x23
    dd58:	bl	c638 <grub_unicode_aglomerate_comb+0x320>
    dd5c:	mov	x23, x0
    dd60:	tbnz	x0, #63, dc74 <grub_bidi_logical_to_visual+0x7c>
    dd64:	mov	x4, #0x0                   	// #0
    dd68:	cmp	x0, #0x0
    dd6c:	b.le	dcd0 <grub_bidi_logical_to_visual+0xd8>
    dd70:	mov	x1, x20
    dd74:	add	x23, x20, x0, lsl #5
    dd78:	mov	x4, #0x0                   	// #0
    dd7c:	b	dcac <grub_bidi_logical_to_visual+0xb4>
    dd80:	mov	x23, x19
    dd84:	mov	x25, #0x0                   	// #0
    dd88:	b	dd00 <grub_bidi_logical_to_visual+0x108>
    dd8c:	ldr	x0, [sp, #152]
    dd90:	ldr	x23, [x0]
    dd94:	sub	x20, x20, x23
    dd98:	asr	x23, x20, #5
    dd9c:	ldp	x21, x22, [sp, #64]
    dda0:	mov	x0, x23
    dda4:	ldp	x19, x20, [sp, #48]
    dda8:	ldp	x23, x24, [sp, #80]
    ddac:	ldp	x25, x26, [sp, #96]
    ddb0:	ldp	x27, x28, [sp, #112]
    ddb4:	ldp	x29, x30, [sp, #32]
    ddb8:	add	sp, sp, #0xa0
    ddbc:	ret
    ddc0:	mov	x23, #0xffffffffffffffff    	// #-1
    ddc4:	b	dda0 <grub_bidi_logical_to_visual+0x1a8>

000000000000ddc8 <grub_unicode_mirror_code>:
    ddc8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    ddcc:	ldr	x1, [x1]
    ddd0:	ldr	w1, [x1]
    ddd4:	cbz	w1, de0c <grub_unicode_mirror_code+0x44>
    ddd8:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    dddc:	ldr	x3, [x2]
    dde0:	mov	w2, #0x0                   	// #0
    dde4:	cmp	w0, w1
    dde8:	b.eq	ddfc <grub_unicode_mirror_code+0x34>  // b.none
    ddec:	add	w2, w2, #0x1
    ddf0:	ldr	w1, [x3, #8]!
    ddf4:	cbnz	w1, dde4 <grub_unicode_mirror_code+0x1c>
    ddf8:	b	de0c <grub_unicode_mirror_code+0x44>
    ddfc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    de00:	ldr	x0, [x0]
    de04:	add	x2, x0, w2, sxtw #3
    de08:	ldr	w0, [x2, #4]
    de0c:	ret
	...

000000000000de18 <grub_unicode_shape_code>:
    de18:	and	w1, w1, #0xff
    de1c:	sub	w2, w0, #0x600
    de20:	cmp	w2, #0xff
    de24:	b.hi	de9c <grub_unicode_shape_code+0x84>  // b.pmore
    de28:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    de2c:	ldr	x2, [x2]
    de30:	ldr	w2, [x2]
    de34:	cbz	w2, de9c <grub_unicode_shape_code+0x84>
    de38:	adrp	x3, 0 <grub_normal_free_menu-0x26c>
    de3c:	ldr	x3, [x3]
    de40:	and	w1, w1, #0x6
    de44:	b	de68 <grub_unicode_shape_code+0x50>
    de48:	cmp	w1, #0x6
    de4c:	b.ne	de60 <grub_unicode_shape_code+0x48>  // b.any
    de50:	ldr	w2, [x3, #12]
    de54:	b	de5c <grub_unicode_shape_code+0x44>
    de58:	ldr	w2, [x3, #4]
    de5c:	cbnz	w2, de98 <grub_unicode_shape_code+0x80>
    de60:	ldr	w2, [x3, #20]!
    de64:	cbz	w2, de9c <grub_unicode_shape_code+0x84>
    de68:	cmp	w0, w2
    de6c:	b.ne	de60 <grub_unicode_shape_code+0x48>  // b.any
    de70:	cmp	w1, #0x4
    de74:	b.eq	de90 <grub_unicode_shape_code+0x78>  // b.none
    de78:	b.hi	de48 <grub_unicode_shape_code+0x30>  // b.pmore
    de7c:	cbz	w1, de58 <grub_unicode_shape_code+0x40>
    de80:	cmp	w1, #0x2
    de84:	b.ne	de60 <grub_unicode_shape_code+0x48>  // b.any
    de88:	ldr	w2, [x3, #16]
    de8c:	b	de5c <grub_unicode_shape_code+0x44>
    de90:	ldr	w2, [x3, #8]
    de94:	b	de5c <grub_unicode_shape_code+0x44>
    de98:	mov	w0, w2
    de9c:	ret
	...

000000000000dea8 <grub_unicode_get_comb_start>:
    dea8:	stp	x29, x30, [sp, #-48]!
    deac:	mov	x29, sp
    deb0:	stp	x19, x20, [sp, #16]
    deb4:	mov	x20, x0
    deb8:	cmp	x1, x0
    debc:	b.cc	df28 <grub_unicode_get_comb_start+0x80>  // b.lo, b.ul, b.last
    dec0:	stp	x21, x22, [sp, #32]
    dec4:	mov	x19, x1
    dec8:	mov	w21, #0xffff0200            	// #-65024
    decc:	mov	w22, #0xff00                	// #65280
    ded0:	movk	w22, #0xfff1, lsl #16
    ded4:	b	dee4 <grub_unicode_get_comb_start+0x3c>
    ded8:	sub	x19, x19, #0x4
    dedc:	cmp	x20, x19
    dee0:	b.hi	df1c <grub_unicode_get_comb_start+0x74>  // b.pmore
    dee4:	ldr	w0, [x19]
    dee8:	add	w1, w0, w21
    deec:	cmp	w1, #0xf
    def0:	b.ls	ded8 <grub_unicode_get_comb_start+0x30>  // b.plast
    def4:	add	w1, w0, w22
    def8:	cmp	w1, #0xef
    defc:	b.ls	ded8 <grub_unicode_get_comb_start+0x30>  // b.plast
    df00:	bl	c158 <grub_unicode_get_comb_type>
    df04:	cbnz	w0, ded8 <grub_unicode_get_comb_start+0x30>
    df08:	ldp	x21, x22, [sp, #32]
    df0c:	mov	x0, x19
    df10:	ldp	x19, x20, [sp, #16]
    df14:	ldp	x29, x30, [sp], #48
    df18:	ret
    df1c:	mov	x19, x20
    df20:	ldp	x21, x22, [sp, #32]
    df24:	b	df0c <grub_unicode_get_comb_start+0x64>
    df28:	mov	x19, x0
    df2c:	b	df0c <grub_unicode_get_comb_start+0x64>

000000000000df30 <grub_unicode_get_comb_end>:
    df30:	stp	x29, x30, [sp, #-48]!
    df34:	mov	x29, sp
    df38:	stp	x19, x20, [sp, #16]
    df3c:	mov	x20, x0
    df40:	cmp	x1, x0
    df44:	b.cs	dfb0 <grub_unicode_get_comb_end+0x80>  // b.hs, b.nlast
    df48:	stp	x21, x22, [sp, #32]
    df4c:	mov	x19, x1
    df50:	mov	w21, #0xffff0200            	// #-65024
    df54:	mov	w22, #0xff00                	// #65280
    df58:	movk	w22, #0xfff1, lsl #16
    df5c:	b	df6c <grub_unicode_get_comb_end+0x3c>
    df60:	add	x19, x19, #0x4
    df64:	cmp	x20, x19
    df68:	b.ls	dfa4 <grub_unicode_get_comb_end+0x74>  // b.plast
    df6c:	ldr	w0, [x19]
    df70:	add	w1, w0, w21
    df74:	cmp	w1, #0xf
    df78:	b.ls	df60 <grub_unicode_get_comb_end+0x30>  // b.plast
    df7c:	add	w1, w0, w22
    df80:	cmp	w1, #0xef
    df84:	b.ls	df60 <grub_unicode_get_comb_end+0x30>  // b.plast
    df88:	bl	c158 <grub_unicode_get_comb_type>
    df8c:	cbnz	w0, df60 <grub_unicode_get_comb_end+0x30>
    df90:	ldp	x21, x22, [sp, #32]
    df94:	mov	x0, x19
    df98:	ldp	x19, x20, [sp, #16]
    df9c:	ldp	x29, x30, [sp], #48
    dfa0:	ret
    dfa4:	mov	x19, x20
    dfa8:	ldp	x21, x22, [sp, #32]
    dfac:	b	df94 <grub_unicode_get_comb_end+0x64>
    dfb0:	mov	x19, x0
    dfb4:	b	df94 <grub_unicode_get_comb_end+0x64>

000000000000dfb8 <grub_file_getline>:
    dfb8:	stp	x29, x30, [sp, #-96]!
    dfbc:	mov	x29, sp
    dfc0:	stp	x21, x22, [sp, #32]
    dfc4:	stp	x23, x24, [sp, #48]
    dfc8:	mov	x24, x0
    dfcc:	mov	x0, #0x40                  	// #64
    dfd0:	bl	0 <grub_malloc>
    dfd4:	mov	x21, x0
    dfd8:	cbz	x0, e0a8 <grub_file_getline+0xf0>
    dfdc:	stp	x19, x20, [sp, #16]
    dfe0:	str	x25, [sp, #64]
    dfe4:	mov	x22, #0x40                  	// #64
    dfe8:	mov	x19, #0x0                   	// #0
    dfec:	mov	x25, #0x1                   	// #1
    dff0:	b	e020 <grub_file_getline+0x68>
    dff4:	mov	x0, x21
    dff8:	bl	0 <grub_free>
    dffc:	mov	x21, x23
    e000:	ldp	x19, x20, [sp, #16]
    e004:	ldr	x25, [sp, #64]
    e008:	b	e0a8 <grub_file_getline+0xf0>
    e00c:	ldrb	w1, [sp, #95]
    e010:	cmp	w1, #0xa
    e014:	b.eq	e09c <grub_file_getline+0xe4>  // b.none
    e018:	strb	w1, [x21, x19]
    e01c:	mov	x19, x20
    e020:	mov	x2, x25
    e024:	add	x1, sp, #0x5f
    e028:	mov	x0, x24
    e02c:	bl	0 <grub_file_read>
    e030:	cmp	x0, #0x1
    e034:	b.ne	e070 <grub_file_getline+0xb8>  // b.any
    e038:	ldrb	w1, [sp, #95]
    e03c:	cmp	w1, #0xd
    e040:	b.eq	e020 <grub_file_getline+0x68>  // b.none
    e044:	add	x20, x19, #0x1
    e048:	cmp	x20, x22
    e04c:	b.cc	e00c <grub_file_getline+0x54>  // b.lo, b.ul, b.last
    e050:	lsl	x22, x22, #1
    e054:	mov	x1, x22
    e058:	mov	x0, x21
    e05c:	bl	0 <grub_realloc>
    e060:	mov	x23, x0
    e064:	cbz	x0, dff4 <grub_file_getline+0x3c>
    e068:	mov	x21, x0
    e06c:	b	e00c <grub_file_getline+0x54>
    e070:	strb	wzr, [x21, x19]
    e074:	cbz	x19, e084 <grub_file_getline+0xcc>
    e078:	ldp	x19, x20, [sp, #16]
    e07c:	ldr	x25, [sp, #64]
    e080:	b	e0a8 <grub_file_getline+0xf0>
    e084:	mov	x0, x21
    e088:	bl	0 <grub_free>
    e08c:	mov	x21, #0x0                   	// #0
    e090:	ldp	x19, x20, [sp, #16]
    e094:	ldr	x25, [sp, #64]
    e098:	b	e0a8 <grub_file_getline+0xf0>
    e09c:	strb	wzr, [x21, x19]
    e0a0:	ldp	x19, x20, [sp, #16]
    e0a4:	ldr	x25, [sp, #64]
    e0a8:	mov	x0, x21
    e0ac:	ldp	x21, x22, [sp, #32]
    e0b0:	ldp	x23, x24, [sp, #48]
    e0b4:	ldp	x29, x30, [sp], #96
    e0b8:	ret
    e0bc:	nop

000000000000e0c0 <grub_normal_parse_line>:
    e0c0:	stp	x29, x30, [sp, #-32]!
    e0c4:	mov	x29, sp
    e0c8:	bl	e950 <grub_script_parse>
    e0cc:	cbz	x0, e0f0 <grub_normal_parse_line+0x30>
    e0d0:	str	x19, [sp, #16]
    e0d4:	mov	x19, x0
    e0d8:	bl	103b0 <grub_script_execute>
    e0dc:	ldr	w0, [x19]
    e0e0:	cbz	w0, e104 <grub_normal_parse_line+0x44>
    e0e4:	sub	w0, w0, #0x1
    e0e8:	str	w0, [x19]
    e0ec:	ldr	x19, [sp, #16]
    e0f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e0f4:	ldr	x0, [x0]
    e0f8:	ldr	w0, [x0]
    e0fc:	ldp	x29, x30, [sp], #32
    e100:	ret
    e104:	mov	x0, x19
    e108:	bl	e468 <grub_script_free>
    e10c:	ldr	x19, [sp, #16]
    e110:	b	e0f0 <grub_normal_parse_line+0x30>
    e114:	nop
	...

000000000000e120 <grub_script_init>:
    e120:	stp	x29, x30, [sp, #-48]!
    e124:	mov	x29, sp
    e128:	stp	x19, x20, [sp, #16]
    e12c:	str	x21, [sp, #32]
    e130:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e134:	ldr	x20, [x0]
    e138:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e13c:	ldr	x21, [x0]
    e140:	mov	w4, #0x0                   	// #0
    e144:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e148:	ldr	x3, [x0]
    e14c:	mov	x2, x20
    e150:	mov	x1, x21
    e154:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e158:	ldr	x0, [x0]
    e15c:	bl	0 <grub_register_command_prio>
    e160:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    e164:	ldr	x19, [x1]
    e168:	str	x0, [x19]
    e16c:	mov	w4, #0x0                   	// #0
    e170:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e174:	ldr	x3, [x0]
    e178:	mov	x2, x20
    e17c:	mov	x1, x21
    e180:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e184:	ldr	x0, [x0]
    e188:	bl	0 <grub_register_command_prio>
    e18c:	str	x0, [x19, #8]
    e190:	mov	w4, #0x0                   	// #0
    e194:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e198:	ldr	x3, [x0]
    e19c:	mov	x2, x20
    e1a0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1a4:	ldr	x1, [x0]
    e1a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1ac:	ldr	x0, [x0]
    e1b0:	bl	0 <grub_register_command_prio>
    e1b4:	str	x0, [x19, #16]
    e1b8:	mov	w4, #0x0                   	// #0
    e1bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1c0:	ldr	x3, [x0]
    e1c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1c8:	ldr	x2, [x0]
    e1cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1d0:	ldr	x1, [x0]
    e1d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1d8:	ldr	x0, [x0]
    e1dc:	bl	0 <grub_register_command_prio>
    e1e0:	str	x0, [x19, #24]
    e1e4:	mov	w4, #0x0                   	// #0
    e1e8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1ec:	ldr	x3, [x0]
    e1f0:	mov	x2, x20
    e1f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e1f8:	ldr	x1, [x0]
    e1fc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e200:	ldr	x0, [x0]
    e204:	bl	0 <grub_register_command_prio>
    e208:	str	x0, [x19, #32]
    e20c:	ldp	x19, x20, [sp, #16]
    e210:	ldr	x21, [sp, #32]
    e214:	ldp	x29, x30, [sp], #48
    e218:	ret
    e21c:	nop
	...

000000000000e2a8 <grub_script_fini>:
    e2a8:	stp	x29, x30, [sp, #-16]!
    e2ac:	mov	x29, sp
    e2b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e2b4:	ldr	x0, [x0]
    e2b8:	ldr	x0, [x0]
    e2bc:	cbz	x0, e2c4 <grub_script_fini+0x1c>
    e2c0:	bl	0 <grub_unregister_command>
    e2c4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e2c8:	ldr	x0, [x0]
    e2cc:	str	xzr, [x0]
    e2d0:	ldr	x0, [x0, #8]
    e2d4:	cbz	x0, e2dc <grub_script_fini+0x34>
    e2d8:	bl	0 <grub_unregister_command>
    e2dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e2e0:	ldr	x0, [x0]
    e2e4:	str	xzr, [x0, #8]
    e2e8:	ldr	x0, [x0, #16]
    e2ec:	cbz	x0, e2f4 <grub_script_fini+0x4c>
    e2f0:	bl	0 <grub_unregister_command>
    e2f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e2f8:	ldr	x0, [x0]
    e2fc:	str	xzr, [x0, #16]
    e300:	ldr	x0, [x0, #24]
    e304:	cbz	x0, e30c <grub_script_fini+0x64>
    e308:	bl	0 <grub_unregister_command>
    e30c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e310:	ldr	x0, [x0]
    e314:	str	xzr, [x0, #24]
    e318:	ldr	x0, [x0, #32]
    e31c:	cbz	x0, e324 <grub_script_fini+0x7c>
    e320:	bl	0 <grub_unregister_command>
    e324:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e328:	ldr	x0, [x0]
    e32c:	str	xzr, [x0, #32]
    e330:	ldp	x29, x30, [sp], #16
    e334:	ret
	...

000000000000e340 <grub_script_malloc>:
    e340:	stp	x29, x30, [sp, #-32]!
    e344:	mov	x29, sp
    e348:	stp	x19, x20, [sp, #16]
    e34c:	mov	x20, x0
    e350:	add	x0, x1, #0xf
    e354:	bl	0 <grub_malloc>
    e358:	mov	x19, x0
    e35c:	cbz	x0, e394 <grub_script_malloc+0x54>
    e360:	mov	x4, x0
    e364:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e368:	ldr	x3, [x0]
    e36c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e370:	ldr	x2, [x0]
    e374:	mov	w1, #0x32                  	// #50
    e378:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e37c:	ldr	x0, [x0]
    e380:	bl	0 <grub_real_dprintf>
    e384:	ldr	x0, [x20, #16]
    e388:	str	x0, [x19]
    e38c:	str	x19, [x20, #16]
    e390:	add	x19, x19, #0x8
    e394:	mov	x0, x19
    e398:	ldp	x19, x20, [sp, #16]
    e39c:	ldp	x29, x30, [sp], #32
    e3a0:	ret
    e3a4:	nop
	...

000000000000e3c0 <grub_script_mem_free>:
    e3c0:	cbz	x0, e42c <grub_script_mem_free+0x6c>
    e3c4:	stp	x29, x30, [sp, #-64]!
    e3c8:	mov	x29, sp
    e3cc:	stp	x19, x20, [sp, #16]
    e3d0:	stp	x21, x22, [sp, #32]
    e3d4:	stp	x23, x24, [sp, #48]
    e3d8:	mov	x19, x0
    e3dc:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
    e3e0:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    e3e4:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
    e3e8:	mov	w21, #0x41                  	// #65
    e3ec:	mov	x20, x19
    e3f0:	ldr	x19, [x19]
    e3f4:	mov	x4, x20
    e3f8:	ldr	x3, [x24]
    e3fc:	ldr	x2, [x23]
    e400:	mov	w1, w21
    e404:	ldr	x0, [x22]
    e408:	bl	0 <grub_real_dprintf>
    e40c:	mov	x0, x20
    e410:	bl	0 <grub_free>
    e414:	cbnz	x19, e3ec <grub_script_mem_free+0x2c>
    e418:	ldp	x19, x20, [sp, #16]
    e41c:	ldp	x21, x22, [sp, #32]
    e420:	ldp	x23, x24, [sp, #48]
    e424:	ldp	x29, x30, [sp], #64
    e428:	ret
    e42c:	ret
	...

000000000000e448 <grub_script_mem_record>:
    e448:	mov	x1, x0
    e44c:	ldr	x0, [x0, #16]
    e450:	str	xzr, [x1, #16]
    e454:	ret

000000000000e458 <grub_script_mem_record_stop>:
    e458:	mov	x2, x0
    e45c:	ldr	x0, [x0, #16]
    e460:	str	x1, [x2, #16]
    e464:	ret

000000000000e468 <grub_script_free>:
    e468:	cbz	x0, e4c8 <grub_script_free+0x60>
    e46c:	stp	x29, x30, [sp, #-32]!
    e470:	mov	x29, sp
    e474:	stp	x19, x20, [sp, #16]
    e478:	mov	x20, x0
    e47c:	ldr	x0, [x0, #8]
    e480:	cbz	x0, e488 <grub_script_free+0x20>
    e484:	bl	e3c0 <grub_script_mem_free>
    e488:	ldr	x19, [x20, #32]
    e48c:	cbnz	x19, e4ac <grub_script_free+0x44>
    e490:	mov	x0, x20
    e494:	bl	0 <grub_free>
    e498:	ldp	x19, x20, [sp, #16]
    e49c:	ldp	x29, x30, [sp], #32
    e4a0:	ret
    e4a4:	bl	e468 <grub_script_free>
    e4a8:	cbz	x19, e490 <grub_script_free+0x28>
    e4ac:	mov	x0, x19
    e4b0:	ldr	x19, [x19, #24]
    e4b4:	ldr	w1, [x0]
    e4b8:	cbz	w1, e4a4 <grub_script_free+0x3c>
    e4bc:	sub	w1, w1, #0x1
    e4c0:	str	w1, [x0]
    e4c4:	b	e4a8 <grub_script_free+0x40>
    e4c8:	ret

000000000000e4cc <grub_script_arg_add>:
    e4cc:	stp	x29, x30, [sp, #-64]!
    e4d0:	mov	x29, sp
    e4d4:	stp	x19, x20, [sp, #16]
    e4d8:	stp	x21, x22, [sp, #32]
    e4dc:	str	x23, [sp, #48]
    e4e0:	mov	x23, x0
    e4e4:	mov	x20, x1
    e4e8:	mov	w21, w2
    e4ec:	mov	x22, x3
    e4f0:	mov	x1, #0x20                  	// #32
    e4f4:	bl	e340 <grub_script_malloc>
    e4f8:	cbz	x0, e554 <grub_script_arg_add+0x88>
    e4fc:	mov	x19, x0
    e500:	str	w21, [x0]
    e504:	str	xzr, [x0, #16]
    e508:	mov	x0, x22
    e50c:	bl	0 <grub_strlen>
    e510:	add	w21, w0, #0x1
    e514:	sxtw	x21, w21
    e518:	mov	x1, x21
    e51c:	mov	x0, x23
    e520:	bl	e340 <grub_script_malloc>
    e524:	str	x0, [x19, #8]
    e528:	cbz	x0, e554 <grub_script_arg_add+0x88>
    e52c:	mov	x2, x21
    e530:	mov	x1, x22
    e534:	bl	0 <grub_memmove>
    e538:	str	xzr, [x19, #24]
    e53c:	cbz	x20, e56c <grub_script_arg_add+0xa0>
    e540:	mov	x2, x20
    e544:	mov	x0, x2
    e548:	ldr	x2, [x2, #24]
    e54c:	cbnz	x2, e544 <grub_script_arg_add+0x78>
    e550:	str	x19, [x0, #24]
    e554:	mov	x0, x20
    e558:	ldp	x19, x20, [sp, #16]
    e55c:	ldp	x21, x22, [sp, #32]
    e560:	ldr	x23, [sp, #48]
    e564:	ldp	x29, x30, [sp], #64
    e568:	ret
    e56c:	mov	x20, x19
    e570:	b	e554 <grub_script_arg_add+0x88>

000000000000e574 <grub_script_add_arglist>:
    e574:	stp	x29, x30, [sp, #-48]!
    e578:	mov	x29, sp
    e57c:	stp	x19, x20, [sp, #16]
    e580:	str	x21, [sp, #32]
    e584:	mov	x20, x0
    e588:	mov	x19, x1
    e58c:	mov	x21, x2
    e590:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e594:	ldr	x3, [x0]
    e598:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e59c:	ldr	x2, [x0]
    e5a0:	mov	w1, #0xa3                  	// #163
    e5a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e5a8:	ldr	x0, [x0]
    e5ac:	bl	0 <grub_real_dprintf>
    e5b0:	mov	x1, #0x18                  	// #24
    e5b4:	mov	x0, x20
    e5b8:	bl	e340 <grub_script_malloc>
    e5bc:	cbz	x0, e5f0 <grub_script_add_arglist+0x7c>
    e5c0:	str	xzr, [x0]
    e5c4:	str	x21, [x0, #8]
    e5c8:	str	wzr, [x0, #16]
    e5cc:	cbz	x19, e604 <grub_script_add_arglist+0x90>
    e5d0:	ldr	w1, [x19, #16]
    e5d4:	add	w1, w1, #0x1
    e5d8:	str	w1, [x19, #16]
    e5dc:	mov	x2, x19
    e5e0:	mov	x1, x2
    e5e4:	ldr	x2, [x2]
    e5e8:	cbnz	x2, e5e0 <grub_script_add_arglist+0x6c>
    e5ec:	str	x0, [x1]
    e5f0:	mov	x0, x19
    e5f4:	ldp	x19, x20, [sp, #16]
    e5f8:	ldr	x21, [sp, #32]
    e5fc:	ldp	x29, x30, [sp], #48
    e600:	ret
    e604:	mov	w1, #0x1                   	// #1
    e608:	str	w1, [x0, #16]
    e60c:	mov	x19, x0
    e610:	b	e5f0 <grub_script_add_arglist+0x7c>
    e614:	nop
	...

000000000000e630 <grub_script_create_cmdline>:
    e630:	stp	x29, x30, [sp, #-32]!
    e634:	mov	x29, sp
    e638:	stp	x19, x20, [sp, #16]
    e63c:	mov	x19, x0
    e640:	mov	x20, x1
    e644:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e648:	ldr	x3, [x0]
    e64c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e650:	ldr	x2, [x0]
    e654:	mov	w1, #0xc6                  	// #198
    e658:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e65c:	ldr	x0, [x0]
    e660:	bl	0 <grub_real_dprintf>
    e664:	mov	x1, #0x18                  	// #24
    e668:	mov	x0, x19
    e66c:	bl	e340 <grub_script_malloc>
    e670:	cbz	x0, e688 <grub_script_create_cmdline+0x58>
    e674:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    e678:	ldr	x1, [x1]
    e67c:	str	x1, [x0]
    e680:	str	xzr, [x0, #8]
    e684:	str	x20, [x0, #16]
    e688:	ldp	x19, x20, [sp, #16]
    e68c:	ldp	x29, x30, [sp], #32
    e690:	ret
    e694:	nop
	...

000000000000e6b8 <grub_script_create_cmdif>:
    e6b8:	stp	x29, x30, [sp, #-48]!
    e6bc:	mov	x29, sp
    e6c0:	stp	x19, x20, [sp, #16]
    e6c4:	stp	x21, x22, [sp, #32]
    e6c8:	mov	x19, x0
    e6cc:	mov	x21, x1
    e6d0:	mov	x22, x2
    e6d4:	mov	x20, x3
    e6d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e6dc:	ldr	x3, [x0]
    e6e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e6e4:	ldr	x2, [x0]
    e6e8:	mov	w1, #0xdf                  	// #223
    e6ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e6f0:	ldr	x0, [x0]
    e6f4:	bl	0 <grub_real_dprintf>
    e6f8:	mov	x1, #0x28                  	// #40
    e6fc:	mov	x0, x19
    e700:	bl	e340 <grub_script_malloc>
    e704:	cbz	x0, e724 <grub_script_create_cmdif+0x6c>
    e708:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    e70c:	ldr	x1, [x1]
    e710:	str	x1, [x0]
    e714:	str	xzr, [x0, #8]
    e718:	str	x21, [x0, #16]
    e71c:	str	x22, [x0, #24]
    e720:	str	x20, [x0, #32]
    e724:	ldp	x19, x20, [sp, #16]
    e728:	ldp	x21, x22, [sp, #32]
    e72c:	ldp	x29, x30, [sp], #48
    e730:	ret
    e734:	nop
	...

000000000000e758 <grub_script_create_cmdfor>:
    e758:	stp	x29, x30, [sp, #-48]!
    e75c:	mov	x29, sp
    e760:	stp	x19, x20, [sp, #16]
    e764:	stp	x21, x22, [sp, #32]
    e768:	mov	x19, x0
    e76c:	mov	x21, x1
    e770:	mov	x22, x2
    e774:	mov	x20, x3
    e778:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e77c:	ldr	x3, [x0]
    e780:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e784:	ldr	x2, [x0]
    e788:	mov	w1, #0xf7                  	// #247
    e78c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e790:	ldr	x0, [x0]
    e794:	bl	0 <grub_real_dprintf>
    e798:	mov	x1, #0x28                  	// #40
    e79c:	mov	x0, x19
    e7a0:	bl	e340 <grub_script_malloc>
    e7a4:	cbz	x0, e7c4 <grub_script_create_cmdfor+0x6c>
    e7a8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    e7ac:	ldr	x1, [x1]
    e7b0:	str	x1, [x0]
    e7b4:	str	xzr, [x0, #8]
    e7b8:	str	x21, [x0, #16]
    e7bc:	str	x22, [x0, #24]
    e7c0:	str	x20, [x0, #32]
    e7c4:	ldp	x19, x20, [sp, #16]
    e7c8:	ldp	x21, x22, [sp, #32]
    e7cc:	ldp	x29, x30, [sp], #48
    e7d0:	ret
    e7d4:	nop
	...

000000000000e7f8 <grub_script_create_cmdwhile>:
    e7f8:	stp	x29, x30, [sp, #-48]!
    e7fc:	mov	x29, sp
    e800:	stp	x19, x20, [sp, #16]
    e804:	str	x21, [sp, #32]
    e808:	mov	x21, x1
    e80c:	mov	x20, x2
    e810:	mov	w19, w3
    e814:	mov	x1, #0x28                  	// #40
    e818:	bl	e340 <grub_script_malloc>
    e81c:	cbz	x0, e83c <grub_script_create_cmdwhile+0x44>
    e820:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    e824:	ldr	x1, [x1]
    e828:	str	x1, [x0]
    e82c:	str	xzr, [x0, #8]
    e830:	str	x21, [x0, #16]
    e834:	str	x20, [x0, #24]
    e838:	str	w19, [x0, #32]
    e83c:	ldp	x19, x20, [sp, #16]
    e840:	ldr	x21, [sp, #32]
    e844:	ldp	x29, x30, [sp], #48
    e848:	ret
    e84c:	nop
	...

000000000000e858 <grub_script_append_cmd>:
    e858:	stp	x29, x30, [sp, #-48]!
    e85c:	mov	x29, sp
    e860:	stp	x19, x20, [sp, #16]
    e864:	str	x21, [sp, #32]
    e868:	mov	x20, x0
    e86c:	mov	x19, x1
    e870:	mov	x21, x2
    e874:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e878:	ldr	x3, [x0]
    e87c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e880:	ldr	x2, [x0]
    e884:	mov	w1, #0x126                 	// #294
    e888:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e88c:	ldr	x0, [x0]
    e890:	bl	0 <grub_real_dprintf>
    e894:	cbz	x21, e8b0 <grub_script_append_cmd+0x58>
    e898:	mov	x3, x19
    e89c:	cbz	x19, e8c4 <grub_script_append_cmd+0x6c>
    e8a0:	mov	x4, x3
    e8a4:	ldr	x3, [x3, #8]
    e8a8:	cbnz	x3, e8a0 <grub_script_append_cmd+0x48>
    e8ac:	str	x21, [x4, #8]
    e8b0:	mov	x0, x19
    e8b4:	ldp	x19, x20, [sp, #16]
    e8b8:	ldr	x21, [sp, #32]
    e8bc:	ldp	x29, x30, [sp], #48
    e8c0:	ret
    e8c4:	mov	x1, #0x10                  	// #16
    e8c8:	mov	x0, x20
    e8cc:	bl	e340 <grub_script_malloc>
    e8d0:	mov	x19, x0
    e8d4:	cbz	x0, e8b0 <grub_script_append_cmd+0x58>
    e8d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    e8dc:	ldr	x0, [x0]
    e8e0:	str	x0, [x19]
    e8e4:	str	x21, [x19, #8]
    e8e8:	b	e8b0 <grub_script_append_cmd+0x58>
    e8ec:	nop
	...

000000000000e910 <grub_script_create>:
    e910:	stp	x29, x30, [sp, #-32]!
    e914:	mov	x29, sp
    e918:	stp	x19, x20, [sp, #16]
    e91c:	mov	x19, x0
    e920:	mov	x20, x1
    e924:	mov	x0, #0x28                  	// #40
    e928:	bl	0 <grub_malloc>
    e92c:	cbz	x0, e944 <grub_script_create+0x34>
    e930:	str	x20, [x0, #8]
    e934:	str	x19, [x0, #16]
    e938:	str	wzr, [x0]
    e93c:	str	xzr, [x0, #32]
    e940:	str	xzr, [x0, #24]
    e944:	ldp	x19, x20, [sp, #16]
    e948:	ldp	x29, x30, [sp], #32
    e94c:	ret

000000000000e950 <grub_script_parse>:
    e950:	stp	x29, x30, [sp, #-64]!
    e954:	mov	x29, sp
    e958:	stp	x19, x20, [sp, #16]
    e95c:	stp	x21, x22, [sp, #32]
    e960:	str	x23, [sp, #48]
    e964:	mov	x20, x0
    e968:	mov	x21, x1
    e96c:	mov	x22, x2
    e970:	mov	x1, #0x0                   	// #0
    e974:	mov	x0, #0x0                   	// #0
    e978:	bl	e910 <grub_script_create>
    e97c:	mov	x23, x0
    e980:	cbz	x0, e9f8 <grub_script_parse+0xa8>
    e984:	mov	x0, #0x30                  	// #48
    e988:	bl	0 <grub_zalloc>
    e98c:	mov	x19, x0
    e990:	cbz	x0, ea10 <grub_script_parse+0xc0>
    e994:	mov	x3, x22
    e998:	mov	x2, x21
    e99c:	mov	x1, x20
    e9a0:	bl	11218 <grub_script_lexer_init>
    e9a4:	mov	x20, x0
    e9a8:	cbz	x0, ea20 <grub_script_parse+0xd0>
    e9ac:	str	x0, [x19, #40]
    e9b0:	ldr	x21, [x19, #16]
    e9b4:	str	xzr, [x19, #16]
    e9b8:	mov	x0, x19
    e9bc:	bl	11f10 <grub_script_yyparse>
    e9c0:	cbnz	w0, ea38 <grub_script_parse+0xe8>
    e9c4:	ldr	w0, [x19, #8]
    e9c8:	cbnz	w0, ea38 <grub_script_parse+0xe8>
    e9cc:	ldr	x0, [x19, #16]
    e9d0:	str	x21, [x19, #16]
    e9d4:	str	x0, [x23, #8]
    e9d8:	ldr	x0, [x19, #32]
    e9dc:	str	x0, [x23, #16]
    e9e0:	ldr	x0, [x19, #24]
    e9e4:	str	x0, [x23, #32]
    e9e8:	mov	x0, x20
    e9ec:	bl	10d0c <grub_script_lexer_fini>
    e9f0:	mov	x0, x19
    e9f4:	bl	0 <grub_free>
    e9f8:	mov	x0, x23
    e9fc:	ldp	x19, x20, [sp, #16]
    ea00:	ldp	x21, x22, [sp, #32]
    ea04:	ldr	x23, [sp, #48]
    ea08:	ldp	x29, x30, [sp], #64
    ea0c:	ret
    ea10:	mov	x0, x23
    ea14:	bl	0 <grub_free>
    ea18:	mov	x23, x19
    ea1c:	b	e9f8 <grub_script_parse+0xa8>
    ea20:	mov	x0, x23
    ea24:	bl	0 <grub_free>
    ea28:	mov	x0, x19
    ea2c:	bl	0 <grub_free>
    ea30:	mov	x23, x20
    ea34:	b	e9f8 <grub_script_parse+0xa8>
    ea38:	ldr	x0, [x19, #16]
    ea3c:	str	x21, [x19, #16]
    ea40:	bl	e3c0 <grub_script_mem_free>
    ea44:	mov	x0, x20
    ea48:	bl	10d0c <grub_script_lexer_fini>
    ea4c:	mov	x0, x19
    ea50:	bl	0 <grub_free>
    ea54:	mov	x0, x23
    ea58:	bl	0 <grub_free>
    ea5c:	mov	x23, #0x0                   	// #0
    ea60:	b	e9f8 <grub_script_parse+0xa8>
    ea64:	nop
    ea68:	stp	x29, x30, [sp, #-32]!
    ea6c:	mov	x29, sp
    ea70:	str	x19, [sp, #16]
    ea74:	mov	x19, x0
    ea78:	ldrb	w0, [x0]
    ea7c:	sub	w0, w0, #0x30
    ea80:	cmp	w0, #0x9
    ea84:	b.hi	ea98 <grub_script_parse+0x148>  // b.pmore
    ea88:	mov	w0, #0x1                   	// #1
    ea8c:	ldr	x19, [sp, #16]
    ea90:	ldp	x29, x30, [sp], #32
    ea94:	ret
    ea98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ea9c:	ldr	x1, [x0]
    eaa0:	mov	x0, x19
    eaa4:	bl	0 <grub_strcmp>
    eaa8:	mov	w1, w0
    eaac:	mov	w0, #0x1                   	// #1
    eab0:	cbz	w1, ea8c <grub_script_parse+0x13c>
    eab4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    eab8:	ldr	x1, [x0]
    eabc:	mov	x0, x19
    eac0:	bl	0 <grub_strcmp>
    eac4:	mov	w1, w0
    eac8:	mov	w0, #0x1                   	// #1
    eacc:	cbz	w1, ea8c <grub_script_parse+0x13c>
    ead0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ead4:	ldr	x1, [x0]
    ead8:	mov	x0, x19
    eadc:	bl	0 <grub_strcmp>
    eae0:	cmp	w0, #0x0
    eae4:	cset	w0, eq  // eq = none
    eae8:	b	ea8c <grub_script_parse+0x13c>
    eaec:	nop
	...
    eb08:	stp	x29, x30, [sp, #-32]!
    eb0c:	mov	x29, sp
    eb10:	str	x19, [sp, #16]
    eb14:	mov	x19, x0
    eb18:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    eb1c:	ldr	x0, [x0]
    eb20:	ldr	x1, [x0]
    eb24:	cbz	x1, eb60 <grub_script_parse+0x210>
    eb28:	ldr	w0, [x1, #4]
    eb2c:	ldr	w2, [x1, #8]
    eb30:	add	w2, w2, w0
    eb34:	str	w2, [x1, #8]
    eb38:	ldr	x2, [x1, #16]
    eb3c:	sub	x0, x2, w0, uxtw #3
    eb40:	str	x0, [x1, #16]
    eb44:	ldr	w0, [x1]
    eb48:	tbnz	w0, #1, eb78 <grub_script_parse+0x228>
    eb4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    eb50:	ldr	x0, [x0]
    eb54:	ldr	x0, [x0]
    eb58:	ldr	w1, [x0]
    eb5c:	tbnz	w1, #0, eb84 <grub_script_parse+0x234>
    eb60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    eb64:	ldr	x0, [x0]
    eb68:	str	x19, [x0]
    eb6c:	ldr	x19, [sp, #16]
    eb70:	ldp	x29, x30, [sp], #32
    eb74:	ret
    eb78:	add	x0, x1, #0x8
    eb7c:	bl	1133c <grub_script_argv_free>
    eb80:	b	eb4c <grub_script_parse+0x1fc>
    eb84:	bl	0 <grub_free>
    eb88:	b	eb60 <grub_script_parse+0x210>
    eb8c:	nop
	...
    eb98:	stp	x29, x30, [sp, #-96]!
    eb9c:	mov	x29, sp
    eba0:	str	x3, [sp, #88]
    eba4:	cbz	x0, ee3c <grub_script_parse+0x4ec>
    eba8:	stp	x19, x20, [sp, #16]
    ebac:	stp	x21, x22, [sp, #32]
    ebb0:	stp	x23, x24, [sp, #48]
    ebb4:	stp	x25, x26, [sp, #64]
    ebb8:	mov	x26, x0
    ebbc:	mov	x21, x1
    ebc0:	mov	x22, x2
    ebc4:	mov	w1, #0x0                   	// #0
    ebc8:	mov	w25, #0x24                  	// #36
    ebcc:	mov	w24, #0x7d                  	// #125
    ebd0:	mov	x23, #0x1                   	// #1
    ebd4:	mov	w20, #0x0                   	// #0
    ebd8:	b	ede4 <grub_script_parse+0x494>
    ebdc:	cbz	w1, ec04 <grub_script_parse+0x2b4>
    ebe0:	ldr	x0, [sp, #88]
    ebe4:	cbz	x0, ebf8 <grub_script_parse+0x2a8>
    ebe8:	add	x1, x0, #0x1
    ebec:	str	x1, [sp, #88]
    ebf0:	ldrb	w1, [x26]
    ebf4:	strb	w1, [x0]
    ebf8:	add	x26, x26, #0x1
    ebfc:	mov	w1, w20
    ec00:	b	ede4 <grub_script_parse+0x494>
    ec04:	add	x0, x26, #0x1
    ec08:	ldrb	w2, [x26, #1]
    ec0c:	cmp	w2, #0x5a
    ec10:	b.hi	ec60 <grub_script_parse+0x310>  // b.pmore
    ec14:	cmp	w2, #0x40
    ec18:	b.hi	ed98 <grub_script_parse+0x448>  // b.pmore
    ec1c:	cmp	w2, #0x39
    ec20:	b.hi	ec54 <grub_script_parse+0x304>  // b.pmore
    ec24:	cmp	w2, #0x2f
    ec28:	b.hi	eca4 <grub_script_parse+0x354>  // b.pmore
    ec2c:	cmp	w2, #0x23
    ec30:	b.ne	ec88 <grub_script_parse+0x338>  // b.any
    ec34:	mov	x3, x22
    ec38:	add	x2, sp, #0x58
    ec3c:	mov	x1, x23
    ec40:	blr	x21
    ec44:	mov	w1, w0
    ec48:	cbnz	w0, ee80 <grub_script_parse+0x530>
    ec4c:	add	x26, x26, #0x2
    ec50:	b	ede4 <grub_script_parse+0x494>
    ec54:	cmp	w2, #0x3f
    ec58:	b.eq	ec34 <grub_script_parse+0x2e4>  // b.none
    ec5c:	b	ec88 <grub_script_parse+0x338>
    ec60:	cmp	w2, #0x7b
    ec64:	b.eq	ecfc <grub_script_parse+0x3ac>  // b.none
    ec68:	b.hi	ec88 <grub_script_parse+0x338>  // b.pmore
    ec6c:	cmp	w2, #0x5f
    ec70:	b.eq	eda0 <grub_script_parse+0x450>  // b.none
    ec74:	sub	w2, w2, #0x61
    ec78:	and	w2, w2, #0xff
    ec7c:	mov	x26, x0
    ec80:	cmp	w2, #0x19
    ec84:	b.ls	ed3c <grub_script_parse+0x3ec>  // b.plast
    ec88:	ldr	x2, [sp, #88]
    ec8c:	mov	x26, x0
    ec90:	cbz	x2, ede4 <grub_script_parse+0x494>
    ec94:	add	x3, x2, #0x1
    ec98:	str	x3, [sp, #88]
    ec9c:	strb	w25, [x2]
    eca0:	b	ede4 <grub_script_parse+0x494>
    eca4:	sub	w1, w2, #0x30
    eca8:	and	w1, w1, #0xff
    ecac:	mov	x26, x0
    ecb0:	cmp	w1, #0x9
    ecb4:	b.hi	eccc <grub_script_parse+0x37c>  // b.pmore
    ecb8:	ldrb	w1, [x26, #1]!
    ecbc:	sub	w1, w1, #0x30
    ecc0:	and	w1, w1, #0xff
    ecc4:	cmp	w1, #0x9
    ecc8:	b.ls	ecb8 <grub_script_parse+0x368>  // b.plast
    eccc:	mov	x3, x22
    ecd0:	add	x2, sp, #0x58
    ecd4:	sub	x1, x26, x0
    ecd8:	blr	x21
    ecdc:	mov	w1, w0
    ece0:	cbz	w0, ede4 <grub_script_parse+0x494>
    ece4:	mov	w0, #0x1                   	// #1
    ece8:	ldp	x19, x20, [sp, #16]
    ecec:	ldp	x21, x22, [sp, #32]
    ecf0:	ldp	x23, x24, [sp, #48]
    ecf4:	ldp	x25, x26, [sp, #64]
    ecf8:	b	ee4c <grub_script_parse+0x4fc>
    ecfc:	add	x26, x26, #0x2
    ed00:	mov	w1, w24
    ed04:	mov	x0, x26
    ed08:	bl	0 <grub_strchr>
    ed0c:	mov	x19, x0
    ed10:	cbz	x0, ee54 <grub_script_parse+0x504>
    ed14:	mov	x3, x22
    ed18:	add	x2, sp, #0x58
    ed1c:	sub	x1, x0, x26
    ed20:	mov	x0, x26
    ed24:	blr	x21
    ed28:	mov	w1, w0
    ed2c:	cbnz	w0, ee68 <grub_script_parse+0x518>
    ed30:	add	x26, x19, #0x1
    ed34:	b	ede4 <grub_script_parse+0x494>
    ed38:	add	x26, x26, #0x1
    ed3c:	ldrb	w2, [x26]
    ed40:	sub	w3, w2, #0x30
    ed44:	and	w3, w3, #0xff
    ed48:	cmp	w3, #0x9
    ed4c:	b.ls	ed38 <grub_script_parse+0x3e8>  // b.plast
    ed50:	and	w1, w2, #0xffffffdf
    ed54:	sub	w1, w1, #0x41
    ed58:	and	w1, w1, #0xff
    ed5c:	cmp	w2, #0x5f
    ed60:	ccmp	w1, #0x19, #0x0, ne  // ne = any
    ed64:	b.ls	ed38 <grub_script_parse+0x3e8>  // b.plast
    ed68:	mov	x3, x22
    ed6c:	add	x2, sp, #0x58
    ed70:	sub	x1, x26, x0
    ed74:	blr	x21
    ed78:	mov	w1, w0
    ed7c:	cbz	w0, ede4 <grub_script_parse+0x494>
    ed80:	mov	w0, #0x1                   	// #1
    ed84:	ldp	x19, x20, [sp, #16]
    ed88:	ldp	x21, x22, [sp, #32]
    ed8c:	ldp	x23, x24, [sp, #48]
    ed90:	ldp	x25, x26, [sp, #64]
    ed94:	b	ee4c <grub_script_parse+0x4fc>
    ed98:	mov	x26, x0
    ed9c:	b	ed3c <grub_script_parse+0x3ec>
    eda0:	mov	x26, x0
    eda4:	b	ed3c <grub_script_parse+0x3ec>
    eda8:	cbz	w1, edc4 <grub_script_parse+0x474>
    edac:	ldr	x0, [sp, #88]
    edb0:	cbz	x0, eddc <grub_script_parse+0x48c>
    edb4:	add	x1, x0, #0x1
    edb8:	str	x1, [sp, #88]
    edbc:	mov	w1, #0x5c                  	// #92
    edc0:	strb	w1, [x0]
    edc4:	ldr	x0, [sp, #88]
    edc8:	cbz	x0, eddc <grub_script_parse+0x48c>
    edcc:	add	x1, x0, #0x1
    edd0:	str	x1, [sp, #88]
    edd4:	ldrb	w1, [x26]
    edd8:	strb	w1, [x0]
    eddc:	add	x26, x26, #0x1
    ede0:	mov	w1, w20
    ede4:	ldrb	w3, [x26]
    ede8:	cbz	w3, ee2c <grub_script_parse+0x4dc>
    edec:	cmp	w3, #0x24
    edf0:	b.eq	ebdc <grub_script_parse+0x28c>  // b.none
    edf4:	cmp	w3, #0x5c
    edf8:	b.ne	eda8 <grub_script_parse+0x458>  // b.any
    edfc:	cmp	w1, #0x0
    ee00:	cset	w2, eq  // eq = none
    ee04:	ldr	x0, [sp, #88]
    ee08:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    ee0c:	b.eq	ee20 <grub_script_parse+0x4d0>  // b.none
    ee10:	add	x1, x0, #0x1
    ee14:	str	x1, [sp, #88]
    ee18:	mov	w1, #0x5c                  	// #92
    ee1c:	strb	w1, [x0]
    ee20:	add	x26, x26, #0x1
    ee24:	mov	w1, w2
    ee28:	b	ede4 <grub_script_parse+0x494>
    ee2c:	ldp	x19, x20, [sp, #16]
    ee30:	ldp	x21, x22, [sp, #32]
    ee34:	ldp	x23, x24, [sp, #48]
    ee38:	ldp	x25, x26, [sp, #64]
    ee3c:	ldr	x1, [sp, #88]
    ee40:	mov	w0, #0x0                   	// #0
    ee44:	cbz	x1, ee4c <grub_script_parse+0x4fc>
    ee48:	strb	wzr, [x1]
    ee4c:	ldp	x29, x30, [sp], #96
    ee50:	ret
    ee54:	ldp	x19, x20, [sp, #16]
    ee58:	ldp	x21, x22, [sp, #32]
    ee5c:	ldp	x23, x24, [sp, #48]
    ee60:	ldp	x25, x26, [sp, #64]
    ee64:	b	ee3c <grub_script_parse+0x4ec>
    ee68:	mov	w0, #0x1                   	// #1
    ee6c:	ldp	x19, x20, [sp, #16]
    ee70:	ldp	x21, x22, [sp, #32]
    ee74:	ldp	x23, x24, [sp, #48]
    ee78:	ldp	x25, x26, [sp, #64]
    ee7c:	b	ee4c <grub_script_parse+0x4fc>
    ee80:	mov	w0, #0x1                   	// #1
    ee84:	ldp	x19, x20, [sp, #16]
    ee88:	ldp	x21, x22, [sp, #32]
    ee8c:	ldp	x23, x24, [sp, #48]
    ee90:	ldp	x25, x26, [sp, #64]
    ee94:	b	ee4c <grub_script_parse+0x4fc>
    ee98:	stp	x29, x30, [sp, #-48]!
    ee9c:	mov	x29, sp
    eea0:	stp	x19, x20, [sp, #16]
    eea4:	str	x21, [sp, #32]
    eea8:	mov	x19, x3
    eeac:	ldr	x21, [x3]
    eeb0:	ldr	x20, [x3, #8]
    eeb4:	add	x2, x20, #0x1
    eeb8:	str	x2, [x3, #8]
    eebc:	bl	0 <grub_strndup>
    eec0:	str	x0, [x21, x20, lsl #3]
    eec4:	ldr	x0, [x19, #8]
    eec8:	ldr	x1, [x19]
    eecc:	add	x0, x1, x0, lsl #3
    eed0:	ldur	x0, [x0, #-8]
    eed4:	cmp	x0, #0x0
    eed8:	cset	w0, eq  // eq = none
    eedc:	ldp	x19, x20, [sp, #16]
    eee0:	ldr	x21, [sp, #32]
    eee4:	ldp	x29, x30, [sp], #48
    eee8:	ret
    eeec:	stp	x29, x30, [sp, #-48]!
    eef0:	mov	x29, sp
    eef4:	str	x21, [sp, #32]
    eef8:	mov	x21, x0
    eefc:	ldr	x0, [x2]
    ef00:	cbz	x0, ef48 <grub_script_parse+0x5f8>
    ef04:	stp	x19, x20, [sp, #16]
    ef08:	mov	x19, x2
    ef0c:	mov	w1, #0xa                   	// #10
    ef10:	bl	0 <grub_strchr>
    ef14:	mov	x20, x0
    ef18:	cbz	x0, ef50 <grub_script_parse+0x600>
    ef1c:	ldr	x0, [x19]
    ef20:	sub	x1, x20, x0
    ef24:	bl	0 <grub_strndup>
    ef28:	str	x0, [x21]
    ef2c:	add	x20, x20, #0x1
    ef30:	str	x20, [x19]
    ef34:	ldp	x19, x20, [sp, #16]
    ef38:	mov	w0, #0x0                   	// #0
    ef3c:	ldr	x21, [sp, #32]
    ef40:	ldp	x29, x30, [sp], #48
    ef44:	ret
    ef48:	str	xzr, [x21]
    ef4c:	b	ef38 <grub_script_parse+0x5e8>
    ef50:	ldr	x0, [x19]
    ef54:	bl	0 <grub_strdup>
    ef58:	str	x0, [x21]
    ef5c:	b	ef30 <grub_script_parse+0x5e0>
    ef60:	stp	x29, x30, [sp, #-32]!
    ef64:	mov	x29, sp
    ef68:	str	x19, [sp, #16]
    ef6c:	mov	x19, x0
    ef70:	bl	0 <grub_strlen>
    ef74:	lsl	w0, w0, #1
    ef78:	add	w0, w0, #0x1
    ef7c:	sxtw	x0, w0
    ef80:	bl	0 <grub_malloc>
    ef84:	cbz	x0, efe0 <grub_script_parse+0x690>
    ef88:	mov	x4, x19
    ef8c:	ldrb	w1, [x4], #1
    ef90:	cbz	w1, efd8 <grub_script_parse+0x688>
    ef94:	mov	w3, #0x0                   	// #0
    ef98:	mov	w6, #0x5c                  	// #92
    ef9c:	mov	w5, #0x3f                  	// #63
    efa0:	mov	w7, #0x5c                  	// #92
    efa4:	b	efb8 <grub_script_parse+0x668>
    efa8:	add	w3, w2, #0x1
    efac:	strb	w1, [x0, w2, sxtw]
    efb0:	ldrb	w1, [x4], #1
    efb4:	cbz	w1, efdc <grub_script_parse+0x68c>
    efb8:	cmp	w1, #0x2a
    efbc:	ccmp	w1, w6, #0x4, ne  // ne = any
    efc0:	mov	w2, w3
    efc4:	ccmp	w1, w5, #0x4, ne  // ne = any
    efc8:	b.ne	efa8 <grub_script_parse+0x658>  // b.any
    efcc:	add	w2, w3, #0x1
    efd0:	strb	w7, [x0, w3, sxtw]
    efd4:	b	efa8 <grub_script_parse+0x658>
    efd8:	mov	w3, #0x0                   	// #0
    efdc:	strb	wzr, [x0, w3, sxtw]
    efe0:	ldr	x19, [sp, #16]
    efe4:	ldp	x29, x30, [sp], #32
    efe8:	ret
    efec:	stp	x29, x30, [sp, #-32]!
    eff0:	mov	x29, sp
    eff4:	stp	x19, x20, [sp, #16]
    eff8:	mov	x19, x0
    effc:	mov	x20, x1
    f000:	bl	ea68 <grub_script_parse+0x118>
    f004:	cbnz	w0, f020 <grub_script_parse+0x6d0>
    f008:	mov	x1, x20
    f00c:	mov	x0, x19
    f010:	bl	0 <grub_env_set>
    f014:	ldp	x19, x20, [sp, #16]
    f018:	ldp	x29, x30, [sp], #32
    f01c:	ret
    f020:	mov	x2, x19
    f024:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f028:	ldr	x1, [x0]
    f02c:	mov	w0, #0x12                  	// #18
    f030:	bl	0 <grub_error>
    f034:	b	f014 <grub_script_parse+0x6c4>
	...
    f040:	stp	x29, x30, [sp, #-48]!
    f044:	mov	x29, sp
    f048:	str	x19, [sp, #16]
    f04c:	cbz	x0, f094 <grub_script_parse+0x744>
    f050:	ldr	x1, [x0]
    f054:	blr	x1
    f058:	mov	w19, w0
    f05c:	mov	w3, w0
    f060:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f064:	ldr	x2, [x0]
    f068:	mov	x1, #0xe                   	// #14
    f06c:	add	x0, sp, #0x20
    f070:	bl	0 <grub_snprintf>
    f074:	add	x1, sp, #0x20
    f078:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f07c:	ldr	x0, [x0]
    f080:	bl	0 <grub_env_set>
    f084:	mov	w0, w19
    f088:	ldr	x19, [sp, #16]
    f08c:	ldp	x29, x30, [sp], #48
    f090:	ret
    f094:	mov	w19, #0x0                   	// #0
    f098:	b	f084 <grub_script_parse+0x734>
    f09c:	nop
	...
    f0b0:	stp	x29, x30, [sp, #-64]!
    f0b4:	mov	x29, sp
    f0b8:	stp	x21, x22, [sp, #32]
    f0bc:	mov	x22, x0
    f0c0:	ldr	x0, [x3, #8]
    f0c4:	cbz	x0, f16c <grub_script_parse+0x81c>
    f0c8:	stp	x19, x20, [sp, #16]
    f0cc:	str	x23, [sp, #48]
    f0d0:	mov	x21, x1
    f0d4:	mov	x23, x2
    f0d8:	mov	x20, x3
    f0dc:	mov	x19, #0x0                   	// #0
    f0e0:	b	f0f4 <grub_script_parse+0x7a4>
    f0e4:	add	x19, x19, #0x1
    f0e8:	ldr	x3, [x20, #8]
    f0ec:	cmp	x3, x19
    f0f0:	b.ls	f11c <grub_script_parse+0x7cc>  // b.plast
    f0f4:	ldr	x3, [x20]
    f0f8:	mov	x2, x21
    f0fc:	mov	x1, x22
    f100:	ldr	x0, [x3, x19, lsl #3]
    f104:	bl	0 <grub_strncmp>
    f108:	cbnz	w0, f0e4 <grub_script_parse+0x794>
    f10c:	ldr	x0, [x20]
    f110:	ldr	x0, [x0, x19, lsl #3]
    f114:	ldrb	w0, [x0, x21]
    f118:	cbnz	w0, f0e4 <grub_script_parse+0x794>
    f11c:	ldr	x0, [x20, #8]
    f120:	cmp	x0, x19
    f124:	b.eq	f1c0 <grub_script_parse+0x870>  // b.none
    f128:	cmp	x21, #0x1
    f12c:	b.ne	f13c <grub_script_parse+0x7ec>  // b.any
    f130:	ldrb	w0, [x22]
    f134:	cmp	w0, #0x23
    f138:	b.eq	f17c <grub_script_parse+0x82c>  // b.none
    f13c:	ldr	x0, [x20]
    f140:	ldr	x0, [x0, x19, lsl #3]
    f144:	bl	0 <grub_env_get>
    f148:	cbz	x0, f1cc <grub_script_parse+0x87c>
    f14c:	ldr	x1, [x23]
    f150:	mov	x2, x1
    f154:	ldrb	w3, [x0], #1
    f158:	strb	w3, [x1], #1
    f15c:	cbnz	w3, f150 <grub_script_parse+0x800>
    f160:	str	x2, [x23]
    f164:	ldp	x19, x20, [sp, #16]
    f168:	ldr	x23, [sp, #48]
    f16c:	mov	w0, #0x0                   	// #0
    f170:	ldp	x21, x22, [sp, #32]
    f174:	ldp	x29, x30, [sp], #64
    f178:	ret
    f17c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f180:	ldr	x0, [x0]
    f184:	ldr	x0, [x0]
    f188:	ldr	w3, [x0, #8]
    f18c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f190:	ldr	x2, [x0]
    f194:	mov	x1, #0x1e                  	// #30
    f198:	ldr	x0, [x23]
    f19c:	bl	0 <grub_snprintf>
    f1a0:	ldr	x0, [x23]
    f1a4:	bl	0 <grub_strlen>
    f1a8:	ldr	x1, [x23]
    f1ac:	add	x1, x1, x0
    f1b0:	str	x1, [x23]
    f1b4:	ldp	x19, x20, [sp, #16]
    f1b8:	ldr	x23, [sp, #48]
    f1bc:	b	f16c <grub_script_parse+0x81c>
    f1c0:	ldp	x19, x20, [sp, #16]
    f1c4:	ldr	x23, [sp, #48]
    f1c8:	b	f16c <grub_script_parse+0x81c>
    f1cc:	ldp	x19, x20, [sp, #16]
    f1d0:	ldr	x23, [sp, #48]
    f1d4:	b	f16c <grub_script_parse+0x81c>
	...
    f1e8:	stp	x29, x30, [sp, #-48]!
    f1ec:	mov	x29, sp
    f1f0:	stp	x21, x22, [sp, #32]
    f1f4:	mov	x22, x0
    f1f8:	ldr	x0, [x3, #8]
    f1fc:	cbz	x0, f290 <grub_script_parse+0x940>
    f200:	stp	x19, x20, [sp, #16]
    f204:	mov	x21, x1
    f208:	mov	x20, x3
    f20c:	mov	x19, #0x0                   	// #0
    f210:	b	f224 <grub_script_parse+0x8d4>
    f214:	add	x19, x19, #0x1
    f218:	ldr	x2, [x20, #8]
    f21c:	cmp	x2, x19
    f220:	b.ls	f24c <grub_script_parse+0x8fc>  // b.plast
    f224:	ldr	x3, [x20]
    f228:	mov	x2, x21
    f22c:	mov	x1, x22
    f230:	ldr	x0, [x3, x19, lsl #3]
    f234:	bl	0 <grub_strncmp>
    f238:	cbnz	w0, f214 <grub_script_parse+0x8c4>
    f23c:	ldr	x0, [x20]
    f240:	ldr	x0, [x0, x19, lsl #3]
    f244:	ldrb	w0, [x0, x21]
    f248:	cbnz	w0, f214 <grub_script_parse+0x8c4>
    f24c:	ldr	x0, [x20, #8]
    f250:	cmp	x0, x19
    f254:	b.eq	f2b4 <grub_script_parse+0x964>  // b.none
    f258:	cmp	x21, #0x1
    f25c:	b.ne	f26c <grub_script_parse+0x91c>  // b.any
    f260:	ldrb	w0, [x22]
    f264:	cmp	w0, #0x23
    f268:	b.eq	f2a0 <grub_script_parse+0x950>  // b.none
    f26c:	ldr	x0, [x20]
    f270:	ldr	x0, [x0, x19, lsl #3]
    f274:	bl	0 <grub_env_get>
    f278:	cbz	x0, f2bc <grub_script_parse+0x96c>
    f27c:	bl	0 <grub_strlen>
    f280:	ldr	x1, [x20, #16]
    f284:	add	x1, x1, x0
    f288:	str	x1, [x20, #16]
    f28c:	ldp	x19, x20, [sp, #16]
    f290:	mov	w0, #0x0                   	// #0
    f294:	ldp	x21, x22, [sp, #32]
    f298:	ldp	x29, x30, [sp], #48
    f29c:	ret
    f2a0:	ldr	x0, [x20, #16]
    f2a4:	add	x0, x0, #0x1e
    f2a8:	str	x0, [x20, #16]
    f2ac:	ldp	x19, x20, [sp, #16]
    f2b0:	b	f290 <grub_script_parse+0x940>
    f2b4:	ldp	x19, x20, [sp, #16]
    f2b8:	b	f290 <grub_script_parse+0x940>
    f2bc:	ldp	x19, x20, [sp, #16]
    f2c0:	b	f290 <grub_script_parse+0x940>
    f2c4:	stp	x29, x30, [sp, #-208]!
    f2c8:	mov	x29, sp
    f2cc:	stp	x19, x20, [sp, #16]
    f2d0:	stp	x21, x22, [sp, #32]
    f2d4:	stp	x23, x24, [sp, #48]
    f2d8:	stp	x25, x26, [sp, #64]
    f2dc:	str	x1, [sp, #104]
    f2e0:	str	wzr, [sp, #184]
    f2e4:	str	xzr, [sp, #192]
    f2e8:	str	xzr, [sp, #200]
    f2ec:	cbz	x0, f9f4 <grub_script_parse+0x10a4>
    f2f0:	stp	x27, x28, [sp, #80]
    f2f4:	mov	x27, x0
    f2f8:	mov	w24, #0x5c                  	// #92
    f2fc:	ldr	x0, [x27, #8]
    f300:	cbz	x0, f9f0 <grub_script_parse+0x10a0>
    f304:	add	x0, sp, #0xb8
    f308:	bl	1139c <grub_script_argv_next>
    f30c:	cbnz	w0, fb20 <grub_script_parse+0x11d0>
    f310:	ldr	x20, [x27, #8]
    f314:	cbz	x20, f9e0 <grub_script_parse+0x1090>
    f318:	add	x23, sp, #0xb8
    f31c:	b	f32c <grub_script_parse+0x9dc>
    f320:	cbz	w19, f460 <grub_script_parse+0xb10>
    f324:	ldr	x20, [x20, #24]
    f328:	cbz	x20, f9e0 <grub_script_parse+0x1090>
    f32c:	ldr	w19, [x20]
    f330:	cmp	w19, #0x3
    f334:	b.eq	f460 <grub_script_parse+0xb10>  // b.none
    f338:	b.hi	f3e4 <grub_script_parse+0xa94>  // b.pmore
    f33c:	cmp	w19, #0x1
    f340:	b.eq	f8a0 <grub_script_parse+0xf50>  // b.none
    f344:	cmp	w19, #0x2
    f348:	b.ne	f320 <grub_script_parse+0x9d0>  // b.any
    f34c:	ldr	x19, [x20, #8]
    f350:	str	xzr, [sp, #136]
    f354:	str	xzr, [sp, #144]
    f358:	mov	x0, #0x1                   	// #1
    f35c:	str	x0, [sp, #152]
    f360:	ldrb	w1, [x19]
    f364:	cbz	w1, f8d0 <grub_script_parse+0xf80>
    f368:	mov	x2, x19
    f36c:	mov	x0, #0x0                   	// #0
    f370:	cmp	w1, #0x24
    f374:	cinc	x0, x0, eq  // eq = none
    f378:	ldrb	w1, [x2, #1]!
    f37c:	cbnz	w1, f370 <grub_script_parse+0xa20>
    f380:	lsl	x0, x0, #3
    f384:	bl	0 <grub_malloc>
    f388:	str	x0, [sp, #136]
    f38c:	mov	x3, #0x0                   	// #0
    f390:	add	x2, sp, #0x88
    f394:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f398:	ldr	x1, [x0]
    f39c:	mov	x0, x19
    f3a0:	bl	eb98 <grub_script_parse+0x248>
    f3a4:	cbnz	w0, f958 <grub_script_parse+0x1008>
    f3a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f3ac:	ldr	x0, [x0]
    f3b0:	ldr	x1, [x0]
    f3b4:	mov	x0, x19
    f3b8:	blr	x1
    f3bc:	mov	x22, x0
    f3c0:	mov	x3, #0x0                   	// #0
    f3c4:	add	x2, sp, #0x88
    f3c8:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    f3cc:	ldr	x1, [x1]
    f3d0:	bl	eb98 <grub_script_parse+0x248>
    f3d4:	cbz	w0, f8d8 <grub_script_parse+0xf88>
    f3d8:	mov	w21, #0x1                   	// #1
    f3dc:	mov	x19, #0x0                   	// #0
    f3e0:	b	f960 <grub_script_parse+0x1010>
    f3e4:	cmp	w19, #0x5
    f3e8:	b.ls	f9a4 <grub_script_parse+0x1054>  // b.plast
    f3ec:	cmp	w19, #0x6
    f3f0:	b.ne	f324 <grub_script_parse+0x9d4>  // b.any
    f3f4:	mov	x2, #0x1                   	// #1
    f3f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f3fc:	ldr	x1, [x0]
    f400:	mov	x0, x23
    f404:	bl	11434 <grub_script_argv_append>
    f408:	cbnz	w0, fb28 <grub_script_parse+0x11d8>
    f40c:	ldr	x0, [x20, #8]
    f410:	bl	ef60 <grub_script_parse+0x610>
    f414:	mov	x19, x0
    f418:	cbz	x0, fb30 <grub_script_parse+0x11e0>
    f41c:	bl	0 <grub_strlen>
    f420:	mov	x2, x0
    f424:	mov	x1, x19
    f428:	mov	x0, x23
    f42c:	bl	11434 <grub_script_argv_append>
    f430:	cbnz	w0, f890 <grub_script_parse+0xf40>
    f434:	mov	x0, x19
    f438:	bl	0 <grub_free>
    f43c:	mov	x2, #0x1                   	// #1
    f440:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f444:	ldr	x1, [x0]
    f448:	mov	x0, x23
    f44c:	bl	11434 <grub_script_argv_append>
    f450:	cbnz	w0, fb38 <grub_script_parse+0x11e8>
    f454:	ldr	x0, [x20, #16]
    f458:	str	x0, [sp, #200]
    f45c:	b	f324 <grub_script_parse+0x9d4>
    f460:	ldr	x22, [x20, #8]
    f464:	str	wzr, [sp, #136]
    f468:	str	xzr, [sp, #144]
    f46c:	str	xzr, [sp, #152]
    f470:	add	x0, sp, #0x88
    f474:	bl	1139c <grub_script_argv_next>
    f478:	mov	w21, w0
    f47c:	cbnz	w0, f568 <grub_script_parse+0xc18>
    f480:	mov	x0, x22
    f484:	bl	ea68 <grub_script_parse+0x118>
    f488:	cbz	w0, f504 <grub_script_parse+0xbb4>
    f48c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f490:	ldr	x0, [x0]
    f494:	ldr	x0, [x0]
    f498:	cbz	x0, f554 <grub_script_parse+0xc04>
    f49c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f4a0:	ldr	x1, [x0]
    f4a4:	mov	x0, x22
    f4a8:	bl	0 <grub_strcmp>
    f4ac:	cbnz	w0, f57c <grub_script_parse+0xc2c>
    f4b0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f4b4:	ldr	x0, [x0]
    f4b8:	ldr	x0, [x0]
    f4bc:	ldr	w3, [x0, #8]
    f4c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f4c4:	ldr	x2, [x0]
    f4c8:	mov	x1, #0xe                   	// #14
    f4cc:	add	x0, sp, #0x78
    f4d0:	bl	0 <grub_snprintf>
    f4d4:	add	x0, sp, #0x78
    f4d8:	bl	0 <grub_strlen>
    f4dc:	mov	x2, x0
    f4e0:	add	x1, sp, #0x78
    f4e4:	add	x0, sp, #0x88
    f4e8:	bl	11434 <grub_script_argv_append>
    f4ec:	cbnz	w0, f568 <grub_script_parse+0xc18>
    f4f0:	ldr	x25, [sp, #144]
    f4f4:	mov	x19, #0x0                   	// #0
    f4f8:	mov	w28, #0x2a                  	// #42
    f4fc:	cbnz	x25, f82c <grub_script_parse+0xedc>
    f500:	b	f570 <grub_script_parse+0xc20>
    f504:	mov	x0, x22
    f508:	bl	0 <grub_env_get>
    f50c:	mov	x22, x0
    f510:	cbz	x0, f4f0 <grub_script_parse+0xba0>
    f514:	ldrb	w0, [x0]
    f518:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f51c:	cbnz	w19, f534 <grub_script_parse+0xbe4>
    f520:	mov	x1, x22
    f524:	add	x0, sp, #0x88
    f528:	bl	11598 <grub_script_argv_split_append>
    f52c:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f530:	b	f568 <grub_script_parse+0xc18>
    f534:	mov	x0, x22
    f538:	bl	0 <grub_strlen>
    f53c:	mov	x2, x0
    f540:	mov	x1, x22
    f544:	add	x0, sp, #0x88
    f548:	bl	11434 <grub_script_argv_append>
    f54c:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f550:	b	f568 <grub_script_parse+0xc18>
    f554:	mov	x2, #0x0                   	// #0
    f558:	mov	x1, #0x0                   	// #0
    f55c:	add	x0, sp, #0x88
    f560:	bl	11434 <grub_script_argv_append>
    f564:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f568:	add	x0, sp, #0x88
    f56c:	bl	1133c <grub_script_argv_free>
    f570:	mov	x0, #0x0                   	// #0
    f574:	bl	0 <grub_free>
    f578:	b	f324 <grub_script_parse+0x9d4>
    f57c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f580:	ldr	x1, [x0]
    f584:	mov	x0, x22
    f588:	bl	0 <grub_strcmp>
    f58c:	cbnz	w0, f648 <grub_script_parse+0xcf8>
    f590:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f594:	ldr	x0, [x0]
    f598:	ldr	x0, [x0]
    f59c:	ldr	w0, [x0, #8]
    f5a0:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f5a4:	mov	w22, #0x0                   	// #0
    f5a8:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    f5ac:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
    f5b0:	b	f5e8 <grub_script_parse+0xc98>
    f5b4:	ldr	x0, [x25]
    f5b8:	ldr	x0, [x0]
    f5bc:	ldr	x0, [x0, #16]
    f5c0:	ldr	x1, [x0, w22, uxtw #3]
    f5c4:	add	x0, sp, #0x88
    f5c8:	bl	11598 <grub_script_argv_split_append>
    f5cc:	cbnz	w0, f568 <grub_script_parse+0xc18>
    f5d0:	add	w22, w22, #0x1
    f5d4:	ldr	x0, [x25]
    f5d8:	ldr	x0, [x0]
    f5dc:	ldr	w0, [x0, #8]
    f5e0:	cmp	w22, w0
    f5e4:	b.cs	f4f0 <grub_script_parse+0xba0>  // b.hs, b.nlast
    f5e8:	cbnz	w19, f600 <grub_script_parse+0xcb0>
    f5ec:	cbz	w22, f5b4 <grub_script_parse+0xc64>
    f5f0:	add	x0, sp, #0x88
    f5f4:	bl	1139c <grub_script_argv_next>
    f5f8:	cbz	w0, f5b4 <grub_script_parse+0xc64>
    f5fc:	b	f568 <grub_script_parse+0xc18>
    f600:	cbz	w22, f618 <grub_script_parse+0xcc8>
    f604:	mov	x2, #0x1                   	// #1
    f608:	ldr	x1, [x28]
    f60c:	add	x0, sp, #0x88
    f610:	bl	11434 <grub_script_argv_append>
    f614:	cbnz	w0, f568 <grub_script_parse+0xc18>
    f618:	ldr	x0, [x25]
    f61c:	ldr	x0, [x0]
    f620:	ldr	x0, [x0, #16]
    f624:	ldr	x26, [x0, w22, uxtw #3]
    f628:	mov	x0, x26
    f62c:	bl	0 <grub_strlen>
    f630:	mov	x2, x0
    f634:	mov	x1, x26
    f638:	add	x0, sp, #0x88
    f63c:	bl	11434 <grub_script_argv_append>
    f640:	cbz	w0, f5d0 <grub_script_parse+0xc80>
    f644:	b	f568 <grub_script_parse+0xc18>
    f648:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f64c:	ldr	x1, [x0]
    f650:	mov	x0, x22
    f654:	bl	0 <grub_strcmp>
    f658:	cbnz	w0, f6f8 <grub_script_parse+0xda8>
    f65c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f660:	ldr	x0, [x0]
    f664:	ldr	x0, [x0]
    f668:	ldr	w0, [x0, #8]
    f66c:	mov	w22, #0x0                   	// #0
    f670:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
    f674:	cbnz	w0, f6d4 <grub_script_parse+0xd84>
    f678:	b	f4f0 <grub_script_parse+0xba0>
    f67c:	add	x0, sp, #0x88
    f680:	bl	1139c <grub_script_argv_next>
    f684:	cbz	w0, f6d4 <grub_script_parse+0xd84>
    f688:	b	f568 <grub_script_parse+0xc18>
    f68c:	ldr	x0, [x25]
    f690:	ldr	x0, [x0]
    f694:	ldr	x0, [x0, #16]
    f698:	ldr	x26, [x0, w22, uxtw #3]
    f69c:	mov	x0, x26
    f6a0:	bl	0 <grub_strlen>
    f6a4:	mov	x2, x0
    f6a8:	mov	x1, x26
    f6ac:	add	x0, sp, #0x88
    f6b0:	bl	11434 <grub_script_argv_append>
    f6b4:	cbnz	w0, f568 <grub_script_parse+0xc18>
    f6b8:	add	w22, w22, #0x1
    f6bc:	ldr	x0, [x25]
    f6c0:	ldr	x0, [x0]
    f6c4:	ldr	w0, [x0, #8]
    f6c8:	cmp	w22, w0
    f6cc:	b.cs	f4f0 <grub_script_parse+0xba0>  // b.hs, b.nlast
    f6d0:	cbnz	w22, f67c <grub_script_parse+0xd2c>
    f6d4:	cbnz	w19, f68c <grub_script_parse+0xd3c>
    f6d8:	ldr	x0, [x25]
    f6dc:	ldr	x0, [x0]
    f6e0:	ldr	x0, [x0, #16]
    f6e4:	ldr	x1, [x0, w22, uxtw #3]
    f6e8:	add	x0, sp, #0x88
    f6ec:	bl	11598 <grub_script_argv_split_append>
    f6f0:	cbz	w0, f6b8 <grub_script_parse+0xd68>
    f6f4:	b	f568 <grub_script_parse+0xc18>
    f6f8:	mov	w2, #0xa                   	// #10
    f6fc:	mov	x1, #0x0                   	// #0
    f700:	mov	x0, x22
    f704:	bl	0 <grub_strtoul>
    f708:	cbz	x0, f4f0 <grub_script_parse+0xba0>
    f70c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    f710:	ldr	x1, [x1]
    f714:	ldr	x1, [x1]
    f718:	ldr	w2, [x1, #8]
    f71c:	cmp	x0, x2
    f720:	b.hi	f4f0 <grub_script_parse+0xba0>  // b.pmore
    f724:	cbnz	w19, f744 <grub_script_parse+0xdf4>
    f728:	ldr	x1, [x1, #16]
    f72c:	add	x0, x1, x0, lsl #3
    f730:	ldur	x1, [x0, #-8]
    f734:	add	x0, sp, #0x88
    f738:	bl	11598 <grub_script_argv_split_append>
    f73c:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f740:	b	f568 <grub_script_parse+0xc18>
    f744:	ldr	x1, [x1, #16]
    f748:	add	x0, x1, x0, lsl #3
    f74c:	ldur	x19, [x0, #-8]
    f750:	mov	x0, x19
    f754:	bl	0 <grub_strlen>
    f758:	mov	x2, x0
    f75c:	mov	x1, x19
    f760:	add	x0, sp, #0x88
    f764:	bl	11434 <grub_script_argv_append>
    f768:	cbz	w0, f4f0 <grub_script_parse+0xba0>
    f76c:	b	f568 <grub_script_parse+0xc18>
    f770:	mov	x0, x23
    f774:	bl	1139c <grub_script_argv_next>
    f778:	mov	w21, #0x1                   	// #1
    f77c:	cbz	w0, f83c <grub_script_parse+0xeec>
    f780:	b	f820 <grub_script_parse+0xed0>
    f784:	mov	x2, x1
    f788:	strb	w0, [x2], #1
    f78c:	ldrb	w0, [x22], #1
    f790:	cbz	w0, f7c8 <grub_script_parse+0xe78>
    f794:	mov	x1, x2
    f798:	cmp	w0, #0x5c
    f79c:	b.ne	f784 <grub_script_parse+0xe34>  // b.any
    f7a0:	strb	w24, [x2]
    f7a4:	ldrb	w1, [x22]
    f7a8:	cmp	w1, #0x3f
    f7ac:	ccmp	w1, w28, #0x4, ne  // ne = any
    f7b0:	add	x1, x2, #0x1
    f7b4:	b.ne	f784 <grub_script_parse+0xe34>  // b.any
    f7b8:	add	x1, x2, #0x2
    f7bc:	strb	w24, [x2, #1]
    f7c0:	b	f784 <grub_script_parse+0xe34>
    f7c4:	mov	x2, x26
    f7c8:	strb	wzr, [x2]
    f7cc:	sub	x2, x2, x26
    f7d0:	mov	x1, x26
    f7d4:	mov	x0, x23
    f7d8:	bl	11434 <grub_script_argv_append>
    f7dc:	mov	w21, w0
    f7e0:	mov	x0, x26
    f7e4:	bl	0 <grub_free>
    f7e8:	b	f820 <grub_script_parse+0xed0>
    f7ec:	ldr	x0, [x25, x19, lsl #3]
    f7f0:	bl	ef60 <grub_script_parse+0x610>
    f7f4:	mov	x22, x0
    f7f8:	mov	w21, #0x1                   	// #1
    f7fc:	cbz	x0, f820 <grub_script_parse+0xed0>
    f800:	bl	0 <grub_strlen>
    f804:	mov	x2, x0
    f808:	mov	x1, x22
    f80c:	mov	x0, x23
    f810:	bl	11434 <grub_script_argv_append>
    f814:	mov	w21, w0
    f818:	mov	x0, x22
    f81c:	bl	0 <grub_free>
    f820:	ldr	x0, [x25, x19, lsl #3]
    f824:	bl	0 <grub_free>
    f828:	add	x19, x19, #0x1
    f82c:	ldr	x0, [x25, x19, lsl #3]
    f830:	cbz	x0, f87c <grub_script_parse+0xf2c>
    f834:	cbnz	w21, f820 <grub_script_parse+0xed0>
    f838:	cbnz	w19, f770 <grub_script_parse+0xe20>
    f83c:	ldr	w0, [x20]
    f840:	cbnz	w0, f7ec <grub_script_parse+0xe9c>
    f844:	ldr	x22, [x25, x19, lsl #3]
    f848:	mov	x0, x22
    f84c:	bl	0 <grub_strlen>
    f850:	lsl	w0, w0, #1
    f854:	add	w0, w0, #0x1
    f858:	sxtw	x0, w0
    f85c:	bl	0 <grub_malloc>
    f860:	mov	x26, x0
    f864:	mov	w21, #0x1                   	// #1
    f868:	cbz	x0, f820 <grub_script_parse+0xed0>
    f86c:	ldrb	w0, [x22], #1
    f870:	cbz	w0, f7c4 <grub_script_parse+0xe74>
    f874:	mov	x2, x26
    f878:	b	f794 <grub_script_parse+0xe44>
    f87c:	mov	x0, x25
    f880:	bl	0 <grub_free>
    f884:	cbz	w21, f324 <grub_script_parse+0x9d4>
    f888:	ldp	x27, x28, [sp, #80]
    f88c:	b	fb44 <grub_script_parse+0x11f4>
    f890:	mov	x0, x19
    f894:	bl	0 <grub_free>
    f898:	ldp	x27, x28, [sp, #80]
    f89c:	b	fb44 <grub_script_parse+0x11f4>
    f8a0:	ldr	x19, [x20, #8]
    f8a4:	ldrb	w0, [x19]
    f8a8:	cbz	w0, f324 <grub_script_parse+0x9d4>
    f8ac:	mov	x0, x19
    f8b0:	bl	0 <grub_strlen>
    f8b4:	mov	x2, x0
    f8b8:	mov	x1, x19
    f8bc:	mov	x0, x23
    f8c0:	bl	11434 <grub_script_argv_append>
    f8c4:	cbz	w0, f324 <grub_script_parse+0x9d4>
    f8c8:	ldp	x27, x28, [sp, #80]
    f8cc:	b	fb44 <grub_script_parse+0x11f4>
    f8d0:	mov	x0, #0x0                   	// #0
    f8d4:	b	f380 <grub_script_parse+0xa30>
    f8d8:	mov	x0, x22
    f8dc:	bl	0 <grub_strlen>
    f8e0:	ldr	x1, [sp, #152]
    f8e4:	add	x0, x0, x1
    f8e8:	bl	0 <grub_malloc>
    f8ec:	mov	x19, x0
    f8f0:	mov	w21, #0x1                   	// #1
    f8f4:	cbz	x0, f960 <grub_script_parse+0x1010>
    f8f8:	mov	x3, x0
    f8fc:	add	x2, sp, #0x88
    f900:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    f904:	ldr	x1, [x0]
    f908:	mov	x0, x22
    f90c:	bl	eb98 <grub_script_parse+0x248>
    f910:	cbnz	w0, f960 <grub_script_parse+0x1010>
    f914:	mov	x0, x19
    f918:	bl	ef60 <grub_script_parse+0x610>
    f91c:	mov	x22, x0
    f920:	bl	0 <grub_strlen>
    f924:	mov	x2, x0
    f928:	mov	x1, x22
    f92c:	mov	x0, x23
    f930:	bl	11434 <grub_script_argv_append>
    f934:	mov	w21, w0
    f938:	cbnz	w0, f948 <grub_script_parse+0xff8>
    f93c:	mov	x0, x22
    f940:	bl	0 <grub_free>
    f944:	b	f960 <grub_script_parse+0x1010>
    f948:	mov	x0, x22
    f94c:	bl	0 <grub_free>
    f950:	mov	w21, #0x1                   	// #1
    f954:	b	f960 <grub_script_parse+0x1010>
    f958:	mov	w21, #0x1                   	// #1
    f95c:	mov	x19, #0x0                   	// #0
    f960:	mov	x0, x19
    f964:	bl	0 <grub_free>
    f968:	ldr	x0, [sp, #144]
    f96c:	cbz	x0, f990 <grub_script_parse+0x1040>
    f970:	mov	x19, #0x0                   	// #0
    f974:	ldr	x1, [sp, #136]
    f978:	ldr	x0, [x1, x19, lsl #3]
    f97c:	bl	0 <grub_free>
    f980:	add	x19, x19, #0x1
    f984:	ldr	x1, [sp, #144]
    f988:	cmp	x19, x1
    f98c:	b.cc	f974 <grub_script_parse+0x1024>  // b.lo, b.ul, b.last
    f990:	ldr	x0, [sp, #136]
    f994:	bl	0 <grub_free>
    f998:	cbz	w21, f324 <grub_script_parse+0x9d4>
    f99c:	ldp	x27, x28, [sp, #80]
    f9a0:	b	fb44 <grub_script_parse+0x11f4>
    f9a4:	ldr	x0, [x20, #8]
    f9a8:	bl	ef60 <grub_script_parse+0x610>
    f9ac:	mov	x19, x0
    f9b0:	cbz	x0, fb40 <grub_script_parse+0x11f0>
    f9b4:	bl	0 <grub_strlen>
    f9b8:	mov	x2, x0
    f9bc:	mov	x1, x19
    f9c0:	mov	x0, x23
    f9c4:	bl	11434 <grub_script_argv_append>
    f9c8:	mov	w21, w0
    f9cc:	mov	x0, x19
    f9d0:	bl	0 <grub_free>
    f9d4:	cbz	w21, f324 <grub_script_parse+0x9d4>
    f9d8:	ldp	x27, x28, [sp, #80]
    f9dc:	b	fb44 <grub_script_parse+0x11f4>
    f9e0:	ldr	x27, [x27]
    f9e4:	cbnz	x27, f2fc <grub_script_parse+0x9ac>
    f9e8:	ldp	x27, x28, [sp, #80]
    f9ec:	b	f9f4 <grub_script_parse+0x10a4>
    f9f0:	ldp	x27, x28, [sp, #80]
    f9f4:	ldr	w0, [sp, #184]
    f9f8:	sub	w0, w0, #0x1
    f9fc:	ldr	x1, [sp, #192]
    fa00:	ldr	x1, [x1, w0, uxtw #3]
    fa04:	cbz	x1, fa40 <grub_script_parse+0x10f0>
    fa08:	ldp	x0, x1, [sp, #184]
    fa0c:	stp	x0, x1, [sp, #160]
    fa10:	ldr	x0, [sp, #200]
    fa14:	str	x0, [sp, #176]
    fa18:	str	wzr, [sp, #184]
    fa1c:	str	xzr, [sp, #192]
    fa20:	ldr	x2, [sp, #168]
    fa24:	ldr	x0, [x2]
    fa28:	cbz	x0, fafc <grub_script_parse+0x11ac>
    fa2c:	mov	x22, #0x0                   	// #0
    fa30:	adrp	x23, 0 <grub_normal_free_menu-0x26c>
    fa34:	mov	w24, #0x1                   	// #1
    fa38:	mov	w21, w24
    fa3c:	b	fc10 <grub_script_parse+0x12c0>
    fa40:	str	w0, [sp, #184]
    fa44:	b	fa08 <grub_script_parse+0x10b8>
    fa48:	add	x0, sp, #0xa0
    fa4c:	bl	1133c <grub_script_argv_free>
    fa50:	b	fb44 <grub_script_parse+0x11f4>
    fa54:	add	x0, sp, #0xb8
    fa58:	bl	1139c <grub_script_argv_next>
    fa5c:	ldr	x0, [sp, #168]
    fa60:	ldr	x19, [x0, x22]
    fa64:	mov	x0, x19
    fa68:	bl	0 <grub_strlen>
    fa6c:	add	w0, w0, #0x1
    fa70:	sxtw	x0, w0
    fa74:	bl	0 <grub_malloc>
    fa78:	mov	x20, x0
    fa7c:	cbz	x0, fbfc <grub_script_parse+0x12ac>
    fa80:	mov	x2, x19
    fa84:	ldrb	w3, [x2], #1
    fa88:	cbz	w3, fad0 <grub_script_parse+0x1180>
    fa8c:	mov	x1, x0
    fa90:	sub	w4, w24, w0
    fa94:	b	fab8 <grub_script_parse+0x1168>
    fa98:	add	w0, w4, w1
    fa9c:	ldrb	w2, [x19, #1]
    faa0:	strb	w2, [x1]
    faa4:	add	x19, x19, #0x2
    faa8:	mov	x2, x19
    faac:	ldrb	w3, [x2], #1
    fab0:	add	x1, x1, #0x1
    fab4:	cbz	w3, fad4 <grub_script_parse+0x1184>
    fab8:	cmp	w3, #0x5c
    fabc:	b.eq	fa98 <grub_script_parse+0x1148>  // b.none
    fac0:	add	w0, w4, w1
    fac4:	strb	w3, [x1]
    fac8:	mov	x19, x2
    facc:	b	faa8 <grub_script_parse+0x1158>
    fad0:	mov	w0, #0x0                   	// #0
    fad4:	strb	wzr, [x20, w0, sxtw]
    fad8:	mov	x0, x20
    fadc:	bl	0 <grub_strlen>
    fae0:	mov	x2, x0
    fae4:	mov	x1, x20
    fae8:	add	x0, sp, #0xb8
    faec:	bl	11434 <grub_script_argv_append>
    faf0:	mov	x0, x20
    faf4:	bl	0 <grub_free>
    faf8:	b	fbfc <grub_script_parse+0x12ac>
    fafc:	add	x0, sp, #0xa0
    fb00:	bl	1133c <grub_script_argv_free>
    fb04:	ldp	x0, x1, [sp, #184]
    fb08:	ldr	x2, [sp, #104]
    fb0c:	stp	x0, x1, [x2]
    fb10:	ldr	x0, [sp, #200]
    fb14:	str	x0, [x2, #16]
    fb18:	mov	w0, #0x0                   	// #0
    fb1c:	b	fb50 <grub_script_parse+0x1200>
    fb20:	ldp	x27, x28, [sp, #80]
    fb24:	b	fb44 <grub_script_parse+0x11f4>
    fb28:	ldp	x27, x28, [sp, #80]
    fb2c:	b	fb44 <grub_script_parse+0x11f4>
    fb30:	ldp	x27, x28, [sp, #80]
    fb34:	b	fb44 <grub_script_parse+0x11f4>
    fb38:	ldp	x27, x28, [sp, #80]
    fb3c:	b	fb44 <grub_script_parse+0x11f4>
    fb40:	ldp	x27, x28, [sp, #80]
    fb44:	add	x0, sp, #0xb8
    fb48:	bl	1133c <grub_script_argv_free>
    fb4c:	mov	w0, #0x1                   	// #1
    fb50:	ldp	x19, x20, [sp, #16]
    fb54:	ldp	x21, x22, [sp, #32]
    fb58:	ldp	x23, x24, [sp, #48]
    fb5c:	ldp	x25, x26, [sp, #64]
    fb60:	ldp	x29, x30, [sp], #208
    fb64:	ret
    fb68:	bl	0 <grub_free>
    fb6c:	add	x0, sp, #0xa0
    fb70:	bl	1133c <grub_script_argv_free>
    fb74:	b	fb44 <grub_script_parse+0x11f4>
    fb78:	ldr	x0, [sp, #136]
    fb7c:	ldr	x0, [x0, x25]
    fb80:	bl	0 <grub_free>
    fb84:	ldr	x0, [sp, #136]
    fb88:	sbfiz	x25, x20, #3, #32
    fb8c:	ldr	x1, [x0, w20, sxtw #3]
    fb90:	cbz	x1, fb68 <grub_script_parse+0x1218>
    fb94:	mov	w19, w21
    fb98:	add	w20, w20, #0x1
    fb9c:	cbnz	w19, fb78 <grub_script_parse+0x1228>
    fba0:	add	x0, sp, #0xb8
    fba4:	bl	1139c <grub_script_argv_next>
    fba8:	cbnz	w0, fb78 <grub_script_parse+0x1228>
    fbac:	ldr	x0, [sp, #136]
    fbb0:	ldr	x19, [x0, x25]
    fbb4:	mov	x0, x19
    fbb8:	bl	0 <grub_strlen>
    fbbc:	mov	x2, x0
    fbc0:	mov	x1, x19
    fbc4:	add	x0, sp, #0xb8
    fbc8:	bl	11434 <grub_script_argv_append>
    fbcc:	mov	w26, w0
    fbd0:	cmp	w0, #0x0
    fbd4:	cset	w19, ne  // ne = any
    fbd8:	ldr	x0, [sp, #136]
    fbdc:	ldr	x0, [x0, x25]
    fbe0:	bl	0 <grub_free>
    fbe4:	ldr	x0, [sp, #136]
    fbe8:	sbfiz	x25, x20, #3, #32
    fbec:	ldr	x1, [x0, w20, sxtw #3]
    fbf0:	cbnz	x1, fb98 <grub_script_parse+0x1248>
    fbf4:	bl	0 <grub_free>
    fbf8:	cbnz	w26, fb6c <grub_script_parse+0x121c>
    fbfc:	add	x22, x22, #0x8
    fc00:	ldr	x0, [sp, #168]
    fc04:	add	x2, x0, x22
    fc08:	ldr	x0, [x0, x22]
    fc0c:	cbz	x0, fafc <grub_script_parse+0x11ac>
    fc10:	str	xzr, [sp, #136]
    fc14:	ldr	x0, [x23]
    fc18:	ldr	x0, [x0]
    fc1c:	cbz	x0, fa54 <grub_script_parse+0x1104>
    fc20:	ldr	x3, [x0]
    fc24:	add	x1, sp, #0x88
    fc28:	ldr	x0, [x2]
    fc2c:	blr	x3
    fc30:	cbnz	w0, fa48 <grub_script_parse+0x10f8>
    fc34:	ldr	x0, [sp, #136]
    fc38:	cbz	x0, fa54 <grub_script_parse+0x1104>
    fc3c:	ldr	x1, [x0]
    fc40:	mov	w20, #0x1                   	// #1
    fc44:	mov	w19, #0x0                   	// #0
    fc48:	mov	x25, #0x0                   	// #0
    fc4c:	cbnz	x1, fb9c <grub_script_parse+0x124c>
    fc50:	bl	0 <grub_free>
    fc54:	b	fbfc <grub_script_parse+0x12ac>
	...

000000000000fcc0 <grub_script_break>:
    fcc0:	stp	x29, x30, [sp, #-48]!
    fcc4:	mov	x29, sp
    fcc8:	stp	x19, x20, [sp, #16]
    fccc:	mov	x19, x0
    fcd0:	str	xzr, [sp, #40]
    fcd4:	cbz	w1, fd5c <grub_script_break+0x9c>
    fcd8:	mov	x3, x2
    fcdc:	cmp	w1, #0x1
    fce0:	b.gt	fd2c <grub_script_break+0x6c>
    fce4:	mov	w2, #0xa                   	// #10
    fce8:	add	x1, sp, #0x28
    fcec:	ldr	x0, [x3]
    fcf0:	bl	0 <grub_strtoul>
    fcf4:	mov	x20, x0
    fcf8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fcfc:	ldr	x0, [x0]
    fd00:	ldr	w0, [x0]
    fd04:	cbnz	w0, fd3c <grub_script_break+0x7c>
    fd08:	ldr	x0, [sp, #40]
    fd0c:	ldrb	w0, [x0]
    fd10:	cbnz	w0, fd48 <grub_script_break+0x88>
    fd14:	cbnz	x20, fd60 <grub_script_break+0xa0>
    fd18:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fd1c:	ldr	x1, [x0]
    fd20:	mov	w0, #0x12                  	// #18
    fd24:	bl	0 <grub_error>
    fd28:	b	fd3c <grub_script_break+0x7c>
    fd2c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fd30:	ldr	x1, [x0]
    fd34:	mov	w0, #0x12                  	// #18
    fd38:	bl	0 <grub_error>
    fd3c:	ldp	x19, x20, [sp, #16]
    fd40:	ldp	x29, x30, [sp], #48
    fd44:	ret
    fd48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fd4c:	ldr	x1, [x0]
    fd50:	mov	w0, #0x12                  	// #18
    fd54:	bl	0 <grub_error>
    fd58:	b	fd3c <grub_script_break+0x7c>
    fd5c:	mov	x20, #0x1                   	// #1
    fd60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fd64:	ldr	x1, [x0]
    fd68:	ldr	x0, [x19, #16]
    fd6c:	bl	0 <grub_strcmp>
    fd70:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
    fd74:	ldr	x1, [x1]
    fd78:	cmp	w0, #0x0
    fd7c:	cset	x0, ne  // ne = any
    fd80:	str	x0, [x1, #8]
    fd84:	str	x20, [x1, #16]
    fd88:	ldr	x1, [x1, #24]
    fd8c:	mov	w0, #0x0                   	// #0
    fd90:	cmp	x1, x20
    fd94:	b.cs	fd3c <grub_script_break+0x7c>  // b.hs, b.nlast
    fd98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fd9c:	ldr	x0, [x0]
    fda0:	str	x1, [x0, #16]
    fda4:	mov	w0, #0x0                   	// #0
    fda8:	b	fd3c <grub_script_break+0x7c>
    fdac:	nop
	...

000000000000fde0 <grub_script_shift>:
    fde0:	stp	x29, x30, [sp, #-32]!
    fde4:	mov	x29, sp
    fde8:	str	xzr, [sp, #24]
    fdec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fdf0:	ldr	x0, [x0]
    fdf4:	ldr	x0, [x0]
    fdf8:	cbz	x0, fe84 <grub_script_shift+0xa4>
    fdfc:	mov	x3, x2
    fe00:	cbz	w1, fe38 <grub_script_shift+0x58>
    fe04:	mov	w0, #0x12                  	// #18
    fe08:	cmp	w1, #0x1
    fe0c:	b.gt	fe7c <grub_script_shift+0x9c>
    fe10:	mov	w2, #0xa                   	// #10
    fe14:	add	x1, sp, #0x18
    fe18:	ldr	x0, [x3]
    fe1c:	bl	0 <grub_strtoul>
    fe20:	mov	x1, x0
    fe24:	ldr	x0, [sp, #24]
    fe28:	ldrb	w2, [x0]
    fe2c:	mov	w0, #0x12                  	// #18
    fe30:	cbz	w2, fe3c <grub_script_shift+0x5c>
    fe34:	b	fe7c <grub_script_shift+0x9c>
    fe38:	mov	x1, #0x1                   	// #1
    fe3c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    fe40:	ldr	x0, [x0]
    fe44:	ldr	x2, [x0]
    fe48:	ldr	w3, [x2, #8]
    fe4c:	mov	w0, #0x12                  	// #18
    fe50:	cmp	x1, w3, uxtw
    fe54:	b.hi	fe7c <grub_script_shift+0x9c>  // b.pmore
    fe58:	ldr	w0, [x2, #4]
    fe5c:	add	w0, w0, w1
    fe60:	str	w0, [x2, #4]
    fe64:	sub	w3, w3, w1
    fe68:	str	w3, [x2, #8]
    fe6c:	ldr	x0, [x2, #16]
    fe70:	add	x1, x0, x1, lsl #3
    fe74:	str	x1, [x2, #16]
    fe78:	mov	w0, #0x0                   	// #0
    fe7c:	ldp	x29, x30, [sp], #32
    fe80:	ret
    fe84:	mov	w0, #0x0                   	// #0
    fe88:	b	fe7c <grub_script_shift+0x9c>
    fe8c:	nop
	...

000000000000fe98 <grub_script_setparams>:
    fe98:	stp	x29, x30, [sp, #-80]!
    fe9c:	mov	x29, sp
    fea0:	str	wzr, [sp, #56]
    fea4:	str	xzr, [sp, #64]
    fea8:	str	xzr, [sp, #72]
    feac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    feb0:	ldr	x0, [x0]
    feb4:	ldr	x0, [x0]
    feb8:	cbz	x0, ff60 <grub_script_setparams+0xc8>
    febc:	stp	x19, x20, [sp, #16]
    fec0:	str	x21, [sp, #32]
    fec4:	mov	w20, w1
    fec8:	mov	x21, x2
    fecc:	mov	x0, #0x20                  	// #32
    fed0:	bl	0 <grub_malloc>
    fed4:	mov	x19, x0
    fed8:	cbz	x0, ff28 <grub_script_setparams+0x90>
    fedc:	mov	x2, x21
    fee0:	mov	w1, w20
    fee4:	add	x0, sp, #0x38
    fee8:	bl	114f0 <grub_script_argv_make>
    feec:	cbnz	w0, ff40 <grub_script_setparams+0xa8>
    fef0:	str	wzr, [x19, #4]
    fef4:	ldp	x0, x1, [sp, #56]
    fef8:	stp	x0, x1, [x19, #8]
    fefc:	ldr	x0, [sp, #72]
    ff00:	str	x0, [x19, #24]
    ff04:	mov	w0, #0x3                   	// #3
    ff08:	str	w0, [x19]
    ff0c:	mov	x0, x19
    ff10:	bl	eb08 <grub_script_parse+0x1b8>
    ff14:	mov	w0, #0x0                   	// #0
    ff18:	ldp	x19, x20, [sp, #16]
    ff1c:	ldr	x21, [sp, #32]
    ff20:	ldp	x29, x30, [sp], #80
    ff24:	ret
    ff28:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ff2c:	ldr	x0, [x0]
    ff30:	ldr	w0, [x0]
    ff34:	ldp	x19, x20, [sp, #16]
    ff38:	ldr	x21, [sp, #32]
    ff3c:	b	ff20 <grub_script_setparams+0x88>
    ff40:	mov	x0, x19
    ff44:	bl	0 <grub_free>
    ff48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ff4c:	ldr	x0, [x0]
    ff50:	ldr	w0, [x0]
    ff54:	ldp	x19, x20, [sp, #16]
    ff58:	ldr	x21, [sp, #32]
    ff5c:	b	ff20 <grub_script_setparams+0x88>
    ff60:	mov	w0, #0x11                  	// #17
    ff64:	b	ff20 <grub_script_setparams+0x88>
	...

000000000000ff78 <grub_script_return>:
    ff78:	stp	x29, x30, [sp, #-32]!
    ff7c:	mov	x29, sp
    ff80:	mov	x0, x2
    ff84:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
    ff88:	ldr	x2, [x2]
    ff8c:	ldr	x2, [x2]
    ff90:	cmp	x2, #0x0
    ff94:	ccmp	w1, #0x1, #0x0, ne  // ne = any
    ff98:	b.gt	ffdc <grub_script_return+0x64>
    ff9c:	cbnz	w1, fff4 <grub_script_return+0x7c>
    ffa0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ffa4:	ldr	x0, [x0]
    ffa8:	mov	x1, #0x1                   	// #1
    ffac:	str	x1, [x0, #32]
    ffb0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ffb4:	ldr	x0, [x0]
    ffb8:	bl	0 <grub_env_get>
    ffbc:	mov	x3, x0
    ffc0:	mov	w0, #0x0                   	// #0
    ffc4:	cbz	x3, ffec <grub_script_return+0x74>
    ffc8:	mov	w2, #0xa                   	// #10
    ffcc:	mov	x1, #0x0                   	// #0
    ffd0:	mov	x0, x3
    ffd4:	bl	0 <grub_strtoul>
    ffd8:	b	ffec <grub_script_return+0x74>
    ffdc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
    ffe0:	ldr	x1, [x0]
    ffe4:	mov	w0, #0x12                  	// #18
    ffe8:	bl	0 <grub_error>
    ffec:	ldp	x29, x30, [sp], #32
    fff0:	ret
    fff4:	mov	w2, #0xa                   	// #10
    fff8:	add	x1, sp, #0x18
    fffc:	ldr	x0, [x0]
   10000:	bl	0 <grub_strtoul>
   10004:	mov	x2, x0
   10008:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1000c:	ldr	x0, [x0]
   10010:	ldr	w0, [x0]
   10014:	cbnz	w0, ffec <grub_script_return+0x74>
   10018:	ldr	x1, [sp, #24]
   1001c:	ldrb	w1, [x1]
   10020:	cbnz	w1, 1004c <grub_script_return+0xd4>
   10024:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   10028:	ldr	x1, [x1]
   1002c:	mov	x3, #0x1                   	// #1
   10030:	str	x3, [x1, #32]
   10034:	cbz	x2, ffec <grub_script_return+0x74>
   10038:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1003c:	ldr	x1, [x0]
   10040:	mov	w0, w2
   10044:	bl	0 <grub_error>
   10048:	b	ffec <grub_script_return+0x74>
   1004c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10050:	ldr	x1, [x0]
   10054:	mov	w0, #0x12                  	// #18
   10058:	bl	0 <grub_error>
   1005c:	b	ffec <grub_script_return+0x74>
	...

0000000000010090 <grub_script_execute_cmdlist>:
   10090:	stp	x29, x30, [sp, #-32]!
   10094:	mov	x29, sp
   10098:	stp	x19, x20, [sp, #16]
   1009c:	ldr	x19, [x0, #8]
   100a0:	cbz	x19, 100e0 <grub_script_execute_cmdlist+0x50>
   100a4:	mov	w0, #0x0                   	// #0
   100a8:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
   100ac:	ldr	x1, [x20]
   100b0:	ldr	x1, [x1, #16]
   100b4:	cbnz	x1, 100d4 <grub_script_execute_cmdlist+0x44>
   100b8:	mov	x0, x19
   100bc:	bl	f040 <grub_script_parse+0x6f0>
   100c0:	ldr	x1, [x20]
   100c4:	ldr	x1, [x1, #32]
   100c8:	cbnz	x1, 100d4 <grub_script_execute_cmdlist+0x44>
   100cc:	ldr	x19, [x19, #8]
   100d0:	cbnz	x19, 100ac <grub_script_execute_cmdlist+0x1c>
   100d4:	ldp	x19, x20, [sp, #16]
   100d8:	ldp	x29, x30, [sp], #32
   100dc:	ret
   100e0:	mov	w0, #0x0                   	// #0
   100e4:	b	100d4 <grub_script_execute_cmdlist+0x44>
	...

00000000000100f0 <grub_script_execute_cmdif>:
   100f0:	stp	x29, x30, [sp, #-32]!
   100f4:	mov	x29, sp
   100f8:	str	x19, [sp, #16]
   100fc:	mov	x19, x0
   10100:	ldr	x0, [x0, #16]
   10104:	bl	f040 <grub_script_parse+0x6f0>
   10108:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   1010c:	ldr	x1, [x1]
   10110:	ldr	x1, [x1, #32]
   10114:	cbz	x1, 10124 <grub_script_execute_cmdif+0x34>
   10118:	ldr	x19, [sp, #16]
   1011c:	ldp	x29, x30, [sp], #32
   10120:	ret
   10124:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10128:	ldr	x0, [x0]
   1012c:	bl	0 <grub_env_get>
   10130:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   10134:	ldr	x1, [x1]
   10138:	str	wzr, [x1]
   1013c:	cbz	x0, 10150 <grub_script_execute_cmdif+0x60>
   10140:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   10144:	ldr	x1, [x1]
   10148:	bl	0 <grub_strcmp>
   1014c:	cbz	w0, 1015c <grub_script_execute_cmdif+0x6c>
   10150:	ldr	x0, [x19, #32]
   10154:	bl	f040 <grub_script_parse+0x6f0>
   10158:	b	10118 <grub_script_execute_cmdif+0x28>
   1015c:	ldr	x0, [x19, #24]
   10160:	bl	f040 <grub_script_parse+0x6f0>
   10164:	b	10118 <grub_script_execute_cmdif+0x28>
	...

0000000000010188 <grub_script_execute_cmdfor>:
   10188:	stp	x29, x30, [sp, #-80]!
   1018c:	mov	x29, sp
   10190:	stp	x21, x22, [sp, #32]
   10194:	mov	x22, x0
   10198:	str	wzr, [sp, #56]
   1019c:	str	xzr, [sp, #64]
   101a0:	str	xzr, [sp, #72]
   101a4:	add	x1, sp, #0x38
   101a8:	ldr	x0, [x0, #24]
   101ac:	bl	f2c4 <grub_script_parse+0x974>
   101b0:	cbnz	w0, 101e4 <grub_script_execute_cmdfor+0x5c>
   101b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   101b8:	ldr	x1, [x0]
   101bc:	ldr	x0, [x1, #24]
   101c0:	add	x0, x0, #0x1
   101c4:	str	x0, [x1, #24]
   101c8:	ldr	w21, [sp, #56]
   101cc:	cbz	w21, 1026c <grub_script_execute_cmdfor+0xe4>
   101d0:	stp	x19, x20, [sp, #16]
   101d4:	mov	w21, #0x0                   	// #0
   101d8:	mov	w19, #0x0                   	// #0
   101dc:	adrp	x20, 0 <grub_normal_free_menu-0x26c>
   101e0:	b	10210 <grub_script_execute_cmdfor+0x88>
   101e4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   101e8:	ldr	x0, [x0]
   101ec:	ldr	w21, [x0]
   101f0:	b	102a8 <grub_script_execute_cmdfor+0x120>
   101f4:	ldr	x1, [x20]
   101f8:	ldr	x1, [x1, #16]
   101fc:	cbz	x1, 10234 <grub_script_execute_cmdfor+0xac>
   10200:	add	w19, w19, #0x1
   10204:	ldr	w1, [sp, #56]
   10208:	cmp	w1, w19
   1020c:	b.ls	10268 <grub_script_execute_cmdfor+0xe0>  // b.plast
   10210:	ldr	x1, [x20]
   10214:	ldr	x1, [x1, #8]
   10218:	cbz	x1, 101f4 <grub_script_execute_cmdfor+0x6c>
   1021c:	ldr	x0, [x20]
   10220:	ldr	x0, [x0, #16]
   10224:	cmp	x0, #0x1
   10228:	b.ne	101f4 <grub_script_execute_cmdfor+0x6c>  // b.any
   1022c:	ldr	x0, [x20]
   10230:	str	xzr, [x0, #16]
   10234:	ldr	x0, [x22, #16]
   10238:	ldr	x1, [sp, #64]
   1023c:	ldr	x1, [x1, w19, uxtw #3]
   10240:	ldr	x0, [x0, #8]
   10244:	bl	efec <grub_script_parse+0x69c>
   10248:	ldr	x0, [x22, #32]
   1024c:	bl	f040 <grub_script_parse+0x6f0>
   10250:	mov	w21, w0
   10254:	ldr	x0, [x20]
   10258:	ldr	x0, [x0, #32]
   1025c:	cbz	x0, 10200 <grub_script_execute_cmdfor+0x78>
   10260:	ldp	x19, x20, [sp, #16]
   10264:	b	1026c <grub_script_execute_cmdfor+0xe4>
   10268:	ldp	x19, x20, [sp, #16]
   1026c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10270:	ldr	x0, [x0]
   10274:	ldr	x0, [x0, #16]
   10278:	cbz	x0, 1028c <grub_script_execute_cmdfor+0x104>
   1027c:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   10280:	ldr	x1, [x1]
   10284:	sub	x0, x0, #0x1
   10288:	str	x0, [x1, #16]
   1028c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10290:	ldr	x1, [x0]
   10294:	ldr	x0, [x1, #24]
   10298:	sub	x0, x0, #0x1
   1029c:	str	x0, [x1, #24]
   102a0:	add	x0, sp, #0x38
   102a4:	bl	1133c <grub_script_argv_free>
   102a8:	mov	w0, w21
   102ac:	ldp	x21, x22, [sp, #32]
   102b0:	ldp	x29, x30, [sp], #80
   102b4:	ret
	...

00000000000102c8 <grub_script_execute_cmdwhile>:
   102c8:	stp	x29, x30, [sp, #-32]!
   102cc:	mov	x29, sp
   102d0:	stp	x19, x20, [sp, #16]
   102d4:	mov	x20, x0
   102d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   102dc:	ldr	x1, [x0]
   102e0:	ldr	x0, [x1, #24]
   102e4:	add	x0, x0, #0x1
   102e8:	str	x0, [x1, #24]
   102ec:	adrp	x19, 0 <grub_normal_free_menu-0x26c>
   102f0:	b	10328 <grub_script_execute_cmdwhile+0x60>
   102f4:	cmp	w0, #0x0
   102f8:	cset	w1, ne  // ne = any
   102fc:	cbnz	w1, 10368 <grub_script_execute_cmdwhile+0xa0>
   10300:	ldr	x0, [x20, #24]
   10304:	bl	f040 <grub_script_parse+0x6f0>
   10308:	ldr	x1, [x19]
   1030c:	ldr	x1, [x1, #32]
   10310:	cbnz	x1, 10368 <grub_script_execute_cmdwhile+0xa0>
   10314:	ldr	x1, [x19]
   10318:	ldr	x1, [x1, #16]
   1031c:	cmp	x1, #0x1
   10320:	b.eq	10350 <grub_script_execute_cmdwhile+0x88>  // b.none
   10324:	cbnz	x1, 10378 <grub_script_execute_cmdwhile+0xb0>
   10328:	ldr	x0, [x20, #16]
   1032c:	bl	f040 <grub_script_parse+0x6f0>
   10330:	ldr	x1, [x19]
   10334:	ldr	x1, [x1, #32]
   10338:	cbnz	x1, 10368 <grub_script_execute_cmdwhile+0xa0>
   1033c:	ldr	w1, [x20, #32]
   10340:	cbz	w1, 102f4 <grub_script_execute_cmdwhile+0x2c>
   10344:	cmp	w0, #0x0
   10348:	cset	w1, eq  // eq = none
   1034c:	b	102fc <grub_script_execute_cmdwhile+0x34>
   10350:	ldr	x2, [x19]
   10354:	ldr	x2, [x2, #8]
   10358:	cbz	x2, 10378 <grub_script_execute_cmdwhile+0xb0>
   1035c:	ldr	x0, [x19]
   10360:	str	xzr, [x0, #16]
   10364:	b	10328 <grub_script_execute_cmdwhile+0x60>
   10368:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   1036c:	ldr	x1, [x1]
   10370:	ldr	x1, [x1, #16]
   10374:	cbz	x1, 10388 <grub_script_execute_cmdwhile+0xc0>
   10378:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
   1037c:	ldr	x2, [x2]
   10380:	sub	x1, x1, #0x1
   10384:	str	x1, [x2, #16]
   10388:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   1038c:	ldr	x2, [x1]
   10390:	ldr	x1, [x2, #24]
   10394:	sub	x1, x1, #0x1
   10398:	str	x1, [x2, #24]
   1039c:	ldp	x19, x20, [sp, #16]
   103a0:	ldp	x29, x30, [sp], #32
   103a4:	ret
	...

00000000000103b0 <grub_script_execute>:
   103b0:	cbz	x0, 103cc <grub_script_execute+0x1c>
   103b4:	stp	x29, x30, [sp, #-16]!
   103b8:	mov	x29, sp
   103bc:	ldr	x0, [x0, #16]
   103c0:	bl	f040 <grub_script_parse+0x6f0>
   103c4:	ldp	x29, x30, [sp], #16
   103c8:	ret
   103cc:	mov	w0, #0x0                   	// #0
   103d0:	ret

00000000000103d4 <grub_script_function_call>:
   103d4:	stp	x29, x30, [sp, #-80]!
   103d8:	mov	x29, sp
   103dc:	stp	x19, x20, [sp, #16]
   103e0:	stp	x21, x22, [sp, #32]
   103e4:	adrp	x3, 0 <grub_normal_free_menu-0x26c>
   103e8:	ldr	x19, [x3]
   103ec:	ldr	x22, [x19, #24]
   103f0:	str	xzr, [x19, #24]
   103f4:	str	wzr, [sp, #48]
   103f8:	str	wzr, [sp, #52]
   103fc:	str	w1, [sp, #56]
   10400:	str	x2, [sp, #64]
   10404:	ldr	x21, [x19]
   10408:	add	x1, sp, #0x30
   1040c:	str	x1, [x19]
   10410:	ldr	x0, [x0, #8]
   10414:	bl	103b0 <grub_script_execute>
   10418:	mov	w20, w0
   1041c:	str	xzr, [x19, #32]
   10420:	str	x22, [x19, #24]
   10424:	mov	x0, x21
   10428:	bl	eb08 <grub_script_parse+0x1b8>
   1042c:	mov	w0, w20
   10430:	ldp	x19, x20, [sp, #16]
   10434:	ldp	x21, x22, [sp, #32]
   10438:	ldp	x29, x30, [sp], #80
   1043c:	ret
	...

0000000000010448 <grub_script_execute_cmdline>:
   10448:	stp	x29, x30, [sp, #-128]!
   1044c:	mov	x29, sp
   10450:	stp	x19, x20, [sp, #16]
   10454:	str	wzr, [sp, #80]
   10458:	str	xzr, [sp, #88]
   1045c:	str	xzr, [sp, #96]
   10460:	add	x1, sp, #0x50
   10464:	ldr	x0, [x0, #16]
   10468:	bl	f2c4 <grub_script_parse+0x974>
   1046c:	cbnz	w0, 105f4 <grub_script_execute_cmdline+0x1ac>
   10470:	stp	x21, x22, [sp, #32]
   10474:	mov	w22, w0
   10478:	ldr	x0, [sp, #88]
   1047c:	ldr	x0, [x0]
   10480:	cbz	x0, 105f0 <grub_script_execute_cmdline+0x1a8>
   10484:	stp	x23, x24, [sp, #48]
   10488:	str	x25, [sp, #64]
   1048c:	ldr	w0, [sp, #80]
   10490:	mov	w21, w22
   10494:	mov	w19, #0x0                   	// #0
   10498:	cbz	w0, 104c0 <grub_script_execute_cmdline+0x78>
   1049c:	ldr	x1, [sp, #88]
   104a0:	ldr	x0, [x1, w19, uxtw #3]
   104a4:	bl	0 <grub_strlen>
   104a8:	add	x0, x0, #0x1
   104ac:	add	w21, w21, w0
   104b0:	add	w19, w19, #0x1
   104b4:	ldr	w1, [sp, #80]
   104b8:	cmp	w1, w19
   104bc:	b.hi	1049c <grub_script_execute_cmdline+0x54>  // b.pmore
   104c0:	sxtw	x25, w21
   104c4:	mov	x0, x25
   104c8:	bl	0 <grub_malloc>
   104cc:	mov	x23, x0
   104d0:	cbz	x0, 10610 <grub_script_execute_cmdline+0x1c8>
   104d4:	ldr	w0, [sp, #80]
   104d8:	mov	w20, w22
   104dc:	mov	w19, #0x0                   	// #0
   104e0:	adrp	x24, 0 <grub_normal_free_menu-0x26c>
   104e4:	cbz	w0, 10518 <grub_script_execute_cmdline+0xd0>
   104e8:	sub	w1, w21, w20
   104ec:	ldr	x0, [sp, #88]
   104f0:	ldr	x3, [x0, w19, uxtw #3]
   104f4:	ldr	x2, [x24]
   104f8:	sxtw	x1, w1
   104fc:	add	x0, x23, w20, sxtw
   10500:	bl	0 <grub_snprintf>
   10504:	add	w20, w20, w0
   10508:	add	w19, w19, #0x1
   1050c:	ldr	w1, [sp, #80]
   10510:	cmp	w1, w19
   10514:	b.hi	104e8 <grub_script_execute_cmdline+0xa0>  // b.pmore
   10518:	add	x25, x23, x25
   1051c:	sturb	wzr, [x25, #-1]
   10520:	mov	w1, #0x2                   	// #2
   10524:	mov	x0, x23
   10528:	bl	0 <grub_verify_string>
   1052c:	mov	x0, x23
   10530:	bl	0 <grub_free>
   10534:	ldr	w20, [sp, #80]
   10538:	ldr	x19, [sp, #88]
   1053c:	ldr	x21, [x19]
   10540:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10544:	ldr	x1, [x0]
   10548:	mov	x0, x21
   1054c:	bl	0 <grub_strcmp>
   10550:	cbnz	w0, 10634 <grub_script_execute_cmdline+0x1ec>
   10554:	ldr	w1, [sp, #80]
   10558:	cmp	w1, #0x1
   1055c:	b.ls	10640 <grub_script_execute_cmdline+0x1f8>  // b.plast
   10560:	ldr	x2, [sp, #88]
   10564:	ldr	x21, [x2, #8]
   10568:	cbz	x21, 10640 <grub_script_execute_cmdline+0x1f8>
   1056c:	sub	w20, w1, #0x2
   10570:	add	x19, x2, #0x10
   10574:	mov	w22, #0x1                   	// #1
   10578:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1057c:	ldr	x0, [x0]
   10580:	mov	x1, x21
   10584:	ldr	x0, [x0]
   10588:	bl	0 <grub_named_list_find>
   1058c:	cbz	x0, 1066c <grub_script_execute_cmdline+0x224>
   10590:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   10594:	ldr	x1, [x1]
   10598:	ldr	w1, [x1]
   1059c:	cbnz	w1, 10724 <grub_script_execute_cmdline+0x2dc>
   105a0:	ldr	w1, [x0, #40]
   105a4:	mov	w2, #0x50                  	// #80
   105a8:	and	w1, w1, w2
   105ac:	cmp	w1, w2
   105b0:	b.eq	10748 <grub_script_execute_cmdline+0x300>  // b.none
   105b4:	ldr	x3, [x0, #32]
   105b8:	mov	x2, x19
   105bc:	mov	w1, w20
   105c0:	blr	x3
   105c4:	mov	w19, w0
   105c8:	cbz	w22, 10770 <grub_script_execute_cmdline+0x328>
   105cc:	cmp	w19, #0x1
   105d0:	b.eq	10760 <grub_script_execute_cmdline+0x318>  // b.none
   105d4:	cbnz	w19, 107c8 <grub_script_execute_cmdline+0x380>
   105d8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   105dc:	ldr	x1, [x0]
   105e0:	mov	w0, #0x1                   	// #1
   105e4:	bl	0 <grub_error>
   105e8:	mov	w19, w0
   105ec:	b	10770 <grub_script_execute_cmdline+0x328>
   105f0:	ldp	x21, x22, [sp, #32]
   105f4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   105f8:	ldr	x0, [x0]
   105fc:	ldr	w19, [x0]
   10600:	mov	w0, w19
   10604:	ldp	x19, x20, [sp, #16]
   10608:	ldp	x29, x30, [sp], #128
   1060c:	ret
   10610:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10614:	ldr	x1, [x0]
   10618:	mov	w0, #0x3                   	// #3
   1061c:	bl	0 <grub_error>
   10620:	mov	w19, w0
   10624:	ldp	x21, x22, [sp, #32]
   10628:	ldp	x23, x24, [sp, #48]
   1062c:	ldr	x25, [sp, #64]
   10630:	b	10600 <grub_script_execute_cmdline+0x1b8>
   10634:	sub	w20, w20, #0x1
   10638:	add	x19, x19, #0x8
   1063c:	b	10578 <grub_script_execute_cmdline+0x130>
   10640:	add	x0, sp, #0x50
   10644:	bl	1133c <grub_script_argv_free>
   10648:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1064c:	ldr	x1, [x0]
   10650:	mov	w0, #0x12                  	// #18
   10654:	bl	0 <grub_error>
   10658:	mov	w19, w0
   1065c:	ldp	x21, x22, [sp, #32]
   10660:	ldp	x23, x24, [sp, #48]
   10664:	ldr	x25, [sp, #64]
   10668:	b	10600 <grub_script_execute_cmdline+0x1b8>
   1066c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10670:	ldr	x0, [x0]
   10674:	str	wzr, [x0]
   10678:	mov	x0, x21
   1067c:	bl	10ab0 <grub_script_function_find>
   10680:	cbz	x0, 10698 <grub_script_execute_cmdline+0x250>
   10684:	mov	x2, x19
   10688:	mov	w1, w20
   1068c:	bl	103d4 <grub_script_function_call>
   10690:	mov	w19, w0
   10694:	b	105c8 <grub_script_execute_cmdline+0x180>
   10698:	mov	x0, x21
   1069c:	bl	0 <grub_strdup>
   106a0:	mov	x19, x0
   106a4:	mov	w1, #0x3d                  	// #61
   106a8:	bl	0 <grub_strchr>
   106ac:	mov	x1, x0
   106b0:	cbz	x0, 106cc <grub_script_execute_cmdline+0x284>
   106b4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   106b8:	ldr	x0, [x0]
   106bc:	str	wzr, [x0]
   106c0:	strb	wzr, [x1], #1
   106c4:	mov	x0, x19
   106c8:	bl	efec <grub_script_parse+0x69c>
   106cc:	mov	x0, x19
   106d0:	bl	0 <grub_free>
   106d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   106d8:	ldr	x0, [x0]
   106dc:	ldr	w3, [x0]
   106e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   106e4:	ldr	x2, [x0]
   106e8:	mov	x1, #0x12                  	// #18
   106ec:	add	x0, sp, #0x68
   106f0:	bl	0 <grub_snprintf>
   106f4:	add	x1, sp, #0x68
   106f8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   106fc:	ldr	x0, [x0]
   10700:	bl	efec <grub_script_parse+0x69c>
   10704:	add	x0, sp, #0x50
   10708:	bl	1133c <grub_script_argv_free>
   1070c:	bl	0 <grub_print_error>
   10710:	mov	w19, #0x0                   	// #0
   10714:	ldp	x21, x22, [sp, #32]
   10718:	ldp	x23, x24, [sp, #48]
   1071c:	ldr	x25, [sp, #64]
   10720:	b	10600 <grub_script_execute_cmdline+0x1b8>
   10724:	ldr	w1, [x0, #40]
   10728:	tbnz	w1, #9, 105a0 <grub_script_execute_cmdline+0x158>
   1072c:	mov	x2, x21
   10730:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10734:	ldr	x1, [x0]
   10738:	mov	w0, #0x1f                  	// #31
   1073c:	bl	0 <grub_error>
   10740:	mov	w19, w0
   10744:	b	105c8 <grub_script_execute_cmdline+0x180>
   10748:	ldr	x3, [sp, #96]
   1074c:	mov	x2, x19
   10750:	mov	w1, w20
   10754:	bl	0 <grub_extcmd_dispatcher>
   10758:	mov	w19, w0
   1075c:	b	105c8 <grub_script_execute_cmdline+0x180>
   10760:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10764:	ldr	x0, [x0]
   10768:	str	wzr, [x0]
   1076c:	mov	w19, #0x0                   	// #0
   10770:	add	x0, sp, #0x50
   10774:	bl	1133c <grub_script_argv_free>
   10778:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1077c:	ldr	x0, [x0]
   10780:	ldr	w0, [x0]
   10784:	cmp	w0, #0x1
   10788:	b.eq	107d4 <grub_script_execute_cmdline+0x38c>  // b.none
   1078c:	bl	0 <grub_print_error>
   10790:	mov	w3, w19
   10794:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10798:	ldr	x2, [x0]
   1079c:	mov	x1, #0x12                  	// #18
   107a0:	add	x0, sp, #0x68
   107a4:	bl	0 <grub_snprintf>
   107a8:	add	x1, sp, #0x68
   107ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   107b0:	ldr	x0, [x0]
   107b4:	bl	0 <grub_env_set>
   107b8:	ldp	x21, x22, [sp, #32]
   107bc:	ldp	x23, x24, [sp, #48]
   107c0:	ldr	x25, [sp, #64]
   107c4:	b	10600 <grub_script_execute_cmdline+0x1b8>
   107c8:	bl	0 <grub_print_error>
   107cc:	mov	w19, #0x0                   	// #0
   107d0:	b	10770 <grub_script_execute_cmdline+0x328>
   107d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   107d8:	ldr	x0, [x0]
   107dc:	str	wzr, [x0]
   107e0:	b	1078c <grub_script_execute_cmdline+0x344>
   107e4:	nop
	...

0000000000010840 <grub_script_execute_sourcecode>:
   10840:	stp	x29, x30, [sp, #-80]!
   10844:	mov	x29, sp
   10848:	stp	x19, x20, [sp, #16]
   1084c:	str	x0, [sp, #56]
   10850:	cbz	x0, 108d4 <grub_script_execute_sourcecode+0x94>
   10854:	str	x21, [sp, #32]
   10858:	adrp	x21, 0 <grub_normal_free_menu-0x26c>
   1085c:	add	x2, sp, #0x38
   10860:	mov	w1, #0x0                   	// #0
   10864:	add	x0, sp, #0x48
   10868:	bl	eeec <grub_script_parse+0x59c>
   1086c:	add	x2, sp, #0x38
   10870:	ldr	x1, [x21]
   10874:	ldr	x0, [sp, #72]
   10878:	bl	e950 <grub_script_parse>
   1087c:	mov	x19, x0
   10880:	cbz	x0, 108ac <grub_script_execute_sourcecode+0x6c>
   10884:	bl	103b0 <grub_script_execute>
   10888:	mov	w20, w0
   1088c:	mov	x0, x19
   10890:	bl	e468 <grub_script_free>
   10894:	ldr	x0, [sp, #72]
   10898:	bl	0 <grub_free>
   1089c:	ldr	x0, [sp, #56]
   108a0:	cbnz	x0, 1085c <grub_script_execute_sourcecode+0x1c>
   108a4:	ldr	x21, [sp, #32]
   108a8:	b	108c4 <grub_script_execute_sourcecode+0x84>
   108ac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   108b0:	ldr	x0, [x0]
   108b4:	ldr	w20, [x0]
   108b8:	ldr	x0, [sp, #72]
   108bc:	bl	0 <grub_free>
   108c0:	ldr	x21, [sp, #32]
   108c4:	mov	w0, w20
   108c8:	ldp	x19, x20, [sp, #16]
   108cc:	ldp	x29, x30, [sp], #80
   108d0:	ret
   108d4:	mov	w20, #0x0                   	// #0
   108d8:	b	108c4 <grub_script_execute_sourcecode+0x84>
   108dc:	nop
	...

00000000000108f0 <grub_script_execute_new_scope>:
   108f0:	stp	x29, x30, [sp, #-64]!
   108f4:	mov	x29, sp
   108f8:	stp	x19, x20, [sp, #16]
   108fc:	str	w1, [sp, #40]
   10900:	str	x2, [sp, #48]
   10904:	str	wzr, [sp, #32]
   10908:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   1090c:	ldr	x19, [x1]
   10910:	ldr	x20, [x19]
   10914:	add	x1, sp, #0x20
   10918:	str	x1, [x19]
   1091c:	bl	10840 <grub_script_execute_sourcecode>
   10920:	str	x20, [x19]
   10924:	ldp	x19, x20, [sp, #16]
   10928:	ldp	x29, x30, [sp], #64
   1092c:	ret
	...

0000000000010938 <grub_script_function_create>:
   10938:	stp	x29, x30, [sp, #-48]!
   1093c:	mov	x29, sp
   10940:	stp	x19, x20, [sp, #16]
   10944:	str	x21, [sp, #32]
   10948:	mov	x19, x0
   1094c:	mov	x21, x1
   10950:	mov	x0, #0x28                  	// #40
   10954:	bl	0 <grub_malloc>
   10958:	mov	x20, x0
   1095c:	cbz	x0, 109bc <grub_script_function_create+0x84>
   10960:	ldr	x0, [x19, #8]
   10964:	bl	0 <grub_strdup>
   10968:	mov	x19, x0
   1096c:	str	x0, [x20]
   10970:	cbz	x0, 109d0 <grub_script_function_create+0x98>
   10974:	str	x21, [x20, #8]
   10978:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1097c:	ldr	x0, [x0]
   10980:	ldr	x2, [x0]
   10984:	cbz	x2, 109e0 <grub_script_function_create+0xa8>
   10988:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1098c:	ldr	x19, [x0]
   10990:	ldr	x1, [x20]
   10994:	ldr	x0, [x2]
   10998:	bl	0 <grub_strcmp>
   1099c:	tbz	w0, #31, 109e8 <grub_script_function_create+0xb0>
   109a0:	ldr	x2, [x19]
   109a4:	add	x19, x2, #0x18
   109a8:	ldr	x2, [x2, #24]
   109ac:	cbnz	x2, 10990 <grub_script_function_create+0x58>
   109b0:	ldr	x0, [x19]
   109b4:	str	x0, [x20, #24]
   109b8:	str	x20, [x19]
   109bc:	mov	x0, x20
   109c0:	ldp	x19, x20, [sp, #16]
   109c4:	ldr	x21, [sp, #32]
   109c8:	ldp	x29, x30, [sp], #48
   109cc:	ret
   109d0:	mov	x0, x20
   109d4:	bl	0 <grub_free>
   109d8:	mov	x20, x19
   109dc:	b	109bc <grub_script_function_create+0x84>
   109e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   109e4:	ldr	x19, [x0]
   109e8:	ldr	x0, [x19]
   109ec:	cbz	x0, 109b0 <grub_script_function_create+0x78>
   109f0:	ldr	x1, [x20]
   109f4:	ldr	x0, [x0]
   109f8:	bl	0 <grub_strcmp>
   109fc:	cbnz	w0, 109b0 <grub_script_function_create+0x78>
   10a00:	ldr	x19, [x19]
   10a04:	ldr	x0, [x19, #8]
   10a08:	bl	e468 <grub_script_free>
   10a0c:	str	x21, [x19, #8]
   10a10:	mov	x0, x20
   10a14:	bl	0 <grub_free>
   10a18:	mov	x20, x19
   10a1c:	b	109bc <grub_script_function_create+0x84>
	...

0000000000010a28 <grub_script_function_remove>:
   10a28:	stp	x29, x30, [sp, #-48]!
   10a2c:	mov	x29, sp
   10a30:	stp	x19, x20, [sp, #16]
   10a34:	mov	x20, x0
   10a38:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10a3c:	ldr	x0, [x0]
   10a40:	ldr	x19, [x0]
   10a44:	cbz	x19, 10a9c <grub_script_function_remove+0x74>
   10a48:	str	x21, [sp, #32]
   10a4c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10a50:	ldr	x21, [x0]
   10a54:	ldr	x1, [x19]
   10a58:	mov	x0, x20
   10a5c:	bl	0 <grub_strcmp>
   10a60:	cbz	w0, 10a78 <grub_script_function_remove+0x50>
   10a64:	add	x21, x19, #0x18
   10a68:	ldr	x19, [x19, #24]
   10a6c:	cbnz	x19, 10a54 <grub_script_function_remove+0x2c>
   10a70:	ldr	x21, [sp, #32]
   10a74:	b	10a9c <grub_script_function_remove+0x74>
   10a78:	ldr	x0, [x19, #24]
   10a7c:	str	x0, [x21]
   10a80:	ldr	x0, [x19]
   10a84:	bl	0 <grub_free>
   10a88:	ldr	x0, [x19, #8]
   10a8c:	bl	e468 <grub_script_free>
   10a90:	mov	x0, x19
   10a94:	bl	0 <grub_free>
   10a98:	ldr	x21, [sp, #32]
   10a9c:	ldp	x19, x20, [sp, #16]
   10aa0:	ldp	x29, x30, [sp], #48
   10aa4:	ret
	...

0000000000010ab0 <grub_script_function_find>:
   10ab0:	stp	x29, x30, [sp, #-64]!
   10ab4:	mov	x29, sp
   10ab8:	stp	x19, x20, [sp, #16]
   10abc:	mov	x20, x0
   10ac0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10ac4:	ldr	x0, [x0]
   10ac8:	ldr	x19, [x0]
   10acc:	cbz	x19, 10ae8 <grub_script_function_find+0x38>
   10ad0:	ldr	x1, [x19]
   10ad4:	mov	x0, x20
   10ad8:	bl	0 <grub_strcmp>
   10adc:	cbz	w0, 10b64 <grub_script_function_find+0xb4>
   10ae0:	ldr	x19, [x19, #24]
   10ae4:	cbnz	x19, 10ad0 <grub_script_function_find+0x20>
   10ae8:	add	x2, x20, #0x14
   10aec:	add	x1, sp, #0x28
   10af0:	ldrb	w0, [x20], #1
   10af4:	strb	w0, [x1], #1
   10af8:	cbz	w0, 10b04 <grub_script_function_find+0x54>
   10afc:	cmp	x20, x2
   10b00:	b.ne	10af0 <grub_script_function_find+0x40>  // b.any
   10b04:	strb	wzr, [sp, #60]
   10b08:	add	x19, sp, #0x28
   10b0c:	mov	x0, x19
   10b10:	bl	0 <grub_strlen>
   10b14:	add	x0, x19, x0
   10b18:	sub	x1, x0, #0x1
   10b1c:	cmp	x1, x19
   10b20:	b.cc	10c10 <grub_script_function_find+0x160>  // b.lo, b.ul, b.last
   10b24:	add	x3, sp, #0x27
   10b28:	ldrb	w2, [x1]
   10b2c:	and	w2, w2, #0xc0
   10b30:	cmp	w2, #0x80
   10b34:	b.ne	10b74 <grub_script_function_find+0xc4>  // b.any
   10b38:	sub	x1, x1, #0x1
   10b3c:	cmp	x1, x3
   10b40:	b.ne	10b28 <grub_script_function_find+0x78>  // b.any
   10b44:	mov	x1, #0x0                   	// #0
   10b48:	add	x2, sp, #0x28
   10b4c:	strb	wzr, [x2, x1]
   10b50:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   10b54:	ldr	x1, [x0]
   10b58:	mov	w0, #0x10                  	// #16
   10b5c:	bl	0 <grub_error>
   10b60:	mov	x19, #0x0                   	// #0
   10b64:	mov	x0, x19
   10b68:	ldp	x19, x20, [sp, #16]
   10b6c:	ldp	x29, x30, [sp], #64
   10b70:	ret
   10b74:	add	x2, sp, #0x28
   10b78:	cmp	x1, x2
   10b7c:	b.cc	10c18 <grub_script_function_find+0x168>  // b.lo, b.ul, b.last
   10b80:	ldrb	w2, [x1]
   10b84:	tbz	w2, #7, 10bc4 <grub_script_function_find+0x114>
   10b88:	and	w3, w2, #0xe0
   10b8c:	cmp	w3, #0xc0
   10b90:	b.eq	10bd4 <grub_script_function_find+0x124>  // b.none
   10b94:	and	w3, w2, #0xf0
   10b98:	cmp	w3, #0xe0
   10b9c:	b.eq	10bf8 <grub_script_function_find+0x148>  // b.none
   10ba0:	and	w2, w2, #0xf8
   10ba4:	cmp	w2, #0xf0
   10ba8:	b.ne	10be0 <grub_script_function_find+0x130>  // b.any
   10bac:	add	x2, x1, #0x4
   10bb0:	cmp	x0, x2
   10bb4:	b.cc	10be0 <grub_script_function_find+0x130>  // b.lo, b.ul, b.last
   10bb8:	add	x1, sp, #0x28
   10bbc:	sub	x1, x2, x1
   10bc0:	b	10b48 <grub_script_function_find+0x98>
   10bc4:	add	x0, sp, #0x40
   10bc8:	sub	x1, x1, x0
   10bcc:	add	x1, x1, #0x19
   10bd0:	b	10b48 <grub_script_function_find+0x98>
   10bd4:	add	x2, x1, #0x2
   10bd8:	cmp	x0, x2
   10bdc:	b.cs	10bec <grub_script_function_find+0x13c>  // b.hs, b.nlast
   10be0:	add	x0, sp, #0x28
   10be4:	sub	x1, x1, x0
   10be8:	b	10b48 <grub_script_function_find+0x98>
   10bec:	add	x1, sp, #0x28
   10bf0:	sub	x1, x2, x1
   10bf4:	b	10b48 <grub_script_function_find+0x98>
   10bf8:	add	x2, x1, #0x3
   10bfc:	cmp	x0, x2
   10c00:	b.cc	10be0 <grub_script_function_find+0x130>  // b.lo, b.ul, b.last
   10c04:	add	x1, sp, #0x28
   10c08:	sub	x1, x2, x1
   10c0c:	b	10b48 <grub_script_function_find+0x98>
   10c10:	mov	x1, #0x0                   	// #0
   10c14:	b	10b48 <grub_script_function_find+0x98>
   10c18:	mov	x1, #0x0                   	// #0
   10c1c:	b	10b48 <grub_script_function_find+0x98>
	...

0000000000010c30 <grub_script_lexer_ref>:
   10c30:	ldr	w1, [x0, #16]
   10c34:	add	w1, w1, #0x1
   10c38:	str	w1, [x0, #16]
   10c3c:	ret

0000000000010c40 <grub_script_lexer_deref>:
   10c40:	ldr	w1, [x0, #16]
   10c44:	sub	w1, w1, #0x1
   10c48:	str	w1, [x0, #16]
   10c4c:	ret

0000000000010c50 <grub_script_lexer_record_stop>:
   10c50:	stp	x29, x30, [sp, #-48]!
   10c54:	mov	x29, sp
   10c58:	stp	x19, x20, [sp, #16]
   10c5c:	stp	x21, x22, [sp, #32]
   10c60:	mov	w20, w1
   10c64:	ldr	x21, [x0, #40]
   10c68:	ldr	w1, [x21, #20]
   10c6c:	cbz	w1, 10d04 <grub_script_lexer_record_stop+0xb4>
   10c70:	sub	w1, w1, #0x1
   10c74:	str	w1, [x21, #20]
   10c78:	ldr	x19, [x21, #24]
   10c7c:	cbz	x19, 10cd8 <grub_script_lexer_record_stop+0x88>
   10c80:	ldr	w22, [x21, #32]
   10c84:	sub	w22, w22, w20
   10c88:	add	w1, w22, #0x1
   10c8c:	sxtw	x1, w1
   10c90:	bl	e340 <grub_script_malloc>
   10c94:	mov	x19, x0
   10c98:	cbz	x0, 10cd0 <grub_script_lexer_record_stop+0x80>
   10c9c:	ldr	x3, [x21, #24]
   10ca0:	add	x3, x3, w20, uxtw
   10ca4:	sub	w4, w22, #0x1
   10ca8:	mov	x1, #0x0                   	// #0
   10cac:	b	10cb4 <grub_script_lexer_record_stop+0x64>
   10cb0:	mov	x1, x0
   10cb4:	ldrb	w2, [x3, x1]
   10cb8:	strb	w2, [x19, x1]
   10cbc:	cbz	w2, 10ccc <grub_script_lexer_record_stop+0x7c>
   10cc0:	add	x0, x1, #0x1
   10cc4:	cmp	x1, x4
   10cc8:	b.ne	10cb0 <grub_script_lexer_record_stop+0x60>  // b.any
   10ccc:	strb	wzr, [x19, w22, sxtw]
   10cd0:	ldr	w0, [x21, #20]
   10cd4:	cbz	w0, 10cec <grub_script_lexer_record_stop+0x9c>
   10cd8:	mov	x0, x19
   10cdc:	ldp	x19, x20, [sp, #16]
   10ce0:	ldp	x21, x22, [sp, #32]
   10ce4:	ldp	x29, x30, [sp], #48
   10ce8:	ret
   10cec:	ldr	x0, [x21, #24]
   10cf0:	bl	0 <grub_free>
   10cf4:	str	xzr, [x21, #24]
   10cf8:	str	wzr, [x21, #36]
   10cfc:	str	wzr, [x21, #32]
   10d00:	b	10cd8 <grub_script_lexer_record_stop+0x88>
   10d04:	mov	x19, #0x0                   	// #0
   10d08:	b	10cd8 <grub_script_lexer_record_stop+0x88>

0000000000010d0c <grub_script_lexer_fini>:
   10d0c:	cbz	x0, 10d4c <grub_script_lexer_fini+0x40>
   10d10:	stp	x29, x30, [sp, #-32]!
   10d14:	mov	x29, sp
   10d18:	str	x19, [sp, #16]
   10d1c:	mov	x19, x0
   10d20:	ldr	x0, [x0, #88]
   10d24:	bl	138b8 <yylex_destroy>
   10d28:	ldr	x0, [x19, #24]
   10d2c:	bl	0 <grub_free>
   10d30:	ldr	x0, [x19, #56]
   10d34:	bl	0 <grub_free>
   10d38:	mov	x0, x19
   10d3c:	bl	0 <grub_free>
   10d40:	ldr	x19, [sp, #16]
   10d44:	ldp	x29, x30, [sp], #32
   10d48:	ret
   10d4c:	ret

0000000000010d50 <grub_script_yylex>:
   10d50:	stp	x29, x30, [sp, #-96]!
   10d54:	mov	x29, sp
   10d58:	stp	x19, x20, [sp, #16]
   10d5c:	ldr	x19, [x1, #40]
   10d60:	str	xzr, [x0]
   10d64:	ldr	w20, [x1, #8]
   10d68:	cbnz	w20, 10e6c <grub_script_yylex+0x11c>
   10d6c:	stp	x21, x22, [sp, #32]
   10d70:	stp	x23, x24, [sp, #48]
   10d74:	mov	x21, x0
   10d78:	mov	x23, x1
   10d7c:	ldr	w0, [x19, #40]
   10d80:	cbnz	w0, 10e8c <grub_script_yylex+0x13c>
   10d84:	stp	x25, x26, [sp, #64]
   10d88:	stp	x27, x28, [sp, #80]
   10d8c:	str	wzr, [x19, #44]
   10d90:	str	wzr, [x19, #48]
   10d94:	mov	w25, #0x1                   	// #1
   10d98:	adrp	x28, 0 <grub_normal_free_menu-0x26c>
   10d9c:	adrp	x27, 0 <grub_normal_free_menu-0x26c>
   10da0:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
   10da4:	b	10dfc <grub_script_yylex+0xac>
   10da8:	ldr	x0, [x19, #88]
   10dac:	bl	13684 <yyget_text>
   10db0:	mov	x22, x0
   10db4:	mov	w24, w25
   10db8:	mov	x5, x22
   10dbc:	mov	w4, w20
   10dc0:	ldr	x3, [x28]
   10dc4:	ldr	x2, [x27]
   10dc8:	mov	w1, #0x141                 	// #321
   10dcc:	ldr	x0, [x26]
   10dd0:	bl	0 <grub_real_dprintf>
   10dd4:	mov	x3, x22
   10dd8:	mov	w2, w24
   10ddc:	ldr	x1, [x21]
   10de0:	mov	x0, x23
   10de4:	bl	e4cc <grub_script_arg_add>
   10de8:	str	x0, [x21]
   10dec:	ldr	w0, [x19, #44]
   10df0:	cbz	w0, 10e34 <grub_script_yylex+0xe4>
   10df4:	ldr	w0, [x19, #48]
   10df8:	cbnz	w0, 10e34 <grub_script_yylex+0xe4>
   10dfc:	str	w25, [x19, #64]
   10e00:	ldr	x0, [x19, #56]
   10e04:	strb	wzr, [x0]
   10e08:	ldr	x1, [x19, #88]
   10e0c:	mov	x0, x21
   10e10:	bl	13994 <yylex>
   10e14:	mov	w20, w0
   10e18:	cmp	w0, #0x102
   10e1c:	b.eq	10e34 <grub_script_yylex+0xe4>  // b.none
   10e20:	ldr	w0, [x19, #44]
   10e24:	cbz	w0, 10da8 <grub_script_yylex+0x58>
   10e28:	ldr	x22, [x19, #56]
   10e2c:	ldr	w24, [x19, #72]
   10e30:	b	10db8 <grub_script_yylex+0x68>
   10e34:	ldr	x0, [x21]
   10e38:	cbz	x0, 10e74 <grub_script_yylex+0x124>
   10e3c:	ldr	w0, [x23, #8]
   10e40:	cmp	w0, #0x0
   10e44:	mov	w0, #0x102                 	// #258
   10e48:	csel	w20, w20, w0, eq  // eq = none
   10e4c:	ldp	x21, x22, [sp, #32]
   10e50:	ldp	x23, x24, [sp, #48]
   10e54:	ldp	x25, x26, [sp, #64]
   10e58:	ldp	x27, x28, [sp, #80]
   10e5c:	mov	w0, w20
   10e60:	ldp	x19, x20, [sp, #16]
   10e64:	ldp	x29, x30, [sp], #96
   10e68:	ret
   10e6c:	mov	w20, #0x102                 	// #258
   10e70:	b	10e5c <grub_script_yylex+0x10c>
   10e74:	mov	w20, #0x102                 	// #258
   10e78:	ldp	x21, x22, [sp, #32]
   10e7c:	ldp	x23, x24, [sp, #48]
   10e80:	ldp	x25, x26, [sp, #64]
   10e84:	ldp	x27, x28, [sp, #80]
   10e88:	b	10e5c <grub_script_yylex+0x10c>
   10e8c:	ldp	x21, x22, [sp, #32]
   10e90:	ldp	x23, x24, [sp, #48]
   10e94:	b	10e5c <grub_script_yylex+0x10c>
	...

0000000000010eb0 <grub_script_yyerror>:
   10eb0:	stp	x29, x30, [sp, #-32]!
   10eb4:	mov	x29, sp
   10eb8:	str	x19, [sp, #16]
   10ebc:	mov	x19, x0
   10ec0:	cbz	x1, 10ecc <grub_script_yyerror+0x1c>
   10ec4:	mov	w0, #0x11                  	// #17
   10ec8:	bl	0 <grub_error>
   10ecc:	bl	0 <grub_print_error>
   10ed0:	ldr	w0, [x19, #8]
   10ed4:	add	w0, w0, #0x1
   10ed8:	str	w0, [x19, #8]
   10edc:	ldr	x19, [sp, #16]
   10ee0:	ldp	x29, x30, [sp], #32
   10ee4:	ret

0000000000010ee8 <grub_script_lexer_record_start>:
   10ee8:	stp	x29, x30, [sp, #-32]!
   10eec:	mov	x29, sp
   10ef0:	stp	x19, x20, [sp, #16]
   10ef4:	mov	x20, x0
   10ef8:	ldr	x19, [x0, #40]
   10efc:	ldr	w0, [x19, #20]
   10f00:	add	w0, w0, #0x1
   10f04:	str	w0, [x19, #20]
   10f08:	ldr	x0, [x19, #24]
   10f0c:	cbz	x0, 10f20 <grub_script_lexer_record_start+0x38>
   10f10:	ldr	w0, [x19, #32]
   10f14:	ldp	x19, x20, [sp, #16]
   10f18:	ldp	x29, x30, [sp], #32
   10f1c:	ret
   10f20:	str	wzr, [x19, #32]
   10f24:	mov	w0, #0x100                 	// #256
   10f28:	str	w0, [x19, #36]
   10f2c:	mov	x0, #0x100                 	// #256
   10f30:	bl	0 <grub_malloc>
   10f34:	str	x0, [x19, #24]
   10f38:	cbz	x0, 10f44 <grub_script_lexer_record_start+0x5c>
   10f3c:	ldr	w0, [x19, #32]
   10f40:	b	10f14 <grub_script_lexer_record_start+0x2c>
   10f44:	mov	x1, #0x0                   	// #0
   10f48:	mov	x0, x20
   10f4c:	bl	10eb0 <grub_script_yyerror>
   10f50:	str	wzr, [x19, #36]
   10f54:	b	10f3c <grub_script_lexer_record_start+0x54>

0000000000010f58 <grub_script_lexer_record>:
   10f58:	stp	x29, x30, [sp, #-64]!
   10f5c:	mov	x29, sp
   10f60:	stp	x19, x20, [sp, #16]
   10f64:	mov	x20, x0
   10f68:	ldr	x19, [x0, #40]
   10f6c:	ldr	w0, [x19, #20]
   10f70:	cbz	w0, 11000 <grub_script_lexer_record+0xa8>
   10f74:	stp	x21, x22, [sp, #32]
   10f78:	mov	x22, x1
   10f7c:	ldr	x0, [x19, #24]
   10f80:	cbz	x0, 11034 <grub_script_lexer_record+0xdc>
   10f84:	mov	x0, x1
   10f88:	bl	0 <grub_strlen>
   10f8c:	mov	x21, x0
   10f90:	ldr	w1, [x19, #36]
   10f94:	ldr	w0, [x19, #32]
   10f98:	add	w0, w0, w21
   10f9c:	cmp	w0, w1
   10fa0:	b.lt	10fdc <grub_script_lexer_record+0x84>  // b.tstop
   10fa4:	str	x23, [sp, #48]
   10fa8:	ldr	x23, [x19, #24]
   10fac:	cmp	w1, w21
   10fb0:	b.ge	10fb8 <grub_script_lexer_record+0x60>  // b.tcont
   10fb4:	str	w21, [x19, #36]
   10fb8:	ldr	w1, [x19, #36]
   10fbc:	lsl	w1, w1, #1
   10fc0:	str	w1, [x19, #36]
   10fc4:	sxtw	x1, w1
   10fc8:	mov	x0, x23
   10fcc:	bl	0 <grub_realloc>
   10fd0:	str	x0, [x19, #24]
   10fd4:	cbz	x0, 1100c <grub_script_lexer_record+0xb4>
   10fd8:	ldr	x23, [sp, #48]
   10fdc:	ldrsw	x0, [x19, #32]
   10fe0:	ldr	x2, [x19, #24]
   10fe4:	mov	x1, x22
   10fe8:	add	x0, x2, x0
   10fec:	bl	0 <grub_strcpy>
   10ff0:	ldr	w0, [x19, #32]
   10ff4:	add	w21, w0, w21
   10ff8:	str	w21, [x19, #32]
   10ffc:	ldp	x21, x22, [sp, #32]
   11000:	ldp	x19, x20, [sp, #16]
   11004:	ldp	x29, x30, [sp], #64
   11008:	ret
   1100c:	mov	x0, x23
   11010:	bl	0 <grub_free>
   11014:	str	wzr, [x19, #32]
   11018:	str	wzr, [x19, #36]
   1101c:	mov	x1, #0x0                   	// #0
   11020:	mov	x0, x20
   11024:	bl	10eb0 <grub_script_yyerror>
   11028:	ldp	x21, x22, [sp, #32]
   1102c:	ldr	x23, [sp, #48]
   11030:	b	11000 <grub_script_lexer_record+0xa8>
   11034:	ldp	x21, x22, [sp, #32]
   11038:	b	11000 <grub_script_lexer_record+0xa8>

000000000001103c <grub_script_lexer_yywrap>:
   1103c:	stp	x29, x30, [sp, #-64]!
   11040:	mov	x29, sp
   11044:	stp	x19, x20, [sp, #16]
   11048:	stp	x21, x22, [sp, #32]
   1104c:	mov	x21, x0
   11050:	mov	x0, x1
   11054:	str	xzr, [sp, #56]
   11058:	ldr	x19, [x21, #40]
   1105c:	ldr	w1, [x19, #16]
   11060:	cbnz	w1, 11070 <grub_script_lexer_yywrap+0x34>
   11064:	ldr	x1, [x19, #80]
   11068:	orr	x1, x0, x1
   1106c:	cbz	x1, 111f8 <grub_script_lexer_yywrap+0x1bc>
   11070:	ldr	x3, [x19]
   11074:	orr	x1, x0, x3
   11078:	cbz	x1, 110e0 <grub_script_lexer_yywrap+0xa4>
   1107c:	cbz	x0, 110f8 <grub_script_lexer_yywrap+0xbc>
   11080:	bl	0 <grub_strdup>
   11084:	str	x0, [sp, #56]
   11088:	ldr	x0, [sp, #56]
   1108c:	cbz	x0, 1110c <grub_script_lexer_yywrap+0xd0>
   11090:	bl	0 <grub_strlen>
   11094:	mov	x20, x0
   11098:	ldr	x0, [sp, #56]
   1109c:	ldrb	w1, [x0]
   110a0:	cbz	w1, 11124 <grub_script_lexer_yywrap+0xe8>
   110a4:	cbz	x20, 11144 <grub_script_lexer_yywrap+0x108>
   110a8:	add	x1, x0, x20
   110ac:	ldurb	w1, [x1, #-1]
   110b0:	cmp	w1, #0xa
   110b4:	b.eq	11144 <grub_script_lexer_yywrap+0x108>  // b.none
   110b8:	add	x1, x20, #0x2
   110bc:	bl	0 <grub_realloc>
   110c0:	cbz	x0, 110d8 <grub_script_lexer_yywrap+0x9c>
   110c4:	add	x1, x20, #0x1
   110c8:	mov	w2, #0xa                   	// #10
   110cc:	strb	w2, [x0, x20]
   110d0:	strb	wzr, [x0, x1]
   110d4:	mov	x20, x1
   110d8:	str	x0, [sp, #56]
   110dc:	b	1113c <grub_script_lexer_yywrap+0x100>
   110e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   110e4:	ldr	x1, [x0]
   110e8:	mov	x0, x21
   110ec:	bl	10eb0 <grub_script_yyerror>
   110f0:	mov	w0, #0x1                   	// #1
   110f4:	b	111ac <grub_script_lexer_yywrap+0x170>
   110f8:	ldr	x2, [x19, #8]
   110fc:	mov	w1, #0x1                   	// #1
   11100:	add	x0, sp, #0x38
   11104:	blr	x3
   11108:	b	11088 <grub_script_lexer_yywrap+0x4c>
   1110c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11110:	ldr	x1, [x0]
   11114:	mov	x0, x21
   11118:	bl	10eb0 <grub_script_yyerror>
   1111c:	mov	w0, #0x1                   	// #1
   11120:	b	111ac <grub_script_lexer_yywrap+0x170>
   11124:	bl	0 <grub_free>
   11128:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1112c:	ldr	x0, [x0]
   11130:	bl	0 <grub_strdup>
   11134:	str	x0, [sp, #56]
   11138:	mov	x20, #0x1                   	// #1
   1113c:	ldr	x0, [sp, #56]
   11140:	cbz	x0, 111bc <grub_script_lexer_yywrap+0x180>
   11144:	ldr	x0, [x19, #80]
   11148:	cbz	x0, 1118c <grub_script_lexer_yywrap+0x150>
   1114c:	bl	0 <grub_strlen>
   11150:	sxtw	x22, w0
   11154:	add	x20, x20, #0x1
   11158:	add	x0, x20, w0, sxtw
   1115c:	bl	0 <grub_malloc>
   11160:	mov	x20, x0
   11164:	cbz	x0, 111d4 <grub_script_lexer_yywrap+0x198>
   11168:	ldr	x1, [x19, #80]
   1116c:	bl	0 <grub_strcpy>
   11170:	str	xzr, [x19, #80]
   11174:	ldr	x1, [sp, #56]
   11178:	add	x0, x20, x22
   1117c:	bl	0 <grub_strcpy>
   11180:	ldr	x0, [sp, #56]
   11184:	bl	0 <grub_free>
   11188:	str	x20, [sp, #56]
   1118c:	ldr	x1, [x19, #88]
   11190:	ldr	x0, [sp, #56]
   11194:	bl	135c0 <yy_scan_string>
   11198:	mov	x19, x0
   1119c:	ldr	x0, [sp, #56]
   111a0:	bl	0 <grub_free>
   111a4:	mov	w0, #0x0                   	// #0
   111a8:	cbz	x19, 111e4 <grub_script_lexer_yywrap+0x1a8>
   111ac:	ldp	x19, x20, [sp, #16]
   111b0:	ldp	x21, x22, [sp, #32]
   111b4:	ldp	x29, x30, [sp], #64
   111b8:	ret
   111bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   111c0:	ldr	x1, [x0]
   111c4:	mov	x0, x21
   111c8:	bl	10eb0 <grub_script_yyerror>
   111cc:	mov	w0, #0x1                   	// #1
   111d0:	b	111ac <grub_script_lexer_yywrap+0x170>
   111d4:	ldr	x0, [sp, #56]
   111d8:	bl	0 <grub_free>
   111dc:	mov	w0, #0x1                   	// #1
   111e0:	b	111ac <grub_script_lexer_yywrap+0x170>
   111e4:	mov	x1, #0x0                   	// #0
   111e8:	mov	x0, x21
   111ec:	bl	10eb0 <grub_script_yyerror>
   111f0:	mov	w0, #0x1                   	// #1
   111f4:	b	111ac <grub_script_lexer_yywrap+0x170>
   111f8:	mov	w0, #0x1                   	// #1
   111fc:	b	111ac <grub_script_lexer_yywrap+0x170>
	...

0000000000011218 <grub_script_lexer_init>:
   11218:	stp	x29, x30, [sp, #-64]!
   1121c:	mov	x29, sp
   11220:	stp	x19, x20, [sp, #16]
   11224:	stp	x21, x22, [sp, #32]
   11228:	stp	x23, x24, [sp, #48]
   1122c:	mov	x23, x0
   11230:	mov	x24, x1
   11234:	mov	x22, x2
   11238:	mov	x21, x3
   1123c:	mov	x0, #0x68                  	// #104
   11240:	bl	0 <grub_zalloc>
   11244:	mov	x19, x0
   11248:	cbz	x0, 112a8 <grub_script_lexer_init+0x90>
   1124c:	mov	w0, #0x20                  	// #32
   11250:	str	w0, [x19, #68]
   11254:	mov	x0, #0x20                  	// #32
   11258:	bl	0 <grub_malloc>
   1125c:	mov	x20, x0
   11260:	str	x0, [x19, #56]
   11264:	cbz	x0, 112c0 <grub_script_lexer_init+0xa8>
   11268:	str	x22, [x19]
   1126c:	str	x21, [x19, #8]
   11270:	add	x0, x19, #0x58
   11274:	bl	13740 <yylex_init>
   11278:	cbnz	w0, 112d0 <grub_script_lexer_init+0xb8>
   1127c:	ldr	x1, [x19, #88]
   11280:	mov	x0, x23
   11284:	bl	1368c <yyset_extra>
   11288:	str	x19, [x23, #40]
   1128c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11290:	ldr	x1, [x0]
   11294:	cmp	x24, #0x0
   11298:	csel	x1, x24, x1, ne  // ne = any
   1129c:	mov	x0, x23
   112a0:	bl	1103c <grub_script_lexer_yywrap>
   112a4:	cbnz	w0, 112e8 <grub_script_lexer_init+0xd0>
   112a8:	mov	x0, x19
   112ac:	ldp	x19, x20, [sp, #16]
   112b0:	ldp	x21, x22, [sp, #32]
   112b4:	ldp	x23, x24, [sp, #48]
   112b8:	ldp	x29, x30, [sp], #64
   112bc:	ret
   112c0:	mov	x0, x19
   112c4:	bl	0 <grub_free>
   112c8:	mov	x19, x20
   112cc:	b	112a8 <grub_script_lexer_init+0x90>
   112d0:	ldr	x0, [x19, #56]
   112d4:	bl	0 <grub_free>
   112d8:	mov	x0, x19
   112dc:	bl	0 <grub_free>
   112e0:	mov	x19, #0x0                   	// #0
   112e4:	b	112a8 <grub_script_lexer_init+0x90>
   112e8:	str	xzr, [x23, #40]
   112ec:	ldr	x0, [x19, #88]
   112f0:	bl	138b8 <yylex_destroy>
   112f4:	ldr	x0, [x19, #56]
   112f8:	bl	0 <grub_free>
   112fc:	mov	x0, x19
   11300:	bl	0 <grub_free>
   11304:	mov	x19, #0x0                   	// #0
   11308:	b	112a8 <grub_script_lexer_init+0x90>
   1130c:	nop
	...
   11318:	sub	w0, w0, #0x1
   1131c:	orr	w0, w0, w0, lsr #1
   11320:	orr	w0, w0, w0, lsr #2
   11324:	orr	w0, w0, w0, lsr #4
   11328:	orr	w0, w0, w0, lsr #8
   1132c:	orr	w0, w0, w0, lsr #16
   11330:	adds	w0, w0, #0x1
   11334:	cinc	w0, w0, eq  // eq = none
   11338:	ret

000000000001133c <grub_script_argv_free>:
   1133c:	stp	x29, x30, [sp, #-32]!
   11340:	mov	x29, sp
   11344:	stp	x19, x20, [sp, #16]
   11348:	mov	x20, x0
   1134c:	ldr	x0, [x0, #8]
   11350:	cbz	x0, 11384 <grub_script_argv_free+0x48>
   11354:	ldr	w0, [x20]
   11358:	cbz	w0, 1137c <grub_script_argv_free+0x40>
   1135c:	mov	w19, #0x0                   	// #0
   11360:	ldr	x0, [x20, #8]
   11364:	ldr	x0, [x0, w19, uxtw #3]
   11368:	bl	0 <grub_free>
   1136c:	add	w19, w19, #0x1
   11370:	ldr	w0, [x20]
   11374:	cmp	w0, w19
   11378:	b.hi	11360 <grub_script_argv_free+0x24>  // b.pmore
   1137c:	ldr	x0, [x20, #8]
   11380:	bl	0 <grub_free>
   11384:	str	wzr, [x20]
   11388:	str	xzr, [x20, #8]
   1138c:	str	xzr, [x20, #16]
   11390:	ldp	x19, x20, [sp, #16]
   11394:	ldp	x29, x30, [sp], #32
   11398:	ret

000000000001139c <grub_script_argv_next>:
   1139c:	stp	x29, x30, [sp, #-32]!
   113a0:	mov	x29, sp
   113a4:	stp	x19, x20, [sp, #16]
   113a8:	mov	x19, x0
   113ac:	ldr	x20, [x0, #8]
   113b0:	cbz	x20, 113c8 <grub_script_argv_next+0x2c>
   113b4:	ldr	w0, [x0]
   113b8:	cbz	w0, 113c8 <grub_script_argv_next+0x2c>
   113bc:	sub	w0, w0, #0x1
   113c0:	ldr	x0, [x20, x0, lsl #3]
   113c4:	cbz	x0, 11424 <grub_script_argv_next+0x88>
   113c8:	ldr	w0, [x19]
   113cc:	add	w0, w0, #0x2
   113d0:	lsl	w0, w0, #3
   113d4:	bl	11318 <grub_script_lexer_init+0x100>
   113d8:	mov	w1, w0
   113dc:	mov	x0, x20
   113e0:	bl	0 <grub_realloc>
   113e4:	cbz	x0, 1142c <grub_script_argv_next+0x90>
   113e8:	ldr	w1, [x19]
   113ec:	add	w1, w1, #0x1
   113f0:	str	w1, [x19]
   113f4:	str	x0, [x19, #8]
   113f8:	cmp	w1, #0x1
   113fc:	b.eq	1141c <grub_script_argv_next+0x80>  // b.none
   11400:	ldr	w1, [x19]
   11404:	ldr	x0, [x19, #8]
   11408:	str	xzr, [x0, x1, lsl #3]
   1140c:	mov	w0, #0x0                   	// #0
   11410:	ldp	x19, x20, [sp, #16]
   11414:	ldp	x29, x30, [sp], #32
   11418:	ret
   1141c:	str	xzr, [x0]
   11420:	b	11400 <grub_script_argv_next+0x64>
   11424:	mov	w0, #0x0                   	// #0
   11428:	b	11410 <grub_script_argv_next+0x74>
   1142c:	mov	w0, #0x1                   	// #1
   11430:	b	11410 <grub_script_argv_next+0x74>

0000000000011434 <grub_script_argv_append>:
   11434:	stp	x29, x30, [sp, #-64]!
   11438:	mov	x29, sp
   1143c:	stp	x19, x20, [sp, #16]
   11440:	stp	x21, x22, [sp, #32]
   11444:	mov	x19, x0
   11448:	mov	x22, x1
   1144c:	ldr	w0, [x0]
   11450:	ldr	x1, [x19, #8]
   11454:	cbz	x22, 114e0 <grub_script_argv_append+0xac>
   11458:	str	x23, [sp, #48]
   1145c:	mov	x21, x2
   11460:	sub	w0, w0, #0x1
   11464:	ldr	x23, [x1, x0, lsl #3]
   11468:	mov	x20, #0x0                   	// #0
   1146c:	cbz	x23, 1147c <grub_script_argv_append+0x48>
   11470:	mov	x0, x23
   11474:	bl	0 <grub_strlen>
   11478:	mov	x20, x0
   1147c:	add	w0, w21, #0x1
   11480:	add	w0, w0, w20
   11484:	bl	11318 <grub_script_lexer_init+0x100>
   11488:	mov	w1, w0
   1148c:	mov	x0, x23
   11490:	bl	0 <grub_realloc>
   11494:	mov	x23, x0
   11498:	mov	w0, #0x1                   	// #1
   1149c:	cbz	x23, 114e8 <grub_script_argv_append+0xb4>
   114a0:	add	x20, x23, x20
   114a4:	mov	x2, x21
   114a8:	mov	x1, x22
   114ac:	mov	x0, x20
   114b0:	bl	0 <grub_memmove>
   114b4:	strb	wzr, [x20, x21]
   114b8:	ldr	w0, [x19]
   114bc:	sub	w0, w0, #0x1
   114c0:	ldr	x1, [x19, #8]
   114c4:	str	x23, [x1, x0, lsl #3]
   114c8:	mov	w0, #0x0                   	// #0
   114cc:	ldr	x23, [sp, #48]
   114d0:	ldp	x19, x20, [sp, #16]
   114d4:	ldp	x21, x22, [sp, #32]
   114d8:	ldp	x29, x30, [sp], #64
   114dc:	ret
   114e0:	mov	w0, #0x0                   	// #0
   114e4:	b	114d0 <grub_script_argv_append+0x9c>
   114e8:	ldr	x23, [sp, #48]
   114ec:	b	114d0 <grub_script_argv_append+0x9c>

00000000000114f0 <grub_script_argv_make>:
   114f0:	stp	x29, x30, [sp, #-80]!
   114f4:	mov	x29, sp
   114f8:	stp	x21, x22, [sp, #32]
   114fc:	mov	x22, x0
   11500:	str	wzr, [sp, #56]
   11504:	str	xzr, [sp, #64]
   11508:	str	xzr, [sp, #72]
   1150c:	cmp	w1, #0x0
   11510:	b.le	11564 <grub_script_argv_make+0x74>
   11514:	stp	x19, x20, [sp, #16]
   11518:	mov	x19, x2
   1151c:	sub	w1, w1, #0x1
   11520:	add	x2, x2, #0x8
   11524:	add	x21, x2, x1, lsl #3
   11528:	add	x0, sp, #0x38
   1152c:	bl	1139c <grub_script_argv_next>
   11530:	cbnz	w0, 1157c <grub_script_argv_make+0x8c>
   11534:	ldr	x20, [x19]
   11538:	mov	x0, x20
   1153c:	bl	0 <grub_strlen>
   11540:	mov	x2, x0
   11544:	mov	x1, x20
   11548:	add	x0, sp, #0x38
   1154c:	bl	11434 <grub_script_argv_append>
   11550:	cbnz	w0, 1157c <grub_script_argv_make+0x8c>
   11554:	add	x19, x19, #0x8
   11558:	cmp	x19, x21
   1155c:	b.ne	11528 <grub_script_argv_make+0x38>  // b.any
   11560:	ldp	x19, x20, [sp, #16]
   11564:	ldp	x0, x1, [sp, #56]
   11568:	stp	x0, x1, [x22]
   1156c:	ldr	x0, [sp, #72]
   11570:	str	x0, [x22, #16]
   11574:	mov	w0, #0x0                   	// #0
   11578:	b	1158c <grub_script_argv_make+0x9c>
   1157c:	add	x0, sp, #0x38
   11580:	bl	1133c <grub_script_argv_free>
   11584:	mov	w0, #0x1                   	// #1
   11588:	ldp	x19, x20, [sp, #16]
   1158c:	ldp	x21, x22, [sp, #32]
   11590:	ldp	x29, x30, [sp], #80
   11594:	ret

0000000000011598 <grub_script_argv_split_append>:
   11598:	stp	x29, x30, [sp, #-48]!
   1159c:	mov	x29, sp
   115a0:	stp	x21, x22, [sp, #32]
   115a4:	cbz	x1, 11604 <grub_script_argv_split_append+0x6c>
   115a8:	stp	x19, x20, [sp, #16]
   115ac:	mov	x22, x0
   115b0:	mov	x20, x1
   115b4:	ldrb	w0, [x1]
   115b8:	cbz	w0, 115d0 <grub_script_argv_split_append+0x38>
   115bc:	bl	0 <grub_isspace>
   115c0:	cbz	w0, 11614 <grub_script_argv_split_append+0x7c>
   115c4:	ldrb	w0, [x20, #1]!
   115c8:	cbnz	w0, 115bc <grub_script_argv_split_append+0x24>
   115cc:	b	11614 <grub_script_argv_split_append+0x7c>
   115d0:	mov	w21, #0x0                   	// #0
   115d4:	ldp	x19, x20, [sp, #16]
   115d8:	b	11664 <grub_script_argv_split_append+0xcc>
   115dc:	ldrb	w0, [x19]
   115e0:	mov	x20, x19
   115e4:	cbz	w0, 11610 <grub_script_argv_split_append+0x78>
   115e8:	mov	x0, x22
   115ec:	bl	1139c <grub_script_argv_next>
   115f0:	add	w21, w21, w0
   115f4:	b	11610 <grub_script_argv_split_append+0x78>
   115f8:	mov	w21, #0x0                   	// #0
   115fc:	ldp	x19, x20, [sp, #16]
   11600:	b	11664 <grub_script_argv_split_append+0xcc>
   11604:	mov	w21, #0x0                   	// #0
   11608:	b	11664 <grub_script_argv_split_append+0xcc>
   1160c:	mov	x20, x19
   11610:	cbnz	w21, 11660 <grub_script_argv_split_append+0xc8>
   11614:	ldrb	w0, [x20]
   11618:	cbz	w0, 115f8 <grub_script_argv_split_append+0x60>
   1161c:	mov	x19, x20
   11620:	bl	0 <grub_isspace>
   11624:	cbnz	w0, 11630 <grub_script_argv_split_append+0x98>
   11628:	ldrb	w0, [x19, #1]!
   1162c:	cbnz	w0, 11620 <grub_script_argv_split_append+0x88>
   11630:	sub	x2, x19, x20
   11634:	mov	x1, x20
   11638:	mov	x0, x22
   1163c:	bl	11434 <grub_script_argv_append>
   11640:	mov	w21, w0
   11644:	ldrb	w0, [x19]
   11648:	cbz	w0, 1160c <grub_script_argv_split_append+0x74>
   1164c:	bl	0 <grub_isspace>
   11650:	cbz	w0, 115dc <grub_script_argv_split_append+0x44>
   11654:	ldrb	w0, [x19, #1]!
   11658:	cbnz	w0, 1164c <grub_script_argv_split_append+0xb4>
   1165c:	b	1160c <grub_script_argv_split_append+0x74>
   11660:	ldp	x19, x20, [sp, #16]
   11664:	mov	w0, w21
   11668:	ldp	x21, x22, [sp, #32]
   1166c:	ldp	x29, x30, [sp], #48
   11670:	ret
   11674:	nop

0000000000011678 <grub_normal_add_menu_entry>:
   11678:	stp	x29, x30, [sp, #-128]!
   1167c:	mov	x29, sp
   11680:	stp	x19, x20, [sp, #16]
   11684:	stp	x21, x22, [sp, #32]
   11688:	stp	x25, x26, [sp, #64]
   1168c:	stp	x27, x28, [sp, #80]
   11690:	mov	w27, w0
   11694:	mov	x25, x1
   11698:	mov	x19, x2
   1169c:	str	x3, [sp, #104]
   116a0:	mov	x21, x4
   116a4:	mov	x26, x5
   116a8:	mov	x20, x6
   116ac:	mov	x22, x7
   116b0:	bl	b5e0 <grub_env_get_menu>
   116b4:	cbz	x0, 11760 <grub_normal_add_menu_entry+0xe8>
   116b8:	stp	x23, x24, [sp, #48]
   116bc:	mov	x24, x0
   116c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   116c4:	ldr	x1, [x0]
   116c8:	cmp	x20, #0x0
   116cc:	mov	x2, x22
   116d0:	csel	x1, x20, x1, ne  // ne = any
   116d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   116d8:	ldr	x0, [x0]
   116dc:	bl	0 <grub_xasprintf>
   116e0:	mov	x23, x0
   116e4:	cbz	x0, 11774 <grub_normal_add_menu_entry+0xfc>
   116e8:	cbz	x19, 1178c <grub_normal_add_menu_entry+0x114>
   116ec:	ldr	x0, [x19]
   116f0:	cbz	x0, 11788 <grub_normal_add_menu_entry+0x110>
   116f4:	mov	x0, #0x0                   	// #0
   116f8:	mov	w2, w0
   116fc:	add	x0, x0, #0x1
   11700:	ldr	x1, [x19, x0, lsl #3]
   11704:	cbnz	x1, 116f8 <grub_normal_add_menu_entry+0x80>
   11708:	add	w0, w2, #0x2
   1170c:	sbfiz	x0, x0, #4, #32
   11710:	bl	0 <grub_zalloc>
   11714:	mov	x22, x0
   11718:	cbz	x0, 119b0 <grub_normal_add_menu_entry+0x338>
   1171c:	ldr	x0, [x19]
   11720:	cbz	x0, 117e0 <grub_normal_add_menu_entry+0x168>
   11724:	add	x28, x22, #0x10
   11728:	add	x19, x19, #0x8
   1172c:	bl	0 <grub_strdup>
   11730:	mov	x20, x0
   11734:	stur	x0, [x28, #-16]
   11738:	cbz	x0, 11994 <grub_normal_add_menu_entry+0x31c>
   1173c:	ldr	x0, [x19]
   11740:	cmp	x0, #0x0
   11744:	csel	x0, x0, x28, eq  // eq = none
   11748:	stur	x0, [x28, #-8]
   1174c:	ldr	x0, [x19], #8
   11750:	add	x28, x28, #0x10
   11754:	cbnz	x0, 1172c <grub_normal_add_menu_entry+0xb4>
   11758:	mov	x19, x22
   1175c:	b	1178c <grub_normal_add_menu_entry+0x114>
   11760:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11764:	ldr	x1, [x0]
   11768:	mov	w0, #0x1b                  	// #27
   1176c:	bl	0 <grub_error>
   11770:	b	119fc <grub_normal_add_menu_entry+0x384>
   11774:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11778:	ldr	x0, [x0]
   1177c:	ldr	w0, [x0]
   11780:	ldp	x23, x24, [sp, #48]
   11784:	b	119fc <grub_normal_add_menu_entry+0x384>
   11788:	mov	x19, x0
   1178c:	cbz	x21, 117a0 <grub_normal_add_menu_entry+0x128>
   11790:	mov	x0, x21
   11794:	bl	0 <grub_strdup>
   11798:	mov	x21, x0
   1179c:	cbz	x0, 11a24 <grub_normal_add_menu_entry+0x3ac>
   117a0:	str	wzr, [sp, #116]
   117a4:	cbz	x26, 11808 <grub_normal_add_menu_entry+0x190>
   117a8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   117ac:	ldr	x22, [x0]
   117b0:	mov	w20, #0x0                   	// #0
   117b4:	ldr	x1, [x22]
   117b8:	mov	x0, x26
   117bc:	bl	0 <grub_strcmp>
   117c0:	cbz	w0, 117e8 <grub_normal_add_menu_entry+0x170>
   117c4:	add	w20, w20, #0x1
   117c8:	add	x22, x22, #0x10
   117cc:	cmp	w20, #0x10
   117d0:	b.ne	117b4 <grub_normal_add_menu_entry+0x13c>  // b.any
   117d4:	ldrb	w0, [x26]
   117d8:	str	w0, [sp, #116]
   117dc:	b	11808 <grub_normal_add_menu_entry+0x190>
   117e0:	mov	x19, x22
   117e4:	b	1178c <grub_normal_add_menu_entry+0x114>
   117e8:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   117ec:	ldr	x0, [x0]
   117f0:	ubfiz	x1, x20, #4, #32
   117f4:	add	x0, x0, x1
   117f8:	ldr	w0, [x0, #8]
   117fc:	str	w0, [sp, #116]
   11800:	cmp	w20, #0x10
   11804:	b.eq	117d4 <grub_normal_add_menu_entry+0x15c>  // b.none
   11808:	cbz	w27, 11930 <grub_normal_add_menu_entry+0x2b8>
   1180c:	ldr	x0, [x25]
   11810:	bl	0 <grub_strdup>
   11814:	mov	x22, x0
   11818:	cbz	x0, 11a30 <grub_normal_add_menu_entry+0x3b8>
   1181c:	ldr	x0, [sp, #104]
   11820:	cmp	x0, #0x0
   11824:	csel	x0, x0, x22, ne  // ne = any
   11828:	bl	0 <grub_strdup>
   1182c:	mov	x28, x0
   11830:	cbz	x0, 11948 <grub_normal_add_menu_entry+0x2d0>
   11834:	add	w0, w27, #0x1
   11838:	sbfiz	x0, x0, #3, #32
   1183c:	str	x0, [sp, #120]
   11840:	bl	0 <grub_malloc>
   11844:	mov	x20, x0
   11848:	cbz	x0, 11948 <grub_normal_add_menu_entry+0x2d0>
   1184c:	cmp	w27, #0x0
   11850:	b.le	11888 <grub_normal_add_menu_entry+0x210>
   11854:	sub	w0, w27, #0x1
   11858:	add	x0, x0, #0x1
   1185c:	lsl	x0, x0, #3
   11860:	str	x0, [sp, #104]
   11864:	mov	x26, #0x0                   	// #0
   11868:	ldr	x0, [x25, x26]
   1186c:	bl	0 <grub_strdup>
   11870:	str	x0, [x20, x26]
   11874:	cbz	x0, 11a38 <grub_normal_add_menu_entry+0x3c0>
   11878:	add	x26, x26, #0x8
   1187c:	ldr	x0, [sp, #104]
   11880:	cmp	x26, x0
   11884:	b.ne	11868 <grub_normal_add_menu_entry+0x1f0>  // b.any
   11888:	ldr	x0, [sp, #120]
   1188c:	add	x0, x20, x0
   11890:	stur	xzr, [x0, #-8]
   11894:	ldr	x0, [x24, #8]
   11898:	cbz	x0, 11960 <grub_normal_add_menu_entry+0x2e8>
   1189c:	mov	x1, x0
   118a0:	ldr	x0, [x0, #72]
   118a4:	cbnz	x0, 1189c <grub_normal_add_menu_entry+0x224>
   118a8:	add	x25, x1, #0x48
   118ac:	mov	x0, #0x50                  	// #80
   118b0:	bl	0 <grub_zalloc>
   118b4:	str	x0, [x25]
   118b8:	cbz	x0, 11a38 <grub_normal_add_menu_entry+0x3c0>
   118bc:	str	x22, [x0]
   118c0:	ldr	x0, [x25]
   118c4:	str	x28, [x0, #8]
   118c8:	ldr	x0, [x25]
   118cc:	ldr	w1, [sp, #116]
   118d0:	str	w1, [x0, #64]
   118d4:	ldr	x0, [x25]
   118d8:	str	x19, [x0, #32]
   118dc:	cbz	x21, 118ec <grub_normal_add_menu_entry+0x274>
   118e0:	ldr	x0, [x25]
   118e4:	mov	w1, #0x1                   	// #1
   118e8:	str	w1, [x0, #16]
   118ec:	ldr	x0, [x25]
   118f0:	str	x21, [x0, #24]
   118f4:	ldr	x0, [x25]
   118f8:	str	w27, [x0, #48]
   118fc:	ldr	x0, [x25]
   11900:	str	x20, [x0, #56]
   11904:	ldr	x0, [x25]
   11908:	str	x23, [x0, #40]
   1190c:	ldr	x0, [x25]
   11910:	ldr	w1, [sp, #128]
   11914:	str	w1, [x0, #68]
   11918:	ldr	w0, [x24]
   1191c:	add	w0, w0, #0x1
   11920:	str	w0, [x24]
   11924:	mov	w0, #0x0                   	// #0
   11928:	ldp	x23, x24, [sp, #48]
   1192c:	b	119fc <grub_normal_add_menu_entry+0x384>
   11930:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11934:	ldr	x1, [x0]
   11938:	mov	w0, #0x1b                  	// #27
   1193c:	bl	0 <grub_error>
   11940:	mov	x28, #0x0                   	// #0
   11944:	mov	x22, #0x0                   	// #0
   11948:	mov	x0, x23
   1194c:	bl	0 <grub_free>
   11950:	mov	x20, #0x0                   	// #0
   11954:	cbz	x19, 11a14 <grub_normal_add_menu_entry+0x39c>
   11958:	mov	x23, x19
   1195c:	b	1196c <grub_normal_add_menu_entry+0x2f4>
   11960:	add	x25, x24, #0x8
   11964:	b	118ac <grub_normal_add_menu_entry+0x234>
   11968:	bl	0 <grub_free>
   1196c:	ldr	x0, [x23], #16
   11970:	cbnz	x0, 11968 <grub_normal_add_menu_entry+0x2f0>
   11974:	mov	x0, x19
   11978:	bl	0 <grub_free>
   1197c:	cbz	x20, 119cc <grub_normal_add_menu_entry+0x354>
   11980:	mov	x19, x20
   11984:	ldr	x0, [x19], #8
   11988:	cbz	x0, 119cc <grub_normal_add_menu_entry+0x354>
   1198c:	bl	0 <grub_free>
   11990:	b	11984 <grub_normal_add_menu_entry+0x30c>
   11994:	mov	x0, x23
   11998:	bl	0 <grub_free>
   1199c:	mov	x19, x22
   119a0:	mov	x28, x20
   119a4:	mov	x22, x20
   119a8:	mov	x21, x20
   119ac:	b	11958 <grub_normal_add_menu_entry+0x2e0>
   119b0:	mov	x0, x23
   119b4:	bl	0 <grub_free>
   119b8:	mov	x0, #0x0                   	// #0
   119bc:	bl	0 <grub_free>
   119c0:	mov	x28, x22
   119c4:	mov	x21, x22
   119c8:	mov	x20, x22
   119cc:	mov	x0, x20
   119d0:	bl	0 <grub_free>
   119d4:	mov	x0, x21
   119d8:	bl	0 <grub_free>
   119dc:	mov	x0, x22
   119e0:	bl	0 <grub_free>
   119e4:	mov	x0, x28
   119e8:	bl	0 <grub_free>
   119ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   119f0:	ldr	x0, [x0]
   119f4:	ldr	w0, [x0]
   119f8:	ldp	x23, x24, [sp, #48]
   119fc:	ldp	x19, x20, [sp, #16]
   11a00:	ldp	x21, x22, [sp, #32]
   11a04:	ldp	x25, x26, [sp, #64]
   11a08:	ldp	x27, x28, [sp, #80]
   11a0c:	ldp	x29, x30, [sp], #128
   11a10:	ret
   11a14:	mov	x0, #0x0                   	// #0
   11a18:	bl	0 <grub_free>
   11a1c:	mov	x20, x19
   11a20:	b	119cc <grub_normal_add_menu_entry+0x354>
   11a24:	mov	x28, x0
   11a28:	mov	x22, x0
   11a2c:	b	11948 <grub_normal_add_menu_entry+0x2d0>
   11a30:	mov	x28, x0
   11a34:	b	11948 <grub_normal_add_menu_entry+0x2d0>
   11a38:	mov	x0, x23
   11a3c:	bl	0 <grub_free>
   11a40:	cbnz	x19, 11958 <grub_normal_add_menu_entry+0x2e0>
   11a44:	mov	x0, #0x0                   	// #0
   11a48:	bl	0 <grub_free>
   11a4c:	b	11980 <grub_normal_add_menu_entry+0x308>
	...
   11a80:	sub	sp, sp, #0x90
   11a84:	stp	x29, x30, [sp, #16]
   11a88:	add	x29, sp, #0x10
   11a8c:	stp	x19, x20, [sp, #32]
   11a90:	cbz	w1, 11adc <grub_normal_add_menu_entry+0x464>
   11a94:	stp	x21, x22, [sp, #48]
   11a98:	stp	x23, x24, [sp, #64]
   11a9c:	mov	x23, x0
   11aa0:	mov	w20, w1
   11aa4:	mov	x22, x2
   11aa8:	ldr	x0, [x0, #8]
   11aac:	ldr	w1, [x0, #48]
   11ab0:	cbz	w1, 11af4 <grub_normal_add_menu_entry+0x47c>
   11ab4:	ldr	x1, [x23, #16]
   11ab8:	cbz	x1, 11afc <grub_normal_add_menu_entry+0x484>
   11abc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11ac0:	ldr	x1, [x0]
   11ac4:	mov	w0, #0x12                  	// #18
   11ac8:	bl	0 <grub_error>
   11acc:	mov	w19, w0
   11ad0:	ldp	x21, x22, [sp, #48]
   11ad4:	ldp	x23, x24, [sp, #64]
   11ad8:	b	11d88 <grub_normal_add_menu_entry+0x710>
   11adc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11ae0:	ldr	x1, [x0]
   11ae4:	mov	w0, #0x12                  	// #18
   11ae8:	bl	0 <grub_error>
   11aec:	mov	w19, w0
   11af0:	b	11d88 <grub_normal_add_menu_entry+0x710>
   11af4:	ldr	x1, [x23, #16]
   11af8:	cbz	x1, 11b6c <grub_normal_add_menu_entry+0x4f4>
   11afc:	ldr	w1, [x0, #16]
   11b00:	cbz	w1, 11b8c <grub_normal_add_menu_entry+0x514>
   11b04:	ldr	x1, [x0, #24]
   11b08:	str	x1, [sp, #120]
   11b0c:	ldr	x2, [x23, #16]
   11b10:	cbz	x2, 11ba8 <grub_normal_add_menu_entry+0x530>
   11b14:	stp	x25, x26, [sp, #80]
   11b18:	sbfiz	x0, x20, #3, #32
   11b1c:	sub	x0, x0, #0x8
   11b20:	str	x0, [sp, #128]
   11b24:	ldr	x26, [x22, x0]
   11b28:	str	xzr, [x22, x0]
   11b2c:	mov	x0, x26
   11b30:	bl	0 <grub_strlen>
   11b34:	sub	w0, w0, #0x1
   11b38:	str	w0, [sp, #140]
   11b3c:	ldrb	w1, [x26, w0, uxtw]
   11b40:	str	w1, [sp, #136]
   11b44:	strb	wzr, [x26, w0, uxtw]
   11b48:	sub	w20, w20, #0x1
   11b4c:	cmp	w20, #0x0
   11b50:	b.le	11d9c <grub_normal_add_menu_entry+0x724>
   11b54:	stp	x27, x28, [sp, #96]
   11b58:	mov	x2, #0x0                   	// #0
   11b5c:	mov	x0, #0xa                   	// #10
   11b60:	mov	w5, #0x3                   	// #3
   11b64:	mov	w4, #0x1                   	// #1
   11b68:	b	11c0c <grub_normal_add_menu_entry+0x594>
   11b6c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11b70:	ldr	x1, [x0]
   11b74:	mov	w0, #0x12                  	// #18
   11b78:	bl	0 <grub_error>
   11b7c:	mov	w19, w0
   11b80:	ldp	x21, x22, [sp, #48]
   11b84:	ldp	x23, x24, [sp, #64]
   11b88:	b	11d88 <grub_normal_add_menu_entry+0x710>
   11b8c:	ldr	w2, [x0, #80]
   11b90:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   11b94:	ldr	x1, [x1]
   11b98:	cmp	w2, #0x0
   11b9c:	csel	x1, x1, xzr, eq  // eq = none
   11ba0:	str	x1, [sp, #120]
   11ba4:	b	11b0c <grub_normal_add_menu_entry+0x494>
   11ba8:	ldr	w1, [x0]
   11bac:	cbz	w1, 11bb4 <grub_normal_add_menu_entry+0x53c>
   11bb0:	ldr	x2, [x0, #8]
   11bb4:	ldr	x7, [x0, #56]
   11bb8:	ldr	x5, [x0, #40]
   11bbc:	ldr	x3, [x0, #72]
   11bc0:	ldr	x0, [x23]
   11bc4:	ldr	x0, [x0]
   11bc8:	ldr	x0, [x0, #16]
   11bcc:	ldrb	w0, [x0]
   11bd0:	cmp	w0, #0x73
   11bd4:	cset	w0, eq  // eq = none
   11bd8:	str	w0, [sp]
   11bdc:	mov	x6, #0x0                   	// #0
   11be0:	ldr	x4, [sp, #120]
   11be4:	mov	x1, x22
   11be8:	mov	w0, w20
   11bec:	bl	11678 <grub_normal_add_menu_entry>
   11bf0:	mov	w19, w0
   11bf4:	ldp	x21, x22, [sp, #48]
   11bf8:	ldp	x23, x24, [sp, #64]
   11bfc:	b	11d88 <grub_normal_add_menu_entry+0x710>
   11c00:	add	x2, x2, #0x1
   11c04:	cmp	w20, w2
   11c08:	b.le	11c34 <grub_normal_add_menu_entry+0x5bc>
   11c0c:	add	x0, x0, #0x3
   11c10:	ldr	x3, [x22, x2, lsl #3]
   11c14:	ldrb	w1, [x3]
   11c18:	cbz	w1, 11c00 <grub_normal_add_menu_entry+0x588>
   11c1c:	cmp	w1, #0x27
   11c20:	csel	w1, w5, w4, eq  // eq = none
   11c24:	add	x0, x0, w1, sxtw
   11c28:	ldrb	w1, [x3, #1]!
   11c2c:	cbnz	w1, 11c1c <grub_normal_add_menu_entry+0x5a4>
   11c30:	b	11c00 <grub_normal_add_menu_entry+0x588>
   11c34:	add	x0, x0, #0x2
   11c38:	bl	0 <grub_malloc>
   11c3c:	mov	x25, x0
   11c40:	cbz	x0, 11c64 <grub_normal_add_menu_entry+0x5ec>
   11c44:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11c48:	ldr	x1, [x0]
   11c4c:	mov	x0, x25
   11c50:	bl	0 <grub_strcpy>
   11c54:	add	x0, x25, #0x9
   11c58:	mov	x24, #0x0                   	// #0
   11c5c:	mov	w27, #0x27                  	// #39
   11c60:	b	11ce4 <grub_normal_add_menu_entry+0x66c>
   11c64:	ldp	x27, x28, [sp, #96]
   11c68:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11c6c:	ldr	x0, [x0]
   11c70:	ldr	w19, [x0]
   11c74:	ldp	x21, x22, [sp, #48]
   11c78:	ldp	x23, x24, [sp, #64]
   11c7c:	ldp	x25, x26, [sp, #80]
   11c80:	b	11d88 <grub_normal_add_menu_entry+0x710>
   11c84:	mov	x1, x21
   11c88:	strb	w0, [x19], #1
   11c8c:	ldrb	w0, [x1]
   11c90:	add	x21, x21, #0x1
   11c94:	cbz	w0, 11cd0 <grub_normal_add_menu_entry+0x658>
   11c98:	cmp	w0, #0x27
   11c9c:	b.ne	11c84 <grub_normal_add_menu_entry+0x60c>  // b.any
   11ca0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11ca4:	add	x0, x0, #0x0
   11ca8:	ldr	x1, [x0]
   11cac:	mov	x0, x19
   11cb0:	bl	0 <grub_strcpy>
   11cb4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11cb8:	add	x0, x0, #0x0
   11cbc:	ldr	x0, [x0]
   11cc0:	bl	0 <grub_strlen>
   11cc4:	add	x19, x19, x0
   11cc8:	mov	x1, x21
   11ccc:	b	11c8c <grub_normal_add_menu_entry+0x614>
   11cd0:	mov	x0, x19
   11cd4:	strb	w27, [x0], #1
   11cd8:	add	x24, x24, #0x1
   11cdc:	cmp	w20, w24
   11ce0:	b.le	11d08 <grub_normal_add_menu_entry+0x690>
   11ce4:	mov	x19, x0
   11ce8:	mov	w1, #0x20                  	// #32
   11cec:	strb	w1, [x19], #2
   11cf0:	strb	w27, [x0, #1]
   11cf4:	ldr	x21, [x22, x24, lsl #3]
   11cf8:	ldrb	w0, [x21]
   11cfc:	cbz	w0, 11cd0 <grub_normal_add_menu_entry+0x658>
   11d00:	add	x21, x21, #0x1
   11d04:	b	11c98 <grub_normal_add_menu_entry+0x620>
   11d08:	ldp	x27, x28, [sp, #96]
   11d0c:	mov	w1, #0xa                   	// #10
   11d10:	strb	w1, [x0]
   11d14:	strb	wzr, [x0, #1]
   11d18:	ldr	x0, [x23, #8]
   11d1c:	ldr	x5, [x0, #40]
   11d20:	ldr	x3, [x0, #72]
   11d24:	ldr	x2, [x0, #8]
   11d28:	ldr	x0, [x23]
   11d2c:	ldr	x0, [x0]
   11d30:	ldr	x0, [x0, #16]
   11d34:	ldrb	w0, [x0]
   11d38:	cmp	w0, #0x73
   11d3c:	cset	w0, eq  // eq = none
   11d40:	str	w0, [sp]
   11d44:	add	x7, x26, #0x1
   11d48:	mov	x6, x25
   11d4c:	ldr	x4, [sp, #120]
   11d50:	mov	x1, x22
   11d54:	mov	w0, w20
   11d58:	bl	11678 <grub_normal_add_menu_entry>
   11d5c:	mov	w19, w0
   11d60:	ldr	w0, [sp, #140]
   11d64:	ldrb	w1, [sp, #136]
   11d68:	strb	w1, [x26, w0, uxtw]
   11d6c:	ldr	x0, [sp, #128]
   11d70:	str	x26, [x22, x0]
   11d74:	mov	x0, x25
   11d78:	bl	0 <grub_free>
   11d7c:	ldp	x21, x22, [sp, #48]
   11d80:	ldp	x23, x24, [sp, #64]
   11d84:	ldp	x25, x26, [sp, #80]
   11d88:	mov	w0, w19
   11d8c:	ldp	x19, x20, [sp, #32]
   11d90:	ldp	x29, x30, [sp, #16]
   11d94:	add	sp, sp, #0x90
   11d98:	ret
   11d9c:	mov	x0, #0xc                   	// #12
   11da0:	bl	0 <grub_malloc>
   11da4:	mov	x25, x0
   11da8:	cbz	x0, 11c68 <grub_normal_add_menu_entry+0x5f0>
   11dac:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11db0:	ldr	x1, [x0]
   11db4:	mov	x0, x25
   11db8:	bl	0 <grub_strcpy>
   11dbc:	add	x0, x25, #0x9
   11dc0:	b	11d0c <grub_normal_add_menu_entry+0x694>
   11dc4:	nop
	...

0000000000011e00 <grub_menu_init>:
   11e00:	stp	x29, x30, [sp, #-48]!
   11e04:	mov	x29, sp
   11e08:	stp	x19, x20, [sp, #16]
   11e0c:	stp	x21, x22, [sp, #32]
   11e10:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e14:	ldr	x19, [x0]
   11e18:	add	x19, x19, #0x100
   11e1c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e20:	ldr	x22, [x0]
   11e24:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e28:	ldr	x21, [x0]
   11e2c:	mov	x5, x19
   11e30:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e34:	ldr	x4, [x0]
   11e38:	mov	x3, x22
   11e3c:	mov	w2, #0x2c0                 	// #704
   11e40:	mov	x1, x21
   11e44:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e48:	ldr	x0, [x0]
   11e4c:	bl	0 <grub_register_extcmd>
   11e50:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   11e54:	ldr	x20, [x1]
   11e58:	str	x0, [x20]
   11e5c:	mov	x5, x19
   11e60:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e64:	ldr	x4, [x0]
   11e68:	mov	x3, x22
   11e6c:	mov	w2, #0x2c0                 	// #704
   11e70:	mov	x1, x21
   11e74:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11e78:	ldr	x0, [x0]
   11e7c:	bl	0 <grub_register_extcmd>
   11e80:	str	x0, [x20, #8]
   11e84:	ldp	x19, x20, [sp, #16]
   11e88:	ldp	x21, x22, [sp, #32]
   11e8c:	ldp	x29, x30, [sp], #48
   11e90:	ret
   11e94:	nop
	...

0000000000011ed8 <grub_menu_fini>:
   11ed8:	stp	x29, x30, [sp, #-32]!
   11edc:	mov	x29, sp
   11ee0:	str	x19, [sp, #16]
   11ee4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   11ee8:	ldr	x19, [x0]
   11eec:	ldr	x0, [x19]
   11ef0:	bl	0 <grub_unregister_extcmd>
   11ef4:	ldr	x0, [x19, #8]
   11ef8:	bl	0 <grub_unregister_extcmd>
   11efc:	ldr	x19, [sp, #16]
   11f00:	ldp	x29, x30, [sp], #32
   11f04:	ret
	...

0000000000011f10 <grub_script_yyparse>:
   11f10:	mov	x12, #0x1450                	// #5200
   11f14:	sub	sp, sp, x12
   11f18:	stp	x29, x30, [sp]
   11f1c:	mov	x29, sp
   11f20:	stp	x19, x20, [sp, #16]
   11f24:	stp	x21, x22, [sp, #32]
   11f28:	stp	x23, x24, [sp, #48]
   11f2c:	stp	x25, x26, [sp, #64]
   11f30:	stp	x27, x28, [sp, #80]
   11f34:	str	x0, [sp, #112]
   11f38:	add	x0, sp, #0x1, lsl #12
   11f3c:	add	x0, x0, #0x30
   11f40:	strb	wzr, [x0, #832]
   11f44:	str	wzr, [sp, #108]
   11f48:	mov	w21, #0x0                   	// #0
   11f4c:	mov	w27, #0xfffffffe            	// #-2
   11f50:	mov	x24, #0xc8                  	// #200
   11f54:	add	x20, sp, #0xb0
   11f58:	str	x20, [sp, #96]
   11f5c:	add	x19, sp, #0x1, lsl #12
   11f60:	add	x19, x19, #0x370
   11f64:	mov	x23, x19
   11f68:	adrp	x22, 0 <grub_normal_free_menu-0x26c>
   11f6c:	b	121d0 <grub_script_yyparse+0x2c0>
   11f70:	ldr	x1, [sp, #112]
   11f74:	add	x0, sp, #0x1, lsl #12
   11f78:	add	x0, x0, #0x438
   11f7c:	bl	10d50 <grub_script_yylex>
   11f80:	mov	w27, w0
   11f84:	b	121e8 <grub_script_yyparse+0x2d8>
   11f88:	mov	w0, #0x0                   	// #0
   11f8c:	mov	w27, #0x0                   	// #0
   11f90:	add	w25, w0, w25
   11f94:	cmp	w25, #0xdb
   11f98:	b.hi	12008 <grub_script_yyparse+0xf8>  // b.pmore
   11f9c:	ldr	x1, [x22]
   11fa0:	add	x1, x1, #0x200
   11fa4:	ldrsb	w1, [x1, w25, sxtw]
   11fa8:	cmp	w1, w0
   11fac:	b.ne	12008 <grub_script_yyparse+0xf8>  // b.any
   11fb0:	ldr	x0, [x22]
   11fb4:	add	x0, x0, #0x2e0
   11fb8:	ldrsb	w21, [x0, w25, sxtw]
   11fbc:	neg	w25, w21
   11fc0:	cmp	w21, #0x0
   11fc4:	b.le	12018 <grub_script_yyparse+0x108>
   11fc8:	ldr	w1, [sp, #108]
   11fcc:	cmp	w1, #0x0
   11fd0:	cset	w0, ne  // ne = any
   11fd4:	sub	w0, w1, w0
   11fd8:	str	w0, [sp, #108]
   11fdc:	add	x0, x20, #0x18
   11fe0:	add	x1, sp, #0x1, lsl #12
   11fe4:	add	x1, x1, #0x430
   11fe8:	ldp	x2, x3, [x1, #8]
   11fec:	stp	x2, x3, [x20, #24]
   11ff0:	ldr	x1, [sp, #5192]
   11ff4:	str	x1, [x20, #40]
   11ff8:	mov	x20, x0
   11ffc:	mov	x0, x19
   12000:	mov	w27, #0xfffffffe            	// #-2
   12004:	b	120e8 <grub_script_yyparse+0x1d8>
   12008:	ldr	x0, [x22]
   1200c:	add	x0, x0, #0x3c0
   12010:	ldrsb	w25, [x0, w21, sxtw]
   12014:	cbz	w25, 12814 <grub_script_yyparse+0x904>
   12018:	ldr	x0, [x22]
   1201c:	add	x0, x0, #0x430
   12020:	ldrsb	w21, [x0, w25, sxtw]
   12024:	mov	w0, #0x1                   	// #1
   12028:	sub	w0, w0, w21
   1202c:	sbfiz	x1, x0, #1, #32
   12030:	add	x0, x1, w0, sxtw
   12034:	add	x0, x20, x0, lsl #3
   12038:	ldp	x2, x3, [x0]
   1203c:	stp	x2, x3, [sp, #152]
   12040:	ldr	x28, [x0, #16]
   12044:	str	x28, [sp, #168]
   12048:	ldr	x26, [x0, #8]
   1204c:	sub	w0, w25, #0x2
   12050:	cmp	w0, #0x3d
   12054:	b.hi	12078 <grub_script_yyparse+0x168>  // b.pmore
   12058:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   1205c:	ldr	x1, [x1]
   12060:	ldrh	w0, [x1, w0, uxtw #1]
   12064:	adr	x1, 12070 <grub_script_yyparse+0x160>
   12068:	add	x0, x1, w0, sxth #2
   1206c:	br	x0
   12070:	ldr	x0, [sp, #112]
   12074:	str	wzr, [x0, #8]
   12078:	sbfiz	x1, x21, #1, #8
   1207c:	add	x1, x1, w21, sxtb
   12080:	sub	x1, x20, x1, lsl #3
   12084:	sub	x0, x19, w21, sxtb
   12088:	add	x20, x1, #0x18
   1208c:	str	x26, [sp, #160]
   12090:	str	x28, [sp, #168]
   12094:	ldp	x2, x3, [sp, #152]
   12098:	stp	x2, x3, [x1, #24]
   1209c:	str	x28, [x20, #16]
   120a0:	ldr	x1, [x22]
   120a4:	add	x2, x1, #0x470
   120a8:	ldrsb	w2, [x2, w25, sxtw]
   120ac:	sub	w2, w2, #0x23
   120b0:	ldrsb	w3, [x0]
   120b4:	add	x1, x1, #0x4b0
   120b8:	ldrsb	w1, [x1, w2, sxtw]
   120bc:	add	w1, w1, w3
   120c0:	cmp	w1, #0xdb
   120c4:	b.hi	120dc <grub_script_yyparse+0x1cc>  // b.pmore
   120c8:	ldr	x4, [x22]
   120cc:	add	x4, x4, #0x200
   120d0:	ldrsb	w4, [x4, w1, sxtw]
   120d4:	cmp	w4, w3
   120d8:	b.eq	12804 <grub_script_yyparse+0x8f4>  // b.none
   120dc:	ldr	x1, [x22]
   120e0:	add	x1, x1, #0x4d0
   120e4:	ldrsb	w21, [x1, w2, sxtw]
   120e8:	add	x19, x0, #0x1
   120ec:	strb	w21, [x0, #1]
   120f0:	sub	x0, x24, #0x1
   120f4:	add	x0, x23, x0
   120f8:	cmp	x19, x0
   120fc:	b.cc	121c8 <grub_script_yyparse+0x2b8>  // b.lo, b.ul, b.last
   12100:	sub	x28, x19, x23
   12104:	add	x20, x28, #0x1
   12108:	mov	x0, #0x270f                	// #9999
   1210c:	cmp	x24, x0
   12110:	b.gt	128dc <grub_script_yyparse+0x9cc>
   12114:	lsl	x24, x24, #1
   12118:	mov	x0, #0x2710                	// #10000
   1211c:	cmp	x24, x0
   12120:	csel	x24, x24, x0, le
   12124:	add	x0, x24, x24, lsl #1
   12128:	add	x0, x24, x0, lsl #3
   1212c:	add	x0, x0, #0x17
   12130:	bl	0 <grub_malloc>
   12134:	mov	x26, x0
   12138:	cbz	x0, 128dc <grub_script_yyparse+0x9cc>
   1213c:	str	x0, [sp, #120]
   12140:	mov	x2, x20
   12144:	mov	x1, x23
   12148:	bl	0 <memcpy>
   1214c:	add	x25, x24, #0x17
   12150:	mov	x0, #0xaaab                	// #43691
   12154:	movk	x0, #0xaaaa, lsl #16
   12158:	movk	x0, #0xaaaa, lsl #32
   1215c:	movk	x0, #0x2aaa, lsl #48
   12160:	smulh	x0, x25, x0
   12164:	asr	x0, x0, #2
   12168:	sub	x25, x0, x25, asr #63
   1216c:	add	x25, x25, x25, lsl #1
   12170:	add	x25, x26, x25, lsl #3
   12174:	add	x20, x20, x20, lsl #1
   12178:	lsl	x20, x20, #3
   1217c:	mov	x2, x20
   12180:	ldr	x1, [sp, #96]
   12184:	mov	x0, x25
   12188:	bl	0 <memcpy>
   1218c:	add	x0, sp, #0x1, lsl #12
   12190:	add	x0, x0, #0x370
   12194:	cmp	x23, x0
   12198:	b.eq	121a4 <grub_script_yyparse+0x294>  // b.none
   1219c:	mov	x0, x23
   121a0:	bl	0 <grub_free>
   121a4:	add	x19, x26, x28
   121a8:	sub	x20, x20, #0x18
   121ac:	add	x20, x25, x20
   121b0:	sub	x0, x24, #0x1
   121b4:	add	x0, x26, x0
   121b8:	cmp	x19, x0
   121bc:	b.cs	12944 <grub_script_yyparse+0xa34>  // b.hs, b.nlast
   121c0:	str	x25, [sp, #96]
   121c4:	mov	x23, x26
   121c8:	cmp	w21, #0x3
   121cc:	b.eq	12950 <grub_script_yyparse+0xa40>  // b.none
   121d0:	ldr	x0, [x22]
   121d4:	ldrsh	w25, [x0, w21, sxtw #1]
   121d8:	cmn	w25, #0x36
   121dc:	b.eq	12008 <grub_script_yyparse+0xf8>  // b.none
   121e0:	cmn	w27, #0x2
   121e4:	b.eq	11f70 <grub_script_yyparse+0x60>  // b.none
   121e8:	cmp	w27, #0x0
   121ec:	b.le	11f88 <grub_script_yyparse+0x78>
   121f0:	mov	w0, #0x2                   	// #2
   121f4:	cmp	w27, #0x121
   121f8:	b.hi	11f90 <grub_script_yyparse+0x80>  // b.pmore
   121fc:	ldr	x0, [x22]
   12200:	add	x0, x0, #0xd8
   12204:	ldrsb	w0, [x0, w27, sxtw]
   12208:	b	11f90 <grub_script_yyparse+0x80>
   1220c:	ldr	x0, [x20]
   12210:	ldr	x1, [sp, #112]
   12214:	str	x0, [x1, #32]
   12218:	str	wzr, [x1, #8]
   1221c:	b	12078 <grub_script_yyparse+0x168>
   12220:	str	xzr, [sp, #152]
   12224:	b	12078 <grub_script_yyparse+0x168>
   12228:	ldur	x2, [x20, #-48]
   1222c:	ldur	x1, [x20, #-72]
   12230:	ldr	x0, [sp, #112]
   12234:	bl	e858 <grub_script_append_cmd>
   12238:	str	x0, [sp, #152]
   1223c:	b	12078 <grub_script_yyparse+0x168>
   12240:	str	xzr, [sp, #152]
   12244:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12248:	ldr	x1, [x0]
   1224c:	ldr	x0, [sp, #112]
   12250:	bl	10eb0 <grub_script_yyerror>
   12254:	str	wzr, [sp, #108]
   12258:	b	12078 <grub_script_yyparse+0x168>
   1225c:	ldr	x2, [x20]
   12260:	mov	x1, #0x0                   	// #0
   12264:	ldr	x0, [sp, #112]
   12268:	bl	e574 <grub_script_add_arglist>
   1226c:	str	x0, [sp, #152]
   12270:	b	12078 <grub_script_yyparse+0x168>
   12274:	ldr	x2, [x20]
   12278:	mov	x1, #0x0                   	// #0
   1227c:	ldr	x0, [sp, #112]
   12280:	bl	e574 <grub_script_add_arglist>
   12284:	str	x0, [sp, #152]
   12288:	b	12078 <grub_script_yyparse+0x168>
   1228c:	ldr	x0, [x20]
   12290:	str	x0, [sp, #152]
   12294:	b	12078 <grub_script_yyparse+0x168>
   12298:	str	xzr, [sp, #152]
   1229c:	b	12078 <grub_script_yyparse+0x168>
   122a0:	ldr	x2, [x20]
   122a4:	mov	x1, #0x0                   	// #0
   122a8:	ldr	x0, [sp, #112]
   122ac:	bl	e574 <grub_script_add_arglist>
   122b0:	str	x0, [sp, #152]
   122b4:	b	12078 <grub_script_yyparse+0x168>
   122b8:	ldr	x2, [x20]
   122bc:	mov	x1, #0x0                   	// #0
   122c0:	ldr	x0, [sp, #112]
   122c4:	bl	e574 <grub_script_add_arglist>
   122c8:	str	x0, [sp, #152]
   122cc:	b	12078 <grub_script_yyparse+0x168>
   122d0:	ldr	x2, [x20]
   122d4:	mov	x1, #0x0                   	// #0
   122d8:	ldr	x0, [sp, #112]
   122dc:	bl	e574 <grub_script_add_arglist>
   122e0:	str	x0, [sp, #152]
   122e4:	b	12078 <grub_script_yyparse+0x168>
   122e8:	ldr	x2, [x20]
   122ec:	mov	x1, #0x0                   	// #0
   122f0:	ldr	x0, [sp, #112]
   122f4:	bl	e574 <grub_script_add_arglist>
   122f8:	str	x0, [sp, #152]
   122fc:	b	12078 <grub_script_yyparse+0x168>
   12300:	ldr	x2, [x20]
   12304:	mov	x1, #0x0                   	// #0
   12308:	ldr	x0, [sp, #112]
   1230c:	bl	e574 <grub_script_add_arglist>
   12310:	str	x0, [sp, #152]
   12314:	b	12078 <grub_script_yyparse+0x168>
   12318:	ldr	x2, [x20]
   1231c:	mov	x1, #0x0                   	// #0
   12320:	ldr	x0, [sp, #112]
   12324:	bl	e574 <grub_script_add_arglist>
   12328:	str	x0, [sp, #152]
   1232c:	b	12078 <grub_script_yyparse+0x168>
   12330:	ldr	x2, [x20]
   12334:	mov	x1, #0x0                   	// #0
   12338:	ldr	x0, [sp, #112]
   1233c:	bl	e574 <grub_script_add_arglist>
   12340:	str	x0, [sp, #152]
   12344:	b	12078 <grub_script_yyparse+0x168>
   12348:	ldr	x2, [x20]
   1234c:	mov	x1, #0x0                   	// #0
   12350:	ldr	x0, [sp, #112]
   12354:	bl	e574 <grub_script_add_arglist>
   12358:	str	x0, [sp, #152]
   1235c:	b	12078 <grub_script_yyparse+0x168>
   12360:	ldr	x2, [x20]
   12364:	mov	x1, #0x0                   	// #0
   12368:	ldr	x0, [sp, #112]
   1236c:	bl	e574 <grub_script_add_arglist>
   12370:	str	x0, [sp, #152]
   12374:	b	12078 <grub_script_yyparse+0x168>
   12378:	ldr	x2, [x20]
   1237c:	mov	x1, #0x0                   	// #0
   12380:	ldr	x0, [sp, #112]
   12384:	bl	e574 <grub_script_add_arglist>
   12388:	str	x0, [sp, #152]
   1238c:	b	12078 <grub_script_yyparse+0x168>
   12390:	ldr	x2, [x20]
   12394:	mov	x1, #0x0                   	// #0
   12398:	ldr	x0, [sp, #112]
   1239c:	bl	e574 <grub_script_add_arglist>
   123a0:	str	x0, [sp, #152]
   123a4:	b	12078 <grub_script_yyparse+0x168>
   123a8:	ldr	x2, [x20]
   123ac:	mov	x1, #0x0                   	// #0
   123b0:	ldr	x0, [sp, #112]
   123b4:	bl	e574 <grub_script_add_arglist>
   123b8:	str	x0, [sp, #152]
   123bc:	b	12078 <grub_script_yyparse+0x168>
   123c0:	ldr	x2, [x20]
   123c4:	mov	x1, #0x0                   	// #0
   123c8:	ldr	x0, [sp, #112]
   123cc:	bl	e574 <grub_script_add_arglist>
   123d0:	str	x0, [sp, #152]
   123d4:	b	12078 <grub_script_yyparse+0x168>
   123d8:	ldr	x2, [x20]
   123dc:	mov	x1, #0x0                   	// #0
   123e0:	ldr	x0, [sp, #112]
   123e4:	bl	e574 <grub_script_add_arglist>
   123e8:	str	x0, [sp, #152]
   123ec:	b	12078 <grub_script_yyparse+0x168>
   123f0:	ldr	x2, [x20]
   123f4:	mov	x1, #0x0                   	// #0
   123f8:	ldr	x0, [sp, #112]
   123fc:	bl	e574 <grub_script_add_arglist>
   12400:	str	x0, [sp, #152]
   12404:	b	12078 <grub_script_yyparse+0x168>
   12408:	ldr	x0, [x20]
   1240c:	str	x0, [sp, #152]
   12410:	b	12078 <grub_script_yyparse+0x168>
   12414:	ldr	x28, [sp, #112]
   12418:	ldr	x0, [x28, #40]
   1241c:	bl	10c30 <grub_script_lexer_ref>
   12420:	mov	x0, x28
   12424:	bl	10ee8 <grub_script_lexer_record_start>
   12428:	str	w0, [sp, #152]
   1242c:	mov	x0, x28
   12430:	bl	e448 <grub_script_mem_record>
   12434:	mov	x26, x0
   12438:	mov	x0, x28
   1243c:	ldr	x28, [x28, #24]
   12440:	str	xzr, [x0, #24]
   12444:	b	12078 <grub_script_yyparse+0x168>
   12448:	ldur	x0, [x20, #-56]
   1244c:	str	x0, [sp, #120]
   12450:	ldur	x1, [x20, #-64]
   12454:	ldr	x0, [sp, #112]
   12458:	bl	e458 <grub_script_mem_record_stop>
   1245c:	str	x0, [sp, #136]
   12460:	ldur	w1, [x20, #-72]
   12464:	ldr	x0, [sp, #112]
   12468:	bl	10c50 <grub_script_lexer_record_stop>
   1246c:	str	x0, [sp, #128]
   12470:	cbz	x0, 12480 <grub_script_yyparse+0x570>
   12474:	mov	w1, #0x7d                  	// #125
   12478:	bl	0 <grub_strrchr>
   1247c:	strb	wzr, [x0]
   12480:	ldr	x3, [sp, #128]
   12484:	mov	w2, #0x6                   	// #6
   12488:	mov	x1, #0x0                   	// #0
   1248c:	ldr	x0, [sp, #112]
   12490:	bl	e4cc <grub_script_arg_add>
   12494:	str	x0, [sp, #152]
   12498:	str	x0, [sp, #128]
   1249c:	cbz	x0, 12500 <grub_script_yyparse+0x5f0>
   124a0:	ldr	x1, [sp, #136]
   124a4:	ldur	x0, [x20, #-48]
   124a8:	bl	e910 <grub_script_create>
   124ac:	ldr	x1, [sp, #128]
   124b0:	str	x0, [x1, #16]
   124b4:	cbz	x0, 12500 <grub_script_yyparse+0x5f0>
   124b8:	ldr	x1, [sp, #112]
   124bc:	ldr	x1, [x1, #24]
   124c0:	str	x1, [x0, #32]
   124c4:	ldur	x0, [x20, #-56]
   124c8:	cbz	x0, 12518 <grub_script_yyparse+0x608>
   124cc:	ldr	x1, [sp, #112]
   124d0:	str	x0, [x1, #24]
   124d4:	ldr	x0, [sp, #120]
   124d8:	cbz	x0, 12508 <grub_script_yyparse+0x5f8>
   124dc:	ldr	x1, [sp, #120]
   124e0:	mov	x0, x1
   124e4:	ldr	x1, [x1, #24]
   124e8:	str	x1, [sp, #120]
   124ec:	cbnz	x1, 124dc <grub_script_yyparse+0x5cc>
   124f0:	ldr	x1, [sp, #128]
   124f4:	ldr	x1, [x1, #16]
   124f8:	str	x1, [x0, #24]
   124fc:	b	12508 <grub_script_yyparse+0x5f8>
   12500:	ldr	x0, [sp, #136]
   12504:	bl	e3c0 <grub_script_mem_free>
   12508:	ldr	x0, [sp, #112]
   1250c:	ldr	x0, [x0, #40]
   12510:	bl	10c40 <grub_script_lexer_deref>
   12514:	b	12078 <grub_script_yyparse+0x168>
   12518:	ldr	x0, [sp, #128]
   1251c:	ldr	x0, [x0, #16]
   12520:	b	124cc <grub_script_yyparse+0x5bc>
   12524:	str	xzr, [sp, #152]
   12528:	b	12078 <grub_script_yyparse+0x168>
   1252c:	ldr	x0, [x20]
   12530:	str	x0, [sp, #152]
   12534:	b	12078 <grub_script_yyparse+0x168>
   12538:	str	xzr, [sp, #152]
   1253c:	b	12078 <grub_script_yyparse+0x168>
   12540:	ldr	x0, [x20]
   12544:	str	x0, [sp, #152]
   12548:	b	12078 <grub_script_yyparse+0x168>
   1254c:	ldur	x0, [x20, #-24]
   12550:	cbz	x0, 12580 <grub_script_yyparse+0x670>
   12554:	ldr	x1, [x20]
   12558:	cbz	x1, 12580 <grub_script_yyparse+0x670>
   1255c:	str	x1, [x0]
   12560:	ldur	x1, [x20, #-24]
   12564:	ldr	x2, [x20]
   12568:	ldr	w0, [x1, #16]
   1256c:	ldr	w2, [x2, #16]
   12570:	add	w0, w0, w2
   12574:	str	w0, [x1, #16]
   12578:	ldr	x0, [x20]
   1257c:	str	wzr, [x0, #16]
   12580:	ldur	x0, [x20, #-24]
   12584:	str	x0, [sp, #152]
   12588:	b	12078 <grub_script_yyparse+0x168>
   1258c:	ldur	x1, [x20, #-24]
   12590:	ldr	x2, [x20]
   12594:	cbz	x2, 125a4 <grub_script_yyparse+0x694>
   12598:	ldr	x0, [sp, #112]
   1259c:	bl	e574 <grub_script_add_arglist>
   125a0:	mov	x1, x0
   125a4:	ldur	x0, [x20, #-48]
   125a8:	cmp	x0, #0x0
   125ac:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   125b0:	b.ne	125c8 <grub_script_yyparse+0x6b8>  // b.any
   125b4:	ldur	x1, [x20, #-48]
   125b8:	ldr	x0, [sp, #112]
   125bc:	bl	e630 <grub_script_create_cmdline>
   125c0:	str	x0, [sp, #152]
   125c4:	b	12078 <grub_script_yyparse+0x168>
   125c8:	str	x1, [x0]
   125cc:	ldur	x2, [x20, #-48]
   125d0:	ldr	w0, [x2, #16]
   125d4:	ldr	w3, [x1, #16]
   125d8:	add	w0, w0, w3
   125dc:	str	w0, [x2, #16]
   125e0:	str	wzr, [x1, #16]
   125e4:	b	125b4 <grub_script_yyparse+0x6a4>
   125e8:	ldr	x0, [x20]
   125ec:	str	x0, [sp, #152]
   125f0:	b	12078 <grub_script_yyparse+0x168>
   125f4:	ldr	x0, [x20]
   125f8:	str	x0, [sp, #152]
   125fc:	b	12078 <grub_script_yyparse+0x168>
   12600:	ldr	x0, [x20]
   12604:	str	x0, [sp, #152]
   12608:	b	12078 <grub_script_yyparse+0x168>
   1260c:	ldr	x0, [x20]
   12610:	str	x0, [sp, #152]
   12614:	b	12078 <grub_script_yyparse+0x168>
   12618:	ldr	x0, [x20]
   1261c:	str	x0, [sp, #152]
   12620:	b	12078 <grub_script_yyparse+0x168>
   12624:	ldr	x2, [x20]
   12628:	mov	x1, #0x0                   	// #0
   1262c:	ldr	x0, [sp, #112]
   12630:	bl	e858 <grub_script_append_cmd>
   12634:	str	x0, [sp, #152]
   12638:	b	12078 <grub_script_yyparse+0x168>
   1263c:	ldr	x2, [x20]
   12640:	ldur	x1, [x20, #-48]
   12644:	ldr	x0, [sp, #112]
   12648:	bl	e858 <grub_script_append_cmd>
   1264c:	str	x0, [sp, #152]
   12650:	b	12078 <grub_script_yyparse+0x168>
   12654:	ldr	x28, [sp, #112]
   12658:	ldr	x0, [x28, #40]
   1265c:	bl	10c30 <grub_script_lexer_ref>
   12660:	mov	x0, x28
   12664:	bl	e448 <grub_script_mem_record>
   12668:	mov	x1, x28
   1266c:	str	x0, [x28]
   12670:	ldr	x28, [x28, #24]
   12674:	str	xzr, [x1, #24]
   12678:	b	12078 <grub_script_yyparse+0x168>
   1267c:	ldr	x0, [sp, #112]
   12680:	ldr	x1, [x0]
   12684:	bl	e458 <grub_script_mem_record_stop>
   12688:	mov	x1, x0
   1268c:	ldr	x0, [sp, #112]
   12690:	str	x1, [x0]
   12694:	ldur	x0, [x20, #-48]
   12698:	bl	e910 <grub_script_create>
   1269c:	mov	x1, x0
   126a0:	cbz	x0, 126d0 <grub_script_yyparse+0x7c0>
   126a4:	ldr	x0, [sp, #112]
   126a8:	ldr	x0, [x0, #24]
   126ac:	str	x0, [x1, #32]
   126b0:	ldur	x0, [x20, #-144]
   126b4:	bl	10938 <grub_script_function_create>
   126b8:	ldur	x0, [x20, #-104]
   126bc:	ldr	x1, [sp, #112]
   126c0:	str	x0, [x1, #24]
   126c4:	ldr	x0, [x1, #40]
   126c8:	bl	10c40 <grub_script_lexer_deref>
   126cc:	b	12078 <grub_script_yyparse+0x168>
   126d0:	ldr	x0, [sp, #112]
   126d4:	ldr	x0, [x0]
   126d8:	bl	e3c0 <grub_script_mem_free>
   126dc:	b	126b8 <grub_script_yyparse+0x7a8>
   126e0:	ldr	x0, [sp, #112]
   126e4:	ldr	x0, [x0, #40]
   126e8:	bl	10c30 <grub_script_lexer_ref>
   126ec:	b	12078 <grub_script_yyparse+0x168>
   126f0:	ldur	x0, [x20, #-24]
   126f4:	str	x0, [sp, #152]
   126f8:	ldr	x0, [sp, #112]
   126fc:	ldr	x0, [x0, #40]
   12700:	bl	10c40 <grub_script_lexer_deref>
   12704:	b	12078 <grub_script_yyparse+0x168>
   12708:	mov	x3, #0x0                   	// #0
   1270c:	ldur	x2, [x20, #-24]
   12710:	ldur	x1, [x20, #-96]
   12714:	ldr	x0, [sp, #112]
   12718:	bl	e6b8 <grub_script_create_cmdif>
   1271c:	str	x0, [sp, #152]
   12720:	b	12078 <grub_script_yyparse+0x168>
   12724:	ldur	x3, [x20, #-24]
   12728:	ldur	x2, [x20, #-96]
   1272c:	ldur	x1, [x20, #-168]
   12730:	ldr	x0, [sp, #112]
   12734:	bl	e6b8 <grub_script_create_cmdif>
   12738:	str	x0, [sp, #152]
   1273c:	b	12078 <grub_script_yyparse+0x168>
   12740:	ldr	x3, [x20]
   12744:	ldur	x2, [x20, #-72]
   12748:	ldur	x1, [x20, #-144]
   1274c:	ldr	x0, [sp, #112]
   12750:	bl	e6b8 <grub_script_create_cmdif>
   12754:	str	x0, [sp, #152]
   12758:	b	12078 <grub_script_yyparse+0x168>
   1275c:	ldr	x0, [sp, #112]
   12760:	ldr	x0, [x0, #40]
   12764:	bl	10c30 <grub_script_lexer_ref>
   12768:	b	12078 <grub_script_yyparse+0x168>
   1276c:	ldur	x3, [x20, #-48]
   12770:	ldur	x2, [x20, #-120]
   12774:	ldur	x1, [x20, #-192]
   12778:	ldr	x0, [sp, #112]
   1277c:	bl	e758 <grub_script_create_cmdfor>
   12780:	str	x0, [sp, #152]
   12784:	ldr	x0, [sp, #112]
   12788:	ldr	x0, [x0, #40]
   1278c:	bl	10c40 <grub_script_lexer_deref>
   12790:	b	12078 <grub_script_yyparse+0x168>
   12794:	ldr	x0, [sp, #112]
   12798:	ldr	x0, [x0, #40]
   1279c:	bl	10c30 <grub_script_lexer_ref>
   127a0:	b	12078 <grub_script_yyparse+0x168>
   127a4:	mov	w3, #0x0                   	// #0
   127a8:	ldur	x2, [x20, #-48]
   127ac:	ldur	x1, [x20, #-120]
   127b0:	ldr	x0, [sp, #112]
   127b4:	bl	e7f8 <grub_script_create_cmdwhile>
   127b8:	str	x0, [sp, #152]
   127bc:	ldr	x0, [sp, #112]
   127c0:	ldr	x0, [x0, #40]
   127c4:	bl	10c40 <grub_script_lexer_deref>
   127c8:	b	12078 <grub_script_yyparse+0x168>
   127cc:	ldr	x0, [sp, #112]
   127d0:	ldr	x0, [x0, #40]
   127d4:	bl	10c30 <grub_script_lexer_ref>
   127d8:	b	12078 <grub_script_yyparse+0x168>
   127dc:	mov	w3, #0x1                   	// #1
   127e0:	ldur	x2, [x20, #-48]
   127e4:	ldur	x1, [x20, #-120]
   127e8:	ldr	x0, [sp, #112]
   127ec:	bl	e7f8 <grub_script_create_cmdwhile>
   127f0:	str	x0, [sp, #152]
   127f4:	ldr	x0, [sp, #112]
   127f8:	ldr	x0, [x0, #40]
   127fc:	bl	10c40 <grub_script_lexer_deref>
   12800:	b	12078 <grub_script_yyparse+0x168>
   12804:	ldr	x2, [x22]
   12808:	add	x2, x2, #0x2e0
   1280c:	ldrsb	w21, [x2, w1, sxtw]
   12810:	b	120e8 <grub_script_yyparse+0x1d8>
   12814:	ldr	w0, [sp, #108]
   12818:	cbz	w0, 1283c <grub_script_yyparse+0x92c>
   1281c:	ldr	w0, [sp, #108]
   12820:	cmp	w0, #0x3
   12824:	b.ne	12868 <grub_script_yyparse+0x958>  // b.any
   12828:	cmp	w27, #0x0
   1282c:	b.gt	12850 <grub_script_yyparse+0x940>
   12830:	cbnz	w27, 12868 <grub_script_yyparse+0x958>
   12834:	mov	w20, #0x1                   	// #1
   12838:	b	128f0 <grub_script_yyparse+0x9e0>
   1283c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12840:	ldr	x1, [x0]
   12844:	ldr	x0, [sp, #112]
   12848:	bl	10eb0 <grub_script_yyerror>
   1284c:	b	12868 <grub_script_yyparse+0x958>
   12850:	mov	w27, #0xfffffffe            	// #-2
   12854:	b	12868 <grub_script_yyparse+0x958>
   12858:	cmp	x19, x23
   1285c:	b.eq	12958 <grub_script_yyparse+0xa48>  // b.none
   12860:	sub	x20, x20, #0x18
   12864:	ldrsb	w21, [x19, #-1]!
   12868:	ldr	x0, [x22]
   1286c:	ldrsh	w0, [x0, w21, sxtw #1]
   12870:	cmn	w0, #0x36
   12874:	b.eq	12858 <grub_script_yyparse+0x948>  // b.none
   12878:	add	w0, w0, #0x1
   1287c:	cmp	w0, #0xdb
   12880:	b.hi	12858 <grub_script_yyparse+0x948>  // b.pmore
   12884:	ldr	x1, [x22]
   12888:	add	x1, x1, #0x200
   1288c:	ldrsb	w1, [x1, w0, sxtw]
   12890:	cmp	w1, #0x1
   12894:	b.ne	12858 <grub_script_yyparse+0x948>  // b.any
   12898:	ldr	x1, [x22]
   1289c:	add	x1, x1, #0x2e0
   128a0:	ldrsb	w21, [x1, w0, sxtw]
   128a4:	cmp	w21, #0x0
   128a8:	b.le	12858 <grub_script_yyparse+0x948>
   128ac:	add	x0, x20, #0x18
   128b0:	add	x1, sp, #0x1, lsl #12
   128b4:	add	x1, x1, #0x430
   128b8:	ldp	x2, x3, [x1, #8]
   128bc:	stp	x2, x3, [x20, #24]
   128c0:	ldr	x1, [sp, #5192]
   128c4:	str	x1, [x20, #40]
   128c8:	mov	x20, x0
   128cc:	mov	x0, x19
   128d0:	mov	w1, #0x3                   	// #3
   128d4:	str	w1, [sp, #108]
   128d8:	b	120e8 <grub_script_yyparse+0x1d8>
   128dc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   128e0:	ldr	x1, [x0]
   128e4:	ldr	x0, [sp, #112]
   128e8:	bl	10eb0 <grub_script_yyerror>
   128ec:	mov	w20, #0x2                   	// #2
   128f0:	cmp	x23, x19
   128f4:	b.eq	12960 <grub_script_yyparse+0xa50>  // b.none
   128f8:	sub	x19, x19, #0x1
   128fc:	cmp	x23, x19
   12900:	b.ne	128f8 <grub_script_yyparse+0x9e8>  // b.any
   12904:	add	x0, sp, #0x1, lsl #12
   12908:	add	x0, x0, #0x370
   1290c:	cmp	x23, x0
   12910:	b.eq	1291c <grub_script_yyparse+0xa0c>  // b.none
   12914:	mov	x0, x23
   12918:	bl	0 <grub_free>
   1291c:	mov	w0, w20
   12920:	ldp	x19, x20, [sp, #16]
   12924:	ldp	x21, x22, [sp, #32]
   12928:	ldp	x23, x24, [sp, #48]
   1292c:	ldp	x25, x26, [sp, #64]
   12930:	ldp	x27, x28, [sp, #80]
   12934:	ldp	x29, x30, [sp]
   12938:	mov	x12, #0x1450                	// #5200
   1293c:	add	sp, sp, x12
   12940:	ret
   12944:	ldr	x23, [sp, #120]
   12948:	mov	w20, #0x1                   	// #1
   1294c:	b	128f0 <grub_script_yyparse+0x9e0>
   12950:	mov	w20, #0x0                   	// #0
   12954:	b	128f0 <grub_script_yyparse+0x9e0>
   12958:	mov	w20, #0x1                   	// #1
   1295c:	b	12904 <grub_script_yyparse+0x9f4>
   12960:	mov	x23, x19
   12964:	b	12904 <grub_script_yyparse+0x9f4>
	...
   12990:	mov	x8, x0
   12994:	ldr	w0, [x0, #76]
   12998:	ldr	x7, [x8, #8320]
   1299c:	ldr	x9, [x8, #64]
   129a0:	cmp	x7, x9
   129a4:	b.cs	12a6c <grub_script_yyparse+0xb5c>  // b.hs, b.nlast
   129a8:	mov	w10, #0x1                   	// #1
   129ac:	adrp	x3, 0 <grub_normal_free_menu-0x26c>
   129b0:	b	12a18 <grub_script_yyparse+0xb08>
   129b4:	mov	w6, w4
   129b8:	ldr	x1, [x3]
   129bc:	add	x2, x1, #0x278
   129c0:	ldrsh	w2, [x2, w0, sxtw #1]
   129c4:	add	w2, w2, w4
   129c8:	add	x1, x1, #0x428
   129cc:	ldrsh	w1, [x1, w2, sxtw #1]
   129d0:	cmp	w1, w5
   129d4:	b.eq	12a00 <grub_script_yyparse+0xaf0>  // b.none
   129d8:	ldr	x1, [x3]
   129dc:	add	x1, x1, #0xa98
   129e0:	ldrsh	w0, [x1, w0, sxtw #1]
   129e4:	mov	w5, w0
   129e8:	cmp	w0, #0xbb
   129ec:	b.le	129b4 <grub_script_yyparse+0xaa4>
   129f0:	ldr	x1, [x3]
   129f4:	add	x1, x1, #0xc48
   129f8:	ldrb	w4, [x1, w6, sxtw]
   129fc:	b	129b4 <grub_script_yyparse+0xaa4>
   12a00:	ldr	x1, [x3]
   12a04:	add	x1, x1, #0xc70
   12a08:	ldrsh	w0, [x1, w2, sxtw #1]
   12a0c:	add	x7, x7, #0x1
   12a10:	cmp	x7, x9
   12a14:	b.eq	12a6c <grub_script_yyparse+0xb5c>  // b.none
   12a18:	ldrb	w1, [x7]
   12a1c:	mov	w4, w10
   12a20:	cbz	w1, 12a2c <grub_script_yyparse+0xb1c>
   12a24:	ldr	x2, [x3]
   12a28:	ldrb	w4, [x2, w1, sxtw]
   12a2c:	ldr	x1, [x3]
   12a30:	add	x1, x1, #0x100
   12a34:	ldrsh	w1, [x1, w0, sxtw #1]
   12a38:	cbz	w1, 12a44 <grub_script_yyparse+0xb34>
   12a3c:	str	w0, [x8, #104]
   12a40:	str	x7, [x8, #112]
   12a44:	mov	w6, w4
   12a48:	ldr	x1, [x3]
   12a4c:	add	x2, x1, #0x278
   12a50:	ldrsh	w2, [x2, w0, sxtw #1]
   12a54:	add	w2, w2, w4
   12a58:	add	x1, x1, #0x428
   12a5c:	ldrsh	w1, [x1, w2, sxtw #1]
   12a60:	cmp	w1, w0
   12a64:	b.ne	129d8 <grub_script_yyparse+0xac8>  // b.any
   12a68:	b	12a00 <grub_script_yyparse+0xaf0>
   12a6c:	ret
	...
   12a78:	ldr	x3, [x0, #24]
   12a7c:	ldr	x2, [x0, #40]
   12a80:	ldr	x1, [x2, x3, lsl #3]
   12a84:	ldr	w1, [x1, #28]
   12a88:	str	w1, [x0, #52]
   12a8c:	ldr	x1, [x2, x3, lsl #3]
   12a90:	ldr	x1, [x1, #16]
   12a94:	str	x1, [x0, #64]
   12a98:	str	x1, [x0, #8320]
   12a9c:	ldr	x2, [x2, x3, lsl #3]
   12aa0:	ldr	x2, [x2]
   12aa4:	str	x2, [x0, #8]
   12aa8:	ldrb	w1, [x1]
   12aac:	strb	w1, [x0, #48]
   12ab0:	ret
   12ab4:	stp	x29, x30, [sp, #-48]!
   12ab8:	mov	x29, sp
   12abc:	stp	x19, x20, [sp, #16]
   12ac0:	mov	x19, x0
   12ac4:	ldr	w0, [x0, #84]
   12ac8:	sub	w0, w0, #0x1
   12acc:	str	w0, [x19, #84]
   12ad0:	tbnz	w0, #31, 12af8 <grub_script_yyparse+0xbe8>
   12ad4:	ldrsw	x1, [x19, #84]
   12ad8:	ldr	x0, [x19, #96]
   12adc:	ldr	w0, [x0, x1, lsl #2]
   12ae0:	lsl	w0, w0, #1
   12ae4:	add	w0, w0, #0x1
   12ae8:	str	w0, [x19, #76]
   12aec:	ldp	x19, x20, [sp, #16]
   12af0:	ldp	x29, x30, [sp], #48
   12af4:	ret
   12af8:	str	x21, [sp, #32]
   12afc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12b00:	ldr	x21, [x0]
   12b04:	ldr	x1, [x21]
   12b08:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12b0c:	ldr	x0, [x0]
   12b10:	blr	x1
   12b14:	mov	x20, x0
   12b18:	ldr	x1, [x21]
   12b1c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12b20:	ldr	x0, [x0]
   12b24:	blr	x1
   12b28:	mov	x1, x0
   12b2c:	mov	x0, x20
   12b30:	bl	0 <grub_printf>
   12b34:	ldr	x21, [sp, #32]
   12b38:	b	12ad4 <grub_script_yyparse+0xbc4>
   12b3c:	nop
	...
   12b58:	stp	x29, x30, [sp, #-48]!
   12b5c:	mov	x29, sp
   12b60:	stp	x19, x20, [sp, #16]
   12b64:	mov	x19, x0
   12b68:	ldr	x0, [x0, #40]
   12b6c:	cbz	x0, 12b90 <grub_script_yyparse+0xc80>
   12b70:	ldr	x1, [x19, #32]
   12b74:	sub	x2, x1, #0x1
   12b78:	ldr	x3, [x19, #24]
   12b7c:	cmp	x3, x2
   12b80:	b.cs	12c04 <grub_script_yyparse+0xcf4>  // b.hs, b.nlast
   12b84:	ldp	x19, x20, [sp, #16]
   12b88:	ldp	x29, x30, [sp], #48
   12b8c:	ret
   12b90:	mov	x0, #0x8                   	// #8
   12b94:	bl	0 <grub_malloc>
   12b98:	str	x0, [x19, #40]
   12b9c:	cbz	x0, 12bc0 <grub_script_yyparse+0xcb0>
   12ba0:	mov	x2, #0x8                   	// #8
   12ba4:	mov	w1, #0x0                   	// #0
   12ba8:	ldr	x0, [x19, #40]
   12bac:	bl	0 <grub_memset>
   12bb0:	mov	x0, #0x1                   	// #1
   12bb4:	str	x0, [x19, #32]
   12bb8:	str	xzr, [x19, #24]
   12bbc:	b	12b84 <grub_script_yyparse+0xc74>
   12bc0:	stp	x21, x22, [sp, #32]
   12bc4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12bc8:	ldr	x21, [x0]
   12bcc:	ldr	x1, [x21]
   12bd0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12bd4:	ldr	x0, [x0]
   12bd8:	blr	x1
   12bdc:	mov	x20, x0
   12be0:	ldr	x1, [x21]
   12be4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12be8:	ldr	x0, [x0]
   12bec:	blr	x1
   12bf0:	mov	x1, x0
   12bf4:	mov	x0, x20
   12bf8:	bl	0 <grub_printf>
   12bfc:	ldp	x21, x22, [sp, #32]
   12c00:	b	12ba0 <grub_script_yyparse+0xc90>
   12c04:	add	x20, x1, #0x8
   12c08:	lsl	x1, x20, #3
   12c0c:	bl	0 <grub_realloc>
   12c10:	str	x0, [x19, #40]
   12c14:	cbz	x0, 12c38 <grub_script_yyparse+0xd28>
   12c18:	ldr	x3, [x19, #32]
   12c1c:	ldr	x0, [x19, #40]
   12c20:	mov	x2, #0x40                  	// #64
   12c24:	mov	w1, #0x0                   	// #0
   12c28:	add	x0, x0, x3, lsl #3
   12c2c:	bl	0 <grub_memset>
   12c30:	str	x20, [x19, #32]
   12c34:	b	12b84 <grub_script_yyparse+0xc74>
   12c38:	stp	x21, x22, [sp, #32]
   12c3c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12c40:	ldr	x22, [x0]
   12c44:	ldr	x1, [x22]
   12c48:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12c4c:	ldr	x0, [x0]
   12c50:	blr	x1
   12c54:	mov	x21, x0
   12c58:	ldr	x1, [x22]
   12c5c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12c60:	ldr	x0, [x0]
   12c64:	blr	x1
   12c68:	mov	x1, x0
   12c6c:	mov	x0, x21
   12c70:	bl	0 <grub_printf>
   12c74:	ldp	x21, x22, [sp, #32]
   12c78:	b	12c18 <grub_script_yyparse+0xd08>
   12c7c:	nop
	...
   12c98:	stp	x29, x30, [sp, #-48]!
   12c9c:	mov	x29, sp
   12ca0:	stp	x19, x20, [sp, #16]
   12ca4:	mov	w20, w0
   12ca8:	mov	x19, x1
   12cac:	ldr	w0, [x1, #88]
   12cb0:	ldr	w1, [x1, #84]
   12cb4:	cmp	w1, w0
   12cb8:	b.lt	12ce0 <grub_script_yyparse+0xdd0>  // b.tstop
   12cbc:	add	w0, w0, #0x19
   12cc0:	str	w0, [x19, #88]
   12cc4:	sbfiz	x1, x0, #2, #32
   12cc8:	ldr	x0, [x19, #96]
   12ccc:	cbz	x0, 12d1c <grub_script_yyparse+0xe0c>
   12cd0:	bl	0 <grub_realloc>
   12cd4:	str	x0, [x19, #96]
   12cd8:	ldr	x0, [x19, #96]
   12cdc:	cbz	x0, 12d2c <grub_script_yyparse+0xe1c>
   12ce0:	ldr	w1, [x19, #76]
   12ce4:	sub	w1, w1, #0x1
   12ce8:	ldr	x2, [x19, #96]
   12cec:	ldr	w0, [x19, #84]
   12cf0:	add	w3, w0, #0x1
   12cf4:	str	w3, [x19, #84]
   12cf8:	add	w1, w1, w1, lsr #31
   12cfc:	asr	w1, w1, #1
   12d00:	str	w1, [x2, w0, sxtw #2]
   12d04:	lsl	w20, w20, #1
   12d08:	add	w20, w20, #0x1
   12d0c:	str	w20, [x19, #76]
   12d10:	ldp	x19, x20, [sp, #16]
   12d14:	ldp	x29, x30, [sp], #48
   12d18:	ret
   12d1c:	mov	x0, x1
   12d20:	bl	0 <grub_malloc>
   12d24:	str	x0, [x19, #96]
   12d28:	b	12cd8 <grub_script_yyparse+0xdc8>
   12d2c:	stp	x21, x22, [sp, #32]
   12d30:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12d34:	ldr	x22, [x0]
   12d38:	ldr	x1, [x22]
   12d3c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12d40:	ldr	x0, [x0]
   12d44:	blr	x1
   12d48:	mov	x21, x0
   12d4c:	ldr	x1, [x22]
   12d50:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12d54:	ldr	x0, [x0]
   12d58:	blr	x1
   12d5c:	mov	x1, x0
   12d60:	mov	x0, x21
   12d64:	bl	0 <grub_printf>
   12d68:	ldp	x21, x22, [sp, #32]
   12d6c:	b	12ce0 <grub_script_yyparse+0xdd0>
	...
   12d88:	stp	x29, x30, [sp, #-48]!
   12d8c:	mov	x29, sp
   12d90:	stp	x19, x20, [sp, #16]
   12d94:	stp	x21, x22, [sp, #32]
   12d98:	mov	x20, x0
   12d9c:	mov	x21, x1
   12da0:	mov	w19, w2
   12da4:	cbz	w2, 12e2c <grub_script_yyparse+0xf1c>
   12da8:	ldr	x2, [x20, #40]
   12dac:	ldr	w0, [x2, #68]
   12db0:	ldr	w1, [x2, #64]
   12db4:	add	w1, w19, w1
   12db8:	cmp	w1, w0
   12dbc:	b.cc	12df0 <grub_script_yyparse+0xee0>  // b.lo, b.ul, b.last
   12dc0:	lsl	w1, w19, #1
   12dc4:	lsl	w0, w0, #1
   12dc8:	cmp	w1, w0
   12dcc:	csel	w22, w1, w0, cs  // cs = hs, nlast
   12dd0:	mov	w1, w22
   12dd4:	ldr	x0, [x2, #56]
   12dd8:	bl	0 <grub_realloc>
   12ddc:	cbz	x0, 12e3c <grub_script_yyparse+0xf2c>
   12de0:	ldr	x1, [x20, #40]
   12de4:	str	x0, [x1, #56]
   12de8:	ldr	x0, [x20, #40]
   12dec:	str	w22, [x0, #68]
   12df0:	ldr	x1, [x20, #40]
   12df4:	ldr	w0, [x1, #64]
   12df8:	sub	x0, x0, #0x1
   12dfc:	ldr	x2, [x1, #56]
   12e00:	mov	x1, x21
   12e04:	add	x0, x2, x0
   12e08:	bl	0 <grub_strcpy>
   12e0c:	ldr	x0, [x20, #40]
   12e10:	ldr	w2, [x0, #64]
   12e14:	add	w19, w2, w19
   12e18:	str	w19, [x0, #64]
   12e1c:	ldp	x19, x20, [sp, #16]
   12e20:	ldp	x21, x22, [sp, #32]
   12e24:	ldp	x29, x30, [sp], #48
   12e28:	ret
   12e2c:	mov	x0, x1
   12e30:	bl	0 <grub_strlen>
   12e34:	mov	w19, w0
   12e38:	b	12da8 <grub_script_yyparse+0xe98>
   12e3c:	mov	x1, #0x0                   	// #0
   12e40:	mov	x0, x20
   12e44:	bl	10eb0 <grub_script_yyerror>
   12e48:	b	12e1c <grub_script_yyparse+0xf0c>
   12e4c:	stp	x29, x30, [sp, #-48]!
   12e50:	mov	x29, sp
   12e54:	stp	x19, x20, [sp, #16]
   12e58:	str	x21, [sp, #32]
   12e5c:	mov	x20, x0
   12e60:	mov	x19, x1
   12e64:	ldr	x0, [x1]
   12e68:	ldr	x21, [x0, #40]
   12e6c:	ldr	x0, [x21, #80]
   12e70:	bl	0 <grub_free>
   12e74:	mov	x0, x20
   12e78:	bl	0 <grub_strdup>
   12e7c:	str	x0, [x21, #80]
   12e80:	cbz	x0, 12e98 <grub_script_yyparse+0xf88>
   12e84:	mov	w0, #0x0                   	// #0
   12e88:	ldp	x19, x20, [sp, #16]
   12e8c:	ldr	x21, [sp, #32]
   12e90:	ldp	x29, x30, [sp], #48
   12e94:	ret
   12e98:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   12e9c:	ldr	x1, [x0]
   12ea0:	ldr	x0, [x19]
   12ea4:	bl	10eb0 <grub_script_yyerror>
   12ea8:	mov	w0, #0x1                   	// #1
   12eac:	b	12e88 <grub_script_yyparse+0xf78>
	...

0000000000012eb8 <yy_switch_to_buffer>:
   12eb8:	stp	x29, x30, [sp, #-32]!
   12ebc:	mov	x29, sp
   12ec0:	stp	x19, x20, [sp, #16]
   12ec4:	mov	x20, x0
   12ec8:	mov	x19, x1
   12ecc:	mov	x0, x1
   12ed0:	bl	12b58 <grub_script_yyparse+0xc48>
   12ed4:	ldr	x1, [x19, #40]
   12ed8:	cbz	x1, 12f4c <yy_switch_to_buffer+0x94>
   12edc:	ldr	x0, [x19, #24]
   12ee0:	ldr	x0, [x1, x0, lsl #3]
   12ee4:	cmp	x0, x20
   12ee8:	b.eq	12f40 <yy_switch_to_buffer+0x88>  // b.none
   12eec:	cbz	x0, 12f24 <yy_switch_to_buffer+0x6c>
   12ef0:	ldr	x0, [x19, #64]
   12ef4:	ldrb	w1, [x19, #48]
   12ef8:	strb	w1, [x0]
   12efc:	ldr	x1, [x19, #24]
   12f00:	ldr	x0, [x19, #40]
   12f04:	ldr	x0, [x0, x1, lsl #3]
   12f08:	ldr	x1, [x19, #64]
   12f0c:	str	x1, [x0, #16]
   12f10:	ldr	x1, [x19, #24]
   12f14:	ldr	x0, [x19, #40]
   12f18:	ldr	x0, [x0, x1, lsl #3]
   12f1c:	ldr	w1, [x19, #52]
   12f20:	str	w1, [x0, #28]
   12f24:	ldr	x1, [x19, #24]
   12f28:	ldr	x0, [x19, #40]
   12f2c:	str	x20, [x0, x1, lsl #3]
   12f30:	mov	x0, x19
   12f34:	bl	12a78 <grub_script_yyparse+0xb68>
   12f38:	mov	w0, #0x1                   	// #1
   12f3c:	str	w0, [x19, #80]
   12f40:	ldp	x19, x20, [sp, #16]
   12f44:	ldp	x29, x30, [sp], #32
   12f48:	ret
   12f4c:	cbnz	x20, 12f24 <yy_switch_to_buffer+0x6c>
   12f50:	b	12f40 <yy_switch_to_buffer+0x88>

0000000000012f54 <yy_delete_buffer>:
   12f54:	cbz	x0, 12fb0 <yy_delete_buffer+0x5c>
   12f58:	stp	x29, x30, [sp, #-32]!
   12f5c:	mov	x29, sp
   12f60:	str	x19, [sp, #16]
   12f64:	mov	x19, x0
   12f68:	ldr	x0, [x1, #40]
   12f6c:	cbz	x0, 12f80 <yy_delete_buffer+0x2c>
   12f70:	ldr	x1, [x1, #24]
   12f74:	ldr	x2, [x0, x1, lsl #3]
   12f78:	cmp	x19, x2
   12f7c:	b.eq	12f9c <yy_delete_buffer+0x48>  // b.none
   12f80:	ldr	w0, [x19, #32]
   12f84:	cbnz	w0, 12fa4 <yy_delete_buffer+0x50>
   12f88:	mov	x0, x19
   12f8c:	bl	0 <grub_free>
   12f90:	ldr	x19, [sp, #16]
   12f94:	ldp	x29, x30, [sp], #32
   12f98:	ret
   12f9c:	str	xzr, [x0, x1, lsl #3]
   12fa0:	b	12f80 <yy_delete_buffer+0x2c>
   12fa4:	ldr	x0, [x19, #8]
   12fa8:	bl	0 <grub_free>
   12fac:	b	12f88 <yy_delete_buffer+0x34>
   12fb0:	ret

0000000000012fb4 <yy_flush_buffer>:
   12fb4:	cbz	x0, 12ff8 <yy_flush_buffer+0x44>
   12fb8:	str	wzr, [x0, #28]
   12fbc:	ldr	x2, [x0, #8]
   12fc0:	strb	wzr, [x2]
   12fc4:	ldr	x2, [x0, #8]
   12fc8:	strb	wzr, [x2, #1]
   12fcc:	ldr	x2, [x0, #8]
   12fd0:	str	x2, [x0, #16]
   12fd4:	mov	w2, #0x1                   	// #1
   12fd8:	str	w2, [x0, #40]
   12fdc:	str	wzr, [x0, #56]
   12fe0:	ldr	x2, [x1, #40]
   12fe4:	cbz	x2, 12ff8 <yy_flush_buffer+0x44>
   12fe8:	ldr	x3, [x1, #24]
   12fec:	ldr	x2, [x2, x3, lsl #3]
   12ff0:	cmp	x0, x2
   12ff4:	b.eq	12ffc <yy_flush_buffer+0x48>  // b.none
   12ff8:	ret
   12ffc:	stp	x29, x30, [sp, #-16]!
   13000:	mov	x29, sp
   13004:	mov	x0, x1
   13008:	bl	12a78 <grub_script_yyparse+0xb68>
   1300c:	ldp	x29, x30, [sp], #16
   13010:	ret
   13014:	stp	x29, x30, [sp, #-48]!
   13018:	mov	x29, sp
   1301c:	stp	x19, x20, [sp, #16]
   13020:	stp	x21, x22, [sp, #32]
   13024:	mov	x19, x0
   13028:	mov	x21, x1
   1302c:	mov	x20, x2
   13030:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   13034:	ldr	x1, [x1]
   13038:	ldr	w22, [x1]
   1303c:	mov	x1, x2
   13040:	bl	12fb4 <yy_flush_buffer>
   13044:	str	x21, [x19]
   13048:	mov	w0, #0x1                   	// #1
   1304c:	str	w0, [x19, #52]
   13050:	ldr	x0, [x20, #40]
   13054:	cbz	x0, 13068 <yy_flush_buffer+0xb4>
   13058:	ldr	x1, [x20, #24]
   1305c:	ldr	x0, [x0, x1, lsl #3]
   13060:	cmp	x19, x0
   13064:	b.eq	13074 <yy_flush_buffer+0xc0>  // b.none
   13068:	mov	w0, #0x1                   	// #1
   1306c:	str	w0, [x19, #44]
   13070:	str	wzr, [x19, #48]
   13074:	str	wzr, [x19, #36]
   13078:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1307c:	ldr	x0, [x0]
   13080:	str	w22, [x0]
   13084:	ldp	x19, x20, [sp, #16]
   13088:	ldp	x21, x22, [sp, #32]
   1308c:	ldp	x29, x30, [sp], #48
   13090:	ret
   13094:	nop
	...

00000000000130a0 <yy_create_buffer>:
   130a0:	stp	x29, x30, [sp, #-64]!
   130a4:	mov	x29, sp
   130a8:	stp	x19, x20, [sp, #16]
   130ac:	stp	x21, x22, [sp, #32]
   130b0:	mov	x21, x0
   130b4:	mov	w20, w1
   130b8:	mov	x22, x2
   130bc:	mov	x0, #0x40                  	// #64
   130c0:	bl	0 <grub_malloc>
   130c4:	mov	x19, x0
   130c8:	cbz	x0, 13110 <yy_create_buffer+0x70>
   130cc:	str	w20, [x19, #24]
   130d0:	add	w20, w20, #0x2
   130d4:	sxtw	x0, w20
   130d8:	bl	0 <grub_malloc>
   130dc:	str	x0, [x19, #8]
   130e0:	cbz	x0, 13154 <yy_create_buffer+0xb4>
   130e4:	mov	w1, #0x1                   	// #1
   130e8:	str	w1, [x19, #32]
   130ec:	mov	x2, x22
   130f0:	mov	x1, x21
   130f4:	mov	x0, x19
   130f8:	bl	13014 <yy_flush_buffer+0x60>
   130fc:	mov	x0, x19
   13100:	ldp	x19, x20, [sp, #16]
   13104:	ldp	x21, x22, [sp, #32]
   13108:	ldp	x29, x30, [sp], #64
   1310c:	ret
   13110:	stp	x23, x24, [sp, #48]
   13114:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13118:	ldr	x24, [x0]
   1311c:	ldr	x1, [x24]
   13120:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13124:	ldr	x0, [x0]
   13128:	blr	x1
   1312c:	mov	x23, x0
   13130:	ldr	x1, [x24]
   13134:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13138:	ldr	x0, [x0]
   1313c:	blr	x1
   13140:	mov	x1, x0
   13144:	mov	x0, x23
   13148:	bl	0 <grub_printf>
   1314c:	ldp	x23, x24, [sp, #48]
   13150:	b	130cc <yy_create_buffer+0x2c>
   13154:	stp	x23, x24, [sp, #48]
   13158:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1315c:	ldr	x23, [x0]
   13160:	ldr	x1, [x23]
   13164:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13168:	ldr	x0, [x0]
   1316c:	blr	x1
   13170:	mov	x20, x0
   13174:	ldr	x1, [x23]
   13178:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1317c:	ldr	x0, [x0]
   13180:	blr	x1
   13184:	mov	x1, x0
   13188:	mov	x0, x20
   1318c:	bl	0 <grub_printf>
   13190:	ldp	x23, x24, [sp, #48]
   13194:	b	130e4 <yy_create_buffer+0x44>
	...

00000000000131b0 <yyrestart>:
   131b0:	stp	x29, x30, [sp, #-48]!
   131b4:	mov	x29, sp
   131b8:	stp	x19, x20, [sp, #16]
   131bc:	mov	x20, x0
   131c0:	mov	x19, x1
   131c4:	ldr	x0, [x1, #40]
   131c8:	cbz	x0, 13200 <yyrestart+0x50>
   131cc:	ldr	x1, [x1, #24]
   131d0:	ldr	x1, [x0, x1, lsl #3]
   131d4:	cbz	x1, 13200 <yyrestart+0x50>
   131d8:	ldr	x1, [x19, #24]
   131dc:	ldr	x0, [x0, x1, lsl #3]
   131e0:	mov	x2, x19
   131e4:	mov	x1, x20
   131e8:	bl	13014 <yy_flush_buffer+0x60>
   131ec:	mov	x0, x19
   131f0:	bl	12a78 <grub_script_yyparse+0xb68>
   131f4:	ldp	x19, x20, [sp, #16]
   131f8:	ldp	x29, x30, [sp], #48
   131fc:	ret
   13200:	stp	x21, x22, [sp, #32]
   13204:	mov	x0, x19
   13208:	bl	12b58 <grub_script_yyparse+0xc48>
   1320c:	ldr	x22, [x19, #24]
   13210:	ldr	x21, [x19, #40]
   13214:	mov	x2, x19
   13218:	mov	w1, #0x4000                	// #16384
   1321c:	ldr	x0, [x19, #8]
   13220:	bl	130a0 <yy_create_buffer>
   13224:	str	x0, [x21, x22, lsl #3]
   13228:	ldr	x0, [x19, #40]
   1322c:	cbnz	x0, 13238 <yyrestart+0x88>
   13230:	ldp	x21, x22, [sp, #32]
   13234:	b	131e0 <yyrestart+0x30>
   13238:	ldp	x21, x22, [sp, #32]
   1323c:	b	131d8 <yyrestart+0x28>

0000000000013240 <yypush_buffer_state>:
   13240:	cbz	x0, 132e8 <yypush_buffer_state+0xa8>
   13244:	stp	x29, x30, [sp, #-32]!
   13248:	mov	x29, sp
   1324c:	stp	x19, x20, [sp, #16]
   13250:	mov	x20, x0
   13254:	mov	x19, x1
   13258:	mov	x0, x1
   1325c:	bl	12b58 <grub_script_yyparse+0xc48>
   13260:	ldr	x1, [x19, #40]
   13264:	cbz	x1, 132c4 <yypush_buffer_state+0x84>
   13268:	ldr	x0, [x19, #24]
   1326c:	ldr	x0, [x1, x0, lsl #3]
   13270:	cbz	x0, 132c4 <yypush_buffer_state+0x84>
   13274:	ldr	x0, [x19, #64]
   13278:	ldrb	w1, [x19, #48]
   1327c:	strb	w1, [x0]
   13280:	ldr	x1, [x19, #24]
   13284:	ldr	x0, [x19, #40]
   13288:	ldr	x0, [x0, x1, lsl #3]
   1328c:	ldr	x1, [x19, #64]
   13290:	str	x1, [x0, #16]
   13294:	ldr	x1, [x19, #24]
   13298:	ldr	x0, [x19, #40]
   1329c:	ldr	x0, [x0, x1, lsl #3]
   132a0:	ldr	w1, [x19, #52]
   132a4:	str	w1, [x0, #28]
   132a8:	ldr	x1, [x19, #40]
   132ac:	cbz	x1, 132c4 <yypush_buffer_state+0x84>
   132b0:	ldr	x0, [x19, #24]
   132b4:	ldr	x2, [x1, x0, lsl #3]
   132b8:	cbz	x2, 132c4 <yypush_buffer_state+0x84>
   132bc:	add	x0, x0, #0x1
   132c0:	str	x0, [x19, #24]
   132c4:	ldr	x0, [x19, #24]
   132c8:	str	x20, [x1, x0, lsl #3]
   132cc:	mov	x0, x19
   132d0:	bl	12a78 <grub_script_yyparse+0xb68>
   132d4:	mov	w0, #0x1                   	// #1
   132d8:	str	w0, [x19, #80]
   132dc:	ldp	x19, x20, [sp, #16]
   132e0:	ldp	x29, x30, [sp], #32
   132e4:	ret
   132e8:	ret

00000000000132ec <yypop_buffer_state>:
   132ec:	stp	x29, x30, [sp, #-32]!
   132f0:	mov	x29, sp
   132f4:	str	x19, [sp, #16]
   132f8:	mov	x19, x0
   132fc:	ldr	x0, [x0, #40]
   13300:	cbz	x0, 13358 <yypop_buffer_state+0x6c>
   13304:	ldr	x1, [x19, #24]
   13308:	ldr	x0, [x0, x1, lsl #3]
   1330c:	cbz	x0, 13358 <yypop_buffer_state+0x6c>
   13310:	mov	x1, x19
   13314:	bl	12f54 <yy_delete_buffer>
   13318:	ldr	x1, [x19, #24]
   1331c:	ldr	x0, [x19, #40]
   13320:	str	xzr, [x0, x1, lsl #3]
   13324:	ldr	x0, [x19, #24]
   13328:	cbz	x0, 13334 <yypop_buffer_state+0x48>
   1332c:	sub	x0, x0, #0x1
   13330:	str	x0, [x19, #24]
   13334:	ldr	x0, [x19, #40]
   13338:	cbz	x0, 13358 <yypop_buffer_state+0x6c>
   1333c:	ldr	x1, [x19, #24]
   13340:	ldr	x0, [x0, x1, lsl #3]
   13344:	cbz	x0, 13358 <yypop_buffer_state+0x6c>
   13348:	mov	x0, x19
   1334c:	bl	12a78 <grub_script_yyparse+0xb68>
   13350:	mov	w0, #0x1                   	// #1
   13354:	str	w0, [x19, #80]
   13358:	ldr	x19, [sp, #16]
   1335c:	ldp	x29, x30, [sp], #32
   13360:	ret

0000000000013364 <yy_scan_buffer>:
   13364:	stp	x29, x30, [sp, #-64]!
   13368:	mov	x29, sp
   1336c:	stp	x19, x20, [sp, #16]
   13370:	cmp	x1, #0x1
   13374:	b.ls	13448 <yy_scan_buffer+0xe4>  // b.plast
   13378:	stp	x21, x22, [sp, #32]
   1337c:	mov	x20, x0
   13380:	mov	x22, x1
   13384:	mov	x21, x2
   13388:	add	x0, x0, x1
   1338c:	ldurb	w0, [x0, #-2]
   13390:	cbnz	w0, 13450 <yy_scan_buffer+0xec>
   13394:	add	x0, x20, x1
   13398:	ldurb	w0, [x0, #-1]
   1339c:	mov	x19, #0x0                   	// #0
   133a0:	cbnz	w0, 1345c <yy_scan_buffer+0xf8>
   133a4:	mov	x0, #0x40                  	// #64
   133a8:	bl	0 <grub_malloc>
   133ac:	mov	x19, x0
   133b0:	cbz	x0, 13404 <yy_scan_buffer+0xa0>
   133b4:	sub	w1, w22, #0x2
   133b8:	str	w1, [x19, #24]
   133bc:	str	x20, [x19, #8]
   133c0:	str	x20, [x19, #16]
   133c4:	str	wzr, [x19, #32]
   133c8:	str	xzr, [x19]
   133cc:	str	w1, [x19, #28]
   133d0:	str	wzr, [x19, #36]
   133d4:	mov	w0, #0x1                   	// #1
   133d8:	str	w0, [x19, #40]
   133dc:	str	wzr, [x19, #52]
   133e0:	str	wzr, [x19, #56]
   133e4:	mov	x1, x21
   133e8:	mov	x0, x19
   133ec:	bl	12eb8 <yy_switch_to_buffer>
   133f0:	ldp	x21, x22, [sp, #32]
   133f4:	mov	x0, x19
   133f8:	ldp	x19, x20, [sp, #16]
   133fc:	ldp	x29, x30, [sp], #64
   13400:	ret
   13404:	stp	x23, x24, [sp, #48]
   13408:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1340c:	ldr	x24, [x0]
   13410:	ldr	x1, [x24]
   13414:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13418:	ldr	x0, [x0]
   1341c:	blr	x1
   13420:	mov	x23, x0
   13424:	ldr	x1, [x24]
   13428:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1342c:	ldr	x0, [x0]
   13430:	blr	x1
   13434:	mov	x1, x0
   13438:	mov	x0, x23
   1343c:	bl	0 <grub_printf>
   13440:	ldp	x23, x24, [sp, #48]
   13444:	b	133b4 <yy_scan_buffer+0x50>
   13448:	mov	x19, #0x0                   	// #0
   1344c:	b	133f4 <yy_scan_buffer+0x90>
   13450:	mov	x19, #0x0                   	// #0
   13454:	ldp	x21, x22, [sp, #32]
   13458:	b	133f4 <yy_scan_buffer+0x90>
   1345c:	ldp	x21, x22, [sp, #32]
   13460:	b	133f4 <yy_scan_buffer+0x90>
   13464:	nop
	...

0000000000013480 <yy_scan_bytes>:
   13480:	stp	x29, x30, [sp, #-80]!
   13484:	mov	x29, sp
   13488:	stp	x19, x20, [sp, #16]
   1348c:	stp	x21, x22, [sp, #32]
   13490:	stp	x23, x24, [sp, #48]
   13494:	mov	x21, x0
   13498:	mov	w20, w1
   1349c:	mov	x23, x2
   134a0:	add	w22, w1, #0x2
   134a4:	sxtw	x22, w22
   134a8:	mov	x0, x22
   134ac:	bl	0 <grub_malloc>
   134b0:	mov	x19, x0
   134b4:	cbz	x0, 1351c <yy_scan_bytes+0x9c>
   134b8:	cmp	w20, #0x0
   134bc:	b.le	134d8 <yy_scan_bytes+0x58>
   134c0:	mov	x3, #0x0                   	// #0
   134c4:	ldrb	w4, [x21, x3]
   134c8:	strb	w4, [x19, x3]
   134cc:	add	x3, x3, #0x1
   134d0:	cmp	w20, w3
   134d4:	b.gt	134c4 <yy_scan_bytes+0x44>
   134d8:	add	x0, x19, w20, sxtw
   134dc:	strb	wzr, [x0, #1]
   134e0:	strb	wzr, [x19, w20, sxtw]
   134e4:	mov	x2, x23
   134e8:	mov	x1, x22
   134ec:	mov	x0, x19
   134f0:	bl	13364 <yy_scan_buffer>
   134f4:	mov	x19, x0
   134f8:	cbz	x0, 13560 <yy_scan_bytes+0xe0>
   134fc:	mov	w0, #0x1                   	// #1
   13500:	str	w0, [x19, #32]
   13504:	mov	x0, x19
   13508:	ldp	x19, x20, [sp, #16]
   1350c:	ldp	x21, x22, [sp, #32]
   13510:	ldp	x23, x24, [sp, #48]
   13514:	ldp	x29, x30, [sp], #80
   13518:	ret
   1351c:	str	x25, [sp, #64]
   13520:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13524:	ldr	x25, [x0]
   13528:	ldr	x1, [x25]
   1352c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13530:	ldr	x0, [x0]
   13534:	blr	x1
   13538:	mov	x24, x0
   1353c:	ldr	x1, [x25]
   13540:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13544:	ldr	x0, [x0]
   13548:	blr	x1
   1354c:	mov	x1, x0
   13550:	mov	x0, x24
   13554:	bl	0 <grub_printf>
   13558:	ldr	x25, [sp, #64]
   1355c:	b	134b8 <yy_scan_bytes+0x38>
   13560:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13564:	ldr	x21, [x0]
   13568:	ldr	x1, [x21]
   1356c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13570:	ldr	x0, [x0]
   13574:	blr	x1
   13578:	mov	x20, x0
   1357c:	ldr	x1, [x21]
   13580:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13584:	ldr	x0, [x0]
   13588:	blr	x1
   1358c:	mov	x1, x0
   13590:	mov	x0, x20
   13594:	bl	0 <grub_printf>
   13598:	b	134fc <yy_scan_bytes+0x7c>
   1359c:	nop
	...

00000000000135c0 <yy_scan_string>:
   135c0:	stp	x29, x30, [sp, #-32]!
   135c4:	mov	x29, sp
   135c8:	stp	x19, x20, [sp, #16]
   135cc:	mov	x19, x0
   135d0:	mov	x20, x1
   135d4:	bl	0 <grub_strlen>
   135d8:	mov	x2, x20
   135dc:	mov	w1, w0
   135e0:	mov	x0, x19
   135e4:	bl	13480 <yy_scan_bytes>
   135e8:	ldp	x19, x20, [sp, #16]
   135ec:	ldp	x29, x30, [sp], #32
   135f0:	ret
   135f4:	stp	x29, x30, [sp, #-32]!
   135f8:	mov	x29, sp
   135fc:	str	x19, [sp, #16]
   13600:	mov	x19, x1
   13604:	bl	135c0 <yy_scan_string>
   13608:	cbz	x0, 13634 <yy_scan_string+0x74>
   1360c:	ldr	x0, [x19]
   13610:	ldr	x1, [x0, #40]
   13614:	mov	w0, #0x1                   	// #1
   13618:	str	w0, [x1, #44]
   1361c:	mov	x1, x19
   13620:	bl	12c98 <grub_script_yyparse+0xd88>
   13624:	mov	w0, #0x0                   	// #0
   13628:	ldr	x19, [sp, #16]
   1362c:	ldp	x29, x30, [sp], #32
   13630:	ret
   13634:	mov	x1, #0x0                   	// #0
   13638:	ldr	x0, [x19]
   1363c:	bl	10eb0 <grub_script_yyerror>
   13640:	mov	w0, #0x1                   	// #1
   13644:	b	13628 <yy_scan_string+0x68>

0000000000013648 <yyget_extra>:
   13648:	ldr	x0, [x0]
   1364c:	ret

0000000000013650 <yyget_column>:
   13650:	ldr	x1, [x0, #40]
   13654:	cbz	x1, 1366c <yyget_column+0x1c>
   13658:	ldr	x0, [x0, #24]
   1365c:	ldr	x0, [x1, x0, lsl #3]
   13660:	cbz	x0, 13674 <yyget_column+0x24>
   13664:	ldr	w0, [x0, #48]
   13668:	ret
   1366c:	mov	w0, #0x0                   	// #0
   13670:	b	13668 <yyget_column+0x18>
   13674:	mov	w0, #0x0                   	// #0
   13678:	b	13668 <yyget_column+0x18>

000000000001367c <yyget_leng>:
   1367c:	ldr	w0, [x0, #56]
   13680:	ret

0000000000013684 <yyget_text>:
   13684:	add	x0, x0, #0x80
   13688:	ret

000000000001368c <yyset_extra>:
   1368c:	str	x0, [x1]
   13690:	ret

0000000000013694 <yyset_column>:
   13694:	stp	x29, x30, [sp, #-48]!
   13698:	mov	x29, sp
   1369c:	stp	x19, x20, [sp, #16]
   136a0:	stp	x21, x22, [sp, #32]
   136a4:	mov	w21, w0
   136a8:	mov	x19, x1
   136ac:	ldr	x1, [x1, #40]
   136b0:	cbz	x1, 136c0 <yyset_column+0x2c>
   136b4:	ldr	x0, [x19, #24]
   136b8:	ldr	x0, [x1, x0, lsl #3]
   136bc:	cbnz	x0, 136f8 <yyset_column+0x64>
   136c0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   136c4:	ldr	x22, [x0]
   136c8:	ldr	x1, [x22]
   136cc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   136d0:	ldr	x0, [x0]
   136d4:	blr	x1
   136d8:	mov	x20, x0
   136dc:	ldr	x1, [x22]
   136e0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   136e4:	ldr	x0, [x0]
   136e8:	blr	x1
   136ec:	mov	x1, x0
   136f0:	mov	x0, x20
   136f4:	bl	0 <grub_printf>
   136f8:	ldr	x2, [x19, #24]
   136fc:	ldr	x1, [x19, #40]
   13700:	ldr	x1, [x1, x2, lsl #3]
   13704:	str	w21, [x1, #48]
   13708:	ldp	x19, x20, [sp, #16]
   1370c:	ldp	x21, x22, [sp, #32]
   13710:	ldp	x29, x30, [sp], #48
   13714:	ret
	...

0000000000013730 <yyget_lval>:
   13730:	ldr	x0, [x0, #8336]
   13734:	ret

0000000000013738 <yyset_lval>:
   13738:	str	x0, [x1, #8336]
   1373c:	ret

0000000000013740 <yylex_init>:
   13740:	cbz	x0, 137bc <yylex_init+0x7c>
   13744:	stp	x29, x30, [sp, #-32]!
   13748:	mov	x29, sp
   1374c:	str	x19, [sp, #16]
   13750:	mov	x19, x0
   13754:	mov	x0, #0x2098                	// #8344
   13758:	bl	0 <grub_malloc>
   1375c:	str	x0, [x19]
   13760:	cbz	x0, 137d4 <yylex_init+0x94>
   13764:	mov	x2, #0x2098                	// #8344
   13768:	mov	w1, #0x0                   	// #0
   1376c:	bl	0 <grub_memset>
   13770:	ldr	x0, [x19]
   13774:	str	xzr, [x0, #40]
   13778:	str	xzr, [x0, #24]
   1377c:	str	xzr, [x0, #32]
   13780:	str	xzr, [x0, #64]
   13784:	str	wzr, [x0, #72]
   13788:	str	wzr, [x0, #76]
   1378c:	str	wzr, [x0, #84]
   13790:	str	wzr, [x0, #88]
   13794:	str	xzr, [x0, #96]
   13798:	str	xzr, [x0, #8320]
   1379c:	str	wzr, [x0, #8328]
   137a0:	str	wzr, [x0, #8332]
   137a4:	str	xzr, [x0, #8]
   137a8:	str	xzr, [x0, #16]
   137ac:	mov	w0, #0x0                   	// #0
   137b0:	ldr	x19, [sp, #16]
   137b4:	ldp	x29, x30, [sp], #32
   137b8:	ret
   137bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   137c0:	ldr	x0, [x0]
   137c4:	mov	w1, #0xa                   	// #10
   137c8:	str	w1, [x0]
   137cc:	mov	w0, #0x1                   	// #1
   137d0:	ret
   137d4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   137d8:	ldr	x0, [x0]
   137dc:	mov	w1, #0x3                   	// #3
   137e0:	str	w1, [x0]
   137e4:	mov	w0, #0x1                   	// #1
   137e8:	b	137b0 <yylex_init+0x70>
   137ec:	nop
	...

00000000000137f8 <yylex_init_extra>:
   137f8:	cbz	x1, 13880 <yylex_init_extra+0x88>
   137fc:	stp	x29, x30, [sp, #-32]!
   13800:	mov	x29, sp
   13804:	stp	x19, x20, [sp, #16]
   13808:	mov	x20, x0
   1380c:	mov	x19, x1
   13810:	mov	x0, #0x2098                	// #8344
   13814:	bl	0 <grub_malloc>
   13818:	str	x0, [x19]
   1381c:	cbz	x0, 13898 <yylex_init_extra+0xa0>
   13820:	mov	x2, #0x2098                	// #8344
   13824:	mov	w1, #0x0                   	// #0
   13828:	bl	0 <grub_memset>
   1382c:	ldr	x0, [x19]
   13830:	str	x20, [x0]
   13834:	ldr	x0, [x19]
   13838:	str	xzr, [x0, #40]
   1383c:	str	xzr, [x0, #24]
   13840:	str	xzr, [x0, #32]
   13844:	str	xzr, [x0, #64]
   13848:	str	wzr, [x0, #72]
   1384c:	str	wzr, [x0, #76]
   13850:	str	wzr, [x0, #84]
   13854:	str	wzr, [x0, #88]
   13858:	str	xzr, [x0, #96]
   1385c:	str	xzr, [x0, #8320]
   13860:	str	wzr, [x0, #8328]
   13864:	str	wzr, [x0, #8332]
   13868:	str	xzr, [x0, #8]
   1386c:	str	xzr, [x0, #16]
   13870:	mov	w0, #0x0                   	// #0
   13874:	ldp	x19, x20, [sp, #16]
   13878:	ldp	x29, x30, [sp], #32
   1387c:	ret
   13880:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13884:	ldr	x0, [x0]
   13888:	mov	w1, #0xa                   	// #10
   1388c:	str	w1, [x0]
   13890:	mov	w0, #0x1                   	// #1
   13894:	ret
   13898:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1389c:	ldr	x0, [x0]
   138a0:	mov	w1, #0x3                   	// #3
   138a4:	str	w1, [x0]
   138a8:	mov	w0, #0x1                   	// #1
   138ac:	b	13874 <yylex_init_extra+0x7c>
	...

00000000000138b8 <yylex_destroy>:
   138b8:	stp	x29, x30, [sp, #-32]!
   138bc:	mov	x29, sp
   138c0:	str	x19, [sp, #16]
   138c4:	mov	x19, x0
   138c8:	ldr	x1, [x0, #40]
   138cc:	cbz	x1, 13900 <yylex_destroy+0x48>
   138d0:	ldr	x0, [x19, #24]
   138d4:	ldr	x0, [x1, x0, lsl #3]
   138d8:	cbz	x0, 13900 <yylex_destroy+0x48>
   138dc:	mov	x1, x19
   138e0:	bl	12f54 <yy_delete_buffer>
   138e4:	ldr	x1, [x19, #24]
   138e8:	ldr	x0, [x19, #40]
   138ec:	str	xzr, [x0, x1, lsl #3]
   138f0:	mov	x0, x19
   138f4:	bl	132ec <yypop_buffer_state>
   138f8:	ldr	x1, [x19, #40]
   138fc:	cbnz	x1, 138d0 <yylex_destroy+0x18>
   13900:	mov	x0, x1
   13904:	bl	0 <grub_free>
   13908:	str	xzr, [x19, #40]
   1390c:	ldr	x0, [x19, #96]
   13910:	bl	0 <grub_free>
   13914:	str	xzr, [x19, #96]
   13918:	str	xzr, [x19, #40]
   1391c:	str	xzr, [x19, #24]
   13920:	str	xzr, [x19, #32]
   13924:	str	xzr, [x19, #64]
   13928:	str	wzr, [x19, #72]
   1392c:	str	wzr, [x19, #76]
   13930:	str	wzr, [x19, #84]
   13934:	str	wzr, [x19, #88]
   13938:	str	xzr, [x19, #8320]
   1393c:	str	wzr, [x19, #8328]
   13940:	str	wzr, [x19, #8332]
   13944:	str	xzr, [x19, #8]
   13948:	str	xzr, [x19, #16]
   1394c:	mov	x0, x19
   13950:	bl	0 <grub_free>
   13954:	mov	w0, #0x0                   	// #0
   13958:	ldr	x19, [sp, #16]
   1395c:	ldp	x29, x30, [sp], #32
   13960:	ret

0000000000013964 <yywrap>:
   13964:	ldr	x0, [x0]
   13968:	ldr	x1, [x0, #40]
   1396c:	ldr	w1, [x1, #76]
   13970:	cbz	w1, 1397c <yywrap+0x18>
   13974:	mov	w0, #0x1                   	// #1
   13978:	ret
   1397c:	stp	x29, x30, [sp, #-16]!
   13980:	mov	x29, sp
   13984:	mov	x1, #0x0                   	// #0
   13988:	bl	1103c <grub_script_lexer_yywrap>
   1398c:	ldp	x29, x30, [sp], #16
   13990:	ret

0000000000013994 <yylex>:
   13994:	stp	x29, x30, [sp, #-144]!
   13998:	mov	x29, sp
   1399c:	stp	x19, x20, [sp, #16]
   139a0:	stp	x21, x22, [sp, #32]
   139a4:	stp	x23, x24, [sp, #48]
   139a8:	stp	x25, x26, [sp, #64]
   139ac:	stp	x27, x28, [sp, #80]
   139b0:	mov	x20, x1
   139b4:	str	x0, [x1, #8336]
   139b8:	ldr	w0, [x1, #72]
   139bc:	cbnz	w0, 139f4 <yylex+0x60>
   139c0:	mov	w0, #0x1                   	// #1
   139c4:	str	w0, [x1, #72]
   139c8:	ldr	w0, [x1, #76]
   139cc:	cbnz	w0, 139d8 <yylex+0x44>
   139d0:	mov	w0, #0x1                   	// #1
   139d4:	str	w0, [x1, #76]
   139d8:	ldr	x0, [x20, #40]
   139dc:	cbz	x0, 13a18 <yylex+0x84>
   139e0:	ldr	x1, [x20, #24]
   139e4:	ldr	x0, [x0, x1, lsl #3]
   139e8:	cbz	x0, 13a18 <yylex+0x84>
   139ec:	mov	x0, x20
   139f0:	bl	12a78 <grub_script_yyparse+0xb68>
   139f4:	adrp	x19, 0 <grub_normal_free_menu-0x26c>
   139f8:	mov	w24, #0x2                   	// #2
   139fc:	ldr	x6, [x20, #64]
   13a00:	ldrb	w0, [x20, #48]
   13a04:	strb	w0, [x6]
   13a08:	ldr	w0, [x20, #76]
   13a0c:	mov	x23, x6
   13a10:	str	w24, [sp, #108]
   13a14:	b	13aa4 <yylex+0x110>
   13a18:	mov	x0, x20
   13a1c:	bl	12b58 <grub_script_yyparse+0xc48>
   13a20:	ldr	x21, [x20, #24]
   13a24:	ldr	x19, [x20, #40]
   13a28:	mov	x2, x20
   13a2c:	mov	w1, #0x4000                	// #16384
   13a30:	ldr	x0, [x20, #8]
   13a34:	bl	130a0 <yy_create_buffer>
   13a38:	str	x0, [x19, x21, lsl #3]
   13a3c:	b	139ec <yylex+0x58>
   13a40:	mov	w5, w3
   13a44:	ldr	x1, [x19]
   13a48:	add	x2, x1, #0x278
   13a4c:	ldrsh	w2, [x2, w0, sxtw #1]
   13a50:	add	w2, w2, w3
   13a54:	add	x1, x1, #0x428
   13a58:	ldrsh	w1, [x1, w2, sxtw #1]
   13a5c:	cmp	w1, w4
   13a60:	b.eq	13a8c <yylex+0xf8>  // b.none
   13a64:	ldr	x1, [x19]
   13a68:	add	x1, x1, #0xa98
   13a6c:	ldrsh	w0, [x1, w0, sxtw #1]
   13a70:	mov	w4, w0
   13a74:	cmp	w0, #0xbb
   13a78:	b.le	13a40 <yylex+0xac>
   13a7c:	ldr	x1, [x19]
   13a80:	add	x1, x1, #0xc48
   13a84:	ldrb	w3, [x1, w5, sxtw]
   13a88:	b	13a40 <yylex+0xac>
   13a8c:	ldr	x0, [x19]
   13a90:	add	x0, x0, #0xc70
   13a94:	ldrsh	w0, [x0, w2, sxtw #1]
   13a98:	add	x6, x6, #0x1
   13a9c:	cmp	w0, #0xbb
   13aa0:	b.eq	13aec <yylex+0x158>  // b.none
   13aa4:	ldr	x1, [x19]
   13aa8:	ldrb	w2, [x6]
   13aac:	ldrb	w3, [x1, w2, sxtw]
   13ab0:	add	x1, x1, #0x100
   13ab4:	ldrsh	w1, [x1, w0, sxtw #1]
   13ab8:	cbz	w1, 13ac4 <yylex+0x130>
   13abc:	str	w0, [x20, #104]
   13ac0:	str	x6, [x20, #112]
   13ac4:	mov	w5, w3
   13ac8:	ldr	x1, [x19]
   13acc:	add	x2, x1, #0x278
   13ad0:	ldrsh	w2, [x2, w0, sxtw #1]
   13ad4:	add	w2, w2, w3
   13ad8:	add	x1, x1, #0x428
   13adc:	ldrsh	w1, [x1, w2, sxtw #1]
   13ae0:	cmp	w0, w1
   13ae4:	b.ne	13a64 <yylex+0xd0>  // b.any
   13ae8:	b	13a8c <yylex+0xf8>
   13aec:	ldr	x21, [x20, #112]
   13af0:	ldr	w1, [x20, #104]
   13af4:	adrp	x25, 0 <grub_normal_free_menu-0x26c>
   13af8:	ldr	w0, [sp, #108]
   13afc:	str	w0, [sp, #120]
   13b00:	ldr	x0, [x19]
   13b04:	add	x0, x0, #0x100
   13b08:	ldrsh	w27, [x0, w1, sxtw #1]
   13b0c:	str	x23, [x20, #8320]
   13b10:	sub	x0, x21, x23
   13b14:	str	w0, [x20, #56]
   13b18:	ldrb	w0, [x21]
   13b1c:	strb	w0, [x20, #48]
   13b20:	strb	wzr, [x21]
   13b24:	ldr	w1, [x20, #56]
   13b28:	mov	w0, #0x1fff                	// #8191
   13b2c:	cmp	w1, w0
   13b30:	b.le	13b68 <yylex+0x1d4>
   13b34:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13b38:	ldr	x26, [x0]
   13b3c:	ldr	x1, [x26]
   13b40:	ldr	x0, [x25]
   13b44:	blr	x1
   13b48:	mov	x22, x0
   13b4c:	ldr	x1, [x26]
   13b50:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13b54:	ldr	x0, [x0]
   13b58:	blr	x1
   13b5c:	mov	x1, x0
   13b60:	mov	x0, x22
   13b64:	bl	0 <grub_printf>
   13b68:	add	x22, x20, #0x80
   13b6c:	ldr	x3, [x20, #8320]
   13b70:	ldr	w2, [x20, #56]
   13b74:	tbnz	w2, #31, 13b98 <yylex+0x204>
   13b78:	mov	w2, w2
   13b7c:	mov	x0, #0x0                   	// #0
   13b80:	mov	x4, x22
   13b84:	ldrb	w1, [x3, x0]
   13b88:	strb	w1, [x4, x0]
   13b8c:	cmp	x0, x2
   13b90:	add	x0, x0, #0x1
   13b94:	b.ne	13b84 <yylex+0x1f0>  // b.any
   13b98:	str	x21, [x20, #64]
   13b9c:	adrp	x26, 0 <grub_normal_free_menu-0x26c>
   13ba0:	cmp	w27, #0x4b
   13ba4:	b.hi	1485c <yylex+0xec8>  // b.pmore
   13ba8:	ldr	x0, [x26]
   13bac:	ldrh	w0, [x0, w27, uxtw #1]
   13bb0:	adr	x1, 13bbc <yylex+0x228>
   13bb4:	add	x0, x1, w0, sxth #2
   13bb8:	br	x0
   13bbc:	ldrb	w0, [x20, #48]
   13bc0:	strb	w0, [x21]
   13bc4:	ldr	x21, [x20, #112]
   13bc8:	ldr	w1, [x20, #104]
   13bcc:	b	13b00 <yylex+0x16c>
   13bd0:	mov	x1, x22
   13bd4:	ldr	x0, [x20]
   13bd8:	bl	10f58 <grub_script_lexer_record>
   13bdc:	b	139f8 <yylex+0x64>
   13be0:	ldrb	w0, [x20, #48]
   13be4:	mov	x24, x21
   13be8:	strb	w0, [x24], #-1
   13bec:	str	x24, [x20, #64]
   13bf0:	str	x23, [x20, #8320]
   13bf4:	sub	x23, x24, x23
   13bf8:	str	w23, [x20, #56]
   13bfc:	ldurb	w0, [x21, #-1]
   13c00:	strb	w0, [x20, #48]
   13c04:	sturb	wzr, [x21, #-1]
   13c08:	ldr	w1, [x20, #56]
   13c0c:	mov	w0, #0x1fff                	// #8191
   13c10:	cmp	w1, w0
   13c14:	b.le	13c50 <yylex+0x2bc>
   13c18:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13c1c:	ldr	x23, [x0]
   13c20:	ldr	x1, [x23]
   13c24:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13c28:	ldr	x0, [x0]
   13c2c:	blr	x1
   13c30:	mov	x21, x0
   13c34:	ldr	x1, [x23]
   13c38:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   13c3c:	ldr	x0, [x0]
   13c40:	blr	x1
   13c44:	mov	x1, x0
   13c48:	mov	x0, x21
   13c4c:	bl	0 <grub_printf>
   13c50:	ldr	x3, [x20, #8320]
   13c54:	ldr	w0, [x20, #56]
   13c58:	tbnz	w0, #31, 13c78 <yylex+0x2e4>
   13c5c:	mov	w1, w0
   13c60:	mov	x0, #0x0                   	// #0
   13c64:	ldrb	w2, [x3, x0]
   13c68:	strb	w2, [x22, x0]
   13c6c:	cmp	x0, x1
   13c70:	add	x0, x0, #0x1
   13c74:	b.ne	13c64 <yylex+0x2d0>  // b.any
   13c78:	str	x24, [x20, #64]
   13c7c:	mov	x1, x22
   13c80:	ldr	x0, [x20]
   13c84:	bl	10f58 <grub_script_lexer_record>
   13c88:	b	139f8 <yylex+0x64>
   13c8c:	mov	x1, x22
   13c90:	ldr	x0, [x20]
   13c94:	bl	10f58 <grub_script_lexer_record>
   13c98:	mov	w0, #0x103                 	// #259
   13c9c:	ldp	x19, x20, [sp, #16]
   13ca0:	ldp	x21, x22, [sp, #32]
   13ca4:	ldp	x23, x24, [sp, #48]
   13ca8:	ldp	x25, x26, [sp, #64]
   13cac:	ldp	x27, x28, [sp, #80]
   13cb0:	ldp	x29, x30, [sp], #144
   13cb4:	ret
   13cb8:	mov	x1, x22
   13cbc:	ldr	x0, [x20]
   13cc0:	bl	10f58 <grub_script_lexer_record>
   13cc4:	mov	w0, #0x105                 	// #261
   13cc8:	b	13c9c <yylex+0x308>
   13ccc:	mov	x1, x22
   13cd0:	ldr	x0, [x20]
   13cd4:	bl	10f58 <grub_script_lexer_record>
   13cd8:	mov	w0, #0x104                 	// #260
   13cdc:	b	13c9c <yylex+0x308>
   13ce0:	mov	x1, x22
   13ce4:	ldr	x0, [x20]
   13ce8:	bl	10f58 <grub_script_lexer_record>
   13cec:	mov	w0, #0x106                 	// #262
   13cf0:	b	13c9c <yylex+0x308>
   13cf4:	mov	x1, x22
   13cf8:	ldr	x0, [x20]
   13cfc:	bl	10f58 <grub_script_lexer_record>
   13d00:	mov	w0, #0x107                 	// #263
   13d04:	b	13c9c <yylex+0x308>
   13d08:	mov	x1, x22
   13d0c:	ldr	x0, [x20]
   13d10:	bl	10f58 <grub_script_lexer_record>
   13d14:	mov	w0, #0x108                 	// #264
   13d18:	b	13c9c <yylex+0x308>
   13d1c:	mov	x1, x22
   13d20:	ldr	x0, [x20]
   13d24:	bl	10f58 <grub_script_lexer_record>
   13d28:	mov	w0, #0x109                 	// #265
   13d2c:	b	13c9c <yylex+0x308>
   13d30:	mov	x1, x22
   13d34:	ldr	x0, [x20]
   13d38:	bl	10f58 <grub_script_lexer_record>
   13d3c:	mov	w0, #0x10f                 	// #271
   13d40:	b	13c9c <yylex+0x308>
   13d44:	mov	x1, x22
   13d48:	ldr	x0, [x20]
   13d4c:	bl	10f58 <grub_script_lexer_record>
   13d50:	mov	w0, #0x110                 	// #272
   13d54:	b	13c9c <yylex+0x308>
   13d58:	mov	x1, x22
   13d5c:	ldr	x0, [x20]
   13d60:	bl	10f58 <grub_script_lexer_record>
   13d64:	mov	w0, #0x10a                 	// #266
   13d68:	b	13c9c <yylex+0x308>
   13d6c:	mov	x1, x22
   13d70:	ldr	x0, [x20]
   13d74:	bl	10f58 <grub_script_lexer_record>
   13d78:	mov	w0, #0x10b                 	// #267
   13d7c:	b	13c9c <yylex+0x308>
   13d80:	mov	x1, x22
   13d84:	ldr	x0, [x20]
   13d88:	bl	10f58 <grub_script_lexer_record>
   13d8c:	mov	w0, #0x10d                 	// #269
   13d90:	b	13c9c <yylex+0x308>
   13d94:	mov	x1, x22
   13d98:	ldr	x0, [x20]
   13d9c:	bl	10f58 <grub_script_lexer_record>
   13da0:	mov	w0, #0x10e                 	// #270
   13da4:	b	13c9c <yylex+0x308>
   13da8:	mov	x1, x22
   13dac:	ldr	x0, [x20]
   13db0:	bl	10f58 <grub_script_lexer_record>
   13db4:	mov	w0, #0x111                 	// #273
   13db8:	b	13c9c <yylex+0x308>
   13dbc:	mov	x1, x22
   13dc0:	ldr	x0, [x20]
   13dc4:	bl	10f58 <grub_script_lexer_record>
   13dc8:	mov	w0, #0x112                 	// #274
   13dcc:	b	13c9c <yylex+0x308>
   13dd0:	mov	x1, x22
   13dd4:	ldr	x0, [x20]
   13dd8:	bl	10f58 <grub_script_lexer_record>
   13ddc:	mov	w0, #0x113                 	// #275
   13de0:	b	13c9c <yylex+0x308>
   13de4:	mov	x1, x22
   13de8:	ldr	x0, [x20]
   13dec:	bl	10f58 <grub_script_lexer_record>
   13df0:	mov	w0, #0x114                 	// #276
   13df4:	b	13c9c <yylex+0x308>
   13df8:	mov	x1, x22
   13dfc:	ldr	x0, [x20]
   13e00:	bl	10f58 <grub_script_lexer_record>
   13e04:	mov	w0, #0x115                 	// #277
   13e08:	b	13c9c <yylex+0x308>
   13e0c:	mov	x1, x22
   13e10:	ldr	x0, [x20]
   13e14:	bl	10f58 <grub_script_lexer_record>
   13e18:	mov	w0, #0x116                 	// #278
   13e1c:	b	13c9c <yylex+0x308>
   13e20:	mov	x1, x22
   13e24:	ldr	x0, [x20]
   13e28:	bl	10f58 <grub_script_lexer_record>
   13e2c:	mov	w0, #0x117                 	// #279
   13e30:	b	13c9c <yylex+0x308>
   13e34:	mov	x1, x22
   13e38:	ldr	x0, [x20]
   13e3c:	bl	10f58 <grub_script_lexer_record>
   13e40:	mov	w0, #0x118                 	// #280
   13e44:	b	13c9c <yylex+0x308>
   13e48:	mov	x1, x22
   13e4c:	ldr	x0, [x20]
   13e50:	bl	10f58 <grub_script_lexer_record>
   13e54:	mov	w0, #0x119                 	// #281
   13e58:	b	13c9c <yylex+0x308>
   13e5c:	mov	x1, x22
   13e60:	ldr	x0, [x20]
   13e64:	bl	10f58 <grub_script_lexer_record>
   13e68:	mov	w0, #0x11a                 	// #282
   13e6c:	b	13c9c <yylex+0x308>
   13e70:	mov	x1, x22
   13e74:	ldr	x0, [x20]
   13e78:	bl	10f58 <grub_script_lexer_record>
   13e7c:	mov	w0, #0x11b                 	// #283
   13e80:	b	13c9c <yylex+0x308>
   13e84:	mov	x1, x22
   13e88:	ldr	x0, [x20]
   13e8c:	bl	10f58 <grub_script_lexer_record>
   13e90:	mov	w0, #0x11c                 	// #284
   13e94:	b	13c9c <yylex+0x308>
   13e98:	mov	x1, x22
   13e9c:	ldr	x0, [x20]
   13ea0:	bl	10f58 <grub_script_lexer_record>
   13ea4:	mov	w0, #0x11d                 	// #285
   13ea8:	b	13c9c <yylex+0x308>
   13eac:	mov	x1, x22
   13eb0:	ldr	x0, [x20]
   13eb4:	bl	10f58 <grub_script_lexer_record>
   13eb8:	mov	w0, #0x11e                 	// #286
   13ebc:	b	13c9c <yylex+0x308>
   13ec0:	mov	x1, x22
   13ec4:	ldr	x0, [x20]
   13ec8:	bl	10f58 <grub_script_lexer_record>
   13ecc:	mov	w0, #0x11f                 	// #287
   13ed0:	b	13c9c <yylex+0x308>
   13ed4:	mov	x1, x20
   13ed8:	mov	x0, x22
   13edc:	bl	12e4c <grub_script_yyparse+0xf3c>
   13ee0:	cbz	w0, 139f8 <yylex+0x64>
   13ee4:	mov	w0, #0x102                 	// #258
   13ee8:	b	13c9c <yylex+0x308>
   13eec:	ldr	x1, [x20, #64]
   13ef0:	add	x1, x1, #0x1
   13ef4:	ldr	x2, [x20, #24]
   13ef8:	ldr	x0, [x20, #40]
   13efc:	ldr	x3, [x0, x2, lsl #3]
   13f00:	ldrsw	x0, [x20, #52]
   13f04:	add	x2, x0, #0x1
   13f08:	ldr	x0, [x3, #8]
   13f0c:	add	x0, x0, x2
   13f10:	cmp	x1, x0
   13f14:	b.eq	13f60 <yylex+0x5cc>  // b.none
   13f18:	mov	x1, x22
   13f1c:	ldr	x0, [x20]
   13f20:	bl	10f58 <grub_script_lexer_record>
   13f24:	ldr	x0, [x20, #40]
   13f28:	cbz	x0, 13f34 <yylex+0x5a0>
   13f2c:	ldr	x1, [x20, #24]
   13f30:	ldr	x0, [x0, x1, lsl #3]
   13f34:	mov	x1, x20
   13f38:	bl	13240 <yypush_buffer_state>
   13f3c:	mov	x1, x20
   13f40:	mov	x0, x22
   13f44:	bl	135f4 <yy_scan_string+0x34>
   13f48:	cbnz	w0, 13f78 <yylex+0x5e4>
   13f4c:	ldr	x0, [x20]
   13f50:	ldr	x0, [x0, #40]
   13f54:	mov	w1, #0x1                   	// #1
   13f58:	str	w1, [x0, #76]
   13f5c:	b	139f8 <yylex+0x64>
   13f60:	mov	x1, x20
   13f64:	mov	x0, x22
   13f68:	bl	12e4c <grub_script_yyparse+0xf3c>
   13f6c:	cbz	w0, 139f8 <yylex+0x64>
   13f70:	mov	w0, #0x102                 	// #258
   13f74:	b	13c9c <yylex+0x308>
   13f78:	mov	x0, x20
   13f7c:	bl	132ec <yypop_buffer_state>
   13f80:	mov	w0, #0x121                 	// #289
   13f84:	b	13c9c <yylex+0x308>
   13f88:	mov	x1, x22
   13f8c:	ldr	x0, [x20]
   13f90:	bl	10f58 <grub_script_lexer_record>
   13f94:	mov	w0, #0x120                 	// #288
   13f98:	b	13c9c <yylex+0x308>
   13f9c:	mov	x1, x22
   13fa0:	ldr	x0, [x20]
   13fa4:	bl	10f58 <grub_script_lexer_record>
   13fa8:	ldr	x0, [x20, #40]
   13fac:	cbz	x0, 13fb8 <yylex+0x624>
   13fb0:	ldr	x1, [x20, #24]
   13fb4:	ldr	x0, [x0, x1, lsl #3]
   13fb8:	mov	x1, x20
   13fbc:	bl	13240 <yypush_buffer_state>
   13fc0:	mov	x1, x20
   13fc4:	mov	x0, x22
   13fc8:	bl	135f4 <yy_scan_string+0x34>
   13fcc:	cbnz	w0, 13fe4 <yylex+0x650>
   13fd0:	ldr	x0, [x20]
   13fd4:	ldr	x0, [x0, #40]
   13fd8:	mov	w1, #0x1                   	// #1
   13fdc:	str	w1, [x0, #76]
   13fe0:	b	139f8 <yylex+0x64>
   13fe4:	mov	x0, x20
   13fe8:	bl	132ec <yypop_buffer_state>
   13fec:	mov	w0, #0x121                 	// #289
   13ff0:	b	13c9c <yylex+0x308>
   13ff4:	mov	x1, x22
   13ff8:	ldr	x0, [x20]
   13ffc:	bl	10eb0 <grub_script_yyerror>
   14000:	mov	w0, #0x102                 	// #258
   14004:	b	13c9c <yylex+0x308>
   14008:	ldr	w2, [x20, #56]
   1400c:	mov	x1, x22
   14010:	ldr	x0, [x20]
   14014:	bl	12d88 <grub_script_yyparse+0xe78>
   14018:	b	139f8 <yylex+0x64>
   1401c:	mov	x1, x20
   14020:	mov	w0, #0x2                   	// #2
   14024:	bl	12c98 <grub_script_yyparse+0xd88>
   14028:	ldr	x0, [x20]
   1402c:	ldr	x0, [x0, #40]
   14030:	mov	w1, #0x1                   	// #1
   14034:	str	w1, [x0, #72]
   14038:	mov	w0, #0x121                 	// #289
   1403c:	b	13c9c <yylex+0x308>
   14040:	mov	x1, x20
   14044:	mov	w0, #0x4                   	// #4
   14048:	bl	12c98 <grub_script_yyparse+0xd88>
   1404c:	ldr	x0, [x20]
   14050:	ldr	x0, [x0, #40]
   14054:	mov	w1, #0x1                   	// #1
   14058:	str	w1, [x0, #72]
   1405c:	mov	w0, #0x121                 	// #289
   14060:	b	13c9c <yylex+0x308>
   14064:	mov	x1, x20
   14068:	mov	w0, #0x3                   	// #3
   1406c:	bl	12c98 <grub_script_yyparse+0xd88>
   14070:	ldr	x0, [x20]
   14074:	ldr	x0, [x0, #40]
   14078:	mov	w1, #0x2                   	// #2
   1407c:	str	w1, [x0, #72]
   14080:	mov	w0, #0x121                 	// #289
   14084:	b	13c9c <yylex+0x308>
   14088:	mov	x1, x20
   1408c:	mov	w0, #0x5                   	// #5
   14090:	bl	12c98 <grub_script_yyparse+0xd88>
   14094:	ldr	x0, [x20]
   14098:	ldr	x0, [x0, #40]
   1409c:	mov	w1, #0x1                   	// #1
   140a0:	str	w1, [x0, #72]
   140a4:	mov	w0, #0x121                 	// #289
   140a8:	b	13c9c <yylex+0x308>
   140ac:	ldr	w2, [x20, #56]
   140b0:	mov	x1, x22
   140b4:	ldr	x0, [x20]
   140b8:	bl	12d88 <grub_script_yyparse+0xe78>
   140bc:	b	139f8 <yylex+0x64>
   140c0:	mov	x0, x20
   140c4:	bl	12ab4 <grub_script_yyparse+0xba4>
   140c8:	mov	x0, x20
   140cc:	bl	132ec <yypop_buffer_state>
   140d0:	ldr	x0, [x20]
   140d4:	ldr	x0, [x0, #40]
   140d8:	str	wzr, [x0, #76]
   140dc:	ldr	x0, [x20]
   140e0:	ldr	x1, [x0, #40]
   140e4:	mov	w0, #0x1                   	// #1
   140e8:	str	w0, [x1, #48]
   140ec:	ldr	x1, [x20]
   140f0:	ldr	x1, [x1, #40]
   140f4:	str	w0, [x1, #72]
   140f8:	mov	w0, #0x121                 	// #289
   140fc:	b	13c9c <yylex+0x308>
   14100:	ldr	w2, [x20, #56]
   14104:	mov	x1, x22
   14108:	ldr	x0, [x20]
   1410c:	bl	12d88 <grub_script_yyparse+0xe78>
   14110:	mov	x0, x20
   14114:	bl	12ab4 <grub_script_yyparse+0xba4>
   14118:	ldr	w0, [x20, #76]
   1411c:	sub	w0, w0, #0x3
   14120:	cmp	w0, #0x1
   14124:	b.ls	14140 <yylex+0x7ac>  // b.plast
   14128:	ldr	x0, [x20]
   1412c:	ldr	x0, [x0, #40]
   14130:	mov	w1, #0x3                   	// #3
   14134:	str	w1, [x0, #72]
   14138:	mov	w0, #0x121                 	// #289
   1413c:	b	13c9c <yylex+0x308>
   14140:	ldr	x0, [x20]
   14144:	ldr	x0, [x0, #40]
   14148:	str	wzr, [x0, #72]
   1414c:	mov	w0, #0x121                 	// #289
   14150:	b	13c9c <yylex+0x308>
   14154:	ldr	w2, [x20, #56]
   14158:	sub	w0, w2, #0x1
   1415c:	add	x0, x20, w0, sxtw
   14160:	strb	wzr, [x0, #128]
   14164:	mov	x1, x20
   14168:	ldr	x0, [x1], #129
   1416c:	sub	w2, w2, #0x2
   14170:	bl	12d88 <grub_script_yyparse+0xe78>
   14174:	mov	x0, x20
   14178:	bl	12ab4 <grub_script_yyparse+0xba4>
   1417c:	ldr	w0, [x20, #76]
   14180:	sub	w0, w0, #0x3
   14184:	cmp	w0, #0x1
   14188:	b.ls	141a4 <yylex+0x810>  // b.plast
   1418c:	ldr	x0, [x20]
   14190:	ldr	x0, [x0, #40]
   14194:	mov	w1, #0x3                   	// #3
   14198:	str	w1, [x0, #72]
   1419c:	mov	w0, #0x121                 	// #289
   141a0:	b	13c9c <yylex+0x308>
   141a4:	ldr	x0, [x20]
   141a8:	ldr	x0, [x0, #40]
   141ac:	str	wzr, [x0, #72]
   141b0:	mov	w0, #0x121                 	// #289
   141b4:	b	13c9c <yylex+0x308>
   141b8:	mov	x0, x20
   141bc:	bl	12ab4 <grub_script_yyparse+0xba4>
   141c0:	ldr	x0, [x20]
   141c4:	ldr	x0, [x0, #40]
   141c8:	mov	w1, #0x5                   	// #5
   141cc:	str	w1, [x0, #72]
   141d0:	mov	w0, #0x121                 	// #289
   141d4:	b	13c9c <yylex+0x308>
   141d8:	ldr	w2, [x20, #56]
   141dc:	mov	x1, x22
   141e0:	ldr	x0, [x20]
   141e4:	bl	12d88 <grub_script_yyparse+0xe78>
   141e8:	b	139f8 <yylex+0x64>
   141ec:	mov	w2, #0x1                   	// #1
   141f0:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   141f4:	ldr	x1, [x0]
   141f8:	ldr	x0, [x20]
   141fc:	bl	12d88 <grub_script_yyparse+0xe78>
   14200:	b	139f8 <yylex+0x64>
   14204:	mov	w2, #0x1                   	// #1
   14208:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1420c:	ldr	x1, [x0]
   14210:	ldr	x0, [x20]
   14214:	bl	12d88 <grub_script_yyparse+0xe78>
   14218:	b	139f8 <yylex+0x64>
   1421c:	mov	w2, #0x1                   	// #1
   14220:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14224:	ldr	x1, [x0]
   14228:	ldr	x0, [x20]
   1422c:	bl	12d88 <grub_script_yyparse+0xe78>
   14230:	b	139f8 <yylex+0x64>
   14234:	ldr	w2, [x20, #56]
   14238:	mov	x1, x22
   1423c:	ldr	x0, [x20]
   14240:	bl	12d88 <grub_script_yyparse+0xe78>
   14244:	b	139f8 <yylex+0x64>
   14248:	mov	x0, x20
   1424c:	bl	12ab4 <grub_script_yyparse+0xba4>
   14250:	ldr	x0, [x20]
   14254:	ldr	x0, [x0, #40]
   14258:	mov	w1, #0x4                   	// #4
   1425c:	str	w1, [x0, #72]
   14260:	mov	w0, #0x121                 	// #289
   14264:	b	13c9c <yylex+0x308>
   14268:	mov	x1, x20
   1426c:	mov	w0, #0x5                   	// #5
   14270:	bl	12c98 <grub_script_yyparse+0xd88>
   14274:	ldr	x0, [x20]
   14278:	ldr	x0, [x0, #40]
   1427c:	mov	w1, #0x4                   	// #4
   14280:	str	w1, [x0, #72]
   14284:	mov	w0, #0x121                 	// #289
   14288:	b	13c9c <yylex+0x308>
   1428c:	ldr	w2, [x20, #56]
   14290:	mov	x1, x22
   14294:	ldr	x0, [x20]
   14298:	bl	12d88 <grub_script_yyparse+0xe78>
   1429c:	b	139f8 <yylex+0x64>
   142a0:	mov	w2, #0x2                   	// #2
   142a4:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   142a8:	ldr	x1, [x0]
   142ac:	ldr	x0, [x20]
   142b0:	bl	12d88 <grub_script_yyparse+0xe78>
   142b4:	b	139f8 <yylex+0x64>
   142b8:	mov	w2, #0x1                   	// #1
   142bc:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   142c0:	ldr	x1, [x0]
   142c4:	ldr	x0, [x20]
   142c8:	bl	12d88 <grub_script_yyparse+0xe78>
   142cc:	b	139f8 <yylex+0x64>
   142d0:	ldr	w2, [x20, #56]
   142d4:	mov	x1, x22
   142d8:	ldr	x0, [x20]
   142dc:	bl	12d88 <grub_script_yyparse+0xe78>
   142e0:	b	139f8 <yylex+0x64>
   142e4:	mov	x0, x20
   142e8:	bl	12ab4 <grub_script_yyparse+0xba4>
   142ec:	ldr	x0, [x20]
   142f0:	ldr	x0, [x0, #40]
   142f4:	mov	w1, #0x2                   	// #2
   142f8:	str	w1, [x0, #72]
   142fc:	mov	w0, #0x121                 	// #289
   14300:	b	13c9c <yylex+0x308>
   14304:	mov	w2, #0x1                   	// #1
   14308:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1430c:	ldr	x1, [x0]
   14310:	ldr	x0, [x20]
   14314:	bl	12d88 <grub_script_yyparse+0xe78>
   14318:	b	139f8 <yylex+0x64>
   1431c:	ldr	w2, [x20, #56]
   14320:	mov	x1, x22
   14324:	ldr	x0, [x20]
   14328:	bl	12d88 <grub_script_yyparse+0xe78>
   1432c:	b	139f8 <yylex+0x64>
   14330:	mov	x0, x20
   14334:	bl	132ec <yypop_buffer_state>
   14338:	ldr	x0, [x20]
   1433c:	ldr	x0, [x0, #40]
   14340:	mov	w1, #0x1                   	// #1
   14344:	str	w1, [x0, #40]
   14348:	mov	w0, #0x0                   	// #0
   1434c:	b	13c9c <yylex+0x308>
   14350:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14354:	ldr	x22, [x0]
   14358:	ldr	x1, [x22]
   1435c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14360:	ldr	x0, [x0]
   14364:	blr	x1
   14368:	mov	x21, x0
   1436c:	ldr	x1, [x22]
   14370:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14374:	ldr	x0, [x0]
   14378:	blr	x1
   1437c:	mov	x1, x0
   14380:	mov	x0, x21
   14384:	bl	0 <grub_printf>
   14388:	b	139f8 <yylex+0x64>
   1438c:	ldr	x0, [x20, #8320]
   14390:	sub	x0, x21, x0
   14394:	sub	w0, w0, #0x1
   14398:	str	w0, [sp, #124]
   1439c:	ldrb	w0, [x20, #48]
   143a0:	strb	w0, [x21]
   143a4:	ldr	x1, [x20, #24]
   143a8:	ldr	x0, [x20, #40]
   143ac:	ldr	x2, [x0, x1, lsl #3]
   143b0:	ldr	w3, [x2, #56]
   143b4:	cbnz	w3, 143e0 <yylex+0xa4c>
   143b8:	ldr	w2, [x2, #28]
   143bc:	str	w2, [x20, #52]
   143c0:	ldr	x0, [x0, x1, lsl #3]
   143c4:	ldr	x1, [x20, #8]
   143c8:	str	x1, [x0]
   143cc:	ldr	x1, [x20, #24]
   143d0:	ldr	x0, [x20, #40]
   143d4:	ldr	x0, [x0, x1, lsl #3]
   143d8:	mov	w1, #0x1                   	// #1
   143dc:	str	w1, [x0, #56]
   143e0:	ldr	x1, [x20, #64]
   143e4:	ldr	x2, [x20, #24]
   143e8:	ldr	x0, [x20, #40]
   143ec:	ldr	x0, [x0, x2, lsl #3]
   143f0:	ldr	x28, [x0, #8]
   143f4:	ldrsw	x0, [x20, #52]
   143f8:	add	x2, x28, x0
   143fc:	cmp	x1, x2
   14400:	b.ls	144a8 <yylex+0xb14>  // b.plast
   14404:	ldr	x2, [x20, #8320]
   14408:	str	x2, [sp, #112]
   1440c:	add	x0, x0, #0x1
   14410:	add	x0, x28, x0
   14414:	cmp	x1, x0
   14418:	b.ls	14450 <yylex+0xabc>  // b.plast
   1441c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14420:	ldr	x27, [x0]
   14424:	ldr	x1, [x27]
   14428:	ldr	x0, [x25]
   1442c:	blr	x1
   14430:	str	x0, [sp, #128]
   14434:	ldr	x1, [x27]
   14438:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1443c:	ldr	x0, [x0]
   14440:	blr	x1
   14444:	mov	x1, x0
   14448:	ldr	x0, [sp, #128]
   1444c:	bl	0 <grub_printf>
   14450:	ldr	x1, [x20, #24]
   14454:	ldr	x0, [x20, #40]
   14458:	ldr	x0, [x0, x1, lsl #3]
   1445c:	ldr	w0, [x0, #52]
   14460:	cbnz	w0, 14558 <yylex+0xbc4>
   14464:	ldr	x0, [x20, #64]
   14468:	ldr	x1, [x20, #8320]
   1446c:	sub	x0, x0, x1
   14470:	cmp	x0, #0x1
   14474:	b.ne	14670 <yylex+0xcdc>  // b.any
   14478:	str	wzr, [x20, #80]
   1447c:	mov	x0, x20
   14480:	bl	13964 <yywrap>
   14484:	cbz	w0, 14824 <yylex+0xe90>
   14488:	ldr	x0, [x20, #8320]
   1448c:	str	x0, [x20, #64]
   14490:	ldr	w0, [x20, #76]
   14494:	sub	w0, w0, #0x1
   14498:	add	w0, w0, w0, lsr #31
   1449c:	asr	w27, w0, #1
   144a0:	add	w27, w27, #0x46
   144a4:	b	13ba0 <yylex+0x20c>
   144a8:	ldr	x0, [x20, #8320]
   144ac:	ldr	w1, [sp, #124]
   144b0:	add	x0, x0, w1, sxtw
   144b4:	str	x0, [x20, #64]
   144b8:	mov	x0, x20
   144bc:	bl	12990 <grub_script_yyparse+0xa80>
   144c0:	ldr	x6, [x20, #64]
   144c4:	ldr	x1, [x19]
   144c8:	add	x1, x1, #0x100
   144cc:	ldrsh	w1, [x1, w0, sxtw #1]
   144d0:	cbz	w1, 144dc <yylex+0xb48>
   144d4:	str	w0, [x20, #104]
   144d8:	str	x6, [x20, #112]
   144dc:	ldr	x2, [x19]
   144e0:	add	x1, x2, #0x278
   144e4:	ldrsh	w1, [x1, w0, sxtw #1]
   144e8:	add	w1, w1, #0x1
   144ec:	add	x2, x2, #0x428
   144f0:	ldrsh	w2, [x2, w1, sxtw #1]
   144f4:	cmp	w0, w2
   144f8:	b.eq	14524 <yylex+0xb90>  // b.none
   144fc:	ldr	x2, [x19]
   14500:	add	x1, x2, #0xa98
   14504:	ldrsh	w0, [x1, w0, sxtw #1]
   14508:	add	x1, x2, #0x278
   1450c:	ldrsh	w1, [x1, w0, sxtw #1]
   14510:	add	w1, w1, #0x1
   14514:	add	x2, x2, #0x428
   14518:	ldrsh	w2, [x2, w1, sxtw #1]
   1451c:	cmp	w0, w2
   14520:	b.ne	144fc <yylex+0xb68>  // b.any
   14524:	ldr	x0, [x19]
   14528:	add	x0, x0, #0xc70
   1452c:	ldrsh	w0, [x0, w1, sxtw #1]
   14530:	cmp	w0, #0xbb
   14534:	b.eq	148a0 <yylex+0xf0c>  // b.none
   14538:	ldr	x23, [x20, #8320]
   1453c:	cbnz	w0, 1454c <yylex+0xbb8>
   14540:	ldr	x21, [x20, #112]
   14544:	ldr	w1, [x20, #104]
   14548:	b	13b00 <yylex+0x16c>
   1454c:	add	x6, x6, #0x1
   14550:	str	x6, [x20, #64]
   14554:	b	13aa4 <yylex+0x110>
   14558:	ldr	x27, [x20, #64]
   1455c:	ldr	x0, [x20, #8320]
   14560:	sub	x27, x27, x0
   14564:	sub	w27, w27, #0x1
   14568:	cmp	w27, #0x0
   1456c:	b.le	1458c <yylex+0xbf8>
   14570:	mov	x0, #0x0                   	// #0
   14574:	ldr	x1, [sp, #112]
   14578:	ldrb	w1, [x1, x0]
   1457c:	strb	w1, [x28, x0]
   14580:	add	x0, x0, #0x1
   14584:	cmp	w27, w0
   14588:	b.gt	14574 <yylex+0xbe0>
   1458c:	ldr	x2, [x20, #24]
   14590:	ldr	x1, [x20, #40]
   14594:	ldr	x0, [x1, x2, lsl #3]
   14598:	ldr	w3, [x0, #56]
   1459c:	cmp	w3, #0x2
   145a0:	b.eq	146a4 <yylex+0xd10>  // b.none
   145a4:	ldr	w0, [x0, #24]
   145a8:	sub	w0, w0, w27
   145ac:	cmp	w0, #0x1
   145b0:	b.le	14708 <yylex+0xd74>
   145b4:	str	wzr, [x20, #52]
   145b8:	ldr	x1, [x20, #24]
   145bc:	ldr	x0, [x20, #40]
   145c0:	ldr	x0, [x0, x1, lsl #3]
   145c4:	str	wzr, [x0, #28]
   145c8:	ldr	w0, [x20, #52]
   145cc:	str	wzr, [sp, #112]
   145d0:	cbnz	w0, 145f0 <yylex+0xc5c>
   145d4:	cbz	w27, 1478c <yylex+0xdf8>
   145d8:	ldr	x1, [x20, #24]
   145dc:	ldr	x0, [x20, #40]
   145e0:	ldr	x0, [x0, x1, lsl #3]
   145e4:	str	w24, [x0, #56]
   145e8:	ldr	w0, [sp, #120]
   145ec:	str	w0, [sp, #112]
   145f0:	ldr	w1, [x20, #52]
   145f4:	add	w0, w27, w1
   145f8:	ldr	x3, [x20, #24]
   145fc:	ldr	x2, [x20, #40]
   14600:	ldr	x28, [x2, x3, lsl #3]
   14604:	ldr	w2, [x28, #24]
   14608:	cmp	w0, w2
   1460c:	b.gt	147a4 <yylex+0xe10>
   14610:	ldr	w0, [x20, #52]
   14614:	add	w27, w27, w0
   14618:	str	w27, [x20, #52]
   1461c:	ldr	x1, [x20, #24]
   14620:	ldr	x0, [x20, #40]
   14624:	ldr	x0, [x0, x1, lsl #3]
   14628:	ldr	x0, [x0, #8]
   1462c:	strb	wzr, [x0, w27, sxtw]
   14630:	ldr	x1, [x20, #24]
   14634:	ldr	x0, [x20, #40]
   14638:	ldr	x0, [x0, x1, lsl #3]
   1463c:	ldrsw	x1, [x20, #52]
   14640:	ldr	x0, [x0, #8]
   14644:	add	x0, x0, x1
   14648:	strb	wzr, [x0, #1]
   1464c:	ldr	x1, [x20, #24]
   14650:	ldr	x0, [x20, #40]
   14654:	ldr	x0, [x0, x1, lsl #3]
   14658:	ldr	x0, [x0, #8]
   1465c:	str	x0, [x20, #8320]
   14660:	ldr	w1, [sp, #112]
   14664:	cbz	w1, 1483c <yylex+0xea8>
   14668:	cmp	w1, #0x1
   1466c:	b.eq	14478 <yylex+0xae4>  // b.none
   14670:	ldr	x1, [x20, #24]
   14674:	ldr	x0, [x20, #40]
   14678:	ldr	x0, [x0, x1, lsl #3]
   1467c:	ldrsw	x1, [x20, #52]
   14680:	ldr	x0, [x0, #8]
   14684:	add	x0, x0, x1
   14688:	str	x0, [x20, #64]
   1468c:	mov	x0, x20
   14690:	bl	12990 <grub_script_yyparse+0xa80>
   14694:	mov	w1, w0
   14698:	ldr	x21, [x20, #64]
   1469c:	ldr	x23, [x20, #8320]
   146a0:	b	13b00 <yylex+0x16c>
   146a4:	str	wzr, [x20, #52]
   146a8:	ldr	x0, [x1, x2, lsl #3]
   146ac:	str	wzr, [x0, #28]
   146b0:	b	145c8 <yylex+0xc34>
   146b4:	add	w2, w1, #0x7
   146b8:	cmp	w1, #0x0
   146bc:	csel	w2, w2, w1, lt  // lt = tstop
   146c0:	add	w1, w1, w2, asr #3
   146c4:	str	w1, [x28, #24]
   146c8:	add	w1, w1, #0x2
   146cc:	sxtw	x1, w1
   146d0:	bl	0 <grub_realloc>
   146d4:	str	x0, [x28, #8]
   146d8:	cbz	x0, 14744 <yylex+0xdb0>
   146dc:	ldr	x0, [x28, #8]
   146e0:	ldr	w1, [sp, #128]
   146e4:	add	x0, x0, w1, sxtw
   146e8:	str	x0, [x20, #64]
   146ec:	ldr	x1, [x20, #24]
   146f0:	ldr	x0, [x20, #40]
   146f4:	ldr	x0, [x0, x1, lsl #3]
   146f8:	ldr	w0, [x0, #24]
   146fc:	sub	w0, w0, w27
   14700:	cmp	w0, #0x1
   14704:	b.gt	145b4 <yylex+0xc20>
   14708:	ldr	x1, [x20, #24]
   1470c:	ldr	x0, [x20, #40]
   14710:	ldr	x28, [x0, x1, lsl #3]
   14714:	ldr	x0, [x28, #8]
   14718:	ldr	x1, [x20, #64]
   1471c:	sub	x1, x1, x0
   14720:	str	x1, [sp, #128]
   14724:	ldr	w1, [x28, #32]
   14728:	cbz	w1, 14740 <yylex+0xdac>
   1472c:	ldr	w1, [x28, #24]
   14730:	cmp	w1, #0x0
   14734:	b.le	146b4 <yylex+0xd20>
   14738:	lsl	w1, w1, #1
   1473c:	b	146c4 <yylex+0xd30>
   14740:	str	xzr, [x28, #8]
   14744:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14748:	add	x0, x0, #0x0
   1474c:	ldr	x0, [x0]
   14750:	ldr	x1, [x0]
   14754:	ldr	x0, [x25]
   14758:	blr	x1
   1475c:	str	x0, [sp, #112]
   14760:	adrp	x1, 0 <grub_normal_free_menu-0x26c>
   14764:	add	x1, x1, #0x0
   14768:	ldr	x1, [x1]
   1476c:	ldr	x1, [x1]
   14770:	adrp	x2, 0 <grub_normal_free_menu-0x26c>
   14774:	ldr	x0, [x2]
   14778:	blr	x1
   1477c:	mov	x1, x0
   14780:	ldr	x0, [sp, #112]
   14784:	bl	0 <grub_printf>
   14788:	b	146dc <yylex+0xd48>
   1478c:	mov	x1, x20
   14790:	ldr	x0, [x20, #8]
   14794:	bl	131b0 <yyrestart>
   14798:	mov	w0, #0x1                   	// #1
   1479c:	str	w0, [sp, #112]
   147a0:	b	145f0 <yylex+0xc5c>
   147a4:	add	w0, w0, w1, asr #1
   147a8:	str	w0, [sp, #128]
   147ac:	sxtw	x1, w0
   147b0:	ldr	x0, [x28, #8]
   147b4:	bl	0 <grub_realloc>
   147b8:	str	x0, [x28, #8]
   147bc:	ldr	x1, [x20, #24]
   147c0:	ldr	x0, [x20, #40]
   147c4:	ldr	x0, [x0, x1, lsl #3]
   147c8:	ldr	x0, [x0, #8]
   147cc:	cbz	x0, 147ec <yylex+0xe58>
   147d0:	ldr	x1, [x20, #24]
   147d4:	ldr	x0, [x20, #40]
   147d8:	ldr	x1, [x0, x1, lsl #3]
   147dc:	ldr	w0, [sp, #128]
   147e0:	sub	w0, w0, #0x2
   147e4:	str	w0, [x1, #24]
   147e8:	b	14610 <yylex+0xc7c>
   147ec:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   147f0:	ldr	x28, [x0]
   147f4:	ldr	x1, [x28]
   147f8:	ldr	x0, [x25]
   147fc:	blr	x1
   14800:	str	x0, [sp, #136]
   14804:	ldr	x1, [x28]
   14808:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1480c:	ldr	x0, [x0]
   14810:	blr	x1
   14814:	mov	x1, x0
   14818:	ldr	x0, [sp, #136]
   1481c:	bl	0 <grub_printf>
   14820:	b	147d0 <yylex+0xe3c>
   14824:	ldr	w0, [x20, #80]
   14828:	cbnz	w0, 139f8 <yylex+0x64>
   1482c:	mov	x1, x20
   14830:	ldr	x0, [x20, #8]
   14834:	bl	131b0 <yyrestart>
   14838:	b	139f8 <yylex+0x64>
   1483c:	ldr	w1, [sp, #124]
   14840:	add	x0, x0, w1, sxtw
   14844:	str	x0, [x20, #64]
   14848:	mov	x0, x20
   1484c:	bl	12990 <grub_script_yyparse+0xa80>
   14850:	ldr	x6, [x20, #64]
   14854:	ldr	x23, [x20, #8320]
   14858:	b	13aa4 <yylex+0x110>
   1485c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14860:	ldr	x22, [x0]
   14864:	ldr	x1, [x22]
   14868:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   1486c:	ldr	x0, [x0]
   14870:	blr	x1
   14874:	mov	x21, x0
   14878:	ldr	x1, [x22]
   1487c:	adrp	x0, 0 <grub_normal_free_menu-0x26c>
   14880:	ldr	x0, [x0]
   14884:	blr	x1
   14888:	mov	x1, x0
   1488c:	mov	x0, x21
   14890:	bl	0 <grub_printf>
   14894:	b	139f8 <yylex+0x64>
   14898:	mov	w0, #0x102                 	// #258
   1489c:	b	13c9c <yylex+0x308>
   148a0:	ldr	x23, [x20, #8320]
   148a4:	b	14540 <yylex+0xbac>
	...
