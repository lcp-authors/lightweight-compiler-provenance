
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 1f000 <PyInit__elementtree@@Base+0x12790>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 20000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0x8620>:
    4250:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	nop
    4268:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x14790>
    426c:	add	x0, x0, #0x428
    4270:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    4274:	add	x1, x1, #0x428
    4278:	cmp	x1, x0
    427c:	b.eq	4294 <PySequence_Fast@plt+0x54>  // b.none
    4280:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4284:	ldr	x1, [x1, #3888]
    4288:	cbz	x1, 4294 <PySequence_Fast@plt+0x54>
    428c:	mov	x16, x1
    4290:	br	x16
    4294:	ret
    4298:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x14790>
    429c:	add	x0, x0, #0x428
    42a0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    42a4:	add	x1, x1, #0x428
    42a8:	sub	x1, x1, x0
    42ac:	lsr	x2, x1, #63
    42b0:	add	x1, x2, x1, asr #3
    42b4:	cmp	xzr, x1, asr #1
    42b8:	asr	x1, x1, #1
    42bc:	b.eq	42d4 <PySequence_Fast@plt+0x94>  // b.none
    42c0:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    42c4:	ldr	x2, [x2, #4048]
    42c8:	cbz	x2, 42d4 <PySequence_Fast@plt+0x94>
    42cc:	mov	x16, x2
    42d0:	br	x16
    42d4:	ret
    42d8:	stp	x29, x30, [sp, #-32]!
    42dc:	mov	x29, sp
    42e0:	str	x19, [sp, #16]
    42e4:	adrp	x19, 21000 <PyInit__elementtree@@Base+0x14790>
    42e8:	ldrb	w0, [x19, #1064]
    42ec:	cbnz	w0, 4314 <PySequence_Fast@plt+0xd4>
    42f0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    42f4:	ldr	x0, [x0, #3904]
    42f8:	cbz	x0, 4308 <PySequence_Fast@plt+0xc8>
    42fc:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    4300:	ldr	x0, [x0, #792]
    4304:	bl	3d10 <__cxa_finalize@plt>
    4308:	bl	4268 <PySequence_Fast@plt+0x28>
    430c:	mov	w0, #0x1                   	// #1
    4310:	strb	w0, [x19, #1064]
    4314:	ldr	x19, [sp, #16]
    4318:	ldp	x29, x30, [sp], #32
    431c:	ret
    4320:	b	4298 <PySequence_Fast@plt+0x58>
    4324:	nop
    4328:	stp	x29, x30, [sp, #-16]!
    432c:	mov	x1, #0x0                   	// #0
    4330:	mov	x29, sp
    4334:	ldr	x2, [x0, #304]
    4338:	blr	x2
    433c:	cbz	x0, 4360 <PySequence_Fast@plt+0x120>
    4340:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4344:	str	xzr, [x0, #48]
    4348:	ldr	x1, [x1, #3976]
    434c:	stp	x1, x1, [x0, #16]
    4350:	stp	x1, xzr, [x0, #32]
    4354:	ldr	x2, [x1]
    4358:	add	x2, x2, #0x3
    435c:	str	x2, [x1]
    4360:	ldp	x29, x30, [sp], #16
    4364:	ret
    4368:	mov	x4, x0
    436c:	ldr	x0, [x0, #8]
    4370:	ldr	x1, [x0, #168]
    4374:	tbz	w1, #28, 4450 <PySequence_Fast@plt+0x210>
    4378:	ldrb	w0, [x4, #32]
    437c:	ldr	x6, [x4, #16]
    4380:	tbnz	w0, #5, 44cc <PySequence_Fast@plt+0x28c>
    4384:	ldrb	w3, [x4, #32]
    4388:	cmp	x6, #0x2
    438c:	ldr	x5, [x4, #72]
    4390:	ubfx	x3, x3, #2, #3
    4394:	b.le	44ec <PySequence_Fast@plt+0x2ac>
    4398:	cmp	w3, #0x1
    439c:	b.eq	4550 <PySequence_Fast@plt+0x310>  // b.none
    43a0:	cmp	w3, #0x2
    43a4:	b.eq	459c <PySequence_Fast@plt+0x35c>  // b.none
    43a8:	ldr	w0, [x5]
    43ac:	cmp	w0, #0x7b
    43b0:	b.ne	45a8 <PySequence_Fast@plt+0x368>  // b.any
    43b4:	ldr	w1, [x5, #4]
    43b8:	mov	w0, #0x1                   	// #1
    43bc:	cmp	w1, #0x7d
    43c0:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    43c4:	cmp	w1, #0x2a
    43c8:	b.ne	43d8 <PySequence_Fast@plt+0x198>  // b.any
    43cc:	ldr	w1, [x5, #8]
    43d0:	cmp	w1, #0x7d
    43d4:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    43d8:	mov	x1, #0x0                   	// #0
    43dc:	nop
    43e0:	mov	w7, #0x40                  	// #64
    43e4:	b	441c <PySequence_Fast@plt+0x1dc>
    43e8:	cmp	w2, #0x7d
    43ec:	b.eq	450c <PySequence_Fast@plt+0x2cc>  // b.none
    43f0:	cbz	w0, 4410 <PySequence_Fast@plt+0x1d0>
    43f4:	cmp	w2, #0x2a
    43f8:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    43fc:	cmp	w2, #0x5b
    4400:	sub	w4, w2, #0x2e
    4404:	ccmp	w2, w7, #0x4, ne  // ne = any
    4408:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    440c:	b.ls	444c <PySequence_Fast@plt+0x20c>  // b.plast
    4410:	add	x1, x1, #0x1
    4414:	cmp	x6, x1
    4418:	b.le	4448 <PySequence_Fast@plt+0x208>
    441c:	cmp	w3, #0x1
    4420:	b.eq	4504 <PySequence_Fast@plt+0x2c4>  // b.none
    4424:	cmp	w3, #0x2
    4428:	b.eq	4514 <PySequence_Fast@plt+0x2d4>  // b.none
    442c:	ldr	w2, [x5, x1, lsl #2]
    4430:	cmp	w2, #0x7b
    4434:	b.ne	43e8 <PySequence_Fast@plt+0x1a8>  // b.any
    4438:	add	x1, x1, #0x1
    443c:	mov	w0, #0x0                   	// #0
    4440:	cmp	x6, x1
    4444:	b.gt	441c <PySequence_Fast@plt+0x1dc>
    4448:	mov	w0, #0x0                   	// #0
    444c:	ret
    4450:	mov	w0, #0x1                   	// #1
    4454:	tbz	w1, #27, 444c <PySequence_Fast@plt+0x20c>
    4458:	ldr	x5, [x4, #16]
    445c:	cmp	x5, #0x2
    4460:	b.gt	451c <PySequence_Fast@plt+0x2dc>
    4464:	cmp	x5, #0x0
    4468:	mov	x1, #0x0                   	// #0
    446c:	b.le	4448 <PySequence_Fast@plt+0x208>
    4470:	add	x4, x4, #0x20
    4474:	mov	w6, #0x5b                  	// #91
    4478:	b	44b8 <PySequence_Fast@plt+0x278>
    447c:	cmp	w2, #0x7d
    4480:	b.eq	4594 <PySequence_Fast@plt+0x354>  // b.none
    4484:	sub	w3, w2, #0x2e
    4488:	cmp	w2, #0x40
    448c:	and	w3, w3, #0xff
    4490:	cbz	w0, 44ac <PySequence_Fast@plt+0x26c>
    4494:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    4498:	cset	w3, ls  // ls = plast
    449c:	cmp	w2, #0x2a
    44a0:	ccmp	w2, w6, #0x4, ne  // ne = any
    44a4:	csinc	w2, w3, wzr, ne  // ne = any
    44a8:	cbnz	w2, 444c <PySequence_Fast@plt+0x20c>
    44ac:	add	x1, x1, #0x1
    44b0:	cmp	x5, x1
    44b4:	b.le	4448 <PySequence_Fast@plt+0x208>
    44b8:	ldrb	w2, [x4, x1]
    44bc:	cmp	w2, #0x7b
    44c0:	b.ne	447c <PySequence_Fast@plt+0x23c>  // b.any
    44c4:	mov	w0, #0x0                   	// #0
    44c8:	b	44ac <PySequence_Fast@plt+0x26c>
    44cc:	ldrb	w3, [x4, #32]
    44d0:	tst	x0, #0x40
    44d4:	add	x5, x4, #0x30
    44d8:	add	x0, x4, #0x48
    44dc:	csel	x5, x0, x5, eq  // eq = none
    44e0:	cmp	x6, #0x2
    44e4:	ubfx	x3, x3, #2, #3
    44e8:	b.gt	4398 <PySequence_Fast@plt+0x158>
    44ec:	cmp	x6, #0x0
    44f0:	mov	w0, #0x1                   	// #1
    44f4:	mov	x1, #0x0                   	// #0
    44f8:	b.gt	43e0 <PySequence_Fast@plt+0x1a0>
    44fc:	mov	w0, #0x0                   	// #0
    4500:	b	444c <PySequence_Fast@plt+0x20c>
    4504:	ldrb	w2, [x5, x1]
    4508:	b	4430 <PySequence_Fast@plt+0x1f0>
    450c:	mov	w0, #0x1                   	// #1
    4510:	b	4410 <PySequence_Fast@plt+0x1d0>
    4514:	ldrh	w2, [x5, x1, lsl #1]
    4518:	b	4430 <PySequence_Fast@plt+0x1f0>
    451c:	ldrb	w2, [x4, #32]
    4520:	mov	x1, #0x0                   	// #0
    4524:	cmp	w2, #0x7b
    4528:	b.ne	4470 <PySequence_Fast@plt+0x230>  // b.any
    452c:	ldrb	w2, [x4, #33]
    4530:	cmp	w2, #0x7d
    4534:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    4538:	cmp	w2, #0x2a
    453c:	b.ne	4470 <PySequence_Fast@plt+0x230>  // b.any
    4540:	ldrb	w2, [x4, #34]
    4544:	cmp	w2, #0x7d
    4548:	b.ne	4470 <PySequence_Fast@plt+0x230>  // b.any
    454c:	ret
    4550:	ldrb	w0, [x5]
    4554:	cmp	w0, #0x7b
    4558:	b.ne	4588 <PySequence_Fast@plt+0x348>  // b.any
    455c:	ldrb	w1, [x5, #1]
    4560:	mov	w0, w3
    4564:	cmp	w1, #0x7d
    4568:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    456c:	cmp	w1, #0x2a
    4570:	b.ne	4588 <PySequence_Fast@plt+0x348>  // b.any
    4574:	ldrb	w1, [x5, #2]
    4578:	cmp	w1, #0x7d
    457c:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    4580:	mov	x1, #0x0                   	// #0
    4584:	b	43e0 <PySequence_Fast@plt+0x1a0>
    4588:	mov	w0, w3
    458c:	mov	x1, #0x0                   	// #0
    4590:	b	43e0 <PySequence_Fast@plt+0x1a0>
    4594:	mov	w0, #0x1                   	// #1
    4598:	b	44ac <PySequence_Fast@plt+0x26c>
    459c:	ldrh	w0, [x5]
    45a0:	cmp	w0, #0x7b
    45a4:	b.eq	45b4 <PySequence_Fast@plt+0x374>  // b.none
    45a8:	mov	w0, #0x1                   	// #1
    45ac:	mov	x1, #0x0                   	// #0
    45b0:	b	43e0 <PySequence_Fast@plt+0x1a0>
    45b4:	ldrh	w1, [x5, #2]
    45b8:	mov	w0, #0x1                   	// #1
    45bc:	cmp	w1, #0x7d
    45c0:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    45c4:	cmp	w1, #0x2a
    45c8:	b.ne	43d8 <PySequence_Fast@plt+0x198>  // b.any
    45cc:	ldrh	w1, [x5, #4]
    45d0:	cmp	w1, #0x7d
    45d4:	b.eq	444c <PySequence_Fast@plt+0x20c>  // b.none
    45d8:	mov	x1, #0x0                   	// #0
    45dc:	b	43e0 <PySequence_Fast@plt+0x1a0>
    45e0:	ldr	x0, [x0, #40]
    45e4:	cbz	x0, 45f0 <PySequence_Fast@plt+0x3b0>
    45e8:	ldr	x0, [x0, #8]
    45ec:	ret
    45f0:	mov	x0, #0x0                   	// #0
    45f4:	ret
    45f8:	ldr	x0, [x0, #16]
    45fc:	ldr	x1, [x0]
    4600:	add	x1, x1, #0x1
    4604:	str	x1, [x0]
    4608:	ret
    460c:	nop
    4610:	stp	x29, x30, [sp, #-16]!
    4614:	mov	x1, #0x0                   	// #0
    4618:	mov	x29, sp
    461c:	ldr	x2, [x0, #304]
    4620:	blr	x2
    4624:	cbz	x0, 4644 <PySequence_Fast@plt+0x404>
    4628:	stp	xzr, xzr, [x0, #16]
    462c:	stp	xzr, xzr, [x0, #32]
    4630:	stp	xzr, xzr, [x0, #48]
    4634:	stp	xzr, xzr, [x0, #64]
    4638:	stp	xzr, xzr, [x0, #80]
    463c:	stp	xzr, xzr, [x0, #96]
    4640:	str	xzr, [x0, #112]
    4644:	ldp	x29, x30, [sp], #16
    4648:	ret
    464c:	nop
    4650:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4654:	ldr	x0, [x0, #16]
    4658:	ldr	x1, [x1, #3976]
    465c:	cmp	x0, #0x0
    4660:	csel	x0, x1, x0, eq  // eq = none
    4664:	ldr	x1, [x0]
    4668:	add	x1, x1, #0x1
    466c:	str	x1, [x0]
    4670:	ret
    4674:	nop
    4678:	stp	x29, x30, [sp, #-48]!
    467c:	mov	x29, sp
    4680:	stp	x19, x20, [sp, #16]
    4684:	mov	x20, x1
    4688:	str	x21, [sp, #32]
    468c:	mov	x21, x2
    4690:	bl	3e10 <PyModule_GetState@plt>
    4694:	mov	x19, x0
    4698:	ldr	x0, [x0]
    469c:	cbz	x0, 46ac <PySequence_Fast@plt+0x46c>
    46a0:	mov	x1, x21
    46a4:	blr	x20
    46a8:	cbnz	w0, 4708 <PySequence_Fast@plt+0x4c8>
    46ac:	ldr	x0, [x19, #8]
    46b0:	cbz	x0, 46c0 <PySequence_Fast@plt+0x480>
    46b4:	mov	x1, x21
    46b8:	blr	x20
    46bc:	cbnz	w0, 4708 <PySequence_Fast@plt+0x4c8>
    46c0:	ldr	x0, [x19, #16]
    46c4:	cbz	x0, 46d4 <PySequence_Fast@plt+0x494>
    46c8:	mov	x1, x21
    46cc:	blr	x20
    46d0:	cbnz	w0, 4708 <PySequence_Fast@plt+0x4c8>
    46d4:	ldr	x0, [x19, #24]
    46d8:	cbz	x0, 46e8 <PySequence_Fast@plt+0x4a8>
    46dc:	mov	x1, x21
    46e0:	blr	x20
    46e4:	cbnz	w0, 4708 <PySequence_Fast@plt+0x4c8>
    46e8:	ldr	x0, [x19, #32]
    46ec:	cbz	x0, 4708 <PySequence_Fast@plt+0x4c8>
    46f0:	mov	x1, x21
    46f4:	mov	x16, x20
    46f8:	ldp	x19, x20, [sp, #16]
    46fc:	ldr	x21, [sp, #32]
    4700:	ldp	x29, x30, [sp], #48
    4704:	br	x16
    4708:	ldp	x19, x20, [sp, #16]
    470c:	ldr	x21, [sp, #32]
    4710:	ldp	x29, x30, [sp], #48
    4714:	ret
    4718:	sub	sp, sp, #0x50
    471c:	stp	x29, x30, [sp, #16]
    4720:	add	x29, sp, #0x10
    4724:	stp	x19, x20, [sp, #32]
    4728:	mov	x20, x0
    472c:	mov	x0, x1
    4730:	stp	x21, x22, [sp, #48]
    4734:	mov	x1, x2
    4738:	cbz	x3, 47bc <PySequence_Fast@plt+0x57c>
    473c:	ldr	x21, [x3, #16]
    4740:	add	x21, x2, x21
    4744:	add	x2, sp, #0x40
    4748:	str	x2, [sp]
    474c:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    4750:	mov	w7, #0x0                   	// #0
    4754:	add	x4, x19, #0x9b8
    4758:	mov	w6, #0x2                   	// #2
    475c:	mov	w5, #0x1                   	// #1
    4760:	mov	x2, #0x0                   	// #0
    4764:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    4768:	cbz	x0, 47ec <PySequence_Fast@plt+0x5ac>
    476c:	cmp	x21, #0x1
    4770:	ldr	x22, [x0]
    4774:	b.eq	47e0 <PySequence_Fast@plt+0x5a0>  // b.none
    4778:	ldr	x21, [x0, #8]
    477c:	add	x19, x19, #0x9b8
    4780:	add	x0, x19, #0x40
    4784:	bl	3fc0 <PyState_FindModule@plt>
    4788:	bl	3e10 <PyModule_GetState@plt>
    478c:	ldr	x0, [x0, #16]
    4790:	add	x1, x19, #0xa8
    4794:	mov	x4, x21
    4798:	mov	x3, x22
    479c:	mov	x2, x20
    47a0:	mov	x5, #0x0                   	// #0
    47a4:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    47a8:	ldp	x29, x30, [sp, #16]
    47ac:	ldp	x19, x20, [sp, #32]
    47b0:	ldp	x21, x22, [sp, #48]
    47b4:	add	sp, sp, #0x50
    47b8:	ret
    47bc:	sub	x2, x2, #0x1
    47c0:	mov	x21, x1
    47c4:	cmp	x2, #0x1
    47c8:	b.hi	4744 <PySequence_Fast@plt+0x504>  // b.pmore
    47cc:	cbz	x0, 4744 <PySequence_Fast@plt+0x504>
    47d0:	cmp	x21, #0x1
    47d4:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    47d8:	ldr	x22, [x0]
    47dc:	b.ne	4778 <PySequence_Fast@plt+0x538>  // b.any
    47e0:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    47e4:	ldr	x21, [x21, #3976]
    47e8:	b	477c <PySequence_Fast@plt+0x53c>
    47ec:	mov	x0, #0x0                   	// #0
    47f0:	b	47a8 <PySequence_Fast@plt+0x568>
    47f4:	nop
    47f8:	stp	x29, x30, [sp, #-48]!
    47fc:	mov	x29, sp
    4800:	stp	x19, x20, [sp, #16]
    4804:	mov	x19, x0
    4808:	mov	x20, x1
    480c:	ldr	x0, [x0, #48]
    4810:	cbz	x0, 48f4 <PySequence_Fast@plt+0x6b4>
    4814:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4818:	ldr	x2, [x0, #8]
    481c:	ldr	x1, [x1, #3912]
    4820:	cmp	x2, x1
    4824:	b.eq	4888 <PySequence_Fast@plt+0x648>  // b.none
    4828:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    482c:	ldr	x1, [x1, #4064]
    4830:	cmp	x2, x1
    4834:	b.eq	48e0 <PySequence_Fast@plt+0x6a0>  // b.none
    4838:	mov	x0, #0x2                   	// #2
    483c:	bl	3c50 <PyList_New@plt>
    4840:	cbz	x0, 4920 <PySequence_Fast@plt+0x6e0>
    4844:	ldr	x3, [x0, #24]
    4848:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    484c:	ldr	x1, [x20]
    4850:	ldr	x4, [x19, #48]
    4854:	str	x4, [x3]
    4858:	add	x1, x1, #0x1
    485c:	str	x1, [x20]
    4860:	str	x20, [x3, #8]
    4864:	str	x0, [x19, #48]
    4868:	ldr	x1, [x2, #3976]
    486c:	mov	x0, x1
    4870:	ldr	x2, [x1]
    4874:	add	x2, x2, #0x1
    4878:	str	x2, [x1]
    487c:	ldp	x19, x20, [sp, #16]
    4880:	ldp	x29, x30, [sp], #48
    4884:	ret
    4888:	ldr	x1, [x0]
    488c:	cmp	x1, #0x1
    4890:	b.ne	4828 <PySequence_Fast@plt+0x5e8>  // b.any
    4894:	ldr	x1, [x20, #8]
    4898:	cmp	x1, x2
    489c:	b.ne	4828 <PySequence_Fast@plt+0x5e8>  // b.any
    48a0:	ldr	x1, [x20, #16]
    48a4:	cmp	x1, #0x1
    48a8:	b.ne	4828 <PySequence_Fast@plt+0x5e8>  // b.any
    48ac:	str	x21, [sp, #32]
    48b0:	ldr	x21, [x0, #16]
    48b4:	add	x0, x19, #0x30
    48b8:	add	x1, x21, #0x1
    48bc:	bl	3ca0 <_PyBytes_Resize@plt>
    48c0:	tbnz	w0, #31, 491c <PySequence_Fast@plt+0x6dc>
    48c4:	ldr	x0, [x19, #48]
    48c8:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    48cc:	ldrb	w1, [x20, #32]
    48d0:	add	x0, x0, x21
    48d4:	strb	w1, [x0, #32]
    48d8:	ldr	x21, [sp, #32]
    48dc:	b	4868 <PySequence_Fast@plt+0x628>
    48e0:	mov	x1, x20
    48e4:	bl	3f00 <PyList_Append@plt>
    48e8:	tbnz	w0, #31, 4920 <PySequence_Fast@plt+0x6e0>
    48ec:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    48f0:	b	4868 <PySequence_Fast@plt+0x628>
    48f4:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    48f8:	ldr	x0, [x19, #32]
    48fc:	ldr	x1, [x2, #3976]
    4900:	cmp	x0, x1
    4904:	b.eq	4928 <PySequence_Fast@plt+0x6e8>  // b.none
    4908:	ldr	x0, [x20]
    490c:	add	x0, x0, #0x1
    4910:	str	x0, [x20]
    4914:	str	x20, [x19, #48]
    4918:	b	4868 <PySequence_Fast@plt+0x628>
    491c:	ldr	x21, [sp, #32]
    4920:	mov	x0, #0x0                   	// #0
    4924:	b	487c <PySequence_Fast@plt+0x63c>
    4928:	ldr	x1, [x0]
    492c:	add	x1, x1, #0x1
    4930:	str	x1, [x0]
    4934:	b	487c <PySequence_Fast@plt+0x63c>
    4938:	b	47f8 <PySequence_Fast@plt+0x5b8>
    493c:	nop
    4940:	mov	w2, #0x2                   	// #2
    4944:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    4948:	mov	w1, w2
    494c:	add	x0, x0, #0xad8
    4950:	mov	w3, #0x9                   	// #9
    4954:	b	3c30 <PyUnicode_FromFormat@plt>
    4958:	stp	x29, x30, [sp, #-32]!
    495c:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    4960:	mov	x29, sp
    4964:	stp	x19, x20, [sp, #16]
    4968:	mov	x20, x0
    496c:	add	x0, x1, #0x510
    4970:	mov	x1, #0x0                   	// #0
    4974:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    4978:	cbz	x0, 49c4 <PySequence_Fast@plt+0x784>
    497c:	mov	x19, x0
    4980:	mov	x1, x20
    4984:	bl	3d20 <PyUnicode_Join@plt>
    4988:	mov	x20, x0
    498c:	ldr	x1, [x19]
    4990:	sub	x1, x1, #0x1
    4994:	str	x1, [x19]
    4998:	cbz	x1, 49ac <PySequence_Fast@plt+0x76c>
    499c:	mov	x0, x20
    49a0:	ldp	x19, x20, [sp, #16]
    49a4:	ldp	x29, x30, [sp], #32
    49a8:	ret
    49ac:	mov	x0, x19
    49b0:	bl	3d70 <_Py_Dealloc@plt>
    49b4:	mov	x0, x20
    49b8:	ldp	x19, x20, [sp, #16]
    49bc:	ldp	x29, x30, [sp], #32
    49c0:	ret
    49c4:	mov	x20, #0x0                   	// #0
    49c8:	mov	x0, x20
    49cc:	ldp	x19, x20, [sp, #16]
    49d0:	ldp	x29, x30, [sp], #32
    49d4:	ret
    49d8:	stp	x29, x30, [sp, #-64]!
    49dc:	mov	x29, sp
    49e0:	stp	x21, x22, [sp, #32]
    49e4:	mov	x21, x0
    49e8:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    49ec:	stp	x19, x20, [sp, #16]
    49f0:	mov	x20, x1
    49f4:	add	x0, x0, #0x320
    49f8:	ldr	x1, [x21, #8]
    49fc:	stp	x23, x24, [sp, #48]
    4a00:	mov	x24, x3
    4a04:	cmp	x1, x0
    4a08:	b.eq	4b40 <PySequence_Fast@plt+0x900>  // b.none
    4a0c:	mov	x1, x24
    4a10:	mov	x0, x21
    4a14:	bl	40f0 <_PyObject_GetAttrId@plt>
    4a18:	mov	x19, x0
    4a1c:	cbz	x0, 4a78 <PySequence_Fast@plt+0x838>
    4a20:	ldr	x0, [x20]
    4a24:	bl	4958 <PySequence_Fast@plt+0x718>
    4a28:	mov	x22, x0
    4a2c:	cbz	x0, 4ba0 <PySequence_Fast@plt+0x960>
    4a30:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    4a34:	ldr	x0, [x0, #3976]
    4a38:	cmp	x19, x0
    4a3c:	b.eq	4a80 <PySequence_Fast@plt+0x840>  // b.none
    4a40:	mov	x1, x22
    4a44:	mov	x0, x19
    4a48:	bl	3cf0 <PyNumber_Add@plt>
    4a4c:	mov	x23, x0
    4a50:	ldr	x1, [x22]
    4a54:	sub	x0, x1, #0x1
    4a58:	str	x0, [x22]
    4a5c:	cbz	x0, 4b88 <PySequence_Fast@plt+0x948>
    4a60:	ldr	x0, [x19]
    4a64:	sub	x0, x0, #0x1
    4a68:	str	x0, [x19]
    4a6c:	cbz	x0, 4b78 <PySequence_Fast@plt+0x938>
    4a70:	cbnz	x23, 4a94 <PySequence_Fast@plt+0x854>
    4a74:	nop
    4a78:	mov	w0, #0xffffffff            	// #-1
    4a7c:	b	4adc <PySequence_Fast@plt+0x89c>
    4a80:	ldr	x0, [x19]
    4a84:	mov	x23, x22
    4a88:	sub	x0, x0, #0x1
    4a8c:	str	x0, [x19]
    4a90:	cbz	x0, 4b94 <PySequence_Fast@plt+0x954>
    4a94:	mov	x1, x24
    4a98:	mov	x0, x21
    4a9c:	mov	x2, x23
    4aa0:	bl	4000 <_PyObject_SetAttrId@plt>
    4aa4:	ldr	x1, [x23]
    4aa8:	mov	w19, w0
    4aac:	sub	x1, x1, #0x1
    4ab0:	str	x1, [x23]
    4ab4:	cbz	x1, 4af0 <PySequence_Fast@plt+0x8b0>
    4ab8:	tbnz	w19, #31, 4a78 <PySequence_Fast@plt+0x838>
    4abc:	ldr	x0, [x20]
    4ac0:	cbz	x0, 4ad8 <PySequence_Fast@plt+0x898>
    4ac4:	ldr	x1, [x0]
    4ac8:	str	xzr, [x20]
    4acc:	sub	x1, x1, #0x1
    4ad0:	str	x1, [x0]
    4ad4:	cbz	x1, 4b38 <PySequence_Fast@plt+0x8f8>
    4ad8:	mov	w0, #0x0                   	// #0
    4adc:	ldp	x19, x20, [sp, #16]
    4ae0:	ldp	x21, x22, [sp, #32]
    4ae4:	ldp	x23, x24, [sp, #48]
    4ae8:	ldp	x29, x30, [sp], #64
    4aec:	ret
    4af0:	mov	x0, x23
    4af4:	bl	3d70 <_Py_Dealloc@plt>
    4af8:	b	4ab8 <PySequence_Fast@plt+0x878>
    4afc:	ldr	x5, [x20]
    4b00:	adrp	x4, 1f000 <PyInit__elementtree@@Base+0x12790>
    4b04:	ldr	x1, [x0]
    4b08:	and	x6, x5, #0xfffffffffffffffe
    4b0c:	ldr	x4, [x4, #4064]
    4b10:	sub	x1, x1, #0x1
    4b14:	ldr	x3, [x5, #8]
    4b18:	cmp	x3, x4
    4b1c:	cset	x3, eq  // eq = none
    4b20:	orr	x3, x3, x6
    4b24:	str	x3, [x2]
    4b28:	str	xzr, [x20]
    4b2c:	str	x1, [x0]
    4b30:	cbnz	x1, 4ad8 <PySequence_Fast@plt+0x898>
    4b34:	nop
    4b38:	bl	3d70 <_Py_Dealloc@plt>
    4b3c:	b	4ad8 <PySequence_Fast@plt+0x898>
    4b40:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4b44:	ldr	x3, [x2]
    4b48:	ldr	x1, [x1, #3976]
    4b4c:	and	x0, x3, #0xfffffffffffffffe
    4b50:	cmp	x0, x1
    4b54:	b.eq	4afc <PySequence_Fast@plt+0x8bc>  // b.none
    4b58:	tbz	w3, #0, 4a0c <PySequence_Fast@plt+0x7cc>
    4b5c:	ldr	x3, [x20]
    4b60:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4b64:	mov	x1, x2
    4b68:	bl	3d30 <PyList_SetSlice@plt>
    4b6c:	tbz	w0, #31, 4abc <PySequence_Fast@plt+0x87c>
    4b70:	mov	w0, #0xffffffff            	// #-1
    4b74:	b	4adc <PySequence_Fast@plt+0x89c>
    4b78:	mov	x0, x19
    4b7c:	bl	3d70 <_Py_Dealloc@plt>
    4b80:	cbnz	x23, 4a94 <PySequence_Fast@plt+0x854>
    4b84:	b	4a78 <PySequence_Fast@plt+0x838>
    4b88:	mov	x0, x22
    4b8c:	bl	3d70 <_Py_Dealloc@plt>
    4b90:	b	4a60 <PySequence_Fast@plt+0x820>
    4b94:	mov	x0, x19
    4b98:	bl	3d70 <_Py_Dealloc@plt>
    4b9c:	b	4a94 <PySequence_Fast@plt+0x854>
    4ba0:	ldr	x0, [x19]
    4ba4:	sub	x0, x0, #0x1
    4ba8:	str	x0, [x19]
    4bac:	cbnz	x0, 4a78 <PySequence_Fast@plt+0x838>
    4bb0:	mov	x0, x19
    4bb4:	bl	3d70 <_Py_Dealloc@plt>
    4bb8:	mov	w0, #0xffffffff            	// #-1
    4bbc:	b	4adc <PySequence_Fast@plt+0x89c>
    4bc0:	stp	x29, x30, [sp, #-32]!
    4bc4:	mov	x1, #0x0                   	// #0
    4bc8:	mov	x29, sp
    4bcc:	ldr	x2, [x0, #304]
    4bd0:	str	x19, [sp, #16]
    4bd4:	blr	x2
    4bd8:	cbz	x0, 4c40 <PySequence_Fast@plt+0xa00>
    4bdc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    4be0:	mov	x19, x0
    4be4:	mov	x0, #0x14                  	// #20
    4be8:	ldr	x1, [x1, #3976]
    4bec:	stp	xzr, x1, [x19, #16]
    4bf0:	str	x1, [x19, #32]
    4bf4:	ldr	x2, [x1]
    4bf8:	str	xzr, [x19, #48]
    4bfc:	stp	xzr, xzr, [x19, #72]
    4c00:	add	x2, x2, #0x2
    4c04:	str	x2, [x1]
    4c08:	str	xzr, [x19, #88]
    4c0c:	bl	3c50 <PyList_New@plt>
    4c10:	str	x0, [x19, #56]
    4c14:	cbz	x0, 4c54 <PySequence_Fast@plt+0xa14>
    4c18:	str	xzr, [x19, #64]
    4c1c:	stp	xzr, xzr, [x19, #96]
    4c20:	stp	xzr, xzr, [x19, #112]
    4c24:	stp	xzr, xzr, [x19, #128]
    4c28:	str	xzr, [x19, #144]
    4c2c:	strh	wzr, [x19, #152]
    4c30:	mov	x0, x19
    4c34:	ldr	x19, [sp, #16]
    4c38:	ldp	x29, x30, [sp], #32
    4c3c:	ret
    4c40:	mov	x19, #0x0                   	// #0
    4c44:	mov	x0, x19
    4c48:	ldr	x19, [sp, #16]
    4c4c:	ldp	x29, x30, [sp], #32
    4c50:	ret
    4c54:	ldr	x0, [x19, #24]
    4c58:	ldr	x1, [x0]
    4c5c:	sub	x1, x1, #0x1
    4c60:	str	x1, [x0]
    4c64:	cbz	x1, 4c9c <PySequence_Fast@plt+0xa5c>
    4c68:	ldr	x0, [x19, #32]
    4c6c:	ldr	x1, [x0]
    4c70:	sub	x1, x1, #0x1
    4c74:	str	x1, [x0]
    4c78:	cbz	x1, 4ca4 <PySequence_Fast@plt+0xa64>
    4c7c:	ldr	x0, [x19]
    4c80:	sub	x0, x0, #0x1
    4c84:	str	x0, [x19]
    4c88:	cbnz	x0, 4c40 <PySequence_Fast@plt+0xa00>
    4c8c:	mov	x0, x19
    4c90:	mov	x19, #0x0                   	// #0
    4c94:	bl	3d70 <_Py_Dealloc@plt>
    4c98:	b	4c30 <PySequence_Fast@plt+0x9f0>
    4c9c:	bl	3d70 <_Py_Dealloc@plt>
    4ca0:	b	4c68 <PySequence_Fast@plt+0xa28>
    4ca4:	bl	3d70 <_Py_Dealloc@plt>
    4ca8:	b	4c7c <PySequence_Fast@plt+0xa3c>
    4cac:	nop
    4cb0:	stp	x29, x30, [sp, #-32]!
    4cb4:	mov	x29, sp
    4cb8:	str	x19, [sp, #16]
    4cbc:	mov	x19, x0
    4cc0:	ldr	x0, [x0, #16]
    4cc4:	cbz	x0, 4cdc <PySequence_Fast@plt+0xa9c>
    4cc8:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    4ccc:	ldr	x1, [x1, #1072]
    4cd0:	ldr	x1, [x1, #72]
    4cd4:	str	xzr, [x19, #16]
    4cd8:	blr	x1
    4cdc:	ldr	x0, [x19, #112]
    4ce0:	cbz	x0, 4cf8 <PySequence_Fast@plt+0xab8>
    4ce4:	ldr	x1, [x0]
    4ce8:	str	xzr, [x19, #112]
    4cec:	sub	x1, x1, #0x1
    4cf0:	str	x1, [x0]
    4cf4:	cbz	x1, 4ea0 <PySequence_Fast@plt+0xc60>
    4cf8:	ldr	x0, [x19, #96]
    4cfc:	cbz	x0, 4d14 <PySequence_Fast@plt+0xad4>
    4d00:	ldr	x1, [x0]
    4d04:	str	xzr, [x19, #96]
    4d08:	sub	x1, x1, #0x1
    4d0c:	str	x1, [x0]
    4d10:	cbz	x1, 4e98 <PySequence_Fast@plt+0xc58>
    4d14:	ldr	x0, [x19, #88]
    4d18:	cbz	x0, 4d30 <PySequence_Fast@plt+0xaf0>
    4d1c:	ldr	x1, [x0]
    4d20:	str	xzr, [x19, #88]
    4d24:	sub	x1, x1, #0x1
    4d28:	str	x1, [x0]
    4d2c:	cbz	x1, 4e90 <PySequence_Fast@plt+0xc50>
    4d30:	ldr	x0, [x19, #80]
    4d34:	cbz	x0, 4d4c <PySequence_Fast@plt+0xb0c>
    4d38:	ldr	x1, [x0]
    4d3c:	str	xzr, [x19, #80]
    4d40:	sub	x1, x1, #0x1
    4d44:	str	x1, [x0]
    4d48:	cbz	x1, 4e88 <PySequence_Fast@plt+0xc48>
    4d4c:	ldr	x0, [x19, #72]
    4d50:	cbz	x0, 4d68 <PySequence_Fast@plt+0xb28>
    4d54:	ldr	x1, [x0]
    4d58:	str	xzr, [x19, #72]
    4d5c:	sub	x1, x1, #0x1
    4d60:	str	x1, [x0]
    4d64:	cbz	x1, 4e80 <PySequence_Fast@plt+0xc40>
    4d68:	ldr	x0, [x19, #64]
    4d6c:	cbz	x0, 4d84 <PySequence_Fast@plt+0xb44>
    4d70:	ldr	x1, [x0]
    4d74:	str	xzr, [x19, #64]
    4d78:	sub	x1, x1, #0x1
    4d7c:	str	x1, [x0]
    4d80:	cbz	x1, 4e78 <PySequence_Fast@plt+0xc38>
    4d84:	ldr	x0, [x19, #48]
    4d88:	cbz	x0, 4da0 <PySequence_Fast@plt+0xb60>
    4d8c:	ldr	x1, [x0]
    4d90:	str	xzr, [x19, #48]
    4d94:	sub	x1, x1, #0x1
    4d98:	str	x1, [x0]
    4d9c:	cbz	x1, 4e70 <PySequence_Fast@plt+0xc30>
    4da0:	ldr	x0, [x19, #56]
    4da4:	cbz	x0, 4dbc <PySequence_Fast@plt+0xb7c>
    4da8:	ldr	x1, [x0]
    4dac:	str	xzr, [x19, #56]
    4db0:	sub	x1, x1, #0x1
    4db4:	str	x1, [x0]
    4db8:	cbz	x1, 4e68 <PySequence_Fast@plt+0xc28>
    4dbc:	ldr	x0, [x19, #104]
    4dc0:	cbz	x0, 4dd8 <PySequence_Fast@plt+0xb98>
    4dc4:	ldr	x1, [x0]
    4dc8:	str	xzr, [x19, #104]
    4dcc:	sub	x1, x1, #0x1
    4dd0:	str	x1, [x0]
    4dd4:	cbz	x1, 4e60 <PySequence_Fast@plt+0xc20>
    4dd8:	ldr	x0, [x19, #24]
    4ddc:	cbz	x0, 4df4 <PySequence_Fast@plt+0xbb4>
    4de0:	ldr	x1, [x0]
    4de4:	str	xzr, [x19, #24]
    4de8:	sub	x1, x1, #0x1
    4dec:	str	x1, [x0]
    4df0:	cbz	x1, 4e58 <PySequence_Fast@plt+0xc18>
    4df4:	ldr	x0, [x19, #32]
    4df8:	cbz	x0, 4e10 <PySequence_Fast@plt+0xbd0>
    4dfc:	ldr	x1, [x0]
    4e00:	str	xzr, [x19, #32]
    4e04:	sub	x1, x1, #0x1
    4e08:	str	x1, [x0]
    4e0c:	cbz	x1, 4e50 <PySequence_Fast@plt+0xc10>
    4e10:	ldr	x0, [x19, #40]
    4e14:	cbz	x0, 4e2c <PySequence_Fast@plt+0xbec>
    4e18:	ldr	x1, [x0]
    4e1c:	str	xzr, [x19, #40]
    4e20:	sub	x1, x1, #0x1
    4e24:	str	x1, [x0]
    4e28:	cbz	x1, 4e3c <PySequence_Fast@plt+0xbfc>
    4e2c:	mov	w0, #0x0                   	// #0
    4e30:	ldr	x19, [sp, #16]
    4e34:	ldp	x29, x30, [sp], #32
    4e38:	ret
    4e3c:	bl	3d70 <_Py_Dealloc@plt>
    4e40:	mov	w0, #0x0                   	// #0
    4e44:	ldr	x19, [sp, #16]
    4e48:	ldp	x29, x30, [sp], #32
    4e4c:	ret
    4e50:	bl	3d70 <_Py_Dealloc@plt>
    4e54:	b	4e10 <PySequence_Fast@plt+0xbd0>
    4e58:	bl	3d70 <_Py_Dealloc@plt>
    4e5c:	b	4df4 <PySequence_Fast@plt+0xbb4>
    4e60:	bl	3d70 <_Py_Dealloc@plt>
    4e64:	b	4dd8 <PySequence_Fast@plt+0xb98>
    4e68:	bl	3d70 <_Py_Dealloc@plt>
    4e6c:	b	4dbc <PySequence_Fast@plt+0xb7c>
    4e70:	bl	3d70 <_Py_Dealloc@plt>
    4e74:	b	4da0 <PySequence_Fast@plt+0xb60>
    4e78:	bl	3d70 <_Py_Dealloc@plt>
    4e7c:	b	4d84 <PySequence_Fast@plt+0xb44>
    4e80:	bl	3d70 <_Py_Dealloc@plt>
    4e84:	b	4d68 <PySequence_Fast@plt+0xb28>
    4e88:	bl	3d70 <_Py_Dealloc@plt>
    4e8c:	b	4d4c <PySequence_Fast@plt+0xb0c>
    4e90:	bl	3d70 <_Py_Dealloc@plt>
    4e94:	b	4d30 <PySequence_Fast@plt+0xaf0>
    4e98:	bl	3d70 <_Py_Dealloc@plt>
    4e9c:	b	4d14 <PySequence_Fast@plt+0xad4>
    4ea0:	bl	3d70 <_Py_Dealloc@plt>
    4ea4:	b	4cf8 <PySequence_Fast@plt+0xab8>
    4ea8:	ldr	x1, [x0]
    4eac:	mov	x2, x0
    4eb0:	cbz	x1, 4ecc <PySequence_Fast@plt+0xc8c>
    4eb4:	and	x0, x1, #0xfffffffffffffffe
    4eb8:	ldr	x1, [x0]
    4ebc:	str	xzr, [x2]
    4ec0:	sub	x1, x1, #0x1
    4ec4:	str	x1, [x0]
    4ec8:	cbz	x1, 4ed0 <PySequence_Fast@plt+0xc90>
    4ecc:	ret
    4ed0:	b	3d70 <_Py_Dealloc@plt>
    4ed4:	nop
    4ed8:	cbz	x0, 4f78 <PySequence_Fast@plt+0xd38>
    4edc:	stp	x29, x30, [sp, #-32]!
    4ee0:	mov	x29, sp
    4ee4:	stp	x19, x20, [sp, #16]
    4ee8:	mov	x20, x0
    4eec:	ldr	x0, [x0]
    4ef0:	ldr	x1, [x0]
    4ef4:	sub	x1, x1, #0x1
    4ef8:	str	x1, [x0]
    4efc:	cbz	x1, 4f70 <PySequence_Fast@plt+0xd30>
    4f00:	ldr	x3, [x20, #8]
    4f04:	ldr	x2, [x20, #24]
    4f08:	cmp	x3, #0x0
    4f0c:	b.le	4f4c <PySequence_Fast@plt+0xd0c>
    4f10:	mov	x19, #0x0                   	// #0
    4f14:	b	4f20 <PySequence_Fast@plt+0xce0>
    4f18:	cmp	x3, x19
    4f1c:	b.le	4f4c <PySequence_Fast@plt+0xd0c>
    4f20:	ldr	x0, [x2, x19, lsl #3]
    4f24:	add	x19, x19, #0x1
    4f28:	ldr	x1, [x0]
    4f2c:	sub	x1, x1, #0x1
    4f30:	str	x1, [x0]
    4f34:	cbnz	x1, 4f18 <PySequence_Fast@plt+0xcd8>
    4f38:	bl	3d70 <_Py_Dealloc@plt>
    4f3c:	ldr	x3, [x20, #8]
    4f40:	ldr	x2, [x20, #24]
    4f44:	cmp	x3, x19
    4f48:	b.gt	4f20 <PySequence_Fast@plt+0xce0>
    4f4c:	add	x0, x20, #0x20
    4f50:	cmp	x2, x0
    4f54:	b.eq	4f60 <PySequence_Fast@plt+0xd20>  // b.none
    4f58:	mov	x0, x2
    4f5c:	bl	3e60 <PyObject_Free@plt>
    4f60:	mov	x0, x20
    4f64:	ldp	x19, x20, [sp, #16]
    4f68:	ldp	x29, x30, [sp], #32
    4f6c:	b	3e60 <PyObject_Free@plt>
    4f70:	bl	3d70 <_Py_Dealloc@plt>
    4f74:	b	4f00 <PySequence_Fast@plt+0xcc0>
    4f78:	ret
    4f7c:	nop
    4f80:	stp	x29, x30, [sp, #-32]!
    4f84:	mov	x29, sp
    4f88:	stp	x19, x20, [sp, #16]
    4f8c:	mov	x19, x0
    4f90:	ldr	x0, [x0, #40]
    4f94:	cbz	x0, 4fa0 <PySequence_Fast@plt+0xd60>
    4f98:	str	xzr, [x19, #40]
    4f9c:	bl	4ed8 <PySequence_Fast@plt+0xc98>
    4fa0:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    4fa4:	ldr	x0, [x19, #24]
    4fa8:	ldr	x1, [x20, #3976]
    4fac:	and	x0, x0, #0xfffffffffffffffe
    4fb0:	str	x1, [x19, #24]
    4fb4:	ldr	x2, [x1]
    4fb8:	add	x2, x2, #0x1
    4fbc:	str	x2, [x1]
    4fc0:	ldr	x1, [x0]
    4fc4:	sub	x1, x1, #0x1
    4fc8:	str	x1, [x0]
    4fcc:	cbz	x1, 5018 <PySequence_Fast@plt+0xdd8>
    4fd0:	ldr	x1, [x20, #3976]
    4fd4:	ldr	x0, [x19, #32]
    4fd8:	str	x1, [x19, #32]
    4fdc:	ldr	x2, [x1]
    4fe0:	and	x0, x0, #0xfffffffffffffffe
    4fe4:	add	x2, x2, #0x1
    4fe8:	str	x2, [x1]
    4fec:	ldr	x1, [x0]
    4ff0:	sub	x1, x1, #0x1
    4ff4:	str	x1, [x0]
    4ff8:	cbz	x1, 5020 <PySequence_Fast@plt+0xde0>
    4ffc:	ldr	x0, [x20, #3976]
    5000:	ldp	x19, x20, [sp, #16]
    5004:	ldr	x1, [x0]
    5008:	add	x1, x1, #0x1
    500c:	str	x1, [x0]
    5010:	ldp	x29, x30, [sp], #32
    5014:	ret
    5018:	bl	3d70 <_Py_Dealloc@plt>
    501c:	b	4fd0 <PySequence_Fast@plt+0xd90>
    5020:	bl	3d70 <_Py_Dealloc@plt>
    5024:	ldr	x0, [x20, #3976]
    5028:	ldp	x19, x20, [sp, #16]
    502c:	ldr	x1, [x0]
    5030:	add	x1, x1, #0x1
    5034:	str	x1, [x0]
    5038:	ldp	x29, x30, [sp], #32
    503c:	ret
    5040:	sub	sp, sp, #0x50
    5044:	stp	x29, x30, [sp, #32]
    5048:	add	x29, sp, #0x20
    504c:	ldr	x1, [x0, #40]
    5050:	stp	x19, x20, [sp, #48]
    5054:	mov	x20, x0
    5058:	mov	x0, #0x0                   	// #0
    505c:	cbz	x1, 5064 <PySequence_Fast@plt+0xe24>
    5060:	ldr	x0, [x1, #8]
    5064:	bl	3c50 <PyList_New@plt>
    5068:	mov	x19, x0
    506c:	cbz	x0, 51fc <PySequence_Fast@plt+0xfbc>
    5070:	ldr	x0, [x0, #16]
    5074:	ldr	x3, [x20, #40]
    5078:	cmp	x0, #0x0
    507c:	b.le	5144 <PySequence_Fast@plt+0xf04>
    5080:	ldr	x5, [x3, #24]
    5084:	mov	x0, #0x0                   	// #0
    5088:	ldr	x4, [x19, #24]
    508c:	nop
    5090:	ldr	x1, [x5, x0, lsl #3]
    5094:	ldr	x2, [x1]
    5098:	add	x2, x2, #0x1
    509c:	str	x2, [x1]
    50a0:	str	x1, [x4, x0, lsl #3]
    50a4:	add	x0, x0, #0x1
    50a8:	ldr	x1, [x19, #16]
    50ac:	cmp	x0, x1
    50b0:	b.lt	5090 <PySequence_Fast@plt+0xe50>  // b.tstop
    50b4:	ldp	x2, x1, [x20, #16]
    50b8:	ldr	x4, [x20, #32]
    50bc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    50c0:	ldr	x6, [x3]
    50c4:	and	x7, x1, #0xfffffffffffffffe
    50c8:	ldr	x0, [x0, #3976]
    50cc:	and	x5, x4, #0xfffffffffffffffe
    50d0:	cmp	x6, x0
    50d4:	b.eq	5158 <PySequence_Fast@plt+0xf18>  // b.none
    50d8:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    50dc:	add	x0, x0, #0xb20
    50e0:	stp	x7, x0, [sp]
    50e4:	mov	x4, x19
    50e8:	adrp	x3, c000 <PySequence_Fast@plt+0x7dc0>
    50ec:	str	x5, [sp, #16]
    50f0:	add	x3, x3, #0xaf8
    50f4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    50f8:	adrp	x7, c000 <PySequence_Fast@plt+0x7dc0>
    50fc:	add	x1, x1, #0xb08
    5100:	add	x7, x7, #0xae8
    5104:	adrp	x5, c000 <PySequence_Fast@plt+0x7dc0>
    5108:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    510c:	add	x5, x5, #0xaf0
    5110:	add	x0, x0, #0xb10
    5114:	bl	4190 <_Py_BuildValue_SizeT@plt>
    5118:	mov	x20, x0
    511c:	cbz	x20, 519c <PySequence_Fast@plt+0xf5c>
    5120:	ldr	x0, [x19]
    5124:	sub	x0, x0, #0x1
    5128:	str	x0, [x19]
    512c:	cbz	x0, 5214 <PySequence_Fast@plt+0xfd4>
    5130:	mov	x0, x20
    5134:	ldp	x29, x30, [sp, #32]
    5138:	ldp	x19, x20, [sp, #48]
    513c:	add	sp, sp, #0x50
    5140:	ret
    5144:	ldp	x2, x1, [x20, #16]
    5148:	ldr	x4, [x20, #32]
    514c:	and	x5, x4, #0xfffffffffffffffe
    5150:	and	x7, x1, #0xfffffffffffffffe
    5154:	cbnz	x3, 50bc <PySequence_Fast@plt+0xe7c>
    5158:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    515c:	add	x0, x0, #0xb20
    5160:	stp	x0, x5, [sp]
    5164:	mov	x4, x19
    5168:	adrp	x6, c000 <PySequence_Fast@plt+0x7dc0>
    516c:	adrp	x3, c000 <PySequence_Fast@plt+0x7dc0>
    5170:	add	x6, x6, #0xae8
    5174:	add	x3, x3, #0xaf8
    5178:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    517c:	adrp	x5, c000 <PySequence_Fast@plt+0x7dc0>
    5180:	add	x1, x1, #0xb08
    5184:	add	x5, x5, #0xaf0
    5188:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    518c:	add	x0, x0, #0xb28
    5190:	bl	4190 <_Py_BuildValue_SizeT@plt>
    5194:	mov	x20, x0
    5198:	cbnz	x20, 5120 <PySequence_Fast@plt+0xee0>
    519c:	ldr	x2, [x19, #16]
    51a0:	str	x21, [sp, #64]
    51a4:	mov	x21, #0x0                   	// #0
    51a8:	cmp	x2, #0x0
    51ac:	b.gt	51bc <PySequence_Fast@plt+0xf7c>
    51b0:	b	51e8 <PySequence_Fast@plt+0xfa8>
    51b4:	cmp	x21, x2
    51b8:	b.ge	51e8 <PySequence_Fast@plt+0xfa8>  // b.tcont
    51bc:	ldr	x0, [x19, #24]
    51c0:	ldr	x0, [x0, x21, lsl #3]
    51c4:	add	x21, x21, #0x1
    51c8:	ldr	x1, [x0]
    51cc:	sub	x1, x1, #0x1
    51d0:	str	x1, [x0]
    51d4:	cbnz	x1, 51b4 <PySequence_Fast@plt+0xf74>
    51d8:	bl	3d70 <_Py_Dealloc@plt>
    51dc:	ldr	x2, [x19, #16]
    51e0:	cmp	x21, x2
    51e4:	b.lt	51bc <PySequence_Fast@plt+0xf7c>  // b.tstop
    51e8:	ldr	x0, [x19]
    51ec:	sub	x0, x0, #0x1
    51f0:	str	x0, [x19]
    51f4:	cbz	x0, 5230 <PySequence_Fast@plt+0xff0>
    51f8:	ldr	x21, [sp, #64]
    51fc:	mov	x20, #0x0                   	// #0
    5200:	mov	x0, x20
    5204:	ldp	x29, x30, [sp, #32]
    5208:	ldp	x19, x20, [sp, #48]
    520c:	add	sp, sp, #0x50
    5210:	ret
    5214:	mov	x0, x19
    5218:	bl	3d70 <_Py_Dealloc@plt>
    521c:	mov	x0, x20
    5220:	ldp	x29, x30, [sp, #32]
    5224:	ldp	x19, x20, [sp, #48]
    5228:	add	sp, sp, #0x50
    522c:	ret
    5230:	mov	x0, x19
    5234:	bl	3d70 <_Py_Dealloc@plt>
    5238:	ldr	x21, [sp, #64]
    523c:	b	5130 <PySequence_Fast@plt+0xef0>
    5240:	stp	x29, x30, [sp, #-32]!
    5244:	mov	x29, sp
    5248:	str	x19, [sp, #16]
    524c:	mov	x19, x0
    5250:	ldr	x0, [x0, #16]
    5254:	cbz	x0, 526c <PySequence_Fast@plt+0x102c>
    5258:	ldr	x1, [x0]
    525c:	str	xzr, [x19, #16]
    5260:	sub	x1, x1, #0x1
    5264:	str	x1, [x0]
    5268:	cbz	x1, 529c <PySequence_Fast@plt+0x105c>
    526c:	add	x0, x19, #0x18
    5270:	bl	4ea8 <PySequence_Fast@plt+0xc68>
    5274:	add	x0, x19, #0x20
    5278:	bl	4ea8 <PySequence_Fast@plt+0xc68>
    527c:	ldr	x0, [x19, #40]
    5280:	cbz	x0, 528c <PySequence_Fast@plt+0x104c>
    5284:	str	xzr, [x19, #40]
    5288:	bl	4ed8 <PySequence_Fast@plt+0xc98>
    528c:	mov	w0, #0x0                   	// #0
    5290:	ldr	x19, [sp, #16]
    5294:	ldp	x29, x30, [sp], #32
    5298:	ret
    529c:	bl	3d70 <_Py_Dealloc@plt>
    52a0:	b	526c <PySequence_Fast@plt+0x102c>
    52a4:	nop
    52a8:	stp	x29, x30, [sp, #-48]!
    52ac:	mov	x29, sp
    52b0:	stp	x19, x20, [sp, #16]
    52b4:	mov	x20, x0
    52b8:	ldr	x0, [x0, #40]
    52bc:	cmp	x0, #0x0
    52c0:	ccmp	x1, #0x0, #0x1, ne  // ne = any
    52c4:	b.lt	539c <PySequence_Fast@plt+0x115c>  // b.tstop
    52c8:	mov	x19, x2
    52cc:	ldr	x2, [x0, #8]
    52d0:	cmp	x2, x1
    52d4:	b.le	539c <PySequence_Fast@plt+0x115c>
    52d8:	ldr	x4, [x0, #24]
    52dc:	stp	x21, x22, [sp, #32]
    52e0:	lsl	x22, x1, #3
    52e4:	add	x3, x4, x22
    52e8:	ldr	x21, [x4, x1, lsl #3]
    52ec:	cbz	x19, 536c <PySequence_Fast@plt+0x112c>
    52f0:	ldr	x0, [x19, #8]
    52f4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    52f8:	add	x1, x1, #0x320
    52fc:	cmp	x0, x1
    5300:	b.eq	5318 <PySequence_Fast@plt+0x10d8>  // b.none
    5304:	bl	4160 <PyType_IsSubtype@plt>
    5308:	cbz	w0, 53bc <PySequence_Fast@plt+0x117c>
    530c:	ldr	x0, [x20, #40]
    5310:	ldr	x0, [x0, #24]
    5314:	add	x3, x0, x22
    5318:	ldr	x0, [x19]
    531c:	add	x0, x0, #0x1
    5320:	str	x0, [x19]
    5324:	str	x19, [x3]
    5328:	ldr	x0, [x21]
    532c:	mov	w19, #0x0                   	// #0
    5330:	sub	x0, x0, #0x1
    5334:	str	x0, [x21]
    5338:	cbz	x0, 5350 <PySequence_Fast@plt+0x1110>
    533c:	ldp	x21, x22, [sp, #32]
    5340:	mov	w0, w19
    5344:	ldp	x19, x20, [sp, #16]
    5348:	ldp	x29, x30, [sp], #48
    534c:	ret
    5350:	mov	x0, x21
    5354:	bl	3d70 <_Py_Dealloc@plt>
    5358:	mov	w0, w19
    535c:	ldp	x19, x20, [sp, #16]
    5360:	ldp	x21, x22, [sp, #32]
    5364:	ldp	x29, x30, [sp], #48
    5368:	ret
    536c:	sub	x5, x2, #0x1
    5370:	str	x5, [x0, #8]
    5374:	cmp	x5, x1
    5378:	b.le	5328 <PySequence_Fast@plt+0x10e8>
    537c:	sub	x1, x4, #0x8
    5380:	mov	x0, x3
    5384:	add	x1, x1, x2, lsl #3
    5388:	ldr	x2, [x0, #8]
    538c:	str	x2, [x0], #8
    5390:	cmp	x1, x0
    5394:	b.ne	5388 <PySequence_Fast@plt+0x1148>  // b.any
    5398:	b	5328 <PySequence_Fast@plt+0x10e8>
    539c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    53a0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    53a4:	mov	w19, #0xffffffff            	// #-1
    53a8:	add	x1, x1, #0xb38
    53ac:	ldr	x0, [x0, #3984]
    53b0:	ldr	x0, [x0]
    53b4:	bl	3de0 <PyErr_SetString@plt>
    53b8:	b	5340 <PySequence_Fast@plt+0x1100>
    53bc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    53c0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    53c4:	ldr	x2, [x19, #8]
    53c8:	add	x1, x1, #0xb60
    53cc:	ldr	x0, [x0, #3944]
    53d0:	mov	w19, #0xffffffff            	// #-1
    53d4:	ldr	x2, [x2, #24]
    53d8:	ldr	x0, [x0]
    53dc:	bl	4180 <PyErr_Format@plt>
    53e0:	ldp	x21, x22, [sp, #32]
    53e4:	b	5340 <PySequence_Fast@plt+0x1100>
    53e8:	stp	x29, x30, [sp, #-32]!
    53ec:	mov	x29, sp
    53f0:	str	x19, [sp, #16]
    53f4:	mov	x19, x0
    53f8:	ldr	x0, [x0, #144]
    53fc:	cbz	x0, 5414 <PySequence_Fast@plt+0x11d4>
    5400:	ldr	x1, [x0]
    5404:	str	xzr, [x19, #144]
    5408:	sub	x1, x1, #0x1
    540c:	str	x1, [x0]
    5410:	cbz	x1, 564c <PySequence_Fast@plt+0x140c>
    5414:	ldr	x0, [x19, #136]
    5418:	cbz	x0, 5430 <PySequence_Fast@plt+0x11f0>
    541c:	ldr	x1, [x0]
    5420:	str	xzr, [x19, #136]
    5424:	sub	x1, x1, #0x1
    5428:	str	x1, [x0]
    542c:	cbz	x1, 5644 <PySequence_Fast@plt+0x1404>
    5430:	ldr	x0, [x19, #128]
    5434:	cbz	x0, 544c <PySequence_Fast@plt+0x120c>
    5438:	ldr	x1, [x0]
    543c:	str	xzr, [x19, #128]
    5440:	sub	x1, x1, #0x1
    5444:	str	x1, [x0]
    5448:	cbz	x1, 563c <PySequence_Fast@plt+0x13fc>
    544c:	ldr	x0, [x19, #120]
    5450:	cbz	x0, 5468 <PySequence_Fast@plt+0x1228>
    5454:	ldr	x1, [x0]
    5458:	str	xzr, [x19, #120]
    545c:	sub	x1, x1, #0x1
    5460:	str	x1, [x0]
    5464:	cbz	x1, 5634 <PySequence_Fast@plt+0x13f4>
    5468:	ldr	x0, [x19, #112]
    546c:	cbz	x0, 5484 <PySequence_Fast@plt+0x1244>
    5470:	ldr	x1, [x0]
    5474:	str	xzr, [x19, #112]
    5478:	sub	x1, x1, #0x1
    547c:	str	x1, [x0]
    5480:	cbz	x1, 562c <PySequence_Fast@plt+0x13ec>
    5484:	ldr	x0, [x19, #104]
    5488:	cbz	x0, 54a0 <PySequence_Fast@plt+0x1260>
    548c:	ldr	x1, [x0]
    5490:	str	xzr, [x19, #104]
    5494:	sub	x1, x1, #0x1
    5498:	str	x1, [x0]
    549c:	cbz	x1, 5624 <PySequence_Fast@plt+0x13e4>
    54a0:	ldr	x0, [x19, #96]
    54a4:	cbz	x0, 54bc <PySequence_Fast@plt+0x127c>
    54a8:	ldr	x1, [x0]
    54ac:	str	xzr, [x19, #96]
    54b0:	sub	x1, x1, #0x1
    54b4:	str	x1, [x0]
    54b8:	cbz	x1, 561c <PySequence_Fast@plt+0x13dc>
    54bc:	ldr	x0, [x19, #56]
    54c0:	cbz	x0, 54d8 <PySequence_Fast@plt+0x1298>
    54c4:	ldr	x1, [x0]
    54c8:	str	xzr, [x19, #56]
    54cc:	sub	x1, x1, #0x1
    54d0:	str	x1, [x0]
    54d4:	cbz	x1, 5614 <PySequence_Fast@plt+0x13d4>
    54d8:	ldr	x0, [x19, #48]
    54dc:	cbz	x0, 54f4 <PySequence_Fast@plt+0x12b4>
    54e0:	ldr	x1, [x0]
    54e4:	str	xzr, [x19, #48]
    54e8:	sub	x1, x1, #0x1
    54ec:	str	x1, [x0]
    54f0:	cbz	x1, 560c <PySequence_Fast@plt+0x13cc>
    54f4:	ldr	x0, [x19, #32]
    54f8:	cbz	x0, 5510 <PySequence_Fast@plt+0x12d0>
    54fc:	ldr	x1, [x0]
    5500:	str	xzr, [x19, #32]
    5504:	sub	x1, x1, #0x1
    5508:	str	x1, [x0]
    550c:	cbz	x1, 5604 <PySequence_Fast@plt+0x13c4>
    5510:	ldr	x0, [x19, #40]
    5514:	cbz	x0, 552c <PySequence_Fast@plt+0x12ec>
    5518:	ldr	x1, [x0]
    551c:	str	xzr, [x19, #40]
    5520:	sub	x1, x1, #0x1
    5524:	str	x1, [x0]
    5528:	cbz	x1, 55fc <PySequence_Fast@plt+0x13bc>
    552c:	ldr	x0, [x19, #24]
    5530:	cbz	x0, 5548 <PySequence_Fast@plt+0x1308>
    5534:	ldr	x1, [x0]
    5538:	str	xzr, [x19, #24]
    553c:	sub	x1, x1, #0x1
    5540:	str	x1, [x0]
    5544:	cbz	x1, 55f4 <PySequence_Fast@plt+0x13b4>
    5548:	ldr	x0, [x19, #88]
    554c:	cbz	x0, 5564 <PySequence_Fast@plt+0x1324>
    5550:	ldr	x1, [x0]
    5554:	str	xzr, [x19, #88]
    5558:	sub	x1, x1, #0x1
    555c:	str	x1, [x0]
    5560:	cbz	x1, 55ec <PySequence_Fast@plt+0x13ac>
    5564:	ldr	x0, [x19, #80]
    5568:	cbz	x0, 5580 <PySequence_Fast@plt+0x1340>
    556c:	ldr	x1, [x0]
    5570:	str	xzr, [x19, #80]
    5574:	sub	x1, x1, #0x1
    5578:	str	x1, [x0]
    557c:	cbz	x1, 55e4 <PySequence_Fast@plt+0x13a4>
    5580:	ldr	x0, [x19, #72]
    5584:	cbz	x0, 559c <PySequence_Fast@plt+0x135c>
    5588:	ldr	x1, [x0]
    558c:	str	xzr, [x19, #72]
    5590:	sub	x1, x1, #0x1
    5594:	str	x1, [x0]
    5598:	cbz	x1, 55dc <PySequence_Fast@plt+0x139c>
    559c:	ldr	x0, [x19, #16]
    55a0:	cbz	x0, 55b8 <PySequence_Fast@plt+0x1378>
    55a4:	ldr	x1, [x0]
    55a8:	str	xzr, [x19, #16]
    55ac:	sub	x1, x1, #0x1
    55b0:	str	x1, [x0]
    55b4:	cbz	x1, 55c8 <PySequence_Fast@plt+0x1388>
    55b8:	mov	w0, #0x0                   	// #0
    55bc:	ldr	x19, [sp, #16]
    55c0:	ldp	x29, x30, [sp], #32
    55c4:	ret
    55c8:	bl	3d70 <_Py_Dealloc@plt>
    55cc:	mov	w0, #0x0                   	// #0
    55d0:	ldr	x19, [sp, #16]
    55d4:	ldp	x29, x30, [sp], #32
    55d8:	ret
    55dc:	bl	3d70 <_Py_Dealloc@plt>
    55e0:	b	559c <PySequence_Fast@plt+0x135c>
    55e4:	bl	3d70 <_Py_Dealloc@plt>
    55e8:	b	5580 <PySequence_Fast@plt+0x1340>
    55ec:	bl	3d70 <_Py_Dealloc@plt>
    55f0:	b	5564 <PySequence_Fast@plt+0x1324>
    55f4:	bl	3d70 <_Py_Dealloc@plt>
    55f8:	b	5548 <PySequence_Fast@plt+0x1308>
    55fc:	bl	3d70 <_Py_Dealloc@plt>
    5600:	b	552c <PySequence_Fast@plt+0x12ec>
    5604:	bl	3d70 <_Py_Dealloc@plt>
    5608:	b	5510 <PySequence_Fast@plt+0x12d0>
    560c:	bl	3d70 <_Py_Dealloc@plt>
    5610:	b	54f4 <PySequence_Fast@plt+0x12b4>
    5614:	bl	3d70 <_Py_Dealloc@plt>
    5618:	b	54d8 <PySequence_Fast@plt+0x1298>
    561c:	bl	3d70 <_Py_Dealloc@plt>
    5620:	b	54bc <PySequence_Fast@plt+0x127c>
    5624:	bl	3d70 <_Py_Dealloc@plt>
    5628:	b	54a0 <PySequence_Fast@plt+0x1260>
    562c:	bl	3d70 <_Py_Dealloc@plt>
    5630:	b	5484 <PySequence_Fast@plt+0x1244>
    5634:	bl	3d70 <_Py_Dealloc@plt>
    5638:	b	5468 <PySequence_Fast@plt+0x1228>
    563c:	bl	3d70 <_Py_Dealloc@plt>
    5640:	b	544c <PySequence_Fast@plt+0x120c>
    5644:	bl	3d70 <_Py_Dealloc@plt>
    5648:	b	5430 <PySequence_Fast@plt+0x11f0>
    564c:	bl	3d70 <_Py_Dealloc@plt>
    5650:	b	5414 <PySequence_Fast@plt+0x11d4>
    5654:	nop
    5658:	stp	x29, x30, [sp, #-32]!
    565c:	mov	x29, sp
    5660:	str	x19, [sp, #16]
    5664:	bl	3e10 <PyModule_GetState@plt>
    5668:	mov	x19, x0
    566c:	ldr	x0, [x0]
    5670:	cbz	x0, 5688 <PySequence_Fast@plt+0x1448>
    5674:	ldr	x1, [x0]
    5678:	str	xzr, [x19]
    567c:	sub	x1, x1, #0x1
    5680:	str	x1, [x0]
    5684:	cbz	x1, 5734 <PySequence_Fast@plt+0x14f4>
    5688:	ldr	x0, [x19, #8]
    568c:	cbz	x0, 56a4 <PySequence_Fast@plt+0x1464>
    5690:	ldr	x1, [x0]
    5694:	str	xzr, [x19, #8]
    5698:	sub	x1, x1, #0x1
    569c:	str	x1, [x0]
    56a0:	cbz	x1, 572c <PySequence_Fast@plt+0x14ec>
    56a4:	ldr	x0, [x19, #16]
    56a8:	cbz	x0, 56c0 <PySequence_Fast@plt+0x1480>
    56ac:	ldr	x1, [x0]
    56b0:	str	xzr, [x19, #16]
    56b4:	sub	x1, x1, #0x1
    56b8:	str	x1, [x0]
    56bc:	cbz	x1, 5724 <PySequence_Fast@plt+0x14e4>
    56c0:	ldr	x0, [x19, #24]
    56c4:	cbz	x0, 56dc <PySequence_Fast@plt+0x149c>
    56c8:	ldr	x1, [x0]
    56cc:	str	xzr, [x19, #24]
    56d0:	sub	x1, x1, #0x1
    56d4:	str	x1, [x0]
    56d8:	cbz	x1, 571c <PySequence_Fast@plt+0x14dc>
    56dc:	ldr	x0, [x19, #32]
    56e0:	cbz	x0, 56f8 <PySequence_Fast@plt+0x14b8>
    56e4:	ldr	x1, [x0]
    56e8:	str	xzr, [x19, #32]
    56ec:	sub	x1, x1, #0x1
    56f0:	str	x1, [x0]
    56f4:	cbz	x1, 5708 <PySequence_Fast@plt+0x14c8>
    56f8:	mov	w0, #0x0                   	// #0
    56fc:	ldr	x19, [sp, #16]
    5700:	ldp	x29, x30, [sp], #32
    5704:	ret
    5708:	bl	3d70 <_Py_Dealloc@plt>
    570c:	mov	w0, #0x0                   	// #0
    5710:	ldr	x19, [sp, #16]
    5714:	ldp	x29, x30, [sp], #32
    5718:	ret
    571c:	bl	3d70 <_Py_Dealloc@plt>
    5720:	b	56dc <PySequence_Fast@plt+0x149c>
    5724:	bl	3d70 <_Py_Dealloc@plt>
    5728:	b	56c0 <PySequence_Fast@plt+0x1480>
    572c:	bl	3d70 <_Py_Dealloc@plt>
    5730:	b	56a4 <PySequence_Fast@plt+0x1464>
    5734:	bl	3d70 <_Py_Dealloc@plt>
    5738:	b	5688 <PySequence_Fast@plt+0x1448>
    573c:	nop
    5740:	b	5658 <PySequence_Fast@plt+0x1418>
    5744:	nop
    5748:	stp	x29, x30, [sp, #-32]!
    574c:	mov	x29, sp
    5750:	str	x19, [sp, #16]
    5754:	mov	x19, x0
    5758:	bl	4220 <PyObject_GC_UnTrack@plt>
    575c:	mov	x0, x19
    5760:	bl	4cb0 <PySequence_Fast@plt+0xa70>
    5764:	ldr	x1, [x19, #8]
    5768:	mov	x0, x19
    576c:	ldr	x19, [sp, #16]
    5770:	ldp	x29, x30, [sp], #32
    5774:	ldr	x1, [x1, #320]
    5778:	mov	x16, x1
    577c:	br	x16
    5780:	stp	x29, x30, [sp, #-32]!
    5784:	mov	x29, sp
    5788:	str	x19, [sp, #16]
    578c:	mov	x19, x0
    5790:	bl	4220 <PyObject_GC_UnTrack@plt>
    5794:	mov	x0, x19
    5798:	bl	53e8 <PySequence_Fast@plt+0x11a8>
    579c:	ldr	x1, [x19, #8]
    57a0:	mov	x0, x19
    57a4:	ldr	x19, [sp, #16]
    57a8:	ldp	x29, x30, [sp], #32
    57ac:	ldr	x1, [x1, #320]
    57b0:	mov	x16, x1
    57b4:	br	x16
    57b8:	stp	x29, x30, [sp, #-48]!
    57bc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    57c0:	mov	x29, sp
    57c4:	stp	x19, x20, [sp, #16]
    57c8:	str	x21, [sp, #32]
    57cc:	mov	x21, x0
    57d0:	add	x0, x1, #0xaf0
    57d4:	bl	4100 <PyUnicode_FromString@plt>
    57d8:	cbz	x0, 58c8 <PySequence_Fast@plt+0x1688>
    57dc:	mov	x1, x0
    57e0:	mov	x19, x0
    57e4:	mov	x0, x21
    57e8:	bl	4230 <PyDict_GetItemWithError@plt>
    57ec:	mov	x20, x0
    57f0:	cbz	x0, 5910 <PySequence_Fast@plt+0x16d0>
    57f4:	ldr	x1, [x0, #8]
    57f8:	ldr	x2, [x1, #168]
    57fc:	tbz	w2, #29, 585c <PySequence_Fast@plt+0x161c>
    5800:	bl	4150 <PyDict_Copy@plt>
    5804:	mov	x20, x0
    5808:	cbz	x0, 58b8 <PySequence_Fast@plt+0x1678>
    580c:	mov	x1, x19
    5810:	mov	x0, x21
    5814:	bl	3f70 <PyDict_DelItem@plt>
    5818:	tbnz	w0, #31, 58a0 <PySequence_Fast@plt+0x1660>
    581c:	ldr	x0, [x19]
    5820:	sub	x0, x0, #0x1
    5824:	str	x0, [x19]
    5828:	cbz	x0, 593c <PySequence_Fast@plt+0x16fc>
    582c:	mov	x1, x21
    5830:	mov	x0, x20
    5834:	bl	3f20 <PyDict_Update@plt>
    5838:	tbz	w0, #31, 588c <PySequence_Fast@plt+0x164c>
    583c:	ldr	x0, [x20]
    5840:	sub	x0, x0, #0x1
    5844:	str	x0, [x20]
    5848:	cbnz	x0, 58c8 <PySequence_Fast@plt+0x1688>
    584c:	mov	x0, x20
    5850:	mov	x20, #0x0                   	// #0
    5854:	bl	3d70 <_Py_Dealloc@plt>
    5858:	b	588c <PySequence_Fast@plt+0x164c>
    585c:	ldr	x0, [x19]
    5860:	sub	x0, x0, #0x1
    5864:	str	x0, [x19]
    5868:	cbz	x0, 5900 <PySequence_Fast@plt+0x16c0>
    586c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    5870:	mov	x20, #0x0                   	// #0
    5874:	ldr	x2, [x1, #24]
    5878:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    587c:	ldr	x0, [x0, #3944]
    5880:	add	x1, x1, #0xb88
    5884:	ldr	x0, [x0]
    5888:	bl	4180 <PyErr_Format@plt>
    588c:	mov	x0, x20
    5890:	ldp	x19, x20, [sp, #16]
    5894:	ldr	x21, [sp, #32]
    5898:	ldp	x29, x30, [sp], #48
    589c:	ret
    58a0:	ldr	x0, [x20]
    58a4:	sub	x0, x0, #0x1
    58a8:	str	x0, [x20]
    58ac:	cbnz	x0, 58b8 <PySequence_Fast@plt+0x1678>
    58b0:	mov	x0, x20
    58b4:	bl	3d70 <_Py_Dealloc@plt>
    58b8:	ldr	x0, [x19]
    58bc:	sub	x0, x0, #0x1
    58c0:	str	x0, [x19]
    58c4:	cbz	x0, 58e0 <PySequence_Fast@plt+0x16a0>
    58c8:	mov	x20, #0x0                   	// #0
    58cc:	mov	x0, x20
    58d0:	ldp	x19, x20, [sp, #16]
    58d4:	ldr	x21, [sp, #32]
    58d8:	ldp	x29, x30, [sp], #48
    58dc:	ret
    58e0:	mov	x0, x19
    58e4:	mov	x20, #0x0                   	// #0
    58e8:	bl	3d70 <_Py_Dealloc@plt>
    58ec:	mov	x0, x20
    58f0:	ldp	x19, x20, [sp, #16]
    58f4:	ldr	x21, [sp, #32]
    58f8:	ldp	x29, x30, [sp], #48
    58fc:	ret
    5900:	mov	x0, x19
    5904:	bl	3d70 <_Py_Dealloc@plt>
    5908:	ldr	x1, [x20, #8]
    590c:	b	586c <PySequence_Fast@plt+0x162c>
    5910:	bl	3f80 <PyErr_Occurred@plt>
    5914:	cbnz	x0, 58b8 <PySequence_Fast@plt+0x1678>
    5918:	bl	4080 <PyDict_New@plt>
    591c:	mov	x20, x0
    5920:	ldr	x1, [x19]
    5924:	sub	x0, x1, #0x1
    5928:	str	x0, [x19]
    592c:	cbz	x0, 593c <PySequence_Fast@plt+0x16fc>
    5930:	cbnz	x20, 582c <PySequence_Fast@plt+0x15ec>
    5934:	mov	x20, #0x0                   	// #0
    5938:	b	58cc <PySequence_Fast@plt+0x168c>
    593c:	mov	x0, x19
    5940:	bl	3d70 <_Py_Dealloc@plt>
    5944:	cbnz	x20, 582c <PySequence_Fast@plt+0x15ec>
    5948:	b	5934 <PySequence_Fast@plt+0x16f4>
    594c:	nop
    5950:	stp	x29, x30, [sp, #-32]!
    5954:	mov	x29, sp
    5958:	ldr	x1, [x0, #8]
    595c:	ldr	x0, [x0, #40]
    5960:	str	x19, [sp, #16]
    5964:	ldr	x19, [x1, #32]
    5968:	cbz	x0, 5988 <PySequence_Fast@plt+0x1748>
    596c:	ldr	x2, [x0, #24]
    5970:	add	x1, x0, #0x20
    5974:	add	x19, x19, #0x40
    5978:	cmp	x2, x1
    597c:	b.eq	5988 <PySequence_Fast@plt+0x1748>  // b.none
    5980:	ldr	x0, [x0, #16]
    5984:	add	x19, x19, x0, lsl #3
    5988:	cmn	x19, #0x1
    598c:	b.eq	59a0 <PySequence_Fast@plt+0x1760>  // b.none
    5990:	mov	x0, x19
    5994:	ldr	x19, [sp, #16]
    5998:	ldp	x29, x30, [sp], #32
    599c:	b	3e70 <PyLong_FromSsize_t@plt>
    59a0:	bl	3f80 <PyErr_Occurred@plt>
    59a4:	cbz	x0, 5990 <PySequence_Fast@plt+0x1750>
    59a8:	mov	x0, #0x0                   	// #0
    59ac:	ldr	x19, [sp, #16]
    59b0:	ldp	x29, x30, [sp], #32
    59b4:	ret
    59b8:	stp	x29, x30, [sp, #-64]!
    59bc:	mov	x29, sp
    59c0:	str	x1, [sp, #56]
    59c4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    59c8:	add	x1, x1, #0x320
    59cc:	stp	x19, x20, [sp, #16]
    59d0:	mov	x20, x0
    59d4:	add	x0, x1, #0x1a0
    59d8:	stp	x21, x22, [sp, #32]
    59dc:	mov	w22, w2
    59e0:	ldr	x21, [sp, #56]
    59e4:	bl	3df0 <_PyObject_GC_New@plt>
    59e8:	mov	x19, x0
    59ec:	cbz	x0, 5a30 <PySequence_Fast@plt+0x17f0>
    59f0:	ldr	x1, [x21]
    59f4:	add	x1, x1, #0x1
    59f8:	str	x1, [x21]
    59fc:	ldr	x1, [x20]
    5a00:	str	x21, [x0, #48]
    5a04:	str	w22, [x0, #56]
    5a08:	add	x1, x1, #0x1
    5a0c:	str	x1, [x20]
    5a10:	str	x20, [x0, #40]
    5a14:	bl	3dc0 <PyObject_GC_Track@plt>
    5a18:	mov	x0, #0x80                  	// #128
    5a1c:	bl	41f0 <PyMem_Malloc@plt>
    5a20:	str	x0, [x19, #16]
    5a24:	cbz	x0, 5a44 <PySequence_Fast@plt+0x1804>
    5a28:	mov	x0, #0x8                   	// #8
    5a2c:	stp	xzr, x0, [x19, #24]
    5a30:	mov	x0, x19
    5a34:	ldp	x19, x20, [sp, #16]
    5a38:	ldp	x21, x22, [sp, #32]
    5a3c:	ldp	x29, x30, [sp], #64
    5a40:	ret
    5a44:	ldr	x0, [x19]
    5a48:	sub	x0, x0, #0x1
    5a4c:	str	x0, [x19]
    5a50:	cbz	x0, 5a60 <PySequence_Fast@plt+0x1820>
    5a54:	mov	x19, #0x0                   	// #0
    5a58:	bl	3d80 <PyErr_NoMemory@plt>
    5a5c:	b	5a30 <PySequence_Fast@plt+0x17f0>
    5a60:	mov	x0, x19
    5a64:	bl	3d70 <_Py_Dealloc@plt>
    5a68:	b	5a54 <PySequence_Fast@plt+0x1814>
    5a6c:	nop
    5a70:	stp	x29, x30, [sp, #-48]!
    5a74:	mov	x29, sp
    5a78:	ldr	x2, [x1, #8]
    5a7c:	ldr	x2, [x2, #168]
    5a80:	str	x19, [sp, #16]
    5a84:	mov	x19, x0
    5a88:	tbz	w2, #28, 5ab4 <PySequence_Fast@plt+0x1874>
    5a8c:	ldrsb	w0, [x1, #32]
    5a90:	tbz	w0, #31, 5aec <PySequence_Fast@plt+0x18ac>
    5a94:	ldr	x0, [x1, #16]
    5a98:	cmp	x0, #0x1
    5a9c:	b.eq	5b10 <PySequence_Fast@plt+0x18d0>  // b.none
    5aa0:	mov	x0, x19
    5aa4:	mov	w2, #0x0                   	// #0
    5aa8:	ldr	x19, [sp, #16]
    5aac:	ldp	x29, x30, [sp], #48
    5ab0:	b	59b8 <PySequence_Fast@plt+0x1778>
    5ab4:	tbz	w2, #27, 5aa0 <PySequence_Fast@plt+0x1860>
    5ab8:	ldr	x0, [x1, #16]
    5abc:	cmp	x0, #0x1
    5ac0:	b.ne	5aa0 <PySequence_Fast@plt+0x1860>  // b.any
    5ac4:	ldrb	w0, [x1, #32]
    5ac8:	cmp	w0, #0x2a
    5acc:	b.ne	5aa0 <PySequence_Fast@plt+0x1860>  // b.any
    5ad0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    5ad4:	mov	x0, x19
    5ad8:	ldr	x19, [sp, #16]
    5adc:	mov	w2, #0x0                   	// #0
    5ae0:	ldr	x1, [x1, #3976]
    5ae4:	ldp	x29, x30, [sp], #48
    5ae8:	b	59b8 <PySequence_Fast@plt+0x1778>
    5aec:	mov	x0, x1
    5af0:	str	x1, [sp, #40]
    5af4:	bl	3c60 <_PyUnicode_Ready@plt>
    5af8:	ldr	x1, [sp, #40]
    5afc:	tbz	w0, #31, 5a94 <PySequence_Fast@plt+0x1854>
    5b00:	mov	x0, #0x0                   	// #0
    5b04:	ldr	x19, [sp, #16]
    5b08:	ldp	x29, x30, [sp], #48
    5b0c:	ret
    5b10:	ldrb	w0, [x1, #32]
    5b14:	and	w2, w0, #0x1c
    5b18:	and	w3, w0, #0x20
    5b1c:	cmp	w2, #0x4
    5b20:	b.eq	5b48 <PySequence_Fast@plt+0x1908>  // b.none
    5b24:	cmp	w2, #0x8
    5b28:	b.eq	5b8c <PySequence_Fast@plt+0x194c>  // b.none
    5b2c:	cbnz	w3, 5b64 <PySequence_Fast@plt+0x1924>
    5b30:	ldr	x0, [x1, #72]
    5b34:	ldr	w0, [x0]
    5b38:	cmp	w0, #0x2a
    5b3c:	cset	w0, eq  // eq = none
    5b40:	cbz	w0, 5aa0 <PySequence_Fast@plt+0x1860>
    5b44:	b	5ad0 <PySequence_Fast@plt+0x1890>
    5b48:	cbnz	w3, 5b78 <PySequence_Fast@plt+0x1938>
    5b4c:	ldr	x0, [x1, #72]
    5b50:	ldrb	w0, [x0]
    5b54:	cmp	w0, #0x2a
    5b58:	cset	w0, eq  // eq = none
    5b5c:	cbz	w0, 5aa0 <PySequence_Fast@plt+0x1860>
    5b60:	b	5ad0 <PySequence_Fast@plt+0x1890>
    5b64:	tst	x0, #0x40
    5b68:	add	x2, x1, #0x48
    5b6c:	add	x0, x1, #0x30
    5b70:	csel	x0, x2, x0, eq  // eq = none
    5b74:	b	5b34 <PySequence_Fast@plt+0x18f4>
    5b78:	tst	x0, #0x40
    5b7c:	add	x2, x1, #0x48
    5b80:	add	x0, x1, #0x30
    5b84:	csel	x0, x2, x0, eq  // eq = none
    5b88:	b	5b50 <PySequence_Fast@plt+0x1910>
    5b8c:	cbz	w3, 5bb4 <PySequence_Fast@plt+0x1974>
    5b90:	tst	x0, #0x40
    5b94:	add	x2, x1, #0x48
    5b98:	add	x0, x1, #0x30
    5b9c:	csel	x0, x2, x0, eq  // eq = none
    5ba0:	ldrh	w0, [x0]
    5ba4:	cmp	w0, #0x2a
    5ba8:	cset	w0, eq  // eq = none
    5bac:	cbz	w0, 5aa0 <PySequence_Fast@plt+0x1860>
    5bb0:	b	5ad0 <PySequence_Fast@plt+0x1890>
    5bb4:	ldr	x0, [x1, #72]
    5bb8:	b	5ba0 <PySequence_Fast@plt+0x1960>
    5bbc:	nop
    5bc0:	sub	sp, sp, #0x40
    5bc4:	stp	x29, x30, [sp, #16]
    5bc8:	add	x29, sp, #0x10
    5bcc:	stp	x19, x20, [sp, #32]
    5bd0:	mov	x19, x0
    5bd4:	mov	x0, x1
    5bd8:	mov	x1, x2
    5bdc:	mov	x2, x3
    5be0:	cbz	x3, 5c60 <PySequence_Fast@plt+0x1a20>
    5be4:	ldr	x20, [x3, #16]
    5be8:	add	x20, x1, x20
    5bec:	add	x3, sp, #0x38
    5bf0:	str	x3, [sp]
    5bf4:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    5bf8:	add	x4, x4, #0x9b8
    5bfc:	mov	x3, x2
    5c00:	add	x4, x4, #0xc0
    5c04:	mov	w7, #0x0                   	// #0
    5c08:	mov	w6, #0x1                   	// #1
    5c0c:	mov	w5, #0x0                   	// #0
    5c10:	mov	x2, #0x0                   	// #0
    5c14:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5c18:	cbz	x0, 5ca0 <PySequence_Fast@plt+0x1a60>
    5c1c:	cbz	x20, 5c78 <PySequence_Fast@plt+0x1a38>
    5c20:	ldr	x20, [x0]
    5c24:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    5c28:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5c2c:	mov	x2, #0x1                   	// #1
    5c30:	ldr	x0, [x0, #3936]
    5c34:	add	x1, x1, #0xba8
    5c38:	ldr	x0, [x0]
    5c3c:	bl	3d60 <PyErr_WarnEx@plt>
    5c40:	tbnz	w0, #31, 5ca0 <PySequence_Fast@plt+0x1a60>
    5c44:	mov	x1, x20
    5c48:	mov	x0, x19
    5c4c:	bl	5a70 <PySequence_Fast@plt+0x1830>
    5c50:	ldp	x29, x30, [sp, #16]
    5c54:	ldp	x19, x20, [sp, #32]
    5c58:	add	sp, sp, #0x40
    5c5c:	ret
    5c60:	tbnz	x1, #63, 5cb4 <PySequence_Fast@plt+0x1a74>
    5c64:	cmp	x0, #0x0
    5c68:	mov	x20, x1
    5c6c:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5c70:	b.gt	5bec <PySequence_Fast@plt+0x19ac>
    5c74:	cbnz	x20, 5c20 <PySequence_Fast@plt+0x19e0>
    5c78:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    5c7c:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    5c80:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    5c84:	mov	x2, #0x1                   	// #1
    5c88:	ldr	x0, [x0, #3936]
    5c8c:	add	x1, x1, #0xba8
    5c90:	ldr	x20, [x20, #3976]
    5c94:	ldr	x0, [x0]
    5c98:	bl	3d60 <PyErr_WarnEx@plt>
    5c9c:	tbz	w0, #31, 5c44 <PySequence_Fast@plt+0x1a04>
    5ca0:	mov	x0, #0x0                   	// #0
    5ca4:	ldp	x29, x30, [sp, #16]
    5ca8:	ldp	x19, x20, [sp, #32]
    5cac:	add	sp, sp, #0x40
    5cb0:	ret
    5cb4:	add	x2, sp, #0x38
    5cb8:	str	x2, [sp]
    5cbc:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    5cc0:	add	x4, x4, #0x9b8
    5cc4:	add	x4, x4, #0xc0
    5cc8:	mov	w7, #0x0                   	// #0
    5ccc:	mov	w6, #0x1                   	// #1
    5cd0:	mov	w5, #0x0                   	// #0
    5cd4:	mov	x2, #0x0                   	// #0
    5cd8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5cdc:	cbnz	x0, 5c20 <PySequence_Fast@plt+0x19e0>
    5ce0:	mov	x0, #0x0                   	// #0
    5ce4:	b	5ca4 <PySequence_Fast@plt+0x1a64>
    5ce8:	sub	sp, sp, #0x40
    5cec:	stp	x29, x30, [sp, #16]
    5cf0:	add	x29, sp, #0x10
    5cf4:	stp	x19, x20, [sp, #32]
    5cf8:	mov	x19, x0
    5cfc:	mov	x0, x1
    5d00:	mov	x1, x2
    5d04:	mov	x2, x3
    5d08:	cbz	x3, 5d64 <PySequence_Fast@plt+0x1b24>
    5d0c:	ldr	x20, [x3, #16]
    5d10:	add	x20, x1, x20
    5d14:	add	x3, sp, #0x38
    5d18:	str	x3, [sp]
    5d1c:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    5d20:	add	x4, x4, #0x9b8
    5d24:	mov	x3, x2
    5d28:	add	x4, x4, #0x100
    5d2c:	mov	w7, #0x0                   	// #0
    5d30:	mov	w6, #0x1                   	// #1
    5d34:	mov	w5, #0x0                   	// #0
    5d38:	mov	x2, #0x0                   	// #0
    5d3c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5d40:	cbz	x0, 5db8 <PySequence_Fast@plt+0x1b78>
    5d44:	cbz	x20, 5d7c <PySequence_Fast@plt+0x1b3c>
    5d48:	ldr	x1, [x0]
    5d4c:	mov	x0, x19
    5d50:	bl	5a70 <PySequence_Fast@plt+0x1830>
    5d54:	ldp	x29, x30, [sp, #16]
    5d58:	ldp	x19, x20, [sp, #32]
    5d5c:	add	sp, sp, #0x40
    5d60:	ret
    5d64:	tbnz	x1, #63, 5d88 <PySequence_Fast@plt+0x1b48>
    5d68:	cmp	x0, #0x0
    5d6c:	mov	x20, x1
    5d70:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5d74:	b.gt	5d14 <PySequence_Fast@plt+0x1ad4>
    5d78:	cbnz	x20, 5d48 <PySequence_Fast@plt+0x1b08>
    5d7c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    5d80:	ldr	x1, [x1, #3976]
    5d84:	b	5d4c <PySequence_Fast@plt+0x1b0c>
    5d88:	add	x2, sp, #0x38
    5d8c:	str	x2, [sp]
    5d90:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    5d94:	add	x4, x4, #0x9b8
    5d98:	add	x4, x4, #0x100
    5d9c:	mov	w7, #0x0                   	// #0
    5da0:	mov	w6, #0x1                   	// #1
    5da4:	mov	w5, #0x0                   	// #0
    5da8:	mov	x2, #0x0                   	// #0
    5dac:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5db0:	cbnz	x0, 5d48 <PySequence_Fast@plt+0x1b08>
    5db4:	nop
    5db8:	mov	x0, #0x0                   	// #0
    5dbc:	b	5d54 <PySequence_Fast@plt+0x1b14>
    5dc0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    5dc4:	mov	w2, #0x1                   	// #1
    5dc8:	ldr	x1, [x1, #3976]
    5dcc:	b	59b8 <PySequence_Fast@plt+0x1778>
    5dd0:	sub	sp, sp, #0x60
    5dd4:	mov	x5, x1
    5dd8:	mov	x1, x2
    5ddc:	stp	x29, x30, [sp, #16]
    5de0:	add	x29, sp, #0x10
    5de4:	stp	x19, x20, [sp, #32]
    5de8:	stp	x21, x22, [sp, #48]
    5dec:	mov	x21, x0
    5df0:	cbz	x3, 5eb4 <PySequence_Fast@plt+0x1c74>
    5df4:	ldr	x20, [x3, #16]
    5df8:	add	x20, x2, x20
    5dfc:	add	x0, sp, #0x50
    5e00:	str	x0, [sp]
    5e04:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    5e08:	mov	x0, x5
    5e0c:	add	x4, x19, #0x9b8
    5e10:	mov	w5, #0x1                   	// #1
    5e14:	add	x4, x4, #0x140
    5e18:	mov	w7, #0x0                   	// #0
    5e1c:	mov	w6, #0x2                   	// #2
    5e20:	mov	x2, #0x0                   	// #0
    5e24:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5e28:	mov	x5, x0
    5e2c:	cbz	x0, 5fc4 <PySequence_Fast@plt+0x1d84>
    5e30:	str	x23, [sp, #64]
    5e34:	add	x0, x19, #0x9b8
    5e38:	add	x0, x0, #0x40
    5e3c:	cmp	x20, #0x1
    5e40:	ldr	x23, [x5]
    5e44:	b.eq	5eec <PySequence_Fast@plt+0x1cac>  // b.none
    5e48:	ldr	x20, [x5, #8]
    5e4c:	bl	3fc0 <PyState_FindModule@plt>
    5e50:	bl	3e10 <PyModule_GetState@plt>
    5e54:	mov	x8, x0
    5e58:	mov	x0, x23
    5e5c:	bl	4368 <PySequence_Fast@plt+0x128>
    5e60:	cmp	w0, #0x0
    5e64:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    5e68:	ldr	x1, [x1, #3976]
    5e6c:	ccmp	x20, x1, #0x0, eq  // eq = none
    5e70:	b.eq	5f04 <PySequence_Fast@plt+0x1cc4>  // b.none
    5e74:	ldr	x0, [x8, #16]
    5e78:	add	x1, x19, #0x9b8
    5e7c:	mov	x4, x20
    5e80:	mov	x3, x23
    5e84:	add	x1, x1, #0x180
    5e88:	mov	x2, x21
    5e8c:	mov	x5, #0x0                   	// #0
    5e90:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    5e94:	ldr	x23, [sp, #64]
    5e98:	mov	x20, x0
    5e9c:	mov	x0, x20
    5ea0:	ldp	x29, x30, [sp, #16]
    5ea4:	ldp	x19, x20, [sp, #32]
    5ea8:	ldp	x21, x22, [sp, #48]
    5eac:	add	sp, sp, #0x60
    5eb0:	ret
    5eb4:	sub	x0, x2, #0x1
    5eb8:	cmp	x0, #0x1
    5ebc:	b.hi	5ec4 <PySequence_Fast@plt+0x1c84>  // b.pmore
    5ec0:	cbnz	x5, 5ecc <PySequence_Fast@plt+0x1c8c>
    5ec4:	mov	x20, x1
    5ec8:	b	5dfc <PySequence_Fast@plt+0x1bbc>
    5ecc:	str	x23, [sp, #64]
    5ed0:	mov	x20, x2
    5ed4:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    5ed8:	add	x0, x19, #0x9b8
    5edc:	add	x0, x0, #0x40
    5ee0:	cmp	x20, #0x1
    5ee4:	ldr	x23, [x5]
    5ee8:	b.ne	5e48 <PySequence_Fast@plt+0x1c08>  // b.any
    5eec:	bl	3fc0 <PyState_FindModule@plt>
    5ef0:	bl	3e10 <PyModule_GetState@plt>
    5ef4:	mov	x8, x0
    5ef8:	mov	x0, x23
    5efc:	bl	4368 <PySequence_Fast@plt+0x128>
    5f00:	cbnz	w0, 5ffc <PySequence_Fast@plt+0x1dbc>
    5f04:	mov	x0, #0x0                   	// #0
    5f08:	bl	3c50 <PyList_New@plt>
    5f0c:	mov	x20, x0
    5f10:	cbz	x0, 5fc0 <PySequence_Fast@plt+0x1d80>
    5f14:	ldr	x0, [x21, #40]
    5f18:	cbz	x0, 5fe0 <PySequence_Fast@plt+0x1da0>
    5f1c:	ldr	x1, [x0, #8]
    5f20:	cmp	x1, #0x0
    5f24:	b.le	5fe0 <PySequence_Fast@plt+0x1da0>
    5f28:	mov	x22, #0x0                   	// #0
    5f2c:	b	5f40 <PySequence_Fast@plt+0x1d00>
    5f30:	ldr	x0, [x21, #40]
    5f34:	ldr	x1, [x0, #8]
    5f38:	cmp	x22, x1
    5f3c:	b.ge	5fe0 <PySequence_Fast@plt+0x1da0>  // b.tcont
    5f40:	ldr	x0, [x0, #24]
    5f44:	mov	x1, x23
    5f48:	mov	w2, #0x2                   	// #2
    5f4c:	ldr	x19, [x0, x22, lsl #3]
    5f50:	add	x22, x22, #0x1
    5f54:	ldr	x3, [x19]
    5f58:	ldr	x0, [x19, #16]
    5f5c:	add	x3, x3, #0x1
    5f60:	str	x3, [x19]
    5f64:	bl	3ec0 <PyObject_RichCompareBool@plt>
    5f68:	cmp	w0, #0x0
    5f6c:	cbz	w0, 5f84 <PySequence_Fast@plt+0x1d44>
    5f70:	b.lt	5fa0 <PySequence_Fast@plt+0x1d60>  // b.tstop
    5f74:	mov	x1, x19
    5f78:	mov	x0, x20
    5f7c:	bl	3f00 <PyList_Append@plt>
    5f80:	tbnz	w0, #31, 5fa0 <PySequence_Fast@plt+0x1d60>
    5f84:	ldr	x0, [x19]
    5f88:	sub	x0, x0, #0x1
    5f8c:	str	x0, [x19]
    5f90:	cbnz	x0, 5f30 <PySequence_Fast@plt+0x1cf0>
    5f94:	mov	x0, x19
    5f98:	bl	3d70 <_Py_Dealloc@plt>
    5f9c:	b	5f30 <PySequence_Fast@plt+0x1cf0>
    5fa0:	ldr	x0, [x19]
    5fa4:	sub	x0, x0, #0x1
    5fa8:	str	x0, [x19]
    5fac:	cbz	x0, 601c <PySequence_Fast@plt+0x1ddc>
    5fb0:	ldr	x0, [x20]
    5fb4:	sub	x0, x0, #0x1
    5fb8:	str	x0, [x20]
    5fbc:	cbz	x0, 6008 <PySequence_Fast@plt+0x1dc8>
    5fc0:	ldr	x23, [sp, #64]
    5fc4:	mov	x20, #0x0                   	// #0
    5fc8:	mov	x0, x20
    5fcc:	ldp	x29, x30, [sp, #16]
    5fd0:	ldp	x19, x20, [sp, #32]
    5fd4:	ldp	x21, x22, [sp, #48]
    5fd8:	add	sp, sp, #0x60
    5fdc:	ret
    5fe0:	mov	x0, x20
    5fe4:	ldp	x29, x30, [sp, #16]
    5fe8:	ldp	x19, x20, [sp, #32]
    5fec:	ldp	x21, x22, [sp, #48]
    5ff0:	ldr	x23, [sp, #64]
    5ff4:	add	sp, sp, #0x60
    5ff8:	ret
    5ffc:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    6000:	ldr	x20, [x20, #3976]
    6004:	b	5e74 <PySequence_Fast@plt+0x1c34>
    6008:	mov	x0, x20
    600c:	mov	x20, #0x0                   	// #0
    6010:	bl	3d70 <_Py_Dealloc@plt>
    6014:	ldr	x23, [sp, #64]
    6018:	b	5e9c <PySequence_Fast@plt+0x1c5c>
    601c:	mov	x0, x19
    6020:	bl	3d70 <_Py_Dealloc@plt>
    6024:	b	5fb0 <PySequence_Fast@plt+0x1d70>
    6028:	sub	sp, sp, #0x60
    602c:	mov	x5, x1
    6030:	mov	x1, x2
    6034:	stp	x29, x30, [sp, #16]
    6038:	add	x29, sp, #0x10
    603c:	stp	x19, x20, [sp, #32]
    6040:	stp	x21, x22, [sp, #48]
    6044:	mov	x21, x0
    6048:	cbz	x3, 610c <PySequence_Fast@plt+0x1ecc>
    604c:	ldr	x20, [x3, #16]
    6050:	add	x20, x2, x20
    6054:	add	x0, sp, #0x50
    6058:	str	x0, [sp]
    605c:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    6060:	mov	x0, x5
    6064:	add	x4, x19, #0x9b8
    6068:	mov	w5, #0x1                   	// #1
    606c:	add	x4, x4, #0x198
    6070:	mov	w7, #0x0                   	// #0
    6074:	mov	w6, #0x2                   	// #2
    6078:	mov	x2, #0x0                   	// #0
    607c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6080:	mov	x5, x0
    6084:	cbz	x0, 6214 <PySequence_Fast@plt+0x1fd4>
    6088:	str	x23, [sp, #64]
    608c:	add	x0, x19, #0x9b8
    6090:	add	x0, x0, #0x40
    6094:	cmp	x20, #0x1
    6098:	ldr	x23, [x5]
    609c:	b.eq	6144 <PySequence_Fast@plt+0x1f04>  // b.none
    60a0:	ldr	x20, [x5, #8]
    60a4:	bl	3fc0 <PyState_FindModule@plt>
    60a8:	bl	3e10 <PyModule_GetState@plt>
    60ac:	mov	x8, x0
    60b0:	mov	x0, x23
    60b4:	bl	4368 <PySequence_Fast@plt+0x128>
    60b8:	cmp	w0, #0x0
    60bc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    60c0:	ldr	x1, [x1, #3976]
    60c4:	ccmp	x20, x1, #0x0, eq  // eq = none
    60c8:	b.eq	615c <PySequence_Fast@plt+0x1f1c>  // b.none
    60cc:	ldr	x0, [x8, #16]
    60d0:	add	x1, x19, #0x9b8
    60d4:	mov	x3, x23
    60d8:	add	x1, x1, #0x1d8
    60dc:	mov	x4, x20
    60e0:	mov	x2, x21
    60e4:	mov	x5, #0x0                   	// #0
    60e8:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    60ec:	ldr	x23, [sp, #64]
    60f0:	mov	x19, x0
    60f4:	mov	x0, x19
    60f8:	ldp	x29, x30, [sp, #16]
    60fc:	ldp	x19, x20, [sp, #32]
    6100:	ldp	x21, x22, [sp, #48]
    6104:	add	sp, sp, #0x60
    6108:	ret
    610c:	sub	x0, x2, #0x1
    6110:	cmp	x0, #0x1
    6114:	b.hi	611c <PySequence_Fast@plt+0x1edc>  // b.pmore
    6118:	cbnz	x5, 6124 <PySequence_Fast@plt+0x1ee4>
    611c:	mov	x20, x1
    6120:	b	6054 <PySequence_Fast@plt+0x1e14>
    6124:	str	x23, [sp, #64]
    6128:	mov	x20, x2
    612c:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    6130:	add	x0, x19, #0x9b8
    6134:	add	x0, x0, #0x40
    6138:	cmp	x20, #0x1
    613c:	ldr	x23, [x5]
    6140:	b.ne	60a0 <PySequence_Fast@plt+0x1e60>  // b.any
    6144:	bl	3fc0 <PyState_FindModule@plt>
    6148:	bl	3e10 <PyModule_GetState@plt>
    614c:	mov	x8, x0
    6150:	mov	x0, x23
    6154:	bl	4368 <PySequence_Fast@plt+0x128>
    6158:	cbnz	w0, 6238 <PySequence_Fast@plt+0x1ff8>
    615c:	ldr	x0, [x21, #40]
    6160:	cbz	x0, 61d0 <PySequence_Fast@plt+0x1f90>
    6164:	ldr	x1, [x0, #8]
    6168:	mov	x22, #0x0                   	// #0
    616c:	cmp	x1, #0x0
    6170:	b.le	61d0 <PySequence_Fast@plt+0x1f90>
    6174:	nop
    6178:	ldr	x0, [x0, #24]
    617c:	mov	x1, x23
    6180:	mov	w2, #0x2                   	// #2
    6184:	ldr	x19, [x0, x22, lsl #3]
    6188:	add	x22, x22, #0x1
    618c:	ldr	x3, [x19]
    6190:	ldr	x0, [x19, #16]
    6194:	add	x3, x3, #0x1
    6198:	str	x3, [x19]
    619c:	bl	3ec0 <PyObject_RichCompareBool@plt>
    61a0:	mov	w20, w0
    61a4:	cmp	w0, #0x0
    61a8:	b.gt	6230 <PySequence_Fast@plt+0x1ff0>
    61ac:	ldr	x0, [x19]
    61b0:	sub	x0, x0, #0x1
    61b4:	str	x0, [x19]
    61b8:	cbz	x0, 6204 <PySequence_Fast@plt+0x1fc4>
    61bc:	cbnz	w20, 6210 <PySequence_Fast@plt+0x1fd0>
    61c0:	ldr	x0, [x21, #40]
    61c4:	ldr	x1, [x0, #8]
    61c8:	cmp	x22, x1
    61cc:	b.lt	6178 <PySequence_Fast@plt+0x1f38>  // b.tstop
    61d0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    61d4:	ldr	x23, [sp, #64]
    61d8:	ldr	x0, [x0, #3976]
    61dc:	ldp	x29, x30, [sp, #16]
    61e0:	mov	x19, x0
    61e4:	ldr	x1, [x0]
    61e8:	ldp	x21, x22, [sp, #48]
    61ec:	add	x1, x1, #0x1
    61f0:	str	x1, [x0]
    61f4:	mov	x0, x19
    61f8:	ldp	x19, x20, [sp, #32]
    61fc:	add	sp, sp, #0x60
    6200:	ret
    6204:	mov	x0, x19
    6208:	bl	3d70 <_Py_Dealloc@plt>
    620c:	b	61bc <PySequence_Fast@plt+0x1f7c>
    6210:	ldr	x23, [sp, #64]
    6214:	mov	x19, #0x0                   	// #0
    6218:	mov	x0, x19
    621c:	ldp	x29, x30, [sp, #16]
    6220:	ldp	x19, x20, [sp, #32]
    6224:	ldp	x21, x22, [sp, #48]
    6228:	add	sp, sp, #0x60
    622c:	ret
    6230:	ldr	x23, [sp, #64]
    6234:	b	60f4 <PySequence_Fast@plt+0x1eb4>
    6238:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    623c:	ldr	x20, [x20, #3976]
    6240:	b	60cc <PySequence_Fast@plt+0x1e8c>
    6244:	nop
    6248:	stp	x29, x30, [sp, #-32]!
    624c:	mov	x29, sp
    6250:	stp	x19, x20, [sp, #16]
    6254:	mov	x19, x0
    6258:	bl	4220 <PyObject_GC_UnTrack@plt>
    625c:	adrp	x0, 6000 <PySequence_Fast@plt+0x1dc0>
    6260:	add	x0, x0, #0x248
    6264:	ldr	x1, [x19, #8]
    6268:	ldr	x1, [x1, #48]
    626c:	cmp	x1, x0
    6270:	b.eq	62a8 <PySequence_Fast@plt+0x2068>  // b.none
    6274:	ldr	x0, [x19, #48]
    6278:	cbz	x0, 6284 <PySequence_Fast@plt+0x2044>
    627c:	mov	x0, x19
    6280:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    6284:	mov	x0, x19
    6288:	bl	5240 <PySequence_Fast@plt+0x1000>
    628c:	ldr	x1, [x19, #8]
    6290:	mov	x0, x19
    6294:	ldp	x19, x20, [sp, #16]
    6298:	ldp	x29, x30, [sp], #32
    629c:	ldr	x1, [x1, #320]
    62a0:	mov	x16, x1
    62a4:	br	x16
    62a8:	bl	3f50 <PyThreadState_Get@plt>
    62ac:	mov	x20, x0
    62b0:	ldr	w0, [x0, #184]
    62b4:	cmp	w0, #0x31
    62b8:	b.gt	6318 <PySequence_Fast@plt+0x20d8>
    62bc:	ldr	x1, [x19, #48]
    62c0:	add	w0, w0, #0x1
    62c4:	str	w0, [x20, #184]
    62c8:	cbnz	x1, 6328 <PySequence_Fast@plt+0x20e8>
    62cc:	mov	x0, x19
    62d0:	bl	5240 <PySequence_Fast@plt+0x1000>
    62d4:	ldr	x1, [x19, #8]
    62d8:	mov	x0, x19
    62dc:	ldr	x1, [x1, #320]
    62e0:	blr	x1
    62e4:	ldr	w1, [x20, #184]
    62e8:	ldr	x0, [x20, #192]
    62ec:	sub	w1, w1, #0x1
    62f0:	str	w1, [x20, #184]
    62f4:	cmp	x0, #0x0
    62f8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    62fc:	b.le	630c <PySequence_Fast@plt+0x20cc>
    6300:	ldp	x19, x20, [sp, #16]
    6304:	ldp	x29, x30, [sp], #32
    6308:	ret
    630c:	ldp	x19, x20, [sp, #16]
    6310:	ldp	x29, x30, [sp], #32
    6314:	b	41c0 <_PyTrash_thread_destroy_chain@plt>
    6318:	mov	x0, x19
    631c:	ldp	x19, x20, [sp, #16]
    6320:	ldp	x29, x30, [sp], #32
    6324:	b	4040 <_PyTrash_thread_deposit_object@plt>
    6328:	mov	x0, x19
    632c:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    6330:	b	62cc <PySequence_Fast@plt+0x208c>
    6334:	nop
    6338:	sub	sp, sp, #0x90
    633c:	stp	x29, x30, [sp, #16]
    6340:	add	x29, sp, #0x10
    6344:	stp	x19, x20, [sp, #32]
    6348:	mov	x19, x0
    634c:	stp	x21, x22, [sp, #48]
    6350:	add	x22, x1, #0x18
    6354:	ldr	x1, [x1, #16]
    6358:	cbz	x2, 64c8 <PySequence_Fast@plt+0x2288>
    635c:	ldr	x20, [x2, #16]
    6360:	add	x20, x1, x20
    6364:	add	x0, sp, #0x68
    6368:	str	x0, [sp]
    636c:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    6370:	add	x4, x4, #0x9b8
    6374:	mov	x0, x22
    6378:	add	x4, x4, #0x1f0
    637c:	mov	w7, #0x0                   	// #0
    6380:	mov	w6, #0x1                   	// #1
    6384:	mov	w5, #0x0                   	// #0
    6388:	mov	x3, #0x0                   	// #0
    638c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6390:	mov	x22, x0
    6394:	cbz	x0, 6668 <PySequence_Fast@plt+0x2428>
    6398:	stp	x23, x24, [sp, #64]
    639c:	stp	x25, x26, [sp, #80]
    63a0:	cbz	x20, 64e8 <PySequence_Fast@plt+0x22a8>
    63a4:	ldr	x24, [x22]
    63a8:	cbz	x24, 65c0 <PySequence_Fast@plt+0x2380>
    63ac:	subs	x20, x20, #0x1
    63b0:	b.eq	6630 <PySequence_Fast@plt+0x23f0>  // b.none
    63b4:	ldr	x23, [x22, #8]
    63b8:	cbz	x23, 65d0 <PySequence_Fast@plt+0x2390>
    63bc:	subs	x20, x20, #0x1
    63c0:	b.eq	661c <PySequence_Fast@plt+0x23dc>  // b.none
    63c4:	ldr	x26, [x22, #16]
    63c8:	cbz	x26, 65e0 <PySequence_Fast@plt+0x23a0>
    63cc:	subs	x20, x20, #0x1
    63d0:	b.eq	6648 <PySequence_Fast@plt+0x2408>  // b.none
    63d4:	ldr	x0, [x22, #24]
    63d8:	cbz	x0, 65f0 <PySequence_Fast@plt+0x23b0>
    63dc:	bl	4050 <PyObject_IsTrue@plt>
    63e0:	mov	w25, w0
    63e4:	tbnz	w0, #31, 6660 <PySequence_Fast@plt+0x2420>
    63e8:	cmp	x20, #0x1
    63ec:	b.eq	6658 <PySequence_Fast@plt+0x2418>  // b.none
    63f0:	ldr	x0, [x22, #32]
    63f4:	bl	4050 <PyObject_IsTrue@plt>
    63f8:	mov	w20, w0
    63fc:	tbnz	w0, #31, 6660 <PySequence_Fast@plt+0x2420>
    6400:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    6404:	ldr	x1, [x21, #3976]
    6408:	ldr	x0, [x19, #72]
    640c:	cmp	x24, x1
    6410:	b.eq	6670 <PySequence_Fast@plt+0x2430>  // b.none
    6414:	ldr	x1, [x24]
    6418:	add	x1, x1, #0x1
    641c:	str	x1, [x24]
    6420:	str	x24, [x19, #72]
    6424:	cbz	x0, 6438 <PySequence_Fast@plt+0x21f8>
    6428:	ldr	x1, [x0]
    642c:	sub	x1, x1, #0x1
    6430:	str	x1, [x0]
    6434:	cbz	x1, 6518 <PySequence_Fast@plt+0x22d8>
    6438:	ldr	x0, [x21, #3976]
    643c:	cmp	x23, x0
    6440:	b.eq	6580 <PySequence_Fast@plt+0x2340>  // b.none
    6444:	ldr	x1, [x23]
    6448:	ldr	x0, [x19, #80]
    644c:	add	x1, x1, #0x1
    6450:	str	x1, [x23]
    6454:	str	x23, [x19, #80]
    6458:	cbz	x0, 646c <PySequence_Fast@plt+0x222c>
    645c:	ldr	x1, [x0]
    6460:	sub	x1, x1, #0x1
    6464:	str	x1, [x0]
    6468:	cbz	x1, 65f8 <PySequence_Fast@plt+0x23b8>
    646c:	strb	w25, [x19, #152]
    6470:	ldr	x21, [x21, #3976]
    6474:	cmp	x26, x21
    6478:	b.eq	6520 <PySequence_Fast@plt+0x22e0>  // b.none
    647c:	ldr	x1, [x26]
    6480:	ldr	x0, [x19, #88]
    6484:	add	x1, x1, #0x1
    6488:	str	x1, [x26]
    648c:	str	x26, [x19, #88]
    6490:	cbz	x0, 64a4 <PySequence_Fast@plt+0x2264>
    6494:	ldr	x1, [x0]
    6498:	sub	x1, x1, #0x1
    649c:	str	x1, [x0]
    64a0:	cbz	x1, 6614 <PySequence_Fast@plt+0x23d4>
    64a4:	strb	w20, [x19, #153]
    64a8:	mov	w0, #0x0                   	// #0
    64ac:	ldp	x23, x24, [sp, #64]
    64b0:	ldp	x25, x26, [sp, #80]
    64b4:	ldp	x29, x30, [sp, #16]
    64b8:	ldp	x19, x20, [sp, #32]
    64bc:	ldp	x21, x22, [sp, #48]
    64c0:	add	sp, sp, #0x90
    64c4:	ret
    64c8:	cmp	x1, #0x1
    64cc:	b.ls	64d8 <PySequence_Fast@plt+0x2298>  // b.plast
    64d0:	mov	x20, x1
    64d4:	b	6364 <PySequence_Fast@plt+0x2124>
    64d8:	stp	x23, x24, [sp, #64]
    64dc:	mov	x20, x1
    64e0:	stp	x25, x26, [sp, #80]
    64e4:	cbnz	x20, 63a4 <PySequence_Fast@plt+0x2164>
    64e8:	ldr	x0, [x19, #72]
    64ec:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    64f0:	mov	w20, #0x0                   	// #0
    64f4:	mov	w25, #0x0                   	// #0
    64f8:	cbz	x0, 657c <PySequence_Fast@plt+0x233c>
    64fc:	ldr	x1, [x0]
    6500:	str	xzr, [x19, #72]
    6504:	sub	x1, x1, #0x1
    6508:	str	x1, [x0]
    650c:	cbnz	x1, 657c <PySequence_Fast@plt+0x233c>
    6510:	ldr	x23, [x21, #3976]
    6514:	mov	x26, x23
    6518:	bl	3d70 <_Py_Dealloc@plt>
    651c:	b	6438 <PySequence_Fast@plt+0x21f8>
    6520:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    6524:	add	x0, x0, #0x9b8
    6528:	add	x0, x0, #0x40
    652c:	bl	3fc0 <PyState_FindModule@plt>
    6530:	bl	3e10 <PyModule_GetState@plt>
    6534:	ldr	x26, [x0, #32]
    6538:	cbnz	x26, 647c <PySequence_Fast@plt+0x223c>
    653c:	ldr	x0, [x19, #88]
    6540:	cbz	x0, 6558 <PySequence_Fast@plt+0x2318>
    6544:	ldr	x1, [x0]
    6548:	str	xzr, [x19, #88]
    654c:	sub	x1, x1, #0x1
    6550:	str	x1, [x0]
    6554:	cbz	x1, 660c <PySequence_Fast@plt+0x23cc>
    6558:	strb	wzr, [x19, #153]
    655c:	mov	w0, #0x0                   	// #0
    6560:	ldp	x29, x30, [sp, #16]
    6564:	ldp	x19, x20, [sp, #32]
    6568:	ldp	x21, x22, [sp, #48]
    656c:	ldp	x23, x24, [sp, #64]
    6570:	ldp	x25, x26, [sp, #80]
    6574:	add	sp, sp, #0x90
    6578:	ret
    657c:	ldr	x26, [x21, #3976]
    6580:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    6584:	add	x0, x0, #0x9b8
    6588:	add	x0, x0, #0x40
    658c:	bl	3fc0 <PyState_FindModule@plt>
    6590:	bl	3e10 <PyModule_GetState@plt>
    6594:	ldr	x23, [x0, #24]
    6598:	cbnz	x23, 6444 <PySequence_Fast@plt+0x2204>
    659c:	ldr	x0, [x19, #80]
    65a0:	cbz	x0, 65b8 <PySequence_Fast@plt+0x2378>
    65a4:	ldr	x1, [x0]
    65a8:	str	xzr, [x19, #80]
    65ac:	sub	x1, x1, #0x1
    65b0:	str	x1, [x0]
    65b4:	cbz	x1, 6600 <PySequence_Fast@plt+0x23c0>
    65b8:	strb	wzr, [x19, #152]
    65bc:	b	6470 <PySequence_Fast@plt+0x2230>
    65c0:	ldr	x23, [x22, #8]
    65c4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    65c8:	ldr	x24, [x21, #3976]
    65cc:	cbnz	x23, 63bc <PySequence_Fast@plt+0x217c>
    65d0:	ldr	x26, [x22, #16]
    65d4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    65d8:	ldr	x23, [x21, #3976]
    65dc:	cbnz	x26, 63cc <PySequence_Fast@plt+0x218c>
    65e0:	ldr	x0, [x22, #24]
    65e4:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    65e8:	ldr	x26, [x21, #3976]
    65ec:	cbnz	x0, 63dc <PySequence_Fast@plt+0x219c>
    65f0:	mov	w25, #0x0                   	// #0
    65f4:	b	63f0 <PySequence_Fast@plt+0x21b0>
    65f8:	bl	3d70 <_Py_Dealloc@plt>
    65fc:	b	646c <PySequence_Fast@plt+0x222c>
    6600:	bl	3d70 <_Py_Dealloc@plt>
    6604:	strb	wzr, [x19, #152]
    6608:	b	6470 <PySequence_Fast@plt+0x2230>
    660c:	bl	3d70 <_Py_Dealloc@plt>
    6610:	b	6558 <PySequence_Fast@plt+0x2318>
    6614:	bl	3d70 <_Py_Dealloc@plt>
    6618:	b	64a4 <PySequence_Fast@plt+0x2264>
    661c:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    6620:	mov	w20, #0x0                   	// #0
    6624:	mov	w25, #0x0                   	// #0
    6628:	ldr	x26, [x21, #3976]
    662c:	b	6404 <PySequence_Fast@plt+0x21c4>
    6630:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    6634:	mov	w20, #0x0                   	// #0
    6638:	mov	w25, #0x0                   	// #0
    663c:	ldr	x26, [x21, #3976]
    6640:	mov	x23, x26
    6644:	b	6404 <PySequence_Fast@plt+0x21c4>
    6648:	mov	w20, #0x0                   	// #0
    664c:	mov	w25, #0x0                   	// #0
    6650:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    6654:	b	6404 <PySequence_Fast@plt+0x21c4>
    6658:	mov	w20, #0x0                   	// #0
    665c:	b	6400 <PySequence_Fast@plt+0x21c0>
    6660:	ldp	x23, x24, [sp, #64]
    6664:	ldp	x25, x26, [sp, #80]
    6668:	mov	w0, #0xffffffff            	// #-1
    666c:	b	64b4 <PySequence_Fast@plt+0x2274>
    6670:	cbz	x0, 6438 <PySequence_Fast@plt+0x21f8>
    6674:	ldr	x1, [x0]
    6678:	str	xzr, [x19, #72]
    667c:	sub	x1, x1, #0x1
    6680:	str	x1, [x0]
    6684:	cbnz	x1, 6438 <PySequence_Fast@plt+0x21f8>
    6688:	bl	3d70 <_Py_Dealloc@plt>
    668c:	b	6438 <PySequence_Fast@plt+0x21f8>
    6690:	stp	x29, x30, [sp, #-48]!
    6694:	mov	x29, sp
    6698:	str	x21, [sp, #32]
    669c:	ldr	x21, [x0, #24]
    66a0:	stp	x19, x20, [sp, #16]
    66a4:	mov	x20, x0
    66a8:	str	xzr, [x0, #24]
    66ac:	bl	4220 <PyObject_GC_UnTrack@plt>
    66b0:	cbz	x21, 6764 <PySequence_Fast@plt+0x2524>
    66b4:	sub	x19, x21, #0x1
    66b8:	ldr	x2, [x20, #16]
    66bc:	b	66c8 <PySequence_Fast@plt+0x2488>
    66c0:	cmn	x19, #0x1
    66c4:	b.eq	66f8 <PySequence_Fast@plt+0x24b8>  // b.none
    66c8:	lsl	x1, x19, #4
    66cc:	sub	x19, x19, #0x1
    66d0:	ldr	x0, [x2, x1]
    66d4:	cbz	x0, 66c0 <PySequence_Fast@plt+0x2480>
    66d8:	ldr	x1, [x0]
    66dc:	sub	x1, x1, #0x1
    66e0:	str	x1, [x0]
    66e4:	cbnz	x1, 66c0 <PySequence_Fast@plt+0x2480>
    66e8:	bl	3d70 <_Py_Dealloc@plt>
    66ec:	cmn	x19, #0x1
    66f0:	ldr	x2, [x20, #16]
    66f4:	b.ne	66c8 <PySequence_Fast@plt+0x2488>  // b.any
    66f8:	mov	x0, x2
    66fc:	bl	3cd0 <PyMem_Free@plt>
    6700:	ldr	x0, [x20, #48]
    6704:	cbz	x0, 6718 <PySequence_Fast@plt+0x24d8>
    6708:	ldr	x1, [x0]
    670c:	sub	x1, x1, #0x1
    6710:	str	x1, [x0]
    6714:	cbz	x1, 675c <PySequence_Fast@plt+0x251c>
    6718:	ldr	x0, [x20, #40]
    671c:	cbz	x0, 6730 <PySequence_Fast@plt+0x24f0>
    6720:	ldr	x1, [x0]
    6724:	sub	x1, x1, #0x1
    6728:	str	x1, [x0]
    672c:	cbz	x1, 6744 <PySequence_Fast@plt+0x2504>
    6730:	mov	x0, x20
    6734:	ldp	x19, x20, [sp, #16]
    6738:	ldr	x21, [sp, #32]
    673c:	ldp	x29, x30, [sp], #48
    6740:	b	3da0 <PyObject_GC_Del@plt>
    6744:	bl	3d70 <_Py_Dealloc@plt>
    6748:	mov	x0, x20
    674c:	ldp	x19, x20, [sp, #16]
    6750:	ldr	x21, [sp, #32]
    6754:	ldp	x29, x30, [sp], #48
    6758:	b	3da0 <PyObject_GC_Del@plt>
    675c:	bl	3d70 <_Py_Dealloc@plt>
    6760:	b	6718 <PySequence_Fast@plt+0x24d8>
    6764:	ldr	x2, [x20, #16]
    6768:	b	66f8 <PySequence_Fast@plt+0x24b8>
    676c:	nop
    6770:	stp	x29, x30, [sp, #-64]!
    6774:	mov	x29, sp
    6778:	str	x21, [sp, #32]
    677c:	mov	x21, x0
    6780:	ldr	x0, [x0, #16]
    6784:	stp	x19, x20, [sp, #16]
    6788:	mov	x20, x1
    678c:	str	x2, [sp, #56]
    6790:	cbz	x0, 67a0 <PySequence_Fast@plt+0x2560>
    6794:	ldr	x1, [sp, #56]
    6798:	blr	x20
    679c:	cbnz	w0, 6830 <PySequence_Fast@plt+0x25f0>
    67a0:	ldr	x0, [x21, #24]
    67a4:	ands	x0, x0, #0xfffffffffffffffe
    67a8:	b.eq	67b8 <PySequence_Fast@plt+0x2578>  // b.none
    67ac:	ldr	x1, [sp, #56]
    67b0:	blr	x20
    67b4:	cbnz	w0, 6830 <PySequence_Fast@plt+0x25f0>
    67b8:	ldr	x0, [x21, #32]
    67bc:	ands	x0, x0, #0xfffffffffffffffe
    67c0:	b.eq	67d0 <PySequence_Fast@plt+0x2590>  // b.none
    67c4:	ldr	x1, [sp, #56]
    67c8:	blr	x20
    67cc:	cbnz	w0, 6830 <PySequence_Fast@plt+0x25f0>
    67d0:	ldr	x2, [x21, #40]
    67d4:	cbz	x2, 682c <PySequence_Fast@plt+0x25ec>
    67d8:	ldr	x0, [x2]
    67dc:	cbz	x0, 67f0 <PySequence_Fast@plt+0x25b0>
    67e0:	ldr	x1, [sp, #56]
    67e4:	blr	x20
    67e8:	cbnz	w0, 6830 <PySequence_Fast@plt+0x25f0>
    67ec:	ldr	x2, [x21, #40]
    67f0:	ldr	x0, [x2, #8]
    67f4:	cmp	x0, #0x0
    67f8:	b.le	682c <PySequence_Fast@plt+0x25ec>
    67fc:	mov	x19, #0x0                   	// #0
    6800:	ldr	x0, [x2, #24]
    6804:	ldr	x1, [sp, #56]
    6808:	ldr	x0, [x0, x19, lsl #3]
    680c:	cbz	x0, 681c <PySequence_Fast@plt+0x25dc>
    6810:	blr	x20
    6814:	cbnz	w0, 6830 <PySequence_Fast@plt+0x25f0>
    6818:	ldr	x2, [x21, #40]
    681c:	add	x19, x19, #0x1
    6820:	ldr	x0, [x2, #8]
    6824:	cmp	x19, x0
    6828:	b.lt	6800 <PySequence_Fast@plt+0x25c0>  // b.tstop
    682c:	mov	w0, #0x0                   	// #0
    6830:	ldp	x19, x20, [sp, #16]
    6834:	ldr	x21, [sp, #32]
    6838:	ldp	x29, x30, [sp], #64
    683c:	ret
    6840:	stp	x29, x30, [sp, #-48]!
    6844:	mov	x29, sp
    6848:	stp	x21, x22, [sp, #32]
    684c:	mov	x21, x0
    6850:	mov	x22, x2
    6854:	ldr	x0, [x0, #24]
    6858:	stp	x19, x20, [sp, #16]
    685c:	mov	x20, x1
    6860:	sub	x19, x0, #0x1
    6864:	cbnz	x0, 6870 <PySequence_Fast@plt+0x2630>
    6868:	b	6894 <PySequence_Fast@plt+0x2654>
    686c:	mov	x19, x3
    6870:	ldr	x4, [x21, #16]
    6874:	lsl	x3, x19, #4
    6878:	mov	x1, x22
    687c:	ldr	x0, [x4, x3]
    6880:	cbz	x0, 688c <PySequence_Fast@plt+0x264c>
    6884:	blr	x20
    6888:	cbnz	w0, 68c8 <PySequence_Fast@plt+0x2688>
    688c:	sub	x3, x19, #0x1
    6890:	cbnz	x19, 686c <PySequence_Fast@plt+0x262c>
    6894:	ldr	x0, [x21, #40]
    6898:	cbz	x0, 68a8 <PySequence_Fast@plt+0x2668>
    689c:	mov	x1, x22
    68a0:	blr	x20
    68a4:	cbnz	w0, 68c8 <PySequence_Fast@plt+0x2688>
    68a8:	ldr	x0, [x21, #48]
    68ac:	cbz	x0, 68c8 <PySequence_Fast@plt+0x2688>
    68b0:	mov	x1, x22
    68b4:	mov	x16, x20
    68b8:	ldp	x19, x20, [sp, #16]
    68bc:	ldp	x21, x22, [sp, #32]
    68c0:	ldp	x29, x30, [sp], #48
    68c4:	br	x16
    68c8:	ldp	x19, x20, [sp, #16]
    68cc:	ldp	x21, x22, [sp, #32]
    68d0:	ldp	x29, x30, [sp], #48
    68d4:	ret
    68d8:	stp	x29, x30, [sp, #-64]!
    68dc:	mov	x29, sp
    68e0:	stp	x19, x20, [sp, #16]
    68e4:	mov	x19, x0
    68e8:	mov	x20, x1
    68ec:	ldr	x0, [x0, #144]
    68f0:	str	x21, [sp, #32]
    68f4:	str	x2, [sp, #56]
    68f8:	mov	x21, x2
    68fc:	cbz	x0, 690c <PySequence_Fast@plt+0x26cc>
    6900:	mov	x1, x2
    6904:	blr	x20
    6908:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    690c:	ldr	x0, [x19, #136]
    6910:	cbz	x0, 6920 <PySequence_Fast@plt+0x26e0>
    6914:	mov	x1, x21
    6918:	blr	x20
    691c:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6920:	ldr	x0, [x19, #128]
    6924:	cbz	x0, 6934 <PySequence_Fast@plt+0x26f4>
    6928:	mov	x1, x21
    692c:	blr	x20
    6930:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6934:	ldr	x0, [x19, #120]
    6938:	cbz	x0, 6948 <PySequence_Fast@plt+0x2708>
    693c:	mov	x1, x21
    6940:	blr	x20
    6944:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6948:	ldr	x0, [x19, #112]
    694c:	cbz	x0, 695c <PySequence_Fast@plt+0x271c>
    6950:	mov	x1, x21
    6954:	blr	x20
    6958:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    695c:	ldr	x0, [x19, #104]
    6960:	cbz	x0, 6970 <PySequence_Fast@plt+0x2730>
    6964:	mov	x1, x21
    6968:	blr	x20
    696c:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6970:	ldr	x0, [x19, #96]
    6974:	cbz	x0, 6984 <PySequence_Fast@plt+0x2744>
    6978:	mov	x1, x21
    697c:	blr	x20
    6980:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6984:	ldr	x0, [x19, #16]
    6988:	cbz	x0, 6998 <PySequence_Fast@plt+0x2758>
    698c:	mov	x1, x21
    6990:	blr	x20
    6994:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6998:	ldr	x0, [x19, #24]
    699c:	cbz	x0, 69ac <PySequence_Fast@plt+0x276c>
    69a0:	mov	x1, x21
    69a4:	blr	x20
    69a8:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    69ac:	ldr	x0, [x19, #32]
    69b0:	cbz	x0, 69c0 <PySequence_Fast@plt+0x2780>
    69b4:	mov	x1, x21
    69b8:	blr	x20
    69bc:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    69c0:	ldr	x0, [x19, #40]
    69c4:	cbz	x0, 69d4 <PySequence_Fast@plt+0x2794>
    69c8:	mov	x1, x21
    69cc:	blr	x20
    69d0:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    69d4:	ldr	x0, [x19, #48]
    69d8:	cbz	x0, 69e8 <PySequence_Fast@plt+0x27a8>
    69dc:	mov	x1, x21
    69e0:	blr	x20
    69e4:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    69e8:	ldr	x0, [x19, #56]
    69ec:	cbz	x0, 69fc <PySequence_Fast@plt+0x27bc>
    69f0:	mov	x1, x21
    69f4:	blr	x20
    69f8:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    69fc:	ldr	x0, [x19, #88]
    6a00:	cbz	x0, 6a10 <PySequence_Fast@plt+0x27d0>
    6a04:	mov	x1, x21
    6a08:	blr	x20
    6a0c:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6a10:	ldr	x0, [x19, #80]
    6a14:	cbz	x0, 6a24 <PySequence_Fast@plt+0x27e4>
    6a18:	mov	x1, x21
    6a1c:	blr	x20
    6a20:	cbnz	w0, 6a44 <PySequence_Fast@plt+0x2804>
    6a24:	ldr	x0, [x19, #72]
    6a28:	cbz	x0, 6a44 <PySequence_Fast@plt+0x2804>
    6a2c:	mov	x1, x21
    6a30:	mov	x16, x20
    6a34:	ldp	x19, x20, [sp, #16]
    6a38:	ldr	x21, [sp, #32]
    6a3c:	ldp	x29, x30, [sp], #64
    6a40:	br	x16
    6a44:	ldp	x19, x20, [sp, #16]
    6a48:	ldr	x21, [sp, #32]
    6a4c:	ldp	x29, x30, [sp], #64
    6a50:	ret
    6a54:	nop
    6a58:	stp	x29, x30, [sp, #-48]!
    6a5c:	mov	x29, sp
    6a60:	stp	x19, x20, [sp, #16]
    6a64:	mov	x19, x0
    6a68:	mov	x20, x1
    6a6c:	ldr	x0, [x0, #112]
    6a70:	str	x21, [sp, #32]
    6a74:	mov	x21, x2
    6a78:	cbz	x0, 6a88 <PySequence_Fast@plt+0x2848>
    6a7c:	mov	x1, x2
    6a80:	blr	x20
    6a84:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6a88:	ldr	x0, [x19, #96]
    6a8c:	cbz	x0, 6a9c <PySequence_Fast@plt+0x285c>
    6a90:	mov	x1, x21
    6a94:	blr	x20
    6a98:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6a9c:	ldr	x0, [x19, #88]
    6aa0:	cbz	x0, 6ab0 <PySequence_Fast@plt+0x2870>
    6aa4:	mov	x1, x21
    6aa8:	blr	x20
    6aac:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6ab0:	ldr	x0, [x19, #80]
    6ab4:	cbz	x0, 6ac4 <PySequence_Fast@plt+0x2884>
    6ab8:	mov	x1, x21
    6abc:	blr	x20
    6ac0:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6ac4:	ldr	x0, [x19, #72]
    6ac8:	cbz	x0, 6ad8 <PySequence_Fast@plt+0x2898>
    6acc:	mov	x1, x21
    6ad0:	blr	x20
    6ad4:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6ad8:	ldr	x0, [x19, #64]
    6adc:	cbz	x0, 6aec <PySequence_Fast@plt+0x28ac>
    6ae0:	mov	x1, x21
    6ae4:	blr	x20
    6ae8:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6aec:	ldr	x0, [x19, #48]
    6af0:	cbz	x0, 6b00 <PySequence_Fast@plt+0x28c0>
    6af4:	mov	x1, x21
    6af8:	blr	x20
    6afc:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6b00:	ldr	x0, [x19, #56]
    6b04:	cbz	x0, 6b14 <PySequence_Fast@plt+0x28d4>
    6b08:	mov	x1, x21
    6b0c:	blr	x20
    6b10:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6b14:	ldr	x0, [x19, #104]
    6b18:	cbz	x0, 6b28 <PySequence_Fast@plt+0x28e8>
    6b1c:	mov	x1, x21
    6b20:	blr	x20
    6b24:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6b28:	ldr	x0, [x19, #24]
    6b2c:	cbz	x0, 6b3c <PySequence_Fast@plt+0x28fc>
    6b30:	mov	x1, x21
    6b34:	blr	x20
    6b38:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6b3c:	ldr	x0, [x19, #32]
    6b40:	cbz	x0, 6b50 <PySequence_Fast@plt+0x2910>
    6b44:	mov	x1, x21
    6b48:	blr	x20
    6b4c:	cbnz	w0, 6b70 <PySequence_Fast@plt+0x2930>
    6b50:	ldr	x0, [x19, #40]
    6b54:	cbz	x0, 6b70 <PySequence_Fast@plt+0x2930>
    6b58:	mov	x1, x21
    6b5c:	mov	x16, x20
    6b60:	ldp	x19, x20, [sp, #16]
    6b64:	ldr	x21, [sp, #32]
    6b68:	ldp	x29, x30, [sp], #48
    6b6c:	br	x16
    6b70:	ldp	x19, x20, [sp, #16]
    6b74:	ldr	x21, [sp, #32]
    6b78:	ldp	x29, x30, [sp], #48
    6b7c:	ret
    6b80:	ldr	x0, [x0, #40]
    6b84:	cmp	x1, #0x0
    6b88:	ccmp	x0, #0x0, #0x4, ge  // ge = tcont
    6b8c:	b.eq	6bb4 <PySequence_Fast@plt+0x2974>  // b.none
    6b90:	ldr	x2, [x0, #8]
    6b94:	cmp	x2, x1
    6b98:	b.le	6bb4 <PySequence_Fast@plt+0x2974>
    6b9c:	ldr	x0, [x0, #24]
    6ba0:	ldr	x0, [x0, x1, lsl #3]
    6ba4:	ldr	x1, [x0]
    6ba8:	add	x1, x1, #0x1
    6bac:	str	x1, [x0]
    6bb0:	ret
    6bb4:	stp	x29, x30, [sp, #-16]!
    6bb8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    6bbc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6bc0:	mov	x29, sp
    6bc4:	ldr	x0, [x0, #3984]
    6bc8:	add	x1, x1, #0xc10
    6bcc:	ldr	x0, [x0]
    6bd0:	bl	3de0 <PyErr_SetString@plt>
    6bd4:	mov	x0, #0x0                   	// #0
    6bd8:	ldp	x29, x30, [sp], #16
    6bdc:	ret
    6be0:	stp	x29, x30, [sp, #-80]!
    6be4:	mov	x3, x1
    6be8:	mov	x29, sp
    6bec:	ldr	x1, [x1, #8]
    6bf0:	stp	x19, x20, [sp, #16]
    6bf4:	mov	x19, x0
    6bf8:	ldr	x0, [x1, #96]
    6bfc:	cbz	x0, 6c44 <PySequence_Fast@plt+0x2a04>
    6c00:	ldr	x0, [x0, #264]
    6c04:	cbz	x0, 6c44 <PySequence_Fast@plt+0x2a04>
    6c08:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    6c0c:	mov	x0, x3
    6c10:	ldr	x1, [x1, #3984]
    6c14:	ldr	x1, [x1]
    6c18:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    6c1c:	mov	x20, x0
    6c20:	cmn	x0, #0x1
    6c24:	b.eq	6d08 <PySequence_Fast@plt+0x2ac8>  // b.none
    6c28:	tbnz	x0, #63, 6d18 <PySequence_Fast@plt+0x2ad8>
    6c2c:	mov	x1, x20
    6c30:	mov	x0, x19
    6c34:	bl	6b80 <PySequence_Fast@plt+0x2940>
    6c38:	ldp	x19, x20, [sp, #16]
    6c3c:	ldp	x29, x30, [sp], #80
    6c40:	ret
    6c44:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    6c48:	ldr	x0, [x0, #3952]
    6c4c:	cmp	x1, x0
    6c50:	b.ne	6d3c <PySequence_Fast@plt+0x2afc>  // b.any
    6c54:	ldr	x0, [x19, #40]
    6c58:	cbz	x0, 6d00 <PySequence_Fast@plt+0x2ac0>
    6c5c:	add	x20, sp, #0x38
    6c60:	str	x21, [sp, #32]
    6c64:	add	x21, sp, #0x40
    6c68:	mov	x0, x3
    6c6c:	mov	x1, x20
    6c70:	add	x3, sp, #0x48
    6c74:	mov	x2, x21
    6c78:	bl	4130 <PySlice_Unpack@plt>
    6c7c:	tbnz	w0, #31, 6cf4 <PySequence_Fast@plt+0x2ab4>
    6c80:	ldr	x0, [x19, #40]
    6c84:	mov	x1, x20
    6c88:	ldr	x3, [sp, #72]
    6c8c:	mov	x2, x21
    6c90:	ldr	x0, [x0, #8]
    6c94:	bl	3f10 <PySlice_AdjustIndices@plt>
    6c98:	mov	x20, x0
    6c9c:	cmp	x0, #0x0
    6ca0:	b.le	6d2c <PySequence_Fast@plt+0x2aec>
    6ca4:	bl	3c50 <PyList_New@plt>
    6ca8:	cbz	x0, 6cf4 <PySequence_Fast@plt+0x2ab4>
    6cac:	ldr	x1, [x19, #40]
    6cb0:	ldr	x3, [x0, #24]
    6cb4:	ldr	x6, [x1, #24]
    6cb8:	ldr	x4, [sp, #56]
    6cbc:	add	x5, x3, x20, lsl #3
    6cc0:	ldr	x1, [x6, x4, lsl #3]
    6cc4:	ldr	x2, [x1]
    6cc8:	add	x2, x2, #0x1
    6ccc:	str	x2, [x1]
    6cd0:	str	x1, [x3], #8
    6cd4:	ldr	x1, [sp, #72]
    6cd8:	cmp	x5, x3
    6cdc:	add	x4, x4, x1
    6ce0:	b.ne	6cc0 <PySequence_Fast@plt+0x2a80>  // b.any
    6ce4:	ldr	x21, [sp, #32]
    6ce8:	ldp	x19, x20, [sp, #16]
    6cec:	ldp	x29, x30, [sp], #80
    6cf0:	ret
    6cf4:	mov	x0, #0x0                   	// #0
    6cf8:	ldr	x21, [sp, #32]
    6cfc:	b	6ce8 <PySequence_Fast@plt+0x2aa8>
    6d00:	bl	3c50 <PyList_New@plt>
    6d04:	b	6c38 <PySequence_Fast@plt+0x29f8>
    6d08:	bl	3f80 <PyErr_Occurred@plt>
    6d0c:	mov	x1, x0
    6d10:	mov	x0, #0x0                   	// #0
    6d14:	cbnz	x1, 6c38 <PySequence_Fast@plt+0x29f8>
    6d18:	ldr	x0, [x19, #40]
    6d1c:	cbz	x0, 6c2c <PySequence_Fast@plt+0x29ec>
    6d20:	ldr	x0, [x0, #8]
    6d24:	add	x20, x20, x0
    6d28:	b	6c2c <PySequence_Fast@plt+0x29ec>
    6d2c:	mov	x0, #0x0                   	// #0
    6d30:	bl	3c50 <PyList_New@plt>
    6d34:	ldr	x21, [sp, #32]
    6d38:	b	6c38 <PySequence_Fast@plt+0x29f8>
    6d3c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    6d40:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    6d44:	add	x1, x1, #0xc30
    6d48:	ldr	x0, [x0, #3944]
    6d4c:	ldr	x0, [x0]
    6d50:	bl	3de0 <PyErr_SetString@plt>
    6d54:	mov	x0, #0x0                   	// #0
    6d58:	ldp	x19, x20, [sp, #16]
    6d5c:	ldp	x29, x30, [sp], #80
    6d60:	ret
    6d64:	nop
    6d68:	sub	sp, sp, #0x40
    6d6c:	stp	x29, x30, [sp, #16]
    6d70:	add	x29, sp, #0x10
    6d74:	stp	x19, x20, [sp, #32]
    6d78:	mov	x20, x0
    6d7c:	mov	x0, x1
    6d80:	mov	x1, x2
    6d84:	cbz	x3, 6e18 <PySequence_Fast@plt+0x2bd8>
    6d88:	ldr	x19, [x3, #16]
    6d8c:	add	x19, x2, x19
    6d90:	add	x2, sp, #0x30
    6d94:	str	x2, [sp]
    6d98:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    6d9c:	add	x4, x4, #0x9b8
    6da0:	add	x4, x4, #0x230
    6da4:	mov	w7, #0x0                   	// #0
    6da8:	mov	w6, #0x2                   	// #2
    6dac:	mov	w5, #0x1                   	// #1
    6db0:	mov	x2, #0x0                   	// #0
    6db4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6db8:	cbz	x0, 6e48 <PySequence_Fast@plt+0x2c08>
    6dbc:	cmp	x19, #0x1
    6dc0:	b.eq	6e34 <PySequence_Fast@plt+0x2bf4>  // b.none
    6dc4:	ldr	x19, [x0, #8]
    6dc8:	ldr	x2, [x20, #40]
    6dcc:	cbz	x2, 6df8 <PySequence_Fast@plt+0x2bb8>
    6dd0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    6dd4:	ldr	x2, [x2]
    6dd8:	ldr	x1, [x1, #3976]
    6ddc:	cmp	x2, x1
    6de0:	b.eq	6df8 <PySequence_Fast@plt+0x2bb8>  // b.none
    6de4:	ldr	x1, [x0]
    6de8:	mov	x0, x2
    6dec:	bl	4230 <PyDict_GetItemWithError@plt>
    6df0:	cbz	x0, 6e40 <PySequence_Fast@plt+0x2c00>
    6df4:	mov	x19, x0
    6df8:	ldr	x0, [x19]
    6dfc:	ldp	x29, x30, [sp, #16]
    6e00:	add	x0, x0, #0x1
    6e04:	str	x0, [x19]
    6e08:	mov	x0, x19
    6e0c:	ldp	x19, x20, [sp, #32]
    6e10:	add	sp, sp, #0x40
    6e14:	ret
    6e18:	sub	x2, x2, #0x1
    6e1c:	mov	x19, x1
    6e20:	cmp	x2, #0x1
    6e24:	b.hi	6d90 <PySequence_Fast@plt+0x2b50>  // b.pmore
    6e28:	cbz	x0, 6d90 <PySequence_Fast@plt+0x2b50>
    6e2c:	cmp	x19, #0x1
    6e30:	b.ne	6dc4 <PySequence_Fast@plt+0x2b84>  // b.any
    6e34:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x12790>
    6e38:	ldr	x19, [x19, #3976]
    6e3c:	b	6dc8 <PySequence_Fast@plt+0x2b88>
    6e40:	bl	3f80 <PyErr_Occurred@plt>
    6e44:	cbz	x0, 6df8 <PySequence_Fast@plt+0x2bb8>
    6e48:	mov	x19, #0x0                   	// #0
    6e4c:	mov	x0, x19
    6e50:	ldp	x29, x30, [sp, #16]
    6e54:	ldp	x19, x20, [sp, #32]
    6e58:	add	sp, sp, #0x40
    6e5c:	ret
    6e60:	stp	x29, x30, [sp, #-32]!
    6e64:	mov	x29, sp
    6e68:	stp	x19, x20, [sp, #16]
    6e6c:	mov	x20, x0
    6e70:	mov	x19, x1
    6e74:	mov	x0, #0x40                  	// #64
    6e78:	bl	3e00 <PyObject_Malloc@plt>
    6e7c:	str	x0, [x20]
    6e80:	cbz	x0, 6ec4 <PySequence_Fast@plt+0x2c84>
    6e84:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    6e88:	cmp	x19, #0x0
    6e8c:	mov	x2, x0
    6e90:	add	x3, x0, #0x20
    6e94:	ldr	x1, [x1, #3976]
    6e98:	mov	x4, #0x4                   	// #4
    6e9c:	mov	w0, #0x0                   	// #0
    6ea0:	csel	x19, x1, x19, eq  // eq = none
    6ea4:	ldr	x1, [x19]
    6ea8:	add	x1, x1, #0x1
    6eac:	str	x1, [x19]
    6eb0:	stp	x19, xzr, [x2]
    6eb4:	stp	x4, x3, [x2, #16]
    6eb8:	ldp	x19, x20, [sp, #16]
    6ebc:	ldp	x29, x30, [sp], #32
    6ec0:	ret
    6ec4:	bl	3d80 <PyErr_NoMemory@plt>
    6ec8:	mov	w0, #0xffffffff            	// #-1
    6ecc:	b	6eb8 <PySequence_Fast@plt+0x2c78>
    6ed0:	stp	x29, x30, [sp, #-48]!
    6ed4:	mov	x29, sp
    6ed8:	ldr	x2, [x0, #40]
    6edc:	stp	x19, x20, [sp, #16]
    6ee0:	mov	x20, x0
    6ee4:	mov	x19, x1
    6ee8:	cbz	x2, 6fac <PySequence_Fast@plt+0x2d6c>
    6eec:	ldp	x1, x3, [x2, #8]
    6ef0:	mov	w0, #0x0                   	// #0
    6ef4:	add	x1, x19, x1
    6ef8:	cmp	x3, x1
    6efc:	b.ge	6f5c <PySequence_Fast@plt+0x2d1c>  // b.tcont
    6f00:	cmp	x1, #0x9
    6f04:	mov	x19, #0x3                   	// #3
    6f08:	add	x1, x1, x1, asr #3
    6f0c:	mov	x0, #0x6                   	// #6
    6f10:	csel	x19, x19, x0, lt  // lt = tstop
    6f14:	adds	x19, x19, x1
    6f18:	b.eq	6f68 <PySequence_Fast@plt+0x2d28>  // b.none
    6f1c:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    6f20:	cmp	x19, x0
    6f24:	b.hi	6fc8 <PySequence_Fast@plt+0x2d88>  // b.pmore
    6f28:	ldr	x0, [x2, #24]
    6f2c:	str	x21, [sp, #32]
    6f30:	add	x2, x2, #0x20
    6f34:	lsl	x1, x19, #3
    6f38:	cmp	x0, x2
    6f3c:	b.eq	6f84 <PySequence_Fast@plt+0x2d44>  // b.none
    6f40:	bl	4060 <PyObject_Realloc@plt>
    6f44:	mov	x21, x0
    6f48:	cbz	x0, 6fc4 <PySequence_Fast@plt+0x2d84>
    6f4c:	ldr	x1, [x20, #40]
    6f50:	mov	w0, #0x0                   	// #0
    6f54:	stp	x19, x21, [x1, #16]
    6f58:	ldr	x21, [sp, #32]
    6f5c:	ldp	x19, x20, [sp, #16]
    6f60:	ldp	x29, x30, [sp], #48
    6f64:	ret
    6f68:	ldr	x0, [x2, #24]
    6f6c:	str	x21, [sp, #32]
    6f70:	add	x2, x2, #0x20
    6f74:	mov	x1, #0x8                   	// #8
    6f78:	cmp	x0, x2
    6f7c:	mov	x19, #0x1                   	// #1
    6f80:	b.ne	6f40 <PySequence_Fast@plt+0x2d00>  // b.any
    6f84:	mov	x0, x1
    6f88:	bl	3e00 <PyObject_Malloc@plt>
    6f8c:	mov	x21, x0
    6f90:	cbz	x0, 6fc4 <PySequence_Fast@plt+0x2d84>
    6f94:	ldr	x1, [x20, #40]
    6f98:	ldr	x2, [x1, #8]
    6f9c:	ldr	x1, [x1, #24]
    6fa0:	lsl	x2, x2, #3
    6fa4:	bl	3c20 <memcpy@plt>
    6fa8:	b	6f4c <PySequence_Fast@plt+0x2d0c>
    6fac:	add	x0, x0, #0x28
    6fb0:	mov	x1, #0x0                   	// #0
    6fb4:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    6fb8:	tbnz	w0, #31, 6fd4 <PySequence_Fast@plt+0x2d94>
    6fbc:	ldr	x2, [x20, #40]
    6fc0:	b	6eec <PySequence_Fast@plt+0x2cac>
    6fc4:	ldr	x21, [sp, #32]
    6fc8:	bl	3d80 <PyErr_NoMemory@plt>
    6fcc:	mov	w0, #0xffffffff            	// #-1
    6fd0:	b	6f5c <PySequence_Fast@plt+0x2d1c>
    6fd4:	mov	w0, #0xffffffff            	// #-1
    6fd8:	b	6f5c <PySequence_Fast@plt+0x2d1c>
    6fdc:	nop
    6fe0:	stp	x29, x30, [sp, #-48]!
    6fe4:	mov	x29, sp
    6fe8:	stp	x19, x20, [sp, #16]
    6fec:	stp	x21, x22, [sp, #32]
    6ff0:	mov	x21, x0
    6ff4:	mov	x22, x1
    6ff8:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    6ffc:	add	x0, x0, #0x320
    7000:	bl	3df0 <_PyObject_GC_New@plt>
    7004:	cbz	x0, 709c <PySequence_Fast@plt+0x2e5c>
    7008:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    700c:	mov	x19, x0
    7010:	ldr	x1, [x21]
    7014:	str	xzr, [x0, #40]
    7018:	ldr	x20, [x20, #3976]
    701c:	add	x1, x1, #0x1
    7020:	str	x1, [x21]
    7024:	stp	x21, x20, [x0, #16]
    7028:	ldr	x1, [x20]
    702c:	str	x20, [x0, #32]
    7030:	str	xzr, [x0, #48]
    7034:	add	x1, x1, #0x2
    7038:	str	x1, [x20]
    703c:	bl	3dc0 <PyObject_GC_Track@plt>
    7040:	cmp	x22, x20
    7044:	b.eq	706c <PySequence_Fast@plt+0x2e2c>  // b.none
    7048:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    704c:	ldr	x1, [x22, #8]
    7050:	ldr	x0, [x0, #3992]
    7054:	cmp	x1, x0
    7058:	b.eq	7080 <PySequence_Fast@plt+0x2e40>  // b.none
    705c:	mov	x1, x22
    7060:	add	x0, x19, #0x28
    7064:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    7068:	tbnz	w0, #31, 708c <PySequence_Fast@plt+0x2e4c>
    706c:	mov	x0, x19
    7070:	ldp	x19, x20, [sp, #16]
    7074:	ldp	x21, x22, [sp, #32]
    7078:	ldp	x29, x30, [sp], #48
    707c:	ret
    7080:	ldr	x0, [x22, #16]
    7084:	cbz	x0, 706c <PySequence_Fast@plt+0x2e2c>
    7088:	b	705c <PySequence_Fast@plt+0x2e1c>
    708c:	ldr	x0, [x19]
    7090:	sub	x0, x0, #0x1
    7094:	str	x0, [x19]
    7098:	cbz	x0, 70b4 <PySequence_Fast@plt+0x2e74>
    709c:	mov	x19, #0x0                   	// #0
    70a0:	mov	x0, x19
    70a4:	ldp	x19, x20, [sp, #16]
    70a8:	ldp	x21, x22, [sp, #32]
    70ac:	ldp	x29, x30, [sp], #48
    70b0:	ret
    70b4:	mov	x0, x19
    70b8:	mov	x19, #0x0                   	// #0
    70bc:	bl	3d70 <_Py_Dealloc@plt>
    70c0:	b	706c <PySequence_Fast@plt+0x2e2c>
    70c4:	nop
    70c8:	stp	x29, x30, [sp, #-32]!
    70cc:	mov	x29, sp
    70d0:	ldr	x1, [x0, #40]
    70d4:	stp	x19, x20, [sp, #16]
    70d8:	mov	x20, x0
    70dc:	ldr	x0, [x0, #16]
    70e0:	cbz	x1, 71d8 <PySequence_Fast@plt+0x2f98>
    70e4:	ldr	x1, [x1]
    70e8:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    70ec:	mov	x19, x0
    70f0:	cbz	x0, 71f4 <PySequence_Fast@plt+0x2fb4>
    70f4:	ldr	x2, [x20, #24]
    70f8:	ldr	x0, [x0, #24]
    70fc:	and	x3, x2, #0xfffffffffffffffe
    7100:	and	x0, x0, #0xfffffffffffffffe
    7104:	ldr	x1, [x3]
    7108:	add	x1, x1, #0x1
    710c:	str	x1, [x3]
    7110:	ldr	x1, [x0]
    7114:	str	x2, [x19, #24]
    7118:	sub	x1, x1, #0x1
    711c:	str	x1, [x0]
    7120:	cbz	x1, 71d0 <PySequence_Fast@plt+0x2f90>
    7124:	ldr	x2, [x20, #32]
    7128:	ldr	x0, [x19, #32]
    712c:	and	x3, x2, #0xfffffffffffffffe
    7130:	and	x0, x0, #0xfffffffffffffffe
    7134:	ldr	x1, [x3]
    7138:	add	x1, x1, #0x1
    713c:	str	x1, [x3]
    7140:	ldr	x1, [x0]
    7144:	str	x2, [x19, #32]
    7148:	sub	x1, x1, #0x1
    714c:	str	x1, [x0]
    7150:	cbz	x1, 71c8 <PySequence_Fast@plt+0x2f88>
    7154:	ldr	x0, [x20, #40]
    7158:	cbz	x0, 71b8 <PySequence_Fast@plt+0x2f78>
    715c:	ldr	x1, [x0, #8]
    7160:	mov	x0, x19
    7164:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    7168:	tbnz	w0, #31, 71e4 <PySequence_Fast@plt+0x2fa4>
    716c:	ldr	x3, [x20, #40]
    7170:	ldr	x6, [x19, #40]
    7174:	ldr	x1, [x3, #8]
    7178:	cmp	x1, #0x0
    717c:	b.le	71b4 <PySequence_Fast@plt+0x2f74>
    7180:	ldr	x5, [x3, #24]
    7184:	mov	x0, #0x0                   	// #0
    7188:	ldr	x4, [x6, #24]
    718c:	nop
    7190:	ldr	x1, [x5, x0, lsl #3]
    7194:	ldr	x2, [x1]
    7198:	add	x2, x2, #0x1
    719c:	str	x2, [x1]
    71a0:	str	x1, [x4, x0, lsl #3]
    71a4:	add	x0, x0, #0x1
    71a8:	ldr	x1, [x3, #8]
    71ac:	cmp	x0, x1
    71b0:	b.lt	7190 <PySequence_Fast@plt+0x2f50>  // b.tstop
    71b4:	str	x1, [x6, #8]
    71b8:	mov	x0, x19
    71bc:	ldp	x19, x20, [sp, #16]
    71c0:	ldp	x29, x30, [sp], #32
    71c4:	ret
    71c8:	bl	3d70 <_Py_Dealloc@plt>
    71cc:	b	7154 <PySequence_Fast@plt+0x2f14>
    71d0:	bl	3d70 <_Py_Dealloc@plt>
    71d4:	b	7124 <PySequence_Fast@plt+0x2ee4>
    71d8:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    71dc:	ldr	x1, [x1, #3976]
    71e0:	b	70e8 <PySequence_Fast@plt+0x2ea8>
    71e4:	ldr	x0, [x19]
    71e8:	sub	x0, x0, #0x1
    71ec:	str	x0, [x19]
    71f0:	cbz	x0, 7208 <PySequence_Fast@plt+0x2fc8>
    71f4:	mov	x19, #0x0                   	// #0
    71f8:	mov	x0, x19
    71fc:	ldp	x19, x20, [sp, #16]
    7200:	ldp	x29, x30, [sp], #32
    7204:	ret
    7208:	mov	x0, x19
    720c:	mov	x19, #0x0                   	// #0
    7210:	bl	3d70 <_Py_Dealloc@plt>
    7214:	b	71b8 <PySequence_Fast@plt+0x2f78>
    7218:	stp	x29, x30, [sp, #-64]!
    721c:	mov	x29, sp
    7220:	str	x21, [sp, #32]
    7224:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    7228:	add	x4, sp, #0x38
    722c:	stp	x19, x20, [sp, #16]
    7230:	mov	x19, x0
    7234:	ldr	x3, [x21, #3992]
    7238:	mov	x0, x1
    723c:	mov	x20, x2
    7240:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7244:	add	x2, sp, #0x30
    7248:	add	x1, x1, #0xc58
    724c:	str	xzr, [sp, #56]
    7250:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    7254:	cbz	w0, 7398 <PySequence_Fast@plt+0x3158>
    7258:	ldr	x0, [sp, #56]
    725c:	cbz	x0, 737c <PySequence_Fast@plt+0x313c>
    7260:	bl	4150 <PyDict_Copy@plt>
    7264:	str	x0, [sp, #56]
    7268:	mov	x1, x0
    726c:	cbz	x0, 7398 <PySequence_Fast@plt+0x3158>
    7270:	cbz	x20, 7288 <PySequence_Fast@plt+0x3048>
    7274:	mov	x1, x20
    7278:	bl	3f20 <PyDict_Update@plt>
    727c:	tbnz	w0, #31, 73c0 <PySequence_Fast@plt+0x3180>
    7280:	ldr	x1, [sp, #56]
    7284:	cbz	x1, 72bc <PySequence_Fast@plt+0x307c>
    7288:	ldr	x21, [x21, #3992]
    728c:	ldr	x0, [x1, #8]
    7290:	cmp	x0, x21
    7294:	b.eq	736c <PySequence_Fast@plt+0x312c>  // b.none
    7298:	add	x0, x19, #0x28
    729c:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    72a0:	tbnz	w0, #31, 73c0 <PySequence_Fast@plt+0x3180>
    72a4:	ldr	x0, [sp, #56]
    72a8:	cbz	x0, 72bc <PySequence_Fast@plt+0x307c>
    72ac:	ldr	x1, [x0]
    72b0:	sub	x1, x1, #0x1
    72b4:	str	x1, [x0]
    72b8:	cbz	x1, 7364 <PySequence_Fast@plt+0x3124>
    72bc:	ldr	x1, [sp, #48]
    72c0:	ldr	x0, [x19, #16]
    72c4:	ldr	x2, [x1]
    72c8:	add	x2, x2, #0x1
    72cc:	str	x2, [x1]
    72d0:	str	x1, [x19, #16]
    72d4:	cbz	x0, 72e8 <PySequence_Fast@plt+0x30a8>
    72d8:	ldr	x1, [x0]
    72dc:	sub	x1, x1, #0x1
    72e0:	str	x1, [x0]
    72e4:	cbz	x1, 735c <PySequence_Fast@plt+0x311c>
    72e8:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    72ec:	ldr	x0, [x19, #24]
    72f0:	ldr	x1, [x20, #3976]
    72f4:	and	x0, x0, #0xfffffffffffffffe
    72f8:	str	x1, [x19, #24]
    72fc:	ldr	x2, [x1]
    7300:	add	x2, x2, #0x1
    7304:	str	x2, [x1]
    7308:	ldr	x1, [x0]
    730c:	sub	x1, x1, #0x1
    7310:	str	x1, [x0]
    7314:	cbz	x1, 73b8 <PySequence_Fast@plt+0x3178>
    7318:	ldr	x1, [x20, #3976]
    731c:	mov	w20, #0x0                   	// #0
    7320:	ldr	x0, [x19, #32]
    7324:	str	x1, [x19, #32]
    7328:	ldr	x2, [x1]
    732c:	and	x0, x0, #0xfffffffffffffffe
    7330:	add	x2, x2, #0x1
    7334:	str	x2, [x1]
    7338:	ldr	x1, [x0]
    733c:	sub	x1, x1, #0x1
    7340:	str	x1, [x0]
    7344:	cbz	x1, 73a0 <PySequence_Fast@plt+0x3160>
    7348:	mov	w0, w20
    734c:	ldp	x19, x20, [sp, #16]
    7350:	ldr	x21, [sp, #32]
    7354:	ldp	x29, x30, [sp], #64
    7358:	ret
    735c:	bl	3d70 <_Py_Dealloc@plt>
    7360:	b	72e8 <PySequence_Fast@plt+0x30a8>
    7364:	bl	3d70 <_Py_Dealloc@plt>
    7368:	b	72bc <PySequence_Fast@plt+0x307c>
    736c:	ldr	x0, [x1, #16]
    7370:	cbnz	x0, 7298 <PySequence_Fast@plt+0x3058>
    7374:	ldr	x0, [sp, #56]
    7378:	b	72ac <PySequence_Fast@plt+0x306c>
    737c:	cbz	x20, 72bc <PySequence_Fast@plt+0x307c>
    7380:	mov	x0, x20
    7384:	bl	57b8 <PySequence_Fast@plt+0x1578>
    7388:	str	x0, [sp, #56]
    738c:	mov	x1, x0
    7390:	cbnz	x0, 7288 <PySequence_Fast@plt+0x3048>
    7394:	nop
    7398:	mov	w20, #0xffffffff            	// #-1
    739c:	b	7348 <PySequence_Fast@plt+0x3108>
    73a0:	bl	3d70 <_Py_Dealloc@plt>
    73a4:	mov	w0, w20
    73a8:	ldp	x19, x20, [sp, #16]
    73ac:	ldr	x21, [sp, #32]
    73b0:	ldp	x29, x30, [sp], #64
    73b4:	ret
    73b8:	bl	3d70 <_Py_Dealloc@plt>
    73bc:	b	7318 <PySequence_Fast@plt+0x30d8>
    73c0:	ldr	x0, [sp, #56]
    73c4:	ldr	x1, [x0]
    73c8:	sub	x1, x1, #0x1
    73cc:	str	x1, [x0]
    73d0:	cbnz	x1, 7398 <PySequence_Fast@plt+0x3158>
    73d4:	mov	w20, #0xffffffff            	// #-1
    73d8:	bl	3d70 <_Py_Dealloc@plt>
    73dc:	b	7348 <PySequence_Fast@plt+0x3108>
    73e0:	stp	x29, x30, [sp, #-112]!
    73e4:	mov	x29, sp
    73e8:	stp	x19, x20, [sp, #16]
    73ec:	mov	x20, x1
    73f0:	mov	x19, x0
    73f4:	ldr	x1, [x1, #8]
    73f8:	stp	x21, x22, [sp, #32]
    73fc:	mov	x21, x2
    7400:	ldr	x0, [x1, #96]
    7404:	cbz	x0, 7454 <PySequence_Fast@plt+0x3214>
    7408:	ldr	x0, [x0, #264]
    740c:	cbz	x0, 7454 <PySequence_Fast@plt+0x3214>
    7410:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    7414:	mov	x0, x20
    7418:	ldr	x1, [x1, #3984]
    741c:	ldr	x1, [x1]
    7420:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    7424:	mov	x20, x0
    7428:	cmn	x0, #0x1
    742c:	b.eq	7650 <PySequence_Fast@plt+0x3410>  // b.none
    7430:	tbnz	x0, #63, 7658 <PySequence_Fast@plt+0x3418>
    7434:	mov	x2, x21
    7438:	mov	x1, x20
    743c:	mov	x0, x19
    7440:	bl	52a8 <PySequence_Fast@plt+0x1068>
    7444:	ldp	x19, x20, [sp, #16]
    7448:	ldp	x21, x22, [sp, #32]
    744c:	ldp	x29, x30, [sp], #112
    7450:	ret
    7454:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7458:	ldr	x0, [x0, #3952]
    745c:	cmp	x1, x0
    7460:	b.ne	7950 <PySequence_Fast@plt+0x3710>  // b.any
    7464:	ldr	x0, [x19, #40]
    7468:	cbz	x0, 753c <PySequence_Fast@plt+0x32fc>
    746c:	add	x22, sp, #0x58
    7470:	stp	x23, x24, [sp, #48]
    7474:	add	x23, sp, #0x60
    7478:	mov	x0, x20
    747c:	mov	x2, x23
    7480:	mov	x1, x22
    7484:	add	x3, sp, #0x68
    7488:	bl	4130 <PySlice_Unpack@plt>
    748c:	tbnz	w0, #31, 7524 <PySequence_Fast@plt+0x32e4>
    7490:	ldr	x0, [x19, #40]
    7494:	mov	x1, x22
    7498:	ldr	x3, [sp, #104]
    749c:	mov	x2, x23
    74a0:	ldr	x0, [x0, #8]
    74a4:	bl	3f10 <PySlice_AdjustIndices@plt>
    74a8:	mov	x22, x0
    74ac:	cbz	x21, 7550 <PySequence_Fast@plt+0x3310>
    74b0:	mov	x0, x21
    74b4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    74b8:	add	x1, x1, #0x510
    74bc:	bl	4240 <PySequence_Fast@plt>
    74c0:	mov	x23, x0
    74c4:	cbz	x0, 791c <PySequence_Fast@plt+0x36dc>
    74c8:	ldr	x1, [sp, #104]
    74cc:	stp	x25, x26, [sp, #64]
    74d0:	cmp	x1, #0x1
    74d4:	ldr	x26, [x0, #16]
    74d8:	b.eq	766c <PySequence_Fast@plt+0x342c>  // b.none
    74dc:	cmp	x22, x26
    74e0:	b.eq	76e0 <PySequence_Fast@plt+0x34a0>  // b.none
    74e4:	ldr	x1, [x0]
    74e8:	sub	x1, x1, #0x1
    74ec:	str	x1, [x0]
    74f0:	cbz	x1, 77e0 <PySequence_Fast@plt+0x35a0>
    74f4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    74f8:	mov	x2, x26
    74fc:	mov	x3, x22
    7500:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7504:	ldr	x0, [x0, #3928]
    7508:	add	x1, x1, #0xc88
    750c:	ldr	x0, [x0]
    7510:	bl	4180 <PyErr_Format@plt>
    7514:	mov	w0, #0xffffffff            	// #-1
    7518:	ldp	x23, x24, [sp, #48]
    751c:	ldp	x25, x26, [sp, #64]
    7520:	b	7444 <PySequence_Fast@plt+0x3204>
    7524:	ldp	x23, x24, [sp, #48]
    7528:	mov	w0, #0xffffffff            	// #-1
    752c:	ldp	x19, x20, [sp, #16]
    7530:	ldp	x21, x22, [sp, #32]
    7534:	ldp	x29, x30, [sp], #112
    7538:	ret
    753c:	add	x0, x19, #0x28
    7540:	mov	x1, #0x0                   	// #0
    7544:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    7548:	tbz	w0, #31, 746c <PySequence_Fast@plt+0x322c>
    754c:	b	7528 <PySequence_Fast@plt+0x32e8>
    7550:	cmp	x0, #0x0
    7554:	b.le	7638 <PySequence_Fast@plt+0x33f8>
    7558:	ldr	x0, [sp, #104]
    755c:	tbz	x0, #63, 7580 <PySequence_Fast@plt+0x3340>
    7560:	ldr	x2, [sp, #88]
    7564:	sub	x1, x22, #0x1
    7568:	neg	x3, x0
    756c:	str	x3, [sp, #104]
    7570:	add	x3, x2, #0x1
    7574:	str	x3, [sp, #96]
    7578:	madd	x0, x1, x0, x2
    757c:	str	x0, [sp, #88]
    7580:	mov	x0, x22
    7584:	bl	3c50 <PyList_New@plt>
    7588:	mov	x23, x0
    758c:	cbz	x0, 7524 <PySequence_Fast@plt+0x32e4>
    7590:	ldp	x20, x0, [sp, #88]
    7594:	mov	x21, #0x0                   	// #0
    7598:	ldr	x2, [sp, #104]
    759c:	cmp	x0, x20
    75a0:	b.ls	7948 <PySequence_Fast@plt+0x3708>  // b.plast
    75a4:	nop
    75a8:	ldr	x1, [x19, #40]
    75ac:	add	x6, x2, x20
    75b0:	ldr	x5, [x23, #24]
    75b4:	sub	x2, x2, #0x1
    75b8:	ldr	x4, [x1, #8]
    75bc:	sub	x0, x20, x21
    75c0:	ldr	x3, [x1, #24]
    75c4:	sub	x1, x4, #0x1
    75c8:	cmp	x6, x4
    75cc:	sub	x1, x1, x20
    75d0:	csel	x2, x1, x2, cs  // cs = hs, nlast
    75d4:	ldr	x1, [x3, x20, lsl #3]
    75d8:	str	x1, [x5, x21, lsl #3]
    75dc:	add	x1, x3, x20, lsl #3
    75e0:	lsl	x2, x2, #3
    75e4:	add	x1, x1, #0x8
    75e8:	add	x0, x3, x0, lsl #3
    75ec:	bl	3c40 <memmove@plt>
    75f0:	add	x21, x21, #0x1
    75f4:	ldp	x1, x2, [sp, #96]
    75f8:	add	x20, x20, x2
    75fc:	mov	x0, x2
    7600:	cmp	x1, x20
    7604:	b.hi	75a8 <PySequence_Fast@plt+0x3368>  // b.pmore
    7608:	ldr	x20, [sp, #88]
    760c:	madd	x20, x22, x0, x20
    7610:	ldr	x2, [x19, #40]
    7614:	ldr	x1, [x2, #8]
    7618:	cmp	x1, x20
    761c:	b.hi	78cc <PySequence_Fast@plt+0x368c>  // b.pmore
    7620:	ldr	x0, [x23]
    7624:	sub	x22, x1, x22
    7628:	str	x22, [x2, #8]
    762c:	sub	x0, x0, #0x1
    7630:	str	x0, [x23]
    7634:	cbz	x0, 78c0 <PySequence_Fast@plt+0x3680>
    7638:	mov	w0, #0x0                   	// #0
    763c:	ldp	x19, x20, [sp, #16]
    7640:	ldp	x21, x22, [sp, #32]
    7644:	ldp	x23, x24, [sp, #48]
    7648:	ldp	x29, x30, [sp], #112
    764c:	ret
    7650:	bl	3f80 <PyErr_Occurred@plt>
    7654:	cbnz	x0, 7528 <PySequence_Fast@plt+0x32e8>
    7658:	ldr	x0, [x19, #40]
    765c:	cbz	x0, 7434 <PySequence_Fast@plt+0x31f4>
    7660:	ldr	x0, [x0, #8]
    7664:	add	x20, x20, x0
    7668:	b	7434 <PySequence_Fast@plt+0x31f4>
    766c:	cmp	x22, x26
    7670:	b.ge	7684 <PySequence_Fast@plt+0x3444>  // b.tcont
    7674:	sub	x1, x26, x22
    7678:	mov	x0, x19
    767c:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    7680:	tbnz	w0, #31, 78f4 <PySequence_Fast@plt+0x36b4>
    7684:	cmp	x26, #0x0
    7688:	b.le	778c <PySequence_Fast@plt+0x354c>
    768c:	adrp	x21, 20000 <PyInit__elementtree@@Base+0x13790>
    7690:	add	x25, x23, #0x18
    7694:	add	x21, x21, #0x320
    7698:	mov	x20, #0x0                   	// #0
    769c:	b	76cc <PySequence_Fast@plt+0x348c>
    76a0:	ldr	x0, [x23, #24]
    76a4:	ldr	x24, [x0, x20, lsl #3]
    76a8:	add	x20, x20, #0x1
    76ac:	ldr	x0, [x24, #8]
    76b0:	mov	x1, x21
    76b4:	cmp	x0, x21
    76b8:	b.eq	76c4 <PySequence_Fast@plt+0x3484>  // b.none
    76bc:	bl	4160 <PyType_IsSubtype@plt>
    76c0:	cbz	w0, 7844 <PySequence_Fast@plt+0x3604>
    76c4:	cmp	x26, x20
    76c8:	b.eq	778c <PySequence_Fast@plt+0x354c>  // b.none
    76cc:	ldr	x0, [x23, #8]
    76d0:	ldr	x0, [x0, #168]
    76d4:	tbnz	w0, #25, 76a0 <PySequence_Fast@plt+0x3460>
    76d8:	ldr	x24, [x25, x20, lsl #3]
    76dc:	b	76a8 <PySequence_Fast@plt+0x3468>
    76e0:	cmp	x22, #0x0
    76e4:	b.gt	768c <PySequence_Fast@plt+0x344c>
    76e8:	ldr	x7, [x19, #40]
    76ec:	mov	x20, #0x0                   	// #0
    76f0:	ldr	x4, [sp, #88]
    76f4:	cmp	x22, x26
    76f8:	b.le	7884 <PySequence_Fast@plt+0x3644>
    76fc:	ldr	x0, [x7, #8]
    7700:	ldr	x1, [sp, #96]
    7704:	cmp	x1, x0
    7708:	b.ge	7970 <PySequence_Fast@plt+0x3730>  // b.tcont
    770c:	ldr	x2, [x7, #24]
    7710:	sub	x22, x26, x22
    7714:	add	x1, x2, x1, lsl #3
    7718:	add	x0, x2, x0, lsl #3
    771c:	nop
    7720:	ldr	x2, [x1]
    7724:	str	x2, [x1, x22, lsl #3]
    7728:	add	x1, x1, #0x8
    772c:	cmp	x0, x1
    7730:	b.ne	7720 <PySequence_Fast@plt+0x34e0>  // b.any
    7734:	cmp	x26, #0x0
    7738:	b.le	77e8 <PySequence_Fast@plt+0x35a8>
    773c:	add	x0, x23, #0x18
    7740:	mov	x1, #0x0                   	// #0
    7744:	ldr	x6, [x23, #8]
    7748:	ldr	x5, [x7, #24]
    774c:	b	777c <PySequence_Fast@plt+0x353c>
    7750:	ldr	x2, [x23, #24]
    7754:	ldr	x3, [x2, x1, lsl #3]
    7758:	add	x1, x1, #0x1
    775c:	ldr	x2, [x3]
    7760:	cmp	x26, x1
    7764:	add	x2, x2, #0x1
    7768:	str	x2, [x3]
    776c:	str	x3, [x5, x4, lsl #3]
    7770:	ldr	x2, [sp, #104]
    7774:	add	x4, x4, x2
    7778:	b.eq	77e8 <PySequence_Fast@plt+0x35a8>  // b.none
    777c:	ldr	x2, [x6, #168]
    7780:	tbnz	w2, #25, 7750 <PySequence_Fast@plt+0x3510>
    7784:	ldr	x3, [x0, x1, lsl #3]
    7788:	b	7758 <PySequence_Fast@plt+0x3518>
    778c:	cmp	x22, #0x0
    7790:	b.le	76e8 <PySequence_Fast@plt+0x34a8>
    7794:	mov	x0, x22
    7798:	bl	3c50 <PyList_New@plt>
    779c:	mov	x20, x0
    77a0:	cbz	x0, 78f4 <PySequence_Fast@plt+0x36b4>
    77a4:	ldr	x7, [x19, #40]
    77a8:	ldr	x2, [x0, #24]
    77ac:	ldr	x1, [x7, #24]
    77b0:	ldr	x4, [sp, #88]
    77b4:	add	x5, x2, x22, lsl #3
    77b8:	ldr	x0, [sp, #104]
    77bc:	add	x1, x1, x4, lsl #3
    77c0:	lsl	x0, x0, #3
    77c4:	nop
    77c8:	ldr	x3, [x1]
    77cc:	str	x3, [x2], #8
    77d0:	add	x1, x1, x0
    77d4:	cmp	x5, x2
    77d8:	b.ne	77c8 <PySequence_Fast@plt+0x3588>  // b.any
    77dc:	b	76f4 <PySequence_Fast@plt+0x34b4>
    77e0:	bl	3d70 <_Py_Dealloc@plt>
    77e4:	b	74f4 <PySequence_Fast@plt+0x32b4>
    77e8:	ldr	x1, [x7, #8]
    77ec:	ldr	x0, [x23]
    77f0:	add	x22, x1, x22
    77f4:	str	x22, [x7, #8]
    77f8:	sub	x0, x0, #0x1
    77fc:	str	x0, [x23]
    7800:	cbz	x0, 7820 <PySequence_Fast@plt+0x35e0>
    7804:	cbz	x20, 7818 <PySequence_Fast@plt+0x35d8>
    7808:	ldr	x0, [x20]
    780c:	sub	x0, x0, #0x1
    7810:	str	x0, [x20]
    7814:	cbz	x0, 782c <PySequence_Fast@plt+0x35ec>
    7818:	ldp	x25, x26, [sp, #64]
    781c:	b	7638 <PySequence_Fast@plt+0x33f8>
    7820:	mov	x0, x23
    7824:	bl	3d70 <_Py_Dealloc@plt>
    7828:	b	7804 <PySequence_Fast@plt+0x35c4>
    782c:	mov	x0, x20
    7830:	bl	3d70 <_Py_Dealloc@plt>
    7834:	mov	w0, #0x0                   	// #0
    7838:	ldp	x23, x24, [sp, #48]
    783c:	ldp	x25, x26, [sp, #64]
    7840:	b	7444 <PySequence_Fast@plt+0x3204>
    7844:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7848:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    784c:	ldr	x2, [x24, #8]
    7850:	add	x1, x1, #0xb60
    7854:	ldr	x0, [x0, #3944]
    7858:	ldr	x2, [x2, #24]
    785c:	ldr	x0, [x0]
    7860:	bl	4180 <PyErr_Format@plt>
    7864:	ldr	x0, [x23]
    7868:	sub	x0, x0, #0x1
    786c:	str	x0, [x23]
    7870:	cbz	x0, 7904 <PySequence_Fast@plt+0x36c4>
    7874:	mov	w0, #0xffffffff            	// #-1
    7878:	ldp	x23, x24, [sp, #48]
    787c:	ldp	x25, x26, [sp, #64]
    7880:	b	752c <PySequence_Fast@plt+0x32ec>
    7884:	sub	x22, x26, x22
    7888:	b.ge	7734 <PySequence_Fast@plt+0x34f4>  // b.tcont
    788c:	ldr	x1, [x7, #8]
    7890:	ldr	x2, [sp, #96]
    7894:	sub	x1, x1, #0x1
    7898:	cmp	x1, x2
    789c:	b.lt	7734 <PySequence_Fast@plt+0x34f4>  // b.tstop
    78a0:	ldr	x3, [x7, #24]
    78a4:	add	x5, x3, x22, lsl #3
    78a8:	ldr	x0, [x3, x1, lsl #3]
    78ac:	str	x0, [x5, x1, lsl #3]
    78b0:	sub	x1, x1, #0x1
    78b4:	cmp	x1, x2
    78b8:	b.ge	78a8 <PySequence_Fast@plt+0x3668>  // b.tcont
    78bc:	b	7734 <PySequence_Fast@plt+0x34f4>
    78c0:	mov	x0, x23
    78c4:	bl	3d70 <_Py_Dealloc@plt>
    78c8:	b	7638 <PySequence_Fast@plt+0x33f8>
    78cc:	ldr	x0, [x2, #24]
    78d0:	sub	x3, x20, x22
    78d4:	sub	x1, x1, x20
    78d8:	lsl	x2, x1, #3
    78dc:	add	x1, x0, x20, lsl #3
    78e0:	add	x0, x0, x3, lsl #3
    78e4:	bl	3c40 <memmove@plt>
    78e8:	ldr	x2, [x19, #40]
    78ec:	ldr	x1, [x2, #8]
    78f0:	b	7620 <PySequence_Fast@plt+0x33e0>
    78f4:	ldr	x0, [x23]
    78f8:	sub	x0, x0, #0x1
    78fc:	str	x0, [x23]
    7900:	cbnz	x0, 7874 <PySequence_Fast@plt+0x3634>
    7904:	mov	x0, x23
    7908:	bl	3d70 <_Py_Dealloc@plt>
    790c:	mov	w0, #0xffffffff            	// #-1
    7910:	ldp	x23, x24, [sp, #48]
    7914:	ldp	x25, x26, [sp, #64]
    7918:	b	7444 <PySequence_Fast@plt+0x3204>
    791c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7920:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7924:	ldr	x2, [x21, #8]
    7928:	add	x1, x1, #0xc68
    792c:	ldr	x0, [x0, #3944]
    7930:	ldr	x2, [x2, #24]
    7934:	ldr	x0, [x0]
    7938:	bl	4180 <PyErr_Format@plt>
    793c:	mov	w0, #0xffffffff            	// #-1
    7940:	ldp	x23, x24, [sp, #48]
    7944:	b	7444 <PySequence_Fast@plt+0x3204>
    7948:	mov	x0, x2
    794c:	b	760c <PySequence_Fast@plt+0x33cc>
    7950:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7954:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7958:	add	x1, x1, #0xc30
    795c:	ldr	x0, [x0, #3944]
    7960:	ldr	x0, [x0]
    7964:	bl	3de0 <PyErr_SetString@plt>
    7968:	mov	w0, #0xffffffff            	// #-1
    796c:	b	752c <PySequence_Fast@plt+0x32ec>
    7970:	sub	x22, x26, x22
    7974:	b	7734 <PySequence_Fast@plt+0x34f4>
    7978:	stp	x29, x30, [sp, #-32]!
    797c:	mov	x29, sp
    7980:	stp	x19, x20, [sp, #16]
    7984:	mov	x19, x1
    7988:	mov	x20, x0
    798c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    7990:	add	x1, x1, #0x320
    7994:	ldr	x0, [x19, #8]
    7998:	cmp	x0, x1
    799c:	b.eq	79a8 <PySequence_Fast@plt+0x3768>  // b.none
    79a0:	bl	4160 <PyType_IsSubtype@plt>
    79a4:	cbz	w0, 79f4 <PySequence_Fast@plt+0x37b4>
    79a8:	mov	x0, x20
    79ac:	mov	x1, #0x1                   	// #1
    79b0:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    79b4:	tbnz	w0, #31, 79ec <PySequence_Fast@plt+0x37ac>
    79b8:	ldr	x1, [x20, #40]
    79bc:	mov	w0, #0x0                   	// #0
    79c0:	ldr	x2, [x19]
    79c4:	ldr	x4, [x1, #24]
    79c8:	add	x2, x2, #0x1
    79cc:	str	x2, [x19]
    79d0:	ldr	x2, [x1, #8]
    79d4:	add	x3, x2, #0x1
    79d8:	str	x19, [x4, x2, lsl #3]
    79dc:	str	x3, [x1, #8]
    79e0:	ldp	x19, x20, [sp, #16]
    79e4:	ldp	x29, x30, [sp], #32
    79e8:	ret
    79ec:	mov	w0, #0xffffffff            	// #-1
    79f0:	b	79e0 <PySequence_Fast@plt+0x37a0>
    79f4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    79f8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    79fc:	ldr	x2, [x19, #8]
    7a00:	add	x1, x1, #0xb60
    7a04:	ldr	x0, [x0, #3944]
    7a08:	ldr	x2, [x2, #24]
    7a0c:	ldr	x0, [x0]
    7a10:	bl	4180 <PyErr_Format@plt>
    7a14:	mov	w0, #0xffffffff            	// #-1
    7a18:	b	79e0 <PySequence_Fast@plt+0x37a0>
    7a1c:	nop
    7a20:	ldr	x4, [x0, #8]
    7a24:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    7a28:	add	x3, x3, #0x320
    7a2c:	cmp	x4, x3
    7a30:	b.eq	7a94 <PySequence_Fast@plt+0x3854>  // b.none
    7a34:	stp	x29, x30, [sp, #-32]!
    7a38:	mov	x2, x1
    7a3c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    7a40:	mov	x29, sp
    7a44:	add	x1, x1, #0x9b8
    7a48:	add	x1, x1, #0x270
    7a4c:	mov	x3, #0x0                   	// #0
    7a50:	str	x19, [sp, #16]
    7a54:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    7a58:	cbz	x0, 7a98 <PySequence_Fast@plt+0x3858>
    7a5c:	ldr	x2, [x0]
    7a60:	mov	w19, #0x0                   	// #0
    7a64:	sub	x2, x2, #0x1
    7a68:	str	x2, [x0]
    7a6c:	cbz	x2, 7a80 <PySequence_Fast@plt+0x3840>
    7a70:	mov	w0, w19
    7a74:	ldr	x19, [sp, #16]
    7a78:	ldp	x29, x30, [sp], #32
    7a7c:	ret
    7a80:	bl	3d70 <_Py_Dealloc@plt>
    7a84:	mov	w0, w19
    7a88:	ldr	x19, [sp, #16]
    7a8c:	ldp	x29, x30, [sp], #32
    7a90:	ret
    7a94:	b	7978 <PySequence_Fast@plt+0x3738>
    7a98:	mov	w19, #0xffffffff            	// #-1
    7a9c:	b	7a70 <PySequence_Fast@plt+0x3830>
    7aa0:	stp	x29, x30, [sp, #-64]!
    7aa4:	mov	x29, sp
    7aa8:	stp	x19, x20, [sp, #16]
    7aac:	mov	x19, x1
    7ab0:	stp	x21, x22, [sp, #32]
    7ab4:	mov	x22, x0
    7ab8:	mov	x0, x1
    7abc:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    7ac0:	add	x1, x1, #0x510
    7ac4:	bl	4240 <PySequence_Fast@plt>
    7ac8:	mov	x21, x0
    7acc:	cbz	x0, 7c28 <PySequence_Fast@plt+0x39e8>
    7ad0:	ldr	x0, [x0, #16]
    7ad4:	str	x23, [sp, #48]
    7ad8:	mov	x20, #0x0                   	// #0
    7adc:	add	x23, x21, #0x18
    7ae0:	cmp	x0, #0x0
    7ae4:	b.gt	7b30 <PySequence_Fast@plt+0x38f0>
    7ae8:	b	7bb0 <PySequence_Fast@plt+0x3970>
    7aec:	ldr	x0, [x21, #24]
    7af0:	ldr	x19, [x0, x20, lsl #3]
    7af4:	add	x20, x20, #0x1
    7af8:	mov	x0, x22
    7afc:	mov	x1, x19
    7b00:	ldr	x2, [x19]
    7b04:	add	x2, x2, #0x1
    7b08:	str	x2, [x19]
    7b0c:	bl	7978 <PySequence_Fast@plt+0x3738>
    7b10:	tbnz	w0, #31, 7b60 <PySequence_Fast@plt+0x3920>
    7b14:	ldr	x1, [x19]
    7b18:	sub	x1, x1, #0x1
    7b1c:	str	x1, [x19]
    7b20:	cbz	x1, 7b9c <PySequence_Fast@plt+0x395c>
    7b24:	ldr	x0, [x21, #16]
    7b28:	cmp	x0, x20
    7b2c:	b.le	7bb0 <PySequence_Fast@plt+0x3970>
    7b30:	ldr	x0, [x21, #8]
    7b34:	ldr	x0, [x0, #168]
    7b38:	tbnz	w0, #25, 7aec <PySequence_Fast@plt+0x38ac>
    7b3c:	ldr	x19, [x23, x20, lsl #3]
    7b40:	mov	x0, x22
    7b44:	add	x20, x20, #0x1
    7b48:	mov	x1, x19
    7b4c:	ldr	x2, [x19]
    7b50:	add	x2, x2, #0x1
    7b54:	str	x2, [x19]
    7b58:	bl	7978 <PySequence_Fast@plt+0x3738>
    7b5c:	tbz	w0, #31, 7b14 <PySequence_Fast@plt+0x38d4>
    7b60:	ldr	x0, [x21]
    7b64:	sub	x0, x0, #0x1
    7b68:	str	x0, [x21]
    7b6c:	cbz	x0, 7c1c <PySequence_Fast@plt+0x39dc>
    7b70:	ldr	x0, [x19]
    7b74:	mov	x21, #0x0                   	// #0
    7b78:	sub	x0, x0, #0x1
    7b7c:	str	x0, [x19]
    7b80:	cbz	x0, 7bfc <PySequence_Fast@plt+0x39bc>
    7b84:	mov	x0, x21
    7b88:	ldp	x19, x20, [sp, #16]
    7b8c:	ldp	x21, x22, [sp, #32]
    7b90:	ldr	x23, [sp, #48]
    7b94:	ldp	x29, x30, [sp], #64
    7b98:	ret
    7b9c:	mov	x0, x19
    7ba0:	bl	3d70 <_Py_Dealloc@plt>
    7ba4:	ldr	x0, [x21, #16]
    7ba8:	cmp	x0, x20
    7bac:	b.gt	7b30 <PySequence_Fast@plt+0x38f0>
    7bb0:	ldr	x0, [x21]
    7bb4:	sub	x0, x0, #0x1
    7bb8:	str	x0, [x21]
    7bbc:	cbz	x0, 7bf0 <PySequence_Fast@plt+0x39b0>
    7bc0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7bc4:	ldr	x23, [sp, #48]
    7bc8:	ldr	x0, [x0, #3976]
    7bcc:	mov	x21, x0
    7bd0:	ldr	x1, [x0]
    7bd4:	add	x1, x1, #0x1
    7bd8:	str	x1, [x0]
    7bdc:	mov	x0, x21
    7be0:	ldp	x19, x20, [sp, #16]
    7be4:	ldp	x21, x22, [sp, #32]
    7be8:	ldp	x29, x30, [sp], #64
    7bec:	ret
    7bf0:	mov	x0, x21
    7bf4:	bl	3d70 <_Py_Dealloc@plt>
    7bf8:	b	7bc0 <PySequence_Fast@plt+0x3980>
    7bfc:	mov	x0, x19
    7c00:	bl	3d70 <_Py_Dealloc@plt>
    7c04:	mov	x0, x21
    7c08:	ldp	x19, x20, [sp, #16]
    7c0c:	ldp	x21, x22, [sp, #32]
    7c10:	ldr	x23, [sp, #48]
    7c14:	ldp	x29, x30, [sp], #64
    7c18:	ret
    7c1c:	mov	x0, x21
    7c20:	bl	3d70 <_Py_Dealloc@plt>
    7c24:	b	7b70 <PySequence_Fast@plt+0x3930>
    7c28:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7c2c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7c30:	ldr	x2, [x19, #8]
    7c34:	add	x1, x1, #0xc68
    7c38:	ldr	x0, [x0, #3944]
    7c3c:	ldr	x2, [x2, #24]
    7c40:	ldr	x0, [x0]
    7c44:	bl	4180 <PyErr_Format@plt>
    7c48:	b	7bdc <PySequence_Fast@plt+0x399c>
    7c4c:	nop
    7c50:	stp	x29, x30, [sp, #-64]!
    7c54:	adrp	x5, 1f000 <PyInit__elementtree@@Base+0x12790>
    7c58:	mov	x0, x1
    7c5c:	mov	x29, sp
    7c60:	ldr	x5, [x5, #3992]
    7c64:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7c68:	add	x6, sp, #0x38
    7c6c:	add	x1, x1, #0xcd0
    7c70:	add	x4, sp, #0x30
    7c74:	add	x3, sp, #0x28
    7c78:	str	x19, [sp, #16]
    7c7c:	mov	x19, x2
    7c80:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x13790>
    7c84:	add	x2, x2, #0x320
    7c88:	str	xzr, [sp, #56]
    7c8c:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    7c90:	cbz	w0, 7d1c <PySequence_Fast@plt+0x3adc>
    7c94:	ldr	x0, [sp, #56]
    7c98:	cbz	x0, 7d04 <PySequence_Fast@plt+0x3ac4>
    7c9c:	bl	4150 <PyDict_Copy@plt>
    7ca0:	str	x0, [sp, #56]
    7ca4:	mov	x1, x0
    7ca8:	cbz	x0, 7d1c <PySequence_Fast@plt+0x3adc>
    7cac:	cbz	x19, 7cc0 <PySequence_Fast@plt+0x3a80>
    7cb0:	mov	x1, x19
    7cb4:	bl	3f20 <PyDict_Update@plt>
    7cb8:	tbnz	w0, #31, 7d94 <PySequence_Fast@plt+0x3b54>
    7cbc:	ldr	x1, [sp, #56]
    7cc0:	ldr	x0, [sp, #48]
    7cc4:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    7cc8:	mov	x19, x0
    7ccc:	ldr	x2, [sp, #56]
    7cd0:	ldr	x1, [x2]
    7cd4:	sub	x1, x1, #0x1
    7cd8:	str	x1, [x2]
    7cdc:	cbz	x1, 7d30 <PySequence_Fast@plt+0x3af0>
    7ce0:	cbz	x19, 7d1c <PySequence_Fast@plt+0x3adc>
    7ce4:	ldr	x0, [sp, #40]
    7ce8:	mov	x1, x19
    7cec:	bl	7978 <PySequence_Fast@plt+0x3738>
    7cf0:	tbnz	w0, #31, 7d7c <PySequence_Fast@plt+0x3b3c>
    7cf4:	mov	x0, x19
    7cf8:	ldr	x19, [sp, #16]
    7cfc:	ldp	x29, x30, [sp], #64
    7d00:	ret
    7d04:	cbz	x19, 7d3c <PySequence_Fast@plt+0x3afc>
    7d08:	mov	x0, x19
    7d0c:	bl	57b8 <PySequence_Fast@plt+0x1578>
    7d10:	str	x0, [sp, #56]
    7d14:	mov	x1, x0
    7d18:	cbnz	x0, 7cc0 <PySequence_Fast@plt+0x3a80>
    7d1c:	mov	x19, #0x0                   	// #0
    7d20:	mov	x0, x19
    7d24:	ldr	x19, [sp, #16]
    7d28:	ldp	x29, x30, [sp], #64
    7d2c:	ret
    7d30:	mov	x0, x2
    7d34:	bl	3d70 <_Py_Dealloc@plt>
    7d38:	b	7ce0 <PySequence_Fast@plt+0x3aa0>
    7d3c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    7d40:	ldr	x0, [x0, #3976]
    7d44:	str	x0, [sp, #56]
    7d48:	mov	x1, x0
    7d4c:	ldr	x2, [x0]
    7d50:	add	x2, x2, #0x1
    7d54:	str	x2, [x0]
    7d58:	ldr	x0, [sp, #48]
    7d5c:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    7d60:	mov	x19, x0
    7d64:	ldr	x2, [sp, #56]
    7d68:	ldr	x1, [x2]
    7d6c:	sub	x1, x1, #0x1
    7d70:	str	x1, [x2]
    7d74:	cbnz	x1, 7ce0 <PySequence_Fast@plt+0x3aa0>
    7d78:	b	7d30 <PySequence_Fast@plt+0x3af0>
    7d7c:	ldr	x0, [x19]
    7d80:	sub	x0, x0, #0x1
    7d84:	str	x0, [x19]
    7d88:	cbnz	x0, 7d1c <PySequence_Fast@plt+0x3adc>
    7d8c:	mov	x0, x19
    7d90:	b	7da8 <PySequence_Fast@plt+0x3b68>
    7d94:	ldr	x0, [sp, #56]
    7d98:	ldr	x1, [x0]
    7d9c:	sub	x1, x1, #0x1
    7da0:	str	x1, [x0]
    7da4:	cbnz	x1, 7d1c <PySequence_Fast@plt+0x3adc>
    7da8:	mov	x19, #0x0                   	// #0
    7dac:	bl	3d70 <_Py_Dealloc@plt>
    7db0:	b	7cf4 <PySequence_Fast@plt+0x3ab4>
    7db4:	nop
    7db8:	stp	x29, x30, [sp, #-48]!
    7dbc:	mov	x29, sp
    7dc0:	str	x21, [sp, #32]
    7dc4:	mov	x21, x0
    7dc8:	ldr	x0, [x1, #8]
    7dcc:	stp	x19, x20, [sp, #16]
    7dd0:	adrp	x20, 20000 <PyInit__elementtree@@Base+0x13790>
    7dd4:	add	x20, x20, #0x320
    7dd8:	mov	x19, x1
    7ddc:	cmp	x0, x20
    7de0:	b.eq	7df0 <PySequence_Fast@plt+0x3bb0>  // b.none
    7de4:	mov	x1, x20
    7de8:	bl	4160 <PyType_IsSubtype@plt>
    7dec:	cbz	w0, 7e3c <PySequence_Fast@plt+0x3bfc>
    7df0:	mov	x1, x19
    7df4:	mov	x0, x21
    7df8:	bl	7978 <PySequence_Fast@plt+0x3738>
    7dfc:	tbnz	w0, #31, 7e28 <PySequence_Fast@plt+0x3be8>
    7e00:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    7e04:	ldr	x1, [x1, #3976]
    7e08:	mov	x0, x1
    7e0c:	ldr	x2, [x1]
    7e10:	add	x2, x2, #0x1
    7e14:	str	x2, [x1]
    7e18:	ldp	x19, x20, [sp, #16]
    7e1c:	ldr	x21, [sp, #32]
    7e20:	ldp	x29, x30, [sp], #48
    7e24:	ret
    7e28:	mov	x0, #0x0                   	// #0
    7e2c:	ldp	x19, x20, [sp, #16]
    7e30:	ldr	x21, [sp, #32]
    7e34:	ldp	x29, x30, [sp], #48
    7e38:	ret
    7e3c:	ldr	x2, [x20, #24]
    7e40:	mov	x3, x19
    7e44:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7e48:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    7e4c:	add	x1, x1, #0xce8
    7e50:	add	x0, x0, #0xcf8
    7e54:	bl	3ed0 <_PyArg_BadArgument@plt>
    7e58:	mov	x0, #0x0                   	// #0
    7e5c:	b	7e18 <PySequence_Fast@plt+0x3bd8>
    7e60:	stp	x29, x30, [sp, #-32]!
    7e64:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    7e68:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    7e6c:	mov	x29, sp
    7e70:	str	x19, [sp, #16]
    7e74:	mov	x19, x0
    7e78:	ldr	x0, [x2, #3936]
    7e7c:	add	x1, x1, #0xd00
    7e80:	mov	x2, #0x1                   	// #1
    7e84:	ldr	x0, [x0]
    7e88:	bl	3d60 <PyErr_WarnEx@plt>
    7e8c:	tbnz	w0, #31, 7ef0 <PySequence_Fast@plt+0x3cb0>
    7e90:	ldr	x0, [x19, #40]
    7e94:	cbz	x0, 7f00 <PySequence_Fast@plt+0x3cc0>
    7e98:	ldr	x0, [x0, #8]
    7e9c:	bl	3c50 <PyList_New@plt>
    7ea0:	cbz	x0, 7ef0 <PySequence_Fast@plt+0x3cb0>
    7ea4:	ldr	x4, [x19, #40]
    7ea8:	ldr	x1, [x4, #8]
    7eac:	cmp	x1, #0x0
    7eb0:	b.le	7ee4 <PySequence_Fast@plt+0x3ca4>
    7eb4:	ldr	x5, [x0, #24]
    7eb8:	mov	x1, #0x0                   	// #0
    7ebc:	ldr	x6, [x4, #24]
    7ec0:	ldr	x2, [x6, x1, lsl #3]
    7ec4:	ldr	x3, [x2]
    7ec8:	add	x3, x3, #0x1
    7ecc:	str	x3, [x2]
    7ed0:	str	x2, [x5, x1, lsl #3]
    7ed4:	add	x1, x1, #0x1
    7ed8:	ldr	x2, [x4, #8]
    7edc:	cmp	x1, x2
    7ee0:	b.lt	7ec0 <PySequence_Fast@plt+0x3c80>  // b.tstop
    7ee4:	ldr	x19, [sp, #16]
    7ee8:	ldp	x29, x30, [sp], #32
    7eec:	ret
    7ef0:	mov	x0, #0x0                   	// #0
    7ef4:	ldr	x19, [sp, #16]
    7ef8:	ldp	x29, x30, [sp], #32
    7efc:	ret
    7f00:	ldr	x19, [sp, #16]
    7f04:	ldp	x29, x30, [sp], #32
    7f08:	b	3c50 <PyList_New@plt>
    7f0c:	nop
    7f10:	stp	x29, x30, [sp, #-80]!
    7f14:	mov	x29, sp
    7f18:	stp	x19, x20, [sp, #16]
    7f1c:	stp	x21, x22, [sp, #32]
    7f20:	mov	x22, x1
    7f24:	stp	x23, x24, [sp, #48]
    7f28:	mov	x23, x0
    7f2c:	mov	x0, x1
    7f30:	bl	3c70 <strlen@plt>
    7f34:	mov	x21, x0
    7f38:	mov	x1, x21
    7f3c:	mov	x0, x22
    7f40:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    7f44:	cbz	x0, 7fc8 <PySequence_Fast@plt+0x3d88>
    7f48:	mov	x1, x0
    7f4c:	mov	x19, x0
    7f50:	ldr	x0, [x23]
    7f54:	bl	4230 <PyDict_GetItemWithError@plt>
    7f58:	mov	x20, x0
    7f5c:	cbz	x0, 7fe4 <PySequence_Fast@plt+0x3da4>
    7f60:	ldr	x0, [x0]
    7f64:	add	x0, x0, #0x1
    7f68:	str	x0, [x20]
    7f6c:	ldr	x0, [x19]
    7f70:	sub	x0, x0, #0x1
    7f74:	str	x0, [x19]
    7f78:	cbz	x0, 7f94 <PySequence_Fast@plt+0x3d54>
    7f7c:	mov	x0, x20
    7f80:	ldp	x19, x20, [sp, #16]
    7f84:	ldp	x21, x22, [sp, #32]
    7f88:	ldp	x23, x24, [sp, #48]
    7f8c:	ldp	x29, x30, [sp], #80
    7f90:	ret
    7f94:	mov	x0, x19
    7f98:	bl	3d70 <_Py_Dealloc@plt>
    7f9c:	mov	x0, x20
    7fa0:	ldp	x19, x20, [sp, #16]
    7fa4:	ldp	x21, x22, [sp, #32]
    7fa8:	ldp	x23, x24, [sp, #48]
    7fac:	ldp	x29, x30, [sp], #80
    7fb0:	ret
    7fb4:	ldr	x0, [x19]
    7fb8:	sub	x0, x0, #0x1
    7fbc:	str	x0, [x19]
    7fc0:	cbz	x0, 80ac <PySequence_Fast@plt+0x3e6c>
    7fc4:	ldr	x25, [sp, #64]
    7fc8:	mov	x20, #0x0                   	// #0
    7fcc:	mov	x0, x20
    7fd0:	ldp	x19, x20, [sp, #16]
    7fd4:	ldp	x21, x22, [sp, #32]
    7fd8:	ldp	x23, x24, [sp, #48]
    7fdc:	ldp	x29, x30, [sp], #80
    7fe0:	ret
    7fe4:	bl	3f80 <PyErr_Occurred@plt>
    7fe8:	cbnz	x0, 7f6c <PySequence_Fast@plt+0x3d2c>
    7fec:	str	x25, [sp, #64]
    7ff0:	mov	x24, x21
    7ff4:	cbnz	x21, 8004 <PySequence_Fast@plt+0x3dc4>
    7ff8:	b	8098 <PySequence_Fast@plt+0x3e58>
    7ffc:	cmp	x21, x0
    8000:	b.eq	8098 <PySequence_Fast@plt+0x3e58>  // b.none
    8004:	ldrb	w1, [x22, x0]
    8008:	add	x0, x0, #0x1
    800c:	cmp	w1, #0x7d
    8010:	b.ne	7ffc <PySequence_Fast@plt+0x3dbc>  // b.any
    8014:	add	x24, x21, #0x1
    8018:	mov	x0, #0x0                   	// #0
    801c:	mov	x1, x24
    8020:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    8024:	mov	x25, x0
    8028:	cbz	x0, 80f0 <PySequence_Fast@plt+0x3eb0>
    802c:	mov	w0, #0x7b                  	// #123
    8030:	strb	w0, [x25, #32]
    8034:	mov	x2, x21
    8038:	mov	x1, x22
    803c:	add	x0, x25, #0x21
    8040:	bl	3c20 <memcpy@plt>
    8044:	mov	x1, x24
    8048:	add	x0, x25, #0x20
    804c:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    8050:	add	x2, x2, #0xd68
    8054:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    8058:	mov	x20, x0
    805c:	ldr	x1, [x25]
    8060:	sub	x0, x1, #0x1
    8064:	str	x0, [x25]
    8068:	cbz	x0, 808c <PySequence_Fast@plt+0x3e4c>
    806c:	cbz	x20, 7fb4 <PySequence_Fast@plt+0x3d74>
    8070:	ldr	x0, [x23]
    8074:	mov	x2, x20
    8078:	mov	x1, x19
    807c:	bl	4140 <PyDict_SetItem@plt>
    8080:	tbnz	w0, #31, 80bc <PySequence_Fast@plt+0x3e7c>
    8084:	ldr	x25, [sp, #64]
    8088:	b	7f6c <PySequence_Fast@plt+0x3d2c>
    808c:	mov	x0, x25
    8090:	bl	3d70 <_Py_Dealloc@plt>
    8094:	b	806c <PySequence_Fast@plt+0x3e2c>
    8098:	ldr	x0, [x19]
    809c:	mov	x25, x19
    80a0:	add	x0, x0, #0x1
    80a4:	str	x0, [x19]
    80a8:	b	8044 <PySequence_Fast@plt+0x3e04>
    80ac:	mov	x0, x19
    80b0:	bl	3d70 <_Py_Dealloc@plt>
    80b4:	ldr	x25, [sp, #64]
    80b8:	b	7f7c <PySequence_Fast@plt+0x3d3c>
    80bc:	ldr	x0, [x19]
    80c0:	sub	x0, x0, #0x1
    80c4:	str	x0, [x19]
    80c8:	cbz	x0, 8114 <PySequence_Fast@plt+0x3ed4>
    80cc:	ldr	x0, [x20]
    80d0:	sub	x0, x0, #0x1
    80d4:	str	x0, [x20]
    80d8:	cbnz	x0, 7fc4 <PySequence_Fast@plt+0x3d84>
    80dc:	mov	x0, x20
    80e0:	mov	x20, #0x0                   	// #0
    80e4:	bl	3d70 <_Py_Dealloc@plt>
    80e8:	ldr	x25, [sp, #64]
    80ec:	b	7f7c <PySequence_Fast@plt+0x3d3c>
    80f0:	ldr	x0, [x19]
    80f4:	sub	x0, x0, #0x1
    80f8:	str	x0, [x19]
    80fc:	cbnz	x0, 7fc4 <PySequence_Fast@plt+0x3d84>
    8100:	mov	x0, x19
    8104:	mov	x20, #0x0                   	// #0
    8108:	bl	3d70 <_Py_Dealloc@plt>
    810c:	ldr	x25, [sp, #64]
    8110:	b	7f7c <PySequence_Fast@plt+0x3d3c>
    8114:	mov	x0, x19
    8118:	bl	3d70 <_Py_Dealloc@plt>
    811c:	b	80cc <PySequence_Fast@plt+0x3e8c>
    8120:	stp	x29, x30, [sp, #-80]!
    8124:	mov	x29, sp
    8128:	stp	x19, x20, [sp, #16]
    812c:	mov	x20, x1
    8130:	mov	x19, x2
    8134:	stp	x21, x22, [sp, #32]
    8138:	mov	x22, x0
    813c:	mov	x21, x3
    8140:	bl	3f80 <PyErr_Occurred@plt>
    8144:	cbz	x0, 8158 <PySequence_Fast@plt+0x3f18>
    8148:	ldp	x19, x20, [sp, #16]
    814c:	ldp	x21, x22, [sp, #32]
    8150:	ldp	x29, x30, [sp], #80
    8154:	ret
    8158:	stp	x23, x24, [sp, #48]
    815c:	add	x23, x22, #0x28
    8160:	mov	x1, x20
    8164:	mov	x0, x23
    8168:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    816c:	mov	x20, x0
    8170:	cbz	x0, 8238 <PySequence_Fast@plt+0x3ff8>
    8174:	cbz	x19, 824c <PySequence_Fast@plt+0x400c>
    8178:	mov	x1, x19
    817c:	mov	x0, x23
    8180:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    8184:	mov	x24, x0
    8188:	cbz	x0, 82f4 <PySequence_Fast@plt+0x40b4>
    818c:	cbz	x21, 8268 <PySequence_Fast@plt+0x4028>
    8190:	mov	x1, x21
    8194:	mov	x0, x23
    8198:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    819c:	mov	x19, x0
    81a0:	cbz	x0, 8218 <PySequence_Fast@plt+0x3fd8>
    81a4:	ldr	x0, [x22, #104]
    81a8:	cbz	x0, 829c <PySequence_Fast@plt+0x405c>
    81ac:	mov	x3, x24
    81b0:	mov	x2, x19
    81b4:	mov	x1, x20
    81b8:	mov	x4, #0x0                   	// #0
    81bc:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    81c0:	str	x0, [sp, #72]
    81c4:	cbz	x0, 81d8 <PySequence_Fast@plt+0x3f98>
    81c8:	ldr	x2, [x0]
    81cc:	sub	x2, x2, #0x1
    81d0:	str	x2, [x0]
    81d4:	cbz	x2, 82ec <PySequence_Fast@plt+0x40ac>
    81d8:	ldr	x1, [x20]
    81dc:	sub	x1, x1, #0x1
    81e0:	str	x1, [x20]
    81e4:	cbz	x1, 8290 <PySequence_Fast@plt+0x4050>
    81e8:	ldr	x1, [x19]
    81ec:	sub	x1, x1, #0x1
    81f0:	str	x1, [x19]
    81f4:	cbz	x1, 8284 <PySequence_Fast@plt+0x4044>
    81f8:	ldr	x1, [x24]
    81fc:	sub	x1, x1, #0x1
    8200:	str	x1, [x24]
    8204:	cbnz	x1, 8238 <PySequence_Fast@plt+0x3ff8>
    8208:	mov	x0, x24
    820c:	bl	3d70 <_Py_Dealloc@plt>
    8210:	ldp	x23, x24, [sp, #48]
    8214:	b	8148 <PySequence_Fast@plt+0x3f08>
    8218:	ldr	x0, [x20]
    821c:	sub	x0, x0, #0x1
    8220:	str	x0, [x20]
    8224:	cbz	x0, 8314 <PySequence_Fast@plt+0x40d4>
    8228:	ldr	x0, [x24]
    822c:	sub	x0, x0, #0x1
    8230:	str	x0, [x24]
    8234:	cbz	x0, 8208 <PySequence_Fast@plt+0x3fc8>
    8238:	ldp	x19, x20, [sp, #16]
    823c:	ldp	x21, x22, [sp, #32]
    8240:	ldp	x23, x24, [sp, #48]
    8244:	ldp	x29, x30, [sp], #80
    8248:	ret
    824c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    8250:	ldr	x1, [x1, #3976]
    8254:	mov	x24, x1
    8258:	ldr	x0, [x1]
    825c:	add	x0, x0, #0x1
    8260:	str	x0, [x1]
    8264:	cbnz	x21, 8190 <PySequence_Fast@plt+0x3f50>
    8268:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    826c:	ldr	x1, [x1, #3976]
    8270:	mov	x19, x1
    8274:	ldr	x0, [x1]
    8278:	add	x0, x0, #0x1
    827c:	str	x0, [x1]
    8280:	b	81a4 <PySequence_Fast@plt+0x3f64>
    8284:	mov	x0, x19
    8288:	bl	3d70 <_Py_Dealloc@plt>
    828c:	b	81f8 <PySequence_Fast@plt+0x3fb8>
    8290:	mov	x0, x20
    8294:	bl	3d70 <_Py_Dealloc@plt>
    8298:	b	81e8 <PySequence_Fast@plt+0x3fa8>
    829c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    82a0:	add	x1, x1, #0x9b8
    82a4:	mov	x0, x22
    82a8:	add	x1, x1, #0x288
    82ac:	add	x2, sp, #0x48
    82b0:	bl	3c90 <_PyObject_LookupAttrId@plt>
    82b4:	cmp	w0, #0x0
    82b8:	b.le	81d8 <PySequence_Fast@plt+0x3f98>
    82bc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    82c0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    82c4:	mov	x2, #0x1                   	// #1
    82c8:	add	x1, x1, #0xd70
    82cc:	ldr	x0, [x0, #4024]
    82d0:	ldr	x0, [x0]
    82d4:	bl	3d60 <PyErr_WarnEx@plt>
    82d8:	ldr	x0, [sp, #72]
    82dc:	ldr	x1, [x0]
    82e0:	sub	x1, x1, #0x1
    82e4:	str	x1, [x0]
    82e8:	cbnz	x1, 81d8 <PySequence_Fast@plt+0x3f98>
    82ec:	bl	3d70 <_Py_Dealloc@plt>
    82f0:	b	81d8 <PySequence_Fast@plt+0x3f98>
    82f4:	ldr	x0, [x20]
    82f8:	sub	x0, x0, #0x1
    82fc:	str	x0, [x20]
    8300:	cbnz	x0, 8238 <PySequence_Fast@plt+0x3ff8>
    8304:	mov	x0, x20
    8308:	bl	3d70 <_Py_Dealloc@plt>
    830c:	ldp	x23, x24, [sp, #48]
    8310:	b	8148 <PySequence_Fast@plt+0x3f08>
    8314:	mov	x0, x20
    8318:	bl	3d70 <_Py_Dealloc@plt>
    831c:	b	8228 <PySequence_Fast@plt+0x3fe8>
    8320:	mov	x2, x0
    8324:	ldr	x0, [x0, #48]
    8328:	cbz	x0, 8364 <PySequence_Fast@plt+0x4124>
    832c:	ldr	x0, [x2, #40]
    8330:	add	x1, x2, #0x30
    8334:	cbz	x0, 834c <PySequence_Fast@plt+0x410c>
    8338:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    833c:	add	x3, x3, #0x9b8
    8340:	add	x3, x3, #0x2b8
    8344:	add	x2, x0, #0x20
    8348:	b	49d8 <PySequence_Fast@plt+0x798>
    834c:	ldr	x0, [x2, #32]
    8350:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    8354:	add	x3, x3, #0x9b8
    8358:	add	x3, x3, #0x2a0
    835c:	add	x2, x0, #0x18
    8360:	b	49d8 <PySequence_Fast@plt+0x798>
    8364:	mov	w0, #0x0                   	// #0
    8368:	ret
    836c:	nop
    8370:	stp	x29, x30, [sp, #-16]!
    8374:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    8378:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    837c:	mov	x29, sp
    8380:	ldr	x0, [x0, #4008]
    8384:	add	x1, x1, #0xdd8
    8388:	ldr	x0, [x0]
    838c:	bl	3de0 <PyErr_SetString@plt>
    8390:	mov	w0, #0xffffffff            	// #-1
    8394:	ldp	x29, x30, [sp], #16
    8398:	ret
    839c:	nop
    83a0:	cbz	x1, 83f0 <PySequence_Fast@plt+0x41b0>
    83a4:	ldr	x2, [x0, #32]
    83a8:	mov	x3, x0
    83ac:	ldr	x4, [x1]
    83b0:	and	x0, x2, #0xfffffffffffffffe
    83b4:	add	x2, x4, #0x1
    83b8:	str	x2, [x1]
    83bc:	str	x1, [x3, #32]
    83c0:	ldr	x1, [x0]
    83c4:	sub	x1, x1, #0x1
    83c8:	str	x1, [x0]
    83cc:	cbz	x1, 83d8 <PySequence_Fast@plt+0x4198>
    83d0:	mov	w0, #0x0                   	// #0
    83d4:	ret
    83d8:	stp	x29, x30, [sp, #-16]!
    83dc:	mov	x29, sp
    83e0:	bl	3d70 <_Py_Dealloc@plt>
    83e4:	mov	w0, #0x0                   	// #0
    83e8:	ldp	x29, x30, [sp], #16
    83ec:	ret
    83f0:	b	8370 <PySequence_Fast@plt+0x4130>
    83f4:	nop
    83f8:	cbz	x1, 8448 <PySequence_Fast@plt+0x4208>
    83fc:	ldr	x2, [x0, #24]
    8400:	mov	x3, x0
    8404:	ldr	x4, [x1]
    8408:	and	x0, x2, #0xfffffffffffffffe
    840c:	add	x2, x4, #0x1
    8410:	str	x2, [x1]
    8414:	str	x1, [x3, #24]
    8418:	ldr	x1, [x0]
    841c:	sub	x1, x1, #0x1
    8420:	str	x1, [x0]
    8424:	cbz	x1, 8430 <PySequence_Fast@plt+0x41f0>
    8428:	mov	w0, #0x0                   	// #0
    842c:	ret
    8430:	stp	x29, x30, [sp, #-16]!
    8434:	mov	x29, sp
    8438:	bl	3d70 <_Py_Dealloc@plt>
    843c:	mov	w0, #0x0                   	// #0
    8440:	ldp	x29, x30, [sp], #16
    8444:	ret
    8448:	b	8370 <PySequence_Fast@plt+0x4130>
    844c:	nop
    8450:	cbz	x1, 84d0 <PySequence_Fast@plt+0x4290>
    8454:	stp	x29, x30, [sp, #-32]!
    8458:	mov	x29, sp
    845c:	stp	x19, x20, [sp, #16]
    8460:	mov	x19, x1
    8464:	mov	x20, x0
    8468:	ldr	x1, [x0, #40]
    846c:	cbz	x1, 84bc <PySequence_Fast@plt+0x427c>
    8470:	ldr	x2, [x19]
    8474:	mov	w20, #0x0                   	// #0
    8478:	ldr	x0, [x1]
    847c:	add	x2, x2, #0x1
    8480:	str	x2, [x19]
    8484:	str	x19, [x1]
    8488:	ldr	x1, [x0]
    848c:	sub	x1, x1, #0x1
    8490:	str	x1, [x0]
    8494:	cbz	x1, 84a8 <PySequence_Fast@plt+0x4268>
    8498:	mov	w0, w20
    849c:	ldp	x19, x20, [sp, #16]
    84a0:	ldp	x29, x30, [sp], #32
    84a4:	ret
    84a8:	bl	3d70 <_Py_Dealloc@plt>
    84ac:	mov	w0, w20
    84b0:	ldp	x19, x20, [sp, #16]
    84b4:	ldp	x29, x30, [sp], #32
    84b8:	ret
    84bc:	add	x0, x0, #0x28
    84c0:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    84c4:	tbnz	w0, #31, 84d4 <PySequence_Fast@plt+0x4294>
    84c8:	ldr	x1, [x20, #40]
    84cc:	b	8470 <PySequence_Fast@plt+0x4230>
    84d0:	b	8370 <PySequence_Fast@plt+0x4130>
    84d4:	mov	w20, #0xffffffff            	// #-1
    84d8:	b	8498 <PySequence_Fast@plt+0x4258>
    84dc:	nop
    84e0:	stp	x29, x30, [sp, #-32]!
    84e4:	mov	x29, sp
    84e8:	stp	x19, x20, [sp, #16]
    84ec:	mov	x20, x0
    84f0:	bl	4080 <PyDict_New@plt>
    84f4:	mov	x19, x0
    84f8:	cbz	x0, 851c <PySequence_Fast@plt+0x42dc>
    84fc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    8500:	ldr	x0, [x1, #3976]
    8504:	ldr	x1, [x0]
    8508:	sub	x1, x1, #0x1
    850c:	str	x1, [x0]
    8510:	cbz	x1, 852c <PySequence_Fast@plt+0x42ec>
    8514:	ldr	x0, [x20]
    8518:	str	x19, [x0]
    851c:	mov	x0, x19
    8520:	ldp	x19, x20, [sp, #16]
    8524:	ldp	x29, x30, [sp], #32
    8528:	ret
    852c:	bl	3d70 <_Py_Dealloc@plt>
    8530:	b	8514 <PySequence_Fast@plt+0x42d4>
    8534:	nop
    8538:	stp	x29, x30, [sp, #-48]!
    853c:	mov	x29, sp
    8540:	str	x21, [sp, #32]
    8544:	mov	x21, x0
    8548:	stp	x19, x20, [sp, #16]
    854c:	ldr	x19, [x21, #40]!
    8550:	cbz	x19, 859c <PySequence_Fast@plt+0x435c>
    8554:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    8558:	ldr	x19, [x19]
    855c:	ldr	x0, [x0, #3976]
    8560:	cmp	x19, x0
    8564:	b.eq	858c <PySequence_Fast@plt+0x434c>  // b.none
    8568:	cbz	x19, 8578 <PySequence_Fast@plt+0x4338>
    856c:	ldr	x0, [x19]
    8570:	add	x0, x0, #0x1
    8574:	str	x0, [x19]
    8578:	mov	x0, x19
    857c:	ldp	x19, x20, [sp, #16]
    8580:	ldr	x21, [sp, #32]
    8584:	ldp	x29, x30, [sp], #48
    8588:	ret
    858c:	mov	x0, x21
    8590:	bl	84e0 <PySequence_Fast@plt+0x42a0>
    8594:	mov	x19, x0
    8598:	b	8568 <PySequence_Fast@plt+0x4328>
    859c:	mov	x20, x0
    85a0:	mov	x1, #0x0                   	// #0
    85a4:	mov	x0, x21
    85a8:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    85ac:	tbnz	w0, #31, 8578 <PySequence_Fast@plt+0x4338>
    85b0:	ldr	x19, [x20, #40]
    85b4:	b	8554 <PySequence_Fast@plt+0x4314>
    85b8:	stp	x29, x30, [sp, #-64]!
    85bc:	cmp	x2, #0x2
    85c0:	mov	x29, sp
    85c4:	stp	x19, x20, [sp, #16]
    85c8:	mov	x20, x0
    85cc:	mov	x19, x1
    85d0:	b.eq	85f0 <PySequence_Fast@plt+0x43b0>  // b.none
    85d4:	mov	x1, x2
    85d8:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    85dc:	mov	x3, #0x2                   	// #2
    85e0:	add	x0, x0, #0xdf8
    85e4:	mov	x2, x3
    85e8:	bl	3f60 <_PyArg_CheckPositional@plt>
    85ec:	cbz	w0, 8664 <PySequence_Fast@plt+0x4424>
    85f0:	stp	x21, x22, [sp, #32]
    85f4:	mov	x21, x20
    85f8:	ldr	x22, [x19]
    85fc:	ldr	x0, [x21, #40]!
    8600:	str	x23, [sp, #48]
    8604:	ldr	x23, [x19, #8]
    8608:	cbz	x0, 8680 <PySequence_Fast@plt+0x4440>
    860c:	adrp	x19, 1f000 <PyInit__elementtree@@Base+0x12790>
    8610:	ldr	x0, [x0]
    8614:	ldr	x1, [x19, #3976]
    8618:	cmp	x0, x1
    861c:	b.eq	8674 <PySequence_Fast@plt+0x4434>  // b.none
    8620:	cbz	x0, 865c <PySequence_Fast@plt+0x441c>
    8624:	mov	x2, x23
    8628:	mov	x1, x22
    862c:	bl	4140 <PyDict_SetItem@plt>
    8630:	tbnz	w0, #31, 865c <PySequence_Fast@plt+0x441c>
    8634:	ldr	x1, [x19, #3976]
    8638:	ldp	x21, x22, [sp, #32]
    863c:	mov	x0, x1
    8640:	ldr	x2, [x1]
    8644:	ldr	x23, [sp, #48]
    8648:	add	x2, x2, #0x1
    864c:	str	x2, [x1]
    8650:	ldp	x19, x20, [sp, #16]
    8654:	ldp	x29, x30, [sp], #64
    8658:	ret
    865c:	ldp	x21, x22, [sp, #32]
    8660:	ldr	x23, [sp, #48]
    8664:	mov	x0, #0x0                   	// #0
    8668:	ldp	x19, x20, [sp, #16]
    866c:	ldp	x29, x30, [sp], #64
    8670:	ret
    8674:	mov	x0, x21
    8678:	bl	84e0 <PySequence_Fast@plt+0x42a0>
    867c:	b	8620 <PySequence_Fast@plt+0x43e0>
    8680:	mov	x0, x21
    8684:	mov	x1, #0x0                   	// #0
    8688:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    868c:	tbnz	w0, #31, 865c <PySequence_Fast@plt+0x441c>
    8690:	ldr	x0, [x20, #40]
    8694:	b	860c <PySequence_Fast@plt+0x43cc>
    8698:	stp	x29, x30, [sp, #-32]!
    869c:	mov	x29, sp
    86a0:	stp	x19, x20, [sp, #16]
    86a4:	ldr	x19, [x0]
    86a8:	tbz	w19, #0, 86c8 <PySequence_Fast@plt+0x4488>
    86ac:	and	x19, x19, #0xfffffffffffffffe
    86b0:	mov	x20, x0
    86b4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    86b8:	ldr	x0, [x0, #4064]
    86bc:	ldr	x1, [x19, #8]
    86c0:	cmp	x1, x0
    86c4:	b.eq	86d8 <PySequence_Fast@plt+0x4498>  // b.none
    86c8:	mov	x0, x19
    86cc:	ldp	x19, x20, [sp, #16]
    86d0:	ldp	x29, x30, [sp], #32
    86d4:	ret
    86d8:	mov	x0, x19
    86dc:	bl	4958 <PySequence_Fast@plt+0x718>
    86e0:	mov	x1, x0
    86e4:	cbz	x0, 8714 <PySequence_Fast@plt+0x44d4>
    86e8:	ldr	x0, [x19]
    86ec:	str	x1, [x20]
    86f0:	sub	x0, x0, #0x1
    86f4:	str	x0, [x19]
    86f8:	cbz	x0, 8704 <PySequence_Fast@plt+0x44c4>
    86fc:	mov	x19, x1
    8700:	b	86c8 <PySequence_Fast@plt+0x4488>
    8704:	mov	x0, x19
    8708:	mov	x19, x1
    870c:	bl	3d70 <_Py_Dealloc@plt>
    8710:	b	86c8 <PySequence_Fast@plt+0x4488>
    8714:	mov	x19, #0x0                   	// #0
    8718:	b	86c8 <PySequence_Fast@plt+0x4488>
    871c:	nop
    8720:	stp	x29, x30, [sp, #-16]!
    8724:	add	x0, x0, #0x20
    8728:	mov	x29, sp
    872c:	bl	8698 <PySequence_Fast@plt+0x4458>
    8730:	cbz	x0, 8740 <PySequence_Fast@plt+0x4500>
    8734:	ldr	x1, [x0]
    8738:	add	x1, x1, #0x1
    873c:	str	x1, [x0]
    8740:	ldp	x29, x30, [sp], #16
    8744:	ret
    8748:	stp	x29, x30, [sp, #-16]!
    874c:	add	x0, x0, #0x18
    8750:	mov	x29, sp
    8754:	bl	8698 <PySequence_Fast@plt+0x4458>
    8758:	cbz	x0, 8768 <PySequence_Fast@plt+0x4528>
    875c:	ldr	x1, [x0]
    8760:	add	x1, x1, #0x1
    8764:	str	x1, [x0]
    8768:	ldp	x29, x30, [sp], #16
    876c:	ret
    8770:	sub	sp, sp, #0x70
    8774:	mov	x5, x1
    8778:	mov	x1, x2
    877c:	stp	x29, x30, [sp, #16]
    8780:	add	x29, sp, #0x10
    8784:	stp	x19, x20, [sp, #32]
    8788:	stp	x21, x22, [sp, #48]
    878c:	mov	x21, x0
    8790:	cbz	x3, 8868 <PySequence_Fast@plt+0x4628>
    8794:	ldr	x22, [x3, #16]
    8798:	add	x22, x2, x22
    879c:	add	x0, sp, #0x58
    87a0:	str	x0, [sp]
    87a4:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    87a8:	mov	x0, x5
    87ac:	add	x4, x19, #0x9b8
    87b0:	mov	w5, #0x1                   	// #1
    87b4:	add	x4, x4, #0x2d0
    87b8:	mov	w7, #0x0                   	// #0
    87bc:	mov	w6, #0x3                   	// #3
    87c0:	mov	x2, #0x0                   	// #0
    87c4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    87c8:	mov	x5, x0
    87cc:	cbz	x0, 8974 <PySequence_Fast@plt+0x4734>
    87d0:	stp	x23, x24, [sp, #64]
    87d4:	cmp	x22, #0x1
    87d8:	ldr	x23, [x5]
    87dc:	b.eq	8898 <PySequence_Fast@plt+0x4658>  // b.none
    87e0:	ldr	x20, [x5, #8]
    87e4:	cbz	x20, 8964 <PySequence_Fast@plt+0x4724>
    87e8:	cmp	x22, #0x2
    87ec:	b.eq	88a0 <PySequence_Fast@plt+0x4660>  // b.none
    87f0:	adrp	x22, 1f000 <PyInit__elementtree@@Base+0x12790>
    87f4:	add	x0, x19, #0x9b8
    87f8:	add	x0, x0, #0x40
    87fc:	ldr	x24, [x5, #16]
    8800:	bl	3fc0 <PyState_FindModule@plt>
    8804:	bl	3e10 <PyModule_GetState@plt>
    8808:	mov	x8, x0
    880c:	mov	x0, x23
    8810:	bl	4368 <PySequence_Fast@plt+0x128>
    8814:	cmp	w0, #0x0
    8818:	ldr	x22, [x22, #3976]
    881c:	ccmp	x24, x22, #0x0, eq  // eq = none
    8820:	b.eq	88c0 <PySequence_Fast@plt+0x4680>  // b.none
    8824:	ldr	x0, [x8, #16]
    8828:	add	x1, x19, #0x9b8
    882c:	mov	x5, x24
    8830:	mov	x4, x20
    8834:	mov	x3, x23
    8838:	add	x1, x1, #0x310
    883c:	mov	x2, x21
    8840:	mov	x6, #0x0                   	// #0
    8844:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    8848:	mov	x20, x0
    884c:	ldp	x23, x24, [sp, #64]
    8850:	mov	x0, x20
    8854:	ldp	x29, x30, [sp, #16]
    8858:	ldp	x19, x20, [sp, #32]
    885c:	ldp	x21, x22, [sp, #48]
    8860:	add	sp, sp, #0x70
    8864:	ret
    8868:	sub	x0, x2, #0x1
    886c:	cmp	x0, #0x2
    8870:	b.hi	8878 <PySequence_Fast@plt+0x4638>  // b.pmore
    8874:	cbnz	x5, 8880 <PySequence_Fast@plt+0x4640>
    8878:	mov	x22, x1
    887c:	b	879c <PySequence_Fast@plt+0x455c>
    8880:	stp	x23, x24, [sp, #64]
    8884:	mov	x22, x2
    8888:	cmp	x22, #0x1
    888c:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    8890:	ldr	x23, [x5]
    8894:	b.ne	87e0 <PySequence_Fast@plt+0x45a0>  // b.any
    8898:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    889c:	ldr	x20, [x20, #3976]
    88a0:	add	x0, x19, #0x9b8
    88a4:	add	x0, x0, #0x40
    88a8:	bl	3fc0 <PyState_FindModule@plt>
    88ac:	bl	3e10 <PyModule_GetState@plt>
    88b0:	mov	x8, x0
    88b4:	mov	x0, x23
    88b8:	bl	4368 <PySequence_Fast@plt+0x128>
    88bc:	cbnz	w0, 89d4 <PySequence_Fast@plt+0x4794>
    88c0:	ldr	x0, [x21, #40]
    88c4:	cbz	x0, 8930 <PySequence_Fast@plt+0x46f0>
    88c8:	ldr	x1, [x0, #8]
    88cc:	mov	x24, #0x0                   	// #0
    88d0:	cmp	x1, #0x0
    88d4:	b.le	8930 <PySequence_Fast@plt+0x46f0>
    88d8:	ldr	x0, [x0, #24]
    88dc:	mov	x1, x23
    88e0:	mov	w2, #0x2                   	// #2
    88e4:	ldr	x19, [x0, x24, lsl #3]
    88e8:	add	x24, x24, #0x1
    88ec:	ldr	x3, [x19]
    88f0:	ldr	x0, [x19, #16]
    88f4:	add	x3, x3, #0x1
    88f8:	str	x3, [x19]
    88fc:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8900:	mov	w22, w0
    8904:	cmp	w0, #0x0
    8908:	b.gt	8990 <PySequence_Fast@plt+0x4750>
    890c:	ldr	x0, [x19]
    8910:	sub	x0, x0, #0x1
    8914:	str	x0, [x19]
    8918:	cbz	x0, 8958 <PySequence_Fast@plt+0x4718>
    891c:	cbnz	w22, 8970 <PySequence_Fast@plt+0x4730>
    8920:	ldr	x0, [x21, #40]
    8924:	ldr	x1, [x0, #8]
    8928:	cmp	x24, x1
    892c:	b.lt	88d8 <PySequence_Fast@plt+0x4698>  // b.tstop
    8930:	ldr	x0, [x20]
    8934:	ldp	x23, x24, [sp, #64]
    8938:	add	x0, x0, #0x1
    893c:	str	x0, [x20]
    8940:	mov	x0, x20
    8944:	ldp	x29, x30, [sp, #16]
    8948:	ldp	x19, x20, [sp, #32]
    894c:	ldp	x21, x22, [sp, #48]
    8950:	add	sp, sp, #0x70
    8954:	ret
    8958:	mov	x0, x19
    895c:	bl	3d70 <_Py_Dealloc@plt>
    8960:	b	891c <PySequence_Fast@plt+0x46dc>
    8964:	adrp	x22, 1f000 <PyInit__elementtree@@Base+0x12790>
    8968:	ldr	x20, [x22, #3976]
    896c:	b	87f4 <PySequence_Fast@plt+0x45b4>
    8970:	ldp	x23, x24, [sp, #64]
    8974:	mov	x20, #0x0                   	// #0
    8978:	mov	x0, x20
    897c:	ldp	x29, x30, [sp, #16]
    8980:	ldp	x19, x20, [sp, #32]
    8984:	ldp	x21, x22, [sp, #48]
    8988:	add	sp, sp, #0x70
    898c:	ret
    8990:	add	x0, x19, #0x18
    8994:	bl	8698 <PySequence_Fast@plt+0x4458>
    8998:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    899c:	mov	x20, x0
    89a0:	ldr	x1, [x1, #3976]
    89a4:	cmp	x0, x1
    89a8:	b.eq	89f0 <PySequence_Fast@plt+0x47b0>  // b.none
    89ac:	cbz	x0, 89bc <PySequence_Fast@plt+0x477c>
    89b0:	ldr	x0, [x0]
    89b4:	add	x0, x0, #0x1
    89b8:	str	x0, [x20]
    89bc:	ldr	x0, [x19]
    89c0:	sub	x0, x0, #0x1
    89c4:	str	x0, [x19]
    89c8:	cbz	x0, 89e0 <PySequence_Fast@plt+0x47a0>
    89cc:	ldp	x23, x24, [sp, #64]
    89d0:	b	8850 <PySequence_Fast@plt+0x4610>
    89d4:	adrp	x24, 1f000 <PyInit__elementtree@@Base+0x12790>
    89d8:	ldr	x24, [x24, #3976]
    89dc:	b	8824 <PySequence_Fast@plt+0x45e4>
    89e0:	mov	x0, x19
    89e4:	bl	3d70 <_Py_Dealloc@plt>
    89e8:	ldp	x23, x24, [sp, #64]
    89ec:	b	8850 <PySequence_Fast@plt+0x4610>
    89f0:	ldr	x0, [x19]
    89f4:	sub	x0, x0, #0x1
    89f8:	str	x0, [x19]
    89fc:	cbz	x0, 8a18 <PySequence_Fast@plt+0x47d8>
    8a00:	mov	w1, #0x0                   	// #0
    8a04:	mov	x0, #0x0                   	// #0
    8a08:	bl	4200 <PyUnicode_New@plt>
    8a0c:	mov	x20, x0
    8a10:	ldp	x23, x24, [sp, #64]
    8a14:	b	8850 <PySequence_Fast@plt+0x4610>
    8a18:	mov	x0, x19
    8a1c:	bl	3d70 <_Py_Dealloc@plt>
    8a20:	b	8a00 <PySequence_Fast@plt+0x47c0>
    8a24:	nop
    8a28:	stp	x29, x30, [sp, #-64]!
    8a2c:	mov	x29, sp
    8a30:	stp	x21, x22, [sp, #32]
    8a34:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    8a38:	ldr	x21, [x21, #3976]
    8a3c:	stp	x19, x20, [sp, #16]
    8a40:	mov	x19, x0
    8a44:	mov	x22, x21
    8a48:	stp	x23, x24, [sp, #48]
    8a4c:	mov	x23, #0x7ffffffffffffff     	// #576460752303423487
    8a50:	ldr	x2, [x19, #24]
    8a54:	cbnz	x2, 8b28 <PySequence_Fast@plt+0x48e8>
    8a58:	ldr	x20, [x19, #40]
    8a5c:	cbz	x20, 8c60 <PySequence_Fast@plt+0x4a20>
    8a60:	ldr	x0, [x19, #16]
    8a64:	str	xzr, [x19, #40]
    8a68:	ldr	x1, [x19, #32]
    8a6c:	cmp	x2, x1
    8a70:	b.lt	8a98 <PySequence_Fast@plt+0x4858>  // b.tstop
    8a74:	cmp	x23, x1, lsl #1
    8a78:	lsl	x24, x1, #1
    8a7c:	b.cc	8c38 <PySequence_Fast@plt+0x49f8>  // b.lo, b.ul, b.last
    8a80:	lsl	x1, x1, #5
    8a84:	bl	3e30 <PyMem_Realloc@plt>
    8a88:	cbz	x0, 8c38 <PySequence_Fast@plt+0x49f8>
    8a8c:	ldr	x2, [x19, #24]
    8a90:	str	x0, [x19, #16]
    8a94:	str	x24, [x19, #32]
    8a98:	add	x1, x2, #0x1
    8a9c:	str	x1, [x19, #24]
    8aa0:	lsl	x2, x2, #4
    8aa4:	ldr	w3, [x19, #56]
    8aa8:	ldr	x1, [x20]
    8aac:	add	x4, x0, x2
    8ab0:	add	x1, x1, #0x1
    8ab4:	str	x1, [x20]
    8ab8:	str	x20, [x0, x2]
    8abc:	str	xzr, [x4, #8]
    8ac0:	cbnz	w3, 8bac <PySequence_Fast@plt+0x496c>
    8ac4:	ldr	x1, [x19, #48]
    8ac8:	cmp	x1, x22
    8acc:	b.eq	8b00 <PySequence_Fast@plt+0x48c0>  // b.none
    8ad0:	ldr	x0, [x20, #16]
    8ad4:	mov	w2, #0x2                   	// #2
    8ad8:	bl	3ec0 <PyObject_RichCompareBool@plt>
    8adc:	mov	w24, w0
    8ae0:	cmp	w0, #0x0
    8ae4:	b.gt	8b00 <PySequence_Fast@plt+0x48c0>
    8ae8:	ldr	x0, [x20]
    8aec:	sub	x0, x0, #0x1
    8af0:	str	x0, [x20]
    8af4:	cbz	x0, 8b18 <PySequence_Fast@plt+0x48d8>
    8af8:	cbz	w24, 8a50 <PySequence_Fast@plt+0x4810>
    8afc:	mov	x20, #0x0                   	// #0
    8b00:	mov	x0, x20
    8b04:	ldp	x19, x20, [sp, #16]
    8b08:	ldp	x21, x22, [sp, #32]
    8b0c:	ldp	x23, x24, [sp, #48]
    8b10:	ldp	x29, x30, [sp], #64
    8b14:	ret
    8b18:	mov	x0, x20
    8b1c:	bl	3d70 <_Py_Dealloc@plt>
    8b20:	cbz	w24, 8a50 <PySequence_Fast@plt+0x4810>
    8b24:	b	8afc <PySequence_Fast@plt+0x48bc>
    8b28:	lsl	x1, x2, #4
    8b2c:	ldr	x0, [x19, #16]
    8b30:	sub	x1, x1, #0x10
    8b34:	add	x4, x0, x1
    8b38:	ldr	x20, [x0, x1]
    8b3c:	ldr	x1, [x20, #40]
    8b40:	cbz	x1, 8b78 <PySequence_Fast@plt+0x4938>
    8b44:	ldr	x5, [x1, #8]
    8b48:	ldr	x3, [x4, #8]
    8b4c:	cmp	x5, x3
    8b50:	b.le	8b78 <PySequence_Fast@plt+0x4938>
    8b54:	ldr	x2, [x1, #24]
    8b58:	add	x1, x3, #0x1
    8b5c:	ldr	x20, [x2, x3, lsl #3]
    8b60:	str	x1, [x4, #8]
    8b64:	ldr	x1, [x20]
    8b68:	add	x1, x1, #0x1
    8b6c:	str	x1, [x20]
    8b70:	ldr	x2, [x19, #24]
    8b74:	b	8a68 <PySequence_Fast@plt+0x4828>
    8b78:	ldr	w0, [x19, #56]
    8b7c:	sub	x2, x2, #0x1
    8b80:	str	x2, [x19, #24]
    8b84:	cmp	w0, #0x0
    8b88:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    8b8c:	b.ne	8c28 <PySequence_Fast@plt+0x49e8>  // b.any
    8b90:	ldr	x0, [x20]
    8b94:	sub	x0, x0, #0x1
    8b98:	str	x0, [x20]
    8b9c:	cbnz	x0, 8a50 <PySequence_Fast@plt+0x4810>
    8ba0:	mov	x0, x20
    8ba4:	bl	3d70 <_Py_Dealloc@plt>
    8ba8:	b	8a50 <PySequence_Fast@plt+0x4810>
    8bac:	add	x0, x20, #0x18
    8bb0:	bl	8698 <PySequence_Fast@plt+0x4458>
    8bb4:	mov	x24, x0
    8bb8:	cbz	x24, 8c74 <PySequence_Fast@plt+0x4a34>
    8bbc:	cmp	x24, x21
    8bc0:	b.eq	8b90 <PySequence_Fast@plt+0x4950>  // b.none
    8bc4:	ldr	x0, [x24]
    8bc8:	add	x0, x0, #0x1
    8bcc:	str	x0, [x24]
    8bd0:	ldr	x0, [x20]
    8bd4:	sub	x0, x0, #0x1
    8bd8:	str	x0, [x20]
    8bdc:	cbz	x0, 8c0c <PySequence_Fast@plt+0x49cc>
    8be0:	mov	x0, x24
    8be4:	bl	4050 <PyObject_IsTrue@plt>
    8be8:	mov	w20, w0
    8bec:	cmp	w0, #0x0
    8bf0:	b.gt	8c94 <PySequence_Fast@plt+0x4a54>
    8bf4:	ldr	x0, [x24]
    8bf8:	sub	x0, x0, #0x1
    8bfc:	str	x0, [x24]
    8c00:	cbz	x0, 8c18 <PySequence_Fast@plt+0x49d8>
    8c04:	cbz	w20, 8a50 <PySequence_Fast@plt+0x4810>
    8c08:	b	8afc <PySequence_Fast@plt+0x48bc>
    8c0c:	mov	x0, x20
    8c10:	bl	3d70 <_Py_Dealloc@plt>
    8c14:	b	8be0 <PySequence_Fast@plt+0x49a0>
    8c18:	mov	x0, x24
    8c1c:	bl	3d70 <_Py_Dealloc@plt>
    8c20:	cbz	w20, 8a50 <PySequence_Fast@plt+0x4810>
    8c24:	b	8afc <PySequence_Fast@plt+0x48bc>
    8c28:	add	x0, x20, #0x20
    8c2c:	bl	8698 <PySequence_Fast@plt+0x4458>
    8c30:	mov	x24, x0
    8c34:	b	8bb8 <PySequence_Fast@plt+0x4978>
    8c38:	ldr	x0, [x20]
    8c3c:	sub	x0, x0, #0x1
    8c40:	str	x0, [x20]
    8c44:	cbz	x0, 8c54 <PySequence_Fast@plt+0x4a14>
    8c48:	mov	x20, #0x0                   	// #0
    8c4c:	bl	3d80 <PyErr_NoMemory@plt>
    8c50:	b	8b00 <PySequence_Fast@plt+0x48c0>
    8c54:	mov	x0, x20
    8c58:	bl	3d70 <_Py_Dealloc@plt>
    8c5c:	b	8c48 <PySequence_Fast@plt+0x4a08>
    8c60:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    8c64:	ldr	x0, [x0, #4016]
    8c68:	ldr	x0, [x0]
    8c6c:	bl	3e40 <PyErr_SetNone@plt>
    8c70:	b	8b00 <PySequence_Fast@plt+0x48c0>
    8c74:	ldr	x0, [x20]
    8c78:	sub	x0, x0, #0x1
    8c7c:	str	x0, [x20]
    8c80:	cbnz	x0, 8afc <PySequence_Fast@plt+0x48bc>
    8c84:	mov	x0, x20
    8c88:	mov	x20, #0x0                   	// #0
    8c8c:	bl	3d70 <_Py_Dealloc@plt>
    8c90:	b	8b00 <PySequence_Fast@plt+0x48c0>
    8c94:	mov	x20, x24
    8c98:	b	8b00 <PySequence_Fast@plt+0x48c0>
    8c9c:	nop
    8ca0:	cbz	x1, 8cec <PySequence_Fast@plt+0x4aac>
    8ca4:	ldr	x3, [x1]
    8ca8:	mov	x2, x0
    8cac:	ldr	x0, [x0, #16]
    8cb0:	add	x3, x3, #0x1
    8cb4:	str	x3, [x1]
    8cb8:	str	x1, [x2, #16]
    8cbc:	ldr	x1, [x0]
    8cc0:	sub	x1, x1, #0x1
    8cc4:	str	x1, [x0]
    8cc8:	cbz	x1, 8cd4 <PySequence_Fast@plt+0x4a94>
    8ccc:	mov	w0, #0x0                   	// #0
    8cd0:	ret
    8cd4:	stp	x29, x30, [sp, #-16]!
    8cd8:	mov	x29, sp
    8cdc:	bl	3d70 <_Py_Dealloc@plt>
    8ce0:	mov	w0, #0x0                   	// #0
    8ce4:	ldp	x29, x30, [sp], #16
    8ce8:	ret
    8cec:	b	8370 <PySequence_Fast@plt+0x4130>
    8cf0:	stp	x29, x30, [sp, #-16]!
    8cf4:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    8cf8:	mov	x29, sp
    8cfc:	ldr	x0, [x0, #4008]
    8d00:	ldr	x0, [x0]
    8d04:	bl	3e50 <PyErr_ExceptionMatches@plt>
    8d08:	cbz	w0, 8d1c <PySequence_Fast@plt+0x4adc>
    8d0c:	bl	3ef0 <PyErr_Clear@plt>
    8d10:	mov	w0, #0x0                   	// #0
    8d14:	ldp	x29, x30, [sp], #16
    8d18:	ret
    8d1c:	mov	w0, #0xffffffff            	// #-1
    8d20:	b	8d14 <PySequence_Fast@plt+0x4ad4>
    8d24:	nop
    8d28:	sub	sp, sp, #0x70
    8d2c:	mov	x3, x1
    8d30:	stp	x29, x30, [sp, #16]
    8d34:	add	x29, sp, #0x10
    8d38:	stp	x19, x20, [sp, #32]
    8d3c:	mov	x19, x0
    8d40:	stp	x21, x22, [sp, #48]
    8d44:	ldr	x21, [x1, #16]
    8d48:	cbz	x2, 8d94 <PySequence_Fast@plt+0x4b54>
    8d4c:	ldr	x0, [x2, #16]
    8d50:	add	x1, sp, #0x60
    8d54:	str	x1, [sp]
    8d58:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    8d5c:	add	x4, x4, #0x9b8
    8d60:	add	x20, x21, x0
    8d64:	add	x4, x4, #0x328
    8d68:	add	x0, x3, #0x18
    8d6c:	mov	x1, x21
    8d70:	mov	w7, #0x0                   	// #0
    8d74:	mov	w6, #0x0                   	// #0
    8d78:	mov	w5, #0x0                   	// #0
    8d7c:	mov	x3, #0x0                   	// #0
    8d80:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8d84:	cbz	x0, 8e38 <PySequence_Fast@plt+0x4bf8>
    8d88:	cbz	x20, 8e40 <PySequence_Fast@plt+0x4c00>
    8d8c:	mov	x21, x20
    8d90:	b	8dcc <PySequence_Fast@plt+0x4b8c>
    8d94:	cbz	x21, 8e40 <PySequence_Fast@plt+0x4c00>
    8d98:	add	x0, sp, #0x60
    8d9c:	str	x0, [sp]
    8da0:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    8da4:	add	x4, x4, #0x9b8
    8da8:	add	x0, x3, #0x18
    8dac:	add	x4, x4, #0x328
    8db0:	mov	x1, x21
    8db4:	mov	w7, #0x0                   	// #0
    8db8:	mov	w6, #0x0                   	// #0
    8dbc:	mov	w5, #0x0                   	// #0
    8dc0:	mov	x3, #0x0                   	// #0
    8dc4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    8dc8:	cbz	x0, 8e38 <PySequence_Fast@plt+0x4bf8>
    8dcc:	ldr	x20, [x0]
    8dd0:	cbz	x20, 8ddc <PySequence_Fast@plt+0x4b9c>
    8dd4:	cmp	x21, #0x1
    8dd8:	b.eq	90c0 <PySequence_Fast@plt+0x4e80>  // b.none
    8ddc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    8de0:	ldr	x0, [x0, #8]
    8de4:	ldr	x1, [x1, #3976]
    8de8:	cmp	x0, x1
    8dec:	b.eq	90c0 <PySequence_Fast@plt+0x4e80>  // b.none
    8df0:	ldr	x1, [x0, #8]
    8df4:	ldr	x1, [x1, #168]
    8df8:	tbz	w1, #28, 92a8 <PySequence_Fast@plt+0x5068>
    8dfc:	add	x1, sp, #0x58
    8e00:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    8e04:	mov	x22, x0
    8e08:	cbz	x0, 8e38 <PySequence_Fast@plt+0x4bf8>
    8e0c:	bl	3c70 <strlen@plt>
    8e10:	ldr	x1, [sp, #88]
    8e14:	cmp	x0, x1
    8e18:	b.eq	8e48 <PySequence_Fast@plt+0x4c08>  // b.none
    8e1c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    8e20:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8e24:	add	x1, x1, #0xe00
    8e28:	ldr	x0, [x0, #3928]
    8e2c:	ldr	x0, [x0]
    8e30:	bl	3de0 <PyErr_SetString@plt>
    8e34:	nop
    8e38:	mov	w0, #0xffffffff            	// #-1
    8e3c:	b	90a0 <PySequence_Fast@plt+0x4e60>
    8e40:	mov	x22, #0x0                   	// #0
    8e44:	mov	x20, #0x0                   	// #0
    8e48:	bl	4080 <PyDict_New@plt>
    8e4c:	str	x0, [x19, #32]
    8e50:	cbz	x0, 8e38 <PySequence_Fast@plt+0x4bf8>
    8e54:	bl	4080 <PyDict_New@plt>
    8e58:	str	x0, [x19, #40]
    8e5c:	cbz	x0, 9280 <PySequence_Fast@plt+0x5040>
    8e60:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x14790>
    8e64:	mov	x0, x22
    8e68:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    8e6c:	add	x2, x2, #0xe50
    8e70:	ldr	x3, [x21, #1072]
    8e74:	ldr	x3, [x3, #64]
    8e78:	str	x23, [sp, #64]
    8e7c:	adrp	x23, 20000 <PyInit__elementtree@@Base+0x13790>
    8e80:	add	x1, x23, #0x320
    8e84:	add	x1, x1, #0x340
    8e88:	blr	x3
    8e8c:	str	x0, [x19, #16]
    8e90:	cbz	x0, 9238 <PySequence_Fast@plt+0x4ff8>
    8e94:	ldr	x1, [x21, #1072]
    8e98:	ldr	x2, [x1, #168]
    8e9c:	cbz	x2, 8eb0 <PySequence_Fast@plt+0x4c70>
    8ea0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    8ea4:	ldr	x1, [x1, #4040]
    8ea8:	ldr	x1, [x1, #16]
    8eac:	blr	x2
    8eb0:	cbz	x20, 90c8 <PySequence_Fast@plt+0x4e88>
    8eb4:	ldr	x0, [x20]
    8eb8:	add	x0, x0, #0x1
    8ebc:	str	x0, [x20]
    8ec0:	str	x20, [x19, #24]
    8ec4:	mov	x0, x20
    8ec8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8ecc:	add	x1, x1, #0xe58
    8ed0:	bl	3d00 <PyObject_GetAttrString@plt>
    8ed4:	str	x0, [x19, #48]
    8ed8:	cbz	x0, 912c <PySequence_Fast@plt+0x4eec>
    8edc:	mov	x0, x20
    8ee0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8ee4:	add	x1, x1, #0xe68
    8ee8:	bl	3d00 <PyObject_GetAttrString@plt>
    8eec:	str	x0, [x19, #56]
    8ef0:	cbz	x0, 9144 <PySequence_Fast@plt+0x4f04>
    8ef4:	mov	x0, x20
    8ef8:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8efc:	add	x1, x1, #0xe70
    8f00:	bl	3d00 <PyObject_GetAttrString@plt>
    8f04:	str	x0, [x19, #64]
    8f08:	cbz	x0, 9168 <PySequence_Fast@plt+0x4f28>
    8f0c:	mov	x0, x20
    8f10:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f14:	add	x1, x1, #0xe78
    8f18:	bl	3d00 <PyObject_GetAttrString@plt>
    8f1c:	str	x0, [x19, #72]
    8f20:	cbz	x0, 9188 <PySequence_Fast@plt+0x4f48>
    8f24:	mov	x0, x20
    8f28:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f2c:	add	x1, x1, #0xe80
    8f30:	bl	3d00 <PyObject_GetAttrString@plt>
    8f34:	str	x0, [x19, #80]
    8f38:	cbz	x0, 91a8 <PySequence_Fast@plt+0x4f68>
    8f3c:	mov	x0, x20
    8f40:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f44:	add	x1, x1, #0xe88
    8f48:	bl	3d00 <PyObject_GetAttrString@plt>
    8f4c:	str	x0, [x19, #88]
    8f50:	cbz	x0, 91c8 <PySequence_Fast@plt+0x4f88>
    8f54:	mov	x0, x20
    8f58:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f5c:	add	x1, x1, #0xe90
    8f60:	bl	3d00 <PyObject_GetAttrString@plt>
    8f64:	str	x0, [x19, #96]
    8f68:	cbz	x0, 91e8 <PySequence_Fast@plt+0x4fa8>
    8f6c:	mov	x0, x20
    8f70:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f74:	add	x1, x1, #0xe98
    8f78:	bl	3d00 <PyObject_GetAttrString@plt>
    8f7c:	str	x0, [x19, #112]
    8f80:	cbz	x0, 9208 <PySequence_Fast@plt+0x4fc8>
    8f84:	mov	x0, x20
    8f88:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8f8c:	add	x1, x1, #0xea0
    8f90:	bl	3d00 <PyObject_GetAttrString@plt>
    8f94:	str	x0, [x19, #104]
    8f98:	cbz	x0, 9228 <PySequence_Fast@plt+0x4fe8>
    8f9c:	ldr	x2, [x21, #1072]
    8fa0:	mov	x1, x19
    8fa4:	ldr	x0, [x19, #16]
    8fa8:	ldr	x2, [x2, #136]
    8fac:	blr	x2
    8fb0:	ldr	x0, [x19, #48]
    8fb4:	cbz	x0, 90b4 <PySequence_Fast@plt+0x4e74>
    8fb8:	ldr	x1, [x21, #1072]
    8fbc:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    8fc0:	ldr	x0, [x19, #16]
    8fc4:	add	x2, x2, #0x318
    8fc8:	ldr	x3, [x1, #112]
    8fcc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    8fd0:	add	x1, x1, #0x5d0
    8fd4:	blr	x3
    8fd8:	ldr	x1, [x21, #1072]
    8fdc:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    8fe0:	ldr	x0, [x19, #16]
    8fe4:	add	x2, x2, #0xf00
    8fe8:	ldr	x3, [x1, #104]
    8fec:	adrp	x1, a000 <PySequence_Fast@plt+0x5dc0>
    8ff0:	add	x1, x1, #0x740
    8ff4:	blr	x3
    8ff8:	ldr	x2, [x21, #1072]
    8ffc:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    9000:	ldr	x0, [x19, #16]
    9004:	add	x1, x1, #0xd18
    9008:	ldr	x2, [x2, #96]
    900c:	blr	x2
    9010:	ldr	x2, [x21, #1072]
    9014:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9018:	ldr	x0, [x19, #16]
    901c:	add	x1, x1, #0x1e0
    9020:	ldr	x2, [x2, #80]
    9024:	blr	x2
    9028:	ldr	x0, [x19, #88]
    902c:	cbz	x0, 9048 <PySequence_Fast@plt+0x4e08>
    9030:	ldr	x2, [x21, #1072]
    9034:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9038:	ldr	x0, [x19, #16]
    903c:	add	x1, x1, #0x470
    9040:	ldr	x2, [x2, #88]
    9044:	blr	x2
    9048:	ldr	x2, [x19, #96]
    904c:	ldr	x1, [x21, #1072]
    9050:	ldr	x0, [x19, #16]
    9054:	cbz	x2, 9070 <PySequence_Fast@plt+0x4e30>
    9058:	ldr	x2, [x1, #120]
    905c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9060:	add	x1, x1, #0x8
    9064:	blr	x2
    9068:	ldr	x1, [x21, #1072]
    906c:	ldr	x0, [x19, #16]
    9070:	ldr	x2, [x1, #144]
    9074:	adrp	x1, 8000 <PySequence_Fast@plt+0x3dc0>
    9078:	add	x1, x1, #0x120
    907c:	blr	x2
    9080:	ldr	x1, [x21, #1072]
    9084:	mov	x2, #0x0                   	// #0
    9088:	ldr	x0, [x19, #16]
    908c:	ldr	x3, [x1, #128]
    9090:	ldr	x1, [x1, #160]
    9094:	blr	x3
    9098:	ldr	x23, [sp, #64]
    909c:	mov	w0, #0x0                   	// #0
    90a0:	ldp	x29, x30, [sp, #16]
    90a4:	ldp	x19, x20, [sp, #32]
    90a8:	ldp	x21, x22, [sp, #48]
    90ac:	add	sp, sp, #0x70
    90b0:	ret
    90b4:	ldr	x0, [x19, #56]
    90b8:	cbnz	x0, 8fb8 <PySequence_Fast@plt+0x4d78>
    90bc:	b	8fd8 <PySequence_Fast@plt+0x4d98>
    90c0:	mov	x22, #0x0                   	// #0
    90c4:	b	8e48 <PySequence_Fast@plt+0x4c08>
    90c8:	add	x0, x23, #0x320
    90cc:	mov	x2, #0x0                   	// #0
    90d0:	add	x0, x0, #0x358
    90d4:	mov	x1, #0x0                   	// #0
    90d8:	bl	4bc0 <PySequence_Fast@plt+0x980>
    90dc:	mov	x20, x0
    90e0:	cbnz	x0, 8ec0 <PySequence_Fast@plt+0x4c80>
    90e4:	ldr	x0, [x19, #32]
    90e8:	cbz	x0, 9100 <PySequence_Fast@plt+0x4ec0>
    90ec:	ldr	x1, [x0]
    90f0:	str	xzr, [x19, #32]
    90f4:	sub	x1, x1, #0x1
    90f8:	str	x1, [x0]
    90fc:	cbz	x1, 92e0 <PySequence_Fast@plt+0x50a0>
    9100:	ldr	x0, [x19, #40]
    9104:	cbz	x0, 9138 <PySequence_Fast@plt+0x4ef8>
    9108:	ldr	x1, [x0]
    910c:	str	xzr, [x19, #40]
    9110:	sub	x1, x1, #0x1
    9114:	str	x1, [x0]
    9118:	cbnz	x1, 9138 <PySequence_Fast@plt+0x4ef8>
    911c:	bl	3d70 <_Py_Dealloc@plt>
    9120:	mov	w0, #0xffffffff            	// #-1
    9124:	ldr	x23, [sp, #64]
    9128:	b	90a0 <PySequence_Fast@plt+0x4e60>
    912c:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    9130:	cbz	w0, 8edc <PySequence_Fast@plt+0x4c9c>
    9134:	nop
    9138:	ldr	x23, [sp, #64]
    913c:	mov	w0, #0xffffffff            	// #-1
    9140:	b	90a0 <PySequence_Fast@plt+0x4e60>
    9144:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    9148:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    914c:	mov	x0, x20
    9150:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9154:	add	x1, x1, #0xe70
    9158:	bl	3d00 <PyObject_GetAttrString@plt>
    915c:	str	x0, [x19, #64]
    9160:	cbnz	x0, 8f0c <PySequence_Fast@plt+0x4ccc>
    9164:	nop
    9168:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    916c:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    9170:	mov	x0, x20
    9174:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9178:	add	x1, x1, #0xe78
    917c:	bl	3d00 <PyObject_GetAttrString@plt>
    9180:	str	x0, [x19, #72]
    9184:	cbnz	x0, 8f24 <PySequence_Fast@plt+0x4ce4>
    9188:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    918c:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    9190:	mov	x0, x20
    9194:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9198:	add	x1, x1, #0xe80
    919c:	bl	3d00 <PyObject_GetAttrString@plt>
    91a0:	str	x0, [x19, #80]
    91a4:	cbnz	x0, 8f3c <PySequence_Fast@plt+0x4cfc>
    91a8:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    91ac:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    91b0:	mov	x0, x20
    91b4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    91b8:	add	x1, x1, #0xe88
    91bc:	bl	3d00 <PyObject_GetAttrString@plt>
    91c0:	str	x0, [x19, #88]
    91c4:	cbnz	x0, 8f54 <PySequence_Fast@plt+0x4d14>
    91c8:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    91cc:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    91d0:	mov	x0, x20
    91d4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    91d8:	add	x1, x1, #0xe90
    91dc:	bl	3d00 <PyObject_GetAttrString@plt>
    91e0:	str	x0, [x19, #96]
    91e4:	cbnz	x0, 8f6c <PySequence_Fast@plt+0x4d2c>
    91e8:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    91ec:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    91f0:	mov	x0, x20
    91f4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    91f8:	add	x1, x1, #0xe98
    91fc:	bl	3d00 <PyObject_GetAttrString@plt>
    9200:	str	x0, [x19, #112]
    9204:	cbnz	x0, 8f84 <PySequence_Fast@plt+0x4d44>
    9208:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    920c:	cbnz	w0, 9138 <PySequence_Fast@plt+0x4ef8>
    9210:	mov	x0, x20
    9214:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9218:	add	x1, x1, #0xea0
    921c:	bl	3d00 <PyObject_GetAttrString@plt>
    9220:	str	x0, [x19, #104]
    9224:	cbnz	x0, 8f9c <PySequence_Fast@plt+0x4d5c>
    9228:	bl	8cf0 <PySequence_Fast@plt+0x4ab0>
    922c:	cbz	w0, 8f9c <PySequence_Fast@plt+0x4d5c>
    9230:	ldr	x23, [sp, #64]
    9234:	b	913c <PySequence_Fast@plt+0x4efc>
    9238:	ldr	x0, [x19, #32]
    923c:	cbz	x0, 9254 <PySequence_Fast@plt+0x5014>
    9240:	ldr	x1, [x0]
    9244:	str	xzr, [x19, #32]
    9248:	sub	x1, x1, #0x1
    924c:	str	x1, [x0]
    9250:	cbz	x1, 92d0 <PySequence_Fast@plt+0x5090>
    9254:	ldr	x0, [x19, #40]
    9258:	cbz	x0, 9270 <PySequence_Fast@plt+0x5030>
    925c:	ldr	x1, [x0]
    9260:	str	xzr, [x19, #40]
    9264:	sub	x1, x1, #0x1
    9268:	str	x1, [x0]
    926c:	cbz	x1, 92d8 <PySequence_Fast@plt+0x5098>
    9270:	bl	3d80 <PyErr_NoMemory@plt>
    9274:	mov	w0, #0xffffffff            	// #-1
    9278:	ldr	x23, [sp, #64]
    927c:	b	90a0 <PySequence_Fast@plt+0x4e60>
    9280:	ldr	x0, [x19, #32]
    9284:	cbz	x0, 8e38 <PySequence_Fast@plt+0x4bf8>
    9288:	ldr	x1, [x0]
    928c:	str	xzr, [x19, #32]
    9290:	sub	x1, x1, #0x1
    9294:	str	x1, [x0]
    9298:	cbnz	x1, 8e38 <PySequence_Fast@plt+0x4bf8>
    929c:	bl	3d70 <_Py_Dealloc@plt>
    92a0:	mov	w0, #0xffffffff            	// #-1
    92a4:	b	90a0 <PySequence_Fast@plt+0x4e60>
    92a8:	mov	x3, x0
    92ac:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    92b0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    92b4:	add	x2, x2, #0xe18
    92b8:	add	x1, x1, #0xe28
    92bc:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    92c0:	add	x0, x0, #0xe40
    92c4:	bl	3ed0 <_PyArg_BadArgument@plt>
    92c8:	mov	w0, #0xffffffff            	// #-1
    92cc:	b	90a0 <PySequence_Fast@plt+0x4e60>
    92d0:	bl	3d70 <_Py_Dealloc@plt>
    92d4:	b	9254 <PySequence_Fast@plt+0x5014>
    92d8:	bl	3d70 <_Py_Dealloc@plt>
    92dc:	b	9270 <PySequence_Fast@plt+0x5030>
    92e0:	bl	3d70 <_Py_Dealloc@plt>
    92e4:	b	9100 <PySequence_Fast@plt+0x4ec0>
    92e8:	stp	x29, x30, [sp, #-96]!
    92ec:	mov	x29, sp
    92f0:	stp	x19, x20, [sp, #16]
    92f4:	mov	x19, x2
    92f8:	sub	x2, x2, #0x1
    92fc:	stp	x21, x22, [sp, #32]
    9300:	mov	x20, x1
    9304:	cmp	x2, #0x1
    9308:	stp	x23, x24, [sp, #48]
    930c:	mov	x23, x0
    9310:	b.hi	9660 <PySequence_Fast@plt+0x5420>  // b.pmore
    9314:	cmp	x19, #0x1
    9318:	b.le	971c <PySequence_Fast@plt+0x54dc>
    931c:	ldr	x21, [x20, #8]
    9320:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    9324:	ldr	x19, [x23, #24]
    9328:	add	x0, x0, #0x320
    932c:	add	x0, x0, #0x358
    9330:	ldr	x1, [x19, #8]
    9334:	cmp	x1, x0
    9338:	b.ne	96e8 <PySequence_Fast@plt+0x54a8>  // b.any
    933c:	ldr	x0, [x20]
    9340:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9344:	add	x1, x1, #0xcf8
    9348:	bl	3d00 <PyObject_GetAttrString@plt>
    934c:	cbz	x0, 967c <PySequence_Fast@plt+0x543c>
    9350:	ldr	x1, [x19, #96]
    9354:	str	x0, [x19, #96]
    9358:	cbz	x1, 936c <PySequence_Fast@plt+0x512c>
    935c:	ldr	x0, [x1]
    9360:	sub	x0, x0, #0x1
    9364:	str	x0, [x1]
    9368:	cbz	x0, 9778 <PySequence_Fast@plt+0x5538>
    936c:	ldr	x0, [x19, #104]
    9370:	cbz	x0, 9388 <PySequence_Fast@plt+0x5148>
    9374:	ldr	x1, [x0]
    9378:	str	xzr, [x19, #104]
    937c:	sub	x1, x1, #0x1
    9380:	str	x1, [x0]
    9384:	cbz	x1, 978c <PySequence_Fast@plt+0x554c>
    9388:	ldr	x0, [x19, #112]
    938c:	cbz	x0, 93a4 <PySequence_Fast@plt+0x5164>
    9390:	ldr	x1, [x0]
    9394:	str	xzr, [x19, #112]
    9398:	sub	x1, x1, #0x1
    939c:	str	x1, [x0]
    93a0:	cbz	x1, 979c <PySequence_Fast@plt+0x555c>
    93a4:	ldr	x0, [x19, #120]
    93a8:	cbz	x0, 93c0 <PySequence_Fast@plt+0x5180>
    93ac:	ldr	x1, [x0]
    93b0:	str	xzr, [x19, #120]
    93b4:	sub	x1, x1, #0x1
    93b8:	str	x1, [x0]
    93bc:	cbz	x1, 97ac <PySequence_Fast@plt+0x556c>
    93c0:	ldr	x0, [x19, #128]
    93c4:	cbz	x0, 93dc <PySequence_Fast@plt+0x519c>
    93c8:	ldr	x1, [x0]
    93cc:	str	xzr, [x19, #128]
    93d0:	sub	x1, x1, #0x1
    93d4:	str	x1, [x0]
    93d8:	cbz	x1, 97bc <PySequence_Fast@plt+0x557c>
    93dc:	ldr	x0, [x19, #136]
    93e0:	cbz	x0, 93f8 <PySequence_Fast@plt+0x51b8>
    93e4:	ldr	x1, [x0]
    93e8:	str	xzr, [x19, #136]
    93ec:	sub	x1, x1, #0x1
    93f0:	str	x1, [x0]
    93f4:	cbz	x1, 97cc <PySequence_Fast@plt+0x558c>
    93f8:	ldr	x0, [x19, #144]
    93fc:	cbz	x0, 9414 <PySequence_Fast@plt+0x51d4>
    9400:	ldr	x1, [x0]
    9404:	str	xzr, [x19, #144]
    9408:	sub	x1, x1, #0x1
    940c:	str	x1, [x0]
    9410:	cbz	x1, 97dc <PySequence_Fast@plt+0x559c>
    9414:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9418:	ldr	x0, [x0, #3976]
    941c:	cmp	x21, x0
    9420:	b.eq	97f0 <PySequence_Fast@plt+0x55b0>  // b.none
    9424:	mov	x0, x21
    9428:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    942c:	add	x1, x1, #0xf00
    9430:	bl	4240 <PySequence_Fast@plt>
    9434:	mov	x21, x0
    9438:	cbz	x0, 967c <PySequence_Fast@plt+0x543c>
    943c:	ldr	x0, [x0, #16]
    9440:	stp	x27, x28, [sp, #80]
    9444:	cmp	x0, #0x0
    9448:	b.le	958c <PySequence_Fast@plt+0x534c>
    944c:	adrp	x24, c000 <PySequence_Fast@plt+0x7dc0>
    9450:	add	x28, x21, #0x18
    9454:	add	x24, x24, #0xe80
    9458:	mov	x22, #0x0                   	// #0
    945c:	stp	x25, x26, [sp, #64]
    9460:	adrp	x25, c000 <PySequence_Fast@plt+0x7dc0>
    9464:	add	x25, x25, #0xe70
    9468:	b	94d0 <PySequence_Fast@plt+0x5290>
    946c:	ldr	x0, [x21, #24]
    9470:	ldr	x20, [x0, x22, lsl #3]
    9474:	ldr	x0, [x20, #8]
    9478:	ldr	x0, [x0, #168]
    947c:	tbnz	w0, #28, 94ec <PySequence_Fast@plt+0x52ac>
    9480:	tbz	w0, #27, 94fc <PySequence_Fast@plt+0x52bc>
    9484:	add	x27, x20, #0x20
    9488:	ldr	x26, [x20]
    948c:	mov	x1, x25
    9490:	mov	x0, x27
    9494:	add	x3, x26, #0x1
    9498:	str	x3, [x20]
    949c:	bl	3ff0 <strcmp@plt>
    94a0:	cbnz	w0, 9548 <PySequence_Fast@plt+0x5308>
    94a4:	ldr	x0, [x19, #104]
    94a8:	str	x20, [x19, #104]
    94ac:	cbz	x0, 94c0 <PySequence_Fast@plt+0x5280>
    94b0:	ldr	x1, [x0]
    94b4:	sub	x1, x1, #0x1
    94b8:	str	x1, [x0]
    94bc:	cbz	x1, 9574 <PySequence_Fast@plt+0x5334>
    94c0:	ldr	x0, [x21, #16]
    94c4:	add	x22, x22, #0x1
    94c8:	cmp	x22, x0
    94cc:	b.ge	9588 <PySequence_Fast@plt+0x5348>  // b.tcont
    94d0:	ldr	x0, [x21, #8]
    94d4:	ldr	x0, [x0, #168]
    94d8:	tbnz	w0, #25, 946c <PySequence_Fast@plt+0x522c>
    94dc:	ldr	x20, [x28, x22, lsl #3]
    94e0:	ldr	x0, [x20, #8]
    94e4:	ldr	x0, [x0, #168]
    94e8:	tbz	w0, #28, 9480 <PySequence_Fast@plt+0x5240>
    94ec:	mov	x0, x20
    94f0:	bl	40c0 <PyUnicode_AsUTF8@plt>
    94f4:	mov	x27, x0
    94f8:	cbnz	x0, 9488 <PySequence_Fast@plt+0x5248>
    94fc:	ldr	x0, [x21]
    9500:	sub	x0, x0, #0x1
    9504:	str	x0, [x21]
    9508:	cbz	x0, 9824 <PySequence_Fast@plt+0x55e4>
    950c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9510:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9514:	add	x1, x1, #0xf20
    9518:	mov	x21, #0x0                   	// #0
    951c:	ldr	x0, [x0, #3928]
    9520:	ldr	x0, [x0]
    9524:	bl	4180 <PyErr_Format@plt>
    9528:	ldp	x25, x26, [sp, #64]
    952c:	ldp	x27, x28, [sp, #80]
    9530:	mov	x0, x21
    9534:	ldp	x19, x20, [sp, #16]
    9538:	ldp	x21, x22, [sp, #32]
    953c:	ldp	x23, x24, [sp, #48]
    9540:	ldp	x29, x30, [sp], #96
    9544:	ret
    9548:	mov	x1, x24
    954c:	mov	x0, x27
    9550:	bl	3ff0 <strcmp@plt>
    9554:	cbnz	w0, 95d0 <PySequence_Fast@plt+0x5390>
    9558:	ldr	x0, [x19, #112]
    955c:	str	x20, [x19, #112]
    9560:	cbz	x0, 94c0 <PySequence_Fast@plt+0x5280>
    9564:	ldr	x1, [x0]
    9568:	sub	x1, x1, #0x1
    956c:	str	x1, [x0]
    9570:	cbnz	x1, 94c0 <PySequence_Fast@plt+0x5280>
    9574:	bl	3d70 <_Py_Dealloc@plt>
    9578:	add	x22, x22, #0x1
    957c:	ldr	x0, [x21, #16]
    9580:	cmp	x22, x0
    9584:	b.lt	94d0 <PySequence_Fast@plt+0x5290>  // b.tstop
    9588:	ldp	x25, x26, [sp, #64]
    958c:	ldr	x0, [x21]
    9590:	sub	x0, x0, #0x1
    9594:	str	x0, [x21]
    9598:	cbz	x0, 9880 <PySequence_Fast@plt+0x5640>
    959c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    95a0:	ldp	x19, x20, [sp, #16]
    95a4:	ldr	x27, [x0, #3976]
    95a8:	ldp	x23, x24, [sp, #48]
    95ac:	mov	x21, x27
    95b0:	ldr	x0, [x27]
    95b4:	add	x0, x0, #0x1
    95b8:	str	x0, [x27]
    95bc:	mov	x0, x21
    95c0:	ldp	x21, x22, [sp, #32]
    95c4:	ldp	x27, x28, [sp, #80]
    95c8:	ldp	x29, x30, [sp], #96
    95cc:	ret
    95d0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    95d4:	mov	x0, x27
    95d8:	add	x1, x1, #0xf38
    95dc:	bl	3ff0 <strcmp@plt>
    95e0:	cbnz	w0, 9628 <PySequence_Fast@plt+0x53e8>
    95e4:	ldr	x0, [x19, #120]
    95e8:	str	x20, [x19, #120]
    95ec:	cbz	x0, 9600 <PySequence_Fast@plt+0x53c0>
    95f0:	ldr	x1, [x0]
    95f4:	sub	x1, x1, #0x1
    95f8:	str	x1, [x0]
    95fc:	cbz	x1, 9658 <PySequence_Fast@plt+0x5418>
    9600:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    9604:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    9608:	ldr	x0, [x23, #16]
    960c:	add	x2, x2, #0x318
    9610:	ldr	x3, [x1, #1072]
    9614:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9618:	add	x1, x1, #0x5d0
    961c:	ldr	x3, [x3, #112]
    9620:	blr	x3
    9624:	b	94c0 <PySequence_Fast@plt+0x5280>
    9628:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    962c:	mov	x0, x27
    9630:	add	x1, x1, #0xf48
    9634:	bl	3ff0 <strcmp@plt>
    9638:	cbnz	w0, 9698 <PySequence_Fast@plt+0x5458>
    963c:	ldr	x0, [x19, #128]
    9640:	str	x20, [x19, #128]
    9644:	cbz	x0, 9600 <PySequence_Fast@plt+0x53c0>
    9648:	ldr	x1, [x0]
    964c:	sub	x1, x1, #0x1
    9650:	str	x1, [x0]
    9654:	cbnz	x1, 9600 <PySequence_Fast@plt+0x53c0>
    9658:	bl	3d70 <_Py_Dealloc@plt>
    965c:	b	9600 <PySequence_Fast@plt+0x53c0>
    9660:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    9664:	mov	x1, x19
    9668:	add	x0, x0, #0xea8
    966c:	mov	x3, #0x2                   	// #2
    9670:	mov	x2, #0x1                   	// #1
    9674:	bl	3f60 <_PyArg_CheckPositional@plt>
    9678:	cbnz	w0, 9314 <PySequence_Fast@plt+0x50d4>
    967c:	mov	x21, #0x0                   	// #0
    9680:	mov	x0, x21
    9684:	ldp	x19, x20, [sp, #16]
    9688:	ldp	x21, x22, [sp, #32]
    968c:	ldp	x23, x24, [sp, #48]
    9690:	ldp	x29, x30, [sp], #96
    9694:	ret
    9698:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    969c:	mov	x0, x27
    96a0:	add	x1, x1, #0xe88
    96a4:	bl	3ff0 <strcmp@plt>
    96a8:	cbnz	w0, 9728 <PySequence_Fast@plt+0x54e8>
    96ac:	ldr	x0, [x19, #136]
    96b0:	str	x20, [x19, #136]
    96b4:	cbz	x0, 96c8 <PySequence_Fast@plt+0x5488>
    96b8:	ldr	x1, [x0]
    96bc:	sub	x1, x1, #0x1
    96c0:	str	x1, [x0]
    96c4:	cbz	x1, 9898 <PySequence_Fast@plt+0x5658>
    96c8:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x14790>
    96cc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    96d0:	ldr	x0, [x23, #16]
    96d4:	add	x1, x1, #0x470
    96d8:	ldr	x2, [x2, #1072]
    96dc:	ldr	x2, [x2, #88]
    96e0:	blr	x2
    96e4:	b	94c0 <PySequence_Fast@plt+0x5280>
    96e8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    96ec:	mov	x21, #0x0                   	// #0
    96f0:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    96f4:	add	x1, x1, #0xeb8
    96f8:	ldr	x0, [x0, #3944]
    96fc:	ldr	x0, [x0]
    9700:	bl	3de0 <PyErr_SetString@plt>
    9704:	mov	x0, x21
    9708:	ldp	x19, x20, [sp, #16]
    970c:	ldp	x21, x22, [sp, #32]
    9710:	ldp	x23, x24, [sp, #48]
    9714:	ldp	x29, x30, [sp], #96
    9718:	ret
    971c:	adrp	x21, 1f000 <PyInit__elementtree@@Base+0x12790>
    9720:	ldr	x21, [x21, #3976]
    9724:	b	9320 <PySequence_Fast@plt+0x50e0>
    9728:	ldrb	w0, [x27]
    972c:	cmp	w0, #0x70
    9730:	b.eq	9830 <PySequence_Fast@plt+0x55f0>  // b.none
    9734:	str	x26, [x20]
    9738:	cbz	x26, 988c <PySequence_Fast@plt+0x564c>
    973c:	ldr	x0, [x21]
    9740:	sub	x0, x0, #0x1
    9744:	str	x0, [x21]
    9748:	cbz	x0, 98a8 <PySequence_Fast@plt+0x5668>
    974c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9750:	mov	x2, x27
    9754:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9758:	mov	x21, #0x0                   	// #0
    975c:	ldr	x0, [x0, #3928]
    9760:	add	x1, x1, #0xf50
    9764:	ldr	x0, [x0]
    9768:	bl	4180 <PyErr_Format@plt>
    976c:	ldp	x25, x26, [sp, #64]
    9770:	ldp	x27, x28, [sp, #80]
    9774:	b	9530 <PySequence_Fast@plt+0x52f0>
    9778:	mov	x0, x1
    977c:	bl	3d70 <_Py_Dealloc@plt>
    9780:	ldr	x0, [x19, #104]
    9784:	cbnz	x0, 9374 <PySequence_Fast@plt+0x5134>
    9788:	b	9388 <PySequence_Fast@plt+0x5148>
    978c:	bl	3d70 <_Py_Dealloc@plt>
    9790:	ldr	x0, [x19, #112]
    9794:	cbnz	x0, 9390 <PySequence_Fast@plt+0x5150>
    9798:	b	93a4 <PySequence_Fast@plt+0x5164>
    979c:	bl	3d70 <_Py_Dealloc@plt>
    97a0:	ldr	x0, [x19, #120]
    97a4:	cbnz	x0, 93ac <PySequence_Fast@plt+0x516c>
    97a8:	b	93c0 <PySequence_Fast@plt+0x5180>
    97ac:	bl	3d70 <_Py_Dealloc@plt>
    97b0:	ldr	x0, [x19, #128]
    97b4:	cbnz	x0, 93c8 <PySequence_Fast@plt+0x5188>
    97b8:	b	93dc <PySequence_Fast@plt+0x519c>
    97bc:	bl	3d70 <_Py_Dealloc@plt>
    97c0:	ldr	x0, [x19, #136]
    97c4:	cbnz	x0, 93e4 <PySequence_Fast@plt+0x51a4>
    97c8:	b	93f8 <PySequence_Fast@plt+0x51b8>
    97cc:	bl	3d70 <_Py_Dealloc@plt>
    97d0:	ldr	x0, [x19, #144]
    97d4:	cbnz	x0, 9400 <PySequence_Fast@plt+0x51c0>
    97d8:	b	9414 <PySequence_Fast@plt+0x51d4>
    97dc:	bl	3d70 <_Py_Dealloc@plt>
    97e0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    97e4:	ldr	x0, [x0, #3976]
    97e8:	cmp	x21, x0
    97ec:	b.ne	9424 <PySequence_Fast@plt+0x51e4>  // b.any
    97f0:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    97f4:	add	x0, x0, #0xe80
    97f8:	bl	4100 <PyUnicode_FromString@plt>
    97fc:	str	x0, [x19, #112]
    9800:	ldr	x1, [x21]
    9804:	mov	x0, x21
    9808:	ldp	x19, x20, [sp, #16]
    980c:	add	x1, x1, #0x1
    9810:	str	x1, [x21]
    9814:	ldp	x21, x22, [sp, #32]
    9818:	ldp	x23, x24, [sp, #48]
    981c:	ldp	x29, x30, [sp], #96
    9820:	ret
    9824:	mov	x0, x21
    9828:	bl	3d70 <_Py_Dealloc@plt>
    982c:	b	950c <PySequence_Fast@plt+0x52cc>
    9830:	ldrb	w0, [x27, #1]
    9834:	cmp	w0, #0x69
    9838:	b.ne	9734 <PySequence_Fast@plt+0x54f4>  // b.any
    983c:	ldrb	w0, [x27, #2]
    9840:	cbnz	w0, 9734 <PySequence_Fast@plt+0x54f4>
    9844:	ldr	x0, [x19, #144]
    9848:	str	x20, [x19, #144]
    984c:	cbz	x0, 9860 <PySequence_Fast@plt+0x5620>
    9850:	ldr	x1, [x0]
    9854:	sub	x1, x1, #0x1
    9858:	str	x1, [x0]
    985c:	cbz	x1, 98a0 <PySequence_Fast@plt+0x5660>
    9860:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x14790>
    9864:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9868:	ldr	x0, [x23, #16]
    986c:	add	x1, x1, #0x8
    9870:	ldr	x2, [x2, #1072]
    9874:	ldr	x2, [x2, #120]
    9878:	blr	x2
    987c:	b	94c0 <PySequence_Fast@plt+0x5280>
    9880:	mov	x0, x21
    9884:	bl	3d70 <_Py_Dealloc@plt>
    9888:	b	959c <PySequence_Fast@plt+0x535c>
    988c:	mov	x0, x20
    9890:	bl	3d70 <_Py_Dealloc@plt>
    9894:	b	973c <PySequence_Fast@plt+0x54fc>
    9898:	bl	3d70 <_Py_Dealloc@plt>
    989c:	b	96c8 <PySequence_Fast@plt+0x5488>
    98a0:	bl	3d70 <_Py_Dealloc@plt>
    98a4:	b	9860 <PySequence_Fast@plt+0x5620>
    98a8:	mov	x0, x21
    98ac:	bl	3d70 <_Py_Dealloc@plt>
    98b0:	b	974c <PySequence_Fast@plt+0x550c>
    98b4:	nop
    98b8:	stp	x29, x30, [sp, #-32]!
    98bc:	cmp	x2, #0x2
    98c0:	mov	x29, sp
    98c4:	stp	x19, x20, [sp, #16]
    98c8:	mov	x19, x1
    98cc:	b.eq	98ec <PySequence_Fast@plt+0x56ac>  // b.none
    98d0:	mov	x1, x2
    98d4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    98d8:	mov	x3, #0x2                   	// #2
    98dc:	add	x0, x0, #0xf68
    98e0:	mov	x2, x3
    98e4:	bl	3f60 <_PyArg_CheckPositional@plt>
    98e8:	cbz	w0, 992c <PySequence_Fast@plt+0x56ec>
    98ec:	ldp	x20, x0, [x19]
    98f0:	bl	4150 <PyDict_Copy@plt>
    98f4:	mov	x19, x0
    98f8:	cbz	x0, 992c <PySequence_Fast@plt+0x56ec>
    98fc:	mov	x0, x20
    9900:	mov	x1, x19
    9904:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    9908:	mov	x20, x0
    990c:	ldr	x1, [x19]
    9910:	sub	x1, x1, #0x1
    9914:	str	x1, [x19]
    9918:	cbz	x1, 9940 <PySequence_Fast@plt+0x5700>
    991c:	mov	x0, x20
    9920:	ldp	x19, x20, [sp, #16]
    9924:	ldp	x29, x30, [sp], #32
    9928:	ret
    992c:	mov	x20, #0x0                   	// #0
    9930:	mov	x0, x20
    9934:	ldp	x19, x20, [sp, #16]
    9938:	ldp	x29, x30, [sp], #32
    993c:	ret
    9940:	mov	x0, x19
    9944:	bl	3d70 <_Py_Dealloc@plt>
    9948:	mov	x0, x20
    994c:	ldp	x19, x20, [sp, #16]
    9950:	ldp	x29, x30, [sp], #32
    9954:	ret
    9958:	sub	sp, sp, #0xa0
    995c:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    9960:	stp	x29, x30, [sp, #16]
    9964:	add	x29, sp, #0x10
    9968:	ldr	x2, [x2, #3992]
    996c:	stp	x19, x20, [sp, #32]
    9970:	mov	x20, x0
    9974:	ldr	x0, [x1, #8]
    9978:	stp	x21, x22, [sp, #48]
    997c:	mov	x19, x1
    9980:	cmp	x0, x2
    9984:	b.ne	9a08 <PySequence_Fast@plt+0x57c8>  // b.any
    9988:	mov	x0, #0x0                   	// #0
    998c:	stp	xzr, xzr, [sp, #120]
    9990:	stp	xzr, xzr, [sp, #136]
    9994:	str	xzr, [sp, #152]
    9998:	bl	3f40 <PyTuple_New@plt>
    999c:	mov	x21, x0
    99a0:	cbz	x0, 9c4c <PySequence_Fast@plt+0x5a0c>
    99a4:	add	x1, sp, #0x98
    99a8:	str	x1, [sp]
    99ac:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    99b0:	add	x3, x3, #0x9b8
    99b4:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    99b8:	add	x3, x3, #0x368
    99bc:	add	x7, sp, #0x90
    99c0:	add	x2, x2, #0xfb0
    99c4:	add	x6, sp, #0x88
    99c8:	add	x5, sp, #0x80
    99cc:	add	x4, sp, #0x78
    99d0:	mov	x1, x19
    99d4:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    99d8:	cbnz	w0, 9a40 <PySequence_Fast@plt+0x5800>
    99dc:	mov	x22, #0x0                   	// #0
    99e0:	ldr	x0, [x21]
    99e4:	sub	x0, x0, #0x1
    99e8:	str	x0, [x21]
    99ec:	cbz	x0, 9c54 <PySequence_Fast@plt+0x5a14>
    99f0:	mov	x0, x22
    99f4:	ldp	x29, x30, [sp, #16]
    99f8:	ldp	x19, x20, [sp, #32]
    99fc:	ldp	x21, x22, [sp, #48]
    9a00:	add	sp, sp, #0xa0
    9a04:	ret
    9a08:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9a0c:	mov	x2, x1
    9a10:	mov	x22, #0x0                   	// #0
    9a14:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9a18:	ldr	x0, [x0, #3944]
    9a1c:	add	x1, x1, #0xf78
    9a20:	ldr	x0, [x0]
    9a24:	bl	4180 <PyErr_Format@plt>
    9a28:	mov	x0, x22
    9a2c:	ldp	x29, x30, [sp, #16]
    9a30:	ldp	x19, x20, [sp, #32]
    9a34:	ldp	x21, x22, [sp, #48]
    9a38:	add	sp, sp, #0xa0
    9a3c:	ret
    9a40:	stp	x23, x24, [sp, #64]
    9a44:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9a48:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9a4c:	ldp	x22, x23, [sp, #120]
    9a50:	stp	x27, x28, [sp, #96]
    9a54:	add	x1, x1, #0xfb8
    9a58:	ldp	x24, x19, [sp, #136]
    9a5c:	ldr	x27, [sp, #152]
    9a60:	cbz	x22, 9ca8 <PySequence_Fast@plt+0x5a68>
    9a64:	ldr	x1, [x22]
    9a68:	ldr	x0, [x20, #16]
    9a6c:	add	x1, x1, #0x1
    9a70:	str	x1, [x22]
    9a74:	str	x22, [x20, #16]
    9a78:	cbz	x0, 9a8c <PySequence_Fast@plt+0x584c>
    9a7c:	ldr	x1, [x0]
    9a80:	sub	x1, x1, #0x1
    9a84:	str	x1, [x0]
    9a88:	cbz	x1, 9c90 <PySequence_Fast@plt+0x5a50>
    9a8c:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    9a90:	ldr	x1, [x1, #3976]
    9a94:	cbz	x24, 9ab4 <PySequence_Fast@plt+0x5874>
    9a98:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9a9c:	and	x2, x24, #0xfffffffffffffffe
    9aa0:	ldr	x1, [x24, #8]
    9aa4:	ldr	x0, [x0, #4064]
    9aa8:	cmp	x1, x0
    9aac:	cset	x1, eq  // eq = none
    9ab0:	orr	x1, x1, x2
    9ab4:	and	x3, x1, #0xfffffffffffffffe
    9ab8:	ldr	x0, [x20, #24]
    9abc:	ldr	x2, [x3]
    9ac0:	and	x0, x0, #0xfffffffffffffffe
    9ac4:	add	x2, x2, #0x1
    9ac8:	str	x2, [x3]
    9acc:	str	x1, [x20, #24]
    9ad0:	ldr	x1, [x0]
    9ad4:	sub	x1, x1, #0x1
    9ad8:	str	x1, [x0]
    9adc:	cbz	x1, 9c80 <PySequence_Fast@plt+0x5a40>
    9ae0:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    9ae4:	ldr	x1, [x1, #3976]
    9ae8:	cbz	x19, 9b08 <PySequence_Fast@plt+0x58c8>
    9aec:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9af0:	and	x2, x19, #0xfffffffffffffffe
    9af4:	ldr	x1, [x19, #8]
    9af8:	ldr	x0, [x0, #4064]
    9afc:	cmp	x1, x0
    9b00:	cset	x1, eq  // eq = none
    9b04:	orr	x1, x1, x2
    9b08:	and	x3, x1, #0xfffffffffffffffe
    9b0c:	ldr	x0, [x20, #32]
    9b10:	ldr	x2, [x3]
    9b14:	and	x0, x0, #0xfffffffffffffffe
    9b18:	add	x2, x2, #0x1
    9b1c:	str	x2, [x3]
    9b20:	str	x1, [x20, #32]
    9b24:	ldr	x1, [x0]
    9b28:	sub	x1, x1, #0x1
    9b2c:	str	x1, [x0]
    9b30:	cbz	x1, 9c88 <PySequence_Fast@plt+0x5a48>
    9b34:	orr	x0, x23, x27
    9b38:	cbz	x0, 9c28 <PySequence_Fast@plt+0x59e8>
    9b3c:	cbz	x27, 9d04 <PySequence_Fast@plt+0x5ac4>
    9b40:	ldr	x0, [x27, #8]
    9b44:	ldr	x0, [x0, #168]
    9b48:	tbz	w0, #25, 9c98 <PySequence_Fast@plt+0x5a58>
    9b4c:	ldr	x28, [x27, #16]
    9b50:	mov	x0, x20
    9b54:	ldr	x24, [x20, #40]
    9b58:	str	xzr, [x20, #40]
    9b5c:	mov	x1, x28
    9b60:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    9b64:	cbnz	w0, 9d1c <PySequence_Fast@plt+0x5adc>
    9b68:	cbz	x24, 9b84 <PySequence_Fast@plt+0x5944>
    9b6c:	ldr	x1, [x20, #40]
    9b70:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9b74:	ldr	x2, [x24]
    9b78:	ldr	x0, [x0, #3976]
    9b7c:	str	x2, [x1]
    9b80:	str	x0, [x24]
    9b84:	cmp	x28, #0x0
    9b88:	b.le	9c74 <PySequence_Fast@plt+0x5a34>
    9b8c:	stp	x25, x26, [sp, #80]
    9b90:	adrp	x25, 20000 <PyInit__elementtree@@Base+0x13790>
    9b94:	add	x25, x25, #0x320
    9b98:	mov	x19, #0x0                   	// #0
    9b9c:	nop
    9ba0:	ldr	x0, [x27, #24]
    9ba4:	lsl	x26, x19, #3
    9ba8:	mov	x1, x25
    9bac:	ldr	x22, [x0, x19, lsl #3]
    9bb0:	ldr	x0, [x22, #8]
    9bb4:	cmp	x0, x25
    9bb8:	b.eq	9bc4 <PySequence_Fast@plt+0x5984>  // b.none
    9bbc:	bl	4160 <PyType_IsSubtype@plt>
    9bc0:	cbz	w0, 9cc0 <PySequence_Fast@plt+0x5a80>
    9bc4:	ldr	x1, [x20, #40]
    9bc8:	add	x19, x19, #0x1
    9bcc:	ldr	x0, [x22]
    9bd0:	cmp	x28, x19
    9bd4:	ldr	x2, [x1, #24]
    9bd8:	add	x0, x0, #0x1
    9bdc:	str	x0, [x22]
    9be0:	str	x22, [x2, x26]
    9be4:	b.ne	9ba0 <PySequence_Fast@plt+0x5960>  // b.any
    9be8:	ldp	x25, x26, [sp, #80]
    9bec:	str	x28, [x1, #8]
    9bf0:	cbz	x23, 9c20 <PySequence_Fast@plt+0x59e0>
    9bf4:	ldr	x2, [x20, #40]
    9bf8:	ldr	x1, [x23]
    9bfc:	ldr	x0, [x2]
    9c00:	add	x1, x1, #0x1
    9c04:	str	x1, [x23]
    9c08:	str	x23, [x2]
    9c0c:	cbz	x0, 9c20 <PySequence_Fast@plt+0x59e0>
    9c10:	ldr	x1, [x0]
    9c14:	sub	x1, x1, #0x1
    9c18:	str	x1, [x0]
    9c1c:	cbz	x1, 9d40 <PySequence_Fast@plt+0x5b00>
    9c20:	mov	x0, x24
    9c24:	bl	4ed8 <PySequence_Fast@plt+0xc98>
    9c28:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9c2c:	ldp	x23, x24, [sp, #64]
    9c30:	ldr	x0, [x0, #3976]
    9c34:	ldp	x27, x28, [sp, #96]
    9c38:	mov	x22, x0
    9c3c:	ldr	x1, [x0]
    9c40:	add	x1, x1, #0x1
    9c44:	str	x1, [x0]
    9c48:	b	99e0 <PySequence_Fast@plt+0x57a0>
    9c4c:	mov	x22, #0x0                   	// #0
    9c50:	b	99f0 <PySequence_Fast@plt+0x57b0>
    9c54:	mov	x0, x21
    9c58:	bl	3d70 <_Py_Dealloc@plt>
    9c5c:	mov	x0, x22
    9c60:	ldp	x29, x30, [sp, #16]
    9c64:	ldp	x19, x20, [sp, #32]
    9c68:	ldp	x21, x22, [sp, #48]
    9c6c:	add	sp, sp, #0xa0
    9c70:	ret
    9c74:	ldr	x1, [x20, #40]
    9c78:	str	x28, [x1, #8]
    9c7c:	b	9bf0 <PySequence_Fast@plt+0x59b0>
    9c80:	bl	3d70 <_Py_Dealloc@plt>
    9c84:	b	9ae0 <PySequence_Fast@plt+0x58a0>
    9c88:	bl	3d70 <_Py_Dealloc@plt>
    9c8c:	b	9b34 <PySequence_Fast@plt+0x58f4>
    9c90:	bl	3d70 <_Py_Dealloc@plt>
    9c94:	b	9a8c <PySequence_Fast@plt+0x584c>
    9c98:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9c9c:	add	x1, x1, #0xfd0
    9ca0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9ca4:	mov	x22, #0x0                   	// #0
    9ca8:	ldr	x0, [x0, #3944]
    9cac:	ldr	x0, [x0]
    9cb0:	bl	3de0 <PyErr_SetString@plt>
    9cb4:	ldp	x23, x24, [sp, #64]
    9cb8:	ldp	x27, x28, [sp, #96]
    9cbc:	b	99e0 <PySequence_Fast@plt+0x57a0>
    9cc0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9cc4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9cc8:	ldr	x2, [x22, #8]
    9ccc:	add	x1, x1, #0xb60
    9cd0:	ldr	x0, [x0, #3944]
    9cd4:	mov	x22, #0x0                   	// #0
    9cd8:	ldr	x2, [x2, #24]
    9cdc:	ldr	x0, [x0]
    9ce0:	bl	4180 <PyErr_Format@plt>
    9ce4:	ldr	x1, [x20, #40]
    9ce8:	mov	x0, x24
    9cec:	str	x19, [x1, #8]
    9cf0:	bl	4ed8 <PySequence_Fast@plt+0xc98>
    9cf4:	ldp	x23, x24, [sp, #64]
    9cf8:	ldp	x25, x26, [sp, #80]
    9cfc:	ldp	x27, x28, [sp, #96]
    9d00:	b	99e0 <PySequence_Fast@plt+0x57a0>
    9d04:	mov	x0, x20
    9d08:	mov	x1, #0x0                   	// #0
    9d0c:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    9d10:	cbnz	w0, 9d48 <PySequence_Fast@plt+0x5b08>
    9d14:	mov	x24, #0x0                   	// #0
    9d18:	b	9bf0 <PySequence_Fast@plt+0x59b0>
    9d1c:	ldr	x0, [x20, #40]
    9d20:	cbz	x0, 9d2c <PySequence_Fast@plt+0x5aec>
    9d24:	str	xzr, [x20, #40]
    9d28:	bl	4ed8 <PySequence_Fast@plt+0xc98>
    9d2c:	mov	x22, #0x0                   	// #0
    9d30:	ldp	x27, x28, [sp, #96]
    9d34:	str	x24, [x20, #40]
    9d38:	ldp	x23, x24, [sp, #64]
    9d3c:	b	99e0 <PySequence_Fast@plt+0x57a0>
    9d40:	bl	3d70 <_Py_Dealloc@plt>
    9d44:	b	9c20 <PySequence_Fast@plt+0x59e0>
    9d48:	ldp	x23, x24, [sp, #64]
    9d4c:	ldp	x27, x28, [sp, #96]
    9d50:	b	99dc <PySequence_Fast@plt+0x579c>
    9d54:	nop
    9d58:	ldr	x0, [x0, #40]
    9d5c:	cbz	x0, 9d78 <PySequence_Fast@plt+0x5b38>
    9d60:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    9d64:	ldr	x0, [x0]
    9d68:	ldr	x1, [x1, #3976]
    9d6c:	cmp	x0, x1
    9d70:	b.eq	9d78 <PySequence_Fast@plt+0x5b38>  // b.none
    9d74:	b	40e0 <PyDict_Keys@plt>
    9d78:	mov	x0, #0x0                   	// #0
    9d7c:	b	3c50 <PyList_New@plt>
    9d80:	ldr	x0, [x0, #40]
    9d84:	cbz	x0, 9da0 <PySequence_Fast@plt+0x5b60>
    9d88:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    9d8c:	ldr	x0, [x0]
    9d90:	ldr	x1, [x1, #3976]
    9d94:	cmp	x0, x1
    9d98:	b.eq	9da0 <PySequence_Fast@plt+0x5b60>  // b.none
    9d9c:	b	3c80 <PyDict_Items@plt>
    9da0:	mov	x0, #0x0                   	// #0
    9da4:	b	3c50 <PyList_New@plt>
    9da8:	stp	x29, x30, [sp, #-48]!
    9dac:	mov	x29, sp
    9db0:	stp	x21, x22, [sp, #32]
    9db4:	mov	x21, x0
    9db8:	ldr	x0, [x1, #8]
    9dbc:	stp	x19, x20, [sp, #16]
    9dc0:	adrp	x19, 20000 <PyInit__elementtree@@Base+0x13790>
    9dc4:	add	x19, x19, #0x320
    9dc8:	mov	x20, x1
    9dcc:	cmp	x0, x19
    9dd0:	b.eq	9de0 <PySequence_Fast@plt+0x5ba0>  // b.none
    9dd4:	mov	x1, x19
    9dd8:	bl	4160 <PyType_IsSubtype@plt>
    9ddc:	cbz	w0, 9ee4 <PySequence_Fast@plt+0x5ca4>
    9de0:	ldr	x4, [x21, #40]
    9de4:	mov	x19, x4
    9de8:	cbz	x4, 9f38 <PySequence_Fast@plt+0x5cf8>
    9dec:	ldr	x0, [x4, #8]
    9df0:	mov	x19, #0x0                   	// #0
    9df4:	cmp	x0, #0x0
    9df8:	b.gt	9e24 <PySequence_Fast@plt+0x5be4>
    9dfc:	b	9f08 <PySequence_Fast@plt+0x5cc8>
    9e00:	bl	3ec0 <PyObject_RichCompareBool@plt>
    9e04:	cmp	w0, #0x0
    9e08:	b.gt	9ec4 <PySequence_Fast@plt+0x5c84>
    9e0c:	add	x19, x19, #0x1
    9e10:	b.ne	9ecc <PySequence_Fast@plt+0x5c8c>  // b.any
    9e14:	ldr	x4, [x21, #40]
    9e18:	ldr	x0, [x4, #8]
    9e1c:	cmp	x19, x0
    9e20:	b.ge	9f08 <PySequence_Fast@plt+0x5cc8>  // b.tcont
    9e24:	ldr	x0, [x4, #24]
    9e28:	mov	x1, x20
    9e2c:	lsl	x22, x19, #3
    9e30:	mov	w2, #0x2                   	// #2
    9e34:	ldr	x0, [x0, x19, lsl #3]
    9e38:	cmp	x20, x0
    9e3c:	b.ne	9e00 <PySequence_Fast@plt+0x5bc0>  // b.any
    9e40:	ldr	x2, [x4, #8]
    9e44:	cmp	x19, x2
    9e48:	b.ge	9f08 <PySequence_Fast@plt+0x5cc8>  // b.tcont
    9e4c:	ldr	x3, [x4, #24]
    9e50:	sub	x5, x2, #0x1
    9e54:	cmp	x19, x5
    9e58:	add	x1, x3, x22
    9e5c:	ldr	x0, [x3, x22]
    9e60:	str	x5, [x4, #8]
    9e64:	b.ge	9e80 <PySequence_Fast@plt+0x5c40>  // b.tcont
    9e68:	sub	x3, x3, #0x8
    9e6c:	add	x2, x3, x2, lsl #3
    9e70:	ldr	x3, [x1, #8]
    9e74:	str	x3, [x1], #8
    9e78:	cmp	x2, x1
    9e7c:	b.ne	9e70 <PySequence_Fast@plt+0x5c30>  // b.any
    9e80:	ldr	x1, [x0]
    9e84:	sub	x1, x1, #0x1
    9e88:	str	x1, [x0]
    9e8c:	cbz	x1, 9ebc <PySequence_Fast@plt+0x5c7c>
    9e90:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9e94:	ldr	x0, [x0, #3976]
    9e98:	mov	x19, x0
    9e9c:	ldr	x1, [x0]
    9ea0:	add	x1, x1, #0x1
    9ea4:	str	x1, [x0]
    9ea8:	mov	x0, x19
    9eac:	ldp	x19, x20, [sp, #16]
    9eb0:	ldp	x21, x22, [sp, #32]
    9eb4:	ldp	x29, x30, [sp], #48
    9eb8:	ret
    9ebc:	bl	3d70 <_Py_Dealloc@plt>
    9ec0:	b	9e90 <PySequence_Fast@plt+0x5c50>
    9ec4:	ldr	x4, [x21, #40]
    9ec8:	b	9e40 <PySequence_Fast@plt+0x5c00>
    9ecc:	mov	x19, #0x0                   	// #0
    9ed0:	mov	x0, x19
    9ed4:	ldp	x19, x20, [sp, #16]
    9ed8:	ldp	x21, x22, [sp, #32]
    9edc:	ldp	x29, x30, [sp], #48
    9ee0:	ret
    9ee4:	ldr	x2, [x19, #24]
    9ee8:	mov	x3, x20
    9eec:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9ef0:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    9ef4:	add	x1, x1, #0xce8
    9ef8:	add	x0, x0, #0xff0
    9efc:	mov	x19, #0x0                   	// #0
    9f00:	bl	3ed0 <_PyArg_BadArgument@plt>
    9f04:	b	9ea8 <PySequence_Fast@plt+0x5c68>
    9f08:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9f0c:	mov	x19, #0x0                   	// #0
    9f10:	ldr	x0, [x0, #3928]
    9f14:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    9f18:	add	x1, x1, #0xff8
    9f1c:	ldr	x0, [x0]
    9f20:	bl	3de0 <PyErr_SetString@plt>
    9f24:	mov	x0, x19
    9f28:	ldp	x19, x20, [sp, #16]
    9f2c:	ldp	x21, x22, [sp, #32]
    9f30:	ldp	x29, x30, [sp], #48
    9f34:	ret
    9f38:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    9f3c:	b	9f10 <PySequence_Fast@plt+0x5cd0>
    9f40:	stp	x29, x30, [sp, #-64]!
    9f44:	cmp	x2, #0x2
    9f48:	mov	x29, sp
    9f4c:	stp	x19, x20, [sp, #16]
    9f50:	mov	x20, x1
    9f54:	stp	x21, x22, [sp, #32]
    9f58:	mov	x21, x0
    9f5c:	b.ne	a0c0 <PySequence_Fast@plt+0x5e80>  // b.any
    9f60:	ldr	x0, [x20]
    9f64:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    9f68:	ldr	x1, [x1, #3896]
    9f6c:	ldr	x0, [x0, #8]
    9f70:	cmp	x0, x1
    9f74:	b.eq	a094 <PySequence_Fast@plt+0x5e54>  // b.none
    9f78:	bl	4160 <PyType_IsSubtype@plt>
    9f7c:	cbnz	w0, a094 <PySequence_Fast@plt+0x5e54>
    9f80:	ldr	x0, [x20]
    9f84:	bl	41e0 <PyNumber_Index@plt>
    9f88:	mov	x22, x0
    9f8c:	cbz	x0, a080 <PySequence_Fast@plt+0x5e40>
    9f90:	bl	3eb0 <PyLong_AsSsize_t@plt>
    9f94:	mov	x19, x0
    9f98:	ldr	x1, [x22]
    9f9c:	sub	x0, x1, #0x1
    9fa0:	str	x0, [x22]
    9fa4:	cbz	x0, a0e4 <PySequence_Fast@plt+0x5ea4>
    9fa8:	cmn	x19, #0x1
    9fac:	b.eq	a080 <PySequence_Fast@plt+0x5e40>  // b.none
    9fb0:	str	x23, [sp, #48]
    9fb4:	ldr	x22, [x20, #8]
    9fb8:	adrp	x23, 20000 <PyInit__elementtree@@Base+0x13790>
    9fbc:	add	x23, x23, #0x320
    9fc0:	ldr	x0, [x22, #8]
    9fc4:	cmp	x0, x23
    9fc8:	b.eq	9fdc <PySequence_Fast@plt+0x5d9c>  // b.none
    9fcc:	mov	x1, x23
    9fd0:	bl	4160 <PyType_IsSubtype@plt>
    9fd4:	cbz	w0, a114 <PySequence_Fast@plt+0x5ed4>
    9fd8:	ldr	x22, [x20, #8]
    9fdc:	ldr	x0, [x21, #40]
    9fe0:	cbz	x0, a0f0 <PySequence_Fast@plt+0x5eb0>
    9fe4:	ldr	x0, [x0, #8]
    9fe8:	tbz	x19, #63, 9ff4 <PySequence_Fast@plt+0x5db4>
    9fec:	adds	x19, x19, x0
    9ff0:	csel	x19, x19, xzr, pl  // pl = nfrst
    9ff4:	cmp	x19, x0
    9ff8:	mov	x1, #0x1                   	// #1
    9ffc:	csel	x19, x19, x0, le
    a000:	mov	x0, x21
    a004:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    a008:	tbnz	w0, #31, a108 <PySequence_Fast@plt+0x5ec8>
    a00c:	ldr	x2, [x21, #40]
    a010:	ldr	x0, [x2, #8]
    a014:	ldr	x3, [x2, #24]
    a018:	cmp	x19, x0
    a01c:	b.ge	a038 <PySequence_Fast@plt+0x5df8>  // b.tcont
    a020:	add	x0, x3, x0, lsl #3
    a024:	add	x4, x3, x19, lsl #3
    a028:	ldur	x1, [x0, #-8]
    a02c:	str	x1, [x0], #-8
    a030:	cmp	x0, x4
    a034:	b.ne	a028 <PySequence_Fast@plt+0x5de8>  // b.any
    a038:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    a03c:	ldr	x0, [x22]
    a040:	ldr	x1, [x1, #3976]
    a044:	add	x0, x0, #0x1
    a048:	ldr	x23, [sp, #48]
    a04c:	str	x0, [x22]
    a050:	str	x22, [x3, x19, lsl #3]
    a054:	mov	x0, x1
    a058:	ldr	x4, [x1]
    a05c:	ldr	x3, [x2, #8]
    a060:	add	x4, x4, #0x1
    a064:	str	x4, [x1]
    a068:	add	x1, x3, #0x1
    a06c:	str	x1, [x2, #8]
    a070:	ldp	x19, x20, [sp, #16]
    a074:	ldp	x21, x22, [sp, #32]
    a078:	ldp	x29, x30, [sp], #64
    a07c:	ret
    a080:	bl	3f80 <PyErr_Occurred@plt>
    a084:	cbnz	x0, a0ac <PySequence_Fast@plt+0x5e6c>
    a088:	mov	x19, #0xffffffffffffffff    	// #-1
    a08c:	str	x23, [sp, #48]
    a090:	b	9fb4 <PySequence_Fast@plt+0x5d74>
    a094:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a098:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a09c:	add	x1, x1, #0x20
    a0a0:	ldr	x0, [x0, #3944]
    a0a4:	ldr	x0, [x0]
    a0a8:	bl	3de0 <PyErr_SetString@plt>
    a0ac:	mov	x0, #0x0                   	// #0
    a0b0:	ldp	x19, x20, [sp, #16]
    a0b4:	ldp	x21, x22, [sp, #32]
    a0b8:	ldp	x29, x30, [sp], #64
    a0bc:	ret
    a0c0:	mov	x1, x2
    a0c4:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    a0c8:	mov	x3, #0x2                   	// #2
    a0cc:	add	x0, x0, #0x18
    a0d0:	mov	x2, x3
    a0d4:	bl	3f60 <_PyArg_CheckPositional@plt>
    a0d8:	cbnz	w0, 9f60 <PySequence_Fast@plt+0x5d20>
    a0dc:	mov	x0, #0x0                   	// #0
    a0e0:	b	a0b0 <PySequence_Fast@plt+0x5e70>
    a0e4:	mov	x0, x22
    a0e8:	bl	3d70 <_Py_Dealloc@plt>
    a0ec:	b	9fa8 <PySequence_Fast@plt+0x5d68>
    a0f0:	add	x0, x21, #0x28
    a0f4:	mov	x1, #0x0                   	// #0
    a0f8:	bl	6e60 <PySequence_Fast@plt+0x2c20>
    a0fc:	tbnz	w0, #31, a108 <PySequence_Fast@plt+0x5ec8>
    a100:	ldr	x0, [x21, #40]
    a104:	b	9fe4 <PySequence_Fast@plt+0x5da4>
    a108:	mov	x0, #0x0                   	// #0
    a10c:	ldr	x23, [sp, #48]
    a110:	b	a0b0 <PySequence_Fast@plt+0x5e70>
    a114:	ldr	x3, [x20, #8]
    a118:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a11c:	ldr	x2, [x23, #24]
    a120:	add	x1, x1, #0x48
    a124:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    a128:	add	x0, x0, #0x18
    a12c:	bl	3ed0 <_PyArg_BadArgument@plt>
    a130:	mov	x0, #0x0                   	// #0
    a134:	ldr	x23, [sp, #48]
    a138:	b	a070 <PySequence_Fast@plt+0x5e30>
    a13c:	nop
    a140:	stp	x29, x30, [sp, #-32]!
    a144:	mov	x29, sp
    a148:	ldr	x1, [x0, #16]
    a14c:	stp	x19, x20, [sp, #16]
    a150:	mov	x19, x0
    a154:	cbz	x1, a1ac <PySequence_Fast@plt+0x5f6c>
    a158:	bl	3fe0 <Py_ReprEnter@plt>
    a15c:	cmp	w0, #0x0
    a160:	cbz	w0, a1c4 <PySequence_Fast@plt+0x5f84>
    a164:	mov	x20, #0x0                   	// #0
    a168:	b.gt	a17c <PySequence_Fast@plt+0x5f3c>
    a16c:	mov	x0, x20
    a170:	ldp	x19, x20, [sp, #16]
    a174:	ldp	x29, x30, [sp], #32
    a178:	ret
    a17c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a180:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a184:	ldr	x2, [x19, #8]
    a188:	add	x1, x1, #0x80
    a18c:	ldr	x0, [x0, #3920]
    a190:	ldr	x2, [x2, #24]
    a194:	ldr	x0, [x0]
    a198:	bl	4180 <PyErr_Format@plt>
    a19c:	mov	x0, x20
    a1a0:	ldp	x19, x20, [sp, #16]
    a1a4:	ldp	x29, x30, [sp], #32
    a1a8:	ret
    a1ac:	ldp	x19, x20, [sp, #16]
    a1b0:	mov	x1, x0
    a1b4:	ldp	x29, x30, [sp], #32
    a1b8:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    a1bc:	add	x0, x0, #0x58
    a1c0:	b	3c30 <PyUnicode_FromFormat@plt>
    a1c4:	ldr	x1, [x19, #16]
    a1c8:	mov	x2, x19
    a1cc:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    a1d0:	add	x0, x0, #0x68
    a1d4:	bl	3c30 <PyUnicode_FromFormat@plt>
    a1d8:	mov	x20, x0
    a1dc:	mov	x0, x19
    a1e0:	bl	41a0 <Py_ReprLeave@plt>
    a1e4:	mov	x0, x20
    a1e8:	ldp	x19, x20, [sp, #16]
    a1ec:	ldp	x29, x30, [sp], #32
    a1f0:	ret
    a1f4:	nop
    a1f8:	stp	x29, x30, [sp, #-64]!
    a1fc:	cmp	x2, #0x2
    a200:	mov	x29, sp
    a204:	stp	x19, x20, [sp, #16]
    a208:	mov	x19, x1
    a20c:	stp	x23, x24, [sp, #48]
    a210:	b.eq	a230 <PySequence_Fast@plt+0x5ff0>  // b.none
    a214:	mov	x1, x2
    a218:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    a21c:	mov	x3, #0x2                   	// #2
    a220:	add	x0, x0, #0xa8
    a224:	mov	x2, x3
    a228:	bl	3f60 <_PyArg_CheckPositional@plt>
    a22c:	cbz	w0, a3bc <PySequence_Fast@plt+0x617c>
    a230:	stp	x21, x22, [sp, #32]
    a234:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    a238:	adrp	x23, 1f000 <PyInit__elementtree@@Base+0x12790>
    a23c:	ldp	x20, x21, [x19]
    a240:	add	x0, x0, #0x9b8
    a244:	add	x0, x0, #0x40
    a248:	bl	3fc0 <PyState_FindModule@plt>
    a24c:	bl	3e10 <PyModule_GetState@plt>
    a250:	mov	x19, x0
    a254:	mov	x0, x20
    a258:	bl	4090 <PyCallable_Check@plt>
    a25c:	ldr	x22, [x23, #3976]
    a260:	cmp	w0, #0x0
    a264:	ccmp	x20, x22, #0x4, eq  // eq = none
    a268:	b.ne	a380 <PySequence_Fast@plt+0x6140>  // b.any
    a26c:	mov	x0, x21
    a270:	bl	4090 <PyCallable_Check@plt>
    a274:	cmp	w0, #0x0
    a278:	ccmp	x21, x22, #0x4, eq  // eq = none
    a27c:	b.ne	a3d4 <PySequence_Fast@plt+0x6194>  // b.any
    a280:	ldp	x1, x2, [x19, #24]
    a284:	mov	x0, #0x2                   	// #2
    a288:	cmp	x1, #0x0
    a28c:	csel	x1, x1, x22, ne  // ne = any
    a290:	cmp	x2, #0x0
    a294:	csel	x2, x22, x2, eq  // eq = none
    a298:	bl	4210 <PyTuple_Pack@plt>
    a29c:	mov	x24, x0
    a2a0:	cmp	x20, x22
    a2a4:	b.eq	a31c <PySequence_Fast@plt+0x60dc>  // b.none
    a2a8:	ldr	x1, [x20]
    a2ac:	ldr	x0, [x19, #24]
    a2b0:	add	x1, x1, #0x1
    a2b4:	str	x1, [x20]
    a2b8:	str	x20, [x19, #24]
    a2bc:	cbz	x0, a2d0 <PySequence_Fast@plt+0x6090>
    a2c0:	ldr	x1, [x0]
    a2c4:	sub	x1, x1, #0x1
    a2c8:	str	x1, [x0]
    a2cc:	cbz	x1, a338 <PySequence_Fast@plt+0x60f8>
    a2d0:	ldr	x23, [x23, #3976]
    a2d4:	ldr	x0, [x19, #32]
    a2d8:	cmp	x21, x23
    a2dc:	b.eq	a34c <PySequence_Fast@plt+0x610c>  // b.none
    a2e0:	ldr	x1, [x21]
    a2e4:	add	x1, x1, #0x1
    a2e8:	str	x1, [x21]
    a2ec:	str	x21, [x19, #32]
    a2f0:	cbz	x0, a304 <PySequence_Fast@plt+0x60c4>
    a2f4:	ldr	x1, [x0]
    a2f8:	sub	x1, x1, #0x1
    a2fc:	str	x1, [x0]
    a300:	cbz	x1, a364 <PySequence_Fast@plt+0x6124>
    a304:	mov	x0, x24
    a308:	ldp	x19, x20, [sp, #16]
    a30c:	ldp	x21, x22, [sp, #32]
    a310:	ldp	x23, x24, [sp, #48]
    a314:	ldp	x29, x30, [sp], #64
    a318:	ret
    a31c:	ldr	x0, [x19, #24]
    a320:	cbz	x0, a2d0 <PySequence_Fast@plt+0x6090>
    a324:	ldr	x1, [x0]
    a328:	str	xzr, [x19, #24]
    a32c:	sub	x1, x1, #0x1
    a330:	str	x1, [x0]
    a334:	cbnz	x1, a2d0 <PySequence_Fast@plt+0x6090>
    a338:	bl	3d70 <_Py_Dealloc@plt>
    a33c:	ldr	x23, [x23, #3976]
    a340:	ldr	x0, [x19, #32]
    a344:	cmp	x21, x23
    a348:	b.ne	a2e0 <PySequence_Fast@plt+0x60a0>  // b.any
    a34c:	cbz	x0, a304 <PySequence_Fast@plt+0x60c4>
    a350:	ldr	x1, [x0]
    a354:	str	xzr, [x19, #32]
    a358:	sub	x1, x1, #0x1
    a35c:	str	x1, [x0]
    a360:	cbnz	x1, a304 <PySequence_Fast@plt+0x60c4>
    a364:	bl	3d70 <_Py_Dealloc@plt>
    a368:	mov	x0, x24
    a36c:	ldp	x19, x20, [sp, #16]
    a370:	ldp	x21, x22, [sp, #32]
    a374:	ldp	x23, x24, [sp, #48]
    a378:	ldp	x29, x30, [sp], #64
    a37c:	ret
    a380:	ldr	x2, [x20, #8]
    a384:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a388:	add	x1, x1, #0xb8
    a38c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a390:	ldr	x0, [x0, #3944]
    a394:	mov	x24, #0x0                   	// #0
    a398:	ldr	x2, [x2, #24]
    a39c:	ldr	x0, [x0]
    a3a0:	bl	4180 <PyErr_Format@plt>
    a3a4:	mov	x0, x24
    a3a8:	ldp	x19, x20, [sp, #16]
    a3ac:	ldp	x21, x22, [sp, #32]
    a3b0:	ldp	x23, x24, [sp, #48]
    a3b4:	ldp	x29, x30, [sp], #64
    a3b8:	ret
    a3bc:	mov	x24, #0x0                   	// #0
    a3c0:	mov	x0, x24
    a3c4:	ldp	x19, x20, [sp, #16]
    a3c8:	ldp	x23, x24, [sp, #48]
    a3cc:	ldp	x29, x30, [sp], #64
    a3d0:	ret
    a3d4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a3d8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a3dc:	add	x1, x1, #0xe8
    a3e0:	ldr	x2, [x21, #8]
    a3e4:	b	a390 <PySequence_Fast@plt+0x6150>
    a3e8:	stp	x29, x30, [sp, #-48]!
    a3ec:	mov	x29, sp
    a3f0:	str	x19, [sp, #16]
    a3f4:	mov	x19, x0
    a3f8:	mov	x0, #0x2                   	// #2
    a3fc:	bl	4210 <PyTuple_Pack@plt>
    a400:	str	x0, [sp, #40]
    a404:	cbz	x0, a4b4 <PySequence_Fast@plt+0x6274>
    a408:	ldr	x19, [x19]
    a40c:	ldr	x0, [x19, #8]
    a410:	ldr	x1, [x0, #168]
    a414:	ldr	x0, [x0, #56]
    a418:	tbz	w1, #11, a498 <PySequence_Fast@plt+0x6258>
    a41c:	ldr	x4, [x19, x0]
    a420:	cbz	x4, a498 <PySequence_Fast@plt+0x6258>
    a424:	mov	x3, #0x0                   	// #0
    a428:	add	x1, sp, #0x28
    a42c:	mov	x0, x19
    a430:	mov	x2, #0x1                   	// #1
    a434:	blr	x4
    a438:	mov	x1, x0
    a43c:	mov	x2, #0x0                   	// #0
    a440:	mov	x0, x19
    a444:	bl	4020 <_Py_CheckFunctionResult@plt>
    a448:	mov	x19, x0
    a44c:	ldr	x0, [sp, #40]
    a450:	ldr	x1, [x0]
    a454:	sub	x1, x1, #0x1
    a458:	str	x1, [x0]
    a45c:	cbz	x1, a484 <PySequence_Fast@plt+0x6244>
    a460:	cbz	x19, a4b4 <PySequence_Fast@plt+0x6274>
    a464:	ldr	x0, [x19]
    a468:	sub	x0, x0, #0x1
    a46c:	str	x0, [x19]
    a470:	cbz	x0, a48c <PySequence_Fast@plt+0x624c>
    a474:	mov	w0, #0x0                   	// #0
    a478:	ldr	x19, [sp, #16]
    a47c:	ldp	x29, x30, [sp], #48
    a480:	ret
    a484:	bl	3d70 <_Py_Dealloc@plt>
    a488:	b	a460 <PySequence_Fast@plt+0x6220>
    a48c:	mov	x0, x19
    a490:	bl	3d70 <_Py_Dealloc@plt>
    a494:	b	a474 <PySequence_Fast@plt+0x6234>
    a498:	mov	x0, x19
    a49c:	add	x1, sp, #0x28
    a4a0:	mov	x3, #0x0                   	// #0
    a4a4:	mov	x2, #0x1                   	// #1
    a4a8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    a4ac:	mov	x19, x0
    a4b0:	b	a44c <PySequence_Fast@plt+0x620c>
    a4b4:	mov	w0, #0xffffffff            	// #-1
    a4b8:	b	a478 <PySequence_Fast@plt+0x6238>
    a4bc:	nop
    a4c0:	stp	x29, x30, [sp, #-64]!
    a4c4:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    a4c8:	add	x3, x3, #0x9b8
    a4cc:	mov	x29, sp
    a4d0:	stp	x19, x20, [sp, #16]
    a4d4:	mov	x19, x0
    a4d8:	mov	x20, x2
    a4dc:	add	x0, x3, #0x40
    a4e0:	stp	x21, x22, [sp, #32]
    a4e4:	mov	x21, x1
    a4e8:	bl	3fc0 <PyState_FindModule@plt>
    a4ec:	bl	3e10 <PyModule_GetState@plt>
    a4f0:	mov	x22, x0
    a4f4:	mov	x0, x19
    a4f8:	bl	8320 <PySequence_Fast@plt+0x40e0>
    a4fc:	tbnz	w0, #31, a618 <PySequence_Fast@plt+0x63d8>
    a500:	ldr	x0, [x19, #72]
    a504:	cbz	x0, a6e0 <PySequence_Fast@plt+0x64a0>
    a508:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    a50c:	ldr	x1, [x1, #3976]
    a510:	cmp	x20, x1
    a514:	b.eq	a668 <PySequence_Fast@plt+0x6428>  // b.none
    a518:	mov	x2, x20
    a51c:	mov	x1, x21
    a520:	mov	x3, #0x0                   	// #0
    a524:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a528:	mov	x20, x0
    a52c:	cbz	x20, a618 <PySequence_Fast@plt+0x63d8>
    a530:	ldr	x0, [x19, #40]
    a534:	ldr	x21, [x19, #24]
    a538:	cbz	x0, a550 <PySequence_Fast@plt+0x6310>
    a53c:	ldr	x1, [x0]
    a540:	str	xzr, [x19, #40]
    a544:	sub	x1, x1, #0x1
    a548:	str	x1, [x0]
    a54c:	cbz	x1, a6a8 <PySequence_Fast@plt+0x6468>
    a550:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a554:	ldr	x0, [x0, #3976]
    a558:	cmp	x21, x0
    a55c:	b.eq	a630 <PySequence_Fast@plt+0x63f0>  // b.none
    a560:	mov	x1, x20
    a564:	mov	x0, x21
    a568:	bl	7a20 <PySequence_Fast@plt+0x37e0>
    a56c:	tbnz	w0, #31, a608 <PySequence_Fast@plt+0x63c8>
    a570:	ldp	x0, x1, [x19, #56]
    a574:	ldr	x2, [x0, #16]
    a578:	cmp	x1, x2
    a57c:	b.ge	a658 <PySequence_Fast@plt+0x6418>  // b.tcont
    a580:	mov	x2, x21
    a584:	bl	3fb0 <PyList_SetItem@plt>
    a588:	tbnz	w0, #31, a608 <PySequence_Fast@plt+0x63c8>
    a58c:	ldr	x0, [x21]
    a590:	add	x0, x0, #0x1
    a594:	str	x0, [x21]
    a598:	ldr	x1, [x19, #64]
    a59c:	ldr	x0, [x19, #24]
    a5a0:	add	x1, x1, #0x1
    a5a4:	str	x1, [x19, #64]
    a5a8:	ldr	x1, [x20]
    a5ac:	add	x1, x1, #0x1
    a5b0:	str	x1, [x20]
    a5b4:	ldr	x1, [x0]
    a5b8:	str	x20, [x19, #24]
    a5bc:	sub	x1, x1, #0x1
    a5c0:	str	x1, [x0]
    a5c4:	cbz	x1, a720 <PySequence_Fast@plt+0x64e0>
    a5c8:	ldr	x1, [x20]
    a5cc:	ldr	x0, [x19, #32]
    a5d0:	add	x1, x1, #0x1
    a5d4:	str	x1, [x20]
    a5d8:	ldr	x1, [x0]
    a5dc:	str	x20, [x19, #32]
    a5e0:	sub	x1, x1, #0x1
    a5e4:	str	x1, [x0]
    a5e8:	cbz	x1, a718 <PySequence_Fast@plt+0x64d8>
    a5ec:	ldr	x1, [x19, #104]
    a5f0:	cbz	x1, a61c <PySequence_Fast@plt+0x63dc>
    a5f4:	add	x0, x19, #0x60
    a5f8:	mov	x2, x20
    a5fc:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    a600:	tbz	w0, #31, a61c <PySequence_Fast@plt+0x63dc>
    a604:	nop
    a608:	ldr	x0, [x20]
    a60c:	sub	x0, x0, #0x1
    a610:	str	x0, [x20]
    a614:	cbz	x0, a6c0 <PySequence_Fast@plt+0x6480>
    a618:	mov	x20, #0x0                   	// #0
    a61c:	mov	x0, x20
    a620:	ldp	x19, x20, [sp, #16]
    a624:	ldp	x21, x22, [sp, #32]
    a628:	ldp	x29, x30, [sp], #64
    a62c:	ret
    a630:	ldr	x0, [x19, #16]
    a634:	cbnz	x0, a6f4 <PySequence_Fast@plt+0x64b4>
    a638:	ldr	x0, [x20]
    a63c:	add	x0, x0, #0x1
    a640:	str	x0, [x20]
    a644:	str	x20, [x19, #16]
    a648:	ldp	x0, x1, [x19, #56]
    a64c:	ldr	x2, [x0, #16]
    a650:	cmp	x1, x2
    a654:	b.lt	a580 <PySequence_Fast@plt+0x6340>  // b.tstop
    a658:	mov	x1, x21
    a65c:	bl	3f00 <PyList_Append@plt>
    a660:	tbz	w0, #31, a598 <PySequence_Fast@plt+0x6358>
    a664:	b	a608 <PySequence_Fast@plt+0x63c8>
    a668:	str	x23, [sp, #48]
    a66c:	bl	4080 <PyDict_New@plt>
    a670:	mov	x23, x0
    a674:	cbz	x0, a738 <PySequence_Fast@plt+0x64f8>
    a678:	mov	x2, x0
    a67c:	mov	x1, x21
    a680:	ldr	x0, [x19, #72]
    a684:	mov	x3, #0x0                   	// #0
    a688:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a68c:	mov	x20, x0
    a690:	ldr	x1, [x23]
    a694:	sub	x0, x1, #0x1
    a698:	str	x0, [x23]
    a69c:	cbz	x0, a728 <PySequence_Fast@plt+0x64e8>
    a6a0:	ldr	x23, [sp, #48]
    a6a4:	b	a52c <PySequence_Fast@plt+0x62ec>
    a6a8:	bl	3d70 <_Py_Dealloc@plt>
    a6ac:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a6b0:	ldr	x0, [x0, #3976]
    a6b4:	cmp	x21, x0
    a6b8:	b.ne	a560 <PySequence_Fast@plt+0x6320>  // b.any
    a6bc:	b	a630 <PySequence_Fast@plt+0x63f0>
    a6c0:	mov	x0, x20
    a6c4:	mov	x20, #0x0                   	// #0
    a6c8:	bl	3d70 <_Py_Dealloc@plt>
    a6cc:	mov	x0, x20
    a6d0:	ldp	x19, x20, [sp, #16]
    a6d4:	ldp	x21, x22, [sp, #32]
    a6d8:	ldp	x29, x30, [sp], #64
    a6dc:	ret
    a6e0:	mov	x1, x20
    a6e4:	mov	x0, x21
    a6e8:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    a6ec:	mov	x20, x0
    a6f0:	b	a52c <PySequence_Fast@plt+0x62ec>
    a6f4:	ldr	x0, [x22]
    a6f8:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    a6fc:	add	x1, x1, #0x110
    a700:	bl	3de0 <PyErr_SetString@plt>
    a704:	ldr	x0, [x20]
    a708:	sub	x0, x0, #0x1
    a70c:	str	x0, [x20]
    a710:	cbnz	x0, a618 <PySequence_Fast@plt+0x63d8>
    a714:	b	a6c0 <PySequence_Fast@plt+0x6480>
    a718:	bl	3d70 <_Py_Dealloc@plt>
    a71c:	b	a5ec <PySequence_Fast@plt+0x63ac>
    a720:	bl	3d70 <_Py_Dealloc@plt>
    a724:	b	a5c8 <PySequence_Fast@plt+0x6388>
    a728:	mov	x0, x23
    a72c:	bl	3d70 <_Py_Dealloc@plt>
    a730:	ldr	x23, [sp, #48]
    a734:	b	a52c <PySequence_Fast@plt+0x62ec>
    a738:	ldr	x23, [sp, #48]
    a73c:	b	a618 <PySequence_Fast@plt+0x63d8>
    a740:	stp	x29, x30, [sp, #-96]!
    a744:	mov	x29, sp
    a748:	stp	x19, x20, [sp, #16]
    a74c:	mov	x20, x1
    a750:	mov	x19, x2
    a754:	stp	x21, x22, [sp, #32]
    a758:	mov	x22, x0
    a75c:	bl	3f80 <PyErr_Occurred@plt>
    a760:	cbz	x0, a774 <PySequence_Fast@plt+0x6534>
    a764:	ldp	x19, x20, [sp, #16]
    a768:	ldp	x21, x22, [sp, #32]
    a76c:	ldp	x29, x30, [sp], #96
    a770:	ret
    a774:	stp	x25, x26, [sp, #64]
    a778:	add	x25, x22, #0x28
    a77c:	mov	x1, x20
    a780:	mov	x0, x25
    a784:	stp	x23, x24, [sp, #48]
    a788:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    a78c:	mov	x24, x0
    a790:	cbz	x0, a8ec <PySequence_Fast@plt+0x66ac>
    a794:	ldr	x0, [x19]
    a798:	cbz	x0, a854 <PySequence_Fast@plt+0x6614>
    a79c:	bl	4080 <PyDict_New@plt>
    a7a0:	mov	x23, x0
    a7a4:	cbz	x0, a9fc <PySequence_Fast@plt+0x67bc>
    a7a8:	ldr	x1, [x19]
    a7ac:	adrp	x26, c000 <PySequence_Fast@plt+0x7dc0>
    a7b0:	add	x26, x26, #0xd68
    a7b4:	cbz	x1, a86c <PySequence_Fast@plt+0x662c>
    a7b8:	str	x27, [sp, #80]
    a7bc:	nop
    a7c0:	ldr	x2, [x19, #8]
    a7c4:	mov	x0, x25
    a7c8:	cbz	x2, a840 <PySequence_Fast@plt+0x6600>
    a7cc:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    a7d0:	mov	x20, x0
    a7d4:	ldr	x21, [x19, #8]
    a7d8:	mov	x0, x21
    a7dc:	bl	3c70 <strlen@plt>
    a7e0:	mov	x2, x26
    a7e4:	mov	x1, x0
    a7e8:	mov	x0, x21
    a7ec:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    a7f0:	cmp	x20, #0x0
    a7f4:	mov	x21, x0
    a7f8:	mov	x1, x20
    a7fc:	mov	x2, x0
    a800:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    a804:	b.eq	a928 <PySequence_Fast@plt+0x66e8>  // b.none
    a808:	mov	x0, x23
    a80c:	bl	4140 <PyDict_SetItem@plt>
    a810:	ldr	x1, [x21]
    a814:	mov	w27, w0
    a818:	sub	x1, x1, #0x1
    a81c:	str	x1, [x21]
    a820:	cbz	x1, a910 <PySequence_Fast@plt+0x66d0>
    a824:	ldr	x1, [x20]
    a828:	sub	x1, x1, #0x1
    a82c:	str	x1, [x20]
    a830:	cbz	x1, a848 <PySequence_Fast@plt+0x6608>
    a834:	tbnz	w27, #31, a960 <PySequence_Fast@plt+0x6720>
    a838:	ldr	x1, [x19, #16]!
    a83c:	cbnz	x1, a7c0 <PySequence_Fast@plt+0x6580>
    a840:	ldr	x27, [sp, #80]
    a844:	b	a86c <PySequence_Fast@plt+0x662c>
    a848:	mov	x0, x20
    a84c:	bl	3d70 <_Py_Dealloc@plt>
    a850:	b	a834 <PySequence_Fast@plt+0x65f4>
    a854:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a858:	ldr	x0, [x0, #3976]
    a85c:	mov	x23, x0
    a860:	ldr	x1, [x0]
    a864:	add	x1, x1, #0x1
    a868:	str	x1, [x0]
    a86c:	ldr	x0, [x22, #24]
    a870:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    a874:	add	x1, x1, #0x320
    a878:	add	x1, x1, #0x358
    a87c:	ldr	x2, [x0, #8]
    a880:	cmp	x2, x1
    a884:	b.eq	aa14 <PySequence_Fast@plt+0x67d4>  // b.none
    a888:	ldr	x19, [x22, #64]
    a88c:	cbz	x19, a8b8 <PySequence_Fast@plt+0x6678>
    a890:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    a894:	ldr	x0, [x0, #3976]
    a898:	cmp	x23, x0
    a89c:	b.eq	a9bc <PySequence_Fast@plt+0x677c>  // b.none
    a8a0:	mov	x0, x19
    a8a4:	mov	x2, x23
    a8a8:	mov	x1, x24
    a8ac:	mov	x3, #0x0                   	// #0
    a8b0:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    a8b4:	mov	x19, x0
    a8b8:	ldr	x0, [x24]
    a8bc:	sub	x0, x0, #0x1
    a8c0:	str	x0, [x24]
    a8c4:	cbz	x0, a91c <PySequence_Fast@plt+0x66dc>
    a8c8:	ldr	x0, [x23]
    a8cc:	sub	x0, x0, #0x1
    a8d0:	str	x0, [x23]
    a8d4:	cbz	x0, a904 <PySequence_Fast@plt+0x66c4>
    a8d8:	cbz	x19, a8ec <PySequence_Fast@plt+0x66ac>
    a8dc:	ldr	x0, [x19]
    a8e0:	sub	x0, x0, #0x1
    a8e4:	str	x0, [x19]
    a8e8:	cbz	x0, a9e0 <PySequence_Fast@plt+0x67a0>
    a8ec:	ldp	x19, x20, [sp, #16]
    a8f0:	ldp	x21, x22, [sp, #32]
    a8f4:	ldp	x23, x24, [sp, #48]
    a8f8:	ldp	x25, x26, [sp, #64]
    a8fc:	ldp	x29, x30, [sp], #96
    a900:	ret
    a904:	mov	x0, x23
    a908:	bl	3d70 <_Py_Dealloc@plt>
    a90c:	b	a8d8 <PySequence_Fast@plt+0x6698>
    a910:	mov	x0, x21
    a914:	bl	3d70 <_Py_Dealloc@plt>
    a918:	b	a824 <PySequence_Fast@plt+0x65e4>
    a91c:	mov	x0, x24
    a920:	bl	3d70 <_Py_Dealloc@plt>
    a924:	b	a8c8 <PySequence_Fast@plt+0x6688>
    a928:	cbz	x0, a940 <PySequence_Fast@plt+0x6700>
    a92c:	ldr	x1, [x0]
    a930:	sub	x1, x1, #0x1
    a934:	str	x1, [x0]
    a938:	cbnz	x1, a940 <PySequence_Fast@plt+0x6700>
    a93c:	bl	3d70 <_Py_Dealloc@plt>
    a940:	cbz	x20, a960 <PySequence_Fast@plt+0x6720>
    a944:	ldr	x0, [x20]
    a948:	sub	x0, x0, #0x1
    a94c:	str	x0, [x20]
    a950:	cbnz	x0, a960 <PySequence_Fast@plt+0x6720>
    a954:	mov	x0, x20
    a958:	bl	3d70 <_Py_Dealloc@plt>
    a95c:	nop
    a960:	ldr	x0, [x23]
    a964:	sub	x0, x0, #0x1
    a968:	str	x0, [x23]
    a96c:	cbz	x0, a990 <PySequence_Fast@plt+0x6750>
    a970:	ldr	x0, [x24]
    a974:	sub	x0, x0, #0x1
    a978:	str	x0, [x24]
    a97c:	cbz	x0, a99c <PySequence_Fast@plt+0x675c>
    a980:	ldp	x23, x24, [sp, #48]
    a984:	ldp	x25, x26, [sp, #64]
    a988:	ldr	x27, [sp, #80]
    a98c:	b	a764 <PySequence_Fast@plt+0x6524>
    a990:	mov	x0, x23
    a994:	bl	3d70 <_Py_Dealloc@plt>
    a998:	b	a970 <PySequence_Fast@plt+0x6730>
    a99c:	mov	x0, x24
    a9a0:	ldp	x19, x20, [sp, #16]
    a9a4:	ldp	x21, x22, [sp, #32]
    a9a8:	ldp	x23, x24, [sp, #48]
    a9ac:	ldp	x25, x26, [sp, #64]
    a9b0:	ldr	x27, [sp, #80]
    a9b4:	ldp	x29, x30, [sp], #96
    a9b8:	b	3d70 <_Py_Dealloc@plt>
    a9bc:	ldr	x0, [x23]
    a9c0:	sub	x0, x0, #0x1
    a9c4:	str	x0, [x23]
    a9c8:	cbz	x0, aa28 <PySequence_Fast@plt+0x67e8>
    a9cc:	bl	4080 <PyDict_New@plt>
    a9d0:	mov	x23, x0
    a9d4:	cbz	x0, a9fc <PySequence_Fast@plt+0x67bc>
    a9d8:	ldr	x19, [x22, #64]
    a9dc:	b	a8a0 <PySequence_Fast@plt+0x6660>
    a9e0:	mov	x0, x19
    a9e4:	ldp	x19, x20, [sp, #16]
    a9e8:	ldp	x21, x22, [sp, #32]
    a9ec:	ldp	x23, x24, [sp, #48]
    a9f0:	ldp	x25, x26, [sp, #64]
    a9f4:	ldp	x29, x30, [sp], #96
    a9f8:	b	3d70 <_Py_Dealloc@plt>
    a9fc:	ldr	x0, [x24]
    aa00:	sub	x0, x0, #0x1
    aa04:	str	x0, [x24]
    aa08:	cbnz	x0, a8ec <PySequence_Fast@plt+0x66ac>
    aa0c:	mov	x0, x24
    aa10:	b	a9e4 <PySequence_Fast@plt+0x67a4>
    aa14:	mov	x2, x23
    aa18:	mov	x1, x24
    aa1c:	bl	a4c0 <PySequence_Fast@plt+0x6280>
    aa20:	mov	x19, x0
    aa24:	b	a8b8 <PySequence_Fast@plt+0x6678>
    aa28:	mov	x0, x23
    aa2c:	bl	3d70 <_Py_Dealloc@plt>
    aa30:	b	a9cc <PySequence_Fast@plt+0x678c>
    aa34:	nop
    aa38:	stp	x29, x30, [sp, #-48]!
    aa3c:	mov	x29, sp
    aa40:	stp	x19, x20, [sp, #16]
    aa44:	mov	x19, x2
    aa48:	sub	x2, x2, #0x1
    aa4c:	str	x21, [sp, #32]
    aa50:	mov	x20, x1
    aa54:	cmp	x2, #0x1
    aa58:	mov	x21, x0
    aa5c:	b.hi	aa84 <PySequence_Fast@plt+0x6844>  // b.pmore
    aa60:	cmp	x19, #0x1
    aa64:	ldr	x1, [x20]
    aa68:	b.le	aab4 <PySequence_Fast@plt+0x6874>
    aa6c:	mov	x0, x21
    aa70:	ldr	x2, [x20, #8]
    aa74:	ldp	x19, x20, [sp, #16]
    aa78:	ldr	x21, [sp, #32]
    aa7c:	ldp	x29, x30, [sp], #48
    aa80:	b	a4c0 <PySequence_Fast@plt+0x6280>
    aa84:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    aa88:	mov	x1, x19
    aa8c:	add	x0, x0, #0xe70
    aa90:	mov	x3, #0x2                   	// #2
    aa94:	mov	x2, #0x1                   	// #1
    aa98:	bl	3f60 <_PyArg_CheckPositional@plt>
    aa9c:	cbnz	w0, aa60 <PySequence_Fast@plt+0x6820>
    aaa0:	mov	x0, #0x0                   	// #0
    aaa4:	ldp	x19, x20, [sp, #16]
    aaa8:	ldr	x21, [sp, #32]
    aaac:	ldp	x29, x30, [sp], #48
    aab0:	ret
    aab4:	mov	x0, x21
    aab8:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    aabc:	ldp	x19, x20, [sp, #16]
    aac0:	ldr	x21, [sp, #32]
    aac4:	ldp	x29, x30, [sp], #48
    aac8:	ldr	x2, [x2, #3976]
    aacc:	b	a4c0 <PySequence_Fast@plt+0x6280>
    aad0:	stp	x29, x30, [sp, #-32]!
    aad4:	mov	x29, sp
    aad8:	stp	x19, x20, [sp, #16]
    aadc:	mov	x19, x0
    aae0:	bl	8320 <PySequence_Fast@plt+0x40e0>
    aae4:	tbnz	w0, #31, aba4 <PySequence_Fast@plt+0x6964>
    aae8:	ldr	x0, [x19, #64]
    aaec:	cbz	x0, ab8c <PySequence_Fast@plt+0x694c>
    aaf0:	ldp	x1, x20, [x19, #24]
    aaf4:	ldr	x0, [x19, #40]
    aaf8:	ldr	x2, [x1]
    aafc:	str	x1, [x19, #32]
    ab00:	add	x2, x2, #0x1
    ab04:	str	x2, [x1]
    ab08:	str	x1, [x19, #40]
    ab0c:	cbz	x0, ab20 <PySequence_Fast@plt+0x68e0>
    ab10:	ldr	x1, [x0]
    ab14:	sub	x1, x1, #0x1
    ab18:	str	x1, [x0]
    ab1c:	cbz	x1, abc0 <PySequence_Fast@plt+0x6980>
    ab20:	ldp	x1, x0, [x19, #56]
    ab24:	ldr	x1, [x1, #24]
    ab28:	sub	x0, x0, #0x1
    ab2c:	str	x0, [x19, #64]
    ab30:	ldr	x0, [x1, x0, lsl #3]
    ab34:	ldr	x1, [x0]
    ab38:	str	x0, [x19, #24]
    ab3c:	add	x1, x1, #0x1
    ab40:	str	x1, [x0]
    ab44:	ldr	x0, [x20]
    ab48:	sub	x0, x0, #0x1
    ab4c:	str	x0, [x20]
    ab50:	cbz	x0, abb4 <PySequence_Fast@plt+0x6974>
    ab54:	ldr	x1, [x19, #112]
    ab58:	ldr	x0, [x19, #32]
    ab5c:	cbz	x1, ab74 <PySequence_Fast@plt+0x6934>
    ab60:	mov	x2, x0
    ab64:	add	x0, x19, #0x60
    ab68:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    ab6c:	tbnz	w0, #31, aba4 <PySequence_Fast@plt+0x6964>
    ab70:	ldr	x0, [x19, #32]
    ab74:	ldr	x1, [x0]
    ab78:	ldp	x19, x20, [sp, #16]
    ab7c:	add	x1, x1, #0x1
    ab80:	str	x1, [x0]
    ab84:	ldp	x29, x30, [sp], #32
    ab88:	ret
    ab8c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    ab90:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ab94:	add	x1, x1, #0x130
    ab98:	ldr	x0, [x0, #3984]
    ab9c:	ldr	x0, [x0]
    aba0:	bl	3de0 <PyErr_SetString@plt>
    aba4:	mov	x0, #0x0                   	// #0
    aba8:	ldp	x19, x20, [sp, #16]
    abac:	ldp	x29, x30, [sp], #32
    abb0:	ret
    abb4:	mov	x0, x20
    abb8:	bl	3d70 <_Py_Dealloc@plt>
    abbc:	b	ab54 <PySequence_Fast@plt+0x6914>
    abc0:	bl	3d70 <_Py_Dealloc@plt>
    abc4:	b	ab20 <PySequence_Fast@plt+0x68e0>
    abc8:	b	aad0 <PySequence_Fast@plt+0x6890>
    abcc:	nop
    abd0:	stp	x29, x30, [sp, #-96]!
    abd4:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    abd8:	mov	x29, sp
    abdc:	ldr	x2, [x2, #3976]
    abe0:	stp	x19, x20, [sp, #16]
    abe4:	mov	x19, x0
    abe8:	cmp	x0, x2
    abec:	ldr	x3, [x0]
    abf0:	b.eq	acac <PySequence_Fast@plt+0x6a6c>  // b.none
    abf4:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    abf8:	ldr	x2, [x0, #8]
    abfc:	ldr	x20, [x20, #4032]
    ac00:	cmp	x2, x20
    ac04:	b.eq	acac <PySequence_Fast@plt+0x6a6c>  // b.none
    ac08:	stp	x21, x22, [sp, #32]
    ac0c:	cmp	x3, #0x1
    ac10:	mov	x21, x1
    ac14:	b.ne	ac38 <PySequence_Fast@plt+0x69f8>  // b.any
    ac18:	adrp	x3, 1f000 <PyInit__elementtree@@Base+0x12790>
    ac1c:	ldr	x3, [x3, #3992]
    ac20:	cmp	x2, x3
    ac24:	b.eq	acf4 <PySequence_Fast@plt+0x6ab4>  // b.none
    ac28:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    ac2c:	add	x3, x3, #0x320
    ac30:	cmp	x2, x3
    ac34:	b.eq	ad84 <PySequence_Fast@plt+0x6b44>  // b.none
    ac38:	adrp	x0, 20000 <PyInit__elementtree@@Base+0x13790>
    ac3c:	add	x0, x0, #0x9b8
    ac40:	add	x0, x0, #0x40
    ac44:	bl	3fc0 <PyState_FindModule@plt>
    ac48:	bl	3e10 <PyModule_GetState@plt>
    ac4c:	ldr	x20, [x0, #8]
    ac50:	cbz	x20, ad64 <PySequence_Fast@plt+0x6b24>
    ac54:	ldr	x0, [x20, #8]
    ac58:	ldr	x1, [x0, #168]
    ac5c:	ldr	x0, [x0, #56]
    ac60:	stp	x19, x21, [sp, #80]
    ac64:	tbz	w1, #11, acc8 <PySequence_Fast@plt+0x6a88>
    ac68:	ldr	x4, [x20, x0]
    ac6c:	cbz	x4, acc8 <PySequence_Fast@plt+0x6a88>
    ac70:	mov	x3, #0x0                   	// #0
    ac74:	add	x1, sp, #0x50
    ac78:	mov	x0, x20
    ac7c:	mov	x2, #0x2                   	// #2
    ac80:	blr	x4
    ac84:	mov	x1, x0
    ac88:	mov	x2, #0x0                   	// #0
    ac8c:	mov	x0, x20
    ac90:	bl	4020 <_Py_CheckFunctionResult@plt>
    ac94:	mov	x20, x0
    ac98:	ldp	x21, x22, [sp, #32]
    ac9c:	mov	x0, x20
    aca0:	ldp	x19, x20, [sp, #16]
    aca4:	ldp	x29, x30, [sp], #96
    aca8:	ret
    acac:	add	x3, x3, #0x1
    acb0:	str	x3, [x19]
    acb4:	mov	x20, x19
    acb8:	mov	x0, x20
    acbc:	ldp	x19, x20, [sp, #16]
    acc0:	ldp	x29, x30, [sp], #96
    acc4:	ret
    acc8:	add	x1, sp, #0x50
    accc:	mov	x0, x20
    acd0:	mov	x3, #0x0                   	// #0
    acd4:	mov	x2, #0x2                   	// #2
    acd8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    acdc:	mov	x20, x0
    ace0:	mov	x0, x20
    ace4:	ldp	x19, x20, [sp, #16]
    ace8:	ldp	x21, x22, [sp, #32]
    acec:	ldp	x29, x30, [sp], #96
    acf0:	ret
    acf4:	add	x22, sp, #0x50
    acf8:	stp	x23, x24, [sp, #48]
    acfc:	add	x24, sp, #0x48
    ad00:	add	x23, sp, #0x40
    ad04:	str	xzr, [sp, #80]
    ad08:	b	ad2c <PySequence_Fast@plt+0x6aec>
    ad0c:	ldr	x0, [sp, #64]
    ad10:	ldr	x0, [x0, #8]
    ad14:	cmp	x0, x20
    ad18:	b.ne	ad5c <PySequence_Fast@plt+0x6b1c>  // b.any
    ad1c:	ldr	x0, [sp, #72]
    ad20:	ldr	x0, [x0, #8]
    ad24:	cmp	x0, x20
    ad28:	b.ne	ad5c <PySequence_Fast@plt+0x6b1c>  // b.any
    ad2c:	mov	x3, x24
    ad30:	mov	x2, x23
    ad34:	mov	x1, x22
    ad38:	mov	x0, x19
    ad3c:	bl	40b0 <PyDict_Next@plt>
    ad40:	cbnz	w0, ad0c <PySequence_Fast@plt+0x6acc>
    ad44:	mov	x0, x19
    ad48:	bl	4150 <PyDict_Copy@plt>
    ad4c:	mov	x20, x0
    ad50:	ldp	x21, x22, [sp, #32]
    ad54:	ldp	x23, x24, [sp, #48]
    ad58:	b	ac9c <PySequence_Fast@plt+0x6a5c>
    ad5c:	ldp	x23, x24, [sp, #48]
    ad60:	b	ac38 <PySequence_Fast@plt+0x69f8>
    ad64:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    ad68:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ad6c:	add	x1, x1, #0x148
    ad70:	ldr	x0, [x0, #3920]
    ad74:	ldr	x0, [x0]
    ad78:	bl	3de0 <PyErr_SetString@plt>
    ad7c:	ldp	x21, x22, [sp, #32]
    ad80:	b	ac9c <PySequence_Fast@plt+0x6a5c>
    ad84:	bl	ad98 <PySequence_Fast@plt+0x6b58>
    ad88:	mov	x20, x0
    ad8c:	ldp	x21, x22, [sp, #32]
    ad90:	b	ac9c <PySequence_Fast@plt+0x6a5c>
    ad94:	nop
    ad98:	stp	x29, x30, [sp, #-80]!
    ad9c:	mov	x29, sp
    ada0:	stp	x21, x22, [sp, #32]
    ada4:	mov	x22, x0
    ada8:	ldr	x0, [x0, #16]
    adac:	stp	x23, x24, [sp, #48]
    adb0:	mov	x23, x1
    adb4:	bl	abd0 <PySequence_Fast@plt+0x6990>
    adb8:	cbz	x0, af3c <PySequence_Fast@plt+0x6cfc>
    adbc:	stp	x19, x20, [sp, #16]
    adc0:	mov	x19, x0
    adc4:	ldr	x0, [x22, #40]
    adc8:	cbz	x0, af54 <PySequence_Fast@plt+0x6d14>
    adcc:	ldr	x0, [x0]
    add0:	mov	x1, x23
    add4:	bl	abd0 <PySequence_Fast@plt+0x6990>
    add8:	mov	x20, x0
    addc:	cbz	x0, b094 <PySequence_Fast@plt+0x6e54>
    ade0:	mov	x1, x20
    ade4:	mov	x0, x19
    ade8:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    adec:	mov	x21, x0
    adf0:	ldr	x1, [x19]
    adf4:	sub	x0, x1, #0x1
    adf8:	str	x0, [x19]
    adfc:	cbz	x0, af8c <PySequence_Fast@plt+0x6d4c>
    ae00:	ldr	x0, [x20]
    ae04:	sub	x0, x0, #0x1
    ae08:	str	x0, [x20]
    ae0c:	cbz	x0, afa4 <PySequence_Fast@plt+0x6d64>
    ae10:	cbz	x21, af38 <PySequence_Fast@plt+0x6cf8>
    ae14:	ldr	x0, [x22, #24]
    ae18:	mov	x1, x23
    ae1c:	and	x0, x0, #0xfffffffffffffffe
    ae20:	bl	abd0 <PySequence_Fast@plt+0x6990>
    ae24:	mov	x1, x0
    ae28:	cbz	x0, af28 <PySequence_Fast@plt+0x6ce8>
    ae2c:	ldr	x0, [x21, #24]
    ae30:	ldr	x3, [x22, #24]
    ae34:	and	x0, x0, #0xfffffffffffffffe
    ae38:	ldr	x2, [x0]
    ae3c:	bfxil	x1, x3, #0, #1
    ae40:	str	x1, [x21, #24]
    ae44:	sub	x1, x2, #0x1
    ae48:	str	x1, [x0]
    ae4c:	cbz	x1, b030 <PySequence_Fast@plt+0x6df0>
    ae50:	ldr	x0, [x22, #32]
    ae54:	mov	x1, x23
    ae58:	and	x0, x0, #0xfffffffffffffffe
    ae5c:	bl	abd0 <PySequence_Fast@plt+0x6990>
    ae60:	mov	x1, x0
    ae64:	cbz	x0, af28 <PySequence_Fast@plt+0x6ce8>
    ae68:	ldr	x0, [x21, #32]
    ae6c:	ldr	x3, [x22, #32]
    ae70:	and	x0, x0, #0xfffffffffffffffe
    ae74:	ldr	x2, [x0]
    ae78:	bfxil	x1, x3, #0, #1
    ae7c:	str	x1, [x21, #32]
    ae80:	sub	x1, x2, #0x1
    ae84:	str	x1, [x0]
    ae88:	cbz	x1, b044 <PySequence_Fast@plt+0x6e04>
    ae8c:	ldr	x0, [x22, #40]
    ae90:	cbz	x0, afe0 <PySequence_Fast@plt+0x6da0>
    ae94:	ldr	x1, [x0, #8]
    ae98:	mov	x0, x21
    ae9c:	bl	6ed0 <PySequence_Fast@plt+0x2c90>
    aea0:	tbnz	w0, #31, af28 <PySequence_Fast@plt+0x6ce8>
    aea4:	ldr	x0, [x22, #40]
    aea8:	ldr	x1, [x0, #8]
    aeac:	cmp	x1, #0x0
    aeb0:	b.le	afd4 <PySequence_Fast@plt+0x6d94>
    aeb4:	adrp	x24, 20000 <PyInit__elementtree@@Base+0x13790>
    aeb8:	mov	x20, #0x0                   	// #0
    aebc:	add	x24, x24, #0x320
    aec0:	str	x25, [sp, #64]
    aec4:	b	af00 <PySequence_Fast@plt+0x6cc0>
    aec8:	ldr	x0, [x0, #8]
    aecc:	mov	x1, x24
    aed0:	cmp	x0, x24
    aed4:	b.eq	aee0 <PySequence_Fast@plt+0x6ca0>  // b.none
    aed8:	bl	4160 <PyType_IsSubtype@plt>
    aedc:	cbz	w0, b058 <PySequence_Fast@plt+0x6e18>
    aee0:	ldr	x2, [x21, #40]
    aee4:	add	x20, x20, #0x1
    aee8:	ldr	x0, [x22, #40]
    aeec:	ldr	x3, [x2, #24]
    aef0:	ldr	x1, [x0, #8]
    aef4:	str	x19, [x3, x25]
    aef8:	cmp	x1, x20
    aefc:	b.le	b04c <PySequence_Fast@plt+0x6e0c>
    af00:	ldr	x0, [x0, #24]
    af04:	mov	x1, x23
    af08:	lsl	x25, x20, #3
    af0c:	ldr	x0, [x0, x20, lsl #3]
    af10:	bl	abd0 <PySequence_Fast@plt+0x6990>
    af14:	mov	x19, x0
    af18:	cbnz	x0, aec8 <PySequence_Fast@plt+0x6c88>
    af1c:	ldr	x0, [x21, #40]
    af20:	ldr	x25, [sp, #64]
    af24:	str	x20, [x0, #8]
    af28:	ldr	x0, [x21]
    af2c:	sub	x0, x0, #0x1
    af30:	str	x0, [x21]
    af34:	cbz	x0, afb0 <PySequence_Fast@plt+0x6d70>
    af38:	ldp	x19, x20, [sp, #16]
    af3c:	mov	x21, #0x0                   	// #0
    af40:	mov	x0, x21
    af44:	ldp	x21, x22, [sp, #32]
    af48:	ldp	x23, x24, [sp, #48]
    af4c:	ldp	x29, x30, [sp], #80
    af50:	ret
    af54:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    af58:	ldr	x0, [x0, #3976]
    af5c:	mov	x20, x0
    af60:	ldr	x1, [x0]
    af64:	add	x1, x1, #0x1
    af68:	str	x1, [x0]
    af6c:	mov	x1, x20
    af70:	mov	x0, x19
    af74:	bl	6fe0 <PySequence_Fast@plt+0x2da0>
    af78:	mov	x21, x0
    af7c:	ldr	x1, [x19]
    af80:	sub	x0, x1, #0x1
    af84:	str	x0, [x19]
    af88:	cbnz	x0, ae00 <PySequence_Fast@plt+0x6bc0>
    af8c:	mov	x0, x19
    af90:	bl	3d70 <_Py_Dealloc@plt>
    af94:	ldr	x0, [x20]
    af98:	sub	x0, x0, #0x1
    af9c:	str	x0, [x20]
    afa0:	cbnz	x0, ae10 <PySequence_Fast@plt+0x6bd0>
    afa4:	mov	x0, x20
    afa8:	bl	3d70 <_Py_Dealloc@plt>
    afac:	b	ae10 <PySequence_Fast@plt+0x6bd0>
    afb0:	mov	x0, x21
    afb4:	mov	x21, #0x0                   	// #0
    afb8:	bl	3d70 <_Py_Dealloc@plt>
    afbc:	mov	x0, x21
    afc0:	ldp	x19, x20, [sp, #16]
    afc4:	ldp	x21, x22, [sp, #32]
    afc8:	ldp	x23, x24, [sp, #48]
    afcc:	ldp	x29, x30, [sp], #80
    afd0:	ret
    afd4:	ldr	x2, [x21, #40]
    afd8:	str	x1, [x2, #8]
    afdc:	nop
    afe0:	mov	x0, x22
    afe4:	bl	3e70 <PyLong_FromSsize_t@plt>
    afe8:	mov	x19, x0
    afec:	cbz	x0, af28 <PySequence_Fast@plt+0x6ce8>
    aff0:	mov	x1, x19
    aff4:	mov	x0, x23
    aff8:	mov	x2, x21
    affc:	bl	4140 <PyDict_SetItem@plt>
    b000:	ldr	x1, [x19]
    b004:	mov	w20, w0
    b008:	sub	x1, x1, #0x1
    b00c:	str	x1, [x19]
    b010:	cbz	x1, b038 <PySequence_Fast@plt+0x6df8>
    b014:	tbnz	w20, #31, af28 <PySequence_Fast@plt+0x6ce8>
    b018:	mov	x0, x21
    b01c:	ldp	x19, x20, [sp, #16]
    b020:	ldp	x21, x22, [sp, #32]
    b024:	ldp	x23, x24, [sp, #48]
    b028:	ldp	x29, x30, [sp], #80
    b02c:	ret
    b030:	bl	3d70 <_Py_Dealloc@plt>
    b034:	b	ae50 <PySequence_Fast@plt+0x6c10>
    b038:	mov	x0, x19
    b03c:	bl	3d70 <_Py_Dealloc@plt>
    b040:	b	b014 <PySequence_Fast@plt+0x6dd4>
    b044:	bl	3d70 <_Py_Dealloc@plt>
    b048:	b	ae8c <PySequence_Fast@plt+0x6c4c>
    b04c:	ldr	x25, [sp, #64]
    b050:	str	x1, [x2, #8]
    b054:	b	afe0 <PySequence_Fast@plt+0x6da0>
    b058:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    b05c:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    b060:	ldr	x2, [x19, #8]
    b064:	add	x1, x1, #0xb60
    b068:	ldr	x0, [x0, #3944]
    b06c:	ldr	x2, [x2, #24]
    b070:	ldr	x0, [x0]
    b074:	bl	4180 <PyErr_Format@plt>
    b078:	ldr	x0, [x19]
    b07c:	sub	x0, x0, #0x1
    b080:	str	x0, [x19]
    b084:	cbnz	x0, af1c <PySequence_Fast@plt+0x6cdc>
    b088:	mov	x0, x19
    b08c:	bl	3d70 <_Py_Dealloc@plt>
    b090:	b	af1c <PySequence_Fast@plt+0x6cdc>
    b094:	ldr	x0, [x19]
    b098:	sub	x0, x0, #0x1
    b09c:	str	x0, [x19]
    b0a0:	cbnz	x0, af38 <PySequence_Fast@plt+0x6cf8>
    b0a4:	mov	x0, x19
    b0a8:	mov	x21, #0x0                   	// #0
    b0ac:	bl	3d70 <_Py_Dealloc@plt>
    b0b0:	ldp	x19, x20, [sp, #16]
    b0b4:	b	af40 <PySequence_Fast@plt+0x6d00>
    b0b8:	ldr	x2, [x1, #8]
    b0bc:	ldr	x2, [x2, #168]
    b0c0:	tbz	w2, #29, b0c8 <PySequence_Fast@plt+0x6e88>
    b0c4:	b	ad98 <PySequence_Fast@plt+0x6b58>
    b0c8:	stp	x29, x30, [sp, #-16]!
    b0cc:	mov	x3, x1
    b0d0:	adrp	x2, d000 <PyInit__elementtree@@Base+0x790>
    b0d4:	mov	x29, sp
    b0d8:	add	x2, x2, #0x168
    b0dc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    b0e0:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    b0e4:	add	x1, x1, #0xce8
    b0e8:	add	x0, x0, #0x170
    b0ec:	bl	3ed0 <_PyArg_BadArgument@plt>
    b0f0:	mov	x0, #0x0                   	// #0
    b0f4:	ldp	x29, x30, [sp], #16
    b0f8:	ret
    b0fc:	nop
    b100:	stp	x29, x30, [sp, #-64]!
    b104:	mov	x29, sp
    b108:	stp	x19, x20, [sp, #16]
    b10c:	mov	x20, x1
    b110:	mov	x19, x0
    b114:	stp	x21, x22, [sp, #32]
    b118:	mov	x21, x2
    b11c:	stp	x1, x2, [sp, #48]
    b120:	bl	8320 <PySequence_Fast@plt+0x40e0>
    b124:	tbnz	w0, #31, b1d4 <PySequence_Fast@plt+0x6f94>
    b128:	ldr	x22, [x19, #88]
    b12c:	cbz	x22, b1ec <PySequence_Fast@plt+0x6fac>
    b130:	ldr	x0, [x22, #8]
    b134:	ldr	x1, [x0, #168]
    b138:	ldr	x0, [x0, #56]
    b13c:	tbz	w1, #11, b20c <PySequence_Fast@plt+0x6fcc>
    b140:	ldr	x4, [x22, x0]
    b144:	cbz	x4, b20c <PySequence_Fast@plt+0x6fcc>
    b148:	mov	x3, #0x0                   	// #0
    b14c:	add	x1, sp, #0x30
    b150:	mov	x2, #0x2                   	// #2
    b154:	mov	x0, x22
    b158:	blr	x4
    b15c:	mov	x1, x0
    b160:	mov	x2, #0x0                   	// #0
    b164:	mov	x0, x22
    b168:	bl	4020 <_Py_CheckFunctionResult@plt>
    b16c:	mov	x20, x0
    b170:	cbz	x20, b1d4 <PySequence_Fast@plt+0x6f94>
    b174:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    b178:	ldrb	w2, [x19, #153]
    b17c:	ldr	x0, [x19, #24]
    b180:	cmp	w2, #0x0
    b184:	ldr	x1, [x1, #3976]
    b188:	ccmp	x0, x1, #0x4, ne  // ne = any
    b18c:	b.ne	b228 <PySequence_Fast@plt+0x6fe8>  // b.any
    b190:	ldr	x0, [x19, #96]
    b194:	cbz	x0, b1b0 <PySequence_Fast@plt+0x6f70>
    b198:	ldr	x1, [x19, #144]
    b19c:	cbz	x1, b1b0 <PySequence_Fast@plt+0x6f70>
    b1a0:	add	x0, x19, #0x60
    b1a4:	mov	x2, x20
    b1a8:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    b1ac:	tbnz	w0, #31, b1c4 <PySequence_Fast@plt+0x6f84>
    b1b0:	mov	x0, x20
    b1b4:	ldp	x19, x20, [sp, #16]
    b1b8:	ldp	x21, x22, [sp, #32]
    b1bc:	ldp	x29, x30, [sp], #64
    b1c0:	ret
    b1c4:	ldr	x0, [x20]
    b1c8:	sub	x0, x0, #0x1
    b1cc:	str	x0, [x20]
    b1d0:	cbz	x0, b264 <PySequence_Fast@plt+0x7024>
    b1d4:	mov	x20, #0x0                   	// #0
    b1d8:	mov	x0, x20
    b1dc:	ldp	x19, x20, [sp, #16]
    b1e0:	ldp	x21, x22, [sp, #32]
    b1e4:	ldp	x29, x30, [sp], #64
    b1e8:	ret
    b1ec:	mov	x1, x20
    b1f0:	mov	x2, x21
    b1f4:	mov	x0, #0x2                   	// #2
    b1f8:	bl	4210 <PyTuple_Pack@plt>
    b1fc:	mov	x20, x0
    b200:	cbnz	x0, b190 <PySequence_Fast@plt+0x6f50>
    b204:	mov	x20, #0x0                   	// #0
    b208:	b	b1d8 <PySequence_Fast@plt+0x6f98>
    b20c:	mov	x0, x22
    b210:	add	x1, sp, #0x30
    b214:	mov	x3, #0x0                   	// #0
    b218:	mov	x2, #0x2                   	// #2
    b21c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b220:	mov	x20, x0
    b224:	b	b170 <PySequence_Fast@plt+0x6f30>
    b228:	mov	x1, x20
    b22c:	bl	7a20 <PySequence_Fast@plt+0x37e0>
    b230:	tbnz	w0, #31, b1c4 <PySequence_Fast@plt+0x6f84>
    b234:	ldr	x1, [x20]
    b238:	ldr	x0, [x19, #40]
    b23c:	add	x1, x1, #0x1
    b240:	str	x1, [x20]
    b244:	str	x20, [x19, #40]
    b248:	cbz	x0, b190 <PySequence_Fast@plt+0x6f50>
    b24c:	ldr	x1, [x0]
    b250:	sub	x1, x1, #0x1
    b254:	str	x1, [x0]
    b258:	cbnz	x1, b190 <PySequence_Fast@plt+0x6f50>
    b25c:	bl	3d70 <_Py_Dealloc@plt>
    b260:	b	b190 <PySequence_Fast@plt+0x6f50>
    b264:	mov	x0, x20
    b268:	mov	x20, #0x0                   	// #0
    b26c:	bl	3d70 <_Py_Dealloc@plt>
    b270:	b	b1b0 <PySequence_Fast@plt+0x6f70>
    b274:	nop
    b278:	stp	x29, x30, [sp, #-48]!
    b27c:	mov	x29, sp
    b280:	stp	x19, x20, [sp, #16]
    b284:	mov	x19, x2
    b288:	sub	x2, x2, #0x1
    b28c:	str	x21, [sp, #32]
    b290:	mov	x20, x1
    b294:	cmp	x2, #0x1
    b298:	mov	x21, x0
    b29c:	b.hi	b2c4 <PySequence_Fast@plt+0x7084>  // b.pmore
    b2a0:	cmp	x19, #0x1
    b2a4:	ldr	x1, [x20]
    b2a8:	b.le	b2f4 <PySequence_Fast@plt+0x70b4>
    b2ac:	mov	x0, x21
    b2b0:	ldr	x2, [x20, #8]
    b2b4:	ldp	x19, x20, [sp, #16]
    b2b8:	ldr	x21, [sp, #32]
    b2bc:	ldp	x29, x30, [sp], #48
    b2c0:	b	b100 <PySequence_Fast@plt+0x6ec0>
    b2c4:	adrp	x0, c000 <PySequence_Fast@plt+0x7dc0>
    b2c8:	mov	x1, x19
    b2cc:	add	x0, x0, #0xe90
    b2d0:	mov	x3, #0x2                   	// #2
    b2d4:	mov	x2, #0x1                   	// #1
    b2d8:	bl	3f60 <_PyArg_CheckPositional@plt>
    b2dc:	cbnz	w0, b2a0 <PySequence_Fast@plt+0x7060>
    b2e0:	mov	x0, #0x0                   	// #0
    b2e4:	ldp	x19, x20, [sp, #16]
    b2e8:	ldr	x21, [sp, #32]
    b2ec:	ldp	x29, x30, [sp], #48
    b2f0:	ret
    b2f4:	mov	x0, x21
    b2f8:	adrp	x2, 1f000 <PyInit__elementtree@@Base+0x12790>
    b2fc:	ldp	x19, x20, [sp, #16]
    b300:	ldr	x21, [sp, #32]
    b304:	ldp	x29, x30, [sp], #48
    b308:	ldr	x2, [x2, #3976]
    b30c:	b	b100 <PySequence_Fast@plt+0x6ec0>
    b310:	stp	x29, x30, [sp, #-48]!
    b314:	mov	x29, sp
    b318:	stp	x19, x20, [sp, #16]
    b31c:	mov	x19, x0
    b320:	str	x1, [sp, #40]
    b324:	bl	8320 <PySequence_Fast@plt+0x40e0>
    b328:	tbnz	w0, #31, b420 <PySequence_Fast@plt+0x71e0>
    b32c:	ldr	x20, [x19, #80]
    b330:	cbz	x20, b3d0 <PySequence_Fast@plt+0x7190>
    b334:	ldr	x0, [x20, #8]
    b338:	ldr	x1, [x0, #168]
    b33c:	ldr	x0, [x0, #56]
    b340:	tbz	w1, #11, b434 <PySequence_Fast@plt+0x71f4>
    b344:	ldr	x4, [x20, x0]
    b348:	cbz	x4, b434 <PySequence_Fast@plt+0x71f4>
    b34c:	mov	x3, #0x0                   	// #0
    b350:	add	x1, sp, #0x28
    b354:	mov	x0, x20
    b358:	mov	x2, #0x1                   	// #1
    b35c:	blr	x4
    b360:	mov	x1, x0
    b364:	mov	x2, #0x0                   	// #0
    b368:	mov	x0, x20
    b36c:	bl	4020 <_Py_CheckFunctionResult@plt>
    b370:	mov	x20, x0
    b374:	cbz	x20, b420 <PySequence_Fast@plt+0x71e0>
    b378:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    b37c:	ldrb	w2, [x19, #152]
    b380:	ldr	x0, [x19, #24]
    b384:	cmp	w2, #0x0
    b388:	ldr	x1, [x1, #3976]
    b38c:	ccmp	x0, x1, #0x4, ne  // ne = any
    b390:	b.eq	b3e0 <PySequence_Fast@plt+0x71a0>  // b.none
    b394:	mov	x1, x20
    b398:	bl	7a20 <PySequence_Fast@plt+0x37e0>
    b39c:	tbnz	w0, #31, b410 <PySequence_Fast@plt+0x71d0>
    b3a0:	ldr	x1, [x20]
    b3a4:	ldr	x0, [x19, #40]
    b3a8:	add	x1, x1, #0x1
    b3ac:	str	x1, [x20]
    b3b0:	str	x20, [x19, #40]
    b3b4:	cbz	x0, b3e0 <PySequence_Fast@plt+0x71a0>
    b3b8:	ldr	x1, [x0]
    b3bc:	sub	x1, x1, #0x1
    b3c0:	str	x1, [x0]
    b3c4:	cbnz	x1, b3e0 <PySequence_Fast@plt+0x71a0>
    b3c8:	bl	3d70 <_Py_Dealloc@plt>
    b3cc:	b	b3e0 <PySequence_Fast@plt+0x71a0>
    b3d0:	ldr	x20, [sp, #40]
    b3d4:	ldr	x0, [x20]
    b3d8:	add	x0, x0, #0x1
    b3dc:	str	x0, [x20]
    b3e0:	ldr	x0, [x19, #96]
    b3e4:	cbz	x0, b400 <PySequence_Fast@plt+0x71c0>
    b3e8:	ldr	x1, [x19, #136]
    b3ec:	cbz	x1, b400 <PySequence_Fast@plt+0x71c0>
    b3f0:	add	x0, x19, #0x60
    b3f4:	mov	x2, x20
    b3f8:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    b3fc:	tbnz	w0, #31, b410 <PySequence_Fast@plt+0x71d0>
    b400:	mov	x0, x20
    b404:	ldp	x19, x20, [sp, #16]
    b408:	ldp	x29, x30, [sp], #48
    b40c:	ret
    b410:	ldr	x0, [x20]
    b414:	sub	x0, x0, #0x1
    b418:	str	x0, [x20]
    b41c:	cbz	x0, b450 <PySequence_Fast@plt+0x7210>
    b420:	mov	x20, #0x0                   	// #0
    b424:	mov	x0, x20
    b428:	ldp	x19, x20, [sp, #16]
    b42c:	ldp	x29, x30, [sp], #48
    b430:	ret
    b434:	mov	x0, x20
    b438:	add	x1, sp, #0x28
    b43c:	mov	x3, #0x0                   	// #0
    b440:	mov	x2, #0x1                   	// #1
    b444:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b448:	mov	x20, x0
    b44c:	b	b374 <PySequence_Fast@plt+0x7134>
    b450:	mov	x0, x20
    b454:	mov	x20, #0x0                   	// #0
    b458:	bl	3d70 <_Py_Dealloc@plt>
    b45c:	b	b400 <PySequence_Fast@plt+0x71c0>
    b460:	b	b310 <PySequence_Fast@plt+0x70d0>
    b464:	nop
    b468:	stp	x29, x30, [sp, #-80]!
    b46c:	adrp	x4, 20000 <PyInit__elementtree@@Base+0x13790>
    b470:	add	x4, x4, #0x9b8
    b474:	mov	x29, sp
    b478:	stp	x19, x20, [sp, #16]
    b47c:	mov	x20, x1
    b480:	mov	x19, x3
    b484:	stp	x21, x22, [sp, #32]
    b488:	mov	x21, x2
    b48c:	mov	w22, w0
    b490:	add	x0, x4, #0x40
    b494:	str	x23, [sp, #48]
    b498:	bl	3fc0 <PyState_FindModule@plt>
    b49c:	bl	3e10 <PyModule_GetState@plt>
    b4a0:	mov	x23, x0
    b4a4:	cbz	x19, b5fc <PySequence_Fast@plt+0x73bc>
    b4a8:	mov	x1, x19
    b4ac:	mov	x3, x21
    b4b0:	mov	x2, x20
    b4b4:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    b4b8:	add	x0, x0, #0x180
    b4bc:	bl	3c30 <PyUnicode_FromFormat@plt>
    b4c0:	str	x0, [sp, #72]
    b4c4:	cbz	x0, b5c4 <PySequence_Fast@plt+0x7384>
    b4c8:	ldr	x19, [x23]
    b4cc:	ldr	x0, [x19, #8]
    b4d0:	ldr	x1, [x0, #168]
    b4d4:	ldr	x0, [x0, #56]
    b4d8:	tbz	w1, #11, b5e0 <PySequence_Fast@plt+0x73a0>
    b4dc:	ldr	x4, [x19, x0]
    b4e0:	cbz	x4, b5e0 <PySequence_Fast@plt+0x73a0>
    b4e4:	mov	x3, #0x0                   	// #0
    b4e8:	add	x1, sp, #0x48
    b4ec:	mov	x0, x19
    b4f0:	mov	x2, #0x1                   	// #1
    b4f4:	blr	x4
    b4f8:	mov	x1, x0
    b4fc:	mov	x2, #0x0                   	// #0
    b500:	mov	x0, x19
    b504:	bl	4020 <_Py_CheckFunctionResult@plt>
    b508:	mov	x19, x0
    b50c:	ldr	x0, [sp, #72]
    b510:	ldr	x1, [x0]
    b514:	sub	x1, x1, #0x1
    b518:	str	x1, [x0]
    b51c:	cbz	x1, b5d8 <PySequence_Fast@plt+0x7398>
    b520:	cbz	x19, b5c4 <PySequence_Fast@plt+0x7384>
    b524:	mov	w0, w22
    b528:	bl	3ea0 <PyLong_FromLong@plt>
    b52c:	mov	x22, x0
    b530:	cbz	x0, b5b4 <PySequence_Fast@plt+0x7374>
    b534:	mov	x2, x0
    b538:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    b53c:	mov	x0, x19
    b540:	add	x1, x1, #0x1a0
    b544:	bl	3d50 <PyObject_SetAttrString@plt>
    b548:	cmn	w0, #0x1
    b54c:	b.eq	b640 <PySequence_Fast@plt+0x7400>  // b.none
    b550:	ldr	x0, [x22]
    b554:	sub	x0, x0, #0x1
    b558:	str	x0, [x22]
    b55c:	cbz	x0, b634 <PySequence_Fast@plt+0x73f4>
    b560:	mov	x1, x20
    b564:	mov	x2, x21
    b568:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    b56c:	add	x0, x0, #0x1a8
    b570:	bl	4190 <_Py_BuildValue_SizeT@plt>
    b574:	mov	x20, x0
    b578:	cbz	x0, b5b4 <PySequence_Fast@plt+0x7374>
    b57c:	mov	x2, x0
    b580:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    b584:	mov	x0, x19
    b588:	add	x1, x1, #0x1b0
    b58c:	bl	3d50 <PyObject_SetAttrString@plt>
    b590:	cmn	w0, #0x1
    b594:	b.eq	b684 <PySequence_Fast@plt+0x7444>  // b.none
    b598:	ldr	x0, [x20]
    b59c:	sub	x0, x0, #0x1
    b5a0:	str	x0, [x20]
    b5a4:	cbz	x0, b678 <PySequence_Fast@plt+0x7438>
    b5a8:	ldr	x0, [x23]
    b5ac:	mov	x1, x19
    b5b0:	bl	3d90 <PyErr_SetObject@plt>
    b5b4:	ldr	x0, [x19]
    b5b8:	sub	x0, x0, #0x1
    b5bc:	str	x0, [x19]
    b5c0:	cbz	x0, b618 <PySequence_Fast@plt+0x73d8>
    b5c4:	ldp	x19, x20, [sp, #16]
    b5c8:	ldp	x21, x22, [sp, #32]
    b5cc:	ldr	x23, [sp, #48]
    b5d0:	ldp	x29, x30, [sp], #80
    b5d4:	ret
    b5d8:	bl	3d70 <_Py_Dealloc@plt>
    b5dc:	b	b520 <PySequence_Fast@plt+0x72e0>
    b5e0:	mov	x0, x19
    b5e4:	add	x1, sp, #0x48
    b5e8:	mov	x3, #0x0                   	// #0
    b5ec:	mov	x2, #0x1                   	// #1
    b5f0:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b5f4:	mov	x19, x0
    b5f8:	b	b50c <PySequence_Fast@plt+0x72cc>
    b5fc:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    b600:	mov	w0, w22
    b604:	ldr	x1, [x1, #1072]
    b608:	ldr	x1, [x1, #24]
    b60c:	blr	x1
    b610:	mov	x19, x0
    b614:	b	b4a8 <PySequence_Fast@plt+0x7268>
    b618:	mov	x0, x19
    b61c:	bl	3d70 <_Py_Dealloc@plt>
    b620:	ldp	x19, x20, [sp, #16]
    b624:	ldp	x21, x22, [sp, #32]
    b628:	ldr	x23, [sp, #48]
    b62c:	ldp	x29, x30, [sp], #80
    b630:	ret
    b634:	mov	x0, x22
    b638:	bl	3d70 <_Py_Dealloc@plt>
    b63c:	b	b560 <PySequence_Fast@plt+0x7320>
    b640:	ldr	x0, [x19]
    b644:	sub	x0, x0, #0x1
    b648:	str	x0, [x19]
    b64c:	cbz	x0, b66c <PySequence_Fast@plt+0x742c>
    b650:	ldr	x0, [x22]
    b654:	sub	x0, x0, #0x1
    b658:	str	x0, [x22]
    b65c:	cbnz	x0, b5c4 <PySequence_Fast@plt+0x7384>
    b660:	mov	x0, x22
    b664:	bl	3d70 <_Py_Dealloc@plt>
    b668:	b	b5c4 <PySequence_Fast@plt+0x7384>
    b66c:	mov	x0, x19
    b670:	bl	3d70 <_Py_Dealloc@plt>
    b674:	b	b650 <PySequence_Fast@plt+0x7410>
    b678:	mov	x0, x20
    b67c:	bl	3d70 <_Py_Dealloc@plt>
    b680:	b	b5a8 <PySequence_Fast@plt+0x7368>
    b684:	ldr	x0, [x19]
    b688:	sub	x0, x0, #0x1
    b68c:	str	x0, [x19]
    b690:	cbz	x0, b6b0 <PySequence_Fast@plt+0x7470>
    b694:	ldr	x0, [x20]
    b698:	sub	x0, x0, #0x1
    b69c:	str	x0, [x20]
    b6a0:	cbnz	x0, b5c4 <PySequence_Fast@plt+0x7384>
    b6a4:	mov	x0, x20
    b6a8:	bl	3d70 <_Py_Dealloc@plt>
    b6ac:	b	b5c4 <PySequence_Fast@plt+0x7384>
    b6b0:	mov	x0, x19
    b6b4:	bl	3d70 <_Py_Dealloc@plt>
    b6b8:	b	b694 <PySequence_Fast@plt+0x7454>
    b6bc:	nop
    b6c0:	stp	x29, x30, [sp, #-48]!
    b6c4:	mov	x29, sp
    b6c8:	stp	x21, x22, [sp, #32]
    b6cc:	adrp	x22, 21000 <PyInit__elementtree@@Base+0x14790>
    b6d0:	ldr	x4, [x22, #1072]
    b6d4:	stp	x19, x20, [sp, #16]
    b6d8:	mov	x20, x0
    b6dc:	ldr	x0, [x0]
    b6e0:	mov	x19, #0x0                   	// #0
    b6e4:	ldr	x4, [x4, #56]
    b6e8:	blr	x4
    b6ec:	mov	w21, w0
    b6f0:	bl	3f80 <PyErr_Occurred@plt>
    b6f4:	cbnz	x0, b714 <PySequence_Fast@plt+0x74d4>
    b6f8:	cbz	w21, b728 <PySequence_Fast@plt+0x74e8>
    b6fc:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    b700:	ldr	x0, [x0, #3976]
    b704:	mov	x19, x0
    b708:	ldr	x1, [x0]
    b70c:	add	x1, x1, #0x1
    b710:	str	x1, [x0]
    b714:	mov	x0, x19
    b718:	ldp	x19, x20, [sp, #16]
    b71c:	ldp	x21, x22, [sp, #32]
    b720:	ldp	x29, x30, [sp], #48
    b724:	ret
    b728:	ldr	x1, [x22, #1072]
    b72c:	mov	x19, x0
    b730:	ldr	x0, [x20]
    b734:	ldr	x1, [x1, #32]
    b738:	blr	x1
    b73c:	mov	w21, w0
    b740:	ldr	x1, [x22, #1072]
    b744:	ldr	x0, [x20]
    b748:	ldr	x1, [x1, #48]
    b74c:	blr	x1
    b750:	ldr	x1, [x22, #1072]
    b754:	mov	x22, x0
    b758:	ldr	x0, [x20]
    b75c:	ldr	x1, [x1, #40]
    b760:	blr	x1
    b764:	mov	x2, x0
    b768:	mov	x1, x22
    b76c:	mov	w0, w21
    b770:	mov	x3, #0x0                   	// #0
    b774:	bl	b468 <PySequence_Fast@plt+0x7228>
    b778:	mov	x0, x19
    b77c:	ldp	x19, x20, [sp, #16]
    b780:	ldp	x21, x22, [sp, #32]
    b784:	ldp	x29, x30, [sp], #48
    b788:	ret
    b78c:	nop
    b790:	stp	x29, x30, [sp, #-32]!
    b794:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    b798:	add	x1, x1, #0x510
    b79c:	mov	x29, sp
    b7a0:	mov	w3, #0x1                   	// #1
    b7a4:	mov	w2, #0x0                   	// #0
    b7a8:	stp	x19, x20, [sp, #16]
    b7ac:	mov	x19, x0
    b7b0:	add	x0, x0, #0x10
    b7b4:	bl	b6c0 <PySequence_Fast@plt+0x7480>
    b7b8:	mov	x1, x0
    b7bc:	cbz	x0, b868 <PySequence_Fast@plt+0x7628>
    b7c0:	ldr	x3, [x19, #24]
    b7c4:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x13790>
    b7c8:	add	x2, x2, #0x320
    b7cc:	add	x2, x2, #0x358
    b7d0:	ldr	x4, [x3, #8]
    b7d4:	cmp	x4, x2
    b7d8:	b.eq	b838 <PySequence_Fast@plt+0x75f8>  // b.none
    b7dc:	ldr	x20, [x19, #112]
    b7e0:	cbz	x20, b868 <PySequence_Fast@plt+0x7628>
    b7e4:	ldr	x2, [x0]
    b7e8:	sub	x2, x2, #0x1
    b7ec:	str	x2, [x0]
    b7f0:	cbz	x2, b878 <PySequence_Fast@plt+0x7638>
    b7f4:	ldr	x0, [x20, #8]
    b7f8:	ldr	x1, [x0, #168]
    b7fc:	ldr	x0, [x0, #56]
    b800:	tbz	w1, #11, b890 <PySequence_Fast@plt+0x7650>
    b804:	ldr	x4, [x20, x0]
    b808:	cbz	x4, b890 <PySequence_Fast@plt+0x7650>
    b80c:	mov	x0, x20
    b810:	mov	x3, #0x0                   	// #0
    b814:	mov	x2, #0x0                   	// #0
    b818:	mov	x1, #0x0                   	// #0
    b81c:	blr	x4
    b820:	mov	x1, x0
    b824:	mov	x0, x20
    b828:	mov	x2, #0x0                   	// #0
    b82c:	ldp	x19, x20, [sp, #16]
    b830:	ldp	x29, x30, [sp], #32
    b834:	b	4020 <_Py_CheckFunctionResult@plt>
    b838:	ldr	x2, [x0]
    b83c:	sub	x2, x2, #0x1
    b840:	str	x2, [x0]
    b844:	cbz	x2, b8ac <PySequence_Fast@plt+0x766c>
    b848:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    b84c:	ldr	x1, [x3, #16]
    b850:	ldr	x0, [x0, #3976]
    b854:	cmp	x1, #0x0
    b858:	csel	x1, x0, x1, eq  // eq = none
    b85c:	ldr	x0, [x1]
    b860:	add	x0, x0, #0x1
    b864:	str	x0, [x1]
    b868:	mov	x0, x1
    b86c:	ldp	x19, x20, [sp, #16]
    b870:	ldp	x29, x30, [sp], #32
    b874:	ret
    b878:	bl	3d70 <_Py_Dealloc@plt>
    b87c:	ldr	x20, [x19, #112]
    b880:	ldr	x0, [x20, #8]
    b884:	ldr	x1, [x0, #168]
    b888:	ldr	x0, [x0, #56]
    b88c:	tbnz	w1, #11, b804 <PySequence_Fast@plt+0x75c4>
    b890:	mov	x0, x20
    b894:	mov	x3, #0x0                   	// #0
    b898:	ldp	x19, x20, [sp, #16]
    b89c:	mov	x2, #0x0                   	// #0
    b8a0:	ldp	x29, x30, [sp], #32
    b8a4:	mov	x1, #0x0                   	// #0
    b8a8:	b	41d0 <_PyObject_MakeTpCall@plt>
    b8ac:	bl	3d70 <_Py_Dealloc@plt>
    b8b0:	ldr	x3, [x19, #24]
    b8b4:	b	b848 <PySequence_Fast@plt+0x7608>
    b8b8:	stp	x29, x30, [sp, #-80]!
    b8bc:	mov	x29, sp
    b8c0:	stp	x19, x20, [sp, #16]
    b8c4:	stp	x23, x24, [sp, #48]
    b8c8:	mov	x23, x0
    b8cc:	mov	x0, x1
    b8d0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    b8d4:	add	x1, x1, #0x1c0
    b8d8:	bl	3d00 <PyObject_GetAttrString@plt>
    b8dc:	cbz	x0, b9ac <PySequence_Fast@plt+0x776c>
    b8e0:	adrp	x24, 1f000 <PyInit__elementtree@@Base+0x12790>
    b8e4:	stp	x25, x26, [sp, #64]
    b8e8:	adrp	x25, 1f000 <PyInit__elementtree@@Base+0x12790>
    b8ec:	ldr	x24, [x24, #4032]
    b8f0:	stp	x21, x22, [sp, #32]
    b8f4:	mov	x21, x0
    b8f8:	ldr	x25, [x25, #3912]
    b8fc:	adrp	x26, d000 <PyInit__elementtree@@Base+0x790>
    b900:	add	x22, x26, #0x1c8
    b904:	mov	x1, x22
    b908:	mov	x0, x21
    b90c:	mov	w2, #0x10000               	// #65536
    b910:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    b914:	mov	x19, x0
    b918:	cbz	x0, bb24 <PySequence_Fast@plt+0x78e4>
    b91c:	ldr	x1, [x0, #8]
    b920:	cmp	x1, x24
    b924:	b.eq	b9c4 <PySequence_Fast@plt+0x7784>  // b.none
    b928:	cmp	x1, x25
    b92c:	b.ne	ba70 <PySequence_Fast@plt+0x7830>  // b.any
    b930:	ldr	x2, [x0, #16]
    b934:	cbz	x2, ba70 <PySequence_Fast@plt+0x7830>
    b938:	mov	x0, #0x7fffffff            	// #2147483647
    b93c:	cmp	x2, x0
    b940:	b.gt	ba0c <PySequence_Fast@plt+0x77cc>
    b944:	add	x1, x19, #0x20
    b948:	add	x0, x23, #0x10
    b94c:	mov	w3, #0x0                   	// #0
    b950:	bl	b6c0 <PySequence_Fast@plt+0x7480>
    b954:	ldr	x1, [x19]
    b958:	mov	x20, x0
    b95c:	sub	x1, x1, #0x1
    b960:	str	x1, [x19]
    b964:	cbz	x1, b988 <PySequence_Fast@plt+0x7748>
    b968:	cbz	x20, b994 <PySequence_Fast@plt+0x7754>
    b96c:	ldr	x0, [x20]
    b970:	sub	x0, x0, #0x1
    b974:	str	x0, [x20]
    b978:	cbnz	x0, b904 <PySequence_Fast@plt+0x76c4>
    b97c:	mov	x0, x20
    b980:	bl	3d70 <_Py_Dealloc@plt>
    b984:	b	b900 <PySequence_Fast@plt+0x76c0>
    b988:	mov	x0, x19
    b98c:	bl	3d70 <_Py_Dealloc@plt>
    b990:	cbnz	x20, b96c <PySequence_Fast@plt+0x772c>
    b994:	ldr	x0, [x21]
    b998:	sub	x0, x0, #0x1
    b99c:	str	x0, [x21]
    b9a0:	cbz	x0, bb0c <PySequence_Fast@plt+0x78cc>
    b9a4:	ldp	x21, x22, [sp, #32]
    b9a8:	ldp	x25, x26, [sp, #64]
    b9ac:	mov	x19, #0x0                   	// #0
    b9b0:	mov	x0, x19
    b9b4:	ldp	x19, x20, [sp, #16]
    b9b8:	ldp	x23, x24, [sp, #48]
    b9bc:	ldp	x29, x30, [sp], #80
    b9c0:	ret
    b9c4:	ldr	x1, [x0, #16]
    b9c8:	cbz	x1, bb60 <PySequence_Fast@plt+0x7920>
    b9cc:	adrp	x2, d000 <PyInit__elementtree@@Base+0x790>
    b9d0:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    b9d4:	add	x2, x2, #0x1d0
    b9d8:	add	x1, x1, #0x1e0
    b9dc:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    b9e0:	mov	x20, x0
    b9e4:	ldr	x1, [x19]
    b9e8:	sub	x0, x1, #0x1
    b9ec:	str	x0, [x19]
    b9f0:	cbz	x0, ba64 <PySequence_Fast@plt+0x7824>
    b9f4:	cbz	x20, b994 <PySequence_Fast@plt+0x7754>
    b9f8:	ldr	x2, [x20, #16]
    b9fc:	mov	x0, #0x7fffffff            	// #2147483647
    ba00:	mov	x19, x20
    ba04:	cmp	x2, x0
    ba08:	b.le	b944 <PySequence_Fast@plt+0x7704>
    ba0c:	ldr	x0, [x19]
    ba10:	sub	x0, x0, #0x1
    ba14:	str	x0, [x19]
    ba18:	cbz	x0, bb54 <PySequence_Fast@plt+0x7914>
    ba1c:	ldr	x0, [x21]
    ba20:	sub	x0, x0, #0x1
    ba24:	str	x0, [x21]
    ba28:	cbz	x0, bb48 <PySequence_Fast@plt+0x7908>
    ba2c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    ba30:	mov	x19, #0x0                   	// #0
    ba34:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ba38:	add	x1, x1, #0x1e8
    ba3c:	ldr	x0, [x0, #3968]
    ba40:	ldr	x0, [x0]
    ba44:	bl	3de0 <PyErr_SetString@plt>
    ba48:	mov	x0, x19
    ba4c:	ldp	x19, x20, [sp, #16]
    ba50:	ldp	x21, x22, [sp, #32]
    ba54:	ldp	x23, x24, [sp, #48]
    ba58:	ldp	x25, x26, [sp, #64]
    ba5c:	ldp	x29, x30, [sp], #80
    ba60:	ret
    ba64:	mov	x0, x19
    ba68:	bl	3d70 <_Py_Dealloc@plt>
    ba6c:	b	b9f4 <PySequence_Fast@plt+0x77b4>
    ba70:	ldr	x0, [x19]
    ba74:	sub	x0, x0, #0x1
    ba78:	str	x0, [x19]
    ba7c:	cbz	x0, bae8 <PySequence_Fast@plt+0x78a8>
    ba80:	ldr	x0, [x21]
    ba84:	sub	x0, x0, #0x1
    ba88:	str	x0, [x21]
    ba8c:	cbz	x0, bb00 <PySequence_Fast@plt+0x78c0>
    ba90:	add	x0, x23, #0x10
    ba94:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ba98:	mov	w3, #0x1                   	// #1
    ba9c:	add	x1, x1, #0x510
    baa0:	mov	w2, #0x0                   	// #0
    baa4:	bl	b6c0 <PySequence_Fast@plt+0x7480>
    baa8:	mov	x19, x0
    baac:	cbz	x0, b9a4 <PySequence_Fast@plt+0x7764>
    bab0:	ldr	x2, [x23, #24]
    bab4:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    bab8:	add	x1, x1, #0x320
    babc:	add	x1, x1, #0x358
    bac0:	ldr	x3, [x2, #8]
    bac4:	cmp	x3, x1
    bac8:	b.eq	bb78 <PySequence_Fast@plt+0x7938>  // b.none
    bacc:	mov	x0, x19
    bad0:	ldp	x19, x20, [sp, #16]
    bad4:	ldp	x21, x22, [sp, #32]
    bad8:	ldp	x23, x24, [sp, #48]
    badc:	ldp	x25, x26, [sp, #64]
    bae0:	ldp	x29, x30, [sp], #80
    bae4:	ret
    bae8:	mov	x0, x19
    baec:	bl	3d70 <_Py_Dealloc@plt>
    baf0:	ldr	x0, [x21]
    baf4:	sub	x0, x0, #0x1
    baf8:	str	x0, [x21]
    bafc:	cbnz	x0, ba90 <PySequence_Fast@plt+0x7850>
    bb00:	mov	x0, x21
    bb04:	bl	3d70 <_Py_Dealloc@plt>
    bb08:	b	ba90 <PySequence_Fast@plt+0x7850>
    bb0c:	mov	x0, x21
    bb10:	mov	x19, #0x0                   	// #0
    bb14:	bl	3d70 <_Py_Dealloc@plt>
    bb18:	ldp	x21, x22, [sp, #32]
    bb1c:	ldp	x25, x26, [sp, #64]
    bb20:	b	b9b0 <PySequence_Fast@plt+0x7770>
    bb24:	ldr	x0, [x21]
    bb28:	sub	x0, x0, #0x1
    bb2c:	str	x0, [x21]
    bb30:	cbnz	x0, b9a4 <PySequence_Fast@plt+0x7764>
    bb34:	mov	x0, x21
    bb38:	bl	3d70 <_Py_Dealloc@plt>
    bb3c:	ldp	x21, x22, [sp, #32]
    bb40:	ldp	x25, x26, [sp, #64]
    bb44:	b	b9b0 <PySequence_Fast@plt+0x7770>
    bb48:	mov	x0, x21
    bb4c:	bl	3d70 <_Py_Dealloc@plt>
    bb50:	b	ba2c <PySequence_Fast@plt+0x77ec>
    bb54:	mov	x0, x19
    bb58:	bl	3d70 <_Py_Dealloc@plt>
    bb5c:	b	ba1c <PySequence_Fast@plt+0x77dc>
    bb60:	ldr	x1, [x0]
    bb64:	sub	x1, x1, #0x1
    bb68:	str	x1, [x0]
    bb6c:	cbnz	x1, ba80 <PySequence_Fast@plt+0x7840>
    bb70:	bl	3d70 <_Py_Dealloc@plt>
    bb74:	b	baf0 <PySequence_Fast@plt+0x78b0>
    bb78:	ldr	x1, [x0]
    bb7c:	sub	x1, x1, #0x1
    bb80:	str	x1, [x0]
    bb84:	cbz	x1, bbb4 <PySequence_Fast@plt+0x7974>
    bb88:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    bb8c:	ldr	x19, [x2, #16]
    bb90:	ldr	x0, [x0, #3976]
    bb94:	cmp	x19, #0x0
    bb98:	ldp	x21, x22, [sp, #32]
    bb9c:	csel	x19, x0, x19, eq  // eq = none
    bba0:	ldp	x25, x26, [sp, #64]
    bba4:	ldr	x0, [x19]
    bba8:	add	x0, x0, #0x1
    bbac:	str	x0, [x19]
    bbb0:	b	b9b0 <PySequence_Fast@plt+0x7770>
    bbb4:	bl	3d70 <_Py_Dealloc@plt>
    bbb8:	ldr	x2, [x23, #24]
    bbbc:	b	bb88 <PySequence_Fast@plt+0x7948>
    bbc0:	stp	x29, x30, [sp, #-128]!
    bbc4:	mov	x29, sp
    bbc8:	ldr	x2, [x1, #8]
    bbcc:	stp	x19, x20, [sp, #16]
    bbd0:	mov	x20, x0
    bbd4:	ldr	x2, [x2, #168]
    bbd8:	tbz	w2, #28, bc44 <PySequence_Fast@plt+0x7a04>
    bbdc:	mov	x0, x1
    bbe0:	add	x1, sp, #0x30
    bbe4:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    bbe8:	mov	x19, x0
    bbec:	cbz	x0, bc34 <PySequence_Fast@plt+0x79f4>
    bbf0:	ldr	x1, [sp, #48]
    bbf4:	mov	x0, #0x7fffffff            	// #2147483647
    bbf8:	cmp	x1, x0
    bbfc:	b.gt	bcec <PySequence_Fast@plt+0x7aac>
    bc00:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x14790>
    bc04:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    bc08:	add	x1, x1, #0x1e0
    bc0c:	ldr	x2, [x0, #1072]
    bc10:	ldr	x0, [x20, #16]!
    bc14:	ldr	x2, [x2, #152]
    bc18:	blr	x2
    bc1c:	ldr	w2, [sp, #48]
    bc20:	mov	x1, x19
    bc24:	mov	x0, x20
    bc28:	mov	w3, #0x0                   	// #0
    bc2c:	bl	b6c0 <PySequence_Fast@plt+0x7480>
    bc30:	mov	x19, x0
    bc34:	mov	x0, x19
    bc38:	ldp	x19, x20, [sp, #16]
    bc3c:	ldp	x29, x30, [sp], #128
    bc40:	ret
    bc44:	str	x21, [sp, #32]
    bc48:	add	x21, sp, #0x30
    bc4c:	mov	x0, x1
    bc50:	mov	w2, #0x0                   	// #0
    bc54:	mov	x1, x21
    bc58:	mov	x19, #0x0                   	// #0
    bc5c:	bl	40a0 <PyObject_GetBuffer@plt>
    bc60:	tbnz	w0, #31, bcd8 <PySequence_Fast@plt+0x7a98>
    bc64:	ldr	x2, [sp, #64]
    bc68:	mov	x0, #0x7fffffff            	// #2147483647
    bc6c:	cmp	x2, x0
    bc70:	b.le	bca8 <PySequence_Fast@plt+0x7a68>
    bc74:	mov	x0, x21
    bc78:	bl	3ce0 <PyBuffer_Release@plt>
    bc7c:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    bc80:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    bc84:	add	x1, x1, #0x1e8
    bc88:	ldr	x0, [x0, #3968]
    bc8c:	ldr	x0, [x0]
    bc90:	bl	3de0 <PyErr_SetString@plt>
    bc94:	mov	x0, x19
    bc98:	ldp	x19, x20, [sp, #16]
    bc9c:	ldr	x21, [sp, #32]
    bca0:	ldp	x29, x30, [sp], #128
    bca4:	ret
    bca8:	ldr	x1, [sp, #48]
    bcac:	mov	w3, #0x0                   	// #0
    bcb0:	add	x0, x20, #0x10
    bcb4:	bl	b6c0 <PySequence_Fast@plt+0x7480>
    bcb8:	mov	x19, x0
    bcbc:	mov	x0, x21
    bcc0:	bl	3ce0 <PyBuffer_Release@plt>
    bcc4:	mov	x0, x19
    bcc8:	ldp	x19, x20, [sp, #16]
    bccc:	ldr	x21, [sp, #32]
    bcd0:	ldp	x29, x30, [sp], #128
    bcd4:	ret
    bcd8:	mov	x0, x19
    bcdc:	ldp	x19, x20, [sp, #16]
    bce0:	ldr	x21, [sp, #32]
    bce4:	ldp	x29, x30, [sp], #128
    bce8:	ret
    bcec:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    bcf0:	mov	x19, #0x0                   	// #0
    bcf4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    bcf8:	add	x1, x1, #0x1e8
    bcfc:	ldr	x0, [x0, #3968]
    bd00:	ldr	x0, [x0]
    bd04:	bl	3de0 <PyErr_SetString@plt>
    bd08:	mov	x0, x19
    bd0c:	ldp	x19, x20, [sp, #16]
    bd10:	ldp	x29, x30, [sp], #128
    bd14:	ret
    bd18:	stp	x29, x30, [sp, #-208]!
    bd1c:	mov	x29, sp
    bd20:	stp	x19, x20, [sp, #16]
    bd24:	sxtw	x19, w2
    bd28:	cmp	w19, #0x1
    bd2c:	b.le	bd4c <PySequence_Fast@plt+0x7b0c>
    bd30:	stp	x21, x22, [sp, #32]
    bd34:	mov	x21, x0
    bd38:	mov	x20, x1
    bd3c:	ldrb	w0, [x1]
    bd40:	cmp	w0, #0x26
    bd44:	b.eq	bd58 <PySequence_Fast@plt+0x7b18>  // b.none
    bd48:	ldp	x21, x22, [sp, #32]
    bd4c:	ldp	x19, x20, [sp, #16]
    bd50:	ldp	x29, x30, [sp], #208
    bd54:	ret
    bd58:	bl	3f80 <PyErr_Occurred@plt>
    bd5c:	cbnz	x0, bd48 <PySequence_Fast@plt+0x7b08>
    bd60:	sub	w1, w19, #0x2
    bd64:	add	x0, x20, #0x1
    bd68:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    bd6c:	add	x2, x2, #0xd68
    bd70:	sxtw	x1, w1
    bd74:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bd78:	mov	x22, x0
    bd7c:	cbz	x0, bd48 <PySequence_Fast@plt+0x7b08>
    bd80:	mov	x1, x0
    bd84:	ldr	x0, [x21, #32]
    bd88:	bl	4230 <PyDict_GetItemWithError@plt>
    bd8c:	str	x0, [sp, #72]
    bd90:	mov	x1, x0
    bd94:	cbz	x0, be2c <PySequence_Fast@plt+0x7bec>
    bd98:	ldr	x0, [x21, #24]
    bd9c:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x13790>
    bda0:	add	x2, x2, #0x320
    bda4:	add	x2, x2, #0x358
    bda8:	ldr	x3, [x0, #8]
    bdac:	cmp	x3, x2
    bdb0:	b.eq	bed8 <PySequence_Fast@plt+0x7c98>  // b.none
    bdb4:	ldr	x19, [x21, #72]
    bdb8:	cbz	x19, be0c <PySequence_Fast@plt+0x7bcc>
    bdbc:	ldr	x0, [x19, #8]
    bdc0:	ldr	x1, [x0, #168]
    bdc4:	ldr	x0, [x0, #56]
    bdc8:	tbz	w1, #11, bee0 <PySequence_Fast@plt+0x7ca0>
    bdcc:	ldr	x4, [x19, x0]
    bdd0:	cbz	x4, bee0 <PySequence_Fast@plt+0x7ca0>
    bdd4:	mov	x3, #0x0                   	// #0
    bdd8:	add	x1, sp, #0x48
    bddc:	mov	x2, #0x1                   	// #1
    bde0:	mov	x0, x19
    bde4:	blr	x4
    bde8:	mov	x1, x0
    bdec:	mov	x2, #0x0                   	// #0
    bdf0:	mov	x0, x19
    bdf4:	bl	4020 <_Py_CheckFunctionResult@plt>
    bdf8:	cbz	x0, be0c <PySequence_Fast@plt+0x7bcc>
    bdfc:	ldr	x1, [x0]
    be00:	sub	x1, x1, #0x1
    be04:	str	x1, [x0]
    be08:	cbz	x1, bef8 <PySequence_Fast@plt+0x7cb8>
    be0c:	ldr	x0, [x22]
    be10:	sub	x0, x0, #0x1
    be14:	str	x0, [x22]
    be18:	cbnz	x0, bd48 <PySequence_Fast@plt+0x7b08>
    be1c:	mov	x0, x22
    be20:	bl	3d70 <_Py_Dealloc@plt>
    be24:	ldp	x21, x22, [sp, #32]
    be28:	b	bd4c <PySequence_Fast@plt+0x7b0c>
    be2c:	bl	3f80 <PyErr_Occurred@plt>
    be30:	cbnz	x0, be0c <PySequence_Fast@plt+0x7bcc>
    be34:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    be38:	add	x0, x0, #0x5f0
    be3c:	cmp	w19, #0x64
    be40:	mov	x2, #0x64                  	// #100
    be44:	csel	x2, x19, x2, le
    be48:	add	x19, sp, #0x50
    be4c:	ldp	x4, x5, [x0]
    be50:	str	x23, [sp, #48]
    be54:	ldrh	w3, [x0, #16]
    be58:	adrp	x23, 21000 <PyInit__elementtree@@Base+0x14790>
    be5c:	strh	w3, [sp, #96]
    be60:	add	x3, sp, #0x2
    be64:	mov	x1, x20
    be68:	mov	x0, x19
    be6c:	stp	x4, x5, [sp, #80]
    be70:	stp	xzr, xzr, [x3, #96]
    be74:	stp	xzr, xzr, [x3, #112]
    be78:	stp	xzr, xzr, [x3, #128]
    be7c:	stp	xzr, xzr, [x3, #144]
    be80:	stp	xzr, xzr, [x3, #160]
    be84:	stp	xzr, xzr, [x3, #176]
    be88:	stur	xzr, [sp, #194]
    be8c:	stur	wzr, [sp, #202]
    be90:	strh	wzr, [sp, #206]
    be94:	bl	40d0 <strncat@plt>
    be98:	ldr	x1, [x23, #1072]
    be9c:	ldr	x0, [x21, #16]
    bea0:	ldr	x1, [x1, #48]
    bea4:	blr	x1
    bea8:	mov	x20, x0
    beac:	ldr	x1, [x23, #1072]
    beb0:	ldr	x0, [x21, #16]
    beb4:	ldr	x1, [x1, #40]
    beb8:	blr	x1
    bebc:	mov	x2, x0
    bec0:	mov	x3, x19
    bec4:	mov	x1, x20
    bec8:	mov	w0, #0xb                   	// #11
    becc:	bl	b468 <PySequence_Fast@plt+0x7228>
    bed0:	ldr	x23, [sp, #48]
    bed4:	b	be0c <PySequence_Fast@plt+0x7bcc>
    bed8:	bl	47f8 <PySequence_Fast@plt+0x5b8>
    bedc:	b	bdf8 <PySequence_Fast@plt+0x7bb8>
    bee0:	mov	x0, x19
    bee4:	add	x1, sp, #0x48
    bee8:	mov	x3, #0x0                   	// #0
    beec:	mov	x2, #0x1                   	// #1
    bef0:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bef4:	b	bdf8 <PySequence_Fast@plt+0x7bb8>
    bef8:	bl	3d70 <_Py_Dealloc@plt>
    befc:	b	be0c <PySequence_Fast@plt+0x7bcc>
    bf00:	stp	x29, x30, [sp, #-48]!
    bf04:	mov	x29, sp
    bf08:	stp	x19, x20, [sp, #16]
    bf0c:	mov	x19, x0
    bf10:	mov	x20, x1
    bf14:	bl	3f80 <PyErr_Occurred@plt>
    bf18:	cbz	x0, bf28 <PySequence_Fast@plt+0x7ce8>
    bf1c:	ldp	x19, x20, [sp, #16]
    bf20:	ldp	x29, x30, [sp], #48
    bf24:	ret
    bf28:	ldr	x0, [x19, #24]
    bf2c:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    bf30:	add	x1, x1, #0x320
    bf34:	add	x1, x1, #0x358
    bf38:	ldr	x2, [x0, #8]
    bf3c:	cmp	x2, x1
    bf40:	b.eq	bfd8 <PySequence_Fast@plt+0x7d98>  // b.none
    bf44:	ldr	x0, [x19, #80]
    bf48:	cbz	x0, bf1c <PySequence_Fast@plt+0x7cdc>
    bf4c:	mov	x1, x20
    bf50:	add	x0, x19, #0x28
    bf54:	bl	7f10 <PySequence_Fast@plt+0x3cd0>
    bf58:	str	x0, [sp, #40]
    bf5c:	cbz	x0, bf1c <PySequence_Fast@plt+0x7cdc>
    bf60:	ldr	x19, [x19, #80]
    bf64:	ldr	x0, [x19, #8]
    bf68:	ldr	x1, [x0, #168]
    bf6c:	ldr	x0, [x0, #56]
    bf70:	tbz	w1, #11, bfec <PySequence_Fast@plt+0x7dac>
    bf74:	ldr	x4, [x19, x0]
    bf78:	cbz	x4, bfec <PySequence_Fast@plt+0x7dac>
    bf7c:	mov	x3, #0x0                   	// #0
    bf80:	add	x1, sp, #0x28
    bf84:	mov	x0, x19
    bf88:	mov	x2, #0x1                   	// #1
    bf8c:	blr	x4
    bf90:	mov	x1, x0
    bf94:	mov	x2, #0x0                   	// #0
    bf98:	mov	x0, x19
    bf9c:	bl	4020 <_Py_CheckFunctionResult@plt>
    bfa0:	mov	x19, x0
    bfa4:	ldr	x0, [sp, #40]
    bfa8:	ldr	x1, [x0]
    bfac:	sub	x1, x1, #0x1
    bfb0:	str	x1, [x0]
    bfb4:	cbz	x1, bfe4 <PySequence_Fast@plt+0x7da4>
    bfb8:	cbz	x19, bf1c <PySequence_Fast@plt+0x7cdc>
    bfbc:	ldr	x0, [x19]
    bfc0:	sub	x0, x0, #0x1
    bfc4:	str	x0, [x19]
    bfc8:	cbnz	x0, bf1c <PySequence_Fast@plt+0x7cdc>
    bfcc:	mov	x0, x19
    bfd0:	bl	3d70 <_Py_Dealloc@plt>
    bfd4:	b	bf1c <PySequence_Fast@plt+0x7cdc>
    bfd8:	bl	aad0 <PySequence_Fast@plt+0x6890>
    bfdc:	mov	x19, x0
    bfe0:	b	bfb8 <PySequence_Fast@plt+0x7d78>
    bfe4:	bl	3d70 <_Py_Dealloc@plt>
    bfe8:	b	bfb8 <PySequence_Fast@plt+0x7d78>
    bfec:	mov	x0, x19
    bff0:	add	x1, sp, #0x28
    bff4:	mov	x3, #0x0                   	// #0
    bff8:	mov	x2, #0x1                   	// #1
    bffc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c000:	mov	x19, x0
    c004:	b	bfa4 <PySequence_Fast@plt+0x7d64>
    c008:	stp	x29, x30, [sp, #-64]!
    c00c:	mov	x29, sp
    c010:	stp	x19, x20, [sp, #16]
    c014:	mov	x20, x1
    c018:	mov	x19, x2
    c01c:	stp	x21, x22, [sp, #32]
    c020:	mov	x21, x0
    c024:	bl	3f80 <PyErr_Occurred@plt>
    c028:	cbz	x0, c03c <PySequence_Fast@plt+0x7dfc>
    c02c:	ldp	x19, x20, [sp, #16]
    c030:	ldp	x21, x22, [sp, #32]
    c034:	ldp	x29, x30, [sp], #64
    c038:	ret
    c03c:	ldr	x22, [x21, #24]
    c040:	adrp	x3, 20000 <PyInit__elementtree@@Base+0x13790>
    c044:	add	x3, x3, #0x320
    c048:	add	x3, x3, #0x358
    c04c:	ldr	x0, [x22, #8]
    c050:	cmp	x0, x3
    c054:	b.eq	c12c <PySequence_Fast@plt+0x7eec>  // b.none
    c058:	ldr	x0, [x21, #96]
    c05c:	cbz	x0, c02c <PySequence_Fast@plt+0x7dec>
    c060:	mov	x0, x20
    c064:	adrp	x22, c000 <PySequence_Fast@plt+0x7dc0>
    c068:	bl	3c70 <strlen@plt>
    c06c:	add	x22, x22, #0xd68
    c070:	mov	x1, x0
    c074:	mov	x2, x22
    c078:	mov	x0, x20
    c07c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c080:	mov	x20, x0
    c084:	cbz	x0, c02c <PySequence_Fast@plt+0x7dec>
    c088:	mov	x0, x19
    c08c:	bl	3c70 <strlen@plt>
    c090:	mov	x2, x22
    c094:	mov	x1, x0
    c098:	mov	x0, x19
    c09c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c0a0:	mov	x19, x0
    c0a4:	cbz	x0, c110 <PySequence_Fast@plt+0x7ed0>
    c0a8:	ldr	x21, [x21, #96]
    c0ac:	ldr	x0, [x21, #8]
    c0b0:	stp	x20, x19, [sp, #48]
    c0b4:	ldr	x1, [x0, #168]
    c0b8:	ldr	x0, [x0, #56]
    c0bc:	tbz	w1, #11, c1c8 <PySequence_Fast@plt+0x7f88>
    c0c0:	ldr	x4, [x21, x0]
    c0c4:	cbz	x4, c1c8 <PySequence_Fast@plt+0x7f88>
    c0c8:	mov	x3, #0x0                   	// #0
    c0cc:	add	x1, sp, #0x30
    c0d0:	mov	x2, #0x2                   	// #2
    c0d4:	mov	x0, x21
    c0d8:	blr	x4
    c0dc:	mov	x1, x0
    c0e0:	mov	x2, #0x0                   	// #0
    c0e4:	mov	x0, x21
    c0e8:	bl	4020 <_Py_CheckFunctionResult@plt>
    c0ec:	cbz	x0, c100 <PySequence_Fast@plt+0x7ec0>
    c0f0:	ldr	x1, [x0]
    c0f4:	sub	x1, x1, #0x1
    c0f8:	str	x1, [x0]
    c0fc:	cbz	x1, c1a8 <PySequence_Fast@plt+0x7f68>
    c100:	ldr	x0, [x19]
    c104:	sub	x0, x0, #0x1
    c108:	str	x0, [x19]
    c10c:	cbz	x0, c1bc <PySequence_Fast@plt+0x7f7c>
    c110:	ldr	x0, [x20]
    c114:	sub	x0, x0, #0x1
    c118:	str	x0, [x20]
    c11c:	cbnz	x0, c02c <PySequence_Fast@plt+0x7dec>
    c120:	mov	x0, x20
    c124:	bl	3d70 <_Py_Dealloc@plt>
    c128:	b	c02c <PySequence_Fast@plt+0x7dec>
    c12c:	ldr	x0, [x22, #96]
    c130:	cbz	x0, c1b0 <PySequence_Fast@plt+0x7f70>
    c134:	ldr	x0, [x22, #144]
    c138:	cbz	x0, c1b0 <PySequence_Fast@plt+0x7f70>
    c13c:	mov	x0, x20
    c140:	adrp	x21, c000 <PySequence_Fast@plt+0x7dc0>
    c144:	bl	3c70 <strlen@plt>
    c148:	add	x21, x21, #0xd68
    c14c:	mov	x1, x0
    c150:	mov	x2, x21
    c154:	mov	x0, x20
    c158:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c15c:	mov	x20, x0
    c160:	cbz	x0, c02c <PySequence_Fast@plt+0x7dec>
    c164:	mov	x0, x19
    c168:	bl	3c70 <strlen@plt>
    c16c:	mov	x2, x21
    c170:	mov	x1, x0
    c174:	mov	x0, x19
    c178:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c17c:	mov	x19, x0
    c180:	cbz	x0, c110 <PySequence_Fast@plt+0x7ed0>
    c184:	mov	x0, x22
    c188:	mov	x2, x19
    c18c:	mov	x1, x20
    c190:	bl	b100 <PySequence_Fast@plt+0x6ec0>
    c194:	cbz	x0, c100 <PySequence_Fast@plt+0x7ec0>
    c198:	ldr	x2, [x0]
    c19c:	sub	x2, x2, #0x1
    c1a0:	str	x2, [x0]
    c1a4:	cbnz	x2, c100 <PySequence_Fast@plt+0x7ec0>
    c1a8:	bl	3d70 <_Py_Dealloc@plt>
    c1ac:	b	c100 <PySequence_Fast@plt+0x7ec0>
    c1b0:	ldrb	w0, [x22, #153]
    c1b4:	cbz	w0, c02c <PySequence_Fast@plt+0x7dec>
    c1b8:	b	c13c <PySequence_Fast@plt+0x7efc>
    c1bc:	mov	x0, x19
    c1c0:	bl	3d70 <_Py_Dealloc@plt>
    c1c4:	b	c110 <PySequence_Fast@plt+0x7ed0>
    c1c8:	mov	x0, x21
    c1cc:	add	x1, sp, #0x30
    c1d0:	mov	x3, #0x0                   	// #0
    c1d4:	mov	x2, #0x2                   	// #2
    c1d8:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c1dc:	b	c0ec <PySequence_Fast@plt+0x7eac>
    c1e0:	stp	x29, x30, [sp, #-64]!
    c1e4:	mov	x29, sp
    c1e8:	stp	x19, x20, [sp, #16]
    c1ec:	mov	x19, x1
    c1f0:	mov	w20, w2
    c1f4:	str	x21, [sp, #32]
    c1f8:	mov	x21, x0
    c1fc:	bl	3f80 <PyErr_Occurred@plt>
    c200:	cbz	x0, c214 <PySequence_Fast@plt+0x7fd4>
    c204:	ldp	x19, x20, [sp, #16]
    c208:	ldr	x21, [sp, #32]
    c20c:	ldp	x29, x30, [sp], #64
    c210:	ret
    c214:	sxtw	x1, w20
    c218:	mov	x0, x19
    c21c:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    c220:	add	x2, x2, #0xd68
    c224:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c228:	str	x0, [sp, #56]
    c22c:	mov	x1, x0
    c230:	cbz	x0, c204 <PySequence_Fast@plt+0x7fc4>
    c234:	ldr	x3, [x21, #24]
    c238:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x13790>
    c23c:	add	x2, x2, #0x320
    c240:	add	x2, x2, #0x358
    c244:	ldr	x4, [x3, #8]
    c248:	cmp	x4, x2
    c24c:	b.eq	c2ec <PySequence_Fast@plt+0x80ac>  // b.none
    c250:	ldr	x19, [x21, #72]
    c254:	cbz	x19, c2cc <PySequence_Fast@plt+0x808c>
    c258:	ldr	x0, [x19, #8]
    c25c:	ldr	x1, [x0, #168]
    c260:	ldr	x0, [x0, #56]
    c264:	tbz	w1, #11, c2fc <PySequence_Fast@plt+0x80bc>
    c268:	ldr	x4, [x19, x0]
    c26c:	cbz	x4, c2fc <PySequence_Fast@plt+0x80bc>
    c270:	mov	x3, #0x0                   	// #0
    c274:	add	x1, sp, #0x38
    c278:	mov	x0, x19
    c27c:	mov	x2, #0x1                   	// #1
    c280:	blr	x4
    c284:	mov	x1, x0
    c288:	mov	x2, #0x0                   	// #0
    c28c:	mov	x0, x19
    c290:	bl	4020 <_Py_CheckFunctionResult@plt>
    c294:	mov	x19, x0
    c298:	ldr	x0, [sp, #56]
    c29c:	ldr	x1, [x0]
    c2a0:	sub	x1, x1, #0x1
    c2a4:	str	x1, [x0]
    c2a8:	cbz	x1, c2e4 <PySequence_Fast@plt+0x80a4>
    c2ac:	cbz	x19, c204 <PySequence_Fast@plt+0x7fc4>
    c2b0:	ldr	x0, [x19]
    c2b4:	sub	x0, x0, #0x1
    c2b8:	str	x0, [x19]
    c2bc:	cbnz	x0, c204 <PySequence_Fast@plt+0x7fc4>
    c2c0:	mov	x0, x19
    c2c4:	bl	3d70 <_Py_Dealloc@plt>
    c2c8:	b	c204 <PySequence_Fast@plt+0x7fc4>
    c2cc:	ldr	x2, [x0]
    c2d0:	sub	x2, x2, #0x1
    c2d4:	str	x2, [x0]
    c2d8:	cbnz	x2, c204 <PySequence_Fast@plt+0x7fc4>
    c2dc:	bl	3d70 <_Py_Dealloc@plt>
    c2e0:	b	c204 <PySequence_Fast@plt+0x7fc4>
    c2e4:	bl	3d70 <_Py_Dealloc@plt>
    c2e8:	b	c2ac <PySequence_Fast@plt+0x806c>
    c2ec:	mov	x0, x3
    c2f0:	bl	47f8 <PySequence_Fast@plt+0x5b8>
    c2f4:	mov	x19, x0
    c2f8:	b	c298 <PySequence_Fast@plt+0x8058>
    c2fc:	mov	x0, x19
    c300:	add	x1, sp, #0x38
    c304:	mov	x3, #0x0                   	// #0
    c308:	mov	x2, #0x1                   	// #1
    c30c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c310:	mov	x19, x0
    c314:	b	c298 <PySequence_Fast@plt+0x8058>
    c318:	stp	x29, x30, [sp, #-48]!
    c31c:	mov	x29, sp
    c320:	stp	x19, x20, [sp, #16]
    c324:	mov	x20, x0
    c328:	mov	x19, x1
    c32c:	bl	3f80 <PyErr_Occurred@plt>
    c330:	cbz	x0, c340 <PySequence_Fast@plt+0x8100>
    c334:	ldp	x19, x20, [sp, #16]
    c338:	ldp	x29, x30, [sp], #48
    c33c:	ret
    c340:	ldr	x0, [x20, #24]
    c344:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    c348:	add	x1, x1, #0x320
    c34c:	cmp	x19, #0x0
    c350:	add	x1, x1, #0x358
    c354:	adrp	x2, d000 <PyInit__elementtree@@Base+0x790>
    c358:	ldr	x3, [x0, #8]
    c35c:	add	x2, x2, #0x510
    c360:	csel	x19, x2, x19, eq  // eq = none
    c364:	cmp	x3, x1
    c368:	b.eq	c410 <PySequence_Fast@plt+0x81d0>  // b.none
    c36c:	ldr	x0, [x20, #56]
    c370:	cbz	x0, c334 <PySequence_Fast@plt+0x80f4>
    c374:	mov	x0, x19
    c378:	bl	3c70 <strlen@plt>
    c37c:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    c380:	mov	x1, x0
    c384:	add	x2, x2, #0xd68
    c388:	mov	x0, x19
    c38c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c390:	str	x0, [sp, #40]
    c394:	cbz	x0, c334 <PySequence_Fast@plt+0x80f4>
    c398:	ldr	x19, [x20, #56]
    c39c:	ldr	x0, [x19, #8]
    c3a0:	ldr	x1, [x0, #168]
    c3a4:	ldr	x0, [x0, #56]
    c3a8:	tbz	w1, #11, c454 <PySequence_Fast@plt+0x8214>
    c3ac:	ldr	x4, [x19, x0]
    c3b0:	cbz	x4, c454 <PySequence_Fast@plt+0x8214>
    c3b4:	mov	x3, #0x0                   	// #0
    c3b8:	add	x1, sp, #0x28
    c3bc:	mov	x0, x19
    c3c0:	mov	x2, #0x1                   	// #1
    c3c4:	blr	x4
    c3c8:	mov	x1, x0
    c3cc:	mov	x2, #0x0                   	// #0
    c3d0:	mov	x0, x19
    c3d4:	bl	4020 <_Py_CheckFunctionResult@plt>
    c3d8:	mov	x19, x0
    c3dc:	ldr	x0, [sp, #40]
    c3e0:	ldr	x1, [x0]
    c3e4:	sub	x1, x1, #0x1
    c3e8:	str	x1, [x0]
    c3ec:	cbz	x1, c44c <PySequence_Fast@plt+0x820c>
    c3f0:	cbz	x19, c334 <PySequence_Fast@plt+0x80f4>
    c3f4:	ldr	x0, [x19]
    c3f8:	sub	x0, x0, #0x1
    c3fc:	str	x0, [x19]
    c400:	cbnz	x0, c334 <PySequence_Fast@plt+0x80f4>
    c404:	mov	x0, x19
    c408:	bl	3d70 <_Py_Dealloc@plt>
    c40c:	b	c334 <PySequence_Fast@plt+0x80f4>
    c410:	ldr	x1, [x0, #96]
    c414:	cbz	x1, c334 <PySequence_Fast@plt+0x80f4>
    c418:	ldr	x1, [x0, #128]
    c41c:	cbz	x1, c334 <PySequence_Fast@plt+0x80f4>
    c420:	adrp	x20, 1f000 <PyInit__elementtree@@Base+0x12790>
    c424:	add	x0, x0, #0x60
    c428:	ldr	x20, [x20, #3976]
    c42c:	mov	x2, x20
    c430:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    c434:	tbnz	w0, #31, c334 <PySequence_Fast@plt+0x80f4>
    c438:	ldr	x0, [x20]
    c43c:	mov	x19, x20
    c440:	add	x1, x0, #0x1
    c444:	str	x1, [x20]
    c448:	b	c3fc <PySequence_Fast@plt+0x81bc>
    c44c:	bl	3d70 <_Py_Dealloc@plt>
    c450:	b	c3f0 <PySequence_Fast@plt+0x81b0>
    c454:	mov	x0, x19
    c458:	add	x1, sp, #0x28
    c45c:	mov	x3, #0x0                   	// #0
    c460:	mov	x2, #0x1                   	// #1
    c464:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c468:	mov	x19, x0
    c46c:	b	c3dc <PySequence_Fast@plt+0x819c>
    c470:	stp	x29, x30, [sp, #-64]!
    c474:	mov	x29, sp
    c478:	stp	x19, x20, [sp, #16]
    c47c:	mov	x20, x0
    c480:	mov	x19, x1
    c484:	bl	3f80 <PyErr_Occurred@plt>
    c488:	cbz	x0, c498 <PySequence_Fast@plt+0x8258>
    c48c:	ldp	x19, x20, [sp, #16]
    c490:	ldp	x29, x30, [sp], #64
    c494:	ret
    c498:	str	x21, [sp, #32]
    c49c:	adrp	x2, 20000 <PyInit__elementtree@@Base+0x13790>
    c4a0:	ldr	x21, [x20, #24]
    c4a4:	add	x2, x2, #0x320
    c4a8:	add	x2, x2, #0x358
    c4ac:	ldr	x0, [x21, #8]
    c4b0:	cmp	x0, x2
    c4b4:	b.eq	c568 <PySequence_Fast@plt+0x8328>  // b.none
    c4b8:	ldr	x0, [x20, #88]
    c4bc:	cbz	x0, c558 <PySequence_Fast@plt+0x8318>
    c4c0:	mov	x0, x19
    c4c4:	bl	3c70 <strlen@plt>
    c4c8:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    c4cc:	mov	x1, x0
    c4d0:	add	x2, x2, #0xd68
    c4d4:	mov	x0, x19
    c4d8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c4dc:	str	x0, [sp, #56]
    c4e0:	cbz	x0, c558 <PySequence_Fast@plt+0x8318>
    c4e4:	ldr	x19, [x20, #88]
    c4e8:	ldr	x0, [x19, #8]
    c4ec:	ldr	x1, [x0, #168]
    c4f0:	ldr	x0, [x0, #56]
    c4f4:	tbz	w1, #11, c5b4 <PySequence_Fast@plt+0x8374>
    c4f8:	ldr	x4, [x19, x0]
    c4fc:	cbz	x4, c5b4 <PySequence_Fast@plt+0x8374>
    c500:	mov	x3, #0x0                   	// #0
    c504:	add	x1, sp, #0x38
    c508:	mov	x2, #0x1                   	// #1
    c50c:	mov	x0, x19
    c510:	blr	x4
    c514:	mov	x1, x0
    c518:	mov	x2, #0x0                   	// #0
    c51c:	mov	x0, x19
    c520:	bl	4020 <_Py_CheckFunctionResult@plt>
    c524:	cbz	x0, c538 <PySequence_Fast@plt+0x82f8>
    c528:	ldr	x1, [x0]
    c52c:	sub	x1, x1, #0x1
    c530:	str	x1, [x0]
    c534:	cbz	x1, c5ac <PySequence_Fast@plt+0x836c>
    c538:	ldr	x0, [sp, #56]
    c53c:	ldr	x1, [x0]
    c540:	sub	x1, x1, #0x1
    c544:	str	x1, [x0]
    c548:	cbnz	x1, c558 <PySequence_Fast@plt+0x8318>
    c54c:	bl	3d70 <_Py_Dealloc@plt>
    c550:	ldr	x21, [sp, #32]
    c554:	b	c48c <PySequence_Fast@plt+0x824c>
    c558:	ldp	x19, x20, [sp, #16]
    c55c:	ldr	x21, [sp, #32]
    c560:	ldp	x29, x30, [sp], #64
    c564:	ret
    c568:	mov	x0, x19
    c56c:	bl	3c70 <strlen@plt>
    c570:	adrp	x2, c000 <PySequence_Fast@plt+0x7dc0>
    c574:	mov	x1, x0
    c578:	add	x2, x2, #0xd68
    c57c:	mov	x0, x19
    c580:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c584:	str	x0, [sp, #56]
    c588:	mov	x1, x0
    c58c:	cbz	x0, c558 <PySequence_Fast@plt+0x8318>
    c590:	mov	x0, x21
    c594:	bl	b310 <PySequence_Fast@plt+0x70d0>
    c598:	cbz	x0, c538 <PySequence_Fast@plt+0x82f8>
    c59c:	ldr	x2, [x0]
    c5a0:	sub	x2, x2, #0x1
    c5a4:	str	x2, [x0]
    c5a8:	cbnz	x2, c538 <PySequence_Fast@plt+0x82f8>
    c5ac:	bl	3d70 <_Py_Dealloc@plt>
    c5b0:	b	c538 <PySequence_Fast@plt+0x82f8>
    c5b4:	mov	x0, x19
    c5b8:	add	x1, sp, #0x38
    c5bc:	mov	x3, #0x0                   	// #0
    c5c0:	mov	x2, #0x1                   	// #1
    c5c4:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c5c8:	b	c524 <PySequence_Fast@plt+0x82e4>
    c5cc:	nop
    c5d0:	stp	x29, x30, [sp, #-80]!
    c5d4:	mov	x29, sp
    c5d8:	stp	x19, x20, [sp, #16]
    c5dc:	mov	x19, x1
    c5e0:	mov	x20, x2
    c5e4:	stp	x21, x22, [sp, #32]
    c5e8:	mov	x21, x0
    c5ec:	bl	3f80 <PyErr_Occurred@plt>
    c5f0:	cbz	x0, c604 <PySequence_Fast@plt+0x83c4>
    c5f4:	ldp	x19, x20, [sp, #16]
    c5f8:	ldp	x21, x22, [sp, #32]
    c5fc:	ldp	x29, x30, [sp], #80
    c600:	ret
    c604:	str	x23, [sp, #48]
    c608:	mov	x22, x0
    c60c:	ldr	x23, [x21, #24]
    c610:	cmp	x20, #0x0
    c614:	adrp	x2, d000 <PyInit__elementtree@@Base+0x790>
    c618:	adrp	x1, 20000 <PyInit__elementtree@@Base+0x13790>
    c61c:	add	x2, x2, #0x510
    c620:	add	x1, x1, #0x320
    c624:	ldr	x0, [x23, #8]
    c628:	csel	x20, x2, x20, eq  // eq = none
    c62c:	add	x1, x1, #0x358
    c630:	cmp	x19, #0x0
    c634:	csel	x19, x2, x19, eq  // eq = none
    c638:	cmp	x0, x1
    c63c:	b.eq	c720 <PySequence_Fast@plt+0x84e0>  // b.none
    c640:	ldr	x0, [x21, #48]
    c644:	cbz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c648:	mov	x0, x19
    c64c:	adrp	x22, c000 <PySequence_Fast@plt+0x7dc0>
    c650:	bl	3c70 <strlen@plt>
    c654:	add	x22, x22, #0xd68
    c658:	mov	x1, x0
    c65c:	mov	x2, x22
    c660:	mov	x0, x19
    c664:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c668:	mov	x19, x0
    c66c:	cbz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c670:	mov	x0, x20
    c674:	bl	3c70 <strlen@plt>
    c678:	mov	x2, x22
    c67c:	mov	x1, x0
    c680:	mov	x0, x20
    c684:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c688:	mov	x20, x0
    c68c:	cbz	x0, c800 <PySequence_Fast@plt+0x85c0>
    c690:	ldr	x21, [x21, #48]
    c694:	ldr	x0, [x21, #8]
    c698:	stp	x19, x20, [sp, #64]
    c69c:	ldr	x1, [x0, #168]
    c6a0:	ldr	x0, [x0, #56]
    c6a4:	tbz	w1, #11, c82c <PySequence_Fast@plt+0x85ec>
    c6a8:	ldr	x4, [x21, x0]
    c6ac:	cbz	x4, c82c <PySequence_Fast@plt+0x85ec>
    c6b0:	mov	x3, #0x0                   	// #0
    c6b4:	add	x1, sp, #0x40
    c6b8:	mov	x2, #0x2                   	// #2
    c6bc:	mov	x0, x21
    c6c0:	blr	x4
    c6c4:	mov	x1, x0
    c6c8:	mov	x2, #0x0                   	// #0
    c6cc:	mov	x0, x21
    c6d0:	bl	4020 <_Py_CheckFunctionResult@plt>
    c6d4:	mov	x22, x0
    c6d8:	ldr	x0, [x20]
    c6dc:	sub	x0, x0, #0x1
    c6e0:	str	x0, [x20]
    c6e4:	cbz	x0, c820 <PySequence_Fast@plt+0x85e0>
    c6e8:	ldr	x0, [x19]
    c6ec:	sub	x0, x0, #0x1
    c6f0:	str	x0, [x19]
    c6f4:	cbz	x0, c7e4 <PySequence_Fast@plt+0x85a4>
    c6f8:	cbz	x22, c70c <PySequence_Fast@plt+0x84cc>
    c6fc:	ldr	x0, [x22]
    c700:	sub	x0, x0, #0x1
    c704:	str	x0, [x22]
    c708:	cbz	x0, c7f0 <PySequence_Fast@plt+0x85b0>
    c70c:	ldp	x19, x20, [sp, #16]
    c710:	ldp	x21, x22, [sp, #32]
    c714:	ldr	x23, [sp, #48]
    c718:	ldp	x29, x30, [sp], #80
    c71c:	ret
    c720:	ldr	x0, [x23, #96]
    c724:	cbz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c728:	ldr	x0, [x23, #120]
    c72c:	cbz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c730:	mov	x0, x19
    c734:	adrp	x21, c000 <PySequence_Fast@plt+0x7dc0>
    c738:	bl	3c70 <strlen@plt>
    c73c:	add	x21, x21, #0xd68
    c740:	mov	x1, x0
    c744:	mov	x2, x21
    c748:	mov	x0, x19
    c74c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c750:	mov	x19, x0
    c754:	cbz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c758:	mov	x0, x20
    c75c:	bl	3c70 <strlen@plt>
    c760:	mov	x2, x21
    c764:	mov	x1, x0
    c768:	mov	x0, x20
    c76c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c770:	mov	x20, x0
    c774:	cbz	x0, c800 <PySequence_Fast@plt+0x85c0>
    c778:	ldr	x0, [x23, #96]
    c77c:	cbz	x0, c7c8 <PySequence_Fast@plt+0x8588>
    c780:	ldr	x0, [x23, #120]
    c784:	cbz	x0, c7c8 <PySequence_Fast@plt+0x8588>
    c788:	mov	x2, x20
    c78c:	mov	x1, x19
    c790:	mov	x0, #0x2                   	// #2
    c794:	bl	4210 <PyTuple_Pack@plt>
    c798:	mov	x21, x0
    c79c:	cbz	x0, c6d8 <PySequence_Fast@plt+0x8498>
    c7a0:	ldr	x1, [x23, #120]
    c7a4:	cbz	x1, c7b8 <PySequence_Fast@plt+0x8578>
    c7a8:	add	x0, x23, #0x60
    c7ac:	mov	x2, x21
    c7b0:	bl	a3e8 <PySequence_Fast@plt+0x61a8>
    c7b4:	tbnz	w0, #31, c854 <PySequence_Fast@plt+0x8614>
    c7b8:	ldr	x0, [x21]
    c7bc:	sub	x0, x0, #0x1
    c7c0:	str	x0, [x21]
    c7c4:	cbz	x0, c848 <PySequence_Fast@plt+0x8608>
    c7c8:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    c7cc:	ldr	x0, [x0, #3976]
    c7d0:	mov	x22, x0
    c7d4:	ldr	x1, [x0]
    c7d8:	add	x1, x1, #0x1
    c7dc:	str	x1, [x0]
    c7e0:	b	c6d8 <PySequence_Fast@plt+0x8498>
    c7e4:	mov	x0, x19
    c7e8:	bl	3d70 <_Py_Dealloc@plt>
    c7ec:	b	c6f8 <PySequence_Fast@plt+0x84b8>
    c7f0:	mov	x0, x22
    c7f4:	bl	3d70 <_Py_Dealloc@plt>
    c7f8:	ldr	x23, [sp, #48]
    c7fc:	b	c5f4 <PySequence_Fast@plt+0x83b4>
    c800:	ldr	x0, [x19]
    c804:	sub	x0, x0, #0x1
    c808:	str	x0, [x19]
    c80c:	cbnz	x0, c70c <PySequence_Fast@plt+0x84cc>
    c810:	mov	x0, x19
    c814:	bl	3d70 <_Py_Dealloc@plt>
    c818:	ldr	x23, [sp, #48]
    c81c:	b	c5f4 <PySequence_Fast@plt+0x83b4>
    c820:	mov	x0, x20
    c824:	bl	3d70 <_Py_Dealloc@plt>
    c828:	b	c6e8 <PySequence_Fast@plt+0x84a8>
    c82c:	mov	x0, x21
    c830:	add	x1, sp, #0x40
    c834:	mov	x3, #0x0                   	// #0
    c838:	mov	x2, #0x2                   	// #2
    c83c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c840:	mov	x22, x0
    c844:	b	c6d8 <PySequence_Fast@plt+0x8498>
    c848:	mov	x0, x21
    c84c:	bl	3d70 <_Py_Dealloc@plt>
    c850:	b	c7c8 <PySequence_Fast@plt+0x8588>
    c854:	ldr	x0, [x21]
    c858:	sub	x0, x0, #0x1
    c85c:	str	x0, [x21]
    c860:	cbnz	x0, c6d8 <PySequence_Fast@plt+0x8498>
    c864:	mov	x0, x21
    c868:	bl	3d70 <_Py_Dealloc@plt>
    c86c:	b	c6d8 <PySequence_Fast@plt+0x8498>

000000000000c870 <PyInit__elementtree@@Base>:
    c870:	stp	x29, x30, [sp, #-64]!
    c874:	mov	x29, sp
    c878:	stp	x19, x20, [sp, #16]
    c87c:	adrp	x20, 20000 <PyInit__elementtree@@Base+0x13790>
    c880:	add	x20, x20, #0x9b8
    c884:	add	x20, x20, #0x40
    c888:	mov	x0, x20
    c88c:	bl	3fc0 <PyState_FindModule@plt>
    c890:	mov	x19, x0
    c894:	cbz	x0, c8b4 <PyInit__elementtree@@Base+0x44>
    c898:	ldr	x0, [x0]
    c89c:	add	x0, x0, #0x1
    c8a0:	str	x0, [x19]
    c8a4:	mov	x0, x19
    c8a8:	ldp	x19, x20, [sp, #16]
    c8ac:	ldp	x29, x30, [sp], #64
    c8b0:	ret
    c8b4:	stp	x21, x22, [sp, #32]
    c8b8:	adrp	x22, 20000 <PyInit__elementtree@@Base+0x13790>
    c8bc:	add	x21, x22, #0x320
    c8c0:	add	x0, x21, #0x1a0
    c8c4:	bl	3e90 <PyType_Ready@plt>
    c8c8:	tbnz	w0, #31, ca70 <PyInit__elementtree@@Base+0x200>
    c8cc:	add	x0, x21, #0x358
    c8d0:	bl	3e90 <PyType_Ready@plt>
    c8d4:	tbnz	w0, #31, ca70 <PyInit__elementtree@@Base+0x200>
    c8d8:	mov	x0, x21
    c8dc:	bl	3e90 <PyType_Ready@plt>
    c8e0:	tbnz	w0, #31, ca70 <PyInit__elementtree@@Base+0x200>
    c8e4:	add	x0, x21, #0x4f8
    c8e8:	bl	3e90 <PyType_Ready@plt>
    c8ec:	tbnz	w0, #31, ca70 <PyInit__elementtree@@Base+0x200>
    c8f0:	mov	x0, x20
    c8f4:	mov	w1, #0x3f5                 	// #1013
    c8f8:	bl	3f90 <PyModule_Create2@plt>
    c8fc:	mov	x21, x0
    c900:	cbz	x0, ca70 <PyInit__elementtree@@Base+0x200>
    c904:	str	x23, [sp, #48]
    c908:	bl	3e10 <PyModule_GetState@plt>
    c90c:	mov	x23, x0
    c910:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    c914:	add	x0, x0, #0x208
    c918:	bl	3fa0 <PyImport_ImportModule@plt>
    c91c:	mov	x20, x0
    c920:	cbz	x0, ca94 <PyInit__elementtree@@Base+0x224>
    c924:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    c928:	add	x1, x1, #0x210
    c92c:	bl	3d00 <PyObject_GetAttrString@plt>
    c930:	ldr	x1, [x20]
    c934:	str	x0, [x23, #8]
    c938:	sub	x1, x1, #0x1
    c93c:	str	x1, [x20]
    c940:	cbz	x1, ca84 <PyInit__elementtree@@Base+0x214>
    c944:	cbz	x0, ca94 <PyInit__elementtree@@Base+0x224>
    c948:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    c94c:	add	x0, x0, #0x220
    c950:	bl	3fa0 <PyImport_ImportModule@plt>
    c954:	str	x0, [x23, #16]
    c958:	cbz	x0, ca94 <PyInit__elementtree@@Base+0x224>
    c95c:	mov	w1, #0x0                   	// #0
    c960:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    c964:	add	x0, x0, #0x238
    c968:	bl	3e80 <PyCapsule_Import@plt>
    c96c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x14790>
    c970:	mov	x20, x0
    c974:	str	x0, [x1, #1072]
    c978:	cbz	x0, ca94 <PyInit__elementtree@@Base+0x224>
    c97c:	ldr	x0, [x0]
    c980:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    c984:	add	x1, x1, #0x250
    c988:	bl	3ff0 <strcmp@plt>
    c98c:	cbnz	w0, caa0 <PyInit__elementtree@@Base+0x230>
    c990:	ldr	w0, [x20, #8]
    c994:	cmp	w0, #0xaf
    c998:	b.ls	caa0 <PyInit__elementtree@@Base+0x230>  // b.plast
    c99c:	ldr	w0, [x20, #12]
    c9a0:	cmp	w0, #0x2
    c9a4:	b.ne	caa0 <PyInit__elementtree@@Base+0x230>  // b.any
    c9a8:	ldr	x1, [x20, #16]
    c9ac:	mov	x0, #0x2                   	// #2
    c9b0:	movk	x0, #0x9, lsl #32
    c9b4:	cmp	x1, x0
    c9b8:	b.ne	caa0 <PyInit__elementtree@@Base+0x230>  // b.any
    c9bc:	adrp	x1, 1f000 <PyInit__elementtree@@Base+0x12790>
    c9c0:	mov	x2, #0x0                   	// #0
    c9c4:	adrp	x0, d000 <PyInit__elementtree@@Base+0x790>
    c9c8:	add	x0, x0, #0x288
    c9cc:	ldr	x1, [x1, #4056]
    c9d0:	add	x20, x22, #0x320
    c9d4:	mov	x19, x21
    c9d8:	ldr	x1, [x1]
    c9dc:	bl	3ee0 <PyErr_NewException@plt>
    c9e0:	mov	x2, x0
    c9e4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    c9e8:	mov	x0, x21
    c9ec:	add	x1, x1, #0x2b0
    c9f0:	ldr	x3, [x2]
    c9f4:	str	x2, [x23]
    c9f8:	add	x3, x3, #0x1
    c9fc:	str	x3, [x2]
    ca00:	bl	4120 <PyModule_AddObject@plt>
    ca04:	ldr	x3, [x22, #800]
    ca08:	mov	x2, x20
    ca0c:	mov	x0, x21
    ca10:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ca14:	add	x3, x3, #0x1
    ca18:	add	x1, x1, #0x2c0
    ca1c:	str	x3, [x22, #800]
    ca20:	bl	4120 <PyModule_AddObject@plt>
    ca24:	ldr	x3, [x20, #856]
    ca28:	add	x2, x20, #0x358
    ca2c:	mov	x0, x21
    ca30:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    ca34:	add	x3, x3, #0x1
    ca38:	str	x3, [x20, #856]
    ca3c:	add	x1, x1, #0x2c8
    ca40:	bl	4120 <PyModule_AddObject@plt>
    ca44:	ldr	x3, [x20, #1272]
    ca48:	mov	x0, x21
    ca4c:	add	x2, x20, #0x4f8
    ca50:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    ca54:	add	x3, x3, #0x1
    ca58:	str	x3, [x20, #1272]
    ca5c:	add	x1, x1, #0xe40
    ca60:	bl	4120 <PyModule_AddObject@plt>
    ca64:	ldp	x21, x22, [sp, #32]
    ca68:	ldr	x23, [sp, #48]
    ca6c:	b	c8a4 <PyInit__elementtree@@Base+0x34>
    ca70:	mov	x0, x19
    ca74:	ldp	x19, x20, [sp, #16]
    ca78:	ldp	x21, x22, [sp, #32]
    ca7c:	ldp	x29, x30, [sp], #64
    ca80:	ret
    ca84:	mov	x0, x20
    ca88:	bl	3d70 <_Py_Dealloc@plt>
    ca8c:	ldr	x0, [x23, #8]
    ca90:	b	c944 <PyInit__elementtree@@Base+0xd4>
    ca94:	ldp	x21, x22, [sp, #32]
    ca98:	ldr	x23, [sp, #48]
    ca9c:	b	c8a4 <PyInit__elementtree@@Base+0x34>
    caa0:	adrp	x0, 1f000 <PyInit__elementtree@@Base+0x12790>
    caa4:	adrp	x1, d000 <PyInit__elementtree@@Base+0x790>
    caa8:	add	x1, x1, #0x268
    caac:	ldr	x0, [x0, #4000]
    cab0:	ldr	x0, [x0]
    cab4:	bl	3de0 <PyErr_SetString@plt>
    cab8:	ldp	x21, x22, [sp, #32]
    cabc:	ldr	x23, [sp, #48]
    cac0:	b	c8a4 <PyInit__elementtree@@Base+0x34>

Disassembly of section .fini:

000000000000cac4 <.fini>:
    cac4:	stp	x29, x30, [sp, #-16]!
    cac8:	mov	x29, sp
    cacc:	ldp	x29, x30, [sp], #16
    cad0:	ret
