
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 17000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 17000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0xd4>:
    2940:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    295c:	add	x0, x0, #0x928
    2960:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2964:	add	x1, x1, #0x928
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    298c:	add	x0, x0, #0x928
    2990:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2994:	add	x1, x1, #0x928
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29d8:	ldrb	w0, [x19, #2344]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    29f0:	ldr	x0, [x0, #552]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2344]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>

0000000000002a14 <PyInit__xxsubinterpreters@@Base>:
    2a14:	stp	x29, x30, [sp, #-48]!
    2a18:	str	x21, [sp, #16]
    2a1c:	stp	x20, x19, [sp, #32]
    2a20:	mov	x29, sp
    2a24:	bl	2af4 <PyInit__xxsubinterpreters@@Base+0xe0>
    2a28:	cbnz	w0, 2a3c <PyInit__xxsubinterpreters@@Base+0x28>
    2a2c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a30:	add	x0, x0, #0x230
    2a34:	bl	26c0 <PyType_Ready@plt>
    2a38:	cbz	w0, 2a50 <PyInit__xxsubinterpreters@@Base+0x3c>
    2a3c:	mov	x0, xzr
    2a40:	ldp	x20, x19, [sp, #32]
    2a44:	ldr	x21, [sp, #16]
    2a48:	ldp	x29, x30, [sp], #48
    2a4c:	ret
    2a50:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a54:	add	x0, x0, #0x3d0
    2a58:	mov	w1, #0x3f5                 	// #1013
    2a5c:	bl	2740 <PyModule_Create2@plt>
    2a60:	cbz	x0, 2a40 <PyInit__xxsubinterpreters@@Base+0x2c>
    2a64:	mov	x19, x0
    2a68:	bl	28d0 <PyModule_GetDict@plt>
    2a6c:	mov	x20, x0
    2a70:	bl	2b10 <PyInit__xxsubinterpreters@@Base+0xfc>
    2a74:	cbnz	w0, 2a3c <PyInit__xxsubinterpreters@@Base+0x28>
    2a78:	mov	x0, x20
    2a7c:	bl	2b80 <PyInit__xxsubinterpreters@@Base+0x16c>
    2a80:	cbnz	w0, 2a3c <PyInit__xxsubinterpreters@@Base+0x28>
    2a84:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2a88:	add	x21, x21, #0x230
    2a8c:	mov	x0, x21
    2a90:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    2a94:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2a98:	add	x1, x1, #0x7ef
    2a9c:	mov	x0, x20
    2aa0:	mov	x2, x21
    2aa4:	bl	2510 <PyDict_SetItemString@plt>
    2aa8:	cbnz	w0, 2a3c <PyInit__xxsubinterpreters@@Base+0x28>
    2aac:	adrp	x21, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2ab0:	ldr	x21, [x21, #3984]
    2ab4:	mov	x0, x21
    2ab8:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    2abc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2ac0:	add	x1, x1, #0x7a0
    2ac4:	mov	x0, x20
    2ac8:	mov	x2, x21
    2acc:	bl	2510 <PyDict_SetItemString@plt>
    2ad0:	cbnz	w0, 2a3c <PyInit__xxsubinterpreters@@Base+0x28>
    2ad4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ad8:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2adc:	add	x0, x0, #0x230
    2ae0:	add	x1, x1, #0xcd8
    2ae4:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    2ae8:	cmp	w0, #0x0
    2aec:	csel	x0, x19, xzr, eq  // eq = none
    2af0:	b	2a40 <PyInit__xxsubinterpreters@@Base+0x2c>
    2af4:	stp	x29, x30, [sp, #-16]!
    2af8:	mov	x29, sp
    2afc:	bl	2d4c <PyInit__xxsubinterpreters@@Base+0x338>
    2b00:	cmp	w0, #0x0
    2b04:	csetm	w0, ne  // ne = any
    2b08:	ldp	x29, x30, [sp], #16
    2b0c:	ret
    2b10:	stp	x29, x30, [sp, #-32]!
    2b14:	stp	x20, x19, [sp, #16]
    2b18:	mov	x29, sp
    2b1c:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2b20:	ldr	x8, [x20, #2400]
    2b24:	cbz	x8, 2b30 <PyInit__xxsubinterpreters@@Base+0x11c>
    2b28:	mov	w0, wzr
    2b2c:	b	2b74 <PyInit__xxsubinterpreters@@Base+0x160>
    2b30:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2b34:	ldr	x8, [x8, #4000]
    2b38:	mov	x19, x0
    2b3c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b40:	add	x0, x0, #0xcab
    2b44:	ldr	x1, [x8]
    2b48:	mov	x2, xzr
    2b4c:	bl	26e0 <PyErr_NewException@plt>
    2b50:	str	x0, [x20, #2400]
    2b54:	cbz	x0, 2b70 <PyInit__xxsubinterpreters@@Base+0x15c>
    2b58:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b5c:	mov	x2, x0
    2b60:	add	x1, x1, #0xcbe
    2b64:	mov	x0, x19
    2b68:	bl	2510 <PyDict_SetItemString@plt>
    2b6c:	cbz	w0, 2b28 <PyInit__xxsubinterpreters@@Base+0x114>
    2b70:	mov	w0, #0xffffffff            	// #-1
    2b74:	ldp	x20, x19, [sp, #16]
    2b78:	ldp	x29, x30, [sp], #32
    2b7c:	ret
    2b80:	stp	x29, x30, [sp, #-32]!
    2b84:	stp	x20, x19, [sp, #16]
    2b88:	mov	x29, sp
    2b8c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2b90:	ldr	x8, [x8, #4000]
    2b94:	mov	x19, x0
    2b98:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2b9c:	add	x0, x0, #0xccd
    2ba0:	ldr	x1, [x8]
    2ba4:	mov	x2, xzr
    2ba8:	bl	26e0 <PyErr_NewException@plt>
    2bac:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2bb0:	str	x0, [x20, #2384]
    2bb4:	cbz	x0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2bb8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2bbc:	mov	x2, x0
    2bc0:	add	x1, x1, #0xce0
    2bc4:	mov	x0, x19
    2bc8:	bl	2510 <PyDict_SetItemString@plt>
    2bcc:	cbz	w0, 2be0 <PyInit__xxsubinterpreters@@Base+0x1cc>
    2bd0:	mov	w0, #0xffffffff            	// #-1
    2bd4:	ldp	x20, x19, [sp, #16]
    2bd8:	ldp	x29, x30, [sp], #32
    2bdc:	ret
    2be0:	ldr	x1, [x20, #2384]
    2be4:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2be8:	add	x0, x0, #0xced
    2bec:	mov	x2, xzr
    2bf0:	bl	26e0 <PyErr_NewException@plt>
    2bf4:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2bf8:	str	x0, [x8, #2392]
    2bfc:	cbz	x0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c00:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c04:	mov	x2, x0
    2c08:	add	x1, x1, #0xd00
    2c0c:	mov	x0, x19
    2c10:	bl	2510 <PyDict_SetItemString@plt>
    2c14:	cbnz	w0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c18:	ldr	x1, [x20, #2384]
    2c1c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c20:	add	x0, x0, #0xd15
    2c24:	mov	x2, xzr
    2c28:	bl	26e0 <PyErr_NewException@plt>
    2c2c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c30:	str	x0, [x8, #2408]
    2c34:	cbz	x0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c38:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c3c:	mov	x2, x0
    2c40:	add	x1, x1, #0xd28
    2c44:	mov	x0, x19
    2c48:	bl	2510 <PyDict_SetItemString@plt>
    2c4c:	cbnz	w0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c50:	ldr	x1, [x20, #2384]
    2c54:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c58:	add	x0, x0, #0xd3b
    2c5c:	mov	x2, xzr
    2c60:	bl	26e0 <PyErr_NewException@plt>
    2c64:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2c68:	str	x0, [x8, #2416]
    2c6c:	cbz	x0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c70:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c74:	mov	x2, x0
    2c78:	add	x1, x1, #0xd4e
    2c7c:	mov	x0, x19
    2c80:	bl	2510 <PyDict_SetItemString@plt>
    2c84:	cbnz	w0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2c88:	ldr	x1, [x20, #2384]
    2c8c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2c90:	add	x0, x0, #0xd60
    2c94:	mov	x2, xzr
    2c98:	bl	26e0 <PyErr_NewException@plt>
    2c9c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ca0:	str	x0, [x8, #2424]
    2ca4:	cbz	x0, 2bd0 <PyInit__xxsubinterpreters@@Base+0x1bc>
    2ca8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2cac:	mov	x2, x0
    2cb0:	add	x1, x1, #0xd73
    2cb4:	mov	x0, x19
    2cb8:	bl	2510 <PyDict_SetItemString@plt>
    2cbc:	cmp	w0, #0x0
    2cc0:	csetm	w0, ne  // ne = any
    2cc4:	b	2bd4 <PyInit__xxsubinterpreters@@Base+0x1c0>
    2cc8:	ldr	x8, [x0]
    2ccc:	add	x8, x8, #0x1
    2cd0:	str	x8, [x0]
    2cd4:	ret
    2cd8:	stp	x29, x30, [sp, #-32]!
    2cdc:	stp	x20, x19, [sp, #16]
    2ce0:	mov	x29, sp
    2ce4:	mov	x20, x0
    2ce8:	mov	w0, #0x10                  	// #16
    2cec:	mov	x19, x1
    2cf0:	bl	2910 <PyMem_Malloc@plt>
    2cf4:	cbz	x0, 2d3c <PyInit__xxsubinterpreters@@Base+0x328>
    2cf8:	ldr	x8, [x20, #16]
    2cfc:	str	x8, [x0]
    2d00:	ldr	w8, [x20, #24]
    2d04:	str	w8, [x0, #8]
    2d08:	ldr	w8, [x20, #28]
    2d0c:	str	w8, [x0, #12]
    2d10:	str	x0, [x19]
    2d14:	mov	x0, x20
    2d18:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    2d1c:	str	x20, [x19, #8]
    2d20:	adrp	x9, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2d24:	ldr	x9, [x9, #3960]
    2d28:	adrp	x8, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2d2c:	mov	w0, wzr
    2d30:	add	x8, x8, #0x668
    2d34:	stp	x8, x9, [x19, #24]
    2d38:	b	2d40 <PyInit__xxsubinterpreters@@Base+0x32c>
    2d3c:	mov	w0, #0xffffffff            	// #-1
    2d40:	ldp	x20, x19, [sp, #16]
    2d44:	ldp	x29, x30, [sp], #32
    2d48:	ret
    2d4c:	stp	x29, x30, [sp, #-32]!
    2d50:	str	x19, [sp, #16]
    2d54:	mov	x29, sp
    2d58:	adrp	x19, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2d5c:	ldr	x8, [x19, #2352]
    2d60:	cbnz	x8, 2d70 <PyInit__xxsubinterpreters@@Base+0x35c>
    2d64:	bl	2790 <PyThread_allocate_lock@plt>
    2d68:	str	x0, [x19, #2352]
    2d6c:	cbz	x0, 2d90 <PyInit__xxsubinterpreters@@Base+0x37c>
    2d70:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2d74:	mov	w0, wzr
    2d78:	add	x8, x8, #0x938
    2d7c:	stp	xzr, xzr, [x8]
    2d80:	str	xzr, [x8, #16]
    2d84:	ldr	x19, [sp, #16]
    2d88:	ldp	x29, x30, [sp], #32
    2d8c:	ret
    2d90:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2d94:	ldr	x0, [x8, #2384]
    2d98:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2d9c:	add	x1, x1, #0x7ae
    2da0:	bl	2670 <PyErr_SetString@plt>
    2da4:	mov	w0, #0xffffffff            	// #-1
    2da8:	b	2d84 <PyInit__xxsubinterpreters@@Base+0x370>
    2dac:	stp	x29, x30, [sp, #-32]!
    2db0:	stp	x20, x19, [sp, #16]
    2db4:	mov	x29, sp
    2db8:	ldp	x8, x19, [x0, #8]
    2dbc:	ldr	x20, [x0, #32]
    2dc0:	ldr	x8, [x8, #320]
    2dc4:	blr	x8
    2dc8:	mov	x0, x20
    2dcc:	mov	x1, x19
    2dd0:	bl	3038 <PyInit__xxsubinterpreters@@Base+0x624>
    2dd4:	ldp	x20, x19, [sp, #16]
    2dd8:	ldp	x29, x30, [sp], #32
    2ddc:	ret
    2de0:	stp	x29, x30, [sp, #-32]!
    2de4:	str	x19, [sp, #16]
    2de8:	mov	x29, sp
    2dec:	mov	x19, x0
    2df0:	ldr	x0, [x0, #8]
    2df4:	bl	2630 <_PyType_Name@plt>
    2df8:	ldr	w8, [x19, #24]
    2dfc:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e00:	adrp	x10, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e04:	ldr	x2, [x19, #16]
    2e08:	add	x9, x9, #0x81f
    2e0c:	add	x10, x10, #0x80c
    2e10:	adrp	x11, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e14:	cmn	w8, #0x1
    2e18:	add	x11, x11, #0x7f9
    2e1c:	csel	x9, x10, x9, eq  // eq = none
    2e20:	cmp	w8, #0x1
    2e24:	mov	x1, x0
    2e28:	csel	x0, x11, x9, eq  // eq = none
    2e2c:	bl	24f0 <PyUnicode_FromFormat@plt>
    2e30:	ldr	x19, [sp, #16]
    2e34:	ldp	x29, x30, [sp], #32
    2e38:	ret
    2e3c:	stp	x29, x30, [sp, #-32]!
    2e40:	stp	x20, x19, [sp, #16]
    2e44:	mov	x29, sp
    2e48:	ldr	x0, [x0, #16]
    2e4c:	bl	28e0 <PyLong_FromLongLong@plt>
    2e50:	cbz	x0, 2e6c <PyInit__xxsubinterpreters@@Base+0x458>
    2e54:	mov	x20, x0
    2e58:	bl	27a0 <PyObject_Hash@plt>
    2e5c:	mov	x19, x0
    2e60:	mov	x0, x20
    2e64:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    2e68:	b	2e70 <PyInit__xxsubinterpreters@@Base+0x45c>
    2e6c:	mov	x19, #0xffffffffffffffff    	// #-1
    2e70:	mov	x0, x19
    2e74:	ldp	x20, x19, [sp, #16]
    2e78:	ldp	x29, x30, [sp], #32
    2e7c:	ret
    2e80:	stp	x29, x30, [sp, #-16]!
    2e84:	mov	x29, sp
    2e88:	ldr	x1, [x0, #16]
    2e8c:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    2e90:	add	x0, x0, #0x827
    2e94:	bl	24f0 <PyUnicode_FromFormat@plt>
    2e98:	ldp	x29, x30, [sp], #16
    2e9c:	ret
    2ea0:	sub	sp, sp, #0x40
    2ea4:	stp	x29, x30, [sp, #16]
    2ea8:	stp	x22, x21, [sp, #32]
    2eac:	stp	x20, x19, [sp, #48]
    2eb0:	add	x29, sp, #0x10
    2eb4:	orr	w8, w2, #0x1
    2eb8:	cmp	w8, #0x3
    2ebc:	b.ne	2fb8 <PyInit__xxsubinterpreters@@Base+0x5a4>  // b.any
    2ec0:	mov	x20, x0
    2ec4:	ldr	x0, [x0, #8]
    2ec8:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ecc:	add	x22, x22, #0x230
    2ed0:	mov	w19, w2
    2ed4:	mov	x21, x1
    2ed8:	cmp	x0, x22
    2edc:	b.eq	2ef0 <PyInit__xxsubinterpreters@@Base+0x4dc>  // b.none
    2ee0:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2ee4:	add	x1, x1, #0x230
    2ee8:	bl	28a0 <PyType_IsSubtype@plt>
    2eec:	cbz	w0, 2fb8 <PyInit__xxsubinterpreters@@Base+0x5a4>
    2ef0:	ldr	x0, [x21, #8]
    2ef4:	cmp	x0, x22
    2ef8:	b.eq	2f0c <PyInit__xxsubinterpreters@@Base+0x4f8>  // b.none
    2efc:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    2f00:	add	x1, x1, #0x230
    2f04:	bl	28a0 <PyType_IsSubtype@plt>
    2f08:	cbz	w0, 2f74 <PyInit__xxsubinterpreters@@Base+0x560>
    2f0c:	ldr	w8, [x20, #24]
    2f10:	ldr	w9, [x21, #24]
    2f14:	cmp	w8, w9
    2f18:	b.ne	2f30 <PyInit__xxsubinterpreters@@Base+0x51c>  // b.any
    2f1c:	ldr	x8, [x20, #16]
    2f20:	ldr	x9, [x21, #16]
    2f24:	cmp	x8, x9
    2f28:	cset	w8, eq  // eq = none
    2f2c:	b	2f34 <PyInit__xxsubinterpreters@@Base+0x520>
    2f30:	mov	w8, wzr
    2f34:	cmp	w19, #0x3
    2f38:	cset	w9, ne  // ne = any
    2f3c:	cmp	w19, #0x2
    2f40:	cset	w10, eq  // eq = none
    2f44:	cmp	w8, #0x0
    2f48:	cset	w8, ne  // ne = any
    2f4c:	and	w10, w10, w8
    2f50:	orr	w8, w9, w8
    2f54:	cmp	w10, w8
    2f58:	b.eq	2f68 <PyInit__xxsubinterpreters@@Base+0x554>  // b.none
    2f5c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f60:	ldr	x19, [x19, #4032]
    2f64:	b	2fc0 <PyInit__xxsubinterpreters@@Base+0x5ac>
    2f68:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2f6c:	ldr	x19, [x19, #4056]
    2f70:	b	2fc0 <PyInit__xxsubinterpreters@@Base+0x5ac>
    2f74:	ldr	x8, [x21, #8]
    2f78:	ldrb	w8, [x8, #171]
    2f7c:	tbnz	w8, #0, 2fe0 <PyInit__xxsubinterpreters@@Base+0x5cc>
    2f80:	mov	x0, x21
    2f84:	bl	2880 <PyNumber_Check@plt>
    2f88:	cbz	w0, 2fb8 <PyInit__xxsubinterpreters@@Base+0x5a4>
    2f8c:	ldr	x0, [x20, #16]
    2f90:	bl	28e0 <PyLong_FromLongLong@plt>
    2f94:	cbz	x0, 3030 <PyInit__xxsubinterpreters@@Base+0x61c>
    2f98:	mov	x1, x21
    2f9c:	mov	w2, w19
    2fa0:	mov	x20, x0
    2fa4:	bl	2650 <PyObject_RichCompare@plt>
    2fa8:	mov	x19, x0
    2fac:	mov	x0, x20
    2fb0:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    2fb4:	b	2fc8 <PyInit__xxsubinterpreters@@Base+0x5b4>
    2fb8:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    2fbc:	ldr	x19, [x19, #3992]
    2fc0:	mov	x0, x19
    2fc4:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    2fc8:	mov	x0, x19
    2fcc:	ldp	x20, x19, [sp, #48]
    2fd0:	ldp	x22, x21, [sp, #32]
    2fd4:	ldp	x29, x30, [sp, #16]
    2fd8:	add	sp, sp, #0x40
    2fdc:	ret
    2fe0:	sub	x1, x29, #0x4
    2fe4:	mov	x0, x21
    2fe8:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    2fec:	mov	x21, x0
    2ff0:	cmn	x0, #0x1
    2ff4:	b.eq	3020 <PyInit__xxsubinterpreters@@Base+0x60c>  // b.none
    2ff8:	mov	w8, wzr
    2ffc:	mov	w9, #0x1                   	// #1
    3000:	tbnz	x21, #63, 302c <PyInit__xxsubinterpreters@@Base+0x618>
    3004:	ldur	w10, [x29, #-4]
    3008:	cbnz	w10, 302c <PyInit__xxsubinterpreters@@Base+0x618>
    300c:	ldr	x8, [x20, #16]
    3010:	mov	w9, #0x1                   	// #1
    3014:	cmp	x8, x21
    3018:	cset	w8, eq  // eq = none
    301c:	b	302c <PyInit__xxsubinterpreters@@Base+0x618>
    3020:	bl	2730 <PyErr_Occurred@plt>
    3024:	cbz	x0, 2ff8 <PyInit__xxsubinterpreters@@Base+0x5e4>
    3028:	mov	w9, wzr
    302c:	tbnz	w9, #0, 2f34 <PyInit__xxsubinterpreters@@Base+0x520>
    3030:	mov	x19, xzr
    3034:	b	2fc8 <PyInit__xxsubinterpreters@@Base+0x5b4>
    3038:	sub	sp, sp, #0x30
    303c:	stp	x29, x30, [sp, #16]
    3040:	stp	x20, x19, [sp, #32]
    3044:	add	x29, sp, #0x10
    3048:	mov	x19, x0
    304c:	ldr	x0, [x0]
    3050:	mov	x20, x1
    3054:	mov	w1, #0x1                   	// #1
    3058:	bl	2640 <PyThread_acquire_lock@plt>
    305c:	str	xzr, [sp, #8]
    3060:	ldr	x0, [x19, #8]
    3064:	add	x2, sp, #0x8
    3068:	mov	x1, x20
    306c:	bl	30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    3070:	cbz	x0, 30a8 <PyInit__xxsubinterpreters@@Base+0x694>
    3074:	ldr	x8, [x0, #24]
    3078:	mov	x1, x0
    307c:	subs	x8, x8, #0x1
    3080:	str	x8, [x0, #24]
    3084:	b.ne	30a8 <PyInit__xxsubinterpreters@@Base+0x694>  // b.any
    3088:	ldr	x2, [sp, #8]
    308c:	mov	x3, sp
    3090:	mov	x0, x19
    3094:	str	xzr, [sp]
    3098:	bl	30fc <PyInit__xxsubinterpreters@@Base+0x6e8>
    309c:	ldr	x0, [sp]
    30a0:	cbz	x0, 30a8 <PyInit__xxsubinterpreters@@Base+0x694>
    30a4:	bl	3144 <PyInit__xxsubinterpreters@@Base+0x730>
    30a8:	ldr	x0, [x19]
    30ac:	bl	27b0 <PyThread_release_lock@plt>
    30b0:	ldp	x20, x19, [sp, #32]
    30b4:	ldp	x29, x30, [sp, #16]
    30b8:	add	sp, sp, #0x30
    30bc:	ret
    30c0:	cbz	x0, 30d0 <PyInit__xxsubinterpreters@@Base+0x6bc>
    30c4:	ldr	x8, [x0]
    30c8:	cmp	x8, x1
    30cc:	b.ne	30e0 <PyInit__xxsubinterpreters@@Base+0x6cc>  // b.any
    30d0:	mov	x8, xzr
    30d4:	cbz	x2, 30dc <PyInit__xxsubinterpreters@@Base+0x6c8>
    30d8:	str	x8, [x2]
    30dc:	ret
    30e0:	mov	x8, x0
    30e4:	ldr	x0, [x0, #16]
    30e8:	cbz	x0, 30d4 <PyInit__xxsubinterpreters@@Base+0x6c0>
    30ec:	ldr	x9, [x0]
    30f0:	cmp	x9, x1
    30f4:	b.ne	30e0 <PyInit__xxsubinterpreters@@Base+0x6cc>  // b.any
    30f8:	b	30d4 <PyInit__xxsubinterpreters@@Base+0x6c0>
    30fc:	stp	x29, x30, [sp, #-16]!
    3100:	mov	x29, sp
    3104:	ldr	x9, [x0, #8]!
    3108:	ldr	x10, [x1, #16]
    310c:	add	x8, x2, #0x10
    3110:	cmp	x9, x1
    3114:	csel	x8, x0, x8, eq  // eq = none
    3118:	str	x10, [x8]
    311c:	ldr	x8, [x0, #8]
    3120:	sub	x8, x8, #0x1
    3124:	str	x8, [x0, #8]
    3128:	cbz	x3, 3134 <PyInit__xxsubinterpreters@@Base+0x720>
    312c:	ldr	x8, [x1, #8]
    3130:	str	x8, [x3]
    3134:	mov	x0, x1
    3138:	bl	3198 <PyInit__xxsubinterpreters@@Base+0x784>
    313c:	ldp	x29, x30, [sp], #16
    3140:	ret
    3144:	stp	x29, x30, [sp, #-32]!
    3148:	str	x19, [sp, #16]
    314c:	mov	x29, sp
    3150:	mov	x19, x0
    3154:	bl	31c8 <PyInit__xxsubinterpreters@@Base+0x7b4>
    3158:	ldr	x0, [x19]
    315c:	mov	w1, #0x1                   	// #1
    3160:	bl	2640 <PyThread_acquire_lock@plt>
    3164:	ldr	x0, [x19, #8]
    3168:	bl	3208 <PyInit__xxsubinterpreters@@Base+0x7f4>
    316c:	ldr	x0, [x19, #16]
    3170:	bl	3230 <PyInit__xxsubinterpreters@@Base+0x81c>
    3174:	ldr	x0, [x19]
    3178:	bl	27b0 <PyThread_release_lock@plt>
    317c:	ldr	x0, [x19]
    3180:	bl	2930 <PyThread_free_lock@plt>
    3184:	mov	x0, x19
    3188:	bl	2590 <PyMem_Free@plt>
    318c:	ldr	x19, [sp, #16]
    3190:	ldp	x29, x30, [sp], #32
    3194:	ret
    3198:	stp	x29, x30, [sp, #-32]!
    319c:	str	x19, [sp, #16]
    31a0:	mov	x29, sp
    31a4:	mov	x19, x0
    31a8:	ldr	x0, [x0, #8]
    31ac:	cbz	x0, 31b4 <PyInit__xxsubinterpreters@@Base+0x7a0>
    31b0:	bl	31c8 <PyInit__xxsubinterpreters@@Base+0x7b4>
    31b4:	mov	x0, x19
    31b8:	bl	2590 <PyMem_Free@plt>
    31bc:	ldr	x19, [sp, #16]
    31c0:	ldp	x29, x30, [sp], #32
    31c4:	ret
    31c8:	stp	x29, x30, [sp, #-32]!
    31cc:	str	x19, [sp, #16]
    31d0:	mov	x29, sp
    31d4:	mov	x19, x0
    31d8:	ldr	x0, [x0]
    31dc:	mov	w1, #0x1                   	// #1
    31e0:	bl	2640 <PyThread_acquire_lock@plt>
    31e4:	ldr	x0, [x19, #32]
    31e8:	cbz	x0, 31f4 <PyInit__xxsubinterpreters@@Base+0x7e0>
    31ec:	bl	2590 <PyMem_Free@plt>
    31f0:	str	xzr, [x19, #32]
    31f4:	ldr	x0, [x19]
    31f8:	bl	27b0 <PyThread_release_lock@plt>
    31fc:	ldr	x19, [sp, #16]
    3200:	ldp	x29, x30, [sp], #32
    3204:	ret
    3208:	stp	x29, x30, [sp, #-32]!
    320c:	str	x19, [sp, #16]
    3210:	mov	x29, sp
    3214:	mov	x19, x0
    3218:	bl	3258 <PyInit__xxsubinterpreters@@Base+0x844>
    321c:	mov	x0, x19
    3220:	bl	2590 <PyMem_Free@plt>
    3224:	ldr	x19, [sp, #16]
    3228:	ldp	x29, x30, [sp], #32
    322c:	ret
    3230:	stp	x29, x30, [sp, #-32]!
    3234:	str	x19, [sp, #16]
    3238:	mov	x29, sp
    323c:	mov	x19, x0
    3240:	bl	3310 <PyInit__xxsubinterpreters@@Base+0x8fc>
    3244:	mov	x0, x19
    3248:	bl	2590 <PyMem_Free@plt>
    324c:	ldr	x19, [sp, #16]
    3250:	ldp	x29, x30, [sp], #32
    3254:	ret
    3258:	stp	x29, x30, [sp, #-32]!
    325c:	str	x19, [sp, #16]
    3260:	mov	x29, sp
    3264:	mov	x19, x0
    3268:	ldr	x0, [x0, #8]
    326c:	bl	3284 <PyInit__xxsubinterpreters@@Base+0x870>
    3270:	stp	xzr, xzr, [x19]
    3274:	str	xzr, [x19, #16]
    3278:	ldr	x19, [sp, #16]
    327c:	ldp	x29, x30, [sp], #32
    3280:	ret
    3284:	stp	x29, x30, [sp, #-32]!
    3288:	str	x19, [sp, #16]
    328c:	mov	x29, sp
    3290:	cbz	x0, 32a4 <PyInit__xxsubinterpreters@@Base+0x890>
    3294:	ldr	x19, [x0, #8]
    3298:	bl	32b0 <PyInit__xxsubinterpreters@@Base+0x89c>
    329c:	mov	x0, x19
    32a0:	cbnz	x19, 3294 <PyInit__xxsubinterpreters@@Base+0x880>
    32a4:	ldr	x19, [sp, #16]
    32a8:	ldp	x29, x30, [sp], #32
    32ac:	ret
    32b0:	stp	x29, x30, [sp, #-32]!
    32b4:	str	x19, [sp, #16]
    32b8:	mov	x29, sp
    32bc:	mov	x19, x0
    32c0:	bl	32d8 <PyInit__xxsubinterpreters@@Base+0x8c4>
    32c4:	mov	x0, x19
    32c8:	bl	2590 <PyMem_Free@plt>
    32cc:	ldr	x19, [sp, #16]
    32d0:	ldp	x29, x30, [sp], #32
    32d4:	ret
    32d8:	stp	x29, x30, [sp, #-32]!
    32dc:	str	x19, [sp, #16]
    32e0:	mov	x29, sp
    32e4:	mov	x19, x0
    32e8:	ldr	x0, [x0]
    32ec:	cbz	x0, 3300 <PyInit__xxsubinterpreters@@Base+0x8ec>
    32f0:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    32f4:	ldr	x0, [x19]
    32f8:	bl	2590 <PyMem_Free@plt>
    32fc:	str	xzr, [x19]
    3300:	str	xzr, [x19, #8]
    3304:	ldr	x19, [sp, #16]
    3308:	ldp	x29, x30, [sp], #32
    330c:	ret
    3310:	stp	x29, x30, [sp, #-32]!
    3314:	str	x19, [sp, #16]
    3318:	mov	x29, sp
    331c:	mov	x19, x0
    3320:	ldr	x0, [x0, #16]
    3324:	bl	334c <PyInit__xxsubinterpreters@@Base+0x938>
    3328:	ldr	x0, [x19, #24]
    332c:	str	xzr, [x19, #16]
    3330:	str	xzr, [x19]
    3334:	bl	334c <PyInit__xxsubinterpreters@@Base+0x938>
    3338:	str	xzr, [x19, #24]
    333c:	str	xzr, [x19, #8]
    3340:	ldr	x19, [sp, #16]
    3344:	ldp	x29, x30, [sp], #32
    3348:	ret
    334c:	stp	x29, x30, [sp, #-32]!
    3350:	str	x19, [sp, #16]
    3354:	mov	x29, sp
    3358:	cbz	x0, 336c <PyInit__xxsubinterpreters@@Base+0x958>
    335c:	ldr	x19, [x0]
    3360:	bl	3378 <PyInit__xxsubinterpreters@@Base+0x964>
    3364:	mov	x0, x19
    3368:	cbnz	x19, 335c <PyInit__xxsubinterpreters@@Base+0x948>
    336c:	ldr	x19, [sp, #16]
    3370:	ldp	x29, x30, [sp], #32
    3374:	ret
    3378:	stp	x29, x30, [sp, #-16]!
    337c:	mov	x29, sp
    3380:	bl	2590 <PyMem_Free@plt>
    3384:	ldp	x29, x30, [sp], #16
    3388:	ret
    338c:	stp	x29, x30, [sp, #-16]!
    3390:	mov	x29, sp
    3394:	ldr	x0, [x0, #16]
    3398:	bl	28e0 <PyLong_FromLongLong@plt>
    339c:	ldp	x29, x30, [sp], #16
    33a0:	ret
    33a4:	stp	x29, x30, [sp, #-16]!
    33a8:	mov	x29, sp
    33ac:	ldr	x8, [x0]
    33b0:	subs	x8, x8, #0x1
    33b4:	str	x8, [x0]
    33b8:	b.eq	33c4 <PyInit__xxsubinterpreters@@Base+0x9b0>  // b.none
    33bc:	ldp	x29, x30, [sp], #16
    33c0:	ret
    33c4:	bl	25e0 <_Py_Dealloc@plt>
    33c8:	ldp	x29, x30, [sp], #16
    33cc:	ret
    33d0:	stp	x29, x30, [sp, #-16]!
    33d4:	mov	x29, sp
    33d8:	cbz	x1, 3404 <PyInit__xxsubinterpreters@@Base+0x9f0>
    33dc:	ldp	x8, x9, [x0, #8]
    33e0:	ldr	w2, [x1]
    33e4:	ldr	x3, [x0, #32]
    33e8:	ldr	w5, [x0, #28]
    33ec:	mov	w4, #0x1                   	// #1
    33f0:	mov	x0, x8
    33f4:	mov	x1, x9
    33f8:	bl	3444 <PyInit__xxsubinterpreters@@Base+0xa30>
    33fc:	ldp	x29, x30, [sp], #16
    3400:	ret
    3404:	ldr	w8, [x0, #24]
    3408:	cmn	w8, #0x1
    340c:	b.eq	3424 <PyInit__xxsubinterpreters@@Base+0xa10>  // b.none
    3410:	cmp	w8, #0x1
    3414:	b.ne	3430 <PyInit__xxsubinterpreters@@Base+0xa1c>  // b.any
    3418:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    341c:	add	x0, x0, #0xb99
    3420:	b	3438 <PyInit__xxsubinterpreters@@Base+0xa24>
    3424:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3428:	add	x0, x0, #0xbe2
    342c:	b	3438 <PyInit__xxsubinterpreters@@Base+0xa24>
    3430:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3434:	add	x0, x0, #0x881
    3438:	bl	2850 <PyUnicode_InternFromString@plt>
    343c:	ldp	x29, x30, [sp], #16
    3440:	ret
    3444:	stp	x29, x30, [sp, #-64]!
    3448:	stp	x24, x23, [sp, #16]
    344c:	stp	x22, x21, [sp, #32]
    3450:	stp	x20, x19, [sp, #48]
    3454:	mov	x29, sp
    3458:	mov	w23, w5
    345c:	mov	w20, w4
    3460:	mov	x21, x3
    3464:	mov	w24, w2
    3468:	mov	x22, x1
    346c:	bl	2830 <_PyObject_New@plt>
    3470:	mov	x19, x0
    3474:	cbz	x0, 34bc <PyInit__xxsubinterpreters@@Base+0xaa8>
    3478:	mov	x0, x21
    347c:	mov	x1, x22
    3480:	str	x22, [x19, #16]
    3484:	stp	w24, w23, [x19, #24]
    3488:	str	x21, [x19, #32]
    348c:	bl	34d4 <PyInit__xxsubinterpreters@@Base+0xac0>
    3490:	cbz	w0, 34bc <PyInit__xxsubinterpreters@@Base+0xaa8>
    3494:	cbz	w20, 34b0 <PyInit__xxsubinterpreters@@Base+0xa9c>
    3498:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    349c:	ldr	x0, [x8, #2392]
    34a0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    34a4:	cbz	w0, 34b0 <PyInit__xxsubinterpreters@@Base+0xa9c>
    34a8:	bl	26f0 <PyErr_Clear@plt>
    34ac:	b	34bc <PyInit__xxsubinterpreters@@Base+0xaa8>
    34b0:	mov	x0, x19
    34b4:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    34b8:	mov	x19, xzr
    34bc:	mov	x0, x19
    34c0:	ldp	x20, x19, [sp, #48]
    34c4:	ldp	x22, x21, [sp, #32]
    34c8:	ldp	x24, x23, [sp, #16]
    34cc:	ldp	x29, x30, [sp], #64
    34d0:	ret
    34d4:	stp	x29, x30, [sp, #-32]!
    34d8:	stp	x20, x19, [sp, #16]
    34dc:	mov	x29, sp
    34e0:	mov	x19, x0
    34e4:	ldr	x0, [x0]
    34e8:	mov	x20, x1
    34ec:	mov	w1, #0x1                   	// #1
    34f0:	bl	2640 <PyThread_acquire_lock@plt>
    34f4:	ldr	x0, [x19, #8]
    34f8:	mov	x1, x20
    34fc:	mov	x2, xzr
    3500:	bl	30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    3504:	cbz	x0, 351c <PyInit__xxsubinterpreters@@Base+0xb08>
    3508:	ldr	x8, [x0, #24]
    350c:	mov	w20, wzr
    3510:	add	x8, x8, #0x1
    3514:	str	x8, [x0, #24]
    3518:	b	3538 <PyInit__xxsubinterpreters@@Base+0xb24>
    351c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3520:	ldr	x0, [x8, #2392]
    3524:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3528:	add	x1, x1, #0x886
    352c:	mov	x2, x20
    3530:	bl	28c0 <PyErr_Format@plt>
    3534:	mov	w20, #0xffffffff            	// #-1
    3538:	ldr	x0, [x19]
    353c:	bl	27b0 <PyThread_release_lock@plt>
    3540:	mov	w0, w20
    3544:	ldp	x20, x19, [sp, #16]
    3548:	ldp	x29, x30, [sp], #32
    354c:	ret
    3550:	stp	x29, x30, [sp, #-32]!
    3554:	stp	x20, x19, [sp, #16]
    3558:	mov	x29, sp
    355c:	mov	x0, x1
    3560:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3564:	add	x1, x1, #0x8cc
    3568:	mov	x2, xzr
    356c:	mov	x3, xzr
    3570:	bl	2720 <PyArg_UnpackTuple@plt>
    3574:	cbz	w0, 35f0 <PyInit__xxsubinterpreters@@Base+0xbdc>
    3578:	mov	x0, xzr
    357c:	bl	2920 <PyThreadState_Swap@plt>
    3580:	mov	x20, x0
    3584:	bl	26b0 <Py_NewInterpreter@plt>
    3588:	mov	x19, x0
    358c:	mov	x0, x20
    3590:	bl	2920 <PyThreadState_Swap@plt>
    3594:	cbz	x19, 35b8 <PyInit__xxsubinterpreters@@Base+0xba4>
    3598:	ldr	x0, [x19, #16]
    359c:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    35a0:	cbz	x0, 35d4 <PyInit__xxsubinterpreters@@Base+0xbc0>
    35a4:	mov	x20, x0
    35a8:	ldr	x0, [x19, #16]
    35ac:	mov	w1, #0x1                   	// #1
    35b0:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    35b4:	b	35f4 <PyInit__xxsubinterpreters@@Base+0xbe0>
    35b8:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    35bc:	ldr	x8, [x8, #4000]
    35c0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    35c4:	add	x1, x1, #0x8f0
    35c8:	ldr	x0, [x8]
    35cc:	bl	2670 <PyErr_SetString@plt>
    35d0:	b	35f0 <PyInit__xxsubinterpreters@@Base+0xbdc>
    35d4:	mov	x0, x19
    35d8:	bl	2920 <PyThreadState_Swap@plt>
    35dc:	mov	x20, x0
    35e0:	mov	x0, x19
    35e4:	bl	25d0 <Py_EndInterpreter@plt>
    35e8:	mov	x0, x20
    35ec:	bl	2920 <PyThreadState_Swap@plt>
    35f0:	mov	x20, xzr
    35f4:	mov	x0, x20
    35f8:	ldp	x20, x19, [sp, #16]
    35fc:	ldp	x29, x30, [sp], #32
    3600:	ret
    3604:	sub	sp, sp, #0x30
    3608:	stp	x29, x30, [sp, #16]
    360c:	stp	x20, x19, [sp, #32]
    3610:	add	x29, sp, #0x10
    3614:	mov	x8, x2
    3618:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    361c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3620:	mov	x0, x1
    3624:	add	x2, x2, #0x90c
    3628:	add	x3, x3, #0x820
    362c:	add	x4, sp, #0x8
    3630:	mov	x1, x8
    3634:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3638:	cbz	w0, 36b8 <PyInit__xxsubinterpreters@@Base+0xca4>
    363c:	ldr	x0, [sp, #8]
    3640:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3644:	mov	x19, x0
    3648:	cbz	x0, 36bc <PyInit__xxsubinterpreters@@Base+0xca8>
    364c:	bl	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>
    3650:	cbz	x0, 36b8 <PyInit__xxsubinterpreters@@Base+0xca4>
    3654:	cmp	x19, x0
    3658:	b.eq	36a0 <PyInit__xxsubinterpreters@@Base+0xc8c>  // b.none
    365c:	mov	x0, x19
    3660:	bl	3d80 <PyInit__xxsubinterpreters@@Base+0x136c>
    3664:	tbnz	w0, #31, 36b8 <PyInit__xxsubinterpreters@@Base+0xca4>
    3668:	mov	x0, x19
    366c:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3670:	mov	x19, x0
    3674:	bl	2920 <PyThreadState_Swap@plt>
    3678:	mov	x20, x0
    367c:	mov	x0, x19
    3680:	bl	25d0 <Py_EndInterpreter@plt>
    3684:	mov	x0, x20
    3688:	bl	2920 <PyThreadState_Swap@plt>
    368c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3690:	ldr	x19, [x19, #4048]
    3694:	mov	x0, x19
    3698:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    369c:	b	36bc <PyInit__xxsubinterpreters@@Base+0xca8>
    36a0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    36a4:	ldr	x8, [x8, #4000]
    36a8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    36ac:	add	x1, x1, #0x916
    36b0:	ldr	x0, [x8]
    36b4:	bl	2670 <PyErr_SetString@plt>
    36b8:	mov	x19, xzr
    36bc:	mov	x0, x19
    36c0:	ldp	x20, x19, [sp, #32]
    36c4:	ldp	x29, x30, [sp, #16]
    36c8:	add	sp, sp, #0x30
    36cc:	ret
    36d0:	stp	x29, x30, [sp, #-48]!
    36d4:	stp	x22, x21, [sp, #16]
    36d8:	stp	x20, x19, [sp, #32]
    36dc:	mov	x29, sp
    36e0:	mov	x0, xzr
    36e4:	bl	2500 <PyList_New@plt>
    36e8:	mov	x19, x0
    36ec:	cbz	x0, 3764 <PyInit__xxsubinterpreters@@Base+0xd50>
    36f0:	bl	28f0 <PyInterpreterState_Head@plt>
    36f4:	mov	x20, x0
    36f8:	b	3710 <PyInit__xxsubinterpreters@@Base+0xcfc>
    36fc:	mov	x0, x20
    3700:	bl	25f0 <PyInterpreterState_Next@plt>
    3704:	mov	x20, x0
    3708:	mov	w8, #0x1                   	// #1
    370c:	tbz	w8, #0, 3760 <PyInit__xxsubinterpreters@@Base+0xd4c>
    3710:	cbz	x20, 3764 <PyInit__xxsubinterpreters@@Base+0xd50>
    3714:	mov	x0, x20
    3718:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    371c:	cbz	x0, 3758 <PyInit__xxsubinterpreters@@Base+0xd44>
    3720:	mov	x21, x0
    3724:	mov	x0, x19
    3728:	mov	x1, xzr
    372c:	mov	x2, x21
    3730:	bl	2580 <PyList_Insert@plt>
    3734:	mov	w22, w0
    3738:	mov	x0, x21
    373c:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    3740:	tbz	w22, #31, 36fc <PyInit__xxsubinterpreters@@Base+0xce8>
    3744:	mov	x0, x19
    3748:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    374c:	mov	w8, wzr
    3750:	tbnz	w8, #0, 3710 <PyInit__xxsubinterpreters@@Base+0xcfc>
    3754:	b	3760 <PyInit__xxsubinterpreters@@Base+0xd4c>
    3758:	mov	x0, x19
    375c:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    3760:	mov	x19, xzr
    3764:	mov	x0, x19
    3768:	ldp	x20, x19, [sp, #32]
    376c:	ldp	x22, x21, [sp, #16]
    3770:	ldp	x29, x30, [sp], #48
    3774:	ret
    3778:	stp	x29, x30, [sp, #-16]!
    377c:	mov	x29, sp
    3780:	bl	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>
    3784:	cbz	x0, 378c <PyInit__xxsubinterpreters@@Base+0xd78>
    3788:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    378c:	ldp	x29, x30, [sp], #16
    3790:	ret
    3794:	stp	x29, x30, [sp, #-16]!
    3798:	mov	x29, sp
    379c:	mov	x0, xzr
    37a0:	bl	2810 <_PyInterpreterID_New@plt>
    37a4:	ldp	x29, x30, [sp], #16
    37a8:	ret
    37ac:	stp	x29, x30, [sp, #-32]!
    37b0:	str	x19, [sp, #16]
    37b4:	mov	x29, sp
    37b8:	mov	x8, x2
    37bc:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    37c0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    37c4:	mov	x0, x1
    37c8:	add	x2, x2, #0x97e
    37cc:	add	x3, x3, #0x830
    37d0:	add	x4, x29, #0x18
    37d4:	mov	x1, x8
    37d8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    37dc:	cbz	w0, 3804 <PyInit__xxsubinterpreters@@Base+0xdf0>
    37e0:	ldr	x0, [x29, #24]
    37e4:	bl	2550 <_PyInterpreterID_LookUp@plt>
    37e8:	cbz	x0, 3804 <PyInit__xxsubinterpreters@@Base+0xdf0>
    37ec:	bl	3db8 <PyInit__xxsubinterpreters@@Base+0x13a4>
    37f0:	tbnz	w0, #31, 3804 <PyInit__xxsubinterpreters@@Base+0xdf0>
    37f4:	cbz	w0, 380c <PyInit__xxsubinterpreters@@Base+0xdf8>
    37f8:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    37fc:	ldr	x19, [x19, #4056]
    3800:	b	3814 <PyInit__xxsubinterpreters@@Base+0xe00>
    3804:	mov	x19, xzr
    3808:	b	381c <PyInit__xxsubinterpreters@@Base+0xe08>
    380c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3810:	ldr	x19, [x19, #4032]
    3814:	mov	x0, x19
    3818:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    381c:	mov	x0, x19
    3820:	ldr	x19, [sp, #16]
    3824:	ldp	x29, x30, [sp], #32
    3828:	ret
    382c:	sub	sp, sp, #0x40
    3830:	stp	x29, x30, [sp, #32]
    3834:	stp	x20, x19, [sp, #48]
    3838:	add	x29, sp, #0x20
    383c:	mov	x8, x2
    3840:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3844:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3848:	mov	x0, x1
    384c:	add	x2, x2, #0x999
    3850:	add	x3, x3, #0x840
    3854:	sub	x4, x29, #0x8
    3858:	add	x5, sp, #0x10
    385c:	add	x6, sp, #0x8
    3860:	mov	x1, x8
    3864:	str	xzr, [sp, #8]
    3868:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    386c:	cbz	w0, 38b8 <PyInit__xxsubinterpreters@@Base+0xea4>
    3870:	ldur	x0, [x29, #-8]
    3874:	bl	2550 <_PyInterpreterID_LookUp@plt>
    3878:	mov	x19, x0
    387c:	cbz	x0, 38bc <PyInit__xxsubinterpreters@@Base+0xea8>
    3880:	ldr	x0, [sp, #16]
    3884:	mov	x1, sp
    3888:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    388c:	cbz	x0, 38b8 <PyInit__xxsubinterpreters@@Base+0xea4>
    3890:	mov	x20, x0
    3894:	bl	2530 <strlen@plt>
    3898:	ldr	x8, [sp]
    389c:	cmp	x0, x8
    38a0:	b.ne	38d0 <PyInit__xxsubinterpreters@@Base+0xebc>  // b.any
    38a4:	ldr	x2, [sp, #8]
    38a8:	mov	x0, x19
    38ac:	mov	x1, x20
    38b0:	bl	3e1c <PyInit__xxsubinterpreters@@Base+0x1408>
    38b4:	cbz	w0, 38f0 <PyInit__xxsubinterpreters@@Base+0xedc>
    38b8:	mov	x19, xzr
    38bc:	mov	x0, x19
    38c0:	ldp	x20, x19, [sp, #48]
    38c4:	ldp	x29, x30, [sp, #32]
    38c8:	add	sp, sp, #0x40
    38cc:	ret
    38d0:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    38d4:	ldr	x8, [x8, #4016]
    38d8:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    38dc:	add	x1, x1, #0x9a9
    38e0:	ldr	x0, [x8]
    38e4:	bl	2670 <PyErr_SetString@plt>
    38e8:	mov	x19, xzr
    38ec:	b	38bc <PyInit__xxsubinterpreters@@Base+0xea8>
    38f0:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    38f4:	ldr	x19, [x19, #4048]
    38f8:	mov	x0, x19
    38fc:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    3900:	b	38bc <PyInit__xxsubinterpreters@@Base+0xea8>
    3904:	stp	x29, x30, [sp, #-32]!
    3908:	str	x19, [sp, #16]
    390c:	mov	x29, sp
    3910:	mov	x8, x2
    3914:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3918:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    391c:	mov	x0, x1
    3920:	add	x2, x2, #0xaba
    3924:	add	x3, x3, #0x860
    3928:	add	x4, x29, #0x18
    392c:	mov	x1, x8
    3930:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3934:	cbz	w0, 3954 <PyInit__xxsubinterpreters@@Base+0xf40>
    3938:	ldr	x0, [x29, #24]
    393c:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    3940:	cbz	w0, 395c <PyInit__xxsubinterpreters@@Base+0xf48>
    3944:	bl	26f0 <PyErr_Clear@plt>
    3948:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    394c:	ldr	x19, [x19, #4032]
    3950:	b	3964 <PyInit__xxsubinterpreters@@Base+0xf50>
    3954:	mov	x19, xzr
    3958:	b	396c <PyInit__xxsubinterpreters@@Base+0xf58>
    395c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3960:	ldr	x19, [x19, #4056]
    3964:	mov	x0, x19
    3968:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    396c:	mov	x0, x19
    3970:	ldr	x19, [sp, #16]
    3974:	ldp	x29, x30, [sp], #32
    3978:	ret
    397c:	stp	x29, x30, [sp, #-32]!
    3980:	str	x19, [sp, #16]
    3984:	mov	x29, sp
    3988:	bl	45b4 <PyInit__xxsubinterpreters@@Base+0x1ba0>
    398c:	tbnz	x0, #63, 39c4 <PyInit__xxsubinterpreters@@Base+0xfb0>
    3990:	mov	x19, x0
    3994:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3998:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    399c:	add	x0, x0, #0x230
    39a0:	add	x3, x3, #0x930
    39a4:	mov	x1, x19
    39a8:	mov	w2, wzr
    39ac:	mov	w4, wzr
    39b0:	mov	w5, wzr
    39b4:	bl	3444 <PyInit__xxsubinterpreters@@Base+0xa30>
    39b8:	cbnz	x0, 39c8 <PyInit__xxsubinterpreters@@Base+0xfb4>
    39bc:	mov	x0, x19
    39c0:	bl	45ec <PyInit__xxsubinterpreters@@Base+0x1bd8>
    39c4:	mov	x0, xzr
    39c8:	ldr	x19, [sp, #16]
    39cc:	ldp	x29, x30, [sp], #32
    39d0:	ret
    39d4:	stp	x29, x30, [sp, #-32]!
    39d8:	str	x19, [sp, #16]
    39dc:	mov	x29, sp
    39e0:	mov	x8, x2
    39e4:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    39e8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    39ec:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    39f0:	mov	x0, x1
    39f4:	add	x2, x2, #0xb0f
    39f8:	add	x3, x3, #0x870
    39fc:	add	x4, x4, #0x8b8
    3a00:	add	x5, x29, #0x18
    3a04:	mov	x1, x8
    3a08:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3a0c:	cbz	w0, 3a1c <PyInit__xxsubinterpreters@@Base+0x1008>
    3a10:	ldr	x0, [x29, #24]
    3a14:	bl	45ec <PyInit__xxsubinterpreters@@Base+0x1bd8>
    3a18:	cbz	w0, 3a24 <PyInit__xxsubinterpreters@@Base+0x1010>
    3a1c:	mov	x19, xzr
    3a20:	b	3a34 <PyInit__xxsubinterpreters@@Base+0x1020>
    3a24:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3a28:	ldr	x19, [x19, #4048]
    3a2c:	mov	x0, x19
    3a30:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    3a34:	mov	x0, x19
    3a38:	ldr	x19, [sp, #16]
    3a3c:	ldp	x29, x30, [sp], #32
    3a40:	ret
    3a44:	sub	sp, sp, #0x50
    3a48:	stp	x29, x30, [sp, #16]
    3a4c:	stp	x24, x23, [sp, #32]
    3a50:	stp	x22, x21, [sp, #48]
    3a54:	stp	x20, x19, [sp, #64]
    3a58:	add	x29, sp, #0x10
    3a5c:	add	x0, sp, #0x8
    3a60:	str	xzr, [sp, #8]
    3a64:	bl	498c <PyInit__xxsubinterpreters@@Base+0x1f78>
    3a68:	ldr	x21, [sp, #8]
    3a6c:	cbz	x0, 3b00 <PyInit__xxsubinterpreters@@Base+0x10ec>
    3a70:	mov	x19, x0
    3a74:	mov	x0, x21
    3a78:	bl	2500 <PyList_New@plt>
    3a7c:	mov	x20, x0
    3a80:	cbz	x0, 3af4 <PyInit__xxsubinterpreters@@Base+0x10e0>
    3a84:	cmp	x21, #0x1
    3a88:	b.lt	3af4 <PyInit__xxsubinterpreters@@Base+0x10e0>  // b.tstop
    3a8c:	adrp	x22, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3a90:	adrp	x23, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3a94:	mov	x24, xzr
    3a98:	add	x22, x22, #0x230
    3a9c:	add	x23, x23, #0x930
    3aa0:	ldr	x1, [x19, x24, lsl #3]
    3aa4:	mov	x0, x22
    3aa8:	mov	w2, wzr
    3aac:	mov	x3, x23
    3ab0:	mov	w4, wzr
    3ab4:	mov	w5, wzr
    3ab8:	bl	3444 <PyInit__xxsubinterpreters@@Base+0xa30>
    3abc:	cbz	x0, 3ad4 <PyInit__xxsubinterpreters@@Base+0x10c0>
    3ac0:	ldr	x8, [x20, #24]
    3ac4:	str	x0, [x8, x24, lsl #3]
    3ac8:	mov	w8, #0x1                   	// #1
    3acc:	cbnz	w8, 3ae8 <PyInit__xxsubinterpreters@@Base+0x10d4>
    3ad0:	b	3af4 <PyInit__xxsubinterpreters@@Base+0x10e0>
    3ad4:	mov	x0, x20
    3ad8:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    3adc:	mov	w8, wzr
    3ae0:	mov	x20, xzr
    3ae4:	cbz	w8, 3af4 <PyInit__xxsubinterpreters@@Base+0x10e0>
    3ae8:	add	x24, x24, #0x1
    3aec:	cmp	x21, x24
    3af0:	b.ne	3aa0 <PyInit__xxsubinterpreters@@Base+0x108c>  // b.any
    3af4:	mov	x0, x19
    3af8:	bl	2590 <PyMem_Free@plt>
    3afc:	b	3b18 <PyInit__xxsubinterpreters@@Base+0x1104>
    3b00:	cbz	x21, 3b0c <PyInit__xxsubinterpreters@@Base+0x10f8>
    3b04:	mov	x20, xzr
    3b08:	b	3b18 <PyInit__xxsubinterpreters@@Base+0x1104>
    3b0c:	mov	x0, xzr
    3b10:	bl	2500 <PyList_New@plt>
    3b14:	mov	x20, x0
    3b18:	mov	x0, x20
    3b1c:	ldp	x20, x19, [sp, #64]
    3b20:	ldp	x22, x21, [sp, #48]
    3b24:	ldp	x24, x23, [sp, #32]
    3b28:	ldp	x29, x30, [sp, #16]
    3b2c:	add	sp, sp, #0x50
    3b30:	ret
    3b34:	sub	sp, sp, #0x30
    3b38:	stp	x29, x30, [sp, #16]
    3b3c:	str	x19, [sp, #32]
    3b40:	add	x29, sp, #0x10
    3b44:	mov	x8, x2
    3b48:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3b4c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3b50:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3b54:	mov	x0, x1
    3b58:	add	x2, x2, #0xb8d
    3b5c:	add	x3, x3, #0x880
    3b60:	add	x4, x4, #0x8b8
    3b64:	add	x5, x29, #0x18
    3b68:	add	x6, sp, #0x8
    3b6c:	mov	x1, x8
    3b70:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3b74:	cbz	w0, 3b88 <PyInit__xxsubinterpreters@@Base+0x1174>
    3b78:	ldr	x0, [x29, #24]
    3b7c:	ldr	x1, [sp, #8]
    3b80:	bl	4a50 <PyInit__xxsubinterpreters@@Base+0x203c>
    3b84:	cbz	w0, 3b90 <PyInit__xxsubinterpreters@@Base+0x117c>
    3b88:	mov	x19, xzr
    3b8c:	b	3ba0 <PyInit__xxsubinterpreters@@Base+0x118c>
    3b90:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3b94:	ldr	x19, [x19, #4048]
    3b98:	mov	x0, x19
    3b9c:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    3ba0:	mov	x0, x19
    3ba4:	ldr	x19, [sp, #32]
    3ba8:	ldp	x29, x30, [sp, #16]
    3bac:	add	sp, sp, #0x30
    3bb0:	ret
    3bb4:	sub	sp, sp, #0x20
    3bb8:	stp	x29, x30, [sp, #16]
    3bbc:	add	x29, sp, #0x10
    3bc0:	mov	x8, x2
    3bc4:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3bc8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3bcc:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3bd0:	mov	x0, x1
    3bd4:	add	x2, x2, #0xbd7
    3bd8:	add	x3, x3, #0x898
    3bdc:	add	x4, x4, #0x8b8
    3be0:	add	x5, sp, #0x8
    3be4:	mov	x1, x8
    3be8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3bec:	cbz	w0, 3bfc <PyInit__xxsubinterpreters@@Base+0x11e8>
    3bf0:	ldr	x0, [sp, #8]
    3bf4:	bl	4eb4 <PyInit__xxsubinterpreters@@Base+0x24a0>
    3bf8:	b	3c00 <PyInit__xxsubinterpreters@@Base+0x11ec>
    3bfc:	mov	x0, xzr
    3c00:	ldp	x29, x30, [sp, #16]
    3c04:	add	sp, sp, #0x20
    3c08:	ret
    3c0c:	sub	sp, sp, #0x40
    3c10:	stp	x29, x30, [sp, #32]
    3c14:	str	x19, [sp, #48]
    3c18:	add	x29, sp, #0x20
    3c1c:	mov	x8, x2
    3c20:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3c24:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3c28:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3c2c:	mov	x0, x1
    3c30:	sub	x9, x29, #0xc
    3c34:	add	x2, x2, #0xc02
    3c38:	add	x3, x3, #0x8a8
    3c3c:	add	x4, x4, #0x8b8
    3c40:	add	x5, x29, #0x18
    3c44:	sub	x6, x29, #0x4
    3c48:	sub	x7, x29, #0x8
    3c4c:	mov	x1, x8
    3c50:	stur	xzr, [x29, #-8]
    3c54:	stur	wzr, [x29, #-12]
    3c58:	str	x9, [sp]
    3c5c:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3c60:	cbz	w0, 3c7c <PyInit__xxsubinterpreters@@Base+0x1268>
    3c64:	ldp	w9, w8, [x29, #-8]
    3c68:	ldr	x0, [x29, #24]
    3c6c:	ldur	w2, [x29, #-12]
    3c70:	sub	w1, w8, w9
    3c74:	bl	50c0 <PyInit__xxsubinterpreters@@Base+0x26ac>
    3c78:	cbz	w0, 3c84 <PyInit__xxsubinterpreters@@Base+0x1270>
    3c7c:	mov	x19, xzr
    3c80:	b	3c94 <PyInit__xxsubinterpreters@@Base+0x1280>
    3c84:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3c88:	ldr	x19, [x19, #4048]
    3c8c:	mov	x0, x19
    3c90:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    3c94:	mov	x0, x19
    3c98:	ldr	x19, [sp, #48]
    3c9c:	ldp	x29, x30, [sp, #32]
    3ca0:	add	sp, sp, #0x40
    3ca4:	ret
    3ca8:	sub	sp, sp, #0x40
    3cac:	stp	x29, x30, [sp, #32]
    3cb0:	str	x19, [sp, #48]
    3cb4:	add	x29, sp, #0x20
    3cb8:	mov	x8, x2
    3cbc:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3cc0:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3cc4:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    3cc8:	mov	x0, x1
    3ccc:	sub	x9, x29, #0xc
    3cd0:	add	x2, x2, #0xc48
    3cd4:	add	x3, x3, #0x8d0
    3cd8:	add	x4, x4, #0x8b8
    3cdc:	add	x5, x29, #0x18
    3ce0:	sub	x6, x29, #0x4
    3ce4:	sub	x7, x29, #0x8
    3ce8:	mov	x1, x8
    3cec:	stur	xzr, [x29, #-8]
    3cf0:	stur	wzr, [x29, #-12]
    3cf4:	str	x9, [sp]
    3cf8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3cfc:	cbz	w0, 3d24 <PyInit__xxsubinterpreters@@Base+0x1310>
    3d00:	ldp	w9, w8, [x29, #-8]
    3d04:	orr	w8, w9, w8
    3d08:	cbnz	w8, 3d14 <PyInit__xxsubinterpreters@@Base+0x1300>
    3d0c:	mov	w8, #0x1                   	// #1
    3d10:	stp	w8, w8, [x29, #-8]
    3d14:	ldr	x0, [x29, #24]
    3d18:	ldp	w2, w1, [x29, #-8]
    3d1c:	bl	5380 <PyInit__xxsubinterpreters@@Base+0x296c>
    3d20:	cbz	w0, 3d2c <PyInit__xxsubinterpreters@@Base+0x1318>
    3d24:	mov	x19, xzr
    3d28:	b	3d3c <PyInit__xxsubinterpreters@@Base+0x1328>
    3d2c:	adrp	x19, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d30:	ldr	x19, [x19, #4048]
    3d34:	mov	x0, x19
    3d38:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    3d3c:	mov	x0, x19
    3d40:	ldr	x19, [sp, #48]
    3d44:	ldp	x29, x30, [sp, #32]
    3d48:	add	sp, sp, #0x40
    3d4c:	ret
    3d50:	stp	x29, x30, [sp, #-16]!
    3d54:	mov	x29, sp
    3d58:	mov	x0, x1
    3d5c:	mov	x1, x2
    3d60:	bl	5594 <PyInit__xxsubinterpreters@@Base+0x2b80>
    3d64:	ldp	x29, x30, [sp], #16
    3d68:	ret
    3d6c:	stp	x29, x30, [sp, #-16]!
    3d70:	mov	x29, sp
    3d74:	bl	2800 <_PyInterpreterState_Get@plt>
    3d78:	ldp	x29, x30, [sp], #16
    3d7c:	ret
    3d80:	stp	x29, x30, [sp, #-16]!
    3d84:	mov	x29, sp
    3d88:	bl	3db8 <PyInit__xxsubinterpreters@@Base+0x13a4>
    3d8c:	tbnz	w0, #31, 3dac <PyInit__xxsubinterpreters@@Base+0x1398>
    3d90:	cbz	w0, 3db0 <PyInit__xxsubinterpreters@@Base+0x139c>
    3d94:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3d98:	ldr	x8, [x8, #4000]
    3d9c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3da0:	add	x1, x1, #0x93d
    3da4:	ldr	x0, [x8]
    3da8:	bl	28c0 <PyErr_Format@plt>
    3dac:	mov	w0, #0xffffffff            	// #-1
    3db0:	ldp	x29, x30, [sp], #16
    3db4:	ret
    3db8:	stp	x29, x30, [sp, #-32]!
    3dbc:	str	x19, [sp, #16]
    3dc0:	mov	x29, sp
    3dc4:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3dc8:	mov	x19, x0
    3dcc:	bl	2780 <PyThreadState_Next@plt>
    3dd0:	cbz	x0, 3df4 <PyInit__xxsubinterpreters@@Base+0x13e0>
    3dd4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3dd8:	ldr	x8, [x8, #4000]
    3ddc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    3de0:	add	x1, x1, #0x959
    3de4:	ldr	x0, [x8]
    3de8:	bl	2670 <PyErr_SetString@plt>
    3dec:	mov	w0, #0xffffffff            	// #-1
    3df0:	b	3e10 <PyInit__xxsubinterpreters@@Base+0x13fc>
    3df4:	ldr	x8, [x19, #24]
    3df8:	cbz	x8, 3e04 <PyInit__xxsubinterpreters@@Base+0x13f0>
    3dfc:	ldrb	w0, [x8, #116]
    3e00:	b	3e10 <PyInit__xxsubinterpreters@@Base+0x13fc>
    3e04:	bl	2730 <PyErr_Occurred@plt>
    3e08:	cmp	x0, #0x0
    3e0c:	csetm	w0, ne  // ne = any
    3e10:	ldr	x19, [sp, #16]
    3e14:	ldp	x29, x30, [sp], #32
    3e18:	ret
    3e1c:	sub	sp, sp, #0x40
    3e20:	stp	x29, x30, [sp, #16]
    3e24:	stp	x22, x21, [sp, #32]
    3e28:	stp	x20, x19, [sp, #48]
    3e2c:	add	x29, sp, #0x10
    3e30:	mov	x19, x2
    3e34:	mov	x20, x1
    3e38:	mov	x21, x0
    3e3c:	bl	3d80 <PyInit__xxsubinterpreters@@Base+0x136c>
    3e40:	tbnz	w0, #31, 3e7c <PyInit__xxsubinterpreters@@Base+0x1468>
    3e44:	mov	x0, x19
    3e48:	bl	3f00 <PyInit__xxsubinterpreters@@Base+0x14ec>
    3e4c:	mov	x19, x0
    3e50:	cbz	x0, 3e74 <PyInit__xxsubinterpreters@@Base+0x1460>
    3e54:	bl	2800 <_PyInterpreterState_Get@plt>
    3e58:	cmp	x0, x21
    3e5c:	b.eq	3e84 <PyInit__xxsubinterpreters@@Base+0x1470>  // b.none
    3e60:	mov	x0, x21
    3e64:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3e68:	bl	2920 <PyThreadState_Swap@plt>
    3e6c:	mov	x22, x0
    3e70:	b	3e88 <PyInit__xxsubinterpreters@@Base+0x1474>
    3e74:	bl	2730 <PyErr_Occurred@plt>
    3e78:	cbz	x0, 3e54 <PyInit__xxsubinterpreters@@Base+0x1440>
    3e7c:	mov	w20, #0xffffffff            	// #-1
    3e80:	b	3ee8 <PyInit__xxsubinterpreters@@Base+0x14d4>
    3e84:	mov	x22, xzr
    3e88:	add	x3, sp, #0x8
    3e8c:	mov	x0, x21
    3e90:	mov	x1, x20
    3e94:	mov	x2, x19
    3e98:	str	xzr, [sp, #8]
    3e9c:	bl	3fc4 <PyInit__xxsubinterpreters@@Base+0x15b0>
    3ea0:	mov	w20, w0
    3ea4:	cbz	x22, 3eb0 <PyInit__xxsubinterpreters@@Base+0x149c>
    3ea8:	mov	x0, x22
    3eac:	bl	2920 <PyThreadState_Swap@plt>
    3eb0:	ldr	x21, [sp, #8]
    3eb4:	cbz	x21, 3ed4 <PyInit__xxsubinterpreters@@Base+0x14c0>
    3eb8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    3ebc:	ldr	x1, [x8, #2400]
    3ec0:	mov	x0, x21
    3ec4:	bl	40fc <PyInit__xxsubinterpreters@@Base+0x16e8>
    3ec8:	mov	x0, x21
    3ecc:	bl	4150 <PyInit__xxsubinterpreters@@Base+0x173c>
    3ed0:	b	3edc <PyInit__xxsubinterpreters@@Base+0x14c8>
    3ed4:	cbz	w20, 3edc <PyInit__xxsubinterpreters@@Base+0x14c8>
    3ed8:	bl	2600 <PyErr_NoMemory@plt>
    3edc:	cbz	x19, 3ee8 <PyInit__xxsubinterpreters@@Base+0x14d4>
    3ee0:	mov	x0, x19
    3ee4:	bl	4178 <PyInit__xxsubinterpreters@@Base+0x1764>
    3ee8:	mov	w0, w20
    3eec:	ldp	x20, x19, [sp, #48]
    3ef0:	ldp	x22, x21, [sp, #32]
    3ef4:	ldp	x29, x30, [sp, #16]
    3ef8:	add	sp, sp, #0x40
    3efc:	ret
    3f00:	sub	sp, sp, #0x50
    3f04:	stp	x29, x30, [sp, #32]
    3f08:	stp	x22, x21, [sp, #48]
    3f0c:	stp	x20, x19, [sp, #64]
    3f10:	add	x29, sp, #0x20
    3f14:	mov	x19, xzr
    3f18:	cbz	x0, 3fac <PyInit__xxsubinterpreters@@Base+0x1598>
    3f1c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    3f20:	ldr	x8, [x8, #4048]
    3f24:	mov	x20, x0
    3f28:	cmp	x0, x8
    3f2c:	b.eq	3fac <PyInit__xxsubinterpreters@@Base+0x1598>  // b.none
    3f30:	mov	x0, x20
    3f34:	bl	2540 <PyDict_Size@plt>
    3f38:	cbz	x0, 3fa8 <PyInit__xxsubinterpreters@@Base+0x1594>
    3f3c:	mov	x21, x0
    3f40:	bl	41e0 <PyInit__xxsubinterpreters@@Base+0x17cc>
    3f44:	mov	x19, x0
    3f48:	cbz	x0, 3fac <PyInit__xxsubinterpreters@@Base+0x1598>
    3f4c:	subs	x8, x21, #0x1
    3f50:	stur	xzr, [x29, #-8]
    3f54:	b.lt	3f98 <PyInit__xxsubinterpreters@@Base+0x1584>  // b.tstop
    3f58:	mov	x21, xzr
    3f5c:	sub	x1, x29, #0x8
    3f60:	add	x2, sp, #0x10
    3f64:	add	x3, sp, #0x8
    3f68:	mov	x0, x20
    3f6c:	mov	x22, x8
    3f70:	bl	27d0 <PyDict_Next@plt>
    3f74:	cbz	w0, 3f98 <PyInit__xxsubinterpreters@@Base+0x1584>
    3f78:	ldr	x8, [x19, #8]
    3f7c:	ldp	x2, x1, [sp, #8]
    3f80:	add	x0, x8, x21
    3f84:	bl	4260 <PyInit__xxsubinterpreters@@Base+0x184c>
    3f88:	cbnz	w0, 3f98 <PyInit__xxsubinterpreters@@Base+0x1584>
    3f8c:	add	x21, x21, #0x30
    3f90:	sub	x8, x22, #0x1
    3f94:	cbnz	x22, 3f5c <PyInit__xxsubinterpreters@@Base+0x1548>
    3f98:	bl	2730 <PyErr_Occurred@plt>
    3f9c:	cbz	x0, 3fac <PyInit__xxsubinterpreters@@Base+0x1598>
    3fa0:	mov	x0, x19
    3fa4:	bl	4178 <PyInit__xxsubinterpreters@@Base+0x1764>
    3fa8:	mov	x19, xzr
    3fac:	mov	x0, x19
    3fb0:	ldp	x20, x19, [sp, #64]
    3fb4:	ldp	x22, x21, [sp, #48]
    3fb8:	ldp	x29, x30, [sp, #32]
    3fbc:	add	sp, sp, #0x50
    3fc0:	ret
    3fc4:	sub	sp, sp, #0x50
    3fc8:	stp	x29, x30, [sp, #16]
    3fcc:	str	x23, [sp, #32]
    3fd0:	stp	x22, x21, [sp, #48]
    3fd4:	stp	x20, x19, [sp, #64]
    3fd8:	add	x29, sp, #0x10
    3fdc:	mov	x19, x3
    3fe0:	mov	x22, x2
    3fe4:	mov	x20, x1
    3fe8:	str	xzr, [x29, #24]
    3fec:	stp	xzr, xzr, [sp]
    3ff0:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    3ff4:	cbz	x0, 4074 <PyInit__xxsubinterpreters@@Base+0x1660>
    3ff8:	mov	x23, x0
    3ffc:	bl	28d0 <PyModule_GetDict@plt>
    4000:	mov	x21, x0
    4004:	mov	x0, x23
    4008:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    400c:	cbz	x21, 4074 <PyInit__xxsubinterpreters@@Base+0x1660>
    4010:	mov	x0, x21
    4014:	bl	2cc8 <PyInit__xxsubinterpreters@@Base+0x2b4>
    4018:	cbz	x22, 4038 <PyInit__xxsubinterpreters@@Base+0x1624>
    401c:	mov	x0, x22
    4020:	mov	x1, x21
    4024:	bl	4328 <PyInit__xxsubinterpreters@@Base+0x1914>
    4028:	cbz	w0, 4038 <PyInit__xxsubinterpreters@@Base+0x1624>
    402c:	mov	x0, x21
    4030:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    4034:	b	4074 <PyInit__xxsubinterpreters@@Base+0x1660>
    4038:	mov	w1, #0x101                 	// #257
    403c:	mov	x0, x20
    4040:	mov	x2, x21
    4044:	mov	x3, x21
    4048:	mov	x4, xzr
    404c:	bl	2760 <PyRun_StringFlags@plt>
    4050:	mov	x20, x0
    4054:	mov	x0, x21
    4058:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    405c:	cbz	x20, 4074 <PyInit__xxsubinterpreters@@Base+0x1660>
    4060:	mov	x0, x20
    4064:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    4068:	mov	x20, xzr
    406c:	mov	w0, wzr
    4070:	b	40b8 <PyInit__xxsubinterpreters@@Base+0x16a4>
    4074:	add	x0, x29, #0x18
    4078:	add	x1, sp, #0x8
    407c:	mov	x2, sp
    4080:	bl	2820 <PyErr_Fetch@plt>
    4084:	ldr	x0, [x29, #24]
    4088:	ldr	x1, [sp, #8]
    408c:	bl	4398 <PyInit__xxsubinterpreters@@Base+0x1984>
    4090:	ldr	x8, [x29, #24]
    4094:	mov	x20, x0
    4098:	mov	x0, x8
    409c:	bl	44b4 <PyInit__xxsubinterpreters@@Base+0x1aa0>
    40a0:	ldr	x0, [sp, #8]
    40a4:	bl	44b4 <PyInit__xxsubinterpreters@@Base+0x1aa0>
    40a8:	ldr	x0, [sp]
    40ac:	bl	44b4 <PyInit__xxsubinterpreters@@Base+0x1aa0>
    40b0:	cbz	x20, 40d4 <PyInit__xxsubinterpreters@@Base+0x16c0>
    40b4:	mov	w0, #0xffffffff            	// #-1
    40b8:	str	x20, [x19]
    40bc:	ldp	x20, x19, [sp, #64]
    40c0:	ldp	x22, x21, [sp, #48]
    40c4:	ldr	x23, [sp, #32]
    40c8:	ldp	x29, x30, [sp, #16]
    40cc:	add	sp, sp, #0x50
    40d0:	ret
    40d4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    40d8:	ldr	x8, [x8, #3976]
    40dc:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    40e0:	add	x0, x0, #0x9d6
    40e4:	mov	w1, #0x33                  	// #51
    40e8:	ldr	x3, [x8]
    40ec:	mov	w2, #0x1                   	// #1
    40f0:	bl	27c0 <fwrite@plt>
    40f4:	bl	26f0 <PyErr_Clear@plt>
    40f8:	b	40b4 <PyInit__xxsubinterpreters@@Base+0x16a0>
    40fc:	stp	x29, x30, [sp, #-16]!
    4100:	mov	x29, sp
    4104:	ldp	x2, x3, [x0]
    4108:	mov	x0, x1
    410c:	cbz	x2, 4128 <PyInit__xxsubinterpreters@@Base+0x1714>
    4110:	cbz	x3, 4134 <PyInit__xxsubinterpreters@@Base+0x1720>
    4114:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4118:	add	x1, x1, #0xaaf
    411c:	bl	28c0 <PyErr_Format@plt>
    4120:	ldp	x29, x30, [sp], #16
    4124:	ret
    4128:	cbz	x3, 4144 <PyInit__xxsubinterpreters@@Base+0x1730>
    412c:	mov	x1, x3
    4130:	b	4138 <PyInit__xxsubinterpreters@@Base+0x1724>
    4134:	mov	x1, x2
    4138:	bl	2670 <PyErr_SetString@plt>
    413c:	ldp	x29, x30, [sp], #16
    4140:	ret
    4144:	bl	2690 <PyErr_SetNone@plt>
    4148:	ldp	x29, x30, [sp], #16
    414c:	ret
    4150:	stp	x29, x30, [sp, #-32]!
    4154:	str	x19, [sp, #16]
    4158:	mov	x29, sp
    415c:	mov	x19, x0
    4160:	bl	4580 <PyInit__xxsubinterpreters@@Base+0x1b6c>
    4164:	mov	x0, x19
    4168:	bl	2590 <PyMem_Free@plt>
    416c:	ldr	x19, [sp, #16]
    4170:	ldp	x29, x30, [sp], #32
    4174:	ret
    4178:	stp	x29, x30, [sp, #-48]!
    417c:	str	x21, [sp, #16]
    4180:	stp	x20, x19, [sp, #32]
    4184:	mov	x29, sp
    4188:	ldr	x8, [x0]
    418c:	mov	x19, x0
    4190:	cmp	x8, #0x1
    4194:	b.lt	41c0 <PyInit__xxsubinterpreters@@Base+0x17ac>  // b.tstop
    4198:	mov	x20, xzr
    419c:	mov	x21, xzr
    41a0:	ldr	x8, [x19, #8]
    41a4:	add	x0, x8, x20
    41a8:	bl	42f4 <PyInit__xxsubinterpreters@@Base+0x18e0>
    41ac:	ldr	x8, [x19]
    41b0:	add	x21, x21, #0x1
    41b4:	add	x20, x20, #0x30
    41b8:	cmp	x21, x8
    41bc:	b.lt	41a0 <PyInit__xxsubinterpreters@@Base+0x178c>  // b.tstop
    41c0:	ldr	x0, [x19, #8]
    41c4:	bl	2590 <PyMem_Free@plt>
    41c8:	mov	x0, x19
    41cc:	bl	2590 <PyMem_Free@plt>
    41d0:	ldp	x20, x19, [sp, #32]
    41d4:	ldr	x21, [sp, #16]
    41d8:	ldp	x29, x30, [sp], #48
    41dc:	ret
    41e0:	stp	x29, x30, [sp, #-32]!
    41e4:	stp	x20, x19, [sp, #16]
    41e8:	mov	x29, sp
    41ec:	mov	x20, x0
    41f0:	mov	w0, #0x10                  	// #16
    41f4:	bl	2910 <PyMem_Malloc@plt>
    41f8:	mov	x19, x0
    41fc:	cbz	x0, 4224 <PyInit__xxsubinterpreters@@Base+0x1810>
    4200:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4204:	movk	x8, #0x2aa, lsl #48
    4208:	cmp	x20, x8
    420c:	str	x20, [x19]
    4210:	b.ls	422c <PyInit__xxsubinterpreters@@Base+0x1818>  // b.plast
    4214:	mov	x0, xzr
    4218:	str	x0, [x19, #8]
    421c:	cbnz	x0, 4250 <PyInit__xxsubinterpreters@@Base+0x183c>
    4220:	b	4240 <PyInit__xxsubinterpreters@@Base+0x182c>
    4224:	bl	2600 <PyErr_NoMemory@plt>
    4228:	b	4250 <PyInit__xxsubinterpreters@@Base+0x183c>
    422c:	add	x8, x20, x20, lsl #1
    4230:	lsl	x0, x8, #4
    4234:	bl	2910 <PyMem_Malloc@plt>
    4238:	str	x0, [x19, #8]
    423c:	cbnz	x0, 4250 <PyInit__xxsubinterpreters@@Base+0x183c>
    4240:	bl	2600 <PyErr_NoMemory@plt>
    4244:	mov	x0, x19
    4248:	bl	2590 <PyMem_Free@plt>
    424c:	mov	x19, xzr
    4250:	mov	x0, x19
    4254:	ldp	x20, x19, [sp, #16]
    4258:	ldp	x29, x30, [sp], #32
    425c:	ret
    4260:	stp	x29, x30, [sp, #-32]!
    4264:	stp	x20, x19, [sp, #16]
    4268:	mov	x29, sp
    426c:	mov	x19, x0
    4270:	mov	x0, x1
    4274:	mov	x20, x2
    4278:	bl	42ac <PyInit__xxsubinterpreters@@Base+0x1898>
    427c:	str	x0, [x19]
    4280:	cbz	x0, 429c <PyInit__xxsubinterpreters@@Base+0x1888>
    4284:	add	x1, x19, #0x8
    4288:	mov	x0, x20
    428c:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4290:	cbz	w0, 42a0 <PyInit__xxsubinterpreters@@Base+0x188c>
    4294:	mov	x0, x19
    4298:	bl	42f4 <PyInit__xxsubinterpreters@@Base+0x18e0>
    429c:	mov	w0, #0xffffffff            	// #-1
    42a0:	ldp	x20, x19, [sp, #16]
    42a4:	ldp	x29, x30, [sp], #32
    42a8:	ret
    42ac:	stp	x29, x30, [sp, #-32]!
    42b0:	str	x19, [sp, #16]
    42b4:	mov	x29, sp
    42b8:	bl	27e0 <PyUnicode_AsUTF8@plt>
    42bc:	cbz	x0, 42e8 <PyInit__xxsubinterpreters@@Base+0x18d4>
    42c0:	mov	x19, x0
    42c4:	bl	2530 <strlen@plt>
    42c8:	add	x0, x0, #0x1
    42cc:	bl	2910 <PyMem_Malloc@plt>
    42d0:	cbz	x0, 42e0 <PyInit__xxsubinterpreters@@Base+0x18cc>
    42d4:	mov	x1, x19
    42d8:	bl	27f0 <strcpy@plt>
    42dc:	b	42e8 <PyInit__xxsubinterpreters@@Base+0x18d4>
    42e0:	bl	2600 <PyErr_NoMemory@plt>
    42e4:	mov	x0, xzr
    42e8:	ldr	x19, [sp, #16]
    42ec:	ldp	x29, x30, [sp], #32
    42f0:	ret
    42f4:	stp	x29, x30, [sp, #-32]!
    42f8:	str	x19, [sp, #16]
    42fc:	mov	x29, sp
    4300:	mov	x19, x0
    4304:	ldr	x0, [x0]
    4308:	cbz	x0, 4314 <PyInit__xxsubinterpreters@@Base+0x1900>
    430c:	bl	2590 <PyMem_Free@plt>
    4310:	str	xzr, [x19]
    4314:	add	x0, x19, #0x8
    4318:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    431c:	ldr	x19, [sp, #16]
    4320:	ldp	x29, x30, [sp], #32
    4324:	ret
    4328:	stp	x29, x30, [sp, #-48]!
    432c:	stp	x22, x21, [sp, #16]
    4330:	stp	x20, x19, [sp, #32]
    4334:	mov	x29, sp
    4338:	ldr	x8, [x0]
    433c:	cmp	x8, #0x1
    4340:	b.lt	437c <PyInit__xxsubinterpreters@@Base+0x1968>  // b.tstop
    4344:	mov	x19, x0
    4348:	mov	x20, x1
    434c:	mov	x21, xzr
    4350:	mov	x22, xzr
    4354:	ldr	x8, [x19, #8]
    4358:	mov	x1, x20
    435c:	add	x0, x8, x21
    4360:	bl	44cc <PyInit__xxsubinterpreters@@Base+0x1ab8>
    4364:	cbnz	w0, 4384 <PyInit__xxsubinterpreters@@Base+0x1970>
    4368:	ldr	x8, [x19]
    436c:	add	x22, x22, #0x1
    4370:	add	x21, x21, #0x30
    4374:	cmp	x22, x8
    4378:	b.lt	4354 <PyInit__xxsubinterpreters@@Base+0x1940>  // b.tstop
    437c:	mov	w0, wzr
    4380:	b	4388 <PyInit__xxsubinterpreters@@Base+0x1974>
    4384:	mov	w0, #0xffffffff            	// #-1
    4388:	ldp	x20, x19, [sp, #32]
    438c:	ldp	x22, x21, [sp, #16]
    4390:	ldp	x29, x30, [sp], #48
    4394:	ret
    4398:	stp	x29, x30, [sp, #-48]!
    439c:	str	x21, [sp, #16]
    43a0:	stp	x20, x19, [sp, #32]
    43a4:	mov	x29, sp
    43a8:	mov	x20, x1
    43ac:	mov	x21, x0
    43b0:	bl	4550 <PyInit__xxsubinterpreters@@Base+0x1b3c>
    43b4:	mov	x19, x0
    43b8:	cbz	x0, 4420 <PyInit__xxsubinterpreters@@Base+0x1a0c>
    43bc:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    43c0:	add	x0, x0, #0xa0a
    43c4:	mov	x1, x21
    43c8:	bl	24f0 <PyUnicode_FromFormat@plt>
    43cc:	cbz	x0, 442c <PyInit__xxsubinterpreters@@Base+0x1a18>
    43d0:	mov	x21, x0
    43d4:	bl	42ac <PyInit__xxsubinterpreters@@Base+0x1898>
    43d8:	str	x0, [x19]
    43dc:	mov	x0, x21
    43e0:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    43e4:	ldr	x8, [x19]
    43e8:	cbz	x8, 443c <PyInit__xxsubinterpreters@@Base+0x1a28>
    43ec:	cbz	x20, 4464 <PyInit__xxsubinterpreters@@Base+0x1a50>
    43f0:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    43f4:	add	x0, x0, #0xa0a
    43f8:	mov	x1, x20
    43fc:	bl	24f0 <PyUnicode_FromFormat@plt>
    4400:	cbz	x0, 445c <PyInit__xxsubinterpreters@@Base+0x1a48>
    4404:	mov	x20, x0
    4408:	bl	42ac <PyInit__xxsubinterpreters@@Base+0x1898>
    440c:	str	x0, [x19, #8]
    4410:	mov	x0, x20
    4414:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    4418:	ldr	x8, [x19, #8]
    441c:	cbz	x8, 4494 <PyInit__xxsubinterpreters@@Base+0x1a80>
    4420:	mov	x20, xzr
    4424:	cbnz	x20, 4468 <PyInit__xxsubinterpreters@@Base+0x1a54>
    4428:	b	4480 <PyInit__xxsubinterpreters@@Base+0x1a6c>
    442c:	adrp	x20, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4430:	add	x20, x20, #0xa0d
    4434:	cbnz	x20, 4468 <PyInit__xxsubinterpreters@@Base+0x1a54>
    4438:	b	4480 <PyInit__xxsubinterpreters@@Base+0x1a6c>
    443c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4440:	ldr	x8, [x8, #4008]
    4444:	ldr	x0, [x8]
    4448:	bl	26a0 <PyErr_ExceptionMatches@plt>
    444c:	adrp	x20, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4450:	add	x20, x20, #0xa32
    4454:	cbnz	x20, 4468 <PyInit__xxsubinterpreters@@Base+0x1a54>
    4458:	b	4480 <PyInit__xxsubinterpreters@@Base+0x1a6c>
    445c:	adrp	x20, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4460:	add	x20, x20, #0xa60
    4464:	cbz	x20, 4480 <PyInit__xxsubinterpreters@@Base+0x1a6c>
    4468:	bl	26f0 <PyErr_Clear@plt>
    446c:	ldr	x0, [x19]
    4470:	cbz	x0, 447c <PyInit__xxsubinterpreters@@Base+0x1a68>
    4474:	bl	2590 <PyMem_Free@plt>
    4478:	str	xzr, [x19]
    447c:	str	x20, [x19, #8]
    4480:	mov	x0, x19
    4484:	ldp	x20, x19, [sp, #32]
    4488:	ldr	x21, [sp, #16]
    448c:	ldp	x29, x30, [sp], #48
    4490:	ret
    4494:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4498:	ldr	x8, [x8, #4008]
    449c:	ldr	x0, [x8]
    44a0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    44a4:	adrp	x20, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    44a8:	add	x20, x20, #0xa83
    44ac:	cbnz	x20, 4468 <PyInit__xxsubinterpreters@@Base+0x1a54>
    44b0:	b	4480 <PyInit__xxsubinterpreters@@Base+0x1a6c>
    44b4:	cbz	x0, 44c8 <PyInit__xxsubinterpreters@@Base+0x1ab4>
    44b8:	stp	x29, x30, [sp, #-16]!
    44bc:	mov	x29, sp
    44c0:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    44c4:	ldp	x29, x30, [sp], #16
    44c8:	ret
    44cc:	stp	x29, x30, [sp, #-48]!
    44d0:	str	x21, [sp, #16]
    44d4:	stp	x20, x19, [sp, #32]
    44d8:	mov	x29, sp
    44dc:	mov	x21, x0
    44e0:	ldr	x0, [x0]
    44e4:	mov	x20, x1
    44e8:	bl	2840 <PyUnicode_FromString@plt>
    44ec:	cbz	x0, 4528 <PyInit__xxsubinterpreters@@Base+0x1b14>
    44f0:	mov	x19, x0
    44f4:	add	x0, x21, #0x8
    44f8:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    44fc:	cbz	x0, 4530 <PyInit__xxsubinterpreters@@Base+0x1b1c>
    4500:	mov	x21, x0
    4504:	mov	x0, x20
    4508:	mov	x1, x19
    450c:	mov	x2, x21
    4510:	bl	2870 <PyDict_SetItem@plt>
    4514:	mov	w20, w0
    4518:	mov	x0, x19
    451c:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    4520:	mov	x19, x21
    4524:	b	4534 <PyInit__xxsubinterpreters@@Base+0x1b20>
    4528:	mov	w20, #0xffffffff            	// #-1
    452c:	b	453c <PyInit__xxsubinterpreters@@Base+0x1b28>
    4530:	mov	w20, #0xffffffff            	// #-1
    4534:	mov	x0, x19
    4538:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    453c:	mov	w0, w20
    4540:	ldp	x20, x19, [sp, #32]
    4544:	ldr	x21, [sp, #16]
    4548:	ldp	x29, x30, [sp], #48
    454c:	ret
    4550:	stp	x29, x30, [sp, #-16]!
    4554:	mov	x29, sp
    4558:	mov	w0, #0x10                  	// #16
    455c:	bl	2910 <PyMem_Malloc@plt>
    4560:	cbz	x0, 4570 <PyInit__xxsubinterpreters@@Base+0x1b5c>
    4564:	stp	xzr, xzr, [x0]
    4568:	ldp	x29, x30, [sp], #16
    456c:	ret
    4570:	bl	2600 <PyErr_NoMemory@plt>
    4574:	mov	x0, xzr
    4578:	ldp	x29, x30, [sp], #16
    457c:	ret
    4580:	stp	x29, x30, [sp, #-32]!
    4584:	str	x19, [sp, #16]
    4588:	mov	x29, sp
    458c:	mov	x19, x0
    4590:	ldr	x0, [x0]
    4594:	cbz	x0, 459c <PyInit__xxsubinterpreters@@Base+0x1b88>
    4598:	bl	2590 <PyMem_Free@plt>
    459c:	ldr	x0, [x19, #8]
    45a0:	cbz	x0, 45a8 <PyInit__xxsubinterpreters@@Base+0x1b94>
    45a4:	bl	2590 <PyMem_Free@plt>
    45a8:	ldr	x19, [sp, #16]
    45ac:	ldp	x29, x30, [sp], #32
    45b0:	ret
    45b4:	stp	x29, x30, [sp, #-32]!
    45b8:	str	x19, [sp, #16]
    45bc:	mov	x29, sp
    45c0:	bl	462c <PyInit__xxsubinterpreters@@Base+0x1c18>
    45c4:	cbz	x0, 45dc <PyInit__xxsubinterpreters@@Base+0x1bc8>
    45c8:	mov	x19, x0
    45cc:	bl	46c0 <PyInit__xxsubinterpreters@@Base+0x1cac>
    45d0:	tbz	x0, #63, 45e0 <PyInit__xxsubinterpreters@@Base+0x1bcc>
    45d4:	mov	x0, x19
    45d8:	bl	3144 <PyInit__xxsubinterpreters@@Base+0x730>
    45dc:	mov	x0, #0xffffffffffffffff    	// #-1
    45e0:	ldr	x19, [sp, #16]
    45e4:	ldp	x29, x30, [sp], #32
    45e8:	ret
    45ec:	sub	sp, sp, #0x20
    45f0:	stp	x29, x30, [sp, #16]
    45f4:	add	x29, sp, #0x10
    45f8:	add	x1, sp, #0x8
    45fc:	str	xzr, [sp, #8]
    4600:	bl	4810 <PyInit__xxsubinterpreters@@Base+0x1dfc>
    4604:	cbz	w0, 4610 <PyInit__xxsubinterpreters@@Base+0x1bfc>
    4608:	mov	w0, #0xffffffff            	// #-1
    460c:	b	4620 <PyInit__xxsubinterpreters@@Base+0x1c0c>
    4610:	ldr	x0, [sp, #8]
    4614:	cbz	x0, 4620 <PyInit__xxsubinterpreters@@Base+0x1c0c>
    4618:	bl	3144 <PyInit__xxsubinterpreters@@Base+0x730>
    461c:	mov	w0, wzr
    4620:	ldp	x29, x30, [sp, #16]
    4624:	add	sp, sp, #0x20
    4628:	ret
    462c:	stp	x29, x30, [sp, #-32]!
    4630:	str	x19, [sp, #16]
    4634:	mov	x29, sp
    4638:	mov	w0, #0x28                  	// #40
    463c:	bl	2910 <PyMem_Malloc@plt>
    4640:	mov	x19, x0
    4644:	cbz	x0, 46b0 <PyInit__xxsubinterpreters@@Base+0x1c9c>
    4648:	bl	2790 <PyThread_allocate_lock@plt>
    464c:	str	x0, [x19]
    4650:	cbz	x0, 467c <PyInit__xxsubinterpreters@@Base+0x1c68>
    4654:	bl	4740 <PyInit__xxsubinterpreters@@Base+0x1d2c>
    4658:	str	x0, [x19, #8]
    465c:	cbz	x0, 46a4 <PyInit__xxsubinterpreters@@Base+0x1c90>
    4660:	bl	4774 <PyInit__xxsubinterpreters@@Base+0x1d60>
    4664:	str	x0, [x19, #16]
    4668:	cbz	x0, 469c <PyInit__xxsubinterpreters@@Base+0x1c88>
    466c:	mov	w8, #0x1                   	// #1
    4670:	str	w8, [x19, #24]
    4674:	str	xzr, [x19, #32]
    4678:	b	46b0 <PyInit__xxsubinterpreters@@Base+0x1c9c>
    467c:	mov	x0, x19
    4680:	bl	2590 <PyMem_Free@plt>
    4684:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4688:	ldr	x0, [x8, #2384]
    468c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4690:	add	x1, x1, #0xac9
    4694:	bl	2670 <PyErr_SetString@plt>
    4698:	b	46ac <PyInit__xxsubinterpreters@@Base+0x1c98>
    469c:	ldr	x0, [x19, #8]
    46a0:	bl	3208 <PyInit__xxsubinterpreters@@Base+0x7f4>
    46a4:	mov	x0, x19
    46a8:	bl	2590 <PyMem_Free@plt>
    46ac:	mov	x19, xzr
    46b0:	mov	x0, x19
    46b4:	ldr	x19, [sp, #16]
    46b8:	ldp	x29, x30, [sp], #32
    46bc:	ret
    46c0:	stp	x29, x30, [sp, #-48]!
    46c4:	str	x21, [sp, #16]
    46c8:	stp	x20, x19, [sp, #32]
    46cc:	mov	x29, sp
    46d0:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    46d4:	ldr	x8, [x21, #2352]
    46d8:	mov	x20, x0
    46dc:	mov	w1, #0x1                   	// #1
    46e0:	mov	x0, x8
    46e4:	bl	2640 <PyThread_acquire_lock@plt>
    46e8:	bl	4798 <PyInit__xxsubinterpreters@@Base+0x1d84>
    46ec:	tbnz	x0, #63, 4720 <PyInit__xxsubinterpreters@@Base+0x1d0c>
    46f0:	mov	x1, x20
    46f4:	mov	x19, x0
    46f8:	bl	47dc <PyInit__xxsubinterpreters@@Base+0x1dc8>
    46fc:	cbz	x0, 4720 <PyInit__xxsubinterpreters@@Base+0x1d0c>
    4700:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4704:	add	x8, x8, #0x938
    4708:	ldr	x9, [x8]
    470c:	str	x9, [x0, #16]
    4710:	ldr	x9, [x8, #8]
    4714:	add	x9, x9, #0x1
    4718:	stp	x0, x9, [x8]
    471c:	b	4724 <PyInit__xxsubinterpreters@@Base+0x1d10>
    4720:	mov	x19, #0xffffffffffffffff    	// #-1
    4724:	ldr	x0, [x21, #2352]
    4728:	bl	27b0 <PyThread_release_lock@plt>
    472c:	mov	x0, x19
    4730:	ldp	x20, x19, [sp, #32]
    4734:	ldr	x21, [sp, #16]
    4738:	ldp	x29, x30, [sp], #48
    473c:	ret
    4740:	stp	x29, x30, [sp, #-16]!
    4744:	mov	x29, sp
    4748:	mov	w0, #0x18                  	// #24
    474c:	bl	2910 <PyMem_Malloc@plt>
    4750:	cbz	x0, 4764 <PyInit__xxsubinterpreters@@Base+0x1d50>
    4754:	stp	xzr, xzr, [x0]
    4758:	str	xzr, [x0, #16]
    475c:	ldp	x29, x30, [sp], #16
    4760:	ret
    4764:	bl	2600 <PyErr_NoMemory@plt>
    4768:	mov	x0, xzr
    476c:	ldp	x29, x30, [sp], #16
    4770:	ret
    4774:	stp	x29, x30, [sp, #-16]!
    4778:	mov	x29, sp
    477c:	mov	w0, #0x20                  	// #32
    4780:	bl	2910 <PyMem_Malloc@plt>
    4784:	cbz	x0, 4790 <PyInit__xxsubinterpreters@@Base+0x1d7c>
    4788:	movi	v0.2d, #0x0
    478c:	stp	q0, q0, [x0]
    4790:	ldp	x29, x30, [sp], #16
    4794:	ret
    4798:	stp	x29, x30, [sp, #-16]!
    479c:	mov	x29, sp
    47a0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47a4:	ldr	x0, [x8, #2376]
    47a8:	tbnz	x0, #63, 47bc <PyInit__xxsubinterpreters@@Base+0x1da8>
    47ac:	add	x9, x0, #0x1
    47b0:	str	x9, [x8, #2376]
    47b4:	ldp	x29, x30, [sp], #16
    47b8:	ret
    47bc:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    47c0:	ldr	x0, [x8, #2384]
    47c4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    47c8:	add	x1, x1, #0xaf0
    47cc:	bl	2670 <PyErr_SetString@plt>
    47d0:	mov	x0, #0xffffffffffffffff    	// #-1
    47d4:	ldp	x29, x30, [sp], #16
    47d8:	ret
    47dc:	stp	x29, x30, [sp, #-32]!
    47e0:	stp	x20, x19, [sp, #16]
    47e4:	mov	x29, sp
    47e8:	mov	x20, x0
    47ec:	mov	w0, #0x20                  	// #32
    47f0:	mov	x19, x1
    47f4:	bl	2910 <PyMem_Malloc@plt>
    47f8:	cbz	x0, 4804 <PyInit__xxsubinterpreters@@Base+0x1df0>
    47fc:	stp	x20, x19, [x0]
    4800:	stp	xzr, xzr, [x0, #16]
    4804:	ldp	x20, x19, [sp, #16]
    4808:	ldp	x29, x30, [sp], #32
    480c:	ret
    4810:	stp	x29, x30, [sp, #-48]!
    4814:	str	x21, [sp, #16]
    4818:	stp	x20, x19, [sp, #32]
    481c:	mov	x29, sp
    4820:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4824:	ldr	x8, [x21, #2352]
    4828:	mov	x19, x1
    482c:	mov	x20, x0
    4830:	mov	w1, #0x1                   	// #1
    4834:	mov	x0, x8
    4838:	bl	2640 <PyThread_acquire_lock@plt>
    483c:	cbz	x19, 4844 <PyInit__xxsubinterpreters@@Base+0x1e30>
    4840:	str	xzr, [x19]
    4844:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4848:	ldr	x0, [x8, #2360]
    484c:	add	x2, x29, #0x18
    4850:	mov	x1, x20
    4854:	str	xzr, [x29, #24]
    4858:	bl	30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    485c:	cbz	x0, 4880 <PyInit__xxsubinterpreters@@Base+0x1e6c>
    4860:	ldr	x2, [x29, #24]
    4864:	mov	x1, x0
    4868:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    486c:	add	x0, x0, #0x930
    4870:	mov	x3, x19
    4874:	bl	30fc <PyInit__xxsubinterpreters@@Base+0x6e8>
    4878:	mov	w19, wzr
    487c:	b	489c <PyInit__xxsubinterpreters@@Base+0x1e88>
    4880:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4884:	ldr	x0, [x8, #2392]
    4888:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    488c:	add	x1, x1, #0x886
    4890:	mov	x2, x20
    4894:	bl	28c0 <PyErr_Format@plt>
    4898:	mov	w19, #0xffffffff            	// #-1
    489c:	ldr	x0, [x21, #2352]
    48a0:	bl	27b0 <PyThread_release_lock@plt>
    48a4:	mov	w0, w19
    48a8:	ldp	x20, x19, [sp, #32]
    48ac:	ldr	x21, [sp, #16]
    48b0:	ldp	x29, x30, [sp], #48
    48b4:	ret
    48b8:	stp	x29, x30, [sp, #-48]!
    48bc:	str	x21, [sp, #16]
    48c0:	stp	x20, x19, [sp, #32]
    48c4:	mov	x29, sp
    48c8:	mov	x19, x0
    48cc:	ldr	x0, [x0, #8]
    48d0:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    48d4:	add	x8, x8, #0x230
    48d8:	mov	x20, x1
    48dc:	cmp	x0, x8
    48e0:	b.eq	48f4 <PyInit__xxsubinterpreters@@Base+0x1ee0>  // b.none
    48e4:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    48e8:	add	x1, x1, #0x230
    48ec:	bl	28a0 <PyType_IsSubtype@plt>
    48f0:	cbz	w0, 4910 <PyInit__xxsubinterpreters@@Base+0x1efc>
    48f4:	ldr	x21, [x19, #16]
    48f8:	mov	w0, #0x1                   	// #1
    48fc:	str	x21, [x20]
    4900:	ldp	x20, x19, [sp, #32]
    4904:	ldr	x21, [sp, #16]
    4908:	ldp	x29, x30, [sp], #48
    490c:	ret
    4910:	ldr	x8, [x19, #8]
    4914:	ldr	x9, [x8, #96]
    4918:	cbz	x9, 4958 <PyInit__xxsubinterpreters@@Base+0x1f44>
    491c:	ldr	x9, [x9, #264]
    4920:	cbz	x9, 4958 <PyInit__xxsubinterpreters@@Base+0x1f44>
    4924:	mov	x0, x19
    4928:	bl	2890 <PyLong_AsLongLong@plt>
    492c:	mov	x21, x0
    4930:	cmn	x0, #0x1
    4934:	b.eq	497c <PyInit__xxsubinterpreters@@Base+0x1f68>  // b.none
    4938:	tbz	x21, #63, 48f8 <PyInit__xxsubinterpreters@@Base+0x1ee4>
    493c:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    4940:	ldr	x8, [x8, #4016]
    4944:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4948:	add	x1, x1, #0xb22
    494c:	mov	x2, x19
    4950:	ldr	x0, [x8]
    4954:	b	4970 <PyInit__xxsubinterpreters@@Base+0x1f5c>
    4958:	adrp	x9, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    495c:	ldr	x9, [x9, #4024]
    4960:	ldr	x2, [x8, #24]
    4964:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4968:	add	x1, x1, #0xb50
    496c:	ldr	x0, [x9]
    4970:	bl	28c0 <PyErr_Format@plt>
    4974:	mov	w0, wzr
    4978:	b	4900 <PyInit__xxsubinterpreters@@Base+0x1eec>
    497c:	bl	2730 <PyErr_Occurred@plt>
    4980:	cbz	x0, 4938 <PyInit__xxsubinterpreters@@Base+0x1f24>
    4984:	mov	w0, wzr
    4988:	b	4900 <PyInit__xxsubinterpreters@@Base+0x1eec>
    498c:	stp	x29, x30, [sp, #-32]!
    4990:	stp	x20, x19, [sp, #16]
    4994:	mov	x29, sp
    4998:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    499c:	add	x20, x20, #0x930
    49a0:	ldr	x8, [x20]
    49a4:	mov	x19, x0
    49a8:	mov	w1, #0x1                   	// #1
    49ac:	mov	x0, x8
    49b0:	bl	2640 <PyThread_acquire_lock@plt>
    49b4:	ldr	x8, [x20, #16]
    49b8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    49bc:	cmp	x8, x9
    49c0:	b.ne	49e4 <PyInit__xxsubinterpreters@@Base+0x1fd0>  // b.any
    49c4:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    49c8:	ldr	x8, [x8, #4000]
    49cc:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    49d0:	add	x1, x1, #0xb76
    49d4:	ldr	x0, [x8]
    49d8:	bl	2670 <PyErr_SetString@plt>
    49dc:	mov	x20, xzr
    49e0:	b	4a34 <PyInit__xxsubinterpreters@@Base+0x2020>
    49e4:	lsr	x9, x8, #60
    49e8:	cbz	x9, 49f8 <PyInit__xxsubinterpreters@@Base+0x1fe4>
    49ec:	mov	x20, xzr
    49f0:	cbnz	x20, 4a08 <PyInit__xxsubinterpreters@@Base+0x1ff4>
    49f4:	b	4a34 <PyInit__xxsubinterpreters@@Base+0x2020>
    49f8:	lsl	x0, x8, #3
    49fc:	bl	2910 <PyMem_Malloc@plt>
    4a00:	mov	x20, x0
    4a04:	cbz	x20, 4a34 <PyInit__xxsubinterpreters@@Base+0x2020>
    4a08:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a0c:	ldr	x8, [x8, #2360]
    4a10:	cbz	x8, 4a28 <PyInit__xxsubinterpreters@@Base+0x2014>
    4a14:	mov	x9, x20
    4a18:	ldr	x10, [x8]
    4a1c:	str	x10, [x9], #8
    4a20:	ldr	x8, [x8, #16]
    4a24:	cbnz	x8, 4a18 <PyInit__xxsubinterpreters@@Base+0x2004>
    4a28:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a2c:	ldr	x8, [x8, #2368]
    4a30:	str	x8, [x19]
    4a34:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a38:	ldr	x0, [x8, #2352]
    4a3c:	bl	27b0 <PyThread_release_lock@plt>
    4a40:	mov	x0, x20
    4a44:	ldp	x20, x19, [sp, #16]
    4a48:	ldp	x29, x30, [sp], #32
    4a4c:	ret
    4a50:	sub	sp, sp, #0x40
    4a54:	stp	x29, x30, [sp, #16]
    4a58:	stp	x22, x21, [sp, #32]
    4a5c:	stp	x20, x19, [sp, #48]
    4a60:	add	x29, sp, #0x10
    4a64:	mov	x21, x1
    4a68:	mov	x19, x0
    4a6c:	bl	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>
    4a70:	cbz	x0, 4b24 <PyInit__xxsubinterpreters@@Base+0x2110>
    4a74:	mov	x20, x0
    4a78:	add	x1, sp, #0x8
    4a7c:	mov	x0, x19
    4a80:	str	xzr, [sp, #8]
    4a84:	bl	4b44 <PyInit__xxsubinterpreters@@Base+0x2130>
    4a88:	cbz	x0, 4b24 <PyInit__xxsubinterpreters@@Base+0x2110>
    4a8c:	ldr	x8, [x0, #32]
    4a90:	mov	x22, x0
    4a94:	cbz	x8, 4abc <PyInit__xxsubinterpreters@@Base+0x20a8>
    4a98:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4a9c:	ldr	x0, [x8, #2408]
    4aa0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4aa4:	add	x1, x1, #0xb9e
    4aa8:	mov	x2, x19
    4aac:	bl	28c0 <PyErr_Format@plt>
    4ab0:	ldr	x0, [sp, #8]
    4ab4:	bl	27b0 <PyThread_release_lock@plt>
    4ab8:	b	4b24 <PyInit__xxsubinterpreters@@Base+0x2110>
    4abc:	mov	w0, #0x28                  	// #40
    4ac0:	bl	2910 <PyMem_Malloc@plt>
    4ac4:	cbz	x0, 4ab0 <PyInit__xxsubinterpreters@@Base+0x209c>
    4ac8:	mov	x19, x0
    4acc:	mov	x0, x21
    4ad0:	mov	x1, x19
    4ad4:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4ad8:	cbz	w0, 4ae8 <PyInit__xxsubinterpreters@@Base+0x20d4>
    4adc:	ldr	x0, [sp, #8]
    4ae0:	bl	27b0 <PyThread_release_lock@plt>
    4ae4:	b	4b1c <PyInit__xxsubinterpreters@@Base+0x2108>
    4ae8:	mov	x0, x20
    4aec:	bl	2680 <PyInterpreterState_GetID@plt>
    4af0:	mov	x1, x0
    4af4:	mov	x0, x22
    4af8:	mov	x2, x19
    4afc:	bl	4c10 <PyInit__xxsubinterpreters@@Base+0x21fc>
    4b00:	ldr	x8, [sp, #8]
    4b04:	mov	w20, w0
    4b08:	mov	x0, x8
    4b0c:	bl	27b0 <PyThread_release_lock@plt>
    4b10:	cbz	w20, 4b3c <PyInit__xxsubinterpreters@@Base+0x2128>
    4b14:	mov	x0, x19
    4b18:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4b1c:	mov	x0, x19
    4b20:	bl	2590 <PyMem_Free@plt>
    4b24:	mov	w0, #0xffffffff            	// #-1
    4b28:	ldp	x20, x19, [sp, #48]
    4b2c:	ldp	x22, x21, [sp, #32]
    4b30:	ldp	x29, x30, [sp, #16]
    4b34:	add	sp, sp, #0x40
    4b38:	ret
    4b3c:	mov	w0, wzr
    4b40:	b	4b28 <PyInit__xxsubinterpreters@@Base+0x2114>
    4b44:	stp	x29, x30, [sp, #-48]!
    4b48:	str	x21, [sp, #16]
    4b4c:	stp	x20, x19, [sp, #32]
    4b50:	mov	x29, sp
    4b54:	adrp	x21, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b58:	ldr	x8, [x21, #2352]
    4b5c:	mov	x19, x1
    4b60:	mov	x20, x0
    4b64:	mov	w1, #0x1                   	// #1
    4b68:	mov	x0, x8
    4b6c:	bl	2640 <PyThread_acquire_lock@plt>
    4b70:	cbz	x19, 4b78 <PyInit__xxsubinterpreters@@Base+0x2164>
    4b74:	str	xzr, [x19]
    4b78:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4b7c:	ldr	x0, [x8, #2360]
    4b80:	mov	x1, x20
    4b84:	mov	x2, xzr
    4b88:	bl	30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    4b8c:	cbz	x0, 4bb8 <PyInit__xxsubinterpreters@@Base+0x21a4>
    4b90:	ldr	x8, [x0, #8]
    4b94:	cbz	x8, 4bcc <PyInit__xxsubinterpreters@@Base+0x21b8>
    4b98:	ldr	w8, [x8, #24]
    4b9c:	cbz	w8, 4bcc <PyInit__xxsubinterpreters@@Base+0x21b8>
    4ba0:	cbz	x19, 4bac <PyInit__xxsubinterpreters@@Base+0x2198>
    4ba4:	ldr	x8, [x21, #2352]
    4ba8:	str	x8, [x19]
    4bac:	ldr	x20, [x0, #8]
    4bb0:	cbnz	x19, 4bec <PyInit__xxsubinterpreters@@Base+0x21d8>
    4bb4:	b	4bf4 <PyInit__xxsubinterpreters@@Base+0x21e0>
    4bb8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bbc:	ldr	x0, [x8, #2392]
    4bc0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4bc4:	add	x1, x1, #0x886
    4bc8:	b	4bdc <PyInit__xxsubinterpreters@@Base+0x21c8>
    4bcc:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4bd0:	ldr	x0, [x8, #2408]
    4bd4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4bd8:	add	x1, x1, #0xb9e
    4bdc:	mov	x2, x20
    4be0:	bl	28c0 <PyErr_Format@plt>
    4be4:	mov	x20, xzr
    4be8:	cbz	x19, 4bf4 <PyInit__xxsubinterpreters@@Base+0x21e0>
    4bec:	ldr	x8, [x19]
    4bf0:	cbnz	x8, 4bfc <PyInit__xxsubinterpreters@@Base+0x21e8>
    4bf4:	ldr	x0, [x21, #2352]
    4bf8:	bl	27b0 <PyThread_release_lock@plt>
    4bfc:	mov	x0, x20
    4c00:	ldp	x20, x19, [sp, #32]
    4c04:	ldr	x21, [sp, #16]
    4c08:	ldp	x29, x30, [sp], #48
    4c0c:	ret
    4c10:	stp	x29, x30, [sp, #-48]!
    4c14:	str	x21, [sp, #16]
    4c18:	stp	x20, x19, [sp, #32]
    4c1c:	mov	x29, sp
    4c20:	mov	x19, x0
    4c24:	ldr	x0, [x0]
    4c28:	mov	x21, x1
    4c2c:	mov	w1, #0x1                   	// #1
    4c30:	mov	x20, x2
    4c34:	bl	2640 <PyThread_acquire_lock@plt>
    4c38:	ldr	w8, [x19, #24]
    4c3c:	cbz	w8, 4c5c <PyInit__xxsubinterpreters@@Base+0x2248>
    4c40:	ldr	x0, [x19, #16]
    4c44:	mov	w2, #0x1                   	// #1
    4c48:	mov	x1, x21
    4c4c:	bl	4ca8 <PyInit__xxsubinterpreters@@Base+0x2294>
    4c50:	cbz	w0, 4c78 <PyInit__xxsubinterpreters@@Base+0x2264>
    4c54:	mov	w20, #0xffffffff            	// #-1
    4c58:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c5c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4c60:	ldr	x0, [x8, #2408]
    4c64:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4c68:	add	x1, x1, #0xbb1
    4c6c:	bl	2670 <PyErr_SetString@plt>
    4c70:	mov	w20, #0xffffffff            	// #-1
    4c74:	b	4c8c <PyInit__xxsubinterpreters@@Base+0x2278>
    4c78:	ldr	x0, [x19, #8]
    4c7c:	mov	x1, x20
    4c80:	bl	4d3c <PyInit__xxsubinterpreters@@Base+0x2328>
    4c84:	cmp	w0, #0x0
    4c88:	csetm	w20, ne  // ne = any
    4c8c:	ldr	x0, [x19]
    4c90:	bl	27b0 <PyThread_release_lock@plt>
    4c94:	mov	w0, w20
    4c98:	ldp	x20, x19, [sp, #32]
    4c9c:	ldr	x21, [sp, #16]
    4ca0:	ldp	x29, x30, [sp], #48
    4ca4:	ret
    4ca8:	stp	x29, x30, [sp, #-48]!
    4cac:	str	x21, [sp, #16]
    4cb0:	stp	x20, x19, [sp, #32]
    4cb4:	mov	x29, sp
    4cb8:	cmp	w2, #0x0
    4cbc:	mov	w8, #0x10                  	// #16
    4cc0:	mov	w9, #0x18                  	// #24
    4cc4:	csel	x8, x9, x8, eq  // eq = none
    4cc8:	mov	x20, x0
    4ccc:	ldr	x0, [x0, x8]
    4cd0:	mov	w19, w2
    4cd4:	add	x2, x29, #0x18
    4cd8:	mov	x21, x1
    4cdc:	bl	4da0 <PyInit__xxsubinterpreters@@Base+0x238c>
    4ce0:	cbz	x0, 4cf4 <PyInit__xxsubinterpreters@@Base+0x22e0>
    4ce4:	ldr	w8, [x0, #16]
    4ce8:	cbz	w8, 4d14 <PyInit__xxsubinterpreters@@Base+0x2300>
    4cec:	mov	w0, wzr
    4cf0:	b	4d2c <PyInit__xxsubinterpreters@@Base+0x2318>
    4cf4:	ldr	x1, [x29, #24]
    4cf8:	mov	x0, x20
    4cfc:	mov	x2, x21
    4d00:	mov	w3, w19
    4d04:	bl	4ddc <PyInit__xxsubinterpreters@@Base+0x23c8>
    4d08:	cmp	x0, #0x0
    4d0c:	csetm	w0, eq  // eq = none
    4d10:	b	4d2c <PyInit__xxsubinterpreters@@Base+0x2318>
    4d14:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4d18:	ldr	x0, [x8, #2408]
    4d1c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4d20:	add	x1, x1, #0xbc0
    4d24:	bl	2670 <PyErr_SetString@plt>
    4d28:	mov	w0, #0xffffffff            	// #-1
    4d2c:	ldp	x20, x19, [sp, #32]
    4d30:	ldr	x21, [sp, #16]
    4d34:	ldp	x29, x30, [sp], #48
    4d38:	ret
    4d3c:	stp	x29, x30, [sp, #-32]!
    4d40:	stp	x20, x19, [sp, #16]
    4d44:	mov	x29, sp
    4d48:	mov	x20, x1
    4d4c:	mov	x19, x0
    4d50:	bl	4e84 <PyInit__xxsubinterpreters@@Base+0x2470>
    4d54:	cbz	x0, 4d8c <PyInit__xxsubinterpreters@@Base+0x2378>
    4d58:	str	x20, [x0]
    4d5c:	ldr	x8, [x19]
    4d60:	mov	x9, x19
    4d64:	add	x8, x8, #0x1
    4d68:	str	x8, [x9], #8
    4d6c:	ldr	x8, [x9]
    4d70:	cbz	x8, 4d7c <PyInit__xxsubinterpreters@@Base+0x2368>
    4d74:	ldr	x8, [x19, #16]
    4d78:	add	x9, x8, #0x8
    4d7c:	mov	w8, wzr
    4d80:	str	x0, [x9]
    4d84:	str	x0, [x19, #16]
    4d88:	b	4d90 <PyInit__xxsubinterpreters@@Base+0x237c>
    4d8c:	mov	w8, #0xffffffff            	// #-1
    4d90:	ldp	x20, x19, [sp, #16]
    4d94:	mov	w0, w8
    4d98:	ldp	x29, x30, [sp], #32
    4d9c:	ret
    4da0:	cbz	x0, 4db0 <PyInit__xxsubinterpreters@@Base+0x239c>
    4da4:	ldr	x8, [x0, #8]
    4da8:	cmp	x8, x1
    4dac:	b.ne	4dc0 <PyInit__xxsubinterpreters@@Base+0x23ac>  // b.any
    4db0:	mov	x8, xzr
    4db4:	cbz	x2, 4dbc <PyInit__xxsubinterpreters@@Base+0x23a8>
    4db8:	str	x8, [x2]
    4dbc:	ret
    4dc0:	mov	x8, x0
    4dc4:	ldr	x0, [x0]
    4dc8:	cbz	x0, 4db4 <PyInit__xxsubinterpreters@@Base+0x23a0>
    4dcc:	ldr	x9, [x0, #8]
    4dd0:	cmp	x9, x1
    4dd4:	b.ne	4dc0 <PyInit__xxsubinterpreters@@Base+0x23ac>  // b.any
    4dd8:	b	4db4 <PyInit__xxsubinterpreters@@Base+0x23a0>
    4ddc:	stp	x29, x30, [sp, #-48]!
    4de0:	str	x21, [sp, #16]
    4de4:	stp	x20, x19, [sp, #32]
    4de8:	mov	x29, sp
    4dec:	mov	x19, x0
    4df0:	mov	x0, x2
    4df4:	mov	w20, w3
    4df8:	mov	x21, x1
    4dfc:	bl	4e44 <PyInit__xxsubinterpreters@@Base+0x2430>
    4e00:	cbz	x0, 4e34 <PyInit__xxsubinterpreters@@Base+0x2420>
    4e04:	cbnz	x21, 4e18 <PyInit__xxsubinterpreters@@Base+0x2404>
    4e08:	cbz	w20, 4e14 <PyInit__xxsubinterpreters@@Base+0x2400>
    4e0c:	add	x21, x19, #0x10
    4e10:	b	4e18 <PyInit__xxsubinterpreters@@Base+0x2404>
    4e14:	add	x21, x19, #0x18
    4e18:	cmp	w20, #0x0
    4e1c:	cset	w8, eq  // eq = none
    4e20:	str	x0, [x21]
    4e24:	lsl	x8, x8, #3
    4e28:	ldr	x9, [x19, x8]
    4e2c:	add	x9, x9, #0x1
    4e30:	str	x9, [x19, x8]
    4e34:	ldp	x20, x19, [sp, #32]
    4e38:	ldr	x21, [sp, #16]
    4e3c:	ldp	x29, x30, [sp], #48
    4e40:	ret
    4e44:	stp	x29, x30, [sp, #-32]!
    4e48:	str	x19, [sp, #16]
    4e4c:	mov	x29, sp
    4e50:	mov	x19, x0
    4e54:	mov	w0, #0x18                  	// #24
    4e58:	bl	2910 <PyMem_Malloc@plt>
    4e5c:	cbz	x0, 4e70 <PyInit__xxsubinterpreters@@Base+0x245c>
    4e60:	mov	w8, #0x1                   	// #1
    4e64:	stp	xzr, x19, [x0]
    4e68:	str	w8, [x0, #16]
    4e6c:	b	4e78 <PyInit__xxsubinterpreters@@Base+0x2464>
    4e70:	bl	2600 <PyErr_NoMemory@plt>
    4e74:	mov	x0, xzr
    4e78:	ldr	x19, [sp, #16]
    4e7c:	ldp	x29, x30, [sp], #32
    4e80:	ret
    4e84:	stp	x29, x30, [sp, #-16]!
    4e88:	mov	x29, sp
    4e8c:	mov	w0, #0x10                  	// #16
    4e90:	bl	2910 <PyMem_Malloc@plt>
    4e94:	cbz	x0, 4ea4 <PyInit__xxsubinterpreters@@Base+0x2490>
    4e98:	stp	xzr, xzr, [x0]
    4e9c:	ldp	x29, x30, [sp], #16
    4ea0:	ret
    4ea4:	bl	2600 <PyErr_NoMemory@plt>
    4ea8:	mov	x0, xzr
    4eac:	ldp	x29, x30, [sp], #16
    4eb0:	ret
    4eb4:	stp	x29, x30, [sp, #-48]!
    4eb8:	str	x21, [sp, #16]
    4ebc:	stp	x20, x19, [sp, #32]
    4ec0:	mov	x29, sp
    4ec4:	mov	x19, x0
    4ec8:	bl	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>
    4ecc:	cbz	x0, 4f58 <PyInit__xxsubinterpreters@@Base+0x2544>
    4ed0:	mov	x20, x0
    4ed4:	add	x1, x29, #0x18
    4ed8:	mov	x0, x19
    4edc:	str	xzr, [x29, #24]
    4ee0:	bl	4b44 <PyInit__xxsubinterpreters@@Base+0x2130>
    4ee4:	cbz	x0, 4f58 <PyInit__xxsubinterpreters@@Base+0x2544>
    4ee8:	mov	x21, x0
    4eec:	mov	x0, x20
    4ef0:	bl	2680 <PyInterpreterState_GetID@plt>
    4ef4:	mov	x1, x0
    4ef8:	mov	x0, x21
    4efc:	bl	4f70 <PyInit__xxsubinterpreters@@Base+0x255c>
    4f00:	ldr	x8, [x29, #24]
    4f04:	mov	x20, x0
    4f08:	mov	x0, x8
    4f0c:	bl	27b0 <PyThread_release_lock@plt>
    4f10:	cbz	x20, 4f38 <PyInit__xxsubinterpreters@@Base+0x2524>
    4f14:	mov	x0, x20
    4f18:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4f1c:	mov	x19, x0
    4f20:	cbz	x0, 4f5c <PyInit__xxsubinterpreters@@Base+0x2548>
    4f24:	mov	x0, x20
    4f28:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4f2c:	mov	x0, x20
    4f30:	bl	2590 <PyMem_Free@plt>
    4f34:	b	4f5c <PyInit__xxsubinterpreters@@Base+0x2548>
    4f38:	bl	2730 <PyErr_Occurred@plt>
    4f3c:	cbnz	x0, 4f58 <PyInit__xxsubinterpreters@@Base+0x2544>
    4f40:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4f44:	ldr	x0, [x8, #2416]
    4f48:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4f4c:	add	x1, x1, #0xbe7
    4f50:	mov	x2, x19
    4f54:	bl	28c0 <PyErr_Format@plt>
    4f58:	mov	x19, xzr
    4f5c:	mov	x0, x19
    4f60:	ldp	x20, x19, [sp, #32]
    4f64:	ldr	x21, [sp, #16]
    4f68:	ldp	x29, x30, [sp], #48
    4f6c:	ret
    4f70:	stp	x29, x30, [sp, #-32]!
    4f74:	stp	x20, x19, [sp, #16]
    4f78:	mov	x29, sp
    4f7c:	mov	x19, x0
    4f80:	ldr	x0, [x0]
    4f84:	mov	x20, x1
    4f88:	mov	w1, #0x1                   	// #1
    4f8c:	bl	2640 <PyThread_acquire_lock@plt>
    4f90:	ldr	w8, [x19, #24]
    4f94:	cbz	w8, 4fd8 <PyInit__xxsubinterpreters@@Base+0x25c4>
    4f98:	ldr	x0, [x19, #16]
    4f9c:	mov	x1, x20
    4fa0:	mov	w2, wzr
    4fa4:	bl	4ca8 <PyInit__xxsubinterpreters@@Base+0x2294>
    4fa8:	cbnz	w0, 4fec <PyInit__xxsubinterpreters@@Base+0x25d8>
    4fac:	ldr	x0, [x19, #8]
    4fb0:	bl	501c <PyInit__xxsubinterpreters@@Base+0x2608>
    4fb4:	mov	x20, x0
    4fb8:	cbnz	x0, 4ff0 <PyInit__xxsubinterpreters@@Base+0x25dc>
    4fbc:	bl	2730 <PyErr_Occurred@plt>
    4fc0:	cbnz	x0, 4fec <PyInit__xxsubinterpreters@@Base+0x25d8>
    4fc4:	ldr	x8, [x19, #32]
    4fc8:	cbz	x8, 4fec <PyInit__xxsubinterpreters@@Base+0x25d8>
    4fcc:	mov	x20, xzr
    4fd0:	str	wzr, [x19, #24]
    4fd4:	b	4ff0 <PyInit__xxsubinterpreters@@Base+0x25dc>
    4fd8:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    4fdc:	ldr	x0, [x8, #2408]
    4fe0:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    4fe4:	add	x1, x1, #0xbb1
    4fe8:	bl	2670 <PyErr_SetString@plt>
    4fec:	mov	x20, xzr
    4ff0:	ldr	x0, [x19]
    4ff4:	bl	27b0 <PyThread_release_lock@plt>
    4ff8:	ldr	x8, [x19, #8]
    4ffc:	ldr	x8, [x8]
    5000:	cbnz	x8, 500c <PyInit__xxsubinterpreters@@Base+0x25f8>
    5004:	mov	x0, x19
    5008:	bl	5060 <PyInit__xxsubinterpreters@@Base+0x264c>
    500c:	mov	x0, x20
    5010:	ldp	x20, x19, [sp, #16]
    5014:	ldp	x29, x30, [sp], #32
    5018:	ret
    501c:	stp	x29, x30, [sp, #-16]!
    5020:	mov	x29, sp
    5024:	mov	x8, x0
    5028:	ldr	x0, [x0, #8]
    502c:	cbz	x0, 5058 <PyInit__xxsubinterpreters@@Base+0x2644>
    5030:	ldr	x9, [x8, #16]
    5034:	ldr	x10, [x0, #8]
    5038:	cmp	x9, x0
    503c:	str	x10, [x8, #8]
    5040:	b.ne	5048 <PyInit__xxsubinterpreters@@Base+0x2634>  // b.any
    5044:	str	xzr, [x8, #16]
    5048:	ldr	x9, [x8]
    504c:	sub	x9, x9, #0x1
    5050:	str	x9, [x8]
    5054:	bl	5098 <PyInit__xxsubinterpreters@@Base+0x2684>
    5058:	ldp	x29, x30, [sp], #16
    505c:	ret
    5060:	stp	x29, x30, [sp, #-32]!
    5064:	stp	x20, x19, [sp, #16]
    5068:	mov	x29, sp
    506c:	ldr	x8, [x0, #32]
    5070:	cbz	x8, 508c <PyInit__xxsubinterpreters@@Base+0x2678>
    5074:	ldr	x20, [x8]
    5078:	mov	x19, x0
    507c:	bl	31c8 <PyInit__xxsubinterpreters@@Base+0x7b4>
    5080:	mov	x0, x19
    5084:	str	xzr, [x20, #8]
    5088:	bl	3144 <PyInit__xxsubinterpreters@@Base+0x730>
    508c:	ldp	x20, x19, [sp, #16]
    5090:	ldp	x29, x30, [sp], #32
    5094:	ret
    5098:	stp	x29, x30, [sp, #-32]!
    509c:	str	x19, [sp, #16]
    50a0:	mov	x29, sp
    50a4:	ldr	x19, [x0]
    50a8:	str	xzr, [x0]
    50ac:	bl	32b0 <PyInit__xxsubinterpreters@@Base+0x89c>
    50b0:	mov	x0, x19
    50b4:	ldr	x19, [sp, #16]
    50b8:	ldp	x29, x30, [sp], #32
    50bc:	ret
    50c0:	stp	x29, x30, [sp, #-16]!
    50c4:	mov	x29, sp
    50c8:	bl	50d4 <PyInit__xxsubinterpreters@@Base+0x26c0>
    50cc:	ldp	x29, x30, [sp], #16
    50d0:	ret
    50d4:	stp	x29, x30, [sp, #-48]!
    50d8:	stp	x22, x21, [sp, #16]
    50dc:	stp	x20, x19, [sp, #32]
    50e0:	mov	x29, sp
    50e4:	adrp	x20, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    50e8:	add	x20, x20, #0x930
    50ec:	ldr	x8, [x20]
    50f0:	mov	w21, w1
    50f4:	mov	x19, x0
    50f8:	mov	w1, #0x1                   	// #1
    50fc:	mov	x0, x8
    5100:	mov	w22, w2
    5104:	bl	2640 <PyThread_acquire_lock@plt>
    5108:	ldr	x0, [x20, #8]
    510c:	mov	x1, x19
    5110:	mov	x2, xzr
    5114:	bl	30c0 <PyInit__xxsubinterpreters@@Base+0x6ac>
    5118:	cbz	x0, 5180 <PyInit__xxsubinterpreters@@Base+0x276c>
    511c:	mov	x20, x0
    5120:	ldr	x0, [x0, #8]
    5124:	cbz	x0, 516c <PyInit__xxsubinterpreters@@Base+0x2758>
    5128:	cmp	w21, #0x1
    512c:	b.ne	513c <PyInit__xxsubinterpreters@@Base+0x2728>  // b.any
    5130:	cbnz	w22, 513c <PyInit__xxsubinterpreters@@Base+0x2728>
    5134:	ldr	x8, [x0, #32]
    5138:	cbnz	x8, 516c <PyInit__xxsubinterpreters@@Base+0x2758>
    513c:	mov	w1, w22
    5140:	bl	51e8 <PyInit__xxsubinterpreters@@Base+0x27d4>
    5144:	cbz	w0, 51bc <PyInit__xxsubinterpreters@@Base+0x27a8>
    5148:	cmp	w21, #0x1
    514c:	b.ne	5198 <PyInit__xxsubinterpreters@@Base+0x2784>  // b.any
    5150:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5154:	ldr	x0, [x8, #2424]
    5158:	bl	26a0 <PyErr_ExceptionMatches@plt>
    515c:	cbz	w0, 5198 <PyInit__xxsubinterpreters@@Base+0x2784>
    5160:	ldr	x8, [x20, #8]
    5164:	ldr	x8, [x8, #32]
    5168:	cbz	x8, 51d0 <PyInit__xxsubinterpreters@@Base+0x27bc>
    516c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5170:	ldr	x0, [x8, #2408]
    5174:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5178:	add	x1, x1, #0xb9e
    517c:	b	5190 <PyInit__xxsubinterpreters@@Base+0x277c>
    5180:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5184:	ldr	x0, [x8, #2392]
    5188:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    518c:	add	x1, x1, #0x886
    5190:	mov	x2, x19
    5194:	bl	28c0 <PyErr_Format@plt>
    5198:	mov	w19, #0xffffffff            	// #-1
    519c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    51a0:	ldr	x0, [x8, #2352]
    51a4:	bl	27b0 <PyThread_release_lock@plt>
    51a8:	mov	w0, w19
    51ac:	ldp	x20, x19, [sp, #32]
    51b0:	ldp	x22, x21, [sp, #16]
    51b4:	ldp	x29, x30, [sp], #48
    51b8:	ret
    51bc:	ldr	x0, [x20, #8]
    51c0:	bl	3144 <PyInit__xxsubinterpreters@@Base+0x730>
    51c4:	mov	w19, wzr
    51c8:	str	xzr, [x20, #8]
    51cc:	b	519c <PyInit__xxsubinterpreters@@Base+0x2788>
    51d0:	bl	26f0 <PyErr_Clear@plt>
    51d4:	mov	x0, x20
    51d8:	bl	527c <PyInit__xxsubinterpreters@@Base+0x2868>
    51dc:	cmp	w0, #0x0
    51e0:	csetm	w19, ne  // ne = any
    51e4:	b	519c <PyInit__xxsubinterpreters@@Base+0x2788>
    51e8:	stp	x29, x30, [sp, #-32]!
    51ec:	stp	x20, x19, [sp, #16]
    51f0:	mov	x29, sp
    51f4:	mov	x19, x0
    51f8:	ldr	x0, [x0]
    51fc:	mov	w20, w1
    5200:	mov	w1, #0x1                   	// #1
    5204:	bl	2640 <PyThread_acquire_lock@plt>
    5208:	ldr	w8, [x19, #24]
    520c:	cbz	w8, 5228 <PyInit__xxsubinterpreters@@Base+0x2814>
    5210:	cbz	w20, 523c <PyInit__xxsubinterpreters@@Base+0x2828>
    5214:	ldr	x0, [x19, #16]
    5218:	str	wzr, [x19, #24]
    521c:	bl	5304 <PyInit__xxsubinterpreters@@Base+0x28f0>
    5220:	mov	w20, wzr
    5224:	b	5264 <PyInit__xxsubinterpreters@@Base+0x2850>
    5228:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    522c:	ldr	x0, [x8, #2408]
    5230:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5234:	add	x1, x1, #0xbc0
    5238:	b	525c <PyInit__xxsubinterpreters@@Base+0x2848>
    523c:	ldr	x8, [x19, #8]
    5240:	ldr	x8, [x8]
    5244:	cmp	x8, #0x1
    5248:	b.lt	5214 <PyInit__xxsubinterpreters@@Base+0x2800>  // b.tstop
    524c:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5250:	ldr	x0, [x8, #2424]
    5254:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5258:	add	x1, x1, #0xc18
    525c:	bl	2670 <PyErr_SetString@plt>
    5260:	mov	w20, #0xffffffff            	// #-1
    5264:	ldr	x0, [x19]
    5268:	bl	27b0 <PyThread_release_lock@plt>
    526c:	mov	w0, w20
    5270:	ldp	x20, x19, [sp, #16]
    5274:	ldp	x29, x30, [sp], #32
    5278:	ret
    527c:	stp	x29, x30, [sp, #-48]!
    5280:	str	x21, [sp, #16]
    5284:	stp	x20, x19, [sp, #32]
    5288:	mov	x29, sp
    528c:	ldr	x21, [x0, #8]
    5290:	cbz	x21, 52c8 <PyInit__xxsubinterpreters@@Base+0x28b4>
    5294:	mov	x19, x0
    5298:	ldr	x0, [x21]
    529c:	mov	w1, #0x1                   	// #1
    52a0:	bl	2640 <PyThread_acquire_lock@plt>
    52a4:	ldr	x8, [x21, #32]
    52a8:	cbz	x8, 52d0 <PyInit__xxsubinterpreters@@Base+0x28bc>
    52ac:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    52b0:	ldr	x0, [x8, #2408]
    52b4:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    52b8:	add	x1, x1, #0xbb1
    52bc:	bl	2670 <PyErr_SetString@plt>
    52c0:	mov	w20, #0xffffffff            	// #-1
    52c4:	b	52e8 <PyInit__xxsubinterpreters@@Base+0x28d4>
    52c8:	mov	w20, wzr
    52cc:	b	52f0 <PyInit__xxsubinterpreters@@Base+0x28dc>
    52d0:	mov	w0, #0x8                   	// #8
    52d4:	bl	2910 <PyMem_Malloc@plt>
    52d8:	str	x0, [x21, #32]
    52dc:	cbz	x0, 52c0 <PyInit__xxsubinterpreters@@Base+0x28ac>
    52e0:	mov	w20, wzr
    52e4:	str	x19, [x0]
    52e8:	ldr	x0, [x21]
    52ec:	bl	27b0 <PyThread_release_lock@plt>
    52f0:	mov	w0, w20
    52f4:	ldp	x20, x19, [sp, #32]
    52f8:	ldr	x21, [sp, #16]
    52fc:	ldp	x29, x30, [sp], #48
    5300:	ret
    5304:	stp	x29, x30, [sp, #-32]!
    5308:	stp	x20, x19, [sp, #16]
    530c:	mov	x29, sp
    5310:	ldr	x20, [x0, #16]
    5314:	mov	x19, x0
    5318:	cbz	x20, 5334 <PyInit__xxsubinterpreters@@Base+0x2920>
    531c:	mov	w2, #0x1                   	// #1
    5320:	mov	x0, x19
    5324:	mov	x1, x20
    5328:	bl	5360 <PyInit__xxsubinterpreters@@Base+0x294c>
    532c:	ldr	x20, [x20]
    5330:	cbnz	x20, 531c <PyInit__xxsubinterpreters@@Base+0x2908>
    5334:	ldr	x20, [x19, #24]
    5338:	cbz	x20, 5354 <PyInit__xxsubinterpreters@@Base+0x2940>
    533c:	mov	x0, x19
    5340:	mov	x1, x20
    5344:	mov	w2, wzr
    5348:	bl	5360 <PyInit__xxsubinterpreters@@Base+0x294c>
    534c:	ldr	x20, [x20]
    5350:	cbnz	x20, 533c <PyInit__xxsubinterpreters@@Base+0x2928>
    5354:	ldp	x20, x19, [sp, #16]
    5358:	ldp	x29, x30, [sp], #32
    535c:	ret
    5360:	cmp	w2, #0x0
    5364:	cset	w8, eq  // eq = none
    5368:	str	wzr, [x1, #16]
    536c:	lsl	x8, x8, #3
    5370:	ldr	x9, [x0, x8]
    5374:	sub	x9, x9, #0x1
    5378:	str	x9, [x0, x8]
    537c:	ret
    5380:	sub	sp, sp, #0x40
    5384:	stp	x29, x30, [sp, #16]
    5388:	stp	x22, x21, [sp, #32]
    538c:	stp	x20, x19, [sp, #48]
    5390:	add	x29, sp, #0x10
    5394:	mov	w19, w2
    5398:	mov	w20, w1
    539c:	mov	x22, x0
    53a0:	bl	3d6c <PyInit__xxsubinterpreters@@Base+0x1358>
    53a4:	cbz	x0, 53f0 <PyInit__xxsubinterpreters@@Base+0x29dc>
    53a8:	mov	x21, x0
    53ac:	add	x1, sp, #0x8
    53b0:	mov	x0, x22
    53b4:	str	xzr, [sp, #8]
    53b8:	bl	4b44 <PyInit__xxsubinterpreters@@Base+0x2130>
    53bc:	cbz	x0, 53f0 <PyInit__xxsubinterpreters@@Base+0x29dc>
    53c0:	mov	x22, x0
    53c4:	mov	x0, x21
    53c8:	bl	2680 <PyInterpreterState_GetID@plt>
    53cc:	mov	x1, x0
    53d0:	sub	w2, w20, w19
    53d4:	mov	x0, x22
    53d8:	bl	540c <PyInit__xxsubinterpreters@@Base+0x29f8>
    53dc:	ldr	x8, [sp, #8]
    53e0:	mov	w19, w0
    53e4:	mov	x0, x8
    53e8:	bl	27b0 <PyThread_release_lock@plt>
    53ec:	b	53f4 <PyInit__xxsubinterpreters@@Base+0x29e0>
    53f0:	mov	w19, #0xffffffff            	// #-1
    53f4:	mov	w0, w19
    53f8:	ldp	x20, x19, [sp, #48]
    53fc:	ldp	x22, x21, [sp, #32]
    5400:	ldp	x29, x30, [sp, #16]
    5404:	add	sp, sp, #0x40
    5408:	ret
    540c:	stp	x29, x30, [sp, #-48]!
    5410:	str	x21, [sp, #16]
    5414:	stp	x20, x19, [sp, #32]
    5418:	mov	x29, sp
    541c:	mov	x19, x0
    5420:	ldr	x0, [x0]
    5424:	mov	x21, x1
    5428:	mov	w1, #0x1                   	// #1
    542c:	mov	w20, w2
    5430:	bl	2640 <PyThread_acquire_lock@plt>
    5434:	ldr	w8, [x19, #24]
    5438:	cbz	w8, 5458 <PyInit__xxsubinterpreters@@Base+0x2a44>
    543c:	ldr	x0, [x19, #16]
    5440:	mov	x1, x21
    5444:	mov	w2, w20
    5448:	bl	54a0 <PyInit__xxsubinterpreters@@Base+0x2a8c>
    544c:	cbz	w0, 5474 <PyInit__xxsubinterpreters@@Base+0x2a60>
    5450:	mov	w20, #0xffffffff            	// #-1
    5454:	b	5484 <PyInit__xxsubinterpreters@@Base+0x2a70>
    5458:	adrp	x8, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    545c:	ldr	x0, [x8, #2408]
    5460:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5464:	add	x1, x1, #0xbc0
    5468:	bl	2670 <PyErr_SetString@plt>
    546c:	mov	w20, #0xffffffff            	// #-1
    5470:	b	5484 <PyInit__xxsubinterpreters@@Base+0x2a70>
    5474:	ldr	x0, [x19, #16]
    5478:	bl	5564 <PyInit__xxsubinterpreters@@Base+0x2b50>
    547c:	mov	w20, wzr
    5480:	str	w0, [x19, #24]
    5484:	ldr	x0, [x19]
    5488:	bl	27b0 <PyThread_release_lock@plt>
    548c:	mov	w0, w20
    5490:	ldp	x20, x19, [sp, #32]
    5494:	ldr	x21, [sp, #16]
    5498:	ldp	x29, x30, [sp], #48
    549c:	ret
    54a0:	stp	x29, x30, [sp, #-48]!
    54a4:	str	x21, [sp, #16]
    54a8:	stp	x20, x19, [sp, #32]
    54ac:	mov	x29, sp
    54b0:	mov	w21, w2
    54b4:	mov	x20, x1
    54b8:	mov	x19, x0
    54bc:	tbnz	w2, #31, 5500 <PyInit__xxsubinterpreters@@Base+0x2aec>
    54c0:	ldr	x0, [x19, #16]
    54c4:	add	x2, x29, #0x18
    54c8:	mov	x1, x20
    54cc:	bl	4da0 <PyInit__xxsubinterpreters@@Base+0x238c>
    54d0:	mov	x1, x0
    54d4:	cbnz	x0, 54f4 <PyInit__xxsubinterpreters@@Base+0x2ae0>
    54d8:	ldr	x1, [x29, #24]
    54dc:	mov	w3, #0x1                   	// #1
    54e0:	mov	x0, x19
    54e4:	mov	x2, x20
    54e8:	bl	4ddc <PyInit__xxsubinterpreters@@Base+0x23c8>
    54ec:	mov	x1, x0
    54f0:	cbz	x0, 555c <PyInit__xxsubinterpreters@@Base+0x2b48>
    54f4:	mov	w2, #0x1                   	// #1
    54f8:	mov	x0, x19
    54fc:	bl	5360 <PyInit__xxsubinterpreters@@Base+0x294c>
    5500:	cmp	w21, #0x0
    5504:	b.gt	5548 <PyInit__xxsubinterpreters@@Base+0x2b34>
    5508:	ldr	x0, [x19, #24]
    550c:	add	x2, x29, #0x18
    5510:	mov	x1, x20
    5514:	bl	4da0 <PyInit__xxsubinterpreters@@Base+0x238c>
    5518:	mov	x1, x0
    551c:	cbnz	x0, 553c <PyInit__xxsubinterpreters@@Base+0x2b28>
    5520:	ldr	x1, [x29, #24]
    5524:	mov	x0, x19
    5528:	mov	x2, x20
    552c:	mov	w3, wzr
    5530:	bl	4ddc <PyInit__xxsubinterpreters@@Base+0x23c8>
    5534:	mov	x1, x0
    5538:	cbz	x0, 555c <PyInit__xxsubinterpreters@@Base+0x2b48>
    553c:	mov	x0, x19
    5540:	mov	w2, wzr
    5544:	bl	5360 <PyInit__xxsubinterpreters@@Base+0x294c>
    5548:	mov	w0, wzr
    554c:	ldp	x20, x19, [sp, #32]
    5550:	ldr	x21, [sp, #16]
    5554:	ldp	x29, x30, [sp], #48
    5558:	ret
    555c:	mov	w0, #0xffffffff            	// #-1
    5560:	b	554c <PyInit__xxsubinterpreters@@Base+0x2b38>
    5564:	ldr	x8, [x0]
    5568:	cbnz	x8, 5574 <PyInit__xxsubinterpreters@@Base+0x2b60>
    556c:	ldr	x8, [x0, #8]
    5570:	cbz	x8, 557c <PyInit__xxsubinterpreters@@Base+0x2b68>
    5574:	mov	w0, #0x1                   	// #1
    5578:	ret
    557c:	ldr	x8, [x0, #16]
    5580:	cbnz	x8, 558c <PyInit__xxsubinterpreters@@Base+0x2b78>
    5584:	ldr	x8, [x0, #24]
    5588:	cbz	x8, 5574 <PyInit__xxsubinterpreters@@Base+0x2b60>
    558c:	mov	w0, wzr
    5590:	ret
    5594:	sub	sp, sp, #0x40
    5598:	stp	x29, x30, [sp, #48]
    559c:	add	x29, sp, #0x30
    55a0:	mov	w8, #0xffffffff            	// #-1
    55a4:	adrp	x2, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    55a8:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    55ac:	adrp	x4, 4000 <PyInit__xxsubinterpreters@@Base+0x15ec>
    55b0:	stp	wzr, w8, [x29, #-20]
    55b4:	stur	w8, [x29, #-12]
    55b8:	add	x8, sp, #0x18
    55bc:	sub	x9, x29, #0x14
    55c0:	add	x2, x2, #0xc69
    55c4:	add	x3, x3, #0x8f8
    55c8:	add	x4, x4, #0x8b8
    55cc:	sub	x5, x29, #0x8
    55d0:	sub	x6, x29, #0xc
    55d4:	sub	x7, x29, #0x10
    55d8:	str	wzr, [sp, #24]
    55dc:	stp	x9, x8, [sp]
    55e0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    55e4:	cbz	w0, 560c <PyInit__xxsubinterpreters@@Base+0x2bf8>
    55e8:	ldp	w8, w9, [x29, #-16]
    55ec:	orr	w10, w8, w9
    55f0:	cbz	w10, 5614 <PyInit__xxsubinterpreters@@Base+0x2c00>
    55f4:	cmp	w9, #0x1
    55f8:	b.ne	5634 <PyInit__xxsubinterpreters@@Base+0x2c20>  // b.any
    55fc:	add	w8, w8, #0x1
    5600:	cmp	w8, #0x2
    5604:	cset	w2, cc  // cc = lo, ul, last
    5608:	b	563c <PyInit__xxsubinterpreters@@Base+0x2c28>
    560c:	mov	x0, xzr
    5610:	b	565c <PyInit__xxsubinterpreters@@Base+0x2c48>
    5614:	adrp	x8, 16000 <PyInit__xxsubinterpreters@@Base+0x135ec>
    5618:	ldr	x8, [x8, #4016]
    561c:	adrp	x1, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5620:	add	x1, x1, #0xc84
    5624:	ldr	x0, [x8]
    5628:	bl	2670 <PyErr_SetString@plt>
    562c:	mov	x0, xzr
    5630:	b	565c <PyInit__xxsubinterpreters@@Base+0x2c48>
    5634:	cmp	w8, #0x1
    5638:	csetm	w2, eq  // eq = none
    563c:	ldur	x1, [x29, #-8]
    5640:	ldur	w4, [x29, #-20]
    5644:	ldr	w5, [sp, #24]
    5648:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    564c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5650:	add	x0, x0, #0x230
    5654:	add	x3, x3, #0x930
    5658:	bl	3444 <PyInit__xxsubinterpreters@@Base+0xa30>
    565c:	ldp	x29, x30, [sp, #48]
    5660:	add	sp, sp, #0x40
    5664:	ret
    5668:	stp	x29, x30, [sp, #-32]!
    566c:	stp	x20, x19, [sp, #16]
    5670:	mov	x29, sp
    5674:	ldr	x20, [x0]
    5678:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    567c:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x145ec>
    5680:	add	x0, x0, #0x230
    5684:	ldr	x1, [x20]
    5688:	ldr	w2, [x20, #8]
    568c:	add	x3, x3, #0x930
    5690:	mov	w4, wzr
    5694:	mov	w5, wzr
    5698:	bl	3444 <PyInit__xxsubinterpreters@@Base+0xa30>
    569c:	ldr	w1, [x20, #8]
    56a0:	mov	x19, x0
    56a4:	cbz	w1, 56d4 <PyInit__xxsubinterpreters@@Base+0x2cc0>
    56a8:	ldr	w8, [x20, #12]
    56ac:	cbz	w8, 56d4 <PyInit__xxsubinterpreters@@Base+0x2cc0>
    56b0:	mov	x0, x19
    56b4:	bl	56e4 <PyInit__xxsubinterpreters@@Base+0x2cd0>
    56b8:	cbz	x0, 56d0 <PyInit__xxsubinterpreters@@Base+0x2cbc>
    56bc:	mov	x20, x0
    56c0:	mov	x0, x19
    56c4:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    56c8:	mov	x19, x20
    56cc:	b	56d4 <PyInit__xxsubinterpreters@@Base+0x2cc0>
    56d0:	bl	26f0 <PyErr_Clear@plt>
    56d4:	mov	x0, x19
    56d8:	ldp	x20, x19, [sp, #16]
    56dc:	ldp	x29, x30, [sp], #32
    56e0:	ret
    56e4:	stp	x29, x30, [sp, #-48]!
    56e8:	str	x21, [sp, #16]
    56ec:	stp	x20, x19, [sp, #32]
    56f0:	mov	x29, sp
    56f4:	mov	x19, x0
    56f8:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    56fc:	add	x0, x0, #0xd95
    5700:	mov	w20, w1
    5704:	bl	2750 <PyImport_ImportModule@plt>
    5708:	mov	x21, x0
    570c:	cbnz	x0, 5728 <PyInit__xxsubinterpreters@@Base+0x2d14>
    5710:	bl	26f0 <PyErr_Clear@plt>
    5714:	adrp	x0, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5718:	add	x0, x0, #0xd88
    571c:	bl	2750 <PyImport_ImportModule@plt>
    5720:	mov	x21, x0
    5724:	cbz	x0, 5778 <PyInit__xxsubinterpreters@@Base+0x2d64>
    5728:	adrp	x8, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    572c:	adrp	x9, 5000 <PyInit__xxsubinterpreters@@Base+0x25ec>
    5730:	add	x8, x8, #0xdae
    5734:	add	x9, x9, #0xda2
    5738:	cmn	w20, #0x1
    573c:	csel	x1, x9, x8, eq  // eq = none
    5740:	mov	x0, x21
    5744:	bl	25b0 <PyObject_GetAttrString@plt>
    5748:	mov	x20, x0
    574c:	mov	x0, x21
    5750:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    5754:	cbz	x20, 5778 <PyInit__xxsubinterpreters@@Base+0x2d64>
    5758:	mov	x0, x20
    575c:	mov	x1, x19
    5760:	mov	x2, xzr
    5764:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    5768:	mov	x19, x0
    576c:	mov	x0, x20
    5770:	bl	33a4 <PyInit__xxsubinterpreters@@Base+0x990>
    5774:	b	577c <PyInit__xxsubinterpreters@@Base+0x2d68>
    5778:	mov	x19, xzr
    577c:	mov	x0, x19
    5780:	ldp	x20, x19, [sp, #32]
    5784:	ldr	x21, [sp, #16]
    5788:	ldp	x29, x30, [sp], #48
    578c:	ret

Disassembly of section .fini:

0000000000005790 <.fini>:
    5790:	stp	x29, x30, [sp, #-16]!
    5794:	mov	x29, sp
    5798:	ldp	x29, x30, [sp], #16
    579c:	ret
