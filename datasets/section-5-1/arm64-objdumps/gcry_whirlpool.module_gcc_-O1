
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_whirlpool.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <whirlpool_transform>:
   0:	stp	x29, x30, [sp, #-320]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	add	x6, sp, #0x100
  18:	add	x7, x1, #0x40
  1c:	ldrb	w2, [x1]
  20:	ldrb	w3, [x1, #1]
  24:	lsl	x3, x3, #48
  28:	orr	x2, x3, x2, lsl #56
  2c:	ldrb	w3, [x1, #2]
  30:	ldrb	w5, [x1, #3]
  34:	lsl	x5, x5, #32
  38:	orr	x3, x5, x3, lsl #40
  3c:	orr	x2, x2, x3
  40:	ldrb	w3, [x1, #4]
  44:	ldrb	w5, [x1, #5]
  48:	lsl	x5, x5, #16
  4c:	orr	x3, x5, x3, lsl #24
  50:	orr	x2, x2, x3
  54:	ldrb	w3, [x1, #6]
  58:	ldrb	w5, [x1, #7]
  5c:	orr	x3, x5, x3, lsl #8
  60:	orr	x2, x2, x3
  64:	str	x2, [x6], #8
  68:	add	x1, x1, #0x8
  6c:	cmp	x1, x7
  70:	b.ne	1c <whirlpool_transform+0x1c>  // b.any
  74:	mov	x1, #0x1                   	// #1
  78:	sub	x4, x0, #0x8
  7c:	add	x0, sp, #0xc0
  80:	add	x0, x0, x1, lsl #3
  84:	ldr	x2, [x4, x1, lsl #3]
  88:	stur	x2, [x0, #-8]
  8c:	add	x1, x1, #0x1
  90:	cmp	x1, #0x9
  94:	b.ne	7c <whirlpool_transform+0x7c>  // b.any
  98:	mov	x0, #0x1                   	// #1
  9c:	add	x1, sp, #0x80
  a0:	add	x1, x1, x0, lsl #3
  a4:	ldr	x2, [x4, x0, lsl #3]
  a8:	stur	x2, [x1, #-8]
  ac:	add	x0, x0, #0x1
  b0:	cmp	x0, #0x9
  b4:	b.ne	9c <whirlpool_transform+0x9c>  // b.any
  b8:	mov	x1, #0x1                   	// #1
  bc:	lsl	x0, x1, #3
  c0:	add	x2, sp, #0x80
  c4:	add	x3, x0, x2
  c8:	add	x2, sp, #0x100
  cc:	add	x0, x0, x2
  d0:	ldur	x2, [x3, #-8]
  d4:	ldur	x0, [x0, #-8]
  d8:	eor	x0, x2, x0
  dc:	stur	x0, [x3, #-8]
  e0:	add	x1, x1, #0x1
  e4:	cmp	x1, #0x9
  e8:	b.ne	bc <whirlpool_transform+0xbc>  // b.any
  ec:	adrp	x0, 0 <whirlpool_transform>
  f0:	ldr	x5, [x0]
  f4:	add	x10, x5, #0x50
  f8:	mov	x9, x0
  fc:	adrp	x8, 0 <whirlpool_transform>
 100:	adrp	x7, 0 <whirlpool_transform>
 104:	adrp	x6, 0 <whirlpool_transform>
 108:	b	4d4 <whirlpool_transform+0x4d4>
 10c:	ldr	x16, [sp, #128]
 110:	ldr	x17, [sp, #184]
 114:	ldr	x21, [sp, #176]
 118:	ldr	x18, [sp, #168]
 11c:	ldr	x15, [sp, #160]
 120:	ldr	x14, [sp, #152]
 124:	ldr	x13, [sp, #144]
 128:	ldr	x12, [sp, #136]
 12c:	ldr	x3, [x9]
 130:	add	x22, x3, #0x50
 134:	ubfx	x1, x17, #48, #8
 138:	add	x3, x3, #0x850
 13c:	ubfx	x0, x21, #40, #8
 140:	ldr	x1, [x22, x1, lsl #3]
 144:	ldr	x0, [x3, x0, lsl #3]
 148:	eor	x1, x1, x0
 14c:	ldr	x0, [x8]
 150:	sub	x20, x0, #0xb0
 154:	lsr	x2, x16, #56
 158:	add	x19, x0, #0x750
 15c:	and	x11, x12, #0xff
 160:	ldr	x2, [x20, x2, lsl #3]
 164:	ldr	x11, [x19, x11, lsl #3]
 168:	eor	x2, x2, x11
 16c:	eor	x1, x1, x2
 170:	add	x0, x0, #0xf50
 174:	ubfx	x11, x18, #32, #8
 178:	ldr	x2, [x7]
 17c:	add	x30, x2, #0x650
 180:	lsr	w23, w15, #24
 184:	ldr	x11, [x0, x11, lsl #3]
 188:	ldr	x23, [x30, x23, lsl #3]
 18c:	eor	x11, x11, x23
 190:	eor	x1, x1, x11
 194:	add	x2, x2, #0xe50
 198:	ubfx	x23, x14, #16, #8
 19c:	ldr	x11, [x6]
 1a0:	add	x11, x11, #0x550
 1a4:	ubfx	x24, x13, #8, #8
 1a8:	ldr	x23, [x2, x23, lsl #3]
 1ac:	ldr	x24, [x11, x24, lsl #3]
 1b0:	eor	x23, x23, x24
 1b4:	eor	x1, x1, x23
 1b8:	ldr	x23, [sp, #192]
 1bc:	eor	x1, x1, x23
 1c0:	str	x1, [sp, #64]
 1c4:	ubfx	x1, x16, #48, #8
 1c8:	ubfx	x23, x17, #40, #8
 1cc:	ldr	x1, [x22, x1, lsl #3]
 1d0:	ldr	x23, [x3, x23, lsl #3]
 1d4:	eor	x1, x1, x23
 1d8:	lsr	x23, x12, #56
 1dc:	and	x24, x13, #0xff
 1e0:	ldr	x23, [x20, x23, lsl #3]
 1e4:	ldr	x24, [x19, x24, lsl #3]
 1e8:	eor	x23, x23, x24
 1ec:	eor	x1, x1, x23
 1f0:	ubfx	x23, x21, #32, #8
 1f4:	lsr	w24, w18, #24
 1f8:	ldr	x23, [x0, x23, lsl #3]
 1fc:	ldr	x24, [x30, x24, lsl #3]
 200:	eor	x23, x23, x24
 204:	eor	x1, x1, x23
 208:	ubfx	x23, x15, #16, #8
 20c:	ubfx	x24, x14, #8, #8
 210:	ldr	x23, [x2, x23, lsl #3]
 214:	ldr	x24, [x11, x24, lsl #3]
 218:	eor	x23, x23, x24
 21c:	eor	x1, x1, x23
 220:	ldr	x23, [sp, #200]
 224:	eor	x1, x1, x23
 228:	str	x1, [sp, #72]
 22c:	ubfx	x1, x12, #48, #8
 230:	ubfx	x23, x16, #40, #8
 234:	ldr	x1, [x22, x1, lsl #3]
 238:	ldr	x23, [x3, x23, lsl #3]
 23c:	eor	x1, x1, x23
 240:	lsr	x23, x13, #56
 244:	and	x24, x14, #0xff
 248:	ldr	x23, [x20, x23, lsl #3]
 24c:	ldr	x24, [x19, x24, lsl #3]
 250:	eor	x23, x23, x24
 254:	eor	x1, x1, x23
 258:	ubfx	x23, x17, #32, #8
 25c:	lsr	w24, w21, #24
 260:	ldr	x23, [x0, x23, lsl #3]
 264:	ldr	x24, [x30, x24, lsl #3]
 268:	eor	x23, x23, x24
 26c:	eor	x1, x1, x23
 270:	ubfx	x23, x18, #16, #8
 274:	ubfx	x24, x15, #8, #8
 278:	ldr	x23, [x2, x23, lsl #3]
 27c:	ldr	x24, [x11, x24, lsl #3]
 280:	eor	x23, x23, x24
 284:	eor	x1, x1, x23
 288:	ldr	x23, [sp, #208]
 28c:	eor	x1, x1, x23
 290:	str	x1, [sp, #80]
 294:	ubfx	x1, x13, #48, #8
 298:	ubfx	x23, x12, #40, #8
 29c:	ldr	x1, [x22, x1, lsl #3]
 2a0:	ldr	x23, [x3, x23, lsl #3]
 2a4:	eor	x1, x1, x23
 2a8:	lsr	x23, x14, #56
 2ac:	and	x24, x15, #0xff
 2b0:	ldr	x23, [x20, x23, lsl #3]
 2b4:	ldr	x24, [x19, x24, lsl #3]
 2b8:	eor	x23, x23, x24
 2bc:	eor	x1, x1, x23
 2c0:	ubfx	x23, x16, #32, #8
 2c4:	lsr	w24, w17, #24
 2c8:	ldr	x23, [x0, x23, lsl #3]
 2cc:	ldr	x24, [x30, x24, lsl #3]
 2d0:	eor	x23, x23, x24
 2d4:	eor	x1, x1, x23
 2d8:	ubfx	x23, x21, #16, #8
 2dc:	ubfx	x24, x18, #8, #8
 2e0:	ldr	x23, [x2, x23, lsl #3]
 2e4:	ldr	x24, [x11, x24, lsl #3]
 2e8:	eor	x23, x23, x24
 2ec:	eor	x1, x1, x23
 2f0:	ldr	x23, [sp, #216]
 2f4:	eor	x1, x1, x23
 2f8:	str	x1, [sp, #88]
 2fc:	ubfx	x1, x14, #48, #8
 300:	ubfx	x23, x13, #40, #8
 304:	ldr	x1, [x22, x1, lsl #3]
 308:	ldr	x23, [x3, x23, lsl #3]
 30c:	eor	x1, x1, x23
 310:	lsr	x23, x15, #56
 314:	and	x24, x18, #0xff
 318:	ldr	x23, [x20, x23, lsl #3]
 31c:	ldr	x24, [x19, x24, lsl #3]
 320:	eor	x23, x23, x24
 324:	eor	x1, x1, x23
 328:	ubfx	x23, x12, #32, #8
 32c:	lsr	w24, w16, #24
 330:	ldr	x23, [x0, x23, lsl #3]
 334:	ldr	x24, [x30, x24, lsl #3]
 338:	eor	x23, x23, x24
 33c:	eor	x1, x1, x23
 340:	ubfx	x23, x17, #16, #8
 344:	ubfx	x24, x21, #8, #8
 348:	ldr	x23, [x2, x23, lsl #3]
 34c:	ldr	x24, [x11, x24, lsl #3]
 350:	eor	x23, x23, x24
 354:	eor	x1, x1, x23
 358:	ldr	x23, [sp, #224]
 35c:	eor	x1, x1, x23
 360:	str	x1, [sp, #96]
 364:	ubfx	x1, x15, #48, #8
 368:	ubfx	x23, x14, #40, #8
 36c:	ldr	x1, [x22, x1, lsl #3]
 370:	ldr	x23, [x3, x23, lsl #3]
 374:	eor	x1, x1, x23
 378:	lsr	x23, x18, #56
 37c:	and	x24, x21, #0xff
 380:	ldr	x23, [x20, x23, lsl #3]
 384:	ldr	x24, [x19, x24, lsl #3]
 388:	eor	x23, x23, x24
 38c:	eor	x1, x1, x23
 390:	ubfx	x23, x13, #32, #8
 394:	lsr	w24, w12, #24
 398:	ldr	x23, [x0, x23, lsl #3]
 39c:	ldr	x24, [x30, x24, lsl #3]
 3a0:	eor	x23, x23, x24
 3a4:	eor	x1, x1, x23
 3a8:	ubfx	x23, x16, #16, #8
 3ac:	ubfx	x24, x17, #8, #8
 3b0:	ldr	x23, [x2, x23, lsl #3]
 3b4:	ldr	x24, [x11, x24, lsl #3]
 3b8:	eor	x23, x23, x24
 3bc:	eor	x1, x1, x23
 3c0:	ldr	x23, [sp, #232]
 3c4:	eor	x1, x1, x23
 3c8:	str	x1, [sp, #104]
 3cc:	ubfx	x1, x18, #48, #8
 3d0:	ubfx	x23, x15, #40, #8
 3d4:	ldr	x1, [x22, x1, lsl #3]
 3d8:	ldr	x23, [x3, x23, lsl #3]
 3dc:	eor	x1, x1, x23
 3e0:	lsr	x23, x21, #56
 3e4:	and	x24, x17, #0xff
 3e8:	ldr	x23, [x20, x23, lsl #3]
 3ec:	ldr	x24, [x19, x24, lsl #3]
 3f0:	eor	x23, x23, x24
 3f4:	eor	x1, x1, x23
 3f8:	ubfx	x23, x14, #32, #8
 3fc:	lsr	w24, w13, #24
 400:	ldr	x23, [x0, x23, lsl #3]
 404:	ldr	x24, [x30, x24, lsl #3]
 408:	eor	x23, x23, x24
 40c:	eor	x1, x1, x23
 410:	ubfx	x23, x12, #16, #8
 414:	ubfx	x24, x16, #8, #8
 418:	ldr	x23, [x2, x23, lsl #3]
 41c:	ldr	x24, [x11, x24, lsl #3]
 420:	eor	x23, x23, x24
 424:	eor	x1, x1, x23
 428:	ldr	x23, [sp, #240]
 42c:	eor	x1, x1, x23
 430:	str	x1, [sp, #112]
 434:	ubfx	x21, x21, #48, #8
 438:	ubfx	x18, x18, #40, #8
 43c:	ldr	x1, [x22, x21, lsl #3]
 440:	ldr	x3, [x3, x18, lsl #3]
 444:	eor	x1, x1, x3
 448:	lsr	x17, x17, #56
 44c:	and	x16, x16, #0xff
 450:	ldr	x3, [x20, x17, lsl #3]
 454:	ldr	x16, [x19, x16, lsl #3]
 458:	eor	x3, x3, x16
 45c:	eor	x1, x1, x3
 460:	ubfx	x15, x15, #32, #8
 464:	lsr	w14, w14, #24
 468:	ldr	x0, [x0, x15, lsl #3]
 46c:	ldr	x3, [x30, x14, lsl #3]
 470:	eor	x0, x0, x3
 474:	eor	x0, x1, x0
 478:	ubfx	x13, x13, #16, #8
 47c:	ubfx	x12, x12, #8, #8
 480:	ldr	x1, [x2, x13, lsl #3]
 484:	ldr	x2, [x11, x12, lsl #3]
 488:	eor	x1, x1, x2
 48c:	eor	x0, x0, x1
 490:	ldr	x1, [sp, #248]
 494:	eor	x0, x0, x1
 498:	str	x0, [sp, #120]
 49c:	mov	x1, #0x1                   	// #1
 4a0:	lsl	x0, x1, #3
 4a4:	add	x2, sp, #0x80
 4a8:	add	x2, x0, x2
 4ac:	add	x3, sp, #0x40
 4b0:	add	x0, x0, x3
 4b4:	ldur	x0, [x0, #-8]
 4b8:	stur	x0, [x2, #-8]
 4bc:	add	x1, x1, #0x1
 4c0:	cmp	x1, #0x9
 4c4:	b.ne	4a0 <whirlpool_transform+0x4a0>  // b.any
 4c8:	add	x5, x5, #0x8
 4cc:	cmp	x5, x10
 4d0:	b.eq	85c <whirlpool_transform+0x85c>  // b.none
 4d4:	ldr	x15, [sp, #192]
 4d8:	ldr	x16, [sp, #248]
 4dc:	ldr	x18, [sp, #240]
 4e0:	ldr	x17, [sp, #232]
 4e4:	ldr	x14, [sp, #224]
 4e8:	ldr	x13, [sp, #216]
 4ec:	ldr	x12, [sp, #208]
 4f0:	ldr	x11, [sp, #200]
 4f4:	ldr	x2, [x9]
 4f8:	add	x30, x2, #0x50
 4fc:	ubfx	x1, x16, #48, #8
 500:	add	x2, x2, #0x850
 504:	ubfx	x0, x18, #40, #8
 508:	ldr	x19, [x30, x1, lsl #3]
 50c:	ldr	x0, [x2, x0, lsl #3]
 510:	eor	x19, x19, x0
 514:	ldr	x0, [x8]
 518:	sub	x22, x0, #0xb0
 51c:	lsr	x1, x15, #56
 520:	add	x21, x0, #0x750
 524:	and	x3, x11, #0xff
 528:	ldr	x1, [x22, x1, lsl #3]
 52c:	ldr	x3, [x21, x3, lsl #3]
 530:	eor	x1, x1, x3
 534:	eor	x19, x19, x1
 538:	add	x0, x0, #0xf50
 53c:	ubfx	x3, x17, #32, #8
 540:	ldr	x1, [x7]
 544:	add	x20, x1, #0x650
 548:	lsr	w23, w14, #24
 54c:	ldr	x3, [x0, x3, lsl #3]
 550:	ldr	x23, [x20, x23, lsl #3]
 554:	eor	x3, x3, x23
 558:	eor	x19, x19, x3
 55c:	add	x1, x1, #0xe50
 560:	ubfx	x23, x13, #16, #8
 564:	ldr	x3, [x6]
 568:	add	x3, x3, #0x550
 56c:	ubfx	x24, x12, #8, #8
 570:	ldr	x23, [x1, x23, lsl #3]
 574:	ldr	x24, [x3, x24, lsl #3]
 578:	eor	x23, x23, x24
 57c:	eor	x19, x19, x23
 580:	ldr	x23, [x5]
 584:	eor	x19, x19, x23
 588:	str	x19, [sp, #64]
 58c:	ubfx	x19, x15, #48, #8
 590:	ubfx	x23, x16, #40, #8
 594:	ldr	x19, [x30, x19, lsl #3]
 598:	ldr	x23, [x2, x23, lsl #3]
 59c:	eor	x19, x19, x23
 5a0:	lsr	x23, x11, #56
 5a4:	and	x24, x12, #0xff
 5a8:	ldr	x23, [x22, x23, lsl #3]
 5ac:	ldr	x24, [x21, x24, lsl #3]
 5b0:	eor	x23, x23, x24
 5b4:	eor	x19, x19, x23
 5b8:	ubfx	x23, x18, #32, #8
 5bc:	lsr	w24, w17, #24
 5c0:	ldr	x23, [x0, x23, lsl #3]
 5c4:	ldr	x24, [x20, x24, lsl #3]
 5c8:	eor	x23, x23, x24
 5cc:	eor	x19, x19, x23
 5d0:	ubfx	x23, x14, #16, #8
 5d4:	ubfx	x24, x13, #8, #8
 5d8:	ldr	x23, [x1, x23, lsl #3]
 5dc:	ldr	x24, [x3, x24, lsl #3]
 5e0:	eor	x23, x23, x24
 5e4:	eor	x19, x19, x23
 5e8:	str	x19, [sp, #72]
 5ec:	ubfx	x19, x11, #48, #8
 5f0:	ubfx	x23, x15, #40, #8
 5f4:	ldr	x19, [x30, x19, lsl #3]
 5f8:	ldr	x23, [x2, x23, lsl #3]
 5fc:	eor	x19, x19, x23
 600:	lsr	x23, x12, #56
 604:	and	x24, x13, #0xff
 608:	ldr	x23, [x22, x23, lsl #3]
 60c:	ldr	x24, [x21, x24, lsl #3]
 610:	eor	x23, x23, x24
 614:	eor	x19, x19, x23
 618:	ubfx	x23, x16, #32, #8
 61c:	lsr	w24, w18, #24
 620:	ldr	x23, [x0, x23, lsl #3]
 624:	ldr	x24, [x20, x24, lsl #3]
 628:	eor	x23, x23, x24
 62c:	eor	x19, x19, x23
 630:	ubfx	x23, x17, #16, #8
 634:	ubfx	x24, x14, #8, #8
 638:	ldr	x23, [x1, x23, lsl #3]
 63c:	ldr	x24, [x3, x24, lsl #3]
 640:	eor	x23, x23, x24
 644:	eor	x19, x19, x23
 648:	str	x19, [sp, #80]
 64c:	ubfx	x19, x12, #48, #8
 650:	ubfx	x23, x11, #40, #8
 654:	ldr	x19, [x30, x19, lsl #3]
 658:	ldr	x23, [x2, x23, lsl #3]
 65c:	eor	x19, x19, x23
 660:	lsr	x23, x13, #56
 664:	and	x24, x14, #0xff
 668:	ldr	x23, [x22, x23, lsl #3]
 66c:	ldr	x24, [x21, x24, lsl #3]
 670:	eor	x23, x23, x24
 674:	eor	x19, x19, x23
 678:	ubfx	x23, x15, #32, #8
 67c:	lsr	w24, w16, #24
 680:	ldr	x23, [x0, x23, lsl #3]
 684:	ldr	x24, [x20, x24, lsl #3]
 688:	eor	x23, x23, x24
 68c:	eor	x19, x19, x23
 690:	ubfx	x23, x18, #16, #8
 694:	ubfx	x24, x17, #8, #8
 698:	ldr	x23, [x1, x23, lsl #3]
 69c:	ldr	x24, [x3, x24, lsl #3]
 6a0:	eor	x23, x23, x24
 6a4:	eor	x19, x19, x23
 6a8:	str	x19, [sp, #88]
 6ac:	ubfx	x19, x13, #48, #8
 6b0:	ubfx	x23, x12, #40, #8
 6b4:	ldr	x19, [x30, x19, lsl #3]
 6b8:	ldr	x23, [x2, x23, lsl #3]
 6bc:	eor	x19, x19, x23
 6c0:	lsr	x23, x14, #56
 6c4:	and	x24, x17, #0xff
 6c8:	ldr	x23, [x22, x23, lsl #3]
 6cc:	ldr	x24, [x21, x24, lsl #3]
 6d0:	eor	x23, x23, x24
 6d4:	eor	x19, x19, x23
 6d8:	ubfx	x23, x11, #32, #8
 6dc:	lsr	w24, w15, #24
 6e0:	ldr	x23, [x0, x23, lsl #3]
 6e4:	ldr	x24, [x20, x24, lsl #3]
 6e8:	eor	x23, x23, x24
 6ec:	eor	x19, x19, x23
 6f0:	ubfx	x23, x16, #16, #8
 6f4:	ubfx	x24, x18, #8, #8
 6f8:	ldr	x23, [x1, x23, lsl #3]
 6fc:	ldr	x24, [x3, x24, lsl #3]
 700:	eor	x23, x23, x24
 704:	eor	x19, x19, x23
 708:	str	x19, [sp, #96]
 70c:	ubfx	x19, x14, #48, #8
 710:	ubfx	x23, x13, #40, #8
 714:	ldr	x19, [x30, x19, lsl #3]
 718:	ldr	x23, [x2, x23, lsl #3]
 71c:	eor	x19, x19, x23
 720:	lsr	x23, x17, #56
 724:	and	x24, x18, #0xff
 728:	ldr	x23, [x22, x23, lsl #3]
 72c:	ldr	x24, [x21, x24, lsl #3]
 730:	eor	x23, x23, x24
 734:	eor	x19, x19, x23
 738:	ubfx	x23, x12, #32, #8
 73c:	lsr	w24, w11, #24
 740:	ldr	x23, [x0, x23, lsl #3]
 744:	ldr	x24, [x20, x24, lsl #3]
 748:	eor	x23, x23, x24
 74c:	eor	x19, x19, x23
 750:	ubfx	x23, x15, #16, #8
 754:	ubfx	x24, x16, #8, #8
 758:	ldr	x23, [x1, x23, lsl #3]
 75c:	ldr	x24, [x3, x24, lsl #3]
 760:	eor	x23, x23, x24
 764:	eor	x19, x19, x23
 768:	str	x19, [sp, #104]
 76c:	ubfx	x19, x17, #48, #8
 770:	ubfx	x23, x14, #40, #8
 774:	ldr	x19, [x30, x19, lsl #3]
 778:	ldr	x23, [x2, x23, lsl #3]
 77c:	eor	x19, x19, x23
 780:	lsr	x23, x18, #56
 784:	and	x24, x16, #0xff
 788:	ldr	x23, [x22, x23, lsl #3]
 78c:	ldr	x24, [x21, x24, lsl #3]
 790:	eor	x23, x23, x24
 794:	eor	x19, x19, x23
 798:	ubfx	x23, x13, #32, #8
 79c:	lsr	w24, w12, #24
 7a0:	ldr	x23, [x0, x23, lsl #3]
 7a4:	ldr	x24, [x20, x24, lsl #3]
 7a8:	eor	x23, x23, x24
 7ac:	eor	x19, x19, x23
 7b0:	ubfx	x23, x11, #16, #8
 7b4:	ubfx	x24, x15, #8, #8
 7b8:	ldr	x23, [x1, x23, lsl #3]
 7bc:	ldr	x24, [x3, x24, lsl #3]
 7c0:	eor	x23, x23, x24
 7c4:	eor	x19, x19, x23
 7c8:	str	x19, [sp, #112]
 7cc:	ubfx	x18, x18, #48, #8
 7d0:	ubfx	x17, x17, #40, #8
 7d4:	ldr	x18, [x30, x18, lsl #3]
 7d8:	ldr	x2, [x2, x17, lsl #3]
 7dc:	eor	x2, x18, x2
 7e0:	lsr	x16, x16, #56
 7e4:	and	x15, x15, #0xff
 7e8:	ldr	x16, [x22, x16, lsl #3]
 7ec:	ldr	x15, [x21, x15, lsl #3]
 7f0:	eor	x15, x16, x15
 7f4:	eor	x2, x2, x15
 7f8:	ubfx	x14, x14, #32, #8
 7fc:	lsr	w13, w13, #24
 800:	ldr	x0, [x0, x14, lsl #3]
 804:	ldr	x13, [x20, x13, lsl #3]
 808:	eor	x0, x0, x13
 80c:	eor	x0, x2, x0
 810:	ubfx	x12, x12, #16, #8
 814:	ubfx	x11, x11, #8, #8
 818:	ldr	x1, [x1, x12, lsl #3]
 81c:	ldr	x2, [x3, x11, lsl #3]
 820:	eor	x1, x1, x2
 824:	eor	x0, x0, x1
 828:	str	x0, [sp, #120]
 82c:	mov	x1, #0x1                   	// #1
 830:	lsl	x0, x1, #3
 834:	add	x2, sp, #0xc0
 838:	add	x2, x0, x2
 83c:	add	x3, sp, #0x40
 840:	add	x0, x0, x3
 844:	ldur	x0, [x0, #-8]
 848:	stur	x0, [x2, #-8]
 84c:	add	x1, x1, #0x1
 850:	cmp	x1, #0x9
 854:	b.ne	830 <whirlpool_transform+0x830>  // b.any
 858:	b	10c <whirlpool_transform+0x10c>
 85c:	mov	x0, #0x1                   	// #1
 860:	add	x1, sp, #0x100
 864:	add	x2, x1, x0, lsl #3
 868:	ldr	x1, [x4, x0, lsl #3]
 86c:	ldur	x2, [x2, #-8]
 870:	eor	x1, x1, x2
 874:	str	x1, [x4, x0, lsl #3]
 878:	add	x0, x0, #0x1
 87c:	cmp	x0, #0x9
 880:	b.ne	860 <whirlpool_transform+0x860>  // b.any
 884:	mov	x0, #0x1                   	// #1
 888:	add	x1, sp, #0x80
 88c:	add	x2, x1, x0, lsl #3
 890:	ldr	x1, [x4, x0, lsl #3]
 894:	ldur	x2, [x2, #-8]
 898:	eor	x1, x1, x2
 89c:	str	x1, [x4, x0, lsl #3]
 8a0:	add	x0, x0, #0x1
 8a4:	cmp	x0, #0x9
 8a8:	b.ne	888 <whirlpool_transform+0x888>  // b.any
 8ac:	ldp	x19, x20, [sp, #16]
 8b0:	ldp	x21, x22, [sp, #32]
 8b4:	ldp	x23, x24, [sp, #48]
 8b8:	ldp	x29, x30, [sp], #320
 8bc:	ret
	...

00000000000008e0 <whirlpool_read>:
 8e0:	add	x0, x0, #0x40
 8e4:	ret

00000000000008e8 <whirlpool_add>:
 8e8:	stp	x29, x30, [sp, #-64]!
 8ec:	mov	x29, sp
 8f0:	stp	x19, x20, [sp, #16]
 8f4:	stp	x21, x22, [sp, #32]
 8f8:	str	x23, [sp, #48]
 8fc:	mov	x19, x0
 900:	mov	x20, x1
 904:	mov	x22, x2
 908:	ldr	x0, [x0, #128]
 90c:	cmp	x0, #0x40
 910:	b.eq	960 <whirlpool_add+0x78>  // b.none
 914:	cbz	x1, a4c <whirlpool_add+0x164>
 918:	cbz	x0, 974 <whirlpool_add+0x8c>
 91c:	mov	x21, x2
 920:	cbz	x2, 94c <whirlpool_add+0x64>
 924:	ldr	x0, [x19, #128]
 928:	cmp	x0, #0x3f
 92c:	b.hi	a60 <whirlpool_add+0x178>  // b.pmore
 930:	add	x1, x0, #0x1
 934:	str	x1, [x19, #128]
 938:	ldrb	w1, [x20], #1
 93c:	add	x0, x19, x0
 940:	strb	w1, [x0, #64]
 944:	subs	x21, x21, #0x1
 948:	b.ne	924 <whirlpool_add+0x3c>  // b.any
 94c:	mov	x2, #0x0                   	// #0
 950:	mov	x1, #0x0                   	// #0
 954:	mov	x0, x19
 958:	bl	8e8 <whirlpool_add>
 95c:	b	a4c <whirlpool_add+0x164>
 960:	add	x1, x19, #0x40
 964:	mov	x0, x19
 968:	bl	0 <whirlpool_transform>
 96c:	str	xzr, [x19, #128]
 970:	cbz	x20, a4c <whirlpool_add+0x164>
 974:	mov	x21, x22
 978:	mov	x23, x20
 97c:	cmp	x22, #0x3f
 980:	b.ls	9b4 <whirlpool_add+0xcc>  // b.plast
 984:	sub	x23, x21, #0x40
 988:	and	x23, x23, #0xffffffffffffffc0
 98c:	add	x23, x23, #0x40
 990:	add	x23, x20, x23
 994:	mov	x1, x20
 998:	mov	x0, x19
 99c:	bl	0 <whirlpool_transform>
 9a0:	str	xzr, [x19, #128]
 9a4:	add	x20, x20, #0x40
 9a8:	cmp	x20, x23
 9ac:	b.ne	994 <whirlpool_add+0xac>  // b.any
 9b0:	and	x21, x21, #0x3f
 9b4:	cbz	x21, 9e8 <whirlpool_add+0x100>
 9b8:	mov	x1, x23
 9bc:	ldr	x0, [x19, #128]
 9c0:	cmp	x0, #0x3f
 9c4:	b.hi	9e8 <whirlpool_add+0x100>  // b.pmore
 9c8:	add	x2, x0, #0x1
 9cc:	str	x2, [x19, #128]
 9d0:	ldrb	w2, [x1], #1
 9d4:	add	x0, x19, x0
 9d8:	strb	w2, [x0, #64]
 9dc:	sub	x0, x21, x1
 9e0:	cmn	x23, x0
 9e4:	b.ne	9bc <whirlpool_add+0xd4>  // b.any
 9e8:	lsl	x1, x22, #3
 9ec:	cmp	xzr, x22, lsl #3
 9f0:	b.eq	a4c <whirlpool_add+0x164>  // b.none
 9f4:	ldrb	w0, [x19, #167]
 9f8:	and	w2, w1, #0xff
 9fc:	add	w0, w0, w2
 a00:	strb	w0, [x19, #167]
 a04:	lsr	x2, x1, #8
 a08:	lsr	w0, w0, #8
 a0c:	add	x3, x19, #0xa6
 a10:	add	x19, x19, #0x87
 a14:	cmp	x2, #0x0
 a18:	ccmp	w0, #0x0, #0x0, eq  // eq = none
 a1c:	b.eq	a4c <whirlpool_add+0x164>  // b.none
 a20:	add	w0, w0, w2, uxtb
 a24:	ldrb	w1, [x3]
 a28:	add	w0, w1, w0
 a2c:	strb	w0, [x3], #-1
 a30:	lsr	x2, x2, #8
 a34:	lsr	w0, w0, #8
 a38:	cmp	x19, x3
 a3c:	b.ne	a14 <whirlpool_add+0x12c>  // b.any
 a40:	cmp	x2, #0x0
 a44:	ccmp	w0, #0x0, #0x0, eq  // eq = none
 a48:	b.ne	a84 <whirlpool_add+0x19c>  // b.any
 a4c:	ldp	x19, x20, [sp, #16]
 a50:	ldp	x21, x22, [sp, #32]
 a54:	ldr	x23, [sp, #48]
 a58:	ldp	x29, x30, [sp], #64
 a5c:	ret
 a60:	mov	x2, #0x0                   	// #0
 a64:	mov	x1, #0x0                   	// #0
 a68:	mov	x0, x19
 a6c:	bl	8e8 <whirlpool_add>
 a70:	cbz	x21, a4c <whirlpool_add+0x164>
 a74:	mov	x23, x20
 a78:	cmp	x21, #0x3f
 a7c:	b.hi	984 <whirlpool_add+0x9c>  // b.pmore
 a80:	b	9b8 <whirlpool_add+0xd0>
 a84:	adrp	x0, 0 <whirlpool_transform>
 a88:	ldr	x3, [x0]
 a8c:	add	x3, x3, #0xd50
 a90:	mov	w2, #0x547                 	// #1351
 a94:	adrp	x0, 0 <whirlpool_transform>
 a98:	ldr	x1, [x0]
 a9c:	adrp	x0, 0 <whirlpool_transform>
 aa0:	ldr	x0, [x0]
 aa4:	bl	0 <_gcry_assert_failed>
	...

0000000000000ac0 <whirlpool_final>:
 ac0:	stp	x29, x30, [sp, #-32]!
 ac4:	mov	x29, sp
 ac8:	stp	x19, x20, [sp, #16]
 acc:	mov	x19, x0
 ad0:	mov	x2, #0x0                   	// #0
 ad4:	mov	x1, #0x0                   	// #0
 ad8:	bl	8e8 <whirlpool_add>
 adc:	ldr	x0, [x19, #128]
 ae0:	add	x1, x0, #0x1
 ae4:	str	x1, [x19, #128]
 ae8:	add	x2, x19, x0
 aec:	mov	w3, #0xffffff80            	// #-128
 af0:	strb	w3, [x2, #64]
 af4:	cmp	x1, #0x20
 af8:	b.ls	b34 <whirlpool_final+0x74>  // b.plast
 afc:	cmp	x1, #0x3f
 b00:	b.hi	b24 <whirlpool_final+0x64>  // b.pmore
 b04:	add	x0, x0, #0x41
 b08:	add	x0, x19, x0
 b0c:	add	x1, x19, #0x80
 b10:	strb	wzr, [x0], #1
 b14:	cmp	x0, x1
 b18:	b.ne	b10 <whirlpool_final+0x50>  // b.any
 b1c:	mov	x0, #0x40                  	// #64
 b20:	str	x0, [x19, #128]
 b24:	mov	x2, #0x0                   	// #0
 b28:	mov	x1, #0x0                   	// #0
 b2c:	mov	x0, x19
 b30:	bl	8e8 <whirlpool_add>
 b34:	ldr	x0, [x19, #128]
 b38:	cmp	x0, #0x1f
 b3c:	b.hi	b60 <whirlpool_final+0xa0>  // b.pmore
 b40:	add	x0, x0, #0x40
 b44:	add	x0, x19, x0
 b48:	add	x1, x19, #0x60
 b4c:	strb	wzr, [x0], #1
 b50:	cmp	x0, x1
 b54:	b.ne	b4c <whirlpool_final+0x8c>  // b.any
 b58:	mov	x0, #0x20                  	// #32
 b5c:	str	x0, [x19, #128]
 b60:	add	x20, x19, #0x40
 b64:	mov	x2, #0x20                  	// #32
 b68:	add	x1, x19, #0x88
 b6c:	add	x0, x20, x0
 b70:	bl	0 <grub_memmove>
 b74:	ldr	x0, [x19, #128]
 b78:	add	x0, x0, #0x20
 b7c:	str	x0, [x19, #128]
 b80:	mov	x2, #0x0                   	// #0
 b84:	mov	x1, #0x0                   	// #0
 b88:	mov	x0, x19
 b8c:	bl	8e8 <whirlpool_add>
 b90:	mov	x0, x19
 b94:	mov	x3, x20
 b98:	ldr	x1, [x0]
 b9c:	lsr	x2, x1, #56
 ba0:	strb	w2, [x0, #64]
 ba4:	lsr	x2, x1, #48
 ba8:	strb	w2, [x0, #65]
 bac:	lsr	x2, x1, #40
 bb0:	strb	w2, [x0, #66]
 bb4:	lsr	x2, x1, #32
 bb8:	strb	w2, [x0, #67]
 bbc:	lsr	x2, x1, #24
 bc0:	strb	w2, [x0, #68]
 bc4:	lsr	x2, x1, #16
 bc8:	strb	w2, [x0, #69]
 bcc:	lsr	x2, x1, #8
 bd0:	strb	w2, [x0, #70]
 bd4:	strb	w1, [x0, #71]
 bd8:	add	x0, x0, #0x8
 bdc:	cmp	x0, x3
 be0:	b.ne	b98 <whirlpool_final+0xd8>  // b.any
 be4:	ldp	x19, x20, [sp, #16]
 be8:	ldp	x29, x30, [sp], #32
 bec:	ret

0000000000000bf0 <whirlpool_write>:
 bf0:	stp	x29, x30, [sp, #-16]!
 bf4:	mov	x29, sp
 bf8:	bl	8e8 <whirlpool_add>
 bfc:	ldp	x29, x30, [sp], #16
 c00:	ret

0000000000000c04 <whirlpool_init>:
 c04:	stp	x29, x30, [sp, #-16]!
 c08:	mov	x29, sp
 c0c:	mov	x2, #0xa8                  	// #168
 c10:	mov	w1, #0x0                   	// #0
 c14:	bl	0 <grub_memset>
 c18:	ldp	x29, x30, [sp], #16
 c1c:	ret

0000000000000c20 <grub_mod_init>:
 c20:	stp	x29, x30, [sp, #-16]!
 c24:	mov	x29, sp
 c28:	adrp	x0, 0 <whirlpool_transform>
 c2c:	ldr	x0, [x0]
 c30:	bl	0 <grub_md_register>
 c34:	ldp	x29, x30, [sp], #16
 c38:	ret
 c3c:	nop
	...

0000000000000c48 <grub_mod_fini>:
 c48:	stp	x29, x30, [sp, #-16]!
 c4c:	mov	x29, sp
 c50:	adrp	x0, 0 <whirlpool_transform>
 c54:	ldr	x0, [x0]
 c58:	bl	0 <grub_md_unregister>
 c5c:	ldp	x29, x30, [sp], #16
 c60:	ret
 c64:	nop
	...
