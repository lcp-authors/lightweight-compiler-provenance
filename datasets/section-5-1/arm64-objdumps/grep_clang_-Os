
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004022d0 <.init>:
  4022d0:	stp	x29, x30, [sp, #-16]!
  4022d4:	mov	x29, sp
  4022d8:	bl	402a20 <wcrtomb@plt+0x60>
  4022dc:	ldp	x29, x30, [sp], #16
  4022e0:	ret

Disassembly of section .plt:

00000000004022f0 <mbrtowc@plt-0x20>:
  4022f0:	stp	x16, x30, [sp, #-16]!
  4022f4:	adrp	x16, 434000 <_obstack_memory_used@@Base+0x1efcc>
  4022f8:	ldr	x17, [x16, #4088]
  4022fc:	add	x16, x16, #0xff8
  402300:	br	x17
  402304:	nop
  402308:	nop
  40230c:	nop

0000000000402310 <mbrtowc@plt>:
  402310:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16]
  402318:	add	x16, x16, #0x0
  40231c:	br	x17

0000000000402320 <memcpy@plt>:
  402320:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #8]
  402328:	add	x16, x16, #0x8
  40232c:	br	x17

0000000000402330 <sigaltstack@plt>:
  402330:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #16]
  402338:	add	x16, x16, #0x10
  40233c:	br	x17

0000000000402340 <memmove@plt>:
  402340:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #24]
  402348:	add	x16, x16, #0x18
  40234c:	br	x17

0000000000402350 <isalpha@plt>:
  402350:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #32]
  402358:	add	x16, x16, #0x20
  40235c:	br	x17

0000000000402360 <_exit@plt>:
  402360:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #40]
  402368:	add	x16, x16, #0x28
  40236c:	br	x17

0000000000402370 <fwrite_unlocked@plt>:
  402370:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #48]
  402378:	add	x16, x16, #0x30
  40237c:	br	x17

0000000000402380 <strlen@plt>:
  402380:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #56]
  402388:	add	x16, x16, #0x38
  40238c:	br	x17

0000000000402390 <fputs@plt>:
  402390:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #64]
  402398:	add	x16, x16, #0x40
  40239c:	br	x17

00000000004023a0 <exit@plt>:
  4023a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #72]
  4023a8:	add	x16, x16, #0x48
  4023ac:	br	x17

00000000004023b0 <error@plt>:
  4023b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #80]
  4023b8:	add	x16, x16, #0x50
  4023bc:	br	x17

00000000004023c0 <fchdir@plt>:
  4023c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #88]
  4023c8:	add	x16, x16, #0x58
  4023cc:	br	x17

00000000004023d0 <strtoimax@plt>:
  4023d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #96]
  4023d8:	add	x16, x16, #0x60
  4023dc:	br	x17

00000000004023e0 <wctype@plt>:
  4023e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #104]
  4023e8:	add	x16, x16, #0x68
  4023ec:	br	x17

00000000004023f0 <ferror_unlocked@plt>:
  4023f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #112]
  4023f8:	add	x16, x16, #0x70
  4023fc:	br	x17

0000000000402400 <__cxa_atexit@plt>:
  402400:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #120]
  402408:	add	x16, x16, #0x78
  40240c:	br	x17

0000000000402410 <iswcntrl@plt>:
  402410:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #128]
  402418:	add	x16, x16, #0x80
  40241c:	br	x17

0000000000402420 <qsort@plt>:
  402420:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #136]
  402428:	add	x16, x16, #0x88
  40242c:	br	x17

0000000000402430 <isblank@plt>:
  402430:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #144]
  402438:	add	x16, x16, #0x90
  40243c:	br	x17

0000000000402440 <lseek@plt>:
  402440:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #152]
  402448:	add	x16, x16, #0x98
  40244c:	br	x17

0000000000402450 <__fpending@plt>:
  402450:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #160]
  402458:	add	x16, x16, #0xa0
  40245c:	br	x17

0000000000402460 <__ctype_tolower_loc@plt>:
  402460:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #168]
  402468:	add	x16, x16, #0xa8
  40246c:	br	x17

0000000000402470 <putc_unlocked@plt>:
  402470:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #176]
  402478:	add	x16, x16, #0xb0
  40247c:	br	x17

0000000000402480 <fclose@plt>:
  402480:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #184]
  402488:	add	x16, x16, #0xb8
  40248c:	br	x17

0000000000402490 <wctob@plt>:
  402490:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #192]
  402498:	add	x16, x16, #0xc0
  40249c:	br	x17

00000000004024a0 <nl_langinfo@plt>:
  4024a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #200]
  4024a8:	add	x16, x16, #0xc8
  4024ac:	br	x17

00000000004024b0 <fopen@plt>:
  4024b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #208]
  4024b8:	add	x16, x16, #0xd0
  4024bc:	br	x17

00000000004024c0 <isspace@plt>:
  4024c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #216]
  4024c8:	add	x16, x16, #0xd8
  4024cc:	br	x17

00000000004024d0 <iswctype@plt>:
  4024d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #224]
  4024d8:	add	x16, x16, #0xe0
  4024dc:	br	x17

00000000004024e0 <malloc@plt>:
  4024e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #232]
  4024e8:	add	x16, x16, #0xe8
  4024ec:	br	x17

00000000004024f0 <toupper@plt>:
  4024f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #240]
  4024f8:	add	x16, x16, #0xf0
  4024fc:	br	x17

0000000000402500 <wcwidth@plt>:
  402500:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #248]
  402508:	add	x16, x16, #0xf8
  40250c:	br	x17

0000000000402510 <open@plt>:
  402510:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #256]
  402518:	add	x16, x16, #0x100
  40251c:	br	x17

0000000000402520 <splice@plt>:
  402520:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #264]
  402528:	add	x16, x16, #0x108
  40252c:	br	x17

0000000000402530 <islower@plt>:
  402530:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #272]
  402538:	add	x16, x16, #0x110
  40253c:	br	x17

0000000000402540 <isxdigit@plt>:
  402540:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #280]
  402548:	add	x16, x16, #0x118
  40254c:	br	x17

0000000000402550 <sigemptyset@plt>:
  402550:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #288]
  402558:	add	x16, x16, #0x120
  40255c:	br	x17

0000000000402560 <strncmp@plt>:
  402560:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #296]
  402568:	add	x16, x16, #0x128
  40256c:	br	x17

0000000000402570 <bindtextdomain@plt>:
  402570:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #304]
  402578:	add	x16, x16, #0x130
  40257c:	br	x17

0000000000402580 <isdigit@plt>:
  402580:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #312]
  402588:	add	x16, x16, #0x138
  40258c:	br	x17

0000000000402590 <__libc_start_main@plt>:
  402590:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #320]
  402598:	add	x16, x16, #0x140
  40259c:	br	x17

00000000004025a0 <fstatfs@plt>:
  4025a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #328]
  4025a8:	add	x16, x16, #0x148
  4025ac:	br	x17

00000000004025b0 <memset@plt>:
  4025b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #336]
  4025b8:	add	x16, x16, #0x150
  4025bc:	br	x17

00000000004025c0 <putchar_unlocked@plt>:
  4025c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #344]
  4025c8:	add	x16, x16, #0x158
  4025cc:	br	x17

00000000004025d0 <calloc@plt>:
  4025d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #352]
  4025d8:	add	x16, x16, #0x160
  4025dc:	br	x17

00000000004025e0 <bcmp@plt>:
  4025e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #360]
  4025e8:	add	x16, x16, #0x168
  4025ec:	br	x17

00000000004025f0 <isupper@plt>:
  4025f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #368]
  4025f8:	add	x16, x16, #0x170
  4025fc:	br	x17

0000000000402600 <readdir@plt>:
  402600:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #376]
  402608:	add	x16, x16, #0x178
  40260c:	br	x17

0000000000402610 <realloc@plt>:
  402610:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #384]
  402618:	add	x16, x16, #0x180
  40261c:	br	x17

0000000000402620 <__ctype_toupper_loc@plt>:
  402620:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #392]
  402628:	add	x16, x16, #0x188
  40262c:	br	x17

0000000000402630 <closedir@plt>:
  402630:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #400]
  402638:	add	x16, x16, #0x190
  40263c:	br	x17

0000000000402640 <getc_unlocked@plt>:
  402640:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #408]
  402648:	add	x16, x16, #0x198
  40264c:	br	x17

0000000000402650 <close@plt>:
  402650:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #416]
  402658:	add	x16, x16, #0x1a0
  40265c:	br	x17

0000000000402660 <sigaction@plt>:
  402660:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #424]
  402668:	add	x16, x16, #0x1a8
  40266c:	br	x17

0000000000402670 <strrchr@plt>:
  402670:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #432]
  402678:	add	x16, x16, #0x1b0
  40267c:	br	x17

0000000000402680 <__gmon_start__@plt>:
  402680:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #440]
  402688:	add	x16, x16, #0x1b8
  40268c:	br	x17

0000000000402690 <fdopendir@plt>:
  402690:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #448]
  402698:	add	x16, x16, #0x1c0
  40269c:	br	x17

00000000004026a0 <write@plt>:
  4026a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #456]
  4026a8:	add	x16, x16, #0x1c8
  4026ac:	br	x17

00000000004026b0 <btowc@plt>:
  4026b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #464]
  4026b8:	add	x16, x16, #0x1d0
  4026bc:	br	x17

00000000004026c0 <abort@plt>:
  4026c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #472]
  4026c8:	add	x16, x16, #0x1d8
  4026cc:	br	x17

00000000004026d0 <iscntrl@plt>:
  4026d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #480]
  4026d8:	add	x16, x16, #0x1e0
  4026dc:	br	x17

00000000004026e0 <mbsinit@plt>:
  4026e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #488]
  4026e8:	add	x16, x16, #0x1e8
  4026ec:	br	x17

00000000004026f0 <ispunct@plt>:
  4026f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #496]
  4026f8:	add	x16, x16, #0x1f0
  4026fc:	br	x17

0000000000402700 <puts@plt>:
  402700:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #504]
  402708:	add	x16, x16, #0x1f8
  40270c:	br	x17

0000000000402710 <fread_unlocked@plt>:
  402710:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #512]
  402718:	add	x16, x16, #0x200
  40271c:	br	x17

0000000000402720 <memcmp@plt>:
  402720:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #520]
  402728:	add	x16, x16, #0x208
  40272c:	br	x17

0000000000402730 <textdomain@plt>:
  402730:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #528]
  402738:	add	x16, x16, #0x210
  40273c:	br	x17

0000000000402740 <getopt_long@plt>:
  402740:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #536]
  402748:	add	x16, x16, #0x218
  40274c:	br	x17

0000000000402750 <strcmp@plt>:
  402750:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #544]
  402758:	add	x16, x16, #0x220
  40275c:	br	x17

0000000000402760 <__ctype_b_loc@plt>:
  402760:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #552]
  402768:	add	x16, x16, #0x228
  40276c:	br	x17

0000000000402770 <free@plt>:
  402770:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #560]
  402778:	add	x16, x16, #0x230
  40277c:	br	x17

0000000000402780 <__ctype_get_mb_cur_max@plt>:
  402780:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #568]
  402788:	add	x16, x16, #0x238
  40278c:	br	x17

0000000000402790 <strchr@plt>:
  402790:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #576]
  402798:	add	x16, x16, #0x240
  40279c:	br	x17

00000000004027a0 <memrchr@plt>:
  4027a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #584]
  4027a8:	add	x16, x16, #0x248
  4027ac:	br	x17

00000000004027b0 <fnmatch@plt>:
  4027b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #592]
  4027b8:	add	x16, x16, #0x250
  4027bc:	br	x17

00000000004027c0 <fflush_unlocked@plt>:
  4027c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #600]
  4027c8:	add	x16, x16, #0x258
  4027cc:	br	x17

00000000004027d0 <fcntl@plt>:
  4027d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #608]
  4027d8:	add	x16, x16, #0x260
  4027dc:	br	x17

00000000004027e0 <strcpy@plt>:
  4027e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #616]
  4027e8:	add	x16, x16, #0x268
  4027ec:	br	x17

00000000004027f0 <dirfd@plt>:
  4027f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #624]
  4027f8:	add	x16, x16, #0x270
  4027fc:	br	x17

0000000000402800 <__lxstat@plt>:
  402800:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #632]
  402808:	add	x16, x16, #0x278
  40280c:	br	x17

0000000000402810 <read@plt>:
  402810:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #640]
  402818:	add	x16, x16, #0x280
  40281c:	br	x17

0000000000402820 <memchr@plt>:
  402820:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #648]
  402828:	add	x16, x16, #0x288
  40282c:	br	x17

0000000000402830 <isatty@plt>:
  402830:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #656]
  402838:	add	x16, x16, #0x290
  40283c:	br	x17

0000000000402840 <sysconf@plt>:
  402840:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #664]
  402848:	add	x16, x16, #0x298
  40284c:	br	x17

0000000000402850 <isgraph@plt>:
  402850:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #672]
  402858:	add	x16, x16, #0x2a0
  40285c:	br	x17

0000000000402860 <iswalnum@plt>:
  402860:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #680]
  402868:	add	x16, x16, #0x2a8
  40286c:	br	x17

0000000000402870 <__fxstat@plt>:
  402870:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #688]
  402878:	add	x16, x16, #0x2b0
  40287c:	br	x17

0000000000402880 <strstr@plt>:
  402880:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #696]
  402888:	add	x16, x16, #0x2b8
  40288c:	br	x17

0000000000402890 <dcgettext@plt>:
  402890:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #704]
  402898:	add	x16, x16, #0x2c0
  40289c:	br	x17

00000000004028a0 <fputs_unlocked@plt>:
  4028a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #712]
  4028a8:	add	x16, x16, #0x2c8
  4028ac:	br	x17

00000000004028b0 <strcoll@plt>:
  4028b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #720]
  4028b8:	add	x16, x16, #0x2d0
  4028bc:	br	x17

00000000004028c0 <isalnum@plt>:
  4028c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #728]
  4028c8:	add	x16, x16, #0x2d8
  4028cc:	br	x17

00000000004028d0 <towupper@plt>:
  4028d0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #736]
  4028d8:	add	x16, x16, #0x2e0
  4028dc:	br	x17

00000000004028e0 <iswprint@plt>:
  4028e0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #744]
  4028e8:	add	x16, x16, #0x2e8
  4028ec:	br	x17

00000000004028f0 <vfprintf@plt>:
  4028f0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #752]
  4028f8:	add	x16, x16, #0x2f0
  4028fc:	br	x17

0000000000402900 <openat@plt>:
  402900:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #760]
  402908:	add	x16, x16, #0x2f8
  40290c:	br	x17

0000000000402910 <printf@plt>:
  402910:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #768]
  402918:	add	x16, x16, #0x300
  40291c:	br	x17

0000000000402920 <__assert_fail@plt>:
  402920:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #776]
  402928:	add	x16, x16, #0x308
  40292c:	br	x17

0000000000402930 <__errno_location@plt>:
  402930:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #784]
  402938:	add	x16, x16, #0x310
  40293c:	br	x17

0000000000402940 <tolower@plt>:
  402940:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #792]
  402948:	add	x16, x16, #0x318
  40294c:	br	x17

0000000000402950 <getenv@plt>:
  402950:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #800]
  402958:	add	x16, x16, #0x320
  40295c:	br	x17

0000000000402960 <__xstat@plt>:
  402960:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #808]
  402968:	add	x16, x16, #0x328
  40296c:	br	x17

0000000000402970 <towlower@plt>:
  402970:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #816]
  402978:	add	x16, x16, #0x330
  40297c:	br	x17

0000000000402980 <fprintf@plt>:
  402980:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #824]
  402988:	add	x16, x16, #0x338
  40298c:	br	x17

0000000000402990 <isprint@plt>:
  402990:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #832]
  402998:	add	x16, x16, #0x340
  40299c:	br	x17

00000000004029a0 <setlocale@plt>:
  4029a0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #840]
  4029a8:	add	x16, x16, #0x348
  4029ac:	br	x17

00000000004029b0 <__fxstatat@plt>:
  4029b0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #848]
  4029b8:	add	x16, x16, #0x350
  4029bc:	br	x17

00000000004029c0 <wcrtomb@plt>:
  4029c0:	adrp	x16, 435000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #856]
  4029c8:	add	x16, x16, #0x358
  4029cc:	br	x17

Disassembly of section .text:

00000000004029d0 <_obstack_begin@@Base-0x12344>:
  4029d0:	mov	x29, #0x0                   	// #0
  4029d4:	mov	x30, #0x0                   	// #0
  4029d8:	mov	x5, x0
  4029dc:	ldr	x1, [sp]
  4029e0:	add	x2, sp, #0x8
  4029e4:	mov	x6, sp
  4029e8:	movz	x0, #0x0, lsl #48
  4029ec:	movk	x0, #0x0, lsl #32
  4029f0:	movk	x0, #0x40, lsl #16
  4029f4:	movk	x0, #0x3a84
  4029f8:	movz	x3, #0x0, lsl #48
  4029fc:	movk	x3, #0x0, lsl #32
  402a00:	movk	x3, #0x42, lsl #16
  402a04:	movk	x3, #0xed0
  402a08:	movz	x4, #0x0, lsl #48
  402a0c:	movk	x4, #0x0, lsl #32
  402a10:	movk	x4, #0x42, lsl #16
  402a14:	movk	x4, #0xf50
  402a18:	bl	402590 <__libc_start_main@plt>
  402a1c:	bl	4026c0 <abort@plt>
  402a20:	adrp	x0, 434000 <_obstack_memory_used@@Base+0x1efcc>
  402a24:	ldr	x0, [x0, #4064]
  402a28:	cbz	x0, 402a30 <wcrtomb@plt+0x70>
  402a2c:	b	402680 <__gmon_start__@plt>
  402a30:	ret
  402a34:	nop
  402a38:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  402a3c:	add	x0, x0, #0x448
  402a40:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  402a44:	add	x1, x1, #0x448
  402a48:	cmp	x1, x0
  402a4c:	b.eq	402a64 <wcrtomb@plt+0xa4>  // b.none
  402a50:	adrp	x1, 420000 <_obstack_memory_used@@Base+0xafcc>
  402a54:	ldr	x1, [x1, #4056]
  402a58:	cbz	x1, 402a64 <wcrtomb@plt+0xa4>
  402a5c:	mov	x16, x1
  402a60:	br	x16
  402a64:	ret
  402a68:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  402a6c:	add	x0, x0, #0x448
  402a70:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  402a74:	add	x1, x1, #0x448
  402a78:	sub	x1, x1, x0
  402a7c:	lsr	x2, x1, #63
  402a80:	add	x1, x2, x1, asr #3
  402a84:	cmp	xzr, x1, asr #1
  402a88:	asr	x1, x1, #1
  402a8c:	b.eq	402aa4 <wcrtomb@plt+0xe4>  // b.none
  402a90:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xafcc>
  402a94:	ldr	x2, [x2, #4064]
  402a98:	cbz	x2, 402aa4 <wcrtomb@plt+0xe4>
  402a9c:	mov	x16, x2
  402aa0:	br	x16
  402aa4:	ret
  402aa8:	stp	x29, x30, [sp, #-32]!
  402aac:	mov	x29, sp
  402ab0:	str	x19, [sp, #16]
  402ab4:	adrp	x19, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  402ab8:	ldrb	w0, [x19, #1152]
  402abc:	cbnz	w0, 402acc <wcrtomb@plt+0x10c>
  402ac0:	bl	402a38 <wcrtomb@plt+0x78>
  402ac4:	mov	w0, #0x1                   	// #1
  402ac8:	strb	w0, [x19, #1152]
  402acc:	ldr	x19, [sp, #16]
  402ad0:	ldp	x29, x30, [sp], #32
  402ad4:	ret
  402ad8:	b	402a68 <wcrtomb@plt+0xa8>
  402adc:	stp	x29, x30, [sp, #-16]!
  402ae0:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  402ae4:	mov	x3, x0
  402ae8:	add	x2, x2, #0xe07
  402aec:	mov	w0, #0x2                   	// #2
  402af0:	mov	w1, wzr
  402af4:	mov	x29, sp
  402af8:	bl	4023b0 <error@plt>
  402afc:	stp	x29, x30, [sp, #-32]!
  402b00:	str	x19, [sp, #16]
  402b04:	mov	x19, x0
  402b08:	adrp	x0, 420000 <_obstack_memory_used@@Base+0xafcc>
  402b0c:	add	x0, x0, #0xfe8
  402b10:	mov	x29, sp
  402b14:	bl	402950 <getenv@plt>
  402b18:	cbz	x0, 402b28 <wcrtomb@plt+0x168>
  402b1c:	ldr	x19, [sp, #16]
  402b20:	ldp	x29, x30, [sp], #32
  402b24:	ret
  402b28:	mov	x0, x19
  402b2c:	bl	402adc <wcrtomb@plt+0x11c>
  402b30:	sub	sp, sp, #0xe0
  402b34:	stp	x24, x23, [sp, #176]
  402b38:	stp	x22, x21, [sp, #192]
  402b3c:	mov	x22, x1
  402b40:	mov	x24, x0
  402b44:	mov	w0, #0x1                   	// #1
  402b48:	mov	w1, #0x48                  	// #72
  402b4c:	stp	x29, x30, [sp, #128]
  402b50:	stp	x28, x27, [sp, #144]
  402b54:	stp	x26, x25, [sp, #160]
  402b58:	stp	x20, x19, [sp, #208]
  402b5c:	add	x29, sp, #0x80
  402b60:	mov	x20, x2
  402b64:	mov	w23, #0x1                   	// #1
  402b68:	bl	412890 <wcrtomb@plt+0xfed0>
  402b6c:	mov	x19, x0
  402b70:	bl	40bda0 <wcrtomb@plt+0x93e0>
  402b74:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402b78:	ldrb	w8, [x8, #3550]
  402b7c:	orr	x9, x20, #0x400000
  402b80:	mov	x21, x0
  402b84:	str	x0, [x19, #8]
  402b88:	cmp	w8, #0x0
  402b8c:	csel	x25, x20, x9, eq  // eq = none
  402b90:	mov	x0, x25
  402b94:	bl	415bc4 <_obstack_memory_used@@Base+0xb90>
  402b98:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402b9c:	ldrb	w8, [x8, #2260]
  402ba0:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402ba4:	add	x20, x20, #0x8d8
  402ba8:	mov	x0, x21
  402bac:	cmp	w8, #0x0
  402bb0:	cset	w8, eq  // eq = none
  402bb4:	lsl	w3, w8, #1
  402bb8:	mov	x1, x20
  402bbc:	mov	x2, x25
  402bc0:	str	x21, [sp, #32]
  402bc4:	str	x25, [sp, #8]
  402bc8:	bl	40bda8 <wcrtomb@plt+0x93e8>
  402bcc:	ldrb	w8, [x20]
  402bd0:	ldrb	w9, [x20, #2]
  402bd4:	mov	w0, #0x40                  	// #64
  402bd8:	str	x22, [sp, #24]
  402bdc:	eor	w8, w8, #0x1
  402be0:	orr	w20, w8, w9
  402be4:	add	x8, x24, x22
  402be8:	stur	x8, [x29, #-56]
  402bec:	bl	412738 <wcrtomb@plt+0xfd78>
  402bf0:	cmp	w20, #0x0
  402bf4:	mov	w8, #0x5c                  	// #92
  402bf8:	mov	w9, #0x100                 	// #256
  402bfc:	mov	x27, #0x5555555555555555    	// #6148914691236517205
  402c00:	mov	w26, wzr
  402c04:	add	x25, x0, #0x40
  402c08:	csel	w8, w9, w8, eq  // eq = none
  402c0c:	movk	x27, #0x155, lsl #48
  402c10:	mov	x22, x24
  402c14:	stur	xzr, [x29, #-40]
  402c18:	stp	xzr, xzr, [x29, #-16]
  402c1c:	stp	xzr, xzr, [sp, #40]
  402c20:	stur	xzr, [x29, #-24]
  402c24:	stp	x25, xzr, [x19, #16]
  402c28:	str	w8, [sp, #60]
  402c2c:	str	x24, [sp, #64]
  402c30:	str	x24, [sp, #16]
  402c34:	ldur	x8, [x29, #-56]
  402c38:	mov	w1, #0xa                   	// #10
  402c3c:	mov	x0, x22
  402c40:	sub	x20, x8, x22
  402c44:	mov	x2, x20
  402c48:	bl	402820 <memchr@plt>
  402c4c:	sub	x8, x0, x22
  402c50:	cmp	x0, #0x0
  402c54:	csel	x8, x20, x8, eq  // eq = none
  402c58:	mov	x28, x0
  402c5c:	csinc	x24, xzr, x0, eq  // eq = none
  402c60:	subs	x21, x8, #0x1
  402c64:	stur	x8, [x29, #-32]
  402c68:	b.lt	402cc4 <wcrtomb@plt+0x304>  // b.tstop
  402c6c:	mov	w1, #0x5c                  	// #92
  402c70:	mov	x0, x22
  402c74:	mov	x2, x21
  402c78:	bl	402820 <memchr@plt>
  402c7c:	cbz	x0, 402cc4 <wcrtomb@plt+0x304>
  402c80:	add	x20, x22, x21
  402c84:	ldr	w21, [sp, #60]
  402c88:	mov	x8, x0
  402c8c:	ldrb	w9, [x8, #1]!
  402c90:	sub	w10, w9, #0x31
  402c94:	cmp	w10, #0x9
  402c98:	b.cc	402d6c <wcrtomb@plt+0x3ac>  // b.lo, b.ul, b.last
  402c9c:	cmp	w21, w9
  402ca0:	b.ne	402cb0 <wcrtomb@plt+0x2f0>  // b.any
  402ca4:	cmp	x8, x20
  402ca8:	mov	x0, x8
  402cac:	b.eq	402cc4 <wcrtomb@plt+0x304>  // b.none
  402cb0:	add	x0, x0, #0x1
  402cb4:	sub	x2, x20, x0
  402cb8:	mov	w1, #0x5c                  	// #92
  402cbc:	bl	402820 <memchr@plt>
  402cc0:	cbnz	x0, 402c88 <wcrtomb@plt+0x2c8>
  402cc4:	mov	w21, wzr
  402cc8:	ldur	x3, [x29, #-16]
  402ccc:	stur	x24, [x29, #-48]
  402cd0:	add	x20, x3, #0x1
  402cd4:	cmp	x23, x20
  402cd8:	b.hi	402d14 <wcrtomb@plt+0x354>  // b.pmore
  402cdc:	ldur	x8, [x29, #-40]
  402ce0:	add	x20, x8, #0x1
  402ce4:	cmp	x23, x27
  402ce8:	b.cs	403094 <wcrtomb@plt+0x6d4>  // b.hs, b.nlast
  402cec:	add	x8, x23, x23, lsr #1
  402cf0:	add	x23, x8, #0x1
  402cf4:	sub	x0, x25, #0x40
  402cf8:	lsl	x1, x23, #6
  402cfc:	bl	412788 <wcrtomb@plt+0xfdc8>
  402d00:	add	x25, x0, #0x40
  402d04:	cmp	x23, x20
  402d08:	str	x25, [x19, #16]
  402d0c:	b.ls	402ce4 <wcrtomb@plt+0x324>  // b.plast
  402d10:	ldur	x3, [x29, #-40]
  402d14:	mov	x1, x22
  402d18:	ldp	x2, x22, [x29, #-32]
  402d1c:	eor	w21, w21, #0x1
  402d20:	mov	x0, x19
  402d24:	mov	w5, w21
  402d28:	mov	x4, x22
  402d2c:	add	x24, x28, #0x1
  402d30:	stur	x3, [x29, #-16]
  402d34:	bl	4030a4 <wcrtomb@plt+0x6e4>
  402d38:	eor	w8, w0, #0x1
  402d3c:	add	x22, x22, #0x1
  402d40:	stur	x22, [x29, #-24]
  402d44:	tbnz	w21, #0, 402d5c <wcrtomb@plt+0x39c>
  402d48:	ldur	x9, [x29, #-48]
  402d4c:	str	x20, [x19, #24]
  402d50:	stur	x20, [x29, #-40]
  402d54:	stur	x20, [x29, #-16]
  402d58:	str	x9, [sp, #64]
  402d5c:	orr	w26, w26, w8
  402d60:	mov	x22, x24
  402d64:	cbnz	x28, 402c34 <wcrtomb@plt+0x274>
  402d68:	b	402ddc <wcrtomb@plt+0x41c>
  402d6c:	ldr	x9, [sp, #64]
  402d70:	cmp	x9, x22
  402d74:	b.cs	402dac <wcrtomb@plt+0x3ec>  // b.hs, b.nlast
  402d78:	sub	x21, x22, x9
  402d7c:	ldr	x9, [sp, #48]
  402d80:	ldur	x8, [x29, #-8]
  402d84:	add	x20, x21, x9
  402d88:	cmp	x8, x20
  402d8c:	b.cs	402db4 <wcrtomb@plt+0x3f4>  // b.hs, b.nlast
  402d90:	ldr	x0, [sp, #40]
  402d94:	sub	x1, x29, #0x8
  402d98:	bl	41283c <wcrtomb@plt+0xfe7c>
  402d9c:	ldur	x8, [x29, #-8]
  402da0:	cmp	x8, x20
  402da4:	b.cc	402d94 <wcrtomb@plt+0x3d4>  // b.lo, b.ul, b.last
  402da8:	b	402db8 <wcrtomb@plt+0x3f8>
  402dac:	mov	w21, #0x1                   	// #1
  402db0:	b	402cc8 <wcrtomb@plt+0x308>
  402db4:	ldr	x0, [sp, #40]
  402db8:	ldr	x8, [sp, #48]
  402dbc:	ldr	x1, [sp, #64]
  402dc0:	str	x0, [sp, #40]
  402dc4:	mov	x2, x21
  402dc8:	add	x0, x0, x8
  402dcc:	bl	402320 <memcpy@plt>
  402dd0:	mov	w21, #0x1                   	// #1
  402dd4:	str	x20, [sp, #48]
  402dd8:	b	402cc8 <wcrtomb@plt+0x308>
  402ddc:	tbnz	w26, #0, 403098 <wcrtomb@plt+0x6d8>
  402de0:	ldr	x27, [sp, #16]
  402de4:	ldr	x0, [sp, #40]
  402de8:	ldr	x24, [sp, #64]
  402dec:	cbz	x24, 402e38 <wcrtomb@plt+0x478>
  402df0:	ldr	x26, [sp, #24]
  402df4:	cmp	x24, x27
  402df8:	mov	x20, x27
  402dfc:	mov	x22, x26
  402e00:	b.ls	402e30 <wcrtomb@plt+0x470>  // b.plast
  402e04:	ldur	x8, [x29, #-56]
  402e08:	ldr	x23, [sp, #48]
  402e0c:	sub	x21, x8, x24
  402e10:	add	x22, x21, x23
  402e14:	mov	x1, x22
  402e18:	bl	412788 <wcrtomb@plt+0xfdc8>
  402e1c:	mov	x20, x0
  402e20:	add	x0, x0, x23
  402e24:	mov	x1, x24
  402e28:	mov	x2, x21
  402e2c:	bl	402320 <memcpy@plt>
  402e30:	cbnz	x20, 402e48 <wcrtomb@plt+0x488>
  402e34:	b	402e88 <wcrtomb@plt+0x4c8>
  402e38:	ldr	x22, [sp, #48]
  402e3c:	ldr	x26, [sp, #24]
  402e40:	mov	x20, x0
  402e44:	cbz	x20, 402e88 <wcrtomb@plt+0x4c8>
  402e48:	ldur	x9, [x29, #-40]
  402e4c:	sub	x8, x25, #0x40
  402e50:	mov	x4, #0xffffffffffffffff    	// #-1
  402e54:	mov	x0, x19
  402e58:	add	x9, x9, #0x1
  402e5c:	mov	x1, x20
  402e60:	mov	x2, x22
  402e64:	mov	x3, xzr
  402e68:	mov	w5, wzr
  402e6c:	stp	x8, x9, [x19, #16]
  402e70:	bl	4030a4 <wcrtomb@plt+0x6e4>
  402e74:	tbz	w0, #0, 4030a0 <wcrtomb@plt+0x6e0>
  402e78:	cmp	x20, x27
  402e7c:	b.eq	402e88 <wcrtomb@plt+0x4c8>  // b.none
  402e80:	mov	x0, x20
  402e84:	bl	402770 <free@plt>
  402e88:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402e8c:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402e90:	ldrb	w8, [x8, #3548]
  402e94:	ldrb	w9, [x22, #3549]
  402e98:	orr	w8, w9, w8
  402e9c:	cbz	w8, 402f54 <wcrtomb@plt+0x594>
  402ea0:	add	x0, x26, #0x2d
  402ea4:	bl	412738 <wcrtomb@plt+0xfd78>
  402ea8:	ldr	x11, [sp, #8]
  402eac:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402eb0:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402eb4:	add	x9, x9, #0x3
  402eb8:	add	x10, x10, #0x2f
  402ebc:	tst	x11, #0x2000
  402ec0:	ldrb	w8, [x22, #3549]
  402ec4:	adrp	x11, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ec8:	adrp	x12, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ecc:	adrp	x13, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ed0:	csel	x9, x10, x9, eq  // eq = none
  402ed4:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ed8:	add	x11, x11, #0x9
  402edc:	add	x12, x12, #0x37
  402ee0:	add	x13, x13, #0x6
  402ee4:	add	x10, x10, #0x33
  402ee8:	csel	x11, x12, x11, eq  // eq = none
  402eec:	csel	x23, x10, x13, eq  // eq = none
  402ef0:	adrp	x10, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ef4:	adrp	x12, 421000 <_obstack_memory_used@@Base+0xbfcc>
  402ef8:	add	x10, x10, #0x1c
  402efc:	add	x12, x12, #0x4e
  402f00:	csel	x24, x12, x10, eq  // eq = none
  402f04:	cmp	w8, #0x0
  402f08:	csel	x1, x11, x9, eq  // eq = none
  402f0c:	mov	x20, x0
  402f10:	bl	4027e0 <strcpy@plt>
  402f14:	bl	402380 <strlen@plt>
  402f18:	mov	x21, x0
  402f1c:	add	x0, x20, x0
  402f20:	mov	x1, x27
  402f24:	mov	x2, x26
  402f28:	bl	402320 <memcpy@plt>
  402f2c:	ldrb	w8, [x22, #3549]
  402f30:	add	x21, x21, x26
  402f34:	add	x0, x20, x21
  402f38:	cmp	w8, #0x0
  402f3c:	csel	x1, x24, x23, eq  // eq = none
  402f40:	bl	4027e0 <strcpy@plt>
  402f44:	bl	402380 <strlen@plt>
  402f48:	add	x26, x0, x21
  402f4c:	mov	x27, x20
  402f50:	b	402f58 <wcrtomb@plt+0x598>
  402f54:	mov	x20, xzr
  402f58:	ldr	x24, [sp, #32]
  402f5c:	mov	x0, x27
  402f60:	mov	x1, x26
  402f64:	mov	x2, x24
  402f68:	bl	4096c8 <wcrtomb@plt+0x6d08>
  402f6c:	mov	x0, x24
  402f70:	bl	40b19c <wcrtomb@plt+0x87dc>
  402f74:	cbz	x0, 403054 <wcrtomb@plt+0x694>
  402f78:	mov	x21, x0
  402f7c:	mov	w0, wzr
  402f80:	bl	408c8c <wcrtomb@plt+0x62cc>
  402f84:	str	x0, [x19]
  402f88:	ldrb	w8, [x21]
  402f8c:	mov	x22, x0
  402f90:	cbz	w8, 403028 <wcrtomb@plt+0x668>
  402f94:	ldr	x8, [x19, #56]
  402f98:	add	x27, x21, #0x3
  402f9c:	mov	x0, x27
  402fa0:	add	x8, x8, #0x1
  402fa4:	str	x8, [x19, #56]
  402fa8:	bl	402380 <strlen@plt>
  402fac:	ldrb	w8, [x21, #1]
  402fb0:	ldrb	w9, [x21, #2]
  402fb4:	mov	x25, x0
  402fb8:	add	x8, x0, x8
  402fbc:	add	x23, x8, x9
  402fc0:	mov	x0, x23
  402fc4:	bl	412738 <wcrtomb@plt+0xfd78>
  402fc8:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  402fcc:	ldrb	w28, [x8, #2260]
  402fd0:	ldrb	w9, [x19, #64]
  402fd4:	mov	x24, x0
  402fd8:	mov	x1, x27
  402fdc:	strb	w28, [x0]
  402fe0:	ldrb	w8, [x21, #1]
  402fe4:	mov	x2, x25
  402fe8:	add	x26, x0, x8
  402fec:	orr	w8, w9, w8
  402ff0:	mov	x0, x26
  402ff4:	strb	w8, [x19, #64]
  402ff8:	bl	402320 <memcpy@plt>
  402ffc:	ldrb	w8, [x21, #2]
  403000:	cbz	w8, 403008 <wcrtomb@plt+0x648>
  403004:	strb	w28, [x26, x25]
  403008:	mov	x0, x22
  40300c:	mov	x1, x24
  403010:	mov	x2, x23
  403014:	bl	407bc0 <wcrtomb@plt+0x5200>
  403018:	mov	x0, x24
  40301c:	bl	402770 <free@plt>
  403020:	ldr	x24, [sp, #32]
  403024:	b	403044 <wcrtomb@plt+0x684>
  403028:	add	x23, x21, #0x3
  40302c:	mov	x0, x23
  403030:	bl	402380 <strlen@plt>
  403034:	mov	x2, x0
  403038:	mov	x0, x22
  40303c:	mov	x1, x23
  403040:	bl	407bc0 <wcrtomb@plt+0x5200>
  403044:	mov	x0, x22
  403048:	bl	40840c <wcrtomb@plt+0x5a4c>
  40304c:	mov	x0, x21
  403050:	bl	40bd9c <wcrtomb@plt+0x93dc>
  403054:	mov	w3, #0x1                   	// #1
  403058:	mov	x0, xzr
  40305c:	mov	x1, xzr
  403060:	mov	x2, x24
  403064:	bl	40a09c <wcrtomb@plt+0x76dc>
  403068:	mov	x0, x20
  40306c:	bl	402770 <free@plt>
  403070:	mov	x0, x19
  403074:	ldp	x20, x19, [sp, #208]
  403078:	ldp	x22, x21, [sp, #192]
  40307c:	ldp	x24, x23, [sp, #176]
  403080:	ldp	x26, x25, [sp, #160]
  403084:	ldp	x28, x27, [sp, #144]
  403088:	ldp	x29, x30, [sp, #128]
  40308c:	add	sp, sp, #0xe0
  403090:	ret
  403094:	bl	412920 <wcrtomb@plt+0xff60>
  403098:	mov	w0, #0x2                   	// #2
  40309c:	bl	4023a0 <exit@plt>
  4030a0:	bl	4026c0 <abort@plt>
  4030a4:	sub	sp, sp, #0x80
  4030a8:	stp	x22, x21, [sp, #96]
  4030ac:	stp	x20, x19, [sp, #112]
  4030b0:	mov	x19, x4
  4030b4:	mov	x20, x2
  4030b8:	mov	x21, x1
  4030bc:	stp	x29, x30, [sp, #80]
  4030c0:	add	x29, sp, #0x50
  4030c4:	tbz	w5, #0, 4030d0 <wcrtomb@plt+0x710>
  4030c8:	add	x22, sp, #0x10
  4030cc:	b	4030d8 <wcrtomb@plt+0x718>
  4030d0:	ldr	x8, [x0, #16]
  4030d4:	add	x22, x8, x3, lsl #6
  4030d8:	stp	xzr, xzr, [x22]
  4030dc:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4030e0:	ldrb	w8, [x8, #3550]
  4030e4:	and	w9, w5, #0x1
  4030e8:	mov	x0, xzr
  4030ec:	orr	w8, w8, w9
  4030f0:	cbnz	w8, 4030fc <wcrtomb@plt+0x73c>
  4030f4:	mov	w0, #0x100                 	// #256
  4030f8:	bl	412738 <wcrtomb@plt+0xfd78>
  4030fc:	stp	x0, xzr, [x22, #32]
  403100:	mov	x0, x21
  403104:	mov	x1, x20
  403108:	mov	x2, x22
  40310c:	bl	4150a4 <_obstack_memory_used@@Base+0x70>
  403110:	cbz	x0, 403134 <wcrtomb@plt+0x774>
  403114:	mov	x20, x0
  403118:	str	x19, [sp, #8]
  40311c:	tbnz	x19, #63, 40313c <wcrtomb@plt+0x77c>
  403120:	add	x0, x19, #0x1
  403124:	add	x1, sp, #0x8
  403128:	bl	4036e8 <wcrtomb@plt+0xd28>
  40312c:	mov	x3, x0
  403130:	b	403144 <wcrtomb@plt+0x784>
  403134:	mov	w0, #0x1                   	// #1
  403138:	b	403188 <wcrtomb@plt+0x7c8>
  40313c:	adrp	x3, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403140:	add	x3, x3, #0x65
  403144:	ldrb	w8, [x3]
  403148:	cbz	w8, 40316c <wcrtomb@plt+0x7ac>
  40314c:	ldr	x4, [sp, #8]
  403150:	adrp	x2, 420000 <_obstack_memory_used@@Base+0xafcc>
  403154:	add	x2, x2, #0xff8
  403158:	mov	w0, wzr
  40315c:	mov	w1, wzr
  403160:	mov	x5, x20
  403164:	bl	4023b0 <error@plt>
  403168:	b	403184 <wcrtomb@plt+0x7c4>
  40316c:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403170:	add	x2, x2, #0xe07
  403174:	mov	w0, wzr
  403178:	mov	w1, wzr
  40317c:	mov	x3, x20
  403180:	bl	4023b0 <error@plt>
  403184:	mov	w0, wzr
  403188:	ldp	x20, x19, [sp, #112]
  40318c:	ldp	x22, x21, [sp, #96]
  403190:	ldp	x29, x30, [sp, #80]
  403194:	add	sp, sp, #0x80
  403198:	ret
  40319c:	sub	sp, sp, #0xf0
  4031a0:	stp	x29, x30, [sp, #144]
  4031a4:	stp	x28, x27, [sp, #160]
  4031a8:	stp	x26, x25, [sp, #176]
  4031ac:	stp	x24, x23, [sp, #192]
  4031b0:	stp	x22, x21, [sp, #208]
  4031b4:	stp	x20, x19, [sp, #224]
  4031b8:	ldr	x20, [x0, #8]
  4031bc:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4031c0:	ldrb	w23, [x21, #2260]
  4031c4:	mov	x22, x0
  4031c8:	mov	x0, x20
  4031cc:	add	x29, sp, #0x90
  4031d0:	mov	x28, x4
  4031d4:	str	x3, [sp]
  4031d8:	mov	x19, x2
  4031dc:	mov	x25, x1
  4031e0:	bl	40a08c <wcrtomb@plt+0x76cc>
  4031e4:	str	x0, [sp, #16]
  4031e8:	mov	x0, x20
  4031ec:	bl	40a094 <wcrtomb@plt+0x76d4>
  4031f0:	cmp	x19, #0x1
  4031f4:	stur	x25, [x29, #-8]
  4031f8:	b.lt	403694 <wcrtomb@plt+0xcd4>  // b.tstop
  4031fc:	eor	w8, w0, #0x1
  403200:	add	x26, x25, x19
  403204:	str	w8, [sp, #12]
  403208:	add	x8, x22, #0x20
  40320c:	mov	x27, x25
  403210:	str	w23, [sp, #36]
  403214:	stur	x8, [x29, #-56]
  403218:	str	x26, [sp, #40]
  40321c:	str	x25, [sp, #24]
  403220:	stur	x28, [x29, #-64]
  403224:	cbz	x28, 403464 <wcrtomb@plt+0xaa4>
  403228:	mov	x20, x26
  40322c:	mov	x23, x28
  403230:	ldr	x8, [x22, #24]
  403234:	cbz	x8, 40358c <wcrtomb@plt+0xbcc>
  403238:	mvn	x8, x27
  40323c:	sub	x9, x20, x23
  403240:	mov	x28, xzr
  403244:	stp	xzr, x23, [sp, #64]
  403248:	sub	x19, x23, x27
  40324c:	add	x24, x20, x8
  403250:	sub	x23, x9, #0x1
  403254:	mov	x26, x20
  403258:	sub	x20, x20, #0x1
  40325c:	stp	x26, x9, [sp, #48]
  403260:	ldr	x8, [x22, #16]
  403264:	ldur	x5, [x29, #-56]
  403268:	mov	x1, x27
  40326c:	mov	x2, x24
  403270:	add	x8, x8, x28, lsl #6
  403274:	ldrb	w9, [x8, #56]
  403278:	mov	x3, x19
  40327c:	mov	x4, x23
  403280:	and	w9, w9, #0xffffffbf
  403284:	strb	w9, [x8, #56]
  403288:	ldr	x8, [x22, #16]
  40328c:	ldrb	w9, [x21, #2260]
  403290:	add	x8, x8, x28, lsl #6
  403294:	ldrb	w10, [x8, #56]
  403298:	cmp	w9, #0xa
  40329c:	cset	w9, eq  // eq = none
  4032a0:	bfi	w10, w9, #7, #1
  4032a4:	strb	w10, [x8, #56]
  4032a8:	ldr	x8, [x22, #16]
  4032ac:	add	x0, x8, x28, lsl #6
  4032b0:	bl	417f98 <_obstack_memory_used@@Base+0x2f64>
  4032b4:	cmn	x0, #0x2
  4032b8:	b.le	4036e4 <wcrtomb@plt+0xd24>
  4032bc:	tbnz	x0, #63, 403354 <wcrtomb@plt+0x994>
  4032c0:	add	x25, x27, x0
  4032c4:	cmp	x25, x26
  4032c8:	b.hi	403354 <wcrtomb@plt+0x994>  // b.pmore
  4032cc:	ldr	x8, [x22, #48]
  4032d0:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4032d4:	ldrb	w10, [x9, #3548]
  4032d8:	ldr	x8, [x8]
  4032dc:	sub	x21, x8, x0
  4032e0:	ldur	x8, [x29, #-64]
  4032e4:	cbz	x8, 4032f8 <wcrtomb@plt+0x938>
  4032e8:	cbnz	w10, 4032f8 <wcrtomb@plt+0x938>
  4032ec:	mov	x8, x21
  4032f0:	mov	x9, x25
  4032f4:	b	403324 <wcrtomb@plt+0x964>
  4032f8:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4032fc:	ldrb	w11, [x8, #3549]
  403300:	ldr	x8, [sp, #56]
  403304:	ldr	x9, [sp, #72]
  403308:	orr	w12, w11, w10
  40330c:	cbz	w12, 403324 <wcrtomb@plt+0x964>
  403310:	cmp	x21, x23
  403314:	b.ne	403368 <wcrtomb@plt+0x9a8>  // b.any
  403318:	ldr	x8, [sp, #56]
  40331c:	ldr	x9, [sp, #72]
  403320:	cbz	w11, 403368 <wcrtomb@plt+0x9a8>
  403324:	ldur	x10, [x29, #-64]
  403328:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40332c:	cbz	x10, 40369c <wcrtomb@plt+0xcdc>
  403330:	cmp	x9, x26
  403334:	b.cc	40334c <wcrtomb@plt+0x98c>  // b.lo, b.ul, b.last
  403338:	ldr	x10, [sp, #64]
  40333c:	cmp	x8, x10
  403340:	b.ls	403354 <wcrtomb@plt+0x994>  // b.plast
  403344:	cmp	x9, x26
  403348:	b.ne	403354 <wcrtomb@plt+0x994>  // b.any
  40334c:	mov	x26, x9
  403350:	str	x8, [sp, #64]
  403354:	ldr	x8, [x22, #24]
  403358:	add	x28, x28, #0x1
  40335c:	cmp	x28, x8
  403360:	b.cc	403260 <wcrtomb@plt+0x8a0>  // b.lo, b.ul, b.last
  403364:	b	403578 <wcrtomb@plt+0xbb8>
  403368:	cbz	w10, 40344c <wcrtomb@plt+0xa8c>
  40336c:	cbnz	w11, 40344c <wcrtomb@plt+0xa8c>
  403370:	add	x0, x25, x21
  403374:	mov	x1, x20
  403378:	bl	408fd0 <wcrtomb@plt+0x6610>
  40337c:	cbnz	x0, 403394 <wcrtomb@plt+0x9d4>
  403380:	mov	x0, x27
  403384:	mov	x1, x25
  403388:	mov	x2, x20
  40338c:	bl	408fd8 <wcrtomb@plt+0x6618>
  403390:	cbz	x0, 4032ec <wcrtomb@plt+0x92c>
  403394:	cbz	x21, 4033e8 <wcrtomb@plt+0xa28>
  403398:	ldr	x8, [x22, #16]
  40339c:	ldr	x10, [sp, #72]
  4033a0:	ldur	x4, [x29, #-56]
  4033a4:	sub	x3, x25, x27
  4033a8:	add	x8, x8, x28, lsl #6
  4033ac:	ldrb	w9, [x8, #56]
  4033b0:	mvn	x10, x10
  4033b4:	mov	x1, x27
  4033b8:	orr	w9, w9, #0x40
  4033bc:	strb	w9, [x8, #56]
  4033c0:	ldr	x8, [x22, #16]
  4033c4:	add	x9, x21, x25
  4033c8:	add	x2, x10, x9
  4033cc:	add	x0, x8, x28, lsl #6
  4033d0:	bl	417ce0 <_obstack_memory_used@@Base+0x2cac>
  4033d4:	cmn	x0, #0x2
  4033d8:	b.le	4036e4 <wcrtomb@plt+0xd24>
  4033dc:	mov	x21, x0
  4033e0:	cmp	x0, #0x0
  4033e4:	b.gt	403444 <wcrtomb@plt+0xa84>
  4033e8:	cmp	x25, x20
  4033ec:	b.eq	40344c <wcrtomb@plt+0xa8c>  // b.none
  4033f0:	ldr	x8, [x22, #16]
  4033f4:	ldur	x5, [x29, #-56]
  4033f8:	mov	x1, x27
  4033fc:	mov	x2, x24
  403400:	add	x8, x8, x28, lsl #6
  403404:	ldrb	w9, [x8, #56]
  403408:	and	w9, w9, #0xffffffbf
  40340c:	strb	w9, [x8, #56]
  403410:	ldr	x8, [x22, #16]
  403414:	add	x9, x25, #0x1
  403418:	sub	x3, x9, x27
  40341c:	mvn	x9, x9
  403420:	add	x0, x8, x28, lsl #6
  403424:	ldr	x8, [sp, #48]
  403428:	add	x4, x8, x9
  40342c:	bl	417f98 <_obstack_memory_used@@Base+0x2f64>
  403430:	tbnz	x0, #63, 403454 <wcrtomb@plt+0xa94>
  403434:	ldr	x8, [x22, #48]
  403438:	add	x25, x27, x0
  40343c:	ldr	x8, [x8]
  403440:	sub	x21, x8, x0
  403444:	cmp	x25, x26
  403448:	b.ls	403370 <wcrtomb@plt+0x9b0>  // b.plast
  40344c:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403450:	b	403354 <wcrtomb@plt+0x994>
  403454:	cmn	x0, #0x1
  403458:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40345c:	b.eq	403354 <wcrtomb@plt+0x994>  // b.none
  403460:	b	4036e4 <wcrtomb@plt+0xd24>
  403464:	stur	xzr, [x29, #-40]
  403468:	sturb	wzr, [x29, #-44]
  40346c:	ldr	x0, [x22]
  403470:	cbz	x0, 4035a0 <wcrtomb@plt+0xbe0>
  403474:	ldrb	w8, [x22, #64]
  403478:	sub	x21, x26, x27
  40347c:	sub	x3, x29, #0x20
  403480:	mov	w4, #0x1                   	// #1
  403484:	sub	x1, x27, x8
  403488:	add	x2, x21, x8
  40348c:	bl	408b58 <wcrtomb@plt+0x6198>
  403490:	tbnz	x0, #63, 403694 <wcrtomb@plt+0xcd4>
  403494:	ldr	w1, [sp, #36]
  403498:	add	x19, x27, x0
  40349c:	mov	x20, x0
  4034a0:	sub	x2, x19, x25
  4034a4:	mov	x0, x25
  4034a8:	bl	4027a0 <memrchr@plt>
  4034ac:	ldur	x23, [x29, #-32]
  4034b0:	ldr	x24, [x22, #56]
  4034b4:	ldr	w9, [sp, #12]
  4034b8:	cmp	x0, #0x0
  4034bc:	csinc	x8, x25, x0, eq  // eq = none
  4034c0:	cmp	x23, x24
  4034c4:	str	x8, [sp, #72]
  4034c8:	cset	w8, lt  // lt = tstop
  4034cc:	orr	w8, w8, w9
  4034d0:	mov	x0, x19
  4034d4:	tbnz	w8, #0, 403508 <wcrtomb@plt+0xb48>
  4034d8:	ldr	x8, [sp, #72]
  4034dc:	mov	w9, #0x10                  	// #16
  4034e0:	mov	x0, x19
  4034e4:	sub	x8, x19, x8
  4034e8:	cmp	x8, #0x10
  4034ec:	csel	x8, x8, x9, gt
  4034f0:	cmp	x8, x20, lsr #2
  4034f4:	b.lt	403508 <wcrtomb@plt+0xb48>  // b.tstop
  4034f8:	cmp	x8, x21, asr #2
  4034fc:	mov	x0, x26
  403500:	b.ge	403508 <wcrtomb@plt+0xb48>  // b.tcont
  403504:	add	x0, x27, x8, lsl #2
  403508:	ldr	w1, [sp, #36]
  40350c:	sub	x2, x26, x0
  403510:	bl	402820 <memchr@plt>
  403514:	cmp	x0, #0x0
  403518:	csinc	x20, x26, x0, eq  // eq = none
  40351c:	cmp	x23, x24
  403520:	b.ge	4035a8 <wcrtomb@plt+0xbe8>  // b.tcont
  403524:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403528:	add	x9, x9, #0x8d8
  40352c:	ldrb	w8, [x9]
  403530:	ldrb	w9, [x9, #2]
  403534:	ldr	x23, [sp, #72]
  403538:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40353c:	eor	w8, w8, #0x1
  403540:	orr	w8, w8, w9
  403544:	cbnz	w8, 4036a8 <wcrtomb@plt+0xce8>
  403548:	ldur	x8, [x29, #-8]
  40354c:	cmp	x8, x23
  403550:	b.cs	403558 <wcrtomb@plt+0xb98>  // b.hs, b.nlast
  403554:	stur	x23, [x29, #-8]
  403558:	sub	x0, x29, #0x8
  40355c:	mov	x1, xzr
  403560:	mov	x2, x19
  403564:	mov	x3, x26
  403568:	bl	408d74 <wcrtomb@plt+0x63b4>
  40356c:	cbz	x0, 4036a8 <wcrtomb@plt+0xce8>
  403570:	ldur	x27, [x29, #-8]
  403574:	b	403620 <wcrtomb@plt+0xc60>
  403578:	ldr	x20, [sp, #48]
  40357c:	ldr	x25, [sp, #24]
  403580:	ldur	x28, [x29, #-64]
  403584:	cmp	x26, x20
  403588:	b.cc	4036d8 <wcrtomb@plt+0xd18>  // b.lo, b.ul, b.last
  40358c:	ldr	x26, [sp, #40]
  403590:	mov	x27, x20
  403594:	cmp	x20, x26
  403598:	b.cc	403224 <wcrtomb@plt+0x864>  // b.lo, b.ul, b.last
  40359c:	b	403694 <wcrtomb@plt+0xcd4>
  4035a0:	mov	x20, x26
  4035a4:	b	4035b0 <wcrtomb@plt+0xbf0>
  4035a8:	ldr	x27, [sp, #72]
  4035ac:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4035b0:	ldr	x0, [sp, #16]
  4035b4:	cbz	x0, 40361c <wcrtomb@plt+0xc5c>
  4035b8:	sub	x4, x29, #0x28
  4035bc:	mov	x1, x27
  4035c0:	mov	x2, x20
  4035c4:	mov	w3, wzr
  4035c8:	mov	x5, xzr
  4035cc:	bl	40a080 <wcrtomb@plt+0x76c0>
  4035d0:	cbz	x0, 40358c <wcrtomb@plt+0xbcc>
  4035d4:	mov	x19, x0
  4035d8:	cmp	x0, x20
  4035dc:	b.eq	40358c <wcrtomb@plt+0xbcc>  // b.none
  4035e0:	ldur	x8, [x29, #-40]
  4035e4:	ldr	w20, [sp, #36]
  4035e8:	cbz	x8, 403600 <wcrtomb@plt+0xc40>
  4035ec:	sub	x2, x19, x25
  4035f0:	mov	x0, x25
  4035f4:	mov	w1, w20
  4035f8:	bl	4027a0 <memrchr@plt>
  4035fc:	add	x27, x0, #0x1
  403600:	sub	x2, x26, x19
  403604:	mov	x0, x19
  403608:	mov	w1, w20
  40360c:	bl	402820 <memchr@plt>
  403610:	cmp	x0, #0x0
  403614:	csinc	x20, x26, x0, eq  // eq = none
  403618:	stur	xzr, [x29, #-40]
  40361c:	mov	x23, x27
  403620:	ldr	x0, [x22, #8]
  403624:	sub	x4, x29, #0x28
  403628:	sub	x5, x29, #0x2c
  40362c:	mov	x1, x27
  403630:	mov	x2, x20
  403634:	mov	w3, wzr
  403638:	bl	40a080 <wcrtomb@plt+0x76c0>
  40363c:	cbz	x0, 40358c <wcrtomb@plt+0xbcc>
  403640:	mov	x19, x0
  403644:	cmp	x0, x20
  403648:	b.eq	40358c <wcrtomb@plt+0xbcc>  // b.none
  40364c:	ldur	x8, [x29, #-40]
  403650:	ldr	w20, [sp, #36]
  403654:	cbz	x8, 40366c <wcrtomb@plt+0xcac>
  403658:	sub	x2, x19, x25
  40365c:	mov	x0, x25
  403660:	mov	w1, w20
  403664:	bl	4027a0 <memrchr@plt>
  403668:	add	x23, x0, #0x1
  40366c:	sub	x2, x26, x19
  403670:	mov	x0, x19
  403674:	mov	w1, w20
  403678:	bl	402820 <memchr@plt>
  40367c:	ldurb	w8, [x29, #-44]
  403680:	cmp	x0, #0x0
  403684:	csinc	x20, x26, x0, eq  // eq = none
  403688:	cbz	w8, 4036a8 <wcrtomb@plt+0xce8>
  40368c:	mov	x27, x23
  403690:	b	403230 <wcrtomb@plt+0x870>
  403694:	mov	x0, #0xffffffffffffffff    	// #-1
  403698:	b	4036b8 <wcrtomb@plt+0xcf8>
  40369c:	ldr	x25, [sp, #24]
  4036a0:	ldr	x20, [sp, #48]
  4036a4:	mov	x23, x27
  4036a8:	sub	x9, x20, x23
  4036ac:	ldr	x8, [sp]
  4036b0:	sub	x0, x23, x25
  4036b4:	str	x9, [x8]
  4036b8:	ldp	x20, x19, [sp, #224]
  4036bc:	ldp	x22, x21, [sp, #208]
  4036c0:	ldp	x24, x23, [sp, #192]
  4036c4:	ldp	x26, x25, [sp, #176]
  4036c8:	ldp	x28, x27, [sp, #160]
  4036cc:	ldp	x29, x30, [sp, #144]
  4036d0:	add	sp, sp, #0xf0
  4036d4:	ret
  4036d8:	ldr	x9, [sp, #64]
  4036dc:	mov	x23, x26
  4036e0:	b	4036ac <wcrtomb@plt+0xcec>
  4036e4:	bl	412920 <wcrtomb@plt+0xff60>
  4036e8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4036ec:	ldr	x10, [x8, #1160]
  4036f0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4036f4:	ldr	x8, [x8, #1168]
  4036f8:	cmp	x10, #0x2
  4036fc:	b.cc	403728 <wcrtomb@plt+0xd68>  // b.lo, b.ul, b.last
  403700:	add	x11, x8, #0x18
  403704:	mov	w9, #0x1                   	// #1
  403708:	ldr	x12, [x11]
  40370c:	cmp	x12, x0
  403710:	b.hi	40372c <wcrtomb@plt+0xd6c>  // b.pmore
  403714:	add	x9, x9, #0x1
  403718:	cmp	x9, x10
  40371c:	add	x11, x11, #0x10
  403720:	b.cc	403708 <wcrtomb@plt+0xd48>  // b.lo, b.ul, b.last
  403724:	b	40372c <wcrtomb@plt+0xd6c>
  403728:	mov	w9, #0x1                   	// #1
  40372c:	add	x8, x8, x9, lsl #4
  403730:	ldur	x9, [x8, #-8]
  403734:	sub	x9, x0, x9
  403738:	add	x9, x9, #0x1
  40373c:	str	x9, [x1]
  403740:	ldur	x0, [x8, #-16]
  403744:	ret
  403748:	stp	x29, x30, [sp, #-48]!
  40374c:	stp	x20, x19, [sp, #32]
  403750:	mov	w19, w0
  403754:	stp	x22, x21, [sp, #16]
  403758:	mov	x29, sp
  40375c:	cbnz	w0, 4038d8 <wcrtomb@plt+0xf18>
  403760:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403764:	add	x1, x1, #0x9e0
  403768:	mov	w2, #0x5                   	// #5
  40376c:	mov	x0, xzr
  403770:	bl	402890 <dcgettext@plt>
  403774:	mov	x20, x0
  403778:	bl	40f784 <wcrtomb@plt+0xcdc4>
  40377c:	mov	x1, x0
  403780:	mov	x0, x20
  403784:	bl	402910 <printf@plt>
  403788:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  40378c:	add	x1, x1, #0xa31
  403790:	mov	w2, #0x5                   	// #5
  403794:	mov	x0, xzr
  403798:	bl	402890 <dcgettext@plt>
  40379c:	bl	402910 <printf@plt>
  4037a0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4037a4:	add	x1, x1, #0xa54
  4037a8:	mov	w2, #0x5                   	// #5
  4037ac:	mov	x0, xzr
  4037b0:	bl	402890 <dcgettext@plt>
  4037b4:	mov	x20, x0
  4037b8:	bl	40f784 <wcrtomb@plt+0xcdc4>
  4037bc:	mov	x1, x0
  4037c0:	mov	x0, x20
  4037c4:	bl	402910 <printf@plt>
  4037c8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4037cc:	add	x1, x1, #0xae5
  4037d0:	mov	w2, #0x5                   	// #5
  4037d4:	mov	x0, xzr
  4037d8:	bl	402890 <dcgettext@plt>
  4037dc:	bl	402910 <printf@plt>
  4037e0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4037e4:	add	x1, x1, #0xbe2
  4037e8:	mov	w2, #0x5                   	// #5
  4037ec:	mov	x0, xzr
  4037f0:	bl	402890 <dcgettext@plt>
  4037f4:	bl	402910 <printf@plt>
  4037f8:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4037fc:	add	x1, x1, #0xd87
  403800:	mov	w2, #0x5                   	// #5
  403804:	mov	x0, xzr
  403808:	bl	402890 <dcgettext@plt>
  40380c:	bl	402910 <printf@plt>
  403810:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403814:	add	x1, x1, #0xe7f
  403818:	mov	w2, #0x5                   	// #5
  40381c:	mov	x0, xzr
  403820:	bl	402890 <dcgettext@plt>
  403824:	bl	402910 <printf@plt>
  403828:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40382c:	add	x1, x1, #0x55
  403830:	mov	w2, #0x5                   	// #5
  403834:	mov	x0, xzr
  403838:	bl	402890 <dcgettext@plt>
  40383c:	bl	402910 <printf@plt>
  403840:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403844:	add	x1, x1, #0x19c
  403848:	mov	w2, #0x5                   	// #5
  40384c:	mov	x0, xzr
  403850:	bl	402890 <dcgettext@plt>
  403854:	bl	402910 <printf@plt>
  403858:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40385c:	add	x1, x1, #0x353
  403860:	mov	w2, #0x5                   	// #5
  403864:	mov	x0, xzr
  403868:	bl	402890 <dcgettext@plt>
  40386c:	bl	402910 <printf@plt>
  403870:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403874:	add	x1, x1, #0x464
  403878:	mov	w2, #0x5                   	// #5
  40387c:	mov	x0, xzr
  403880:	bl	402890 <dcgettext@plt>
  403884:	bl	402910 <printf@plt>
  403888:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40388c:	add	x1, x1, #0x5ba
  403890:	mov	w2, #0x5                   	// #5
  403894:	mov	x0, xzr
  403898:	bl	402890 <dcgettext@plt>
  40389c:	bl	402910 <printf@plt>
  4038a0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4038a4:	add	x1, x1, #0x68a
  4038a8:	mov	w2, #0x5                   	// #5
  4038ac:	mov	x0, xzr
  4038b0:	bl	402890 <dcgettext@plt>
  4038b4:	bl	402910 <printf@plt>
  4038b8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4038bc:	add	x1, x1, #0x7ae
  4038c0:	mov	w2, #0x5                   	// #5
  4038c4:	mov	x0, xzr
  4038c8:	bl	402890 <dcgettext@plt>
  4038cc:	bl	402910 <printf@plt>
  4038d0:	bl	41268c <wcrtomb@plt+0xfccc>
  4038d4:	b	40393c <wcrtomb@plt+0xf7c>
  4038d8:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4038dc:	ldr	x20, [x22, #1104]
  4038e0:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4038e4:	add	x1, x1, #0x9e0
  4038e8:	mov	w2, #0x5                   	// #5
  4038ec:	mov	x0, xzr
  4038f0:	bl	402890 <dcgettext@plt>
  4038f4:	mov	x21, x0
  4038f8:	bl	40f784 <wcrtomb@plt+0xcdc4>
  4038fc:	mov	x2, x0
  403900:	mov	x0, x20
  403904:	mov	x1, x21
  403908:	bl	402980 <fprintf@plt>
  40390c:	ldr	x20, [x22, #1104]
  403910:	adrp	x1, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403914:	add	x1, x1, #0xa0a
  403918:	mov	w2, #0x5                   	// #5
  40391c:	mov	x0, xzr
  403920:	bl	402890 <dcgettext@plt>
  403924:	mov	x21, x0
  403928:	bl	40f784 <wcrtomb@plt+0xcdc4>
  40392c:	mov	x2, x0
  403930:	mov	x0, x20
  403934:	mov	x1, x21
  403938:	bl	402980 <fprintf@plt>
  40393c:	mov	w0, w19
  403940:	bl	4023a0 <exit@plt>
  403944:	sub	sp, sp, #0x70
  403948:	stp	x29, x30, [sp, #16]
  40394c:	stp	x28, x27, [sp, #32]
  403950:	stp	x26, x25, [sp, #48]
  403954:	stp	x24, x23, [sp, #64]
  403958:	stp	x22, x21, [sp, #80]
  40395c:	stp	x20, x19, [sp, #96]
  403960:	stp	x1, xzr, [sp]
  403964:	ldr	x21, [x1]
  403968:	ldr	x22, [x0]
  40396c:	add	x29, sp, #0x10
  403970:	add	x8, x21, #0x1
  403974:	lsr	x9, x8, #62
  403978:	cbnz	x9, 403a80 <wcrtomb@plt+0x10c0>
  40397c:	mov	x20, x0
  403980:	lsl	x0, x8, #1
  403984:	bl	412738 <wcrtomb@plt+0xfd78>
  403988:	mov	x23, x0
  40398c:	mov	x24, x0
  403990:	cbz	x21, 403a48 <wcrtomb@plt+0x1088>
  403994:	adrp	x26, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403998:	mov	x28, #0x441                 	// #1089
  40399c:	add	x26, x26, #0x8d8
  4039a0:	mov	w27, #0x1                   	// #1
  4039a4:	movk	x28, #0x580, lsl #48
  4039a8:	mov	w19, #0x5c                  	// #92
  4039ac:	mov	x24, x23
  4039b0:	ldrb	w8, [x22]
  4039b4:	add	x8, x26, x8
  4039b8:	ldrsb	x25, [x8, #3]
  4039bc:	cmn	x25, #0x2
  4039c0:	b.ne	4039d8 <wcrtomb@plt+0x1018>  // b.any
  4039c4:	add	x2, sp, #0x8
  4039c8:	mov	x0, x22
  4039cc:	mov	x1, x21
  4039d0:	bl	414c80 <wcrtomb@plt+0x122c0>
  4039d4:	mov	x25, x0
  4039d8:	cmp	x25, #0x1
  4039dc:	b.eq	403a10 <wcrtomb@plt+0x1050>  // b.none
  4039e0:	cmn	x25, #0x1
  4039e4:	b.eq	403a0c <wcrtomb@plt+0x104c>  // b.none
  4039e8:	cmn	x25, #0x2
  4039ec:	b.ne	4039f4 <wcrtomb@plt+0x1034>  // b.any
  4039f0:	mov	x25, x21
  4039f4:	mov	x0, x24
  4039f8:	mov	x1, x22
  4039fc:	mov	x2, x25
  403a00:	bl	402320 <memcpy@plt>
  403a04:	add	x24, x24, x25
  403a08:	b	403a3c <wcrtomb@plt+0x107c>
  403a0c:	str	xzr, [sp, #8]
  403a10:	ldrb	w8, [x22]
  403a14:	sub	w9, w8, #0x24
  403a18:	cmp	w9, #0x3a
  403a1c:	b.hi	403a34 <wcrtomb@plt+0x1074>  // b.pmore
  403a20:	lsl	x9, x27, x9
  403a24:	tst	x9, x28
  403a28:	b.eq	403a34 <wcrtomb@plt+0x1074>  // b.none
  403a2c:	strb	w19, [x24], #1
  403a30:	ldrb	w8, [x22]
  403a34:	strb	w8, [x24], #1
  403a38:	mov	w25, #0x1                   	// #1
  403a3c:	subs	x21, x21, x25
  403a40:	add	x22, x22, x25
  403a44:	b.ne	4039b0 <wcrtomb@plt+0xff0>  // b.any
  403a48:	ldr	x0, [x20]
  403a4c:	bl	402770 <free@plt>
  403a50:	ldr	x9, [sp]
  403a54:	sub	x8, x24, x23
  403a58:	str	x23, [x20]
  403a5c:	str	x8, [x9]
  403a60:	ldp	x20, x19, [sp, #96]
  403a64:	ldp	x22, x21, [sp, #80]
  403a68:	ldp	x24, x23, [sp, #64]
  403a6c:	ldp	x26, x25, [sp, #48]
  403a70:	ldp	x28, x27, [sp, #32]
  403a74:	ldp	x29, x30, [sp, #16]
  403a78:	add	sp, sp, #0x70
  403a7c:	ret
  403a80:	bl	412920 <wcrtomb@plt+0xff60>
  403a84:	sub	sp, sp, #0x1b0
  403a88:	stp	x28, x27, [sp, #352]
  403a8c:	add	x27, sp, #0xa8
  403a90:	adrp	x13, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403a94:	mov	w14, #0x2                   	// #2
  403a98:	adrp	x10, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403a9c:	mov	w8, #0xa                   	// #10
  403aa0:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403aa4:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  403aa8:	stp	x29, x30, [sp, #336]
  403aac:	stp	x26, x25, [sp, #368]
  403ab0:	stp	x24, x23, [sp, #384]
  403ab4:	stp	x22, x21, [sp, #400]
  403ab8:	stp	x20, x19, [sp, #416]
  403abc:	mov	x19, x1
  403ac0:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403ac4:	stp	xzr, xzr, [x27, #144]
  403ac8:	str	w14, [x13, #992]
  403acc:	strb	w8, [x10, #2260]
  403ad0:	mov	x8, #0xffffffffffffffff    	// #-1
  403ad4:	str	x9, [x11, #1184]
  403ad8:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403adc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403ae0:	mov	w20, w0
  403ae4:	adrp	x15, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403ae8:	mov	w16, #0x1                   	// #1
  403aec:	str	x8, [x12, #1192]
  403af0:	str	x8, [x9, #1200]
  403af4:	stp	x8, xzr, [x27, #128]
  403af8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403afc:	add	x1, x1, #0x7ad
  403b00:	mov	w0, #0x6                   	// #6
  403b04:	add	x29, sp, #0x150
  403b08:	strb	w16, [x15, #1176]
  403b0c:	strb	wzr, [x8, #1208]
  403b10:	bl	4029a0 <setlocale@plt>
  403b14:	adrp	x21, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403b18:	add	x21, x21, #0x9b7
  403b1c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403b20:	add	x1, x1, #0x8b8
  403b24:	mov	x0, x21
  403b28:	bl	402570 <bindtextdomain@plt>
  403b2c:	mov	x0, x21
  403b30:	bl	402730 <textdomain@plt>
  403b34:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403b38:	add	x0, x0, #0x8d8
  403b3c:	bl	40e9b4 <wcrtomb@plt+0xbff4>
  403b40:	adrp	x0, 404000 <wcrtomb@plt+0x1640>
  403b44:	add	x0, x0, #0xf98
  403b48:	bl	420f58 <_obstack_memory_used@@Base+0xbf24>
  403b4c:	mov	x0, xzr
  403b50:	bl	409400 <wcrtomb@plt+0x6a40>
  403b54:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403b58:	add	x0, x0, #0x8ca
  403b5c:	bl	402950 <getenv@plt>
  403b60:	cbz	x0, 403c24 <wcrtomb@plt+0x1264>
  403b64:	ldrb	w8, [x0]
  403b68:	mov	x22, x0
  403b6c:	cbz	w8, 403c24 <wcrtomb@plt+0x1264>
  403b70:	mov	x0, x22
  403b74:	bl	402380 <strlen@plt>
  403b78:	add	x0, x0, #0x1
  403b7c:	bl	412738 <wcrtomb@plt+0xfd78>
  403b80:	mov	x9, #0x3e01                	// #15873
  403b84:	mov	x23, x0
  403b88:	mov	x21, xzr
  403b8c:	mov	w8, #0x1                   	// #1
  403b90:	movk	x9, #0x1, lsl #32
  403b94:	mov	x10, x22
  403b98:	mov	x11, x0
  403b9c:	ldrb	w12, [x10]
  403ba0:	sub	w13, w12, #0x9
  403ba4:	cmp	w13, #0x5
  403ba8:	b.cs	403bb4 <wcrtomb@plt+0x11f4>  // b.hs, b.nlast
  403bac:	add	x10, x10, #0x1
  403bb0:	b	403b9c <wcrtomb@plt+0x11dc>
  403bb4:	cmp	w12, #0x20
  403bb8:	b.eq	403bac <wcrtomb@plt+0x11ec>  // b.none
  403bbc:	cbz	w12, 403c2c <wcrtomb@plt+0x126c>
  403bc0:	add	x21, x21, #0x1
  403bc4:	add	x13, x11, #0x2
  403bc8:	mov	x11, x13
  403bcc:	and	w13, w12, #0xff
  403bd0:	add	x14, x10, #0x1
  403bd4:	cmp	w13, #0x5c
  403bd8:	sturb	w12, [x11, #-2]
  403bdc:	b.ne	403bf4 <wcrtomb@plt+0x1234>  // b.any
  403be0:	ldrb	w12, [x14]
  403be4:	cbz	w12, 403c18 <wcrtomb@plt+0x1258>
  403be8:	add	x10, x10, #0x2
  403bec:	sturb	w12, [x11, #-2]
  403bf0:	b	403bf8 <wcrtomb@plt+0x1238>
  403bf4:	mov	x10, x14
  403bf8:	ldrb	w12, [x10]
  403bfc:	add	x13, x11, #0x1
  403c00:	cmp	w12, #0x20
  403c04:	b.hi	403bc8 <wcrtomb@plt+0x1208>  // b.pmore
  403c08:	lsl	x14, x8, x12
  403c0c:	tst	x14, x9
  403c10:	mov	x14, x10
  403c14:	b.eq	403bc8 <wcrtomb@plt+0x1208>  // b.none
  403c18:	sturb	wzr, [x11, #-1]
  403c1c:	mov	x10, x14
  403c20:	b	403b9c <wcrtomb@plt+0x11dc>
  403c24:	str	xzr, [sp, #8]
  403c28:	b	403d48 <wcrtomb@plt+0x1388>
  403c2c:	mov	w8, #0x7fffffff            	// #2147483647
  403c30:	sub	w8, w8, w20
  403c34:	cmp	x21, w8, sxtw
  403c38:	b.hi	404f94 <wcrtomb@plt+0x25d4>  // b.pmore
  403c3c:	add	x20, x21, w20, sxtw
  403c40:	lsl	x8, x20, #3
  403c44:	add	x0, x8, #0x8
  403c48:	bl	412738 <wcrtomb@plt+0xfd78>
  403c4c:	ldr	x11, [x19]
  403c50:	mov	x9, x0
  403c54:	mov	x24, x0
  403c58:	mov	x8, xzr
  403c5c:	str	x11, [x9], #8
  403c60:	mov	x11, #0x3e01                	// #15873
  403c64:	mov	w10, #0x1                   	// #1
  403c68:	movk	x11, #0x1, lsl #32
  403c6c:	ldrb	w12, [x22]
  403c70:	sub	w13, w12, #0x9
  403c74:	cmp	w13, #0x5
  403c78:	b.cs	403c84 <wcrtomb@plt+0x12c4>  // b.hs, b.nlast
  403c7c:	add	x22, x22, #0x1
  403c80:	b	403c6c <wcrtomb@plt+0x12ac>
  403c84:	cmp	w12, #0x20
  403c88:	b.eq	403c7c <wcrtomb@plt+0x12bc>  // b.none
  403c8c:	cbz	w12, 403cfc <wcrtomb@plt+0x133c>
  403c90:	str	x23, [x9, x8, lsl #3]
  403c94:	ldrb	w12, [x22]
  403c98:	add	x8, x8, #0x1
  403c9c:	add	x13, x23, #0x2
  403ca0:	mov	x23, x13
  403ca4:	and	w13, w12, #0xff
  403ca8:	add	x14, x22, #0x1
  403cac:	cmp	w13, #0x5c
  403cb0:	sturb	w12, [x23, #-2]
  403cb4:	b.ne	403ccc <wcrtomb@plt+0x130c>  // b.any
  403cb8:	ldrb	w12, [x14]
  403cbc:	cbz	w12, 403cf0 <wcrtomb@plt+0x1330>
  403cc0:	add	x22, x22, #0x2
  403cc4:	sturb	w12, [x23, #-2]
  403cc8:	b	403cd0 <wcrtomb@plt+0x1310>
  403ccc:	mov	x22, x14
  403cd0:	ldrb	w12, [x22]
  403cd4:	add	x13, x23, #0x1
  403cd8:	cmp	w12, #0x20
  403cdc:	b.hi	403ca0 <wcrtomb@plt+0x12e0>  // b.pmore
  403ce0:	lsl	x14, x10, x12
  403ce4:	tst	x14, x11
  403ce8:	mov	x14, x22
  403cec:	b.eq	403ca0 <wcrtomb@plt+0x12e0>  // b.none
  403cf0:	sturb	wzr, [x23, #-1]
  403cf4:	mov	x22, x14
  403cf8:	b	403c6c <wcrtomb@plt+0x12ac>
  403cfc:	add	x8, x9, x8, lsl #3
  403d00:	add	x9, x19, #0x8
  403d04:	ldr	x10, [x9], #8
  403d08:	str	x10, [x8], #8
  403d0c:	cbnz	x10, 403d04 <wcrtomb@plt+0x1344>
  403d10:	cbz	w21, 403d40 <wcrtomb@plt+0x1380>
  403d14:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403d18:	add	x1, x1, #0x8d7
  403d1c:	mov	w2, #0x5                   	// #5
  403d20:	mov	x0, xzr
  403d24:	str	x21, [sp, #8]
  403d28:	bl	402890 <dcgettext@plt>
  403d2c:	mov	x2, x0
  403d30:	mov	w0, wzr
  403d34:	mov	w1, wzr
  403d38:	bl	4023b0 <error@plt>
  403d3c:	b	403d44 <wcrtomb@plt+0x1384>
  403d40:	str	xzr, [sp, #8]
  403d44:	mov	x19, x24
  403d48:	adrp	x23, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403d4c:	adrp	x24, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403d50:	mov	w8, #0xffffffff            	// #-1
  403d54:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403d58:	add	x23, x23, #0x218
  403d5c:	add	x24, x24, #0x258
  403d60:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403d64:	str	xzr, [sp, #24]
  403d68:	str	w8, [sp, #32]
  403d6c:	ldr	w28, [x25, #1120]
  403d70:	mov	w0, w20
  403d74:	mov	x1, x19
  403d78:	mov	x2, x23
  403d7c:	mov	x3, x24
  403d80:	mov	x4, xzr
  403d84:	bl	402740 <getopt_long@plt>
  403d88:	sub	w8, w0, #0x30
  403d8c:	mov	w26, w0
  403d90:	cmp	w8, #0x9
  403d94:	b.hi	403e2c <wcrtomb@plt+0x146c>  // b.pmore
  403d98:	mov	x8, xzr
  403d9c:	mov	w22, w28
  403da0:	str	w22, [x21, #912]
  403da4:	ldr	w22, [x25, #1120]
  403da8:	mov	w0, w20
  403dac:	mov	x1, x19
  403db0:	mov	x2, x23
  403db4:	mov	x3, x24
  403db8:	mov	x4, xzr
  403dbc:	add	x25, x8, #0x1
  403dc0:	strb	w26, [x27, x8]
  403dc4:	bl	402740 <getopt_long@plt>
  403dc8:	sub	w8, w0, #0x30
  403dcc:	mov	w26, w0
  403dd0:	cmp	w8, #0x9
  403dd4:	b.hi	403e14 <wcrtomb@plt+0x1454>  // b.pmore
  403dd8:	ldrb	w8, [sp, #168]
  403ddc:	ldr	w9, [x21, #912]
  403de0:	cmp	w8, #0x30
  403de4:	cset	w8, eq  // eq = none
  403de8:	sub	x8, x25, x8
  403dec:	cmp	w9, w22
  403df0:	csel	x8, x8, xzr, eq  // eq = none
  403df4:	cmp	x8, #0x15
  403df8:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403dfc:	b.ne	403da0 <wcrtomb@plt+0x13e0>  // b.any
  403e00:	mov	w9, #0x2e2e                	// #11822
  403e04:	movk	w9, #0x2e, lsl #16
  403e08:	str	w9, [x27, x8]
  403e0c:	mov	w25, #0x18                  	// #24
  403e10:	b	403e18 <wcrtomb@plt+0x1458>
  403e14:	cbz	x25, 403e28 <wcrtomb@plt+0x1468>
  403e18:	add	x0, sp, #0xa8
  403e1c:	sub	x1, x29, #0x28
  403e20:	strb	wzr, [x27, x25]
  403e24:	bl	404fac <wcrtomb@plt+0x25ec>
  403e28:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403e2c:	cmp	w26, #0xff
  403e30:	b.gt	403e68 <wcrtomb@plt+0x14a8>
  403e34:	sub	w8, w26, #0x41
  403e38:	cmp	w8, #0x39
  403e3c:	b.hi	403ef0 <wcrtomb@plt+0x1530>  // b.pmore
  403e40:	adrp	x11, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403e44:	add	x11, x11, #0x68
  403e48:	adr	x9, 403d6c <wcrtomb@plt+0x13ac>
  403e4c:	ldrh	w10, [x11, x8, lsl #1]
  403e50:	add	x9, x9, x10, lsl #2
  403e54:	br	x9
  403e58:	mov	w8, #0x1                   	// #1
  403e5c:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403e60:	strb	w8, [x9, #3550]
  403e64:	b	403d6c <wcrtomb@plt+0x13ac>
  403e68:	sub	w8, w26, #0x100
  403e6c:	cmp	w8, #0x9
  403e70:	b.hi	404f04 <wcrtomb@plt+0x2544>  // b.pmore
  403e74:	adrp	x11, 421000 <_obstack_memory_used@@Base+0xbfcc>
  403e78:	add	x11, x11, #0xdc
  403e7c:	adr	x9, 403e8c <wcrtomb@plt+0x14cc>
  403e80:	ldrh	w10, [x11, x8, lsl #1]
  403e84:	add	x9, x9, x10, lsl #2
  403e88:	br	x9
  403e8c:	cmp	w26, #0x106
  403e90:	cset	w9, eq  // eq = none
  403e94:	mov	x8, xzr
  403e98:	lsl	w22, w9, #29
  403e9c:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403ea0:	mov	w28, #0x10000000            	// #268435456
  403ea4:	mov	x25, x8
  403ea8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403eac:	add	x8, x8, #0x4e0
  403eb0:	ldr	x0, [x8, x25, lsl #3]
  403eb4:	cbnz	x0, 403ec8 <wcrtomb@plt+0x1508>
  403eb8:	bl	40ecf0 <wcrtomb@plt+0xc330>
  403ebc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403ec0:	add	x8, x8, #0x4e0
  403ec4:	str	x0, [x8, x25, lsl #3]
  403ec8:	ldr	x1, [x26, #1112]
  403ecc:	cmp	x25, #0x0
  403ed0:	mov	w8, #0x50000000            	// #1342177280
  403ed4:	csel	w8, w8, w28, eq  // eq = none
  403ed8:	orr	w2, w8, w22
  403edc:	bl	40f0cc <wcrtomb@plt+0xc70c>
  403ee0:	mov	w8, #0x1                   	// #1
  403ee4:	cbz	x25, 403ea4 <wcrtomb@plt+0x14e4>
  403ee8:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403eec:	b	403d6c <wcrtomb@plt+0x13ac>
  403ef0:	cmn	w26, #0x1
  403ef4:	b.eq	4045c0 <wcrtomb@plt+0x1c00>  // b.none
  403ef8:	cbz	w26, 403d6c <wcrtomb@plt+0x13ac>
  403efc:	b	404f04 <wcrtomb@plt+0x2544>
  403f00:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403f04:	strb	wzr, [x8, #2260]
  403f08:	b	403d6c <wcrtomb@plt+0x13ac>
  403f0c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f10:	ldr	x0, [x8, #1112]
  403f14:	adrp	x3, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f18:	adrp	x4, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403f1c:	add	x3, x3, #0x4a0
  403f20:	add	x4, x4, #0x7ad
  403f24:	mov	w2, #0xa                   	// #10
  403f28:	mov	x1, xzr
  403f2c:	bl	412964 <wcrtomb@plt+0xffa4>
  403f30:	cmp	w0, #0x2
  403f34:	b.cc	403d6c <wcrtomb@plt+0x13ac>  // b.lo, b.ul, b.last
  403f38:	b	404f28 <wcrtomb@plt+0x2568>
  403f3c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403f40:	mov	w9, #0x1                   	// #1
  403f44:	strb	w9, [x8, #3549]
  403f48:	b	403d6c <wcrtomb@plt+0x13ac>
  403f4c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f50:	mov	w9, #0x1                   	// #1
  403f54:	strb	w9, [x8, #1232]
  403f58:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f5c:	mov	w9, #0x3                   	// #3
  403f60:	str	w9, [x8, #880]
  403f64:	str	w28, [sp, #28]
  403f68:	b	403d6c <wcrtomb@plt+0x13ac>
  403f6c:	bl	408c24 <wcrtomb@plt+0x6264>
  403f70:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  403f74:	mov	w9, #0x1                   	// #1
  403f78:	strb	w9, [x8, #3548]
  403f7c:	b	403d6c <wcrtomb@plt+0x13ac>
  403f80:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403f84:	add	x0, x0, #0x9b7
  403f88:	b	404110 <wcrtomb@plt+0x1750>
  403f8c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f90:	ldr	x0, [x8, #1112]
  403f94:	b	404110 <wcrtomb@plt+0x1750>
  403f98:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403f9c:	ldr	x22, [x8, #1112]
  403fa0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403fa4:	add	x1, x1, #0x91a
  403fa8:	mov	x0, x22
  403fac:	bl	402750 <strcmp@plt>
  403fb0:	cbz	w0, 4044a0 <wcrtomb@plt+0x1ae0>
  403fb4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403fb8:	add	x1, x1, #0x91f
  403fbc:	mov	x0, x22
  403fc0:	bl	402750 <strcmp@plt>
  403fc4:	cbnz	w0, 404f34 <wcrtomb@plt+0x2574>
  403fc8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403fcc:	mov	w9, #0x2                   	// #2
  403fd0:	str	w9, [x8, #1212]
  403fd4:	b	403d6c <wcrtomb@plt+0x13ac>
  403fd8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403fdc:	ldr	x0, [x8, #1112]
  403fe0:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  403fe4:	add	x1, x1, #0x4a8
  403fe8:	bl	404fac <wcrtomb@plt+0x25ec>
  403fec:	b	403d6c <wcrtomb@plt+0x13ac>
  403ff0:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  403ff4:	add	x0, x0, #0x947
  403ff8:	b	404110 <wcrtomb@plt+0x1750>
  403ffc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404000:	mov	w9, #0x1                   	// #1
  404004:	strb	w9, [x8, #1220]
  404008:	b	403d6c <wcrtomb@plt+0x13ac>
  40400c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404010:	add	x0, x0, #0x93b
  404014:	b	404110 <wcrtomb@plt+0x1750>
  404018:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40401c:	ldr	x0, [x8, #1112]
  404020:	adrp	x1, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404024:	add	x1, x1, #0x4b0
  404028:	bl	404fac <wcrtomb@plt+0x25ec>
  40402c:	b	403d6c <wcrtomb@plt+0x13ac>
  404030:	mov	w8, #0x1                   	// #1
  404034:	b	4041d0 <wcrtomb@plt+0x1810>
  404038:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40403c:	ldr	x1, [x8, #1112]
  404040:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404044:	ldr	x5, [x8, #984]
  404048:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xbfcc>
  40404c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404050:	adrp	x2, 421000 <_obstack_memory_used@@Base+0xbfcc>
  404054:	add	x22, x22, #0x10c
  404058:	add	x0, x0, #0x94c
  40405c:	add	x2, x2, #0x118
  404060:	mov	w4, #0x4                   	// #4
  404064:	mov	x3, x22
  404068:	bl	4092fc <wcrtomb@plt+0x693c>
  40406c:	ldr	w8, [x22, x0, lsl #2]
  404070:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404074:	cmp	x0, #0x1
  404078:	str	w8, [x9, #880]
  40407c:	ldr	w8, [sp, #28]
  404080:	csel	w8, w28, w8, eq  // eq = none
  404084:	str	w8, [sp, #28]
  404088:	b	403d6c <wcrtomb@plt+0x13ac>
  40408c:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404090:	ldr	x26, [x22, #1112]
  404094:	mov	x0, x26
  404098:	bl	402380 <strlen@plt>
  40409c:	ldp	x10, x8, [x27, #136]
  4040a0:	add	x9, x0, #0x1
  4040a4:	str	x9, [sp, #16]
  4040a8:	mov	x11, x0
  4040ac:	add	x9, x9, x8
  4040b0:	cmp	x10, x9
  4040b4:	b.cs	404434 <wcrtomb@plt+0x1a74>  // b.hs, b.nlast
  4040b8:	ldr	x0, [x27, #152]
  4040bc:	sub	x1, x29, #0x20
  4040c0:	str	x9, [x27, #136]
  4040c4:	mov	x26, x11
  4040c8:	bl	41283c <wcrtomb@plt+0xfe7c>
  4040cc:	mov	x11, x26
  4040d0:	ldr	x8, [x27, #144]
  4040d4:	ldr	x26, [x22, #1112]
  4040d8:	mov	x28, x0
  4040dc:	str	x0, [x27, #152]
  4040e0:	b	404438 <wcrtomb@plt+0x1a78>
  4040e4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4040e8:	ldr	x0, [x8, #1112]
  4040ec:	sub	x1, x29, #0x28
  4040f0:	bl	404fac <wcrtomb@plt+0x25ec>
  4040f4:	b	403d6c <wcrtomb@plt+0x13ac>
  4040f8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4040fc:	mov	w9, #0x1                   	// #1
  404100:	strb	w9, [x8, #1222]
  404104:	b	403d6c <wcrtomb@plt+0x13ac>
  404108:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40410c:	add	x0, x0, #0x941
  404110:	ldr	w1, [sp, #32]
  404114:	bl	405024 <wcrtomb@plt+0x2664>
  404118:	str	w0, [sp, #32]
  40411c:	b	403d6c <wcrtomb@plt+0x13ac>
  404120:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404124:	ldr	x0, [x26, #1112]
  404128:	bl	40eb98 <wcrtomb@plt+0xc1d8>
  40412c:	adrp	x28, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404130:	mov	x8, xzr
  404134:	add	x28, x28, #0x4f0
  404138:	ldr	x0, [x28, x8, lsl #3]
  40413c:	mov	x22, x8
  404140:	cbnz	x0, 40414c <wcrtomb@plt+0x178c>
  404144:	bl	40ecf0 <wcrtomb@plt+0xc330>
  404148:	str	x0, [x28, x22, lsl #3]
  40414c:	ldr	x1, [x26, #1112]
  404150:	cmp	x22, #0x0
  404154:	mov	w8, #0x10000000            	// #268435456
  404158:	mov	w9, #0x50000000            	// #1342177280
  40415c:	csel	w2, w9, w8, eq  // eq = none
  404160:	bl	40f0cc <wcrtomb@plt+0xc70c>
  404164:	mov	w8, #0x1                   	// #1
  404168:	cbz	x22, 404138 <wcrtomb@plt+0x1778>
  40416c:	b	403d6c <wcrtomb@plt+0x13ac>
  404170:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404174:	strb	wzr, [x8, #3550]
  404178:	b	403d6c <wcrtomb@plt+0x13ac>
  40417c:	mov	w8, #0x1                   	// #1
  404180:	str	w8, [sp, #24]
  404184:	b	403d6c <wcrtomb@plt+0x13ac>
  404188:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40418c:	ldr	x22, [x8, #1112]
  404190:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404194:	add	x1, x1, #0x96e
  404198:	mov	x0, x22
  40419c:	bl	402750 <strcmp@plt>
  4041a0:	cbz	w0, 4044b0 <wcrtomb@plt+0x1af0>
  4041a4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4041a8:	mov	x0, x22
  4041ac:	add	x1, x1, #0xa8e
  4041b0:	bl	402750 <strcmp@plt>
  4041b4:	cbz	w0, 4045a4 <wcrtomb@plt+0x1be4>
  4041b8:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4041bc:	mov	x0, x22
  4041c0:	add	x1, x1, #0xb00
  4041c4:	bl	402750 <strcmp@plt>
  4041c8:	cbnz	w0, 404f40 <wcrtomb@plt+0x2580>
  4041cc:	mov	w8, #0x2                   	// #2
  4041d0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4041d4:	str	w8, [x9, #1216]
  4041d8:	b	403d6c <wcrtomb@plt+0x13ac>
  4041dc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4041e0:	ldr	x26, [x8, #1112]
  4041e4:	cbz	x26, 404490 <wcrtomb@plt+0x1ad0>
  4041e8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4041ec:	mov	x0, x26
  4041f0:	add	x1, x1, #0x595
  4041f4:	bl	40957c <wcrtomb@plt+0x6bbc>
  4041f8:	cbz	w0, 404480 <wcrtomb@plt+0x1ac0>
  4041fc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404200:	mov	x0, x26
  404204:	add	x1, x1, #0x98f
  404208:	bl	40957c <wcrtomb@plt+0x6bbc>
  40420c:	cbz	w0, 404480 <wcrtomb@plt+0x1ac0>
  404210:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404214:	mov	x0, x26
  404218:	add	x1, x1, #0x993
  40421c:	bl	40957c <wcrtomb@plt+0x6bbc>
  404220:	cbz	w0, 404480 <wcrtomb@plt+0x1ac0>
  404224:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404228:	mov	x0, x26
  40422c:	add	x1, x1, #0x999
  404230:	bl	40957c <wcrtomb@plt+0x6bbc>
  404234:	cbz	w0, 4045b4 <wcrtomb@plt+0x1bf4>
  404238:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40423c:	mov	x0, x26
  404240:	add	x1, x1, #0x99f
  404244:	bl	40957c <wcrtomb@plt+0x6bbc>
  404248:	cbz	w0, 4045b4 <wcrtomb@plt+0x1bf4>
  40424c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404250:	mov	x0, x26
  404254:	add	x1, x1, #0x9a2
  404258:	bl	40957c <wcrtomb@plt+0x6bbc>
  40425c:	cbz	w0, 4045b4 <wcrtomb@plt+0x1bf4>
  404260:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404264:	mov	x0, x26
  404268:	add	x1, x1, #0x9a7
  40426c:	bl	40957c <wcrtomb@plt+0x6bbc>
  404270:	cbz	w0, 404490 <wcrtomb@plt+0x1ad0>
  404274:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404278:	mov	x0, x26
  40427c:	add	x1, x1, #0x9af
  404280:	bl	40957c <wcrtomb@plt+0x6bbc>
  404284:	cbz	w0, 404490 <wcrtomb@plt+0x1ad0>
  404288:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40428c:	mov	x0, x26
  404290:	add	x1, x1, #0x9ac
  404294:	bl	40957c <wcrtomb@plt+0x6bbc>
  404298:	cbz	w0, 404490 <wcrtomb@plt+0x1ad0>
  40429c:	mov	w8, #0x1                   	// #1
  4042a0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042a4:	str	w8, [x9, #1244]
  4042a8:	b	403d6c <wcrtomb@plt+0x13ac>
  4042ac:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042b0:	mov	w9, #0x1                   	// #1
  4042b4:	strb	w9, [x8, #1233]
  4042b8:	b	403d6c <wcrtomb@plt+0x13ac>
  4042bc:	mov	w8, #0x1                   	// #1
  4042c0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042c4:	strb	w8, [x9, #1280]
  4042c8:	b	403d6c <wcrtomb@plt+0x13ac>
  4042cc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042d0:	mov	w9, #0x2                   	// #2
  4042d4:	str	w9, [x8, #1224]
  4042d8:	b	403d6c <wcrtomb@plt+0x13ac>
  4042dc:	mov	x8, xzr
  4042e0:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042e4:	mov	w28, #0x10000000            	// #268435456
  4042e8:	mov	x22, x8
  4042ec:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4042f0:	add	x8, x8, #0x4e0
  4042f4:	ldr	x1, [x8, x22, lsl #3]
  4042f8:	cbnz	x1, 404310 <wcrtomb@plt+0x1950>
  4042fc:	bl	40ecf0 <wcrtomb@plt+0xc330>
  404300:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404304:	mov	x1, x0
  404308:	add	x8, x8, #0x4e0
  40430c:	str	x0, [x8, x22, lsl #3]
  404310:	ldr	x2, [x26, #1112]
  404314:	cmp	x22, #0x0
  404318:	mov	w8, #0x50000000            	// #1342177280
  40431c:	adrp	x0, 40f000 <wcrtomb@plt+0xc640>
  404320:	csel	w3, w8, w28, eq  // eq = none
  404324:	mov	w4, #0xa                   	// #10
  404328:	add	x0, x0, #0xcc
  40432c:	bl	40f5c4 <wcrtomb@plt+0xcc04>
  404330:	cbnz	w0, 404f0c <wcrtomb@plt+0x254c>
  404334:	mov	w8, #0x1                   	// #1
  404338:	cbz	x22, 4042e8 <wcrtomb@plt+0x1928>
  40433c:	b	403d6c <wcrtomb@plt+0x13ac>
  404340:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404344:	ldr	x22, [x8, #1112]
  404348:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40434c:	add	x1, x1, #0x95a
  404350:	mov	x0, x22
  404354:	bl	402750 <strcmp@plt>
  404358:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40435c:	cbz	w0, 4044bc <wcrtomb@plt+0x1afc>
  404360:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404364:	add	x1, x1, #0xb54
  404368:	mov	x0, x22
  40436c:	bl	4024b0 <fopen@plt>
  404370:	mov	x28, x0
  404374:	cbnz	x0, 4044c0 <wcrtomb@plt+0x1b00>
  404378:	b	404f64 <wcrtomb@plt+0x25a4>
  40437c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404380:	mov	w9, #0x1                   	// #1
  404384:	strb	w9, [x8, #1229]
  404388:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40438c:	str	wzr, [x8, #992]
  404390:	b	403d6c <wcrtomb@plt+0x13ac>
  404394:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404398:	mov	w9, #0x1                   	// #1
  40439c:	strb	w9, [x8, #1236]
  4043a0:	b	403d6c <wcrtomb@plt+0x13ac>
  4043a4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043a8:	ldr	x8, [x8, #1112]
  4043ac:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043b0:	str	x8, [x9, #888]
  4043b4:	b	403d6c <wcrtomb@plt+0x13ac>
  4043b8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043bc:	mov	w9, #0x1                   	// #1
  4043c0:	strb	w9, [x8, #1221]
  4043c4:	b	403d6c <wcrtomb@plt+0x13ac>
  4043c8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043cc:	ldr	x8, [x8, #1112]
  4043d0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043d4:	str	x8, [x9, #1288]
  4043d8:	b	403d6c <wcrtomb@plt+0x13ac>
  4043dc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043e0:	mov	w9, #0x1                   	// #1
  4043e4:	strb	w9, [x8, #1223]
  4043e8:	b	403d6c <wcrtomb@plt+0x13ac>
  4043ec:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4043f0:	strb	wzr, [x8, #1176]
  4043f4:	b	403d6c <wcrtomb@plt+0x13ac>
  4043f8:	mov	w8, #0xffffffff            	// #-1
  4043fc:	str	w8, [sp, #24]
  404400:	b	403d6c <wcrtomb@plt+0x13ac>
  404404:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404408:	mov	w9, #0x1                   	// #1
  40440c:	strb	w9, [x8, #1228]
  404410:	b	403d6c <wcrtomb@plt+0x13ac>
  404414:	mov	w8, #0x1                   	// #1
  404418:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40441c:	strb	w8, [x9, #1208]
  404420:	b	403d6c <wcrtomb@plt+0x13ac>
  404424:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404428:	mov	w9, #0x1                   	// #1
  40442c:	str	w9, [x8, #1224]
  404430:	b	403d6c <wcrtomb@plt+0x13ac>
  404434:	ldr	x28, [x27, #152]
  404438:	add	x22, x28, x8
  40443c:	mov	x0, x22
  404440:	mov	x1, x26
  404444:	mov	x2, x11
  404448:	mov	x26, x11
  40444c:	bl	402320 <memcpy@plt>
  404450:	ldr	x8, [x27, #144]
  404454:	ldr	x1, [sp, #16]
  404458:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40445c:	mov	w9, #0xa                   	// #10
  404460:	add	x8, x8, x26
  404464:	add	x10, x8, #0x1
  404468:	add	x2, x2, #0x7ad
  40446c:	mov	x0, x22
  404470:	str	x10, [x27, #144]
  404474:	strb	w9, [x28, x8]
  404478:	bl	405100 <wcrtomb@plt+0x2740>
  40447c:	b	403d6c <wcrtomb@plt+0x13ac>
  404480:	mov	w8, #0x1                   	// #1
  404484:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404488:	str	w8, [x9, #1240]
  40448c:	b	403d6c <wcrtomb@plt+0x13ac>
  404490:	mov	w8, #0x2                   	// #2
  404494:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404498:	str	w8, [x9, #1240]
  40449c:	b	403d6c <wcrtomb@plt+0x13ac>
  4044a0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4044a4:	mov	w9, #0x1                   	// #1
  4044a8:	str	w9, [x8, #1212]
  4044ac:	b	403d6c <wcrtomb@plt+0x13ac>
  4044b0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4044b4:	str	wzr, [x8, #1216]
  4044b8:	b	403d6c <wcrtomb@plt+0x13ac>
  4044bc:	ldr	x28, [x8, #1136]
  4044c0:	ldp	x22, x26, [x27, #144]
  4044c4:	mov	x8, x22
  4044c8:	str	x22, [sp, #16]
  4044cc:	ldr	x9, [x27, #136]
  4044d0:	add	x10, x8, #0x1
  4044d4:	cmp	x9, x10
  4044d8:	b.hi	4044f0 <wcrtomb@plt+0x1b30>  // b.pmore
  4044dc:	sub	x1, x29, #0x20
  4044e0:	mov	x0, x26
  4044e4:	bl	41283c <wcrtomb@plt+0xfe7c>
  4044e8:	ldp	x9, x8, [x27, #136]
  4044ec:	mov	x26, x0
  4044f0:	add	x0, x26, x8
  4044f4:	mvn	x8, x8
  4044f8:	add	x2, x9, x8
  4044fc:	mov	w1, #0x1                   	// #1
  404500:	mov	x3, x28
  404504:	bl	402710 <fread_unlocked@plt>
  404508:	cbz	x0, 40451c <wcrtomb@plt+0x1b5c>
  40450c:	ldr	x8, [x27, #144]
  404510:	add	x8, x8, x0
  404514:	str	x8, [x27, #144]
  404518:	b	4044cc <wcrtomb@plt+0x1b0c>
  40451c:	str	x26, [x27, #152]
  404520:	bl	402930 <__errno_location@plt>
  404524:	ldr	w8, [x0]
  404528:	mov	x0, x28
  40452c:	str	w8, [sp, #4]
  404530:	bl	4023f0 <ferror_unlocked@plt>
  404534:	cbnz	w0, 404f78 <wcrtomb@plt+0x25b8>
  404538:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40453c:	ldr	x8, [x8, #1136]
  404540:	cmp	x28, x8
  404544:	b.eq	404550 <wcrtomb@plt+0x1b90>  // b.none
  404548:	mov	x0, x28
  40454c:	bl	402480 <fclose@plt>
  404550:	ldr	x8, [x27, #144]
  404554:	ldr	x9, [sp, #16]
  404558:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40455c:	cmp	x22, x8
  404560:	b.eq	404590 <wcrtomb@plt+0x1bd0>  // b.none
  404564:	add	x9, x8, x26
  404568:	ldurb	w9, [x9, #-1]
  40456c:	cmp	w9, #0xa
  404570:	b.ne	40457c <wcrtomb@plt+0x1bbc>  // b.any
  404574:	mov	x9, x8
  404578:	b	404590 <wcrtomb@plt+0x1bd0>
  40457c:	add	x9, x8, #0x1
  404580:	mov	w10, #0xa                   	// #10
  404584:	str	x9, [x27, #144]
  404588:	strb	w10, [x26, x8]
  40458c:	ldr	x9, [x27, #144]
  404590:	ldr	x2, [x11, #1112]
  404594:	add	x0, x26, x22
  404598:	sub	x1, x9, x22
  40459c:	bl	405100 <wcrtomb@plt+0x2740>
  4045a0:	b	403d6c <wcrtomb@plt+0x13ac>
  4045a4:	mov	w8, #0x1                   	// #1
  4045a8:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4045ac:	str	w8, [x9, #1216]
  4045b0:	b	403d6c <wcrtomb@plt+0x13ac>
  4045b4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4045b8:	str	wzr, [x8, #1240]
  4045bc:	b	403d6c <wcrtomb@plt+0x13ac>
  4045c0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4045c4:	ldrb	w8, [x8, #1221]
  4045c8:	cmp	w8, #0x1
  4045cc:	b.ne	40461c <wcrtomb@plt+0x1c5c>  // b.any
  4045d0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4045d4:	ldr	x19, [x8, #1128]
  4045d8:	bl	40f784 <wcrtomb@plt+0xcdc4>
  4045dc:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4045e0:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4045e4:	mov	x1, x0
  4045e8:	add	x2, x2, #0x9b3
  4045ec:	add	x3, x3, #0x9bc
  4045f0:	mov	x0, x19
  4045f4:	mov	x4, xzr
  4045f8:	bl	412628 <wcrtomb@plt+0xfc68>
  4045fc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404600:	add	x1, x1, #0x9c0
  404604:	mov	w2, #0x5                   	// #5
  404608:	mov	x0, xzr
  40460c:	bl	402890 <dcgettext@plt>
  404610:	bl	402700 <puts@plt>
  404614:	mov	w0, wzr
  404618:	b	404edc <wcrtomb@plt+0x251c>
  40461c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404620:	ldr	w8, [x8, #1244]
  404624:	cbnz	w8, 404f88 <wcrtomb@plt+0x25c8>
  404628:	ldr	x8, [x27, #152]
  40462c:	cbz	x8, 404644 <wcrtomb@plt+0x1c84>
  404630:	ldr	x8, [x27, #144]
  404634:	cbz	x8, 40469c <wcrtomb@plt+0x1cdc>
  404638:	sub	x8, x8, #0x1
  40463c:	str	x8, [x27, #144]
  404640:	b	4046bc <wcrtomb@plt+0x1cfc>
  404644:	ldrsw	x22, [x25, #1120]
  404648:	cmp	w22, w20
  40464c:	b.ge	404f04 <wcrtomb@plt+0x2544>  // b.tcont
  404650:	ldr	x21, [x19, x22, lsl #3]
  404654:	mov	x0, x21
  404658:	bl	402380 <strlen@plt>
  40465c:	str	x0, [x27, #144]
  404660:	add	w8, w22, #0x1
  404664:	add	x1, x0, #0x1
  404668:	mov	x0, x21
  40466c:	str	w8, [x25, #1120]
  404670:	bl	4128bc <wcrtomb@plt+0xfefc>
  404674:	ldr	x1, [x27, #144]
  404678:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40467c:	add	x2, x2, #0x7ad
  404680:	str	x0, [x27, #152]
  404684:	bl	405100 <wcrtomb@plt+0x2740>
  404688:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40468c:	ldr	x9, [x8, #1296]
  404690:	add	x9, x9, #0x1
  404694:	str	x9, [x8, #1296]
  404698:	b	4046bc <wcrtomb@plt+0x1cfc>
  40469c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046a0:	ldrb	w9, [x8, #1236]
  4046a4:	adrp	x10, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4046a8:	adrp	x11, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4046ac:	strb	wzr, [x10, #3548]
  4046b0:	eor	w9, w9, #0x1
  4046b4:	strb	w9, [x8, #1236]
  4046b8:	strb	wzr, [x11, #3549]
  4046bc:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046c0:	ldrb	w8, [x21, #1229]
  4046c4:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046c8:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046cc:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046d0:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4046d4:	tbz	w8, #0, 4046e0 <wcrtomb@plt+0x1d20>
  4046d8:	mov	w8, wzr
  4046dc:	b	404700 <wcrtomb@plt+0x1d40>
  4046e0:	add	x1, sp, #0xa8
  4046e4:	mov	w0, #0x1                   	// #1
  4046e8:	bl	420f78 <_obstack_memory_used@@Base+0xbf44>
  4046ec:	cbz	w0, 4047fc <wcrtomb@plt+0x1e3c>
  4046f0:	mov	w8, wzr
  4046f4:	ldrb	w9, [x21, #1229]
  4046f8:	cmp	w9, #0x1
  4046fc:	b.ne	4047cc <wcrtomb@plt+0x1e0c>  // b.any
  404700:	mov	w9, wzr
  404704:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404708:	str	wzr, [x10, #1224]
  40470c:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404710:	adrp	x13, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404714:	mov	w11, #0x1                   	// #1
  404718:	mov	w10, wzr
  40471c:	strb	wzr, [x12, #1223]
  404720:	strb	w11, [x13, #1436]
  404724:	ldr	x12, [x24, #1200]
  404728:	orr	w10, w11, w10
  40472c:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404730:	strb	w10, [x11, #1440]
  404734:	tbz	x12, #63, 404740 <wcrtomb@plt+0x1d80>
  404738:	ldr	x10, [x27, #128]
  40473c:	str	x10, [x24, #1200]
  404740:	ldr	x10, [x23, #1192]
  404744:	tbz	x10, #63, 404750 <wcrtomb@plt+0x1d90>
  404748:	ldr	x10, [x27, #128]
  40474c:	str	x10, [x23, #1192]
  404750:	ldr	x10, [x22, #1184]
  404754:	cbz	x10, 404798 <wcrtomb@plt+0x1dd8>
  404758:	cmp	w9, #0x2
  40475c:	b.eq	4047a0 <wcrtomb@plt+0x1de0>  // b.none
  404760:	ldr	x9, [x27, #144]
  404764:	cbnz	x9, 4047a0 <wcrtomb@plt+0x1de0>
  404768:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40476c:	ldrb	w9, [x9, #1236]
  404770:	cbz	w9, 4047a0 <wcrtomb@plt+0x1de0>
  404774:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404778:	adrp	x10, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40477c:	ldrb	w9, [x9, #3549]
  404780:	ldrb	w10, [x10, #3548]
  404784:	orr	w9, w10, w9
  404788:	tst	w9, #0xff
  40478c:	b.ne	4047a0 <wcrtomb@plt+0x1de0>  // b.any
  404790:	mov	w0, #0x1                   	// #1
  404794:	b	404edc <wcrtomb@plt+0x251c>
  404798:	cmp	w9, #0x2
  40479c:	b.ne	404790 <wcrtomb@plt+0x1dd0>  // b.any
  4047a0:	ldr	w9, [x25, #1240]
  4047a4:	cmp	w9, #0x2
  4047a8:	b.ne	404880 <wcrtomb@plt+0x1ec0>  // b.any
  4047ac:	cbz	w8, 40487c <wcrtomb@plt+0x1ebc>
  4047b0:	bl	412e38 <wcrtomb@plt+0x10478>
  4047b4:	cbz	w0, 404878 <wcrtomb@plt+0x1eb8>
  4047b8:	mov	w0, #0x1                   	// #1
  4047bc:	bl	402830 <isatty@plt>
  4047c0:	cmp	w0, #0x0
  4047c4:	cset	w8, ne  // ne = any
  4047c8:	b	40487c <wcrtomb@plt+0x1ebc>
  4047cc:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4047d0:	ldrb	w10, [x9, #1432]
  4047d4:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4047d8:	ldr	w9, [x9, #1224]
  4047dc:	tbnz	w10, #0, 40470c <wcrtomb@plt+0x1d4c>
  4047e0:	cbnz	w9, 40470c <wcrtomb@plt+0x1d4c>
  4047e4:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4047e8:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4047ec:	ldrb	w10, [x9, #1223]
  4047f0:	ldrb	w11, [x11, #1436]
  4047f4:	mov	w9, wzr
  4047f8:	b	404724 <wcrtomb@plt+0x1d64>
  4047fc:	ldr	w8, [sp, #184]
  404800:	and	w8, w8, #0xf000
  404804:	cmp	w8, #0x2, lsl #12
  404808:	b.eq	40482c <wcrtomb@plt+0x1e6c>  // b.none
  40480c:	cmp	w8, #0x8, lsl #12
  404810:	b.ne	4046f0 <wcrtomb@plt+0x1d30>  // b.any
  404814:	adrp	x0, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404818:	add	x0, x0, #0x518
  40481c:	add	x1, sp, #0xa8
  404820:	mov	w2, #0x80                  	// #128
  404824:	bl	402320 <memcpy@plt>
  404828:	b	4046f0 <wcrtomb@plt+0x1d30>
  40482c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404830:	add	x0, x0, #0xa1d
  404834:	add	x1, sp, #0x28
  404838:	bl	420f68 <_obstack_memory_used@@Base+0xbf34>
  40483c:	cbnz	w0, 404870 <wcrtomb@plt+0x1eb0>
  404840:	ldr	x8, [x27, #8]
  404844:	ldr	x9, [sp, #48]
  404848:	cmp	x8, x9
  40484c:	b.ne	404870 <wcrtomb@plt+0x1eb0>  // b.any
  404850:	ldr	x8, [x27]
  404854:	ldr	x9, [sp, #40]
  404858:	cmp	x8, x9
  40485c:	mov	w8, #0x1                   	// #1
  404860:	b.ne	4046f4 <wcrtomb@plt+0x1d34>  // b.any
  404864:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404868:	strb	w8, [x9, #1432]
  40486c:	b	4046f0 <wcrtomb@plt+0x1d30>
  404870:	mov	w8, #0x1                   	// #1
  404874:	b	4046f4 <wcrtomb@plt+0x1d34>
  404878:	mov	w8, wzr
  40487c:	str	w8, [x25, #1240]
  404880:	bl	412e6c <wcrtomb@plt+0x104ac>
  404884:	ldr	w8, [x25, #1240]
  404888:	cbz	w8, 404984 <wcrtomb@plt+0x1fc4>
  40488c:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404890:	add	x0, x0, #0xa27
  404894:	bl	402950 <getenv@plt>
  404898:	cbz	x0, 4048b4 <wcrtomb@plt+0x1ef4>
  40489c:	ldrb	w8, [x0]
  4048a0:	cbz	w8, 4048b4 <wcrtomb@plt+0x1ef4>
  4048a4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4048a8:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4048ac:	str	x0, [x8, #896]
  4048b0:	str	x0, [x9, #904]
  4048b4:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4048b8:	add	x0, x0, #0xcb0
  4048bc:	bl	402950 <getenv@plt>
  4048c0:	cbz	x0, 404984 <wcrtomb@plt+0x1fc4>
  4048c4:	ldrb	w8, [x0]
  4048c8:	cbz	w8, 404984 <wcrtomb@plt+0x1fc4>
  4048cc:	bl	4128ec <wcrtomb@plt+0xff2c>
  4048d0:	adrp	x25, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4048d4:	adrp	x22, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4048d8:	mov	x23, x0
  4048dc:	add	x25, x25, #0x8c0
  4048e0:	add	x22, x22, #0xcbc
  4048e4:	mov	x28, xzr
  4048e8:	mov	x24, x23
  4048ec:	ldrb	w26, [x23]
  4048f0:	cbz	w26, 40493c <wcrtomb@plt+0x1f7c>
  4048f4:	cmp	w26, #0x3d
  4048f8:	b.eq	404924 <wcrtomb@plt+0x1f64>  // b.none
  4048fc:	cmp	w26, #0x3a
  404900:	b.eq	40493c <wcrtomb@plt+0x1f7c>  // b.none
  404904:	cbz	x28, 40491c <wcrtomb@plt+0x1f5c>
  404908:	cmp	w26, #0x3b
  40490c:	b.eq	40491c <wcrtomb@plt+0x1f5c>  // b.none
  404910:	sub	w8, w26, #0x30
  404914:	cmp	w8, #0x9
  404918:	b.hi	404984 <wcrtomb@plt+0x1fc4>  // b.pmore
  40491c:	add	x23, x23, #0x1
  404920:	b	4048ec <wcrtomb@plt+0x1f2c>
  404924:	cbnz	x28, 404984 <wcrtomb@plt+0x1fc4>
  404928:	cmp	x24, x23
  40492c:	b.eq	404984 <wcrtomb@plt+0x1fc4>  // b.none
  404930:	strb	wzr, [x23], #1
  404934:	mov	x28, x23
  404938:	b	4048ec <wcrtomb@plt+0x1f2c>
  40493c:	strb	wzr, [x23], #1
  404940:	mov	x0, x22
  404944:	mov	x21, x25
  404948:	mov	x1, x24
  40494c:	bl	402750 <strcmp@plt>
  404950:	cbz	w0, 404964 <wcrtomb@plt+0x1fa4>
  404954:	ldr	x0, [x21, #24]!
  404958:	cbnz	x0, 404948 <wcrtomb@plt+0x1f88>
  40495c:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xbfcc>
  404960:	add	x21, x21, #0x9c8
  404964:	cbz	x28, 404974 <wcrtomb@plt+0x1fb4>
  404968:	ldr	x8, [x21, #8]
  40496c:	cbz	x8, 404974 <wcrtomb@plt+0x1fb4>
  404970:	str	x28, [x8]
  404974:	ldr	x8, [x21, #16]
  404978:	cbz	x8, 404980 <wcrtomb@plt+0x1fc0>
  40497c:	blr	x8
  404980:	cbnz	w26, 4048e4 <wcrtomb@plt+0x1f24>
  404984:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404988:	mov	w8, wzr
  40498c:	mov	w9, #0x1                   	// #1
  404990:	mov	w10, #0x1                   	// #1
  404994:	add	x25, x25, #0x8d8
  404998:	and	w11, w8, w9
  40499c:	tst	w11, #0xff
  4049a0:	b.ne	4049cc <wcrtomb@plt+0x200c>  // b.any
  4049a4:	add	x11, x25, x9
  4049a8:	ldrb	w11, [x11, #3]
  4049ac:	cmp	w11, #0x1
  4049b0:	b.eq	4049cc <wcrtomb@plt+0x200c>  // b.none
  4049b4:	mov	w11, w10
  4049b8:	lsl	w10, w10, #1
  4049bc:	cmp	x9, w10, sxtw
  4049c0:	b.ge	4049b4 <wcrtomb@plt+0x1ff4>  // b.tcont
  4049c4:	orr	w8, w8, w11
  4049c8:	b	4049d0 <wcrtomb@plt+0x2010>
  4049cc:	mov	w11, w10
  4049d0:	add	x9, x9, #0x1
  4049d4:	cmp	x9, #0x100
  4049d8:	mov	w10, w11
  4049dc:	b.ne	404998 <wcrtomb@plt+0x1fd8>  // b.any
  4049e0:	ldr	w11, [sp, #32]
  4049e4:	and	x8, x8, #0xff
  4049e8:	mov	x9, #0x101010101010101     	// #72340172838076673
  4049ec:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4049f0:	bic	w24, w11, w11, asr #31
  4049f4:	mul	x8, x8, x9
  4049f8:	cmp	w24, #0x2
  4049fc:	str	x8, [x10, #1512]
  404a00:	b.ne	404aa0 <wcrtomb@plt+0x20e0>  // b.any
  404a04:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404a08:	ldrb	w8, [x8, #2264]
  404a0c:	cbz	w8, 404c60 <wcrtomb@plt+0x22a0>
  404a10:	ldp	x22, x21, [x27, #144]
  404a14:	str	xzr, [sp, #40]
  404a18:	cbz	x22, 404a5c <wcrtomb@plt+0x209c>
  404a1c:	mov	x23, xzr
  404a20:	add	x8, x21, x23
  404a24:	ldrb	w9, [x8]
  404a28:	add	x9, x25, x9
  404a2c:	ldrsb	x0, [x9, #3]
  404a30:	cmn	x0, #0x2
  404a34:	b.ne	404a48 <wcrtomb@plt+0x2088>  // b.any
  404a38:	sub	x1, x22, x23
  404a3c:	add	x2, sp, #0x28
  404a40:	mov	x0, x8
  404a44:	bl	414c80 <wcrtomb@plt+0x122c0>
  404a48:	cmn	x0, #0x2
  404a4c:	b.cs	404a94 <wcrtomb@plt+0x20d4>  // b.hs, b.nlast
  404a50:	add	x23, x0, x23
  404a54:	cmp	x23, x22
  404a58:	b.cc	404a20 <wcrtomb@plt+0x2060>  // b.lo, b.ul, b.last
  404a5c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404a60:	ldrb	w8, [x8, #3550]
  404a64:	cbz	w8, 404aa0 <wcrtomb@plt+0x20e0>
  404a68:	ldr	x23, [x27, #144]
  404a6c:	mov	x22, xzr
  404a70:	str	xzr, [sp, #40]
  404a74:	subs	x1, x23, x22
  404a78:	b.ls	404aa0 <wcrtomb@plt+0x20e0>  // b.plast
  404a7c:	add	x0, x21, x22
  404a80:	add	x2, sp, #0x28
  404a84:	bl	405248 <wcrtomb@plt+0x2888>
  404a88:	bic	w8, w0, w0, asr #31
  404a8c:	add	x22, x22, x8
  404a90:	tbz	w0, #31, 404a74 <wcrtomb@plt+0x20b4>
  404a94:	ldr	w25, [sp, #24]
  404a98:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404a9c:	b	404c88 <wcrtomb@plt+0x22c8>
  404aa0:	cmp	w24, #0x1
  404aa4:	b.hi	404c9c <wcrtomb@plt+0x22dc>  // b.pmore
  404aa8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404aac:	ldr	x8, [x8, #1296]
  404ab0:	cmp	x8, #0x2
  404ab4:	b.cc	404c9c <wcrtomb@plt+0x22dc>  // b.lo, b.ul, b.last
  404ab8:	ldp	x22, x8, [x27, #144]
  404abc:	add	x0, x22, #0x1
  404ac0:	str	x8, [sp, #16]
  404ac4:	bl	412738 <wcrtomb@plt+0xfd78>
  404ac8:	mov	x23, x0
  404acc:	mov	x26, x0
  404ad0:	str	xzr, [sp, #40]
  404ad4:	cbz	x22, 404ca8 <wcrtomb@plt+0x22e8>
  404ad8:	ldr	x21, [sp, #16]
  404adc:	mov	x26, x23
  404ae0:	ldrb	w8, [x21]
  404ae4:	sub	w9, w8, #0x24
  404ae8:	cmp	w9, #0x3a
  404aec:	b.hi	404ba8 <wcrtomb@plt+0x21e8>  // b.pmore
  404af0:	mov	w10, #0x1                   	// #1
  404af4:	mov	w11, #0x90                  	// #144
  404af8:	lsl	x10, x10, x9
  404afc:	movk	w11, #0x800, lsl #16
  404b00:	tst	x10, x11
  404b04:	b.ne	404bb4 <wcrtomb@plt+0x21f4>  // b.any
  404b08:	cmp	x9, #0x38
  404b0c:	b.ne	404b90 <wcrtomb@plt+0x21d0>  // b.any
  404b10:	cmp	x22, #0x2
  404b14:	b.cc	404c38 <wcrtomb@plt+0x2278>  // b.lo, b.ul, b.last
  404b18:	ldrb	w8, [x21, #1]!
  404b1c:	sub	w9, w8, #0xa
  404b20:	cmp	w9, #0x38
  404b24:	b.hi	404b60 <wcrtomb@plt+0x21a0>  // b.pmore
  404b28:	mov	x11, #0x40000000            	// #1073741824
  404b2c:	mov	w10, #0x1                   	// #1
  404b30:	movk	x11, #0x2, lsl #32
  404b34:	lsl	x10, x10, x9
  404b38:	movk	x11, #0x20, lsl #48
  404b3c:	tst	x10, x11
  404b40:	b.ne	404b7c <wcrtomb@plt+0x21bc>  // b.any
  404b44:	mov	w10, #0x1                   	// #1
  404b48:	lsl	x9, x10, x9
  404b4c:	mov	x10, #0xffffff8000000001    	// #-549755813887
  404b50:	movk	x10, #0x2000, lsl #16
  404b54:	movk	x10, #0x114, lsl #48
  404b58:	tst	x9, x10
  404b5c:	b.ne	404ccc <wcrtomb@plt+0x230c>  // b.any
  404b60:	sub	w9, w8, #0x53
  404b64:	cmp	w9, #0x29
  404b68:	b.hi	404b88 <wcrtomb@plt+0x21c8>  // b.pmore
  404b6c:	mov	w10, #0x1                   	// #1
  404b70:	lsl	x10, x10, x9
  404b74:	tst	x10, #0x30000000000
  404b78:	b.eq	404c44 <wcrtomb@plt+0x2284>  // b.none
  404b7c:	ldr	w9, [sp, #32]
  404b80:	cmp	w9, #0x1
  404b84:	b.lt	404efc <wcrtomb@plt+0x253c>  // b.tstop
  404b88:	sub	x22, x22, #0x1
  404b8c:	b	404bc0 <wcrtomb@plt+0x2200>
  404b90:	mov	w10, #0x1                   	// #1
  404b94:	lsl	x9, x10, x9
  404b98:	mov	x10, #0x441                 	// #1089
  404b9c:	movk	x10, #0x480, lsl #48
  404ba0:	tst	x9, x10
  404ba4:	b.ne	404ccc <wcrtomb@plt+0x230c>  // b.any
  404ba8:	sub	w9, w8, #0x7b
  404bac:	cmp	w9, #0x2
  404bb0:	b.cs	404bc0 <wcrtomb@plt+0x2200>  // b.hs, b.nlast
  404bb4:	ldr	w9, [sp, #32]
  404bb8:	cmp	w9, #0x1
  404bbc:	b.ge	404ccc <wcrtomb@plt+0x230c>  // b.tcont
  404bc0:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404bc4:	ldrb	w9, [x9, #3550]
  404bc8:	cbz	w9, 404be8 <wcrtomb@plt+0x2228>
  404bcc:	add	x2, sp, #0x28
  404bd0:	mov	x0, x21
  404bd4:	mov	x1, x22
  404bd8:	bl	405248 <wcrtomb@plt+0x2888>
  404bdc:	tbnz	w0, #31, 404ccc <wcrtomb@plt+0x230c>
  404be0:	sxtw	x28, w0
  404be4:	b	404c14 <wcrtomb@plt+0x2254>
  404be8:	add	x8, x25, x8
  404bec:	ldrsb	x28, [x8, #3]
  404bf0:	cmn	x28, #0x2
  404bf4:	b.ne	404c0c <wcrtomb@plt+0x224c>  // b.any
  404bf8:	add	x2, sp, #0x28
  404bfc:	mov	x0, x21
  404c00:	mov	x1, x22
  404c04:	bl	414c80 <wcrtomb@plt+0x122c0>
  404c08:	mov	x28, x0
  404c0c:	cmp	x28, #0x10
  404c10:	b.hi	404ccc <wcrtomb@plt+0x230c>  // b.pmore
  404c14:	mov	x0, x26
  404c18:	mov	x1, x21
  404c1c:	mov	x2, x28
  404c20:	bl	402320 <memcpy@plt>
  404c24:	add	x26, x26, x28
  404c28:	subs	x22, x22, x28
  404c2c:	add	x21, x21, x28
  404c30:	b.ne	404ae0 <wcrtomb@plt+0x2120>  // b.any
  404c34:	b	404ca8 <wcrtomb@plt+0x22e8>
  404c38:	mov	w8, #0x5c                  	// #92
  404c3c:	mov	w22, #0x1                   	// #1
  404c40:	b	404bc0 <wcrtomb@plt+0x2200>
  404c44:	mov	w10, #0x1                   	// #1
  404c48:	lsl	x9, x10, x9
  404c4c:	mov	x10, #0xa011                	// #40977
  404c50:	movk	x10, #0x11, lsl #32
  404c54:	tst	x9, x10
  404c58:	b.eq	404b88 <wcrtomb@plt+0x21c8>  // b.none
  404c5c:	b	404ccc <wcrtomb@plt+0x230c>
  404c60:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404c64:	ldr	x8, [x8, #1296]
  404c68:	mov	w24, #0x2                   	// #2
  404c6c:	cmp	x8, #0x1
  404c70:	b.ne	404c9c <wcrtomb@plt+0x22dc>  // b.any
  404c74:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404c78:	ldrb	w8, [x8, #3548]
  404c7c:	ldr	w25, [sp, #24]
  404c80:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404c84:	cbz	w8, 404cdc <wcrtomb@plt+0x231c>
  404c88:	sub	x0, x29, #0x10
  404c8c:	sub	x1, x29, #0x18
  404c90:	bl	403944 <wcrtomb@plt+0xf84>
  404c94:	mov	w24, wzr
  404c98:	b	404cdc <wcrtomb@plt+0x231c>
  404c9c:	ldr	w25, [sp, #24]
  404ca0:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404ca4:	b	404cdc <wcrtomb@plt+0x231c>
  404ca8:	ldr	x8, [x27, #144]
  404cac:	sub	x2, x26, x23
  404cb0:	cmp	x8, x2
  404cb4:	b.eq	404cc8 <wcrtomb@plt+0x2308>  // b.none
  404cb8:	ldr	x0, [sp, #16]
  404cbc:	mov	x1, x23
  404cc0:	str	x2, [x27, #144]
  404cc4:	bl	402320 <memcpy@plt>
  404cc8:	mov	w24, #0x2                   	// #2
  404ccc:	ldr	w25, [sp, #24]
  404cd0:	mov	x0, x23
  404cd4:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404cd8:	bl	402770 <free@plt>
  404cdc:	adrp	x9, 421000 <_obstack_memory_used@@Base+0xbfcc>
  404ce0:	sxtw	x8, w24
  404ce4:	add	x9, x9, #0x138
  404ce8:	add	x8, x9, x8, lsl #5
  404cec:	ldp	x10, x9, [x8, #16]
  404cf0:	ldp	x1, x0, [x27, #144]
  404cf4:	ldrsw	x2, [x8, #12]
  404cf8:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404cfc:	str	x9, [x21, #1448]
  404d00:	blr	x10
  404d04:	adrp	x10, 439000 <__progname@@GLIBC_2.17+0x3b88>
  404d08:	ldrb	w10, [x10, #2260]
  404d0c:	ldr	x11, [x21, #1448]
  404d10:	add	x9, sp, #0x24
  404d14:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d18:	orr	x1, x9, #0x1
  404d1c:	add	x3, sp, #0x28
  404d20:	mov	w2, #0x1                   	// #1
  404d24:	mov	x4, xzr
  404d28:	strb	wzr, [sp, #36]
  404d2c:	str	x0, [x8, #1456]
  404d30:	strb	w10, [sp, #37]
  404d34:	strb	wzr, [sp, #38]
  404d38:	blr	x11
  404d3c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d40:	ldrb	w8, [x8, #1236]
  404d44:	ldr	w10, [x22, #1120]
  404d48:	cmp	x0, #0x0
  404d4c:	cset	w11, eq  // eq = none
  404d50:	eor	w8, w8, w11
  404d54:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d58:	eor	w8, w8, #0x1
  404d5c:	sub	w20, w20, w10
  404d60:	strb	w8, [x9, #1464]
  404d64:	cbnz	w25, 404d84 <wcrtomb@plt+0x23c4>
  404d68:	cmp	w20, #0x1
  404d6c:	b.gt	404d84 <wcrtomb@plt+0x23c4>
  404d70:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d74:	ldr	w8, [x8, #880]
  404d78:	cmp	w8, #0x3
  404d7c:	csetm	w8, eq  // eq = none
  404d80:	b	404d8c <wcrtomb@plt+0x23cc>
  404d84:	mvn	w8, w25
  404d88:	lsr	w8, w8, #31
  404d8c:	ldr	x21, [sp, #8]
  404d90:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d94:	mov	w0, #0x1e                  	// #30
  404d98:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404d9c:	str	w8, [x9, #1468]
  404da0:	bl	402840 <sysconf@plt>
  404da4:	cmp	x0, #0x1
  404da8:	b.lt	404f90 <wcrtomb@plt+0x25d0>  // b.tstop
  404dac:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
  404db0:	cmp	x0, x8
  404db4:	b.cs	404f90 <wcrtomb@plt+0x25d0>  // b.hs, b.nlast
  404db8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404dbc:	mov	w9, #0x18000               	// #98304
  404dc0:	str	x0, [x8, #1472]
  404dc4:	udiv	x8, x9, x0
  404dc8:	msub	x8, x8, x0, x9
  404dcc:	sub	x10, x0, x8
  404dd0:	cmp	x8, #0x0
  404dd4:	add	x8, x10, #0x18, lsl #12
  404dd8:	csel	x8, x9, x8, eq  // eq = none
  404ddc:	add	x8, x0, x8
  404de0:	add	x0, x8, #0x8
  404de4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404de8:	str	x0, [x8, #1480]
  404dec:	bl	412738 <wcrtomb@plt+0xfd78>
  404df0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404df4:	ldrb	w8, [x8, #1232]
  404df8:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404dfc:	str	x0, [x9, #1488]
  404e00:	cmp	w8, #0x1
  404e04:	b.ne	404e1c <wcrtomb@plt+0x245c>  // b.any
  404e08:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404e0c:	ldr	w9, [x8, #1212]
  404e10:	cbnz	w9, 404e1c <wcrtomb@plt+0x245c>
  404e14:	mov	w9, #0x1                   	// #1
  404e18:	str	w9, [x8, #1212]
  404e1c:	cmp	w20, #0x1
  404e20:	b.lt	404e30 <wcrtomb@plt+0x2470>  // b.tstop
  404e24:	ldrsw	x8, [x22, #1120]
  404e28:	add	x21, x19, x8, lsl #3
  404e2c:	b	404e68 <wcrtomb@plt+0x24a8>
  404e30:	ldr	w8, [sp, #28]
  404e34:	cmp	w21, w8
  404e38:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xbfcc>
  404e3c:	add	x21, x21, #0x208
  404e40:	b.ge	404e68 <wcrtomb@plt+0x24a8>  // b.tcont
  404e44:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404e48:	ldr	w8, [x8, #880]
  404e4c:	cmp	w8, #0x3
  404e50:	b.ne	404e68 <wcrtomb@plt+0x24a8>  // b.any
  404e54:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xbfcc>
  404e58:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404e5c:	mov	w9, #0x1                   	// #1
  404e60:	add	x21, x21, #0x1f8
  404e64:	strb	w9, [x8, #1496]
  404e68:	ldr	x20, [x21], #8
  404e6c:	adrp	x19, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404e70:	mov	w22, #0x1                   	// #1
  404e74:	add	x19, x19, #0x95a
  404e78:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404e7c:	mov	x0, x20
  404e80:	mov	x1, x19
  404e84:	bl	402750 <strcmp@plt>
  404e88:	cbz	w0, 404ea8 <wcrtomb@plt+0x24e8>
  404e8c:	mov	w0, #0xffffff9c            	// #-100
  404e90:	mov	w2, #0x1                   	// #1
  404e94:	mov	w3, #0x1                   	// #1
  404e98:	mov	x1, x20
  404e9c:	str	x20, [x23, #1520]
  404ea0:	bl	4060f4 <wcrtomb@plt+0x3734>
  404ea4:	b	404eb8 <wcrtomb@plt+0x24f8>
  404ea8:	ldr	x8, [x24, #1288]
  404eac:	mov	w1, #0x1                   	// #1
  404eb0:	str	x8, [x23, #1520]
  404eb4:	bl	4052f4 <wcrtomb@plt+0x2934>
  404eb8:	ldr	x20, [x21], #8
  404ebc:	and	w22, w22, w0
  404ec0:	cbnz	x20, 404e7c <wcrtomb@plt+0x24bc>
  404ec4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404ec8:	ldrb	w8, [x8, #1497]
  404ecc:	and	w9, w22, #0x1
  404ed0:	cmp	w8, #0x0
  404ed4:	mov	w8, #0x2                   	// #2
  404ed8:	csel	w0, w8, w9, ne  // ne = any
  404edc:	ldp	x20, x19, [sp, #416]
  404ee0:	ldp	x22, x21, [sp, #400]
  404ee4:	ldp	x24, x23, [sp, #384]
  404ee8:	ldp	x26, x25, [sp, #368]
  404eec:	ldp	x28, x27, [sp, #352]
  404ef0:	ldp	x29, x30, [sp, #336]
  404ef4:	add	sp, sp, #0x1b0
  404ef8:	ret
  404efc:	mov	w24, wzr
  404f00:	b	404ccc <wcrtomb@plt+0x230c>
  404f04:	mov	w0, #0x2                   	// #2
  404f08:	bl	403748 <wcrtomb@plt+0xd88>
  404f0c:	bl	402930 <__errno_location@plt>
  404f10:	ldr	w1, [x0]
  404f14:	ldr	x3, [x26, #1112]
  404f18:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404f1c:	add	x2, x2, #0xe07
  404f20:	mov	w0, #0x2                   	// #2
  404f24:	bl	4023b0 <error@plt>
  404f28:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404f2c:	add	x1, x1, #0x95c
  404f30:	b	404f48 <wcrtomb@plt+0x2588>
  404f34:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404f38:	add	x1, x1, #0x924
  404f3c:	b	404f48 <wcrtomb@plt+0x2588>
  404f40:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404f44:	add	x1, x1, #0x975
  404f48:	mov	w2, #0x5                   	// #5
  404f4c:	mov	x0, xzr
  404f50:	bl	402890 <dcgettext@plt>
  404f54:	mov	x2, x0
  404f58:	mov	w0, #0x2                   	// #2
  404f5c:	mov	w1, wzr
  404f60:	bl	4023b0 <error@plt>
  404f64:	bl	402930 <__errno_location@plt>
  404f68:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404f6c:	ldr	w1, [x0]
  404f70:	ldr	x3, [x8, #1112]
  404f74:	b	404f18 <wcrtomb@plt+0x2558>
  404f78:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404f7c:	ldr	x3, [x8, #1112]
  404f80:	ldr	w1, [sp, #4]
  404f84:	b	404f18 <wcrtomb@plt+0x2558>
  404f88:	mov	w0, wzr
  404f8c:	bl	403748 <wcrtomb@plt+0xd88>
  404f90:	bl	4026c0 <abort@plt>
  404f94:	bl	412920 <wcrtomb@plt+0xff60>
  404f98:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  404f9c:	ldr	w8, [x8, #1500]
  404fa0:	cbz	w8, 404fa8 <wcrtomb@plt+0x25e8>
  404fa4:	ret
  404fa8:	b	4095f4 <wcrtomb@plt+0x6c34>
  404fac:	stp	x29, x30, [sp, #-32]!
  404fb0:	stp	x20, x19, [sp, #16]
  404fb4:	mov	x20, x1
  404fb8:	adrp	x4, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404fbc:	add	x4, x4, #0x7ad
  404fc0:	mov	w2, #0xa                   	// #10
  404fc4:	mov	x1, xzr
  404fc8:	mov	x3, x20
  404fcc:	mov	x29, sp
  404fd0:	mov	x19, x0
  404fd4:	bl	412964 <wcrtomb@plt+0xffa4>
  404fd8:	cmp	w0, #0x1
  404fdc:	b.hi	404ff4 <wcrtomb@plt+0x2634>  // b.pmore
  404fe0:	ldr	x8, [x20]
  404fe4:	tbnz	x8, #63, 404ff4 <wcrtomb@plt+0x2634>
  404fe8:	ldp	x20, x19, [sp, #16]
  404fec:	ldp	x29, x30, [sp], #32
  404ff0:	ret
  404ff4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  404ff8:	add	x1, x1, #0xc13
  404ffc:	mov	w2, #0x5                   	// #5
  405000:	mov	x0, xzr
  405004:	bl	402890 <dcgettext@plt>
  405008:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40500c:	mov	x4, x0
  405010:	add	x2, x2, #0xd26
  405014:	mov	w0, #0x2                   	// #2
  405018:	mov	w1, wzr
  40501c:	mov	x3, x19
  405020:	bl	4023b0 <error@plt>
  405024:	stp	x29, x30, [sp, #-64]!
  405028:	stp	x22, x21, [sp, #32]
  40502c:	adrp	x22, 421000 <_obstack_memory_used@@Base+0xbfcc>
  405030:	str	x23, [sp, #16]
  405034:	stp	x20, x19, [sp, #48]
  405038:	mov	w21, w1
  40503c:	mov	x19, x0
  405040:	mov	x20, xzr
  405044:	mov	w23, w1
  405048:	add	x22, x22, #0x138
  40504c:	mov	x29, sp
  405050:	mov	x0, x19
  405054:	mov	x1, x22
  405058:	bl	402750 <strcmp@plt>
  40505c:	cbz	w0, 4050a8 <wcrtomb@plt+0x26e8>
  405060:	add	x20, x20, #0x1
  405064:	cmp	x20, #0x6
  405068:	add	x22, x22, #0x20
  40506c:	b.ne	405050 <wcrtomb@plt+0x2690>  // b.any
  405070:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405074:	add	x1, x1, #0x947
  405078:	mov	x0, x19
  40507c:	bl	402750 <strcmp@plt>
  405080:	cbnz	w0, 4050cc <wcrtomb@plt+0x270c>
  405084:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405088:	add	x1, x1, #0xc52
  40508c:	mov	w2, #0x5                   	// #5
  405090:	mov	x0, xzr
  405094:	bl	402890 <dcgettext@plt>
  405098:	mov	x2, x0
  40509c:	mov	w0, #0x2                   	// #2
  4050a0:	mov	w1, wzr
  4050a4:	bl	4023b0 <error@plt>
  4050a8:	tbnz	w23, #31, 4050b4 <wcrtomb@plt+0x26f4>
  4050ac:	cmp	w21, w20
  4050b0:	b.ne	4050f4 <wcrtomb@plt+0x2734>  // b.any
  4050b4:	mov	w0, w20
  4050b8:	ldp	x20, x19, [sp, #48]
  4050bc:	ldp	x22, x21, [sp, #32]
  4050c0:	ldr	x23, [sp, #16]
  4050c4:	ldp	x29, x30, [sp], #64
  4050c8:	ret
  4050cc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4050d0:	add	x1, x1, #0xc8f
  4050d4:	mov	w2, #0x5                   	// #5
  4050d8:	mov	x0, xzr
  4050dc:	bl	402890 <dcgettext@plt>
  4050e0:	mov	x2, x0
  4050e4:	mov	w0, #0x2                   	// #2
  4050e8:	mov	w1, wzr
  4050ec:	mov	x3, x19
  4050f0:	bl	4023b0 <error@plt>
  4050f4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4050f8:	add	x1, x1, #0xc33
  4050fc:	b	40508c <wcrtomb@plt+0x26cc>
  405100:	stp	x29, x30, [sp, #-64]!
  405104:	stp	x22, x21, [sp, #32]
  405108:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40510c:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405110:	ldr	x9, [x8, #1504]
  405114:	ldr	x10, [x22, #1160]
  405118:	stp	x20, x19, [sp, #48]
  40511c:	mov	x21, x2
  405120:	mov	x19, x1
  405124:	cmp	x9, x10
  405128:	mov	x20, x0
  40512c:	stp	x24, x23, [sp, #16]
  405130:	mov	x29, sp
  405134:	b.ls	405144 <wcrtomb@plt+0x2784>  // b.plast
  405138:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40513c:	ldr	x0, [x8, #1168]
  405140:	b	405194 <wcrtomb@plt+0x27d4>
  405144:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405148:	ldr	x0, [x23, #1168]
  40514c:	cbz	x0, 40516c <wcrtomb@plt+0x27ac>
  405150:	mov	x10, #0x5555555555555555    	// #6148914691236517205
  405154:	movk	x10, #0x555, lsl #48
  405158:	cmp	x9, x10
  40515c:	b.cs	405178 <wcrtomb@plt+0x27b8>  // b.hs, b.nlast
  405160:	add	x9, x9, x9, lsr #1
  405164:	add	x9, x9, #0x1
  405168:	b	405180 <wcrtomb@plt+0x27c0>
  40516c:	cbz	x9, 40517c <wcrtomb@plt+0x27bc>
  405170:	lsr	x10, x9, #59
  405174:	cbz	x10, 405180 <wcrtomb@plt+0x27c0>
  405178:	bl	412920 <wcrtomb@plt+0xff60>
  40517c:	mov	w9, #0x8                   	// #8
  405180:	lsl	x1, x9, #4
  405184:	str	x9, [x8, #1504]
  405188:	bl	412788 <wcrtomb@plt+0xfdc8>
  40518c:	ldr	x10, [x22, #1160]
  405190:	str	x0, [x23, #1168]
  405194:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405198:	ldr	x24, [x23, #1296]
  40519c:	add	x8, x0, x10, lsl #4
  4051a0:	add	x9, x10, #0x1
  4051a4:	mov	w1, #0xa                   	// #10
  4051a8:	add	x10, x24, #0x1
  4051ac:	mov	x0, x20
  4051b0:	mov	x2, x19
  4051b4:	stp	x21, x10, [x8]
  4051b8:	str	x9, [x22, #1160]
  4051bc:	bl	402820 <memchr@plt>
  4051c0:	mov	x21, xzr
  4051c4:	cbz	x0, 4051e4 <wcrtomb@plt+0x2824>
  4051c8:	add	x19, x20, x19
  4051cc:	add	x0, x0, #0x1
  4051d0:	sub	x2, x19, x0
  4051d4:	mov	w1, #0xa                   	// #10
  4051d8:	add	x21, x21, #0x1
  4051dc:	bl	402820 <memchr@plt>
  4051e0:	cbnz	x0, 4051cc <wcrtomb@plt+0x280c>
  4051e4:	add	x8, x21, x24
  4051e8:	str	x8, [x23, #1296]
  4051ec:	ldp	x20, x19, [sp, #48]
  4051f0:	ldp	x22, x21, [sp, #32]
  4051f4:	ldp	x24, x23, [sp, #16]
  4051f8:	ldp	x29, x30, [sp], #64
  4051fc:	ret
  405200:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405204:	ldr	x8, [x8, #904]
  405208:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40520c:	str	x8, [x9, #896]
  405210:	ret
  405214:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405218:	mov	w9, #0xffffffff            	// #-1
  40521c:	str	w9, [x8, #1240]
  405220:	ret
  405224:	adrp	x9, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405228:	adrp	x11, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40522c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405230:	add	x9, x9, #0xcdd
  405234:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405238:	add	x11, x11, #0xce3
  40523c:	str	x9, [x8, #968]
  405240:	str	x11, [x10, #976]
  405244:	ret
  405248:	sub	sp, sp, #0xc0
  40524c:	stp	x29, x30, [sp, #144]
  405250:	stp	x22, x21, [sp, #160]
  405254:	stp	x20, x19, [sp, #176]
  405258:	ldrb	w8, [x0]
  40525c:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  405260:	add	x9, x9, #0x8d8
  405264:	add	x29, sp, #0x90
  405268:	add	x8, x9, x8
  40526c:	ldrsb	w19, [x8, #3]
  405270:	tbz	w19, #31, 4052dc <wcrtomb@plt+0x291c>
  405274:	mov	x20, x0
  405278:	mov	x3, x2
  40527c:	mov	x2, x1
  405280:	sub	x0, x29, #0x4
  405284:	mov	x1, x20
  405288:	bl	414ca4 <wcrtomb@plt+0x122e4>
  40528c:	cmp	x0, #0x10
  405290:	b.hi	4052d8 <wcrtomb@plt+0x2918>  // b.pmore
  405294:	mov	x19, x0
  405298:	ldur	w0, [x29, #-4]
  40529c:	add	x1, sp, #0xc
  4052a0:	bl	40eab8 <wcrtomb@plt+0xc0f8>
  4052a4:	cbnz	w0, 4052d8 <wcrtomb@plt+0x2918>
  4052a8:	sub	x20, x20, #0x1
  4052ac:	mov	x8, x19
  4052b0:	cmp	x8, #0x2
  4052b4:	b.lt	4052dc <wcrtomb@plt+0x291c>  // b.tstop
  4052b8:	ldrb	w21, [x20, x8]
  4052bc:	sub	x22, x8, #0x1
  4052c0:	bl	402620 <__ctype_toupper_loc@plt>
  4052c4:	ldr	x8, [x0]
  4052c8:	ldr	w8, [x8, x21, lsl #2]
  4052cc:	cmp	w8, w21
  4052d0:	mov	x8, x22
  4052d4:	b.eq	4052b0 <wcrtomb@plt+0x28f0>  // b.none
  4052d8:	mov	w19, #0xffffffff            	// #-1
  4052dc:	mov	w0, w19
  4052e0:	ldp	x20, x19, [sp, #176]
  4052e4:	ldp	x22, x21, [sp, #160]
  4052e8:	ldp	x29, x30, [sp, #144]
  4052ec:	add	sp, sp, #0xc0
  4052f0:	ret
  4052f4:	sub	sp, sp, #0x190
  4052f8:	stp	x20, x19, [sp, #384]
  4052fc:	mov	w20, w1
  405300:	add	x1, sp, #0x28
  405304:	stp	x29, x30, [sp, #304]
  405308:	stp	x28, x27, [sp, #320]
  40530c:	stp	x26, x25, [sp, #336]
  405310:	stp	x24, x23, [sp, #352]
  405314:	stp	x22, x21, [sp, #368]
  405318:	add	x29, sp, #0x130
  40531c:	mov	w19, w0
  405320:	bl	420f78 <_obstack_memory_used@@Base+0xbf44>
  405324:	cbz	w0, 405378 <wcrtomb@plt+0x29b8>
  405328:	bl	402930 <__errno_location@plt>
  40532c:	ldr	w0, [x0]
  405330:	bl	406188 <wcrtomb@plt+0x37c8>
  405334:	mov	w27, #0x1                   	// #1
  405338:	cbz	w19, 405354 <wcrtomb@plt+0x2994>
  40533c:	mov	w0, w19
  405340:	bl	402650 <close@plt>
  405344:	cbz	w0, 405354 <wcrtomb@plt+0x2994>
  405348:	bl	402930 <__errno_location@plt>
  40534c:	ldr	w0, [x0]
  405350:	bl	406188 <wcrtomb@plt+0x37c8>
  405354:	and	w0, w27, #0x1
  405358:	ldp	x20, x19, [sp, #384]
  40535c:	ldp	x22, x21, [sp, #368]
  405360:	ldp	x24, x23, [sp, #352]
  405364:	ldp	x26, x25, [sp, #336]
  405368:	ldp	x28, x27, [sp, #320]
  40536c:	ldp	x29, x30, [sp, #304]
  405370:	add	sp, sp, #0x190
  405374:	ret
  405378:	cbz	w19, 405424 <wcrtomb@plt+0x2a64>
  40537c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405380:	ldr	w8, [x8, #1212]
  405384:	cmp	w8, #0x2
  405388:	b.eq	405394 <wcrtomb@plt+0x29d4>  // b.none
  40538c:	cbnz	w8, 4053c8 <wcrtomb@plt+0x2a08>
  405390:	tbnz	w20, #0, 4053c8 <wcrtomb@plt+0x2a08>
  405394:	ldr	w8, [sp, #56]
  405398:	mov	w27, #0x1                   	// #1
  40539c:	and	w8, w8, #0xf000
  4053a0:	cmp	w8, #0x6, lsl #12
  4053a4:	b.ge	4053bc <wcrtomb@plt+0x29fc>  // b.tcont
  4053a8:	cmp	w8, #0x1, lsl #12
  4053ac:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4053b0:	cmp	w8, #0x2, lsl #12
  4053b4:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4053b8:	b	4053c8 <wcrtomb@plt+0x2a08>
  4053bc:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4053c0:	cmp	w8, #0xc, lsl #12
  4053c4:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4053c8:	tbz	w20, #0, 405424 <wcrtomb@plt+0x2a64>
  4053cc:	ldr	w8, [sp, #56]
  4053d0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4053d4:	ldr	x1, [x9, #1520]
  4053d8:	and	w8, w8, #0xf000
  4053dc:	cmp	w8, #0x4, lsl #12
  4053e0:	b.ne	40540c <wcrtomb@plt+0x2a4c>  // b.any
  4053e4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4053e8:	ldr	w8, [x8, #880]
  4053ec:	cmp	w8, #0x4
  4053f0:	b.eq	405734 <wcrtomb@plt+0x2d74>  // b.none
  4053f4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4053f8:	ldrb	w8, [x8, #1496]
  4053fc:	tbnz	w8, #0, 405424 <wcrtomb@plt+0x2a64>
  405400:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405404:	add	x8, x8, #0x4f0
  405408:	b	405414 <wcrtomb@plt+0x2a54>
  40540c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405410:	add	x8, x8, #0x4e0
  405414:	ldr	x0, [x8, #8]
  405418:	cbz	x0, 405424 <wcrtomb@plt+0x2a64>
  40541c:	bl	40ef74 <wcrtomb@plt+0xc5b4>
  405420:	tbnz	w0, #0, 405734 <wcrtomb@plt+0x2d74>
  405424:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405428:	ldr	w8, [x24, #1468]
  40542c:	tbz	w8, #31, 405444 <wcrtomb@plt+0x2a84>
  405430:	ldr	w8, [sp, #56]
  405434:	and	w8, w8, #0xf000
  405438:	cmp	w8, #0x4, lsl #12
  40543c:	cset	w8, eq  // eq = none
  405440:	str	w8, [x24, #1468]
  405444:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405448:	ldr	w8, [x26, #880]
  40544c:	cbz	w19, 405718 <wcrtomb@plt+0x2d58>
  405450:	cmp	w8, #0x3
  405454:	b.ne	405718 <wcrtomb@plt+0x2d58>  // b.any
  405458:	ldr	w9, [sp, #56]
  40545c:	and	w9, w9, #0xf000
  405460:	cmp	w9, #0x4, lsl #12
  405464:	b.ne	405718 <wcrtomb@plt+0x2d58>  // b.any
  405468:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40546c:	ldrb	w8, [x8, #1232]
  405470:	mov	w9, #0x319                 	// #793
  405474:	mov	w10, #0x30a                 	// #778
  405478:	mov	w0, w19
  40547c:	cmp	w8, #0x0
  405480:	csel	w8, w10, w9, ne  // ne = any
  405484:	orr	w9, w20, #0xfffffffe
  405488:	and	w21, w8, w9
  40548c:	bl	402650 <close@plt>
  405490:	cbz	w0, 4054a0 <wcrtomb@plt+0x2ae0>
  405494:	bl	402930 <__errno_location@plt>
  405498:	ldr	w0, [x0]
  40549c:	bl	406188 <wcrtomb@plt+0x37c8>
  4054a0:	adrp	x28, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4054a4:	ldr	x8, [x28, #1520]
  4054a8:	add	x0, sp, #0x18
  4054ac:	mov	w1, w21
  4054b0:	mov	x2, xzr
  4054b4:	stp	x8, xzr, [sp, #24]
  4054b8:	bl	412e80 <wcrtomb@plt+0x104c0>
  4054bc:	cbz	x0, 4060f0 <wcrtomb@plt+0x3730>
  4054c0:	mov	x19, x0
  4054c4:	bl	413730 <wcrtomb@plt+0x10d70>
  4054c8:	mov	w22, #0x1                   	// #1
  4054cc:	cbz	x0, 40577c <wcrtomb@plt+0x2dbc>
  4054d0:	adrp	x21, 421000 <_obstack_memory_used@@Base+0xbfcc>
  4054d4:	mov	x23, x0
  4054d8:	add	x21, x21, #0xf0
  4054dc:	mov	w27, #0x1                   	// #1
  4054e0:	ldr	x9, [x23, #88]
  4054e4:	ldrh	w8, [x23, #108]
  4054e8:	cmp	x9, #0x0
  4054ec:	cset	w9, eq  // eq = none
  4054f0:	cmp	w8, #0x6
  4054f4:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  4054f8:	and	w24, w9, w20
  4054fc:	tbz	w24, #0, 405538 <wcrtomb@plt+0x2b78>
  405500:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405504:	ldrb	w9, [x8, #1496]
  405508:	ldr	x8, [x23, #56]
  40550c:	cmp	w9, #0x1
  405510:	str	x8, [x28, #1520]
  405514:	b.ne	405528 <wcrtomb@plt+0x2b68>  // b.any
  405518:	ldrb	w9, [x8, #1]
  40551c:	cbz	w9, 405528 <wcrtomb@plt+0x2b68>
  405520:	add	x8, x8, #0x2
  405524:	str	x8, [x28, #1520]
  405528:	ldr	w8, [x19, #72]
  40552c:	tbnz	w8, #1, 405570 <wcrtomb@plt+0x2bb0>
  405530:	and	w25, w8, w24
  405534:	b	405574 <wcrtomb@plt+0x2bb4>
  405538:	cmp	w8, #0x4
  40553c:	b.hi	405680 <wcrtomb@plt+0x2cc0>  // b.pmore
  405540:	lsl	w8, w22, w8
  405544:	mov	w9, #0x16                  	// #22
  405548:	tst	w8, w9
  40554c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405550:	add	x8, x8, #0x4e0
  405554:	b.eq	405688 <wcrtomb@plt+0x2cc8>  // b.none
  405558:	ldr	w8, [x26, #880]
  40555c:	cmp	w8, #0x4
  405560:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405564:	add	x8, x8, #0x4f0
  405568:	b.ne	405688 <wcrtomb@plt+0x2cc8>  // b.any
  40556c:	b	40569c <wcrtomb@plt+0x2cdc>
  405570:	mov	w25, #0x1                   	// #1
  405574:	ldrh	w8, [x23, #108]
  405578:	sub	w8, w8, #0x1
  40557c:	cmp	w8, #0xd
  405580:	b.hi	4060ec <wcrtomb@plt+0x372c>  // b.pmore
  405584:	adr	x9, 405598 <wcrtomb@plt+0x2bd8>
  405588:	ldrh	w10, [x21, x8, lsl #1]
  40558c:	add	x9, x9, x10, lsl #2
  405590:	mov	w0, #0x1                   	// #1
  405594:	br	x9
  405598:	ldr	w0, [x23, #64]
  40559c:	bl	406188 <wcrtomb@plt+0x37c8>
  4055a0:	b	4056ac <wcrtomb@plt+0x2cec>
  4055a4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4055a8:	ldr	w8, [x8, #1212]
  4055ac:	cmp	w8, #0x2
  4055b0:	b.eq	4055c0 <wcrtomb@plt+0x2c00>  // b.none
  4055b4:	cbnz	w8, 405668 <wcrtomb@plt+0x2ca8>
  4055b8:	eor	w8, w24, #0x1
  4055bc:	cbz	w8, 405668 <wcrtomb@plt+0x2ca8>
  4055c0:	ldr	w8, [x23, #136]
  4055c4:	cbz	w8, 4056e0 <wcrtomb@plt+0x2d20>
  4055c8:	add	x22, x23, #0x78
  4055cc:	ldr	w8, [x22, #16]
  4055d0:	and	w8, w8, #0xf000
  4055d4:	cmp	w8, #0x6, lsl #12
  4055d8:	b.ge	4056c8 <wcrtomb@plt+0x2d08>  // b.tcont
  4055dc:	cmp	w8, #0x1, lsl #12
  4055e0:	mov	w22, #0x1                   	// #1
  4055e4:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  4055e8:	cmp	w8, #0x2, lsl #12
  4055ec:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  4055f0:	b	405668 <wcrtomb@plt+0x2ca8>
  4055f4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4055f8:	ldrb	w8, [x8, #1233]
  4055fc:	tbnz	w8, #0, 4056ac <wcrtomb@plt+0x2cec>
  405600:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405604:	mov	w2, #0x5                   	// #5
  405608:	mov	x0, xzr
  40560c:	add	x1, x1, #0xd1d
  405610:	bl	402890 <dcgettext@plt>
  405614:	ldr	x23, [x28, #1520]
  405618:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40561c:	mov	x24, x0
  405620:	mov	w2, #0x5                   	// #5
  405624:	mov	x0, xzr
  405628:	add	x1, x1, #0xd2d
  40562c:	bl	402890 <dcgettext@plt>
  405630:	mov	x4, x0
  405634:	mov	w0, wzr
  405638:	mov	w1, wzr
  40563c:	mov	x2, x24
  405640:	mov	x3, x23
  405644:	bl	4023b0 <error@plt>
  405648:	b	4056ac <wcrtomb@plt+0x2cec>
  40564c:	ldr	w8, [x26, #880]
  405650:	cmp	w8, #0x3
  405654:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  405658:	mov	w2, #0x4                   	// #4
  40565c:	mov	x0, x19
  405660:	mov	x1, x23
  405664:	bl	41495c <wcrtomb@plt+0x11f9c>
  405668:	ldr	w0, [x19, #44]
  40566c:	ldr	x1, [x23, #48]
  405670:	mov	w2, w25
  405674:	mov	w3, w24
  405678:	bl	4060f4 <wcrtomb@plt+0x3734>
  40567c:	b	4056b0 <wcrtomb@plt+0x2cf0>
  405680:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405684:	add	x8, x8, #0x4e0
  405688:	ldr	x0, [x8]
  40568c:	cbz	x0, 405500 <wcrtomb@plt+0x2b40>
  405690:	add	x1, x23, #0xf8
  405694:	bl	40ef74 <wcrtomb@plt+0xc5b4>
  405698:	tbz	w0, #0, 405500 <wcrtomb@plt+0x2b40>
  40569c:	mov	w2, #0x4                   	// #4
  4056a0:	mov	x0, x19
  4056a4:	mov	x1, x23
  4056a8:	bl	41495c <wcrtomb@plt+0x11f9c>
  4056ac:	mov	w0, #0x1                   	// #1
  4056b0:	and	w27, w27, w0
  4056b4:	mov	x0, x19
  4056b8:	bl	413730 <wcrtomb@plt+0x10d70>
  4056bc:	mov	x23, x0
  4056c0:	cbnz	x0, 4054e0 <wcrtomb@plt+0x2b20>
  4056c4:	b	405780 <wcrtomb@plt+0x2dc0>
  4056c8:	cmp	w8, #0xc, lsl #12
  4056cc:	mov	w22, #0x1                   	// #1
  4056d0:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  4056d4:	cmp	w8, #0x6, lsl #12
  4056d8:	b.eq	4056ac <wcrtomb@plt+0x2cec>  // b.none
  4056dc:	b	405668 <wcrtomb@plt+0x2ca8>
  4056e0:	ldr	w0, [x19, #44]
  4056e4:	ldr	x1, [x23, #48]
  4056e8:	cmp	w25, #0x0
  4056ec:	mov	w8, #0x100                 	// #256
  4056f0:	csel	w3, wzr, w8, ne  // ne = any
  4056f4:	sub	x2, x29, #0x88
  4056f8:	sub	x22, x29, #0x88
  4056fc:	bl	420f98 <_obstack_memory_used@@Base+0xbf64>
  405700:	cbz	w0, 4055cc <wcrtomb@plt+0x2c0c>
  405704:	bl	402930 <__errno_location@plt>
  405708:	ldr	w0, [x0]
  40570c:	bl	406188 <wcrtomb@plt+0x37c8>
  405710:	mov	w22, #0x1                   	// #1
  405714:	b	4056ac <wcrtomb@plt+0x2cec>
  405718:	cbz	w19, 4057b4 <wcrtomb@plt+0x2df4>
  40571c:	cmp	w8, #0x4
  405720:	b.ne	40573c <wcrtomb@plt+0x2d7c>  // b.any
  405724:	ldr	w8, [sp, #56]
  405728:	and	w8, w8, #0xf000
  40572c:	cmp	w8, #0x4, lsl #12
  405730:	b.ne	40573c <wcrtomb@plt+0x2d7c>  // b.any
  405734:	mov	w27, #0x1                   	// #1
  405738:	b	40533c <wcrtomb@plt+0x297c>
  40573c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405740:	ldr	w8, [x8, #1212]
  405744:	cmp	w8, #0x2
  405748:	b.eq	405754 <wcrtomb@plt+0x2d94>  // b.none
  40574c:	cbnz	w8, 4057b4 <wcrtomb@plt+0x2df4>
  405750:	tbnz	w20, #0, 4057b4 <wcrtomb@plt+0x2df4>
  405754:	ldr	w8, [sp, #56]
  405758:	mov	w27, #0x1                   	// #1
  40575c:	and	w8, w8, #0xf000
  405760:	cmp	w8, #0x6, lsl #12
  405764:	b.ge	4057a8 <wcrtomb@plt+0x2de8>  // b.tcont
  405768:	cmp	w8, #0x1, lsl #12
  40576c:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  405770:	cmp	w8, #0x2, lsl #12
  405774:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  405778:	b	4057b4 <wcrtomb@plt+0x2df4>
  40577c:	mov	w27, #0x1                   	// #1
  405780:	bl	402930 <__errno_location@plt>
  405784:	mov	x20, x0
  405788:	ldr	w0, [x0]
  40578c:	cbz	w0, 405794 <wcrtomb@plt+0x2dd4>
  405790:	bl	406188 <wcrtomb@plt+0x37c8>
  405794:	mov	x0, x19
  405798:	bl	4135c4 <wcrtomb@plt+0x10c04>
  40579c:	cbz	w0, 405354 <wcrtomb@plt+0x2994>
  4057a0:	ldr	w0, [x20]
  4057a4:	b	405350 <wcrtomb@plt+0x2990>
  4057a8:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4057ac:	cmp	w8, #0xc, lsl #12
  4057b0:	b.eq	40533c <wcrtomb@plt+0x297c>  // b.none
  4057b4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4057b8:	ldrb	w10, [x8, #1440]
  4057bc:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4057c0:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4057c4:	cbnz	w10, 40588c <wcrtomb@plt+0x2ecc>
  4057c8:	ldr	w8, [x25, #1224]
  4057cc:	cbnz	w8, 40588c <wcrtomb@plt+0x2ecc>
  4057d0:	ldr	x8, [x20, #1184]
  4057d4:	cmp	x8, #0x2
  4057d8:	b.lt	40588c <wcrtomb@plt+0x2ecc>  // b.tstop
  4057dc:	ldr	w8, [sp, #56]
  4057e0:	and	w8, w8, #0xf000
  4057e4:	cmp	w8, #0x8, lsl #12
  4057e8:	b.ne	40588c <wcrtomb@plt+0x2ecc>  // b.any
  4057ec:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4057f0:	ldr	x8, [sp, #48]
  4057f4:	ldr	x9, [x9, #1312]
  4057f8:	cmp	x8, x9
  4057fc:	b.ne	40588c <wcrtomb@plt+0x2ecc>  // b.any
  405800:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405804:	ldr	x8, [sp, #40]
  405808:	ldr	x9, [x9, #1304]
  40580c:	cmp	x8, x9
  405810:	b.ne	40588c <wcrtomb@plt+0x2ecc>  // b.any
  405814:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405818:	ldrb	w8, [x8, #1233]
  40581c:	tbnz	w8, #0, 40587c <wcrtomb@plt+0x2ebc>
  405820:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405824:	add	x1, x1, #0xcf7
  405828:	mov	w2, #0x5                   	// #5
  40582c:	mov	x0, xzr
  405830:	bl	402890 <dcgettext@plt>
  405834:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405838:	ldr	x8, [x21, #1520]
  40583c:	mov	x20, x0
  405840:	cbnz	x8, 405860 <wcrtomb@plt+0x2ea0>
  405844:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405848:	add	x1, x1, #0xd46
  40584c:	mov	w2, #0x5                   	// #5
  405850:	mov	x0, xzr
  405854:	bl	402890 <dcgettext@plt>
  405858:	mov	x8, x0
  40585c:	str	x0, [x21, #1520]
  405860:	mov	x0, x8
  405864:	bl	41203c <wcrtomb@plt+0xf67c>
  405868:	mov	x3, x0
  40586c:	mov	w0, wzr
  405870:	mov	w1, wzr
  405874:	mov	x2, x20
  405878:	bl	4023b0 <error@plt>
  40587c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405880:	mov	w27, #0x1                   	// #1
  405884:	strb	w27, [x8, #1497]
  405888:	b	405338 <wcrtomb@plt+0x2978>
  40588c:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405890:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405894:	ldr	x11, [x23, #1488]
  405898:	ldr	x9, [x9, #1472]
  40589c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4058a0:	adrp	x14, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058a4:	add	x12, x11, #0x1
  4058a8:	udiv	x13, x12, x9
  4058ac:	msub	x13, x13, x9, x12
  4058b0:	sub	x9, x9, x13
  4058b4:	cmp	x13, #0x0
  4058b8:	add	x9, x12, x9
  4058bc:	ldrb	w21, [x8, #2260]
  4058c0:	csinc	x8, x9, x11, ne  // ne = any
  4058c4:	ldrb	w9, [x14, #1436]
  4058c8:	adrp	x15, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058cc:	adrp	x16, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058d0:	str	w10, [sp, #12]
  4058d4:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058d8:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058dc:	str	x8, [x15, #1592]
  4058e0:	str	x8, [x16, #1584]
  4058e4:	sturb	w21, [x8, #-1]
  4058e8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058ec:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4058f0:	str	w9, [sp, #8]
  4058f4:	str	w19, [x10, #1608]
  4058f8:	cbz	w19, 40590c <wcrtomb@plt+0x2f4c>
  4058fc:	str	xzr, [x8, #1616]
  405900:	strb	wzr, [x26, #1624]
  405904:	strb	wzr, [x22, #1628]
  405908:	b	40594c <wcrtomb@plt+0x2f8c>
  40590c:	mov	w2, #0x1                   	// #1
  405910:	mov	w0, wzr
  405914:	mov	x1, xzr
  405918:	mov	x27, x8
  40591c:	bl	402440 <lseek@plt>
  405920:	lsr	x8, x0, #63
  405924:	str	x0, [x27, #1616]
  405928:	strb	w8, [x26, #1624]
  40592c:	strb	w8, [x22, #1628]
  405930:	tbz	x0, #63, 40594c <wcrtomb@plt+0x2f8c>
  405934:	bl	402930 <__errno_location@plt>
  405938:	ldr	w0, [x0]
  40593c:	cmp	w0, #0x1d
  405940:	b.ne	405d8c <wcrtomb@plt+0x33cc>  // b.any
  405944:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405948:	str	xzr, [x8, #1616]
  40594c:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405950:	str	xzr, [x10, #1560]
  405954:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405958:	ldrb	w10, [x10, #1464]
  40595c:	ldr	x9, [x20, #1184]
  405960:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405964:	str	xzr, [x8, #1544]
  405968:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40596c:	cmp	w10, #0x0
  405970:	str	x9, [x8, #1552]
  405974:	cset	w8, ne  // ne = any
  405978:	cmp	w21, #0x0
  40597c:	cset	w9, eq  // eq = none
  405980:	and	w8, w9, w8
  405984:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405988:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40598c:	adrp	x13, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405990:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405994:	strb	w8, [x9, #1576]
  405998:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40599c:	add	x1, sp, #0x28
  4059a0:	mov	x0, xzr
  4059a4:	str	xzr, [x12, #1528]
  4059a8:	str	xzr, [x13, #1536]
  4059ac:	str	xzr, [x11, #1568]
  4059b0:	strb	wzr, [x8, #1577]
  4059b4:	bl	406400 <wcrtomb@plt+0x3a40>
  4059b8:	tbz	w0, #0, 405d84 <wcrtomb@plt+0x33c4>
  4059bc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4059c0:	ldrb	w9, [x8, #1220]
  4059c4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4059c8:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4059cc:	str	wzr, [x8, #1580]
  4059d0:	cmp	w9, #0x1
  4059d4:	b.ne	405a28 <wcrtomb@plt+0x3068>  // b.any
  4059d8:	ldr	w10, [sp, #56]
  4059dc:	ldr	x11, [sp, #88]
  4059e0:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4059e4:	ldrb	w12, [x12, #1228]
  4059e8:	and	w10, w10, #0xf000
  4059ec:	cmp	w10, #0x8, lsl #12
  4059f0:	csinv	x10, x11, xzr, eq  // eq = none
  4059f4:	cmn	x10, #0x1
  4059f8:	cset	w11, ne  // ne = any
  4059fc:	and	x11, x12, x11
  405a00:	add	x10, x10, x11
  405a04:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  405a08:	mov	w9, wzr
  405a0c:	movk	x11, #0xcccd
  405a10:	umulh	x12, x10, x11
  405a14:	cmp	x10, #0x9
  405a18:	lsr	x10, x12, #3
  405a1c:	add	w9, w9, #0x1
  405a20:	b.hi	405a10 <wcrtomb@plt+0x3050>  // b.pmore
  405a24:	str	w9, [x8, #1580]
  405a28:	mov	x22, xzr
  405a2c:	mov	x28, xzr
  405a30:	mov	w25, wzr
  405a34:	mov	x8, #0xffffffffffffffff    	// #-1
  405a38:	mov	w24, #0x1                   	// #1
  405a3c:	str	xzr, [sp, #16]
  405a40:	tbnz	x8, #63, 405c70 <wcrtomb@plt+0x32b0>
  405a44:	mov	x27, x8
  405a48:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405a4c:	ldr	x8, [x20, #1584]
  405a50:	ldr	x9, [x9, #1536]
  405a54:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405a58:	str	x8, [x10, #1600]
  405a5c:	cbz	x9, 405a68 <wcrtomb@plt+0x30a8>
  405a60:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405a64:	str	x8, [x9, #1536]
  405a68:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405a6c:	ldr	x24, [x9, #1592]
  405a70:	add	x22, x8, x22
  405a74:	cmp	x22, x24
  405a78:	b.eq	405d9c <wcrtomb@plt+0x33dc>  // b.none
  405a7c:	tst	w25, #0xff
  405a80:	b.eq	405ac4 <wcrtomb@plt+0x3104>  // b.none
  405a84:	mov	x0, x22
  405a88:	strb	wzr, [x24]
  405a8c:	bl	402380 <strlen@plt>
  405a90:	add	x23, x22, x0
  405a94:	cmp	x23, x24
  405a98:	strb	w25, [x24]
  405a9c:	b.eq	405ac4 <wcrtomb@plt+0x3104>  // b.none
  405aa0:	mov	x8, x23
  405aa4:	ldrb	w9, [x23, #1]!
  405aa8:	strb	w25, [x8]
  405aac:	cbz	w9, 405aa0 <wcrtomb@plt+0x30e0>
  405ab0:	mov	x0, x23
  405ab4:	strb	wzr, [x24]
  405ab8:	bl	402380 <strlen@plt>
  405abc:	add	x23, x23, x0
  405ac0:	b	405a94 <wcrtomb@plt+0x30d4>
  405ac4:	mov	x24, x22
  405ac8:	ldrb	w20, [x24, #-1]!
  405acc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405ad0:	mov	w1, w21
  405ad4:	strb	w21, [x24]
  405ad8:	ldr	x26, [x8, #1592]
  405adc:	mov	x0, x24
  405ae0:	sub	x8, x26, x22
  405ae4:	add	x2, x8, #0x1
  405ae8:	bl	4027a0 <memrchr@plt>
  405aec:	add	x9, x0, #0x1
  405af0:	mov	x8, x0
  405af4:	sub	x0, x22, x28
  405af8:	cmp	x9, x22
  405afc:	csinc	x23, x0, x8, eq  // eq = none
  405b00:	cmp	x0, x23
  405b04:	strb	w20, [x24]
  405b08:	b.cs	405b80 <wcrtomb@plt+0x31c0>  // b.hs, b.nlast
  405b0c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b10:	ldr	x8, [x8, #1552]
  405b14:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b18:	cbz	x8, 405b30 <wcrtomb@plt+0x3170>
  405b1c:	mov	x1, x23
  405b20:	bl	4066e4 <wcrtomb@plt+0x3d24>
  405b24:	ldr	x8, [sp, #16]
  405b28:	add	x8, x0, x8
  405b2c:	str	x8, [sp, #16]
  405b30:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b34:	ldr	x8, [x9, #1568]
  405b38:	cbz	x8, 405b4c <wcrtomb@plt+0x318c>
  405b3c:	mov	x0, x23
  405b40:	mov	x22, x9
  405b44:	bl	406aa8 <wcrtomb@plt+0x40e8>
  405b48:	ldr	x8, [x22, #1568]
  405b4c:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b50:	ldr	x9, [x9, #1552]
  405b54:	orr	x8, x9, x8
  405b58:	cbz	x8, 405dec <wcrtomb@plt+0x342c>
  405b5c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b60:	ldrb	w8, [x8, #1436]
  405b64:	cmp	w8, #0x1
  405b68:	b.ne	405b84 <wcrtomb@plt+0x31c4>  // b.any
  405b6c:	ldr	x9, [sp, #16]
  405b70:	bic	x8, x27, x27, asr #63
  405b74:	cmp	x8, x9
  405b78:	b.ge	405b84 <wcrtomb@plt+0x31c4>  // b.tcont
  405b7c:	b	405dec <wcrtomb@plt+0x342c>
  405b80:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b84:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b88:	ldr	x9, [x8, #1536]
  405b8c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405b90:	ldr	x11, [x8, #1192]
  405b94:	ldr	x8, [x20, #1584]
  405b98:	cmp	x23, x9
  405b9c:	cset	w10, eq  // eq = none
  405ba0:	cmp	x11, #0x1
  405ba4:	b.lt	405bf4 <wcrtomb@plt+0x3234>  // b.tstop
  405ba8:	cmp	x23, x8
  405bac:	b.ls	405bf4 <wcrtomb@plt+0x3234>  // b.plast
  405bb0:	cmp	x23, x9
  405bb4:	b.eq	405bf4 <wcrtomb@plt+0x3234>  // b.none
  405bb8:	mov	x12, xzr
  405bbc:	mov	x24, x23
  405bc0:	ldurb	w10, [x24, #-2]
  405bc4:	sub	x24, x24, #0x1
  405bc8:	cmp	w10, w21
  405bcc:	b.ne	405bc0 <wcrtomb@plt+0x3200>  // b.any
  405bd0:	cmp	x9, x24
  405bd4:	cset	w10, eq  // eq = none
  405bd8:	b.eq	405bf8 <wcrtomb@plt+0x3238>  // b.none
  405bdc:	add	x12, x12, #0x1
  405be0:	cmp	x12, x11
  405be4:	b.ge	405bf8 <wcrtomb@plt+0x3238>  // b.tcont
  405be8:	cmp	x24, x8
  405bec:	b.hi	405bc0 <wcrtomb@plt+0x3200>  // b.pmore
  405bf0:	b	405bf8 <wcrtomb@plt+0x3238>
  405bf4:	mov	x24, x23
  405bf8:	tbnz	w10, #0, 405c04 <wcrtomb@plt+0x3244>
  405bfc:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c00:	str	xzr, [x9, #1536]
  405c04:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c08:	ldrb	w9, [x9, #1222]
  405c0c:	sub	x22, x26, x24
  405c10:	cmp	w9, #0x1
  405c14:	b.ne	405c38 <wcrtomb@plt+0x3278>  // b.any
  405c18:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c1c:	ldr	x9, [x9, #1592]
  405c20:	adrp	x28, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c24:	ldr	x0, [x28, #1528]
  405c28:	add	x8, x22, x8
  405c2c:	sub	x1, x9, x8
  405c30:	bl	406b48 <wcrtomb@plt+0x4188>
  405c34:	str	x0, [x28, #1528]
  405c38:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c3c:	ldrb	w8, [x8, #1228]
  405c40:	sub	x28, x26, x23
  405c44:	cmp	w8, #0x1
  405c48:	b.ne	405c54 <wcrtomb@plt+0x3294>  // b.any
  405c4c:	mov	x0, x24
  405c50:	bl	406b80 <wcrtomb@plt+0x41c0>
  405c54:	add	x1, sp, #0x28
  405c58:	mov	x0, x22
  405c5c:	bl	406400 <wcrtomb@plt+0x3a40>
  405c60:	mov	w24, wzr
  405c64:	mov	x8, x27
  405c68:	tbnz	w0, #0, 405a40 <wcrtomb@plt+0x3080>
  405c6c:	b	405de0 <wcrtomb@plt+0x3420>
  405c70:	cbz	w21, 405a44 <wcrtomb@plt+0x3084>
  405c74:	mov	x27, x8
  405c78:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c7c:	ldr	w26, [x8, #1216]
  405c80:	cmp	w26, #0x1
  405c84:	b.eq	405a48 <wcrtomb@plt+0x3088>  // b.none
  405c88:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405c8c:	ldr	x0, [x20, #1584]
  405c90:	ldr	x8, [x8, #1592]
  405c94:	sub	x23, x8, x0
  405c98:	strb	wzr, [x8]
  405c9c:	bl	402380 <strlen@plt>
  405ca0:	cmp	x0, x23
  405ca4:	b.ne	405d40 <wcrtomb@plt+0x3380>  // b.any
  405ca8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405cac:	ldrb	w8, [x8, #1624]
  405cb0:	cmp	w8, #0x0
  405cb4:	cset	w8, ne  // ne = any
  405cb8:	orn	w8, w8, w24
  405cbc:	tbnz	w8, #0, 405a48 <wcrtomb@plt+0x3088>
  405cc0:	ldr	w8, [sp, #56]
  405cc4:	and	w8, w8, #0xf000
  405cc8:	cmp	w8, #0x8, lsl #12
  405ccc:	b.ne	405a48 <wcrtomb@plt+0x3088>  // b.any
  405cd0:	ldr	x26, [sp, #88]
  405cd4:	cmp	x26, x23
  405cd8:	b.ls	405a48 <wcrtomb@plt+0x3088>  // b.plast
  405cdc:	cbnz	w19, 405cf8 <wcrtomb@plt+0x3338>
  405ce0:	mov	w2, #0x1                   	// #1
  405ce4:	mov	w0, wzr
  405ce8:	mov	x1, xzr
  405cec:	bl	402440 <lseek@plt>
  405cf0:	mov	x23, x0
  405cf4:	tbnz	x0, #63, 405a48 <wcrtomb@plt+0x3088>
  405cf8:	mov	w2, #0x4                   	// #4
  405cfc:	mov	w0, w19
  405d00:	mov	x1, x23
  405d04:	bl	402440 <lseek@plt>
  405d08:	tbnz	x0, #63, 405a48 <wcrtomb@plt+0x3088>
  405d0c:	mov	x24, x0
  405d10:	mov	w0, w19
  405d14:	mov	x1, x23
  405d18:	mov	w2, wzr
  405d1c:	bl	402440 <lseek@plt>
  405d20:	tbz	x0, #63, 405d30 <wcrtomb@plt+0x3370>
  405d24:	bl	402930 <__errno_location@plt>
  405d28:	ldr	w0, [x0]
  405d2c:	bl	406188 <wcrtomb@plt+0x37c8>
  405d30:	cmp	x24, x26
  405d34:	b.ge	405a48 <wcrtomb@plt+0x3088>  // b.tcont
  405d38:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d3c:	ldr	w26, [x8, #1216]
  405d40:	cmp	w26, #0x2
  405d44:	b.eq	4060a0 <wcrtomb@plt+0x36e0>  // b.none
  405d48:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d4c:	ldrb	w8, [x8, #1223]
  405d50:	tbnz	w8, #0, 405d68 <wcrtomb@plt+0x33a8>
  405d54:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d58:	mov	w9, #0x1                   	// #1
  405d5c:	strb	w9, [x8, #1440]
  405d60:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d64:	strb	w9, [x8, #1436]
  405d68:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d6c:	ldrb	w8, [x8, #1464]
  405d70:	ldr	x27, [sp, #16]
  405d74:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405d78:	mov	w25, w21
  405d7c:	strb	w8, [x9, #1576]
  405d80:	b	405a48 <wcrtomb@plt+0x3088>
  405d84:	bl	402930 <__errno_location@plt>
  405d88:	ldr	w0, [x0]
  405d8c:	bl	406188 <wcrtomb@plt+0x37c8>
  405d90:	mov	w22, wzr
  405d94:	mov	x21, xzr
  405d98:	b	405ec4 <wcrtomb@plt+0x3504>
  405d9c:	cbz	x28, 405e08 <wcrtomb@plt+0x3448>
  405da0:	add	x1, x22, #0x1
  405da4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405da8:	str	x1, [x8, #1592]
  405dac:	strb	w21, [x22]
  405db0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405db4:	ldr	x8, [x8, #1552]
  405db8:	ldr	w26, [sp, #8]
  405dbc:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405dc0:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405dc4:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405dc8:	cbz	x8, 405e10 <wcrtomb@plt+0x3450>
  405dcc:	sub	x0, x22, x28
  405dd0:	bl	4066e4 <wcrtomb@plt+0x3d24>
  405dd4:	ldr	x21, [sp, #16]
  405dd8:	add	x21, x0, x21
  405ddc:	b	405e14 <wcrtomb@plt+0x3454>
  405de0:	bl	402930 <__errno_location@plt>
  405de4:	ldr	w0, [x0]
  405de8:	bl	406188 <wcrtomb@plt+0x37c8>
  405dec:	mov	w22, wzr
  405df0:	ldp	w26, w20, [sp, #8]
  405df4:	ldr	x21, [sp, #16]
  405df8:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405dfc:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e00:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e04:	b	405e34 <wcrtomb@plt+0x3474>
  405e08:	mov	w22, #0x1                   	// #1
  405e0c:	b	405df0 <wcrtomb@plt+0x3430>
  405e10:	ldr	x21, [sp, #16]
  405e14:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e18:	ldr	x8, [x8, #1568]
  405e1c:	ldr	w20, [sp, #12]
  405e20:	cbz	x8, 405e30 <wcrtomb@plt+0x3470>
  405e24:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e28:	ldr	x0, [x8, #1592]
  405e2c:	bl	406aa8 <wcrtomb@plt+0x40e8>
  405e30:	mov	w22, #0x1                   	// #1
  405e34:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e38:	strb	w26, [x8, #1436]
  405e3c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e40:	strb	w20, [x8, #1440]
  405e44:	cbnz	w20, 405ec4 <wcrtomb@plt+0x3504>
  405e48:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e4c:	ldrb	w8, [x8, #1577]
  405e50:	tbnz	w8, #0, 405e60 <wcrtomb@plt+0x34a0>
  405e54:	tbnz	x27, #63, 405ec4 <wcrtomb@plt+0x3504>
  405e58:	cmp	x27, x21
  405e5c:	b.ge	405ec4 <wcrtomb@plt+0x3504>  // b.tcont
  405e60:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405e64:	add	x1, x1, #0xd57
  405e68:	mov	w2, #0x5                   	// #5
  405e6c:	mov	x0, xzr
  405e70:	mov	x26, x21
  405e74:	bl	402890 <dcgettext@plt>
  405e78:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405e7c:	ldr	x1, [x20, #1520]
  405e80:	mov	x21, x0
  405e84:	cbnz	x1, 405ea4 <wcrtomb@plt+0x34e4>
  405e88:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405e8c:	add	x1, x1, #0xd46
  405e90:	mov	w2, #0x5                   	// #5
  405e94:	mov	x0, xzr
  405e98:	bl	402890 <dcgettext@plt>
  405e9c:	mov	x1, x0
  405ea0:	str	x0, [x20, #1520]
  405ea4:	mov	x0, x21
  405ea8:	bl	406338 <wcrtomb@plt+0x3978>
  405eac:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405eb0:	ldrb	w8, [x8, #1280]
  405eb4:	cmp	w8, #0x1
  405eb8:	b.ne	405ec0 <wcrtomb@plt+0x3500>  // b.any
  405ebc:	bl	4063d0 <wcrtomb@plt+0x3a10>
  405ec0:	mov	x21, x26
  405ec4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405ec8:	ldrb	w8, [x8, #1223]
  405ecc:	cmp	w8, #0x1
  405ed0:	b.ne	405f28 <wcrtomb@plt+0x3568>  // b.any
  405ed4:	ldr	w8, [x24, #1468]
  405ed8:	cbz	w8, 405f04 <wcrtomb@plt+0x3544>
  405edc:	bl	4061f8 <wcrtomb@plt+0x3838>
  405ee0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405ee4:	ldrb	w8, [x8, #1176]
  405ee8:	cmp	w8, #0x1
  405eec:	b.ne	405efc <wcrtomb@plt+0x353c>  // b.any
  405ef0:	mov	w0, #0x3a                  	// #58
  405ef4:	bl	406290 <wcrtomb@plt+0x38d0>
  405ef8:	b	405f04 <wcrtomb@plt+0x3544>
  405efc:	mov	w0, wzr
  405f00:	bl	406310 <wcrtomb@plt+0x3950>
  405f04:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  405f08:	add	x0, x0, #0xd18
  405f0c:	mov	x1, x21
  405f10:	bl	406338 <wcrtomb@plt+0x3978>
  405f14:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405f18:	ldrb	w8, [x8, #1280]
  405f1c:	cmp	w8, #0x1
  405f20:	b.ne	405f28 <wcrtomb@plt+0x3568>  // b.any
  405f24:	bl	4063d0 <wcrtomb@plt+0x3a10>
  405f28:	ldr	w8, [x25, #1224]
  405f2c:	cmp	x21, #0x0
  405f30:	cset	w9, eq  // eq = none
  405f34:	cmp	w8, #0x2
  405f38:	cset	w10, ne  // ne = any
  405f3c:	eor	w9, w9, w10
  405f40:	eor	w27, w9, #0x1
  405f44:	cbz	w8, 405f58 <wcrtomb@plt+0x3598>
  405f48:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405f4c:	ldrb	w9, [x9, #1432]
  405f50:	cmp	w9, #0x1
  405f54:	b.ne	405fe8 <wcrtomb@plt+0x3628>  // b.any
  405f58:	cbnz	w19, 40533c <wcrtomb@plt+0x297c>
  405f5c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405f60:	ldr	x8, [x8, #1552]
  405f64:	cbz	x8, 406034 <wcrtomb@plt+0x3674>
  405f68:	cbnz	w22, 405354 <wcrtomb@plt+0x2994>
  405f6c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405f70:	ldrb	w8, [x8, #1624]
  405f74:	cbz	w8, 406078 <wcrtomb@plt+0x36b8>
  405f78:	ldr	w8, [sp, #56]
  405f7c:	and	w8, w8, #0xf000
  405f80:	cmp	w8, #0x1, lsl #12
  405f84:	b.ne	4060c8 <wcrtomb@plt+0x3708>  // b.any
  405f88:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  405f8c:	ldrb	w8, [x8, #1432]
  405f90:	cmp	w8, #0x1
  405f94:	b.ne	4060c8 <wcrtomb@plt+0x3708>  // b.any
  405f98:	mov	w2, #0x1                   	// #1
  405f9c:	mov	w4, #0x18000               	// #98304
  405fa0:	mov	w5, #0x1                   	// #1
  405fa4:	mov	w0, wzr
  405fa8:	mov	x1, xzr
  405fac:	mov	x3, xzr
  405fb0:	bl	402520 <splice@plt>
  405fb4:	tbnz	x0, #63, 4060b8 <wcrtomb@plt+0x36f8>
  405fb8:	cbz	x0, 405354 <wcrtomb@plt+0x2994>
  405fbc:	mov	w2, #0x1                   	// #1
  405fc0:	mov	w4, #0x18000               	// #98304
  405fc4:	mov	w5, #0x1                   	// #1
  405fc8:	mov	w0, wzr
  405fcc:	mov	x1, xzr
  405fd0:	mov	x3, xzr
  405fd4:	bl	402520 <splice@plt>
  405fd8:	cmp	x0, #0x0
  405fdc:	b.gt	405fbc <wcrtomb@plt+0x35fc>
  405fe0:	cbnz	x0, 406068 <wcrtomb@plt+0x36a8>
  405fe4:	b	405338 <wcrtomb@plt+0x2978>
  405fe8:	cmp	w8, #0x2
  405fec:	cset	w8, ne  // ne = any
  405ff0:	cmp	x21, #0x0
  405ff4:	cset	w9, eq  // eq = none
  405ff8:	cmp	w9, w8
  405ffc:	b.eq	405338 <wcrtomb@plt+0x2978>  // b.none
  406000:	bl	4061f8 <wcrtomb@plt+0x3838>
  406004:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406008:	ldrb	w8, [x8, #1176]
  40600c:	cmp	w8, #0x0
  406010:	mov	w8, #0xa                   	// #10
  406014:	csel	w0, w8, wzr, ne  // ne = any
  406018:	bl	406310 <wcrtomb@plt+0x3950>
  40601c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406020:	ldrb	w8, [x8, #1280]
  406024:	cmp	w8, #0x1
  406028:	b.ne	405338 <wcrtomb@plt+0x2978>  // b.any
  40602c:	bl	4063d0 <wcrtomb@plt+0x3a10>
  406030:	b	405338 <wcrtomb@plt+0x2978>
  406034:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406038:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40603c:	ldr	x8, [x8, #1616]
  406040:	ldr	x1, [x9, #1560]
  406044:	cmp	x8, x1
  406048:	b.eq	405354 <wcrtomb@plt+0x2994>  // b.none
  40604c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406050:	ldrb	w8, [x8, #1624]
  406054:	cbnz	w8, 405354 <wcrtomb@plt+0x2994>
  406058:	mov	w0, wzr
  40605c:	mov	w2, wzr
  406060:	bl	402440 <lseek@plt>
  406064:	tbz	x0, #63, 405354 <wcrtomb@plt+0x2994>
  406068:	bl	402930 <__errno_location@plt>
  40606c:	ldr	w0, [x0]
  406070:	bl	406188 <wcrtomb@plt+0x37c8>
  406074:	b	405338 <wcrtomb@plt+0x2978>
  406078:	mov	w2, #0x2                   	// #2
  40607c:	mov	w0, wzr
  406080:	mov	x1, xzr
  406084:	bl	402440 <lseek@plt>
  406088:	tbz	x0, #63, 405354 <wcrtomb@plt+0x2994>
  40608c:	bl	402930 <__errno_location@plt>
  406090:	ldr	w8, [x0]
  406094:	cmp	w8, #0x16
  406098:	b.eq	405354 <wcrtomb@plt+0x2994>  // b.none
  40609c:	b	405f78 <wcrtomb@plt+0x35b8>
  4060a0:	mov	w22, wzr
  4060a4:	mov	x21, xzr
  4060a8:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4060ac:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4060b0:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4060b4:	b	405ec4 <wcrtomb@plt+0x3504>
  4060b8:	bl	402930 <__errno_location@plt>
  4060bc:	ldr	w8, [x0]
  4060c0:	cmp	w8, #0x16
  4060c4:	b.ne	406068 <wcrtomb@plt+0x36a8>  // b.any
  4060c8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4060cc:	ldr	x1, [x23, #1488]
  4060d0:	ldr	x2, [x8, #1480]
  4060d4:	mov	w0, wzr
  4060d8:	bl	41218c <wcrtomb@plt+0xf7cc>
  4060dc:	cmn	x0, #0x1
  4060e0:	b.eq	406068 <wcrtomb@plt+0x36a8>  // b.none
  4060e4:	cbnz	x0, 4060c8 <wcrtomb@plt+0x3708>
  4060e8:	b	405338 <wcrtomb@plt+0x2978>
  4060ec:	bl	4026c0 <abort@plt>
  4060f0:	bl	412920 <wcrtomb@plt+0xff60>
  4060f4:	stp	x29, x30, [sp, #-32]!
  4060f8:	stp	x20, x19, [sp, #16]
  4060fc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406100:	ldr	w10, [x8, #1212]
  406104:	tst	w2, #0x1
  406108:	mov	w8, #0x8100                	// #33024
  40610c:	mov	w9, #0x100                 	// #256
  406110:	mov	w20, w3
  406114:	mov	w19, w2
  406118:	csel	w8, w9, w8, ne  // ne = any
  40611c:	cmp	w10, #0x2
  406120:	mov	x29, sp
  406124:	b.eq	406134 <wcrtomb@plt+0x3774>  // b.none
  406128:	mov	w9, wzr
  40612c:	cbnz	w10, 406138 <wcrtomb@plt+0x3778>
  406130:	tbnz	w20, #0, 406138 <wcrtomb@plt+0x3778>
  406134:	mov	w9, #0x800                 	// #2048
  406138:	orr	w2, w9, w8
  40613c:	bl	410acc <wcrtomb@plt+0xe10c>
  406140:	tbnz	w0, #31, 406154 <wcrtomb@plt+0x3794>
  406144:	and	w1, w20, #0x1
  406148:	ldp	x20, x19, [sp, #16]
  40614c:	ldp	x29, x30, [sp], #32
  406150:	b	4052f4 <wcrtomb@plt+0x2934>
  406154:	bl	402930 <__errno_location@plt>
  406158:	tbnz	w19, #0, 406170 <wcrtomb@plt+0x37b0>
  40615c:	ldr	w8, [x0]
  406160:	cmp	w8, #0x1f
  406164:	b.eq	406178 <wcrtomb@plt+0x37b8>  // b.none
  406168:	cmp	w8, #0x28
  40616c:	b.eq	406178 <wcrtomb@plt+0x37b8>  // b.none
  406170:	ldr	w0, [x0]
  406174:	bl	406188 <wcrtomb@plt+0x37c8>
  406178:	ldp	x20, x19, [sp, #16]
  40617c:	mov	w0, #0x1                   	// #1
  406180:	ldp	x29, x30, [sp], #32
  406184:	ret
  406188:	stp	x29, x30, [sp, #-32]!
  40618c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406190:	ldrb	w8, [x8, #1233]
  406194:	stp	x20, x19, [sp, #16]
  406198:	mov	x29, sp
  40619c:	tbnz	w8, #0, 4061e0 <wcrtomb@plt+0x3820>
  4061a0:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4061a4:	ldr	x3, [x20, #1520]
  4061a8:	mov	w19, w0
  4061ac:	cbnz	x3, 4061cc <wcrtomb@plt+0x380c>
  4061b0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4061b4:	add	x1, x1, #0xd46
  4061b8:	mov	w2, #0x5                   	// #5
  4061bc:	mov	x0, xzr
  4061c0:	bl	402890 <dcgettext@plt>
  4061c4:	mov	x3, x0
  4061c8:	str	x0, [x20, #1520]
  4061cc:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4061d0:	add	x2, x2, #0xe07
  4061d4:	mov	w0, wzr
  4061d8:	mov	w1, w19
  4061dc:	bl	4023b0 <error@plt>
  4061e0:	ldp	x20, x19, [sp, #16]
  4061e4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4061e8:	mov	w9, #0x1                   	// #1
  4061ec:	strb	w9, [x8, #1497]
  4061f0:	ldp	x29, x30, [sp], #32
  4061f4:	ret
  4061f8:	stp	x29, x30, [sp, #-48]!
  4061fc:	stp	x20, x19, [sp, #32]
  406200:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406204:	ldr	w8, [x20, #1240]
  406208:	adrp	x19, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40620c:	str	x21, [sp, #16]
  406210:	mov	x29, sp
  406214:	cbz	w8, 406230 <wcrtomb@plt+0x3870>
  406218:	ldr	x1, [x19, #920]
  40621c:	ldrb	w8, [x1]
  406220:	cbz	w8, 406230 <wcrtomb@plt+0x3870>
  406224:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406228:	ldr	x0, [x8, #968]
  40622c:	bl	412e70 <wcrtomb@plt+0x104b0>
  406230:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406234:	ldr	x0, [x21, #1520]
  406238:	cbnz	x0, 406250 <wcrtomb@plt+0x3890>
  40623c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  406240:	add	x1, x1, #0xd46
  406244:	mov	w2, #0x5                   	// #5
  406248:	bl	402890 <dcgettext@plt>
  40624c:	str	x0, [x21, #1520]
  406250:	bl	406c04 <wcrtomb@plt+0x4244>
  406254:	ldr	w8, [x20, #1240]
  406258:	cbz	w8, 406280 <wcrtomb@plt+0x38c0>
  40625c:	ldr	x8, [x19, #920]
  406260:	ldrb	w8, [x8]
  406264:	cbz	w8, 406280 <wcrtomb@plt+0x38c0>
  406268:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40626c:	ldr	x0, [x8, #976]
  406270:	ldp	x20, x19, [sp, #32]
  406274:	ldr	x21, [sp, #16]
  406278:	ldp	x29, x30, [sp], #48
  40627c:	b	412e74 <wcrtomb@plt+0x104b4>
  406280:	ldp	x20, x19, [sp, #32]
  406284:	ldr	x21, [sp, #16]
  406288:	ldp	x29, x30, [sp], #48
  40628c:	ret
  406290:	stp	x29, x30, [sp, #-48]!
  406294:	str	x21, [sp, #16]
  406298:	stp	x20, x19, [sp, #32]
  40629c:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4062a0:	ldr	w8, [x21, #1240]
  4062a4:	mov	w19, w0
  4062a8:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4062ac:	mov	x29, sp
  4062b0:	cbz	w8, 4062cc <wcrtomb@plt+0x390c>
  4062b4:	ldr	x1, [x20, #944]
  4062b8:	ldrb	w8, [x1]
  4062bc:	cbz	w8, 4062cc <wcrtomb@plt+0x390c>
  4062c0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4062c4:	ldr	x0, [x8, #968]
  4062c8:	bl	412e70 <wcrtomb@plt+0x104b0>
  4062cc:	and	w0, w19, #0xff
  4062d0:	bl	406310 <wcrtomb@plt+0x3950>
  4062d4:	ldr	w8, [x21, #1240]
  4062d8:	cbz	w8, 406300 <wcrtomb@plt+0x3940>
  4062dc:	ldr	x8, [x20, #944]
  4062e0:	ldrb	w8, [x8]
  4062e4:	cbz	w8, 406300 <wcrtomb@plt+0x3940>
  4062e8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4062ec:	ldr	x0, [x8, #976]
  4062f0:	ldp	x20, x19, [sp, #32]
  4062f4:	ldr	x21, [sp, #16]
  4062f8:	ldp	x29, x30, [sp], #48
  4062fc:	b	412e74 <wcrtomb@plt+0x104b4>
  406300:	ldp	x20, x19, [sp, #32]
  406304:	ldr	x21, [sp, #16]
  406308:	ldp	x29, x30, [sp], #48
  40630c:	ret
  406310:	stp	x29, x30, [sp, #-16]!
  406314:	mov	x29, sp
  406318:	bl	4025c0 <putchar_unlocked@plt>
  40631c:	tbz	w0, #31, 406330 <wcrtomb@plt+0x3970>
  406320:	bl	402930 <__errno_location@plt>
  406324:	ldr	w8, [x0]
  406328:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40632c:	str	w8, [x9, #1500]
  406330:	ldp	x29, x30, [sp], #16
  406334:	ret
  406338:	sub	sp, sp, #0x120
  40633c:	stp	x29, x30, [sp, #256]
  406340:	add	x29, sp, #0x100
  406344:	mov	x9, #0xffffffffffffffc8    	// #-56
  406348:	mov	x10, sp
  40634c:	sub	x11, x29, #0x78
  406350:	movk	x9, #0xff80, lsl #32
  406354:	add	x12, x29, #0x20
  406358:	add	x10, x10, #0x80
  40635c:	add	x11, x11, #0x38
  406360:	adrp	x13, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406364:	stp	x10, x9, [x29, #-16]
  406368:	stp	x12, x11, [x29, #-32]
  40636c:	mov	x8, x0
  406370:	stp	x1, x2, [x29, #-120]
  406374:	stp	x3, x4, [x29, #-104]
  406378:	stp	x5, x6, [x29, #-88]
  40637c:	stur	x7, [x29, #-72]
  406380:	stp	q0, q1, [sp]
  406384:	ldr	x0, [x13, #1128]
  406388:	ldp	q0, q1, [x29, #-32]
  40638c:	sub	x2, x29, #0x40
  406390:	mov	x1, x8
  406394:	str	x28, [sp, #272]
  406398:	stp	q2, q3, [sp, #32]
  40639c:	stp	q4, q5, [sp, #64]
  4063a0:	stp	q6, q7, [sp, #96]
  4063a4:	stp	q0, q1, [x29, #-64]
  4063a8:	bl	4028f0 <vfprintf@plt>
  4063ac:	tbz	w0, #31, 4063c0 <wcrtomb@plt+0x3a00>
  4063b0:	bl	402930 <__errno_location@plt>
  4063b4:	ldr	w8, [x0]
  4063b8:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4063bc:	str	w8, [x9, #1500]
  4063c0:	ldr	x28, [sp, #272]
  4063c4:	ldp	x29, x30, [sp, #256]
  4063c8:	add	sp, sp, #0x120
  4063cc:	ret
  4063d0:	stp	x29, x30, [sp, #-16]!
  4063d4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4063d8:	ldr	x0, [x8, #1128]
  4063dc:	mov	x29, sp
  4063e0:	bl	4027c0 <fflush_unlocked@plt>
  4063e4:	cbz	w0, 4063f8 <wcrtomb@plt+0x3a38>
  4063e8:	bl	402930 <__errno_location@plt>
  4063ec:	ldr	w8, [x0]
  4063f0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4063f4:	str	w8, [x9, #1500]
  4063f8:	ldp	x29, x30, [sp], #16
  4063fc:	ret
  406400:	sub	sp, sp, #0x70
  406404:	stp	x26, x25, [sp, #48]
  406408:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40640c:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406410:	stp	x22, x21, [sp, #80]
  406414:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406418:	ldr	x21, [x25, #1488]
  40641c:	ldr	x9, [x11, #1480]
  406420:	stp	x20, x19, [sp, #96]
  406424:	ldr	x20, [x8, #1592]
  406428:	stp	x28, x27, [sp, #32]
  40642c:	adrp	x27, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406430:	ldr	x28, [x27, #1472]
  406434:	add	x10, x21, x9
  406438:	sub	x10, x10, x20
  40643c:	sub	x10, x10, #0x8
  406440:	sub	x8, x20, x0
  406444:	cmp	x28, x10
  406448:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40644c:	stp	x29, x30, [sp, #16]
  406450:	stp	x24, x23, [sp, #64]
  406454:	add	x29, sp, #0x10
  406458:	str	x1, [sp, #8]
  40645c:	b.ls	406570 <wcrtomb@plt+0x3bb0>  // b.plast
  406460:	sub	x10, x9, x28
  406464:	add	x11, x28, x0
  406468:	sub	x10, x10, #0x8
  40646c:	mov	x22, x0
  406470:	cmp	x10, x11
  406474:	b.cs	406498 <wcrtomb@plt+0x3ad8>  // b.hs, b.nlast
  406478:	mov	x12, #0xfffffffffffffff7    	// #-9
  40647c:	sub	x12, x12, x28
  406480:	lsr	x12, x12, #1
  406484:	cmp	x12, x10
  406488:	b.cc	4066e0 <wcrtomb@plt+0x3d20>  // b.lo, b.ul, b.last
  40648c:	lsl	x10, x10, #1
  406490:	cmp	x10, x11
  406494:	b.cc	406484 <wcrtomb@plt+0x3ac4>  // b.lo, b.ul, b.last
  406498:	ldr	w12, [x1, #16]
  40649c:	and	w12, w12, #0xf000
  4064a0:	cmp	w12, #0x8, lsl #12
  4064a4:	b.ne	4064d0 <wcrtomb@plt+0x3b10>  // b.any
  4064a8:	ldr	x12, [x1, #48]
  4064ac:	ldr	x13, [x26, #1616]
  4064b0:	mov	x14, #0xffffffffffffffff    	// #-1
  4064b4:	sub	x12, x12, x13
  4064b8:	add	x13, x12, x22
  4064bc:	cmp	x12, x13
  4064c0:	ccmp	x12, x14, #0x4, le
  4064c4:	ccmp	x11, x13, #0x2, gt
  4064c8:	ccmp	x13, x10, #0x2, ls  // ls = plast
  4064cc:	csel	x10, x13, x10, cc  // cc = lo, ul, last
  4064d0:	add	x10, x28, x10
  4064d4:	add	x0, x10, #0x8
  4064d8:	neg	x24, x22
  4064dc:	cmp	x9, x0
  4064e0:	sub	x19, x8, x21
  4064e4:	mov	x23, x21
  4064e8:	b.cs	406504 <wcrtomb@plt+0x3b44>  // b.hs, b.nlast
  4064ec:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4064f0:	str	x0, [x8, #1480]
  4064f4:	bl	412738 <wcrtomb@plt+0xfd78>
  4064f8:	ldr	x28, [x27, #1472]
  4064fc:	ldr	x21, [x25, #1488]
  406500:	mov	x23, x0
  406504:	add	x8, x23, x22
  406508:	add	x10, x8, #0x1
  40650c:	udiv	x11, x10, x28
  406510:	msub	x11, x11, x28, x10
  406514:	sub	x12, x28, x11
  406518:	cmp	x11, #0x0
  40651c:	add	x10, x10, x12
  406520:	csinc	x20, x10, x8, ne  // ne = any
  406524:	add	x24, x20, x24
  406528:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40652c:	add	x1, x21, x19
  406530:	mov	x0, x24
  406534:	mov	x2, x22
  406538:	str	x24, [x9, #1584]
  40653c:	bl	402340 <memmove@plt>
  406540:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  406544:	ldrb	w8, [x8, #2260]
  406548:	cmp	x23, x21
  40654c:	sturb	w8, [x24, #-1]
  406550:	b.eq	406568 <wcrtomb@plt+0x3ba8>  // b.none
  406554:	mov	x0, x21
  406558:	bl	402770 <free@plt>
  40655c:	ldr	x28, [x27, #1472]
  406560:	mov	x21, x23
  406564:	str	x23, [x25, #1488]
  406568:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40656c:	b	406578 <wcrtomb@plt+0x3bb8>
  406570:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406574:	str	x8, [x9, #1584]
  406578:	ldr	x8, [x11, #1480]
  40657c:	adrp	x27, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406580:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406584:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406588:	add	x8, x21, x8
  40658c:	sub	x8, x8, x20
  406590:	sub	x8, x8, #0x8
  406594:	udiv	x8, x8, x28
  406598:	adrp	x19, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40659c:	mul	x22, x8, x28
  4065a0:	mov	w21, #0x1                   	// #1
  4065a4:	ldr	w0, [x27, #1608]
  4065a8:	mov	x1, x20
  4065ac:	mov	x2, x22
  4065b0:	bl	41218c <wcrtomb@plt+0xf7cc>
  4065b4:	ldrb	w9, [x24, #1576]
  4065b8:	cmn	x0, #0x1
  4065bc:	ldr	x8, [x26, #1616]
  4065c0:	csel	x1, xzr, x0, eq  // eq = none
  4065c4:	cset	w10, ne  // ne = any
  4065c8:	cmp	x1, #0x0
  4065cc:	and	w21, w21, w10
  4065d0:	cset	w10, eq  // eq = none
  4065d4:	eor	w9, w9, #0x1
  4065d8:	add	x8, x1, x8
  4065dc:	orr	w9, w9, w10
  4065e0:	str	x8, [x26, #1616]
  4065e4:	cbnz	w9, 4066ac <wcrtomb@plt+0x3cec>
  4065e8:	cmp	x1, #0x1
  4065ec:	add	x8, x20, x1
  4065f0:	mov	x9, x20
  4065f4:	b.lt	406608 <wcrtomb@plt+0x3c48>  // b.tstop
  4065f8:	ldrb	w10, [x9], #1
  4065fc:	cbnz	w10, 4066ac <wcrtomb@plt+0x3cec>
  406600:	cmp	x9, x8
  406604:	b.cc	4065f8 <wcrtomb@plt+0x3c38>  // b.lo, b.ul, b.last
  406608:	ldr	x0, [x25, #1544]
  40660c:	bl	406b48 <wcrtomb@plt+0x4188>
  406610:	ldrb	w8, [x19, #1628]
  406614:	str	x0, [x25, #1544]
  406618:	cbnz	w8, 4065a4 <wcrtomb@plt+0x3be4>
  40661c:	ldr	w0, [x27, #1608]
  406620:	ldr	x1, [x26, #1616]
  406624:	mov	w2, #0x3                   	// #3
  406628:	bl	402440 <lseek@plt>
  40662c:	mov	x23, x0
  406630:	tbnz	x0, #63, 406650 <wcrtomb@plt+0x3c90>
  406634:	ldr	x8, [x26, #1616]
  406638:	ldr	x0, [x25, #1544]
  40663c:	sub	x1, x23, x8
  406640:	bl	406b48 <wcrtomb@plt+0x4188>
  406644:	str	x0, [x25, #1544]
  406648:	str	x23, [x26, #1616]
  40664c:	b	4065a4 <wcrtomb@plt+0x3be4>
  406650:	bl	402930 <__errno_location@plt>
  406654:	ldr	w8, [x0]
  406658:	cmp	w8, #0x6
  40665c:	b.ne	4066a0 <wcrtomb@plt+0x3ce0>  // b.any
  406660:	ldr	x8, [sp, #8]
  406664:	ldr	w8, [x8, #16]
  406668:	and	w8, w8, #0xf000
  40666c:	cmp	w8, #0x8, lsl #12
  406670:	b.ne	4066a0 <wcrtomb@plt+0x3ce0>  // b.any
  406674:	ldr	x9, [sp, #8]
  406678:	ldr	x8, [x26, #1616]
  40667c:	ldr	x9, [x9, #48]
  406680:	cmp	x8, x9
  406684:	b.ge	4066a0 <wcrtomb@plt+0x3ce0>  // b.tcont
  406688:	ldr	w0, [x27, #1608]
  40668c:	mov	w2, #0x2                   	// #2
  406690:	mov	x1, xzr
  406694:	bl	402440 <lseek@plt>
  406698:	mov	x23, x0
  40669c:	tbz	x0, #63, 406634 <wcrtomb@plt+0x3c74>
  4066a0:	mov	w8, #0x1                   	// #1
  4066a4:	strb	w8, [x19, #1628]
  4066a8:	b	4065a4 <wcrtomb@plt+0x3be4>
  4066ac:	add	x8, x20, x1
  4066b0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4066b4:	str	x8, [x9, #1592]
  4066b8:	str	xzr, [x20, x1]
  4066bc:	mov	w0, w21
  4066c0:	ldp	x20, x19, [sp, #96]
  4066c4:	ldp	x22, x21, [sp, #80]
  4066c8:	ldp	x24, x23, [sp, #64]
  4066cc:	ldp	x26, x25, [sp, #48]
  4066d0:	ldp	x28, x27, [sp, #32]
  4066d4:	ldp	x29, x30, [sp, #16]
  4066d8:	add	sp, sp, #0x70
  4066dc:	ret
  4066e0:	bl	412920 <wcrtomb@plt+0xff60>
  4066e4:	sub	sp, sp, #0x70
  4066e8:	stp	x26, x25, [sp, #48]
  4066ec:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4066f0:	ldr	x8, [x25, #1552]
  4066f4:	cmp	x0, x1
  4066f8:	stp	x29, x30, [sp, #16]
  4066fc:	stp	x28, x27, [sp, #32]
  406700:	stp	x24, x23, [sp, #64]
  406704:	stp	x22, x21, [sp, #80]
  406708:	stp	x20, x19, [sp, #96]
  40670c:	add	x29, sp, #0x10
  406710:	str	x8, [sp]
  406714:	b.cs	406a58 <wcrtomb@plt+0x4098>  // b.hs, b.nlast
  406718:	mov	x28, x1
  40671c:	mov	x20, x0
  406720:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406724:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406728:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40672c:	adrp	x27, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406730:	ldr	x8, [x22, #1448]
  406734:	ldr	x0, [x23, #1456]
  406738:	sub	x21, x28, x20
  40673c:	add	x3, sp, #0x8
  406740:	mov	x1, x20
  406744:	mov	x2, x21
  406748:	mov	x4, xzr
  40674c:	blr	x8
  406750:	cmn	x0, #0x1
  406754:	b.eq	406780 <wcrtomb@plt+0x3dc0>  // b.none
  406758:	ldrb	w8, [x26, #1236]
  40675c:	ldr	x11, [sp, #8]
  406760:	add	x9, x20, x0
  406764:	cmp	w8, #0x0
  406768:	cset	w10, eq  // eq = none
  40676c:	cmp	x9, x28
  406770:	add	x19, x9, x11
  406774:	b.ne	4067a0 <wcrtomb@plt+0x3de0>  // b.any
  406778:	cbnz	w8, 4067a0 <wcrtomb@plt+0x3de0>
  40677c:	b	406a58 <wcrtomb@plt+0x4098>
  406780:	ldrb	w8, [x26, #1236]
  406784:	cbz	w8, 406a58 <wcrtomb@plt+0x4098>
  406788:	mov	w10, wzr
  40678c:	str	xzr, [sp, #8]
  406790:	mov	w8, #0x1                   	// #1
  406794:	mov	x19, x28
  406798:	mov	x9, x28
  40679c:	mov	x0, x21
  4067a0:	cmp	x0, #0x0
  4067a4:	b.gt	4067ac <wcrtomb@plt+0x3dec>
  4067a8:	cbz	w10, 406a38 <wcrtomb@plt+0x4078>
  4067ac:	adrp	x11, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4067b0:	ldrb	w10, [x27, #1440]
  4067b4:	ldrb	w21, [x11, #2260]
  4067b8:	cmp	w8, #0x0
  4067bc:	csel	x22, x20, x9, ne  // ne = any
  4067c0:	csel	x20, x9, x19, ne  // ne = any
  4067c4:	cbnz	w10, 4067e4 <wcrtomb@plt+0x3e24>
  4067c8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4067cc:	ldr	x8, [x8, #1568]
  4067d0:	cmp	x8, #0x1
  4067d4:	b.lt	4067e4 <wcrtomb@plt+0x3e24>  // b.tstop
  4067d8:	mov	x0, x22
  4067dc:	bl	406aa8 <wcrtomb@plt+0x40e8>
  4067e0:	ldrb	w10, [x27, #1440]
  4067e4:	mov	x24, x22
  4067e8:	cbnz	w10, 40692c <wcrtomb@plt+0x3f6c>
  4067ec:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4067f0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4067f4:	ldr	x8, [x8, #1536]
  4067f8:	ldr	x10, [x9, #1584]
  4067fc:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406800:	ldr	x9, [x9, #1192]
  406804:	cmp	x8, #0x0
  406808:	csel	x10, x10, x8, eq  // eq = none
  40680c:	mov	x23, x22
  406810:	cmp	x9, #0x1
  406814:	b.lt	406854 <wcrtomb@plt+0x3e94>  // b.tstop
  406818:	mov	x11, xzr
  40681c:	mov	x12, x22
  406820:	cmp	x12, x10
  406824:	b.ls	406840 <wcrtomb@plt+0x3e80>  // b.plast
  406828:	ldurb	w13, [x12, #-2]
  40682c:	sub	x23, x12, #0x1
  406830:	mov	x12, x23
  406834:	cmp	w13, w21
  406838:	b.ne	406828 <wcrtomb@plt+0x3e68>  // b.any
  40683c:	b	406844 <wcrtomb@plt+0x3e84>
  406840:	mov	x23, x12
  406844:	add	x11, x11, #0x1
  406848:	cmp	x11, x9
  40684c:	mov	x12, x23
  406850:	b.ne	406820 <wcrtomb@plt+0x3e60>  // b.any
  406854:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406858:	ldr	x10, [x10, #1200]
  40685c:	tst	x10, x9
  406860:	b.lt	4068ec <wcrtomb@plt+0x3f2c>  // b.tstop
  406864:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406868:	ldrb	w9, [x9, #1629]
  40686c:	cmp	w9, #0x1
  406870:	b.ne	4068ec <wcrtomb@plt+0x3f2c>  // b.any
  406874:	cmp	x23, x8
  406878:	b.eq	4068ec <wcrtomb@plt+0x3f2c>  // b.none
  40687c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406880:	ldr	x0, [x8, #888]
  406884:	cbz	x0, 4068ec <wcrtomb@plt+0x3f2c>
  406888:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40688c:	ldr	w8, [x8, #1240]
  406890:	cbz	w8, 4068b8 <wcrtomb@plt+0x3ef8>
  406894:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406898:	ldr	x1, [x8, #944]
  40689c:	ldrb	w8, [x1]
  4068a0:	cbz	w8, 4068b8 <wcrtomb@plt+0x3ef8>
  4068a4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4068a8:	ldr	x0, [x8, #968]
  4068ac:	bl	412e70 <wcrtomb@plt+0x104b0>
  4068b0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4068b4:	ldr	x0, [x8, #888]
  4068b8:	bl	406c04 <wcrtomb@plt+0x4244>
  4068bc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4068c0:	ldr	w8, [x8, #1240]
  4068c4:	cbz	w8, 4068e4 <wcrtomb@plt+0x3f24>
  4068c8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4068cc:	ldr	x8, [x8, #944]
  4068d0:	ldrb	w8, [x8]
  4068d4:	cbz	w8, 4068e4 <wcrtomb@plt+0x3f24>
  4068d8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4068dc:	ldr	x0, [x8, #976]
  4068e0:	bl	412e74 <wcrtomb@plt+0x104b4>
  4068e4:	mov	w0, #0xa                   	// #10
  4068e8:	bl	406310 <wcrtomb@plt+0x3950>
  4068ec:	cmp	x23, x22
  4068f0:	b.cs	406928 <wcrtomb@plt+0x3f68>  // b.hs, b.nlast
  4068f4:	sub	x2, x22, x23
  4068f8:	mov	x0, x23
  4068fc:	mov	w1, w21
  406900:	bl	402820 <memchr@plt>
  406904:	add	x24, x0, #0x1
  406908:	mov	w2, #0x2d                  	// #45
  40690c:	mov	x0, x23
  406910:	mov	x1, x24
  406914:	bl	406c34 <wcrtomb@plt+0x4274>
  406918:	cmp	x24, x22
  40691c:	mov	x23, x24
  406920:	b.cc	4068f4 <wcrtomb@plt+0x3f34>  // b.lo, b.ul, b.last
  406924:	b	40692c <wcrtomb@plt+0x3f6c>
  406928:	mov	x24, x23
  40692c:	ldrb	w8, [x26, #1236]
  406930:	cbz	w8, 40699c <wcrtomb@plt+0x3fdc>
  406934:	cmp	x24, x20
  406938:	mov	x23, xzr
  40693c:	b.cs	4069c0 <wcrtomb@plt+0x4000>  // b.hs, b.nlast
  406940:	ldr	x26, [x25, #1552]
  406944:	cmp	x26, #0x1
  406948:	b.lt	4069c0 <wcrtomb@plt+0x4000>  // b.tstop
  40694c:	mov	x23, xzr
  406950:	sub	x2, x20, x24
  406954:	mov	x0, x24
  406958:	mov	w1, w21
  40695c:	bl	402820 <memchr@plt>
  406960:	ldrb	w8, [x27, #1440]
  406964:	add	x22, x0, #0x1
  406968:	cbnz	w8, 406980 <wcrtomb@plt+0x3fc0>
  40696c:	mov	w2, #0x3a                  	// #58
  406970:	mov	x0, x24
  406974:	mov	x1, x22
  406978:	bl	406c34 <wcrtomb@plt+0x4274>
  40697c:	ldr	x26, [x25, #1552]
  406980:	cmp	x22, x20
  406984:	add	x23, x23, #0x1
  406988:	b.cs	4069c4 <wcrtomb@plt+0x4004>  // b.hs, b.nlast
  40698c:	cmp	x23, x26
  406990:	mov	x24, x22
  406994:	b.lt	406950 <wcrtomb@plt+0x3f90>  // b.tstop
  406998:	b	4069c4 <wcrtomb@plt+0x4004>
  40699c:	ldrb	w8, [x27, #1440]
  4069a0:	cbnz	w8, 4069b4 <wcrtomb@plt+0x3ff4>
  4069a4:	mov	w2, #0x3a                  	// #58
  4069a8:	mov	x0, x22
  4069ac:	mov	x1, x20
  4069b0:	bl	406c34 <wcrtomb@plt+0x4274>
  4069b4:	mov	x22, x20
  4069b8:	mov	w23, #0x1                   	// #1
  4069bc:	b	4069c4 <wcrtomb@plt+0x4004>
  4069c0:	mov	x22, x24
  4069c4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4069c8:	adrp	x11, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4069cc:	ldr	x8, [x8, #1616]
  4069d0:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4069d4:	ldr	x11, [x11, #1200]
  4069d8:	ldr	x9, [x9, #1592]
  4069dc:	ldrb	w10, [x27, #1440]
  4069e0:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4069e4:	mov	w13, #0x1                   	// #1
  4069e8:	strb	w13, [x12, #1629]
  4069ec:	ldr	x12, [x25, #1552]
  4069f0:	add	x8, x8, x22
  4069f4:	cmp	x11, #0x0
  4069f8:	sub	x8, x8, x9
  4069fc:	ccmp	w10, #0x0, #0x0, gt
  406a00:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a04:	str	x8, [x9, #1560]
  406a08:	csel	x8, x11, xzr, eq  // eq = none
  406a0c:	subs	x9, x12, x23
  406a10:	adrp	x10, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a14:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a18:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a1c:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a20:	str	x8, [x10, #1568]
  406a24:	str	x9, [x25, #1552]
  406a28:	b.eq	406a48 <wcrtomb@plt+0x4088>  // b.none
  406a2c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a30:	ldrb	w8, [x8, #1436]
  406a34:	cbnz	w8, 406a48 <wcrtomb@plt+0x4088>
  406a38:	cmp	x19, x28
  406a3c:	mov	x20, x19
  406a40:	b.cc	406730 <wcrtomb@plt+0x3d70>  // b.lo, b.ul, b.last
  406a44:	b	406a58 <wcrtomb@plt+0x4098>
  406a48:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a4c:	ldrb	w8, [x8, #1229]
  406a50:	cmp	w8, #0x1
  406a54:	b.eq	406a84 <wcrtomb@plt+0x40c4>  // b.none
  406a58:	ldr	x8, [x25, #1552]
  406a5c:	ldr	x9, [sp]
  406a60:	ldp	x20, x19, [sp, #96]
  406a64:	ldp	x22, x21, [sp, #80]
  406a68:	ldp	x24, x23, [sp, #64]
  406a6c:	ldp	x26, x25, [sp, #48]
  406a70:	ldp	x28, x27, [sp, #32]
  406a74:	ldp	x29, x30, [sp, #16]
  406a78:	sub	x0, x9, x8
  406a7c:	add	sp, sp, #0x70
  406a80:	ret
  406a84:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a88:	ldrb	w8, [x8, #1497]
  406a8c:	cmp	w8, #0x1
  406a90:	b.ne	406aa0 <wcrtomb@plt+0x40e0>  // b.any
  406a94:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406a98:	ldr	w0, [x8, #992]
  406a9c:	bl	4023a0 <exit@plt>
  406aa0:	mov	w0, wzr
  406aa4:	bl	4023a0 <exit@plt>
  406aa8:	stp	x29, x30, [sp, #-64]!
  406aac:	stp	x22, x21, [sp, #32]
  406ab0:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406ab4:	stp	x20, x19, [sp, #48]
  406ab8:	ldr	x20, [x21, #1536]
  406abc:	mov	x19, x0
  406ac0:	str	x23, [sp, #16]
  406ac4:	mov	x29, sp
  406ac8:	cbnz	x20, 406ad8 <wcrtomb@plt+0x4118>
  406acc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406ad0:	ldr	x20, [x8, #1584]
  406ad4:	str	x20, [x21, #1536]
  406ad8:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406adc:	ldr	x8, [x22, #1568]
  406ae0:	cmp	x8, #0x1
  406ae4:	b.lt	406b34 <wcrtomb@plt+0x4174>  // b.tstop
  406ae8:	cmp	x20, x19
  406aec:	b.cs	406b34 <wcrtomb@plt+0x4174>  // b.hs, b.nlast
  406af0:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0x3b88>
  406af4:	ldrb	w1, [x23, #2260]
  406af8:	sub	x2, x19, x20
  406afc:	mov	x0, x20
  406b00:	bl	402820 <memchr@plt>
  406b04:	add	x1, x0, #0x1
  406b08:	mov	w2, #0x2d                  	// #45
  406b0c:	mov	x0, x20
  406b10:	bl	406c34 <wcrtomb@plt+0x4274>
  406b14:	ldr	x8, [x22, #1568]
  406b18:	sub	x9, x8, #0x1
  406b1c:	cmp	x8, #0x2
  406b20:	str	x9, [x22, #1568]
  406b24:	b.lt	406b34 <wcrtomb@plt+0x4174>  // b.tstop
  406b28:	ldr	x20, [x21, #1536]
  406b2c:	cmp	x20, x19
  406b30:	b.cc	406af4 <wcrtomb@plt+0x4134>  // b.lo, b.ul, b.last
  406b34:	ldp	x20, x19, [sp, #48]
  406b38:	ldp	x22, x21, [sp, #32]
  406b3c:	ldr	x23, [sp, #16]
  406b40:	ldp	x29, x30, [sp], #64
  406b44:	ret
  406b48:	adds	x0, x1, x0
  406b4c:	b.cs	406b54 <wcrtomb@plt+0x4194>  // b.hs, b.nlast
  406b50:	ret
  406b54:	stp	x29, x30, [sp, #-16]!
  406b58:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  406b5c:	add	x1, x1, #0xd80
  406b60:	mov	w2, #0x5                   	// #5
  406b64:	mov	x0, xzr
  406b68:	mov	x29, sp
  406b6c:	bl	402890 <dcgettext@plt>
  406b70:	mov	x2, x0
  406b74:	mov	w0, #0x2                   	// #2
  406b78:	mov	w1, wzr
  406b7c:	bl	4023b0 <error@plt>
  406b80:	stp	x29, x30, [sp, #-48]!
  406b84:	stp	x22, x21, [sp, #16]
  406b88:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406b8c:	ldr	x8, [x22, #1600]
  406b90:	stp	x20, x19, [sp, #32]
  406b94:	mov	x19, x0
  406b98:	mov	x29, sp
  406b9c:	cmp	x8, x0
  406ba0:	b.cs	406bd8 <wcrtomb@plt+0x4218>  // b.hs, b.nlast
  406ba4:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  406ba8:	ldrb	w21, [x9, #2260]
  406bac:	mov	x20, xzr
  406bb0:	sub	x2, x19, x8
  406bb4:	mov	x0, x8
  406bb8:	mov	w1, w21
  406bbc:	bl	402820 <memchr@plt>
  406bc0:	cbz	x0, 406bdc <wcrtomb@plt+0x421c>
  406bc4:	add	x8, x0, #0x1
  406bc8:	cmp	x8, x19
  406bcc:	add	x20, x20, #0x1
  406bd0:	b.cc	406bb0 <wcrtomb@plt+0x41f0>  // b.lo, b.ul, b.last
  406bd4:	b	406bdc <wcrtomb@plt+0x421c>
  406bd8:	mov	x20, xzr
  406bdc:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406be0:	ldr	x0, [x21, #1544]
  406be4:	mov	x1, x20
  406be8:	bl	406b48 <wcrtomb@plt+0x4188>
  406bec:	str	x0, [x21, #1544]
  406bf0:	str	x19, [x22, #1600]
  406bf4:	ldp	x20, x19, [sp, #32]
  406bf8:	ldp	x22, x21, [sp, #16]
  406bfc:	ldp	x29, x30, [sp], #48
  406c00:	ret
  406c04:	stp	x29, x30, [sp, #-16]!
  406c08:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406c0c:	ldr	x1, [x8, #1128]
  406c10:	mov	x29, sp
  406c14:	bl	4028a0 <fputs_unlocked@plt>
  406c18:	tbz	w0, #31, 406c2c <wcrtomb@plt+0x426c>
  406c1c:	bl	402930 <__errno_location@plt>
  406c20:	ldr	w8, [x0]
  406c24:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406c28:	str	w8, [x9, #1500]
  406c2c:	ldp	x29, x30, [sp], #16
  406c30:	ret
  406c34:	sub	sp, sp, #0x70
  406c38:	stp	x26, x25, [sp, #48]
  406c3c:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406c40:	ldrb	w8, [x26, #1208]
  406c44:	stp	x22, x21, [sp, #80]
  406c48:	stp	x20, x19, [sp, #96]
  406c4c:	mov	w21, w2
  406c50:	mov	x19, x1
  406c54:	mov	x20, x0
  406c58:	stp	x29, x30, [sp, #16]
  406c5c:	stp	x28, x27, [sp, #32]
  406c60:	stp	x24, x23, [sp, #64]
  406c64:	add	x29, sp, #0x10
  406c68:	tbnz	w8, #0, 406c88 <wcrtomb@plt+0x42c8>
  406c6c:	mvn	x8, x20
  406c70:	add	x1, x19, x8
  406c74:	mov	x0, x20
  406c78:	mov	x2, x19
  406c7c:	mov	w3, w21
  406c80:	bl	406fc8 <wcrtomb@plt+0x4608>
  406c84:	tbz	w0, #0, 406f84 <wcrtomb@plt+0x45c4>
  406c88:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406c8c:	adrp	x28, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406c90:	ldr	w11, [x28, #1240]
  406c94:	ldrb	w9, [x8, #1236]
  406c98:	and	w8, w21, #0xff
  406c9c:	cmp	w8, #0x3a
  406ca0:	cset	w10, eq  // eq = none
  406ca4:	cbz	w11, 406d00 <wcrtomb@plt+0x4340>
  406ca8:	cmp	w9, #0x0
  406cac:	cset	w14, ne  // ne = any
  406cb0:	cmp	w11, #0x0
  406cb4:	cset	w15, lt  // lt = tstop
  406cb8:	cmp	w8, #0x3a
  406cbc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406cc0:	and	w14, w14, w15
  406cc4:	adrp	x15, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406cc8:	add	x8, x8, #0x388
  406ccc:	add	x15, x15, #0x380
  406cd0:	csel	x8, x8, x15, eq  // eq = none
  406cd4:	cset	w15, eq  // eq = none
  406cd8:	adrp	x12, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406cdc:	adrp	x13, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406ce0:	eor	w14, w15, w14
  406ce4:	add	x12, x12, #0x3b8
  406ce8:	add	x13, x13, #0x3c0
  406cec:	cmp	w14, #0x0
  406cf0:	csel	x12, x12, x13, ne  // ne = any
  406cf4:	ldr	x21, [x12]
  406cf8:	ldr	x22, [x8]
  406cfc:	b	406d08 <wcrtomb@plt+0x4348>
  406d00:	mov	x21, xzr
  406d04:	mov	x22, xzr
  406d08:	ldrb	w8, [x26, #1208]
  406d0c:	cmp	w9, w10
  406d10:	b.eq	406d18 <wcrtomb@plt+0x4358>  // b.none
  406d14:	tbnz	w8, #0, 406d2c <wcrtomb@plt+0x436c>
  406d18:	cbz	w11, 406f3c <wcrtomb@plt+0x457c>
  406d1c:	ldrb	w11, [x21]
  406d20:	cbnz	w11, 406d2c <wcrtomb@plt+0x436c>
  406d24:	ldrb	w11, [x22]
  406d28:	cbz	w11, 406f3c <wcrtomb@plt+0x457c>
  406d2c:	cmp	w9, w10
  406d30:	b.eq	406ea0 <wcrtomb@plt+0x44e0>  // b.none
  406d34:	tbnz	w8, #0, 406d40 <wcrtomb@plt+0x4380>
  406d38:	ldrb	w9, [x22]
  406d3c:	cbz	w9, 406ea8 <wcrtomb@plt+0x44e8>
  406d40:	cmp	x20, x19
  406d44:	b.cs	406e88 <wcrtomb@plt+0x44c8>  // b.hs, b.nlast
  406d48:	mov	x27, xzr
  406d4c:	sub	x23, x19, x20
  406d50:	mov	x25, x20
  406d54:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406d58:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406d5c:	ldr	x8, [x8, #1448]
  406d60:	ldr	x0, [x9, #1456]
  406d64:	add	x3, sp, #0x8
  406d68:	mov	x1, x20
  406d6c:	mov	x2, x23
  406d70:	mov	x4, x25
  406d74:	blr	x8
  406d78:	cmn	x0, #0x1
  406d7c:	b.eq	406e7c <wcrtomb@plt+0x44bc>  // b.none
  406d80:	add	x24, x20, x0
  406d84:	cmp	x24, x19
  406d88:	b.eq	406e7c <wcrtomb@plt+0x44bc>  // b.none
  406d8c:	ldr	x1, [sp, #8]
  406d90:	cbz	x1, 406dcc <wcrtomb@plt+0x440c>
  406d94:	ldrb	w8, [x26, #1208]
  406d98:	cmp	w8, #0x1
  406d9c:	b.ne	406de0 <wcrtomb@plt+0x4420>  // b.any
  406da0:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406da4:	ldrb	w8, [x8, #1236]
  406da8:	mov	w9, #0x3a                  	// #58
  406dac:	mov	x0, x24
  406db0:	mov	x2, x19
  406db4:	cmp	w8, #0x0
  406db8:	mov	w8, #0x2d                  	// #45
  406dbc:	csel	w3, w9, w8, eq  // eq = none
  406dc0:	bl	406fc8 <wcrtomb@plt+0x4608>
  406dc4:	tbnz	w0, #0, 406e0c <wcrtomb@plt+0x444c>
  406dc8:	b	406f84 <wcrtomb@plt+0x45c4>
  406dcc:	mov	w8, #0x1                   	// #1
  406dd0:	cmp	x27, #0x0
  406dd4:	str	x8, [sp, #8]
  406dd8:	csel	x27, x25, x27, eq  // eq = none
  406ddc:	b	406e6c <wcrtomb@plt+0x44ac>
  406de0:	ldrb	w8, [x21]
  406de4:	cbz	w8, 406df8 <wcrtomb@plt+0x4438>
  406de8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406dec:	ldr	x0, [x8, #968]
  406df0:	mov	x1, x21
  406df4:	bl	412e70 <wcrtomb@plt+0x104b0>
  406df8:	cmp	x27, #0x0
  406dfc:	csel	x0, x25, x27, eq  // eq = none
  406e00:	sub	x1, x24, x0
  406e04:	bl	4071d8 <wcrtomb@plt+0x4818>
  406e08:	mov	x27, xzr
  406e0c:	ldr	w8, [x28, #1240]
  406e10:	cbz	w8, 406e2c <wcrtomb@plt+0x446c>
  406e14:	ldrb	w8, [x22]
  406e18:	cbz	w8, 406e2c <wcrtomb@plt+0x446c>
  406e1c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406e20:	ldr	x0, [x8, #968]
  406e24:	mov	x1, x22
  406e28:	bl	412e70 <wcrtomb@plt+0x104b0>
  406e2c:	ldr	x1, [sp, #8]
  406e30:	mov	x0, x24
  406e34:	bl	4071d8 <wcrtomb@plt+0x4818>
  406e38:	ldr	w8, [x28, #1240]
  406e3c:	cbz	w8, 406e54 <wcrtomb@plt+0x4494>
  406e40:	ldrb	w8, [x22]
  406e44:	cbz	w8, 406e54 <wcrtomb@plt+0x4494>
  406e48:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406e4c:	ldr	x0, [x8, #976]
  406e50:	bl	412e74 <wcrtomb@plt+0x104b4>
  406e54:	ldrb	w8, [x26, #1208]
  406e58:	cmp	w8, #0x1
  406e5c:	b.ne	406e6c <wcrtomb@plt+0x44ac>  // b.any
  406e60:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  406e64:	ldrb	w0, [x8, #2260]
  406e68:	bl	406310 <wcrtomb@plt+0x3950>
  406e6c:	ldr	x8, [sp, #8]
  406e70:	add	x25, x24, x8
  406e74:	cmp	x25, x19
  406e78:	b.cc	406d54 <wcrtomb@plt+0x4394>  // b.lo, b.ul, b.last
  406e7c:	ldrb	w8, [x26, #1208]
  406e80:	mov	x20, x25
  406e84:	b	406e8c <wcrtomb@plt+0x44cc>
  406e88:	mov	x27, xzr
  406e8c:	cmp	x27, #0x0
  406e90:	csel	x9, x20, x27, eq  // eq = none
  406e94:	cmp	w8, #0x0
  406e98:	csel	x20, x19, x9, ne  // ne = any
  406e9c:	cbz	x20, 406f84 <wcrtomb@plt+0x45c4>
  406ea0:	mov	x22, x20
  406ea4:	tbnz	w8, #0, 406f40 <wcrtomb@plt+0x4580>
  406ea8:	ldrb	w8, [x21]
  406eac:	cbz	w8, 406f3c <wcrtomb@plt+0x457c>
  406eb0:	cmp	x20, x19
  406eb4:	b.cs	406ed0 <wcrtomb@plt+0x4510>  // b.hs, b.nlast
  406eb8:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  406ebc:	ldurb	w8, [x19, #-1]
  406ec0:	ldrb	w9, [x9, #2260]
  406ec4:	cmp	w8, w9
  406ec8:	cset	w8, eq  // eq = none
  406ecc:	b	406ed4 <wcrtomb@plt+0x4514>
  406ed0:	mov	x8, xzr
  406ed4:	sub	x9, x19, x8
  406ed8:	cmp	x9, x20
  406edc:	b.ls	406ef4 <wcrtomb@plt+0x4534>  // b.plast
  406ee0:	mvn	x9, x8
  406ee4:	ldrb	w9, [x19, x9]
  406ee8:	cmp	w9, #0xd
  406eec:	cset	w9, eq  // eq = none
  406ef0:	b	406ef8 <wcrtomb@plt+0x4538>
  406ef4:	mov	x9, xzr
  406ef8:	add	x8, x8, x9
  406efc:	sub	x22, x19, x8
  406f00:	subs	x23, x22, x20
  406f04:	b.eq	406f3c <wcrtomb@plt+0x457c>  // b.none
  406f08:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406f0c:	ldr	x0, [x8, #968]
  406f10:	mov	x1, x21
  406f14:	bl	412e70 <wcrtomb@plt+0x104b0>
  406f18:	mov	x0, x20
  406f1c:	mov	x1, x23
  406f20:	bl	4071d8 <wcrtomb@plt+0x4818>
  406f24:	ldrb	w8, [x21]
  406f28:	cbz	w8, 406f40 <wcrtomb@plt+0x4580>
  406f2c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406f30:	ldr	x0, [x8, #976]
  406f34:	bl	412e74 <wcrtomb@plt+0x104b4>
  406f38:	b	406f40 <wcrtomb@plt+0x4580>
  406f3c:	mov	x22, x20
  406f40:	cmp	x22, x19
  406f44:	b.cs	406f5c <wcrtomb@plt+0x459c>  // b.hs, b.nlast
  406f48:	ldrb	w8, [x26, #1208]
  406f4c:	cbnz	w8, 406f5c <wcrtomb@plt+0x459c>
  406f50:	sub	x1, x19, x22
  406f54:	mov	x0, x22
  406f58:	bl	4071d8 <wcrtomb@plt+0x4818>
  406f5c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406f60:	ldrb	w8, [x8, #1280]
  406f64:	cmp	w8, #0x1
  406f68:	b.ne	406f70 <wcrtomb@plt+0x45b0>  // b.any
  406f6c:	bl	4063d0 <wcrtomb@plt+0x3a10>
  406f70:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406f74:	ldr	w20, [x8, #1500]
  406f78:	cbnz	w20, 406fa4 <wcrtomb@plt+0x45e4>
  406f7c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406f80:	str	x19, [x8, #1536]
  406f84:	ldp	x20, x19, [sp, #96]
  406f88:	ldp	x22, x21, [sp, #80]
  406f8c:	ldp	x24, x23, [sp, #64]
  406f90:	ldp	x26, x25, [sp, #48]
  406f94:	ldp	x28, x27, [sp, #32]
  406f98:	ldp	x29, x30, [sp, #16]
  406f9c:	add	sp, sp, #0x70
  406fa0:	ret
  406fa4:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  406fa8:	add	x1, x1, #0xd6f
  406fac:	mov	w2, #0x5                   	// #5
  406fb0:	mov	x0, xzr
  406fb4:	bl	402890 <dcgettext@plt>
  406fb8:	mov	x2, x0
  406fbc:	mov	w0, #0x2                   	// #2
  406fc0:	mov	w1, w20
  406fc4:	bl	4023b0 <error@plt>
  406fc8:	sub	sp, sp, #0x60
  406fcc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  406fd0:	ldr	w8, [x8, #1216]
  406fd4:	stp	x22, x21, [sp, #64]
  406fd8:	stp	x20, x19, [sp, #80]
  406fdc:	mov	w20, w3
  406fe0:	mov	x22, x2
  406fe4:	mov	x19, x1
  406fe8:	cmp	w8, #0x1
  406fec:	mov	x21, x0
  406ff0:	stp	x29, x30, [sp, #16]
  406ff4:	stp	x26, x25, [sp, #32]
  406ff8:	stp	x24, x23, [sp, #48]
  406ffc:	add	x29, sp, #0x10
  407000:	b.eq	407098 <wcrtomb@plt+0x46d8>  // b.none
  407004:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407008:	ldr	x8, [x24, #1512]
  40700c:	cbz	x8, 407098 <wcrtomb@plt+0x46d8>
  407010:	add	x25, x21, x19
  407014:	ldrb	w26, [x25]
  407018:	mov	w9, #0xff                  	// #255
  40701c:	mov	x23, x21
  407020:	str	xzr, [sp, #8]
  407024:	strb	w9, [x25]
  407028:	tst	x23, #0x7
  40702c:	b.eq	407044 <wcrtomb@plt+0x4684>  // b.none
  407030:	ldrb	w9, [x23]
  407034:	tst	x8, x9
  407038:	b.ne	407068 <wcrtomb@plt+0x46a8>  // b.any
  40703c:	add	x23, x23, #0x1
  407040:	b	407028 <wcrtomb@plt+0x4668>
  407044:	sub	x23, x23, #0x8
  407048:	ldr	x9, [x23, #8]!
  40704c:	ands	x9, x9, x8
  407050:	b.eq	407048 <wcrtomb@plt+0x4688>  // b.none
  407054:	tst	x9, #0xff
  407058:	b.ne	407068 <wcrtomb@plt+0x46a8>  // b.any
  40705c:	ldrb	w9, [x23, #1]!
  407060:	tst	x8, x9
  407064:	b.eq	40705c <wcrtomb@plt+0x469c>  // b.none
  407068:	cmp	x23, x25
  40706c:	b.cs	407094 <wcrtomb@plt+0x46d4>  // b.hs, b.nlast
  407070:	sub	x1, x25, x23
  407074:	add	x2, sp, #0x8
  407078:	mov	x0, x23
  40707c:	bl	414c80 <wcrtomb@plt+0x122c0>
  407080:	cmn	x0, #0x3
  407084:	b.hi	4071a8 <wcrtomb@plt+0x47e8>  // b.pmore
  407088:	ldr	x8, [x24, #1512]
  40708c:	add	x23, x23, x0
  407090:	b	407028 <wcrtomb@plt+0x4668>
  407094:	strb	w26, [x25]
  407098:	adrp	x23, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40709c:	ldr	w8, [x23, #1468]
  4070a0:	cbz	w8, 4070cc <wcrtomb@plt+0x470c>
  4070a4:	bl	4061f8 <wcrtomb@plt+0x3838>
  4070a8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4070ac:	ldrb	w8, [x8, #1176]
  4070b0:	cmp	w8, #0x1
  4070b4:	b.ne	4070c4 <wcrtomb@plt+0x4704>  // b.any
  4070b8:	mov	w0, w20
  4070bc:	bl	406290 <wcrtomb@plt+0x38d0>
  4070c0:	b	4070cc <wcrtomb@plt+0x470c>
  4070c4:	mov	w0, wzr
  4070c8:	bl	406310 <wcrtomb@plt+0x3950>
  4070cc:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4070d0:	ldrb	w8, [x24, #1228]
  4070d4:	cmp	w8, #0x1
  4070d8:	b.ne	40712c <wcrtomb@plt+0x476c>  // b.any
  4070dc:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4070e0:	ldr	x8, [x25, #1600]
  4070e4:	cmp	x8, x22
  4070e8:	b.cs	407110 <wcrtomb@plt+0x4750>  // b.hs, b.nlast
  4070ec:	mov	x0, x21
  4070f0:	bl	406b80 <wcrtomb@plt+0x41c0>
  4070f4:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4070f8:	ldr	x0, [x26, #1544]
  4070fc:	mov	w1, #0x1                   	// #1
  407100:	bl	406b48 <wcrtomb@plt+0x4188>
  407104:	str	x0, [x26, #1544]
  407108:	str	x22, [x25, #1600]
  40710c:	b	407118 <wcrtomb@plt+0x4758>
  407110:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407114:	ldr	x0, [x8, #1544]
  407118:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40711c:	ldr	x1, [x8, #928]
  407120:	bl	407220 <wcrtomb@plt+0x4860>
  407124:	mov	w0, w20
  407128:	bl	406290 <wcrtomb@plt+0x38d0>
  40712c:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407130:	ldrb	w8, [x22, #1222]
  407134:	cmp	w8, #0x1
  407138:	b.ne	407168 <wcrtomb@plt+0x47a8>  // b.any
  40713c:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407140:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407144:	ldr	x9, [x9, #1584]
  407148:	ldr	x0, [x8, #1528]
  40714c:	sub	x1, x21, x9
  407150:	bl	406b48 <wcrtomb@plt+0x4188>
  407154:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407158:	ldr	x1, [x8, #936]
  40715c:	bl	407220 <wcrtomb@plt+0x4860>
  407160:	mov	w0, w20
  407164:	bl	406290 <wcrtomb@plt+0x38d0>
  407168:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40716c:	ldrb	w8, [x8, #1220]
  407170:	cmp	w8, #0x1
  407174:	b.ne	4071a0 <wcrtomb@plt+0x47e0>  // b.any
  407178:	mov	w0, #0x1                   	// #1
  40717c:	cbz	x19, 4071bc <wcrtomb@plt+0x47fc>
  407180:	ldr	w8, [x23, #1468]
  407184:	ldrb	w9, [x24, #1228]
  407188:	ldrb	w10, [x22, #1222]
  40718c:	orr	w8, w8, w9
  407190:	orr	w8, w8, w10
  407194:	cbz	w8, 4071bc <wcrtomb@plt+0x47fc>
  407198:	mov	w0, #0x9                   	// #9
  40719c:	bl	406310 <wcrtomb@plt+0x3950>
  4071a0:	mov	w0, #0x1                   	// #1
  4071a4:	b	4071bc <wcrtomb@plt+0x47fc>
  4071a8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4071ac:	mov	w9, #0x1                   	// #1
  4071b0:	mov	w0, wzr
  4071b4:	strb	w26, [x25]
  4071b8:	strb	w9, [x8, #1577]
  4071bc:	ldp	x20, x19, [sp, #80]
  4071c0:	ldp	x22, x21, [sp, #64]
  4071c4:	ldp	x24, x23, [sp, #48]
  4071c8:	ldp	x26, x25, [sp, #32]
  4071cc:	ldp	x29, x30, [sp, #16]
  4071d0:	add	sp, sp, #0x60
  4071d4:	ret
  4071d8:	stp	x29, x30, [sp, #-32]!
  4071dc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4071e0:	ldr	x3, [x8, #1128]
  4071e4:	str	x19, [sp, #16]
  4071e8:	mov	x19, x1
  4071ec:	mov	w1, #0x1                   	// #1
  4071f0:	mov	x2, x19
  4071f4:	mov	x29, sp
  4071f8:	bl	402370 <fwrite_unlocked@plt>
  4071fc:	cmp	x0, x19
  407200:	b.eq	407214 <wcrtomb@plt+0x4854>  // b.none
  407204:	bl	402930 <__errno_location@plt>
  407208:	ldr	w8, [x0]
  40720c:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407210:	str	w8, [x9, #1500]
  407214:	ldr	x19, [sp, #16]
  407218:	ldp	x29, x30, [sp], #32
  40721c:	ret
  407220:	stp	x29, x30, [sp, #-48]!
  407224:	str	x21, [sp, #16]
  407228:	stp	x20, x19, [sp, #32]
  40722c:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407230:	ldr	w8, [x21, #1240]
  407234:	mov	x19, x1
  407238:	mov	x20, x0
  40723c:	mov	x29, sp
  407240:	cbz	w8, 40725c <wcrtomb@plt+0x489c>
  407244:	ldrb	w8, [x19]
  407248:	cbz	w8, 40725c <wcrtomb@plt+0x489c>
  40724c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407250:	ldr	x0, [x8, #968]
  407254:	mov	x1, x19
  407258:	bl	412e70 <wcrtomb@plt+0x104b0>
  40725c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407260:	ldr	w1, [x8, #1580]
  407264:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  407268:	add	x0, x0, #0xd7b
  40726c:	mov	x2, x20
  407270:	bl	406338 <wcrtomb@plt+0x3978>
  407274:	ldr	w8, [x21, #1240]
  407278:	cbz	w8, 40729c <wcrtomb@plt+0x48dc>
  40727c:	ldrb	w8, [x19]
  407280:	cbz	w8, 40729c <wcrtomb@plt+0x48dc>
  407284:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  407288:	ldr	x0, [x8, #976]
  40728c:	ldp	x20, x19, [sp, #32]
  407290:	ldr	x21, [sp, #16]
  407294:	ldp	x29, x30, [sp], #48
  407298:	b	412e74 <wcrtomb@plt+0x104b4>
  40729c:	ldp	x20, x19, [sp, #32]
  4072a0:	ldr	x21, [sp, #16]
  4072a4:	ldp	x29, x30, [sp], #48
  4072a8:	ret
  4072ac:	stp	x29, x30, [sp, #-96]!
  4072b0:	stp	x28, x27, [sp, #16]
  4072b4:	stp	x26, x25, [sp, #32]
  4072b8:	stp	x24, x23, [sp, #48]
  4072bc:	stp	x22, x21, [sp, #64]
  4072c0:	stp	x20, x19, [sp, #80]
  4072c4:	mov	x29, sp
  4072c8:	sub	sp, sp, #0x1c0
  4072cc:	mov	x23, x0
  4072d0:	mov	w0, #0x1                   	// #1
  4072d4:	mov	x19, x1
  4072d8:	stur	xzr, [x29, #-16]
  4072dc:	bl	408c8c <wcrtomb@plt+0x62cc>
  4072e0:	mov	x21, x0
  4072e4:	mov	x22, xzr
  4072e8:	adrp	x28, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4072ec:	stp	x19, x23, [sp, #8]
  4072f0:	mov	w1, #0xa                   	// #10
  4072f4:	mov	x0, x23
  4072f8:	mov	x2, x19
  4072fc:	mov	x25, x19
  407300:	bl	402820 <memchr@plt>
  407304:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  407308:	ldrb	w9, [x9, #3549]
  40730c:	sub	x8, x0, x23
  407310:	mvn	x10, x8
  407314:	cmp	x0, #0x0
  407318:	mov	x24, x0
  40731c:	add	x20, x0, #0x1
  407320:	add	x19, x19, x10
  407324:	csel	x26, x25, x8, eq  // eq = none
  407328:	cbz	w9, 4073ac <wcrtomb@plt+0x49ec>
  40732c:	ldrb	w27, [x28, #2260]
  407330:	cmp	w27, #0xa
  407334:	b.ne	407354 <wcrtomb@plt+0x4994>  // b.any
  407338:	ldr	x8, [sp, #16]
  40733c:	cmp	x23, x8
  407340:	b.ls	407354 <wcrtomb@plt+0x4994>  // b.plast
  407344:	cbz	x24, 407354 <wcrtomb@plt+0x4994>
  407348:	sub	x23, x23, #0x1
  40734c:	add	x25, x26, #0x2
  407350:	b	4073b0 <wcrtomb@plt+0x49f0>
  407354:	ldur	x8, [x29, #-16]
  407358:	add	x25, x26, #0x2
  40735c:	cmp	x8, x25
  407360:	b.cs	40738c <wcrtomb@plt+0x49cc>  // b.hs, b.nlast
  407364:	mov	x0, x22
  407368:	bl	402770 <free@plt>
  40736c:	sub	x1, x29, #0x10
  407370:	mov	x0, xzr
  407374:	stur	x25, [x29, #-16]
  407378:	bl	41283c <wcrtomb@plt+0xfe7c>
  40737c:	ldrb	w8, [x28, #2260]
  407380:	mov	x22, x0
  407384:	strb	w8, [x0]
  407388:	ldrb	w27, [x28, #2260]
  40738c:	add	x0, x22, #0x1
  407390:	mov	x1, x23
  407394:	mov	x2, x26
  407398:	bl	402320 <memcpy@plt>
  40739c:	add	x8, x26, x22
  4073a0:	mov	x23, x22
  4073a4:	strb	w27, [x8, #1]
  4073a8:	b	4073b0 <wcrtomb@plt+0x49f0>
  4073ac:	mov	x25, x26
  4073b0:	mov	x0, x21
  4073b4:	mov	x1, x23
  4073b8:	mov	x2, x25
  4073bc:	bl	407bc0 <wcrtomb@plt+0x5200>
  4073c0:	mov	x23, x20
  4073c4:	cbnz	x24, 4072f0 <wcrtomb@plt+0x4930>
  4073c8:	mov	x0, x22
  4073cc:	bl	402770 <free@plt>
  4073d0:	mov	x0, x21
  4073d4:	bl	408404 <wcrtomb@plt+0x5a44>
  4073d8:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4073dc:	ldrb	w8, [x8, #3550]
  4073e0:	ldr	x28, [sp, #8]
  4073e4:	mov	x22, x0
  4073e8:	cbz	w8, 407498 <wcrtomb@plt+0x4ad8>
  4073ec:	add	x0, sp, #0xa8
  4073f0:	mov	w2, #0x100                 	// #256
  4073f4:	mov	w1, wzr
  4073f8:	stur	xzr, [x29, #-24]
  4073fc:	add	x19, sp, #0xa8
  407400:	bl	4025b0 <memset@plt>
  407404:	cmp	x28, #0x1
  407408:	b.lt	407498 <wcrtomb@plt+0x4ad8>  // b.tstop
  40740c:	ldr	x26, [sp, #16]
  407410:	add	x8, sp, #0x28
  407414:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0x3b88>
  407418:	mov	w23, #0x1                   	// #1
  40741c:	add	x20, x26, x28
  407420:	sub	x24, x8, #0x4
  407424:	add	x25, x25, #0x8d8
  407428:	ldrb	w8, [x26]
  40742c:	ldrb	w9, [x19, x8]
  407430:	cbnz	w9, 40748c <wcrtomb@plt+0x4acc>
  407434:	add	x9, x25, x8, lsl #2
  407438:	ldr	w0, [x9, #260]
  40743c:	add	x1, sp, #0x28
  407440:	strb	w23, [x19, x8]
  407444:	bl	40eab8 <wcrtomb@plt+0xc0f8>
  407448:	cmp	w0, #0x1
  40744c:	b.lt	40748c <wcrtomb@plt+0x4acc>  // b.tstop
  407450:	mov	w27, w0
  407454:	ldr	w1, [x24, x27, lsl #2]
  407458:	add	x0, sp, #0x18
  40745c:	sub	x2, x29, #0x18
  407460:	sub	x27, x27, #0x1
  407464:	bl	4029c0 <wcrtomb@plt>
  407468:	cmp	w0, #0x2
  40746c:	b.lt	407480 <wcrtomb@plt+0x4ac0>  // b.tstop
  407470:	sxtw	x2, w0
  407474:	add	x1, sp, #0x18
  407478:	mov	x0, x21
  40747c:	bl	407bc0 <wcrtomb@plt+0x5200>
  407480:	add	x8, x27, #0x1
  407484:	cmp	x8, #0x1
  407488:	b.gt	407454 <wcrtomb@plt+0x4a94>
  40748c:	add	x26, x26, #0x1
  407490:	cmp	x26, x20
  407494:	b.cc	407428 <wcrtomb@plt+0x4a68>  // b.lo, b.ul, b.last
  407498:	mov	x0, x21
  40749c:	bl	40840c <wcrtomb@plt+0x5a4c>
  4074a0:	mov	w0, #0x28                  	// #40
  4074a4:	bl	412738 <wcrtomb@plt+0xfd78>
  4074a8:	ldr	x8, [sp, #16]
  4074ac:	stp	x21, x22, [x0]
  4074b0:	str	xzr, [x0, #32]
  4074b4:	stp	x8, x28, [x0, #16]
  4074b8:	add	sp, sp, #0x1c0
  4074bc:	ldp	x20, x19, [sp, #80]
  4074c0:	ldp	x22, x21, [sp, #64]
  4074c4:	ldp	x24, x23, [sp, #48]
  4074c8:	ldp	x26, x25, [sp, #32]
  4074cc:	ldp	x28, x27, [sp, #16]
  4074d0:	ldp	x29, x30, [sp], #96
  4074d4:	ret
  4074d8:	sub	sp, sp, #0xc0
  4074dc:	stp	x29, x30, [sp, #96]
  4074e0:	stp	x28, x27, [sp, #112]
  4074e4:	stp	x26, x25, [sp, #128]
  4074e8:	stp	x24, x23, [sp, #144]
  4074ec:	stp	x22, x21, [sp, #160]
  4074f0:	stp	x20, x19, [sp, #176]
  4074f4:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4074f8:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4074fc:	ldrb	w13, [x8, #2260]
  407500:	ldrb	w8, [x23, #3549]
  407504:	ldr	x25, [x0]
  407508:	mov	x21, x4
  40750c:	mov	x24, x0
  407510:	add	x29, sp, #0x60
  407514:	str	x3, [sp, #40]
  407518:	cbz	x8, 407528 <wcrtomb@plt+0x4b68>
  40751c:	stur	wzr, [x29, #-44]
  407520:	mov	w27, wzr
  407524:	b	40756c <wcrtomb@plt+0x4bac>
  407528:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40752c:	add	x9, x9, #0x8d8
  407530:	adrp	x10, 439000 <__progname@@GLIBC_2.17+0x3b88>
  407534:	ldrb	w11, [x9, #2]
  407538:	ldrb	w10, [x10, #3548]
  40753c:	ldrb	w9, [x9]
  407540:	cmp	x21, #0x0
  407544:	cset	w12, ne  // ne = any
  407548:	eor	w11, w11, #0x1
  40754c:	orr	w10, w10, w12
  407550:	and	w9, w11, w9
  407554:	orr	w10, w10, w9
  407558:	tst	w9, #0xff
  40755c:	cset	w9, ne  // ne = any
  407560:	tst	w10, #0xff
  407564:	cset	w27, ne  // ne = any
  407568:	stur	w9, [x29, #-44]
  40756c:	cmp	x21, #0x0
  407570:	csel	x28, x21, x1, ne  // ne = any
  407574:	add	x26, x1, x2
  407578:	cmp	x28, x26
  40757c:	str	x1, [sp, #32]
  407580:	stur	x28, [x29, #-8]
  407584:	b.hi	4077c8 <wcrtomb@plt+0x4e08>  // b.pmore
  407588:	cmp	x21, #0x0
  40758c:	sub	x9, x26, x28
  407590:	str	x2, [sp, #16]
  407594:	sub	x1, x28, x8
  407598:	cset	w10, eq  // eq = none
  40759c:	add	x2, x9, x8
  4075a0:	sub	x3, x29, #0x20
  4075a4:	mov	x0, x25
  4075a8:	mov	w4, w27
  4075ac:	str	w13, [sp, #28]
  4075b0:	str	w10, [sp, #48]
  4075b4:	bl	408b58 <wcrtomb@plt+0x6198>
  4075b8:	tbnz	x0, #63, 4077c8 <wcrtomb@plt+0x4e08>
  4075bc:	add	x8, x24, #0x10
  4075c0:	mov	x19, x0
  4075c4:	str	x8, [sp, #8]
  4075c8:	add	x8, x24, #0x18
  4075cc:	str	x8, [sp]
  4075d0:	ldr	x8, [x24, #8]
  4075d4:	ldur	x9, [x29, #-32]
  4075d8:	cmp	x8, x9
  4075dc:	b.le	407830 <wcrtomb@plt+0x4e70>
  4075e0:	ldur	x22, [x29, #-16]
  4075e4:	ldrb	w20, [x23, #3549]
  4075e8:	ldur	w8, [x29, #-44]
  4075ec:	stur	xzr, [x29, #-40]
  4075f0:	cbz	w8, 407618 <wcrtomb@plt+0x4c58>
  4075f4:	add	x2, x28, x19
  4075f8:	sub	x0, x29, #0x8
  4075fc:	sub	x1, x29, #0x28
  407600:	mov	x3, x26
  407604:	bl	408d74 <wcrtomb@plt+0x63b4>
  407608:	cbz	x0, 407618 <wcrtomb@plt+0x4c58>
  40760c:	ldur	x8, [x29, #-8]
  407610:	sub	x8, x8, #0x1
  407614:	b	407734 <wcrtomb@plt+0x4d74>
  407618:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40761c:	ldrb	w8, [x8, #3548]
  407620:	sub	x22, x22, x20, lsl #1
  407624:	add	x28, x28, x19
  407628:	cbz	x21, 407630 <wcrtomb@plt+0x4c70>
  40762c:	cbz	w8, 407870 <wcrtomb@plt+0x4eb0>
  407630:	ldrb	w9, [x23, #3549]
  407634:	cbnz	w9, 407868 <wcrtomb@plt+0x4ea8>
  407638:	cbz	w8, 4077f0 <wcrtomb@plt+0x4e30>
  40763c:	ldur	x8, [x29, #-40]
  407640:	cbz	x8, 407658 <wcrtomb@plt+0x4c98>
  407644:	sub	x0, x28, x8
  407648:	mov	x1, x26
  40764c:	bl	408fd0 <wcrtomb@plt+0x6610>
  407650:	cbnz	x0, 407720 <wcrtomb@plt+0x4d60>
  407654:	b	40768c <wcrtomb@plt+0x4ccc>
  407658:	ldur	x19, [x29, #-8]
  40765c:	ldr	w1, [sp, #28]
  407660:	sub	x2, x28, x19
  407664:	mov	x0, x19
  407668:	bl	4027a0 <memrchr@plt>
  40766c:	cbz	x0, 407678 <wcrtomb@plt+0x4cb8>
  407670:	add	x19, x0, #0x1
  407674:	stur	x19, [x29, #-8]
  407678:	mov	x0, x19
  40767c:	mov	x1, x28
  407680:	mov	x2, x26
  407684:	bl	408fd8 <wcrtomb@plt+0x6618>
  407688:	cbnz	x0, 407720 <wcrtomb@plt+0x4d60>
  40768c:	add	x19, x28, x22
  407690:	mov	x0, x19
  407694:	mov	x1, x26
  407698:	bl	408fd0 <wcrtomb@plt+0x6610>
  40769c:	cbz	x0, 4077ec <wcrtomb@plt+0x4e2c>
  4076a0:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4076a4:	ldrb	w8, [x8, #2264]
  4076a8:	ldr	w9, [sp, #48]
  4076ac:	cmp	w8, #0x0
  4076b0:	cset	w8, eq  // eq = none
  4076b4:	and	w8, w8, w9
  4076b8:	tbz	w8, #0, 40776c <wcrtomb@plt+0x4dac>
  4076bc:	ldr	x22, [x24, #32]
  4076c0:	cbnz	x22, 4076e4 <wcrtomb@plt+0x4d24>
  4076c4:	ldp	x1, x0, [sp]
  4076c8:	bl	403944 <wcrtomb@plt+0xf84>
  4076cc:	ldp	x0, x1, [x24, #16]
  4076d0:	mov	w2, #0xa46                 	// #2630
  4076d4:	movk	w2, #0x1, lsl #16
  4076d8:	bl	402b30 <wcrtomb@plt+0x170>
  4076dc:	mov	x22, x0
  4076e0:	str	x0, [x24, #32]
  4076e4:	ldr	w1, [sp, #28]
  4076e8:	sub	x2, x26, x19
  4076ec:	mov	x0, x19
  4076f0:	bl	402820 <memchr@plt>
  4076f4:	ldr	x3, [sp, #40]
  4076f8:	cmp	x0, #0x0
  4076fc:	csinc	x19, x26, x0, eq  // eq = none
  407700:	sub	x2, x19, x28
  407704:	mov	x0, x22
  407708:	mov	x1, x28
  40770c:	mov	x4, xzr
  407710:	bl	40319c <wcrtomb@plt+0x7dc>
  407714:	cmn	x0, #0x1
  407718:	b.ne	407884 <wcrtomb@plt+0x4ec4>  // b.any
  40771c:	sub	x28, x19, #0x1
  407720:	mov	x0, x28
  407724:	mov	x1, x26
  407728:	bl	408ef8 <wcrtomb@plt+0x6538>
  40772c:	add	x8, x28, x0
  407730:	stur	x8, [x29, #-8]
  407734:	add	x28, x8, #0x1
  407738:	cmp	x28, x26
  40773c:	b.hi	4077c8 <wcrtomb@plt+0x4e08>  // b.pmore
  407740:	ldrb	w8, [x23, #3549]
  407744:	sub	x9, x26, x28
  407748:	sub	x3, x29, #0x20
  40774c:	mov	x0, x25
  407750:	sub	x1, x28, x8
  407754:	add	x2, x9, x8
  407758:	mov	w4, w27
  40775c:	bl	408b58 <wcrtomb@plt+0x6198>
  407760:	mov	x19, x0
  407764:	tbz	x0, #63, 4075d0 <wcrtomb@plt+0x4c10>
  407768:	b	4077c8 <wcrtomb@plt+0x4e08>
  40776c:	cbz	x22, 407720 <wcrtomb@plt+0x4d60>
  407770:	sub	x2, x22, #0x1
  407774:	sub	x3, x29, #0x20
  407778:	mov	w4, #0x1                   	// #1
  40777c:	mov	x0, x25
  407780:	mov	x1, x28
  407784:	bl	408b58 <wcrtomb@plt+0x6198>
  407788:	cbnz	x0, 407720 <wcrtomb@plt+0x4d60>
  40778c:	ldur	x22, [x29, #-16]
  407790:	mov	x1, x26
  407794:	add	x19, x28, x22
  407798:	mov	x0, x19
  40779c:	bl	408fd0 <wcrtomb@plt+0x6610>
  4077a0:	cbz	x0, 4077ec <wcrtomb@plt+0x4e2c>
  4077a4:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4077a8:	ldrb	w8, [x8, #2264]
  4077ac:	ldr	w9, [sp, #48]
  4077b0:	cmp	w8, #0x0
  4077b4:	cset	w8, ne  // ne = any
  4077b8:	eor	w9, w9, #0x1
  4077bc:	orr	w8, w8, w9
  4077c0:	tbnz	w8, #0, 40776c <wcrtomb@plt+0x4dac>
  4077c4:	b	4076bc <wcrtomb@plt+0x4cfc>
  4077c8:	mov	x0, #0xffffffffffffffff    	// #-1
  4077cc:	ldp	x20, x19, [sp, #176]
  4077d0:	ldp	x22, x21, [sp, #160]
  4077d4:	ldp	x24, x23, [sp, #144]
  4077d8:	ldp	x26, x25, [sp, #128]
  4077dc:	ldp	x28, x27, [sp, #112]
  4077e0:	ldp	x29, x30, [sp, #96]
  4077e4:	add	sp, sp, #0xc0
  4077e8:	ret
  4077ec:	cbnz	x21, 407870 <wcrtomb@plt+0x4eb0>
  4077f0:	ldr	w21, [sp, #28]
  4077f4:	add	x0, x28, x22
  4077f8:	sub	x2, x26, x0
  4077fc:	mov	w1, w21
  407800:	bl	402820 <memchr@plt>
  407804:	ldr	x20, [sp, #32]
  407808:	cmp	x0, #0x0
  40780c:	csinc	x19, x26, x0, eq  // eq = none
  407810:	sub	x2, x28, x20
  407814:	mov	x0, x20
  407818:	mov	w1, w21
  40781c:	bl	4027a0 <memrchr@plt>
  407820:	cmp	x0, #0x0
  407824:	csinc	x28, x20, x0, eq  // eq = none
  407828:	sub	x22, x19, x28
  40782c:	b	407870 <wcrtomb@plt+0x4eb0>
  407830:	ldr	x0, [x24, #32]
  407834:	cbnz	x0, 407854 <wcrtomb@plt+0x4e94>
  407838:	ldp	x1, x0, [sp]
  40783c:	bl	403944 <wcrtomb@plt+0xf84>
  407840:	ldp	x0, x1, [x24, #16]
  407844:	mov	w2, #0xa46                 	// #2630
  407848:	movk	w2, #0x1, lsl #16
  40784c:	bl	402b30 <wcrtomb@plt+0x170>
  407850:	str	x0, [x24, #32]
  407854:	ldp	x1, x3, [sp, #32]
  407858:	ldr	x2, [sp, #16]
  40785c:	mov	x4, x21
  407860:	bl	40319c <wcrtomb@plt+0x7dc>
  407864:	b	4077cc <wcrtomb@plt+0x4e0c>
  407868:	cmp	x21, #0x0
  40786c:	cinc	x22, x22, eq  // eq = none
  407870:	ldr	x8, [sp, #32]
  407874:	sub	x0, x28, x8
  407878:	ldr	x8, [sp, #40]
  40787c:	str	x22, [x8]
  407880:	b	4077cc <wcrtomb@plt+0x4e0c>
  407884:	ldr	x20, [sp, #32]
  407888:	ldr	w21, [sp, #28]
  40788c:	b	407810 <wcrtomb@plt+0x4e50>
  407890:	stp	x29, x30, [sp, #-32]!
  407894:	stp	x20, x19, [sp, #16]
  407898:	mov	x19, x0
  40789c:	mov	w0, #0x9a8                 	// #2472
  4078a0:	mov	x29, sp
  4078a4:	bl	412738 <wcrtomb@plt+0xfd78>
  4078a8:	adrp	x3, 412000 <wcrtomb@plt+0xf640>
  4078ac:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  4078b0:	add	x3, x3, #0x738
  4078b4:	add	x4, x4, #0x770
  4078b8:	mov	x1, xzr
  4078bc:	mov	x2, xzr
  4078c0:	mov	x20, x0
  4078c4:	bl	414d14 <_obstack_begin@@Base>
  4078c8:	ldp	x9, x8, [x20, #24]
  4078cc:	str	xzr, [x20, #88]
  4078d0:	sub	x8, x8, x9
  4078d4:	cmp	x8, #0x3f
  4078d8:	b.hi	4078ec <wcrtomb@plt+0x4f2c>  // b.pmore
  4078dc:	mov	w1, #0x40                  	// #64
  4078e0:	mov	x0, x20
  4078e4:	bl	414e1c <_obstack_newchunk@@Base>
  4078e8:	ldr	x9, [x20, #24]
  4078ec:	ldr	x8, [x20, #16]
  4078f0:	add	x9, x9, #0x40
  4078f4:	str	x9, [x20, #24]
  4078f8:	cmp	x9, x8
  4078fc:	b.ne	40790c <wcrtomb@plt+0x4f4c>  // b.any
  407900:	ldrb	w10, [x20, #80]
  407904:	orr	w10, w10, #0x2
  407908:	strb	w10, [x20, #80]
  40790c:	ldr	x11, [x20, #48]
  407910:	ldr	x12, [x20, #8]
  407914:	ldr	x10, [x20, #32]
  407918:	add	x9, x11, x9
  40791c:	bic	x9, x9, x11
  407920:	sub	x11, x9, x12
  407924:	sub	x12, x10, x12
  407928:	cmp	x11, x12
  40792c:	str	x9, [x20, #24]
  407930:	b.ls	40793c <wcrtomb@plt+0x4f7c>  // b.plast
  407934:	mov	x9, x10
  407938:	str	x10, [x20, #24]
  40793c:	str	x9, [x20, #16]
  407940:	adrp	x9, 422000 <_obstack_memory_used@@Base+0xcfcc>
  407944:	ldr	q1, [x9, #3488]
  407948:	movi	v0.2d, #0x0
  40794c:	adrp	x10, 407000 <wcrtomb@plt+0x4640>
  407950:	str	x8, [x20, #96]
  407954:	str	xzr, [x8, #48]
  407958:	add	x10, x10, #0x984
  40795c:	stp	q0, q0, [x8, #16]
  407960:	str	q0, [x8]
  407964:	str	xzr, [x20, #2424]
  407968:	str	x19, [x20, #2440]
  40796c:	stur	q1, [x20, #104]
  407970:	str	x10, [x20, #2464]
  407974:	mov	x0, x20
  407978:	ldp	x20, x19, [sp, #16]
  40797c:	ldp	x29, x30, [sp], #32
  407980:	ret
  407984:	stp	x29, x30, [sp, #-80]!
  407988:	stp	x24, x23, [sp, #32]
  40798c:	stp	x22, x21, [sp, #48]
  407990:	stp	x20, x19, [sp, #64]
  407994:	ldr	x8, [x0, #104]
  407998:	str	x25, [sp, #16]
  40799c:	mov	x29, sp
  4079a0:	cmp	x8, x2
  4079a4:	b.le	4079b0 <wcrtomb@plt+0x4ff0>
  4079a8:	mov	x0, #0xffffffffffffffff    	// #-1
  4079ac:	b	407ab4 <wcrtomb@plt+0x50f4>
  4079b0:	ldr	x9, [x0, #96]
  4079b4:	ldr	x23, [x0, #2440]
  4079b8:	mov	w21, w4
  4079bc:	mov	x19, x3
  4079c0:	ldr	x11, [x9]
  4079c4:	mov	x22, x0
  4079c8:	mov	x20, x1
  4079cc:	add	x24, x1, x2
  4079d0:	cbz	x11, 407acc <wcrtomb@plt+0x510c>
  4079d4:	mov	x0, x20
  4079d8:	cmn	x11, #0x1
  4079dc:	mov	x8, x9
  4079e0:	b.ne	4079f8 <wcrtomb@plt+0x5038>  // b.any
  4079e4:	mov	x8, x9
  4079e8:	ldr	x8, [x8, #32]
  4079ec:	ldr	x10, [x8]
  4079f0:	cmn	x10, #0x1
  4079f4:	b.eq	4079e8 <wcrtomb@plt+0x5028>  // b.none
  4079f8:	ldr	x10, [x8, #40]
  4079fc:	cmp	x0, x24
  407a00:	sub	x10, x0, x10
  407a04:	b.cs	407a9c <wcrtomb@plt+0x50dc>  // b.hs, b.nlast
  407a08:	tbz	w21, #0, 407a9c <wcrtomb@plt+0x50dc>
  407a0c:	ldrb	w11, [x0], #1
  407a10:	cbz	x23, 407a18 <wcrtomb@plt+0x5058>
  407a14:	ldrb	w11, [x23, x11]
  407a18:	ldr	x12, [x9, #8]
  407a1c:	cbz	x12, 407a38 <wcrtomb@plt+0x5078>
  407a20:	ldrb	w13, [x12, #24]
  407a24:	cmp	w11, w13
  407a28:	b.eq	407a54 <wcrtomb@plt+0x5094>  // b.none
  407a2c:	cset	w13, cs  // cs = hs, nlast
  407a30:	ldr	x12, [x12, w13, uxtw #3]
  407a34:	cbnz	x12, 407a20 <wcrtomb@plt+0x5060>
  407a38:	ldr	x9, [x9, #32]
  407a3c:	cbz	x9, 407a9c <wcrtomb@plt+0x50dc>
  407a40:	ldr	x12, [x8, #40]
  407a44:	ldr	x13, [x9, #40]
  407a48:	cmp	x12, x13
  407a4c:	b.le	407a18 <wcrtomb@plt+0x5058>
  407a50:	b	407a9c <wcrtomb@plt+0x50dc>
  407a54:	ldr	x9, [x12, #16]
  407a58:	ldr	x11, [x9]
  407a5c:	cbz	x11, 407a94 <wcrtomb@plt+0x50d4>
  407a60:	cmn	x11, #0x1
  407a64:	mov	x11, x9
  407a68:	b.ne	407a80 <wcrtomb@plt+0x50c0>  // b.any
  407a6c:	mov	x11, x9
  407a70:	ldr	x11, [x11, #32]
  407a74:	ldr	x12, [x11]
  407a78:	cmn	x12, #0x1
  407a7c:	b.eq	407a70 <wcrtomb@plt+0x50b0>  // b.none
  407a80:	ldr	x12, [x11, #40]
  407a84:	sub	x12, x0, x12
  407a88:	cmp	x12, x10
  407a8c:	csel	x10, x10, x12, hi  // hi = pmore
  407a90:	csel	x8, x8, x11, hi  // hi = pmore
  407a94:	cmp	x0, x24
  407a98:	b.ne	407a0c <wcrtomb@plt+0x504c>  // b.any
  407a9c:	ldr	x9, [x8]
  407aa0:	sub	x0, x10, x20
  407aa4:	lsr	x9, x9, #1
  407aa8:	stp	x9, x0, [x19]
  407aac:	ldr	x8, [x8, #40]
  407ab0:	str	x8, [x19, #16]
  407ab4:	ldp	x20, x19, [sp, #64]
  407ab8:	ldp	x22, x21, [sp, #48]
  407abc:	ldp	x24, x23, [sp, #32]
  407ac0:	ldr	x25, [sp, #16]
  407ac4:	ldp	x29, x30, [sp], #80
  407ac8:	ret
  407acc:	ldr	w25, [x22, #2448]
  407ad0:	mov	x8, x20
  407ad4:	tbnz	w25, #31, 407b04 <wcrtomb@plt+0x5144>
  407ad8:	sub	x1, x24, x8
  407adc:	mov	x0, x8
  407ae0:	mov	x2, x22
  407ae4:	bl	408b8c <wcrtomb@plt+0x61cc>
  407ae8:	cbz	x0, 4079a8 <wcrtomb@plt+0x4fe8>
  407aec:	ldrb	w8, [x0], #1
  407af0:	cbz	x23, 407af8 <wcrtomb@plt+0x5138>
  407af4:	ldrb	w8, [x23, x8]
  407af8:	add	x8, x22, w8, uxtw #3
  407afc:	ldr	x9, [x8, #376]
  407b00:	b	407b34 <wcrtomb@plt+0x5174>
  407b04:	mov	x10, x8
  407b08:	ldrb	w9, [x10], #1
  407b0c:	cbz	x23, 407b14 <wcrtomb@plt+0x5154>
  407b10:	ldrb	w9, [x23, x9]
  407b14:	add	x9, x22, w9, uxtw #3
  407b18:	ldr	x9, [x9, #376]
  407b1c:	cbnz	x9, 407b30 <wcrtomb@plt+0x5170>
  407b20:	cmp	x10, x24
  407b24:	mov	x8, x10
  407b28:	b.cc	407b08 <wcrtomb@plt+0x5148>  // b.lo, b.ul, b.last
  407b2c:	b	4079a8 <wcrtomb@plt+0x4fe8>
  407b30:	add	x0, x8, #0x1
  407b34:	ldr	x11, [x9]
  407b38:	cbnz	x11, 4079d8 <wcrtomb@plt+0x5018>
  407b3c:	cmp	x0, x24
  407b40:	b.cs	4079a8 <wcrtomb@plt+0x4fe8>  // b.hs, b.nlast
  407b44:	mov	x8, x0
  407b48:	ldrb	w10, [x8], #1
  407b4c:	cbz	x23, 407b54 <wcrtomb@plt+0x5194>
  407b50:	ldrb	w10, [x23, x10]
  407b54:	ldr	x11, [x9, #8]
  407b58:	ldrb	w12, [x11, #24]
  407b5c:	cmp	w10, w12
  407b60:	b.eq	407b88 <wcrtomb@plt+0x51c8>  // b.none
  407b64:	cmp	w10, w12, uxtb
  407b68:	cset	w12, cs  // cs = hs, nlast
  407b6c:	ldr	x11, [x11, w12, uxtw #3]
  407b70:	cbnz	x11, 407b58 <wcrtomb@plt+0x5198>
  407b74:	ldr	x9, [x9, #32]
  407b78:	cbz	x9, 407b9c <wcrtomb@plt+0x51dc>
  407b7c:	ldr	x11, [x9]
  407b80:	cbz	x11, 407b54 <wcrtomb@plt+0x5194>
  407b84:	b	4079d8 <wcrtomb@plt+0x5018>
  407b88:	ldr	x9, [x11, #16]
  407b8c:	ldr	x11, [x9]
  407b90:	mov	x0, x8
  407b94:	cbz	x11, 407b3c <wcrtomb@plt+0x517c>
  407b98:	b	407bb8 <wcrtomb@plt+0x51f8>
  407b9c:	add	x9, x22, w10, uxtw #3
  407ba0:	ldr	x9, [x9, #376]
  407ba4:	cbnz	x9, 407b8c <wcrtomb@plt+0x51cc>
  407ba8:	cmp	x8, x24
  407bac:	mov	x0, #0xffffffffffffffff    	// #-1
  407bb0:	b.cc	407ad4 <wcrtomb@plt+0x5114>  // b.lo, b.ul, b.last
  407bb4:	b	407ab4 <wcrtomb@plt+0x50f4>
  407bb8:	mov	x0, x8
  407bbc:	b	4079d8 <wcrtomb@plt+0x5018>
  407bc0:	sub	sp, sp, #0x100
  407bc4:	stp	x29, x30, [sp, #160]
  407bc8:	stp	x28, x27, [sp, #176]
  407bcc:	stp	x26, x25, [sp, #192]
  407bd0:	stp	x24, x23, [sp, #208]
  407bd4:	stp	x22, x21, [sp, #224]
  407bd8:	stp	x20, x19, [sp, #240]
  407bdc:	ldr	x22, [x0, #96]
  407be0:	mov	x19, x0
  407be4:	add	x29, sp, #0xa0
  407be8:	cbz	x2, 407f44 <wcrtomb@plt+0x5584>
  407bec:	ldr	x9, [x19, #2464]
  407bf0:	ldr	x15, [x19, #2440]
  407bf4:	adrp	x10, 407000 <wcrtomb@plt+0x4640>
  407bf8:	add	x10, x10, #0xfac
  407bfc:	add	x8, x1, x2
  407c00:	cmp	x9, x10
  407c04:	mov	x20, x2
  407c08:	mov	w24, #0x1                   	// #1
  407c0c:	add	x25, sp, #0x10
  407c10:	add	x26, sp, #0x40
  407c14:	csel	x28, x8, x1, eq  // eq = none
  407c18:	stp	x15, x9, [sp]
  407c1c:	ldr	x9, [sp, #8]
  407c20:	adrp	x10, 407000 <wcrtomb@plt+0x4640>
  407c24:	add	x10, x10, #0xfac
  407c28:	sub	x8, x28, #0x1
  407c2c:	cmp	x9, x10
  407c30:	csel	x9, x8, x28, eq  // eq = none
  407c34:	ldrb	w27, [x9]
  407c38:	csinc	x28, x8, x28, eq  // eq = none
  407c3c:	cbz	x15, 407c44 <wcrtomb@plt+0x5284>
  407c40:	ldrb	w27, [x15, x27]
  407c44:	mov	x8, x22
  407c48:	ldr	x23, [x8, #8]!
  407c4c:	str	wzr, [sp, #16]
  407c50:	str	x8, [sp, #64]
  407c54:	cbz	x23, 407c98 <wcrtomb@plt+0x52d8>
  407c58:	mov	w8, #0x1                   	// #1
  407c5c:	ldrb	w9, [x23, #24]
  407c60:	cmp	w27, w9
  407c64:	b.eq	407f38 <wcrtomb@plt+0x5578>  // b.none
  407c68:	cmp	w27, w9
  407c6c:	add	x21, x8, #0x1
  407c70:	str	x23, [x26, x8, lsl #3]
  407c74:	b.cs	407c80 <wcrtomb@plt+0x52c0>  // b.hs, b.nlast
  407c78:	str	wzr, [x25, x8, lsl #2]
  407c7c:	b	407c88 <wcrtomb@plt+0x52c8>
  407c80:	add	x23, x23, #0x8
  407c84:	str	w24, [x25, x8, lsl #2]
  407c88:	ldr	x23, [x23]
  407c8c:	mov	x8, x21
  407c90:	cbnz	x23, 407c5c <wcrtomb@plt+0x529c>
  407c94:	b	407c9c <wcrtomb@plt+0x52dc>
  407c98:	mov	w21, #0x1                   	// #1
  407c9c:	ldp	x8, x9, [x19, #24]
  407ca0:	sub	x9, x9, x8
  407ca4:	cmp	x9, #0x1f
  407ca8:	b.hi	407cc0 <wcrtomb@plt+0x5300>  // b.pmore
  407cac:	mov	w1, #0x20                  	// #32
  407cb0:	mov	x0, x19
  407cb4:	bl	414e1c <_obstack_newchunk@@Base>
  407cb8:	ldr	x15, [sp]
  407cbc:	ldr	x8, [x19, #24]
  407cc0:	ldr	x23, [x19, #16]
  407cc4:	add	x8, x8, #0x20
  407cc8:	str	x8, [x19, #24]
  407ccc:	cmp	x8, x23
  407cd0:	b.ne	407ce0 <wcrtomb@plt+0x5320>  // b.any
  407cd4:	ldrb	w9, [x19, #80]
  407cd8:	orr	w9, w9, #0x2
  407cdc:	strb	w9, [x19, #80]
  407ce0:	ldr	x9, [x19, #48]
  407ce4:	ldr	x10, [x19, #8]
  407ce8:	ldr	x11, [x19, #32]
  407cec:	add	x8, x9, x8
  407cf0:	bic	x8, x8, x9
  407cf4:	sub	x9, x11, x10
  407cf8:	sub	x10, x8, x10
  407cfc:	cmp	x10, x9
  407d00:	csel	x8, x11, x8, hi  // hi = pmore
  407d04:	sub	x9, x11, x8
  407d08:	cmp	x9, #0x3f
  407d0c:	mov	x9, x8
  407d10:	stp	x8, x8, [x19, #16]
  407d14:	stp	xzr, xzr, [x23]
  407d18:	b.hi	407d30 <wcrtomb@plt+0x5370>  // b.pmore
  407d1c:	mov	w1, #0x40                  	// #64
  407d20:	mov	x0, x19
  407d24:	bl	414e1c <_obstack_newchunk@@Base>
  407d28:	ldr	x15, [sp]
  407d2c:	ldp	x8, x9, [x19, #16]
  407d30:	add	x9, x9, #0x40
  407d34:	cmp	x9, x8
  407d38:	str	x9, [x19, #24]
  407d3c:	b.ne	407d4c <wcrtomb@plt+0x538c>  // b.any
  407d40:	ldrb	w10, [x19, #80]
  407d44:	orr	w10, w10, #0x2
  407d48:	strb	w10, [x19, #80]
  407d4c:	ldr	x10, [x19, #48]
  407d50:	ldr	x11, [x19, #8]
  407d54:	ldr	x12, [x19, #32]
  407d58:	add	x9, x10, x9
  407d5c:	bic	x9, x9, x10
  407d60:	sub	x10, x12, x11
  407d64:	sub	x11, x9, x11
  407d68:	cmp	x11, x10
  407d6c:	csel	x9, x12, x9, hi  // hi = pmore
  407d70:	stp	x9, x9, [x19, #16]
  407d74:	str	x8, [x23, #16]
  407d78:	stp	xzr, xzr, [x8]
  407d7c:	stp	xzr, xzr, [x8, #24]
  407d80:	str	x22, [x8, #16]
  407d84:	ldr	x9, [x22, #40]
  407d88:	add	x9, x9, #0x1
  407d8c:	stp	x9, xzr, [x8, #40]
  407d90:	strb	w27, [x23, #24]
  407d94:	strb	wzr, [x23, #25]
  407d98:	sub	x9, x21, #0x1
  407d9c:	ldr	w11, [x25, x9, lsl #2]
  407da0:	ldr	x10, [x26, x9, lsl #3]
  407da4:	cmp	w11, #0x0
  407da8:	cset	w8, ne  // ne = any
  407dac:	str	x23, [x10, w8, uxtw #3]
  407db0:	cbz	x9, 407f38 <wcrtomb@plt+0x5578>
  407db4:	mov	x8, x10
  407db8:	ldrb	w12, [x8, #25]!
  407dbc:	cmp	w11, #0x0
  407dc0:	cset	w13, eq  // eq = none
  407dc4:	mov	w14, #0xffffffff            	// #-1
  407dc8:	cbz	w12, 407de4 <wcrtomb@plt+0x5424>
  407dcc:	cbz	w13, 407e20 <wcrtomb@plt+0x5460>
  407dd0:	sub	w11, w12, #0x1
  407dd4:	tst	w11, #0xff
  407dd8:	strb	w11, [x8]
  407ddc:	b.ne	407e34 <wcrtomb@plt+0x5474>  // b.any
  407de0:	b	407f38 <wcrtomb@plt+0x5578>
  407de4:	sub	x9, x21, #0x2
  407de8:	tst	w13, #0x1
  407dec:	cneg	w10, w14, eq  // eq = none
  407df0:	strb	w10, [x8]
  407df4:	cbz	x9, 407f38 <wcrtomb@plt+0x5578>
  407df8:	ldr	x10, [x26, x9, lsl #3]
  407dfc:	ldr	w11, [x25, x9, lsl #2]
  407e00:	sub	x9, x9, #0x1
  407e04:	mov	x8, x10
  407e08:	ldrb	w12, [x8, #25]!
  407e0c:	cmp	w11, #0x0
  407e10:	cset	w13, eq  // eq = none
  407e14:	cbz	w12, 407de8 <wcrtomb@plt+0x5428>
  407e18:	add	x9, x9, #0x1
  407e1c:	cbnz	w13, 407dd0 <wcrtomb@plt+0x5410>
  407e20:	cmp	w11, #0x1
  407e24:	b.ne	407f38 <wcrtomb@plt+0x5578>  // b.any
  407e28:	add	w11, w12, #0x1
  407e2c:	strb	w11, [x8]
  407e30:	tbnz	w11, #8, 407f38 <wcrtomb@plt+0x5578>
  407e34:	and	w11, w11, #0xff
  407e38:	cmp	w11, #0x2
  407e3c:	b.eq	407e70 <wcrtomb@plt+0x54b0>  // b.none
  407e40:	cmp	w11, #0xfe
  407e44:	b.ne	407fa8 <wcrtomb@plt+0x55e8>  // b.any
  407e48:	add	x11, x25, x9, lsl #2
  407e4c:	ldr	w11, [x11, #4]
  407e50:	cmp	w11, #0x1
  407e54:	b.eq	407e9c <wcrtomb@plt+0x54dc>  // b.none
  407e58:	cbnz	w11, 407fa8 <wcrtomb@plt+0x55e8>
  407e5c:	ldr	x11, [x10]
  407e60:	ldr	x12, [x11, #8]
  407e64:	str	x10, [x11, #8]
  407e68:	str	x12, [x10]
  407e6c:	b	407e94 <wcrtomb@plt+0x54d4>
  407e70:	add	x11, x25, x9, lsl #2
  407e74:	ldr	w11, [x11, #4]
  407e78:	cbz	w11, 407edc <wcrtomb@plt+0x551c>
  407e7c:	cmp	w11, #0x1
  407e80:	b.ne	407fa8 <wcrtomb@plt+0x55e8>  // b.any
  407e84:	ldr	x11, [x10, #8]
  407e88:	ldr	x12, [x11]
  407e8c:	str	x10, [x11]
  407e90:	str	x12, [x10, #8]
  407e94:	strb	wzr, [x8]
  407e98:	b	407f18 <wcrtomb@plt+0x5558>
  407e9c:	ldr	x12, [x10]
  407ea0:	ldr	x11, [x12, #8]
  407ea4:	ldp	x13, x14, [x11]
  407ea8:	str	x12, [x11]
  407eac:	str	x13, [x12, #8]
  407eb0:	str	x10, [x11, #8]
  407eb4:	str	x14, [x10]
  407eb8:	ldrb	w10, [x11, #25]
  407ebc:	cmp	w10, #0x1
  407ec0:	csetm	w10, eq  // eq = none
  407ec4:	strb	w10, [x12, #25]
  407ec8:	ldrb	w10, [x11, #25]
  407ecc:	cmp	w10, #0xff
  407ed0:	cset	w10, eq  // eq = none
  407ed4:	strb	w10, [x8]
  407ed8:	b	407f18 <wcrtomb@plt+0x5558>
  407edc:	ldr	x12, [x10, #8]
  407ee0:	ldr	x11, [x12]
  407ee4:	ldp	x13, x14, [x11]
  407ee8:	str	x10, [x11]
  407eec:	str	x13, [x10, #8]
  407ef0:	str	x12, [x11, #8]
  407ef4:	str	x14, [x12]
  407ef8:	ldrb	w10, [x11, #25]
  407efc:	cmp	w10, #0x1
  407f00:	csetm	w10, eq  // eq = none
  407f04:	strb	w10, [x8]
  407f08:	ldrb	w8, [x11, #25]
  407f0c:	cmp	w8, #0xff
  407f10:	cset	w8, eq  // eq = none
  407f14:	strb	w8, [x12, #25]
  407f18:	strb	wzr, [x11, #25]
  407f1c:	sub	x8, x9, #0x1
  407f20:	ldr	w9, [x25, x8, lsl #2]
  407f24:	ldr	x8, [x26, x8, lsl #3]
  407f28:	cbz	w9, 407f34 <wcrtomb@plt+0x5574>
  407f2c:	str	x11, [x8, #8]
  407f30:	b	407f38 <wcrtomb@plt+0x5578>
  407f34:	str	x11, [x8]
  407f38:	ldr	x22, [x23, #16]
  407f3c:	sub	x20, x20, #0x1
  407f40:	cbnz	x20, 407c1c <wcrtomb@plt+0x525c>
  407f44:	ldr	x9, [x22]
  407f48:	ldr	x8, [x19, #88]
  407f4c:	cbnz	x9, 407f5c <wcrtomb@plt+0x559c>
  407f50:	mov	w9, #0x1                   	// #1
  407f54:	bfi	x9, x8, #1, #63
  407f58:	str	x9, [x22]
  407f5c:	add	x8, x8, #0x1
  407f60:	str	x8, [x19, #88]
  407f64:	ldr	x8, [x22, #40]
  407f68:	ldr	x9, [x19, #104]
  407f6c:	cmp	x8, x9
  407f70:	b.ge	407f78 <wcrtomb@plt+0x55b8>  // b.tcont
  407f74:	str	x8, [x19, #104]
  407f78:	ldr	x9, [x19, #112]
  407f7c:	cmp	x8, x9
  407f80:	b.le	407f88 <wcrtomb@plt+0x55c8>
  407f84:	str	x8, [x19, #112]
  407f88:	ldp	x20, x19, [sp, #240]
  407f8c:	ldp	x22, x21, [sp, #224]
  407f90:	ldp	x24, x23, [sp, #208]
  407f94:	ldp	x26, x25, [sp, #192]
  407f98:	ldp	x28, x27, [sp, #176]
  407f9c:	ldp	x29, x30, [sp, #160]
  407fa0:	add	sp, sp, #0x100
  407fa4:	ret
  407fa8:	bl	4026c0 <abort@plt>
  407fac:	sub	sp, sp, #0x80
  407fb0:	stp	x29, x30, [sp, #32]
  407fb4:	stp	x28, x27, [sp, #48]
  407fb8:	stp	x26, x25, [sp, #64]
  407fbc:	stp	x24, x23, [sp, #80]
  407fc0:	stp	x22, x21, [sp, #96]
  407fc4:	stp	x20, x19, [sp, #112]
  407fc8:	ldr	x23, [x0, #104]
  407fcc:	mov	x19, x3
  407fd0:	mov	x20, x0
  407fd4:	add	x29, sp, #0x20
  407fd8:	cbz	x23, 407ff0 <wcrtomb@plt+0x5630>
  407fdc:	mov	x22, x2
  407fe0:	cmp	x23, x2
  407fe4:	b.le	407ff8 <wcrtomb@plt+0x5638>
  407fe8:	mov	x0, #0xffffffffffffffff    	// #-1
  407fec:	b	4083dc <wcrtomb@plt+0x5a1c>
  407ff0:	mov	x0, xzr
  407ff4:	b	4083d0 <wcrtomb@plt+0x5a10>
  407ff8:	mov	x21, x1
  407ffc:	cmp	x23, #0x1
  408000:	b.ne	408024 <wcrtomb@plt+0x5664>  // b.any
  408004:	mov	x0, x21
  408008:	mov	x1, x22
  40800c:	mov	x2, x20
  408010:	bl	408b8c <wcrtomb@plt+0x61cc>
  408014:	cbz	x0, 407fe8 <wcrtomb@plt+0x5628>
  408018:	sub	x0, x0, x21
  40801c:	tbz	x0, #63, 4083d0 <wcrtomb@plt+0x5a10>
  408020:	b	4083dc <wcrtomb@plt+0x5a1c>
  408024:	ldr	x24, [x20, #2440]
  408028:	ldr	x27, [x20, #2424]
  40802c:	ldr	w25, [x20, #2448]
  408030:	ldrb	w26, [x20, #2456]
  408034:	add	x8, x21, x23
  408038:	tbnz	x23, #63, 408050 <wcrtomb@plt+0x5690>
  40803c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408040:	movk	x9, #0xaaa, lsl #48
  408044:	cmp	x23, x9
  408048:	b.le	408068 <wcrtomb@plt+0x56a8>
  40804c:	b	40808c <wcrtomb@plt+0x56cc>
  408050:	cmn	x23, #0x1
  408054:	b.eq	408068 <wcrtomb@plt+0x56a8>  // b.none
  408058:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40805c:	sdiv	x9, x9, x23
  408060:	cmp	x9, #0xc
  408064:	b.lt	40808c <wcrtomb@plt+0x56cc>  // b.tstop
  408068:	add	x9, x23, x23, lsl #1
  40806c:	lsl	x9, x9, #2
  408070:	cmp	x9, x22
  408074:	b.ge	40808c <wcrtomb@plt+0x56cc>  // b.tcont
  408078:	add	x16, x21, x22
  40807c:	mov	x9, #0xfffffffffffffff5    	// #-11
  408080:	madd	x28, x23, x9, x16
  408084:	cmp	x28, x8
  408088:	b.cs	4081dc <wcrtomb@plt+0x581c>  // b.hs, b.nlast
  40808c:	ldurb	w9, [x8, #-1]
  408090:	add	x9, x20, x9
  408094:	ldrb	w12, [x9, #120]
  408098:	add	x9, x21, x22
  40809c:	sub	x10, x9, x8
  4080a0:	cmp	x10, x12
  4080a4:	b.lt	407fe8 <wcrtomb@plt+0x5628>  // b.tstop
  4080a8:	add	x11, x23, x27
  4080ac:	sub	x10, x11, #0x3
  4080b0:	sub	x11, x11, #0x1
  4080b4:	mov	x0, #0xffffffffffffffff    	// #-1
  4080b8:	add	x8, x8, x12
  4080bc:	ldurb	w12, [x8, #-1]
  4080c0:	add	x12, x20, x12
  4080c4:	ldrb	w12, [x12, #120]
  4080c8:	cbz	w12, 4080dc <wcrtomb@plt+0x571c>
  4080cc:	sub	x13, x9, x8
  4080d0:	cmp	x13, x12
  4080d4:	b.ge	4080b8 <wcrtomb@plt+0x56f8>  // b.tcont
  4080d8:	b	4083dc <wcrtomb@plt+0x5a1c>
  4080dc:	mov	x14, xzr
  4080e0:	mov	x13, x23
  4080e4:	ldurb	w12, [x8, #-2]
  4080e8:	cbz	x24, 4080f0 <wcrtomb@plt+0x5730>
  4080ec:	ldrb	w12, [x24, x12]
  4080f0:	cmp	w12, w26
  4080f4:	b.ne	408144 <wcrtomb@plt+0x5784>  // b.any
  4080f8:	sub	x15, x8, #0x3
  4080fc:	mov	x16, x10
  408100:	mov	w12, #0x2                   	// #2
  408104:	cmp	x12, x13
  408108:	b.ge	40817c <wcrtomb@plt+0x57bc>  // b.tcont
  40810c:	ldrb	w17, [x15]
  408110:	add	x12, x12, #0x1
  408114:	cbz	x24, 408128 <wcrtomb@plt+0x5768>
  408118:	ldrb	w18, [x16]
  40811c:	ldrb	w17, [x24, x17]
  408120:	add	x18, x24, x18
  408124:	b	40812c <wcrtomb@plt+0x576c>
  408128:	mov	x18, x16
  40812c:	ldrb	w18, [x18]
  408130:	sub	x16, x16, #0x1
  408134:	sub	x15, x15, #0x1
  408138:	cmp	w17, w18
  40813c:	b.eq	408104 <wcrtomb@plt+0x5744>  // b.none
  408140:	b	408148 <wcrtomb@plt+0x5788>
  408144:	mov	w12, #0x2                   	// #2
  408148:	ldr	x13, [x20, #2432]
  40814c:	add	x13, x13, x12, lsl #3
  408150:	ldur	x13, [x13, #-16]
  408154:	add	x8, x8, x13
  408158:	cmp	x8, x9
  40815c:	b.hi	4081cc <wcrtomb@plt+0x580c>  // b.pmore
  408160:	ldurb	w14, [x8, #-1]
  408164:	cbz	x24, 40816c <wcrtomb@plt+0x57ac>
  408168:	ldrb	w14, [x24, x14]
  40816c:	cmp	w14, w25, uxtb
  408170:	sub	x14, x12, #0x1
  408174:	b.eq	4080e4 <wcrtomb@plt+0x5724>  // b.none
  408178:	b	4081cc <wcrtomb@plt+0x580c>
  40817c:	add	x12, x14, x13
  408180:	mvn	x14, x12
  408184:	sub	x13, x11, x12
  408188:	add	x14, x14, x8
  40818c:	cmp	x12, x23
  408190:	b.ge	4081d4 <wcrtomb@plt+0x5814>  // b.tcont
  408194:	ldrb	w15, [x14]
  408198:	add	x12, x12, #0x1
  40819c:	cbz	x24, 4081b0 <wcrtomb@plt+0x57f0>
  4081a0:	ldrb	w16, [x13]
  4081a4:	ldrb	w15, [x24, x15]
  4081a8:	add	x16, x24, x16
  4081ac:	b	4081b4 <wcrtomb@plt+0x57f4>
  4081b0:	mov	x16, x13
  4081b4:	ldrb	w16, [x16]
  4081b8:	sub	x13, x13, #0x1
  4081bc:	sub	x14, x14, #0x1
  4081c0:	cmp	w15, w16
  4081c4:	b.eq	40818c <wcrtomb@plt+0x57cc>  // b.none
  4081c8:	b	408148 <wcrtomb@plt+0x5788>
  4081cc:	mov	w12, wzr
  4081d0:	b	4080cc <wcrtomb@plt+0x570c>
  4081d4:	sub	x8, x8, x23
  4081d8:	b	4083c8 <wcrtomb@plt+0x5a08>
  4081dc:	add	x9, x23, x27
  4081e0:	sub	x17, x9, #0x3
  4081e4:	sub	x18, x9, #0x1
  4081e8:	ldurb	w9, [x8, #-1]
  4081ec:	add	x10, x20, #0x78
  4081f0:	ldrb	w9, [x10, x9]
  4081f4:	add	x9, x8, x9
  4081f8:	ldurb	w11, [x9, #-1]
  4081fc:	ldrb	w11, [x10, x11]
  408200:	add	x9, x9, x11
  408204:	cbz	x11, 4082b4 <wcrtomb@plt+0x58f4>
  408208:	ldurb	w11, [x9, #-1]
  40820c:	ldrb	w11, [x10, x11]
  408210:	add	x9, x9, x11
  408214:	ldurb	w11, [x9, #-1]
  408218:	ldrb	w11, [x10, x11]
  40821c:	add	x9, x9, x11
  408220:	ldurb	w11, [x9, #-1]
  408224:	ldrb	w10, [x10, x11]
  408228:	add	x9, x9, x10
  40822c:	cbz	x10, 4082b4 <wcrtomb@plt+0x58f4>
  408230:	ldurb	w11, [x9, #-1]
  408234:	add	x10, x20, #0x78
  408238:	ldrb	w11, [x10, x11]
  40823c:	add	x9, x9, x11
  408240:	ldurb	w11, [x9, #-1]
  408244:	ldrb	w11, [x10, x11]
  408248:	add	x9, x9, x11
  40824c:	ldurb	w11, [x9, #-1]
  408250:	ldrb	w11, [x10, x11]
  408254:	add	x9, x9, x11
  408258:	cbz	x11, 4082b4 <wcrtomb@plt+0x58f4>
  40825c:	ldurb	w11, [x9, #-1]
  408260:	ldrb	w11, [x10, x11]
  408264:	add	x9, x9, x11
  408268:	ldurb	w11, [x9, #-1]
  40826c:	ldrb	w10, [x10, x11]
  408270:	add	x9, x9, x10
  408274:	sub	x8, x9, x8
  408278:	cmp	x8, #0x7f
  40827c:	mov	x8, x9
  408280:	b.gt	4083b8 <wcrtomb@plt+0x59f8>
  408284:	sub	x0, x9, #0x1
  408288:	sub	x1, x16, x0
  40828c:	mov	x2, x20
  408290:	stp	x18, x17, [sp, #8]
  408294:	stur	x16, [x29, #-8]
  408298:	bl	408b8c <wcrtomb@plt+0x61cc>
  40829c:	cbz	x0, 407fe8 <wcrtomb@plt+0x5628>
  4082a0:	add	x9, x0, #0x1
  4082a4:	cmp	x28, x9
  4082a8:	b.ls	4083fc <wcrtomb@plt+0x5a3c>  // b.plast
  4082ac:	ldur	x16, [x29, #-8]
  4082b0:	ldp	x18, x17, [sp, #8]
  4082b4:	mov	x11, xzr
  4082b8:	mov	x10, x23
  4082bc:	ldurb	w8, [x9, #-2]
  4082c0:	cbz	x24, 4082c8 <wcrtomb@plt+0x5908>
  4082c4:	ldrb	w8, [x24, x8]
  4082c8:	cmp	w8, w26
  4082cc:	b.ne	40831c <wcrtomb@plt+0x595c>  // b.any
  4082d0:	sub	x12, x9, #0x3
  4082d4:	mov	x13, x17
  4082d8:	mov	w8, #0x2                   	// #2
  4082dc:	cmp	x8, x10
  4082e0:	b.ge	408324 <wcrtomb@plt+0x5964>  // b.tcont
  4082e4:	ldrb	w14, [x12]
  4082e8:	add	x8, x8, #0x1
  4082ec:	cbz	x24, 408300 <wcrtomb@plt+0x5940>
  4082f0:	ldrb	w15, [x13]
  4082f4:	ldrb	w14, [x24, x14]
  4082f8:	add	x15, x24, x15
  4082fc:	b	408304 <wcrtomb@plt+0x5944>
  408300:	mov	x15, x13
  408304:	ldrb	w15, [x15]
  408308:	sub	x13, x13, #0x1
  40830c:	sub	x12, x12, #0x1
  408310:	cmp	w14, w15
  408314:	b.eq	4082dc <wcrtomb@plt+0x591c>  // b.none
  408318:	b	408370 <wcrtomb@plt+0x59b0>
  40831c:	mov	w8, #0x2                   	// #2
  408320:	b	408370 <wcrtomb@plt+0x59b0>
  408324:	add	x8, x11, x10
  408328:	mvn	x11, x8
  40832c:	sub	x10, x18, x8
  408330:	add	x11, x11, x9
  408334:	cmp	x8, x23
  408338:	b.ge	4083c4 <wcrtomb@plt+0x5a04>  // b.tcont
  40833c:	ldrb	w12, [x11]
  408340:	add	x8, x8, #0x1
  408344:	cbz	x24, 408358 <wcrtomb@plt+0x5998>
  408348:	ldrb	w13, [x10]
  40834c:	ldrb	w12, [x24, x12]
  408350:	add	x13, x24, x13
  408354:	b	40835c <wcrtomb@plt+0x599c>
  408358:	mov	x13, x10
  40835c:	ldrb	w13, [x13]
  408360:	sub	x10, x10, #0x1
  408364:	sub	x11, x11, #0x1
  408368:	cmp	w12, w13
  40836c:	b.eq	408334 <wcrtomb@plt+0x5974>  // b.none
  408370:	ldr	x10, [x20, #2432]
  408374:	add	x10, x10, x8, lsl #3
  408378:	ldur	x10, [x10, #-16]
  40837c:	add	x9, x9, x10
  408380:	cmp	x9, x28
  408384:	b.hi	4083b4 <wcrtomb@plt+0x59f4>  // b.pmore
  408388:	ldurb	w12, [x9, #-1]
  40838c:	cbz	x24, 408398 <wcrtomb@plt+0x59d8>
  408390:	ldrb	w11, [x24, x12]
  408394:	b	40839c <wcrtomb@plt+0x59dc>
  408398:	mov	w11, w12
  40839c:	cmp	w11, w25, uxtb
  4083a0:	sub	x11, x8, #0x1
  4083a4:	b.eq	4082bc <wcrtomb@plt+0x58fc>  // b.none
  4083a8:	add	x8, x20, x12
  4083ac:	ldrb	w8, [x8, #120]
  4083b0:	add	x9, x9, x8
  4083b4:	mov	x8, x9
  4083b8:	cmp	x28, x8
  4083bc:	b.cs	4081e8 <wcrtomb@plt+0x5828>  // b.hs, b.nlast
  4083c0:	b	40808c <wcrtomb@plt+0x56cc>
  4083c4:	sub	x8, x9, x23
  4083c8:	sub	x0, x8, x21
  4083cc:	tbnz	x0, #63, 4083dc <wcrtomb@plt+0x5a1c>
  4083d0:	stp	xzr, x0, [x19]
  4083d4:	ldr	x8, [x20, #104]
  4083d8:	str	x8, [x19, #16]
  4083dc:	ldp	x20, x19, [sp, #112]
  4083e0:	ldp	x22, x21, [sp, #96]
  4083e4:	ldp	x24, x23, [sp, #80]
  4083e8:	ldp	x26, x25, [sp, #64]
  4083ec:	ldp	x28, x27, [sp, #48]
  4083f0:	ldp	x29, x30, [sp, #32]
  4083f4:	add	sp, sp, #0x80
  4083f8:	ret
  4083fc:	mov	x8, x9
  408400:	b	40808c <wcrtomb@plt+0x56cc>
  408404:	ldr	x0, [x0, #88]
  408408:	ret
  40840c:	stp	x29, x30, [sp, #-96]!
  408410:	str	x28, [sp, #16]
  408414:	stp	x26, x25, [sp, #32]
  408418:	stp	x24, x23, [sp, #48]
  40841c:	stp	x22, x21, [sp, #64]
  408420:	stp	x20, x19, [sp, #80]
  408424:	mov	x29, sp
  408428:	sub	sp, sp, #0x900
  40842c:	ldr	x22, [x0, #2440]
  408430:	ldr	x23, [x0, #88]
  408434:	add	x8, x0, #0x78
  408438:	sub	x9, x29, #0x100
  40843c:	cmp	x22, #0x0
  408440:	mov	x20, x0
  408444:	csel	x19, x9, x8, ne  // ne = any
  408448:	cmp	x23, #0x1
  40844c:	b.ne	408584 <wcrtomb@plt+0x5bc4>  // b.any
  408450:	ldr	x21, [x20, #96]
  408454:	str	x21, [x29, #24]
  408458:	cbz	x21, 408470 <wcrtomb@plt+0x5ab0>
  40845c:	ldr	x0, [x21, #8]
  408460:	add	x1, x29, #0x18
  408464:	bl	408938 <wcrtomb@plt+0x5f78>
  408468:	ldr	x21, [x21, #24]
  40846c:	cbnz	x21, 40845c <wcrtomb@plt+0x5a9c>
  408470:	ldp	x9, x8, [x20, #24]
  408474:	ldr	x21, [x20, #104]
  408478:	sub	x8, x8, x9
  40847c:	cmp	x8, x21
  408480:	b.cs	408494 <wcrtomb@plt+0x5ad4>  // b.hs, b.nlast
  408484:	mov	x0, x20
  408488:	mov	x1, x21
  40848c:	bl	414e1c <_obstack_newchunk@@Base>
  408490:	ldr	x9, [x20, #24]
  408494:	ldr	x8, [x20, #16]
  408498:	add	x9, x9, x21
  40849c:	str	x9, [x20, #24]
  4084a0:	cmp	x9, x8
  4084a4:	b.ne	4084b4 <wcrtomb@plt+0x5af4>  // b.any
  4084a8:	ldrb	w10, [x20, #80]
  4084ac:	orr	w10, w10, #0x2
  4084b0:	strb	w10, [x20, #80]
  4084b4:	ldr	x11, [x20, #48]
  4084b8:	ldr	x12, [x20, #8]
  4084bc:	ldr	x10, [x20, #32]
  4084c0:	add	x9, x11, x9
  4084c4:	bic	x9, x9, x11
  4084c8:	sub	x11, x9, x12
  4084cc:	sub	x12, x10, x12
  4084d0:	cmp	x11, x12
  4084d4:	str	x9, [x20, #24]
  4084d8:	b.ls	4084e4 <wcrtomb@plt+0x5b24>  // b.plast
  4084dc:	mov	x9, x10
  4084e0:	str	x10, [x20, #24]
  4084e4:	ldr	x10, [x20, #104]
  4084e8:	str	x9, [x20, #16]
  4084ec:	str	x8, [x20, #2424]
  4084f0:	cmp	x10, #0x1
  4084f4:	b.lt	40853c <wcrtomb@plt+0x5b7c>  // b.tstop
  4084f8:	ldr	x9, [x20, #96]
  4084fc:	ldr	x10, [x9, #8]
  408500:	ldrb	w10, [x10, #24]
  408504:	strb	w10, [x8]
  408508:	ldr	x8, [x20, #104]
  40850c:	cmp	x8, #0x2
  408510:	b.lt	40853c <wcrtomb@plt+0x5b7c>  // b.tstop
  408514:	mov	w8, #0x1                   	// #1
  408518:	ldr	x9, [x9, #24]
  40851c:	ldr	x11, [x20, #2424]
  408520:	ldr	x10, [x9, #8]
  408524:	ldrb	w10, [x10, #24]
  408528:	strb	w10, [x11, x8]
  40852c:	ldr	x10, [x20, #104]
  408530:	add	x8, x8, #0x1
  408534:	cmp	x8, x10
  408538:	b.lt	408518 <wcrtomb@plt+0x5b58>  // b.tstop
  40853c:	ldr	x0, [x20, #2440]
  408540:	bl	407890 <wcrtomb@plt+0x4ed0>
  408544:	adrp	x8, 407000 <wcrtomb@plt+0x4640>
  408548:	add	x8, x8, #0xfac
  40854c:	str	x8, [x0, #2464]
  408550:	ldr	x1, [x20, #2424]
  408554:	ldr	x2, [x20, #104]
  408558:	mov	x21, x0
  40855c:	bl	407bc0 <wcrtomb@plt+0x5200>
  408560:	mov	x0, x20
  408564:	mov	x1, xzr
  408568:	bl	414f9c <_obstack_free@@Base>
  40856c:	mov	w2, #0x9a8                 	// #2472
  408570:	mov	x0, x20
  408574:	mov	x1, x21
  408578:	bl	402320 <memcpy@plt>
  40857c:	mov	x0, x21
  408580:	bl	402770 <free@plt>
  408584:	ldr	x8, [x20, #104]
  408588:	mov	w9, #0xff                  	// #255
  40858c:	mov	w2, #0x100                 	// #256
  408590:	mov	x0, x19
  408594:	cmp	x8, #0xff
  408598:	csel	w1, w8, w9, lt  // lt = tstop
  40859c:	bl	4025b0 <memset@plt>
  4085a0:	ldr	x24, [x20, #96]
  4085a4:	str	x24, [x29, #24]
  4085a8:	cbz	x24, 408658 <wcrtomb@plt+0x5c98>
  4085ac:	ldr	x0, [x24, #8]
  4085b0:	cmp	x23, #0x1
  4085b4:	add	x1, x29, #0x18
  4085b8:	cset	w21, eq  // eq = none
  4085bc:	bl	408938 <wcrtomb@plt+0x5f78>
  4085c0:	ldr	x0, [x24, #8]
  4085c4:	ldr	x1, [x24, #40]
  4085c8:	mov	x2, x19
  4085cc:	bl	408980 <wcrtomb@plt+0x5fc0>
  4085d0:	ldr	x0, [x24, #8]
  4085d4:	ldr	x1, [x24, #32]
  4085d8:	ldr	x2, [x20, #96]
  4085dc:	mov	w3, w21
  4085e0:	bl	4089dc <wcrtomb@plt+0x601c>
  4085e4:	cmp	x23, #0x1
  4085e8:	b.ne	408650 <wcrtomb@plt+0x5c90>  // b.any
  4085ec:	ldr	x8, [x20, #104]
  4085f0:	ldr	x25, [x24, #32]
  4085f4:	stp	x8, x8, [x24, #48]
  4085f8:	cbz	x25, 408650 <wcrtomb@plt+0x5c90>
  4085fc:	ldp	x26, x21, [x24]
  408600:	ldr	x0, [x25, #8]
  408604:	mov	x1, x21
  408608:	bl	408aa0 <wcrtomb@plt+0x60e0>
  40860c:	tbnz	w0, #0, 408628 <wcrtomb@plt+0x5c68>
  408610:	ldr	x8, [x24, #40]
  408614:	ldp	x9, x10, [x25, #40]
  408618:	sub	x8, x8, x9
  40861c:	cmp	x8, x10
  408620:	b.ge	408628 <wcrtomb@plt+0x5c68>  // b.tcont
  408624:	str	x8, [x25, #48]
  408628:	cbz	x26, 408648 <wcrtomb@plt+0x5c88>
  40862c:	ldr	x8, [x24, #40]
  408630:	ldr	x9, [x25, #40]
  408634:	ldr	x10, [x25, #56]
  408638:	sub	x8, x8, x9
  40863c:	cmp	x10, x8
  408640:	b.le	408648 <wcrtomb@plt+0x5c88>
  408644:	str	x8, [x25, #56]
  408648:	ldr	x25, [x25, #32]
  40864c:	cbnz	x25, 408600 <wcrtomb@plt+0x5c40>
  408650:	ldr	x24, [x24, #24]
  408654:	cbnz	x24, 4085ac <wcrtomb@plt+0x5bec>
  408658:	ldr	x25, [x20, #96]
  40865c:	cmp	x23, #0x1
  408660:	b.ne	4086a0 <wcrtomb@plt+0x5ce0>  // b.any
  408664:	ldr	x8, [x25, #24]
  408668:	cbz	x8, 4086a0 <wcrtomb@plt+0x5ce0>
  40866c:	ldr	x10, [x8, #16]
  408670:	ldr	x9, [x8, #56]
  408674:	ldr	x10, [x10, #56]
  408678:	cmp	x9, x10
  40867c:	b.le	408688 <wcrtomb@plt+0x5cc8>
  408680:	mov	x9, x10
  408684:	str	x10, [x8, #56]
  408688:	ldr	x10, [x8, #48]
  40868c:	cmp	x10, x9
  408690:	b.le	408698 <wcrtomb@plt+0x5cd8>
  408694:	str	x9, [x8, #48]
  408698:	ldr	x8, [x8, #24]
  40869c:	cbnz	x8, 40866c <wcrtomb@plt+0x5cac>
  4086a0:	add	x24, x20, #0x178
  4086a4:	cmp	x22, #0x0
  4086a8:	mov	x8, sp
  4086ac:	csel	x21, x8, x24, ne  // ne = any
  4086b0:	mov	w2, #0x800                 	// #2048
  4086b4:	mov	x0, x21
  4086b8:	mov	w1, wzr
  4086bc:	bl	4025b0 <memset@plt>
  4086c0:	ldr	x0, [x25, #8]
  4086c4:	mov	x1, x21
  4086c8:	bl	408b14 <wcrtomb@plt+0x6154>
  4086cc:	mov	x8, xzr
  4086d0:	mov	w9, #0xffffffff            	// #-1
  4086d4:	mov	w10, #0xfffffffe            	// #-2
  4086d8:	cbz	x22, 4086f0 <wcrtomb@plt+0x5d30>
  4086dc:	ldrb	w11, [x22, x8]
  4086e0:	ldr	x12, [x21, x11, lsl #3]
  4086e4:	str	x12, [x24]
  4086e8:	cbnz	x12, 4086fc <wcrtomb@plt+0x5d3c>
  4086ec:	b	408740 <wcrtomb@plt+0x5d80>
  4086f0:	ldr	x12, [x24]
  4086f4:	mov	w11, w8
  4086f8:	cbz	x12, 408740 <wcrtomb@plt+0x5d80>
  4086fc:	cmn	w10, #0x2
  408700:	b.gt	408710 <wcrtomb@plt+0x5d50>
  408704:	mov	w9, w8
  408708:	mov	w10, w11
  40870c:	b	408740 <wcrtomb@plt+0x5d80>
  408710:	cmp	w10, w11
  408714:	b.ne	408724 <wcrtomb@plt+0x5d64>  // b.any
  408718:	cmp	w9, w10
  40871c:	csinv	w9, w8, wzr, eq  // eq = none
  408720:	b	408740 <wcrtomb@plt+0x5d80>
  408724:	cmp	x8, w11, uxtw
  408728:	cset	w11, eq  // eq = none
  40872c:	cmp	w10, w9
  408730:	cset	w12, eq  // eq = none
  408734:	tst	w12, w11
  408738:	csel	w9, w8, w9, ne  // ne = any
  40873c:	csinv	w10, w10, wzr, ne  // ne = any
  408740:	add	x8, x8, #0x1
  408744:	cmp	x8, #0x100
  408748:	add	x24, x24, #0x8
  40874c:	b.ne	4086d8 <wcrtomb@plt+0x5d18>  // b.any
  408750:	cmp	x23, #0x1
  408754:	str	w10, [x20, #2448]
  408758:	str	w9, [x20, #2452]
  40875c:	b.ne	4088f4 <wcrtomb@plt+0x5f34>  // b.any
  408760:	ldp	x9, x8, [x20, #24]
  408764:	ldr	x21, [x20, #104]
  408768:	sub	x8, x8, x9
  40876c:	cmp	x8, x21
  408770:	b.cs	408784 <wcrtomb@plt+0x5dc4>  // b.hs, b.nlast
  408774:	mov	x0, x20
  408778:	mov	x1, x21
  40877c:	bl	414e1c <_obstack_newchunk@@Base>
  408780:	ldr	x9, [x20, #24]
  408784:	ldr	x8, [x20, #16]
  408788:	add	x9, x9, x21
  40878c:	str	x9, [x20, #24]
  408790:	cmp	x9, x8
  408794:	b.ne	4087a4 <wcrtomb@plt+0x5de4>  // b.any
  408798:	ldrb	w10, [x20, #80]
  40879c:	orr	w10, w10, #0x2
  4087a0:	strb	w10, [x20, #80]
  4087a4:	ldr	x10, [x20, #48]
  4087a8:	ldr	x12, [x20, #8]
  4087ac:	ldr	x11, [x20, #32]
  4087b0:	add	x9, x10, x9
  4087b4:	bic	x10, x9, x10
  4087b8:	sub	x9, x10, x12
  4087bc:	sub	x12, x11, x12
  4087c0:	cmp	x9, x12
  4087c4:	str	x10, [x20, #24]
  4087c8:	b.ls	4087d4 <wcrtomb@plt+0x5e14>  // b.plast
  4087cc:	mov	x10, x11
  4087d0:	str	x11, [x20, #24]
  4087d4:	ldr	x9, [x20, #104]
  4087d8:	str	x10, [x20, #16]
  4087dc:	str	x8, [x20, #2424]
  4087e0:	cmp	x9, #0x1
  4087e4:	b.lt	4088f4 <wcrtomb@plt+0x5f34>  // b.tstop
  4087e8:	ldr	x10, [x20, #96]
  4087ec:	add	x8, x9, x8
  4087f0:	cmp	x9, #0x1
  4087f4:	ldr	x11, [x10, #8]
  4087f8:	ldrb	w11, [x11, #24]
  4087fc:	sturb	w11, [x8, #-1]
  408800:	b.eq	408828 <wcrtomb@plt+0x5e68>  // b.none
  408804:	ldr	x10, [x10, #24]
  408808:	ldr	x11, [x20, #2424]
  40880c:	ldr	x8, [x10, #8]
  408810:	add	x11, x11, x9
  408814:	sub	x9, x9, #0x1
  408818:	cmp	x9, #0x1
  40881c:	ldrb	w8, [x8, #24]
  408820:	sturb	w8, [x11, #-2]
  408824:	b.gt	408804 <wcrtomb@plt+0x5e44>
  408828:	ldr	x8, [x20, #104]
  40882c:	cmp	x8, #0x2
  408830:	b.lt	4088f4 <wcrtomb@plt+0x5f34>  // b.tstop
  408834:	ldp	x9, x10, [x20, #24]
  408838:	lsl	x8, x8, #3
  40883c:	sub	x21, x8, #0x8
  408840:	sub	x8, x10, x9
  408844:	cmp	x8, x21
  408848:	b.cs	40885c <wcrtomb@plt+0x5e9c>  // b.hs, b.nlast
  40884c:	mov	x0, x20
  408850:	mov	x1, x21
  408854:	bl	414e1c <_obstack_newchunk@@Base>
  408858:	ldr	x9, [x20, #24]
  40885c:	ldr	x8, [x20, #16]
  408860:	add	x9, x9, x21
  408864:	str	x9, [x20, #24]
  408868:	cmp	x9, x8
  40886c:	b.ne	40887c <wcrtomb@plt+0x5ebc>  // b.any
  408870:	ldrb	w10, [x20, #80]
  408874:	orr	w10, w10, #0x2
  408878:	strb	w10, [x20, #80]
  40887c:	ldr	x11, [x20, #48]
  408880:	ldr	x12, [x20, #8]
  408884:	ldr	x13, [x20, #32]
  408888:	ldr	x10, [x20, #104]
  40888c:	add	x9, x11, x9
  408890:	bic	x9, x9, x11
  408894:	sub	x14, x13, x12
  408898:	sub	x11, x9, x12
  40889c:	cmp	x11, x14
  4088a0:	csel	x9, x13, x9, hi  // hi = pmore
  4088a4:	cmp	x10, #0x2
  4088a8:	stp	x9, x9, [x20, #16]
  4088ac:	str	x8, [x20, #2432]
  4088b0:	b.lt	4088dc <wcrtomb@plt+0x5f1c>  // b.tstop
  4088b4:	ldr	x9, [x20, #96]
  4088b8:	mov	x11, xzr
  4088bc:	ldr	x9, [x9, #24]
  4088c0:	ldr	x10, [x9, #48]
  4088c4:	str	x10, [x8, x11, lsl #3]
  4088c8:	ldr	x10, [x20, #104]
  4088cc:	add	x11, x11, #0x1
  4088d0:	sub	x12, x10, #0x1
  4088d4:	cmp	x11, x12
  4088d8:	b.lt	4088bc <wcrtomb@plt+0x5efc>  // b.tstop
  4088dc:	ldr	x8, [x20, #2424]
  4088e0:	add	x8, x10, x8
  4088e4:	ldurb	w8, [x8, #-2]
  4088e8:	cbz	x22, 4088f0 <wcrtomb@plt+0x5f30>
  4088ec:	ldrb	w8, [x22, x8]
  4088f0:	strb	w8, [x20, #2456]
  4088f4:	cbz	x22, 408918 <wcrtomb@plt+0x5f58>
  4088f8:	mov	x8, xzr
  4088fc:	add	x9, x20, #0x78
  408900:	ldrb	w10, [x22, x8]
  408904:	ldrb	w10, [x19, x10]
  408908:	strb	w10, [x9, x8]
  40890c:	add	x8, x8, #0x1
  408910:	cmp	x8, #0x100
  408914:	b.ne	408900 <wcrtomb@plt+0x5f40>  // b.any
  408918:	add	sp, sp, #0x900
  40891c:	ldp	x20, x19, [sp, #80]
  408920:	ldp	x22, x21, [sp, #64]
  408924:	ldp	x24, x23, [sp, #48]
  408928:	ldp	x26, x25, [sp, #32]
  40892c:	ldr	x28, [sp, #16]
  408930:	ldp	x29, x30, [sp], #96
  408934:	ret
  408938:	cbz	x0, 40897c <wcrtomb@plt+0x5fbc>
  40893c:	stp	x29, x30, [sp, #-32]!
  408940:	stp	x20, x19, [sp, #16]
  408944:	mov	x20, x0
  408948:	ldr	x0, [x0]
  40894c:	mov	x29, sp
  408950:	mov	x19, x1
  408954:	bl	408938 <wcrtomb@plt+0x5f78>
  408958:	ldr	x0, [x20, #8]
  40895c:	mov	x1, x19
  408960:	bl	408938 <wcrtomb@plt+0x5f78>
  408964:	ldr	x8, [x20, #16]
  408968:	ldr	x9, [x19]
  40896c:	str	x8, [x9, #24]
  408970:	str	x8, [x19]
  408974:	ldp	x20, x19, [sp, #16]
  408978:	ldp	x29, x30, [sp], #32
  40897c:	ret
  408980:	stp	x29, x30, [sp, #-48]!
  408984:	str	x21, [sp, #16]
  408988:	stp	x20, x19, [sp, #32]
  40898c:	mov	x29, sp
  408990:	cbz	x0, 4089cc <wcrtomb@plt+0x600c>
  408994:	mov	x21, x0
  408998:	ldr	x0, [x0]
  40899c:	mov	x19, x2
  4089a0:	mov	x20, x1
  4089a4:	bl	408980 <wcrtomb@plt+0x5fc0>
  4089a8:	ldr	x0, [x21, #8]
  4089ac:	mov	x1, x20
  4089b0:	mov	x2, x19
  4089b4:	bl	408980 <wcrtomb@plt+0x5fc0>
  4089b8:	ldrb	w8, [x21, #24]
  4089bc:	ldrb	w9, [x19, x8]
  4089c0:	cmp	x9, x20
  4089c4:	b.le	4089cc <wcrtomb@plt+0x600c>
  4089c8:	strb	w20, [x19, x8]
  4089cc:	ldp	x20, x19, [sp, #32]
  4089d0:	ldr	x21, [sp, #16]
  4089d4:	ldp	x29, x30, [sp], #48
  4089d8:	ret
  4089dc:	stp	x29, x30, [sp, #-64]!
  4089e0:	str	x23, [sp, #16]
  4089e4:	stp	x22, x21, [sp, #32]
  4089e8:	stp	x20, x19, [sp, #48]
  4089ec:	mov	x29, sp
  4089f0:	cbz	x0, 408a8c <wcrtomb@plt+0x60cc>
  4089f4:	mov	x21, x0
  4089f8:	ldr	x0, [x0]
  4089fc:	and	w23, w3, #0x1
  408a00:	mov	w19, w3
  408a04:	mov	w3, w23
  408a08:	mov	x20, x2
  408a0c:	mov	x22, x1
  408a10:	bl	4089dc <wcrtomb@plt+0x601c>
  408a14:	ldr	x0, [x21, #8]
  408a18:	mov	x1, x22
  408a1c:	mov	x2, x20
  408a20:	mov	w3, w23
  408a24:	bl	4089dc <wcrtomb@plt+0x601c>
  408a28:	cbz	x22, 408a58 <wcrtomb@plt+0x6098>
  408a2c:	ldr	x8, [x22, #8]
  408a30:	cbz	x8, 408a50 <wcrtomb@plt+0x6090>
  408a34:	ldrb	w9, [x21, #24]
  408a38:	ldrb	w10, [x8, #24]
  408a3c:	cmp	w9, w10
  408a40:	b.eq	408a64 <wcrtomb@plt+0x60a4>  // b.none
  408a44:	cset	w10, cs  // cs = hs, nlast
  408a48:	ldr	x8, [x8, w10, uxtw #3]
  408a4c:	cbnz	x8, 408a38 <wcrtomb@plt+0x6078>
  408a50:	ldr	x22, [x22, #32]
  408a54:	cbnz	x22, 408a2c <wcrtomb@plt+0x606c>
  408a58:	ldr	x8, [x21, #16]
  408a5c:	str	x20, [x8, #32]
  408a60:	b	408a8c <wcrtomb@plt+0x60cc>
  408a64:	ldr	x9, [x8, #16]
  408a68:	ldr	x8, [x21, #16]
  408a6c:	str	x9, [x8, #32]
  408a70:	tbnz	w19, #0, 408a8c <wcrtomb@plt+0x60cc>
  408a74:	ldr	x9, [x9]
  408a78:	cbz	x9, 408a8c <wcrtomb@plt+0x60cc>
  408a7c:	ldr	x9, [x8]
  408a80:	cbnz	x9, 408a8c <wcrtomb@plt+0x60cc>
  408a84:	mov	x9, #0xffffffffffffffff    	// #-1
  408a88:	str	x9, [x8]
  408a8c:	ldp	x20, x19, [sp, #48]
  408a90:	ldp	x22, x21, [sp, #32]
  408a94:	ldr	x23, [sp, #16]
  408a98:	ldp	x29, x30, [sp], #64
  408a9c:	ret
  408aa0:	stp	x29, x30, [sp, #-32]!
  408aa4:	stp	x20, x19, [sp, #16]
  408aa8:	mov	x29, sp
  408aac:	cbz	x1, 408b04 <wcrtomb@plt+0x6144>
  408ab0:	mov	x20, x1
  408ab4:	ldr	x1, [x1]
  408ab8:	mov	x19, x0
  408abc:	bl	408aa0 <wcrtomb@plt+0x60e0>
  408ac0:	tbz	w0, #0, 408afc <wcrtomb@plt+0x613c>
  408ac4:	ldr	x1, [x20, #8]
  408ac8:	mov	x0, x19
  408acc:	bl	408aa0 <wcrtomb@plt+0x60e0>
  408ad0:	mov	w8, w0
  408ad4:	mov	w0, wzr
  408ad8:	cbz	x19, 408b08 <wcrtomb@plt+0x6148>
  408adc:	tbz	w8, #0, 408b08 <wcrtomb@plt+0x6148>
  408ae0:	ldrb	w8, [x20, #24]
  408ae4:	ldrb	w9, [x19, #24]
  408ae8:	cmp	w8, w9
  408aec:	b.eq	408b04 <wcrtomb@plt+0x6144>  // b.none
  408af0:	cset	w9, cs  // cs = hs, nlast
  408af4:	ldr	x19, [x19, w9, uxtw #3]
  408af8:	cbnz	x19, 408ae4 <wcrtomb@plt+0x6124>
  408afc:	mov	w0, wzr
  408b00:	b	408b08 <wcrtomb@plt+0x6148>
  408b04:	mov	w0, #0x1                   	// #1
  408b08:	ldp	x20, x19, [sp, #16]
  408b0c:	ldp	x29, x30, [sp], #32
  408b10:	ret
  408b14:	cbz	x0, 408b54 <wcrtomb@plt+0x6194>
  408b18:	stp	x29, x30, [sp, #-32]!
  408b1c:	stp	x20, x19, [sp, #16]
  408b20:	mov	x20, x0
  408b24:	ldr	x0, [x0]
  408b28:	mov	x29, sp
  408b2c:	mov	x19, x1
  408b30:	bl	408b14 <wcrtomb@plt+0x6154>
  408b34:	ldr	x0, [x20, #8]
  408b38:	mov	x1, x19
  408b3c:	bl	408b14 <wcrtomb@plt+0x6154>
  408b40:	ldr	x8, [x20, #16]
  408b44:	ldrb	w9, [x20, #24]
  408b48:	str	x8, [x19, x9, lsl #3]
  408b4c:	ldp	x20, x19, [sp, #16]
  408b50:	ldp	x29, x30, [sp], #32
  408b54:	ret
  408b58:	ldr	x5, [x0, #2464]
  408b5c:	and	w4, w4, #0x1
  408b60:	br	x5
  408b64:	stp	x29, x30, [sp, #-32]!
  408b68:	mov	x1, xzr
  408b6c:	str	x19, [sp, #16]
  408b70:	mov	x29, sp
  408b74:	mov	x19, x0
  408b78:	bl	414f9c <_obstack_free@@Base>
  408b7c:	mov	x0, x19
  408b80:	ldr	x19, [sp, #16]
  408b84:	ldp	x29, x30, [sp], #32
  408b88:	b	402770 <free@plt>
  408b8c:	ldr	w8, [x2, #2452]
  408b90:	add	x9, x0, x1
  408b94:	tbnz	w8, #31, 408bcc <wcrtomb@plt+0x620c>
  408b98:	cmp	x0, x9
  408b9c:	b.cs	408bf0 <wcrtomb@plt+0x6230>  // b.hs, b.nlast
  408ba0:	ldrb	w10, [x0]
  408ba4:	add	x10, x2, x10, lsl #3
  408ba8:	ldr	x10, [x10, #376]
  408bac:	cbnz	x10, 408bf4 <wcrtomb@plt+0x6234>
  408bb0:	add	x0, x0, #0x1
  408bb4:	tst	x0, #0xf
  408bb8:	b.ne	408b98 <wcrtomb@plt+0x61d8>  // b.any
  408bbc:	ldr	w1, [x2, #2448]
  408bc0:	sub	x3, x9, x0
  408bc4:	mov	w2, w8
  408bc8:	b	4109e8 <wcrtomb@plt+0xe028>
  408bcc:	cmp	x1, #0x1
  408bd0:	b.lt	408bf0 <wcrtomb@plt+0x6230>  // b.tstop
  408bd4:	ldrb	w8, [x0]
  408bd8:	add	x8, x2, x8, lsl #3
  408bdc:	ldr	x8, [x8, #376]
  408be0:	cbnz	x8, 408bf4 <wcrtomb@plt+0x6234>
  408be4:	add	x0, x0, #0x1
  408be8:	cmp	x0, x9
  408bec:	b.cc	408bd4 <wcrtomb@plt+0x6214>  // b.lo, b.ul, b.last
  408bf0:	mov	x0, xzr
  408bf4:	ret
  408bf8:	ret
  408bfc:	ldrb	w8, [x0]
  408c00:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408c04:	add	x9, x9, #0x8d8
  408c08:	add	x8, x9, x8
  408c0c:	ldrsb	x8, [x8, #3]
  408c10:	cmn	x8, #0x2
  408c14:	b.ne	408c1c <wcrtomb@plt+0x625c>  // b.any
  408c18:	b	414c80 <wcrtomb@plt+0x122c0>
  408c1c:	mov	x0, x8
  408c20:	ret
  408c24:	stp	x29, x30, [sp, #-48]!
  408c28:	str	x21, [sp, #16]
  408c2c:	stp	x20, x19, [sp, #32]
  408c30:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408c34:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  408c38:	mov	x19, xzr
  408c3c:	add	x20, x20, #0x8d8
  408c40:	add	x21, x21, #0x65e
  408c44:	mov	x29, sp
  408c48:	add	x8, x20, x19, lsl #2
  408c4c:	ldr	w0, [x8, #260]
  408c50:	cmp	w0, #0x5f
  408c54:	b.ne	408c60 <wcrtomb@plt+0x62a0>  // b.any
  408c58:	mov	w8, #0x1                   	// #1
  408c5c:	b	408c6c <wcrtomb@plt+0x62ac>
  408c60:	bl	402860 <iswalnum@plt>
  408c64:	cmp	w0, #0x0
  408c68:	cset	w8, ne  // ne = any
  408c6c:	strb	w8, [x21, x19]
  408c70:	add	x19, x19, #0x1
  408c74:	cmp	x19, #0x100
  408c78:	b.ne	408c48 <wcrtomb@plt+0x6288>  // b.any
  408c7c:	ldp	x20, x19, [sp, #32]
  408c80:	ldr	x21, [sp, #16]
  408c84:	ldp	x29, x30, [sp], #48
  408c88:	ret
  408c8c:	sub	sp, sp, #0x40
  408c90:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408c94:	ldrb	w8, [x8, #3550]
  408c98:	stp	x29, x30, [sp, #16]
  408c9c:	stp	x22, x21, [sp, #32]
  408ca0:	stp	x20, x19, [sp, #48]
  408ca4:	add	x29, sp, #0x10
  408ca8:	cbz	w8, 408cc0 <wcrtomb@plt+0x6300>
  408cac:	mov	w19, w0
  408cb0:	bl	402780 <__ctype_get_mb_cur_max@plt>
  408cb4:	cmp	x0, #0x1
  408cb8:	b.eq	408ce0 <wcrtomb@plt+0x6320>  // b.none
  408cbc:	tbnz	w19, #0, 408ce0 <wcrtomb@plt+0x6320>
  408cc0:	mov	x19, xzr
  408cc4:	mov	x0, x19
  408cc8:	bl	407890 <wcrtomb@plt+0x4ed0>
  408ccc:	ldp	x20, x19, [sp, #48]
  408cd0:	ldp	x22, x21, [sp, #32]
  408cd4:	ldp	x29, x30, [sp, #16]
  408cd8:	add	sp, sp, #0x40
  408cdc:	ret
  408ce0:	mov	w0, #0x100                 	// #256
  408ce4:	bl	412738 <wcrtomb@plt+0xfd78>
  408ce8:	mov	x19, x0
  408cec:	bl	402780 <__ctype_get_mb_cur_max@plt>
  408cf0:	cmp	x0, #0x1
  408cf4:	b.ne	408d18 <wcrtomb@plt+0x6358>  // b.any
  408cf8:	mov	x20, xzr
  408cfc:	mov	w0, w20
  408d00:	bl	4024f0 <toupper@plt>
  408d04:	strb	w0, [x19, x20]
  408d08:	add	x20, x20, #0x1
  408d0c:	cmp	x20, #0x100
  408d10:	b.ne	408cfc <wcrtomb@plt+0x633c>  // b.any
  408d14:	b	408cc4 <wcrtomb@plt+0x6304>
  408d18:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408d1c:	mov	x21, xzr
  408d20:	add	x22, x22, #0x8d8
  408d24:	add	x8, x22, x21, lsl #2
  408d28:	ldr	w20, [x8, #260]
  408d2c:	mov	w0, w20
  408d30:	bl	4028d0 <towupper@plt>
  408d34:	cmp	w0, w20
  408d38:	b.ne	408d44 <wcrtomb@plt+0x6384>  // b.any
  408d3c:	strb	w21, [x19, x21]
  408d40:	b	408d60 <wcrtomb@plt+0x63a0>
  408d44:	mov	w1, w0
  408d48:	add	x0, x19, x21
  408d4c:	add	x2, sp, #0x8
  408d50:	str	xzr, [sp, #8]
  408d54:	bl	4029c0 <wcrtomb@plt>
  408d58:	cmp	x0, #0x1
  408d5c:	b.ne	408d70 <wcrtomb@plt+0x63b0>  // b.any
  408d60:	add	x21, x21, #0x1
  408d64:	cmp	x21, #0x100
  408d68:	b.ne	408d24 <wcrtomb@plt+0x6364>  // b.any
  408d6c:	b	408cc4 <wcrtomb@plt+0x6304>
  408d70:	bl	4026c0 <abort@plt>
  408d74:	sub	sp, sp, #0x60
  408d78:	stp	x29, x30, [sp, #16]
  408d7c:	stp	x26, x25, [sp, #32]
  408d80:	stp	x24, x23, [sp, #48]
  408d84:	stp	x22, x21, [sp, #64]
  408d88:	stp	x20, x19, [sp, #80]
  408d8c:	ldr	x24, [x0]
  408d90:	mov	x19, x2
  408d94:	add	x29, sp, #0x10
  408d98:	cmp	x24, x2
  408d9c:	b.cs	408df8 <wcrtomb@plt+0x6438>  // b.hs, b.nlast
  408da0:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408da4:	ldrb	w8, [x8, #2266]
  408da8:	mov	x22, x3
  408dac:	mov	x21, x0
  408db0:	mov	x20, x1
  408db4:	cbz	w8, 408e0c <wcrtomb@plt+0x644c>
  408db8:	cmp	x19, x22
  408dbc:	b.cs	408e00 <wcrtomb@plt+0x6440>  // b.hs, b.nlast
  408dc0:	ldrb	w8, [x19]
  408dc4:	and	w8, w8, #0xc0
  408dc8:	cmp	w8, #0x80
  408dcc:	b.ne	408e00 <wcrtomb@plt+0x6440>  // b.any
  408dd0:	mov	x25, #0xffffffffffffffff    	// #-1
  408dd4:	mov	w0, #0x1                   	// #1
  408dd8:	ldrb	w8, [x19, x25]
  408ddc:	and	w8, w8, #0xc0
  408de0:	cmp	w8, #0x80
  408de4:	b.ne	408e98 <wcrtomb@plt+0x64d8>  // b.any
  408de8:	sub	x25, x25, #0x1
  408dec:	cmn	x25, #0x4
  408df0:	b.ne	408dd8 <wcrtomb@plt+0x6418>  // b.any
  408df4:	b	408e04 <wcrtomb@plt+0x6444>
  408df8:	sub	x0, x19, x24
  408dfc:	b	408e7c <wcrtomb@plt+0x64bc>
  408e00:	mov	w0, #0x1                   	// #1
  408e04:	mov	x8, x19
  408e08:	b	408e64 <wcrtomb@plt+0x64a4>
  408e0c:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408e10:	add	x25, x25, #0x8d8
  408e14:	str	xzr, [sp, #8]
  408e18:	ldrb	w8, [x24]
  408e1c:	mov	x23, x24
  408e20:	add	x8, x25, x8
  408e24:	ldrsb	x0, [x8, #3]
  408e28:	cmn	x0, #0x2
  408e2c:	b.ne	408e40 <wcrtomb@plt+0x6480>  // b.any
  408e30:	sub	x1, x22, x23
  408e34:	add	x2, sp, #0x8
  408e38:	mov	x0, x23
  408e3c:	bl	414c80 <wcrtomb@plt+0x122c0>
  408e40:	cmn	x0, #0x2
  408e44:	b.cc	408e50 <wcrtomb@plt+0x6490>  // b.lo, b.ul, b.last
  408e48:	mov	w0, #0x1                   	// #1
  408e4c:	str	xzr, [sp, #8]
  408e50:	add	x24, x23, x0
  408e54:	cmp	x24, x19
  408e58:	b.cc	408e18 <wcrtomb@plt+0x6458>  // b.lo, b.ul, b.last
  408e5c:	mov	x8, x24
  408e60:	mov	x24, x23
  408e64:	str	x8, [x21]
  408e68:	cbz	x20, 408e70 <wcrtomb@plt+0x64b0>
  408e6c:	str	x0, [x20]
  408e70:	sub	x9, x19, x24
  408e74:	cmp	x8, x19
  408e78:	csel	x0, xzr, x9, eq  // eq = none
  408e7c:	ldp	x20, x19, [sp, #80]
  408e80:	ldp	x22, x21, [sp, #64]
  408e84:	ldp	x24, x23, [sp, #48]
  408e88:	ldp	x26, x25, [sp, #32]
  408e8c:	ldp	x29, x30, [sp, #16]
  408e90:	add	sp, sp, #0x60
  408e94:	ret
  408e98:	str	xzr, [sp, #8]
  408e9c:	add	x23, x19, x25
  408ea0:	ldrb	w8, [x23]
  408ea4:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408ea8:	add	x9, x9, #0x8d8
  408eac:	neg	x26, x25
  408eb0:	add	x8, x9, x8
  408eb4:	ldrsb	x0, [x8, #3]
  408eb8:	cmn	x0, #0x2
  408ebc:	b.ne	408ed0 <wcrtomb@plt+0x6510>  // b.any
  408ec0:	sub	x1, x22, x23
  408ec4:	add	x2, sp, #0x8
  408ec8:	mov	x0, x23
  408ecc:	bl	414c80 <wcrtomb@plt+0x122c0>
  408ed0:	cmp	x0, x26
  408ed4:	cset	w9, hi  // hi = pmore
  408ed8:	cmn	x0, #0x2
  408edc:	add	x8, x19, x0
  408ee0:	cset	w10, cc  // cc = lo, ul, last
  408ee4:	add	x8, x8, x25
  408ee8:	tst	w9, w10
  408eec:	csel	x8, x8, x19, ne  // ne = any
  408ef0:	csel	x24, x23, x24, ne  // ne = any
  408ef4:	b	408e64 <wcrtomb@plt+0x64a4>
  408ef8:	mov	w2, #0x1                   	// #1
  408efc:	b	408f00 <wcrtomb@plt+0x6540>
  408f00:	sub	sp, sp, #0x60
  408f04:	str	x25, [sp, #32]
  408f08:	stp	x24, x23, [sp, #48]
  408f0c:	adrp	x24, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  408f10:	adrp	x25, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408f14:	stp	x29, x30, [sp, #16]
  408f18:	stp	x22, x21, [sp, #64]
  408f1c:	stp	x20, x19, [sp, #80]
  408f20:	add	x29, sp, #0x10
  408f24:	mov	w20, w2
  408f28:	mov	x21, x0
  408f2c:	mov	x19, xzr
  408f30:	sub	x23, x1, x0
  408f34:	add	x24, x24, #0x65e
  408f38:	add	x25, x25, #0x8d8
  408f3c:	str	xzr, [x29, #24]
  408f40:	subs	x2, x23, x19
  408f44:	b.ls	408fb0 <wcrtomb@plt+0x65f0>  // b.plast
  408f48:	add	x1, x21, x19
  408f4c:	ldrb	w8, [x1]
  408f50:	ldrb	w9, [x24, x8]
  408f54:	cbz	w9, 408f64 <wcrtomb@plt+0x65a4>
  408f58:	add	x19, x19, #0x1
  408f5c:	tbnz	w20, #0, 408f40 <wcrtomb@plt+0x6580>
  408f60:	b	408fb0 <wcrtomb@plt+0x65f0>
  408f64:	add	x8, x25, x8
  408f68:	ldrb	w8, [x8, #3]
  408f6c:	cmp	w8, #0xfe
  408f70:	b.ne	408fb0 <wcrtomb@plt+0x65f0>  // b.any
  408f74:	sub	x0, x29, #0x4
  408f78:	add	x3, x29, #0x18
  408f7c:	stur	wzr, [x29, #-4]
  408f80:	bl	414ca4 <wcrtomb@plt+0x122e4>
  408f84:	ldur	w8, [x29, #-4]
  408f88:	mov	x22, x0
  408f8c:	cmp	w8, #0x5f
  408f90:	b.eq	408fa0 <wcrtomb@plt+0x65e0>  // b.none
  408f94:	mov	w0, w8
  408f98:	bl	402860 <iswalnum@plt>
  408f9c:	cbz	w0, 408fb0 <wcrtomb@plt+0x65f0>
  408fa0:	cmp	x22, #0x0
  408fa4:	add	x8, x22, x19
  408fa8:	cinc	x19, x8, eq  // eq = none
  408fac:	tbnz	w20, #0, 408f40 <wcrtomb@plt+0x6580>
  408fb0:	mov	x0, x19
  408fb4:	ldp	x20, x19, [sp, #80]
  408fb8:	ldp	x22, x21, [sp, #64]
  408fbc:	ldp	x24, x23, [sp, #48]
  408fc0:	ldr	x25, [sp, #32]
  408fc4:	ldp	x29, x30, [sp, #16]
  408fc8:	add	sp, sp, #0x60
  408fcc:	ret
  408fd0:	mov	w2, wzr
  408fd4:	b	408f00 <wcrtomb@plt+0x6540>
  408fd8:	sub	sp, sp, #0x30
  408fdc:	cmp	x0, x1
  408fe0:	stp	x29, x30, [sp, #16]
  408fe4:	stp	x20, x19, [sp, #32]
  408fe8:	add	x29, sp, #0x10
  408fec:	b.eq	409060 <wcrtomb@plt+0x66a0>  // b.none
  408ff0:	mov	x20, x1
  408ff4:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  408ff8:	ldrb	w8, [x20, #-1]!
  408ffc:	ldrb	w9, [x9, #2264]
  409000:	cbz	w9, 409068 <wcrtomb@plt+0x66a8>
  409004:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409008:	ldrb	w9, [x9, #2266]
  40900c:	mov	x19, x2
  409010:	cbz	w9, 40902c <wcrtomb@plt+0x666c>
  409014:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409018:	add	x9, x9, #0x8d8
  40901c:	add	x9, x9, x8
  409020:	ldrb	w9, [x9, #3]
  409024:	cmp	w9, #0xfe
  409028:	b.ne	409068 <wcrtomb@plt+0x66a8>  // b.any
  40902c:	str	x0, [sp, #8]
  409030:	add	x0, sp, #0x8
  409034:	mov	x1, xzr
  409038:	mov	x2, x20
  40903c:	mov	x3, x19
  409040:	bl	408d74 <wcrtomb@plt+0x63b4>
  409044:	sub	x0, x20, x0
  409048:	mov	x1, x19
  40904c:	ldp	x20, x19, [sp, #32]
  409050:	ldp	x29, x30, [sp, #16]
  409054:	mov	w2, wzr
  409058:	add	sp, sp, #0x30
  40905c:	b	408f00 <wcrtomb@plt+0x6540>
  409060:	mov	x0, xzr
  409064:	b	409074 <wcrtomb@plt+0x66b4>
  409068:	adrp	x9, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40906c:	add	x9, x9, #0x65e
  409070:	ldrb	w0, [x9, x8]
  409074:	ldp	x20, x19, [sp, #32]
  409078:	ldp	x29, x30, [sp, #16]
  40907c:	add	sp, sp, #0x30
  409080:	ret
  409084:	mov	w0, #0x1                   	// #1
  409088:	b	403748 <wcrtomb@plt+0xd88>
  40908c:	stp	x29, x30, [sp, #-96]!
  409090:	stp	x28, x27, [sp, #16]
  409094:	stp	x26, x25, [sp, #32]
  409098:	stp	x24, x23, [sp, #48]
  40909c:	stp	x22, x21, [sp, #64]
  4090a0:	stp	x20, x19, [sp, #80]
  4090a4:	mov	x29, sp
  4090a8:	mov	x19, x3
  4090ac:	mov	x20, x2
  4090b0:	mov	x24, x1
  4090b4:	mov	x21, x0
  4090b8:	bl	402380 <strlen@plt>
  4090bc:	ldr	x25, [x24]
  4090c0:	cbz	x25, 40914c <wcrtomb@plt+0x678c>
  4090c4:	mov	x22, x0
  4090c8:	mov	w26, wzr
  4090cc:	mov	x23, xzr
  4090d0:	add	x27, x24, #0x8
  4090d4:	mov	x28, #0xffffffffffffffff    	// #-1
  4090d8:	mov	x24, x20
  4090dc:	mov	x0, x25
  4090e0:	mov	x1, x21
  4090e4:	mov	x2, x22
  4090e8:	bl	402560 <strncmp@plt>
  4090ec:	cbnz	w0, 40912c <wcrtomb@plt+0x676c>
  4090f0:	mov	x0, x25
  4090f4:	bl	402380 <strlen@plt>
  4090f8:	cmp	x0, x22
  4090fc:	b.eq	409150 <wcrtomb@plt+0x6790>  // b.none
  409100:	cmn	x28, #0x1
  409104:	b.eq	409128 <wcrtomb@plt+0x6768>  // b.none
  409108:	cbz	x20, 409120 <wcrtomb@plt+0x6760>
  40910c:	madd	x0, x28, x19, x20
  409110:	mov	x1, x24
  409114:	mov	x2, x19
  409118:	bl	4025e0 <bcmp@plt>
  40911c:	cbz	w0, 40912c <wcrtomb@plt+0x676c>
  409120:	mov	w26, #0x1                   	// #1
  409124:	b	40912c <wcrtomb@plt+0x676c>
  409128:	mov	x28, x23
  40912c:	ldr	x25, [x27, x23, lsl #3]
  409130:	add	x23, x23, #0x1
  409134:	add	x24, x24, x19
  409138:	cbnz	x25, 4090dc <wcrtomb@plt+0x671c>
  40913c:	tst	w26, #0x1
  409140:	mov	x8, #0xfffffffffffffffe    	// #-2
  409144:	csel	x0, x8, x28, ne  // ne = any
  409148:	b	409154 <wcrtomb@plt+0x6794>
  40914c:	mov	x23, #0xffffffffffffffff    	// #-1
  409150:	mov	x0, x23
  409154:	ldp	x20, x19, [sp, #80]
  409158:	ldp	x22, x21, [sp, #64]
  40915c:	ldp	x24, x23, [sp, #48]
  409160:	ldp	x26, x25, [sp, #32]
  409164:	ldp	x28, x27, [sp, #16]
  409168:	ldp	x29, x30, [sp], #96
  40916c:	ret
  409170:	stp	x29, x30, [sp, #-48]!
  409174:	adrp	x8, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409178:	adrp	x9, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40917c:	add	x8, x8, #0xdcb
  409180:	add	x9, x9, #0xdb0
  409184:	cmn	x2, #0x1
  409188:	stp	x20, x19, [sp, #32]
  40918c:	mov	x19, x1
  409190:	mov	x20, x0
  409194:	csel	x1, x9, x8, eq  // eq = none
  409198:	mov	w2, #0x5                   	// #5
  40919c:	mov	x0, xzr
  4091a0:	str	x21, [sp, #16]
  4091a4:	mov	x29, sp
  4091a8:	bl	402890 <dcgettext@plt>
  4091ac:	mov	x21, x0
  4091b0:	mov	w1, #0x8                   	// #8
  4091b4:	mov	w0, wzr
  4091b8:	mov	x2, x19
  4091bc:	bl	411c9c <wcrtomb@plt+0xf2dc>
  4091c0:	mov	x19, x0
  4091c4:	mov	w0, #0x1                   	// #1
  4091c8:	mov	x1, x20
  4091cc:	bl	41202c <wcrtomb@plt+0xf66c>
  4091d0:	mov	x2, x21
  4091d4:	mov	x3, x19
  4091d8:	ldp	x20, x19, [sp, #32]
  4091dc:	ldr	x21, [sp, #16]
  4091e0:	mov	x4, x0
  4091e4:	mov	w0, wzr
  4091e8:	mov	w1, wzr
  4091ec:	ldp	x29, x30, [sp], #48
  4091f0:	b	4023b0 <error@plt>
  4091f4:	stp	x29, x30, [sp, #-96]!
  4091f8:	stp	x20, x19, [sp, #80]
  4091fc:	mov	x20, x1
  409200:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409204:	stp	x22, x21, [sp, #64]
  409208:	mov	x19, x2
  40920c:	mov	x21, x0
  409210:	add	x1, x1, #0xde8
  409214:	mov	w2, #0x5                   	// #5
  409218:	mov	x0, xzr
  40921c:	stp	x28, x27, [sp, #16]
  409220:	stp	x26, x25, [sp, #32]
  409224:	stp	x24, x23, [sp, #48]
  409228:	mov	x29, sp
  40922c:	bl	402890 <dcgettext@plt>
  409230:	adrp	x26, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  409234:	ldr	x1, [x26, #1104]
  409238:	bl	4028a0 <fputs_unlocked@plt>
  40923c:	ldr	x24, [x21]
  409240:	cbnz	x24, 409268 <wcrtomb@plt+0x68a8>
  409244:	ldr	x1, [x26, #1104]
  409248:	ldp	x20, x19, [sp, #80]
  40924c:	ldp	x22, x21, [sp, #64]
  409250:	ldp	x24, x23, [sp, #48]
  409254:	ldp	x26, x25, [sp, #32]
  409258:	ldp	x28, x27, [sp, #16]
  40925c:	mov	w0, #0xa                   	// #10
  409260:	ldp	x29, x30, [sp], #96
  409264:	b	402470 <putc_unlocked@plt>
  409268:	add	x28, x21, #0x8
  40926c:	adrp	x21, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409270:	mov	x27, xzr
  409274:	mov	x23, xzr
  409278:	mov	x22, xzr
  40927c:	add	x21, x21, #0xdfd
  409280:	cbnz	x22, 40928c <wcrtomb@plt+0x68cc>
  409284:	mov	x25, xzr
  409288:	b	4092c8 <wcrtomb@plt+0x6908>
  40928c:	add	x1, x20, x27
  409290:	mov	x0, x23
  409294:	mov	x2, x19
  409298:	bl	4025e0 <bcmp@plt>
  40929c:	mov	x25, x27
  4092a0:	cbnz	w0, 4092c8 <wcrtomb@plt+0x6908>
  4092a4:	ldr	x25, [x26, #1104]
  4092a8:	mov	x0, x24
  4092ac:	bl	41203c <wcrtomb@plt+0xf67c>
  4092b0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4092b4:	mov	x2, x0
  4092b8:	mov	x0, x25
  4092bc:	add	x1, x1, #0xe05
  4092c0:	bl	402980 <fprintf@plt>
  4092c4:	b	4092e8 <wcrtomb@plt+0x6928>
  4092c8:	ldr	x23, [x26, #1104]
  4092cc:	mov	x0, x24
  4092d0:	bl	41203c <wcrtomb@plt+0xf67c>
  4092d4:	mov	x2, x0
  4092d8:	mov	x0, x23
  4092dc:	mov	x1, x21
  4092e0:	bl	402980 <fprintf@plt>
  4092e4:	add	x23, x20, x25
  4092e8:	ldr	x24, [x28, x22, lsl #3]
  4092ec:	add	x22, x22, #0x1
  4092f0:	add	x27, x27, x19
  4092f4:	cbz	x24, 409244 <wcrtomb@plt+0x6884>
  4092f8:	b	409280 <wcrtomb@plt+0x68c0>
  4092fc:	stp	x29, x30, [sp, #-64]!
  409300:	stp	x24, x23, [sp, #16]
  409304:	stp	x22, x21, [sp, #32]
  409308:	mov	x21, x3
  40930c:	mov	x22, x2
  409310:	mov	x23, x1
  409314:	mov	x24, x0
  409318:	mov	x0, x1
  40931c:	mov	x1, x2
  409320:	mov	x2, x3
  409324:	mov	x3, x4
  409328:	stp	x20, x19, [sp, #48]
  40932c:	mov	x29, sp
  409330:	mov	x19, x5
  409334:	mov	x20, x4
  409338:	bl	40908c <wcrtomb@plt+0x66cc>
  40933c:	mov	x2, x0
  409340:	tbz	x0, #63, 409368 <wcrtomb@plt+0x69a8>
  409344:	mov	x0, x24
  409348:	mov	x1, x23
  40934c:	bl	409170 <wcrtomb@plt+0x67b0>
  409350:	mov	x0, x22
  409354:	mov	x1, x21
  409358:	mov	x2, x20
  40935c:	bl	4091f4 <wcrtomb@plt+0x6834>
  409360:	blr	x19
  409364:	mov	x2, #0xffffffffffffffff    	// #-1
  409368:	ldp	x20, x19, [sp, #48]
  40936c:	ldp	x22, x21, [sp, #32]
  409370:	ldp	x24, x23, [sp, #16]
  409374:	mov	x0, x2
  409378:	ldp	x29, x30, [sp], #64
  40937c:	ret
  409380:	stp	x29, x30, [sp, #-64]!
  409384:	stp	x22, x21, [sp, #32]
  409388:	stp	x20, x19, [sp, #48]
  40938c:	ldr	x20, [x1]
  409390:	str	x23, [sp, #16]
  409394:	mov	x29, sp
  409398:	cbz	x20, 4093e8 <wcrtomb@plt+0x6a28>
  40939c:	mov	x22, x2
  4093a0:	mov	x23, x1
  4093a4:	mov	x1, x2
  4093a8:	mov	x2, x3
  4093ac:	mov	x19, x3
  4093b0:	mov	x21, x0
  4093b4:	bl	4025e0 <bcmp@plt>
  4093b8:	cbz	w0, 4093e8 <wcrtomb@plt+0x6a28>
  4093bc:	add	x22, x22, x19
  4093c0:	add	x23, x23, #0x8
  4093c4:	ldr	x20, [x23]
  4093c8:	cbz	x20, 4093e8 <wcrtomb@plt+0x6a28>
  4093cc:	mov	x0, x21
  4093d0:	mov	x1, x22
  4093d4:	mov	x2, x19
  4093d8:	bl	4025e0 <bcmp@plt>
  4093dc:	add	x22, x22, x19
  4093e0:	add	x23, x23, #0x8
  4093e4:	cbnz	w0, 4093c4 <wcrtomb@plt+0x6a04>
  4093e8:	mov	x0, x20
  4093ec:	ldp	x20, x19, [sp, #48]
  4093f0:	ldp	x22, x21, [sp, #32]
  4093f4:	ldr	x23, [sp, #16]
  4093f8:	ldp	x29, x30, [sp], #64
  4093fc:	ret
  409400:	sub	sp, sp, #0xd0
  409404:	stp	x29, x30, [sp, #176]
  409408:	add	x29, sp, #0xb0
  40940c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  409410:	str	x19, [sp, #192]
  409414:	mov	x19, x0
  409418:	add	x8, x8, #0x760
  40941c:	mov	w9, #0x4000                	// #16384
  409420:	sub	x0, x29, #0x18
  409424:	mov	x1, xzr
  409428:	stur	wzr, [x29, #-16]
  40942c:	stur	x8, [x29, #-24]
  409430:	stur	x9, [x29, #-8]
  409434:	bl	402330 <sigaltstack@plt>
  409438:	cbnz	w0, 4094cc <wcrtomb@plt+0x6b0c>
  40943c:	adrp	x8, 409000 <wcrtomb@plt+0x6640>
  409440:	add	x8, x8, #0x4dc
  409444:	cmp	x19, #0x0
  409448:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40944c:	csel	x8, x8, x19, eq  // eq = none
  409450:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409454:	add	x1, x1, #0xe0a
  409458:	mov	w2, #0x5                   	// #5
  40945c:	mov	x0, xzr
  409460:	str	x8, [x9, #1888]
  409464:	bl	402890 <dcgettext@plt>
  409468:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40946c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409470:	str	x0, [x8, #1896]
  409474:	add	x1, x1, #0xe18
  409478:	mov	w2, #0x5                   	// #5
  40947c:	mov	x0, xzr
  409480:	bl	402890 <dcgettext@plt>
  409484:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409488:	str	x0, [x8, #1904]
  40948c:	bl	40f784 <wcrtomb@plt+0xcdc4>
  409490:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409494:	mov	x9, sp
  409498:	str	x0, [x8, #1912]
  40949c:	add	x0, x9, #0x8
  4094a0:	bl	402550 <sigemptyset@plt>
  4094a4:	mov	w8, #0x4                   	// #4
  4094a8:	adrp	x9, 409000 <wcrtomb@plt+0x6640>
  4094ac:	movk	w8, #0xc800, lsl #16
  4094b0:	add	x9, x9, #0x4e0
  4094b4:	mov	x1, sp
  4094b8:	mov	w0, #0xb                   	// #11
  4094bc:	mov	x2, xzr
  4094c0:	str	w8, [sp, #136]
  4094c4:	str	x9, [sp]
  4094c8:	bl	402660 <sigaction@plt>
  4094cc:	ldr	x19, [sp, #192]
  4094d0:	ldp	x29, x30, [sp, #176]
  4094d4:	add	sp, sp, #0xd0
  4094d8:	ret
  4094dc:	ret
  4094e0:	stp	x29, x30, [sp, #-16]!
  4094e4:	mov	x29, sp
  4094e8:	bl	4094ec <wcrtomb@plt+0x6b2c>
  4094ec:	stp	x29, x30, [sp, #-32]!
  4094f0:	stp	x20, x19, [sp, #16]
  4094f4:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4094f8:	ldr	x8, [x8, #1888]
  4094fc:	mov	w0, wzr
  409500:	mov	x29, sp
  409504:	blr	x8
  409508:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  40950c:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409510:	ldr	x19, [x8, #1904]
  409514:	ldr	x20, [x9, #1912]
  409518:	ldr	x0, [x9, #1912]
  40951c:	bl	402380 <strlen@plt>
  409520:	mov	x2, x0
  409524:	mov	w0, #0x2                   	// #2
  409528:	mov	x1, x20
  40952c:	bl	4026a0 <write@plt>
  409530:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409534:	add	x1, x1, #0xe27
  409538:	mov	w0, #0x2                   	// #2
  40953c:	mov	w2, #0x2                   	// #2
  409540:	bl	4026a0 <write@plt>
  409544:	mov	x0, x19
  409548:	bl	402380 <strlen@plt>
  40954c:	mov	x2, x0
  409550:	mov	w0, #0x2                   	// #2
  409554:	mov	x1, x19
  409558:	bl	4026a0 <write@plt>
  40955c:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409560:	add	x1, x1, #0x7ac
  409564:	mov	w0, #0x2                   	// #2
  409568:	mov	w2, #0x1                   	// #1
  40956c:	bl	4026a0 <write@plt>
  409570:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  409574:	ldr	w0, [x8, #992]
  409578:	bl	402360 <_exit@plt>
  40957c:	cmp	x0, x1
  409580:	b.eq	4095d0 <wcrtomb@plt+0x6c10>  // b.none
  409584:	ldrb	w8, [x0]
  409588:	ldrb	w9, [x1]
  40958c:	sub	w10, w8, #0x41
  409590:	add	w11, w8, #0x20
  409594:	sub	w12, w9, #0x41
  409598:	cmp	w10, #0x1a
  40959c:	add	w13, w9, #0x20
  4095a0:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  4095a4:	cmp	w12, #0x1a
  4095a8:	csel	w9, w13, w9, cc  // cc = lo, ul, last
  4095ac:	ands	w8, w8, #0xff
  4095b0:	b.eq	4095c4 <wcrtomb@plt+0x6c04>  // b.none
  4095b4:	add	x0, x0, #0x1
  4095b8:	cmp	w8, w9, uxtb
  4095bc:	add	x1, x1, #0x1
  4095c0:	b.eq	409584 <wcrtomb@plt+0x6bc4>  // b.none
  4095c4:	and	w9, w9, #0xff
  4095c8:	sub	w0, w8, w9
  4095cc:	ret
  4095d0:	mov	w0, wzr
  4095d4:	ret
  4095d8:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4095dc:	str	x0, [x8, #1920]
  4095e0:	ret
  4095e4:	and	w8, w0, #0x1
  4095e8:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4095ec:	strb	w8, [x9, #1928]
  4095f0:	ret
  4095f4:	stp	x29, x30, [sp, #-48]!
  4095f8:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4095fc:	ldr	x0, [x8, #1128]
  409600:	str	x21, [sp, #16]
  409604:	stp	x20, x19, [sp, #32]
  409608:	mov	x29, sp
  40960c:	bl	42068c <_obstack_memory_used@@Base+0xb658>
  409610:	cbz	w0, 409630 <wcrtomb@plt+0x6c70>
  409614:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409618:	ldrb	w8, [x8, #1928]
  40961c:	cbz	w8, 409650 <wcrtomb@plt+0x6c90>
  409620:	bl	402930 <__errno_location@plt>
  409624:	ldr	w8, [x0]
  409628:	cmp	w8, #0x20
  40962c:	b.ne	409650 <wcrtomb@plt+0x6c90>  // b.any
  409630:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  409634:	ldr	x0, [x8, #1104]
  409638:	bl	42068c <_obstack_memory_used@@Base+0xb658>
  40963c:	cbnz	w0, 4096bc <wcrtomb@plt+0x6cfc>
  409640:	ldp	x20, x19, [sp, #32]
  409644:	ldr	x21, [sp, #16]
  409648:	ldp	x29, x30, [sp], #48
  40964c:	ret
  409650:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409654:	add	x1, x1, #0xd6f
  409658:	mov	w2, #0x5                   	// #5
  40965c:	mov	x0, xzr
  409660:	bl	402890 <dcgettext@plt>
  409664:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  409668:	ldr	x21, [x8, #1920]
  40966c:	mov	x19, x0
  409670:	bl	402930 <__errno_location@plt>
  409674:	ldr	w20, [x0]
  409678:	cbnz	x21, 409698 <wcrtomb@plt+0x6cd8>
  40967c:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  409680:	add	x2, x2, #0xe07
  409684:	mov	w0, wzr
  409688:	mov	w1, w20
  40968c:	mov	x3, x19
  409690:	bl	4023b0 <error@plt>
  409694:	b	4096bc <wcrtomb@plt+0x6cfc>
  409698:	mov	x0, x21
  40969c:	bl	411e48 <wcrtomb@plt+0xf488>
  4096a0:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4096a4:	mov	x3, x0
  4096a8:	add	x2, x2, #0xd26
  4096ac:	mov	w0, wzr
  4096b0:	mov	w1, w20
  4096b4:	mov	x4, x19
  4096b8:	bl	4023b0 <error@plt>
  4096bc:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  4096c0:	ldr	w0, [x8, #992]
  4096c4:	bl	402360 <_exit@plt>
  4096c8:	stp	x29, x30, [sp, #-32]!
  4096cc:	ldrb	w8, [x2, #456]
  4096d0:	mov	x9, #0xffffffffffffffff    	// #-1
  4096d4:	str	x9, [x2, #48]
  4096d8:	mov	w9, #0x1                   	// #1
  4096dc:	str	x19, [sp, #16]
  4096e0:	mov	x29, sp
  4096e4:	stp	x0, x1, [x2, #32]
  4096e8:	strb	w9, [x2, #120]
  4096ec:	cbz	w8, 409788 <wcrtomb@plt+0x6dc8>
  4096f0:	ldr	x8, [x2, #184]
  4096f4:	mov	x19, x2
  4096f8:	cbnz	x8, 40970c <wcrtomb@plt+0x6d4c>
  4096fc:	mov	w1, #0x10b                 	// #267
  409700:	mov	w2, #0x3                   	// #3
  409704:	mov	x0, x19
  409708:	bl	40c09c <wcrtomb@plt+0x96dc>
  40970c:	mov	x0, x19
  409710:	bl	409870 <wcrtomb@plt+0x6eb0>
  409714:	ldr	x8, [x19, #168]
  409718:	stp	x0, x8, [x19, #128]
  40971c:	mov	x0, x19
  409720:	bl	40a02c <wcrtomb@plt+0x766c>
  409724:	ldr	x8, [x19, #128]
  409728:	cmn	x8, #0x1
  40972c:	b.ne	409794 <wcrtomb@plt+0x6dd4>  // b.any
  409730:	ldr	x8, [x19, #184]
  409734:	mov	x0, x19
  409738:	mvn	x1, x8
  40973c:	bl	4097ac <wcrtomb@plt+0x6dec>
  409740:	mov	w1, #0x105                 	// #261
  409744:	mov	w2, #0x3                   	// #3
  409748:	mov	x0, x19
  40974c:	bl	40c09c <wcrtomb@plt+0x96dc>
  409750:	ldr	x8, [x19, #184]
  409754:	cbz	x8, 409774 <wcrtomb@plt+0x6db4>
  409758:	mov	w1, #0x106                 	// #262
  40975c:	mov	w2, #0x3                   	// #3
  409760:	mov	x0, x19
  409764:	bl	40c09c <wcrtomb@plt+0x96dc>
  409768:	ldr	x8, [x19, #184]
  40976c:	add	x8, x8, #0x1
  409770:	b	409778 <wcrtomb@plt+0x6db8>
  409774:	mov	w8, #0x1                   	// #1
  409778:	str	x8, [x19, #184]
  40977c:	ldr	x19, [sp, #16]
  409780:	ldp	x29, x30, [sp], #32
  409784:	ret
  409788:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40978c:	add	x1, x1, #0x130
  409790:	b	40979c <wcrtomb@plt+0x6ddc>
  409794:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  409798:	add	x1, x1, #0x144
  40979c:	mov	w2, #0x5                   	// #5
  4097a0:	mov	x0, xzr
  4097a4:	bl	402890 <dcgettext@plt>
  4097a8:	bl	402adc <wcrtomb@plt+0x11c>
  4097ac:	stp	x29, x30, [sp, #-48]!
  4097b0:	stp	x20, x19, [sp, #32]
  4097b4:	cmp	x1, #0x113
  4097b8:	mov	x19, x0
  4097bc:	str	x21, [sp, #16]
  4097c0:	mov	x29, sp
  4097c4:	b.ne	409848 <wcrtomb@plt+0x6e88>  // b.any
  4097c8:	ldrb	w8, [x19, #1048]
  4097cc:	cbz	w8, 409848 <wcrtomb@plt+0x6e88>
  4097d0:	ldr	x8, [x19, #104]
  4097d4:	cmp	x8, #0x1
  4097d8:	b.lt	409820 <wcrtomb@plt+0x6e60>  // b.tstop
  4097dc:	mov	x21, xzr
  4097e0:	mov	w20, wzr
  4097e4:	ldr	x8, [x19, #96]
  4097e8:	mov	x0, x19
  4097ec:	ldr	w1, [x8, x21, lsl #2]
  4097f0:	bl	40bfd0 <wcrtomb@plt+0x9610>
  4097f4:	tbz	w20, #0, 409808 <wcrtomb@plt+0x6e48>
  4097f8:	mov	w1, #0x106                 	// #262
  4097fc:	mov	w2, #0x3                   	// #3
  409800:	mov	x0, x19
  409804:	bl	40c09c <wcrtomb@plt+0x96dc>
  409808:	ldr	x8, [x19, #104]
  40980c:	add	x21, x21, #0x1
  409810:	mov	w20, #0x1                   	// #1
  409814:	cmp	x21, x8
  409818:	b.lt	4097e4 <wcrtomb@plt+0x6e24>  // b.tstop
  40981c:	b	409824 <wcrtomb@plt+0x6e64>
  409820:	mov	w20, wzr
  409824:	ldr	x8, [x19, #80]
  409828:	str	xzr, [x19, #104]
  40982c:	cmn	x8, #0x1
  409830:	b.eq	409860 <wcrtomb@plt+0x6ea0>  // b.none
  409834:	add	x1, x8, #0x114
  409838:	mov	x0, x19
  40983c:	bl	4097ac <wcrtomb@plt+0x6dec>
  409840:	cbz	w20, 409860 <wcrtomb@plt+0x6ea0>
  409844:	mov	w1, #0x106                 	// #262
  409848:	mov	x0, x19
  40984c:	ldp	x20, x19, [sp, #32]
  409850:	ldr	x21, [sp, #16]
  409854:	mov	w2, #0x3                   	// #3
  409858:	ldp	x29, x30, [sp], #48
  40985c:	b	40c09c <wcrtomb@plt+0x96dc>
  409860:	ldp	x20, x19, [sp, #32]
  409864:	ldr	x21, [sp, #16]
  409868:	ldp	x29, x30, [sp], #48
  40986c:	ret
  409870:	sub	sp, sp, #0x50
  409874:	stp	x29, x30, [sp, #32]
  409878:	stp	x22, x21, [sp, #48]
  40987c:	stp	x20, x19, [sp, #64]
  409880:	ldr	x8, [x0, #40]
  409884:	mov	x19, x0
  409888:	add	x29, sp, #0x20
  40988c:	cbz	x8, 4098c0 <wcrtomb@plt+0x6f00>
  409890:	mov	w21, wzr
  409894:	mov	w22, #0x1                   	// #1
  409898:	mov	x0, x19
  40989c:	bl	40c318 <wcrtomb@plt+0x9958>
  4098a0:	cmp	w0, #0x5c
  4098a4:	b.ne	4098c8 <wcrtomb@plt+0x6f08>  // b.any
  4098a8:	cbz	w22, 409908 <wcrtomb@plt+0x6f48>
  4098ac:	ldr	x8, [x19, #40]
  4098b0:	cbz	x8, 409ffc <wcrtomb@plt+0x763c>
  4098b4:	sub	w22, w22, #0x1
  4098b8:	mov	w21, #0x1                   	// #1
  4098bc:	b	409898 <wcrtomb@plt+0x6ed8>
  4098c0:	mov	x0, #0xffffffffffffffff    	// #-1
  4098c4:	b	409964 <wcrtomb@plt+0x6fa4>
  4098c8:	sub	w8, w0, #0x24
  4098cc:	mov	w20, w0
  4098d0:	cmp	w8, #0x3e
  4098d4:	b.hi	40997c <wcrtomb@plt+0x6fbc>  // b.pmore
  4098d8:	adrp	x9, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4098dc:	add	x9, x9, #0xe30
  4098e0:	adr	x10, 4098f0 <wcrtomb@plt+0x6f30>
  4098e4:	ldrb	w11, [x9, x8]
  4098e8:	add	x10, x10, x11, lsl #2
  4098ec:	br	x10
  4098f0:	tbz	w21, #0, 40990c <wcrtomb@plt+0x6f4c>
  4098f4:	ldrb	w8, [x19, #449]
  4098f8:	tbnz	w8, #6, 40990c <wcrtomb@plt+0x6f4c>
  4098fc:	strb	wzr, [x19, #120]
  409900:	mov	w0, #0x112                 	// #274
  409904:	b	409964 <wcrtomb@plt+0x6fa4>
  409908:	mov	w20, #0x5c                  	// #92
  40990c:	ldrb	w8, [x19, #1048]
  409910:	strb	wzr, [x19, #120]
  409914:	cbz	w8, 409920 <wcrtomb@plt+0x6f60>
  409918:	mov	w0, #0x109                 	// #265
  40991c:	b	409964 <wcrtomb@plt+0x6fa4>
  409920:	ldrb	w8, [x19, #457]
  409924:	cbz	w8, 409938 <wcrtomb@plt+0x6f78>
  409928:	bl	402760 <__ctype_b_loc@plt>
  40992c:	ldr	x8, [x0]
  409930:	ldrh	w8, [x8, w20, sxtw #1]
  409934:	tbnz	w8, #10, 409940 <wcrtomb@plt+0x6f80>
  409938:	sxtw	x0, w20
  40993c:	b	409964 <wcrtomb@plt+0x6fa4>
  409940:	movi	v0.2d, #0x0
  409944:	mov	x1, sp
  409948:	mov	w0, w20
  40994c:	stp	q0, q0, [sp]
  409950:	bl	40ca78 <wcrtomb@plt+0xa0b8>
  409954:	mov	x1, sp
  409958:	mov	x0, x19
  40995c:	bl	40c374 <wcrtomb@plt+0x99b4>
  409960:	add	x0, x0, #0x114
  409964:	str	x0, [x19, #48]
  409968:	ldp	x20, x19, [sp, #64]
  40996c:	ldp	x22, x21, [sp, #48]
  409970:	ldp	x29, x30, [sp, #32]
  409974:	add	sp, sp, #0x50
  409978:	ret
  40997c:	sub	w8, w20, #0x73
  409980:	cmp	w8, #0x9
  409984:	b.hi	409a1c <wcrtomb@plt+0x705c>  // b.pmore
  409988:	adrp	x9, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40998c:	add	x9, x9, #0xe6f
  409990:	adr	x10, 40990c <wcrtomb@plt+0x6f4c>
  409994:	ldrb	w11, [x9, x8]
  409998:	add	x10, x10, x11, lsl #2
  40999c:	br	x10
  4099a0:	tbz	w21, #0, 40990c <wcrtomb@plt+0x6f4c>
  4099a4:	ldrb	w8, [x19, #450]
  4099a8:	tbnz	w8, #3, 40990c <wcrtomb@plt+0x6f4c>
  4099ac:	ldrb	w8, [x19, #1048]
  4099b0:	cbz	w8, 409e24 <wcrtomb@plt+0x7464>
  4099b4:	cmp	w20, #0x73
  4099b8:	ldp	x20, x21, [x19, #32]
  4099bc:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4099c0:	add	x8, x8, #0x201
  4099c4:	mov	w9, #0xa                   	// #10
  4099c8:	b	4099f4 <wcrtomb@plt+0x7034>
  4099cc:	tbz	w21, #0, 40990c <wcrtomb@plt+0x6f4c>
  4099d0:	ldrb	w8, [x19, #450]
  4099d4:	tbnz	w8, #3, 40990c <wcrtomb@plt+0x6f4c>
  4099d8:	ldrb	w8, [x19, #1048]
  4099dc:	cbz	w8, 409dc0 <wcrtomb@plt+0x7400>
  4099e0:	cmp	w20, #0x77
  4099e4:	ldp	x20, x21, [x19, #32]
  4099e8:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4099ec:	add	x8, x8, #0x20d
  4099f0:	mov	w9, #0xb                   	// #11
  4099f4:	cinc	x8, x8, eq  // eq = none
  4099f8:	str	x8, [x19, #32]
  4099fc:	cinc	x8, x9, ne  // ne = any
  409a00:	mov	x0, x19
  409a04:	str	x8, [x19, #40]
  409a08:	bl	40c444 <wcrtomb@plt+0x9a84>
  409a0c:	stp	x21, x0, [x19, #40]
  409a10:	str	x20, [x19, #32]
  409a14:	strb	wzr, [x19, #120]
  409a18:	b	409968 <wcrtomb@plt+0x6fa8>
  409a1c:	cmp	w20, #0xa
  409a20:	b.ne	40990c <wcrtomb@plt+0x6f4c>  // b.any
  409a24:	ldr	x8, [x19, #448]
  409a28:	and	x8, x8, #0xc00
  409a2c:	cmp	x8, #0x800
  409a30:	cset	w8, ne  // ne = any
  409a34:	orr	w8, w21, w8
  409a38:	tbz	w8, #0, 409d9c <wcrtomb@plt+0x73dc>
  409a3c:	mov	w20, #0xa                   	// #10
  409a40:	b	40990c <wcrtomb@plt+0x6f4c>
  409a44:	ldr	x8, [x19, #448]
  409a48:	tbnz	w8, #10, 409c70 <wcrtomb@plt+0x72b0>
  409a4c:	mov	w9, #0x1                   	// #1
  409a50:	and	w10, w21, #0x1
  409a54:	bic	w8, w9, w8, lsr #15
  409a58:	cmp	w8, w10
  409a5c:	b.ne	409c70 <wcrtomb@plt+0x72b0>  // b.any
  409a60:	strb	w9, [x19, #120]
  409a64:	mov	w0, #0x106                 	// #262
  409a68:	b	409964 <wcrtomb@plt+0x6fa4>
  409a6c:	ldr	x8, [x19, #448]
  409a70:	tbz	w8, #9, 409fd8 <wcrtomb@plt+0x7618>
  409a74:	mov	w10, #0x1                   	// #1
  409a78:	and	w9, w21, #0x1
  409a7c:	bic	w10, w10, w8, lsr #12
  409a80:	cmp	w10, w9
  409a84:	b.ne	409fd8 <wcrtomb@plt+0x7618>  // b.any
  409a88:	tbnz	w8, #4, 409a94 <wcrtomb@plt+0x70d4>
  409a8c:	ldrb	w9, [x19, #120]
  409a90:	cbnz	w9, 409fd8 <wcrtomb@plt+0x7618>
  409a94:	ldp	x10, x13, [x19, #32]
  409a98:	movi	v0.2d, #0xffffffffffffffff
  409a9c:	str	d0, [x19, #64]
  409aa0:	add	x9, x10, x13
  409aa4:	cbz	x13, 409f00 <wcrtomb@plt+0x7540>
  409aa8:	mov	x12, xzr
  409aac:	mov	w11, #0xffffffff            	// #-1
  409ab0:	mov	w14, #0xa                   	// #10
  409ab4:	mov	w15, #0x8030                	// #32816
  409ab8:	mov	w16, #0x8000                	// #32768
  409abc:	ldrb	w17, [x10, x12]
  409ac0:	sub	w18, w17, #0x30
  409ac4:	cmp	w18, #0x9
  409ac8:	b.hi	409f0c <wcrtomb@plt+0x754c>  // b.pmore
  409acc:	tbnz	w11, #31, 409ae4 <wcrtomb@plt+0x7124>
  409ad0:	madd	w11, w11, w14, w17
  409ad4:	sub	w17, w11, #0x30
  409ad8:	cmp	w11, w15
  409adc:	csel	w11, w16, w17, gt
  409ae0:	b	409ae8 <wcrtomb@plt+0x7128>
  409ae4:	mov	w11, w18
  409ae8:	add	x12, x12, #0x1
  409aec:	cmp	x13, x12
  409af0:	str	w11, [x19, #64]
  409af4:	b.ne	409abc <wcrtomb@plt+0x70fc>  // b.any
  409af8:	mov	w12, #0xffffffff            	// #-1
  409afc:	mov	x10, x9
  409b00:	b	409f98 <wcrtomb@plt+0x75d8>
  409b04:	tbz	w21, #0, 409c98 <wcrtomb@plt+0x72d8>
  409b08:	mov	w20, #0x5e                  	// #94
  409b0c:	b	40990c <wcrtomb@plt+0x6f4c>
  409b10:	tbz	w21, #0, 409cc0 <wcrtomb@plt+0x7300>
  409b14:	mov	w20, #0x2e                  	// #46
  409b18:	b	40990c <wcrtomb@plt+0x6f4c>
  409b1c:	tbz	w21, #0, 409c78 <wcrtomb@plt+0x72b8>
  409b20:	ldrb	w8, [x19, #450]
  409b24:	tbnz	w8, #3, 409c78 <wcrtomb@plt+0x72b8>
  409b28:	mov	w0, #0x10e                 	// #270
  409b2c:	b	409964 <wcrtomb@plt+0x6fa4>
  409b30:	tbz	w21, #0, 409c80 <wcrtomb@plt+0x72c0>
  409b34:	ldrb	w8, [x19, #450]
  409b38:	tbnz	w8, #3, 409c80 <wcrtomb@plt+0x72c0>
  409b3c:	mov	w0, #0x10f                 	// #271
  409b40:	b	409964 <wcrtomb@plt+0x6fa4>
  409b44:	ldr	w9, [x19, #448]
  409b48:	mov	w8, #0x1                   	// #1
  409b4c:	and	w10, w21, #0x1
  409b50:	bic	w9, w8, w9, lsr #13
  409b54:	cmp	w9, w10
  409b58:	b.ne	409ce8 <wcrtomb@plt+0x7328>  // b.any
  409b5c:	ldr	x9, [x19, #56]
  409b60:	strb	w8, [x19, #120]
  409b64:	mov	w0, #0x107                 	// #263
  409b68:	add	x8, x9, #0x1
  409b6c:	b	409db8 <wcrtomb@plt+0x73f8>
  409b70:	tbz	w21, #0, 409c88 <wcrtomb@plt+0x72c8>
  409b74:	ldrb	w8, [x19, #450]
  409b78:	tbnz	w8, #3, 409c88 <wcrtomb@plt+0x72c8>
  409b7c:	mov	w0, #0x110                 	// #272
  409b80:	b	409964 <wcrtomb@plt+0x6fa4>
  409b84:	ldr	x8, [x19, #448]
  409b88:	tbnz	w8, #10, 409ba4 <wcrtomb@plt+0x71e4>
  409b8c:	ubfx	x9, x8, #1, #1
  409b90:	eor	w9, w21, w9
  409b94:	tbnz	w9, #0, 409ba4 <wcrtomb@plt+0x71e4>
  409b98:	tbnz	w8, #4, 409e74 <wcrtomb@plt+0x74b4>
  409b9c:	ldrb	w8, [x19, #120]
  409ba0:	cbz	w8, 409e74 <wcrtomb@plt+0x74b4>
  409ba4:	mov	w20, #0x3f                  	// #63
  409ba8:	b	40990c <wcrtomb@plt+0x6f4c>
  409bac:	tbz	w21, #0, 409bb8 <wcrtomb@plt+0x71f8>
  409bb0:	ldrb	w8, [x19, #450]
  409bb4:	tbz	w8, #3, 409d7c <wcrtomb@plt+0x73bc>
  409bb8:	mov	w20, #0x27                  	// #39
  409bbc:	b	40990c <wcrtomb@plt+0x6f4c>
  409bc0:	ldr	x8, [x19, #448]
  409bc4:	tbnz	w8, #10, 409be0 <wcrtomb@plt+0x7220>
  409bc8:	ubfx	x9, x8, #1, #1
  409bcc:	eor	w9, w21, w9
  409bd0:	tbnz	w9, #0, 409be0 <wcrtomb@plt+0x7220>
  409bd4:	tbnz	w8, #4, 409e7c <wcrtomb@plt+0x74bc>
  409bd8:	ldrb	w8, [x19, #120]
  409bdc:	cbz	w8, 409e7c <wcrtomb@plt+0x74bc>
  409be0:	mov	w20, #0x2b                  	// #43
  409be4:	b	40990c <wcrtomb@plt+0x6f4c>
  409be8:	tbnz	w21, #0, 409bfc <wcrtomb@plt+0x723c>
  409bec:	ldrb	w8, [x19, #448]
  409bf0:	tbnz	w8, #4, 409d94 <wcrtomb@plt+0x73d4>
  409bf4:	ldrb	w8, [x19, #120]
  409bf8:	cbz	w8, 409d94 <wcrtomb@plt+0x73d4>
  409bfc:	mov	w20, #0x2a                  	// #42
  409c00:	b	40990c <wcrtomb@plt+0x6f4c>
  409c04:	tbz	w21, #0, 409cf0 <wcrtomb@plt+0x7330>
  409c08:	mov	w20, #0x24                  	// #36
  409c0c:	b	40990c <wcrtomb@plt+0x6f4c>
  409c10:	ldr	x8, [x19, #448]
  409c14:	mov	w10, #0x1                   	// #1
  409c18:	and	w9, w21, #0x1
  409c1c:	bic	w10, w10, w8, lsr #13
  409c20:	cmp	w10, w9
  409c24:	b.ne	409c34 <wcrtomb@plt+0x7274>  // b.any
  409c28:	ldr	x9, [x19, #56]
  409c2c:	tbz	w8, #17, 409dac <wcrtomb@plt+0x73ec>
  409c30:	cbnz	x9, 409dac <wcrtomb@plt+0x73ec>
  409c34:	mov	w20, #0x29                  	// #41
  409c38:	b	40990c <wcrtomb@plt+0x6f4c>
  409c3c:	tbz	w21, #0, 409d84 <wcrtomb@plt+0x73c4>
  409c40:	mov	w20, #0x5b                  	// #91
  409c44:	b	40990c <wcrtomb@plt+0x6f4c>
  409c48:	tbz	w21, #0, 409c54 <wcrtomb@plt+0x7294>
  409c4c:	ldrb	w8, [x19, #450]
  409c50:	tbz	w8, #3, 409cb8 <wcrtomb@plt+0x72f8>
  409c54:	mov	w20, #0x60                  	// #96
  409c58:	b	40990c <wcrtomb@plt+0x6f4c>
  409c5c:	tbz	w21, #0, 409c90 <wcrtomb@plt+0x72d0>
  409c60:	ldrb	w8, [x19, #450]
  409c64:	tbnz	w8, #3, 409c90 <wcrtomb@plt+0x72d0>
  409c68:	mov	w0, #0x111                 	// #273
  409c6c:	b	409964 <wcrtomb@plt+0x6fa4>
  409c70:	mov	w20, #0x7c                  	// #124
  409c74:	b	40990c <wcrtomb@plt+0x6f4c>
  409c78:	mov	w20, #0x3c                  	// #60
  409c7c:	b	40990c <wcrtomb@plt+0x6f4c>
  409c80:	mov	w20, #0x3e                  	// #62
  409c84:	b	40990c <wcrtomb@plt+0x6f4c>
  409c88:	mov	w20, #0x62                  	// #98
  409c8c:	b	40990c <wcrtomb@plt+0x6f4c>
  409c90:	mov	w20, #0x42                  	// #66
  409c94:	b	40990c <wcrtomb@plt+0x6f4c>
  409c98:	ldrb	w8, [x19, #448]
  409c9c:	tbnz	w8, #3, 409cb8 <wcrtomb@plt+0x72f8>
  409ca0:	ldr	x8, [x19, #48]
  409ca4:	sub	x9, x8, #0x106
  409ca8:	cmp	x9, #0x2
  409cac:	b.cc	409cb8 <wcrtomb@plt+0x72f8>  // b.lo, b.ul, b.last
  409cb0:	cmn	x8, #0x1
  409cb4:	b.ne	409b08 <wcrtomb@plt+0x7148>  // b.any
  409cb8:	mov	w0, #0x10c                 	// #268
  409cbc:	b	409964 <wcrtomb@plt+0x6fa4>
  409cc0:	ldr	x0, [x19, #24]
  409cc4:	tbz	x0, #63, 409ee4 <wcrtomb@plt+0x7524>
  409cc8:	movi	v0.2d, #0xffffffffffffffff
  409ccc:	stp	q0, q0, [sp]
  409cd0:	ldr	x8, [x19, #448]
  409cd4:	tbnz	w8, #6, 409e84 <wcrtomb@plt+0x74c4>
  409cd8:	mov	x9, #0xfffffffffffffbff    	// #-1025
  409cdc:	str	x9, [sp]
  409ce0:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  409ce4:	b	409e88 <wcrtomb@plt+0x74c8>
  409ce8:	mov	w20, #0x28                  	// #40
  409cec:	b	40990c <wcrtomb@plt+0x6f4c>
  409cf0:	ldr	x8, [x19, #448]
  409cf4:	tbnz	w8, #3, 409d7c <wcrtomb@plt+0x73bc>
  409cf8:	ldr	x9, [x19, #40]
  409cfc:	cbz	x9, 409d7c <wcrtomb@plt+0x73bc>
  409d00:	mov	w10, #0x1                   	// #1
  409d04:	bic	w11, w10, w8, lsr #13
  409d08:	cmp	x9, x11
  409d0c:	b.le	409d30 <wcrtomb@plt+0x7370>
  409d10:	ldr	x12, [x19, #32]
  409d14:	ldrb	w13, [x12]
  409d18:	cmp	w13, #0x5c
  409d1c:	cset	w13, eq  // eq = none
  409d20:	and	x11, x11, x13
  409d24:	ldrb	w11, [x12, x11]
  409d28:	cmp	w11, #0x29
  409d2c:	b.eq	409d7c <wcrtomb@plt+0x73bc>  // b.none
  409d30:	bic	w10, w10, w8, lsr #15
  409d34:	cmp	x9, x10
  409d38:	b.le	409d5c <wcrtomb@plt+0x739c>
  409d3c:	ldr	x11, [x19, #32]
  409d40:	ldrb	w12, [x11]
  409d44:	cmp	w12, #0x5c
  409d48:	cset	w12, eq  // eq = none
  409d4c:	and	x10, x10, x12
  409d50:	ldrb	w10, [x11, x10]
  409d54:	cmp	w10, #0x7c
  409d58:	b.eq	409d7c <wcrtomb@plt+0x73bc>  // b.none
  409d5c:	mov	w20, #0x24                  	// #36
  409d60:	tbz	w8, #11, 40990c <wcrtomb@plt+0x6f4c>
  409d64:	cmp	x9, #0x1
  409d68:	b.lt	40990c <wcrtomb@plt+0x6f4c>  // b.tstop
  409d6c:	ldr	x8, [x19, #32]
  409d70:	ldrb	w8, [x8]
  409d74:	cmp	w8, #0xa
  409d78:	b.ne	409c08 <wcrtomb@plt+0x7248>  // b.any
  409d7c:	mov	w0, #0x10d                 	// #269
  409d80:	b	409964 <wcrtomb@plt+0x6fa4>
  409d84:	mov	x0, x19
  409d88:	strb	wzr, [x19, #120]
  409d8c:	bl	40c444 <wcrtomb@plt+0x9a84>
  409d90:	b	409964 <wcrtomb@plt+0x6fa4>
  409d94:	mov	w0, #0x102                 	// #258
  409d98:	b	409964 <wcrtomb@plt+0x6fa4>
  409d9c:	mov	w8, #0x1                   	// #1
  409da0:	mov	w0, #0x106                 	// #262
  409da4:	strb	w8, [x19, #120]
  409da8:	b	409964 <wcrtomb@plt+0x6fa4>
  409dac:	sub	x8, x9, #0x1
  409db0:	mov	w0, #0x108                 	// #264
  409db4:	strb	wzr, [x19, #120]
  409db8:	str	x8, [x19, #56]
  409dbc:	b	409964 <wcrtomb@plt+0x6fa4>
  409dc0:	mov	x8, xzr
  409dc4:	movi	v0.2d, #0x0
  409dc8:	mov	w9, #0x1                   	// #1
  409dcc:	mov	x10, sp
  409dd0:	stp	q0, q0, [sp]
  409dd4:	add	x11, x19, x8
  409dd8:	ldrb	w11, [x11, #460]
  409ddc:	cmp	w11, #0x2
  409de0:	b.ne	409df8 <wcrtomb@plt+0x7438>  // b.any
  409de4:	ubfx	x11, x8, #6, #26
  409de8:	ldr	x12, [x10, x11, lsl #3]
  409dec:	lsl	x13, x9, x8
  409df0:	orr	x12, x12, x13
  409df4:	str	x12, [x10, x11, lsl #3]
  409df8:	add	x8, x8, #0x1
  409dfc:	cmp	x8, #0x100
  409e00:	b.ne	409dd4 <wcrtomb@plt+0x7414>  // b.any
  409e04:	cmp	w20, #0x57
  409e08:	b.ne	409e1c <wcrtomb@plt+0x745c>  // b.any
  409e0c:	ldp	q0, q1, [sp]
  409e10:	mvn	v0.16b, v0.16b
  409e14:	mvn	v1.16b, v1.16b
  409e18:	stp	q0, q1, [sp]
  409e1c:	strb	wzr, [x19, #120]
  409e20:	b	409954 <wcrtomb@plt+0x6f94>
  409e24:	movi	v0.2d, #0x0
  409e28:	stp	q0, q0, [sp]
  409e2c:	bl	402760 <__ctype_b_loc@plt>
  409e30:	ldr	x9, [x0]
  409e34:	mov	x8, xzr
  409e38:	mov	w10, #0x1                   	// #1
  409e3c:	mov	x11, sp
  409e40:	ldrh	w12, [x9, x8, lsl #1]
  409e44:	tbz	w12, #13, 409e5c <wcrtomb@plt+0x749c>
  409e48:	ubfx	x12, x8, #6, #26
  409e4c:	ldr	x13, [x11, x12, lsl #3]
  409e50:	lsl	x14, x10, x8
  409e54:	orr	x13, x13, x14
  409e58:	str	x13, [x11, x12, lsl #3]
  409e5c:	add	x8, x8, #0x1
  409e60:	cmp	x8, #0x100
  409e64:	b.ne	409e40 <wcrtomb@plt+0x7480>  // b.any
  409e68:	cmp	w20, #0x53
  409e6c:	b.eq	409e0c <wcrtomb@plt+0x744c>  // b.none
  409e70:	b	409e1c <wcrtomb@plt+0x745c>
  409e74:	mov	w0, #0x101                 	// #257
  409e78:	b	409964 <wcrtomb@plt+0x6fa4>
  409e7c:	mov	w0, #0x103                 	// #259
  409e80:	b	409964 <wcrtomb@plt+0x6fa4>
  409e84:	mov	x9, #0xfffffffffffffffe    	// #-2
  409e88:	tbz	w8, #7, 409e90 <wcrtomb@plt+0x74d0>
  409e8c:	str	x9, [sp]
  409e90:	ldrb	w8, [x19, #1048]
  409e94:	cbz	w8, 409ed4 <wcrtomb@plt+0x7514>
  409e98:	mov	x8, xzr
  409e9c:	add	x9, x19, #0x51c
  409ea0:	mov	w10, #0x1                   	// #1
  409ea4:	mov	x11, sp
  409ea8:	ldr	w12, [x9, x8, lsl #2]
  409eac:	cmn	w12, #0x1
  409eb0:	b.ne	409ec8 <wcrtomb@plt+0x7508>  // b.any
  409eb4:	ubfx	x12, x8, #6, #26
  409eb8:	ldr	x13, [x11, x12, lsl #3]
  409ebc:	lsl	x14, x10, x8
  409ec0:	bic	x13, x13, x14
  409ec4:	str	x13, [x11, x12, lsl #3]
  409ec8:	add	x8, x8, #0x1
  409ecc:	cmp	x8, #0x100
  409ed0:	b.ne	409ea8 <wcrtomb@plt+0x74e8>  // b.any
  409ed4:	mov	x1, sp
  409ed8:	mov	x0, x19
  409edc:	bl	40c374 <wcrtomb@plt+0x99b4>
  409ee0:	str	x0, [x19, #24]
  409ee4:	ldrb	w8, [x19, #1048]
  409ee8:	add	x9, x0, #0x114
  409eec:	strb	wzr, [x19, #120]
  409ef0:	cmp	w8, #0x0
  409ef4:	mov	w8, #0x10a                 	// #266
  409ef8:	csel	x0, x9, x8, eq  // eq = none
  409efc:	b	409964 <wcrtomb@plt+0x6fa4>
  409f00:	mov	w12, #0xffffffff            	// #-1
  409f04:	mov	w11, #0xffffffff            	// #-1
  409f08:	b	409f98 <wcrtomb@plt+0x75d8>
  409f0c:	cmp	w17, #0x2c
  409f10:	b.ne	409f8c <wcrtomb@plt+0x75cc>  // b.any
  409f14:	tbz	w11, #31, 409f20 <wcrtomb@plt+0x7560>
  409f18:	mov	w11, wzr
  409f1c:	str	wzr, [x19, #64]
  409f20:	sub	x14, x13, #0x1
  409f24:	cmp	x14, x12
  409f28:	b.eq	409af8 <wcrtomb@plt+0x7138>  // b.none
  409f2c:	mvn	x16, x12
  409f30:	add	x10, x10, x12
  409f34:	mov	w12, #0xffffffff            	// #-1
  409f38:	mov	w14, #0xa                   	// #10
  409f3c:	mov	w15, #0x8030                	// #32816
  409f40:	add	x13, x16, x13
  409f44:	add	x10, x10, #0x1
  409f48:	mov	w16, #0x8000                	// #32768
  409f4c:	ldrb	w17, [x10]
  409f50:	sub	w18, w17, #0x30
  409f54:	cmp	w18, #0x9
  409f58:	b.hi	409f98 <wcrtomb@plt+0x75d8>  // b.pmore
  409f5c:	tbnz	w12, #31, 409f74 <wcrtomb@plt+0x75b4>
  409f60:	madd	w12, w12, w14, w17
  409f64:	sub	w17, w12, #0x30
  409f68:	cmp	w12, w15
  409f6c:	csel	w12, w16, w17, gt
  409f70:	b	409f78 <wcrtomb@plt+0x75b8>
  409f74:	mov	w12, w18
  409f78:	subs	x13, x13, #0x1
  409f7c:	add	x10, x10, #0x1
  409f80:	str	w12, [x19, #68]
  409f84:	b.ne	409f4c <wcrtomb@plt+0x758c>  // b.any
  409f88:	b	409afc <wcrtomb@plt+0x713c>
  409f8c:	add	x10, x10, x12
  409f90:	str	w11, [x19, #68]
  409f94:	mov	w12, w11
  409f98:	tbz	w21, #0, 409fb0 <wcrtomb@plt+0x75f0>
  409f9c:	cmp	x10, x9
  409fa0:	b.eq	409fd4 <wcrtomb@plt+0x7614>  // b.none
  409fa4:	ldrb	w13, [x10], #1
  409fa8:	cmp	w13, #0x5c
  409fac:	b.ne	409fd4 <wcrtomb@plt+0x7614>  // b.any
  409fb0:	cmp	x10, x9
  409fb4:	b.eq	409fd4 <wcrtomb@plt+0x7614>  // b.none
  409fb8:	ldrb	w13, [x10], #1
  409fbc:	cmp	w13, #0x7d
  409fc0:	b.ne	409fd4 <wcrtomb@plt+0x7614>  // b.any
  409fc4:	tbnz	w11, #31, 409fd4 <wcrtomb@plt+0x7614>
  409fc8:	tbnz	w12, #31, 409fe0 <wcrtomb@plt+0x7620>
  409fcc:	cmp	w11, w12
  409fd0:	b.le	409fe0 <wcrtomb@plt+0x7620>
  409fd4:	tbz	w8, #21, 40a014 <wcrtomb@plt+0x7654>
  409fd8:	mov	w20, #0x7b                  	// #123
  409fdc:	b	40990c <wcrtomb@plt+0x6f4c>
  409fe0:	cmp	w12, #0x8, lsl #12
  409fe4:	b.ge	40a020 <wcrtomb@plt+0x7660>  // b.tcont
  409fe8:	sub	x8, x9, x10
  409fec:	strb	wzr, [x19, #120]
  409ff0:	mov	w0, #0x104                 	// #260
  409ff4:	stp	x10, x8, [x19, #32]
  409ff8:	b	409964 <wcrtomb@plt+0x6fa4>
  409ffc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40a000:	add	x1, x1, #0x1ba
  40a004:	mov	w2, #0x5                   	// #5
  40a008:	mov	x0, xzr
  40a00c:	bl	402890 <dcgettext@plt>
  40a010:	bl	402adc <wcrtomb@plt+0x11c>
  40a014:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40a018:	add	x1, x1, #0x1ce
  40a01c:	b	40a004 <wcrtomb@plt+0x7644>
  40a020:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40a024:	add	x1, x1, #0x1e6
  40a028:	b	40a004 <wcrtomb@plt+0x7644>
  40a02c:	stp	x29, x30, [sp, #-32]!
  40a030:	str	x19, [sp, #16]
  40a034:	mov	x29, sp
  40a038:	mov	x19, x0
  40a03c:	bl	40cb78 <wcrtomb@plt+0xa1b8>
  40a040:	ldr	x8, [x19, #128]
  40a044:	cmp	x8, #0x106
  40a048:	b.ne	40a074 <wcrtomb@plt+0x76b4>  // b.any
  40a04c:	mov	x0, x19
  40a050:	bl	409870 <wcrtomb@plt+0x6eb0>
  40a054:	str	x0, [x19, #128]
  40a058:	mov	x0, x19
  40a05c:	bl	40cb78 <wcrtomb@plt+0xa1b8>
  40a060:	mov	w1, #0x106                 	// #262
  40a064:	mov	w2, #0x3                   	// #3
  40a068:	mov	x0, x19
  40a06c:	bl	40c09c <wcrtomb@plt+0x96dc>
  40a070:	b	40a040 <wcrtomb@plt+0x7680>
  40a074:	ldr	x19, [sp, #16]
  40a078:	ldp	x29, x30, [sp], #32
  40a07c:	ret
  40a080:	ldr	x6, [x0, #1040]
  40a084:	and	w3, w3, #0x1
  40a088:	br	x6
  40a08c:	ldr	x0, [x0, #288]
  40a090:	ret
  40a094:	ldrb	w0, [x0, #192]
  40a098:	ret
  40a09c:	sub	sp, sp, #0x80
  40a0a0:	stp	x20, x19, [sp, #112]
  40a0a4:	mov	w19, w3
  40a0a8:	mov	x20, x2
  40a0ac:	stp	x29, x30, [sp, #32]
  40a0b0:	stp	x28, x27, [sp, #48]
  40a0b4:	stp	x26, x25, [sp, #64]
  40a0b8:	stp	x24, x23, [sp, #80]
  40a0bc:	stp	x22, x21, [sp, #96]
  40a0c0:	add	x29, sp, #0x20
  40a0c4:	cbz	x0, 40a0d0 <wcrtomb@plt+0x7710>
  40a0c8:	mov	x2, x20
  40a0cc:	bl	4096c8 <wcrtomb@plt+0x6d08>
  40a0d0:	mov	w0, #0x920                 	// #2336
  40a0d4:	bl	412738 <wcrtomb@plt+0xfd78>
  40a0d8:	mov	w2, #0x920                 	// #2336
  40a0dc:	mov	x1, x20
  40a0e0:	mov	x21, x0
  40a0e4:	bl	402320 <memcpy@plt>
  40a0e8:	adrp	x9, 40b000 <wcrtomb@plt+0x8640>
  40a0ec:	add	x9, x9, #0xf64
  40a0f0:	add	x8, x21, #0x118
  40a0f4:	movi	v0.2d, #0x0
  40a0f8:	strb	wzr, [x21, #1048]
  40a0fc:	str	xzr, [x21, #320]
  40a100:	str	x9, [x21, #1040]
  40a104:	stp	q0, q0, [x8]
  40a108:	ldr	x8, [x21, #16]
  40a10c:	stp	xzr, xzr, [x21, #344]
  40a110:	str	xzr, [x21, #336]
  40a114:	stp	q0, q0, [x21, #368]
  40a118:	lsr	x9, x8, #58
  40a11c:	cbnz	x9, 40a3bc <wcrtomb@plt+0x79fc>
  40a120:	lsl	x0, x8, #5
  40a124:	bl	412738 <wcrtomb@plt+0xfd78>
  40a128:	str	x0, [x21]
  40a12c:	ldr	x8, [x20, #8]
  40a130:	cbz	x8, 40a140 <wcrtomb@plt+0x7780>
  40a134:	ldr	x1, [x20]
  40a138:	lsl	x2, x8, #5
  40a13c:	bl	402320 <memcpy@plt>
  40a140:	ldr	x8, [x20, #152]
  40a144:	lsr	x9, x8, #59
  40a148:	cbnz	x9, 40a3bc <wcrtomb@plt+0x79fc>
  40a14c:	lsl	x0, x8, #4
  40a150:	bl	412738 <wcrtomb@plt+0xfd78>
  40a154:	str	x0, [x21, #144]
  40a158:	ldr	x8, [x20, #152]
  40a15c:	lsl	x9, x8, #1
  40a160:	cmp	x8, #0x0
  40a164:	str	x9, [x21, #160]
  40a168:	b.le	40a26c <wcrtomb@plt+0x78ac>
  40a16c:	ldr	x8, [x20, #144]
  40a170:	mov	x24, xzr
  40a174:	mov	x22, xzr
  40a178:	mov	w23, wzr
  40a17c:	mov	w9, wzr
  40a180:	mov	w25, #0x1                   	// #1
  40a184:	mov	w26, #0x100                 	// #256
  40a188:	mov	w27, #0x301                 	// #769
  40a18c:	mov	w28, #0x102                 	// #258
  40a190:	ldr	x10, [x8, x24, lsl #3]
  40a194:	sub	x11, x10, #0x10a
  40a198:	cmp	x11, #0x9
  40a19c:	b.hi	40a21c <wcrtomb@plt+0x785c>  // b.pmore
  40a1a0:	lsl	x12, x25, x11
  40a1a4:	tst	x12, #0xf0
  40a1a8:	b.eq	40a1c4 <wcrtomb@plt+0x7804>  // b.none
  40a1ac:	ldrb	w11, [x20, #1048]
  40a1b0:	cbz	w11, 40a21c <wcrtomb@plt+0x785c>
  40a1b4:	add	x10, x22, #0x1
  40a1b8:	str	x26, [x0, x22, lsl #3]
  40a1bc:	mov	x22, x10
  40a1c0:	b	40a240 <wcrtomb@plt+0x7880>
  40a1c4:	lsl	x11, x25, x11
  40a1c8:	tst	x11, x27
  40a1cc:	b.eq	40a21c <wcrtomb@plt+0x785c>  // b.none
  40a1d0:	movi	v0.2d, #0xffffffffffffffff
  40a1d4:	mov	x1, sp
  40a1d8:	mov	x0, x21
  40a1dc:	stp	q0, q0, [sp]
  40a1e0:	bl	40c374 <wcrtomb@plt+0x99b4>
  40a1e4:	mov	x8, x0
  40a1e8:	ldr	x0, [x21, #144]
  40a1ec:	add	x8, x8, #0x114
  40a1f0:	add	x9, x0, x22, lsl #3
  40a1f4:	stp	x8, x28, [x9]
  40a1f8:	ldr	x8, [x20, #144]
  40a1fc:	add	x9, x24, #0x1
  40a200:	add	x22, x22, #0x2
  40a204:	ldr	x9, [x8, x9, lsl #3]
  40a208:	sub	x9, x9, #0x101
  40a20c:	cmp	x9, #0x3
  40a210:	cinc	x24, x24, cc  // cc = lo, ul, last
  40a214:	mov	w9, #0x1                   	// #1
  40a218:	b	40a240 <wcrtomb@plt+0x7880>
  40a21c:	str	x10, [x0, x22, lsl #3]
  40a220:	ldr	x10, [x8, x24, lsl #3]
  40a224:	add	x22, x22, #0x1
  40a228:	cmp	x10, #0x100
  40a22c:	cset	w11, cc  // cc = lo, ul, last
  40a230:	cmp	x10, #0x113
  40a234:	cset	w10, gt
  40a238:	orr	w10, w11, w10
  40a23c:	orr	w23, w23, w10
  40a240:	ldr	x10, [x20, #152]
  40a244:	add	x24, x24, #0x1
  40a248:	cmp	x24, x10
  40a24c:	b.lt	40a190 <wcrtomb@plt+0x77d0>  // b.tstop
  40a250:	str	x22, [x21, #152]
  40a254:	tbz	w23, #0, 40a270 <wcrtomb@plt+0x78b0>
  40a258:	tbnz	w9, #0, 40a264 <wcrtomb@plt+0x78a4>
  40a25c:	ldrb	w8, [x20, #1048]
  40a260:	cbz	w8, 40a270 <wcrtomb@plt+0x78b0>
  40a264:	str	x21, [x20, #288]
  40a268:	b	40a284 <wcrtomb@plt+0x78c4>
  40a26c:	str	xzr, [x21, #152]
  40a270:	mov	x0, x21
  40a274:	bl	40afac <wcrtomb@plt+0x85ec>
  40a278:	mov	x0, x21
  40a27c:	bl	402770 <free@plt>
  40a280:	ldr	x10, [x20, #152]
  40a284:	cmp	x10, #0x1
  40a288:	b.lt	40a2c8 <wcrtomb@plt+0x7908>  // b.tstop
  40a28c:	ldr	x8, [x20, #144]
  40a290:	mov	x9, x10
  40a294:	ldr	x11, [x8]
  40a298:	sub	x12, x11, #0x10e
  40a29c:	cmp	x12, #0x4
  40a2a0:	b.cs	40a2b0 <wcrtomb@plt+0x78f0>  // b.hs, b.nlast
  40a2a4:	ldrb	w11, [x20, #1048]
  40a2a8:	cbz	w11, 40a2bc <wcrtomb@plt+0x78fc>
  40a2ac:	b	40a35c <wcrtomb@plt+0x799c>
  40a2b0:	sub	x11, x11, #0x112
  40a2b4:	cmp	x11, #0x2
  40a2b8:	b.cc	40a35c <wcrtomb@plt+0x799c>  // b.lo, b.ul, b.last
  40a2bc:	subs	x9, x9, #0x1
  40a2c0:	add	x8, x8, #0x8
  40a2c4:	b.ne	40a294 <wcrtomb@plt+0x78d4>  // b.any
  40a2c8:	ldrb	w8, [x20, #1050]
  40a2cc:	cbz	w8, 40a34c <wcrtomb@plt+0x798c>
  40a2d0:	cmp	x10, #0x1
  40a2d4:	b.lt	40a314 <wcrtomb@plt+0x7954>  // b.tstop
  40a2d8:	ldr	x8, [x20, #144]
  40a2dc:	mov	w9, wzr
  40a2e0:	ldr	x11, [x8]
  40a2e4:	cmp	x11, #0x112
  40a2e8:	b.eq	40a300 <wcrtomb@plt+0x7940>  // b.none
  40a2ec:	cmp	x11, #0x113
  40a2f0:	b.eq	40a34c <wcrtomb@plt+0x798c>  // b.none
  40a2f4:	cmp	x11, #0x10a
  40a2f8:	b.ne	40a304 <wcrtomb@plt+0x7944>  // b.any
  40a2fc:	b	40a3c0 <wcrtomb@plt+0x7a00>
  40a300:	mov	w9, #0x1                   	// #1
  40a304:	subs	x10, x10, #0x1
  40a308:	add	x8, x8, #0x8
  40a30c:	b.ne	40a2e0 <wcrtomb@plt+0x7920>  // b.any
  40a310:	tbnz	w9, #0, 40a32c <wcrtomb@plt+0x796c>
  40a314:	ldr	x0, [x20, #288]
  40a318:	cbz	x0, 40a32c <wcrtomb@plt+0x796c>
  40a31c:	bl	40afac <wcrtomb@plt+0x85ec>
  40a320:	ldr	x0, [x20, #288]
  40a324:	bl	402770 <free@plt>
  40a328:	str	xzr, [x20, #288]
  40a32c:	mov	x0, x20
  40a330:	bl	40b128 <wcrtomb@plt+0x8768>
  40a334:	adrp	x8, 40b000 <wcrtomb@plt+0x8640>
  40a338:	add	x8, x8, #0xf64
  40a33c:	str	x8, [x20, #1040]
  40a340:	mov	w8, #0x1                   	// #1
  40a344:	strb	wzr, [x20, #1048]
  40a348:	strb	w8, [x20, #192]
  40a34c:	and	w1, w19, #0x1
  40a350:	mov	x0, x20
  40a354:	bl	40a3c4 <wcrtomb@plt+0x7a04>
  40a358:	b	40a368 <wcrtomb@plt+0x79a8>
  40a35c:	adrp	x8, 40a000 <wcrtomb@plt+0x7640>
  40a360:	add	x8, x8, #0xf9c
  40a364:	str	x8, [x20, #1040]
  40a368:	ldr	x0, [x20, #288]
  40a36c:	cbz	x0, 40a39c <wcrtomb@plt+0x79dc>
  40a370:	mov	w8, #0x1                   	// #1
  40a374:	strb	w8, [x20, #192]
  40a378:	and	w1, w19, #0x1
  40a37c:	ldp	x20, x19, [sp, #112]
  40a380:	ldp	x22, x21, [sp, #96]
  40a384:	ldp	x24, x23, [sp, #80]
  40a388:	ldp	x26, x25, [sp, #64]
  40a38c:	ldp	x28, x27, [sp, #48]
  40a390:	ldp	x29, x30, [sp, #32]
  40a394:	add	sp, sp, #0x80
  40a398:	b	40a3c4 <wcrtomb@plt+0x7a04>
  40a39c:	ldp	x20, x19, [sp, #112]
  40a3a0:	ldp	x22, x21, [sp, #96]
  40a3a4:	ldp	x24, x23, [sp, #80]
  40a3a8:	ldp	x26, x25, [sp, #64]
  40a3ac:	ldp	x28, x27, [sp, #48]
  40a3b0:	ldp	x29, x30, [sp, #32]
  40a3b4:	add	sp, sp, #0x80
  40a3b8:	ret
  40a3bc:	bl	412920 <wcrtomb@plt+0xff60>
  40a3c0:	bl	4026c0 <abort@plt>
  40a3c4:	sub	sp, sp, #0x100
  40a3c8:	stp	x29, x30, [sp, #160]
  40a3cc:	stp	x28, x27, [sp, #176]
  40a3d0:	stp	x26, x25, [sp, #192]
  40a3d4:	stp	x24, x23, [sp, #208]
  40a3d8:	stp	x22, x21, [sp, #224]
  40a3dc:	stp	x20, x19, [sp, #240]
  40a3e0:	ldr	x8, [x0, #176]
  40a3e4:	add	x29, sp, #0xa0
  40a3e8:	lsr	x9, x8, #58
  40a3ec:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40a3f0:	mov	x19, x0
  40a3f4:	mov	x20, #0x5555555555555555    	// #6148914691236517205
  40a3f8:	lsl	x0, x8, #5
  40a3fc:	mov	w21, w1
  40a400:	movk	x20, #0x555, lsl #48
  40a404:	bl	412738 <wcrtomb@plt+0xfd78>
  40a408:	ldr	x8, [x19, #168]
  40a40c:	str	x0, [sp, #48]
  40a410:	cmp	x8, x20
  40a414:	b.hi	40af98 <wcrtomb@plt+0x85d8>  // b.pmore
  40a418:	ldr	x20, [x19, #176]
  40a41c:	add	x8, x8, x8, lsl #1
  40a420:	lsl	x0, x8, #3
  40a424:	and	w21, w21, #0x1
  40a428:	bl	412738 <wcrtomb@plt+0xfd78>
  40a42c:	str	x0, [sp, #40]
  40a430:	mov	w1, #0x105                 	// #261
  40a434:	mov	w2, #0x3                   	// #3
  40a438:	mov	x0, x19
  40a43c:	bl	40c09c <wcrtomb@plt+0x96dc>
  40a440:	mov	x22, x19
  40a444:	ldr	x19, [x19, #176]
  40a448:	strb	w21, [x22, #328]
  40a44c:	lsr	x8, x19, #59
  40a450:	cbnz	x8, 40af98 <wcrtomb@plt+0x85d8>
  40a454:	lsl	x0, x19, #4
  40a458:	bl	412738 <wcrtomb@plt+0xfd78>
  40a45c:	stp	xzr, x19, [x29, #-64]
  40a460:	stur	x0, [x29, #-72]
  40a464:	ldr	x0, [x22, #152]
  40a468:	mov	w1, #0x18                  	// #24
  40a46c:	bl	412890 <wcrtomb@plt+0xfed0>
  40a470:	ldr	x8, [x22, #152]
  40a474:	mov	x19, x22
  40a478:	str	x0, [x22, #320]
  40a47c:	cmp	x8, #0x1
  40a480:	b.lt	40a6e8 <wcrtomb@plt+0x7d28>  // b.tstop
  40a484:	ldp	x21, x8, [sp, #40]
  40a488:	mov	w24, #0x1                   	// #1
  40a48c:	adrp	x27, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40a490:	mov	x22, xzr
  40a494:	add	x23, x8, x20, lsl #4
  40a498:	add	x27, x27, #0xe79
  40a49c:	dup	v0.2d, x24
  40a4a0:	mov	w28, #0x18                  	// #24
  40a4a4:	mov	x20, x8
  40a4a8:	str	q0, [sp, #64]
  40a4ac:	ldr	x8, [x19, #144]
  40a4b0:	ldr	x8, [x8, x22, lsl #3]
  40a4b4:	sub	x9, x8, #0x100
  40a4b8:	cmp	x9, #0x6
  40a4bc:	b.hi	40a57c <wcrtomb@plt+0x7bbc>  // b.pmore
  40a4c0:	adr	x10, 40a4d0 <wcrtomb@plt+0x7b10>
  40a4c4:	ldrb	w11, [x27, x9]
  40a4c8:	add	x10, x10, x11, lsl #2
  40a4cc:	br	x10
  40a4d0:	ldp	x10, x9, [x21, #-16]
  40a4d4:	sub	x11, x20, x10, lsl #4
  40a4d8:	cmp	x9, #0x1
  40a4dc:	stp	x11, x10, [x29, #-48]
  40a4e0:	b.lt	40a534 <wcrtomb@plt+0x7b74>  // b.tstop
  40a4e4:	mov	x25, xzr
  40a4e8:	sub	x26, x23, x9, lsl #4
  40a4ec:	ldr	x8, [x19, #320]
  40a4f0:	ldr	x9, [x26]
  40a4f4:	sub	x0, x29, #0x30
  40a4f8:	sub	x3, x29, #0x48
  40a4fc:	mov	w2, #0xffffffff            	// #-1
  40a500:	madd	x1, x9, x28, x8
  40a504:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40a508:	ldr	x8, [x19, #320]
  40a50c:	ldr	x9, [x26], #16
  40a510:	sub	x0, x29, #0x48
  40a514:	madd	x1, x9, x28, x8
  40a518:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40a51c:	ldur	x8, [x21, #-8]
  40a520:	add	x25, x25, #0x1
  40a524:	cmp	x25, x8
  40a528:	b.lt	40a4ec <wcrtomb@plt+0x7b2c>  // b.tstop
  40a52c:	ldr	x8, [x19, #144]
  40a530:	ldr	x8, [x8, x22, lsl #3]
  40a534:	cmp	x8, #0x103
  40a538:	b.eq	40a6d8 <wcrtomb@plt+0x7d18>  // b.none
  40a53c:	sturb	w24, [x21, #-24]
  40a540:	b	40a6d8 <wcrtomb@plt+0x7d18>
  40a544:	ldrb	w8, [x21, #-24]!
  40a548:	ldur	q0, [x21, #8]
  40a54c:	ldur	q1, [x21, #-16]
  40a550:	ldurb	w9, [x21, #-24]
  40a554:	add	v0.2d, v1.2d, v0.2d
  40a558:	orr	w8, w9, w8
  40a55c:	stur	q0, [x21, #-16]
  40a560:	sturb	w8, [x21, #-24]
  40a564:	b	40a6d8 <wcrtomb@plt+0x7d18>
  40a568:	add	x8, x21, #0x18
  40a56c:	strb	w24, [x21]
  40a570:	stp	xzr, xzr, [x21, #8]
  40a574:	mov	x21, x8
  40a578:	b	40a6d8 <wcrtomb@plt+0x7d18>
  40a57c:	ldr	q0, [sp, #64]
  40a580:	cmp	x8, #0x112
  40a584:	mov	w8, #0x1ff                 	// #511
  40a588:	str	x22, [x23]
  40a58c:	str	x22, [x20]
  40a590:	str	w8, [x23, #8]
  40a594:	str	w8, [x20, #8]
  40a598:	cset	w8, eq  // eq = none
  40a59c:	stur	q0, [x21, #8]
  40a5a0:	add	x20, x20, #0x10
  40a5a4:	strb	w8, [x21], #24
  40a5a8:	add	x23, x23, #0x10
  40a5ac:	b	40a6d8 <wcrtomb@plt+0x7d18>
  40a5b0:	ldur	x10, [x21, #-16]
  40a5b4:	ldur	x9, [x21, #-32]
  40a5b8:	sub	x8, x20, x10, lsl #4
  40a5bc:	cmp	x9, #0x1
  40a5c0:	stp	x8, x10, [x29, #-48]
  40a5c4:	b.lt	40a61c <wcrtomb@plt+0x7c5c>  // b.tstop
  40a5c8:	ldur	x8, [x21, #-8]
  40a5cc:	mov	x26, xzr
  40a5d0:	sub	x8, x23, x8, lsl #4
  40a5d4:	sub	x25, x8, x9, lsl #4
  40a5d8:	ldr	x8, [x19, #320]
  40a5dc:	ldr	x9, [x25]
  40a5e0:	sub	x0, x29, #0x30
  40a5e4:	sub	x3, x29, #0x48
  40a5e8:	mov	w2, #0xffffffff            	// #-1
  40a5ec:	madd	x1, x9, x28, x8
  40a5f0:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40a5f4:	ldr	x8, [x19, #320]
  40a5f8:	ldr	x9, [x25], #16
  40a5fc:	sub	x0, x29, #0x48
  40a600:	madd	x1, x9, x28, x8
  40a604:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40a608:	ldur	x9, [x21, #-32]
  40a60c:	add	x26, x26, #0x1
  40a610:	cmp	x26, x9
  40a614:	b.lt	40a5d8 <wcrtomb@plt+0x7c18>  // b.tstop
  40a618:	ldur	x10, [x21, #-16]
  40a61c:	ldurb	w8, [x21, #-48]
  40a620:	cbz	w8, 40a634 <wcrtomb@plt+0x7c74>
  40a624:	ldur	x11, [x21, #-40]
  40a628:	add	x10, x11, x10
  40a62c:	stur	x10, [x21, #-40]
  40a630:	b	40a638 <wcrtomb@plt+0x7c78>
  40a634:	sub	x20, x20, x10, lsl #4
  40a638:	ldurb	w10, [x21, #-24]
  40a63c:	ldur	x12, [x21, #-8]
  40a640:	cbz	w10, 40a650 <wcrtomb@plt+0x7c90>
  40a644:	add	x10, x12, x9
  40a648:	mov	w9, #0x1                   	// #1
  40a64c:	b	40a6c8 <wcrtomb@plt+0x7d08>
  40a650:	cmp	x12, #0x1
  40a654:	neg	x11, x9
  40a658:	b.lt	40a6bc <wcrtomb@plt+0x7cfc>  // b.tstop
  40a65c:	sub	x8, x23, x12, lsl #4
  40a660:	sub	x8, x8, x9, lsl #4
  40a664:	ldur	x10, [x21, #-8]
  40a668:	ldr	q0, [x8, x9, lsl #4]
  40a66c:	cmp	x10, #0x2
  40a670:	str	q0, [x8]
  40a674:	b.lt	40a6a8 <wcrtomb@plt+0x7ce8>  // b.tstop
  40a678:	sub	x9, x11, x12
  40a67c:	add	x9, x23, x9, lsl #4
  40a680:	add	x9, x9, #0x10
  40a684:	mov	w11, #0x1                   	// #1
  40a688:	ldur	x12, [x21, #-32]
  40a68c:	ldur	x10, [x21, #-8]
  40a690:	add	x12, x11, x12
  40a694:	ldr	q0, [x8, x12, lsl #4]
  40a698:	add	x11, x11, #0x1
  40a69c:	cmp	x11, x10
  40a6a0:	str	q0, [x9], #16
  40a6a4:	b.lt	40a688 <wcrtomb@plt+0x7cc8>  // b.tstop
  40a6a8:	ldur	x11, [x21, #-32]
  40a6ac:	ldurb	w9, [x21, #-24]
  40a6b0:	ldurb	w8, [x21, #-48]
  40a6b4:	neg	x11, x11
  40a6b8:	b	40a6c4 <wcrtomb@plt+0x7d04>
  40a6bc:	mov	w9, wzr
  40a6c0:	mov	x10, x12
  40a6c4:	add	x23, x23, x11, lsl #4
  40a6c8:	and	w8, w8, w9
  40a6cc:	stur	x10, [x21, #-32]
  40a6d0:	sturb	w8, [x21, #-48]
  40a6d4:	sub	x21, x21, #0x18
  40a6d8:	ldr	x8, [x19, #152]
  40a6dc:	add	x22, x22, #0x1
  40a6e0:	cmp	x22, x8
  40a6e4:	b.lt	40a4ac <wcrtomb@plt+0x7aec>  // b.tstop
  40a6e8:	mov	x20, x19
  40a6ec:	ldr	x19, [x19, #176]
  40a6f0:	lsr	x8, x19, #59
  40a6f4:	cbnz	x8, 40af98 <wcrtomb@plt+0x85d8>
  40a6f8:	lsl	x0, x19, #4
  40a6fc:	bl	412738 <wcrtomb@plt+0xfd78>
  40a700:	stp	xzr, x19, [x29, #-16]
  40a704:	stur	x0, [x29, #-24]
  40a708:	ldr	x8, [x20, #152]
  40a70c:	mov	x19, x20
  40a710:	str	x20, [sp, #64]
  40a714:	cmp	x8, #0x1
  40a718:	b.lt	40a840 <wcrtomb@plt+0x7e80>  // b.tstop
  40a71c:	adrp	x21, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40a720:	mov	x22, xzr
  40a724:	mov	w20, #0x18                  	// #24
  40a728:	add	x21, x21, #0x100
  40a72c:	ldr	x9, [x19, #320]
  40a730:	madd	x10, x22, x20, x9
  40a734:	ldr	x10, [x10, #8]
  40a738:	cmp	x10, #0x1
  40a73c:	b.lt	40a830 <wcrtomb@plt+0x7e70>  // b.tstop
  40a740:	ldr	x10, [x19, #144]
  40a744:	ldr	x10, [x10, x22, lsl #3]
  40a748:	cmp	x10, #0x100
  40a74c:	cset	w11, lt  // lt = tstop
  40a750:	cmp	x10, #0x112
  40a754:	cset	w12, eq  // eq = none
  40a758:	cmp	x10, #0x10a
  40a75c:	orr	w11, w11, w12
  40a760:	cset	w12, eq  // eq = none
  40a764:	cmp	x10, #0x113
  40a768:	orr	w11, w12, w11
  40a76c:	cset	w12, eq  // eq = none
  40a770:	cmp	x10, #0x114
  40a774:	orr	w11, w12, w11
  40a778:	cset	w12, lt  // lt = tstop
  40a77c:	eor	w11, w12, w11
  40a780:	cmp	w11, #0x1
  40a784:	b.ne	40a830 <wcrtomb@plt+0x7e70>  // b.any
  40a788:	sub	x8, x10, #0x10c
  40a78c:	cmp	x8, #0x5
  40a790:	b.hi	40a79c <wcrtomb@plt+0x7ddc>  // b.pmore
  40a794:	ldr	w26, [x21, x8, lsl #2]
  40a798:	b	40a7a0 <wcrtomb@plt+0x7de0>
  40a79c:	mov	w26, #0x1ff                 	// #511
  40a7a0:	madd	x1, x22, x20, x9
  40a7a4:	mov	x0, x22
  40a7a8:	bl	40d638 <wcrtomb@plt+0xac78>
  40a7ac:	ldr	x8, [x19, #152]
  40a7b0:	cmp	x8, #0x1
  40a7b4:	b.lt	40a830 <wcrtomb@plt+0x7e70>  // b.tstop
  40a7b8:	mov	x27, xzr
  40a7bc:	mov	x28, xzr
  40a7c0:	cmp	x22, x28
  40a7c4:	b.eq	40a818 <wcrtomb@plt+0x7e58>  // b.none
  40a7c8:	ldr	x8, [sp, #64]
  40a7cc:	ldr	x19, [x8, #320]
  40a7d0:	add	x23, x19, x27
  40a7d4:	ldr	x8, [x23, #8]
  40a7d8:	cmp	x8, #0x1
  40a7dc:	b.lt	40a818 <wcrtomb@plt+0x7e58>  // b.tstop
  40a7e0:	mov	x0, x22
  40a7e4:	mov	x1, x23
  40a7e8:	bl	40d638 <wcrtomb@plt+0xac78>
  40a7ec:	ands	w24, w0, w26
  40a7f0:	b.eq	40a818 <wcrtomb@plt+0x7e58>  // b.none
  40a7f4:	sub	x1, x29, #0x18
  40a7f8:	mov	x0, x23
  40a7fc:	madd	x25, x22, x20, x19
  40a800:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40a804:	sub	x0, x29, #0x18
  40a808:	mov	x1, x25
  40a80c:	mov	w2, w24
  40a810:	mov	x3, x23
  40a814:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40a818:	ldr	x19, [sp, #64]
  40a81c:	add	x28, x28, #0x1
  40a820:	add	x27, x27, #0x18
  40a824:	ldr	x8, [x19, #152]
  40a828:	cmp	x28, x8
  40a82c:	b.lt	40a7c0 <wcrtomb@plt+0x7e00>  // b.tstop
  40a830:	add	x22, x22, #0x1
  40a834:	cmp	x22, x8
  40a838:	b.lt	40a72c <wcrtomb@plt+0x7d6c>  // b.tstop
  40a83c:	ldur	x0, [x29, #-24]
  40a840:	bl	402770 <free@plt>
  40a844:	ldr	x0, [x19, #152]
  40a848:	bl	412888 <wcrtomb@plt+0xfec8>
  40a84c:	ldr	x8, [x19, #152]
  40a850:	mov	x22, x0
  40a854:	cmp	x8, #0x1
  40a858:	b.lt	40a8e4 <wcrtomb@plt+0x7f24>  // b.tstop
  40a85c:	ldr	x10, [x19, #320]
  40a860:	mov	x9, xzr
  40a864:	mov	w11, #0x18                  	// #24
  40a868:	mov	w12, #0x8                   	// #8
  40a86c:	madd	x13, x9, x11, x10
  40a870:	ldr	x13, [x13, #8]
  40a874:	cmp	x13, #0x1
  40a878:	b.lt	40a8d8 <wcrtomb@plt+0x7f18>  // b.tstop
  40a87c:	mul	x14, x9, x11
  40a880:	ldr	x14, [x10, x14]
  40a884:	ldr	x15, [x14]
  40a888:	cmp	x15, x9
  40a88c:	b.ne	40a8a0 <wcrtomb@plt+0x7ee0>  // b.any
  40a890:	ldrb	w15, [x22, x9]
  40a894:	orr	w15, w15, #0x1
  40a898:	strb	w15, [x22, x9]
  40a89c:	b	40a8cc <wcrtomb@plt+0x7f0c>
  40a8a0:	ldrb	w16, [x22, x15]
  40a8a4:	b.ge	40a8b0 <wcrtomb@plt+0x7ef0>  // b.tcont
  40a8a8:	orr	w16, w16, #0x2
  40a8ac:	b	40a8c8 <wcrtomb@plt+0x7f08>
  40a8b0:	and	w17, w16, #0x8
  40a8b4:	strb	w17, [x22, x15]
  40a8b8:	tbnz	w16, #3, 40a8c4 <wcrtomb@plt+0x7f04>
  40a8bc:	strb	w12, [x22, x15]
  40a8c0:	b	40a8cc <wcrtomb@plt+0x7f0c>
  40a8c4:	orr	w16, w17, #0x4
  40a8c8:	strb	w16, [x22, x15]
  40a8cc:	subs	x13, x13, #0x1
  40a8d0:	add	x14, x14, #0x10
  40a8d4:	b.ne	40a884 <wcrtomb@plt+0x7ec4>  // b.any
  40a8d8:	add	x9, x9, #0x1
  40a8dc:	cmp	x9, x8
  40a8e0:	b.ne	40a86c <wcrtomb@plt+0x7eac>  // b.any
  40a8e4:	ldrb	w8, [x22]
  40a8e8:	mov	x20, x19
  40a8ec:	orr	w21, w8, #0x10
  40a8f0:	strb	w21, [x22]
  40a8f4:	ldr	x19, [x19, #176]
  40a8f8:	lsr	x8, x19, #59
  40a8fc:	cbnz	x8, 40af98 <wcrtomb@plt+0x85d8>
  40a900:	lsl	x0, x19, #4
  40a904:	bl	412738 <wcrtomb@plt+0xfd78>
  40a908:	stp	xzr, x19, [x29, #-16]
  40a90c:	stur	x0, [x29, #-24]
  40a910:	ldr	x8, [x20, #152]
  40a914:	lsr	x9, x8, #61
  40a918:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40a91c:	lsl	x0, x8, #2
  40a920:	mov	x19, x20
  40a924:	bl	412738 <wcrtomb@plt+0xfd78>
  40a928:	ldr	x8, [x20, #152]
  40a92c:	str	x0, [x20, #336]
  40a930:	cmp	x8, #0x1
  40a934:	b.lt	40ab68 <wcrtomb@plt+0x81a8>  // b.tstop
  40a938:	mov	x20, xzr
  40a93c:	mov	w28, #0x18                  	// #24
  40a940:	tbz	w21, #4, 40ab5c <wcrtomb@plt+0x819c>
  40a944:	b	40a950 <wcrtomb@plt+0x7f90>
  40a948:	ldrb	w21, [x22, x20]
  40a94c:	tbz	w21, #4, 40ab5c <wcrtomb@plt+0x819c>
  40a950:	ldr	x9, [x19, #336]
  40a954:	ldr	x16, [x19, #320]
  40a958:	str	wzr, [x9, x20, lsl #2]
  40a95c:	madd	x27, x20, x28, x16
  40a960:	ldr	x9, [x27, #8]!
  40a964:	cmp	x9, #0x1
  40a968:	b.lt	40ab54 <wcrtomb@plt+0x8194>  // b.tstop
  40a96c:	mov	x26, xzr
  40a970:	mov	x21, xzr
  40a974:	madd	x17, x20, x28, x16
  40a978:	ldr	x8, [x17]
  40a97c:	add	x10, x8, x21, lsl #4
  40a980:	ldr	w9, [x10, #8]
  40a984:	cbz	w9, 40aa2c <wcrtomb@plt+0x806c>
  40a988:	ldr	x23, [x10]
  40a98c:	ldr	x10, [x19, #144]
  40a990:	ldr	x11, [x10, x23, lsl #3]
  40a994:	tbnz	x11, #63, 40aa1c <wcrtomb@plt+0x805c>
  40a998:	ldrb	w25, [x22, x23]
  40a99c:	cmp	x26, #0x1
  40a9a0:	b.lt	40aa04 <wcrtomb@plt+0x8044>  // b.tstop
  40a9a4:	and	w12, w25, #0x6
  40a9a8:	cbnz	w12, 40aa04 <wcrtomb@plt+0x8044>
  40a9ac:	mov	x12, xzr
  40a9b0:	add	x13, x8, #0x8
  40a9b4:	mov	w24, #0x1                   	// #1
  40a9b8:	ldr	w14, [x13]
  40a9bc:	cmp	w14, w9
  40a9c0:	b.ne	40a9e8 <wcrtomb@plt+0x8028>  // b.any
  40a9c4:	ldur	x19, [x13, #-8]
  40a9c8:	ldrb	w14, [x22, x19]
  40a9cc:	tst	w14, #0x6
  40a9d0:	b.ne	40a9e8 <wcrtomb@plt+0x8028>  // b.any
  40a9d4:	ldr	x15, [x10, x19, lsl #3]
  40a9d8:	cmp	x11, x15
  40a9dc:	b.ne	40a9e8 <wcrtomb@plt+0x8028>  // b.any
  40a9e0:	eor	w14, w14, w25
  40a9e4:	tbz	w14, #0, 40aa40 <wcrtomb@plt+0x8080>
  40a9e8:	add	x12, x12, #0x1
  40a9ec:	cmp	x12, x26
  40a9f0:	cset	w24, lt  // lt = tstop
  40a9f4:	cmp	x26, x12
  40a9f8:	add	x13, x13, #0x10
  40a9fc:	b.ne	40a9b8 <wcrtomb@plt+0x7ff8>  // b.any
  40aa00:	ldr	x19, [sp, #64]
  40aa04:	ldr	q0, [x8, x21, lsl #4]
  40aa08:	str	q0, [x8, x26, lsl #4]
  40aa0c:	add	x26, x26, #0x1
  40aa10:	orr	w8, w25, #0x10
  40aa14:	strb	w8, [x22, x23]
  40aa18:	b	40aa2c <wcrtomb@plt+0x806c>
  40aa1c:	ldr	x8, [x19, #336]
  40aa20:	ldr	w10, [x8, x20, lsl #2]
  40aa24:	orr	w9, w10, w9
  40aa28:	str	w9, [x8, x20, lsl #2]
  40aa2c:	ldr	x8, [x27]
  40aa30:	add	x21, x21, #0x1
  40aa34:	cmp	x21, x8
  40aa38:	b.lt	40a978 <wcrtomb@plt+0x7fb8>  // b.tstop
  40aa3c:	b	40ab4c <wcrtomb@plt+0x818c>
  40aa40:	tbz	w25, #0, 40aa64 <wcrtomb@plt+0x80a4>
  40aa44:	madd	x1, x23, x28, x16
  40aa48:	mov	x0, x23
  40aa4c:	str	x16, [sp, #56]
  40aa50:	mov	x28, x17
  40aa54:	bl	40d638 <wcrtomb@plt+0xac78>
  40aa58:	ldr	x16, [sp, #56]
  40aa5c:	mov	x17, x28
  40aa60:	mov	w28, #0x18                  	// #24
  40aa64:	madd	x0, x23, x28, x16
  40aa68:	mov	x10, x0
  40aa6c:	ldr	x8, [x10, #8]!
  40aa70:	madd	x9, x19, x28, x16
  40aa74:	cmp	x8, #0x3
  40aa78:	b.gt	40aaf8 <wcrtomb@plt+0x8138>
  40aa7c:	cmp	x8, #0x1
  40aa80:	b.lt	40ab28 <wcrtomb@plt+0x8168>  // b.tstop
  40aa84:	mov	x19, xzr
  40aa88:	mov	x28, xzr
  40aa8c:	str	w25, [sp, #12]
  40aa90:	stp	x27, x20, [sp, #16]
  40aa94:	str	x17, [sp, #32]
  40aa98:	str	x16, [sp, #56]
  40aa9c:	ldr	x8, [x0]
  40aaa0:	mov	x20, x0
  40aaa4:	mov	x2, x9
  40aaa8:	mov	x27, x9
  40aaac:	add	x8, x8, x19
  40aab0:	ldp	x0, x1, [x8]
  40aab4:	mov	x25, x10
  40aab8:	bl	40d6e8 <wcrtomb@plt+0xad28>
  40aabc:	ldr	x8, [x25]
  40aac0:	add	x28, x28, #0x1
  40aac4:	mov	x10, x25
  40aac8:	mov	x9, x27
  40aacc:	mov	x0, x20
  40aad0:	cmp	x28, x8
  40aad4:	add	x19, x19, #0x10
  40aad8:	b.lt	40aa9c <wcrtomb@plt+0x80dc>  // b.tstop
  40aadc:	ldr	x19, [sp, #64]
  40aae0:	tbz	w24, #0, 40ab30 <wcrtomb@plt+0x8170>
  40aae4:	ldr	x16, [sp, #56]
  40aae8:	ldp	x20, x17, [sp, #24]
  40aaec:	ldr	x27, [sp, #16]
  40aaf0:	mov	w28, #0x18                  	// #24
  40aaf4:	b	40aa2c <wcrtomb@plt+0x806c>
  40aaf8:	sub	x3, x29, #0x18
  40aafc:	mov	w2, #0xffffffff            	// #-1
  40ab00:	mov	x1, x9
  40ab04:	mov	x19, x16
  40ab08:	mov	x23, x17
  40ab0c:	mov	x24, x9
  40ab10:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40ab14:	sub	x0, x29, #0x18
  40ab18:	mov	x1, x24
  40ab1c:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40ab20:	mov	x17, x23
  40ab24:	mov	x16, x19
  40ab28:	ldr	x19, [sp, #64]
  40ab2c:	b	40aa2c <wcrtomb@plt+0x806c>
  40ab30:	ldp	x20, x17, [sp, #24]
  40ab34:	ldr	x16, [sp, #56]
  40ab38:	ldr	x27, [sp, #16]
  40ab3c:	ldr	w25, [sp, #12]
  40ab40:	ldr	x8, [x17]
  40ab44:	mov	w28, #0x18                  	// #24
  40ab48:	b	40aa04 <wcrtomb@plt+0x8044>
  40ab4c:	ldr	x8, [x19, #152]
  40ab50:	b	40ab58 <wcrtomb@plt+0x8198>
  40ab54:	mov	x26, xzr
  40ab58:	str	x26, [x27]
  40ab5c:	add	x20, x20, #0x1
  40ab60:	cmp	x20, x8
  40ab64:	b.lt	40a948 <wcrtomb@plt+0x7f88>  // b.tstop
  40ab68:	lsr	x9, x8, #60
  40ab6c:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40ab70:	lsl	x0, x8, #3
  40ab74:	bl	412738 <wcrtomb@plt+0xfd78>
  40ab78:	str	xzr, [x0]
  40ab7c:	ldr	x8, [x19, #152]
  40ab80:	mov	x23, x0
  40ab84:	cmp	x8, #0x2
  40ab88:	b.lt	40aba0 <wcrtomb@plt+0x81e0>  // b.tstop
  40ab8c:	lsl	x8, x8, #3
  40ab90:	add	x0, x23, #0x8
  40ab94:	sub	x2, x8, #0x8
  40ab98:	mov	w1, #0xff                  	// #255
  40ab9c:	bl	4025b0 <memset@plt>
  40aba0:	ldr	x8, [x19, #176]
  40aba4:	lsr	x9, x8, #60
  40aba8:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40abac:	lsl	x0, x8, #3
  40abb0:	bl	412738 <wcrtomb@plt+0xfd78>
  40abb4:	ldr	x8, [x19, #176]
  40abb8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40abbc:	movk	x9, #0x555, lsl #48
  40abc0:	cmp	x8, x9
  40abc4:	b.hi	40af98 <wcrtomb@plt+0x85d8>  // b.pmore
  40abc8:	add	x8, x8, x8, lsl #1
  40abcc:	mov	x24, x0
  40abd0:	lsl	x0, x8, #3
  40abd4:	bl	412738 <wcrtomb@plt+0xfd78>
  40abd8:	ldr	x8, [x19, #176]
  40abdc:	lsr	x9, x8, #61
  40abe0:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40abe4:	mov	x25, x0
  40abe8:	lsl	x0, x8, #2
  40abec:	bl	412738 <wcrtomb@plt+0xfd78>
  40abf0:	ldrb	w8, [x19, #1048]
  40abf4:	mov	x26, x0
  40abf8:	cbz	w8, 40ac10 <wcrtomb@plt+0x8250>
  40abfc:	ldr	x0, [x19, #176]
  40ac00:	tbnz	x0, #63, 40af98 <wcrtomb@plt+0x85d8>
  40ac04:	bl	412738 <wcrtomb@plt+0xfd78>
  40ac08:	mov	x27, x0
  40ac0c:	b	40ac14 <wcrtomb@plt+0x8254>
  40ac10:	mov	x27, xzr
  40ac14:	ldr	x8, [x19, #152]
  40ac18:	cmp	x8, #0x1
  40ac1c:	b.lt	40ad28 <wcrtomb@plt+0x8368>  // b.tstop
  40ac20:	mov	x8, xzr
  40ac24:	mov	x21, xzr
  40ac28:	mov	w20, #0x1                   	// #1
  40ac2c:	mov	w28, #0x18                  	// #24
  40ac30:	cmn	x8, #0x1
  40ac34:	b.eq	40acc8 <wcrtomb@plt+0x8308>  // b.none
  40ac38:	ldr	x9, [x19, #144]
  40ac3c:	madd	x12, x8, x28, x25
  40ac40:	ldr	x9, [x9, x21, lsl #3]
  40ac44:	str	x9, [x24, x8, lsl #3]
  40ac48:	ldr	x10, [x19, #320]
  40ac4c:	madd	x9, x21, x28, x10
  40ac50:	ldr	x11, [x9, #16]
  40ac54:	ldr	q0, [x9]
  40ac58:	str	x11, [x12, #16]
  40ac5c:	str	q0, [x12]
  40ac60:	ldr	x11, [x19, #336]
  40ac64:	ldr	w11, [x11, x21, lsl #2]
  40ac68:	str	w11, [x26, x8, lsl #2]
  40ac6c:	cbz	x27, 40ac7c <wcrtomb@plt+0x82bc>
  40ac70:	ldr	x11, [x19, #280]
  40ac74:	ldrb	w11, [x11, x21]
  40ac78:	strb	w11, [x27, x8]
  40ac7c:	madd	x8, x21, x28, x10
  40ac80:	ldr	x1, [x8, #8]
  40ac84:	cmp	x1, #0x0
  40ac88:	b.le	40acf0 <wcrtomb@plt+0x8330>
  40ac8c:	ldr	x0, [x9]
  40ac90:	mov	x9, x1
  40ac94:	mov	x8, x0
  40ac98:	ldr	x11, [x8]
  40ac9c:	ldr	x10, [x23, x11, lsl #3]
  40aca0:	cmn	x10, #0x1
  40aca4:	b.ne	40acb8 <wcrtomb@plt+0x82f8>  // b.any
  40aca8:	add	x12, x20, #0x1
  40acac:	str	x20, [x23, x11, lsl #3]
  40acb0:	mov	x10, x20
  40acb4:	mov	x20, x12
  40acb8:	subs	x9, x9, #0x1
  40acbc:	str	x10, [x8], #16
  40acc0:	b.ne	40ac98 <wcrtomb@plt+0x82d8>  // b.any
  40acc4:	b	40acf4 <wcrtomb@plt+0x8334>
  40acc8:	ldr	x8, [x19, #320]
  40accc:	add	x19, x21, x21, lsl #1
  40acd0:	ldr	x0, [x8, x19, lsl #3]
  40acd4:	bl	402770 <free@plt>
  40acd8:	ldr	x8, [sp, #64]
  40acdc:	ldr	x8, [x8, #320]
  40ace0:	add	x8, x8, x19, lsl #3
  40ace4:	ldr	x19, [sp, #64]
  40ace8:	stp	xzr, xzr, [x8]
  40acec:	b	40ad04 <wcrtomb@plt+0x8344>
  40acf0:	ldr	x0, [x9]
  40acf4:	adrp	x3, 40d000 <wcrtomb@plt+0xa640>
  40acf8:	mov	w2, #0x10                  	// #16
  40acfc:	add	x3, x3, #0x7e8
  40ad00:	bl	402420 <qsort@plt>
  40ad04:	ldr	x8, [x19, #152]
  40ad08:	add	x21, x21, #0x1
  40ad0c:	cmp	x21, x8
  40ad10:	b.ge	40ad1c <wcrtomb@plt+0x835c>  // b.tcont
  40ad14:	ldr	x8, [x23, x21, lsl #3]
  40ad18:	b	40ac30 <wcrtomb@plt+0x8270>
  40ad1c:	cmp	x20, #0x1
  40ad20:	b.ge	40ad2c <wcrtomb@plt+0x836c>  // b.tcont
  40ad24:	b	40ad88 <wcrtomb@plt+0x83c8>
  40ad28:	mov	w20, #0x1                   	// #1
  40ad2c:	mov	x8, xzr
  40ad30:	mov	x9, xzr
  40ad34:	ldr	x10, [x24, x9, lsl #3]
  40ad38:	ldr	x11, [x19, #144]
  40ad3c:	add	x12, x25, x8
  40ad40:	str	x10, [x11, x9, lsl #3]
  40ad44:	ldr	x10, [x19, #320]
  40ad48:	ldr	x11, [x12, #16]
  40ad4c:	ldr	q0, [x12]
  40ad50:	add	x10, x10, x8
  40ad54:	str	x11, [x10, #16]
  40ad58:	str	q0, [x10]
  40ad5c:	ldr	w10, [x26, x9, lsl #2]
  40ad60:	ldr	x11, [x19, #336]
  40ad64:	str	w10, [x11, x9, lsl #2]
  40ad68:	cbz	x27, 40ad78 <wcrtomb@plt+0x83b8>
  40ad6c:	ldrb	w10, [x27, x9]
  40ad70:	ldr	x11, [x19, #280]
  40ad74:	strb	w10, [x11, x9]
  40ad78:	add	x9, x9, #0x1
  40ad7c:	cmp	x20, x9
  40ad80:	add	x8, x8, #0x18
  40ad84:	b.ne	40ad34 <wcrtomb@plt+0x8374>  // b.any
  40ad88:	mov	x0, x24
  40ad8c:	str	x20, [x19, #176]
  40ad90:	str	x20, [x19, #152]
  40ad94:	bl	402770 <free@plt>
  40ad98:	mov	x0, x25
  40ad9c:	bl	402770 <free@plt>
  40ada0:	mov	x0, x26
  40ada4:	bl	402770 <free@plt>
  40ada8:	mov	x0, x27
  40adac:	bl	402770 <free@plt>
  40adb0:	mov	x0, x23
  40adb4:	bl	402770 <free@plt>
  40adb8:	ldur	x0, [x29, #-24]
  40adbc:	bl	402770 <free@plt>
  40adc0:	mov	x0, x22
  40adc4:	bl	402770 <free@plt>
  40adc8:	mov	w0, #0x10                  	// #16
  40adcc:	bl	412738 <wcrtomb@plt+0xfd78>
  40add0:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40add4:	ldr	q0, [x8, #288]
  40add8:	stur	x0, [x29, #-48]
  40addc:	sub	x2, x29, #0x30
  40ade0:	mov	w1, #0x1ff                 	// #511
  40ade4:	mov	x0, xzr
  40ade8:	stur	q0, [x29, #-40]
  40adec:	bl	40d220 <wcrtomb@plt+0xa860>
  40adf0:	ldr	x8, [x19, #152]
  40adf4:	lsr	x9, x8, #61
  40adf8:	cbnz	x9, 40af98 <wcrtomb@plt+0x85d8>
  40adfc:	lsl	x0, x8, #2
  40ae00:	bl	412738 <wcrtomb@plt+0xfd78>
  40ae04:	ldr	x8, [x19, #152]
  40ae08:	str	x0, [x19, #344]
  40ae0c:	cmp	x8, #0x1
  40ae10:	b.lt	40aed4 <wcrtomb@plt+0x8514>  // b.tstop
  40ae14:	mov	x8, xzr
  40ae18:	mov	w9, #0x49                  	// #73
  40ae1c:	mov	w10, #0x18                  	// #24
  40ae20:	str	wzr, [x0, x8, lsl #2]
  40ae24:	ldr	x12, [x19, #336]
  40ae28:	ldr	w11, [x12, x8, lsl #2]
  40ae2c:	eor	w11, w11, w11, lsr #2
  40ae30:	tst	w11, w9
  40ae34:	cset	w11, ne  // ne = any
  40ae38:	lsl	w11, w11, #2
  40ae3c:	str	w11, [x0, x8, lsl #2]
  40ae40:	ldr	w12, [x12, x8, lsl #2]
  40ae44:	eor	w12, w12, w12, lsr #1
  40ae48:	tst	w12, w9
  40ae4c:	b.eq	40ae58 <wcrtomb@plt+0x8498>  // b.none
  40ae50:	orr	w11, w11, #0x2
  40ae54:	str	w11, [x0, x8, lsl #2]
  40ae58:	ldr	x14, [x19, #320]
  40ae5c:	madd	x12, x8, x10, x14
  40ae60:	ldr	x12, [x12, #8]
  40ae64:	cmp	x12, #0x1
  40ae68:	b.lt	40aebc <wcrtomb@plt+0x84fc>  // b.tstop
  40ae6c:	mul	x15, x8, x10
  40ae70:	ldr	x14, [x14, x15]
  40ae74:	mov	x13, xzr
  40ae78:	add	x14, x14, #0x8
  40ae7c:	ldr	w15, [x14]
  40ae80:	eor	w16, w15, w15, lsr #2
  40ae84:	tst	w16, w9
  40ae88:	b.eq	40ae98 <wcrtomb@plt+0x84d8>  // b.none
  40ae8c:	orr	w11, w11, #0x4
  40ae90:	str	w11, [x0, x8, lsl #2]
  40ae94:	ldr	w15, [x14]
  40ae98:	eor	w15, w15, w15, lsr #1
  40ae9c:	tst	w15, w9
  40aea0:	b.eq	40aeac <wcrtomb@plt+0x84ec>  // b.none
  40aea4:	orr	w11, w11, #0x2
  40aea8:	str	w11, [x0, x8, lsl #2]
  40aeac:	add	x13, x13, #0x1
  40aeb0:	cmp	x13, x12
  40aeb4:	add	x14, x14, #0x10
  40aeb8:	b.lt	40ae7c <wcrtomb@plt+0x84bc>  // b.tstop
  40aebc:	ldr	x11, [x19, #152]
  40aec0:	add	x8, x8, #0x1
  40aec4:	cmp	x8, x11
  40aec8:	b.ge	40aed4 <wcrtomb@plt+0x8514>  // b.tcont
  40aecc:	ldr	x0, [x19, #344]
  40aed0:	b	40ae20 <wcrtomb@plt+0x8460>
  40aed4:	ldur	x8, [x29, #-40]
  40aed8:	cmp	x8, #0x1
  40aedc:	b.lt	40af18 <wcrtomb@plt+0x8558>  // b.tstop
  40aee0:	ldr	x9, [x19, #344]
  40aee4:	ldur	x10, [x29, #-48]
  40aee8:	mov	w20, wzr
  40aeec:	ldr	x11, [x10], #16
  40aef0:	subs	x8, x8, #0x1
  40aef4:	ldr	w11, [x9, x11, lsl #2]
  40aef8:	orr	w20, w11, w20
  40aefc:	b.ne	40aeec <wcrtomb@plt+0x852c>  // b.any
  40af00:	tbz	w20, #2, 40af1c <wcrtomb@plt+0x855c>
  40af04:	sub	x1, x29, #0x30
  40af08:	mov	w2, #0x4                   	// #4
  40af0c:	mov	x0, x19
  40af10:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40af14:	b	40af1c <wcrtomb@plt+0x855c>
  40af18:	mov	w20, wzr
  40af1c:	eor	w2, w20, #0x7
  40af20:	sub	x1, x29, #0x30
  40af24:	mov	x0, x19
  40af28:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40af2c:	sxtw	x8, w0
  40af30:	str	w0, [x19, #364]
  40af34:	str	x8, [x19, #400]
  40af38:	tbz	w20, #1, 40af50 <wcrtomb@plt+0x8590>
  40af3c:	sub	x1, x29, #0x30
  40af40:	mov	w2, #0x2                   	// #2
  40af44:	mov	x0, x19
  40af48:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40af4c:	str	w0, [x19, #364]
  40af50:	add	w8, w0, #0x1
  40af54:	ldr	x0, [sp, #48]
  40af58:	str	w8, [x19, #364]
  40af5c:	str	wzr, [x19, #360]
  40af60:	bl	402770 <free@plt>
  40af64:	ldr	x0, [sp, #40]
  40af68:	bl	402770 <free@plt>
  40af6c:	ldur	x0, [x29, #-72]
  40af70:	bl	402770 <free@plt>
  40af74:	ldur	x0, [x29, #-48]
  40af78:	ldp	x20, x19, [sp, #240]
  40af7c:	ldp	x22, x21, [sp, #224]
  40af80:	ldp	x24, x23, [sp, #208]
  40af84:	ldp	x26, x25, [sp, #192]
  40af88:	ldp	x28, x27, [sp, #176]
  40af8c:	ldp	x29, x30, [sp, #160]
  40af90:	add	sp, sp, #0x100
  40af94:	b	402770 <free@plt>
  40af98:	bl	412920 <wcrtomb@plt+0xff60>
  40af9c:	mov	x0, x1
  40afa0:	mov	w8, #0x1                   	// #1
  40afa4:	strb	w8, [x5]
  40afa8:	ret
  40afac:	stp	x29, x30, [sp, #-48]!
  40afb0:	stp	x20, x19, [sp, #32]
  40afb4:	mov	x19, x0
  40afb8:	ldr	x0, [x0]
  40afbc:	str	x21, [sp, #16]
  40afc0:	mov	x29, sp
  40afc4:	bl	402770 <free@plt>
  40afc8:	ldr	x0, [x19, #144]
  40afcc:	bl	402770 <free@plt>
  40afd0:	ldrb	w8, [x19, #1048]
  40afd4:	cbz	w8, 40afe0 <wcrtomb@plt+0x8620>
  40afd8:	mov	x0, x19
  40afdc:	bl	40b128 <wcrtomb@plt+0x8768>
  40afe0:	ldr	x0, [x19, #336]
  40afe4:	bl	402770 <free@plt>
  40afe8:	ldr	x0, [x19, #344]
  40afec:	bl	402770 <free@plt>
  40aff0:	ldr	x8, [x19, #304]
  40aff4:	cmp	x8, #0x1
  40aff8:	b.lt	40b038 <wcrtomb@plt+0x8678>  // b.tstop
  40affc:	mov	x20, xzr
  40b000:	mov	x21, xzr
  40b004:	ldr	x8, [x19, #296]
  40b008:	add	x8, x8, x20
  40b00c:	ldr	x0, [x8, #8]
  40b010:	bl	402770 <free@plt>
  40b014:	ldr	x8, [x19, #296]
  40b018:	add	x8, x8, x20
  40b01c:	ldr	x0, [x8, #48]
  40b020:	bl	402770 <free@plt>
  40b024:	ldr	x8, [x19, #304]
  40b028:	add	x21, x21, #0x1
  40b02c:	add	x20, x20, #0x50
  40b030:	cmp	x21, x8
  40b034:	b.lt	40b004 <wcrtomb@plt+0x8644>  // b.tstop
  40b038:	ldr	x0, [x19, #296]
  40b03c:	bl	402770 <free@plt>
  40b040:	ldr	x0, [x19, #320]
  40b044:	cbz	x0, 40b098 <wcrtomb@plt+0x86d8>
  40b048:	ldr	x8, [x19, #152]
  40b04c:	cmp	x8, #0x1
  40b050:	b.lt	40b094 <wcrtomb@plt+0x86d4>  // b.tstop
  40b054:	ldr	x0, [x0]
  40b058:	bl	402770 <free@plt>
  40b05c:	ldr	x8, [x19, #152]
  40b060:	cmp	x8, #0x2
  40b064:	b.lt	40b090 <wcrtomb@plt+0x86d0>  // b.tstop
  40b068:	mov	w20, #0x1                   	// #1
  40b06c:	mov	w21, #0x18                  	// #24
  40b070:	ldr	x8, [x19, #320]
  40b074:	ldr	x0, [x8, x21]
  40b078:	bl	402770 <free@plt>
  40b07c:	ldr	x8, [x19, #152]
  40b080:	add	x20, x20, #0x1
  40b084:	add	x21, x21, #0x18
  40b088:	cmp	x20, x8
  40b08c:	b.lt	40b070 <wcrtomb@plt+0x86b0>  // b.tstop
  40b090:	ldr	x0, [x19, #320]
  40b094:	bl	402770 <free@plt>
  40b098:	ldr	x8, [x19, #368]
  40b09c:	cbz	x8, 40b0f8 <wcrtomb@plt+0x8738>
  40b0a0:	ldr	x9, [x19, #352]
  40b0a4:	cmp	x9, #0x1
  40b0a8:	b.lt	40b0d8 <wcrtomb@plt+0x8718>  // b.tstop
  40b0ac:	mov	x20, xzr
  40b0b0:	ldr	x0, [x8, x20, lsl #3]
  40b0b4:	bl	402770 <free@plt>
  40b0b8:	ldr	x8, [x19, #376]
  40b0bc:	ldr	x0, [x8, x20, lsl #3]
  40b0c0:	bl	402770 <free@plt>
  40b0c4:	ldr	x9, [x19, #352]
  40b0c8:	ldr	x8, [x19, #368]
  40b0cc:	add	x20, x20, #0x1
  40b0d0:	cmp	x20, x9
  40b0d4:	b.lt	40b0b0 <wcrtomb@plt+0x86f0>  // b.tstop
  40b0d8:	sub	x0, x8, #0x10
  40b0dc:	bl	402770 <free@plt>
  40b0e0:	ldr	x0, [x19, #376]
  40b0e4:	bl	402770 <free@plt>
  40b0e8:	ldr	x0, [x19, #392]
  40b0ec:	bl	402770 <free@plt>
  40b0f0:	ldr	x0, [x19, #384]
  40b0f4:	bl	402770 <free@plt>
  40b0f8:	ldr	x0, [x19, #288]
  40b0fc:	cbz	x0, 40b118 <wcrtomb@plt+0x8758>
  40b100:	bl	40afac <wcrtomb@plt+0x85ec>
  40b104:	ldr	x0, [x19, #288]
  40b108:	ldp	x20, x19, [sp, #32]
  40b10c:	ldr	x21, [sp, #16]
  40b110:	ldp	x29, x30, [sp], #48
  40b114:	b	402770 <free@plt>
  40b118:	ldp	x20, x19, [sp, #32]
  40b11c:	ldr	x21, [sp, #16]
  40b120:	ldp	x29, x30, [sp], #48
  40b124:	ret
  40b128:	stp	x29, x30, [sp, #-32]!
  40b12c:	stp	x20, x19, [sp, #16]
  40b130:	mov	x19, x0
  40b134:	ldr	x0, [x0, #280]
  40b138:	mov	x29, sp
  40b13c:	bl	402770 <free@plt>
  40b140:	ldr	x0, [x19, #96]
  40b144:	bl	402770 <free@plt>
  40b148:	ldr	x0, [x19, #408]
  40b14c:	bl	402770 <free@plt>
  40b150:	ldr	x8, [x19, #432]
  40b154:	cbz	x8, 40b190 <wcrtomb@plt+0x87d0>
  40b158:	ldr	x9, [x19, #352]
  40b15c:	tbnz	x9, #63, 40b180 <wcrtomb@plt+0x87c0>
  40b160:	mov	x20, #0xffffffffffffffff    	// #-1
  40b164:	ldr	x0, [x8, x20, lsl #3]
  40b168:	bl	402770 <free@plt>
  40b16c:	ldr	x9, [x19, #352]
  40b170:	ldr	x8, [x19, #432]
  40b174:	add	x20, x20, #0x1
  40b178:	cmp	x20, x9
  40b17c:	b.lt	40b164 <wcrtomb@plt+0x87a4>  // b.tstop
  40b180:	ldp	x20, x19, [sp, #16]
  40b184:	sub	x0, x8, #0x10
  40b188:	ldp	x29, x30, [sp], #32
  40b18c:	b	402770 <free@plt>
  40b190:	ldp	x20, x19, [sp, #16]
  40b194:	ldp	x29, x30, [sp], #32
  40b198:	ret
  40b19c:	sub	sp, sp, #0xa0
  40b1a0:	stp	x29, x30, [sp, #64]
  40b1a4:	stp	x28, x27, [sp, #80]
  40b1a8:	stp	x26, x25, [sp, #96]
  40b1ac:	stp	x24, x23, [sp, #112]
  40b1b0:	stp	x22, x21, [sp, #128]
  40b1b4:	stp	x20, x19, [sp, #144]
  40b1b8:	ldr	x19, [x0, #152]
  40b1bc:	add	x29, sp, #0x40
  40b1c0:	cmp	x19, #0x3
  40b1c4:	b.lt	40b96c <wcrtomb@plt+0x8fac>  // b.tstop
  40b1c8:	str	xzr, [sp, #16]
  40b1cc:	ldrb	w9, [x0, #1048]
  40b1d0:	ldrb	w8, [x0, #457]
  40b1d4:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b1d8:	mov	x23, x0
  40b1dc:	eor	w9, w9, #0x1
  40b1e0:	mov	x28, xzr
  40b1e4:	mov	w12, #0x1                   	// #1
  40b1e8:	mov	w21, #0x2                   	// #2
  40b1ec:	add	x24, x24, #0x7ad
  40b1f0:	and	w8, w9, w8
  40b1f4:	stur	w8, [x29, #-20]
  40b1f8:	str	x0, [sp, #32]
  40b1fc:	ldr	x25, [x23, #144]
  40b200:	add	x20, x25, x12, lsl #3
  40b204:	ldr	x22, [x20]
  40b208:	sub	x8, x22, #0x100
  40b20c:	cmp	x8, #0x13
  40b210:	b.hi	40b25c <wcrtomb@plt+0x889c>  // b.pmore
  40b214:	adrp	x11, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b218:	add	x11, x11, #0xe80
  40b21c:	adr	x9, 40b22c <wcrtomb@plt+0x886c>
  40b220:	ldrh	w10, [x11, x8, lsl #1]
  40b224:	add	x9, x9, x10, lsl #2
  40b228:	br	x9
  40b22c:	mov	w1, #0x2                   	// #2
  40b230:	mov	x0, x28
  40b234:	mov	x19, x12
  40b238:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b23c:	mov	x12, x19
  40b240:	mov	x28, x0
  40b244:	ldr	x19, [x23, #152]
  40b248:	add	x21, x12, #0x2
  40b24c:	add	x12, x12, #0x1
  40b250:	cmp	x21, x19
  40b254:	b.lt	40b1fc <wcrtomb@plt+0x883c>  // b.tstop
  40b258:	b	40b9f0 <wcrtomb@plt+0x9030>
  40b25c:	cmn	x22, #0x1
  40b260:	b.eq	40b988 <wcrtomb@plt+0x8fc8>  // b.none
  40b264:	cbz	x22, 40b9d0 <wcrtomb@plt+0x9010>
  40b268:	subs	x26, x22, #0x114
  40b26c:	b.lt	40b7a4 <wcrtomb@plt+0x8de4>  // b.tstop
  40b270:	ldr	x27, [x23]
  40b274:	mov	x22, xzr
  40b278:	mov	w23, #0x1                   	// #1
  40b27c:	ubfx	x8, x22, #6, #26
  40b280:	add	x9, x27, x26, lsl #5
  40b284:	ldr	x8, [x9, w8, uxtw #3]
  40b288:	lsr	x8, x8, x22
  40b28c:	tbnz	w8, #0, 40b740 <wcrtomb@plt+0x8d80>
  40b290:	add	x22, x22, #0x1
  40b294:	cmp	w22, #0x100
  40b298:	add	x23, x23, #0x1
  40b29c:	b.ne	40b27c <wcrtomb@plt+0x88bc>  // b.any
  40b2a0:	mov	w1, #0x2                   	// #2
  40b2a4:	mov	x0, x28
  40b2a8:	mov	x19, x12
  40b2ac:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b2b0:	ldr	x23, [sp, #32]
  40b2b4:	b	40b23c <wcrtomb@plt+0x887c>
  40b2b8:	ldr	x8, [x28]
  40b2bc:	ldr	x0, [x8]
  40b2c0:	cbz	x0, 40b2e0 <wcrtomb@plt+0x8920>
  40b2c4:	mov	x20, x12
  40b2c8:	add	x19, x8, #0x8
  40b2cc:	bl	402770 <free@plt>
  40b2d0:	ldr	x0, [x19], #8
  40b2d4:	cbnz	x0, 40b2cc <wcrtomb@plt+0x890c>
  40b2d8:	ldr	x8, [x28]
  40b2dc:	mov	x12, x20
  40b2e0:	str	xzr, [x8]
  40b2e4:	ldr	x8, [x28, #24]
  40b2e8:	strb	wzr, [x8]
  40b2ec:	ldr	x8, [x28, #16]
  40b2f0:	strb	wzr, [x8]
  40b2f4:	ldr	x8, [x28, #8]
  40b2f8:	strb	wzr, [x8]
  40b2fc:	strh	wzr, [x28, #32]
  40b300:	b	40b244 <wcrtomb@plt+0x8884>
  40b304:	ldr	x19, [x28, #40]
  40b308:	ldr	x1, [x28]
  40b30c:	mov	x21, x12
  40b310:	ldr	x0, [x19]
  40b314:	bl	40bbc0 <wcrtomb@plt+0x9200>
  40b318:	ldr	x8, [x19, #16]
  40b31c:	str	x0, [x19]
  40b320:	ldrb	w9, [x8]
  40b324:	cbz	w9, 40b3a0 <wcrtomb@plt+0x89e0>
  40b328:	ldr	x22, [x28, #8]
  40b32c:	ldrb	w9, [x22]
  40b330:	cbz	w9, 40b3a0 <wcrtomb@plt+0x89e0>
  40b334:	mov	x0, x8
  40b338:	bl	402380 <strlen@plt>
  40b33c:	mov	x23, x0
  40b340:	mov	x0, x22
  40b344:	bl	402380 <strlen@plt>
  40b348:	mov	x20, x24
  40b34c:	add	x24, x0, x23
  40b350:	mov	x22, x0
  40b354:	mov	x0, x24
  40b358:	bl	412738 <wcrtomb@plt+0xfd78>
  40b35c:	ldr	x1, [x19, #16]
  40b360:	mov	x2, x23
  40b364:	mov	x25, x0
  40b368:	bl	402320 <memcpy@plt>
  40b36c:	ldr	x1, [x28, #8]
  40b370:	add	x0, x25, x23
  40b374:	ldr	x23, [sp, #32]
  40b378:	mov	x2, x22
  40b37c:	bl	402320 <memcpy@plt>
  40b380:	ldr	x0, [x19]
  40b384:	mov	x1, x25
  40b388:	mov	x2, x24
  40b38c:	mov	x24, x20
  40b390:	bl	40bc18 <wcrtomb@plt+0x9258>
  40b394:	str	x0, [x19]
  40b398:	mov	x0, x25
  40b39c:	bl	402770 <free@plt>
  40b3a0:	ldr	x8, [x19, #24]
  40b3a4:	ldrb	w8, [x8]
  40b3a8:	cbz	w8, 40b3bc <wcrtomb@plt+0x89fc>
  40b3ac:	ldr	x0, [x19, #8]
  40b3b0:	ldr	x1, [x28, #8]
  40b3b4:	bl	40bd30 <wcrtomb@plt+0x9370>
  40b3b8:	str	x0, [x19, #8]
  40b3bc:	ldr	x8, [x28, #24]
  40b3c0:	ldrb	w8, [x8]
  40b3c4:	cbnz	w8, 40b3d0 <wcrtomb@plt+0x8a10>
  40b3c8:	ldr	x8, [x19, #16]
  40b3cc:	strb	wzr, [x8]
  40b3d0:	ldr	x0, [x19, #16]
  40b3d4:	ldr	x1, [x28, #16]
  40b3d8:	bl	40bd30 <wcrtomb@plt+0x9370>
  40b3dc:	ldr	x8, [x19, #24]
  40b3e0:	str	x0, [x19, #16]
  40b3e4:	ldrb	w9, [x8]
  40b3e8:	cbnz	w9, 40b3f4 <wcrtomb@plt+0x8a34>
  40b3ec:	ldrb	w9, [x19, #32]
  40b3f0:	cbz	w9, 40b920 <wcrtomb@plt+0x8f60>
  40b3f4:	ldr	x1, [x28, #24]
  40b3f8:	ldrb	w9, [x1]
  40b3fc:	cbnz	w9, 40b408 <wcrtomb@plt+0x8a48>
  40b400:	ldrb	w9, [x28, #33]
  40b404:	cbz	w9, 40b920 <wcrtomb@plt+0x8f60>
  40b408:	mov	x0, x8
  40b40c:	bl	40bd30 <wcrtomb@plt+0x9370>
  40b410:	str	x0, [x19, #24]
  40b414:	ldrb	w9, [x28, #33]
  40b418:	b	40b92c <wcrtomb@plt+0x8f6c>
  40b41c:	ldr	x8, [x28, #24]
  40b420:	strb	wzr, [x8]
  40b424:	b	40b244 <wcrtomb@plt+0x8884>
  40b428:	mov	w1, #0x2                   	// #2
  40b42c:	mov	x0, x28
  40b430:	mov	x19, x12
  40b434:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b438:	mov	w9, #0x1                   	// #1
  40b43c:	mov	w8, #0x1                   	// #1
  40b440:	mov	x12, x19
  40b444:	mov	x28, x0
  40b448:	str	w8, [sp, #16]
  40b44c:	strb	w9, [x0, #33]
  40b450:	b	40b244 <wcrtomb@plt+0x8884>
  40b454:	ldr	x19, [x28, #40]
  40b458:	ldr	x1, [x28, #24]
  40b45c:	str	x12, [sp, #24]
  40b460:	ldr	x22, [x19, #24]
  40b464:	mov	x0, x22
  40b468:	bl	402750 <strcmp@plt>
  40b46c:	cbz	w0, 40b4a8 <wcrtomb@plt+0x8ae8>
  40b470:	strb	wzr, [x22]
  40b474:	strh	wzr, [x19, #32]
  40b478:	b	40b4c8 <wcrtomb@plt+0x8b08>
  40b47c:	mov	w1, #0x2                   	// #2
  40b480:	mov	x0, x28
  40b484:	mov	x19, x12
  40b488:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b48c:	mov	w9, #0x1                   	// #1
  40b490:	mov	w8, #0x1                   	// #1
  40b494:	mov	x12, x19
  40b498:	mov	x28, x0
  40b49c:	str	w8, [sp, #20]
  40b4a0:	strb	w9, [x0, #32]
  40b4a4:	b	40b244 <wcrtomb@plt+0x8884>
  40b4a8:	ldrb	w8, [x28, #32]
  40b4ac:	ldrb	w9, [x19, #32]
  40b4b0:	and	w8, w9, w8
  40b4b4:	strb	w8, [x19, #32]
  40b4b8:	ldrb	w8, [x28, #33]
  40b4bc:	ldrb	w9, [x19, #33]
  40b4c0:	and	w8, w9, w8
  40b4c4:	strb	w8, [x19, #33]
  40b4c8:	ldr	x8, [x19, #8]
  40b4cc:	ldrb	w10, [x8]
  40b4d0:	cbz	w10, 40b508 <wcrtomb@plt+0x8b48>
  40b4d4:	ldr	x9, [x28, #8]
  40b4d8:	ldrb	w11, [x9]
  40b4dc:	cmp	w10, w11
  40b4e0:	b.ne	40b508 <wcrtomb@plt+0x8b48>  // b.any
  40b4e4:	add	x10, x8, #0x1
  40b4e8:	add	x9, x9, #0x1
  40b4ec:	mov	x8, x10
  40b4f0:	ldrb	w10, [x10]
  40b4f4:	cbz	w10, 40b508 <wcrtomb@plt+0x8b48>
  40b4f8:	ldrb	w11, [x9], #1
  40b4fc:	cmp	w10, w11
  40b500:	add	x10, x8, #0x1
  40b504:	b.eq	40b4ec <wcrtomb@plt+0x8b2c>  // b.none
  40b508:	strb	wzr, [x8]
  40b50c:	ldr	x22, [x19, #16]
  40b510:	mov	x0, x22
  40b514:	bl	402380 <strlen@plt>
  40b518:	ldr	x24, [x28, #16]
  40b51c:	mov	x23, x0
  40b520:	mov	x0, x24
  40b524:	bl	402380 <strlen@plt>
  40b528:	cmp	x23, x0
  40b52c:	csel	x9, x0, x23, gt
  40b530:	cmp	x9, #0x1
  40b534:	b.lt	40b59c <wcrtomb@plt+0x8bdc>  // b.tstop
  40b538:	add	x10, x24, x0
  40b53c:	mov	x8, xzr
  40b540:	sub	x10, x10, #0x1
  40b544:	sub	x11, x23, #0x1
  40b548:	ldrb	w12, [x22, x11]
  40b54c:	ldrb	w13, [x10]
  40b550:	cmp	w12, w13
  40b554:	b.ne	40b570 <wcrtomb@plt+0x8bb0>  // b.any
  40b558:	add	x8, x8, #0x1
  40b55c:	sub	x10, x10, #0x1
  40b560:	cmp	x8, x9
  40b564:	sub	x11, x11, #0x1
  40b568:	b.lt	40b548 <wcrtomb@plt+0x8b88>  // b.tstop
  40b56c:	mov	x8, x9
  40b570:	cbz	x8, 40b5a0 <wcrtomb@plt+0x8be0>
  40b574:	mov	x9, xzr
  40b578:	sub	x10, x23, x8
  40b57c:	add	x11, x22, x10
  40b580:	ldrb	w11, [x11, x9]
  40b584:	strb	w11, [x22, x9]
  40b588:	ldr	x22, [x19, #16]
  40b58c:	add	x9, x9, #0x1
  40b590:	cmp	x8, x9
  40b594:	b.ne	40b57c <wcrtomb@plt+0x8bbc>  // b.any
  40b598:	b	40b5a0 <wcrtomb@plt+0x8be0>
  40b59c:	mov	x8, xzr
  40b5a0:	strb	wzr, [x22, x8]
  40b5a4:	stp	x28, x19, [sp]
  40b5a8:	ldr	x19, [x19]
  40b5ac:	ldr	x21, [x28]
  40b5b0:	mov	w0, #0x8                   	// #8
  40b5b4:	bl	412888 <wcrtomb@plt+0xfec8>
  40b5b8:	ldr	x23, [x19]
  40b5bc:	mov	x22, x0
  40b5c0:	cbz	x23, 40b6dc <wcrtomb@plt+0x8d1c>
  40b5c4:	mov	x8, xzr
  40b5c8:	mov	x28, x19
  40b5cc:	stur	x19, [x29, #-16]
  40b5d0:	ldr	x24, [x21]
  40b5d4:	cbz	x24, 40b6cc <wcrtomb@plt+0x8d0c>
  40b5d8:	mov	x19, xzr
  40b5dc:	stur	x8, [x29, #-8]
  40b5e0:	mov	w0, #0x8                   	// #8
  40b5e4:	bl	412888 <wcrtomb@plt+0xfec8>
  40b5e8:	ldrb	w8, [x23]
  40b5ec:	mov	x25, x0
  40b5f0:	cbz	w8, 40b680 <wcrtomb@plt+0x8cc0>
  40b5f4:	and	w26, w8, #0xff
  40b5f8:	mov	x0, x24
  40b5fc:	mov	w1, w26
  40b600:	bl	402790 <strchr@plt>
  40b604:	cbz	x0, 40b678 <wcrtomb@plt+0x8cb8>
  40b608:	ldrb	w20, [x23, #1]
  40b60c:	mov	x27, xzr
  40b610:	cbz	w20, 40b644 <wcrtomb@plt+0x8c84>
  40b614:	mov	x8, xzr
  40b618:	add	x9, x0, #0x1
  40b61c:	mov	w10, w20
  40b620:	ldrb	w11, [x9, x8]
  40b624:	cmp	w11, w10, uxtb
  40b628:	b.ne	40b63c <wcrtomb@plt+0x8c7c>  // b.any
  40b62c:	add	x10, x23, x8
  40b630:	ldrb	w10, [x10, #2]
  40b634:	add	x8, x8, #0x1
  40b638:	cbnz	w10, 40b620 <wcrtomb@plt+0x8c60>
  40b63c:	add	x8, x8, #0x1
  40b640:	b	40b648 <wcrtomb@plt+0x8c88>
  40b644:	mov	w8, #0x1                   	// #1
  40b648:	cmp	x8, x27
  40b64c:	add	x0, x0, #0x1
  40b650:	mov	w1, w26
  40b654:	csel	x27, x8, x27, gt
  40b658:	bl	402790 <strchr@plt>
  40b65c:	cbnz	x0, 40b610 <wcrtomb@plt+0x8c50>
  40b660:	cbz	x27, 40b678 <wcrtomb@plt+0x8cb8>
  40b664:	mov	x0, x25
  40b668:	mov	x1, x23
  40b66c:	mov	x2, x27
  40b670:	bl	40bc18 <wcrtomb@plt+0x9258>
  40b674:	mov	x25, x0
  40b678:	ldrb	w8, [x23, #1]!
  40b67c:	cbnz	w8, 40b5f4 <wcrtomb@plt+0x8c34>
  40b680:	mov	x0, x22
  40b684:	mov	x1, x25
  40b688:	bl	40bbc0 <wcrtomb@plt+0x9200>
  40b68c:	ldr	x8, [x25]
  40b690:	mov	x22, x0
  40b694:	cbz	x8, 40b6ac <wcrtomb@plt+0x8cec>
  40b698:	add	x20, x25, #0x8
  40b69c:	mov	x0, x8
  40b6a0:	bl	402770 <free@plt>
  40b6a4:	ldr	x8, [x20], #8
  40b6a8:	cbnz	x8, 40b69c <wcrtomb@plt+0x8cdc>
  40b6ac:	mov	x0, x25
  40b6b0:	bl	402770 <free@plt>
  40b6b4:	add	x19, x19, #0x1
  40b6b8:	ldr	x24, [x21, x19, lsl #3]
  40b6bc:	cbz	x24, 40b6c8 <wcrtomb@plt+0x8d08>
  40b6c0:	ldr	x23, [x28]
  40b6c4:	b	40b5e0 <wcrtomb@plt+0x8c20>
  40b6c8:	ldp	x19, x8, [x29, #-16]
  40b6cc:	add	x8, x8, #0x1
  40b6d0:	add	x28, x19, x8, lsl #3
  40b6d4:	ldr	x23, [x28]
  40b6d8:	cbnz	x23, 40b5d0 <wcrtomb@plt+0x8c10>
  40b6dc:	ldr	x28, [sp, #8]
  40b6e0:	ldr	x8, [x28]
  40b6e4:	ldr	x0, [x8]
  40b6e8:	cbz	x0, 40b714 <wcrtomb@plt+0x8d54>
  40b6ec:	ldr	x20, [sp]
  40b6f0:	ldr	x23, [sp, #32]
  40b6f4:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b6f8:	add	x19, x8, #0x8
  40b6fc:	add	x24, x24, #0x7ad
  40b700:	bl	402770 <free@plt>
  40b704:	ldr	x0, [x19], #8
  40b708:	cbnz	x0, 40b700 <wcrtomb@plt+0x8d40>
  40b70c:	ldr	x8, [x28]
  40b710:	b	40b724 <wcrtomb@plt+0x8d64>
  40b714:	ldr	x20, [sp]
  40b718:	ldr	x23, [sp, #32]
  40b71c:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b720:	add	x24, x24, #0x7ad
  40b724:	mov	x0, x8
  40b728:	bl	402770 <free@plt>
  40b72c:	mov	x0, x20
  40b730:	str	x22, [x28]
  40b734:	bl	40bb60 <wcrtomb@plt+0x91a0>
  40b738:	ldr	x12, [sp, #24]
  40b73c:	b	40b244 <wcrtomb@plt+0x8884>
  40b740:	cmp	w22, #0xfe
  40b744:	b.hi	40b7a4 <wcrtomb@plt+0x8de4>  // b.pmore
  40b748:	str	x12, [sp, #24]
  40b74c:	ubfx	x8, x23, #6, #26
  40b750:	add	x9, x27, x26, lsl #5
  40b754:	ldr	x8, [x9, x8, lsl #3]
  40b758:	lsr	x8, x8, x23
  40b75c:	tbz	w8, #0, 40b78c <wcrtomb@plt+0x8dcc>
  40b760:	ldur	w8, [x29, #-20]
  40b764:	tst	w8, #0xff
  40b768:	b.eq	40b944 <wcrtomb@plt+0x8f84>  // b.none
  40b76c:	mov	w0, w23
  40b770:	bl	4024f0 <toupper@plt>
  40b774:	mov	w24, w0
  40b778:	mov	w0, w22
  40b77c:	bl	4024f0 <toupper@plt>
  40b780:	ldr	x12, [sp, #24]
  40b784:	cmp	w24, w0
  40b788:	b.ne	40b944 <wcrtomb@plt+0x8f84>  // b.any
  40b78c:	sub	x8, x23, #0x1
  40b790:	add	x23, x23, #0x1
  40b794:	cmp	x8, #0xfe
  40b798:	b.cc	40b74c <wcrtomb@plt+0x8d8c>  // b.lo, b.ul, b.last
  40b79c:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b7a0:	add	x24, x24, #0x7ad
  40b7a4:	ldr	x8, [x25, x21, lsl #3]
  40b7a8:	add	x21, x12, #0x2
  40b7ac:	cmp	x8, #0x105
  40b7b0:	b.ne	40b818 <wcrtomb@plt+0x8e58>  // b.any
  40b7b4:	sub	x8, x19, #0x1
  40b7b8:	cmp	x21, x8
  40b7bc:	b.ge	40b818 <wcrtomb@plt+0x8e58>  // b.tcont
  40b7c0:	mov	x9, xzr
  40b7c4:	add	x10, x12, #0x2
  40b7c8:	mov	x19, x21
  40b7cc:	cmn	x9, #0x2
  40b7d0:	b.eq	40b7e8 <wcrtomb@plt+0x8e28>  // b.none
  40b7d4:	add	x11, x20, x9, lsl #3
  40b7d8:	ldr	x11, [x11, #16]
  40b7dc:	sub	x11, x11, #0x1
  40b7e0:	cmp	x11, #0xfe
  40b7e4:	b.hi	40b81c <wcrtomb@plt+0x8e5c>  // b.pmore
  40b7e8:	add	x11, x20, x9, lsl #3
  40b7ec:	ldr	x11, [x11, #24]
  40b7f0:	cmp	x11, #0x105
  40b7f4:	b.ne	40b80c <wcrtomb@plt+0x8e4c>  // b.any
  40b7f8:	add	x9, x9, #0x2
  40b7fc:	add	x11, x10, x9
  40b800:	cmp	x11, x8
  40b804:	add	x19, x19, #0x2
  40b808:	b.lt	40b7cc <wcrtomb@plt+0x8e0c>  // b.tstop
  40b80c:	add	x8, x12, x9
  40b810:	add	x19, x8, #0x2
  40b814:	b	40b81c <wcrtomb@plt+0x8e5c>
  40b818:	mov	x19, x21
  40b81c:	ldur	w8, [x29, #-20]
  40b820:	sub	x20, x19, x12
  40b824:	mov	x0, x28
  40b828:	mov	x25, x12
  40b82c:	and	w23, w8, #0xff
  40b830:	asr	x8, x20, #1
  40b834:	add	x1, x8, #0x1
  40b838:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b83c:	mov	x28, x0
  40b840:	cbz	w23, 40b850 <wcrtomb@plt+0x8e90>
  40b844:	mov	w0, w22
  40b848:	bl	4024f0 <toupper@plt>
  40b84c:	sxtw	x22, w0
  40b850:	ldr	x8, [x28, #16]
  40b854:	ldr	x23, [sp, #32]
  40b858:	cmp	x21, x19
  40b85c:	strb	w22, [x8]
  40b860:	ldr	x8, [x28, #8]
  40b864:	strb	w22, [x8]
  40b868:	ldr	x8, [x28, #24]
  40b86c:	strb	w22, [x8]
  40b870:	b.ge	40b8e8 <wcrtomb@plt+0x8f28>  // b.tcont
  40b874:	ldur	w21, [x29, #-20]
  40b878:	sub	x8, x20, #0x3
  40b87c:	lsr	x9, x8, #1
  40b880:	mov	x10, x25
  40b884:	neg	x19, x8, lsr #1
  40b888:	add	x22, x9, #0x2
  40b88c:	mov	w20, #0x1                   	// #1
  40b890:	ldr	x8, [x23, #144]
  40b894:	tst	w21, #0xff
  40b898:	add	x8, x8, x10, lsl #3
  40b89c:	ldr	x0, [x8, #16]
  40b8a0:	b.eq	40b8b4 <wcrtomb@plt+0x8ef4>  // b.none
  40b8a4:	mov	x25, x10
  40b8a8:	bl	4024f0 <toupper@plt>
  40b8ac:	mov	x10, x25
  40b8b0:	sxtw	x0, w0
  40b8b4:	ldr	x8, [x28, #16]
  40b8b8:	add	x10, x10, #0x2
  40b8bc:	strb	w0, [x8, x20]
  40b8c0:	ldr	x8, [x28, #8]
  40b8c4:	strb	w0, [x8, x20]
  40b8c8:	ldr	x8, [x28, #24]
  40b8cc:	strb	w0, [x8, x20]
  40b8d0:	add	x20, x20, #0x1
  40b8d4:	add	x8, x19, x20
  40b8d8:	cmp	x8, #0x2
  40b8dc:	b.ne	40b890 <wcrtomb@plt+0x8ed0>  // b.any
  40b8e0:	mov	x25, x10
  40b8e4:	b	40b8ec <wcrtomb@plt+0x8f2c>
  40b8e8:	mov	w22, #0x1                   	// #1
  40b8ec:	ldr	x8, [x28, #16]
  40b8f0:	mov	x2, x22
  40b8f4:	strb	wzr, [x8, x22]
  40b8f8:	ldr	x8, [x28, #8]
  40b8fc:	strb	wzr, [x8, x22]
  40b900:	ldr	x8, [x28, #24]
  40b904:	strb	wzr, [x8, x22]
  40b908:	ldr	x0, [x28]
  40b90c:	ldr	x1, [x28, #24]
  40b910:	bl	40bc18 <wcrtomb@plt+0x9258>
  40b914:	mov	x12, x25
  40b918:	str	x0, [x28]
  40b91c:	b	40b244 <wcrtomb@plt+0x8884>
  40b920:	mov	w9, wzr
  40b924:	strb	wzr, [x8]
  40b928:	strb	wzr, [x19, #32]
  40b92c:	mov	x0, x28
  40b930:	strb	w9, [x19, #33]
  40b934:	bl	40bb60 <wcrtomb@plt+0x91a0>
  40b938:	mov	x28, x19
  40b93c:	mov	x12, x21
  40b940:	b	40b244 <wcrtomb@plt+0x8884>
  40b944:	mov	w1, #0x2                   	// #2
  40b948:	mov	x0, x28
  40b94c:	mov	x19, x12
  40b950:	bl	40baf0 <wcrtomb@plt+0x9130>
  40b954:	ldr	x23, [sp, #32]
  40b958:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b95c:	mov	x12, x19
  40b960:	mov	x28, x0
  40b964:	add	x24, x24, #0x7ad
  40b968:	b	40b244 <wcrtomb@plt+0x8884>
  40b96c:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b970:	mov	x28, xzr
  40b974:	mov	w20, wzr
  40b978:	mov	w22, wzr
  40b97c:	mov	w19, wzr
  40b980:	add	x24, x24, #0x7ad
  40b984:	b	40b9fc <wcrtomb@plt+0x903c>
  40b988:	ldr	x8, [x28, #40]
  40b98c:	cbnz	x8, 40bad0 <wcrtomb@plt+0x9110>
  40b990:	ldr	x8, [x28]
  40b994:	ldr	x21, [x8]
  40b998:	cbz	x21, 40b9d8 <wcrtomb@plt+0x9018>
  40b99c:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b9a0:	add	x19, x8, #0x8
  40b9a4:	add	x24, x24, #0x7ad
  40b9a8:	mov	x0, x21
  40b9ac:	bl	402380 <strlen@plt>
  40b9b0:	mov	x22, x0
  40b9b4:	mov	x0, x24
  40b9b8:	bl	402380 <strlen@plt>
  40b9bc:	cmp	x22, x0
  40b9c0:	csel	x24, x21, x24, hi  // hi = pmore
  40b9c4:	ldr	x21, [x19], #8
  40b9c8:	cbnz	x21, 40b9a8 <wcrtomb@plt+0x8fe8>
  40b9cc:	b	40b9e0 <wcrtomb@plt+0x9020>
  40b9d0:	mov	w20, wzr
  40b9d4:	b	40b9f8 <wcrtomb@plt+0x9038>
  40b9d8:	adrp	x24, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40b9dc:	add	x24, x24, #0x7ad
  40b9e0:	ldr	x1, [x28, #24]
  40b9e4:	mov	x0, x24
  40b9e8:	bl	402750 <strcmp@plt>
  40b9ec:	cbz	w0, 40ba78 <wcrtomb@plt+0x90b8>
  40b9f0:	mov	w20, wzr
  40b9f4:	mov	w22, wzr
  40b9f8:	mov	w19, wzr
  40b9fc:	ldrb	w8, [x24]
  40ba00:	cbz	w8, 40ba6c <wcrtomb@plt+0x90ac>
  40ba04:	mov	x0, x24
  40ba08:	bl	402380 <strlen@plt>
  40ba0c:	add	x0, x0, #0x4
  40ba10:	bl	412738 <wcrtomb@plt+0xfd78>
  40ba14:	mov	x21, x0
  40ba18:	strb	w19, [x0]
  40ba1c:	strb	w22, [x0, #1]
  40ba20:	strb	w20, [x0, #2]
  40ba24:	add	x0, x0, #0x3
  40ba28:	mov	x1, x24
  40ba2c:	bl	4027e0 <strcpy@plt>
  40ba30:	cbz	x28, 40ba48 <wcrtomb@plt+0x9088>
  40ba34:	ldr	x19, [x28, #40]
  40ba38:	mov	x0, x28
  40ba3c:	bl	40bb60 <wcrtomb@plt+0x91a0>
  40ba40:	mov	x28, x19
  40ba44:	cbnz	x19, 40ba34 <wcrtomb@plt+0x9074>
  40ba48:	mov	x0, x21
  40ba4c:	ldp	x20, x19, [sp, #144]
  40ba50:	ldp	x22, x21, [sp, #128]
  40ba54:	ldp	x24, x23, [sp, #112]
  40ba58:	ldp	x26, x25, [sp, #96]
  40ba5c:	ldp	x28, x27, [sp, #80]
  40ba60:	ldp	x29, x30, [sp, #64]
  40ba64:	add	sp, sp, #0xa0
  40ba68:	ret
  40ba6c:	mov	x21, xzr
  40ba70:	cbnz	x28, 40ba34 <wcrtomb@plt+0x9074>
  40ba74:	b	40ba48 <wcrtomb@plt+0x9088>
  40ba78:	ldr	w8, [sp, #20]
  40ba7c:	tbz	w8, #0, 40ba88 <wcrtomb@plt+0x90c8>
  40ba80:	ldrb	w8, [x28, #32]
  40ba84:	cbz	w8, 40baa0 <wcrtomb@plt+0x90e0>
  40ba88:	ldr	w8, [sp, #16]
  40ba8c:	tbz	w8, #0, 40ba98 <wcrtomb@plt+0x90d8>
  40ba90:	ldrb	w8, [x28, #33]
  40ba94:	cbz	w8, 40baa0 <wcrtomb@plt+0x90e0>
  40ba98:	mov	w19, #0x1                   	// #1
  40ba9c:	b	40baa4 <wcrtomb@plt+0x90e4>
  40baa0:	mov	w19, wzr
  40baa4:	ldrb	w22, [x28, #32]
  40baa8:	ldrb	w20, [x28, #33]
  40baac:	b	40b9fc <wcrtomb@plt+0x903c>
  40bab0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40bab4:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40bab8:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40babc:	add	x0, x0, #0x151
  40bac0:	add	x1, x1, #0x17e
  40bac4:	add	x3, x3, #0x184
  40bac8:	mov	w2, #0xff6                 	// #4086
  40bacc:	bl	402920 <__assert_fail@plt>
  40bad0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40bad4:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40bad8:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40badc:	add	x0, x0, #0x1b0
  40bae0:	add	x1, x1, #0x17e
  40bae4:	add	x3, x3, #0x184
  40bae8:	mov	w2, #0x1039                	// #4153
  40baec:	bl	402920 <__assert_fail@plt>
  40baf0:	stp	x29, x30, [sp, #-48]!
  40baf4:	stp	x20, x19, [sp, #32]
  40baf8:	mov	x20, x0
  40bafc:	mov	w0, #0x30                  	// #48
  40bb00:	str	x21, [sp, #16]
  40bb04:	mov	x29, sp
  40bb08:	mov	x19, x1
  40bb0c:	bl	412738 <wcrtomb@plt+0xfd78>
  40bb10:	mov	x21, x0
  40bb14:	mov	w0, #0x8                   	// #8
  40bb18:	bl	412888 <wcrtomb@plt+0xfec8>
  40bb1c:	str	x0, [x21]
  40bb20:	mov	x0, x19
  40bb24:	bl	412888 <wcrtomb@plt+0xfec8>
  40bb28:	str	x0, [x21, #8]
  40bb2c:	mov	x0, x19
  40bb30:	bl	412888 <wcrtomb@plt+0xfec8>
  40bb34:	str	x0, [x21, #16]
  40bb38:	mov	x0, x19
  40bb3c:	bl	412888 <wcrtomb@plt+0xfec8>
  40bb40:	str	x0, [x21, #24]
  40bb44:	strh	wzr, [x21, #32]
  40bb48:	str	x20, [x21, #40]
  40bb4c:	mov	x0, x21
  40bb50:	ldp	x20, x19, [sp, #32]
  40bb54:	ldr	x21, [sp, #16]
  40bb58:	ldp	x29, x30, [sp], #48
  40bb5c:	ret
  40bb60:	stp	x29, x30, [sp, #-32]!
  40bb64:	stp	x20, x19, [sp, #16]
  40bb68:	ldr	x8, [x0]
  40bb6c:	mov	x19, x0
  40bb70:	mov	x29, sp
  40bb74:	ldr	x0, [x8]
  40bb78:	cbz	x0, 40bb90 <wcrtomb@plt+0x91d0>
  40bb7c:	add	x20, x8, #0x8
  40bb80:	bl	402770 <free@plt>
  40bb84:	ldr	x0, [x20], #8
  40bb88:	cbnz	x0, 40bb80 <wcrtomb@plt+0x91c0>
  40bb8c:	ldr	x8, [x19]
  40bb90:	mov	x0, x8
  40bb94:	bl	402770 <free@plt>
  40bb98:	ldr	x0, [x19, #8]
  40bb9c:	bl	402770 <free@plt>
  40bba0:	ldr	x0, [x19, #16]
  40bba4:	bl	402770 <free@plt>
  40bba8:	ldr	x0, [x19, #24]
  40bbac:	bl	402770 <free@plt>
  40bbb0:	mov	x0, x19
  40bbb4:	ldp	x20, x19, [sp, #16]
  40bbb8:	ldp	x29, x30, [sp], #32
  40bbbc:	b	402770 <free@plt>
  40bbc0:	stp	x29, x30, [sp, #-48]!
  40bbc4:	stp	x20, x19, [sp, #32]
  40bbc8:	ldr	x20, [x1]
  40bbcc:	mov	x19, x0
  40bbd0:	str	x21, [sp, #16]
  40bbd4:	mov	x29, sp
  40bbd8:	cbz	x20, 40bc04 <wcrtomb@plt+0x9244>
  40bbdc:	add	x21, x1, #0x8
  40bbe0:	mov	x0, x20
  40bbe4:	bl	402380 <strlen@plt>
  40bbe8:	mov	x2, x0
  40bbec:	mov	x0, x19
  40bbf0:	mov	x1, x20
  40bbf4:	bl	40bc18 <wcrtomb@plt+0x9258>
  40bbf8:	ldr	x20, [x21], #8
  40bbfc:	mov	x19, x0
  40bc00:	cbnz	x20, 40bbe0 <wcrtomb@plt+0x9220>
  40bc04:	mov	x0, x19
  40bc08:	ldp	x20, x19, [sp, #32]
  40bc0c:	ldr	x21, [sp, #16]
  40bc10:	ldp	x29, x30, [sp], #48
  40bc14:	ret
  40bc18:	stp	x29, x30, [sp, #-64]!
  40bc1c:	stp	x20, x19, [sp, #48]
  40bc20:	mov	x19, x0
  40bc24:	add	x0, x2, #0x1
  40bc28:	stp	x24, x23, [sp, #16]
  40bc2c:	stp	x22, x21, [sp, #32]
  40bc30:	mov	x29, sp
  40bc34:	mov	x21, x2
  40bc38:	mov	x22, x1
  40bc3c:	bl	412738 <wcrtomb@plt+0xfd78>
  40bc40:	mov	x1, x22
  40bc44:	mov	x2, x21
  40bc48:	mov	x20, x0
  40bc4c:	bl	402320 <memcpy@plt>
  40bc50:	strb	wzr, [x20, x21]
  40bc54:	ldr	x21, [x19]
  40bc58:	cbz	x21, 40bcd8 <wcrtomb@plt+0x9318>
  40bc5c:	mov	x23, xzr
  40bc60:	mov	x0, x21
  40bc64:	mov	x1, x20
  40bc68:	bl	402880 <strstr@plt>
  40bc6c:	cbnz	x0, 40bce4 <wcrtomb@plt+0x9324>
  40bc70:	add	x8, x19, x23, lsl #3
  40bc74:	ldr	x0, [x8, #8]
  40bc78:	add	x22, x23, #0x1
  40bc7c:	mov	x23, x22
  40bc80:	cbnz	x0, 40bc64 <wcrtomb@plt+0x92a4>
  40bc84:	cbz	x21, 40bcf8 <wcrtomb@plt+0x9338>
  40bc88:	mov	x23, xzr
  40bc8c:	mov	x24, x19
  40bc90:	mov	x0, x20
  40bc94:	mov	x1, x21
  40bc98:	bl	402880 <strstr@plt>
  40bc9c:	cbz	x0, 40bcc4 <wcrtomb@plt+0x9304>
  40bca0:	mov	x0, x21
  40bca4:	bl	402770 <free@plt>
  40bca8:	sub	x22, x22, #0x1
  40bcac:	cmp	x22, x23
  40bcb0:	b.eq	40bcf4 <wcrtomb@plt+0x9334>  // b.none
  40bcb4:	ldr	x8, [x19, x22, lsl #3]
  40bcb8:	str	x8, [x24]
  40bcbc:	str	xzr, [x19, x22, lsl #3]
  40bcc0:	b	40bcc8 <wcrtomb@plt+0x9308>
  40bcc4:	add	x23, x23, #0x1
  40bcc8:	add	x24, x19, x23, lsl #3
  40bccc:	ldr	x21, [x24]
  40bcd0:	cbnz	x21, 40bc90 <wcrtomb@plt+0x92d0>
  40bcd4:	b	40bcf8 <wcrtomb@plt+0x9338>
  40bcd8:	mov	x22, xzr
  40bcdc:	mov	w8, #0x2                   	// #2
  40bce0:	b	40bd04 <wcrtomb@plt+0x9344>
  40bce4:	mov	x0, x20
  40bce8:	bl	402770 <free@plt>
  40bcec:	mov	x0, x19
  40bcf0:	b	40bd18 <wcrtomb@plt+0x9358>
  40bcf4:	mov	x22, x23
  40bcf8:	add	x8, x22, #0x2
  40bcfc:	lsr	x9, x8, #60
  40bd00:	cbnz	x9, 40bd2c <wcrtomb@plt+0x936c>
  40bd04:	lsl	x1, x8, #3
  40bd08:	mov	x0, x19
  40bd0c:	bl	412788 <wcrtomb@plt+0xfdc8>
  40bd10:	add	x8, x0, x22, lsl #3
  40bd14:	stp	x20, xzr, [x8]
  40bd18:	ldp	x20, x19, [sp, #48]
  40bd1c:	ldp	x22, x21, [sp, #32]
  40bd20:	ldp	x24, x23, [sp, #16]
  40bd24:	ldp	x29, x30, [sp], #64
  40bd28:	ret
  40bd2c:	bl	412920 <wcrtomb@plt+0xff60>
  40bd30:	stp	x29, x30, [sp, #-48]!
  40bd34:	stp	x20, x19, [sp, #32]
  40bd38:	mov	x19, x0
  40bd3c:	mov	x0, x1
  40bd40:	stp	x22, x21, [sp, #16]
  40bd44:	mov	x29, sp
  40bd48:	mov	x20, x1
  40bd4c:	bl	402380 <strlen@plt>
  40bd50:	cbz	x0, 40bd88 <wcrtomb@plt+0x93c8>
  40bd54:	mov	x21, x0
  40bd58:	mov	x0, x19
  40bd5c:	bl	402380 <strlen@plt>
  40bd60:	add	x21, x21, #0x1
  40bd64:	mov	x22, x0
  40bd68:	add	x1, x21, x0
  40bd6c:	mov	x0, x19
  40bd70:	bl	412788 <wcrtomb@plt+0xfdc8>
  40bd74:	mov	x19, x0
  40bd78:	add	x0, x0, x22
  40bd7c:	mov	x1, x20
  40bd80:	mov	x2, x21
  40bd84:	bl	402320 <memcpy@plt>
  40bd88:	mov	x0, x19
  40bd8c:	ldp	x20, x19, [sp, #32]
  40bd90:	ldp	x22, x21, [sp, #16]
  40bd94:	ldp	x29, x30, [sp], #48
  40bd98:	ret
  40bd9c:	b	402770 <free@plt>
  40bda0:	mov	w0, #0x920                 	// #2336
  40bda4:	b	412738 <wcrtomb@plt+0xfd78>
  40bda8:	stp	x29, x30, [sp, #-96]!
  40bdac:	stp	x22, x21, [sp, #64]
  40bdb0:	mov	x21, x2
  40bdb4:	mov	x22, x1
  40bdb8:	mov	w2, #0x410                 	// #1040
  40bdbc:	mov	w1, wzr
  40bdc0:	stp	x28, x27, [sp, #16]
  40bdc4:	stp	x26, x25, [sp, #32]
  40bdc8:	stp	x24, x23, [sp, #48]
  40bdcc:	stp	x20, x19, [sp, #80]
  40bdd0:	mov	x29, sp
  40bdd4:	mov	w20, w3
  40bdd8:	mov	x19, x0
  40bddc:	bl	4025b0 <memset@plt>
  40bde0:	ldrb	w8, [x22]
  40bde4:	adrp	x9, 40b000 <wcrtomb@plt+0x8640>
  40bde8:	adrp	x10, 40b000 <wcrtomb@plt+0x8640>
  40bdec:	add	x9, x9, #0xf58
  40bdf0:	add	x10, x10, #0xf64
  40bdf4:	cmp	w8, #0x0
  40bdf8:	csel	x8, x10, x9, eq  // eq = none
  40bdfc:	add	x0, x19, #0x418
  40be00:	mov	w2, #0x504                 	// #1284
  40be04:	mov	x1, x22
  40be08:	str	x8, [x19, #1040]
  40be0c:	bl	402320 <memcpy@plt>
  40be10:	ldrb	w8, [x19, #1048]
  40be14:	tst	w20, #0x2
  40be18:	mov	w12, #0xa                   	// #10
  40be1c:	mov	x9, #0xffffffffffffffff    	// #-1
  40be20:	eor	w8, w8, #0x1
  40be24:	add	x10, x19, #0x1c0
  40be28:	mov	w23, #0x1                   	// #1
  40be2c:	ubfx	w11, w21, #22, #1
  40be30:	and	w24, w20, #0x1
  40be34:	strb	w8, [x19, #192]
  40be38:	csel	w8, w12, wzr, eq  // eq = none
  40be3c:	csel	x26, x12, xzr, eq  // eq = none
  40be40:	str	x9, [x19, #24]
  40be44:	strb	w23, [x19, #456]
  40be48:	strb	w11, [x10, #9]
  40be4c:	strb	w8, [x10, #11]
  40be50:	add	x8, x10, x26
  40be54:	strb	w24, [x10, #10]
  40be58:	str	x21, [x19, #448]
  40be5c:	mov	x21, #0x2401                	// #9217
  40be60:	mov	x22, xzr
  40be64:	add	x20, x19, #0x51c
  40be68:	mov	w25, #0x4                   	// #4
  40be6c:	lsl	x27, x23, x26
  40be70:	add	x28, x8, #0xc
  40be74:	movk	x21, #0xc000, lsl #32
  40be78:	cbnz	w24, 40be98 <wcrtomb@plt+0x94d8>
  40be7c:	cmp	x26, x22
  40be80:	b.ne	40be98 <wcrtomb@plt+0x94d8>  // b.any
  40be84:	strb	w25, [x28]
  40be88:	ldr	x8, [x19, #1008]
  40be8c:	orr	x8, x8, x27
  40be90:	str	x8, [x19, #1008]
  40be94:	b	40bef8 <wcrtomb@plt+0x9538>
  40be98:	ldr	w8, [x20, x22, lsl #2]
  40be9c:	cmn	w8, #0x1
  40bea0:	b.eq	40bef0 <wcrtomb@plt+0x9530>  // b.none
  40bea4:	bl	402760 <__ctype_b_loc@plt>
  40bea8:	ldr	x8, [x0]
  40beac:	cmp	x22, #0x5f
  40beb0:	cset	w9, eq  // eq = none
  40beb4:	add	x10, x19, x22
  40beb8:	ldrh	w8, [x8, x22, lsl #1]
  40bebc:	and	w8, w8, #0x8
  40bec0:	orr	w8, w9, w8, lsr #3
  40bec4:	cmp	w8, #0x0
  40bec8:	cinc	w9, w23, ne  // ne = any
  40becc:	strb	w9, [x10, #460]
  40bed0:	cbz	w8, 40bef8 <wcrtomb@plt+0x9538>
  40bed4:	ubfx	x8, x22, #6, #26
  40bed8:	add	x8, x19, x8, lsl #3
  40bedc:	ldr	x9, [x8, #976]
  40bee0:	lsl	x10, x23, x22
  40bee4:	orr	x9, x9, x10
  40bee8:	str	x9, [x8, #976]
  40beec:	b	40bef8 <wcrtomb@plt+0x9538>
  40bef0:	add	x8, x19, x22
  40bef4:	strb	w23, [x8, #460]
  40bef8:	ldrb	w8, [x19, #1050]
  40befc:	cbz	w8, 40bf10 <wcrtomb@plt+0x9550>
  40bf00:	and	x8, x22, #0xc0
  40bf04:	cmp	x8, #0x80
  40bf08:	cset	w8, ne  // ne = any
  40bf0c:	b	40bf28 <wcrtomb@plt+0x9568>
  40bf10:	cmp	x22, #0x40
  40bf14:	lsl	x8, x23, x22
  40bf18:	cset	w9, cc  // cc = lo, ul, last
  40bf1c:	tst	x8, x21
  40bf20:	cset	w8, ne  // ne = any
  40bf24:	and	w8, w9, w8
  40bf28:	add	x9, x19, x22
  40bf2c:	add	x22, x22, #0x1
  40bf30:	cmp	x22, #0x100
  40bf34:	strb	w8, [x9, #716]
  40bf38:	b.ne	40be78 <wcrtomb@plt+0x94b8>  // b.any
  40bf3c:	ldp	x20, x19, [sp, #80]
  40bf40:	ldp	x22, x21, [sp, #64]
  40bf44:	ldp	x24, x23, [sp, #48]
  40bf48:	ldp	x26, x25, [sp, #32]
  40bf4c:	ldp	x28, x27, [sp, #16]
  40bf50:	ldp	x29, x30, [sp], #96
  40bf54:	ret
  40bf58:	and	w3, w3, #0x1
  40bf5c:	mov	w5, #0x1                   	// #1
  40bf60:	b	40d800 <wcrtomb@plt+0xae40>
  40bf64:	and	w3, w3, #0x1
  40bf68:	mov	w5, wzr
  40bf6c:	b	40d800 <wcrtomb@plt+0xae40>
  40bf70:	stp	x29, x30, [sp, #-32]!
  40bf74:	stp	x20, x19, [sp, #16]
  40bf78:	mov	x19, x1
  40bf7c:	mov	w2, #0x1c0                 	// #448
  40bf80:	mov	w1, wzr
  40bf84:	mov	x29, sp
  40bf88:	mov	x20, x0
  40bf8c:	bl	4025b0 <memset@plt>
  40bf90:	mov	x8, #0xffffffffffffffff    	// #-1
  40bf94:	str	x8, [x20, #24]
  40bf98:	ldrb	w8, [x19, #192]
  40bf9c:	add	x0, x20, #0x1c0
  40bfa0:	add	x1, x19, #0x1c0
  40bfa4:	mov	w2, #0x250                 	// #592
  40bfa8:	strb	w8, [x20, #192]
  40bfac:	bl	402320 <memcpy@plt>
  40bfb0:	ldr	x8, [x19, #1040]
  40bfb4:	add	x0, x20, #0x418
  40bfb8:	add	x1, x19, #0x418
  40bfbc:	mov	w2, #0x504                 	// #1284
  40bfc0:	str	x8, [x20, #1040]
  40bfc4:	ldp	x20, x19, [sp, #16]
  40bfc8:	ldp	x29, x30, [sp], #32
  40bfcc:	b	402320 <memcpy@plt>
  40bfd0:	sub	sp, sp, #0x50
  40bfd4:	stp	x20, x19, [sp, #64]
  40bfd8:	mov	x19, x0
  40bfdc:	add	x0, sp, #0x10
  40bfe0:	add	x2, sp, #0x8
  40bfe4:	stp	x29, x30, [sp, #32]
  40bfe8:	stp	x22, x21, [sp, #48]
  40bfec:	add	x29, sp, #0x20
  40bff0:	str	xzr, [sp, #8]
  40bff4:	bl	4029c0 <wcrtomb@plt>
  40bff8:	cmn	x0, #0x1
  40bffc:	b.eq	40c074 <wcrtomb@plt+0x96b4>  // b.none
  40c000:	ldrb	w1, [sp, #16]
  40c004:	mov	x20, x0
  40c008:	cmp	w20, #0x1
  40c00c:	b.eq	40c07c <wcrtomb@plt+0x96bc>  // b.none
  40c010:	mov	w2, #0x1                   	// #1
  40c014:	mov	x0, x19
  40c018:	bl	40c09c <wcrtomb@plt+0x96dc>
  40c01c:	cmp	w20, #0x2
  40c020:	b.lt	40c088 <wcrtomb@plt+0x96c8>  // b.tstop
  40c024:	sub	w8, w20, #0x1
  40c028:	and	x9, x20, #0xffffffff
  40c02c:	add	x10, sp, #0x10
  40c030:	sub	x20, x8, #0x1
  40c034:	orr	x21, x10, #0x1
  40c038:	sub	x22, x9, #0x1
  40c03c:	ldrb	w1, [x21], #1
  40c040:	cmp	x20, #0x0
  40c044:	cset	w8, eq  // eq = none
  40c048:	lsl	w2, w8, #1
  40c04c:	mov	x0, x19
  40c050:	bl	40c09c <wcrtomb@plt+0x96dc>
  40c054:	mov	w1, #0x105                 	// #261
  40c058:	mov	w2, #0x3                   	// #3
  40c05c:	mov	x0, x19
  40c060:	bl	40c09c <wcrtomb@plt+0x96dc>
  40c064:	subs	x22, x22, #0x1
  40c068:	sub	x20, x20, #0x1
  40c06c:	b.ne	40c03c <wcrtomb@plt+0x967c>  // b.any
  40c070:	b	40c088 <wcrtomb@plt+0x96c8>
  40c074:	mov	x1, xzr
  40c078:	strb	wzr, [sp, #16]
  40c07c:	mov	w2, #0x3                   	// #3
  40c080:	mov	x0, x19
  40c084:	bl	40c09c <wcrtomb@plt+0x96dc>
  40c088:	ldp	x20, x19, [sp, #64]
  40c08c:	ldp	x22, x21, [sp, #48]
  40c090:	ldp	x29, x30, [sp, #32]
  40c094:	add	sp, sp, #0x50
  40c098:	ret
  40c09c:	stp	x29, x30, [sp, #-48]!
  40c0a0:	str	x21, [sp, #16]
  40c0a4:	stp	x20, x19, [sp, #32]
  40c0a8:	mov	x8, x0
  40c0ac:	ldr	x9, [x8, #160]!
  40c0b0:	mov	w21, w2
  40c0b4:	mov	x19, x0
  40c0b8:	mov	x20, x1
  40c0bc:	ldur	x10, [x8, #-8]
  40c0c0:	mov	x29, sp
  40c0c4:	cmp	x9, x10
  40c0c8:	b.ne	40c104 <wcrtomb@plt+0x9744>  // b.any
  40c0cc:	ldr	x0, [x19, #144]
  40c0d0:	mov	w2, #0x1                   	// #1
  40c0d4:	mov	x3, #0xffffffffffffffff    	// #-1
  40c0d8:	mov	w4, #0x8                   	// #8
  40c0dc:	mov	x1, x8
  40c0e0:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40c0e4:	ldrb	w8, [x19, #1048]
  40c0e8:	str	x0, [x19, #144]
  40c0ec:	cbz	w8, 40c104 <wcrtomb@plt+0x9744>
  40c0f0:	ldr	x1, [x19, #160]
  40c0f4:	tbnz	x1, #63, 40c1a8 <wcrtomb@plt+0x97e8>
  40c0f8:	ldr	x0, [x19, #280]
  40c0fc:	bl	412788 <wcrtomb@plt+0xfdc8>
  40c100:	str	x0, [x19, #280]
  40c104:	ldrb	w8, [x19, #1048]
  40c108:	cbz	w8, 40c118 <wcrtomb@plt+0x9758>
  40c10c:	ldr	x8, [x19, #280]
  40c110:	ldr	x9, [x19, #152]
  40c114:	strb	w21, [x8, x9]
  40c118:	ldp	x9, x8, [x19, #144]
  40c11c:	cmp	x20, #0x104
  40c120:	add	x10, x8, #0x1
  40c124:	str	x10, [x19, #152]
  40c128:	str	x20, [x9, x8, lsl #3]
  40c12c:	b.gt	40c148 <wcrtomb@plt+0x9788>
  40c130:	sub	x8, x20, #0x101
  40c134:	cmp	x8, #0x3
  40c138:	b.cc	40c184 <wcrtomb@plt+0x97c4>  // b.lo, b.ul, b.last
  40c13c:	cmp	x20, #0x100
  40c140:	b.eq	40c178 <wcrtomb@plt+0x97b8>  // b.none
  40c144:	b	40c16c <wcrtomb@plt+0x97ac>
  40c148:	sub	x8, x20, #0x105
  40c14c:	cmp	x8, #0x2
  40c150:	b.cs	40c160 <wcrtomb@plt+0x97a0>  // b.hs, b.nlast
  40c154:	ldr	x8, [x19, #136]
  40c158:	sub	x8, x8, #0x1
  40c15c:	b	40c180 <wcrtomb@plt+0x97c0>
  40c160:	cmp	x20, #0x112
  40c164:	b.ne	40c16c <wcrtomb@plt+0x97ac>  // b.any
  40c168:	strb	wzr, [x19, #192]
  40c16c:	ldr	x8, [x19, #176]
  40c170:	add	x8, x8, #0x1
  40c174:	str	x8, [x19, #176]
  40c178:	ldr	x8, [x19, #136]
  40c17c:	add	x8, x8, #0x1
  40c180:	str	x8, [x19, #136]
  40c184:	ldr	x8, [x19, #136]
  40c188:	ldr	x9, [x19, #168]
  40c18c:	cmp	x8, x9
  40c190:	b.le	40c198 <wcrtomb@plt+0x97d8>
  40c194:	str	x8, [x19, #168]
  40c198:	ldp	x20, x19, [sp, #32]
  40c19c:	ldr	x21, [sp, #16]
  40c1a0:	ldp	x29, x30, [sp], #48
  40c1a4:	ret
  40c1a8:	bl	412920 <wcrtomb@plt+0xff60>
  40c1ac:	stp	x29, x30, [sp, #-32]!
  40c1b0:	stp	x20, x19, [sp, #16]
  40c1b4:	ldr	x8, [x1]
  40c1b8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c1bc:	mov	x19, x1
  40c1c0:	mov	x29, sp
  40c1c4:	adds	x10, x8, x8, asr #1
  40c1c8:	csel	x9, x9, x10, vs
  40c1cc:	cmp	x9, x3
  40c1d0:	mov	x10, #0xffffffffffffffff    	// #-1
  40c1d4:	ccmp	x3, x10, #0x4, gt
  40c1d8:	csel	x20, x3, x9, gt
  40c1dc:	tbnz	x4, #63, 40c1fc <wcrtomb@plt+0x983c>
  40c1e0:	cbz	x4, 40c24c <wcrtomb@plt+0x988c>
  40c1e4:	tbnz	x20, #63, 40c21c <wcrtomb@plt+0x985c>
  40c1e8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c1ec:	udiv	x10, x9, x4
  40c1f0:	cmp	x10, x20
  40c1f4:	b.ge	40c24c <wcrtomb@plt+0x988c>  // b.tcont
  40c1f8:	b	40c25c <wcrtomb@plt+0x989c>
  40c1fc:	tbnz	x20, #63, 40c23c <wcrtomb@plt+0x987c>
  40c200:	cmn	x4, #0x1
  40c204:	b.eq	40c24c <wcrtomb@plt+0x988c>  // b.none
  40c208:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c20c:	sdiv	x9, x9, x4
  40c210:	cmp	x9, x20
  40c214:	b.lt	40c234 <wcrtomb@plt+0x9874>  // b.tstop
  40c218:	b	40c24c <wcrtomb@plt+0x988c>
  40c21c:	cmn	x20, #0x1
  40c220:	b.eq	40c24c <wcrtomb@plt+0x988c>  // b.none
  40c224:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c228:	sdiv	x9, x9, x20
  40c22c:	cmp	x9, x4
  40c230:	b.ge	40c24c <wcrtomb@plt+0x988c>  // b.tcont
  40c234:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c238:	b	40c25c <wcrtomb@plt+0x989c>
  40c23c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c240:	sdiv	x10, x9, x4
  40c244:	cmp	x20, x10
  40c248:	b.lt	40c25c <wcrtomb@plt+0x989c>  // b.tstop
  40c24c:	mul	x1, x20, x4
  40c250:	cmp	x1, #0x7f
  40c254:	b.gt	40c264 <wcrtomb@plt+0x98a4>
  40c258:	mov	w9, #0x80                  	// #128
  40c25c:	sdiv	x20, x9, x4
  40c260:	mul	x1, x20, x4
  40c264:	cbnz	x0, 40c26c <wcrtomb@plt+0x98ac>
  40c268:	str	xzr, [x19]
  40c26c:	sub	x9, x20, x8
  40c270:	cmp	x9, x2
  40c274:	b.ge	40c304 <wcrtomb@plt+0x9944>  // b.tcont
  40c278:	cmp	x3, #0x0
  40c27c:	cset	w9, ge  // ge = tcont
  40c280:	adds	x20, x8, x2
  40c284:	cset	w10, vs
  40c288:	cmp	x20, x3
  40c28c:	cset	w8, gt
  40c290:	tbnz	w10, #0, 40c2ec <wcrtomb@plt+0x992c>
  40c294:	and	w8, w9, w8
  40c298:	tbnz	w8, #0, 40c2ec <wcrtomb@plt+0x992c>
  40c29c:	tbnz	x4, #63, 40c2b4 <wcrtomb@plt+0x98f4>
  40c2a0:	cbz	x4, 40c300 <wcrtomb@plt+0x9940>
  40c2a4:	tbnz	x20, #63, 40c2d4 <wcrtomb@plt+0x9914>
  40c2a8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c2ac:	udiv	x8, x8, x4
  40c2b0:	b	40c2c8 <wcrtomb@plt+0x9908>
  40c2b4:	tbnz	x20, #63, 40c2f0 <wcrtomb@plt+0x9930>
  40c2b8:	cmn	x4, #0x1
  40c2bc:	b.eq	40c300 <wcrtomb@plt+0x9940>  // b.none
  40c2c0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c2c4:	sdiv	x8, x8, x4
  40c2c8:	cmp	x8, x20
  40c2cc:	b.ge	40c300 <wcrtomb@plt+0x9940>  // b.tcont
  40c2d0:	b	40c2ec <wcrtomb@plt+0x992c>
  40c2d4:	cmn	x20, #0x1
  40c2d8:	b.eq	40c300 <wcrtomb@plt+0x9940>  // b.none
  40c2dc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c2e0:	sdiv	x8, x8, x20
  40c2e4:	cmp	x8, x4
  40c2e8:	b.ge	40c300 <wcrtomb@plt+0x9940>  // b.tcont
  40c2ec:	bl	412920 <wcrtomb@plt+0xff60>
  40c2f0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  40c2f4:	sdiv	x8, x8, x4
  40c2f8:	cmp	x20, x8
  40c2fc:	b.lt	40c2ec <wcrtomb@plt+0x992c>  // b.tstop
  40c300:	mul	x1, x20, x4
  40c304:	bl	412788 <wcrtomb@plt+0xfdc8>
  40c308:	str	x20, [x19]
  40c30c:	ldp	x20, x19, [sp, #16]
  40c310:	ldp	x29, x30, [sp], #32
  40c314:	ret
  40c318:	stp	x29, x30, [sp, #-32]!
  40c31c:	str	x19, [sp, #16]
  40c320:	ldp	x1, x2, [x0, #32]
  40c324:	mov	x19, x0
  40c328:	add	x0, x0, #0x48
  40c32c:	mov	x3, x19
  40c330:	mov	x29, sp
  40c334:	bl	40cadc <wcrtomb@plt+0xa11c>
  40c338:	ldr	x9, [x19, #32]
  40c33c:	cmp	w0, #0x1
  40c340:	b.ne	40c34c <wcrtomb@plt+0x998c>  // b.any
  40c344:	ldrb	w8, [x9]
  40c348:	b	40c350 <wcrtomb@plt+0x9990>
  40c34c:	mov	w8, #0xffffffff            	// #-1
  40c350:	ldr	x10, [x19, #40]
  40c354:	add	x9, x9, w0, sxtw
  40c358:	str	x9, [x19, #32]
  40c35c:	sub	x9, x10, w0, sxtw
  40c360:	str	x9, [x19, #40]
  40c364:	ldr	x19, [sp, #16]
  40c368:	mov	w0, w8
  40c36c:	ldp	x29, x30, [sp], #32
  40c370:	ret
  40c374:	stp	x29, x30, [sp, #-48]!
  40c378:	stp	x20, x19, [sp, #32]
  40c37c:	ldr	x8, [x0, #8]
  40c380:	str	x21, [sp, #16]
  40c384:	mov	x21, x0
  40c388:	mov	x19, x1
  40c38c:	cmp	x8, #0x0
  40c390:	mov	x29, sp
  40c394:	b.le	40c3ec <wcrtomb@plt+0x9a2c>
  40c398:	ldr	x0, [x21]
  40c39c:	mov	x20, xzr
  40c3a0:	mov	x9, x0
  40c3a4:	mov	x10, xzr
  40c3a8:	movi	v0.2d, #0x0
  40c3ac:	ldr	q1, [x19, x10]
  40c3b0:	ldr	q2, [x9, x10]
  40c3b4:	add	x10, x10, #0x10
  40c3b8:	cmp	x10, #0x20
  40c3bc:	eor	v1.16b, v2.16b, v1.16b
  40c3c0:	orr	v0.16b, v1.16b, v0.16b
  40c3c4:	b.ne	40c3ac <wcrtomb@plt+0x99ec>  // b.any
  40c3c8:	dup	v1.2d, v0.d[1]
  40c3cc:	orr	v0.16b, v0.16b, v1.16b
  40c3d0:	fmov	x10, d0
  40c3d4:	cbz	x10, 40c430 <wcrtomb@plt+0x9a70>
  40c3d8:	add	x20, x20, #0x1
  40c3dc:	cmp	x20, x8
  40c3e0:	add	x9, x9, #0x20
  40c3e4:	b.lt	40c3a4 <wcrtomb@plt+0x99e4>  // b.tstop
  40c3e8:	b	40c3f4 <wcrtomb@plt+0x9a34>
  40c3ec:	ldr	x0, [x21]
  40c3f0:	mov	x20, xzr
  40c3f4:	mov	x1, x21
  40c3f8:	ldr	x9, [x1, #16]!
  40c3fc:	cmp	x9, x8
  40c400:	b.gt	40c41c <wcrtomb@plt+0x9a5c>
  40c404:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40c408:	mov	w2, #0x1                   	// #1
  40c40c:	movk	x3, #0x7fff, lsl #48
  40c410:	mov	w4, #0x20                  	// #32
  40c414:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40c418:	ldr	x8, [x21, #8]
  40c41c:	add	x8, x8, #0x1
  40c420:	stp	x0, x8, [x21]
  40c424:	ldp	q1, q0, [x19]
  40c428:	add	x8, x0, x20, lsl #5
  40c42c:	stp	q1, q0, [x8]
  40c430:	mov	x0, x20
  40c434:	ldp	x20, x19, [sp, #32]
  40c438:	ldr	x21, [sp, #16]
  40c43c:	ldp	x29, x30, [sp], #48
  40c440:	ret
  40c444:	sub	sp, sp, #0x140
  40c448:	stp	x29, x30, [sp, #224]
  40c44c:	add	x29, sp, #0xe0
  40c450:	stp	x28, x27, [sp, #240]
  40c454:	sub	x28, x29, #0x30
  40c458:	movi	v0.2d, #0x0
  40c45c:	stp	x26, x25, [sp, #256]
  40c460:	stp	x24, x23, [sp, #272]
  40c464:	stp	x22, x21, [sp, #288]
  40c468:	stp	x20, x19, [sp, #304]
  40c46c:	mov	x19, x0
  40c470:	str	xzr, [x0, #104]
  40c474:	stp	q0, q0, [x28]
  40c478:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c47c:	cmp	w0, #0x5e
  40c480:	cset	w8, eq  // eq = none
  40c484:	stp	w8, w0, [sp, #8]
  40c488:	b.ne	40c4ac <wcrtomb@plt+0x9aec>  // b.any
  40c48c:	mov	x0, x19
  40c490:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c494:	ldrb	w8, [x19, #1049]
  40c498:	mov	w26, w0
  40c49c:	cmp	w8, #0x0
  40c4a0:	cset	w8, ne  // ne = any
  40c4a4:	str	w8, [sp, #28]
  40c4a8:	b	40c4b8 <wcrtomb@plt+0x9af8>
  40c4ac:	mov	w8, #0x1                   	// #1
  40c4b0:	str	w8, [sp, #28]
  40c4b4:	mov	w26, w0
  40c4b8:	ldr	w25, [x19, #72]
  40c4bc:	cmp	w26, #0x3a
  40c4c0:	add	x8, sp, #0x2c
  40c4c4:	add	x21, x19, #0x70
  40c4c8:	mov	w23, #0x1                   	// #1
  40c4cc:	cset	w20, eq  // eq = none
  40c4d0:	add	x8, x8, #0x4
  40c4d4:	str	x8, [sp, #16]
  40c4d8:	str	x21, [sp, #32]
  40c4dc:	cmp	w26, #0x5c
  40c4e0:	and	w20, w20, #0xfffffffd
  40c4e4:	b.eq	40c520 <wcrtomb@plt+0x9b60>  // b.none
  40c4e8:	cmp	w26, #0x5b
  40c4ec:	b.ne	40c5c4 <wcrtomb@plt+0x9c04>  // b.any
  40c4f0:	mov	x0, x19
  40c4f4:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c4f8:	ldr	w22, [x19, #72]
  40c4fc:	mov	w24, w0
  40c500:	cmp	w0, #0x3a
  40c504:	b.ne	40c530 <wcrtomb@plt+0x9b70>  // b.any
  40c508:	ldrb	w8, [x19, #448]
  40c50c:	tbnz	w8, #2, 40c54c <wcrtomb@plt+0x9b8c>
  40c510:	mov	w8, #0x4                   	// #4
  40c514:	mov	w26, #0x5b                  	// #91
  40c518:	mov	w24, #0x3a                  	// #58
  40c51c:	b	40c720 <wcrtomb@plt+0x9d60>
  40c520:	ldrb	w8, [x19, #448]
  40c524:	tbnz	w8, #0, 40c5b4 <wcrtomb@plt+0x9bf4>
  40c528:	mov	w26, #0x5c                  	// #92
  40c52c:	b	40c5c4 <wcrtomb@plt+0x9c04>
  40c530:	cmp	w24, #0x2e
  40c534:	b.eq	40c54c <wcrtomb@plt+0x9b8c>  // b.none
  40c538:	cmp	w24, #0x100
  40c53c:	mov	w26, #0x5b                  	// #91
  40c540:	b.eq	40c5c4 <wcrtomb@plt+0x9c04>  // b.none
  40c544:	cmp	w24, #0x3d
  40c548:	b.ne	40c5d4 <wcrtomb@plt+0x9c14>  // b.any
  40c54c:	mov	x0, x19
  40c550:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c554:	ldr	x8, [x19, #40]
  40c558:	cbz	x8, 40c64c <wcrtomb@plt+0x9c8c>
  40c55c:	adrp	x25, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40c560:	mov	w21, wzr
  40c564:	add	x22, sp, #0x2c
  40c568:	add	x25, x25, #0xea8
  40c56c:	cmp	w0, w24
  40c570:	b.ne	40c584 <wcrtomb@plt+0x9bc4>  // b.any
  40c574:	ldr	x8, [x19, #32]
  40c578:	ldrb	w8, [x8]
  40c57c:	cmp	w8, #0x5d
  40c580:	b.eq	40c65c <wcrtomb@plt+0x9c9c>  // b.none
  40c584:	cmp	w21, #0x1f
  40c588:	b.gt	40c59c <wcrtomb@plt+0x9bdc>
  40c58c:	add	w8, w21, #0x1
  40c590:	strb	w0, [x22, w21, sxtw]
  40c594:	mov	w21, w8
  40c598:	b	40c5a0 <wcrtomb@plt+0x9be0>
  40c59c:	strb	wzr, [sp, #44]
  40c5a0:	mov	x0, x19
  40c5a4:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c5a8:	ldr	x8, [x19, #40]
  40c5ac:	cbnz	x8, 40c56c <wcrtomb@plt+0x9bac>
  40c5b0:	b	40c65c <wcrtomb@plt+0x9c9c>
  40c5b4:	mov	x0, x19
  40c5b8:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c5bc:	ldr	w25, [x19, #72]
  40c5c0:	mov	w26, w0
  40c5c4:	mov	x0, x19
  40c5c8:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c5cc:	ldr	w22, [x19, #72]
  40c5d0:	mov	w24, w0
  40c5d4:	cmp	w24, #0x2d
  40c5d8:	b.ne	40c710 <wcrtomb@plt+0x9d50>  // b.any
  40c5dc:	mov	x0, x19
  40c5e0:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c5e4:	ldr	w21, [x19, #72]
  40c5e8:	cmp	w0, #0x5b
  40c5ec:	b.eq	40c61c <wcrtomb@plt+0x9c5c>  // b.none
  40c5f0:	mov	w27, w0
  40c5f4:	cmp	w0, #0x5c
  40c5f8:	b.eq	40c60c <wcrtomb@plt+0x9c4c>  // b.none
  40c5fc:	cmp	w27, #0x5d
  40c600:	b.ne	40c6e8 <wcrtomb@plt+0x9d28>  // b.any
  40c604:	ldr	x8, [x19, #32]
  40c608:	b	40c630 <wcrtomb@plt+0x9c70>
  40c60c:	ldrb	w8, [x19, #448]
  40c610:	tbnz	w8, #0, 40c6d0 <wcrtomb@plt+0x9d10>
  40c614:	mov	w27, #0x5c                  	// #92
  40c618:	b	40c6e8 <wcrtomb@plt+0x9d28>
  40c61c:	ldr	x8, [x19, #32]
  40c620:	ldrb	w9, [x8]
  40c624:	cmp	w9, #0x2e
  40c628:	b.ne	40c6e4 <wcrtomb@plt+0x9d24>  // b.any
  40c62c:	str	wzr, [sp, #28]
  40c630:	ldr	x9, [x19, #40]
  40c634:	sub	x8, x8, #0x1
  40c638:	str	x8, [x19, #32]
  40c63c:	mov	w24, #0x2d                  	// #45
  40c640:	add	x8, x9, #0x1
  40c644:	str	x8, [x19, #40]
  40c648:	b	40c70c <wcrtomb@plt+0x9d4c>
  40c64c:	adrp	x25, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40c650:	mov	w21, wzr
  40c654:	add	x22, sp, #0x2c
  40c658:	add	x25, x25, #0xea8
  40c65c:	mov	x0, x19
  40c660:	strb	wzr, [x22, w21, sxtw]
  40c664:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c668:	cmp	w24, #0x3a
  40c66c:	mov	w21, wzr
  40c670:	b.ne	40c94c <wcrtomb@plt+0x9f8c>  // b.any
  40c674:	ldrb	w8, [x19, #457]
  40c678:	mov	w11, #0x72                  	// #114
  40c67c:	cbz	w8, 40c6c0 <wcrtomb@plt+0x9d00>
  40c680:	ldr	w8, [sp, #44]
  40c684:	ldrh	w9, [sp, #48]
  40c688:	mov	w10, #0x7075                	// #28789
  40c68c:	movk	w10, #0x6570, lsl #16
  40c690:	eor	w8, w8, w10
  40c694:	eor	w9, w9, w11
  40c698:	orr	w8, w8, w9
  40c69c:	cbz	w8, 40c8b0 <wcrtomb@plt+0x9ef0>
  40c6a0:	ldr	w8, [sp, #44]
  40c6a4:	ldrh	w9, [sp, #48]
  40c6a8:	mov	w10, #0x6f6c                	// #28524
  40c6ac:	movk	w10, #0x6577, lsl #16
  40c6b0:	eor	w8, w8, w10
  40c6b4:	eor	w9, w9, w11
  40c6b8:	orr	w8, w8, w9
  40c6bc:	cbz	w8, 40c8b0 <wcrtomb@plt+0x9ef0>
  40c6c0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40c6c4:	add	x24, sp, #0x2c
  40c6c8:	add	x1, x1, #0x226
  40c6cc:	b	40c8bc <wcrtomb@plt+0x9efc>
  40c6d0:	mov	x0, x19
  40c6d4:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c6d8:	ldr	w21, [x19, #72]
  40c6dc:	mov	w27, w0
  40c6e0:	b	40c6e8 <wcrtomb@plt+0x9d28>
  40c6e4:	mov	w27, #0x5b                  	// #91
  40c6e8:	mov	x0, x19
  40c6ec:	orr	w20, w20, #0x8
  40c6f0:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c6f4:	ldr	w22, [x19, #72]
  40c6f8:	cmn	w25, #0x1
  40c6fc:	mov	w24, w0
  40c700:	b.eq	40c788 <wcrtomb@plt+0x9dc8>  // b.none
  40c704:	cmp	w25, w21
  40c708:	b.ne	40c788 <wcrtomb@plt+0x9dc8>  // b.any
  40c70c:	ldr	x21, [sp, #32]
  40c710:	cmp	w26, #0x3a
  40c714:	mov	w8, #0x4                   	// #4
  40c718:	mov	w9, #0x2                   	// #2
  40c71c:	csel	w8, w9, w8, eq  // eq = none
  40c720:	ldrb	w9, [x19, #1048]
  40c724:	orr	w20, w20, w8
  40c728:	cbz	w9, 40c758 <wcrtomb@plt+0x9d98>
  40c72c:	cmn	w25, #0x1
  40c730:	b.eq	40c810 <wcrtomb@plt+0x9e50>  // b.none
  40c734:	ldrb	w8, [x19, #457]
  40c738:	cbz	w8, 40c818 <wcrtomb@plt+0x9e58>
  40c73c:	ldr	x1, [sp, #16]
  40c740:	mov	w0, w25
  40c744:	bl	40eab8 <wcrtomb@plt+0xc0f8>
  40c748:	str	w25, [sp, #44]
  40c74c:	tbnz	w0, #31, 40c968 <wcrtomb@plt+0x9fa8>
  40c750:	add	w8, w0, #0x1
  40c754:	b	40c820 <wcrtomb@plt+0x9e60>
  40c758:	ldrb	w8, [x19, #457]
  40c75c:	cbz	w8, 40c770 <wcrtomb@plt+0x9db0>
  40c760:	bl	402760 <__ctype_b_loc@plt>
  40c764:	ldr	x8, [x0]
  40c768:	ldrh	w8, [x8, w26, sxtw #1]
  40c76c:	tbnz	w8, #10, 40c8a0 <wcrtomb@plt+0x9ee0>
  40c770:	lsr	w8, w26, #6
  40c774:	ldr	x9, [x28, w8, uxtw #3]
  40c778:	lsl	x10, x23, x26
  40c77c:	orr	x9, x9, x10
  40c780:	str	x9, [x28, w8, uxtw #3]
  40c784:	b	40c968 <wcrtomb@plt+0x9fa8>
  40c788:	ldrb	w8, [x19, #1049]
  40c78c:	ldr	x21, [sp, #32]
  40c790:	cbnz	w8, 40c7b4 <wcrtomb@plt+0x9df4>
  40c794:	sub	w8, w26, #0x30
  40c798:	and	w8, w8, #0xff
  40c79c:	cmp	w8, #0x9
  40c7a0:	b.hi	40c810 <wcrtomb@plt+0x9e50>  // b.pmore
  40c7a4:	sub	w8, w27, #0x30
  40c7a8:	and	w8, w8, #0xff
  40c7ac:	cmp	w8, #0x9
  40c7b0:	b.hi	40c810 <wcrtomb@plt+0x9e50>  // b.pmore
  40c7b4:	cmp	w26, w27
  40c7b8:	b.gt	40c968 <wcrtomb@plt+0x9fa8>
  40c7bc:	sxtw	x25, w26
  40c7c0:	sxtw	x21, w27
  40c7c4:	ldrb	w8, [x19, #457]
  40c7c8:	cbz	w8, 40c7dc <wcrtomb@plt+0x9e1c>
  40c7cc:	bl	402760 <__ctype_b_loc@plt>
  40c7d0:	ldr	x8, [x0]
  40c7d4:	ldrh	w8, [x8, x25, lsl #1]
  40c7d8:	tbnz	w8, #10, 40c7f4 <wcrtomb@plt+0x9e34>
  40c7dc:	ubfx	x8, x25, #6, #26
  40c7e0:	ldr	x9, [x28, x8, lsl #3]
  40c7e4:	lsl	x10, x23, x25
  40c7e8:	orr	x9, x9, x10
  40c7ec:	str	x9, [x28, x8, lsl #3]
  40c7f0:	b	40c800 <wcrtomb@plt+0x9e40>
  40c7f4:	sub	x1, x29, #0x30
  40c7f8:	mov	w0, w25
  40c7fc:	bl	40ca78 <wcrtomb@plt+0xa0b8>
  40c800:	cmp	x25, x21
  40c804:	add	x25, x25, #0x1
  40c808:	b.lt	40c7c4 <wcrtomb@plt+0x9e04>  // b.tstop
  40c80c:	b	40c964 <wcrtomb@plt+0x9fa4>
  40c810:	str	wzr, [sp, #28]
  40c814:	b	40c968 <wcrtomb@plt+0x9fa8>
  40c818:	str	w25, [sp, #44]
  40c81c:	mov	w8, #0x1                   	// #1
  40c820:	ldr	x27, [sp, #16]
  40c824:	mov	w8, w8
  40c828:	sub	x26, x8, #0x1
  40c82c:	mov	w0, w25
  40c830:	bl	402490 <wctob@plt>
  40c834:	tbnz	w0, #31, 40c854 <wcrtomb@plt+0x9e94>
  40c838:	lsr	w8, w0, #6
  40c83c:	ldr	x9, [x28, w8, uxtw #3]
  40c840:	lsl	x10, x23, x0
  40c844:	orr	x9, x9, x10
  40c848:	str	x9, [x28, w8, uxtw #3]
  40c84c:	cbnz	x26, 40c894 <wcrtomb@plt+0x9ed4>
  40c850:	b	40c968 <wcrtomb@plt+0x9fa8>
  40c854:	ldp	x8, x9, [x19, #104]
  40c858:	ldr	x0, [x19, #96]
  40c85c:	cmp	x9, x8
  40c860:	b.gt	40c87c <wcrtomb@plt+0x9ebc>
  40c864:	mov	w2, #0x1                   	// #1
  40c868:	mov	x3, #0xffffffffffffffff    	// #-1
  40c86c:	mov	w4, #0x4                   	// #4
  40c870:	mov	x1, x21
  40c874:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40c878:	ldr	x8, [x19, #104]
  40c87c:	str	x0, [x19, #96]
  40c880:	ldur	w9, [x27, #-4]
  40c884:	add	x10, x8, #0x1
  40c888:	str	x10, [x19, #104]
  40c88c:	str	w9, [x0, x8, lsl #2]
  40c890:	cbz	x26, 40c968 <wcrtomb@plt+0x9fa8>
  40c894:	ldr	w25, [x27], #4
  40c898:	sub	x26, x26, #0x1
  40c89c:	b	40c82c <wcrtomb@plt+0x9e6c>
  40c8a0:	sub	x1, x29, #0x30
  40c8a4:	mov	w0, w26
  40c8a8:	bl	40ca78 <wcrtomb@plt+0xa0b8>
  40c8ac:	b	40c968 <wcrtomb@plt+0x9fa8>
  40c8b0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40c8b4:	add	x1, x1, #0x226
  40c8b8:	mov	x24, x1
  40c8bc:	mov	x0, x24
  40c8c0:	bl	402750 <strcmp@plt>
  40c8c4:	cbz	w0, 40c8f8 <wcrtomb@plt+0x9f38>
  40c8c8:	mov	x8, xzr
  40c8cc:	add	x21, x8, #0x18
  40c8d0:	cmp	x21, #0x120
  40c8d4:	b.eq	40ca60 <wcrtomb@plt+0xa0a0>  // b.none
  40c8d8:	add	x8, x25, x8
  40c8dc:	ldr	x1, [x8, #24]
  40c8e0:	mov	x0, x24
  40c8e4:	bl	402750 <strcmp@plt>
  40c8e8:	mov	x8, x21
  40c8ec:	cbnz	w0, 40c8cc <wcrtomb@plt+0x9f0c>
  40c8f0:	add	x21, x25, x21
  40c8f4:	b	40c8fc <wcrtomb@plt+0x9f3c>
  40c8f8:	mov	x21, x25
  40c8fc:	ldrb	w8, [x19, #1048]
  40c900:	cbz	w8, 40c90c <wcrtomb@plt+0x9f4c>
  40c904:	ldrb	w8, [x21, #16]
  40c908:	cbz	w8, 40c948 <wcrtomb@plt+0x9f88>
  40c90c:	mov	w24, wzr
  40c910:	ldr	x8, [x21, #8]
  40c914:	mov	w0, w24
  40c918:	blr	x8
  40c91c:	cbz	w0, 40c934 <wcrtomb@plt+0x9f74>
  40c920:	lsr	w8, w24, #6
  40c924:	ldr	x9, [x28, w8, uxtw #3]
  40c928:	lsl	x10, x23, x24
  40c92c:	orr	x9, x9, x10
  40c930:	str	x9, [x28, w8, uxtw #3]
  40c934:	add	w24, w24, #0x1
  40c938:	cmp	w24, #0x100
  40c93c:	b.ne	40c910 <wcrtomb@plt+0x9f50>  // b.any
  40c940:	ldr	w21, [sp, #28]
  40c944:	b	40c94c <wcrtomb@plt+0x9f8c>
  40c948:	mov	w21, wzr
  40c94c:	mov	x0, x19
  40c950:	orr	w20, w20, #0x8
  40c954:	bl	40cb48 <wcrtomb@plt+0xa188>
  40c958:	ldr	w22, [x19, #72]
  40c95c:	mov	w24, w0
  40c960:	str	w21, [sp, #28]
  40c964:	ldr	x21, [sp, #32]
  40c968:	cmp	w24, #0x5d
  40c96c:	mov	w26, w24
  40c970:	mov	w25, w22
  40c974:	b.ne	40c4dc <wcrtomb@plt+0x9b1c>  // b.any
  40c978:	cmp	w20, #0x7
  40c97c:	b.ne	40c998 <wcrtomb@plt+0x9fd8>  // b.any
  40c980:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40c984:	add	x1, x1, #0x244
  40c988:	mov	w2, #0x5                   	// #5
  40c98c:	mov	x0, xzr
  40c990:	bl	402890 <dcgettext@plt>
  40c994:	bl	402afc <wcrtomb@plt+0x13c>
  40c998:	ldr	w9, [sp, #12]
  40c99c:	ldr	w8, [sp, #28]
  40c9a0:	tbz	w8, #0, 40c9ec <wcrtomb@plt+0xa02c>
  40c9a4:	ldrb	w8, [x19, #1048]
  40c9a8:	cbz	w8, 40c9f4 <wcrtomb@plt+0xa034>
  40c9ac:	cmp	w9, #0x5e
  40c9b0:	b.eq	40c9bc <wcrtomb@plt+0x9ffc>  // b.none
  40c9b4:	ldr	x8, [x19, #104]
  40c9b8:	cbz	x8, 40ca20 <wcrtomb@plt+0xa060>
  40c9bc:	ldr	w8, [sp, #8]
  40c9c0:	strb	w8, [x19, #88]
  40c9c4:	ldp	q0, q1, [x28]
  40c9c8:	orr	v0.16b, v1.16b, v0.16b
  40c9cc:	dup	v1.2d, v0.d[1]
  40c9d0:	orr	v0.16b, v0.16b, v1.16b
  40c9d4:	fmov	x8, d0
  40c9d8:	cbz	x8, 40ca34 <wcrtomb@plt+0xa074>
  40c9dc:	sub	x1, x29, #0x30
  40c9e0:	mov	x0, x19
  40c9e4:	bl	40c374 <wcrtomb@plt+0x99b4>
  40c9e8:	b	40ca38 <wcrtomb@plt+0xa078>
  40c9ec:	mov	w0, #0x112                 	// #274
  40c9f0:	b	40ca40 <wcrtomb@plt+0xa080>
  40c9f4:	cmp	w9, #0x5e
  40c9f8:	b.ne	40ca20 <wcrtomb@plt+0xa060>  // b.any
  40c9fc:	ldp	q0, q1, [x28]
  40ca00:	mvn	v0.16b, v0.16b
  40ca04:	mvn	v1.16b, v1.16b
  40ca08:	stp	q0, q1, [x28]
  40ca0c:	ldrb	w8, [x19, #449]
  40ca10:	tbz	w8, #0, 40ca20 <wcrtomb@plt+0xa060>
  40ca14:	ldr	x8, [x28]
  40ca18:	and	x8, x8, #0xfffffffffffffbff
  40ca1c:	str	x8, [x28]
  40ca20:	sub	x1, x29, #0x30
  40ca24:	mov	x0, x19
  40ca28:	bl	40c374 <wcrtomb@plt+0x99b4>
  40ca2c:	add	x0, x0, #0x114
  40ca30:	b	40ca40 <wcrtomb@plt+0xa080>
  40ca34:	mov	x0, #0xffffffffffffffff    	// #-1
  40ca38:	str	x0, [x19, #80]
  40ca3c:	mov	w0, #0x113                 	// #275
  40ca40:	ldp	x20, x19, [sp, #304]
  40ca44:	ldp	x22, x21, [sp, #288]
  40ca48:	ldp	x24, x23, [sp, #272]
  40ca4c:	ldp	x26, x25, [sp, #256]
  40ca50:	ldp	x28, x27, [sp, #240]
  40ca54:	ldp	x29, x30, [sp, #224]
  40ca58:	add	sp, sp, #0x140
  40ca5c:	ret
  40ca60:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40ca64:	add	x1, x1, #0x22c
  40ca68:	mov	w2, #0x5                   	// #5
  40ca6c:	mov	x0, xzr
  40ca70:	bl	402890 <dcgettext@plt>
  40ca74:	bl	402adc <wcrtomb@plt+0x11c>
  40ca78:	stp	x29, x30, [sp, #-48]!
  40ca7c:	stp	x22, x21, [sp, #16]
  40ca80:	stp	x20, x19, [sp, #32]
  40ca84:	mov	x29, sp
  40ca88:	mov	x19, x1
  40ca8c:	bl	4024f0 <toupper@plt>
  40ca90:	mov	w20, w0
  40ca94:	mov	x21, xzr
  40ca98:	mov	w22, #0x1                   	// #1
  40ca9c:	mov	w0, w21
  40caa0:	bl	4024f0 <toupper@plt>
  40caa4:	cmp	w0, w20
  40caa8:	b.ne	40cac0 <wcrtomb@plt+0xa100>  // b.any
  40caac:	ubfx	x8, x21, #6, #26
  40cab0:	ldr	x9, [x19, x8, lsl #3]
  40cab4:	lsl	x10, x22, x21
  40cab8:	orr	x9, x9, x10
  40cabc:	str	x9, [x19, x8, lsl #3]
  40cac0:	add	x21, x21, #0x1
  40cac4:	cmp	x21, #0x100
  40cac8:	b.ne	40ca9c <wcrtomb@plt+0xa0dc>  // b.any
  40cacc:	ldp	x20, x19, [sp, #32]
  40cad0:	ldp	x22, x21, [sp, #16]
  40cad4:	ldp	x29, x30, [sp], #48
  40cad8:	ret
  40cadc:	stp	x29, x30, [sp, #-48]!
  40cae0:	stp	x20, x19, [sp, #32]
  40cae4:	ldrb	w8, [x1]
  40cae8:	str	x21, [sp, #16]
  40caec:	mov	x19, x0
  40caf0:	mov	x29, sp
  40caf4:	add	x8, x3, x8, lsl #2
  40caf8:	ldr	w21, [x8, #1308]
  40cafc:	cmn	w21, #0x1
  40cb00:	b.ne	40cb30 <wcrtomb@plt+0xa170>  // b.any
  40cb04:	add	x20, x3, #0x110
  40cb08:	add	x0, x29, #0x1c
  40cb0c:	mov	x3, x20
  40cb10:	bl	414ca4 <wcrtomb@plt+0x122e4>
  40cb14:	sub	x8, x0, #0x1
  40cb18:	cmn	x8, #0x3
  40cb1c:	b.cs	40cb2c <wcrtomb@plt+0xa16c>  // b.hs, b.nlast
  40cb20:	ldr	w8, [x29, #28]
  40cb24:	str	w8, [x19]
  40cb28:	b	40cb38 <wcrtomb@plt+0xa178>
  40cb2c:	str	xzr, [x20]
  40cb30:	mov	w0, #0x1                   	// #1
  40cb34:	str	w21, [x19]
  40cb38:	ldp	x20, x19, [sp, #32]
  40cb3c:	ldr	x21, [sp, #16]
  40cb40:	ldp	x29, x30, [sp], #48
  40cb44:	ret
  40cb48:	stp	x29, x30, [sp, #-16]!
  40cb4c:	ldr	x8, [x0, #40]
  40cb50:	mov	x29, sp
  40cb54:	cbz	x8, 40cb60 <wcrtomb@plt+0xa1a0>
  40cb58:	ldp	x29, x30, [sp], #16
  40cb5c:	b	40c318 <wcrtomb@plt+0x9958>
  40cb60:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40cb64:	add	x1, x1, #0x279
  40cb68:	mov	w2, #0x5                   	// #5
  40cb6c:	mov	x0, xzr
  40cb70:	bl	402890 <dcgettext@plt>
  40cb74:	bl	402adc <wcrtomb@plt+0x11c>
  40cb78:	stp	x29, x30, [sp, #-32]!
  40cb7c:	str	x19, [sp, #16]
  40cb80:	mov	x29, sp
  40cb84:	mov	x19, x0
  40cb88:	bl	40cbcc <wcrtomb@plt+0xa20c>
  40cb8c:	ldr	x8, [x19, #128]
  40cb90:	cmp	x8, #0x106
  40cb94:	b.eq	40cbc0 <wcrtomb@plt+0xa200>  // b.none
  40cb98:	cmp	x8, #0x108
  40cb9c:	b.eq	40cbc0 <wcrtomb@plt+0xa200>  // b.none
  40cba0:	tbnz	x8, #63, 40cbc0 <wcrtomb@plt+0xa200>
  40cba4:	mov	x0, x19
  40cba8:	bl	40cbcc <wcrtomb@plt+0xa20c>
  40cbac:	mov	w1, #0x105                 	// #261
  40cbb0:	mov	w2, #0x3                   	// #3
  40cbb4:	mov	x0, x19
  40cbb8:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cbbc:	b	40cb8c <wcrtomb@plt+0xa1cc>
  40cbc0:	ldr	x19, [sp, #16]
  40cbc4:	ldp	x29, x30, [sp], #32
  40cbc8:	ret
  40cbcc:	sub	sp, sp, #0xc0
  40cbd0:	stp	x29, x30, [sp, #128]
  40cbd4:	stp	x24, x23, [sp, #144]
  40cbd8:	stp	x22, x21, [sp, #160]
  40cbdc:	stp	x20, x19, [sp, #176]
  40cbe0:	ldr	x1, [x0, #128]
  40cbe4:	mov	x19, x0
  40cbe8:	add	x29, sp, #0x80
  40cbec:	cmp	x1, #0x100
  40cbf0:	b.cc	40cc08 <wcrtomb@plt+0xa248>  // b.lo, b.ul, b.last
  40cbf4:	cmp	x1, #0x113
  40cbf8:	b.gt	40cc08 <wcrtomb@plt+0xa248>
  40cbfc:	sub	x8, x1, #0x10b
  40cc00:	cmp	x8, #0x9
  40cc04:	b.cs	40cd7c <wcrtomb@plt+0xa3bc>  // b.hs, b.nlast
  40cc08:	mov	x0, x19
  40cc0c:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cc10:	mov	x0, x19
  40cc14:	bl	409870 <wcrtomb@plt+0x6eb0>
  40cc18:	mov	x1, x0
  40cc1c:	str	x0, [x19, #128]
  40cc20:	sub	x8, x1, #0x101
  40cc24:	cmp	x8, #0x3
  40cc28:	b.hi	40cd64 <wcrtomb@plt+0xa3a4>  // b.pmore
  40cc2c:	cmp	x1, #0x104
  40cc30:	b.ne	40cca0 <wcrtomb@plt+0xa2e0>  // b.any
  40cc34:	ldr	x20, [x19, #152]
  40cc38:	ldp	w22, w23, [x19, #64]
  40cc3c:	mov	x0, x19
  40cc40:	mov	x1, x20
  40cc44:	orr	w24, w22, w23
  40cc48:	bl	40d03c <wcrtomb@plt+0xa67c>
  40cc4c:	sub	x20, x20, x0
  40cc50:	cbz	w24, 40ccc8 <wcrtomb@plt+0xa308>
  40cc54:	mov	x21, x0
  40cc58:	tbnz	w23, #31, 40cd34 <wcrtomb@plt+0xa374>
  40cc5c:	cbz	w22, 40cd4c <wcrtomb@plt+0xa38c>
  40cc60:	cmp	w22, #0x2
  40cc64:	b.lt	40cce8 <wcrtomb@plt+0xa328>  // b.tstop
  40cc68:	mov	w22, #0x1                   	// #1
  40cc6c:	mov	x0, x19
  40cc70:	mov	x1, x20
  40cc74:	mov	x2, x21
  40cc78:	bl	40d0c4 <wcrtomb@plt+0xa704>
  40cc7c:	mov	w1, #0x105                 	// #261
  40cc80:	mov	w2, #0x3                   	// #3
  40cc84:	mov	x0, x19
  40cc88:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cc8c:	ldr	w8, [x19, #64]
  40cc90:	add	w22, w22, #0x1
  40cc94:	cmp	w22, w8
  40cc98:	b.lt	40cc6c <wcrtomb@plt+0xa2ac>  // b.tstop
  40cc9c:	b	40ccec <wcrtomb@plt+0xa32c>
  40cca0:	mov	x0, x19
  40cca4:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cca8:	mov	x0, x19
  40ccac:	bl	409870 <wcrtomb@plt+0x6eb0>
  40ccb0:	mov	x1, x0
  40ccb4:	str	x0, [x19, #128]
  40ccb8:	sub	x8, x1, #0x101
  40ccbc:	cmp	x8, #0x4
  40ccc0:	b.cc	40cc2c <wcrtomb@plt+0xa26c>  // b.lo, b.ul, b.last
  40ccc4:	b	40cd64 <wcrtomb@plt+0xa3a4>
  40ccc8:	mov	x0, x19
  40cccc:	str	x20, [x19, #152]
  40ccd0:	bl	409870 <wcrtomb@plt+0x6eb0>
  40ccd4:	str	x0, [x19, #128]
  40ccd8:	mov	x0, x19
  40ccdc:	bl	40cbcc <wcrtomb@plt+0xa20c>
  40cce0:	ldr	x1, [x19, #128]
  40cce4:	b	40ccb8 <wcrtomb@plt+0xa2f8>
  40cce8:	mov	w22, #0x1                   	// #1
  40ccec:	ldr	w8, [x19, #68]
  40ccf0:	cmp	w22, w8
  40ccf4:	b.ge	40cca8 <wcrtomb@plt+0xa2e8>  // b.tcont
  40ccf8:	mov	x0, x19
  40ccfc:	mov	x1, x20
  40cd00:	mov	x2, x21
  40cd04:	bl	40d0c4 <wcrtomb@plt+0xa704>
  40cd08:	mov	w1, #0x101                 	// #257
  40cd0c:	mov	w2, #0x3                   	// #3
  40cd10:	mov	x0, x19
  40cd14:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cd18:	mov	w1, #0x105                 	// #261
  40cd1c:	mov	w2, #0x3                   	// #3
  40cd20:	mov	x0, x19
  40cd24:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cd28:	ldr	w8, [x19, #68]
  40cd2c:	add	w22, w22, #0x1
  40cd30:	b	40ccf0 <wcrtomb@plt+0xa330>
  40cd34:	mov	w1, #0x103                 	// #259
  40cd38:	mov	w2, #0x3                   	// #3
  40cd3c:	mov	x0, x19
  40cd40:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cd44:	ldr	w22, [x19, #64]
  40cd48:	cbnz	w22, 40cc60 <wcrtomb@plt+0xa2a0>
  40cd4c:	mov	w1, #0x101                 	// #257
  40cd50:	mov	w2, #0x3                   	// #3
  40cd54:	mov	x0, x19
  40cd58:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cd5c:	ldr	w22, [x19, #64]
  40cd60:	b	40cc60 <wcrtomb@plt+0xa2a0>
  40cd64:	ldp	x20, x19, [sp, #176]
  40cd68:	ldp	x22, x21, [sp, #160]
  40cd6c:	ldp	x24, x23, [sp, #144]
  40cd70:	ldp	x29, x30, [sp, #128]
  40cd74:	add	sp, sp, #0xc0
  40cd78:	ret
  40cd7c:	cmp	x1, #0x107
  40cd80:	b.eq	40cdcc <wcrtomb@plt+0xa40c>  // b.none
  40cd84:	cmp	x1, #0x109
  40cd88:	b.eq	40ce04 <wcrtomb@plt+0xa444>  // b.none
  40cd8c:	cmp	x1, #0x10a
  40cd90:	b.ne	40ce64 <wcrtomb@plt+0xa4a4>  // b.any
  40cd94:	ldrb	w8, [x19, #1050]
  40cd98:	cbz	w8, 40cc08 <wcrtomb@plt+0xa248>
  40cd9c:	ldr	x1, [x19, #200]
  40cda0:	cbnz	x1, 40cee4 <wcrtomb@plt+0xa524>
  40cda4:	adrp	x8, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40cda8:	add	x8, x8, #0xfe0
  40cdac:	ldp	q0, q1, [x8]
  40cdb0:	stp	q0, q1, [sp]
  40cdb4:	ldr	x8, [x19, #448]
  40cdb8:	tbnz	w8, #6, 40ce90 <wcrtomb@plt+0xa4d0>
  40cdbc:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40cdc0:	str	x9, [sp]
  40cdc4:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40cdc8:	b	40ce94 <wcrtomb@plt+0xa4d4>
  40cdcc:	mov	x0, x19
  40cdd0:	bl	409870 <wcrtomb@plt+0x6eb0>
  40cdd4:	str	x0, [x19, #128]
  40cdd8:	mov	x0, x19
  40cddc:	bl	40a02c <wcrtomb@plt+0x766c>
  40cde0:	ldr	x8, [x19, #128]
  40cde4:	cmp	x8, #0x108
  40cde8:	b.eq	40cc10 <wcrtomb@plt+0xa250>  // b.none
  40cdec:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40cdf0:	add	x1, x1, #0x2b7
  40cdf4:	mov	w2, #0x5                   	// #5
  40cdf8:	mov	x0, xzr
  40cdfc:	bl	402890 <dcgettext@plt>
  40ce00:	bl	402adc <wcrtomb@plt+0x11c>
  40ce04:	ldr	w1, [x19, #72]
  40ce08:	cmn	w1, #0x1
  40ce0c:	b.eq	40ce7c <wcrtomb@plt+0xa4bc>  // b.none
  40ce10:	mov	x0, x19
  40ce14:	bl	40bfd0 <wcrtomb@plt+0x9610>
  40ce18:	ldrb	w8, [x19, #457]
  40ce1c:	cbz	w8, 40cc10 <wcrtomb@plt+0xa250>
  40ce20:	ldr	w0, [x19, #72]
  40ce24:	mov	x1, sp
  40ce28:	bl	40eab8 <wcrtomb@plt+0xc0f8>
  40ce2c:	cmp	w0, #0x1
  40ce30:	b.lt	40cc10 <wcrtomb@plt+0xa250>  // b.tstop
  40ce34:	mov	w20, w0
  40ce38:	mov	x21, sp
  40ce3c:	ldr	w1, [x21], #4
  40ce40:	mov	x0, x19
  40ce44:	bl	40bfd0 <wcrtomb@plt+0x9610>
  40ce48:	mov	w1, #0x106                 	// #262
  40ce4c:	mov	w2, #0x3                   	// #3
  40ce50:	mov	x0, x19
  40ce54:	bl	40c09c <wcrtomb@plt+0x96dc>
  40ce58:	subs	x20, x20, #0x1
  40ce5c:	b.ne	40ce3c <wcrtomb@plt+0xa47c>  // b.any
  40ce60:	b	40cc10 <wcrtomb@plt+0xa250>
  40ce64:	mov	w1, #0x100                 	// #256
  40ce68:	mov	w2, #0x3                   	// #3
  40ce6c:	mov	x0, x19
  40ce70:	bl	40c09c <wcrtomb@plt+0x96dc>
  40ce74:	ldr	x1, [x19, #128]
  40ce78:	b	40cc20 <wcrtomb@plt+0xa260>
  40ce7c:	mov	w1, #0x112                 	// #274
  40ce80:	mov	w2, #0x3                   	// #3
  40ce84:	mov	x0, x19
  40ce88:	bl	40c09c <wcrtomb@plt+0x96dc>
  40ce8c:	b	40cc10 <wcrtomb@plt+0xa250>
  40ce90:	mov	x9, #0xfffffffffffffffe    	// #-2
  40ce94:	tbz	w8, #7, 40ce9c <wcrtomb@plt+0xa4dc>
  40ce98:	str	x9, [sp]
  40ce9c:	mov	x1, sp
  40cea0:	mov	x0, x19
  40cea4:	bl	40c374 <wcrtomb@plt+0x99b4>
  40cea8:	adrp	x20, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40ceac:	add	x8, x0, #0x114
  40ceb0:	add	x20, x20, #0x0
  40ceb4:	mov	w21, #0xd0                  	// #208
  40ceb8:	str	x8, [x19, #200]
  40cebc:	mov	x0, x19
  40cec0:	mov	x1, x20
  40cec4:	bl	40c374 <wcrtomb@plt+0x99b4>
  40cec8:	add	x8, x0, #0x114
  40cecc:	str	x8, [x19, x21]
  40ced0:	add	x21, x21, #0x8
  40ced4:	cmp	x21, #0x110
  40ced8:	add	x20, x20, #0x20
  40cedc:	b.ne	40cebc <wcrtomb@plt+0xa4fc>  // b.any
  40cee0:	ldr	x1, [x19, #200]
  40cee4:	mov	x0, x19
  40cee8:	bl	4097ac <wcrtomb@plt+0x6dec>
  40ceec:	ldr	x1, [x19, #208]
  40cef0:	mov	x0, x19
  40cef4:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cef8:	mov	w1, #0xe0                  	// #224
  40cefc:	mov	w2, #0x3                   	// #3
  40cf00:	mov	x0, x19
  40cf04:	mov	w20, #0x3                   	// #3
  40cf08:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf0c:	ldr	x1, [x19, #224]
  40cf10:	mov	x0, x19
  40cf14:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cf18:	mov	w1, #0x105                 	// #261
  40cf1c:	mov	w2, #0x3                   	// #3
  40cf20:	mov	x0, x19
  40cf24:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf28:	mov	w1, #0x106                 	// #262
  40cf2c:	mov	w2, #0x3                   	// #3
  40cf30:	mov	x0, x19
  40cf34:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf38:	mov	w1, #0xed                  	// #237
  40cf3c:	mov	w2, #0x3                   	// #3
  40cf40:	mov	x0, x19
  40cf44:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf48:	ldr	x1, [x19, #240]
  40cf4c:	mov	x0, x19
  40cf50:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cf54:	mov	w1, #0x105                 	// #261
  40cf58:	mov	w2, #0x3                   	// #3
  40cf5c:	mov	x0, x19
  40cf60:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf64:	mov	w1, #0x106                 	// #262
  40cf68:	mov	w2, #0x3                   	// #3
  40cf6c:	mov	x0, x19
  40cf70:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf74:	ldr	x1, [x19, #232]
  40cf78:	mov	x0, x19
  40cf7c:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cf80:	mov	w1, #0xf0                  	// #240
  40cf84:	mov	w2, #0x3                   	// #3
  40cf88:	mov	x0, x19
  40cf8c:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cf90:	ldr	x1, [x19, #248]
  40cf94:	mov	x0, x19
  40cf98:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cf9c:	mov	w1, #0x105                 	// #261
  40cfa0:	mov	w2, #0x3                   	// #3
  40cfa4:	mov	x0, x19
  40cfa8:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cfac:	mov	w1, #0x106                 	// #262
  40cfb0:	mov	w2, #0x3                   	// #3
  40cfb4:	mov	x0, x19
  40cfb8:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cfbc:	mov	w1, #0xf4                  	// #244
  40cfc0:	mov	w2, #0x3                   	// #3
  40cfc4:	mov	x0, x19
  40cfc8:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cfcc:	ldr	x1, [x19, #264]
  40cfd0:	mov	x0, x19
  40cfd4:	bl	4097ac <wcrtomb@plt+0x6dec>
  40cfd8:	mov	w1, #0x105                 	// #261
  40cfdc:	mov	w2, #0x3                   	// #3
  40cfe0:	mov	x0, x19
  40cfe4:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cfe8:	mov	w1, #0x106                 	// #262
  40cfec:	mov	w2, #0x3                   	// #3
  40cff0:	mov	x0, x19
  40cff4:	bl	40c09c <wcrtomb@plt+0x96dc>
  40cff8:	ldr	x1, [x19, #256]
  40cffc:	mov	x0, x19
  40d000:	bl	4097ac <wcrtomb@plt+0x6dec>
  40d004:	ldr	x1, [x19, #216]
  40d008:	mov	x0, x19
  40d00c:	bl	4097ac <wcrtomb@plt+0x6dec>
  40d010:	mov	w1, #0x105                 	// #261
  40d014:	mov	w2, #0x3                   	// #3
  40d018:	mov	x0, x19
  40d01c:	bl	40c09c <wcrtomb@plt+0x96dc>
  40d020:	mov	w1, #0x106                 	// #262
  40d024:	mov	w2, #0x3                   	// #3
  40d028:	mov	x0, x19
  40d02c:	bl	40c09c <wcrtomb@plt+0x96dc>
  40d030:	subs	w20, w20, #0x1
  40d034:	b.ne	40d004 <wcrtomb@plt+0xa644>  // b.any
  40d038:	b	40cc10 <wcrtomb@plt+0xa250>
  40d03c:	stp	x29, x30, [sp, #-48]!
  40d040:	stp	x20, x19, [sp, #32]
  40d044:	ldr	x8, [x0, #144]
  40d048:	sub	x20, x1, #0x1
  40d04c:	mov	x19, x0
  40d050:	str	x21, [sp, #16]
  40d054:	ldr	x8, [x8, x20, lsl #3]
  40d058:	mov	x29, sp
  40d05c:	sub	x9, x8, #0x101
  40d060:	cmp	x9, #0x3
  40d064:	b.cs	40d07c <wcrtomb@plt+0xa6bc>  // b.hs, b.nlast
  40d068:	mov	x0, x19
  40d06c:	mov	x1, x20
  40d070:	bl	40d03c <wcrtomb@plt+0xa67c>
  40d074:	add	x0, x0, #0x1
  40d078:	b	40d0b4 <wcrtomb@plt+0xa6f4>
  40d07c:	sub	x8, x8, #0x105
  40d080:	cmp	x8, #0x2
  40d084:	b.cs	40d0b0 <wcrtomb@plt+0xa6f0>  // b.hs, b.nlast
  40d088:	mov	x0, x19
  40d08c:	mov	x1, x20
  40d090:	bl	40d03c <wcrtomb@plt+0xa67c>
  40d094:	mov	x21, x0
  40d098:	sub	x1, x20, x0
  40d09c:	mov	x0, x19
  40d0a0:	bl	40d03c <wcrtomb@plt+0xa67c>
  40d0a4:	add	x8, x21, x0
  40d0a8:	add	x0, x8, #0x1
  40d0ac:	b	40d0b4 <wcrtomb@plt+0xa6f4>
  40d0b0:	mov	w0, #0x1                   	// #1
  40d0b4:	ldp	x20, x19, [sp, #32]
  40d0b8:	ldr	x21, [sp, #16]
  40d0bc:	ldp	x29, x30, [sp], #48
  40d0c0:	ret
  40d0c4:	stp	x29, x30, [sp, #-48]!
  40d0c8:	stp	x20, x19, [sp, #32]
  40d0cc:	ldrb	w8, [x0, #1048]
  40d0d0:	str	x21, [sp, #16]
  40d0d4:	mov	x19, x2
  40d0d8:	mov	x20, x0
  40d0dc:	mov	x21, x1
  40d0e0:	cmp	x2, #0x1
  40d0e4:	mov	x29, sp
  40d0e8:	cbz	w8, 40d118 <wcrtomb@plt+0xa758>
  40d0ec:	b.lt	40d140 <wcrtomb@plt+0xa780>  // b.tstop
  40d0f0:	ldr	x8, [x20, #144]
  40d0f4:	ldr	x9, [x20, #280]
  40d0f8:	mov	x0, x20
  40d0fc:	ldr	x1, [x8, x21, lsl #3]
  40d100:	ldrb	w2, [x9, x21]
  40d104:	bl	40c09c <wcrtomb@plt+0x96dc>
  40d108:	subs	x19, x19, #0x1
  40d10c:	add	x21, x21, #0x1
  40d110:	b.ne	40d0f0 <wcrtomb@plt+0xa730>  // b.any
  40d114:	b	40d140 <wcrtomb@plt+0xa780>
  40d118:	b.lt	40d140 <wcrtomb@plt+0xa780>  // b.tstop
  40d11c:	lsl	x21, x21, #3
  40d120:	ldr	x8, [x20, #144]
  40d124:	mov	w2, #0x3                   	// #3
  40d128:	mov	x0, x20
  40d12c:	ldr	x1, [x8, x21]
  40d130:	bl	40c09c <wcrtomb@plt+0x96dc>
  40d134:	subs	x19, x19, #0x1
  40d138:	add	x21, x21, #0x8
  40d13c:	b.ne	40d120 <wcrtomb@plt+0xa760>  // b.any
  40d140:	ldp	x20, x19, [sp, #32]
  40d144:	ldr	x21, [sp, #16]
  40d148:	ldp	x29, x30, [sp], #48
  40d14c:	ret
  40d150:	stp	x29, x30, [sp, #-32]!
  40d154:	lsr	x8, x1, #59
  40d158:	stp	x20, x19, [sp, #16]
  40d15c:	mov	x29, sp
  40d160:	cbnz	x8, 40d188 <wcrtomb@plt+0xa7c8>
  40d164:	mov	x20, x0
  40d168:	lsl	x0, x1, #4
  40d16c:	mov	x19, x1
  40d170:	bl	412738 <wcrtomb@plt+0xfd78>
  40d174:	stp	xzr, x19, [x20, #8]
  40d178:	str	x0, [x20]
  40d17c:	ldp	x20, x19, [sp, #16]
  40d180:	ldp	x29, x30, [sp], #32
  40d184:	ret
  40d188:	bl	412920 <wcrtomb@plt+0xff60>
  40d18c:	stp	x29, x30, [sp, #-48]!
  40d190:	str	x21, [sp, #16]
  40d194:	stp	x20, x19, [sp, #32]
  40d198:	mov	x21, x1
  40d19c:	ldr	x9, [x21, #16]!
  40d1a0:	ldr	x8, [x0, #8]
  40d1a4:	mov	x20, x1
  40d1a8:	mov	x19, x0
  40d1ac:	mov	x29, sp
  40d1b0:	cmp	x9, x8
  40d1b4:	b.ge	40d1e8 <wcrtomb@plt+0xa828>  // b.tcont
  40d1b8:	ldr	x0, [x20]
  40d1bc:	bl	402770 <free@plt>
  40d1c0:	ldr	x8, [x19, #8]
  40d1c4:	ldr	x9, [x20, #16]
  40d1c8:	mov	x3, #0xffffffffffffffff    	// #-1
  40d1cc:	mov	w4, #0x10                  	// #16
  40d1d0:	mov	x0, xzr
  40d1d4:	sub	x2, x8, x9
  40d1d8:	mov	x1, x21
  40d1dc:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40d1e0:	str	x0, [x20]
  40d1e4:	ldr	x8, [x19, #8]
  40d1e8:	str	x8, [x20, #8]
  40d1ec:	ldr	x8, [x19, #8]
  40d1f0:	cbz	x8, 40d210 <wcrtomb@plt+0xa850>
  40d1f4:	ldr	x0, [x20]
  40d1f8:	ldr	x1, [x19]
  40d1fc:	ldp	x20, x19, [sp, #32]
  40d200:	ldr	x21, [sp, #16]
  40d204:	lsl	x2, x8, #4
  40d208:	ldp	x29, x30, [sp], #48
  40d20c:	b	402320 <memcpy@plt>
  40d210:	ldp	x20, x19, [sp, #32]
  40d214:	ldr	x21, [sp, #16]
  40d218:	ldp	x29, x30, [sp], #48
  40d21c:	ret
  40d220:	stp	x29, x30, [sp, #-48]!
  40d224:	str	x21, [sp, #16]
  40d228:	stp	x20, x19, [sp, #32]
  40d22c:	mov	x19, x1
  40d230:	mov	x1, x2
  40d234:	ldp	x8, x9, [x2]
  40d238:	ldr	x10, [x1, #16]!
  40d23c:	mov	x20, x2
  40d240:	mov	x21, x0
  40d244:	mov	x29, sp
  40d248:	cmp	x10, x9
  40d24c:	b.gt	40d26c <wcrtomb@plt+0xa8ac>
  40d250:	mov	w2, #0x1                   	// #1
  40d254:	mov	x3, #0xffffffffffffffff    	// #-1
  40d258:	mov	w4, #0x10                  	// #16
  40d25c:	mov	x0, x8
  40d260:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40d264:	ldr	x9, [x20, #8]
  40d268:	mov	x8, x0
  40d26c:	add	x10, x9, #0x1
  40d270:	add	x9, x8, x9, lsl #4
  40d274:	stp	x8, x10, [x20]
  40d278:	stp	x21, x19, [x9]
  40d27c:	ldp	x20, x19, [sp, #32]
  40d280:	ldr	x21, [sp, #16]
  40d284:	ldp	x29, x30, [sp], #48
  40d288:	ret
  40d28c:	stp	x29, x30, [sp, #-80]!
  40d290:	stp	x26, x25, [sp, #16]
  40d294:	stp	x24, x23, [sp, #32]
  40d298:	stp	x22, x21, [sp, #48]
  40d29c:	stp	x20, x19, [sp, #64]
  40d2a0:	mov	x21, x1
  40d2a4:	ldr	x1, [x1, #8]
  40d2a8:	mov	w19, w2
  40d2ac:	mov	x20, x0
  40d2b0:	mov	x23, xzr
  40d2b4:	cmp	x1, #0x1
  40d2b8:	mov	x29, sp
  40d2bc:	b.lt	40d2e8 <wcrtomb@plt+0xa928>  // b.tstop
  40d2c0:	ldr	x9, [x21]
  40d2c4:	mov	x8, xzr
  40d2c8:	add	x9, x9, #0x8
  40d2cc:	ldur	x10, [x9, #-8]
  40d2d0:	ldr	w11, [x9], #16
  40d2d4:	add	x8, x8, #0x1
  40d2d8:	cmp	x8, x1
  40d2dc:	add	x10, x10, x11
  40d2e0:	eor	x23, x10, x23
  40d2e4:	b.lt	40d2cc <wcrtomb@plt+0xa90c>  // b.tstop
  40d2e8:	ldr	x8, [x20, #304]
  40d2ec:	cmp	x8, #0x1
  40d2f0:	b.lt	40d3a4 <wcrtomb@plt+0xa9e4>  // b.tstop
  40d2f4:	ldr	x9, [x20, #296]
  40d2f8:	mov	x22, xzr
  40d2fc:	mov	w10, #0x50                  	// #80
  40d300:	mul	x11, x22, x10
  40d304:	ldr	x11, [x9, x11]
  40d308:	cmp	x23, x11
  40d30c:	b.ne	40d394 <wcrtomb@plt+0xa9d4>  // b.any
  40d310:	madd	x11, x22, x10, x9
  40d314:	ldr	x11, [x11, #16]
  40d318:	cmp	x1, x11
  40d31c:	b.ne	40d394 <wcrtomb@plt+0xa9d4>  // b.any
  40d320:	madd	x11, x22, x10, x9
  40d324:	ldrb	w11, [x11, #32]
  40d328:	cmp	w11, w19
  40d32c:	b.ne	40d394 <wcrtomb@plt+0xa9d4>  // b.any
  40d330:	cmp	x1, #0x1
  40d334:	b.lt	40d388 <wcrtomb@plt+0xa9c8>  // b.tstop
  40d338:	madd	x13, x22, x10, x9
  40d33c:	ldr	x12, [x21]
  40d340:	ldr	x13, [x13, #8]
  40d344:	mov	x11, xzr
  40d348:	add	x12, x12, #0x8
  40d34c:	add	x13, x13, #0x8
  40d350:	ldr	w14, [x12]
  40d354:	ldr	w15, [x13]
  40d358:	cmp	w14, w15
  40d35c:	b.ne	40d38c <wcrtomb@plt+0xa9cc>  // b.any
  40d360:	ldur	x14, [x12, #-8]
  40d364:	ldur	x15, [x13, #-8]
  40d368:	cmp	x14, x15
  40d36c:	b.ne	40d38c <wcrtomb@plt+0xa9cc>  // b.any
  40d370:	add	x11, x11, #0x1
  40d374:	add	x12, x12, #0x10
  40d378:	cmp	x1, x11
  40d37c:	add	x13, x13, #0x10
  40d380:	b.ne	40d350 <wcrtomb@plt+0xa990>  // b.any
  40d384:	b	40d4a0 <wcrtomb@plt+0xaae0>
  40d388:	mov	x11, xzr
  40d38c:	cmp	x11, x1
  40d390:	b.eq	40d4a0 <wcrtomb@plt+0xaae0>  // b.none
  40d394:	add	x22, x22, #0x1
  40d398:	cmp	x22, x8
  40d39c:	b.lt	40d300 <wcrtomb@plt+0xa940>  // b.tstop
  40d3a0:	b	40d3a8 <wcrtomb@plt+0xa9e8>
  40d3a4:	mov	x22, xzr
  40d3a8:	cmp	x1, #0x1
  40d3ac:	b.lt	40d41c <wcrtomb@plt+0xaa5c>  // b.tstop
  40d3b0:	ldr	x9, [x20, #336]
  40d3b4:	ldr	x10, [x21]
  40d3b8:	mov	x25, xzr
  40d3bc:	mov	w24, wzr
  40d3c0:	and	w11, w19, #0x7
  40d3c4:	mov	w12, #0x1ff                 	// #511
  40d3c8:	mov	x13, x1
  40d3cc:	ldr	x14, [x10]
  40d3d0:	ldr	w15, [x9, x14, lsl #2]
  40d3d4:	cbz	w15, 40d3fc <wcrtomb@plt+0xaa3c>
  40d3d8:	orr	w16, w15, w15, lsr #3
  40d3dc:	orr	w16, w16, w15, lsr #6
  40d3e0:	tst	w11, w16
  40d3e4:	csel	w15, wzr, w15, eq  // eq = none
  40d3e8:	orr	w24, w15, w24
  40d3ec:	cbnz	x25, 40d40c <wcrtomb@plt+0xaa4c>
  40d3f0:	ldr	x15, [x20, #144]
  40d3f4:	ldr	x25, [x15, x14, lsl #3]
  40d3f8:	b	40d40c <wcrtomb@plt+0xaa4c>
  40d3fc:	ldr	x15, [x20, #144]
  40d400:	ldr	x14, [x15, x14, lsl #3]
  40d404:	cmp	x14, #0x112
  40d408:	csel	w24, w12, w24, eq  // eq = none
  40d40c:	subs	x13, x13, #0x1
  40d410:	add	x10, x10, #0x10
  40d414:	b.ne	40d3cc <wcrtomb@plt+0xaa0c>  // b.any
  40d418:	b	40d424 <wcrtomb@plt+0xaa64>
  40d41c:	mov	w24, wzr
  40d420:	mov	x25, xzr
  40d424:	ldr	x9, [x20, #312]
  40d428:	ldr	x0, [x20, #296]
  40d42c:	cmp	x9, x8
  40d430:	b.gt	40d44c <wcrtomb@plt+0xaa8c>
  40d434:	add	x1, x20, #0x138
  40d438:	mov	w2, #0x1                   	// #1
  40d43c:	mov	x3, #0xffffffffffffffff    	// #-1
  40d440:	mov	w4, #0x50                  	// #80
  40d444:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40d448:	ldr	x1, [x21, #8]
  40d44c:	add	x26, x22, x22, lsl #2
  40d450:	str	x0, [x20, #296]
  40d454:	add	x0, x0, x26, lsl #4
  40d458:	str	x23, [x0], #8
  40d45c:	bl	40d150 <wcrtomb@plt+0xa790>
  40d460:	ldr	x8, [x20, #296]
  40d464:	mov	x0, x21
  40d468:	add	x8, x8, x26, lsl #4
  40d46c:	add	x1, x8, #0x8
  40d470:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40d474:	ldr	x8, [x20, #296]
  40d478:	mov	x9, #0xffffffffffffffff    	// #-1
  40d47c:	add	x8, x8, x26, lsl #4
  40d480:	strb	w19, [x8, #32]
  40d484:	strh	w24, [x8, #34]
  40d488:	stp	xzr, xzr, [x8, #48]
  40d48c:	str	x25, [x8, #40]
  40d490:	str	x9, [x8, #72]
  40d494:	ldr	x8, [x20, #304]
  40d498:	add	x8, x8, #0x1
  40d49c:	str	x8, [x20, #304]
  40d4a0:	mov	x0, x22
  40d4a4:	ldp	x20, x19, [sp, #64]
  40d4a8:	ldp	x22, x21, [sp, #48]
  40d4ac:	ldp	x24, x23, [sp, #32]
  40d4b0:	ldp	x26, x25, [sp, #16]
  40d4b4:	ldp	x29, x30, [sp], #80
  40d4b8:	ret
  40d4bc:	stp	x29, x30, [sp, #-64]!
  40d4c0:	str	x23, [sp, #16]
  40d4c4:	stp	x22, x21, [sp, #32]
  40d4c8:	stp	x20, x19, [sp, #48]
  40d4cc:	mov	x23, x3
  40d4d0:	ldr	x8, [x23, #16]!
  40d4d4:	ldr	x9, [x0, #8]
  40d4d8:	ldr	x10, [x1, #8]
  40d4dc:	mov	x19, x3
  40d4e0:	mov	x20, x1
  40d4e4:	sub	x8, x8, x9
  40d4e8:	mov	x21, x0
  40d4ec:	cmp	x8, x10
  40d4f0:	mov	w22, w2
  40d4f4:	mov	x29, sp
  40d4f8:	b.ge	40d528 <wcrtomb@plt+0xab68>  // b.tcont
  40d4fc:	ldr	x0, [x19]
  40d500:	bl	402770 <free@plt>
  40d504:	ldr	x8, [x21, #8]
  40d508:	mov	x3, #0xffffffffffffffff    	// #-1
  40d50c:	mov	w4, #0x10                  	// #16
  40d510:	mov	x0, xzr
  40d514:	str	x8, [x19, #16]
  40d518:	ldr	x2, [x20, #8]
  40d51c:	mov	x1, x23
  40d520:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40d524:	str	x0, [x19]
  40d528:	str	xzr, [x19, #8]
  40d52c:	ldr	x8, [x21, #8]
  40d530:	ldr	x12, [x20, #8]
  40d534:	cmp	x8, #0x0
  40d538:	cset	w11, gt
  40d53c:	b.gt	40d548 <wcrtomb@plt+0xab88>
  40d540:	cmp	x12, #0x1
  40d544:	b.lt	40d624 <wcrtomb@plt+0xac64>  // b.tstop
  40d548:	mov	x8, xzr
  40d54c:	mov	x10, xzr
  40d550:	mov	x9, xzr
  40d554:	cmp	x10, x12
  40d558:	b.ge	40d598 <wcrtomb@plt+0xabd8>  // b.tcont
  40d55c:	tbz	w11, #0, 40d5d0 <wcrtomb@plt+0xac10>
  40d560:	ldr	x12, [x21]
  40d564:	ldr	x11, [x20]
  40d568:	lsl	x13, x8, #4
  40d56c:	lsl	x14, x10, #4
  40d570:	ldr	x12, [x12, x13]
  40d574:	ldr	x13, [x11, x14]
  40d578:	cmp	x12, x13
  40d57c:	b.gt	40d5d4 <wcrtomb@plt+0xac14>
  40d580:	b.ne	40d598 <wcrtomb@plt+0xabd8>  // b.any
  40d584:	add	x11, x11, x10, lsl #4
  40d588:	ldr	w11, [x11, #8]
  40d58c:	add	x10, x10, #0x1
  40d590:	and	w11, w11, w22
  40d594:	b	40d59c <wcrtomb@plt+0xabdc>
  40d598:	mov	w11, wzr
  40d59c:	ldr	x12, [x21]
  40d5a0:	ldr	x13, [x19]
  40d5a4:	add	x12, x12, x8, lsl #4
  40d5a8:	ldr	x14, [x12]
  40d5ac:	add	x13, x13, x9, lsl #4
  40d5b0:	add	x8, x8, #0x1
  40d5b4:	add	x9, x9, #0x1
  40d5b8:	str	x14, [x13]
  40d5bc:	ldr	w12, [x12, #8]
  40d5c0:	str	x9, [x19, #8]
  40d5c4:	orr	w11, w12, w11
  40d5c8:	str	w11, [x13, #8]
  40d5cc:	b	40d608 <wcrtomb@plt+0xac48>
  40d5d0:	ldr	x11, [x20]
  40d5d4:	add	x12, x11, x10, lsl #4
  40d5d8:	ldr	w12, [x12, #8]
  40d5dc:	ands	w12, w12, w22
  40d5e0:	b.eq	40d604 <wcrtomb@plt+0xac44>  // b.none
  40d5e4:	ldr	x13, [x19]
  40d5e8:	lsl	x14, x10, #4
  40d5ec:	ldr	x11, [x11, x14]
  40d5f0:	add	x13, x13, x9, lsl #4
  40d5f4:	add	x9, x9, #0x1
  40d5f8:	str	x11, [x13]
  40d5fc:	str	x9, [x19, #8]
  40d600:	str	w12, [x13, #8]
  40d604:	add	x10, x10, #0x1
  40d608:	ldr	x11, [x21, #8]
  40d60c:	ldr	x12, [x20, #8]
  40d610:	cmp	x8, x11
  40d614:	cset	w11, lt  // lt = tstop
  40d618:	b.lt	40d554 <wcrtomb@plt+0xab94>  // b.tstop
  40d61c:	cmp	x10, x12
  40d620:	b.lt	40d554 <wcrtomb@plt+0xab94>  // b.tstop
  40d624:	ldp	x20, x19, [sp, #48]
  40d628:	ldp	x22, x21, [sp, #32]
  40d62c:	ldr	x23, [sp, #16]
  40d630:	ldp	x29, x30, [sp], #64
  40d634:	ret
  40d638:	ldr	x8, [x1, #8]
  40d63c:	cmp	x8, #0x1
  40d640:	b.lt	40d680 <wcrtomb@plt+0xacc0>  // b.tstop
  40d644:	ldr	x10, [x1]
  40d648:	mov	x12, xzr
  40d64c:	mov	x13, x8
  40d650:	add	x9, x12, x13
  40d654:	asr	x9, x9, #1
  40d658:	lsl	x11, x9, #4
  40d65c:	ldr	x14, [x10, x11]
  40d660:	cmp	x14, x0
  40d664:	b.ge	40d670 <wcrtomb@plt+0xacb0>  // b.tcont
  40d668:	add	x12, x9, #0x1
  40d66c:	b	40d678 <wcrtomb@plt+0xacb8>
  40d670:	b.eq	40d688 <wcrtomb@plt+0xacc8>  // b.none
  40d674:	mov	x13, x9
  40d678:	cmp	x12, x13
  40d67c:	b.lt	40d650 <wcrtomb@plt+0xac90>  // b.tstop
  40d680:	mov	w0, wzr
  40d684:	ret
  40d688:	add	x12, x10, x9, lsl #4
  40d68c:	ldr	w0, [x12, #8]
  40d690:	add	x12, x9, #0x1
  40d694:	cmp	x12, x8
  40d698:	b.ge	40d6dc <wcrtomb@plt+0xad1c>  // b.tcont
  40d69c:	ldr	q0, [x10, x12, lsl #4]
  40d6a0:	add	x13, x9, #0x2
  40d6a4:	cmp	x13, x8
  40d6a8:	str	q0, [x10, x9, lsl #4]
  40d6ac:	b.eq	40d6e0 <wcrtomb@plt+0xad20>  // b.none
  40d6b0:	sub	x8, x8, #0x2
  40d6b4:	ldr	x10, [x1]
  40d6b8:	add	x9, x9, #0x1
  40d6bc:	cmp	x8, x9
  40d6c0:	add	x10, x10, x11
  40d6c4:	ldr	q0, [x10, #32]
  40d6c8:	add	x11, x11, #0x10
  40d6cc:	str	q0, [x10, #16]
  40d6d0:	b.ne	40d6b4 <wcrtomb@plt+0xacf4>  // b.any
  40d6d4:	add	x12, x9, #0x1
  40d6d8:	b	40d6e0 <wcrtomb@plt+0xad20>
  40d6dc:	mov	x12, x9
  40d6e0:	str	x12, [x1, #8]
  40d6e4:	ret
  40d6e8:	stp	x29, x30, [sp, #-64]!
  40d6ec:	stp	x22, x21, [sp, #32]
  40d6f0:	stp	x20, x19, [sp, #48]
  40d6f4:	ldr	x22, [x2, #8]
  40d6f8:	mov	x20, x2
  40d6fc:	mov	x19, x1
  40d700:	mov	x21, x0
  40d704:	cmp	x22, #0x0
  40d708:	str	x23, [sp, #16]
  40d70c:	mov	x29, sp
  40d710:	b.le	40d754 <wcrtomb@plt+0xad94>
  40d714:	ldr	x0, [x20]
  40d718:	mov	x23, xzr
  40d71c:	mov	x8, x22
  40d720:	add	x9, x23, x8
  40d724:	asr	x9, x9, #1
  40d728:	lsl	x10, x9, #4
  40d72c:	ldr	x10, [x0, x10]
  40d730:	cmp	x10, x21
  40d734:	b.ge	40d740 <wcrtomb@plt+0xad80>  // b.tcont
  40d738:	add	x23, x9, #0x1
  40d73c:	b	40d748 <wcrtomb@plt+0xad88>
  40d740:	mov	x8, x9
  40d744:	b.eq	40d7c4 <wcrtomb@plt+0xae04>  // b.none
  40d748:	cmp	x23, x8
  40d74c:	b.lt	40d720 <wcrtomb@plt+0xad60>  // b.tstop
  40d750:	b	40d75c <wcrtomb@plt+0xad9c>
  40d754:	ldr	x0, [x20]
  40d758:	mov	x23, xzr
  40d75c:	mov	x1, x20
  40d760:	ldr	x8, [x1, #16]!
  40d764:	cmp	x8, x22
  40d768:	b.gt	40d77c <wcrtomb@plt+0xadbc>
  40d76c:	mov	w2, #0x1                   	// #1
  40d770:	mov	x3, #0xffffffffffffffff    	// #-1
  40d774:	mov	w4, #0x10                  	// #16
  40d778:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40d77c:	cmp	x22, x23
  40d780:	str	x0, [x20]
  40d784:	b.le	40d7ac <wcrtomb@plt+0xadec>
  40d788:	lsl	x8, x22, #4
  40d78c:	add	x9, x0, x8
  40d790:	ldur	q0, [x9, #-16]
  40d794:	sub	x22, x22, #0x1
  40d798:	cmp	x22, x23
  40d79c:	sub	x8, x8, #0x10
  40d7a0:	str	q0, [x9]
  40d7a4:	ldr	x0, [x20]
  40d7a8:	b.gt	40d78c <wcrtomb@plt+0xadcc>
  40d7ac:	add	x8, x0, x23, lsl #4
  40d7b0:	stp	x21, x19, [x8]
  40d7b4:	ldr	x8, [x20, #8]
  40d7b8:	add	x8, x8, #0x1
  40d7bc:	str	x8, [x20, #8]
  40d7c0:	b	40d7d4 <wcrtomb@plt+0xae14>
  40d7c4:	add	x8, x0, x9, lsl #4
  40d7c8:	ldr	w9, [x8, #8]
  40d7cc:	orr	w9, w9, w19
  40d7d0:	str	w9, [x8, #8]
  40d7d4:	ldp	x20, x19, [sp, #48]
  40d7d8:	ldp	x22, x21, [sp, #32]
  40d7dc:	ldr	x23, [sp, #16]
  40d7e0:	ldp	x29, x30, [sp], #64
  40d7e4:	ret
  40d7e8:	ldr	x8, [x0]
  40d7ec:	ldr	x9, [x1]
  40d7f0:	cmp	x8, x9
  40d7f4:	cset	w8, gt
  40d7f8:	csinv	w0, w8, wzr, ge  // ge = tcont
  40d7fc:	ret
  40d800:	sub	sp, sp, #0xa0
  40d804:	stp	x29, x30, [sp, #64]
  40d808:	stp	x28, x27, [sp, #80]
  40d80c:	stp	x26, x25, [sp, #96]
  40d810:	stp	x24, x23, [sp, #112]
  40d814:	stp	x22, x21, [sp, #128]
  40d818:	stp	x20, x19, [sp, #144]
  40d81c:	ldr	x8, [x0, #304]
  40d820:	add	x29, sp, #0x40
  40d824:	mov	w21, w5
  40d828:	mov	x23, x0
  40d82c:	cmp	x8, #0x400
  40d830:	mov	x24, x1
  40d834:	str	x4, [sp, #8]
  40d838:	str	w3, [sp, #28]
  40d83c:	stur	x2, [x29, #-16]
  40d840:	b.lt	40d9a4 <wcrtomb@plt+0xafe4>  // b.tstop
  40d844:	ldrsw	x19, [x23, #364]
  40d848:	cmp	x8, x19
  40d84c:	b.le	40d890 <wcrtomb@plt+0xaed0>
  40d850:	add	x8, x19, x19, lsl #2
  40d854:	lsl	x20, x8, #4
  40d858:	ldr	x8, [x23, #296]
  40d85c:	add	x8, x8, x20
  40d860:	ldr	x0, [x8, #8]
  40d864:	bl	402770 <free@plt>
  40d868:	ldr	x8, [x23, #296]
  40d86c:	add	x8, x8, x20
  40d870:	ldr	x0, [x8, #48]
  40d874:	bl	402770 <free@plt>
  40d878:	ldr	x8, [x23, #304]
  40d87c:	add	x19, x19, #0x1
  40d880:	add	x20, x20, #0x50
  40d884:	cmp	x19, x8
  40d888:	b.lt	40d858 <wcrtomb@plt+0xae98>  // b.tstop
  40d88c:	ldrsw	x19, [x23, #364]
  40d890:	ldr	x8, [x23, #368]
  40d894:	str	x19, [x23, #304]
  40d898:	cbz	x8, 40d918 <wcrtomb@plt+0xaf58>
  40d89c:	ldr	x9, [x23, #352]
  40d8a0:	cmp	x9, #0x1
  40d8a4:	b.lt	40d914 <wcrtomb@plt+0xaf54>  // b.tstop
  40d8a8:	ldr	x0, [x8]
  40d8ac:	bl	402770 <free@plt>
  40d8b0:	ldr	x8, [x23, #376]
  40d8b4:	ldr	x0, [x8]
  40d8b8:	bl	402770 <free@plt>
  40d8bc:	ldr	x8, [x23, #376]
  40d8c0:	str	xzr, [x8]
  40d8c4:	ldr	x8, [x23, #368]
  40d8c8:	str	xzr, [x8]
  40d8cc:	ldr	x8, [x23, #352]
  40d8d0:	cmp	x8, #0x2
  40d8d4:	b.lt	40d914 <wcrtomb@plt+0xaf54>  // b.tstop
  40d8d8:	mov	w19, #0x1                   	// #1
  40d8dc:	ldr	x8, [x23, #368]
  40d8e0:	ldr	x0, [x8, x19, lsl #3]
  40d8e4:	bl	402770 <free@plt>
  40d8e8:	ldr	x8, [x23, #376]
  40d8ec:	ldr	x0, [x8, x19, lsl #3]
  40d8f0:	bl	402770 <free@plt>
  40d8f4:	ldr	x8, [x23, #376]
  40d8f8:	str	xzr, [x8, x19, lsl #3]
  40d8fc:	ldr	x8, [x23, #368]
  40d900:	str	xzr, [x8, x19, lsl #3]
  40d904:	ldr	x8, [x23, #352]
  40d908:	add	x19, x19, #0x1
  40d90c:	cmp	x19, x8
  40d910:	b.lt	40d8dc <wcrtomb@plt+0xaf1c>  // b.tstop
  40d914:	str	wzr, [x23, #360]
  40d918:	ldrb	w8, [x23, #1048]
  40d91c:	cbz	w8, 40d9a4 <wcrtomb@plt+0xafe4>
  40d920:	ldr	x8, [x23, #432]
  40d924:	cbz	x8, 40d9a4 <wcrtomb@plt+0xafe4>
  40d928:	ldr	x9, [x23, #352]
  40d92c:	tbnz	x9, #63, 40d974 <wcrtomb@plt+0xafb4>
  40d930:	ldur	x0, [x8, #-8]
  40d934:	bl	402770 <free@plt>
  40d938:	ldr	x8, [x23, #432]
  40d93c:	stur	xzr, [x8, #-8]
  40d940:	ldr	x8, [x23, #352]
  40d944:	cmp	x8, #0x1
  40d948:	b.lt	40d974 <wcrtomb@plt+0xafb4>  // b.tstop
  40d94c:	mov	x19, xzr
  40d950:	ldr	x8, [x23, #432]
  40d954:	ldr	x0, [x8, x19, lsl #3]
  40d958:	bl	402770 <free@plt>
  40d95c:	ldr	x8, [x23, #432]
  40d960:	str	xzr, [x8, x19, lsl #3]
  40d964:	ldr	x8, [x23, #352]
  40d968:	add	x19, x19, #0x1
  40d96c:	cmp	x19, x8
  40d970:	b.lt	40d950 <wcrtomb@plt+0xaf90>  // b.tstop
  40d974:	ldr	w8, [x23, #364]
  40d978:	cmp	w8, #0x1
  40d97c:	b.lt	40d9a0 <wcrtomb@plt+0xafe0>  // b.tstop
  40d980:	ldr	x10, [x23, #296]
  40d984:	mov	x9, xzr
  40d988:	mov	x11, #0xffffffffffffffff    	// #-1
  40d98c:	add	x10, x10, #0x48
  40d990:	add	x9, x9, #0x1
  40d994:	cmp	x9, x8
  40d998:	str	x11, [x10], #80
  40d99c:	b.cc	40d990 <wcrtomb@plt+0xafd0>  // b.lo, b.ul, b.last
  40d9a0:	str	xzr, [x23, #440]
  40d9a4:	ldr	x8, [x23, #352]
  40d9a8:	cbnz	x8, 40d9b4 <wcrtomb@plt+0xaff4>
  40d9ac:	mov	x0, x23
  40d9b0:	bl	40ddbc <wcrtomb@plt+0xb3fc>
  40d9b4:	ldur	x8, [x29, #-16]
  40d9b8:	stur	x24, [x29, #-8]
  40d9bc:	ldr	x22, [x23, #368]
  40d9c0:	ldrb	w10, [x23, #459]
  40d9c4:	ldrb	w9, [x8]
  40d9c8:	str	x10, [sp, #32]
  40d9cc:	str	w9, [sp, #4]
  40d9d0:	strb	w10, [x8]
  40d9d4:	tbz	w21, #0, 40d9f0 <wcrtomb@plt+0xb030>
  40d9d8:	ldr	x8, [x23, #424]
  40d9dc:	str	xzr, [x23, #272]
  40d9e0:	cbnz	x8, 40d9f0 <wcrtomb@plt+0xb030>
  40d9e4:	ldr	x1, [x23, #176]
  40d9e8:	add	x0, x23, #0x198
  40d9ec:	bl	40d150 <wcrtomb@plt+0xa790>
  40d9f0:	ldr	x8, [sp, #32]
  40d9f4:	mov	x26, xzr
  40d9f8:	mov	x20, xzr
  40d9fc:	stur	xzr, [x29, #-24]
  40da00:	add	x8, x23, x8
  40da04:	add	x8, x8, #0x1cc
  40da08:	str	x8, [sp, #16]
  40da0c:	mov	x27, x24
  40da10:	mov	x25, x24
  40da14:	ldr	x19, [x22, x26, lsl #3]
  40da18:	cbz	x19, 40db88 <wcrtomb@plt+0xb1c8>
  40da1c:	mov	x24, x27
  40da20:	ldrsw	x8, [x23, #364]
  40da24:	cmp	x26, x8
  40da28:	b.ge	40da98 <wcrtomb@plt+0xb0d8>  // b.tcont
  40da2c:	tbz	w21, #0, 40da44 <wcrtomb@plt+0xb084>
  40da30:	ldr	x9, [x23, #296]
  40da34:	mov	w10, #0x50                  	// #80
  40da38:	madd	x9, x26, x10, x9
  40da3c:	ldr	x9, [x9, #56]
  40da40:	cbnz	x9, 40da74 <wcrtomb@plt+0xb0b4>
  40da44:	ldrb	w9, [x24]
  40da48:	ldr	x9, [x19, x9, lsl #3]
  40da4c:	cmp	x9, x26
  40da50:	b.ne	40da70 <wcrtomb@plt+0xb0b0>  // b.any
  40da54:	add	x9, x24, #0x1
  40da58:	stur	x9, [x29, #-8]
  40da5c:	ldrb	w10, [x9], #1
  40da60:	ldr	x10, [x19, x10, lsl #3]
  40da64:	cmp	x10, x26
  40da68:	b.eq	40da58 <wcrtomb@plt+0xb098>  // b.none
  40da6c:	sub	x24, x9, #0x1
  40da70:	tbz	w21, #0, 40daf8 <wcrtomb@plt+0xb138>
  40da74:	ldur	x3, [x29, #-16]
  40da78:	mov	x0, x23
  40da7c:	mov	x1, x24
  40da80:	mov	x2, x25
  40da84:	bl	40def0 <wcrtomb@plt+0xb530>
  40da88:	mov	x24, x0
  40da8c:	stur	x0, [x29, #-8]
  40da90:	mov	x25, x0
  40da94:	b	40da9c <wcrtomb@plt+0xb0dc>
  40da98:	tbz	w21, #0, 40daf8 <wcrtomb@plt+0xb138>
  40da9c:	ldr	x8, [x23, #296]
  40daa0:	mov	w9, #0x50                  	// #80
  40daa4:	madd	x8, x26, x9, x8
  40daa8:	ldr	x8, [x8, #56]
  40daac:	cbz	x8, 40db5c <wcrtomb@plt+0xb19c>
  40dab0:	ldur	x8, [x29, #-16]
  40dab4:	cmp	x24, x8
  40dab8:	b.cs	40db5c <wcrtomb@plt+0xb19c>  // b.hs, b.nlast
  40dabc:	ldrb	w8, [x24]
  40dac0:	add	x8, x23, x8, lsl #2
  40dac4:	ldr	w8, [x8, #1308]
  40dac8:	cmn	w8, #0x1
  40dacc:	b.ne	40db5c <wcrtomb@plt+0xb19c>  // b.any
  40dad0:	ldur	x3, [x29, #-16]
  40dad4:	sub	x2, x29, #0x8
  40dad8:	mov	x0, x23
  40dadc:	mov	x1, x26
  40dae0:	bl	40df6c <wcrtomb@plt+0xb5ac>
  40dae4:	ldur	x24, [x29, #-8]
  40dae8:	ldr	x22, [x23, #368]
  40daec:	mov	x28, x0
  40daf0:	mov	x25, x24
  40daf4:	b	40db70 <wcrtomb@plt+0xb1b0>
  40daf8:	add	x27, x24, #0x1
  40dafc:	stur	x27, [x29, #-8]
  40db00:	ldrb	w9, [x24]
  40db04:	ldr	x9, [x19, x9, lsl #3]
  40db08:	ldr	x10, [x22, x9, lsl #3]
  40db0c:	cbz	x10, 40dc88 <wcrtomb@plt+0xb2c8>
  40db10:	cmp	x26, x8
  40db14:	b.ge	40db44 <wcrtomb@plt+0xb184>  // b.tcont
  40db18:	ldrb	w8, [x27]
  40db1c:	ldr	x8, [x10, x8, lsl #3]
  40db20:	cmp	x8, x9
  40db24:	b.ne	40db44 <wcrtomb@plt+0xb184>  // b.any
  40db28:	add	x8, x24, #0x2
  40db2c:	stur	x8, [x29, #-8]
  40db30:	ldrb	w11, [x8], #1
  40db34:	ldr	x11, [x10, x11, lsl #3]
  40db38:	cmp	x11, x9
  40db3c:	b.eq	40db2c <wcrtomb@plt+0xb16c>  // b.none
  40db40:	sub	x27, x8, #0x1
  40db44:	add	x24, x27, #0x1
  40db48:	stur	x24, [x29, #-8]
  40db4c:	ldrb	w8, [x27]
  40db50:	mov	x26, x9
  40db54:	ldr	x28, [x10, x8, lsl #3]
  40db58:	b	40db70 <wcrtomb@plt+0xb1b0>
  40db5c:	add	x8, x24, #0x1
  40db60:	stur	x8, [x29, #-8]
  40db64:	ldrb	w9, [x24]
  40db68:	mov	x24, x8
  40db6c:	ldr	x28, [x19, x9, lsl #3]
  40db70:	ldr	x19, [x22, x28, lsl #3]
  40db74:	mov	x20, x26
  40db78:	mov	x26, x28
  40db7c:	mov	x27, x24
  40db80:	cbnz	x19, 40da20 <wcrtomb@plt+0xb060>
  40db84:	b	40db8c <wcrtomb@plt+0xb1cc>
  40db88:	mov	x28, x26
  40db8c:	tbnz	x28, #63, 40dc98 <wcrtomb@plt+0xb2d8>
  40db90:	ldr	x8, [x23, #376]
  40db94:	ldr	x8, [x8, x28, lsl #3]
  40db98:	cbz	x8, 40dc6c <wcrtomb@plt+0xb2ac>
  40db9c:	ldrb	w9, [x27]
  40dba0:	ldr	x8, [x23, #384]
  40dba4:	add	x9, x23, x9
  40dba8:	ldrb	w8, [x8, x28]
  40dbac:	ldrb	w9, [x9, #460]
  40dbb0:	tst	w9, w8
  40dbb4:	b.ne	40dd74 <wcrtomb@plt+0xb3b4>  // b.any
  40dbb8:	ldur	x8, [x29, #-16]
  40dbbc:	cmp	x27, x8
  40dbc0:	b.ne	40dbe4 <wcrtomb@plt+0xb224>  // b.any
  40dbc4:	ldr	x8, [x23, #296]
  40dbc8:	mov	w9, #0x50                  	// #80
  40dbcc:	madd	x8, x28, x9, x8
  40dbd0:	ldrb	w9, [x8, #32]
  40dbd4:	ldrh	w8, [x8, #34]
  40dbd8:	and	w8, w9, w8, lsr #6
  40dbdc:	tst	w8, #0x7
  40dbe0:	b.ne	40dd74 <wcrtomb@plt+0xb3b4>  // b.any
  40dbe4:	tbz	w21, #0, 40dc48 <wcrtomb@plt+0xb288>
  40dbe8:	ldrsw	x8, [x23, #364]
  40dbec:	cmp	x28, x8
  40dbf0:	b.ge	40dc14 <wcrtomb@plt+0xb254>  // b.tcont
  40dbf4:	ldur	x3, [x29, #-16]
  40dbf8:	mov	x0, x23
  40dbfc:	mov	x1, x27
  40dc00:	mov	x2, x25
  40dc04:	bl	40def0 <wcrtomb@plt+0xb530>
  40dc08:	mov	x27, x0
  40dc0c:	mov	x25, x0
  40dc10:	stur	x0, [x29, #-8]
  40dc14:	ldr	x8, [x23, #296]
  40dc18:	mov	w9, #0x50                  	// #80
  40dc1c:	madd	x8, x28, x9, x8
  40dc20:	ldr	x8, [x8, #56]
  40dc24:	cbz	x8, 40dc48 <wcrtomb@plt+0xb288>
  40dc28:	ldur	x8, [x29, #-16]
  40dc2c:	cmp	x27, x8
  40dc30:	b.cs	40dc48 <wcrtomb@plt+0xb288>  // b.hs, b.nlast
  40dc34:	ldrb	w8, [x27]
  40dc38:	add	x8, x23, x8, lsl #2
  40dc3c:	ldr	w8, [x8, #1308]
  40dc40:	cmn	w8, #0x1
  40dc44:	b.eq	40dd24 <wcrtomb@plt+0xb364>  // b.none
  40dc48:	ldr	x8, [x23, #376]
  40dc4c:	add	x24, x27, #0x1
  40dc50:	mov	x20, x28
  40dc54:	ldr	x8, [x8, x28, lsl #3]
  40dc58:	stur	x24, [x29, #-8]
  40dc5c:	ldrb	w9, [x27]
  40dc60:	mov	x27, x24
  40dc64:	ldr	x26, [x8, x9, lsl #3]
  40dc68:	b	40da14 <wcrtomb@plt+0xb054>
  40dc6c:	ldrb	w2, [x27]
  40dc70:	mov	x0, x28
  40dc74:	mov	x1, x23
  40dc78:	bl	40e230 <wcrtomb@plt+0xb870>
  40dc7c:	ldr	x22, [x23, #368]
  40dc80:	mov	x26, x28
  40dc84:	b	40da14 <wcrtomb@plt+0xb054>
  40dc88:	mov	x24, x27
  40dc8c:	mov	x28, x9
  40dc90:	mov	x20, x26
  40dc94:	tbz	x28, #63, 40db90 <wcrtomb@plt+0xb1d0>
  40dc98:	cmn	x28, #0x2
  40dc9c:	b.ne	40dcc0 <wcrtomb@plt+0xb300>  // b.any
  40dca0:	ldurb	w2, [x24, #-1]
  40dca4:	mov	x0, x20
  40dca8:	mov	x1, x23
  40dcac:	bl	40e230 <wcrtomb@plt+0xb870>
  40dcb0:	ldr	x22, [x23, #368]
  40dcb4:	mov	x26, x0
  40dcb8:	mov	x27, x24
  40dcbc:	b	40da14 <wcrtomb@plt+0xb054>
  40dcc0:	ldur	x8, [x29, #-16]
  40dcc4:	cmp	x24, x8
  40dcc8:	b.hi	40dd6c <wcrtomb@plt+0xb3ac>  // b.pmore
  40dccc:	ldurb	w8, [x24, #-1]
  40dcd0:	ldr	x9, [sp, #32]
  40dcd4:	cmp	w8, w9
  40dcd8:	b.ne	40dd6c <wcrtomb@plt+0xb3ac>  // b.any
  40dcdc:	ldr	x8, [x23, #392]
  40dce0:	ldr	x26, [x8, x20, lsl #3]
  40dce4:	tbnz	x26, #63, 40dd6c <wcrtomb@plt+0xb3ac>
  40dce8:	ldur	x8, [x29, #-24]
  40dcec:	mov	x27, x24
  40dcf0:	mov	x25, x24
  40dcf4:	add	x8, x8, #0x1
  40dcf8:	stur	x8, [x29, #-24]
  40dcfc:	ldr	w8, [sp, #28]
  40dd00:	tbnz	w8, #0, 40da14 <wcrtomb@plt+0xb054>
  40dd04:	ldr	x8, [sp, #16]
  40dd08:	mov	x26, xzr
  40dd0c:	mov	x27, x24
  40dd10:	mov	x25, x24
  40dd14:	ldrb	w8, [x8]
  40dd18:	cmp	w8, #0x4
  40dd1c:	b.eq	40da14 <wcrtomb@plt+0xb054>  // b.none
  40dd20:	b	40dd50 <wcrtomb@plt+0xb390>
  40dd24:	ldur	x3, [x29, #-16]
  40dd28:	sub	x2, x29, #0x8
  40dd2c:	mov	x0, x23
  40dd30:	mov	x1, x28
  40dd34:	bl	40df6c <wcrtomb@plt+0xb5ac>
  40dd38:	ldur	x24, [x29, #-8]
  40dd3c:	ldr	x22, [x23, #368]
  40dd40:	mov	x26, x0
  40dd44:	mov	x20, x28
  40dd48:	mov	x27, x24
  40dd4c:	b	40da10 <wcrtomb@plt+0xb050>
  40dd50:	cmp	w8, #0x2
  40dd54:	b.ne	40dd64 <wcrtomb@plt+0xb3a4>  // b.any
  40dd58:	ldrsw	x8, [x23, #364]
  40dd5c:	sub	x26, x8, #0x1
  40dd60:	b	40da0c <wcrtomb@plt+0xb04c>
  40dd64:	ldr	x26, [x23, #400]
  40dd68:	b	40da0c <wcrtomb@plt+0xb04c>
  40dd6c:	mov	x24, xzr
  40dd70:	stur	xzr, [x29, #-8]
  40dd74:	ldr	x9, [sp, #8]
  40dd78:	cbz	x9, 40dd8c <wcrtomb@plt+0xb3cc>
  40dd7c:	ldr	x8, [x9]
  40dd80:	ldur	x10, [x29, #-24]
  40dd84:	add	x8, x8, x10
  40dd88:	str	x8, [x9]
  40dd8c:	ldur	x8, [x29, #-16]
  40dd90:	ldr	w9, [sp, #4]
  40dd94:	mov	x0, x24
  40dd98:	strb	w9, [x8]
  40dd9c:	ldp	x20, x19, [sp, #144]
  40dda0:	ldp	x22, x21, [sp, #128]
  40dda4:	ldp	x24, x23, [sp, #112]
  40dda8:	ldp	x26, x25, [sp, #96]
  40ddac:	ldp	x28, x27, [sp, #80]
  40ddb0:	ldp	x29, x30, [sp, #64]
  40ddb4:	add	sp, sp, #0xa0
  40ddb8:	ret
  40ddbc:	stp	x29, x30, [sp, #-64]!
  40ddc0:	stp	x22, x21, [sp, #32]
  40ddc4:	stp	x20, x19, [sp, #48]
  40ddc8:	ldr	x22, [x0, #352]
  40ddcc:	ldr	x8, [x0, #304]
  40ddd0:	str	x23, [sp, #16]
  40ddd4:	mov	x29, sp
  40ddd8:	subs	x2, x8, x22
  40dddc:	b.le	40ded8 <wcrtomb@plt+0xb518>
  40dde0:	ldr	x8, [x0, #368]
  40dde4:	add	x9, x22, #0x2
  40dde8:	mov	x19, x0
  40ddec:	add	x1, x29, #0x18
  40ddf0:	sub	x10, x8, #0x10
  40ddf4:	cmp	x8, #0x0
  40ddf8:	csel	x0, xzr, x10, eq  // eq = none
  40ddfc:	csel	x8, xzr, x9, eq  // eq = none
  40de00:	mov	x3, #0xffffffffffffffff    	// #-1
  40de04:	mov	w4, #0x8                   	// #8
  40de08:	str	x8, [x29, #24]
  40de0c:	bl	40c1ac <wcrtomb@plt+0x97ec>
  40de10:	add	x8, x0, #0x10
  40de14:	stp	xzr, xzr, [x0]
  40de18:	str	x8, [x19, #368]
  40de1c:	ldr	x23, [x29, #24]
  40de20:	sub	x20, x23, #0x2
  40de24:	lsr	x8, x20, #60
  40de28:	str	x20, [x19, #352]
  40de2c:	cbnz	x8, 40deec <wcrtomb@plt+0xb52c>
  40de30:	ldr	x0, [x19, #376]
  40de34:	lsl	x21, x20, #3
  40de38:	mov	x1, x21
  40de3c:	bl	412788 <wcrtomb@plt+0xfdc8>
  40de40:	ldr	x8, [x19, #384]
  40de44:	str	x0, [x19, #376]
  40de48:	mov	x1, x20
  40de4c:	mov	x0, x8
  40de50:	bl	412788 <wcrtomb@plt+0xfdc8>
  40de54:	ldr	x8, [x19, #392]
  40de58:	str	x0, [x19, #384]
  40de5c:	mov	x1, x21
  40de60:	mov	x0, x8
  40de64:	bl	412788 <wcrtomb@plt+0xfdc8>
  40de68:	ldrb	w8, [x19, #1048]
  40de6c:	str	x0, [x19, #392]
  40de70:	cbz	w8, 40dea4 <wcrtomb@plt+0xb4e4>
  40de74:	lsr	x8, x23, #60
  40de78:	cbnz	x8, 40deec <wcrtomb@plt+0xb52c>
  40de7c:	ldr	x8, [x19, #432]
  40de80:	lsl	x1, x23, #3
  40de84:	sub	x9, x8, #0x10
  40de88:	cmp	x8, #0x0
  40de8c:	csel	x0, xzr, x9, eq  // eq = none
  40de90:	bl	412788 <wcrtomb@plt+0xfdc8>
  40de94:	cbnz	x22, 40de9c <wcrtomb@plt+0xb4dc>
  40de98:	stp	xzr, xzr, [x0]
  40de9c:	add	x8, x0, #0x10
  40dea0:	str	x8, [x19, #432]
  40dea4:	cmp	x22, x20
  40dea8:	b.ge	40ded8 <wcrtomb@plt+0xb518>  // b.tcont
  40deac:	ldrb	w8, [x19, #1048]
  40deb0:	ldr	x9, [x19, #368]
  40deb4:	str	xzr, [x9, x22, lsl #3]
  40deb8:	ldr	x9, [x19, #376]
  40debc:	str	xzr, [x9, x22, lsl #3]
  40dec0:	cbz	w8, 40decc <wcrtomb@plt+0xb50c>
  40dec4:	ldr	x9, [x19, #432]
  40dec8:	str	xzr, [x9, x22, lsl #3]
  40decc:	add	x22, x22, #0x1
  40ded0:	cmp	x20, x22
  40ded4:	b.ne	40deb0 <wcrtomb@plt+0xb4f0>  // b.any
  40ded8:	ldp	x20, x19, [sp, #48]
  40dedc:	ldp	x22, x21, [sp, #32]
  40dee0:	ldr	x23, [sp, #16]
  40dee4:	ldp	x29, x30, [sp], #64
  40dee8:	ret
  40deec:	bl	412920 <wcrtomb@plt+0xff60>
  40def0:	sub	sp, sp, #0x40
  40def4:	stp	x29, x30, [sp, #16]
  40def8:	stp	x22, x21, [sp, #32]
  40defc:	stp	x20, x19, [sp, #48]
  40df00:	ldrb	w8, [x1]
  40df04:	mov	x21, x1
  40df08:	add	x29, sp, #0x10
  40df0c:	add	x8, x0, x8
  40df10:	ldrb	w8, [x8, #716]
  40df14:	cbz	w8, 40df20 <wcrtomb@plt+0xb560>
  40df18:	mov	x20, x21
  40df1c:	b	40df54 <wcrtomb@plt+0xb594>
  40df20:	mov	x20, x2
  40df24:	cmp	x2, x21
  40df28:	b.cs	40df54 <wcrtomb@plt+0xb594>  // b.hs, b.nlast
  40df2c:	mov	x19, x3
  40df30:	mov	x22, x0
  40df34:	sub	x2, x19, x20
  40df38:	sub	x0, x29, #0x4
  40df3c:	mov	x1, x20
  40df40:	mov	x3, x22
  40df44:	bl	40cadc <wcrtomb@plt+0xa11c>
  40df48:	add	x20, x20, w0, sxtw
  40df4c:	cmp	x20, x21
  40df50:	b.cc	40df34 <wcrtomb@plt+0xb574>  // b.lo, b.ul, b.last
  40df54:	mov	x0, x20
  40df58:	ldp	x20, x19, [sp, #48]
  40df5c:	ldp	x22, x21, [sp, #32]
  40df60:	ldp	x29, x30, [sp, #16]
  40df64:	add	sp, sp, #0x40
  40df68:	ret
  40df6c:	stp	x29, x30, [sp, #-80]!
  40df70:	stp	x24, x23, [sp, #32]
  40df74:	stp	x22, x21, [sp, #48]
  40df78:	stp	x20, x19, [sp, #64]
  40df7c:	mov	x19, x1
  40df80:	ldr	x1, [x2]
  40df84:	mov	x29, sp
  40df88:	mov	x20, x0
  40df8c:	mov	x22, x2
  40df90:	sub	x2, x3, x1
  40df94:	add	x0, x29, #0x1c
  40df98:	mov	x3, x20
  40df9c:	str	x25, [sp, #16]
  40dfa0:	bl	40cadc <wcrtomb@plt+0xa11c>
  40dfa4:	mov	w23, w0
  40dfa8:	cmp	w0, #0x1
  40dfac:	mov	w24, wzr
  40dfb0:	mov	x21, x19
  40dfb4:	str	xzr, [x20, #416]
  40dfb8:	b.lt	40e054 <wcrtomb@plt+0xb694>  // b.tstop
  40dfbc:	cbz	w24, 40dfcc <wcrtomb@plt+0xb60c>
  40dfc0:	ldrsw	x8, [x20, #364]
  40dfc4:	cmp	x21, x8
  40dfc8:	b.lt	40e054 <wcrtomb@plt+0xb694>  // b.tstop
  40dfcc:	ldr	x8, [x20, #368]
  40dfd0:	ldr	x25, [x8, x21, lsl #3]
  40dfd4:	cbnz	x25, 40e010 <wcrtomb@plt+0xb650>
  40dfd8:	ldr	x8, [x20, #376]
  40dfdc:	ldr	x25, [x8, x21, lsl #3]
  40dfe0:	cbnz	x25, 40e010 <wcrtomb@plt+0xb650>
  40dfe4:	ldr	x8, [x22]
  40dfe8:	mov	x0, x21
  40dfec:	mov	x1, x20
  40dff0:	ldrb	w2, [x8]
  40dff4:	bl	40e230 <wcrtomb@plt+0xb870>
  40dff8:	ldr	x8, [x20, #368]
  40dffc:	ldr	x25, [x8, x21, lsl #3]
  40e000:	cbnz	x25, 40e010 <wcrtomb@plt+0xb650>
  40e004:	ldr	x8, [x20, #376]
  40e008:	ldr	x25, [x8, x21, lsl #3]
  40e00c:	cbz	x25, 40e210 <wcrtomb@plt+0xb850>
  40e010:	ldr	x8, [x22]
  40e014:	ldrb	w2, [x8]
  40e018:	ldr	x9, [x25, x2, lsl #3]
  40e01c:	cmn	x9, #0x2
  40e020:	b.ne	40e034 <wcrtomb@plt+0xb674>  // b.any
  40e024:	mov	x0, x21
  40e028:	mov	x1, x20
  40e02c:	bl	40e230 <wcrtomb@plt+0xb870>
  40e030:	ldr	x8, [x22]
  40e034:	add	x9, x8, #0x1
  40e038:	str	x9, [x22]
  40e03c:	ldrb	w8, [x8]
  40e040:	add	w24, w24, #0x1
  40e044:	cmp	w23, w24
  40e048:	ldr	x21, [x25, x8, lsl #3]
  40e04c:	b.ne	40dfbc <wcrtomb@plt+0xb5fc>  // b.any
  40e050:	mov	w24, w23
  40e054:	ldr	x8, [x22]
  40e058:	sub	w9, w23, w24
  40e05c:	add	x8, x8, w9, sxtw
  40e060:	str	x8, [x22]
  40e064:	ldr	w8, [x29, #28]
  40e068:	cmn	w8, #0x1
  40e06c:	b.eq	40e11c <wcrtomb@plt+0xb75c>  // b.none
  40e070:	ldr	x8, [x20, #296]
  40e074:	mov	w9, #0x50                  	// #80
  40e078:	madd	x9, x19, x9, x8
  40e07c:	ldr	x9, [x9, #72]
  40e080:	tbz	x9, #63, 40e104 <wcrtomb@plt+0xb744>
  40e084:	ldr	x9, [x20, #440]
  40e088:	cmp	x9, #0x400
  40e08c:	b.lt	40e0f0 <wcrtomb@plt+0xb730>  // b.tstop
  40e090:	ldr	x8, [x20, #352]
  40e094:	tbnz	x8, #63, 40e0c0 <wcrtomb@plt+0xb700>
  40e098:	mov	x22, #0xffffffffffffffff    	// #-1
  40e09c:	ldr	x8, [x20, #432]
  40e0a0:	ldr	x0, [x8, x22, lsl #3]
  40e0a4:	bl	402770 <free@plt>
  40e0a8:	ldr	x8, [x20, #432]
  40e0ac:	str	xzr, [x8, x22, lsl #3]
  40e0b0:	ldr	x8, [x20, #352]
  40e0b4:	add	x22, x22, #0x1
  40e0b8:	cmp	x22, x8
  40e0bc:	b.lt	40e09c <wcrtomb@plt+0xb6dc>  // b.tstop
  40e0c0:	ldp	x8, x9, [x20, #296]
  40e0c4:	cmp	x9, #0x1
  40e0c8:	b.lt	40e0e8 <wcrtomb@plt+0xb728>  // b.tstop
  40e0cc:	mov	x10, xzr
  40e0d0:	add	x11, x8, #0x48
  40e0d4:	mov	x12, #0xffffffffffffffff    	// #-1
  40e0d8:	add	x10, x10, #0x1
  40e0dc:	cmp	x10, x9
  40e0e0:	str	x12, [x11], #80
  40e0e4:	b.lt	40e0d8 <wcrtomb@plt+0xb718>  // b.tstop
  40e0e8:	mov	x9, xzr
  40e0ec:	str	xzr, [x20, #440]
  40e0f0:	add	x10, x9, #0x1
  40e0f4:	mov	w11, #0x50                  	// #80
  40e0f8:	str	x10, [x20, #440]
  40e0fc:	madd	x10, x19, x11, x8
  40e100:	str	x9, [x10, #72]
  40e104:	ldr	x10, [x20, #432]
  40e108:	ldr	x10, [x10, x21, lsl #3]
  40e10c:	cbz	x10, 40e124 <wcrtomb@plt+0xb764>
  40e110:	ldr	x22, [x10, x9, lsl #3]
  40e114:	tbz	x22, #63, 40e1f4 <wcrtomb@plt+0xb834>
  40e118:	b	40e14c <wcrtomb@plt+0xb78c>
  40e11c:	mov	x22, x21
  40e120:	b	40e1f4 <wcrtomb@plt+0xb834>
  40e124:	mov	w0, #0x2000                	// #8192
  40e128:	bl	412738 <wcrtomb@plt+0xfd78>
  40e12c:	ldr	x8, [x20, #432]
  40e130:	mov	w1, #0xff                  	// #255
  40e134:	mov	w2, #0x2000                	// #8192
  40e138:	str	x0, [x8, x21, lsl #3]
  40e13c:	ldr	x8, [x20, #432]
  40e140:	ldr	x0, [x8, x21, lsl #3]
  40e144:	bl	4025b0 <memset@plt>
  40e148:	ldr	x8, [x20, #296]
  40e14c:	mov	w9, #0x50                  	// #80
  40e150:	madd	x9, x19, x9, x8
  40e154:	add	x22, x20, #0x198
  40e158:	cmn	x21, #0x1
  40e15c:	add	x0, x9, #0x30
  40e160:	b.eq	40e180 <wcrtomb@plt+0xb7c0>  // b.none
  40e164:	mov	w9, #0x50                  	// #80
  40e168:	madd	x8, x21, x9, x8
  40e16c:	add	x1, x8, #0x8
  40e170:	mov	w2, #0xffffffff            	// #-1
  40e174:	mov	x3, x22
  40e178:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40e17c:	b	40e188 <wcrtomb@plt+0xb7c8>
  40e180:	mov	x1, x22
  40e184:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40e188:	ldr	x8, [x20, #416]
  40e18c:	cmp	x8, #0x1
  40e190:	b.lt	40e1bc <wcrtomb@plt+0xb7fc>  // b.tstop
  40e194:	ldr	x9, [x20, #344]
  40e198:	ldr	x10, [x20, #408]
  40e19c:	mov	w11, wzr
  40e1a0:	ldr	x12, [x10], #16
  40e1a4:	subs	x8, x8, #0x1
  40e1a8:	ldr	w12, [x9, x12, lsl #2]
  40e1ac:	orr	w11, w12, w11
  40e1b0:	b.ne	40e1a0 <wcrtomb@plt+0xb7e0>  // b.any
  40e1b4:	eor	w2, w11, #0x7
  40e1b8:	b	40e1c0 <wcrtomb@plt+0xb800>
  40e1bc:	mov	w2, #0x7                   	// #7
  40e1c0:	mov	x0, x20
  40e1c4:	mov	x1, x22
  40e1c8:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40e1cc:	mov	x22, x0
  40e1d0:	mov	x0, x20
  40e1d4:	bl	40ddbc <wcrtomb@plt+0xb3fc>
  40e1d8:	ldr	x9, [x20, #296]
  40e1dc:	ldr	x8, [x20, #432]
  40e1e0:	mov	w10, #0x50                  	// #80
  40e1e4:	madd	x9, x19, x10, x9
  40e1e8:	ldr	x8, [x8, x21, lsl #3]
  40e1ec:	ldr	x9, [x9, #72]
  40e1f0:	str	x22, [x8, x9, lsl #3]
  40e1f4:	mov	x0, x22
  40e1f8:	ldp	x20, x19, [sp, #64]
  40e1fc:	ldp	x22, x21, [sp, #48]
  40e200:	ldp	x24, x23, [sp, #32]
  40e204:	ldr	x25, [sp, #16]
  40e208:	ldp	x29, x30, [sp], #80
  40e20c:	ret
  40e210:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40e214:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40e218:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40e21c:	add	x0, x0, #0x297
  40e220:	add	x1, x1, #0x17e
  40e224:	add	x3, x3, #0x2c4
  40e228:	mov	w2, #0xc93                 	// #3219
  40e22c:	bl	402920 <__assert_fail@plt>
  40e230:	sub	sp, sp, #0x140
  40e234:	stp	x29, x30, [sp, #224]
  40e238:	stp	x28, x27, [sp, #240]
  40e23c:	stp	x26, x25, [sp, #256]
  40e240:	stp	x24, x23, [sp, #272]
  40e244:	stp	x22, x21, [sp, #288]
  40e248:	stp	x20, x19, [sp, #304]
  40e24c:	ldr	x8, [x1, #296]
  40e250:	mov	w9, #0x50                  	// #80
  40e254:	mov	x20, x1
  40e258:	mov	x19, x0
  40e25c:	madd	x8, x0, x9, x8
  40e260:	ldrh	w8, [x8, #34]
  40e264:	mov	w9, #0x178                 	// #376
  40e268:	add	x29, sp, #0xe0
  40e26c:	str	x2, [sp, #48]
  40e270:	cmp	w8, #0x0
  40e274:	mov	w8, #0x170                 	// #368
  40e278:	csel	x8, x8, x9, eq  // eq = none
  40e27c:	ldr	x21, [x1, x8]
  40e280:	ldr	x27, [x21, x0, lsl #3]
  40e284:	cbnz	x27, 40e318 <wcrtomb@plt+0xb958>
  40e288:	ldr	w8, [x20, #360]
  40e28c:	cmp	w8, #0x400
  40e290:	b.lt	40e2e4 <wcrtomb@plt+0xb924>  // b.tstop
  40e294:	ldrsw	x22, [x20, #364]
  40e298:	ldr	x8, [x20, #352]
  40e29c:	cmp	x8, x22
  40e2a0:	b.le	40e2dc <wcrtomb@plt+0xb91c>
  40e2a4:	ldr	x8, [x20, #368]
  40e2a8:	ldr	x0, [x8, x22, lsl #3]
  40e2ac:	bl	402770 <free@plt>
  40e2b0:	ldr	x8, [x20, #376]
  40e2b4:	ldr	x0, [x8, x22, lsl #3]
  40e2b8:	bl	402770 <free@plt>
  40e2bc:	ldr	x8, [x20, #376]
  40e2c0:	str	xzr, [x8, x22, lsl #3]
  40e2c4:	ldr	x8, [x20, #368]
  40e2c8:	str	xzr, [x8, x22, lsl #3]
  40e2cc:	ldr	x8, [x20, #352]
  40e2d0:	add	x22, x22, #0x1
  40e2d4:	cmp	x22, x8
  40e2d8:	b.lt	40e2a4 <wcrtomb@plt+0xb8e4>  // b.tstop
  40e2dc:	mov	w8, wzr
  40e2e0:	str	wzr, [x20, #360]
  40e2e4:	add	w8, w8, #0x1
  40e2e8:	mov	w0, #0x800                 	// #2048
  40e2ec:	str	w8, [x20, #360]
  40e2f0:	bl	412738 <wcrtomb@plt+0xfd78>
  40e2f4:	mov	x9, #0xfffffffffffffffe    	// #-2
  40e2f8:	mov	x27, x0
  40e2fc:	mov	x8, xzr
  40e300:	dup	v0.2d, x9
  40e304:	str	x0, [x21, x19, lsl #3]
  40e308:	str	q0, [x27, x8]
  40e30c:	add	x8, x8, #0x10
  40e310:	cmp	x8, #0x800
  40e314:	b.ne	40e308 <wcrtomb@plt+0xb948>  // b.any
  40e318:	ldr	x8, [x20, #384]
  40e31c:	mov	w9, #0x50                  	// #80
  40e320:	strb	wzr, [x8, x19]
  40e324:	ldr	x8, [x20, #296]
  40e328:	madd	x9, x19, x9, x8
  40e32c:	ldrb	w8, [x9, #32]
  40e330:	ldrh	w9, [x9, #34]
  40e334:	and	w10, w8, w9, lsr #6
  40e338:	tst	w10, #0x7
  40e33c:	b.eq	40e364 <wcrtomb@plt+0xb9a4>  // b.none
  40e340:	ldr	x8, [x20, #384]
  40e344:	ldrb	w9, [x8, x19]
  40e348:	orr	w9, w9, #0x4
  40e34c:	strb	w9, [x8, x19]
  40e350:	ldr	x8, [x20, #296]
  40e354:	mov	w9, #0x50                  	// #80
  40e358:	madd	x9, x19, x9, x8
  40e35c:	ldrb	w8, [x9, #32]
  40e360:	ldrh	w9, [x9, #34]
  40e364:	and	w10, w8, w9, lsr #3
  40e368:	tst	w10, #0x7
  40e36c:	b.eq	40e394 <wcrtomb@plt+0xb9d4>  // b.none
  40e370:	ldr	x8, [x20, #384]
  40e374:	ldrb	w9, [x8, x19]
  40e378:	orr	w9, w9, #0x2
  40e37c:	strb	w9, [x8, x19]
  40e380:	ldr	x8, [x20, #296]
  40e384:	mov	w9, #0x50                  	// #80
  40e388:	madd	x9, x19, x9, x8
  40e38c:	ldrb	w8, [x9, #32]
  40e390:	ldrh	w9, [x9, #34]
  40e394:	and	w8, w9, w8
  40e398:	tst	w8, #0x7
  40e39c:	b.eq	40e3b0 <wcrtomb@plt+0xb9f0>  // b.none
  40e3a0:	ldr	x8, [x20, #384]
  40e3a4:	ldrb	w9, [x8, x19]
  40e3a8:	orr	w9, w9, #0x1
  40e3ac:	strb	w9, [x8, x19]
  40e3b0:	ldr	x21, [x20, #176]
  40e3b4:	lsr	x8, x21, #59
  40e3b8:	cbnz	x8, 40e9b0 <wcrtomb@plt+0xbff0>
  40e3bc:	lsl	x0, x21, #4
  40e3c0:	bl	412738 <wcrtomb@plt+0xfd78>
  40e3c4:	stp	xzr, x21, [x29, #-24]
  40e3c8:	stur	x0, [x29, #-32]
  40e3cc:	ldr	x9, [x20, #296]
  40e3d0:	mov	w8, #0x50                  	// #80
  40e3d4:	madd	x8, x19, x8, x9
  40e3d8:	ldr	x8, [x8, #16]
  40e3dc:	cmp	x8, #0x1
  40e3e0:	b.lt	40e474 <wcrtomb@plt+0xbab4>  // b.tstop
  40e3e4:	ldr	x8, [x20, #320]
  40e3e8:	mov	x21, xzr
  40e3ec:	mov	w22, #0x50                  	// #80
  40e3f0:	mov	w23, #0x18                  	// #24
  40e3f4:	madd	x10, x19, x22, x9
  40e3f8:	ldr	x10, [x10, #8]
  40e3fc:	lsl	x24, x21, #4
  40e400:	ldr	x10, [x10, x24]
  40e404:	madd	x11, x10, x23, x8
  40e408:	ldr	x11, [x11, #8]
  40e40c:	cmp	x11, #0x1
  40e410:	b.lt	40e460 <wcrtomb@plt+0xbaa0>  // b.tstop
  40e414:	mov	x25, xzr
  40e418:	mov	x26, xzr
  40e41c:	mul	x9, x10, x23
  40e420:	ldr	x8, [x8, x9]
  40e424:	sub	x2, x29, #0x20
  40e428:	add	x8, x8, x25
  40e42c:	ldp	x0, x1, [x8]
  40e430:	bl	40d6e8 <wcrtomb@plt+0xad28>
  40e434:	ldr	x9, [x20, #296]
  40e438:	add	x26, x26, #0x1
  40e43c:	add	x25, x25, #0x10
  40e440:	madd	x8, x19, x22, x9
  40e444:	ldr	x10, [x8, #8]
  40e448:	ldr	x8, [x20, #320]
  40e44c:	ldr	x10, [x10, x24]
  40e450:	madd	x11, x10, x23, x8
  40e454:	ldr	x11, [x11, #8]
  40e458:	cmp	x26, x11
  40e45c:	b.lt	40e41c <wcrtomb@plt+0xba5c>  // b.tstop
  40e460:	madd	x10, x19, x22, x9
  40e464:	ldr	x10, [x10, #16]
  40e468:	add	x21, x21, #0x1
  40e46c:	cmp	x21, x10
  40e470:	b.lt	40e3f4 <wcrtomb@plt+0xba34>  // b.tstop
  40e474:	ldr	x21, [x20, #176]
  40e478:	str	x27, [sp, #40]
  40e47c:	lsr	x8, x21, #59
  40e480:	cbnz	x8, 40e9b0 <wcrtomb@plt+0xbff0>
  40e484:	lsl	x0, x21, #4
  40e488:	bl	412738 <wcrtomb@plt+0xfd78>
  40e48c:	ldur	x12, [x29, #-24]
  40e490:	movi	v0.2d, #0xffffffffffffffff
  40e494:	stp	xzr, x21, [x29, #-48]
  40e498:	stur	x0, [x29, #-56]
  40e49c:	cmp	x12, #0x1
  40e4a0:	stp	q0, q0, [x29, #-96]
  40e4a4:	b.lt	40e748 <wcrtomb@plt+0xbd88>  // b.tstop
  40e4a8:	ldr	x9, [sp, #48]
  40e4ac:	ldur	x13, [x29, #-32]
  40e4b0:	mov	w10, #0x1                   	// #1
  40e4b4:	mov	x26, xzr
  40e4b8:	ubfx	x8, x9, #6, #2
  40e4bc:	str	x8, [sp, #88]
  40e4c0:	and	x8, x9, #0xff
  40e4c4:	str	x8, [sp, #72]
  40e4c8:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40e4cc:	ldr	q0, [x8, #288]
  40e4d0:	add	x21, x20, #0x3f0
  40e4d4:	add	x22, x20, #0x3d0
  40e4d8:	add	x28, sp, #0x60
  40e4dc:	lsl	x9, x10, x9
  40e4e0:	sub	x27, x29, #0x60
  40e4e4:	mov	w15, #0x50                  	// #80
  40e4e8:	str	x9, [sp, #80]
  40e4ec:	str	q0, [sp, #16]
  40e4f0:	stp	x13, x12, [sp, #56]
  40e4f4:	add	x8, x13, x26, lsl #4
  40e4f8:	ldr	x9, [x20, #144]
  40e4fc:	ldp	x23, x24, [x8]
  40e500:	ldr	x8, [x9, x23, lsl #3]
  40e504:	cmp	x8, #0xff
  40e508:	b.hi	40e540 <wcrtomb@plt+0xbb80>  // b.pmore
  40e50c:	movi	v0.2d, #0x0
  40e510:	lsr	x9, x8, #3
  40e514:	stp	q0, q0, [sp, #96]
  40e518:	and	x9, x9, #0x1ffffffffffffff8
  40e51c:	ldr	x10, [x28, x9]
  40e520:	ldr	x14, [sp, #72]
  40e524:	mov	w11, #0x1                   	// #1
  40e528:	lsl	x11, x11, x8
  40e52c:	cmp	x8, x14
  40e530:	orr	x8, x10, x11
  40e534:	str	x8, [x28, x9]
  40e538:	cset	w25, eq  // eq = none
  40e53c:	b	40e60c <wcrtomb@plt+0xbc4c>
  40e540:	cmp	x8, #0x114
  40e544:	b.lt	40e574 <wcrtomb@plt+0xbbb4>  // b.tstop
  40e548:	ldr	x9, [x20]
  40e54c:	add	x8, x9, x8, lsl #5
  40e550:	mov	x9, #0xffffffffffffdd80    	// #-8832
  40e554:	add	x8, x8, x9
  40e558:	ldp	q1, q0, [x8]
  40e55c:	ldp	x9, x8, [sp, #80]
  40e560:	stp	q1, q0, [sp, #96]
  40e564:	ldr	x8, [x28, x8, lsl #3]
  40e568:	tst	x8, x9
  40e56c:	cset	w25, ne  // ne = any
  40e570:	b	40e60c <wcrtomb@plt+0xbc4c>
  40e574:	cmp	x8, #0x10a
  40e578:	b.ne	40e73c <wcrtomb@plt+0xbd7c>  // b.any
  40e57c:	ldr	x8, [x20]
  40e580:	ldr	x9, [x20, #24]
  40e584:	add	x8, x8, x9, lsl #5
  40e588:	ldp	q1, q0, [x8]
  40e58c:	ldp	x11, x9, [sp, #80]
  40e590:	stp	q1, q0, [sp, #96]
  40e594:	ldr	x8, [x20, #296]
  40e598:	ldr	x9, [x28, x9, lsl #3]
  40e59c:	madd	x10, x19, x15, x8
  40e5a0:	ldrb	w10, [x10, #32]
  40e5a4:	tst	x9, x11
  40e5a8:	cset	w25, ne  // ne = any
  40e5ac:	and	w9, w24, w10
  40e5b0:	tst	w9, #0x7
  40e5b4:	b.eq	40e60c <wcrtomb@plt+0xbc4c>  // b.none
  40e5b8:	madd	x10, x19, x15, x8
  40e5bc:	ldr	x9, [x10, #56]!
  40e5c0:	cbnz	x9, 40e5f0 <wcrtomb@plt+0xbc30>
  40e5c4:	madd	x8, x19, x15, x8
  40e5c8:	mov	w0, #0x10                  	// #16
  40e5cc:	stp	x10, x8, [sp]
  40e5d0:	bl	412738 <wcrtomb@plt+0xfd78>
  40e5d4:	ldr	x8, [sp, #8]
  40e5d8:	ldr	q0, [sp, #16]
  40e5dc:	mov	w15, #0x50                  	// #80
  40e5e0:	str	x0, [x8, #48]
  40e5e4:	ldr	x8, [sp]
  40e5e8:	str	q0, [x8]
  40e5ec:	ldr	x8, [x20, #296]
  40e5f0:	madd	x8, x19, x15, x8
  40e5f4:	add	x2, x8, #0x30
  40e5f8:	mov	x0, x23
  40e5fc:	mov	x1, x24
  40e600:	bl	40d6e8 <wcrtomb@plt+0xad28>
  40e604:	ldp	x13, x12, [sp, #56]
  40e608:	mov	w15, #0x50                  	// #80
  40e60c:	cmp	w24, #0x1ff
  40e610:	b.ne	40e654 <wcrtomb@plt+0xbc94>  // b.any
  40e614:	cbz	w25, 40e71c <wcrtomb@plt+0xbd5c>
  40e618:	mov	x8, xzr
  40e61c:	ldr	q0, [x28, x8]
  40e620:	ldr	q1, [x27, x8]
  40e624:	and	v0.16b, v1.16b, v0.16b
  40e628:	str	q0, [x27, x8]
  40e62c:	add	x8, x8, #0x10
  40e630:	cmp	x8, #0x20
  40e634:	b.ne	40e61c <wcrtomb@plt+0xbc5c>  // b.any
  40e638:	sub	x2, x29, #0x38
  40e63c:	mov	x0, x23
  40e640:	mov	x1, x24
  40e644:	bl	40d220 <wcrtomb@plt+0xa860>
  40e648:	ldp	x13, x12, [sp, #56]
  40e64c:	mov	w15, #0x50                  	// #80
  40e650:	b	40e73c <wcrtomb@plt+0xbd7c>
  40e654:	ldr	x8, [x20, #296]
  40e658:	lsr	w9, w24, #3
  40e65c:	madd	x8, x19, x15, x8
  40e660:	ldrb	w8, [x8, #32]
  40e664:	and	w8, w8, #0x7
  40e668:	tst	w8, w24, lsr #6
  40e66c:	b.ne	40e690 <wcrtomb@plt+0xbcd0>  // b.any
  40e670:	mov	x10, xzr
  40e674:	ldr	q0, [x21, x10]
  40e678:	ldr	q1, [x28, x10]
  40e67c:	bic	v0.16b, v1.16b, v0.16b
  40e680:	str	q0, [x28, x10]
  40e684:	add	x10, x10, #0x10
  40e688:	cmp	x10, #0x20
  40e68c:	b.ne	40e674 <wcrtomb@plt+0xbcb4>  // b.any
  40e690:	tst	w9, w8
  40e694:	b.ne	40e6b8 <wcrtomb@plt+0xbcf8>  // b.any
  40e698:	mov	x9, xzr
  40e69c:	ldr	q0, [x22, x9]
  40e6a0:	ldr	q1, [x28, x9]
  40e6a4:	bic	v0.16b, v1.16b, v0.16b
  40e6a8:	str	q0, [x28, x9]
  40e6ac:	add	x9, x9, #0x10
  40e6b0:	cmp	x9, #0x20
  40e6b4:	b.ne	40e69c <wcrtomb@plt+0xbcdc>  // b.any
  40e6b8:	tst	w8, w24
  40e6bc:	b.ne	40e6ec <wcrtomb@plt+0xbd2c>  // b.any
  40e6c0:	mov	x8, xzr
  40e6c4:	add	x9, x20, x8
  40e6c8:	ldr	q0, [x9, #976]
  40e6cc:	ldr	q1, [x9, #1008]
  40e6d0:	ldr	q2, [x28, x8]
  40e6d4:	orr	v0.16b, v1.16b, v0.16b
  40e6d8:	and	v0.16b, v2.16b, v0.16b
  40e6dc:	str	q0, [x28, x8]
  40e6e0:	add	x8, x8, #0x10
  40e6e4:	cmp	x8, #0x20
  40e6e8:	b.ne	40e6c4 <wcrtomb@plt+0xbd04>  // b.any
  40e6ec:	ldp	q0, q1, [sp, #96]
  40e6f0:	orr	v0.16b, v1.16b, v0.16b
  40e6f4:	dup	v1.2d, v0.d[1]
  40e6f8:	orr	v0.16b, v0.16b, v1.16b
  40e6fc:	fmov	x8, d0
  40e700:	cbz	x8, 40e73c <wcrtomb@plt+0xbd7c>
  40e704:	ldp	x9, x8, [sp, #80]
  40e708:	ldr	x8, [x28, x8, lsl #3]
  40e70c:	tst	x8, x9
  40e710:	cset	w8, ne  // ne = any
  40e714:	and	w8, w25, w8
  40e718:	tbnz	w8, #0, 40e618 <wcrtomb@plt+0xbc58>
  40e71c:	mov	x8, xzr
  40e720:	ldr	q0, [x28, x8]
  40e724:	ldr	q1, [x27, x8]
  40e728:	bic	v0.16b, v1.16b, v0.16b
  40e72c:	str	q0, [x27, x8]
  40e730:	add	x8, x8, #0x10
  40e734:	cmp	x8, #0x20
  40e738:	b.ne	40e720 <wcrtomb@plt+0xbd60>  // b.any
  40e73c:	add	x26, x26, #0x1
  40e740:	cmp	x26, x12
  40e744:	b.lt	40e4f4 <wcrtomb@plt+0xbb34>  // b.tstop
  40e748:	ldr	x21, [x20, #176]
  40e74c:	lsr	x8, x21, #59
  40e750:	cbnz	x8, 40e9b0 <wcrtomb@plt+0xbff0>
  40e754:	lsl	x0, x21, #4
  40e758:	bl	412738 <wcrtomb@plt+0xfd78>
  40e75c:	stp	xzr, x21, [sp, #104]
  40e760:	ldur	x8, [x29, #-48]
  40e764:	str	x0, [sp, #96]
  40e768:	ldrb	w9, [x20, #328]
  40e76c:	ldr	x26, [sp, #40]
  40e770:	cmp	x8, #0x0
  40e774:	b.le	40e85c <wcrtomb@plt+0xbe9c>
  40e778:	cbz	w9, 40e7dc <wcrtomb@plt+0xbe1c>
  40e77c:	ldrb	w9, [x20, #1048]
  40e780:	cmp	w9, #0x1
  40e784:	cset	w11, ne  // ne = any
  40e788:	cbz	w9, 40e7b4 <wcrtomb@plt+0xbdf4>
  40e78c:	ldr	x9, [x20, #280]
  40e790:	ldur	x10, [x29, #-56]
  40e794:	mov	w12, #0x1                   	// #1
  40e798:	ldr	x11, [x10], #16
  40e79c:	ldrb	w13, [x9, x11]
  40e7a0:	and	w11, w13, #0x1
  40e7a4:	tbz	w13, #0, 40e7b4 <wcrtomb@plt+0xbdf4>
  40e7a8:	cmp	x12, x8
  40e7ac:	add	x12, x12, #0x1
  40e7b0:	b.lt	40e798 <wcrtomb@plt+0xbdd8>  // b.tstop
  40e7b4:	cbz	w11, 40e7dc <wcrtomb@plt+0xbe1c>
  40e7b8:	ldr	x8, [x20, #296]
  40e7bc:	sub	x1, x29, #0x38
  40e7c0:	add	x3, sp, #0x60
  40e7c4:	mov	w2, #0xffffffff            	// #-1
  40e7c8:	add	x0, x8, #0x8
  40e7cc:	bl	40d4bc <wcrtomb@plt+0xaafc>
  40e7d0:	add	x0, sp, #0x60
  40e7d4:	sub	x1, x29, #0x38
  40e7d8:	bl	40d18c <wcrtomb@plt+0xa7cc>
  40e7dc:	mov	x8, xzr
  40e7e0:	mov	w21, wzr
  40e7e4:	sub	x9, x29, #0x60
  40e7e8:	add	x11, x20, x8
  40e7ec:	ldr	x10, [x9, x8]
  40e7f0:	ldr	x12, [x11, #1008]
  40e7f4:	ldr	x11, [x11, #976]
  40e7f8:	orr	w13, w21, #0x4
  40e7fc:	add	x8, x8, #0x8
  40e800:	tst	x12, x10
  40e804:	csel	w13, w21, w13, eq  // eq = none
  40e808:	orr	x12, x11, x12
  40e80c:	tst	x11, x10
  40e810:	orr	w11, w13, #0x2
  40e814:	csel	w11, w13, w11, eq  // eq = none
  40e818:	bics	xzr, x10, x12
  40e81c:	cset	w10, ne  // ne = any
  40e820:	cmp	x8, #0x20
  40e824:	orr	w21, w11, w10
  40e828:	b.ne	40e7e8 <wcrtomb@plt+0xbe28>  // b.any
  40e82c:	ldur	x8, [x29, #-48]
  40e830:	cmp	x8, #0x1
  40e834:	b.lt	40e874 <wcrtomb@plt+0xbeb4>  // b.tstop
  40e838:	ldr	x9, [x20, #344]
  40e83c:	ldur	x10, [x29, #-56]
  40e840:	mov	w22, wzr
  40e844:	ldr	x11, [x10], #16
  40e848:	subs	x8, x8, #0x1
  40e84c:	ldr	w11, [x9, x11, lsl #2]
  40e850:	orr	w22, w11, w22
  40e854:	b.ne	40e844 <wcrtomb@plt+0xbe84>  // b.any
  40e858:	b	40e878 <wcrtomb@plt+0xbeb8>
  40e85c:	cbz	w9, 40e9a0 <wcrtomb@plt+0xbfe0>
  40e860:	ldrsw	x8, [x20, #364]
  40e864:	ldr	x23, [x20, #400]
  40e868:	mov	x24, xzr
  40e86c:	sub	x25, x8, #0x1
  40e870:	b	40e8e0 <wcrtomb@plt+0xbf20>
  40e874:	mov	w22, wzr
  40e878:	bics	wzr, w21, w22
  40e87c:	b.eq	40e898 <wcrtomb@plt+0xbed8>  // b.none
  40e880:	eor	w2, w22, #0x7
  40e884:	sub	x1, x29, #0x38
  40e888:	mov	x0, x20
  40e88c:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40e890:	mov	x23, x0
  40e894:	b	40e89c <wcrtomb@plt+0xbedc>
  40e898:	mov	x23, #0xffffffffffffffff    	// #-1
  40e89c:	and	w21, w22, w21
  40e8a0:	mov	x24, x23
  40e8a4:	tbz	w21, #2, 40e8bc <wcrtomb@plt+0xbefc>
  40e8a8:	sub	x1, x29, #0x38
  40e8ac:	mov	w2, #0x4                   	// #4
  40e8b0:	mov	x0, x20
  40e8b4:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40e8b8:	mov	x24, x0
  40e8bc:	mov	x25, x23
  40e8c0:	tbz	w21, #1, 40e8d8 <wcrtomb@plt+0xbf18>
  40e8c4:	sub	x1, x29, #0x38
  40e8c8:	mov	w2, #0x2                   	// #2
  40e8cc:	mov	x0, x20
  40e8d0:	bl	40d28c <wcrtomb@plt+0xa8cc>
  40e8d4:	mov	x25, x0
  40e8d8:	mov	x0, x20
  40e8dc:	bl	40ddbc <wcrtomb@plt+0xb3fc>
  40e8e0:	mov	x8, xzr
  40e8e4:	add	x9, x20, #0x1cc
  40e8e8:	sub	x10, x29, #0x60
  40e8ec:	ubfx	x11, x8, #6, #26
  40e8f0:	ldr	x11, [x10, x11, lsl #3]
  40e8f4:	lsr	x11, x11, x8
  40e8f8:	tbz	w11, #0, 40e920 <wcrtomb@plt+0xbf60>
  40e8fc:	ldrb	w12, [x9, x8]
  40e900:	mov	x11, x24
  40e904:	cmp	w12, #0x4
  40e908:	b.eq	40e91c <wcrtomb@plt+0xbf5c>  // b.none
  40e90c:	cmp	w12, #0x2
  40e910:	mov	x11, x25
  40e914:	b.eq	40e91c <wcrtomb@plt+0xbf5c>  // b.none
  40e918:	mov	x11, x23
  40e91c:	str	x11, [x26, x8, lsl #3]
  40e920:	add	x8, x8, #0x1
  40e924:	cmp	x8, #0x100
  40e928:	b.ne	40e8ec <wcrtomb@plt+0xbf2c>  // b.any
  40e92c:	ldur	x0, [x29, #-56]
  40e930:	bl	402770 <free@plt>
  40e934:	ldur	x0, [x29, #-32]
  40e938:	bl	402770 <free@plt>
  40e93c:	ldr	x0, [sp, #96]
  40e940:	bl	402770 <free@plt>
  40e944:	ldrb	w8, [x20, #459]
  40e948:	sub	x10, x29, #0x60
  40e94c:	lsr	x9, x8, #3
  40e950:	and	x9, x9, #0x18
  40e954:	ldr	x9, [x10, x9]
  40e958:	lsr	x9, x9, x8
  40e95c:	tbz	w9, #0, 40e974 <wcrtomb@plt+0xbfb4>
  40e960:	ldr	x9, [x26, x8, lsl #3]
  40e964:	ldr	x10, [x20, #392]
  40e968:	mov	x11, #0xffffffffffffffff    	// #-1
  40e96c:	str	x9, [x10, x19, lsl #3]
  40e970:	str	x11, [x26, x8, lsl #3]
  40e974:	ldr	x8, [sp, #48]
  40e978:	ldp	x20, x19, [sp, #304]
  40e97c:	ldp	x22, x21, [sp, #288]
  40e980:	ldp	x24, x23, [sp, #272]
  40e984:	and	x8, x8, #0xff
  40e988:	ldr	x0, [x26, x8, lsl #3]
  40e98c:	ldp	x26, x25, [sp, #256]
  40e990:	ldp	x28, x27, [sp, #240]
  40e994:	ldp	x29, x30, [sp, #224]
  40e998:	add	sp, sp, #0x140
  40e99c:	ret
  40e9a0:	mov	x25, #0xffffffffffffffff    	// #-1
  40e9a4:	mov	x24, #0xffffffffffffffff    	// #-1
  40e9a8:	mov	x23, #0xffffffffffffffff    	// #-1
  40e9ac:	b	40e8e0 <wcrtomb@plt+0xbf20>
  40e9b0:	bl	412920 <wcrtomb@plt+0xff60>
  40e9b4:	sub	sp, sp, #0x40
  40e9b8:	stp	x29, x30, [sp, #32]
  40e9bc:	stp	x20, x19, [sp, #48]
  40e9c0:	add	x29, sp, #0x20
  40e9c4:	mov	x19, x0
  40e9c8:	bl	402780 <__ctype_get_mb_cur_max@plt>
  40e9cc:	cmp	x0, #0x1
  40e9d0:	cset	w8, hi  // hi = pmore
  40e9d4:	strb	w8, [x19]
  40e9d8:	b.hi	40ea10 <wcrtomb@plt+0xc050>  // b.pmore
  40e9dc:	mov	w20, #0x1                   	// #1
  40e9e0:	cmp	w20, #0x100
  40e9e4:	b.eq	40ea18 <wcrtomb@plt+0xc058>  // b.none
  40e9e8:	sub	w8, w20, #0x1
  40e9ec:	add	x0, sp, #0x10
  40e9f0:	sub	x1, x29, #0x4
  40e9f4:	strb	wzr, [sp, #17]
  40e9f8:	sturb	w20, [x29, #-4]
  40e9fc:	strb	w8, [sp, #16]
  40ea00:	sturb	wzr, [x29, #-3]
  40ea04:	bl	4028b0 <strcoll@plt>
  40ea08:	add	w20, w20, #0x1
  40ea0c:	tbnz	w0, #31, 40e9e0 <wcrtomb@plt+0xc020>
  40ea10:	mov	w8, wzr
  40ea14:	b	40ea1c <wcrtomb@plt+0xc05c>
  40ea18:	mov	w8, #0x1                   	// #1
  40ea1c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40ea20:	add	x1, x1, #0x33e
  40ea24:	sub	x0, x29, #0x4
  40ea28:	add	x3, sp, #0x10
  40ea2c:	mov	w2, #0x2                   	// #2
  40ea30:	strb	w8, [x19, #1]
  40ea34:	str	xzr, [sp, #16]
  40ea38:	bl	414ca4 <wcrtomb@plt+0x122e4>
  40ea3c:	ldur	w8, [x29, #-4]
  40ea40:	cmp	x0, #0x2
  40ea44:	cset	w9, eq  // eq = none
  40ea48:	mov	x20, xzr
  40ea4c:	cmp	w8, #0x100
  40ea50:	cset	w8, eq  // eq = none
  40ea54:	and	w8, w9, w8
  40ea58:	strb	w8, [x19, #2]
  40ea5c:	add	x19, x19, #0x104
  40ea60:	sub	x0, x29, #0x4
  40ea64:	add	x1, sp, #0xc
  40ea68:	add	x3, sp, #0x10
  40ea6c:	mov	w2, #0x1                   	// #1
  40ea70:	strb	w20, [sp, #12]
  40ea74:	str	xzr, [sp, #16]
  40ea78:	bl	414ca4 <wcrtomb@plt+0x122e4>
  40ea7c:	add	x8, x19, x20
  40ea80:	cmp	x0, #0x2
  40ea84:	sub	x8, x8, #0x101
  40ea88:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  40ea8c:	strb	w9, [x8]
  40ea90:	ldur	w8, [x29, #-4]
  40ea94:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  40ea98:	str	w8, [x19, x20, lsl #2]
  40ea9c:	add	x20, x20, #0x1
  40eaa0:	cmp	x20, #0x100
  40eaa4:	b.ne	40ea60 <wcrtomb@plt+0xc0a0>  // b.any
  40eaa8:	ldp	x20, x19, [sp, #48]
  40eaac:	ldp	x29, x30, [sp, #32]
  40eab0:	add	sp, sp, #0x40
  40eab4:	ret
  40eab8:	stp	x29, x30, [sp, #-80]!
  40eabc:	stp	x26, x25, [sp, #16]
  40eac0:	stp	x24, x23, [sp, #32]
  40eac4:	stp	x22, x21, [sp, #48]
  40eac8:	stp	x20, x19, [sp, #64]
  40eacc:	mov	x29, sp
  40ead0:	mov	x19, x1
  40ead4:	mov	w20, w0
  40ead8:	bl	4028d0 <towupper@plt>
  40eadc:	mov	w21, w0
  40eae0:	bl	402970 <towlower@plt>
  40eae4:	cmp	w21, w20
  40eae8:	mov	w22, w0
  40eaec:	b.ne	40eaf8 <wcrtomb@plt+0xc138>  // b.any
  40eaf0:	mov	w23, wzr
  40eaf4:	b	40eb00 <wcrtomb@plt+0xc140>
  40eaf8:	mov	w23, #0x1                   	// #1
  40eafc:	str	w21, [x19]
  40eb00:	cmp	w22, w21
  40eb04:	b.eq	40eb2c <wcrtomb@plt+0xc16c>  // b.none
  40eb08:	cmp	w22, w20
  40eb0c:	b.eq	40eb2c <wcrtomb@plt+0xc16c>  // b.none
  40eb10:	mov	w0, w22
  40eb14:	bl	4028d0 <towupper@plt>
  40eb18:	cmp	w0, w21
  40eb1c:	b.ne	40eb2c <wcrtomb@plt+0xc16c>  // b.any
  40eb20:	add	w8, w23, #0x1
  40eb24:	str	w22, [x19, w23, uxtw #2]
  40eb28:	mov	w23, w8
  40eb2c:	adrp	x26, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40eb30:	mov	x25, xzr
  40eb34:	add	x26, x26, #0x318
  40eb38:	ldrsh	w24, [x26, x25]
  40eb3c:	cmp	w24, w20
  40eb40:	b.eq	40eb70 <wcrtomb@plt+0xc1b0>  // b.none
  40eb44:	cmp	w22, w24
  40eb48:	b.eq	40eb70 <wcrtomb@plt+0xc1b0>  // b.none
  40eb4c:	cmp	w21, w24
  40eb50:	b.eq	40eb70 <wcrtomb@plt+0xc1b0>  // b.none
  40eb54:	mov	w0, w24
  40eb58:	bl	4028d0 <towupper@plt>
  40eb5c:	cmp	w0, w21
  40eb60:	b.ne	40eb70 <wcrtomb@plt+0xc1b0>  // b.any
  40eb64:	add	w8, w23, #0x1
  40eb68:	str	w24, [x19, w23, sxtw #2]
  40eb6c:	mov	w23, w8
  40eb70:	add	x25, x25, #0x2
  40eb74:	cmp	x25, #0x26
  40eb78:	b.ne	40eb38 <wcrtomb@plt+0xc178>  // b.any
  40eb7c:	mov	w0, w23
  40eb80:	ldp	x20, x19, [sp, #64]
  40eb84:	ldp	x22, x21, [sp, #48]
  40eb88:	ldp	x24, x23, [sp, #32]
  40eb8c:	ldp	x26, x25, [sp, #16]
  40eb90:	ldp	x29, x30, [sp], #80
  40eb94:	ret
  40eb98:	stp	x29, x30, [sp, #-32]!
  40eb9c:	str	x19, [sp, #16]
  40eba0:	mov	x29, sp
  40eba4:	mov	x19, x0
  40eba8:	bl	4207c0 <_obstack_memory_used@@Base+0xb78c>
  40ebac:	ldrb	w8, [x0]
  40ebb0:	cmp	w8, #0x0
  40ebb4:	csel	x19, x19, x0, eq  // eq = none
  40ebb8:	mov	x0, x19
  40ebbc:	bl	420808 <_obstack_memory_used@@Base+0xb7d4>
  40ebc0:	ldrb	w8, [x19, x0]
  40ebc4:	strb	wzr, [x19, x0]
  40ebc8:	ldr	x19, [sp, #16]
  40ebcc:	cmp	w8, #0x0
  40ebd0:	cset	w0, ne  // ne = any
  40ebd4:	ldp	x29, x30, [sp], #32
  40ebd8:	ret
  40ebdc:	stp	x29, x30, [sp, #-32]!
  40ebe0:	stp	x20, x19, [sp, #16]
  40ebe4:	mov	x20, x0
  40ebe8:	mov	w0, #0x10                  	// #16
  40ebec:	mov	x29, sp
  40ebf0:	mov	x19, x1
  40ebf4:	bl	412738 <wcrtomb@plt+0xfd78>
  40ebf8:	ldr	x8, [x20, #8]
  40ebfc:	stp	x8, x19, [x0]
  40ec00:	str	x0, [x20, #8]
  40ec04:	ldp	x20, x19, [sp, #16]
  40ec08:	ldp	x29, x30, [sp], #32
  40ec0c:	ret
  40ec10:	ldrb	w9, [x0], #1
  40ec14:	mov	w8, #0x1                   	// #1
  40ec18:	cmp	w9, #0x3e
  40ec1c:	b.gt	40ec44 <wcrtomb@plt+0xc284>
  40ec20:	cmp	w9, #0x29
  40ec24:	b.gt	40ec68 <wcrtomb@plt+0xc2a8>
  40ec28:	sub	w8, w9, #0x28
  40ec2c:	cmp	w8, #0x2
  40ec30:	b.cc	40ec9c <wcrtomb@plt+0xc2dc>  // b.lo, b.ul, b.last
  40ec34:	cmp	w9, #0x21
  40ec38:	b.eq	40eca4 <wcrtomb@plt+0xc2e4>  // b.none
  40ec3c:	cbnz	w9, 40ec10 <wcrtomb@plt+0xc250>
  40ec40:	b	40ece4 <wcrtomb@plt+0xc324>
  40ec44:	cmp	w9, #0x5b
  40ec48:	b.gt	40ec84 <wcrtomb@plt+0xc2c4>
  40ec4c:	cmp	w9, #0x40
  40ec50:	b.eq	40eca4 <wcrtomb@plt+0xc2e4>  // b.none
  40ec54:	cmp	w9, #0x3f
  40ec58:	b.eq	40ece8 <wcrtomb@plt+0xc328>  // b.none
  40ec5c:	cmp	w9, #0x5b
  40ec60:	b.ne	40ec10 <wcrtomb@plt+0xc250>  // b.any
  40ec64:	b	40ece8 <wcrtomb@plt+0xc328>
  40ec68:	cmp	w9, #0x2b
  40ec6c:	b.eq	40eca4 <wcrtomb@plt+0xc2e4>  // b.none
  40ec70:	cmp	w9, #0x2e
  40ec74:	b.eq	40ec9c <wcrtomb@plt+0xc2dc>  // b.none
  40ec78:	cmp	w9, #0x2a
  40ec7c:	b.ne	40ec10 <wcrtomb@plt+0xc250>  // b.any
  40ec80:	b	40ece8 <wcrtomb@plt+0xc328>
  40ec84:	cmp	w9, #0x5c
  40ec88:	b.eq	40ecb8 <wcrtomb@plt+0xc2f8>  // b.none
  40ec8c:	cmp	w9, #0x7d
  40ec90:	b.eq	40ec9c <wcrtomb@plt+0xc2dc>  // b.none
  40ec94:	cmp	w9, #0x7b
  40ec98:	b.ne	40ec10 <wcrtomb@plt+0xc250>  // b.any
  40ec9c:	tbz	w1, #27, 40ec10 <wcrtomb@plt+0xc250>
  40eca0:	b	40ecdc <wcrtomb@plt+0xc31c>
  40eca4:	tbz	w1, #5, 40ec10 <wcrtomb@plt+0xc250>
  40eca8:	ldrb	w8, [x0]
  40ecac:	cmp	w8, #0x28
  40ecb0:	b.ne	40ec10 <wcrtomb@plt+0xc250>  // b.any
  40ecb4:	b	40ecdc <wcrtomb@plt+0xc31c>
  40ecb8:	tbnz	w1, #27, 40ec10 <wcrtomb@plt+0xc250>
  40ecbc:	tbnz	w1, #1, 40ecd0 <wcrtomb@plt+0xc310>
  40ecc0:	ldrb	w8, [x0]
  40ecc4:	cmp	w8, #0x0
  40ecc8:	cset	w8, ne  // ne = any
  40eccc:	b	40ecd4 <wcrtomb@plt+0xc314>
  40ecd0:	mov	w8, wzr
  40ecd4:	add	x0, x0, x8
  40ecd8:	b	40ec10 <wcrtomb@plt+0xc250>
  40ecdc:	mov	w8, #0x1                   	// #1
  40ece0:	b	40ece8 <wcrtomb@plt+0xc328>
  40ece4:	mov	w8, wzr
  40ece8:	mov	w0, w8
  40ecec:	ret
  40ecf0:	mov	w0, #0x10                  	// #16
  40ecf4:	b	412888 <wcrtomb@plt+0xfec8>
  40ecf8:	stp	x29, x30, [sp, #-64]!
  40ecfc:	stp	x22, x21, [sp, #32]
  40ed00:	stp	x20, x19, [sp, #48]
  40ed04:	ldr	x21, [x0]
  40ed08:	mov	x19, x0
  40ed0c:	str	x23, [sp, #16]
  40ed10:	mov	x29, sp
  40ed14:	cbz	x21, 40ed8c <wcrtomb@plt+0xc3cc>
  40ed18:	mov	x20, x21
  40ed1c:	ldr	w8, [x21, #8]
  40ed20:	ldr	x21, [x21]
  40ed24:	cbz	w8, 40ed78 <wcrtomb@plt+0xc3b8>
  40ed28:	cmp	w8, #0x1
  40ed2c:	b.ne	40ed80 <wcrtomb@plt+0xc3c0>  // b.any
  40ed30:	ldr	x8, [x20, #32]
  40ed34:	ldr	x0, [x20, #16]
  40ed38:	cbz	x8, 40ed70 <wcrtomb@plt+0xc3b0>
  40ed3c:	mov	x22, xzr
  40ed40:	mov	x23, xzr
  40ed44:	add	x9, x0, x22
  40ed48:	ldrb	w10, [x9, #3]
  40ed4c:	tbz	w10, #3, 40ed60 <wcrtomb@plt+0xc3a0>
  40ed50:	add	x0, x9, #0x8
  40ed54:	bl	416150 <_obstack_memory_used@@Base+0x111c>
  40ed58:	ldr	x8, [x20, #32]
  40ed5c:	ldr	x0, [x20, #16]
  40ed60:	add	x23, x23, #0x1
  40ed64:	cmp	x23, x8
  40ed68:	add	x22, x22, #0x48
  40ed6c:	b.cc	40ed44 <wcrtomb@plt+0xc384>  // b.lo, b.ul, b.last
  40ed70:	bl	402770 <free@plt>
  40ed74:	b	40ed80 <wcrtomb@plt+0xc3c0>
  40ed78:	ldr	x0, [x20, #16]
  40ed7c:	bl	40fec8 <wcrtomb@plt+0xd508>
  40ed80:	mov	x0, x20
  40ed84:	bl	402770 <free@plt>
  40ed88:	cbnz	x21, 40ed18 <wcrtomb@plt+0xc358>
  40ed8c:	ldr	x20, [x19, #8]
  40ed90:	cbz	x20, 40edac <wcrtomb@plt+0xc3ec>
  40ed94:	ldp	x21, x0, [x20]
  40ed98:	bl	402770 <free@plt>
  40ed9c:	mov	x0, x20
  40eda0:	bl	402770 <free@plt>
  40eda4:	mov	x20, x21
  40eda8:	cbnz	x21, 40ed94 <wcrtomb@plt+0xc3d4>
  40edac:	mov	x0, x19
  40edb0:	ldp	x20, x19, [sp, #48]
  40edb4:	ldp	x22, x21, [sp, #32]
  40edb8:	ldr	x23, [sp, #16]
  40edbc:	ldp	x29, x30, [sp], #64
  40edc0:	b	402770 <free@plt>
  40edc4:	stp	x29, x30, [sp, #-48]!
  40edc8:	adrp	x8, 402000 <mbrtowc@plt-0x310>
  40edcc:	adrp	x9, 40e000 <wcrtomb@plt+0xb640>
  40edd0:	add	x8, x8, #0x7b0
  40edd4:	add	x9, x9, #0xe68
  40edd8:	tst	w2, #0x10000000
  40eddc:	stp	x22, x21, [sp, #16]
  40ede0:	csel	x22, x9, x8, eq  // eq = none
  40ede4:	stp	x20, x19, [sp, #32]
  40ede8:	mov	x29, sp
  40edec:	mov	w19, w2
  40edf0:	mov	x21, x1
  40edf4:	mov	x20, x0
  40edf8:	blr	x22
  40edfc:	cmp	w0, #0x0
  40ee00:	cset	w8, eq  // eq = none
  40ee04:	tbnz	w19, #30, 40ee54 <wcrtomb@plt+0xc494>
  40ee08:	ldrb	w9, [x21]
  40ee0c:	cbz	w9, 40ee54 <wcrtomb@plt+0xc494>
  40ee10:	cbz	w0, 40ee54 <wcrtomb@plt+0xc494>
  40ee14:	add	x21, x21, #0x1
  40ee18:	and	w9, w9, #0xff
  40ee1c:	cmp	w9, #0x2f
  40ee20:	b.ne	40ee48 <wcrtomb@plt+0xc488>  // b.any
  40ee24:	ldrb	w9, [x21]
  40ee28:	cmp	w9, #0x2f
  40ee2c:	b.eq	40ee48 <wcrtomb@plt+0xc488>  // b.none
  40ee30:	mov	x0, x20
  40ee34:	mov	x1, x21
  40ee38:	mov	w2, w19
  40ee3c:	blr	x22
  40ee40:	cmp	w0, #0x0
  40ee44:	cset	w8, eq  // eq = none
  40ee48:	ldrb	w9, [x21], #1
  40ee4c:	cbz	w9, 40ee54 <wcrtomb@plt+0xc494>
  40ee50:	tbz	w8, #0, 40ee18 <wcrtomb@plt+0xc458>
  40ee54:	ldp	x20, x19, [sp, #32]
  40ee58:	ldp	x22, x21, [sp, #16]
  40ee5c:	and	w0, w8, #0x1
  40ee60:	ldp	x29, x30, [sp], #48
  40ee64:	ret
  40ee68:	stp	x29, x30, [sp, #-64]!
  40ee6c:	stp	x20, x19, [sp, #48]
  40ee70:	mov	x20, x1
  40ee74:	mov	x19, x0
  40ee78:	str	x23, [sp, #16]
  40ee7c:	stp	x22, x21, [sp, #32]
  40ee80:	mov	x29, sp
  40ee84:	tbnz	w2, #3, 40eea8 <wcrtomb@plt+0xc4e8>
  40ee88:	mov	x0, x19
  40ee8c:	mov	x1, x20
  40ee90:	tbz	w2, #4, 40ef18 <wcrtomb@plt+0xc558>
  40ee94:	ldp	x20, x19, [sp, #48]
  40ee98:	ldp	x22, x21, [sp, #32]
  40ee9c:	ldr	x23, [sp, #16]
  40eea0:	ldp	x29, x30, [sp], #64
  40eea4:	b	4105bc <wcrtomb@plt+0xdbfc>
  40eea8:	tbz	w2, #4, 40ef2c <wcrtomb@plt+0xc56c>
  40eeac:	mov	x0, x20
  40eeb0:	bl	4128ec <wcrtomb@plt+0xff2c>
  40eeb4:	mov	w1, #0x2f                  	// #47
  40eeb8:	mov	x20, x0
  40eebc:	mov	w23, #0x2f                  	// #47
  40eec0:	bl	402790 <strchr@plt>
  40eec4:	cbz	x0, 40eefc <wcrtomb@plt+0xc53c>
  40eec8:	mov	x22, x0
  40eecc:	mov	x0, x19
  40eed0:	mov	x1, x20
  40eed4:	strb	wzr, [x22]
  40eed8:	bl	4105bc <wcrtomb@plt+0xdbfc>
  40eedc:	cmp	w0, #0x1
  40eee0:	b.lt	40ef08 <wcrtomb@plt+0xc548>  // b.tstop
  40eee4:	strb	w23, [x22], #1
  40eee8:	mov	w1, #0x2f                  	// #47
  40eeec:	mov	x0, x22
  40eef0:	bl	402790 <strchr@plt>
  40eef4:	mov	x22, x0
  40eef8:	cbnz	x0, 40eecc <wcrtomb@plt+0xc50c>
  40eefc:	mov	x0, x19
  40ef00:	mov	x1, x20
  40ef04:	bl	4105bc <wcrtomb@plt+0xdbfc>
  40ef08:	mov	w21, w0
  40ef0c:	mov	x0, x20
  40ef10:	bl	402770 <free@plt>
  40ef14:	b	40ef5c <wcrtomb@plt+0xc59c>
  40ef18:	ldp	x20, x19, [sp, #48]
  40ef1c:	ldp	x22, x21, [sp, #32]
  40ef20:	ldr	x23, [sp, #16]
  40ef24:	ldp	x29, x30, [sp], #64
  40ef28:	b	402750 <strcmp@plt>
  40ef2c:	mov	x0, x19
  40ef30:	bl	402380 <strlen@plt>
  40ef34:	mov	x22, x0
  40ef38:	mov	x0, x19
  40ef3c:	mov	x1, x20
  40ef40:	mov	x2, x22
  40ef44:	bl	402560 <strncmp@plt>
  40ef48:	mov	w21, w0
  40ef4c:	cbnz	w0, 40ef5c <wcrtomb@plt+0xc59c>
  40ef50:	ldrb	w8, [x20, x22]
  40ef54:	cmp	w8, #0x2f
  40ef58:	csel	w21, wzr, w8, eq  // eq = none
  40ef5c:	mov	w0, w21
  40ef60:	ldp	x20, x19, [sp, #48]
  40ef64:	ldp	x22, x21, [sp, #32]
  40ef68:	ldr	x23, [sp, #16]
  40ef6c:	ldp	x29, x30, [sp], #64
  40ef70:	ret
  40ef74:	stp	x29, x30, [sp, #-64]!
  40ef78:	stp	x24, x23, [sp, #16]
  40ef7c:	stp	x22, x21, [sp, #32]
  40ef80:	stp	x20, x19, [sp, #48]
  40ef84:	ldr	x8, [x0]
  40ef88:	mov	x29, sp
  40ef8c:	cbz	x8, 40f0ac <wcrtomb@plt+0xc6ec>
  40ef90:	mov	x20, x1
  40ef94:	mov	x19, xzr
  40ef98:	mov	x23, x8
  40ef9c:	ldr	w8, [x8, #8]
  40efa0:	cbz	w8, 40f004 <wcrtomb@plt+0xc644>
  40efa4:	ldr	x22, [x23, #32]
  40efa8:	cbz	x22, 40eff8 <wcrtomb@plt+0xc638>
  40efac:	ldr	x8, [x23, #16]
  40efb0:	add	x21, x8, #0x8
  40efb4:	ldur	w2, [x21, #-8]
  40efb8:	tbnz	w2, #27, 40efd0 <wcrtomb@plt+0xc610>
  40efbc:	ldr	x0, [x21]
  40efc0:	mov	x1, x20
  40efc4:	bl	40edc4 <wcrtomb@plt+0xc404>
  40efc8:	tbz	w0, #0, 40efec <wcrtomb@plt+0xc62c>
  40efcc:	b	40f088 <wcrtomb@plt+0xc6c8>
  40efd0:	mov	x0, x21
  40efd4:	mov	x1, x20
  40efd8:	mov	x2, xzr
  40efdc:	mov	x3, xzr
  40efe0:	mov	w4, wzr
  40efe4:	bl	416314 <_obstack_memory_used@@Base+0x12e0>
  40efe8:	cbz	w0, 40f088 <wcrtomb@plt+0xc6c8>
  40efec:	subs	x22, x22, #0x1
  40eff0:	add	x21, x21, #0x48
  40eff4:	b.ne	40efb4 <wcrtomb@plt+0xc5f4>  // b.any
  40eff8:	ldr	x8, [x23]
  40effc:	cbnz	x8, 40ef98 <wcrtomb@plt+0xc5d8>
  40f000:	b	40f0c4 <wcrtomb@plt+0xc704>
  40f004:	cbnz	x19, 40f01c <wcrtomb@plt+0xc65c>
  40f008:	mov	x0, x20
  40f00c:	bl	402380 <strlen@plt>
  40f010:	add	x0, x0, #0x1
  40f014:	bl	412738 <wcrtomb@plt+0xfd78>
  40f018:	mov	x19, x0
  40f01c:	ldr	w24, [x23, #12]
  40f020:	ldr	x21, [x23, #16]
  40f024:	mov	x22, x20
  40f028:	mov	x0, x19
  40f02c:	mov	x1, x22
  40f030:	bl	4027e0 <strcpy@plt>
  40f034:	mov	x0, x21
  40f038:	mov	x1, x19
  40f03c:	bl	40f930 <wcrtomb@plt+0xcf70>
  40f040:	cbnz	x0, 40f088 <wcrtomb@plt+0xc6c8>
  40f044:	tbnz	w24, #3, 40f064 <wcrtomb@plt+0xc6a4>
  40f048:	tbnz	w24, #30, 40eff8 <wcrtomb@plt+0xc638>
  40f04c:	mov	w1, #0x2f                  	// #47
  40f050:	mov	x0, x22
  40f054:	bl	402790 <strchr@plt>
  40f058:	add	x22, x0, #0x1
  40f05c:	cbnz	x0, 40f028 <wcrtomb@plt+0xc668>
  40f060:	b	40eff8 <wcrtomb@plt+0xc638>
  40f064:	mov	w1, #0x2f                  	// #47
  40f068:	mov	x0, x19
  40f06c:	bl	402670 <strrchr@plt>
  40f070:	cbz	x0, 40f048 <wcrtomb@plt+0xc688>
  40f074:	strb	wzr, [x0]
  40f078:	mov	x0, x21
  40f07c:	mov	x1, x19
  40f080:	bl	40f930 <wcrtomb@plt+0xcf70>
  40f084:	cbz	x0, 40f064 <wcrtomb@plt+0xc6a4>
  40f088:	mov	w20, wzr
  40f08c:	mov	x0, x19
  40f090:	bl	402770 <free@plt>
  40f094:	ldr	w8, [x23, #12]
  40f098:	mov	w9, #0x1                   	// #1
  40f09c:	bic	w8, w9, w8, lsr #29
  40f0a0:	cmp	w20, w8
  40f0a4:	cset	w0, ne  // ne = any
  40f0a8:	b	40f0b0 <wcrtomb@plt+0xc6f0>
  40f0ac:	mov	w0, wzr
  40f0b0:	ldp	x20, x19, [sp, #48]
  40f0b4:	ldp	x22, x21, [sp, #32]
  40f0b8:	ldp	x24, x23, [sp, #16]
  40f0bc:	ldp	x29, x30, [sp], #64
  40f0c0:	ret
  40f0c4:	mov	w20, #0x1                   	// #1
  40f0c8:	b	40f08c <wcrtomb@plt+0xc6cc>
  40f0cc:	stp	x29, x30, [sp, #-80]!
  40f0d0:	stp	x22, x21, [sp, #48]
  40f0d4:	stp	x20, x19, [sp, #64]
  40f0d8:	mov	w21, w2
  40f0dc:	mov	x19, x1
  40f0e0:	tst	w2, #0x18000000
  40f0e4:	mov	x22, x0
  40f0e8:	stp	x26, x25, [sp, #16]
  40f0ec:	stp	x24, x23, [sp, #32]
  40f0f0:	mov	x29, sp
  40f0f4:	b.eq	40f180 <wcrtomb@plt+0xc7c0>  // b.none
  40f0f8:	mov	x0, x19
  40f0fc:	mov	w1, w21
  40f100:	bl	40ec10 <wcrtomb@plt+0xc250>
  40f104:	tbz	w0, #0, 40f180 <wcrtomb@plt+0xc7c0>
  40f108:	ldr	x20, [x22]
  40f10c:	cbz	x20, 40f128 <wcrtomb@plt+0xc768>
  40f110:	ldr	w8, [x20, #8]
  40f114:	cmp	w8, #0x1
  40f118:	b.ne	40f128 <wcrtomb@plt+0xc768>  // b.any
  40f11c:	ldr	w8, [x20, #12]
  40f120:	eor	w8, w8, w21
  40f124:	tbz	w8, #29, 40f148 <wcrtomb@plt+0xc788>
  40f128:	mov	w0, #0x28                  	// #40
  40f12c:	bl	412888 <wcrtomb@plt+0xfec8>
  40f130:	mov	w8, #0x1                   	// #1
  40f134:	stp	w8, w21, [x0, #8]
  40f138:	ldr	x8, [x22]
  40f13c:	mov	x20, x0
  40f140:	str	x8, [x0]
  40f144:	str	x0, [x22]
  40f148:	ldp	x8, x24, [x20, #24]
  40f14c:	cmp	x24, x8
  40f150:	b.ne	40f2a0 <wcrtomb@plt+0xc8e0>  // b.any
  40f154:	ldr	x0, [x20, #16]
  40f158:	cbz	x0, 40f2a8 <wcrtomb@plt+0xc8e8>
  40f15c:	mov	x8, #0xf684                	// #63108
  40f160:	movk	x8, #0xda12, lsl #16
  40f164:	movk	x8, #0x684b, lsl #32
  40f168:	movk	x8, #0x12f, lsl #48
  40f16c:	cmp	x24, x8
  40f170:	b.cs	40f2c4 <wcrtomb@plt+0xc904>  // b.hs, b.nlast
  40f174:	add	x8, x24, x24, lsr #1
  40f178:	add	x24, x8, #0x1
  40f17c:	b	40f2cc <wcrtomb@plt+0xc90c>
  40f180:	ldr	x20, [x22]
  40f184:	cbz	x20, 40f1a8 <wcrtomb@plt+0xc7e8>
  40f188:	ldr	w8, [x20, #8]
  40f18c:	cbnz	w8, 40f1a8 <wcrtomb@plt+0xc7e8>
  40f190:	ldr	w8, [x20, #12]
  40f194:	mov	w9, #0x18                  	// #24
  40f198:	movk	w9, #0x6000, lsl #16
  40f19c:	eor	w8, w8, w21
  40f1a0:	tst	w8, w9
  40f1a4:	b.eq	40f208 <wcrtomb@plt+0xc848>  // b.none
  40f1a8:	mov	w0, #0x28                  	// #40
  40f1ac:	bl	412888 <wcrtomb@plt+0xfec8>
  40f1b0:	adrp	x8, 40f000 <wcrtomb@plt+0xc640>
  40f1b4:	adrp	x9, 40f000 <wcrtomb@plt+0xc640>
  40f1b8:	adrp	x10, 40f000 <wcrtomb@plt+0xc640>
  40f1bc:	adrp	x11, 40f000 <wcrtomb@plt+0xc640>
  40f1c0:	add	x8, x8, #0x744
  40f1c4:	add	x9, x9, #0x694
  40f1c8:	tst	w21, #0x10
  40f1cc:	add	x10, x10, #0x764
  40f1d0:	add	x11, x11, #0x748
  40f1d4:	adrp	x4, 40f000 <wcrtomb@plt+0xc640>
  40f1d8:	mov	x20, x0
  40f1dc:	stp	wzr, w21, [x0, #8]
  40f1e0:	csel	x2, x9, x8, ne  // ne = any
  40f1e4:	csel	x3, x11, x10, ne  // ne = any
  40f1e8:	add	x4, x4, #0x780
  40f1ec:	mov	x0, xzr
  40f1f0:	mov	x1, xzr
  40f1f4:	bl	40fc00 <wcrtomb@plt+0xd240>
  40f1f8:	str	x0, [x20, #16]
  40f1fc:	ldr	x8, [x22]
  40f200:	str	x8, [x20]
  40f204:	str	x20, [x22]
  40f208:	mov	x0, x19
  40f20c:	bl	4128ec <wcrtomb@plt+0xff2c>
  40f210:	mov	w8, #0x2                   	// #2
  40f214:	movk	w8, #0x1000, lsl #16
  40f218:	and	w8, w21, w8
  40f21c:	mov	w9, #0x10000000            	// #268435456
  40f220:	cmp	w8, w9
  40f224:	mov	x19, x0
  40f228:	b.ne	40f270 <wcrtomb@plt+0xc8b0>  // b.any
  40f22c:	mov	x8, x19
  40f230:	mov	x9, x19
  40f234:	ldrb	w10, [x9]
  40f238:	cmp	w10, #0x5c
  40f23c:	b.ne	40f25c <wcrtomb@plt+0xc89c>  // b.any
  40f240:	mov	x10, x9
  40f244:	ldrb	w11, [x10, #1]!
  40f248:	cmp	w11, #0x0
  40f24c:	csel	x10, x9, x10, eq  // eq = none
  40f250:	ldrb	w10, [x10]
  40f254:	cset	w11, ne  // ne = any
  40f258:	b	40f260 <wcrtomb@plt+0xc8a0>
  40f25c:	mov	w11, wzr
  40f260:	add	x9, x9, x11
  40f264:	add	x9, x9, #0x1
  40f268:	strb	w10, [x8], #1
  40f26c:	cbnz	w10, 40f234 <wcrtomb@plt+0xc874>
  40f270:	ldr	x0, [x20, #16]
  40f274:	mov	x1, x19
  40f278:	bl	41049c <wcrtomb@plt+0xdadc>
  40f27c:	cmp	x0, x19
  40f280:	b.eq	40f3f8 <wcrtomb@plt+0xca38>  // b.none
  40f284:	mov	x0, x19
  40f288:	ldp	x20, x19, [sp, #64]
  40f28c:	ldp	x22, x21, [sp, #48]
  40f290:	ldp	x24, x23, [sp, #32]
  40f294:	ldp	x26, x25, [sp, #16]
  40f298:	ldp	x29, x30, [sp], #80
  40f29c:	b	402770 <free@plt>
  40f2a0:	ldr	x23, [x20, #16]
  40f2a4:	b	40f2e8 <wcrtomb@plt+0xc928>
  40f2a8:	cbz	x24, 40f2c8 <wcrtomb@plt+0xc908>
  40f2ac:	mov	x8, #0x71c8                	// #29128
  40f2b0:	movk	x8, #0xc71c, lsl #16
  40f2b4:	movk	x8, #0x1c71, lsl #32
  40f2b8:	movk	x8, #0x1c7, lsl #48
  40f2bc:	cmp	x24, x8
  40f2c0:	b.cc	40f2cc <wcrtomb@plt+0xc90c>  // b.lo, b.ul, b.last
  40f2c4:	bl	412920 <wcrtomb@plt+0xff60>
  40f2c8:	mov	w24, #0x1                   	// #1
  40f2cc:	add	x8, x24, x24, lsl #3
  40f2d0:	lsl	x1, x8, #3
  40f2d4:	str	x24, [x20, #24]
  40f2d8:	bl	412788 <wcrtomb@plt+0xfdc8>
  40f2dc:	ldr	x24, [x20, #32]
  40f2e0:	mov	x23, x0
  40f2e4:	str	x0, [x20, #16]
  40f2e8:	mov	w8, #0x48                  	// #72
  40f2ec:	add	x25, x24, #0x1
  40f2f0:	mul	x8, x24, x8
  40f2f4:	str	x25, [x20, #32]
  40f2f8:	str	w21, [x23, x8]
  40f2fc:	tbnz	w21, #27, 40f334 <wcrtomb@plt+0xc974>
  40f300:	tbz	w21, #26, 40f324 <wcrtomb@plt+0xc964>
  40f304:	mov	x0, x19
  40f308:	bl	4128ec <wcrtomb@plt+0xff2c>
  40f30c:	mov	x19, x0
  40f310:	mov	w0, #0x10                  	// #16
  40f314:	bl	412738 <wcrtomb@plt+0xfd78>
  40f318:	ldr	x8, [x22, #8]
  40f31c:	stp	x8, x19, [x0]
  40f320:	str	x0, [x22, #8]
  40f324:	mov	w8, #0x48                  	// #72
  40f328:	madd	x8, x24, x8, x23
  40f32c:	str	x19, [x8, #8]
  40f330:	b	40f3f8 <wcrtomb@plt+0xca38>
  40f334:	lsr	w8, w21, #3
  40f338:	and	w8, w8, #0x2
  40f33c:	mov	w9, #0x9                   	// #9
  40f340:	orr	w22, w8, w9
  40f344:	tbnz	w21, #3, 40f36c <wcrtomb@plt+0xc9ac>
  40f348:	mov	w8, #0x48                  	// #72
  40f34c:	madd	x8, x24, x8, x23
  40f350:	add	x0, x8, #0x8
  40f354:	mov	x1, x19
  40f358:	mov	w2, w22
  40f35c:	bl	415fc4 <_obstack_memory_used@@Base+0xf90>
  40f360:	mov	w19, w0
  40f364:	cbnz	w19, 40f3ec <wcrtomb@plt+0xca2c>
  40f368:	b	40f3f8 <wcrtomb@plt+0xca38>
  40f36c:	mov	x0, x19
  40f370:	bl	402380 <strlen@plt>
  40f374:	sub	x8, x19, #0x1
  40f378:	cbz	x0, 40f3f0 <wcrtomb@plt+0xca30>
  40f37c:	ldrb	w9, [x8, x0]
  40f380:	sub	x26, x0, #0x1
  40f384:	mov	x0, x26
  40f388:	cmp	w9, #0x2f
  40f38c:	b.eq	40f378 <wcrtomb@plt+0xc9b8>  // b.none
  40f390:	add	x0, x26, #0x8
  40f394:	bl	412738 <wcrtomb@plt+0xfd78>
  40f398:	add	x2, x26, #0x1
  40f39c:	mov	x1, x19
  40f3a0:	mov	x21, x0
  40f3a4:	bl	402320 <memcpy@plt>
  40f3a8:	mov	w9, #0x2f28                	// #12072
  40f3ac:	mov	w10, #0x292a                	// #10538
  40f3b0:	add	x8, x21, x26
  40f3b4:	movk	w9, #0x2a2e, lsl #16
  40f3b8:	movk	w10, #0x3f, lsl #16
  40f3bc:	mov	w11, #0x48                  	// #72
  40f3c0:	stur	w9, [x8, #1]
  40f3c4:	str	w10, [x8, #4]
  40f3c8:	madd	x8, x24, x11, x23
  40f3cc:	add	x0, x8, #0x8
  40f3d0:	mov	x1, x21
  40f3d4:	mov	w2, w22
  40f3d8:	bl	415fc4 <_obstack_memory_used@@Base+0xf90>
  40f3dc:	mov	w19, w0
  40f3e0:	mov	x0, x21
  40f3e4:	bl	402770 <free@plt>
  40f3e8:	cbz	w19, 40f3f8 <wcrtomb@plt+0xca38>
  40f3ec:	ldr	x25, [x20, #32]
  40f3f0:	sub	x8, x25, #0x1
  40f3f4:	str	x8, [x20, #32]
  40f3f8:	ldp	x20, x19, [sp, #64]
  40f3fc:	ldp	x22, x21, [sp, #48]
  40f400:	ldp	x24, x23, [sp, #32]
  40f404:	ldp	x26, x25, [sp, #16]
  40f408:	ldp	x29, x30, [sp], #80
  40f40c:	ret
  40f410:	sub	sp, sp, #0x70
  40f414:	stp	x24, x23, [sp, #64]
  40f418:	mov	x23, x0
  40f41c:	mov	x0, x2
  40f420:	stp	x29, x30, [sp, #16]
  40f424:	stp	x28, x27, [sp, #32]
  40f428:	stp	x26, x25, [sp, #48]
  40f42c:	stp	x22, x21, [sp, #80]
  40f430:	stp	x20, x19, [sp, #96]
  40f434:	add	x29, sp, #0x10
  40f438:	mov	x19, x5
  40f43c:	mov	w20, w4
  40f440:	mov	w21, w3
  40f444:	mov	x24, x2
  40f448:	mov	x22, x1
  40f44c:	str	xzr, [sp, #8]
  40f450:	bl	402640 <getc_unlocked@plt>
  40f454:	cmn	w0, #0x1
  40f458:	b.eq	40f4ac <wcrtomb@plt+0xcaec>  // b.none
  40f45c:	mov	w26, w0
  40f460:	mov	x8, xzr
  40f464:	mov	x25, xzr
  40f468:	mov	x28, xzr
  40f46c:	cmp	x28, x8
  40f470:	b.ne	40f484 <wcrtomb@plt+0xcac4>  // b.any
  40f474:	add	x1, sp, #0x8
  40f478:	mov	x0, x25
  40f47c:	bl	41283c <wcrtomb@plt+0xfe7c>
  40f480:	mov	x25, x0
  40f484:	mov	x0, x24
  40f488:	add	x27, x28, #0x1
  40f48c:	strb	w26, [x25, x28]
  40f490:	bl	402640 <getc_unlocked@plt>
  40f494:	cmn	w0, #0x1
  40f498:	b.eq	40f4b4 <wcrtomb@plt+0xcaf4>  // b.none
  40f49c:	ldr	x8, [sp, #8]
  40f4a0:	mov	w26, w0
  40f4a4:	mov	x28, x27
  40f4a8:	b	40f46c <wcrtomb@plt+0xcaac>
  40f4ac:	mov	x27, xzr
  40f4b0:	mov	x25, xzr
  40f4b4:	mov	x0, x24
  40f4b8:	bl	4023f0 <ferror_unlocked@plt>
  40f4bc:	cbz	w0, 40f4cc <wcrtomb@plt+0xcb0c>
  40f4c0:	bl	402930 <__errno_location@plt>
  40f4c4:	ldr	w26, [x0]
  40f4c8:	b	40f4d0 <wcrtomb@plt+0xcb10>
  40f4cc:	mov	w26, wzr
  40f4d0:	add	x1, x27, #0x1
  40f4d4:	mov	x0, x25
  40f4d8:	bl	412788 <wcrtomb@plt+0xfdc8>
  40f4dc:	mov	x24, x0
  40f4e0:	add	x8, x0, x27
  40f4e4:	strb	w20, [x8]
  40f4e8:	cbz	x27, 40f500 <wcrtomb@plt+0xcb40>
  40f4ec:	add	x9, x27, x24
  40f4f0:	ldurb	w9, [x9, #-1]
  40f4f4:	cmp	w9, w20, uxtb
  40f4f8:	cset	w9, ne  // ne = any
  40f4fc:	b	40f504 <wcrtomb@plt+0xcb44>
  40f500:	mov	x9, xzr
  40f504:	mov	w0, #0x10                  	// #16
  40f508:	add	x27, x8, x9
  40f50c:	bl	412738 <wcrtomb@plt+0xfd78>
  40f510:	ldr	x8, [x22, #8]
  40f514:	cmp	x24, x27
  40f518:	stp	x8, x24, [x0]
  40f51c:	str	x0, [x22, #8]
  40f520:	b.cs	40f590 <wcrtomb@plt+0xcbd0>  // b.hs, b.nlast
  40f524:	and	x28, x20, #0xff
  40f528:	mov	x25, x24
  40f52c:	ldrb	w8, [x24]
  40f530:	cmp	w8, w20, uxtb
  40f534:	b.ne	40f584 <wcrtomb@plt+0xcbc4>  // b.any
  40f538:	bl	402760 <__ctype_b_loc@plt>
  40f53c:	ldr	x8, [x0]
  40f540:	mov	x9, x24
  40f544:	ldrh	w10, [x8, x28, lsl #1]
  40f548:	tbz	w10, #13, 40f568 <wcrtomb@plt+0xcba8>
  40f54c:	mov	x9, x24
  40f550:	cmp	x25, x9
  40f554:	b.eq	40f580 <wcrtomb@plt+0xcbc0>  // b.none
  40f558:	ldrb	w10, [x9, #-1]!
  40f55c:	ldrh	w10, [x8, x10, lsl #1]
  40f560:	tbnz	w10, #13, 40f550 <wcrtomb@plt+0xcb90>
  40f564:	add	x9, x9, #0x1
  40f568:	mov	x0, x22
  40f56c:	mov	x1, x25
  40f570:	mov	w2, w21
  40f574:	mov	x3, x19
  40f578:	strb	wzr, [x9]
  40f57c:	blr	x23
  40f580:	add	x25, x24, #0x1
  40f584:	add	x24, x24, #0x1
  40f588:	cmp	x24, x27
  40f58c:	b.ne	40f52c <wcrtomb@plt+0xcb6c>  // b.any
  40f590:	bl	402930 <__errno_location@plt>
  40f594:	str	w26, [x0]
  40f598:	cmp	w26, #0x0
  40f59c:	ldp	x20, x19, [sp, #96]
  40f5a0:	ldp	x22, x21, [sp, #80]
  40f5a4:	ldp	x24, x23, [sp, #64]
  40f5a8:	ldp	x26, x25, [sp, #48]
  40f5ac:	ldp	x28, x27, [sp, #32]
  40f5b0:	ldp	x29, x30, [sp, #16]
  40f5b4:	csetm	w8, ne  // ne = any
  40f5b8:	mov	w0, w8
  40f5bc:	add	sp, sp, #0x70
  40f5c0:	ret
  40f5c4:	sub	sp, sp, #0x40
  40f5c8:	stp	x29, x30, [sp, #16]
  40f5cc:	stp	x22, x21, [sp, #32]
  40f5d0:	stp	x20, x19, [sp, #48]
  40f5d4:	str	x0, [sp, #8]
  40f5d8:	ldrb	w8, [x2]
  40f5dc:	mov	w19, w4
  40f5e0:	mov	w20, w3
  40f5e4:	mov	x21, x1
  40f5e8:	cmp	w8, #0x2d
  40f5ec:	add	x29, sp, #0x10
  40f5f0:	b.ne	40f5fc <wcrtomb@plt+0xcc3c>  // b.any
  40f5f4:	ldrb	w8, [x2, #1]
  40f5f8:	cbz	w8, 40f654 <wcrtomb@plt+0xcc94>
  40f5fc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  40f600:	add	x1, x1, #0xb54
  40f604:	mov	x0, x2
  40f608:	bl	4024b0 <fopen@plt>
  40f60c:	cbz	x0, 40f64c <wcrtomb@plt+0xcc8c>
  40f610:	mov	x22, x0
  40f614:	adrp	x0, 40f000 <wcrtomb@plt+0xc640>
  40f618:	add	x0, x0, #0x68c
  40f61c:	add	x5, sp, #0x8
  40f620:	mov	x1, x21
  40f624:	mov	x2, x22
  40f628:	mov	w3, w20
  40f62c:	mov	w4, w19
  40f630:	bl	40f410 <wcrtomb@plt+0xca50>
  40f634:	mov	w19, w0
  40f638:	mov	x0, x22
  40f63c:	bl	402480 <fclose@plt>
  40f640:	cmp	w0, #0x0
  40f644:	csinv	w0, w19, wzr, eq  // eq = none
  40f648:	b	40f678 <wcrtomb@plt+0xccb8>
  40f64c:	mov	w0, #0xffffffff            	// #-1
  40f650:	b	40f678 <wcrtomb@plt+0xccb8>
  40f654:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40f658:	ldr	x2, [x8, #1136]
  40f65c:	adrp	x0, 40f000 <wcrtomb@plt+0xc640>
  40f660:	add	x0, x0, #0x68c
  40f664:	add	x5, sp, #0x8
  40f668:	mov	x1, x21
  40f66c:	mov	w3, w20
  40f670:	mov	w4, w19
  40f674:	bl	40f410 <wcrtomb@plt+0xca50>
  40f678:	ldp	x20, x19, [sp, #48]
  40f67c:	ldp	x22, x21, [sp, #32]
  40f680:	ldp	x29, x30, [sp, #16]
  40f684:	add	sp, sp, #0x40
  40f688:	ret
  40f68c:	ldr	x3, [x3]
  40f690:	br	x3
  40f694:	sub	sp, sp, #0x60
  40f698:	str	x0, [sp, #16]
  40f69c:	mov	x0, sp
  40f6a0:	stp	x29, x30, [sp, #64]
  40f6a4:	stp	x20, x19, [sp, #80]
  40f6a8:	add	x29, sp, #0x40
  40f6ac:	mov	x19, x1
  40f6b0:	strb	wzr, [sp]
  40f6b4:	stur	xzr, [sp, #4]
  40f6b8:	strb	wzr, [sp, #12]
  40f6bc:	bl	4107c0 <wcrtomb@plt+0xde00>
  40f6c0:	ldrb	w8, [sp, #32]
  40f6c4:	ldr	w0, [sp, #36]
  40f6c8:	cbz	w8, 40f6d4 <wcrtomb@plt+0xcd14>
  40f6cc:	mov	x20, xzr
  40f6d0:	cbz	w0, 40f730 <wcrtomb@plt+0xcd70>
  40f6d4:	mov	x20, xzr
  40f6d8:	tst	w8, #0xff
  40f6dc:	b.eq	40f6ec <wcrtomb@plt+0xcd2c>  // b.none
  40f6e0:	bl	402970 <towlower@plt>
  40f6e4:	ldr	x8, [sp, #16]
  40f6e8:	b	40f6f4 <wcrtomb@plt+0xcd34>
  40f6ec:	ldr	x8, [sp, #16]
  40f6f0:	ldrb	w0, [x8]
  40f6f4:	ldr	x10, [sp, #24]
  40f6f8:	lsl	x9, x20, #5
  40f6fc:	sub	x9, x9, x20
  40f700:	add	x9, x9, w0, uxtw
  40f704:	udiv	x11, x9, x19
  40f708:	add	x8, x8, x10
  40f70c:	mov	x0, sp
  40f710:	msub	x20, x11, x19, x9
  40f714:	str	x8, [sp, #16]
  40f718:	strb	wzr, [sp, #12]
  40f71c:	bl	4107c0 <wcrtomb@plt+0xde00>
  40f720:	ldrb	w8, [sp, #32]
  40f724:	ldr	w0, [sp, #36]
  40f728:	cbz	w8, 40f6d8 <wcrtomb@plt+0xcd18>
  40f72c:	cbnz	w0, 40f6d8 <wcrtomb@plt+0xcd18>
  40f730:	mov	x0, x20
  40f734:	ldp	x20, x19, [sp, #80]
  40f738:	ldp	x29, x30, [sp, #64]
  40f73c:	add	sp, sp, #0x60
  40f740:	ret
  40f744:	b	40fba8 <wcrtomb@plt+0xd1e8>
  40f748:	stp	x29, x30, [sp, #-16]!
  40f74c:	mov	x29, sp
  40f750:	bl	4105bc <wcrtomb@plt+0xdbfc>
  40f754:	cmp	w0, #0x0
  40f758:	cset	w0, eq  // eq = none
  40f75c:	ldp	x29, x30, [sp], #16
  40f760:	ret
  40f764:	stp	x29, x30, [sp, #-16]!
  40f768:	mov	x29, sp
  40f76c:	bl	402750 <strcmp@plt>
  40f770:	cmp	w0, #0x0
  40f774:	cset	w0, eq  // eq = none
  40f778:	ldp	x29, x30, [sp], #16
  40f77c:	ret
  40f780:	b	402770 <free@plt>
  40f784:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  40f788:	ldr	x0, [x8, #1144]
  40f78c:	ret
  40f790:	ldr	x0, [x0, #16]
  40f794:	ret
  40f798:	ldr	x0, [x0, #24]
  40f79c:	ret
  40f7a0:	ldr	x0, [x0, #32]
  40f7a4:	ret
  40f7a8:	ldp	x8, x9, [x0]
  40f7ac:	cmp	x8, x9
  40f7b0:	b.cs	40f7ec <wcrtomb@plt+0xce2c>  // b.hs, b.nlast
  40f7b4:	mov	x0, xzr
  40f7b8:	ldr	x10, [x8]
  40f7bc:	cbz	x10, 40f7dc <wcrtomb@plt+0xce1c>
  40f7c0:	mov	x10, xzr
  40f7c4:	mov	x11, x8
  40f7c8:	ldr	x11, [x11, #8]
  40f7cc:	add	x10, x10, #0x1
  40f7d0:	cbnz	x11, 40f7c8 <wcrtomb@plt+0xce08>
  40f7d4:	cmp	x10, x0
  40f7d8:	csel	x0, x10, x0, hi  // hi = pmore
  40f7dc:	add	x8, x8, #0x10
  40f7e0:	cmp	x8, x9
  40f7e4:	b.cc	40f7b8 <wcrtomb@plt+0xcdf8>  // b.lo, b.ul, b.last
  40f7e8:	ret
  40f7ec:	mov	x0, xzr
  40f7f0:	ret
  40f7f4:	ldp	x9, x10, [x0]
  40f7f8:	cmp	x9, x10
  40f7fc:	b.cs	40f834 <wcrtomb@plt+0xce74>  // b.hs, b.nlast
  40f800:	mov	x8, xzr
  40f804:	mov	x11, xzr
  40f808:	ldr	x12, [x9]
  40f80c:	cbz	x12, 40f824 <wcrtomb@plt+0xce64>
  40f810:	mov	x12, x9
  40f814:	ldr	x12, [x12, #8]
  40f818:	add	x8, x8, #0x1
  40f81c:	cbnz	x12, 40f814 <wcrtomb@plt+0xce54>
  40f820:	add	x11, x11, #0x1
  40f824:	add	x9, x9, #0x10
  40f828:	cmp	x9, x10
  40f82c:	b.cc	40f808 <wcrtomb@plt+0xce48>  // b.lo, b.ul, b.last
  40f830:	b	40f83c <wcrtomb@plt+0xce7c>
  40f834:	mov	x11, xzr
  40f838:	mov	x8, xzr
  40f83c:	ldr	x9, [x0, #24]
  40f840:	cmp	x11, x9
  40f844:	b.ne	40f85c <wcrtomb@plt+0xce9c>  // b.any
  40f848:	ldr	x9, [x0, #32]
  40f84c:	cmp	x8, x9
  40f850:	b.ne	40f85c <wcrtomb@plt+0xce9c>  // b.any
  40f854:	mov	w0, #0x1                   	// #1
  40f858:	ret
  40f85c:	mov	w0, wzr
  40f860:	ret
  40f864:	stp	x29, x30, [sp, #-48]!
  40f868:	stp	x22, x21, [sp, #16]
  40f86c:	stp	x20, x19, [sp, #32]
  40f870:	ldp	x8, x9, [x0]
  40f874:	ldp	x20, x2, [x0, #24]
  40f878:	ldr	x22, [x0, #16]
  40f87c:	mov	x19, x1
  40f880:	cmp	x8, x9
  40f884:	mov	x21, xzr
  40f888:	mov	x29, sp
  40f88c:	b.cs	40f8c0 <wcrtomb@plt+0xcf00>  // b.hs, b.nlast
  40f890:	ldr	x10, [x8]
  40f894:	cbz	x10, 40f8b4 <wcrtomb@plt+0xcef4>
  40f898:	mov	x10, xzr
  40f89c:	mov	x11, x8
  40f8a0:	ldr	x11, [x11, #8]
  40f8a4:	add	x10, x10, #0x1
  40f8a8:	cbnz	x11, 40f8a0 <wcrtomb@plt+0xcee0>
  40f8ac:	cmp	x10, x21
  40f8b0:	csel	x21, x10, x21, hi  // hi = pmore
  40f8b4:	add	x8, x8, #0x10
  40f8b8:	cmp	x8, x9
  40f8bc:	b.cc	40f890 <wcrtomb@plt+0xced0>  // b.lo, b.ul, b.last
  40f8c0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40f8c4:	add	x1, x1, #0x354
  40f8c8:	mov	x0, x19
  40f8cc:	bl	402980 <fprintf@plt>
  40f8d0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40f8d4:	add	x1, x1, #0x36c
  40f8d8:	mov	x0, x19
  40f8dc:	mov	x2, x22
  40f8e0:	bl	402980 <fprintf@plt>
  40f8e4:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40f8e8:	ucvtf	d0, x20
  40f8ec:	fmov	d1, x8
  40f8f0:	fmul	d0, d0, d1
  40f8f4:	ucvtf	d1, x22
  40f8f8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40f8fc:	fdiv	d0, d0, d1
  40f900:	add	x1, x1, #0x384
  40f904:	mov	x0, x19
  40f908:	mov	x2, x20
  40f90c:	bl	402980 <fprintf@plt>
  40f910:	mov	x0, x19
  40f914:	mov	x2, x21
  40f918:	ldp	x20, x19, [sp, #32]
  40f91c:	ldp	x22, x21, [sp, #16]
  40f920:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40f924:	add	x1, x1, #0x3a5
  40f928:	ldp	x29, x30, [sp], #48
  40f92c:	b	402980 <fprintf@plt>
  40f930:	stp	x29, x30, [sp, #-48]!
  40f934:	stp	x20, x19, [sp, #32]
  40f938:	ldr	x8, [x0, #16]
  40f93c:	ldr	x9, [x0, #48]
  40f940:	mov	x19, x0
  40f944:	mov	x20, x1
  40f948:	mov	x0, x1
  40f94c:	mov	x1, x8
  40f950:	str	x21, [sp, #16]
  40f954:	mov	x29, sp
  40f958:	blr	x9
  40f95c:	ldr	x8, [x19, #16]
  40f960:	cmp	x0, x8
  40f964:	b.cs	40f9cc <wcrtomb@plt+0xd00c>  // b.hs, b.nlast
  40f968:	ldr	x8, [x19]
  40f96c:	add	x21, x8, x0, lsl #4
  40f970:	ldr	x1, [x21]
  40f974:	mov	x0, xzr
  40f978:	cbz	x1, 40f9bc <wcrtomb@plt+0xcffc>
  40f97c:	cbz	x8, 40f9bc <wcrtomb@plt+0xcffc>
  40f980:	cmp	x1, x20
  40f984:	b.eq	40f9a8 <wcrtomb@plt+0xcfe8>  // b.none
  40f988:	ldr	x8, [x19, #56]
  40f98c:	mov	x0, x20
  40f990:	blr	x8
  40f994:	tbnz	w0, #0, 40f9b0 <wcrtomb@plt+0xcff0>
  40f998:	ldr	x21, [x21, #8]
  40f99c:	cbz	x21, 40f9b8 <wcrtomb@plt+0xcff8>
  40f9a0:	ldr	x1, [x21]
  40f9a4:	b	40f980 <wcrtomb@plt+0xcfc0>
  40f9a8:	mov	x0, x20
  40f9ac:	b	40f9bc <wcrtomb@plt+0xcffc>
  40f9b0:	ldr	x0, [x21]
  40f9b4:	b	40f9bc <wcrtomb@plt+0xcffc>
  40f9b8:	mov	x0, xzr
  40f9bc:	ldp	x20, x19, [sp, #32]
  40f9c0:	ldr	x21, [sp, #16]
  40f9c4:	ldp	x29, x30, [sp], #48
  40f9c8:	ret
  40f9cc:	bl	4026c0 <abort@plt>
  40f9d0:	stp	x29, x30, [sp, #-16]!
  40f9d4:	ldr	x8, [x0, #32]
  40f9d8:	mov	x29, sp
  40f9dc:	cbz	x8, 40f9f8 <wcrtomb@plt+0xd038>
  40f9e0:	ldp	x8, x9, [x0]
  40f9e4:	cmp	x8, x9
  40f9e8:	b.cs	40fa04 <wcrtomb@plt+0xd044>  // b.hs, b.nlast
  40f9ec:	ldr	x0, [x8], #16
  40f9f0:	cbz	x0, 40f9e4 <wcrtomb@plt+0xd024>
  40f9f4:	b	40f9fc <wcrtomb@plt+0xd03c>
  40f9f8:	mov	x0, xzr
  40f9fc:	ldp	x29, x30, [sp], #16
  40fa00:	ret
  40fa04:	bl	4026c0 <abort@plt>
  40fa08:	stp	x29, x30, [sp, #-32]!
  40fa0c:	stp	x20, x19, [sp, #16]
  40fa10:	ldr	x8, [x0, #16]
  40fa14:	ldr	x9, [x0, #48]
  40fa18:	mov	x19, x0
  40fa1c:	mov	x20, x1
  40fa20:	mov	x0, x1
  40fa24:	mov	x1, x8
  40fa28:	mov	x29, sp
  40fa2c:	blr	x9
  40fa30:	ldr	x8, [x19, #16]
  40fa34:	cmp	x0, x8
  40fa38:	b.cs	40fa94 <wcrtomb@plt+0xd0d4>  // b.hs, b.nlast
  40fa3c:	ldr	x8, [x19]
  40fa40:	add	x9, x8, x0, lsl #4
  40fa44:	ldp	x10, x9, [x9]
  40fa48:	cmp	x10, x20
  40fa4c:	b.eq	40fa58 <wcrtomb@plt+0xd098>  // b.none
  40fa50:	cbnz	x9, 40fa44 <wcrtomb@plt+0xd084>
  40fa54:	b	40fa64 <wcrtomb@plt+0xd0a4>
  40fa58:	cbz	x9, 40fa64 <wcrtomb@plt+0xd0a4>
  40fa5c:	ldr	x0, [x9]
  40fa60:	b	40fa88 <wcrtomb@plt+0xd0c8>
  40fa64:	ldr	x9, [x19, #8]
  40fa68:	add	x8, x8, x0, lsl #4
  40fa6c:	add	x8, x8, #0x10
  40fa70:	cmp	x8, x9
  40fa74:	b.cs	40fa84 <wcrtomb@plt+0xd0c4>  // b.hs, b.nlast
  40fa78:	ldr	x0, [x8], #16
  40fa7c:	cbz	x0, 40fa70 <wcrtomb@plt+0xd0b0>
  40fa80:	b	40fa88 <wcrtomb@plt+0xd0c8>
  40fa84:	mov	x0, xzr
  40fa88:	ldp	x20, x19, [sp, #16]
  40fa8c:	ldp	x29, x30, [sp], #32
  40fa90:	ret
  40fa94:	bl	4026c0 <abort@plt>
  40fa98:	ldp	x9, x10, [x0]
  40fa9c:	cmp	x9, x10
  40faa0:	b.cs	40faf8 <wcrtomb@plt+0xd138>  // b.hs, b.nlast
  40faa4:	mov	x11, xzr
  40faa8:	ldr	x8, [x9]
  40faac:	cbz	x8, 40fae0 <wcrtomb@plt+0xd120>
  40fab0:	cbz	x9, 40fae0 <wcrtomb@plt+0xd120>
  40fab4:	mov	x10, x9
  40fab8:	cmp	x11, x2
  40fabc:	b.cs	40fb00 <wcrtomb@plt+0xd140>  // b.hs, b.nlast
  40fac0:	ldr	x8, [x10]
  40fac4:	str	x8, [x1, x11, lsl #3]
  40fac8:	ldr	x10, [x10, #8]
  40facc:	add	x8, x11, #0x1
  40fad0:	mov	x11, x8
  40fad4:	cbnz	x10, 40fab8 <wcrtomb@plt+0xd0f8>
  40fad8:	ldr	x10, [x0, #8]
  40fadc:	b	40fae4 <wcrtomb@plt+0xd124>
  40fae0:	mov	x8, x11
  40fae4:	add	x9, x9, #0x10
  40fae8:	cmp	x9, x10
  40faec:	mov	x11, x8
  40faf0:	b.cc	40faa8 <wcrtomb@plt+0xd0e8>  // b.lo, b.ul, b.last
  40faf4:	b	40fb04 <wcrtomb@plt+0xd144>
  40faf8:	mov	x8, xzr
  40fafc:	b	40fb04 <wcrtomb@plt+0xd144>
  40fb00:	mov	x8, x11
  40fb04:	mov	x0, x8
  40fb08:	ret
  40fb0c:	stp	x29, x30, [sp, #-64]!
  40fb10:	stp	x24, x23, [sp, #16]
  40fb14:	stp	x22, x21, [sp, #32]
  40fb18:	stp	x20, x19, [sp, #48]
  40fb1c:	ldp	x23, x8, [x0]
  40fb20:	mov	x29, sp
  40fb24:	cmp	x23, x8
  40fb28:	b.cs	40fb8c <wcrtomb@plt+0xd1cc>  // b.hs, b.nlast
  40fb2c:	mov	x19, x2
  40fb30:	mov	x20, x0
  40fb34:	mov	x21, x1
  40fb38:	mov	x22, xzr
  40fb3c:	ldr	x0, [x23]
  40fb40:	cbz	x0, 40fb7c <wcrtomb@plt+0xd1bc>
  40fb44:	cbz	x23, 40fb7c <wcrtomb@plt+0xd1bc>
  40fb48:	mov	x1, x19
  40fb4c:	blr	x21
  40fb50:	tbz	w0, #0, 40fb90 <wcrtomb@plt+0xd1d0>
  40fb54:	mov	x24, x23
  40fb58:	ldr	x24, [x24, #8]
  40fb5c:	add	x22, x22, #0x1
  40fb60:	cbz	x24, 40fb78 <wcrtomb@plt+0xd1b8>
  40fb64:	ldr	x0, [x24]
  40fb68:	mov	x1, x19
  40fb6c:	blr	x21
  40fb70:	tbnz	w0, #0, 40fb58 <wcrtomb@plt+0xd198>
  40fb74:	b	40fb90 <wcrtomb@plt+0xd1d0>
  40fb78:	ldr	x8, [x20, #8]
  40fb7c:	add	x23, x23, #0x10
  40fb80:	cmp	x23, x8
  40fb84:	b.cc	40fb3c <wcrtomb@plt+0xd17c>  // b.lo, b.ul, b.last
  40fb88:	b	40fb90 <wcrtomb@plt+0xd1d0>
  40fb8c:	mov	x22, xzr
  40fb90:	mov	x0, x22
  40fb94:	ldp	x20, x19, [sp, #48]
  40fb98:	ldp	x22, x21, [sp, #32]
  40fb9c:	ldp	x24, x23, [sp, #16]
  40fba0:	ldp	x29, x30, [sp], #64
  40fba4:	ret
  40fba8:	ldrb	w9, [x0]
  40fbac:	cbz	w9, 40fbdc <wcrtomb@plt+0xd21c>
  40fbb0:	mov	x8, x0
  40fbb4:	mov	x0, xzr
  40fbb8:	add	x8, x8, #0x1
  40fbbc:	lsl	x10, x0, #5
  40fbc0:	sub	x10, x10, x0
  40fbc4:	add	x10, x10, w9, uxtb
  40fbc8:	ldrb	w9, [x8], #1
  40fbcc:	udiv	x11, x10, x1
  40fbd0:	msub	x0, x11, x1, x10
  40fbd4:	cbnz	w9, 40fbbc <wcrtomb@plt+0xd1fc>
  40fbd8:	ret
  40fbdc:	mov	x0, xzr
  40fbe0:	ret
  40fbe4:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fbe8:	add	x8, x8, #0x3c0
  40fbec:	ldr	w9, [x8, #16]
  40fbf0:	ldr	q0, [x8]
  40fbf4:	str	w9, [x0, #16]
  40fbf8:	str	q0, [x0]
  40fbfc:	ret
  40fc00:	stp	x29, x30, [sp, #-64]!
  40fc04:	adrp	x8, 40f000 <wcrtomb@plt+0xc640>
  40fc08:	add	x8, x8, #0xcd4
  40fc0c:	cmp	x2, #0x0
  40fc10:	adrp	x9, 40f000 <wcrtomb@plt+0xc640>
  40fc14:	stp	x24, x23, [sp, #16]
  40fc18:	stp	x22, x21, [sp, #32]
  40fc1c:	mov	x21, x0
  40fc20:	add	x9, x9, #0xce4
  40fc24:	csel	x23, x8, x2, eq  // eq = none
  40fc28:	cmp	x3, #0x0
  40fc2c:	mov	w0, #0x50                  	// #80
  40fc30:	stp	x20, x19, [sp, #48]
  40fc34:	mov	x29, sp
  40fc38:	mov	x19, x4
  40fc3c:	mov	x22, x1
  40fc40:	csel	x24, x9, x3, eq  // eq = none
  40fc44:	bl	4024e0 <malloc@plt>
  40fc48:	mov	x20, x0
  40fc4c:	cbz	x0, 40fcbc <wcrtomb@plt+0xd2fc>
  40fc50:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fc54:	add	x8, x8, #0x3c0
  40fc58:	cmp	x22, #0x0
  40fc5c:	csel	x22, x8, x22, eq  // eq = none
  40fc60:	mov	x0, x20
  40fc64:	str	x22, [x20, #40]
  40fc68:	bl	40fcf0 <wcrtomb@plt+0xd330>
  40fc6c:	tbz	w0, #0, 40fcb0 <wcrtomb@plt+0xd2f0>
  40fc70:	mov	x0, x21
  40fc74:	mov	x1, x22
  40fc78:	bl	40fd84 <wcrtomb@plt+0xd3c4>
  40fc7c:	str	x0, [x20, #16]
  40fc80:	cbz	x0, 40fcb0 <wcrtomb@plt+0xd2f0>
  40fc84:	mov	w1, #0x10                  	// #16
  40fc88:	mov	x21, x0
  40fc8c:	bl	4025d0 <calloc@plt>
  40fc90:	str	x0, [x20]
  40fc94:	cbz	x0, 40fcb0 <wcrtomb@plt+0xd2f0>
  40fc98:	add	x8, x0, x21, lsl #4
  40fc9c:	stp	xzr, xzr, [x20, #24]
  40fca0:	stp	x23, x24, [x20, #48]
  40fca4:	str	x8, [x20, #8]
  40fca8:	stp	x19, xzr, [x20, #64]
  40fcac:	b	40fcbc <wcrtomb@plt+0xd2fc>
  40fcb0:	mov	x0, x20
  40fcb4:	bl	402770 <free@plt>
  40fcb8:	mov	x20, xzr
  40fcbc:	mov	x0, x20
  40fcc0:	ldp	x20, x19, [sp, #48]
  40fcc4:	ldp	x22, x21, [sp, #32]
  40fcc8:	ldp	x24, x23, [sp, #16]
  40fccc:	ldp	x29, x30, [sp], #64
  40fcd0:	ret
  40fcd4:	ror	x8, x0, #3
  40fcd8:	udiv	x9, x8, x1
  40fcdc:	msub	x0, x9, x1, x8
  40fce0:	ret
  40fce4:	cmp	x0, x1
  40fce8:	cset	w0, eq  // eq = none
  40fcec:	ret
  40fcf0:	ldr	x8, [x0, #40]
  40fcf4:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fcf8:	add	x9, x9, #0x3c0
  40fcfc:	cmp	x8, x9
  40fd00:	b.eq	40fd6c <wcrtomb@plt+0xd3ac>  // b.none
  40fd04:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fd08:	ldr	s0, [x8, #8]
  40fd0c:	ldr	s1, [x10, #840]
  40fd10:	fcmp	s0, s1
  40fd14:	b.le	40fd74 <wcrtomb@plt+0xd3b4>
  40fd18:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fd1c:	ldr	s2, [x10, #844]
  40fd20:	fcmp	s0, s2
  40fd24:	b.pl	40fd74 <wcrtomb@plt+0xd3b4>  // b.nfrst
  40fd28:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  40fd2c:	ldr	s2, [x8, #12]
  40fd30:	ldr	s3, [x10, #848]
  40fd34:	fcmp	s2, s3
  40fd38:	b.le	40fd74 <wcrtomb@plt+0xd3b4>
  40fd3c:	ldr	s2, [x8]
  40fd40:	fcmp	s2, #0.0
  40fd44:	b.lt	40fd74 <wcrtomb@plt+0xd3b4>  // b.tstop
  40fd48:	fadd	s1, s2, s1
  40fd4c:	fcmp	s1, s0
  40fd50:	b.pl	40fd74 <wcrtomb@plt+0xd3b4>  // b.nfrst
  40fd54:	ldr	s0, [x8, #4]
  40fd58:	fmov	s2, #1.000000000000000000e+00
  40fd5c:	fcmp	s0, s2
  40fd60:	b.hi	40fd74 <wcrtomb@plt+0xd3b4>  // b.pmore
  40fd64:	fcmp	s1, s0
  40fd68:	b.pl	40fd74 <wcrtomb@plt+0xd3b4>  // b.nfrst
  40fd6c:	mov	w8, #0x1                   	// #1
  40fd70:	b	40fd7c <wcrtomb@plt+0xd3bc>
  40fd74:	mov	w8, wzr
  40fd78:	str	x9, [x0, #40]
  40fd7c:	mov	w0, w8
  40fd80:	ret
  40fd84:	ldrb	w8, [x1, #16]
  40fd88:	cbnz	w8, 40fdac <wcrtomb@plt+0xd3ec>
  40fd8c:	ldr	s0, [x1, #8]
  40fd90:	ucvtf	s1, x0
  40fd94:	mov	w8, #0x5f800000            	// #1602224128
  40fd98:	fdiv	s0, s1, s0
  40fd9c:	fmov	s1, w8
  40fda0:	fcmp	s0, s1
  40fda4:	b.ge	40fe20 <wcrtomb@plt+0xd460>  // b.tcont
  40fda8:	fcvtzu	x0, s0
  40fdac:	cmp	x0, #0xa
  40fdb0:	mov	w8, #0xa                   	// #10
  40fdb4:	csel	x8, x0, x8, hi  // hi = pmore
  40fdb8:	orr	x0, x8, #0x1
  40fdbc:	cmn	x0, #0x1
  40fdc0:	b.eq	40fe20 <wcrtomb@plt+0xd460>  // b.none
  40fdc4:	cmp	x0, #0xa
  40fdc8:	b.cc	40fe00 <wcrtomb@plt+0xd440>  // b.lo, b.ul, b.last
  40fdcc:	mov	w9, #0xc                   	// #12
  40fdd0:	mov	w10, #0x9                   	// #9
  40fdd4:	mov	w8, #0x3                   	// #3
  40fdd8:	udiv	x11, x0, x8
  40fddc:	msub	x11, x11, x8, x0
  40fde0:	cbz	x11, 40fe04 <wcrtomb@plt+0xd444>
  40fde4:	add	x10, x10, x9
  40fde8:	add	x10, x10, #0x4
  40fdec:	add	x8, x8, #0x2
  40fdf0:	cmp	x10, x0
  40fdf4:	add	x9, x9, #0x8
  40fdf8:	b.cc	40fdd8 <wcrtomb@plt+0xd418>  // b.lo, b.ul, b.last
  40fdfc:	b	40fe04 <wcrtomb@plt+0xd444>
  40fe00:	mov	w8, #0x3                   	// #3
  40fe04:	udiv	x9, x0, x8
  40fe08:	msub	x8, x9, x8, x0
  40fe0c:	cbnz	x8, 40fe18 <wcrtomb@plt+0xd458>
  40fe10:	add	x0, x0, #0x2
  40fe14:	b	40fdbc <wcrtomb@plt+0xd3fc>
  40fe18:	lsr	x8, x0, #60
  40fe1c:	cbz	x8, 40fe24 <wcrtomb@plt+0xd464>
  40fe20:	mov	x0, xzr
  40fe24:	ret
  40fe28:	stp	x29, x30, [sp, #-48]!
  40fe2c:	str	x21, [sp, #16]
  40fe30:	stp	x20, x19, [sp, #32]
  40fe34:	ldp	x20, x8, [x0]
  40fe38:	mov	x19, x0
  40fe3c:	mov	x29, sp
  40fe40:	cmp	x20, x8
  40fe44:	b.cs	40feb4 <wcrtomb@plt+0xd4f4>  // b.hs, b.nlast
  40fe48:	ldr	x9, [x20]
  40fe4c:	cbz	x9, 40feac <wcrtomb@plt+0xd4ec>
  40fe50:	ldr	x8, [x19, #64]
  40fe54:	ldr	x21, [x20, #8]
  40fe58:	cmp	x8, #0x0
  40fe5c:	cset	w9, ne  // ne = any
  40fe60:	cbz	x21, 40fe98 <wcrtomb@plt+0xd4d8>
  40fe64:	tbz	w9, #0, 40fe74 <wcrtomb@plt+0xd4b4>
  40fe68:	ldr	x0, [x21]
  40fe6c:	blr	x8
  40fe70:	ldr	x8, [x19, #64]
  40fe74:	str	xzr, [x21]
  40fe78:	ldr	x9, [x19, #72]
  40fe7c:	ldr	x10, [x21, #8]
  40fe80:	cmp	x8, #0x0
  40fe84:	str	x9, [x21, #8]
  40fe88:	str	x21, [x19, #72]
  40fe8c:	cset	w9, ne  // ne = any
  40fe90:	mov	x21, x10
  40fe94:	cbnz	x10, 40fe64 <wcrtomb@plt+0xd4a4>
  40fe98:	cbz	w9, 40fea4 <wcrtomb@plt+0xd4e4>
  40fe9c:	ldr	x0, [x20]
  40fea0:	blr	x8
  40fea4:	stp	xzr, xzr, [x20]
  40fea8:	ldr	x8, [x19, #8]
  40feac:	add	x20, x20, #0x10
  40feb0:	b	40fe40 <wcrtomb@plt+0xd480>
  40feb4:	stp	xzr, xzr, [x19, #24]
  40feb8:	ldp	x20, x19, [sp, #32]
  40febc:	ldr	x21, [sp, #16]
  40fec0:	ldp	x29, x30, [sp], #48
  40fec4:	ret
  40fec8:	stp	x29, x30, [sp, #-48]!
  40fecc:	stp	x20, x19, [sp, #32]
  40fed0:	ldr	x8, [x0, #64]
  40fed4:	mov	x19, x0
  40fed8:	str	x21, [sp, #16]
  40fedc:	mov	x29, sp
  40fee0:	cbz	x8, 40ff34 <wcrtomb@plt+0xd574>
  40fee4:	ldr	x8, [x19, #32]
  40fee8:	cbz	x8, 40ff34 <wcrtomb@plt+0xd574>
  40feec:	ldp	x20, x8, [x19]
  40fef0:	cmp	x20, x8
  40fef4:	b.cs	40ff34 <wcrtomb@plt+0xd574>  // b.hs, b.nlast
  40fef8:	ldr	x0, [x20]
  40fefc:	cbz	x0, 40ff2c <wcrtomb@plt+0xd56c>
  40ff00:	cbz	x20, 40ff2c <wcrtomb@plt+0xd56c>
  40ff04:	ldr	x8, [x19, #64]
  40ff08:	blr	x8
  40ff0c:	ldr	x21, [x20, #8]
  40ff10:	cbz	x21, 40ff28 <wcrtomb@plt+0xd568>
  40ff14:	ldr	x0, [x21]
  40ff18:	ldr	x8, [x19, #64]
  40ff1c:	blr	x8
  40ff20:	ldr	x21, [x21, #8]
  40ff24:	cbnz	x21, 40ff14 <wcrtomb@plt+0xd554>
  40ff28:	ldr	x8, [x19, #8]
  40ff2c:	add	x20, x20, #0x10
  40ff30:	b	40fef0 <wcrtomb@plt+0xd530>
  40ff34:	ldp	x20, x8, [x19]
  40ff38:	cmp	x20, x8
  40ff3c:	b.cs	40ff64 <wcrtomb@plt+0xd5a4>  // b.hs, b.nlast
  40ff40:	ldr	x0, [x20, #8]
  40ff44:	cbz	x0, 40ff5c <wcrtomb@plt+0xd59c>
  40ff48:	ldr	x21, [x0, #8]
  40ff4c:	bl	402770 <free@plt>
  40ff50:	mov	x0, x21
  40ff54:	cbnz	x21, 40ff48 <wcrtomb@plt+0xd588>
  40ff58:	ldr	x8, [x19, #8]
  40ff5c:	add	x20, x20, #0x10
  40ff60:	b	40ff38 <wcrtomb@plt+0xd578>
  40ff64:	ldr	x0, [x19, #72]
  40ff68:	cbz	x0, 40ff7c <wcrtomb@plt+0xd5bc>
  40ff6c:	ldr	x20, [x0, #8]
  40ff70:	bl	402770 <free@plt>
  40ff74:	mov	x0, x20
  40ff78:	cbnz	x20, 40ff6c <wcrtomb@plt+0xd5ac>
  40ff7c:	ldr	x0, [x19]
  40ff80:	bl	402770 <free@plt>
  40ff84:	mov	x0, x19
  40ff88:	ldp	x20, x19, [sp, #32]
  40ff8c:	ldr	x21, [sp, #16]
  40ff90:	ldp	x29, x30, [sp], #48
  40ff94:	b	402770 <free@plt>
  40ff98:	sub	sp, sp, #0x80
  40ff9c:	stp	x29, x30, [sp, #80]
  40ffa0:	stp	x20, x19, [sp, #112]
  40ffa4:	ldr	x20, [x0, #40]
  40ffa8:	mov	x19, x0
  40ffac:	mov	x0, x1
  40ffb0:	str	x21, [sp, #96]
  40ffb4:	mov	x1, x20
  40ffb8:	add	x29, sp, #0x50
  40ffbc:	bl	40fd84 <wcrtomb@plt+0xd3c4>
  40ffc0:	cbz	x0, 410040 <wcrtomb@plt+0xd680>
  40ffc4:	ldr	x8, [x19, #16]
  40ffc8:	mov	x21, x0
  40ffcc:	cmp	x0, x8
  40ffd0:	b.eq	41003c <wcrtomb@plt+0xd67c>  // b.none
  40ffd4:	mov	w1, #0x10                  	// #16
  40ffd8:	mov	x0, x21
  40ffdc:	bl	4025d0 <calloc@plt>
  40ffe0:	str	x0, [sp]
  40ffe4:	cbz	x0, 410040 <wcrtomb@plt+0xd680>
  40ffe8:	add	x8, x0, x21, lsl #4
  40ffec:	stp	xzr, xzr, [sp, #24]
  40fff0:	stp	x8, x21, [sp, #8]
  40fff4:	str	x20, [sp, #40]
  40fff8:	ldr	q0, [x19, #48]
  40fffc:	mov	x0, sp
  410000:	mov	x1, x19
  410004:	mov	w2, wzr
  410008:	str	q0, [sp, #48]
  41000c:	ldr	q0, [x19, #64]
  410010:	str	q0, [sp, #64]
  410014:	bl	410098 <wcrtomb@plt+0xd6d8>
  410018:	tbz	w0, #0, 410054 <wcrtomb@plt+0xd694>
  41001c:	ldr	x0, [x19]
  410020:	bl	402770 <free@plt>
  410024:	ldr	q0, [sp]
  410028:	str	q0, [x19]
  41002c:	ldr	q0, [sp, #16]
  410030:	str	q0, [x19, #16]
  410034:	ldr	x8, [sp, #72]
  410038:	str	x8, [x19, #72]
  41003c:	mov	w0, #0x1                   	// #1
  410040:	ldp	x20, x19, [sp, #112]
  410044:	ldr	x21, [sp, #96]
  410048:	ldp	x29, x30, [sp, #80]
  41004c:	add	sp, sp, #0x80
  410050:	ret
  410054:	ldr	x8, [sp, #72]
  410058:	mov	x1, sp
  41005c:	mov	w2, #0x1                   	// #1
  410060:	mov	x0, x19
  410064:	str	x8, [x19, #72]
  410068:	bl	410098 <wcrtomb@plt+0xd6d8>
  41006c:	tbz	w0, #0, 410094 <wcrtomb@plt+0xd6d4>
  410070:	mov	x1, sp
  410074:	mov	x0, x19
  410078:	mov	w2, wzr
  41007c:	bl	410098 <wcrtomb@plt+0xd6d8>
  410080:	tbz	w0, #0, 410094 <wcrtomb@plt+0xd6d4>
  410084:	ldr	x0, [sp]
  410088:	bl	402770 <free@plt>
  41008c:	mov	w0, wzr
  410090:	b	410040 <wcrtomb@plt+0xd680>
  410094:	bl	4026c0 <abort@plt>
  410098:	stp	x29, x30, [sp, #-80]!
  41009c:	stp	x26, x25, [sp, #16]
  4100a0:	stp	x24, x23, [sp, #32]
  4100a4:	stp	x22, x21, [sp, #48]
  4100a8:	stp	x20, x19, [sp, #64]
  4100ac:	ldp	x24, x8, [x1]
  4100b0:	mov	x29, sp
  4100b4:	cmp	x24, x8
  4100b8:	b.cs	4101e8 <wcrtomb@plt+0xd828>  // b.hs, b.nlast
  4100bc:	mov	w19, w2
  4100c0:	mov	x20, x1
  4100c4:	mov	x21, x0
  4100c8:	add	x25, x0, #0x48
  4100cc:	ldr	x22, [x24]
  4100d0:	cbz	x22, 4101d8 <wcrtomb@plt+0xd818>
  4100d4:	ldr	x23, [x24, #8]
  4100d8:	cbz	x23, 410148 <wcrtomb@plt+0xd788>
  4100dc:	ldr	x1, [x21, #16]
  4100e0:	ldr	x22, [x23]
  4100e4:	ldr	x8, [x21, #48]
  4100e8:	mov	x0, x22
  4100ec:	blr	x8
  4100f0:	ldr	x1, [x21, #16]
  4100f4:	cmp	x0, x1
  4100f8:	b.cs	410204 <wcrtomb@plt+0xd844>  // b.hs, b.nlast
  4100fc:	ldr	x8, [x21]
  410100:	add	x9, x8, x0, lsl #4
  410104:	ldr	x10, [x9]
  410108:	ldr	x8, [x23, #8]
  41010c:	cbz	x10, 410118 <wcrtomb@plt+0xd758>
  410110:	add	x9, x9, #0x8
  410114:	b	410130 <wcrtomb@plt+0xd770>
  410118:	str	x22, [x9]
  41011c:	ldr	x9, [x21, #24]
  410120:	add	x9, x9, #0x1
  410124:	str	x9, [x21, #24]
  410128:	mov	x9, x25
  41012c:	str	xzr, [x23]
  410130:	ldr	x10, [x9]
  410134:	str	x10, [x23, #8]
  410138:	str	x23, [x9]
  41013c:	mov	x23, x8
  410140:	cbnz	x8, 4100e0 <wcrtomb@plt+0xd720>
  410144:	ldr	x22, [x24]
  410148:	str	xzr, [x24, #8]
  41014c:	tbnz	w19, #0, 4101d8 <wcrtomb@plt+0xd818>
  410150:	ldr	x8, [x21, #48]
  410154:	ldr	x1, [x21, #16]
  410158:	mov	x0, x22
  41015c:	blr	x8
  410160:	ldr	x8, [x21, #16]
  410164:	cmp	x0, x8
  410168:	b.cs	410204 <wcrtomb@plt+0xd844>  // b.hs, b.nlast
  41016c:	ldr	x26, [x21]
  410170:	mov	x23, x0
  410174:	add	x8, x26, x0, lsl #4
  410178:	ldr	x9, [x8]
  41017c:	cbz	x9, 410194 <wcrtomb@plt+0xd7d4>
  410180:	ldr	x0, [x25]
  410184:	cbz	x0, 4101a8 <wcrtomb@plt+0xd7e8>
  410188:	ldr	x8, [x0, #8]
  41018c:	str	x8, [x25]
  410190:	b	4101b4 <wcrtomb@plt+0xd7f4>
  410194:	str	x22, [x8]
  410198:	ldr	x8, [x21, #24]
  41019c:	add	x8, x8, #0x1
  4101a0:	str	x8, [x21, #24]
  4101a4:	b	4101c8 <wcrtomb@plt+0xd808>
  4101a8:	mov	w0, #0x10                  	// #16
  4101ac:	bl	4024e0 <malloc@plt>
  4101b0:	cbz	x0, 4101ec <wcrtomb@plt+0xd82c>
  4101b4:	str	x22, [x0]
  4101b8:	add	x8, x26, x23, lsl #4
  4101bc:	ldr	x9, [x8, #8]
  4101c0:	str	x9, [x0, #8]
  4101c4:	str	x0, [x8, #8]
  4101c8:	str	xzr, [x24]
  4101cc:	ldr	x8, [x20, #24]
  4101d0:	sub	x8, x8, #0x1
  4101d4:	str	x8, [x20, #24]
  4101d8:	ldr	x8, [x20, #8]
  4101dc:	add	x24, x24, #0x10
  4101e0:	cmp	x24, x8
  4101e4:	b.cc	4100cc <wcrtomb@plt+0xd70c>  // b.lo, b.ul, b.last
  4101e8:	mov	w0, #0x1                   	// #1
  4101ec:	ldp	x20, x19, [sp, #64]
  4101f0:	ldp	x22, x21, [sp, #48]
  4101f4:	ldp	x24, x23, [sp, #32]
  4101f8:	ldp	x26, x25, [sp, #16]
  4101fc:	ldp	x29, x30, [sp], #80
  410200:	ret
  410204:	bl	4026c0 <abort@plt>
  410208:	stp	x29, x30, [sp, #-48]!
  41020c:	str	x21, [sp, #16]
  410210:	stp	x20, x19, [sp, #32]
  410214:	mov	x29, sp
  410218:	cbz	x1, 41036c <wcrtomb@plt+0xd9ac>
  41021c:	mov	x21, x2
  410220:	add	x2, x29, #0x18
  410224:	mov	w3, wzr
  410228:	mov	x20, x1
  41022c:	mov	x19, x0
  410230:	bl	410370 <wcrtomb@plt+0xd9b0>
  410234:	cbz	x0, 41024c <wcrtomb@plt+0xd88c>
  410238:	cbz	x21, 410304 <wcrtomb@plt+0xd944>
  41023c:	mov	x8, x0
  410240:	mov	w0, wzr
  410244:	str	x8, [x21]
  410248:	b	41035c <wcrtomb@plt+0xd99c>
  41024c:	ldr	x8, [x19, #40]
  410250:	ldp	x10, x9, [x19, #16]
  410254:	ldr	s0, [x8, #8]
  410258:	ucvtf	s2, x10
  41025c:	ucvtf	s1, x9
  410260:	fmul	s0, s0, s2
  410264:	fcmp	s0, s1
  410268:	b.pl	4102e4 <wcrtomb@plt+0xd924>  // b.nfrst
  41026c:	mov	x0, x19
  410270:	bl	40fcf0 <wcrtomb@plt+0xd330>
  410274:	ldr	x8, [x19, #40]
  410278:	ldp	x10, x9, [x19, #16]
  41027c:	ldr	s0, [x8, #8]
  410280:	ucvtf	s1, x10
  410284:	ucvtf	s2, x9
  410288:	fmul	s3, s0, s1
  41028c:	fcmp	s3, s2
  410290:	b.pl	4102e4 <wcrtomb@plt+0xd924>  // b.nfrst
  410294:	ldr	s2, [x8, #12]
  410298:	ldrb	w8, [x8, #16]
  41029c:	fmul	s1, s2, s1
  4102a0:	cmp	w8, #0x0
  4102a4:	fmul	s0, s0, s1
  4102a8:	mov	w8, #0x5f800000            	// #1602224128
  4102ac:	fcsel	s0, s0, s1, eq  // eq = none
  4102b0:	fmov	s1, w8
  4102b4:	fcmp	s0, s1
  4102b8:	b.ge	410358 <wcrtomb@plt+0xd998>  // b.tcont
  4102bc:	fcvtzu	x1, s0
  4102c0:	mov	x0, x19
  4102c4:	bl	40ff98 <wcrtomb@plt+0xd5d8>
  4102c8:	tbz	w0, #0, 410358 <wcrtomb@plt+0xd998>
  4102cc:	add	x2, x29, #0x18
  4102d0:	mov	x0, x19
  4102d4:	mov	x1, x20
  4102d8:	mov	w3, wzr
  4102dc:	bl	410370 <wcrtomb@plt+0xd9b0>
  4102e0:	cbnz	x0, 41036c <wcrtomb@plt+0xd9ac>
  4102e4:	ldr	x21, [x29, #24]
  4102e8:	ldr	x8, [x21]
  4102ec:	cbz	x8, 41030c <wcrtomb@plt+0xd94c>
  4102f0:	ldr	x0, [x19, #72]
  4102f4:	cbz	x0, 410328 <wcrtomb@plt+0xd968>
  4102f8:	ldr	x8, [x0, #8]
  4102fc:	str	x8, [x19, #72]
  410300:	b	410334 <wcrtomb@plt+0xd974>
  410304:	mov	w0, wzr
  410308:	b	41035c <wcrtomb@plt+0xd99c>
  41030c:	str	x20, [x21]
  410310:	ldur	q0, [x19, #24]
  410314:	mov	w0, #0x1                   	// #1
  410318:	dup	v1.2d, x0
  41031c:	add	v0.2d, v0.2d, v1.2d
  410320:	stur	q0, [x19, #24]
  410324:	b	41035c <wcrtomb@plt+0xd99c>
  410328:	mov	w0, #0x10                  	// #16
  41032c:	bl	4024e0 <malloc@plt>
  410330:	cbz	x0, 410358 <wcrtomb@plt+0xd998>
  410334:	str	x20, [x0]
  410338:	ldr	x8, [x21, #8]
  41033c:	str	x8, [x0, #8]
  410340:	str	x0, [x21, #8]
  410344:	ldr	x8, [x19, #32]
  410348:	mov	w0, #0x1                   	// #1
  41034c:	add	x8, x8, #0x1
  410350:	str	x8, [x19, #32]
  410354:	b	41035c <wcrtomb@plt+0xd99c>
  410358:	mov	w0, #0xffffffff            	// #-1
  41035c:	ldp	x20, x19, [sp, #32]
  410360:	ldr	x21, [sp, #16]
  410364:	ldp	x29, x30, [sp], #48
  410368:	ret
  41036c:	bl	4026c0 <abort@plt>
  410370:	stp	x29, x30, [sp, #-80]!
  410374:	stp	x24, x23, [sp, #32]
  410378:	stp	x22, x21, [sp, #48]
  41037c:	stp	x20, x19, [sp, #64]
  410380:	ldr	x8, [x0, #16]
  410384:	ldr	x9, [x0, #48]
  410388:	mov	x20, x0
  41038c:	mov	x19, x1
  410390:	mov	x0, x1
  410394:	mov	x1, x8
  410398:	str	x25, [sp, #16]
  41039c:	mov	x29, sp
  4103a0:	mov	w21, w3
  4103a4:	mov	x23, x2
  4103a8:	blr	x9
  4103ac:	ldr	x8, [x20, #16]
  4103b0:	cmp	x0, x8
  4103b4:	b.cs	410498 <wcrtomb@plt+0xdad8>  // b.hs, b.nlast
  4103b8:	ldr	x25, [x20]
  4103bc:	mov	x22, x0
  4103c0:	add	x24, x25, x0, lsl #4
  4103c4:	str	x24, [x23]
  4103c8:	ldr	x1, [x24]
  4103cc:	cbz	x1, 410440 <wcrtomb@plt+0xda80>
  4103d0:	cmp	x1, x19
  4103d4:	b.eq	4103ec <wcrtomb@plt+0xda2c>  // b.none
  4103d8:	ldr	x8, [x20, #56]
  4103dc:	mov	x0, x19
  4103e0:	blr	x8
  4103e4:	tbz	w0, #0, 410408 <wcrtomb@plt+0xda48>
  4103e8:	ldr	x19, [x24]
  4103ec:	tbz	w21, #0, 41047c <wcrtomb@plt+0xdabc>
  4103f0:	add	x8, x25, x22, lsl #4
  4103f4:	ldr	x8, [x8, #8]
  4103f8:	cbz	x8, 410448 <wcrtomb@plt+0xda88>
  4103fc:	ldr	q0, [x8]
  410400:	str	q0, [x24]
  410404:	b	41046c <wcrtomb@plt+0xdaac>
  410408:	add	x22, x25, x22, lsl #4
  41040c:	ldr	x9, [x22, #8]!
  410410:	cbz	x9, 410440 <wcrtomb@plt+0xda80>
  410414:	ldr	x1, [x9]
  410418:	cmp	x1, x19
  41041c:	b.eq	410450 <wcrtomb@plt+0xda90>  // b.none
  410420:	ldr	x8, [x20, #56]
  410424:	mov	x0, x19
  410428:	blr	x8
  41042c:	ldr	x8, [x22]
  410430:	tbnz	w0, #0, 41045c <wcrtomb@plt+0xda9c>
  410434:	ldr	x9, [x8, #8]!
  410438:	mov	x22, x8
  41043c:	cbnz	x9, 410414 <wcrtomb@plt+0xda54>
  410440:	mov	x19, xzr
  410444:	b	41047c <wcrtomb@plt+0xdabc>
  410448:	str	xzr, [x24]
  41044c:	b	41047c <wcrtomb@plt+0xdabc>
  410450:	mov	x8, x9
  410454:	tbnz	w21, #0, 410464 <wcrtomb@plt+0xdaa4>
  410458:	b	41047c <wcrtomb@plt+0xdabc>
  41045c:	ldr	x19, [x8]
  410460:	tbz	w21, #0, 41047c <wcrtomb@plt+0xdabc>
  410464:	ldr	x9, [x8, #8]
  410468:	str	x9, [x22]
  41046c:	str	xzr, [x8]
  410470:	ldr	x9, [x20, #72]
  410474:	str	x9, [x8, #8]
  410478:	str	x8, [x20, #72]
  41047c:	mov	x0, x19
  410480:	ldp	x20, x19, [sp, #64]
  410484:	ldp	x22, x21, [sp, #48]
  410488:	ldp	x24, x23, [sp, #32]
  41048c:	ldr	x25, [sp, #16]
  410490:	ldp	x29, x30, [sp], #80
  410494:	ret
  410498:	bl	4026c0 <abort@plt>
  41049c:	stp	x29, x30, [sp, #-32]!
  4104a0:	mov	x29, sp
  4104a4:	add	x2, x29, #0x18
  4104a8:	str	x19, [sp, #16]
  4104ac:	mov	x19, x1
  4104b0:	bl	410208 <wcrtomb@plt+0xd848>
  4104b4:	ldr	x8, [x29, #24]
  4104b8:	cmp	w0, #0x0
  4104bc:	csel	x8, x8, x19, eq  // eq = none
  4104c0:	ldr	x19, [sp, #16]
  4104c4:	cmn	w0, #0x1
  4104c8:	csel	x0, xzr, x8, eq  // eq = none
  4104cc:	ldp	x29, x30, [sp], #32
  4104d0:	ret
  4104d4:	stp	x29, x30, [sp, #-48]!
  4104d8:	mov	x29, sp
  4104dc:	add	x2, x29, #0x18
  4104e0:	mov	w3, #0x1                   	// #1
  4104e4:	str	x21, [sp, #16]
  4104e8:	stp	x20, x19, [sp, #32]
  4104ec:	mov	x19, x0
  4104f0:	bl	410370 <wcrtomb@plt+0xd9b0>
  4104f4:	mov	x20, x0
  4104f8:	cbz	x0, 4105a8 <wcrtomb@plt+0xdbe8>
  4104fc:	ldr	x8, [x19, #32]
  410500:	sub	x8, x8, #0x1
  410504:	str	x8, [x19, #32]
  410508:	ldr	x8, [x29, #24]
  41050c:	ldr	x8, [x8]
  410510:	cbnz	x8, 4105a8 <wcrtomb@plt+0xdbe8>
  410514:	ldp	x10, x8, [x19, #16]
  410518:	ldr	x9, [x19, #40]
  41051c:	sub	x8, x8, #0x1
  410520:	str	x8, [x19, #24]
  410524:	ldr	s0, [x9]
  410528:	ucvtf	s2, x10
  41052c:	ucvtf	s1, x8
  410530:	fmul	s0, s0, s2
  410534:	fcmp	s0, s1
  410538:	b.le	4105a8 <wcrtomb@plt+0xdbe8>
  41053c:	mov	x0, x19
  410540:	bl	40fcf0 <wcrtomb@plt+0xd330>
  410544:	ldr	x8, [x19, #40]
  410548:	ldp	x10, x9, [x19, #16]
  41054c:	ldr	s1, [x8]
  410550:	ucvtf	s0, x10
  410554:	ucvtf	s2, x9
  410558:	fmul	s1, s1, s0
  41055c:	fcmp	s1, s2
  410560:	b.le	4105a8 <wcrtomb@plt+0xdbe8>
  410564:	ldr	s1, [x8, #4]
  410568:	ldrb	w9, [x8, #16]
  41056c:	fmul	s0, s1, s0
  410570:	cbnz	w9, 41057c <wcrtomb@plt+0xdbbc>
  410574:	ldr	s1, [x8, #8]
  410578:	fmul	s0, s0, s1
  41057c:	fcvtzu	x1, s0
  410580:	mov	x0, x19
  410584:	bl	40ff98 <wcrtomb@plt+0xd5d8>
  410588:	tbnz	w0, #0, 4105a8 <wcrtomb@plt+0xdbe8>
  41058c:	ldr	x0, [x19, #72]
  410590:	cbz	x0, 4105a4 <wcrtomb@plt+0xdbe4>
  410594:	ldr	x21, [x0, #8]
  410598:	bl	402770 <free@plt>
  41059c:	mov	x0, x21
  4105a0:	cbnz	x21, 410594 <wcrtomb@plt+0xdbd4>
  4105a4:	str	xzr, [x19, #72]
  4105a8:	mov	x0, x20
  4105ac:	ldp	x20, x19, [sp, #32]
  4105b0:	ldr	x21, [sp, #16]
  4105b4:	ldp	x29, x30, [sp], #48
  4105b8:	ret
  4105bc:	sub	sp, sp, #0xc0
  4105c0:	cmp	x0, x1
  4105c4:	stp	x29, x30, [sp, #128]
  4105c8:	str	x23, [sp, #144]
  4105cc:	stp	x22, x21, [sp, #160]
  4105d0:	stp	x20, x19, [sp, #176]
  4105d4:	add	x29, sp, #0x80
  4105d8:	b.eq	4106b4 <wcrtomb@plt+0xdcf4>  // b.none
  4105dc:	mov	x19, x1
  4105e0:	mov	x20, x0
  4105e4:	bl	402780 <__ctype_get_mb_cur_max@plt>
  4105e8:	cmp	x0, #0x1
  4105ec:	b.ls	4106bc <wcrtomb@plt+0xdcfc>  // b.plast
  4105f0:	str	x20, [sp, #80]
  4105f4:	strb	wzr, [sp, #64]
  4105f8:	stur	xzr, [sp, #68]
  4105fc:	strb	wzr, [sp, #76]
  410600:	str	x19, [sp, #16]
  410604:	strb	wzr, [sp]
  410608:	stur	xzr, [sp, #4]
  41060c:	add	x0, sp, #0x40
  410610:	strb	wzr, [sp, #12]
  410614:	bl	4107c0 <wcrtomb@plt+0xde00>
  410618:	ldrb	w8, [sp, #96]
  41061c:	cbz	w8, 410628 <wcrtomb@plt+0xdc68>
  410620:	ldr	w8, [sp, #100]
  410624:	cbz	w8, 410718 <wcrtomb@plt+0xdd58>
  410628:	mov	x0, sp
  41062c:	bl	4107c0 <wcrtomb@plt+0xde00>
  410630:	ldrb	w8, [sp, #32]
  410634:	cbz	w8, 410640 <wcrtomb@plt+0xdc80>
  410638:	ldr	w9, [sp, #36]
  41063c:	cbz	w9, 410718 <wcrtomb@plt+0xdd58>
  410640:	ldrb	w9, [sp, #96]
  410644:	cbz	w9, 410670 <wcrtomb@plt+0xdcb0>
  410648:	cbz	w8, 410774 <wcrtomb@plt+0xddb4>
  41064c:	ldr	w0, [sp, #100]
  410650:	bl	402970 <towlower@plt>
  410654:	ldr	w8, [sp, #36]
  410658:	mov	w19, w0
  41065c:	mov	w0, w8
  410660:	bl	402970 <towlower@plt>
  410664:	sub	w0, w19, w0
  410668:	cbz	w0, 410694 <wcrtomb@plt+0xdcd4>
  41066c:	b	41075c <wcrtomb@plt+0xdd9c>
  410670:	cbnz	w8, 41077c <wcrtomb@plt+0xddbc>
  410674:	ldr	x2, [sp, #88]
  410678:	ldr	x8, [sp, #24]
  41067c:	cmp	x2, x8
  410680:	b.ne	410784 <wcrtomb@plt+0xddc4>  // b.any
  410684:	ldr	x0, [sp, #80]
  410688:	ldr	x1, [sp, #16]
  41068c:	bl	402720 <memcmp@plt>
  410690:	cbnz	w0, 41075c <wcrtomb@plt+0xdd9c>
  410694:	ldp	x9, x8, [sp, #80]
  410698:	ldp	x11, x10, [sp, #16]
  41069c:	strb	wzr, [sp, #76]
  4106a0:	add	x8, x9, x8
  4106a4:	add	x9, x11, x10
  4106a8:	str	x8, [sp, #80]
  4106ac:	str	x9, [sp, #16]
  4106b0:	b	41060c <wcrtomb@plt+0xdc4c>
  4106b4:	mov	w0, wzr
  4106b8:	b	41075c <wcrtomb@plt+0xdd9c>
  4106bc:	bl	402760 <__ctype_b_loc@plt>
  4106c0:	ldr	x22, [x0]
  4106c4:	ldrb	w21, [x20]
  4106c8:	ldrh	w8, [x22, x21, lsl #1]
  4106cc:	tbz	w8, #8, 4106e0 <wcrtomb@plt+0xdd20>
  4106d0:	bl	402460 <__ctype_tolower_loc@plt>
  4106d4:	ldr	x8, [x0]
  4106d8:	lsl	x9, x21, #2
  4106dc:	ldrb	w21, [x8, x9]
  4106e0:	ldrb	w23, [x19]
  4106e4:	ldrh	w8, [x22, x23, lsl #1]
  4106e8:	tbz	w8, #8, 4106fc <wcrtomb@plt+0xdd3c>
  4106ec:	bl	402460 <__ctype_tolower_loc@plt>
  4106f0:	ldr	x8, [x0]
  4106f4:	lsl	x9, x23, #2
  4106f8:	ldrb	w23, [x8, x9]
  4106fc:	cbz	w21, 410710 <wcrtomb@plt+0xdd50>
  410700:	add	x20, x20, #0x1
  410704:	cmp	w21, w23
  410708:	add	x19, x19, #0x1
  41070c:	b.eq	4106c4 <wcrtomb@plt+0xdd04>  // b.none
  410710:	sub	w0, w21, w23
  410714:	b	41075c <wcrtomb@plt+0xdd9c>
  410718:	add	x0, sp, #0x40
  41071c:	bl	4107c0 <wcrtomb@plt+0xde00>
  410720:	ldrb	w8, [sp, #96]
  410724:	mov	w0, #0x1                   	// #1
  410728:	cbz	w8, 41075c <wcrtomb@plt+0xdd9c>
  41072c:	ldr	w8, [sp, #100]
  410730:	cbnz	w8, 41075c <wcrtomb@plt+0xdd9c>
  410734:	mov	x0, sp
  410738:	bl	4107c0 <wcrtomb@plt+0xde00>
  41073c:	ldrb	w8, [sp, #32]
  410740:	ldr	w9, [sp, #36]
  410744:	cmp	w8, #0x0
  410748:	cset	w8, eq  // eq = none
  41074c:	cmp	w9, #0x0
  410750:	cset	w9, ne  // ne = any
  410754:	orr	w8, w8, w9
  410758:	sbfx	w0, w8, #0, #1
  41075c:	ldp	x20, x19, [sp, #176]
  410760:	ldp	x22, x21, [sp, #160]
  410764:	ldr	x23, [sp, #144]
  410768:	ldp	x29, x30, [sp, #128]
  41076c:	add	sp, sp, #0xc0
  410770:	ret
  410774:	mov	w0, #0xffffffff            	// #-1
  410778:	b	41075c <wcrtomb@plt+0xdd9c>
  41077c:	mov	w0, #0x1                   	// #1
  410780:	b	41075c <wcrtomb@plt+0xdd9c>
  410784:	ldr	x0, [sp, #80]
  410788:	ldr	x1, [sp, #16]
  41078c:	cmp	x2, x8
  410790:	b.cs	4107a8 <wcrtomb@plt+0xdde8>  // b.hs, b.nlast
  410794:	bl	402720 <memcmp@plt>
  410798:	cmp	w0, #0x1
  41079c:	mov	w8, #0xffffffff            	// #-1
  4107a0:	cneg	w0, w8, ge  // ge = tcont
  4107a4:	b	41075c <wcrtomb@plt+0xdd9c>
  4107a8:	mov	x2, x8
  4107ac:	bl	402720 <memcmp@plt>
  4107b0:	cmp	w0, #0x0
  4107b4:	mov	w8, #0x1                   	// #1
  4107b8:	cneg	w0, w8, lt  // lt = tstop
  4107bc:	b	41075c <wcrtomb@plt+0xdd9c>
  4107c0:	stp	x29, x30, [sp, #-48]!
  4107c4:	stp	x22, x21, [sp, #16]
  4107c8:	stp	x20, x19, [sp, #32]
  4107cc:	ldrb	w8, [x0, #12]
  4107d0:	mov	x29, sp
  4107d4:	cbnz	w8, 4108c0 <wcrtomb@plt+0xdf00>
  4107d8:	ldrb	w8, [x0]
  4107dc:	ldr	x20, [x0, #16]
  4107e0:	mov	x19, x0
  4107e4:	cbz	w8, 410838 <wcrtomb@plt+0xde78>
  4107e8:	add	x22, x19, #0x24
  4107ec:	bl	402780 <__ctype_get_mb_cur_max@plt>
  4107f0:	mov	x1, x0
  4107f4:	mov	x0, x20
  4107f8:	bl	412208 <wcrtomb@plt+0xf848>
  4107fc:	add	x21, x19, #0x4
  410800:	mov	x2, x0
  410804:	mov	x0, x22
  410808:	mov	x1, x20
  41080c:	mov	x3, x21
  410810:	bl	414ca4 <wcrtomb@plt+0x122e4>
  410814:	cmn	x0, #0x2
  410818:	str	x0, [x19, #24]
  41081c:	b.eq	4108a8 <wcrtomb@plt+0xdee8>  // b.none
  410820:	cbz	x0, 410870 <wcrtomb@plt+0xdeb0>
  410824:	cmn	x0, #0x1
  410828:	b.ne	41088c <wcrtomb@plt+0xdecc>  // b.any
  41082c:	mov	w8, #0x1                   	// #1
  410830:	str	x8, [x19, #24]
  410834:	b	4108b4 <wcrtomb@plt+0xdef4>
  410838:	ldrb	w8, [x20]
  41083c:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410840:	add	x10, x10, #0xd7c
  410844:	lsr	w9, w8, #3
  410848:	and	x9, x9, #0x1c
  41084c:	ldr	w9, [x10, x9]
  410850:	lsr	w8, w9, w8
  410854:	tbz	w8, #0, 4108d0 <wcrtomb@plt+0xdf10>
  410858:	mov	w8, #0x1                   	// #1
  41085c:	str	x8, [x19, #24]
  410860:	ldrb	w9, [x20]
  410864:	strb	w8, [x19, #32]
  410868:	str	w9, [x19, #36]
  41086c:	b	4108b8 <wcrtomb@plt+0xdef8>
  410870:	ldr	x8, [x19, #16]
  410874:	mov	w9, #0x1                   	// #1
  410878:	str	x9, [x19, #24]
  41087c:	ldrb	w8, [x8]
  410880:	cbnz	w8, 4108e8 <wcrtomb@plt+0xdf28>
  410884:	ldr	w8, [x22]
  410888:	cbnz	w8, 410908 <wcrtomb@plt+0xdf48>
  41088c:	mov	w8, #0x1                   	// #1
  410890:	mov	x0, x21
  410894:	strb	w8, [x19, #32]
  410898:	bl	4026e0 <mbsinit@plt>
  41089c:	cbz	w0, 4108b8 <wcrtomb@plt+0xdef8>
  4108a0:	strb	wzr, [x19]
  4108a4:	b	4108b8 <wcrtomb@plt+0xdef8>
  4108a8:	ldr	x0, [x19, #16]
  4108ac:	bl	402380 <strlen@plt>
  4108b0:	str	x0, [x19, #24]
  4108b4:	strb	wzr, [x19, #32]
  4108b8:	mov	w8, #0x1                   	// #1
  4108bc:	strb	w8, [x19, #12]
  4108c0:	ldp	x20, x19, [sp, #32]
  4108c4:	ldp	x22, x21, [sp, #16]
  4108c8:	ldp	x29, x30, [sp], #48
  4108cc:	ret
  4108d0:	add	x0, x19, #0x4
  4108d4:	bl	4026e0 <mbsinit@plt>
  4108d8:	cbz	w0, 410928 <wcrtomb@plt+0xdf68>
  4108dc:	mov	w8, #0x1                   	// #1
  4108e0:	strb	w8, [x19]
  4108e4:	b	4107e8 <wcrtomb@plt+0xde28>
  4108e8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4108ec:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4108f0:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4108f4:	add	x0, x0, #0x427
  4108f8:	add	x1, x1, #0x3eb
  4108fc:	add	x3, x3, #0x3f7
  410900:	mov	w2, #0xb2                  	// #178
  410904:	bl	402920 <__assert_fail@plt>
  410908:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41090c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410910:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410914:	add	x0, x0, #0x43e
  410918:	add	x1, x1, #0x3eb
  41091c:	add	x3, x3, #0x3f7
  410920:	mov	w2, #0xb3                  	// #179
  410924:	bl	402920 <__assert_fail@plt>
  410928:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41092c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410930:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410934:	add	x0, x0, #0x3d4
  410938:	add	x1, x1, #0x3eb
  41093c:	add	x3, x3, #0x3f7
  410940:	mov	w2, #0x96                  	// #150
  410944:	bl	402920 <__assert_fail@plt>
  410948:	ldr	x8, [x0, #16]
  41094c:	add	x8, x8, x1
  410950:	str	x8, [x0, #16]
  410954:	ret
  410958:	stp	x29, x30, [sp, #-48]!
  41095c:	stp	x20, x19, [sp, #32]
  410960:	ldrb	w8, [x1]
  410964:	mov	x19, x1
  410968:	mov	x20, x0
  41096c:	str	x21, [sp, #16]
  410970:	mov	x29, sp
  410974:	strb	w8, [x0]
  410978:	cbz	w8, 410988 <wcrtomb@plt+0xdfc8>
  41097c:	ldur	x8, [x19, #4]
  410980:	stur	x8, [x20, #4]
  410984:	b	41098c <wcrtomb@plt+0xdfcc>
  410988:	stur	xzr, [x20, #4]
  41098c:	ldrb	w8, [x19, #12]
  410990:	strb	w8, [x20, #12]
  410994:	ldr	x1, [x19, #16]
  410998:	add	x8, x19, #0x28
  41099c:	cmp	x1, x8
  4109a0:	b.ne	4109b8 <wcrtomb@plt+0xdff8>  // b.any
  4109a4:	ldr	x2, [x19, #24]
  4109a8:	add	x21, x20, #0x28
  4109ac:	mov	x0, x21
  4109b0:	bl	402320 <memcpy@plt>
  4109b4:	mov	x1, x21
  4109b8:	str	x1, [x20, #16]
  4109bc:	ldr	x8, [x19, #24]
  4109c0:	str	x8, [x20, #24]
  4109c4:	ldrb	w8, [x19, #32]
  4109c8:	strb	w8, [x20, #32]
  4109cc:	cbz	w8, 4109d8 <wcrtomb@plt+0xe018>
  4109d0:	ldr	w8, [x19, #36]
  4109d4:	str	w8, [x20, #36]
  4109d8:	ldp	x20, x19, [sp, #32]
  4109dc:	ldr	x21, [sp, #16]
  4109e0:	ldp	x29, x30, [sp], #48
  4109e4:	ret
  4109e8:	and	w1, w1, #0xff
  4109ec:	cmp	w1, w2, uxtb
  4109f0:	b.ne	4109fc <wcrtomb@plt+0xe03c>  // b.any
  4109f4:	mov	x2, x3
  4109f8:	b	402820 <memchr@plt>
  4109fc:	and	w8, w2, #0xff
  410a00:	cbz	x3, 410a2c <wcrtomb@plt+0xe06c>
  410a04:	and	x9, x0, #0x7
  410a08:	cbz	x9, 410a2c <wcrtomb@plt+0xe06c>
  410a0c:	ldrb	w9, [x0]
  410a10:	cmp	w1, w9
  410a14:	b.eq	410ac8 <wcrtomb@plt+0xe108>  // b.none
  410a18:	cmp	w8, w9
  410a1c:	b.eq	410ac8 <wcrtomb@plt+0xe108>  // b.none
  410a20:	subs	x3, x3, #0x1
  410a24:	add	x0, x0, #0x1
  410a28:	b.ne	410a04 <wcrtomb@plt+0xe044>  // b.any
  410a2c:	mov	w12, w1
  410a30:	mov	w13, w8
  410a34:	bfi	w12, w12, #8, #8
  410a38:	bfi	w13, w13, #8, #8
  410a3c:	mov	x11, #0xfefefefefefefefe    	// #-72340172838076674
  410a40:	bfi	x12, x12, #16, #16
  410a44:	bfi	x13, x13, #16, #16
  410a48:	movk	x11, #0xfeff
  410a4c:	bfi	x12, x12, #32, #32
  410a50:	bfi	x13, x13, #32, #32
  410a54:	mov	x9, x3
  410a58:	subs	x3, x3, #0x8
  410a5c:	mov	x10, x0
  410a60:	b.cc	410a94 <wcrtomb@plt+0xe0d4>  // b.lo, b.ul, b.last
  410a64:	mov	x0, x10
  410a68:	ldr	x14, [x0], #8
  410a6c:	eor	x15, x14, x12
  410a70:	eor	x14, x14, x13
  410a74:	add	x16, x15, x11
  410a78:	add	x17, x14, x11
  410a7c:	bic	x15, x16, x15
  410a80:	bic	x14, x17, x14
  410a84:	orr	x14, x15, x14
  410a88:	and	x14, x14, #0x8080808080808080
  410a8c:	cbz	x14, 410a54 <wcrtomb@plt+0xe094>
  410a90:	b	410a98 <wcrtomb@plt+0xe0d8>
  410a94:	cbz	x9, 410abc <wcrtomb@plt+0xe0fc>
  410a98:	mov	x11, xzr
  410a9c:	ldrb	w12, [x10, x11]
  410aa0:	cmp	w1, w12
  410aa4:	b.eq	410ac4 <wcrtomb@plt+0xe104>  // b.none
  410aa8:	cmp	w8, w12
  410aac:	b.eq	410ac4 <wcrtomb@plt+0xe104>  // b.none
  410ab0:	add	x11, x11, #0x1
  410ab4:	cmp	x9, x11
  410ab8:	b.ne	410a9c <wcrtomb@plt+0xe0dc>  // b.any
  410abc:	mov	x0, xzr
  410ac0:	ret
  410ac4:	add	x0, x10, x11
  410ac8:	ret
  410acc:	sub	sp, sp, #0xe0
  410ad0:	stp	x29, x30, [sp, #208]
  410ad4:	add	x29, sp, #0xd0
  410ad8:	stp	x3, x4, [x29, #-72]
  410adc:	stp	x5, x6, [x29, #-56]
  410ae0:	stur	x7, [x29, #-40]
  410ae4:	stp	q1, q2, [sp, #16]
  410ae8:	stp	q3, q4, [sp, #48]
  410aec:	str	q0, [sp]
  410af0:	stp	q5, q6, [sp, #80]
  410af4:	str	q7, [sp, #112]
  410af8:	tbnz	w2, #6, 410b04 <wcrtomb@plt+0xe144>
  410afc:	mov	w3, wzr
  410b00:	b	410b5c <wcrtomb@plt+0xe19c>
  410b04:	mov	x9, #0xffffffffffffffd8    	// #-40
  410b08:	mov	x11, sp
  410b0c:	sub	x12, x29, #0x48
  410b10:	movk	x9, #0xff80, lsl #32
  410b14:	add	x10, x29, #0x10
  410b18:	mov	x8, #0xffffffffffffffd8    	// #-40
  410b1c:	add	x11, x11, #0x80
  410b20:	add	x12, x12, #0x28
  410b24:	stp	x11, x9, [x29, #-16]
  410b28:	stp	x10, x12, [x29, #-32]
  410b2c:	tbz	w8, #31, 410b4c <wcrtomb@plt+0xe18c>
  410b30:	add	w9, w8, #0x8
  410b34:	cmn	w8, #0x8
  410b38:	stur	w9, [x29, #-8]
  410b3c:	b.gt	410b4c <wcrtomb@plt+0xe18c>
  410b40:	ldur	x9, [x29, #-24]
  410b44:	add	x8, x9, x8
  410b48:	b	410b58 <wcrtomb@plt+0xe198>
  410b4c:	ldur	x8, [x29, #-32]
  410b50:	add	x9, x8, #0x8
  410b54:	stur	x9, [x29, #-32]
  410b58:	ldr	w3, [x8]
  410b5c:	bl	402900 <openat@plt>
  410b60:	bl	412240 <wcrtomb@plt+0xf880>
  410b64:	ldp	x29, x30, [sp, #208]
  410b68:	add	sp, sp, #0xe0
  410b6c:	ret
  410b70:	stp	x29, x30, [sp, #-48]!
  410b74:	str	x21, [sp, #16]
  410b78:	stp	x20, x19, [sp, #32]
  410b7c:	mov	x29, sp
  410b80:	mov	x19, x0
  410b84:	bl	402930 <__errno_location@plt>
  410b88:	ldr	w21, [x0]
  410b8c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410b90:	add	x8, x8, #0x790
  410b94:	cmp	x19, #0x0
  410b98:	mov	x20, x0
  410b9c:	csel	x0, x8, x19, eq  // eq = none
  410ba0:	mov	w1, #0x38                  	// #56
  410ba4:	bl	4128bc <wcrtomb@plt+0xfefc>
  410ba8:	str	w21, [x20]
  410bac:	ldp	x20, x19, [sp, #32]
  410bb0:	ldr	x21, [sp, #16]
  410bb4:	ldp	x29, x30, [sp], #48
  410bb8:	ret
  410bbc:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410bc0:	add	x8, x8, #0x790
  410bc4:	cmp	x0, #0x0
  410bc8:	csel	x8, x8, x0, eq  // eq = none
  410bcc:	ldr	w0, [x8]
  410bd0:	ret
  410bd4:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410bd8:	add	x8, x8, #0x790
  410bdc:	cmp	x0, #0x0
  410be0:	csel	x8, x8, x0, eq  // eq = none
  410be4:	str	w1, [x8]
  410be8:	ret
  410bec:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410bf0:	add	x8, x8, #0x790
  410bf4:	cmp	x0, #0x0
  410bf8:	ubfx	w9, w1, #5, #3
  410bfc:	csel	x8, x8, x0, eq  // eq = none
  410c00:	add	x8, x8, w9, uxtw #2
  410c04:	ldr	w9, [x8, #8]
  410c08:	lsr	w10, w9, w1
  410c0c:	and	w0, w10, #0x1
  410c10:	and	w10, w2, #0x1
  410c14:	eor	w10, w0, w10
  410c18:	lsl	w10, w10, w1
  410c1c:	eor	w9, w10, w9
  410c20:	str	w9, [x8, #8]
  410c24:	ret
  410c28:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410c2c:	add	x8, x8, #0x790
  410c30:	cmp	x0, #0x0
  410c34:	csel	x8, x8, x0, eq  // eq = none
  410c38:	ldr	w0, [x8, #4]
  410c3c:	str	w1, [x8, #4]
  410c40:	ret
  410c44:	stp	x29, x30, [sp, #-16]!
  410c48:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410c4c:	add	x8, x8, #0x790
  410c50:	cmp	x0, #0x0
  410c54:	csel	x8, x8, x0, eq  // eq = none
  410c58:	mov	w9, #0xa                   	// #10
  410c5c:	mov	x29, sp
  410c60:	str	w9, [x8]
  410c64:	cbz	x1, 410c78 <wcrtomb@plt+0xe2b8>
  410c68:	cbz	x2, 410c78 <wcrtomb@plt+0xe2b8>
  410c6c:	stp	x1, x2, [x8, #40]
  410c70:	ldp	x29, x30, [sp], #16
  410c74:	ret
  410c78:	bl	4026c0 <abort@plt>
  410c7c:	sub	sp, sp, #0x60
  410c80:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  410c84:	add	x8, x8, #0x790
  410c88:	cmp	x4, #0x0
  410c8c:	stp	x29, x30, [sp, #16]
  410c90:	str	x25, [sp, #32]
  410c94:	stp	x24, x23, [sp, #48]
  410c98:	stp	x22, x21, [sp, #64]
  410c9c:	stp	x20, x19, [sp, #80]
  410ca0:	add	x29, sp, #0x10
  410ca4:	mov	x19, x3
  410ca8:	mov	x20, x2
  410cac:	mov	x21, x1
  410cb0:	mov	x22, x0
  410cb4:	csel	x24, x8, x4, eq  // eq = none
  410cb8:	bl	402930 <__errno_location@plt>
  410cbc:	ldp	w4, w5, [x24]
  410cc0:	ldp	x7, x8, [x24, #40]
  410cc4:	ldr	w25, [x0]
  410cc8:	mov	x23, x0
  410ccc:	add	x6, x24, #0x8
  410cd0:	mov	x0, x22
  410cd4:	mov	x1, x21
  410cd8:	mov	x2, x20
  410cdc:	mov	x3, x19
  410ce0:	str	x8, [sp]
  410ce4:	bl	410d08 <wcrtomb@plt+0xe348>
  410ce8:	str	w25, [x23]
  410cec:	ldp	x20, x19, [sp, #80]
  410cf0:	ldp	x22, x21, [sp, #64]
  410cf4:	ldp	x24, x23, [sp, #48]
  410cf8:	ldr	x25, [sp, #32]
  410cfc:	ldp	x29, x30, [sp, #16]
  410d00:	add	sp, sp, #0x60
  410d04:	ret
  410d08:	sub	sp, sp, #0x120
  410d0c:	stp	x29, x30, [sp, #192]
  410d10:	add	x29, sp, #0xc0
  410d14:	ldr	x8, [x29, #96]
  410d18:	stp	x28, x27, [sp, #208]
  410d1c:	stp	x26, x25, [sp, #224]
  410d20:	stp	x24, x23, [sp, #240]
  410d24:	stp	x22, x21, [sp, #256]
  410d28:	stp	x20, x19, [sp, #272]
  410d2c:	str	x7, [sp, #88]
  410d30:	stur	x6, [x29, #-40]
  410d34:	mov	w19, w5
  410d38:	mov	w22, w4
  410d3c:	mov	x28, x3
  410d40:	mov	x20, x2
  410d44:	mov	x24, x1
  410d48:	stur	x8, [x29, #-88]
  410d4c:	mov	x21, x0
  410d50:	bl	402780 <__ctype_get_mb_cur_max@plt>
  410d54:	mov	w4, w22
  410d58:	mov	w8, wzr
  410d5c:	mov	w14, wzr
  410d60:	str	w19, [sp, #80]
  410d64:	ubfx	w19, w19, #1, #1
  410d68:	add	x9, x20, #0x1
  410d6c:	mov	w25, #0x1                   	// #1
  410d70:	str	x0, [sp, #48]
  410d74:	str	xzr, [sp, #64]
  410d78:	stur	xzr, [x29, #-64]
  410d7c:	stur	xzr, [x29, #-32]
  410d80:	str	wzr, [sp, #72]
  410d84:	stur	x20, [x29, #-80]
  410d88:	str	x9, [sp, #96]
  410d8c:	cmp	w4, #0xa
  410d90:	b.hi	411928 <wcrtomb@plt+0xef68>  // b.pmore
  410d94:	adrp	x12, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410d98:	mov	w9, w4
  410d9c:	add	x12, x12, #0x450
  410da0:	mov	x22, x24
  410da4:	adr	x10, 410dc4 <wcrtomb@plt+0xe404>
  410da8:	ldrb	w11, [x12, x9]
  410dac:	add	x10, x10, x11, lsl #2
  410db0:	ldur	x24, [x29, #-80]
  410db4:	mov	x20, xzr
  410db8:	mov	w16, wzr
  410dbc:	mov	w9, #0x1                   	// #1
  410dc0:	br	x10
  410dc4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410dc8:	add	x0, x0, #0x5ac
  410dcc:	mov	w1, w4
  410dd0:	mov	w20, w4
  410dd4:	mov	w23, w14
  410dd8:	bl	412054 <wcrtomb@plt+0xf694>
  410ddc:	str	x0, [sp, #88]
  410de0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410de4:	add	x0, x0, #0x43c
  410de8:	mov	w1, w20
  410dec:	bl	412054 <wcrtomb@plt+0xf694>
  410df0:	mov	w14, w23
  410df4:	mov	w4, w20
  410df8:	stur	x0, [x29, #-88]
  410dfc:	tbnz	w19, #0, 410e3c <wcrtomb@plt+0xe47c>
  410e00:	ldr	x8, [sp, #88]
  410e04:	ldrb	w9, [x8]
  410e08:	cbz	w9, 410e3c <wcrtomb@plt+0xe47c>
  410e0c:	mov	w27, w14
  410e10:	mov	w26, w4
  410e14:	mov	x10, xzr
  410e18:	add	x8, x8, #0x1
  410e1c:	cmp	x10, x22
  410e20:	b.cs	410e28 <wcrtomb@plt+0xe468>  // b.hs, b.nlast
  410e24:	strb	w9, [x21, x10]
  410e28:	ldrb	w9, [x8, x10]
  410e2c:	add	x20, x10, #0x1
  410e30:	mov	x10, x20
  410e34:	cbnz	w9, 410e1c <wcrtomb@plt+0xe45c>
  410e38:	b	410e48 <wcrtomb@plt+0xe488>
  410e3c:	mov	w27, w14
  410e40:	mov	w26, w4
  410e44:	mov	x20, xzr
  410e48:	ldur	x23, [x29, #-88]
  410e4c:	mov	x0, x23
  410e50:	bl	402380 <strlen@plt>
  410e54:	stur	x0, [x29, #-32]
  410e58:	stur	x23, [x29, #-64]
  410e5c:	mov	w9, #0x1                   	// #1
  410e60:	mov	w16, w19
  410e64:	mov	w4, w26
  410e68:	mov	w14, w27
  410e6c:	b	410ee8 <wcrtomb@plt+0xe528>
  410e70:	mov	w8, #0x1                   	// #1
  410e74:	b	410ec4 <wcrtomb@plt+0xe504>
  410e78:	mov	w4, wzr
  410e7c:	mov	x20, xzr
  410e80:	mov	w16, wzr
  410e84:	mov	w9, w8
  410e88:	b	410ee8 <wcrtomb@plt+0xe528>
  410e8c:	tbnz	w19, #0, 410ec4 <wcrtomb@plt+0xe504>
  410e90:	mov	w9, w8
  410e94:	b	4117dc <wcrtomb@plt+0xee1c>
  410e98:	tbz	w19, #0, 4117a4 <wcrtomb@plt+0xede4>
  410e9c:	mov	w8, #0x1                   	// #1
  410ea0:	stur	x8, [x29, #-32]
  410ea4:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410ea8:	add	x8, x8, #0x17c
  410eac:	mov	x20, xzr
  410eb0:	mov	w4, #0x5                   	// #5
  410eb4:	stur	x8, [x29, #-64]
  410eb8:	mov	w9, #0x1                   	// #1
  410ebc:	b	410ee4 <wcrtomb@plt+0xe524>
  410ec0:	tbz	w19, #0, 4117d8 <wcrtomb@plt+0xee18>
  410ec4:	mov	w9, #0x1                   	// #1
  410ec8:	stur	x9, [x29, #-32]
  410ecc:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  410ed0:	add	x9, x9, #0x43c
  410ed4:	mov	x20, xzr
  410ed8:	mov	w4, #0x2                   	// #2
  410edc:	stur	x9, [x29, #-64]
  410ee0:	mov	w9, w8
  410ee4:	mov	w16, #0x1                   	// #1
  410ee8:	mov	w15, w9
  410eec:	ldp	x8, x9, [x29, #-40]
  410ef0:	eor	w17, w16, #0x1
  410ef4:	stur	w17, [x29, #-68]
  410ef8:	mov	x23, xzr
  410efc:	cmp	x8, #0x0
  410f00:	cset	w8, eq  // eq = none
  410f04:	cmp	x9, #0x0
  410f08:	cset	w9, ne  // ne = any
  410f0c:	cmp	w4, #0x2
  410f10:	cset	w10, ne  // ne = any
  410f14:	and	w13, w10, w15
  410f18:	and	w12, w9, w16
  410f1c:	orr	w10, w10, w17
  410f20:	and	w17, w9, w13
  410f24:	orr	w9, w13, w16
  410f28:	eor	w9, w9, #0x1
  410f2c:	cset	w11, eq  // eq = none
  410f30:	orr	w8, w8, w9
  410f34:	and	w12, w15, w12
  410f38:	str	w10, [sp, #84]
  410f3c:	and	w10, w11, w16
  410f40:	stur	w8, [x29, #-24]
  410f44:	eor	w8, w15, #0x1
  410f48:	str	w12, [sp, #56]
  410f4c:	str	w10, [sp, #76]
  410f50:	stur	w15, [x29, #-72]
  410f54:	str	w8, [sp, #60]
  410f58:	stp	w16, w4, [x29, #-48]
  410f5c:	stur	w17, [x29, #-52]
  410f60:	cmn	x28, #0x1
  410f64:	b.eq	410f74 <wcrtomb@plt+0xe5b4>  // b.none
  410f68:	cmp	x23, x28
  410f6c:	b.ne	410f7c <wcrtomb@plt+0xe5bc>  // b.any
  410f70:	b	411734 <wcrtomb@plt+0xed74>
  410f74:	ldrb	w8, [x24, x23]
  410f78:	cbz	w8, 41173c <wcrtomb@plt+0xed7c>
  410f7c:	cbz	w17, 410fbc <wcrtomb@plt+0xe5fc>
  410f80:	ldur	x8, [x29, #-32]
  410f84:	cmp	x8, #0x2
  410f88:	add	x19, x23, x8
  410f8c:	b.cc	410fb4 <wcrtomb@plt+0xe5f4>  // b.lo, b.ul, b.last
  410f90:	cmn	x28, #0x1
  410f94:	b.ne	410fb4 <wcrtomb@plt+0xe5f4>  // b.any
  410f98:	mov	x0, x24
  410f9c:	mov	w26, w14
  410fa0:	bl	402380 <strlen@plt>
  410fa4:	ldp	w17, w16, [x29, #-52]
  410fa8:	ldur	w4, [x29, #-44]
  410fac:	mov	w14, w26
  410fb0:	mov	x28, x0
  410fb4:	cmp	x19, x28
  410fb8:	b.ls	410fc4 <wcrtomb@plt+0xe604>  // b.plast
  410fbc:	mov	w27, wzr
  410fc0:	b	410ffc <wcrtomb@plt+0xe63c>
  410fc4:	ldur	x1, [x29, #-64]
  410fc8:	ldur	x2, [x29, #-32]
  410fcc:	add	x0, x24, x23
  410fd0:	mov	w19, w14
  410fd4:	bl	4025e0 <bcmp@plt>
  410fd8:	ldur	w9, [x29, #-68]
  410fdc:	cmp	w0, #0x0
  410fe0:	cset	w8, ne  // ne = any
  410fe4:	cset	w27, eq  // eq = none
  410fe8:	orr	w8, w8, w9
  410fec:	tbz	w8, #0, 411834 <wcrtomb@plt+0xee74>
  410ff0:	ldp	w16, w4, [x29, #-48]
  410ff4:	ldur	w17, [x29, #-52]
  410ff8:	mov	w14, w19
  410ffc:	ldrb	w19, [x24, x23]
  411000:	cmp	w19, #0x7e
  411004:	b.hi	41121c <wcrtomb@plt+0xe85c>  // b.pmore
  411008:	adrp	x13, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41100c:	add	x13, x13, #0x45b
  411010:	adr	x12, 411034 <wcrtomb@plt+0xe674>
  411014:	ldrb	w9, [x13, x19]
  411018:	add	x12, x12, x9, lsl #2
  41101c:	mov	w10, wzr
  411020:	mov	w8, wzr
  411024:	mov	w26, #0x1                   	// #1
  411028:	mov	w11, #0x6e                  	// #110
  41102c:	mov	w9, #0x61                  	// #97
  411030:	br	x12
  411034:	ldur	w9, [x29, #-24]
  411038:	tbnz	w9, #0, 411058 <wcrtomb@plt+0xe698>
  41103c:	ldur	x10, [x29, #-40]
  411040:	lsr	w9, w19, #5
  411044:	ldr	w9, [x10, w9, uxtw #2]
  411048:	lsr	w9, w9, w19
  41104c:	tbz	w9, #0, 411058 <wcrtomb@plt+0xe698>
  411050:	mov	w9, w19
  411054:	b	411060 <wcrtomb@plt+0xe6a0>
  411058:	mov	w9, w19
  41105c:	cbz	w27, 411280 <wcrtomb@plt+0xe8c0>
  411060:	tbnz	w16, #0, 41180c <wcrtomb@plt+0xee4c>
  411064:	cmp	w4, #0x2
  411068:	cset	w8, ne  // ne = any
  41106c:	orr	w8, w8, w14
  411070:	tbnz	w8, #0, 4110b4 <wcrtomb@plt+0xe6f4>
  411074:	cmp	x20, x22
  411078:	b.cs	411084 <wcrtomb@plt+0xe6c4>  // b.hs, b.nlast
  41107c:	mov	w8, #0x27                  	// #39
  411080:	strb	w8, [x21, x20]
  411084:	add	x8, x20, #0x1
  411088:	cmp	x8, x22
  41108c:	b.cs	411098 <wcrtomb@plt+0xe6d8>  // b.hs, b.nlast
  411090:	mov	w10, #0x24                  	// #36
  411094:	strb	w10, [x21, x8]
  411098:	add	x8, x20, #0x2
  41109c:	cmp	x8, x22
  4110a0:	b.cs	4110ac <wcrtomb@plt+0xe6ec>  // b.hs, b.nlast
  4110a4:	mov	w10, #0x27                  	// #39
  4110a8:	strb	w10, [x21, x8]
  4110ac:	add	x20, x20, #0x3
  4110b0:	mov	w14, #0x1                   	// #1
  4110b4:	cmp	x20, x22
  4110b8:	b.cs	4110c4 <wcrtomb@plt+0xe704>  // b.hs, b.nlast
  4110bc:	mov	w8, #0x5c                  	// #92
  4110c0:	strb	w8, [x21, x20]
  4110c4:	add	x20, x20, #0x1
  4110c8:	b	4112b8 <wcrtomb@plt+0xe8f8>
  4110cc:	cmp	x28, #0x1
  4110d0:	b.eq	4110f4 <wcrtomb@plt+0xe734>  // b.none
  4110d4:	cmn	x28, #0x1
  4110d8:	b.ne	4110f8 <wcrtomb@plt+0xe738>  // b.any
  4110dc:	ldrb	w8, [x24, #1]
  4110e0:	cbz	w8, 4110f4 <wcrtomb@plt+0xe734>
  4110e4:	mov	w8, wzr
  4110e8:	mov	w26, wzr
  4110ec:	mov	x28, #0xffffffffffffffff    	// #-1
  4110f0:	b	411034 <wcrtomb@plt+0xe674>
  4110f4:	cbz	x23, 411104 <wcrtomb@plt+0xe744>
  4110f8:	mov	w8, wzr
  4110fc:	mov	w26, wzr
  411100:	b	411034 <wcrtomb@plt+0xe674>
  411104:	mov	w10, #0x1                   	// #1
  411108:	cmp	w4, #0x2
  41110c:	b.ne	411114 <wcrtomb@plt+0xe754>  // b.any
  411110:	tbnz	w16, #0, 41180c <wcrtomb@plt+0xee4c>
  411114:	mov	w8, wzr
  411118:	mov	w26, w10
  41111c:	b	411034 <wcrtomb@plt+0xe674>
  411120:	cmp	w4, #0x2
  411124:	b.ne	411268 <wcrtomb@plt+0xe8a8>  // b.any
  411128:	tbz	w16, #0, 411274 <wcrtomb@plt+0xe8b4>
  41112c:	b	41180c <wcrtomb@plt+0xee4c>
  411130:	mov	w9, #0x66                  	// #102
  411134:	b	4112d4 <wcrtomb@plt+0xe914>
  411138:	mov	w11, #0x74                  	// #116
  41113c:	b	41114c <wcrtomb@plt+0xe78c>
  411140:	mov	w9, #0x62                  	// #98
  411144:	b	4112d4 <wcrtomb@plt+0xe914>
  411148:	mov	w11, #0x72                  	// #114
  41114c:	ldr	w8, [sp, #84]
  411150:	mov	w9, w11
  411154:	tbnz	w8, #0, 4112d4 <wcrtomb@plt+0xe914>
  411158:	b	41180c <wcrtomb@plt+0xee4c>
  41115c:	ldur	w8, [x29, #-72]
  411160:	tbz	w8, #0, 4112e8 <wcrtomb@plt+0xe928>
  411164:	cmp	w4, #0x2
  411168:	tbnz	w16, #0, 41191c <wcrtomb@plt+0xef5c>
  41116c:	cset	w8, ne  // ne = any
  411170:	orr	w8, w8, w14
  411174:	tbz	w8, #0, 41161c <wcrtomb@plt+0xec5c>
  411178:	mov	x8, x20
  41117c:	b	41165c <wcrtomb@plt+0xec9c>
  411180:	cmp	w4, #0x5
  411184:	b.eq	41140c <wcrtomb@plt+0xea4c>  // b.none
  411188:	cmp	w4, #0x2
  41118c:	b.ne	4114bc <wcrtomb@plt+0xeafc>  // b.any
  411190:	tbz	w16, #0, 4114bc <wcrtomb@plt+0xeafc>
  411194:	b	41180c <wcrtomb@plt+0xee4c>
  411198:	mov	w9, #0x76                  	// #118
  41119c:	b	4112d4 <wcrtomb@plt+0xe914>
  4111a0:	cmp	w4, #0x2
  4111a4:	b.ne	4112f8 <wcrtomb@plt+0xe938>  // b.any
  4111a8:	tbnz	w16, #0, 41180c <wcrtomb@plt+0xee4c>
  4111ac:	ldr	x10, [sp, #64]
  4111b0:	cmp	x22, #0x0
  4111b4:	cset	w8, eq  // eq = none
  4111b8:	cmp	x10, #0x0
  4111bc:	cset	w9, ne  // ne = any
  4111c0:	orr	w8, w9, w8
  4111c4:	cmp	w8, #0x0
  4111c8:	csel	x10, x10, x22, ne  // ne = any
  4111cc:	csel	x22, x22, xzr, ne  // ne = any
  4111d0:	cmp	x20, x22
  4111d4:	str	x10, [sp, #64]
  4111d8:	b.cs	4111e4 <wcrtomb@plt+0xe824>  // b.hs, b.nlast
  4111dc:	mov	w8, #0x27                  	// #39
  4111e0:	strb	w8, [x21, x20]
  4111e4:	add	x8, x20, #0x1
  4111e8:	cmp	x8, x22
  4111ec:	b.cs	4111f8 <wcrtomb@plt+0xe838>  // b.hs, b.nlast
  4111f0:	mov	w9, #0x5c                  	// #92
  4111f4:	strb	w9, [x21, x8]
  4111f8:	add	x8, x20, #0x2
  4111fc:	cmp	x8, x22
  411200:	b.cs	41120c <wcrtomb@plt+0xe84c>  // b.hs, b.nlast
  411204:	mov	w9, #0x27                  	// #39
  411208:	strb	w9, [x21, x8]
  41120c:	mov	w14, wzr
  411210:	mov	w8, wzr
  411214:	add	x20, x20, #0x3
  411218:	b	4112fc <wcrtomb@plt+0xe93c>
  41121c:	ldr	x8, [sp, #48]
  411220:	str	w14, [sp, #28]
  411224:	cmp	x8, #0x1
  411228:	b.ne	411310 <wcrtomb@plt+0xe950>  // b.any
  41122c:	bl	402760 <__ctype_b_loc@plt>
  411230:	ldr	x8, [x0]
  411234:	mov	w11, #0x1                   	// #1
  411238:	ldrh	w8, [x8, x19, lsl #1]
  41123c:	ubfx	w26, w8, #14, #1
  411240:	ldr	w8, [sp, #60]
  411244:	ldp	w16, w4, [x29, #-48]
  411248:	ldr	w14, [sp, #28]
  41124c:	ldur	w17, [x29, #-52]
  411250:	cmp	x11, #0x1
  411254:	orr	w8, w26, w8
  411258:	b.hi	4114cc <wcrtomb@plt+0xeb0c>  // b.pmore
  41125c:	tbz	w8, #0, 4114cc <wcrtomb@plt+0xeb0c>
  411260:	mov	w8, wzr
  411264:	b	411034 <wcrtomb@plt+0xe674>
  411268:	ldr	w8, [sp, #56]
  41126c:	mov	w9, #0x5c                  	// #92
  411270:	tbz	w8, #0, 4112d4 <wcrtomb@plt+0xe914>
  411274:	mov	w8, wzr
  411278:	mov	w26, wzr
  41127c:	mov	w19, #0x5c                  	// #92
  411280:	tbnz	w8, #0, 4112b4 <wcrtomb@plt+0xe8f4>
  411284:	tbz	w14, #0, 4112b4 <wcrtomb@plt+0xe8f4>
  411288:	cmp	x20, x22
  41128c:	b.cs	411298 <wcrtomb@plt+0xe8d8>  // b.hs, b.nlast
  411290:	mov	w8, #0x27                  	// #39
  411294:	strb	w8, [x21, x20]
  411298:	add	x8, x20, #0x1
  41129c:	cmp	x8, x22
  4112a0:	b.cs	4112ac <wcrtomb@plt+0xe8ec>  // b.hs, b.nlast
  4112a4:	mov	w9, #0x27                  	// #39
  4112a8:	strb	w9, [x21, x8]
  4112ac:	mov	w14, wzr
  4112b0:	add	x20, x20, #0x2
  4112b4:	mov	w9, w19
  4112b8:	cmp	x20, x22
  4112bc:	b.cs	4112c4 <wcrtomb@plt+0xe904>  // b.hs, b.nlast
  4112c0:	strb	w9, [x21, x20]
  4112c4:	add	x20, x20, #0x1
  4112c8:	and	w25, w25, w26
  4112cc:	add	x23, x23, #0x1
  4112d0:	b	410f60 <wcrtomb@plt+0xe5a0>
  4112d4:	ldur	w10, [x29, #-72]
  4112d8:	mov	w8, wzr
  4112dc:	mov	w26, wzr
  4112e0:	tbz	w10, #0, 411034 <wcrtomb@plt+0xe674>
  4112e4:	b	411060 <wcrtomb@plt+0xe6a0>
  4112e8:	ldr	w8, [sp, #80]
  4112ec:	tbnz	w8, #0, 4112cc <wcrtomb@plt+0xe90c>
  4112f0:	mov	w19, wzr
  4112f4:	b	4110f8 <wcrtomb@plt+0xe738>
  4112f8:	mov	w8, wzr
  4112fc:	mov	w9, #0x1                   	// #1
  411300:	mov	w19, #0x27                  	// #39
  411304:	str	w9, [sp, #72]
  411308:	mov	w26, #0x1                   	// #1
  41130c:	b	411034 <wcrtomb@plt+0xe674>
  411310:	cmn	x28, #0x1
  411314:	stur	xzr, [x29, #-16]
  411318:	b.ne	411328 <wcrtomb@plt+0xe968>  // b.any
  41131c:	mov	x0, x24
  411320:	bl	402380 <strlen@plt>
  411324:	mov	x28, x0
  411328:	ldr	x8, [sp, #96]
  41132c:	mov	x11, xzr
  411330:	mov	w26, #0x1                   	// #1
  411334:	str	x21, [sp, #32]
  411338:	add	x8, x8, x23
  41133c:	str	x8, [sp, #16]
  411340:	add	x21, x11, x23
  411344:	add	x1, x24, x21
  411348:	sub	x2, x28, x21
  41134c:	sub	x0, x29, #0x14
  411350:	sub	x3, x29, #0x10
  411354:	str	x11, [sp, #40]
  411358:	bl	414ca4 <wcrtomb@plt+0x122e4>
  41135c:	cbz	x0, 411714 <wcrtomb@plt+0xed54>
  411360:	mov	x24, x0
  411364:	cmn	x0, #0x1
  411368:	b.eq	411710 <wcrtomb@plt+0xed50>  // b.none
  41136c:	cmn	x24, #0x2
  411370:	b.eq	4116d4 <wcrtomb@plt+0xed14>  // b.none
  411374:	ldr	w9, [sp, #76]
  411378:	ldr	x21, [sp, #32]
  41137c:	cmp	x24, #0x2
  411380:	cset	w8, cc  // cc = lo, ul, last
  411384:	eor	w9, w9, #0x1
  411388:	mov	x12, #0x2b                  	// #43
  41138c:	orr	w8, w9, w8
  411390:	mov	w11, #0x1                   	// #1
  411394:	movk	x12, #0x2, lsl #32
  411398:	tbnz	w8, #0, 4113d4 <wcrtomb@plt+0xea14>
  41139c:	ldr	x9, [sp, #40]
  4113a0:	ldr	x10, [sp, #16]
  4113a4:	sub	x8, x24, #0x1
  4113a8:	add	x9, x10, x9
  4113ac:	ldrb	w10, [x9]
  4113b0:	sub	w10, w10, #0x5b
  4113b4:	cmp	w10, #0x21
  4113b8:	b.hi	4113c8 <wcrtomb@plt+0xea08>  // b.pmore
  4113bc:	lsl	x10, x11, x10
  4113c0:	tst	x10, x12
  4113c4:	b.ne	411840 <wcrtomb@plt+0xee80>  // b.any
  4113c8:	subs	x8, x8, #0x1
  4113cc:	add	x9, x9, #0x1
  4113d0:	b.ne	4113ac <wcrtomb@plt+0xe9ec>  // b.any
  4113d4:	ldur	w0, [x29, #-20]
  4113d8:	bl	4028e0 <iswprint@plt>
  4113dc:	ldr	x21, [sp, #40]
  4113e0:	cmp	w0, #0x0
  4113e4:	cset	w8, ne  // ne = any
  4113e8:	sub	x0, x29, #0x10
  4113ec:	and	w26, w26, w8
  4113f0:	add	x21, x24, x21
  4113f4:	bl	4026e0 <mbsinit@plt>
  4113f8:	mov	x11, x21
  4113fc:	ldr	x21, [sp, #32]
  411400:	ldur	x24, [x29, #-80]
  411404:	cbz	w0, 411340 <wcrtomb@plt+0xe980>
  411408:	b	411240 <wcrtomb@plt+0xe880>
  41140c:	ldr	w8, [sp, #80]
  411410:	tbz	w8, #2, 4114bc <wcrtomb@plt+0xeafc>
  411414:	add	x9, x23, #0x2
  411418:	cmp	x9, x28
  41141c:	b.cs	4114bc <wcrtomb@plt+0xeafc>  // b.hs, b.nlast
  411420:	add	x8, x23, x24
  411424:	ldrb	w8, [x8, #1]
  411428:	cmp	w8, #0x3f
  41142c:	b.ne	4114bc <wcrtomb@plt+0xeafc>  // b.any
  411430:	ldrb	w19, [x24, x9]
  411434:	mov	w8, wzr
  411438:	cmp	w19, #0x3e
  41143c:	b.hi	411728 <wcrtomb@plt+0xed68>  // b.pmore
  411440:	mov	w10, #0x1                   	// #1
  411444:	mov	x11, #0xa38200000000        	// #179778741075968
  411448:	lsl	x10, x10, x19
  41144c:	movk	x11, #0x7000, lsl #48
  411450:	tst	x10, x11
  411454:	b.eq	411728 <wcrtomb@plt+0xed68>  // b.none
  411458:	tbnz	w16, #0, 41180c <wcrtomb@plt+0xee4c>
  41145c:	cmp	x20, x22
  411460:	b.cs	41146c <wcrtomb@plt+0xeaac>  // b.hs, b.nlast
  411464:	mov	w8, #0x3f                  	// #63
  411468:	strb	w8, [x21, x20]
  41146c:	add	x8, x20, #0x1
  411470:	cmp	x8, x22
  411474:	b.cs	411480 <wcrtomb@plt+0xeac0>  // b.hs, b.nlast
  411478:	mov	w10, #0x22                  	// #34
  41147c:	strb	w10, [x21, x8]
  411480:	add	x8, x20, #0x2
  411484:	cmp	x8, x22
  411488:	b.cs	411494 <wcrtomb@plt+0xead4>  // b.hs, b.nlast
  41148c:	mov	w10, #0x22                  	// #34
  411490:	strb	w10, [x21, x8]
  411494:	add	x8, x20, #0x3
  411498:	cmp	x8, x22
  41149c:	b.cs	4114a8 <wcrtomb@plt+0xeae8>  // b.hs, b.nlast
  4114a0:	mov	w10, #0x3f                  	// #63
  4114a4:	strb	w10, [x21, x8]
  4114a8:	mov	w8, wzr
  4114ac:	mov	w26, wzr
  4114b0:	add	x20, x20, #0x4
  4114b4:	mov	x23, x9
  4114b8:	b	411034 <wcrtomb@plt+0xe674>
  4114bc:	mov	w8, wzr
  4114c0:	mov	w26, wzr
  4114c4:	mov	w19, #0x3f                  	// #63
  4114c8:	b	411034 <wcrtomb@plt+0xe674>
  4114cc:	mov	w10, wzr
  4114d0:	add	x9, x11, x23
  4114d4:	tbz	w8, #0, 411534 <wcrtomb@plt+0xeb74>
  4114d8:	b	4115e0 <wcrtomb@plt+0xec20>
  4114dc:	and	w12, w10, #0x1
  4114e0:	orn	w12, w12, w14
  4114e4:	tbnz	w12, #0, 411514 <wcrtomb@plt+0xeb54>
  4114e8:	cmp	x20, x22
  4114ec:	b.cs	4114f8 <wcrtomb@plt+0xeb38>  // b.hs, b.nlast
  4114f0:	mov	w12, #0x27                  	// #39
  4114f4:	strb	w12, [x21, x20]
  4114f8:	add	x12, x20, #0x1
  4114fc:	cmp	x12, x22
  411500:	b.cs	41150c <wcrtomb@plt+0xeb4c>  // b.hs, b.nlast
  411504:	mov	w13, #0x27                  	// #39
  411508:	strb	w13, [x21, x12]
  41150c:	mov	w14, wzr
  411510:	add	x20, x20, #0x2
  411514:	cmp	x20, x22
  411518:	b.cs	411520 <wcrtomb@plt+0xeb60>  // b.hs, b.nlast
  41151c:	strb	w19, [x21, x20]
  411520:	ldr	x12, [sp, #96]
  411524:	add	x20, x20, #0x1
  411528:	ldrb	w19, [x12, x23]
  41152c:	mov	x23, x11
  411530:	tbnz	w8, #0, 4115e0 <wcrtomb@plt+0xec20>
  411534:	tbnz	w16, #0, 41180c <wcrtomb@plt+0xee4c>
  411538:	cmp	w4, #0x2
  41153c:	cset	w10, ne  // ne = any
  411540:	orr	w10, w10, w14
  411544:	tbnz	w10, #0, 411588 <wcrtomb@plt+0xebc8>
  411548:	cmp	x20, x22
  41154c:	b.cs	411558 <wcrtomb@plt+0xeb98>  // b.hs, b.nlast
  411550:	mov	w10, #0x27                  	// #39
  411554:	strb	w10, [x21, x20]
  411558:	add	x10, x20, #0x1
  41155c:	cmp	x10, x22
  411560:	b.cs	41156c <wcrtomb@plt+0xebac>  // b.hs, b.nlast
  411564:	mov	w11, #0x24                  	// #36
  411568:	strb	w11, [x21, x10]
  41156c:	add	x10, x20, #0x2
  411570:	cmp	x10, x22
  411574:	b.cs	411580 <wcrtomb@plt+0xebc0>  // b.hs, b.nlast
  411578:	mov	w11, #0x27                  	// #39
  41157c:	strb	w11, [x21, x10]
  411580:	add	x20, x20, #0x3
  411584:	mov	w14, #0x1                   	// #1
  411588:	cmp	x20, x22
  41158c:	b.cs	411598 <wcrtomb@plt+0xebd8>  // b.hs, b.nlast
  411590:	mov	w10, #0x5c                  	// #92
  411594:	strb	w10, [x21, x20]
  411598:	add	x10, x20, #0x1
  41159c:	cmp	x10, x22
  4115a0:	b.cs	4115b0 <wcrtomb@plt+0xebf0>  // b.hs, b.nlast
  4115a4:	mov	w11, #0x30                  	// #48
  4115a8:	bfxil	w11, w19, #6, #2
  4115ac:	strb	w11, [x21, x10]
  4115b0:	add	x10, x20, #0x2
  4115b4:	cmp	x10, x22
  4115b8:	b.cs	4115c8 <wcrtomb@plt+0xec08>  // b.hs, b.nlast
  4115bc:	mov	w11, #0x30                  	// #48
  4115c0:	bfxil	w11, w19, #3, #3
  4115c4:	strb	w11, [x21, x10]
  4115c8:	mov	w11, #0x30                  	// #48
  4115cc:	bfxil	w11, w19, #0, #3
  4115d0:	add	x20, x20, #0x3
  4115d4:	mov	w10, #0x1                   	// #1
  4115d8:	mov	w19, w11
  4115dc:	b	411604 <wcrtomb@plt+0xec44>
  4115e0:	tbz	w27, #0, 411600 <wcrtomb@plt+0xec40>
  4115e4:	cmp	x20, x22
  4115e8:	b.cs	4115f4 <wcrtomb@plt+0xec34>  // b.hs, b.nlast
  4115ec:	mov	w11, #0x5c                  	// #92
  4115f0:	strb	w11, [x21, x20]
  4115f4:	mov	w27, wzr
  4115f8:	add	x20, x20, #0x1
  4115fc:	b	411604 <wcrtomb@plt+0xec44>
  411600:	mov	w27, wzr
  411604:	add	x11, x23, #0x1
  411608:	cmp	x9, x11
  41160c:	b.hi	4114dc <wcrtomb@plt+0xeb1c>  // b.pmore
  411610:	and	w8, w10, #0x1
  411614:	tbz	w8, #0, 411284 <wcrtomb@plt+0xe8c4>
  411618:	b	4112b4 <wcrtomb@plt+0xe8f4>
  41161c:	cmp	x20, x22
  411620:	b.cs	41162c <wcrtomb@plt+0xec6c>  // b.hs, b.nlast
  411624:	mov	w8, #0x27                  	// #39
  411628:	strb	w8, [x21, x20]
  41162c:	add	x8, x20, #0x1
  411630:	cmp	x8, x22
  411634:	b.cs	411640 <wcrtomb@plt+0xec80>  // b.hs, b.nlast
  411638:	mov	w9, #0x24                  	// #36
  41163c:	strb	w9, [x21, x8]
  411640:	add	x8, x20, #0x2
  411644:	cmp	x8, x22
  411648:	b.cs	411654 <wcrtomb@plt+0xec94>  // b.hs, b.nlast
  41164c:	mov	w9, #0x27                  	// #39
  411650:	strb	w9, [x21, x8]
  411654:	add	x8, x20, #0x3
  411658:	mov	w14, #0x1                   	// #1
  41165c:	cmp	x8, x22
  411660:	b.cs	41166c <wcrtomb@plt+0xecac>  // b.hs, b.nlast
  411664:	mov	w9, #0x5c                  	// #92
  411668:	strb	w9, [x21, x8]
  41166c:	cmp	w4, #0x2
  411670:	add	x20, x8, #0x1
  411674:	b.eq	4116c4 <wcrtomb@plt+0xed04>  // b.none
  411678:	add	x9, x23, #0x1
  41167c:	cmp	x9, x28
  411680:	b.cs	4116c4 <wcrtomb@plt+0xed04>  // b.hs, b.nlast
  411684:	ldrb	w9, [x24, x9]
  411688:	sub	w9, w9, #0x30
  41168c:	cmp	w9, #0x9
  411690:	b.hi	4116c4 <wcrtomb@plt+0xed04>  // b.pmore
  411694:	cmp	x20, x22
  411698:	b.cs	4116a4 <wcrtomb@plt+0xece4>  // b.hs, b.nlast
  41169c:	mov	w9, #0x30                  	// #48
  4116a0:	strb	w9, [x21, x20]
  4116a4:	add	x9, x8, #0x2
  4116a8:	cmp	x9, x22
  4116ac:	b.cs	4116b8 <wcrtomb@plt+0xecf8>  // b.hs, b.nlast
  4116b0:	mov	w10, #0x30                  	// #48
  4116b4:	strb	w10, [x21, x9]
  4116b8:	mov	w26, wzr
  4116bc:	add	x20, x8, #0x3
  4116c0:	b	4116c8 <wcrtomb@plt+0xed08>
  4116c4:	mov	w26, wzr
  4116c8:	mov	w8, #0x1                   	// #1
  4116cc:	mov	w19, #0x30                  	// #48
  4116d0:	b	411034 <wcrtomb@plt+0xe674>
  4116d4:	cmp	x28, x21
  4116d8:	b.ls	411710 <wcrtomb@plt+0xed50>  // b.plast
  4116dc:	ldur	x24, [x29, #-80]
  4116e0:	ldp	x21, x11, [sp, #32]
  4116e4:	sub	x8, x28, x23
  4116e8:	add	x9, x24, x23
  4116ec:	ldrb	w10, [x9, x11]
  4116f0:	cbz	w10, 411720 <wcrtomb@plt+0xed60>
  4116f4:	add	x11, x11, #0x1
  4116f8:	add	x10, x23, x11
  4116fc:	cmp	x10, x28
  411700:	b.cc	4116ec <wcrtomb@plt+0xed2c>  // b.lo, b.ul, b.last
  411704:	mov	w26, wzr
  411708:	mov	x11, x8
  41170c:	b	411240 <wcrtomb@plt+0xe880>
  411710:	mov	w26, wzr
  411714:	ldp	x21, x11, [sp, #32]
  411718:	ldur	x24, [x29, #-80]
  41171c:	b	411240 <wcrtomb@plt+0xe880>
  411720:	mov	w26, wzr
  411724:	b	411240 <wcrtomb@plt+0xe880>
  411728:	mov	w19, #0x3f                  	// #63
  41172c:	mov	w26, w8
  411730:	b	411034 <wcrtomb@plt+0xe674>
  411734:	mov	x28, x23
  411738:	b	411740 <wcrtomb@plt+0xed80>
  41173c:	mov	x28, #0xffffffffffffffff    	// #-1
  411740:	cmp	w4, #0x2
  411744:	ldur	w10, [x29, #-72]
  411748:	cset	w8, eq  // eq = none
  41174c:	cmp	x20, #0x0
  411750:	cset	w9, eq  // eq = none
  411754:	and	w8, w8, w9
  411758:	and	w8, w16, w8
  41175c:	tbnz	w8, #0, 411810 <wcrtomb@plt+0xee50>
  411760:	cmp	w4, #0x2
  411764:	cset	w8, ne  // ne = any
  411768:	orr	w8, w16, w8
  41176c:	tbnz	w8, #0, 4118dc <wcrtomb@plt+0xef1c>
  411770:	ldr	w8, [sp, #72]
  411774:	eor	w8, w8, #0x1
  411778:	tbnz	w8, #0, 4118dc <wcrtomb@plt+0xef1c>
  41177c:	tbnz	w25, #0, 4118ac <wcrtomb@plt+0xeeec>
  411780:	ldr	x24, [sp, #64]
  411784:	mov	w19, wzr
  411788:	cbz	x24, 4118d8 <wcrtomb@plt+0xef18>
  41178c:	mov	w4, #0x2                   	// #2
  411790:	mov	w8, w10
  411794:	mov	w25, w19
  411798:	mov	w16, w19
  41179c:	cbz	x22, 410d8c <wcrtomb@plt+0xe3cc>
  4117a0:	b	4118dc <wcrtomb@plt+0xef1c>
  4117a4:	mov	w16, wzr
  4117a8:	cbz	x22, 4117b4 <wcrtomb@plt+0xedf4>
  4117ac:	mov	w8, #0x22                  	// #34
  4117b0:	strb	w8, [x21]
  4117b4:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4117b8:	add	x8, x8, #0x17c
  4117bc:	stur	x8, [x29, #-64]
  4117c0:	mov	w8, #0x1                   	// #1
  4117c4:	mov	w20, #0x1                   	// #1
  4117c8:	mov	w4, #0x5                   	// #5
  4117cc:	stur	x8, [x29, #-32]
  4117d0:	mov	w9, #0x1                   	// #1
  4117d4:	b	410ee8 <wcrtomb@plt+0xe528>
  4117d8:	mov	w9, #0x1                   	// #1
  4117dc:	mov	w16, wzr
  4117e0:	cbz	x22, 4117ec <wcrtomb@plt+0xee2c>
  4117e4:	mov	w8, #0x27                  	// #39
  4117e8:	strb	w8, [x21]
  4117ec:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4117f0:	add	x8, x8, #0x43c
  4117f4:	stur	x8, [x29, #-64]
  4117f8:	mov	w8, #0x1                   	// #1
  4117fc:	mov	w4, #0x2                   	// #2
  411800:	mov	w20, #0x1                   	// #1
  411804:	stur	x8, [x29, #-32]
  411808:	b	410ee8 <wcrtomb@plt+0xe528>
  41180c:	ldur	w10, [x29, #-72]
  411810:	tst	w10, #0x1
  411814:	mov	w8, #0x2                   	// #2
  411818:	mov	w9, #0x4                   	// #4
  41181c:	csel	w8, w9, w8, ne  // ne = any
  411820:	cmp	w4, #0x2
  411824:	b.ne	41182c <wcrtomb@plt+0xee6c>  // b.any
  411828:	mov	w4, w8
  41182c:	ldr	x7, [sp, #88]
  411830:	b	41185c <wcrtomb@plt+0xee9c>
  411834:	ldr	x7, [sp, #88]
  411838:	ldur	w4, [x29, #-44]
  41183c:	b	41185c <wcrtomb@plt+0xee9c>
  411840:	ldur	w8, [x29, #-72]
  411844:	ldr	x7, [sp, #88]
  411848:	ldur	x24, [x29, #-80]
  41184c:	mov	w9, #0x4                   	// #4
  411850:	tst	w8, #0x1
  411854:	mov	w8, #0x2                   	// #2
  411858:	csel	w4, w9, w8, ne  // ne = any
  41185c:	ldr	w8, [sp, #80]
  411860:	mov	x0, x21
  411864:	mov	x1, x22
  411868:	mov	x2, x24
  41186c:	and	w5, w8, #0xfffffffd
  411870:	ldur	x8, [x29, #-88]
  411874:	mov	x3, x28
  411878:	mov	x6, xzr
  41187c:	str	x8, [sp]
  411880:	bl	410d08 <wcrtomb@plt+0xe348>
  411884:	mov	x20, x0
  411888:	mov	x0, x20
  41188c:	ldp	x20, x19, [sp, #272]
  411890:	ldp	x22, x21, [sp, #256]
  411894:	ldp	x24, x23, [sp, #240]
  411898:	ldp	x26, x25, [sp, #224]
  41189c:	ldp	x28, x27, [sp, #208]
  4118a0:	ldp	x29, x30, [sp, #192]
  4118a4:	add	sp, sp, #0x120
  4118a8:	ret
  4118ac:	ldur	x8, [x29, #-88]
  4118b0:	ldr	x1, [sp, #64]
  4118b4:	ldur	x2, [x29, #-80]
  4118b8:	ldr	w5, [sp, #80]
  4118bc:	ldur	x6, [x29, #-40]
  4118c0:	ldr	x7, [sp, #88]
  4118c4:	mov	w4, #0x5                   	// #5
  4118c8:	str	x8, [sp]
  4118cc:	mov	x0, x21
  4118d0:	mov	x3, x28
  4118d4:	b	411880 <wcrtomb@plt+0xeec0>
  4118d8:	mov	w16, w19
  4118dc:	ldur	x8, [x29, #-64]
  4118e0:	cbz	x8, 41190c <wcrtomb@plt+0xef4c>
  4118e4:	tbnz	w16, #0, 41190c <wcrtomb@plt+0xef4c>
  4118e8:	ldrb	w9, [x8]
  4118ec:	cbz	w9, 41190c <wcrtomb@plt+0xef4c>
  4118f0:	add	x8, x8, #0x1
  4118f4:	cmp	x20, x22
  4118f8:	b.cs	411900 <wcrtomb@plt+0xef40>  // b.hs, b.nlast
  4118fc:	strb	w9, [x21, x20]
  411900:	ldrb	w9, [x8], #1
  411904:	add	x20, x20, #0x1
  411908:	cbnz	w9, 4118f4 <wcrtomb@plt+0xef34>
  41190c:	cmp	x20, x22
  411910:	b.cs	411888 <wcrtomb@plt+0xeec8>  // b.hs, b.nlast
  411914:	strb	wzr, [x21, x20]
  411918:	b	411888 <wcrtomb@plt+0xeec8>
  41191c:	b.ne	41182c <wcrtomb@plt+0xee6c>  // b.any
  411920:	mov	w4, #0x4                   	// #4
  411924:	b	41182c <wcrtomb@plt+0xee6c>
  411928:	bl	4026c0 <abort@plt>
  41192c:	mov	x3, x2
  411930:	mov	x2, xzr
  411934:	b	411938 <wcrtomb@plt+0xef78>
  411938:	sub	sp, sp, #0x70
  41193c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411940:	add	x8, x8, #0x790
  411944:	cmp	x3, #0x0
  411948:	stp	x29, x30, [sp, #16]
  41194c:	stp	x28, x27, [sp, #32]
  411950:	stp	x26, x25, [sp, #48]
  411954:	stp	x24, x23, [sp, #64]
  411958:	stp	x22, x21, [sp, #80]
  41195c:	stp	x20, x19, [sp, #96]
  411960:	add	x29, sp, #0x10
  411964:	mov	x19, x2
  411968:	mov	x22, x1
  41196c:	mov	x23, x0
  411970:	csel	x21, x8, x3, eq  // eq = none
  411974:	bl	402930 <__errno_location@plt>
  411978:	ldp	w4, w8, [x21]
  41197c:	cmp	x19, #0x0
  411980:	ldp	x7, x9, [x21, #40]
  411984:	ldr	w28, [x0]
  411988:	cset	w10, eq  // eq = none
  41198c:	orr	w25, w8, w10
  411990:	add	x26, x21, #0x8
  411994:	mov	x24, x0
  411998:	mov	x0, xzr
  41199c:	mov	x1, xzr
  4119a0:	mov	x2, x23
  4119a4:	mov	x3, x22
  4119a8:	mov	w5, w25
  4119ac:	mov	x6, x26
  4119b0:	str	x9, [sp]
  4119b4:	bl	410d08 <wcrtomb@plt+0xe348>
  4119b8:	add	x27, x0, #0x1
  4119bc:	mov	x20, x0
  4119c0:	mov	x0, x27
  4119c4:	bl	412738 <wcrtomb@plt+0xfd78>
  4119c8:	ldr	w4, [x21]
  4119cc:	ldp	x7, x8, [x21, #40]
  4119d0:	mov	x1, x27
  4119d4:	mov	x2, x23
  4119d8:	mov	x3, x22
  4119dc:	mov	w5, w25
  4119e0:	mov	x6, x26
  4119e4:	mov	x21, x0
  4119e8:	str	x8, [sp]
  4119ec:	bl	410d08 <wcrtomb@plt+0xe348>
  4119f0:	str	w28, [x24]
  4119f4:	cbz	x19, 4119fc <wcrtomb@plt+0xf03c>
  4119f8:	str	x20, [x19]
  4119fc:	mov	x0, x21
  411a00:	ldp	x20, x19, [sp, #96]
  411a04:	ldp	x22, x21, [sp, #80]
  411a08:	ldp	x24, x23, [sp, #64]
  411a0c:	ldp	x26, x25, [sp, #48]
  411a10:	ldp	x28, x27, [sp, #32]
  411a14:	ldp	x29, x30, [sp, #16]
  411a18:	add	sp, sp, #0x70
  411a1c:	ret
  411a20:	stp	x29, x30, [sp, #-64]!
  411a24:	stp	x20, x19, [sp, #48]
  411a28:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411a2c:	stp	x22, x21, [sp, #32]
  411a30:	ldr	w8, [x20, #1008]
  411a34:	adrp	x21, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411a38:	ldr	x19, [x21, #1000]
  411a3c:	str	x23, [sp, #16]
  411a40:	cmp	w8, #0x2
  411a44:	mov	x29, sp
  411a48:	b.lt	411a6c <wcrtomb@plt+0xf0ac>  // b.tstop
  411a4c:	add	x22, x19, #0x18
  411a50:	mov	w23, #0x1                   	// #1
  411a54:	ldr	x0, [x22], #16
  411a58:	bl	402770 <free@plt>
  411a5c:	ldrsw	x8, [x20, #1008]
  411a60:	add	x23, x23, #0x1
  411a64:	cmp	x23, x8
  411a68:	b.lt	411a54 <wcrtomb@plt+0xf094>  // b.tstop
  411a6c:	ldr	x0, [x19, #8]
  411a70:	adrp	x23, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411a74:	add	x23, x23, #0x7c8
  411a78:	adrp	x22, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411a7c:	cmp	x0, x23
  411a80:	add	x22, x22, #0x3f8
  411a84:	b.eq	411a94 <wcrtomb@plt+0xf0d4>  // b.none
  411a88:	bl	402770 <free@plt>
  411a8c:	mov	w8, #0x100                 	// #256
  411a90:	stp	x8, x23, [x22]
  411a94:	cmp	x19, x22
  411a98:	b.eq	411aa8 <wcrtomb@plt+0xf0e8>  // b.none
  411a9c:	mov	x0, x19
  411aa0:	bl	402770 <free@plt>
  411aa4:	str	x22, [x21, #1000]
  411aa8:	mov	w8, #0x1                   	// #1
  411aac:	str	w8, [x20, #1008]
  411ab0:	ldp	x20, x19, [sp, #48]
  411ab4:	ldp	x22, x21, [sp, #32]
  411ab8:	ldr	x23, [sp, #16]
  411abc:	ldp	x29, x30, [sp], #64
  411ac0:	ret
  411ac4:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411ac8:	add	x3, x3, #0x790
  411acc:	mov	x2, #0xffffffffffffffff    	// #-1
  411ad0:	b	411ad4 <wcrtomb@plt+0xf114>
  411ad4:	sub	sp, sp, #0x80
  411ad8:	stp	x29, x30, [sp, #32]
  411adc:	add	x29, sp, #0x20
  411ae0:	stp	x28, x27, [sp, #48]
  411ae4:	stp	x26, x25, [sp, #64]
  411ae8:	stp	x24, x23, [sp, #80]
  411aec:	stp	x22, x21, [sp, #96]
  411af0:	stp	x20, x19, [sp, #112]
  411af4:	mov	x22, x3
  411af8:	stur	x2, [x29, #-8]
  411afc:	mov	x21, x1
  411b00:	mov	w23, w0
  411b04:	bl	402930 <__errno_location@plt>
  411b08:	tbnz	w23, #31, 411c58 <wcrtomb@plt+0xf298>
  411b0c:	adrp	x25, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411b10:	ldr	w8, [x25, #1008]
  411b14:	adrp	x28, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411b18:	ldr	w20, [x0]
  411b1c:	ldr	x27, [x28, #1000]
  411b20:	mov	x19, x0
  411b24:	cmp	w8, w23
  411b28:	b.gt	411b94 <wcrtomb@plt+0xf1d4>
  411b2c:	mov	w8, #0x7fffffff            	// #2147483647
  411b30:	cmp	w23, w8
  411b34:	stur	w20, [x29, #-12]
  411b38:	b.eq	411c5c <wcrtomb@plt+0xf29c>  // b.none
  411b3c:	adrp	x20, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  411b40:	add	x20, x20, #0x3f8
  411b44:	add	w26, w23, #0x1
  411b48:	cmp	x27, x20
  411b4c:	csel	x0, xzr, x27, eq  // eq = none
  411b50:	sbfiz	x1, x26, #4, #32
  411b54:	bl	412788 <wcrtomb@plt+0xfdc8>
  411b58:	mov	x24, x0
  411b5c:	cmp	x27, x20
  411b60:	str	x0, [x28, #1000]
  411b64:	b.ne	411b70 <wcrtomb@plt+0xf1b0>  // b.any
  411b68:	ldr	q0, [x20]
  411b6c:	str	q0, [x24]
  411b70:	ldrsw	x8, [x25, #1008]
  411b74:	mov	w1, wzr
  411b78:	add	x0, x24, x8, lsl #4
  411b7c:	sub	w8, w26, w8
  411b80:	sbfiz	x2, x8, #4, #32
  411b84:	bl	4025b0 <memset@plt>
  411b88:	ldur	w20, [x29, #-12]
  411b8c:	mov	x27, x24
  411b90:	str	w26, [x25, #1008]
  411b94:	add	x28, x27, w23, uxtw #4
  411b98:	mov	x27, x28
  411b9c:	ldr	x26, [x28]
  411ba0:	ldr	x23, [x27, #8]!
  411ba4:	ldp	w4, w8, [x22]
  411ba8:	ldp	x7, x9, [x22, #40]
  411bac:	ldur	x3, [x29, #-8]
  411bb0:	add	x24, x22, #0x8
  411bb4:	orr	w25, w8, #0x1
  411bb8:	mov	x0, x23
  411bbc:	mov	x1, x26
  411bc0:	mov	x2, x21
  411bc4:	mov	w5, w25
  411bc8:	mov	x6, x24
  411bcc:	str	x9, [sp]
  411bd0:	bl	410d08 <wcrtomb@plt+0xe348>
  411bd4:	cmp	x26, x0
  411bd8:	b.hi	411c30 <wcrtomb@plt+0xf270>  // b.pmore
  411bdc:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411be0:	add	x8, x8, #0x7c8
  411be4:	add	x26, x0, #0x1
  411be8:	cmp	x23, x8
  411bec:	str	x26, [x28]
  411bf0:	b.eq	411bfc <wcrtomb@plt+0xf23c>  // b.none
  411bf4:	mov	x0, x23
  411bf8:	bl	402770 <free@plt>
  411bfc:	mov	x0, x26
  411c00:	bl	412738 <wcrtomb@plt+0xfd78>
  411c04:	str	x0, [x27]
  411c08:	ldr	w4, [x22]
  411c0c:	ldp	x7, x8, [x22, #40]
  411c10:	ldur	x3, [x29, #-8]
  411c14:	mov	x1, x26
  411c18:	mov	x2, x21
  411c1c:	mov	w5, w25
  411c20:	mov	x6, x24
  411c24:	mov	x23, x0
  411c28:	str	x8, [sp]
  411c2c:	bl	410d08 <wcrtomb@plt+0xe348>
  411c30:	str	w20, [x19]
  411c34:	mov	x0, x23
  411c38:	ldp	x20, x19, [sp, #112]
  411c3c:	ldp	x22, x21, [sp, #96]
  411c40:	ldp	x24, x23, [sp, #80]
  411c44:	ldp	x26, x25, [sp, #64]
  411c48:	ldp	x28, x27, [sp, #48]
  411c4c:	ldp	x29, x30, [sp, #32]
  411c50:	add	sp, sp, #0x80
  411c54:	ret
  411c58:	bl	4026c0 <abort@plt>
  411c5c:	bl	412920 <wcrtomb@plt+0xff60>
  411c60:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411c64:	add	x3, x3, #0x790
  411c68:	b	411ad4 <wcrtomb@plt+0xf114>
  411c6c:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411c70:	add	x3, x3, #0x790
  411c74:	mov	x2, #0xffffffffffffffff    	// #-1
  411c78:	mov	x1, x0
  411c7c:	mov	w0, wzr
  411c80:	b	411ad4 <wcrtomb@plt+0xf114>
  411c84:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411c88:	mov	x2, x1
  411c8c:	add	x3, x3, #0x790
  411c90:	mov	x1, x0
  411c94:	mov	w0, wzr
  411c98:	b	411ad4 <wcrtomb@plt+0xf114>
  411c9c:	sub	sp, sp, #0x50
  411ca0:	movi	v0.2d, #0x0
  411ca4:	cmp	w1, #0xa
  411ca8:	stp	x29, x30, [sp, #64]
  411cac:	add	x29, sp, #0x40
  411cb0:	str	xzr, [sp, #48]
  411cb4:	stp	q0, q0, [sp, #16]
  411cb8:	str	q0, [sp]
  411cbc:	b.eq	411ce4 <wcrtomb@plt+0xf324>  // b.none
  411cc0:	mov	x8, x2
  411cc4:	str	w1, [sp]
  411cc8:	mov	x3, sp
  411ccc:	mov	x2, #0xffffffffffffffff    	// #-1
  411cd0:	mov	x1, x8
  411cd4:	bl	411ad4 <wcrtomb@plt+0xf114>
  411cd8:	ldp	x29, x30, [sp, #64]
  411cdc:	add	sp, sp, #0x50
  411ce0:	ret
  411ce4:	bl	4026c0 <abort@plt>
  411ce8:	sub	sp, sp, #0x50
  411cec:	movi	v0.2d, #0x0
  411cf0:	cmp	w1, #0xa
  411cf4:	stp	x29, x30, [sp, #64]
  411cf8:	add	x29, sp, #0x40
  411cfc:	str	xzr, [sp, #48]
  411d00:	stp	q0, q0, [sp, #16]
  411d04:	str	q0, [sp]
  411d08:	b.eq	411d30 <wcrtomb@plt+0xf370>  // b.none
  411d0c:	mov	x8, x3
  411d10:	str	w1, [sp]
  411d14:	mov	x3, sp
  411d18:	mov	x1, x2
  411d1c:	mov	x2, x8
  411d20:	bl	411ad4 <wcrtomb@plt+0xf114>
  411d24:	ldp	x29, x30, [sp, #64]
  411d28:	add	sp, sp, #0x50
  411d2c:	ret
  411d30:	bl	4026c0 <abort@plt>
  411d34:	mov	x2, x1
  411d38:	mov	w1, w0
  411d3c:	mov	w0, wzr
  411d40:	b	411c9c <wcrtomb@plt+0xf2dc>
  411d44:	mov	x3, x2
  411d48:	mov	x2, x1
  411d4c:	mov	w1, w0
  411d50:	mov	w0, wzr
  411d54:	b	411ce8 <wcrtomb@plt+0xf328>
  411d58:	sub	sp, sp, #0x50
  411d5c:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411d60:	add	x9, x9, #0x790
  411d64:	ldp	q0, q1, [x9]
  411d68:	ubfx	w10, w2, #5, #3
  411d6c:	mov	x11, sp
  411d70:	mov	x8, x1
  411d74:	stp	q0, q1, [sp]
  411d78:	ldr	q0, [x9, #32]
  411d7c:	ldr	x9, [x9, #48]
  411d80:	mov	x1, x0
  411d84:	mov	x3, sp
  411d88:	str	q0, [sp, #32]
  411d8c:	str	x9, [sp, #48]
  411d90:	add	x9, x11, w10, uxtw #2
  411d94:	ldr	w10, [x9, #8]
  411d98:	mov	w0, wzr
  411d9c:	stp	x29, x30, [sp, #64]
  411da0:	add	x29, sp, #0x40
  411da4:	lsr	w11, w10, w2
  411da8:	mvn	w11, w11
  411dac:	and	w11, w11, #0x1
  411db0:	lsl	w11, w11, w2
  411db4:	eor	w10, w11, w10
  411db8:	mov	x2, x8
  411dbc:	str	w10, [x9, #8]
  411dc0:	bl	411ad4 <wcrtomb@plt+0xf114>
  411dc4:	ldp	x29, x30, [sp, #64]
  411dc8:	add	sp, sp, #0x50
  411dcc:	ret
  411dd0:	sub	sp, sp, #0x50
  411dd4:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411dd8:	add	x9, x9, #0x790
  411ddc:	ldp	q0, q1, [x9]
  411de0:	ubfx	w10, w1, #5, #3
  411de4:	mov	x11, sp
  411de8:	mov	x8, x0
  411dec:	stp	q0, q1, [sp]
  411df0:	ldr	q0, [x9, #32]
  411df4:	ldr	x9, [x9, #48]
  411df8:	mov	x3, sp
  411dfc:	mov	x2, #0xffffffffffffffff    	// #-1
  411e00:	str	q0, [sp, #32]
  411e04:	str	x9, [sp, #48]
  411e08:	add	x9, x11, w10, uxtw #2
  411e0c:	ldr	w10, [x9, #8]
  411e10:	mov	w0, wzr
  411e14:	stp	x29, x30, [sp, #64]
  411e18:	add	x29, sp, #0x40
  411e1c:	lsr	w11, w10, w1
  411e20:	mvn	w11, w11
  411e24:	and	w11, w11, #0x1
  411e28:	lsl	w11, w11, w1
  411e2c:	eor	w10, w11, w10
  411e30:	mov	x1, x8
  411e34:	str	w10, [x9, #8]
  411e38:	bl	411ad4 <wcrtomb@plt+0xf114>
  411e3c:	ldp	x29, x30, [sp, #64]
  411e40:	add	sp, sp, #0x50
  411e44:	ret
  411e48:	sub	sp, sp, #0x50
  411e4c:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411e50:	add	x8, x8, #0x790
  411e54:	ldp	q0, q1, [x8]
  411e58:	ldr	q2, [x8, #32]
  411e5c:	ldr	x8, [x8, #48]
  411e60:	mov	x1, x0
  411e64:	stp	q0, q1, [sp]
  411e68:	ldr	w9, [sp, #12]
  411e6c:	str	x8, [sp, #48]
  411e70:	mov	x3, sp
  411e74:	mov	x2, #0xffffffffffffffff    	// #-1
  411e78:	orr	w8, w9, #0x4000000
  411e7c:	mov	w0, wzr
  411e80:	stp	x29, x30, [sp, #64]
  411e84:	add	x29, sp, #0x40
  411e88:	str	q2, [sp, #32]
  411e8c:	str	w8, [sp, #12]
  411e90:	bl	411ad4 <wcrtomb@plt+0xf114>
  411e94:	ldp	x29, x30, [sp, #64]
  411e98:	add	sp, sp, #0x50
  411e9c:	ret
  411ea0:	sub	sp, sp, #0x50
  411ea4:	adrp	x8, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411ea8:	add	x8, x8, #0x790
  411eac:	ldp	q0, q1, [x8]
  411eb0:	ldr	q2, [x8, #32]
  411eb4:	ldr	x8, [x8, #48]
  411eb8:	mov	x2, x1
  411ebc:	stp	q0, q1, [sp]
  411ec0:	ldr	w9, [sp, #12]
  411ec4:	mov	x1, x0
  411ec8:	str	x8, [sp, #48]
  411ecc:	mov	x3, sp
  411ed0:	orr	w8, w9, #0x4000000
  411ed4:	mov	w0, wzr
  411ed8:	stp	x29, x30, [sp, #64]
  411edc:	add	x29, sp, #0x40
  411ee0:	str	q2, [sp, #32]
  411ee4:	str	w8, [sp, #12]
  411ee8:	bl	411ad4 <wcrtomb@plt+0xf114>
  411eec:	ldp	x29, x30, [sp, #64]
  411ef0:	add	sp, sp, #0x50
  411ef4:	ret
  411ef8:	sub	sp, sp, #0x80
  411efc:	movi	v0.2d, #0x0
  411f00:	cmp	w1, #0xa
  411f04:	stp	x29, x30, [sp, #112]
  411f08:	add	x29, sp, #0x70
  411f0c:	str	wzr, [sp, #48]
  411f10:	stp	q0, q0, [sp, #16]
  411f14:	str	q0, [sp]
  411f18:	b.eq	411f68 <wcrtomb@plt+0xf5a8>  // b.none
  411f1c:	ldp	q0, q1, [sp]
  411f20:	ldr	w9, [sp, #48]
  411f24:	ldr	q2, [sp, #32]
  411f28:	mov	x8, x2
  411f2c:	stur	q0, [sp, #60]
  411f30:	ldr	w10, [sp, #68]
  411f34:	str	w1, [sp, #56]
  411f38:	str	w9, [sp, #108]
  411f3c:	add	x3, sp, #0x38
  411f40:	orr	w9, w10, #0x4000000
  411f44:	mov	x2, #0xffffffffffffffff    	// #-1
  411f48:	mov	x1, x8
  411f4c:	stur	q1, [sp, #76]
  411f50:	stur	q2, [sp, #92]
  411f54:	str	w9, [sp, #68]
  411f58:	bl	411ad4 <wcrtomb@plt+0xf114>
  411f5c:	ldp	x29, x30, [sp, #112]
  411f60:	add	sp, sp, #0x80
  411f64:	ret
  411f68:	bl	4026c0 <abort@plt>
  411f6c:	mov	x4, #0xffffffffffffffff    	// #-1
  411f70:	b	411f74 <wcrtomb@plt+0xf5b4>
  411f74:	sub	sp, sp, #0x50
  411f78:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  411f7c:	add	x9, x9, #0x790
  411f80:	ldp	q0, q1, [x9]
  411f84:	ldr	x10, [x9, #48]
  411f88:	stp	x29, x30, [sp, #64]
  411f8c:	add	x29, sp, #0x40
  411f90:	stp	q0, q1, [sp]
  411f94:	ldr	q0, [x9, #32]
  411f98:	mov	w9, #0xa                   	// #10
  411f9c:	str	x10, [sp, #48]
  411fa0:	str	w9, [sp]
  411fa4:	str	q0, [sp, #32]
  411fa8:	cbz	x1, 411fd4 <wcrtomb@plt+0xf614>
  411fac:	cbz	x2, 411fd4 <wcrtomb@plt+0xf614>
  411fb0:	mov	x8, x3
  411fb4:	stp	x1, x2, [sp, #40]
  411fb8:	mov	x3, sp
  411fbc:	mov	x1, x8
  411fc0:	mov	x2, x4
  411fc4:	bl	411ad4 <wcrtomb@plt+0xf114>
  411fc8:	ldp	x29, x30, [sp, #64]
  411fcc:	add	sp, sp, #0x50
  411fd0:	ret
  411fd4:	bl	4026c0 <abort@plt>
  411fd8:	mov	x3, x2
  411fdc:	mov	x2, x1
  411fe0:	mov	x4, #0xffffffffffffffff    	// #-1
  411fe4:	mov	x1, x0
  411fe8:	mov	w0, wzr
  411fec:	b	411f74 <wcrtomb@plt+0xf5b4>
  411ff0:	mov	x4, x3
  411ff4:	mov	x3, x2
  411ff8:	mov	x2, x1
  411ffc:	mov	x1, x0
  412000:	mov	w0, wzr
  412004:	b	411f74 <wcrtomb@plt+0xf5b4>
  412008:	adrp	x3, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  41200c:	add	x3, x3, #0x408
  412010:	b	411ad4 <wcrtomb@plt+0xf114>
  412014:	adrp	x3, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  412018:	mov	x2, x1
  41201c:	add	x3, x3, #0x408
  412020:	mov	x1, x0
  412024:	mov	w0, wzr
  412028:	b	411ad4 <wcrtomb@plt+0xf114>
  41202c:	adrp	x3, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  412030:	add	x3, x3, #0x408
  412034:	mov	x2, #0xffffffffffffffff    	// #-1
  412038:	b	411ad4 <wcrtomb@plt+0xf114>
  41203c:	adrp	x3, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  412040:	add	x3, x3, #0x408
  412044:	mov	x2, #0xffffffffffffffff    	// #-1
  412048:	mov	x1, x0
  41204c:	mov	w0, wzr
  412050:	b	411ad4 <wcrtomb@plt+0xf114>
  412054:	stp	x29, x30, [sp, #-32]!
  412058:	stp	x20, x19, [sp, #16]
  41205c:	mov	x20, x0
  412060:	mov	w19, w1
  412064:	mov	w2, #0x5                   	// #5
  412068:	mov	x0, xzr
  41206c:	mov	x1, x20
  412070:	mov	x29, sp
  412074:	bl	402890 <dcgettext@plt>
  412078:	cmp	x0, x20
  41207c:	b.ne	412160 <wcrtomb@plt+0xf7a0>  // b.any
  412080:	bl	420a14 <_obstack_memory_used@@Base+0xb9e0>
  412084:	ldrb	w8, [x0]
  412088:	and	w8, w8, #0xffffffdf
  41208c:	cmp	w8, #0x47
  412090:	b.eq	4120f4 <wcrtomb@plt+0xf734>  // b.none
  412094:	cmp	w8, #0x55
  412098:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  41209c:	ldrb	w8, [x0, #1]
  4120a0:	and	w8, w8, #0xffffffdf
  4120a4:	cmp	w8, #0x54
  4120a8:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  4120ac:	ldrb	w8, [x0, #2]
  4120b0:	and	w8, w8, #0xffffffdf
  4120b4:	cmp	w8, #0x46
  4120b8:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  4120bc:	ldrb	w8, [x0, #3]
  4120c0:	cmp	w8, #0x2d
  4120c4:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  4120c8:	ldrb	w8, [x0, #4]
  4120cc:	cmp	w8, #0x38
  4120d0:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  4120d4:	ldrb	w8, [x0, #5]
  4120d8:	cbnz	w8, 412148 <wcrtomb@plt+0xf788>
  4120dc:	ldrb	w8, [x20]
  4120e0:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4120e4:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4120e8:	add	x9, x9, #0x5b2
  4120ec:	add	x10, x10, #0x5ae
  4120f0:	b	412180 <wcrtomb@plt+0xf7c0>
  4120f4:	ldrb	w8, [x0, #1]
  4120f8:	and	w8, w8, #0xffffffdf
  4120fc:	cmp	w8, #0x42
  412100:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  412104:	ldrb	w8, [x0, #2]
  412108:	cmp	w8, #0x31
  41210c:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  412110:	ldrb	w8, [x0, #3]
  412114:	cmp	w8, #0x38
  412118:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  41211c:	ldrb	w8, [x0, #4]
  412120:	cmp	w8, #0x30
  412124:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  412128:	ldrb	w8, [x0, #5]
  41212c:	cmp	w8, #0x33
  412130:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  412134:	ldrb	w8, [x0, #6]
  412138:	cmp	w8, #0x30
  41213c:	b.ne	412148 <wcrtomb@plt+0xf788>  // b.any
  412140:	ldrb	w8, [x0, #7]
  412144:	cbz	w8, 41216c <wcrtomb@plt+0xf7ac>
  412148:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41214c:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412150:	add	x8, x8, #0x43c
  412154:	add	x9, x9, #0x17c
  412158:	cmp	w19, #0x9
  41215c:	csel	x0, x9, x8, eq  // eq = none
  412160:	ldp	x20, x19, [sp, #16]
  412164:	ldp	x29, x30, [sp], #32
  412168:	ret
  41216c:	ldrb	w8, [x20]
  412170:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412174:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412178:	add	x9, x9, #0x5ba
  41217c:	add	x10, x10, #0x5b6
  412180:	cmp	w8, #0x60
  412184:	csel	x0, x10, x9, eq  // eq = none
  412188:	b	412160 <wcrtomb@plt+0xf7a0>
  41218c:	stp	x29, x30, [sp, #-64]!
  412190:	str	x23, [sp, #16]
  412194:	mov	w23, #0x1                   	// #1
  412198:	stp	x22, x21, [sp, #32]
  41219c:	stp	x20, x19, [sp, #48]
  4121a0:	mov	x21, x2
  4121a4:	mov	x19, x1
  4121a8:	mov	w20, w0
  4121ac:	movk	w23, #0x7ff0, lsl #16
  4121b0:	mov	x29, sp
  4121b4:	mov	w0, w20
  4121b8:	mov	x1, x19
  4121bc:	mov	x2, x21
  4121c0:	bl	402810 <read@plt>
  4121c4:	mov	x22, x0
  4121c8:	tbz	x0, #63, 4121f0 <wcrtomb@plt+0xf830>
  4121cc:	bl	402930 <__errno_location@plt>
  4121d0:	ldr	w8, [x0]
  4121d4:	cmp	w8, #0x4
  4121d8:	b.eq	4121b4 <wcrtomb@plt+0xf7f4>  // b.none
  4121dc:	cmp	x21, x23
  4121e0:	b.cc	4121f0 <wcrtomb@plt+0xf830>  // b.lo, b.ul, b.last
  4121e4:	cmp	w8, #0x16
  4121e8:	mov	w21, #0x7ff00000            	// #2146435072
  4121ec:	b.eq	4121b4 <wcrtomb@plt+0xf7f4>  // b.none
  4121f0:	mov	x0, x22
  4121f4:	ldp	x20, x19, [sp, #48]
  4121f8:	ldp	x22, x21, [sp, #32]
  4121fc:	ldr	x23, [sp, #16]
  412200:	ldp	x29, x30, [sp], #64
  412204:	ret
  412208:	stp	x29, x30, [sp, #-32]!
  41220c:	stp	x20, x19, [sp, #16]
  412210:	mov	x19, x1
  412214:	mov	w1, wzr
  412218:	mov	x2, x19
  41221c:	mov	x29, sp
  412220:	mov	x20, x0
  412224:	bl	402820 <memchr@plt>
  412228:	sub	x8, x0, x20
  41222c:	cmp	x0, #0x0
  412230:	csinc	x0, x19, x8, eq  // eq = none
  412234:	ldp	x20, x19, [sp, #16]
  412238:	ldp	x29, x30, [sp], #32
  41223c:	ret
  412240:	stp	x29, x30, [sp, #-48]!
  412244:	stp	x20, x19, [sp, #32]
  412248:	mov	w19, w0
  41224c:	cmp	w0, #0x2
  412250:	stp	x22, x21, [sp, #16]
  412254:	mov	x29, sp
  412258:	b.hi	412288 <wcrtomb@plt+0xf8c8>  // b.pmore
  41225c:	mov	w0, w19
  412260:	bl	420c14 <_obstack_memory_used@@Base+0xbbe0>
  412264:	mov	w20, w0
  412268:	bl	402930 <__errno_location@plt>
  41226c:	ldr	w22, [x0]
  412270:	mov	x21, x0
  412274:	mov	w0, w19
  412278:	bl	402650 <close@plt>
  41227c:	str	w22, [x21]
  412280:	mov	w0, w20
  412284:	b	41228c <wcrtomb@plt+0xf8cc>
  412288:	mov	w0, w19
  41228c:	ldp	x20, x19, [sp, #32]
  412290:	ldp	x22, x21, [sp, #16]
  412294:	ldp	x29, x30, [sp], #48
  412298:	ret
  41229c:	sub	sp, sp, #0x50
  4122a0:	stp	x22, x21, [sp, #48]
  4122a4:	stp	x20, x19, [sp, #64]
  4122a8:	mov	x21, x5
  4122ac:	mov	x20, x4
  4122b0:	mov	x4, x3
  4122b4:	mov	x3, x2
  4122b8:	mov	x19, x0
  4122bc:	stp	x29, x30, [sp, #32]
  4122c0:	add	x29, sp, #0x20
  4122c4:	cbz	x1, 4122e0 <wcrtomb@plt+0xf920>
  4122c8:	mov	x2, x1
  4122cc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4122d0:	add	x1, x1, #0x5c7
  4122d4:	mov	x0, x19
  4122d8:	bl	402980 <fprintf@plt>
  4122dc:	b	4122f8 <wcrtomb@plt+0xf938>
  4122e0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4122e4:	add	x1, x1, #0x5d3
  4122e8:	mov	x0, x19
  4122ec:	mov	x2, x3
  4122f0:	mov	x3, x4
  4122f4:	bl	402980 <fprintf@plt>
  4122f8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4122fc:	add	x1, x1, #0x5da
  412300:	mov	w2, #0x5                   	// #5
  412304:	mov	x0, xzr
  412308:	bl	402890 <dcgettext@plt>
  41230c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412310:	mov	x2, x0
  412314:	add	x1, x1, #0x8c6
  412318:	mov	w3, #0x7e4                 	// #2020
  41231c:	mov	x0, x19
  412320:	bl	402980 <fprintf@plt>
  412324:	adrp	x22, 422000 <_obstack_memory_used@@Base+0xcfcc>
  412328:	add	x22, x22, #0x7ac
  41232c:	mov	x0, x22
  412330:	mov	x1, x19
  412334:	bl	4028a0 <fputs_unlocked@plt>
  412338:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41233c:	add	x1, x1, #0x5de
  412340:	mov	w2, #0x5                   	// #5
  412344:	mov	x0, xzr
  412348:	bl	402890 <dcgettext@plt>
  41234c:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412350:	mov	x1, x0
  412354:	add	x2, x2, #0x689
  412358:	mov	x0, x19
  41235c:	bl	402980 <fprintf@plt>
  412360:	mov	x0, x22
  412364:	mov	x1, x19
  412368:	bl	4028a0 <fputs_unlocked@plt>
  41236c:	cmp	x21, #0x9
  412370:	b.hi	4123c0 <wcrtomb@plt+0xfa00>  // b.pmore
  412374:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412378:	add	x8, x8, #0x5bd
  41237c:	adr	x9, 41238c <wcrtomb@plt+0xf9cc>
  412380:	ldrb	w10, [x8, x21]
  412384:	add	x9, x9, x10, lsl #2
  412388:	br	x9
  41238c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412390:	add	x1, x1, #0x6ab
  412394:	mov	w2, #0x5                   	// #5
  412398:	mov	x0, xzr
  41239c:	bl	402890 <dcgettext@plt>
  4123a0:	ldr	x2, [x20]
  4123a4:	mov	x1, x0
  4123a8:	mov	x0, x19
  4123ac:	ldp	x20, x19, [sp, #64]
  4123b0:	ldp	x22, x21, [sp, #48]
  4123b4:	ldp	x29, x30, [sp, #32]
  4123b8:	add	sp, sp, #0x50
  4123bc:	b	402980 <fprintf@plt>
  4123c0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4123c4:	add	x1, x1, #0x7ea
  4123c8:	b	41251c <wcrtomb@plt+0xfb5c>
  4123cc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4123d0:	add	x1, x1, #0x6bb
  4123d4:	mov	w2, #0x5                   	// #5
  4123d8:	mov	x0, xzr
  4123dc:	bl	402890 <dcgettext@plt>
  4123e0:	ldp	x2, x3, [x20]
  4123e4:	mov	x1, x0
  4123e8:	mov	x0, x19
  4123ec:	ldp	x20, x19, [sp, #64]
  4123f0:	ldp	x22, x21, [sp, #48]
  4123f4:	ldp	x29, x30, [sp, #32]
  4123f8:	add	sp, sp, #0x50
  4123fc:	b	402980 <fprintf@plt>
  412400:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412404:	add	x1, x1, #0x6d2
  412408:	mov	w2, #0x5                   	// #5
  41240c:	mov	x0, xzr
  412410:	bl	402890 <dcgettext@plt>
  412414:	ldp	x2, x3, [x20]
  412418:	ldr	x4, [x20, #16]
  41241c:	mov	x1, x0
  412420:	mov	x0, x19
  412424:	ldp	x20, x19, [sp, #64]
  412428:	ldp	x22, x21, [sp, #48]
  41242c:	ldp	x29, x30, [sp, #32]
  412430:	add	sp, sp, #0x50
  412434:	b	402980 <fprintf@plt>
  412438:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41243c:	add	x1, x1, #0x6ee
  412440:	mov	w2, #0x5                   	// #5
  412444:	mov	x0, xzr
  412448:	bl	402890 <dcgettext@plt>
  41244c:	ldp	x2, x3, [x20]
  412450:	ldp	x4, x5, [x20, #16]
  412454:	mov	x1, x0
  412458:	mov	x0, x19
  41245c:	ldp	x20, x19, [sp, #64]
  412460:	ldp	x22, x21, [sp, #48]
  412464:	ldp	x29, x30, [sp, #32]
  412468:	add	sp, sp, #0x50
  41246c:	b	402980 <fprintf@plt>
  412470:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412474:	add	x1, x1, #0x70e
  412478:	mov	w2, #0x5                   	// #5
  41247c:	mov	x0, xzr
  412480:	bl	402890 <dcgettext@plt>
  412484:	ldp	x2, x3, [x20]
  412488:	ldp	x4, x5, [x20, #16]
  41248c:	ldr	x6, [x20, #32]
  412490:	mov	x1, x0
  412494:	mov	x0, x19
  412498:	ldp	x20, x19, [sp, #64]
  41249c:	ldp	x22, x21, [sp, #48]
  4124a0:	ldp	x29, x30, [sp, #32]
  4124a4:	add	sp, sp, #0x50
  4124a8:	b	402980 <fprintf@plt>
  4124ac:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4124b0:	add	x1, x1, #0x732
  4124b4:	mov	w2, #0x5                   	// #5
  4124b8:	mov	x0, xzr
  4124bc:	bl	402890 <dcgettext@plt>
  4124c0:	ldp	x2, x3, [x20]
  4124c4:	ldp	x4, x5, [x20, #16]
  4124c8:	ldp	x6, x7, [x20, #32]
  4124cc:	mov	x1, x0
  4124d0:	mov	x0, x19
  4124d4:	ldp	x20, x19, [sp, #64]
  4124d8:	ldp	x22, x21, [sp, #48]
  4124dc:	ldp	x29, x30, [sp, #32]
  4124e0:	add	sp, sp, #0x50
  4124e4:	b	402980 <fprintf@plt>
  4124e8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4124ec:	add	x1, x1, #0x75a
  4124f0:	mov	w2, #0x5                   	// #5
  4124f4:	mov	x0, xzr
  4124f8:	bl	402890 <dcgettext@plt>
  4124fc:	ldp	x2, x3, [x20]
  412500:	ldp	x4, x5, [x20, #16]
  412504:	ldp	x6, x7, [x20, #32]
  412508:	ldr	x8, [x20, #48]
  41250c:	mov	x1, x0
  412510:	b	412578 <wcrtomb@plt+0xfbb8>
  412514:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412518:	add	x1, x1, #0x7b6
  41251c:	mov	w2, #0x5                   	// #5
  412520:	mov	x0, xzr
  412524:	bl	402890 <dcgettext@plt>
  412528:	ldr	q0, [x20, #48]
  41252c:	ldr	x8, [x20, #64]
  412530:	ldp	x2, x3, [x20]
  412534:	ldp	x4, x5, [x20, #16]
  412538:	ldp	x6, x7, [x20, #32]
  41253c:	mov	x1, x0
  412540:	str	x8, [sp, #16]
  412544:	str	q0, [sp]
  412548:	b	41257c <wcrtomb@plt+0xfbbc>
  41254c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412550:	add	x1, x1, #0x786
  412554:	mov	w2, #0x5                   	// #5
  412558:	mov	x0, xzr
  41255c:	bl	402890 <dcgettext@plt>
  412560:	ldp	x8, x9, [x20, #48]
  412564:	ldp	x2, x3, [x20]
  412568:	ldp	x4, x5, [x20, #16]
  41256c:	ldp	x6, x7, [x20, #32]
  412570:	mov	x1, x0
  412574:	str	x9, [sp, #8]
  412578:	str	x8, [sp]
  41257c:	mov	x0, x19
  412580:	bl	402980 <fprintf@plt>
  412584:	ldp	x20, x19, [sp, #64]
  412588:	ldp	x22, x21, [sp, #48]
  41258c:	ldp	x29, x30, [sp, #32]
  412590:	add	sp, sp, #0x50
  412594:	ret
  412598:	mov	x8, xzr
  41259c:	ldr	x9, [x4, x8, lsl #3]
  4125a0:	add	x8, x8, #0x1
  4125a4:	cbnz	x9, 41259c <wcrtomb@plt+0xfbdc>
  4125a8:	sub	x5, x8, #0x1
  4125ac:	b	41229c <wcrtomb@plt+0xf8dc>
  4125b0:	sub	sp, sp, #0x60
  4125b4:	stp	x29, x30, [sp, #80]
  4125b8:	ldr	w8, [x4, #24]
  4125bc:	mov	x5, xzr
  4125c0:	mov	x9, sp
  4125c4:	add	x29, sp, #0x50
  4125c8:	tbz	w8, #31, 4125f0 <wcrtomb@plt+0xfc30>
  4125cc:	add	w11, w8, #0x8
  4125d0:	cmn	w8, #0x8
  4125d4:	str	w11, [x4, #24]
  4125d8:	b.gt	4125ec <wcrtomb@plt+0xfc2c>
  4125dc:	ldr	x10, [x4, #8]
  4125e0:	add	x10, x10, w8, sxtw
  4125e4:	mov	w8, w11
  4125e8:	b	4125fc <wcrtomb@plt+0xfc3c>
  4125ec:	mov	w8, w11
  4125f0:	ldr	x10, [x4]
  4125f4:	add	x11, x10, #0x8
  4125f8:	str	x11, [x4]
  4125fc:	ldr	x10, [x10]
  412600:	str	x10, [x9, x5, lsl #3]
  412604:	cbz	x10, 412614 <wcrtomb@plt+0xfc54>
  412608:	add	x5, x5, #0x1
  41260c:	cmp	x5, #0xa
  412610:	b.ne	4125c8 <wcrtomb@plt+0xfc08>  // b.any
  412614:	mov	x4, sp
  412618:	bl	41229c <wcrtomb@plt+0xf8dc>
  41261c:	ldp	x29, x30, [sp, #80]
  412620:	add	sp, sp, #0x60
  412624:	ret
  412628:	sub	sp, sp, #0xf0
  41262c:	stp	x29, x30, [sp, #224]
  412630:	add	x29, sp, #0xe0
  412634:	mov	x8, #0xffffffffffffffe0    	// #-32
  412638:	mov	x9, sp
  41263c:	sub	x10, x29, #0x60
  412640:	movk	x8, #0xff80, lsl #32
  412644:	add	x11, x29, #0x10
  412648:	add	x9, x9, #0x80
  41264c:	add	x10, x10, #0x20
  412650:	stp	x9, x8, [x29, #-16]
  412654:	stp	x11, x10, [x29, #-32]
  412658:	stp	x4, x5, [x29, #-96]
  41265c:	stp	x6, x7, [x29, #-80]
  412660:	stp	q0, q1, [sp]
  412664:	ldp	q0, q1, [x29, #-32]
  412668:	sub	x4, x29, #0x40
  41266c:	stp	q2, q3, [sp, #32]
  412670:	stp	q4, q5, [sp, #64]
  412674:	stp	q6, q7, [sp, #96]
  412678:	stp	q0, q1, [x29, #-64]
  41267c:	bl	4125b0 <wcrtomb@plt+0xfbf0>
  412680:	ldp	x29, x30, [sp, #224]
  412684:	add	sp, sp, #0xf0
  412688:	ret
  41268c:	stp	x29, x30, [sp, #-16]!
  412690:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  412694:	ldr	x1, [x8, #1128]
  412698:	adrp	x0, 422000 <_obstack_memory_used@@Base+0xcfcc>
  41269c:	add	x0, x0, #0x7ac
  4126a0:	mov	x29, sp
  4126a4:	bl	4028a0 <fputs_unlocked@plt>
  4126a8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4126ac:	add	x1, x1, #0x826
  4126b0:	mov	w2, #0x5                   	// #5
  4126b4:	mov	x0, xzr
  4126b8:	bl	402890 <dcgettext@plt>
  4126bc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4126c0:	add	x1, x1, #0x83a
  4126c4:	bl	402910 <printf@plt>
  4126c8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4126cc:	add	x1, x1, #0x84b
  4126d0:	mov	w2, #0x5                   	// #5
  4126d4:	mov	x0, xzr
  4126d8:	bl	402890 <dcgettext@plt>
  4126dc:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4126e0:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4126e4:	add	x1, x1, #0x9b3
  4126e8:	add	x2, x2, #0x85f
  4126ec:	bl	402910 <printf@plt>
  4126f0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4126f4:	add	x1, x1, #0x882
  4126f8:	mov	w2, #0x5                   	// #5
  4126fc:	mov	x0, xzr
  412700:	bl	402890 <dcgettext@plt>
  412704:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412708:	add	x1, x1, #0x8a9
  41270c:	ldp	x29, x30, [sp], #16
  412710:	b	402910 <printf@plt>
  412714:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412718:	udiv	x8, x8, x1
  41271c:	cmp	x8, x0
  412720:	b.cc	41272c <wcrtomb@plt+0xfd6c>  // b.lo, b.ul, b.last
  412724:	mul	x0, x1, x0
  412728:	b	412738 <wcrtomb@plt+0xfd78>
  41272c:	stp	x29, x30, [sp, #-16]!
  412730:	mov	x29, sp
  412734:	bl	412920 <wcrtomb@plt+0xff60>
  412738:	stp	x29, x30, [sp, #-32]!
  41273c:	str	x19, [sp, #16]
  412740:	mov	x29, sp
  412744:	mov	x19, x0
  412748:	bl	4024e0 <malloc@plt>
  41274c:	cbz	x19, 412754 <wcrtomb@plt+0xfd94>
  412750:	cbz	x0, 412760 <wcrtomb@plt+0xfda0>
  412754:	ldr	x19, [sp, #16]
  412758:	ldp	x29, x30, [sp], #32
  41275c:	ret
  412760:	bl	412920 <wcrtomb@plt+0xff60>
  412764:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412768:	udiv	x8, x8, x2
  41276c:	cmp	x8, x1
  412770:	b.cc	41277c <wcrtomb@plt+0xfdbc>  // b.lo, b.ul, b.last
  412774:	mul	x1, x2, x1
  412778:	b	412788 <wcrtomb@plt+0xfdc8>
  41277c:	stp	x29, x30, [sp, #-16]!
  412780:	mov	x29, sp
  412784:	bl	412920 <wcrtomb@plt+0xff60>
  412788:	stp	x29, x30, [sp, #-32]!
  41278c:	str	x19, [sp, #16]
  412790:	mov	x19, x1
  412794:	mov	x29, sp
  412798:	cbz	x0, 4127ac <wcrtomb@plt+0xfdec>
  41279c:	cbnz	x19, 4127ac <wcrtomb@plt+0xfdec>
  4127a0:	bl	402770 <free@plt>
  4127a4:	mov	x0, xzr
  4127a8:	b	4127bc <wcrtomb@plt+0xfdfc>
  4127ac:	mov	x1, x19
  4127b0:	bl	402610 <realloc@plt>
  4127b4:	cbz	x19, 4127bc <wcrtomb@plt+0xfdfc>
  4127b8:	cbz	x0, 4127c8 <wcrtomb@plt+0xfe08>
  4127bc:	ldr	x19, [sp, #16]
  4127c0:	ldp	x29, x30, [sp], #32
  4127c4:	ret
  4127c8:	bl	412920 <wcrtomb@plt+0xff60>
  4127cc:	stp	x29, x30, [sp, #-16]!
  4127d0:	ldr	x9, [x1]
  4127d4:	mov	x29, sp
  4127d8:	cbz	x0, 4127fc <wcrtomb@plt+0xfe3c>
  4127dc:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  4127e0:	movk	x8, #0x5554
  4127e4:	udiv	x8, x8, x2
  4127e8:	cmp	x8, x9
  4127ec:	b.ls	412834 <wcrtomb@plt+0xfe74>  // b.plast
  4127f0:	add	x8, x9, x9, lsr #1
  4127f4:	add	x9, x8, #0x1
  4127f8:	b	412820 <wcrtomb@plt+0xfe60>
  4127fc:	cbnz	x9, 412810 <wcrtomb@plt+0xfe50>
  412800:	mov	w8, #0x80                  	// #128
  412804:	udiv	x8, x8, x2
  412808:	cmp	x2, #0x80
  41280c:	cinc	x9, x8, hi  // hi = pmore
  412810:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412814:	udiv	x8, x8, x2
  412818:	cmp	x8, x9
  41281c:	b.cc	412834 <wcrtomb@plt+0xfe74>  // b.lo, b.ul, b.last
  412820:	mul	x8, x9, x2
  412824:	str	x9, [x1]
  412828:	mov	x1, x8
  41282c:	ldp	x29, x30, [sp], #16
  412830:	b	412788 <wcrtomb@plt+0xfdc8>
  412834:	bl	412920 <wcrtomb@plt+0xff60>
  412838:	b	412738 <wcrtomb@plt+0xfd78>
  41283c:	stp	x29, x30, [sp, #-16]!
  412840:	ldr	x8, [x1]
  412844:	mov	x29, sp
  412848:	cbz	x0, 412868 <wcrtomb@plt+0xfea8>
  41284c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  412850:	movk	x9, #0x5554
  412854:	cmp	x8, x9
  412858:	b.cs	412870 <wcrtomb@plt+0xfeb0>  // b.hs, b.nlast
  41285c:	add	x8, x8, x8, lsr #1
  412860:	add	x8, x8, #0x1
  412864:	b	412878 <wcrtomb@plt+0xfeb8>
  412868:	cbz	x8, 412874 <wcrtomb@plt+0xfeb4>
  41286c:	tbz	x8, #63, 412878 <wcrtomb@plt+0xfeb8>
  412870:	bl	412920 <wcrtomb@plt+0xff60>
  412874:	mov	w8, #0x80                  	// #128
  412878:	str	x8, [x1]
  41287c:	mov	x1, x8
  412880:	ldp	x29, x30, [sp], #16
  412884:	b	412788 <wcrtomb@plt+0xfdc8>
  412888:	mov	w1, #0x1                   	// #1
  41288c:	b	412890 <wcrtomb@plt+0xfed0>
  412890:	stp	x29, x30, [sp, #-16]!
  412894:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412898:	udiv	x8, x8, x1
  41289c:	cmp	x8, x0
  4128a0:	mov	x29, sp
  4128a4:	b.cc	4128b8 <wcrtomb@plt+0xfef8>  // b.lo, b.ul, b.last
  4128a8:	bl	4025d0 <calloc@plt>
  4128ac:	cbz	x0, 4128b8 <wcrtomb@plt+0xfef8>
  4128b0:	ldp	x29, x30, [sp], #16
  4128b4:	ret
  4128b8:	bl	412920 <wcrtomb@plt+0xff60>
  4128bc:	stp	x29, x30, [sp, #-32]!
  4128c0:	stp	x20, x19, [sp, #16]
  4128c4:	mov	x20, x0
  4128c8:	mov	x0, x1
  4128cc:	mov	x29, sp
  4128d0:	mov	x19, x1
  4128d4:	bl	412738 <wcrtomb@plt+0xfd78>
  4128d8:	mov	x1, x20
  4128dc:	mov	x2, x19
  4128e0:	ldp	x20, x19, [sp, #16]
  4128e4:	ldp	x29, x30, [sp], #32
  4128e8:	b	402320 <memcpy@plt>
  4128ec:	stp	x29, x30, [sp, #-32]!
  4128f0:	stp	x20, x19, [sp, #16]
  4128f4:	mov	x29, sp
  4128f8:	mov	x19, x0
  4128fc:	bl	402380 <strlen@plt>
  412900:	add	x20, x0, #0x1
  412904:	mov	x0, x20
  412908:	bl	412738 <wcrtomb@plt+0xfd78>
  41290c:	mov	x1, x19
  412910:	mov	x2, x20
  412914:	ldp	x20, x19, [sp, #16]
  412918:	ldp	x29, x30, [sp], #32
  41291c:	b	402320 <memcpy@plt>
  412920:	stp	x29, x30, [sp, #-32]!
  412924:	str	x19, [sp, #16]
  412928:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  41292c:	ldr	w19, [x8, #992]
  412930:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412934:	add	x1, x1, #0x8f5
  412938:	mov	w2, #0x5                   	// #5
  41293c:	mov	x0, xzr
  412940:	mov	x29, sp
  412944:	bl	402890 <dcgettext@plt>
  412948:	adrp	x2, 422000 <_obstack_memory_used@@Base+0xcfcc>
  41294c:	mov	x3, x0
  412950:	add	x2, x2, #0xe07
  412954:	mov	w0, w19
  412958:	mov	w1, wzr
  41295c:	bl	4023b0 <error@plt>
  412960:	bl	4026c0 <abort@plt>
  412964:	stp	x29, x30, [sp, #-80]!
  412968:	cmp	w2, #0x25
  41296c:	str	x25, [sp, #16]
  412970:	stp	x24, x23, [sp, #32]
  412974:	stp	x22, x21, [sp, #48]
  412978:	stp	x20, x19, [sp, #64]
  41297c:	mov	x29, sp
  412980:	b.cs	412e18 <wcrtomb@plt+0x10458>  // b.hs, b.nlast
  412984:	cmp	x1, #0x0
  412988:	add	x8, x29, #0x18
  41298c:	mov	x24, x4
  412990:	mov	x19, x3
  412994:	mov	w22, w2
  412998:	mov	x20, x0
  41299c:	csel	x21, x8, x1, eq  // eq = none
  4129a0:	bl	402930 <__errno_location@plt>
  4129a4:	mov	x23, x0
  4129a8:	str	wzr, [x0]
  4129ac:	mov	x0, x20
  4129b0:	mov	x1, x21
  4129b4:	mov	w2, w22
  4129b8:	bl	4023d0 <strtoimax@plt>
  4129bc:	ldr	x25, [x21]
  4129c0:	cmp	x25, x20
  4129c4:	b.eq	4129e8 <wcrtomb@plt+0x10028>  // b.none
  4129c8:	ldr	w20, [x23]
  4129cc:	mov	x22, x0
  4129d0:	cbz	w20, 4129e0 <wcrtomb@plt+0x10020>
  4129d4:	cmp	w20, #0x22
  4129d8:	b.ne	412a90 <wcrtomb@plt+0x100d0>  // b.any
  4129dc:	mov	w20, #0x1                   	// #1
  4129e0:	cbnz	x24, 412a08 <wcrtomb@plt+0x10048>
  4129e4:	b	412df8 <wcrtomb@plt+0x10438>
  4129e8:	cbz	x24, 412a90 <wcrtomb@plt+0x100d0>
  4129ec:	ldrb	w1, [x20]
  4129f0:	cbz	w1, 412a90 <wcrtomb@plt+0x100d0>
  4129f4:	mov	x0, x24
  4129f8:	bl	402790 <strchr@plt>
  4129fc:	cbz	x0, 412a90 <wcrtomb@plt+0x100d0>
  412a00:	mov	w20, wzr
  412a04:	mov	w22, #0x1                   	// #1
  412a08:	ldrb	w23, [x25]
  412a0c:	cbz	w23, 412df8 <wcrtomb@plt+0x10438>
  412a10:	mov	x0, x24
  412a14:	mov	w1, w23
  412a18:	bl	402790 <strchr@plt>
  412a1c:	cbz	x0, 412d20 <wcrtomb@plt+0x10360>
  412a20:	sub	w10, w23, #0x45
  412a24:	mov	w8, #0x1                   	// #1
  412a28:	cmp	w10, #0x2f
  412a2c:	mov	w9, #0x400                 	// #1024
  412a30:	b.hi	412aac <wcrtomb@plt+0x100ec>  // b.pmore
  412a34:	mov	w11, #0x1                   	// #1
  412a38:	lsl	x10, x11, x10
  412a3c:	mov	x11, #0x8945                	// #35141
  412a40:	movk	x11, #0x30, lsl #16
  412a44:	movk	x11, #0x8144, lsl #32
  412a48:	tst	x10, x11
  412a4c:	b.eq	412aac <wcrtomb@plt+0x100ec>  // b.none
  412a50:	mov	w1, #0x30                  	// #48
  412a54:	mov	x0, x24
  412a58:	bl	402790 <strchr@plt>
  412a5c:	cbz	x0, 412a98 <wcrtomb@plt+0x100d8>
  412a60:	ldrb	w8, [x25, #1]
  412a64:	cmp	w8, #0x42
  412a68:	b.eq	412aa4 <wcrtomb@plt+0x100e4>  // b.none
  412a6c:	cmp	w8, #0x44
  412a70:	b.eq	412aa4 <wcrtomb@plt+0x100e4>  // b.none
  412a74:	cmp	w8, #0x69
  412a78:	b.ne	412a98 <wcrtomb@plt+0x100d8>  // b.any
  412a7c:	ldrb	w8, [x25, #2]
  412a80:	mov	w9, #0x3                   	// #3
  412a84:	cmp	w8, #0x42
  412a88:	csinc	x8, x9, xzr, eq  // eq = none
  412a8c:	b	412a9c <wcrtomb@plt+0x100dc>
  412a90:	mov	w20, #0x4                   	// #4
  412a94:	b	412dfc <wcrtomb@plt+0x1043c>
  412a98:	mov	w8, #0x1                   	// #1
  412a9c:	mov	w9, #0x400                 	// #1024
  412aa0:	b	412aac <wcrtomb@plt+0x100ec>
  412aa4:	mov	w8, #0x2                   	// #2
  412aa8:	mov	w9, #0x3e8                 	// #1000
  412aac:	cmp	w23, #0x59
  412ab0:	b.gt	412af0 <wcrtomb@plt+0x10130>
  412ab4:	sub	w10, w23, #0x42
  412ab8:	cmp	w10, #0xe
  412abc:	b.hi	412b38 <wcrtomb@plt+0x10178>  // b.pmore
  412ac0:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412ac4:	add	x11, x11, #0x906
  412ac8:	adr	x12, 412ad8 <wcrtomb@plt+0x10118>
  412acc:	ldrb	w13, [x11, x10]
  412ad0:	add	x12, x12, x13, lsl #2
  412ad4:	br	x12
  412ad8:	mov	x9, #0xffe0000000000000    	// #-9007199254740992
  412adc:	cmp	x22, x9
  412ae0:	b.lt	412c28 <wcrtomb@plt+0x10268>  // b.tstop
  412ae4:	mov	x9, #0x1fffffffffffff      	// #9007199254740991
  412ae8:	lsl	x11, x22, #10
  412aec:	b	412bb8 <wcrtomb@plt+0x101f8>
  412af0:	cmp	w23, #0x73
  412af4:	b.gt	412b94 <wcrtomb@plt+0x101d4>
  412af8:	sub	w10, w23, #0x62
  412afc:	cmp	w10, #0xb
  412b00:	b.hi	412ccc <wcrtomb@plt+0x1030c>  // b.pmore
  412b04:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412b08:	add	x11, x11, #0x915
  412b0c:	adr	x12, 412b20 <wcrtomb@plt+0x10160>
  412b10:	ldrb	w13, [x11, x10]
  412b14:	add	x12, x12, x13, lsl #2
  412b18:	mov	w10, wzr
  412b1c:	br	x12
  412b20:	mov	x9, #0xffc0000000000000    	// #-18014398509481984
  412b24:	cmp	x22, x9
  412b28:	b.lt	412c28 <wcrtomb@plt+0x10268>  // b.tstop
  412b2c:	mov	x9, #0x3fffffffffffff      	// #18014398509481983
  412b30:	lsl	x11, x22, #9
  412b34:	b	412bb8 <wcrtomb@plt+0x101f8>
  412b38:	cmp	w23, #0x54
  412b3c:	b.eq	412c80 <wcrtomb@plt+0x102c0>  // b.none
  412b40:	cmp	w23, #0x59
  412b44:	b.ne	412d20 <wcrtomb@plt+0x10360>  // b.any
  412b48:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412b4c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412b50:	mov	w10, wzr
  412b54:	mov	w11, #0xfffffff8            	// #-8
  412b58:	sdiv	x13, x13, x9
  412b5c:	udiv	x14, x12, x9
  412b60:	cmp	x22, x13
  412b64:	b.ge	412b74 <wcrtomb@plt+0x101b4>  // b.tcont
  412b68:	mov	w15, #0x1                   	// #1
  412b6c:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412b70:	b	412b84 <wcrtomb@plt+0x101c4>
  412b74:	cmp	x14, x22
  412b78:	mul	x16, x22, x9
  412b7c:	cset	w15, lt  // lt = tstop
  412b80:	csel	x22, x12, x16, lt  // lt = tstop
  412b84:	adds	w11, w11, #0x1
  412b88:	orr	w10, w15, w10
  412b8c:	b.cc	412b60 <wcrtomb@plt+0x101a0>  // b.lo, b.ul, b.last
  412b90:	b	412ddc <wcrtomb@plt+0x1041c>
  412b94:	cmp	w23, #0x74
  412b98:	b.eq	412c80 <wcrtomb@plt+0x102c0>  // b.none
  412b9c:	cmp	w23, #0x77
  412ba0:	b.ne	412d20 <wcrtomb@plt+0x10360>  // b.any
  412ba4:	mov	x9, #0xc000000000000000    	// #-4611686018427387904
  412ba8:	cmp	x22, x9
  412bac:	b.lt	412c28 <wcrtomb@plt+0x10268>  // b.tstop
  412bb0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  412bb4:	lsl	x11, x22, #1
  412bb8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412bbc:	cmp	x22, x9
  412bc0:	cset	w10, gt
  412bc4:	csel	x22, x12, x11, gt
  412bc8:	b	412ddc <wcrtomb@plt+0x1041c>
  412bcc:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412bd0:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412bd4:	mov	w10, wzr
  412bd8:	mov	w11, #0xfffffffd            	// #-3
  412bdc:	sdiv	x13, x13, x9
  412be0:	udiv	x14, x12, x9
  412be4:	cmp	x22, x13
  412be8:	b.ge	412bf8 <wcrtomb@plt+0x10238>  // b.tcont
  412bec:	mov	w15, #0x1                   	// #1
  412bf0:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412bf4:	b	412c08 <wcrtomb@plt+0x10248>
  412bf8:	cmp	x14, x22
  412bfc:	mul	x16, x22, x9
  412c00:	cset	w15, lt  // lt = tstop
  412c04:	csel	x22, x12, x16, lt  // lt = tstop
  412c08:	adds	w11, w11, #0x1
  412c0c:	orr	w10, w15, w10
  412c10:	b.cc	412be4 <wcrtomb@plt+0x10224>  // b.lo, b.ul, b.last
  412c14:	b	412ddc <wcrtomb@plt+0x1041c>
  412c18:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  412c1c:	sdiv	x10, x10, x9
  412c20:	cmp	x22, x10
  412c24:	b.ge	412dc4 <wcrtomb@plt+0x10404>  // b.tcont
  412c28:	mov	w10, #0x1                   	// #1
  412c2c:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412c30:	b	412ddc <wcrtomb@plt+0x1041c>
  412c34:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412c38:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412c3c:	mov	w10, wzr
  412c40:	mov	w11, #0xfffffffe            	// #-2
  412c44:	sdiv	x13, x13, x9
  412c48:	udiv	x14, x12, x9
  412c4c:	cmp	x22, x13
  412c50:	b.ge	412c60 <wcrtomb@plt+0x102a0>  // b.tcont
  412c54:	mov	w15, #0x1                   	// #1
  412c58:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412c5c:	b	412c70 <wcrtomb@plt+0x102b0>
  412c60:	cmp	x14, x22
  412c64:	mul	x16, x22, x9
  412c68:	cset	w15, lt  // lt = tstop
  412c6c:	csel	x22, x12, x16, lt  // lt = tstop
  412c70:	adds	w11, w11, #0x1
  412c74:	orr	w10, w15, w10
  412c78:	b.cc	412c4c <wcrtomb@plt+0x1028c>  // b.lo, b.ul, b.last
  412c7c:	b	412ddc <wcrtomb@plt+0x1041c>
  412c80:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412c84:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412c88:	mov	w10, wzr
  412c8c:	mov	w11, #0xfffffffc            	// #-4
  412c90:	sdiv	x13, x13, x9
  412c94:	udiv	x14, x12, x9
  412c98:	cmp	x22, x13
  412c9c:	b.ge	412cac <wcrtomb@plt+0x102ec>  // b.tcont
  412ca0:	mov	w15, #0x1                   	// #1
  412ca4:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412ca8:	b	412cbc <wcrtomb@plt+0x102fc>
  412cac:	cmp	x14, x22
  412cb0:	mul	x16, x22, x9
  412cb4:	cset	w15, lt  // lt = tstop
  412cb8:	csel	x22, x12, x16, lt  // lt = tstop
  412cbc:	adds	w11, w11, #0x1
  412cc0:	orr	w10, w15, w10
  412cc4:	b.cc	412c98 <wcrtomb@plt+0x102d8>  // b.lo, b.ul, b.last
  412cc8:	b	412ddc <wcrtomb@plt+0x1041c>
  412ccc:	cmp	w23, #0x5a
  412cd0:	b.ne	412d20 <wcrtomb@plt+0x10360>  // b.any
  412cd4:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412cd8:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412cdc:	mov	w10, wzr
  412ce0:	mov	w11, #0xfffffff9            	// #-7
  412ce4:	sdiv	x13, x13, x9
  412ce8:	udiv	x14, x12, x9
  412cec:	cmp	x22, x13
  412cf0:	b.ge	412d00 <wcrtomb@plt+0x10340>  // b.tcont
  412cf4:	mov	w15, #0x1                   	// #1
  412cf8:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412cfc:	b	412d10 <wcrtomb@plt+0x10350>
  412d00:	cmp	x14, x22
  412d04:	mul	x16, x22, x9
  412d08:	cset	w15, lt  // lt = tstop
  412d0c:	csel	x22, x12, x16, lt  // lt = tstop
  412d10:	adds	w11, w11, #0x1
  412d14:	orr	w10, w15, w10
  412d18:	b.cc	412cec <wcrtomb@plt+0x1032c>  // b.lo, b.ul, b.last
  412d1c:	b	412ddc <wcrtomb@plt+0x1041c>
  412d20:	str	x22, [x19]
  412d24:	orr	w20, w20, #0x2
  412d28:	b	412dfc <wcrtomb@plt+0x1043c>
  412d2c:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412d30:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412d34:	mov	w10, wzr
  412d38:	mov	w11, #0xfffffffa            	// #-6
  412d3c:	sdiv	x13, x13, x9
  412d40:	udiv	x14, x12, x9
  412d44:	cmp	x22, x13
  412d48:	b.ge	412d58 <wcrtomb@plt+0x10398>  // b.tcont
  412d4c:	mov	w15, #0x1                   	// #1
  412d50:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412d54:	b	412d68 <wcrtomb@plt+0x103a8>
  412d58:	cmp	x14, x22
  412d5c:	mul	x16, x22, x9
  412d60:	cset	w15, lt  // lt = tstop
  412d64:	csel	x22, x12, x16, lt  // lt = tstop
  412d68:	adds	w11, w11, #0x1
  412d6c:	orr	w10, w15, w10
  412d70:	b.cc	412d44 <wcrtomb@plt+0x10384>  // b.lo, b.ul, b.last
  412d74:	b	412ddc <wcrtomb@plt+0x1041c>
  412d78:	mov	x13, #0x8000000000000000    	// #-9223372036854775808
  412d7c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  412d80:	mov	w10, wzr
  412d84:	mov	w11, #0xfffffffb            	// #-5
  412d88:	sdiv	x13, x13, x9
  412d8c:	udiv	x14, x12, x9
  412d90:	cmp	x22, x13
  412d94:	b.ge	412da4 <wcrtomb@plt+0x103e4>  // b.tcont
  412d98:	mov	w15, #0x1                   	// #1
  412d9c:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  412da0:	b	412db4 <wcrtomb@plt+0x103f4>
  412da4:	cmp	x14, x22
  412da8:	mul	x16, x22, x9
  412dac:	cset	w15, lt  // lt = tstop
  412db0:	csel	x22, x12, x16, lt  // lt = tstop
  412db4:	adds	w11, w11, #0x1
  412db8:	orr	w10, w15, w10
  412dbc:	b.cc	412d90 <wcrtomb@plt+0x103d0>  // b.lo, b.ul, b.last
  412dc0:	b	412ddc <wcrtomb@plt+0x1041c>
  412dc4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  412dc8:	mul	x12, x22, x9
  412dcc:	udiv	x9, x11, x9
  412dd0:	cmp	x9, x22
  412dd4:	cset	w10, lt  // lt = tstop
  412dd8:	csel	x22, x11, x12, lt  // lt = tstop
  412ddc:	add	x9, x25, x8
  412de0:	str	x9, [x21]
  412de4:	ldrb	w8, [x25, x8]
  412de8:	orr	w9, w10, w20
  412dec:	orr	w10, w9, #0x2
  412df0:	cmp	w8, #0x0
  412df4:	csel	w20, w9, w10, eq  // eq = none
  412df8:	str	x22, [x19]
  412dfc:	mov	w0, w20
  412e00:	ldp	x20, x19, [sp, #64]
  412e04:	ldp	x22, x21, [sp, #48]
  412e08:	ldp	x24, x23, [sp, #32]
  412e0c:	ldr	x25, [sp, #16]
  412e10:	ldp	x29, x30, [sp], #80
  412e14:	ret
  412e18:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412e1c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412e20:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412e24:	add	x0, x0, #0x921
  412e28:	add	x1, x1, #0x947
  412e2c:	add	x3, x3, #0x953
  412e30:	mov	w2, #0x54                  	// #84
  412e34:	bl	402920 <__assert_fail@plt>
  412e38:	stp	x29, x30, [sp, #-16]!
  412e3c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412e40:	add	x0, x0, #0x9a1
  412e44:	mov	x29, sp
  412e48:	bl	402950 <getenv@plt>
  412e4c:	cbz	x0, 412e64 <wcrtomb@plt+0x104a4>
  412e50:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  412e54:	add	x1, x1, #0x9a6
  412e58:	bl	402750 <strcmp@plt>
  412e5c:	cmp	w0, #0x0
  412e60:	cset	w0, ne  // ne = any
  412e64:	ldp	x29, x30, [sp], #16
  412e68:	ret
  412e6c:	ret
  412e70:	b	402910 <printf@plt>
  412e74:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  412e78:	ldr	x1, [x8, #1128]
  412e7c:	b	402390 <fputs@plt>
  412e80:	stp	x29, x30, [sp, #-96]!
  412e84:	cmp	w1, #0x1, lsl #12
  412e88:	stp	x28, x27, [sp, #16]
  412e8c:	stp	x26, x25, [sp, #32]
  412e90:	stp	x24, x23, [sp, #48]
  412e94:	stp	x22, x21, [sp, #64]
  412e98:	stp	x20, x19, [sp, #80]
  412e9c:	mov	x29, sp
  412ea0:	b.cs	412f38 <wcrtomb@plt+0x10578>  // b.hs, b.nlast
  412ea4:	mov	w8, #0x204                 	// #516
  412ea8:	mov	w21, w1
  412eac:	bics	wzr, w8, w1
  412eb0:	b.eq	412f38 <wcrtomb@plt+0x10578>  // b.none
  412eb4:	mov	w8, #0x12                  	// #18
  412eb8:	tst	w21, w8
  412ebc:	b.eq	412f38 <wcrtomb@plt+0x10578>  // b.none
  412ec0:	mov	x22, x0
  412ec4:	mov	w0, #0x1                   	// #1
  412ec8:	mov	w1, #0x80                  	// #128
  412ecc:	mov	x20, x2
  412ed0:	bl	4025d0 <calloc@plt>
  412ed4:	mov	x19, x0
  412ed8:	cbz	x0, 412f48 <wcrtomb@plt+0x10588>
  412edc:	and	w8, w21, #0xfffffdff
  412ee0:	tst	w21, #0x2
  412ee4:	orr	w8, w8, #0x4
  412ee8:	mov	w9, #0xffffff9c            	// #-100
  412eec:	csel	w8, w21, w8, eq  // eq = none
  412ef0:	str	x20, [x19, #64]
  412ef4:	str	w8, [x19, #72]
  412ef8:	str	w9, [x19, #44]
  412efc:	ldr	x8, [x22]
  412f00:	cbz	x8, 412f68 <wcrtomb@plt+0x105a8>
  412f04:	mov	x23, xzr
  412f08:	add	x24, x22, #0x8
  412f0c:	mov	x0, x8
  412f10:	bl	402380 <strlen@plt>
  412f14:	ldr	x8, [x24], #8
  412f18:	cmp	x0, x23
  412f1c:	csel	x23, x0, x23, hi  // hi = pmore
  412f20:	cbnz	x8, 412f0c <wcrtomb@plt+0x1054c>
  412f24:	add	x8, x23, #0x1
  412f28:	cmp	x8, #0x1, lsl #12
  412f2c:	mov	w8, #0x1000                	// #4096
  412f30:	csinc	x1, x8, x23, ls  // ls = plast
  412f34:	b	412f6c <wcrtomb@plt+0x105ac>
  412f38:	bl	402930 <__errno_location@plt>
  412f3c:	mov	w8, #0x16                  	// #22
  412f40:	mov	x19, xzr
  412f44:	str	w8, [x0]
  412f48:	mov	x0, x19
  412f4c:	ldp	x20, x19, [sp, #80]
  412f50:	ldp	x22, x21, [sp, #64]
  412f54:	ldp	x24, x23, [sp, #48]
  412f58:	ldp	x26, x25, [sp, #32]
  412f5c:	ldp	x28, x27, [sp, #16]
  412f60:	ldp	x29, x30, [sp], #96
  412f64:	ret
  412f68:	mov	w1, #0x1000                	// #4096
  412f6c:	mov	x0, x19
  412f70:	bl	413188 <wcrtomb@plt+0x107c8>
  412f74:	tbz	w0, #0, 413178 <wcrtomb@plt+0x107b8>
  412f78:	ldr	x8, [x22]
  412f7c:	cbz	x8, 412fb0 <wcrtomb@plt+0x105f0>
  412f80:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  412f84:	add	x1, x1, #0x7ad
  412f88:	mov	x0, x19
  412f8c:	mov	x2, xzr
  412f90:	bl	413204 <wcrtomb@plt+0x10844>
  412f94:	cbz	x0, 413170 <wcrtomb@plt+0x107b0>
  412f98:	mov	x23, x0
  412f9c:	mov	x8, #0xffffffffffffffff    	// #-1
  412fa0:	mov	w9, #0xffffffff            	// #-1
  412fa4:	str	x8, [x0, #88]
  412fa8:	str	w9, [x0, #104]
  412fac:	b	412fb4 <wcrtomb@plt+0x105f4>
  412fb0:	mov	x23, xzr
  412fb4:	cbz	x20, 412fc4 <wcrtomb@plt+0x10604>
  412fb8:	ldrb	w8, [x19, #73]
  412fbc:	ubfx	w8, w8, #2, #1
  412fc0:	b	412fc8 <wcrtomb@plt+0x10608>
  412fc4:	mov	w8, #0x1                   	// #1
  412fc8:	ldr	x26, [x22]
  412fcc:	cbz	x26, 4130b8 <wcrtomb@plt+0x106f8>
  412fd0:	mov	x24, xzr
  412fd4:	mov	x27, xzr
  412fd8:	mov	x25, xzr
  412fdc:	eor	w28, w8, #0x1
  412fe0:	mov	x0, x26
  412fe4:	bl	402380 <strlen@plt>
  412fe8:	mov	x2, x0
  412fec:	tbnz	w21, #11, 413028 <wcrtomb@plt+0x10668>
  412ff0:	cmp	x2, #0x3
  412ff4:	b.cc	413028 <wcrtomb@plt+0x10668>  // b.lo, b.ul, b.last
  412ff8:	add	x8, x2, x26
  412ffc:	ldurb	w8, [x8, #-1]
  413000:	cmp	w8, #0x2f
  413004:	b.ne	413028 <wcrtomb@plt+0x10668>  // b.any
  413008:	sub	x8, x26, #0x2
  41300c:	ldrb	w9, [x8, x2]
  413010:	cmp	w9, #0x2f
  413014:	b.ne	413028 <wcrtomb@plt+0x10668>  // b.any
  413018:	sub	x2, x2, #0x1
  41301c:	cmp	x2, #0x1
  413020:	b.hi	41300c <wcrtomb@plt+0x1064c>  // b.pmore
  413024:	mov	w2, #0x1                   	// #1
  413028:	mov	x0, x19
  41302c:	mov	x1, x26
  413030:	bl	413204 <wcrtomb@plt+0x10844>
  413034:	cbz	x0, 413160 <wcrtomb@plt+0x107a0>
  413038:	cmp	x24, #0x0
  41303c:	cset	w9, eq  // eq = none
  413040:	mov	x26, x0
  413044:	add	x8, x0, #0xf8
  413048:	orr	w9, w28, w9
  41304c:	str	xzr, [x0, #88]
  413050:	str	x23, [x0, #8]
  413054:	str	x8, [x0, #48]
  413058:	tbnz	w9, #0, 41306c <wcrtomb@plt+0x106ac>
  41305c:	mov	w8, #0x2                   	// #2
  413060:	str	x8, [x26, #168]
  413064:	mov	w0, #0xb                   	// #11
  413068:	b	41307c <wcrtomb@plt+0x106bc>
  41306c:	mov	x0, x19
  413070:	mov	x1, x26
  413074:	mov	w2, wzr
  413078:	bl	41328c <wcrtomb@plt+0x108cc>
  41307c:	strh	w0, [x26, #108]
  413080:	cbz	x20, 413090 <wcrtomb@plt+0x106d0>
  413084:	str	x24, [x26, #16]
  413088:	mov	x24, x26
  41308c:	b	4130a0 <wcrtomb@plt+0x106e0>
  413090:	str	xzr, [x26, #16]
  413094:	cbz	x24, 4130b0 <wcrtomb@plt+0x106f0>
  413098:	str	x26, [x27, #16]
  41309c:	mov	x27, x26
  4130a0:	ldr	x26, [x22, #8]!
  4130a4:	add	x25, x25, #0x1
  4130a8:	cbnz	x26, 412fe0 <wcrtomb@plt+0x10620>
  4130ac:	b	4130c0 <wcrtomb@plt+0x10700>
  4130b0:	mov	x27, x26
  4130b4:	b	413088 <wcrtomb@plt+0x106c8>
  4130b8:	mov	x24, xzr
  4130bc:	b	4130e0 <wcrtomb@plt+0x10720>
  4130c0:	cbz	x20, 4130e0 <wcrtomb@plt+0x10720>
  4130c4:	cmp	x25, #0x2
  4130c8:	b.cc	4130e0 <wcrtomb@plt+0x10720>  // b.lo, b.ul, b.last
  4130cc:	mov	x0, x19
  4130d0:	mov	x1, x24
  4130d4:	mov	x2, x25
  4130d8:	bl	413404 <wcrtomb@plt+0x10a44>
  4130dc:	mov	x24, x0
  4130e0:	adrp	x1, 422000 <_obstack_memory_used@@Base+0xcfcc>
  4130e4:	add	x1, x1, #0x7ad
  4130e8:	mov	x0, x19
  4130ec:	mov	x2, xzr
  4130f0:	bl	413204 <wcrtomb@plt+0x10844>
  4130f4:	str	x0, [x19]
  4130f8:	cbz	x0, 413160 <wcrtomb@plt+0x107a0>
  4130fc:	mov	w8, #0x9                   	// #9
  413100:	mov	w9, #0x1                   	// #1
  413104:	str	x24, [x0, #16]
  413108:	strh	w8, [x0, #108]
  41310c:	str	x9, [x0, #88]
  413110:	mov	x0, x19
  413114:	bl	4134e8 <wcrtomb@plt+0x10b28>
  413118:	tbz	w0, #0, 413160 <wcrtomb@plt+0x107a0>
  41311c:	ldrh	w8, [x19, #72]
  413120:	mov	w9, #0x204                 	// #516
  413124:	tst	w8, w9
  413128:	b.ne	413150 <wcrtomb@plt+0x10790>  // b.any
  41312c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  413130:	add	x1, x1, #0x9ac
  413134:	mov	x0, x19
  413138:	bl	41355c <wcrtomb@plt+0x10b9c>
  41313c:	str	w0, [x19, #40]
  413140:	tbz	w0, #31, 413150 <wcrtomb@plt+0x10790>
  413144:	ldr	w8, [x19, #72]
  413148:	orr	w8, w8, #0x4
  41314c:	str	w8, [x19, #72]
  413150:	add	x0, x19, #0x60
  413154:	mov	w1, #0xffffffff            	// #-1
  413158:	bl	42095c <_obstack_memory_used@@Base+0xb928>
  41315c:	b	412f48 <wcrtomb@plt+0x10588>
  413160:	mov	x0, x24
  413164:	bl	413588 <wcrtomb@plt+0x10bc8>
  413168:	mov	x0, x23
  41316c:	bl	402770 <free@plt>
  413170:	ldr	x0, [x19, #32]
  413174:	bl	402770 <free@plt>
  413178:	mov	x0, x19
  41317c:	bl	402770 <free@plt>
  413180:	mov	x19, xzr
  413184:	b	412f48 <wcrtomb@plt+0x10588>
  413188:	stp	x29, x30, [sp, #-32]!
  41318c:	ldr	x8, [x0, #48]
  413190:	add	x9, x1, #0x100
  413194:	str	x19, [sp, #16]
  413198:	mov	x19, x0
  41319c:	adds	x1, x9, x8
  4131a0:	mov	x29, sp
  4131a4:	b.cc	4131cc <wcrtomb@plt+0x1080c>  // b.lo, b.ul, b.last
  4131a8:	ldr	x0, [x19, #32]
  4131ac:	bl	402770 <free@plt>
  4131b0:	str	xzr, [x19, #32]
  4131b4:	bl	402930 <__errno_location@plt>
  4131b8:	mov	x8, x0
  4131bc:	mov	w9, #0x24                  	// #36
  4131c0:	mov	w0, wzr
  4131c4:	str	w9, [x8]
  4131c8:	b	4131f8 <wcrtomb@plt+0x10838>
  4131cc:	ldr	x0, [x19, #32]
  4131d0:	str	x1, [x19, #48]
  4131d4:	bl	402610 <realloc@plt>
  4131d8:	cbz	x0, 4131e8 <wcrtomb@plt+0x10828>
  4131dc:	str	x0, [x19, #32]
  4131e0:	mov	w0, #0x1                   	// #1
  4131e4:	b	4131f8 <wcrtomb@plt+0x10838>
  4131e8:	ldr	x0, [x19, #32]
  4131ec:	bl	402770 <free@plt>
  4131f0:	mov	w0, wzr
  4131f4:	str	xzr, [x19, #32]
  4131f8:	ldr	x19, [sp, #16]
  4131fc:	ldp	x29, x30, [sp], #32
  413200:	ret
  413204:	stp	x29, x30, [sp, #-64]!
  413208:	add	x8, x2, #0x100
  41320c:	stp	x20, x19, [sp, #48]
  413210:	mov	x20, x0
  413214:	and	x0, x8, #0xfffffffffffffff8
  413218:	str	x23, [sp, #16]
  41321c:	stp	x22, x21, [sp, #32]
  413220:	mov	x29, sp
  413224:	mov	x21, x2
  413228:	mov	x22, x1
  41322c:	bl	4024e0 <malloc@plt>
  413230:	mov	x19, x0
  413234:	cbz	x0, 413274 <wcrtomb@plt+0x108b4>
  413238:	add	x23, x19, #0xf8
  41323c:	mov	x0, x23
  413240:	mov	x1, x22
  413244:	mov	x2, x21
  413248:	bl	402320 <memcpy@plt>
  41324c:	strb	wzr, [x23, x21]
  413250:	str	x21, [x19, #96]
  413254:	str	x20, [x19, #80]
  413258:	ldr	x9, [x20, #32]
  41325c:	mov	w8, #0x30000               	// #196608
  413260:	str	wzr, [x19, #64]
  413264:	stur	w8, [x19, #110]
  413268:	stp	xzr, xzr, [x19, #24]
  41326c:	str	x9, [x19, #56]
  413270:	str	xzr, [x19, #40]
  413274:	mov	x0, x19
  413278:	ldp	x20, x19, [sp, #48]
  41327c:	ldp	x22, x21, [sp, #32]
  413280:	ldr	x23, [sp, #16]
  413284:	ldp	x29, x30, [sp], #64
  413288:	ret
  41328c:	stp	x29, x30, [sp, #-48]!
  413290:	stp	x20, x19, [sp, #32]
  413294:	ldr	x9, [x1, #88]
  413298:	ldr	w8, [x0, #72]
  41329c:	str	x21, [sp, #16]
  4132a0:	mov	x19, x1
  4132a4:	mov	x21, x0
  4132a8:	mov	x29, sp
  4132ac:	cbnz	x9, 4132b8 <wcrtomb@plt+0x108f8>
  4132b0:	and	w9, w8, #0x1
  4132b4:	orr	w2, w9, w2
  4132b8:	add	x20, x19, #0x78
  4132bc:	tbnz	w2, #0, 4132e8 <wcrtomb@plt+0x10928>
  4132c0:	tbnz	w8, #1, 4132e8 <wcrtomb@plt+0x10928>
  4132c4:	ldr	w0, [x21, #44]
  4132c8:	ldr	x1, [x19, #48]
  4132cc:	mov	w3, #0x100                 	// #256
  4132d0:	mov	x2, x20
  4132d4:	bl	420f98 <_obstack_memory_used@@Base+0xbf64>
  4132d8:	cbz	w0, 41334c <wcrtomb@plt+0x1098c>
  4132dc:	bl	402930 <__errno_location@plt>
  4132e0:	mov	x21, x0
  4132e4:	b	41331c <wcrtomb@plt+0x1095c>
  4132e8:	ldr	x0, [x19, #48]
  4132ec:	mov	x1, x20
  4132f0:	bl	420f68 <_obstack_memory_used@@Base+0xbf34>
  4132f4:	cbz	w0, 41334c <wcrtomb@plt+0x1098c>
  4132f8:	bl	402930 <__errno_location@plt>
  4132fc:	ldr	w8, [x0]
  413300:	cmp	w8, #0x2
  413304:	b.ne	413320 <wcrtomb@plt+0x10960>  // b.any
  413308:	mov	x21, x0
  41330c:	ldr	x0, [x19, #48]
  413310:	mov	x1, x20
  413314:	bl	420f88 <_obstack_memory_used@@Base+0xbf54>
  413318:	cbz	w0, 4133e4 <wcrtomb@plt+0x10a24>
  41331c:	ldr	w8, [x21]
  413320:	movi	v0.2d, #0x0
  413324:	str	w8, [x19, #64]
  413328:	stp	q0, q0, [x20, #96]
  41332c:	stp	q0, q0, [x20, #64]
  413330:	stp	q0, q0, [x20, #32]
  413334:	stp	q0, q0, [x20]
  413338:	mov	w0, #0xa                   	// #10
  41333c:	ldp	x20, x19, [sp, #32]
  413340:	ldr	x21, [sp, #16]
  413344:	ldp	x29, x30, [sp], #48
  413348:	ret
  41334c:	ldr	w8, [x19, #136]
  413350:	and	w8, w8, #0xf000
  413354:	cmp	w8, #0xa, lsl #12
  413358:	b.eq	4133a0 <wcrtomb@plt+0x109e0>  // b.none
  41335c:	cmp	w8, #0x8, lsl #12
  413360:	b.eq	413398 <wcrtomb@plt+0x109d8>  // b.none
  413364:	cmp	w8, #0x4, lsl #12
  413368:	b.ne	4133a8 <wcrtomb@plt+0x109e8>  // b.any
  41336c:	ldr	w8, [x19, #140]
  413370:	cmp	w8, #0x2
  413374:	b.cc	4133b0 <wcrtomb@plt+0x109f0>  // b.lo, b.ul, b.last
  413378:	ldr	x9, [x19, #88]
  41337c:	cmp	x9, #0x1
  413380:	b.lt	4133b0 <wcrtomb@plt+0x109f0>  // b.tstop
  413384:	ldr	w9, [x21, #72]
  413388:	mov	w10, #0x2                   	// #2
  41338c:	bic	w9, w10, w9, lsr #4
  413390:	sub	w8, w8, w9
  413394:	b	4133b4 <wcrtomb@plt+0x109f4>
  413398:	mov	w0, #0x8                   	// #8
  41339c:	b	41333c <wcrtomb@plt+0x1097c>
  4133a0:	mov	w0, #0xc                   	// #12
  4133a4:	b	41333c <wcrtomb@plt+0x1097c>
  4133a8:	mov	w0, #0x3                   	// #3
  4133ac:	b	41333c <wcrtomb@plt+0x1097c>
  4133b0:	mov	w8, #0xffffffff            	// #-1
  4133b4:	ldrb	w9, [x19, #248]
  4133b8:	str	w8, [x19, #104]
  4133bc:	cmp	w9, #0x2e
  4133c0:	b.ne	4133dc <wcrtomb@plt+0x10a1c>  // b.any
  4133c4:	ldrb	w8, [x19, #249]
  4133c8:	cbz	w8, 4133f0 <wcrtomb@plt+0x10a30>
  4133cc:	cmp	w8, #0x2e
  4133d0:	b.ne	4133dc <wcrtomb@plt+0x10a1c>  // b.any
  4133d4:	ldrb	w8, [x19, #250]
  4133d8:	cbz	w8, 4133f0 <wcrtomb@plt+0x10a30>
  4133dc:	mov	w0, #0x1                   	// #1
  4133e0:	b	41333c <wcrtomb@plt+0x1097c>
  4133e4:	str	wzr, [x21]
  4133e8:	mov	w0, #0xd                   	// #13
  4133ec:	b	41333c <wcrtomb@plt+0x1097c>
  4133f0:	ldr	x8, [x19, #88]
  4133f4:	cmp	x8, #0x0
  4133f8:	mov	w8, #0x5                   	// #5
  4133fc:	csinc	w0, w8, wzr, ne  // ne = any
  413400:	b	41333c <wcrtomb@plt+0x1097c>
  413404:	stp	x29, x30, [sp, #-48]!
  413408:	stp	x22, x21, [sp, #16]
  41340c:	stp	x20, x19, [sp, #32]
  413410:	ldp	x8, x22, [x0, #56]
  413414:	mov	x21, x0
  413418:	mov	x20, x2
  41341c:	mov	x19, x1
  413420:	cmp	x8, x2
  413424:	mov	x29, sp
  413428:	b.cs	413458 <wcrtomb@plt+0x10a98>  // b.hs, b.nlast
  41342c:	add	x8, x20, #0x28
  413430:	lsr	x9, x8, #61
  413434:	str	x8, [x21, #56]
  413438:	cbnz	x9, 4134c4 <wcrtomb@plt+0x10b04>
  41343c:	ldr	x0, [x21, #16]
  413440:	lsl	x1, x8, #3
  413444:	bl	402610 <realloc@plt>
  413448:	cbz	x0, 4134c4 <wcrtomb@plt+0x10b04>
  41344c:	str	x0, [x21, #16]
  413450:	cbnz	x19, 413460 <wcrtomb@plt+0x10aa0>
  413454:	b	413470 <wcrtomb@plt+0x10ab0>
  413458:	ldr	x0, [x21, #16]
  41345c:	cbz	x19, 413470 <wcrtomb@plt+0x10ab0>
  413460:	str	x19, [x0], #8
  413464:	ldr	x19, [x19, #16]
  413468:	cbnz	x19, 413460 <wcrtomb@plt+0x10aa0>
  41346c:	ldr	x0, [x21, #16]
  413470:	mov	w2, #0x8                   	// #8
  413474:	mov	x1, x20
  413478:	mov	x3, x22
  41347c:	bl	402420 <qsort@plt>
  413480:	ldr	x8, [x21, #16]
  413484:	cmp	x20, #0x1
  413488:	ldr	x19, [x8]
  41348c:	mov	x9, x19
  413490:	b.eq	4134bc <wcrtomb@plt+0x10afc>  // b.none
  413494:	ldr	x10, [x8, #8]!
  413498:	subs	x9, x20, #0x2
  41349c:	str	x10, [x19, #16]
  4134a0:	b.eq	4134b8 <wcrtomb@plt+0x10af8>  // b.none
  4134a4:	ldr	x10, [x8]
  4134a8:	ldr	x11, [x8, #8]!
  4134ac:	subs	x9, x9, #0x1
  4134b0:	str	x11, [x10, #16]
  4134b4:	b.ne	4134a4 <wcrtomb@plt+0x10ae4>  // b.any
  4134b8:	ldr	x9, [x8]
  4134bc:	str	xzr, [x9, #16]
  4134c0:	b	4134d4 <wcrtomb@plt+0x10b14>
  4134c4:	ldr	x0, [x21, #16]
  4134c8:	bl	402770 <free@plt>
  4134cc:	str	xzr, [x21, #16]
  4134d0:	str	xzr, [x21, #56]
  4134d4:	mov	x0, x19
  4134d8:	ldp	x20, x19, [sp, #32]
  4134dc:	ldp	x22, x21, [sp, #16]
  4134e0:	ldp	x29, x30, [sp], #48
  4134e4:	ret
  4134e8:	stp	x29, x30, [sp, #-32]!
  4134ec:	ldrh	w8, [x0, #72]
  4134f0:	mov	w9, #0x102                 	// #258
  4134f4:	str	x19, [sp, #16]
  4134f8:	mov	x19, x0
  4134fc:	tst	w8, w9
  413500:	mov	x29, sp
  413504:	b.eq	413538 <wcrtomb@plt+0x10b78>  // b.none
  413508:	adrp	x2, 414000 <wcrtomb@plt+0x11640>
  41350c:	adrp	x3, 414000 <wcrtomb@plt+0x11640>
  413510:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  413514:	add	x2, x2, #0xaf4
  413518:	add	x3, x3, #0xb04
  41351c:	add	x4, x4, #0x770
  413520:	mov	w0, #0x1f                  	// #31
  413524:	mov	x1, xzr
  413528:	bl	40fc00 <wcrtomb@plt+0xd240>
  41352c:	str	x0, [x19, #88]
  413530:	cbnz	x0, 41354c <wcrtomb@plt+0x10b8c>
  413534:	b	413550 <wcrtomb@plt+0x10b90>
  413538:	mov	w0, #0x20                  	// #32
  41353c:	bl	4024e0 <malloc@plt>
  413540:	str	x0, [x19, #88]
  413544:	cbz	x0, 413550 <wcrtomb@plt+0x10b90>
  413548:	bl	420708 <_obstack_memory_used@@Base+0xb6d4>
  41354c:	mov	w0, #0x1                   	// #1
  413550:	ldr	x19, [sp, #16]
  413554:	ldp	x29, x30, [sp], #32
  413558:	ret
  41355c:	ldr	w8, [x0, #72]
  413560:	mov	w2, #0x4900                	// #18688
  413564:	movk	w2, #0x8, lsl #16
  413568:	lsr	w9, w8, #4
  41356c:	bfi	w2, w9, #15, #1
  413570:	tbnz	w8, #9, 413580 <wcrtomb@plt+0x10bc0>
  413574:	mov	x0, x1
  413578:	mov	w1, w2
  41357c:	b	42084c <_obstack_memory_used@@Base+0xb818>
  413580:	ldr	w0, [x0, #44]
  413584:	b	410acc <wcrtomb@plt+0xe10c>
  413588:	stp	x29, x30, [sp, #-32]!
  41358c:	stp	x20, x19, [sp, #16]
  413590:	mov	x29, sp
  413594:	cbz	x0, 4135b8 <wcrtomb@plt+0x10bf8>
  413598:	mov	x19, x0
  41359c:	ldp	x20, x0, [x19, #16]
  4135a0:	cbz	x0, 4135a8 <wcrtomb@plt+0x10be8>
  4135a4:	bl	402630 <closedir@plt>
  4135a8:	mov	x0, x19
  4135ac:	bl	402770 <free@plt>
  4135b0:	mov	x19, x20
  4135b4:	cbnz	x20, 41359c <wcrtomb@plt+0x10bdc>
  4135b8:	ldp	x20, x19, [sp, #16]
  4135bc:	ldp	x29, x30, [sp], #32
  4135c0:	ret
  4135c4:	stp	x29, x30, [sp, #-32]!
  4135c8:	stp	x20, x19, [sp, #16]
  4135cc:	mov	x19, x0
  4135d0:	ldr	x0, [x0]
  4135d4:	mov	x29, sp
  4135d8:	cbz	x0, 413610 <wcrtomb@plt+0x10c50>
  4135dc:	ldr	x8, [x0, #88]
  4135e0:	tbnz	x8, #63, 413604 <wcrtomb@plt+0x10c44>
  4135e4:	ldr	x20, [x0, #16]
  4135e8:	cbnz	x20, 4135f0 <wcrtomb@plt+0x10c30>
  4135ec:	ldr	x20, [x0, #8]
  4135f0:	bl	402770 <free@plt>
  4135f4:	ldr	x8, [x20, #88]
  4135f8:	mov	x0, x20
  4135fc:	tbz	x8, #63, 4135e4 <wcrtomb@plt+0x10c24>
  413600:	b	413608 <wcrtomb@plt+0x10c48>
  413604:	mov	x20, x0
  413608:	mov	x0, x20
  41360c:	bl	402770 <free@plt>
  413610:	ldr	x0, [x19, #8]
  413614:	cbz	x0, 41361c <wcrtomb@plt+0x10c5c>
  413618:	bl	413588 <wcrtomb@plt+0x10bc8>
  41361c:	ldr	x0, [x19, #16]
  413620:	bl	402770 <free@plt>
  413624:	ldr	x0, [x19, #32]
  413628:	bl	402770 <free@plt>
  41362c:	ldr	w8, [x19, #72]
  413630:	tbnz	w8, #9, 413650 <wcrtomb@plt+0x10c90>
  413634:	tbnz	w8, #2, 413660 <wcrtomb@plt+0x10ca0>
  413638:	ldr	w0, [x19, #40]
  41363c:	bl	4023c0 <fchdir@plt>
  413640:	cbz	w0, 413668 <wcrtomb@plt+0x10ca8>
  413644:	bl	402930 <__errno_location@plt>
  413648:	ldr	w20, [x0]
  41364c:	b	41366c <wcrtomb@plt+0x10cac>
  413650:	ldr	w0, [x19, #44]
  413654:	tbnz	w0, #31, 413660 <wcrtomb@plt+0x10ca0>
  413658:	bl	402650 <close@plt>
  41365c:	cbnz	w0, 41367c <wcrtomb@plt+0x10cbc>
  413660:	mov	w20, wzr
  413664:	b	413684 <wcrtomb@plt+0x10cc4>
  413668:	mov	w20, wzr
  41366c:	ldr	w0, [x19, #40]
  413670:	bl	402650 <close@plt>
  413674:	cbnz	w20, 413684 <wcrtomb@plt+0x10cc4>
  413678:	cbz	w0, 413684 <wcrtomb@plt+0x10cc4>
  41367c:	bl	402930 <__errno_location@plt>
  413680:	ldr	w20, [x0]
  413684:	add	x0, x19, #0x60
  413688:	bl	4136cc <wcrtomb@plt+0x10d0c>
  41368c:	ldr	x0, [x19, #80]
  413690:	cbz	x0, 413698 <wcrtomb@plt+0x10cd8>
  413694:	bl	40fec8 <wcrtomb@plt+0xd508>
  413698:	mov	x0, x19
  41369c:	bl	413708 <wcrtomb@plt+0x10d48>
  4136a0:	mov	x0, x19
  4136a4:	bl	402770 <free@plt>
  4136a8:	cbz	w20, 4136bc <wcrtomb@plt+0x10cfc>
  4136ac:	bl	402930 <__errno_location@plt>
  4136b0:	str	w20, [x0]
  4136b4:	mov	w0, #0xffffffff            	// #-1
  4136b8:	b	4136c0 <wcrtomb@plt+0x10d00>
  4136bc:	mov	w0, wzr
  4136c0:	ldp	x20, x19, [sp, #16]
  4136c4:	ldp	x29, x30, [sp], #32
  4136c8:	ret
  4136cc:	stp	x29, x30, [sp, #-32]!
  4136d0:	str	x19, [sp, #16]
  4136d4:	mov	x19, x0
  4136d8:	mov	x29, sp
  4136dc:	bl	420978 <_obstack_memory_used@@Base+0xb944>
  4136e0:	tbnz	w0, #0, 4136fc <wcrtomb@plt+0x10d3c>
  4136e4:	mov	x0, x19
  4136e8:	bl	4209c4 <_obstack_memory_used@@Base+0xb990>
  4136ec:	tbnz	w0, #31, 4136f4 <wcrtomb@plt+0x10d34>
  4136f0:	bl	402650 <close@plt>
  4136f4:	mov	x0, x19
  4136f8:	b	4136dc <wcrtomb@plt+0x10d1c>
  4136fc:	ldr	x19, [sp, #16]
  413700:	ldp	x29, x30, [sp], #32
  413704:	ret
  413708:	ldrh	w8, [x0, #72]
  41370c:	mov	w9, #0x102                 	// #258
  413710:	tst	w8, w9
  413714:	b.eq	413724 <wcrtomb@plt+0x10d64>  // b.none
  413718:	ldr	x0, [x0, #88]
  41371c:	cbz	x0, 41372c <wcrtomb@plt+0x10d6c>
  413720:	b	40fec8 <wcrtomb@plt+0xd508>
  413724:	ldr	x0, [x0, #88]
  413728:	b	402770 <free@plt>
  41372c:	ret
  413730:	stp	x29, x30, [sp, #-64]!
  413734:	stp	x22, x21, [sp, #32]
  413738:	stp	x20, x19, [sp, #48]
  41373c:	ldr	x20, [x0]
  413740:	str	x23, [sp, #16]
  413744:	mov	x29, sp
  413748:	cbz	x20, 413ad0 <wcrtomb@plt+0x11110>
  41374c:	ldr	w8, [x0, #72]
  413750:	mov	x19, x0
  413754:	tbnz	w8, #13, 413acc <wcrtomb@plt+0x1110c>
  413758:	ldrh	w9, [x20, #112]
  41375c:	mov	w10, #0x3                   	// #3
  413760:	strh	w10, [x20, #112]
  413764:	cmp	w9, #0x1
  413768:	b.eq	4137d4 <wcrtomb@plt+0x10e14>  // b.none
  41376c:	cmp	w9, #0x2
  413770:	b.ne	4137ec <wcrtomb@plt+0x10e2c>  // b.any
  413774:	ldrh	w10, [x20, #108]
  413778:	and	w11, w10, #0xfffe
  41377c:	cmp	w11, #0xc
  413780:	b.ne	4137f0 <wcrtomb@plt+0x10e30>  // b.any
  413784:	mov	w2, #0x1                   	// #1
  413788:	mov	x0, x19
  41378c:	mov	x1, x20
  413790:	bl	41328c <wcrtomb@plt+0x108cc>
  413794:	and	w8, w0, #0xffff
  413798:	cmp	w8, #0x1
  41379c:	strh	w0, [x20, #108]
  4137a0:	b.ne	413bd4 <wcrtomb@plt+0x11214>  // b.any
  4137a4:	ldrb	w8, [x19, #72]
  4137a8:	tbnz	w8, #2, 413bd4 <wcrtomb@plt+0x11214>
  4137ac:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4137b0:	add	x1, x1, #0x9ac
  4137b4:	mov	x0, x19
  4137b8:	bl	41355c <wcrtomb@plt+0x10b9c>
  4137bc:	str	w0, [x20, #68]
  4137c0:	tbnz	w0, #31, 413b04 <wcrtomb@plt+0x11144>
  4137c4:	ldrh	w8, [x20, #110]
  4137c8:	orr	w8, w8, #0x2
  4137cc:	strh	w8, [x20, #110]
  4137d0:	b	413bd4 <wcrtomb@plt+0x11214>
  4137d4:	mov	x0, x19
  4137d8:	mov	x1, x20
  4137dc:	mov	w2, wzr
  4137e0:	bl	41328c <wcrtomb@plt+0x108cc>
  4137e4:	strh	w0, [x20, #108]
  4137e8:	b	413ad0 <wcrtomb@plt+0x11110>
  4137ec:	ldrh	w10, [x20, #108]
  4137f0:	cmp	w10, #0x1
  4137f4:	b.ne	413838 <wcrtomb@plt+0x10e78>  // b.any
  4137f8:	cmp	w9, #0x4
  4137fc:	b.ne	4138c0 <wcrtomb@plt+0x10f00>  // b.any
  413800:	ldrb	w8, [x20, #110]
  413804:	tbz	w8, #1, 413810 <wcrtomb@plt+0x10e50>
  413808:	ldr	w0, [x20, #68]
  41380c:	bl	402650 <close@plt>
  413810:	ldr	x0, [x19, #8]
  413814:	cbz	x0, 413820 <wcrtomb@plt+0x10e60>
  413818:	bl	413588 <wcrtomb@plt+0x10bc8>
  41381c:	str	xzr, [x19, #8]
  413820:	mov	w8, #0x6                   	// #6
  413824:	strh	w8, [x20, #108]
  413828:	mov	x0, x19
  41382c:	mov	x1, x20
  413830:	bl	413d0c <wcrtomb@plt+0x1134c>
  413834:	b	413ad0 <wcrtomb@plt+0x11110>
  413838:	mov	x21, x20
  41383c:	ldr	x20, [x21, #16]
  413840:	cbz	x20, 413930 <wcrtomb@plt+0x10f70>
  413844:	mov	x0, x21
  413848:	str	x20, [x19]
  41384c:	bl	402770 <free@plt>
  413850:	ldr	x8, [x20, #88]
  413854:	cbz	x8, 41396c <wcrtomb@plt+0x10fac>
  413858:	ldrh	w8, [x20, #112]
  41385c:	mov	x21, x20
  413860:	cmp	w8, #0x4
  413864:	b.eq	41383c <wcrtomb@plt+0x10e7c>  // b.none
  413868:	cmp	w8, #0x2
  41386c:	b.ne	413b98 <wcrtomb@plt+0x111d8>  // b.any
  413870:	mov	w2, #0x1                   	// #1
  413874:	mov	x0, x19
  413878:	mov	x1, x20
  41387c:	bl	41328c <wcrtomb@plt+0x108cc>
  413880:	and	w8, w0, #0xffff
  413884:	cmp	w8, #0x1
  413888:	strh	w0, [x20, #108]
  41388c:	b.ne	413b90 <wcrtomb@plt+0x111d0>  // b.any
  413890:	ldrb	w8, [x19, #72]
  413894:	tbnz	w8, #2, 413b90 <wcrtomb@plt+0x111d0>
  413898:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41389c:	add	x1, x1, #0x9ac
  4138a0:	mov	x0, x19
  4138a4:	bl	41355c <wcrtomb@plt+0x10b9c>
  4138a8:	str	w0, [x20, #68]
  4138ac:	tbnz	w0, #31, 413b7c <wcrtomb@plt+0x111bc>
  4138b0:	ldrh	w8, [x20, #110]
  4138b4:	orr	w8, w8, #0x2
  4138b8:	strh	w8, [x20, #110]
  4138bc:	b	413b90 <wcrtomb@plt+0x111d0>
  4138c0:	tbz	w8, #6, 4138d4 <wcrtomb@plt+0x10f14>
  4138c4:	ldr	x9, [x20, #120]
  4138c8:	ldr	x10, [x19, #24]
  4138cc:	cmp	x9, x10
  4138d0:	b.ne	413800 <wcrtomb@plt+0x10e40>  // b.any
  4138d4:	ldr	x0, [x19, #8]
  4138d8:	cbz	x0, 413a18 <wcrtomb@plt+0x11058>
  4138dc:	tbnz	w8, #12, 413a08 <wcrtomb@plt+0x11048>
  4138e0:	ldr	x3, [x20, #48]
  4138e4:	mov	w2, #0xffffffff            	// #-1
  4138e8:	mov	x0, x19
  4138ec:	mov	x1, x20
  4138f0:	bl	413da8 <wcrtomb@plt+0x113e8>
  4138f4:	cbz	w0, 413a2c <wcrtomb@plt+0x1106c>
  4138f8:	bl	402930 <__errno_location@plt>
  4138fc:	ldr	w8, [x0]
  413900:	ldrh	w9, [x20, #110]
  413904:	str	w8, [x20, #64]
  413908:	orr	w8, w9, #0x1
  41390c:	strh	w8, [x20, #110]
  413910:	ldr	x8, [x19, #8]
  413914:	cbz	x8, 413a2c <wcrtomb@plt+0x1106c>
  413918:	ldr	x9, [x8, #8]
  41391c:	ldr	x9, [x9, #48]
  413920:	str	x9, [x8, #48]
  413924:	ldr	x8, [x8, #16]
  413928:	cbnz	x8, 413918 <wcrtomb@plt+0x10f58>
  41392c:	b	413a2c <wcrtomb@plt+0x1106c>
  413930:	ldr	x20, [x21, #8]
  413934:	ldr	x8, [x20, #24]
  413938:	cbz	x8, 413a68 <wcrtomb@plt+0x110a8>
  41393c:	str	x20, [x19]
  413940:	ldr	x8, [x19, #32]
  413944:	ldr	x9, [x20, #72]
  413948:	mov	w1, #0x3                   	// #3
  41394c:	mov	x0, x19
  413950:	strb	wzr, [x8, x9]
  413954:	bl	413f58 <wcrtomb@plt+0x11598>
  413958:	cbz	x0, 413a5c <wcrtomb@plt+0x1109c>
  41395c:	mov	x20, x0
  413960:	mov	x0, x21
  413964:	bl	402770 <free@plt>
  413968:	b	413b98 <wcrtomb@plt+0x111d8>
  41396c:	mov	x0, x19
  413970:	bl	414748 <wcrtomb@plt+0x11d88>
  413974:	cbz	w0, 41398c <wcrtomb@plt+0x10fcc>
  413978:	ldr	w8, [x19, #72]
  41397c:	mov	x20, xzr
  413980:	orr	w8, w8, #0x2000
  413984:	str	w8, [x19, #72]
  413988:	b	413ad0 <wcrtomb@plt+0x11110>
  41398c:	mov	x0, x19
  413990:	bl	413708 <wcrtomb@plt+0x10d48>
  413994:	ldr	x8, [x20, #96]
  413998:	add	x21, x20, #0xf8
  41399c:	mov	x1, x21
  4139a0:	str	x8, [x20, #72]
  4139a4:	ldr	x0, [x19, #32]
  4139a8:	add	x2, x8, #0x1
  4139ac:	bl	402340 <memmove@plt>
  4139b0:	mov	w1, #0x2f                  	// #47
  4139b4:	mov	x0, x21
  4139b8:	bl	402670 <strrchr@plt>
  4139bc:	cbz	x0, 4139f4 <wcrtomb@plt+0x11034>
  4139c0:	cmp	x0, x21
  4139c4:	b.ne	4139d0 <wcrtomb@plt+0x11010>  // b.any
  4139c8:	ldrb	w8, [x20, #249]
  4139cc:	cbz	w8, 4139f4 <wcrtomb@plt+0x11034>
  4139d0:	add	x22, x0, #0x1
  4139d4:	mov	x0, x22
  4139d8:	bl	402380 <strlen@plt>
  4139dc:	mov	x23, x0
  4139e0:	add	x2, x0, #0x1
  4139e4:	mov	x0, x21
  4139e8:	mov	x1, x22
  4139ec:	bl	402340 <memmove@plt>
  4139f0:	str	x23, [x20, #96]
  4139f4:	ldr	x8, [x19, #32]
  4139f8:	mov	x0, x19
  4139fc:	stp	x8, x8, [x20, #48]
  413a00:	bl	4134e8 <wcrtomb@plt+0x10b28>
  413a04:	b	413bd4 <wcrtomb@plt+0x11214>
  413a08:	and	w8, w8, #0xffffefff
  413a0c:	str	w8, [x19, #72]
  413a10:	bl	413588 <wcrtomb@plt+0x10bc8>
  413a14:	str	xzr, [x19, #8]
  413a18:	mov	w1, #0x3                   	// #3
  413a1c:	mov	x0, x19
  413a20:	bl	413f58 <wcrtomb@plt+0x11598>
  413a24:	str	x0, [x19, #8]
  413a28:	cbz	x0, 413a38 <wcrtomb@plt+0x11078>
  413a2c:	ldr	x20, [x19, #8]
  413a30:	str	xzr, [x19, #8]
  413a34:	b	413b98 <wcrtomb@plt+0x111d8>
  413a38:	ldrb	w8, [x19, #73]
  413a3c:	tbnz	w8, #5, 413acc <wcrtomb@plt+0x1110c>
  413a40:	ldr	w8, [x20, #64]
  413a44:	cbz	w8, 413828 <wcrtomb@plt+0x10e68>
  413a48:	ldrh	w8, [x20, #108]
  413a4c:	cmp	w8, #0x4
  413a50:	b.eq	413828 <wcrtomb@plt+0x10e68>  // b.none
  413a54:	mov	w8, #0x7                   	// #7
  413a58:	b	413824 <wcrtomb@plt+0x10e64>
  413a5c:	ldrb	w8, [x19, #73]
  413a60:	tbnz	w8, #5, 413acc <wcrtomb@plt+0x1110c>
  413a64:	ldr	x20, [x21, #8]
  413a68:	mov	x0, x21
  413a6c:	str	x20, [x19]
  413a70:	bl	402770 <free@plt>
  413a74:	ldr	x8, [x20, #88]
  413a78:	cmn	x8, #0x1
  413a7c:	b.eq	413ae8 <wcrtomb@plt+0x11128>  // b.none
  413a80:	ldrh	w8, [x20, #108]
  413a84:	cmp	w8, #0xb
  413a88:	b.eq	413d08 <wcrtomb@plt+0x11348>  // b.none
  413a8c:	ldr	x8, [x19, #32]
  413a90:	ldr	x9, [x20, #72]
  413a94:	strb	wzr, [x8, x9]
  413a98:	ldr	x8, [x20, #88]
  413a9c:	cbz	x8, 413b1c <wcrtomb@plt+0x1115c>
  413aa0:	ldrh	w8, [x20, #110]
  413aa4:	tbnz	w8, #1, 413b44 <wcrtomb@plt+0x11184>
  413aa8:	tbnz	w8, #0, 413cc8 <wcrtomb@plt+0x11308>
  413aac:	ldr	x1, [x20, #8]
  413ab0:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  413ab4:	add	x3, x3, #0x9ab
  413ab8:	mov	w2, #0xffffffff            	// #-1
  413abc:	mov	x0, x19
  413ac0:	bl	413da8 <wcrtomb@plt+0x113e8>
  413ac4:	cbnz	w0, 413b28 <wcrtomb@plt+0x11168>
  413ac8:	b	413cc8 <wcrtomb@plt+0x11308>
  413acc:	mov	x20, xzr
  413ad0:	mov	x0, x20
  413ad4:	ldp	x20, x19, [sp, #48]
  413ad8:	ldp	x22, x21, [sp, #32]
  413adc:	ldr	x23, [sp, #16]
  413ae0:	ldp	x29, x30, [sp], #64
  413ae4:	ret
  413ae8:	mov	x0, x20
  413aec:	bl	402770 <free@plt>
  413af0:	bl	402930 <__errno_location@plt>
  413af4:	mov	x20, xzr
  413af8:	str	wzr, [x0]
  413afc:	str	xzr, [x19]
  413b00:	b	413ad0 <wcrtomb@plt+0x11110>
  413b04:	bl	402930 <__errno_location@plt>
  413b08:	ldr	w8, [x0]
  413b0c:	mov	w9, #0x7                   	// #7
  413b10:	strh	w9, [x20, #108]
  413b14:	str	w8, [x20, #64]
  413b18:	b	413bd4 <wcrtomb@plt+0x11214>
  413b1c:	mov	x0, x19
  413b20:	bl	414748 <wcrtomb@plt+0x11d88>
  413b24:	cbz	w0, 413cc8 <wcrtomb@plt+0x11308>
  413b28:	bl	402930 <__errno_location@plt>
  413b2c:	ldr	w8, [x0]
  413b30:	str	w8, [x20, #64]
  413b34:	ldr	w8, [x19, #72]
  413b38:	orr	w8, w8, #0x2000
  413b3c:	str	w8, [x19, #72]
  413b40:	b	413cc8 <wcrtomb@plt+0x11308>
  413b44:	ldr	w8, [x19, #72]
  413b48:	tbnz	w8, #2, 413cc0 <wcrtomb@plt+0x11300>
  413b4c:	ldr	w1, [x20, #68]
  413b50:	tbnz	w8, #9, 413cb4 <wcrtomb@plt+0x112f4>
  413b54:	mov	w0, w1
  413b58:	bl	4023c0 <fchdir@plt>
  413b5c:	cbz	w0, 413cc0 <wcrtomb@plt+0x11300>
  413b60:	bl	402930 <__errno_location@plt>
  413b64:	ldr	w8, [x0]
  413b68:	str	w8, [x20, #64]
  413b6c:	ldr	w8, [x19, #72]
  413b70:	orr	w8, w8, #0x2000
  413b74:	str	w8, [x19, #72]
  413b78:	b	413cc0 <wcrtomb@plt+0x11300>
  413b7c:	bl	402930 <__errno_location@plt>
  413b80:	ldr	w8, [x0]
  413b84:	mov	w9, #0x7                   	// #7
  413b88:	strh	w9, [x20, #108]
  413b8c:	str	w8, [x20, #64]
  413b90:	mov	w8, #0x3                   	// #3
  413b94:	strh	w8, [x20, #112]
  413b98:	ldr	x8, [x20, #8]
  413b9c:	ldr	x11, [x19, #32]
  413ba0:	add	x1, x20, #0xf8
  413ba4:	ldr	x9, [x8, #72]
  413ba8:	ldr	x8, [x8, #56]
  413bac:	sub	x10, x9, #0x1
  413bb0:	ldrb	w8, [x8, x10]
  413bb4:	cmp	w8, #0x2f
  413bb8:	csel	x8, x10, x9, eq  // eq = none
  413bbc:	add	x0, x11, x8
  413bc0:	mov	w8, #0x2f                  	// #47
  413bc4:	strb	w8, [x0], #1
  413bc8:	ldr	x8, [x20, #96]
  413bcc:	add	x2, x8, #0x1
  413bd0:	bl	402340 <memmove@plt>
  413bd4:	str	x20, [x19]
  413bd8:	ldrh	w0, [x20, #108]
  413bdc:	cmp	w0, #0xb
  413be0:	b.ne	413c74 <wcrtomb@plt+0x112b4>  // b.any
  413be4:	ldr	x8, [x20, #168]
  413be8:	cmp	x8, #0x1
  413bec:	b.eq	413ad0 <wcrtomb@plt+0x11110>  // b.none
  413bf0:	cmp	x8, #0x2
  413bf4:	b.ne	413d08 <wcrtomb@plt+0x11348>  // b.any
  413bf8:	ldr	x21, [x20, #8]
  413bfc:	ldr	w8, [x21, #104]
  413c00:	cbnz	w8, 413c30 <wcrtomb@plt+0x11270>
  413c04:	ldr	w8, [x19, #72]
  413c08:	mvn	w8, w8
  413c0c:	tst	w8, #0x18
  413c10:	b.ne	413c30 <wcrtomb@plt+0x11270>  // b.any
  413c14:	ldr	w1, [x19, #44]
  413c18:	mov	x0, x21
  413c1c:	bl	4147a4 <wcrtomb@plt+0x11de4>
  413c20:	cmp	w0, #0x2
  413c24:	b.ne	413c30 <wcrtomb@plt+0x11270>  // b.any
  413c28:	ldrh	w0, [x20, #108]
  413c2c:	b	413c74 <wcrtomb@plt+0x112b4>
  413c30:	mov	x0, x19
  413c34:	mov	x1, x20
  413c38:	mov	w2, wzr
  413c3c:	bl	41328c <wcrtomb@plt+0x108cc>
  413c40:	ldr	w8, [x20, #136]
  413c44:	strh	w0, [x20, #108]
  413c48:	and	w8, w8, #0xf000
  413c4c:	cmp	w8, #0x4, lsl #12
  413c50:	b.ne	413c74 <wcrtomb@plt+0x112b4>  // b.any
  413c54:	ldr	x8, [x20, #88]
  413c58:	cbz	x8, 413c74 <wcrtomb@plt+0x112b4>
  413c5c:	ldr	w8, [x21, #104]
  413c60:	add	w9, w8, #0x1
  413c64:	cmp	w9, #0x2
  413c68:	b.cc	413c74 <wcrtomb@plt+0x112b4>  // b.lo, b.ul, b.last
  413c6c:	sub	w8, w8, #0x1
  413c70:	str	w8, [x21, #104]
  413c74:	and	w8, w0, #0xffff
  413c78:	cmp	w8, #0x1
  413c7c:	b.ne	413ad0 <wcrtomb@plt+0x11110>  // b.any
  413c80:	ldr	x8, [x20, #88]
  413c84:	cbnz	x8, 413c90 <wcrtomb@plt+0x112d0>
  413c88:	ldr	x8, [x20, #120]
  413c8c:	str	x8, [x19, #24]
  413c90:	mov	x0, x19
  413c94:	mov	x1, x20
  413c98:	bl	414840 <wcrtomb@plt+0x11e80>
  413c9c:	tbnz	w0, #0, 413ad0 <wcrtomb@plt+0x11110>
  413ca0:	bl	402930 <__errno_location@plt>
  413ca4:	mov	w8, #0xc                   	// #12
  413ca8:	mov	x20, xzr
  413cac:	str	w8, [x0]
  413cb0:	b	413ad0 <wcrtomb@plt+0x11110>
  413cb4:	mov	w2, #0x1                   	// #1
  413cb8:	mov	x0, x19
  413cbc:	bl	4148f4 <wcrtomb@plt+0x11f34>
  413cc0:	ldr	w0, [x20, #68]
  413cc4:	bl	402650 <close@plt>
  413cc8:	ldrh	w8, [x20, #108]
  413ccc:	cmp	w8, #0x2
  413cd0:	b.eq	413cf8 <wcrtomb@plt+0x11338>  // b.none
  413cd4:	ldr	w8, [x20, #64]
  413cd8:	mov	w9, #0x6                   	// #6
  413cdc:	cmp	w8, #0x0
  413ce0:	cinc	w9, w9, ne  // ne = any
  413ce4:	strh	w9, [x20, #108]
  413ce8:	cbnz	w8, 413cf8 <wcrtomb@plt+0x11338>
  413cec:	mov	x0, x19
  413cf0:	mov	x1, x20
  413cf4:	bl	413d0c <wcrtomb@plt+0x1134c>
  413cf8:	ldrb	w8, [x19, #73]
  413cfc:	tst	w8, #0x20
  413d00:	csel	x20, x20, xzr, eq  // eq = none
  413d04:	b	413ad0 <wcrtomb@plt+0x11110>
  413d08:	bl	4026c0 <abort@plt>
  413d0c:	sub	sp, sp, #0x30
  413d10:	stp	x29, x30, [sp, #32]
  413d14:	ldrh	w8, [x0, #72]
  413d18:	mov	w9, #0x102                 	// #258
  413d1c:	add	x29, sp, #0x20
  413d20:	tst	w8, w9
  413d24:	b.eq	413d50 <wcrtomb@plt+0x11390>  // b.none
  413d28:	ldur	q0, [x1, #120]
  413d2c:	mov	x1, sp
  413d30:	str	q0, [sp]
  413d34:	ldr	x0, [x0, #88]
  413d38:	bl	4104d4 <wcrtomb@plt+0xdb14>
  413d3c:	cbz	x0, 413da4 <wcrtomb@plt+0x113e4>
  413d40:	bl	402770 <free@plt>
  413d44:	ldp	x29, x30, [sp, #32]
  413d48:	add	sp, sp, #0x30
  413d4c:	ret
  413d50:	ldr	x8, [x1, #8]
  413d54:	cbz	x8, 413d44 <wcrtomb@plt+0x11384>
  413d58:	ldr	x9, [x8, #88]
  413d5c:	tbnz	x9, #63, 413d44 <wcrtomb@plt+0x11384>
  413d60:	ldr	x9, [x0, #88]
  413d64:	ldr	x10, [x9, #16]
  413d68:	cbz	x10, 413da4 <wcrtomb@plt+0x113e4>
  413d6c:	ldr	x10, [x9]
  413d70:	ldr	x11, [x1, #128]
  413d74:	cmp	x10, x11
  413d78:	b.ne	413d44 <wcrtomb@plt+0x11384>  // b.any
  413d7c:	ldr	x10, [x9, #8]
  413d80:	ldr	x11, [x1, #120]
  413d84:	cmp	x10, x11
  413d88:	b.ne	413d44 <wcrtomb@plt+0x11384>  // b.any
  413d8c:	ldr	x10, [x8, #120]
  413d90:	str	x10, [x9, #8]
  413d94:	ldr	x8, [x8, #128]
  413d98:	ldr	x9, [x0, #88]
  413d9c:	str	x8, [x9]
  413da0:	b	413d44 <wcrtomb@plt+0x11384>
  413da4:	bl	4026c0 <abort@plt>
  413da8:	sub	sp, sp, #0xd0
  413dac:	stp	x24, x23, [sp, #160]
  413db0:	stp	x22, x21, [sp, #176]
  413db4:	stp	x20, x19, [sp, #192]
  413db8:	mov	x23, x3
  413dbc:	mov	w19, w2
  413dc0:	mov	x22, x1
  413dc4:	mov	x20, x0
  413dc8:	stp	x29, x30, [sp, #128]
  413dcc:	str	x25, [sp, #144]
  413dd0:	add	x29, sp, #0x80
  413dd4:	cbz	x3, 413df4 <wcrtomb@plt+0x11434>
  413dd8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  413ddc:	add	x1, x1, #0x9ab
  413de0:	mov	x0, x23
  413de4:	bl	402750 <strcmp@plt>
  413de8:	cmp	w0, #0x0
  413dec:	cset	w21, ne  // ne = any
  413df0:	b	413df8 <wcrtomb@plt+0x11438>
  413df4:	mov	w21, #0x1                   	// #1
  413df8:	ldr	w8, [x20, #72]
  413dfc:	tbnz	w8, #2, 413e40 <wcrtomb@plt+0x11480>
  413e00:	cmp	w19, #0x0
  413e04:	cset	w9, ge  // ge = tcont
  413e08:	orr	w9, w9, w21
  413e0c:	tbnz	w9, #0, 413e58 <wcrtomb@plt+0x11498>
  413e10:	tbz	w8, #9, 413e58 <wcrtomb@plt+0x11498>
  413e14:	add	x19, x20, #0x60
  413e18:	mov	x0, x19
  413e1c:	bl	420978 <_obstack_memory_used@@Base+0xb944>
  413e20:	tbnz	w0, #0, 413e64 <wcrtomb@plt+0x114a4>
  413e24:	mov	x0, x19
  413e28:	bl	4209c4 <_obstack_memory_used@@Base+0xb990>
  413e2c:	tbnz	w0, #31, 413e64 <wcrtomb@plt+0x114a4>
  413e30:	mov	w19, w0
  413e34:	mov	w24, wzr
  413e38:	mov	x23, xzr
  413e3c:	b	413e7c <wcrtomb@plt+0x114bc>
  413e40:	mov	w20, wzr
  413e44:	tbnz	w19, #31, 413f38 <wcrtomb@plt+0x11578>
  413e48:	tbz	w8, #9, 413f38 <wcrtomb@plt+0x11578>
  413e4c:	mov	w0, w19
  413e50:	bl	402650 <close@plt>
  413e54:	b	413efc <wcrtomb@plt+0x1153c>
  413e58:	tbnz	w19, #31, 413e64 <wcrtomb@plt+0x114a4>
  413e5c:	mov	w24, wzr
  413e60:	b	413e7c <wcrtomb@plt+0x114bc>
  413e64:	mov	x0, x20
  413e68:	mov	x1, x23
  413e6c:	bl	41355c <wcrtomb@plt+0x10b9c>
  413e70:	tbnz	w0, #31, 413f04 <wcrtomb@plt+0x11544>
  413e74:	mov	w19, w0
  413e78:	mov	w24, #0x1                   	// #1
  413e7c:	ldr	w25, [x20, #72]
  413e80:	tbnz	w25, #1, 413eb4 <wcrtomb@plt+0x114f4>
  413e84:	cbz	x23, 413e9c <wcrtomb@plt+0x114dc>
  413e88:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  413e8c:	add	x1, x1, #0x9ab
  413e90:	mov	x0, x23
  413e94:	bl	402750 <strcmp@plt>
  413e98:	cbz	w0, 413eb4 <wcrtomb@plt+0x114f4>
  413e9c:	tbnz	w25, #9, 413eec <wcrtomb@plt+0x1152c>
  413ea0:	mov	w0, w19
  413ea4:	bl	4023c0 <fchdir@plt>
  413ea8:	mov	w20, w0
  413eac:	cbnz	w24, 413f20 <wcrtomb@plt+0x11560>
  413eb0:	b	413f38 <wcrtomb@plt+0x11578>
  413eb4:	mov	x1, sp
  413eb8:	mov	w0, w19
  413ebc:	bl	420f78 <_obstack_memory_used@@Base+0xbf44>
  413ec0:	cbnz	w0, 413f18 <wcrtomb@plt+0x11558>
  413ec4:	ldr	x8, [x22, #120]
  413ec8:	ldr	x9, [sp]
  413ecc:	cmp	x8, x9
  413ed0:	b.ne	413f0c <wcrtomb@plt+0x1154c>  // b.any
  413ed4:	ldr	x8, [x22, #128]
  413ed8:	ldr	x9, [sp, #8]
  413edc:	cmp	x8, x9
  413ee0:	b.ne	413f0c <wcrtomb@plt+0x1154c>  // b.any
  413ee4:	ldr	w25, [x20, #72]
  413ee8:	tbz	w25, #9, 413ea0 <wcrtomb@plt+0x114e0>
  413eec:	mov	x0, x20
  413ef0:	mov	w1, w19
  413ef4:	mov	w2, w21
  413ef8:	bl	4148f4 <wcrtomb@plt+0x11f34>
  413efc:	mov	w20, wzr
  413f00:	b	413f38 <wcrtomb@plt+0x11578>
  413f04:	mov	w20, #0xffffffff            	// #-1
  413f08:	b	413f38 <wcrtomb@plt+0x11578>
  413f0c:	bl	402930 <__errno_location@plt>
  413f10:	mov	w8, #0x2                   	// #2
  413f14:	str	w8, [x0]
  413f18:	mov	w20, #0xffffffff            	// #-1
  413f1c:	cbz	w24, 413f38 <wcrtomb@plt+0x11578>
  413f20:	bl	402930 <__errno_location@plt>
  413f24:	ldr	w22, [x0]
  413f28:	mov	x21, x0
  413f2c:	mov	w0, w19
  413f30:	bl	402650 <close@plt>
  413f34:	str	w22, [x21]
  413f38:	mov	w0, w20
  413f3c:	ldp	x20, x19, [sp, #192]
  413f40:	ldp	x22, x21, [sp, #176]
  413f44:	ldp	x24, x23, [sp, #160]
  413f48:	ldr	x25, [sp, #144]
  413f4c:	ldp	x29, x30, [sp, #128]
  413f50:	add	sp, sp, #0xd0
  413f54:	ret
  413f58:	sub	sp, sp, #0xb0
  413f5c:	stp	x29, x30, [sp, #80]
  413f60:	stp	x28, x27, [sp, #96]
  413f64:	stp	x26, x25, [sp, #112]
  413f68:	stp	x24, x23, [sp, #128]
  413f6c:	stp	x22, x21, [sp, #144]
  413f70:	stp	x20, x19, [sp, #160]
  413f74:	ldr	x19, [x0]
  413f78:	mov	x20, x0
  413f7c:	mov	w25, w1
  413f80:	add	x29, sp, #0x50
  413f84:	ldr	x22, [x19, #24]
  413f88:	cbz	x22, 413fc4 <wcrtomb@plt+0x11604>
  413f8c:	mov	x0, x22
  413f90:	bl	4027f0 <dirfd@plt>
  413f94:	stur	w0, [x29, #-4]
  413f98:	tbnz	w0, #31, 413fe0 <wcrtomb@plt+0x11620>
  413f9c:	mov	x9, x20
  413fa0:	ldr	x8, [x9, #64]!
  413fa4:	mov	w12, wzr
  413fa8:	cmp	x8, #0x0
  413fac:	mov	w8, #0x86a0                	// #34464
  413fb0:	movk	w8, #0x1, lsl #16
  413fb4:	csinv	x8, x8, xzr, eq  // eq = none
  413fb8:	str	x9, [sp, #32]
  413fbc:	stur	x8, [x29, #-32]
  413fc0:	b	4141b8 <wcrtomb@plt+0x117f8>
  413fc4:	ldr	w8, [x20, #72]
  413fc8:	mov	w9, #0x204                 	// #516
  413fcc:	and	w9, w8, w9
  413fd0:	cmp	w9, #0x200
  413fd4:	b.ne	413ffc <wcrtomb@plt+0x1163c>  // b.any
  413fd8:	ldr	w0, [x20, #44]
  413fdc:	b	414000 <wcrtomb@plt+0x11640>
  413fe0:	ldr	x0, [x19, #24]
  413fe4:	bl	402630 <closedir@plt>
  413fe8:	mov	x23, xzr
  413fec:	cmp	w25, #0x3
  413ff0:	str	xzr, [x19, #24]
  413ff4:	b.eq	41405c <wcrtomb@plt+0x1169c>  // b.none
  413ff8:	b	414708 <wcrtomb@plt+0x11d48>
  413ffc:	mov	w0, #0xffffff9c            	// #-100
  414000:	ldr	x1, [x19, #48]
  414004:	tbnz	w8, #4, 414010 <wcrtomb@plt+0x11650>
  414008:	mov	w2, wzr
  41400c:	b	414020 <wcrtomb@plt+0x11660>
  414010:	tbz	w8, #0, 41401c <wcrtomb@plt+0x1165c>
  414014:	ldr	x8, [x19, #88]
  414018:	cbz	x8, 414008 <wcrtomb@plt+0x11648>
  41401c:	mov	w2, #0x8000                	// #32768
  414020:	sub	x3, x29, #0x4
  414024:	bl	420b10 <_obstack_memory_used@@Base+0xbadc>
  414028:	str	x0, [x19, #24]
  41402c:	cbz	x0, 414054 <wcrtomb@plt+0x11694>
  414030:	ldrh	w8, [x19, #108]
  414034:	cmp	w8, #0xb
  414038:	b.ne	414078 <wcrtomb@plt+0x116b8>  // b.any
  41403c:	mov	x0, x20
  414040:	mov	x1, x19
  414044:	mov	w2, wzr
  414048:	bl	41328c <wcrtomb@plt+0x108cc>
  41404c:	strh	w0, [x19, #108]
  414050:	b	4140ac <wcrtomb@plt+0x116ec>
  414054:	cmp	w25, #0x3
  414058:	b.ne	414704 <wcrtomb@plt+0x11d44>  // b.any
  41405c:	mov	w8, #0x4                   	// #4
  414060:	strh	w8, [x19, #108]
  414064:	bl	402930 <__errno_location@plt>
  414068:	ldr	w8, [x0]
  41406c:	mov	x23, xzr
  414070:	str	w8, [x19, #64]
  414074:	b	414708 <wcrtomb@plt+0x11d48>
  414078:	ldrb	w8, [x20, #73]
  41407c:	tbz	w8, #0, 4140ac <wcrtomb@plt+0x116ec>
  414080:	mov	x0, x20
  414084:	mov	x1, x19
  414088:	bl	413d0c <wcrtomb@plt+0x1134c>
  41408c:	mov	x0, x20
  414090:	mov	x1, x19
  414094:	mov	w2, wzr
  414098:	bl	41328c <wcrtomb@plt+0x108cc>
  41409c:	mov	x0, x20
  4140a0:	mov	x1, x19
  4140a4:	bl	414840 <wcrtomb@plt+0x11e80>
  4140a8:	tbz	w0, #0, 41472c <wcrtomb@plt+0x11d6c>
  4140ac:	mov	x9, x20
  4140b0:	ldr	x8, [x9, #64]!
  4140b4:	str	x9, [sp, #32]
  4140b8:	mov	w9, #0x86a0                	// #34464
  4140bc:	movk	w9, #0x1, lsl #16
  4140c0:	cmp	x8, #0x0
  4140c4:	csinv	x8, x9, xzr, eq  // eq = none
  4140c8:	cmp	w25, #0x2
  4140cc:	stur	x8, [x29, #-32]
  4140d0:	b.ne	4140dc <wcrtomb@plt+0x1171c>  // b.any
  4140d4:	mov	w21, wzr
  4140d8:	b	414118 <wcrtomb@plt+0x11758>
  4140dc:	ldr	w8, [x20, #72]
  4140e0:	and	w8, w8, #0x38
  4140e4:	cmp	w8, #0x18
  4140e8:	b.ne	414110 <wcrtomb@plt+0x11750>  // b.any
  4140ec:	ldr	w8, [x19, #140]
  4140f0:	cmp	w8, #0x2
  4140f4:	b.ne	414110 <wcrtomb@plt+0x11750>  // b.any
  4140f8:	ldur	w1, [x29, #-4]
  4140fc:	mov	x0, x19
  414100:	bl	4147a4 <wcrtomb@plt+0x11de4>
  414104:	cmp	w0, #0x0
  414108:	cset	w8, ne  // ne = any
  41410c:	b	414114 <wcrtomb@plt+0x11754>
  414110:	mov	w8, wzr
  414114:	eor	w21, w8, #0x1
  414118:	cmp	w25, #0x3
  41411c:	b.eq	414124 <wcrtomb@plt+0x11764>  // b.none
  414120:	cbz	w21, 4141b4 <wcrtomb@plt+0x117f4>
  414124:	ldrb	w9, [x20, #73]
  414128:	ldur	w8, [x29, #-4]
  41412c:	tbz	w9, #1, 414148 <wcrtomb@plt+0x11788>
  414130:	mov	w1, #0x406                 	// #1030
  414134:	mov	w2, #0x3                   	// #3
  414138:	mov	w0, w8
  41413c:	bl	420c20 <_obstack_memory_used@@Base+0xbbec>
  414140:	mov	w8, w0
  414144:	stur	w0, [x29, #-4]
  414148:	tbnz	w8, #31, 414164 <wcrtomb@plt+0x117a4>
  41414c:	mov	x0, x20
  414150:	mov	x1, x19
  414154:	mov	w2, w8
  414158:	mov	x3, xzr
  41415c:	bl	413da8 <wcrtomb@plt+0x113e8>
  414160:	cbz	w0, 414740 <wcrtomb@plt+0x11d80>
  414164:	cmp	w25, #0x3
  414168:	cset	w8, ne  // ne = any
  41416c:	eor	w9, w21, #0x1
  414170:	orr	w8, w8, w9
  414174:	tbnz	w8, #0, 414184 <wcrtomb@plt+0x117c4>
  414178:	bl	402930 <__errno_location@plt>
  41417c:	ldr	w8, [x0]
  414180:	str	w8, [x19, #64]
  414184:	ldrh	w8, [x19, #110]
  414188:	ldr	x0, [x19, #24]
  41418c:	orr	w8, w8, #0x1
  414190:	strh	w8, [x19, #110]
  414194:	bl	402630 <closedir@plt>
  414198:	str	xzr, [x19, #24]
  41419c:	ldrb	w8, [x20, #73]
  4141a0:	tbz	w8, #1, 4141b0 <wcrtomb@plt+0x117f0>
  4141a4:	ldur	w0, [x29, #-4]
  4141a8:	tbnz	w0, #31, 4141b0 <wcrtomb@plt+0x117f0>
  4141ac:	bl	402650 <close@plt>
  4141b0:	str	xzr, [x19, #24]
  4141b4:	mov	w12, #0x1                   	// #1
  4141b8:	ldr	x8, [x19, #72]
  4141bc:	ldr	x9, [x19, #56]
  4141c0:	ldrb	w11, [x20, #72]
  4141c4:	str	x22, [sp, #16]
  4141c8:	sub	x10, x8, #0x1
  4141cc:	ldrb	w9, [x9, x10]
  4141d0:	str	w12, [sp, #12]
  4141d4:	cmp	w9, #0x2f
  4141d8:	csel	x8, x10, x8, eq  // eq = none
  4141dc:	tbnz	w11, #2, 4141e8 <wcrtomb@plt+0x11828>
  4141e0:	stur	xzr, [x29, #-24]
  4141e4:	b	4141fc <wcrtomb@plt+0x1183c>
  4141e8:	ldr	x9, [x20, #32]
  4141ec:	add	x10, x9, x8
  4141f0:	mov	w9, #0x2f                  	// #47
  4141f4:	strb	w9, [x10], #1
  4141f8:	stur	x10, [x29, #-24]
  4141fc:	ldr	x27, [x19, #24]
  414200:	add	x22, x8, #0x1
  414204:	cbz	x27, 414474 <wcrtomb@plt+0x11ab4>
  414208:	ldr	x8, [x19, #88]
  41420c:	ldr	x9, [x20, #48]
  414210:	str	w25, [sp, #8]
  414214:	add	x8, x8, #0x1
  414218:	str	x8, [sp, #40]
  41421c:	sub	x25, x9, x22
  414220:	bl	402930 <__errno_location@plt>
  414224:	mov	x23, xzr
  414228:	mov	x24, xzr
  41422c:	mov	x26, xzr
  414230:	stur	x0, [x29, #-16]
  414234:	str	xzr, [sp, #24]
  414238:	ldur	x8, [x29, #-16]
  41423c:	mov	x0, x27
  414240:	str	wzr, [x8]
  414244:	bl	402600 <readdir@plt>
  414248:	cbz	x0, 4144cc <wcrtomb@plt+0x11b0c>
  41424c:	ldrb	w8, [x20, #72]
  414250:	mov	x28, x0
  414254:	tbnz	w8, #5, 41427c <wcrtomb@plt+0x118bc>
  414258:	ldrb	w8, [x28, #19]
  41425c:	cmp	w8, #0x2e
  414260:	b.ne	41427c <wcrtomb@plt+0x118bc>  // b.any
  414264:	ldrb	w8, [x28, #20]
  414268:	cbz	w8, 414420 <wcrtomb@plt+0x11a60>
  41426c:	cmp	w8, #0x2e
  414270:	b.ne	41427c <wcrtomb@plt+0x118bc>  // b.any
  414274:	ldrb	w8, [x28, #21]
  414278:	cbz	w8, 414420 <wcrtomb@plt+0x11a60>
  41427c:	add	x27, x28, #0x13
  414280:	mov	x0, x27
  414284:	bl	402380 <strlen@plt>
  414288:	mov	x21, x0
  41428c:	mov	x0, x20
  414290:	mov	x1, x27
  414294:	mov	x2, x21
  414298:	bl	413204 <wcrtomb@plt+0x10844>
  41429c:	mov	x27, x0
  4142a0:	cbz	x0, 414488 <wcrtomb@plt+0x11ac8>
  4142a4:	cmp	x21, x25
  4142a8:	b.cs	4142b4 <wcrtomb@plt+0x118f4>  // b.hs, b.nlast
  4142ac:	add	x21, x21, x22
  4142b0:	b	414300 <wcrtomb@plt+0x11940>
  4142b4:	ldr	x25, [x20, #32]
  4142b8:	add	x21, x21, x22
  4142bc:	add	x1, x21, #0x1
  4142c0:	mov	x0, x20
  4142c4:	bl	413188 <wcrtomb@plt+0x107c8>
  4142c8:	tbz	w0, #0, 414488 <wcrtomb@plt+0x11ac8>
  4142cc:	ldr	x8, [x20, #32]
  4142d0:	cmp	x25, x8
  4142d4:	b.eq	4142f8 <wcrtomb@plt+0x11938>  // b.none
  4142d8:	ldrb	w9, [x20, #72]
  4142dc:	add	x8, x8, x22
  4142e0:	tst	w9, #0x4
  4142e4:	ldur	x9, [x29, #-24]
  4142e8:	csel	x9, x9, x8, eq  // eq = none
  4142ec:	mov	w8, #0x1                   	// #1
  4142f0:	stur	x9, [x29, #-24]
  4142f4:	str	w8, [sp, #28]
  4142f8:	ldr	x8, [x20, #48]
  4142fc:	sub	x25, x8, x22
  414300:	cmp	x21, x22
  414304:	b.cc	414514 <wcrtomb@plt+0x11b54>  // b.lo, b.ul, b.last
  414308:	ldr	x8, [sp, #40]
  41430c:	str	x8, [x27, #88]
  414310:	ldr	x8, [x20]
  414314:	str	x21, [x27, #72]
  414318:	str	x8, [x27, #8]
  41431c:	ldr	x8, [x28]
  414320:	str	x8, [x27, #128]
  414324:	ldrb	w8, [x20, #72]
  414328:	tbnz	w8, #2, 414338 <wcrtomb@plt+0x11978>
  41432c:	add	x8, x27, #0xf8
  414330:	str	x8, [x27, #48]
  414334:	b	414354 <wcrtomb@plt+0x11994>
  414338:	ldr	x9, [x27, #96]
  41433c:	ldr	x8, [x27, #56]
  414340:	ldur	x0, [x29, #-24]
  414344:	add	x1, x27, #0xf8
  414348:	add	x2, x9, #0x1
  41434c:	str	x8, [x27, #48]
  414350:	bl	402340 <memmove@plt>
  414354:	ldr	x9, [x20, #64]
  414358:	ldr	w8, [x20, #72]
  41435c:	cbz	x9, 41437c <wcrtomb@plt+0x119bc>
  414360:	tbnz	w8, #10, 41437c <wcrtomb@plt+0x119bc>
  414364:	mov	x0, x20
  414368:	mov	x1, x27
  41436c:	mov	w2, wzr
  414370:	bl	41328c <wcrtomb@plt+0x108cc>
  414374:	strh	w0, [x27, #108]
  414378:	b	4143dc <wcrtomb@plt+0x11a1c>
  41437c:	ldrb	w9, [x28, #18]
  414380:	mov	w10, #0x18                  	// #24
  414384:	bics	wzr, w10, w8
  414388:	mov	w10, #0xfb                  	// #251
  41438c:	cset	w8, eq  // eq = none
  414390:	tst	w9, w10
  414394:	sub	w9, w9, #0x1
  414398:	cset	w10, ne  // ne = any
  41439c:	cmp	w9, #0xb
  4143a0:	and	w8, w8, w10
  4143a4:	mov	w10, #0xb                   	// #11
  4143a8:	strh	w10, [x27, #108]
  4143ac:	b.hi	4143c4 <wcrtomb@plt+0x11a04>  // b.pmore
  4143b0:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4143b4:	sxtb	x9, w9
  4143b8:	add	x10, x10, #0x9b0
  4143bc:	ldr	w9, [x10, x9, lsl #2]
  4143c0:	b	4143c8 <wcrtomb@plt+0x11a08>
  4143c4:	mov	w9, wzr
  4143c8:	cmp	w8, #0x0
  4143cc:	mov	w8, #0x1                   	// #1
  4143d0:	cinc	x8, x8, eq  // eq = none
  4143d4:	str	w9, [x27, #136]
  4143d8:	str	x8, [x27, #168]
  4143dc:	mov	x21, x27
  4143e0:	str	xzr, [x27, #16]
  4143e4:	cbz	x23, 4143f0 <wcrtomb@plt+0x11a30>
  4143e8:	mov	x21, x23
  4143ec:	str	x27, [x26, #16]
  4143f0:	mov	w8, #0x2710                	// #10000
  4143f4:	cmp	x24, x8
  4143f8:	b.ne	414408 <wcrtomb@plt+0x11a48>  // b.any
  4143fc:	ldr	x8, [sp, #32]
  414400:	ldr	x8, [x8]
  414404:	cbz	x8, 41442c <wcrtomb@plt+0x11a6c>
  414408:	ldur	x8, [x29, #-32]
  41440c:	add	x24, x24, #0x1
  414410:	cmp	x8, x24
  414414:	b.ls	414558 <wcrtomb@plt+0x11b98>  // b.plast
  414418:	mov	x26, x27
  41441c:	mov	x23, x21
  414420:	ldr	x27, [x19, #24]
  414424:	cbnz	x27, 414238 <wcrtomb@plt+0x11878>
  414428:	b	41455c <wcrtomb@plt+0x11b9c>
  41442c:	ldur	w1, [x29, #-4]
  414430:	mov	x0, x19
  414434:	bl	414b30 <wcrtomb@plt+0x12170>
  414438:	mov	w8, #0x6969                	// #26985
  41443c:	cmp	x0, x8
  414440:	str	wzr, [sp, #24]
  414444:	b.eq	414408 <wcrtomb@plt+0x11a48>  // b.none
  414448:	mov	w8, #0x1994                	// #6548
  41444c:	movk	w8, #0x102, lsl #16
  414450:	cmp	x0, x8
  414454:	b.eq	414408 <wcrtomb@plt+0x11a48>  // b.none
  414458:	mov	w8, #0x4d42                	// #19778
  41445c:	movk	w8, #0xff53, lsl #16
  414460:	cmp	x0, x8
  414464:	b.eq	414408 <wcrtomb@plt+0x11a48>  // b.none
  414468:	mov	w8, #0x1                   	// #1
  41446c:	str	w8, [sp, #24]
  414470:	b	414408 <wcrtomb@plt+0x11a48>
  414474:	ldr	x21, [sp, #16]
  414478:	ldr	w26, [sp, #12]
  41447c:	mov	x23, xzr
  414480:	mov	x24, xzr
  414484:	b	4145f0 <wcrtomb@plt+0x11c30>
  414488:	ldur	x22, [x29, #-16]
  41448c:	mov	x0, x27
  414490:	ldr	w21, [x22]
  414494:	bl	402770 <free@plt>
  414498:	mov	x0, x23
  41449c:	bl	413588 <wcrtomb@plt+0x10bc8>
  4144a0:	ldr	x0, [x19, #24]
  4144a4:	bl	402630 <closedir@plt>
  4144a8:	mov	w8, #0x7                   	// #7
  4144ac:	str	xzr, [x19, #24]
  4144b0:	strh	w8, [x19, #108]
  4144b4:	ldr	w8, [x20, #72]
  4144b8:	mov	x23, xzr
  4144bc:	orr	w8, w8, #0x2000
  4144c0:	str	w8, [x20, #72]
  4144c4:	str	w21, [x22]
  4144c8:	b	414708 <wcrtomb@plt+0x11d48>
  4144cc:	ldur	x8, [x29, #-16]
  4144d0:	ldr	x21, [sp, #16]
  4144d4:	ldr	w8, [x8]
  4144d8:	cbz	w8, 4144f8 <wcrtomb@plt+0x11b38>
  4144dc:	orr	x9, x21, x24
  4144e0:	str	w8, [x19, #64]
  4144e4:	mov	w8, #0x4                   	// #4
  4144e8:	cmp	x9, #0x0
  4144ec:	mov	w9, #0x7                   	// #7
  4144f0:	csel	w8, w9, w8, ne  // ne = any
  4144f4:	strh	w8, [x19, #108]
  4144f8:	ldr	x0, [x19, #24]
  4144fc:	ldp	w25, w26, [sp, #8]
  414500:	ldr	w27, [sp, #24]
  414504:	cbz	x0, 414568 <wcrtomb@plt+0x11ba8>
  414508:	bl	402630 <closedir@plt>
  41450c:	str	xzr, [x19, #24]
  414510:	b	414568 <wcrtomb@plt+0x11ba8>
  414514:	mov	x0, x27
  414518:	bl	402770 <free@plt>
  41451c:	mov	x0, x23
  414520:	bl	413588 <wcrtomb@plt+0x10bc8>
  414524:	ldr	x0, [x19, #24]
  414528:	bl	402630 <closedir@plt>
  41452c:	mov	w8, #0x7                   	// #7
  414530:	str	xzr, [x19, #24]
  414534:	strh	w8, [x19, #108]
  414538:	ldr	w8, [x20, #72]
  41453c:	mov	w9, #0x24                  	// #36
  414540:	mov	x23, xzr
  414544:	orr	w8, w8, #0x2000
  414548:	str	w8, [x20, #72]
  41454c:	ldur	x8, [x29, #-16]
  414550:	str	w9, [x8]
  414554:	b	414708 <wcrtomb@plt+0x11d48>
  414558:	mov	x23, x21
  41455c:	ldp	w25, w26, [sp, #8]
  414560:	ldr	x21, [sp, #16]
  414564:	ldr	w27, [sp, #24]
  414568:	ldr	w8, [sp, #28]
  41456c:	tbz	w8, #0, 4145f0 <wcrtomb@plt+0x11c30>
  414570:	ldr	x9, [x20, #8]
  414574:	ldr	x8, [x20, #32]
  414578:	cbz	x9, 4145a8 <wcrtomb@plt+0x11be8>
  41457c:	ldr	x10, [x9, #48]
  414580:	add	x11, x9, #0xf8
  414584:	cmp	x10, x11
  414588:	b.eq	41459c <wcrtomb@plt+0x11bdc>  // b.none
  41458c:	ldr	x11, [x9, #56]
  414590:	sub	x10, x10, x11
  414594:	add	x10, x8, x10
  414598:	str	x10, [x9, #48]
  41459c:	str	x8, [x9, #56]
  4145a0:	ldr	x9, [x9, #16]
  4145a4:	cbnz	x9, 41457c <wcrtomb@plt+0x11bbc>
  4145a8:	ldr	x9, [x23, #88]
  4145ac:	tbnz	x9, #63, 4145f0 <wcrtomb@plt+0x11c30>
  4145b0:	mov	x9, x23
  4145b4:	ldr	x10, [x9, #48]
  4145b8:	add	x11, x9, #0xf8
  4145bc:	cmp	x10, x11
  4145c0:	b.eq	4145d4 <wcrtomb@plt+0x11c14>  // b.none
  4145c4:	ldr	x11, [x9, #56]
  4145c8:	sub	x10, x10, x11
  4145cc:	add	x10, x8, x10
  4145d0:	str	x10, [x9, #48]
  4145d4:	ldr	x10, [x9, #16]
  4145d8:	str	x8, [x9, #56]
  4145dc:	cbnz	x10, 4145e4 <wcrtomb@plt+0x11c24>
  4145e0:	ldr	x10, [x9, #8]
  4145e4:	ldr	x11, [x10, #88]
  4145e8:	mov	x9, x10
  4145ec:	tbz	x11, #63, 4145b4 <wcrtomb@plt+0x11bf4>
  4145f0:	ldrb	w8, [x20, #72]
  4145f4:	tbz	w8, #2, 414614 <wcrtomb@plt+0x11c54>
  4145f8:	ldr	x8, [x20, #48]
  4145fc:	ldur	x10, [x29, #-24]
  414600:	cmp	x22, x8
  414604:	sub	x9, x10, #0x1
  414608:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  41460c:	csel	x8, x9, x10, eq  // eq = none
  414610:	strb	wzr, [x8]
  414614:	cmp	x21, #0x0
  414618:	cset	w8, ne  // ne = any
  41461c:	orr	w8, w8, w26
  414620:	tbz	w8, #0, 414650 <wcrtomb@plt+0x11c90>
  414624:	cbnz	x24, 41465c <wcrtomb@plt+0x11c9c>
  414628:	cmp	w25, #0x3
  41462c:	b.ne	4146fc <wcrtomb@plt+0x11d3c>  // b.any
  414630:	ldrh	w8, [x19, #108]
  414634:	cmp	w8, #0x4
  414638:	b.eq	4146fc <wcrtomb@plt+0x11d3c>  // b.none
  41463c:	cmp	w8, #0x7
  414640:	b.eq	4146fc <wcrtomb@plt+0x11d3c>  // b.none
  414644:	mov	w8, #0x6                   	// #6
  414648:	strh	w8, [x19, #108]
  41464c:	b	4146fc <wcrtomb@plt+0x11d3c>
  414650:	cmp	w25, #0x1
  414654:	b.eq	4146b4 <wcrtomb@plt+0x11cf4>  // b.none
  414658:	cbz	x24, 4146b4 <wcrtomb@plt+0x11cf4>
  41465c:	tbz	w27, #0, 414688 <wcrtomb@plt+0x11cc8>
  414660:	adrp	x8, 414000 <wcrtomb@plt+0x11640>
  414664:	add	x8, x8, #0xc5c
  414668:	mov	x0, x20
  41466c:	mov	x1, x23
  414670:	mov	x2, x24
  414674:	str	x8, [x20, #64]
  414678:	bl	413404 <wcrtomb@plt+0x10a44>
  41467c:	mov	x23, x0
  414680:	str	xzr, [x20, #64]
  414684:	b	414708 <wcrtomb@plt+0x11d48>
  414688:	cmp	x24, #0x2
  41468c:	b.cc	414708 <wcrtomb@plt+0x11d48>  // b.lo, b.ul, b.last
  414690:	ldr	x8, [sp, #32]
  414694:	ldr	x8, [x8]
  414698:	cbz	x8, 414708 <wcrtomb@plt+0x11d48>
  41469c:	mov	x0, x20
  4146a0:	mov	x1, x23
  4146a4:	mov	x2, x24
  4146a8:	bl	413404 <wcrtomb@plt+0x10a44>
  4146ac:	mov	x23, x0
  4146b0:	b	414708 <wcrtomb@plt+0x11d48>
  4146b4:	ldr	x8, [x19, #88]
  4146b8:	cbz	x8, 4146dc <wcrtomb@plt+0x11d1c>
  4146bc:	ldr	x1, [x19, #8]
  4146c0:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4146c4:	add	x3, x3, #0x9ab
  4146c8:	mov	w2, #0xffffffff            	// #-1
  4146cc:	mov	x0, x20
  4146d0:	bl	413da8 <wcrtomb@plt+0x113e8>
  4146d4:	cbnz	w0, 4146e8 <wcrtomb@plt+0x11d28>
  4146d8:	b	414624 <wcrtomb@plt+0x11c64>
  4146dc:	mov	x0, x20
  4146e0:	bl	414748 <wcrtomb@plt+0x11d88>
  4146e4:	cbz	w0, 414624 <wcrtomb@plt+0x11c64>
  4146e8:	mov	w8, #0x7                   	// #7
  4146ec:	strh	w8, [x19, #108]
  4146f0:	ldr	w8, [x20, #72]
  4146f4:	orr	w8, w8, #0x2000
  4146f8:	str	w8, [x20, #72]
  4146fc:	mov	x0, x23
  414700:	bl	413588 <wcrtomb@plt+0x10bc8>
  414704:	mov	x23, xzr
  414708:	mov	x0, x23
  41470c:	ldp	x20, x19, [sp, #160]
  414710:	ldp	x22, x21, [sp, #144]
  414714:	ldp	x24, x23, [sp, #128]
  414718:	ldp	x26, x25, [sp, #112]
  41471c:	ldp	x28, x27, [sp, #96]
  414720:	ldp	x29, x30, [sp, #80]
  414724:	add	sp, sp, #0xb0
  414728:	ret
  41472c:	bl	402930 <__errno_location@plt>
  414730:	mov	w8, #0xc                   	// #12
  414734:	mov	x23, xzr
  414738:	str	w8, [x0]
  41473c:	b	414708 <wcrtomb@plt+0x11d48>
  414740:	mov	w12, wzr
  414744:	b	4141b8 <wcrtomb@plt+0x117f8>
  414748:	stp	x29, x30, [sp, #-32]!
  41474c:	stp	x20, x19, [sp, #16]
  414750:	ldr	w8, [x0, #72]
  414754:	mov	x19, x0
  414758:	mov	x29, sp
  41475c:	tbnz	w8, #2, 414788 <wcrtomb@plt+0x11dc8>
  414760:	tbnz	w8, #9, 414778 <wcrtomb@plt+0x11db8>
  414764:	ldr	w0, [x19, #40]
  414768:	bl	4023c0 <fchdir@plt>
  41476c:	cmp	w0, #0x0
  414770:	cset	w20, ne  // ne = any
  414774:	b	41478c <wcrtomb@plt+0x11dcc>
  414778:	mov	w1, #0xffffff9c            	// #-100
  41477c:	mov	w2, #0x1                   	// #1
  414780:	mov	x0, x19
  414784:	bl	4148f4 <wcrtomb@plt+0x11f34>
  414788:	mov	w20, wzr
  41478c:	add	x0, x19, #0x60
  414790:	bl	4136cc <wcrtomb@plt+0x10d0c>
  414794:	mov	w0, w20
  414798:	ldp	x20, x19, [sp, #16]
  41479c:	ldp	x29, x30, [sp], #32
  4147a0:	ret
  4147a4:	stp	x29, x30, [sp, #-16]!
  4147a8:	mov	x29, sp
  4147ac:	bl	414b30 <wcrtomb@plt+0x12170>
  4147b0:	mov	w8, #0x4972                	// #18802
  4147b4:	movk	w8, #0x5265, lsl #16
  4147b8:	cmp	x0, x8
  4147bc:	b.le	4147f0 <wcrtomb@plt+0x11e30>
  4147c0:	mov	w8, #0x5341                	// #21313
  4147c4:	movk	w8, #0x5846, lsl #16
  4147c8:	cmp	x0, x8
  4147cc:	mov	w8, #0x2                   	// #2
  4147d0:	b.gt	414808 <wcrtomb@plt+0x11e48>
  4147d4:	mov	w9, #0x4973                	// #18803
  4147d8:	movk	w9, #0x5265, lsl #16
  4147dc:	cmp	x0, x9
  4147e0:	b.eq	41482c <wcrtomb@plt+0x11e6c>  // b.none
  4147e4:	mov	w8, #0x414f                	// #16719
  4147e8:	movk	w8, #0x5346, lsl #16
  4147ec:	b	414820 <wcrtomb@plt+0x11e60>
  4147f0:	cbz	x0, 414828 <wcrtomb@plt+0x11e68>
  4147f4:	mov	w8, #0x6969                	// #26985
  4147f8:	cmp	x0, x8
  4147fc:	b.eq	414828 <wcrtomb@plt+0x11e68>  // b.none
  414800:	mov	w8, #0x9fa0                	// #40864
  414804:	b	414820 <wcrtomb@plt+0x11e60>
  414808:	mov	w9, #0x5342                	// #21314
  41480c:	movk	w9, #0x5846, lsl #16
  414810:	cmp	x0, x9
  414814:	b.eq	41482c <wcrtomb@plt+0x11e6c>  // b.none
  414818:	mov	w8, #0x4d42                	// #19778
  41481c:	movk	w8, #0xff53, lsl #16
  414820:	cmp	x0, x8
  414824:	b.ne	414838 <wcrtomb@plt+0x11e78>  // b.any
  414828:	mov	w8, wzr
  41482c:	mov	w0, w8
  414830:	ldp	x29, x30, [sp], #16
  414834:	ret
  414838:	mov	w8, #0x1                   	// #1
  41483c:	b	41482c <wcrtomb@plt+0x11e6c>
  414840:	stp	x29, x30, [sp, #-48]!
  414844:	stp	x20, x19, [sp, #32]
  414848:	ldrh	w8, [x0, #72]
  41484c:	mov	w9, #0x102                 	// #258
  414850:	mov	x20, x0
  414854:	mov	x19, x1
  414858:	tst	w8, w9
  41485c:	str	x21, [sp, #16]
  414860:	mov	x29, sp
  414864:	b.eq	4148bc <wcrtomb@plt+0x11efc>  // b.none
  414868:	mov	w0, #0x18                  	// #24
  41486c:	bl	4024e0 <malloc@plt>
  414870:	cbz	x0, 4148dc <wcrtomb@plt+0x11f1c>
  414874:	ldur	q0, [x19, #120]
  414878:	str	x19, [x0, #16]
  41487c:	mov	x21, x0
  414880:	mov	x1, x21
  414884:	str	q0, [x0]
  414888:	ldr	x0, [x20, #88]
  41488c:	bl	41049c <wcrtomb@plt+0xdadc>
  414890:	cmp	x0, x21
  414894:	b.eq	4148d8 <wcrtomb@plt+0x11f18>  // b.none
  414898:	mov	x20, x0
  41489c:	mov	x0, x21
  4148a0:	bl	402770 <free@plt>
  4148a4:	cbz	x20, 4148ec <wcrtomb@plt+0x11f2c>
  4148a8:	ldr	x8, [x20, #16]
  4148ac:	mov	w9, #0x2                   	// #2
  4148b0:	strh	w9, [x19, #108]
  4148b4:	str	x8, [x19]
  4148b8:	b	4148d8 <wcrtomb@plt+0x11f18>
  4148bc:	ldr	x0, [x20, #88]
  4148c0:	add	x1, x19, #0x78
  4148c4:	bl	42071c <_obstack_memory_used@@Base+0xb6e8>
  4148c8:	tbz	w0, #0, 4148d8 <wcrtomb@plt+0x11f18>
  4148cc:	mov	w8, #0x2                   	// #2
  4148d0:	str	x19, [x19]
  4148d4:	strh	w8, [x19, #108]
  4148d8:	mov	w0, #0x1                   	// #1
  4148dc:	ldp	x20, x19, [sp, #32]
  4148e0:	ldr	x21, [sp, #16]
  4148e4:	ldp	x29, x30, [sp], #48
  4148e8:	ret
  4148ec:	mov	w0, wzr
  4148f0:	b	4148dc <wcrtomb@plt+0x11f1c>
  4148f4:	stp	x29, x30, [sp, #-32]!
  4148f8:	stp	x20, x19, [sp, #16]
  4148fc:	ldr	w8, [x0, #44]
  414900:	mov	x19, x0
  414904:	mov	w20, w1
  414908:	mov	x29, sp
  41490c:	cmp	w8, w1
  414910:	b.ne	41491c <wcrtomb@plt+0x11f5c>  // b.any
  414914:	cmn	w8, #0x64
  414918:	b.ne	414958 <wcrtomb@plt+0x11f98>  // b.any
  41491c:	tbz	w2, #0, 414934 <wcrtomb@plt+0x11f74>
  414920:	add	x0, x19, #0x60
  414924:	mov	w1, w8
  414928:	bl	420980 <_obstack_memory_used@@Base+0xb94c>
  41492c:	tbz	w0, #31, 414944 <wcrtomb@plt+0x11f84>
  414930:	b	414948 <wcrtomb@plt+0x11f88>
  414934:	tbnz	w8, #31, 414948 <wcrtomb@plt+0x11f88>
  414938:	ldr	w9, [x19, #72]
  41493c:	tbnz	w9, #2, 414948 <wcrtomb@plt+0x11f88>
  414940:	mov	w0, w8
  414944:	bl	402650 <close@plt>
  414948:	str	w20, [x19, #44]
  41494c:	ldp	x20, x19, [sp, #16]
  414950:	ldp	x29, x30, [sp], #32
  414954:	ret
  414958:	bl	4026c0 <abort@plt>
  41495c:	stp	x29, x30, [sp, #-16]!
  414960:	cmp	w2, #0x5
  414964:	mov	x29, sp
  414968:	b.cc	414980 <wcrtomb@plt+0x11fc0>  // b.lo, b.ul, b.last
  41496c:	bl	402930 <__errno_location@plt>
  414970:	mov	w8, #0x16                  	// #22
  414974:	str	w8, [x0]
  414978:	mov	w0, #0x1                   	// #1
  41497c:	b	414988 <wcrtomb@plt+0x11fc8>
  414980:	mov	w0, wzr
  414984:	strh	w2, [x1, #112]
  414988:	ldp	x29, x30, [sp], #16
  41498c:	ret
  414990:	stp	x29, x30, [sp, #-48]!
  414994:	tst	w1, #0xffffefff
  414998:	stp	x22, x21, [sp, #16]
  41499c:	stp	x20, x19, [sp, #32]
  4149a0:	mov	x29, sp
  4149a4:	b.eq	4149c0 <wcrtomb@plt+0x12000>  // b.none
  4149a8:	bl	402930 <__errno_location@plt>
  4149ac:	mov	x8, x0
  4149b0:	mov	w9, #0x16                  	// #22
  4149b4:	mov	x0, xzr
  4149b8:	str	w9, [x8]
  4149bc:	b	4149fc <wcrtomb@plt+0x1203c>
  4149c0:	ldr	x22, [x0]
  4149c4:	mov	w21, w1
  4149c8:	mov	x19, x0
  4149cc:	bl	402930 <__errno_location@plt>
  4149d0:	str	wzr, [x0]
  4149d4:	ldrb	w8, [x19, #73]
  4149d8:	tbnz	w8, #5, 4149f8 <wcrtomb@plt+0x12038>
  4149dc:	ldrh	w8, [x22, #108]
  4149e0:	cmp	w8, #0x1
  4149e4:	b.eq	414a0c <wcrtomb@plt+0x1204c>  // b.none
  4149e8:	cmp	w8, #0x9
  4149ec:	b.ne	4149f8 <wcrtomb@plt+0x12038>  // b.any
  4149f0:	ldr	x0, [x22, #16]
  4149f4:	b	4149fc <wcrtomb@plt+0x1203c>
  4149f8:	mov	x0, xzr
  4149fc:	ldp	x20, x19, [sp, #32]
  414a00:	ldp	x22, x21, [sp, #16]
  414a04:	ldp	x29, x30, [sp], #48
  414a08:	ret
  414a0c:	mov	x20, x0
  414a10:	ldr	x0, [x19, #8]
  414a14:	cbz	x0, 414a1c <wcrtomb@plt+0x1205c>
  414a18:	bl	413588 <wcrtomb@plt+0x10bc8>
  414a1c:	cmp	w21, #0x1, lsl #12
  414a20:	b.ne	414a38 <wcrtomb@plt+0x12078>  // b.any
  414a24:	ldr	w8, [x19, #72]
  414a28:	mov	w21, #0x2                   	// #2
  414a2c:	orr	w8, w8, #0x1000
  414a30:	str	w8, [x19, #72]
  414a34:	b	414a3c <wcrtomb@plt+0x1207c>
  414a38:	mov	w21, #0x1                   	// #1
  414a3c:	ldr	x8, [x22, #88]
  414a40:	cbnz	x8, 414ab0 <wcrtomb@plt+0x120f0>
  414a44:	ldr	x8, [x22, #48]
  414a48:	ldrb	w8, [x8]
  414a4c:	cmp	w8, #0x2f
  414a50:	b.eq	414ab0 <wcrtomb@plt+0x120f0>  // b.none
  414a54:	ldrb	w8, [x19, #72]
  414a58:	tbnz	w8, #2, 414ab0 <wcrtomb@plt+0x120f0>
  414a5c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  414a60:	add	x1, x1, #0x9ac
  414a64:	mov	x0, x19
  414a68:	bl	41355c <wcrtomb@plt+0x10b9c>
  414a6c:	tbnz	w0, #31, 414ac4 <wcrtomb@plt+0x12104>
  414a70:	mov	w22, w0
  414a74:	mov	x0, x19
  414a78:	mov	w1, w21
  414a7c:	bl	413f58 <wcrtomb@plt+0x11598>
  414a80:	ldrb	w8, [x19, #73]
  414a84:	str	x0, [x19, #8]
  414a88:	tbnz	w8, #1, 414ad0 <wcrtomb@plt+0x12110>
  414a8c:	mov	w0, w22
  414a90:	bl	4023c0 <fchdir@plt>
  414a94:	cbz	w0, 414ae4 <wcrtomb@plt+0x12124>
  414a98:	ldr	w19, [x20]
  414a9c:	mov	w0, w22
  414aa0:	bl	402650 <close@plt>
  414aa4:	mov	x0, xzr
  414aa8:	str	w19, [x20]
  414aac:	b	4149fc <wcrtomb@plt+0x1203c>
  414ab0:	mov	x0, x19
  414ab4:	mov	w1, w21
  414ab8:	bl	413f58 <wcrtomb@plt+0x11598>
  414abc:	str	x0, [x19, #8]
  414ac0:	b	4149fc <wcrtomb@plt+0x1203c>
  414ac4:	mov	x0, xzr
  414ac8:	str	xzr, [x19, #8]
  414acc:	b	4149fc <wcrtomb@plt+0x1203c>
  414ad0:	mov	w2, #0x1                   	// #1
  414ad4:	mov	x0, x19
  414ad8:	mov	w1, w22
  414adc:	bl	4148f4 <wcrtomb@plt+0x11f34>
  414ae0:	b	414aec <wcrtomb@plt+0x1212c>
  414ae4:	mov	w0, w22
  414ae8:	bl	402650 <close@plt>
  414aec:	ldr	x0, [x19, #8]
  414af0:	b	4149fc <wcrtomb@plt+0x1203c>
  414af4:	ldr	x8, [x0, #8]
  414af8:	udiv	x9, x8, x1
  414afc:	msub	x0, x9, x1, x8
  414b00:	ret
  414b04:	ldr	x8, [x0, #8]
  414b08:	ldr	x9, [x1, #8]
  414b0c:	cmp	x8, x9
  414b10:	b.ne	414b28 <wcrtomb@plt+0x12168>  // b.any
  414b14:	ldr	x8, [x0]
  414b18:	ldr	x9, [x1]
  414b1c:	cmp	x8, x9
  414b20:	cset	w0, eq  // eq = none
  414b24:	ret
  414b28:	mov	w0, wzr
  414b2c:	ret
  414b30:	sub	sp, sp, #0xb0
  414b34:	stp	x29, x30, [sp, #128]
  414b38:	stp	x22, x21, [sp, #144]
  414b3c:	stp	x20, x19, [sp, #160]
  414b40:	ldr	x22, [x0, #80]
  414b44:	add	x29, sp, #0x80
  414b48:	ldrb	w8, [x22, #73]
  414b4c:	tbnz	w8, #1, 414b58 <wcrtomb@plt+0x12198>
  414b50:	mov	x0, xzr
  414b54:	b	414bb4 <wcrtomb@plt+0x121f4>
  414b58:	ldr	x20, [x22, #80]
  414b5c:	mov	x19, x0
  414b60:	mov	w21, w1
  414b64:	cbnz	x20, 414b98 <wcrtomb@plt+0x121d8>
  414b68:	adrp	x2, 414000 <wcrtomb@plt+0x11640>
  414b6c:	adrp	x3, 414000 <wcrtomb@plt+0x11640>
  414b70:	adrp	x4, 402000 <mbrtowc@plt-0x310>
  414b74:	add	x2, x2, #0xc38
  414b78:	add	x3, x3, #0xc48
  414b7c:	add	x4, x4, #0x770
  414b80:	mov	w0, #0xd                   	// #13
  414b84:	mov	x1, xzr
  414b88:	bl	40fc00 <wcrtomb@plt+0xd240>
  414b8c:	mov	x20, x0
  414b90:	str	x0, [x22, #80]
  414b94:	cbz	x0, 414bd4 <wcrtomb@plt+0x12214>
  414b98:	ldr	x8, [x19, #120]
  414b9c:	add	x1, sp, #0x8
  414ba0:	mov	x0, x20
  414ba4:	str	x8, [sp, #8]
  414ba8:	bl	40f930 <wcrtomb@plt+0xcf70>
  414bac:	cbz	x0, 414bc8 <wcrtomb@plt+0x12208>
  414bb0:	ldr	x0, [x0, #8]
  414bb4:	ldp	x20, x19, [sp, #160]
  414bb8:	ldp	x22, x21, [sp, #144]
  414bbc:	ldp	x29, x30, [sp, #128]
  414bc0:	add	sp, sp, #0xb0
  414bc4:	ret
  414bc8:	mov	w22, #0x1                   	// #1
  414bcc:	tbz	w21, #31, 414bdc <wcrtomb@plt+0x1221c>
  414bd0:	b	414b50 <wcrtomb@plt+0x12190>
  414bd4:	mov	w22, wzr
  414bd8:	tbnz	w21, #31, 414b50 <wcrtomb@plt+0x12190>
  414bdc:	add	x1, sp, #0x8
  414be0:	mov	w0, w21
  414be4:	bl	4025a0 <fstatfs@plt>
  414be8:	cbnz	w0, 414b50 <wcrtomb@plt+0x12190>
  414bec:	cbz	w22, 414c30 <wcrtomb@plt+0x12270>
  414bf0:	mov	w0, #0x10                  	// #16
  414bf4:	bl	4024e0 <malloc@plt>
  414bf8:	cbz	x0, 414c30 <wcrtomb@plt+0x12270>
  414bfc:	ldr	x8, [x19, #120]
  414c00:	ldr	x9, [sp, #8]
  414c04:	mov	x21, x0
  414c08:	mov	x1, x21
  414c0c:	stp	x8, x9, [x0]
  414c10:	mov	x0, x20
  414c14:	bl	41049c <wcrtomb@plt+0xdadc>
  414c18:	cbz	x0, 414c28 <wcrtomb@plt+0x12268>
  414c1c:	cmp	x0, x21
  414c20:	b.eq	414c30 <wcrtomb@plt+0x12270>  // b.none
  414c24:	bl	4026c0 <abort@plt>
  414c28:	mov	x0, x21
  414c2c:	bl	402770 <free@plt>
  414c30:	ldr	x0, [sp, #8]
  414c34:	b	414bb4 <wcrtomb@plt+0x121f4>
  414c38:	ldr	x8, [x0]
  414c3c:	udiv	x9, x8, x1
  414c40:	msub	x0, x9, x1, x8
  414c44:	ret
  414c48:	ldr	x8, [x0]
  414c4c:	ldr	x9, [x1]
  414c50:	cmp	x8, x9
  414c54:	cset	w0, eq  // eq = none
  414c58:	ret
  414c5c:	ldr	x8, [x0]
  414c60:	ldr	x9, [x1]
  414c64:	ldr	x8, [x8, #128]
  414c68:	ldr	x9, [x9, #128]
  414c6c:	cmp	x9, x8
  414c70:	cset	w10, cc  // cc = lo, ul, last
  414c74:	cmp	x8, x9
  414c78:	csinv	w0, w10, wzr, cs  // cs = hs, nlast
  414c7c:	ret
  414c80:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  414c84:	mov	x8, x1
  414c88:	add	x9, x9, #0x8c8
  414c8c:	cmp	x2, #0x0
  414c90:	csel	x3, x9, x2, eq  // eq = none
  414c94:	mov	x1, x0
  414c98:	mov	x0, xzr
  414c9c:	mov	x2, x8
  414ca0:	b	414ca4 <wcrtomb@plt+0x122e4>
  414ca4:	sub	sp, sp, #0x40
  414ca8:	stp	x29, x30, [sp, #16]
  414cac:	add	x29, sp, #0x10
  414cb0:	cmp	x0, #0x0
  414cb4:	sub	x8, x29, #0x4
  414cb8:	stp	x20, x19, [sp, #48]
  414cbc:	csel	x20, x8, x0, eq  // eq = none
  414cc0:	mov	x0, x20
  414cc4:	stp	x22, x21, [sp, #32]
  414cc8:	mov	x22, x2
  414ccc:	mov	x19, x1
  414cd0:	bl	402310 <mbrtowc@plt>
  414cd4:	mov	x21, x0
  414cd8:	cbz	x22, 414cfc <wcrtomb@plt+0x1233c>
  414cdc:	cmn	x21, #0x2
  414ce0:	b.cc	414cfc <wcrtomb@plt+0x1233c>  // b.lo, b.ul, b.last
  414ce4:	mov	w0, wzr
  414ce8:	bl	4208f0 <_obstack_memory_used@@Base+0xb8bc>
  414cec:	tbnz	w0, #0, 414cfc <wcrtomb@plt+0x1233c>
  414cf0:	ldrb	w8, [x19]
  414cf4:	mov	w21, #0x1                   	// #1
  414cf8:	str	w8, [x20]
  414cfc:	mov	x0, x21
  414d00:	ldp	x20, x19, [sp, #48]
  414d04:	ldp	x22, x21, [sp, #32]
  414d08:	ldp	x29, x30, [sp, #16]
  414d0c:	add	sp, sp, #0x40
  414d10:	ret

0000000000414d14 <_obstack_begin@@Base>:
  414d14:	stp	x29, x30, [sp, #-16]!
  414d18:	ldrb	w8, [x0, #80]
  414d1c:	mov	x29, sp
  414d20:	stp	x3, x4, [x0, #56]
  414d24:	and	w8, w8, #0xfe
  414d28:	strb	w8, [x0, #80]
  414d2c:	bl	414d3c <_obstack_begin@@Base+0x28>
  414d30:	mov	w0, #0x1                   	// #1
  414d34:	ldp	x29, x30, [sp], #16
  414d38:	ret
  414d3c:	stp	x29, x30, [sp, #-48]!
  414d40:	stp	x20, x19, [sp, #32]
  414d44:	ldrb	w10, [x0, #80]
  414d48:	cmp	x2, #0x0
  414d4c:	mov	w8, #0x10                  	// #16
  414d50:	mov	w9, #0xfe0                 	// #4064
  414d54:	csel	x20, x8, x2, eq  // eq = none
  414d58:	cmp	x1, #0x0
  414d5c:	str	x21, [sp, #16]
  414d60:	mov	x19, x0
  414d64:	csel	x1, x9, x1, eq  // eq = none
  414d68:	sub	x21, x20, #0x1
  414d6c:	mov	x29, sp
  414d70:	str	x1, [x0]
  414d74:	str	x21, [x0, #48]
  414d78:	tbnz	w10, #0, 414d8c <_obstack_begin@@Base+0x78>
  414d7c:	ldr	x8, [x19, #56]
  414d80:	mov	x0, x1
  414d84:	blr	x8
  414d88:	b	414d98 <_obstack_begin@@Base+0x84>
  414d8c:	ldr	x8, [x19, #56]
  414d90:	ldr	x0, [x19, #72]
  414d94:	blr	x8
  414d98:	str	x0, [x19, #8]
  414d9c:	cbz	x0, 414de4 <_obstack_begin@@Base+0xd0>
  414da0:	ldr	x10, [x19]
  414da4:	add	x8, x0, x21
  414da8:	neg	x9, x20
  414dac:	add	x8, x8, #0x10
  414db0:	and	x8, x8, x9
  414db4:	stp	x8, x8, [x19, #16]
  414db8:	add	x8, x0, x10
  414dbc:	str	x8, [x0]
  414dc0:	str	x8, [x19, #32]
  414dc4:	str	xzr, [x0, #8]
  414dc8:	ldrb	w8, [x19, #80]
  414dcc:	ldr	x21, [sp, #16]
  414dd0:	and	w8, w8, #0xfffffff9
  414dd4:	strb	w8, [x19, #80]
  414dd8:	ldp	x20, x19, [sp, #32]
  414ddc:	ldp	x29, x30, [sp], #48
  414de0:	ret
  414de4:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  414de8:	ldr	x8, [x8, #1088]
  414dec:	blr	x8

0000000000414df0 <_obstack_begin_1@@Base>:
  414df0:	stp	x29, x30, [sp, #-16]!
  414df4:	ldrb	w8, [x0, #80]
  414df8:	mov	x29, sp
  414dfc:	stp	x3, x4, [x0, #56]
  414e00:	str	x5, [x0, #72]
  414e04:	orr	w8, w8, #0x1
  414e08:	strb	w8, [x0, #80]
  414e0c:	bl	414d3c <_obstack_begin@@Base+0x28>
  414e10:	mov	w0, #0x1                   	// #1
  414e14:	ldp	x29, x30, [sp], #16
  414e18:	ret

0000000000414e1c <_obstack_newchunk@@Base>:
  414e1c:	stp	x29, x30, [sp, #-80]!
  414e20:	str	x25, [sp, #16]
  414e24:	stp	x24, x23, [sp, #32]
  414e28:	stp	x22, x21, [sp, #48]
  414e2c:	stp	x20, x19, [sp, #64]
  414e30:	ldp	x9, x8, [x0, #16]
  414e34:	ldr	x10, [x0, #48]
  414e38:	ldr	x11, [x0]
  414e3c:	mov	x29, sp
  414e40:	sub	x20, x8, x9
  414e44:	adds	x8, x20, x1
  414e48:	lsr	x9, x20, #3
  414e4c:	cset	w12, cs  // cs = hs, nlast
  414e50:	adds	x10, x8, x10
  414e54:	add	x9, x9, #0x64
  414e58:	cset	w8, cs  // cs = hs, nlast
  414e5c:	adds	x9, x9, x10
  414e60:	csel	x9, x10, x9, cs  // cs = hs, nlast
  414e64:	cmp	x9, x11
  414e68:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  414e6c:	tbnz	w12, #0, 414f5c <_obstack_newchunk@@Base+0x140>
  414e70:	tbnz	w8, #0, 414f5c <_obstack_newchunk@@Base+0x140>
  414e74:	ldrb	w8, [x0, #80]
  414e78:	ldr	x21, [x0, #8]
  414e7c:	mov	x19, x0
  414e80:	tbnz	w8, #0, 414e94 <_obstack_newchunk@@Base+0x78>
  414e84:	ldr	x8, [x19, #56]
  414e88:	mov	x0, x23
  414e8c:	blr	x8
  414e90:	b	414ea4 <_obstack_newchunk@@Base+0x88>
  414e94:	ldr	x8, [x19, #56]
  414e98:	ldr	x0, [x19, #72]
  414e9c:	mov	x1, x23
  414ea0:	blr	x8
  414ea4:	mov	x22, x0
  414ea8:	cbz	x0, 414f5c <_obstack_newchunk@@Base+0x140>
  414eac:	add	x8, x22, x23
  414eb0:	str	x22, [x19, #8]
  414eb4:	str	x21, [x22, #8]
  414eb8:	str	x8, [x19, #32]
  414ebc:	str	x8, [x22]
  414ec0:	ldr	x25, [x19, #48]
  414ec4:	ldr	x24, [x19, #16]
  414ec8:	mov	x2, x20
  414ecc:	add	x8, x22, x25
  414ed0:	add	x8, x8, #0x10
  414ed4:	bic	x23, x8, x25
  414ed8:	mov	x0, x23
  414edc:	mov	x1, x24
  414ee0:	bl	402320 <memcpy@plt>
  414ee4:	ldrb	w8, [x19, #80]
  414ee8:	tbnz	w8, #1, 414f30 <_obstack_newchunk@@Base+0x114>
  414eec:	add	x9, x21, x25
  414ef0:	mvn	x8, x25
  414ef4:	add	x9, x9, #0x10
  414ef8:	and	x8, x9, x8
  414efc:	cmp	x24, x8
  414f00:	b.ne	414f30 <_obstack_newchunk@@Base+0x114>  // b.any
  414f04:	ldr	x8, [x21, #8]
  414f08:	str	x8, [x22, #8]
  414f0c:	ldrb	w8, [x19, #80]
  414f10:	tbnz	w8, #0, 414f24 <_obstack_newchunk@@Base+0x108>
  414f14:	ldr	x8, [x19, #64]
  414f18:	mov	x0, x21
  414f1c:	blr	x8
  414f20:	b	414f30 <_obstack_newchunk@@Base+0x114>
  414f24:	ldp	x8, x0, [x19, #64]
  414f28:	mov	x1, x21
  414f2c:	blr	x8
  414f30:	ldrb	w8, [x19, #80]
  414f34:	add	x9, x23, x20
  414f38:	stp	x23, x9, [x19, #16]
  414f3c:	ldr	x25, [sp, #16]
  414f40:	and	w8, w8, #0xfffffffd
  414f44:	strb	w8, [x19, #80]
  414f48:	ldp	x20, x19, [sp, #64]
  414f4c:	ldp	x22, x21, [sp, #48]
  414f50:	ldp	x24, x23, [sp, #32]
  414f54:	ldp	x29, x30, [sp], #80
  414f58:	ret
  414f5c:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  414f60:	ldr	x8, [x8, #1088]
  414f64:	blr	x8

0000000000414f68 <_obstack_allocated_p@@Base>:
  414f68:	ldr	x8, [x0, #8]
  414f6c:	cbz	x8, 414f8c <_obstack_allocated_p@@Base+0x24>
  414f70:	cmp	x8, x1
  414f74:	b.cs	414f84 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  414f78:	ldr	x9, [x8]
  414f7c:	cmp	x9, x1
  414f80:	b.cs	414f94 <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  414f84:	ldr	x8, [x8, #8]
  414f88:	cbnz	x8, 414f70 <_obstack_allocated_p@@Base+0x8>
  414f8c:	mov	w0, wzr
  414f90:	ret
  414f94:	mov	w0, #0x1                   	// #1
  414f98:	ret

0000000000414f9c <_obstack_free@@Base>:
  414f9c:	stp	x29, x30, [sp, #-48]!
  414fa0:	stp	x20, x19, [sp, #32]
  414fa4:	ldr	x8, [x0, #8]
  414fa8:	mov	x20, x1
  414fac:	str	x21, [sp, #16]
  414fb0:	mov	x29, sp
  414fb4:	cbz	x8, 41500c <_obstack_free@@Base+0x70>
  414fb8:	mov	x19, x0
  414fbc:	cmp	x8, x20
  414fc0:	b.cs	414fd0 <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  414fc4:	ldr	x9, [x8]
  414fc8:	cmp	x9, x20
  414fcc:	b.cs	415014 <_obstack_free@@Base+0x78>  // b.hs, b.nlast
  414fd0:	ldrb	w9, [x19, #80]
  414fd4:	ldr	x21, [x8, #8]
  414fd8:	tbnz	w9, #0, 414fec <_obstack_free@@Base+0x50>
  414fdc:	ldr	x9, [x19, #64]
  414fe0:	mov	x0, x8
  414fe4:	blr	x9
  414fe8:	b	414ff8 <_obstack_free@@Base+0x5c>
  414fec:	ldp	x9, x0, [x19, #64]
  414ff0:	mov	x1, x8
  414ff4:	blr	x9
  414ff8:	ldrb	w8, [x19, #80]
  414ffc:	orr	w8, w8, #0x2
  415000:	strb	w8, [x19, #80]
  415004:	mov	x8, x21
  415008:	cbnz	x21, 414fbc <_obstack_free@@Base+0x20>
  41500c:	cbz	x20, 415024 <_obstack_free@@Base+0x88>
  415010:	bl	4026c0 <abort@plt>
  415014:	stp	x20, x20, [x19, #16]
  415018:	ldr	x9, [x8]
  41501c:	str	x8, [x19, #8]
  415020:	str	x9, [x19, #32]
  415024:	ldp	x20, x19, [sp, #32]
  415028:	ldr	x21, [sp, #16]
  41502c:	ldp	x29, x30, [sp], #48
  415030:	ret

0000000000415034 <_obstack_memory_used@@Base>:
  415034:	ldr	x8, [x0, #8]
  415038:	cbz	x8, 415054 <_obstack_memory_used@@Base+0x20>
  41503c:	mov	x0, xzr
  415040:	sub	x10, x0, x8
  415044:	ldp	x9, x8, [x8]
  415048:	add	x0, x10, x9
  41504c:	cbnz	x8, 415040 <_obstack_memory_used@@Base+0xc>
  415050:	ret
  415054:	mov	x0, xzr
  415058:	ret
  41505c:	stp	x29, x30, [sp, #-32]!
  415060:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  415064:	str	x19, [sp, #16]
  415068:	ldr	x19, [x8, #1104]
  41506c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  415070:	add	x1, x1, #0x8f5
  415074:	mov	w2, #0x5                   	// #5
  415078:	mov	x0, xzr
  41507c:	mov	x29, sp
  415080:	bl	402890 <dcgettext@plt>
  415084:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  415088:	mov	x2, x0
  41508c:	add	x1, x1, #0x5cf
  415090:	mov	x0, x19
  415094:	bl	402980 <fprintf@plt>
  415098:	adrp	x8, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  41509c:	ldr	w0, [x8, #992]
  4150a0:	bl	4023a0 <exit@plt>
  4150a4:	stp	x29, x30, [sp, #-16]!
  4150a8:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  4150ac:	ldr	x3, [x9, #3552]
  4150b0:	ldrb	w9, [x2, #56]
  4150b4:	mov	x8, x1
  4150b8:	mov	x1, x0
  4150bc:	ubfx	x10, x3, #21, #11
  4150c0:	and	w10, w10, #0x10
  4150c4:	and	w9, w9, #0xffffffef
  4150c8:	orr	w9, w9, w10
  4150cc:	orr	w9, w9, #0x80
  4150d0:	strb	w9, [x2, #56]
  4150d4:	mov	x0, x2
  4150d8:	mov	x2, x8
  4150dc:	mov	x29, sp
  4150e0:	bl	41511c <_obstack_memory_used@@Base+0xe8>
  4150e4:	cbz	w0, 415110 <_obstack_memory_used@@Base+0xdc>
  4150e8:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4150ec:	add	x8, x8, #0xc28
  4150f0:	ldr	x8, [x8, w0, sxtw #3]
  4150f4:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4150f8:	add	x9, x9, #0xaa7
  4150fc:	mov	w2, #0x5                   	// #5
  415100:	add	x1, x9, x8
  415104:	mov	x0, xzr
  415108:	ldp	x29, x30, [sp], #16
  41510c:	b	402890 <dcgettext@plt>
  415110:	mov	x0, xzr
  415114:	ldp	x29, x30, [sp], #16
  415118:	ret
  41511c:	sub	sp, sp, #0x140
  415120:	stp	x29, x30, [sp, #224]
  415124:	add	x29, sp, #0xe0
  415128:	stp	x28, x27, [sp, #240]
  41512c:	stp	x26, x25, [sp, #256]
  415130:	stp	x24, x23, [sp, #272]
  415134:	stp	x22, x21, [sp, #288]
  415138:	stp	x20, x19, [sp, #304]
  41513c:	str	x1, [sp, #8]
  415140:	stur	wzr, [x29, #-52]
  415144:	ldrb	w8, [x0, #56]
  415148:	ldp	x20, x9, [x0]
  41514c:	mov	w10, #0x90                  	// #144
  415150:	mov	x21, x3
  415154:	mov	x22, x2
  415158:	mov	x19, x0
  41515c:	and	w8, w8, w10
  415160:	cmp	x9, #0xe7
  415164:	stp	xzr, x3, [x0, #16]
  415168:	str	xzr, [x0, #48]
  41516c:	strb	w8, [x0, #56]
  415170:	b.ls	415b80 <_obstack_memory_used@@Base+0xb4c>  // b.plast
  415174:	mov	w8, #0xe8                  	// #232
  415178:	mov	w2, #0xe8                  	// #232
  41517c:	mov	x0, x20
  415180:	mov	w1, wzr
  415184:	str	x8, [x19, #16]
  415188:	bl	4025b0 <memset@plt>
  41518c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  415190:	movk	x9, #0x5554
  415194:	movk	x9, #0x555, lsl #48
  415198:	mov	w8, #0xf                   	// #15
  41519c:	cmp	x22, x9
  4151a0:	str	w8, [x20, #128]
  4151a4:	b.hi	4153a4 <_obstack_memory_used@@Base+0x370>  // b.pmore
  4151a8:	add	x24, x22, #0x1
  4151ac:	lsl	x0, x24, #4
  4151b0:	str	x24, [x20, #8]
  4151b4:	bl	4024e0 <malloc@plt>
  4151b8:	mov	w8, #0x1                   	// #1
  4151bc:	str	x0, [x20]
  4151c0:	mov	x25, x8
  4151c4:	cmp	x8, x22
  4151c8:	lsl	x8, x8, #1
  4151cc:	b.ls	4151c0 <_obstack_memory_used@@Base+0x18c>  // b.plast
  4151d0:	mov	w0, #0x18                  	// #24
  4151d4:	mov	x1, x25
  4151d8:	bl	4025d0 <calloc@plt>
  4151dc:	sub	x8, x25, #0x1
  4151e0:	str	x0, [x20, #64]
  4151e4:	str	x8, [x20, #136]
  4151e8:	bl	402780 <__ctype_get_mb_cur_max@plt>
  4151ec:	str	w0, [x20, #180]
  4151f0:	mov	w0, #0xe                   	// #14
  4151f4:	bl	4024a0 <nl_langinfo@plt>
  4151f8:	ldrb	w8, [x0]
  4151fc:	orr	w8, w8, #0x20
  415200:	cmp	w8, #0x75
  415204:	b.ne	415250 <_obstack_memory_used@@Base+0x21c>  // b.any
  415208:	ldrb	w8, [x0, #1]
  41520c:	orr	w8, w8, #0x20
  415210:	cmp	w8, #0x74
  415214:	b.ne	415250 <_obstack_memory_used@@Base+0x21c>  // b.any
  415218:	ldrb	w8, [x0, #2]
  41521c:	orr	w8, w8, #0x20
  415220:	cmp	w8, #0x66
  415224:	b.ne	415250 <_obstack_memory_used@@Base+0x21c>  // b.any
  415228:	ldrb	w8, [x0, #3]!
  41522c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  415230:	add	x1, x1, #0xd00
  415234:	cmp	w8, #0x2d
  415238:	cinc	x0, x0, eq  // eq = none
  41523c:	bl	402750 <strcmp@plt>
  415240:	cbnz	w0, 415250 <_obstack_memory_used@@Base+0x21c>
  415244:	ldrb	w8, [x20, #176]
  415248:	orr	w8, w8, #0x4
  41524c:	strb	w8, [x20, #176]
  415250:	ldrb	w8, [x20, #176]
  415254:	ldr	w9, [x20, #180]
  415258:	and	w10, w8, #0xfffffff7
  41525c:	cmp	w9, #0x2
  415260:	strb	w10, [x20, #176]
  415264:	b.lt	415304 <_obstack_memory_used@@Base+0x2d0>  // b.tstop
  415268:	tbnz	w8, #2, 4152f8 <_obstack_memory_used@@Base+0x2c4>
  41526c:	mov	w0, #0x20                  	// #32
  415270:	mov	w1, #0x1                   	// #1
  415274:	bl	4025d0 <calloc@plt>
  415278:	str	x0, [x20, #120]
  41527c:	cbz	x0, 4153a4 <_obstack_memory_used@@Base+0x370>
  415280:	mov	x26, xzr
  415284:	mov	w8, wzr
  415288:	mov	w27, #0x1                   	// #1
  41528c:	mov	x28, xzr
  415290:	mov	w23, w8
  415294:	add	x25, x23, x28
  415298:	mov	w0, w25
  41529c:	bl	4026b0 <btowc@plt>
  4152a0:	cmn	w0, #0x1
  4152a4:	b.eq	4152bc <_obstack_memory_used@@Base+0x288>  // b.none
  4152a8:	ldr	x8, [x20, #120]
  4152ac:	lsl	x10, x27, x28
  4152b0:	ldr	x9, [x8, x26, lsl #3]
  4152b4:	orr	x9, x9, x10
  4152b8:	str	x9, [x8, x26, lsl #3]
  4152bc:	cmp	w25, #0x7f
  4152c0:	b.hi	4152d8 <_obstack_memory_used@@Base+0x2a4>  // b.pmore
  4152c4:	cmp	w25, w0
  4152c8:	b.eq	4152d8 <_obstack_memory_used@@Base+0x2a4>  // b.none
  4152cc:	ldrb	w8, [x20, #176]
  4152d0:	orr	w8, w8, #0x8
  4152d4:	strb	w8, [x20, #176]
  4152d8:	add	x28, x28, #0x1
  4152dc:	cmp	x28, #0x40
  4152e0:	b.ne	415294 <_obstack_memory_used@@Base+0x260>  // b.any
  4152e4:	add	x26, x26, #0x1
  4152e8:	cmp	x26, #0x4
  4152ec:	add	w8, w23, w28
  4152f0:	b.ne	41528c <_obstack_memory_used@@Base+0x258>  // b.any
  4152f4:	b	415304 <_obstack_memory_used@@Base+0x2d0>
  4152f8:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4152fc:	add	x8, x8, #0xcb0
  415300:	str	x8, [x20, #120]
  415304:	ldr	x8, [x20]
  415308:	cbz	x8, 4153a4 <_obstack_memory_used@@Base+0x370>
  41530c:	ldr	x8, [x20, #64]
  415310:	cbz	x8, 4153a4 <_obstack_memory_used@@Base+0x370>
  415314:	stur	wzr, [x29, #-52]
  415318:	ldr	x26, [x19, #40]
  41531c:	add	x8, sp, #0x10
  415320:	and	x25, x21, #0x400000
  415324:	add	x0, x8, #0x8
  415328:	mov	w2, #0x90                  	// #144
  41532c:	mov	w1, wzr
  415330:	orr	x23, x25, x26
  415334:	bl	4025b0 <memset@plt>
  415338:	ldr	x9, [sp, #8]
  41533c:	cmp	x23, #0x0
  415340:	ubfx	x8, x21, #22, #1
  415344:	stp	x22, x22, [sp, #96]
  415348:	str	x9, [sp, #16]
  41534c:	cset	w9, ne  // ne = any
  415350:	str	x26, [sp, #136]
  415354:	strb	w8, [sp, #152]
  415358:	strb	w9, [sp, #155]
  41535c:	ldr	w8, [x20, #180]
  415360:	cmp	x22, #0x1
  415364:	str	w8, [sp, #160]
  415368:	ldrb	w10, [x20, #176]
  41536c:	stp	x22, x22, [sp, #112]
  415370:	ubfx	w11, w10, #2, #1
  415374:	ubfx	w10, w10, #3, #1
  415378:	strb	w11, [sp, #153]
  41537c:	strb	w10, [sp, #154]
  415380:	b.lt	4153bc <_obstack_memory_used@@Base+0x388>  // b.tstop
  415384:	add	x0, sp, #0x10
  415388:	mov	x1, x24
  41538c:	bl	4182b0 <_obstack_memory_used@@Base+0x327c>
  415390:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  415394:	ldrb	w9, [sp, #155]
  415398:	ldr	x10, [sp, #24]
  41539c:	ldr	w8, [x20, #180]
  4153a0:	b	4153c0 <_obstack_memory_used@@Base+0x38c>
  4153a4:	mov	w21, #0xc                   	// #12
  4153a8:	mov	x0, x20
  4153ac:	stur	w21, [x29, #-52]
  4153b0:	bl	416194 <_obstack_memory_used@@Base+0x1160>
  4153b4:	stp	xzr, xzr, [x19]
  4153b8:	b	415ac4 <_obstack_memory_used@@Base+0xa90>
  4153bc:	mov	x10, xzr
  4153c0:	cmp	w9, #0x0
  4153c4:	ldr	x9, [sp, #8]
  4153c8:	csel	x10, x9, x10, eq  // eq = none
  4153cc:	cmp	w8, #0x2
  4153d0:	str	x10, [sp, #24]
  4153d4:	cbz	x25, 415420 <_obstack_memory_used@@Base+0x3ec>
  4153d8:	b.lt	415430 <_obstack_memory_used@@Base+0x3fc>  // b.tstop
  4153dc:	add	x0, sp, #0x10
  4153e0:	bl	418340 <_obstack_memory_used@@Base+0x330c>
  4153e4:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  4153e8:	ldr	x8, [sp, #72]
  4153ec:	cmp	x8, x22
  4153f0:	b.ge	4154b4 <_obstack_memory_used@@Base+0x480>  // b.tcont
  4153f4:	ldr	x9, [sp, #64]
  4153f8:	ldrsw	x10, [x20, #180]
  4153fc:	ldr	x8, [sp, #80]
  415400:	add	x9, x9, x10
  415404:	cmp	x8, x9
  415408:	b.gt	4154b4 <_obstack_memory_used@@Base+0x480>
  41540c:	lsl	x1, x8, #1
  415410:	add	x0, sp, #0x10
  415414:	bl	4182b0 <_obstack_memory_used@@Base+0x327c>
  415418:	cbz	w0, 4153dc <_obstack_memory_used@@Base+0x3a8>
  41541c:	b	415aec <_obstack_memory_used@@Base+0xab8>
  415420:	b.lt	41543c <_obstack_memory_used@@Base+0x408>  // b.tstop
  415424:	add	x0, sp, #0x10
  415428:	bl	4188b8 <_obstack_memory_used@@Base+0x3884>
  41542c:	b	4154b4 <_obstack_memory_used@@Base+0x480>
  415430:	add	x0, sp, #0x10
  415434:	bl	418840 <_obstack_memory_used@@Base+0x380c>
  415438:	b	4154b4 <_obstack_memory_used@@Base+0x480>
  41543c:	ldr	x9, [sp, #80]
  415440:	cbz	x26, 4154b0 <_obstack_memory_used@@Base+0x47c>
  415444:	ldr	x11, [sp, #104]
  415448:	ldr	x8, [sp, #64]
  41544c:	cmp	x9, x11
  415450:	csel	x9, x11, x9, gt
  415454:	cmp	x8, x9
  415458:	b.ge	4154a8 <_obstack_memory_used@@Base+0x474>  // b.tcont
  41545c:	ldr	x11, [sp, #56]
  415460:	ldr	x12, [sp, #16]
  415464:	ldr	x13, [sp, #136]
  415468:	add	x11, x11, x8
  41546c:	ldrb	w11, [x12, x11]
  415470:	ldrb	w11, [x13, x11]
  415474:	strb	w11, [x10, x8]
  415478:	add	x8, x8, #0x1
  41547c:	cmp	x8, x9
  415480:	b.ge	4154a8 <_obstack_memory_used@@Base+0x474>  // b.tcont
  415484:	ldr	x10, [sp, #16]
  415488:	ldr	x11, [sp, #56]
  41548c:	ldr	x12, [sp, #136]
  415490:	add	x10, x10, x11
  415494:	ldrb	w10, [x10, x8]
  415498:	ldr	x11, [sp, #24]
  41549c:	ldrb	w10, [x12, x10]
  4154a0:	strb	w10, [x11, x8]
  4154a4:	b	415478 <_obstack_memory_used@@Base+0x444>
  4154a8:	stp	x8, x8, [sp, #64]
  4154ac:	b	4154b4 <_obstack_memory_used@@Base+0x480>
  4154b0:	stp	x9, x9, [sp, #64]
  4154b4:	stur	wzr, [x29, #-52]
  4154b8:	ldr	x22, [x19]
  4154bc:	orr	x2, x21, #0x800000
  4154c0:	sub	x0, x29, #0x30
  4154c4:	add	x1, sp, #0x10
  4154c8:	str	xzr, [x19, #48]
  4154cc:	str	x21, [x22, #216]
  4154d0:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  4154d4:	ldr	x8, [sp, #88]
  4154d8:	sub	x2, x29, #0x30
  4154dc:	sub	x5, x29, #0x34
  4154e0:	mov	x1, x19
  4154e4:	add	x8, x8, w0, sxtw
  4154e8:	add	x0, sp, #0x10
  4154ec:	mov	x3, x21
  4154f0:	mov	x4, xzr
  4154f4:	str	x8, [sp, #88]
  4154f8:	bl	418ad4 <_obstack_memory_used@@Base+0x3aa0>
  4154fc:	mov	x21, x0
  415500:	cbnz	x0, 41550c <_obstack_memory_used@@Base+0x4d8>
  415504:	ldur	w8, [x29, #-52]
  415508:	cbnz	w8, 415bb0 <_obstack_memory_used@@Base+0xb7c>
  41550c:	mov	w8, #0x2                   	// #2
  415510:	sub	x3, x29, #0x20
  415514:	mov	x0, x22
  415518:	mov	x1, xzr
  41551c:	mov	x2, xzr
  415520:	stur	xzr, [x29, #-32]
  415524:	stur	w8, [x29, #-24]
  415528:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41552c:	mov	x23, x0
  415530:	cbz	x21, 415554 <_obstack_memory_used@@Base+0x520>
  415534:	mov	w8, #0x10                  	// #16
  415538:	sub	x3, x29, #0x20
  41553c:	mov	x0, x22
  415540:	mov	x1, x21
  415544:	mov	x2, x23
  415548:	stur	xzr, [x29, #-32]
  41554c:	stur	w8, [x29, #-24]
  415550:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  415554:	cbz	x23, 415ba8 <_obstack_memory_used@@Base+0xb74>
  415558:	cbz	x0, 415ba8 <_obstack_memory_used@@Base+0xb74>
  41555c:	str	x0, [x20, #104]
  415560:	ldr	x21, [x19]
  415564:	ldr	x8, [x21, #8]
  415568:	lsl	x0, x8, #3
  41556c:	bl	4024e0 <malloc@plt>
  415570:	ldr	x8, [x21, #8]
  415574:	str	x0, [x21, #24]
  415578:	lsl	x0, x8, #3
  41557c:	bl	4024e0 <malloc@plt>
  415580:	ldr	x8, [x21, #8]
  415584:	str	x0, [x21, #32]
  415588:	add	x8, x8, x8, lsl #1
  41558c:	lsl	x0, x8, #3
  415590:	bl	4024e0 <malloc@plt>
  415594:	ldr	x8, [x21, #8]
  415598:	str	x0, [x21, #40]
  41559c:	add	x8, x8, x8, lsl #1
  4155a0:	lsl	x0, x8, #3
  4155a4:	bl	4024e0 <malloc@plt>
  4155a8:	ldr	x9, [x21, #24]
  4155ac:	str	x0, [x21, #48]
  4155b0:	cbz	x9, 415ae8 <_obstack_memory_used@@Base+0xab4>
  4155b4:	ldr	x9, [x21, #32]
  4155b8:	cbz	x9, 415ae8 <_obstack_memory_used@@Base+0xab4>
  4155bc:	mov	x8, x0
  4155c0:	mov	w0, #0xc                   	// #12
  4155c4:	cbz	x8, 415aec <_obstack_memory_used@@Base+0xab8>
  4155c8:	ldr	x8, [x21, #40]
  4155cc:	cbz	x8, 415aec <_obstack_memory_used@@Base+0xab8>
  4155d0:	ldr	x22, [x19, #48]
  4155d4:	lsl	x0, x22, #3
  4155d8:	bl	4024e0 <malloc@plt>
  4155dc:	str	x0, [x21, #224]
  4155e0:	cbz	x0, 415654 <_obstack_memory_used@@Base+0x620>
  4155e4:	cbz	x22, 4155fc <_obstack_memory_used@@Base+0x5c8>
  4155e8:	mov	x8, xzr
  4155ec:	str	x8, [x0, x8, lsl #3]
  4155f0:	add	x8, x8, #0x1
  4155f4:	cmp	x22, x8
  4155f8:	b.ne	4155ec <_obstack_memory_used@@Base+0x5b8>  // b.any
  4155fc:	ldr	x0, [x21, #104]
  415600:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5fcc>
  415604:	add	x1, x1, #0x6cc
  415608:	mov	x2, x21
  41560c:	bl	41b648 <_obstack_memory_used@@Base+0x6614>
  415610:	ldr	x8, [x19, #48]
  415614:	cbz	x8, 41563c <_obstack_memory_used@@Base+0x608>
  415618:	ldr	x0, [x21, #224]
  41561c:	mov	x9, xzr
  415620:	ldr	x10, [x0, x9, lsl #3]
  415624:	cmp	x9, x10
  415628:	b.ne	415644 <_obstack_memory_used@@Base+0x610>  // b.any
  41562c:	add	x9, x9, #0x1
  415630:	cmp	x8, x9
  415634:	b.ne	415620 <_obstack_memory_used@@Base+0x5ec>  // b.any
  415638:	b	41564c <_obstack_memory_used@@Base+0x618>
  41563c:	ldr	x0, [x21, #224]
  415640:	b	41564c <_obstack_memory_used@@Base+0x618>
  415644:	cmp	x8, x9
  415648:	b.ne	415654 <_obstack_memory_used@@Base+0x620>  // b.any
  41564c:	bl	402770 <free@plt>
  415650:	str	xzr, [x21, #224]
  415654:	ldr	x0, [x21, #104]
  415658:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5fcc>
  41565c:	add	x1, x1, #0x76c
  415660:	mov	x2, x19
  415664:	bl	419430 <_obstack_memory_used@@Base+0x43fc>
  415668:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  41566c:	ldr	x0, [x21, #104]
  415670:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5fcc>
  415674:	add	x1, x1, #0x7f4
  415678:	mov	x2, x21
  41567c:	bl	419430 <_obstack_memory_used@@Base+0x43fc>
  415680:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  415684:	ldr	x0, [x21, #104]
  415688:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5fcc>
  41568c:	add	x1, x1, #0x890
  415690:	mov	x2, x21
  415694:	bl	41b648 <_obstack_memory_used@@Base+0x6614>
  415698:	ldr	x0, [x21, #104]
  41569c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x5fcc>
  4156a0:	add	x1, x1, #0x8e8
  4156a4:	mov	x2, x21
  4156a8:	bl	41b648 <_obstack_memory_used@@Base+0x6614>
  4156ac:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  4156b0:	mov	w24, wzr
  4156b4:	mov	x22, xzr
  4156b8:	mov	w23, #0x18                  	// #24
  4156bc:	ldr	x8, [x21, #48]
  4156c0:	madd	x8, x22, x23, x8
  4156c4:	ldr	x8, [x8, #8]
  4156c8:	cbnz	x8, 415700 <_obstack_memory_used@@Base+0x6cc>
  4156cc:	sub	x0, x29, #0x20
  4156d0:	mov	w3, #0x1                   	// #1
  4156d4:	mov	x1, x21
  4156d8:	mov	x2, x22
  4156dc:	bl	41bdb0 <_obstack_memory_used@@Base+0x6d7c>
  4156e0:	cbnz	w0, 415aec <_obstack_memory_used@@Base+0xab8>
  4156e4:	ldr	x8, [x21, #48]
  4156e8:	madd	x8, x22, x23, x8
  4156ec:	ldr	x8, [x8, #8]
  4156f0:	cbnz	x8, 415700 <_obstack_memory_used@@Base+0x6cc>
  4156f4:	ldur	x0, [x29, #-16]
  4156f8:	bl	402770 <free@plt>
  4156fc:	mov	w24, #0x1                   	// #1
  415700:	ldr	x9, [x21, #16]
  415704:	add	x8, x22, #0x1
  415708:	mov	w10, w24
  41570c:	cmp	x8, x9
  415710:	cset	w11, ne  // ne = any
  415714:	csinc	x22, xzr, x22, eq  // eq = none
  415718:	and	w24, w24, w11
  41571c:	tbnz	w10, #0, 4156bc <_obstack_memory_used@@Base+0x688>
  415720:	cmp	x8, x9
  415724:	b.ne	4156bc <_obstack_memory_used@@Base+0x688>  // b.any
  415728:	ldrb	w9, [x19, #56]
  41572c:	tbnz	w9, #4, 415740 <_obstack_memory_used@@Base+0x70c>
  415730:	ldr	x9, [x19, #48]
  415734:	cbz	x9, 415740 <_obstack_memory_used@@Base+0x70c>
  415738:	ldrb	w9, [x21, #176]
  41573c:	tbnz	w9, #0, 415748 <_obstack_memory_used@@Base+0x714>
  415740:	ldr	x9, [x21, #152]
  415744:	cbz	x9, 41580c <_obstack_memory_used@@Base+0x7d8>
  415748:	add	x8, x8, x8, lsl #1
  41574c:	lsl	x0, x8, #3
  415750:	bl	4024e0 <malloc@plt>
  415754:	str	x0, [x21, #56]
  415758:	cbz	x0, 415ae8 <_obstack_memory_used@@Base+0xab4>
  41575c:	ldr	x8, [x21, #16]
  415760:	cbz	x8, 41580c <_obstack_memory_used@@Base+0x7d8>
  415764:	stp	xzr, xzr, [x0]
  415768:	str	xzr, [x0, #16]
  41576c:	ldr	x8, [x21, #16]
  415770:	cmp	x8, #0x2
  415774:	b.cc	4157a4 <_obstack_memory_used@@Base+0x770>  // b.lo, b.ul, b.last
  415778:	mov	w9, #0x1                   	// #1
  41577c:	mov	w10, #0x18                  	// #24
  415780:	ldr	x8, [x21, #56]
  415784:	add	x9, x9, #0x1
  415788:	add	x8, x8, x10
  41578c:	stp	xzr, xzr, [x8]
  415790:	str	xzr, [x8, #16]
  415794:	ldr	x8, [x21, #16]
  415798:	add	x10, x10, #0x18
  41579c:	cmp	x9, x8
  4157a0:	b.cc	415780 <_obstack_memory_used@@Base+0x74c>  // b.lo, b.ul, b.last
  4157a4:	cbz	x8, 41580c <_obstack_memory_used@@Base+0x7d8>
  4157a8:	ldr	x9, [x21, #48]
  4157ac:	mov	x22, xzr
  4157b0:	mov	w23, #0x18                  	// #24
  4157b4:	madd	x10, x22, x23, x9
  4157b8:	ldr	x11, [x10, #8]
  4157bc:	cmp	x11, #0x1
  4157c0:	b.lt	415800 <_obstack_memory_used@@Base+0x7cc>  // b.tstop
  4157c4:	ldr	x24, [x10, #16]
  4157c8:	mov	x26, xzr
  4157cc:	ldr	x8, [x21, #56]
  4157d0:	ldr	x9, [x24, x26, lsl #3]
  4157d4:	mov	x1, x22
  4157d8:	madd	x0, x9, x23, x8
  4157dc:	bl	41c54c <_obstack_memory_used@@Base+0x7518>
  4157e0:	tbz	w0, #0, 415ae8 <_obstack_memory_used@@Base+0xab4>
  4157e4:	ldr	x9, [x21, #48]
  4157e8:	add	x26, x26, #0x1
  4157ec:	madd	x8, x22, x23, x9
  4157f0:	ldr	x8, [x8, #8]
  4157f4:	cmp	x26, x8
  4157f8:	b.lt	4157cc <_obstack_memory_used@@Base+0x798>  // b.tstop
  4157fc:	ldr	x8, [x21, #16]
  415800:	add	x22, x22, #0x1
  415804:	cmp	x22, x8
  415808:	b.cc	4157b4 <_obstack_memory_used@@Base+0x780>  // b.lo, b.ul, b.last
  41580c:	stur	wzr, [x29, #-52]
  415810:	cbnz	x25, 415908 <_obstack_memory_used@@Base+0x8d4>
  415814:	ldrb	w9, [x20, #176]
  415818:	tbz	w9, #2, 415908 <_obstack_memory_used@@Base+0x8d4>
  41581c:	ldr	x8, [x19, #40]
  415820:	cbnz	x8, 415908 <_obstack_memory_used@@Base+0x8d4>
  415824:	ldr	x11, [x20, #16]
  415828:	cbz	x11, 4158d4 <_obstack_memory_used@@Base+0x8a0>
  41582c:	ldr	x10, [x20]
  415830:	adrp	x13, 423000 <_obstack_memory_used@@Base+0xdfcc>
  415834:	mov	w8, wzr
  415838:	mov	w12, wzr
  41583c:	add	x13, x13, #0x9e0
  415840:	mov	w14, #0x1                   	// #1
  415844:	mov	w15, #0x8b                  	// #139
  415848:	mov	x16, x10
  41584c:	ldrb	w17, [x16, #8]
  415850:	sub	w17, w17, #0x1
  415854:	cmp	w17, #0xb
  415858:	b.hi	415bc0 <_obstack_memory_used@@Base+0xb8c>  // b.pmore
  41585c:	adr	x18, 41586c <_obstack_memory_used@@Base+0x838>
  415860:	ldrb	w0, [x13, x17]
  415864:	add	x18, x18, x0, lsl #2
  415868:	br	x18
  41586c:	subs	x11, x11, #0x1
  415870:	add	x16, x16, #0x10
  415874:	b.ne	41584c <_obstack_memory_used@@Base+0x818>  // b.any
  415878:	b	415b14 <_obstack_memory_used@@Base+0xae0>
  41587c:	ldr	x17, [x16]
  415880:	ldr	x18, [x17, #16]
  415884:	cbnz	x18, 415908 <_obstack_memory_used@@Base+0x8d4>
  415888:	ldr	x17, [x17, #24]
  41588c:	cbz	x17, 41586c <_obstack_memory_used@@Base+0x838>
  415890:	b	415908 <_obstack_memory_used@@Base+0x8d4>
  415894:	ldr	w17, [x16]
  415898:	sub	w17, w17, #0x10
  41589c:	ror	w17, w17, #4
  4158a0:	cmp	w17, #0x7
  4158a4:	b.hi	415908 <_obstack_memory_used@@Base+0x8d4>  // b.pmore
  4158a8:	lsl	w17, w14, w17
  4158ac:	tst	w17, w15
  4158b0:	b.ne	41586c <_obstack_memory_used@@Base+0x838>  // b.any
  4158b4:	b	415908 <_obstack_memory_used@@Base+0x8d4>
  4158b8:	ldrsb	w17, [x16]
  4158bc:	cmp	w17, #0x0
  4158c0:	cset	w17, lt  // lt = tstop
  4158c4:	orr	w12, w12, w17
  4158c8:	b	41586c <_obstack_memory_used@@Base+0x838>
  4158cc:	mov	w8, #0x1                   	// #1
  4158d0:	b	41586c <_obstack_memory_used@@Base+0x838>
  4158d4:	mov	w8, wzr
  4158d8:	ldr	x10, [x20, #152]
  4158dc:	mov	w12, #0x2                   	// #2
  4158e0:	and	w9, w9, #0xfffffff9
  4158e4:	mov	w11, #0x1                   	// #1
  4158e8:	cmp	x10, #0x0
  4158ec:	cset	w10, gt
  4158f0:	orr	w8, w8, w10
  4158f4:	tst	w8, #0x1
  4158f8:	csel	w8, w12, wzr, ne  // ne = any
  4158fc:	orr	w8, w8, w9
  415900:	str	w11, [x20, #180]
  415904:	strb	w8, [x20, #176]
  415908:	ldr	x8, [x20, #104]
  41590c:	ldr	x9, [x20, #48]
  415910:	mov	w10, #0x18                  	// #24
  415914:	sub	x0, x29, #0x20
  415918:	ldr	x8, [x8, #24]
  41591c:	ldr	x8, [x8, #56]
  415920:	madd	x1, x8, x10, x9
  415924:	str	x8, [x20, #144]
  415928:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41592c:	stur	w0, [x29, #-48]
  415930:	cbnz	w0, 415aa4 <_obstack_memory_used@@Base+0xa70>
  415934:	ldr	x8, [x20, #152]
  415938:	cmp	x8, #0x1
  41593c:	b.lt	415a0c <_obstack_memory_used@@Base+0x9d8>  // b.tstop
  415940:	ldur	x23, [x29, #-24]
  415944:	cmp	x23, #0x1
  415948:	b.lt	415a0c <_obstack_memory_used@@Base+0x9d8>  // b.tstop
  41594c:	mov	x24, xzr
  415950:	mov	w22, #0x18                  	// #24
  415954:	ldur	x9, [x29, #-16]
  415958:	ldr	x10, [x20]
  41595c:	ldr	x8, [x9, x24, lsl #3]
  415960:	add	x11, x10, x8, lsl #4
  415964:	ldrb	w11, [x11, #8]
  415968:	cmp	w11, #0x4
  41596c:	b.ne	415a00 <_obstack_memory_used@@Base+0x9cc>  // b.any
  415970:	cmp	x23, #0x1
  415974:	b.lt	4159b8 <_obstack_memory_used@@Base+0x984>  // b.tstop
  415978:	mov	x11, xzr
  41597c:	add	x12, x10, x8, lsl #4
  415980:	ldr	x13, [x9, x11, lsl #3]
  415984:	add	x14, x10, x13, lsl #4
  415988:	ldrb	w14, [x14, #8]
  41598c:	cmp	w14, #0x9
  415990:	b.ne	4159a8 <_obstack_memory_used@@Base+0x974>  // b.any
  415994:	lsl	x13, x13, #4
  415998:	ldr	x13, [x10, x13]
  41599c:	ldr	x14, [x12]
  4159a0:	cmp	x13, x14
  4159a4:	b.eq	4159bc <_obstack_memory_used@@Base+0x988>  // b.none
  4159a8:	add	x11, x11, #0x1
  4159ac:	cmp	x23, x11
  4159b0:	b.ne	415980 <_obstack_memory_used@@Base+0x94c>  // b.any
  4159b4:	b	415a00 <_obstack_memory_used@@Base+0x9cc>
  4159b8:	mov	x11, xzr
  4159bc:	cmp	x11, x23
  4159c0:	b.eq	415a00 <_obstack_memory_used@@Base+0x9cc>  // b.none
  4159c4:	ldr	x9, [x20, #40]
  4159c8:	sub	x0, x29, #0x20
  4159cc:	madd	x8, x8, x22, x9
  4159d0:	ldr	x8, [x8, #16]
  4159d4:	ldr	x21, [x8]
  4159d8:	mov	x1, x21
  4159dc:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  4159e0:	cbnz	x0, 415a00 <_obstack_memory_used@@Base+0x9cc>
  4159e4:	ldr	x8, [x20, #48]
  4159e8:	sub	x0, x29, #0x20
  4159ec:	madd	x1, x21, x22, x8
  4159f0:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  4159f4:	cbnz	w0, 415aa4 <_obstack_memory_used@@Base+0xa70>
  4159f8:	ldur	x23, [x29, #-24]
  4159fc:	mov	x24, xzr
  415a00:	add	x24, x24, #0x1
  415a04:	cmp	x24, x23
  415a08:	b.lt	415954 <_obstack_memory_used@@Base+0x920>  // b.tstop
  415a0c:	sub	x0, x29, #0x30
  415a10:	sub	x2, x29, #0x20
  415a14:	mov	x1, x20
  415a18:	mov	w3, wzr
  415a1c:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  415a20:	str	x0, [x20, #72]
  415a24:	cbz	x0, 415ba0 <_obstack_memory_used@@Base+0xb6c>
  415a28:	ldrsb	w8, [x0, #104]
  415a2c:	tbnz	w8, #31, 415a3c <_obstack_memory_used@@Base+0xa08>
  415a30:	stp	x0, x0, [x20, #88]
  415a34:	str	x0, [x20, #80]
  415a38:	b	415a98 <_obstack_memory_used@@Base+0xa64>
  415a3c:	sub	x0, x29, #0x30
  415a40:	sub	x2, x29, #0x20
  415a44:	mov	w3, #0x1                   	// #1
  415a48:	mov	x1, x20
  415a4c:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  415a50:	str	x0, [x20, #80]
  415a54:	sub	x0, x29, #0x30
  415a58:	sub	x2, x29, #0x20
  415a5c:	mov	w3, #0x2                   	// #2
  415a60:	mov	x1, x20
  415a64:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  415a68:	str	x0, [x20, #88]
  415a6c:	sub	x0, x29, #0x30
  415a70:	sub	x2, x29, #0x20
  415a74:	mov	w3, #0x6                   	// #6
  415a78:	mov	x1, x20
  415a7c:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  415a80:	ldr	x8, [x20, #80]
  415a84:	str	x0, [x20, #96]
  415a88:	cbz	x8, 415ba0 <_obstack_memory_used@@Base+0xb6c>
  415a8c:	cbz	x0, 415ba0 <_obstack_memory_used@@Base+0xb6c>
  415a90:	ldr	x8, [x20, #88]
  415a94:	cbz	x8, 415ba0 <_obstack_memory_used@@Base+0xb6c>
  415a98:	ldur	x0, [x29, #-16]
  415a9c:	bl	402770 <free@plt>
  415aa0:	mov	w0, wzr
  415aa4:	stur	w0, [x29, #-52]
  415aa8:	mov	x0, x19
  415aac:	bl	418220 <_obstack_memory_used@@Base+0x31ec>
  415ab0:	add	x0, sp, #0x10
  415ab4:	bl	41826c <_obstack_memory_used@@Base+0x3238>
  415ab8:	ldur	w8, [x29, #-52]
  415abc:	cbnz	w8, 415b00 <_obstack_memory_used@@Base+0xacc>
  415ac0:	mov	w21, wzr
  415ac4:	mov	w0, w21
  415ac8:	ldp	x20, x19, [sp, #304]
  415acc:	ldp	x22, x21, [sp, #288]
  415ad0:	ldp	x24, x23, [sp, #272]
  415ad4:	ldp	x26, x25, [sp, #256]
  415ad8:	ldp	x28, x27, [sp, #240]
  415adc:	ldp	x29, x30, [sp, #224]
  415ae0:	add	sp, sp, #0x140
  415ae4:	ret
  415ae8:	mov	w0, #0xc                   	// #12
  415aec:	stur	w0, [x29, #-52]
  415af0:	mov	x0, x19
  415af4:	bl	418220 <_obstack_memory_used@@Base+0x31ec>
  415af8:	add	x0, sp, #0x10
  415afc:	bl	41826c <_obstack_memory_used@@Base+0x3238>
  415b00:	mov	x0, x20
  415b04:	bl	416194 <_obstack_memory_used@@Base+0x1160>
  415b08:	stp	xzr, xzr, [x19]
  415b0c:	ldur	w21, [x29, #-52]
  415b10:	b	415ac4 <_obstack_memory_used@@Base+0xa90>
  415b14:	orr	w11, w12, w8
  415b18:	tbz	w11, #0, 4158d8 <_obstack_memory_used@@Base+0x8a4>
  415b1c:	mov	x9, xzr
  415b20:	mov	w11, #0x1                   	// #1
  415b24:	add	x12, x10, x9
  415b28:	ldr	w13, [x12, #8]
  415b2c:	and	w14, w13, #0xff
  415b30:	cmp	w14, #0x5
  415b34:	b.eq	415b50 <_obstack_memory_used@@Base+0xb1c>  // b.none
  415b38:	cmp	w14, #0x1
  415b3c:	b.ne	415b5c <_obstack_memory_used@@Base+0xb28>  // b.any
  415b40:	ldrsb	w10, [x10, x9]
  415b44:	tbz	w10, #31, 415b5c <_obstack_memory_used@@Base+0xb28>
  415b48:	and	w10, w13, #0xffdfffff
  415b4c:	b	415b58 <_obstack_memory_used@@Base+0xb24>
  415b50:	and	w10, w13, #0xffffff00
  415b54:	orr	w10, w10, #0x7
  415b58:	str	w10, [x12, #8]
  415b5c:	ldr	x10, [x20, #16]
  415b60:	cmp	x11, x10
  415b64:	b.cs	415b78 <_obstack_memory_used@@Base+0xb44>  // b.hs, b.nlast
  415b68:	ldr	x10, [x20]
  415b6c:	add	x9, x9, #0x10
  415b70:	add	x11, x11, #0x1
  415b74:	b	415b24 <_obstack_memory_used@@Base+0xaf0>
  415b78:	ldrb	w9, [x20, #176]
  415b7c:	b	4158d8 <_obstack_memory_used@@Base+0x8a4>
  415b80:	mov	w1, #0xe8                  	// #232
  415b84:	mov	x0, x20
  415b88:	bl	402610 <realloc@plt>
  415b8c:	cbz	x0, 415bb8 <_obstack_memory_used@@Base+0xb84>
  415b90:	mov	x20, x0
  415b94:	mov	w8, #0xe8                  	// #232
  415b98:	stp	x0, x8, [x19]
  415b9c:	b	415174 <_obstack_memory_used@@Base+0x140>
  415ba0:	ldur	w0, [x29, #-48]
  415ba4:	b	415aa4 <_obstack_memory_used@@Base+0xa70>
  415ba8:	mov	w8, #0xc                   	// #12
  415bac:	stur	w8, [x29, #-52]
  415bb0:	str	xzr, [x20, #104]
  415bb4:	b	415af0 <_obstack_memory_used@@Base+0xabc>
  415bb8:	mov	w21, #0xc                   	// #12
  415bbc:	b	415ac4 <_obstack_memory_used@@Base+0xa90>
  415bc0:	bl	4026c0 <abort@plt>
  415bc4:	adrp	x9, 439000 <__progname@@GLIBC_2.17+0x3b88>
  415bc8:	ldr	x8, [x9, #3552]
  415bcc:	str	x0, [x9, #3552]
  415bd0:	mov	x0, x8
  415bd4:	ret
  415bd8:	stp	x29, x30, [sp, #-48]!
  415bdc:	stp	x20, x19, [sp, #32]
  415be0:	ldr	x20, [x0, #32]
  415be4:	str	x21, [sp, #16]
  415be8:	ldr	x21, [x0]
  415bec:	mov	x19, x0
  415bf0:	mov	w2, #0x100                 	// #256
  415bf4:	mov	x0, x20
  415bf8:	mov	w1, wzr
  415bfc:	mov	x29, sp
  415c00:	bl	4025b0 <memset@plt>
  415c04:	ldr	x1, [x21, #72]
  415c08:	mov	x0, x19
  415c0c:	mov	x2, x20
  415c10:	bl	415c84 <_obstack_memory_used@@Base+0xc50>
  415c14:	ldp	x8, x1, [x21, #72]
  415c18:	cmp	x8, x1
  415c1c:	b.eq	415c30 <_obstack_memory_used@@Base+0xbfc>  // b.none
  415c20:	mov	x0, x19
  415c24:	mov	x2, x20
  415c28:	bl	415c84 <_obstack_memory_used@@Base+0xc50>
  415c2c:	ldr	x8, [x21, #72]
  415c30:	ldr	x1, [x21, #88]
  415c34:	cmp	x8, x1
  415c38:	b.eq	415c4c <_obstack_memory_used@@Base+0xc18>  // b.none
  415c3c:	mov	x0, x19
  415c40:	mov	x2, x20
  415c44:	bl	415c84 <_obstack_memory_used@@Base+0xc50>
  415c48:	ldr	x8, [x21, #72]
  415c4c:	ldr	x1, [x21, #96]
  415c50:	cmp	x8, x1
  415c54:	b.eq	415c64 <_obstack_memory_used@@Base+0xc30>  // b.none
  415c58:	mov	x0, x19
  415c5c:	mov	x2, x20
  415c60:	bl	415c84 <_obstack_memory_used@@Base+0xc50>
  415c64:	ldrb	w8, [x19, #56]
  415c68:	ldr	x21, [sp, #16]
  415c6c:	mov	w0, wzr
  415c70:	orr	w8, w8, #0x8
  415c74:	strb	w8, [x19, #56]
  415c78:	ldp	x20, x19, [sp, #32]
  415c7c:	ldp	x29, x30, [sp], #48
  415c80:	ret
  415c84:	sub	sp, sp, #0x1a0
  415c88:	stp	x29, x30, [sp, #320]
  415c8c:	stp	x28, x27, [sp, #336]
  415c90:	stp	x26, x25, [sp, #352]
  415c94:	stp	x24, x23, [sp, #368]
  415c98:	stp	x22, x21, [sp, #384]
  415c9c:	stp	x20, x19, [sp, #400]
  415ca0:	ldr	x23, [x0]
  415ca4:	mov	x20, x2
  415ca8:	add	x29, sp, #0x140
  415cac:	str	x0, [sp, #32]
  415cb0:	ldr	w8, [x23, #180]
  415cb4:	cmp	w8, #0x1
  415cb8:	b.ne	415cc8 <_obstack_memory_used@@Base+0xc94>  // b.any
  415cbc:	ldrb	w8, [x0, #26]
  415cc0:	ubfx	w24, w8, #6, #1
  415cc4:	b	415ccc <_obstack_memory_used@@Base+0xc98>
  415cc8:	mov	w24, wzr
  415ccc:	ldr	x8, [x1, #16]
  415cd0:	cmp	x8, #0x1
  415cd4:	b.lt	415fa4 <_obstack_memory_used@@Base+0xf70>  // b.tstop
  415cd8:	add	x8, sp, #0x28
  415cdc:	mov	x9, xzr
  415ce0:	mov	w28, #0x1                   	// #1
  415ce4:	orr	x8, x8, #0x1
  415ce8:	stp	x8, x1, [sp, #8]
  415cec:	ldr	x8, [x1, #24]
  415cf0:	str	x9, [sp, #24]
  415cf4:	ldr	x21, [x8, x9, lsl #3]
  415cf8:	ldr	x8, [x23]
  415cfc:	add	x9, x8, x21, lsl #4
  415d00:	ldrb	w19, [x9, #8]
  415d04:	sub	w10, w19, #0x1
  415d08:	cmp	w10, #0x6
  415d0c:	b.hi	415f64 <_obstack_memory_used@@Base+0xf30>  // b.pmore
  415d10:	adrp	x13, 423000 <_obstack_memory_used@@Base+0xdfcc>
  415d14:	add	x13, x13, #0x9ec
  415d18:	adr	x11, 415d2c <_obstack_memory_used@@Base+0xcf8>
  415d1c:	ldrb	w12, [x13, x10]
  415d20:	add	x11, x11, x12, lsl #2
  415d24:	lsl	x22, x21, #4
  415d28:	br	x11
  415d2c:	ldrb	w0, [x9]
  415d30:	strb	w28, [x20, x0]
  415d34:	cbz	w24, 415d40 <_obstack_memory_used@@Base+0xd0c>
  415d38:	bl	402940 <tolower@plt>
  415d3c:	strb	w28, [x20, w0, sxtw]
  415d40:	ldr	x8, [sp, #32]
  415d44:	ldrb	w8, [x8, #26]
  415d48:	tbz	w8, #6, 415f64 <_obstack_memory_used@@Base+0xf30>
  415d4c:	ldr	w8, [x23, #180]
  415d50:	cmp	w8, #0x2
  415d54:	b.lt	415f64 <_obstack_memory_used@@Base+0xf30>  // b.tstop
  415d58:	ldr	x8, [x23]
  415d5c:	add	x9, x21, #0x1
  415d60:	mov	w13, #0x1                   	// #1
  415d64:	movk	w13, #0x20, lsl #16
  415d68:	ldrb	w8, [x8, x22]
  415d6c:	strb	w8, [sp, #40]
  415d70:	ldr	x8, [x23, #16]
  415d74:	cmp	x9, x8
  415d78:	ldr	x8, [sp, #8]
  415d7c:	b.cs	415dbc <_obstack_memory_used@@Base+0xd88>  // b.hs, b.nlast
  415d80:	ldr	x8, [sp, #8]
  415d84:	ldr	x10, [x23]
  415d88:	add	w12, w13, #0xfe
  415d8c:	add	x10, x10, x22
  415d90:	ldr	w11, [x10, #24]
  415d94:	and	w11, w11, w12
  415d98:	cmp	w11, w13
  415d9c:	b.ne	415dbc <_obstack_memory_used@@Base+0xd88>  // b.any
  415da0:	ldrb	w10, [x10, #16]
  415da4:	add	x9, x9, #0x1
  415da8:	add	x22, x22, #0x10
  415dac:	strb	w10, [x8], #1
  415db0:	ldr	x10, [x23, #16]
  415db4:	cmp	x9, x10
  415db8:	b.cc	415d84 <_obstack_memory_used@@Base+0xd50>  // b.lo, b.ul, b.last
  415dbc:	add	x9, sp, #0x28
  415dc0:	sub	x22, x8, x9
  415dc4:	sub	x0, x29, #0xc
  415dc8:	add	x1, sp, #0x28
  415dcc:	sub	x3, x29, #0x18
  415dd0:	mov	x2, x22
  415dd4:	stur	xzr, [x29, #-24]
  415dd8:	bl	414ca4 <wcrtomb@plt+0x122e4>
  415ddc:	cmp	x0, x22
  415de0:	b.ne	415f64 <_obstack_memory_used@@Base+0xf30>  // b.any
  415de4:	ldur	w0, [x29, #-12]
  415de8:	bl	402970 <towlower@plt>
  415dec:	mov	w1, w0
  415df0:	add	x0, sp, #0x28
  415df4:	sub	x2, x29, #0x18
  415df8:	bl	4029c0 <wcrtomb@plt>
  415dfc:	cmn	x0, #0x1
  415e00:	b.eq	415f64 <_obstack_memory_used@@Base+0xf30>  // b.none
  415e04:	ldrb	w8, [sp, #40]
  415e08:	strb	w28, [x20, x8]
  415e0c:	b	415f64 <_obstack_memory_used@@Base+0xf30>
  415e10:	mov	x27, xzr
  415e14:	mov	x26, xzr
  415e18:	ldr	x8, [x8, x22]
  415e1c:	mov	x21, xzr
  415e20:	add	x25, x20, w26, sxtw
  415e24:	ldr	x19, [x8, x27, lsl #3]
  415e28:	lsr	x8, x19, x21
  415e2c:	tbz	w8, #0, 415e44 <_obstack_memory_used@@Base+0xe10>
  415e30:	strb	w28, [x25, x21]
  415e34:	cbz	w24, 415e44 <_obstack_memory_used@@Base+0xe10>
  415e38:	add	w0, w26, w21
  415e3c:	bl	402940 <tolower@plt>
  415e40:	strb	w28, [x20, w0, sxtw]
  415e44:	add	x21, x21, #0x1
  415e48:	cmp	x21, #0x40
  415e4c:	b.ne	415e28 <_obstack_memory_used@@Base+0xdf4>  // b.any
  415e50:	add	x27, x27, #0x1
  415e54:	cmp	x27, #0x4
  415e58:	b.eq	415f64 <_obstack_memory_used@@Base+0xf30>  // b.none
  415e5c:	ldr	x8, [x23]
  415e60:	add	x26, x21, w26, sxtw
  415e64:	b	415e18 <_obstack_memory_used@@Base+0xde4>
  415e68:	ldr	w8, [x23, #180]
  415e6c:	ldr	x22, [x9]
  415e70:	cmp	w8, #0x2
  415e74:	b.lt	415ecc <_obstack_memory_used@@Base+0xe98>  // b.tstop
  415e78:	ldr	x8, [x22, #72]
  415e7c:	cbnz	x8, 415e90 <_obstack_memory_used@@Base+0xe5c>
  415e80:	ldrb	w8, [x22, #32]
  415e84:	tbnz	w8, #0, 415e90 <_obstack_memory_used@@Base+0xe5c>
  415e88:	ldr	x8, [x22, #64]
  415e8c:	cbz	x8, 415ecc <_obstack_memory_used@@Base+0xe98>
  415e90:	sturb	wzr, [x29, #-24]
  415e94:	sub	x1, x29, #0x18
  415e98:	add	x3, sp, #0x28
  415e9c:	mov	w2, #0x1                   	// #1
  415ea0:	mov	x0, xzr
  415ea4:	str	xzr, [sp, #40]
  415ea8:	bl	414ca4 <wcrtomb@plt+0x122e4>
  415eac:	ldurb	w8, [x29, #-24]
  415eb0:	cmn	x0, #0x2
  415eb4:	b.ne	415ebc <_obstack_memory_used@@Base+0xe88>  // b.any
  415eb8:	strb	w28, [x20, x8]
  415ebc:	add	w8, w8, #0x1
  415ec0:	sturb	w8, [x29, #-24]
  415ec4:	tbz	w8, #8, 415e94 <_obstack_memory_used@@Base+0xe60>
  415ec8:	b	415f64 <_obstack_memory_used@@Base+0xf30>
  415ecc:	ldr	x8, [x22, #40]
  415ed0:	cmp	x8, #0x1
  415ed4:	b.lt	415f64 <_obstack_memory_used@@Base+0xf30>  // b.tstop
  415ed8:	mov	x27, xzr
  415edc:	stur	xzr, [x29, #-24]
  415ee0:	ldr	x8, [x22]
  415ee4:	add	x0, sp, #0x28
  415ee8:	sub	x2, x29, #0x18
  415eec:	ldr	w1, [x8, x27, lsl #2]
  415ef0:	bl	4029c0 <wcrtomb@plt>
  415ef4:	cmn	x0, #0x1
  415ef8:	b.eq	415f10 <_obstack_memory_used@@Base+0xedc>  // b.none
  415efc:	ldrb	w0, [sp, #40]
  415f00:	strb	w28, [x20, x0]
  415f04:	cbz	w24, 415f10 <_obstack_memory_used@@Base+0xedc>
  415f08:	bl	402940 <tolower@plt>
  415f0c:	strb	w28, [x20, w0, sxtw]
  415f10:	ldr	x8, [sp, #32]
  415f14:	ldrb	w8, [x8, #26]
  415f18:	tbz	w8, #6, 415f54 <_obstack_memory_used@@Base+0xf20>
  415f1c:	ldr	w8, [x23, #180]
  415f20:	cmp	w8, #0x2
  415f24:	b.lt	415f54 <_obstack_memory_used@@Base+0xf20>  // b.tstop
  415f28:	ldr	x8, [x22]
  415f2c:	ldr	w0, [x8, x27, lsl #2]
  415f30:	bl	402970 <towlower@plt>
  415f34:	mov	w1, w0
  415f38:	add	x0, sp, #0x28
  415f3c:	sub	x2, x29, #0x18
  415f40:	bl	4029c0 <wcrtomb@plt>
  415f44:	cmn	x0, #0x1
  415f48:	b.eq	415f54 <_obstack_memory_used@@Base+0xf20>  // b.none
  415f4c:	ldrb	w8, [sp, #40]
  415f50:	strb	w28, [x20, x8]
  415f54:	ldr	x8, [x22, #40]
  415f58:	add	x27, x27, #0x1
  415f5c:	cmp	x27, x8
  415f60:	b.lt	415edc <_obstack_memory_used@@Base+0xea8>  // b.tstop
  415f64:	ldp	x1, x9, [sp, #16]
  415f68:	ldr	x8, [x1, #16]
  415f6c:	add	x9, x9, #0x1
  415f70:	cmp	x9, x8
  415f74:	b.lt	415cec <_obstack_memory_used@@Base+0xcb8>  // b.tstop
  415f78:	b	415fa4 <_obstack_memory_used@@Base+0xf70>
  415f7c:	mov	w1, #0x1                   	// #1
  415f80:	mov	w2, #0x100                 	// #256
  415f84:	mov	x0, x20
  415f88:	bl	4025b0 <memset@plt>
  415f8c:	cmp	w19, #0x2
  415f90:	b.ne	415fa4 <_obstack_memory_used@@Base+0xf70>  // b.any
  415f94:	ldr	x9, [sp, #32]
  415f98:	ldrb	w8, [x9, #56]
  415f9c:	orr	w8, w8, #0x1
  415fa0:	strb	w8, [x9, #56]
  415fa4:	ldp	x20, x19, [sp, #400]
  415fa8:	ldp	x22, x21, [sp, #384]
  415fac:	ldp	x24, x23, [sp, #368]
  415fb0:	ldp	x26, x25, [sp, #352]
  415fb4:	ldp	x28, x27, [sp, #336]
  415fb8:	ldp	x29, x30, [sp, #320]
  415fbc:	add	sp, sp, #0x1a0
  415fc0:	ret
  415fc4:	stp	x29, x30, [sp, #-48]!
  415fc8:	stp	x20, x19, [sp, #32]
  415fcc:	mov	x19, x0
  415fd0:	stp	xzr, xzr, [x0]
  415fd4:	str	xzr, [x0, #16]
  415fd8:	mov	w0, #0x100                 	// #256
  415fdc:	stp	x22, x21, [sp, #16]
  415fe0:	mov	x29, sp
  415fe4:	mov	w21, w2
  415fe8:	mov	x20, x1
  415fec:	bl	4024e0 <malloc@plt>
  415ff0:	str	x0, [x19, #32]
  415ff4:	cbz	x0, 4160a8 <_obstack_memory_used@@Base+0x1074>
  415ff8:	mov	w8, #0xb2fc                	// #45820
  415ffc:	mov	w9, #0x2c6                 	// #710
  416000:	tst	w21, #0x1
  416004:	movk	w8, #0x3, lsl #16
  416008:	movk	w9, #0x101, lsl #16
  41600c:	lsl	w10, w21, #21
  416010:	csel	x8, x9, x8, eq  // eq = none
  416014:	and	w9, w10, #0x400000
  416018:	orr	x22, x8, x9
  41601c:	tbnz	w21, #2, 41602c <_obstack_memory_used@@Base+0xff8>
  416020:	ldrb	w8, [x19, #56]
  416024:	and	w8, w8, #0x7f
  416028:	b	416044 <_obstack_memory_used@@Base+0x1010>
  41602c:	ldrb	w8, [x19, #56]
  416030:	mov	w9, #0xb2be                	// #45758
  416034:	movk	w9, #0x143, lsl #16
  416038:	and	x9, x22, x9
  41603c:	orr	x22, x9, #0x100
  416040:	orr	w8, w8, #0xffffff80
  416044:	lsl	w9, w21, #1
  416048:	strb	w8, [x19, #56]
  41604c:	and	w8, w8, #0xffffffef
  416050:	and	w9, w9, #0x10
  416054:	orr	w8, w8, w9
  416058:	mov	x0, x20
  41605c:	strb	w8, [x19, #56]
  416060:	str	xzr, [x19, #40]
  416064:	bl	402380 <strlen@plt>
  416068:	mov	x2, x0
  41606c:	mov	x0, x19
  416070:	mov	x1, x20
  416074:	mov	x3, x22
  416078:	bl	41511c <_obstack_memory_used@@Base+0xe8>
  41607c:	cmp	w0, #0x10
  416080:	mov	w8, #0x8                   	// #8
  416084:	csel	w20, w8, w0, eq  // eq = none
  416088:	cbnz	w20, 4160b0 <_obstack_memory_used@@Base+0x107c>
  41608c:	mov	x0, x19
  416090:	bl	415bd8 <_obstack_memory_used@@Base+0xba4>
  416094:	mov	w0, w20
  416098:	ldp	x20, x19, [sp, #32]
  41609c:	ldp	x22, x21, [sp, #16]
  4160a0:	ldp	x29, x30, [sp], #48
  4160a4:	ret
  4160a8:	mov	w20, #0xc                   	// #12
  4160ac:	b	416094 <_obstack_memory_used@@Base+0x1060>
  4160b0:	ldr	x0, [x19, #32]
  4160b4:	bl	402770 <free@plt>
  4160b8:	str	xzr, [x19, #32]
  4160bc:	b	416094 <_obstack_memory_used@@Base+0x1060>
  4160c0:	stp	x29, x30, [sp, #-48]!
  4160c4:	cmp	w0, #0x11
  4160c8:	stp	x22, x21, [sp, #16]
  4160cc:	stp	x20, x19, [sp, #32]
  4160d0:	mov	x29, sp
  4160d4:	b.cs	41614c <_obstack_memory_used@@Base+0x1118>  // b.hs, b.nlast
  4160d8:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4160dc:	add	x8, x8, #0xc28
  4160e0:	ldr	x8, [x8, w0, uxtw #3]
  4160e4:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4160e8:	add	x9, x9, #0xaa7
  4160ec:	mov	x19, x2
  4160f0:	add	x1, x9, x8
  4160f4:	mov	w2, #0x5                   	// #5
  4160f8:	mov	x0, xzr
  4160fc:	mov	x20, x3
  416100:	bl	402890 <dcgettext@plt>
  416104:	mov	x21, x0
  416108:	bl	402380 <strlen@plt>
  41610c:	add	x22, x0, #0x1
  416110:	cbz	x20, 41612c <_obstack_memory_used@@Base+0x10f8>
  416114:	cmp	x22, x20
  416118:	mov	x2, x22
  41611c:	b.hi	416140 <_obstack_memory_used@@Base+0x110c>  // b.pmore
  416120:	mov	x0, x19
  416124:	mov	x1, x21
  416128:	bl	402320 <memcpy@plt>
  41612c:	mov	x0, x22
  416130:	ldp	x20, x19, [sp, #32]
  416134:	ldp	x22, x21, [sp, #16]
  416138:	ldp	x29, x30, [sp], #48
  41613c:	ret
  416140:	sub	x2, x20, #0x1
  416144:	strb	wzr, [x19, x2]
  416148:	b	416120 <_obstack_memory_used@@Base+0x10ec>
  41614c:	bl	4026c0 <abort@plt>
  416150:	stp	x29, x30, [sp, #-32]!
  416154:	str	x19, [sp, #16]
  416158:	mov	x19, x0
  41615c:	ldr	x0, [x0]
  416160:	mov	x29, sp
  416164:	cbz	x0, 41616c <_obstack_memory_used@@Base+0x1138>
  416168:	bl	416194 <_obstack_memory_used@@Base+0x1160>
  41616c:	ldr	x0, [x19, #32]
  416170:	stp	xzr, xzr, [x19]
  416174:	bl	402770 <free@plt>
  416178:	ldr	x0, [x19, #40]
  41617c:	str	xzr, [x19, #32]
  416180:	bl	402770 <free@plt>
  416184:	str	xzr, [x19, #40]
  416188:	ldr	x19, [sp, #16]
  41618c:	ldp	x29, x30, [sp], #32
  416190:	ret
  416194:	stp	x29, x30, [sp, #-64]!
  416198:	stp	x24, x23, [sp, #16]
  41619c:	stp	x22, x21, [sp, #32]
  4161a0:	stp	x20, x19, [sp, #48]
  4161a4:	mov	x19, x0
  4161a8:	ldr	x0, [x0]
  4161ac:	mov	x29, sp
  4161b0:	cbz	x0, 4161f4 <_obstack_memory_used@@Base+0x11c0>
  4161b4:	ldr	x8, [x19, #16]
  4161b8:	cbz	x8, 4161f4 <_obstack_memory_used@@Base+0x11c0>
  4161bc:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  4161c0:	ldr	x8, [x19, #16]
  4161c4:	cmp	x8, #0x2
  4161c8:	b.cc	4161f4 <_obstack_memory_used@@Base+0x11c0>  // b.lo, b.ul, b.last
  4161cc:	mov	w20, #0x1                   	// #1
  4161d0:	mov	w21, #0x10                  	// #16
  4161d4:	ldr	x8, [x19]
  4161d8:	add	x0, x8, x21
  4161dc:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  4161e0:	ldr	x8, [x19, #16]
  4161e4:	add	x20, x20, #0x1
  4161e8:	add	x21, x21, #0x10
  4161ec:	cmp	x20, x8
  4161f0:	b.cc	4161d4 <_obstack_memory_used@@Base+0x11a0>  // b.lo, b.ul, b.last
  4161f4:	ldr	x0, [x19, #24]
  4161f8:	bl	402770 <free@plt>
  4161fc:	ldr	x8, [x19, #16]
  416200:	cbz	x8, 416250 <_obstack_memory_used@@Base+0x121c>
  416204:	mov	x20, xzr
  416208:	mov	w21, #0x10                  	// #16
  41620c:	ldr	x8, [x19, #48]
  416210:	cbz	x8, 41621c <_obstack_memory_used@@Base+0x11e8>
  416214:	ldr	x0, [x8, x21]
  416218:	bl	402770 <free@plt>
  41621c:	ldr	x8, [x19, #56]
  416220:	cbz	x8, 41622c <_obstack_memory_used@@Base+0x11f8>
  416224:	ldr	x0, [x8, x21]
  416228:	bl	402770 <free@plt>
  41622c:	ldr	x8, [x19, #40]
  416230:	cbz	x8, 41623c <_obstack_memory_used@@Base+0x1208>
  416234:	ldr	x0, [x8, x21]
  416238:	bl	402770 <free@plt>
  41623c:	ldr	x8, [x19, #16]
  416240:	add	x20, x20, #0x1
  416244:	add	x21, x21, #0x18
  416248:	cmp	x20, x8
  41624c:	b.cc	41620c <_obstack_memory_used@@Base+0x11d8>  // b.lo, b.ul, b.last
  416250:	ldr	x0, [x19, #40]
  416254:	bl	402770 <free@plt>
  416258:	ldr	x0, [x19, #48]
  41625c:	bl	402770 <free@plt>
  416260:	ldr	x0, [x19, #56]
  416264:	bl	402770 <free@plt>
  416268:	ldr	x0, [x19]
  41626c:	bl	402770 <free@plt>
  416270:	ldr	x0, [x19, #64]
  416274:	cbz	x0, 4162d8 <_obstack_memory_used@@Base+0x12a4>
  416278:	mov	x20, xzr
  41627c:	mov	w21, #0x18                  	// #24
  416280:	madd	x23, x20, x21, x0
  416284:	mov	x22, x23
  416288:	ldr	x8, [x22], #16
  41628c:	cmp	x8, #0x1
  416290:	b.lt	4162b4 <_obstack_memory_used@@Base+0x1280>  // b.tstop
  416294:	mov	x24, xzr
  416298:	ldr	x8, [x22]
  41629c:	ldr	x0, [x8, x24, lsl #3]
  4162a0:	bl	418178 <_obstack_memory_used@@Base+0x3144>
  4162a4:	ldr	x8, [x23]
  4162a8:	add	x24, x24, #0x1
  4162ac:	cmp	x24, x8
  4162b0:	b.lt	416298 <_obstack_memory_used@@Base+0x1264>  // b.tstop
  4162b4:	ldr	x0, [x22]
  4162b8:	bl	402770 <free@plt>
  4162bc:	ldr	x8, [x19, #136]
  4162c0:	cmp	x20, x8
  4162c4:	b.cs	4162d4 <_obstack_memory_used@@Base+0x12a0>  // b.hs, b.nlast
  4162c8:	ldr	x0, [x19, #64]
  4162cc:	add	x20, x20, #0x1
  4162d0:	b	416280 <_obstack_memory_used@@Base+0x124c>
  4162d4:	ldr	x0, [x19, #64]
  4162d8:	bl	402770 <free@plt>
  4162dc:	ldr	x0, [x19, #120]
  4162e0:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4162e4:	add	x8, x8, #0xcb0
  4162e8:	cmp	x0, x8
  4162ec:	b.eq	4162f4 <_obstack_memory_used@@Base+0x12c0>  // b.none
  4162f0:	bl	402770 <free@plt>
  4162f4:	ldr	x0, [x19, #224]
  4162f8:	bl	402770 <free@plt>
  4162fc:	mov	x0, x19
  416300:	ldp	x20, x19, [sp, #48]
  416304:	ldp	x22, x21, [sp, #32]
  416308:	ldp	x24, x23, [sp, #16]
  41630c:	ldp	x29, x30, [sp], #64
  416310:	b	402770 <free@plt>
  416314:	cmp	w4, #0x7
  416318:	b.ls	416324 <_obstack_memory_used@@Base+0x12f0>  // b.plast
  41631c:	mov	w0, #0x2                   	// #2
  416320:	ret
  416324:	sub	sp, sp, #0x50
  416328:	str	x23, [sp, #32]
  41632c:	stp	x22, x21, [sp, #48]
  416330:	stp	x20, x19, [sp, #64]
  416334:	mov	w22, w4
  416338:	mov	x19, x3
  41633c:	mov	x21, x2
  416340:	mov	x20, x1
  416344:	mov	x23, x0
  416348:	stp	x29, x30, [sp, #16]
  41634c:	add	x29, sp, #0x10
  416350:	tbnz	w4, #2, 416368 <_obstack_memory_used@@Base+0x1334>
  416354:	mov	x0, x20
  416358:	bl	402380 <strlen@plt>
  41635c:	mov	x2, x0
  416360:	mov	x3, xzr
  416364:	b	41636c <_obstack_memory_used@@Base+0x1338>
  416368:	ldp	x3, x2, [x19]
  41636c:	ldrb	w8, [x23, #56]
  416370:	tbnz	w8, #4, 416394 <_obstack_memory_used@@Base+0x1360>
  416374:	mov	x0, x23
  416378:	mov	x1, x20
  41637c:	mov	x4, x2
  416380:	mov	x5, x2
  416384:	mov	x6, x21
  416388:	mov	x7, x19
  41638c:	str	w22, [sp]
  416390:	b	4163b0 <_obstack_memory_used@@Base+0x137c>
  416394:	str	w22, [sp]
  416398:	mov	x0, x23
  41639c:	mov	x1, x20
  4163a0:	mov	x4, x2
  4163a4:	mov	x5, x2
  4163a8:	mov	x6, xzr
  4163ac:	mov	x7, xzr
  4163b0:	bl	4163d4 <_obstack_memory_used@@Base+0x13a0>
  4163b4:	ldp	x20, x19, [sp, #64]
  4163b8:	ldp	x22, x21, [sp, #48]
  4163bc:	ldr	x23, [sp, #32]
  4163c0:	ldp	x29, x30, [sp, #16]
  4163c4:	cmp	w0, #0x0
  4163c8:	cset	w0, ne  // ne = any
  4163cc:	add	sp, sp, #0x50
  4163d0:	ret
  4163d4:	stp	x29, x30, [sp, #-96]!
  4163d8:	stp	x28, x27, [sp, #16]
  4163dc:	stp	x26, x25, [sp, #32]
  4163e0:	stp	x24, x23, [sp, #48]
  4163e4:	stp	x22, x21, [sp, #64]
  4163e8:	stp	x20, x19, [sp, #80]
  4163ec:	mov	x29, sp
  4163f0:	sub	sp, sp, #0x2f0
  4163f4:	ldr	x25, [x0]
  4163f8:	str	x2, [sp, #272]
  4163fc:	mov	x27, x0
  416400:	str	x1, [sp, #256]
  416404:	add	x0, sp, #0x120
  416408:	mov	w2, #0x100                 	// #256
  41640c:	mov	w1, wzr
  416410:	mov	x21, x7
  416414:	mov	x23, x6
  416418:	mov	x28, x5
  41641c:	mov	x19, x4
  416420:	mov	x26, x3
  416424:	bl	4025b0 <memset@plt>
  416428:	str	x25, [sp, #440]
  41642c:	ldr	x8, [x27, #32]
  416430:	cbz	x8, 416450 <_obstack_memory_used@@Base+0x141c>
  416434:	ldrb	w9, [x27, #56]
  416438:	mov	w10, #0x9                   	// #9
  41643c:	and	w9, w9, w10
  416440:	cmp	w9, #0x8
  416444:	ccmp	x26, x19, #0x4, eq  // eq = none
  416448:	csel	x22, x8, xzr, ne  // ne = any
  41644c:	b	416454 <_obstack_memory_used@@Base+0x1420>
  416450:	mov	x22, xzr
  416454:	ldr	x8, [x27, #48]
  416458:	ldr	x9, [x27, #16]
  41645c:	mvn	x10, x8
  416460:	add	x10, x10, x23
  416464:	cmp	x8, x23
  416468:	csel	x24, x10, xzr, cc  // cc = lo, ul, last
  41646c:	cbz	x9, 417b44 <_obstack_memory_used@@Base+0x2b10>
  416470:	ldr	x10, [x25, #72]
  416474:	cbz	x10, 417b44 <_obstack_memory_used@@Base+0x2b10>
  416478:	ldr	x9, [x25, #80]
  41647c:	cbz	x9, 417b44 <_obstack_memory_used@@Base+0x2b10>
  416480:	ldr	x8, [x25, #88]
  416484:	cbz	x8, 417b44 <_obstack_memory_used@@Base+0x2b10>
  416488:	ldr	x11, [x25, #96]
  41648c:	cbz	x11, 417b44 <_obstack_memory_used@@Base+0x2b10>
  416490:	ldr	x10, [x10, #16]
  416494:	ldr	x14, [x27, #40]
  416498:	cbnz	x10, 4164a4 <_obstack_memory_used@@Base+0x1470>
  41649c:	ldr	x9, [x9, #16]
  4164a0:	cbz	x9, 417b24 <_obstack_memory_used@@Base+0x2af0>
  4164a4:	mov	x20, x19
  4164a8:	sub	x8, x23, x24
  4164ac:	str	x8, [sp, #208]
  4164b0:	str	x23, [sp, #128]
  4164b4:	cbz	x8, 4164c0 <_obstack_memory_used@@Base+0x148c>
  4164b8:	mov	w8, #0x1                   	// #1
  4164bc:	b	4164cc <_obstack_memory_used@@Base+0x1498>
  4164c0:	ldr	x8, [x25, #152]
  4164c4:	cmp	x8, #0x0
  4164c8:	cset	w8, ne  // ne = any
  4164cc:	str	w8, [sp, #156]
  4164d0:	ldr	x8, [x25, #16]
  4164d4:	ldr	x12, [sp, #256]
  4164d8:	ldrsw	x10, [x25, #180]
  4164dc:	ldr	x9, [x27, #24]
  4164e0:	ldr	x13, [sp, #272]
  4164e4:	str	x12, [sp, #288]
  4164e8:	add	x12, x8, #0x1
  4164ec:	cmp	x12, x10
  4164f0:	add	x11, x13, #0x1
  4164f4:	and	x12, x9, #0x400000
  4164f8:	ubfx	x9, x9, #22, #1
  4164fc:	csinc	x8, x10, x8, lt  // lt = tstop
  416500:	strb	w9, [sp, #424]
  416504:	orr	x9, x14, x12
  416508:	cmp	x11, x8
  41650c:	csinc	x1, x8, x13, ge  // ge = tcont
  416510:	cmp	x9, #0x0
  416514:	cset	w8, ne  // ne = any
  416518:	stp	x13, x13, [sp, #368]
  41651c:	str	x14, [sp, #408]
  416520:	str	w10, [sp, #432]
  416524:	strb	w8, [sp, #427]
  416528:	ldrb	w8, [x25, #176]
  41652c:	add	x0, sp, #0x120
  416530:	str	x27, [sp, #248]
  416534:	str	x14, [sp, #200]
  416538:	ubfx	w9, w8, #2, #1
  41653c:	ubfx	w8, w8, #3, #1
  416540:	strb	w9, [sp, #425]
  416544:	strb	w8, [sp, #426]
  416548:	stp	x13, x13, [sp, #384]
  41654c:	bl	4182b0 <_obstack_memory_used@@Base+0x327c>
  416550:	cbnz	w0, 417cc4 <_obstack_memory_used@@Base+0x2c90>
  416554:	add	x8, x25, #0xb8
  416558:	str	x8, [sp, #416]
  41655c:	ldrb	w8, [x25, #176]
  416560:	ldrb	w9, [sp, #427]
  416564:	ldr	w10, [x29, #96]
  416568:	str	x24, [sp, #136]
  41656c:	ubfx	w8, w8, #4, #1
  416570:	strb	w8, [sp, #430]
  416574:	str	w10, [sp, #268]
  416578:	str	x21, [sp, #120]
  41657c:	cbz	w9, 416588 <_obstack_memory_used@@Base+0x1554>
  416580:	mov	x8, xzr
  416584:	b	4165a0 <_obstack_memory_used@@Base+0x156c>
  416588:	ldr	x8, [sp, #256]
  41658c:	str	x8, [sp, #296]
  416590:	ldr	w8, [x25, #180]
  416594:	cmp	w8, #0x1
  416598:	ldr	x8, [sp, #272]
  41659c:	csel	x8, xzr, x8, gt
  4165a0:	ldr	x9, [sp, #248]
  4165a4:	stp	x8, x8, [sp, #336]
  4165a8:	stp	x28, x28, [sp, #384]
  4165ac:	ldr	x28, [sp, #272]
  4165b0:	ldrb	w8, [x9, #56]
  4165b4:	ldr	w9, [sp, #268]
  4165b8:	lsr	w8, w8, #7
  4165bc:	strb	w8, [sp, #429]
  4165c0:	ldr	x23, [x25, #152]
  4165c4:	mov	x8, #0xffffffffffffffff    	// #-1
  4165c8:	str	w9, [sp, #448]
  4165cc:	str	x8, [sp, #456]
  4165d0:	lsl	x21, x23, #1
  4165d4:	cmp	x23, #0x1
  4165d8:	b.lt	416618 <_obstack_memory_used@@Base+0x15e4>  // b.tstop
  4165dc:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  4165e0:	movk	x8, #0x666, lsl #48
  4165e4:	cmp	x21, x8
  4165e8:	b.hi	417cd8 <_obstack_memory_used@@Base+0x2ca4>  // b.pmore
  4165ec:	add	x8, x23, x23, lsl #2
  4165f0:	lsl	x0, x8, #4
  4165f4:	bl	4024e0 <malloc@plt>
  4165f8:	mov	x19, x0
  4165fc:	str	x0, [sp, #504]
  416600:	lsl	x0, x23, #4
  416604:	bl	4024e0 <malloc@plt>
  416608:	mov	w27, #0xc                   	// #12
  41660c:	str	x0, [sp, #536]
  416610:	cbz	x19, 417c68 <_obstack_memory_used@@Base+0x2c34>
  416614:	cbz	x0, 417c68 <_obstack_memory_used@@Base+0x2c34>
  416618:	ldr	x9, [sp, #208]
  41661c:	mov	w8, #0x1                   	// #1
  416620:	str	x21, [sp, #496]
  416624:	str	w8, [sp, #512]
  416628:	cmp	x9, #0x1
  41662c:	str	x21, [sp, #528]
  416630:	b.hi	41663c <_obstack_memory_used@@Base+0x1608>  // b.pmore
  416634:	ldrb	w8, [x25, #176]
  416638:	tbz	w8, #1, 416660 <_obstack_memory_used@@Base+0x162c>
  41663c:	ldr	x8, [sp, #352]
  416640:	mov	x9, #0x1ffffffffffffffe    	// #2305843009213693950
  416644:	cmp	x8, x9
  416648:	b.hi	417cd8 <_obstack_memory_used@@Base+0x2ca4>  // b.pmore
  41664c:	lsl	x8, x8, #3
  416650:	add	x0, x8, #0x8
  416654:	bl	4024e0 <malloc@plt>
  416658:	str	x0, [sp, #472]
  41665c:	cbz	x0, 417cd8 <_obstack_memory_used@@Base+0x2ca4>
  416660:	ldr	w9, [sp, #268]
  416664:	mov	w10, #0x6                   	// #6
  416668:	stur	x26, [x29, #-208]
  41666c:	add	x8, sp, #0x120
  416670:	tst	w9, #0x1
  416674:	mov	w9, #0x4                   	// #4
  416678:	csel	w9, w10, w9, eq  // eq = none
  41667c:	str	w9, [sp, #400]
  416680:	ldr	w21, [x25, #180]
  416684:	cmp	x20, x26
  416688:	csel	x9, x20, x26, lt  // lt = tstop
  41668c:	csel	x24, x26, x20, lt  // lt = tstop
  416690:	str	x9, [sp, #240]
  416694:	cbz	x22, 4166ac <_obstack_memory_used@@Base+0x1678>
  416698:	ldr	x11, [sp, #200]
  41669c:	cmp	w21, #0x1
  4166a0:	b.ne	4166b4 <_obstack_memory_used@@Base+0x1680>  // b.any
  4166a4:	mov	w9, #0x4                   	// #4
  4166a8:	b	4166d0 <_obstack_memory_used@@Base+0x169c>
  4166ac:	mov	w9, #0x8                   	// #8
  4166b0:	b	4166e8 <_obstack_memory_used@@Base+0x16b4>
  4166b4:	ldr	x9, [sp, #248]
  4166b8:	ldr	x9, [x9, #24]
  4166bc:	and	x9, x9, #0x400000
  4166c0:	orr	x9, x11, x9
  4166c4:	cmp	x9, #0x0
  4166c8:	cset	w9, eq  // eq = none
  4166cc:	lsl	w9, w9, #2
  4166d0:	cmp	x20, x26
  4166d4:	cset	w10, ge  // ge = tcont
  4166d8:	cmp	x11, #0x0
  4166dc:	cset	w11, ne  // ne = any
  4166e0:	bfi	w11, w10, #1, #1
  4166e4:	orr	w9, w11, w9
  4166e8:	add	x23, x8, #0x38
  4166ec:	add	x8, sp, #0x120
  4166f0:	cmp	x20, x26
  4166f4:	sub	x10, x29, #0xd0
  4166f8:	add	x8, x8, #0xc0
  4166fc:	ldr	x19, [sp, #240]
  416700:	mov	x11, #0xffffffffffffffff    	// #-1
  416704:	str	x8, [sp, #176]
  416708:	csel	x8, xzr, x10, lt  // lt = tstop
  41670c:	sub	x12, x29, #0x40
  416710:	sub	w20, w9, #0x4
  416714:	cneg	x9, x11, ge  // ge = tcont
  416718:	cmp	x8, #0x0
  41671c:	str	x9, [sp, #280]
  416720:	add	x9, x12, #0x20
  416724:	str	x8, [sp, #160]
  416728:	cset	w8, ne  // ne = any
  41672c:	str	x9, [sp, #144]
  416730:	str	w8, [sp, #172]
  416734:	str	x25, [sp, #232]
  416738:	str	w21, [sp, #220]
  41673c:	str	x20, [sp, #192]
  416740:	cmp	w20, #0x4
  416744:	b.hi	4168a0 <_obstack_memory_used@@Base+0x186c>  // b.pmore
  416748:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41674c:	add	x10, x10, #0x9f3
  416750:	adr	x8, 416760 <_obstack_memory_used@@Base+0x172c>
  416754:	ldrb	w9, [x10, x20]
  416758:	add	x8, x8, x9, lsl #2
  41675c:	br	x8
  416760:	cmp	x26, x19
  416764:	b.lt	417aac <_obstack_memory_used@@Base+0x2a78>  // b.tstop
  416768:	ldr	x9, [sp, #256]
  41676c:	ldr	x10, [sp, #200]
  416770:	cmp	x26, x28
  416774:	b.ge	416784 <_obstack_memory_used@@Base+0x1750>  // b.tcont
  416778:	ldrb	w8, [x9, x26]
  41677c:	cbnz	x10, 41678c <_obstack_memory_used@@Base+0x1758>
  416780:	b	416790 <_obstack_memory_used@@Base+0x175c>
  416784:	mov	w8, wzr
  416788:	cbz	x10, 416790 <_obstack_memory_used@@Base+0x175c>
  41678c:	ldrb	w8, [x10, w8, uxtw]
  416790:	ldrb	w8, [x22, w8, uxtw]
  416794:	cbnz	w8, 416810 <_obstack_memory_used@@Base+0x17dc>
  416798:	cmp	x26, x19
  41679c:	sub	x26, x26, #0x1
  4167a0:	stur	x26, [x29, #-208]
  4167a4:	b.gt	416770 <_obstack_memory_used@@Base+0x173c>
  4167a8:	b	417aac <_obstack_memory_used@@Base+0x2a78>
  4167ac:	cmp	x26, x24
  4167b0:	b.ge	416808 <_obstack_memory_used@@Base+0x17d4>  // b.tcont
  4167b4:	ldr	x9, [sp, #256]
  4167b8:	ldr	x10, [sp, #200]
  4167bc:	ldrb	w8, [x9, x26]
  4167c0:	ldrb	w8, [x10, x8]
  4167c4:	ldrb	w8, [x22, x8]
  4167c8:	cbnz	w8, 416808 <_obstack_memory_used@@Base+0x17d4>
  4167cc:	add	x26, x26, #0x1
  4167d0:	cmp	x26, x24
  4167d4:	stur	x26, [x29, #-208]
  4167d8:	b.lt	4167bc <_obstack_memory_used@@Base+0x1788>  // b.tstop
  4167dc:	b	416808 <_obstack_memory_used@@Base+0x17d4>
  4167e0:	ldr	x9, [sp, #256]
  4167e4:	cmp	x26, x24
  4167e8:	b.ge	416808 <_obstack_memory_used@@Base+0x17d4>  // b.tcont
  4167ec:	ldrb	w8, [x9, x26]
  4167f0:	ldrb	w8, [x22, x8]
  4167f4:	cbnz	w8, 416808 <_obstack_memory_used@@Base+0x17d4>
  4167f8:	add	x26, x26, #0x1
  4167fc:	cmp	x26, x24
  416800:	stur	x26, [x29, #-208]
  416804:	b.lt	4167ec <_obstack_memory_used@@Base+0x17b8>  // b.tstop
  416808:	cmp	x26, x24
  41680c:	b.eq	4179e0 <_obstack_memory_used@@Base+0x29ac>  // b.none
  416810:	ldr	w2, [sp, #268]
  416814:	add	x0, sp, #0x120
  416818:	mov	x1, x26
  41681c:	bl	41ca58 <_obstack_memory_used@@Base+0x7a24>
  416820:	cbnz	w0, 417cc4 <_obstack_memory_used@@Base+0x2c90>
  416824:	cmp	w21, #0x1
  416828:	b.eq	416844 <_obstack_memory_used@@Base+0x1810>  // b.none
  41682c:	ldr	x8, [sp, #336]
  416830:	cbz	x8, 416844 <_obstack_memory_used@@Base+0x1810>
  416834:	ldr	x8, [sp, #304]
  416838:	ldr	w8, [x8]
  41683c:	cmn	w8, #0x1
  416840:	b.eq	417868 <_obstack_memory_used@@Base+0x2834>  // b.none
  416844:	ldr	x8, [sp, #176]
  416848:	str	wzr, [sp, #512]
  41684c:	stur	wzr, [x29, #-196]
  416850:	stp	xzr, xzr, [x8]
  416854:	ldr	x19, [sp, #440]
  416858:	ldr	x26, [sp, #360]
  41685c:	ldr	x28, [x19, #72]
  416860:	ldrsb	w8, [x28, #104]
  416864:	tbnz	w8, #31, 416870 <_obstack_memory_used@@Base+0x183c>
  416868:	ldr	w27, [sp, #172]
  41686c:	b	416920 <_obstack_memory_used@@Base+0x18ec>
  416870:	ldr	w2, [sp, #448]
  416874:	sub	x1, x26, #0x1
  416878:	add	x0, sp, #0x120
  41687c:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  416880:	ldr	w27, [sp, #172]
  416884:	tbnz	w0, #0, 41691c <_obstack_memory_used@@Base+0x18e8>
  416888:	mov	w3, w0
  41688c:	cbz	w0, 416920 <_obstack_memory_used@@Base+0x18ec>
  416890:	tbz	w3, #1, 417934 <_obstack_memory_used@@Base+0x2900>
  416894:	tbz	w3, #2, 417934 <_obstack_memory_used@@Base+0x2900>
  416898:	ldr	x28, [x19, #96]
  41689c:	b	416920 <_obstack_memory_used@@Base+0x18ec>
  4168a0:	ldr	x8, [sp, #328]
  4168a4:	ldr	x10, [sp, #344]
  4168a8:	sub	x9, x26, x8
  4168ac:	cmp	x9, x10
  4168b0:	b.cs	4168f8 <_obstack_memory_used@@Base+0x18c4>  // b.hs, b.nlast
  4168b4:	cmp	x26, x28
  4168b8:	b.ge	4168c8 <_obstack_memory_used@@Base+0x1894>  // b.tcont
  4168bc:	ldr	x10, [sp, #296]
  4168c0:	ldrb	w9, [x10, x9]
  4168c4:	b	4168cc <_obstack_memory_used@@Base+0x1898>
  4168c8:	mov	x9, xzr
  4168cc:	ldrb	w9, [x22, x9]
  4168d0:	cbnz	w9, 416810 <_obstack_memory_used@@Base+0x17dc>
  4168d4:	ldr	x9, [sp, #280]
  4168d8:	mov	w27, #0x1                   	// #1
  4168dc:	add	x26, x26, x9
  4168e0:	cmp	x26, x19
  4168e4:	stur	x26, [x29, #-208]
  4168e8:	b.lt	417c68 <_obstack_memory_used@@Base+0x2c34>  // b.tstop
  4168ec:	cmp	x26, x24
  4168f0:	b.le	4168a4 <_obstack_memory_used@@Base+0x1870>
  4168f4:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  4168f8:	ldr	w2, [sp, #268]
  4168fc:	add	x0, sp, #0x120
  416900:	mov	x1, x26
  416904:	bl	41ca58 <_obstack_memory_used@@Base+0x7a24>
  416908:	cbnz	w0, 417cc4 <_obstack_memory_used@@Base+0x2c90>
  41690c:	ldur	x26, [x29, #-208]
  416910:	ldr	x8, [sp, #328]
  416914:	sub	x9, x26, x8
  416918:	b	4168b4 <_obstack_memory_used@@Base+0x1880>
  41691c:	ldr	x28, [x19, #80]
  416920:	cbz	x28, 417cd4 <_obstack_memory_used@@Base+0x2ca0>
  416924:	ldr	x8, [sp, #472]
  416928:	mov	w20, w27
  41692c:	cbz	x8, 416940 <_obstack_memory_used@@Base+0x190c>
  416930:	str	x28, [x8, x26, lsl #3]
  416934:	ldr	x8, [x19, #152]
  416938:	mov	w20, w27
  41693c:	cbnz	x8, 4179a0 <_obstack_memory_used@@Base+0x296c>
  416940:	ldrsb	w8, [x28, #104]
  416944:	tbnz	w8, #4, 417984 <_obstack_memory_used@@Base+0x2950>
  416948:	str	xzr, [sp, #184]
  41694c:	mov	x27, #0xffffffffffffffff    	// #-1
  416950:	ldr	x9, [sp, #392]
  416954:	ldr	x8, [sp, #360]
  416958:	cmp	x9, x8
  41695c:	b.le	4176ac <_obstack_memory_used@@Base+0x2678>
  416960:	ldr	x9, [sp, #160]
  416964:	str	x9, [sp, #224]
  416968:	ldr	x10, [sp, #352]
  41696c:	ldr	x9, [sp, #376]
  416970:	add	x19, x8, #0x1
  416974:	mov	x25, x28
  416978:	cmp	x19, x10
  41697c:	b.lt	416988 <_obstack_memory_used@@Base+0x1954>  // b.tstop
  416980:	cmp	x10, x9
  416984:	b.lt	416c4c <_obstack_memory_used@@Base+0x1c18>  // b.tstop
  416988:	ldr	x10, [sp, #336]
  41698c:	cmp	x19, x10
  416990:	b.lt	41699c <_obstack_memory_used@@Base+0x1968>  // b.tstop
  416994:	cmp	x10, x9
  416998:	b.lt	416c4c <_obstack_memory_used@@Base+0x1c18>  // b.tstop
  41699c:	ldrb	w8, [x25, #104]
  4169a0:	tbnz	w8, #5, 416adc <_obstack_memory_used@@Base+0x1aa8>
  4169a4:	ldr	x8, [sp, #360]
  4169a8:	ldr	x9, [sp, #296]
  4169ac:	mov	x21, x25
  4169b0:	add	x10, x8, #0x1
  4169b4:	str	x10, [sp, #360]
  4169b8:	ldrb	w28, [x9, x8]
  4169bc:	ldr	x0, [x21, #88]!
  4169c0:	cbz	x0, 416d1c <_obstack_memory_used@@Base+0x1ce8>
  4169c4:	ldr	x28, [x0, x28, lsl #3]
  4169c8:	ldr	x8, [sp, #472]
  4169cc:	cbz	x8, 4169e4 <_obstack_memory_used@@Base+0x19b0>
  4169d0:	sub	x0, x29, #0xc4
  4169d4:	add	x1, sp, #0x120
  4169d8:	mov	x2, x28
  4169dc:	bl	41e084 <_obstack_memory_used@@Base+0x9050>
  4169e0:	mov	x28, x0
  4169e4:	cbz	x28, 416a08 <_obstack_memory_used@@Base+0x19d4>
  4169e8:	ldrsb	w8, [x28, #104]
  4169ec:	cmp	x25, x28
  4169f0:	cset	w21, eq  // eq = none
  4169f4:	tst	w20, w21
  4169f8:	csel	x26, x19, x26, ne  // ne = any
  4169fc:	tbnz	w8, #4, 416a84 <_obstack_memory_used@@Base+0x1a50>
  416a00:	ldr	x25, [sp, #232]
  416a04:	b	416ab8 <_obstack_memory_used@@Base+0x1a84>
  416a08:	ldur	w8, [x29, #-196]
  416a0c:	cbnz	w8, 417cd4 <_obstack_memory_used@@Base+0x2ca0>
  416a10:	ldr	x8, [sp, #184]
  416a14:	ldr	w9, [sp, #156]
  416a18:	cmp	x8, #0x0
  416a1c:	cset	w8, ne  // ne = any
  416a20:	bic	w8, w8, w9
  416a24:	tbnz	w8, #0, 417968 <_obstack_memory_used@@Base+0x2934>
  416a28:	ldr	x10, [sp, #472]
  416a2c:	ldr	w21, [sp, #220]
  416a30:	cbz	x10, 4176b8 <_obstack_memory_used@@Base+0x2684>
  416a34:	ldr	x8, [sp, #480]
  416a38:	ldr	x9, [sp, #360]
  416a3c:	add	x10, x10, #0x8
  416a40:	cmp	x9, x8
  416a44:	b.ge	4176b8 <_obstack_memory_used@@Base+0x2684>  // b.tcont
  416a48:	add	x11, x9, #0x1
  416a4c:	str	x11, [sp, #360]
  416a50:	ldr	x12, [x10, x9, lsl #3]
  416a54:	mov	x9, x11
  416a58:	cbz	x12, 416a40 <_obstack_memory_used@@Base+0x1a0c>
  416a5c:	sub	x0, x29, #0xc4
  416a60:	add	x1, sp, #0x120
  416a64:	mov	x2, xzr
  416a68:	bl	41e084 <_obstack_memory_used@@Base+0x9050>
  416a6c:	mov	x28, x0
  416a70:	cbnz	x0, 416ad4 <_obstack_memory_used@@Base+0x1aa0>
  416a74:	ldur	w8, [x29, #-196]
  416a78:	cbnz	w8, 416ad4 <_obstack_memory_used@@Base+0x1aa0>
  416a7c:	ldr	x10, [sp, #472]
  416a80:	b	416a34 <_obstack_memory_used@@Base+0x1a00>
  416a84:	ldr	x25, [sp, #232]
  416a88:	tbz	w8, #31, 416aa0 <_obstack_memory_used@@Base+0x1a6c>
  416a8c:	ldr	x2, [sp, #360]
  416a90:	add	x0, sp, #0x120
  416a94:	mov	x1, x28
  416a98:	bl	41d0ac <_obstack_memory_used@@Base+0x8078>
  416a9c:	cbz	x0, 416ab8 <_obstack_memory_used@@Base+0x1a84>
  416aa0:	ldr	x27, [sp, #360]
  416aa4:	ldr	w8, [sp, #156]
  416aa8:	cbz	w8, 41795c <_obstack_memory_used@@Base+0x2928>
  416aac:	mov	w8, #0x1                   	// #1
  416ab0:	str	xzr, [sp, #224]
  416ab4:	str	x8, [sp, #184]
  416ab8:	ldr	x9, [sp, #392]
  416abc:	ldr	x8, [sp, #360]
  416ac0:	and	w20, w20, w21
  416ac4:	ldr	w21, [sp, #220]
  416ac8:	cmp	x9, x8
  416acc:	b.gt	416968 <_obstack_memory_used@@Base+0x1934>
  416ad0:	b	4176bc <_obstack_memory_used@@Base+0x2688>
  416ad4:	cbnz	x28, 4169e8 <_obstack_memory_used@@Base+0x19b4>
  416ad8:	b	417968 <_obstack_memory_used@@Base+0x2934>
  416adc:	ldr	x8, [x25, #16]
  416ae0:	str	x23, [sp, #112]
  416ae4:	cmp	x8, #0x1
  416ae8:	b.lt	416c40 <_obstack_memory_used@@Base+0x1c0c>  // b.tstop
  416aec:	ldr	x8, [sp, #440]
  416af0:	mov	x21, xzr
  416af4:	str	x8, [sp, #104]
  416af8:	ldr	x8, [x25, #24]
  416afc:	ldr	x28, [x8, x21, lsl #3]
  416b00:	ldr	x8, [sp, #104]
  416b04:	ldr	x8, [x8]
  416b08:	add	x8, x8, x28, lsl #4
  416b0c:	ldr	w23, [x8, #8]
  416b10:	tbz	w23, #20, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b14:	ldr	x8, [sp, #360]
  416b18:	tst	w23, #0x3ff00
  416b1c:	str	x8, [sp, #96]
  416b20:	b.eq	416b58 <_obstack_memory_used@@Base+0x1b24>  // b.none
  416b24:	ldr	w2, [sp, #448]
  416b28:	ldr	x1, [sp, #96]
  416b2c:	add	x0, sp, #0x120
  416b30:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  416b34:	and	w8, w0, #0x1
  416b38:	tbz	w23, #10, 416b40 <_obstack_memory_used@@Base+0x1b0c>
  416b3c:	cbz	w8, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b40:	tbz	w23, #11, 416b48 <_obstack_memory_used@@Base+0x1b14>
  416b44:	cbnz	w8, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b48:	tbz	w23, #13, 416b50 <_obstack_memory_used@@Base+0x1b1c>
  416b4c:	tbz	w0, #1, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b50:	tbz	w23, #15, 416b58 <_obstack_memory_used@@Base+0x1b24>
  416b54:	tbz	w0, #3, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b58:	ldp	x3, x0, [sp, #96]
  416b5c:	add	x2, sp, #0x120
  416b60:	mov	x1, x28
  416b64:	bl	41f18c <_obstack_memory_used@@Base+0xa158>
  416b68:	cbz	w0, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416b6c:	ldr	x8, [sp, #360]
  416b70:	ldr	w9, [sp, #512]
  416b74:	add	x23, x8, w0, sxtw
  416b78:	cmp	w9, w0
  416b7c:	csel	w8, w0, w9, lt  // lt = tstop
  416b80:	add	x0, sp, #0x120
  416b84:	mov	x1, x23
  416b88:	str	w8, [sp, #512]
  416b8c:	bl	41e3f8 <_obstack_memory_used@@Base+0x93c4>
  416b90:	stur	w0, [x29, #-96]
  416b94:	cbnz	w0, 416c64 <_obstack_memory_used@@Base+0x1c30>
  416b98:	ldr	x10, [sp, #104]
  416b9c:	ldr	x9, [sp, #472]
  416ba0:	ldr	x8, [x10, #24]
  416ba4:	ldr	x10, [x10, #48]
  416ba8:	ldr	x8, [x8, x28, lsl #3]
  416bac:	ldr	x28, [x9, x23, lsl #3]
  416bb0:	mov	w9, #0x18                  	// #24
  416bb4:	madd	x2, x8, x9, x10
  416bb8:	cbz	x28, 416bd4 <_obstack_memory_used@@Base+0x1ba0>
  416bbc:	ldr	x1, [x28, #80]
  416bc0:	sub	x0, x29, #0x40
  416bc4:	bl	41e1cc <_obstack_memory_used@@Base+0x9198>
  416bc8:	stur	w0, [x29, #-96]
  416bcc:	cbz	w0, 416be4 <_obstack_memory_used@@Base+0x1bb0>
  416bd0:	b	416c64 <_obstack_memory_used@@Base+0x1c30>
  416bd4:	ldr	x8, [x2, #16]
  416bd8:	ldr	q0, [x2]
  416bdc:	stur	x8, [x29, #-48]
  416be0:	stur	q0, [x29, #-64]
  416be4:	ldr	w2, [sp, #448]
  416be8:	sub	x1, x23, #0x1
  416bec:	add	x0, sp, #0x120
  416bf0:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  416bf4:	ldr	x1, [sp, #104]
  416bf8:	mov	w3, w0
  416bfc:	sub	x0, x29, #0x60
  416c00:	sub	x2, x29, #0x40
  416c04:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  416c08:	ldr	x8, [sp, #472]
  416c0c:	str	x0, [x8, x23, lsl #3]
  416c10:	cbz	x28, 416c1c <_obstack_memory_used@@Base+0x1be8>
  416c14:	ldur	x0, [x29, #-48]
  416c18:	bl	402770 <free@plt>
  416c1c:	ldr	x8, [sp, #472]
  416c20:	ldr	x8, [x8, x23, lsl #3]
  416c24:	cbnz	x8, 416c30 <_obstack_memory_used@@Base+0x1bfc>
  416c28:	ldur	w0, [x29, #-96]
  416c2c:	cbnz	w0, 416c64 <_obstack_memory_used@@Base+0x1c30>
  416c30:	ldr	x8, [x25, #16]
  416c34:	add	x21, x21, #0x1
  416c38:	cmp	x21, x8
  416c3c:	b.lt	416af8 <_obstack_memory_used@@Base+0x1ac4>  // b.tstop
  416c40:	ldr	x23, [sp, #112]
  416c44:	stur	wzr, [x29, #-196]
  416c48:	b	4169a4 <_obstack_memory_used@@Base+0x1970>
  416c4c:	add	w1, w8, #0x2
  416c50:	add	x0, sp, #0x120
  416c54:	bl	41dfbc <_obstack_memory_used@@Base+0x8f88>
  416c58:	stur	w0, [x29, #-196]
  416c5c:	cbz	w0, 41699c <_obstack_memory_used@@Base+0x1968>
  416c60:	b	417cd4 <_obstack_memory_used@@Base+0x2ca0>
  416c64:	mov	x28, xzr
  416c68:	stur	w0, [x29, #-196]
  416c6c:	b	417600 <_obstack_memory_used@@Base+0x25cc>
  416c70:	ldr	x0, [sp, #72]
  416c74:	bl	402770 <free@plt>
  416c78:	ldr	x8, [sp, #96]
  416c7c:	cbz	x8, 417568 <_obstack_memory_used@@Base+0x2534>
  416c80:	b	417688 <_obstack_memory_used@@Base+0x2654>
  416c84:	mov	w0, #0x8                   	// #8
  416c88:	mov	w1, #0x200                 	// #512
  416c8c:	bl	4025d0 <calloc@plt>
  416c90:	str	x0, [x25, #96]
  416c94:	cbz	x0, 41760c <_obstack_memory_used@@Base+0x25d8>
  416c98:	ldp	x11, x10, [sp, #56]
  416c9c:	mov	x8, xzr
  416ca0:	mov	x9, xzr
  416ca4:	sub	x10, x10, #0x8
  416ca8:	ldr	x12, [x23, x9, lsl #3]
  416cac:	cbz	x12, 416d04 <_obstack_memory_used@@Base+0x1cd0>
  416cb0:	mov	x13, x8
  416cb4:	mov	w14, #0x1                   	// #1
  416cb8:	tbnz	w12, #0, 416cd0 <_obstack_memory_used@@Base+0x1c9c>
  416cbc:	lsl	x14, x14, #1
  416cc0:	lsr	x12, x12, #1
  416cc4:	add	x13, x13, #0x1
  416cc8:	cbnz	x12, 416cb8 <_obstack_memory_used@@Base+0x1c84>
  416ccc:	b	416d04 <_obstack_memory_used@@Base+0x1cd0>
  416cd0:	mov	x16, x11
  416cd4:	mov	x15, x10
  416cd8:	ldr	x17, [x16], #32
  416cdc:	add	x15, x15, #0x8
  416ce0:	tst	x17, x14
  416ce4:	b.eq	416cd8 <_obstack_memory_used@@Base+0x1ca4>  // b.none
  416ce8:	ldr	x17, [sp, #96]
  416cec:	ldr	x16, [x15]
  416cf0:	ldr	x15, [x15, x17, lsl #3]
  416cf4:	add	x17, x0, x13, lsl #3
  416cf8:	str	x16, [x17]
  416cfc:	str	x15, [x17, #2048]
  416d00:	b	416cbc <_obstack_memory_used@@Base+0x1c88>
  416d04:	add	x9, x9, #0x1
  416d08:	add	x8, x8, #0x40
  416d0c:	cmp	x9, #0x4
  416d10:	add	x11, x11, #0x8
  416d14:	b.ne	416ca8 <_obstack_memory_used@@Base+0x1c74>  // b.any
  416d18:	b	417524 <_obstack_memory_used@@Base+0x24f0>
  416d1c:	str	x23, [sp, #112]
  416d20:	ldr	x23, [x25, #96]
  416d24:	cbnz	x23, 4175e0 <_obstack_memory_used@@Base+0x25ac>
  416d28:	ldr	x8, [sp, #440]
  416d2c:	mov	w0, #0x3800                	// #14336
  416d30:	str	x8, [sp, #88]
  416d34:	bl	4024e0 <malloc@plt>
  416d38:	str	x0, [sp, #72]
  416d3c:	cbz	x0, 417688 <_obstack_memory_used@@Base+0x2654>
  416d40:	movi	v0.2d, #0x0
  416d44:	stp	xzr, xzr, [x21]
  416d48:	stp	q0, q0, [x29, #-64]
  416d4c:	ldr	x8, [x25, #16]
  416d50:	cmp	x8, #0x0
  416d54:	b.le	417560 <_obstack_memory_used@@Base+0x252c>
  416d58:	ldr	x9, [sp, #72]
  416d5c:	mov	w8, #0x1800                	// #6144
  416d60:	str	xzr, [sp, #96]
  416d64:	add	x8, x9, x8
  416d68:	stp	x8, xzr, [sp, #56]
  416d6c:	ldr	x8, [sp, #88]
  416d70:	add	x8, x8, #0xb8
  416d74:	str	x8, [sp, #16]
  416d78:	ldr	x8, [x25, #24]
  416d7c:	ldr	x9, [sp, #88]
  416d80:	ldr	x10, [sp, #64]
  416d84:	ldr	x9, [x9]
  416d88:	ldr	x8, [x8, x10, lsl #3]
  416d8c:	add	x8, x9, x8, lsl #4
  416d90:	str	x8, [sp, #24]
  416d94:	ldr	w8, [x8, #8]
  416d98:	and	w9, w8, #0xff
  416d9c:	cmp	w9, #0x1
  416da0:	str	w9, [sp, #80]
  416da4:	b.ne	416dd4 <_obstack_memory_used@@Base+0x1da0>  // b.any
  416da8:	ldr	x9, [sp, #24]
  416dac:	sub	x12, x29, #0x40
  416db0:	mov	w13, #0x1                   	// #1
  416db4:	ldrb	w9, [x9]
  416db8:	lsr	x10, x9, #3
  416dbc:	and	x10, x10, #0x18
  416dc0:	ldr	x11, [x12, x10]
  416dc4:	lsl	x9, x13, x9
  416dc8:	orr	x9, x9, x11
  416dcc:	str	x9, [x12, x10]
  416dd0:	b	416ed0 <_obstack_memory_used@@Base+0x1e9c>
  416dd4:	ldr	w9, [sp, #80]
  416dd8:	cmp	w9, #0x7
  416ddc:	b.eq	416e28 <_obstack_memory_used@@Base+0x1df4>  // b.none
  416de0:	ldr	w9, [sp, #80]
  416de4:	cmp	w9, #0x5
  416de8:	b.eq	416e60 <_obstack_memory_used@@Base+0x1e2c>  // b.none
  416dec:	ldr	w9, [sp, #80]
  416df0:	cmp	w9, #0x3
  416df4:	b.ne	41723c <_obstack_memory_used@@Base+0x2208>  // b.any
  416df8:	ldr	x9, [sp, #24]
  416dfc:	mov	x10, xzr
  416e00:	ldr	x9, [x9]
  416e04:	sub	x11, x29, #0x40
  416e08:	ldr	q0, [x9, x10]
  416e0c:	ldr	q1, [x11, x10]
  416e10:	orr	v0.16b, v1.16b, v0.16b
  416e14:	str	q0, [x11, x10]
  416e18:	add	x10, x10, #0x10
  416e1c:	cmp	x10, #0x20
  416e20:	b.ne	416e04 <_obstack_memory_used@@Base+0x1dd0>  // b.any
  416e24:	b	416ed0 <_obstack_memory_used@@Base+0x1e9c>
  416e28:	mov	x9, #0xffffffffffffffff    	// #-1
  416e2c:	stp	x9, x9, [x29, #-64]
  416e30:	ldr	x9, [sp, #88]
  416e34:	ldr	x9, [x9, #216]
  416e38:	tbz	w9, #6, 416e40 <_obstack_memory_used@@Base+0x1e0c>
  416e3c:	tbz	w9, #7, 416ed0 <_obstack_memory_used@@Base+0x1e9c>
  416e40:	tst	x9, #0x40
  416e44:	mov	x10, #0xfffffffffffffffe    	// #-2
  416e48:	mov	x11, #0xfffffffffffffbfe    	// #-1026
  416e4c:	csel	x10, x11, x10, eq  // eq = none
  416e50:	tst	x9, #0x80
  416e54:	mov	x9, #0xfffffffffffffbff    	// #-1025
  416e58:	csel	x9, x9, x10, eq  // eq = none
  416e5c:	b	416ecc <_obstack_memory_used@@Base+0x1e98>
  416e60:	ldr	x9, [sp, #88]
  416e64:	ldr	w9, [x9, #180]
  416e68:	cmp	w9, #0x2
  416e6c:	b.lt	416ea0 <_obstack_memory_used@@Base+0x1e6c>  // b.tstop
  416e70:	ldr	x9, [sp, #88]
  416e74:	mov	x10, xzr
  416e78:	ldr	x9, [x9, #120]
  416e7c:	sub	x11, x29, #0x40
  416e80:	ldr	q0, [x9, x10]
  416e84:	ldr	q1, [x11, x10]
  416e88:	orr	v0.16b, v1.16b, v0.16b
  416e8c:	str	q0, [x11, x10]
  416e90:	add	x10, x10, #0x10
  416e94:	cmp	x10, #0x20
  416e98:	b.ne	416e7c <_obstack_memory_used@@Base+0x1e48>  // b.any
  416e9c:	b	416ea8 <_obstack_memory_used@@Base+0x1e74>
  416ea0:	movi	v0.2d, #0xffffffffffffffff
  416ea4:	stp	q0, q0, [x29, #-64]
  416ea8:	ldr	x9, [sp, #88]
  416eac:	ldr	x9, [x9, #216]
  416eb0:	tbnz	w9, #6, 416ec0 <_obstack_memory_used@@Base+0x1e8c>
  416eb4:	ldur	x10, [x29, #-64]
  416eb8:	and	x10, x10, #0xfffffffffffffbff
  416ebc:	stur	x10, [x29, #-64]
  416ec0:	tbz	w9, #7, 416ed0 <_obstack_memory_used@@Base+0x1e9c>
  416ec4:	ldur	x9, [x29, #-64]
  416ec8:	and	x9, x9, #0xfffffffffffffffe
  416ecc:	stur	x9, [x29, #-64]
  416ed0:	and	w9, w8, #0x3ff00
  416ed4:	cbz	w9, 41704c <_obstack_memory_used@@Base+0x2018>
  416ed8:	tbz	w8, #13, 416ef4 <_obstack_memory_used@@Base+0x1ec0>
  416edc:	ldur	x9, [x29, #-64]
  416ee0:	movi	v0.2d, #0x0
  416ee4:	stp	q0, q0, [x29, #-64]
  416ee8:	tbz	w9, #10, 41723c <_obstack_memory_used@@Base+0x2208>
  416eec:	mov	w9, #0x400                 	// #1024
  416ef0:	stur	x9, [x29, #-64]
  416ef4:	tbnz	w8, #15, 417234 <_obstack_memory_used@@Base+0x2200>
  416ef8:	tbz	w8, #10, 416fa4 <_obstack_memory_used@@Base+0x1f70>
  416efc:	mov	w9, #0xff                  	// #255
  416f00:	movk	w9, #0x40, lsl #16
  416f04:	and	w9, w8, w9
  416f08:	cmp	w9, #0x1
  416f0c:	b.eq	417234 <_obstack_memory_used@@Base+0x2200>  // b.none
  416f10:	ldr	x9, [sp, #88]
  416f14:	ldr	w9, [x9, #180]
  416f18:	cmp	w9, #0x1
  416f1c:	b.le	416f64 <_obstack_memory_used@@Base+0x1f30>
  416f20:	ldr	x10, [sp, #88]
  416f24:	mov	x9, xzr
  416f28:	movi	v0.2d, #0x0
  416f2c:	ldr	x10, [x10, #120]
  416f30:	ldr	x11, [sp, #16]
  416f34:	ldr	q2, [x10, x9]
  416f38:	ldr	q1, [x11, x9]
  416f3c:	sub	x11, x29, #0x40
  416f40:	ldr	q3, [x11, x9]
  416f44:	orn	v1.16b, v1.16b, v2.16b
  416f48:	and	v1.16b, v3.16b, v1.16b
  416f4c:	str	q1, [x11, x9]
  416f50:	add	x9, x9, #0x10
  416f54:	cmp	x9, #0x20
  416f58:	orr	v0.16b, v1.16b, v0.16b
  416f5c:	b.ne	416f30 <_obstack_memory_used@@Base+0x1efc>  // b.any
  416f60:	b	416f94 <_obstack_memory_used@@Base+0x1f60>
  416f64:	mov	x9, xzr
  416f68:	movi	v0.2d, #0x0
  416f6c:	ldr	x10, [sp, #16]
  416f70:	ldr	q1, [x10, x9]
  416f74:	sub	x10, x29, #0x40
  416f78:	ldr	q2, [x10, x9]
  416f7c:	and	v1.16b, v2.16b, v1.16b
  416f80:	str	q1, [x10, x9]
  416f84:	add	x9, x9, #0x10
  416f88:	cmp	x9, #0x20
  416f8c:	orr	v0.16b, v1.16b, v0.16b
  416f90:	b.ne	416f6c <_obstack_memory_used@@Base+0x1f38>  // b.any
  416f94:	dup	v1.2d, v0.d[1]
  416f98:	orr	v0.16b, v0.16b, v1.16b
  416f9c:	fmov	x9, d0
  416fa0:	cbz	x9, 41723c <_obstack_memory_used@@Base+0x2208>
  416fa4:	tbz	w8, #11, 41704c <_obstack_memory_used@@Base+0x2018>
  416fa8:	tbz	w8, #22, 416fb8 <_obstack_memory_used@@Base+0x1f84>
  416fac:	ldr	w8, [sp, #80]
  416fb0:	cmp	w8, #0x1
  416fb4:	b.eq	417234 <_obstack_memory_used@@Base+0x2200>  // b.none
  416fb8:	ldr	x8, [sp, #88]
  416fbc:	ldr	w8, [x8, #180]
  416fc0:	cmp	w8, #0x1
  416fc4:	b.le	41700c <_obstack_memory_used@@Base+0x1fd8>
  416fc8:	ldr	x9, [sp, #88]
  416fcc:	mov	x8, xzr
  416fd0:	movi	v0.2d, #0x0
  416fd4:	ldr	x9, [x9, #120]
  416fd8:	ldr	x10, [sp, #16]
  416fdc:	ldr	q2, [x9, x8]
  416fe0:	ldr	q1, [x10, x8]
  416fe4:	sub	x10, x29, #0x40
  416fe8:	ldr	q3, [x10, x8]
  416fec:	and	v1.16b, v2.16b, v1.16b
  416ff0:	bic	v1.16b, v3.16b, v1.16b
  416ff4:	str	q1, [x10, x8]
  416ff8:	add	x8, x8, #0x10
  416ffc:	cmp	x8, #0x20
  417000:	orr	v0.16b, v1.16b, v0.16b
  417004:	b.ne	416fd8 <_obstack_memory_used@@Base+0x1fa4>  // b.any
  417008:	b	41703c <_obstack_memory_used@@Base+0x2008>
  41700c:	mov	x8, xzr
  417010:	movi	v0.2d, #0x0
  417014:	ldr	x9, [sp, #16]
  417018:	ldr	q1, [x9, x8]
  41701c:	sub	x9, x29, #0x40
  417020:	ldr	q2, [x9, x8]
  417024:	bic	v1.16b, v2.16b, v1.16b
  417028:	str	q1, [x9, x8]
  41702c:	add	x8, x8, #0x10
  417030:	cmp	x8, #0x20
  417034:	orr	v0.16b, v1.16b, v0.16b
  417038:	b.ne	417014 <_obstack_memory_used@@Base+0x1fe0>  // b.any
  41703c:	dup	v1.2d, v0.d[1]
  417040:	orr	v0.16b, v0.16b, v1.16b
  417044:	fmov	x8, d0
  417048:	cbz	x8, 41723c <_obstack_memory_used@@Base+0x2208>
  41704c:	ldr	x8, [sp, #96]
  417050:	cmp	x8, #0x1
  417054:	b.lt	4171c8 <_obstack_memory_used@@Base+0x2194>  // b.tstop
  417058:	ldr	x23, [sp, #56]
  41705c:	str	xzr, [sp, #104]
  417060:	ldr	w8, [sp, #80]
  417064:	cmp	w8, #0x1
  417068:	b.ne	417094 <_obstack_memory_used@@Base+0x2060>  // b.any
  41706c:	ldr	x8, [sp, #24]
  417070:	ldr	x10, [sp, #56]
  417074:	ldr	x11, [sp, #104]
  417078:	ldrb	w8, [x8]
  41707c:	add	x10, x10, x11, lsl #5
  417080:	lsr	x9, x8, #3
  417084:	and	x9, x9, #0x18
  417088:	ldr	x9, [x10, x9]
  41708c:	lsr	x8, x9, x8
  417090:	tbz	w8, #0, 4171ac <_obstack_memory_used@@Base+0x2178>
  417094:	mov	x8, xzr
  417098:	movi	v0.2d, #0x0
  41709c:	sub	x9, x29, #0x40
  4170a0:	sub	x10, x29, #0x60
  4170a4:	mov	x11, x23
  4170a8:	ldr	q1, [x9, x8]
  4170ac:	ldr	q2, [x11, x8]
  4170b0:	and	v1.16b, v2.16b, v1.16b
  4170b4:	str	q1, [x10, x8]
  4170b8:	add	x8, x8, #0x10
  4170bc:	cmp	x8, #0x20
  4170c0:	orr	v0.16b, v1.16b, v0.16b
  4170c4:	b.ne	4170a8 <_obstack_memory_used@@Base+0x2074>  // b.any
  4170c8:	dup	v1.2d, v0.d[1]
  4170cc:	orr	v0.16b, v0.16b, v1.16b
  4170d0:	fmov	x8, d0
  4170d4:	cbz	x8, 4171ac <_obstack_memory_used@@Base+0x2178>
  4170d8:	mov	x8, xzr
  4170dc:	movi	v4.2d, #0x0
  4170e0:	movi	v0.2d, #0x0
  4170e4:	sub	x9, x29, #0x40
  4170e8:	sub	x10, x29, #0x80
  4170ec:	mov	x11, x23
  4170f0:	ldr	q1, [x9, x8]
  4170f4:	ldr	q2, [x11, x8]
  4170f8:	bic	v3.16b, v2.16b, v1.16b
  4170fc:	bic	v1.16b, v1.16b, v2.16b
  417100:	str	q3, [x10, x8]
  417104:	str	q1, [x9, x8]
  417108:	add	x8, x8, #0x10
  41710c:	orr	v0.16b, v3.16b, v0.16b
  417110:	cmp	x8, #0x20
  417114:	orr	v4.16b, v1.16b, v4.16b
  417118:	b.ne	4170f0 <_obstack_memory_used@@Base+0x20bc>  // b.any
  41711c:	dup	v1.2d, v0.d[1]
  417120:	orr	v0.16b, v0.16b, v1.16b
  417124:	fmov	x8, d0
  417128:	str	q4, [sp, #32]
  41712c:	cbz	x8, 417174 <_obstack_memory_used@@Base+0x2140>
  417130:	ldp	x12, x13, [sp, #96]
  417134:	ldr	x9, [sp, #56]
  417138:	ldr	x11, [sp, #72]
  41713c:	ldp	q0, q1, [x29, #-128]
  417140:	ldp	q2, q3, [x29, #-96]
  417144:	mov	w10, #0x18                  	// #24
  417148:	add	x8, x9, x12, lsl #5
  41714c:	add	x9, x9, x13, lsl #5
  417150:	madd	x0, x12, x10, x11
  417154:	madd	x1, x13, x10, x11
  417158:	stp	q0, q1, [x8]
  41715c:	stp	q2, q3, [x9]
  417160:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  417164:	cbnz	w0, 41764c <_obstack_memory_used@@Base+0x2618>
  417168:	ldr	x8, [sp, #96]
  41716c:	add	x8, x8, #0x1
  417170:	str	x8, [sp, #96]
  417174:	ldr	x8, [x25, #24]
  417178:	ldr	x9, [sp, #64]
  41717c:	ldr	x10, [sp, #104]
  417180:	ldr	x1, [x8, x9, lsl #3]
  417184:	ldr	x9, [sp, #72]
  417188:	mov	w8, #0x18                  	// #24
  41718c:	madd	x0, x10, x8, x9
  417190:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  417194:	tbz	w0, #0, 41764c <_obstack_memory_used@@Base+0x2618>
  417198:	ldr	q1, [sp, #32]
  41719c:	dup	v0.2d, v1.d[1]
  4171a0:	orr	v0.16b, v1.16b, v0.16b
  4171a4:	fmov	x8, d0
  4171a8:	cbz	x8, 4171cc <_obstack_memory_used@@Base+0x2198>
  4171ac:	ldp	x8, x9, [sp, #96]
  4171b0:	add	x23, x23, #0x20
  4171b4:	add	x9, x9, #0x1
  4171b8:	cmp	x9, x8
  4171bc:	str	x9, [sp, #104]
  4171c0:	b.lt	417060 <_obstack_memory_used@@Base+0x202c>  // b.tstop
  4171c4:	b	4171cc <_obstack_memory_used@@Base+0x2198>
  4171c8:	str	xzr, [sp, #104]
  4171cc:	ldp	x8, x9, [sp, #96]
  4171d0:	cmp	x9, x8
  4171d4:	b.ne	41723c <_obstack_memory_used@@Base+0x2208>  // b.any
  4171d8:	ldp	x8, x9, [sp, #56]
  4171dc:	ldr	x10, [sp, #104]
  4171e0:	ldp	q1, q0, [x29, #-64]
  4171e4:	mov	w0, #0x8                   	// #8
  4171e8:	add	x8, x8, x10, lsl #5
  4171ec:	stp	q1, q0, [x8]
  4171f0:	ldr	x8, [x25, #24]
  4171f4:	ldr	x8, [x8, x9, lsl #3]
  4171f8:	ldr	x9, [sp, #72]
  4171fc:	str	x8, [sp, #96]
  417200:	mov	w8, #0x18                  	// #24
  417204:	madd	x23, x10, x8, x9
  417208:	mov	w8, #0x1                   	// #1
  41720c:	dup	v0.2d, x8
  417210:	str	q0, [x23]
  417214:	bl	4024e0 <malloc@plt>
  417218:	str	x0, [x23, #16]
  41721c:	cbz	x0, 417698 <_obstack_memory_used@@Base+0x2664>
  417220:	ldr	x8, [sp, #96]
  417224:	str	x8, [x0]
  417228:	ldr	x8, [sp, #104]
  41722c:	add	x8, x8, #0x1
  417230:	str	x8, [sp, #96]
  417234:	movi	v0.2d, #0x0
  417238:	stp	q0, q0, [x29, #-64]
  41723c:	ldr	x9, [sp, #64]
  417240:	ldr	x8, [x25, #16]
  417244:	add	x9, x9, #0x1
  417248:	cmp	x9, x8
  41724c:	str	x9, [sp, #64]
  417250:	b.lt	416d78 <_obstack_memory_used@@Base+0x1d44>  // b.tstop
  417254:	ldr	x8, [sp, #96]
  417258:	cmp	x8, #0x0
  41725c:	b.le	416c70 <_obstack_memory_used@@Base+0x1c3c>
  417260:	ldr	x8, [sp, #96]
  417264:	add	x8, x8, #0x1
  417268:	lsl	x0, x8, #3
  41726c:	stp	x8, xzr, [x29, #-160]
  417270:	bl	4024e0 <malloc@plt>
  417274:	cmp	x0, #0x0
  417278:	mov	w8, #0xc                   	// #12
  41727c:	mov	x23, x0
  417280:	csel	w8, w8, wzr, eq  // eq = none
  417284:	stur	x0, [x29, #-144]
  417288:	stur	w8, [x29, #-132]
  41728c:	cbz	x0, 4176a0 <_obstack_memory_used@@Base+0x266c>
  417290:	ldr	x8, [sp, #96]
  417294:	add	x8, x8, x8, lsl #1
  417298:	lsl	x0, x8, #3
  41729c:	bl	4024e0 <malloc@plt>
  4172a0:	str	x0, [sp, #64]
  4172a4:	cbz	x0, 4176a0 <_obstack_memory_used@@Base+0x266c>
  4172a8:	ldr	x9, [sp, #96]
  4172ac:	ldr	x10, [sp, #64]
  4172b0:	mov	w8, wzr
  4172b4:	movi	v0.2d, #0x0
  4172b8:	str	xzr, [sp, #80]
  4172bc:	add	x10, x10, x9, lsl #3
  4172c0:	add	x9, x10, x9, lsl #3
  4172c4:	stp	x9, x10, [sp, #16]
  4172c8:	ldr	x9, [sp, #56]
  4172cc:	str	wzr, [sp, #12]
  4172d0:	stp	q0, q0, [x29, #-192]
  4172d4:	str	x9, [sp, #32]
  4172d8:	ldp	x10, x11, [sp, #72]
  4172dc:	mov	w9, #0x18                  	// #24
  4172e0:	stur	xzr, [x29, #-152]
  4172e4:	madd	x9, x11, x9, x10
  4172e8:	ldr	x9, [x9, #8]
  4172ec:	cmp	x9, #0x1
  4172f0:	b.lt	417358 <_obstack_memory_used@@Base+0x2324>  // b.tstop
  4172f4:	ldp	x10, x11, [sp, #72]
  4172f8:	mov	x12, x9
  4172fc:	mov	w9, #0x18                  	// #24
  417300:	madd	x9, x11, x9, x10
  417304:	ldr	x23, [x9, #16]
  417308:	ldr	x11, [sp, #88]
  41730c:	ldr	x9, [x11, #24]
  417310:	ldr	x10, [x23]
  417314:	ldr	x9, [x9, x10, lsl #3]
  417318:	cmn	x9, #0x1
  41731c:	b.eq	417348 <_obstack_memory_used@@Base+0x2314>  // b.none
  417320:	ldr	x8, [x11, #48]
  417324:	mov	w10, #0x18                  	// #24
  417328:	sub	x0, x29, #0xa0
  41732c:	str	x12, [sp, #104]
  417330:	madd	x1, x9, x10, x8
  417334:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  417338:	cbnz	w0, 417608 <_obstack_memory_used@@Base+0x25d4>
  41733c:	ldr	x11, [sp, #88]
  417340:	ldr	x12, [sp, #104]
  417344:	mov	w8, wzr
  417348:	subs	x12, x12, #0x1
  41734c:	add	x23, x23, #0x8
  417350:	b.ne	41730c <_obstack_memory_used@@Base+0x22d8>  // b.any
  417354:	stur	w8, [x29, #-132]
  417358:	ldr	x1, [sp, #88]
  41735c:	sub	x0, x29, #0x84
  417360:	sub	x2, x29, #0xa0
  417364:	mov	w3, wzr
  417368:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41736c:	ldur	w8, [x29, #-132]
  417370:	ldr	x9, [sp, #64]
  417374:	ldr	x10, [sp, #80]
  417378:	str	x0, [x9, x10, lsl #3]
  41737c:	cbnz	x0, 417384 <_obstack_memory_used@@Base+0x2350>
  417380:	cbnz	w8, 41760c <_obstack_memory_used@@Base+0x25d8>
  417384:	ldrsb	w9, [x0, #104]
  417388:	tbnz	w9, #31, 4173a8 <_obstack_memory_used@@Base+0x2374>
  41738c:	ldp	x11, x9, [sp, #16]
  417390:	ldr	x10, [sp, #80]
  417394:	str	x0, [x9, x10, lsl #3]
  417398:	ldr	x9, [sp, #64]
  41739c:	ldr	x9, [x9, x10, lsl #3]
  4173a0:	str	x9, [x11, x10, lsl #3]
  4173a4:	b	417430 <_obstack_memory_used@@Base+0x23fc>
  4173a8:	ldr	x1, [sp, #88]
  4173ac:	sub	x0, x29, #0x84
  4173b0:	sub	x2, x29, #0xa0
  4173b4:	mov	w3, #0x1                   	// #1
  4173b8:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  4173bc:	ldr	x8, [sp, #24]
  4173c0:	ldr	x9, [sp, #80]
  4173c4:	str	x0, [x8, x9, lsl #3]
  4173c8:	cbnz	x0, 4173d4 <_obstack_memory_used@@Base+0x23a0>
  4173cc:	ldur	w8, [x29, #-132]
  4173d0:	cbnz	w8, 41760c <_obstack_memory_used@@Base+0x25d8>
  4173d4:	ldr	x8, [sp, #64]
  4173d8:	ldr	x9, [sp, #80]
  4173dc:	ldr	x8, [x8, x9, lsl #3]
  4173e0:	cmp	x8, x0
  4173e4:	b.eq	417404 <_obstack_memory_used@@Base+0x23d0>  // b.none
  4173e8:	ldr	x8, [sp, #88]
  4173ec:	ldr	w9, [sp, #12]
  4173f0:	ldr	w8, [x8, #180]
  4173f4:	cmp	w8, #0x1
  4173f8:	cset	w8, gt
  4173fc:	orr	w9, w9, w8
  417400:	str	w9, [sp, #12]
  417404:	ldr	x1, [sp, #88]
  417408:	sub	x0, x29, #0x84
  41740c:	sub	x2, x29, #0xa0
  417410:	mov	w3, #0x2                   	// #2
  417414:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  417418:	ldur	w8, [x29, #-132]
  41741c:	ldr	x9, [sp, #80]
  417420:	ldr	x10, [sp, #16]
  417424:	str	x0, [x10, x9, lsl #3]
  417428:	cbnz	x0, 417430 <_obstack_memory_used@@Base+0x23fc>
  41742c:	cbnz	w8, 41760c <_obstack_memory_used@@Base+0x25d8>
  417430:	ldr	x11, [sp, #32]
  417434:	mov	x9, xzr
  417438:	sub	x10, x29, #0xc0
  41743c:	ldr	q0, [x11, x9]
  417440:	ldr	q1, [x10, x9]
  417444:	orr	v0.16b, v1.16b, v0.16b
  417448:	str	q0, [x10, x9]
  41744c:	add	x9, x9, #0x10
  417450:	cmp	x9, #0x20
  417454:	b.ne	41743c <_obstack_memory_used@@Base+0x2408>  // b.any
  417458:	ldr	x10, [sp, #80]
  41745c:	ldr	x9, [sp, #96]
  417460:	sub	x23, x29, #0xc0
  417464:	add	x11, x11, #0x20
  417468:	add	x10, x10, #0x1
  41746c:	cmp	x10, x9
  417470:	str	x10, [sp, #80]
  417474:	str	x11, [sp, #32]
  417478:	b.ne	4172d8 <_obstack_memory_used@@Base+0x22a4>  // b.any
  41747c:	ldr	w8, [sp, #12]
  417480:	tbnz	w8, #0, 416c84 <_obstack_memory_used@@Base+0x1c50>
  417484:	mov	w0, #0x8                   	// #8
  417488:	mov	w1, #0x100                 	// #256
  41748c:	bl	4025d0 <calloc@plt>
  417490:	str	x0, [x21]
  417494:	cbz	x0, 41760c <_obstack_memory_used@@Base+0x25d8>
  417498:	ldr	x10, [sp, #56]
  41749c:	mov	x8, xzr
  4174a0:	mov	x9, xzr
  4174a4:	ldr	x11, [x23, x9, lsl #3]
  4174a8:	cbz	x11, 417510 <_obstack_memory_used@@Base+0x24dc>
  4174ac:	ldr	x12, [sp, #88]
  4174b0:	mov	w14, #0x1                   	// #1
  4174b4:	add	x13, x12, x9, lsl #3
  4174b8:	mov	x12, x8
  4174bc:	add	x13, x13, #0xb8
  4174c0:	tbnz	w11, #0, 4174d8 <_obstack_memory_used@@Base+0x24a4>
  4174c4:	lsl	x14, x14, #1
  4174c8:	lsr	x11, x11, #1
  4174cc:	add	x12, x12, #0x1
  4174d0:	cbnz	x11, 4174c0 <_obstack_memory_used@@Base+0x248c>
  4174d4:	b	417510 <_obstack_memory_used@@Base+0x24dc>
  4174d8:	mov	x15, #0xfffffffffffffff8    	// #-8
  4174dc:	mov	x16, x10
  4174e0:	ldr	x17, [x16], #32
  4174e4:	add	x15, x15, #0x8
  4174e8:	tst	x17, x14
  4174ec:	b.eq	4174e0 <_obstack_memory_used@@Base+0x24ac>  // b.none
  4174f0:	ldr	x16, [x13]
  4174f4:	ldr	x17, [sp, #24]
  4174f8:	tst	x16, x14
  4174fc:	ldr	x16, [sp, #64]
  417500:	csel	x16, x16, x17, eq  // eq = none
  417504:	ldr	x15, [x16, x15]
  417508:	str	x15, [x0, x12, lsl #3]
  41750c:	b	4174c4 <_obstack_memory_used@@Base+0x2490>
  417510:	add	x9, x9, #0x1
  417514:	add	x8, x8, #0x40
  417518:	cmp	x9, #0x4
  41751c:	add	x10, x10, #0x8
  417520:	b.ne	4174a4 <_obstack_memory_used@@Base+0x2470>  // b.any
  417524:	ldurb	w8, [x29, #-191]
  417528:	tbz	w8, #2, 417594 <_obstack_memory_used@@Base+0x2560>
  41752c:	ldr	x9, [sp, #96]
  417530:	ldr	x8, [sp, #64]
  417534:	add	x8, x8, x9, lsl #4
  417538:	ldr	x10, [sp, #56]
  41753c:	ldrb	w10, [x10, #1]
  417540:	tbnz	w10, #2, 417580 <_obstack_memory_used@@Base+0x254c>
  417544:	ldr	x10, [sp, #56]
  417548:	add	x8, x8, #0x8
  41754c:	subs	x9, x9, #0x1
  417550:	add	x10, x10, #0x20
  417554:	str	x10, [sp, #56]
  417558:	b.ne	417538 <_obstack_memory_used@@Base+0x2504>  // b.any
  41755c:	b	417594 <_obstack_memory_used@@Base+0x2560>
  417560:	ldr	x0, [sp, #72]
  417564:	bl	402770 <free@plt>
  417568:	mov	w0, #0x8                   	// #8
  41756c:	mov	w1, #0x100                 	// #256
  417570:	bl	4025d0 <calloc@plt>
  417574:	str	x0, [x21]
  417578:	cbnz	x0, 4175d4 <_obstack_memory_used@@Base+0x25a0>
  41757c:	b	417688 <_obstack_memory_used@@Base+0x2654>
  417580:	ldr	x8, [x8]
  417584:	ldr	w9, [sp, #12]
  417588:	str	x8, [x0, #80]
  41758c:	tbz	w9, #0, 417594 <_obstack_memory_used@@Base+0x2560>
  417590:	str	x8, [x0, #2128]
  417594:	ldr	x0, [sp, #64]
  417598:	bl	402770 <free@plt>
  41759c:	ldur	x0, [x29, #-144]
  4175a0:	bl	402770 <free@plt>
  4175a4:	mov	w23, #0x10                  	// #16
  4175a8:	ldr	x8, [sp, #72]
  4175ac:	ldr	x0, [x8, x23]
  4175b0:	bl	402770 <free@plt>
  4175b4:	ldr	x8, [sp, #96]
  4175b8:	add	x23, x23, #0x18
  4175bc:	subs	x8, x8, #0x1
  4175c0:	str	x8, [sp, #96]
  4175c4:	b.ne	4175a8 <_obstack_memory_used@@Base+0x2574>  // b.any
  4175c8:	ldr	x0, [sp, #72]
  4175cc:	bl	402770 <free@plt>
  4175d0:	ldr	x0, [x21]
  4175d4:	ldr	x23, [sp, #112]
  4175d8:	cbnz	x0, 4169c4 <_obstack_memory_used@@Base+0x1990>
  4175dc:	b	416d1c <_obstack_memory_used@@Base+0x1ce8>
  4175e0:	ldr	x8, [sp, #360]
  4175e4:	ldr	w2, [sp, #448]
  4175e8:	add	x0, sp, #0x120
  4175ec:	sub	x1, x8, #0x1
  4175f0:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  4175f4:	ubfiz	w8, w0, #8, #1
  4175f8:	orr	x8, x8, x28
  4175fc:	ldr	x28, [x23, x8, lsl #3]
  417600:	ldr	x23, [sp, #112]
  417604:	b	4169c8 <_obstack_memory_used@@Base+0x1994>
  417608:	stur	w0, [x29, #-132]
  41760c:	ldr	x0, [sp, #64]
  417610:	bl	402770 <free@plt>
  417614:	ldur	x0, [x29, #-144]
  417618:	bl	402770 <free@plt>
  41761c:	ldr	x8, [sp, #96]
  417620:	cmp	x8, #0x1
  417624:	b.lt	417680 <_obstack_memory_used@@Base+0x264c>  // b.tstop
  417628:	ldr	x8, [sp, #72]
  41762c:	add	x21, x8, #0x10
  417630:	ldr	x0, [x21], #24
  417634:	bl	402770 <free@plt>
  417638:	ldr	x8, [sp, #96]
  41763c:	subs	x8, x8, #0x1
  417640:	str	x8, [sp, #96]
  417644:	b.ne	417630 <_obstack_memory_used@@Base+0x25fc>  // b.any
  417648:	b	417680 <_obstack_memory_used@@Base+0x264c>
  41764c:	ldr	x8, [sp, #96]
  417650:	str	x8, [sp, #104]
  417654:	ldr	x8, [sp, #104]
  417658:	cmp	x8, #0x1
  41765c:	b.lt	417680 <_obstack_memory_used@@Base+0x264c>  // b.tstop
  417660:	ldr	x8, [sp, #72]
  417664:	add	x21, x8, #0x10
  417668:	ldr	x0, [x21], #24
  41766c:	bl	402770 <free@plt>
  417670:	ldr	x8, [sp, #104]
  417674:	subs	x8, x8, #0x1
  417678:	str	x8, [sp, #104]
  41767c:	b.ne	417668 <_obstack_memory_used@@Base+0x2634>  // b.any
  417680:	ldr	x0, [sp, #72]
  417684:	bl	402770 <free@plt>
  417688:	mov	x28, xzr
  41768c:	mov	w8, #0xc                   	// #12
  417690:	stur	w8, [x29, #-196]
  417694:	b	417600 <_obstack_memory_used@@Base+0x25cc>
  417698:	stp	xzr, xzr, [x23]
  41769c:	b	417654 <_obstack_memory_used@@Base+0x2620>
  4176a0:	mov	x0, x23
  4176a4:	bl	402770 <free@plt>
  4176a8:	b	417628 <_obstack_memory_used@@Base+0x25f4>
  4176ac:	ldr	x8, [sp, #160]
  4176b0:	str	x8, [sp, #224]
  4176b4:	b	4176bc <_obstack_memory_used@@Base+0x2688>
  4176b8:	ldr	x25, [sp, #232]
  4176bc:	ldr	x9, [sp, #224]
  4176c0:	cbz	x9, 4176d0 <_obstack_memory_used@@Base+0x269c>
  4176c4:	ldr	x8, [x9]
  4176c8:	add	x8, x8, x26
  4176cc:	str	x8, [x9]
  4176d0:	ldr	x28, [sp, #272]
  4176d4:	ldr	x19, [sp, #240]
  4176d8:	ldr	x20, [sp, #192]
  4176dc:	cmn	x27, #0x1
  4176e0:	b.eq	417860 <_obstack_memory_used@@Base+0x282c>  // b.none
  4176e4:	cmn	x27, #0x2
  4176e8:	b.eq	417cd8 <_obstack_memory_used@@Base+0x2ca4>  // b.none
  4176ec:	ldr	x8, [sp, #248]
  4176f0:	str	x23, [sp, #112]
  4176f4:	str	x27, [sp, #456]
  4176f8:	ldr	x23, [sp, #208]
  4176fc:	ldrb	w8, [x8, #56]
  417700:	cmp	x23, #0x2
  417704:	b.cc	41770c <_obstack_memory_used@@Base+0x26d8>  // b.lo, b.ul, b.last
  417708:	tbz	w8, #4, 417714 <_obstack_memory_used@@Base+0x26e0>
  41770c:	ldr	x9, [x25, #152]
  417710:	cbz	x9, 417734 <_obstack_memory_used@@Base+0x2700>
  417714:	ldr	x8, [sp, #472]
  417718:	add	x0, sp, #0x120
  41771c:	mov	x2, x27
  417720:	ldr	x1, [x8, x27, lsl #3]
  417724:	bl	41d0ac <_obstack_memory_used@@Base+0x8078>
  417728:	ldr	x8, [sp, #248]
  41772c:	str	x0, [sp, #464]
  417730:	ldrb	w8, [x8, #56]
  417734:	cmp	x23, #0x2
  417738:	b.cc	417748 <_obstack_memory_used@@Base+0x2714>  // b.lo, b.ul, b.last
  41773c:	tbnz	w8, #4, 417748 <_obstack_memory_used@@Base+0x2714>
  417740:	ldrb	w8, [x25, #176]
  417744:	tbnz	w8, #0, 417750 <_obstack_memory_used@@Base+0x271c>
  417748:	ldr	x8, [x25, #152]
  41774c:	cbz	x8, 417ac8 <_obstack_memory_used@@Base+0x2a94>
  417750:	ldr	x28, [sp, #456]
  417754:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  417758:	cmp	x28, x8
  41775c:	b.cs	417cd8 <_obstack_memory_used@@Base+0x2ca4>  // b.hs, b.nlast
  417760:	ldr	x19, [sp, #440]
  417764:	ldr	x25, [sp, #464]
  417768:	lsl	x8, x28, #3
  41776c:	add	x20, x8, #0x8
  417770:	mov	x0, x20
  417774:	bl	4024e0 <malloc@plt>
  417778:	mov	x26, x0
  41777c:	cbz	x0, 417ccc <_obstack_memory_used@@Base+0x2c98>
  417780:	ldr	x8, [x19, #152]
  417784:	cbz	x8, 41780c <_obstack_memory_used@@Base+0x27d8>
  417788:	mov	x0, x20
  41778c:	bl	4024e0 <malloc@plt>
  417790:	cbz	x0, 417ccc <_obstack_memory_used@@Base+0x2c98>
  417794:	add	x21, x28, #0x1
  417798:	lsl	x2, x21, #3
  41779c:	mov	w1, wzr
  4177a0:	mov	x20, x0
  4177a4:	bl	4025b0 <memset@plt>
  4177a8:	ldr	x8, [sp, #144]
  4177ac:	add	x0, sp, #0x120
  4177b0:	sub	x1, x29, #0x40
  4177b4:	stp	x26, x20, [x29, #-64]
  4177b8:	stp	x25, x28, [x29, #-48]
  4177bc:	stp	xzr, xzr, [x8, #8]
  4177c0:	str	xzr, [x8]
  4177c4:	bl	41f588 <_obstack_memory_used@@Base+0xa554>
  4177c8:	cbnz	w0, 417a2c <_obstack_memory_used@@Base+0x29f8>
  4177cc:	ldr	x8, [x26]
  4177d0:	cbnz	x8, 4177dc <_obstack_memory_used@@Base+0x27a8>
  4177d4:	ldr	x8, [x20]
  4177d8:	cbz	x8, 417890 <_obstack_memory_used@@Base+0x285c>
  4177dc:	mov	x0, x19
  4177e0:	mov	x1, x26
  4177e4:	mov	x2, x20
  4177e8:	mov	x3, x21
  4177ec:	bl	41f7d4 <_obstack_memory_used@@Base+0xa7a0>
  4177f0:	mov	w27, w0
  4177f4:	mov	x0, x20
  4177f8:	bl	402770 <free@plt>
  4177fc:	ldr	x23, [sp, #208]
  417800:	ldr	w21, [sp, #220]
  417804:	cbz	w27, 417ab4 <_obstack_memory_used@@Base+0x2a80>
  417808:	b	417a60 <_obstack_memory_used@@Base+0x2a2c>
  41780c:	ldr	x8, [sp, #144]
  417810:	add	x0, sp, #0x120
  417814:	sub	x1, x29, #0x40
  417818:	stp	x26, xzr, [x29, #-64]
  41781c:	stp	x25, x28, [x29, #-48]
  417820:	stp	xzr, xzr, [x8]
  417824:	str	xzr, [x8, #16]
  417828:	bl	41f588 <_obstack_memory_used@@Base+0xa554>
  41782c:	cbnz	w0, 417a5c <_obstack_memory_used@@Base+0x2a28>
  417830:	ldr	x8, [x26]
  417834:	cbnz	x8, 417ab4 <_obstack_memory_used@@Base+0x2a80>
  417838:	ldr	x25, [sp, #232]
  41783c:	ldr	x28, [sp, #272]
  417840:	mov	x20, xzr
  417844:	mov	x0, x26
  417848:	bl	402770 <free@plt>
  41784c:	mov	x0, x20
  417850:	bl	402770 <free@plt>
  417854:	ldr	x23, [sp, #112]
  417858:	ldr	x19, [sp, #240]
  41785c:	ldr	x20, [sp, #192]
  417860:	add	x0, sp, #0x120
  417864:	bl	41d14c <_obstack_memory_used@@Base+0x8118>
  417868:	ldur	x8, [x29, #-208]
  41786c:	ldr	x9, [sp, #280]
  417870:	mov	w27, #0x1                   	// #1
  417874:	add	x26, x8, x9
  417878:	cmp	x26, x19
  41787c:	stur	x26, [x29, #-208]
  417880:	b.lt	417c68 <_obstack_memory_used@@Base+0x2c34>  // b.tstop
  417884:	cmp	x24, x26
  417888:	b.ge	416740 <_obstack_memory_used@@Base+0x170c>  // b.tcont
  41788c:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  417890:	cmp	x28, #0x1
  417894:	b.lt	417974 <_obstack_memory_used@@Base+0x2940>  // b.tstop
  417898:	ldr	x8, [sp, #472]
  41789c:	add	x23, x28, #0x1
  4178a0:	lsl	x21, x28, #3
  4178a4:	ldr	x25, [sp, #232]
  4178a8:	ldr	x28, [sp, #272]
  4178ac:	sub	x8, x8, #0x8
  4178b0:	ldr	x1, [x8, x21]
  4178b4:	cbz	x1, 4178c0 <_obstack_memory_used@@Base+0x288c>
  4178b8:	ldrb	w9, [x1, #104]
  4178bc:	tbnz	w9, #4, 4178d4 <_obstack_memory_used@@Base+0x28a0>
  4178c0:	sub	x23, x23, #0x1
  4178c4:	cmp	x23, #0x2
  4178c8:	sub	x21, x21, #0x8
  4178cc:	b.ge	4178b0 <_obstack_memory_used@@Base+0x287c>  // b.tcont
  4178d0:	b	41797c <_obstack_memory_used@@Base+0x2948>
  4178d4:	sub	x28, x23, #0x2
  4178d8:	add	x0, sp, #0x120
  4178dc:	mov	x2, x28
  4178e0:	bl	41d0ac <_obstack_memory_used@@Base+0x8078>
  4178e4:	mov	x25, x0
  4178e8:	mov	x0, x20
  4178ec:	mov	w1, wzr
  4178f0:	mov	x2, x21
  4178f4:	bl	4025b0 <memset@plt>
  4178f8:	ldr	x8, [sp, #144]
  4178fc:	add	x0, sp, #0x120
  417900:	sub	x1, x29, #0x40
  417904:	stp	x26, x20, [x29, #-64]
  417908:	stp	x25, x28, [x29, #-48]
  41790c:	stp	xzr, xzr, [x8, #8]
  417910:	str	xzr, [x8]
  417914:	bl	41f588 <_obstack_memory_used@@Base+0xa554>
  417918:	cbnz	w0, 417a98 <_obstack_memory_used@@Base+0x2a64>
  41791c:	ldr	x8, [x26]
  417920:	cbnz	x8, 41792c <_obstack_memory_used@@Base+0x28f8>
  417924:	ldr	x8, [x20]
  417928:	cbz	x8, 417890 <_obstack_memory_used@@Base+0x285c>
  41792c:	sub	x21, x23, #0x1
  417930:	b	4177dc <_obstack_memory_used@@Base+0x27a8>
  417934:	tbnz	w3, #1, 417954 <_obstack_memory_used@@Base+0x2920>
  417938:	tbz	w3, #2, 416920 <_obstack_memory_used@@Base+0x18ec>
  41793c:	ldr	x2, [x28, #80]
  417940:	sub	x0, x29, #0xc4
  417944:	mov	x1, x19
  417948:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41794c:	mov	x28, x0
  417950:	b	416920 <_obstack_memory_used@@Base+0x18ec>
  417954:	ldr	x28, [x19, #88]
  417958:	b	416920 <_obstack_memory_used@@Base+0x18ec>
  41795c:	ldr	x28, [sp, #272]
  417960:	ldr	w21, [sp, #220]
  417964:	b	4176d4 <_obstack_memory_used@@Base+0x26a0>
  417968:	ldr	x25, [sp, #232]
  41796c:	ldr	w21, [sp, #220]
  417970:	b	4176bc <_obstack_memory_used@@Base+0x2688>
  417974:	ldr	x25, [sp, #232]
  417978:	ldr	x28, [sp, #272]
  41797c:	ldr	w21, [sp, #220]
  417980:	b	417844 <_obstack_memory_used@@Base+0x2810>
  417984:	tbnz	w8, #31, 4179f4 <_obstack_memory_used@@Base+0x29c0>
  417988:	ldr	w8, [sp, #156]
  41798c:	cbz	w8, 417a24 <_obstack_memory_used@@Base+0x29f0>
  417990:	mov	x27, x26
  417994:	mov	w8, #0x1                   	// #1
  417998:	str	x8, [sp, #184]
  41799c:	b	416950 <_obstack_memory_used@@Base+0x191c>
  4179a0:	add	x19, x28, #0x8
  4179a4:	add	x0, sp, #0x120
  4179a8:	mov	x1, x19
  4179ac:	mov	x2, xzr
  4179b0:	bl	41d8ac <_obstack_memory_used@@Base+0x8878>
  4179b4:	stur	w0, [x29, #-196]
  4179b8:	cbnz	w0, 417aa4 <_obstack_memory_used@@Base+0x2a70>
  4179bc:	ldrb	w8, [x28, #104]
  4179c0:	tbz	w8, #6, 4179d8 <_obstack_memory_used@@Base+0x29a4>
  4179c4:	add	x0, sp, #0x120
  4179c8:	mov	x1, x19
  4179cc:	bl	41d9b4 <_obstack_memory_used@@Base+0x8980>
  4179d0:	stur	w0, [x29, #-196]
  4179d4:	cbnz	w0, 417aa4 <_obstack_memory_used@@Base+0x2a70>
  4179d8:	mov	w20, wzr
  4179dc:	b	416940 <_obstack_memory_used@@Base+0x190c>
  4179e0:	cmp	x24, x28
  4179e4:	b.ge	417a3c <_obstack_memory_used@@Base+0x2a08>  // b.tcont
  4179e8:	ldr	x8, [sp, #256]
  4179ec:	ldrb	w8, [x8, x24]
  4179f0:	b	417a40 <_obstack_memory_used@@Base+0x2a0c>
  4179f4:	add	x0, sp, #0x120
  4179f8:	mov	x1, x28
  4179fc:	mov	x2, x26
  417a00:	bl	41d0ac <_obstack_memory_used@@Base+0x8078>
  417a04:	ldr	w9, [sp, #156]
  417a08:	cmp	x0, #0x0
  417a0c:	cset	w8, ne  // ne = any
  417a10:	str	x8, [sp, #184]
  417a14:	cset	w8, eq  // eq = none
  417a18:	orr	w8, w9, w8
  417a1c:	csinv	x27, x26, xzr, ne  // ne = any
  417a20:	tbnz	w8, #0, 416950 <_obstack_memory_used@@Base+0x191c>
  417a24:	mov	x27, x26
  417a28:	b	4176d0 <_obstack_memory_used@@Base+0x269c>
  417a2c:	ldr	x25, [sp, #232]
  417a30:	mov	w27, w0
  417a34:	ldr	w21, [sp, #220]
  417a38:	b	417a68 <_obstack_memory_used@@Base+0x2a34>
  417a3c:	mov	w8, wzr
  417a40:	ldr	x9, [sp, #200]
  417a44:	cbz	x9, 417a4c <_obstack_memory_used@@Base+0x2a18>
  417a48:	ldrb	w8, [x9, w8, uxtw]
  417a4c:	ldrb	w8, [x22, w8, uxtw]
  417a50:	mov	x26, x24
  417a54:	cbnz	w8, 416810 <_obstack_memory_used@@Base+0x17dc>
  417a58:	b	417aac <_obstack_memory_used@@Base+0x2a78>
  417a5c:	mov	w27, w0
  417a60:	ldr	x25, [sp, #232]
  417a64:	mov	x20, xzr
  417a68:	mov	x0, x26
  417a6c:	bl	402770 <free@plt>
  417a70:	mov	x0, x20
  417a74:	bl	402770 <free@plt>
  417a78:	ldr	x19, [sp, #240]
  417a7c:	ldr	x20, [sp, #192]
  417a80:	cbz	w27, 417ac8 <_obstack_memory_used@@Base+0x2a94>
  417a84:	ldr	x28, [sp, #272]
  417a88:	ldr	x23, [sp, #112]
  417a8c:	cmp	w27, #0x1
  417a90:	b.eq	417860 <_obstack_memory_used@@Base+0x282c>  // b.none
  417a94:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  417a98:	ldr	x25, [sp, #232]
  417a9c:	ldr	x23, [sp, #208]
  417aa0:	b	417a30 <_obstack_memory_used@@Base+0x29fc>
  417aa4:	sxtw	x27, w0
  417aa8:	b	4176d0 <_obstack_memory_used@@Base+0x269c>
  417aac:	mov	w27, #0x1                   	// #1
  417ab0:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  417ab4:	ldr	x0, [sp, #472]
  417ab8:	bl	402770 <free@plt>
  417abc:	stp	x25, x26, [sp, #464]
  417ac0:	ldr	x25, [sp, #232]
  417ac4:	str	x28, [sp, #456]
  417ac8:	cbz	x23, 417c64 <_obstack_memory_used@@Base+0x2c30>
  417acc:	ldr	x19, [sp, #120]
  417ad0:	ldr	x20, [sp, #136]
  417ad4:	cmp	x23, #0x1
  417ad8:	b.eq	417af8 <_obstack_memory_used@@Base+0x2ac4>  // b.none
  417adc:	ldr	x9, [sp, #128]
  417ae0:	mvn	x8, x20
  417ae4:	add	x0, x19, #0x10
  417ae8:	mov	w1, #0xff                  	// #255
  417aec:	add	x8, x8, x9
  417af0:	lsl	x2, x8, #4
  417af4:	bl	4025b0 <memset@plt>
  417af8:	ldr	x8, [sp, #456]
  417afc:	cmp	x23, #0x2
  417b00:	stp	xzr, x8, [x19]
  417b04:	ldr	x0, [sp, #248]
  417b08:	b.cc	417b6c <_obstack_memory_used@@Base+0x2b38>  // b.lo, b.ul, b.last
  417b0c:	ldrb	w8, [x0, #56]
  417b10:	tbnz	w8, #4, 417b6c <_obstack_memory_used@@Base+0x2b38>
  417b14:	ldrb	w8, [x25, #176]
  417b18:	tbnz	w8, #0, 417b4c <_obstack_memory_used@@Base+0x2b18>
  417b1c:	mov	w4, wzr
  417b20:	b	417b58 <_obstack_memory_used@@Base+0x2b24>
  417b24:	ldr	x8, [x8, #16]
  417b28:	cbz	x8, 417b34 <_obstack_memory_used@@Base+0x2b00>
  417b2c:	ldrsb	w8, [x27, #56]
  417b30:	tbnz	w8, #31, 4164a4 <_obstack_memory_used@@Base+0x1470>
  417b34:	mov	x20, xzr
  417b38:	cbz	x26, 417cbc <_obstack_memory_used@@Base+0x2c88>
  417b3c:	mov	x26, x20
  417b40:	cbz	x19, 4164a8 <_obstack_memory_used@@Base+0x1474>
  417b44:	mov	w27, #0x1                   	// #1
  417b48:	b	417c98 <_obstack_memory_used@@Base+0x2c64>
  417b4c:	ldr	x8, [x25, #152]
  417b50:	cmp	x8, #0x0
  417b54:	cset	w4, gt
  417b58:	add	x1, sp, #0x120
  417b5c:	mov	x2, x23
  417b60:	mov	x3, x19
  417b64:	bl	41d208 <_obstack_memory_used@@Base+0x81d4>
  417b68:	cbnz	w0, 417cc4 <_obstack_memory_used@@Base+0x2c90>
  417b6c:	ldrb	w9, [sp, #428]
  417b70:	ldr	x10, [sp, #336]
  417b74:	ldr	x11, [sp, #312]
  417b78:	ldur	x12, [x29, #-208]
  417b7c:	ldr	x17, [sp, #112]
  417b80:	mov	x8, xzr
  417b84:	add	x13, x19, #0x8
  417b88:	ldur	x14, [x13, #-8]
  417b8c:	cmn	x14, #0x1
  417b90:	b.eq	417ba8 <_obstack_memory_used@@Base+0x2b74>  // b.none
  417b94:	cbnz	w9, 417bbc <_obstack_memory_used@@Base+0x2b88>
  417b98:	ldr	x15, [x13]
  417b9c:	add	x14, x14, x12
  417ba0:	add	x15, x15, x12
  417ba4:	stp	x14, x15, [x13, #-8]
  417ba8:	add	x8, x8, #0x1
  417bac:	cmp	x8, x23
  417bb0:	add	x13, x13, #0x10
  417bb4:	b.cc	417b88 <_obstack_memory_used@@Base+0x2b54>  // b.lo, b.ul, b.last
  417bb8:	b	417bec <_obstack_memory_used@@Base+0x2bb8>
  417bbc:	add	x15, x11, x14, lsl #3
  417bc0:	cmp	x14, x10
  417bc4:	ldr	x16, [x13]
  417bc8:	csel	x14, x17, x15, eq  // eq = none
  417bcc:	ldr	x14, [x14]
  417bd0:	add	x15, x11, x16, lsl #3
  417bd4:	cmp	x16, x10
  417bd8:	stur	x14, [x13, #-8]
  417bdc:	csel	x15, x17, x15, eq  // eq = none
  417be0:	ldr	x15, [x15]
  417be4:	str	x15, [x13]
  417be8:	b	417b9c <_obstack_memory_used@@Base+0x2b68>
  417bec:	cmp	x20, #0x1
  417bf0:	b.lt	417c04 <_obstack_memory_used@@Base+0x2bd0>  // b.tstop
  417bf4:	add	x0, x19, x23, lsl #4
  417bf8:	lsl	x2, x20, #4
  417bfc:	mov	w1, #0xff                  	// #255
  417c00:	bl	4025b0 <memset@plt>
  417c04:	ldr	x8, [x25, #224]
  417c08:	mov	w27, wzr
  417c0c:	cbz	x8, 417c68 <_obstack_memory_used@@Base+0x2c34>
  417c10:	cmp	x23, #0x2
  417c14:	b.cc	417c68 <_obstack_memory_used@@Base+0x2c34>  // b.lo, b.ul, b.last
  417c18:	ldp	x11, x10, [sp, #128]
  417c1c:	mov	x9, xzr
  417c20:	mvn	x10, x10
  417c24:	add	x10, x10, x11
  417c28:	add	x11, x19, #0x18
  417c2c:	ldr	x12, [x8, x9, lsl #3]
  417c30:	cmp	x9, x12
  417c34:	b.eq	417c54 <_obstack_memory_used@@Base+0x2c20>  // b.none
  417c38:	add	x12, x19, x12, lsl #4
  417c3c:	ldr	x12, [x12, #16]
  417c40:	stur	x12, [x11, #-8]
  417c44:	ldr	x12, [x8, x9, lsl #3]
  417c48:	add	x12, x19, x12, lsl #4
  417c4c:	ldr	x12, [x12, #24]
  417c50:	str	x12, [x11]
  417c54:	add	x9, x9, #0x1
  417c58:	cmp	x10, x9
  417c5c:	add	x11, x11, #0x10
  417c60:	b.ne	417c2c <_obstack_memory_used@@Base+0x2bf8>  // b.any
  417c64:	mov	w27, wzr
  417c68:	ldr	x0, [sp, #472]
  417c6c:	bl	402770 <free@plt>
  417c70:	ldr	x8, [x25, #152]
  417c74:	cbz	x8, 417c90 <_obstack_memory_used@@Base+0x2c5c>
  417c78:	add	x0, sp, #0x120
  417c7c:	bl	41d14c <_obstack_memory_used@@Base+0x8118>
  417c80:	ldr	x0, [sp, #536]
  417c84:	bl	402770 <free@plt>
  417c88:	ldr	x0, [sp, #504]
  417c8c:	bl	402770 <free@plt>
  417c90:	add	x0, sp, #0x120
  417c94:	bl	41826c <_obstack_memory_used@@Base+0x3238>
  417c98:	mov	w0, w27
  417c9c:	add	sp, sp, #0x2f0
  417ca0:	ldp	x20, x19, [sp, #80]
  417ca4:	ldp	x22, x21, [sp, #64]
  417ca8:	ldp	x24, x23, [sp, #48]
  417cac:	ldp	x26, x25, [sp, #32]
  417cb0:	ldp	x28, x27, [sp, #16]
  417cb4:	ldp	x29, x30, [sp], #96
  417cb8:	ret
  417cbc:	mov	x26, x20
  417cc0:	b	4164a8 <_obstack_memory_used@@Base+0x1474>
  417cc4:	mov	w27, w0
  417cc8:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  417ccc:	mov	x0, x26
  417cd0:	bl	402770 <free@plt>
  417cd4:	ldr	x25, [sp, #232]
  417cd8:	mov	w27, #0xc                   	// #12
  417cdc:	b	417c68 <_obstack_memory_used@@Base+0x2c34>
  417ce0:	mov	x6, x4
  417ce4:	mov	w7, #0x1                   	// #1
  417ce8:	mov	x4, xzr
  417cec:	mov	x5, x2
  417cf0:	b	417cf4 <_obstack_memory_used@@Base+0x2cc0>
  417cf4:	sub	sp, sp, #0x70
  417cf8:	cmp	x3, x2
  417cfc:	cset	w8, gt
  417d00:	orr	x8, x8, x3, lsr #63
  417d04:	stp	x29, x30, [sp, #16]
  417d08:	stp	x28, x27, [sp, #32]
  417d0c:	stp	x26, x25, [sp, #48]
  417d10:	stp	x24, x23, [sp, #64]
  417d14:	stp	x22, x21, [sp, #80]
  417d18:	stp	x20, x19, [sp, #96]
  417d1c:	add	x29, sp, #0x10
  417d20:	cbnz	x8, 417f48 <_obstack_memory_used@@Base+0x2f14>
  417d24:	add	x8, x4, x3
  417d28:	ldrb	w19, [x0, #56]
  417d2c:	bic	x9, x8, x8, asr #63
  417d30:	cmp	x8, x2
  417d34:	csel	x27, x2, x9, gt
  417d38:	mov	x22, x6
  417d3c:	mov	x24, x5
  417d40:	mov	x20, x3
  417d44:	mov	x25, x2
  417d48:	mov	x26, x1
  417d4c:	mov	x21, x0
  417d50:	cmp	x27, x3
  417d54:	stur	w7, [x29, #-4]
  417d58:	b.le	417d7c <_obstack_memory_used@@Base+0x2d48>
  417d5c:	tbnz	w19, #3, 417d7c <_obstack_memory_used@@Base+0x2d48>
  417d60:	ldr	x9, [x21, #32]
  417d64:	mov	w8, w19
  417d68:	cbz	x9, 417d80 <_obstack_memory_used@@Base+0x2d4c>
  417d6c:	mov	x0, x21
  417d70:	bl	415bd8 <_obstack_memory_used@@Base+0xba4>
  417d74:	ldrb	w8, [x21, #56]
  417d78:	b	417d80 <_obstack_memory_used@@Base+0x2d4c>
  417d7c:	mov	w8, w19
  417d80:	mov	x28, xzr
  417d84:	mov	w23, #0x1                   	// #1
  417d88:	cbz	x22, 417dc8 <_obstack_memory_used@@Base+0x2d94>
  417d8c:	tbnz	w8, #4, 417dc8 <_obstack_memory_used@@Base+0x2d94>
  417d90:	and	w8, w8, #0x6
  417d94:	cmp	w8, #0x4
  417d98:	b.ne	417dbc <_obstack_memory_used@@Base+0x2d88>  // b.any
  417d9c:	ldr	x8, [x22]
  417da0:	ldr	x9, [x21, #48]
  417da4:	cmp	x8, x9
  417da8:	b.hi	417dc0 <_obstack_memory_used@@Base+0x2d8c>  // b.pmore
  417dac:	cmp	x8, #0x1
  417db0:	csel	x28, xzr, x22, lt  // lt = tstop
  417db4:	csinc	x23, x8, xzr, ge  // ge = tcont
  417db8:	b	417dc8 <_obstack_memory_used@@Base+0x2d94>
  417dbc:	ldr	x9, [x21, #48]
  417dc0:	add	x23, x9, #0x1
  417dc4:	mov	x28, x22
  417dc8:	lsl	x0, x23, #4
  417dcc:	bl	4024e0 <malloc@plt>
  417dd0:	cbz	x0, 417f50 <_obstack_memory_used@@Base+0x2f1c>
  417dd4:	mov	x22, x0
  417dd8:	ubfx	w8, w19, #5, #2
  417ddc:	mov	x0, x21
  417de0:	mov	x1, x26
  417de4:	mov	x2, x25
  417de8:	mov	x3, x20
  417dec:	mov	x4, x27
  417df0:	mov	x5, x24
  417df4:	mov	x6, x23
  417df8:	mov	x7, x22
  417dfc:	str	w8, [sp]
  417e00:	bl	4163d4 <_obstack_memory_used@@Base+0x13a0>
  417e04:	cbz	w0, 417e40 <_obstack_memory_used@@Base+0x2e0c>
  417e08:	cmp	w0, #0x1
  417e0c:	mov	x8, #0xfffffffffffffffe    	// #-2
  417e10:	cinc	x19, x8, eq  // eq = none
  417e14:	mov	x0, x22
  417e18:	bl	402770 <free@plt>
  417e1c:	mov	x0, x19
  417e20:	ldp	x20, x19, [sp, #96]
  417e24:	ldp	x22, x21, [sp, #80]
  417e28:	ldp	x24, x23, [sp, #64]
  417e2c:	ldp	x26, x25, [sp, #48]
  417e30:	ldp	x28, x27, [sp, #32]
  417e34:	ldp	x29, x30, [sp, #16]
  417e38:	add	sp, sp, #0x70
  417e3c:	ret
  417e40:	cbz	x28, 417f24 <_obstack_memory_used@@Base+0x2ef0>
  417e44:	ldrb	w8, [x21, #56]
  417e48:	add	x26, x23, #0x1
  417e4c:	ubfx	w8, w8, #1, #2
  417e50:	cmp	w8, #0x1
  417e54:	b.eq	417e90 <_obstack_memory_used@@Base+0x2e5c>  // b.none
  417e58:	cbnz	w8, 417ea8 <_obstack_memory_used@@Base+0x2e74>
  417e5c:	lsl	x25, x26, #3
  417e60:	mov	x0, x25
  417e64:	bl	4024e0 <malloc@plt>
  417e68:	str	x0, [x28, #8]
  417e6c:	cbz	x0, 417f90 <_obstack_memory_used@@Base+0x2f5c>
  417e70:	mov	x24, x0
  417e74:	mov	x0, x25
  417e78:	bl	4024e0 <malloc@plt>
  417e7c:	str	x0, [x28, #16]
  417e80:	cbz	x0, 417f88 <_obstack_memory_used@@Base+0x2f54>
  417e84:	str	x26, [x28]
  417e88:	mov	w8, #0x1                   	// #1
  417e8c:	b	417eb0 <_obstack_memory_used@@Base+0x2e7c>
  417e90:	ldr	x9, [x28]
  417e94:	cmp	x26, x9
  417e98:	b.hi	417f58 <_obstack_memory_used@@Base+0x2f24>  // b.pmore
  417e9c:	mov	w8, #0x1                   	// #1
  417ea0:	mov	x26, x9
  417ea4:	b	417eb0 <_obstack_memory_used@@Base+0x2e7c>
  417ea8:	ldr	x26, [x28]
  417eac:	mov	w8, #0x2                   	// #2
  417eb0:	cmp	x23, #0x1
  417eb4:	b.lt	417ee4 <_obstack_memory_used@@Base+0x2eb0>  // b.tstop
  417eb8:	ldp	x9, x10, [x28, #8]
  417ebc:	add	x11, x22, #0x8
  417ec0:	mov	x12, x23
  417ec4:	ldur	x13, [x11, #-8]
  417ec8:	subs	x12, x12, #0x1
  417ecc:	str	x13, [x9], #8
  417ed0:	ldr	x13, [x11], #16
  417ed4:	str	x13, [x10], #8
  417ed8:	b.ne	417ec4 <_obstack_memory_used@@Base+0x2e90>  // b.any
  417edc:	ldr	x26, [x28]
  417ee0:	b	417ee8 <_obstack_memory_used@@Base+0x2eb4>
  417ee4:	mov	x23, xzr
  417ee8:	cmp	x23, x26
  417eec:	b.cs	417f10 <_obstack_memory_used@@Base+0x2edc>  // b.hs, b.nlast
  417ef0:	ldp	x10, x9, [x28, #8]
  417ef4:	mov	x11, #0xffffffffffffffff    	// #-1
  417ef8:	str	x11, [x9, x23, lsl #3]
  417efc:	str	x11, [x10, x23, lsl #3]
  417f00:	ldr	x12, [x28]
  417f04:	add	x23, x23, #0x1
  417f08:	cmp	x23, x12
  417f0c:	b.cc	417ef8 <_obstack_memory_used@@Base+0x2ec4>  // b.lo, b.ul, b.last
  417f10:	ldrb	w9, [x21, #56]
  417f14:	and	w9, w9, #0xfffffff9
  417f18:	orr	w9, w9, w8, lsl #1
  417f1c:	strb	w9, [x21, #56]
  417f20:	cbz	w8, 417f40 <_obstack_memory_used@@Base+0x2f0c>
  417f24:	ldur	w8, [x29, #-4]
  417f28:	tbz	w8, #0, 417f38 <_obstack_memory_used@@Base+0x2f04>
  417f2c:	ldr	x8, [x22, #8]
  417f30:	sub	x19, x8, x20
  417f34:	b	417e14 <_obstack_memory_used@@Base+0x2de0>
  417f38:	ldr	x19, [x22]
  417f3c:	b	417e14 <_obstack_memory_used@@Base+0x2de0>
  417f40:	mov	x19, #0xfffffffffffffffe    	// #-2
  417f44:	b	417e14 <_obstack_memory_used@@Base+0x2de0>
  417f48:	mov	x19, #0xffffffffffffffff    	// #-1
  417f4c:	b	417e1c <_obstack_memory_used@@Base+0x2de8>
  417f50:	mov	x19, #0xfffffffffffffffe    	// #-2
  417f54:	b	417e1c <_obstack_memory_used@@Base+0x2de8>
  417f58:	ldr	x0, [x28, #8]
  417f5c:	lsl	x25, x26, #3
  417f60:	mov	x1, x25
  417f64:	bl	402610 <realloc@plt>
  417f68:	cbz	x0, 417f90 <_obstack_memory_used@@Base+0x2f5c>
  417f6c:	mov	x24, x0
  417f70:	ldr	x0, [x28, #16]
  417f74:	mov	x1, x25
  417f78:	bl	402610 <realloc@plt>
  417f7c:	cbz	x0, 417f88 <_obstack_memory_used@@Base+0x2f54>
  417f80:	stp	x24, x0, [x28, #8]
  417f84:	b	417e84 <_obstack_memory_used@@Base+0x2e50>
  417f88:	mov	x0, x24
  417f8c:	bl	402770 <free@plt>
  417f90:	mov	w8, wzr
  417f94:	b	417f10 <_obstack_memory_used@@Base+0x2edc>
  417f98:	mov	x6, x5
  417f9c:	mov	x5, x2
  417fa0:	mov	w7, wzr
  417fa4:	b	417cf4 <_obstack_memory_used@@Base+0x2cc0>
  417fa8:	sub	sp, sp, #0x20
  417fac:	mov	x8, x6
  417fb0:	mov	w9, #0x1                   	// #1
  417fb4:	str	x7, [sp]
  417fb8:	mov	x6, xzr
  417fbc:	mov	x7, x8
  417fc0:	stp	x29, x30, [sp, #16]
  417fc4:	add	x29, sp, #0x10
  417fc8:	strb	w9, [sp, #8]
  417fcc:	bl	417fdc <_obstack_memory_used@@Base+0x2fa8>
  417fd0:	ldp	x29, x30, [sp, #16]
  417fd4:	add	sp, sp, #0x20
  417fd8:	ret
  417fdc:	sub	sp, sp, #0x70
  417fe0:	stp	x22, x21, [sp, #80]
  417fe4:	adds	x22, x2, x4
  417fe8:	stp	x29, x30, [sp, #16]
  417fec:	stp	x28, x27, [sp, #32]
  417ff0:	stp	x26, x25, [sp, #48]
  417ff4:	stp	x24, x23, [sp, #64]
  417ff8:	stp	x20, x19, [sp, #96]
  417ffc:	add	x29, sp, #0x10
  418000:	b.vs	4180e8 <_obstack_memory_used@@Base+0x30b4>
  418004:	ldr	x23, [x29, #96]
  418008:	orr	x8, x4, x2
  41800c:	mov	x28, x4
  418010:	mov	x19, x2
  418014:	orr	x8, x8, x23
  418018:	tbnz	x8, #63, 4180e8 <_obstack_memory_used@@Base+0x30b4>
  41801c:	mov	x9, x7
  418020:	mov	x20, x6
  418024:	mov	x21, x5
  418028:	mov	x25, x1
  41802c:	mov	x24, x0
  418030:	cmp	x28, #0x1
  418034:	b.lt	418080 <_obstack_memory_used@@Base+0x304c>  // b.tstop
  418038:	mov	x27, x3
  41803c:	cmp	x19, #0x1
  418040:	b.lt	418088 <_obstack_memory_used@@Base+0x3054>  // b.tstop
  418044:	mov	x0, x22
  418048:	str	x9, [sp, #8]
  41804c:	bl	4024e0 <malloc@plt>
  418050:	cbz	x0, 4180e8 <_obstack_memory_used@@Base+0x30b4>
  418054:	mov	x1, x25
  418058:	mov	x2, x19
  41805c:	mov	x26, x0
  418060:	bl	402320 <memcpy@plt>
  418064:	add	x0, x26, x19
  418068:	mov	x1, x27
  41806c:	mov	x2, x28
  418070:	bl	402320 <memcpy@plt>
  418074:	ldr	x9, [sp, #8]
  418078:	mov	x25, x26
  41807c:	b	418090 <_obstack_memory_used@@Base+0x305c>
  418080:	mov	x26, xzr
  418084:	b	418090 <_obstack_memory_used@@Base+0x305c>
  418088:	mov	x26, xzr
  41808c:	mov	x25, x27
  418090:	ldrb	w8, [x29, #104]
  418094:	mov	x0, x24
  418098:	mov	x1, x25
  41809c:	mov	x2, x22
  4180a0:	and	w7, w8, #0x1
  4180a4:	mov	x3, x21
  4180a8:	mov	x4, x20
  4180ac:	mov	x5, x23
  4180b0:	mov	x6, x9
  4180b4:	bl	417cf4 <_obstack_memory_used@@Base+0x2cc0>
  4180b8:	mov	x19, x0
  4180bc:	mov	x0, x26
  4180c0:	bl	402770 <free@plt>
  4180c4:	mov	x0, x19
  4180c8:	ldp	x20, x19, [sp, #96]
  4180cc:	ldp	x22, x21, [sp, #80]
  4180d0:	ldp	x24, x23, [sp, #64]
  4180d4:	ldp	x26, x25, [sp, #48]
  4180d8:	ldp	x28, x27, [sp, #32]
  4180dc:	ldp	x29, x30, [sp, #16]
  4180e0:	add	sp, sp, #0x70
  4180e4:	ret
  4180e8:	mov	x0, #0xfffffffffffffffe    	// #-2
  4180ec:	b	4180c8 <_obstack_memory_used@@Base+0x3094>
  4180f0:	sub	sp, sp, #0x20
  4180f4:	stp	x29, x30, [sp, #16]
  4180f8:	add	x29, sp, #0x10
  4180fc:	ldr	x8, [x29, #16]
  418100:	strb	wzr, [sp, #8]
  418104:	str	x8, [sp]
  418108:	bl	417fdc <_obstack_memory_used@@Base+0x2fa8>
  41810c:	ldp	x29, x30, [sp, #16]
  418110:	add	sp, sp, #0x20
  418114:	ret
  418118:	ldrb	w8, [x0, #56]
  41811c:	cmp	x2, #0x0
  418120:	csel	x9, xzr, x4, eq  // eq = none
  418124:	csel	x10, xzr, x3, eq  // eq = none
  418128:	and	w8, w8, #0xfffffff9
  41812c:	orr	w11, w8, #0x2
  418130:	csel	w8, w8, w11, eq  // eq = none
  418134:	strb	w8, [x0, #56]
  418138:	stp	x10, x9, [x1, #8]
  41813c:	str	x2, [x1]
  418140:	ret
  418144:	ldr	w8, [x0, #8]
  418148:	mov	w9, #0xff                  	// #255
  41814c:	movk	w9, #0x4, lsl #16
  418150:	and	w8, w8, w9
  418154:	cmp	w8, #0x3
  418158:	b.eq	41816c <_obstack_memory_used@@Base+0x3138>  // b.none
  41815c:	cmp	w8, #0x6
  418160:	b.ne	418174 <_obstack_memory_used@@Base+0x3140>  // b.any
  418164:	ldr	x0, [x0]
  418168:	b	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41816c:	ldr	x0, [x0]
  418170:	b	402770 <free@plt>
  418174:	ret
  418178:	stp	x29, x30, [sp, #-32]!
  41817c:	str	x19, [sp, #16]
  418180:	mov	x19, x0
  418184:	ldr	x0, [x0, #48]
  418188:	mov	x29, sp
  41818c:	bl	402770 <free@plt>
  418190:	ldr	x0, [x19, #72]
  418194:	bl	402770 <free@plt>
  418198:	ldr	x8, [x19, #80]
  41819c:	add	x9, x19, #0x8
  4181a0:	cmp	x8, x9
  4181a4:	b.eq	4181b8 <_obstack_memory_used@@Base+0x3184>  // b.none
  4181a8:	ldr	x0, [x8, #16]
  4181ac:	bl	402770 <free@plt>
  4181b0:	ldr	x0, [x19, #80]
  4181b4:	bl	402770 <free@plt>
  4181b8:	ldr	x0, [x19, #24]
  4181bc:	bl	402770 <free@plt>
  4181c0:	ldr	x0, [x19, #96]
  4181c4:	bl	402770 <free@plt>
  4181c8:	ldr	x0, [x19, #88]
  4181cc:	bl	402770 <free@plt>
  4181d0:	mov	x0, x19
  4181d4:	ldr	x19, [sp, #16]
  4181d8:	ldp	x29, x30, [sp], #32
  4181dc:	b	402770 <free@plt>
  4181e0:	stp	x29, x30, [sp, #-32]!
  4181e4:	str	x19, [sp, #16]
  4181e8:	mov	x19, x0
  4181ec:	ldr	x0, [x0]
  4181f0:	mov	x29, sp
  4181f4:	bl	402770 <free@plt>
  4181f8:	ldr	x0, [x19, #8]
  4181fc:	bl	402770 <free@plt>
  418200:	ldr	x0, [x19, #16]
  418204:	bl	402770 <free@plt>
  418208:	ldr	x0, [x19, #24]
  41820c:	bl	402770 <free@plt>
  418210:	mov	x0, x19
  418214:	ldr	x19, [sp, #16]
  418218:	ldp	x29, x30, [sp], #32
  41821c:	b	402770 <free@plt>
  418220:	stp	x29, x30, [sp, #-32]!
  418224:	stp	x20, x19, [sp, #16]
  418228:	ldr	x19, [x0]
  41822c:	mov	x29, sp
  418230:	ldr	x0, [x19, #112]
  418234:	cbz	x0, 418248 <_obstack_memory_used@@Base+0x3214>
  418238:	ldr	x20, [x0]
  41823c:	bl	402770 <free@plt>
  418240:	mov	x0, x20
  418244:	cbnz	x20, 418238 <_obstack_memory_used@@Base+0x3204>
  418248:	ldr	x0, [x19, #32]
  41824c:	mov	w8, #0xf                   	// #15
  418250:	str	w8, [x19, #128]
  418254:	stp	xzr, xzr, [x19, #104]
  418258:	bl	402770 <free@plt>
  41825c:	str	xzr, [x19, #32]
  418260:	ldp	x20, x19, [sp, #16]
  418264:	ldp	x29, x30, [sp], #32
  418268:	ret
  41826c:	stp	x29, x30, [sp, #-32]!
  418270:	str	x19, [sp, #16]
  418274:	mov	x19, x0
  418278:	ldr	x0, [x0, #16]
  41827c:	mov	x29, sp
  418280:	bl	402770 <free@plt>
  418284:	ldr	x0, [x19, #24]
  418288:	bl	402770 <free@plt>
  41828c:	ldrb	w8, [x19, #139]
  418290:	cbz	w8, 4182a4 <_obstack_memory_used@@Base+0x3270>
  418294:	ldr	x0, [x19, #8]
  418298:	ldr	x19, [sp, #16]
  41829c:	ldp	x29, x30, [sp], #32
  4182a0:	b	402770 <free@plt>
  4182a4:	ldr	x19, [sp, #16]
  4182a8:	ldp	x29, x30, [sp], #32
  4182ac:	ret
  4182b0:	stp	x29, x30, [sp, #-32]!
  4182b4:	stp	x20, x19, [sp, #16]
  4182b8:	ldr	w8, [x0, #144]
  4182bc:	mov	x19, x0
  4182c0:	mov	x20, x1
  4182c4:	mov	x29, sp
  4182c8:	cmp	w8, #0x2
  4182cc:	b.lt	418308 <_obstack_memory_used@@Base+0x32d4>  // b.tstop
  4182d0:	lsr	x8, x20, #61
  4182d4:	cbnz	x8, 418338 <_obstack_memory_used@@Base+0x3304>
  4182d8:	ldr	x0, [x19, #16]
  4182dc:	lsl	x1, x20, #2
  4182e0:	bl	402610 <realloc@plt>
  4182e4:	cbz	x0, 418338 <_obstack_memory_used@@Base+0x3304>
  4182e8:	mov	x8, x0
  4182ec:	ldr	x0, [x19, #24]
  4182f0:	str	x8, [x19, #16]
  4182f4:	cbz	x0, 418308 <_obstack_memory_used@@Base+0x32d4>
  4182f8:	lsl	x1, x20, #3
  4182fc:	bl	402610 <realloc@plt>
  418300:	cbz	x0, 418338 <_obstack_memory_used@@Base+0x3304>
  418304:	str	x0, [x19, #24]
  418308:	ldrb	w8, [x19, #139]
  41830c:	cbz	w8, 418324 <_obstack_memory_used@@Base+0x32f0>
  418310:	ldr	x0, [x19, #8]
  418314:	mov	x1, x20
  418318:	bl	402610 <realloc@plt>
  41831c:	cbz	x0, 418338 <_obstack_memory_used@@Base+0x3304>
  418320:	str	x0, [x19, #8]
  418324:	mov	w0, wzr
  418328:	str	x20, [x19, #64]
  41832c:	ldp	x20, x19, [sp, #16]
  418330:	ldp	x29, x30, [sp], #32
  418334:	ret
  418338:	mov	w0, #0xc                   	// #12
  41833c:	b	41832c <_obstack_memory_used@@Base+0x32f8>
  418340:	sub	sp, sp, #0xb0
  418344:	stp	x29, x30, [sp, #80]
  418348:	stp	x28, x27, [sp, #96]
  41834c:	stp	x26, x25, [sp, #112]
  418350:	stp	x24, x23, [sp, #128]
  418354:	stp	x22, x21, [sp, #144]
  418358:	stp	x20, x19, [sp, #160]
  41835c:	ldr	x8, [x0, #64]
  418360:	ldr	x9, [x0, #88]
  418364:	ldrb	w10, [x0, #138]
  418368:	ldr	x25, [x0, #48]
  41836c:	mov	x19, x0
  418370:	cmp	x8, x9
  418374:	csel	x26, x9, x8, gt
  418378:	add	x29, sp, #0x50
  41837c:	cbnz	w10, 418390 <_obstack_memory_used@@Base+0x335c>
  418380:	ldr	x8, [x19, #120]
  418384:	cbnz	x8, 418390 <_obstack_memory_used@@Base+0x335c>
  418388:	ldrb	w8, [x19, #140]
  41838c:	cbz	w8, 418398 <_obstack_memory_used@@Base+0x3364>
  418390:	ldr	x23, [x19, #56]
  418394:	b	418530 <_obstack_memory_used@@Base+0x34fc>
  418398:	cmp	x26, x25
  41839c:	b.le	418528 <_obstack_memory_used@@Base+0x34f4>
  4183a0:	add	x20, x19, #0x20
  4183a4:	ldr	x21, [x19, #40]
  4183a8:	ldr	x22, [x19]
  4183ac:	add	x8, x21, x25
  4183b0:	ldrsb	w23, [x22, x8]
  4183b4:	tbnz	w23, #31, 4183f0 <_obstack_memory_used@@Base+0x33bc>
  4183b8:	mov	x0, x20
  4183bc:	bl	4026e0 <mbsinit@plt>
  4183c0:	cbz	w0, 4183f0 <_obstack_memory_used@@Base+0x33bc>
  4183c4:	and	x21, x23, #0xff
  4183c8:	bl	402620 <__ctype_toupper_loc@plt>
  4183cc:	ldr	x8, [x0]
  4183d0:	ldr	x9, [x19, #8]
  4183d4:	add	x27, x25, #0x1
  4183d8:	ldr	w8, [x8, x21, lsl #2]
  4183dc:	strb	w8, [x9, x25]
  4183e0:	ldp	x8, x9, [x19, #8]
  4183e4:	ldrb	w8, [x8, x25]
  4183e8:	str	w8, [x9, x25, lsl #2]
  4183ec:	b	4184b8 <_obstack_memory_used@@Base+0x3484>
  4183f0:	ldr	x8, [x20]
  4183f4:	add	x9, x22, x21
  4183f8:	sub	x2, x26, x25
  4183fc:	add	x1, x9, x25
  418400:	add	x0, sp, #0x4
  418404:	mov	x3, x20
  418408:	stur	x8, [x29, #-8]
  41840c:	bl	414ca4 <wcrtomb@plt+0x122e4>
  418410:	sub	x23, x0, #0x1
  418414:	mov	x21, x0
  418418:	cmn	x23, #0x4
  41841c:	b.hi	4184c8 <_obstack_memory_used@@Base+0x3494>  // b.pmore
  418420:	ldr	w0, [sp, #4]
  418424:	bl	4028d0 <towupper@plt>
  418428:	ldr	w8, [sp, #4]
  41842c:	mov	w22, w0
  418430:	cmp	w0, w8
  418434:	b.ne	418450 <_obstack_memory_used@@Base+0x341c>  // b.any
  418438:	ldp	x9, x8, [x19]
  41843c:	ldr	x10, [x19, #40]
  418440:	add	x0, x8, x25
  418444:	add	x8, x9, x10
  418448:	add	x1, x8, x25
  41844c:	b	418474 <_obstack_memory_used@@Base+0x3440>
  418450:	add	x0, sp, #0x8
  418454:	sub	x2, x29, #0x8
  418458:	mov	w1, w22
  41845c:	bl	4029c0 <wcrtomb@plt>
  418460:	cmp	x21, x0
  418464:	b.ne	418518 <_obstack_memory_used@@Base+0x34e4>  // b.any
  418468:	ldr	x8, [x19, #8]
  41846c:	add	x1, sp, #0x8
  418470:	add	x0, x8, x25
  418474:	mov	x2, x21
  418478:	bl	402320 <memcpy@plt>
  41847c:	ldr	x8, [x19, #16]
  418480:	add	x24, x21, x25
  418484:	add	x27, x25, #0x1
  418488:	cmp	x27, x24
  41848c:	str	w22, [x8, x25, lsl #2]
  418490:	b.ge	4184b8 <_obstack_memory_used@@Base+0x3484>  // b.tcont
  418494:	add	x8, x8, x25, lsl #2
  418498:	lsl	x9, x21, #2
  41849c:	add	x0, x8, #0x4
  4184a0:	sub	x2, x9, #0x4
  4184a4:	mov	w1, #0xff                  	// #255
  4184a8:	bl	4025b0 <memset@plt>
  4184ac:	subs	x23, x23, #0x1
  4184b0:	b.ne	4184ac <_obstack_memory_used@@Base+0x3478>  // b.any
  4184b4:	mov	x27, x24
  4184b8:	cmp	x26, x27
  4184bc:	mov	x25, x27
  4184c0:	b.gt	4183a4 <_obstack_memory_used@@Base+0x3370>
  4184c4:	b	4187fc <_obstack_memory_used@@Base+0x37c8>
  4184c8:	add	x8, x21, #0x1
  4184cc:	cmp	x8, #0x2
  4184d0:	b.cc	4184e4 <_obstack_memory_used@@Base+0x34b0>  // b.lo, b.ul, b.last
  4184d4:	ldr	x8, [x19, #64]
  4184d8:	ldr	x9, [x19, #88]
  4184dc:	cmp	x8, x9
  4184e0:	b.lt	418520 <_obstack_memory_used@@Base+0x34ec>  // b.tstop
  4184e4:	ldr	x8, [x19, #40]
  4184e8:	ldp	x9, x10, [x19]
  4184ec:	add	x27, x25, #0x1
  4184f0:	cmn	x21, #0x1
  4184f4:	add	x8, x8, x25
  4184f8:	ldrb	w8, [x9, x8]
  4184fc:	strb	w8, [x10, x25]
  418500:	ldr	x9, [x19, #16]
  418504:	str	w8, [x9, x25, lsl #2]
  418508:	b.ne	4184b8 <_obstack_memory_used@@Base+0x3484>  // b.any
  41850c:	ldur	x8, [x29, #-8]
  418510:	str	x8, [x20]
  418514:	b	4184b8 <_obstack_memory_used@@Base+0x3484>
  418518:	mov	x27, x25
  41851c:	b	418540 <_obstack_memory_used@@Base+0x350c>
  418520:	ldur	x8, [x29, #-8]
  418524:	str	x8, [x20]
  418528:	mov	x27, x25
  41852c:	b	4187fc <_obstack_memory_used@@Base+0x37c8>
  418530:	cmp	x25, x26
  418534:	mov	x27, x25
  418538:	mov	x25, x23
  41853c:	b.ge	4187fc <_obstack_memory_used@@Base+0x37c8>  // b.tcont
  418540:	mov	x21, x19
  418544:	ldr	x8, [x21, #32]!
  418548:	sub	x2, x26, x27
  41854c:	stur	x8, [x29, #-8]
  418550:	ldr	x8, [x21, #88]
  418554:	cbnz	x8, 418620 <_obstack_memory_used@@Base+0x35ec>
  418558:	ldr	x8, [x19]
  41855c:	ldr	x9, [x19, #40]
  418560:	add	x8, x8, x9
  418564:	add	x24, x8, x25
  418568:	mov	x0, sp
  41856c:	mov	x1, x24
  418570:	mov	x3, x21
  418574:	bl	414ca4 <wcrtomb@plt+0x122e4>
  418578:	sub	x28, x0, #0x1
  41857c:	mov	x20, x0
  418580:	cmn	x28, #0x4
  418584:	b.hi	418674 <_obstack_memory_used@@Base+0x3640>  // b.pmore
  418588:	ldr	w0, [sp]
  41858c:	bl	4028d0 <towupper@plt>
  418590:	ldr	w8, [sp]
  418594:	mov	w22, w0
  418598:	cmp	w0, w8
  41859c:	b.ne	4185ac <_obstack_memory_used@@Base+0x3578>  // b.any
  4185a0:	ldr	x8, [x19, #8]
  4185a4:	mov	x1, x24
  4185a8:	b	4185cc <_obstack_memory_used@@Base+0x3598>
  4185ac:	add	x0, sp, #0x8
  4185b0:	sub	x2, x29, #0x8
  4185b4:	mov	w1, w22
  4185b8:	bl	4029c0 <wcrtomb@plt>
  4185bc:	subs	x9, x0, x20
  4185c0:	b.ne	4186dc <_obstack_memory_used@@Base+0x36a8>  // b.any
  4185c4:	ldr	x8, [x19, #8]
  4185c8:	add	x1, sp, #0x8
  4185cc:	add	x0, x8, x27
  4185d0:	mov	x2, x20
  4185d4:	bl	402320 <memcpy@plt>
  4185d8:	ldrb	w8, [x19, #140]
  4185dc:	cbnz	w8, 4187d0 <_obstack_memory_used@@Base+0x379c>
  4185e0:	ldr	x8, [x19, #16]
  4185e4:	add	x23, x20, x25
  4185e8:	add	x21, x20, x27
  4185ec:	add	x25, x27, #0x1
  4185f0:	cmp	x25, x21
  4185f4:	str	w22, [x8, x27, lsl #2]
  4185f8:	b.ge	418530 <_obstack_memory_used@@Base+0x34fc>  // b.tcont
  4185fc:	add	x0, x8, x25, lsl #2
  418600:	lsl	x8, x20, #2
  418604:	sub	x2, x8, #0x4
  418608:	mov	w1, #0xff                  	// #255
  41860c:	bl	4025b0 <memset@plt>
  418610:	subs	x28, x28, #0x1
  418614:	b.ne	418610 <_obstack_memory_used@@Base+0x35dc>  // b.any
  418618:	mov	x25, x21
  41861c:	b	418530 <_obstack_memory_used@@Base+0x34fc>
  418620:	ldr	w9, [x19, #144]
  418624:	add	x24, sp, #0x8
  418628:	cmp	w9, #0x1
  41862c:	b.lt	418568 <_obstack_memory_used@@Base+0x3534>  // b.tstop
  418630:	cmp	x2, #0x1
  418634:	b.lt	418568 <_obstack_memory_used@@Base+0x3534>  // b.tstop
  418638:	ldr	x11, [x19, #40]
  41863c:	ldr	x12, [x19]
  418640:	mov	x10, xzr
  418644:	add	x11, x25, x11
  418648:	add	x11, x12, x11
  41864c:	ldrb	w12, [x11, x10]
  418650:	add	x24, sp, #0x8
  418654:	ldrb	w12, [x8, x12]
  418658:	strb	w12, [x24, x10]
  41865c:	add	x10, x10, #0x1
  418660:	cmp	x10, x9
  418664:	b.cs	418568 <_obstack_memory_used@@Base+0x3534>  // b.hs, b.nlast
  418668:	cmp	x2, x10
  41866c:	b.gt	41864c <_obstack_memory_used@@Base+0x3618>
  418670:	b	418568 <_obstack_memory_used@@Base+0x3534>
  418674:	add	x8, x20, #0x1
  418678:	cmp	x8, #0x2
  41867c:	b.cc	418690 <_obstack_memory_used@@Base+0x365c>  // b.lo, b.ul, b.last
  418680:	ldr	x8, [x19, #64]
  418684:	ldr	x9, [x19, #88]
  418688:	cmp	x8, x9
  41868c:	b.lt	4187f4 <_obstack_memory_used@@Base+0x37c0>  // b.tstop
  418690:	ldr	x8, [x19, #40]
  418694:	ldr	x10, [x19]
  418698:	ldr	x9, [x19, #120]
  41869c:	add	x8, x8, x25
  4186a0:	ldrb	w8, [x10, x8]
  4186a4:	cbnz	x9, 41882c <_obstack_memory_used@@Base+0x37f8>
  4186a8:	ldr	x9, [x19, #8]
  4186ac:	strb	w8, [x9, x27]
  4186b0:	ldrb	w9, [x19, #140]
  4186b4:	cbnz	w9, 418834 <_obstack_memory_used@@Base+0x3800>
  4186b8:	ldr	x9, [x19, #16]
  4186bc:	add	x23, x25, #0x1
  4186c0:	add	x25, x27, #0x1
  4186c4:	cmn	x20, #0x1
  4186c8:	str	w8, [x9, x27, lsl #2]
  4186cc:	b.ne	418530 <_obstack_memory_used@@Base+0x34fc>  // b.any
  4186d0:	ldur	x8, [x29, #-8]
  4186d4:	str	x8, [x21]
  4186d8:	b	418530 <_obstack_memory_used@@Base+0x34fc>
  4186dc:	mov	x23, x0
  4186e0:	cmn	x0, #0x1
  4186e4:	b.eq	4185a0 <_obstack_memory_used@@Base+0x356c>  // b.none
  4186e8:	ldr	x8, [x19, #64]
  4186ec:	add	x24, x23, x27
  4186f0:	cmp	x24, x8
  4186f4:	b.hi	4187f4 <_obstack_memory_used@@Base+0x37c0>  // b.pmore
  4186f8:	ldr	x0, [x19, #24]
  4186fc:	mov	x21, x9
  418700:	cbnz	x0, 418714 <_obstack_memory_used@@Base+0x36e0>
  418704:	lsl	x0, x8, #3
  418708:	bl	4024e0 <malloc@plt>
  41870c:	str	x0, [x19, #24]
  418710:	cbz	x0, 418824 <_obstack_memory_used@@Base+0x37f0>
  418714:	ldrb	w8, [x19, #140]
  418718:	cbnz	w8, 41873c <_obstack_memory_used@@Base+0x3708>
  41871c:	cbz	x27, 418734 <_obstack_memory_used@@Base+0x3700>
  418720:	mov	x8, xzr
  418724:	str	x8, [x0, x8, lsl #3]
  418728:	add	x8, x8, #0x1
  41872c:	cmp	x27, x8
  418730:	b.ne	418724 <_obstack_memory_used@@Base+0x36f0>  // b.any
  418734:	mov	w8, #0x1                   	// #1
  418738:	strb	w8, [x19, #140]
  41873c:	ldr	x8, [x19, #8]
  418740:	add	x1, sp, #0x8
  418744:	mov	x2, x23
  418748:	add	x0, x8, x27
  41874c:	bl	402320 <memcpy@plt>
  418750:	ldr	x8, [x19, #16]
  418754:	cmp	x23, #0x2
  418758:	str	w22, [x8, x27, lsl #2]
  41875c:	ldr	x9, [x19, #24]
  418760:	str	x25, [x9, x27, lsl #3]
  418764:	b.cc	418798 <_obstack_memory_used@@Base+0x3764>  // b.lo, b.ul, b.last
  418768:	add	x8, x8, x27, lsl #2
  41876c:	add	x9, x9, x27, lsl #3
  418770:	mov	w10, #0x1                   	// #1
  418774:	mov	w11, #0xffffffff            	// #-1
  418778:	cmp	x10, x20
  41877c:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  418780:	add	x12, x12, x25
  418784:	str	x12, [x9, x10, lsl #3]
  418788:	str	w11, [x8, x10, lsl #2]
  41878c:	add	x10, x10, #0x1
  418790:	cmp	x23, x10
  418794:	b.ne	418778 <_obstack_memory_used@@Base+0x3744>  // b.any
  418798:	ldp	x8, x9, [x19, #88]
  41879c:	add	x8, x8, x21
  4187a0:	cmp	x9, x25
  4187a4:	str	x8, [x19, #88]
  4187a8:	b.le	4187b8 <_obstack_memory_used@@Base+0x3784>
  4187ac:	ldr	x9, [x19, #104]
  4187b0:	add	x9, x9, x21
  4187b4:	str	x9, [x19, #104]
  4187b8:	ldr	x9, [x19, #64]
  4187bc:	add	x23, x20, x25
  4187c0:	mov	x25, x24
  4187c4:	cmp	x9, x8
  4187c8:	csel	x26, x8, x9, gt
  4187cc:	b	418530 <_obstack_memory_used@@Base+0x34fc>
  4187d0:	ldr	x8, [x19, #24]
  4187d4:	mov	x9, x25
  4187d8:	mov	x10, x20
  4187dc:	add	x8, x8, x27, lsl #3
  4187e0:	str	x9, [x8], #8
  4187e4:	subs	x10, x10, #0x1
  4187e8:	add	x9, x9, #0x1
  4187ec:	b.ne	4187e0 <_obstack_memory_used@@Base+0x37ac>  // b.any
  4187f0:	b	4185e0 <_obstack_memory_used@@Base+0x35ac>
  4187f4:	ldur	x8, [x29, #-8]
  4187f8:	str	x8, [x21]
  4187fc:	mov	w0, wzr
  418800:	stp	x27, x25, [x19, #48]
  418804:	ldp	x20, x19, [sp, #160]
  418808:	ldp	x22, x21, [sp, #144]
  41880c:	ldp	x24, x23, [sp, #128]
  418810:	ldp	x26, x25, [sp, #112]
  418814:	ldp	x28, x27, [sp, #96]
  418818:	ldp	x29, x30, [sp, #80]
  41881c:	add	sp, sp, #0xb0
  418820:	ret
  418824:	mov	w0, #0xc                   	// #12
  418828:	b	418804 <_obstack_memory_used@@Base+0x37d0>
  41882c:	ldrb	w8, [x9, x8]
  418830:	b	4186a8 <_obstack_memory_used@@Base+0x3674>
  418834:	ldr	x9, [x19, #24]
  418838:	str	x25, [x9, x27, lsl #3]
  41883c:	b	4186b8 <_obstack_memory_used@@Base+0x3684>
  418840:	stp	x29, x30, [sp, #-48]!
  418844:	stp	x20, x19, [sp, #32]
  418848:	ldr	x8, [x0, #64]
  41884c:	ldr	x9, [x0, #88]
  418850:	ldr	x20, [x0, #48]
  418854:	str	x21, [sp, #16]
  418858:	mov	x19, x0
  41885c:	cmp	x8, x9
  418860:	csel	x21, x9, x8, gt
  418864:	mov	x29, sp
  418868:	cmp	x20, x21
  41886c:	b.ge	4188a4 <_obstack_memory_used@@Base+0x3870>  // b.tcont
  418870:	ldr	x8, [x19]
  418874:	ldr	x9, [x19, #40]
  418878:	add	x9, x8, x9
  41887c:	ldr	x8, [x19, #120]
  418880:	ldrb	w0, [x9, x20]
  418884:	cbnz	x8, 41889c <_obstack_memory_used@@Base+0x3868>
  418888:	bl	4024f0 <toupper@plt>
  41888c:	ldr	x8, [x19, #8]
  418890:	strb	w0, [x8, x20]
  418894:	add	x20, x20, #0x1
  418898:	b	418868 <_obstack_memory_used@@Base+0x3834>
  41889c:	ldrb	w0, [x8, x0]
  4188a0:	b	418888 <_obstack_memory_used@@Base+0x3854>
  4188a4:	stp	x20, x20, [x19, #48]
  4188a8:	ldp	x20, x19, [sp, #32]
  4188ac:	ldr	x21, [sp, #16]
  4188b0:	ldp	x29, x30, [sp], #48
  4188b4:	ret
  4188b8:	sub	sp, sp, #0x90
  4188bc:	stp	x29, x30, [sp, #80]
  4188c0:	stp	x24, x23, [sp, #96]
  4188c4:	stp	x22, x21, [sp, #112]
  4188c8:	stp	x20, x19, [sp, #128]
  4188cc:	ldr	x8, [x0, #64]
  4188d0:	ldr	x9, [x0, #88]
  4188d4:	ldr	x23, [x0, #48]
  4188d8:	mov	x19, x0
  4188dc:	add	x29, sp, #0x50
  4188e0:	cmp	x8, x9
  4188e4:	csel	x22, x9, x8, gt
  4188e8:	cmp	x22, x23
  4188ec:	b.le	418a6c <_obstack_memory_used@@Base+0x3a38>
  4188f0:	add	x20, x19, #0x20
  4188f4:	ldr	x8, [x19, #120]
  4188f8:	ldr	x24, [x19, #32]
  4188fc:	sub	x2, x22, x23
  418900:	cbnz	x8, 4189c4 <_obstack_memory_used@@Base+0x3990>
  418904:	ldr	x8, [x19]
  418908:	ldr	x9, [x19, #40]
  41890c:	add	x8, x8, x9
  418910:	add	x1, x8, x23
  418914:	add	x0, sp, #0xc
  418918:	mov	x3, x20
  41891c:	bl	414ca4 <wcrtomb@plt+0x122e4>
  418920:	add	x8, x0, #0x1
  418924:	cmp	x8, #0x2
  418928:	b.cc	418948 <_obstack_memory_used@@Base+0x3914>  // b.lo, b.ul, b.last
  41892c:	mov	x21, x0
  418930:	cmn	x0, #0x2
  418934:	b.ne	418970 <_obstack_memory_used@@Base+0x393c>  // b.any
  418938:	ldr	x8, [x19, #64]
  41893c:	ldr	x9, [x19, #88]
  418940:	cmp	x8, x9
  418944:	b.lt	418a68 <_obstack_memory_used@@Base+0x3a34>  // b.tstop
  418948:	ldr	x8, [x19, #40]
  41894c:	ldr	x9, [x19]
  418950:	add	x8, x8, x23
  418954:	ldrb	w8, [x9, x8]
  418958:	str	w8, [sp, #12]
  41895c:	ldr	x9, [x19, #120]
  418960:	cbnz	x9, 418a5c <_obstack_memory_used@@Base+0x3a28>
  418964:	mov	w21, #0x1                   	// #1
  418968:	str	x24, [x20]
  41896c:	b	418974 <_obstack_memory_used@@Base+0x3940>
  418970:	ldr	w8, [sp, #12]
  418974:	ldr	x10, [x19, #16]
  418978:	add	x24, x21, x23
  41897c:	add	x9, x23, #0x1
  418980:	cmp	x9, x24
  418984:	str	w8, [x10, x23, lsl #2]
  418988:	b.ge	4189b4 <_obstack_memory_used@@Base+0x3980>  // b.tcont
  41898c:	add	x8, x10, x23, lsl #2
  418990:	lsl	x9, x21, #2
  418994:	add	x0, x8, #0x4
  418998:	sub	x2, x9, #0x4
  41899c:	mov	w1, #0xff                  	// #255
  4189a0:	bl	4025b0 <memset@plt>
  4189a4:	sub	x8, x21, #0x1
  4189a8:	subs	x8, x8, #0x1
  4189ac:	b.ne	4189a8 <_obstack_memory_used@@Base+0x3974>  // b.any
  4189b0:	mov	x9, x24
  4189b4:	cmp	x22, x9
  4189b8:	mov	x23, x9
  4189bc:	b.gt	4188f4 <_obstack_memory_used@@Base+0x38c0>
  4189c0:	b	418a70 <_obstack_memory_used@@Base+0x3a3c>
  4189c4:	ldr	w9, [x19, #144]
  4189c8:	add	x1, sp, #0x10
  4189cc:	cmp	w9, #0x1
  4189d0:	b.lt	418914 <_obstack_memory_used@@Base+0x38e0>  // b.tstop
  4189d4:	cmp	x2, #0x1
  4189d8:	b.lt	418914 <_obstack_memory_used@@Base+0x38e0>  // b.tstop
  4189dc:	ldr	x9, [x19, #40]
  4189e0:	ldp	x10, x11, [x19]
  4189e4:	add	x1, sp, #0x10
  4189e8:	add	x9, x23, x9
  4189ec:	ldrb	w9, [x10, x9]
  4189f0:	ldrb	w8, [x8, x9]
  4189f4:	strb	w8, [x11, x23]
  4189f8:	strb	w8, [sp, #16]
  4189fc:	ldr	w8, [x19, #144]
  418a00:	cmp	w8, #0x2
  418a04:	b.lt	418914 <_obstack_memory_used@@Base+0x38e0>  // b.tstop
  418a08:	cmp	x2, #0x2
  418a0c:	b.lt	418914 <_obstack_memory_used@@Base+0x38e0>  // b.tstop
  418a10:	mov	w8, #0x1                   	// #1
  418a14:	ldr	x9, [x19, #40]
  418a18:	ldp	x10, x12, [x19]
  418a1c:	ldr	x11, [x19, #120]
  418a20:	add	x1, sp, #0x10
  418a24:	add	x9, x10, x9
  418a28:	add	x9, x9, x23
  418a2c:	ldrb	w9, [x9, x8]
  418a30:	add	x10, x12, x23
  418a34:	ldrb	w9, [x11, x9]
  418a38:	strb	w9, [x10, x8]
  418a3c:	strb	w9, [x1, x8]
  418a40:	ldr	w9, [x19, #144]
  418a44:	add	x8, x8, #0x1
  418a48:	cmp	w9, w8
  418a4c:	b.le	418914 <_obstack_memory_used@@Base+0x38e0>
  418a50:	cmp	x2, x8
  418a54:	b.gt	418a14 <_obstack_memory_used@@Base+0x39e0>
  418a58:	b	418914 <_obstack_memory_used@@Base+0x38e0>
  418a5c:	ldrb	w8, [x9, w8, uxtw]
  418a60:	str	w8, [sp, #12]
  418a64:	b	418964 <_obstack_memory_used@@Base+0x3930>
  418a68:	str	x24, [x20]
  418a6c:	mov	x9, x23
  418a70:	stp	x9, x9, [x19, #48]
  418a74:	ldp	x20, x19, [sp, #128]
  418a78:	ldp	x22, x21, [sp, #112]
  418a7c:	ldp	x24, x23, [sp, #96]
  418a80:	ldp	x29, x30, [sp, #80]
  418a84:	add	sp, sp, #0x90
  418a88:	ret
  418a8c:	ldr	x9, [x0, #64]
  418a90:	ldr	x10, [x0, #88]
  418a94:	ldr	x8, [x0, #48]
  418a98:	cmp	x9, x10
  418a9c:	csel	x9, x10, x9, gt
  418aa0:	cmp	x8, x9
  418aa4:	b.ge	418acc <_obstack_memory_used@@Base+0x3a98>  // b.tcont
  418aa8:	ldr	x10, [x0, #40]
  418aac:	ldp	x11, x13, [x0]
  418ab0:	ldr	x12, [x0, #120]
  418ab4:	add	x10, x11, x10
  418ab8:	ldrb	w10, [x10, x8]
  418abc:	ldrb	w10, [x12, x10]
  418ac0:	strb	w10, [x13, x8]
  418ac4:	add	x8, x8, #0x1
  418ac8:	b	418aa0 <_obstack_memory_used@@Base+0x3a6c>
  418acc:	stp	x8, x8, [x0, #48]
  418ad0:	ret
  418ad4:	sub	sp, sp, #0x80
  418ad8:	stp	x29, x30, [sp, #32]
  418adc:	stp	x28, x27, [sp, #48]
  418ae0:	stp	x26, x25, [sp, #64]
  418ae4:	stp	x24, x23, [sp, #80]
  418ae8:	stp	x22, x21, [sp, #96]
  418aec:	stp	x20, x19, [sp, #112]
  418af0:	ldr	x25, [x1]
  418af4:	add	x29, sp, #0x20
  418af8:	mov	x20, x5
  418afc:	mov	x21, x4
  418b00:	ldr	x8, [x25, #168]
  418b04:	mov	x23, x2
  418b08:	mov	x24, x1
  418b0c:	mov	x26, x0
  418b10:	stp	x8, x3, [sp]
  418b14:	bl	419260 <_obstack_memory_used@@Base+0x422c>
  418b18:	mov	x19, x0
  418b1c:	cbnz	x0, 418b28 <_obstack_memory_used@@Base+0x3af4>
  418b20:	ldr	w8, [x20]
  418b24:	cbnz	w8, 418c54 <_obstack_memory_used@@Base+0x3c20>
  418b28:	ldr	x8, [sp, #8]
  418b2c:	mov	w28, #0xa                   	// #10
  418b30:	orr	x27, x8, #0x800000
  418b34:	ldrb	w8, [x23, #8]
  418b38:	cmp	w8, #0xa
  418b3c:	b.ne	418bec <_obstack_memory_used@@Base+0x3bb8>  // b.any
  418b40:	mov	x0, x23
  418b44:	mov	x1, x26
  418b48:	mov	x2, x27
  418b4c:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  418b50:	ldr	x8, [x26, #72]
  418b54:	add	x8, x8, w0, sxtw
  418b58:	str	x8, [x26, #72]
  418b5c:	ldrb	w8, [x23, #8]
  418b60:	orr	w9, w8, #0x8
  418b64:	cmp	w9, #0xa
  418b68:	b.ne	418b94 <_obstack_memory_used@@Base+0x3b60>  // b.any
  418b6c:	mov	x2, xzr
  418b70:	add	x3, sp, #0x10
  418b74:	mov	x0, x25
  418b78:	mov	x1, x19
  418b7c:	str	xzr, [sp, #16]
  418b80:	str	w28, [sp, #24]
  418b84:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  418b88:	mov	x19, x0
  418b8c:	cbnz	x0, 418b34 <_obstack_memory_used@@Base+0x3b00>
  418b90:	b	418be4 <_obstack_memory_used@@Base+0x3bb0>
  418b94:	cbz	x21, 418ba0 <_obstack_memory_used@@Base+0x3b6c>
  418b98:	cmp	w8, #0x9
  418b9c:	b.eq	418b6c <_obstack_memory_used@@Base+0x3b38>  // b.none
  418ba0:	ldp	x8, x3, [sp]
  418ba4:	ldr	x22, [x25, #168]
  418ba8:	mov	x0, x26
  418bac:	mov	x1, x24
  418bb0:	mov	x2, x23
  418bb4:	mov	x4, x21
  418bb8:	mov	x5, x20
  418bbc:	str	x8, [x25, #168]
  418bc0:	bl	419260 <_obstack_memory_used@@Base+0x422c>
  418bc4:	mov	x2, x0
  418bc8:	cbnz	x0, 418bd4 <_obstack_memory_used@@Base+0x3ba0>
  418bcc:	ldr	w8, [x20]
  418bd0:	cbnz	w8, 418c10 <_obstack_memory_used@@Base+0x3bdc>
  418bd4:	ldr	x8, [x25, #168]
  418bd8:	orr	x8, x8, x22
  418bdc:	str	x8, [x25, #168]
  418be0:	b	418b70 <_obstack_memory_used@@Base+0x3b3c>
  418be4:	mov	w8, #0xc                   	// #12
  418be8:	str	w8, [x20]
  418bec:	mov	x0, x19
  418bf0:	ldp	x20, x19, [sp, #112]
  418bf4:	ldp	x22, x21, [sp, #96]
  418bf8:	ldp	x24, x23, [sp, #80]
  418bfc:	ldp	x26, x25, [sp, #64]
  418c00:	ldp	x28, x27, [sp, #48]
  418c04:	ldp	x29, x30, [sp, #32]
  418c08:	add	sp, sp, #0x80
  418c0c:	ret
  418c10:	cbz	x19, 418bec <_obstack_memory_used@@Base+0x3bb8>
  418c14:	mov	x20, x19
  418c18:	ldr	x19, [x19, #8]
  418c1c:	cbnz	x19, 418c14 <_obstack_memory_used@@Base+0x3be0>
  418c20:	ldr	x19, [x20, #16]
  418c24:	cbnz	x19, 418c14 <_obstack_memory_used@@Base+0x3be0>
  418c28:	add	x0, x20, #0x28
  418c2c:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  418c30:	ldr	x8, [x20]
  418c34:	cbz	x8, 418c54 <_obstack_memory_used@@Base+0x3c20>
  418c38:	ldr	x19, [x8, #16]
  418c3c:	cmp	x19, x20
  418c40:	mov	x20, x8
  418c44:	b.eq	418c28 <_obstack_memory_used@@Base+0x3bf4>  // b.none
  418c48:	mov	x20, x8
  418c4c:	cbz	x19, 418c28 <_obstack_memory_used@@Base+0x3bf4>
  418c50:	b	418c14 <_obstack_memory_used@@Base+0x3be0>
  418c54:	mov	x19, xzr
  418c58:	b	418bec <_obstack_memory_used@@Base+0x3bb8>
  418c5c:	sub	sp, sp, #0x50
  418c60:	stp	x29, x30, [sp, #16]
  418c64:	stp	x24, x23, [sp, #32]
  418c68:	stp	x22, x21, [sp, #48]
  418c6c:	stp	x20, x19, [sp, #64]
  418c70:	ldr	x9, [x1, #104]
  418c74:	ldr	x8, [x1, #72]
  418c78:	mov	x19, x0
  418c7c:	add	x29, sp, #0x10
  418c80:	cmp	x9, x8
  418c84:	b.le	418d68 <_obstack_memory_used@@Base+0x3d34>
  418c88:	ldr	x9, [x1, #8]
  418c8c:	mov	x23, x19
  418c90:	mov	x20, x2
  418c94:	mov	x21, x1
  418c98:	ldrb	w24, [x9, x8]
  418c9c:	strb	w24, [x23], #8
  418ca0:	ldr	w8, [x23]
  418ca4:	and	w9, w8, #0xff9fffff
  418ca8:	str	w9, [x23]
  418cac:	ldr	w11, [x1, #144]
  418cb0:	cmp	w11, #0x2
  418cb4:	b.lt	418cd8 <_obstack_memory_used@@Base+0x3ca4>  // b.tstop
  418cb8:	ldr	x9, [x21, #72]
  418cbc:	ldr	x10, [x21, #48]
  418cc0:	cmp	x9, x10
  418cc4:	b.eq	418cd8 <_obstack_memory_used@@Base+0x3ca4>  // b.none
  418cc8:	ldr	x10, [x21, #16]
  418ccc:	ldr	w9, [x10, x9, lsl #2]
  418cd0:	cmn	w9, #0x1
  418cd4:	b.eq	418f84 <_obstack_memory_used@@Base+0x3f50>  // b.none
  418cd8:	mov	w9, #0xff00                	// #65280
  418cdc:	cmp	w24, #0x5c
  418ce0:	movk	w9, #0xff9f, lsl #16
  418ce4:	b.ne	418d78 <_obstack_memory_used@@Base+0x3d44>  // b.any
  418ce8:	ldr	x12, [x21, #72]
  418cec:	ldr	x13, [x21, #88]
  418cf0:	add	x10, x12, #0x1
  418cf4:	cmp	x10, x13
  418cf8:	b.ge	418dc8 <_obstack_memory_used@@Base+0x3d94>  // b.tcont
  418cfc:	ldrb	w13, [x21, #139]
  418d00:	cbnz	w13, 4191fc <_obstack_memory_used@@Base+0x41c8>
  418d04:	ldr	x11, [x21, #8]
  418d08:	ldrb	w22, [x11, x10]
  418d0c:	and	w8, w8, w9
  418d10:	orr	w24, w8, #0x1
  418d14:	strb	w22, [x19]
  418d18:	str	w24, [x19, #8]
  418d1c:	ldr	w8, [x21, #144]
  418d20:	cmp	w8, #0x2
  418d24:	b.lt	418ed8 <_obstack_memory_used@@Base+0x3ea4>  // b.tstop
  418d28:	ldr	x8, [x21, #72]
  418d2c:	ldr	x9, [x21, #16]
  418d30:	add	x8, x9, x8, lsl #2
  418d34:	ldr	w21, [x8, #4]
  418d38:	mov	w0, w21
  418d3c:	bl	402860 <iswalnum@plt>
  418d40:	ldr	w9, [x23]
  418d44:	cmp	w0, #0x0
  418d48:	mov	w8, #0x5f                  	// #95
  418d4c:	mov	w10, #0x400000              	// #4194304
  418d50:	ccmp	w21, w8, #0x4, eq  // eq = none
  418d54:	csel	w8, w10, wzr, eq  // eq = none
  418d58:	and	w9, w9, #0xffbfffff
  418d5c:	orr	w8, w8, w9
  418d60:	and	x9, x22, #0xff
  418d64:	b	418f00 <_obstack_memory_used@@Base+0x3ecc>
  418d68:	mov	w8, #0x2                   	// #2
  418d6c:	mov	w0, wzr
  418d70:	strb	w8, [x19, #8]
  418d74:	b	4191e4 <_obstack_memory_used@@Base+0x41b0>
  418d78:	and	w8, w8, w9
  418d7c:	orr	w22, w8, #0x1
  418d80:	str	w22, [x23]
  418d84:	ldr	w8, [x21, #144]
  418d88:	cmp	w8, #0x2
  418d8c:	b.lt	418dd8 <_obstack_memory_used@@Base+0x3da4>  // b.tstop
  418d90:	ldr	x8, [x21, #72]
  418d94:	ldr	x9, [x21, #16]
  418d98:	ldr	w22, [x9, x8, lsl #2]
  418d9c:	mov	w0, w22
  418da0:	bl	402860 <iswalnum@plt>
  418da4:	ldr	w9, [x23]
  418da8:	cmp	w0, #0x0
  418dac:	mov	w8, #0x5f                  	// #95
  418db0:	ccmp	w22, w8, #0x4, eq  // eq = none
  418db4:	mov	w8, #0x400000              	// #4194304
  418db8:	csel	w8, w8, wzr, eq  // eq = none
  418dbc:	and	w9, w9, #0xffbfffff
  418dc0:	orr	w8, w8, w9
  418dc4:	b	418e04 <_obstack_memory_used@@Base+0x3dd0>
  418dc8:	and	w8, w8, w9
  418dcc:	mov	w9, #0x24                  	// #36
  418dd0:	orr	w8, w8, w9
  418dd4:	b	41906c <_obstack_memory_used@@Base+0x4038>
  418dd8:	bl	402760 <__ctype_b_loc@plt>
  418ddc:	ldr	x8, [x0]
  418de0:	cmp	w24, #0x5f
  418de4:	cset	w9, eq  // eq = none
  418de8:	ldrh	w8, [x8, x24, lsl #1]
  418dec:	and	w8, w8, #0x8
  418df0:	orr	w8, w9, w8, lsr #3
  418df4:	cmp	w8, #0x0
  418df8:	mov	w8, #0x400000              	// #4194304
  418dfc:	csel	w8, w8, wzr, ne  // ne = any
  418e00:	orr	w8, w8, w22
  418e04:	cmp	w24, #0x3e
  418e08:	mov	w0, #0x1                   	// #1
  418e0c:	str	w8, [x23]
  418e10:	b.gt	418e90 <_obstack_memory_used@@Base+0x3e5c>
  418e14:	sub	w9, w24, #0x24
  418e18:	cmp	w9, #0xa
  418e1c:	b.hi	418fd0 <_obstack_memory_used@@Base+0x3f9c>  // b.pmore
  418e20:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  418e24:	add	x10, x10, #0x9f8
  418e28:	adr	x11, 418e38 <_obstack_memory_used@@Base+0x3e04>
  418e2c:	ldrb	w12, [x10, x9]
  418e30:	add	x11, x11, x12, lsl #2
  418e34:	br	x11
  418e38:	tbnz	w20, #3, 418e84 <_obstack_memory_used@@Base+0x3e50>
  418e3c:	ldr	x9, [x21, #72]
  418e40:	ldr	x10, [x21, #88]
  418e44:	add	x9, x9, #0x1
  418e48:	cmp	x9, x10
  418e4c:	b.eq	418e84 <_obstack_memory_used@@Base+0x3e50>  // b.none
  418e50:	mov	x0, sp
  418e54:	mov	x1, x21
  418e58:	mov	x2, x20
  418e5c:	str	x9, [x21, #72]
  418e60:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  418e64:	ldr	x8, [x21, #72]
  418e68:	sub	x8, x8, #0x1
  418e6c:	str	x8, [x21, #72]
  418e70:	ldrb	w8, [sp, #8]
  418e74:	sub	w8, w8, #0x9
  418e78:	cmp	w8, #0x1
  418e7c:	b.hi	419070 <_obstack_memory_used@@Base+0x403c>  // b.pmore
  418e80:	ldr	w8, [x23]
  418e84:	and	w8, w8, #0xffffff00
  418e88:	mov	w9, #0x20                  	// #32
  418e8c:	b	418ec8 <_obstack_memory_used@@Base+0x3e94>
  418e90:	cmp	w24, #0x7a
  418e94:	b.gt	418f50 <_obstack_memory_used@@Base+0x3f1c>
  418e98:	cmp	w24, #0x3f
  418e9c:	b.eq	419020 <_obstack_memory_used@@Base+0x3fec>  // b.none
  418ea0:	cmp	w24, #0x5b
  418ea4:	b.eq	419034 <_obstack_memory_used@@Base+0x4000>  // b.none
  418ea8:	cmp	w24, #0x5e
  418eac:	b.ne	4191e4 <_obstack_memory_used@@Base+0x41b0>  // b.any
  418eb0:	mov	w9, #0x8                   	// #8
  418eb4:	movk	w9, #0x80, lsl #16
  418eb8:	tst	x20, x9
  418ebc:	b.eq	419098 <_obstack_memory_used@@Base+0x4064>  // b.none
  418ec0:	and	w8, w8, #0xffffff00
  418ec4:	mov	w9, #0x10                  	// #16
  418ec8:	orr	w8, w8, #0xc
  418ecc:	str	w9, [x19]
  418ed0:	str	w8, [x19, #8]
  418ed4:	b	419070 <_obstack_memory_used@@Base+0x403c>
  418ed8:	bl	402760 <__ctype_b_loc@plt>
  418edc:	ldr	x8, [x0]
  418ee0:	and	x9, x22, #0xff
  418ee4:	and	w10, w22, #0xff
  418ee8:	cmp	w10, #0x5f
  418eec:	ldrh	w8, [x8, x9, lsl #1]
  418ef0:	cset	w10, eq  // eq = none
  418ef4:	ubfx	w8, w8, #3, #1
  418ef8:	orr	w8, w8, w10
  418efc:	orr	w8, w24, w8, lsl #22
  418f00:	and	w10, w22, #0xff
  418f04:	cmp	w10, #0x5f
  418f08:	mov	w0, #0x2                   	// #2
  418f0c:	str	w8, [x23]
  418f10:	b.gt	418fa0 <_obstack_memory_used@@Base+0x3f6c>
  418f14:	sub	w11, w10, #0x27
  418f18:	cmp	w11, #0x2c
  418f1c:	b.hi	4190bc <_obstack_memory_used@@Base+0x4088>  // b.pmore
  418f20:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  418f24:	add	x10, x10, #0xa03
  418f28:	adr	x12, 418f38 <_obstack_memory_used@@Base+0x3f04>
  418f2c:	ldrb	w13, [x10, x11]
  418f30:	add	x12, x12, x13, lsl #2
  418f34:	br	x12
  418f38:	tbnz	w20, #14, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  418f3c:	and	w8, w8, #0xffffff00
  418f40:	sub	x9, x9, #0x31
  418f44:	orr	w8, w8, #0x4
  418f48:	str	x9, [x19]
  418f4c:	b	4191c8 <_obstack_memory_used@@Base+0x4194>
  418f50:	cmp	w24, #0x7b
  418f54:	b.eq	41903c <_obstack_memory_used@@Base+0x4008>  // b.none
  418f58:	cmp	w24, #0x7c
  418f5c:	b.eq	419054 <_obstack_memory_used@@Base+0x4020>  // b.none
  418f60:	cmp	w24, #0x7d
  418f64:	b.ne	4191e4 <_obstack_memory_used@@Base+0x41b0>  // b.any
  418f68:	mvn	w9, w20
  418f6c:	mov	w10, #0x1200                	// #4608
  418f70:	tst	x9, x10
  418f74:	b.ne	419070 <_obstack_memory_used@@Base+0x403c>  // b.any
  418f78:	and	w8, w8, #0xffffff00
  418f7c:	orr	w8, w8, #0x18
  418f80:	b	41906c <_obstack_memory_used@@Base+0x4038>
  418f84:	mov	w9, #0xff00                	// #65280
  418f88:	movk	w9, #0xff9f, lsl #16
  418f8c:	mov	w10, #0x1                   	// #1
  418f90:	movk	w10, #0x20, lsl #16
  418f94:	and	w8, w8, w9
  418f98:	orr	w8, w8, w10
  418f9c:	b	41906c <_obstack_memory_used@@Base+0x4038>
  418fa0:	sub	w9, w10, #0x73
  418fa4:	cmp	w9, #0xa
  418fa8:	b.hi	419078 <_obstack_memory_used@@Base+0x4044>  // b.pmore
  418fac:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  418fb0:	add	x10, x10, #0xa30
  418fb4:	adr	x11, 418fc4 <_obstack_memory_used@@Base+0x3f90>
  418fb8:	ldrb	w12, [x10, x9]
  418fbc:	add	x11, x11, x12, lsl #2
  418fc0:	br	x11
  418fc4:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  418fc8:	mov	w9, #0x22                  	// #34
  418fcc:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  418fd0:	cmp	w24, #0xa
  418fd4:	b.ne	4191e4 <_obstack_memory_used@@Base+0x41b0>  // b.any
  418fd8:	tbnz	w20, #11, 419064 <_obstack_memory_used@@Base+0x4030>
  418fdc:	b	419070 <_obstack_memory_used@@Base+0x403c>
  418fe0:	tbz	w20, #13, 419070 <_obstack_memory_used@@Base+0x403c>
  418fe4:	and	w8, w8, #0xffffff00
  418fe8:	orr	w8, w8, #0x8
  418fec:	b	41906c <_obstack_memory_used@@Base+0x4038>
  418ff0:	tbz	w20, #13, 419070 <_obstack_memory_used@@Base+0x403c>
  418ff4:	mov	w9, #0x9                   	// #9
  418ff8:	b	419068 <_obstack_memory_used@@Base+0x4034>
  418ffc:	mov	w9, #0xb                   	// #11
  419000:	b	419068 <_obstack_memory_used@@Base+0x4034>
  419004:	mov	w9, #0x402                 	// #1026
  419008:	tst	x20, x9
  41900c:	b.ne	419070 <_obstack_memory_used@@Base+0x403c>  // b.any
  419010:	mov	w9, #0x12                  	// #18
  419014:	b	419068 <_obstack_memory_used@@Base+0x4034>
  419018:	mov	w9, #0x5                   	// #5
  41901c:	b	419068 <_obstack_memory_used@@Base+0x4034>
  419020:	mov	w9, #0x402                 	// #1026
  419024:	tst	x20, x9
  419028:	b.ne	419070 <_obstack_memory_used@@Base+0x403c>  // b.any
  41902c:	mov	w9, #0x13                  	// #19
  419030:	b	419068 <_obstack_memory_used@@Base+0x4034>
  419034:	mov	w9, #0x14                  	// #20
  419038:	b	419068 <_obstack_memory_used@@Base+0x4034>
  41903c:	mvn	w9, w20
  419040:	mov	w10, #0x1200                	// #4608
  419044:	tst	x9, x10
  419048:	b.ne	419070 <_obstack_memory_used@@Base+0x403c>  // b.any
  41904c:	mov	w9, #0x17                  	// #23
  419050:	b	419068 <_obstack_memory_used@@Base+0x4034>
  419054:	mov	w9, #0x8400                	// #33792
  419058:	and	x9, x20, x9
  41905c:	cmp	x9, #0x8, lsl #12
  419060:	b.ne	419070 <_obstack_memory_used@@Base+0x403c>  // b.any
  419064:	mov	w9, #0xa                   	// #10
  419068:	bfxil	w8, w9, #0, #8
  41906c:	str	w8, [x23]
  419070:	mov	w0, #0x1                   	// #1
  419074:	b	4191e4 <_obstack_memory_used@@Base+0x41b0>
  419078:	cmp	w10, #0x60
  41907c:	b.eq	419128 <_obstack_memory_used@@Base+0x40f4>  // b.none
  419080:	cmp	w10, #0x62
  419084:	b.ne	4191e4 <_obstack_memory_used@@Base+0x41b0>  // b.any
  419088:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  41908c:	and	w8, w8, #0xffffff00
  419090:	mov	w9, #0x100                 	// #256
  419094:	b	4191c0 <_obstack_memory_used@@Base+0x418c>
  419098:	ldr	x9, [x21, #72]
  41909c:	cbz	x9, 418ec0 <_obstack_memory_used@@Base+0x3e8c>
  4190a0:	tbz	w20, #11, 419070 <_obstack_memory_used@@Base+0x403c>
  4190a4:	ldr	x10, [x21, #8]
  4190a8:	add	x9, x9, x10
  4190ac:	ldurb	w9, [x9, #-1]
  4190b0:	cmp	w9, #0xa
  4190b4:	b.eq	418ec0 <_obstack_memory_used@@Base+0x3e8c>  // b.none
  4190b8:	b	419070 <_obstack_memory_used@@Base+0x403c>
  4190bc:	cmp	w10, #0x57
  4190c0:	b.ne	4191e4 <_obstack_memory_used@@Base+0x41b0>  // b.any
  4190c4:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  4190c8:	mov	w9, #0x21                  	// #33
  4190cc:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  4190d0:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  4190d4:	and	w8, w8, #0xffffff00
  4190d8:	orr	w8, w8, #0x20
  4190dc:	b	4191dc <_obstack_memory_used@@Base+0x41a8>
  4190e0:	mov	w9, #0x1200                	// #4608
  4190e4:	and	x9, x20, x9
  4190e8:	cmp	x9, #0x200
  4190ec:	b.ne	4191e0 <_obstack_memory_used@@Base+0x41ac>  // b.any
  4190f0:	mov	w9, #0x17                  	// #23
  4190f4:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  4190f8:	mov	w9, #0x8400                	// #33792
  4190fc:	tst	x20, x9
  419100:	b.ne	4191e0 <_obstack_memory_used@@Base+0x41ac>  // b.any
  419104:	mov	w9, #0xa                   	// #10
  419108:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  41910c:	mov	w9, #0x1200                	// #4608
  419110:	and	x9, x20, x9
  419114:	cmp	x9, #0x200
  419118:	b.ne	4191e0 <_obstack_memory_used@@Base+0x41ac>  // b.any
  41911c:	and	w8, w8, #0xffffff00
  419120:	orr	w8, w8, #0x18
  419124:	b	4191dc <_obstack_memory_used@@Base+0x41a8>
  419128:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  41912c:	and	w8, w8, #0xffffff00
  419130:	mov	w9, #0x40                  	// #64
  419134:	b	4191c0 <_obstack_memory_used@@Base+0x418c>
  419138:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  41913c:	and	w8, w8, #0xffffff00
  419140:	mov	w9, #0x80                  	// #128
  419144:	b	4191c0 <_obstack_memory_used@@Base+0x418c>
  419148:	tbnz	w20, #13, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  41914c:	and	w8, w8, #0xffffff00
  419150:	orr	w8, w8, #0x8
  419154:	b	4191dc <_obstack_memory_used@@Base+0x41a8>
  419158:	tbnz	w20, #13, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  41915c:	mov	w9, #0x9                   	// #9
  419160:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  419164:	mov	w9, #0x402                 	// #1026
  419168:	and	x9, x20, x9
  41916c:	cmp	x9, #0x2
  419170:	b.ne	4191e0 <_obstack_memory_used@@Base+0x41ac>  // b.any
  419174:	mov	w9, #0x12                  	// #18
  419178:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  41917c:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  419180:	and	w8, w8, #0xffffff00
  419184:	mov	w9, #0x6                   	// #6
  419188:	b	4191c0 <_obstack_memory_used@@Base+0x418c>
  41918c:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  419190:	and	w8, w8, #0xffffff00
  419194:	mov	w9, #0x9                   	// #9
  419198:	b	4191c0 <_obstack_memory_used@@Base+0x418c>
  41919c:	mov	w9, #0x402                 	// #1026
  4191a0:	and	x9, x20, x9
  4191a4:	cmp	x9, #0x2
  4191a8:	b.ne	4191e0 <_obstack_memory_used@@Base+0x41ac>  // b.any
  4191ac:	mov	w9, #0x13                  	// #19
  4191b0:	b	4191d8 <_obstack_memory_used@@Base+0x41a4>
  4191b4:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  4191b8:	and	w8, w8, #0xffffff00
  4191bc:	mov	w9, #0x200                 	// #512
  4191c0:	orr	w8, w8, #0xc
  4191c4:	str	w9, [x19]
  4191c8:	str	w8, [x19, #8]
  4191cc:	b	4191e0 <_obstack_memory_used@@Base+0x41ac>
  4191d0:	tbnz	w20, #19, 4191e0 <_obstack_memory_used@@Base+0x41ac>
  4191d4:	mov	w9, #0x23                  	// #35
  4191d8:	bfxil	w8, w9, #0, #8
  4191dc:	str	w8, [x23]
  4191e0:	mov	w0, #0x2                   	// #2
  4191e4:	ldp	x20, x19, [sp, #64]
  4191e8:	ldp	x22, x21, [sp, #48]
  4191ec:	ldp	x24, x23, [sp, #32]
  4191f0:	ldp	x29, x30, [sp, #16]
  4191f4:	add	sp, sp, #0x50
  4191f8:	ret
  4191fc:	cmp	w11, #0x2
  419200:	b.lt	419230 <_obstack_memory_used@@Base+0x41fc>  // b.tstop
  419204:	ldr	x11, [x21, #16]
  419208:	ldr	w13, [x11, x10, lsl #2]
  41920c:	cmn	w13, #0x1
  419210:	b.eq	418d04 <_obstack_memory_used@@Base+0x3cd0>  // b.none
  419214:	ldr	x13, [x21, #48]
  419218:	add	x12, x12, #0x2
  41921c:	cmp	x13, x12
  419220:	b.eq	419230 <_obstack_memory_used@@Base+0x41fc>  // b.none
  419224:	ldr	w11, [x11, x12, lsl #2]
  419228:	cmn	w11, #0x1
  41922c:	b.eq	418d04 <_obstack_memory_used@@Base+0x3cd0>  // b.none
  419230:	ldrb	w11, [x21, #140]
  419234:	mov	x12, x10
  419238:	cbz	w11, 419244 <_obstack_memory_used@@Base+0x4210>
  41923c:	ldr	x12, [x21, #24]
  419240:	ldr	x12, [x12, x10, lsl #3]
  419244:	ldr	x13, [x21, #40]
  419248:	ldr	x14, [x21]
  41924c:	add	x12, x13, x12
  419250:	ldrsb	w22, [x14, x12]
  419254:	cbz	w11, 418d0c <_obstack_memory_used@@Base+0x3cd8>
  419258:	tbnz	w22, #31, 418d04 <_obstack_memory_used@@Base+0x3cd0>
  41925c:	b	418d0c <_obstack_memory_used@@Base+0x3cd8>
  419260:	sub	sp, sp, #0x70
  419264:	stp	x29, x30, [sp, #16]
  419268:	stp	x28, x27, [sp, #32]
  41926c:	stp	x26, x25, [sp, #48]
  419270:	stp	x24, x23, [sp, #64]
  419274:	stp	x22, x21, [sp, #80]
  419278:	stp	x20, x19, [sp, #96]
  41927c:	ldr	x25, [x1]
  419280:	add	x29, sp, #0x10
  419284:	mov	x19, x5
  419288:	mov	x21, x4
  41928c:	mov	x22, x3
  419290:	mov	x23, x2
  419294:	mov	x24, x1
  419298:	mov	x26, x0
  41929c:	bl	4194a0 <_obstack_memory_used@@Base+0x446c>
  4192a0:	cbnz	x0, 4192ac <_obstack_memory_used@@Base+0x4278>
  4192a4:	ldr	w8, [x19]
  4192a8:	cbnz	w8, 419428 <_obstack_memory_used@@Base+0x43f4>
  4192ac:	mov	w28, #0x10                  	// #16
  4192b0:	ldrb	w8, [x23, #8]
  4192b4:	mov	x20, x0
  4192b8:	orr	w9, w8, #0x8
  4192bc:	cmp	w9, #0xa
  4192c0:	b.eq	4193c0 <_obstack_memory_used@@Base+0x438c>  // b.none
  4192c4:	cbz	x21, 4192d0 <_obstack_memory_used@@Base+0x429c>
  4192c8:	cmp	w8, #0x9
  4192cc:	b.eq	4193c0 <_obstack_memory_used@@Base+0x438c>  // b.none
  4192d0:	mov	x0, x26
  4192d4:	mov	x1, x24
  4192d8:	mov	x2, x23
  4192dc:	mov	x3, x22
  4192e0:	mov	x4, x21
  4192e4:	mov	x5, x19
  4192e8:	bl	4194a0 <_obstack_memory_used@@Base+0x446c>
  4192ec:	mov	x27, x0
  4192f0:	cbnz	x0, 4192fc <_obstack_memory_used@@Base+0x42c8>
  4192f4:	ldr	w8, [x19]
  4192f8:	cbnz	w8, 4193e4 <_obstack_memory_used@@Base+0x43b0>
  4192fc:	cbz	x20, 419328 <_obstack_memory_used@@Base+0x42f4>
  419300:	cbz	x27, 419328 <_obstack_memory_used@@Base+0x42f4>
  419304:	mov	x3, sp
  419308:	mov	x0, x25
  41930c:	mov	x1, x20
  419310:	mov	x2, x27
  419314:	str	xzr, [sp]
  419318:	str	w28, [sp, #8]
  41931c:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419320:	cbnz	x0, 4192b0 <_obstack_memory_used@@Base+0x427c>
  419324:	b	419334 <_obstack_memory_used@@Base+0x4300>
  419328:	cmp	x20, #0x0
  41932c:	csel	x0, x27, x20, eq  // eq = none
  419330:	b	4192b0 <_obstack_memory_used@@Base+0x427c>
  419334:	mov	x21, x27
  419338:	ldr	x27, [x27, #8]
  41933c:	cbnz	x27, 419334 <_obstack_memory_used@@Base+0x4300>
  419340:	ldr	x27, [x21, #16]
  419344:	cbnz	x27, 419334 <_obstack_memory_used@@Base+0x4300>
  419348:	add	x0, x21, #0x28
  41934c:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  419350:	ldr	x8, [x21]
  419354:	cbz	x8, 419374 <_obstack_memory_used@@Base+0x4340>
  419358:	ldr	x27, [x8, #16]
  41935c:	cmp	x27, x21
  419360:	mov	x21, x8
  419364:	b.eq	419348 <_obstack_memory_used@@Base+0x4314>  // b.none
  419368:	mov	x21, x8
  41936c:	cbz	x27, 419348 <_obstack_memory_used@@Base+0x4314>
  419370:	b	419334 <_obstack_memory_used@@Base+0x4300>
  419374:	mov	x21, x20
  419378:	ldr	x20, [x20, #8]
  41937c:	cbnz	x20, 419374 <_obstack_memory_used@@Base+0x4340>
  419380:	ldr	x20, [x21, #16]
  419384:	cbnz	x20, 419374 <_obstack_memory_used@@Base+0x4340>
  419388:	add	x0, x21, #0x28
  41938c:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  419390:	ldr	x8, [x21]
  419394:	cbz	x8, 4193b4 <_obstack_memory_used@@Base+0x4380>
  419398:	ldr	x20, [x8, #16]
  41939c:	cmp	x20, x21
  4193a0:	mov	x21, x8
  4193a4:	b.eq	419388 <_obstack_memory_used@@Base+0x4354>  // b.none
  4193a8:	mov	x21, x8
  4193ac:	cbz	x20, 419388 <_obstack_memory_used@@Base+0x4354>
  4193b0:	b	419374 <_obstack_memory_used@@Base+0x4340>
  4193b4:	mov	x20, xzr
  4193b8:	mov	w8, #0xc                   	// #12
  4193bc:	str	w8, [x19]
  4193c0:	mov	x0, x20
  4193c4:	ldp	x20, x19, [sp, #96]
  4193c8:	ldp	x22, x21, [sp, #80]
  4193cc:	ldp	x24, x23, [sp, #64]
  4193d0:	ldp	x26, x25, [sp, #48]
  4193d4:	ldp	x28, x27, [sp, #32]
  4193d8:	ldp	x29, x30, [sp, #16]
  4193dc:	add	sp, sp, #0x70
  4193e0:	ret
  4193e4:	cbz	x20, 4193c0 <_obstack_memory_used@@Base+0x438c>
  4193e8:	mov	x19, x20
  4193ec:	ldr	x20, [x20, #8]
  4193f0:	cbnz	x20, 4193e8 <_obstack_memory_used@@Base+0x43b4>
  4193f4:	ldr	x20, [x19, #16]
  4193f8:	cbnz	x20, 4193e8 <_obstack_memory_used@@Base+0x43b4>
  4193fc:	add	x0, x19, #0x28
  419400:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  419404:	ldr	x8, [x19]
  419408:	cbz	x8, 419428 <_obstack_memory_used@@Base+0x43f4>
  41940c:	ldr	x20, [x8, #16]
  419410:	cmp	x20, x19
  419414:	mov	x19, x8
  419418:	b.eq	4193fc <_obstack_memory_used@@Base+0x43c8>  // b.none
  41941c:	mov	x19, x8
  419420:	cbz	x20, 4193fc <_obstack_memory_used@@Base+0x43c8>
  419424:	b	4193e8 <_obstack_memory_used@@Base+0x43b4>
  419428:	mov	x20, xzr
  41942c:	b	4193c0 <_obstack_memory_used@@Base+0x438c>
  419430:	stp	x29, x30, [sp, #-48]!
  419434:	stp	x20, x19, [sp, #32]
  419438:	mov	x19, x2
  41943c:	mov	x20, x1
  419440:	str	x21, [sp, #16]
  419444:	mov	x29, sp
  419448:	mov	x21, x0
  41944c:	ldr	x0, [x0, #8]
  419450:	cbnz	x0, 419448 <_obstack_memory_used@@Base+0x4414>
  419454:	ldr	x0, [x21, #16]
  419458:	cbnz	x0, 419448 <_obstack_memory_used@@Base+0x4414>
  41945c:	mov	x0, x19
  419460:	mov	x1, x21
  419464:	blr	x20
  419468:	cbnz	w0, 419490 <_obstack_memory_used@@Base+0x445c>
  41946c:	ldr	x8, [x21]
  419470:	cbz	x8, 419490 <_obstack_memory_used@@Base+0x445c>
  419474:	ldr	x0, [x8, #16]
  419478:	cmp	x0, x21
  41947c:	mov	x21, x8
  419480:	b.eq	41945c <_obstack_memory_used@@Base+0x4428>  // b.none
  419484:	mov	x21, x8
  419488:	cbz	x0, 41945c <_obstack_memory_used@@Base+0x4428>
  41948c:	b	419448 <_obstack_memory_used@@Base+0x4414>
  419490:	ldp	x20, x19, [sp, #32]
  419494:	ldr	x21, [sp, #16]
  419498:	ldp	x29, x30, [sp], #48
  41949c:	ret
  4194a0:	sub	sp, sp, #0x120
  4194a4:	stp	x29, x30, [sp, #192]
  4194a8:	stp	x28, x27, [sp, #208]
  4194ac:	stp	x26, x25, [sp, #224]
  4194b0:	stp	x24, x23, [sp, #240]
  4194b4:	stp	x22, x21, [sp, #256]
  4194b8:	stp	x20, x19, [sp, #272]
  4194bc:	ldr	w8, [x2, #8]
  4194c0:	ldr	x23, [x1]
  4194c4:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4194c8:	add	x11, x11, #0xa3c
  4194cc:	and	w9, w8, #0xff
  4194d0:	sub	w10, w9, #0x1
  4194d4:	adr	x12, 419508 <_obstack_memory_used@@Base+0x44d4>
  4194d8:	ldrh	w13, [x11, x10, lsl #1]
  4194dc:	add	x12, x12, x13, lsl #2
  4194e0:	add	x29, sp, #0xc0
  4194e4:	mov	x20, x5
  4194e8:	mov	x24, x4
  4194ec:	mov	x21, x3
  4194f0:	mov	x22, x2
  4194f4:	mov	x25, x1
  4194f8:	mov	x28, x0
  4194fc:	mov	x19, xzr
  419500:	stp	x0, x3, [sp, #48]
  419504:	br	x12
  419508:	tbnz	w21, #5, 41a420 <_obstack_memory_used@@Base+0x53ec>
  41950c:	tbnz	w21, #4, 419854 <_obstack_memory_used@@Base+0x4820>
  419510:	tbnz	w21, #17, 41958c <_obstack_memory_used@@Base+0x4558>
  419514:	cmp	w9, #0x9
  419518:	b.ne	41958c <_obstack_memory_used@@Base+0x4558>  // b.any
  41951c:	mov	x19, xzr
  419520:	mov	w8, #0x10                  	// #16
  419524:	b	41a428 <_obstack_memory_used@@Base+0x53f4>
  419528:	ldr	x1, [x28, #120]
  41952c:	cmp	w9, #0x21
  419530:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xdfcc>
  419534:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  419538:	cset	w4, eq  // eq = none
  41953c:	add	x2, x2, #0x299
  419540:	add	x3, x3, #0xd02
  419544:	b	419564 <_obstack_memory_used@@Base+0x4530>
  419548:	ldr	x1, [x28, #120]
  41954c:	cmp	w9, #0x23
  419550:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xdfcc>
  419554:	adrp	x3, 422000 <_obstack_memory_used@@Base+0xcfcc>
  419558:	cset	w4, eq  // eq = none
  41955c:	add	x2, x2, #0x28d
  419560:	add	x3, x3, #0x7ad
  419564:	mov	x0, x23
  419568:	mov	x5, x20
  41956c:	bl	41a720 <_obstack_memory_used@@Base+0x56ec>
  419570:	mov	x19, x0
  419574:	str	x20, [sp, #40]
  419578:	cbnz	x0, 419ea4 <_obstack_memory_used@@Base+0x4e70>
  41957c:	ldr	w8, [x20]
  419580:	ldr	x25, [sp, #56]
  419584:	cbz	w8, 419fbc <_obstack_memory_used@@Base+0x4f88>
  419588:	b	4198d0 <_obstack_memory_used@@Base+0x489c>
  41958c:	and	w8, w8, #0xffffff00
  419590:	orr	w8, w8, #0x1
  419594:	mov	x0, x23
  419598:	mov	x1, xzr
  41959c:	mov	x2, xzr
  4195a0:	mov	x3, x22
  4195a4:	str	x20, [sp, #40]
  4195a8:	str	w8, [x22, #8]
  4195ac:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  4195b0:	mov	x19, x0
  4195b4:	mov	x25, x21
  4195b8:	cbnz	x0, 419fbc <_obstack_memory_used@@Base+0x4f88>
  4195bc:	b	419748 <_obstack_memory_used@@Base+0x4714>
  4195c0:	ldr	w8, [x22]
  4195c4:	mov	w9, #0x30f                 	// #783
  4195c8:	tst	w8, w9
  4195cc:	b.eq	419604 <_obstack_memory_used@@Base+0x45d0>  // b.none
  4195d0:	ldrb	w8, [x23, #176]
  4195d4:	mov	x21, x20
  4195d8:	tbnz	w8, #4, 4195fc <_obstack_memory_used@@Base+0x45c8>
  4195dc:	orr	w9, w8, #0x10
  4195e0:	strb	w9, [x23, #176]
  4195e4:	tbnz	w8, #3, 41a57c <_obstack_memory_used@@Base+0x5548>
  4195e8:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4195ec:	ldr	q0, [x9, #3312]
  4195f0:	stur	q0, [x23, #184]
  4195f4:	tbz	w8, #2, 41a588 <_obstack_memory_used@@Base+0x5554>
  4195f8:	stp	xzr, xzr, [x23, #200]
  4195fc:	ldr	w8, [x22]
  419600:	mov	x20, x21
  419604:	cmp	w8, #0x100
  419608:	b.eq	419eac <_obstack_memory_used@@Base+0x4e78>  // b.none
  41960c:	cmp	w8, #0x200
  419610:	b.ne	419f24 <_obstack_memory_used@@Base+0x4ef0>  // b.any
  419614:	mov	w19, #0xa                   	// #10
  419618:	mov	w8, #0x5                   	// #5
  41961c:	b	419eb4 <_obstack_memory_used@@Base+0x4e80>
  419620:	mov	w0, #0x20                  	// #32
  419624:	mov	w1, #0x1                   	// #1
  419628:	stur	xzr, [x29, #-16]
  41962c:	bl	4025d0 <calloc@plt>
  419630:	mov	x25, x0
  419634:	mov	w0, #0x50                  	// #80
  419638:	mov	w1, #0x1                   	// #1
  41963c:	bl	4025d0 <calloc@plt>
  419640:	mov	x27, x0
  419644:	str	x20, [sp, #40]
  419648:	cbz	x25, 41a550 <_obstack_memory_used@@Base+0x551c>
  41964c:	cbz	x27, 41a550 <_obstack_memory_used@@Base+0x551c>
  419650:	ldr	x19, [sp, #56]
  419654:	mov	x0, x22
  419658:	mov	x1, x28
  41965c:	mov	x2, x19
  419660:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  419664:	ldr	w8, [x22, #8]
  419668:	mov	w3, w0
  41966c:	and	w9, w8, #0xff
  419670:	cmp	w9, #0x19
  419674:	b.eq	4198d8 <_obstack_memory_used@@Base+0x48a4>  // b.none
  419678:	cmp	w9, #0x2
  41967c:	b.eq	41a524 <_obstack_memory_used@@Base+0x54f0>  // b.none
  419680:	str	wzr, [sp, #36]
  419684:	b	41992c <_obstack_memory_used@@Base+0x48f8>
  419688:	mov	x0, x23
  41968c:	mov	x1, xzr
  419690:	mov	x2, xzr
  419694:	mov	x3, x22
  419698:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41969c:	mov	x19, x0
  4196a0:	cbz	x0, 41a514 <_obstack_memory_used@@Base+0x54e0>
  4196a4:	ldr	w8, [x23, #180]
  4196a8:	ldr	x25, [sp, #56]
  4196ac:	str	x20, [sp, #40]
  4196b0:	cmp	w8, #0x2
  4196b4:	b.lt	419fbc <_obstack_memory_used@@Base+0x4f88>  // b.tstop
  4196b8:	mov	w20, #0x10                  	// #16
  4196bc:	ldr	x9, [x28, #104]
  4196c0:	ldr	x8, [x28, #72]
  4196c4:	cmp	x9, x8
  4196c8:	b.le	419fbc <_obstack_memory_used@@Base+0x4f88>
  4196cc:	ldr	x9, [x28, #48]
  4196d0:	cmp	x8, x9
  4196d4:	b.eq	419fbc <_obstack_memory_used@@Base+0x4f88>  // b.none
  4196d8:	ldr	x9, [x28, #16]
  4196dc:	ldr	w8, [x9, x8, lsl #2]
  4196e0:	cmn	w8, #0x1
  4196e4:	b.ne	419fbc <_obstack_memory_used@@Base+0x4f88>  // b.any
  4196e8:	mov	x0, x22
  4196ec:	mov	x1, x28
  4196f0:	mov	x2, x25
  4196f4:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  4196f8:	ldr	x8, [x28, #72]
  4196fc:	mov	x1, xzr
  419700:	mov	x2, xzr
  419704:	mov	x3, x22
  419708:	add	x8, x8, w0, sxtw
  41970c:	mov	x0, x23
  419710:	str	x8, [x28, #72]
  419714:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419718:	mov	x24, x0
  41971c:	sub	x3, x29, #0x50
  419720:	mov	x0, x23
  419724:	mov	x1, x19
  419728:	mov	x2, x24
  41972c:	stur	xzr, [x29, #-80]
  419730:	stur	w20, [x29, #-72]
  419734:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419738:	cbz	x24, 419744 <_obstack_memory_used@@Base+0x4710>
  41973c:	mov	x19, x0
  419740:	cbnz	x0, 4196bc <_obstack_memory_used@@Base+0x4688>
  419744:	mov	x19, xzr
  419748:	mov	w8, #0xc                   	// #12
  41974c:	ldr	x9, [sp, #40]
  419750:	str	w8, [x9]
  419754:	b	41a42c <_obstack_memory_used@@Base+0x53f8>
  419758:	ldr	w8, [x22]
  41975c:	ldr	x9, [x23, #168]
  419760:	mov	w10, #0x1                   	// #1
  419764:	lsl	w8, w10, w8
  419768:	sxtw	x8, w8
  41976c:	tst	x9, x8
  419770:	b.eq	41a570 <_obstack_memory_used@@Base+0x553c>  // b.none
  419774:	ldr	x9, [x23, #160]
  419778:	mov	x0, x23
  41977c:	mov	x1, xzr
  419780:	mov	x2, xzr
  419784:	orr	x8, x9, x8
  419788:	mov	x3, x22
  41978c:	str	x20, [sp, #40]
  419790:	str	x8, [x23, #160]
  419794:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419798:	ldr	x25, [sp, #56]
  41979c:	mov	x19, x0
  4197a0:	cbz	x0, 419748 <_obstack_memory_used@@Base+0x4714>
  4197a4:	ldr	x8, [x23, #152]
  4197a8:	ldrb	w9, [x23, #176]
  4197ac:	add	x8, x8, #0x1
  4197b0:	orr	w9, w9, #0x2
  4197b4:	str	x8, [x23, #152]
  4197b8:	strb	w9, [x23, #176]
  4197bc:	b	419fbc <_obstack_memory_used@@Base+0x4f88>
  4197c0:	mov	x0, x23
  4197c4:	mov	x1, xzr
  4197c8:	mov	x2, xzr
  4197cc:	mov	x3, x22
  4197d0:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  4197d4:	mov	x19, x0
  4197d8:	cbz	x0, 41a514 <_obstack_memory_used@@Base+0x54e0>
  4197dc:	ldr	w8, [x23, #180]
  4197e0:	ldr	x25, [sp, #56]
  4197e4:	str	x20, [sp, #40]
  4197e8:	cmp	w8, #0x2
  4197ec:	b.lt	419fbc <_obstack_memory_used@@Base+0x4f88>  // b.tstop
  4197f0:	ldrb	w8, [x23, #176]
  4197f4:	orr	w8, w8, #0x2
  4197f8:	strb	w8, [x23, #176]
  4197fc:	b	419fbc <_obstack_memory_used@@Base+0x4f88>
  419800:	str	x20, [sp, #40]
  419804:	ldr	x20, [x25, #48]
  419808:	orr	x2, x21, #0x800000
  41980c:	mov	x0, x22
  419810:	mov	x1, x28
  419814:	add	x8, x20, #0x1
  419818:	str	x8, [x25, #48]
  41981c:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  419820:	ldr	x8, [x28, #72]
  419824:	add	x8, x8, w0, sxtw
  419828:	str	x8, [x28, #72]
  41982c:	ldrb	w8, [x22, #8]
  419830:	cmp	w8, #0x9
  419834:	b.ne	4198a8 <_obstack_memory_used@@Base+0x4874>  // b.any
  419838:	mov	x1, xzr
  41983c:	b	419f70 <_obstack_memory_used@@Base+0x4f3c>
  419840:	tbnz	w21, #24, 41a420 <_obstack_memory_used@@Base+0x53ec>
  419844:	b	419508 <_obstack_memory_used@@Base+0x44d4>
  419848:	mov	x19, xzr
  41984c:	mov	w8, #0x5                   	// #5
  419850:	b	41a428 <_obstack_memory_used@@Base+0x53f4>
  419854:	mov	x0, x22
  419858:	mov	x1, x28
  41985c:	mov	x2, x21
  419860:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  419864:	ldr	x8, [x28, #72]
  419868:	mov	x1, x25
  41986c:	mov	x2, x22
  419870:	mov	x3, x21
  419874:	add	x8, x8, w0, sxtw
  419878:	str	x8, [x28, #72]
  41987c:	mov	x0, x28
  419880:	mov	x4, x24
  419884:	mov	x5, x20
  419888:	ldp	x20, x19, [sp, #272]
  41988c:	ldp	x22, x21, [sp, #256]
  419890:	ldp	x24, x23, [sp, #240]
  419894:	ldp	x26, x25, [sp, #224]
  419898:	ldp	x28, x27, [sp, #208]
  41989c:	ldp	x29, x30, [sp, #192]
  4198a0:	add	sp, sp, #0x120
  4198a4:	b	4194a0 <_obstack_memory_used@@Base+0x446c>
  4198a8:	ldr	x19, [sp, #40]
  4198ac:	add	x4, x24, #0x1
  4198b0:	mov	x0, x28
  4198b4:	mov	x1, x25
  4198b8:	mov	x2, x22
  4198bc:	mov	x3, x21
  4198c0:	mov	x5, x19
  4198c4:	bl	418ad4 <_obstack_memory_used@@Base+0x3aa0>
  4198c8:	ldr	w8, [x19]
  4198cc:	cbz	w8, 419f60 <_obstack_memory_used@@Base+0x4f2c>
  4198d0:	mov	x19, xzr
  4198d4:	b	41a42c <_obstack_memory_used@@Base+0x53f8>
  4198d8:	ldrb	w8, [x27, #32]
  4198dc:	orr	w8, w8, #0x1
  4198e0:	strb	w8, [x27, #32]
  4198e4:	tbz	w19, #8, 4198f4 <_obstack_memory_used@@Base+0x48c0>
  4198e8:	ldr	x8, [x25]
  4198ec:	orr	x8, x8, #0x400
  4198f0:	str	x8, [x25]
  4198f4:	ldr	x8, [x28, #72]
  4198f8:	ldr	x2, [sp, #56]
  4198fc:	mov	x0, x22
  419900:	mov	x1, x28
  419904:	add	x8, x8, w3, sxtw
  419908:	str	x8, [x28, #72]
  41990c:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  419910:	ldr	w8, [x22, #8]
  419914:	and	w9, w8, #0xff
  419918:	cmp	w9, #0x2
  41991c:	b.eq	41a524 <_obstack_memory_used@@Base+0x54f0>  // b.none
  419920:	mov	w3, w0
  419924:	mov	w9, #0x1                   	// #1
  419928:	str	w9, [sp, #36]
  41992c:	and	w9, w8, #0xff
  419930:	cmp	w9, #0x15
  419934:	b.ne	419944 <_obstack_memory_used@@Base+0x4910>  // b.any
  419938:	and	w8, w8, #0xffffff00
  41993c:	orr	w8, w8, #0x1
  419940:	str	w8, [x22, #8]
  419944:	ldr	x4, [sp, #56]
  419948:	sub	x21, x29, #0x50
  41994c:	mov	w8, #0x3                   	// #3
  419950:	sub	x0, x29, #0x20
  419954:	mov	w5, #0x1                   	// #1
  419958:	mov	x1, x28
  41995c:	mov	x2, x22
  419960:	stur	x21, [x29, #-24]
  419964:	stur	w8, [x29, #-32]
  419968:	mov	w26, #0x1                   	// #1
  41996c:	bl	41aa78 <_obstack_memory_used@@Base+0x5a44>
  419970:	cbnz	w0, 41a530 <_obstack_memory_used@@Base+0x54fc>
  419974:	ldr	x19, [sp, #56]
  419978:	stp	xzr, xzr, [sp, #16]
  41997c:	mov	x0, x22
  419980:	mov	x1, x28
  419984:	mov	x2, x19
  419988:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  41998c:	ldur	w19, [x29, #-32]
  419990:	mov	w24, w0
  419994:	cmp	w19, #0x2
  419998:	b.eq	419b0c <_obstack_memory_used@@Base+0x4ad8>  // b.none
  41999c:	cmp	w19, #0x4
  4199a0:	b.ne	4199cc <_obstack_memory_used@@Base+0x4998>  // b.any
  4199a4:	ldr	x0, [x28, #120]
  4199a8:	ldur	x4, [x29, #-24]
  4199ac:	ldr	x5, [sp, #56]
  4199b0:	sub	x3, x29, #0x10
  4199b4:	mov	x1, x25
  4199b8:	mov	x2, x27
  4199bc:	bl	41ad1c <_obstack_memory_used@@Base+0x5ce8>
  4199c0:	str	w0, [x20]
  4199c4:	cbz	w0, 419b40 <_obstack_memory_used@@Base+0x4b0c>
  4199c8:	b	41a538 <_obstack_memory_used@@Base+0x5504>
  4199cc:	ldrb	w8, [x22, #8]
  4199d0:	cmp	w8, #0x16
  4199d4:	b.eq	4199fc <_obstack_memory_used@@Base+0x49c8>  // b.none
  4199d8:	cmp	w8, #0x2
  4199dc:	b.eq	41a51c <_obstack_memory_used@@Base+0x54e8>  // b.none
  4199e0:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4199e4:	mov	w8, w19
  4199e8:	add	x11, x11, #0xa84
  4199ec:	adr	x9, 419b0c <_obstack_memory_used@@Base+0x4ad8>
  4199f0:	ldrb	w10, [x11, x8]
  4199f4:	add	x9, x9, x10, lsl #2
  4199f8:	br	x9
  4199fc:	ldr	x8, [x28, #72]
  419a00:	ldr	x2, [sp, #56]
  419a04:	add	x0, sp, #0x40
  419a08:	mov	x1, x28
  419a0c:	add	x8, x8, w24, sxtw
  419a10:	str	x8, [x28, #72]
  419a14:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  419a18:	ldrb	w8, [sp, #72]
  419a1c:	cmp	w8, #0x15
  419a20:	b.eq	419adc <_obstack_memory_used@@Base+0x4aa8>  // b.none
  419a24:	cmp	w8, #0x2
  419a28:	b.eq	41a51c <_obstack_memory_used@@Base+0x54e8>  // b.none
  419a2c:	ldr	x20, [sp, #56]
  419a30:	add	x8, sp, #0x50
  419a34:	mov	w3, w0
  419a38:	stur	x8, [x29, #-40]
  419a3c:	mov	w8, #0x3                   	// #3
  419a40:	sub	x0, x29, #0x30
  419a44:	add	x2, sp, #0x40
  419a48:	mov	w5, #0x1                   	// #1
  419a4c:	mov	x1, x28
  419a50:	mov	x4, x20
  419a54:	stur	w8, [x29, #-48]
  419a58:	bl	41aa78 <_obstack_memory_used@@Base+0x5a44>
  419a5c:	cbnz	w0, 41a530 <_obstack_memory_used@@Base+0x54fc>
  419a60:	mov	x0, x22
  419a64:	mov	x1, x28
  419a68:	mov	x2, x20
  419a6c:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  419a70:	ldr	w8, [x23, #180]
  419a74:	ldur	w20, [x29, #-48]
  419a78:	mov	w24, w0
  419a7c:	mov	w0, #0xb                   	// #11
  419a80:	cmp	w8, #0x1
  419a84:	csel	x21, x27, xzr, gt
  419a88:	cmp	w20, #0x2
  419a8c:	b.eq	41a530 <_obstack_memory_used@@Base+0x54fc>  // b.none
  419a90:	cmp	w20, #0x4
  419a94:	b.eq	41a530 <_obstack_memory_used@@Base+0x54fc>  // b.none
  419a98:	cmp	w19, #0x3
  419a9c:	b.ne	419ab0 <_obstack_memory_used@@Base+0x4a7c>  // b.any
  419aa0:	ldur	x0, [x29, #-24]
  419aa4:	bl	402380 <strlen@plt>
  419aa8:	cmp	x0, #0x1
  419aac:	b.hi	41a52c <_obstack_memory_used@@Base+0x54f8>  // b.pmore
  419ab0:	cmp	w20, #0x3
  419ab4:	b.ne	419ac8 <_obstack_memory_used@@Base+0x4a94>  // b.any
  419ab8:	ldur	x0, [x29, #-40]
  419abc:	bl	402380 <strlen@plt>
  419ac0:	cmp	x0, #0x1
  419ac4:	b.hi	41a52c <_obstack_memory_used@@Base+0x54f8>  // b.pmore
  419ac8:	cmp	w19, #0x3
  419acc:	b.eq	419bd0 <_obstack_memory_used@@Base+0x4b9c>  // b.none
  419ad0:	cbnz	w19, 419bdc <_obstack_memory_used@@Base+0x4ba8>
  419ad4:	ldurb	w26, [x29, #-24]
  419ad8:	b	419be0 <_obstack_memory_used@@Base+0x4bac>
  419adc:	ldr	x8, [x28, #72]
  419ae0:	neg	w9, w24
  419ae4:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  419ae8:	mov	w10, w19
  419aec:	add	x8, x8, w9, sxtw
  419af0:	add	x11, x11, #0xa84
  419af4:	str	x8, [x28, #72]
  419af8:	strb	w26, [x22, #8]
  419afc:	adr	x8, 419b0c <_obstack_memory_used@@Base+0x4ad8>
  419b00:	ldrb	w9, [x11, x10]
  419b04:	add	x8, x8, x9, lsl #2
  419b08:	br	x8
  419b0c:	ldur	x19, [x29, #-24]
  419b10:	mov	x0, x19
  419b14:	bl	402380 <strlen@plt>
  419b18:	cmp	x0, #0x1
  419b1c:	b.ne	41a52c <_obstack_memory_used@@Base+0x54f8>  // b.any
  419b20:	ldrb	w8, [x19]
  419b24:	lsr	x9, x8, #3
  419b28:	and	x9, x9, #0x18
  419b2c:	ldr	x10, [x25, x9]
  419b30:	lsl	x8, x26, x8
  419b34:	orr	x8, x8, x10
  419b38:	str	x8, [x25, x9]
  419b3c:	str	wzr, [x20]
  419b40:	ldrb	w8, [x22, #8]
  419b44:	cmp	w8, #0x15
  419b48:	b.eq	419d88 <_obstack_memory_used@@Base+0x4d54>  // b.none
  419b4c:	cmp	w8, #0x2
  419b50:	b.eq	41a51c <_obstack_memory_used@@Base+0x54e8>  // b.none
  419b54:	ldr	x19, [sp, #56]
  419b58:	mov	w8, #0x3                   	// #3
  419b5c:	sub	x0, x29, #0x20
  419b60:	mov	x1, x28
  419b64:	mov	x2, x22
  419b68:	mov	w3, w24
  419b6c:	mov	x4, x19
  419b70:	mov	w5, wzr
  419b74:	stur	x21, [x29, #-24]
  419b78:	stur	w8, [x29, #-32]
  419b7c:	bl	41aa78 <_obstack_memory_used@@Base+0x5a44>
  419b80:	cbz	w0, 41997c <_obstack_memory_used@@Base+0x4948>
  419b84:	b	41a530 <_obstack_memory_used@@Base+0x54fc>
  419b88:	ldurb	w8, [x29, #-24]
  419b8c:	lsr	x9, x8, #3
  419b90:	and	x9, x9, #0x18
  419b94:	ldr	x10, [x25, x9]
  419b98:	lsl	x8, x26, x8
  419b9c:	orr	x8, x8, x10
  419ba0:	str	x8, [x25, x9]
  419ba4:	b	419b40 <_obstack_memory_used@@Base+0x4b0c>
  419ba8:	ldr	x8, [x27, #40]
  419bac:	ldr	x9, [sp, #24]
  419bb0:	cmp	x9, x8
  419bb4:	b.eq	419cf8 <_obstack_memory_used@@Base+0x4cc4>  // b.none
  419bb8:	ldr	x0, [x27]
  419bbc:	ldur	w9, [x29, #-24]
  419bc0:	add	x10, x8, #0x1
  419bc4:	str	x10, [x27, #40]
  419bc8:	str	w9, [x0, x8, lsl #2]
  419bcc:	b	419b40 <_obstack_memory_used@@Base+0x4b0c>
  419bd0:	ldur	x8, [x29, #-24]
  419bd4:	ldrb	w26, [x8]
  419bd8:	b	419be0 <_obstack_memory_used@@Base+0x4bac>
  419bdc:	mov	w26, wzr
  419be0:	cmp	w20, #0x3
  419be4:	b.eq	419bf4 <_obstack_memory_used@@Base+0x4bc0>  // b.none
  419be8:	cbnz	w20, 419c00 <_obstack_memory_used@@Base+0x4bcc>
  419bec:	ldurb	w28, [x29, #-40]
  419bf0:	b	419c04 <_obstack_memory_used@@Base+0x4bd0>
  419bf4:	ldur	x8, [x29, #-40]
  419bf8:	ldrb	w28, [x8]
  419bfc:	b	419c04 <_obstack_memory_used@@Base+0x4bd0>
  419c00:	mov	w28, wzr
  419c04:	cmp	w19, #0x3
  419c08:	b.eq	419c10 <_obstack_memory_used@@Base+0x4bdc>  // b.none
  419c0c:	cbnz	w19, 419c24 <_obstack_memory_used@@Base+0x4bf0>
  419c10:	cbz	x21, 419c28 <_obstack_memory_used@@Base+0x4bf4>
  419c14:	mov	w0, w26
  419c18:	bl	4026b0 <btowc@plt>
  419c1c:	mov	w26, w0
  419c20:	b	419c28 <_obstack_memory_used@@Base+0x4bf4>
  419c24:	ldur	w26, [x29, #-24]
  419c28:	cmp	w20, #0x3
  419c2c:	b.eq	419c34 <_obstack_memory_used@@Base+0x4c00>  // b.none
  419c30:	cbnz	w20, 419c48 <_obstack_memory_used@@Base+0x4c14>
  419c34:	cbz	x21, 419c4c <_obstack_memory_used@@Base+0x4c18>
  419c38:	mov	w0, w28
  419c3c:	bl	4026b0 <btowc@plt>
  419c40:	mov	w28, w0
  419c44:	b	419c4c <_obstack_memory_used@@Base+0x4c18>
  419c48:	ldur	w28, [x29, #-40]
  419c4c:	cmn	w26, #0x1
  419c50:	mov	w0, #0x3                   	// #3
  419c54:	b.eq	41a530 <_obstack_memory_used@@Base+0x54fc>  // b.none
  419c58:	cmn	w28, #0x1
  419c5c:	b.eq	41a530 <_obstack_memory_used@@Base+0x54fc>  // b.none
  419c60:	ldr	x8, [sp, #56]
  419c64:	tbz	w8, #16, 419c70 <_obstack_memory_used@@Base+0x4c3c>
  419c68:	cmp	w26, w28
  419c6c:	b.hi	41a648 <_obstack_memory_used@@Base+0x5614>  // b.pmore
  419c70:	mov	w14, #0x1                   	// #1
  419c74:	cbz	x21, 419ca4 <_obstack_memory_used@@Base+0x4c70>
  419c78:	ldr	x8, [x21, #64]
  419c7c:	ldr	x9, [sp, #16]
  419c80:	cmp	x9, x8
  419c84:	b.eq	419d2c <_obstack_memory_used@@Base+0x4cf8>  // b.none
  419c88:	ldp	x0, x19, [x21, #8]
  419c8c:	ldr	x20, [sp, #40]
  419c90:	add	x9, x8, #0x1
  419c94:	str	w26, [x0, x8, lsl #2]
  419c98:	str	x9, [x21, #64]
  419c9c:	str	w28, [x19, x8, lsl #2]
  419ca0:	b	419ca8 <_obstack_memory_used@@Base+0x4c74>
  419ca4:	ldr	x20, [sp, #40]
  419ca8:	mov	w9, w28
  419cac:	ldr	x28, [sp, #48]
  419cb0:	mov	x8, xzr
  419cb4:	mov	w10, w26
  419cb8:	sub	x21, x29, #0x50
  419cbc:	cmp	x8, x10
  419cc0:	b.cc	419ce4 <_obstack_memory_used@@Base+0x4cb0>  // b.lo, b.ul, b.last
  419cc4:	cmp	x8, x9
  419cc8:	b.hi	419ce4 <_obstack_memory_used@@Base+0x4cb0>  // b.pmore
  419ccc:	lsr	x11, x8, #3
  419cd0:	and	x11, x11, #0x1ffffffffffffff8
  419cd4:	ldr	x12, [x25, x11]
  419cd8:	lsl	x13, x14, x8
  419cdc:	orr	x12, x12, x13
  419ce0:	str	x12, [x25, x11]
  419ce4:	add	x8, x8, #0x1
  419ce8:	cmp	x8, #0x100
  419cec:	b.ne	419cbc <_obstack_memory_used@@Base+0x4c88>  // b.any
  419cf0:	mov	w26, #0x1                   	// #1
  419cf4:	b	419b3c <_obstack_memory_used@@Base+0x4b08>
  419cf8:	ldr	x8, [sp, #24]
  419cfc:	ldr	x0, [x27]
  419d00:	mov	w19, #0x1                   	// #1
  419d04:	bfi	x19, x8, #1, #63
  419d08:	lsl	x1, x19, #2
  419d0c:	bl	402610 <realloc@plt>
  419d10:	cbz	x0, 41a650 <_obstack_memory_used@@Base+0x561c>
  419d14:	ldr	x8, [x27, #40]
  419d18:	ldr	x28, [sp, #48]
  419d1c:	sub	x21, x29, #0x50
  419d20:	str	x0, [x27]
  419d24:	str	x19, [sp, #24]
  419d28:	b	419bbc <_obstack_memory_used@@Base+0x4b88>
  419d2c:	ldr	x8, [sp, #16]
  419d30:	ldr	x0, [x21, #8]
  419d34:	mov	w20, #0x1                   	// #1
  419d38:	bfi	x20, x8, #1, #63
  419d3c:	lsl	x19, x20, #2
  419d40:	mov	x1, x19
  419d44:	bl	402610 <realloc@plt>
  419d48:	ldr	x8, [x21, #16]
  419d4c:	str	x0, [sp, #8]
  419d50:	mov	x1, x19
  419d54:	mov	x0, x8
  419d58:	bl	402610 <realloc@plt>
  419d5c:	ldr	x8, [sp, #8]
  419d60:	mov	x19, x0
  419d64:	mov	x0, x8
  419d68:	cbz	x8, 41a660 <_obstack_memory_used@@Base+0x562c>
  419d6c:	cbz	x19, 41a660 <_obstack_memory_used@@Base+0x562c>
  419d70:	stp	x0, x19, [x21, #8]
  419d74:	ldr	x8, [x21, #64]
  419d78:	str	x20, [sp, #16]
  419d7c:	ldr	x20, [sp, #40]
  419d80:	mov	w14, #0x1                   	// #1
  419d84:	b	419c90 <_obstack_memory_used@@Base+0x4c5c>
  419d88:	ldr	x8, [x28, #72]
  419d8c:	add	x8, x8, w24, sxtw
  419d90:	str	x8, [x28, #72]
  419d94:	ldr	w8, [sp, #36]
  419d98:	cbz	w8, 419dac <_obstack_memory_used@@Base+0x4d78>
  419d9c:	ldp	q0, q1, [x25]
  419da0:	mvn	v0.16b, v0.16b
  419da4:	mvn	v1.16b, v1.16b
  419da8:	stp	q0, q1, [x25]
  419dac:	ldr	w8, [x23, #180]
  419db0:	cmp	w8, #0x2
  419db4:	b.lt	419ddc <_obstack_memory_used@@Base+0x4da8>  // b.tstop
  419db8:	ldr	x9, [x23, #120]
  419dbc:	mov	x10, xzr
  419dc0:	ldr	x11, [x9, x10]
  419dc4:	ldr	x12, [x25, x10]
  419dc8:	and	x11, x12, x11
  419dcc:	str	x11, [x25, x10]
  419dd0:	add	x10, x10, #0x8
  419dd4:	cmp	x10, #0x20
  419dd8:	b.ne	419dc0 <_obstack_memory_used@@Base+0x4d8c>  // b.any
  419ddc:	ldr	x9, [x27, #40]
  419de0:	cbnz	x9, 419dfc <_obstack_memory_used@@Base+0x4dc8>
  419de4:	ldr	x9, [x27, #48]
  419de8:	cbnz	x9, 419dfc <_obstack_memory_used@@Base+0x4dc8>
  419dec:	ldr	x9, [x27, #56]
  419df0:	cbnz	x9, 419dfc <_obstack_memory_used@@Base+0x4dc8>
  419df4:	ldr	x9, [x27, #64]
  419df8:	cbz	x9, 41a4d4 <_obstack_memory_used@@Base+0x54a0>
  419dfc:	ldrb	w8, [x23, #176]
  419e00:	mov	w9, #0x6                   	// #6
  419e04:	add	x3, sp, #0x50
  419e08:	mov	x0, x23
  419e0c:	orr	w8, w8, #0x2
  419e10:	mov	x1, xzr
  419e14:	mov	x2, xzr
  419e18:	strb	w8, [x23, #176]
  419e1c:	str	w9, [sp, #88]
  419e20:	str	x27, [sp, #80]
  419e24:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419e28:	cbz	x0, 41a654 <_obstack_memory_used@@Base+0x5620>
  419e2c:	mov	x19, x0
  419e30:	mov	x8, xzr
  419e34:	ldr	x9, [x25, x8]
  419e38:	cbnz	x9, 419e54 <_obstack_memory_used@@Base+0x4e20>
  419e3c:	add	x8, x8, #0x8
  419e40:	cmp	x8, #0x20
  419e44:	b.ne	419e34 <_obstack_memory_used@@Base+0x4e00>  // b.any
  419e48:	mov	x0, x25
  419e4c:	bl	402770 <free@plt>
  419e50:	b	419ea0 <_obstack_memory_used@@Base+0x4e6c>
  419e54:	mov	w8, #0x3                   	// #3
  419e58:	add	x3, sp, #0x50
  419e5c:	mov	x0, x23
  419e60:	mov	x1, xzr
  419e64:	mov	x2, xzr
  419e68:	str	w8, [sp, #88]
  419e6c:	str	x25, [sp, #80]
  419e70:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419e74:	cbz	x0, 41a654 <_obstack_memory_used@@Base+0x5620>
  419e78:	mov	w8, #0xa                   	// #10
  419e7c:	mov	x1, x0
  419e80:	stur	xzr, [x29, #-80]
  419e84:	stur	w8, [x29, #-72]
  419e88:	sub	x3, x29, #0x50
  419e8c:	mov	x0, x23
  419e90:	mov	x2, x19
  419e94:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419e98:	mov	x19, x0
  419e9c:	cbz	x0, 41a654 <_obstack_memory_used@@Base+0x5620>
  419ea0:	cbz	x19, 41957c <_obstack_memory_used@@Base+0x4548>
  419ea4:	ldr	x25, [sp, #56]
  419ea8:	b	419fbc <_obstack_memory_used@@Base+0x4f88>
  419eac:	mov	w19, #0x9                   	// #9
  419eb0:	mov	w8, #0x6                   	// #6
  419eb4:	mov	x0, x23
  419eb8:	mov	x1, xzr
  419ebc:	mov	x2, xzr
  419ec0:	mov	x3, x22
  419ec4:	str	w8, [x22]
  419ec8:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419ecc:	mov	x25, x0
  419ed0:	mov	x0, x23
  419ed4:	mov	x1, xzr
  419ed8:	mov	x2, xzr
  419edc:	mov	x3, x22
  419ee0:	str	w19, [x22]
  419ee4:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419ee8:	mov	x24, x0
  419eec:	mov	w8, #0xa                   	// #10
  419ef0:	sub	x3, x29, #0x50
  419ef4:	mov	x0, x23
  419ef8:	mov	x1, x25
  419efc:	mov	x2, x24
  419f00:	stur	xzr, [x29, #-80]
  419f04:	stur	w8, [x29, #-72]
  419f08:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419f0c:	cbz	x25, 419f1c <_obstack_memory_used@@Base+0x4ee8>
  419f10:	cbz	x24, 419f1c <_obstack_memory_used@@Base+0x4ee8>
  419f14:	mov	x19, x0
  419f18:	cbnz	x0, 419f40 <_obstack_memory_used@@Base+0x4f0c>
  419f1c:	mov	x19, xzr
  419f20:	b	41a514 <_obstack_memory_used@@Base+0x54e0>
  419f24:	mov	x0, x23
  419f28:	mov	x1, xzr
  419f2c:	mov	x2, xzr
  419f30:	mov	x3, x22
  419f34:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419f38:	mov	x19, x0
  419f3c:	cbz	x0, 41a514 <_obstack_memory_used@@Base+0x54e0>
  419f40:	ldr	x2, [sp, #56]
  419f44:	mov	x0, x22
  419f48:	mov	x1, x28
  419f4c:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  419f50:	ldr	x8, [x28, #72]
  419f54:	add	x8, x8, w0, sxtw
  419f58:	str	x8, [x28, #72]
  419f5c:	b	41a42c <_obstack_memory_used@@Base+0x53f8>
  419f60:	ldrb	w8, [x22, #8]
  419f64:	mov	x1, x0
  419f68:	cmp	w8, #0x9
  419f6c:	b.ne	41a5f8 <_obstack_memory_used@@Base+0x55c4>  // b.any
  419f70:	mov	x25, x21
  419f74:	cmp	x20, #0x8
  419f78:	b.hi	419f94 <_obstack_memory_used@@Base+0x4f60>  // b.pmore
  419f7c:	ldr	x8, [x23, #168]
  419f80:	mov	w9, #0x1                   	// #1
  419f84:	lsl	w9, w9, w20
  419f88:	sxtw	x9, w9
  419f8c:	orr	x8, x8, x9
  419f90:	str	x8, [x23, #168]
  419f94:	mov	w8, #0x11                  	// #17
  419f98:	sub	x3, x29, #0x50
  419f9c:	mov	x0, x23
  419fa0:	mov	x2, xzr
  419fa4:	stur	xzr, [x29, #-80]
  419fa8:	stur	w8, [x29, #-72]
  419fac:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  419fb0:	mov	x19, x0
  419fb4:	cbz	x0, 419748 <_obstack_memory_used@@Base+0x4714>
  419fb8:	str	x20, [x19, #40]
  419fbc:	mov	x0, x22
  419fc0:	mov	x1, x28
  419fc4:	mov	x2, x25
  419fc8:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  419fcc:	ldr	x8, [x28, #72]
  419fd0:	mov	w26, #0x1                   	// #1
  419fd4:	mov	w21, #0xa                   	// #10
  419fd8:	mov	w20, #0x10                  	// #16
  419fdc:	add	x8, x8, w0, sxtw
  419fe0:	str	x8, [x28, #72]
  419fe4:	ldrb	w8, [x22, #8]
  419fe8:	cmp	w8, #0x17
  419fec:	b.hi	41a42c <_obstack_memory_used@@Base+0x53f8>  // b.pmore
  419ff0:	mov	w10, #0x800                 	// #2048
  419ff4:	lsl	w9, w26, w8
  419ff8:	movk	w10, #0x8c, lsl #16
  419ffc:	tst	w9, w10
  41a000:	b.eq	41a42c <_obstack_memory_used@@Base+0x53f8>  // b.none
  41a004:	ldr	q0, [x22]
  41a008:	ldr	x24, [x28, #72]
  41a00c:	cmp	w8, #0x17
  41a010:	str	q0, [sp, #80]
  41a014:	b.ne	41a050 <_obstack_memory_used@@Base+0x501c>  // b.any
  41a018:	mov	x0, x28
  41a01c:	mov	x1, x22
  41a020:	mov	x2, x25
  41a024:	bl	41b494 <_obstack_memory_used@@Base+0x6460>
  41a028:	cmn	x0, #0x1
  41a02c:	b.ne	41a068 <_obstack_memory_used@@Base+0x5034>  // b.any
  41a030:	ldrb	w8, [x22, #8]
  41a034:	cmp	w8, #0x1
  41a038:	b.ne	41a274 <_obstack_memory_used@@Base+0x5240>  // b.any
  41a03c:	ldrb	w9, [x22]
  41a040:	cmp	w9, #0x2c
  41a044:	b.ne	41a274 <_obstack_memory_used@@Base+0x5240>  // b.any
  41a048:	mov	x27, xzr
  41a04c:	b	41a078 <_obstack_memory_used@@Base+0x5044>
  41a050:	cmp	w8, #0x12
  41a054:	cset	w27, eq  // eq = none
  41a058:	cmp	w8, #0x13
  41a05c:	mov	w8, #0x1                   	// #1
  41a060:	cneg	x26, x8, ne  // ne = any
  41a064:	b	41a0e4 <_obstack_memory_used@@Base+0x50b0>
  41a068:	mov	x27, x0
  41a06c:	cmn	x0, #0x2
  41a070:	b.eq	41a284 <_obstack_memory_used@@Base+0x5250>  // b.none
  41a074:	ldr	w8, [x22, #8]
  41a078:	and	w8, w8, #0xff
  41a07c:	cmp	w8, #0x18
  41a080:	mov	x26, x27
  41a084:	b.eq	41a0b8 <_obstack_memory_used@@Base+0x5084>  // b.none
  41a088:	cmp	w8, #0x1
  41a08c:	b.ne	41a284 <_obstack_memory_used@@Base+0x5250>  // b.any
  41a090:	ldrb	w8, [x22]
  41a094:	cmp	w8, #0x2c
  41a098:	b.ne	41a284 <_obstack_memory_used@@Base+0x5250>  // b.any
  41a09c:	mov	x0, x28
  41a0a0:	mov	x1, x22
  41a0a4:	mov	x2, x25
  41a0a8:	bl	41b494 <_obstack_memory_used@@Base+0x6460>
  41a0ac:	mov	x26, x0
  41a0b0:	cmn	x0, #0x2
  41a0b4:	b.eq	41a284 <_obstack_memory_used@@Base+0x5250>  // b.none
  41a0b8:	cmn	x26, #0x1
  41a0bc:	b.eq	41a0c8 <_obstack_memory_used@@Base+0x5094>  // b.none
  41a0c0:	cmp	x27, x26
  41a0c4:	b.gt	41a3cc <_obstack_memory_used@@Base+0x5398>
  41a0c8:	ldrb	w8, [x22, #8]
  41a0cc:	cmp	w8, #0x18
  41a0d0:	b.ne	41a3cc <_obstack_memory_used@@Base+0x5398>  // b.any
  41a0d4:	cmn	x26, #0x1
  41a0d8:	csel	x8, x27, x26, eq  // eq = none
  41a0dc:	cmp	x8, #0x8, lsl #12
  41a0e0:	b.ge	41a400 <_obstack_memory_used@@Base+0x53cc>  // b.tcont
  41a0e4:	mov	x0, x22
  41a0e8:	mov	x1, x28
  41a0ec:	mov	x2, x25
  41a0f0:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  41a0f4:	ldr	x8, [x28, #72]
  41a0f8:	add	x8, x8, w0, sxtw
  41a0fc:	str	x8, [x28, #72]
  41a100:	cbz	x19, 41a2dc <_obstack_memory_used@@Base+0x52a8>
  41a104:	orr	x8, x26, x27
  41a108:	cbz	x8, 41a2e4 <_obstack_memory_used@@Base+0x52b0>
  41a10c:	subs	x28, x27, #0x1
  41a110:	b.ge	41a334 <_obstack_memory_used@@Base+0x5300>  // b.tcont
  41a114:	mov	x24, xzr
  41a118:	mov	x28, x19
  41a11c:	ldrb	w8, [x28, #48]
  41a120:	cmp	w8, #0x11
  41a124:	b.ne	41a18c <_obstack_memory_used@@Base+0x5158>  // b.any
  41a128:	ldr	x8, [x28, #40]
  41a12c:	mov	x10, x28
  41a130:	mov	x9, x10
  41a134:	ldr	x10, [x10, #8]
  41a138:	cbnz	x10, 41a130 <_obstack_memory_used@@Base+0x50fc>
  41a13c:	ldr	x10, [x9, #16]
  41a140:	cbnz	x10, 41a130 <_obstack_memory_used@@Base+0x50fc>
  41a144:	ldr	w10, [x9, #48]
  41a148:	and	w11, w10, #0xff
  41a14c:	cmp	w11, #0x11
  41a150:	b.ne	41a168 <_obstack_memory_used@@Base+0x5134>  // b.any
  41a154:	ldr	x11, [x9, #40]
  41a158:	cmp	x11, x8
  41a15c:	b.ne	41a168 <_obstack_memory_used@@Base+0x5134>  // b.any
  41a160:	orr	w10, w10, #0x80000
  41a164:	str	w10, [x9, #48]
  41a168:	ldr	x11, [x9]
  41a16c:	cbz	x11, 41a18c <_obstack_memory_used@@Base+0x5158>
  41a170:	ldr	x10, [x11, #16]
  41a174:	cmp	x10, x9
  41a178:	mov	x9, x11
  41a17c:	b.eq	41a144 <_obstack_memory_used@@Base+0x5110>  // b.none
  41a180:	mov	x9, x11
  41a184:	cbz	x10, 41a144 <_obstack_memory_used@@Base+0x5110>
  41a188:	b	41a130 <_obstack_memory_used@@Base+0x50fc>
  41a18c:	cmn	x26, #0x1
  41a190:	cinc	w8, w21, eq  // eq = none
  41a194:	sub	x3, x29, #0x50
  41a198:	mov	x0, x23
  41a19c:	mov	x1, x28
  41a1a0:	mov	x2, xzr
  41a1a4:	stur	xzr, [x29, #-80]
  41a1a8:	stur	w8, [x29, #-72]
  41a1ac:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a1b0:	cbz	x0, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a1b4:	add	x8, x27, #0x2
  41a1b8:	mov	x25, x0
  41a1bc:	cmp	x8, x26
  41a1c0:	b.gt	41a22c <_obstack_memory_used@@Base+0x51f8>
  41a1c4:	add	x27, x27, #0x1
  41a1c8:	mov	x0, x28
  41a1cc:	mov	x1, x23
  41a1d0:	bl	41b574 <_obstack_memory_used@@Base+0x6540>
  41a1d4:	mov	x28, x0
  41a1d8:	sub	x3, x29, #0x50
  41a1dc:	mov	x0, x23
  41a1e0:	mov	x1, x25
  41a1e4:	mov	x2, x28
  41a1e8:	stur	xzr, [x29, #-80]
  41a1ec:	stur	w20, [x29, #-72]
  41a1f0:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a1f4:	cbz	x28, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a1f8:	mov	x1, x0
  41a1fc:	cbz	x0, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a200:	sub	x3, x29, #0x50
  41a204:	mov	x0, x23
  41a208:	mov	x2, xzr
  41a20c:	stur	xzr, [x29, #-80]
  41a210:	stur	w21, [x29, #-72]
  41a214:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a218:	cbz	x0, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a21c:	add	x27, x27, #0x1
  41a220:	mov	x25, x0
  41a224:	cmp	x27, x26
  41a228:	b.lt	41a1c8 <_obstack_memory_used@@Base+0x5194>  // b.tstop
  41a22c:	ldr	x28, [sp, #48]
  41a230:	mov	w26, #0x1                   	// #1
  41a234:	cbz	x24, 41a260 <_obstack_memory_used@@Base+0x522c>
  41a238:	sub	x3, x29, #0x50
  41a23c:	mov	x0, x23
  41a240:	mov	x1, x24
  41a244:	mov	x2, x25
  41a248:	stur	xzr, [x29, #-80]
  41a24c:	stur	w20, [x29, #-72]
  41a250:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a254:	ldr	x25, [sp, #56]
  41a258:	mov	x24, x0
  41a25c:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a260:	mov	x24, x25
  41a264:	ldr	x25, [sp, #56]
  41a268:	cmp	x24, #0x0
  41a26c:	cset	w8, eq  // eq = none
  41a270:	b	41a2b8 <_obstack_memory_used@@Base+0x5284>
  41a274:	ldr	x8, [sp, #40]
  41a278:	mov	x24, xzr
  41a27c:	str	w21, [x8]
  41a280:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a284:	tbz	w25, #21, 41a3dc <_obstack_memory_used@@Base+0x53a8>
  41a288:	str	x24, [x28, #72]
  41a28c:	ldr	q0, [sp, #80]
  41a290:	mov	w26, #0x1                   	// #1
  41a294:	mov	x24, x19
  41a298:	str	q0, [x22]
  41a29c:	strb	w26, [x22, #8]
  41a2a0:	cmp	x24, #0x0
  41a2a4:	cset	w8, eq  // eq = none
  41a2a8:	cbnz	x24, 41a2b8 <_obstack_memory_used@@Base+0x5284>
  41a2ac:	ldr	x9, [sp, #40]
  41a2b0:	ldr	w9, [x9]
  41a2b4:	cbnz	w9, 41a490 <_obstack_memory_used@@Base+0x545c>
  41a2b8:	mov	x19, x24
  41a2bc:	tbz	w25, #24, 419fe4 <_obstack_memory_used@@Base+0x4fb0>
  41a2c0:	ldrb	w9, [x22, #8]
  41a2c4:	cmp	w9, #0x17
  41a2c8:	b.eq	41a418 <_obstack_memory_used@@Base+0x53e4>  // b.none
  41a2cc:	cmp	w9, #0xb
  41a2d0:	mov	x19, x24
  41a2d4:	b.ne	419fe4 <_obstack_memory_used@@Base+0x4fb0>  // b.any
  41a2d8:	b	41a418 <_obstack_memory_used@@Base+0x53e4>
  41a2dc:	mov	x24, xzr
  41a2e0:	b	41a3c4 <_obstack_memory_used@@Base+0x5390>
  41a2e4:	mov	x8, x19
  41a2e8:	mov	w26, #0x1                   	// #1
  41a2ec:	mov	x24, x8
  41a2f0:	ldr	x8, [x8, #8]
  41a2f4:	cbnz	x8, 41a2ec <_obstack_memory_used@@Base+0x52b8>
  41a2f8:	ldr	x8, [x24, #16]
  41a2fc:	cbnz	x8, 41a2ec <_obstack_memory_used@@Base+0x52b8>
  41a300:	add	x0, x24, #0x28
  41a304:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  41a308:	ldr	x9, [x24]
  41a30c:	cbz	x9, 41a32c <_obstack_memory_used@@Base+0x52f8>
  41a310:	ldr	x8, [x9, #16]
  41a314:	cmp	x8, x24
  41a318:	mov	x24, x9
  41a31c:	b.eq	41a300 <_obstack_memory_used@@Base+0x52cc>  // b.none
  41a320:	mov	x24, x9
  41a324:	cbz	x8, 41a300 <_obstack_memory_used@@Base+0x52cc>
  41a328:	b	41a2ec <_obstack_memory_used@@Base+0x52b8>
  41a32c:	mov	x24, xzr
  41a330:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a334:	mov	x24, x19
  41a338:	mov	x25, x19
  41a33c:	b.eq	41a388 <_obstack_memory_used@@Base+0x5354>  // b.none
  41a340:	mov	x25, x19
  41a344:	mov	x24, x19
  41a348:	mov	x0, x25
  41a34c:	mov	x1, x23
  41a350:	bl	41b574 <_obstack_memory_used@@Base+0x6540>
  41a354:	mov	x25, x0
  41a358:	sub	x3, x29, #0x50
  41a35c:	mov	x0, x23
  41a360:	mov	x1, x24
  41a364:	mov	x2, x25
  41a368:	stur	xzr, [x29, #-80]
  41a36c:	stur	w20, [x29, #-72]
  41a370:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a374:	cbz	x25, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a378:	mov	x24, x0
  41a37c:	cbz	x0, 41a3b0 <_obstack_memory_used@@Base+0x537c>
  41a380:	subs	x28, x28, #0x1
  41a384:	b.ne	41a348 <_obstack_memory_used@@Base+0x5314>  // b.any
  41a388:	cmp	x27, x26
  41a38c:	b.ne	41a39c <_obstack_memory_used@@Base+0x5368>  // b.any
  41a390:	ldr	x28, [sp, #48]
  41a394:	mov	w26, #0x1                   	// #1
  41a398:	b	41a264 <_obstack_memory_used@@Base+0x5230>
  41a39c:	mov	x0, x25
  41a3a0:	mov	x1, x23
  41a3a4:	bl	41b574 <_obstack_memory_used@@Base+0x6540>
  41a3a8:	mov	x28, x0
  41a3ac:	cbnz	x0, 41a11c <_obstack_memory_used@@Base+0x50e8>
  41a3b0:	ldp	x8, x28, [sp, #40]
  41a3b4:	ldr	x25, [sp, #56]
  41a3b8:	mov	w9, #0xc                   	// #12
  41a3bc:	mov	x24, xzr
  41a3c0:	str	w9, [x8]
  41a3c4:	mov	w26, #0x1                   	// #1
  41a3c8:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a3cc:	ldr	x8, [sp, #40]
  41a3d0:	mov	x24, xzr
  41a3d4:	mov	w26, #0x1                   	// #1
  41a3d8:	b	41a27c <_obstack_memory_used@@Base+0x5248>
  41a3dc:	ldrb	w8, [x22, #8]
  41a3e0:	ldr	x9, [sp, #40]
  41a3e4:	mov	x24, xzr
  41a3e8:	mov	w26, #0x1                   	// #1
  41a3ec:	cmp	w8, #0x2
  41a3f0:	mov	w8, #0x9                   	// #9
  41a3f4:	cinc	w8, w8, ne  // ne = any
  41a3f8:	str	w8, [x9]
  41a3fc:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a400:	ldr	x8, [sp, #40]
  41a404:	mov	w9, #0xf                   	// #15
  41a408:	mov	x24, xzr
  41a40c:	mov	w26, #0x1                   	// #1
  41a410:	str	w9, [x8]
  41a414:	b	41a2a0 <_obstack_memory_used@@Base+0x526c>
  41a418:	ldr	x20, [sp, #40]
  41a41c:	tbz	w8, #0, 41a450 <_obstack_memory_used@@Base+0x541c>
  41a420:	mov	x19, xzr
  41a424:	mov	w8, #0xd                   	// #13
  41a428:	str	w8, [x20]
  41a42c:	mov	x0, x19
  41a430:	ldp	x20, x19, [sp, #272]
  41a434:	ldp	x22, x21, [sp, #256]
  41a438:	ldp	x24, x23, [sp, #240]
  41a43c:	ldp	x26, x25, [sp, #224]
  41a440:	ldp	x28, x27, [sp, #208]
  41a444:	ldp	x29, x30, [sp, #192]
  41a448:	add	sp, sp, #0x120
  41a44c:	ret
  41a450:	mov	x19, x24
  41a454:	ldr	x24, [x24, #8]
  41a458:	cbnz	x24, 41a450 <_obstack_memory_used@@Base+0x541c>
  41a45c:	ldr	x24, [x19, #16]
  41a460:	cbnz	x24, 41a450 <_obstack_memory_used@@Base+0x541c>
  41a464:	add	x0, x19, #0x28
  41a468:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  41a46c:	ldr	x8, [x19]
  41a470:	cbz	x8, 41a420 <_obstack_memory_used@@Base+0x53ec>
  41a474:	ldr	x24, [x8, #16]
  41a478:	cmp	x24, x19
  41a47c:	mov	x19, x8
  41a480:	b.eq	41a464 <_obstack_memory_used@@Base+0x5430>  // b.none
  41a484:	mov	x19, x8
  41a488:	cbz	x24, 41a464 <_obstack_memory_used@@Base+0x5430>
  41a48c:	b	41a450 <_obstack_memory_used@@Base+0x541c>
  41a490:	cbz	x19, 41a42c <_obstack_memory_used@@Base+0x53f8>
  41a494:	mov	x20, x19
  41a498:	ldr	x19, [x19, #8]
  41a49c:	cbnz	x19, 41a494 <_obstack_memory_used@@Base+0x5460>
  41a4a0:	ldr	x19, [x20, #16]
  41a4a4:	cbnz	x19, 41a494 <_obstack_memory_used@@Base+0x5460>
  41a4a8:	add	x0, x20, #0x28
  41a4ac:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  41a4b0:	ldr	x8, [x20]
  41a4b4:	cbz	x8, 4198d0 <_obstack_memory_used@@Base+0x489c>
  41a4b8:	ldr	x19, [x8, #16]
  41a4bc:	cmp	x19, x20
  41a4c0:	mov	x20, x8
  41a4c4:	b.eq	41a4a8 <_obstack_memory_used@@Base+0x5474>  // b.none
  41a4c8:	mov	x20, x8
  41a4cc:	cbz	x19, 41a4a8 <_obstack_memory_used@@Base+0x5474>
  41a4d0:	b	41a494 <_obstack_memory_used@@Base+0x5460>
  41a4d4:	cmp	w8, #0x2
  41a4d8:	b.lt	41a4ec <_obstack_memory_used@@Base+0x54b8>  // b.tstop
  41a4dc:	ldr	x8, [x27, #72]
  41a4e0:	cbnz	x8, 419dfc <_obstack_memory_used@@Base+0x4dc8>
  41a4e4:	ldrb	w8, [x27, #32]
  41a4e8:	tbnz	w8, #0, 419dfc <_obstack_memory_used@@Base+0x4dc8>
  41a4ec:	mov	x0, x27
  41a4f0:	bl	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41a4f4:	mov	w8, #0x3                   	// #3
  41a4f8:	add	x3, sp, #0x50
  41a4fc:	mov	x0, x23
  41a500:	mov	x1, xzr
  41a504:	mov	x2, xzr
  41a508:	str	w8, [sp, #88]
  41a50c:	str	x25, [sp, #80]
  41a510:	b	419e94 <_obstack_memory_used@@Base+0x4e60>
  41a514:	mov	w8, #0xc                   	// #12
  41a518:	b	41a428 <_obstack_memory_used@@Base+0x53f4>
  41a51c:	mov	w0, #0x7                   	// #7
  41a520:	b	41a530 <_obstack_memory_used@@Base+0x54fc>
  41a524:	mov	w8, #0x2                   	// #2
  41a528:	b	41a658 <_obstack_memory_used@@Base+0x5624>
  41a52c:	mov	w0, #0x3                   	// #3
  41a530:	ldp	x20, x28, [sp, #40]
  41a534:	str	w0, [x20]
  41a538:	mov	x0, x25
  41a53c:	bl	402770 <free@plt>
  41a540:	mov	x0, x27
  41a544:	bl	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41a548:	mov	x19, xzr
  41a54c:	b	419ea0 <_obstack_memory_used@@Base+0x4e6c>
  41a550:	mov	x0, x25
  41a554:	bl	402770 <free@plt>
  41a558:	mov	x0, x27
  41a55c:	bl	402770 <free@plt>
  41a560:	mov	w8, #0xc                   	// #12
  41a564:	mov	x19, xzr
  41a568:	str	w8, [x20]
  41a56c:	b	419ea0 <_obstack_memory_used@@Base+0x4e6c>
  41a570:	mov	x19, xzr
  41a574:	mov	w8, #0x6                   	// #6
  41a578:	b	41a428 <_obstack_memory_used@@Base+0x53f4>
  41a57c:	mov	x20, xzr
  41a580:	mov	x19, xzr
  41a584:	b	41a590 <_obstack_memory_used@@Base+0x555c>
  41a588:	mov	w19, #0x2                   	// #2
  41a58c:	mov	w20, #0x80                  	// #128
  41a590:	bl	402760 <__ctype_b_loc@plt>
  41a594:	ldr	x8, [x0]
  41a598:	ldr	x28, [sp, #48]
  41a59c:	mov	w9, #0x1                   	// #1
  41a5a0:	add	x8, x8, x20, lsl #1
  41a5a4:	add	x11, x23, x19, lsl #3
  41a5a8:	mov	x10, xzr
  41a5ac:	add	x11, x11, #0xb8
  41a5b0:	add	x12, x20, x10
  41a5b4:	cmp	x12, #0x5f
  41a5b8:	b.eq	41a5c4 <_obstack_memory_used@@Base+0x5590>  // b.none
  41a5bc:	ldrh	w12, [x8, x10, lsl #1]
  41a5c0:	tbz	w12, #3, 41a5d4 <_obstack_memory_used@@Base+0x55a0>
  41a5c4:	ldr	x12, [x11]
  41a5c8:	lsl	x13, x9, x10
  41a5cc:	orr	x12, x12, x13
  41a5d0:	str	x12, [x11]
  41a5d4:	add	x10, x10, #0x1
  41a5d8:	cmp	x10, #0x40
  41a5dc:	b.ne	41a5b0 <_obstack_memory_used@@Base+0x557c>  // b.any
  41a5e0:	add	x19, x19, #0x1
  41a5e4:	add	x20, x20, #0x40
  41a5e8:	cmp	x19, #0x4
  41a5ec:	add	x8, x8, #0x80
  41a5f0:	b.ne	41a5a4 <_obstack_memory_used@@Base+0x5570>  // b.any
  41a5f4:	b	4195fc <_obstack_memory_used@@Base+0x45c8>
  41a5f8:	cbz	x1, 41a63c <_obstack_memory_used@@Base+0x5608>
  41a5fc:	mov	x19, x1
  41a600:	ldr	x1, [x1, #8]
  41a604:	cbnz	x1, 41a5fc <_obstack_memory_used@@Base+0x55c8>
  41a608:	ldr	x1, [x19, #16]
  41a60c:	cbnz	x1, 41a5fc <_obstack_memory_used@@Base+0x55c8>
  41a610:	add	x0, x19, #0x28
  41a614:	bl	418144 <_obstack_memory_used@@Base+0x3110>
  41a618:	ldr	x8, [x19]
  41a61c:	cbz	x8, 41a63c <_obstack_memory_used@@Base+0x5608>
  41a620:	ldr	x1, [x8, #16]
  41a624:	cmp	x1, x19
  41a628:	mov	x19, x8
  41a62c:	b.eq	41a610 <_obstack_memory_used@@Base+0x55dc>  // b.none
  41a630:	mov	x19, x8
  41a634:	cbz	x1, 41a610 <_obstack_memory_used@@Base+0x55dc>
  41a638:	b	41a5fc <_obstack_memory_used@@Base+0x55c8>
  41a63c:	mov	x19, xzr
  41a640:	mov	w8, #0x8                   	// #8
  41a644:	b	41974c <_obstack_memory_used@@Base+0x4718>
  41a648:	mov	w0, #0xb                   	// #11
  41a64c:	b	41a530 <_obstack_memory_used@@Base+0x54fc>
  41a650:	ldr	x28, [sp, #48]
  41a654:	mov	w8, #0xc                   	// #12
  41a658:	str	w8, [x20]
  41a65c:	b	41a538 <_obstack_memory_used@@Base+0x5504>
  41a660:	bl	402770 <free@plt>
  41a664:	mov	x0, x19
  41a668:	bl	402770 <free@plt>
  41a66c:	mov	w0, #0xc                   	// #12
  41a670:	b	41a530 <_obstack_memory_used@@Base+0x54fc>
  41a674:	stp	x29, x30, [sp, #-48]!
  41a678:	stp	x22, x21, [sp, #16]
  41a67c:	stp	x20, x19, [sp, #32]
  41a680:	ldr	w8, [x0, #128]
  41a684:	mov	x21, x3
  41a688:	mov	x19, x2
  41a68c:	mov	x22, x0
  41a690:	cmp	w8, #0xf
  41a694:	mov	x20, x1
  41a698:	mov	x29, sp
  41a69c:	b.eq	41a6fc <_obstack_memory_used@@Base+0x56c8>  // b.none
  41a6a0:	ldr	x0, [x22, #112]
  41a6a4:	add	w9, w8, #0x1
  41a6a8:	sxtw	x8, w8
  41a6ac:	add	x0, x0, x8, lsl #6
  41a6b0:	str	w9, [x22, #128]
  41a6b4:	str	xzr, [x0, #8]!
  41a6b8:	stp	x20, x19, [x0, #8]
  41a6bc:	ldr	q0, [x21]
  41a6c0:	mov	x9, #0xffffffffffffffff    	// #-1
  41a6c4:	stp	xzr, xzr, [x0, #24]
  41a6c8:	str	x9, [x0, #56]
  41a6cc:	stur	q0, [x0, #40]
  41a6d0:	ldr	w8, [x0, #48]
  41a6d4:	and	w8, w8, #0xfff3ffff
  41a6d8:	str	w8, [x0, #48]
  41a6dc:	cbz	x20, 41a6e4 <_obstack_memory_used@@Base+0x56b0>
  41a6e0:	str	x0, [x20]
  41a6e4:	cbz	x19, 41a6ec <_obstack_memory_used@@Base+0x56b8>
  41a6e8:	str	x0, [x19]
  41a6ec:	ldp	x20, x19, [sp, #32]
  41a6f0:	ldp	x22, x21, [sp, #16]
  41a6f4:	ldp	x29, x30, [sp], #48
  41a6f8:	ret
  41a6fc:	mov	w0, #0x3c8                 	// #968
  41a700:	bl	4024e0 <malloc@plt>
  41a704:	cbz	x0, 41a6ec <_obstack_memory_used@@Base+0x56b8>
  41a708:	ldr	x9, [x22, #112]
  41a70c:	mov	w8, wzr
  41a710:	str	x9, [x0]
  41a714:	str	x0, [x22, #112]
  41a718:	str	wzr, [x22, #128]
  41a71c:	b	41a6a4 <_obstack_memory_used@@Base+0x5670>
  41a720:	sub	sp, sp, #0x80
  41a724:	stp	x26, x25, [sp, #64]
  41a728:	stp	x20, x19, [sp, #112]
  41a72c:	mov	x26, x1
  41a730:	mov	x20, x0
  41a734:	mov	w0, #0x20                  	// #32
  41a738:	mov	w1, #0x1                   	// #1
  41a73c:	stp	x29, x30, [sp, #48]
  41a740:	stp	x24, x23, [sp, #80]
  41a744:	stp	x22, x21, [sp, #96]
  41a748:	add	x29, sp, #0x30
  41a74c:	mov	x19, x5
  41a750:	mov	w23, w4
  41a754:	mov	x24, x3
  41a758:	mov	x25, x2
  41a75c:	str	xzr, [sp, #24]
  41a760:	bl	4025d0 <calloc@plt>
  41a764:	cbz	x0, 41a8ec <_obstack_memory_used@@Base+0x58b8>
  41a768:	mov	x21, x0
  41a76c:	mov	w0, #0x50                  	// #80
  41a770:	mov	w1, #0x1                   	// #1
  41a774:	bl	4025d0 <calloc@plt>
  41a778:	cbz	x0, 41a8e4 <_obstack_memory_used@@Base+0x58b0>
  41a77c:	mov	x22, x0
  41a780:	and	w8, w23, #0x1
  41a784:	strb	w8, [x0, #32]
  41a788:	add	x3, sp, #0x18
  41a78c:	mov	x0, x26
  41a790:	mov	x1, x21
  41a794:	mov	x2, x22
  41a798:	mov	x4, x25
  41a79c:	mov	x5, xzr
  41a7a0:	bl	41ad1c <_obstack_memory_used@@Base+0x5ce8>
  41a7a4:	cbnz	w0, 41a8fc <_obstack_memory_used@@Base+0x58c8>
  41a7a8:	ldrb	w8, [x24]
  41a7ac:	cbz	w8, 41a7d8 <_obstack_memory_used@@Base+0x57a4>
  41a7b0:	add	x9, x24, #0x1
  41a7b4:	mov	w10, #0x1                   	// #1
  41a7b8:	lsr	w11, w8, #3
  41a7bc:	and	x11, x11, #0x18
  41a7c0:	ldr	x12, [x21, x11]
  41a7c4:	lsl	x8, x10, x8
  41a7c8:	orr	x8, x12, x8
  41a7cc:	str	x8, [x21, x11]
  41a7d0:	ldrb	w8, [x9], #1
  41a7d4:	cbnz	w8, 41a7b8 <_obstack_memory_used@@Base+0x5784>
  41a7d8:	tbz	w23, #0, 41a7ec <_obstack_memory_used@@Base+0x57b8>
  41a7dc:	ldp	q0, q1, [x21]
  41a7e0:	mvn	v0.16b, v0.16b
  41a7e4:	mvn	v1.16b, v1.16b
  41a7e8:	stp	q0, q1, [x21]
  41a7ec:	ldr	w8, [x20, #180]
  41a7f0:	cmp	w8, #0x2
  41a7f4:	b.lt	41a81c <_obstack_memory_used@@Base+0x57e8>  // b.tstop
  41a7f8:	ldr	x8, [x20, #120]
  41a7fc:	mov	x9, xzr
  41a800:	ldr	x10, [x8, x9]
  41a804:	ldr	x11, [x21, x9]
  41a808:	and	x10, x11, x10
  41a80c:	str	x10, [x21, x9]
  41a810:	add	x9, x9, #0x8
  41a814:	cmp	x9, #0x20
  41a818:	b.ne	41a800 <_obstack_memory_used@@Base+0x57cc>  // b.any
  41a81c:	mov	w8, #0x3                   	// #3
  41a820:	add	x3, sp, #0x8
  41a824:	mov	x0, x20
  41a828:	mov	x1, xzr
  41a82c:	mov	x2, xzr
  41a830:	str	x21, [sp, #8]
  41a834:	str	w8, [sp, #16]
  41a838:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a83c:	cbz	x0, 41a8d0 <_obstack_memory_used@@Base+0x589c>
  41a840:	ldr	w8, [x20, #180]
  41a844:	mov	x23, x0
  41a848:	cmp	w8, #0x2
  41a84c:	b.lt	41a8a8 <_obstack_memory_used@@Base+0x5874>  // b.tstop
  41a850:	mov	w8, #0x6                   	// #6
  41a854:	str	w8, [sp, #16]
  41a858:	str	x22, [sp, #8]
  41a85c:	ldrb	w8, [x20, #176]
  41a860:	add	x3, sp, #0x8
  41a864:	mov	x0, x20
  41a868:	mov	x1, xzr
  41a86c:	orr	w8, w8, #0x2
  41a870:	mov	x2, xzr
  41a874:	strb	w8, [x20, #176]
  41a878:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a87c:	cbz	x0, 41a8d0 <_obstack_memory_used@@Base+0x589c>
  41a880:	mov	x2, x0
  41a884:	mov	w8, #0xa                   	// #10
  41a888:	sub	x3, x29, #0x10
  41a88c:	mov	x0, x20
  41a890:	mov	x1, x23
  41a894:	stur	xzr, [x29, #-16]
  41a898:	stur	w8, [x29, #-8]
  41a89c:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41a8a0:	mov	x23, x0
  41a8a4:	b	41a8b0 <_obstack_memory_used@@Base+0x587c>
  41a8a8:	mov	x0, x22
  41a8ac:	bl	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41a8b0:	mov	x0, x23
  41a8b4:	ldp	x20, x19, [sp, #112]
  41a8b8:	ldp	x22, x21, [sp, #96]
  41a8bc:	ldp	x24, x23, [sp, #80]
  41a8c0:	ldp	x26, x25, [sp, #64]
  41a8c4:	ldp	x29, x30, [sp, #48]
  41a8c8:	add	sp, sp, #0x80
  41a8cc:	ret
  41a8d0:	mov	x0, x21
  41a8d4:	bl	402770 <free@plt>
  41a8d8:	mov	x0, x22
  41a8dc:	bl	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41a8e0:	b	41a8ec <_obstack_memory_used@@Base+0x58b8>
  41a8e4:	mov	x0, x21
  41a8e8:	bl	402770 <free@plt>
  41a8ec:	mov	x23, xzr
  41a8f0:	mov	w8, #0xc                   	// #12
  41a8f4:	str	w8, [x19]
  41a8f8:	b	41a8b0 <_obstack_memory_used@@Base+0x587c>
  41a8fc:	mov	w25, w0
  41a900:	mov	x0, x21
  41a904:	bl	402770 <free@plt>
  41a908:	mov	x0, x22
  41a90c:	bl	4181e0 <_obstack_memory_used@@Base+0x31ac>
  41a910:	mov	x23, xzr
  41a914:	str	w25, [x19]
  41a918:	b	41a8b0 <_obstack_memory_used@@Base+0x587c>
  41a91c:	ldr	x9, [x1, #104]
  41a920:	ldr	x8, [x1, #72]
  41a924:	cmp	x9, x8
  41a928:	b.le	41a99c <_obstack_memory_used@@Base+0x5968>
  41a92c:	ldr	x9, [x1, #8]
  41a930:	ldrb	w8, [x9, x8]
  41a934:	strb	w8, [x0]
  41a938:	ldr	w9, [x1, #144]
  41a93c:	cmp	w9, #0x2
  41a940:	b.lt	41a964 <_obstack_memory_used@@Base+0x5930>  // b.tstop
  41a944:	ldr	x9, [x1, #72]
  41a948:	ldr	x10, [x1, #48]
  41a94c:	cmp	x9, x10
  41a950:	b.eq	41a964 <_obstack_memory_used@@Base+0x5930>  // b.none
  41a954:	ldr	x10, [x1, #16]
  41a958:	ldr	w9, [x10, x9, lsl #2]
  41a95c:	cmn	w9, #0x1
  41a960:	b.eq	41aa1c <_obstack_memory_used@@Base+0x59e8>  // b.none
  41a964:	tbz	w2, #0, 41a9ac <_obstack_memory_used@@Base+0x5978>
  41a968:	cmp	w8, #0x5c
  41a96c:	b.ne	41a9ac <_obstack_memory_used@@Base+0x5978>  // b.any
  41a970:	ldr	x8, [x1, #72]
  41a974:	ldr	x9, [x1, #88]
  41a978:	add	x8, x8, #0x1
  41a97c:	cmp	x8, x9
  41a980:	b.ge	41aa1c <_obstack_memory_used@@Base+0x59e8>  // b.tcont
  41a984:	ldr	x9, [x1, #8]
  41a988:	str	x8, [x1, #72]
  41a98c:	ldrb	w9, [x9, x8]
  41a990:	mov	w8, #0x1                   	// #1
  41a994:	strb	w9, [x0]
  41a998:	b	41aa20 <_obstack_memory_used@@Base+0x59ec>
  41a99c:	mov	w8, wzr
  41a9a0:	mov	w9, #0x2                   	// #2
  41a9a4:	strb	w9, [x0, #8]
  41a9a8:	b	41aa3c <_obstack_memory_used@@Base+0x5a08>
  41a9ac:	cmp	w8, #0x5c
  41a9b0:	b.gt	41aa04 <_obstack_memory_used@@Base+0x59d0>
  41a9b4:	cmp	w8, #0x2d
  41a9b8:	b.eq	41aa28 <_obstack_memory_used@@Base+0x59f4>  // b.none
  41a9bc:	cmp	w8, #0x5b
  41a9c0:	b.ne	41aa1c <_obstack_memory_used@@Base+0x59e8>  // b.any
  41a9c4:	ldr	x8, [x1, #72]
  41a9c8:	ldr	x9, [x1, #88]
  41a9cc:	add	x8, x8, #0x1
  41a9d0:	cmp	x8, x9
  41a9d4:	b.ge	41aa44 <_obstack_memory_used@@Base+0x5a10>  // b.tcont
  41a9d8:	ldr	x9, [x1, #8]
  41a9dc:	ldrb	w8, [x9, x8]
  41a9e0:	cmp	w8, #0x3d
  41a9e4:	strb	w8, [x0]
  41a9e8:	b.eq	41aa5c <_obstack_memory_used@@Base+0x5a28>  // b.none
  41a9ec:	cmp	w8, #0x3a
  41a9f0:	b.eq	41aa64 <_obstack_memory_used@@Base+0x5a30>  // b.none
  41a9f4:	cmp	w8, #0x2e
  41a9f8:	b.ne	41aa48 <_obstack_memory_used@@Base+0x5a14>  // b.any
  41a9fc:	mov	w8, #0x1a                  	// #26
  41aa00:	b	41aa6c <_obstack_memory_used@@Base+0x5a38>
  41aa04:	cmp	w8, #0x5d
  41aa08:	b.eq	41aa30 <_obstack_memory_used@@Base+0x59fc>  // b.none
  41aa0c:	cmp	w8, #0x5e
  41aa10:	b.ne	41aa1c <_obstack_memory_used@@Base+0x59e8>  // b.any
  41aa14:	mov	w8, #0x19                  	// #25
  41aa18:	b	41aa34 <_obstack_memory_used@@Base+0x5a00>
  41aa1c:	mov	w8, #0x1                   	// #1
  41aa20:	strb	w8, [x0, #8]
  41aa24:	b	41aa3c <_obstack_memory_used@@Base+0x5a08>
  41aa28:	mov	w8, #0x16                  	// #22
  41aa2c:	b	41aa34 <_obstack_memory_used@@Base+0x5a00>
  41aa30:	mov	w8, #0x15                  	// #21
  41aa34:	strb	w8, [x0, #8]
  41aa38:	mov	w8, #0x1                   	// #1
  41aa3c:	mov	w0, w8
  41aa40:	ret
  41aa44:	strb	wzr, [x0]
  41aa48:	mov	w8, #0x1                   	// #1
  41aa4c:	mov	w9, #0x5b                  	// #91
  41aa50:	strb	w8, [x0, #8]
  41aa54:	strb	w9, [x0]
  41aa58:	b	41aa3c <_obstack_memory_used@@Base+0x5a08>
  41aa5c:	mov	w8, #0x1c                  	// #28
  41aa60:	b	41aa6c <_obstack_memory_used@@Base+0x5a38>
  41aa64:	tbz	w2, #2, 41aa48 <_obstack_memory_used@@Base+0x5a14>
  41aa68:	mov	w8, #0x1e                  	// #30
  41aa6c:	strb	w8, [x0, #8]
  41aa70:	mov	w8, #0x2                   	// #2
  41aa74:	b	41aa3c <_obstack_memory_used@@Base+0x5a08>
  41aa78:	sub	sp, sp, #0x30
  41aa7c:	stp	x29, x30, [sp, #32]
  41aa80:	ldr	w8, [x1, #144]
  41aa84:	ldr	x9, [x1, #72]
  41aa88:	add	x29, sp, #0x20
  41aa8c:	cmp	w8, #0x1
  41aa90:	b.eq	41ab00 <_obstack_memory_used@@Base+0x5acc>  // b.none
  41aa94:	ldr	x8, [x1, #48]
  41aa98:	add	x10, x9, #0x1
  41aa9c:	cmp	x10, x8
  41aaa0:	b.ge	41ab00 <_obstack_memory_used@@Base+0x5acc>  // b.tcont
  41aaa4:	ldr	x10, [x1, #16]
  41aaa8:	sub	x8, x8, x9
  41aaac:	mov	w11, #0x1                   	// #1
  41aab0:	add	x12, x10, x9, lsl #2
  41aab4:	ldr	w13, [x12, x11, lsl #2]
  41aab8:	cmn	w13, #0x1
  41aabc:	b.ne	41aad4 <_obstack_memory_used@@Base+0x5aa0>  // b.any
  41aac0:	add	x11, x11, #0x1
  41aac4:	cmp	x8, x11
  41aac8:	b.ne	41aab4 <_obstack_memory_used@@Base+0x5a80>  // b.any
  41aacc:	mov	x11, x8
  41aad0:	b	41aadc <_obstack_memory_used@@Base+0x5aa8>
  41aad4:	cmp	w11, #0x2
  41aad8:	b.lt	41ab00 <_obstack_memory_used@@Base+0x5acc>  // b.tstop
  41aadc:	mov	w12, #0x1                   	// #1
  41aae0:	str	w12, [x0]
  41aae4:	ldr	w9, [x10, x9, lsl #2]
  41aae8:	mov	w8, wzr
  41aaec:	str	w9, [x0, #8]
  41aaf0:	ldr	x9, [x1, #72]
  41aaf4:	add	x9, x9, w11, sxtw
  41aaf8:	str	x9, [x1, #72]
  41aafc:	b	41ad04 <_obstack_memory_used@@Base+0x5cd0>
  41ab00:	add	x8, x9, w3, sxtw
  41ab04:	str	x8, [x1, #72]
  41ab08:	ldrb	w10, [x2, #8]
  41ab0c:	sub	w9, w10, #0x16
  41ab10:	cmp	w9, #0x8
  41ab14:	b.hi	41acf4 <_obstack_memory_used@@Base+0x5cc0>  // b.pmore
  41ab18:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ab1c:	add	x11, x11, #0xa88
  41ab20:	adr	x12, 41ab30 <_obstack_memory_used@@Base+0x5afc>
  41ab24:	ldrb	w13, [x11, x9]
  41ab28:	add	x12, x12, x13, lsl #2
  41ab2c:	br	x12
  41ab30:	ldr	x9, [x1, #104]
  41ab34:	cmp	x9, x8
  41ab38:	b.le	41ac78 <_obstack_memory_used@@Base+0x5c44>
  41ab3c:	ldrb	w9, [x2]
  41ab40:	mov	x8, xzr
  41ab44:	and	w10, w10, #0xff
  41ab48:	cmp	w10, #0x1e
  41ab4c:	b.ne	41ab58 <_obstack_memory_used@@Base+0x5b24>  // b.any
  41ab50:	ldrb	w10, [x1, #139]
  41ab54:	cbnz	w10, 41abac <_obstack_memory_used@@Base+0x5b78>
  41ab58:	ldr	x10, [x1, #72]
  41ab5c:	ldr	x11, [x1, #8]
  41ab60:	add	x12, x10, #0x1
  41ab64:	str	x12, [x1, #72]
  41ab68:	ldrb	w10, [x11, x10]
  41ab6c:	ldr	x11, [x1, #104]
  41ab70:	cmp	x11, x12
  41ab74:	b.le	41ac78 <_obstack_memory_used@@Base+0x5c44>
  41ab78:	cmp	w9, w10, uxtb
  41ab7c:	b.ne	41ab90 <_obstack_memory_used@@Base+0x5b5c>  // b.any
  41ab80:	ldr	x11, [x1, #8]
  41ab84:	ldrb	w11, [x11, x12]
  41ab88:	cmp	w11, #0x5d
  41ab8c:	b.eq	41ac80 <_obstack_memory_used@@Base+0x5c4c>  // b.none
  41ab90:	ldr	x11, [x0, #8]
  41ab94:	strb	w10, [x11, x8]
  41ab98:	add	x8, x8, #0x1
  41ab9c:	cmp	x8, #0x20
  41aba0:	b.eq	41ac78 <_obstack_memory_used@@Base+0x5c44>  // b.none
  41aba4:	ldrb	w10, [x2, #8]
  41aba8:	b	41ab44 <_obstack_memory_used@@Base+0x5b10>
  41abac:	ldrb	w10, [x1, #140]
  41abb0:	cbz	w10, 41ac34 <_obstack_memory_used@@Base+0x5c00>
  41abb4:	ldr	x11, [x1, #72]
  41abb8:	ldr	x13, [x1, #48]
  41abbc:	subs	x12, x13, x11
  41abc0:	b.eq	41abd4 <_obstack_memory_used@@Base+0x5ba0>  // b.none
  41abc4:	ldr	x10, [x1, #16]
  41abc8:	ldr	w10, [x10, x11, lsl #2]
  41abcc:	cmn	w10, #0x1
  41abd0:	b.eq	41ac54 <_obstack_memory_used@@Base+0x5c20>  // b.none
  41abd4:	ldr	x10, [x1, #24]
  41abd8:	ldr	x14, [x1, #40]
  41abdc:	ldr	x15, [x1]
  41abe0:	ldr	x10, [x10, x11, lsl #3]
  41abe4:	add	x10, x14, x10
  41abe8:	ldrsb	w10, [x15, x10]
  41abec:	tbnz	w10, #31, 41ac54 <_obstack_memory_used@@Base+0x5c20>
  41abf0:	ldr	w14, [x1, #144]
  41abf4:	cmp	w14, #0x1
  41abf8:	b.eq	41ac68 <_obstack_memory_used@@Base+0x5c34>  // b.none
  41abfc:	add	x14, x11, #0x1
  41ac00:	cmp	x14, x13
  41ac04:	b.ge	41ac68 <_obstack_memory_used@@Base+0x5c34>  // b.tcont
  41ac08:	ldr	x13, [x1, #16]
  41ac0c:	add	x14, x13, x11, lsl #2
  41ac10:	mov	w13, #0x1                   	// #1
  41ac14:	ldr	w15, [x14, x13, lsl #2]
  41ac18:	cmn	w15, #0x1
  41ac1c:	b.ne	41ac6c <_obstack_memory_used@@Base+0x5c38>  // b.any
  41ac20:	add	x13, x13, #0x1
  41ac24:	cmp	x12, x13
  41ac28:	b.ne	41ac14 <_obstack_memory_used@@Base+0x5be0>  // b.any
  41ac2c:	mov	x13, x12
  41ac30:	b	41ac6c <_obstack_memory_used@@Base+0x5c38>
  41ac34:	ldr	x10, [x1, #72]
  41ac38:	ldr	x11, [x1, #40]
  41ac3c:	ldr	x13, [x1]
  41ac40:	add	x12, x10, #0x1
  41ac44:	str	x12, [x1, #72]
  41ac48:	add	x10, x10, x11
  41ac4c:	ldrb	w10, [x13, x10]
  41ac50:	b	41ab6c <_obstack_memory_used@@Base+0x5b38>
  41ac54:	ldr	x10, [x1, #8]
  41ac58:	add	x12, x11, #0x1
  41ac5c:	str	x12, [x1, #72]
  41ac60:	ldrb	w10, [x10, x11]
  41ac64:	b	41ab6c <_obstack_memory_used@@Base+0x5b38>
  41ac68:	mov	w13, #0x1                   	// #1
  41ac6c:	add	x12, x11, w13, sxtw
  41ac70:	str	x12, [x1, #72]
  41ac74:	b	41ab6c <_obstack_memory_used@@Base+0x5b38>
  41ac78:	mov	w8, #0x7                   	// #7
  41ac7c:	b	41ad04 <_obstack_memory_used@@Base+0x5cd0>
  41ac80:	add	x9, x12, #0x1
  41ac84:	str	x9, [x1, #72]
  41ac88:	ldr	x9, [x0, #8]
  41ac8c:	strb	wzr, [x9, w8, uxtw]
  41ac90:	ldrb	w8, [x2, #8]
  41ac94:	cmp	w8, #0x1e
  41ac98:	b.eq	41acb8 <_obstack_memory_used@@Base+0x5c84>  // b.none
  41ac9c:	cmp	w8, #0x1c
  41aca0:	b.eq	41acc0 <_obstack_memory_used@@Base+0x5c8c>  // b.none
  41aca4:	cmp	w8, #0x1a
  41aca8:	mov	w8, wzr
  41acac:	b.ne	41ad04 <_obstack_memory_used@@Base+0x5cd0>  // b.any
  41acb0:	mov	w9, #0x3                   	// #3
  41acb4:	b	41acc4 <_obstack_memory_used@@Base+0x5c90>
  41acb8:	mov	w9, #0x4                   	// #4
  41acbc:	b	41acc4 <_obstack_memory_used@@Base+0x5c90>
  41acc0:	mov	w9, #0x2                   	// #2
  41acc4:	mov	w8, wzr
  41acc8:	str	w9, [x0]
  41accc:	b	41ad04 <_obstack_memory_used@@Base+0x5cd0>
  41acd0:	tbnz	w5, #0, 41acf4 <_obstack_memory_used@@Base+0x5cc0>
  41acd4:	stp	x2, x0, [sp]
  41acd8:	add	x0, sp, #0x10
  41acdc:	mov	x2, x4
  41ace0:	bl	41a91c <_obstack_memory_used@@Base+0x58e8>
  41ace4:	ldrb	w8, [sp, #24]
  41ace8:	ldp	x2, x0, [sp]
  41acec:	cmp	w8, #0x15
  41acf0:	b.ne	41ad14 <_obstack_memory_used@@Base+0x5ce0>  // b.any
  41acf4:	str	wzr, [x0]
  41acf8:	ldrb	w9, [x2]
  41acfc:	mov	w8, wzr
  41ad00:	strb	w9, [x0, #8]
  41ad04:	ldp	x29, x30, [sp, #32]
  41ad08:	mov	w0, w8
  41ad0c:	add	sp, sp, #0x30
  41ad10:	ret
  41ad14:	mov	w8, #0xb                   	// #11
  41ad18:	b	41ad04 <_obstack_memory_used@@Base+0x5cd0>
  41ad1c:	stp	x29, x30, [sp, #-64]!
  41ad20:	stp	x24, x23, [sp, #16]
  41ad24:	stp	x22, x21, [sp, #32]
  41ad28:	stp	x20, x19, [sp, #48]
  41ad2c:	mov	x21, x4
  41ad30:	mov	x23, x3
  41ad34:	mov	x22, x2
  41ad38:	mov	x19, x1
  41ad3c:	mov	x20, x0
  41ad40:	mov	x29, sp
  41ad44:	tbz	w5, #22, 41ad78 <_obstack_memory_used@@Base+0x5d44>
  41ad48:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ad4c:	add	x1, x1, #0x21a
  41ad50:	mov	x0, x21
  41ad54:	bl	402750 <strcmp@plt>
  41ad58:	cbz	w0, 41ad70 <_obstack_memory_used@@Base+0x5d3c>
  41ad5c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ad60:	add	x1, x1, #0x220
  41ad64:	mov	x0, x21
  41ad68:	bl	402750 <strcmp@plt>
  41ad6c:	cbnz	w0, 41ad78 <_obstack_memory_used@@Base+0x5d44>
  41ad70:	adrp	x21, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ad74:	add	x21, x21, #0x226
  41ad78:	ldr	x8, [x23]
  41ad7c:	ldr	x9, [x22, #72]
  41ad80:	cmp	x8, x9
  41ad84:	b.eq	41b318 <_obstack_memory_used@@Base+0x62e4>  // b.none
  41ad88:	mov	x0, x21
  41ad8c:	bl	4023e0 <wctype@plt>
  41ad90:	ldr	x8, [x22, #72]
  41ad94:	ldr	x9, [x22, #24]
  41ad98:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ad9c:	add	x1, x1, #0x299
  41ada0:	add	x10, x8, #0x1
  41ada4:	str	x10, [x22, #72]
  41ada8:	str	x0, [x9, x8, lsl #3]
  41adac:	mov	x0, x21
  41adb0:	bl	402750 <strcmp@plt>
  41adb4:	cbz	w0, 41ae9c <_obstack_memory_used@@Base+0x5e68>
  41adb8:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41adbc:	add	x1, x1, #0x2ab
  41adc0:	mov	x0, x21
  41adc4:	bl	402750 <strcmp@plt>
  41adc8:	cbz	w0, 41aedc <_obstack_memory_used@@Base+0x5ea8>
  41adcc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41add0:	add	x1, x1, #0x220
  41add4:	mov	x0, x21
  41add8:	bl	402750 <strcmp@plt>
  41addc:	cbz	w0, 41af1c <_obstack_memory_used@@Base+0x5ee8>
  41ade0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ade4:	add	x1, x1, #0x28d
  41ade8:	mov	x0, x21
  41adec:	bl	402750 <strcmp@plt>
  41adf0:	cbz	w0, 41af5c <_obstack_memory_used@@Base+0x5f28>
  41adf4:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41adf8:	add	x1, x1, #0x226
  41adfc:	mov	x0, x21
  41ae00:	bl	402750 <strcmp@plt>
  41ae04:	cbz	w0, 41af9c <_obstack_memory_used@@Base+0x5f68>
  41ae08:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae0c:	add	x1, x1, #0x287
  41ae10:	mov	x0, x21
  41ae14:	bl	402750 <strcmp@plt>
  41ae18:	cbz	w0, 41afdc <_obstack_memory_used@@Base+0x5fa8>
  41ae1c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae20:	add	x1, x1, #0x29f
  41ae24:	mov	x0, x21
  41ae28:	bl	402750 <strcmp@plt>
  41ae2c:	cbz	w0, 41b030 <_obstack_memory_used@@Base+0x5ffc>
  41ae30:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae34:	add	x1, x1, #0x21a
  41ae38:	mov	x0, x21
  41ae3c:	bl	402750 <strcmp@plt>
  41ae40:	cbz	w0, 41b074 <_obstack_memory_used@@Base+0x6040>
  41ae44:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae48:	add	x1, x1, #0x2b1
  41ae4c:	mov	x0, x21
  41ae50:	bl	402750 <strcmp@plt>
  41ae54:	cbz	w0, 41b0b8 <_obstack_memory_used@@Base+0x6084>
  41ae58:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae5c:	add	x1, x1, #0x2a5
  41ae60:	mov	x0, x21
  41ae64:	bl	402750 <strcmp@plt>
  41ae68:	cbz	w0, 41b134 <_obstack_memory_used@@Base+0x6100>
  41ae6c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae70:	add	x1, x1, #0x293
  41ae74:	mov	x0, x21
  41ae78:	bl	402750 <strcmp@plt>
  41ae7c:	cbz	w0, 41b1b0 <_obstack_memory_used@@Base+0x617c>
  41ae80:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41ae84:	add	x1, x1, #0x286
  41ae88:	mov	x0, x21
  41ae8c:	bl	402750 <strcmp@plt>
  41ae90:	cbz	w0, 41b22c <_obstack_memory_used@@Base+0x61f8>
  41ae94:	mov	w0, #0x4                   	// #4
  41ae98:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41ae9c:	bl	402760 <__ctype_b_loc@plt>
  41aea0:	ldr	x8, [x0]
  41aea4:	mov	x9, xzr
  41aea8:	mov	w10, #0x1                   	// #1
  41aeac:	cbnz	x20, 41b0fc <_obstack_memory_used@@Base+0x60c8>
  41aeb0:	ldrh	w11, [x8, x9, lsl #1]
  41aeb4:	tbz	w11, #3, 41aecc <_obstack_memory_used@@Base+0x5e98>
  41aeb8:	ubfx	x11, x9, #6, #2
  41aebc:	ldr	x12, [x19, x11, lsl #3]
  41aec0:	lsl	x13, x10, x9
  41aec4:	orr	x12, x12, x13
  41aec8:	str	x12, [x19, x11, lsl #3]
  41aecc:	add	x9, x9, #0x1
  41aed0:	cmp	x9, #0x100
  41aed4:	b.ne	41aeb0 <_obstack_memory_used@@Base+0x5e7c>  // b.any
  41aed8:	b	41b018 <_obstack_memory_used@@Base+0x5fe4>
  41aedc:	bl	402760 <__ctype_b_loc@plt>
  41aee0:	ldr	x8, [x0]
  41aee4:	mov	x9, xzr
  41aee8:	mov	w10, #0x1                   	// #1
  41aeec:	cbnz	x20, 41b178 <_obstack_memory_used@@Base+0x6144>
  41aef0:	ldrh	w11, [x8, x9, lsl #1]
  41aef4:	tbz	w11, #1, 41af0c <_obstack_memory_used@@Base+0x5ed8>
  41aef8:	ubfx	x11, x9, #6, #2
  41aefc:	ldr	x12, [x19, x11, lsl #3]
  41af00:	lsl	x13, x10, x9
  41af04:	orr	x12, x12, x13
  41af08:	str	x12, [x19, x11, lsl #3]
  41af0c:	add	x9, x9, #0x1
  41af10:	cmp	x9, #0x100
  41af14:	b.ne	41aef0 <_obstack_memory_used@@Base+0x5ebc>  // b.any
  41af18:	b	41b018 <_obstack_memory_used@@Base+0x5fe4>
  41af1c:	bl	402760 <__ctype_b_loc@plt>
  41af20:	ldr	x8, [x0]
  41af24:	mov	x9, xzr
  41af28:	mov	w10, #0x1                   	// #1
  41af2c:	cbnz	x20, 41b1f4 <_obstack_memory_used@@Base+0x61c0>
  41af30:	ldrh	w11, [x8, x9, lsl #1]
  41af34:	tbz	w11, #9, 41af4c <_obstack_memory_used@@Base+0x5f18>
  41af38:	ubfx	x11, x9, #6, #2
  41af3c:	ldr	x12, [x19, x11, lsl #3]
  41af40:	lsl	x13, x10, x9
  41af44:	orr	x12, x12, x13
  41af48:	str	x12, [x19, x11, lsl #3]
  41af4c:	add	x9, x9, #0x1
  41af50:	cmp	x9, #0x100
  41af54:	b.ne	41af30 <_obstack_memory_used@@Base+0x5efc>  // b.any
  41af58:	b	41b018 <_obstack_memory_used@@Base+0x5fe4>
  41af5c:	bl	402760 <__ctype_b_loc@plt>
  41af60:	ldr	x8, [x0]
  41af64:	mov	x9, xzr
  41af68:	mov	w10, #0x1                   	// #1
  41af6c:	cbnz	x20, 41b270 <_obstack_memory_used@@Base+0x623c>
  41af70:	ldrh	w11, [x8, x9, lsl #1]
  41af74:	tbz	w11, #13, 41af8c <_obstack_memory_used@@Base+0x5f58>
  41af78:	ubfx	x11, x9, #6, #2
  41af7c:	ldr	x12, [x19, x11, lsl #3]
  41af80:	lsl	x13, x10, x9
  41af84:	orr	x12, x12, x13
  41af88:	str	x12, [x19, x11, lsl #3]
  41af8c:	add	x9, x9, #0x1
  41af90:	cmp	x9, #0x100
  41af94:	b.ne	41af70 <_obstack_memory_used@@Base+0x5f3c>  // b.any
  41af98:	b	41b018 <_obstack_memory_used@@Base+0x5fe4>
  41af9c:	bl	402760 <__ctype_b_loc@plt>
  41afa0:	ldr	x8, [x0]
  41afa4:	mov	x9, xzr
  41afa8:	mov	w10, #0x1                   	// #1
  41afac:	cbnz	x20, 41b2a8 <_obstack_memory_used@@Base+0x6274>
  41afb0:	ldrh	w11, [x8, x9, lsl #1]
  41afb4:	tbz	w11, #10, 41afcc <_obstack_memory_used@@Base+0x5f98>
  41afb8:	ubfx	x11, x9, #6, #2
  41afbc:	ldr	x12, [x19, x11, lsl #3]
  41afc0:	lsl	x13, x10, x9
  41afc4:	orr	x12, x12, x13
  41afc8:	str	x12, [x19, x11, lsl #3]
  41afcc:	add	x9, x9, #0x1
  41afd0:	cmp	x9, #0x100
  41afd4:	b.ne	41afb0 <_obstack_memory_used@@Base+0x5f7c>  // b.any
  41afd8:	b	41b018 <_obstack_memory_used@@Base+0x5fe4>
  41afdc:	bl	402760 <__ctype_b_loc@plt>
  41afe0:	ldr	x8, [x0]
  41afe4:	mov	x9, xzr
  41afe8:	mov	w10, #0x1                   	// #1
  41afec:	cbnz	x20, 41b2e0 <_obstack_memory_used@@Base+0x62ac>
  41aff0:	ldrh	w11, [x8, x9, lsl #1]
  41aff4:	tbz	w11, #11, 41b00c <_obstack_memory_used@@Base+0x5fd8>
  41aff8:	ubfx	x11, x9, #6, #2
  41affc:	ldr	x12, [x19, x11, lsl #3]
  41b000:	lsl	x13, x10, x9
  41b004:	orr	x12, x12, x13
  41b008:	str	x12, [x19, x11, lsl #3]
  41b00c:	add	x9, x9, #0x1
  41b010:	cmp	x9, #0x100
  41b014:	b.ne	41aff0 <_obstack_memory_used@@Base+0x5fbc>  // b.any
  41b018:	mov	w0, wzr
  41b01c:	ldp	x20, x19, [sp, #48]
  41b020:	ldp	x22, x21, [sp, #32]
  41b024:	ldp	x24, x23, [sp, #16]
  41b028:	ldp	x29, x30, [sp], #64
  41b02c:	ret
  41b030:	bl	402760 <__ctype_b_loc@plt>
  41b034:	ldr	x8, [x0]
  41b038:	mov	x9, xzr
  41b03c:	mov	w10, #0x1                   	// #1
  41b040:	cbnz	x20, 41b33c <_obstack_memory_used@@Base+0x6308>
  41b044:	ldrh	w11, [x8, x9, lsl #1]
  41b048:	tbz	w11, #14, 41b060 <_obstack_memory_used@@Base+0x602c>
  41b04c:	ubfx	x11, x9, #6, #2
  41b050:	ldr	x12, [x19, x11, lsl #3]
  41b054:	lsl	x13, x10, x9
  41b058:	orr	x12, x12, x13
  41b05c:	str	x12, [x19, x11, lsl #3]
  41b060:	add	x9, x9, #0x1
  41b064:	cmp	x9, #0x100
  41b068:	mov	w0, wzr
  41b06c:	b.ne	41b044 <_obstack_memory_used@@Base+0x6010>  // b.any
  41b070:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b074:	bl	402760 <__ctype_b_loc@plt>
  41b078:	ldr	x8, [x0]
  41b07c:	mov	x9, xzr
  41b080:	mov	w10, #0x1                   	// #1
  41b084:	cbnz	x20, 41b374 <_obstack_memory_used@@Base+0x6340>
  41b088:	ldrh	w11, [x8, x9, lsl #1]
  41b08c:	tbz	w11, #8, 41b0a4 <_obstack_memory_used@@Base+0x6070>
  41b090:	ubfx	x11, x9, #6, #2
  41b094:	ldr	x12, [x19, x11, lsl #3]
  41b098:	lsl	x13, x10, x9
  41b09c:	orr	x12, x12, x13
  41b0a0:	str	x12, [x19, x11, lsl #3]
  41b0a4:	add	x9, x9, #0x1
  41b0a8:	cmp	x9, #0x100
  41b0ac:	mov	w0, wzr
  41b0b0:	b.ne	41b088 <_obstack_memory_used@@Base+0x6054>  // b.any
  41b0b4:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b0b8:	bl	402760 <__ctype_b_loc@plt>
  41b0bc:	ldr	x8, [x0]
  41b0c0:	mov	x9, xzr
  41b0c4:	mov	w10, #0x1                   	// #1
  41b0c8:	cbnz	x20, 41b3ac <_obstack_memory_used@@Base+0x6378>
  41b0cc:	ldrh	w11, [x8, x9, lsl #1]
  41b0d0:	tbz	w11, #0, 41b0e8 <_obstack_memory_used@@Base+0x60b4>
  41b0d4:	ubfx	x11, x9, #6, #2
  41b0d8:	ldr	x12, [x19, x11, lsl #3]
  41b0dc:	lsl	x13, x10, x9
  41b0e0:	orr	x12, x12, x13
  41b0e4:	str	x12, [x19, x11, lsl #3]
  41b0e8:	add	x9, x9, #0x1
  41b0ec:	cmp	x9, #0x100
  41b0f0:	mov	w0, wzr
  41b0f4:	b.ne	41b0cc <_obstack_memory_used@@Base+0x6098>  // b.any
  41b0f8:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b0fc:	ldrh	w11, [x8, x9, lsl #1]
  41b100:	tbz	w11, #3, 41b120 <_obstack_memory_used@@Base+0x60ec>
  41b104:	ldrb	w11, [x20, x9]
  41b108:	lsr	x12, x11, #3
  41b10c:	and	x12, x12, #0x18
  41b110:	ldr	x13, [x19, x12]
  41b114:	lsl	x11, x10, x11
  41b118:	orr	x11, x11, x13
  41b11c:	str	x11, [x19, x12]
  41b120:	add	x9, x9, #0x1
  41b124:	cmp	x9, #0x100
  41b128:	mov	w0, wzr
  41b12c:	b.ne	41b0fc <_obstack_memory_used@@Base+0x60c8>  // b.any
  41b130:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b134:	bl	402760 <__ctype_b_loc@plt>
  41b138:	ldr	x8, [x0]
  41b13c:	mov	x9, xzr
  41b140:	mov	w10, #0x1                   	// #1
  41b144:	cbnz	x20, 41b3e4 <_obstack_memory_used@@Base+0x63b0>
  41b148:	ldrsh	w11, [x8, x9, lsl #1]
  41b14c:	tbz	w11, #31, 41b164 <_obstack_memory_used@@Base+0x6130>
  41b150:	ubfx	x11, x9, #6, #2
  41b154:	ldr	x12, [x19, x11, lsl #3]
  41b158:	lsl	x13, x10, x9
  41b15c:	orr	x12, x12, x13
  41b160:	str	x12, [x19, x11, lsl #3]
  41b164:	add	x9, x9, #0x1
  41b168:	cmp	x9, #0x100
  41b16c:	mov	w0, wzr
  41b170:	b.ne	41b148 <_obstack_memory_used@@Base+0x6114>  // b.any
  41b174:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b178:	ldrh	w11, [x8, x9, lsl #1]
  41b17c:	tbz	w11, #1, 41b19c <_obstack_memory_used@@Base+0x6168>
  41b180:	ldrb	w11, [x20, x9]
  41b184:	lsr	x12, x11, #3
  41b188:	and	x12, x12, #0x18
  41b18c:	ldr	x13, [x19, x12]
  41b190:	lsl	x11, x10, x11
  41b194:	orr	x11, x11, x13
  41b198:	str	x11, [x19, x12]
  41b19c:	add	x9, x9, #0x1
  41b1a0:	cmp	x9, #0x100
  41b1a4:	mov	w0, wzr
  41b1a8:	b.ne	41b178 <_obstack_memory_used@@Base+0x6144>  // b.any
  41b1ac:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b1b0:	bl	402760 <__ctype_b_loc@plt>
  41b1b4:	ldr	x8, [x0]
  41b1b8:	mov	x9, xzr
  41b1bc:	mov	w10, #0x1                   	// #1
  41b1c0:	cbnz	x20, 41b41c <_obstack_memory_used@@Base+0x63e8>
  41b1c4:	ldrh	w11, [x8, x9, lsl #1]
  41b1c8:	tbz	w11, #2, 41b1e0 <_obstack_memory_used@@Base+0x61ac>
  41b1cc:	ubfx	x11, x9, #6, #2
  41b1d0:	ldr	x12, [x19, x11, lsl #3]
  41b1d4:	lsl	x13, x10, x9
  41b1d8:	orr	x12, x12, x13
  41b1dc:	str	x12, [x19, x11, lsl #3]
  41b1e0:	add	x9, x9, #0x1
  41b1e4:	cmp	x9, #0x100
  41b1e8:	mov	w0, wzr
  41b1ec:	b.ne	41b1c4 <_obstack_memory_used@@Base+0x6190>  // b.any
  41b1f0:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b1f4:	ldrh	w11, [x8, x9, lsl #1]
  41b1f8:	tbz	w11, #9, 41b218 <_obstack_memory_used@@Base+0x61e4>
  41b1fc:	ldrb	w11, [x20, x9]
  41b200:	lsr	x12, x11, #3
  41b204:	and	x12, x12, #0x18
  41b208:	ldr	x13, [x19, x12]
  41b20c:	lsl	x11, x10, x11
  41b210:	orr	x11, x11, x13
  41b214:	str	x11, [x19, x12]
  41b218:	add	x9, x9, #0x1
  41b21c:	cmp	x9, #0x100
  41b220:	mov	w0, wzr
  41b224:	b.ne	41b1f4 <_obstack_memory_used@@Base+0x61c0>  // b.any
  41b228:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b22c:	bl	402760 <__ctype_b_loc@plt>
  41b230:	ldr	x8, [x0]
  41b234:	mov	x9, xzr
  41b238:	mov	w10, #0x1                   	// #1
  41b23c:	cbnz	x20, 41b454 <_obstack_memory_used@@Base+0x6420>
  41b240:	ldrh	w11, [x8, x9, lsl #1]
  41b244:	tbz	w11, #12, 41b25c <_obstack_memory_used@@Base+0x6228>
  41b248:	ubfx	x11, x9, #6, #2
  41b24c:	ldr	x12, [x19, x11, lsl #3]
  41b250:	lsl	x13, x10, x9
  41b254:	orr	x12, x12, x13
  41b258:	str	x12, [x19, x11, lsl #3]
  41b25c:	add	x9, x9, #0x1
  41b260:	cmp	x9, #0x100
  41b264:	mov	w0, wzr
  41b268:	b.ne	41b240 <_obstack_memory_used@@Base+0x620c>  // b.any
  41b26c:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b270:	ldrh	w11, [x8, x9, lsl #1]
  41b274:	tbz	w11, #13, 41b294 <_obstack_memory_used@@Base+0x6260>
  41b278:	ldrb	w11, [x20, x9]
  41b27c:	lsr	x12, x11, #3
  41b280:	and	x12, x12, #0x18
  41b284:	ldr	x13, [x19, x12]
  41b288:	lsl	x11, x10, x11
  41b28c:	orr	x11, x11, x13
  41b290:	str	x11, [x19, x12]
  41b294:	add	x9, x9, #0x1
  41b298:	cmp	x9, #0x100
  41b29c:	mov	w0, wzr
  41b2a0:	b.ne	41b270 <_obstack_memory_used@@Base+0x623c>  // b.any
  41b2a4:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b2a8:	ldrh	w11, [x8, x9, lsl #1]
  41b2ac:	tbz	w11, #10, 41b2cc <_obstack_memory_used@@Base+0x6298>
  41b2b0:	ldrb	w11, [x20, x9]
  41b2b4:	lsr	x12, x11, #3
  41b2b8:	and	x12, x12, #0x18
  41b2bc:	ldr	x13, [x19, x12]
  41b2c0:	lsl	x11, x10, x11
  41b2c4:	orr	x11, x11, x13
  41b2c8:	str	x11, [x19, x12]
  41b2cc:	add	x9, x9, #0x1
  41b2d0:	cmp	x9, #0x100
  41b2d4:	mov	w0, wzr
  41b2d8:	b.ne	41b2a8 <_obstack_memory_used@@Base+0x6274>  // b.any
  41b2dc:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b2e0:	ldrh	w11, [x8, x9, lsl #1]
  41b2e4:	tbz	w11, #11, 41b304 <_obstack_memory_used@@Base+0x62d0>
  41b2e8:	ldrb	w11, [x20, x9]
  41b2ec:	lsr	x12, x11, #3
  41b2f0:	and	x12, x12, #0x18
  41b2f4:	ldr	x13, [x19, x12]
  41b2f8:	lsl	x11, x10, x11
  41b2fc:	orr	x11, x11, x13
  41b300:	str	x11, [x19, x12]
  41b304:	add	x9, x9, #0x1
  41b308:	cmp	x9, #0x100
  41b30c:	mov	w0, wzr
  41b310:	b.ne	41b2e0 <_obstack_memory_used@@Base+0x62ac>  // b.any
  41b314:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b318:	ldr	x0, [x22, #24]
  41b31c:	mov	w24, #0x1                   	// #1
  41b320:	bfi	x24, x8, #1, #63
  41b324:	lsl	x1, x24, #3
  41b328:	bl	402610 <realloc@plt>
  41b32c:	cbz	x0, 41b48c <_obstack_memory_used@@Base+0x6458>
  41b330:	str	x0, [x22, #24]
  41b334:	str	x24, [x23]
  41b338:	b	41ad88 <_obstack_memory_used@@Base+0x5d54>
  41b33c:	ldrh	w11, [x8, x9, lsl #1]
  41b340:	tbz	w11, #14, 41b360 <_obstack_memory_used@@Base+0x632c>
  41b344:	ldrb	w11, [x20, x9]
  41b348:	lsr	x12, x11, #3
  41b34c:	and	x12, x12, #0x18
  41b350:	ldr	x13, [x19, x12]
  41b354:	lsl	x11, x10, x11
  41b358:	orr	x11, x11, x13
  41b35c:	str	x11, [x19, x12]
  41b360:	add	x9, x9, #0x1
  41b364:	cmp	x9, #0x100
  41b368:	mov	w0, wzr
  41b36c:	b.ne	41b33c <_obstack_memory_used@@Base+0x6308>  // b.any
  41b370:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b374:	ldrh	w11, [x8, x9, lsl #1]
  41b378:	tbz	w11, #8, 41b398 <_obstack_memory_used@@Base+0x6364>
  41b37c:	ldrb	w11, [x20, x9]
  41b380:	lsr	x12, x11, #3
  41b384:	and	x12, x12, #0x18
  41b388:	ldr	x13, [x19, x12]
  41b38c:	lsl	x11, x10, x11
  41b390:	orr	x11, x11, x13
  41b394:	str	x11, [x19, x12]
  41b398:	add	x9, x9, #0x1
  41b39c:	cmp	x9, #0x100
  41b3a0:	mov	w0, wzr
  41b3a4:	b.ne	41b374 <_obstack_memory_used@@Base+0x6340>  // b.any
  41b3a8:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b3ac:	ldrh	w11, [x8, x9, lsl #1]
  41b3b0:	tbz	w11, #0, 41b3d0 <_obstack_memory_used@@Base+0x639c>
  41b3b4:	ldrb	w11, [x20, x9]
  41b3b8:	lsr	x12, x11, #3
  41b3bc:	and	x12, x12, #0x18
  41b3c0:	ldr	x13, [x19, x12]
  41b3c4:	lsl	x11, x10, x11
  41b3c8:	orr	x11, x11, x13
  41b3cc:	str	x11, [x19, x12]
  41b3d0:	add	x9, x9, #0x1
  41b3d4:	cmp	x9, #0x100
  41b3d8:	mov	w0, wzr
  41b3dc:	b.ne	41b3ac <_obstack_memory_used@@Base+0x6378>  // b.any
  41b3e0:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b3e4:	ldrsh	w11, [x8, x9, lsl #1]
  41b3e8:	tbz	w11, #31, 41b408 <_obstack_memory_used@@Base+0x63d4>
  41b3ec:	ldrb	w11, [x20, x9]
  41b3f0:	lsr	x12, x11, #3
  41b3f4:	and	x12, x12, #0x18
  41b3f8:	ldr	x13, [x19, x12]
  41b3fc:	lsl	x11, x10, x11
  41b400:	orr	x11, x11, x13
  41b404:	str	x11, [x19, x12]
  41b408:	add	x9, x9, #0x1
  41b40c:	cmp	x9, #0x100
  41b410:	mov	w0, wzr
  41b414:	b.ne	41b3e4 <_obstack_memory_used@@Base+0x63b0>  // b.any
  41b418:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b41c:	ldrh	w11, [x8, x9, lsl #1]
  41b420:	tbz	w11, #2, 41b440 <_obstack_memory_used@@Base+0x640c>
  41b424:	ldrb	w11, [x20, x9]
  41b428:	lsr	x12, x11, #3
  41b42c:	and	x12, x12, #0x18
  41b430:	ldr	x13, [x19, x12]
  41b434:	lsl	x11, x10, x11
  41b438:	orr	x11, x11, x13
  41b43c:	str	x11, [x19, x12]
  41b440:	add	x9, x9, #0x1
  41b444:	cmp	x9, #0x100
  41b448:	mov	w0, wzr
  41b44c:	b.ne	41b41c <_obstack_memory_used@@Base+0x63e8>  // b.any
  41b450:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b454:	ldrh	w11, [x8, x9, lsl #1]
  41b458:	tbz	w11, #12, 41b478 <_obstack_memory_used@@Base+0x6444>
  41b45c:	ldrb	w11, [x20, x9]
  41b460:	lsr	x12, x11, #3
  41b464:	and	x12, x12, #0x18
  41b468:	ldr	x13, [x19, x12]
  41b46c:	lsl	x11, x10, x11
  41b470:	orr	x11, x11, x13
  41b474:	str	x11, [x19, x12]
  41b478:	add	x9, x9, #0x1
  41b47c:	cmp	x9, #0x100
  41b480:	mov	w0, wzr
  41b484:	b.ne	41b454 <_obstack_memory_used@@Base+0x6420>  // b.any
  41b488:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b48c:	mov	w0, #0xc                   	// #12
  41b490:	b	41b01c <_obstack_memory_used@@Base+0x5fe8>
  41b494:	stp	x29, x30, [sp, #-80]!
  41b498:	str	x25, [sp, #16]
  41b49c:	stp	x24, x23, [sp, #32]
  41b4a0:	stp	x22, x21, [sp, #48]
  41b4a4:	stp	x20, x19, [sp, #64]
  41b4a8:	mov	x19, x2
  41b4ac:	mov	x20, x1
  41b4b0:	mov	x21, x0
  41b4b4:	mov	x9, #0xffffffffffffffff    	// #-1
  41b4b8:	mov	w23, #0xa                   	// #10
  41b4bc:	mov	w24, #0x8030                	// #32816
  41b4c0:	mov	w25, #0x8000                	// #32768
  41b4c4:	mov	x29, sp
  41b4c8:	mov	x0, x20
  41b4cc:	mov	x1, x21
  41b4d0:	mov	x2, x19
  41b4d4:	mov	x22, x9
  41b4d8:	bl	418c5c <_obstack_memory_used@@Base+0x3c28>
  41b4dc:	ldr	x8, [x21, #72]
  41b4e0:	add	x8, x8, w0, sxtw
  41b4e4:	str	x8, [x21, #72]
  41b4e8:	ldrb	w10, [x20, #8]
  41b4ec:	cmp	w10, #0x18
  41b4f0:	b.eq	41b558 <_obstack_memory_used@@Base+0x6524>  // b.none
  41b4f4:	cmp	w10, #0x2
  41b4f8:	b.eq	41b554 <_obstack_memory_used@@Base+0x6520>  // b.none
  41b4fc:	ldrb	w8, [x20]
  41b500:	cmp	w8, #0x2c
  41b504:	b.eq	41b558 <_obstack_memory_used@@Base+0x6524>  // b.none
  41b508:	cmp	w8, #0x30
  41b50c:	mov	x9, #0xfffffffffffffffe    	// #-2
  41b510:	b.cc	41b4c8 <_obstack_memory_used@@Base+0x6494>  // b.lo, b.ul, b.last
  41b514:	cmp	w10, #0x1
  41b518:	b.ne	41b4c8 <_obstack_memory_used@@Base+0x6494>  // b.any
  41b51c:	cmn	x22, #0x2
  41b520:	mov	x9, #0xfffffffffffffffe    	// #-2
  41b524:	b.eq	41b4c8 <_obstack_memory_used@@Base+0x6494>  // b.none
  41b528:	cmp	w8, #0x39
  41b52c:	b.hi	41b4c8 <_obstack_memory_used@@Base+0x6494>  // b.pmore
  41b530:	cmn	x22, #0x1
  41b534:	b.eq	41b54c <_obstack_memory_used@@Base+0x6518>  // b.none
  41b538:	madd	x8, x22, x23, x8
  41b53c:	sub	x9, x8, #0x30
  41b540:	cmp	x8, x24
  41b544:	csel	x9, x25, x9, gt
  41b548:	b	41b4c8 <_obstack_memory_used@@Base+0x6494>
  41b54c:	sub	x9, x8, #0x30
  41b550:	b	41b4c8 <_obstack_memory_used@@Base+0x6494>
  41b554:	mov	x22, #0xfffffffffffffffe    	// #-2
  41b558:	mov	x0, x22
  41b55c:	ldp	x20, x19, [sp, #64]
  41b560:	ldp	x22, x21, [sp, #48]
  41b564:	ldp	x24, x23, [sp, #32]
  41b568:	ldr	x25, [sp, #16]
  41b56c:	ldp	x29, x30, [sp], #80
  41b570:	ret
  41b574:	stp	x29, x30, [sp, #-64]!
  41b578:	str	x23, [sp, #16]
  41b57c:	stp	x22, x21, [sp, #32]
  41b580:	stp	x20, x19, [sp, #48]
  41b584:	mov	x3, x0
  41b588:	ldr	x22, [x3], #40
  41b58c:	mov	x21, x0
  41b590:	mov	x19, x1
  41b594:	mov	x0, x1
  41b598:	mov	x1, xzr
  41b59c:	mov	x2, xzr
  41b5a0:	mov	x29, sp
  41b5a4:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41b5a8:	mov	x20, x0
  41b5ac:	str	x0, [x29, #24]
  41b5b0:	cbz	x0, 41b630 <_obstack_memory_used@@Base+0x65fc>
  41b5b4:	add	x23, x29, #0x18
  41b5b8:	mov	x0, x20
  41b5bc:	str	x22, [x0]
  41b5c0:	ldr	x8, [x23]
  41b5c4:	ldr	w9, [x8, #48]
  41b5c8:	orr	w9, w9, #0x40000
  41b5cc:	str	w9, [x8, #48]
  41b5d0:	ldr	x8, [x21, #8]
  41b5d4:	ldr	x22, [x23]
  41b5d8:	cbz	x8, 41b5f4 <_obstack_memory_used@@Base+0x65c0>
  41b5dc:	add	x23, x22, #0x8
  41b5e0:	mov	x21, x8
  41b5e4:	b	41b610 <_obstack_memory_used@@Base+0x65dc>
  41b5e8:	ldr	x21, [x8]
  41b5ec:	ldr	x22, [x22]
  41b5f0:	cbz	x21, 41b630 <_obstack_memory_used@@Base+0x65fc>
  41b5f4:	mov	x9, x8
  41b5f8:	mov	x8, x21
  41b5fc:	ldr	x21, [x21, #16]
  41b600:	cmp	x21, x9
  41b604:	b.eq	41b5e8 <_obstack_memory_used@@Base+0x65b4>  // b.none
  41b608:	cbz	x21, 41b5e8 <_obstack_memory_used@@Base+0x65b4>
  41b60c:	add	x23, x22, #0x10
  41b610:	add	x3, x21, #0x28
  41b614:	mov	x0, x19
  41b618:	mov	x1, xzr
  41b61c:	mov	x2, xzr
  41b620:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41b624:	str	x0, [x23]
  41b628:	cbnz	x0, 41b5bc <_obstack_memory_used@@Base+0x6588>
  41b62c:	mov	x20, xzr
  41b630:	mov	x0, x20
  41b634:	ldp	x20, x19, [sp, #48]
  41b638:	ldp	x22, x21, [sp, #32]
  41b63c:	ldr	x23, [sp, #16]
  41b640:	ldp	x29, x30, [sp], #64
  41b644:	ret
  41b648:	stp	x29, x30, [sp, #-48]!
  41b64c:	stp	x22, x21, [sp, #16]
  41b650:	mov	x21, x0
  41b654:	stp	x20, x19, [sp, #32]
  41b658:	mov	x20, x1
  41b65c:	mov	x0, x2
  41b660:	mov	x1, x21
  41b664:	mov	x29, sp
  41b668:	mov	x19, x2
  41b66c:	blr	x20
  41b670:	cbnz	w0, 41b6bc <_obstack_memory_used@@Base+0x6688>
  41b674:	ldr	x22, [x21, #8]
  41b678:	cbz	x22, 41b694 <_obstack_memory_used@@Base+0x6660>
  41b67c:	mov	x0, x19
  41b680:	mov	x1, x22
  41b684:	blr	x20
  41b688:	mov	x21, x22
  41b68c:	cbz	w0, 41b674 <_obstack_memory_used@@Base+0x6640>
  41b690:	b	41b6bc <_obstack_memory_used@@Base+0x6688>
  41b694:	mov	x8, xzr
  41b698:	ldr	x22, [x21, #16]
  41b69c:	mov	x9, x8
  41b6a0:	mov	x8, x21
  41b6a4:	cmp	x22, x9
  41b6a8:	b.eq	41b6b0 <_obstack_memory_used@@Base+0x667c>  // b.none
  41b6ac:	cbnz	x22, 41b67c <_obstack_memory_used@@Base+0x6648>
  41b6b0:	ldr	x21, [x8]
  41b6b4:	cbnz	x21, 41b698 <_obstack_memory_used@@Base+0x6664>
  41b6b8:	mov	w0, wzr
  41b6bc:	ldp	x20, x19, [sp, #32]
  41b6c0:	ldp	x22, x21, [sp, #16]
  41b6c4:	ldp	x29, x30, [sp], #48
  41b6c8:	ret
  41b6cc:	ldrb	w8, [x1, #48]
  41b6d0:	cmp	w8, #0x11
  41b6d4:	b.eq	41b710 <_obstack_memory_used@@Base+0x66dc>  // b.none
  41b6d8:	cmp	w8, #0x4
  41b6dc:	b.ne	41b764 <_obstack_memory_used@@Base+0x6730>  // b.any
  41b6e0:	ldr	x8, [x0, #224]
  41b6e4:	cbz	x8, 41b764 <_obstack_memory_used@@Base+0x6730>
  41b6e8:	ldr	x9, [x1, #40]
  41b6ec:	mov	w10, #0x1                   	// #1
  41b6f0:	sbfiz	x9, x9, #3, #32
  41b6f4:	ldr	x8, [x8, x9]
  41b6f8:	str	x8, [x1, #40]
  41b6fc:	ldr	x9, [x0, #160]
  41b700:	lsl	w8, w10, w8
  41b704:	sxtw	x8, w8
  41b708:	orr	x8, x9, x8
  41b70c:	b	41b760 <_obstack_memory_used@@Base+0x672c>
  41b710:	ldr	x8, [x1, #8]
  41b714:	cbz	x8, 41b764 <_obstack_memory_used@@Base+0x6730>
  41b718:	ldrb	w9, [x8, #48]
  41b71c:	cmp	w9, #0x11
  41b720:	b.ne	41b764 <_obstack_memory_used@@Base+0x6730>  // b.any
  41b724:	ldr	x9, [x8, #8]
  41b728:	ldr	x8, [x8, #40]
  41b72c:	str	x9, [x1, #8]
  41b730:	cbz	x9, 41b738 <_obstack_memory_used@@Base+0x6704>
  41b734:	str	x1, [x9]
  41b738:	ldr	x9, [x0, #224]
  41b73c:	ldr	x10, [x1, #40]
  41b740:	cmp	x8, #0x3f
  41b744:	ldr	x10, [x9, x10, lsl #3]
  41b748:	str	x10, [x9, x8, lsl #3]
  41b74c:	b.gt	41b764 <_obstack_memory_used@@Base+0x6730>
  41b750:	ldr	x9, [x0, #160]
  41b754:	mov	w10, #0x1                   	// #1
  41b758:	lsl	x8, x10, x8
  41b75c:	bic	x8, x9, x8
  41b760:	str	x8, [x0, #160]
  41b764:	mov	w0, wzr
  41b768:	ret
  41b76c:	sub	sp, sp, #0x30
  41b770:	stp	x29, x30, [sp, #16]
  41b774:	add	x29, sp, #0x10
  41b778:	stp	x20, x19, [sp, #32]
  41b77c:	stur	wzr, [x29, #-4]
  41b780:	ldr	x2, [x1, #8]
  41b784:	mov	x19, x1
  41b788:	mov	x20, x0
  41b78c:	cbz	x2, 41b7b4 <_obstack_memory_used@@Base+0x6780>
  41b790:	ldrb	w8, [x2, #48]
  41b794:	cmp	w8, #0x11
  41b798:	b.ne	41b7b4 <_obstack_memory_used@@Base+0x6780>  // b.any
  41b79c:	sub	x0, x29, #0x4
  41b7a0:	mov	x1, x20
  41b7a4:	bl	41ba90 <_obstack_memory_used@@Base+0x6a5c>
  41b7a8:	str	x0, [x19, #8]
  41b7ac:	cbz	x0, 41b7b4 <_obstack_memory_used@@Base+0x6780>
  41b7b0:	str	x19, [x0]
  41b7b4:	ldr	x2, [x19, #16]
  41b7b8:	cbz	x2, 41b7e0 <_obstack_memory_used@@Base+0x67ac>
  41b7bc:	ldrb	w8, [x2, #48]
  41b7c0:	cmp	w8, #0x11
  41b7c4:	b.ne	41b7e0 <_obstack_memory_used@@Base+0x67ac>  // b.any
  41b7c8:	sub	x0, x29, #0x4
  41b7cc:	mov	x1, x20
  41b7d0:	bl	41ba90 <_obstack_memory_used@@Base+0x6a5c>
  41b7d4:	str	x0, [x19, #16]
  41b7d8:	cbz	x0, 41b7e0 <_obstack_memory_used@@Base+0x67ac>
  41b7dc:	str	x19, [x0]
  41b7e0:	ldur	w0, [x29, #-4]
  41b7e4:	ldp	x20, x19, [sp, #32]
  41b7e8:	ldp	x29, x30, [sp, #16]
  41b7ec:	add	sp, sp, #0x30
  41b7f0:	ret
  41b7f4:	stp	x29, x30, [sp, #-32]!
  41b7f8:	stp	x20, x19, [sp, #16]
  41b7fc:	ldrb	w8, [x1, #48]
  41b800:	mov	x19, x1
  41b804:	mov	x29, sp
  41b808:	cmp	w8, #0x10
  41b80c:	b.ne	41b82c <_obstack_memory_used@@Base+0x67f8>  // b.any
  41b810:	ldr	x8, [x19, #8]
  41b814:	mov	w0, wzr
  41b818:	ldr	x9, [x8, #24]
  41b81c:	str	x9, [x19, #24]
  41b820:	ldr	x8, [x8, #56]
  41b824:	str	x8, [x19, #56]
  41b828:	b	41b87c <_obstack_memory_used@@Base+0x6848>
  41b82c:	ldp	x1, x2, [x19, #40]
  41b830:	mov	x20, x0
  41b834:	str	x19, [x19, #24]
  41b838:	bl	41bbec <_obstack_memory_used@@Base+0x6bb8>
  41b83c:	cmn	x0, #0x1
  41b840:	str	x0, [x19, #56]
  41b844:	b.eq	41b888 <_obstack_memory_used@@Base+0x6854>  // b.none
  41b848:	ldrb	w9, [x19, #48]
  41b84c:	cmp	w9, #0xc
  41b850:	b.ne	41b878 <_obstack_memory_used@@Base+0x6844>  // b.any
  41b854:	ldr	x9, [x20]
  41b858:	mov	x8, x0
  41b85c:	ldr	w10, [x19, #40]
  41b860:	mov	w0, wzr
  41b864:	add	x8, x9, x8, lsl #4
  41b868:	ldr	w9, [x8, #8]
  41b86c:	bfi	w9, w10, #8, #10
  41b870:	str	w9, [x8, #8]
  41b874:	b	41b87c <_obstack_memory_used@@Base+0x6848>
  41b878:	mov	w0, wzr
  41b87c:	ldp	x20, x19, [sp, #16]
  41b880:	ldp	x29, x30, [sp], #32
  41b884:	ret
  41b888:	mov	w0, #0xc                   	// #12
  41b88c:	b	41b87c <_obstack_memory_used@@Base+0x6848>
  41b890:	ldrb	w8, [x1, #48]
  41b894:	cmp	w8, #0x10
  41b898:	b.eq	41b8b0 <_obstack_memory_used@@Base+0x687c>  // b.none
  41b89c:	cmp	w8, #0xb
  41b8a0:	b.ne	41b8c0 <_obstack_memory_used@@Base+0x688c>  // b.any
  41b8a4:	ldr	x8, [x1, #8]
  41b8a8:	str	x1, [x8, #32]
  41b8ac:	b	41b8e0 <_obstack_memory_used@@Base+0x68ac>
  41b8b0:	ldp	x9, x8, [x1, #8]
  41b8b4:	ldr	x10, [x8, #24]
  41b8b8:	str	x10, [x9, #32]
  41b8bc:	b	41b8d8 <_obstack_memory_used@@Base+0x68a4>
  41b8c0:	ldr	x8, [x1, #8]
  41b8c4:	cbz	x8, 41b8d0 <_obstack_memory_used@@Base+0x689c>
  41b8c8:	ldr	x9, [x1, #32]
  41b8cc:	str	x9, [x8, #32]
  41b8d0:	ldr	x8, [x1, #16]
  41b8d4:	cbz	x8, 41b8e0 <_obstack_memory_used@@Base+0x68ac>
  41b8d8:	ldr	x9, [x1, #32]
  41b8dc:	str	x9, [x8, #32]
  41b8e0:	mov	w0, wzr
  41b8e4:	ret
  41b8e8:	stp	x29, x30, [sp, #-64]!
  41b8ec:	stp	x22, x21, [sp, #32]
  41b8f0:	stp	x20, x19, [sp, #48]
  41b8f4:	ldr	w8, [x1, #48]
  41b8f8:	ldr	x19, [x1, #56]
  41b8fc:	str	x23, [sp, #16]
  41b900:	mov	x29, sp
  41b904:	and	w8, w8, #0xff
  41b908:	sub	w9, w8, #0x2
  41b90c:	cmp	w9, #0xe
  41b910:	mov	x8, x0
  41b914:	b.hi	41b9fc <_obstack_memory_used@@Base+0x69c8>  // b.pmore
  41b918:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41b91c:	add	x10, x10, #0xa91
  41b920:	adr	x11, 41b934 <_obstack_memory_used@@Base+0x6900>
  41b924:	ldrb	w12, [x10, x9]
  41b928:	add	x11, x11, x12, lsl #2
  41b92c:	mov	w0, wzr
  41b930:	br	x11
  41b934:	ldr	x9, [x1, #32]
  41b938:	ldr	x8, [x8, #40]
  41b93c:	mov	w10, #0x18                  	// #24
  41b940:	ldr	x20, [x9, #56]
  41b944:	madd	x19, x19, x10, x8
  41b948:	mov	w8, #0x1                   	// #1
  41b94c:	dup	v0.2d, x8
  41b950:	mov	w0, #0x8                   	// #8
  41b954:	str	q0, [x19]
  41b958:	bl	4024e0 <malloc@plt>
  41b95c:	str	x0, [x19, #16]
  41b960:	cbz	x0, 41ba84 <_obstack_memory_used@@Base+0x6a50>
  41b964:	mov	x8, x0
  41b968:	mov	w0, wzr
  41b96c:	b	41b9f4 <_obstack_memory_used@@Base+0x69c0>
  41b970:	ldrb	w9, [x8, #176]
  41b974:	add	x11, x1, #0x20
  41b978:	ldr	x22, [x8, #40]
  41b97c:	mov	w0, #0x10                  	// #16
  41b980:	orr	w9, w9, #0x1
  41b984:	strb	w9, [x8, #176]
  41b988:	ldp	x9, x10, [x1, #8]
  41b98c:	mov	w8, #0x18                  	// #24
  41b990:	madd	x23, x19, x8, x22
  41b994:	mov	w8, #0x2                   	// #2
  41b998:	add	x12, x9, #0x18
  41b99c:	cmp	x9, #0x0
  41b9a0:	add	x9, x10, #0x18
  41b9a4:	csel	x12, x11, x12, eq  // eq = none
  41b9a8:	cmp	x10, #0x0
  41b9ac:	csel	x9, x11, x9, eq  // eq = none
  41b9b0:	ldr	x10, [x12]
  41b9b4:	ldr	x9, [x9]
  41b9b8:	ldr	x20, [x10, #56]
  41b9bc:	ldr	x21, [x9, #56]
  41b9c0:	str	x8, [x23]
  41b9c4:	bl	4024e0 <malloc@plt>
  41b9c8:	str	x0, [x23, #16]
  41b9cc:	cbz	x0, 41ba88 <_obstack_memory_used@@Base+0x6a54>
  41b9d0:	mov	w9, #0x18                  	// #24
  41b9d4:	madd	x9, x19, x9, x22
  41b9d8:	mov	x8, x0
  41b9dc:	cmp	x20, x21
  41b9e0:	add	x9, x9, #0x8
  41b9e4:	b.ne	41ba50 <_obstack_memory_used@@Base+0x6a1c>  // b.any
  41b9e8:	mov	w10, #0x1                   	// #1
  41b9ec:	mov	w0, wzr
  41b9f0:	str	x10, [x9]
  41b9f4:	str	x20, [x8]
  41b9f8:	b	41ba70 <_obstack_memory_used@@Base+0x6a3c>
  41b9fc:	ldr	x9, [x1, #32]
  41ba00:	ldr	x8, [x8, #24]
  41ba04:	mov	w0, wzr
  41ba08:	ldr	x9, [x9, #56]
  41ba0c:	str	x9, [x8, x19, lsl #3]
  41ba10:	b	41ba70 <_obstack_memory_used@@Base+0x6a3c>
  41ba14:	ldr	x9, [x1, #32]
  41ba18:	ldr	x20, [x9, #56]
  41ba1c:	ldr	x9, [x8, #24]
  41ba20:	str	x20, [x9, x19, lsl #3]
  41ba24:	ldrb	w9, [x1, #48]
  41ba28:	cmp	w9, #0x4
  41ba2c:	b.ne	41ba48 <_obstack_memory_used@@Base+0x6a14>  // b.any
  41ba30:	ldr	x8, [x8, #40]
  41ba34:	mov	w9, #0x18                  	// #24
  41ba38:	mov	w10, #0x1                   	// #1
  41ba3c:	dup	v0.2d, x10
  41ba40:	madd	x19, x19, x9, x8
  41ba44:	b	41b950 <_obstack_memory_used@@Base+0x691c>
  41ba48:	mov	w0, wzr
  41ba4c:	b	41ba70 <_obstack_memory_used@@Base+0x6a3c>
  41ba50:	mov	w10, #0x2                   	// #2
  41ba54:	cmp	x20, x21
  41ba58:	mov	w0, wzr
  41ba5c:	str	x10, [x9]
  41ba60:	b.cs	41ba6c <_obstack_memory_used@@Base+0x6a38>  // b.hs, b.nlast
  41ba64:	stp	x20, x21, [x8]
  41ba68:	b	41ba70 <_obstack_memory_used@@Base+0x6a3c>
  41ba6c:	stp	x21, x20, [x8]
  41ba70:	ldp	x20, x19, [sp, #48]
  41ba74:	ldp	x22, x21, [sp, #32]
  41ba78:	ldr	x23, [sp, #16]
  41ba7c:	ldp	x29, x30, [sp], #64
  41ba80:	ret
  41ba84:	stp	xzr, xzr, [x19]
  41ba88:	mov	w0, #0xc                   	// #12
  41ba8c:	b	41ba70 <_obstack_memory_used@@Base+0x6a3c>
  41ba90:	sub	sp, sp, #0x60
  41ba94:	stp	x29, x30, [sp, #16]
  41ba98:	stp	x24, x23, [sp, #48]
  41ba9c:	stp	x22, x21, [sp, #64]
  41baa0:	stp	x20, x19, [sp, #80]
  41baa4:	ldr	x19, [x2, #8]
  41baa8:	ldr	x22, [x1]
  41baac:	mov	x20, x2
  41bab0:	mov	x21, x0
  41bab4:	str	x25, [sp, #32]
  41bab8:	add	x29, sp, #0x10
  41babc:	cbz	x19, 41bae0 <_obstack_memory_used@@Base+0x6aac>
  41bac0:	ldrb	w8, [x1, #56]
  41bac4:	tbz	w8, #4, 41bae0 <_obstack_memory_used@@Base+0x6aac>
  41bac8:	ldr	x8, [x20, #40]
  41bacc:	cmp	x8, #0x3f
  41bad0:	b.gt	41bbbc <_obstack_memory_used@@Base+0x6b88>
  41bad4:	ldr	x9, [x22, #160]
  41bad8:	lsr	x8, x9, x8
  41badc:	tbz	w8, #0, 41bbbc <_obstack_memory_used@@Base+0x6b88>
  41bae0:	mov	w8, #0x8                   	// #8
  41bae4:	mov	x3, sp
  41bae8:	mov	x0, x22
  41baec:	mov	x1, xzr
  41baf0:	mov	x2, xzr
  41baf4:	str	xzr, [sp]
  41baf8:	str	w8, [sp, #8]
  41bafc:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41bb00:	mov	x23, x0
  41bb04:	mov	w8, #0x9                   	// #9
  41bb08:	mov	x3, sp
  41bb0c:	mov	x0, x22
  41bb10:	mov	x1, xzr
  41bb14:	mov	x2, xzr
  41bb18:	str	xzr, [sp]
  41bb1c:	str	w8, [sp, #8]
  41bb20:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41bb24:	mov	x24, x0
  41bb28:	mov	x25, x0
  41bb2c:	cbz	x19, 41bb54 <_obstack_memory_used@@Base+0x6b20>
  41bb30:	mov	w8, #0x10                  	// #16
  41bb34:	mov	x3, sp
  41bb38:	mov	x0, x22
  41bb3c:	mov	x1, x19
  41bb40:	mov	x2, x24
  41bb44:	str	xzr, [sp]
  41bb48:	str	w8, [sp, #8]
  41bb4c:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41bb50:	mov	x25, x0
  41bb54:	mov	w8, #0x10                  	// #16
  41bb58:	mov	x3, sp
  41bb5c:	mov	x0, x22
  41bb60:	mov	x1, x23
  41bb64:	mov	x2, x25
  41bb68:	str	xzr, [sp]
  41bb6c:	str	w8, [sp, #8]
  41bb70:	bl	41a674 <_obstack_memory_used@@Base+0x5640>
  41bb74:	cbz	x24, 41bbdc <_obstack_memory_used@@Base+0x6ba8>
  41bb78:	cbz	x23, 41bbdc <_obstack_memory_used@@Base+0x6ba8>
  41bb7c:	cbz	x25, 41bbdc <_obstack_memory_used@@Base+0x6ba8>
  41bb80:	mov	x19, x0
  41bb84:	cbz	x0, 41bbdc <_obstack_memory_used@@Base+0x6ba8>
  41bb88:	ldr	x8, [x20, #40]
  41bb8c:	str	x8, [x24, #40]
  41bb90:	str	x8, [x23, #40]
  41bb94:	ldr	w8, [x20, #48]
  41bb98:	ldr	w9, [x24, #48]
  41bb9c:	and	w8, w8, #0x80000
  41bba0:	and	w9, w9, #0xfff7ffff
  41bba4:	orr	w9, w9, w8
  41bba8:	str	w9, [x24, #48]
  41bbac:	ldr	w9, [x23, #48]
  41bbb0:	and	w9, w9, #0xfff7ffff
  41bbb4:	orr	w8, w9, w8
  41bbb8:	str	w8, [x23, #48]
  41bbbc:	mov	x0, x19
  41bbc0:	ldp	x20, x19, [sp, #80]
  41bbc4:	ldp	x22, x21, [sp, #64]
  41bbc8:	ldp	x24, x23, [sp, #48]
  41bbcc:	ldr	x25, [sp, #32]
  41bbd0:	ldp	x29, x30, [sp, #16]
  41bbd4:	add	sp, sp, #0x60
  41bbd8:	ret
  41bbdc:	mov	w8, #0xc                   	// #12
  41bbe0:	mov	x19, xzr
  41bbe4:	str	w8, [x21]
  41bbe8:	b	41bbbc <_obstack_memory_used@@Base+0x6b88>
  41bbec:	stp	x29, x30, [sp, #-80]!
  41bbf0:	stp	x26, x25, [sp, #16]
  41bbf4:	stp	x24, x23, [sp, #32]
  41bbf8:	stp	x22, x21, [sp, #48]
  41bbfc:	stp	x20, x19, [sp, #64]
  41bc00:	ldp	x24, x8, [x0, #8]
  41bc04:	mov	x20, x2
  41bc08:	mov	x19, x0
  41bc0c:	mov	x21, x1
  41bc10:	cmp	x8, x24
  41bc14:	mov	x29, sp
  41bc18:	b.cs	41bce4 <_obstack_memory_used@@Base+0x6cb0>  // b.hs, b.nlast
  41bc1c:	ldr	x9, [x19]
  41bc20:	add	x8, x9, x8, lsl #4
  41bc24:	stp	x21, x20, [x8]
  41bc28:	ldr	x8, [x19]
  41bc2c:	ldr	x9, [x19, #16]
  41bc30:	add	x9, x8, x9, lsl #4
  41bc34:	ldr	w10, [x9, #8]
  41bc38:	and	w8, w20, #0xff
  41bc3c:	cmp	w8, #0x5
  41bc40:	and	w10, w10, #0xfffc00ff
  41bc44:	str	w10, [x9, #8]
  41bc48:	b.ne	41bc60 <_obstack_memory_used@@Base+0x6c2c>  // b.any
  41bc4c:	ldr	w9, [x19, #180]
  41bc50:	cmp	w9, #0x1
  41bc54:	b.le	41bc60 <_obstack_memory_used@@Base+0x6c2c>
  41bc58:	mov	w8, #0x100000              	// #1048576
  41bc5c:	b	41bc6c <_obstack_memory_used@@Base+0x6c38>
  41bc60:	cmp	w8, #0x6
  41bc64:	cset	w8, eq  // eq = none
  41bc68:	lsl	w8, w8, #20
  41bc6c:	ldr	x9, [x19]
  41bc70:	ldr	x10, [x19, #16]
  41bc74:	add	x9, x9, x10, lsl #4
  41bc78:	ldr	w10, [x9, #8]
  41bc7c:	and	w10, w10, #0xffefffff
  41bc80:	orr	w8, w10, w8
  41bc84:	str	w8, [x9, #8]
  41bc88:	ldp	x9, x8, [x19, #16]
  41bc8c:	mov	x10, #0xffffffffffffffff    	// #-1
  41bc90:	str	x10, [x8, x9, lsl #3]
  41bc94:	ldr	x8, [x19, #40]
  41bc98:	ldr	x9, [x19, #16]
  41bc9c:	mov	w10, #0x18                  	// #24
  41bca0:	madd	x8, x9, x10, x8
  41bca4:	stp	xzr, xzr, [x8]
  41bca8:	str	xzr, [x8, #16]
  41bcac:	ldr	x8, [x19, #48]
  41bcb0:	ldr	x9, [x19, #16]
  41bcb4:	madd	x8, x9, x10, x8
  41bcb8:	stp	xzr, xzr, [x8]
  41bcbc:	str	xzr, [x8, #16]
  41bcc0:	ldr	x0, [x19, #16]
  41bcc4:	add	x8, x0, #0x1
  41bcc8:	str	x8, [x19, #16]
  41bccc:	ldp	x20, x19, [sp, #64]
  41bcd0:	ldp	x22, x21, [sp, #48]
  41bcd4:	ldp	x24, x23, [sp, #32]
  41bcd8:	ldp	x26, x25, [sp, #16]
  41bcdc:	ldp	x29, x30, [sp], #80
  41bce0:	ret
  41bce4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41bce8:	lsl	x26, x24, #1
  41bcec:	movk	x8, #0xaaa, lsl #48
  41bcf0:	cmp	x26, x8
  41bcf4:	b.hi	41bda8 <_obstack_memory_used@@Base+0x6d74>  // b.pmore
  41bcf8:	ldr	x0, [x19]
  41bcfc:	lsl	x1, x24, #5
  41bd00:	bl	402610 <realloc@plt>
  41bd04:	cbz	x0, 41bda8 <_obstack_memory_used@@Base+0x6d74>
  41bd08:	ldr	x8, [x19, #24]
  41bd0c:	lsl	x23, x24, #4
  41bd10:	str	x0, [x19]
  41bd14:	mov	x1, x23
  41bd18:	mov	x0, x8
  41bd1c:	bl	402610 <realloc@plt>
  41bd20:	ldr	x8, [x19, #32]
  41bd24:	mov	x22, x0
  41bd28:	mov	x1, x23
  41bd2c:	mov	x0, x8
  41bd30:	bl	402610 <realloc@plt>
  41bd34:	mov	x23, x0
  41bd38:	ldr	x0, [x19, #40]
  41bd3c:	add	x8, x24, x24, lsl #1
  41bd40:	lsl	x25, x8, #4
  41bd44:	mov	x1, x25
  41bd48:	bl	402610 <realloc@plt>
  41bd4c:	ldr	x8, [x19, #48]
  41bd50:	mov	x24, x0
  41bd54:	mov	x1, x25
  41bd58:	mov	x0, x8
  41bd5c:	bl	402610 <realloc@plt>
  41bd60:	cbz	x22, 41bd84 <_obstack_memory_used@@Base+0x6d50>
  41bd64:	cbz	x23, 41bd84 <_obstack_memory_used@@Base+0x6d50>
  41bd68:	cbz	x24, 41bd84 <_obstack_memory_used@@Base+0x6d50>
  41bd6c:	cbz	x0, 41bd84 <_obstack_memory_used@@Base+0x6d50>
  41bd70:	ldr	x8, [x19, #16]
  41bd74:	stp	x22, x23, [x19, #24]
  41bd78:	stp	x24, x0, [x19, #40]
  41bd7c:	str	x26, [x19, #8]
  41bd80:	b	41bc1c <_obstack_memory_used@@Base+0x6be8>
  41bd84:	mov	x19, x0
  41bd88:	mov	x0, x22
  41bd8c:	bl	402770 <free@plt>
  41bd90:	mov	x0, x23
  41bd94:	bl	402770 <free@plt>
  41bd98:	mov	x0, x24
  41bd9c:	bl	402770 <free@plt>
  41bda0:	mov	x0, x19
  41bda4:	bl	402770 <free@plt>
  41bda8:	mov	x0, #0xffffffffffffffff    	// #-1
  41bdac:	b	41bccc <_obstack_memory_used@@Base+0x6c98>
  41bdb0:	sub	sp, sp, #0x80
  41bdb4:	stp	x29, x30, [sp, #48]
  41bdb8:	stp	x26, x25, [sp, #64]
  41bdbc:	stp	x24, x23, [sp, #80]
  41bdc0:	stp	x22, x21, [sp, #96]
  41bdc4:	stp	x20, x19, [sp, #112]
  41bdc8:	ldr	x23, [x1, #40]
  41bdcc:	mov	w8, #0x18                  	// #24
  41bdd0:	mov	x19, x0
  41bdd4:	add	x29, sp, #0x30
  41bdd8:	madd	x24, x2, x8, x23
  41bddc:	ldr	x8, [x24, #8]!
  41bde0:	mov	w21, w3
  41bde4:	mov	x20, x2
  41bde8:	mov	x22, x1
  41bdec:	add	x8, x8, #0x1
  41bdf0:	lsl	x0, x8, #3
  41bdf4:	stp	x8, xzr, [sp, #24]
  41bdf8:	bl	4024e0 <malloc@plt>
  41bdfc:	str	x0, [sp, #40]
  41be00:	cbz	x0, 41bfb8 <_obstack_memory_used@@Base+0x6f84>
  41be04:	ldr	x8, [x22, #48]
  41be08:	mov	w9, #0x18                  	// #24
  41be0c:	madd	x8, x20, x9, x8
  41be10:	mov	x9, #0xffffffffffffffff    	// #-1
  41be14:	str	x9, [x8, #8]
  41be18:	ldr	x9, [x22]
  41be1c:	add	x8, x9, x20, lsl #4
  41be20:	ldr	w8, [x8, #8]
  41be24:	ubfx	w4, w8, #8, #10
  41be28:	cbz	w4, 41be74 <_obstack_memory_used@@Base+0x6e40>
  41be2c:	ldr	x10, [x24]
  41be30:	cbz	x10, 41be74 <_obstack_memory_used@@Base+0x6e40>
  41be34:	mov	w10, #0x18                  	// #24
  41be38:	madd	x10, x20, x10, x23
  41be3c:	ldr	x10, [x10, #16]
  41be40:	ldr	x10, [x10]
  41be44:	add	x9, x9, x10, lsl #4
  41be48:	ldrb	w9, [x9, #10]
  41be4c:	tbnz	w9, #2, 41be74 <_obstack_memory_used@@Base+0x6e40>
  41be50:	mov	x0, x22
  41be54:	mov	x1, x20
  41be58:	mov	x2, x20
  41be5c:	mov	x3, x20
  41be60:	bl	41bfc0 <_obstack_memory_used@@Base+0x6f8c>
  41be64:	cbnz	w0, 41bf9c <_obstack_memory_used@@Base+0x6f68>
  41be68:	ldr	x8, [x22]
  41be6c:	add	x8, x8, x20, lsl #4
  41be70:	ldr	w8, [x8, #8]
  41be74:	tbz	w8, #3, 41bf40 <_obstack_memory_used@@Base+0x6f0c>
  41be78:	ldr	x8, [x22, #40]
  41be7c:	mov	w9, #0x18                  	// #24
  41be80:	madd	x9, x20, x9, x8
  41be84:	ldr	x9, [x9, #8]
  41be88:	cmp	x9, #0x1
  41be8c:	b.lt	41bf40 <_obstack_memory_used@@Base+0x6f0c>  // b.tstop
  41be90:	mov	w26, wzr
  41be94:	mov	x24, xzr
  41be98:	mov	w25, #0x18                  	// #24
  41be9c:	madd	x8, x20, x25, x8
  41bea0:	ldr	x8, [x8, #16]
  41bea4:	ldr	x23, [x8, x24, lsl #3]
  41bea8:	ldr	x8, [x22, #48]
  41beac:	madd	x9, x23, x25, x8
  41beb0:	ldr	x9, [x9, #8]
  41beb4:	cmn	x9, #0x1
  41beb8:	b.eq	41bf18 <_obstack_memory_used@@Base+0x6ee4>  // b.none
  41bebc:	cbnz	x9, 41bedc <_obstack_memory_used@@Base+0x6ea8>
  41bec0:	mov	x0, sp
  41bec4:	mov	x1, x22
  41bec8:	mov	x2, x23
  41becc:	mov	w3, wzr
  41bed0:	bl	41bdb0 <_obstack_memory_used@@Base+0x6d7c>
  41bed4:	cbz	w0, 41bef0 <_obstack_memory_used@@Base+0x6ebc>
  41bed8:	b	41bf9c <_obstack_memory_used@@Base+0x6f68>
  41bedc:	madd	x8, x23, x25, x8
  41bee0:	ldr	x9, [x8, #16]
  41bee4:	ldr	q0, [x8]
  41bee8:	str	x9, [sp, #16]
  41beec:	str	q0, [sp]
  41bef0:	add	x0, sp, #0x18
  41bef4:	mov	x1, sp
  41bef8:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41befc:	cbnz	w0, 41bf9c <_obstack_memory_used@@Base+0x6f68>
  41bf00:	ldr	x8, [x22, #48]
  41bf04:	madd	x8, x23, x25, x8
  41bf08:	ldr	x8, [x8, #8]
  41bf0c:	cbnz	x8, 41bf1c <_obstack_memory_used@@Base+0x6ee8>
  41bf10:	ldr	x0, [sp, #16]
  41bf14:	bl	402770 <free@plt>
  41bf18:	mov	w26, #0x1                   	// #1
  41bf1c:	ldr	x8, [x22, #40]
  41bf20:	add	x24, x24, #0x1
  41bf24:	madd	x9, x20, x25, x8
  41bf28:	ldr	x9, [x9, #8]
  41bf2c:	cmp	x24, x9
  41bf30:	b.lt	41be9c <_obstack_memory_used@@Base+0x6e68>  // b.tstop
  41bf34:	tst	w26, #0x1
  41bf38:	cset	w23, eq  // eq = none
  41bf3c:	b	41bf44 <_obstack_memory_used@@Base+0x6f10>
  41bf40:	mov	w23, #0x1                   	// #1
  41bf44:	add	x0, sp, #0x18
  41bf48:	mov	x1, x20
  41bf4c:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41bf50:	tbz	w0, #0, 41bfb8 <_obstack_memory_used@@Base+0x6f84>
  41bf54:	ldr	x8, [x22, #48]
  41bf58:	orr	w9, w23, w21
  41bf5c:	tbz	w9, #0, 41bf7c <_obstack_memory_used@@Base+0x6f48>
  41bf60:	ldr	x9, [sp, #40]
  41bf64:	ldur	q0, [sp, #24]
  41bf68:	mov	w10, #0x18                  	// #24
  41bf6c:	madd	x8, x20, x10, x8
  41bf70:	str	x9, [x8, #16]
  41bf74:	str	q0, [x8]
  41bf78:	b	41bf88 <_obstack_memory_used@@Base+0x6f54>
  41bf7c:	mov	w9, #0x18                  	// #24
  41bf80:	madd	x8, x20, x9, x8
  41bf84:	str	xzr, [x8, #8]
  41bf88:	ldr	x8, [sp, #40]
  41bf8c:	ldur	q0, [sp, #24]
  41bf90:	mov	w0, wzr
  41bf94:	str	x8, [x19, #16]
  41bf98:	str	q0, [x19]
  41bf9c:	ldp	x20, x19, [sp, #112]
  41bfa0:	ldp	x22, x21, [sp, #96]
  41bfa4:	ldp	x24, x23, [sp, #80]
  41bfa8:	ldp	x26, x25, [sp, #64]
  41bfac:	ldp	x29, x30, [sp, #48]
  41bfb0:	add	sp, sp, #0x80
  41bfb4:	ret
  41bfb8:	mov	w0, #0xc                   	// #12
  41bfbc:	b	41bf9c <_obstack_memory_used@@Base+0x6f68>
  41bfc0:	stp	x29, x30, [sp, #-80]!
  41bfc4:	stp	x26, x25, [sp, #16]
  41bfc8:	stp	x24, x23, [sp, #32]
  41bfcc:	stp	x22, x21, [sp, #48]
  41bfd0:	stp	x20, x19, [sp, #64]
  41bfd4:	mov	w19, w4
  41bfd8:	mov	x20, x3
  41bfdc:	mov	x22, x2
  41bfe0:	mov	x24, x1
  41bfe4:	mov	x21, x0
  41bfe8:	mov	w26, #0x18                  	// #24
  41bfec:	mov	x29, sp
  41bff0:	mov	x23, x24
  41bff4:	ldr	x9, [x21]
  41bff8:	add	x10, x9, x23, lsl #4
  41bffc:	ldrb	w8, [x10, #8]!
  41c000:	cmp	w8, #0x4
  41c004:	b.ne	41c064 <_obstack_memory_used@@Base+0x7030>  // b.any
  41c008:	ldr	x8, [x21, #24]
  41c00c:	ldr	x9, [x21, #40]
  41c010:	mov	x0, x21
  41c014:	mov	w2, w19
  41c018:	ldr	x24, [x8, x23, lsl #3]
  41c01c:	madd	x8, x22, x26, x9
  41c020:	str	xzr, [x8, #8]
  41c024:	mov	x1, x24
  41c028:	bl	41c4b4 <_obstack_memory_used@@Base+0x7480>
  41c02c:	cmn	x0, #0x1
  41c030:	b.eq	41c220 <_obstack_memory_used@@Base+0x71ec>  // b.none
  41c034:	ldr	x8, [x21, #24]
  41c038:	mov	x25, x0
  41c03c:	mov	x1, x25
  41c040:	ldr	x9, [x8, x23, lsl #3]
  41c044:	str	x9, [x8, x22, lsl #3]
  41c048:	ldr	x8, [x21, #40]
  41c04c:	madd	x0, x22, x26, x8
  41c050:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c054:	mov	x23, x24
  41c058:	mov	x22, x25
  41c05c:	tbnz	w0, #0, 41bff4 <_obstack_memory_used@@Base+0x6fc0>
  41c060:	b	41c220 <_obstack_memory_used@@Base+0x71ec>
  41c064:	ldr	x8, [x21, #40]
  41c068:	madd	x11, x23, x26, x8
  41c06c:	ldr	x11, [x11, #8]
  41c070:	cbz	x11, 41c1dc <_obstack_memory_used@@Base+0x71a8>
  41c074:	madd	x12, x23, x26, x8
  41c078:	ldr	x12, [x12, #16]
  41c07c:	cmp	x11, #0x1
  41c080:	ldr	x24, [x12]
  41c084:	madd	x12, x22, x26, x8
  41c088:	str	xzr, [x12, #8]
  41c08c:	b.eq	41c188 <_obstack_memory_used@@Base+0x7154>  // b.none
  41c090:	ldr	x12, [x21, #16]
  41c094:	sub	x1, x12, #0x1
  41c098:	cmp	x1, #0x1
  41c09c:	b.lt	41c0e4 <_obstack_memory_used@@Base+0x70b0>  // b.tstop
  41c0a0:	add	x10, x9, x1, lsl #4
  41c0a4:	ldr	w11, [x10, #8]
  41c0a8:	tbz	w11, #18, 41c0e4 <_obstack_memory_used@@Base+0x70b0>
  41c0ac:	ldr	x10, [x21, #32]
  41c0b0:	add	x9, x9, x12, lsl #4
  41c0b4:	sub	x9, x9, #0x18
  41c0b8:	ldr	x12, [x10, x1, lsl #3]
  41c0bc:	cmp	x12, x24
  41c0c0:	b.ne	41c0d0 <_obstack_memory_used@@Base+0x709c>  // b.any
  41c0c4:	ubfx	w11, w11, #8, #10
  41c0c8:	cmp	w11, w19
  41c0cc:	b.eq	41c178 <_obstack_memory_used@@Base+0x7144>  // b.none
  41c0d0:	ldr	w11, [x9], #-16
  41c0d4:	sub	x1, x1, #0x1
  41c0d8:	cmp	x1, #0x1
  41c0dc:	b.lt	41c0e4 <_obstack_memory_used@@Base+0x70b0>  // b.tstop
  41c0e0:	tbnz	w11, #18, 41c0b8 <_obstack_memory_used@@Base+0x7084>
  41c0e4:	mov	x0, x21
  41c0e8:	mov	x1, x24
  41c0ec:	mov	w2, w19
  41c0f0:	bl	41c4b4 <_obstack_memory_used@@Base+0x7480>
  41c0f4:	cmn	x0, #0x1
  41c0f8:	b.eq	41c220 <_obstack_memory_used@@Base+0x71ec>  // b.none
  41c0fc:	ldr	x8, [x21, #40]
  41c100:	mov	x25, x0
  41c104:	mov	x1, x25
  41c108:	madd	x0, x22, x26, x8
  41c10c:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c110:	tbz	w0, #0, 41c220 <_obstack_memory_used@@Base+0x71ec>
  41c114:	mov	x0, x21
  41c118:	mov	x1, x24
  41c11c:	mov	x2, x25
  41c120:	mov	x3, x20
  41c124:	mov	w4, w19
  41c128:	bl	41bfc0 <_obstack_memory_used@@Base+0x6f8c>
  41c12c:	cbnz	w0, 41c1ec <_obstack_memory_used@@Base+0x71b8>
  41c130:	ldr	x8, [x21, #40]
  41c134:	mov	x0, x21
  41c138:	mov	w2, w19
  41c13c:	madd	x8, x23, x26, x8
  41c140:	ldr	x8, [x8, #16]
  41c144:	ldr	x23, [x8, #8]
  41c148:	mov	x1, x23
  41c14c:	bl	41c4b4 <_obstack_memory_used@@Base+0x7480>
  41c150:	cmn	x0, #0x1
  41c154:	b.eq	41c220 <_obstack_memory_used@@Base+0x71ec>  // b.none
  41c158:	ldr	x8, [x21, #40]
  41c15c:	mov	x24, x0
  41c160:	mov	x1, x24
  41c164:	madd	x0, x22, x26, x8
  41c168:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c16c:	mov	x22, x24
  41c170:	tbnz	w0, #0, 41bff4 <_obstack_memory_used@@Base+0x6fc0>
  41c174:	b	41c220 <_obstack_memory_used@@Base+0x71ec>
  41c178:	madd	x0, x22, x26, x8
  41c17c:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c180:	tbnz	w0, #0, 41c130 <_obstack_memory_used@@Base+0x70fc>
  41c184:	b	41c220 <_obstack_memory_used@@Base+0x71ec>
  41c188:	cmp	x23, x20
  41c18c:	b.ne	41c198 <_obstack_memory_used@@Base+0x7164>  // b.any
  41c190:	cmp	x22, x23
  41c194:	b.ne	41c204 <_obstack_memory_used@@Base+0x71d0>  // b.any
  41c198:	ldr	w8, [x10]
  41c19c:	mov	x0, x21
  41c1a0:	mov	x1, x24
  41c1a4:	ubfx	w8, w8, #8, #10
  41c1a8:	orr	w19, w8, w19
  41c1ac:	mov	w2, w19
  41c1b0:	bl	41c4b4 <_obstack_memory_used@@Base+0x7480>
  41c1b4:	cmn	x0, #0x1
  41c1b8:	b.eq	41c220 <_obstack_memory_used@@Base+0x71ec>  // b.none
  41c1bc:	ldr	x8, [x21, #40]
  41c1c0:	mov	x23, x0
  41c1c4:	mov	x1, x23
  41c1c8:	madd	x0, x22, x26, x8
  41c1cc:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c1d0:	mov	x22, x23
  41c1d4:	tbnz	w0, #0, 41bff0 <_obstack_memory_used@@Base+0x6fbc>
  41c1d8:	b	41c220 <_obstack_memory_used@@Base+0x71ec>
  41c1dc:	ldr	x8, [x21, #24]
  41c1e0:	mov	w0, wzr
  41c1e4:	ldr	x9, [x8, x23, lsl #3]
  41c1e8:	str	x9, [x8, x22, lsl #3]
  41c1ec:	ldp	x20, x19, [sp, #64]
  41c1f0:	ldp	x22, x21, [sp, #48]
  41c1f4:	ldp	x24, x23, [sp, #32]
  41c1f8:	ldp	x26, x25, [sp, #16]
  41c1fc:	ldp	x29, x30, [sp], #80
  41c200:	ret
  41c204:	mov	w9, #0x18                  	// #24
  41c208:	madd	x0, x22, x9, x8
  41c20c:	mov	x1, x24
  41c210:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41c214:	tbz	w0, #0, 41c220 <_obstack_memory_used@@Base+0x71ec>
  41c218:	mov	w0, wzr
  41c21c:	b	41c1ec <_obstack_memory_used@@Base+0x71b8>
  41c220:	mov	w0, #0xc                   	// #12
  41c224:	b	41c1ec <_obstack_memory_used@@Base+0x71b8>
  41c228:	stp	x29, x30, [sp, #-48]!
  41c22c:	str	x21, [sp, #16]
  41c230:	stp	x20, x19, [sp, #32]
  41c234:	mov	x29, sp
  41c238:	cbz	x1, 41c318 <_obstack_memory_used@@Base+0x72e4>
  41c23c:	ldr	x10, [x1, #8]
  41c240:	mov	x20, x1
  41c244:	cbz	x10, 41c318 <_obstack_memory_used@@Base+0x72e4>
  41c248:	ldp	x8, x11, [x0]
  41c24c:	mov	x19, x0
  41c250:	add	x9, x11, x10, lsl #1
  41c254:	cmp	x8, x9
  41c258:	b.ge	41c284 <_obstack_memory_used@@Base+0x7250>  // b.tcont
  41c25c:	ldr	x0, [x19, #16]
  41c260:	add	x21, x8, x10
  41c264:	lsl	x1, x21, #4
  41c268:	bl	402610 <realloc@plt>
  41c26c:	cbz	x0, 41c3a4 <_obstack_memory_used@@Base+0x7370>
  41c270:	lsl	x8, x21, #1
  41c274:	str	x0, [x19, #16]
  41c278:	str	x8, [x19]
  41c27c:	ldr	x11, [x19, #8]
  41c280:	ldr	x10, [x20, #8]
  41c284:	cbz	x11, 41c390 <_obstack_memory_used@@Base+0x735c>
  41c288:	sub	x8, x10, #0x1
  41c28c:	sub	x9, x11, #0x1
  41c290:	orr	x12, x8, x9
  41c294:	add	x21, x11, x10, lsl #1
  41c298:	tbnz	x12, #63, 41c2dc <_obstack_memory_used@@Base+0x72a8>
  41c29c:	ldr	x10, [x19, #16]
  41c2a0:	ldr	x11, [x20, #16]
  41c2a4:	ldr	x13, [x10, x9, lsl #3]
  41c2a8:	ldr	x12, [x11, x8, lsl #3]
  41c2ac:	cmp	x13, x12
  41c2b0:	b.ne	41c2bc <_obstack_memory_used@@Base+0x7288>  // b.any
  41c2b4:	sub	x8, x8, #0x1
  41c2b8:	b	41c2d0 <_obstack_memory_used@@Base+0x729c>
  41c2bc:	b.ge	41c2d0 <_obstack_memory_used@@Base+0x729c>  // b.tcont
  41c2c0:	sub	x8, x8, #0x1
  41c2c4:	sub	x21, x21, #0x1
  41c2c8:	str	x12, [x10, x21, lsl #3]
  41c2cc:	b	41c2d4 <_obstack_memory_used@@Base+0x72a0>
  41c2d0:	sub	x9, x9, #0x1
  41c2d4:	orr	x12, x8, x9
  41c2d8:	tbz	x12, #63, 41c2a4 <_obstack_memory_used@@Base+0x7270>
  41c2dc:	tbnz	x8, #63, 41c2fc <_obstack_memory_used@@Base+0x72c8>
  41c2e0:	ldr	x9, [x19, #16]
  41c2e4:	ldr	x1, [x20, #16]
  41c2e8:	add	x8, x8, #0x1
  41c2ec:	sub	x21, x21, x8
  41c2f0:	add	x0, x9, x21, lsl #3
  41c2f4:	lsl	x2, x8, #3
  41c2f8:	bl	402320 <memcpy@plt>
  41c2fc:	ldr	x10, [x19, #8]
  41c300:	ldr	x8, [x20, #8]
  41c304:	sub	x9, x10, #0x1
  41c308:	add	x8, x9, x8, lsl #1
  41c30c:	sub	x11, x8, x21
  41c310:	adds	x11, x11, #0x1
  41c314:	b.cc	41c32c <_obstack_memory_used@@Base+0x72f8>  // b.lo, b.ul, b.last
  41c318:	mov	w0, wzr
  41c31c:	ldp	x20, x19, [sp, #32]
  41c320:	ldr	x21, [sp, #16]
  41c324:	ldp	x29, x30, [sp], #48
  41c328:	ret
  41c32c:	ldr	x0, [x19, #16]
  41c330:	add	x10, x11, x10
  41c334:	str	x10, [x19, #8]
  41c338:	add	x10, x0, x9, lsl #3
  41c33c:	lsl	x2, x11, #3
  41c340:	neg	x11, x11
  41c344:	ldr	x12, [x0, x8, lsl #3]
  41c348:	ldr	x13, [x0, x9, lsl #3]
  41c34c:	cmp	x12, x13
  41c350:	b.le	41c36c <_obstack_memory_used@@Base+0x7338>
  41c354:	sub	x8, x8, #0x1
  41c358:	str	x12, [x10, x2]
  41c35c:	adds	x11, x11, #0x1
  41c360:	sub	x2, x2, #0x8
  41c364:	b.cc	41c344 <_obstack_memory_used@@Base+0x7310>  // b.lo, b.ul, b.last
  41c368:	b	41c318 <_obstack_memory_used@@Base+0x72e4>
  41c36c:	str	x13, [x10, x2]
  41c370:	cmp	x9, #0x0
  41c374:	sub	x9, x9, #0x1
  41c378:	neg	x11, x11
  41c37c:	sub	x10, x10, #0x8
  41c380:	b.gt	41c33c <_obstack_memory_used@@Base+0x7308>
  41c384:	add	x1, x0, x21, lsl #3
  41c388:	bl	402320 <memcpy@plt>
  41c38c:	b	41c318 <_obstack_memory_used@@Base+0x72e4>
  41c390:	str	x10, [x19, #8]
  41c394:	ldp	x8, x1, [x20, #8]
  41c398:	ldr	x0, [x19, #16]
  41c39c:	lsl	x2, x8, #3
  41c3a0:	b	41c388 <_obstack_memory_used@@Base+0x7354>
  41c3a4:	mov	w0, #0xc                   	// #12
  41c3a8:	b	41c31c <_obstack_memory_used@@Base+0x72e8>
  41c3ac:	stp	x29, x30, [sp, #-32]!
  41c3b0:	stp	x20, x19, [sp, #16]
  41c3b4:	ldr	x9, [x0]
  41c3b8:	mov	x19, x0
  41c3bc:	mov	x20, x1
  41c3c0:	mov	x29, sp
  41c3c4:	cbz	x9, 41c3e8 <_obstack_memory_used@@Base+0x73b4>
  41c3c8:	ldr	x8, [x19, #8]
  41c3cc:	cbnz	x8, 41c418 <_obstack_memory_used@@Base+0x73e4>
  41c3d0:	ldr	x8, [x19, #16]
  41c3d4:	str	x20, [x8]
  41c3d8:	ldr	x8, [x19, #8]
  41c3dc:	add	x8, x8, #0x1
  41c3e0:	str	x8, [x19, #8]
  41c3e4:	b	41c408 <_obstack_memory_used@@Base+0x73d4>
  41c3e8:	mov	w8, #0x1                   	// #1
  41c3ec:	dup	v0.2d, x8
  41c3f0:	mov	w0, #0x8                   	// #8
  41c3f4:	str	q0, [x19]
  41c3f8:	bl	4024e0 <malloc@plt>
  41c3fc:	str	x0, [x19, #16]
  41c400:	cbz	x0, 41c444 <_obstack_memory_used@@Base+0x7410>
  41c404:	str	x20, [x0]
  41c408:	mov	w0, #0x1                   	// #1
  41c40c:	ldp	x20, x19, [sp, #16]
  41c410:	ldp	x29, x30, [sp], #32
  41c414:	ret
  41c418:	cmp	x9, x8
  41c41c:	b.ne	41c44c <_obstack_memory_used@@Base+0x7418>  // b.any
  41c420:	ldr	x0, [x19, #16]
  41c424:	lsl	x8, x9, #1
  41c428:	lsl	x1, x9, #4
  41c42c:	str	x8, [x19]
  41c430:	bl	402610 <realloc@plt>
  41c434:	cbz	x0, 41c40c <_obstack_memory_used@@Base+0x73d8>
  41c438:	ldr	x8, [x19, #8]
  41c43c:	str	x0, [x19, #16]
  41c440:	b	41c450 <_obstack_memory_used@@Base+0x741c>
  41c444:	stp	xzr, xzr, [x19]
  41c448:	b	41c40c <_obstack_memory_used@@Base+0x73d8>
  41c44c:	ldr	x0, [x19, #16]
  41c450:	ldr	x9, [x0]
  41c454:	cmp	x9, x20
  41c458:	b.le	41c484 <_obstack_memory_used@@Base+0x7450>
  41c45c:	cmp	x8, #0x1
  41c460:	b.lt	41c4ac <_obstack_memory_used@@Base+0x7478>  // b.tstop
  41c464:	mov	x9, x8
  41c468:	add	x10, x0, x9, lsl #3
  41c46c:	ldur	x11, [x10, #-8]
  41c470:	subs	x8, x9, #0x1
  41c474:	mov	x9, x8
  41c478:	str	x11, [x10]
  41c47c:	b.gt	41c468 <_obstack_memory_used@@Base+0x7434>
  41c480:	b	41c4ac <_obstack_memory_used@@Base+0x7478>
  41c484:	add	x9, x0, x8, lsl #3
  41c488:	ldur	x9, [x9, #-8]
  41c48c:	cmp	x9, x20
  41c490:	b.le	41c4ac <_obstack_memory_used@@Base+0x7478>
  41c494:	add	x10, x0, x8, lsl #3
  41c498:	str	x9, [x10]
  41c49c:	ldur	x9, [x10, #-16]
  41c4a0:	sub	x8, x8, #0x1
  41c4a4:	cmp	x9, x20
  41c4a8:	b.gt	41c494 <_obstack_memory_used@@Base+0x7460>
  41c4ac:	str	x20, [x0, x8, lsl #3]
  41c4b0:	b	41c3d8 <_obstack_memory_used@@Base+0x73a4>
  41c4b4:	stp	x29, x30, [sp, #-48]!
  41c4b8:	stp	x20, x19, [sp, #32]
  41c4bc:	ldr	x8, [x0]
  41c4c0:	str	x21, [sp, #16]
  41c4c4:	mov	x19, x1
  41c4c8:	mov	w21, w2
  41c4cc:	add	x8, x8, x1, lsl #4
  41c4d0:	ldp	x1, x8, [x8]
  41c4d4:	mov	x29, sp
  41c4d8:	mov	x20, x0
  41c4dc:	mov	x2, x8
  41c4e0:	bl	41bbec <_obstack_memory_used@@Base+0x6bb8>
  41c4e4:	cmn	x0, #0x1
  41c4e8:	b.eq	41c53c <_obstack_memory_used@@Base+0x7508>  // b.none
  41c4ec:	ldr	x8, [x20]
  41c4f0:	add	x8, x8, x0, lsl #4
  41c4f4:	ldr	w9, [x8, #8]
  41c4f8:	bfi	w9, w21, #8, #10
  41c4fc:	str	w9, [x8, #8]
  41c500:	ldr	x8, [x20]
  41c504:	add	x9, x8, x19, lsl #4
  41c508:	ldr	w9, [x9, #8]
  41c50c:	add	x8, x8, x0, lsl #4
  41c510:	ldr	w10, [x8, #8]
  41c514:	and	w9, w9, #0x3ff00
  41c518:	orr	w9, w9, w10
  41c51c:	str	w9, [x8, #8]
  41c520:	ldr	x8, [x20]
  41c524:	add	x8, x8, x0, lsl #4
  41c528:	ldr	w9, [x8, #8]
  41c52c:	orr	w9, w9, #0x40000
  41c530:	str	w9, [x8, #8]
  41c534:	ldr	x8, [x20, #32]
  41c538:	str	x19, [x8, x0, lsl #3]
  41c53c:	ldp	x20, x19, [sp, #32]
  41c540:	ldr	x21, [sp, #16]
  41c544:	ldp	x29, x30, [sp], #48
  41c548:	ret
  41c54c:	stp	x29, x30, [sp, #-32]!
  41c550:	stp	x20, x19, [sp, #16]
  41c554:	ldp	x9, x8, [x0]
  41c558:	mov	x19, x0
  41c55c:	mov	x20, x1
  41c560:	mov	x29, sp
  41c564:	cmp	x9, x8
  41c568:	b.ne	41c594 <_obstack_memory_used@@Base+0x7560>  // b.any
  41c56c:	ldr	x0, [x19, #16]
  41c570:	lsl	x8, x9, #1
  41c574:	add	x8, x8, #0x2
  41c578:	lsl	x1, x8, #3
  41c57c:	str	x8, [x19]
  41c580:	bl	402610 <realloc@plt>
  41c584:	cbz	x0, 41c5a8 <_obstack_memory_used@@Base+0x7574>
  41c588:	ldr	x8, [x19, #8]
  41c58c:	str	x0, [x19, #16]
  41c590:	b	41c598 <_obstack_memory_used@@Base+0x7564>
  41c594:	ldr	x0, [x19, #16]
  41c598:	add	x9, x8, #0x1
  41c59c:	str	x9, [x19, #8]
  41c5a0:	str	x20, [x0, x8, lsl #3]
  41c5a4:	mov	w0, #0x1                   	// #1
  41c5a8:	ldp	x20, x19, [sp, #16]
  41c5ac:	ldp	x29, x30, [sp], #32
  41c5b0:	ret
  41c5b4:	stp	x29, x30, [sp, #-48]!
  41c5b8:	stp	x20, x19, [sp, #32]
  41c5bc:	ldr	x8, [x1, #8]
  41c5c0:	str	x21, [sp, #16]
  41c5c4:	mov	x19, x0
  41c5c8:	mov	x29, sp
  41c5cc:	str	x8, [x0, #8]
  41c5d0:	ldr	x21, [x1, #8]
  41c5d4:	cmp	x21, #0x1
  41c5d8:	b.lt	41c608 <_obstack_memory_used@@Base+0x75d4>  // b.tstop
  41c5dc:	lsl	x0, x8, #3
  41c5e0:	mov	x20, x1
  41c5e4:	str	x8, [x19]
  41c5e8:	bl	4024e0 <malloc@plt>
  41c5ec:	str	x0, [x19, #16]
  41c5f0:	cbz	x0, 41c624 <_obstack_memory_used@@Base+0x75f0>
  41c5f4:	ldr	x1, [x20, #16]
  41c5f8:	lsl	x2, x21, #3
  41c5fc:	bl	402320 <memcpy@plt>
  41c600:	mov	w0, wzr
  41c604:	b	41c614 <_obstack_memory_used@@Base+0x75e0>
  41c608:	mov	w0, wzr
  41c60c:	stp	xzr, xzr, [x19]
  41c610:	str	xzr, [x19, #16]
  41c614:	ldp	x20, x19, [sp, #32]
  41c618:	ldr	x21, [sp, #16]
  41c61c:	ldp	x29, x30, [sp], #48
  41c620:	ret
  41c624:	stp	xzr, xzr, [x19]
  41c628:	mov	w0, #0xc                   	// #12
  41c62c:	b	41c614 <_obstack_memory_used@@Base+0x75e0>
  41c630:	ldr	x8, [x0, #8]
  41c634:	subs	x9, x8, #0x1
  41c638:	b.lt	41c678 <_obstack_memory_used@@Base+0x7644>  // b.tstop
  41c63c:	ldr	x8, [x0, #16]
  41c640:	mov	x10, xzr
  41c644:	b.eq	41c668 <_obstack_memory_used@@Base+0x7634>  // b.none
  41c648:	add	x11, x9, x10
  41c64c:	lsr	x11, x11, #1
  41c650:	ldr	x12, [x8, x11, lsl #3]
  41c654:	cmp	x12, x1
  41c658:	csinc	x10, x10, x11, ge  // ge = tcont
  41c65c:	csel	x9, x9, x11, lt  // lt = tstop
  41c660:	cmp	x10, x9
  41c664:	b.cc	41c648 <_obstack_memory_used@@Base+0x7614>  // b.lo, b.ul, b.last
  41c668:	ldr	x8, [x8, x10, lsl #3]
  41c66c:	cmp	x8, x1
  41c670:	csinc	x0, xzr, x10, ne  // ne = any
  41c674:	ret
  41c678:	mov	x0, xzr
  41c67c:	ret
  41c680:	stp	x29, x30, [sp, #-96]!
  41c684:	stp	x26, x25, [sp, #32]
  41c688:	stp	x24, x23, [sp, #48]
  41c68c:	stp	x22, x21, [sp, #64]
  41c690:	stp	x20, x19, [sp, #80]
  41c694:	ldr	x8, [x2, #8]
  41c698:	mov	x19, x0
  41c69c:	str	x27, [sp, #16]
  41c6a0:	mov	x29, sp
  41c6a4:	cbz	x8, 41c90c <_obstack_memory_used@@Base+0x78d8>
  41c6a8:	mov	w21, w3
  41c6ac:	mov	x22, x2
  41c6b0:	mov	x20, x1
  41c6b4:	subs	x9, x8, #0x1
  41c6b8:	add	x23, x8, w3, uxtw
  41c6bc:	b.lt	41c6d8 <_obstack_memory_used@@Base+0x76a4>  // b.tstop
  41c6c0:	ldr	x10, [x22, #16]
  41c6c4:	mov	x11, x8
  41c6c8:	ldr	x12, [x10], #8
  41c6cc:	subs	x11, x11, #0x1
  41c6d0:	add	x23, x12, x23
  41c6d4:	b.ne	41c6c8 <_obstack_memory_used@@Base+0x7694>  // b.any
  41c6d8:	ldr	x10, [x20, #136]
  41c6dc:	ldr	x11, [x20, #64]
  41c6e0:	and	x12, x10, x23
  41c6e4:	mov	w10, #0x18                  	// #24
  41c6e8:	mul	x10, x12, x10
  41c6ec:	ldr	x10, [x11, x10]
  41c6f0:	cmp	x10, #0x1
  41c6f4:	b.lt	41c778 <_obstack_memory_used@@Base+0x7744>  // b.tstop
  41c6f8:	mov	w13, #0x18                  	// #24
  41c6fc:	madd	x11, x12, x13, x11
  41c700:	ldr	x11, [x11, #16]
  41c704:	mov	x12, xzr
  41c708:	ldr	x24, [x11, x12, lsl #3]
  41c70c:	ldr	x13, [x24]
  41c710:	cmp	x13, x23
  41c714:	b.ne	41c76c <_obstack_memory_used@@Base+0x7738>  // b.any
  41c718:	ldrb	w13, [x24, #104]
  41c71c:	and	w13, w13, #0xf
  41c720:	cmp	w13, w21
  41c724:	b.ne	41c76c <_obstack_memory_used@@Base+0x7738>  // b.any
  41c728:	cbz	x22, 41c76c <_obstack_memory_used@@Base+0x7738>
  41c72c:	ldr	x13, [x24, #80]
  41c730:	cbz	x13, 41c76c <_obstack_memory_used@@Base+0x7738>
  41c734:	ldr	x14, [x13, #8]
  41c738:	cmp	x14, x8
  41c73c:	b.ne	41c76c <_obstack_memory_used@@Base+0x7738>  // b.any
  41c740:	mov	x14, x9
  41c744:	add	x15, x14, #0x1
  41c748:	cmp	x15, #0x1
  41c74c:	b.lt	41c914 <_obstack_memory_used@@Base+0x78e0>  // b.tstop
  41c750:	ldr	x15, [x13, #16]
  41c754:	ldr	x16, [x22, #16]
  41c758:	ldr	x15, [x15, x14, lsl #3]
  41c75c:	ldr	x16, [x16, x14, lsl #3]
  41c760:	sub	x14, x14, #0x1
  41c764:	cmp	x15, x16
  41c768:	b.eq	41c744 <_obstack_memory_used@@Base+0x7710>  // b.none
  41c76c:	add	x12, x12, #0x1
  41c770:	cmp	x12, x10
  41c774:	b.lt	41c708 <_obstack_memory_used@@Base+0x76d4>  // b.tstop
  41c778:	mov	w0, #0x70                  	// #112
  41c77c:	mov	w1, #0x1                   	// #1
  41c780:	bl	4025d0 <calloc@plt>
  41c784:	cbz	x0, 41c8fc <_obstack_memory_used@@Base+0x78c8>
  41c788:	add	x25, x0, #0x8
  41c78c:	mov	x24, x0
  41c790:	mov	x0, x25
  41c794:	mov	x1, x22
  41c798:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41c79c:	cbnz	w0, 41c934 <_obstack_memory_used@@Base+0x7900>
  41c7a0:	ldrb	w8, [x24, #104]
  41c7a4:	str	x25, [x24, #80]
  41c7a8:	bfxil	w8, w21, #0, #4
  41c7ac:	strb	w8, [x24, #104]
  41c7b0:	ldr	x8, [x22, #8]
  41c7b4:	cmp	x8, #0x1
  41c7b8:	b.lt	41c8e0 <_obstack_memory_used@@Base+0x78ac>  // b.tstop
  41c7bc:	mov	x26, xzr
  41c7c0:	mov	x8, xzr
  41c7c4:	ldr	x9, [x22, #16]
  41c7c8:	ldr	x10, [x20]
  41c7cc:	ldr	x9, [x9, x26, lsl #3]
  41c7d0:	add	x9, x10, x9, lsl #4
  41c7d4:	ldr	w27, [x9, #8]
  41c7d8:	and	w9, w27, #0x3ffff
  41c7dc:	cmp	w9, #0x1
  41c7e0:	b.eq	41c8d0 <_obstack_memory_used@@Base+0x789c>  // b.none
  41c7e4:	ldrb	w10, [x24, #104]
  41c7e8:	lsr	w12, w27, #15
  41c7ec:	and	w11, w27, #0xff
  41c7f0:	and	w12, w12, #0x20
  41c7f4:	and	w9, w27, #0x3ff00
  41c7f8:	orr	w10, w10, w12
  41c7fc:	cmp	w11, #0x2
  41c800:	strb	w10, [x24, #104]
  41c804:	b.eq	41c818 <_obstack_memory_used@@Base+0x77e4>  // b.none
  41c808:	cmp	w11, #0x4
  41c80c:	b.ne	41c824 <_obstack_memory_used@@Base+0x77f0>  // b.any
  41c810:	mov	w11, #0x40                  	// #64
  41c814:	b	41c81c <_obstack_memory_used@@Base+0x77e8>
  41c818:	mov	w11, #0x10                  	// #16
  41c81c:	orr	w10, w10, w11
  41c820:	strb	w10, [x24, #104]
  41c824:	cbz	w9, 41c8d0 <_obstack_memory_used@@Base+0x789c>
  41c828:	ldr	x9, [x24, #80]
  41c82c:	cmp	x9, x25
  41c830:	b.eq	41c83c <_obstack_memory_used@@Base+0x7808>  // b.none
  41c834:	tbz	w21, #0, 41c86c <_obstack_memory_used@@Base+0x7838>
  41c838:	b	41c870 <_obstack_memory_used@@Base+0x783c>
  41c83c:	mov	w0, #0x18                  	// #24
  41c840:	bl	4024e0 <malloc@plt>
  41c844:	cbz	x0, 41c8f4 <_obstack_memory_used@@Base+0x78c0>
  41c848:	mov	x1, x22
  41c84c:	str	x0, [x24, #80]
  41c850:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41c854:	cbnz	w0, 41c8f4 <_obstack_memory_used@@Base+0x78c0>
  41c858:	ldrb	w9, [x24, #104]
  41c85c:	mov	x8, xzr
  41c860:	orr	w9, w9, #0x80
  41c864:	strb	w9, [x24, #104]
  41c868:	tbnz	w21, #0, 41c870 <_obstack_memory_used@@Base+0x783c>
  41c86c:	tbnz	w27, #8, 41c888 <_obstack_memory_used@@Base+0x7854>
  41c870:	tbz	w21, #0, 41c878 <_obstack_memory_used@@Base+0x7844>
  41c874:	tbnz	w27, #9, 41c888 <_obstack_memory_used@@Base+0x7854>
  41c878:	tbnz	w21, #1, 41c880 <_obstack_memory_used@@Base+0x784c>
  41c87c:	tbnz	w27, #12, 41c888 <_obstack_memory_used@@Base+0x7854>
  41c880:	tbnz	w21, #2, 41c8d0 <_obstack_memory_used@@Base+0x789c>
  41c884:	tbz	w27, #14, 41c8d0 <_obstack_memory_used@@Base+0x789c>
  41c888:	subs	x9, x26, x8
  41c88c:	b.mi	41c8cc <_obstack_memory_used@@Base+0x7898>  // b.first
  41c890:	ldr	x10, [x24, #16]
  41c894:	cmp	x10, x9
  41c898:	b.le	41c8cc <_obstack_memory_used@@Base+0x7898>
  41c89c:	sub	x10, x10, #0x1
  41c8a0:	cmp	x10, x9
  41c8a4:	str	x10, [x24, #16]
  41c8a8:	b.le	41c8cc <_obstack_memory_used@@Base+0x7898>
  41c8ac:	ldr	x10, [x24, #24]
  41c8b0:	add	x11, x10, x9, lsl #3
  41c8b4:	ldr	x12, [x11, #8]
  41c8b8:	add	x9, x9, #0x1
  41c8bc:	str	x12, [x11]
  41c8c0:	ldr	x11, [x24, #16]
  41c8c4:	cmp	x9, x11
  41c8c8:	b.lt	41c8b0 <_obstack_memory_used@@Base+0x787c>  // b.tstop
  41c8cc:	add	x8, x8, #0x1
  41c8d0:	ldr	x9, [x22, #8]
  41c8d4:	add	x26, x26, #0x1
  41c8d8:	cmp	x26, x9
  41c8dc:	b.lt	41c7c4 <_obstack_memory_used@@Base+0x7790>  // b.tstop
  41c8e0:	mov	x0, x20
  41c8e4:	mov	x1, x24
  41c8e8:	mov	x2, x23
  41c8ec:	bl	41c940 <_obstack_memory_used@@Base+0x790c>
  41c8f0:	cbz	w0, 41c914 <_obstack_memory_used@@Base+0x78e0>
  41c8f4:	mov	x0, x24
  41c8f8:	bl	418178 <_obstack_memory_used@@Base+0x3144>
  41c8fc:	mov	x24, xzr
  41c900:	mov	w8, #0xc                   	// #12
  41c904:	str	w8, [x19]
  41c908:	b	41c914 <_obstack_memory_used@@Base+0x78e0>
  41c90c:	mov	x24, xzr
  41c910:	str	wzr, [x19]
  41c914:	mov	x0, x24
  41c918:	ldp	x20, x19, [sp, #80]
  41c91c:	ldp	x22, x21, [sp, #64]
  41c920:	ldp	x24, x23, [sp, #48]
  41c924:	ldp	x26, x25, [sp, #32]
  41c928:	ldr	x27, [sp, #16]
  41c92c:	ldp	x29, x30, [sp], #96
  41c930:	ret
  41c934:	mov	x0, x24
  41c938:	bl	402770 <free@plt>
  41c93c:	b	41c8fc <_obstack_memory_used@@Base+0x78c8>
  41c940:	stp	x29, x30, [sp, #-64]!
  41c944:	stp	x24, x23, [sp, #16]
  41c948:	stp	x22, x21, [sp, #32]
  41c94c:	stp	x20, x19, [sp, #48]
  41c950:	ldr	x23, [x1, #16]
  41c954:	mov	x21, x0
  41c958:	mov	x22, x1
  41c95c:	mov	x29, sp
  41c960:	lsl	x0, x23, #3
  41c964:	mov	x20, x2
  41c968:	mov	x19, x1
  41c96c:	str	x2, [x1]
  41c970:	str	x23, [x22, #32]!
  41c974:	str	xzr, [x1, #40]
  41c978:	bl	4024e0 <malloc@plt>
  41c97c:	str	x0, [x19, #48]
  41c980:	cbz	x0, 41ca40 <_obstack_memory_used@@Base+0x7a0c>
  41c984:	cmp	x23, #0x1
  41c988:	b.lt	41c9c4 <_obstack_memory_used@@Base+0x7990>  // b.tstop
  41c98c:	mov	x24, xzr
  41c990:	ldr	x8, [x19, #24]
  41c994:	ldr	x1, [x8, x24, lsl #3]
  41c998:	ldr	x8, [x21]
  41c99c:	add	x8, x8, x1, lsl #4
  41c9a0:	ldrb	w8, [x8, #8]
  41c9a4:	tbnz	w8, #3, 41c9b8 <_obstack_memory_used@@Base+0x7984>
  41c9a8:	mov	x0, x22
  41c9ac:	bl	41c54c <_obstack_memory_used@@Base+0x7518>
  41c9b0:	tbz	w0, #0, 41ca40 <_obstack_memory_used@@Base+0x7a0c>
  41c9b4:	ldr	x23, [x19, #16]
  41c9b8:	add	x24, x24, #0x1
  41c9bc:	cmp	x24, x23
  41c9c0:	b.lt	41c990 <_obstack_memory_used@@Base+0x795c>  // b.tstop
  41c9c4:	ldr	x9, [x21, #136]
  41c9c8:	ldr	x8, [x21, #64]
  41c9cc:	mov	w11, #0x18                  	// #24
  41c9d0:	and	x10, x9, x20
  41c9d4:	madd	x20, x10, x11, x8
  41c9d8:	mov	x21, x20
  41c9dc:	ldr	x11, [x21, #8]!
  41c9e0:	ldr	x9, [x20]
  41c9e4:	cmp	x11, x9
  41c9e8:	b.le	41ca0c <_obstack_memory_used@@Base+0x79d8>
  41c9ec:	mov	w11, #0x18                  	// #24
  41c9f0:	madd	x8, x10, x11, x8
  41c9f4:	ldr	x8, [x8, #16]
  41c9f8:	mov	w0, wzr
  41c9fc:	add	x10, x9, #0x1
  41ca00:	str	x10, [x20]
  41ca04:	str	x19, [x8, x9, lsl #3]
  41ca08:	b	41ca44 <_obstack_memory_used@@Base+0x7a10>
  41ca0c:	mov	w11, #0x18                  	// #24
  41ca10:	madd	x22, x10, x11, x8
  41ca14:	ldr	x0, [x22, #16]!
  41ca18:	lsl	x8, x9, #1
  41ca1c:	add	x23, x8, #0x2
  41ca20:	lsl	x1, x23, #3
  41ca24:	bl	402610 <realloc@plt>
  41ca28:	cbz	x0, 41ca40 <_obstack_memory_used@@Base+0x7a0c>
  41ca2c:	str	x0, [x22]
  41ca30:	str	x23, [x21]
  41ca34:	ldr	x9, [x20]
  41ca38:	mov	x8, x0
  41ca3c:	b	41c9f8 <_obstack_memory_used@@Base+0x79c4>
  41ca40:	mov	w0, #0xc                   	// #12
  41ca44:	ldp	x20, x19, [sp, #48]
  41ca48:	ldp	x22, x21, [sp, #32]
  41ca4c:	ldp	x24, x23, [sp, #16]
  41ca50:	ldp	x29, x30, [sp], #64
  41ca54:	ret
  41ca58:	sub	sp, sp, #0x70
  41ca5c:	stp	x29, x30, [sp, #32]
  41ca60:	str	x25, [sp, #48]
  41ca64:	stp	x24, x23, [sp, #64]
  41ca68:	stp	x22, x21, [sp, #80]
  41ca6c:	stp	x20, x19, [sp, #96]
  41ca70:	mov	x9, x0
  41ca74:	ldr	x8, [x9, #40]!
  41ca78:	mov	x19, x0
  41ca7c:	mov	x20, x1
  41ca80:	add	x29, sp, #0x20
  41ca84:	cmp	x8, x1
  41ca88:	b.le	41cbe0 <_obstack_memory_used@@Base+0x7bac>
  41ca8c:	ldr	w8, [x19, #144]
  41ca90:	cmp	w8, #0x2
  41ca94:	b.lt	41ca9c <_obstack_memory_used@@Base+0x7a68>  // b.tstop
  41ca98:	str	xzr, [x19, #32]
  41ca9c:	ldr	x10, [x19, #80]
  41caa0:	ldr	x11, [x19, #96]
  41caa4:	strb	wzr, [x19, #140]
  41caa8:	tst	w2, #0x1
  41caac:	str	x10, [x19, #88]
  41cab0:	str	x11, [x19, #104]
  41cab4:	stp	xzr, xzr, [x9]
  41cab8:	str	xzr, [x9, #16]
  41cabc:	ldrb	w9, [x19, #139]
  41cac0:	mov	w10, #0x4                   	// #4
  41cac4:	mov	w11, #0x6                   	// #6
  41cac8:	mov	x8, xzr
  41cacc:	csel	w10, w11, w10, eq  // eq = none
  41cad0:	mov	x23, x20
  41cad4:	str	w10, [x19, #112]
  41cad8:	cbnz	w9, 41caec <_obstack_memory_used@@Base+0x7ab8>
  41cadc:	ldr	x9, [x19]
  41cae0:	mov	x8, xzr
  41cae4:	mov	x23, x20
  41cae8:	str	x9, [x19, #8]
  41caec:	cbz	x23, 41cb64 <_obstack_memory_used@@Base+0x7b30>
  41caf0:	ldr	x10, [x19, #56]
  41caf4:	cmp	x23, x10
  41caf8:	b.ge	41cbec <_obstack_memory_used@@Base+0x7bb8>  // b.tcont
  41cafc:	ldrb	w8, [x19, #140]
  41cb00:	cbnz	w8, 41cd40 <_obstack_memory_used@@Base+0x7d0c>
  41cb04:	sub	x1, x23, #0x1
  41cb08:	mov	x0, x19
  41cb0c:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41cb10:	ldr	w8, [x19, #144]
  41cb14:	str	w0, [x19, #112]
  41cb18:	cmp	w8, #0x2
  41cb1c:	b.lt	41cb38 <_obstack_memory_used@@Base+0x7b04>  // b.tstop
  41cb20:	ldr	x8, [x19, #48]
  41cb24:	ldr	x0, [x19, #16]
  41cb28:	sub	x8, x8, x23
  41cb2c:	add	x1, x0, x23, lsl #2
  41cb30:	lsl	x2, x8, #2
  41cb34:	bl	402340 <memmove@plt>
  41cb38:	ldrb	w8, [x19, #139]
  41cb3c:	cbnz	w8, 41ce28 <_obstack_memory_used@@Base+0x7df4>
  41cb40:	ldr	q0, [x19, #48]
  41cb44:	dup	v1.2d, x23
  41cb48:	sub	v0.2d, v0.2d, v1.2d
  41cb4c:	str	q0, [x19, #48]
  41cb50:	ldrb	w8, [x19, #139]
  41cb54:	cbnz	w8, 41cb64 <_obstack_memory_used@@Base+0x7b30>
  41cb58:	ldr	x8, [x19, #8]
  41cb5c:	add	x8, x8, x23
  41cb60:	str	x8, [x19, #8]
  41cb64:	ldr	x8, [x19, #88]
  41cb68:	ldr	x9, [x19, #104]
  41cb6c:	ldr	w10, [x19, #144]
  41cb70:	str	x20, [x19, #40]
  41cb74:	sub	x8, x8, x23
  41cb78:	sub	x9, x9, x23
  41cb7c:	cmp	w10, #0x2
  41cb80:	str	x8, [x19, #88]
  41cb84:	str	x9, [x19, #104]
  41cb88:	b.lt	41cba4 <_obstack_memory_used@@Base+0x7b70>  // b.tstop
  41cb8c:	ldrb	w8, [x19, #136]
  41cb90:	cbz	w8, 41cbb4 <_obstack_memory_used@@Base+0x7b80>
  41cb94:	mov	x0, x19
  41cb98:	bl	418340 <_obstack_memory_used@@Base+0x330c>
  41cb9c:	cbnz	w0, 41cbc4 <_obstack_memory_used@@Base+0x7b90>
  41cba0:	b	41cbbc <_obstack_memory_used@@Base+0x7b88>
  41cba4:	ldrb	w9, [x19, #139]
  41cba8:	cbnz	w9, 41ceb8 <_obstack_memory_used@@Base+0x7e84>
  41cbac:	str	x8, [x19, #48]
  41cbb0:	b	41cbbc <_obstack_memory_used@@Base+0x7b88>
  41cbb4:	mov	x0, x19
  41cbb8:	bl	4188b8 <_obstack_memory_used@@Base+0x3884>
  41cbbc:	mov	w0, wzr
  41cbc0:	str	xzr, [x19, #72]
  41cbc4:	ldp	x20, x19, [sp, #96]
  41cbc8:	ldp	x22, x21, [sp, #80]
  41cbcc:	ldp	x24, x23, [sp, #64]
  41cbd0:	ldr	x25, [sp, #48]
  41cbd4:	ldp	x29, x30, [sp, #32]
  41cbd8:	add	sp, sp, #0x70
  41cbdc:	ret
  41cbe0:	sub	x23, x20, x8
  41cbe4:	cbnz	x23, 41caf0 <_obstack_memory_used@@Base+0x7abc>
  41cbe8:	b	41cb64 <_obstack_memory_used@@Base+0x7b30>
  41cbec:	ldrb	w11, [x19, #140]
  41cbf0:	ldr	x9, [x19, #48]
  41cbf4:	cbnz	w11, 41cffc <_obstack_memory_used@@Base+0x7fc8>
  41cbf8:	ldr	w11, [x19, #144]
  41cbfc:	str	xzr, [x19, #48]
  41cc00:	cmp	w11, #0x2
  41cc04:	b.lt	41cecc <_obstack_memory_used@@Base+0x7e98>  // b.tstop
  41cc08:	ldrb	w12, [x19, #137]
  41cc0c:	cbz	w12, 41ccc4 <_obstack_memory_used@@Base+0x7c90>
  41cc10:	ldr	x14, [x19]
  41cc14:	sub	x11, x23, x11
  41cc18:	add	x12, x14, x8
  41cc1c:	add	x11, x12, x11
  41cc20:	cmp	x11, x14
  41cc24:	add	x24, x12, x23
  41cc28:	csel	x13, x14, x11, cc  // cc = lo, ul, last
  41cc2c:	add	x11, x14, x23
  41cc30:	add	x14, x11, x8
  41cc34:	sub	x14, x14, #0x1
  41cc38:	cmp	x14, x13
  41cc3c:	b.cc	41ccc4 <_obstack_memory_used@@Base+0x7c90>  // b.lo, b.ul, b.last
  41cc40:	ldrb	w14, [x14]
  41cc44:	sub	x11, x11, #0x1
  41cc48:	and	w14, w14, #0xc0
  41cc4c:	cmp	w14, #0x80
  41cc50:	b.eq	41cc30 <_obstack_memory_used@@Base+0x7bfc>  // b.none
  41cc54:	ldr	x10, [x19, #88]
  41cc58:	mov	x21, x9
  41cc5c:	ldr	x9, [x19, #120]
  41cc60:	add	x25, x11, x8
  41cc64:	add	x10, x12, x10
  41cc68:	mov	w22, w2
  41cc6c:	sub	x2, x10, x25
  41cc70:	mov	x1, x25
  41cc74:	cbnz	x9, 41d068 <_obstack_memory_used@@Base+0x8034>
  41cc78:	sub	x0, x29, #0x4
  41cc7c:	add	x3, x29, #0x18
  41cc80:	str	xzr, [x29, #24]
  41cc84:	bl	414ca4 <wcrtomb@plt+0x122e4>
  41cc88:	sub	x8, x24, x25
  41cc8c:	subs	x9, x0, x8
  41cc90:	mov	w8, #0xffffffff            	// #-1
  41cc94:	b.cc	41ccac <_obstack_memory_used@@Base+0x7c78>  // b.lo, b.ul, b.last
  41cc98:	cmn	x0, #0x3
  41cc9c:	b.hi	41ccac <_obstack_memory_used@@Base+0x7c78>  // b.pmore
  41cca0:	str	xzr, [x19, #32]
  41cca4:	str	x9, [x19, #48]
  41cca8:	ldur	w8, [x29, #-4]
  41ccac:	cmn	w8, #0x1
  41ccb0:	b.ne	41cf5c <_obstack_memory_used@@Base+0x7f28>  // b.any
  41ccb4:	ldr	x8, [x19, #40]
  41ccb8:	ldr	x10, [x19, #56]
  41ccbc:	mov	w2, w22
  41ccc0:	mov	x9, x21
  41ccc4:	add	x24, x10, x8
  41ccc8:	subs	x21, x24, x20
  41cccc:	b.ge	41cf48 <_obstack_memory_used@@Base+0x7f14>  // b.tcont
  41ccd0:	add	x22, x19, #0x20
  41ccd4:	str	x9, [sp, #8]
  41ccd8:	str	w2, [sp, #4]
  41ccdc:	ldr	x8, [x19, #80]
  41cce0:	ldr	x9, [x19]
  41cce4:	ldr	x25, [x19, #32]
  41cce8:	add	x0, x29, #0x18
  41ccec:	sub	x21, x8, x24
  41ccf0:	add	x1, x9, x24
  41ccf4:	mov	x2, x21
  41ccf8:	mov	x3, x22
  41ccfc:	bl	414ca4 <wcrtomb@plt+0x122e4>
  41cd00:	sub	x8, x0, #0x1
  41cd04:	cmn	x8, #0x3
  41cd08:	b.cs	41cd20 <_obstack_memory_used@@Base+0x7cec>  // b.hs, b.nlast
  41cd0c:	ldr	w8, [x29, #24]
  41cd10:	add	x24, x0, x24
  41cd14:	subs	x21, x24, x20
  41cd18:	b.lt	41ccdc <_obstack_memory_used@@Base+0x7ca8>  // b.tstop
  41cd1c:	b	41cf50 <_obstack_memory_used@@Base+0x7f1c>
  41cd20:	mov	w8, wzr
  41cd24:	cbz	x21, 41cd34 <_obstack_memory_used@@Base+0x7d00>
  41cd28:	cbz	x0, 41cd34 <_obstack_memory_used@@Base+0x7d00>
  41cd2c:	ldr	x8, [x19]
  41cd30:	ldrb	w8, [x8, x24]
  41cd34:	str	x25, [x22]
  41cd38:	mov	w0, #0x1                   	// #1
  41cd3c:	b	41cd10 <_obstack_memory_used@@Base+0x7cdc>
  41cd40:	ldr	x22, [x19, #48]
  41cd44:	ldr	x21, [x19, #24]
  41cd48:	mov	x8, xzr
  41cd4c:	mov	x10, x22
  41cd50:	add	x9, x8, x10
  41cd54:	cmp	x9, #0x0
  41cd58:	cinc	x9, x9, lt  // lt = tstop
  41cd5c:	asr	x9, x9, #1
  41cd60:	ldr	x11, [x21, x9, lsl #3]
  41cd64:	mov	x12, x9
  41cd68:	cmp	x11, x23
  41cd6c:	b.gt	41cd7c <_obstack_memory_used@@Base+0x7d48>
  41cd70:	b.ge	41cd88 <_obstack_memory_used@@Base+0x7d54>  // b.tcont
  41cd74:	add	x8, x9, #0x1
  41cd78:	mov	x12, x10
  41cd7c:	cmp	x8, x12
  41cd80:	mov	x10, x12
  41cd84:	b.lt	41cd50 <_obstack_memory_used@@Base+0x7d1c>  // b.tstop
  41cd88:	cmp	x11, x23
  41cd8c:	cinc	x24, x9, lt  // lt = tstop
  41cd90:	sub	x1, x24, #0x1
  41cd94:	mov	x0, x19
  41cd98:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41cd9c:	subs	x8, x22, x23
  41cda0:	str	w0, [x19, #112]
  41cda4:	b.le	41ce40 <_obstack_memory_used@@Base+0x7e0c>
  41cda8:	cmp	x24, x23
  41cdac:	b.ne	41ce40 <_obstack_memory_used@@Base+0x7e0c>  // b.any
  41cdb0:	ldr	x9, [x21, x23, lsl #3]
  41cdb4:	cmp	x9, x23
  41cdb8:	b.ne	41ce40 <_obstack_memory_used@@Base+0x7e0c>  // b.any
  41cdbc:	ldr	x0, [x19, #16]
  41cdc0:	lsl	x2, x8, #2
  41cdc4:	add	x1, x0, x23, lsl #2
  41cdc8:	bl	402340 <memmove@plt>
  41cdcc:	ldr	x0, [x19, #8]
  41cdd0:	ldr	x8, [x19, #48]
  41cdd4:	add	x1, x0, x23
  41cdd8:	sub	x2, x8, x23
  41cddc:	bl	402340 <memmove@plt>
  41cde0:	ldr	q0, [x19, #48]
  41cde4:	dup	v1.2d, x23
  41cde8:	sub	v0.2d, v0.2d, v1.2d
  41cdec:	fmov	x8, d0
  41cdf0:	cmp	x8, #0x1
  41cdf4:	str	q0, [x19, #48]
  41cdf8:	b.lt	41cb50 <_obstack_memory_used@@Base+0x7b1c>  // b.tstop
  41cdfc:	ldr	x9, [x19, #24]
  41ce00:	mov	x8, xzr
  41ce04:	add	x10, x9, x23, lsl #3
  41ce08:	ldr	x11, [x10, x8, lsl #3]
  41ce0c:	sub	x11, x11, x23
  41ce10:	str	x11, [x9, x8, lsl #3]
  41ce14:	ldr	x11, [x19, #48]
  41ce18:	add	x8, x8, #0x1
  41ce1c:	cmp	x8, x11
  41ce20:	b.lt	41ce08 <_obstack_memory_used@@Base+0x7dd4>  // b.tstop
  41ce24:	b	41cb50 <_obstack_memory_used@@Base+0x7b1c>
  41ce28:	ldr	x0, [x19, #8]
  41ce2c:	ldr	x8, [x19, #48]
  41ce30:	add	x1, x0, x23
  41ce34:	sub	x2, x8, x23
  41ce38:	bl	402340 <memmove@plt>
  41ce3c:	b	41cb40 <_obstack_memory_used@@Base+0x7b0c>
  41ce40:	ldr	x9, [x19, #96]
  41ce44:	ldr	x8, [x19, #80]
  41ce48:	sub	x10, x23, x20
  41ce4c:	strb	wzr, [x19, #140]
  41ce50:	add	x9, x10, x9
  41ce54:	add	x8, x10, x8
  41ce58:	str	x9, [x19, #104]
  41ce5c:	sub	x9, x21, #0x8
  41ce60:	str	x8, [x19, #88]
  41ce64:	mov	x8, x24
  41ce68:	subs	x24, x24, #0x1
  41ce6c:	b.lt	41ce7c <_obstack_memory_used@@Base+0x7e48>  // b.tstop
  41ce70:	ldr	x10, [x9, x8, lsl #3]
  41ce74:	cmp	x10, x23
  41ce78:	b.eq	41ce64 <_obstack_memory_used@@Base+0x7e30>  // b.none
  41ce7c:	cmp	x8, x22
  41ce80:	b.ge	41cea4 <_obstack_memory_used@@Base+0x7e70>  // b.tcont
  41ce84:	ldr	x9, [x19, #16]
  41ce88:	ldr	w10, [x9, x8, lsl #2]
  41ce8c:	cmn	w10, #0x1
  41ce90:	b.ne	41cea4 <_obstack_memory_used@@Base+0x7e70>  // b.any
  41ce94:	add	x8, x8, #0x1
  41ce98:	cmp	x22, x8
  41ce9c:	b.ne	41ce88 <_obstack_memory_used@@Base+0x7e54>  // b.any
  41cea0:	b	41ceac <_obstack_memory_used@@Base+0x7e78>
  41cea4:	cmp	x8, x22
  41cea8:	b.ne	41cf0c <_obstack_memory_used@@Base+0x7ed8>  // b.any
  41ceac:	mov	x8, xzr
  41ceb0:	str	xzr, [x19, #48]
  41ceb4:	b	41cff4 <_obstack_memory_used@@Base+0x7fc0>
  41ceb8:	ldrb	w8, [x19, #136]
  41cebc:	cbz	w8, 41cf80 <_obstack_memory_used@@Base+0x7f4c>
  41cec0:	mov	x0, x19
  41cec4:	bl	418840 <_obstack_memory_used@@Base+0x380c>
  41cec8:	b	41cbbc <_obstack_memory_used@@Base+0x7b88>
  41cecc:	ldr	x9, [x19]
  41ced0:	add	x8, x23, x8
  41ced4:	add	x8, x8, x9
  41ced8:	ldr	x9, [x19, #120]
  41cedc:	ldurb	w8, [x8, #-1]
  41cee0:	str	xzr, [x19, #56]
  41cee4:	cbz	x9, 41ceec <_obstack_memory_used@@Base+0x7eb8>
  41cee8:	ldrb	w8, [x9, x8]
  41ceec:	ldr	x9, [x19, #128]
  41cef0:	lsr	x10, x8, #3
  41cef4:	and	x10, x10, #0x18
  41cef8:	ldr	x9, [x9, x10]
  41cefc:	lsr	x9, x9, x8
  41cf00:	tbz	w9, #0, 41cf94 <_obstack_memory_used@@Base+0x7f60>
  41cf04:	mov	w8, #0x1                   	// #1
  41cf08:	b	41cfcc <_obstack_memory_used@@Base+0x7f98>
  41cf0c:	ldr	x8, [x21, x8, lsl #3]
  41cf10:	subs	x21, x8, x23
  41cf14:	str	x21, [x19, #48]
  41cf18:	b.eq	41cfc0 <_obstack_memory_used@@Base+0x7f8c>  // b.none
  41cf1c:	cmp	x21, #0x1
  41cf20:	b.lt	41cf34 <_obstack_memory_used@@Base+0x7f00>  // b.tstop
  41cf24:	ldr	x0, [x19, #16]
  41cf28:	lsl	x2, x21, #2
  41cf2c:	mov	w1, #0xff                  	// #255
  41cf30:	bl	4025b0 <memset@plt>
  41cf34:	ldr	x0, [x19, #8]
  41cf38:	mov	w1, #0xff                  	// #255
  41cf3c:	mov	x2, x21
  41cf40:	bl	4025b0 <memset@plt>
  41cf44:	b	41cff0 <_obstack_memory_used@@Base+0x7fbc>
  41cf48:	str	x21, [x19, #48]
  41cf4c:	b	41cfdc <_obstack_memory_used@@Base+0x7fa8>
  41cf50:	cmn	w8, #0x1
  41cf54:	str	x21, [x19, #48]
  41cf58:	b.eq	41cfd4 <_obstack_memory_used@@Base+0x7fa0>  // b.none
  41cf5c:	ldrb	w9, [x19, #142]
  41cf60:	cbnz	w9, 41d044 <_obstack_memory_used@@Base+0x8010>
  41cf64:	cmp	w8, #0xa
  41cf68:	b.ne	41cfb0 <_obstack_memory_used@@Base+0x7f7c>  // b.any
  41cf6c:	ldrb	w8, [x19, #141]
  41cf70:	cmp	w8, #0x0
  41cf74:	cset	w8, ne  // ne = any
  41cf78:	lsl	w9, w8, #1
  41cf7c:	b	41cfb4 <_obstack_memory_used@@Base+0x7f80>
  41cf80:	ldr	x8, [x19, #120]
  41cf84:	cbz	x8, 41cbbc <_obstack_memory_used@@Base+0x7b88>
  41cf88:	mov	x0, x19
  41cf8c:	bl	418a8c <_obstack_memory_used@@Base+0x3a58>
  41cf90:	b	41cbbc <_obstack_memory_used@@Base+0x7b88>
  41cf94:	cmp	w8, #0xa
  41cf98:	b.ne	41cfc8 <_obstack_memory_used@@Base+0x7f94>  // b.any
  41cf9c:	ldrb	w8, [x19, #141]
  41cfa0:	cmp	w8, #0x0
  41cfa4:	cset	w8, ne  // ne = any
  41cfa8:	lsl	w8, w8, #1
  41cfac:	b	41cfcc <_obstack_memory_used@@Base+0x7f98>
  41cfb0:	mov	w9, wzr
  41cfb4:	ldr	x21, [x19, #48]
  41cfb8:	str	w9, [x19, #112]
  41cfbc:	b	41cfec <_obstack_memory_used@@Base+0x7fb8>
  41cfc0:	mov	x8, xzr
  41cfc4:	b	41cff4 <_obstack_memory_used@@Base+0x7fc0>
  41cfc8:	mov	w8, wzr
  41cfcc:	str	w8, [x19, #112]
  41cfd0:	b	41cb50 <_obstack_memory_used@@Base+0x7b1c>
  41cfd4:	ldr	w2, [sp, #4]
  41cfd8:	ldr	x9, [sp, #8]
  41cfdc:	sub	x1, x9, #0x1
  41cfe0:	mov	x0, x19
  41cfe4:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41cfe8:	str	w0, [x19, #112]
  41cfec:	cbnz	x21, 41d020 <_obstack_memory_used@@Base+0x7fec>
  41cff0:	ldr	x8, [x19, #48]
  41cff4:	str	x8, [x19, #56]
  41cff8:	b	41cb50 <_obstack_memory_used@@Base+0x7b1c>
  41cffc:	ldr	x11, [x19, #80]
  41d000:	ldr	x12, [x19, #96]
  41d004:	sub	x13, x23, x20
  41d008:	strb	wzr, [x19, #140]
  41d00c:	add	x11, x13, x11
  41d010:	add	x12, x13, x12
  41d014:	str	x11, [x19, #88]
  41d018:	str	x12, [x19, #104]
  41d01c:	b	41cbf8 <_obstack_memory_used@@Base+0x7bc4>
  41d020:	cmp	x21, #0x1
  41d024:	b.lt	41d038 <_obstack_memory_used@@Base+0x8004>  // b.tstop
  41d028:	ldr	x0, [x19, #16]
  41d02c:	lsl	x2, x21, #2
  41d030:	mov	w1, #0xff                  	// #255
  41d034:	bl	4025b0 <memset@plt>
  41d038:	ldrb	w8, [x19, #139]
  41d03c:	cbnz	w8, 41cf34 <_obstack_memory_used@@Base+0x7f00>
  41d040:	b	41cff0 <_obstack_memory_used@@Base+0x7fbc>
  41d044:	mov	w0, w8
  41d048:	mov	w21, w8
  41d04c:	bl	402860 <iswalnum@plt>
  41d050:	cmp	w21, #0x5f
  41d054:	mov	w9, #0x1                   	// #1
  41d058:	b.eq	41cfb4 <_obstack_memory_used@@Base+0x7f80>  // b.none
  41d05c:	mov	w8, w21
  41d060:	cbz	w0, 41cf64 <_obstack_memory_used@@Base+0x7f30>
  41d064:	b	41cfb4 <_obstack_memory_used@@Base+0x7f80>
  41d068:	cmp	x2, #0x6
  41d06c:	mov	w10, #0x6                   	// #6
  41d070:	csel	x10, x2, x10, lt  // lt = tstop
  41d074:	cmp	w10, #0x1
  41d078:	sub	x1, x29, #0xc
  41d07c:	b.lt	41cc78 <_obstack_memory_used@@Base+0x7c44>  // b.tstop
  41d080:	sxtw	x10, w10
  41d084:	sub	x12, x1, #0x1
  41d088:	add	x13, x8, x10
  41d08c:	add	x13, x11, x13
  41d090:	ldurb	w13, [x13, #-1]
  41d094:	sub	x1, x29, #0xc
  41d098:	ldrb	w13, [x9, x13]
  41d09c:	strb	w13, [x12, x10]
  41d0a0:	subs	x10, x10, #0x1
  41d0a4:	b.gt	41d088 <_obstack_memory_used@@Base+0x8054>
  41d0a8:	b	41cc78 <_obstack_memory_used@@Base+0x7c44>
  41d0ac:	stp	x29, x30, [sp, #-32]!
  41d0b0:	stp	x20, x19, [sp, #16]
  41d0b4:	mov	x8, x2
  41d0b8:	ldr	w2, [x0, #160]
  41d0bc:	mov	x20, x1
  41d0c0:	mov	x1, x8
  41d0c4:	mov	x29, sp
  41d0c8:	mov	x19, x0
  41d0cc:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41d0d0:	ldr	x9, [x20, #16]
  41d0d4:	cmp	x9, #0x1
  41d0d8:	b.lt	41d138 <_obstack_memory_used@@Base+0x8104>  // b.tstop
  41d0dc:	ldr	x8, [x19, #152]
  41d0e0:	ldr	x10, [x20, #24]
  41d0e4:	mov	x12, xzr
  41d0e8:	ldr	x11, [x8]
  41d0ec:	ldr	x8, [x10, x12, lsl #3]
  41d0f0:	add	x13, x11, x8, lsl #4
  41d0f4:	ldr	w13, [x13, #8]
  41d0f8:	and	w14, w13, #0xff
  41d0fc:	cmp	w14, #0x2
  41d100:	b.ne	41d12c <_obstack_memory_used@@Base+0x80f8>  // b.any
  41d104:	tst	w13, #0x3ff00
  41d108:	b.eq	41d13c <_obstack_memory_used@@Base+0x8108>  // b.none
  41d10c:	tbnz	w0, #0, 41d114 <_obstack_memory_used@@Base+0x80e0>
  41d110:	tbnz	w13, #10, 41d12c <_obstack_memory_used@@Base+0x80f8>
  41d114:	tbz	w0, #0, 41d11c <_obstack_memory_used@@Base+0x80e8>
  41d118:	tbnz	w13, #11, 41d12c <_obstack_memory_used@@Base+0x80f8>
  41d11c:	tbnz	w0, #1, 41d124 <_obstack_memory_used@@Base+0x80f0>
  41d120:	tbnz	w13, #13, 41d12c <_obstack_memory_used@@Base+0x80f8>
  41d124:	tbnz	w0, #3, 41d13c <_obstack_memory_used@@Base+0x8108>
  41d128:	tbz	w13, #15, 41d13c <_obstack_memory_used@@Base+0x8108>
  41d12c:	add	x12, x12, #0x1
  41d130:	cmp	x12, x9
  41d134:	b.lt	41d0ec <_obstack_memory_used@@Base+0x80b8>  // b.tstop
  41d138:	mov	x8, xzr
  41d13c:	ldp	x20, x19, [sp, #16]
  41d140:	mov	x0, x8
  41d144:	ldp	x29, x30, [sp], #32
  41d148:	ret
  41d14c:	stp	x29, x30, [sp, #-64]!
  41d150:	stp	x22, x21, [sp, #32]
  41d154:	stp	x20, x19, [sp, #48]
  41d158:	ldr	x8, [x0, #232]
  41d15c:	mov	x19, x0
  41d160:	str	x23, [sp, #16]
  41d164:	mov	x29, sp
  41d168:	cmp	x8, #0x1
  41d16c:	b.lt	41d1ec <_obstack_memory_used@@Base+0x81b8>  // b.tstop
  41d170:	mov	x22, xzr
  41d174:	ldr	x8, [x19, #248]
  41d178:	ldr	x20, [x8, x22, lsl #3]
  41d17c:	ldr	x8, [x20, #32]
  41d180:	cmp	x8, #0x1
  41d184:	b.lt	41d1b4 <_obstack_memory_used@@Base+0x8180>  // b.tstop
  41d188:	mov	x23, xzr
  41d18c:	ldr	x8, [x20, #40]
  41d190:	ldr	x21, [x8, x23, lsl #3]
  41d194:	ldr	x0, [x21, #32]
  41d198:	bl	402770 <free@plt>
  41d19c:	mov	x0, x21
  41d1a0:	bl	402770 <free@plt>
  41d1a4:	ldr	x8, [x20, #32]
  41d1a8:	add	x23, x23, #0x1
  41d1ac:	cmp	x23, x8
  41d1b0:	b.lt	41d18c <_obstack_memory_used@@Base+0x8158>  // b.tstop
  41d1b4:	ldr	x0, [x20, #40]
  41d1b8:	bl	402770 <free@plt>
  41d1bc:	ldr	x8, [x20, #16]
  41d1c0:	cbz	x8, 41d1d4 <_obstack_memory_used@@Base+0x81a0>
  41d1c4:	ldr	x0, [x8, #16]
  41d1c8:	bl	402770 <free@plt>
  41d1cc:	ldr	x0, [x20, #16]
  41d1d0:	bl	402770 <free@plt>
  41d1d4:	mov	x0, x20
  41d1d8:	bl	402770 <free@plt>
  41d1dc:	ldr	x8, [x19, #232]
  41d1e0:	add	x22, x22, #0x1
  41d1e4:	cmp	x22, x8
  41d1e8:	b.lt	41d174 <_obstack_memory_used@@Base+0x8140>  // b.tstop
  41d1ec:	str	xzr, [x19, #232]
  41d1f0:	str	xzr, [x19, #200]
  41d1f4:	ldp	x20, x19, [sp, #48]
  41d1f8:	ldp	x22, x21, [sp, #32]
  41d1fc:	ldr	x23, [sp, #16]
  41d200:	ldp	x29, x30, [sp], #64
  41d204:	ret
  41d208:	stp	x29, x30, [sp, #-96]!
  41d20c:	stp	x28, x27, [sp, #16]
  41d210:	stp	x26, x25, [sp, #32]
  41d214:	stp	x24, x23, [sp, #48]
  41d218:	stp	x22, x21, [sp, #64]
  41d21c:	stp	x20, x19, [sp, #80]
  41d220:	mov	x29, sp
  41d224:	sub	sp, sp, #0x70
  41d228:	adrp	x8, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41d22c:	add	x8, x8, #0xcd0
  41d230:	ldr	q0, [x8]
  41d234:	ldr	x8, [x8, #16]
  41d238:	ldr	x24, [x0]
  41d23c:	mov	x21, x3
  41d240:	mov	x22, x2
  41d244:	mov	x23, x1
  41d248:	stur	q0, [x29, #-64]
  41d24c:	stur	x8, [x29, #-48]
  41d250:	tbz	w4, #0, 41d26c <_obstack_memory_used@@Base+0x8238>
  41d254:	mov	w0, #0x60                  	// #96
  41d258:	bl	4024e0 <malloc@plt>
  41d25c:	stur	x0, [x29, #-48]
  41d260:	cbz	x0, 41d794 <_obstack_memory_used@@Base+0x8760>
  41d264:	sub	x19, x29, #0x40
  41d268:	b	41d270 <_obstack_memory_used@@Base+0x823c>
  41d26c:	mov	x19, xzr
  41d270:	ldr	x25, [x24, #144]
  41d274:	lsl	x20, x22, #4
  41d278:	cmp	x20, #0xfbf
  41d27c:	stp	xzr, xzr, [x29, #-32]
  41d280:	stur	xzr, [x29, #-16]
  41d284:	b.hi	41d2a4 <_obstack_memory_used@@Base+0x8270>  // b.pmore
  41d288:	add	x9, x20, #0xf
  41d28c:	mov	x8, sp
  41d290:	and	x9, x9, #0xfffffffffffffff0
  41d294:	sub	x0, x8, x9
  41d298:	mov	sp, x0
  41d29c:	stur	wzr, [x29, #-76]
  41d2a0:	b	41d2b8 <_obstack_memory_used@@Base+0x8284>
  41d2a4:	mov	x0, x20
  41d2a8:	bl	4024e0 <malloc@plt>
  41d2ac:	cbz	x0, 41d78c <_obstack_memory_used@@Base+0x8758>
  41d2b0:	mov	w8, #0x1                   	// #1
  41d2b4:	stur	w8, [x29, #-76]
  41d2b8:	mov	x1, x21
  41d2bc:	mov	x2, x20
  41d2c0:	stp	x20, x0, [x29, #-96]
  41d2c4:	bl	402320 <memcpy@plt>
  41d2c8:	ldp	x27, x8, [x21]
  41d2cc:	cmp	x27, x8
  41d2d0:	stur	x27, [x29, #-8]
  41d2d4:	b.le	41d2e0 <_obstack_memory_used@@Base+0x82ac>
  41d2d8:	mov	x0, xzr
  41d2dc:	b	41d714 <_obstack_memory_used@@Base+0x86e0>
  41d2e0:	add	x8, x21, #0x8
  41d2e4:	stur	x8, [x29, #-104]
  41d2e8:	stur	x24, [x29, #-72]
  41d2ec:	ldr	x8, [x24]
  41d2f0:	add	x8, x8, x25, lsl #4
  41d2f4:	ldr	w9, [x8, #8]
  41d2f8:	and	w10, w9, #0xff
  41d2fc:	cmp	w10, #0x9
  41d300:	b.eq	41d32c <_obstack_memory_used@@Base+0x82f8>  // b.none
  41d304:	cmp	w10, #0x8
  41d308:	b.ne	41d390 <_obstack_memory_used@@Base+0x835c>  // b.any
  41d30c:	ldr	x8, [x8]
  41d310:	add	x8, x8, #0x1
  41d314:	cmp	x8, x22
  41d318:	b.ge	41d390 <_obstack_memory_used@@Base+0x835c>  // b.tcont
  41d31c:	add	x8, x21, x8, lsl #4
  41d320:	mov	x9, #0xffffffffffffffff    	// #-1
  41d324:	stp	x27, x9, [x8]
  41d328:	b	41d390 <_obstack_memory_used@@Base+0x835c>
  41d32c:	ldr	x8, [x8]
  41d330:	add	x8, x8, #0x1
  41d334:	cmp	x8, x22
  41d338:	b.ge	41d390 <_obstack_memory_used@@Base+0x835c>  // b.tcont
  41d33c:	lsl	x10, x8, #4
  41d340:	ldr	x11, [x21, x10]
  41d344:	cmp	x11, x27
  41d348:	b.ge	41d360 <_obstack_memory_used@@Base+0x832c>  // b.tcont
  41d34c:	ldur	x0, [x29, #-88]
  41d350:	add	x8, x21, x8, lsl #4
  41d354:	str	x27, [x8, #8]
  41d358:	mov	x1, x21
  41d35c:	b	41d37c <_obstack_memory_used@@Base+0x8348>
  41d360:	tbz	w9, #19, 41d388 <_obstack_memory_used@@Base+0x8354>
  41d364:	ldur	x9, [x29, #-88]
  41d368:	ldr	x9, [x9, x10]
  41d36c:	cmn	x9, #0x1
  41d370:	b.eq	41d388 <_obstack_memory_used@@Base+0x8354>  // b.none
  41d374:	ldur	x1, [x29, #-88]
  41d378:	mov	x0, x21
  41d37c:	ldur	x2, [x29, #-96]
  41d380:	bl	402320 <memcpy@plt>
  41d384:	b	41d390 <_obstack_memory_used@@Base+0x835c>
  41d388:	add	x8, x21, x8, lsl #4
  41d38c:	str	x27, [x8, #8]
  41d390:	ldr	x8, [x21, #8]
  41d394:	cmp	x27, x8
  41d398:	b.ne	41d3f8 <_obstack_memory_used@@Base+0x83c4>  // b.any
  41d39c:	ldr	x8, [x23, #176]
  41d3a0:	cmp	x25, x8
  41d3a4:	b.ne	41d3f8 <_obstack_memory_used@@Base+0x83c4>  // b.any
  41d3a8:	cbz	x19, 41d758 <_obstack_memory_used@@Base+0x8724>
  41d3ac:	ldur	x9, [x29, #-104]
  41d3b0:	mov	x8, x22
  41d3b4:	ldur	x10, [x9, #-8]
  41d3b8:	tbnz	x10, #63, 41d3c8 <_obstack_memory_used@@Base+0x8394>
  41d3bc:	ldr	x10, [x9]
  41d3c0:	cmn	x10, #0x1
  41d3c4:	b.eq	41d3d8 <_obstack_memory_used@@Base+0x83a4>  // b.none
  41d3c8:	subs	x8, x8, #0x1
  41d3cc:	add	x9, x9, #0x10
  41d3d0:	b.ne	41d3b4 <_obstack_memory_used@@Base+0x8380>  // b.any
  41d3d4:	b	41d710 <_obstack_memory_used@@Base+0x86dc>
  41d3d8:	cbz	x8, 41d710 <_obstack_memory_used@@Base+0x86dc>
  41d3dc:	sub	x1, x29, #0x8
  41d3e0:	sub	x4, x29, #0x20
  41d3e4:	mov	x0, x19
  41d3e8:	mov	x2, x22
  41d3ec:	mov	x3, x21
  41d3f0:	bl	4205f8 <_obstack_memory_used@@Base+0xb5c4>
  41d3f4:	mov	x25, x0
  41d3f8:	ldr	x27, [x23, #152]
  41d3fc:	ldr	x8, [x27]
  41d400:	add	x9, x8, x25, lsl #4
  41d404:	ldr	w9, [x9, #8]
  41d408:	tbnz	w9, #3, 41d4ac <_obstack_memory_used@@Base+0x8478>
  41d40c:	tbnz	w9, #20, 41d524 <_obstack_memory_used@@Base+0x84f0>
  41d410:	and	w9, w9, #0xff
  41d414:	cmp	w9, #0x4
  41d418:	b.ne	41d548 <_obstack_memory_used@@Base+0x8514>  // b.any
  41d41c:	lsl	x9, x25, #4
  41d420:	ldr	x8, [x8, x9]
  41d424:	add	x8, x8, #0x1
  41d428:	cmp	x8, x22
  41d42c:	b.ge	41d600 <_obstack_memory_used@@Base+0x85cc>  // b.tcont
  41d430:	add	x9, x21, x8, lsl #4
  41d434:	ldp	x9, x10, [x9]
  41d438:	sub	x28, x10, x9
  41d43c:	cbz	x19, 41d608 <_obstack_memory_used@@Base+0x85d4>
  41d440:	cmp	x8, x22
  41d444:	b.ge	41d6e0 <_obstack_memory_used@@Base+0x86ac>  // b.tcont
  41d448:	lsl	x9, x8, #4
  41d44c:	ldr	x9, [x21, x9]
  41d450:	cmn	x9, #0x1
  41d454:	b.eq	41d6e0 <_obstack_memory_used@@Base+0x86ac>  // b.none
  41d458:	add	x8, x21, x8, lsl #4
  41d45c:	ldr	x8, [x8, #8]
  41d460:	cmn	x8, #0x1
  41d464:	b.eq	41d6e0 <_obstack_memory_used@@Base+0x86ac>  // b.none
  41d468:	cbz	x28, 41d628 <_obstack_memory_used@@Base+0x85f4>
  41d46c:	ldr	x8, [x23, #48]
  41d470:	ldur	x20, [x29, #-8]
  41d474:	sub	x8, x8, x20
  41d478:	cmp	x8, x28
  41d47c:	b.lt	41d6e0 <_obstack_memory_used@@Base+0x86ac>  // b.tstop
  41d480:	ldr	x8, [x23, #8]
  41d484:	mov	x2, x28
  41d488:	add	x0, x8, x9
  41d48c:	add	x1, x8, x20
  41d490:	bl	4025e0 <bcmp@plt>
  41d494:	cbnz	w0, 41d6e0 <_obstack_memory_used@@Base+0x86ac>
  41d498:	ldr	x8, [x27, #24]
  41d49c:	ldr	x26, [x8, x25, lsl #3]
  41d4a0:	add	x8, x20, x28
  41d4a4:	stur	x8, [x29, #-8]
  41d4a8:	b	41d580 <_obstack_memory_used@@Base+0x854c>
  41d4ac:	ldr	x8, [x23, #184]
  41d4b0:	ldur	x28, [x29, #-8]
  41d4b4:	ldr	x24, [x27, #40]
  41d4b8:	sub	x0, x29, #0x20
  41d4bc:	mov	x1, x25
  41d4c0:	ldr	x26, [x8, x28, lsl #3]
  41d4c4:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41d4c8:	tbz	w0, #0, 41d774 <_obstack_memory_used@@Base+0x8740>
  41d4cc:	mov	w8, #0x18                  	// #24
  41d4d0:	madd	x8, x25, x8, x24
  41d4d4:	ldr	x20, [x8, #8]
  41d4d8:	cmp	x20, #0x1
  41d4dc:	b.lt	41d6d8 <_obstack_memory_used@@Base+0x86a4>  // b.tstop
  41d4e0:	mov	w8, #0x18                  	// #24
  41d4e4:	madd	x8, x25, x8, x24
  41d4e8:	ldr	x24, [x8, #16]
  41d4ec:	add	x27, x26, #0x8
  41d4f0:	mov	x26, #0xffffffffffffffff    	// #-1
  41d4f4:	ldr	x25, [x24]
  41d4f8:	mov	x0, x27
  41d4fc:	mov	x1, x25
  41d500:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41d504:	cbz	x0, 41d514 <_obstack_memory_used@@Base+0x84e0>
  41d508:	cmn	x26, #0x1
  41d50c:	b.ne	41d5ac <_obstack_memory_used@@Base+0x8578>  // b.any
  41d510:	mov	x26, x25
  41d514:	subs	x20, x20, #0x1
  41d518:	add	x24, x24, #0x8
  41d51c:	b.ne	41d4f4 <_obstack_memory_used@@Base+0x84c0>  // b.any
  41d520:	b	41d6c4 <_obstack_memory_used@@Base+0x8690>
  41d524:	ldur	x28, [x29, #-8]
  41d528:	mov	x0, x27
  41d52c:	mov	x1, x25
  41d530:	mov	x2, x23
  41d534:	mov	x3, x28
  41d538:	bl	41f18c <_obstack_memory_used@@Base+0xa158>
  41d53c:	cbz	w0, 41d54c <_obstack_memory_used@@Base+0x8518>
  41d540:	sxtw	x8, w0
  41d544:	b	41d56c <_obstack_memory_used@@Base+0x8538>
  41d548:	ldur	x28, [x29, #-8]
  41d54c:	ldr	x8, [x27]
  41d550:	mov	x0, x23
  41d554:	mov	x2, x28
  41d558:	add	x1, x8, x25, lsl #4
  41d55c:	bl	41f484 <_obstack_memory_used@@Base+0xa450>
  41d560:	tbz	w0, #0, 41d6d8 <_obstack_memory_used@@Base+0x86a4>
  41d564:	ldur	x24, [x29, #-72]
  41d568:	mov	w8, #0x1                   	// #1
  41d56c:	ldr	x9, [x27, #24]
  41d570:	add	x8, x28, x8
  41d574:	ldr	x26, [x9, x25, lsl #3]
  41d578:	stur	x8, [x29, #-8]
  41d57c:	cbz	x19, 41d620 <_obstack_memory_used@@Base+0x85ec>
  41d580:	ldr	x9, [x23, #168]
  41d584:	cmp	x8, x9
  41d588:	b.gt	41d6e0 <_obstack_memory_used@@Base+0x86ac>
  41d58c:	ldr	x9, [x23, #184]
  41d590:	ldr	x8, [x9, x8, lsl #3]
  41d594:	cbz	x8, 41d6e0 <_obstack_memory_used@@Base+0x86ac>
  41d598:	add	x0, x8, #0x8
  41d59c:	mov	x1, x26
  41d5a0:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41d5a4:	cbnz	x0, 41d620 <_obstack_memory_used@@Base+0x85ec>
  41d5a8:	b	41d6e0 <_obstack_memory_used@@Base+0x86ac>
  41d5ac:	sub	x0, x29, #0x20
  41d5b0:	mov	x1, x26
  41d5b4:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41d5b8:	cbnz	x0, 41d6c0 <_obstack_memory_used@@Base+0x868c>
  41d5bc:	cbz	x19, 41d6c4 <_obstack_memory_used@@Base+0x8690>
  41d5c0:	ldp	x20, x9, [x19]
  41d5c4:	add	x8, x20, #0x1
  41d5c8:	cmp	x8, x9
  41d5cc:	str	x8, [x19]
  41d5d0:	b.ne	41d66c <_obstack_memory_used@@Base+0x8638>  // b.any
  41d5d4:	ldr	x0, [x19, #16]
  41d5d8:	add	x8, x8, x8, lsl #1
  41d5dc:	lsl	x1, x8, #5
  41d5e0:	bl	402610 <realloc@plt>
  41d5e4:	mov	w9, #0x30                  	// #48
  41d5e8:	cbz	x0, 41d6bc <_obstack_memory_used@@Base+0x8688>
  41d5ec:	ldr	x8, [x19, #8]
  41d5f0:	mov	x27, x0
  41d5f4:	lsl	x8, x8, #1
  41d5f8:	stp	x8, x0, [x19, #8]
  41d5fc:	b	41d674 <_obstack_memory_used@@Base+0x8640>
  41d600:	mov	x28, xzr
  41d604:	cbnz	x19, 41d440 <_obstack_memory_used@@Base+0x840c>
  41d608:	cbz	x28, 41d628 <_obstack_memory_used@@Base+0x85f4>
  41d60c:	ldr	x8, [x27, #24]
  41d610:	ldur	x9, [x29, #-8]
  41d614:	ldr	x26, [x8, x25, lsl #3]
  41d618:	add	x8, x9, x28
  41d61c:	stur	x8, [x29, #-8]
  41d620:	stur	xzr, [x29, #-24]
  41d624:	b	41d6c4 <_obstack_memory_used@@Base+0x8690>
  41d628:	sub	x0, x29, #0x20
  41d62c:	mov	x1, x25
  41d630:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41d634:	tbz	w0, #0, 41d774 <_obstack_memory_used@@Base+0x8740>
  41d638:	ldr	x8, [x27, #40]
  41d63c:	mov	w10, #0x18                  	// #24
  41d640:	ldr	x9, [x23, #184]
  41d644:	ldur	x28, [x29, #-8]
  41d648:	madd	x8, x25, x10, x8
  41d64c:	ldr	x8, [x8, #16]
  41d650:	ldr	x9, [x9, x28, lsl #3]
  41d654:	ldr	x26, [x8]
  41d658:	add	x0, x9, #0x8
  41d65c:	mov	x1, x26
  41d660:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41d664:	cbnz	x0, 41d6c4 <_obstack_memory_used@@Base+0x8690>
  41d668:	b	41d54c <_obstack_memory_used@@Base+0x8518>
  41d66c:	ldr	x27, [x19, #16]
  41d670:	mov	w9, #0x30                  	// #48
  41d674:	stur	x20, [x29, #-112]
  41d678:	madd	x20, x20, x9, x27
  41d67c:	stp	x28, x25, [x20]
  41d680:	ldur	x24, [x29, #-96]
  41d684:	mov	w25, #0x30                  	// #48
  41d688:	mov	x0, x24
  41d68c:	bl	4024e0 <malloc@plt>
  41d690:	str	x0, [x20, #16]
  41d694:	cbz	x0, 41d6bc <_obstack_memory_used@@Base+0x8688>
  41d698:	mov	x1, x21
  41d69c:	mov	x2, x24
  41d6a0:	bl	402320 <memcpy@plt>
  41d6a4:	ldur	x8, [x29, #-112]
  41d6a8:	sub	x1, x29, #0x20
  41d6ac:	madd	x8, x8, x25, x27
  41d6b0:	add	x0, x8, #0x18
  41d6b4:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41d6b8:	cbz	w0, 41d6c4 <_obstack_memory_used@@Base+0x8690>
  41d6bc:	mov	x25, #0xfffffffffffffffe    	// #-2
  41d6c0:	mov	x26, x25
  41d6c4:	tbnz	x26, #63, 41d6d0 <_obstack_memory_used@@Base+0x869c>
  41d6c8:	ldur	x24, [x29, #-72]
  41d6cc:	b	41d6fc <_obstack_memory_used@@Base+0x86c8>
  41d6d0:	cmn	x26, #0x2
  41d6d4:	b.eq	41d774 <_obstack_memory_used@@Base+0x8740>  // b.none
  41d6d8:	ldur	x24, [x29, #-72]
  41d6dc:	cbz	x19, 41d738 <_obstack_memory_used@@Base+0x8704>
  41d6e0:	sub	x1, x29, #0x8
  41d6e4:	sub	x4, x29, #0x20
  41d6e8:	mov	x0, x19
  41d6ec:	mov	x2, x22
  41d6f0:	mov	x3, x21
  41d6f4:	bl	4205f8 <_obstack_memory_used@@Base+0xb5c4>
  41d6f8:	mov	x26, x0
  41d6fc:	ldur	x27, [x29, #-8]
  41d700:	ldr	x8, [x21, #8]
  41d704:	mov	x25, x26
  41d708:	cmp	x27, x8
  41d70c:	b.le	41d2ec <_obstack_memory_used@@Base+0x82b8>
  41d710:	ldur	x0, [x29, #-16]
  41d714:	bl	402770 <free@plt>
  41d718:	ldur	w8, [x29, #-76]
  41d71c:	cbz	w8, 41d728 <_obstack_memory_used@@Base+0x86f4>
  41d720:	ldur	x0, [x29, #-88]
  41d724:	bl	402770 <free@plt>
  41d728:	mov	x0, x19
  41d72c:	bl	420580 <_obstack_memory_used@@Base+0xb54c>
  41d730:	mov	w0, wzr
  41d734:	b	41d798 <_obstack_memory_used@@Base+0x8764>
  41d738:	ldur	x0, [x29, #-16]
  41d73c:	bl	402770 <free@plt>
  41d740:	ldur	w8, [x29, #-76]
  41d744:	cbz	w8, 41d750 <_obstack_memory_used@@Base+0x871c>
  41d748:	ldur	x0, [x29, #-88]
  41d74c:	bl	402770 <free@plt>
  41d750:	mov	w0, #0x1                   	// #1
  41d754:	b	41d798 <_obstack_memory_used@@Base+0x8764>
  41d758:	ldur	x0, [x29, #-16]
  41d75c:	bl	402770 <free@plt>
  41d760:	ldur	w8, [x29, #-76]
  41d764:	cbz	w8, 41d730 <_obstack_memory_used@@Base+0x86fc>
  41d768:	ldur	x0, [x29, #-88]
  41d76c:	bl	402770 <free@plt>
  41d770:	b	41d730 <_obstack_memory_used@@Base+0x86fc>
  41d774:	ldur	x0, [x29, #-16]
  41d778:	bl	402770 <free@plt>
  41d77c:	ldur	w8, [x29, #-76]
  41d780:	cbz	w8, 41d78c <_obstack_memory_used@@Base+0x8758>
  41d784:	ldur	x0, [x29, #-88]
  41d788:	bl	402770 <free@plt>
  41d78c:	mov	x0, x19
  41d790:	bl	420580 <_obstack_memory_used@@Base+0xb54c>
  41d794:	mov	w0, #0xc                   	// #12
  41d798:	mov	sp, x29
  41d79c:	ldp	x20, x19, [sp, #80]
  41d7a0:	ldp	x22, x21, [sp, #64]
  41d7a4:	ldp	x24, x23, [sp, #48]
  41d7a8:	ldp	x26, x25, [sp, #32]
  41d7ac:	ldp	x28, x27, [sp, #16]
  41d7b0:	ldp	x29, x30, [sp], #96
  41d7b4:	ret
  41d7b8:	sub	sp, sp, #0x20
  41d7bc:	stp	x29, x30, [sp, #16]
  41d7c0:	add	x29, sp, #0x10
  41d7c4:	tbnz	x1, #63, 41d7fc <_obstack_memory_used@@Base+0x87c8>
  41d7c8:	ldr	x8, [x0, #88]
  41d7cc:	cmp	x8, x1
  41d7d0:	b.eq	41d86c <_obstack_memory_used@@Base+0x8838>  // b.none
  41d7d4:	ldr	w8, [x0, #144]
  41d7d8:	cmp	w8, #0x2
  41d7dc:	b.lt	41d804 <_obstack_memory_used@@Base+0x87d0>  // b.tstop
  41d7e0:	ldr	x8, [x0, #16]
  41d7e4:	ldr	w9, [x8, x1, lsl #2]
  41d7e8:	cmn	w9, #0x1
  41d7ec:	b.ne	41d82c <_obstack_memory_used@@Base+0x87f8>  // b.any
  41d7f0:	sub	x1, x1, #0x1
  41d7f4:	cmn	x1, #0x1
  41d7f8:	b.ne	41d7e4 <_obstack_memory_used@@Base+0x87b0>  // b.any
  41d7fc:	ldr	w8, [x0, #112]
  41d800:	b	41d85c <_obstack_memory_used@@Base+0x8828>
  41d804:	ldr	x8, [x0, #8]
  41d808:	ldr	x9, [x0, #128]
  41d80c:	ldrb	w8, [x8, x1]
  41d810:	lsr	x10, x8, #3
  41d814:	and	x10, x10, #0x18
  41d818:	ldr	x9, [x9, x10]
  41d81c:	lsr	x9, x9, x8
  41d820:	tbz	w9, #0, 41d850 <_obstack_memory_used@@Base+0x881c>
  41d824:	mov	w8, #0x1                   	// #1
  41d828:	b	41d85c <_obstack_memory_used@@Base+0x8828>
  41d82c:	ldrb	w8, [x0, #142]
  41d830:	cbnz	w8, 41d87c <_obstack_memory_used@@Base+0x8848>
  41d834:	cmp	w9, #0xa
  41d838:	b.ne	41d858 <_obstack_memory_used@@Base+0x8824>  // b.any
  41d83c:	ldrb	w8, [x0, #141]
  41d840:	cmp	w8, #0x0
  41d844:	cset	w8, ne  // ne = any
  41d848:	lsl	w8, w8, #1
  41d84c:	b	41d85c <_obstack_memory_used@@Base+0x8828>
  41d850:	cmp	w8, #0xa
  41d854:	b.eq	41d83c <_obstack_memory_used@@Base+0x8808>  // b.none
  41d858:	mov	w8, wzr
  41d85c:	ldp	x29, x30, [sp, #16]
  41d860:	mov	w0, w8
  41d864:	add	sp, sp, #0x20
  41d868:	ret
  41d86c:	and	w8, w2, #0x2
  41d870:	mov	w9, #0xa                   	// #10
  41d874:	eor	w8, w8, w9
  41d878:	b	41d85c <_obstack_memory_used@@Base+0x8828>
  41d87c:	str	x0, [sp]
  41d880:	mov	w0, w9
  41d884:	stur	w9, [x29, #-4]
  41d888:	bl	402860 <iswalnum@plt>
  41d88c:	ldur	w9, [x29, #-4]
  41d890:	mov	w8, #0x1                   	// #1
  41d894:	cmp	w9, #0x5f
  41d898:	b.eq	41d85c <_obstack_memory_used@@Base+0x8828>  // b.none
  41d89c:	mov	w10, w0
  41d8a0:	ldr	x0, [sp]
  41d8a4:	cbz	w10, 41d834 <_obstack_memory_used@@Base+0x8800>
  41d8a8:	b	41d85c <_obstack_memory_used@@Base+0x8828>
  41d8ac:	stp	x29, x30, [sp, #-80]!
  41d8b0:	stp	x26, x25, [sp, #16]
  41d8b4:	stp	x24, x23, [sp, #32]
  41d8b8:	stp	x22, x21, [sp, #48]
  41d8bc:	stp	x20, x19, [sp, #64]
  41d8c0:	ldr	x8, [x1, #8]
  41d8c4:	mov	x29, sp
  41d8c8:	cmp	x8, #0x1
  41d8cc:	b.lt	41d990 <_obstack_memory_used@@Base+0x895c>  // b.tstop
  41d8d0:	ldr	x23, [x0, #152]
  41d8d4:	mov	x19, x2
  41d8d8:	mov	x20, x1
  41d8dc:	mov	x21, x0
  41d8e0:	mov	x24, xzr
  41d8e4:	ldr	x9, [x20, #16]
  41d8e8:	ldr	x25, [x9, x24, lsl #3]
  41d8ec:	ldr	x9, [x23]
  41d8f0:	add	x10, x9, x25, lsl #4
  41d8f4:	ldrb	w10, [x10, #8]
  41d8f8:	cmp	w10, #0x8
  41d8fc:	b.ne	41d960 <_obstack_memory_used@@Base+0x892c>  // b.any
  41d900:	lsl	x10, x25, #4
  41d904:	ldr	x9, [x9, x10]
  41d908:	cmp	x9, #0x3f
  41d90c:	b.gt	41d960 <_obstack_memory_used@@Base+0x892c>
  41d910:	ldr	x10, [x23, #160]
  41d914:	lsr	x9, x10, x9
  41d918:	tbz	w9, #0, 41d960 <_obstack_memory_used@@Base+0x892c>
  41d91c:	ldp	x8, x26, [x21, #232]
  41d920:	ldr	x22, [x21, #248]
  41d924:	cmp	x8, x26
  41d928:	b.eq	41d970 <_obstack_memory_used@@Base+0x893c>  // b.none
  41d92c:	mov	w0, #0x1                   	// #1
  41d930:	mov	w1, #0x30                  	// #48
  41d934:	bl	4025d0 <calloc@plt>
  41d938:	ldr	x8, [x21, #232]
  41d93c:	str	x0, [x22, x8, lsl #3]
  41d940:	ldr	x9, [x21, #248]
  41d944:	ldr	x9, [x9, x8, lsl #3]
  41d948:	cbz	x9, 41d9ac <_obstack_memory_used@@Base+0x8978>
  41d94c:	add	x8, x8, #0x1
  41d950:	str	x25, [x9, #8]
  41d954:	str	x8, [x21, #232]
  41d958:	str	x19, [x9]
  41d95c:	ldr	x8, [x20, #8]
  41d960:	add	x24, x24, #0x1
  41d964:	cmp	x24, x8
  41d968:	b.lt	41d8e4 <_obstack_memory_used@@Base+0x88b0>  // b.tstop
  41d96c:	b	41d990 <_obstack_memory_used@@Base+0x895c>
  41d970:	lsl	x1, x26, #4
  41d974:	mov	x0, x22
  41d978:	bl	402610 <realloc@plt>
  41d97c:	cbz	x0, 41d9ac <_obstack_memory_used@@Base+0x8978>
  41d980:	mov	x22, x0
  41d984:	lsl	x8, x26, #1
  41d988:	stp	x8, x0, [x21, #240]
  41d98c:	b	41d92c <_obstack_memory_used@@Base+0x88f8>
  41d990:	mov	w0, wzr
  41d994:	ldp	x20, x19, [sp, #64]
  41d998:	ldp	x22, x21, [sp, #48]
  41d99c:	ldp	x24, x23, [sp, #32]
  41d9a0:	ldp	x26, x25, [sp, #16]
  41d9a4:	ldp	x29, x30, [sp], #80
  41d9a8:	ret
  41d9ac:	mov	w0, #0xc                   	// #12
  41d9b0:	b	41d994 <_obstack_memory_used@@Base+0x8960>
  41d9b4:	sub	sp, sp, #0xd0
  41d9b8:	stp	x29, x30, [sp, #112]
  41d9bc:	stp	x28, x27, [sp, #128]
  41d9c0:	stp	x26, x25, [sp, #144]
  41d9c4:	stp	x24, x23, [sp, #160]
  41d9c8:	stp	x22, x21, [sp, #176]
  41d9cc:	stp	x20, x19, [sp, #192]
  41d9d0:	ldr	x8, [x1, #8]
  41d9d4:	add	x29, sp, #0x70
  41d9d8:	cmp	x8, #0x1
  41d9dc:	b.lt	41df64 <_obstack_memory_used@@Base+0x8f30>  // b.tstop
  41d9e0:	ldr	x28, [x0, #152]
  41d9e4:	ldr	x8, [x0, #72]
  41d9e8:	mov	x20, x0
  41d9ec:	mov	x9, xzr
  41d9f0:	stp	x1, x28, [sp, #8]
  41d9f4:	stur	x8, [x29, #-40]
  41d9f8:	ldr	x8, [x1, #16]
  41d9fc:	str	x9, [sp, #32]
  41da00:	ldr	x9, [x8, x9, lsl #3]
  41da04:	ldr	x8, [x28]
  41da08:	stur	x9, [x29, #-48]
  41da0c:	add	x8, x8, x9, lsl #4
  41da10:	ldr	w19, [x8, #8]
  41da14:	and	w8, w19, #0xff
  41da18:	cmp	w8, #0x4
  41da1c:	b.ne	41df4c <_obstack_memory_used@@Base+0x8f18>  // b.any
  41da20:	tst	w19, #0x3ff00
  41da24:	b.eq	41da5c <_obstack_memory_used@@Base+0x8a28>  // b.none
  41da28:	ldr	w2, [x20, #160]
  41da2c:	ldur	x1, [x29, #-40]
  41da30:	mov	x0, x20
  41da34:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41da38:	and	w8, w0, #0x1
  41da3c:	tbz	w19, #10, 41da44 <_obstack_memory_used@@Base+0x8a10>
  41da40:	cbz	w8, 41df4c <_obstack_memory_used@@Base+0x8f18>
  41da44:	tbz	w19, #11, 41da4c <_obstack_memory_used@@Base+0x8a18>
  41da48:	cbnz	w8, 41df4c <_obstack_memory_used@@Base+0x8f18>
  41da4c:	tbz	w19, #13, 41da54 <_obstack_memory_used@@Base+0x8a20>
  41da50:	tbz	w0, #1, 41df4c <_obstack_memory_used@@Base+0x8f18>
  41da54:	tbz	w19, #15, 41da5c <_obstack_memory_used@@Base+0x8a28>
  41da58:	tbz	w0, #3, 41df4c <_obstack_memory_used@@Base+0x8f18>
  41da5c:	ldur	x1, [x29, #-40]
  41da60:	ldr	x21, [x20, #200]
  41da64:	ldr	x23, [x20, #152]
  41da68:	ldr	x19, [x20, #8]
  41da6c:	mov	x0, x20
  41da70:	bl	41e37c <_obstack_memory_used@@Base+0x9348>
  41da74:	cmn	x0, #0x1
  41da78:	b.eq	41daa4 <_obstack_memory_used@@Base+0x8a70>  // b.none
  41da7c:	ldr	x8, [x20, #216]
  41da80:	mov	w9, #0x28                  	// #40
  41da84:	madd	x8, x0, x9, x8
  41da88:	ldr	x9, [x8]
  41da8c:	ldur	x10, [x29, #-48]
  41da90:	cmp	x9, x10
  41da94:	b.eq	41ddb8 <_obstack_memory_used@@Base+0x8d84>  // b.none
  41da98:	ldrb	w9, [x8, #32]
  41da9c:	add	x8, x8, #0x28
  41daa0:	cbnz	w9, 41da88 <_obstack_memory_used@@Base+0x8a54>
  41daa4:	ldr	x8, [x20, #232]
  41daa8:	cmp	x8, #0x1
  41daac:	mov	x8, x21
  41dab0:	b.lt	41ddbc <_obstack_memory_used@@Base+0x8d88>  // b.tstop
  41dab4:	ldur	x9, [x29, #-48]
  41dab8:	ldr	x8, [x23]
  41dabc:	mov	x13, xzr
  41dac0:	str	x23, [sp, #24]
  41dac4:	lsl	x9, x9, #4
  41dac8:	ldr	x12, [x8, x9]
  41dacc:	stp	x12, x21, [sp, #40]
  41dad0:	ldr	x9, [x20, #248]
  41dad4:	ldr	x24, [x9, x13, lsl #3]
  41dad8:	ldr	x9, [x24, #8]
  41dadc:	lsl	x9, x9, #4
  41dae0:	ldr	x8, [x8, x9]
  41dae4:	cmp	x8, x12
  41dae8:	b.ne	41dbf4 <_obstack_memory_used@@Base+0x8bc0>  // b.any
  41daec:	ldr	x8, [x24, #32]
  41daf0:	ldr	x28, [x24]
  41daf4:	str	x13, [sp, #56]
  41daf8:	cmp	x8, #0x1
  41dafc:	b.lt	41dba4 <_obstack_memory_used@@Base+0x8b70>  // b.tstop
  41db00:	ldur	x22, [x29, #-40]
  41db04:	mov	x23, xzr
  41db08:	mov	x21, x28
  41db0c:	ldr	x9, [x24, #40]
  41db10:	ldr	x26, [x9, x23, lsl #3]
  41db14:	ldr	x28, [x26, #8]
  41db18:	sub	x25, x28, x21
  41db1c:	cmp	x25, #0x1
  41db20:	b.lt	41db48 <_obstack_memory_used@@Base+0x8b14>  // b.tstop
  41db24:	ldr	x9, [x20, #48]
  41db28:	add	x1, x25, x22
  41db2c:	cmp	x1, x9
  41db30:	b.gt	41db84 <_obstack_memory_used@@Base+0x8b50>
  41db34:	add	x0, x19, x22
  41db38:	add	x1, x19, x21
  41db3c:	mov	x2, x25
  41db40:	bl	4025e0 <bcmp@plt>
  41db44:	cbnz	w0, 41dbb0 <_obstack_memory_used@@Base+0x8b7c>
  41db48:	ldp	x3, x4, [x29, #-48]
  41db4c:	mov	x0, x20
  41db50:	mov	x1, x24
  41db54:	mov	x2, x26
  41db58:	bl	41e498 <_obstack_memory_used@@Base+0x9464>
  41db5c:	cmp	w0, #0x1
  41db60:	b.hi	41df98 <_obstack_memory_used@@Base+0x8f64>  // b.pmore
  41db64:	ldr	x8, [x24, #32]
  41db68:	ldr	x19, [x20, #8]
  41db6c:	add	x23, x23, #0x1
  41db70:	add	x22, x25, x22
  41db74:	cmp	x23, x8
  41db78:	mov	x21, x28
  41db7c:	b.lt	41db0c <_obstack_memory_used@@Base+0x8ad8>  // b.tstop
  41db80:	b	41dbb8 <_obstack_memory_used@@Base+0x8b84>
  41db84:	ldr	x9, [x20, #88]
  41db88:	cmp	x1, x9
  41db8c:	b.gt	41dbb4 <_obstack_memory_used@@Base+0x8b80>
  41db90:	mov	x0, x20
  41db94:	bl	41e3f8 <_obstack_memory_used@@Base+0x93c4>
  41db98:	cbnz	w0, 41df98 <_obstack_memory_used@@Base+0x8f64>
  41db9c:	ldr	x19, [x20, #8]
  41dba0:	b	41db34 <_obstack_memory_used@@Base+0x8b00>
  41dba4:	ldur	x22, [x29, #-40]
  41dba8:	mov	x23, xzr
  41dbac:	b	41dbb8 <_obstack_memory_used@@Base+0x8b84>
  41dbb0:	ldr	x8, [x24, #32]
  41dbb4:	mov	x28, x21
  41dbb8:	ldr	x21, [sp, #48]
  41dbbc:	cmp	x23, x8
  41dbc0:	b.ge	41dbd4 <_obstack_memory_used@@Base+0x8ba0>  // b.tcont
  41dbc4:	ldp	x28, x23, [sp, #16]
  41dbc8:	ldr	x12, [sp, #40]
  41dbcc:	ldr	x13, [sp, #56]
  41dbd0:	b	41dbf4 <_obstack_memory_used@@Base+0x8bc0>
  41dbd4:	ldur	x8, [x29, #-40]
  41dbd8:	ldr	x12, [sp, #40]
  41dbdc:	ldr	x13, [sp, #56]
  41dbe0:	cmp	x23, #0x0
  41dbe4:	cinc	x25, x28, ne  // ne = any
  41dbe8:	cmp	x25, x8
  41dbec:	b.le	41dc0c <_obstack_memory_used@@Base+0x8bd8>
  41dbf0:	ldp	x28, x23, [sp, #16]
  41dbf4:	ldr	x8, [x20, #232]
  41dbf8:	add	x13, x13, #0x1
  41dbfc:	cmp	x13, x8
  41dc00:	b.ge	41ddb0 <_obstack_memory_used@@Base+0x8d7c>  // b.tcont
  41dc04:	ldr	x8, [x23]
  41dc08:	b	41dad0 <_obstack_memory_used@@Base+0x8a9c>
  41dc0c:	ldp	x28, x23, [sp, #16]
  41dc10:	ldr	x8, [x24]
  41dc14:	cmp	x25, x8
  41dc18:	b.le	41dc40 <_obstack_memory_used@@Base+0x8c0c>
  41dc1c:	ldr	x8, [x20, #48]
  41dc20:	cmp	x22, x8
  41dc24:	b.ge	41dd60 <_obstack_memory_used@@Base+0x8d2c>  // b.tcont
  41dc28:	add	x9, x25, x19
  41dc2c:	ldrb	w8, [x19, x22]
  41dc30:	ldurb	w9, [x9, #-1]
  41dc34:	cmp	w8, w9
  41dc38:	b.ne	41dbf4 <_obstack_memory_used@@Base+0x8bc0>  // b.any
  41dc3c:	add	x22, x22, #0x1
  41dc40:	ldr	x8, [x20, #184]
  41dc44:	ldr	x9, [x8, x25, lsl #3]
  41dc48:	cbz	x9, 41dc90 <_obstack_memory_used@@Base+0x8c5c>
  41dc4c:	ldr	x8, [x9, #16]
  41dc50:	cmp	x8, #0x1
  41dc54:	b.lt	41dc90 <_obstack_memory_used@@Base+0x8c5c>  // b.tstop
  41dc58:	ldr	x9, [x9, #24]
  41dc5c:	ldr	x10, [x23]
  41dc60:	ldr	x26, [x9]
  41dc64:	add	x11, x10, x26, lsl #4
  41dc68:	ldrb	w11, [x11, #8]
  41dc6c:	cmp	w11, #0x9
  41dc70:	b.ne	41dc84 <_obstack_memory_used@@Base+0x8c50>  // b.any
  41dc74:	lsl	x11, x26, #4
  41dc78:	ldr	x11, [x10, x11]
  41dc7c:	cmp	x11, x12
  41dc80:	b.eq	41dca4 <_obstack_memory_used@@Base+0x8c70>  // b.none
  41dc84:	subs	x8, x8, #0x1
  41dc88:	add	x9, x9, #0x8
  41dc8c:	b.ne	41dc60 <_obstack_memory_used@@Base+0x8c2c>  // b.any
  41dc90:	ldur	x8, [x29, #-40]
  41dc94:	cmp	x25, x8
  41dc98:	add	x25, x25, #0x1
  41dc9c:	b.lt	41dc10 <_obstack_memory_used@@Base+0x8bdc>  // b.tstop
  41dca0:	b	41dbf4 <_obstack_memory_used@@Base+0x8bc0>
  41dca4:	cmn	x26, #0x1
  41dca8:	b.eq	41dc90 <_obstack_memory_used@@Base+0x8c5c>  // b.none
  41dcac:	ldr	x1, [x24, #16]
  41dcb0:	cbnz	x1, 41dcd4 <_obstack_memory_used@@Base+0x8ca0>
  41dcb4:	ldr	x8, [x24]
  41dcb8:	mov	w0, #0x18                  	// #24
  41dcbc:	sub	x8, x25, x8
  41dcc0:	add	x1, x8, #0x1
  41dcc4:	bl	4025d0 <calloc@plt>
  41dcc8:	mov	x1, x0
  41dccc:	str	x0, [x24, #16]
  41dcd0:	cbz	x0, 41df90 <_obstack_memory_used@@Base+0x8f5c>
  41dcd4:	ldp	x3, x2, [x24]
  41dcd8:	mov	w6, #0x9                   	// #9
  41dcdc:	mov	x0, x20
  41dce0:	mov	x4, x26
  41dce4:	mov	x5, x25
  41dce8:	bl	41e604 <_obstack_memory_used@@Base+0x95d0>
  41dcec:	ldr	x12, [sp, #40]
  41dcf0:	ldr	x13, [sp, #56]
  41dcf4:	cmp	w0, #0x1
  41dcf8:	b.eq	41dc90 <_obstack_memory_used@@Base+0x8c5c>  // b.none
  41dcfc:	mov	w27, w0
  41dd00:	cbnz	w0, 41df9c <_obstack_memory_used@@Base+0x8f68>
  41dd04:	ldp	x9, x8, [x24, #24]
  41dd08:	cmp	x8, x9
  41dd0c:	b.eq	41dd8c <_obstack_memory_used@@Base+0x8d58>  // b.none
  41dd10:	mov	w0, #0x1                   	// #1
  41dd14:	mov	w1, #0x28                  	// #40
  41dd18:	bl	4025d0 <calloc@plt>
  41dd1c:	cbz	x0, 41df90 <_obstack_memory_used@@Base+0x8f5c>
  41dd20:	ldp	x9, x8, [x24, #32]
  41dd24:	mov	x2, x0
  41dd28:	mov	x1, x24
  41dd2c:	str	x0, [x8, x9, lsl #3]
  41dd30:	add	x8, x9, #0x1
  41dd34:	stp	x26, x25, [x0]
  41dd38:	str	x8, [x24, #32]
  41dd3c:	ldp	x3, x4, [x29, #-48]
  41dd40:	mov	x0, x20
  41dd44:	bl	41e498 <_obstack_memory_used@@Base+0x9464>
  41dd48:	cmp	w0, #0x1
  41dd4c:	b.hi	41df98 <_obstack_memory_used@@Base+0x8f64>  // b.pmore
  41dd50:	ldr	x19, [x20, #8]
  41dd54:	ldr	x12, [sp, #40]
  41dd58:	ldr	x13, [sp, #56]
  41dd5c:	b	41dc90 <_obstack_memory_used@@Base+0x8c5c>
  41dd60:	ldr	x8, [x20, #88]
  41dd64:	cmp	x22, x8
  41dd68:	b.ge	41dbf4 <_obstack_memory_used@@Base+0x8bc0>  // b.tcont
  41dd6c:	add	w1, w22, #0x1
  41dd70:	mov	x0, x20
  41dd74:	bl	41dfbc <_obstack_memory_used@@Base+0x8f88>
  41dd78:	cbnz	w0, 41df98 <_obstack_memory_used@@Base+0x8f64>
  41dd7c:	ldr	x19, [x20, #8]
  41dd80:	ldr	x12, [sp, #40]
  41dd84:	ldr	x13, [sp, #56]
  41dd88:	b	41dc28 <_obstack_memory_used@@Base+0x8bf4>
  41dd8c:	ldr	x0, [x24, #40]
  41dd90:	mov	w19, #0x1                   	// #1
  41dd94:	bfi	x19, x8, #1, #63
  41dd98:	lsl	x1, x19, #3
  41dd9c:	bl	402610 <realloc@plt>
  41dda0:	cbz	x0, 41df90 <_obstack_memory_used@@Base+0x8f5c>
  41dda4:	str	x0, [x24, #40]
  41dda8:	str	x19, [x24, #24]
  41ddac:	b	41dd10 <_obstack_memory_used@@Base+0x8cdc>
  41ddb0:	ldr	x8, [x20, #200]
  41ddb4:	b	41ddbc <_obstack_memory_used@@Base+0x8d88>
  41ddb8:	mov	x8, x21
  41ddbc:	cmp	x21, x8
  41ddc0:	stur	wzr, [x29, #-4]
  41ddc4:	b.ge	41df4c <_obstack_memory_used@@Base+0x8f18>  // b.tcont
  41ddc8:	add	x8, x21, x21, lsl #2
  41ddcc:	lsl	x19, x8, #3
  41ddd0:	ldr	x8, [x20, #216]
  41ddd4:	ldur	x10, [x29, #-48]
  41ddd8:	ldr	x9, [x8, x19]
  41dddc:	cmp	x9, x10
  41dde0:	b.ne	41df38 <_obstack_memory_used@@Base+0x8f04>  // b.any
  41dde4:	add	x8, x8, x19
  41dde8:	ldr	x9, [x8, #8]
  41ddec:	ldur	x10, [x29, #-40]
  41ddf0:	cmp	x9, x10
  41ddf4:	b.ne	41df38 <_obstack_memory_used@@Base+0x8f04>  // b.any
  41ddf8:	str	x21, [sp, #48]
  41ddfc:	ldp	x22, x21, [x8, #16]
  41de00:	ldr	x8, [x28, #48]
  41de04:	cmp	x21, x22
  41de08:	b.ne	41de24 <_obstack_memory_used@@Base+0x8df0>  // b.any
  41de0c:	ldr	x9, [x28, #40]
  41de10:	ldur	x10, [x29, #-48]
  41de14:	mov	w11, #0x18                  	// #24
  41de18:	madd	x9, x10, x11, x9
  41de1c:	ldr	x9, [x9, #16]
  41de20:	b	41de34 <_obstack_memory_used@@Base+0x8e00>
  41de24:	ldr	x9, [x28, #24]
  41de28:	ldur	x10, [x29, #-48]
  41de2c:	mov	w11, #0x18                  	// #24
  41de30:	add	x9, x9, x10, lsl #3
  41de34:	ldur	x23, [x29, #-40]
  41de38:	ldr	x9, [x9]
  41de3c:	ldr	w2, [x20, #160]
  41de40:	mov	x0, x20
  41de44:	add	x10, x21, x23
  41de48:	sub	x26, x10, x22
  41de4c:	sub	x1, x26, #0x1
  41de50:	madd	x24, x9, x11, x8
  41de54:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41de58:	ldr	x8, [x20, #184]
  41de5c:	mov	w25, w0
  41de60:	ldr	x9, [x8, x23, lsl #3]
  41de64:	ldr	x8, [x8, x26, lsl #3]
  41de68:	cbz	x9, 41deb4 <_obstack_memory_used@@Base+0x8e80>
  41de6c:	ldr	x23, [x9, #16]
  41de70:	cbz	x8, 41debc <_obstack_memory_used@@Base+0x8e88>
  41de74:	ldr	x1, [x8, #80]
  41de78:	sub	x0, x29, #0x20
  41de7c:	mov	x2, x24
  41de80:	bl	41e1cc <_obstack_memory_used@@Base+0x9198>
  41de84:	stur	w0, [x29, #-4]
  41de88:	cbnz	w0, 41dfa4 <_obstack_memory_used@@Base+0x8f70>
  41de8c:	sub	x0, x29, #0x4
  41de90:	sub	x2, x29, #0x20
  41de94:	mov	x1, x28
  41de98:	mov	w3, w25
  41de9c:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41dea0:	ldr	x8, [x20, #184]
  41dea4:	str	x0, [x8, x26, lsl #3]
  41dea8:	ldur	x0, [x29, #-16]
  41deac:	bl	402770 <free@plt>
  41deb0:	b	41ded8 <_obstack_memory_used@@Base+0x8ea4>
  41deb4:	mov	x23, xzr
  41deb8:	cbnz	x8, 41de74 <_obstack_memory_used@@Base+0x8e40>
  41debc:	sub	x0, x29, #0x4
  41dec0:	mov	x1, x28
  41dec4:	mov	x2, x24
  41dec8:	mov	w3, w25
  41decc:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41ded0:	ldr	x8, [x20, #184]
  41ded4:	str	x0, [x8, x26, lsl #3]
  41ded8:	ldr	x8, [x20, #184]
  41dedc:	ldr	x9, [x8, x26, lsl #3]
  41dee0:	cbnz	x9, 41deec <_obstack_memory_used@@Base+0x8eb8>
  41dee4:	ldur	w27, [x29, #-4]
  41dee8:	cbnz	w27, 41df6c <_obstack_memory_used@@Base+0x8f38>
  41deec:	cmp	x21, x22
  41def0:	ldr	x21, [sp, #48]
  41def4:	b.ne	41df38 <_obstack_memory_used@@Base+0x8f04>  // b.any
  41def8:	ldur	x9, [x29, #-40]
  41defc:	ldr	x8, [x8, x9, lsl #3]
  41df00:	ldr	x8, [x8, #16]
  41df04:	cmp	x8, x23
  41df08:	b.le	41df38 <_obstack_memory_used@@Base+0x8f04>
  41df0c:	ldur	x2, [x29, #-40]
  41df10:	mov	x0, x20
  41df14:	mov	x1, x24
  41df18:	bl	41d8ac <_obstack_memory_used@@Base+0x8878>
  41df1c:	stur	w0, [x29, #-4]
  41df20:	cbnz	w0, 41dfb4 <_obstack_memory_used@@Base+0x8f80>
  41df24:	mov	x0, x20
  41df28:	mov	x1, x24
  41df2c:	bl	41d9b4 <_obstack_memory_used@@Base+0x8980>
  41df30:	stur	w0, [x29, #-4]
  41df34:	cbnz	w0, 41dfb4 <_obstack_memory_used@@Base+0x8f80>
  41df38:	ldr	x8, [x20, #200]
  41df3c:	add	x21, x21, #0x1
  41df40:	add	x19, x19, #0x28
  41df44:	cmp	x21, x8
  41df48:	b.lt	41ddd0 <_obstack_memory_used@@Base+0x8d9c>  // b.tstop
  41df4c:	ldr	x1, [sp, #8]
  41df50:	ldr	x9, [sp, #32]
  41df54:	ldr	x8, [x1, #8]
  41df58:	add	x9, x9, #0x1
  41df5c:	cmp	x9, x8
  41df60:	b.lt	41d9f8 <_obstack_memory_used@@Base+0x89c4>  // b.tstop
  41df64:	mov	w27, wzr
  41df68:	stur	wzr, [x29, #-4]
  41df6c:	mov	w0, w27
  41df70:	ldp	x20, x19, [sp, #192]
  41df74:	ldp	x22, x21, [sp, #176]
  41df78:	ldp	x24, x23, [sp, #160]
  41df7c:	ldp	x26, x25, [sp, #144]
  41df80:	ldp	x28, x27, [sp, #128]
  41df84:	ldp	x29, x30, [sp, #112]
  41df88:	add	sp, sp, #0xd0
  41df8c:	ret
  41df90:	mov	w27, #0xc                   	// #12
  41df94:	b	41df9c <_obstack_memory_used@@Base+0x8f68>
  41df98:	mov	w27, w0
  41df9c:	stur	w27, [x29, #-4]
  41dfa0:	b	41df6c <_obstack_memory_used@@Base+0x8f38>
  41dfa4:	mov	w27, w0
  41dfa8:	ldur	x0, [x29, #-16]
  41dfac:	bl	402770 <free@plt>
  41dfb0:	b	41df6c <_obstack_memory_used@@Base+0x8f38>
  41dfb4:	mov	w27, w0
  41dfb8:	b	41df6c <_obstack_memory_used@@Base+0x8f38>
  41dfbc:	stp	x29, x30, [sp, #-32]!
  41dfc0:	ldr	x8, [x0, #64]
  41dfc4:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  41dfc8:	str	x19, [sp, #16]
  41dfcc:	mov	x29, sp
  41dfd0:	cmp	x8, x9
  41dfd4:	b.hi	41e07c <_obstack_memory_used@@Base+0x9048>  // b.pmore
  41dfd8:	ldr	x9, [x0, #88]
  41dfdc:	lsl	x11, x8, #1
  41dfe0:	sxtw	x10, w1
  41dfe4:	mov	x19, x0
  41dfe8:	cmp	x9, x8, lsl #1
  41dfec:	csel	x8, x9, x11, lt  // lt = tstop
  41dff0:	cmp	x8, w1, sxtw
  41dff4:	csel	x1, x8, x10, gt
  41dff8:	bl	4182b0 <_obstack_memory_used@@Base+0x327c>
  41dffc:	cbnz	w0, 41e070 <_obstack_memory_used@@Base+0x903c>
  41e000:	ldr	x0, [x19, #184]
  41e004:	cbz	x0, 41e020 <_obstack_memory_used@@Base+0x8fec>
  41e008:	ldr	x8, [x19, #64]
  41e00c:	lsl	x8, x8, #3
  41e010:	add	x1, x8, #0x8
  41e014:	bl	402610 <realloc@plt>
  41e018:	cbz	x0, 41e07c <_obstack_memory_used@@Base+0x9048>
  41e01c:	str	x0, [x19, #184]
  41e020:	ldr	w8, [x19, #144]
  41e024:	ldrb	w9, [x19, #136]
  41e028:	cmp	w8, #0x2
  41e02c:	cbz	w9, 41e044 <_obstack_memory_used@@Base+0x9010>
  41e030:	mov	x0, x19
  41e034:	b.lt	41e054 <_obstack_memory_used@@Base+0x9020>  // b.tstop
  41e038:	bl	418340 <_obstack_memory_used@@Base+0x330c>
  41e03c:	cbz	w0, 41e06c <_obstack_memory_used@@Base+0x9038>
  41e040:	b	41e070 <_obstack_memory_used@@Base+0x903c>
  41e044:	b.lt	41e05c <_obstack_memory_used@@Base+0x9028>  // b.tstop
  41e048:	mov	x0, x19
  41e04c:	bl	4188b8 <_obstack_memory_used@@Base+0x3884>
  41e050:	b	41e06c <_obstack_memory_used@@Base+0x9038>
  41e054:	bl	418840 <_obstack_memory_used@@Base+0x380c>
  41e058:	b	41e06c <_obstack_memory_used@@Base+0x9038>
  41e05c:	ldr	x8, [x19, #120]
  41e060:	cbz	x8, 41e06c <_obstack_memory_used@@Base+0x9038>
  41e064:	mov	x0, x19
  41e068:	bl	418a8c <_obstack_memory_used@@Base+0x3a58>
  41e06c:	mov	w0, wzr
  41e070:	ldr	x19, [sp, #16]
  41e074:	ldp	x29, x30, [sp], #32
  41e078:	ret
  41e07c:	mov	w0, #0xc                   	// #12
  41e080:	b	41e070 <_obstack_memory_used@@Base+0x903c>
  41e084:	sub	sp, sp, #0x60
  41e088:	stp	x29, x30, [sp, #32]
  41e08c:	stp	x24, x23, [sp, #48]
  41e090:	stp	x22, x21, [sp, #64]
  41e094:	stp	x20, x19, [sp, #80]
  41e098:	ldr	x20, [x1, #72]
  41e09c:	ldp	x8, x9, [x1, #184]
  41e0a0:	ldr	x22, [x1, #152]
  41e0a4:	mov	x23, x2
  41e0a8:	mov	x19, x1
  41e0ac:	cmp	x20, x9
  41e0b0:	mov	x21, x0
  41e0b4:	add	x29, sp, #0x20
  41e0b8:	b.le	41e0c8 <_obstack_memory_used@@Base+0x9094>
  41e0bc:	str	x23, [x8, x20, lsl #3]
  41e0c0:	str	x20, [x19, #192]
  41e0c4:	b	41e15c <_obstack_memory_used@@Base+0x9128>
  41e0c8:	ldr	x9, [x8, x20, lsl #3]
  41e0cc:	cbz	x9, 41e100 <_obstack_memory_used@@Base+0x90cc>
  41e0d0:	ldr	x2, [x9, #80]
  41e0d4:	cbz	x23, 41e108 <_obstack_memory_used@@Base+0x90d4>
  41e0d8:	ldr	x23, [x23, #80]
  41e0dc:	mov	x0, sp
  41e0e0:	mov	x1, x23
  41e0e4:	bl	41e1cc <_obstack_memory_used@@Base+0x9198>
  41e0e8:	str	w0, [x21]
  41e0ec:	cbnz	w0, 41e1c4 <_obstack_memory_used@@Base+0x9190>
  41e0f0:	ldr	x8, [x19, #72]
  41e0f4:	cmp	x23, #0x0
  41e0f8:	cset	w24, eq  // eq = none
  41e0fc:	b	41e120 <_obstack_memory_used@@Base+0x90ec>
  41e100:	str	x23, [x8, x20, lsl #3]
  41e104:	b	41e15c <_obstack_memory_used@@Base+0x9128>
  41e108:	ldr	x8, [x2, #16]
  41e10c:	ldr	q0, [x2]
  41e110:	mov	w24, #0x1                   	// #1
  41e114:	str	x8, [sp, #16]
  41e118:	mov	x8, x20
  41e11c:	str	q0, [sp]
  41e120:	ldr	w2, [x19, #160]
  41e124:	sub	x1, x8, #0x1
  41e128:	mov	x0, x19
  41e12c:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41e130:	mov	w3, w0
  41e134:	mov	x2, sp
  41e138:	mov	x0, x21
  41e13c:	mov	x1, x22
  41e140:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41e144:	ldr	x8, [x19, #184]
  41e148:	mov	x23, x0
  41e14c:	str	x0, [x8, x20, lsl #3]
  41e150:	tbnz	w24, #0, 41e15c <_obstack_memory_used@@Base+0x9128>
  41e154:	ldr	x0, [sp, #16]
  41e158:	bl	402770 <free@plt>
  41e15c:	cbz	x23, 41e1a8 <_obstack_memory_used@@Base+0x9174>
  41e160:	ldr	x8, [x22, #152]
  41e164:	cbz	x8, 41e1a8 <_obstack_memory_used@@Base+0x9174>
  41e168:	add	x22, x23, #0x8
  41e16c:	mov	x0, x19
  41e170:	mov	x1, x22
  41e174:	mov	x2, x20
  41e178:	bl	41d8ac <_obstack_memory_used@@Base+0x8878>
  41e17c:	str	w0, [x21]
  41e180:	cbnz	w0, 41e1c4 <_obstack_memory_used@@Base+0x9190>
  41e184:	ldrb	w8, [x23, #104]
  41e188:	tbz	w8, #6, 41e1a8 <_obstack_memory_used@@Base+0x9174>
  41e18c:	mov	x0, x19
  41e190:	mov	x1, x22
  41e194:	bl	41d9b4 <_obstack_memory_used@@Base+0x8980>
  41e198:	str	w0, [x21]
  41e19c:	cbnz	w0, 41e1c4 <_obstack_memory_used@@Base+0x9190>
  41e1a0:	ldr	x8, [x19, #184]
  41e1a4:	ldr	x23, [x8, x20, lsl #3]
  41e1a8:	mov	x0, x23
  41e1ac:	ldp	x20, x19, [sp, #80]
  41e1b0:	ldp	x22, x21, [sp, #64]
  41e1b4:	ldp	x24, x23, [sp, #48]
  41e1b8:	ldp	x29, x30, [sp, #32]
  41e1bc:	add	sp, sp, #0x60
  41e1c0:	ret
  41e1c4:	mov	x23, xzr
  41e1c8:	b	41e1a8 <_obstack_memory_used@@Base+0x9174>
  41e1cc:	stp	x29, x30, [sp, #-80]!
  41e1d0:	stp	x20, x19, [sp, #64]
  41e1d4:	mov	x20, x2
  41e1d8:	mov	x19, x0
  41e1dc:	stp	x26, x25, [sp, #16]
  41e1e0:	stp	x24, x23, [sp, #32]
  41e1e4:	stp	x22, x21, [sp, #48]
  41e1e8:	mov	x29, sp
  41e1ec:	cbz	x1, 41e2f0 <_obstack_memory_used@@Base+0x92bc>
  41e1f0:	ldr	x24, [x1, #8]
  41e1f4:	mov	x21, x1
  41e1f8:	cbz	x20, 41e2dc <_obstack_memory_used@@Base+0x92a8>
  41e1fc:	cmp	x24, #0x1
  41e200:	b.lt	41e2dc <_obstack_memory_used@@Base+0x92a8>  // b.tstop
  41e204:	ldr	x23, [x20, #8]
  41e208:	cmp	x23, #0x1
  41e20c:	b.lt	41e2dc <_obstack_memory_used@@Base+0x92a8>  // b.tstop
  41e210:	add	x8, x23, x24
  41e214:	lsl	x0, x8, #3
  41e218:	str	x8, [x19]
  41e21c:	bl	4024e0 <malloc@plt>
  41e220:	str	x0, [x19, #16]
  41e224:	cbz	x0, 41e374 <_obstack_memory_used@@Base+0x9340>
  41e228:	mov	x25, xzr
  41e22c:	mov	x22, xzr
  41e230:	mov	x11, xzr
  41e234:	mov	x9, xzr
  41e238:	mov	w10, #0x1                   	// #1
  41e23c:	add	x8, x0, x22, lsl #3
  41e240:	mov	x26, x11
  41e244:	tbz	w10, #0, 41e330 <_obstack_memory_used@@Base+0x92fc>
  41e248:	ldr	x10, [x21, #16]
  41e24c:	ldr	x11, [x20, #16]
  41e250:	ldr	x13, [x10, x9, lsl #3]
  41e254:	ldr	x12, [x11, x26, lsl #3]
  41e258:	cmp	x13, x12
  41e25c:	b.le	41e280 <_obstack_memory_used@@Base+0x924c>
  41e260:	add	x26, x26, #0x1
  41e264:	cmp	x23, x26
  41e268:	add	x22, x22, #0x1
  41e26c:	cset	w10, gt
  41e270:	cmp	x24, x9
  41e274:	str	x12, [x8], #8
  41e278:	b.gt	41e244 <_obstack_memory_used@@Base+0x9210>
  41e27c:	b	41e2b4 <_obstack_memory_used@@Base+0x9280>
  41e280:	str	x13, [x8]
  41e284:	ldr	x23, [x20, #8]
  41e288:	ldr	x24, [x21, #8]
  41e28c:	cinc	x11, x26, eq  // eq = none
  41e290:	add	x9, x9, #0x1
  41e294:	cmp	x23, x11
  41e298:	add	x22, x22, #0x1
  41e29c:	cset	w10, gt
  41e2a0:	cmp	x24, x9
  41e2a4:	sub	x25, x25, #0x1
  41e2a8:	b.gt	41e23c <_obstack_memory_used@@Base+0x9208>
  41e2ac:	cmp	x13, x12
  41e2b0:	cinc	x26, x26, eq  // eq = none
  41e2b4:	cbz	w10, 41e354 <_obstack_memory_used@@Base+0x9320>
  41e2b8:	ldr	x8, [x20, #16]
  41e2bc:	sub	x9, x23, x26
  41e2c0:	add	x0, x0, x22, lsl #3
  41e2c4:	lsl	x2, x9, #3
  41e2c8:	add	x1, x8, x26, lsl #3
  41e2cc:	bl	402320 <memcpy@plt>
  41e2d0:	sub	x8, x22, x26
  41e2d4:	add	x22, x8, x23
  41e2d8:	b	41e354 <_obstack_memory_used@@Base+0x9320>
  41e2dc:	cmp	x24, #0x1
  41e2e0:	b.lt	41e2f0 <_obstack_memory_used@@Base+0x92bc>  // b.tstop
  41e2e4:	mov	x0, x19
  41e2e8:	mov	x1, x21
  41e2ec:	b	41e308 <_obstack_memory_used@@Base+0x92d4>
  41e2f0:	cbz	x20, 41e320 <_obstack_memory_used@@Base+0x92ec>
  41e2f4:	ldr	x8, [x20, #8]
  41e2f8:	cmp	x8, #0x1
  41e2fc:	b.lt	41e320 <_obstack_memory_used@@Base+0x92ec>  // b.tstop
  41e300:	mov	x0, x19
  41e304:	mov	x1, x20
  41e308:	ldp	x20, x19, [sp, #64]
  41e30c:	ldp	x22, x21, [sp, #48]
  41e310:	ldp	x24, x23, [sp, #32]
  41e314:	ldp	x26, x25, [sp, #16]
  41e318:	ldp	x29, x30, [sp], #80
  41e31c:	b	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41e320:	mov	w0, wzr
  41e324:	stp	xzr, xzr, [x19]
  41e328:	str	xzr, [x19, #16]
  41e32c:	b	41e35c <_obstack_memory_used@@Base+0x9328>
  41e330:	ldr	x10, [x21, #16]
  41e334:	sub	x11, x24, x9
  41e338:	lsl	x2, x11, #3
  41e33c:	mov	x0, x8
  41e340:	add	x1, x10, x9, lsl #3
  41e344:	bl	402320 <memcpy@plt>
  41e348:	ldr	x8, [x21, #8]
  41e34c:	add	x8, x8, x25
  41e350:	add	x22, x8, x22
  41e354:	mov	w0, wzr
  41e358:	str	x22, [x19, #8]
  41e35c:	ldp	x20, x19, [sp, #64]
  41e360:	ldp	x22, x21, [sp, #48]
  41e364:	ldp	x24, x23, [sp, #32]
  41e368:	ldp	x26, x25, [sp, #16]
  41e36c:	ldp	x29, x30, [sp], #80
  41e370:	ret
  41e374:	mov	w0, #0xc                   	// #12
  41e378:	b	41e35c <_obstack_memory_used@@Base+0x9328>
  41e37c:	ldr	x9, [x0, #200]
  41e380:	mov	x8, x0
  41e384:	cmp	x9, #0x1
  41e388:	b.lt	41e3cc <_obstack_memory_used@@Base+0x9398>  // b.tstop
  41e38c:	ldr	x10, [x8, #216]
  41e390:	mov	x0, xzr
  41e394:	mov	w11, #0x28                  	// #40
  41e398:	mov	x12, x9
  41e39c:	add	x13, x0, x12
  41e3a0:	cmp	x13, #0x0
  41e3a4:	cinc	x13, x13, lt  // lt = tstop
  41e3a8:	asr	x13, x13, #1
  41e3ac:	madd	x14, x13, x11, x10
  41e3b0:	ldr	x14, [x14, #8]
  41e3b4:	cmp	x14, x1
  41e3b8:	csel	x12, x12, x13, lt  // lt = tstop
  41e3bc:	csinc	x0, x0, x13, ge  // ge = tcont
  41e3c0:	cmp	x0, x12
  41e3c4:	b.lt	41e39c <_obstack_memory_used@@Base+0x9368>  // b.tstop
  41e3c8:	b	41e3d0 <_obstack_memory_used@@Base+0x939c>
  41e3cc:	mov	x0, xzr
  41e3d0:	cmp	x0, x9
  41e3d4:	b.ge	41e3f0 <_obstack_memory_used@@Base+0x93bc>  // b.tcont
  41e3d8:	ldr	x8, [x8, #216]
  41e3dc:	mov	w9, #0x28                  	// #40
  41e3e0:	madd	x8, x0, x9, x8
  41e3e4:	ldr	x8, [x8, #8]
  41e3e8:	cmp	x8, x1
  41e3ec:	b.eq	41e3f4 <_obstack_memory_used@@Base+0x93c0>  // b.none
  41e3f0:	mov	x0, #0xffffffffffffffff    	// #-1
  41e3f4:	ret
  41e3f8:	stp	x29, x30, [sp, #-48]!
  41e3fc:	stp	x20, x19, [sp, #32]
  41e400:	ldr	x8, [x0, #64]
  41e404:	str	x21, [sp, #16]
  41e408:	ldr	x21, [x0, #192]
  41e40c:	mov	x19, x0
  41e410:	mov	x20, x1
  41e414:	cmp	x8, x1
  41e418:	mov	x29, sp
  41e41c:	b.gt	41e42c <_obstack_memory_used@@Base+0x93f8>
  41e420:	ldr	x9, [x19, #88]
  41e424:	cmp	x8, x9
  41e428:	b.lt	41e444 <_obstack_memory_used@@Base+0x9410>  // b.tstop
  41e42c:	ldr	x8, [x19, #48]
  41e430:	cmp	x8, x20
  41e434:	b.gt	41e454 <_obstack_memory_used@@Base+0x9420>
  41e438:	ldr	x9, [x19, #88]
  41e43c:	cmp	x8, x9
  41e440:	b.ge	41e454 <_obstack_memory_used@@Base+0x9420>  // b.tcont
  41e444:	add	w1, w20, #0x1
  41e448:	mov	x0, x19
  41e44c:	bl	41dfbc <_obstack_memory_used@@Base+0x8f88>
  41e450:	cbnz	w0, 41e488 <_obstack_memory_used@@Base+0x9454>
  41e454:	cmp	x21, x20
  41e458:	b.ge	41e484 <_obstack_memory_used@@Base+0x9450>  // b.tcont
  41e45c:	ldr	x8, [x19, #184]
  41e460:	sub	x9, x20, x21
  41e464:	lsl	x2, x9, #3
  41e468:	mov	w1, wzr
  41e46c:	add	x8, x8, x21, lsl #3
  41e470:	add	x0, x8, #0x8
  41e474:	bl	4025b0 <memset@plt>
  41e478:	mov	w0, wzr
  41e47c:	str	x20, [x19, #192]
  41e480:	b	41e488 <_obstack_memory_used@@Base+0x9454>
  41e484:	mov	w0, wzr
  41e488:	ldp	x20, x19, [sp, #32]
  41e48c:	ldr	x21, [sp, #16]
  41e490:	ldp	x29, x30, [sp], #48
  41e494:	ret
  41e498:	stp	x29, x30, [sp, #-96]!
  41e49c:	stp	x28, x27, [sp, #16]
  41e4a0:	stp	x26, x25, [sp, #32]
  41e4a4:	stp	x24, x23, [sp, #48]
  41e4a8:	stp	x22, x21, [sp, #64]
  41e4ac:	stp	x20, x19, [sp, #80]
  41e4b0:	mov	x22, x2
  41e4b4:	mov	x23, x3
  41e4b8:	ldr	x2, [x2]
  41e4bc:	ldr	x3, [x22, #8]
  41e4c0:	mov	x19, x4
  41e4c4:	mov	x21, x1
  41e4c8:	add	x1, x22, #0x10
  41e4cc:	mov	w6, #0x8                   	// #8
  41e4d0:	mov	x4, x23
  41e4d4:	mov	x5, x19
  41e4d8:	mov	x29, sp
  41e4dc:	mov	x20, x0
  41e4e0:	bl	41e604 <_obstack_memory_used@@Base+0x95d0>
  41e4e4:	cbz	w0, 41e504 <_obstack_memory_used@@Base+0x94d0>
  41e4e8:	ldp	x20, x19, [sp, #80]
  41e4ec:	ldp	x22, x21, [sp, #64]
  41e4f0:	ldp	x24, x23, [sp, #48]
  41e4f4:	ldp	x26, x25, [sp, #32]
  41e4f8:	ldp	x28, x27, [sp, #16]
  41e4fc:	ldp	x29, x30, [sp], #96
  41e500:	ret
  41e504:	ldp	x27, x8, [x20, #200]
  41e508:	ldr	x26, [x21]
  41e50c:	ldr	x25, [x22, #8]
  41e510:	cmp	x27, x8
  41e514:	b.ge	41e520 <_obstack_memory_used@@Base+0x94ec>  // b.tcont
  41e518:	ldr	x24, [x20, #216]
  41e51c:	b	41e560 <_obstack_memory_used@@Base+0x952c>
  41e520:	ldr	x0, [x20, #216]
  41e524:	add	x8, x8, x8, lsl #2
  41e528:	lsl	x1, x8, #4
  41e52c:	bl	402610 <realloc@plt>
  41e530:	cbz	x0, 41e5f4 <_obstack_memory_used@@Base+0x95c0>
  41e534:	ldp	x27, x28, [x20, #200]
  41e538:	mov	w8, #0x28                  	// #40
  41e53c:	mov	x24, x0
  41e540:	str	x0, [x20, #216]
  41e544:	madd	x0, x27, x8, x0
  41e548:	add	x8, x28, x28, lsl #2
  41e54c:	lsl	x2, x8, #3
  41e550:	mov	w1, wzr
  41e554:	bl	4025b0 <memset@plt>
  41e558:	lsl	x8, x28, #1
  41e55c:	str	x8, [x20, #208]
  41e560:	subs	x8, x27, #0x1
  41e564:	b.lt	41e58c <_obstack_memory_used@@Base+0x9558>  // b.tstop
  41e568:	mov	w9, #0x28                  	// #40
  41e56c:	madd	x9, x8, x9, x24
  41e570:	ldr	x9, [x9, #8]
  41e574:	cmp	x9, x19
  41e578:	b.ne	41e58c <_obstack_memory_used@@Base+0x9558>  // b.any
  41e57c:	mov	w9, #0x28                  	// #40
  41e580:	madd	x8, x8, x9, x24
  41e584:	mov	w9, #0x1                   	// #1
  41e588:	strb	w9, [x8, #32]
  41e58c:	mov	w9, #0x28                  	// #40
  41e590:	subs	x8, x25, x26
  41e594:	add	x10, x27, #0x1
  41e598:	madd	x9, x27, x9, x24
  41e59c:	csetm	w11, eq  // eq = none
  41e5a0:	stp	x23, x19, [x9]
  41e5a4:	stp	x26, x25, [x9, #16]
  41e5a8:	strh	w11, [x9, #34]
  41e5ac:	str	x10, [x20, #200]
  41e5b0:	strb	wzr, [x9, #32]
  41e5b4:	ldrsw	x9, [x20, #224]
  41e5b8:	cmp	x8, x9
  41e5bc:	b.le	41e5c4 <_obstack_memory_used@@Base+0x9590>
  41e5c0:	str	w8, [x20, #224]
  41e5c4:	ldr	x8, [x22, #8]
  41e5c8:	ldr	x9, [x21]
  41e5cc:	mov	x0, x20
  41e5d0:	ldp	x22, x21, [sp, #64]
  41e5d4:	add	x8, x8, x19
  41e5d8:	ldp	x20, x19, [sp, #80]
  41e5dc:	ldp	x24, x23, [sp, #48]
  41e5e0:	ldp	x26, x25, [sp, #32]
  41e5e4:	ldp	x28, x27, [sp, #16]
  41e5e8:	sub	x1, x8, x9
  41e5ec:	ldp	x29, x30, [sp], #96
  41e5f0:	b	41e3f8 <_obstack_memory_used@@Base+0x93c4>
  41e5f4:	ldr	x0, [x20, #216]
  41e5f8:	bl	402770 <free@plt>
  41e5fc:	mov	w0, #0xc                   	// #12
  41e600:	b	41e4e8 <_obstack_memory_used@@Base+0x94b4>
  41e604:	sub	sp, sp, #0xf0
  41e608:	stp	x29, x30, [sp, #144]
  41e60c:	stp	x28, x27, [sp, #160]
  41e610:	stp	x26, x25, [sp, #176]
  41e614:	stp	x24, x23, [sp, #192]
  41e618:	stp	x22, x21, [sp, #208]
  41e61c:	stp	x20, x19, [sp, #224]
  41e620:	ldr	x8, [x0, #152]
  41e624:	add	x29, sp, #0x90
  41e628:	stur	wzr, [x29, #-36]
  41e62c:	lsl	x10, x2, #4
  41e630:	str	x8, [sp, #64]
  41e634:	ldr	x8, [x8]
  41e638:	ldrsw	x9, [x0, #224]
  41e63c:	ldr	x20, [x1, #8]
  41e640:	mov	x25, x4
  41e644:	ldr	x8, [x8, x10]
  41e648:	mov	x19, x2
  41e64c:	mov	x26, x1
  41e650:	mov	x21, x0
  41e654:	stp	x5, x8, [sp, #48]
  41e658:	add	x8, x9, x5
  41e65c:	cmp	x20, x8
  41e660:	mov	x22, x3
  41e664:	str	w6, [sp, #44]
  41e668:	b.le	41ea38 <_obstack_memory_used@@Base+0x9a04>
  41e66c:	ldr	x27, [x26, #16]
  41e670:	mov	w24, w6
  41e674:	mov	x23, x5
  41e678:	ldr	x9, [x21, #72]
  41e67c:	ldr	x8, [x26]
  41e680:	ldr	x20, [x21, #184]
  41e684:	mov	x0, x21
  41e688:	stp	x9, x26, [sp, #24]
  41e68c:	ldr	w2, [x21, #160]
  41e690:	cmp	x8, #0x0
  41e694:	csel	x26, x22, x8, eq  // eq = none
  41e698:	sub	x1, x26, #0x1
  41e69c:	str	x27, [x21, #184]
  41e6a0:	str	x26, [x21, #72]
  41e6a4:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41e6a8:	cmp	x26, x22
  41e6ac:	mov	w22, w0
  41e6b0:	b.ne	41e748 <_obstack_memory_used@@Base+0x9714>  // b.any
  41e6b4:	mov	w8, #0x1                   	// #1
  41e6b8:	dup	v0.2d, x8
  41e6bc:	mov	w0, #0x8                   	// #8
  41e6c0:	stur	q0, [x29, #-64]
  41e6c4:	bl	4024e0 <malloc@plt>
  41e6c8:	stur	x0, [x29, #-48]
  41e6cc:	cbz	x0, 41ea9c <_obstack_memory_used@@Base+0x9a68>
  41e6d0:	str	x19, [x0]
  41e6d4:	ldp	x2, x0, [sp, #56]
  41e6d8:	sub	x1, x29, #0x40
  41e6dc:	mov	w3, w24
  41e6e0:	stur	wzr, [x29, #-36]
  41e6e4:	bl	41eabc <_obstack_memory_used@@Base+0x9a88>
  41e6e8:	stur	w0, [x29, #-36]
  41e6ec:	cbnz	w0, 41ea8c <_obstack_memory_used@@Base+0x9a58>
  41e6f0:	ldur	x8, [x29, #-56]
  41e6f4:	cbz	x8, 41e718 <_obstack_memory_used@@Base+0x96e4>
  41e6f8:	ldr	x3, [sp, #56]
  41e6fc:	sub	x1, x29, #0x40
  41e700:	mov	x0, x21
  41e704:	mov	x2, x26
  41e708:	mov	w4, w24
  41e70c:	bl	41ebfc <_obstack_memory_used@@Base+0x9bc8>
  41e710:	stur	w0, [x29, #-36]
  41e714:	cbnz	w0, 41ea8c <_obstack_memory_used@@Base+0x9a58>
  41e718:	ldr	x1, [sp, #64]
  41e71c:	sub	x0, x29, #0x24
  41e720:	sub	x2, x29, #0x40
  41e724:	mov	w3, w22
  41e728:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41e72c:	mov	x27, x0
  41e730:	cbnz	x0, 41e73c <_obstack_memory_used@@Base+0x9708>
  41e734:	ldur	w8, [x29, #-36]
  41e738:	cbnz	w8, 41ea28 <_obstack_memory_used@@Base+0x99f4>
  41e73c:	ldr	x8, [x21, #184]
  41e740:	str	x27, [x8, x26, lsl #3]
  41e744:	b	41e760 <_obstack_memory_used@@Base+0x972c>
  41e748:	ldr	x27, [x27, x26, lsl #3]
  41e74c:	cbz	x27, 41e758 <_obstack_memory_used@@Base+0x9724>
  41e750:	ldrb	w8, [x27, #104]
  41e754:	tbnz	w8, #6, 41e9e8 <_obstack_memory_used@@Base+0x99b4>
  41e758:	stp	xzr, xzr, [x29, #-64]
  41e75c:	stur	xzr, [x29, #-48]
  41e760:	cmp	x26, x23
  41e764:	b.ge	41e980 <_obstack_memory_used@@Base+0x994c>  // b.tcont
  41e768:	stp	x20, x25, [sp, #8]
  41e76c:	ldp	x22, x20, [sp, #56]
  41e770:	mov	x25, xzr
  41e774:	ldrsw	x8, [x21, #224]
  41e778:	cmp	x25, x8
  41e77c:	b.gt	41e97c <_obstack_memory_used@@Base+0x9948>
  41e780:	stur	xzr, [x29, #-56]
  41e784:	ldr	x8, [x21, #184]
  41e788:	add	x19, x26, #0x1
  41e78c:	ldr	x8, [x8, x19, lsl #3]
  41e790:	cbz	x8, 41e7a8 <_obstack_memory_used@@Base+0x9774>
  41e794:	add	x1, x8, #0x8
  41e798:	sub	x0, x29, #0x40
  41e79c:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41e7a0:	stur	w0, [x29, #-36]
  41e7a4:	cbnz	w0, 41ea28 <_obstack_memory_used@@Base+0x99f4>
  41e7a8:	cbz	x27, 41e8e4 <_obstack_memory_used@@Base+0x98b0>
  41e7ac:	str	x19, [sp, #72]
  41e7b0:	ldr	x19, [x21, #152]
  41e7b4:	stur	wzr, [x29, #-4]
  41e7b8:	stp	xzr, xzr, [x29, #-32]
  41e7bc:	stur	xzr, [x29, #-16]
  41e7c0:	ldr	x8, [x27, #40]
  41e7c4:	cmp	x8, #0x1
  41e7c8:	b.lt	41e8d4 <_obstack_memory_used@@Base+0x98a0>  // b.tstop
  41e7cc:	mov	x24, xzr
  41e7d0:	ldr	x8, [x27, #48]
  41e7d4:	ldr	x22, [x8, x24, lsl #3]
  41e7d8:	ldr	x8, [x19]
  41e7dc:	add	x9, x8, x22, lsl #4
  41e7e0:	ldrb	w9, [x9, #10]
  41e7e4:	tbnz	w9, #4, 41e800 <_obstack_memory_used@@Base+0x97cc>
  41e7e8:	add	x1, x8, x22, lsl #4
  41e7ec:	mov	x0, x21
  41e7f0:	mov	x2, x26
  41e7f4:	bl	41f484 <_obstack_memory_used@@Base+0xa450>
  41e7f8:	tbnz	w0, #0, 41e890 <_obstack_memory_used@@Base+0x985c>
  41e7fc:	b	41e8a4 <_obstack_memory_used@@Base+0x9870>
  41e800:	mov	x0, x19
  41e804:	mov	x1, x22
  41e808:	mov	x2, x21
  41e80c:	mov	x3, x26
  41e810:	bl	41f18c <_obstack_memory_used@@Base+0xa158>
  41e814:	cmp	w0, #0x2
  41e818:	b.lt	41e88c <_obstack_memory_used@@Base+0x9858>  // b.tstop
  41e81c:	ldr	x8, [x21, #184]
  41e820:	ldr	x9, [x19, #24]
  41e824:	add	x28, x26, w0, uxtw
  41e828:	ldr	x8, [x8, x28, lsl #3]
  41e82c:	ldr	x20, [x9, x22, lsl #3]
  41e830:	stur	xzr, [x29, #-24]
  41e834:	cbz	x8, 41e84c <_obstack_memory_used@@Base+0x9818>
  41e838:	add	x1, x8, #0x8
  41e83c:	sub	x0, x29, #0x20
  41e840:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41e844:	stur	w0, [x29, #-4]
  41e848:	cbnz	w0, 41ea30 <_obstack_memory_used@@Base+0x99fc>
  41e84c:	sub	x0, x29, #0x20
  41e850:	mov	x1, x20
  41e854:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41e858:	tbz	w0, #0, 41ea08 <_obstack_memory_used@@Base+0x99d4>
  41e85c:	sub	x0, x29, #0x4
  41e860:	sub	x2, x29, #0x20
  41e864:	mov	x1, x19
  41e868:	bl	41ef9c <_obstack_memory_used@@Base+0x9f68>
  41e86c:	ldr	x8, [x21, #184]
  41e870:	str	x0, [x8, x28, lsl #3]
  41e874:	ldr	x8, [x21, #184]
  41e878:	ldr	x8, [x8, x28, lsl #3]
  41e87c:	cbnz	x8, 41e890 <_obstack_memory_used@@Base+0x985c>
  41e880:	ldur	w23, [x29, #-4]
  41e884:	cbz	w23, 41e890 <_obstack_memory_used@@Base+0x985c>
  41e888:	b	41ea0c <_obstack_memory_used@@Base+0x99d8>
  41e88c:	cbz	w0, 41e8b8 <_obstack_memory_used@@Base+0x9884>
  41e890:	ldr	x8, [x19, #24]
  41e894:	sub	x0, x29, #0x40
  41e898:	ldr	x1, [x8, x22, lsl #3]
  41e89c:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41e8a0:	tbz	w0, #0, 41ea08 <_obstack_memory_used@@Base+0x99d4>
  41e8a4:	ldr	x8, [x27, #40]
  41e8a8:	add	x24, x24, #0x1
  41e8ac:	cmp	x24, x8
  41e8b0:	b.lt	41e7d0 <_obstack_memory_used@@Base+0x979c>  // b.tstop
  41e8b4:	b	41e8c0 <_obstack_memory_used@@Base+0x988c>
  41e8b8:	ldr	x8, [x19]
  41e8bc:	b	41e7e8 <_obstack_memory_used@@Base+0x97b4>
  41e8c0:	ldur	x0, [x29, #-16]
  41e8c4:	ldp	x23, x22, [sp, #48]
  41e8c8:	ldr	w24, [sp, #44]
  41e8cc:	ldr	x20, [sp, #64]
  41e8d0:	b	41e8d8 <_obstack_memory_used@@Base+0x98a4>
  41e8d4:	mov	x0, xzr
  41e8d8:	bl	402770 <free@plt>
  41e8dc:	ldr	x19, [sp, #72]
  41e8e0:	stur	wzr, [x29, #-36]
  41e8e4:	ldur	x8, [x29, #-56]
  41e8e8:	cbz	x8, 41e928 <_obstack_memory_used@@Base+0x98f4>
  41e8ec:	sub	x1, x29, #0x40
  41e8f0:	mov	x0, x20
  41e8f4:	mov	x2, x22
  41e8f8:	mov	w3, w24
  41e8fc:	bl	41eabc <_obstack_memory_used@@Base+0x9a88>
  41e900:	stur	w0, [x29, #-36]
  41e904:	cbnz	w0, 41ea28 <_obstack_memory_used@@Base+0x99f4>
  41e908:	sub	x1, x29, #0x40
  41e90c:	mov	x0, x21
  41e910:	mov	x2, x19
  41e914:	mov	x3, x22
  41e918:	mov	w4, w24
  41e91c:	bl	41ebfc <_obstack_memory_used@@Base+0x9bc8>
  41e920:	stur	w0, [x29, #-36]
  41e924:	cbnz	w0, 41ea28 <_obstack_memory_used@@Base+0x99f4>
  41e928:	ldr	w2, [x21, #160]
  41e92c:	mov	x0, x21
  41e930:	mov	x1, x26
  41e934:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41e938:	mov	w3, w0
  41e93c:	sub	x0, x29, #0x24
  41e940:	sub	x2, x29, #0x40
  41e944:	mov	x1, x20
  41e948:	bl	41c680 <_obstack_memory_used@@Base+0x764c>
  41e94c:	mov	x27, x0
  41e950:	cbnz	x0, 41e95c <_obstack_memory_used@@Base+0x9928>
  41e954:	ldur	w8, [x29, #-36]
  41e958:	cbnz	w8, 41ea28 <_obstack_memory_used@@Base+0x99f4>
  41e95c:	ldr	x8, [x21, #184]
  41e960:	cmp	x27, #0x0
  41e964:	csinc	x25, xzr, x25, ne  // ne = any
  41e968:	cmp	x19, x23
  41e96c:	mov	x26, x19
  41e970:	str	x27, [x8, x19, lsl #3]
  41e974:	b.ne	41e774 <_obstack_memory_used@@Base+0x9740>  // b.any
  41e978:	mov	x26, x23
  41e97c:	ldp	x20, x25, [sp, #8]
  41e980:	ldur	x0, [x29, #-48]
  41e984:	bl	402770 <free@plt>
  41e988:	ldr	x8, [x21, #184]
  41e98c:	ldr	x9, [sp, #32]
  41e990:	ldr	x8, [x8, x23, lsl #3]
  41e994:	str	x26, [x9]
  41e998:	ldr	x9, [sp, #24]
  41e99c:	str	x20, [x21, #184]
  41e9a0:	str	x9, [x21, #72]
  41e9a4:	cbz	x8, 41e9c0 <_obstack_memory_used@@Base+0x998c>
  41e9a8:	add	x0, x8, #0x8
  41e9ac:	mov	x1, x25
  41e9b0:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41e9b4:	cbz	x0, 41e9c0 <_obstack_memory_used@@Base+0x998c>
  41e9b8:	mov	w19, wzr
  41e9bc:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41e9c0:	mov	w19, #0x1                   	// #1
  41e9c4:	mov	w0, w19
  41e9c8:	ldp	x20, x19, [sp, #224]
  41e9cc:	ldp	x22, x21, [sp, #208]
  41e9d0:	ldp	x24, x23, [sp, #192]
  41e9d4:	ldp	x26, x25, [sp, #176]
  41e9d8:	ldp	x28, x27, [sp, #160]
  41e9dc:	ldp	x29, x30, [sp, #144]
  41e9e0:	add	sp, sp, #0xf0
  41e9e4:	ret
  41e9e8:	add	x1, x27, #0x8
  41e9ec:	sub	x0, x29, #0x40
  41e9f0:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41e9f4:	stur	w0, [x29, #-36]
  41e9f8:	cbnz	w0, 41eaac <_obstack_memory_used@@Base+0x9a78>
  41e9fc:	ldrb	w8, [x27, #104]
  41ea00:	tbnz	w8, #6, 41e6f0 <_obstack_memory_used@@Base+0x96bc>
  41ea04:	b	41e760 <_obstack_memory_used@@Base+0x972c>
  41ea08:	mov	w23, #0xc                   	// #12
  41ea0c:	ldur	x0, [x29, #-16]
  41ea10:	bl	402770 <free@plt>
  41ea14:	ldur	x0, [x29, #-48]
  41ea18:	stur	w23, [x29, #-36]
  41ea1c:	bl	402770 <free@plt>
  41ea20:	ldur	w19, [x29, #-36]
  41ea24:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41ea28:	ldur	x0, [x29, #-48]
  41ea2c:	b	41ea1c <_obstack_memory_used@@Base+0x99e8>
  41ea30:	mov	w23, w0
  41ea34:	b	41ea0c <_obstack_memory_used@@Base+0x99d8>
  41ea38:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  41ea3c:	sub	x9, x9, x20
  41ea40:	cmp	x9, x8
  41ea44:	b.le	41eab4 <_obstack_memory_used@@Base+0x9a80>
  41ea48:	add	x23, x8, #0x1
  41ea4c:	add	x24, x23, x20
  41ea50:	lsr	x8, x24, #61
  41ea54:	cbnz	x8, 41eab4 <_obstack_memory_used@@Base+0x9a80>
  41ea58:	ldr	x0, [x26, #16]
  41ea5c:	lsl	x1, x24, #3
  41ea60:	bl	402610 <realloc@plt>
  41ea64:	cbz	x0, 41eab4 <_obstack_memory_used@@Base+0x9a80>
  41ea68:	mov	x27, x0
  41ea6c:	stp	x24, x0, [x26, #8]
  41ea70:	add	x0, x0, x20, lsl #3
  41ea74:	lsl	x2, x23, #3
  41ea78:	mov	w1, wzr
  41ea7c:	bl	4025b0 <memset@plt>
  41ea80:	ldr	x23, [sp, #48]
  41ea84:	ldr	w24, [sp, #44]
  41ea88:	b	41e678 <_obstack_memory_used@@Base+0x9644>
  41ea8c:	mov	w19, w0
  41ea90:	ldur	x0, [x29, #-48]
  41ea94:	bl	402770 <free@plt>
  41ea98:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41ea9c:	mov	w19, #0xc                   	// #12
  41eaa0:	stp	xzr, xzr, [x29, #-64]
  41eaa4:	stur	w19, [x29, #-36]
  41eaa8:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41eaac:	mov	w19, w0
  41eab0:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41eab4:	mov	w19, #0xc                   	// #12
  41eab8:	b	41e9c4 <_obstack_memory_used@@Base+0x9990>
  41eabc:	sub	sp, sp, #0x70
  41eac0:	stp	x29, x30, [sp, #32]
  41eac4:	stp	x24, x23, [sp, #64]
  41eac8:	stp	x22, x21, [sp, #80]
  41eacc:	stp	x20, x19, [sp, #96]
  41ead0:	ldr	x23, [x1, #8]
  41ead4:	mov	x22, x0
  41ead8:	str	x25, [sp, #48]
  41eadc:	add	x29, sp, #0x20
  41eae0:	lsl	x0, x23, #3
  41eae4:	mov	w20, w3
  41eae8:	mov	x21, x2
  41eaec:	mov	x19, x1
  41eaf0:	stp	x23, xzr, [sp, #8]
  41eaf4:	bl	4024e0 <malloc@plt>
  41eaf8:	str	x0, [sp, #24]
  41eafc:	cbz	x0, 41ebf4 <_obstack_memory_used@@Base+0x9bc0>
  41eb00:	cmp	x23, #0x1
  41eb04:	b.lt	41ebb8 <_obstack_memory_used@@Base+0x9b84>  // b.tstop
  41eb08:	mov	x24, xzr
  41eb0c:	mov	w25, #0x18                  	// #24
  41eb10:	ldr	x8, [x19, #16]
  41eb14:	ldr	x9, [x22, #48]
  41eb18:	ldr	x2, [x8, x24, lsl #3]
  41eb1c:	madd	x1, x2, x25, x9
  41eb20:	ldr	x8, [x1, #8]
  41eb24:	cmp	x8, #0x1
  41eb28:	b.lt	41eb68 <_obstack_memory_used@@Base+0x9b34>  // b.tstop
  41eb2c:	madd	x9, x2, x25, x9
  41eb30:	ldr	x9, [x9, #16]
  41eb34:	ldr	x10, [x22]
  41eb38:	ldr	x11, [x9]
  41eb3c:	add	x12, x10, x11, lsl #4
  41eb40:	ldrb	w12, [x12, #8]
  41eb44:	cmp	w12, w20
  41eb48:	b.ne	41eb5c <_obstack_memory_used@@Base+0x9b28>  // b.any
  41eb4c:	lsl	x12, x11, #4
  41eb50:	ldr	x12, [x10, x12]
  41eb54:	cmp	x12, x21
  41eb58:	b.eq	41eb88 <_obstack_memory_used@@Base+0x9b54>  // b.none
  41eb5c:	subs	x8, x8, #0x1
  41eb60:	add	x9, x9, #0x8
  41eb64:	b.ne	41eb38 <_obstack_memory_used@@Base+0x9b04>  // b.any
  41eb68:	add	x0, sp, #0x8
  41eb6c:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41eb70:	cbnz	w0, 41eba8 <_obstack_memory_used@@Base+0x9b74>
  41eb74:	ldr	x8, [x19, #8]
  41eb78:	add	x24, x24, #0x1
  41eb7c:	cmp	x24, x8
  41eb80:	b.lt	41eb10 <_obstack_memory_used@@Base+0x9adc>  // b.tstop
  41eb84:	b	41ebb8 <_obstack_memory_used@@Base+0x9b84>
  41eb88:	cmn	x11, #0x1
  41eb8c:	b.eq	41eb68 <_obstack_memory_used@@Base+0x9b34>  // b.none
  41eb90:	add	x1, sp, #0x8
  41eb94:	mov	x0, x22
  41eb98:	mov	x3, x21
  41eb9c:	mov	w4, w20
  41eba0:	bl	41ee90 <_obstack_memory_used@@Base+0x9e5c>
  41eba4:	cbz	w0, 41eb74 <_obstack_memory_used@@Base+0x9b40>
  41eba8:	mov	w23, w0
  41ebac:	ldr	x0, [sp, #24]
  41ebb0:	bl	402770 <free@plt>
  41ebb4:	b	41ebd4 <_obstack_memory_used@@Base+0x9ba0>
  41ebb8:	ldr	x0, [x19, #16]
  41ebbc:	bl	402770 <free@plt>
  41ebc0:	ldr	x8, [sp, #24]
  41ebc4:	ldur	q0, [sp, #8]
  41ebc8:	mov	w23, wzr
  41ebcc:	str	x8, [x19, #16]
  41ebd0:	str	q0, [x19]
  41ebd4:	mov	w0, w23
  41ebd8:	ldp	x20, x19, [sp, #96]
  41ebdc:	ldp	x22, x21, [sp, #80]
  41ebe0:	ldp	x24, x23, [sp, #64]
  41ebe4:	ldr	x25, [sp, #48]
  41ebe8:	ldp	x29, x30, [sp, #32]
  41ebec:	add	sp, sp, #0x70
  41ebf0:	ret
  41ebf4:	mov	w23, #0xc                   	// #12
  41ebf8:	b	41ebd4 <_obstack_memory_used@@Base+0x9ba0>
  41ebfc:	sub	sp, sp, #0xa0
  41ec00:	stp	x29, x30, [sp, #64]
  41ec04:	stp	x28, x27, [sp, #80]
  41ec08:	stp	x26, x25, [sp, #96]
  41ec0c:	stp	x24, x23, [sp, #112]
  41ec10:	stp	x22, x21, [sp, #128]
  41ec14:	stp	x20, x19, [sp, #144]
  41ec18:	ldr	x23, [x0, #152]
  41ec1c:	mov	x24, x1
  41ec20:	mov	x1, x2
  41ec24:	add	x29, sp, #0x40
  41ec28:	str	w4, [sp, #28]
  41ec2c:	str	x3, [sp, #16]
  41ec30:	mov	x21, x2
  41ec34:	mov	x22, x0
  41ec38:	bl	41e37c <_obstack_memory_used@@Base+0x9348>
  41ec3c:	cmn	x0, #0x1
  41ec40:	b.eq	41ee68 <_obstack_memory_used@@Base+0x9e34>  // b.none
  41ec44:	mov	w8, #0x1                   	// #1
  41ec48:	dup	v0.2d, x8
  41ec4c:	mov	x25, x0
  41ec50:	mov	w9, #0x28                  	// #40
  41ec54:	str	q0, [sp]
  41ec58:	ldr	x8, [x22, #216]
  41ec5c:	madd	x8, x25, x9, x8
  41ec60:	add	x20, x8, #0x10
  41ec64:	ldur	x27, [x20, #-16]
  41ec68:	mov	x0, x24
  41ec6c:	mov	x1, x27
  41ec70:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41ec74:	cbz	x0, 41edf8 <_obstack_memory_used@@Base+0x9dc4>
  41ec78:	ldp	x9, x8, [x20]
  41ec7c:	add	x8, x8, x21
  41ec80:	sub	x19, x8, x9
  41ec84:	cmp	x19, x21
  41ec88:	b.ne	41ed20 <_obstack_memory_used@@Base+0x9cec>  // b.any
  41ec8c:	ldr	x8, [x23, #40]
  41ec90:	mov	w9, #0x18                  	// #24
  41ec94:	mov	x0, x24
  41ec98:	madd	x8, x27, x9, x8
  41ec9c:	ldr	x8, [x8, #16]
  41eca0:	ldr	x27, [x8]
  41eca4:	mov	x1, x27
  41eca8:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41ecac:	cbnz	x0, 41ed48 <_obstack_memory_used@@Base+0x9d14>
  41ecb0:	ldr	q0, [sp]
  41ecb4:	mov	w0, #0x8                   	// #8
  41ecb8:	str	q0, [sp, #32]
  41ecbc:	bl	4024e0 <malloc@plt>
  41ecc0:	str	x0, [sp, #48]
  41ecc4:	cbz	x0, 41ee08 <_obstack_memory_used@@Base+0x9dd4>
  41ecc8:	mov	w19, wzr
  41eccc:	str	x27, [x0]
  41ecd0:	ldr	x2, [sp, #16]
  41ecd4:	ldr	w3, [sp, #28]
  41ecd8:	add	x1, sp, #0x20
  41ecdc:	mov	x0, x23
  41ece0:	stur	w19, [x29, #-4]
  41ece4:	bl	41eabc <_obstack_memory_used@@Base+0x9a88>
  41ece8:	mov	w27, w0
  41ecec:	add	x1, sp, #0x20
  41ecf0:	mov	x0, x24
  41ecf4:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41ecf8:	ldr	x8, [sp, #48]
  41ecfc:	mov	w28, w0
  41ed00:	mov	x0, x8
  41ed04:	bl	402770 <free@plt>
  41ed08:	orr	w8, w27, w19
  41ed0c:	orr	w8, w8, w28
  41ed10:	cbnz	w8, 41ee14 <_obstack_memory_used@@Base+0x9de0>
  41ed14:	mov	w8, #0x2                   	// #2
  41ed18:	cbnz	w8, 41edf0 <_obstack_memory_used@@Base+0x9dbc>
  41ed1c:	b	41edf8 <_obstack_memory_used@@Base+0x9dc4>
  41ed20:	ldr	x8, [x22, #184]
  41ed24:	ldr	x9, [x23, #24]
  41ed28:	ldr	x8, [x8, x19, lsl #3]
  41ed2c:	ldr	x27, [x9, x27, lsl #3]
  41ed30:	cbz	x8, 41ed54 <_obstack_memory_used@@Base+0x9d20>
  41ed34:	add	x28, x8, #0x8
  41ed38:	mov	x0, x28
  41ed3c:	mov	x1, x27
  41ed40:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41ed44:	cbz	x0, 41ed7c <_obstack_memory_used@@Base+0x9d48>
  41ed48:	mov	w8, #0x4                   	// #4
  41ed4c:	cbnz	w8, 41edf0 <_obstack_memory_used@@Base+0x9dbc>
  41ed50:	b	41edf8 <_obstack_memory_used@@Base+0x9dc4>
  41ed54:	mov	w8, #0x1                   	// #1
  41ed58:	dup	v0.2d, x8
  41ed5c:	mov	w0, #0x8                   	// #8
  41ed60:	str	q0, [sp, #32]
  41ed64:	bl	4024e0 <malloc@plt>
  41ed68:	str	x0, [sp, #48]
  41ed6c:	cbz	x0, 41ee28 <_obstack_memory_used@@Base+0x9df4>
  41ed70:	str	x27, [x0]
  41ed74:	stur	wzr, [x29, #-4]
  41ed78:	b	41eda4 <_obstack_memory_used@@Base+0x9d70>
  41ed7c:	add	x0, sp, #0x20
  41ed80:	mov	x1, x28
  41ed84:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41ed88:	mov	w28, w0
  41ed8c:	stur	w0, [x29, #-4]
  41ed90:	add	x0, sp, #0x20
  41ed94:	mov	x1, x27
  41ed98:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41ed9c:	cbnz	w28, 41ee34 <_obstack_memory_used@@Base+0x9e00>
  41eda0:	tbz	w0, #0, 41ee34 <_obstack_memory_used@@Base+0x9e00>
  41eda4:	sub	x0, x29, #0x4
  41eda8:	add	x2, sp, #0x20
  41edac:	mov	x1, x23
  41edb0:	bl	41ef9c <_obstack_memory_used@@Base+0x9f68>
  41edb4:	ldr	x8, [x22, #184]
  41edb8:	str	x0, [x8, x19, lsl #3]
  41edbc:	ldr	x0, [sp, #48]
  41edc0:	bl	402770 <free@plt>
  41edc4:	ldr	x8, [x22, #184]
  41edc8:	ldur	w9, [x29, #-4]
  41edcc:	ldr	x8, [x8, x19, lsl #3]
  41edd0:	cmp	x8, #0x0
  41edd4:	cset	w10, eq  // eq = none
  41edd8:	cmp	w9, #0x0
  41eddc:	cset	w11, ne  // ne = any
  41ede0:	tst	w10, w11
  41ede4:	and	w8, w10, w11
  41ede8:	csel	w26, w9, w26, ne  // ne = any
  41edec:	cbz	w8, 41edf8 <_obstack_memory_used@@Base+0x9dc4>
  41edf0:	cmp	w8, #0x4
  41edf4:	b.ne	41ee58 <_obstack_memory_used@@Base+0x9e24>  // b.any
  41edf8:	ldrb	w8, [x20, #16]
  41edfc:	add	x20, x20, #0x28
  41ee00:	cbnz	w8, 41ec64 <_obstack_memory_used@@Base+0x9c30>
  41ee04:	b	41ee68 <_obstack_memory_used@@Base+0x9e34>
  41ee08:	stp	xzr, xzr, [sp, #32]
  41ee0c:	mov	w19, #0xc                   	// #12
  41ee10:	b	41ecd0 <_obstack_memory_used@@Base+0x9c9c>
  41ee14:	cmp	w27, #0x0
  41ee18:	csel	w8, w28, w27, eq  // eq = none
  41ee1c:	cmp	w19, #0x0
  41ee20:	csel	w26, w8, w19, eq  // eq = none
  41ee24:	b	41ee48 <_obstack_memory_used@@Base+0x9e14>
  41ee28:	mov	w26, #0xc                   	// #12
  41ee2c:	stp	xzr, xzr, [sp, #32]
  41ee30:	b	41ee48 <_obstack_memory_used@@Base+0x9e14>
  41ee34:	ldr	x0, [sp, #48]
  41ee38:	bl	402770 <free@plt>
  41ee3c:	cmp	w28, #0x0
  41ee40:	mov	w8, #0xc                   	// #12
  41ee44:	csel	w26, w8, w28, eq  // eq = none
  41ee48:	mov	w8, #0x1                   	// #1
  41ee4c:	stur	w26, [x29, #-4]
  41ee50:	cbnz	w8, 41edf0 <_obstack_memory_used@@Base+0x9dbc>
  41ee54:	b	41edf8 <_obstack_memory_used@@Base+0x9dc4>
  41ee58:	cmp	w8, #0x2
  41ee5c:	b.ne	41ee6c <_obstack_memory_used@@Base+0x9e38>  // b.any
  41ee60:	mov	w9, #0x28                  	// #40
  41ee64:	b	41ec58 <_obstack_memory_used@@Base+0x9c24>
  41ee68:	mov	w26, wzr
  41ee6c:	mov	w0, w26
  41ee70:	ldp	x20, x19, [sp, #144]
  41ee74:	ldp	x22, x21, [sp, #128]
  41ee78:	ldp	x24, x23, [sp, #112]
  41ee7c:	ldp	x26, x25, [sp, #96]
  41ee80:	ldp	x28, x27, [sp, #80]
  41ee84:	ldp	x29, x30, [sp, #64]
  41ee88:	add	sp, sp, #0xa0
  41ee8c:	ret
  41ee90:	stp	x29, x30, [sp, #-64]!
  41ee94:	stp	x24, x23, [sp, #16]
  41ee98:	stp	x20, x19, [sp, #48]
  41ee9c:	mov	x20, x1
  41eea0:	mov	x23, x0
  41eea4:	mov	x0, x1
  41eea8:	mov	x1, x2
  41eeac:	stp	x22, x21, [sp, #32]
  41eeb0:	mov	x29, sp
  41eeb4:	mov	w21, w4
  41eeb8:	mov	x22, x3
  41eebc:	mov	x19, x2
  41eec0:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41eec4:	cbz	x0, 41eee0 <_obstack_memory_used@@Base+0x9eac>
  41eec8:	mov	w0, wzr
  41eecc:	ldp	x20, x19, [sp, #48]
  41eed0:	ldp	x22, x21, [sp, #32]
  41eed4:	ldp	x24, x23, [sp, #16]
  41eed8:	ldp	x29, x30, [sp], #64
  41eedc:	ret
  41eee0:	mov	w24, #0x18                  	// #24
  41eee4:	ldr	x8, [x23]
  41eee8:	add	x9, x8, x19, lsl #4
  41eeec:	ldrb	w9, [x9, #8]
  41eef0:	cmp	w9, w21
  41eef4:	b.ne	41ef08 <_obstack_memory_used@@Base+0x9ed4>  // b.any
  41eef8:	lsl	x9, x19, #4
  41eefc:	ldr	x8, [x8, x9]
  41ef00:	cmp	x8, x22
  41ef04:	b.eq	41ef7c <_obstack_memory_used@@Base+0x9f48>  // b.none
  41ef08:	mov	x0, x20
  41ef0c:	mov	x1, x19
  41ef10:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41ef14:	tbz	w0, #0, 41ef94 <_obstack_memory_used@@Base+0x9f60>
  41ef18:	ldr	x8, [x23, #40]
  41ef1c:	madd	x9, x19, x24, x8
  41ef20:	ldr	x9, [x9, #8]
  41ef24:	cmp	x9, #0x2
  41ef28:	b.eq	41ef34 <_obstack_memory_used@@Base+0x9f00>  // b.none
  41ef2c:	cbnz	x9, 41ef5c <_obstack_memory_used@@Base+0x9f28>
  41ef30:	b	41eec8 <_obstack_memory_used@@Base+0x9e94>
  41ef34:	madd	x8, x19, x24, x8
  41ef38:	ldr	x8, [x8, #16]
  41ef3c:	mov	x0, x23
  41ef40:	mov	x1, x20
  41ef44:	mov	x3, x22
  41ef48:	ldr	x2, [x8, #8]
  41ef4c:	mov	w4, w21
  41ef50:	bl	41ee90 <_obstack_memory_used@@Base+0x9e5c>
  41ef54:	cbnz	w0, 41eecc <_obstack_memory_used@@Base+0x9e98>
  41ef58:	ldr	x8, [x23, #40]
  41ef5c:	madd	x8, x19, x24, x8
  41ef60:	ldr	x8, [x8, #16]
  41ef64:	mov	x0, x20
  41ef68:	ldr	x19, [x8]
  41ef6c:	mov	x1, x19
  41ef70:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41ef74:	cbz	x0, 41eee4 <_obstack_memory_used@@Base+0x9eb0>
  41ef78:	b	41eec8 <_obstack_memory_used@@Base+0x9e94>
  41ef7c:	cmp	w21, #0x9
  41ef80:	b.ne	41eec8 <_obstack_memory_used@@Base+0x9e94>  // b.any
  41ef84:	mov	x0, x20
  41ef88:	mov	x1, x19
  41ef8c:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41ef90:	tbnz	w0, #0, 41eec8 <_obstack_memory_used@@Base+0x9e94>
  41ef94:	mov	w0, #0xc                   	// #12
  41ef98:	b	41eecc <_obstack_memory_used@@Base+0x9e98>
  41ef9c:	stp	x29, x30, [sp, #-64]!
  41efa0:	stp	x24, x23, [sp, #16]
  41efa4:	stp	x22, x21, [sp, #32]
  41efa8:	stp	x20, x19, [sp, #48]
  41efac:	ldr	x8, [x2, #8]
  41efb0:	mov	x19, x0
  41efb4:	mov	x29, sp
  41efb8:	cbz	x8, 41f15c <_obstack_memory_used@@Base+0xa128>
  41efbc:	mov	x23, x2
  41efc0:	mov	x20, x1
  41efc4:	subs	x9, x8, #0x1
  41efc8:	b.lt	41efec <_obstack_memory_used@@Base+0x9fb8>  // b.tstop
  41efcc:	ldr	x10, [x23, #16]
  41efd0:	mov	x11, x8
  41efd4:	mov	x21, x8
  41efd8:	ldr	x12, [x10], #8
  41efdc:	subs	x11, x11, #0x1
  41efe0:	add	x21, x12, x21
  41efe4:	b.ne	41efd8 <_obstack_memory_used@@Base+0x9fa4>  // b.any
  41efe8:	b	41eff0 <_obstack_memory_used@@Base+0x9fbc>
  41efec:	mov	x21, x8
  41eff0:	ldr	x10, [x20, #136]
  41eff4:	ldr	x11, [x20, #64]
  41eff8:	and	x12, x10, x21
  41effc:	mov	w10, #0x18                  	// #24
  41f000:	mul	x10, x12, x10
  41f004:	ldr	x10, [x11, x10]
  41f008:	cmp	x10, #0x1
  41f00c:	b.lt	41f078 <_obstack_memory_used@@Base+0xa044>  // b.tstop
  41f010:	mov	w13, #0x18                  	// #24
  41f014:	madd	x11, x12, x13, x11
  41f018:	ldr	x11, [x11, #16]
  41f01c:	mov	x12, xzr
  41f020:	cbz	x23, 41f06c <_obstack_memory_used@@Base+0xa038>
  41f024:	ldr	x22, [x11, x12, lsl #3]
  41f028:	ldr	x13, [x22]
  41f02c:	cmp	x21, x13
  41f030:	b.ne	41f06c <_obstack_memory_used@@Base+0xa038>  // b.any
  41f034:	ldr	x13, [x22, #16]
  41f038:	cmp	x13, x8
  41f03c:	b.ne	41f06c <_obstack_memory_used@@Base+0xa038>  // b.any
  41f040:	mov	x13, x9
  41f044:	add	x14, x13, #0x1
  41f048:	cmp	x14, #0x1
  41f04c:	b.lt	41f144 <_obstack_memory_used@@Base+0xa110>  // b.tstop
  41f050:	ldr	x14, [x22, #24]
  41f054:	ldr	x15, [x23, #16]
  41f058:	ldr	x14, [x14, x13, lsl #3]
  41f05c:	ldr	x15, [x15, x13, lsl #3]
  41f060:	sub	x13, x13, #0x1
  41f064:	cmp	x14, x15
  41f068:	b.eq	41f044 <_obstack_memory_used@@Base+0xa010>  // b.none
  41f06c:	add	x12, x12, #0x1
  41f070:	cmp	x12, x10
  41f074:	b.lt	41f020 <_obstack_memory_used@@Base+0x9fec>  // b.tstop
  41f078:	mov	w0, #0x70                  	// #112
  41f07c:	mov	w1, #0x1                   	// #1
  41f080:	bl	4025d0 <calloc@plt>
  41f084:	cbz	x0, 41f17c <_obstack_memory_used@@Base+0xa148>
  41f088:	add	x24, x0, #0x8
  41f08c:	mov	x22, x0
  41f090:	mov	x0, x24
  41f094:	mov	x1, x23
  41f098:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41f09c:	cbnz	w0, 41f168 <_obstack_memory_used@@Base+0xa134>
  41f0a0:	str	x24, [x22, #80]
  41f0a4:	ldr	x8, [x23, #8]
  41f0a8:	cmp	x8, #0x1
  41f0ac:	b.lt	41f130 <_obstack_memory_used@@Base+0xa0fc>  // b.tstop
  41f0b0:	ldr	x9, [x20]
  41f0b4:	ldr	x10, [x23, #16]
  41f0b8:	ldr	x11, [x10]
  41f0bc:	add	x11, x9, x11, lsl #4
  41f0c0:	ldr	w12, [x11, #8]!
  41f0c4:	and	w13, w12, #0x3ffff
  41f0c8:	cmp	w13, #0x1
  41f0cc:	b.eq	41f124 <_obstack_memory_used@@Base+0xa0f0>  // b.none
  41f0d0:	ldrb	w14, [x22, #104]
  41f0d4:	lsr	w15, w12, #15
  41f0d8:	and	w13, w12, #0xff
  41f0dc:	and	w12, w15, #0x20
  41f0e0:	orr	w12, w14, w12
  41f0e4:	cmp	w13, #0xc
  41f0e8:	strb	w12, [x22, #104]
  41f0ec:	b.eq	41f11c <_obstack_memory_used@@Base+0xa0e8>  // b.none
  41f0f0:	cmp	w13, #0x4
  41f0f4:	b.eq	41f108 <_obstack_memory_used@@Base+0xa0d4>  // b.none
  41f0f8:	cmp	w13, #0x2
  41f0fc:	b.ne	41f110 <_obstack_memory_used@@Base+0xa0dc>  // b.any
  41f100:	orr	w11, w12, #0x10
  41f104:	b	41f120 <_obstack_memory_used@@Base+0xa0ec>
  41f108:	orr	w11, w12, #0x40
  41f10c:	b	41f120 <_obstack_memory_used@@Base+0xa0ec>
  41f110:	ldr	w11, [x11]
  41f114:	tst	w11, #0x3ff00
  41f118:	b.eq	41f124 <_obstack_memory_used@@Base+0xa0f0>  // b.none
  41f11c:	orr	w11, w12, #0x80
  41f120:	strb	w11, [x22, #104]
  41f124:	subs	x8, x8, #0x1
  41f128:	add	x10, x10, #0x8
  41f12c:	b.ne	41f0b8 <_obstack_memory_used@@Base+0xa084>  // b.any
  41f130:	mov	x0, x20
  41f134:	mov	x1, x22
  41f138:	mov	x2, x21
  41f13c:	bl	41c940 <_obstack_memory_used@@Base+0x790c>
  41f140:	cbnz	w0, 41f174 <_obstack_memory_used@@Base+0xa140>
  41f144:	mov	x0, x22
  41f148:	ldp	x20, x19, [sp, #48]
  41f14c:	ldp	x22, x21, [sp, #32]
  41f150:	ldp	x24, x23, [sp, #16]
  41f154:	ldp	x29, x30, [sp], #64
  41f158:	ret
  41f15c:	mov	x22, xzr
  41f160:	str	wzr, [x19]
  41f164:	b	41f144 <_obstack_memory_used@@Base+0xa110>
  41f168:	mov	x0, x22
  41f16c:	bl	402770 <free@plt>
  41f170:	b	41f17c <_obstack_memory_used@@Base+0xa148>
  41f174:	mov	x0, x22
  41f178:	bl	418178 <_obstack_memory_used@@Base+0x3144>
  41f17c:	mov	x22, xzr
  41f180:	mov	w8, #0xc                   	// #12
  41f184:	str	w8, [x19]
  41f188:	b	41f144 <_obstack_memory_used@@Base+0xa110>
  41f18c:	stp	x29, x30, [sp, #-48]!
  41f190:	stp	x22, x21, [sp, #16]
  41f194:	stp	x20, x19, [sp, #32]
  41f198:	ldr	x8, [x0]
  41f19c:	mov	x29, sp
  41f1a0:	add	x9, x8, x1, lsl #4
  41f1a4:	ldrb	w10, [x9, #8]
  41f1a8:	cmp	w10, #0x7
  41f1ac:	b.eq	41f378 <_obstack_memory_used@@Base+0xa344>  // b.none
  41f1b0:	ldr	w9, [x2, #144]
  41f1b4:	cmp	w9, #0x1
  41f1b8:	b.eq	41f1fc <_obstack_memory_used@@Base+0xa1c8>  // b.none
  41f1bc:	ldr	x11, [x2, #48]
  41f1c0:	add	x12, x3, #0x1
  41f1c4:	cmp	x12, x11
  41f1c8:	b.ge	41f1fc <_obstack_memory_used@@Base+0xa1c8>  // b.tcont
  41f1cc:	ldr	x13, [x2, #16]
  41f1d0:	sub	w20, w11, w3
  41f1d4:	sub	x12, x11, x3
  41f1d8:	mov	w11, #0x1                   	// #1
  41f1dc:	add	x13, x13, x3, lsl #2
  41f1e0:	ldr	w14, [x13, x11, lsl #2]
  41f1e4:	cmn	w14, #0x1
  41f1e8:	b.ne	41f288 <_obstack_memory_used@@Base+0xa254>  // b.any
  41f1ec:	add	x11, x11, #0x1
  41f1f0:	cmp	x12, x11
  41f1f4:	b.ne	41f1e0 <_obstack_memory_used@@Base+0xa1ac>  // b.any
  41f1f8:	b	41f200 <_obstack_memory_used@@Base+0xa1cc>
  41f1fc:	mov	w20, #0x1                   	// #1
  41f200:	cmp	w10, #0x5
  41f204:	b.ne	41f240 <_obstack_memory_used@@Base+0xa20c>  // b.any
  41f208:	cmp	w20, #0x2
  41f20c:	b.lt	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.tstop
  41f210:	ldr	x8, [x0, #216]
  41f214:	tbnz	w8, #6, 41f228 <_obstack_memory_used@@Base+0xa1f4>
  41f218:	ldr	x9, [x2, #8]
  41f21c:	ldrb	w9, [x9, x3]
  41f220:	cmp	w9, #0xa
  41f224:	b.eq	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.none
  41f228:	tbz	w8, #7, 41f238 <_obstack_memory_used@@Base+0xa204>
  41f22c:	ldr	x8, [x2, #8]
  41f230:	ldrb	w8, [x8, x3]
  41f234:	cbz	w8, 41f350 <_obstack_memory_used@@Base+0xa31c>
  41f238:	mov	w0, w20
  41f23c:	b	41f354 <_obstack_memory_used@@Base+0xa320>
  41f240:	cmp	w10, #0x6
  41f244:	mov	w0, wzr
  41f248:	b.ne	41f354 <_obstack_memory_used@@Base+0xa320>  // b.any
  41f24c:	cmp	w20, #0x2
  41f250:	b.lt	41f354 <_obstack_memory_used@@Base+0xa320>  // b.tstop
  41f254:	lsl	x10, x1, #4
  41f258:	ldr	x21, [x8, x10]
  41f25c:	ldr	x8, [x21, #64]
  41f260:	cbnz	x8, 41f274 <_obstack_memory_used@@Base+0xa240>
  41f264:	ldr	x10, [x21, #72]
  41f268:	cbnz	x10, 41f274 <_obstack_memory_used@@Base+0xa240>
  41f26c:	ldr	x10, [x21, #40]
  41f270:	cbz	x10, 41f370 <_obstack_memory_used@@Base+0xa33c>
  41f274:	cmp	w9, #0x1
  41f278:	b.ne	41f290 <_obstack_memory_used@@Base+0xa25c>  // b.any
  41f27c:	ldr	x9, [x2, #8]
  41f280:	ldrb	w19, [x9, x3]
  41f284:	b	41f298 <_obstack_memory_used@@Base+0xa264>
  41f288:	mov	w20, w11
  41f28c:	b	41f200 <_obstack_memory_used@@Base+0xa1cc>
  41f290:	ldr	x9, [x2, #16]
  41f294:	ldr	w19, [x9, x3, lsl #2]
  41f298:	ldr	x9, [x21, #40]
  41f29c:	cmp	x9, #0x1
  41f2a0:	b.lt	41f2c4 <_obstack_memory_used@@Base+0xa290>  // b.tstop
  41f2a4:	ldr	x10, [x21]
  41f2a8:	mov	x11, xzr
  41f2ac:	ldr	w12, [x10, x11, lsl #2]
  41f2b0:	cmp	w19, w12
  41f2b4:	b.eq	41f33c <_obstack_memory_used@@Base+0xa308>  // b.none
  41f2b8:	add	x11, x11, #0x1
  41f2bc:	cmp	x11, x9
  41f2c0:	b.lt	41f2ac <_obstack_memory_used@@Base+0xa278>  // b.tstop
  41f2c4:	ldr	x9, [x21, #72]
  41f2c8:	cmp	x9, #0x1
  41f2cc:	b.lt	41f2fc <_obstack_memory_used@@Base+0xa2c8>  // b.tstop
  41f2d0:	mov	x22, xzr
  41f2d4:	ldr	x8, [x21, #24]
  41f2d8:	mov	w0, w19
  41f2dc:	ldr	x1, [x8, x22, lsl #3]
  41f2e0:	bl	4024d0 <iswctype@plt>
  41f2e4:	cbnz	w0, 41f33c <_obstack_memory_used@@Base+0xa308>
  41f2e8:	ldr	x8, [x21, #72]
  41f2ec:	add	x22, x22, #0x1
  41f2f0:	cmp	x22, x8
  41f2f4:	b.lt	41f2d4 <_obstack_memory_used@@Base+0xa2a0>  // b.tstop
  41f2f8:	ldr	x8, [x21, #64]
  41f2fc:	cmp	x8, #0x1
  41f300:	b.lt	41f334 <_obstack_memory_used@@Base+0xa300>  // b.tstop
  41f304:	ldr	x9, [x21, #8]
  41f308:	mov	x10, xzr
  41f30c:	ldr	w11, [x9, x10, lsl #2]
  41f310:	cmp	w11, w19
  41f314:	b.hi	41f328 <_obstack_memory_used@@Base+0xa2f4>  // b.pmore
  41f318:	ldr	x11, [x21, #16]
  41f31c:	ldr	w11, [x11, x10, lsl #2]
  41f320:	cmp	w19, w11
  41f324:	b.ls	41f33c <_obstack_memory_used@@Base+0xa308>  // b.plast
  41f328:	add	x10, x10, #0x1
  41f32c:	cmp	x10, x8
  41f330:	b.lt	41f30c <_obstack_memory_used@@Base+0xa2d8>  // b.tstop
  41f334:	mov	w0, wzr
  41f338:	b	41f340 <_obstack_memory_used@@Base+0xa30c>
  41f33c:	mov	w0, w20
  41f340:	ldrb	w8, [x21, #32]
  41f344:	tbz	w8, #0, 41f354 <_obstack_memory_used@@Base+0xa320>
  41f348:	cmp	w0, #0x0
  41f34c:	b.le	41f364 <_obstack_memory_used@@Base+0xa330>
  41f350:	mov	w0, wzr
  41f354:	ldp	x20, x19, [sp, #32]
  41f358:	ldp	x22, x21, [sp, #16]
  41f35c:	ldp	x29, x30, [sp], #48
  41f360:	ret
  41f364:	cmp	w20, #0x1
  41f368:	csinc	w0, w20, wzr, gt
  41f36c:	b	41f354 <_obstack_memory_used@@Base+0xa320>
  41f370:	mov	w19, wzr
  41f374:	b	41f298 <_obstack_memory_used@@Base+0xa264>
  41f378:	ldr	x8, [x2, #8]
  41f37c:	ldrb	w10, [x8, x3]
  41f380:	cmp	w10, #0xc2
  41f384:	b.cc	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.lo, b.ul, b.last
  41f388:	ldr	x9, [x2, #88]
  41f38c:	add	x11, x3, #0x2
  41f390:	cmp	x11, x9
  41f394:	b.gt	41f350 <_obstack_memory_used@@Base+0xa31c>
  41f398:	add	x11, x3, x8
  41f39c:	ldrb	w11, [x11, #1]
  41f3a0:	cmp	w10, #0xdf
  41f3a4:	b.hi	41f3c4 <_obstack_memory_used@@Base+0xa390>  // b.pmore
  41f3a8:	sxtb	w8, w11
  41f3ac:	cmp	w11, #0xbf
  41f3b0:	mov	w9, #0xffffffff            	// #-1
  41f3b4:	ccmp	w8, w9, #0x0, ls  // ls = plast
  41f3b8:	mov	w8, #0x2                   	// #2
  41f3bc:	csel	w0, wzr, w8, gt
  41f3c0:	b	41f354 <_obstack_memory_used@@Base+0xa320>
  41f3c4:	cmp	w10, #0xef
  41f3c8:	b.hi	41f3e4 <_obstack_memory_used@@Base+0xa3b0>  // b.pmore
  41f3cc:	cmp	w10, #0xe0
  41f3d0:	mov	w10, #0x3                   	// #3
  41f3d4:	b.ne	41f440 <_obstack_memory_used@@Base+0xa40c>  // b.any
  41f3d8:	cmp	w11, #0xa0
  41f3dc:	b.cc	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.lo, b.ul, b.last
  41f3e0:	b	41f440 <_obstack_memory_used@@Base+0xa40c>
  41f3e4:	cmp	w10, #0xf7
  41f3e8:	b.hi	41f404 <_obstack_memory_used@@Base+0xa3d0>  // b.pmore
  41f3ec:	cmp	w10, #0xf0
  41f3f0:	mov	w10, #0x4                   	// #4
  41f3f4:	b.ne	41f440 <_obstack_memory_used@@Base+0xa40c>  // b.any
  41f3f8:	cmp	w11, #0x90
  41f3fc:	b.cc	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.lo, b.ul, b.last
  41f400:	b	41f440 <_obstack_memory_used@@Base+0xa40c>
  41f404:	cmp	w10, #0xfb
  41f408:	b.hi	41f424 <_obstack_memory_used@@Base+0xa3f0>  // b.pmore
  41f40c:	cmp	w10, #0xf8
  41f410:	mov	w10, #0x5                   	// #5
  41f414:	b.ne	41f440 <_obstack_memory_used@@Base+0xa40c>  // b.any
  41f418:	cmp	w11, #0x88
  41f41c:	b.cc	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.lo, b.ul, b.last
  41f420:	b	41f440 <_obstack_memory_used@@Base+0xa40c>
  41f424:	cmp	w10, #0xfd
  41f428:	b.hi	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.pmore
  41f42c:	cmp	w10, #0xfc
  41f430:	mov	w10, #0x6                   	// #6
  41f434:	b.ne	41f440 <_obstack_memory_used@@Base+0xa40c>  // b.any
  41f438:	cmp	w11, #0x84
  41f43c:	b.cc	41f350 <_obstack_memory_used@@Base+0xa31c>  // b.lo, b.ul, b.last
  41f440:	add	x11, x10, x3
  41f444:	cmp	x11, x9
  41f448:	b.gt	41f350 <_obstack_memory_used@@Base+0xa31c>
  41f44c:	add	x8, x3, x8
  41f450:	sub	x9, x10, #0x1
  41f454:	add	x8, x8, #0x1
  41f458:	ldrb	w11, [x8]
  41f45c:	mov	w0, wzr
  41f460:	sxtb	w12, w11
  41f464:	tbz	w12, #31, 41f354 <_obstack_memory_used@@Base+0xa320>
  41f468:	cmp	w11, #0xbf
  41f46c:	b.hi	41f354 <_obstack_memory_used@@Base+0xa320>  // b.pmore
  41f470:	subs	x9, x9, #0x1
  41f474:	add	x8, x8, #0x1
  41f478:	b.ne	41f458 <_obstack_memory_used@@Base+0xa424>  // b.any
  41f47c:	mov	w0, w10
  41f480:	b	41f354 <_obstack_memory_used@@Base+0xa320>
  41f484:	stp	x29, x30, [sp, #-32]!
  41f488:	str	x19, [sp, #16]
  41f48c:	ldr	w19, [x1, #8]
  41f490:	mov	x29, sp
  41f494:	and	w8, w19, #0xff
  41f498:	sub	w10, w8, #0x1
  41f49c:	cmp	w10, #0x6
  41f4a0:	mov	w8, wzr
  41f4a4:	b.hi	41f564 <_obstack_memory_used@@Base+0xa530>  // b.pmore
  41f4a8:	ldr	x9, [x0, #8]
  41f4ac:	adrp	x11, 423000 <_obstack_memory_used@@Base+0xdfcc>
  41f4b0:	add	x11, x11, #0xaa0
  41f4b4:	ldrb	w9, [x9, x2]
  41f4b8:	adr	x12, 41f4c8 <_obstack_memory_used@@Base+0xa494>
  41f4bc:	ldrb	w13, [x11, x10]
  41f4c0:	add	x12, x12, x13, lsl #2
  41f4c4:	br	x12
  41f4c8:	ldrb	w8, [x1]
  41f4cc:	cmp	w8, w9
  41f4d0:	b.eq	41f524 <_obstack_memory_used@@Base+0xa4f0>  // b.none
  41f4d4:	b	41f558 <_obstack_memory_used@@Base+0xa524>
  41f4d8:	ldr	x8, [x1]
  41f4dc:	lsr	x10, x9, #3
  41f4e0:	and	x10, x10, #0x18
  41f4e4:	ldr	x8, [x8, x10]
  41f4e8:	lsr	x8, x8, x9
  41f4ec:	tbnz	w8, #0, 41f524 <_obstack_memory_used@@Base+0xa4f0>
  41f4f0:	b	41f558 <_obstack_memory_used@@Base+0xa524>
  41f4f4:	sxtb	w8, w9
  41f4f8:	tbnz	w8, #31, 41f558 <_obstack_memory_used@@Base+0xa524>
  41f4fc:	cbz	w9, 41f518 <_obstack_memory_used@@Base+0xa4e4>
  41f500:	cmp	w9, #0xa
  41f504:	b.ne	41f524 <_obstack_memory_used@@Base+0xa4f0>  // b.any
  41f508:	ldr	x8, [x0, #152]
  41f50c:	ldrb	w8, [x8, #216]
  41f510:	tbnz	w8, #6, 41f524 <_obstack_memory_used@@Base+0xa4f0>
  41f514:	b	41f558 <_obstack_memory_used@@Base+0xa524>
  41f518:	ldr	x8, [x0, #152]
  41f51c:	ldrb	w8, [x8, #216]
  41f520:	tbnz	w8, #7, 41f558 <_obstack_memory_used@@Base+0xa524>
  41f524:	tst	w19, #0x3ff00
  41f528:	b.eq	41f560 <_obstack_memory_used@@Base+0xa52c>  // b.none
  41f52c:	ldr	w8, [x0, #160]
  41f530:	mov	x1, x2
  41f534:	mov	w2, w8
  41f538:	bl	41d7b8 <_obstack_memory_used@@Base+0x8784>
  41f53c:	and	w8, w0, #0x1
  41f540:	tbz	w19, #10, 41f548 <_obstack_memory_used@@Base+0xa514>
  41f544:	cbz	w8, 41f564 <_obstack_memory_used@@Base+0xa530>
  41f548:	tbz	w19, #11, 41f550 <_obstack_memory_used@@Base+0xa51c>
  41f54c:	cbnz	w8, 41f558 <_obstack_memory_used@@Base+0xa524>
  41f550:	tbz	w19, #13, 41f574 <_obstack_memory_used@@Base+0xa540>
  41f554:	tbnz	w0, #1, 41f574 <_obstack_memory_used@@Base+0xa540>
  41f558:	mov	w8, wzr
  41f55c:	b	41f564 <_obstack_memory_used@@Base+0xa530>
  41f560:	mov	w8, #0x1                   	// #1
  41f564:	mov	w0, w8
  41f568:	ldr	x19, [sp, #16]
  41f56c:	ldp	x29, x30, [sp], #32
  41f570:	ret
  41f574:	tst	w19, #0x8000
  41f578:	cset	w8, eq  // eq = none
  41f57c:	and	w9, w0, #0x8
  41f580:	orr	w0, w8, w9, lsr #3
  41f584:	b	41f568 <_obstack_memory_used@@Base+0xa534>
  41f588:	sub	sp, sp, #0xa0
  41f58c:	stp	x29, x30, [sp, #64]
  41f590:	stp	x28, x27, [sp, #80]
  41f594:	stp	x26, x25, [sp, #96]
  41f598:	stp	x24, x23, [sp, #112]
  41f59c:	stp	x22, x21, [sp, #128]
  41f5a0:	stp	x20, x19, [sp, #144]
  41f5a4:	ldp	x22, x21, [x1, #16]
  41f5a8:	mov	w8, #0x1                   	// #1
  41f5ac:	mov	x20, x0
  41f5b0:	dup	v0.2d, x8
  41f5b4:	mov	w0, #0x8                   	// #8
  41f5b8:	add	x29, sp, #0x40
  41f5bc:	mov	x19, x1
  41f5c0:	str	q0, [sp, #32]
  41f5c4:	bl	4024e0 <malloc@plt>
  41f5c8:	str	x0, [sp, #48]
  41f5cc:	cbz	x0, 41f7c8 <_obstack_memory_used@@Base+0xa794>
  41f5d0:	str	x22, [x0]
  41f5d4:	add	x3, sp, #0x20
  41f5d8:	mov	x0, x20
  41f5dc:	mov	x1, x19
  41f5e0:	mov	x2, x21
  41f5e4:	bl	41f87c <_obstack_memory_used@@Base+0xa848>
  41f5e8:	cbnz	w0, 41f76c <_obstack_memory_used@@Base+0xa738>
  41f5ec:	mov	w10, wzr
  41f5f0:	add	x8, x19, #0x20
  41f5f4:	str	x8, [sp, #16]
  41f5f8:	mov	x11, x21
  41f5fc:	subs	x21, x21, #0x1
  41f600:	b.lt	41f77c <_obstack_memory_used@@Base+0xa748>  // b.tstop
  41f604:	ldr	x0, [x19]
  41f608:	ldr	w9, [x20, #224]
  41f60c:	ldr	x8, [x0, x11, lsl #3]
  41f610:	cmp	x8, #0x0
  41f614:	csinc	w10, wzr, w10, ne  // ne = any
  41f618:	cmp	w10, w9
  41f61c:	b.gt	41f7ac <_obstack_memory_used@@Base+0xa778>
  41f620:	str	xzr, [sp, #40]
  41f624:	ldr	x8, [x20, #184]
  41f628:	str	x11, [sp, #24]
  41f62c:	str	w10, [sp, #12]
  41f630:	ldr	x28, [x8, x21, lsl #3]
  41f634:	cbz	x28, 41f750 <_obstack_memory_used@@Base+0xa71c>
  41f638:	ldr	x8, [x28, #40]
  41f63c:	cmp	x8, #0x1
  41f640:	b.lt	41f750 <_obstack_memory_used@@Base+0xa71c>  // b.tstop
  41f644:	ldr	x22, [x20, #152]
  41f648:	mov	x26, xzr
  41f64c:	ldr	x8, [x28, #48]
  41f650:	ldr	x23, [x8, x26, lsl #3]
  41f654:	ldr	x8, [x22]
  41f658:	add	x8, x8, x23, lsl #4
  41f65c:	ldrb	w8, [x8, #10]
  41f660:	tbnz	w8, #4, 41f6a8 <_obstack_memory_used@@Base+0xa674>
  41f664:	ldr	x8, [x22]
  41f668:	mov	x0, x20
  41f66c:	mov	x2, x21
  41f670:	add	x1, x8, x23, lsl #4
  41f674:	bl	41f484 <_obstack_memory_used@@Base+0xa450>
  41f678:	tbz	w0, #0, 41f740 <_obstack_memory_used@@Base+0xa70c>
  41f67c:	ldr	x8, [x19]
  41f680:	ldr	x9, [sp, #24]
  41f684:	ldr	x8, [x8, x9, lsl #3]
  41f688:	cbz	x8, 41f740 <_obstack_memory_used@@Base+0xa70c>
  41f68c:	ldr	x9, [x22, #24]
  41f690:	add	x0, x8, #0x8
  41f694:	ldr	x1, [x9, x23, lsl #3]
  41f698:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41f69c:	cbz	x0, 41f740 <_obstack_memory_used@@Base+0xa70c>
  41f6a0:	mov	w24, #0x1                   	// #1
  41f6a4:	b	41f704 <_obstack_memory_used@@Base+0xa6d0>
  41f6a8:	ldr	x25, [x20, #152]
  41f6ac:	ldr	x27, [x19, #24]
  41f6b0:	mov	x1, x23
  41f6b4:	mov	x2, x20
  41f6b8:	mov	x0, x25
  41f6bc:	mov	x3, x21
  41f6c0:	bl	41f18c <_obstack_memory_used@@Base+0xa158>
  41f6c4:	mov	w24, w0
  41f6c8:	cmp	w0, #0x1
  41f6cc:	b.lt	41f700 <_obstack_memory_used@@Base+0xa6cc>  // b.tstop
  41f6d0:	add	x8, x21, w24, uxtw
  41f6d4:	cmp	x8, x27
  41f6d8:	b.gt	41f704 <_obstack_memory_used@@Base+0xa6d0>
  41f6dc:	ldr	x9, [x19]
  41f6e0:	ldr	x8, [x9, x8, lsl #3]
  41f6e4:	cbz	x8, 41f664 <_obstack_memory_used@@Base+0xa630>
  41f6e8:	ldr	x9, [x25, #24]
  41f6ec:	add	x0, x8, #0x8
  41f6f0:	ldr	x1, [x9, x23, lsl #3]
  41f6f4:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41f6f8:	cbnz	x0, 41f704 <_obstack_memory_used@@Base+0xa6d0>
  41f6fc:	b	41f664 <_obstack_memory_used@@Base+0xa630>
  41f700:	cbz	w24, 41f664 <_obstack_memory_used@@Base+0xa630>
  41f704:	ldr	x8, [x19, #40]
  41f708:	cbz	x8, 41f730 <_obstack_memory_used@@Base+0xa6fc>
  41f70c:	ldr	x8, [x22, #24]
  41f710:	ldr	x1, [sp, #16]
  41f714:	add	x3, x21, w24, sxtw
  41f718:	mov	x0, x20
  41f71c:	ldr	x2, [x8, x23, lsl #3]
  41f720:	mov	x4, x23
  41f724:	mov	x5, x21
  41f728:	bl	420230 <_obstack_memory_used@@Base+0xb1fc>
  41f72c:	tbnz	w0, #0, 41f740 <_obstack_memory_used@@Base+0xa70c>
  41f730:	add	x0, sp, #0x20
  41f734:	mov	x1, x23
  41f738:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41f73c:	tbz	w0, #0, 41f774 <_obstack_memory_used@@Base+0xa740>
  41f740:	ldr	x8, [x28, #40]
  41f744:	add	x26, x26, #0x1
  41f748:	cmp	x26, x8
  41f74c:	b.lt	41f64c <_obstack_memory_used@@Base+0xa618>  // b.tstop
  41f750:	add	x3, sp, #0x20
  41f754:	mov	x0, x20
  41f758:	mov	x1, x19
  41f75c:	mov	x2, x21
  41f760:	bl	41f87c <_obstack_memory_used@@Base+0xa848>
  41f764:	ldr	w10, [sp, #12]
  41f768:	cbz	w0, 41f5f8 <_obstack_memory_used@@Base+0xa5c4>
  41f76c:	mov	w23, w0
  41f770:	b	41f780 <_obstack_memory_used@@Base+0xa74c>
  41f774:	mov	w23, #0xc                   	// #12
  41f778:	b	41f780 <_obstack_memory_used@@Base+0xa74c>
  41f77c:	mov	w23, wzr
  41f780:	ldr	x0, [sp, #48]
  41f784:	bl	402770 <free@plt>
  41f788:	mov	w0, w23
  41f78c:	ldp	x20, x19, [sp, #144]
  41f790:	ldp	x22, x21, [sp, #128]
  41f794:	ldp	x24, x23, [sp, #112]
  41f798:	ldp	x26, x25, [sp, #96]
  41f79c:	ldp	x28, x27, [sp, #80]
  41f7a0:	ldp	x29, x30, [sp, #64]
  41f7a4:	add	sp, sp, #0xa0
  41f7a8:	ret
  41f7ac:	lsl	x2, x11, #3
  41f7b0:	mov	w1, wzr
  41f7b4:	bl	4025b0 <memset@plt>
  41f7b8:	ldr	x0, [sp, #48]
  41f7bc:	bl	402770 <free@plt>
  41f7c0:	mov	w23, wzr
  41f7c4:	b	41f788 <_obstack_memory_used@@Base+0xa754>
  41f7c8:	stp	xzr, xzr, [sp, #32]
  41f7cc:	mov	w23, #0xc                   	// #12
  41f7d0:	b	41f788 <_obstack_memory_used@@Base+0xa754>
  41f7d4:	sub	sp, sp, #0x50
  41f7d8:	cmp	x3, #0x1
  41f7dc:	stp	x29, x30, [sp, #32]
  41f7e0:	stp	x22, x21, [sp, #48]
  41f7e4:	stp	x20, x19, [sp, #64]
  41f7e8:	add	x29, sp, #0x20
  41f7ec:	b.lt	41f864 <_obstack_memory_used@@Base+0xa830>  // b.tstop
  41f7f0:	mov	x19, x3
  41f7f4:	mov	x20, x2
  41f7f8:	mov	x21, x1
  41f7fc:	mov	x22, x0
  41f800:	ldr	x9, [x21]
  41f804:	ldr	x8, [x20]
  41f808:	cbz	x9, 41f850 <_obstack_memory_used@@Base+0xa81c>
  41f80c:	cbz	x8, 41f854 <_obstack_memory_used@@Base+0xa820>
  41f810:	add	x1, x9, #0x8
  41f814:	add	x2, x8, #0x8
  41f818:	mov	x0, sp
  41f81c:	bl	41e1cc <_obstack_memory_used@@Base+0x9198>
  41f820:	stur	w0, [x29, #-4]
  41f824:	cbnz	w0, 41f868 <_obstack_memory_used@@Base+0xa834>
  41f828:	sub	x0, x29, #0x4
  41f82c:	mov	x2, sp
  41f830:	mov	x1, x22
  41f834:	bl	41ef9c <_obstack_memory_used@@Base+0x9f68>
  41f838:	str	x0, [x21]
  41f83c:	ldr	x0, [sp, #16]
  41f840:	bl	402770 <free@plt>
  41f844:	ldur	w0, [x29, #-4]
  41f848:	cbz	w0, 41f854 <_obstack_memory_used@@Base+0xa820>
  41f84c:	b	41f868 <_obstack_memory_used@@Base+0xa834>
  41f850:	str	x8, [x21]
  41f854:	subs	x19, x19, #0x1
  41f858:	add	x20, x20, #0x8
  41f85c:	add	x21, x21, #0x8
  41f860:	b.ne	41f800 <_obstack_memory_used@@Base+0xa7cc>  // b.any
  41f864:	mov	w0, wzr
  41f868:	ldp	x20, x19, [sp, #64]
  41f86c:	ldp	x22, x21, [sp, #48]
  41f870:	ldp	x29, x30, [sp, #32]
  41f874:	add	sp, sp, #0x50
  41f878:	ret
  41f87c:	sub	sp, sp, #0xe0
  41f880:	stp	x29, x30, [sp, #128]
  41f884:	stp	x28, x27, [sp, #144]
  41f888:	stp	x26, x25, [sp, #160]
  41f88c:	stp	x24, x23, [sp, #176]
  41f890:	stp	x22, x21, [sp, #192]
  41f894:	stp	x20, x19, [sp, #208]
  41f898:	ldr	x24, [x0, #152]
  41f89c:	str	wzr, [sp, #60]
  41f8a0:	ldr	x8, [x0, #184]
  41f8a4:	mov	x19, x2
  41f8a8:	mov	x20, x1
  41f8ac:	add	x29, sp, #0x80
  41f8b0:	ldr	x27, [x8, x2, lsl #3]
  41f8b4:	ldr	x8, [x3, #8]
  41f8b8:	add	x9, x27, #0x8
  41f8bc:	cmp	x27, #0x0
  41f8c0:	csel	x9, xzr, x9, eq  // eq = none
  41f8c4:	stp	x9, x0, [sp, #40]
  41f8c8:	cbz	x8, 41fb84 <_obstack_memory_used@@Base+0xab50>
  41f8cc:	mov	x23, x3
  41f8d0:	cbz	x27, 41fb98 <_obstack_memory_used@@Base+0xab64>
  41f8d4:	add	x0, sp, #0x40
  41f8d8:	mov	x1, x24
  41f8dc:	mov	x2, x23
  41f8e0:	str	wzr, [sp, #64]
  41f8e4:	bl	41ef9c <_obstack_memory_used@@Base+0x9f68>
  41f8e8:	ldr	w22, [sp, #64]
  41f8ec:	cbnz	w22, 41fe40 <_obstack_memory_used@@Base+0xae0c>
  41f8f0:	mov	x25, x0
  41f8f4:	ldr	x8, [x25, #56]!
  41f8f8:	mov	x26, x0
  41f8fc:	cbnz	x8, 41f96c <_obstack_memory_used@@Base+0xa938>
  41f900:	ldr	x8, [x23, #8]
  41f904:	lsl	x0, x8, #3
  41f908:	stp	x8, xzr, [x26, #56]
  41f90c:	bl	4024e0 <malloc@plt>
  41f910:	cmp	x0, #0x0
  41f914:	mov	w22, #0xc                   	// #12
  41f918:	csel	w8, w22, wzr, eq  // eq = none
  41f91c:	str	x0, [x26, #72]
  41f920:	str	w8, [sp, #64]
  41f924:	cbz	x0, 41fe40 <_obstack_memory_used@@Base+0xae0c>
  41f928:	ldr	x8, [x23, #8]
  41f92c:	cmp	x8, #0x1
  41f930:	b.lt	41f96c <_obstack_memory_used@@Base+0xa938>  // b.tstop
  41f934:	mov	x21, xzr
  41f938:	mov	w22, #0x18                  	// #24
  41f93c:	ldr	x8, [x23, #16]
  41f940:	ldr	x9, [x24, #56]
  41f944:	mov	x0, x25
  41f948:	ldr	x8, [x8, x21, lsl #3]
  41f94c:	madd	x1, x8, x22, x9
  41f950:	bl	41c228 <_obstack_memory_used@@Base+0x71f4>
  41f954:	cbnz	w0, 41fe50 <_obstack_memory_used@@Base+0xae1c>
  41f958:	ldr	x8, [x23, #8]
  41f95c:	add	x21, x21, #0x1
  41f960:	cmp	x21, x8
  41f964:	b.lt	41f93c <_obstack_memory_used@@Base+0xa908>  // b.tstop
  41f968:	str	wzr, [sp, #64]
  41f96c:	ldr	x1, [sp, #40]
  41f970:	mov	x0, x23
  41f974:	mov	x2, x25
  41f978:	bl	41fe74 <_obstack_memory_used@@Base+0xae40>
  41f97c:	str	w0, [sp, #60]
  41f980:	cbnz	w0, 41fe6c <_obstack_memory_used@@Base+0xae38>
  41f984:	ldr	x8, [x20, #40]
  41f988:	cbz	x8, 41fb98 <_obstack_memory_used@@Base+0xab64>
  41f98c:	cmp	x8, #0x1
  41f990:	str	x27, [sp, #24]
  41f994:	b.lt	41fb90 <_obstack_memory_used@@Base+0xab5c>  // b.tstop
  41f998:	ldr	x8, [sp, #48]
  41f99c:	mov	x26, xzr
  41f9a0:	mov	w13, #0x18                  	// #24
  41f9a4:	ldr	x28, [x8, #216]
  41f9a8:	ldr	x8, [x20, #48]
  41f9ac:	mov	w9, #0x28                  	// #40
  41f9b0:	ldr	x8, [x8, x26, lsl #3]
  41f9b4:	madd	x9, x8, x9, x28
  41f9b8:	ldr	x9, [x9, #16]
  41f9bc:	cmp	x9, x19
  41f9c0:	b.ge	41f9d8 <_obstack_memory_used@@Base+0xa9a4>  // b.tcont
  41f9c4:	mov	w9, #0x28                  	// #40
  41f9c8:	madd	x9, x8, x9, x28
  41f9cc:	ldr	x9, [x9, #8]
  41f9d0:	cmp	x9, x19
  41f9d4:	b.ge	41f9ec <_obstack_memory_used@@Base+0xa9b8>  // b.tcont
  41f9d8:	ldr	x8, [x20, #40]
  41f9dc:	add	x26, x26, #0x1
  41f9e0:	cmp	x26, x8
  41f9e4:	b.lt	41f9a8 <_obstack_memory_used@@Base+0xa974>  // b.tstop
  41f9e8:	b	41fb90 <_obstack_memory_used@@Base+0xab5c>
  41f9ec:	mov	w9, #0x28                  	// #40
  41f9f0:	madd	x8, x8, x9, x28
  41f9f4:	ldr	x10, [x8]
  41f9f8:	ldr	x9, [x24]
  41f9fc:	ldr	x11, [x8, #24]
  41fa00:	lsl	x8, x10, #4
  41fa04:	ldr	x27, [x9, x8]
  41fa08:	ldr	x8, [x23, #8]
  41fa0c:	cmp	x11, x19
  41fa10:	b.ne	41fb18 <_obstack_memory_used@@Base+0xaae4>  // b.any
  41fa14:	cmp	x8, #0x1
  41fa18:	b.lt	41f9d8 <_obstack_memory_used@@Base+0xa9a4>  // b.tstop
  41fa1c:	ldr	x10, [x23, #16]
  41fa20:	mov	x25, #0xffffffffffffffff    	// #-1
  41fa24:	mov	x1, #0xffffffffffffffff    	// #-1
  41fa28:	ldr	x11, [x10]
  41fa2c:	add	x12, x9, x11, lsl #4
  41fa30:	ldrb	w12, [x12, #8]
  41fa34:	cmp	w12, #0x9
  41fa38:	b.eq	41fa58 <_obstack_memory_used@@Base+0xaa24>  // b.none
  41fa3c:	cmp	w12, #0x8
  41fa40:	b.ne	41fa68 <_obstack_memory_used@@Base+0xaa34>  // b.any
  41fa44:	lsl	x12, x11, #4
  41fa48:	ldr	x12, [x9, x12]
  41fa4c:	cmp	x27, x12
  41fa50:	csel	x1, x11, x1, eq  // eq = none
  41fa54:	b	41fa68 <_obstack_memory_used@@Base+0xaa34>
  41fa58:	lsl	x12, x11, #4
  41fa5c:	ldr	x12, [x9, x12]
  41fa60:	cmp	x27, x12
  41fa64:	csel	x25, x11, x25, eq  // eq = none
  41fa68:	subs	x8, x8, #0x1
  41fa6c:	add	x10, x10, #0x8
  41fa70:	b.ne	41fa28 <_obstack_memory_used@@Base+0xa9f4>  // b.any
  41fa74:	tbnz	x1, #63, 41fa90 <_obstack_memory_used@@Base+0xaa5c>
  41fa78:	ldr	x3, [sp, #40]
  41fa7c:	mov	x0, x24
  41fa80:	mov	x2, x23
  41fa84:	bl	42003c <_obstack_memory_used@@Base+0xb008>
  41fa88:	mov	w13, #0x18                  	// #24
  41fa8c:	cbnz	w0, 41fe3c <_obstack_memory_used@@Base+0xae08>
  41fa90:	tbnz	x25, #63, 41f9d8 <_obstack_memory_used@@Base+0xa9a4>
  41fa94:	ldr	x8, [x23, #8]
  41fa98:	cmp	x8, #0x1
  41fa9c:	str	x8, [sp, #32]
  41faa0:	b.lt	41f9d8 <_obstack_memory_used@@Base+0xa9a4>  // b.tstop
  41faa4:	mov	x21, xzr
  41faa8:	ldr	x8, [x23, #16]
  41faac:	mov	x1, x25
  41fab0:	mov	w27, #0x18                  	// #24
  41fab4:	ldr	x22, [x8, x21, lsl #3]
  41fab8:	ldr	x8, [x24, #56]
  41fabc:	madd	x0, x22, x13, x8
  41fac0:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41fac4:	cbnz	x0, 41fb00 <_obstack_memory_used@@Base+0xaacc>
  41fac8:	ldr	x8, [x24, #48]
  41facc:	mov	x1, x25
  41fad0:	madd	x0, x22, x27, x8
  41fad4:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41fad8:	cbnz	x0, 41fb00 <_obstack_memory_used@@Base+0xaacc>
  41fadc:	ldr	x3, [sp, #40]
  41fae0:	mov	x0, x24
  41fae4:	mov	x1, x22
  41fae8:	mov	x2, x23
  41faec:	bl	42003c <_obstack_memory_used@@Base+0xb008>
  41faf0:	cbnz	w0, 41fe3c <_obstack_memory_used@@Base+0xae08>
  41faf4:	ldr	x8, [x23, #8]
  41faf8:	sub	x21, x21, #0x1
  41fafc:	str	x8, [sp, #32]
  41fb00:	ldr	x8, [sp, #32]
  41fb04:	add	x21, x21, #0x1
  41fb08:	mov	w13, #0x18                  	// #24
  41fb0c:	cmp	x21, x8
  41fb10:	b.lt	41faa8 <_obstack_memory_used@@Base+0xaa74>  // b.tstop
  41fb14:	b	41f9d8 <_obstack_memory_used@@Base+0xa9a4>
  41fb18:	cmp	x8, #0x1
  41fb1c:	b.lt	41f9d8 <_obstack_memory_used@@Base+0xa9a4>  // b.tstop
  41fb20:	mov	x21, xzr
  41fb24:	ldr	x10, [x23, #16]
  41fb28:	ldr	x1, [x10, x21, lsl #3]
  41fb2c:	add	x10, x9, x1, lsl #4
  41fb30:	ldr	w10, [x10, #8]
  41fb34:	and	w10, w10, #0xfe
  41fb38:	orr	w10, w10, #0x1
  41fb3c:	cmp	w10, #0x9
  41fb40:	b.ne	41fb70 <_obstack_memory_used@@Base+0xab3c>  // b.any
  41fb44:	lsl	x10, x1, #4
  41fb48:	ldr	x9, [x9, x10]
  41fb4c:	cmp	x27, x9
  41fb50:	b.ne	41fb70 <_obstack_memory_used@@Base+0xab3c>  // b.any
  41fb54:	ldr	x3, [sp, #40]
  41fb58:	mov	x0, x24
  41fb5c:	mov	x2, x23
  41fb60:	bl	42003c <_obstack_memory_used@@Base+0xb008>
  41fb64:	cbnz	w0, 41fe3c <_obstack_memory_used@@Base+0xae08>
  41fb68:	ldr	x8, [x23, #8]
  41fb6c:	mov	w13, #0x18                  	// #24
  41fb70:	add	x21, x21, #0x1
  41fb74:	cmp	x21, x8
  41fb78:	b.ge	41f9d8 <_obstack_memory_used@@Base+0xa9a4>  // b.tcont
  41fb7c:	ldr	x9, [x24]
  41fb80:	b	41fb24 <_obstack_memory_used@@Base+0xaaf0>
  41fb84:	ldr	x8, [x20]
  41fb88:	str	xzr, [x8, x19, lsl #3]
  41fb8c:	b	41fbb8 <_obstack_memory_used@@Base+0xab84>
  41fb90:	ldr	x27, [sp, #24]
  41fb94:	str	wzr, [sp, #60]
  41fb98:	add	x0, sp, #0x3c
  41fb9c:	mov	x1, x24
  41fba0:	mov	x2, x23
  41fba4:	bl	41ef9c <_obstack_memory_used@@Base+0x9f68>
  41fba8:	ldr	x8, [x20]
  41fbac:	str	x0, [x8, x19, lsl #3]
  41fbb0:	ldr	w22, [sp, #60]
  41fbb4:	cbnz	w22, 41fe18 <_obstack_memory_used@@Base+0xade4>
  41fbb8:	cbz	x27, 41fe14 <_obstack_memory_used@@Base+0xade0>
  41fbbc:	ldr	x8, [sp, #48]
  41fbc0:	ldr	x8, [x8, #184]
  41fbc4:	ldr	x8, [x8, x19, lsl #3]
  41fbc8:	ldrb	w8, [x8, #104]
  41fbcc:	tbz	w8, #6, 41fe14 <_obstack_memory_used@@Base+0xade0>
  41fbd0:	ldr	x0, [sp, #48]
  41fbd4:	mov	x1, x19
  41fbd8:	ldr	x23, [x0, #152]
  41fbdc:	bl	41e37c <_obstack_memory_used@@Base+0x9348>
  41fbe0:	cmn	x0, #0x1
  41fbe4:	str	x0, [sp, #16]
  41fbe8:	b.eq	41fe10 <_obstack_memory_used@@Base+0xaddc>  // b.none
  41fbec:	ldr	x8, [sp, #40]
  41fbf0:	str	xzr, [sp, #64]
  41fbf4:	ldr	x8, [x8, #8]
  41fbf8:	cmp	x8, #0x0
  41fbfc:	b.le	41fe10 <_obstack_memory_used@@Base+0xaddc>
  41fc00:	add	x9, x20, #0x20
  41fc04:	str	x9, [sp, #32]
  41fc08:	add	x9, sp, #0x40
  41fc0c:	mov	x28, xzr
  41fc10:	mov	x27, xzr
  41fc14:	add	x10, x19, #0x1
  41fc18:	add	x9, x9, #0x20
  41fc1c:	str	x10, [sp, #8]
  41fc20:	str	x9, [sp, #24]
  41fc24:	ldr	x9, [sp, #40]
  41fc28:	ldr	x10, [x20, #16]
  41fc2c:	ldr	x9, [x9, #16]
  41fc30:	ldr	x26, [x9, x27, lsl #3]
  41fc34:	ldr	x9, [x23]
  41fc38:	cmp	x26, x10
  41fc3c:	add	x9, x9, x26, lsl #4
  41fc40:	ldrb	w9, [x9, #8]
  41fc44:	b.ne	41fc60 <_obstack_memory_used@@Base+0xac2c>  // b.any
  41fc48:	cmp	w9, #0x4
  41fc4c:	b.ne	41fde8 <_obstack_memory_used@@Base+0xadb4>  // b.any
  41fc50:	ldr	x9, [x20, #24]
  41fc54:	cmp	x9, x19
  41fc58:	b.ne	41fc68 <_obstack_memory_used@@Base+0xac34>  // b.any
  41fc5c:	b	41fde8 <_obstack_memory_used@@Base+0xadb4>
  41fc60:	cmp	w9, #0x4
  41fc64:	b.ne	41fde8 <_obstack_memory_used@@Base+0xadb4>  // b.any
  41fc68:	ldr	x8, [sp, #48]
  41fc6c:	ldr	x24, [sp, #16]
  41fc70:	mov	w9, #0x28                  	// #40
  41fc74:	ldr	x8, [x8, #216]
  41fc78:	madd	x21, x24, x9, x8
  41fc7c:	ldr	x8, [x21]
  41fc80:	cmp	x8, x26
  41fc84:	b.ne	41fdd0 <_obstack_memory_used@@Base+0xad9c>  // b.any
  41fc88:	ldp	x9, x8, [x21, #16]
  41fc8c:	subs	x8, x8, x9
  41fc90:	add	x22, x8, x19
  41fc94:	b.eq	41fca4 <_obstack_memory_used@@Base+0xac70>  // b.none
  41fc98:	ldr	x8, [x23, #24]
  41fc9c:	add	x8, x8, x26, lsl #3
  41fca0:	b	41fcb4 <_obstack_memory_used@@Base+0xac80>
  41fca4:	ldr	x8, [x23, #40]
  41fca8:	mov	w9, #0x18                  	// #24
  41fcac:	madd	x8, x26, x9, x8
  41fcb0:	ldr	x8, [x8, #16]
  41fcb4:	ldr	x9, [x20, #24]
  41fcb8:	cmp	x22, x9
  41fcbc:	b.gt	41fdd0 <_obstack_memory_used@@Base+0xad9c>
  41fcc0:	ldr	x9, [x20]
  41fcc4:	ldr	x9, [x9, x22, lsl #3]
  41fcc8:	cbz	x9, 41fdd0 <_obstack_memory_used@@Base+0xad9c>
  41fccc:	ldr	x25, [x8]
  41fcd0:	add	x0, x9, #0x8
  41fcd4:	mov	x1, x25
  41fcd8:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41fcdc:	cbz	x0, 41fdd0 <_obstack_memory_used@@Base+0xad9c>
  41fce0:	ldr	x0, [sp, #48]
  41fce4:	ldr	x1, [sp, #32]
  41fce8:	mov	x2, x26
  41fcec:	mov	x3, x19
  41fcf0:	mov	x4, x25
  41fcf4:	mov	x5, x22
  41fcf8:	bl	420230 <_obstack_memory_used@@Base+0xb1fc>
  41fcfc:	tbnz	w0, #0, 41fdd0 <_obstack_memory_used@@Base+0xad9c>
  41fd00:	cbnz	x28, 41fd28 <_obstack_memory_used@@Base+0xacf4>
  41fd04:	ldr	x8, [x20, #48]
  41fd08:	ldp	q1, q0, [x20, #16]
  41fd0c:	ldr	q2, [x20]
  41fd10:	ldp	x0, x1, [sp, #24]
  41fd14:	str	x8, [sp, #112]
  41fd18:	stp	q1, q0, [sp, #80]
  41fd1c:	str	q2, [sp, #64]
  41fd20:	bl	41c5b4 <_obstack_memory_used@@Base+0x7580>
  41fd24:	cbnz	w0, 41fe48 <_obstack_memory_used@@Base+0xae14>
  41fd28:	ldr	x0, [sp, #24]
  41fd2c:	mov	x1, x24
  41fd30:	stp	x26, x19, [sp, #80]
  41fd34:	bl	41c3ac <_obstack_memory_used@@Base+0x7378>
  41fd38:	tbz	w0, #0, 41fe5c <_obstack_memory_used@@Base+0xae28>
  41fd3c:	ldr	x28, [sp, #64]
  41fd40:	ldr	x0, [sp, #48]
  41fd44:	add	x1, sp, #0x40
  41fd48:	ldr	x21, [x28, x19, lsl #3]
  41fd4c:	bl	41f588 <_obstack_memory_used@@Base+0xa554>
  41fd50:	cbnz	w0, 41fe48 <_obstack_memory_used@@Base+0xae14>
  41fd54:	ldr	x1, [x20, #8]
  41fd58:	cbz	x1, 41fd70 <_obstack_memory_used@@Base+0xad3c>
  41fd5c:	ldr	x3, [sp, #8]
  41fd60:	mov	x0, x23
  41fd64:	mov	x2, x28
  41fd68:	bl	41f7d4 <_obstack_memory_used@@Base+0xa7a0>
  41fd6c:	cbnz	w0, 41fe48 <_obstack_memory_used@@Base+0xae14>
  41fd70:	ldr	x0, [sp, #24]
  41fd74:	mov	x1, x24
  41fd78:	str	x21, [x28, x19, lsl #3]
  41fd7c:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  41fd80:	cmp	x0, #0x1
  41fd84:	b.lt	41fdc0 <_obstack_memory_used@@Base+0xad8c>  // b.tstop
  41fd88:	ldr	x9, [sp, #104]
  41fd8c:	cmp	x9, x0
  41fd90:	b.lt	41fdc0 <_obstack_memory_used@@Base+0xad8c>  // b.tstop
  41fd94:	sub	x8, x9, #0x1
  41fd98:	cmp	x9, x0
  41fd9c:	str	x8, [sp, #104]
  41fda0:	b.le	41fdc0 <_obstack_memory_used@@Base+0xad8c>
  41fda4:	ldr	x9, [sp, #112]
  41fda8:	add	x10, x9, x0, lsl #3
  41fdac:	ldr	x11, [x10]
  41fdb0:	cmp	x0, x8
  41fdb4:	add	x0, x0, #0x1
  41fdb8:	stur	x11, [x10, #-8]
  41fdbc:	b.lt	41fda8 <_obstack_memory_used@@Base+0xad74>  // b.tstop
  41fdc0:	ldr	x8, [sp, #48]
  41fdc4:	mov	w9, #0x28                  	// #40
  41fdc8:	ldr	x8, [x8, #216]
  41fdcc:	madd	x21, x24, x9, x8
  41fdd0:	ldrb	w8, [x21, #32]
  41fdd4:	add	x21, x21, #0x28
  41fdd8:	add	x24, x24, #0x1
  41fddc:	cbnz	w8, 41fc7c <_obstack_memory_used@@Base+0xac48>
  41fde0:	ldr	x8, [sp, #40]
  41fde4:	ldr	x8, [x8, #8]
  41fde8:	add	x27, x27, #0x1
  41fdec:	cmp	x27, x8
  41fdf0:	b.lt	41fc24 <_obstack_memory_used@@Base+0xabf0>  // b.tstop
  41fdf4:	mov	w22, wzr
  41fdf8:	cbz	x28, 41fe04 <_obstack_memory_used@@Base+0xadd0>
  41fdfc:	ldr	x0, [sp, #112]
  41fe00:	bl	402770 <free@plt>
  41fe04:	str	w22, [sp, #60]
  41fe08:	cbz	w22, 41fe14 <_obstack_memory_used@@Base+0xade0>
  41fe0c:	b	41fe18 <_obstack_memory_used@@Base+0xade4>
  41fe10:	str	wzr, [sp, #60]
  41fe14:	mov	w22, wzr
  41fe18:	mov	w0, w22
  41fe1c:	ldp	x20, x19, [sp, #208]
  41fe20:	ldp	x22, x21, [sp, #192]
  41fe24:	ldp	x24, x23, [sp, #176]
  41fe28:	ldp	x26, x25, [sp, #160]
  41fe2c:	ldp	x28, x27, [sp, #144]
  41fe30:	ldp	x29, x30, [sp, #128]
  41fe34:	add	sp, sp, #0xe0
  41fe38:	ret
  41fe3c:	mov	w22, w0
  41fe40:	str	w22, [sp, #60]
  41fe44:	b	41fe18 <_obstack_memory_used@@Base+0xade4>
  41fe48:	mov	w22, w0
  41fe4c:	b	41fe60 <_obstack_memory_used@@Base+0xae2c>
  41fe50:	mov	w22, #0xc                   	// #12
  41fe54:	str	w0, [sp, #64]
  41fe58:	b	41fe40 <_obstack_memory_used@@Base+0xae0c>
  41fe5c:	mov	w22, #0xc                   	// #12
  41fe60:	ldr	x28, [sp, #64]
  41fe64:	cbnz	x28, 41fdfc <_obstack_memory_used@@Base+0xadc8>
  41fe68:	b	41fe04 <_obstack_memory_used@@Base+0xadd0>
  41fe6c:	mov	w22, w0
  41fe70:	b	41fe18 <_obstack_memory_used@@Base+0xade4>
  41fe74:	stp	x29, x30, [sp, #-48]!
  41fe78:	stp	x22, x21, [sp, #16]
  41fe7c:	stp	x20, x19, [sp, #32]
  41fe80:	ldr	x9, [x1, #8]
  41fe84:	mov	x29, sp
  41fe88:	cbz	x9, 420020 <_obstack_memory_used@@Base+0xafec>
  41fe8c:	ldr	x10, [x2, #8]
  41fe90:	mov	x20, x2
  41fe94:	cbz	x10, 420020 <_obstack_memory_used@@Base+0xafec>
  41fe98:	ldp	x8, x13, [x0]
  41fe9c:	add	x11, x10, x9
  41fea0:	mov	x21, x1
  41fea4:	mov	x19, x0
  41fea8:	add	x12, x13, x11
  41feac:	cmp	x12, x8
  41feb0:	b.le	41fedc <_obstack_memory_used@@Base+0xaea8>
  41feb4:	ldr	x0, [x19, #16]
  41feb8:	add	x22, x8, x11
  41febc:	lsl	x1, x22, #3
  41fec0:	bl	402610 <realloc@plt>
  41fec4:	cbz	x0, 420034 <_obstack_memory_used@@Base+0xb000>
  41fec8:	str	x0, [x19, #16]
  41fecc:	str	x22, [x19]
  41fed0:	ldr	x13, [x19, #8]
  41fed4:	ldr	x9, [x21, #8]
  41fed8:	ldr	x10, [x20, #8]
  41fedc:	ldr	x11, [x21, #16]
  41fee0:	ldr	x12, [x20, #16]
  41fee4:	add	x8, x9, x13
  41fee8:	add	x8, x8, x10
  41feec:	sub	x13, x13, #0x1
  41fef0:	sub	x9, x9, #0x1
  41fef4:	mov	x14, x10
  41fef8:	sub	x10, x14, #0x1
  41fefc:	ldr	x16, [x12, x10, lsl #3]
  41ff00:	ldr	x15, [x11, x9, lsl #3]
  41ff04:	cmp	x15, x16
  41ff08:	b.eq	41ff30 <_obstack_memory_used@@Base+0xaefc>  // b.none
  41ff0c:	b.lt	41ff20 <_obstack_memory_used@@Base+0xaeec>  // b.tstop
  41ff10:	cmp	x9, #0x0
  41ff14:	sub	x9, x9, #0x1
  41ff18:	b.gt	41ff00 <_obstack_memory_used@@Base+0xaecc>
  41ff1c:	b	41ff88 <_obstack_memory_used@@Base+0xaf54>
  41ff20:	cmp	x14, #0x2
  41ff24:	mov	x14, x10
  41ff28:	b.ge	41fef8 <_obstack_memory_used@@Base+0xaec4>  // b.tcont
  41ff2c:	b	41ff88 <_obstack_memory_used@@Base+0xaf54>
  41ff30:	tbnz	x13, #63, 41ff58 <_obstack_memory_used@@Base+0xaf24>
  41ff34:	ldr	x17, [x19, #16]
  41ff38:	ldr	x16, [x17, x13, lsl #3]
  41ff3c:	cmp	x16, x15
  41ff40:	b.le	41ff60 <_obstack_memory_used@@Base+0xaf2c>
  41ff44:	sub	x16, x13, #0x1
  41ff48:	cmp	x13, #0x0
  41ff4c:	mov	x13, x16
  41ff50:	b.gt	41ff38 <_obstack_memory_used@@Base+0xaf04>
  41ff54:	b	41ff68 <_obstack_memory_used@@Base+0xaf34>
  41ff58:	mov	x16, x13
  41ff5c:	b	41ff68 <_obstack_memory_used@@Base+0xaf34>
  41ff60:	mov	x16, x13
  41ff64:	b.eq	41ff78 <_obstack_memory_used@@Base+0xaf44>  // b.none
  41ff68:	ldr	x13, [x19, #16]
  41ff6c:	sub	x8, x8, #0x1
  41ff70:	str	x15, [x13, x8, lsl #3]
  41ff74:	mov	x13, x16
  41ff78:	cmp	x9, #0x1
  41ff7c:	b.lt	41ff88 <_obstack_memory_used@@Base+0xaf54>  // b.tstop
  41ff80:	cmp	x14, #0x2
  41ff84:	b.ge	41fef0 <_obstack_memory_used@@Base+0xaebc>  // b.tcont
  41ff88:	ldp	x12, x0, [x19, #8]
  41ff8c:	ldr	x13, [x21, #8]
  41ff90:	ldr	x14, [x20, #8]
  41ff94:	subs	x9, x12, #0x1
  41ff98:	add	x9, x9, x13
  41ff9c:	add	x10, x9, x14
  41ffa0:	sub	x15, x10, x8
  41ffa4:	add	x9, x15, #0x1
  41ffa8:	subs	x11, x12, #0x1
  41ffac:	add	x16, x9, x12
  41ffb0:	str	x16, [x19, #8]
  41ffb4:	b.lt	420010 <_obstack_memory_used@@Base+0xafdc>  // b.tstop
  41ffb8:	tbnz	x15, #63, 420010 <_obstack_memory_used@@Base+0xafdc>
  41ffbc:	add	x12, x12, x14
  41ffc0:	add	x12, x12, x13
  41ffc4:	sub	x12, x12, x8
  41ffc8:	add	x12, x0, x12, lsl #3
  41ffcc:	ldr	x14, [x0, x10, lsl #3]
  41ffd0:	ldr	x13, [x0, x11, lsl #3]
  41ffd4:	cmp	x14, x13
  41ffd8:	b.gt	41fff4 <_obstack_memory_used@@Base+0xafc0>
  41ffdc:	sub	x14, x11, #0x1
  41ffe0:	cmp	x11, #0x0
  41ffe4:	str	x13, [x12, x11, lsl #3]
  41ffe8:	mov	x11, x14
  41ffec:	b.gt	41ffcc <_obstack_memory_used@@Base+0xaf98>
  41fff0:	b	420010 <_obstack_memory_used@@Base+0xafdc>
  41fff4:	mov	x13, xzr
  41fff8:	sub	x10, x10, #0x1
  41fffc:	sub	x9, x9, #0x1
  420000:	str	x14, [x12, x11, lsl #3]
  420004:	sub	x12, x12, #0x8
  420008:	cbnz	x9, 41ffcc <_obstack_memory_used@@Base+0xaf98>
  42000c:	b	420014 <_obstack_memory_used@@Base+0xafe0>
  420010:	mov	x13, x9
  420014:	add	x1, x0, x8, lsl #3
  420018:	lsl	x2, x13, #3
  42001c:	bl	402320 <memcpy@plt>
  420020:	mov	w0, wzr
  420024:	ldp	x20, x19, [sp, #32]
  420028:	ldp	x22, x21, [sp, #16]
  42002c:	ldp	x29, x30, [sp], #48
  420030:	ret
  420034:	mov	w0, #0xc                   	// #12
  420038:	b	420024 <_obstack_memory_used@@Base+0xaff0>
  42003c:	sub	sp, sp, #0x90
  420040:	stp	x29, x30, [sp, #48]
  420044:	stp	x28, x27, [sp, #64]
  420048:	stp	x26, x25, [sp, #80]
  42004c:	stp	x24, x23, [sp, #96]
  420050:	stp	x22, x21, [sp, #112]
  420054:	stp	x20, x19, [sp, #128]
  420058:	ldr	x9, [x0, #56]
  42005c:	mov	w8, #0x18                  	// #24
  420060:	stp	xzr, xzr, [sp, #24]
  420064:	str	xzr, [sp, #40]
  420068:	madd	x26, x1, x8, x9
  42006c:	stp	x3, x26, [sp, #8]
  420070:	ldr	x21, [x26, #8]!
  420074:	add	x29, sp, #0x30
  420078:	cmp	x21, #0x1
  42007c:	b.lt	4201f8 <_obstack_memory_used@@Base+0xb1c4>  // b.tstop
  420080:	mov	w8, #0x18                  	// #24
  420084:	madd	x8, x1, x8, x9
  420088:	mov	x20, x1
  42008c:	mov	x22, x0
  420090:	mov	x19, x2
  420094:	mov	x28, xzr
  420098:	add	x27, x8, #0x10
  42009c:	str	x9, [sp]
  4200a0:	ldr	x8, [x27]
  4200a4:	ldr	x23, [x8, x28, lsl #3]
  4200a8:	cmp	x23, x20
  4200ac:	b.eq	420154 <_obstack_memory_used@@Base+0xb120>  // b.none
  4200b0:	ldr	x8, [x22]
  4200b4:	add	x8, x8, x23, lsl #4
  4200b8:	ldrb	w8, [x8, #8]
  4200bc:	tbz	w8, #3, 420154 <_obstack_memory_used@@Base+0xb120>
  4200c0:	ldr	x8, [x22, #40]
  4200c4:	mov	w9, #0x18                  	// #24
  4200c8:	madd	x9, x23, x9, x8
  4200cc:	ldp	x9, x8, [x9, #8]
  4200d0:	ldr	x25, [x8]
  4200d4:	cmp	x9, #0x2
  4200d8:	b.lt	4200e4 <_obstack_memory_used@@Base+0xb0b0>  // b.tstop
  4200dc:	ldr	x24, [x8, #8]
  4200e0:	b	4200e8 <_obstack_memory_used@@Base+0xb0b4>
  4200e4:	mov	x24, #0xffffffffffffffff    	// #-1
  4200e8:	ldr	x0, [sp, #16]
  4200ec:	mov	x1, x25
  4200f0:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  4200f4:	cbz	x0, 420124 <_obstack_memory_used@@Base+0xb0f0>
  4200f8:	cmp	x24, #0x1
  4200fc:	b.lt	420154 <_obstack_memory_used@@Base+0xb120>  // b.tstop
  420100:	ldr	x0, [sp, #16]
  420104:	mov	x1, x24
  420108:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  42010c:	cbnz	x0, 420154 <_obstack_memory_used@@Base+0xb120>
  420110:	mov	x0, x19
  420114:	mov	x1, x24
  420118:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  42011c:	cbnz	x0, 420134 <_obstack_memory_used@@Base+0xb100>
  420120:	b	420154 <_obstack_memory_used@@Base+0xb120>
  420124:	mov	x0, x19
  420128:	mov	x1, x25
  42012c:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  420130:	cbz	x0, 4200f8 <_obstack_memory_used@@Base+0xb0c4>
  420134:	ldr	x8, [x22, #56]
  420138:	ldr	x1, [sp, #8]
  42013c:	mov	w9, #0x18                  	// #24
  420140:	add	x0, sp, #0x18
  420144:	madd	x2, x23, x9, x8
  420148:	bl	41fe74 <_obstack_memory_used@@Base+0xae40>
  42014c:	cbnz	w0, 420228 <_obstack_memory_used@@Base+0xb1f4>
  420150:	ldr	x21, [x26]
  420154:	add	x28, x28, #0x1
  420158:	cmp	x28, x21
  42015c:	b.lt	4200a0 <_obstack_memory_used@@Base+0xb06c>  // b.tstop
  420160:	cmp	x21, #0x1
  420164:	b.lt	4201f8 <_obstack_memory_used@@Base+0xb1c4>  // b.tstop
  420168:	ldr	x9, [sp]
  42016c:	mov	w8, #0x18                  	// #24
  420170:	mov	x22, xzr
  420174:	madd	x8, x20, x8, x9
  420178:	ldr	x21, [x8, #16]
  42017c:	ldr	x20, [x21, x22, lsl #3]
  420180:	add	x0, sp, #0x18
  420184:	mov	x1, x20
  420188:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  42018c:	cbz	x0, 4201a4 <_obstack_memory_used@@Base+0xb170>
  420190:	ldr	x8, [x26]
  420194:	add	x22, x22, #0x1
  420198:	cmp	x22, x8
  42019c:	b.lt	42017c <_obstack_memory_used@@Base+0xb148>  // b.tstop
  4201a0:	b	4201f8 <_obstack_memory_used@@Base+0xb1c4>
  4201a4:	mov	x0, x19
  4201a8:	mov	x1, x20
  4201ac:	bl	41c630 <_obstack_memory_used@@Base+0x75fc>
  4201b0:	cmp	x0, #0x1
  4201b4:	b.lt	420190 <_obstack_memory_used@@Base+0xb15c>  // b.tstop
  4201b8:	ldr	x8, [x19, #8]
  4201bc:	cmp	x8, x0
  4201c0:	b.lt	420190 <_obstack_memory_used@@Base+0xb15c>  // b.tstop
  4201c4:	sub	x9, x8, #0x1
  4201c8:	cmp	x8, x0
  4201cc:	str	x9, [x19, #8]
  4201d0:	b.le	420190 <_obstack_memory_used@@Base+0xb15c>
  4201d4:	ldr	x8, [x19, #16]
  4201d8:	add	x9, x8, x0, lsl #3
  4201dc:	ldr	x10, [x9]
  4201e0:	stur	x10, [x9, #-8]
  4201e4:	ldr	x9, [x19, #8]
  4201e8:	cmp	x0, x9
  4201ec:	add	x0, x0, #0x1
  4201f0:	b.lt	4201d8 <_obstack_memory_used@@Base+0xb1a4>  // b.tstop
  4201f4:	b	420190 <_obstack_memory_used@@Base+0xb15c>
  4201f8:	mov	w24, wzr
  4201fc:	ldr	x0, [sp, #40]
  420200:	bl	402770 <free@plt>
  420204:	mov	w0, w24
  420208:	ldp	x20, x19, [sp, #128]
  42020c:	ldp	x22, x21, [sp, #112]
  420210:	ldp	x24, x23, [sp, #96]
  420214:	ldp	x26, x25, [sp, #80]
  420218:	ldp	x28, x27, [sp, #64]
  42021c:	ldp	x29, x30, [sp, #48]
  420220:	add	sp, sp, #0x90
  420224:	ret
  420228:	mov	w24, w0
  42022c:	b	4201fc <_obstack_memory_used@@Base+0xb1c8>
  420230:	sub	sp, sp, #0x70
  420234:	stp	x24, x23, [sp, #64]
  420238:	mov	x23, x1
  42023c:	mov	x1, x3
  420240:	stp	x29, x30, [sp, #16]
  420244:	stp	x28, x27, [sp, #32]
  420248:	stp	x26, x25, [sp, #48]
  42024c:	stp	x22, x21, [sp, #80]
  420250:	stp	x20, x19, [sp, #96]
  420254:	add	x29, sp, #0x10
  420258:	mov	x19, x5
  42025c:	stp	x2, x4, [sp]
  420260:	mov	x21, x3
  420264:	mov	x24, x0
  420268:	bl	41e37c <_obstack_memory_used@@Base+0x9348>
  42026c:	mov	x25, x0
  420270:	mov	x0, x24
  420274:	mov	x1, x19
  420278:	bl	41e37c <_obstack_memory_used@@Base+0x9348>
  42027c:	ldr	x8, [x23, #8]
  420280:	cmp	x8, #0x1
  420284:	b.lt	42030c <_obstack_memory_used@@Base+0xb2d8>  // b.tstop
  420288:	ldr	x22, [x24, #152]
  42028c:	mov	x26, x0
  420290:	mov	x20, xzr
  420294:	ldr	x8, [x23, #16]
  420298:	mov	w9, #0x28                  	// #40
  42029c:	ldr	x3, [sp]
  4202a0:	mov	x0, x24
  4202a4:	ldr	x1, [x8, x20, lsl #3]
  4202a8:	ldr	x8, [x24, #216]
  4202ac:	mov	x4, x21
  4202b0:	mov	x5, x25
  4202b4:	mul	x9, x1, x9
  4202b8:	ldr	x8, [x8, x9]
  4202bc:	ldr	x9, [x22]
  4202c0:	lsl	x8, x8, #4
  4202c4:	ldr	x27, [x9, x8]
  4202c8:	mov	x2, x27
  4202cc:	bl	420338 <_obstack_memory_used@@Base+0xb304>
  4202d0:	ldr	x8, [x23, #16]
  4202d4:	ldr	x3, [sp, #8]
  4202d8:	mov	w28, w0
  4202dc:	mov	x0, x24
  4202e0:	ldr	x1, [x8, x20, lsl #3]
  4202e4:	mov	x2, x27
  4202e8:	mov	x4, x19
  4202ec:	mov	x5, x26
  4202f0:	bl	420338 <_obstack_memory_used@@Base+0xb304>
  4202f4:	cmp	w0, w28
  4202f8:	b.ne	420314 <_obstack_memory_used@@Base+0xb2e0>  // b.any
  4202fc:	ldr	x8, [x23, #8]
  420300:	add	x20, x20, #0x1
  420304:	cmp	x20, x8
  420308:	b.lt	420294 <_obstack_memory_used@@Base+0xb260>  // b.tstop
  42030c:	mov	w0, wzr
  420310:	b	420318 <_obstack_memory_used@@Base+0xb2e4>
  420314:	mov	w0, #0x1                   	// #1
  420318:	ldp	x20, x19, [sp, #96]
  42031c:	ldp	x22, x21, [sp, #80]
  420320:	ldp	x24, x23, [sp, #64]
  420324:	ldp	x26, x25, [sp, #48]
  420328:	ldp	x28, x27, [sp, #32]
  42032c:	ldp	x29, x30, [sp, #16]
  420330:	add	sp, sp, #0x70
  420334:	ret
  420338:	ldr	x9, [x0, #216]
  42033c:	mov	w8, #0x28                  	// #40
  420340:	madd	x8, x1, x8, x9
  420344:	ldr	x8, [x8, #16]
  420348:	cmp	x8, x4
  42034c:	b.le	420358 <_obstack_memory_used@@Base+0xb324>
  420350:	mov	w0, #0xffffffff            	// #-1
  420354:	ret
  420358:	mov	w10, #0x28                  	// #40
  42035c:	madd	x9, x1, x10, x9
  420360:	ldr	x9, [x9, #24]
  420364:	cmp	x9, x4
  420368:	b.ge	420374 <_obstack_memory_used@@Base+0xb340>  // b.tcont
  42036c:	mov	w0, #0x1                   	// #1
  420370:	ret
  420374:	cmp	x8, x4
  420378:	cset	w1, eq  // eq = none
  42037c:	cmp	x9, x4
  420380:	cset	w8, eq  // eq = none
  420384:	bfi	w1, w8, #1, #1
  420388:	cbz	w1, 420394 <_obstack_memory_used@@Base+0xb360>
  42038c:	mov	x4, x5
  420390:	b	42039c <_obstack_memory_used@@Base+0xb368>
  420394:	mov	w0, wzr
  420398:	ret
  42039c:	sub	sp, sp, #0x80
  4203a0:	stp	x29, x30, [sp, #32]
  4203a4:	stp	x28, x27, [sp, #48]
  4203a8:	stp	x26, x25, [sp, #64]
  4203ac:	stp	x24, x23, [sp, #80]
  4203b0:	stp	x22, x21, [sp, #96]
  4203b4:	stp	x20, x19, [sp, #112]
  4203b8:	ldr	x24, [x0, #152]
  4203bc:	mov	w8, #0x18                  	// #24
  4203c0:	mov	w23, w1
  4203c4:	add	x29, sp, #0x20
  4203c8:	ldr	x9, [x24, #48]
  4203cc:	madd	x13, x3, x8, x9
  4203d0:	ldr	x8, [x13, #8]!
  4203d4:	cmp	x8, #0x1
  4203d8:	b.lt	420544 <_obstack_memory_used@@Base+0xb510>  // b.tstop
  4203dc:	mov	w12, #0x18                  	// #24
  4203e0:	cmp	x2, #0x3f
  4203e4:	and	w10, w23, #0x2
  4203e8:	mov	w11, #0x1                   	// #1
  4203ec:	madd	x9, x3, x12, x9
  4203f0:	cset	w12, gt
  4203f4:	lsl	x11, x11, x2
  4203f8:	add	x25, x9, #0x10
  4203fc:	orr	w9, w12, w10, lsr #1
  420400:	mov	x19, x4
  420404:	mov	x20, x3
  420408:	mov	x21, x2
  42040c:	mov	x22, x0
  420410:	mov	x26, xzr
  420414:	stur	w9, [x29, #-12]
  420418:	stur	x11, [x29, #-8]
  42041c:	mvn	w9, w11
  420420:	mov	w11, #0x28                  	// #40
  420424:	str	w9, [sp, #16]
  420428:	str	x13, [sp, #8]
  42042c:	ldr	x9, [x25]
  420430:	ldr	x27, [x9, x26, lsl #3]
  420434:	ldr	x9, [x24]
  420438:	add	x9, x9, x27, lsl #4
  42043c:	ldrb	w10, [x9, #8]
  420440:	cmp	w10, #0x9
  420444:	b.eq	420514 <_obstack_memory_used@@Base+0xb4e0>  // b.none
  420448:	cmp	w10, #0x8
  42044c:	b.eq	420528 <_obstack_memory_used@@Base+0xb4f4>  // b.none
  420450:	cmp	w10, #0x4
  420454:	b.ne	420538 <_obstack_memory_used@@Base+0xb504>  // b.any
  420458:	cmn	x19, #0x1
  42045c:	b.eq	420538 <_obstack_memory_used@@Base+0xb504>  // b.none
  420460:	ldr	x8, [x22, #216]
  420464:	madd	x8, x19, x11, x8
  420468:	add	x28, x8, #0x22
  42046c:	ldur	x8, [x28, #-34]
  420470:	cmp	x8, x27
  420474:	b.ne	4204f8 <_obstack_memory_used@@Base+0xb4c4>  // b.any
  420478:	cmp	x21, #0x3f
  42047c:	b.gt	420490 <_obstack_memory_used@@Base+0xb45c>
  420480:	ldrh	w8, [x28]
  420484:	ldur	x9, [x29, #-8]
  420488:	tst	x9, x8
  42048c:	b.eq	4204f8 <_obstack_memory_used@@Base+0xb4c4>  // b.none
  420490:	ldr	x8, [x24, #40]
  420494:	mov	w9, #0x18                  	// #24
  420498:	madd	x8, x27, x9, x8
  42049c:	ldr	x8, [x8, #16]
  4204a0:	ldr	x3, [x8]
  4204a4:	cmp	x3, x20
  4204a8:	b.eq	42054c <_obstack_memory_used@@Base+0xb518>  // b.none
  4204ac:	mov	x0, x22
  4204b0:	mov	w1, w23
  4204b4:	mov	x2, x21
  4204b8:	mov	x4, x19
  4204bc:	bl	42039c <_obstack_memory_used@@Base+0xb368>
  4204c0:	cbz	w0, 4204d8 <_obstack_memory_used@@Base+0xb4a4>
  4204c4:	cmn	w0, #0x1
  4204c8:	b.eq	420560 <_obstack_memory_used@@Base+0xb52c>  // b.none
  4204cc:	cmp	x21, #0x3f
  4204d0:	b.le	4204e8 <_obstack_memory_used@@Base+0xb4b4>
  4204d4:	b	4204f8 <_obstack_memory_used@@Base+0xb4c4>
  4204d8:	ldur	w8, [x29, #-12]
  4204dc:	tbz	w8, #0, 4204e8 <_obstack_memory_used@@Base+0xb4b4>
  4204e0:	tbz	w23, #1, 4204f8 <_obstack_memory_used@@Base+0xb4c4>
  4204e4:	b	420554 <_obstack_memory_used@@Base+0xb520>
  4204e8:	ldrh	w8, [x28]
  4204ec:	ldr	w9, [sp, #16]
  4204f0:	and	w8, w8, w9
  4204f4:	strh	w8, [x28]
  4204f8:	ldurb	w8, [x28, #-2]
  4204fc:	add	x28, x28, #0x28
  420500:	cbnz	w8, 42046c <_obstack_memory_used@@Base+0xb438>
  420504:	ldr	x13, [sp, #8]
  420508:	mov	w11, #0x28                  	// #40
  42050c:	ldr	x8, [x13]
  420510:	b	420538 <_obstack_memory_used@@Base+0xb504>
  420514:	tbz	w23, #1, 420538 <_obstack_memory_used@@Base+0xb504>
  420518:	ldr	x9, [x9]
  42051c:	cmp	x9, x21
  420520:	b.ne	420538 <_obstack_memory_used@@Base+0xb504>  // b.any
  420524:	b	420554 <_obstack_memory_used@@Base+0xb520>
  420528:	tbz	w23, #0, 420538 <_obstack_memory_used@@Base+0xb504>
  42052c:	ldr	x9, [x9]
  420530:	cmp	x9, x21
  420534:	b.eq	42055c <_obstack_memory_used@@Base+0xb528>  // b.none
  420538:	add	x26, x26, #0x1
  42053c:	cmp	x26, x8
  420540:	b.lt	42042c <_obstack_memory_used@@Base+0xb3f8>  // b.tstop
  420544:	ubfx	w0, w23, #1, #1
  420548:	b	420560 <_obstack_memory_used@@Base+0xb52c>
  42054c:	sbfx	w0, w23, #0, #1
  420550:	b	420560 <_obstack_memory_used@@Base+0xb52c>
  420554:	mov	w0, wzr
  420558:	b	420560 <_obstack_memory_used@@Base+0xb52c>
  42055c:	mov	w0, #0xffffffff            	// #-1
  420560:	ldp	x20, x19, [sp, #112]
  420564:	ldp	x22, x21, [sp, #96]
  420568:	ldp	x24, x23, [sp, #80]
  42056c:	ldp	x26, x25, [sp, #64]
  420570:	ldp	x28, x27, [sp, #48]
  420574:	ldp	x29, x30, [sp, #32]
  420578:	add	sp, sp, #0x80
  42057c:	ret
  420580:	cbz	x0, 4205f4 <_obstack_memory_used@@Base+0xb5c0>
  420584:	stp	x29, x30, [sp, #-48]!
  420588:	stp	x20, x19, [sp, #32]
  42058c:	ldr	x8, [x0]
  420590:	mov	x19, x0
  420594:	ldr	x0, [x0, #16]
  420598:	str	x21, [sp, #16]
  42059c:	cmp	x8, #0x1
  4205a0:	mov	x29, sp
  4205a4:	b.lt	4205e4 <_obstack_memory_used@@Base+0xb5b0>  // b.tstop
  4205a8:	mov	x20, xzr
  4205ac:	mov	x21, xzr
  4205b0:	add	x8, x0, x20
  4205b4:	ldr	x0, [x8, #40]
  4205b8:	bl	402770 <free@plt>
  4205bc:	ldr	x8, [x19, #16]
  4205c0:	add	x8, x8, x20
  4205c4:	ldr	x0, [x8, #16]
  4205c8:	bl	402770 <free@plt>
  4205cc:	ldr	x8, [x19]
  4205d0:	ldr	x0, [x19, #16]
  4205d4:	add	x21, x21, #0x1
  4205d8:	add	x20, x20, #0x30
  4205dc:	cmp	x21, x8
  4205e0:	b.lt	4205b0 <_obstack_memory_used@@Base+0xb57c>  // b.tstop
  4205e4:	ldp	x20, x19, [sp, #32]
  4205e8:	ldr	x21, [sp, #16]
  4205ec:	ldp	x29, x30, [sp], #48
  4205f0:	b	402770 <free@plt>
  4205f4:	ret
  4205f8:	stp	x29, x30, [sp, #-48]!
  4205fc:	stp	x20, x19, [sp, #32]
  420600:	ldr	x8, [x0]
  420604:	ldr	x9, [x0, #16]
  420608:	str	x21, [sp, #16]
  42060c:	mov	x20, x0
  420610:	sub	x8, x8, #0x1
  420614:	add	x21, x8, x8, lsl #1
  420618:	str	x8, [x0]
  42061c:	add	x8, x9, x21, lsl #4
  420620:	ldr	x9, [x8]
  420624:	lsl	x2, x2, #4
  420628:	mov	x0, x3
  42062c:	mov	x29, sp
  420630:	str	x9, [x1]
  420634:	ldr	x1, [x8, #16]
  420638:	mov	x19, x4
  42063c:	bl	402320 <memcpy@plt>
  420640:	ldr	x0, [x19, #16]
  420644:	bl	402770 <free@plt>
  420648:	ldr	x8, [x20, #16]
  42064c:	add	x8, x8, x21, lsl #4
  420650:	ldr	x0, [x8, #16]
  420654:	bl	402770 <free@plt>
  420658:	ldr	x8, [x20, #16]
  42065c:	add	x8, x8, x21, lsl #4
  420660:	ldr	x9, [x8, #40]
  420664:	ldur	q0, [x8, #24]
  420668:	str	x9, [x19, #16]
  42066c:	str	q0, [x19]
  420670:	ldr	x8, [x20, #16]
  420674:	ldp	x20, x19, [sp, #32]
  420678:	add	x8, x8, x21, lsl #4
  42067c:	ldr	x0, [x8, #8]
  420680:	ldr	x21, [sp, #16]
  420684:	ldp	x29, x30, [sp], #48
  420688:	ret
  42068c:	stp	x29, x30, [sp, #-48]!
  420690:	str	x21, [sp, #16]
  420694:	stp	x20, x19, [sp, #32]
  420698:	mov	x29, sp
  42069c:	mov	x20, x0
  4206a0:	bl	402450 <__fpending@plt>
  4206a4:	mov	x19, x0
  4206a8:	mov	x0, x20
  4206ac:	bl	4023f0 <ferror_unlocked@plt>
  4206b0:	mov	w21, w0
  4206b4:	mov	x0, x20
  4206b8:	bl	402480 <fclose@plt>
  4206bc:	mov	w8, w0
  4206c0:	cbz	w21, 4206d8 <_obstack_memory_used@@Base+0xb6a4>
  4206c4:	cbnz	w8, 4206d0 <_obstack_memory_used@@Base+0xb69c>
  4206c8:	bl	402930 <__errno_location@plt>
  4206cc:	str	wzr, [x0]
  4206d0:	mov	w0, #0xffffffff            	// #-1
  4206d4:	b	4206f8 <_obstack_memory_used@@Base+0xb6c4>
  4206d8:	cmp	w8, #0x0
  4206dc:	csetm	w0, ne  // ne = any
  4206e0:	cbnz	x19, 4206f8 <_obstack_memory_used@@Base+0xb6c4>
  4206e4:	cbz	w8, 4206f8 <_obstack_memory_used@@Base+0xb6c4>
  4206e8:	bl	402930 <__errno_location@plt>
  4206ec:	ldr	w8, [x0]
  4206f0:	cmp	w8, #0x9
  4206f4:	csetm	w0, ne  // ne = any
  4206f8:	ldp	x20, x19, [sp, #32]
  4206fc:	ldr	x21, [sp, #16]
  420700:	ldp	x29, x30, [sp], #48
  420704:	ret
  420708:	mov	w8, #0xf616                	// #62998
  42070c:	movk	w8, #0x95, lsl #16
  420710:	str	xzr, [x0, #16]
  420714:	str	w8, [x0, #24]
  420718:	ret
  42071c:	stp	x29, x30, [sp, #-16]!
  420720:	ldr	w8, [x0, #24]
  420724:	mov	w9, #0xf616                	// #62998
  420728:	movk	w9, #0x95, lsl #16
  42072c:	mov	x29, sp
  420730:	cmp	w8, w9
  420734:	b.ne	4207a0 <_obstack_memory_used@@Base+0xb76c>  // b.any
  420738:	ldr	x8, [x0, #16]
  42073c:	cbz	x8, 420760 <_obstack_memory_used@@Base+0xb72c>
  420740:	ldr	x9, [x1, #8]
  420744:	ldr	x10, [x0]
  420748:	cmp	x9, x10
  42074c:	b.ne	420760 <_obstack_memory_used@@Base+0xb72c>  // b.any
  420750:	ldr	x9, [x1]
  420754:	ldr	x10, [x0, #8]
  420758:	cmp	x9, x10
  42075c:	b.eq	420790 <_obstack_memory_used@@Base+0xb75c>  // b.none
  420760:	add	x9, x8, #0x1
  420764:	tst	x9, x8
  420768:	str	x9, [x0, #16]
  42076c:	b.ne	420788 <_obstack_memory_used@@Base+0xb754>  // b.any
  420770:	cbz	x9, 420790 <_obstack_memory_used@@Base+0xb75c>
  420774:	ldr	q0, [x1]
  420778:	mov	w8, wzr
  42077c:	ext	v0.16b, v0.16b, v0.16b, #8
  420780:	str	q0, [x0]
  420784:	b	420794 <_obstack_memory_used@@Base+0xb760>
  420788:	mov	w8, wzr
  42078c:	b	420794 <_obstack_memory_used@@Base+0xb760>
  420790:	mov	w8, #0x1                   	// #1
  420794:	mov	w0, w8
  420798:	ldp	x29, x30, [sp], #16
  42079c:	ret
  4207a0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4207a4:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4207a8:	adrp	x3, 423000 <_obstack_memory_used@@Base+0xdfcc>
  4207ac:	add	x0, x0, #0xd04
  4207b0:	add	x1, x1, #0xd1c
  4207b4:	add	x3, x3, #0xd2a
  4207b8:	mov	w2, #0x3c                  	// #60
  4207bc:	bl	402920 <__assert_fail@plt>
  4207c0:	sub	x0, x0, #0x1
  4207c4:	ldrb	w10, [x0, #1]!
  4207c8:	cmp	w10, #0x2f
  4207cc:	b.eq	4207c4 <_obstack_memory_used@@Base+0xb790>  // b.none
  4207d0:	mov	w8, wzr
  4207d4:	mov	x9, x0
  4207d8:	and	w10, w10, #0xff
  4207dc:	cmp	w10, #0x2f
  4207e0:	b.eq	4207f8 <_obstack_memory_used@@Base+0xb7c4>  // b.none
  4207e4:	cbz	w10, 420804 <_obstack_memory_used@@Base+0xb7d0>
  4207e8:	tst	w8, #0x1
  4207ec:	mov	w8, wzr
  4207f0:	csel	x0, x9, x0, ne  // ne = any
  4207f4:	b	4207fc <_obstack_memory_used@@Base+0xb7c8>
  4207f8:	mov	w8, #0x1                   	// #1
  4207fc:	ldrb	w10, [x9, #1]!
  420800:	b	4207d8 <_obstack_memory_used@@Base+0xb7a4>
  420804:	ret
  420808:	stp	x29, x30, [sp, #-32]!
  42080c:	str	x19, [sp, #16]
  420810:	mov	x29, sp
  420814:	mov	x19, x0
  420818:	bl	402380 <strlen@plt>
  42081c:	mov	x8, x0
  420820:	sub	x9, x19, #0x1
  420824:	mov	x0, x8
  420828:	cmp	x8, #0x2
  42082c:	b.cc	420840 <_obstack_memory_used@@Base+0xb80c>  // b.lo, b.ul, b.last
  420830:	ldrb	w8, [x9, x0]
  420834:	cmp	w8, #0x2f
  420838:	sub	x8, x0, #0x1
  42083c:	b.eq	420824 <_obstack_memory_used@@Base+0xb7f0>  // b.none
  420840:	ldr	x19, [sp, #16]
  420844:	ldp	x29, x30, [sp], #32
  420848:	ret
  42084c:	sub	sp, sp, #0xe0
  420850:	stp	x29, x30, [sp, #208]
  420854:	add	x29, sp, #0xd0
  420858:	stp	x2, x3, [x29, #-80]
  42085c:	stp	x4, x5, [x29, #-64]
  420860:	stp	x6, x7, [x29, #-48]
  420864:	stp	q1, q2, [sp, #16]
  420868:	stp	q3, q4, [sp, #48]
  42086c:	str	q0, [sp]
  420870:	stp	q5, q6, [sp, #80]
  420874:	str	q7, [sp, #112]
  420878:	tbnz	w1, #6, 420884 <_obstack_memory_used@@Base+0xb850>
  42087c:	mov	w2, wzr
  420880:	b	4208dc <_obstack_memory_used@@Base+0xb8a8>
  420884:	mov	x9, #0xffffffffffffffd0    	// #-48
  420888:	mov	x11, sp
  42088c:	sub	x12, x29, #0x50
  420890:	movk	x9, #0xff80, lsl #32
  420894:	add	x10, x29, #0x10
  420898:	mov	x8, #0xffffffffffffffd0    	// #-48
  42089c:	add	x11, x11, #0x80
  4208a0:	add	x12, x12, #0x30
  4208a4:	stp	x11, x9, [x29, #-16]
  4208a8:	stp	x10, x12, [x29, #-32]
  4208ac:	tbz	w8, #31, 4208cc <_obstack_memory_used@@Base+0xb898>
  4208b0:	add	w9, w8, #0x8
  4208b4:	cmn	w8, #0x8
  4208b8:	stur	w9, [x29, #-8]
  4208bc:	b.gt	4208cc <_obstack_memory_used@@Base+0xb898>
  4208c0:	ldur	x9, [x29, #-24]
  4208c4:	add	x8, x9, x8
  4208c8:	b	4208d8 <_obstack_memory_used@@Base+0xb8a4>
  4208cc:	ldur	x8, [x29, #-32]
  4208d0:	add	x9, x8, #0x8
  4208d4:	stur	x9, [x29, #-32]
  4208d8:	ldr	w2, [x8]
  4208dc:	bl	402510 <open@plt>
  4208e0:	bl	412240 <wcrtomb@plt+0xf880>
  4208e4:	ldp	x29, x30, [sp, #208]
  4208e8:	add	sp, sp, #0xe0
  4208ec:	ret
  4208f0:	sub	sp, sp, #0x130
  4208f4:	add	x1, sp, #0xc
  4208f8:	mov	w2, #0x101                 	// #257
  4208fc:	stp	x29, x30, [sp, #272]
  420900:	str	x28, [sp, #288]
  420904:	add	x29, sp, #0x110
  420908:	bl	420b80 <_obstack_memory_used@@Base+0xbb4c>
  42090c:	cbz	w0, 420918 <_obstack_memory_used@@Base+0xb8e4>
  420910:	mov	w0, wzr
  420914:	b	42094c <_obstack_memory_used@@Base+0xb918>
  420918:	ldrh	w8, [sp, #12]
  42091c:	cmp	w8, #0x43
  420920:	b.eq	420910 <_obstack_memory_used@@Base+0xb8dc>  // b.none
  420924:	ldr	w8, [sp, #12]
  420928:	ldrh	w9, [sp, #16]
  42092c:	mov	w10, #0x4f50                	// #20304
  420930:	movk	w10, #0x4953, lsl #16
  420934:	mov	w11, #0x58                  	// #88
  420938:	eor	w8, w8, w10
  42093c:	eor	w9, w9, w11
  420940:	orr	w8, w8, w9
  420944:	cmp	w8, #0x0
  420948:	cset	w0, ne  // ne = any
  42094c:	ldr	x28, [sp, #288]
  420950:	ldp	x29, x30, [sp, #272]
  420954:	add	sp, sp, #0x130
  420958:	ret
  42095c:	mov	w8, #0x1                   	// #1
  420960:	dup	v0.4s, w1
  420964:	stp	wzr, wzr, [x0, #20]
  420968:	strb	w8, [x0, #28]
  42096c:	str	q0, [x0]
  420970:	str	w1, [x0, #16]
  420974:	ret
  420978:	ldrb	w0, [x0, #28]
  42097c:	ret
  420980:	ldrb	w8, [x0, #28]
  420984:	ldr	w10, [x0, #20]
  420988:	eor	w9, w8, #0x1
  42098c:	add	w10, w10, w9
  420990:	and	w11, w10, #0x3
  420994:	ldr	w8, [x0, w11, uxtw #2]
  420998:	str	w1, [x0, w11, uxtw #2]
  42099c:	ldr	w12, [x0, #24]
  4209a0:	str	w11, [x0, #20]
  4209a4:	cmp	w11, w12
  4209a8:	b.ne	4209b8 <_obstack_memory_used@@Base+0xb984>  // b.any
  4209ac:	add	w9, w10, w9
  4209b0:	and	w9, w9, #0x3
  4209b4:	str	w9, [x0, #24]
  4209b8:	strb	wzr, [x0, #28]
  4209bc:	mov	w0, w8
  4209c0:	ret
  4209c4:	stp	x29, x30, [sp, #-16]!
  4209c8:	ldrb	w8, [x0, #28]
  4209cc:	mov	x29, sp
  4209d0:	cbnz	w8, 420a10 <_obstack_memory_used@@Base+0xb9dc>
  4209d4:	ldp	w10, w9, [x0, #16]
  4209d8:	ldr	w8, [x0, x9, lsl #2]
  4209dc:	str	w10, [x0, x9, lsl #2]
  4209e0:	ldp	w9, w10, [x0, #20]
  4209e4:	cmp	w9, w10
  4209e8:	b.ne	4209f8 <_obstack_memory_used@@Base+0xb9c4>  // b.any
  4209ec:	mov	w9, #0x1                   	// #1
  4209f0:	strb	w9, [x0, #28]
  4209f4:	b	420a04 <_obstack_memory_used@@Base+0xb9d0>
  4209f8:	sub	w9, w9, #0x1
  4209fc:	and	w9, w9, #0x3
  420a00:	str	w9, [x0, #20]
  420a04:	mov	w0, w8
  420a08:	ldp	x29, x30, [sp], #16
  420a0c:	ret
  420a10:	bl	4026c0 <abort@plt>
  420a14:	stp	x29, x30, [sp, #-16]!
  420a18:	mov	w0, #0xe                   	// #14
  420a1c:	mov	x29, sp
  420a20:	bl	4024a0 <nl_langinfo@plt>
  420a24:	adrp	x8, 422000 <_obstack_memory_used@@Base+0xcfcc>
  420a28:	add	x8, x8, #0x7ad
  420a2c:	cmp	x0, #0x0
  420a30:	csel	x8, x8, x0, eq  // eq = none
  420a34:	ldrb	w9, [x8]
  420a38:	adrp	x10, 423000 <_obstack_memory_used@@Base+0xdfcc>
  420a3c:	add	x10, x10, #0xd75
  420a40:	cmp	w9, #0x0
  420a44:	csel	x0, x10, x8, eq  // eq = none
  420a48:	ldp	x29, x30, [sp], #16
  420a4c:	ret
  420a50:	stp	x29, x30, [sp, #-32]!
  420a54:	str	x19, [sp, #16]
  420a58:	mov	x29, sp
  420a5c:	mov	w19, w0
  420a60:	bl	402500 <wcwidth@plt>
  420a64:	tbz	w0, #31, 420a78 <_obstack_memory_used@@Base+0xba44>
  420a68:	mov	w0, w19
  420a6c:	bl	402410 <iswcntrl@plt>
  420a70:	cmp	w0, #0x0
  420a74:	cset	w0, eq  // eq = none
  420a78:	ldr	x19, [sp, #16]
  420a7c:	ldp	x29, x30, [sp], #32
  420a80:	ret
  420a84:	stp	x29, x30, [sp, #-48]!
  420a88:	str	x21, [sp, #16]
  420a8c:	stp	x20, x19, [sp, #32]
  420a90:	mov	x8, x1
  420a94:	mov	x19, x1
  420a98:	ldr	x1, [x8], #24
  420a9c:	mov	x20, x0
  420aa0:	mov	x29, sp
  420aa4:	cmp	x1, x8
  420aa8:	b.ne	420ac0 <_obstack_memory_used@@Base+0xba8c>  // b.any
  420aac:	ldr	x2, [x19, #8]
  420ab0:	add	x21, x20, #0x18
  420ab4:	mov	x0, x21
  420ab8:	bl	402320 <memcpy@plt>
  420abc:	mov	x1, x21
  420ac0:	str	x1, [x20]
  420ac4:	ldr	x8, [x19, #8]
  420ac8:	str	x8, [x20, #8]
  420acc:	ldrb	w8, [x19, #16]
  420ad0:	strb	w8, [x20, #16]
  420ad4:	cbz	w8, 420ae0 <_obstack_memory_used@@Base+0xbaac>
  420ad8:	ldr	w8, [x19, #20]
  420adc:	str	w8, [x20, #20]
  420ae0:	ldp	x20, x19, [sp, #32]
  420ae4:	ldr	x21, [sp, #16]
  420ae8:	ldp	x29, x30, [sp], #48
  420aec:	ret
  420af0:	lsr	w8, w0, #3
  420af4:	adrp	x9, 423000 <_obstack_memory_used@@Base+0xdfcc>
  420af8:	and	x8, x8, #0x1c
  420afc:	add	x9, x9, #0xd7c
  420b00:	ldr	w8, [x9, x8]
  420b04:	lsr	w8, w8, w0
  420b08:	and	w0, w8, #0x1
  420b0c:	ret
  420b10:	stp	x29, x30, [sp, #-48]!
  420b14:	mov	w8, #0x4900                	// #18688
  420b18:	movk	w8, #0x8, lsl #16
  420b1c:	orr	w2, w2, w8
  420b20:	str	x21, [sp, #16]
  420b24:	stp	x20, x19, [sp, #32]
  420b28:	mov	x29, sp
  420b2c:	mov	x19, x3
  420b30:	bl	410acc <wcrtomb@plt+0xe10c>
  420b34:	tbnz	w0, #31, 420b4c <_obstack_memory_used@@Base+0xbb18>
  420b38:	mov	w20, w0
  420b3c:	bl	402690 <fdopendir@plt>
  420b40:	cbz	x0, 420b54 <_obstack_memory_used@@Base+0xbb20>
  420b44:	str	w20, [x19]
  420b48:	b	420b70 <_obstack_memory_used@@Base+0xbb3c>
  420b4c:	mov	x0, xzr
  420b50:	b	420b70 <_obstack_memory_used@@Base+0xbb3c>
  420b54:	bl	402930 <__errno_location@plt>
  420b58:	ldr	w21, [x0]
  420b5c:	mov	x19, x0
  420b60:	mov	w0, w20
  420b64:	bl	402650 <close@plt>
  420b68:	mov	x0, xzr
  420b6c:	str	w21, [x19]
  420b70:	ldp	x20, x19, [sp, #32]
  420b74:	ldr	x21, [sp, #16]
  420b78:	ldp	x29, x30, [sp], #48
  420b7c:	ret
  420b80:	stp	x29, x30, [sp, #-48]!
  420b84:	stp	x20, x19, [sp, #32]
  420b88:	mov	x19, x1
  420b8c:	mov	x1, xzr
  420b90:	str	x21, [sp, #16]
  420b94:	mov	x29, sp
  420b98:	mov	x20, x2
  420b9c:	bl	4029a0 <setlocale@plt>
  420ba0:	cbz	x0, 420bcc <_obstack_memory_used@@Base+0xbb98>
  420ba4:	mov	x21, x0
  420ba8:	bl	402380 <strlen@plt>
  420bac:	cmp	x0, x20
  420bb0:	b.cs	420bdc <_obstack_memory_used@@Base+0xbba8>  // b.hs, b.nlast
  420bb4:	add	x2, x0, #0x1
  420bb8:	mov	x0, x19
  420bbc:	mov	x1, x21
  420bc0:	bl	402320 <memcpy@plt>
  420bc4:	mov	w0, wzr
  420bc8:	b	420bfc <_obstack_memory_used@@Base+0xbbc8>
  420bcc:	cbz	x20, 420bd4 <_obstack_memory_used@@Base+0xbba0>
  420bd0:	strb	wzr, [x19]
  420bd4:	mov	w0, #0x16                  	// #22
  420bd8:	b	420bfc <_obstack_memory_used@@Base+0xbbc8>
  420bdc:	cbz	x20, 420bf8 <_obstack_memory_used@@Base+0xbbc4>
  420be0:	sub	x20, x20, #0x1
  420be4:	mov	x0, x19
  420be8:	mov	x1, x21
  420bec:	mov	x2, x20
  420bf0:	bl	402320 <memcpy@plt>
  420bf4:	strb	wzr, [x19, x20]
  420bf8:	mov	w0, #0x22                  	// #34
  420bfc:	ldp	x20, x19, [sp, #32]
  420c00:	ldr	x21, [sp, #16]
  420c04:	ldp	x29, x30, [sp], #48
  420c08:	ret
  420c0c:	mov	x1, xzr
  420c10:	b	4029a0 <setlocale@plt>
  420c14:	mov	w2, #0x3                   	// #3
  420c18:	mov	w1, wzr
  420c1c:	b	420c20 <_obstack_memory_used@@Base+0xbbec>
  420c20:	sub	sp, sp, #0x100
  420c24:	stp	x29, x30, [sp, #208]
  420c28:	add	x29, sp, #0xd0
  420c2c:	mov	x8, #0xffffffffffffffd0    	// #-48
  420c30:	mov	x9, sp
  420c34:	sub	x10, x29, #0x50
  420c38:	stp	x20, x19, [sp, #240]
  420c3c:	mov	w19, w0
  420c40:	movk	x8, #0xff80, lsl #32
  420c44:	add	x11, x29, #0x30
  420c48:	cmp	w1, #0xb
  420c4c:	add	x9, x9, #0x80
  420c50:	add	x10, x10, #0x30
  420c54:	stp	x22, x21, [sp, #224]
  420c58:	stp	x2, x3, [x29, #-80]
  420c5c:	stp	x4, x5, [x29, #-64]
  420c60:	stp	x6, x7, [x29, #-48]
  420c64:	stp	q1, q2, [sp, #16]
  420c68:	stp	q3, q4, [sp, #48]
  420c6c:	str	q0, [sp]
  420c70:	stp	q5, q6, [sp, #80]
  420c74:	str	q7, [sp, #112]
  420c78:	stp	x9, x8, [x29, #-16]
  420c7c:	stp	x11, x10, [x29, #-32]
  420c80:	b.hi	420ccc <_obstack_memory_used@@Base+0xbc98>  // b.pmore
  420c84:	mov	w8, #0x1                   	// #1
  420c88:	lsl	w8, w8, w1
  420c8c:	mov	w9, #0x514                 	// #1300
  420c90:	tst	w8, w9
  420c94:	b.ne	420d04 <_obstack_memory_used@@Base+0xbcd0>  // b.any
  420c98:	mov	w9, #0xa0a                 	// #2570
  420c9c:	tst	w8, w9
  420ca0:	b.ne	420cf8 <_obstack_memory_used@@Base+0xbcc4>  // b.any
  420ca4:	cbnz	w1, 420ccc <_obstack_memory_used@@Base+0xbc98>
  420ca8:	ldursw	x8, [x29, #-8]
  420cac:	tbz	w8, #31, 420dac <_obstack_memory_used@@Base+0xbd78>
  420cb0:	add	w9, w8, #0x8
  420cb4:	cmn	w8, #0x8
  420cb8:	stur	w9, [x29, #-8]
  420cbc:	b.gt	420dac <_obstack_memory_used@@Base+0xbd78>
  420cc0:	ldur	x9, [x29, #-24]
  420cc4:	add	x8, x9, x8
  420cc8:	b	420db8 <_obstack_memory_used@@Base+0xbd84>
  420ccc:	sub	w8, w1, #0x400
  420cd0:	cmp	w8, #0xa
  420cd4:	b.hi	420d88 <_obstack_memory_used@@Base+0xbd54>  // b.pmore
  420cd8:	mov	w9, #0x1                   	// #1
  420cdc:	lsl	w9, w9, w8
  420ce0:	mov	w10, #0x285                 	// #645
  420ce4:	tst	w9, w10
  420ce8:	b.ne	420d04 <_obstack_memory_used@@Base+0xbcd0>  // b.any
  420cec:	mov	w10, #0x502                 	// #1282
  420cf0:	tst	w9, w10
  420cf4:	b.eq	420d5c <_obstack_memory_used@@Base+0xbd28>  // b.none
  420cf8:	mov	w0, w19
  420cfc:	bl	4027d0 <fcntl@plt>
  420d00:	b	420d40 <_obstack_memory_used@@Base+0xbd0c>
  420d04:	ldursw	x8, [x29, #-8]
  420d08:	tbz	w8, #31, 420d28 <_obstack_memory_used@@Base+0xbcf4>
  420d0c:	add	w9, w8, #0x8
  420d10:	cmn	w8, #0x8
  420d14:	stur	w9, [x29, #-8]
  420d18:	b.gt	420d28 <_obstack_memory_used@@Base+0xbcf4>
  420d1c:	ldur	x9, [x29, #-24]
  420d20:	add	x8, x9, x8
  420d24:	b	420d34 <_obstack_memory_used@@Base+0xbd00>
  420d28:	ldur	x8, [x29, #-32]
  420d2c:	add	x9, x8, #0x8
  420d30:	stur	x9, [x29, #-32]
  420d34:	ldr	w2, [x8]
  420d38:	mov	w0, w19
  420d3c:	bl	4027d0 <fcntl@plt>
  420d40:	mov	w20, w0
  420d44:	mov	w0, w20
  420d48:	ldp	x20, x19, [sp, #240]
  420d4c:	ldp	x22, x21, [sp, #224]
  420d50:	ldp	x29, x30, [sp, #208]
  420d54:	add	sp, sp, #0x100
  420d58:	ret
  420d5c:	cmp	w8, #0x6
  420d60:	b.ne	420d88 <_obstack_memory_used@@Base+0xbd54>  // b.any
  420d64:	ldursw	x8, [x29, #-8]
  420d68:	tbz	w8, #31, 420dc8 <_obstack_memory_used@@Base+0xbd94>
  420d6c:	add	w9, w8, #0x8
  420d70:	cmn	w8, #0x8
  420d74:	stur	w9, [x29, #-8]
  420d78:	b.gt	420dc8 <_obstack_memory_used@@Base+0xbd94>
  420d7c:	ldur	x9, [x29, #-24]
  420d80:	add	x8, x9, x8
  420d84:	b	420dd4 <_obstack_memory_used@@Base+0xbda0>
  420d88:	ldursw	x8, [x29, #-8]
  420d8c:	tbz	w8, #31, 420e34 <_obstack_memory_used@@Base+0xbe00>
  420d90:	add	w9, w8, #0x8
  420d94:	cmn	w8, #0x8
  420d98:	stur	w9, [x29, #-8]
  420d9c:	b.gt	420e34 <_obstack_memory_used@@Base+0xbe00>
  420da0:	ldur	x9, [x29, #-24]
  420da4:	add	x8, x9, x8
  420da8:	b	420e40 <_obstack_memory_used@@Base+0xbe0c>
  420dac:	ldur	x8, [x29, #-32]
  420db0:	add	x9, x8, #0x8
  420db4:	stur	x9, [x29, #-32]
  420db8:	ldr	w2, [x8]
  420dbc:	mov	w0, w19
  420dc0:	mov	w1, wzr
  420dc4:	b	420d3c <_obstack_memory_used@@Base+0xbd08>
  420dc8:	ldur	x8, [x29, #-32]
  420dcc:	add	x9, x8, #0x8
  420dd0:	stur	x9, [x29, #-32]
  420dd4:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0x3b88>
  420dd8:	ldr	w9, [x22, #2256]
  420ddc:	ldr	w21, [x8]
  420de0:	tbnz	w9, #31, 420e5c <_obstack_memory_used@@Base+0xbe28>
  420de4:	mov	w1, #0x406                 	// #1030
  420de8:	mov	w0, w19
  420dec:	mov	w2, w21
  420df0:	bl	4027d0 <fcntl@plt>
  420df4:	mov	w20, w0
  420df8:	tbz	w0, #31, 420e50 <_obstack_memory_used@@Base+0xbe1c>
  420dfc:	bl	402930 <__errno_location@plt>
  420e00:	ldr	w8, [x0]
  420e04:	cmp	w8, #0x16
  420e08:	b.ne	420e50 <_obstack_memory_used@@Base+0xbe1c>  // b.any
  420e0c:	mov	w0, w19
  420e10:	mov	w1, wzr
  420e14:	mov	w2, w21
  420e18:	bl	4027d0 <fcntl@plt>
  420e1c:	mov	w20, w0
  420e20:	tbnz	w0, #31, 420d44 <_obstack_memory_used@@Base+0xbd10>
  420e24:	mov	w8, #0xffffffff            	// #-1
  420e28:	str	w8, [x22, #2256]
  420e2c:	mov	w8, #0x1                   	// #1
  420e30:	b	420e7c <_obstack_memory_used@@Base+0xbe48>
  420e34:	ldur	x8, [x29, #-32]
  420e38:	add	x9, x8, #0x8
  420e3c:	stur	x9, [x29, #-32]
  420e40:	ldr	x2, [x8]
  420e44:	mov	w0, w19
  420e48:	bl	4027d0 <fcntl@plt>
  420e4c:	b	420d40 <_obstack_memory_used@@Base+0xbd0c>
  420e50:	mov	w8, #0x1                   	// #1
  420e54:	str	w8, [x22, #2256]
  420e58:	b	420d44 <_obstack_memory_used@@Base+0xbd10>
  420e5c:	mov	w0, w19
  420e60:	mov	w1, wzr
  420e64:	mov	w2, w21
  420e68:	bl	4027d0 <fcntl@plt>
  420e6c:	ldr	w8, [x22, #2256]
  420e70:	mov	w20, w0
  420e74:	cmn	w8, #0x1
  420e78:	cset	w8, eq  // eq = none
  420e7c:	cbz	w8, 420d44 <_obstack_memory_used@@Base+0xbd10>
  420e80:	tbnz	w20, #31, 420d44 <_obstack_memory_used@@Base+0xbd10>
  420e84:	mov	w1, #0x1                   	// #1
  420e88:	mov	w0, w20
  420e8c:	bl	4027d0 <fcntl@plt>
  420e90:	tbnz	w0, #31, 420eac <_obstack_memory_used@@Base+0xbe78>
  420e94:	orr	w2, w0, #0x1
  420e98:	mov	w1, #0x2                   	// #2
  420e9c:	mov	w0, w20
  420ea0:	bl	4027d0 <fcntl@plt>
  420ea4:	cmn	w0, #0x1
  420ea8:	b.ne	420d44 <_obstack_memory_used@@Base+0xbd10>  // b.any
  420eac:	bl	402930 <__errno_location@plt>
  420eb0:	ldr	w21, [x0]
  420eb4:	mov	x19, x0
  420eb8:	mov	w0, w20
  420ebc:	bl	402650 <close@plt>
  420ec0:	str	w21, [x19]
  420ec4:	mov	w20, #0xffffffff            	// #-1
  420ec8:	b	420d44 <_obstack_memory_used@@Base+0xbd10>
  420ecc:	nop
  420ed0:	stp	x29, x30, [sp, #-64]!
  420ed4:	mov	x29, sp
  420ed8:	stp	x19, x20, [sp, #16]
  420edc:	adrp	x20, 434000 <_obstack_memory_used@@Base+0x1efcc>
  420ee0:	add	x20, x20, #0xdf0
  420ee4:	stp	x21, x22, [sp, #32]
  420ee8:	adrp	x21, 434000 <_obstack_memory_used@@Base+0x1efcc>
  420eec:	add	x21, x21, #0xde8
  420ef0:	sub	x20, x20, x21
  420ef4:	mov	w22, w0
  420ef8:	stp	x23, x24, [sp, #48]
  420efc:	mov	x23, x1
  420f00:	mov	x24, x2
  420f04:	bl	4022d0 <mbrtowc@plt-0x40>
  420f08:	cmp	xzr, x20, asr #3
  420f0c:	b.eq	420f38 <_obstack_memory_used@@Base+0xbf04>  // b.none
  420f10:	asr	x20, x20, #3
  420f14:	mov	x19, #0x0                   	// #0
  420f18:	ldr	x3, [x21, x19, lsl #3]
  420f1c:	mov	x2, x24
  420f20:	add	x19, x19, #0x1
  420f24:	mov	x1, x23
  420f28:	mov	w0, w22
  420f2c:	blr	x3
  420f30:	cmp	x20, x19
  420f34:	b.ne	420f18 <_obstack_memory_used@@Base+0xbee4>  // b.any
  420f38:	ldp	x19, x20, [sp, #16]
  420f3c:	ldp	x21, x22, [sp, #32]
  420f40:	ldp	x23, x24, [sp, #48]
  420f44:	ldp	x29, x30, [sp], #64
  420f48:	ret
  420f4c:	nop
  420f50:	ret
  420f54:	nop
  420f58:	adrp	x2, 435000 <_obstack_memory_used@@Base+0x1ffcc>
  420f5c:	mov	x1, #0x0                   	// #0
  420f60:	ldr	x2, [x2, #872]
  420f64:	b	402400 <__cxa_atexit@plt>
  420f68:	mov	x2, x1
  420f6c:	mov	x1, x0
  420f70:	mov	w0, #0x0                   	// #0
  420f74:	b	402960 <__xstat@plt>
  420f78:	mov	x2, x1
  420f7c:	mov	w1, w0
  420f80:	mov	w0, #0x0                   	// #0
  420f84:	b	402870 <__fxstat@plt>
  420f88:	mov	x2, x1
  420f8c:	mov	x1, x0
  420f90:	mov	w0, #0x0                   	// #0
  420f94:	b	402800 <__lxstat@plt>
  420f98:	mov	x4, x1
  420f9c:	mov	x5, x2
  420fa0:	mov	w1, w0
  420fa4:	mov	x2, x4
  420fa8:	mov	w0, #0x0                   	// #0
  420fac:	mov	w4, w3
  420fb0:	mov	x3, x5
  420fb4:	b	4029b0 <__fxstatat@plt>

Disassembly of section .fini:

0000000000420fb8 <.fini>:
  420fb8:	stp	x29, x30, [sp, #-16]!
  420fbc:	mov	x29, sp
  420fc0:	ldp	x29, x30, [sp], #16
  420fc4:	ret
