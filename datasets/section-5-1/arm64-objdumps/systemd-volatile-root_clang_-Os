
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-volatile-root_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400fb0 <_init>:
  400fb0:	stp	x29, x30, [sp, #-16]!
  400fb4:	mov	x29, sp
  400fb8:	bl	401268 <call_weak_fn>
  400fbc:	ldp	x29, x30, [sp], #16
  400fc0:	ret

Disassembly of section .plt:

0000000000400fc8 <__libc_start_main@plt-0x20>:
  400fc8:	stp	x16, x30, [sp, #-16]!
  400fcc:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  400fd0:	ldr	x17, [x16, #3808]
  400fd4:	add	x16, x16, #0xee0
  400fd8:	br	x17
  400fdc:	nop
  400fe0:	nop
  400fe4:	nop

0000000000400fe8 <__libc_start_main@plt>:
  400fe8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  400fec:	ldr	x17, [x16, #3816]
  400ff0:	add	x16, x16, #0xee8
  400ff4:	br	x17

0000000000400ff8 <abort@plt>:
  400ff8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  400ffc:	ldr	x17, [x16, #3824]
  401000:	add	x16, x16, #0xef0
  401004:	br	x17

0000000000401008 <__gmon_start__@plt>:
  401008:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40100c:	ldr	x17, [x16, #3832]
  401010:	add	x16, x16, #0xef8
  401014:	br	x17

0000000000401018 <log_setup_service@plt>:
  401018:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40101c:	ldr	x17, [x16, #3840]
  401020:	add	x16, x16, #0xf00
  401024:	br	x17

0000000000401028 <log_get_max_level_realm@plt>:
  401028:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40102c:	ldr	x17, [x16, #3848]
  401030:	add	x16, x16, #0xf08
  401034:	br	x17

0000000000401038 <query_volatile_mode@plt>:
  401038:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40103c:	ldr	x17, [x16, #3856]
  401040:	add	x16, x16, #0xf10
  401044:	br	x17

0000000000401048 <volatile_mode_from_string@plt>:
  401048:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40104c:	ldr	x17, [x16, #3864]
  401050:	add	x16, x16, #0xf18
  401054:	br	x17

0000000000401058 <path_is_mount_point@plt>:
  401058:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40105c:	ldr	x17, [x16, #3872]
  401060:	add	x16, x16, #0xf20
  401064:	br	x17

0000000000401068 <path_is_temporary_fs@plt>:
  401068:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40106c:	ldr	x17, [x16, #3880]
  401070:	add	x16, x16, #0xf28
  401074:	br	x17

0000000000401078 <log_internal_realm@plt>:
  401078:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40107c:	ldr	x17, [x16, #3888]
  401080:	add	x16, x16, #0xf30
  401084:	br	x17

0000000000401088 <path_is_absolute@plt>:
  401088:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40108c:	ldr	x17, [x16, #3896]
  401090:	add	x16, x16, #0xf38
  401094:	br	x17

0000000000401098 <path_equal@plt>:
  401098:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40109c:	ldr	x17, [x16, #3904]
  4010a0:	add	x16, x16, #0xf40
  4010a4:	br	x17

00000000004010a8 <get_block_device_harder@plt>:
  4010a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010ac:	ldr	x17, [x16, #3912]
  4010b0:	add	x16, x16, #0xf48
  4010b4:	br	x17

00000000004010b8 <device_path_make_major_minor@plt>:
  4010b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010bc:	ldr	x17, [x16, #3920]
  4010c0:	add	x16, x16, #0xf50
  4010c4:	br	x17

00000000004010c8 <symlink@plt>:
  4010c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010cc:	ldr	x17, [x16, #3928]
  4010d0:	add	x16, x16, #0xf58
  4010d4:	br	x17

00000000004010d8 <__errno_location@plt>:
  4010d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010dc:	ldr	x17, [x16, #3936]
  4010e0:	add	x16, x16, #0xf60
  4010e4:	br	x17

00000000004010e8 <ask_password_agent_close@plt>:
  4010e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010ec:	ldr	x17, [x16, #3944]
  4010f0:	add	x16, x16, #0xf68
  4010f4:	br	x17

00000000004010f8 <polkit_agent_close@plt>:
  4010f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4010fc:	ldr	x17, [x16, #3952]
  401100:	add	x16, x16, #0xf70
  401104:	br	x17

0000000000401108 <pager_close@plt>:
  401108:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40110c:	ldr	x17, [x16, #3960]
  401110:	add	x16, x16, #0xf78
  401114:	br	x17

0000000000401118 <mac_selinux_finish@plt>:
  401118:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40111c:	ldr	x17, [x16, #3968]
  401120:	add	x16, x16, #0xf80
  401124:	br	x17

0000000000401128 <free@plt>:
  401128:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40112c:	ldr	x17, [x16, #3976]
  401130:	add	x16, x16, #0xf88
  401134:	br	x17

0000000000401138 <chase_symlinks@plt>:
  401138:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40113c:	ldr	x17, [x16, #3984]
  401140:	add	x16, x16, #0xf90
  401144:	br	x17

0000000000401148 <mkdir_p@plt>:
  401148:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40114c:	ldr	x17, [x16, #3992]
  401150:	add	x16, x16, #0xf98
  401154:	br	x17

0000000000401158 <mount_verbose@plt>:
  401158:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40115c:	ldr	x17, [x16, #4000]
  401160:	add	x16, x16, #0xfa0
  401164:	br	x17

0000000000401168 <mkdir@plt>:
  401168:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40116c:	ldr	x17, [x16, #4008]
  401170:	add	x16, x16, #0xfa8
  401174:	br	x17

0000000000401178 <bind_remount_recursive@plt>:
  401178:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40117c:	ldr	x17, [x16, #4016]
  401180:	add	x16, x16, #0xfb0
  401184:	br	x17

0000000000401188 <umount_recursive@plt>:
  401188:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40118c:	ldr	x17, [x16, #4024]
  401190:	add	x16, x16, #0xfb8
  401194:	br	x17

0000000000401198 <mount@plt>:
  401198:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40119c:	ldr	x17, [x16, #4032]
  4011a0:	add	x16, x16, #0xfc0
  4011a4:	br	x17

00000000004011a8 <rmdir@plt>:
  4011a8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011ac:	ldr	x17, [x16, #4040]
  4011b0:	add	x16, x16, #0xfc8
  4011b4:	br	x17

00000000004011b8 <log_assert_failed_realm@plt>:
  4011b8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011bc:	ldr	x17, [x16, #4048]
  4011c0:	add	x16, x16, #0xfd0
  4011c4:	br	x17

00000000004011c8 <shell_escape@plt>:
  4011c8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011cc:	ldr	x17, [x16, #4056]
  4011d0:	add	x16, x16, #0xfd8
  4011d4:	br	x17

00000000004011d8 <strlen@plt>:
  4011d8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011dc:	ldr	x17, [x16, #4064]
  4011e0:	add	x16, x16, #0xfe0
  4011e4:	br	x17

00000000004011e8 <stpcpy@plt>:
  4011e8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011ec:	ldr	x17, [x16, #4072]
  4011f0:	add	x16, x16, #0xfe8
  4011f4:	br	x17

00000000004011f8 <log_oom_internal@plt>:
  4011f8:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  4011fc:	ldr	x17, [x16, #4080]
  401200:	add	x16, x16, #0xff0
  401204:	br	x17

0000000000401208 <umount_verbose@plt>:
  401208:	adrp	x16, 41f000 <__FRAME_END__+0x1ca40>
  40120c:	ldr	x17, [x16, #4088]
  401210:	add	x16, x16, #0xff8
  401214:	br	x17

Disassembly of section .text:

0000000000401218 <_start>:
  401218:	mov	x29, #0x0                   	// #0
  40121c:	mov	x30, #0x0                   	// #0
  401220:	mov	x5, x0
  401224:	ldr	x1, [sp]
  401228:	add	x2, sp, #0x8
  40122c:	mov	x6, sp
  401230:	movz	x0, #0x0, lsl #48
  401234:	movk	x0, #0x0, lsl #32
  401238:	movk	x0, #0x40, lsl #16
  40123c:	movk	x0, #0x1344
  401240:	movz	x3, #0x0, lsl #48
  401244:	movk	x3, #0x0, lsl #32
  401248:	movk	x3, #0x40, lsl #16
  40124c:	movk	x3, #0x1e68
  401250:	movz	x4, #0x0, lsl #48
  401254:	movk	x4, #0x0, lsl #32
  401258:	movk	x4, #0x40, lsl #16
  40125c:	movk	x4, #0x1ee8
  401260:	bl	400fe8 <__libc_start_main@plt>
  401264:	bl	400ff8 <abort@plt>

0000000000401268 <call_weak_fn>:
  401268:	adrp	x0, 41f000 <__FRAME_END__+0x1ca40>
  40126c:	ldr	x0, [x0, #3768]
  401270:	cbz	x0, 401278 <call_weak_fn+0x10>
  401274:	b	401008 <__gmon_start__@plt>
  401278:	ret

000000000040127c <deregister_tm_clones>:
  40127c:	adrp	x0, 420000 <completed.8445>
  401280:	add	x1, x0, #0x0
  401284:	adrp	x0, 420000 <completed.8445>
  401288:	add	x0, x0, #0x0
  40128c:	cmp	x1, x0
  401290:	b.eq	4012bc <deregister_tm_clones+0x40>  // b.none
  401294:	sub	sp, sp, #0x10
  401298:	adrp	x1, 401000 <abort@plt+0x8>
  40129c:	ldr	x1, [x1, #3840]
  4012a0:	str	x1, [sp, #8]
  4012a4:	cbz	x1, 4012b4 <deregister_tm_clones+0x38>
  4012a8:	mov	x16, x1
  4012ac:	add	sp, sp, #0x10
  4012b0:	br	x16
  4012b4:	add	sp, sp, #0x10
  4012b8:	ret
  4012bc:	ret

00000000004012c0 <register_tm_clones>:
  4012c0:	adrp	x0, 420000 <completed.8445>
  4012c4:	add	x1, x0, #0x0
  4012c8:	adrp	x0, 420000 <completed.8445>
  4012cc:	add	x0, x0, #0x0
  4012d0:	sub	x1, x1, x0
  4012d4:	mov	x2, #0x2                   	// #2
  4012d8:	asr	x1, x1, #3
  4012dc:	sdiv	x1, x1, x2
  4012e0:	cbz	x1, 40130c <register_tm_clones+0x4c>
  4012e4:	sub	sp, sp, #0x10
  4012e8:	adrp	x2, 401000 <abort@plt+0x8>
  4012ec:	ldr	x2, [x2, #3848]
  4012f0:	str	x2, [sp, #8]
  4012f4:	cbz	x2, 401304 <register_tm_clones+0x44>
  4012f8:	mov	x16, x2
  4012fc:	add	sp, sp, #0x10
  401300:	br	x16
  401304:	add	sp, sp, #0x10
  401308:	ret
  40130c:	ret

0000000000401310 <__do_global_dtors_aux>:
  401310:	stp	x29, x30, [sp, #-32]!
  401314:	mov	x29, sp
  401318:	str	x19, [sp, #16]
  40131c:	adrp	x19, 420000 <completed.8445>
  401320:	ldrb	w0, [x19]
  401324:	cbnz	w0, 401334 <__do_global_dtors_aux+0x24>
  401328:	bl	40127c <deregister_tm_clones>
  40132c:	mov	w0, #0x1                   	// #1
  401330:	strb	w0, [x19]
  401334:	ldr	x19, [sp, #16]
  401338:	ldp	x29, x30, [sp], #32
  40133c:	ret

0000000000401340 <frame_dummy>:
  401340:	b	4012c0 <register_tm_clones>

0000000000401344 <main>:
  401344:	sub	sp, sp, #0x40
  401348:	stp	x29, x30, [sp, #16]
  40134c:	add	x29, sp, #0x10
  401350:	adrp	x8, 420000 <completed.8445>
  401354:	adrp	x9, 420000 <completed.8445>
  401358:	mov	w10, #0xffffffff            	// #-1
  40135c:	str	x21, [sp, #32]
  401360:	stp	x20, x19, [sp, #48]
  401364:	mov	x19, x1
  401368:	mov	w20, w0
  40136c:	str	w0, [x8, #8]
  401370:	str	x1, [x9, #16]
  401374:	stur	w10, [x29, #-4]
  401378:	bl	401018 <log_setup_service@plt>
  40137c:	cmp	w20, #0x4
  401380:	b.lt	4013c0 <main+0x7c>  // b.tstop
  401384:	mov	w0, wzr
  401388:	bl	401028 <log_get_max_level_realm@plt>
  40138c:	cmp	w0, #0x3
  401390:	b.lt	401664 <main+0x320>  // b.tstop
  401394:	adrp	x2, 401000 <abort@plt+0x8>
  401398:	adrp	x4, 401000 <abort@plt+0x8>
  40139c:	adrp	x5, 401000 <abort@plt+0x8>
  4013a0:	mov	w1, #0x16                  	// #22
  4013a4:	add	x2, x2, #0xf13
  4013a8:	add	x4, x4, #0xf35
  4013ac:	add	x5, x5, #0xf39
  4013b0:	mov	w0, #0x3                   	// #3
  4013b4:	movk	w1, #0x4000, lsl #16
  4013b8:	mov	w3, #0x7e                  	// #126
  4013bc:	b	40161c <main+0x2d8>
  4013c0:	sub	x0, x29, #0x4
  4013c4:	bl	401038 <query_volatile_mode@plt>
  4013c8:	mov	w21, w0
  4013cc:	tbnz	w0, #31, 401484 <main+0x140>
  4013d0:	cmp	w20, #0x2
  4013d4:	b.lt	4013ec <main+0xa8>  // b.tstop
  4013d8:	cbnz	w21, 4013ec <main+0xa8>
  4013dc:	ldr	x0, [x19, #8]
  4013e0:	bl	401048 <volatile_mode_from_string@plt>
  4013e4:	stur	w0, [x29, #-4]
  4013e8:	tbnz	w0, #31, 401570 <main+0x22c>
  4013ec:	cmp	w20, #0x2
  4013f0:	b.gt	4014bc <main+0x178>
  4013f4:	adrp	x19, 401000 <abort@plt+0x8>
  4013f8:	add	x19, x19, #0xfc7
  4013fc:	ldur	w8, [x29, #-4]
  401400:	orr	w8, w8, #0x2
  401404:	cmp	w8, #0x3
  401408:	b.ne	40147c <main+0x138>  // b.any
  40140c:	mov	w2, #0x400                 	// #1024
  401410:	mov	x0, x19
  401414:	mov	x1, xzr
  401418:	bl	401058 <path_is_mount_point@plt>
  40141c:	mov	w20, w0
  401420:	tbnz	w0, #31, 4015b0 <main+0x26c>
  401424:	cbz	w20, 401628 <main+0x2e4>
  401428:	mov	x0, x19
  40142c:	bl	401068 <path_is_temporary_fs@plt>
  401430:	mov	w20, w0
  401434:	tbnz	w0, #31, 40166c <main+0x328>
  401438:	cbz	w20, 4016ac <main+0x368>
  40143c:	mov	w0, wzr
  401440:	bl	401028 <log_get_max_level_realm@plt>
  401444:	cmp	w0, #0x6
  401448:	mov	w20, wzr
  40144c:	b.lt	401774 <main+0x430>  // b.tstop
  401450:	adrp	x2, 401000 <abort@plt+0x8>
  401454:	adrp	x4, 401000 <abort@plt+0x8>
  401458:	adrp	x5, 402000 <_fini+0x114>
  40145c:	add	x2, x2, #0xf13
  401460:	add	x4, x4, #0xf35
  401464:	add	x5, x5, #0xd1
  401468:	mov	w0, #0x6                   	// #6
  40146c:	mov	w3, #0xa7                  	// #167
  401470:	mov	w1, wzr
  401474:	mov	x6, x19
  401478:	bl	401078 <log_internal_realm@plt>
  40147c:	mov	w20, wzr
  401480:	b	401774 <main+0x430>
  401484:	mov	w0, wzr
  401488:	bl	401028 <log_get_max_level_realm@plt>
  40148c:	cmp	w0, #0x3
  401490:	b.lt	401528 <main+0x1e4>  // b.tstop
  401494:	adrp	x2, 401000 <abort@plt+0x8>
  401498:	adrp	x4, 401000 <abort@plt+0x8>
  40149c:	adrp	x5, 401000 <abort@plt+0x8>
  4014a0:	add	x2, x2, #0xf13
  4014a4:	add	x4, x4, #0xf35
  4014a8:	add	x5, x5, #0xf6a
  4014ac:	mov	w0, #0x3                   	// #3
  4014b0:	mov	w3, #0x82                  	// #130
  4014b4:	mov	w1, w21
  4014b8:	b	40161c <main+0x2d8>
  4014bc:	ldr	x19, [x19, #16]
  4014c0:	cbz	x19, 401534 <main+0x1f0>
  4014c4:	ldrb	w8, [x19]
  4014c8:	cbz	w8, 401534 <main+0x1f0>
  4014cc:	mov	x0, x19
  4014d0:	bl	401088 <path_is_absolute@plt>
  4014d4:	tbz	w0, #0, 4015e4 <main+0x2a0>
  4014d8:	adrp	x1, 402000 <_fini+0x114>
  4014dc:	add	x1, x1, #0x1e
  4014e0:	mov	x0, x19
  4014e4:	bl	401098 <path_equal@plt>
  4014e8:	tbz	w0, #0, 4013fc <main+0xb8>
  4014ec:	mov	w0, wzr
  4014f0:	bl	401028 <log_get_max_level_realm@plt>
  4014f4:	cmp	w0, #0x3
  4014f8:	b.lt	401664 <main+0x320>  // b.tstop
  4014fc:	adrp	x2, 401000 <abort@plt+0x8>
  401500:	adrp	x4, 401000 <abort@plt+0x8>
  401504:	adrp	x5, 402000 <_fini+0x114>
  401508:	mov	w1, #0x16                  	// #22
  40150c:	add	x2, x2, #0xf13
  401510:	add	x4, x4, #0xf35
  401514:	add	x5, x5, #0x20
  401518:	mov	w0, #0x3                   	// #3
  40151c:	movk	w1, #0x4000, lsl #16
  401520:	mov	w3, #0x97                  	// #151
  401524:	b	40161c <main+0x2d8>
  401528:	mov	w8, wzr
  40152c:	neg	w9, w21
  401530:	b	401770 <main+0x42c>
  401534:	mov	w0, wzr
  401538:	bl	401028 <log_get_max_level_realm@plt>
  40153c:	cmp	w0, #0x3
  401540:	b.lt	401664 <main+0x320>  // b.tstop
  401544:	adrp	x2, 401000 <abort@plt+0x8>
  401548:	adrp	x4, 401000 <abort@plt+0x8>
  40154c:	adrp	x5, 401000 <abort@plt+0x8>
  401550:	mov	w1, #0x16                  	// #22
  401554:	add	x2, x2, #0xf13
  401558:	add	x4, x4, #0xf35
  40155c:	add	x5, x5, #0xfd0
  401560:	mov	w0, #0x3                   	// #3
  401564:	movk	w1, #0x4000, lsl #16
  401568:	mov	w3, #0x91                  	// #145
  40156c:	b	40161c <main+0x2d8>
  401570:	mov	w0, wzr
  401574:	bl	401028 <log_get_max_level_realm@plt>
  401578:	cmp	w0, #0x3
  40157c:	b.lt	401664 <main+0x320>  // b.tstop
  401580:	ldr	x6, [x19, #8]
  401584:	adrp	x2, 401000 <abort@plt+0x8>
  401588:	adrp	x4, 401000 <abort@plt+0x8>
  40158c:	adrp	x5, 401000 <abort@plt+0x8>
  401590:	mov	w1, #0x16                  	// #22
  401594:	add	x2, x2, #0xf13
  401598:	add	x4, x4, #0xf35
  40159c:	add	x5, x5, #0xfa6
  4015a0:	mov	w0, #0x3                   	// #3
  4015a4:	movk	w1, #0x4000, lsl #16
  4015a8:	mov	w3, #0x87                  	// #135
  4015ac:	b	4016a4 <main+0x360>
  4015b0:	mov	w0, wzr
  4015b4:	bl	401028 <log_get_max_level_realm@plt>
  4015b8:	cmp	w0, #0x3
  4015bc:	b.lt	401768 <main+0x424>  // b.tstop
  4015c0:	adrp	x2, 401000 <abort@plt+0x8>
  4015c4:	adrp	x4, 401000 <abort@plt+0x8>
  4015c8:	adrp	x5, 402000 <_fini+0x114>
  4015cc:	add	x2, x2, #0xf13
  4015d0:	add	x4, x4, #0xf35
  4015d4:	add	x5, x5, #0x48
  4015d8:	mov	w0, #0x3                   	// #3
  4015dc:	mov	w3, #0x9f                  	// #159
  4015e0:	b	40169c <main+0x358>
  4015e4:	mov	w0, wzr
  4015e8:	bl	401028 <log_get_max_level_realm@plt>
  4015ec:	cmp	w0, #0x3
  4015f0:	b.lt	401664 <main+0x320>  // b.tstop
  4015f4:	adrp	x2, 401000 <abort@plt+0x8>
  4015f8:	adrp	x4, 401000 <abort@plt+0x8>
  4015fc:	adrp	x5, 401000 <abort@plt+0x8>
  401600:	mov	w1, #0x16                  	// #22
  401604:	add	x2, x2, #0xf13
  401608:	add	x4, x4, #0xf35
  40160c:	add	x5, x5, #0xff0
  401610:	mov	w0, #0x3                   	// #3
  401614:	movk	w1, #0x4000, lsl #16
  401618:	mov	w3, #0x94                  	// #148
  40161c:	bl	401078 <log_internal_realm@plt>
  401620:	mov	w20, w0
  401624:	b	401774 <main+0x430>
  401628:	mov	w0, wzr
  40162c:	bl	401028 <log_get_max_level_realm@plt>
  401630:	cmp	w0, #0x3
  401634:	b.lt	401664 <main+0x320>  // b.tstop
  401638:	adrp	x2, 401000 <abort@plt+0x8>
  40163c:	adrp	x4, 401000 <abort@plt+0x8>
  401640:	adrp	x5, 402000 <_fini+0x114>
  401644:	mov	w1, #0x16                  	// #22
  401648:	add	x2, x2, #0xf13
  40164c:	add	x4, x4, #0xf35
  401650:	add	x5, x5, #0x7b
  401654:	mov	w0, #0x3                   	// #3
  401658:	movk	w1, #0x4000, lsl #16
  40165c:	mov	w3, #0xa1                  	// #161
  401660:	b	4016a0 <main+0x35c>
  401664:	mov	w20, #0xffffffea            	// #-22
  401668:	b	401774 <main+0x430>
  40166c:	mov	w0, wzr
  401670:	bl	401028 <log_get_max_level_realm@plt>
  401674:	cmp	w0, #0x3
  401678:	b.lt	401768 <main+0x424>  // b.tstop
  40167c:	adrp	x2, 401000 <abort@plt+0x8>
  401680:	adrp	x4, 401000 <abort@plt+0x8>
  401684:	adrp	x5, 402000 <_fini+0x114>
  401688:	add	x2, x2, #0xf13
  40168c:	add	x4, x4, #0xf35
  401690:	add	x5, x5, #0x94
  401694:	mov	w0, #0x3                   	// #3
  401698:	mov	w3, #0xa5                  	// #165
  40169c:	mov	w1, w20
  4016a0:	mov	x6, x19
  4016a4:	bl	401078 <log_internal_realm@plt>
  4016a8:	b	401620 <main+0x2dc>
  4016ac:	mov	x1, sp
  4016b0:	mov	x0, x19
  4016b4:	bl	4010a8 <get_block_device_harder@plt>
  4016b8:	mov	w20, w0
  4016bc:	tbnz	w0, #31, 401734 <main+0x3f0>
  4016c0:	cbz	w20, 40183c <main+0x4f8>
  4016c4:	ldr	x1, [sp]
  4016c8:	add	x2, x29, #0x18
  4016cc:	mov	w0, #0x6000                	// #24576
  4016d0:	str	xzr, [x29, #24]
  4016d4:	bl	4010b8 <device_path_make_major_minor@plt>
  4016d8:	tbnz	w0, #31, 4017dc <main+0x498>
  4016dc:	ldr	x0, [x29, #24]
  4016e0:	adrp	x1, 402000 <_fini+0x114>
  4016e4:	add	x1, x1, #0x14f
  4016e8:	bl	4010c8 <symlink@plt>
  4016ec:	tbz	w0, #31, 40172c <main+0x3e8>
  4016f0:	mov	w0, wzr
  4016f4:	bl	401028 <log_get_max_level_realm@plt>
  4016f8:	cmp	w0, #0x4
  4016fc:	b.lt	40172c <main+0x3e8>  // b.tstop
  401700:	bl	4010d8 <__errno_location@plt>
  401704:	ldr	w1, [x0]
  401708:	adrp	x2, 401000 <abort@plt+0x8>
  40170c:	adrp	x4, 401000 <abort@plt+0x8>
  401710:	adrp	x5, 402000 <_fini+0x114>
  401714:	add	x2, x2, #0xf13
  401718:	add	x4, x4, #0xf35
  40171c:	add	x5, x5, #0x16a
  401720:	mov	w0, #0x4                   	// #4
  401724:	mov	w3, #0xba                  	// #186
  401728:	bl	401078 <log_internal_realm@plt>
  40172c:	mov	w21, #0x1                   	// #1
  401730:	b	401830 <main+0x4ec>
  401734:	mov	w0, wzr
  401738:	bl	401028 <log_get_max_level_realm@plt>
  40173c:	cmp	w0, #0x3
  401740:	b.lt	401768 <main+0x424>  // b.tstop
  401744:	adrp	x2, 401000 <abort@plt+0x8>
  401748:	adrp	x4, 401000 <abort@plt+0x8>
  40174c:	adrp	x5, 402000 <_fini+0x114>
  401750:	add	x2, x2, #0xf13
  401754:	add	x4, x4, #0xf35
  401758:	add	x5, x5, #0xf8
  40175c:	mov	w0, #0x3                   	// #3
  401760:	mov	w3, #0xb1                  	// #177
  401764:	b	40169c <main+0x358>
  401768:	mov	w8, wzr
  40176c:	neg	w9, w20
  401770:	sub	w20, w8, w9, uxtb
  401774:	bl	4010e8 <ask_password_agent_close@plt>
  401778:	bl	4010f8 <polkit_agent_close@plt>
  40177c:	bl	401108 <pager_close@plt>
  401780:	bl	401118 <mac_selinux_finish@plt>
  401784:	adrp	x8, 41f000 <__FRAME_END__+0x1ca40>
  401788:	ldr	x8, [x8, #3776]
  40178c:	adrp	x19, 41f000 <__FRAME_END__+0x1ca40>
  401790:	ldr	x19, [x19, #3784]
  401794:	add	x9, x8, #0x7
  401798:	and	x21, x9, #0xfffffffffffffff8
  40179c:	cmp	x21, x19
  4017a0:	cset	w9, cs  // cs = hs, nlast
  4017a4:	cmp	x8, #0x0
  4017a8:	cset	w8, eq  // eq = none
  4017ac:	orr	w8, w8, w9
  4017b0:	tbnz	w8, #0, 4017c4 <main+0x480>
  4017b4:	ldp	x0, x8, [x21], #16
  4017b8:	blr	x8
  4017bc:	cmp	x21, x19
  4017c0:	b.cc	4017b4 <main+0x470>  // b.lo, b.ul, b.last
  4017c4:	lsr	w0, w20, #31
  4017c8:	ldp	x20, x19, [sp, #48]
  4017cc:	ldr	x21, [sp, #32]
  4017d0:	ldp	x29, x30, [sp, #16]
  4017d4:	add	sp, sp, #0x40
  4017d8:	ret
  4017dc:	mov	w20, w0
  4017e0:	mov	w0, wzr
  4017e4:	bl	401028 <log_get_max_level_realm@plt>
  4017e8:	cmp	w0, #0x3
  4017ec:	b.lt	401824 <main+0x4e0>  // b.tstop
  4017f0:	adrp	x2, 401000 <abort@plt+0x8>
  4017f4:	adrp	x4, 401000 <abort@plt+0x8>
  4017f8:	adrp	x5, 402000 <_fini+0x114>
  4017fc:	add	x2, x2, #0xf13
  401800:	add	x4, x4, #0xf35
  401804:	add	x5, x5, #0x129
  401808:	mov	w0, #0x3                   	// #3
  40180c:	mov	w3, #0xb7                  	// #183
  401810:	mov	w1, w20
  401814:	bl	401078 <log_internal_realm@plt>
  401818:	mov	w20, w0
  40181c:	mov	w21, wzr
  401820:	b	401830 <main+0x4ec>
  401824:	mov	w21, wzr
  401828:	neg	w8, w20
  40182c:	sub	w20, w21, w8, uxtb
  401830:	ldr	x0, [x29, #24]
  401834:	bl	401128 <free@plt>
  401838:	cbz	w21, 401774 <main+0x430>
  40183c:	ldur	w8, [x29, #-4]
  401840:	cmp	w8, #0x1
  401844:	b.ne	401998 <main+0x654>  // b.any
  401848:	adrp	x0, 402000 <_fini+0x114>
  40184c:	add	x0, x0, #0x1d3
  401850:	add	x3, x29, #0x18
  401854:	mov	w2, #0x1                   	// #1
  401858:	mov	x1, x19
  40185c:	mov	x4, xzr
  401860:	str	xzr, [x29, #24]
  401864:	bl	401138 <chase_symlinks@plt>
  401868:	tbnz	w0, #31, 4019ac <main+0x668>
  40186c:	adrp	x0, 402000 <_fini+0x114>
  401870:	add	x0, x0, #0x209
  401874:	mov	w1, #0x1c0                 	// #448
  401878:	bl	401148 <mkdir_p@plt>
  40187c:	tbnz	w0, #31, 4019e4 <main+0x6a0>
  401880:	adrp	x1, 402000 <_fini+0x114>
  401884:	adrp	x2, 402000 <_fini+0x114>
  401888:	add	x1, x1, #0x258
  40188c:	adrp	x5, 402000 <_fini+0x114>
  401890:	add	x2, x2, #0x209
  401894:	add	x5, x5, #0x25e
  401898:	mov	w0, #0x3                   	// #3
  40189c:	mov	w4, #0x1000000             	// #16777216
  4018a0:	mov	x3, x1
  4018a4:	bl	401158 <mount_verbose@plt>
  4018a8:	tbnz	w0, #31, 401a38 <main+0x6f4>
  4018ac:	adrp	x0, 402000 <_fini+0x114>
  4018b0:	add	x0, x0, #0x267
  4018b4:	mov	w1, #0x1ed                 	// #493
  4018b8:	bl	401168 <mkdir@plt>
  4018bc:	tbnz	w0, #31, 401a40 <main+0x6fc>
  4018c0:	ldr	x1, [x29, #24]
  4018c4:	adrp	x2, 402000 <_fini+0x114>
  4018c8:	add	x2, x2, #0x267
  4018cc:	mov	w0, #0x3                   	// #3
  4018d0:	mov	w4, #0x5000                	// #20480
  4018d4:	mov	x3, xzr
  4018d8:	mov	x5, xzr
  4018dc:	bl	401158 <mount_verbose@plt>
  4018e0:	tbnz	w0, #31, 401a80 <main+0x73c>
  4018e4:	adrp	x0, 402000 <_fini+0x114>
  4018e8:	add	x0, x0, #0x267
  4018ec:	mov	w1, #0x1                   	// #1
  4018f0:	mov	w2, #0x1                   	// #1
  4018f4:	mov	x3, xzr
  4018f8:	bl	401178 <bind_remount_recursive@plt>
  4018fc:	tbnz	w0, #31, 401a9c <main+0x758>
  401900:	mov	x0, x19
  401904:	mov	w1, wzr
  401908:	bl	401188 <umount_recursive@plt>
  40190c:	tbnz	w0, #31, 401adc <main+0x798>
  401910:	adrp	x1, 402000 <_fini+0x114>
  401914:	mov	w3, #0x4000                	// #16384
  401918:	add	x1, x1, #0x1e
  40191c:	movk	w3, #0x8, lsl #16
  401920:	mov	x0, xzr
  401924:	mov	x2, xzr
  401928:	mov	x4, xzr
  40192c:	bl	401198 <mount@plt>
  401930:	tbz	w0, #31, 401974 <main+0x630>
  401934:	mov	w0, wzr
  401938:	bl	401028 <log_get_max_level_realm@plt>
  40193c:	cmp	w0, #0x4
  401940:	b.lt	401974 <main+0x630>  // b.tstop
  401944:	bl	4010d8 <__errno_location@plt>
  401948:	ldr	w1, [x0]
  40194c:	adrp	x2, 401000 <abort@plt+0x8>
  401950:	adrp	x4, 402000 <_fini+0x114>
  401954:	adrp	x5, 402000 <_fini+0x114>
  401958:	add	x2, x2, #0xf13
  40195c:	add	x4, x4, #0x1d8
  401960:	add	x5, x5, #0x2eb
  401964:	mov	w0, #0x4                   	// #4
  401968:	mov	w3, #0x3a                  	// #58
  40196c:	mov	x6, x19
  401970:	bl	401078 <log_internal_realm@plt>
  401974:	adrp	x1, 402000 <_fini+0x114>
  401978:	add	x1, x1, #0x209
  40197c:	mov	w0, #0x3                   	// #3
  401980:	mov	w4, #0x2000                	// #8192
  401984:	mov	x2, x19
  401988:	mov	x3, xzr
  40198c:	mov	x5, xzr
  401990:	bl	401158 <mount_verbose@plt>
  401994:	b	401a80 <main+0x73c>
  401998:	cmp	w8, #0x3
  40199c:	b.ne	401b44 <main+0x800>  // b.any
  4019a0:	mov	x0, x19
  4019a4:	bl	401b68 <make_overlay>
  4019a8:	b	401620 <main+0x2dc>
  4019ac:	mov	w20, w0
  4019b0:	mov	w0, wzr
  4019b4:	bl	401028 <log_get_max_level_realm@plt>
  4019b8:	cmp	w0, #0x3
  4019bc:	b.lt	401a28 <main+0x6e4>  // b.tstop
  4019c0:	adrp	x2, 401000 <abort@plt+0x8>
  4019c4:	adrp	x4, 402000 <_fini+0x114>
  4019c8:	adrp	x5, 402000 <_fini+0x114>
  4019cc:	add	x2, x2, #0xf13
  4019d0:	add	x4, x4, #0x1d8
  4019d4:	add	x5, x5, #0x1e6
  4019d8:	mov	w0, #0x3                   	// #3
  4019dc:	mov	w3, #0x1a                  	// #26
  4019e0:	b	401a18 <main+0x6d4>
  4019e4:	mov	w20, w0
  4019e8:	mov	w0, wzr
  4019ec:	bl	401028 <log_get_max_level_realm@plt>
  4019f0:	cmp	w0, #0x3
  4019f4:	b.lt	401a28 <main+0x6e4>  // b.tstop
  4019f8:	adrp	x2, 401000 <abort@plt+0x8>
  4019fc:	adrp	x4, 402000 <_fini+0x114>
  401a00:	adrp	x5, 402000 <_fini+0x114>
  401a04:	add	x2, x2, #0xf13
  401a08:	add	x4, x4, #0x1d8
  401a0c:	add	x5, x5, #0x227
  401a10:	mov	w0, #0x3                   	// #3
  401a14:	mov	w3, #0x1e                  	// #30
  401a18:	mov	w1, w20
  401a1c:	bl	401078 <log_internal_realm@plt>
  401a20:	mov	w20, w0
  401a24:	b	401b38 <main+0x7f4>
  401a28:	mov	w8, wzr
  401a2c:	neg	w9, w20
  401a30:	sub	w20, w8, w9, uxtb
  401a34:	b	401b38 <main+0x7f4>
  401a38:	mov	w20, w0
  401a3c:	b	401b2c <main+0x7e8>
  401a40:	bl	4010d8 <__errno_location@plt>
  401a44:	ldr	w19, [x0]
  401a48:	mov	w0, wzr
  401a4c:	bl	401028 <log_get_max_level_realm@plt>
  401a50:	cmp	w0, #0x3
  401a54:	b.lt	401a88 <main+0x744>  // b.tstop
  401a58:	adrp	x2, 401000 <abort@plt+0x8>
  401a5c:	adrp	x4, 402000 <_fini+0x114>
  401a60:	adrp	x5, 402000 <_fini+0x114>
  401a64:	add	x2, x2, #0xf13
  401a68:	add	x4, x4, #0x1d8
  401a6c:	add	x5, x5, #0x289
  401a70:	mov	w0, #0x3                   	// #3
  401a74:	mov	w3, #0x25                  	// #37
  401a78:	mov	w1, w19
  401a7c:	bl	401078 <log_internal_realm@plt>
  401a80:	mov	w20, w0
  401a84:	b	401b1c <main+0x7d8>
  401a88:	cmp	w19, #0x0
  401a8c:	mov	w8, wzr
  401a90:	cneg	w9, w19, mi  // mi = first
  401a94:	sub	w20, w8, w9, uxtb
  401a98:	b	401b1c <main+0x7d8>
  401a9c:	mov	w20, w0
  401aa0:	mov	w0, wzr
  401aa4:	bl	401028 <log_get_max_level_realm@plt>
  401aa8:	cmp	w0, #0x3
  401aac:	b.lt	401b1c <main+0x7d8>  // b.tstop
  401ab0:	adrp	x2, 401000 <abort@plt+0x8>
  401ab4:	adrp	x4, 402000 <_fini+0x114>
  401ab8:	adrp	x5, 402000 <_fini+0x114>
  401abc:	add	x2, x2, #0xf13
  401ac0:	add	x4, x4, #0x1d8
  401ac4:	add	x5, x5, #0x2ad
  401ac8:	mov	w0, #0x3                   	// #3
  401acc:	mov	w3, #0x2f                  	// #47
  401ad0:	mov	w1, w20
  401ad4:	bl	401078 <log_internal_realm@plt>
  401ad8:	b	401b1c <main+0x7d8>
  401adc:	mov	w20, w0
  401ae0:	mov	w0, wzr
  401ae4:	bl	401028 <log_get_max_level_realm@plt>
  401ae8:	cmp	w0, #0x3
  401aec:	b.lt	401b1c <main+0x7d8>  // b.tstop
  401af0:	adrp	x2, 401000 <abort@plt+0x8>
  401af4:	adrp	x4, 402000 <_fini+0x114>
  401af8:	adrp	x5, 402000 <_fini+0x114>
  401afc:	add	x2, x2, #0xf13
  401b00:	add	x4, x4, #0x1d8
  401b04:	add	x5, x5, #0x2d2
  401b08:	mov	w0, #0x3                   	// #3
  401b0c:	mov	w3, #0x35                  	// #53
  401b10:	mov	w1, w20
  401b14:	mov	x6, x19
  401b18:	bl	401078 <log_internal_realm@plt>
  401b1c:	adrp	x0, 402000 <_fini+0x114>
  401b20:	add	x0, x0, #0x209
  401b24:	mov	w1, wzr
  401b28:	bl	401188 <umount_recursive@plt>
  401b2c:	adrp	x0, 402000 <_fini+0x114>
  401b30:	add	x0, x0, #0x209
  401b34:	bl	4011a8 <rmdir@plt>
  401b38:	ldr	x0, [x29, #24]
  401b3c:	bl	401128 <free@plt>
  401b40:	b	401774 <main+0x430>
  401b44:	adrp	x1, 402000 <_fini+0x114>
  401b48:	adrp	x2, 401000 <abort@plt+0x8>
  401b4c:	adrp	x4, 402000 <_fini+0x114>
  401b50:	add	x1, x1, #0x1a2
  401b54:	add	x2, x2, #0xf13
  401b58:	add	x4, x4, #0x1b8
  401b5c:	mov	w3, #0xc0                  	// #192
  401b60:	mov	w0, wzr
  401b64:	bl	4011b8 <log_assert_failed_realm@plt>

0000000000401b68 <make_overlay>:
  401b68:	stp	x29, x30, [sp, #-64]!
  401b6c:	str	x23, [sp, #16]
  401b70:	stp	x22, x21, [sp, #32]
  401b74:	stp	x20, x19, [sp, #48]
  401b78:	mov	x29, sp
  401b7c:	sub	sp, sp, #0x20
  401b80:	cbz	x0, 401e24 <make_overlay+0x2bc>
  401b84:	mov	x20, x0
  401b88:	adrp	x0, 402000 <_fini+0x114>
  401b8c:	add	x0, x0, #0x33d
  401b90:	mov	w1, #0x1c0                 	// #448
  401b94:	bl	401148 <mkdir_p@plt>
  401b98:	tbnz	w0, #31, 401cc4 <make_overlay+0x15c>
  401b9c:	adrp	x1, 402000 <_fini+0x114>
  401ba0:	adrp	x2, 402000 <_fini+0x114>
  401ba4:	add	x1, x1, #0x258
  401ba8:	adrp	x5, 402000 <_fini+0x114>
  401bac:	add	x2, x2, #0x33d
  401bb0:	add	x5, x5, #0x25e
  401bb4:	mov	w0, #0x3                   	// #3
  401bb8:	mov	w4, #0x1000000             	// #16777216
  401bbc:	mov	x3, x1
  401bc0:	bl	401158 <mount_verbose@plt>
  401bc4:	tbnz	w0, #31, 401d0c <make_overlay+0x1a4>
  401bc8:	adrp	x0, 402000 <_fini+0x114>
  401bcc:	add	x0, x0, #0x395
  401bd0:	mov	w1, #0x1ed                 	// #493
  401bd4:	bl	401168 <mkdir@plt>
  401bd8:	tbnz	w0, #31, 401d2c <make_overlay+0x1c4>
  401bdc:	adrp	x0, 402000 <_fini+0x114>
  401be0:	add	x0, x0, #0x3f0
  401be4:	mov	w1, #0x1ed                 	// #493
  401be8:	bl	401168 <mkdir@plt>
  401bec:	tbnz	w0, #31, 401d68 <make_overlay+0x200>
  401bf0:	adrp	x1, 402000 <_fini+0x114>
  401bf4:	add	x1, x1, #0x449
  401bf8:	mov	x0, x20
  401bfc:	bl	4011c8 <shell_escape@plt>
  401c00:	mov	x19, x0
  401c04:	cbz	x0, 401dcc <make_overlay+0x264>
  401c08:	adrp	x0, 402000 <_fini+0x114>
  401c0c:	sub	x8, x29, #0x18
  401c10:	adrp	x9, 402000 <_fini+0x114>
  401c14:	mov	x22, xzr
  401c18:	mov	x21, xzr
  401c1c:	add	x0, x0, #0x44c
  401c20:	add	x9, x9, #0x456
  401c24:	add	x23, x8, #0x8
  401c28:	stp	x0, x19, [x29, #-24]
  401c2c:	stur	x9, [x29, #-8]
  401c30:	bl	4011d8 <strlen@plt>
  401c34:	cmp	x22, #0x10
  401c38:	add	x21, x0, x21
  401c3c:	b.eq	401c4c <make_overlay+0xe4>  // b.none
  401c40:	ldr	x0, [x23, x22]
  401c44:	add	x22, x22, #0x8
  401c48:	cbnz	x0, 401c30 <make_overlay+0xc8>
  401c4c:	add	x8, x21, #0x1
  401c50:	cmp	x8, #0x400, lsl #12
  401c54:	b.hi	401e44 <make_overlay+0x2dc>  // b.pmore
  401c58:	add	x8, x8, #0xf
  401c5c:	mov	x9, sp
  401c60:	and	x8, x8, #0xfffffffffffffff0
  401c64:	sub	x21, x9, x8
  401c68:	mov	sp, x21
  401c6c:	sub	x8, x29, #0x18
  401c70:	adrp	x1, 402000 <_fini+0x114>
  401c74:	mov	x22, xzr
  401c78:	add	x23, x8, #0x8
  401c7c:	add	x1, x1, #0x44c
  401c80:	mov	x0, x21
  401c84:	bl	4011e8 <stpcpy@plt>
  401c88:	cmp	x22, #0x10
  401c8c:	b.eq	401c9c <make_overlay+0x134>  // b.none
  401c90:	ldr	x1, [x23, x22]
  401c94:	add	x22, x22, #0x8
  401c98:	cbnz	x1, 401c84 <make_overlay+0x11c>
  401c9c:	adrp	x1, 402000 <_fini+0x114>
  401ca0:	add	x1, x1, #0x4cc
  401ca4:	strb	wzr, [x0]
  401ca8:	mov	w0, #0x3                   	// #3
  401cac:	mov	x2, x20
  401cb0:	mov	x3, x1
  401cb4:	mov	x4, xzr
  401cb8:	mov	x5, x21
  401cbc:	bl	401158 <mount_verbose@plt>
  401cc0:	b	401de4 <make_overlay+0x27c>
  401cc4:	mov	w21, w0
  401cc8:	mov	w0, wzr
  401ccc:	bl	401028 <log_get_max_level_realm@plt>
  401cd0:	cmp	w0, #0x3
  401cd4:	b.lt	401d18 <make_overlay+0x1b0>  // b.tstop
  401cd8:	adrp	x2, 401000 <abort@plt+0x8>
  401cdc:	adrp	x4, 402000 <_fini+0x114>
  401ce0:	adrp	x5, 402000 <_fini+0x114>
  401ce4:	add	x2, x2, #0xf13
  401ce8:	add	x4, x4, #0x35a
  401cec:	add	x5, x5, #0x367
  401cf0:	mov	w0, #0x3                   	// #3
  401cf4:	mov	w3, #0x51                  	// #81
  401cf8:	mov	w1, w21
  401cfc:	bl	401078 <log_internal_realm@plt>
  401d00:	mov	w21, w0
  401d04:	mov	x19, xzr
  401d08:	b	401e00 <make_overlay+0x298>
  401d0c:	mov	w21, w0
  401d10:	mov	x19, xzr
  401d14:	b	401df4 <make_overlay+0x28c>
  401d18:	mov	w8, wzr
  401d1c:	neg	w9, w21
  401d20:	mov	x19, xzr
  401d24:	sub	w21, w8, w9, uxtb
  401d28:	b	401e00 <make_overlay+0x298>
  401d2c:	bl	4010d8 <__errno_location@plt>
  401d30:	ldr	w20, [x0]
  401d34:	mov	w0, wzr
  401d38:	bl	401028 <log_get_max_level_realm@plt>
  401d3c:	cmp	w0, #0x3
  401d40:	b.lt	401db4 <make_overlay+0x24c>  // b.tstop
  401d44:	adrp	x2, 401000 <abort@plt+0x8>
  401d48:	adrp	x4, 402000 <_fini+0x114>
  401d4c:	adrp	x5, 402000 <_fini+0x114>
  401d50:	add	x2, x2, #0xf13
  401d54:	add	x4, x4, #0x35a
  401d58:	add	x5, x5, #0x3b8
  401d5c:	mov	w0, #0x3                   	// #3
  401d60:	mov	w3, #0x5a                  	// #90
  401d64:	b	401da0 <make_overlay+0x238>
  401d68:	bl	4010d8 <__errno_location@plt>
  401d6c:	ldr	w20, [x0]
  401d70:	mov	w0, wzr
  401d74:	bl	401028 <log_get_max_level_realm@plt>
  401d78:	cmp	w0, #0x3
  401d7c:	b.lt	401db4 <make_overlay+0x24c>  // b.tstop
  401d80:	adrp	x2, 401000 <abort@plt+0x8>
  401d84:	adrp	x4, 402000 <_fini+0x114>
  401d88:	adrp	x5, 402000 <_fini+0x114>
  401d8c:	add	x2, x2, #0xf13
  401d90:	add	x4, x4, #0x35a
  401d94:	add	x5, x5, #0x412
  401d98:	mov	w0, #0x3                   	// #3
  401d9c:	mov	w3, #0x5f                  	// #95
  401da0:	mov	w1, w20
  401da4:	bl	401078 <log_internal_realm@plt>
  401da8:	mov	w21, w0
  401dac:	mov	x19, xzr
  401db0:	b	401de8 <make_overlay+0x280>
  401db4:	cmp	w20, #0x0
  401db8:	mov	w8, wzr
  401dbc:	cneg	w9, w20, mi  // mi = first
  401dc0:	mov	x19, xzr
  401dc4:	sub	w21, w8, w9, uxtb
  401dc8:	b	401de8 <make_overlay+0x280>
  401dcc:	adrp	x1, 401000 <abort@plt+0x8>
  401dd0:	adrp	x3, 402000 <_fini+0x114>
  401dd4:	add	x1, x1, #0xf13
  401dd8:	add	x3, x3, #0x35a
  401ddc:	mov	w2, #0x65                  	// #101
  401de0:	bl	4011f8 <log_oom_internal@plt>
  401de4:	mov	w21, w0
  401de8:	adrp	x0, 402000 <_fini+0x114>
  401dec:	add	x0, x0, #0x33d
  401df0:	bl	401208 <umount_verbose@plt>
  401df4:	adrp	x0, 402000 <_fini+0x114>
  401df8:	add	x0, x0, #0x33d
  401dfc:	bl	4011a8 <rmdir@plt>
  401e00:	mov	x0, x19
  401e04:	bl	401128 <free@plt>
  401e08:	mov	w0, w21
  401e0c:	mov	sp, x29
  401e10:	ldp	x20, x19, [sp, #48]
  401e14:	ldp	x22, x21, [sp, #32]
  401e18:	ldr	x23, [sp, #16]
  401e1c:	ldp	x29, x30, [sp], #64
  401e20:	ret
  401e24:	adrp	x1, 402000 <_fini+0x114>
  401e28:	adrp	x2, 401000 <abort@plt+0x8>
  401e2c:	adrp	x4, 402000 <_fini+0x114>
  401e30:	add	x1, x1, #0x1ce
  401e34:	add	x2, x2, #0xf13
  401e38:	add	x4, x4, #0x31e
  401e3c:	mov	w3, #0x4d                  	// #77
  401e40:	bl	4011b8 <log_assert_failed_realm@plt>
  401e44:	adrp	x1, 402000 <_fini+0x114>
  401e48:	adrp	x2, 401000 <abort@plt+0x8>
  401e4c:	adrp	x4, 402000 <_fini+0x114>
  401e50:	add	x1, x1, #0x4ad
  401e54:	add	x2, x2, #0xf13
  401e58:	add	x4, x4, #0x31e
  401e5c:	mov	w3, #0x69                  	// #105
  401e60:	mov	w0, wzr
  401e64:	bl	4011b8 <log_assert_failed_realm@plt>

0000000000401e68 <__libc_csu_init>:
  401e68:	stp	x29, x30, [sp, #-64]!
  401e6c:	mov	x29, sp
  401e70:	stp	x19, x20, [sp, #16]
  401e74:	adrp	x20, 41f000 <__FRAME_END__+0x1ca40>
  401e78:	add	x20, x20, #0xc90
  401e7c:	stp	x21, x22, [sp, #32]
  401e80:	adrp	x21, 41f000 <__FRAME_END__+0x1ca40>
  401e84:	add	x21, x21, #0xc88
  401e88:	sub	x20, x20, x21
  401e8c:	mov	w22, w0
  401e90:	stp	x23, x24, [sp, #48]
  401e94:	mov	x23, x1
  401e98:	mov	x24, x2
  401e9c:	bl	400fb0 <_init>
  401ea0:	cmp	xzr, x20, asr #3
  401ea4:	b.eq	401ed0 <__libc_csu_init+0x68>  // b.none
  401ea8:	asr	x20, x20, #3
  401eac:	mov	x19, #0x0                   	// #0
  401eb0:	ldr	x3, [x21, x19, lsl #3]
  401eb4:	mov	x2, x24
  401eb8:	add	x19, x19, #0x1
  401ebc:	mov	x1, x23
  401ec0:	mov	w0, w22
  401ec4:	blr	x3
  401ec8:	cmp	x20, x19
  401ecc:	b.ne	401eb0 <__libc_csu_init+0x48>  // b.any
  401ed0:	ldp	x19, x20, [sp, #16]
  401ed4:	ldp	x21, x22, [sp, #32]
  401ed8:	ldp	x23, x24, [sp, #48]
  401edc:	ldp	x29, x30, [sp], #64
  401ee0:	ret
  401ee4:	nop

0000000000401ee8 <__libc_csu_fini>:
  401ee8:	ret

Disassembly of section .fini:

0000000000401eec <_fini>:
  401eec:	stp	x29, x30, [sp, #-16]!
  401ef0:	mov	x29, sp
  401ef4:	ldp	x29, x30, [sp], #16
  401ef8:	ret
