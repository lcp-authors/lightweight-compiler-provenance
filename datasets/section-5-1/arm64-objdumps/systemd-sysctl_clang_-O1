
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysctl_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

00000000002119f8 <_start>:
  2119f8:	mov	x29, #0x0                   	// #0
  2119fc:	mov	x30, #0x0                   	// #0
  211a00:	mov	x5, x0
  211a04:	ldr	x1, [sp]
  211a08:	add	x2, sp, #0x8
  211a0c:	mov	x6, sp
  211a10:	movz	x0, #0x0, lsl #48
  211a14:	movk	x0, #0x0, lsl #32
  211a18:	movk	x0, #0x21, lsl #16
  211a1c:	movk	x0, #0x1b70
  211a20:	movz	x3, #0x0, lsl #48
  211a24:	movk	x3, #0x0, lsl #32
  211a28:	movk	x3, #0x21, lsl #16
  211a2c:	movk	x3, #0x2a58
  211a30:	movz	x4, #0x0, lsl #48
  211a34:	movk	x4, #0x0, lsl #32
  211a38:	movk	x4, #0x21, lsl #16
  211a3c:	movk	x4, #0x2ad8
  211a40:	bl	212b20 <__libc_start_main@plt>
  211a44:	bl	212b30 <abort@plt>

0000000000211a48 <call_weak_fn>:
  211a48:	adrp	x0, 222000 <string_hash_func@plt+0xf230>
  211a4c:	ldr	x0, [x0, #4032]
  211a50:	cbz	x0, 211a58 <call_weak_fn+0x10>
  211a54:	b	212b40 <__gmon_start__@plt>
  211a58:	ret

0000000000211a5c <deregister_tm_clones>:
  211a5c:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211a60:	add	x0, x0, #0x150
  211a64:	adrp	x1, 233000 <_DYNAMIC+0x10210>
  211a68:	add	x1, x1, #0x150
  211a6c:	cmp	x0, x1
  211a70:	b.eq	211aa4 <deregister_tm_clones+0x48>  // b.none
  211a74:	stp	x29, x30, [sp, #-32]!
  211a78:	mov	x29, sp
  211a7c:	adrp	x0, 201000 <option_hash_ops-0x2d8>
  211a80:	ldr	x0, [x0, #704]
  211a84:	str	x0, [sp, #24]
  211a88:	mov	x1, x0
  211a8c:	cbz	x1, 211a9c <deregister_tm_clones+0x40>
  211a90:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211a94:	add	x0, x0, #0x150
  211a98:	blr	x1
  211a9c:	ldp	x29, x30, [sp], #32
  211aa0:	ret
  211aa4:	ret

0000000000211aa8 <register_tm_clones>:
  211aa8:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211aac:	add	x0, x0, #0x150
  211ab0:	adrp	x1, 233000 <_DYNAMIC+0x10210>
  211ab4:	add	x1, x1, #0x150
  211ab8:	sub	x0, x0, x1
  211abc:	lsr	x1, x0, #63
  211ac0:	add	x0, x1, x0, asr #3
  211ac4:	cmp	xzr, x0, asr #1
  211ac8:	b.eq	211b00 <register_tm_clones+0x58>  // b.none
  211acc:	stp	x29, x30, [sp, #-32]!
  211ad0:	mov	x29, sp
  211ad4:	asr	x1, x0, #1
  211ad8:	adrp	x0, 201000 <option_hash_ops-0x2d8>
  211adc:	ldr	x0, [x0, #712]
  211ae0:	str	x0, [sp, #24]
  211ae4:	mov	x2, x0
  211ae8:	cbz	x2, 211af8 <register_tm_clones+0x50>
  211aec:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211af0:	add	x0, x0, #0x150
  211af4:	blr	x2
  211af8:	ldp	x29, x30, [sp], #32
  211afc:	ret
  211b00:	ret

0000000000211b04 <__do_global_dtors_aux>:
  211b04:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211b08:	ldrb	w0, [x0, #336]
  211b0c:	cbnz	w0, 211b30 <__do_global_dtors_aux+0x2c>
  211b10:	stp	x29, x30, [sp, #-16]!
  211b14:	mov	x29, sp
  211b18:	bl	211a5c <deregister_tm_clones>
  211b1c:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211b20:	mov	w1, #0x1                   	// #1
  211b24:	strb	w1, [x0, #336]
  211b28:	ldp	x29, x30, [sp], #16
  211b2c:	ret
  211b30:	ret

0000000000211b34 <frame_dummy>:
  211b34:	stp	x29, x30, [sp, #-16]!
  211b38:	mov	x29, sp
  211b3c:	bl	211aa8 <register_tm_clones>
  211b40:	ldp	x29, x30, [sp], #16
  211b44:	ret

0000000000211b48 <__unique_prefix_static_destructor_wrapper4>:
  211b48:	stp	x29, x30, [sp, #-16]!
  211b4c:	mov	x29, sp
  211b50:	bl	211e38 <strv_freep>
  211b54:	ldp	x29, x30, [sp], #16
  211b58:	ret

0000000000211b5c <__unique_prefix_static_free_wrapper5>:
  211b5c:	stp	x29, x30, [sp, #-16]!
  211b60:	mov	x29, sp
  211b64:	bl	211e54 <option_free>
  211b68:	ldp	x29, x30, [sp], #16
  211b6c:	ret

0000000000211b70 <main>:
  211b70:	stp	x29, x30, [sp, #-32]!
  211b74:	stp	x20, x19, [sp, #16]
  211b78:	mov	x29, sp
  211b7c:	mov	x19, x1
  211b80:	mov	w20, w0
  211b84:	bl	211bbc <save_argc_argv>
  211b88:	mov	w0, w20
  211b8c:	mov	x1, x19
  211b90:	bl	211bd0 <run>
  211b94:	mov	w19, w0
  211b98:	bl	212b50 <ask_password_agent_close@plt>
  211b9c:	bl	212b60 <polkit_agent_close@plt>
  211ba0:	bl	212b70 <pager_close@plt>
  211ba4:	bl	212b80 <mac_selinux_finish@plt>
  211ba8:	bl	211dd8 <static_destruct>
  211bac:	lsr	w0, w19, #31
  211bb0:	ldp	x20, x19, [sp, #16]
  211bb4:	ldp	x29, x30, [sp], #32
  211bb8:	ret

0000000000211bbc <save_argc_argv>:
  211bbc:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  211bc0:	adrp	x9, 233000 <_DYNAMIC+0x10210>
  211bc4:	str	w0, [x8, #360]
  211bc8:	str	x1, [x9, #368]
  211bcc:	ret

0000000000211bd0 <run>:
  211bd0:	sub	sp, sp, #0x80
  211bd4:	stp	x29, x30, [sp, #64]
  211bd8:	add	x29, sp, #0x40
  211bdc:	str	x23, [sp, #80]
  211be0:	stp	x22, x21, [sp, #96]
  211be4:	stp	x20, x19, [sp, #112]
  211be8:	mov	x23, x1
  211bec:	mov	w22, w0
  211bf0:	str	xzr, [x29, #24]
  211bf4:	bl	211ebc <parse_argv>
  211bf8:	cmp	w0, #0x1
  211bfc:	b.lt	211c68 <run+0x98>  // b.tstop
  211c00:	bl	212b90 <log_setup_service@plt>
  211c04:	mov	w0, #0x12                  	// #18
  211c08:	bl	212ba0 <umask@plt>
  211c0c:	adrp	x0, 201000 <option_hash_ops-0x2d8>
  211c10:	add	x0, x0, #0x2d8
  211c14:	bl	212bb0 <internal_ordered_hashmap_new@plt>
  211c18:	str	x0, [x29, #24]
  211c1c:	cbz	x0, 211c70 <run+0xa0>
  211c20:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  211c24:	ldrsw	x8, [x8, #376]
  211c28:	mov	x19, x0
  211c2c:	cmp	w8, w22
  211c30:	b.ge	211c90 <run+0xc0>  // b.tcont
  211c34:	mov	w20, wzr
  211c38:	add	x21, x23, x8, lsl #3
  211c3c:	sub	w22, w22, w8
  211c40:	ldr	x1, [x21], #8
  211c44:	mov	x0, x19
  211c48:	mov	w2, wzr
  211c4c:	bl	212160 <parse_file>
  211c50:	cmp	w0, #0x0
  211c54:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  211c58:	csel	w20, w0, w20, eq  // eq = none
  211c5c:	subs	w22, w22, #0x1
  211c60:	b.ne	211c40 <run+0x70>  // b.any
  211c64:	b	211da0 <run+0x1d0>
  211c68:	mov	w21, w0
  211c6c:	b	211db4 <run+0x1e4>
  211c70:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  211c74:	adrp	x3, 201000 <option_hash_ops-0x2d8>
  211c78:	add	x1, x1, #0x7b1
  211c7c:	add	x3, x3, #0x81b
  211c80:	mov	w2, #0x145                 	// #325
  211c84:	bl	212bc0 <log_oom_internal@plt>
  211c88:	mov	w21, w0
  211c8c:	b	211db4 <run+0x1e4>
  211c90:	adrp	x8, 201000 <option_hash_ops-0x2d8>
  211c94:	add	x8, x8, #0x2f8
  211c98:	ldp	q0, q1, [x8]
  211c9c:	ldr	q2, [x8, #32]
  211ca0:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  211ca4:	add	x1, x1, #0x715
  211ca8:	sub	x0, x29, #0x8
  211cac:	mov	x4, sp
  211cb0:	mov	x2, xzr
  211cb4:	mov	w3, wzr
  211cb8:	stur	xzr, [x29, #-8]
  211cbc:	stp	q0, q1, [sp]
  211cc0:	str	q2, [sp, #32]
  211cc4:	bl	212bd0 <conf_files_list_strv@plt>
  211cc8:	mov	w20, w0
  211ccc:	tbnz	w0, #31, 211d00 <run+0x130>
  211cd0:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  211cd4:	ldrb	w8, [x8, #352]
  211cd8:	cmp	w8, #0x1
  211cdc:	b.ne	211d44 <run+0x174>  // b.any
  211ce0:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  211ce4:	ldr	w0, [x8, #356]
  211ce8:	bl	212be0 <pager_open@plt>
  211cec:	ldur	x1, [x29, #-8]
  211cf0:	mov	x0, xzr
  211cf4:	mov	w2, wzr
  211cf8:	bl	212bf0 <cat_files@plt>
  211cfc:	b	211d38 <run+0x168>
  211d00:	mov	w0, wzr
  211d04:	bl	212c00 <log_get_max_level_realm@plt>
  211d08:	cmp	w0, #0x3
  211d0c:	b.lt	211d80 <run+0x1b0>  // b.tstop
  211d10:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  211d14:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  211d18:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  211d1c:	add	x2, x2, #0x7b1
  211d20:	add	x4, x4, #0x81b
  211d24:	add	x5, x5, #0x44f
  211d28:	mov	w0, #0x3                   	// #3
  211d2c:	mov	w3, #0x157                 	// #343
  211d30:	mov	w1, w20
  211d34:	bl	212c10 <log_internal_realm@plt>
  211d38:	mov	w21, w0
  211d3c:	mov	w22, wzr
  211d40:	b	211d94 <run+0x1c4>
  211d44:	ldur	x8, [x29, #-8]
  211d48:	cbz	x8, 211d90 <run+0x1c0>
  211d4c:	ldr	x1, [x8]
  211d50:	cbz	x1, 211d90 <run+0x1c0>
  211d54:	add	x21, x8, #0x8
  211d58:	mov	w22, #0x1                   	// #1
  211d5c:	mov	w2, #0x1                   	// #1
  211d60:	mov	x0, x19
  211d64:	bl	212160 <parse_file>
  211d68:	ldr	x1, [x21], #8
  211d6c:	cmp	w0, #0x0
  211d70:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  211d74:	csel	w20, w0, w20, eq  // eq = none
  211d78:	cbnz	x1, 211d5c <run+0x18c>
  211d7c:	b	211d94 <run+0x1c4>
  211d80:	mov	w22, wzr
  211d84:	neg	w8, w20
  211d88:	sub	w21, w22, w8, uxtb
  211d8c:	b	211d94 <run+0x1c4>
  211d90:	mov	w22, #0x1                   	// #1
  211d94:	sub	x0, x29, #0x8
  211d98:	bl	211e38 <strv_freep>
  211d9c:	cbz	w22, 211db4 <run+0x1e4>
  211da0:	mov	x0, x19
  211da4:	bl	2125c8 <apply_all>
  211da8:	cmp	w0, #0x0
  211dac:	ccmp	w20, #0x0, #0x0, lt  // lt = tstop
  211db0:	csel	w21, w0, w20, eq  // eq = none
  211db4:	add	x0, x29, #0x18
  211db8:	bl	211ea0 <ordered_hashmap_freep>
  211dbc:	mov	w0, w21
  211dc0:	ldp	x20, x19, [sp, #112]
  211dc4:	ldp	x22, x21, [sp, #96]
  211dc8:	ldr	x23, [sp, #80]
  211dcc:	ldp	x29, x30, [sp, #64]
  211dd0:	add	sp, sp, #0x80
  211dd4:	ret

0000000000211dd8 <static_destruct>:
  211dd8:	stp	x29, x30, [sp, #-32]!
  211ddc:	stp	x20, x19, [sp, #16]
  211de0:	adrp	x8, 222000 <string_hash_func@plt+0xf230>
  211de4:	ldr	x8, [x8, #4040]
  211de8:	mov	x29, sp
  211dec:	cbz	x8, 211e2c <static_destruct+0x54>
  211df0:	adrp	x0, 222000 <string_hash_func@plt+0xf230>
  211df4:	ldr	x0, [x0, #4040]
  211df8:	bl	212a48 <ALIGN_TO>
  211dfc:	adrp	x20, 222000 <string_hash_func@plt+0xf230>
  211e00:	ldr	x20, [x20, #4048]
  211e04:	cmp	x0, x20
  211e08:	b.cs	211e2c <static_destruct+0x54>  // b.hs, b.nlast
  211e0c:	mov	x19, x0
  211e10:	ldp	x0, x8, [x19]
  211e14:	blr	x8
  211e18:	add	x0, x19, #0x10
  211e1c:	bl	212a48 <ALIGN_TO>
  211e20:	mov	x19, x0
  211e24:	cmp	x0, x20
  211e28:	b.cc	211e10 <static_destruct+0x38>  // b.lo, b.ul, b.last
  211e2c:	ldp	x20, x19, [sp, #16]
  211e30:	ldp	x29, x30, [sp], #32
  211e34:	ret

0000000000211e38 <strv_freep>:
  211e38:	stp	x29, x30, [sp, #-16]!
  211e3c:	ldr	x0, [x0]
  211e40:	mov	x29, sp
  211e44:	cbz	x0, 211e4c <strv_freep+0x14>
  211e48:	bl	212c20 <strv_free@plt>
  211e4c:	ldp	x29, x30, [sp], #16
  211e50:	ret

0000000000211e54 <option_free>:
  211e54:	cbz	x0, 211e88 <option_free+0x34>
  211e58:	stp	x29, x30, [sp, #-32]!
  211e5c:	str	x19, [sp, #16]
  211e60:	mov	x19, x0
  211e64:	ldr	x0, [x0]
  211e68:	mov	x29, sp
  211e6c:	bl	212c30 <free@plt>
  211e70:	ldr	x0, [x19, #8]
  211e74:	bl	212c30 <free@plt>
  211e78:	mov	x0, x19
  211e7c:	bl	211e8c <mfree>
  211e80:	ldr	x19, [sp, #16]
  211e84:	ldp	x29, x30, [sp], #32
  211e88:	ret

0000000000211e8c <mfree>:
  211e8c:	stp	x29, x30, [sp, #-16]!
  211e90:	mov	x29, sp
  211e94:	bl	212c30 <free@plt>
  211e98:	ldp	x29, x30, [sp], #16
  211e9c:	ret

0000000000211ea0 <ordered_hashmap_freep>:
  211ea0:	stp	x29, x30, [sp, #-16]!
  211ea4:	ldr	x0, [x0]
  211ea8:	mov	x29, sp
  211eac:	cbz	x0, 211eb4 <ordered_hashmap_freep+0x14>
  211eb0:	bl	212720 <ordered_hashmap_free>
  211eb4:	ldp	x29, x30, [sp], #16
  211eb8:	ret

0000000000211ebc <parse_argv>:
  211ebc:	stp	x29, x30, [sp, #-96]!
  211ec0:	stp	x28, x27, [sp, #16]
  211ec4:	stp	x26, x25, [sp, #32]
  211ec8:	stp	x24, x23, [sp, #48]
  211ecc:	stp	x22, x21, [sp, #64]
  211ed0:	stp	x20, x19, [sp, #80]
  211ed4:	mov	x29, sp
  211ed8:	tbnz	w0, #31, 212118 <parse_argv+0x25c>
  211edc:	mov	x20, x1
  211ee0:	cbz	x1, 21213c <parse_argv+0x280>
  211ee4:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  211ee8:	adrp	x3, 201000 <option_hash_ops-0x2d8>
  211eec:	add	x2, x2, #0x81f
  211ef0:	add	x3, x3, #0x328
  211ef4:	mov	x1, x20
  211ef8:	mov	x4, xzr
  211efc:	mov	w19, w0
  211f00:	bl	212c40 <getopt_long@plt>
  211f04:	adrp	x25, 233000 <_DYNAMIC+0x10210>
  211f08:	tbnz	w0, #31, 21204c <parse_argv+0x190>
  211f0c:	adrp	x26, 201000 <option_hash_ops-0x2d8>
  211f10:	adrp	x22, 201000 <option_hash_ops-0x2d8>
  211f14:	adrp	x23, 201000 <option_hash_ops-0x2d8>
  211f18:	adrp	x24, 201000 <option_hash_ops-0x2d8>
  211f1c:	add	x26, x26, #0x2d0
  211f20:	mov	w28, #0x1                   	// #1
  211f24:	add	x22, x22, #0x81f
  211f28:	add	x23, x23, #0x328
  211f2c:	adrp	x27, 233000 <_DYNAMIC+0x10210>
  211f30:	add	x24, x24, #0x658
  211f34:	sub	w8, w0, #0x100
  211f38:	cmp	w8, #0x3
  211f3c:	b.hi	2120ac <parse_argv+0x1f0>  // b.pmore
  211f40:	adr	x9, 211f50 <parse_argv+0x94>
  211f44:	ldrb	w10, [x26, x8]
  211f48:	add	x9, x9, x10, lsl #2
  211f4c:	br	x9
  211f50:	strb	w28, [x25, #352]
  211f54:	b	212030 <parse_argv+0x174>
  211f58:	ldr	x0, [x27, #384]
  211f5c:	mov	x26, x23
  211f60:	mov	x23, x22
  211f64:	mov	x28, x27
  211f68:	mov	x27, x24
  211f6c:	bl	212c50 <sysctl_normalize@plt>
  211f70:	mov	x22, x28
  211f74:	ldr	x28, [x28, #384]
  211f78:	mov	x1, x24
  211f7c:	mov	x0, x28
  211f80:	bl	212c60 <path_startswith@plt>
  211f84:	cbz	x0, 211fac <parse_argv+0xf0>
  211f88:	mov	x0, x28
  211f8c:	mov	x24, x27
  211f90:	bl	212c70 <strdup@plt>
  211f94:	b	211fc0 <parse_argv+0x104>
  211f98:	adrp	x9, 233000 <_DYNAMIC+0x10210>
  211f9c:	ldr	w8, [x9, #356]
  211fa0:	orr	w8, w8, #0x1
  211fa4:	str	w8, [x9, #356]
  211fa8:	b	212030 <parse_argv+0x174>
  211fac:	mov	x2, #0xffffffffffffffff    	// #-1
  211fb0:	mov	x0, x27
  211fb4:	mov	x1, x28
  211fb8:	mov	x24, x27
  211fbc:	bl	212c80 <path_join_internal@plt>
  211fc0:	mov	x1, x0
  211fc4:	mov	w28, #0x1                   	// #1
  211fc8:	mov	x27, x22
  211fcc:	cbz	x0, 211ff0 <parse_argv+0x134>
  211fd0:	adrp	x0, 233000 <_DYNAMIC+0x10210>
  211fd4:	add	x0, x0, #0x158
  211fd8:	bl	212c90 <strv_consume@plt>
  211fdc:	mov	x22, x23
  211fe0:	tbnz	w0, #31, 211ffc <parse_argv+0x140>
  211fe4:	mov	w8, #0x1                   	// #1
  211fe8:	mov	x23, x26
  211fec:	b	212024 <parse_argv+0x168>
  211ff0:	mov	w2, #0x11d                 	// #285
  211ff4:	mov	x22, x23
  211ff8:	b	212000 <parse_argv+0x144>
  211ffc:	mov	w2, #0x120                 	// #288
  212000:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  212004:	adrp	x3, 201000 <option_hash_ops-0x2d8>
  212008:	mov	w0, wzr
  21200c:	add	x1, x1, #0x7b1
  212010:	add	x3, x3, #0x6ea
  212014:	mov	x23, x26
  212018:	bl	212bc0 <log_oom_internal@plt>
  21201c:	mov	w21, w0
  212020:	mov	w8, wzr
  212024:	adrp	x26, 201000 <option_hash_ops-0x2d8>
  212028:	add	x26, x26, #0x2d0
  21202c:	tbz	w8, #0, 2120d4 <parse_argv+0x218>
  212030:	mov	w0, w19
  212034:	mov	x1, x20
  212038:	mov	x2, x22
  21203c:	mov	x3, x23
  212040:	mov	x4, xzr
  212044:	bl	212c40 <getopt_long@plt>
  212048:	tbz	w0, #31, 211f34 <parse_argv+0x78>
  21204c:	ldrb	w8, [x25, #352]
  212050:	mov	w21, #0x1                   	// #1
  212054:	cmp	w8, #0x1
  212058:	b.ne	2120d4 <parse_argv+0x218>  // b.any
  21205c:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  212060:	ldr	w8, [x8, #376]
  212064:	cmp	w8, w19
  212068:	b.ge	2120d4 <parse_argv+0x218>  // b.tcont
  21206c:	mov	w0, wzr
  212070:	bl	212c00 <log_get_max_level_realm@plt>
  212074:	cmp	w0, #0x3
  212078:	b.lt	2120c4 <parse_argv+0x208>  // b.tstop
  21207c:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  212080:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  212084:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  212088:	mov	w1, #0x16                  	// #22
  21208c:	add	x2, x2, #0x7b1
  212090:	add	x4, x4, #0x6ea
  212094:	add	x5, x5, #0x821
  212098:	mov	w0, #0x3                   	// #3
  21209c:	movk	w1, #0x4000, lsl #16
  2120a0:	mov	w3, #0x132                 	// #306
  2120a4:	bl	212c10 <log_internal_realm@plt>
  2120a8:	b	2120d0 <parse_argv+0x214>
  2120ac:	cmp	w0, #0x3f
  2120b0:	b.eq	2120c4 <parse_argv+0x208>  // b.none
  2120b4:	cmp	w0, #0x68
  2120b8:	b.ne	2120f4 <parse_argv+0x238>  // b.any
  2120bc:	bl	21273c <help>
  2120c0:	b	2120d0 <parse_argv+0x214>
  2120c4:	mov	w21, #0xffffffea            	// #-22
  2120c8:	b	2120d4 <parse_argv+0x218>
  2120cc:	bl	212ca0 <version@plt>
  2120d0:	mov	w21, w0
  2120d4:	mov	w0, w21
  2120d8:	ldp	x20, x19, [sp, #80]
  2120dc:	ldp	x22, x21, [sp, #64]
  2120e0:	ldp	x24, x23, [sp, #48]
  2120e4:	ldp	x26, x25, [sp, #32]
  2120e8:	ldp	x28, x27, [sp, #16]
  2120ec:	ldp	x29, x30, [sp], #96
  2120f0:	ret
  2120f4:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  2120f8:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  2120fc:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  212100:	add	x1, x1, #0x7f3
  212104:	add	x2, x2, #0x7b1
  212108:	add	x4, x4, #0x869
  21210c:	mov	w3, #0x12d                 	// #301
  212110:	mov	w0, wzr
  212114:	bl	212cb0 <log_assert_failed_unreachable_realm@plt>
  212118:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  21211c:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  212120:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  212124:	add	x1, x1, #0x662
  212128:	add	x2, x2, #0x7b1
  21212c:	add	x4, x4, #0x869
  212130:	mov	w3, #0xfe                  	// #254
  212134:	mov	w0, wzr
  212138:	bl	212cc0 <log_assert_failed_realm@plt>
  21213c:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  212140:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  212144:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  212148:	add	x1, x1, #0x6ad
  21214c:	add	x2, x2, #0x7b1
  212150:	add	x4, x4, #0x869
  212154:	mov	w3, #0xff                  	// #255
  212158:	mov	w0, wzr
  21215c:	bl	212cc0 <log_assert_failed_realm@plt>

0000000000212160 <parse_file>:
  212160:	sub	sp, sp, #0xd0
  212164:	stp	x29, x30, [sp, #112]
  212168:	add	x29, sp, #0x70
  21216c:	stp	x28, x27, [sp, #128]
  212170:	stp	x26, x25, [sp, #144]
  212174:	stp	x24, x23, [sp, #160]
  212178:	stp	x22, x21, [sp, #176]
  21217c:	stp	x20, x19, [sp, #192]
  212180:	str	x0, [sp, #24]
  212184:	stur	xzr, [x29, #-8]
  212188:	cbz	x1, 2125a4 <parse_file+0x444>
  21218c:	adrp	x8, 201000 <option_hash_ops-0x2d8>
  212190:	add	x8, x8, #0x3e8
  212194:	ldp	q0, q1, [x8]
  212198:	ldr	q2, [x8, #32]
  21219c:	mov	x19, x1
  2121a0:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  2121a4:	mov	w22, w2
  2121a8:	add	x1, x1, #0x44c
  2121ac:	add	x3, sp, #0x30
  2121b0:	sub	x4, x29, #0x8
  2121b4:	mov	x0, x19
  2121b8:	mov	x2, xzr
  2121bc:	stp	q0, q1, [sp, #48]
  2121c0:	str	q2, [sp, #80]
  2121c4:	bl	212cd0 <search_and_fopen@plt>
  2121c8:	mov	w20, w0
  2121cc:	tbnz	w0, #31, 212514 <parse_file+0x3b4>
  2121d0:	mov	w0, wzr
  2121d4:	bl	212c00 <log_get_max_level_realm@plt>
  2121d8:	cmp	w0, #0x7
  2121dc:	b.lt	21220c <parse_file+0xac>  // b.tstop
  2121e0:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  2121e4:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  2121e8:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  2121ec:	add	x2, x2, #0x7b1
  2121f0:	add	x4, x4, #0x77c
  2121f4:	add	x5, x5, #0x7dd
  2121f8:	mov	w0, #0x7                   	// #7
  2121fc:	mov	w3, #0x8c                  	// #140
  212200:	mov	w1, wzr
  212204:	mov	x6, x19
  212208:	bl	212c10 <log_internal_realm@plt>
  21220c:	adrp	x23, 201000 <option_hash_ops-0x2d8>
  212210:	adrp	x24, 201000 <option_hash_ops-0x2d8>
  212214:	adrp	x21, 201000 <option_hash_ops-0x2d8>
  212218:	mov	w22, wzr
  21221c:	add	x23, x23, #0x7b1
  212220:	add	x24, x24, #0x77c
  212224:	add	x21, x21, #0x787
  212228:	ldur	x0, [x29, #-8]
  21222c:	add	x1, sp, #0x20
  212230:	stp	xzr, xzr, [sp, #32]
  212234:	bl	21280c <read_line>
  212238:	cbz	w0, 21228c <parse_file+0x12c>
  21223c:	mov	w26, w0
  212240:	tbnz	w0, #31, 212294 <parse_file+0x134>
  212244:	ldr	x0, [sp, #32]
  212248:	add	w22, w22, #0x1
  21224c:	bl	212ce0 <strstrip@plt>
  212250:	mov	x26, x0
  212254:	bl	21282c <isempty>
  212258:	tbnz	w0, #0, 212284 <parse_file+0x124>
  21225c:	ldrb	w8, [x26]
  212260:	cmp	x8, #0x3f
  212264:	b.hi	2122e4 <parse_file+0x184>  // b.pmore
  212268:	mov	w9, #0x1                   	// #1
  21226c:	lsl	x8, x9, x8
  212270:	mov	x9, #0x401                 	// #1025
  212274:	movk	x9, #0x8, lsl #32
  212278:	movk	x9, #0x800, lsl #48
  21227c:	and	x8, x8, x9
  212280:	cbz	x8, 2122e4 <parse_file+0x184>
  212284:	mov	w25, #0x5                   	// #5
  212288:	b	212488 <parse_file+0x328>
  21228c:	mov	w25, #0x4                   	// #4
  212290:	b	212488 <parse_file+0x328>
  212294:	mov	w0, wzr
  212298:	bl	212c00 <log_get_max_level_realm@plt>
  21229c:	cmp	w0, #0x3
  2122a0:	b.lt	2122d0 <parse_file+0x170>  // b.tstop
  2122a4:	mov	w0, #0x3                   	// #3
  2122a8:	mov	w3, #0x99                  	// #153
  2122ac:	mov	w1, w26
  2122b0:	mov	x2, x23
  2122b4:	mov	x4, x24
  2122b8:	mov	x5, x21
  2122bc:	mov	x6, x19
  2122c0:	bl	212c10 <log_internal_realm@plt>
  2122c4:	mov	w28, w0
  2122c8:	mov	w25, #0x1                   	// #1
  2122cc:	b	212488 <parse_file+0x328>
  2122d0:	mov	w8, wzr
  2122d4:	neg	w9, w26
  2122d8:	sub	w28, w8, w9, uxtb
  2122dc:	mov	w25, #0x1                   	// #1
  2122e0:	b	212488 <parse_file+0x328>
  2122e4:	mov	w1, #0x3d                  	// #61
  2122e8:	mov	x0, x26
  2122ec:	bl	212cf0 <strchr@plt>
  2122f0:	cbz	x0, 2123ec <parse_file+0x28c>
  2122f4:	mov	x27, x0
  2122f8:	mov	x0, x26
  2122fc:	mov	x21, x24
  212300:	mov	x24, x23
  212304:	strb	wzr, [x27], #1
  212308:	bl	212ce0 <strstrip@plt>
  21230c:	mov	x8, x0
  212310:	ldrb	w23, [x8], #1
  212314:	cmp	w23, #0x2d
  212318:	csel	x0, x8, x0, eq  // eq = none
  21231c:	bl	212c50 <sysctl_normalize@plt>
  212320:	mov	x26, x0
  212324:	mov	x0, x27
  212328:	bl	212ce0 <strstrip@plt>
  21232c:	mov	x27, x0
  212330:	mov	x0, x26
  212334:	bl	212848 <test_prefix>
  212338:	tbz	w0, #0, 212474 <parse_file+0x314>
  21233c:	ldr	x0, [sp, #24]
  212340:	mov	x1, x26
  212344:	bl	2128cc <ordered_hashmap_get>
  212348:	cbz	x0, 2123ac <parse_file+0x24c>
  21234c:	ldr	x1, [x0, #8]
  212350:	mov	x25, x0
  212354:	mov	x0, x27
  212358:	bl	212d00 <strcmp@plt>
  21235c:	cbz	w0, 212458 <parse_file+0x2f8>
  212360:	mov	w0, wzr
  212364:	bl	212c00 <log_get_max_level_realm@plt>
  212368:	cmp	w0, #0x7
  21236c:	b.lt	21239c <parse_file+0x23c>  // b.tstop
  212370:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  212374:	mov	w0, #0x7                   	// #7
  212378:	mov	w3, #0xc1                  	// #193
  21237c:	mov	w1, wzr
  212380:	mov	x2, x24
  212384:	mov	x4, x21
  212388:	add	x5, x5, #0x5da
  21238c:	mov	x6, x26
  212390:	mov	x7, x19
  212394:	str	w22, [sp]
  212398:	bl	212c10 <log_internal_realm@plt>
  21239c:	ldr	x0, [sp, #24]
  2123a0:	mov	x1, x26
  2123a4:	bl	2128e0 <ordered_hashmap_remove>
  2123a8:	bl	211e54 <option_free>
  2123ac:	cmp	w23, #0x2d
  2123b0:	cset	w2, eq  // eq = none
  2123b4:	mov	x0, x26
  2123b8:	mov	x1, x27
  2123bc:	bl	2128f4 <option_new>
  2123c0:	str	x0, [sp, #40]
  2123c4:	cbz	x0, 21243c <parse_file+0x2dc>
  2123c8:	mov	x2, x0
  2123cc:	ldr	x1, [x0]
  2123d0:	ldr	x0, [sp, #24]
  2123d4:	bl	2129e4 <ordered_hashmap_put>
  2123d8:	mov	x23, x24
  2123dc:	tbnz	w0, #31, 2124a8 <parse_file+0x348>
  2123e0:	mov	w25, wzr
  2123e4:	str	xzr, [sp, #40]
  2123e8:	b	21247c <parse_file+0x31c>
  2123ec:	bl	212c00 <log_get_max_level_realm@plt>
  2123f0:	cmp	w0, #0x4
  2123f4:	b.lt	212428 <parse_file+0x2c8>  // b.tstop
  2123f8:	adrp	x8, 201000 <option_hash_ops-0x2d8>
  2123fc:	mov	w1, #0x4                   	// #4
  212400:	mov	w6, #0xa6                  	// #166
  212404:	add	x8, x8, #0x886
  212408:	mov	x0, xzr
  21240c:	mov	x2, x19
  212410:	mov	w3, w22
  212414:	mov	w4, wzr
  212418:	mov	x5, x23
  21241c:	mov	x7, x24
  212420:	stp	x8, x26, [sp]
  212424:	bl	212d10 <log_syntax_internal@plt>
  212428:	cmp	w20, #0x0
  21242c:	mov	w8, #0xffffffea            	// #-22
  212430:	csel	w20, w8, w20, eq  // eq = none
  212434:	mov	w25, #0x5                   	// #5
  212438:	b	212488 <parse_file+0x328>
  21243c:	mov	w2, #0xc7                  	// #199
  212440:	mov	x1, x24
  212444:	mov	x3, x21
  212448:	mov	x23, x24
  21244c:	mov	x24, x21
  212450:	bl	212bc0 <log_oom_internal@plt>
  212454:	b	2124e4 <parse_file+0x384>
  212458:	ldrb	w8, [x25, #16]
  21245c:	cmp	w23, #0x2d
  212460:	cset	w9, eq  // eq = none
  212464:	cmp	w8, #0x0
  212468:	cset	w8, ne  // ne = any
  21246c:	orr	w8, w9, w8
  212470:	strb	w8, [x25, #16]
  212474:	mov	w25, #0x5                   	// #5
  212478:	mov	x23, x24
  21247c:	mov	x24, x21
  212480:	adrp	x21, 201000 <option_hash_ops-0x2d8>
  212484:	add	x21, x21, #0x787
  212488:	add	x0, sp, #0x20
  21248c:	bl	2127c0 <freep>
  212490:	add	x0, sp, #0x28
  212494:	bl	2127f0 <option_freep>
  212498:	cbz	w25, 212228 <parse_file+0xc8>
  21249c:	cmp	w25, #0x5
  2124a0:	b.eq	212228 <parse_file+0xc8>  // b.none
  2124a4:	b	212504 <parse_file+0x3a4>
  2124a8:	mov	w27, w0
  2124ac:	mov	w0, wzr
  2124b0:	bl	212c00 <log_get_max_level_realm@plt>
  2124b4:	cmp	w0, #0x3
  2124b8:	mov	x24, x21
  2124bc:	b.lt	2124f0 <parse_file+0x390>  // b.tstop
  2124c0:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  2124c4:	mov	w0, #0x3                   	// #3
  2124c8:	mov	w3, #0xcb                  	// #203
  2124cc:	mov	w1, w27
  2124d0:	mov	x2, x23
  2124d4:	mov	x4, x24
  2124d8:	add	x5, x5, #0x6b2
  2124dc:	mov	x6, x26
  2124e0:	bl	212c10 <log_internal_realm@plt>
  2124e4:	mov	w28, w0
  2124e8:	mov	w25, #0x1                   	// #1
  2124ec:	b	212480 <parse_file+0x320>
  2124f0:	mov	w8, wzr
  2124f4:	neg	w9, w27
  2124f8:	sub	w28, w8, w9, uxtb
  2124fc:	mov	w25, #0x1                   	// #1
  212500:	b	212480 <parse_file+0x320>
  212504:	cmp	w25, #0x4
  212508:	b.eq	212578 <parse_file+0x418>  // b.none
  21250c:	mov	w20, w28
  212510:	b	212578 <parse_file+0x418>
  212514:	cmn	w20, #0x2
  212518:	b.ne	212528 <parse_file+0x3c8>  // b.any
  21251c:	tbz	w22, #0, 212528 <parse_file+0x3c8>
  212520:	mov	w20, wzr
  212524:	b	212578 <parse_file+0x418>
  212528:	mov	w0, wzr
  21252c:	bl	212c00 <log_get_max_level_realm@plt>
  212530:	cmp	w0, #0x3
  212534:	b.lt	21256c <parse_file+0x40c>  // b.tstop
  212538:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  21253c:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  212540:	adrp	x5, 201000 <option_hash_ops-0x2d8>
  212544:	add	x2, x2, #0x7b1
  212548:	add	x4, x4, #0x77c
  21254c:	add	x5, x5, #0x72b
  212550:	mov	w0, #0x3                   	// #3
  212554:	mov	w3, #0x89                  	// #137
  212558:	mov	w1, w20
  21255c:	mov	x6, x19
  212560:	bl	212c10 <log_internal_realm@plt>
  212564:	mov	w20, w0
  212568:	b	212578 <parse_file+0x418>
  21256c:	mov	w8, wzr
  212570:	neg	w9, w20
  212574:	sub	w20, w8, w9, uxtb
  212578:	sub	x0, x29, #0x8
  21257c:	bl	2127d8 <fclosep>
  212580:	mov	w0, w20
  212584:	ldp	x20, x19, [sp, #192]
  212588:	ldp	x22, x21, [sp, #176]
  21258c:	ldp	x24, x23, [sp, #160]
  212590:	ldp	x26, x25, [sp, #144]
  212594:	ldp	x28, x27, [sp, #128]
  212598:	ldp	x29, x30, [sp, #112]
  21259c:	add	sp, sp, #0xd0
  2125a0:	ret
  2125a4:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  2125a8:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  2125ac:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  2125b0:	add	x1, x1, #0x864
  2125b4:	add	x2, x2, #0x7b1
  2125b8:	add	x4, x4, #0x677
  2125bc:	mov	w3, #0x82                  	// #130
  2125c0:	mov	w0, wzr
  2125c4:	bl	212cc0 <log_assert_failed_realm@plt>

00000000002125c8 <apply_all>:
  2125c8:	sub	sp, sp, #0x80
  2125cc:	stp	x29, x30, [sp, #32]
  2125d0:	add	x29, sp, #0x20
  2125d4:	mov	w8, #0xfffffffe            	// #-2
  2125d8:	add	x1, sp, #0x8
  2125dc:	sub	x2, x29, #0x8
  2125e0:	stp	x28, x27, [sp, #48]
  2125e4:	stp	x26, x25, [sp, #64]
  2125e8:	stp	x24, x23, [sp, #80]
  2125ec:	stp	x22, x21, [sp, #96]
  2125f0:	stp	x20, x19, [sp, #112]
  2125f4:	mov	x19, x0
  2125f8:	str	w8, [sp, #8]
  2125fc:	str	xzr, [sp, #16]
  212600:	bl	212a2c <ordered_hashmap_iterate>
  212604:	mov	w20, wzr
  212608:	tbz	w0, #0, 2126fc <apply_all+0x134>
  21260c:	adrp	x21, 201000 <option_hash_ops-0x2d8>
  212610:	adrp	x22, 201000 <option_hash_ops-0x2d8>
  212614:	adrp	x23, 201000 <option_hash_ops-0x2d8>
  212618:	adrp	x24, 201000 <option_hash_ops-0x2d8>
  21261c:	mov	w27, #0x1                   	// #1
  212620:	add	x21, x21, #0x7b1
  212624:	add	x22, x22, #0x641
  212628:	add	x23, x23, #0x6f5
  21262c:	add	x24, x24, #0x752
  212630:	mov	w26, #0x1                   	// #1
  212634:	movk	w27, #0x3002, lsl #16
  212638:	b	212658 <apply_all+0x90>
  21263c:	cmp	w20, #0x0
  212640:	csel	w20, w25, w20, eq  // eq = none
  212644:	add	x1, sp, #0x8
  212648:	sub	x2, x29, #0x8
  21264c:	mov	x0, x19
  212650:	bl	212a2c <ordered_hashmap_iterate>
  212654:	tbz	w0, #0, 2126fc <apply_all+0x134>
  212658:	ldur	x8, [x29, #-8]
  21265c:	ldp	x0, x1, [x8]
  212660:	bl	212d20 <sysctl_write@plt>
  212664:	tbz	w0, #31, 212644 <apply_all+0x7c>
  212668:	add	w8, w0, #0x1e
  21266c:	mov	w25, w0
  212670:	cmp	w8, #0x1d
  212674:	b.hi	2126bc <apply_all+0xf4>  // b.pmore
  212678:	lsl	w8, w26, w8
  21267c:	tst	w8, w27
  212680:	b.eq	2126bc <apply_all+0xf4>  // b.none
  212684:	mov	w0, wzr
  212688:	bl	212c00 <log_get_max_level_realm@plt>
  21268c:	cmp	w0, #0x5
  212690:	b.lt	212644 <apply_all+0x7c>  // b.tstop
  212694:	ldur	x8, [x29, #-8]
  212698:	mov	w0, #0x5                   	// #5
  21269c:	mov	w3, #0x5e                  	// #94
  2126a0:	mov	w1, w25
  2126a4:	ldp	x7, x6, [x8]
  2126a8:	mov	x2, x21
  2126ac:	mov	x4, x22
  2126b0:	mov	x5, x24
  2126b4:	bl	212c10 <log_internal_realm@plt>
  2126b8:	b	212644 <apply_all+0x7c>
  2126bc:	ldur	x28, [x29, #-8]
  2126c0:	ldrb	w8, [x28, #16]
  2126c4:	cbnz	w8, 212684 <apply_all+0xbc>
  2126c8:	mov	w0, wzr
  2126cc:	bl	212c00 <log_get_max_level_realm@plt>
  2126d0:	cmp	w0, #0x3
  2126d4:	b.lt	21263c <apply_all+0x74>  // b.tstop
  2126d8:	ldp	x7, x6, [x28]
  2126dc:	mov	w0, #0x3                   	// #3
  2126e0:	mov	w3, #0x60                  	// #96
  2126e4:	mov	w1, w25
  2126e8:	mov	x2, x21
  2126ec:	mov	x4, x22
  2126f0:	mov	x5, x23
  2126f4:	bl	212c10 <log_internal_realm@plt>
  2126f8:	b	21263c <apply_all+0x74>
  2126fc:	mov	w0, w20
  212700:	ldp	x20, x19, [sp, #112]
  212704:	ldp	x22, x21, [sp, #96]
  212708:	ldp	x24, x23, [sp, #80]
  21270c:	ldp	x26, x25, [sp, #64]
  212710:	ldp	x28, x27, [sp, #48]
  212714:	ldp	x29, x30, [sp, #32]
  212718:	add	sp, sp, #0x80
  21271c:	ret

0000000000212720 <ordered_hashmap_free>:
  212720:	stp	x29, x30, [sp, #-16]!
  212724:	mov	x1, xzr
  212728:	mov	x2, xzr
  21272c:	mov	x29, sp
  212730:	bl	212d30 <internal_hashmap_free@plt>
  212734:	ldp	x29, x30, [sp], #16
  212738:	ret

000000000021273c <help>:
  21273c:	stp	x29, x30, [sp, #-32]!
  212740:	mov	x29, sp
  212744:	adrp	x0, 201000 <option_hash_ops-0x2d8>
  212748:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  21274c:	add	x0, x0, #0x804
  212750:	add	x1, x1, #0x71b
  212754:	add	x2, x29, #0x18
  212758:	str	x19, [sp, #16]
  21275c:	str	xzr, [x29, #24]
  212760:	bl	212d40 <terminal_urlify_man@plt>
  212764:	tbnz	w0, #31, 212788 <help+0x4c>
  212768:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  21276c:	ldr	x1, [x8, #392]
  212770:	ldr	x2, [x29, #24]
  212774:	adrp	x0, 201000 <option_hash_ops-0x2d8>
  212778:	add	x0, x0, #0x476
  21277c:	bl	212d50 <printf@plt>
  212780:	mov	w19, wzr
  212784:	b	2127a8 <help+0x6c>
  212788:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  21278c:	adrp	x3, 201000 <option_hash_ops-0x2d8>
  212790:	add	x1, x1, #0x7b1
  212794:	add	x3, x3, #0x858
  212798:	mov	w2, #0xd9                  	// #217
  21279c:	mov	w0, wzr
  2127a0:	bl	212bc0 <log_oom_internal@plt>
  2127a4:	mov	w19, w0
  2127a8:	add	x0, x29, #0x18
  2127ac:	bl	2127c0 <freep>
  2127b0:	mov	w0, w19
  2127b4:	ldr	x19, [sp, #16]
  2127b8:	ldp	x29, x30, [sp], #32
  2127bc:	ret

00000000002127c0 <freep>:
  2127c0:	stp	x29, x30, [sp, #-16]!
  2127c4:	ldr	x0, [x0]
  2127c8:	mov	x29, sp
  2127cc:	bl	212c30 <free@plt>
  2127d0:	ldp	x29, x30, [sp], #16
  2127d4:	ret

00000000002127d8 <fclosep>:
  2127d8:	stp	x29, x30, [sp, #-16]!
  2127dc:	ldr	x0, [x0]
  2127e0:	mov	x29, sp
  2127e4:	bl	212d60 <safe_fclose@plt>
  2127e8:	ldp	x29, x30, [sp], #16
  2127ec:	ret

00000000002127f0 <option_freep>:
  2127f0:	stp	x29, x30, [sp, #-16]!
  2127f4:	ldr	x0, [x0]
  2127f8:	mov	x29, sp
  2127fc:	cbz	x0, 212804 <option_freep+0x14>
  212800:	bl	211e54 <option_free>
  212804:	ldp	x29, x30, [sp], #16
  212808:	ret

000000000021280c <read_line>:
  21280c:	stp	x29, x30, [sp, #-16]!
  212810:	mov	x3, x1
  212814:	mov	w1, #0x100000              	// #1048576
  212818:	mov	w2, wzr
  21281c:	mov	x29, sp
  212820:	bl	212d70 <read_line_full@plt>
  212824:	ldp	x29, x30, [sp], #16
  212828:	ret

000000000021282c <isempty>:
  21282c:	cbz	x0, 212840 <isempty+0x14>
  212830:	ldrb	w8, [x0]
  212834:	cmp	w8, #0x0
  212838:	cset	w0, eq  // eq = none
  21283c:	ret
  212840:	mov	w0, #0x1                   	// #1
  212844:	ret

0000000000212848 <test_prefix>:
  212848:	stp	x29, x30, [sp, #-48]!
  21284c:	adrp	x8, 233000 <_DYNAMIC+0x10210>
  212850:	stp	x20, x19, [sp, #32]
  212854:	ldr	x20, [x8, #344]
  212858:	mov	x19, x0
  21285c:	stp	x22, x21, [sp, #16]
  212860:	mov	x29, sp
  212864:	mov	x0, x20
  212868:	bl	2129f8 <strv_isempty>
  21286c:	tbz	w0, #0, 212878 <test_prefix+0x30>
  212870:	mov	w0, #0x1                   	// #1
  212874:	b	2128bc <test_prefix+0x74>
  212878:	cbz	x20, 2128b8 <test_prefix+0x70>
  21287c:	ldr	x21, [x20]
  212880:	cbz	x21, 2128b8 <test_prefix+0x70>
  212884:	add	x22, x20, #0x8
  212888:	adrp	x20, 201000 <option_hash_ops-0x2d8>
  21288c:	add	x20, x20, #0x7e8
  212890:	mov	x0, x21
  212894:	mov	x1, x20
  212898:	bl	212c60 <path_startswith@plt>
  21289c:	cmp	x0, #0x0
  2128a0:	csel	x1, x21, x0, eq  // eq = none
  2128a4:	mov	x0, x19
  2128a8:	bl	212c60 <path_startswith@plt>
  2128ac:	cbnz	x0, 212870 <test_prefix+0x28>
  2128b0:	ldr	x21, [x22], #8
  2128b4:	cbnz	x21, 212890 <test_prefix+0x48>
  2128b8:	mov	w0, wzr
  2128bc:	ldp	x20, x19, [sp, #32]
  2128c0:	ldp	x22, x21, [sp, #16]
  2128c4:	ldp	x29, x30, [sp], #48
  2128c8:	ret

00000000002128cc <ordered_hashmap_get>:
  2128cc:	stp	x29, x30, [sp, #-16]!
  2128d0:	mov	x29, sp
  2128d4:	bl	212d80 <internal_hashmap_get@plt>
  2128d8:	ldp	x29, x30, [sp], #16
  2128dc:	ret

00000000002128e0 <ordered_hashmap_remove>:
  2128e0:	stp	x29, x30, [sp, #-16]!
  2128e4:	mov	x29, sp
  2128e8:	bl	212d90 <internal_hashmap_remove@plt>
  2128ec:	ldp	x29, x30, [sp], #16
  2128f0:	ret

00000000002128f4 <option_new>:
  2128f4:	sub	sp, sp, #0x40
  2128f8:	stp	x29, x30, [sp, #16]
  2128fc:	stp	x22, x21, [sp, #32]
  212900:	stp	x20, x19, [sp, #48]
  212904:	add	x29, sp, #0x10
  212908:	str	xzr, [sp, #8]
  21290c:	cbz	x0, 2129a0 <option_new+0xac>
  212910:	mov	x19, x1
  212914:	cbz	x1, 2129c0 <option_new+0xcc>
  212918:	mov	w22, w2
  21291c:	mov	x21, x0
  212920:	bl	212a14 <malloc_multiply>
  212924:	str	x0, [sp, #8]
  212928:	cbz	x0, 21297c <option_new+0x88>
  21292c:	mov	x20, x0
  212930:	mov	x0, x21
  212934:	and	w22, w22, #0x1
  212938:	bl	212c70 <strdup@plt>
  21293c:	mov	x21, x0
  212940:	mov	x0, x19
  212944:	bl	212c70 <strdup@plt>
  212948:	ldr	w8, [sp]
  21294c:	ldur	w9, [sp, #3]
  212950:	ldr	x19, [sp, #8]
  212954:	stp	x21, x0, [x20]
  212958:	strb	w22, [x20, #16]
  21295c:	stur	w8, [x20, #17]
  212960:	str	w9, [x20, #20]
  212964:	ldr	x8, [x19]
  212968:	cbz	x8, 21297c <option_new+0x88>
  21296c:	ldr	x8, [x19, #8]
  212970:	cbz	x8, 21297c <option_new+0x88>
  212974:	str	xzr, [sp, #8]
  212978:	b	212980 <option_new+0x8c>
  21297c:	mov	x19, xzr
  212980:	add	x0, sp, #0x8
  212984:	bl	2127f0 <option_freep>
  212988:	mov	x0, x19
  21298c:	ldp	x20, x19, [sp, #48]
  212990:	ldp	x22, x21, [sp, #32]
  212994:	ldp	x29, x30, [sp, #16]
  212998:	add	sp, sp, #0x40
  21299c:	ret
  2129a0:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  2129a4:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  2129a8:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  2129ac:	add	x1, x1, #0x64b
  2129b0:	add	x2, x2, #0x7b1
  2129b4:	add	x4, x4, #0x60b
  2129b8:	mov	w3, #0x3a                  	// #58
  2129bc:	bl	212cc0 <log_assert_failed_realm@plt>
  2129c0:	adrp	x1, 201000 <option_hash_ops-0x2d8>
  2129c4:	adrp	x2, 201000 <option_hash_ops-0x2d8>
  2129c8:	adrp	x4, 201000 <option_hash_ops-0x2d8>
  2129cc:	add	x1, x1, #0x434
  2129d0:	add	x2, x2, #0x7b1
  2129d4:	add	x4, x4, #0x60b
  2129d8:	mov	w3, #0x3b                  	// #59
  2129dc:	mov	w0, wzr
  2129e0:	bl	212cc0 <log_assert_failed_realm@plt>

00000000002129e4 <ordered_hashmap_put>:
  2129e4:	stp	x29, x30, [sp, #-16]!
  2129e8:	mov	x29, sp
  2129ec:	bl	212da0 <hashmap_put@plt>
  2129f0:	ldp	x29, x30, [sp], #16
  2129f4:	ret

00000000002129f8 <strv_isempty>:
  2129f8:	cbz	x0, 212a0c <strv_isempty+0x14>
  2129fc:	ldr	x8, [x0]
  212a00:	cmp	x8, #0x0
  212a04:	cset	w0, eq  // eq = none
  212a08:	ret
  212a0c:	mov	w0, #0x1                   	// #1
  212a10:	ret

0000000000212a14 <malloc_multiply>:
  212a14:	stp	x29, x30, [sp, #-16]!
  212a18:	mov	w0, #0x18                  	// #24
  212a1c:	mov	x29, sp
  212a20:	bl	212db0 <malloc@plt>
  212a24:	ldp	x29, x30, [sp], #16
  212a28:	ret

0000000000212a2c <ordered_hashmap_iterate>:
  212a2c:	stp	x29, x30, [sp, #-16]!
  212a30:	mov	x3, xzr
  212a34:	mov	x29, sp
  212a38:	bl	212dc0 <internal_hashmap_iterate@plt>
  212a3c:	and	w0, w0, #0x1
  212a40:	ldp	x29, x30, [sp], #16
  212a44:	ret

0000000000212a48 <ALIGN_TO>:
  212a48:	add	x8, x0, #0x7
  212a4c:	and	x0, x8, #0xfffffffffffffff8
  212a50:	ret
  212a54:	udf	#0

0000000000212a58 <__libc_csu_init>:
  212a58:	stp	x29, x30, [sp, #-64]!
  212a5c:	mov	x29, sp
  212a60:	stp	x19, x20, [sp, #16]
  212a64:	adrp	x20, 222000 <string_hash_func@plt+0xf230>
  212a68:	add	x20, x20, #0xdf0
  212a6c:	stp	x21, x22, [sp, #32]
  212a70:	adrp	x21, 222000 <string_hash_func@plt+0xf230>
  212a74:	add	x21, x21, #0xde8
  212a78:	sub	x20, x20, x21
  212a7c:	mov	w22, w0
  212a80:	stp	x23, x24, [sp, #48]
  212a84:	mov	x23, x1
  212a88:	mov	x24, x2
  212a8c:	bl	212adc <_init>
  212a90:	cmp	xzr, x20, asr #3
  212a94:	b.eq	212ac0 <__libc_csu_init+0x68>  // b.none
  212a98:	asr	x20, x20, #3
  212a9c:	mov	x19, #0x0                   	// #0
  212aa0:	ldr	x3, [x21, x19, lsl #3]
  212aa4:	mov	x2, x24
  212aa8:	add	x19, x19, #0x1
  212aac:	mov	x1, x23
  212ab0:	mov	w0, w22
  212ab4:	blr	x3
  212ab8:	cmp	x20, x19
  212abc:	b.ne	212aa0 <__libc_csu_init+0x48>  // b.any
  212ac0:	ldp	x19, x20, [sp, #16]
  212ac4:	ldp	x21, x22, [sp, #32]
  212ac8:	ldp	x23, x24, [sp, #48]
  212acc:	ldp	x29, x30, [sp], #64
  212ad0:	ret
  212ad4:	nop

0000000000212ad8 <__libc_csu_fini>:
  212ad8:	ret

Disassembly of section .init:

0000000000212adc <_init>:
  212adc:	stp	x29, x30, [sp, #-16]!
  212ae0:	mov	x29, sp
  212ae4:	bl	211a48 <call_weak_fn>
  212ae8:	ldp	x29, x30, [sp], #16
  212aec:	ret

Disassembly of section .fini:

0000000000212af0 <_fini>:
  212af0:	stp	x29, x30, [sp, #-16]!
  212af4:	mov	x29, sp
  212af8:	ldp	x29, x30, [sp], #16
  212afc:	ret

Disassembly of section .plt:

0000000000212b00 <__libc_start_main@plt-0x20>:
  212b00:	stp	x16, x30, [sp, #-16]!
  212b04:	adrp	x16, 222000 <string_hash_func@plt+0xf230>
  212b08:	ldr	x17, [x16, #4072]
  212b0c:	add	x16, x16, #0xfe8
  212b10:	br	x17
  212b14:	nop
  212b18:	nop
  212b1c:	nop

0000000000212b20 <__libc_start_main@plt>:
  212b20:	adrp	x16, 222000 <string_hash_func@plt+0xf230>
  212b24:	ldr	x17, [x16, #4080]
  212b28:	add	x16, x16, #0xff0
  212b2c:	br	x17

0000000000212b30 <abort@plt>:
  212b30:	adrp	x16, 222000 <string_hash_func@plt+0xf230>
  212b34:	ldr	x17, [x16, #4088]
  212b38:	add	x16, x16, #0xff8
  212b3c:	br	x17

0000000000212b40 <__gmon_start__@plt>:
  212b40:	adrp	x16, 223000 <__gmon_start__@Base>
  212b44:	ldr	x17, [x16]
  212b48:	add	x16, x16, #0x0
  212b4c:	br	x17

0000000000212b50 <ask_password_agent_close@plt>:
  212b50:	adrp	x16, 223000 <__gmon_start__@Base>
  212b54:	ldr	x17, [x16, #8]
  212b58:	add	x16, x16, #0x8
  212b5c:	br	x17

0000000000212b60 <polkit_agent_close@plt>:
  212b60:	adrp	x16, 223000 <__gmon_start__@Base>
  212b64:	ldr	x17, [x16, #16]
  212b68:	add	x16, x16, #0x10
  212b6c:	br	x17

0000000000212b70 <pager_close@plt>:
  212b70:	adrp	x16, 223000 <__gmon_start__@Base>
  212b74:	ldr	x17, [x16, #24]
  212b78:	add	x16, x16, #0x18
  212b7c:	br	x17

0000000000212b80 <mac_selinux_finish@plt>:
  212b80:	adrp	x16, 223000 <__gmon_start__@Base>
  212b84:	ldr	x17, [x16, #32]
  212b88:	add	x16, x16, #0x20
  212b8c:	br	x17

0000000000212b90 <log_setup_service@plt>:
  212b90:	adrp	x16, 223000 <__gmon_start__@Base>
  212b94:	ldr	x17, [x16, #40]
  212b98:	add	x16, x16, #0x28
  212b9c:	br	x17

0000000000212ba0 <umask@plt>:
  212ba0:	adrp	x16, 223000 <__gmon_start__@Base>
  212ba4:	ldr	x17, [x16, #48]
  212ba8:	add	x16, x16, #0x30
  212bac:	br	x17

0000000000212bb0 <internal_ordered_hashmap_new@plt>:
  212bb0:	adrp	x16, 223000 <__gmon_start__@Base>
  212bb4:	ldr	x17, [x16, #56]
  212bb8:	add	x16, x16, #0x38
  212bbc:	br	x17

0000000000212bc0 <log_oom_internal@plt>:
  212bc0:	adrp	x16, 223000 <__gmon_start__@Base>
  212bc4:	ldr	x17, [x16, #64]
  212bc8:	add	x16, x16, #0x40
  212bcc:	br	x17

0000000000212bd0 <conf_files_list_strv@plt>:
  212bd0:	adrp	x16, 223000 <__gmon_start__@Base>
  212bd4:	ldr	x17, [x16, #72]
  212bd8:	add	x16, x16, #0x48
  212bdc:	br	x17

0000000000212be0 <pager_open@plt>:
  212be0:	adrp	x16, 223000 <__gmon_start__@Base>
  212be4:	ldr	x17, [x16, #80]
  212be8:	add	x16, x16, #0x50
  212bec:	br	x17

0000000000212bf0 <cat_files@plt>:
  212bf0:	adrp	x16, 223000 <__gmon_start__@Base>
  212bf4:	ldr	x17, [x16, #88]
  212bf8:	add	x16, x16, #0x58
  212bfc:	br	x17

0000000000212c00 <log_get_max_level_realm@plt>:
  212c00:	adrp	x16, 223000 <__gmon_start__@Base>
  212c04:	ldr	x17, [x16, #96]
  212c08:	add	x16, x16, #0x60
  212c0c:	br	x17

0000000000212c10 <log_internal_realm@plt>:
  212c10:	adrp	x16, 223000 <__gmon_start__@Base>
  212c14:	ldr	x17, [x16, #104]
  212c18:	add	x16, x16, #0x68
  212c1c:	br	x17

0000000000212c20 <strv_free@plt>:
  212c20:	adrp	x16, 223000 <__gmon_start__@Base>
  212c24:	ldr	x17, [x16, #112]
  212c28:	add	x16, x16, #0x70
  212c2c:	br	x17

0000000000212c30 <free@plt>:
  212c30:	adrp	x16, 223000 <__gmon_start__@Base>
  212c34:	ldr	x17, [x16, #120]
  212c38:	add	x16, x16, #0x78
  212c3c:	br	x17

0000000000212c40 <getopt_long@plt>:
  212c40:	adrp	x16, 223000 <__gmon_start__@Base>
  212c44:	ldr	x17, [x16, #128]
  212c48:	add	x16, x16, #0x80
  212c4c:	br	x17

0000000000212c50 <sysctl_normalize@plt>:
  212c50:	adrp	x16, 223000 <__gmon_start__@Base>
  212c54:	ldr	x17, [x16, #136]
  212c58:	add	x16, x16, #0x88
  212c5c:	br	x17

0000000000212c60 <path_startswith@plt>:
  212c60:	adrp	x16, 223000 <__gmon_start__@Base>
  212c64:	ldr	x17, [x16, #144]
  212c68:	add	x16, x16, #0x90
  212c6c:	br	x17

0000000000212c70 <strdup@plt>:
  212c70:	adrp	x16, 223000 <__gmon_start__@Base>
  212c74:	ldr	x17, [x16, #152]
  212c78:	add	x16, x16, #0x98
  212c7c:	br	x17

0000000000212c80 <path_join_internal@plt>:
  212c80:	adrp	x16, 223000 <__gmon_start__@Base>
  212c84:	ldr	x17, [x16, #160]
  212c88:	add	x16, x16, #0xa0
  212c8c:	br	x17

0000000000212c90 <strv_consume@plt>:
  212c90:	adrp	x16, 223000 <__gmon_start__@Base>
  212c94:	ldr	x17, [x16, #168]
  212c98:	add	x16, x16, #0xa8
  212c9c:	br	x17

0000000000212ca0 <version@plt>:
  212ca0:	adrp	x16, 223000 <__gmon_start__@Base>
  212ca4:	ldr	x17, [x16, #176]
  212ca8:	add	x16, x16, #0xb0
  212cac:	br	x17

0000000000212cb0 <log_assert_failed_unreachable_realm@plt>:
  212cb0:	adrp	x16, 223000 <__gmon_start__@Base>
  212cb4:	ldr	x17, [x16, #184]
  212cb8:	add	x16, x16, #0xb8
  212cbc:	br	x17

0000000000212cc0 <log_assert_failed_realm@plt>:
  212cc0:	adrp	x16, 223000 <__gmon_start__@Base>
  212cc4:	ldr	x17, [x16, #192]
  212cc8:	add	x16, x16, #0xc0
  212ccc:	br	x17

0000000000212cd0 <search_and_fopen@plt>:
  212cd0:	adrp	x16, 223000 <__gmon_start__@Base>
  212cd4:	ldr	x17, [x16, #200]
  212cd8:	add	x16, x16, #0xc8
  212cdc:	br	x17

0000000000212ce0 <strstrip@plt>:
  212ce0:	adrp	x16, 223000 <__gmon_start__@Base>
  212ce4:	ldr	x17, [x16, #208]
  212ce8:	add	x16, x16, #0xd0
  212cec:	br	x17

0000000000212cf0 <strchr@plt>:
  212cf0:	adrp	x16, 223000 <__gmon_start__@Base>
  212cf4:	ldr	x17, [x16, #216]
  212cf8:	add	x16, x16, #0xd8
  212cfc:	br	x17

0000000000212d00 <strcmp@plt>:
  212d00:	adrp	x16, 223000 <__gmon_start__@Base>
  212d04:	ldr	x17, [x16, #224]
  212d08:	add	x16, x16, #0xe0
  212d0c:	br	x17

0000000000212d10 <log_syntax_internal@plt>:
  212d10:	adrp	x16, 223000 <__gmon_start__@Base>
  212d14:	ldr	x17, [x16, #232]
  212d18:	add	x16, x16, #0xe8
  212d1c:	br	x17

0000000000212d20 <sysctl_write@plt>:
  212d20:	adrp	x16, 223000 <__gmon_start__@Base>
  212d24:	ldr	x17, [x16, #240]
  212d28:	add	x16, x16, #0xf0
  212d2c:	br	x17

0000000000212d30 <internal_hashmap_free@plt>:
  212d30:	adrp	x16, 223000 <__gmon_start__@Base>
  212d34:	ldr	x17, [x16, #248]
  212d38:	add	x16, x16, #0xf8
  212d3c:	br	x17

0000000000212d40 <terminal_urlify_man@plt>:
  212d40:	adrp	x16, 223000 <__gmon_start__@Base>
  212d44:	ldr	x17, [x16, #256]
  212d48:	add	x16, x16, #0x100
  212d4c:	br	x17

0000000000212d50 <printf@plt>:
  212d50:	adrp	x16, 223000 <__gmon_start__@Base>
  212d54:	ldr	x17, [x16, #264]
  212d58:	add	x16, x16, #0x108
  212d5c:	br	x17

0000000000212d60 <safe_fclose@plt>:
  212d60:	adrp	x16, 223000 <__gmon_start__@Base>
  212d64:	ldr	x17, [x16, #272]
  212d68:	add	x16, x16, #0x110
  212d6c:	br	x17

0000000000212d70 <read_line_full@plt>:
  212d70:	adrp	x16, 223000 <__gmon_start__@Base>
  212d74:	ldr	x17, [x16, #280]
  212d78:	add	x16, x16, #0x118
  212d7c:	br	x17

0000000000212d80 <internal_hashmap_get@plt>:
  212d80:	adrp	x16, 223000 <__gmon_start__@Base>
  212d84:	ldr	x17, [x16, #288]
  212d88:	add	x16, x16, #0x120
  212d8c:	br	x17

0000000000212d90 <internal_hashmap_remove@plt>:
  212d90:	adrp	x16, 223000 <__gmon_start__@Base>
  212d94:	ldr	x17, [x16, #296]
  212d98:	add	x16, x16, #0x128
  212d9c:	br	x17

0000000000212da0 <hashmap_put@plt>:
  212da0:	adrp	x16, 223000 <__gmon_start__@Base>
  212da4:	ldr	x17, [x16, #304]
  212da8:	add	x16, x16, #0x130
  212dac:	br	x17

0000000000212db0 <malloc@plt>:
  212db0:	adrp	x16, 223000 <__gmon_start__@Base>
  212db4:	ldr	x17, [x16, #312]
  212db8:	add	x16, x16, #0x138
  212dbc:	br	x17

0000000000212dc0 <internal_hashmap_iterate@plt>:
  212dc0:	adrp	x16, 223000 <__gmon_start__@Base>
  212dc4:	ldr	x17, [x16, #320]
  212dc8:	add	x16, x16, #0x140
  212dcc:	br	x17

0000000000212dd0 <string_hash_func@plt>:
  212dd0:	adrp	x16, 223000 <__gmon_start__@Base>
  212dd4:	ldr	x17, [x16, #328]
  212dd8:	add	x16, x16, #0x148
  212ddc:	br	x17
