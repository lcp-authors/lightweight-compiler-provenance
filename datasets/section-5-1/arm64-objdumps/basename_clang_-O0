
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//basename_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000768 <_init>:
 768:	stp	x29, x30, [sp, #-16]!
 76c:	mov	x29, sp
 770:	bl	820 <call_weak_fn>
 774:	ldp	x29, x30, [sp], #16
 778:	ret

Disassembly of section .plt:

0000000000000780 <.plt>:
 780:	stp	x16, x30, [sp, #-16]!
 784:	adrp	x16, 10000 <__FRAME_END__+0xf354>
 788:	ldr	x17, [x16, #4088]
 78c:	add	x16, x16, #0xff8
 790:	br	x17
 794:	nop
 798:	nop
 79c:	nop

00000000000007a0 <strlen@plt>:
 7a0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7a4:	ldr	x17, [x16]
 7a8:	add	x16, x16, #0x0
 7ac:	br	x17

00000000000007b0 <fputs@plt>:
 7b0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #8]
 7b8:	add	x16, x16, #0x8
 7bc:	br	x17

00000000000007c0 <__cxa_finalize@plt>:
 7c0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #16]
 7c8:	add	x16, x16, #0x10
 7cc:	br	x17

00000000000007d0 <builtin_usage@plt>:
 7d0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #24]
 7d8:	add	x16, x16, #0x18
 7dc:	br	x17

00000000000007e0 <__gmon_start__@plt>:
 7e0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #32]
 7e8:	add	x16, x16, #0x20
 7ec:	br	x17

00000000000007f0 <strcmp@plt>:
 7f0:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #40]
 7f8:	add	x16, x16, #0x28
 7fc:	br	x17

0000000000000800 <no_options@plt>:
 800:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 804:	ldr	x17, [x16, #48]
 808:	add	x16, x16, #0x30
 80c:	br	x17

0000000000000810 <printf@plt>:
 810:	adrp	x16, 11000 <strlen@GLIBC_2.17>
 814:	ldr	x17, [x16, #56]
 818:	add	x16, x16, #0x38
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <call_weak_fn>:
 820:	adrp	x0, 10000 <__FRAME_END__+0xf354>
 824:	ldr	x0, [x0, #4048]
 828:	cbz	x0, 830 <call_weak_fn+0x10>
 82c:	b	7e0 <__gmon_start__@plt>
 830:	ret
 834:	nop

0000000000000838 <deregister_tm_clones>:
 838:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 83c:	add	x0, x0, #0xa8
 840:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 844:	add	x1, x1, #0xa8
 848:	cmp	x1, x0
 84c:	b.eq	864 <deregister_tm_clones+0x2c>  // b.none
 850:	adrp	x1, 10000 <__FRAME_END__+0xf354>
 854:	ldr	x1, [x1, #4024]
 858:	cbz	x1, 864 <deregister_tm_clones+0x2c>
 85c:	mov	x16, x1
 860:	br	x16
 864:	ret

0000000000000868 <register_tm_clones>:
 868:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 86c:	add	x0, x0, #0xa8
 870:	adrp	x1, 11000 <strlen@GLIBC_2.17>
 874:	add	x1, x1, #0xa8
 878:	sub	x1, x1, x0
 87c:	lsr	x2, x1, #63
 880:	add	x1, x2, x1, asr #3
 884:	cmp	xzr, x1, asr #1
 888:	asr	x1, x1, #1
 88c:	b.eq	8a4 <register_tm_clones+0x3c>  // b.none
 890:	adrp	x2, 10000 <__FRAME_END__+0xf354>
 894:	ldr	x2, [x2, #4064]
 898:	cbz	x2, 8a4 <register_tm_clones+0x3c>
 89c:	mov	x16, x2
 8a0:	br	x16
 8a4:	ret

00000000000008a8 <__do_global_dtors_aux>:
 8a8:	stp	x29, x30, [sp, #-32]!
 8ac:	mov	x29, sp
 8b0:	str	x19, [sp, #16]
 8b4:	adrp	x19, 11000 <strlen@GLIBC_2.17>
 8b8:	ldrb	w0, [x19, #168]
 8bc:	cbnz	w0, 8e4 <__do_global_dtors_aux+0x3c>
 8c0:	adrp	x0, 10000 <__FRAME_END__+0xf354>
 8c4:	ldr	x0, [x0, #4032]
 8c8:	cbz	x0, 8d8 <__do_global_dtors_aux+0x30>
 8cc:	adrp	x0, 11000 <strlen@GLIBC_2.17>
 8d0:	ldr	x0, [x0, #64]
 8d4:	bl	7c0 <__cxa_finalize@plt>
 8d8:	bl	838 <deregister_tm_clones>
 8dc:	mov	w0, #0x1                   	// #1
 8e0:	strb	w0, [x19, #168]
 8e4:	ldr	x19, [sp, #16]
 8e8:	ldp	x29, x30, [sp], #32
 8ec:	ret

00000000000008f0 <frame_dummy>:
 8f0:	b	868 <register_tm_clones>

00000000000008f4 <basename_builtin>:
 8f4:	sub	sp, sp, #0x50
 8f8:	stp	x29, x30, [sp, #64]
 8fc:	add	x29, sp, #0x40
 900:	stur	x0, [x29, #-16]
 904:	ldur	x8, [x29, #-16]
 908:	cbnz	x8, 91c <basename_builtin+0x28>
 90c:	bl	7d0 <builtin_usage@plt>
 910:	mov	w8, #0x102                 	// #258
 914:	stur	w8, [x29, #-4]
 918:	b	b00 <basename_builtin+0x20c>
 91c:	ldur	x0, [x29, #-16]
 920:	bl	800 <no_options@plt>
 924:	cbz	w0, 934 <basename_builtin+0x40>
 928:	mov	w8, #0x102                 	// #258
 92c:	stur	w8, [x29, #-4]
 930:	b	b00 <basename_builtin+0x20c>
 934:	adrp	x8, 10000 <__FRAME_END__+0xf354>
 938:	ldr	x8, [x8, #4056]
 93c:	ldr	x8, [x8]
 940:	stur	x8, [x29, #-16]
 944:	ldur	x8, [x29, #-16]
 948:	ldr	x8, [x8, #8]
 94c:	ldr	x8, [x8]
 950:	str	x8, [sp, #24]
 954:	mov	x8, xzr
 958:	str	x8, [sp, #16]
 95c:	ldur	x8, [x29, #-16]
 960:	ldr	x8, [x8]
 964:	cbz	x8, 984 <basename_builtin+0x90>
 968:	ldur	x8, [x29, #-16]
 96c:	ldr	x8, [x8]
 970:	stur	x8, [x29, #-16]
 974:	ldur	x8, [x29, #-16]
 978:	ldr	x8, [x8, #8]
 97c:	ldr	x8, [x8]
 980:	str	x8, [sp, #16]
 984:	ldur	x8, [x29, #-16]
 988:	ldr	x8, [x8]
 98c:	cbz	x8, 9a0 <basename_builtin+0xac>
 990:	bl	7d0 <builtin_usage@plt>
 994:	mov	w8, #0x102                 	// #258
 998:	stur	w8, [x29, #-4]
 99c:	b	b00 <basename_builtin+0x20c>
 9a0:	ldr	x0, [sp, #24]
 9a4:	bl	7a0 <strlen@plt>
 9a8:	stur	w0, [x29, #-20]
 9ac:	ldur	w8, [x29, #-20]
 9b0:	cmp	w8, #0x0
 9b4:	cset	w8, le
 9b8:	mov	w9, #0x0                   	// #0
 9bc:	str	w9, [sp, #4]
 9c0:	tbnz	w8, #0, 9e0 <basename_builtin+0xec>
 9c4:	ldr	x8, [sp, #24]
 9c8:	ldur	w9, [x29, #-20]
 9cc:	subs	w9, w9, #0x1
 9d0:	ldrb	w9, [x8, w9, sxtw]
 9d4:	cmp	w9, #0x2f
 9d8:	cset	w9, eq  // eq = none
 9dc:	str	w9, [sp, #4]
 9e0:	ldr	w8, [sp, #4]
 9e4:	tbnz	w8, #0, 9ec <basename_builtin+0xf8>
 9e8:	b	9fc <basename_builtin+0x108>
 9ec:	ldur	w8, [x29, #-20]
 9f0:	subs	w8, w8, #0x1
 9f4:	stur	w8, [x29, #-20]
 9f8:	b	9ac <basename_builtin+0xb8>
 9fc:	ldur	w8, [x29, #-20]
 a00:	cbnz	w8, a24 <basename_builtin+0x130>
 a04:	adrp	x8, 10000 <__FRAME_END__+0xf354>
 a08:	ldr	x8, [x8, #4040]
 a0c:	ldr	x1, [x8]
 a10:	adrp	x0, 0 <_init-0x768>
 a14:	add	x0, x0, #0xb20
 a18:	bl	7b0 <fputs@plt>
 a1c:	stur	wzr, [x29, #-4]
 a20:	b	b00 <basename_builtin+0x20c>
 a24:	ldr	x8, [sp, #24]
 a28:	ldursw	x9, [x29, #-20]
 a2c:	add	x8, x8, x9
 a30:	mov	w10, #0x0                   	// #0
 a34:	strb	w10, [x8]
 a38:	ldur	w8, [x29, #-20]
 a3c:	subs	w8, w8, #0x1
 a40:	stur	w8, [x29, #-20]
 a44:	cmp	w8, #0x0
 a48:	cset	w8, lt  // lt = tstop
 a4c:	tbnz	w8, #0, a6c <basename_builtin+0x178>
 a50:	ldr	x8, [sp, #24]
 a54:	ldursw	x9, [x29, #-20]
 a58:	ldrb	w10, [x8, x9]
 a5c:	cmp	w10, #0x2f
 a60:	b.ne	a68 <basename_builtin+0x174>  // b.any
 a64:	b	a6c <basename_builtin+0x178>
 a68:	b	a38 <basename_builtin+0x144>
 a6c:	ldr	x8, [sp, #24]
 a70:	ldursw	x9, [x29, #-20]
 a74:	add	x8, x8, x9
 a78:	add	x8, x8, #0x1
 a7c:	str	x8, [sp, #8]
 a80:	ldr	x8, [sp, #16]
 a84:	cbz	x8, aec <basename_builtin+0x1f8>
 a88:	ldr	x0, [sp, #16]
 a8c:	bl	7a0 <strlen@plt>
 a90:	stur	w0, [x29, #-24]
 a94:	ldr	x0, [sp, #8]
 a98:	bl	7a0 <strlen@plt>
 a9c:	stur	w0, [x29, #-20]
 aa0:	ldur	w8, [x29, #-24]
 aa4:	ldur	w9, [x29, #-20]
 aa8:	cmp	w8, w9
 aac:	b.ge	aec <basename_builtin+0x1f8>  // b.tcont
 ab0:	ldur	w8, [x29, #-20]
 ab4:	ldur	w9, [x29, #-24]
 ab8:	subs	w8, w8, w9
 abc:	stur	w8, [x29, #-28]
 ac0:	ldr	x10, [sp, #8]
 ac4:	ldursw	x11, [x29, #-28]
 ac8:	add	x0, x10, x11
 acc:	ldr	x1, [sp, #16]
 ad0:	bl	7f0 <strcmp@plt>
 ad4:	cbnz	w0, aec <basename_builtin+0x1f8>
 ad8:	ldr	x8, [sp, #8]
 adc:	ldursw	x9, [x29, #-28]
 ae0:	add	x8, x8, x9
 ae4:	mov	w10, #0x0                   	// #0
 ae8:	strb	w10, [x8]
 aec:	ldr	x1, [sp, #8]
 af0:	adrp	x0, 0 <_init-0x768>
 af4:	add	x0, x0, #0xb23
 af8:	bl	810 <printf@plt>
 afc:	stur	wzr, [x29, #-4]
 b00:	ldur	w0, [x29, #-4]
 b04:	ldp	x29, x30, [sp, #64]
 b08:	add	sp, sp, #0x50
 b0c:	ret

Disassembly of section .fini:

0000000000000b10 <_fini>:
 b10:	stp	x29, x30, [sp, #-16]!
 b14:	mov	x29, sp
 b18:	ldp	x29, x30, [sp], #16
 b1c:	ret
